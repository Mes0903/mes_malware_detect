
2ff5ac7e14fde60cc3d8ef5c8ab81c35f2e11ed0178f383b8335bb6658ead875.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42eca3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42ec6b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x402bbe
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42ecaf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42ec6b
  4010d9:	jmp    0x402bbd
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42ec7b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42ec6b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x402bbc
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401dcc
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401dcc
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401dcc
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42eca3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401dcc
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401dcc
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401dcc
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401dcc
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401dcc
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42eca3
  40130c:	test   eax,eax
  40130e:	jne    0x401dcc
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401dcc
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401dcc
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401dcc
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401dcc
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42eca3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401dcc
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401dcc
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401dcc
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401dcc
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401dcc
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42eca3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401dcc
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401dcc
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401dcc
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401dcc
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401dcc
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42eca3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401dcc
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401dcc
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401dcc
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401dcc
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401dcc
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42eca3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401dcc
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401dcc
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	jne    0x401dcc
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	push   0x7
  401774:	sub    DWORD PTR ds:0x42c010,0x560a
  40177e:	push   0x42e6eb
  401783:	call   esi
  401785:	test   eax,eax
  401787:	mov    DWORD PTR ds:0x42b008,0x3099
  401791:	jne    0x401dcc
  401797:	xor    DWORD PTR ds:0x42a01c,0x42c010
  4017a1:	push   0x8
  4017a3:	push   0x42e6fb
  4017a8:	sub    DWORD PTR ds:0x42901c,0x42c000
  4017b2:	call   esi
  4017b4:	test   eax,eax
  4017b6:	mov    DWORD PTR ds:0x42c010,0x6a70
  4017c0:	jne    0x401dcc
  4017c6:	push   0x42e70b
  4017cb:	push   edi
  4017cc:	push   edi
  4017cd:	mov    DWORD PTR ds:0x42d01c,0x630d
  4017d7:	call   DWORD PTR ds:0x42eca3
  4017dd:	sbb    DWORD PTR ds:0x429024,0x42b018
  4017e7:	test   eax,eax
  4017e9:	mov    DWORD PTR ds:0x42901c,0x686
  4017f3:	jne    0x401dcc
  4017f9:	push   0x42e71b
  4017fe:	and    DWORD PTR ds:0x42c008,0x4bbd
  401808:	push   edi
  401809:	or     DWORD PTR ds:0x429024,0x42d000
  401813:	push   edi
  401814:	call   ebx
  401816:	and    DWORD PTR ds:0x42b018,0x1774
  401820:	test   eax,eax
  401822:	jne    0x401dcc
  401828:	push   0xc
  40182a:	or     DWORD PTR ds:0x42b000,0x3dd
  401834:	push   0x42e73f
  401839:	call   esi
  40183b:	test   eax,eax
  40183d:	jne    0x401dcc
  401843:	push   0x7
  401845:	sub    DWORD PTR ds:0x429010,0x42c004
  40184f:	push   0x42e753
  401854:	or     DWORD PTR ds:0x42d014,0x42c010
  40185e:	call   esi
  401860:	or     DWORD PTR ds:0x42b010,0x42b018
  40186a:	test   eax,eax
  40186c:	jne    0x401dcc
  401872:	push   0x8
  401874:	push   0x42e763
  401879:	call   esi
  40187b:	test   eax,eax
  40187d:	jne    0x401dcc
  401883:	and    DWORD PTR ds:0x42c004,0x42900c
  40188d:	push   0x42e773
  401892:	push   edi
  401893:	push   edi
  401894:	call   DWORD PTR ds:0x42eca3
  40189a:	mov    DWORD PTR ds:0x42a004,0x7c46
  4018a4:	test   eax,eax
  4018a6:	jne    0x401dcc
  4018ac:	push   0x42e783
  4018b1:	sbb    DWORD PTR ds:0x42b010,0x42a010
  4018bb:	push   edi
  4018bc:	push   edi
  4018bd:	or     DWORD PTR ds:0x42d014,0x42900c
  4018c7:	call   ebx
  4018c9:	test   eax,eax
  4018cb:	jne    0x401dcc
  4018d1:	adc    DWORD PTR ds:0x42c000,0x429028
  4018db:	push   0xc
  4018dd:	sub    DWORD PTR ds:0x42a014,0xc65
  4018e7:	push   0x42e7a7
  4018ec:	call   esi
  4018ee:	test   eax,eax
  4018f0:	mov    DWORD PTR ds:0x42c014,0x6571
  4018fa:	jne    0x401dcc
  401900:	push   0x7
  401902:	adc    DWORD PTR ds:0x42a014,0x42b00c
  40190c:	push   0x42e7bb
  401911:	mov    DWORD PTR ds:0x42d004,0x12ce
  40191b:	call   esi
  40191d:	dec    DWORD PTR ds:0x42a010
  401923:	test   eax,eax
  401925:	mov    DWORD PTR ds:0x42b004,0x22d3
  40192f:	jne    0x401dcc
  401935:	xor    DWORD PTR ds:0x42d018,0x7580
  40193f:	push   0x8
  401941:	mov    DWORD PTR ds:0x42d014,0x4bef
  40194b:	push   0x42e7cb
  401950:	add    DWORD PTR ds:0x42b000,0x4980
  40195a:	call   esi
  40195c:	test   eax,eax
  40195e:	jne    0x401dcc
  401964:	and    DWORD PTR ds:0x42b000,0x472c
  40196e:	push   0x42e7db
  401973:	push   edi
  401974:	push   edi
  401975:	xor    DWORD PTR ds:0x42c014,0x42b018
  40197f:	call   DWORD PTR ds:0x42eca3
  401985:	or     DWORD PTR ds:0x42900c,0x429020
  40198f:	test   eax,eax
  401991:	mov    DWORD PTR ds:0x42c00c,0x6dbd
  40199b:	jne    0x401dcc
  4019a1:	not    DWORD PTR ds:0x42b00c
  4019a7:	push   0x42e7eb
  4019ac:	or     DWORD PTR ds:0x42d000,0x4414
  4019b6:	push   edi
  4019b7:	sub    DWORD PTR ds:0x429020,0x7e0
  4019c1:	push   edi
  4019c2:	xor    DWORD PTR ds:0x42d010,0x4db0
  4019cc:	call   ebx
  4019ce:	test   eax,eax
  4019d0:	jne    0x401dcc
  4019d6:	sub    DWORD PTR ds:0x42a014,0x10f4
  4019e0:	push   0xc
  4019e2:	sub    DWORD PTR ds:0x42b004,0x42d014
  4019ec:	push   0x42e80f
  4019f1:	call   esi
  4019f3:	test   eax,eax
  4019f5:	jne    0x401dcc
  4019fb:	push   0x7
  4019fd:	xor    DWORD PTR ds:0x42b000,0x360b
  401a07:	push   0x42e823
  401a0c:	call   esi
  401a0e:	test   eax,eax
  401a10:	jne    0x401dcc
  401a16:	push   0x8
  401a18:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401a22:	push   0x42e833
  401a27:	add    DWORD PTR ds:0x42d014,0x21f
  401a31:	call   esi
  401a33:	or     DWORD PTR ds:0x42d004,0x505e
  401a3d:	test   eax,eax
  401a3f:	mov    DWORD PTR ds:0x42c00c,0x1afa
  401a49:	jne    0x401dcc
  401a4f:	push   0x42e843
  401a54:	or     DWORD PTR ds:0x42b01c,0x4806
  401a5e:	push   edi
  401a5f:	push   edi
  401a60:	call   DWORD PTR ds:0x42eca3
  401a66:	or     DWORD PTR ds:0x42c018,0x6442
  401a70:	test   eax,eax
  401a72:	jne    0x401dcc
  401a78:	push   0x42e853
  401a7d:	push   edi
  401a7e:	not    DWORD PTR ds:0x42d018
  401a84:	push   edi
  401a85:	adc    DWORD PTR ds:0x429028,0x26c2
  401a8f:	call   ebx
  401a91:	sbb    DWORD PTR ds:0x42a000,0x42d010
  401a9b:	test   eax,eax
  401a9d:	mov    DWORD PTR ds:0x42b000,0x1a50
  401aa7:	jne    0x401dcc
  401aad:	adc    DWORD PTR ds:0x42c00c,0x5a53
  401ab7:	push   0xc
  401ab9:	push   0x42e877
  401abe:	or     DWORD PTR ds:0x42900c,0x964
  401ac8:	call   esi
  401aca:	sbb    DWORD PTR ds:0x429014,0x5b18
  401ad4:	test   eax,eax
  401ad6:	jne    0x401dcc
  401adc:	push   0x7
  401ade:	add    DWORD PTR ds:0x42d01c,0x42d000
  401ae8:	push   0x42e88b
  401aed:	and    DWORD PTR ds:0x42900c,0x4f3f
  401af7:	call   esi
  401af9:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401b03:	test   eax,eax
  401b05:	jne    0x401dcc
  401b0b:	sbb    DWORD PTR ds:0x429018,0xc00
  401b15:	push   0x8
  401b17:	add    DWORD PTR ds:0x42c004,0x3ea1
  401b21:	push   0x42e89b
  401b26:	call   esi
  401b28:	sub    DWORD PTR ds:0x42c000,0x352b
  401b32:	test   eax,eax
  401b34:	mov    DWORD PTR ds:0x42901c,0x47d2
  401b3e:	jne    0x401dcc
  401b44:	push   0x42e8ab
  401b49:	or     DWORD PTR ds:0x42a004,0x22e5
  401b53:	push   edi
  401b54:	push   edi
  401b55:	add    DWORD PTR ds:0x42c008,0x2ef5
  401b5f:	call   DWORD PTR ds:0x42eca3
  401b65:	test   eax,eax
  401b67:	mov    DWORD PTR ds:0x429000,0xe12
  401b71:	jne    0x401dcc
  401b77:	push   0x42e8bb
  401b7c:	inc    DWORD PTR ds:0x429008
  401b82:	push   edi
  401b83:	push   edi
  401b84:	and    DWORD PTR ds:0x429020,0x42c008
  401b8e:	call   ebx
  401b90:	mov    DWORD PTR ds:0x42d01c,0x65ff
  401b9a:	test   eax,eax
  401b9c:	jne    0x401dcc
  401ba2:	add    DWORD PTR ds:0x42d00c,0x8c2
  401bac:	push   0xc
  401bae:	and    DWORD PTR ds:0x42a010,0x429020
  401bb8:	push   0x42e8df
  401bbd:	call   esi
  401bbf:	test   eax,eax
  401bc1:	jne    0x401dcc
  401bc7:	push   0x7
  401bc9:	not    DWORD PTR ds:0x42a004
  401bcf:	push   0x42e8f3
  401bd4:	call   esi
  401bd6:	test   eax,eax
  401bd8:	jne    0x401dcc
  401bde:	push   0x8
  401be0:	push   0x42e903
  401be5:	add    DWORD PTR ds:0x429028,0x63a0
  401bef:	call   esi
  401bf1:	test   eax,eax
  401bf3:	mov    DWORD PTR ds:0x42c01c,0x185a
  401bfd:	jne    0x401dcc
  401c03:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401c0d:	push   0x42e913
  401c12:	push   edi
  401c13:	adc    DWORD PTR ds:0x42a008,0x42d004
  401c1d:	push   edi
  401c1e:	sbb    DWORD PTR ds:0x42d010,0x4b82
  401c28:	call   DWORD PTR ds:0x42eca3
  401c2e:	test   eax,eax
  401c30:	mov    DWORD PTR ds:0x42c00c,0x2dd4
  401c3a:	jne    0x401dcc
  401c40:	adc    DWORD PTR ds:0x42d004,0x42a004
  401c4a:	push   0x42e923
  401c4f:	push   edi
  401c50:	sbb    DWORD PTR ds:0x42c008,0x42b004
  401c5a:	push   edi
  401c5b:	sub    DWORD PTR ds:0x42a010,0x42b000
  401c65:	call   ebx
  401c67:	test   eax,eax
  401c69:	jne    0x401dcc
  401c6f:	inc    DWORD PTR ds:0x42b014
  401c75:	push   0xc
  401c77:	mov    DWORD PTR ds:0x42d01c,0xa60
  401c81:	push   0x42e947
  401c86:	sub    DWORD PTR ds:0x42c00c,0x3e85
  401c90:	call   esi
  401c92:	test   eax,eax
  401c94:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401c9e:	jne    0x401dcc
  401ca4:	push   0x7
  401ca6:	and    DWORD PTR ds:0x429000,0x42b000
  401cb0:	push   0x42e95b
  401cb5:	add    DWORD PTR ds:0x42b008,0x42a018
  401cbf:	call   esi
  401cc1:	test   eax,eax
  401cc3:	mov    DWORD PTR ds:0x42c014,0x2a16
  401ccd:	jne    0x401dcc
  401cd3:	add    DWORD PTR ds:0x42d000,0x429000
  401cdd:	push   0x8
  401cdf:	push   0x42e96b
  401ce4:	call   esi
  401ce6:	test   eax,eax
  401ce8:	jne    0x401dcc
  401cee:	add    DWORD PTR ds:0x42b01c,0x42a01c
  401cf8:	push   0x42e97b
  401cfd:	sbb    DWORD PTR ds:0x429018,0x3807
  401d07:	push   edi
  401d08:	adc    DWORD PTR ds:0x42c014,0x42b01c
  401d12:	push   edi
  401d13:	call   DWORD PTR ds:0x42eca3
  401d19:	xor    DWORD PTR ds:0x42c000,0x727e
  401d23:	test   eax,eax
  401d25:	mov    DWORD PTR ds:0x42900c,0x2a1e
  401d2f:	jne    0x401dcc
  401d35:	push   0x42e98b
  401d3a:	and    DWORD PTR ds:0x42a008,0x1639
  401d44:	push   edi
  401d45:	adc    DWORD PTR ds:0x429008,0x42d000
  401d4f:	push   edi
  401d50:	sbb    DWORD PTR ds:0x42c00c,0x1404
  401d5a:	call   ebx
  401d5c:	sbb    DWORD PTR ds:0x42a000,0x162a
  401d66:	test   eax,eax
  401d68:	jne    0x401dcc
  401d6e:	add    DWORD PTR ds:0x429010,0x42ec
  401d78:	push   0xc
  401d7a:	push   0x42e9af
  401d7f:	call   esi
  401d81:	or     DWORD PTR ds:0x42a014,0x42c008
  401d8b:	test   eax,eax
  401d8d:	jne    0x401dcc
  401d93:	and    DWORD PTR ds:0x42c01c,0x53f3
  401d9d:	push   0x7
  401d9f:	sub    DWORD PTR ds:0x42c000,0x429010
  401da9:	push   0x42e9c3
  401dae:	call   esi
  401db0:	xor    DWORD PTR ds:0x42d000,0x42900c
  401dba:	test   eax,eax
  401dbc:	mov    DWORD PTR ds:0x42b010,0x732d
  401dc6:	je     0x401de7
  401dcc:	sbb    DWORD PTR ds:0x429008,0x54d2
  401dd6:	xor    eax,eax
  401dd8:	mov    DWORD PTR ds:0x429010,0xb2
  401de2:	jmp    0x402bbc
  401de7:	mov    DWORD PTR [ebp-0x10],0x0
  401dee:	dec    edi
  401def:	mov    eax,DWORD PTR [ebp-0x34]
  401df2:	mov    DWORD PTR ds:0x42b004,0x3f1
  401dfc:	mov    DWORD PTR [ebp-0x34],eax
  401dff:	mov    ecx,0xf89c85b9
  401e04:	mov    DWORD PTR ds:0x42b008,0x14
  401e0e:	cmp    DWORD PTR ds:0x42b008,0x0
  401e15:	je     0x401e57
  401e1b:	cmp    DWORD PTR ds:0x42b008,0x1c
  401e22:	jne    0x401e3d
  401e28:	push   0x42b01c
  401e2d:	push   0x429028
  401e32:	push   0x42b014
  401e37:	call   DWORD PTR ds:0x42ec73
  401e3d:	xor    edi,edi
  401e3f:	xor    edi,DWORD PTR ds:0x42b008
  401e45:	dec    edi
  401e46:	mov    DWORD PTR ds:0x42b008,edi
  401e4c:	jmp    0x401e0e
  401e51:	dec    DWORD PTR ds:0x429020
  401e57:	mov    DWORD PTR [ebp-0x8],ecx
  401e5a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  401e61:	not    edi
  401e63:	lea    eax,[ebp-0x3c]
  401e66:	sbb    DWORD PTR ds:0x42b000,0x42b008
  401e70:	mov    DWORD PTR [ebp-0x2c],eax
  401e73:	mov    edx,DWORD PTR ds:0x42c000
  401e79:	add    edx,DWORD PTR ds:0x42c00c
  401e7f:	mov    DWORD PTR ds:0x42c000,edx
  401e85:	lea    eax,[ebp-0x38]
  401e88:	inc    edi
  401e89:	mov    DWORD PTR [ebp-0x18],eax
  401e8c:	adc    esi,esi
  401e8e:	mov    eax,ds:0x42e313
  401e93:	and    DWORD PTR ds:0x429014,ebx
  401e99:	mov    eax,DWORD PTR [eax+0x1c8]
  401e9f:	mov    eax,DWORD PTR [eax]
  401ea1:	mov    edi,DWORD PTR ds:0x42b010
  401ea7:	sub    edi,DWORD PTR ds:0x42d008
  401ead:	mov    DWORD PTR ds:0x42b010,edi
  401eb3:	mov    edx,DWORD PTR [ebp-0x18]
  401eb6:	and    DWORD PTR ds:0x42c00c,0x0
  401ec0:	jmp    0x401ed2
  401ec5:	mov    edi,DWORD PTR ds:0x42c00c
  401ecb:	inc    edi
  401ecc:	mov    DWORD PTR ds:0x42c00c,edi
  401ed2:	cmp    DWORD PTR ds:0x42c00c,0x12
  401ed9:	jae    0x401f21
  401edf:	cmp    DWORD PTR ds:0x42c00c,0xc
  401ee6:	jne    0x401efc
  401eec:	push   0x0
  401eee:	push   0x7fec
  401ef3:	push   DWORD PTR [ebp-0x28]
  401ef6:	call   DWORD PTR ds:0x42ec77
  401efc:	cmp    DWORD PTR ds:0x42c00c,0xb
  401f03:	jne    0x401f16
  401f09:	mov    edi,DWORD PTR ds:0x42c00c
  401f0f:	inc    edi
  401f10:	mov    DWORD PTR ds:0x42c00c,edi
  401f16:	jmp    0x401ec5
  401f1b:	xor    edi,DWORD PTR ds:0x42d01c
  401f21:	mov    esi,0x7510899
  401f26:	movzx  edi,WORD PTR ds:0x42b000
  401f2d:	add    DWORD PTR ds:0x42d010,edi
  401f33:	xor    eax,esi
  401f35:	movzx  edi,BYTE PTR ds:0x429008
  401f3c:	xor    DWORD PTR ds:0x429010,edi
  401f42:	mov    edi,0x3272e0
  401f47:	sub    DWORD PTR ds:0x42a004,0x2e7b
  401f51:	add    eax,edi
  401f53:	mov    DWORD PTR ds:0x429010,0xa86
  401f5d:	mov    DWORD PTR [edx],eax
  401f5f:	mov    eax,ds:0x42eaab
  401f64:	cmp    eax,0x312bc9f6
  401f69:	mov    DWORD PTR ds:0x42d014,0x7fe
  401f73:	jne    0x402159
  401f79:	mov    eax,DWORD PTR [ebp-0x8]
  401f7c:	and    DWORD PTR ds:0x42900c,0x0
  401f86:	mov    edx,DWORD PTR ds:0x42900c
  401f8c:	inc    edx
  401f8d:	mov    DWORD PTR ds:0x42900c,edx
  401f93:	cmp    DWORD PTR ds:0x42900c,0x1e
  401f9a:	jne    0x401fc5
  401fa0:	push   DWORD PTR [ebp-0x1c]
  401fa3:	push   0x1928
  401fa8:	push   0x42c014
  401fad:	push   0x166d
  401fb2:	push   0x7171
  401fb7:	push   0x2c0a
  401fbc:	push   DWORD PTR [ebp-0x1c]
  401fbf:	call   DWORD PTR ds:0x42ec7f
  401fc5:	cmp    DWORD PTR ds:0x42900c,0x1a
  401fcc:	jb     0x401f86
  401fd2:	and    DWORD PTR ds:0x42d014,0x0
  401fdc:	jmp    0x401fee
  401fe1:	mov    edx,DWORD PTR ds:0x42d014
  401fe7:	inc    edx
  401fe8:	mov    DWORD PTR ds:0x42d014,edx
  401fee:	cmp    DWORD PTR ds:0x42d014,0x1e
  401ff5:	jae    0x402082
  401ffb:	cmp    DWORD PTR ds:0x42d014,0x20
  402002:	jne    0x402021
  402008:	push   0x42c008
  40200d:	push   DWORD PTR [ebp-0xc]
  402010:	push   0x42e000
  402015:	push   DWORD PTR [ebp-0x20]
  402018:	push   DWORD PTR [ebp-0x20]
  40201b:	call   DWORD PTR ds:0x42ec83
  402021:	jmp    0x401fe1
  402026:	and    DWORD PTR ds:0x42d008,0x0
  402030:	mov    ebx,DWORD PTR ds:0x42d008
  402036:	inc    ebx
  402037:	mov    DWORD PTR ds:0x42d008,ebx
  40203d:	cmp    DWORD PTR ds:0x42d008,0x6
  402044:	jne    0x402055
  40204a:	push   0x429000
  40204f:	call   DWORD PTR ds:0x42ec8b
  402055:	cmp    DWORD PTR ds:0x42d008,0x5
  40205c:	jne    0x40206f
  402062:	mov    ebx,DWORD PTR ds:0x42d008
  402068:	inc    ebx
  402069:	mov    DWORD PTR ds:0x42d008,ebx
  40206f:	cmp    DWORD PTR ds:0x42d008,0x11
  402076:	jb     0x402030
  40207c:	sbb    edx,0x8e9
  402082:	mov    edx,DWORD PTR ds:0x42e313
  402088:	mov    edx,DWORD PTR [edx+0x198]
  40208e:	xor    DWORD PTR ds:0x42a018,edx
  402094:	xor    eax,esi
  402096:	and    DWORD PTR ds:0x42c00c,0x0
  4020a0:	jmp    0x4020b2
  4020a5:	mov    ebx,DWORD PTR ds:0x42c00c
  4020ab:	inc    ebx
  4020ac:	mov    DWORD PTR ds:0x42c00c,ebx
  4020b2:	cmp    DWORD PTR ds:0x42c00c,0x1f
  4020b9:	jae    0x4020eb
  4020bf:	cmp    DWORD PTR ds:0x42c00c,0x21
  4020c6:	jne    0x4020e0
  4020cc:	push   DWORD PTR [ebp-0x18]
  4020cf:	push   DWORD PTR [ebp-0xc]
  4020d2:	push   0x42a000
  4020d7:	push   DWORD PTR [ebp-0x24]
  4020da:	call   DWORD PTR ds:0x42ec8f
  4020e0:	jmp    0x4020a5
  4020e5:	adc    ebx,DWORD PTR ds:0x429020
  4020eb:	add    eax,edi
  4020ed:	mov    ebx,DWORD PTR ds:0x42b004
  4020f3:	sbb    DWORD PTR ds:0x42a010,ebx
  4020f9:	mov    DWORD PTR [edx],eax
  4020fb:	and    DWORD PTR ds:0x429004,0x0
  402105:	mov    eax,ds:0x429004
  40210a:	inc    eax
  40210b:	mov    ds:0x429004,eax
  402110:	cmp    DWORD PTR ds:0x429004,0x27
  402117:	jne    0x402123
  40211d:	call   DWORD PTR ds:0x42ec93
  402123:	cmp    DWORD PTR ds:0x429004,0x1a
  40212a:	jb     0x402105
  402130:	mov    eax,DWORD PTR [ebp-0x8]
  402133:	add    ebx,0x5fb6
  402139:	xor    eax,esi
  40213b:	movzx  ebx,WORD PTR ds:0x42c008
  402142:	or     DWORD PTR ds:0x42c004,ebx
  402148:	add    eax,edi
  40214a:	adc    DWORD PTR ds:0x42c014,0x5b68
  402154:	mov    ds:0x42eaab,eax
  402159:	and    eax,DWORD PTR ds:0x42d008
  40215f:	mov    eax,ds:0x42e313
  402164:	mov    eax,DWORD PTR [eax+0x18c]
  40216a:	or     DWORD PTR ds:0x42b000,0x2b6e
  402174:	mov    eax,DWORD PTR [eax]
  402176:	mov    ebx,DWORD PTR ds:0x418f49
  40217c:	mov    ebx,DWORD PTR [ebx]
  40217e:	sbb    DWORD PTR ds:0x429018,ebx
  402184:	mov    DWORD PTR [ebp-0x7c],eax
  402187:	and    DWORD PTR ds:0x429020,0x0
  402191:	mov    eax,ds:0x429020
  402196:	inc    eax
  402197:	mov    ds:0x429020,eax
  40219c:	cmp    DWORD PTR ds:0x429020,0x24
  4021a3:	jne    0x4021cd
  4021a9:	push   0x6154
  4021ae:	push   0x429028
  4021b3:	push   0x8833
  4021b8:	push   0x2ef1
  4021bd:	push   0x2977
  4021c2:	push   0x6125
  4021c7:	call   DWORD PTR ds:0x42ec97
  4021cd:	cmp    DWORD PTR ds:0x429020,0x18
  4021d4:	jb     0x402191
  4021da:	mov    ebx,0xf89c85bd
  4021df:	neg    eax
  4021e1:	mov    DWORD PTR [ebp-0x10],ebx
  4021e4:	mov    DWORD PTR ds:0x429020,0x18
  4021ee:	cmp    DWORD PTR ds:0x429020,0x0
  4021f5:	je     0x402224
  4021fb:	cmp    DWORD PTR ds:0x429020,0x26
  402202:	jne    0x40220e
  402208:	call   DWORD PTR ds:0x42ec9b
  40220e:	mov    eax,ds:0x429020
  402213:	dec    eax
  402214:	mov    ds:0x429020,eax
  402219:	jmp    0x4021ee
  40221e:	or     DWORD PTR ds:0x42a004,ecx
  402224:	mov    DWORD PTR [ebp-0x10],ebx
  402227:	and    DWORD PTR ds:0x42b014,0x0
  402231:	jmp    0x402241
  402236:	mov    eax,ds:0x42b014
  40223b:	inc    eax
  40223c:	mov    ds:0x42b014,eax
  402241:	cmp    DWORD PTR ds:0x42b014,0x1c
  402248:	jae    0x402279
  40224e:	cmp    DWORD PTR ds:0x42b014,0x22
  402255:	jne    0x40226e
  40225b:	push   0x62db
  402260:	push   0x42b018
  402265:	push   DWORD PTR [ebp-0x20]
  402268:	call   DWORD PTR ds:0x42ec9f
  40226e:	jmp    0x402236
  402273:	sbb    eax,DWORD PTR ds:0x42b00c
  402279:	mov    DWORD PTR [ebp-0x10],ebx
  40227c:	movzx  eax,BYTE PTR ds:0x429000
  402283:	add    eax,DWORD PTR ds:0x42b01c
  402289:	mov    ds:0x429000,eax
  40228e:	mov    DWORD PTR [ebp-0x18],ecx
  402291:	xor    DWORD PTR ds:0x42901c,ecx
  402297:	mov    DWORD PTR [ebp-0x10],ebx
  40229a:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  4022a1:	and    DWORD PTR ds:0x42c018,0x0
  4022ab:	mov    eax,ds:0x42c018
  4022b0:	inc    eax
  4022b1:	mov    ds:0x42c018,eax
  4022b6:	cmp    DWORD PTR ds:0x42c018,0xe
  4022bd:	jne    0x4022d8
  4022c3:	push   0x42e0b3
  4022c8:	push   0x42e0f9
  4022cd:	push   0x400000
  4022d2:	call   DWORD PTR ds:0x42eca7
  4022d8:	cmp    DWORD PTR ds:0x42c018,0xd
  4022df:	jne    0x4022f0
  4022e5:	mov    eax,ds:0x42c018
  4022ea:	inc    eax
  4022eb:	mov    ds:0x42c018,eax
  4022f0:	cmp    DWORD PTR ds:0x42c018,0x18
  4022f7:	jb     0x4022ab
  4022fd:	and    DWORD PTR ds:0x42a008,0x0
  402307:	jmp    0x402317
  40230c:	mov    eax,ds:0x42a008
  402311:	inc    eax
  402312:	mov    ds:0x42a008,eax
  402317:	cmp    DWORD PTR ds:0x42a008,0x12
  40231e:	jae    0x402362
  402324:	cmp    DWORD PTR ds:0x42a008,0x4
  40232b:	jne    0x40233c
  402331:	push   0x42e0b3
  402336:	call   DWORD PTR ds:0x42ecab
  40233c:	cmp    DWORD PTR ds:0x42a008,0x3
  402343:	jne    0x402357
  402349:	xor    eax,eax
  40234b:	add    eax,DWORD PTR ds:0x42a008
  402351:	inc    eax
  402352:	mov    ds:0x42a008,eax
  402357:	jmp    0x40230c
  40235c:	sub    DWORD PTR ds:0x429010,ebx
  402362:	mov    eax,DWORD PTR [ebp-0x8]
  402365:	xor    eax,esi
  402367:	sub    DWORD PTR ds:0x42d004,0x3268
  402371:	add    eax,edi
  402373:	mov    DWORD PTR ds:0x42901c,0x7c76
  40237d:	jmp    0x40245e
  402382:	mov    eax,DWORD PTR [ebp-0xc]
  402385:	mov    ecx,DWORD PTR [ebp-0x1c]
  402388:	xor    eax,esi
  40238a:	and    DWORD PTR ds:0x42a01c,0x42c014
  402394:	lea    eax,[eax+ecx*1+0x3272e0]
  40239b:	push   eax
  40239c:	mov    eax,DWORD PTR [ebp-0x18]
  40239f:	or     DWORD PTR ds:0x42d008,0x79cb
  4023a9:	xor    eax,esi
  4023ab:	or     DWORD PTR ds:0x42b014,0x429004
  4023b5:	lea    eax,[ebp+eax*1+0x3272e8]
  4023bc:	push   eax
  4023bd:	mov    eax,ds:0x42e313
  4023c2:	add    DWORD PTR ds:0x42c010,0x2a0c
  4023cc:	push   DWORD PTR [eax+0x1bc]
  4023d2:	sub    DWORD PTR ds:0x429014,0x775c
  4023dc:	call   0x402bd1
  4023e1:	and    ecx,DWORD PTR ds:0x42b00c
  4023e7:	mov    eax,DWORD PTR [ebp-0xc]
  4023ea:	dec    DWORD PTR ds:0x42c00c
  4023f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4023f3:	and    DWORD PTR ds:0x429014,0x0
  4023fd:	jmp    0x40240f
  402402:	mov    edx,DWORD PTR ds:0x429014
  402408:	inc    edx
  402409:	mov    DWORD PTR ds:0x429014,edx
  40240f:	cmp    DWORD PTR ds:0x429014,0x1e
  402416:	jae    0x402455
  40241c:	cmp    DWORD PTR ds:0x429014,0x6
  402423:	jne    0x402434
  402429:	push   0x42c010
  40242e:	call   DWORD PTR ds:0x42ecb3
  402434:	cmp    DWORD PTR ds:0x429014,0x5
  40243b:	jne    0x402450
  402441:	xor    edx,edx
  402443:	add    edx,DWORD PTR ds:0x429014
  402449:	inc    edx
  40244a:	mov    DWORD PTR ds:0x429014,edx
  402450:	jmp    0x402402
  402455:	xor    eax,esi
  402457:	lea    eax,[ecx+eax*1+0x3272e0]
  40245e:	sub    ecx,ecx
  402460:	mov    ecx,DWORD PTR [ebp-0xc]
  402463:	mov    edx,DWORD PTR [ebp-0xc]
  402466:	mov    DWORD PTR ds:0x42c014,0x77e
  402470:	xor    edx,esi
  402472:	add    DWORD PTR ds:0x42d014,0x42c014
  40247c:	xor    ecx,esi
  40247e:	add    ecx,edx
  402480:	sbb    DWORD PTR ds:0x42d000,0x43eb
  40248a:	mov    edx,DWORD PTR [ebp-0xc]
  40248d:	adc    DWORD PTR ds:0x42b01c,0x42c018
  402497:	xor    edx,esi
  402499:	lea    ecx,[ecx+edx*1+0x9758a0]
  4024a0:	mov    DWORD PTR ds:0x42b008,0xdf3
  4024aa:	mov    DWORD PTR [ebp-0x1c],eax
  4024ad:	cmp    eax,ecx
  4024af:	jbe    0x402382
  4024b5:	mov    eax,DWORD PTR [ebp+0xc]
  4024b8:	mov    ds:0x42e197,eax
  4024bd:	mov    eax,DWORD PTR [ebp+0x10]
  4024c0:	mov    DWORD PTR ds:0x42d010,0x1c
  4024ca:	cmp    DWORD PTR ds:0x42d010,0x0
  4024d1:	je     0x402527
  4024d7:	cmp    DWORD PTR ds:0x42d010,0xf
  4024de:	jne    0x4024f9
  4024e4:	push   0x42900c
  4024e9:	push   0x42900c
  4024ee:	push   0x429018
  4024f3:	call   DWORD PTR ds:0x42ec73
  4024f9:	cmp    DWORD PTR ds:0x42d010,0x10
  402500:	jne    0x402513
  402506:	mov    ecx,DWORD PTR ds:0x42d010
  40250c:	dec    ecx
  40250d:	mov    DWORD PTR ds:0x42d010,ecx
  402513:	xor    ecx,ecx
  402515:	or     ecx,DWORD PTR ds:0x42d010
  40251b:	dec    ecx
  40251c:	mov    DWORD PTR ds:0x42d010,ecx
  402522:	jmp    0x4024ca
  402527:	mov    ds:0x42e3eb,eax
  40252c:	mov    eax,ds:0x42e197
  402531:	mov    ecx,DWORD PTR [ebp-0x2c]
  402534:	sub    eax,edi
  402536:	xor    eax,esi
  402538:	mov    DWORD PTR [ecx],eax
  40253a:	mov    eax,DWORD PTR [ebp-0x34]
  40253d:	cmp    eax,0xf89c85b9
  402542:	jne    0x40261f
  402548:	lea    eax,[ebp-0x48]
  40254b:	mov    DWORD PTR [ebp-0x9c],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x48],eax
  402557:	mov    eax,DWORD PTR [ebp-0x48]
  40255a:	test   eax,eax
  40255c:	je     0x402ba1
  402562:	mov    eax,DWORD PTR [ebp-0x24]
  402565:	mov    eax,DWORD PTR [ebp-0xc]
  402568:	mov    eax,DWORD PTR [ebp-0x8]
  40256b:	mov    DWORD PTR [ebp+0xc],eax
  40256e:	mov    eax,eax
  402570:	mov    eax,ds:0x42e313
  402575:	mov    eax,DWORD PTR [eax+0x1c8]
  40257b:	mov    eax,DWORD PTR [eax]
  40257d:	cdq    
  40257e:	mov    ebx,eax
  402580:	mov    eax,0xfabdbee9
  402585:	add    ebx,eax
  402587:	adc    edx,0xffffffff
  40258a:	and    DWORD PTR [ebp-0x10],0x0
  40258e:	xor    edx,0x0
  402591:	mov    DWORD PTR [ebp-0x6c],edx
  402594:	mov    edx,DWORD PTR [ebp+0xc]
  402597:	mov    DWORD PTR [ebp-0x14],edx
  40259a:	mov    ecx,0x8a29a12b
  40259f:	xor    ebx,ecx
  4025a1:	add    DWORD PTR [ebp-0x14],eax
  4025a4:	mov    edx,DWORD PTR [ebp-0x14]
  4025a7:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ab:	xor    edx,ecx
  4025ad:	mov    DWORD PTR [ebp-0x58],edx
  4025b0:	mov    edx,DWORD PTR [ebp-0x10]
  4025b3:	xor    edx,0x0
  4025b6:	mov    DWORD PTR [ebp-0x54],edx
  4025b9:	cmp    DWORD PTR [ebp-0x58],ebx
  4025bc:	jne    0x4025ce
  4025c2:	mov    edx,DWORD PTR [ebp-0x6c]
  4025c5:	cmp    DWORD PTR [ebp-0x54],edx
  4025c8:	je     0x4025fd
  4025ce:	mov    edx,DWORD PTR ds:0x42e313
  4025d4:	mov    edx,DWORD PTR [edx+0x1c0]
  4025da:	mov    edx,DWORD PTR [edx]
  4025dc:	xor    ebx,ebx
  4025de:	add    edx,eax
  4025e0:	adc    ebx,0xffffffff
  4025e3:	xor    edx,ecx
  4025e5:	xor    ebx,0x0
  4025e8:	cmp    edx,0x70941fc1
  4025ee:	jne    0x402ba1
  4025f4:	cmp    ebx,0xffffffff
  4025f7:	jne    0x402ba1
  4025fd:	mov    edx,DWORD PTR ds:0x42e38f
  402603:	mov    ebx,DWORD PTR ds:0x42e397
  402609:	xor    edx,ebx
  40260b:	mov    DWORD PTR ds:0x42e38f,edx
  402611:	mov    ebx,DWORD PTR ds:0x42e38f
  402617:	mov    edx,DWORD PTR [ebp-0x48]
  40261a:	jmp    0x402b60
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	cmp    eax,0xf89c85b8
  402627:	je     0x402684
  40262d:	mov    eax,DWORD PTR [ebp-0x8]
  402630:	mov    ecx,DWORD PTR [ebp-0x38]
  402633:	xor    eax,esi
  402635:	add    eax,edi
  402637:	cmp    eax,ecx
  402639:	je     0x402684
  40263f:	mov    eax,ds:0x42e313
  402644:	mov    eax,DWORD PTR [eax+0x194]
  40264a:	mov    ecx,DWORD PTR [eax]
  40264c:	mov    eax,DWORD PTR [ecx+0x3c]
  40264f:	push   DWORD PTR ds:0x42e3eb
  402655:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402659:	push   DWORD PTR ds:0x42e197
  40265f:	add    eax,ecx
  402661:	mov    ecx,DWORD PTR ds:0x42e313
  402667:	mov    ecx,DWORD PTR [ecx+0x194]
  40266d:	push   DWORD PTR [ecx]
  40266f:	call   eax
  402671:	mov    ecx,DWORD PTR ds:0x42e313
  402677:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40267d:	mov    DWORD PTR [ecx],eax
  40267f:	jmp    0x402ba1
  402684:	mov    eax,DWORD PTR [ebp-0x8]
  402687:	mov    ecx,DWORD PTR [ebp-0x7c]
  40268a:	xor    eax,esi
  40268c:	add    eax,edi
  40268e:	cmp    eax,ecx
  402690:	jne    0x402a61
  402696:	mov    eax,DWORD PTR [ebp-0x8]
  402699:	mov    ecx,DWORD PTR ds:0x42e313
  40269f:	mov    ecx,DWORD PTR [ecx+0x198]
  4026a5:	xor    eax,esi
  4026a7:	add    eax,edi
  4026a9:	cmp    eax,DWORD PTR [ecx]
  4026ab:	jne    0x4026ca
  4026b1:	mov    eax,DWORD PTR [ebp-0x8]
  4026b4:	push   0xf89c85b9
  4026b9:	xor    eax,esi
  4026bb:	add    eax,edi
  4026bd:	push   eax
  4026be:	push   ebx
  4026bf:	push   DWORD PTR [ebp-0xc]
  4026c2:	push   DWORD PTR [ebp-0x8]
  4026c5:	call   0x40c7f6
  4026ca:	mov    eax,DWORD PTR [ebp-0xc]
  4026cd:	mov    DWORD PTR [ebp-0x40],eax
  4026d0:	mov    eax,DWORD PTR [ebp-0x8]
  4026d3:	mov    DWORD PTR [ebp-0x1c],eax
  4026d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4026d9:	xor    eax,esi
  4026db:	add    eax,edi
  4026dd:	mov    DWORD PTR [ebp+0x10],eax
  4026e0:	mov    eax,ds:0x42e193
  4026e5:	mov    eax,DWORD PTR [eax]
  4026e7:	mov    DWORD PTR [ebp+0x10],eax
  4026ea:	mov    eax,ds:0x42e39b
  4026ef:	mov    eax,DWORD PTR [eax]
  4026f1:	mov    DWORD PTR [ebp-0x18],eax
  4026f4:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4026fb:	mov    eax,DWORD PTR [ebp+0xc]
  4026fe:	xor    eax,esi
  402700:	add    eax,edi
  402702:	mov    DWORD PTR [ebp+0xc],eax
  402705:	mov    eax,ds:0x42e313
  40270a:	mov    DWORD PTR [ebp+0xc],eax
  40270d:	mov    eax,DWORD PTR [ebp+0x10]
  402710:	mov    DWORD PTR [ebp+0xc],eax
  402713:	mov    eax,DWORD PTR [ebp+0xc]
  402716:	push   0x4
  402718:	pop    ecx
  402719:	sub    ecx,eax
  40271b:	add    ecx,DWORD PTR [ebp-0x18]
  40271e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  402725:	mov    DWORD PTR [ebp+0x10],ecx
  402728:	mov    DWORD PTR [ebp-0xe4],ebx
  40272e:	mov    eax,DWORD PTR [ebp+0xc]
  402731:	mov    DWORD PTR [ebp-0xe0],eax
  402737:	mov    eax,DWORD PTR [ebp+0x10]
  40273a:	mov    DWORD PTR [ebp-0xdc],eax
  402740:	mov    eax,DWORD PTR [ebp-0x2c]
  402743:	xor    eax,esi
  402745:	add    eax,edi
  402747:	mov    DWORD PTR [ebp-0xd8],eax
  40274d:	lea    eax,[ebp-0x88]
  402753:	mov    DWORD PTR [ebp-0xd4],eax
  402759:	mov    eax,DWORD PTR [ebp-0xe4]
  40275f:	xor    eax,esi
  402761:	add    eax,edi
  402763:	mov    DWORD PTR [ebp-0xe4],eax
  402769:	lea    eax,[ebp-0xe4]
  40276f:	push   eax
  402770:	mov    eax,DWORD PTR [ebp-0x40]
  402773:	xor    eax,esi
  402775:	add    eax,edi
  402777:	push   eax
  402778:	mov    eax,ds:0x42e333
  40277d:	push   0x42e289
  402782:	push   DWORD PTR [eax]
  402784:	call   0x405286
  402789:	mov    eax,DWORD PTR [ebp+0xc]
  40278c:	mov    ecx,DWORD PTR [ebp+0x10]
  40278f:	mov    DWORD PTR [ebp-0x84],ecx
  402795:	mov    ecx,DWORD PTR [ebp-0x1c]
  402798:	xor    ecx,esi
  40279a:	mov    DWORD PTR [ebp-0x18],eax
  40279d:	add    ecx,edi
  40279f:	jmp    0x402a02
  4027a4:	lea    edx,[ecx+eax*1]
  4027a7:	mov    DWORD PTR [ebp+0x10],edx
  4027aa:	mov    edx,DWORD PTR [ebp-0x84]
  4027b0:	sub    edx,ecx
  4027b2:	mov    DWORD PTR [ebp+0xc],edx
  4027b5:	mov    edx,DWORD PTR [ebp+0xc]
  4027b8:	mov    DWORD PTR [ebp-0x4c],edx
  4027bb:	mov    edx,DWORD PTR [ebp+0x10]
  4027be:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4027c5:	mov    DWORD PTR [ebp-0x6c],edx
  4027c8:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4027cf:	mov    edx,DWORD PTR [ebp-0x50]
  4027d2:	xor    edx,esi
  4027d4:	add    edx,edi
  4027d6:	mov    DWORD PTR [ebp+0x10],edx
  4027d9:	mov    edx,DWORD PTR [ebp-0x50]
  4027dc:	xor    edx,esi
  4027de:	add    edx,edi
  4027e0:	mov    DWORD PTR [ebp+0xc],edx
  4027e3:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4027ea:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4027f1:	mov    edx,DWORD PTR [ebp-0x50]
  4027f4:	mov    ebx,DWORD PTR [ebp-0x4c]
  4027f7:	xor    edx,esi
  4027f9:	add    edx,edi
  4027fb:	cmp    ebx,edx
  4027fd:	je     0x4029f6
  402803:	mov    eax,DWORD PTR [ebp-0x20]
  402806:	xor    eax,esi
  402808:	mov    edx,0xffcd8d20
  40280d:	sub    edx,eax
  40280f:	add    edx,DWORD PTR [ebp-0x4c]
  402812:	mov    eax,DWORD PTR [ebp-0x20]
  402815:	mov    ebx,DWORD PTR [ebp+0x10]
  402818:	xor    eax,esi
  40281a:	add    eax,edi
  40281c:	imul   eax,ebx
  40281f:	cmp    eax,edx
  402821:	ja     0x4029f3
  402827:	mov    edx,DWORD PTR [ebp+0x10]
  40282a:	mov    eax,DWORD PTR [ebp-0x4c]
  40282d:	mov    ebx,DWORD PTR [ebp-0x68]
  402830:	sub    eax,edx
  402832:	xor    ebx,esi
  402834:	xor    edx,edx
  402836:	add    ebx,edi
  402838:	div    ebx
  40283a:	mov    DWORD PTR [ebp+0xc],eax
  40283d:	mov    eax,DWORD PTR [ebp-0x74]
  402840:	mov    edx,DWORD PTR [ebp+0xc]
  402843:	xor    eax,esi
  402845:	add    eax,edi
  402847:	cmp    edx,eax
  402849:	jbe    0x402859
  40284f:	mov    eax,DWORD PTR [ebp-0x74]
  402852:	xor    eax,esi
  402854:	add    eax,edi
  402856:	mov    DWORD PTR [ebp+0xc],eax
  402859:	mov    eax,DWORD PTR [ebp-0x68]
  40285c:	mov    edx,DWORD PTR [ebp+0xc]
  40285f:	xor    eax,esi
  402861:	add    eax,edi
  402863:	imul   eax,edx
  402866:	mov    DWORD PTR [ebp+0xc],eax
  402869:	mov    eax,DWORD PTR [ebp-0x50]
  40286c:	mov    edx,DWORD PTR [ebp+0xc]
  40286f:	xor    eax,esi
  402871:	add    eax,edi
  402873:	cmp    edx,eax
  402875:	je     0x4029dc
  40287b:	mov    eax,DWORD PTR [ebp+0xc]
  40287e:	mov    DWORD PTR [ebp-0x34],eax
  402881:	mov    eax,DWORD PTR [ebp+0x10]
  402884:	add    eax,DWORD PTR [ebp-0x6c]
  402887:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40288e:	mov    DWORD PTR [ebp-0x30],eax
  402891:	mov    eax,0xf89c85b8
  402896:	mov    DWORD PTR [ebp-0x5c],eax
  402899:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4028a0:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4028a7:	mov    DWORD PTR [ebp-0x28],eax
  4028aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4028ad:	xor    eax,esi
  4028af:	add    eax,edi
  4028b1:	jmp    0x402998
  4028b6:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4028bd:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4028c4:	mov    eax,DWORD PTR [ebp-0x28]
  4028c7:	mov    edx,DWORD PTR [ebp+0xc]
  4028ca:	xor    eax,esi
  4028cc:	add    eax,edi
  4028ce:	imul   eax,edx
  4028d1:	mov    edx,DWORD PTR [ebp-0x30]
  4028d4:	mov    al,BYTE PTR [eax+edx*1]
  4028d7:	mov    BYTE PTR [ebp-0x1],al
  4028da:	mov    eax,DWORD PTR [ebp-0x28]
  4028dd:	mov    edx,DWORD PTR [ebp+0xc]
  4028e0:	xor    eax,esi
  4028e2:	add    eax,edi
  4028e4:	imul   eax,edx
  4028e7:	mov    edx,DWORD PTR [ebp-0x54]
  4028ea:	xor    edx,esi
  4028ec:	add    eax,edx
  4028ee:	mov    edx,DWORD PTR [ebp-0x30]
  4028f1:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4028f9:	mov    edx,DWORD PTR [ebp-0x78]
  4028fc:	xor    edx,esi
  4028fe:	lea    eax,[edx+eax*1+0x3272e0]
  402905:	movzx  edx,BYTE PTR [ebp-0x1]
  402909:	xor    edx,eax
  40290b:	mov    BYTE PTR [ebp-0x1],dl
  40290e:	mov    al,BYTE PTR [ebp-0x1]
  402911:	mov    edx,DWORD PTR [ebp-0x28]
  402914:	mov    ebx,DWORD PTR [ebp+0xc]
  402917:	xor    edx,esi
  402919:	add    edx,edi
  40291b:	imul   edx,ebx
  40291e:	mov    ebx,DWORD PTR [ebp-0x30]
  402921:	mov    BYTE PTR [edx+ebx*1],al
  402924:	mov    eax,DWORD PTR [ebp-0x28]
  402927:	mov    edx,DWORD PTR [ebp+0xc]
  40292a:	xor    eax,esi
  40292c:	add    eax,edi
  40292e:	imul   eax,edx
  402931:	mov    edx,DWORD PTR [ebp-0x30]
  402934:	mov    al,BYTE PTR [eax+edx*1]
  402937:	mov    BYTE PTR [ebp-0x1],al
  40293a:	mov    eax,DWORD PTR [ebp-0x28]
  40293d:	mov    edx,DWORD PTR [ebp+0xc]
  402940:	xor    eax,esi
  402942:	add    eax,edi
  402944:	imul   eax,edx
  402947:	mov    edx,DWORD PTR [ebp-0x5c]
  40294a:	xor    edx,esi
  40294c:	add    eax,edx
  40294e:	mov    edx,DWORD PTR [ebp-0x30]
  402951:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402959:	mov    edx,DWORD PTR [ebp-0x80]
  40295c:	xor    edx,esi
  40295e:	lea    eax,[edx+eax*1+0x3272e0]
  402965:	movzx  edx,BYTE PTR [ebp-0x1]
  402969:	xor    edx,eax
  40296b:	mov    BYTE PTR [ebp-0x1],dl
  40296e:	mov    al,BYTE PTR [ebp-0x1]
  402971:	mov    edx,DWORD PTR [ebp-0x28]
  402974:	mov    ebx,DWORD PTR [ebp+0xc]
  402977:	xor    edx,esi
  402979:	add    edx,edi
  40297b:	imul   edx,ebx
  40297e:	mov    ebx,DWORD PTR [ebp-0x30]
  402981:	mov    BYTE PTR [edx+ebx*1],al
  402984:	mov    eax,DWORD PTR [ebp-0x10]
  402987:	mov    edx,DWORD PTR [ebp-0x5c]
  40298a:	xor    eax,esi
  40298c:	xor    edx,esi
  40298e:	add    eax,edi
  402990:	add    edx,edi
  402992:	imul   eax,edx
  402995:	add    eax,DWORD PTR [ebp+0xc]
  402998:	mov    DWORD PTR [ebp+0xc],eax
  40299b:	mov    eax,DWORD PTR [ebp+0xc]
  40299e:	mov    edx,DWORD PTR [ebp-0x34]
  4029a1:	cmp    edx,eax
  4029a3:	jb     0x4028b6
  4029a9:	mov    eax,DWORD PTR [ebp-0x5c]
  4029ac:	mov    edx,DWORD PTR [ebp-0x34]
  4029af:	xor    eax,esi
  4029b1:	add    eax,edi
  4029b3:	imul   eax,edx
  4029b6:	mov    edx,DWORD PTR [ebp-0x2c]
  4029b9:	xor    edx,esi
  4029bb:	add    edx,edi
  4029bd:	or     eax,edx
  4029bf:	mov    edx,DWORD PTR [ebp-0x20]
  4029c2:	xor    edx,esi
  4029c4:	add    eax,edx
  4029c6:	mov    edx,DWORD PTR [ebp-0x20]
  4029c9:	xor    edx,esi
  4029cb:	add    eax,edx
  4029cd:	mov    edx,DWORD PTR [ebp+0x10]
  4029d0:	lea    eax,[eax+edx*1+0x64e5c0]
  4029d7:	jmp    0x4029eb
  4029dc:	mov    eax,DWORD PTR [ebp-0x20]
  4029df:	mov    edx,DWORD PTR [ebp+0x10]
  4029e2:	xor    eax,esi
  4029e4:	lea    eax,[eax+edx*1+0x3272e0]
  4029eb:	mov    DWORD PTR [ebp+0x10],eax
  4029ee:	jmp    0x402803
  4029f3:	mov    eax,DWORD PTR [ebp-0x18]
  4029f6:	mov    edx,DWORD PTR [ebp-0x40]
  4029f9:	xor    edx,esi
  4029fb:	lea    ecx,[ecx+edx*1+0x3272e0]
  402a02:	lea    edx,[ecx-0x3272e0]
  402a08:	xor    edx,esi
  402a0a:	cmp    edx,0xf89c95b9
  402a10:	jne    0x4027a4
  402a16:	mov    ecx,DWORD PTR [ebp-0x1c]
  402a19:	mov    edx,DWORD PTR [ebp-0x40]
  402a1c:	mov    ebx,DWORD PTR [ebp-0x1c]
  402a1f:	xor    edx,esi
  402a21:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  402a28:	xor    ecx,esi
  402a2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402a31:	xor    ebx,esi
  402a33:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402a3a:	mov    edx,DWORD PTR [ebp-0x40]
  402a3d:	xor    edx,esi
  402a3f:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  402a46:	mov    eax,DWORD PTR [ebp-0x40]
  402a49:	mov    eax,DWORD PTR [ebp-0x8]
  402a4c:	xor    eax,esi
  402a4e:	add    eax,edi
  402a50:	mov    ds:0x42e397,eax
  402a55:	mov    eax,DWORD PTR [ebp-0x8]
  402a58:	xor    eax,esi
  402a5a:	add    eax,edi
  402a5c:	mov    ds:0x42e38f,eax
  402a61:	lea    eax,[ebp-0x44]
  402a64:	mov    DWORD PTR [ebp-0x90],eax
  402a6a:	lea    eax,[ebp+0x4]
  402a6d:	mov    DWORD PTR [ebp-0x44],eax
  402a70:	mov    eax,DWORD PTR [ebp-0x44]
  402a73:	test   eax,eax
  402a75:	je     0x402ba1
  402a7b:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  402a85:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402a8f:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402a99:	mov    DWORD PTR [ebp-0x94],0x72670a11
  402aa3:	call   0x40c40e
  402aa8:	mov    eax,DWORD PTR [ebp-0x24]
  402aab:	mov    eax,DWORD PTR [ebp-0xc]
  402aae:	mov    eax,DWORD PTR [ebp-0x8]
  402ab1:	mov    DWORD PTR [ebp+0xc],eax
  402ab4:	mov    eax,eax
  402ab6:	mov    eax,ds:0x42e313
  402abb:	mov    eax,DWORD PTR [eax+0x1c8]
  402ac1:	mov    eax,DWORD PTR [eax]
  402ac3:	cdq    
  402ac4:	mov    ebx,eax
  402ac6:	mov    eax,0xfabdbee9
  402acb:	add    ebx,eax
  402acd:	adc    edx,0xffffffff
  402ad0:	and    DWORD PTR [ebp-0x10],0x0
  402ad4:	xor    edx,0x0
  402ad7:	mov    DWORD PTR [ebp-0x6c],edx
  402ada:	mov    edx,DWORD PTR [ebp+0xc]
  402add:	mov    DWORD PTR [ebp-0x14],edx
  402ae0:	mov    ecx,0x8a29a12b
  402ae5:	xor    ebx,ecx
  402ae7:	add    DWORD PTR [ebp-0x14],eax
  402aea:	mov    edx,DWORD PTR [ebp-0x14]
  402aed:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402af1:	xor    edx,ecx
  402af3:	mov    DWORD PTR [ebp-0x58],edx
  402af6:	mov    edx,DWORD PTR [ebp-0x10]
  402af9:	xor    edx,0x0
  402afc:	mov    DWORD PTR [ebp-0x54],edx
  402aff:	cmp    DWORD PTR [ebp-0x58],ebx
  402b02:	jne    0x402b14
  402b08:	mov    edx,DWORD PTR [ebp-0x6c]
  402b0b:	cmp    DWORD PTR [ebp-0x54],edx
  402b0e:	je     0x402b43
  402b14:	mov    edx,DWORD PTR ds:0x42e313
  402b1a:	mov    edx,DWORD PTR [edx+0x1c0]
  402b20:	mov    edx,DWORD PTR [edx]
  402b22:	xor    ebx,ebx
  402b24:	add    edx,eax
  402b26:	adc    ebx,0xffffffff
  402b29:	xor    edx,ecx
  402b2b:	xor    ebx,0x0
  402b2e:	cmp    edx,0x70941fc1
  402b34:	jne    0x402ba1
  402b3a:	cmp    ebx,0xffffffff
  402b3d:	jne    0x402ba1
  402b43:	mov    edx,DWORD PTR ds:0x42e38f
  402b49:	mov    ebx,DWORD PTR ds:0x42e397
  402b4f:	xor    edx,ebx
  402b51:	mov    DWORD PTR ds:0x42e38f,edx
  402b57:	mov    ebx,DWORD PTR ds:0x42e38f
  402b5d:	mov    edx,DWORD PTR [ebp-0x44]
  402b60:	add    DWORD PTR [edx],ebx
  402b62:	mov    edx,DWORD PTR [ebp+0xc]
  402b65:	xor    esi,edx
  402b67:	mov    edx,DWORD PTR ds:0x42e38f
  402b6d:	add    esi,edi
  402b6f:	xor    ebx,ebx
  402b71:	add    esi,eax
  402b73:	adc    ebx,0xffffffff
  402b76:	xor    edi,edi
  402b78:	xor    esi,ecx
  402b7a:	xor    ebx,0x0
  402b7d:	add    edx,eax
  402b7f:	adc    edi,0xffffffff
  402b82:	xor    edx,ecx
  402b84:	xor    edi,0x0
  402b87:	cmp    edx,esi
  402b89:	jne    0x402ba1
  402b8f:	cmp    edi,ebx
  402b91:	jne    0x402ba1
  402b97:	mov    eax,ds:0x42e38f
  402b9c:	mov    ds:0x42e397,eax
  402ba1:	mov    eax,ds:0x42e313
  402ba6:	push   0x4
  402ba8:	add    eax,0x1cc
  402bad:	push   eax
  402bae:	lea    eax,[ebp-0x24]
  402bb1:	push   eax
  402bb2:	call   0x402bd1
  402bb7:	mov    eax,DWORD PTR [ebp-0x24]
  402bba:	mov    eax,DWORD PTR [eax]
  402bbc:	pop    ebx
  402bbd:	pop    esi
  402bbe:	pop    edi
  402bbf:	leave  
  402bc0:	ret    0xc
  402bc3:	xor    eax,eax
  402bc5:	and    DWORD PTR ds:0x42901c,0x42d008
  402bcf:	inc    eax
  402bd0:	ret    
  402bd1:	push   ebp
  402bd2:	mov    ebp,esp
  402bd4:	sub    esp,0x10
  402bd7:	mov    eax,0xf89c85b9
  402bdc:	mov    DWORD PTR [ebp-0x4],eax
  402bdf:	sub    DWORD PTR ds:0x42c01c,ebx
  402be5:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402bec:	mov    ecx,DWORD PTR [ebp-0x4]
  402bef:	mov    edx,DWORD PTR ds:0x42a010
  402bf5:	sbb    edx,DWORD PTR ds:0x42b014
  402bfb:	mov    DWORD PTR ds:0x42a010,edx
  402c01:	push   esi
  402c02:	adc    edx,DWORD PTR ds:0x42c014
  402c08:	mov    edx,0x7510899
  402c0d:	xor    ecx,edx
  402c0f:	mov    esi,0x3272e0
  402c14:	and    DWORD PTR ds:0x42a01c,0x483b
  402c1e:	push   edi
  402c1f:	or     DWORD PTR ds:0x42b018,ebx
  402c25:	mov    edi,DWORD PTR [ebp+0x10]
  402c28:	sbb    DWORD PTR ds:0x42c018,0x6469
  402c32:	add    ecx,esi
  402c34:	mov    DWORD PTR ds:0x42b00c,0x7c8c
  402c3e:	cmp    ecx,edi
  402c40:	mov    DWORD PTR ds:0x42900c,0x2470
  402c4a:	je     0x405144
  402c50:	and    DWORD PTR ds:0x42b000,0x0
  402c5a:	jmp    0x402c6c
  402c5f:	mov    edi,DWORD PTR ds:0x42b000
  402c65:	inc    edi
  402c66:	mov    DWORD PTR ds:0x42b000,edi
  402c6c:	cmp    DWORD PTR ds:0x42b000,0x1d
  402c73:	jae    0x402c9f
  402c79:	cmp    DWORD PTR ds:0x42b000,0x2c
  402c80:	jne    0x402c94
  402c86:	push   0x1
  402c88:	push   DWORD PTR [ebp-0x20]
  402c8b:	push   DWORD PTR [ebp-0x10]
  402c8e:	call   DWORD PTR ds:0x42ec77
  402c94:	jmp    0x402c5f
  402c99:	sub    edi,DWORD PTR ds:0x42c004
  402c9f:	mov    ecx,DWORD PTR [ebp-0x4]
  402ca2:	xor    DWORD PTR ds:0x42b018,0x2a2c
  402cac:	mov    edi,DWORD PTR [ebp+0x10]
  402caf:	jmp    0x405034
  402cb4:	inc    edi
  402cb5:	stos   BYTE PTR es:[edi],al
  402cb6:	pop    ss
  402cb7:	mov    edx,0x77b7a777
  402cbc:	mov    ebp,0xcddeab7c
  402cc1:	inc    ebx
  402cc2:	addr16 push cs
  402cc4:	jp     0x402d40
  402cc6:	jp     0x402d42
  402cc8:	add    bl,BYTE PTR [edi+0x7a]
  402ccb:	jp     0x402cde
  402ccd:	sub    BYTE PTR [edi],dl
  402ccf:	cmp    eax,0x2f1b2115
  402cd4:	popa   
  402cd5:	cmp    ah,BYTE PTR [ebp+0x66]
  402cd8:	ret    0x6a67
  402cdb:	push   0x69
  402cdd:	xor    al,cl
  402cdf:	fdivr  st,st(5)
  402ce1:	ins    BYTE PTR es:[edi],dx
  402ce2:	inc    esp
  402ce3:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402ce7:	jl     0x402d52
  402ce9:	push   ebp
  402cea:	iret   
  402ceb:	pop    ecx
  402cec:	dec    edx
  402ced:	cmp    al,0x88
  402cef:	cli    
  402cf0:	xchg   DWORD PTR [esi+0x57],esi
  402cf3:	dec    ecx
  402cf4:	jg     0x402d2d
  402cf6:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402cfc:	sub    bh,bh
  402cfe:	data16 fdivr st,st(2)
  402d01:	push   ebx
  402d02:	jg     0x402d22
  402d04:	jmp    0xe9faf63e
  402d09:	xchg   DWORD PTR [ebx],edx
  402d0b:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d11:	mov    al,al
  402d13:	imul   DWORD PTR [ecx-0x27]
  402d16:	add    al,dl
  402d18:	push   cs
  402d19:	cli    
  402d1a:	es adc al,0x44
  402d1d:	or     BYTE PTR [esi],ah
  402d1f:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d24:	pop    ebp
  402d25:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d2b:	jo     0x402d5f
  402d2d:	les    ebx,FWORD PTR [ebx-0xb]
  402d30:	sbb    bh,dl
  402d32:	je     0x402cf1
  402d34:	arpl   cx,bx
  402d36:	xchg   esp,eax
  402d37:	pop    edi
  402d38:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d3e:	repz sahf 
  402d40:	cmp    BYTE PTR [edx+0x73],dh
  402d43:	or     ebx,edx
  402d45:	sub    DWORD PTR [edx-0x77],edx
  402d48:	xor    BYTE PTR [ebx],dh
  402d4a:	push   eax
  402d4b:	jecxz  0x402d1c
  402d4d:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d53:	test   BYTE PTR [ebp-0x20],ch
  402d56:	inc    ecx
  402d57:	push   edx
  402d58:	dec    eax
  402d59:	or     BYTE PTR [esi],bh
  402d5b:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d63:	fadd   QWORD PTR [eax]
  402d65:	push   esi
  402d66:	stc    
  402d67:	push   edx
  402d68:	push   esi
  402d69:	mov    eax,ds:0xf4bf64f5
  402d6e:	inc    edx
  402d6f:	add    ebp,ecx
  402d71:	sbb    ebx,DWORD PTR ds:0xfb6bee5f
  402d77:	daa    
  402d78:	les    esi,FWORD PTR [edx+0x26b8bf0a]
  402d7e:	push   esp
  402d7f:	in     al,0x75
  402d81:	rcr    BYTE PTR [ecx+0x4f],0xd0
  402d85:	push   ss
  402d86:	dec    ebx
  402d87:	fcmovbe st,st(1)
  402d89:	push   es
  402d8a:	and    eax,0xca479c3a
  402d8f:	loop   0x402d43
  402d91:	hlt    
  402d92:	std    
  402d93:	or     ch,BYTE PTR [edi+0x2a]
  402d96:	dec    eax
  402d97:	nop
  402d98:	lahf   
  402d99:	dec    edx
  402d9a:	lea    eax,[edi+0x339a4a9f]
  402da0:	leave  
  402da1:	and    edi,DWORD PTR [ecx]
  402da3:	leave  
  402da4:	retf   0x582b
  402da7:	sti    
  402da8:	jnp    0x402db7
  402daa:	leave  
  402dab:	mov    bl,0x30
  402dad:	push   esi
  402dae:	inc    edx
  402daf:	or     edx,DWORD PTR [edx+0x3c]
  402db2:	retf   0x93ef
  402db5:	out    0xdf,eax
  402db7:	xchg   ecx,eax
  402db8:	xchg   edi,eax
  402db9:	mov    bl,0x90
  402dbb:	cdq    
  402dbc:	sub    ch,BYTE PTR [edi-0x7bbee8a9]
  402dc2:	fcomp  QWORD PTR [eax-0x4b]
  402dc5:	mov    eax,0xa2f4e50c
  402dca:	int3   
  402dcb:	dec    edx
  402dcc:	ficom  DWORD PTR [edx]
  402dce:	sti    
  402dcf:	inc    bl
  402dd1:	out    0xea,eax
  402dd3:	inc    edi
  402dd4:	pop    ss
  402dd5:	in     al,0x27
  402dd7:	jmp    0x402d67
  402dd9:	shl    bh,0xce
  402ddc:	(bad)  
  402dde:	pop    esi
  402ddf:	fsub   QWORD PTR [edi-0x357a6f1a]
  402de5:	xchg   edx,eax
  402de6:	add    DWORD PTR [eax+0x4d],0x1653c618
  402ded:	mov    bh,al
  402def:	iret   
  402df0:	adc    BYTE PTR [ebp+esi*8-0x4ebdd738],ah
  402df7:	ds inc esp
  402df9:	sbb    ebx,DWORD PTR [esp+edi*4+0x54]
  402dfd:	adc    BYTE PTR [edx+ebx*2-0x12b3c198],bh
  402e04:	push   ss
  402e05:	fdiv   QWORD PTR ds:0x6a0457f4
  402e0b:	push   ecx
  402e0c:	jbe    0x402e20
  402e0e:	lahf   
  402e0f:	cmp    ch,cl
  402e11:	shl    ebx,cl
  402e13:	and    ecx,edx
  402e15:	or     eax,DWORD PTR [edi]
  402e17:	sbb    DWORD PTR [eax+0x4b],esi
  402e1a:	loope  0x402da2
  402e1c:	dec    edi
  402e1d:	test   eax,0xd174a34d
  402e22:	xchg   ebp,eax
  402e23:	pop    ss
  402e24:	es dec esp
  402e26:	in     al,0x94
  402e28:	(bad)  
  402e29:	fst    QWORD PTR [ecx+0x5de75f5]
  402e2f:	cdq    
  402e30:	pop    esp
  402e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e32:	pop    ss
  402e33:	dec    esi
  402e34:	shr    BYTE PTR [eax],cl
  402e36:	lahf   
  402e37:	add    BYTE PTR [eax-0x5c],bh
  402e3a:	addr16 loop 0x402dd7
  402e3d:	(bad)  
  402e3e:	in     eax,dx
  402e3f:	jnp    0x402dd1
  402e41:	in     al,0x9b
  402e43:	xchg   esp,eax
  402e44:	inc    esi
  402e45:	mov    esp,0x441ffc04
  402e4a:	and    bh,dh
  402e4c:	cmp    edi,esp
  402e4e:	inc    esi
  402e4f:	mov    dl,0x5a
  402e51:	pop    edx
  402e52:	push   esi
  402e53:	adc    eax,ecx
  402e55:	rol    BYTE PTR [eax],1
  402e57:	repz xchg esp,eax
  402e59:	outs   dx,BYTE PTR ds:[esi]
  402e5a:	xchg   al,bl
  402e5c:	icebp  
  402e5d:	or     BYTE PTR [edi],al
  402e5f:	xchg   ebx,eax
  402e60:	ins    BYTE PTR es:[edi],dx
  402e61:	push   edx
  402e62:	mov    WORD PTR [esi-0x60],ss
  402e65:	push   ecx
  402e66:	push   esp
  402e67:	daa    
  402e68:	push   ecx
  402e69:	ret    0x420d
  402e6c:	daa    
  402e6d:	(bad)  
  402e6e:	shl    ebp,cl
  402e70:	sbb    al,0x66
  402e72:	add    eax,0x1fad507d
  402e77:	pop    ebp
  402e78:	loopne 0x402ef1
  402e7a:	jae    0x402ea8
  402e7c:	popf   
  402e7d:	aam    0xe9
  402e7f:	std    
  402e80:	sbb    ch,al
  402e82:	dec    esi
  402e83:	jno    0x402e56
  402e85:	cdq    
  402e86:	jg     0x402ecd
  402e88:	shl    BYTE PTR [ecx+0x19],1
  402e8b:	mov    eax,edx
  402e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e8e:	and    edx,eax
  402e90:	mov    al,0xb
  402e92:	leave  
  402e93:	fwait
  402e94:	sbb    DWORD PTR [esi+0x6912c656],ebp
  402e9a:	pop    esp
  402e9b:	fs jne 0x402e9d
  402e9e:	pop    edi
  402e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ea0:	push   edx
  402ea1:	cmp    BYTE PTR [eax],bh
  402ea3:	dec    ebp
  402ea4:	add    edi,eax
  402ea6:	ret    
  402ea7:	xor    dl,BYTE PTR [edi-0x4c8295a0]
  402ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eae:	pop    ecx
  402eaf:	cld    
  402eb0:	mov    DWORD PTR [edi],edx
  402eb2:	xchg   ecx,eax
  402eb3:	pop    ebx
  402eb4:	fsubp  st(4),st
  402eb6:	add    ebx,DWORD PTR [edx-0x6b]
  402eb9:	and    al,ah
  402ebb:	jns    0x402e40
  402ebd:	and    bh,0x38
  402ec0:	dec    edx
  402ec1:	adc    ebx,DWORD PTR [edx]
  402ec3:	pcmpeqw mm7,QWORD PTR [eax+edi*8]
  402ec7:	mov    ds:0x2f4a1bdf,eax
  402ecc:	std    
  402ecd:	add    ch,ah
  402ecf:	adc    DWORD PTR [esi],0x988ecc71
  402ed5:	scas   eax,DWORD PTR es:[edi]
  402ed6:	sahf   
  402ed7:	xor    dl,cl
  402ed9:	and    BYTE PTR [edx+0x24549370],ah
  402edf:	adc    BYTE PTR [esi],dl
  402ee1:	dec    ebx
  402ee2:	outs   dx,BYTE PTR ds:[esi]
  402ee3:	mov    cl,0xa5
  402ee5:	inc    esi
  402ee6:	out    0x2c,al
  402ee8:	aaa    
  402ee9:	retf   0xa987
  402eec:	jle    0x402f13
  402eee:	adc    dh,cl
  402ef0:	push   ss
  402ef1:	test   al,0x34
  402ef3:	stos   DWORD PTR es:[edi],eax
  402ef4:	push   edx
  402ef5:	test   al,bh
  402ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ef8:	add    eax,0xc6cf20fd
  402efd:	adc    ebp,DWORD PTR [ebp+eiz*2+0xa6260fd]
  402f04:	dec    esp
  402f05:	jl     0x402f51
  402f07:	xor    eax,0xffe490e4
  402f0c:	lahf   
  402f0d:	push   ss
  402f0e:	fistp  QWORD PTR [eax]
  402f10:	mov    eax,ss
  402f12:	inc    edi
  402f13:	ret    
  402f14:	cmp    al,0xf2
  402f16:	psrlq  mm0,QWORD PTR [ecx]
  402f19:	mov    ecx,0xf3e893e7
  402f1e:	ret    0xb184
  402f21:	jmp    0x402f86
  402f23:	jmp    0x402ecb
  402f25:	fwait
  402f26:	les    ebx,FWORD PTR [edx-0x62]
  402f29:	pop    edx
  402f2a:	stos   DWORD PTR es:[edi],eax
  402f2b:	push   0x784900ff
  402f30:	jb     0x402fa0
  402f32:	pop    esi
  402f33:	leave  
  402f34:	cmp    BYTE PTR [ebx+0x8],cl
  402f37:	and    BYTE PTR cs:[ebx],cl
  402f3a:	fidivr DWORD PTR ds:[edx-0x7d3d0cc5]
  402f41:	sub    ch,dl
  402f43:	cs add edi,0xffffffe3
  402f47:	test   eax,0xa62d8c64
  402f4c:	pop    ss
  402f4d:	pop    ebx
  402f4e:	and    eax,0xe8c35581
  402f53:	lods   eax,DWORD PTR ds:[esi]
  402f54:	(bad)  
  402f55:	es jnp 0x402f86
  402f58:	jb     0x402f50
  402f5a:	and    eax,0x6a72f30c
  402f5f:	lahf   
  402f60:	pop    esi
  402f61:	push   es
  402f62:	sbb    ebx,ebp
  402f64:	fucomi st,st(5)
  402f66:	out    dx,eax
  402f67:	int    0xe3
  402f69:	movzx  eax,BYTE PTR [ebx+ebx*1-0x4d07b5ae]
  402f71:	js     0x402fbf
  402f73:	jno    0x402fc7
  402f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f76:	shl    BYTE PTR [eax],1
  402f78:	or     BYTE PTR [edx],ah
  402f7a:	dec    eax
  402f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f7c:	in     eax,0x6a
  402f7e:	adc    BYTE PTR [eax-0x33838307],al
  402f84:	outs   dx,DWORD PTR ds:[esi]
  402f85:	scas   al,BYTE PTR es:[edi]
  402f86:	mov    esp,0xd00e4823
  402f8b:	ret    0xf1a
  402f8e:	fisttp WORD PTR [edx+ecx*1-0x6e]
  402f92:	ret    
  402f93:	mov    eax,0x65235ebf
  402f98:	popa   
  402f99:	xchg   edx,eax
  402f9a:	stos   DWORD PTR es:[edi],eax
  402f9b:	fcom   DWORD PTR ds:[edx]
  402f9e:	adc    ebp,DWORD PTR [ebx+0x4e1f0459]
  402fa4:	adc    esi,DWORD PTR [bp+si+0x2a26]
  402fa9:	mov    eax,?
  402fab:	push   ss
  402fac:	(bad)  
  402fae:	pop    edx
  402faf:	pop    ss
  402fb0:	jne    0x402f32
  402fb2:	pop    ebp
  402fb3:	popa   
  402fb4:	xchg   edx,eax
  402fb5:	pop    esp
  402fb6:	outs   dx,DWORD PTR ds:[esi]
  402fb7:	cmp    eax,0x9dfa058b
  402fbc:	pushf  
  402fbd:	fistp  DWORD PTR [edi]
  402fbf:	xor    dl,ch
  402fc1:	scas   al,BYTE PTR es:[edi]
  402fc2:	out    dx,eax
  402fc3:	loopne 0x40301a
  402fc5:	ja     0x402fd7
  402fc7:	out    0x31,al
  402fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fca:	pop    ebx
  402fcb:	lods   al,BYTE PTR ds:[esi]
  402fcc:	or     esp,eax
  402fce:	arpl   WORD PTR [esi-0x78],dx
  402fd1:	or     DWORD PTR [ecx+0x2],edi
  402fd4:	or     bl,0x9c
  402fd7:	lds    edi,FWORD PTR [edx+esi*2]
  402fda:	xchg   edi,eax
  402fdb:	add    DWORD PTR [ebx-0x31563edc],ebp
  402fe1:	or     esi,esi
  402fe3:	and    ah,BYTE PTR [eax+0x42]
  402fe6:	sbb    BYTE PTR [eax+0x2aca52a2],cl
  402fec:	imul   ecx,esp,0xfffffffa
  402fef:	data16 hlt 
  402ff1:	adc    al,0x1d
  402ff3:	adc    BYTE PTR ds:0xda710984,dl
  402ff9:	(bad)  
  402ffa:	arpl   WORD PTR [esi-0x6fa1956d],di
  403000:	mov    ds:0xad84d1b8,al
  403005:	jno    0x402f8b
  403007:	(bad)  [esi+edx*8]
  40300a:	retf   
  40300b:	dec    esi
  40300c:	dec    ebx
  40300d:	lds    ebx,FWORD PTR [eax+0x23]
  403010:	lock mov ah,0x73
  403013:	or     eax,0x8032b79e
  403018:	mov    dh,0xdb
  40301a:	adc    eax,0x25d5a86a
  40301f:	mov    es,edx
  403021:	sub    eax,eax
  403023:	push   ebp
  403024:	dec    ebx
  403025:	sbb    DWORD PTR [esp+eiz*4-0x1a],esp
  403029:	xchg   ebx,eax
  40302a:	stos   DWORD PTR es:[edi],eax
  40302b:	pop    esi
  40302c:	iret   
  40302d:	je     0x403024
  40302f:	es xchg ebx,eax
  403031:	out    0x60,eax
  403033:	or     dl,BYTE PTR [ebx+0x25]
  403036:	dec    ebx
  403037:	stos   DWORD PTR es:[edi],eax
  403038:	push   bx
  40303a:	sub    DWORD PTR [ebx],edi
  40303c:	add    DWORD PTR [edx-0x5bd0d601],esp
  403042:	lahf   
  403043:	mov    dl,0xf0
  403045:	or     al,0x5e
  403047:	aas    
  403048:	push   edx
  403049:	test   eax,0x1e2c0cc6
  40304e:	mov    ecx,0xdc1bb7db
  403053:	pop    ebp
  403054:	aaa    
  403055:	mov    edi,0xdf7c4a31
  40305a:	push   ebx
  40305b:	lds    eax,FWORD PTR [ecx-0x12]
  40305e:	test   eax,0x5b7dde82
  403063:	push   edi
  403064:	inc    eax
  403065:	(bad)  
  403066:	outs   dx,BYTE PTR ds:[esi]
  403067:	sbb    eax,DWORD PTR [esp+ebp*8]
  40306a:	mov    dl,0x7e
  40306c:	dec    esi
  40306d:	repnz shr al,cl
  403070:	retf   0xa8b6
  403073:	aad    0xc2
  403075:	sub    ch,dh
  403077:	mov    cl,0x9c
  403079:	mov    ecx,0xdd2b5a6d
  40307e:	lds    edi,FWORD PTR [edx]
  403080:	inc    esi
  403081:	push   ebx
  403082:	in     al,0x1a
  403084:	cld    
  403085:	fcomp  QWORD PTR [ebx]
  403087:	inc    edx
  403088:	cmp    ah,0x14
  40308b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40308c:	ins    DWORD PTR es:[edi],dx
  40308d:	ss mov ebp,0xfa4f26c6
  403093:	ins    BYTE PTR es:[edi],dx
  403094:	and    BYTE PTR [edi+0x57],al
  403097:	pop    eax
  403098:	pop    esp
  403099:	dec    ebp
  40309a:	in     eax,dx
  40309b:	jecxz  0x4030c1
  40309d:	rcr    DWORD PTR [ecx],cl
  40309f:	data16 icebp 
  4030a1:	ret    0x5f51
  4030a4:	xchg   edi,eax
  4030a5:	xchg   ebx,eax
  4030a6:	dec    edi
  4030a7:	enter  0x470b,0x63
  4030ab:	pop    edi
  4030ac:	shr    DWORD PTR [esi],1
  4030ae:	icebp  
  4030af:	mov    dl,0xc8
  4030b1:	lods   eax,DWORD PTR ds:[esi]
  4030b2:	in     al,0xd9
  4030b4:	inc    edx
  4030b5:	mov    bl,0x58
  4030b7:	scas   al,BYTE PTR es:[edi]
  4030b8:	sbb    al,0x76
  4030ba:	adc    edx,ebx
  4030bc:	xor    dh,dh
  4030be:	fcomp  DWORD PTR [edx+0x72224cfb]
  4030c4:	lock test eax,0x17bf3c0e
  4030ca:	imul   ebx,DWORD PTR [ebx-0x2d],0xa
  4030ce:	in     eax,dx
  4030cf:	outs   dx,DWORD PTR ds:[esi]
  4030d0:	mov    esp,0x4e88a1cd
  4030d5:	sub    DWORD PTR ds:0xa5c57901,ebx
  4030db:	adc    ebx,eax
  4030dd:	jl     0x4030fb
  4030df:	mov    ebx,0xe916d0e7
  4030e4:	aas    
  4030e5:	sbb    BYTE PTR [edx+edi*1+0x1f518256],cl
  4030ec:	ficom  WORD PTR [edx]
  4030ee:	mov    eax,0x42ea1a
  4030f3:	dec    esp
  4030f4:	sahf   
  4030f5:	test   DWORD PTR [eax-0x22b19ab2],edx
  4030fb:	add    al,0xf0
  4030fd:	arpl   WORD PTR [edi+0xf],di
  403100:	repnz mov esp,0xe977d214
  403106:	inc    ebx
  403107:	and    BYTE PTR [ebp+0x3c0fa3b1],al
  40310d:	dec    esi
  40310e:	mov    bh,0xe5
  403110:	fld    QWORD PTR [ecx]
  403112:	(bad)  
  403113:	jl     0x403137
  403115:	inc    eax
  403116:	inc    edi
  403117:	push   0x6f6660f2
  40311c:	inc    edx
  40311d:	pop    edx
  40311e:	popa   
  40311f:	fisttp QWORD PTR [esi-0x3f]
  403122:	fstp   DWORD PTR [eax]
  403124:	jge    0x403121
  403126:	jnp    0x40317b
  403128:	or     DWORD PTR [esi+0x3f],eax
  40312b:	jno    0x4030b9
  40312d:	stos   DWORD PTR es:[edi],eax
  40312e:	lea    ebx,[ecx+0x25908871]
  403134:	sbb    edi,DWORD PTR [edi+ebx*4]
  403137:	in     eax,0x25
  403139:	pop    ecx
  40313a:	cld    
  40313b:	pushf  
  40313c:	ret    0x897e
  40313f:	addps  xmm5,xmm6
  403142:	pop    ebp
  403143:	pop    ebx
  403144:	cli    
  403145:	je     0x403118
  403147:	cmp    DWORD PTR [edi-0x516f8a52],edi
  40314d:	add    BYTE PTR [edi],0xbc
  403150:	out    dx,eax
  403151:	out    0x4d,al
  403153:	retf   0x1432
  403156:	(bad)
  403159:	and    al,cl
  40315b:	int    0xfd
  40315d:	add    al,0xf2
  40315f:	pop    edi
  403160:	pop    edx
  403161:	int    0x96
  403163:	mov    esp,0xdfc0279
  403168:	loope  0x403161
  40316a:	xchg   ebp,eax
  40316b:	lds    eax,FWORD PTR [eax+0x6e]
  40316e:	outs   dx,BYTE PTR ds:[esi]
  40316f:	or     dh,ah
  403171:	cmp    al,0x39
  403173:	or     dh,BYTE PTR [edx+0x2e]
  403176:	dec    edx
  403177:	and    ch,ah
  403179:	cmp    eax,0x982495be
  40317e:	cmp    bl,al
  403180:	inc    esi
  403181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403182:	iret   
  403183:	sub    al,0x74
  403185:	cli    
  403186:	dec    edi
  403187:	sbb    ebp,DWORD PTR gs:[edx]
  40318a:	mov    al,BYTE PTR [ebp-0x76]
  40318d:	repz cmp bl,BYTE PTR ds:0x79eae795
  403194:	shl    DWORD PTR [eax+0x5e5aa573],cl
  40319a:	repz mov esi,0x4fedf5d1
  4031a0:	call   0xb2089017
  4031a5:	pop    es
  4031a6:	leave  
  4031a7:	add    al,0x56
  4031a9:	cli    
  4031aa:	sub    bl,BYTE PTR [ebp+0x19]
  4031ad:	jge    0x403156
  4031af:	and    al,0x20
  4031b1:	retf   
  4031b2:	or     BYTE PTR [ecx-0x45a17c64],bh
  4031b8:	push   ecx
  4031b9:	mov    ax,0xa479
  4031bd:	into   
  4031be:	pushf  
  4031bf:	fwait
  4031c0:	pop    ebx
  4031c1:	dec    esp
  4031c2:	mov    cl,BYTE PTR [ebp-0x25]
  4031c5:	in     eax,0x53
  4031c7:	leave  
  4031c8:	jnp    0x403237
  4031ca:	push   ss
  4031cb:	loopne 0x403248
  4031cd:	push   esi
  4031ce:	outs   dx,BYTE PTR ds:[esi]
  4031cf:	push   esi
  4031d0:	aad    0x5
  4031d2:	mov    eax,0x3b684abb
  4031d7:	fs jmp 0xee9bd090
  4031dd:	or     bl,ch
  4031df:	sahf   
  4031e0:	scas   al,BYTE PTR es:[edi]
  4031e1:	aad    0x67
  4031e3:	pop    es
  4031e4:	jnp    0x4031fa
  4031e6:	mov    esi,0x9afe8cab
  4031eb:	push   eax
  4031ec:	dec    esi
  4031ed:	cmp    dl,dh
  4031ef:	mov    esi,0xac4cbe46
  4031f4:	arpl   WORD PTR [ebp-0x76],bx
  4031f7:	out    dx,al
  4031f8:	outs   dx,BYTE PTR ds:[esi]
  4031f9:	fdiv   QWORD PTR [eax]
  4031fb:	lods   eax,DWORD PTR ds:[esi]
  4031fc:	pop    ds
  4031fd:	fild   WORD PTR [esi+0x29]
  403200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403201:	push   ds
  403202:	call   0xe965b305
  403207:	jbe    0x403242
  403209:	push   0xb2535960
  40320e:	stos   DWORD PTR es:[edi],eax
  40320f:	jb     0x4031cc
  403211:	pop    ebp
  403212:	(bad)
  403216:	push   ebp
  403217:	mov    BYTE PTR [ecx-0x5b],dl
  40321a:	(bad)  [edi+0x4b2b2933]
  403220:	inc    edx
  403221:	rol    DWORD PTR [eax+ebp*1-0x6060eb8c],cl
  403228:	push   ecx
  403229:	mov    bh,0xd6
  40322b:	jns    0x4032aa
  40322d:	and    ah,bl
  40322f:	std    
  403230:	xchg   esp,eax
  403231:	jp     0x403291
  403233:	mov    dh,0x20
  403235:	ja     0x403244
  403237:	adc    al,0x3
  403239:	and    DWORD PTR [ebx+0x2fe2a3a3],eax
  40323f:	ret    0xf721
  403242:	xchg   ecx,eax
  403243:	jbe    0x403253
  403245:	sar    DWORD PTR [esi-0x333aa034],1
  40324b:	mov    esi,0xf6ddbcd8
  403250:	cmp    BYTE PTR [esi+0x43301c94],al
  403256:	repz test al,0x8a
  403259:	dec    ebp
  40325a:	or     DWORD PTR [edi-0x5a87fb6a],esp
  403260:	daa    
  403261:	mov    eax,ds:0x94f7484
  403266:	jle    0x4032b4
  403268:	std    
  403269:	clc    
  40326a:	call   0x9d3ce178
  40326f:	or     DWORD PTR [edx-0x77],ebp
  403272:	inc    DWORD PTR [esp+ebx*2]
  403275:	jecxz  0x4032c6
  403277:	mov    al,0x12
  403279:	je     0x403291
  40327b:	mov    edi,0xda571147
  403280:	jmp    0xa5a4:0xdb239a01
  403287:	retf   0x11aa
  40328a:	jae    0x403248
  40328c:	add    DWORD PTR [ebx+0x48],edx
  40328f:	(bad)  
  403290:	push   DWORD PTR ds:0xf397103e
  403296:	fild   QWORD PTR [ecx]
  403298:	push   cs
  403299:	jge    0x403317
  40329b:	fxch   st(7)
  40329d:	mov    eax,0xe71771c9
  4032a2:	or     BYTE PTR [ecx-0xab38df2],0x5c
  4032a9:	(bad)  
  4032ab:	loop   0x403300
  4032ad:	sbb    al,0xe7
  4032af:	mov    edi,0xc7d5fcbc
  4032b4:	mov    esp,0x7a452f2
  4032b9:	(bad)  [edx+0x16]
  4032bc:	mov    cl,0x4c
  4032be:	and    eax,0xc60935fb
  4032c3:	and    BYTE PTR [edi-0x64a3569d],bh
  4032c9:	cmp    DWORD PTR ds:0xb4739b34,ebp
  4032cf:	inc    ebp
  4032d0:	jmp    0x4032e8
  4032d2:	or     DWORD PTR ss:[eax-0x2720c77a],eax
  4032d9:	js     0x40332f
  4032db:	push   ecx
  4032dc:	add    eax,DWORD PTR ds:0xb5bcd3de
  4032e2:	xor    ebx,DWORD PTR [ebx+0x7a973315]
  4032e8:	dec    ecx
  4032e9:	jne    0x40330b
  4032eb:	inc    DWORD PTR [ebx]
  4032ed:	sub    DWORD PTR [eax+0x3b],0x2b84092e
  4032f4:	(bad)  [ebp+0x6f75b116]
  4032fa:	cmp    eax,0x8e5ab0f3
  4032ff:	cmp    ebp,DWORD PTR [esi+0x498df084]
  403305:	inc    esp
  403306:	loope  0x403297
  403308:	ins    DWORD PTR es:[edi],dx
  403309:	je     0x403318
  40330b:	dec    esp
  40330c:	inc    esi
  40330d:	mov    edi,0xc79a682e
  403312:	or     ebp,DWORD PTR [esp+esi*1-0x7]
  403316:	pushf  
  403317:	fld    QWORD PTR [ebx]
  403319:	push   esi
  40331a:	mov    al,0x17
  40331c:	mov    edi,0xaea8c220
  403321:	scas   al,BYTE PTR es:[edi]
  403322:	ins    DWORD PTR es:[edi],dx
  403323:	(bad)  
  403324:	cmp    esp,esi
  403326:	fwait
  403327:	xchg   ecx,eax
  403328:	shl    DWORD PTR [ecx],1
  40332a:	stos   BYTE PTR es:[edi],al
  40332b:	aaa    
  40332c:	call   FWORD PTR [ecx]
  40332e:	in     eax,0x49
  403330:	repnz and al,0x3a
  403333:	stos   DWORD PTR es:[edi],eax
  403334:	mov    eax,ds:0x88fb3919
  403339:	int3   
  40333a:	or     ebx,ebx
  40333c:	inc    esi
  40333d:	into   
  40333e:	push   esi
  40333f:	fwait
  403340:	lahf   
  403341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403343:	dec    esi
  403344:	jp     0x4032e1
  403346:	push   es
  403347:	pop    es
  403348:	mov    ecx,0xef377779
  40334d:	ja     0x403343
  40334f:	xchg   esi,eax
  403350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403351:	jl     0x40330a
  403353:	jne    0x4032f0
  403355:	inc    esp
  403356:	adc    al,0x5f
  403358:	jp     0x4033a8
  40335a:	rcr    cl,cl
  40335c:	out    dx,eax
  40335d:	jp     0x40330a
  40335f:	jne    0x403302
  403361:	div    eax
  403363:	gs cs add eax,0x4f70043
  40336a:	scas   eax,DWORD PTR es:[edi]
  40336b:	stos   DWORD PTR es:[edi],eax
  40336c:	fadd   st,st(4)
  40336e:	outs   dx,BYTE PTR ds:[esi]
  40336f:	ins    BYTE PTR es:[edi],dx
  403370:	cs (bad) 
  403372:	sti    
  403373:	pop    esi
  403374:	pop    esi
  403375:	cdq    
  403376:	push   0x67
  403378:	mov    ds:0xc931c8dd,eax
  40337d:	mov    bl,0x2d
  40337f:	repz adc BYTE PTR [ebp+0x35],ah
  403383:	retf   
  403384:	rol    BYTE PTR [edi-0x52],cl
  403387:	test   DWORD PTR [ebx-0x55],edx
  40338a:	and    BYTE PTR [ebx],0xb9
  40338d:	xor    al,0x99
  40338f:	pop    eax
  403390:	xchg   ebp,eax
  403391:	inc    esp
  403392:	fs jae 0x4033d4
  403395:	lods   eax,DWORD PTR ds:[esi]
  403396:	test   eax,0x303c29da
  40339b:	mov    bh,0xdd
  40339d:	sub    DWORD PTR [ecx],ebx
  40339f:	push   es
  4033a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a1:	int3   
  4033a2:	mov    bh,0xf3
  4033a4:	push   es
  4033a5:	repnz imul esp,ebx,0xc9cf0e4
  4033ac:	or     eax,0x5ed5f3a
  4033b1:	mov    esi,0x118886c7
  4033b6:	pop    es
  4033b7:	outs   dx,BYTE PTR ds:[esi]
  4033b8:	scas   eax,DWORD PTR es:[edi]
  4033b9:	add    di,WORD PTR [edx-0x4324df45]
  4033c0:	dec    eax
  4033c1:	and    al,0x68
  4033c3:	rol    DWORD PTR [eax+ebx*8-0x626e7ca3],cl
  4033ca:	fmul   st,st(7)
  4033cc:	fsubr  DWORD PTR [eax-0x4e]
  4033cf:	mov    ds,WORD PTR [ebx-0x2a]
  4033d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033d3:	(bad)  
  4033d4:	xchg   ebp,eax
  4033d5:	ss shr ecx,cl
  4033d8:	adc    DWORD PTR [ebx],ecx
  4033da:	clc    
  4033db:	mov    edi,0x2b691417
  4033e0:	stc    
  4033e1:	je     0x403416
  4033e3:	fsubr  st,st(0)
  4033e5:	fs mov cl,0xe1
  4033e8:	or     DWORD PTR [ecx+0x50],ebx
  4033eb:	cmp    al,0x43
  4033ed:	pop    edi
  4033ee:	or     eax,DWORD PTR [ebx-0x4f]
  4033f1:	xchg   edx,eax
  4033f2:	aaa    
  4033f3:	cld    
  4033f4:	jge    0x403442
  4033f6:	xchg   DWORD PTR [ecx],esp
  4033f8:	rol    BYTE PTR [ebp+0x38],1
  4033fb:	xor    DWORD PTR [esi],esi
  4033fd:	sbb    ebp,esp
  4033ff:	dec    esi
  403400:	std    
  403401:	lds    ebp,FWORD PTR [ebx]
  403403:	daa    
  403404:	aaa    
  403405:	lea    ecx,[ebx-0x2a]
  403408:	mov    cl,0x58
  40340a:	or     DWORD PTR [edi],0x22
  40340d:	arpl   WORD PTR [eax],bp
  40340f:	adc    al,BYTE PTR ds:0x124366c8
  403415:	shl    BYTE PTR [esi-0x54f084f5],0xe0
  40341c:	fs push ss
  40341e:	lock sti 
  403420:	xor    eax,0xd73cc8a7
  403425:	push   ebp
  403426:	mov    esp,0x59de3d3e
  40342b:	js     0x40348b
  40342d:	inc    ebp
  40342e:	test   BYTE PTR [ebp+0x60],dh
  403431:	dec    edi
  403432:	out    0xc4,al
  403434:	adc    BYTE PTR [ebp+0x3a42d951],bh
  40343a:	xchg   ecx,eax
  40343b:	sbb    dl,dh
  40343d:	outs   dx,DWORD PTR es:[esi]
  40343f:	and    DWORD PTR [ebx],edx
  403441:	push   eax
  403442:	outs   dx,BYTE PTR ds:[esi]
  403443:	rcr    DWORD PTR [esi],cl
  403445:	in     eax,dx
  403446:	loop   0x4033d1
  403448:	jb     0x40341d
  40344a:	sub    al,0x54
  40344c:	idiv   DWORD PTR [ebx+ebp*2-0x51]
  403450:	dec    ecx
  403451:	adc    BYTE PTR [edx+0x1b],0xc7
  403455:	sbb    dl,BYTE PTR [edx-0x74eaa9d7]
  40345b:	add    DWORD PTR [esi],ebx
  40345d:	or     eax,0x86de1bb1
  403462:	mov    ch,0xef
  403464:	repz push eax
  403466:	cli    
  403467:	jmp    0xe20:0x83500631
  40346e:	dec    esi
  40346f:	cmp    al,0xc3
  403471:	sbb    eax,0x78080a37
  403476:	fstp   QWORD PTR ds:0x93f2dfd5
  40347c:	add    ah,BYTE PTR [edx+0x52]
  40347f:	mov    ecx,0x175f7879
  403484:	add    ebx,edi
  403486:	arpl   ax,sp
  403488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403489:	mov    BYTE PTR [eax+0x13f8e05],al
  40348f:	ret    
  403490:	imul   ebx,DWORD PTR es:[ebx-0x76],0x66f8f58
  403498:	push   esi
  403499:	inc    edx
  40349a:	xchg   ecx,eax
  40349b:	call   0x7f3b:0x357d86e
  4034a2:	push   edx
  4034a3:	out    dx,al
  4034a4:	shl    BYTE PTR [ebx+0x4d23eb59],0x45
  4034ab:	shr    BYTE PTR [ebp-0x61],1
  4034ae:	cmp    BYTE PTR [edi+0x44d6af57],ah
  4034b4:	push   ebx
  4034b5:	div    BYTE PTR [esp+edi*8]
  4034b8:	inc    ecx
  4034b9:	adc    DWORD PTR [esi+0x6ad96474],0x57004ea7
  4034c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034c4:	cmp    BYTE PTR [ebx],bl
  4034c6:	(bad)  
  4034c7:	jp     0x403487
  4034c9:	shr    DWORD PTR [edx-0x261fe659],cl
  4034cf:	les    eax,FWORD PTR [edi+0x7f3cd908]
  4034d5:	ror    BYTE PTR [esi],cl
  4034d7:	pop    edx
  4034d8:	int    0x62
  4034da:	and    BYTE PTR ds:0xfd02fd9d,cl
  4034e0:	mov    edx,esi
  4034e2:	cmp    BYTE PTR [ebp-0x12970e1f],bl
  4034e8:	inc    esi
  4034e9:	push   cs
  4034ea:	lods   al,BYTE PTR ds:[esi]
  4034eb:	xchg   esp,eax
  4034ec:	inc    eax
  4034ed:	jae    0x4034f7
  4034ef:	push   esi
  4034f0:	dec    ecx
  4034f1:	cmp    DWORD PTR [edi+0x10],edx
  4034f4:	and    eax,0x45a41b8c
  4034f9:	mov    edx,0xa0f96620
  4034fe:	sub    al,0x83
  403500:	lods   al,BYTE PTR ds:[esi]
  403501:	mov    eax,ds:0x1e0fb664
  403506:	xchg   DWORD PTR [edx+ecx*4],esi
  403509:	jb     0x4034f3
  40350b:	adc    BYTE PTR [ebx-0x2030abb4],dl
  403511:	test   al,0xb2
  403513:	sbb    eax,0xf733c357
  403518:	(bad)  
  403519:	mov    esp,0x2ef69ae2
  40351e:	pop    ds
  40351f:	(bad)  
  403520:	bound  edi,QWORD PTR [esi-0x1294b3a4]
  403526:	aam    0xa0
  403528:	xchg   esp,eax
  403529:	xor    eax,0x8677497
  40352e:	or     DWORD PTR [ecx+0x60ad7fab],ebp
  403534:	and    eax,0x5e58f695
  403539:	std    
  40353a:	outs   dx,BYTE PTR ds:[esi]
  40353b:	adc    DWORD PTR [edx+0x12],ebp
  40353e:	outs   dx,BYTE PTR ds:[esi]
  40353f:	xchg   esi,eax
  403540:	retf   0x7550
  403543:	ficom  WORD PTR [eax]
  403545:	cmp    DWORD PTR [ebp-0x1a],0xccfe669b
  40354c:	int3   
  40354d:	cdq    
  40354e:	pop    ds
  40354f:	aad    0x41
  403551:	mov    ds:0x313c5778,eax
  403556:	cmp    edi,DWORD PTR [ecx+edx*1-0x23]
  40355a:	mov    ecx,0x5b67bc31
  40355f:	adc    eax,DWORD PTR [edi-0x69]
  403562:	jl     0x403512
  403564:	shl    BYTE PTR [eax-0x3e],1
  403567:	ret    0x90fb
  40356a:	fdivr  QWORD PTR [ebx]
  40356c:	les    ecx,FWORD PTR [esi-0x72]
  40356f:	push   esp
  403570:	jmp    0xd958:0x514e0fe6
  403577:	mov    ds:0xfc1410d,al
  40357c:	mov    eax,0x27594866
  403581:	adc    al,0x89
  403583:	not    BYTE PTR [edi+0x7e]
  403586:	cmp    ebp,eax
  403588:	sub    al,0x75
  40358a:	int3   
  40358b:	stos   BYTE PTR es:[edi],al
  40358c:	lea    edx,[edx+0x3d]
  40358f:	imul   esi,DWORD PTR [ecx-0x70],0xffffff82
  403593:	inc    edi
  403594:	inc    ebp
  403595:	add    eax,0x3de5428e
  40359a:	out    0xc4,eax
  40359c:	pop    edx
  40359d:	scas   eax,DWORD PTR es:[edi]
  40359e:	adc    edx,esp
  4035a0:	das    
  4035a1:	pop    ebp
  4035a2:	icebp  
  4035a3:	ss aam 0x70
  4035a6:	test   DWORD PTR [edi],ebp
  4035a8:	imul   eax,ebp,0x43
  4035ab:	in     eax,0x82
  4035ad:	bound  ebp,QWORD PTR [esi-0x5]
  4035b0:	mov    bh,0x4f
  4035b2:	adc    BYTE PTR [ebx-0x5f45d1d7],0x92
  4035b9:	sbb    BYTE PTR [ebx+0x2b],dh
  4035bc:	(bad)  
  4035bd:	xor    al,0x4c
  4035bf:	(bad)  
  4035c0:	(bad)  
  4035c1:	ret    0x657d
  4035c4:	into   
  4035c5:	jecxz  0x4035cc
  4035c7:	aaa    
  4035c8:	pop    es
  4035c9:	dec    ebx
  4035ca:	jno    0x4035a4
  4035cc:	sbb    ebp,DWORD PTR [ebx+0x5c]
  4035cf:	push   eax
  4035d0:	ret    
  4035d1:	sahf   
  4035d2:	in     eax,0xd0
  4035d4:	js     0x4035ac
  4035d6:	sub    DWORD PTR [edi+0x3aa01a46],ebp
  4035dc:	test   eax,0x622c090a
  4035e1:	jo     0x4035e6
  4035e3:	test   eax,0x41c69264
  4035e8:	mov    eax,ds:0x187ab290
  4035ed:	or     BYTE PTR [ebp-0x4f],ch
  4035f0:	xchg   ebp,eax
  4035f1:	cwde   
  4035f2:	nop
  4035f3:	mov    al,ds:0x91ba5b5d
  4035f8:	push   esi
  4035f9:	popa   
  4035fa:	add    ebp,DWORD PTR [esi-0x4035e51b]
  403600:	in     al,0x7b
  403602:	rol    DWORD PTR [ecx],0xca
  403605:	mov    bl,0x70
  403607:	xchg   ebp,eax
  403608:	mul    BYTE PTR [esi-0x948780]
  40360e:	loopne 0x4035ed
  403610:	frstor [edi-0x76]
  403613:	sbb    al,0x28
  403615:	sbb    DWORD PTR [edi-0x68dc7d04],edi
  40361b:	pusha  
  40361c:	sbb    BYTE PTR [edi+ecx*4+0x55b6dda8],bh
  403623:	push   ss
  403624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403625:	pop    esp
  403626:	call   0x1cc5:0x5539fc48
  40362d:	mov    bl,0x8c
  40362f:	or     al,bh
  403631:	leave  
  403632:	and    eax,0x3e693ae
  403637:	(bad)  
  403638:	out    0xee,al
  40363a:	ret    0x3a0a
  40363d:	loope  0x4036ae
  40363f:	or     eax,0x20d7fa5e
  403644:	jnp    0x40360c
  403646:	pop    ebp
  403647:	test   eax,0xc92c37e4
  40364c:	inc    ecx
  40364d:	pop    ds
  40364e:	(bad)  
  40364f:	mov    dl,0xe8
  403651:	(bad)  
  403652:	pop    esi
  403653:	and    BYTE PTR [ebx+0x3b],dh
  403656:	mov    ebx,0x1333f84a
  40365b:	sbb    ebx,ebp
  40365d:	cmovle eax,DWORD PTR [edi-0x6d]
  403661:	imul   ecx,DWORD PTR [ecx],0x197b9d11
  403667:	(bad)  
  403669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40366a:	les    edx,FWORD PTR [esi]
  40366c:	add    al,0x10
  40366e:	enter  0x59f3,0x4c
  403672:	push   es
  403673:	fidivr DWORD PTR [eax+0x64998042]
  403679:	outs   dx,DWORD PTR ds:[esi]
  40367a:	mov    bh,0xaf
  40367c:	pop    eax
  40367d:	dec    esi
  40367e:	je     0x4036bd
  403680:	(bad)  
  403681:	mov    al,ds:0xec003ab9
  403686:	jecxz  0x403696
  403688:	push   esp
  403689:	pop    es
  40368a:	sbb    al,0xfd
  40368c:	add    ecx,DWORD PTR ds:0x31b29cbf
  403692:	or     BYTE PTR [ebx+0x6e384051],cl
  403698:	fst    DWORD PTR [ecx-0x71]
  40369b:	inc    ebx
  40369c:	rol    ecx,0xc8
  40369f:	xchg   esp,eax
  4036a0:	test   eax,0xe7e997b9
  4036a5:	sbb    edx,edi
  4036a7:	mov    esi,0x58e67e2e
  4036ac:	inc    eax
  4036ad:	ret    0x6fa6
  4036b0:	fs gs hlt 
  4036b3:	fwait
  4036b4:	loopne 0x4036d9
  4036b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036b7:	or     bl,dh
  4036b9:	add    BYTE PTR [esi],bh
  4036bb:	xchg   esp,eax
  4036bc:	dec    esp
  4036bd:	dec    esi
  4036be:	push   ebx
  4036bf:	cmp    eax,0x7aea5b34
  4036c4:	js     0x4036d2
  4036c6:	or     BYTE PTR ds:0xcff876f6,bl
  4036cc:	jl     0x4036bb
  4036ce:	ss ins DWORD PTR es:[edi],dx
  4036d0:	jg     0x403676
  4036d2:	cmp    esp,DWORD PTR [esi+0x13]
  4036d5:	lods   eax,DWORD PTR ds:[esi]
  4036d6:	pop    es
  4036d7:	je     0x403704
  4036d9:	jmp    0xcdea:0xe0aca029
  4036e0:	mov    WORD PTR [esi],gs
  4036e2:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4036e4:	lods   eax,DWORD PTR ds:[esi]
  4036e5:	cmp    ecx,DWORD PTR [ebx+0x1a]
  4036e8:	jecxz  0x4036a5
  4036ea:	ins    DWORD PTR es:[edi],dx
  4036eb:	fnstenv [esi+0x23]
  4036ee:	push   ecx
  4036ef:	pop    es
  4036f0:	aam    0x71
  4036f2:	out    0x2c,al
  4036f4:	gs scas eax,DWORD PTR es:[edi]
  4036f6:	out    dx,eax
  4036f7:	dec    esi
  4036f8:	fcomp  st(2)
  4036fa:	test   esp,0x88189ec2
  403700:	push   0x1b2c4c27
  403705:	and    edi,DWORD PTR [ebx-0x26b3d09e]
  40370b:	out    0x6e,eax
  40370d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40370e:	dec    edi
  40370f:	push   esi
  403710:	addr16 aam 0xf8
  403713:	imul   ecx,DWORD PTR [ecx+0x20f5d701],0x46833c
  40371d:	sbb    dl,BYTE PTR [edi+0x79]
  403720:	fnstenv [ebp+0xabf4699]
  403726:	jo     0x403795
  403728:	ins    DWORD PTR es:[edi],dx
  403729:	adc    edx,DWORD PTR [ebp-0x2c38007a]
  40372f:	lock jb 0x4036e0
  403732:	cli    
  403733:	in     al,0xfe
  403735:	dec    esp
  403736:	fs mov edx,0x7d1ab623
  40373c:	ja     0x40372c
  40373e:	lds    ebx,FWORD PTR [esi+0x28e4b1cc]
  403744:	mov    al,0x6b
  403746:	scas   eax,DWORD PTR es:[edi]
  403747:	repnz fld QWORD PTR [ebx+0x54]
  40374b:	cwde   
  40374c:	std    
  40374d:	or     eax,esp
  40374f:	fidiv  WORD PTR [ebp+0x46bcd477]
  403755:	and    BYTE PTR [edi-0x30],0x80
  403759:	lods   al,BYTE PTR ds:[esi]
  40375a:	inc    DWORD PTR [ebx-0x26]
  40375d:	push   ss
  40375e:	fadd   QWORD PTR [edx]
  403760:	jecxz  0x4036ef
  403762:	mov    cl,0x19
  403764:	retf   0x10c8
  403767:	inc    ebx
  403768:	ins    DWORD PTR es:[edi],dx
  403769:	je     0x403713
  40376b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40376c:	pop    ebp
  40376d:	add    eax,0x7a6b552d
  403772:	outs   dx,DWORD PTR ds:[esi]
  403773:	ror    DWORD PTR [esi+0x25946ff8],0xa8
  40377a:	jae    0x4037df
  40377c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40377d:	clc    
  40377e:	daa    
  40377f:	fcom   DWORD PTR [ebx+0x71]
  403782:	out    dx,eax
  403783:	or     cl,BYTE PTR [eax+0x3a]
  403786:	test   DWORD PTR [ebx+0x8],ecx
  403789:	mov    bh,0x8d
  40378b:	or     ecx,DWORD PTR [esi+ebp*1-0x21]
  40378f:	fwait
  403790:	adc    BYTE PTR [edi-0x51],al
  403793:	outs   dx,BYTE PTR ds:[esi]
  403794:	xor    al,0xfb
  403796:	pusha  
  403797:	jp     0x4037c1
  403799:	xor    edx,DWORD PTR [ecx-0x73]
  40379c:	jl     0x403788
  40379e:	mov    bl,0xab
  4037a0:	lea    edx,[edi+0x47]
  4037a3:	(bad)  
  4037a4:	jb     0x40377c
  4037a6:	ins    DWORD PTR es:[edi],dx
  4037a7:	inc    DWORD PTR [ecx]
  4037a9:	push   ss
  4037aa:	ss mov ?,edx
  4037ad:	fbld   TBYTE PTR [ebx-0x5d4c4a04]
  4037b3:	xchg   esp,eax
  4037b4:	cwde   
  4037b5:	xchg   esp,eax
  4037b7:	sub    BYTE PTR [edi-0xcd4a2c7],bh
  4037bd:	mov    ds:0x4515f89b,eax
  4037c2:	stc    
  4037c3:	or     al,BYTE PTR [edi]
  4037c5:	rcr    BYTE PTR [eax],0x12
  4037c8:	addr16 inc ebp
  4037ca:	lea    esi,[ecx-0x68]
  4037cd:	clc    
  4037ce:	(bad)  
  4037cf:	inc    ebp
  4037d0:	std    
  4037d1:	mov    eax,0x1b08c324
  4037d6:	xchg   ecx,eax
  4037d7:	lock push esi
  4037d9:	push   edx
  4037da:	mov    edi,0x2cb03007
  4037df:	xor    BYTE PTR [esi-0x6c],cl
  4037e2:	jg     0x403849
  4037e4:	push   ebx
  4037e5:	stos   BYTE PTR es:[edi],al
  4037e6:	mov    eax,DWORD PTR [edx+0x66]
  4037e9:	or     BYTE PTR [edi-0x59],al
  4037ec:	fld    QWORD PTR [edx+ecx*8]
  4037ef:	push   ss
  4037f0:	cmp    al,0x3
  4037f2:	lahf   
  4037f3:	out    dx,al
  4037f4:	mov    edi,0xdcfbeab6
  4037f9:	pop    edx
  4037fa:	lods   al,BYTE PTR ds:[esi]
  4037fb:	cmc    
  4037fc:	ins    DWORD PTR es:[edi],dx
  4037fd:	mov    edi,eax
  4037ff:	shl    bl,cl
  403801:	out    0xba,eax
  403803:	pop    esp
  403804:	cli    
  403805:	out    0xa2,eax
  403807:	out    dx,al
  403808:	mov    edx,DWORD PTR [edi]
  40380a:	push   edx
  40380b:	aas    
  40380c:	xchg   ebp,eax
  40380d:	inc    eax
  40380e:	cmp    al,0xa8
  403810:	enter  0x1e95,0xde
  403814:	jno    0x403892
  403816:	sti    
  403817:	pop    es
  403818:	pusha  
  403819:	dec    edx
  40381a:	xchg   edx,eax
  40381b:	mov    BYTE PTR [esp+edx*8+0x1258ab61],cl
  403822:	call   0x6abbe1eb
  403827:	out    dx,al
  403828:	adc    al,0x4f
  40382a:	xor    eax,edx
  40382c:	or     ch,BYTE PTR [ebx]
  40382e:	fldpi  
  403830:	mov    dl,0x93
  403832:	ficomp DWORD PTR [eax+0x64]
  403835:	js     0x4038ae
  403837:	jmp    0x549:0x66f217ff
  40383e:	sub    al,dl
  403840:	js     0x40385a
  403842:	sub    ah,BYTE PTR [eax+0x29]
  403845:	jns    0x4037e7
  403847:	push   ds
  403848:	inc    esi
  403849:	popa   
  40384a:	push   ebx
  40384b:	pop    esi
  40384c:	sbb    DWORD PTR [edi],ebx
  40384e:	dec    edx
  40384f:	or     BYTE PTR [ebx-0x19ea2711],0x94
  403856:	sbb    eax,0x2c4b940a
  40385b:	push   edx
  40385c:	ss (bad) 
  40385e:	fisubr WORD PTR [esi+edi*4-0x2496b074]
  403865:	mov    esi,0x4ffde8e0
  40386a:	fwait
  40386b:	enter  0xdac6,0x24
  40386f:	sub    DWORD PTR [ebp+0x1c],edi
  403872:	pop    ss
  403873:	out    dx,al
  403874:	fdivp  st(0),st
  403876:	in     al,dx
  403877:	sahf   
  403878:	or     eax,0x70990dba
  40387d:	out    dx,al
  40387e:	inc    esi
  40387f:	lods   al,BYTE PTR ds:[esi]
  403880:	jecxz  0x403881
  403882:	push   edi
  403883:	jp     0x403853
  403885:	add    eax,0x5251adc5
  40388a:	ja     0x403832
  40388c:	fist   WORD PTR [edi+0x3d]
  40388f:	adc    al,0xa4
  403891:	fist   WORD PTR ds:0x17f88e3b
  403897:	stos   BYTE PTR es:[edi],al
  403898:	popa   
  403899:	mov    bh,0x4e
  40389b:	dec    ecx
  40389c:	in     eax,0x4f
  40389e:	mov    ebx,0x3a7fe5c8
  4038a3:	jne    0x403891
  4038a5:	and    edx,0xffffffda
  4038a8:	int    0x7a
  4038aa:	in     al,dx
  4038ab:	or     eax,0xca25530b
  4038b0:	mul    DWORD PTR [ecx+0x26ba3e55]
  4038b6:	pop    ss
  4038b7:	add    dl,BYTE PTR [edi-0x69dd0d54]
  4038bd:	mov    dl,0xf1
  4038bf:	jno    0x40390b
  4038c1:	lods   eax,DWORD PTR ds:[esi]
  4038c2:	(bad)  
  4038c3:	fnstcw WORD PTR [esi]
  4038c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038c6:	ins    DWORD PTR es:[edi],dx
  4038c7:	(bad)  
  4038c8:	jnp    0x4038af
  4038ca:	stos   BYTE PTR es:[edi],al
  4038cb:	outs   dx,BYTE PTR ds:[esi]
  4038cc:	inc    edi
  4038cd:	or     edx,ebp
  4038cf:	xor    ch,BYTE PTR [ecx+esi*1]
  4038d2:	jnp    0x403879
  4038d4:	mov    ebx,0x411ef28a
  4038d9:	add    al,0x89
  4038db:	cwde   
  4038dc:	es dec edi
  4038de:	outs   dx,DWORD PTR ds:[esi]
  4038df:	push   ds
  4038e0:	call   edi
  4038e2:	mov    WORD PTR [ecx+0x141506b6],fs
  4038e8:	nop
  4038e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038ea:	xchg   esp,eax
  4038eb:	sub    al,0xaf
  4038ed:	mov    eax,ds:0xa21a84b3
  4038f2:	in     eax,dx
  4038f3:	aam    0x90
  4038f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038f6:	fiadd  DWORD PTR [esi]
  4038f8:	sbb    BYTE PTR [edx+0x74e24859],ch
  4038fe:	xor    BYTE PTR [ebx+0x44f54004],cl
  403904:	xor    bh,ch
  403906:	je     0x403982
  403908:	mov    eax,ds:0xfd9d78d1
  40390d:	push   es
  40390e:	imul   edx,DWORD PTR ds:0xe2eb6a31,0xffffffb1
  403915:	arpl   cx,bx
  403917:	and    cl,BYTE PTR [ebx+0x1f56fb70]
  40391d:	cs cmp DWORD PTR cs:[esp+ecx*1+0x1a33eef9],0x9dcffbe3
  40392a:	dec    edx
  40392b:	mov    es,WORD PTR [esi+eax*4]
  40392e:	or     ecx,ebx
  403930:	add    BYTE PTR [esi-0x6a],dl
  403933:	mov    bl,0x98
  403935:	lods   al,BYTE PTR ds:[esi]
  403936:	jnp    0x4038d3
  403938:	shr    dh,0xd6
  40393b:	fsub   QWORD PTR [ebx-0x5f]
  40393e:	leave  
  40393f:	cmc    
  403940:	xor    DWORD PTR ds:0x40c5013a,ecx
  403946:	xchg   ebx,eax
  403947:	xchg   DWORD PTR [edi-0x1c5962c7],ecx
  40394d:	cmp    eax,0xa330077e
  403952:	jecxz  0x403943
  403954:	mov    al,0x6d
  403956:	(bad)  
  403957:	mov    fs,WORD PTR [ecx-0x850524a]
  40395d:	aam    0x57
  40395f:	pop    esi
  403960:	add    eax,0xa15fb802
  403965:	cmp    al,0xb4
  403967:	mov    al,0x64
  403969:	in     al,dx
  40396a:	mov    ecx,ecx
  40396c:	test   al,0xb2
  40396e:	sub    DWORD PTR es:[ecx+0x2ea34aed],esp
  403975:	gs pop edx
  403977:	lods   al,BYTE PTR ds:[esi]
  403978:	nop
  403979:	in     al,dx
  40397a:	push   es
  40397b:	jno    0x403961
  40397d:	inc    eax
  40397e:	clc    
  40397f:	push   ss
  403980:	jbe    0x4039d2
  403982:	(bad)  
  403984:	xor    eax,0xd4719131
  403989:	stos   BYTE PTR es:[edi],al
  40398a:	ins    BYTE PTR es:[edi],dx
  40398b:	xchg   DWORD PTR [edx],ebp
  40398d:	out    dx,eax
  40398e:	ins    DWORD PTR es:[edi],dx
  40398f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403990:	icebp  
  403991:	psubusw mm1,QWORD PTR [eax-0x62847ddd]
  403998:	gs mov bh,0x37
  40399b:	fnstenv [edx]
  40399d:	fild   WORD PTR [edx+0x159549b8]
  4039a3:	fadd   st(7),st
  4039a5:	cdq    
  4039a6:	and    bh,ch
  4039a8:	retf   
  4039a9:	arpl   sp,ax
  4039ab:	jns    0x40395d
  4039ad:	jle    0x403972
  4039af:	arpl   WORD PTR [eax],bp
  4039b1:	iret   
  4039b2:	ins    BYTE PTR es:[edi],dx
  4039b3:	ror    BYTE PTR [edx],cl
  4039b5:	not    BYTE PTR [ebx-0x12]
  4039b8:	pop    ss
  4039b9:	loope  0x4039db
  4039bb:	iret   
  4039bc:	enter  0x9f6,0x9a
  4039c0:	mov    ecx,0xe2d37f94
  4039c5:	ss inc ebp
  4039c7:	loop   0x4039cd
  4039c9:	aad    0x8c
  4039cb:	or     al,0x73
  4039cd:	jno    0x403978
  4039cf:	push   ds
  4039d0:	and    BYTE PTR [eax-0x5c654aa],bl
  4039d6:	test   DWORD PTR es:[ebp-0x58],ecx
  4039da:	cwde   
  4039db:	scas   eax,DWORD PTR es:[edi]
  4039dc:	cmp    BYTE PTR [eax],0x1b
  4039df:	fisttp WORD PTR [ebp-0x24]
  4039e2:	out    dx,eax
  4039e3:	mov    dl,0x9c
  4039e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039e6:	xchg   ecx,eax
  4039e7:	or     bl,BYTE PTR [ecx-0x2a3eb285]
  4039ed:	adc    dl,bl
  4039ef:	sub    al,0xcd
  4039f1:	scas   eax,DWORD PTR es:[edi]
  4039f2:	push   0xffffffb2
  4039f4:	inc    edx
  4039f5:	and    al,0x9d
  4039f7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039f9:	xor    DWORD PTR [ebx+ecx*4+0x3cf34655],0x1a
  403a01:	jae    0x403a4a
  403a03:	mov    edi,0x6359424a
  403a08:	fnstenv [ebx]
  403a0a:	xchg   ebx,eax
  403a0b:	sbb    BYTE PTR [ebx+edx*4],ah
  403a0e:	pushf  
  403a0f:	lods   al,BYTE PTR ds:[esi]
  403a10:	in     al,0x28
  403a12:	in     al,dx
  403a13:	enter  0x60c1,0xaa
  403a17:	scas   al,BYTE PTR es:[edi]
  403a18:	icebp  
  403a19:	jnp    0x403a1e
  403a1b:	dec    ecx
  403a1c:	jmp    0x844fbb1d
  403a21:	int    0x77
  403a23:	jg     0x403a79
  403a25:	in     eax,0x72
  403a27:	xchg   ecx,eax
  403a28:	mov    esi,0x1d151723
  403a2d:	jne    0x403a88
  403a2f:	in     eax,dx
  403a30:	xchg   edi,eax
  403a31:	retf   0x3441
  403a34:	sbb    al,0x5e
  403a36:	pop    esi
  403a37:	jns    0x403a6e
  403a39:	sbb    ecx,DWORD PTR es:[eax+0x69]
  403a3d:	pop    ebp
  403a3e:	and    BYTE PTR [edx+0x5a8c1c63],cl
  403a44:	inc    edi
  403a45:	popf   
  403a46:	adc    eax,0xb3882961
  403a4b:	mov    bl,0x2c
  403a4d:	cli    
  403a4e:	pop    edi
  403a4f:	mov    dh,0x24
  403a51:	test   DWORD PTR [ebx-0x2e],0x8fa290cf
  403a58:	ds mov eax,0xe4a3f843
  403a5e:	out    dx,eax
  403a5f:	mov    DWORD PTR [esi],esi
  403a61:	xchg   DWORD PTR ds:0x5d495978,ebx
  403a67:	push   ecx
  403a68:	pop    ds
  403a69:	jmp    FWORD PTR [edi]
  403a6b:	sub    BYTE PTR [edx],0x43
  403a6e:	lods   al,BYTE PTR ds:[esi]
  403a6f:	cmp    al,dl
  403a71:	add    BYTE PTR [esi+0x4343c121],dl
  403a77:	sti    
  403a78:	and    BYTE PTR [ecx+0x63509d57],0xd6
  403a7f:	rcr    BYTE PTR [ecx-0x6be27831],cl
  403a85:	sti    
  403a86:	fwait
  403a87:	jge    0x403b00
  403a89:	mov    bh,0xdf
  403a8b:	mov    cl,0xc9
  403a8d:	les    edx,FWORD PTR [edx]
  403a8f:	ja     0x403a57
  403a91:	pop    ss
  403a92:	adc    al,0x22
  403a94:	mov    al,ds:0xc9306692
  403a99:	xor    ch,BYTE PTR [ebp+0x3afb1125]
  403a9f:	mov    al,0x15
  403aa1:	dec    esp
  403aa2:	or     BYTE PTR [ecx+0x6a],0xdd
  403aa6:	mov    eax,ds:0xd8deef0f
  403aab:	sbb    eax,0xae9c7cf6
  403ab0:	ins    BYTE PTR es:[edi],dx
  403ab1:	pop    ebp
  403ab2:	jne    0x403a50
  403ab4:	in     eax,dx
  403ab5:	inc    ecx
  403ab6:	jbe    0x403b05
  403ab8:	sbb    eax,0xaa0cdbdf
  403abd:	popa   
  403abe:	(bad)  
  403abf:	sbb    al,0xe4
  403ac1:	push   eax
  403ac2:	shl    esi,1
  403ac4:	out    dx,al
  403ac5:	lahf   
  403ac6:	rcl    DWORD PTR [edx*1+0xbe1d112],1
  403acd:	xor    al,0xdf
  403acf:	js     0x403aa1
  403ad1:	aam    0xd1
  403ad3:	and    al,0x77
  403ad6:	sbb    DWORD PTR [esi-0x5d],esp
  403ad9:	out    dx,al
  403ada:	loop   0x403aed
  403adc:	rcl    dl,cl
  403ade:	sbb    BYTE PTR [ebp+0x1b],ch
  403ae1:	pop    ebp
  403ae2:	push   0x7f994366
  403ae7:	cld    
  403ae8:	pop    edi
  403ae9:	inc    edx
  403aea:	dec    BYTE PTR [ebx+0x4e]
  403aed:	sub    DWORD PTR [ebx+0x13],esp
  403af0:	and    eax,0x63864dc1
  403af5:	dec    ecx
  403af6:	jo     0x403b17
  403af8:	sub    eax,DWORD PTR [edx+eiz*2-0x67297653]
  403aff:	hlt    
  403b00:	dec    edi
  403b01:	das    
  403b02:	xchg   BYTE PTR [ebx],al
  403b04:	stos   BYTE PTR es:[edi],al
  403b05:	aam    0x9e
  403b07:	jmp    0x403b2f
  403b09:	dec    sp
  403b0b:	fstp   QWORD PTR [ebx]
  403b0d:	sahf   
  403b0e:	lgs    ecx,FWORD PTR [ebx]
  403b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b12:	icebp  
  403b13:	cwde   
  403b14:	adc    DWORD PTR [ebp+0x39],edi
  403b17:	mov    esi,0x3dc996c7
  403b1c:	sbb    bl,al
  403b1e:	loop   0x403b4e
  403b20:	sub    al,0x29
  403b22:	push   esi
  403b23:	xor    dh,dh
  403b25:	outs   dx,BYTE PTR ds:[esi]
  403b26:	pop    esp
  403b27:	ja     0x403b27
  403b29:	sbb    DWORD PTR [edi+0x3b],0xfbbfe314
  403b30:	ja     0x403b6f
  403b32:	arpl   WORD PTR [eax+0x56113e14],sp
  403b38:	(bad)  
  403b39:	imul   eax,DWORD PTR [ecx],0xaab61501
  403b3f:	shl    DWORD PTR [eax-0x26],cl
  403b42:	pop    edx
  403b43:	je     0x403b94
  403b45:	nop
  403b46:	mov    edx,0xa521598e
  403b4b:	fwait
  403b4c:	add    edx,ebx
  403b4e:	aam    0x38
  403b50:	mov    ds:0xce9d8601,eax
  403b55:	sub    ecx,DWORD PTR [esi+eax*1-0x627a9a6b]
  403b5c:	je     0x403b3b
  403b5e:	call   FWORD PTR [eax-0x1b285836]
  403b64:	rol    BYTE PTR [esi+0x22],1
  403b67:	cmp    al,0x7d
  403b69:	dec    ebx
  403b6a:	xor    cl,bl
  403b6c:	gs push edx
  403b6e:	jns    0x403b1c
  403b70:	mov    bh,0xc7
  403b72:	fiadd  WORD PTR [eax-0x622398c2]
  403b78:	mov    al,0xdc
  403b7a:	rcl    DWORD PTR [esi-0x32],cl
  403b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b7e:	cmp    eax,0xe678abc5
  403b83:	xor    BYTE PTR [edi-0x1a],ah
  403b86:	mov    DWORD PTR ds:0x7af97055,0x91c68125
  403b90:	aad    0x11
  403b92:	lods   al,BYTE PTR ds:[esi]
  403b93:	dec    esi
  403b94:	dec    esi
  403b95:	add    al,0xf5
  403b97:	rcl    DWORD PTR [ebx-0x2a67bb7b],1
  403b9d:	js     0x403b73
  403b9f:	call   0x9588d8a3
  403ba4:	mov    ch,0x6c
  403ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ba7:	pop    edi
  403ba8:	call   DWORD PTR [esp+esi*1+0x55]
  403bac:	mov    edx,0xb69e206c
  403bb1:	pop    edx
  403bb2:	lock (bad) 
  403bb4:	mov    al,0xcb
  403bb6:	dec    esp
  403bb7:	lahf   
  403bb8:	in     al,dx
  403bb9:	mov    edx,0x1c094894
  403bbe:	shr    DWORD PTR [esi-0x6acd3d64],cl
  403bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc5:	or     al,BYTE PTR [esi]
  403bc7:	in     al,0x50
  403bc9:	pop    ecx
  403bca:	fsub   st,st(6)
  403bcc:	and    BYTE PTR [edx-0x503941e8],dl
  403bd2:	in     al,dx
  403bd3:	fwait
  403bd4:	or     edx,edi
  403bd6:	fsubr  st,st(2)
  403bd8:	sub    ah,BYTE PTR [edi+0x5a40905]
  403bde:	inc    esi
  403bdf:	(bad)  
  403be0:	mov    ebp,0x3eed9ac0
  403be5:	dec    ebx
  403be6:	jg     0x403c1b
  403be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403be9:	cmc    
  403bea:	aad    0x5a
  403bec:	ja     0x403c01
  403bee:	jo     0x403b85
  403bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bf1:	push   edx
  403bf2:	xchg   edi,eax
  403bf3:	loop   0x403bb9
  403bf5:	fldl2t 
  403bf7:	bnd jbe 0x403c0b
  403bfa:	aas    
  403bfb:	pop    edx
  403bfc:	jnp    0x403bfa
  403bfe:	mov    eax,0x7de651b3
  403c03:	scas   al,BYTE PTR es:[edi]
  403c04:	imul   edi,DWORD PTR [ecx],0x3c
  403c07:	pop    edx
  403c08:	das    
  403c09:	jg     0x403c32
  403c0b:	and    esp,edx
  403c0d:	hlt    
  403c0e:	xlat   BYTE PTR ds:[ebx]
  403c0f:	pop    es
  403c10:	adc    ebp,DWORD PTR [ecx]
  403c12:	test   al,0xc4
  403c14:	mov    al,0xd9
  403c16:	movaps XMMWORD PTR [ecx+0x5e6a5553],xmm7
  403c1d:	xchg   ebp,eax
  403c1e:	inc    esp
  403c1f:	xchg   esp,eax
  403c20:	icebp  
  403c21:	xchg   ebx,eax
  403c22:	xchg   edx,eax
  403c23:	adc    ebp,DWORD PTR [esi+esi*2-0x2a4c1021]
  403c2a:	xchg   DWORD PTR [edx],esi
  403c2c:	pop    esp
  403c2d:	xchg   BYTE PTR [edi-0x1424fdaa],cl
  403c33:	stos   BYTE PTR es:[edi],al
  403c34:	repnz cwde 
  403c36:	xlat   BYTE PTR ds:[ebx]
  403c37:	pop    esp
  403c38:	(bad)  [esi+edx*4+0x5a]
  403c3c:	add    al,0xb2
  403c3e:	inc    eax
  403c3f:	push   ecx
  403c40:	in     eax,dx
  403c41:	inc    eax
  403c42:	sti    
  403c43:	mov    ebp,0x3c5f6906
  403c48:	out    0xa4,eax
  403c4a:	jae    0x403bd4
  403c4c:	repnz cwde 
  403c4e:	out    0x1,al
  403c50:	push   es
  403c51:	js     0x403c13
  403c53:	es out dx,al
  403c55:	sbb    eax,0xe0f5646a
  403c5a:	call   DWORD PTR [edx-0x48e29c27]
  403c60:	push   eax
  403c61:	inc    ebp
  403c62:	sub    dh,BYTE PTR [ebp+edi*1-0x2a3d51dd]
  403c69:	pushw  ds
  403c6b:	pop    esi
  403c6c:	inc    edx
  403c6d:	and    BYTE PTR [edx-0x39],bh
  403c70:	stos   BYTE PTR es:[edi],al
  403c71:	jl     0x403c05
  403c73:	jo     0x403cd7
  403c75:	imul   BYTE PTR [ebp-0x6da4352c]
  403c7b:	jo     0x403c4f
  403c7d:	or     ebx,DWORD PTR [ecx+0x7f746e0f]
  403c83:	hlt    
  403c84:	stos   DWORD PTR es:[edi],eax
  403c85:	adc    bl,cl
  403c87:	out    dx,al
  403c88:	sbb    dh,dh
  403c8a:	lds    edx,FWORD PTR [eax-0x12]
  403c8d:	fucomip st,st(0)
  403c8f:	jl     0x403cc8
  403c91:	les    ebp,FWORD PTR [edx-0x7b70d658]
  403c97:	add    eax,0x4321041c
  403c9c:	daa    
  403c9d:	int    0x59
  403c9f:	cmc    
  403ca0:	cwde   
  403ca1:	retf   
  403ca2:	rol    cl,0x3d
  403ca5:	and    esi,DWORD PTR [ebp+0x409aca71]
  403cab:	ins    BYTE PTR es:[edi],dx
  403cac:	call   0x3681bd66
  403cb1:	cmp    eax,0x32839db8
  403cb6:	jge    0x403c74
  403cb8:	xchg   edx,eax
  403cb9:	add    bl,BYTE PTR [esi]
  403cbb:	(bad)  
  403cbc:	clc    
  403cbd:	jne    0x403cc7
  403cbf:	dec    ebx
  403cc0:	repz fbstp TBYTE PTR [ebx-0x1385698e]
  403cc7:	jge    0x403cf2
  403cc9:	adc    ah,BYTE PTR [eax]
  403ccb:	dec    eax
  403ccc:	cmp    al,BYTE PTR [ebx+0x679a901b]
  403cd2:	loope  0x403c93
  403cd4:	sbb    ax,0xfe36
  403cd8:	jmp    0xdcbb:0xc62f0c2b
  403cdf:	imul   eax,DWORD PTR [ebx+ebx*1-0x78],0xffffffff
  403ce4:	scas   al,BYTE PTR es:[edi]
  403ce5:	xchg   BYTE PTR [edx],bh
  403ce7:	adc    al,0xdc
  403ce9:	inc    esi
  403cea:	cmp    al,0x67
  403cec:	xchg   ecx,eax
  403ced:	pusha  
  403cee:	retf   0x6845
  403cf1:	inc    esi
  403cf2:	(bad)  
  403cf3:	fdiv   QWORD PTR [edi-0x7]
  403cf6:	sbb    dl,dl
  403cf8:	(bad)  
  403cfb:	cmp    DWORD PTR [ecx+0x69f146fc],eax
  403d01:	or     dh,BYTE PTR [ecx-0x59]
  403d04:	shl    DWORD PTR [ebp-0x8],1
  403d07:	in     eax,0x5d
  403d09:	jmp    0x693e8533
  403d0e:	aas    
  403d0f:	nop
  403d10:	adc    al,0x45
  403d12:	test   BYTE PTR [eax+eax*2],ah
  403d15:	dec    ebp
  403d16:	xor    BYTE PTR [esi+ebx*8],ah
  403d19:	mov    DWORD PTR [edi],ebx
  403d1b:	inc    edi
  403d1c:	out    0x92,al
  403d1e:	je     0x403d78
  403d20:	pop    es
  403d21:	mov    DWORD PTR [ebx-0x48],esi
  403d24:	or     edi,DWORD PTR [esi+0xd892b9c]
  403d2a:	xchg   ebp,eax
  403d2b:	lock adc DWORD PTR [ecx+0x57],edx
  403d2f:	mov    ah,0x36
  403d31:	jecxz  0x403da7
  403d33:	cmp    eax,0xd46103a3
  403d38:	jae    0x403cf7
  403d3a:	retf   0xd611
  403d3d:	sbb    eax,0x72bd3457
  403d42:	push   ss
  403d43:	pop    esp
  403d44:	enter  0xb7c5,0x1
  403d48:	test   edi,esp
  403d4a:	pop    ebx
  403d4b:	mov    ebx,0x79e23538
  403d50:	mov    ?,WORD PTR [edx-0x65ffb9e8]
  403d56:	sub    al,0xd7
  403d58:	add    al,0x1e
  403d5a:	jbe    0x403db0
  403d5c:	nop
  403d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d5e:	fstp   DWORD PTR [esi]
  403d60:	jnp    0x403dc4
  403d62:	jb     0x403d69
  403d64:	imul   edi,ebx,0x4c17eb7d
  403d6a:	lock out 0x79,al
  403d6d:	je     0x403d72
  403d6f:	and    ecx,ebp
  403d71:	and    DWORD PTR [esp+eax*2+0x11],esi
  403d75:	xchg   ebx,eax
  403d76:	scas   al,BYTE PTR es:[edi]
  403d77:	push   cs
  403d78:	(bad)  
  403d79:	sub    DWORD PTR [edi-0x27],ecx
  403d7c:	jg     0x403d7e
  403d7e:	add    DWORD PTR [esi+edi*2-0x2d18dc8a],ecx
  403d85:	jb     0x403d17
  403d87:	push   esi
  403d88:	ret    
  403d89:	cmp    cl,BYTE PTR [ecx-0x7d]
  403d8c:	aad    0xcc
  403d8e:	or     eax,0x3500b7c9
  403d93:	out    dx,al
  403d94:	enter  0xb472,0x9
  403d98:	xor    eax,0xda0c9213
  403d9d:	imul   edi,DWORD PTR [edi],0xffffff96
  403da0:	jg     0x403e06
  403da2:	stos   BYTE PTR es:[edi],al
  403da3:	ret    
  403da4:	call   0x988d25b
  403da9:	push   esp
  403daa:	xlat   BYTE PTR ds:[ebx]
  403dab:	mov    bl,0x19
  403dad:	(bad)  
  403dae:	pop    edx
  403daf:	dec    ebx
  403db0:	mov    gs:0x17363099,eax
  403db6:	dec    ebx
  403db7:	and    ecx,DWORD PTR [ebp+0x39]
  403dba:	pop    edx
  403dbb:	or     eax,0x5011f8de
  403dc0:	xchg   ebx,eax
  403dc1:	cmc    
  403dc2:	shl    ebx,0xd1
  403dc5:	pop    ebp
  403dc6:	call   0x5c96423d
  403dcb:	fmul   st,st(0)
  403dcd:	call   0xbcdc:0x262f2bc8
  403dd4:	out    0x2f,al
  403dd6:	sub    BYTE PTR [ebx+0x73a077d1],cl
  403ddc:	cmp    al,dh
  403dde:	rcpps  xmm5,XMMWORD PTR [ebp+edi*2-0x4c365067]
  403de6:	(bad)  
  403de7:	mov    eax,0xd9ce1e38
  403dec:	cld    
  403ded:	push   edx
  403dee:	mov    dl,0x7a
  403df0:	xchg   esi,eax
  403df1:	mov    al,ds:0x534e6092
  403df6:	mov    ecx,0xd250d4a6
  403dfb:	xchg   ebx,eax
  403dfc:	popa   
  403dfd:	jl     0x403e3b
  403dff:	push   ebx
  403e00:	shl    BYTE PTR [esi+0x7b41a98b],1
  403e06:	test   eax,0xace94763
  403e0b:	bound  eax,QWORD PTR [eax-0x32a9b8fa]
  403e11:	jno    0x403de9
  403e13:	ror    DWORD PTR [eax],cl
  403e15:	add    ecx,DWORD PTR [esi]
  403e17:	push   es
  403e18:	(bad)  
  403e19:	xor    esp,DWORD PTR [edx]
  403e1b:	fistp  DWORD PTR [edx-0x4f]
  403e1e:	dec    ebp
  403e1f:	xchg   esp,eax
  403e20:	sub    BYTE PTR [ebx+0x67],cl
  403e23:	(bad)  
  403e24:	fldenv [edi-0x5e3db56e]
  403e2a:	fs xchg esi,eax
  403e2c:	es adc eax,0xd286ecb3
  403e32:	xchg   edi,eax
  403e33:	out    0xfb,eax
  403e35:	mov    bl,0x27
  403e37:	cmp    al,0x1c
  403e39:	in     al,dx
  403e3a:	dec    eax
  403e3b:	jecxz  0x403e35
  403e3d:	(bad)  
  403e3e:	mov    ebx,0xbedd397f
  403e43:	and    edi,esi
  403e45:	loope  0x403e4b
  403e47:	ins    BYTE PTR es:[edi],dx
  403e48:	xchg   cl,bl
  403e4a:	xor    al,0x95
  403e4c:	ss iret 
  403e4e:	mov    dl,ch
  403e50:	leave  
  403e51:	psubsw mm2,mm4
  403e54:	adc    al,0xa3
  403e56:	ret    
  403e57:	or     ebx,DWORD PTR [esi-0x680539a7]
  403e5d:	enter  0x75ce,0x7a
  403e61:	imul   ecx,DWORD PTR [ebp-0x63],0xf54883f6
  403e68:	mov    DWORD PTR [edx-0x4f],ebx
  403e6b:	call   0xfcd6:0xb041d632
  403e72:	loopne 0x403ed3
  403e74:	mov    DWORD PTR ds:0x6524b918,esi
  403e7a:	popf   
  403e7b:	dec    edx
  403e7c:	inc    ebp
  403e7d:	bound  edi,QWORD PTR [edi+0x7fcaf3da]
  403e83:	shr    BYTE PTR ds:0x89726437,cl
  403e89:	xchg   edi,eax
  403e8a:	adc    al,0x9
  403e8c:	pop    ebx
  403e8d:	(bad)  
  403e8f:	popa   
  403e90:	fbld   TBYTE PTR [ebx]
  403e92:	(bad)  
  403e93:	jge    0x403ee5
  403e95:	and    esi,esi
  403e97:	add    al,BYTE PTR [edi+0x2e]
  403e9a:	and    al,al
  403e9c:	add    al,0xf7
  403e9e:	sti    
  403e9f:	pop    esp
  403ea0:	sub    eax,0xe190cda4
  403ea5:	pop    esi
  403ea6:	shr    BYTE PTR [ecx-0x1c],0x9
  403eaa:	test   DWORD PTR [ecx+0x6e6d2123],ecx
  403eb0:	enter  0x689f,0xb9
  403eb4:	sub    cl,al
  403eb6:	lds    ebx,FWORD PTR [ebp+0x5b76a599]
  403ebc:	je     0x403ef8
  403ebe:	test   al,0x6b
  403ec0:	cld    
  403ec1:	push   eax
  403ec2:	adc    esp,DWORD PTR [ebx+eiz*1]
  403ec5:	mov    ds:0xfd4f972b,al
  403eca:	jbe    0x403f02
  403ecc:	inc    esp
  403ecd:	mov    al,0xb6
  403ecf:	aas    
  403ed0:	ins    DWORD PTR es:[edi],dx
  403ed1:	sub    al,0xcc
  403ed3:	mov    ecx,0xcccfe638
  403ed8:	sar    esp,cl
  403eda:	or     al,0xcf
  403edc:	test   eax,0x65fe9803
  403ee1:	sbb    DWORD PTR [eax],0xffffff9c
  403ee4:	dec    edx
  403ee5:	mov    al,ds:0xf2e876b3
  403eea:	dec    ebx
  403eeb:	and    al,0xdd
  403eed:	call   DWORD PTR [edx-0x24]
  403ef0:	fstp   TBYTE PTR [ecx-0x300eceb0]
  403ef6:	repz push edi
  403ef8:	jp     0x403f65
  403efa:	xchg   ecx,eax
  403efb:	xor    al,0xb2
  403efd:	jae    0x403eb4
  403eff:	and    eax,0xdad6b9c0
  403f04:	mov    DWORD PTR [ebx-0x5f],eax
  403f07:	(bad)  [eax]
  403f09:	ret    0x7b9f
  403f0c:	push   eax
  403f0d:	and    edx,esi
  403f0f:	dec    edx
  403f10:	xchg   ebx,eax
  403f11:	cmp    ecx,DWORD PTR es:[edx-0x1f]
  403f15:	push   eax
  403f16:	fwait
  403f17:	mov    cl,0xb0
  403f19:	cli    
  403f1a:	fcmovnb st,st(0)
  403f1c:	jne    0x403f82
  403f1e:	xor    BYTE PTR [edi-0x20b5e5ac],dl
  403f24:	jb     0x403f26
  403f26:	mov    dl,0x24
  403f28:	clc    
  403f29:	loope  0x403f8d
  403f2b:	mov    edi,0x24fda143
  403f30:	repz aas 
  403f32:	std    
  403f33:	stos   DWORD PTR es:[edi],eax
  403f34:	xor    DWORD PTR [edi],edi
  403f36:	lods   eax,DWORD PTR ds:[esi]
  403f37:	inc    eax
  403f38:	inc    al
  403f3a:	pop    ds
  403f3b:	lods   al,BYTE PTR ds:[esi]
  403f3c:	int3   
  403f3d:	retf   0x893b
  403f40:	lods   eax,DWORD PTR ds:[esi]
  403f41:	adc    DWORD PTR [ebp+ebp*1+0x42],ebp
  403f45:	cmp    esp,DWORD PTR [edi]
  403f47:	scas   al,BYTE PTR es:[edi]
  403f48:	imul   eax,DWORD PTR [ebx+0x1b],0xe7c16dc0
  403f4f:	adc    BYTE PTR [eax+eax*4-0x3f],bl
  403f53:	inc    eax
  403f54:	inc    esp
  403f55:	and    BYTE PTR [ebp-0x66],al
  403f58:	int    0x63
  403f5a:	inc    ebx
  403f5b:	add    BYTE PTR [ecx-0x15],al
  403f5e:	(bad)  [eax+eax*4]
  403f61:	test   DWORD PTR [eax],ebp
  403f63:	ret    0x49b6
  403f66:	clc    
  403f67:	outs   dx,DWORD PTR ds:[esi]
  403f68:	dec    ebx
  403f69:	pushf  
  403f6a:	sbb    DWORD PTR [ecx],0xfffffff8
  403f6d:	mov    esp,edx
  403f6f:	nop
  403f70:	test   DWORD PTR ds:0x1b83dcee,ebp
  403f76:	jl     0x403f39
  403f78:	inc    ecx
  403f79:	ins    BYTE PTR es:[edi],dx
  403f7a:	xor    ah,BYTE PTR [edi+0xf57507d]
  403f80:	mov    ah,0x5a
  403f82:	ins    BYTE PTR es:[edi],dx
  403f83:	dec    ebp
  403f84:	in     eax,dx
  403f85:	dec    esi
  403f86:	sbb    dl,bh
  403f88:	fwait
  403f89:	in     eax,0x77
  403f8b:	adc    eax,0xdfa7fee6
  403f90:	pop    ebp
  403f91:	loopne 0x403f5d
  403f93:	sti    
  403f94:	push   edi
  403f95:	dec    eax
  403f96:	mov    dh,0xf6
  403f98:	aad    0x39
  403f9a:	test   BYTE PTR [ecx+0x5ecbc16f],cl
  403fa0:	gs addr16 push edx
  403fa3:	addr16 push 0x670965e9
  403fa9:	sub    ch,BYTE PTR [eax+0x30]
  403fac:	dec    esi
  403fad:	and    eax,0xc06cd114
  403fb2:	fst    st(4)
  403fb4:	rcr    ebx,1
  403fb6:	iret   
  403fb7:	jns    0x404006
  403fb9:	addr16 out 0x98,al
  403fbc:	out    dx,al
  403fbd:	sahf   
  403fbe:	adc    DWORD PTR [ebx+0x103cd735],eax
  403fc4:	adc    cl,ch
  403fc6:	jmp    0x404007
  403fc8:	cmp    eax,0x3b3e2894
  403fcd:	dec    esi
  403fce:	(bad)  
  403fcf:	fldcw  WORD PTR [edi-0x79]
  403fd2:	add    DWORD PTR [eax+0x7519dc0f],esi
  403fd8:	shl    BYTE PTR [esi+ebp*2],1
  403fdb:	stc    
  403fdc:	jbe    0x403ff4
  403fde:	cmp    al,0xec
  403fe0:	adc    eax,0x8e0eeebd
  403fe5:	xor    DWORD PTR [edi],ebx
  403fe7:	cs loope 0x404020
  403fea:	push   eax
  403feb:	lds    eax,FWORD PTR [esi-0x5f76a748]
  403ff1:	int    0x8d
  403ff3:	push   eax
  403ff4:	xchg   BYTE PTR [ebx-0x551e0197],dh
  403ffa:	out    dx,eax
  403ffb:	ret    0xd94e
  403ffe:	sbb    ebx,ebx
  404000:	add    ch,BYTE PTR ds:0x28c9ed8e
  404006:	jle    0x403fa7
  404008:	daa    
  404009:	inc    eax
  40400a:	stc    
  40400b:	loope  0x403fd2
  40400d:	stc    
  40400e:	shl    DWORD PTR [edx-0x3aa40e14],cl
  404014:	es mov esi,0xc9eea580
  40401a:	sar    BYTE PTR [edx],1
  40401c:	dec    edi
  40401d:	fild   WORD PTR [eax-0x5ae627c7]
  404023:	cld    
  404024:	xor    BYTE PTR [ecx-0x28f6fa2c],dl
  40402a:	out    dx,eax
  40402b:	push   cs
  40402c:	mov    ah,0xf9
  40402e:	mov    al,ds:0xccd37555
  404033:	or     al,0x83
  404035:	jl     0x40400c
  404037:	cmp    DWORD PTR [edi-0x64],ecx
  40403a:	sub    bl,BYTE PTR [esi]
  40403c:	sub    eax,0x9ed7d9dd
  404041:	sub    BYTE PTR [edx+0x3ea36f70],dl
  404047:	scas   eax,DWORD PTR es:[edi]
  404048:	dec    ebp
  404049:	out    dx,eax
  40404a:	pop    edi
  40404b:	mov    eax,ds:0x2b802f93
  404050:	in     al,0x43
  404052:	xchg   edx,eax
  404053:	cs dec ebp
  404055:	pop    es
  404056:	clc    
  404057:	push   eax
  404058:	pop    ebp
  404059:	push   edx
  40405a:	loop   0x404099
  40405c:	(bad)  
  40405d:	cwde   
  40405e:	inc    ecx
  40405f:	out    dx,eax
  404060:	leave  
  404061:	popa   
  404062:	call   0xa353b4d5
  404067:	push   esp
  404068:	js     0x404092
  40406a:	shr    BYTE PTR [esi+0x413bc726],cl
  404070:	jnp    0x404068
  404072:	mov    eax,0x4c504432
  404077:	pop    ebp
  404078:	int    0x5b
  40407a:	mov    dh,0xd2
  40407c:	and    ebp,DWORD PTR [edx-0x54f8f743]
  404082:	fcom   DWORD PTR [esi]
  404084:	cmc    
  404085:	inc    esp
  404087:	jne    0x40403a
  404089:	or     ebp,DWORD PTR [eax]
  40408b:	jecxz  0x4040b1
  40408d:	outs   dx,DWORD PTR ds:[esi]
  40408e:	(bad)  
  40408f:	push   ss
  404090:	xchg   edx,eax
  404091:	ret    
  404092:	not    BYTE PTR [edi+0x2faa93ba]
  404098:	adc    esp,esp
  40409a:	xchg   ebx,ebx
  40409c:	lahf   
  40409d:	jmp    0x3ea3:0xc74880cc
  4040a4:	imul   esp,DWORD PTR [ebx-0x64],0x3b
  4040a8:	aas    
  4040a9:	push   0xb2f4e729
  4040ae:	and    al,0xd5
  4040b0:	popf   
  4040b1:	mov    bl,0xbf
  4040b3:	sub    esi,ebx
  4040b5:	ins    BYTE PTR es:[edi],dx
  4040b6:	cmc    
  4040b7:	xor    cl,0xdb
  4040ba:	jp     0x4040a4
  4040bc:	cmp    ch,dh
  4040be:	fnstcw WORD PTR [ecx+edx*2-0x73f09ce7]
  4040c5:	outs   dx,BYTE PTR ds:[esi]
  4040c6:	adc    BYTE PTR [eax-0x6c],al
  4040c9:	into   
  4040ca:	(bad)  
  4040cb:	mov    ecx,0x611479e6
  4040d0:	aad    0x47
  4040d2:	neg    ch
  4040d4:	sub    eax,0x5952a5ba
  4040d9:	neg    DWORD PTR [ecx+0x37]
  4040dc:	mov    esp,0x76f26ed
  4040e1:	pop    ss
  4040e2:	(bad)  
  4040e3:	mov    bl,0xf5
  4040e5:	and    DWORD PTR [ebx+0x4c],ecx
  4040e8:	inc    edi
  4040e9:	dec    esp
  4040ea:	not    DWORD PTR [ecx+0x6cc14471]
  4040f0:	jbe    0x404089
  4040f2:	jns    0x4040b3
  4040f4:	test   al,0xff
  4040f6:	lods   eax,DWORD PTR ds:[esi]
  4040f7:	fs inc edi
  4040f9:	pop    ecx
  4040fa:	loop   0x404131
  4040fc:	mov    bl,0x67
  4040fe:	jecxz  0x404091
  404100:	xor    DWORD PTR [edx-0x59],ebp
  404103:	inc    edx
  404104:	pop    ss
  404105:	mov    ah,0xb7
  404107:	mov    ds,WORD PTR [esi-0x3c]
  40410a:	test   DWORD PTR ds:0x432370c7,0x1a3fe2cb
  404114:	mov    eax,DWORD PTR ds:0x571c0306
  40411a:	sub    eax,DWORD PTR [edx+0x7ae1d6a6]
  404120:	inc    esi
  404121:	pop    edx
  404122:	lahf   
  404123:	push   edx
  404124:	das    
  404125:	div    ebx
  404127:	xchg   edx,eax
  404128:	(bad)  
  404129:	in     ax,dx
  40412b:	fs add eax,0x4a
  40412f:	xor    bl,cl
  404131:	push   cs
  404132:	jb     0x4040fe
  404134:	jmp    0x4a51:0xcc8d99f4
  40413b:	push   0x14
  40413d:	push   cs
  40413e:	push   0x9c9904f2
  404143:	pop    ecx
  404144:	cmp    dh,al
  404146:	or     cl,BYTE PTR [esi+ebx*4-0x211de89e]
  40414d:	fadd   st(1),st
  40414f:	test   al,0xe
  404151:	push   ebx
  404152:	ret    0xdd03
  404155:	mov    ebx,0x388d32e8
  40415a:	mov    ds:0xcad0207b,al
  40415f:	pop    ebx
  404160:	hlt    
  404161:	nop
  404162:	sub    BYTE PTR [edx],bh
  404164:	ror    dl,1
  404166:	shl    esp,cl
  404168:	xor    al,0xe1
  40416a:	and    al,0x1b
  40416c:	cmp    DWORD PTR [edi-0x3f31d86c],0xffffffc5
  404173:	push   cs
  404174:	test   eax,0x91683ecf
  404179:	outs   dx,DWORD PTR ds:[esi]
  40417b:	mov    al,dh
  40417d:	xchg   ecx,eax
  40417e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40417f:	or     BYTE PTR [edi+0x4a],cl
  404182:	ins    BYTE PTR es:[edi],dx
  404183:	sub    eax,0xd84bef3f
  404188:	xchg   bh,al
  40418a:	aam    0x33
  40418c:	pop    ds
  40418d:	ins    BYTE PTR es:[edi],dx
  40418e:	ss or  al,0xae
  404191:	loopne 0x404137
  404193:	push   ebp
  404194:	pop    es
  404195:	into   
  404196:	repz enter 0xbca7,0xcb
  40419b:	sbb    al,0xbd
  40419d:	push   cs
  40419e:	mov    edi,0x2ed15223
  4041a3:	jmp    0x5c2f:0x8cd328cf
  4041aa:	lods   eax,DWORD PTR ds:[esi]
  4041ab:	test   ecx,0xe483f50e
  4041b1:	adc    al,0xd1
  4041b3:	pop    esp
  4041b4:	mov    al,ds:0x6229dd37
  4041b9:	jecxz  0x40416c
  4041bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041bc:	rcl    DWORD PTR [edx],cl
  4041be:	test   al,0x11
  4041c0:	xor    DWORD PTR [eax-0x3a],edx
  4041c3:	jmp    0x4041d4
  4041c5:	xor    eax,0x6bdfc84c
  4041ca:	call   0x9a8b9637
  4041cf:	sub    bl,BYTE PTR [edi-0x33e82fba]
  4041d5:	and    BYTE PTR [ecx-0x5f5b76c3],cl
  4041db:	pushf  
  4041dc:	jle    0x4041e8
  4041de:	sub    ebp,DWORD PTR [ebx]
  4041e0:	sub    al,0x53
  4041e2:	cmp    ebp,ebx
  4041e4:	pop    eax
  4041e5:	sub    BYTE PTR [edi],ch
  4041e7:	test   BYTE PTR [ecx],0x26
  4041ea:	add    BYTE PTR [esi],cl
  4041ec:	xor    dh,BYTE PTR [ebx]
  4041ee:	arpl   WORD PTR [esi+ecx*4-0x881e3de],di
  4041f5:	adc    edx,DWORD PTR [ecx]
  4041f7:	dec    esp
  4041f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041f9:	lea    esi,[esi+0x77c88031]
  4041ff:	popa   
  404200:	mov    ebx,0x6154907f
  404205:	cld    
  404206:	mov    WORD PTR [ebx],ds
  404208:	mov    bl,0xf0
  40420a:	sbb    esi,edi
  40420c:	pop    ss
  40420d:	mov    al,0x38
  40420f:	rcr    BYTE PTR [edx-0x4b7a5f29],1
  404215:	pop    esi
  404216:	test   eax,0x437de753
  40421b:	dec    BYTE PTR [eax]
  40421d:	fistp  WORD PTR [edi]
  40421f:	cs push edi
  404221:	fwait
  404222:	jnp    0x404266
  404224:	xor    BYTE PTR [ebx-0x31],cl
  404227:	ret    
  404228:	dec    esi
  404229:	xchg   ebx,eax
  40422a:	pop    edx
  40422b:	pushf  
  40422c:	push   0xd4dbec77
  404231:	hlt    
  404232:	dec    edx
  404233:	popa   
  404234:	inc    edx
  404235:	jge    0x404256
  404237:	rcl    DWORD PTR ds:0xf587ffad,1
  40423d:	je     0x4041c5
  40423f:	jns    0x404210
  404241:	(bad)  
  404242:	sbb    al,0xd5
  404244:	or     al,BYTE PTR [esi-0x360cdc83]
  40424a:	out    0x37,eax
  40424c:	cmc    
  40424d:	mov    al,0xb3
  40424f:	enter  0x9aec,0x73
  404253:	dec    edx
  404254:	push   ebp
  404255:	ins    DWORD PTR es:[edi],dx
  404256:	leave  
  404257:	aad    0x63
  404259:	mov    ds:0xa7bb5354,eax
  40425e:	div    BYTE PTR [esi]
  404260:	mov    BYTE PTR [eax],ah
  404262:	sub    eax,0xcca4df7
  404267:	es int3 
  404269:	ja     0x40429e
  40426b:	jo     0x4042e2
  40426d:	xchg   BYTE PTR [ebx+0x37],bl
  404270:	adc    eax,DWORD PTR [ecx-0x7b]
  404273:	and    dh,0x4a
  404276:	cmp    al,0x87
  404278:	inc    ebx
  404279:	jl     0x404286
  40427b:	popa   
  40427c:	sub    dl,BYTE PTR [ebx]
  40427e:	pop    ecx
  40427f:	push   eax
  404280:	test   al,0x86
  404282:	cmp    ah,BYTE PTR [ebp+ecx*2-0x2a54848c]
  404289:	gs aaa 
  40428b:	jnp    0x4042cc
  40428d:	mov    edx,0x5c1600c5
  404292:	and    ebp,DWORD PTR ds:0x1c65c5c
  404298:	sar    DWORD PTR [esi-0xd],cl
  40429b:	cwde   
  40429c:	int3   
  40429d:	dec    edx
  40429e:	out    0xdc,eax
  4042a0:	cmp    ch,BYTE PTR [edx+0xd3ba57f]
  4042a6:	xchg   ecx,eax
  4042a7:	imul   edi,DWORD PTR [ebp+0xc],0x6faf25e6
  4042ae:	sbb    eax,0x352c0fe5
  4042b3:	aaa    
  4042b4:	sub    eax,DWORD PTR [edi-0x3f5afcf]
  4042ba:	test   al,0x94
  4042bc:	shl    BYTE PTR [ebp-0x79ada7e0],1
  4042c2:	retf   0xc6d2
  4042c5:	adc    edx,esp
  4042c7:	xor    edi,DWORD PTR ds:0x6bbb4650
  4042cd:	popa   
  4042ce:	sub    ebx,eax
  4042d0:	rol    BYTE PTR [ebx-0x6f],cl
  4042d3:	ret    
  4042d4:	inc    ebx
  4042d5:	mov    ds:0x82a1069,al
  4042da:	in     al,dx
  4042db:	jl     0x4042f4
  4042dd:	mov    al,ds:0x723a865c
  4042e2:	stos   DWORD PTR es:[edi],eax
  4042e3:	push   ecx
  4042e4:	mov    edx,0x92272b16
  4042e9:	sbb    edx,esp
  4042eb:	inc    BYTE PTR [esi+0x66]
  4042ee:	ja     0x40433d
  4042f0:	xor    eax,DWORD PTR [esi-0x7676a91c]
  4042f6:	out    dx,al
  4042f7:	(bad)  
  4042f8:	lahf   
  4042f9:	or     dl,BYTE PTR [ebp-0x1729a42e]
  4042ff:	loopne 0x404348
  404301:	pop    edx
  404302:	xchg   esi,eax
  404303:	sub    eax,0xa8bbf0e7
  404308:	popa   
  404309:	and    dl,ch
  40430b:	add    al,0x3d
  40430d:	mov    al,ds:0x5cdef0d3
  404312:	jmp    DWORD PTR gs:[ebx]
  404315:	cli    
  404316:	(bad)  
  404317:	dec    edx
  404318:	xor    DWORD PTR [ebx],edx
  40431a:	mov    ds:0xc7d47f3,al
  40431f:	(bad)  
  404320:	bnd ret 0xc7e6
  404324:	pop    edi
  404325:	aaa    
  404326:	push   ebx
  404327:	and    cl,BYTE PTR [edi]
  404329:	push   ebx
  40432a:	push   ebx
  40432b:	mov    bh,0x10
  40432d:	jo     0x404319
  40432f:	and    edx,ebp
  404331:	jbe    0x404368
  404333:	push   ebp
  404334:	sub    eax,ebp
  404336:	mov    edi,0x227eb0d5
  40433b:	imul   ecx,DWORD PTR [ebp+0x13],0x3d
  40433f:	xor    DWORD PTR [edi-0x26],esi
  404342:	and    DWORD PTR [eax],0x44
  404345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404346:	(bad)  
  404348:	fimul  WORD PTR [edx]
  40434a:	xchg   esp,eax
  40434b:	call   0x110971f7
  404350:	inc    ecx
  404351:	out    dx,eax
  404352:	call   0x8ccef052
  404357:	fsubr  DWORD PTR [eax]
  404359:	xlat   BYTE PTR ds:[ebx]
  40435a:	rcr    esp,cl
  40435c:	adc    dl,BYTE PTR [eax]
  40435e:	call   0x9c4c:0x5ff07c8f
  404365:	(bad)  
  404366:	gs mov ds,ebp
  404369:	lock and DWORD PTR [esi+eax*8],eax
  40436d:	sbb    BYTE PTR [eax+0x0],cl
  404370:	aaa    
  404371:	push   ebx
  404372:	aaa    
  404373:	retf   
  404374:	jmp    0x4042f8
  404376:	sub    bh,bl
  404378:	rcl    DWORD PTR [edx],1
  40437a:	adc    eax,0x2fedfd0f
  40437f:	push   edx
  404380:	inc    esp
  404381:	in     eax,dx
  404382:	pop    esi
  404383:	cmp    eax,0xb8b571ac
  404388:	fild   QWORD PTR [edx]
  40438a:	jnp    0x404382
  40438c:	xlat   BYTE PTR ds:[ebx]
  40438d:	je     0x404351
  40438f:	imul   ebp,DWORD PTR ds:0xfd53b481,0x1d
  404396:	sbb    bh,BYTE PTR [ecx+0x7a]
  404399:	ss rcl esi,0xed
  40439d:	and    esi,ebx
  40439f:	jmp    0xe785:0xcd789c7a
  4043a6:	enter  0x3103,0x66
  4043aa:	mov    dl,0xa1
  4043ac:	ret    0xd355
  4043af:	mov    esi,0x65e54cf9
  4043b4:	xchg   esp,eax
  4043b5:	repz mov eax,ds:0x170c014f
  4043bb:	mov    ecx,0x3f11eef9
  4043c0:	call   0x4a899e29
  4043c5:	pop    ds
  4043c6:	mov    eax,ds:0x3ec17f31
  4043cb:	jae    0x4043f2
  4043cd:	stos   BYTE PTR es:[edi],al
  4043ce:	popf   
  4043cf:	fidiv  DWORD PTR [ebx+0x3a46920]
  4043d5:	lea    ebp,[eax+edi*8-0x343ba882]
  4043dc:	loopne 0x40440d
  4043de:	idiv   BYTE PTR [ebx]
  4043e0:	mov    edi,0xf28a7158
  4043e5:	jns    0x40436c
  4043e7:	cmp    esp,edx
  4043e9:	outs   dx,BYTE PTR ds:[esi]
  4043ea:	add    BYTE PTR [edx],cl
  4043ec:	mov    dh,0xa8
  4043ee:	(bad)  
  4043ef:	jo     0x4043a3
  4043f1:	inc    esp
  4043f2:	iret   
  4043f3:	imul   eax,esi,0x39500bb3
  4043f9:	and    DWORD PTR [ebx-0x36cee4ec],edx
  4043ff:	call   0x534d1e77
  404404:	jne    0x4043f9
  404406:	daa    
  404407:	dec    ebp
  404408:	sub    ebx,eax
  40440a:	add    eax,0xbe47a243
  40440f:	xchg   esp,eax
  404410:	mov    eax,ds:0xd163406a
  404415:	cmp    ch,BYTE PTR [esi-0x3bbc440e]
  40441b:	mov    esi,0xf8936ad4
  404421:	push   cs
  404422:	imul   ebx,ebx,0x79
  404425:	add    BYTE PTR [ebp-0x2d],al
  404428:	push   eax
  404429:	dec    eax
  40442a:	sbb    eax,0xb22f309
  40442f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404430:	mov    bh,cl
  404432:	adc    eax,0x679d5693
  404437:	cwde   
  404438:	sub    al,0x2e
  40443a:	jmp    DWORD PTR [ecx+0x6f662a18]
  404440:	call   0xae0d:0x645368b6
  404447:	cmp    ah,BYTE PTR [edx+0x7b8879c4]
  40444d:	push   es
  40444e:	push   ss
  40444f:	dec    ebp
  404450:	or     eax,DWORD PTR [ebx]
  404452:	inc    ebp
  404453:	jo     0x4043d9
  404455:	popa   
  404456:	test   edi,ebx
  404458:	push   0x2cea9b2a
  40445d:	pop    ebp
  40445e:	sahf   
  40445f:	xor    eax,0x34e18078
  404464:	leave  
  404465:	mov    ds:0x22b070a4,al
  40446a:	dec    ecx
  40446b:	and    al,0xf9
  40446d:	push   ecx
  40446e:	sub    BYTE PTR [ebp+0x4b95c6df],bh
  404474:	ja     0x4044bc
  404476:	pop    eax
  404477:	xor    bl,BYTE PTR [ecx+0x7c1ad92a]
  40447d:	and    cl,al
  40447f:	mov    al,ds:0xdd4ca5d6
  404484:	lods   eax,DWORD PTR ds:[esi]
  404485:	jns    0x40440c
  404487:	call   0x7ae30140
  40448c:	dec    esp
  40448d:	ds xchg edi,eax
  40448f:	push   eax
  404490:	sbb    ah,bh
  404492:	inc    ebp
  404493:	aam    0x76
  404495:	xor    BYTE PTR [edx],0x1b
  404498:	ins    DWORD PTR es:[edi],dx
  404499:	adc    al,0x89
  40449b:	mov    al,ds:0xdbe24c68
  4044a0:	sbb    esp,eax
  4044a2:	popf   
  4044a3:	hlt    
  4044a4:	cld    
  4044a5:	aad    0xb6
  4044a7:	and    cl,BYTE PTR [edi-0x7de0a72b]
  4044ad:	lea    ecx,[eax]
  4044af:	test   BYTE PTR [esi],0x3a
  4044b2:	repz inc edx
  4044b4:	jmp    FWORD PTR [ecx]
  4044b6:	cli    
  4044b7:	(bad)  
  4044b8:	xor    esp,edx
  4044ba:	inc    ecx
  4044bb:	ds push edi
  4044bd:	mov    dh,0x3e
  4044bf:	in     al,0x7f
  4044c1:	mov    esi,0x8c8cd948
  4044c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044c7:	or     al,BYTE PTR [edi]
  4044c9:	sub    al,0x83
  4044cb:	lea    ebp,[edx+0xf]
  4044ce:	popf   
  4044cf:	in     eax,0x46
  4044d1:	nop
  4044d2:	rcl    DWORD PTR [esi-0x50],cl
  4044d5:	loop   0x4044ae
  4044d7:	hlt    
  4044d8:	fadd   st,st(2)
  4044da:	adc    BYTE PTR [esi+0x661af28f],al
  4044e0:	or     al,0x7d
  4044e2:	xchg   ecx,eax
  4044e3:	rcr    bh,cl
  4044e5:	mov    eax,0x779cd363
  4044ea:	aad    0x36
  4044ec:	fld    TBYTE PTR [ebx]
  4044ee:	leave  
  4044ef:	cmp    esi,0xbb8ccc89
  4044f5:	inc    edx
  4044f6:	pop    ebx
  4044f7:	(bad)  
  4044f9:	or     eax,0xf24ab071
  4044fe:	popa   
  4044ff:	nop
  404500:	ret    0x2260
  404503:	cmp    cl,dh
  404505:	cmp    al,0x7d
  404507:	sub    eax,0xaa274aad
  40450c:	dec    ecx
  40450d:	cmc    
  40450e:	repz mov al,0x3c
  404511:	outs   dx,BYTE PTR cs:[esi]
  404513:	dec    edi
  404514:	sub    BYTE PTR [eax-0x34],cl
  404517:	loopne 0x404533
  404519:	fs ds ret 0x1b65
  40451e:	xchg   ebp,eax
  40451f:	(bad)  
  404520:	iret   
  404521:	mov    ecx,0xc37fae5f
  404526:	mov    edi,0x886a19cc
  40452b:	mov    ebp,0xc589212d
  404530:	or     bh,BYTE PTR [esi+0x381a336e]
  404536:	out    0x5f,al
  404538:	sbb    al,0x1
  40453a:	cmp    eax,0xd0b2b297
  40453f:	pop    ds
  404540:	leave  
  404541:	dec    eax
  404542:	jge    0x404514
  404544:	push   ebp
  404545:	and    dh,BYTE PTR [esi-0x64cb42ee]
  40454b:	faddp  st(0),st
  40454d:	outs   dx,DWORD PTR ds:[esi]
  40454e:	or     BYTE PTR [eax+0x2b],bh
  404551:	stos   DWORD PTR es:[edi],eax
  404552:	call   DWORD PTR [ecx+0x2c]
  404555:	into   
  404556:	mov    ah,0x4d
  404558:	sub    BYTE PTR [edi+edi*1],0xc5
  40455c:	add    dh,dl
  40455e:	bound  eax,QWORD PTR [ecx+eax*1-0x4f]
  404562:	stc    
  404563:	enter  0xe17c,0x76
  404567:	sbb    al,0xbd
  404569:	adc    dh,BYTE PTR [ebp-0x7a]
  40456c:	ins    BYTE PTR es:[edi],dx
  40456d:	cmp    al,0x80
  40456f:	imul   ebx,DWORD PTR [esp+esi*4+0x71],0xfffffffb
  404574:	retf   0x346c
  404577:	xor    BYTE PTR [eax-0x4a3583e8],0x6d
  40457e:	adc    al,0x40
  404580:	ja     0x4045d2
  404582:	popa   
  404583:	mov    ebx,0x6c1712e3
  404588:	dec    esi
  404589:	pop    ebx
  40458a:	adc    DWORD PTR [esi+0x27730111],ebx
  404590:	pop    esi
  404591:	jg     0x4045dd
  404593:	jbe    0x4045eb
  404595:	imul   ecx,DWORD PTR [esi],0xb699097c
  40459b:	sbb    edi,DWORD PTR [eax]
  40459d:	mov    ds:0x466e2a6b,al
  4045a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a3:	lock enter 0x1c5d,0x27
  4045a8:	adc    edx,DWORD PTR [esi-0x21c8546f]
  4045ae:	adc    dh,BYTE PTR [ebp+0x17624551]
  4045b4:	xchg   ecx,eax
  4045b5:	mov    dh,0xd5
  4045b7:	inc    edi
  4045b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b9:	retf   0xc076
  4045bc:	repnz rcr BYTE PTR [eax+ecx*1-0x2],0x5f
  4045c2:	pushf  
  4045c3:	push   ecx
  4045c4:	inc    esi
  4045c5:	in     al,0xc0
  4045c7:	push   edi
  4045c8:	add    al,0x93
  4045ca:	fs inc esi
  4045cc:	mov    al,0x1d
  4045ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045cf:	scas   al,BYTE PTR es:[edi]
  4045d0:	xchg   ecx,eax
  4045d1:	dec    ecx
  4045d2:	add    ebp,esi
  4045d4:	sub    BYTE PTR [ecx-0x35],bh
  4045d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045da:	inc    DWORD PTR ds:0x83f43be2
  4045e0:	dec    edx
  4045e1:	fs lock jne 0x404630
  4045e5:	aas    
  4045e6:	jb     0x4045d0
  4045e8:	add    eax,0xb892a474
  4045ed:	xchg   ecx,eax
  4045ee:	int    0x8c
  4045f0:	(bad)  
  4045f1:	lods   eax,DWORD PTR ds:[esi]
  4045f2:	div    DWORD PTR [eax]
  4045f4:	mov    ebp,0x57db8c68
  4045f9:	push   edi
  4045fa:	aam    0xd2
  4045fc:	aas    
  4045fd:	inc    edi
  4045fe:	test   DWORD PTR [ecx],ecx
  404600:	stos   DWORD PTR es:[edi],eax
  404601:	loope  0x4045ad
  404603:	int    0x6f
  404605:	jo     0x4045e2
  404607:	js     0x4045b3
  404609:	stos   BYTE PTR es:[edi],al
  40460a:	mov    dh,0xab
  40460c:	inc    ebp
  40460d:	xchg   DWORD PTR ds:0xcac2a46d,ecx
  404613:	mov    esp,0x14e66663
  404618:	aam    0xf0
  40461a:	into   
  40461b:	adc    BYTE PTR [edx-0x7747718c],ah
  404621:	pushf  
  404622:	cdq    
  404623:	mov    ebx,0x9297c6d9
  404628:	ss sbb eax,ebx
  40462b:	cmp    cl,BYTE PTR [ecx-0x10df5179]
  404631:	(bad)
  404634:	mov    eax,0x263d4852
  404639:	enter  0x9a1,0x87
  40463d:	shr    esi,cl
  40463f:	ret    0x3f50
  404642:	mov    esi,0xb469fd86
  404647:	or     al,0x57
  404649:	leave  
  40464a:	loope  0x40469c
  40464c:	mov    esi,0xdbd3b0d4
  404651:	out    dx,eax
  404652:	in     eax,0xb9
  404654:	dec    esi
  404655:	jno    0x4046bd
  404657:	xchg   edx,eax
  404658:	out    0xda,eax
  40465a:	loope  0x4046b5
  40465c:	scas   eax,DWORD PTR es:[edi]
  40465d:	(bad)  
  40465e:	or     eax,0xc8274c65
  404663:	imul   ebx,DWORD PTR [edx-0x63],0xfffffff1
  404667:	mov    ah,0xfd
  404669:	cli    
  40466a:	(bad)  
  40466b:	mov    edi,0x40a8423
  404670:	push   ebp
  404671:	mov    ebp,0xc5579d72
  404676:	or     BYTE PTR [ebp+0x17],bh
  404679:	or     dh,bl
  40467b:	add    al,0x67
  40467d:	arpl   WORD PTR [edi],ax
  40467f:	dec    eax
  404680:	movlps QWORD PTR ds:0xf4e12dc0,xmm5
  404687:	popa   
  404688:	adc    eax,0xa9508d82
  40468d:	enter  0xc802,0x6a
  404691:	das    
  404692:	retf   0xe896
  404695:	es xchg esi,eax
  404697:	xchg   ebp,eax
  404698:	push   ecx
  404699:	add    al,BYTE PTR [edi]
  40469b:	outs   dx,DWORD PTR ds:[esi]
  40469d:	jle    0x4046af
  40469f:	mov    dh,0x5
  4046a1:	and    al,0xef
  4046a3:	jg     0x404710
  4046a5:	inc    edx
  4046a6:	pop    eax
  4046a7:	cwde   
  4046a8:	(bad)  
  4046a9:	fisub  WORD PTR [ebp+eax*8+0x79]
  4046ad:	and    BYTE PTR [ebx+0x55cd2bd5],0x6b
  4046b4:	out    0x1e,al
  4046b6:	xor    al,dl
  4046b8:	sbb    BYTE PTR [edi],bl
  4046ba:	ficomp DWORD PTR [eax-0x74]
  4046bd:	xchg   edi,eax
  4046be:	cmp    DWORD PTR [esi-0x1cddcf01],eax
  4046c4:	push   esi
  4046c5:	dec    esp
  4046c7:	imul   edi,DWORD PTR [esi+0x1d08d84f],0x21
  4046ce:	sti    
  4046cf:	dec    ebx
  4046d0:	pop    edi
  4046d1:	jne    0x404708
  4046d3:	popf   
  4046d4:	pop    edx
  4046d5:	ret    
  4046d6:	cs pop ds
  4046d8:	mov    ch,0x1b
  4046da:	push   esp
  4046db:	mov    eax,ds:0xea511ecd
  4046e0:	mov    ah,ah
  4046e2:	inc    esp
  4046e3:	jle    0x40471d
  4046e5:	(bad)  
  4046e6:	cld    
  4046e7:	hlt    
  4046e8:	dec    ebp
  4046e9:	xor    edx,DWORD PTR [edi-0x5c]
  4046ec:	and    DWORD PTR [esi-0x24dd22b2],ecx
  4046f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046f3:	mov    eax,ds:0xddba6183
  4046f8:	test   BYTE PTR [esp+esi*2+0x52b79f8a],0x66
  404700:	xchg   edx,eax
  404701:	dec    ecx
  404702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404703:	jge    0x404763
  404705:	out    dx,eax
  404706:	and    ah,BYTE PTR [si-0x78]
  40470a:	jb     0x40473c
  40470c:	adc    ch,0xb3
  40470f:	adc    al,0x5f
  404711:	push   cs
  404712:	into   
  404713:	stos   DWORD PTR es:[edi],eax
  404714:	sub    DWORD PTR ds:0xfcba935d,esp
  40471a:	sub    eax,0xdc0dc897
  40471f:	pop    es
  404720:	fsub   st,st(0)
  404722:	sbb    ah,BYTE PTR [ebx]
  404724:	icebp  
  404725:	les    esp,FWORD PTR [edi+0x40]
  404728:	xchg   esi,eax
  404729:	int    0x86
  40472b:	stos   DWORD PTR es:[edi],eax
  40472c:	pusha  
  40472d:	fld    QWORD PTR [eax]
  40472f:	and    eax,0x22b31c39
  404734:	in     al,dx
  404735:	imul   ebx,DWORD PTR [ebp+0x5f],0x867fc38f
  40473c:	jo     0x4047b6
  40473e:	(bad)  
  40473f:	pop    ecx
  404740:	repz std 
  404742:	jnp    0x404766
  404744:	cmp    ch,ch
  404746:	mov    edi,DWORD PTR [edx+0x5b60ff9e]
  40474c:	lods   eax,DWORD PTR ds:[esi]
  40474d:	mov    eax,0xd80323af
  404752:	push   es
  404753:	lods   eax,DWORD PTR ds:[esi]
  404754:	fldenv [edi+0xf4be96c]
  40475a:	mov    bh,0x97
  40475c:	inc    ebp
  40475d:	std    
  40475e:	js     0x4047ad
  404760:	rcl    BYTE PTR [ecx-0x24],0x9a
  404764:	mov    ebp,0x1fb40d01
  404769:	push   ecx
  40476a:	jmp    0x40475f
  40476c:	dec    ecx
  40476d:	(bad)  
  40476e:	add    BYTE PTR [edi-0x1f9ffd6b],al
  404774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404775:	pop    edi
  404776:	iret   
  404777:	jecxz  0x40473c
  404779:	rcr    DWORD PTR ds:[esi-0x1f],1
  40477d:	test   ebp,eax
  40477f:	icebp  
  404780:	inc    edi
  404781:	into   
  404782:	cld    
  404783:	call   0x6d5aaf27
  404788:	sbb    cl,BYTE PTR [ebx]
  40478a:	ins    DWORD PTR es:[edi],dx
  40478b:	cmp    BYTE PTR [edi],al
  40478d:	sti    
  40478e:	stos   DWORD PTR es:[edi],eax
  40478f:	outs   dx,DWORD PTR ds:[esi]
  404790:	sahf   
  404791:	adc    ebp,DWORD PTR [edi+0x3f]
  404794:	loopne 0x404815
  404796:	enter  0x419f,0x20
  40479a:	xor    esp,DWORD PTR [edx]
  40479c:	push   eax
  40479d:	imul   ebx,ebp,0xc4fef226
  4047a3:	data16 outs dx,BYTE PTR ds:[esi]
  4047a5:	add    dl,BYTE PTR [edi+0x5b]
  4047a8:	xor    ebx,ecx
  4047aa:	fist   DWORD PTR [esi+0x1c]
  4047ad:	adc    dh,bl
  4047af:	mov    edi,0x9ba1479d
  4047b4:	jb     0x4047a5
  4047b6:	push   ds
  4047b7:	push   ebp
  4047b8:	xlat   BYTE PTR ds:[ebx]
  4047b9:	retf   0xd54e
  4047bc:	pop    ebx
  4047bd:	rcr    DWORD PTR [ebp+0xfed8898],1
  4047c3:	mov    al,0xee
  4047c5:	inc    edi
  4047c6:	xchg   DWORD PTR [edi+0x2f2386cc],ecx
  4047cc:	into   
  4047cd:	and    edx,edx
  4047cf:	inc    ebx
  4047d0:	rcr    BYTE PTR [ecx],cl
  4047d2:	out    dx,al
  4047d3:	cdq    
  4047d4:	inc    edx
  4047d5:	lahf   
  4047d6:	sub    al,0x82
  4047d8:	fs ret 0x3e29
  4047dc:	jp     0x40482f
  4047de:	cmp    DWORD PTR [ebx+ebp*8-0x75999532],0x1f
  4047e6:	mov    ecx,0xd06f039a
  4047eb:	jg     0x4047a3
  4047ed:	xor    dh,BYTE PTR [esi-0x7ea334f0]
  4047f3:	mov    bh,0x19
  4047f5:	loope  0x4047d5
  4047f7:	outs   dx,BYTE PTR ds:[esi]
  4047f8:	sahf   
  4047f9:	xchg   BYTE PTR [edi-0x1f6861dc],cl
  4047ff:	jns    0x404868
  404801:	sub    al,0xde
  404803:	data16 into 
  404805:	stos   DWORD PTR es:[edi],eax
  404806:	push   eax
  404807:	push   0xf84f20d5
  40480c:	xchg   BYTE PTR [edx+0x6372b7a5],dl
  404812:	pop    ebx
  404813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404814:	ja     0x4047f3
  404816:	mov    eax,0x4e89b4f5
  40481b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481c:	jmp    0x404868
  40481e:	xchg   ecx,eax
  40481f:	gs and ah,bl
  404822:	mov    esi,0x168dd484
  404827:	inc    esi
  404828:	je     0x40484e
  40482a:	es xchg esp,eax
  40482c:	or     al,0x88
  40482e:	mov    edx,0xe24ab15f
  404833:	rcl    DWORD PTR [ecx+0x76d65715],1
  404839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40483a:	pop    ebx
  40483b:	call   0xf6cb9e5c
  404840:	popf   
  404841:	gs fs (bad) 
  404844:	mov    cl,0xfd
  404846:	test   al,0x4c
  404848:	pop    edi
  404849:	push   0x15
  40484b:	dec    edi
  40484c:	xor    BYTE PTR [ebp+0x502831c7],cl
  404852:	cmp    BYTE PTR [esi-0x19],ah
  404855:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  404857:	cmp    bh,bl
  404859:	add    al,0xd5
  40485b:	pushf  
  40485c:	adc    cl,BYTE PTR [ebx+ebx*2+0x67]
  404860:	mov    al,ds:0xf565deaf
  404865:	test   ebp,ecx
  404867:	xor    al,0x27
  404869:	xchg   DWORD PTR [ebx],eax
  40486b:	pop    edx
  40486c:	repnz cmp bl,dh
  40486f:	stos   BYTE PTR es:[edi],al
  404870:	icebp  
  404871:	inc    eax
  404872:	mov    esp,0xe1aab6dc
  404877:	rcr    esi,1
  404879:	xchg   ah,dh
  40487b:	push   es
  40487c:	dec    ebx
  40487d:	mov    esp,?
  40487f:	test   bh,bh
  404881:	adc    dh,dh
  404883:	mov    edx,DWORD PTR [edx]
  404885:	dec    BYTE PTR [edx+0x6412e056]
  40488b:	popa   
  40488c:	inc    edx
  40488d:	je     0x40481e
  40488f:	xadd   DWORD PTR [ecx-0x17],esi
  404893:	mov    ds:0x3e7cb97,eax
  404898:	sti    
  404899:	push   0x1
  40489b:	inc    ebp
  40489c:	mov    eax,ds:0x46f2ca33
  4048a1:	and    al,0x5c
  4048a3:	xlat   BYTE PTR ds:[ebx]
  4048a4:	and    DWORD PTR [edi],ebp
  4048a6:	mov    bl,0x65
  4048a8:	cmc    
  4048a9:	xor    BYTE PTR [edi-0xc6a93de],dh
  4048af:	aad    0xf5
  4048b1:	sahf   
  4048b2:	es pop ebp
  4048b4:	jge    0x40492d
  4048b6:	mov    esi,0xe09aa6e3
  4048bc:	js     0x4048e4
  4048be:	sbb    bl,BYTE PTR [ebx]
  4048c0:	jmp    0x40491e
  4048c2:	int3   
  4048c3:	(bad)
  4048c7:	stos   BYTE PTR es:[edi],al
  4048c8:	popf   
  4048c9:	aad    0xf8
  4048cb:	jp     0x40492d
  4048cd:	ret    
  4048ce:	sar    eax,1
  4048d0:	inc    edi
  4048d1:	repz jg 0x4048d4
  4048d4:	jmp    0x80d013fe
  4048d9:	pusha  
  4048da:	bound  ebx,QWORD PTR [ecx+0x2c]
  4048dd:	iret   
  4048de:	xchg   edx,eax
  4048df:	imul   edi,ecx,0x3fc21007
  4048e5:	shl    DWORD PTR [esi+0x55],1
  4048e8:	jp     0x40491d
  4048ea:	int    0x6d
  4048ec:	or     al,0xe1
  4048ee:	pop    es
  4048ef:	xor    dh,cl
  4048f1:	scas   eax,DWORD PTR es:[edi]
  4048f2:	pop    ds
  4048f3:	sbb    BYTE PTR [ebp+ecx*4+0x15],dh
  4048f7:	dec    ecx
  4048f8:	and    edx,DWORD PTR [ebp+0x28d4c9fa]
  4048fe:	cmp    eax,0xa4dc9c48
  404903:	xchg   esi,eax
  404904:	mov    esi,0xec41f58
  404909:	jmp    0x404904
  40490b:	cmc    
  40490c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40490d:	in     eax,dx
  40490e:	mov    ecx,0xbcdcf836
  404913:	sub    al,0xca
  404915:	add    ch,BYTE PTR [ebx-0x68]
  404918:	inc    ebx
  404919:	xchg   esi,eax
  40491a:	mov    ebx,0xe8204055
  40491f:	adc    eax,esi
  404921:	inc    ebx
  404922:	adc    dl,BYTE PTR [ebp+0x63]
  404925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404926:	btc    DWORD PTR [edx-0x66c2e64a],esp
  40492d:	int3   
  40492e:	jge    0x40496a
  404930:	in     al,dx
  404931:	mov    ds:0xe09a2e33,eax
  404936:	and    DWORD PTR [edi],ebp
  404938:	fcmove st,st(1)
  40493a:	dec    DWORD PTR [ebp+ebp*2+0x5af9091c]
  404941:	rol    ebp,cl
  404943:	pop    esi
  404944:	add    dh,BYTE PTR [ebx+0x46e59e34]
  40494a:	xor    DWORD PTR [edi],edi
  40494c:	(bad)  
  40494d:	dec    esi
  40494e:	int    0xc8
  404950:	pusha  
  404951:	inc    edi
  404952:	push   cs
  404953:	in     eax,0xa4
  404955:	shl    DWORD PTR [eax],cl
  404957:	mov    ecx,es
  404959:	sbb    ah,ah
  40495b:	and    BYTE PTR [ebx+0x4863eca4],cl
  404961:	adc    edx,DWORD PTR [ebx-0x22]
  404964:	(bad)  
  404965:	inc    ebp
  404966:	sub    ebx,DWORD PTR [edx+0x1e7bfc0d]
  40496c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40496d:	pop    ebp
  40496e:	push   ds
  40496f:	pop    ebp
  404970:	jge    0x404920
  404972:	dec    esp
  404973:	fistp  WORD PTR [esi-0x40]
  404976:	nop
  404977:	mov    ds,ebp
  404979:	mov    dh,0x81
  40497b:	pop    es
  40497c:	(bad)  
  40497d:	retf   0x9810
  404980:	jne    0x404935
  404982:	cld    
  404983:	push   eax
  404984:	mov    bl,0x81
  404986:	xor    ebp,DWORD PTR [ecx]
  404988:	jl     0x404990
  40498a:	mov    dl,0x1d
  40498c:	rep stos DWORD PTR es:[edi],eax
  40498e:	adc    dh,BYTE PTR [ebx-0x3d]
  404991:	and    al,dl
  404993:	mov    ch,0xca
  404995:	pop    ds
  404996:	aam    0xe6
  404998:	sub    eax,eax
  40499a:	sub    eax,0x6008af9d
  40499f:	loopne 0x404939
  4049a1:	lods   eax,DWORD PTR ds:[esi]
  4049a2:	and    BYTE PTR [eax+0x2e],al
  4049a5:	lods   eax,DWORD PTR ds:[esi]
  4049a6:	xchg   ebp,eax
  4049a7:	add    BYTE PTR [ebp-0x2c],0xac
  4049ab:	out    dx,eax
  4049ac:	add    ebp,DWORD PTR [ebx]
  4049ae:	sti    
  4049af:	aaa    
  4049b0:	add    DWORD PTR [ebx+0x7f],ebx
  4049b3:	sub    eax,0xf7beab89
  4049b8:	mov    al,ds:0x2e2a67ce
  4049bd:	imul   edi,DWORD PTR [ebp-0x2c],0x3d
  4049c1:	out    dx,al
  4049c2:	dec    esi
  4049c3:	mov    ebx,0x8f9491e0
  4049c8:	mov    DWORD PTR [edi-0x3ae99e81],ecx
  4049ce:	ror    DWORD PTR [esi],cl
  4049d0:	xlat   BYTE PTR ds:[ebx]
  4049d1:	(bad)  
  4049d2:	loopne 0x40497e
  4049d4:	adc    esp,DWORD PTR [ebx+0x6d]
  4049d7:	cmp    DWORD PTR [edx+ebx*4],ebx
  4049da:	addr16 out dx,al
  4049dc:	pusha  
  4049dd:	cmp    al,0x2d
  4049df:	out    dx,eax
  4049e0:	inc    ebp
  4049e1:	mov    ah,0x3b
  4049e3:	xor    al,0x42
  4049e5:	aam    0xd9
  4049e7:	fs jmp 0x2e72:0xe6e64c4f
  4049ef:	retf   0x609
  4049f2:	sahf   
  4049f3:	xor    BYTE PTR [ebx+0x4b],dl
  4049f6:	adc    DWORD PTR [ebx-0x47],edi
  4049f9:	push   0xdd41ce7c
  4049fe:	fist   DWORD PTR [edx-0x61]
  404a01:	mov    ds:0x97307f03,al
  404a06:	pusha  
  404a07:	mov    eax,ds:0x78f1628d
  404a0c:	cmp    bl,BYTE PTR [ebp+0x78748f08]
  404a12:	pop    edi
  404a13:	test   DWORD PTR [eax-0x6c0c37da],ebx
  404a19:	pop    eax
  404a1a:	dec    esi
  404a1b:	add    eax,0x4de579b5
  404a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a21:	loope  0x404a26
  404a23:	push   0xffffffc6
  404a25:	cmp    esi,DWORD PTR [ecx+0x76]
  404a28:	ds add eax,0x21
  404a2c:	or     al,0x6
  404a2e:	mov    ebp,0x7e50ceb9
  404a33:	add    al,BYTE PTR [ebx+0x1cdf2257]
  404a39:	dec    ebx
  404a3a:	gs pop eax
  404a3c:	aaa    
  404a3d:	je     0x4049ca
  404a3f:	jle    0x404a4e
  404a41:	sbb    edx,DWORD PTR [ebp-0x6923dc7e]
  404a47:	iret   
  404a48:	in     al,dx
  404a49:	inc    ecx
  404a4a:	xchg   ebp,eax
  404a4b:	test   esp,esi
  404a4d:	jg     0x404a11
  404a4f:	mov    cl,0xac
  404a51:	ja     0x404a37
  404a53:	arpl   WORD PTR [esp+ecx*8],si
  404a56:	mov    bl,0x74
  404a58:	sub    eax,0xcb82fb59
  404a5d:	mov    ebp,0x2763c821
  404a62:	leave  
  404a63:	and    al,0x8e
  404a65:	mov    DWORD PTR [ecx+0x4189938c],0x9ae6ef7a
  404a6f:	dec    edx
  404a70:	rcl    DWORD PTR [ebp+0x1c],cl
  404a73:	pop    esp
  404a74:	je     0x404a75
  404a76:	or     ch,BYTE PTR [eax]
  404a78:	aaa    
  404a79:	sbb    edx,ecx
  404a7b:	xchg   ecx,eax
  404a7c:	inc    edi
  404a7d:	aas    
  404a7e:	inc    ebp
  404a7f:	mov    cl,0x90
  404a81:	push   es
  404a82:	or     al,BYTE PTR [edi+0x34]
  404a85:	(bad)
  404a88:	jecxz  0x404a3b
  404a8a:	mov    ds:0x44b6b279,al
  404a8f:	push   esi
  404a90:	jmp    0x404a83
  404a92:	mov    ds:0xf18d36f8,eax
  404a97:	stc    
  404a98:	ret    0xfbcc
  404a9b:	or     dl,BYTE PTR [esi+edi*8+0x6b]
  404a9f:	lds    edi,FWORD PTR [ecx-0x30]
  404aa2:	repz out 0xb0,eax
  404aa5:	ins    DWORD PTR es:[edi],dx
  404aa6:	push   eax
  404aa7:	push   ebp
  404aa8:	cmp    eax,ebx
  404aaa:	dec    BYTE PTR ds:0x881487d0
  404ab0:	stc    
  404ab1:	(bad)  
  404ab2:	mov    ebp,edi
  404ab4:	pusha  
  404ab5:	test   DWORD PTR [edx+0x3c569654],esi
  404abb:	and    eax,0x7cf3e503
  404ac0:	js     0x404a8d
  404ac2:	enter  0xb1fa,0xff
  404ac6:	test   eax,edx
  404ac8:	pop    edi
  404aca:	into   
  404acb:	ds add bh,dh
  404ace:	cmp    dh,BYTE PTR [edx]
  404ad0:	shl    BYTE PTR [ebx-0x739d4b75],1
  404ad6:	std    
  404ad7:	cmp    BYTE PTR ds:0xb79750b,dl
  404add:	into   
  404ade:	(bad)  
  404adf:	cmp    DWORD PTR [esi+eax*4+0x2e],ebx
  404ae3:	cmp    DWORD PTR [eax+eax*2],ebp
  404ae6:	add    al,0xb4
  404ae8:	(bad)  
  404ae9:	jmp    0x404ab1
  404aeb:	rcl    BYTE PTR [ecx+0xe3e2b28],0x4a
  404af2:	jo     0x404ac4
  404af4:	xlat   BYTE PTR ds:[ebx]
  404af5:	loop   0x404b6c
  404af7:	leave  
  404af8:	mov    bl,cl
  404afa:	lods   eax,DWORD PTR ds:[esi]
  404afb:	aaa    
  404afc:	cmp    al,0x52
  404afe:	sub    bh,dh
  404b00:	cmc    
  404b01:	aam    0x97
  404b03:	idiv   bh
  404b05:	xor    ah,cl
  404b07:	adc    esp,DWORD PTR ds:[ebx+esi*4-0x2b]
  404b0c:	inc    edi
  404b0d:	aam    0x2e
  404b0f:	stc    
  404b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b11:	xchg   ecx,eax
  404b12:	inc    ebp
  404b13:	dec    eax
  404b14:	ret    
  404b15:	adc    al,0xcc
  404b17:	(bad)  
  404b19:	inc    edi
  404b1a:	cmp    dl,BYTE PTR [ecx+0x50]
  404b1d:	push   esi
  404b1e:	retf   0xca0d
  404b21:	mov    esi,0x1f029cb9
  404b26:	call   0x4b36aca0
  404b2b:	mov    eax,ds:0x410dff7f
  404b30:	add    esp,ebp
  404b32:	mov    DWORD PTR [edi],ecx
  404b34:	stos   BYTE PTR es:[edi],al
  404b35:	xlat   BYTE PTR ds:[ebx]
  404b36:	(bad)  
  404b37:	test   DWORD PTR [ebp-0x71],esp
  404b3a:	mov    ds:0x7eec75b4,eax
  404b3f:	push   esi
  404b40:	push   ebx
  404b41:	push   0x67
  404b43:	lock stc 
  404b45:	lds    esi,FWORD PTR [ebx]
  404b47:	push   es
  404b48:	imul   esp,edx,0xb6004e00
  404b4e:	neg    ch
  404b50:	mov    BYTE PTR [ebx+ecx*2-0x610f79a4],cl
  404b57:	and    al,0xb2
  404b59:	sbb    ah,BYTE PTR [esi]
  404b5b:	push   0x42
  404b5d:	iret   
  404b5e:	fst    DWORD PTR [esp+eiz*2]
  404b61:	sub    BYTE PTR [edx-0x4],al
  404b64:	add    eax,0x6cb11ee1
  404b69:	mov    esp,0xf274946a
  404b6e:	int    0x10
  404b70:	xchg   esp,eax
  404b71:	and    ch,BYTE PTR [ecx]
  404b73:	xor    eax,0x1a97a079
  404b78:	inc    ebx
  404b79:	push   esi
  404b7a:	leave  
  404b7b:	push   ss
  404b7c:	adc    BYTE PTR [eax-0x2a],dl
  404b7f:	sbb    al,0x9d
  404b81:	pop    ecx
  404b82:	mov    bh,0x47
  404b84:	lods   eax,DWORD PTR ds:[esi]
  404b85:	rcr    ah,0xea
  404b88:	add    dh,BYTE PTR [edi]
  404b8a:	dec    esp
  404b8b:	pop    esi
  404b8c:	shl    DWORD PTR [edi],0x5c
  404b8f:	cmp    dl,0x51
  404b92:	jecxz  0x404bde
  404b94:	shl    BYTE PTR [edx-0x43],cl
  404b97:	adc    BYTE PTR [ebx],dh
  404b99:	cli    
  404b9a:	bound  ecx,QWORD PTR [edx]
  404b9c:	jge    0x404bf3
  404b9e:	adc    dh,BYTE PTR [ebx]
  404ba0:	jmp    0x404bb8
  404ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba3:	pop    ebp
  404ba4:	icebp  
  404ba5:	lods   al,BYTE PTR ds:[esi]
  404ba6:	(bad)  
  404ba7:	mov    ds:0x3253913a,al
  404bac:	fadd   QWORD PTR [esi]
  404bae:	sub    ch,BYTE PTR [edx+0x57d46ed2]
  404bb4:	fwait
  404bb5:	aad    0x8b
  404bb7:	xchg   esp,eax
  404bb8:	jle    0x404b7b
  404bba:	aas    
  404bbb:	clc    
  404bbc:	xor    BYTE PTR [esi],dh
  404bbe:	mov    ch,0x19
  404bc0:	shr    DWORD PTR [edx+0x145cbe7c],0x58
  404bc7:	add    al,0xe4
  404bc9:	jb     0x404c2b
  404bcb:	out    dx,eax
  404bcc:	add    cl,0xcb
  404bcf:	dec    esp
  404bd0:	js     0x404c31
  404bd2:	inc    ebx
  404bd3:	imul   ebx,DWORD PTR [esi-0x45],0x4d
  404bd7:	adc    DWORD PTR [esi+0x587a254e],esp
  404bdd:	dec    eax
  404bde:	pop    edx
  404bdf:	or     ah,dl
  404be1:	cmp    DWORD PTR [ebp-0x2d],eax
  404be4:	mov    ds:0x79c66fa,eax
  404be9:	adc    ah,BYTE PTR [ebp+eax*1-0x52]
  404bed:	lds    eax,FWORD PTR [edx]
  404bef:	stc    
  404bf0:	push   0x4a
  404bf2:	outs   dx,BYTE PTR ds:[esi]
  404bf3:	ja     0x404c22
  404bf5:	pop    edi
  404bf6:	lock jp 0x404c07
  404bf9:	add    al,BYTE PTR [esp+ebx*2-0x2e590d98]
  404c00:	sbb    DWORD PTR [edi+ebx*8+0x13],0x6a
  404c05:	shl    BYTE PTR es:[ecx],cl
  404c08:	xchg   ebx,eax
  404c09:	or     eax,0xf747dda4
  404c0e:	jecxz  0x404c01
  404c10:	in     eax,0x8a
  404c12:	push   ds
  404c13:	mov    eax,ds:0xa540324f
  404c18:	mov    ecx,0x758bf54b
  404c1d:	pushaw 
  404c1f:	hlt    
  404c20:	xchg   ebp,eax
  404c21:	repz call 0xa22b7c7e
  404c27:	xor    al,0xf5
  404c29:	cwde   
  404c2a:	push   ebx
  404c2b:	add    dh,bl
  404c2d:	addr16 mov al,ds:0x2ff7
  404c31:	cmp    DWORD PTR cs:[ebp+ecx*4+0x2cdf70f],edi
  404c39:	outs   dx,DWORD PTR ds:[esi]
  404c3a:	test   eax,0x6abd672
  404c3f:	lods   al,BYTE PTR ds:[esi]
  404c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c41:	jle    0x404c96
  404c43:	test   ah,dh
  404c45:	inc    ebp
  404c46:	aas    
  404c47:	loop   0x404c20
  404c49:	pop    DWORD PTR [ecx-0x2c29f932]
  404c4f:	push   ecx
  404c50:	add    al,0x5f
  404c52:	mov    WORD PTR [ecx-0x4a],?
  404c55:	shl    BYTE PTR [edx],0xff
  404c58:	mov    cl,0x7
  404c5a:	push   ebx
  404c5b:	jns    0x404cb5
  404c5d:	cwde   
  404c5e:	xchg   esp,eax
  404c5f:	lea    ecx,[eax-0x5e]
  404c62:	imul   esi,DWORD PTR [edx+0x79],0x5b4cffed
  404c69:	fstp   QWORD PTR [edi]
  404c6b:	xchg   ebp,eax
  404c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c6d:	dec    edi
  404c6e:	pushf  
  404c6f:	test   edx,ecx
  404c71:	hlt    
  404c72:	mov    dl,0xec
  404c74:	test   ecx,esp
  404c76:	ja     0x404c4c
  404c78:	int3   
  404c79:	retf   0xd1f0
  404c7c:	inc    ecx
  404c7d:	pop    edi
  404c7e:	pop    ss
  404c7f:	adc    al,BYTE PTR [ecx-0x347c84f8]
  404c85:	sub    eax,0xc81e27c4
  404c8a:	mov    edi,0x6c3b935
  404c8f:	loop   0x404d0f
  404c91:	jp     0x404d0a
  404c93:	inc    esi
  404c94:	adc    BYTE PTR [ecx+0x15d48bda],dl
  404c9a:	inc    ecx
  404c9b:	xor    DWORD PTR ds:[esi],ecx
  404c9e:	mov    al,ds:0x48e05cdf
  404ca3:	mov    ch,0x38
  404ca5:	pushf  
  404ca6:	int    0xfb
  404ca8:	rcr    bh,cl
  404caa:	aam    0x65
  404cac:	dec    ecx
  404cad:	mov    ecx,0x19d1d38a
  404cb2:	ret    0xf276
  404cb5:	(bad)  
  404cb6:	loop   0x404c65
  404cb8:	mov    BYTE PTR [esi+0x3f],ah
  404cbb:	pop    ebx
  404cbc:	outs   dx,DWORD PTR ds:[esi]
  404cbd:	dec    esi
  404cbe:	xchg   edx,eax
  404cbf:	outs   dx,DWORD PTR ds:[esi]
  404cc0:	test   al,0xd6
  404cc2:	mov    ebx,0x594e8f21
  404cc7:	call   0xfc68b7c3
  404ccc:	mov    dl,0x5
  404cce:	sbb    eax,0xaca996e8
  404cd3:	sub    bl,BYTE PTR [ebx+ecx*2-0x67]
  404cd7:	or     BYTE PTR [edx-0x1e],0x8e
  404cdb:	push   es
  404cdc:	js     0x404c94
  404cde:	mov    al,ds:0x8ff07a10
  404ce3:	repz ret 
  404ce5:	cmp    dh,BYTE PTR [edx+0x3a9d4c23]
  404ceb:	in     eax,dx
  404cec:	out    dx,eax
  404ced:	mov    WORD PTR [esi+ebp*4],fs
  404cf0:	mov    dl,0x7
  404cf2:	mov    edi,0xa94b7676
  404cf7:	mov    BYTE PTR [esi],dl
  404cf9:	inc    ebx
  404cfa:	add    al,0x90
  404cfc:	cmp    esp,DWORD PTR [eax+0x19]
  404cff:	push   eax
  404d00:	add    BYTE PTR ds:0x676882ce,cl
  404d06:	or     DWORD PTR [eax+0x70],0xb1937751
  404d0d:	dec    ecx
  404d0e:	adc    dl,BYTE PTR [edi+edx*2]
  404d11:	pop    ebx
  404d12:	(bad)  
  404d13:	push   cs
  404d14:	add    ah,BYTE PTR ds:0x1c83d3e9
  404d1a:	clc    
  404d1b:	jnp    0x404d85
  404d1d:	int    0x1f
  404d1f:	pop    esi
  404d20:	push   0xffffffa3
  404d22:	push   0xffffff87
  404d24:	es and eax,0x5e4610cc
  404d2a:	mov    ebp,0x3568155a
  404d2f:	retf   
  404d30:	ret    
  404d31:	push   ss
  404d32:	out    dx,eax
  404d33:	int3   
  404d34:	aam    0x30
  404d36:	jmp    0x404d93
  404d38:	adc    dh,dl
  404d3a:	dec    ebx
  404d3b:	dec    eax
  404d3c:	mov    ebp,0x458ee042
  404d41:	iret   
  404d42:	scas   eax,DWORD PTR es:[edi]
  404d43:	in     al,0xc2
  404d45:	out    0x20,al
  404d47:	push   es
  404d48:	clc    
  404d49:	cmp    DWORD PTR [esi+ecx*2-0x71],0x21
  404d4e:	or     ebp,DWORD PTR [ebx+0x44b7d119]
  404d54:	cli    
  404d55:	xchg   ebx,eax
  404d56:	lea    edx,[edx+0x28e9376]
  404d5c:	or     BYTE PTR [ebx-0x5],0x87
  404d60:	push   esp
  404d61:	pop    edx
  404d62:	jns    0x404cea
  404d64:	sub    dl,BYTE PTR [esi-0x48cbd4f2]
  404d6a:	xor    ebp,0xc69ca809
  404d70:	push   ds
  404d71:	push   ss
  404d72:	inc    ecx
  404d73:	pop    ss
  404d74:	cli    
  404d75:	sub    al,0xc4
  404d77:	rcr    bh,1
  404d79:	mov    dl,0xe7
  404d7b:	repz (bad)
  404d7e:	retf   
  404d7f:	push   ss
  404d80:	mov    BYTE PTR [ebx+0x496893a8],ch
  404d86:	(bad)  
  404d87:	mov    ch,0x1d
  404d89:	mov    dh,0xbc
  404d8b:	(bad)  
  404d8c:	xor    al,0x67
  404d8e:	mov    esi,0x95829ad7
  404d93:	outs   dx,DWORD PTR ds:[esi]
  404d94:	arpl   WORD PTR [esi],dx
  404d96:	or     BYTE PTR [edx-0x67],cl
  404d99:	aam    0xac
  404d9b:	lea    esi,[esi+eiz*8+0x39]
  404d9f:	div    ebp
  404da1:	repz pop eax
  404da3:	cmc    
  404da4:	and    al,0xec
  404da6:	sbb    BYTE PTR [eax],ah
  404da8:	stos   DWORD PTR es:[edi],eax
  404da9:	addr16 or bh,cl
  404dac:	xchg   DWORD PTR [edi+0x7c],ebp
  404daf:	push   edx
  404db0:	mov    ebx,DWORD PTR [ecx-0x59]
  404db3:	in     eax,0x25
  404db5:	outs   dx,DWORD PTR ds:[esi]
  404db6:	retf   
  404db7:	inc    edi
  404db8:	adc    BYTE PTR [ebx-0x34bd74fa],al
  404dbe:	dec    esi
  404dbf:	dec    ecx
  404dc0:	call   0x1c778bd
  404dc5:	repnz shl BYTE PTR [esi-0x330ff33f],0xa1
  404dcd:	rcr    DWORD PTR [ebp-0x55],0xc4
  404dd1:	hlt    
  404dd2:	stos   BYTE PTR es:[edi],al
  404dd3:	push   ecx
  404dd4:	in     eax,0x41
  404dd6:	fs mov bl,0xb9
  404dd9:	scas   al,BYTE PTR es:[edi]
  404dda:	gs jnp 0x404e1d
  404ddd:	xchg   ebx,eax
  404dde:	ins    BYTE PTR es:[edi],dx
  404ddf:	call   0x9ffca016
  404de4:	mov    esi,0xe7399732
  404de9:	pop    es
  404dea:	bnd jno 0x404e6c
  404ded:	jl     0x404e6d
  404def:	(bad)  [ebx-0x6a]
  404df2:	xchg   ebx,eax
  404df3:	mov    ecx,0xa40efd52
  404df8:	dec    edx
  404df9:	ins    DWORD PTR es:[edi],dx
  404dfa:	mov    edx,0x96afaf94
  404dff:	inc    esi
  404e00:	and    ah,BYTE PTR [eax-0x4b]
  404e03:	out    0xb3,eax
  404e05:	xor    al,0xa3
  404e07:	call   0x8b0f:0x9e4d4224
  404e0e:	pop    ebp
  404e0f:	xor    esp,esp
  404e11:	call   0x4bf6:0x5d280bd
  404e18:	adc    bl,BYTE PTR [ebx-0x48]
  404e1b:	stos   BYTE PTR es:[edi],al
  404e1c:	daa    
  404e1d:	pop    edi
  404e1e:	popf   
  404e1f:	jmp    0xb4aa28fc
  404e24:	and    edi,DWORD PTR [esi-0x33ba4cf6]
  404e2a:	rcr    DWORD PTR [esi-0x5d],1
  404e2d:	push   ss
  404e2e:	cmc    
  404e2f:	hlt    
  404e30:	jnp    0x404df1
  404e32:	inc    ecx
  404e33:	std    
  404e34:	add    eax,0xabbafd42
  404e39:	je     0x404df5
  404e3b:	push   ds
  404e3c:	lods   al,BYTE PTR ds:[esi]
  404e3d:	(bad)  
  404e3e:	sub    BYTE PTR [edi-0x63019100],bl
  404e44:	cmc    
  404e45:	popf   
  404e46:	cdq    
  404e47:	pushf  
  404e48:	icebp  
  404e49:	pop    edx
  404e4a:	test   DWORD PTR [edi+0x224024c9],ebx
  404e50:	adc    BYTE PTR [ebx-0x5b],bl
  404e53:	ss mov bh,0xec
  404e56:	adc    eax,0xbd98e620
  404e5b:	mov    ecx,0x2e8f19e2
  404e60:	(bad)  
  404e61:	jmp    0x28d3e09e
  404e66:	stos   BYTE PTR es:[edi],al
  404e67:	in     eax,0x2d
  404e69:	xchg   ecx,eax
  404e6a:	push   esi
  404e6b:	stc    
  404e6c:	ror    BYTE PTR gs:[edx+0x38],1
  404e70:	call   0x9b87e761
  404e75:	mov    edi,0x4e3412a
  404e7a:	xchg   DWORD PTR [edi],eax
  404e7c:	and    eax,eax
  404e7e:	fimul  WORD PTR [esi-0x6f]
  404e81:	std    
  404e82:	sbb    bh,bh
  404e84:	clc    
  404e85:	ins    BYTE PTR es:[edi],dx
  404e86:	push   ebx
  404e87:	test   DWORD PTR ds:0x9c93c9bc,ebx
  404e8d:	sub    ah,BYTE PTR [ebx]
  404e8f:	rcr    BYTE PTR [ebx],1
  404e91:	ds pop edx
  404e93:	cli    
  404e94:	sbb    DWORD PTR [esi-0x2a],ebp
  404e97:	test   BYTE PTR [eax],al
  404e99:	loope  0x404ed8
  404e9b:	dec    esi
  404e9c:	push   ebx
  404e9d:	and    eax,0x92e1da42
  404ea2:	sahf   
  404ea3:	int    0x96
  404ea5:	mov    esp,0x102da3ce
  404eaa:	jmp    0x767320dd
  404eaf:	test   BYTE PTR [edi],cl
  404eb1:	enter  0x797c,0x6b
  404eb5:	push   cs
  404eb6:	push   esi
  404eb7:	sbb    eax,0x3c376797
  404ebc:	xor    eax,0xc75bf778
  404ec1:	jmp    0x404e8d
  404ec3:	dec    edi
  404ec4:	mov    esi,0xcaec06cb
  404ec9:	jbe    0x404e55
  404ecb:	addr16 out 0x51,eax
  404ece:	sbb    esi,ebx
  404ed0:	lods   eax,DWORD PTR ds:[esi]
  404ed1:	pop    ebp
  404ed2:	(bad)  
  404ed3:	out    dx,eax
  404ed4:	add    eax,DWORD PTR [edi-0x6e2cd47d]
  404eda:	jo     0x404efb
  404edc:	pusha  
  404edd:	mov    al,0xe0
  404edf:	pop    edi
  404ee0:	jne    0x404edf
  404ee2:	sub    bl,cl
  404ee4:	xchg   ebp,eax
  404ee5:	push   edi
  404ee6:	pop    edx
  404ee7:	xor    edx,DWORD PTR [ecx-0x8]
  404eea:	xor    DWORD PTR [edi-0x1161bbc9],ecx
  404ef0:	sbb    eax,edi
  404ef2:	sbb    DWORD PTR [edi+0x53],edi
  404ef5:	retf   0xb9e9
  404ef8:	dec    edx
  404ef9:	pop    eax
  404efa:	pop    ds
  404efb:	int3   
  404efc:	jnp    0x404e8c
  404efe:	jmp    0x404f3d
  404f00:	sbb    esp,eax
  404f02:	arpl   sp,ax
  404f04:	jb     0x404f77
  404f06:	mov    al,0x71
  404f08:	jbe    0x404ef3
  404f0a:	pop    ebx
  404f0b:	out    0x49,al
  404f0d:	mov    ebx,edx
  404f0f:	out    dx,eax
  404f10:	ret    
  404f11:	adc    BYTE PTR [esi+0x7c538364],0x86
  404f18:	add    eax,0xfc1edaf9
  404f1d:	clc    
  404f1e:	mov    ah,0x24
  404f20:	and    edi,DWORD PTR [ebp+0x1c]
  404f23:	adc    BYTE PTR [eax+0x5d],bh
  404f26:	clc    
  404f27:	xor    dh,ah
  404f29:	dec    ebx
  404f2a:	jmp    0xb15c9121
  404f2f:	mov    ah,0x31
  404f31:	ins    DWORD PTR es:[edi],dx
  404f32:	rcl    DWORD PTR [ebx+0x687ca45d],1
  404f38:	in     eax,dx
  404f39:	adc    al,0x8c
  404f3b:	mov    ebp,0x801b1d5
  404f40:	(bad)  
  404f41:	je     0x404f26
  404f43:	arpl   WORD PTR [edx+0x18],di
  404f46:	xchg   esp,eax
  404f47:	pushf  
  404f48:	ds int 0x2f
  404f4b:	sub    dh,BYTE PTR [edx+0x6c]
  404f4e:	cmp    DWORD PTR [ebp+0x47a7ffd9],edx
  404f54:	inc    esi
  404f55:	(bad)  
  404f56:	stc    
  404f57:	in     eax,dx
  404f58:	fs inc eax
  404f5a:	shl    DWORD PTR [edx],cl
  404f5c:	jl     0x404f5e
  404f5e:	pop    edi
  404f5f:	dec    edx
  404f60:	cmp    BYTE PTR [ecx],al
  404f62:	jmp    0x7f004f27
  404f67:	outs   dx,BYTE PTR ds:[esi]
  404f68:	dec    ebx
  404f69:	shl    DWORD PTR [esi-0x66],cl
  404f6c:	repz leave 
  404f6e:	adc    dl,BYTE PTR [esi]
  404f70:	cli    
  404f71:	int3   
  404f72:	test   al,0xe6
  404f74:	(bad)  
  404f75:	push   ebp
  404f76:	lock retf 0x3967
  404f7a:	test   BYTE PTR [ecx*1+0x726f1790],0x8
  404f82:	inc    ebx
  404f83:	popf   
  404f84:	fwait
  404f85:	xchg   edi,eax
  404f86:	es mov esi,0x4d4f9045
  404f8c:	jmp    0x404f76
  404f8e:	outs   dx,BYTE PTR ds:[esi]
  404f8f:	pop    ecx
  404f90:	cli    
  404f91:	dec    edi
  404f92:	sub    bl,dl
  404f94:	sub    eax,0xa332b08d
  404f99:	cmp    eax,0x15da9b29
  404f9e:	mov    ebx,0xced3855e
  404fa3:	adc    BYTE PTR [ebx+0x7b69acd3],bh
  404fa9:	jns    0x404f45
  404fab:	stos   BYTE PTR es:[edi],al
  404fac:	nop
  404fad:	jmp    0x405016
  404faf:	aad    0xe0
  404fb1:	fwait
  404fb2:	cmp    esp,DWORD PTR [ebx+edi*1]
  404fb5:	test   al,0x3
  404fb7:	in     eax,dx
  404fb8:	adc    ebp,DWORD PTR [edx-0x3d]
  404fbb:	inc    esp
  404fbc:	mov    bl,0xc5
  404fbe:	sbb    DWORD PTR [ecx+0x3b594d18],eax
  404fc4:	mov    ebx,0x167e71d1
  404fc9:	jg     0x404f51
  404fcb:	xor    al,0x27
  404fcd:	call   0xf7545f6d
  404fd2:	(bad)
  404fd5:	mov    esp,0x30543943
  404fda:	xor    ebp,DWORD PTR [esp+ebp*2+0x25e72a7f]
  404fe1:	inc    ecx
  404fe2:	(bad)  
  404fe4:	or     al,0x9e
  404fe6:	cmp    BYTE PTR cs:[ebx-0xe],bh
  404fea:	mov    DWORD PTR [esi+0x44],ebp
  404fed:	cmp    DWORD PTR [esp+eiz*8],eax
  404ff0:	sar    DWORD PTR [edi+0x27],0x25
  404ff4:	sahf   
  404ff5:	adc    BYTE PTR [eax],cl
  404ff7:	mov    al,0x9
  404ff9:	inc    edx
  404ffa:	dec    edx
  404ffb:	add    esp,DWORD PTR [esi-0x4a]
  404ffe:	lods   eax,DWORD PTR ds:[esi]
  404fff:	xor    eax,0xa0bbd219
  405004:	lods   al,BYTE PTR ds:[esi]
  405005:	cld    
  405006:	and    esp,ebp
  405008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405009:	ins    BYTE PTR es:[edi],dx
  40500a:	mov    esi,0xd05d52e0
  40500f:	mov    ecx,0xfda41100
  405015:	cmp    BYTE PTR [ebx+0x4e],al
  405018:	cmp    BYTE PTR [ebx+0x5b03926c],bh
  40501e:	xchg   ebp,eax
  40501f:	fmul   st,st(4)
  405021:	fs int3 
  405023:	leave  
  405024:	dec    esi
  405025:	js     0x40503b
  405027:	shl    esp,0x10
  40502a:	dec    ecx
  40502b:	nop
  40502c:	pop    esi
  40502d:	sub    cl,dl
  40502f:	cmc    
  405030:	mov    ch,0x76
  405032:	ins    BYTE PTR es:[edi],dx
  405033:	and    BYTE PTR [ebx],dh
  405035:	rol    BYTE PTR [ecx+0x42c0140d],0x0
  40503c:	add    al,0xa0
  40503e:	inc    edx
  40503f:	add    BYTE PTR [ebx],dh
  405041:	retf   0xd81
  405044:	adc    al,dl
  405046:	inc    edx
  405047:	add    BYTE PTR [ebp+0x300000d],ch
  40504d:	into   
  40504e:	add    edi,0xfabdbee9
  405054:	mov    DWORD PTR ds:0x42a014,0x6728
  40505e:	adc    eax,0xffffffff
  405061:	and    DWORD PTR ds:0x429014,0x42a000
  40506b:	xor    eax,0x0
  40506e:	mov    DWORD PTR [ebp-0xc],eax
  405071:	push   ebx
  405072:	add    DWORD PTR ds:0x42a000,ebx
  405078:	xor    ebx,ebx
  40507a:	xor    edi,0x8a29a12b
  405080:	sbb    eax,0xb3d
  405085:	mov    eax,ecx
  405087:	add    eax,0xfabdbee9
  40508c:	mov    DWORD PTR ds:0x42d000,0x688f
  405096:	adc    ebx,0xffffffff
  405099:	xor    eax,0x8a29a12b
  40509e:	or     DWORD PTR ds:0x42a010,0x42900c
  4050a8:	xor    ebx,0x0
  4050ab:	mov    DWORD PTR ds:0x429024,0x3d4a
  4050b5:	cmp    eax,edi
  4050b7:	jne    0x4050d6
  4050bd:	cmp    ebx,DWORD PTR [ebp-0xc]
  4050c0:	je     0x40513e
  4050c6:	jmp    0x4050d6
  4050cb:	or     esi,DWORD PTR ds:0x42b01c
  4050d1:	mov    esi,0x3272e0
  4050d6:	mov    eax,DWORD PTR [ebp-0x4]
  4050d9:	mov    edi,DWORD PTR [ebp-0x8]
  4050dc:	xor    edi,edx
  4050de:	add    edi,esi
  4050e0:	mov    esi,DWORD PTR [ebp+0x8]
  4050e3:	imul   edi,ecx
  4050e6:	mov    ebx,DWORD PTR [ebp+0xc]
  4050e9:	xor    eax,edx
  4050eb:	add    eax,ecx
  4050ed:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  4050f4:	mov    BYTE PTR [edi+esi*1],al
  4050f7:	mov    eax,DWORD PTR [ebp-0x8]
  4050fa:	mov    esi,DWORD PTR [ebp+0x10]
  4050fd:	xor    eax,edx
  4050ff:	xor    ebx,ebx
  405101:	add    esi,0xfabdbee9
  405107:	adc    ebx,0xffffffff
  40510a:	lea    ecx,[ecx+eax*1+0x3272e0]
  405111:	xor    edi,edi
  405113:	xor    esi,0x8a29a12b
  405119:	xor    ebx,0x0
  40511c:	mov    eax,ecx
  40511e:	add    eax,0xfabdbee9
  405123:	adc    edi,0xffffffff
  405126:	xor    eax,0x8a29a12b
  40512b:	xor    edi,0x0
  40512e:	cmp    eax,esi
  405130:	jne    0x4050cb
  405136:	cmp    edi,ebx
  405138:	jne    0x4050cb
  40513e:	mov    eax,0xf89c85b8
  405143:	pop    ebx
  405144:	pop    edi
  405145:	pop    esi
  405146:	leave  
  405147:	ret    0xc
  40514a:	push   ebp
  40514b:	mov    ebp,esp
  40514d:	push   ecx
  40514e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  405155:	sub    ecx,0x3f14
  40515b:	mov    eax,DWORD PTR [ebp+0x8]
  40515e:	and    DWORD PTR ds:0x42b008,0x0
  405168:	xor    edx,edx
  40516a:	add    edx,DWORD PTR ds:0x42b008
  405170:	inc    edx
  405171:	mov    DWORD PTR ds:0x42b008,edx
  405177:	cmp    DWORD PTR ds:0x42b008,0xc
  40517e:	jne    0x4051a5
  405184:	push   DWORD PTR [ebp-0x10]
  405187:	push   DWORD PTR [ebp-0xc]
  40518a:	push   0x429000
  40518f:	push   0x12c2
  405194:	push   0x648f
  405199:	push   DWORD PTR [ebp-0x14]
  40519c:	push   DWORD PTR [ebp-0x20]
  40519f:	call   DWORD PTR ds:0x42ec7f
  4051a5:	cmp    DWORD PTR ds:0x42b008,0xb
  4051ac:	jne    0x4051bf
  4051b2:	mov    edx,DWORD PTR ds:0x42b008
  4051b8:	inc    edx
  4051b9:	mov    DWORD PTR ds:0x42b008,edx
  4051bf:	cmp    DWORD PTR ds:0x42b008,0x15
  4051c6:	jb     0x405168
  4051cc:	and    DWORD PTR ds:0x42900c,0x0
  4051d6:	mov    edx,DWORD PTR ds:0x42900c
  4051dc:	inc    edx
  4051dd:	mov    DWORD PTR ds:0x42900c,edx
  4051e3:	cmp    DWORD PTR ds:0x42900c,0xd
  4051ea:	jne    0x40520d
  4051f0:	push   0x42b018
  4051f5:	push   0x46e1
  4051fa:	push   0x42e0d9
  4051ff:	push   DWORD PTR [ebp-0x1c]
  405202:	push   0x1518
  405207:	call   DWORD PTR ds:0x42ec83
  40520d:	cmp    DWORD PTR ds:0x42900c,0xc
  405214:	jne    0x405229
  40521a:	xor    edx,edx
  40521c:	add    edx,DWORD PTR ds:0x42900c
  405222:	inc    edx
  405223:	mov    DWORD PTR ds:0x42900c,edx
  405229:	cmp    DWORD PTR ds:0x42900c,0x14
  405230:	jb     0x4051d6
  405236:	movsx  eax,BYTE PTR [eax]
  405239:	mov    edx,0x3272e0
  40523e:	sub    eax,edx
  405240:	mov    ecx,0x7510899
  405245:	xor    eax,ecx
  405247:	cmp    eax,0xf89c85f4
  40524c:	jne    0x40527b
  405252:	mov    eax,DWORD PTR [ebp+0x8]
  405255:	push   esi
  405256:	mov    esi,DWORD PTR [ebp+0x8]
  405259:	add    esi,DWORD PTR [eax+0x3c]
  40525c:	mov    DWORD PTR [ebp+0x8],esi
  40525f:	mov    eax,DWORD PTR [ebp-0x4]
  405262:	mov    esi,DWORD PTR [ebp+0x8]
  405265:	xor    eax,ecx
  405267:	add    eax,edx
  405269:	cmp    DWORD PTR [esi+0x54],eax
  40526c:	pop    esi
  40526d:	je     0x40527b
  405273:	mov    eax,DWORD PTR [ebp+0x8]
  405276:	jmp    0x405282
  40527b:	mov    eax,DWORD PTR [ebp-0x4]
  40527e:	xor    eax,ecx
  405280:	add    eax,edx
  405282:	leave  
  405283:	ret    0x4
  405286:	push   ebp
  405287:	mov    ebp,esp
  405289:	sub    esp,0x40
  40528c:	push   ebx
  40528d:	sub    DWORD PTR ds:0x42b010,0x42c014
  405297:	push   esi
  405298:	mov    DWORD PTR ds:0x42d018,0x7544
  4052a2:	push   edi
  4052a3:	add    DWORD PTR ds:0x42a004,0x429008
  4052ad:	lea    eax,[ebp-0x24]
  4052b0:	push   eax
  4052b1:	sub    DWORD PTR ds:0x42c014,0x154
  4052bb:	lea    eax,[ebp-0x20]
  4052be:	add    DWORD PTR ds:0x42a01c,0x42a000
  4052c8:	push   eax
  4052c9:	call   DWORD PTR ds:0x42ec87
  4052cf:	xor    DWORD PTR ds:0x429008,0x42d01c
  4052d9:	push   0x21
  4052db:	sbb    DWORD PTR ds:0x42d01c,0x42b014
  4052e5:	jmp    0x40766a
  4052ea:	push   ss
  4052eb:	xor    BYTE PTR [ecx-0xb6c4a5d],0x77
  4052f2:	es loop 0x4052d5
  4052f5:	and    DWORD PTR [esp+edx*4+0x5f0286d2],ecx
  4052fc:	jp     0x405378
  4052fe:	add    bl,BYTE PTR [edi+0x7a]
  405301:	jp     0x405302
  405303:	cmp    dl,BYTE PTR [edi]
  405305:	pop    esp
  405306:	call   0x16e7:0xe80ae405
  40530d:	in     eax,dx
  40530e:	mov    ds:0x7769306a,al
  405313:	neg    DWORD PTR [ebx-0x4ff4045e]
  405319:	sub    eax,DWORD PTR [ebx-0x4fe9f3a1]
  40531f:	lahf   
  405320:	cli    
  405321:	(bad)  
  405323:	sub    BYTE PTR [ebx+0x44],dh
  405326:	push   ss
  405327:	dec    esp
  405328:	rcl    DWORD PTR [edi+0x70],1
  40532b:	lods   eax,DWORD PTR ds:[esi]
  40532c:	(bad)  
  40532d:	adc    DWORD PTR [esi+ecx*4+0x7],ebx
  405331:	jb     0x4052d2
  405333:	jns    0x405385
  405335:	inc    edi
  405336:	ins    DWORD PTR es:[edi],dx
  405337:	ret    
  405338:	jge    0x4053ac
  40533a:	mov    esp,0x6e505bc7
  40533f:	scas   eax,DWORD PTR es:[edi]
  405340:	div    BYTE PTR [edx-0x5f]
  405343:	int    0x36
  405345:	hlt    
  405346:	shl    DWORD PTR [ebx-0x26f97164],cl
  40534c:	(bad)  
  40534d:	mov    esi,0x8c0da662
  405352:	stos   DWORD PTR es:[edi],eax
  405353:	outs   dx,BYTE PTR ds:[esi]
  405354:	add    esi,DWORD PTR [edx+0x59]
  405357:	lods   al,BYTE PTR ds:[esi]
  405358:	or     ebp,edi
  40535a:	pop    eax
  40535b:	or     al,0x6c
  40535d:	dec    edi
  40535e:	loop   0x405342
  405360:	jmp    0x40534a
  405362:	aas    
  405363:	add    BYTE PTR [ebx-0x6c],dh
  405366:	xchg   ebp,eax
  405367:	jns    0x405375
  405369:	lea    ebp,[edx]
  40536b:	mov    cl,0xdd
  40536d:	and    esi,DWORD PTR [edx-0x75]
  405370:	bndldx (bad),[eax-0x29]
  405374:	inc    ebp
  405375:	inc    ebx
  405376:	sahf   
  405377:	dec    esp
  405378:	inc    edi
  405379:	call   0x90883636
  40537e:	repnz cmc 
  405380:	stos   DWORD PTR es:[edi],eax
  405381:	mov    edi,0xbee0cece
  405386:	add    al,0x1b
  405388:	xor    bh,BYTE PTR ds:0x82a5204f
  40538e:	xchg   ecx,eax
  40538f:	pushf  
  405390:	sub    esp,DWORD PTR [edi-0x46eb5309]
  405396:	dec    esp
  405397:	lods   al,BYTE PTR ds:[esi]
  405398:	jecxz  0x4053e0
  40539a:	xor    BYTE PTR [eax-0x7d6d3a7f],bl
  4053a0:	scas   al,BYTE PTR es:[edi]
  4053a1:	dec    eax
  4053a2:	and    esi,DWORD PTR [esi]
  4053a4:	mov    ebp,0x8c2ba227
  4053a9:	jbe    0x4053ef
  4053ab:	mul    DWORD PTR [ebx+ecx*1]
  4053ae:	test   al,0x33
  4053b0:	in     al,0x5c
  4053b2:	inc    edx
  4053b3:	cmp    al,0x5b
  4053b5:	xchg   ebp,eax
  4053b6:	adc    eax,0x22efa71d
  4053bb:	(bad)  [eax]
  4053bd:	push   ds
  4053be:	pop    edi
  4053bf:	pop    ss
  4053c0:	push   esi
  4053c1:	int3   
  4053c2:	adc    BYTE PTR [ebp+0x6ea90a89],0x80
  4053c9:	fcomp  QWORD PTR [ebx-0x2f0eaf8d]
  4053cf:	pop    ebp
  4053d0:	aaa    
  4053d1:	loopne 0x405430
  4053d3:	push   ds
  4053d4:	cmp    eax,DWORD PTR [eax]
  4053d6:	cmp    DWORD PTR [esp+esi*1+0x3cfac682],eax
  4053dd:	icebp  
  4053de:	rcl    BYTE PTR [ecx-0x16],cl
  4053e1:	sbb    DWORD PTR [ebp+0x43],edx
  4053e4:	aam    0x54
  4053e6:	or     al,0xc3
  4053e8:	pop    esp
  4053e9:	sbb    BYTE PTR [ecx+0xf],0x38
  4053ed:	inc    edx
  4053ee:	add    esp,edx
  4053f0:	sar    DWORD PTR [ecx-0xd0f9563],cl
  4053f6:	(bad)  
  4053f7:	fbld   TBYTE PTR [edx+ebx*1]
  4053fa:	(bad)  
  4053fb:	or     BYTE PTR [edx+0x5282f7f9],cl
  405401:	addr16 mov esp,0x10b8184f
  405407:	out    0x8d,eax
  405409:	push   es
  40540a:	sar    DWORD PTR [ecx-0x2b],1
  40540d:	push   0x71
  40540f:	cmc    
  405410:	lds    edx,FWORD PTR [edi+0x68067b58]
  405416:	xor    DWORD PTR [edx-0x64],edx
  405419:	pop    edx
  40541a:	mov    dh,dl
  40541c:	test   ebp,0x12e2845
  405422:	dec    edi
  405423:	push   ss
  405424:	pop    edx
  405425:	out    0xb3,eax
  405427:	and    al,0x8
  405429:	jno    0x405450
  40542b:	adc    eax,0x8145976b
  405430:	push   ds
  405431:	scas   al,BYTE PTR es:[edi]
  405432:	add    BYTE PTR [esp+ebx*8+0x6af2a45d],dl
  405439:	cmp    al,0x75
  40543b:	sbb    eax,0x5699aa72
  405440:	mov    ebp,0xd538f03f
  405445:	sub    al,0xb0
  405447:	ss jmp 0x405438
  40544a:	and    al,al
  40544c:	popa   
  40544d:	jbe    0x4054aa
  40544f:	dec    ebx
  405450:	lea    esi,[ebp+0x35f71c9b]
  405456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405457:	popf   
  405458:	add    eax,0x4aee3085
  40545d:	pop    esp
  40545e:	adc    al,0x6b
  405460:	mov    WORD PTR [esi-0x47],ss
  405463:	out    dx,al
  405464:	int    0xb8
  405466:	mov    ecx,0x381bbbd6
  40546b:	rcl    BYTE PTR [edi-0x78],1
  40546e:	(bad)  
  40546f:	hlt    
  405470:	(bad)  
  405471:	jmp    0x3dda8353
  405476:	xlat   BYTE PTR ds:[ebx]
  405477:	pop    es
  405478:	jge    0x405420
  40547a:	jg     0x4054f8
  40547c:	push   esi
  40547d:	icebp  
  40547e:	push   ebx
  40547f:	push   ecx
  405480:	jno    0x4054d7
  405482:	add    ah,BYTE PTR [eax]
  405484:	repz in al,0x9e
  405487:	test   BYTE PTR [ebp+0x54],0x84
  40548b:	aad    0x56
  40548d:	mov    ds:0x86e2b688,al
  405492:	ret    0x2449
  405495:	adc    BYTE PTR [ebx],al
  405497:	mov    ecx,0xdc72efa3
  40549c:	push   ebp
  40549d:	hlt    
  40549e:	mov    al,ds:0x74453507
  4054a3:	xor    esp,DWORD PTR [edx+0x42]
  4054a6:	dec    ebx
  4054a7:	mov    eax,0x7db06bde
  4054ac:	xchg   esi,eax
  4054ad:	std    
  4054ae:	ins    DWORD PTR es:[edi],dx
  4054af:	addr16 mov eax,0x1310b749
  4054b5:	mov    ebp,0x3e228632
  4054ba:	lock je 0x40549c
  4054bd:	xor    al,0xee
  4054bf:	outs   dx,BYTE PTR ds:[esi]
  4054c0:	xchg   edi,eax
  4054c1:	test   BYTE PTR [edi],bl
  4054c3:	or     bl,BYTE PTR [ebx-0x56fc54c3]
  4054c9:	jae    0x405453
  4054cb:	sub    edx,eax
  4054cd:	pop    ss
  4054ce:	pushf  
  4054cf:	aam    0x81
  4054d1:	cmp    edx,DWORD PTR [ecx-0x4a056a7]
  4054d7:	aad    0xd3
  4054d9:	frstor [esi-0x421f398]
  4054df:	pop    ebp
  4054e0:	sub    BYTE PTR [edx],0x1e
  4054e3:	mov    bl,0x30
  4054e5:	rcr    BYTE PTR [esi+0x73],cl
  4054e8:	ja     0x4054ef
  4054ea:	inc    BYTE PTR [edi]
  4054ec:	(bad)  
  4054ed:	stc    
  4054ee:	pop    esp
  4054ef:	mov    cl,0xa2
  4054f1:	test   DWORD PTR [ebp-0x2217d33e],0xe3b47e2a
  4054fb:	int    0xe8
  4054fd:	dec    ebx
  4054fe:	outs   dx,BYTE PTR ds:[esi]
  4054ff:	sub    ecx,DWORD PTR [ecx+0x6e90f853]
  405505:	inc    esp
  405506:	cmp    ah,BYTE PTR [edx+ebx*1+0x298c6333]
  40550d:	or     dh,al
  40550f:	inc    eax
  405510:	push   eax
  405511:	(bad)  
  405512:	in     eax,0x77
  405514:	jb     0x405546
  405516:	pop    ss
  405517:	loope  0x40551a
  405519:	push   ecx
  40551a:	jge    0x405527
  40551c:	adc    BYTE PTR [esp],dh
  40551f:	aaa    
  405520:	adc    ebp,ebp
  405522:	into   
  405523:	xchg   BYTE PTR [ecx+0x2ddc2f5c],dl
  405529:	pop    es
  40552a:	or     edx,DWORD PTR [edx+edx*8-0x46]
  40552e:	pop    edx
  40552f:	jle    0x405599
  405531:	gs addr16 inc esp
  405534:	inc    ebx
  405535:	rcl    BYTE PTR [edx+0x37],1
  405538:	out    dx,al
  405539:	pop    ecx
  40553a:	ret    
  40553b:	out    dx,eax
  40553c:	in     al,0xaa
  40553e:	sub    al,0xc1
  405540:	lock lahf 
  405542:	into   
  405543:	jno    0x405566
  405545:	(bad)  
  405546:	aas    
  405547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405548:	loopne 0x4054ee
  40554a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40554b:	ror    BYTE PTR [eax+0x761b139f],cl
  405551:	mov    ebx,0x9a42c947
  405556:	push   edi
  405557:	mov    dl,0xd1
  405559:	sti    
  40555a:	mov    WORD PTR [ebx-0x2a41a03e],fs
  405560:	inc    esp
  405561:	inc    esi
  405562:	aaa    
  405563:	fdiv   DWORD PTR [ebx-0x2a3a4b82]
  405569:	js     0x405552
  40556b:	add    DWORD PTR [edx-0x6e24ee2e],esp
  405571:	inc    esp
  405572:	sbb    ebp,DWORD PTR cs:[esi+edx*1-0x35]
  405577:	cs and al,0xa4
  40557a:	bnd jns 0x405513
  40557d:	aaa    
  40557e:	xchg   esp,eax
  40557f:	sbb    eax,0xdc0c51a7
  405584:	inc    edi
  405585:	adc    eax,0x300da4f3
  40558a:	cmp    dh,BYTE PTR [esi+0x4c7de83a]
  405590:	sar    BYTE PTR [esi-0x1],cl
  405593:	push   ebp
  405594:	fbstp  TBYTE PTR [ebp-0x77]
  405597:	dec    edx
  405598:	adc    al,0x5f
  40559a:	sbb    DWORD PTR [esi+eiz*4+0x7b389b93],esp
  4055a1:	xchg   edx,eax
  4055a2:	std    
  4055a3:	(bad)  
  4055a4:	push   edi
  4055a5:	jl     0x4055b9
  4055a7:	mov    ch,dl
  4055a9:	and    eax,0x5c83b2f3
  4055af:	pop    ebx
  4055b0:	stc    
  4055b1:	adc    ch,BYTE PTR [eax]
  4055b3:	mov    ebp,0xc252e359
  4055b8:	mov    esi,0x40299e96
  4055bd:	lds    esi,FWORD PTR [esi]
  4055bf:	retf   0x961a
  4055c2:	shr    BYTE PTR [ebx],cl
  4055c4:	or     BYTE PTR [ecx+0x350a6d8d],dl
  4055ca:	jg     0x4055e4
  4055cc:	jle    0x405600
  4055ce:	pop    ebp
  4055cf:	adc    BYTE PTR [esi-0x50],0x0
  4055d3:	push   ebp
  4055d4:	or     BYTE PTR [ecx+0x2c],bl
  4055d7:	add    bh,bh
  4055d9:	loop   0x4055c2
  4055db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dc:	xlat   BYTE PTR ds:[ebx]
  4055dd:	stos   BYTE PTR es:[edi],al
  4055de:	jecxz  0x40564e
  4055e0:	add    al,0x8f
  4055e2:	stos   BYTE PTR es:[edi],al
  4055e3:	rcl    esi,1
  4055e5:	ret    0xb789
  4055e8:	or     BYTE PTR [edi+0x2a5d62c4],bh
  4055ee:	jnp    0x4055fd
  4055f0:	jae    0x405577
  4055f2:	cmp    DWORD PTR [ecx],ebp
  4055f4:	pop    edi
  4055f5:	jg     0x405597
  4055f7:	mov    eax,0x4a846185
  4055fc:	sub    al,0x7e
  4055fe:	jmp    0xfcdd:0xd42d75b0
  405605:	push   ss
  405606:	jnp    0x40563e
  405608:	mov    ds:0x8942b436,al
  40560d:	dec    edi
  40560e:	mov    esp,0x97d9ce67
  405613:	gs test eax,0xa4c1b899
  405619:	out    dx,eax
  40561a:	bound  eax,QWORD PTR [edi-0x1559f3f9]
  405620:	(bad)  
  405622:	pop    edi
  405623:	inc    esp
  405624:	in     al,0x59
  405626:	ja     0x4056a3
  405628:	call   0x28ec86f9
  40562d:	inc    esi
  40562e:	jg     0x405651
  405630:	jle    0x4055bf
  405632:	retf   
  405633:	or     edx,DWORD PTR [ebx+0x78]
  405636:	sbb    dh,0x3a
  405639:	xchg   ecx,eax
  40563a:	out    dx,eax
  40563b:	xchg   edi,eax
  40563c:	add    esi,DWORD PTR [eax]
  40563e:	fcmove st,st(4)
  405640:	cmp    eax,0x9ba7025a
  405645:	test   DWORD PTR [ecx+0x3b],0xb4488073
  40564c:	inc    esp
  40564d:	sbb    eax,0x998c329f
  405652:	pop    edi
  405653:	xor    al,0xfa
  405655:	inc    esp
  405656:	cmp    esp,DWORD PTR [edx+0x17b4ea46]
  40565c:	or     esp,DWORD PTR [edi+0x49]
  40565f:	adc    ecx,ebx
  405661:	mov    ah,0xaf
  405663:	sbb    dl,0x34
  405666:	xchg   esi,eax
  405667:	pop    ebp
  405668:	call   0x2ee35314
  40566d:	loope  0x4055fb
  40566f:	mov    edi,0x673dc5f6
  405674:	jbe    0x405660
  405676:	in     eax,dx
  405677:	and    eax,0xee1cf146
  40567c:	rcl    DWORD PTR [eax],0xb6
  40567f:	lods   eax,DWORD PTR ds:[esi]
  405680:	pop    edx
  405681:	push   edx
  405682:	(bad)  
  405683:	sbb    DWORD PTR [ebp+edi*1-0x57],eax
  405687:	mov    edi,0x8db13231
  40568c:	inc    ecx
  40568d:	mov    eax,0xe11a8ad9
  405692:	xor    al,0x3a
  405694:	repnz adc eax,0x33c69dd8
  40569a:	ins    BYTE PTR es:[edi],dx
  40569b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40569c:	adc    DWORD PTR [esi],ebp
  40569e:	adc    BYTE PTR [ebx-0x7d642d61],0x6c
  4056a5:	mov    eax,ds:0x1249618
  4056aa:	or     cl,BYTE PTR [edx+0x5be681c6]
  4056b0:	cmc    
  4056b1:	pop    edx
  4056b2:	fsub   QWORD PTR ds:[edi+esi*8+0x45]
  4056b7:	icebp  
  4056b8:	xchg   ecx,eax
  4056b9:	ror    DWORD PTR [ebx],0x2a
  4056bc:	int    0x32
  4056be:	push   ebx
  4056bf:	adc    dl,BYTE PTR [esp+eiz*4-0x3661f54e]
  4056c6:	je     0x405653
  4056c8:	out    0xf1,eax
  4056ca:	dec    esp
  4056cb:	call   0xb8bd:0xcf751991
  4056d2:	enter  0x320d,0xbe
  4056d6:	xchg   ebx,eax
  4056d7:	mov    bl,BYTE PTR [edi+0x3e]
  4056da:	jmp    0x93c3:0xfff2cde0
  4056e1:	(bad)  
  4056e2:	xor    eax,0xbe668cb4
  4056e7:	ror    ebp,1
  4056e9:	fldenv [ebx-0x2a2f4171]
  4056ef:	mov    ds:0xfd21f1f3,eax
  4056f4:	inc    esp
  4056f5:	xchg   ecx,eax
  4056f6:	jo     0x4056ed
  4056f8:	outs   dx,DWORD PTR ds:[esi]
  4056f9:	in     eax,0xa
  4056fb:	lock lahf 
  4056fd:	in     al,0xea
  4056ff:	add    cl,BYTE PTR [ecx+eiz*8+0x798715cc]
  405706:	loopne 0x4056e7
  405708:	mov    ebx,0xa691e603
  40570d:	in     al,0x97
  40570f:	lahf   
  405710:	dec    esi
  405711:	(bad)
  405714:	(bad)  
  405715:	ins    BYTE PTR es:[edi],dx
  405716:	call   0xe7ce:0xaf802781
  40571d:	sub    al,0xa5
  40571f:	jno    0x4056d8
  405721:	sbb    ah,BYTE PTR [edi+ecx*2+0x3c67345e]
  405728:	mov    BYTE PTR [ecx-0x51],0x4a
  40572c:	inc    eax
  40572d:	jb     0x4056d3
  40572f:	fsubr  DWORD PTR [ebp-0x645feadf]
  405735:	aam    0xef
  405737:	dec    esp
  405738:	scas   eax,DWORD PTR es:[edi]
  405739:	push   ebx
  40573a:	popf   
  40573b:	xor    DWORD PTR [esi-0x6a450206],ebp
  405741:	push   es
  405742:	adc    ecx,ebx
  405744:	out    dx,eax
  405745:	sti    
  405746:	jae    0x405726
  405748:	pop    eax
  405749:	fist   DWORD PTR [ebp+0x44]
  40574c:	pop    esi
  40574d:	retf   
  40574e:	in     eax,dx
  40574f:	sbb    ecx,DWORD PTR [eax+0x7bd57705]
  405755:	sti    
  405756:	aaa    
  405757:	repnz push 0xfffffff8
  40575a:	(bad)  
  40575c:	les    edx,FWORD PTR [ecx-0x1cd44a8]
  405762:	rcr    DWORD PTR [ecx+edx*4+0x74f4ab02],cl
  405769:	mov    eax,0xdff4482c
  40576e:	inc    esi
  40576f:	sub    ebp,DWORD PTR [eax+0x490d1650]
  405775:	push   ds
  405776:	mov    ecx,0x8965e0a8
  40577b:	cmp    eax,0x7eaa6d81
  405780:	sti    
  405781:	or     bl,0x7d
  405784:	xchg   esp,eax
  405785:	pop    esi
  405786:	daa    
  405787:	pop    ss
  405788:	push   ecx
  405789:	jne    0x40575b
  40578b:	sub    ah,bl
  40578d:	jmp    0x405799
  40578f:	ins    BYTE PTR es:[edi],dx
  405790:	inc    DWORD PTR [edi+0x69]
  405793:	xor    DWORD PTR [ecx+ebx*4],0xffffffbd
  405797:	out    0x5a,al
  405799:	inc    ecx
  40579a:	call   0x938d2477
  40579f:	or     BYTE PTR [ecx+0x51ec273a],cl
  4057a5:	sbb    al,0x2b
  4057a7:	popa   
  4057a8:	mov    ds:0xafa4c423,eax
  4057ad:	inc    esi
  4057ae:	repz imul esp,DWORD PTR [eax+0xa],0xcfc6e9f
  4057b6:	ins    BYTE PTR es:[edi],dx
  4057b7:	xchg   BYTE PTR [ebp+eax*4-0x2ceb5989],bh
  4057be:	jmp    0x4057d8
  4057c0:	xchg   ebp,eax
  4057c1:	fst    DWORD PTR [ebx-0x118c8700]
  4057c7:	inc    edi
  4057c8:	jo     0x405802
  4057ca:	lock ins DWORD PTR es:[edi],dx
  4057cc:	call   0x8f7d:0x52f969c5
  4057d3:	adc    BYTE PTR [edx+0x7d],dl
  4057d6:	add    al,0x11
  4057d8:	adc    ebx,DWORD PTR [edx]
  4057da:	xor    dh,BYTE PTR [eax-0x16]
  4057dd:	pop    eax
  4057de:	popf   
  4057df:	push   eax
  4057e0:	shr    BYTE PTR [ebx],0xea
  4057e3:	add    al,BYTE PTR [edi]
  4057e5:	xor    eax,0x9ec6fb81
  4057ea:	sbb    DWORD PTR [ebx],ecx
  4057ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ed:	pop    es
  4057ee:	ror    BYTE PTR [ebp+0x1e],cl
  4057f1:	lds    edi,FWORD PTR [ebp+0x4d94fea5]
  4057f7:	js     0x4057f2
  4057f9:	inc    eax
  4057fa:	push   ebp
  4057fb:	fbstp  TBYTE PTR [ebx]
  4057fd:	arpl   cx,bp
  4057ff:	stc    
  405800:	pop    edx
  405801:	adc    ebp,DWORD PTR [eax]
  405803:	xchg   ecx,eax
  405804:	xchg   DWORD PTR [edx],edx
  405806:	dec    ebx
  405807:	das    
  405808:	mov    eax,0x1dd38651
  40580d:	jg     0x405854
  40580f:	push   ss
  405810:	mov    dl,0x7d
  405812:	(bad)  
  405813:	mov    ch,0xd2
  405815:	jnp    0x4057a8
  405817:	mov    eax,ds:0x8e2ccca4
  40581c:	pop    edx
  40581d:	into   
  40581e:	fld    DWORD PTR [ecx-0x61]
  405821:	pop    ds
  405822:	pushf  
  405823:	psubusb mm2,mm3
  405826:	mov    bl,0xa0
  405828:	cmp    BYTE PTR [edx-0x6d],0xad
  40582c:	sbb    BYTE PTR cs:[edx-0x4f],0x76
  405831:	pop    edx
  405832:	in     al,0xf3
  405834:	sbb    ebp,DWORD PTR [edx+0x3c51fe10]
  40583a:	push   0x4c
  40583c:	jae    0x4058ab
  40583e:	rcl    BYTE PTR [ecx-0x4699d19a],0xc
  405845:	bound  eax,QWORD PTR [edx+0x4c81c0da]
  40584b:	dec    eax
  40584c:	xchg   BYTE PTR [ecx],bl
  40584e:	aad    0xc4
  405850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405851:	ud2    
  405853:	xchg   edx,eax
  405854:	inc    esi
  405855:	cwde   
  405856:	rcr    esp,cl
  405858:	int    0x5
  40585a:	leave  
  40585b:	test   edx,0xd610895c
  405861:	fsubr  st(3),st
  405863:	repnz dec esi
  405865:	adc    eax,0x9da4a424
  40586a:	mov    ch,0x4a
  40586c:	loopne 0x4058e3
  40586e:	inc    esp
  40586f:	xchg   DWORD PTR [eax],ebp
  405871:	icebp  
  405872:	repnz fisub DWORD PTR [eax+0x9]
  405876:	xchg   ebx,eax
  405877:	push   esp
  405878:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40587a:	(bad)  
  40587b:	pusha  
  40587c:	rcl    BYTE PTR [ebx+edi*1+0x62],cl
  405880:	and    DWORD PTR [esi+0x36],0x369e2a94
  405887:	int    0xad
  405889:	rcl    DWORD PTR [edi],1
  40588b:	popa   
  40588c:	(bad)  
  40588d:	cmp    DWORD PTR [ecx],0x474d76f7
  405893:	sbb    eax,0x62b0ebf8
  405898:	and    ecx,ebx
  40589a:	or     ebp,ebx
  40589c:	mov    ecx,0x340fcfbd
  4058a1:	xchg   edx,eax
  4058a2:	aaa    
  4058a3:	and    ebp,DWORD PTR [eax+0x8]
  4058a6:	jno    0x40590a
  4058a8:	add    BYTE PTR [edx-0x1c],bl
  4058ab:	retf   0x8f9c
  4058ae:	jmp    0xc03d:0xe47c9de1
  4058b5:	stos   DWORD PTR es:[edi],eax
  4058b6:	aaa    
  4058b7:	sti    
  4058b8:	inc    edi
  4058b9:	jl     0x4058b5
  4058bb:	and    esp,edx
  4058bd:	aad    0xd
  4058bf:	aaa    
  4058c0:	mov    bh,cl
  4058c2:	push   es
  4058c3:	popf   
  4058c4:	fistp  DWORD PTR [edi+0x3659aee2]
  4058ca:	cmp    esi,DWORD PTR [eax+0x16]
  4058cd:	adc    bh,bh
  4058cf:	imul   ecx,DWORD PTR ds:0xe6196c7c,0x57
  4058d6:	xchg   ebx,eax
  4058d7:	mov    al,0xcf
  4058d9:	xor    DWORD PTR ds:0x816b4b55,0xffffffc3
  4058e0:	shl    al,1
  4058e2:	enter  0x18f5,0x70
  4058e6:	jecxz  0x405894
  4058e8:	jo     0x40589f
  4058ea:	xor    al,0xbe
  4058ec:	enter  0x1fe1,0x98
  4058f0:	dec    ebp
  4058f1:	es xchg ecx,eax
  4058f3:	cli    
  4058f4:	sbb    DWORD PTR [eax+ebx*4],esi
  4058f7:	aas    
  4058f8:	and    dh,ch
  4058fa:	ins    DWORD PTR es:[edi],dx
  4058fb:	retf   0x60dd
  4058fe:	js     0x4058fc
  405900:	or     DWORD PTR [ecx+0x25],ecx
  405903:	iret   
  405904:	sbb    eax,DWORD PTR [esi+0x579f6810]
  40590a:	dec    edi
  40590b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40590c:	jl     0x4058e8
  40590e:	or     DWORD PTR [ebx-0x601cc9cc],esi
  405914:	add    ah,BYTE PTR [ecx+eiz*4+0x232c1157]
  40591b:	add    DWORD PTR [ecx-0x1e],ecx
  40591e:	leave  
  40591f:	repz popa 
  405921:	add    eax,0xee8dc41f
  405926:	aas    
  405927:	xor    bl,BYTE PTR [edx-0x4e]
  40592a:	repnz xor edx,edi
  40592d:	fwait
  40592e:	ins    DWORD PTR es:[edi],dx
  40592f:	mov    dh,0xdb
  405931:	mov    esp,0x2d8a8a29
  405936:	hlt    
  405937:	mov    BYTE PTR [edi-0x2b],ah
  40593a:	xor    cl,BYTE PTR [esi-0xf]
  40593d:	cmp    BYTE PTR ds:0xfad41211,bh
  405943:	sub    DWORD PTR [edx],esp
  405945:	in     al,dx
  405946:	dec    esi
  405947:	aas    
  405948:	mov    esp,0x6312a115
  40594d:	ins    BYTE PTR es:[edi],dx
  40594e:	idiv   DWORD PTR [esi+edi*4+0xbc019f6]
  405955:	push   ss
  405956:	ficomp WORD PTR [ecx+ebp*2+0x6b]
  40595a:	hlt    
  40595b:	scas   eax,DWORD PTR es:[edi]
  40595c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40595d:	mov    dh,0x8a
  40595f:	dec    ecx
  405960:	stos   BYTE PTR es:[edi],al
  405961:	mov    ebx,0x2f52a0a2
  405966:	jle    0x4059d6
  405968:	ret    0x2f2d
  40596b:	inc    eax
  40596c:	in     al,dx
  40596d:	mov    esp,0xbcda5f42
  405972:	pop    ecx
  405973:	pop    es
  405974:	inc    ecx
  405975:	mov    eax,0x1dbf1896
  40597a:	pop    es
  40597b:	xlat   BYTE PTR ds:[ebx]
  40597c:	ins    DWORD PTR es:[edi],dx
  40597d:	mov    cl,0x8d
  40597f:	and    DWORD PTR [esi+0xe61f49a],ecx
  405985:	outs   dx,BYTE PTR ds:[esi]
  405986:	std    
  405987:	jns    0x4059d4
  405989:	daa    
  40598a:	loop   0x405974
  40598c:	pusha  
  40598d:	jmp    0x4059e9
  40598f:	jmp    0x2709:0xb447c588
  405996:	mov    cl,0x7f
  405998:	dec    ebp
  405999:	pop    ebp
  40599a:	push   esp
  40599b:	inc    eax
  40599c:	test   DWORD PTR [eax+ebp*8],edi
  40599f:	outs   dx,BYTE PTR ds:[esi]
  4059a0:	cdq    
  4059a1:	jnp    0x405986
  4059a3:	icebp  
  4059a4:	imul   edi,edx,0x4b
  4059a7:	cld    
  4059a8:	test   DWORD PTR [esi-0x7aa12054],0xf07c89fd
  4059b2:	pop    esp
  4059b3:	pop    esp
  4059b4:	rcr    BYTE PTR [edx],1
  4059b6:	jae    0x4059cd
  4059b8:	mov    bl,0xe3
  4059ba:	cmp    BYTE PTR [ebx],dl
  4059bc:	shr    BYTE PTR [eax-0x39],1
  4059bf:	pop    esi
  4059c0:	shld   DWORD PTR [esi+ebx*1-0x38],esi,cl
  4059c5:	rol    DWORD PTR [eax-0x6da4b1d7],cl
  4059cb:	in     eax,0x19
  4059cd:	xor    eax,ebx
  4059cf:	js     0x405a2c
  4059d1:	fs jbe 0x405a00
  4059d4:	xchg   ebx,eax
  4059d5:	xchg   esp,eax
  4059d6:	and    BYTE PTR [edi],0xcd
  4059d9:	rcl    DWORD PTR [edi-0x717ee139],cl
  4059df:	pop    esi
  4059e0:	push   ss
  4059e1:	repz imul ebp,DWORD PTR [ebx-0x22],0xffffffd3
  4059e6:	cmc    
  4059e7:	xchg   esp,eax
  4059e8:	imul   edx,ebx,0xd23dce91
  4059ee:	dec    esi
  4059ef:	pusha  
  4059f0:	test   al,0xb5
  4059f2:	outs   dx,BYTE PTR ds:[esi]
  4059f3:	out    dx,eax
  4059f4:	and    dh,BYTE PTR [edi+ebp*4]
  4059f7:	inc    esi
  4059f8:	mov    ds:0x21e45025,al
  4059fd:	dec    ebp
  4059fe:	out    dx,eax
  4059ff:	dec    esp
  405a00:	call   0xf916:0xd9090c6f
  405a07:	cmp    BYTE PTR [eax-0x1f3083e1],0xd3
  405a0e:	cs push 0x32
  405a11:	adc    eax,0x8ffa5729
  405a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a17:	xor    eax,0xa3e16cd7
  405a1c:	(bad)  
  405a1e:	inc    edx
  405a1f:	or     DWORD PTR [ebx+esi*2],edi
  405a22:	lahf   
  405a23:	aas    
  405a24:	ficomp DWORD PTR [edx-0x5629d2bf]
  405a2a:	dec    ebx
  405a2b:	loop   0x405aab
  405a2d:	cmp    BYTE PTR [edx+0x7784f983],dl
  405a33:	ret    0x241a
  405a36:	xchg   BYTE PTR [edx],al
  405a38:	jbe    0x405a1c
  405a3a:	pop    ebx
  405a3b:	stc    
  405a3c:	retf   0x4981
  405a3f:	inc    eax
  405a40:	out    0x41,al
  405a42:	pop    esi
  405a43:	mov    edi,0x9792e44a
  405a48:	dec    eax
  405a49:	mov    eax,ds:0xa1710bc
  405a4e:	sti    
  405a4f:	enter  0x1255,0xe3
  405a53:	push   ds
  405a54:	pop    es
  405a55:	test   eax,0xc22baade
  405a5a:	jp     0x405ad5
  405a5c:	sbb    DWORD PTR [ecx+0x6822a397],esi
  405a62:	cwde   
  405a63:	aaa    
  405a64:	xor    al,0xbe
  405a66:	fadd   DWORD PTR ds:0x5bc58c2b
  405a6c:	fmul   st,st(6)
  405a6e:	ret    
  405a6f:	enter  0xce09,0x14
  405a73:	pop    ebp
  405a74:	imul   DWORD PTR [edi-0x22d2c35f]
  405a7a:	dec    edi
  405a7b:	inc    esi
  405a7c:	int3   
  405a7d:	jns    0x405ac2
  405a7f:	or     al,0x8b
  405a81:	sub    DWORD PTR [ebx+0x2fa9cdad],0xffffffbb
  405a88:	loop   0x405aec
  405a8a:	lea    ebp,[edx]
  405a8c:	dec    ebp
  405a8d:	popf   
  405a8e:	sahf   
  405a8f:	fild   WORD PTR [esi]
  405a91:	mov    WORD PTR [ecx],fs
  405a93:	dec    edi
  405a94:	mov    WORD PTR ds:0xfce768c5,fs
  405a9a:	mov    ch,0x76
  405a9c:	les    eax,FWORD PTR [edi+ecx*1]
  405a9f:	push   0x9da82029
  405aa4:	xor    BYTE PTR [ebp-0x7b],0xfe
  405aa8:	xchg   ecx,eax
  405aa9:	dec    edx
  405aaa:	arpl   WORD PTR [esi-0x63551854],bp
  405ab0:	sub    al,0x17
  405ab2:	xor    dl,BYTE PTR [esi-0x19a917a2]
  405ab8:	pop    edi
  405ab9:	and    eax,DWORD PTR [esi]
  405abb:	sar    DWORD PTR [edi-0x57],0x51
  405abf:	pop    esp
  405ac0:	pop    esp
  405ac1:	jbe    0x405a46
  405ac3:	(bad)  [eax]
  405ac5:	inc    edx
  405ac6:	stos   DWORD PTR es:[edi],eax
  405ac7:	xchg   edx,eax
  405ac8:	ds call 0x5a9:0x9ba4d29a
  405ad0:	pop    es
  405ad1:	sbb    ebp,eax
  405ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad4:	test   al,dh
  405ad6:	das    
  405ad7:	or     eax,0x4a781e5b
  405adc:	adc    al,0x4c
  405ade:	push   ss
  405adf:	clc    
  405ae0:	pusha  
  405ae1:	pop    ebx
  405ae2:	dec    ecx
  405ae3:	sub    eax,0xa4b8472c
  405ae8:	jmp    0x948d:0x4c4df7a3
  405aef:	pop    edx
  405af0:	cmp    eax,0xd670b09f
  405af5:	dec    ecx
  405af6:	pop    ecx
  405af7:	xchg   BYTE PTR [ebx],ah
  405af9:	push   edi
  405afa:	pop    esp
  405afb:	inc    esi
  405afc:	rcl    DWORD PTR [eax+0x3a009b15],0x9e
  405b03:	cmp    ah,BYTE PTR [ecx+0x59]
  405b06:	pop    esp
  405b07:	int3   
  405b08:	shl    ch,1
  405b0a:	xchg   edx,eax
  405b0b:	mul    BYTE PTR [eax+0x6ea0776d]
  405b11:	lds    ebp,FWORD PTR [ebx+0x7f]
  405b14:	push   DWORD PTR [ebp+0x53]
  405b17:	pop    edi
  405b18:	mov    eax,DWORD PTR [esi+0x2a00472b]
  405b1e:	out    dx,eax
  405b1f:	rol    DWORD PTR [edi],1
  405b21:	mov    ebx,0x9b742341
  405b26:	fs int 0x57
  405b29:	es inc edx
  405b2b:	mov    DWORD PTR [edx-0x68cc3e5f],eax
  405b31:	cld    
  405b32:	push   ss
  405b33:	add    eax,0x4e02ef88
  405b38:	not    DWORD PTR [ebx+ebp*8-0x40610563]
  405b3f:	sar    BYTE PTR [eax+0x6390a14b],0xd7
  405b46:	popfw  
  405b48:	mov    ebx,0x655aafb7
  405b4d:	jmp    0x64e6:0xb22b2743
  405b54:	fs push 0xceff90aa
  405b5a:	jg     0x405b40
  405b5c:	lods   al,BYTE PTR ds:[esi]
  405b5d:	fisub  DWORD PTR [esi]
  405b5f:	mov    al,ds:0xaee7e03
  405b64:	test   eax,0xa39e8e2d
  405b69:	sub    eax,0x8d70186b
  405b6e:	dec    edx
  405b6f:	and    ebp,DWORD PTR [eax-0x25294a55]
  405b75:	jbe    0x405b7d
  405b77:	cmp    ah,BYTE PTR [eax-0x6e]
  405b7a:	out    dx,eax
  405b7b:	mov    fs:0x87242ec7,al
  405b81:	in     al,0x30
  405b83:	cmp    DWORD PTR [esi-0x7d],eax
  405b86:	(bad)  
  405b87:	outs   dx,BYTE PTR ds:[esi]
  405b88:	and    DWORD PTR [ecx+0xe],ebp
  405b8b:	xchg   DWORD PTR [ecx-0x58],ecx
  405b8e:	and    dl,BYTE PTR [esi+eiz*8]
  405b91:	loope  0x405bb4
  405b93:	mov    esp,0xe7e5f374
  405b98:	in     eax,dx
  405b99:	or     bl,BYTE PTR [eax-0x6]
  405b9c:	push   ebx
  405b9d:	cld    
  405b9e:	in     al,dx
  405b9f:	js     0x405bc1
  405ba1:	jmp    0xa88a:0x645489ef
  405ba8:	mov    ch,0xdb
  405baa:	arpl   WORD PTR [edi],cx
  405bac:	call   FWORD PTR [esi+edi*8]
  405baf:	sahf   
  405bb0:	in     al,dx
  405bb1:	push   esi
  405bb2:	lahf   
  405bb3:	gs push cs
  405bb5:	or     BYTE PTR [esp+edx*4+0x773ca45a],bl
  405bbc:	xchg   ebp,eax
  405bbd:	and    BYTE PTR [edx+0x1c],0xfd
  405bc1:	sub    DWORD PTR [eax-0x15],edi
  405bc4:	jmp    0x8cfacda3
  405bc9:	out    dx,al
  405bca:	inc    edx
  405bcb:	push   0x7fc92559
  405bd0:	inc    edi
  405bd1:	jb     0x405c2a
  405bd3:	pop    edx
  405bd4:	push   cs
  405bd5:	dec    ebp
  405bd6:	mov    eax,0x3f9f7643
  405bdb:	jge    0x405be1
  405bdd:	loop   0x405c56
  405bdf:	stos   BYTE PTR es:[edi],al
  405be0:	out    dx,eax
  405be1:	and    eax,0x21dfd00a
  405be6:	loope  0x405bdc
  405be8:	jb     0x405c0b
  405bea:	nop
  405beb:	cs (bad) 
  405bed:	fadd   DWORD PTR [ecx]
  405bef:	fcom   DWORD PTR [esi+0x70145bc]
  405bf5:	repnz aas 
  405bf7:	cmp    al,0x65
  405bf9:	mov    eax,0xc5080cac
  405bfe:	or     BYTE PTR [esi+0x21d2dc94],ch
  405c04:	ficomp DWORD PTR [edi+0x4f]
  405c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c08:	les    ebp,FWORD PTR [edi+0x23]
  405c0b:	mov    ah,0x6c
  405c0d:	je     0x405c14
  405c0f:	and    BYTE PTR [edi+esi*4+0x2efcadcb],al
  405c16:	xor    DWORD PTR [esi+0x374c2c05],esp
  405c1c:	ds call 0x21eac7b1
  405c22:	repz adc esp,DWORD PTR ds:0xff46f39e
  405c29:	(bad)  
  405c2a:	mov    WORD PTR [edi+0x55],ss
  405c2d:	dec    esi
  405c2e:	mov    eax,ds:0x243569ff
  405c33:	adc    DWORD PTR ds:0xe8e28e5c,0xffffff95
  405c3a:	jo     0x405c76
  405c3c:	jp     0x405c79
  405c3e:	cs jg  0x405c64
  405c41:	addr16 pop eax
  405c43:	and    eax,0x6f5d6fe2
  405c48:	addr16 pop esp
  405c4a:	xchg   ecx,eax
  405c4b:	cmp    DWORD PTR [eax+eax*1],edx
  405c4e:	addr16 jmp 0x6c62:0xcf264dfd
  405c56:	sbb    al,0xf
  405c58:	mov    esp,0xb65e7cd
  405c5d:	lds    esi,FWORD PTR [ebp-0x7ca4eb90]
  405c63:	add    al,0x76
  405c65:	push   ecx
  405c66:	and    BYTE PTR [eax-0x66],cl
  405c69:	xor    al,0xb5
  405c6b:	inc    eax
  405c6c:	sub    ebx,esp
  405c6e:	cmp    cl,BYTE PTR [ecx]
  405c70:	scas   al,BYTE PTR es:[edi]
  405c71:	mov    ds:0x8d63a35a,al
  405c76:	jmp    0xb8c6734f
  405c7b:	mov    ebp,0xdefbd806
  405c80:	rcr    BYTE PTR [edi],cl
  405c82:	mov    esp,DWORD PTR [edx]
  405c84:	dec    edi
  405c85:	cdq    
  405c86:	js     0x405c1b
  405c88:	push   0xfe788ed2
  405c8d:	ins    DWORD PTR es:[edi],dx
  405c8e:	inc    esp
  405c8f:	xchg   ebx,eax
  405c90:	or     eax,esp
  405c92:	mov    ds,WORD PTR [ebp+0x79]
  405c95:	mov    ecx,0x91dc7ab2
  405c9a:	and    dh,cl
  405c9c:	sbb    esi,DWORD PTR [eax-0x298a22e4]
  405ca2:	retf   
  405ca3:	cmc    
  405ca4:	test   BYTE PTR [ecx-0x3b8218bf],bh
  405caa:	js     0x405c52
  405cac:	xor    BYTE PTR [ebx-0x61],bl
  405caf:	lahf   
  405cb0:	xchg   ebx,eax
  405cb1:	fwait
  405cb2:	data16 jle 0x405c73
  405cb5:	ins    DWORD PTR es:[edi],dx
  405cb6:	xchg   ecx,eax
  405cb7:	adc    BYTE PTR [esi-0x13],bh
  405cba:	sub    DWORD PTR [ebx+0x15edd210],ebp
  405cc0:	fbld   TBYTE PTR [esi-0x6e]
  405cc3:	pop    ss
  405cc4:	dec    esp
  405cc5:	sahf   
  405cc6:	xchg   BYTE PTR [eax-0x7d],al
  405cc9:	nop
  405cca:	cmp    al,0xd0
  405ccc:	pusha  
  405ccd:	xor    cl,BYTE PTR [ecx]
  405ccf:	pop    edi
  405cd0:	jecxz  0x405d10
  405cd2:	loop   0x405d27
  405cd4:	imul   ebx,DWORD PTR [ebx],0xe1c9ddfb
  405cda:	pop    ebx
  405cdb:	imul   esp,DWORD PTR [eax+ebp*8],0x1e
  405cdf:	inc    ebx
  405ce0:	mov    ebx,0xcd45bf31
  405ce5:	loopne 0x405cd3
  405ce7:	dec    esp
  405ce8:	xchg   BYTE PTR [ecx+edx*4+0x49],bh
  405cec:	mov    ah,0xdd
  405cee:	sbb    eax,0xfc90e3f1
  405cf3:	xchg   ebp,eax
  405cf4:	enter  0xeea3,0x2f
  405cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cf9:	pushf  
  405cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cfb:	stos   BYTE PTR es:[edi],al
  405cfc:	push   edi
  405cfd:	pop    ebp
  405cfe:	mov    edx,0xcea712d7
  405d03:	clc    
  405d04:	idiv   DWORD PTR [eax+edi*8-0x430982ee]
  405d0b:	jb     0x405d25
  405d0d:	test   BYTE PTR [esi],ch
  405d0f:	bnd jmp 0x405ca3
  405d12:	add    bh,0x4b
  405d15:	push   eax
  405d16:	clc    
  405d17:	cld    
  405d18:	leave  
  405d19:	fs jo  0x405ca6
  405d1c:	add    dl,dl
  405d1e:	sub    ch,ah
  405d20:	push   ds
  405d21:	adc    eax,ebx
  405d23:	aad    0xc0
  405d25:	push   ss
  405d26:	or     esi,DWORD PTR [esi-0x44]
  405d29:	sbb    eax,DWORD PTR [eax+ebx*8]
  405d2c:	shl    ah,1
  405d2e:	dec    ebp
  405d2f:	jl     0x405d81
  405d31:	js     0x405cbc
  405d33:	in     eax,dx
  405d34:	inc    ecx
  405d35:	inc    esi
  405d36:	cmp    BYTE PTR [eax],bh
  405d38:	(bad)  
  405d39:	dec    esi
  405d3a:	fild   DWORD PTR [edi+0x4c9aebce]
  405d40:	(bad)  
  405d41:	sub    eax,0x89f9d4b3
  405d46:	push   ds
  405d47:	xchg   BYTE PTR [ecx-0xd],bl
  405d4a:	call   0xcd4a:0x5db3af3b
  405d51:	inc    esi
  405d52:	jns    0x405d64
  405d54:	xchg   ebx,eax
  405d55:	lock adc DWORD PTR [esi],edi
  405d58:	push   0x23889a2a
  405d5d:	sbb    DWORD PTR [ebx-0x45],esp
  405d60:	mov    ds:0x49302e2b,al
  405d65:	gs in  eax,dx
  405d67:	jecxz  0x405d05
  405d69:	(bad)  
  405d6a:	jne    0x405d4c
  405d6c:	lods   al,BYTE PTR ds:[esi]
  405d6d:	jmp    0xb334:0x7f136a4b
  405d74:	mov    ah,0x6a
  405d76:	mov    al,ds:0x28d1408
  405d7c:	imul   edx,DWORD PTR [ebx],0x63c45adc
  405d82:	sub    DWORD PTR [esi-0x6f],ecx
  405d85:	and    BYTE PTR [ebx],0xc6
  405d88:	nop
  405d89:	pop    ss
  405d8a:	fsubr  QWORD PTR [ecx]
  405d8c:	cmp    al,0x15
  405d8e:	or     esi,DWORD PTR [eax-0x605e18af]
  405d94:	inc    ebx
  405d95:	adc    BYTE PTR [eax-0x53],0xd0
  405d99:	and    BYTE PTR ds:0xbc9ab105,ch
  405d9f:	mov    ebp,0x3f2fca1
  405da4:	pop    edi
  405da5:	sti    
  405da6:	scas   eax,DWORD PTR es:[edi]
  405da7:	push   eax
  405da8:	bnd jbe 0x405de1
  405dab:	jbe    0x405dda
  405dad:	iret   
  405dae:	sbb    BYTE PTR [edi-0x1aa4257c],bh
  405db4:	leave  
  405db5:	jle    0x405db0
  405db7:	(bad)  
  405db8:	lea    ecx,ds:0x75eeb92b
  405dbe:	adc    bh,BYTE PTR [ebx]
  405dc0:	popf   
  405dc1:	cmp    bl,BYTE PTR [edx+0x46]
  405dc4:	push   edx
  405dc5:	mov    ebp,0x70b32b52
  405dca:	jmp    0x405e40
  405dcc:	pop    ebx
  405dcd:	sbb    al,0x5a
  405dcf:	mov    ch,0xa7
  405dd1:	mov    DWORD PTR gs:[ebp-0x694a2eb3],eax
  405dd8:	pop    edi
  405dd9:	dec    ecx
  405dda:	sti    
  405ddb:	inc    edx
  405ddc:	sub    DWORD PTR [edx+0x304b199f],ebp
  405de2:	inc    esi
  405de3:	lahf   
  405de4:	js     0x405d6c
  405de6:	sbb    ah,BYTE PTR [edi+0x7]
  405de9:	or     BYTE PTR [esi],al
  405deb:	cs push 0xffffffea
  405dee:	pop    edx
  405def:	addr16 xor al,0x67
  405df2:	fiadd  DWORD PTR [esi-0x36]
  405df5:	pop    edi
  405df6:	ror    DWORD PTR [esi],cl
  405df8:	fild   WORD PTR [esi-0x394602ec]
  405dfe:	jo     0x405e25
  405e00:	sub    eax,0x620cfd05
  405e05:	adc    al,0xac
  405e07:	out    dx,al
  405e08:	retf   0xc30d
  405e0b:	sub    dl,BYTE PTR [eax-0x23bb1cd]
  405e11:	int    0xf6
  405e13:	dec    eax
  405e14:	pop    ebp
  405e15:	mov    eax,DWORD PTR [ecx-0x6ad930ed]
  405e1b:	popf   
  405e1c:	sti    
  405e1d:	sub    DWORD PTR [edx-0x30667184],ebx
  405e23:	hlt    
  405e24:	ja     0x405e8e
  405e26:	xor    BYTE PTR [edi+eax*8],bl
  405e29:	pusha  
  405e2a:	retf   
  405e2b:	mov    dh,0xb7
  405e2d:	cmp    al,0xf9
  405e2f:	mov    esi,0xb3f01bcf
  405e34:	jp     0x405e4d
  405e36:	popa   
  405e37:	dec    eax
  405e38:	imul   eax,ebx,0xffffffe1
  405e3b:	pop    esi
  405e3c:	in     al,dx
  405e3d:	aad    0x82
  405e3f:	mov    BYTE PTR [ebp-0x47],cl
  405e42:	jb     0x405e0d
  405e44:	ret    0x3c40
  405e47:	pop    esi
  405e48:	cmp    DWORD PTR [ebx-0x80],ebp
  405e4b:	dec    ecx
  405e4c:	fsubr  DWORD PTR [edx-0x9b3538e]
  405e52:	inc    esi
  405e53:	xchg   edi,eax
  405e54:	jnp    0x405e60
  405e56:	gs stos BYTE PTR es:[edi],al
  405e58:	int    0x5c
  405e5a:	dec    esi
  405e5b:	push   0x7
  405e5d:	pop    ebx
  405e5e:	test   al,0xf0
  405e60:	addr16 pop eax
  405e62:	mov    dl,bl
  405e64:	and    eax,0x39daa193
  405e69:	and    dl,BYTE PTR [edi]
  405e6b:	test   BYTE PTR [ebx],ch
  405e6d:	mov    bh,0xda
  405e6f:	adc    eax,0xe4708d61
  405e74:	cmp    al,0x69
  405e76:	lds    eax,FWORD PTR [esi-0x42]
  405e79:	pop    edi
  405e7a:	call   0xc6ce:0xd098d3b4
  405e81:	fistp  DWORD PTR [esi-0x2016f5b0]
  405e87:	shr    BYTE PTR [edx+0x77],1
  405e8a:	pop    es
  405e8b:	loopne 0x405e82
  405e8d:	pusha  
  405e8e:	inc    eax
  405e8f:	shr    DWORD PTR [eax],1
  405e91:	mov    BYTE PTR [ecx],ah
  405e93:	lds    esp,FWORD PTR [edi+0x7f]
  405e96:	adc    DWORD PTR [ebp-0x80],ebx
  405e99:	or     cl,BYTE PTR [ebx*4+0x466571e5]
  405ea0:	repnz cld 
  405ea2:	xchg   ecx,eax
  405ea3:	mov    bl,BYTE PTR [edi-0x20]
  405ea6:	jmp    0x405e9a
  405ea8:	fld    DWORD PTR [esi]
  405eaa:	test   al,0x25
  405eac:	dec    edi
  405ead:	pushf  
  405eae:	cmp    eax,0x7734d0ba
  405eb3:	sub    eax,0xe7344f90
  405eb8:	push   ss
  405eb9:	dec    ebx
  405eba:	mov    cl,0xae
  405ebc:	lds    esp,FWORD PTR [ebx+0x71]
  405ebf:	xor    eax,0x9c20f307
  405ec4:	cmp    eax,0xb4d1f5c2
  405ec9:	inc    ebx
  405eca:	cmp    ah,BYTE PTR [ebp-0x3ffddb5e]
  405ed0:	and    BYTE PTR [edx+0x7d],bh
  405ed3:	push   ss
  405ed4:	stc    
  405ed5:	add    al,ch
  405ed7:	jae    0x405f3b
  405ed9:	fwait
  405eda:	pop    es
  405edb:	call   0x89109a2e
  405ee0:	mov    BYTE PTR [edi],0x37
  405ee3:	js     0x405f1b
  405ee5:	test   ecx,ebp
  405ee7:	mov    dl,0x52
  405ee9:	(bad)  
  405eea:	xor    ebp,esp
  405eec:	or     al,0x0
  405eee:	test   BYTE PTR [edi],0xdc
  405ef1:	cmp    BYTE PTR ds:0x3e3b8029,0xfb
  405ef8:	xchg   esi,eax
  405ef9:	mov    edx,0xb86f987a
  405efe:	xchg   esp,eax
  405eff:	xchg   ebx,eax
  405f00:	stos   BYTE PTR es:[edi],al
  405f01:	add    cl,BYTE PTR [edi-0x3ee62070]
  405f07:	stc    
  405f08:	mov    ds:0xd4b75eaf,eax
  405f0d:	cwde   
  405f0e:	hlt    
  405f0f:	loopne 0x405f3d
  405f11:	lods   eax,DWORD PTR ds:[esi]
  405f12:	and    BYTE PTR [eax-0x4b31b542],cl
  405f18:	(bad)
  405f1d:	jle    0x405ecc
  405f1f:	xchg   edi,eax
  405f20:	mov    al,0x53
  405f22:	mov    dh,0x1
  405f24:	jbe    0x405f51
  405f26:	cmc    
  405f27:	jno    0x405f56
  405f29:	lods   al,BYTE PTR ds:[esi]
  405f2a:	stos   DWORD PTR es:[edi],eax
  405f2b:	mov    dh,0x22
  405f2d:	xchg   ebp,eax
  405f2e:	lods   eax,DWORD PTR ds:[esi]
  405f2f:	or     BYTE PTR [ebx+edx*2-0x6],cl
  405f33:	sub    cl,BYTE PTR [edx]
  405f35:	addr16 sub eax,0x34bf4a46
  405f3b:	stc    
  405f3c:	pop    ss
  405f3d:	dec    eax
  405f3e:	test   al,0x8d
  405f40:	cmp    BYTE PTR [esi+eax*2],bl
  405f43:	cdq    
  405f44:	(bad)
  405f47:	inc    ebx
  405f48:	xchg   ebx,eax
  405f49:	push   esi
  405f4a:	jle    0x405eed
  405f4c:	xor    cl,BYTE PTR [ebp-0x36231924]
  405f52:	mov    tr0,ebx
  405f55:	mov    ch,0x1d
  405f57:	mov    ebp,0xd81da060
  405f5c:	popf   
  405f5d:	mov    eax,ds:0xc9b05427
  405f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f63:	jg     0x405f5a
  405f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f66:	mov    al,0x4b
  405f68:	fst    QWORD PTR [ecx]
  405f6a:	add    al,0xf7
  405f6c:	pop    esi
  405f6d:	cli    
  405f6e:	add    al,0x95
  405f70:	push   edi
  405f71:	aaa    
  405f72:	ret    0x1a4c
  405f75:	mov    bl,0x2d
  405f77:	jo     0x405f5d
  405f79:	push   ds
  405f7a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  405f7c:	fadd   DWORD PTR [edx-0x38f25996]
  405f82:	test   ecx,eax
  405f84:	ds repz retf 0x22b0
  405f89:	test   al,0x35
  405f8b:	lea    esi,[ecx-0x10099024]
  405f91:	out    0x78,al
  405f93:	and    DWORD PTR [edi-0x7698b142],0x4b
  405f9a:	mov    ds:0x476f6487,eax
  405f9f:	push   ebx
  405fa0:	in     eax,0x8a
  405fa2:	addr16 and eax,0x62a0e4ea
  405fa8:	dec    ebx
  405fa9:	cmp    eax,0x9e31f972
  405fae:	xor    DWORD PTR [esi],0x49
  405fb1:	addr16 hlt 
  405fb3:	mov    DWORD PTR [edi+0x1fe3ff9f],esp
  405fb9:	fcom   QWORD PTR [ecx+0x67]
  405fbc:	mov    ch,0x27
  405fbe:	mov    cl,0x95
  405fc0:	fisub  DWORD PTR [ebx+0x6526d96f]
  405fc6:	xchg   esi,eax
  405fc7:	arpl   ax,cx
  405fc9:	push   0x43
  405fcb:	pushf  
  405fcc:	stos   DWORD PTR es:[edi],eax
  405fcd:	add    bl,BYTE PTR fs:[edx]
  405fd0:	push   ebp
  405fd1:	cli    
  405fd2:	aam    0x2d
  405fd4:	shr    DWORD PTR ds:0xf6d24e21,0x76
  405fdb:	inc    eax
  405fdc:	js     0x405f79
  405fde:	xor    al,cl
  405fe0:	push   es
  405fe1:	pop    eax
  405fe2:	add    al,0xfb
  405fe4:	shl    BYTE PTR [esp+eax*8-0x10608bd7],0xd8
  405fec:	push   ecx
  405fed:	adc    DWORD PTR [ebx],ebx
  405fef:	out    0x72,eax
  405ff1:	stos   DWORD PTR es:[edi],eax
  405ff2:	(bad)  
  405ff3:	jp     0x405f78
  405ff5:	mov    WORD PTR ds:[ecx],?
  405ff8:	retf   0x49ec
  405ffb:	push   edx
  405ffc:	pop    ebx
  405ffd:	xor    DWORD PTR [edi],edx
  405fff:	adc    BYTE PTR [eax+eax*2+0x1b],cl
  406003:	pusha  
  406004:	fisttp WORD PTR [eax-0x35]
  406007:	push   ebp
  406008:	mov    cl,0x26
  40600a:	pop    edi
  40600b:	dec    ecx
  40600c:	fist   WORD PTR [esi+0x76]
  40600f:	push   es
  406010:	fcomip st,st(6)
  406012:	into   
  406013:	mov    esi,0x783ae56e
  406018:	arpl   dx,si
  40601a:	or     DWORD PTR [eax+0x16a0c5c7],ebp
  406020:	dec    eax
  406021:	xchg   edx,eax
  406022:	gs mov edi,0x7df798fa
  406028:	stc    
  406029:	cmc    
  40602a:	(bad)  
  40602b:	aas    
  40602c:	ret    
  40602d:	ret    0x92c2
  406030:	dec    ebx
  406031:	cmp    eax,0xb329d8bf
  406036:	repnz dec esp
  406038:	sub    al,0xda
  40603a:	pop    esi
  40603b:	call   FWORD PTR [di-0x578b]
  406040:	retf   
  406041:	repz or bh,BYTE PTR [ebx+0x26287072]
  406048:	cwde   
  406049:	call   0x8aab:0x3a930af3
  406050:	fisttp QWORD PTR [ebx-0x32]
  406053:	mov    cl,0x2e
  406055:	jnp    0x406070
  406057:	fadd   QWORD PTR [esi+0x4ceb1ffb]
  40605d:	add    eax,edx
  40605f:	and    esi,DWORD PTR [ebp-0x35c8f8ee]
  406065:	ret    0xeb1c
  406068:	pop    ebx
  406069:	dec    eax
  40606a:	xor    BYTE PTR [ebx-0x295da918],0x9
  406071:	lahf   
  406072:	xchg   DWORD PTR [ebp+0x4],ebx
  406075:	push   0xffffff88
  406077:	adc    DWORD PTR [ecx],ecx
  406079:	data16 clc 
  40607b:	and    ebx,DWORD PTR [ebx]
  40607d:	dec    edx
  40607e:	adc    BYTE PTR [edx+0x3],al
  406081:	stos   DWORD PTR es:[edi],eax
  406082:	xchg   ebx,eax
  406083:	or     eax,0xb129acfb
  406088:	dec    edi
  406089:	ret    
  40608a:	lahf   
  40608b:	xchg   DWORD PTR [ebx+0x19532f34],esp
  406091:	push   esp
  406092:	(bad)
  406095:	(bad)  
  406096:	imul   ebp,DWORD PTR [edi+0x45127a9f],0x6ae1fec6
  4060a0:	xchg   ebx,eax
  4060a1:	jbe    0x40602c
  4060a3:	and    al,0x59
  4060a5:	fstp   DWORD PTR [esi+ecx*2-0x6dc727d0]
  4060ac:	cld    
  4060ad:	(bad)  
  4060ae:	mov    ecx,0xfb59863b
  4060b3:	cmp    al,0x35
  4060b5:	shr    bh,1
  4060b7:	test   eax,0x64d1eb60
  4060bc:	sbb    eax,0x668f1f3
  4060c1:	sub    edx,0x39
  4060c4:	xor    DWORD PTR [edi-0x397487fe],eax
  4060ca:	sbb    ah,dh
  4060cc:	mov    al,bl
  4060ce:	or     esi,ebx
  4060d0:	ret    0xcb11
  4060d3:	xchg   esp,eax
  4060d4:	push   esp
  4060d5:	adc    al,0x19
  4060d7:	inc    eax
  4060d8:	mov    WORD PTR ds:0x2846f1d7,ds
  4060de:	add    eax,0x1ec430ed
  4060e3:	jl     0x40614b
  4060e5:	adc    DWORD PTR [ebp-0x3dc13c01],0xffffff95
  4060ec:	retf   0xb8bc
  4060ef:	sbb    DWORD PTR ds:0xf0bddc09,eax
  4060f5:	rcr    DWORD PTR [ecx-0x47bf0cbd],0x32
  4060fc:	xor    dl,BYTE PTR [eax]
  4060fe:	lds    eax,FWORD PTR [edx-0x16]
  406101:	retf   
  406102:	js     0x40614a
  406104:	cs inc ebp
  406106:	or     eax,0x4ffb6796
  40610b:	into   
  40610c:	test   al,0x65
  40610e:	and    eax,0x45d4352a
  406113:	add    DWORD PTR cs:[edi+0x44c709eb],esi
  40611a:	xchg   edx,ebx
  40611c:	cmp    DWORD PTR [esi-0x5d7b4ece],esp
  406122:	dec    ebp
  406123:	jmp    0x4060c8
  406125:	or     al,0xe2
  406127:	sbb    al,0xe2
  406129:	fsubp  st(3),st
  40612b:	into   
  40612c:	aas    
  40612d:	or     ebx,DWORD PTR [esi+0x41e0a91d]
  406133:	mov    cl,0x38
  406135:	jmp    0x406161
  406137:	cmc    
  406138:	aaa    
  406139:	jne    0x4060fa
  40613b:	fmul   DWORD PTR [esi+esi*2]
  40613e:	fcmovb st,st(1)
  406140:	sub    esp,esi
  406142:	sahf   
  406143:	push   edx
  406144:	lods   al,BYTE PTR es:[esi]
  406146:	shr    BYTE PTR [edx+0x2c6ebc7e],1
  40614c:	push   edi
  40614d:	cdq    
  40614e:	sub    al,0x97
  406150:	jns    0x406192
  406152:	or     eax,0xbb6ee749
  406157:	pop    ss
  406158:	ret    0xcf84
  40615b:	sbb    eax,0xf681f2d2
  406160:	and    eax,DWORD PTR [ebp-0x38b62b6c]
  406166:	ins    BYTE PTR es:[edi],dx
  406167:	jns    0x406180
  406169:	fild   WORD PTR [edx+0x22]
  40616c:	std    
  40616d:	inc    esi
  40616e:	or     ebp,DWORD PTR ds:0xcb0ea79b
  406174:	int    0x84
  406176:	sub    ah,BYTE PTR [esi+eiz*2]
  406179:	sbb    DWORD PTR [edi-0x5],esi
  40617c:	xchg   esi,edi
  40617e:	jle    0x4061a1
  406180:	cs lock adc eax,0x7e275310
  406187:	idiv   DWORD PTR [edi-0x2e53123d]
  40618d:	aas    
  40618e:	lock adc eax,0xad2cbdf4
  406194:	add    bh,ah
  406196:	in     eax,0x45
  406198:	es jb  0x40615f
  40619b:	dec    ebx
  40619c:	int3   
  40619d:	icebp  
  40619e:	cmp    eax,0xd10f6544
  4061a3:	lods   al,BYTE PTR ds:[esi]
  4061a4:	(bad)  
  4061a5:	push   esi
  4061a6:	jmp    0x2e65f0e8
  4061ab:	or     eax,0xfbef1bd3
  4061b0:	mov    BYTE PTR [esp+eax*4+0x50e4e20c],0xc4
  4061b8:	push   ss
  4061b9:	jge    0x406162
  4061bb:	mov    ds:0x4ec6d42,al
  4061c0:	lods   al,BYTE PTR ds:[esi]
  4061c1:	mov    WORD PTR [edx],?
  4061c3:	(bad)  
  4061c4:	test   eax,0xc623a557
  4061c9:	mov    ah,0xa3
  4061cb:	pop    es
  4061cc:	sub    ebx,DWORD PTR [edx+0x9]
  4061cf:	xchg   BYTE PTR [edx],cl
  4061d1:	test   BYTE PTR [ebx+esi*4+0x3e],bl
  4061d5:	mov    BYTE PTR ds:0xd9f234e7,dh
  4061db:	int    0xd0
  4061dd:	jp     0x406202
  4061df:	daa    
  4061e0:	inc    ebx
  4061e1:	repz jecxz 0x406231
  4061e4:	mov    bh,0xf7
  4061e6:	test   al,0xef
  4061e8:	scas   al,BYTE PTR es:[edi]
  4061e9:	pop    si
  4061eb:	mov    ?,ebp
  4061ed:	pop    ebp
  4061ee:	and    eax,0xb2e9aa76
  4061f3:	adc    al,0x19
  4061f5:	adc    ecx,DWORD PTR [esi-0x42]
  4061f8:	shl    DWORD PTR [ecx+0x42],1
  4061fb:	je     0x4061fa
  4061fd:	scas   al,BYTE PTR es:[edi]
  4061fe:	pop    ebx
  4061ff:	adc    cl,BYTE PTR [ecx-0x4a]
  406202:	xor    DWORD PTR fs:[ecx-0x46],edi
  406206:	cmp    eax,edx
  406208:	stos   BYTE PTR es:[edi],al
  406209:	cmp    bl,BYTE PTR [eax]
  40620b:	icebp  
  40620c:	pusha  
  40620d:	mov    eax,ds:0xa4b141c8
  406212:	pop    esi
  406213:	inc    esp
  406214:	dec    ebx
  406215:	xor    BYTE PTR [edx-0x35],al
  406218:	hlt    
  406219:	pop    ds
  40621a:	jmp    0x1a04:0x6fe7867c
  406221:	clc    
  406222:	fsub   DWORD PTR [edx+0x72600427]
  406228:	or     DWORD PTR [ebx-0xe91a75c],ebp
  40622e:	lds    ebp,FWORD PTR [edi+0x4e]
  406231:	pop    ebx
  406232:	ds rol bh,cl
  406235:	push   0x4ddd4fad
  40623a:	cmp    eax,0xb8510a4
  40623f:	pop    eax
  406240:	lahf   
  406241:	push   0x1dfa8feb
  406246:	dec    ebx
  406247:	and    al,0xc2
  406249:	and    DWORD PTR [ecx],edx
  40624b:	hlt    
  40624c:	ret    
  40624d:	aam    0xb5
  40624f:	fdivr  DWORD PTR ds:0x1ae0bc99
  406255:	jle    0x406280
  406257:	add    DWORD PTR [edx+0x5f],edi
  40625a:	(bad)  
  40625c:	xchg   esi,eax
  40625d:	sbb    eax,0xf7c93894
  406262:	mov    ebx,0x37a510ad
  406267:	addr16 jno 0x406250
  40626a:	adc    al,0x68
  40626c:	inc    ebx
  40626d:	push   esp
  40626e:	stos   BYTE PTR es:[edi],al
  40626f:	pop    ds
  406270:	fst    DWORD PTR [edx]
  406272:	fidiv  WORD PTR [ecx+0x4b]
  406275:	push   DWORD PTR [eax]
  406277:	jecxz  0x406288
  406279:	lea    esp,[eax-0x51]
  40627c:	xchg   ebp,eax
  40627d:	lahf   
  40627e:	jne    0x406275
  406280:	sub    dh,dl
  406282:	popf   
  406283:	or     eax,0xa6b35e27
  406288:	ds in  eax,0x39
  40628b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40628c:	(bad)  [edi]
  40628e:	(bad)  
  40628f:	xor    DWORD PTR [edx],ebp
  406291:	div    BYTE PTR [esi+ebx*1+0x233db690]
  406298:	cmp    bl,0x5
  40629b:	shl    dh,1
  40629d:	mov    edi,DWORD PTR [edx+eax*2-0x18]
  4062a1:	ds test al,ch
  4062a4:	mov    ch,0xd5
  4062a6:	dec    ebx
  4062a7:	mov    esi,0xa9f60e84
  4062ac:	fs or  eax,0x4df97c88
  4062b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062b3:	mov    eax,0xb66f94b6
  4062b8:	rcl    DWORD PTR [edx+0x34bb50ce],0xa7
  4062bf:	cmp    bl,BYTE PTR [edx-0x794cb42a]
  4062c5:	xchg   ebx,eax
  4062c6:	pop    ss
  4062c7:	or     eax,0x24e275ef
  4062cc:	sub    al,0x4d
  4062ce:	inc    ebp
  4062cf:	jg     0x406317
  4062d1:	add    edi,DWORD PTR [edx+ebp*1+0x4a]
  4062d5:	into   
  4062d6:	fcomp  QWORD PTR [edi*8+0x66b6bba1]
  4062dd:	add    bl,cl
  4062df:	in     eax,dx
  4062e0:	ja     0x406344
  4062e2:	push   edi
  4062e3:	add    eax,DWORD PTR [esi+0x41]
  4062e6:	xor    eax,0xb8c44f5e
  4062eb:	xchg   ecx,eax
  4062ec:	dec    esi
  4062ed:	mov    WORD PTR [ebx-0x5b],es
  4062f0:	arpl   WORD PTR cs:[ecx],bp
  4062f3:	inc    edi
  4062f4:	aas    
  4062f5:	xor    al,0xc4
  4062f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062f8:	stc    
  4062f9:	popf   
  4062fa:	push   ecx
  4062fb:	pushf  
  4062fc:	push   edi
  4062fd:	sbb    ch,0x84
  406300:	mov    esi,0x12411325
  406305:	aas    
  406306:	dec    ebp
  406307:	cmp    dh,BYTE PTR [ecx+0x3]
  40630a:	sti    
  40630b:	push   eax
  40630c:	push   edx
  40630d:	cmp    al,BYTE PTR [ecx]
  40630f:	jmp    0xf1da:0x3c80f18e
  406316:	stos   DWORD PTR es:[edi],eax
  406317:	pusha  
  406318:	push   DWORD PTR [edi]
  40631a:	cli    
  40631b:	ficomp WORD PTR [esi]
  40631d:	outs   dx,BYTE PTR ds:[esi]
  40631e:	cdq    
  40631f:	pushf  
  406320:	in     al,dx
  406321:	sahf   
  406322:	retf   0x7edc
  406325:	sti    
  406326:	push   esi
  406327:	nop
  406328:	out    0xc1,eax
  40632a:	call   0xbdcf:0x3a6581d4
  406331:	das    
  406332:	mov    dl,0x9b
  406334:	sbb    BYTE PTR [edi-0x4e],ah
  406337:	outs   dx,BYTE PTR ds:[esi]
  406338:	mov    DWORD PTR [esi+0x55a93dfd],0x8376f9f2
  406342:	loopne 0x406378
  406344:	add    eax,0x64fd9c39
  406349:	dec    ebp
  40634a:	cmp    DWORD PTR [ecx+0x1b],esi
  40634d:	adc    DWORD PTR [ebp+edx*8+0x3e5a6cfa],0xffffff82
  406355:	fdiv   DWORD PTR [esi+0x5f4e09c9]
  40635b:	sahf   
  40635c:	shr    BYTE PTR [ebx-0x511e1a36],cl
  406362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406363:	sti    
  406364:	inc    esi
  406365:	fwait
  406366:	retf   
  406367:	imul   edx,DWORD PTR [edx-0x18ea4649],0xd62c12b9
  406371:	stos   DWORD PTR es:[edi],eax
  406372:	xor    esi,0xe1cc68b5
  406378:	pop    es
  406379:	add    al,0x23
  40637b:	nop
  40637c:	mov    al,ds:0x2e2ba59f
  406381:	inc    eax
  406382:	stc    
  406383:	das    
  406384:	cmp    cl,BYTE PTR [eax+0x3f]
  406387:	xchg   ax,ax
  406389:	not    esp
  40638b:	jo     0x40635c
  40638d:	or     DWORD PTR [ebx-0x77a2262d],edi
  406393:	mov    eax,0xe9e11469
  406398:	in     al,0x3e
  40639a:	out    dx,eax
  40639b:	xchg   dl,dh
  40639d:	dec    ecx
  40639e:	pop    esi
  40639f:	add    al,0x95
  4063a1:	fcmovb st,st(3)
  4063a3:	pop    ebp
  4063a4:	adc    BYTE PTR [edi-0x3cc0d683],0x91
  4063ab:	dec    ecx
  4063ac:	les    eax,FWORD PTR ds:0x3d6b5ec7
  4063b2:	xlat   BYTE PTR ds:[ebx]
  4063b3:	popa   
  4063b4:	mov    ebp,0xb1fb8b1f
  4063b9:	xchg   dx,ax
  4063bb:	jp     0x406397
  4063bd:	ins    WORD PTR es:[edi],dx
  4063bf:	test   eax,0x2454c599
  4063c4:	in     al,dx
  4063c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063c6:	call   0xdbf6:0x28e7e6b7
  4063cd:	dec    BYTE PTR [ebx-0x66]
  4063d0:	rol    BYTE PTR [edi+eax*8+0x17],0xf5
  4063d5:	ss ins DWORD PTR es:[edi],dx
  4063d7:	pop    es
  4063d8:	add    al,0x7
  4063da:	aam    0xb4
  4063dc:	call   0xaac8ca3d
  4063e1:	jbe    0x4063e9
  4063e3:	ret    0xbc22
  4063e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063e7:	sub    esp,DWORD PTR [ecx+0x6fd12a1c]
  4063ed:	push   es
  4063ee:	xor    bl,dh
  4063f0:	mov    al,0x3
  4063f2:	dec    eax
  4063f3:	xor    bh,dl
  4063f5:	pop    eax
  4063f6:	ja     0x406448
  4063f8:	lds    edx,FWORD PTR [esi]
  4063fa:	xor    BYTE PTR [edx+0x1c2bb706],dh
  406400:	push   0x723f1058
  406405:	pop    esp
  406406:	add    DWORD PTR [edx-0x41],edi
  406409:	add    eax,0x204ab993
  40640e:	in     al,0x8b
  406410:	data16 jne 0x406444
  406413:	xchg   DWORD PTR [eax+0x1164ea90],esi
  406419:	mov    ch,0x97
  40641b:	(bad)  
  40641c:	mov    WORD PTR [edx-0x6b],fs
  40641f:	mov    edi,0x7db7097f
  406424:	popf   
  406425:	add    eax,0x9285a784
  40642a:	sbb    eax,edx
  40642c:	adc    bh,dl
  40642e:	in     al,dx
  40642f:	jb     0x406403
  406431:	je     0x40644e
  406433:	xchg   esp,eax
  406434:	or     BYTE PTR [edx+0x19],bh
  406437:	add    BYTE PTR [ebp+0x8],bh
  40643a:	adc    ch,al
  40643c:	popf   
  40643d:	jmp    0x40645c
  40643f:	adc    eax,0x3ec4612e
  406444:	call   0xa29828c0
  406449:	sub    al,BYTE PTR [eax+0x13b96856]
  40644f:	ins    BYTE PTR es:[edi],dx
  406450:	inc    ebp
  406451:	gs ins BYTE PTR es:[edi],dx
  406453:	cmp    BYTE PTR [edx+0x2103a339],0x26
  40645a:	sub    eax,0x89807158
  40645f:	inc    edi
  406460:	push   ebp
  406461:	sub    eax,0xdcd60a7f
  406466:	jmp    0xa3eb06e7
  40646b:	(bad)  
  40646d:	out    dx,eax
  40646e:	push   ds
  40646f:	xor    al,0x59
  406471:	sahf   
  406472:	leave  
  406473:	(bad)  
  406474:	dec    edx
  406475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406476:	or     edi,0xffffffd9
  406479:	jg     0x4064d8
  40647b:	ror    BYTE PTR [esi],cl
  40647d:	cmp    DWORD PTR [ecx-0x7f5ac3aa],0xffffffee
  406484:	ret    
  406485:	pop    edi
  406486:	js     0x406436
  406488:	sbb    edx,edi
  40648a:	and    esp,DWORD PTR [edi]
  40648c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40648d:	xchg   BYTE PTR [esi],cl
  40648f:	sbb    al,0xa6
  406491:	mov    ebp,0x5bac3908
  406496:	fcmovu st,st(6)
  406498:	jge    0x406504
  40649a:	mov    dh,0xf
  40649c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40649d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40649e:	scas   al,BYTE PTR es:[edi]
  40649f:	imul   edx,DWORD PTR [bx+0x1184],0x1ae06ab5
  4064a8:	clc    
  4064a9:	mov    gs,WORD PTR [esp+ebx*1-0xa42ef05]
  4064b0:	icebp  
  4064b1:	sub    ebx,0x73
  4064b4:	out    0xd6,al
  4064b6:	sbb    eax,0xe50afcd9
  4064bb:	add    al,0x5d
  4064bd:	mov    ds:0x46dd6bd3,eax
  4064c2:	in     al,0x96
  4064c4:	push   0x2c
  4064c6:	(bad)  
  4064c7:	les    esi,FWORD PTR [edi]
  4064c9:	mov    ebp,0x8179b05b
  4064ce:	dec    ecx
  4064cf:	aaa    
  4064d0:	xsave  [ecx+ecx*8]
  4064d4:	pop    es
  4064d5:	add    eax,0x4749a9cf
  4064da:	test   BYTE PTR [esi-0x73ab7fa8],0x1e
  4064e1:	lods   eax,DWORD PTR ds:[esi]
  4064e2:	cli    
  4064e3:	xor    edx,0xb6859750
  4064e9:	pop    eax
  4064ea:	test   bl,cl
  4064ec:	popf   
  4064ed:	sar    DWORD PTR [ebx+0x1b9b9b6f],1
  4064f3:	pop    esi
  4064f4:	push   cs
  4064f5:	and    ebp,DWORD PTR [edi+eax*4-0x3837c13a]
  4064fc:	test   BYTE PTR ds:0xddee5dcb,bl
  406502:	dec    eax
  406503:	daa    
  406504:	xchg   edx,eax
  406505:	dec    esp
  406506:	adc    al,0x95
  406508:	inc    ebx
  406509:	mov    ch,0x1a
  40650b:	mov    es,WORD PTR [esi+0x13]
  40650e:	into   
  40650f:	inc    eax
  406510:	rcl    DWORD PTR [edi+0x1e],cl
  406513:	jns    0x4064a9
  406515:	cmp    DWORD PTR [ebx],esp
  406517:	fsub   st,st(5)
  406519:	std    
  40651a:	lea    edx,[edi+0x68793f24]
  406520:	cld    
  406521:	stos   DWORD PTR es:[edi],eax
  406522:	lds    edx,FWORD PTR [edi]
  406524:	mov    bh,0xc8
  406526:	xchg   esp,eax
  406527:	pop    es
  406528:	fs push cs
  40652a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40652b:	repz sub eax,0x1461b298
  406531:	mov    dl,0x3b
  406533:	dec    BYTE PTR [edi-0x7e31eba2]
  406539:	xchg   DWORD PTR [eax+0x1133ceb3],esi
  40653f:	fwait
  406540:	imul   edi,DWORD PTR [esi-0x3e],0xfa71dd54
  406547:	lea    esi,[ecx+eax*1+0x7663da08]
  40654e:	call   0xd6df:0x916efbce
  406555:	cmp    ebp,ebp
  406557:	idiv   bl
  406559:	retf   
  40655a:	dec    edi
  40655b:	icebp  
  40655c:	mov    esp,0x8dddb3ee
  406561:	add    WORD PTR [esi+0x4],bp
  406565:	add    edx,ebx
  406567:	pop    es
  406568:	not    ebx
  40656a:	mov    eax,0x495ca56b
  40656f:	gs push 0xffffffc9
  406572:	push   cs
  406573:	(bad)  
  406574:	std    
  406575:	and    ebx,DWORD PTR [ecx+0x7b928c4c]
  40657b:	addr16 push ecx
  40657d:	fisttp WORD PTR [ecx]
  40657f:	xchg   DWORD PTR [ecx],ecx
  406581:	(bad)  
  406583:	call   FWORD PTR [ecx+0x427e5d99]
  406589:	jae    0x4065ed
  40658b:	or     eax,ebx
  40658d:	or     BYTE PTR [edi+0x3],ah
  406590:	aaa    
  406591:	rcr    DWORD PTR [ebx-0x59],0x7c
  406595:	adc    al,0x15
  406597:	sub    bl,BYTE PTR [ecx+0x63fb4d12]
  40659d:	mov    esp,0xd265a6aa
  4065a2:	fild   WORD PTR [ebp-0x6f9789c1]
  4065a8:	mov    ebp,0x799b0119
  4065ad:	daa    
  4065ae:	mov    dl,0xc2
  4065b0:	mov    ch,0xb5
  4065b2:	push   esi
  4065b3:	xchg   ecx,eax
  4065b4:	pop    ss
  4065b5:	leave  
  4065b6:	fstp   TBYTE PTR [ebp*2-0x7935e628]
  4065bd:	mov    ecx,0x1ea96580
  4065c2:	loopne 0x4065cf
  4065c4:	or     al,0x42
  4065c6:	push   ebp
  4065c7:	mov    al,ds:0x543ceed5
  4065cc:	mov    ds:0x3b252b2d,ax
  4065d2:	sub    BYTE PTR [edi-0x57],al
  4065d5:	mov    esi,0xefe7ebdf
  4065da:	adc    BYTE PTR ds:0xcd46b0f1,bh
  4065e0:	add    BYTE PTR [edx],ah
  4065e2:	cmc    
  4065e3:	sbb    al,0xda
  4065e5:	push   ss
  4065e6:	pop    es
  4065e7:	pop    edi
  4065e8:	retf   0xd506
  4065eb:	sub    al,0x19
  4065ed:	imul   eax,DWORD PTR [ecx],0xdde481b3
  4065f3:	mov    ecx,0xc2398c47
  4065f8:	out    dx,eax
  4065f9:	pop    esp
  4065fa:	pop    eax
  4065fb:	add    eax,0xebbeed47
  406600:	popa   
  406601:	ja     0x4065f5
  406603:	mov    ebx,0x8ca6b59
  406608:	pop    edx
  406609:	ds jp  0x4065e4
  40660c:	or     ah,bl
  40660e:	push   0x3c46971c
  406613:	inc    esp
  406614:	xor    DWORD PTR [eax],esi
  406616:	test   DWORD PTR ds:0xfe78f114,0x3afd7203
  406620:	shl    DWORD PTR [ebp+0x3984c153],1
  406626:	(bad)  
  406627:	push   ss
  406628:	(bad)  
  406629:	cld    
  40662a:	inc    ecx
  40662b:	mov    ss,WORD PTR [edx-0x528de857]
  406631:	ds push esi
  406633:	push   esi
  406634:	retf   
  406635:	and    BYTE PTR [ecx],ch
  406637:	lods   eax,DWORD PTR ds:[esi]
  406638:	mov    bl,0x76
  40663a:	inc    ecx
  40663b:	push   edx
  40663c:	mov    ecx,0x87d9c4a5
  406641:	xor    DWORD PTR [esi+ebx*1-0xc],ebx
  406645:	sbb    ebp,eax
  406647:	int    0xaa
  406649:	fcmovnu st,st(7)
  40664b:	sbb    ah,dl
  40664d:	mov    ebp,0xe9a9cc75
  406652:	fwait
  406653:	mov    bh,bl
  406655:	bound  ebp,QWORD PTR [esi-0x1b]
  406658:	and    bl,BYTE PTR cs:[edx+eiz*8+0x45]
  40665d:	mov    edx,0xe5d2d21a
  406662:	mov    eax,ds:0xa413cbc9
  406667:	test   ah,0xbe
  40666a:	loope  0x406638
  40666c:	out    dx,al
  40666d:	xlat   BYTE PTR ds:[ebx]
  40666e:	cmc    
  40666f:	loopne 0x4065f2
  406671:	and    ebp,DWORD PTR [eax+eiz*1-0x55]
  406675:	fsub   QWORD PTR [ebp+0x27]
  406678:	push   0x717d78f8
  40667d:	mov    BYTE PTR [ebx+0x2a],bh
  406680:	or     edx,DWORD PTR [edi+esi*4]
  406683:	inc    esp
  406684:	sub    edi,edx
  406686:	es cmp al,0x9f
  406689:	cmp    al,0xdf
  40668b:	mov    ds:0x92f7c092,eax
  406690:	es sbb esi,edx
  406693:	test   eax,0xa5473ac2
  406698:	pop    eax
  406699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40669a:	fwait
  40669b:	xor    edx,DWORD PTR [eax+ecx*2]
  40669e:	mov    al,ds:0xee5cb68c
  4066a3:	sbb    bl,BYTE PTR [edx]
  4066a5:	pop    ebx
  4066a6:	(bad)  
  4066a8:	inc    ebp
  4066a9:	adc    al,0x9f
  4066ab:	or     DWORD PTR ds:0xb12faf27,edi
  4066b1:	mul    BYTE PTR fs:[ebx]
  4066b4:	xchg   esp,eax
  4066b5:	dec    ebx
  4066b6:	or     DWORD PTR [ecx+0x5b303d73],ebx
  4066bc:	jecxz  0x406653
  4066be:	pop    esi
  4066bf:	lods   al,BYTE PTR ds:[esi]
  4066c0:	jbe    0x406696
  4066c2:	int3   
  4066c3:	shl    ch,0x22
  4066c6:	or     esp,esi
  4066c8:	xor    ecx,DWORD PTR [ecx-0x21]
  4066cb:	fiadd  DWORD PTR ds:0x2b2e844b
  4066d1:	sbb    esp,DWORD PTR [ebx]
  4066d3:	and    ebx,DWORD PTR [esi]
  4066d5:	rcl    BYTE PTR [eax],1
  4066d7:	sbb    al,0x90
  4066d9:	mov    ah,0xee
  4066db:	mov    WORD PTR [ecx+0x374598a2],cs
  4066e1:	sbb    dh,BYTE PTR [edx+0x354a7a84]
  4066e7:	mov    edx,0xa0e53357
  4066ec:	cwde   
  4066ed:	and    al,0x7b
  4066ef:	dec    esp
  4066f0:	jge    0x4066c0
  4066f2:	fiadd  WORD PTR [ebx+0x79d9a51c]
  4066f8:	xchg   BYTE PTR [esi-0x5d742210],dl
  4066fe:	cmp    BYTE PTR [ecx-0x1ab5b022],dh
  406704:	add    dh,BYTE PTR ds:0x354b33e7
  40670a:	cmp    bh,al
  40670c:	and    ecx,eax
  40670e:	fnstsw WORD PTR [eax+ebp*4]
  406711:	ss inc ebp
  406714:	pop    ss
  406715:	sub    ch,BYTE PTR [edi+0x3c]
  406718:	adc    edx,DWORD PTR [eax-0x4b79915e]
  40671e:	lock add DWORD PTR [ecx],ecx
  406721:	test   eax,0xe0f254f7
  406726:	mov    cl,BYTE PTR ds:0xb13b6ea3
  40672c:	or     eax,0xb5db5aa9
  406731:	jb     0x406744
  406733:	gs dec esi
  406735:	pop    edi
  406736:	xchg   dh,ah
  406738:	and    eax,0x8ccd119d
  40673d:	xchg   ebp,eax
  40673e:	mov    ?,eax
  406740:	(bad)  
  406741:	add    ebp,DWORD PTR [eax+eax*1]
  406744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406745:	jl     0x4066fe
  406747:	lahf   
  406748:	ret    
  406749:	jo     0x406711
  40674b:	jge    0x406791
  40674d:	pusha  
  40674e:	mov    bl,0x64
  406750:	mov    cl,0x2b
  406752:	pop    ebp
  406753:	aad    0xe2
  406755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406756:	inc    esi
  406757:	xchg   ecx,eax
  406758:	mov    ebp,0x61f07013
  40675d:	test   al,0xe3
  40675f:	sub    eax,0x664c98db
  406764:	mov    ah,dl
  406766:	mov    ds:0xf83c4366,al
  40676b:	xchg   ebx,eax
  40676c:	add    BYTE PTR [ecx+eax*4],cl
  40676f:	test   BYTE PTR ds:0x2a024215,bl
  406775:	ins    BYTE PTR es:[edi],dx
  406776:	pop    edi
  406777:	pop    ebx
  406778:	xchg   edi,eax
  406779:	in     al,0x88
  40677b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40677c:	shl    BYTE PTR [edx+0x647db46],0x2e
  406783:	adc    ebp,DWORD PTR [ebp-0x38a384cf]
  406789:	mov    ?,edi
  40678b:	pop    es
  40678c:	cli    
  40678d:	ins    BYTE PTR es:[edi],dx
  40678e:	arpl   WORD PTR [eax],cx
  406790:	(bad)  
  406791:	inc    ecx
  406792:	cmp    ch,BYTE PTR [eax+0x7b2383b6]
  406798:	les    ebp,FWORD PTR ds:0x947f045f
  40679e:	outs   dx,BYTE PTR ds:[esi]
  40679f:	popa   
  4067a0:	or     al,0xb8
  4067a2:	or     ebx,DWORD PTR [edx+edi*1]
  4067a5:	mov    al,ds:0xd1950fe9
  4067aa:	cwde   
  4067ab:	mov    bl,0xea
  4067ad:	pop    ds
  4067ae:	inc    esi
  4067af:	inc    esp
  4067b0:	jne    0x406778
  4067b2:	push   ss
  4067b3:	jmp    0xf61c65f2
  4067b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067b9:	jecxz  0x40674b
  4067bb:	inc    edx
  4067bc:	ret    0x5b9e
  4067bf:	out    dx,al
  4067c0:	bound  edi,QWORD PTR [ebp+0x27bc7c9f]
  4067c6:	in     al,0xb5
  4067c8:	cmp    DWORD PTR [edx-0x36],edx
  4067cb:	mov    esp,0xbb0368b6
  4067d0:	and    eax,0xa4734853
  4067d5:	ss call 0x3917a731
  4067db:	sub    DWORD PTR [ecx+0x48],eax
  4067de:	mov    bh,0x3d
  4067e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067e1:	pop    ecx
  4067e2:	or     eax,0x84f18d83
  4067e7:	test   BYTE PTR [ebp+0x3ff6ed41],0xdb
  4067ee:	je     0x406789
  4067f0:	hlt    
  4067f1:	pop    ecx
  4067f2:	cmp    DWORD PTR [eax],edi
  4067f4:	out    0x9d,al
  4067f6:	xchg   edi,eax
  4067f7:	in     eax,0xb0
  4067f9:	test   eax,0x251c7370
  4067fe:	mov    ds:0x75c1d14a,al
  406803:	mov    ah,0xbe
  406805:	mov    cl,0x29
  406807:	mov    bh,BYTE PTR ds:0xaf1b80a
  40680d:	jns    0x4067fa
  40680f:	xchg   esp,eax
  406810:	adc    al,0xae
  406812:	aam    0x5d
  406814:	mov    edi,0x29a1f053
  406819:	aam    0x5
  40681b:	int    0x39
  40681d:	aad    0x1d
  40681f:	xchg   DWORD PTR [edi-0x6c],ebx
  406822:	je     0x406879
  406824:	sbb    BYTE PTR [ebx-0x6e2c0b5a],al
  40682a:	std    
  40682b:	mov    ecx,0xaa9d29a3
  406830:	mov    ch,0x8d
  406832:	fsub   DWORD PTR [ebx-0x1a]
  406835:	aas    
  406836:	es gs and al,0x5e
  40683a:	xor    ebp,DWORD PTR [esi]
  40683c:	cdq    
  40683d:	xor    al,0xef
  40683f:	push   esi
  406840:	mov    ds:0xd4c90b4b,eax
  406845:	inc    DWORD PTR [ebx]
  406847:	pop    eax
  406848:	mov    ds:0xc80901e2,al
  40684d:	les    edx,FWORD PTR [esi-0x7c]
  406850:	popf   
  406851:	ins    BYTE PTR es:[edi],dx
  406852:	test   eax,0x7b0f2ea9
  406857:	add    BYTE PTR [esi-0xa05a84b],dl
  40685d:	mov    dh,0xcc
  40685f:	inc    esi
  406860:	mov    ecx,0xe89b153e
  406865:	sub    eax,0x8575eca3
  40686a:	stos   BYTE PTR es:[edi],al
  40686b:	push   ds
  40686c:	xor    BYTE PTR [eax+0x4d],0xc0
  406870:	js     0x4067f9
  406872:	in     eax,dx
  406873:	loop   0x40683a
  406875:	pop    es
  406876:	pop    edi
  406877:	push   cs
  406878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406879:	gs pop ebx
  40687b:	add    BYTE PTR [ebx-0x2f],0xd4
  40687f:	adc    BYTE PTR [eax-0x2f],bh
  406882:	repnz clc 
  406884:	push   ebx
  406885:	cld    
  406886:	in     eax,0x54
  406888:	bound  ecx,QWORD PTR [esi+ecx*8+0x660a4ee2]
  40688f:	fmul   DWORD PTR [ecx-0x20534902]
  406895:	mov    dh,0x51
  406897:	daa    
  406898:	int    0xb6
  40689a:	cmp    eax,0x44015881
  40689f:	iret   
  4068a0:	popa   
  4068a1:	sub    cl,BYTE PTR [edi-0x122fb755]
  4068a7:	sbb    DWORD PTR ds:0x3e3304f9,edi
  4068ad:	repz pop esp
  4068af:	and    BYTE PTR [ebp-0x1f],ah
  4068b2:	xchg   ecx,eax
  4068b3:	pop    esi
  4068b4:	not    BYTE PTR [ebx]
  4068b6:	add    eax,0xd15cd8f1
  4068bb:	mov    al,ds:0x80fc5030
  4068c0:	sbb    dh,ch
  4068c2:	sub    ebx,edi
  4068c4:	imul   ebx,DWORD PTR [esi],0xa004ecb5
  4068ca:	enter  0x9e0b,0xb4
  4068ce:	sbb    DWORD PTR [ebp+0x68],esi
  4068d1:	add    eax,0xdd3490
  4068d6:	cmp    al,0x62
  4068d8:	imul   ebp,DWORD PTR [edx-0x7a],0x61
  4068dc:	(bad)  
  4068dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068de:	xchg   esi,eax
  4068df:	repz mov eax,ds:0x44482111
  4068e5:	pop    edi
  4068e6:	dec    ecx
  4068e7:	jle    0x406966
  4068e9:	mov    ecx,0x40d710d7
  4068ee:	fdiv   DWORD PTR [esi+0x7c]
  4068f1:	loopne 0x406961
  4068f3:	out    0xbc,al
  4068f5:	xchg   ecx,eax
  4068f6:	inc    ecx
  4068f7:	xchg   DWORD PTR [eax-0x2c],ebx
  4068fa:	aaa    
  4068fb:	push   esi
  4068fc:	or     edx,edx
  4068fe:	loop   0x4068d3
  406900:	sub    DWORD PTR [ecx],ebx
  406902:	push   ebp
  406903:	out    dx,al
  406904:	in     eax,0xbe
  406906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406907:	inc    edx
  406908:	jp     0x4068be
  40690a:	std    
  40690b:	fdivrp st(3),st
  40690d:	jne    0x4068cf
  40690f:	pop    ebx
  406910:	xchg   ebx,eax
  406911:	inc    esp
  406912:	mov    dl,0x3
  406914:	ins    BYTE PTR es:[edi],dx
  406915:	and    BYTE PTR [esi+0x210dfee3],ah
  40691b:	ins    BYTE PTR es:[edi],dx
  40691c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40691d:	mov    ecx,DWORD PTR [eax+0x46]
  406920:	push   ebx
  406921:	xor    al,0x88
  406923:	jle    0x406950
  406925:	shr    DWORD PTR [esi],1
  406927:	xor    cl,cl
  406929:	jnp    0x40698d
  40692b:	nop
  40692c:	or     eax,0xb6bb1cf1
  406931:	sbb    eax,0xde80e4b4
  406936:	ins    DWORD PTR es:[edi],dx
  406937:	add    DWORD PTR [edx+0x37c13c69],ebx
  40693d:	push   esi
  40693e:	inc    ebp
  40693f:	nop
  406940:	dec    edx
  406941:	mov    ah,0x49
  406943:	outs   dx,DWORD PTR ds:[esi]
  406944:	sbb    dh,BYTE PTR [edi-0x60b40421]
  40694a:	je     0x4068f2
  40694c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40694d:	mov    ebp,0x42dcd545
  406952:	push   ecx
  406953:	mov    dh,0xd5
  406955:	fs or  cl,cl
  406958:	dec    esp
  406959:	dec    ebx
  40695a:	add    al,0x9a
  40695c:	fs leave 
  40695e:	mov    ebp,fs
  406960:	retf   0x7b3
  406963:	inc    ecx
  406964:	rcr    DWORD PTR [edx+0x3f],0x64
  406968:	sbb    edi,esp
  40696a:	sbb    esp,ebx
  40696c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40696d:	in     eax,0x57
  40696f:	(bad)  
  406970:	adc    DWORD PTR [edi],edx
  406972:	jbe    0x4069c3
  406974:	nop
  406975:	cld    
  406976:	lahf   
  406977:	(bad)  
  406978:	int3   
  406979:	fadd   DWORD PTR [ecx-0x33baa07e]
  40697f:	cmp    cl,BYTE PTR [esi-0x511937ac]
  406985:	(bad)  
  406986:	(bad)  [ecx-0xd]
  406989:	inc    eax
  40698a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40698b:	pop    esi
  40698c:	(bad)  
  40698d:	and    eax,0xff3f9f4e
  406992:	scas   al,BYTE PTR es:[edi]
  406993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406994:	dec    BYTE PTR [eax]
  406996:	sbb    al,0xb
  406998:	rcl    BYTE PTR [edi-0x74b5d94],1
  40699e:	cmp    eax,0xc02aca80
  4069a3:	xor    dl,BYTE PTR [ebx-0x44]
  4069a6:	push   es
  4069a7:	test   al,0x88
  4069a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069aa:	add    BYTE PTR [ecx+0xae53f3a],bl
  4069b0:	rcl    DWORD PTR [eax+0x64],1
  4069b3:	shl    BYTE PTR [esi-0x5ac5f2f0],cl
  4069b9:	outs   dx,BYTE PTR ds:[esi]
  4069ba:	test   DWORD PTR [ecx+0x7d52a5f7],ebx
  4069c0:	outs   dx,DWORD PTR ds:[esi]
  4069c1:	push   cs
  4069c2:	mov    ebx,0x488ebaab
  4069c7:	pop    esi
  4069c8:	cwde   
  4069c9:	mov    eax,0xa143f39e
  4069ce:	or     DWORD PTR [esi-0x64507731],edi
  4069d4:	(bad)  
  4069d5:	adc    ecx,DWORD PTR [ebp+0x7af4ca]
  4069db:	sbb    ah,bh
  4069dd:	pop    esi
  4069de:	repnz addr16 pop edx
  4069e1:	cli    
  4069e2:	jne    0x4069d5
  4069e4:	fxch   st(3)
  4069e6:	out    0xd2,eax
  4069e8:	add    edi,DWORD PTR [esi-0x20577c0c]
  4069ee:	mov    edi,0xf83a4525
  4069f3:	jnp    0x406a41
  4069f5:	aas    
  4069f6:	std    
  4069f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069f8:	clc    
  4069f9:	and    DWORD PTR [esi+ecx*1-0x53],edx
  4069fd:	xor    DWORD PTR [edi+0x32ca92de],0x77
  406a04:	push   ecx
  406a05:	jno    0x4069b2
  406a07:	rcr    DWORD PTR [edx-0x2b],0xcb
  406a0b:	add    ch,al
  406a0d:	cs je  0x4069ba
  406a10:	cmp    ebp,DWORD PTR [edx]
  406a12:	mov    edi,0x85c653d0
  406a17:	scas   eax,DWORD PTR es:[edi]
  406a18:	rcl    DWORD PTR [ebx],0x72
  406a1b:	fmul   st(1),st
  406a1d:	jnp    0x406a88
  406a1f:	mov    WORD PTR [esp],es
  406a22:	call   0xa8434648
  406a27:	jmp    0x47f1:0x46379918
  406a2e:	xchg   DWORD PTR [edx+0x7],ebx
  406a31:	cmp    esi,eax
  406a33:	or     eax,0x62c99b8d
  406a38:	inc    edi
  406a39:	fcomp  st(4)
  406a3b:	ds or  al,0x90
  406a3e:	mov    edi,0xa9565d16
  406a43:	or     edi,DWORD PTR [edi-0x7a1df0dc]
  406a49:	push   cs
  406a4a:	mov    esp,cs
  406a4c:	dec    esi
  406a4d:	mov    dl,0x9a
  406a4f:	ret    0x209b
  406a52:	mov    dh,ah
  406a54:	xor    al,0xc1
  406a56:	std    
  406a57:	je     0x406aac
  406a59:	pop    esp
  406a5a:	ficom  WORD PTR [eax]
  406a5c:	pop    edi
  406a5d:	fisttp WORD PTR [edi]
  406a5f:	outs   dx,DWORD PTR ds:[esi]
  406a60:	mov    al,0xdc
  406a62:	adc    BYTE PTR [esp+esi*1],cl
  406a65:	sar    DWORD PTR [edx],cl
  406a67:	fwait
  406a68:	(bad)  
  406a69:	das    
  406a6a:	push   eax
  406a6b:	jb     0x406ad6
  406a6d:	dec    ecx
  406a6e:	test   eax,0x71a42294
  406a73:	jne    0x406a48
  406a75:	fld    QWORD PTR [edi+0x10]
  406a78:	jns    0xc0683e4b
  406a7e:	lods   al,BYTE PTR ds:[esi]
  406a7f:	inc    esp
  406a80:	mov    ecx,0xe4ac84cc
  406a85:	repz jno 0x406ab0
  406a88:	sub    BYTE PTR [eax],bh
  406a8a:	or     ah,BYTE PTR [edi-0x380d6bda]
  406a90:	sub    cl,BYTE PTR [edx+0x61]
  406a93:	or     edx,DWORD PTR [edx]
  406a95:	or     bh,BYTE PTR [edx+0x5b360eb9]
  406a9b:	ja     0x406a73
  406a9d:	mov    esp,ss
  406a9f:	mov    ebx,DWORD PTR [edx-0x36157df2]
  406aa5:	call   0x2c5a7f9e
  406aaa:	addr16 test eax,0x356ce8cb
  406ab0:	pop    ds
  406ab1:	rcr    BYTE PTR [edx-0x62],1
  406ab4:	push   ecx
  406ab5:	lods   eax,DWORD PTR ds:[esi]
  406ab6:	cwde   
  406ab7:	jns    0x406b31
  406ab9:	and    ebp,edx
  406abb:	inc    ebp
  406abc:	pop    edx
  406abd:	frstor [eax-0x46cea992]
  406ac3:	pusha  
  406ac4:	in     al,0x14
  406ac6:	imul   ecx,DWORD PTR [edi-0x1d],0x54616038
  406acd:	sbb    eax,0x633c7aa1
  406ad2:	adc    al,0xa
  406ad4:	inc    edi
  406ad5:	mov    al,ds:0x460ed79e
  406ada:	fs mov edi,0xf64a99ae
  406ae0:	fwait
  406ae1:	add    DWORD PTR [esi+0x33ba1603],0x286e08e6
  406aeb:	fldcw  WORD PTR [ebp+0x23]
  406aee:	pop    esi
  406aef:	xchg   ebp,eax
  406af0:	outs   dx,DWORD PTR ds:[esi]
  406af1:	out    dx,al
  406af2:	in     eax,0x19
  406af4:	fisubr DWORD PTR [esi+ebx*1]
  406af7:	xor    ecx,esi
  406af9:	or     eax,DWORD PTR [edi-0x5eed9ab0]
  406aff:	jge    0x406aa6
  406b01:	stos   BYTE PTR es:[edi],al
  406b02:	and    eax,0x8f1e1b69
  406b07:	ins    BYTE PTR es:[edi],dx
  406b08:	or     DWORD PTR [ecx-0x1c052ad5],esp
  406b0e:	(bad)  
  406b0f:	call   0x9a37d822
  406b14:	outs   dx,DWORD PTR ds:[esi]
  406b15:	pop    ds
  406b16:	sbb    al,0x48
  406b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b19:	inc    esp
  406b1a:	mov    esi,0x2f36b6d8
  406b20:	aas    
  406b21:	ja     0x406b71
  406b23:	jns    0x406b12
  406b25:	daa    
  406b26:	out    0x2b,al
  406b28:	mov    cl,0x20
  406b2a:	mov    ah,0xe3
  406b2c:	sub    al,0x4c
  406b2e:	dec    ebx
  406b2f:	jg     0x406aec
  406b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b32:	ficom  WORD PTR [edx]
  406b34:	xchg   ebp,eax
  406b35:	sbb    cl,BYTE PTR [ebp-0x5f9da5f4]
  406b3b:	mov    al,0xca
  406b3d:	addr16 jns 0x406b8b
  406b40:	cmp    ch,BYTE PTR [esi+0x58937258]
  406b46:	adc    cl,BYTE PTR [ecx+ebp*2]
  406b49:	and    eax,DWORD PTR [eax+0x60ebbdd6]
  406b4f:	in     al,dx
  406b50:	adc    al,0x86
  406b52:	xor    DWORD PTR [ebx+0x54179622],ebx
  406b58:	sub    DWORD PTR [eax-0x70f6d1c6],0xffffff90
  406b5f:	inc    esp
  406b60:	(bad)  
  406b61:	in     al,dx
  406b62:	and    al,0xc5
  406b64:	add    edi,DWORD PTR [edx-0x54]
  406b67:	stos   DWORD PTR es:[edi],eax
  406b68:	or     bl,BYTE PTR [esi+0x21]
  406b6b:	das    
  406b6c:	push   ebx
  406b6d:	xchg   ebp,eax
  406b6e:	mov    ebp,ds
  406b70:	add    al,0x22
  406b72:	ret    0x89e7
  406b75:	lock pusha 
  406b77:	loope  0x406b78
  406b79:	sbb    eax,0x72aea952
  406b7e:	or     ebx,DWORD PTR [edx+esi*8]
  406b81:	or     ch,dl
  406b83:	(bad)  
  406b84:	push   edx
  406b85:	int    0x84
  406b87:	ins    BYTE PTR es:[edi],dx
  406b88:	cs je  0x406b81
  406b8b:	(bad)  
  406b8d:	mov    ecx,0xcdde11c8
  406b92:	dec    edi
  406b93:	jp     0x406b4f
  406b95:	or     ah,BYTE PTR [edx]
  406b97:	xchg   ebp,eax
  406b98:	jmp    0x406c15
  406b9a:	ins    BYTE PTR es:[edi],dx
  406b9b:	adc    dl,BYTE PTR [ecx+0x5fdb62e]
  406ba1:	fisub  WORD PTR [esi]
  406ba3:	stos   DWORD PTR es:[edi],eax
  406ba4:	pop    ecx
  406ba5:	fdivrp st(6),st
  406ba7:	shl    ebp,0xf3
  406baa:	xor    esp,DWORD PTR [edi]
  406bac:	adc    ebx,esp
  406bae:	jbe    0x406bcd
  406bb0:	pop    ecx
  406bb1:	xchg   ch,ah
  406bb3:	inc    ecx
  406bb4:	push   0x7d
  406bb6:	(bad)  
  406bb7:	rcl    BYTE PTR [ebx+0x2668aba6],1
  406bbd:	movhps QWORD PTR [esi-0x41d866b8],xmm7
  406bc4:	mov    ecx,0xe5881ef2
  406bc9:	jle    0x406ba7
  406bcb:	rol    ebx,0xe3
  406bce:	pop    edx
  406bcf:	jbe    0x406b7d
  406bd1:	cmp    al,0x6b
  406bd3:	ja     0x406c0f
  406bd5:	ret    
  406bd6:	jmp    0x9444:0xbee9cda7
  406bdd:	dec    edi
  406bde:	enter  0x5b95,0xae
  406be2:	ror    BYTE PTR [esi+ecx*4],1
  406be5:	adc    al,0xf0
  406be7:	out    dx,eax
  406be8:	popf   
  406be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bea:	pop    eax
  406beb:	in     eax,0xf
  406bed:	ja     0x406bc5
  406bef:	js     0x406bcd
  406bf1:	cmp    esp,DWORD PTR [esi]
  406bf3:	outs   dx,BYTE PTR ds:[esi]
  406bf4:	outs   dx,BYTE PTR ds:[esi]
  406bf5:	mov    dl,0xb3
  406bf7:	sbb    ebx,ebx
  406bf9:	mov    esp,0xdb3ace88
  406bfe:	pop    edx
  406bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c00:	in     eax,0xb2
  406c02:	jle    0x406bcf
  406c04:	fld    DWORD PTR [esi+0x28]
  406c07:	out    0x5d,al
  406c09:	push   ds
  406c0a:	in     al,dx
  406c0b:	out    dx,eax
  406c0c:	stc    
  406c0d:	repz add al,0x66
  406c10:	ins    BYTE PTR es:[edi],dx
  406c11:	sbb    al,dh
  406c13:	dec    edx
  406c14:	adc    eax,0x192da0aa
  406c19:	or     eax,0x7624256c
  406c1e:	mov    ah,0x98
  406c20:	push   ebx
  406c21:	dec    ebp
  406c22:	mov    esi,0x5fc5efb9
  406c27:	xchg   ebp,eax
  406c28:	lods   al,BYTE PTR ds:[esi]
  406c29:	pop    esp
  406c2a:	(bad)  
  406c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c2c:	out    0x9e,al
  406c2e:	test   DWORD PTR [eax],esi
  406c30:	pushf  
  406c31:	scas   eax,DWORD PTR es:[edi]
  406c32:	push   ebx
  406c33:	mov    dl,0xd
  406c35:	lahf   
  406c36:	or     DWORD PTR [edi*8+0x4d9440bf],ecx
  406c3d:	xchg   ebp,eax
  406c3e:	test   ebp,edi
  406c40:	fisubr WORD PTR [edx-0x30ea8750]
  406c46:	into   
  406c47:	jecxz  0x406beb
  406c49:	mov    edi,0xdc544011
  406c4e:	test   al,0x87
  406c50:	fist   WORD PTR [ecx]
  406c52:	icebp  
  406c53:	and    bh,BYTE PTR [edi-0x28edc0e2]
  406c59:	jmp    0x406c52
  406c5b:	adc    al,0x84
  406c5d:	and    bl,BYTE PTR [eax-0x18]
  406c60:	inc    esp
  406c61:	rcl    ch,cl
  406c63:	dec    esp
  406c64:	pusha  
  406c65:	lea    ebx,[ebx]
  406c67:	or     cl,al
  406c69:	int3   
  406c6a:	iret   
  406c6b:	data16 je 0x406c6b
  406c6e:	add    al,0x6a
  406c70:	ret    
  406c71:	out    0x9a,eax
  406c73:	ficom  DWORD PTR [ebx]
  406c75:	push   ds
  406c76:	mov    BYTE PTR ds:0x18a4b26d,dh
  406c7c:	test   ebx,edi
  406c7e:	rcr    ecx,1
  406c80:	loopne 0x406ca1
  406c82:	int3   
  406c83:	scas   al,BYTE PTR es:[edi]
  406c84:	lahf   
  406c85:	and    DWORD PTR [ebp-0x7f],ebx
  406c88:	push   ecx
  406c89:	sub    eax,0x580295c3
  406c8e:	push   0xffffff8a
  406c90:	jge    0x406c75
  406c92:	pop    esp
  406c93:	push   esp
  406c94:	rol    BYTE PTR [ecx-0x72],0x69
  406c98:	dec    esp
  406c99:	sbb    DWORD PTR [ebx-0x1a37bb1f],0x18994c13
  406ca3:	pop    esi
  406ca4:	fiadd  DWORD PTR [esi]
  406ca6:	mov    ah,0xa3
  406ca8:	ret    0x2424
  406cab:	jmp    0x406c36
  406cad:	jno    0x406d20
  406caf:	push   edi
  406cb0:	mov    DWORD PTR [edi-0x13439766],esi
  406cb6:	cmp    al,0xa2
  406cb8:	(bad)  
  406cba:	pop    edi
  406cbb:	hlt    
  406cbc:	call   0x615365de
  406cc1:	push   ebx
  406cc2:	fcomp  DWORD PTR cs:[edi]
  406cc5:	sbb    al,0x2d
  406cc7:	sbb    BYTE PTR [ebx-0x21],0xfb
  406ccb:	dec    edi
  406ccc:	push   edx
  406ccd:	mov    dl,0xb6
  406ccf:	xchg   ebx,eax
  406cd0:	jae    0x406d3d
  406cd2:	(bad)  
  406cd3:	je     0x406d3b
  406cd5:	cmp    eax,0x7fc83d52
  406cda:	(bad)  
  406cdb:	clc    
  406cdc:	add    ecx,DWORD PTR [edi+0x1f]
  406cdf:	iret   
  406ce0:	or     al,0x4c
  406ce2:	add    BYTE PTR [edi-0x3db56457],ah
  406ce8:	and    esp,DWORD PTR [edx]
  406cea:	mov    ch,0x76
  406cec:	mov    bh,0x17
  406cee:	(bad)  
  406cef:	mov    ebp,0xb523b18
  406cf4:	cli    
  406cf5:	adc    al,0xe3
  406cf7:	cli    
  406cf8:	or     al,0xd
  406cfa:	sbb    eax,0xb33b45d5
  406cff:	idiv   dh
  406d01:	xor    eax,0x25c9870c
  406d06:	xchg   edx,eax
  406d07:	dec    ebx
  406d08:	mov    dh,0xe7
  406d0a:	das    
  406d0b:	jmp    0x406cbe
  406d0d:	test   edi,0x6d972e33
  406d13:	enter  0x87d3,0x25
  406d17:	adc    al,0xa3
  406d19:	pop    ebx
  406d1a:	push   edi
  406d1b:	dec    esp
  406d1c:	mov    fs,ebx
  406d1e:	lods   al,BYTE PTR ds:[esi]
  406d1f:	fbstp  TBYTE PTR [edx+0x6e]
  406d22:	lds    edx,FWORD PTR [edi-0x4df4a534]
  406d28:	pop    ds
  406d29:	cmp    bl,ch
  406d2b:	inc    eax
  406d2c:	lahf   
  406d2d:	lock jl 0x406cd8
  406d30:	daa    
  406d31:	leave  
  406d32:	mov    ebp,0x154835c5
  406d37:	sub    al,0xa3
  406d39:	les    ebx,FWORD PTR [ebx+edi*2+0x26]
  406d3d:	arpl   WORD PTR [edi+0x5d85d600],ax
  406d43:	pop    esp
  406d44:	add    BYTE PTR [esi],dl
  406d46:	add    ebx,edi
  406d48:	(bad)  
  406d49:	push   ss
  406d4a:	xchg   dl,ch
  406d4c:	push   0xe3839231
  406d51:	and    eax,0xff6124c0
  406d56:	retf   
  406d57:	add    eax,edx
  406d59:	pop    es
  406d5a:	mov    ch,0xc5
  406d5c:	int3   
  406d5d:	stc    
  406d5e:	mov    ecx,0xf54eee47
  406d63:	loop   0x406d24
  406d65:	fild   DWORD PTR [ebx-0x7c]
  406d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d69:	cs sbb al,0xf2
  406d6c:	add    ah,bl
  406d6e:	in     al,0xb6
  406d70:	cmp    esi,edx
  406d72:	out    0xe5,eax
  406d74:	call   0x7e3b4cf5
  406d79:	mov    ch,0xf5
  406d7b:	sahf   
  406d7c:	or     DWORD PTR [esi],edx
  406d7e:	xchg   ecx,eax
  406d7f:	xchg   ecx,eax
  406d80:	or     edx,DWORD PTR [edi+0x2ffb8740]
  406d86:	sahf   
  406d87:	mov    dl,0x75
  406d89:	ror    ebx,0x52
  406d8c:	xor    al,0xdd
  406d8e:	out    dx,eax
  406d8f:	sub    al,0x8b
  406d91:	ins    BYTE PTR es:[edi],dx
  406d92:	sub    ah,dl
  406d94:	push   ecx
  406d95:	call   0xb3cf:0x5d7e5d9d
  406d9c:	(bad)  
  406d9d:	cmp    al,0xcd
  406d9f:	pop    ss
  406da0:	int    0x4
  406da2:	pop    esi
  406da3:	sub    al,0xb3
  406da5:	out    dx,al
  406da6:	icebp  
  406da7:	jmp    0x406df8
  406da9:	xchg   esp,eax
  406daa:	jle    0x406d55
  406dac:	data16 data16 outs dx,BYTE PTR ds:[esi]
  406daf:	add    eax,0xf6f5ca51
  406db4:	pop    ss
  406db5:	sahf   
  406db6:	adc    al,0xb2
  406db8:	outs   dx,DWORD PTR ds:[esi]
  406db9:	out    0x2,eax
  406dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dbc:	dec    esi
  406dbd:	xor    ch,BYTE PTR [esi]
  406dbf:	sti    
  406dc0:	xchg   eax,eax
  406dc2:	pop    edx
  406dc3:	setbe  BYTE PTR [edi-0x40]
  406dc7:	sub    eax,0x85c536b3
  406dcc:	pop    esi
  406dcd:	(bad)  
  406dce:	sbb    ebx,ebx
  406dd0:	xor    bl,0x8d
  406dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd4:	pop    es
  406dd5:	(bad)  
  406dd7:	fiadd  DWORD PTR [edx-0x43]
  406dda:	shl    BYTE PTR [edi-0x308713d2],cl
  406de0:	and    esi,edi
  406de2:	out    dx,al
  406de3:	add    BYTE PTR ds:0x4ccf2145,0xe6
  406dea:	sub    edi,DWORD PTR [esp+eiz*4-0x18d741c0]
  406df1:	mov    eax,0xcb942094
  406df6:	xchg   esi,eax
  406df7:	jmp    0x7672:0xfcf7ef11
  406dfe:	xchg   edx,eax
  406dff:	pop    ds
  406e00:	out    dx,eax
  406e01:	pop    esp
  406e02:	aas    
  406e03:	sub    DWORD PTR [edi+0xed86d4b],ecx
  406e09:	psraw  mm1,QWORD PTR ds:0x37f64eb1
  406e10:	stos   BYTE PTR es:[edi],al
  406e11:	out    0xf8,al
  406e13:	repz cmp DWORD PTR [esi+ebx*2],0x76
  406e18:	cmp    eax,0x13034d03
  406e1d:	popf   
  406e1e:	adc    esi,ebx
  406e20:	mov    DWORD PTR [ebp+ebp*4+0x7dc19338],edx
  406e27:	clc    
  406e28:	out    0x49,eax
  406e2a:	lods   al,BYTE PTR ds:[esi]
  406e2b:	cli    
  406e2c:	je     0x406e35
  406e2e:	mov    ds:0xdfdefa93,eax
  406e33:	sub    BYTE PTR [eax+ecx*2-0x2],0x26
  406e38:	pushf  
  406e39:	sub    al,0xdd
  406e3b:	loope  0x406de8
  406e3d:	scas   al,BYTE PTR es:[edi]
  406e3e:	mov    WORD PTR ds:0x3fcd6d00,?
  406e44:	sahf   
  406e45:	(bad)  
  406e46:	xchg   ebp,eax
  406e47:	jp     0x406de8
  406e49:	push   0x47f9123d
  406e4e:	adc    al,0xe3
  406e50:	dec    eax
  406e51:	fadd   QWORD PTR [ebx+0x48]
  406e54:	pusha  
  406e55:	cmp    ebx,DWORD PTR [edx+0xe18e960]
  406e5b:	dec    eax
  406e5c:	xchg   ebx,eax
  406e5d:	je     0x406e17
  406e5f:	aad    0xb8
  406e61:	adc    BYTE PTR [eax+0x3d],dh
  406e64:	ror    bl,cl
  406e66:	cwde   
  406e67:	in     al,0x52
  406e69:	dec    edx
  406e6a:	or     DWORD PTR [ebp-0x41],esi
  406e6d:	and    BYTE PTR [edi+0x2ddc5d4],ah
  406e73:	das    
  406e74:	push   cs
  406e75:	push   ebp
  406e76:	push   es
  406e77:	xchg   ebx,eax
  406e78:	int3   
  406e79:	mov    ah,dl
  406e7b:	test   BYTE PTR ds:0x87e2aec9,dh
  406e81:	pop    eax
  406e82:	and    DWORD PTR ds:0xf5e55fa0,esi
  406e88:	inc    ebp
  406e89:	push   edx
  406e8a:	fldenv [esi+edx*8+0x4e939755]
  406e91:	fsub   st,st(1)
  406e93:	lahf   
  406e94:	sub    DWORD PTR [edx-0x39],ebx
  406e97:	hlt    
  406e98:	lds    edi,FWORD PTR [ecx-0x2c]
  406e9b:	pop    ebp
  406e9c:	inc    eax
  406e9d:	cmc    
  406e9e:	mov    bh,0x36
  406ea0:	retf   
  406ea1:	jne    0x406ee6
  406ea3:	test   DWORD PTR gs:[ecx+edx*1],edx
  406ea7:	lds    edi,FWORD PTR [ebx+0x64817179]
  406ead:	fild   QWORD PTR [ebx+0x6a]
  406eb0:	push   ss
  406eb1:	adc    DWORD PTR [edi],edi
  406eb3:	pushf  
  406eb4:	cdq    
  406eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eb6:	arpl   WORD PTR ds:0x896203c1,bx
  406ebc:	xchg   esp,eax
  406ebd:	mov    dl,0xc
  406ebf:	or     ch,BYTE PTR [esi+0x15]
  406ec2:	mov    eax,ds:0x9a3ebe5f
  406ec7:	int    0x26
  406ec9:	jb     0x406e53
  406ecb:	inc    ebx
  406ecc:	xchg   edi,eax
  406ecd:	xchg   esp,eax
  406ece:	cdq    
  406ecf:	or     al,0xe0
  406ed1:	js     0x406e9a
  406ed3:	jl     0x406ef5
  406ed5:	mov    ebx,DWORD PTR [eax-0x643c1848]
  406edb:	mov    ah,0x29
  406edd:	(bad)  
  406ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406edf:	retf   
  406ee0:	cdq    
  406ee1:	bound  ebp,QWORD PTR [eax-0x60]
  406ee4:	aam    0x1a
  406ee6:	in     eax,dx
  406ee7:	add    eax,0xb3927db9
  406eec:	jmp    0x7163:0xbfbae228
  406ef3:	in     eax,dx
  406ef4:	and    ebx,ecx
  406ef6:	enter  0x84f3,0x4c
  406efa:	nop
  406efb:	and    dh,BYTE PTR [eax-0x7395d4cf]
  406f01:	dec    esi
  406f02:	test   BYTE PTR [ebp-0x8e5c965],dl
  406f08:	sub    BYTE PTR [ebx],bh
  406f0a:	fdiv   DWORD PTR ds:0x93e8da89
  406f10:	or     dl,BYTE PTR [ebx]
  406f12:	and    eax,0x148cbf4a
  406f17:	or     eax,0x52918cae
  406f1c:	in     al,dx
  406f1d:	shl    ah,cl
  406f1f:	jmp    0x406f78
  406f21:	adc    dh,al
  406f23:	cdq    
  406f24:	mov    dh,0xa9
  406f26:	pcmpeqd mm5,QWORD PTR [ecx]
  406f29:	das    
  406f2a:	pop    es
  406f2b:	enter  0xdbcd,0x51
  406f2f:	xchg   ecx,eax
  406f30:	lods   al,BYTE PTR ds:[esi]
  406f31:	in     al,0x75
  406f33:	lods   eax,DWORD PTR ds:[esi]
  406f34:	popa   
  406f35:	jno    0x406f3c
  406f37:	stc    
  406f38:	sbb    DWORD PTR [edx-0x244174ed],ebp
  406f3e:	sbb    eax,0x899c225b
  406f43:	add    eax,0x2bfd77bb
  406f48:	fistp  DWORD PTR [esi-0x65]
  406f4b:	pop    edx
  406f4c:	lods   eax,DWORD PTR ds:[esi]
  406f4d:	lahf   
  406f4e:	mov    eax,0x3cbe0f32
  406f53:	sub    edx,DWORD PTR ds:0xecbc5199
  406f59:	out    dx,al
  406f5a:	enter  0xf4e1,0x33
  406f5e:	test   ah,dl
  406f60:	(bad)  
  406f61:	les    ebp,FWORD PTR [edx]
  406f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f64:	test   BYTE PTR [edx-0x3accac9c],bh
  406f6a:	add    BYTE PTR ds:0xddf523d1,cl
  406f70:	dec    ebp
  406f71:	je     0x406f2e
  406f73:	out    dx,al
  406f74:	shl    DWORD PTR [eax-0x3ae5e809],1
  406f7a:	push   eax
  406f7b:	xchg   edi,eax
  406f7c:	cdq    
  406f7d:	pop    edi
  406f7e:	mov    edi,0x97a54c4b
  406f83:	jmp    0xa523:0x38311bca
  406f8a:	hlt    
  406f8b:	push   cs
  406f8c:	push   ds
  406f8d:	loope  0x406fc7
  406f8f:	idiv   BYTE PTR [ecx+0x35c4e77d]
  406f95:	xor    BYTE PTR [ebx+ecx*1+0xd],dh
  406f99:	jecxz  0x407015
  406f9b:	xchg   ebp,eax
  406f9c:	and    ebx,esi
  406f9e:	jl     0x406f5a
  406fa0:	shl    eax,0xa6
  406fa3:	(bad)  [ebx]
  406fa5:	sub    ch,BYTE PTR [eax]
  406fa7:	adc    al,0x1b
  406fa9:	or     BYTE PTR [esi+0x54],cl
  406fac:	xchg   esp,eax
  406fad:	fwait
  406fae:	test   DWORD PTR ds:0x9536f185,eax
  406fb4:	out    0x1f,eax
  406fb6:	pop    ds
  406fb7:	or     DWORD PTR [ebx],0x7da916fe
  406fbd:	and    al,BYTE PTR [ecx+0x6bff8ec4]
  406fc3:	(bad)  
  406fc4:	int    0x8
  406fc6:	dec    ecx
  406fc7:	hlt    
  406fc8:	pop    ds
  406fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fca:	mov    eax,0xd939d62f
  406fcf:	idiv   DWORD PTR [ebp+edi*2-0x6877bbf6]
  406fd6:	jmp    0x79ad:0x4ce57613
  406fdd:	cwde   
  406fde:	in     al,dx
  406fdf:	mov    cl,0x78
  406fe1:	aam    0x83
  406fe3:	fisubr DWORD PTR [ebp-0x1]
  406fe6:	imul   esi,DWORD PTR [edi],0x9
  406fe9:	cmc    
  406fea:	xchg   edi,eax
  406feb:	sar    esp,1
  406fed:	xor    BYTE PTR [eax-0x34],dh
  406ff0:	mov    ecx,0x3848ca89
  406ff5:	dec    esp
  406ff6:	aad    0x13
  406ff8:	sbb    eax,0xd0a8a245
  406ffd:	add    esp,DWORD PTR [ebp+0x5]
  407000:	or     esp,DWORD PTR [edi-0x4b]
  407003:	mov    ds:0xd9806400,al
  407008:	mov    ch,0xa
  40700a:	(bad)  
  40700c:	add    eax,0xc650795
  407011:	retf   
  407012:	sub    eax,0x3bb923
  407017:	aas    
  407018:	outs   dx,DWORD PTR ds:[esi]
  407019:	imul   edx,DWORD PTR [ecx-0x6a723fd0],0xfffffffd
  407020:	in     al,0xdb
  407022:	test   DWORD PTR [edx-0x1433ee8a],0xeddb2fc
  40702c:	call   0xd43835fe
  407031:	jb     0x407030
  407033:	jl     0x406ff4
  407035:	loope  0x407042
  407037:	sub    DWORD PTR [esi-0x6434a7ee],ecx
  40703d:	xchg   ebx,eax
  40703e:	or     cl,BYTE PTR [ebp-0x30]
  407041:	ffreep st(6)
  407043:	mov    edi,0x4f89a77f
  407048:	dec    edx
  407049:	icebp  
  40704a:	rcl    ecx,cl
  40704c:	sub    ebp,eax
  40704e:	inc    esi
  40704f:	sub    BYTE PTR [edx+0x78],bl
  407052:	fsub   QWORD PTR [edi]
  407054:	lds    ebp,FWORD PTR [esi]
  407056:	fimul  WORD PTR [ecx]
  407058:	fbstp  TBYTE PTR [ebp-0x30]
  40705b:	or     eax,0x35d89b00
  407060:	stc    
  407061:	inc    ebp
  407062:	fisubr DWORD PTR [esi]
  407064:	and    eax,0x849b0b85
  407069:	les    eax,FWORD PTR [edx]
  40706b:	xor    al,0x7b
  40706d:	add    ch,BYTE PTR [ebp+edi*2-0x1f30f4d7]
  407074:	loope  0x40702c
  407076:	cwde   
  407077:	push   edx
  407078:	cwde   
  407079:	pusha  
  40707a:	mov    ds:0xbcbe2a7e,eax
  40707f:	inc    esp
  407080:	and    eax,0x46dee67a
  407085:	pop    eax
  407086:	into   
  407087:	mov    dh,0x6f
  407089:	cs mov ebp,0xb1486d07
  40708f:	ins    DWORD PTR es:[edi],dx
  407090:	popf   
  407091:	dec    eax
  407092:	cli    
  407093:	push   ds
  407094:	(bad)  
  407095:	jne    0x40708d
  407097:	ins    DWORD PTR es:[edi],dx
  407098:	(bad)  
  407099:	fcomp  QWORD PTR [ecx-0x3fb3acdf]
  40709f:	jmp    0x407056
  4070a1:	add    BYTE PTR [esi],0x71
  4070a4:	or     al,0x7a
  4070a6:	(bad)  [ebx-0x3]
  4070a9:	lds    ecx,FWORD PTR [edi-0x71]
  4070ac:	jno    0x4070a7
  4070ae:	inc    edx
  4070af:	pop    ss
  4070b0:	jg     0x407111
  4070b2:	and    BYTE PTR [ebp+0x632dd435],0xee
  4070b9:	int3   
  4070ba:	cs dec ebx
  4070bc:	mov    al,0x88
  4070be:	pop    es
  4070bf:	pop    edx
  4070c0:	inc    ebp
  4070c1:	pop    ebx
  4070c2:	(bad)  
  4070c3:	ret    
  4070c4:	pusha  
  4070c5:	popf   
  4070c6:	dec    edi
  4070c7:	rcl    ch,1
  4070c9:	inc    edx
  4070ca:	and    al,0x56
  4070cc:	cld    
  4070cd:	lock and ch,BYTE PTR cs:[edx-0x25789178]
  4070d5:	arpl   WORD PTR [ecx-0x50252eda],cx
  4070db:	add    al,0x4
  4070dd:	aad    0xc5
  4070df:	mov    ecx,0xcf3d961e
  4070e4:	mov    ah,bl
  4070e6:	adc    edi,ecx
  4070e8:	inc    esp
  4070e9:	and    BYTE PTR [esi],bl
  4070eb:	mov    esp,0x8babd738
  4070f0:	xor    ebx,DWORD PTR [ebp-0x47aa758]
  4070f6:	mov    dh,0x64
  4070f8:	rol    cl,0x13
  4070fb:	popf   
  4070fc:	sar    BYTE PTR ds:[ebp+0x2b],1
  407100:	clc    
  407101:	lods   al,BYTE PTR ds:[esi]
  407102:	call   DWORD PTR [ebx+edi*1+0x5b]
  407106:	xchg   ebp,eax
  407107:	sbb    DWORD PTR [edx+eax*1-0x3b61601c],ebx
  40710e:	jmp    0x4070b2
  407110:	inc    edx
  407111:	inc    eax
  407112:	in     al,0xf9
  407114:	push   edi
  407115:	dec    esp
  407116:	pop    eax
  407117:	and    BYTE PTR [eax-0x2b0e54d3],al
  40711d:	fimul  DWORD PTR [eax+0x3267ff0]
  407123:	cmc    
  407124:	icebp  
  407125:	leave  
  407126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407127:	push   ebp
  407128:	outs   dx,DWORD PTR ds:[esi]
  407129:	dec    edx
  40712a:	ss pop ds
  40712c:	popa   
  40712d:	out    0x59,al
  40712f:	arpl   dx,di
  407131:	icebp  
  407132:	jbe    0x407196
  407134:	cld    
  407135:	sbb    eax,0xf96d18cc
  40713a:	jg     0x40715f
  40713c:	xchg   edx,eax
  40713d:	les    edx,FWORD PTR [ebp-0x25]
  407140:	lods   eax,DWORD PTR ds:[esi]
  407141:	add    al,0xb3
  407143:	xchg   BYTE PTR [esi+0x1f],ch
  407146:	pop    edi
  407147:	call   0x44bc938e
  40714c:	xor    eax,esp
  40714e:	mov    ebp,0xb8ea2a23
  407153:	add    esp,DWORD PTR ds:0xd33d2eb4
  407159:	hlt    
  40715a:	retf   
  40715b:	lods   al,BYTE PTR ds:[esi]
  40715c:	adc    al,0x95
  40715e:	add    ah,dl
  407160:	outs   dx,DWORD PTR ds:[esi]
  407161:	jecxz  0x40710f
  407163:	fsubr  DWORD PTR [ebx-0x4bc6e48c]
  407169:	adc    al,0xec
  40716b:	aad    0x1b
  40716d:	xchg   ebp,eax
  40716e:	xor    al,0x88
  407170:	xchg   ebx,eax
  407171:	push   es
  407172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407173:	lds    ecx,FWORD PTR [ebx-0x5947979b]
  407179:	push   edi
  40717a:	or     eax,0x85bfc872
  40717f:	dec    ebp
  407180:	push   ebx
  407181:	sar    DWORD PTR [edi+0x5b],1
  407184:	jl     0x4071fa
  407186:	push   ss
  407187:	das    
  407188:	mov    bh,0xd9
  40718a:	int3   
  40718b:	sub    esp,DWORD PTR [edx-0x2b]
  40718e:	dec    esi
  40718f:	mov    al,0xeb
  407191:	push   ecx
  407192:	js     0x407162
  407194:	mov    edx,0xa5596f18
  407199:	and    eax,0xc11f7a4a
  40719e:	pop    ebx
  40719f:	ins    DWORD PTR es:[edi],dx
  4071a0:	gs aas 
  4071a2:	(bad)  
  4071a3:	ret    
  4071a4:	mov    ebx,0xb3ba9a6f
  4071a9:	ror    edx,1
  4071ab:	popa   
  4071ac:	pop    eax
  4071ad:	dec    eax
  4071ae:	dec    esp
  4071af:	adc    ecx,ebp
  4071b1:	or     al,0x1b
  4071b3:	sub    eax,0xe15eb41e
  4071b8:	or     cl,BYTE PTR [eax+0x48]
  4071bb:	pop    edi
  4071bc:	xchg   ecx,eax
  4071bd:	sar    BYTE PTR ds:0x445fbf90,0x41
  4071c4:	(bad)  
  4071c5:	repnz pushf 
  4071c7:	push   0xffffffd8
  4071c9:	dec    ebx
  4071ca:	xchg   esp,eax
  4071cb:	or     eax,0x8066e508
  4071d0:	push   ds
  4071d1:	cmp    DWORD PTR [ecx-0xb70c2e0],ecx
  4071d7:	jb     0x40723d
  4071d9:	inc    edx
  4071da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071db:	sahf   
  4071dc:	mov    esp,0x916b01ce
  4071e1:	adc    esi,DWORD PTR [edx]
  4071e3:	test   DWORD PTR [edi-0x3c],esp
  4071e6:	lock test al,0xf
  4071e9:	fbld   TBYTE PTR [edi+edi*8+0x67]
  4071ed:	loop   0x4071b4
  4071ef:	cmp    eax,0xe76013d0
  4071f4:	sub    eax,ebp
  4071f6:	sbb    ebx,DWORD PTR [edx+0x672dbb3a]
  4071fc:	sahf   
  4071fd:	inc    eax
  4071fe:	fwait
  4071ff:	dec    ebx
  407200:	into   
  407201:	and    bl,cl
  407203:	and    al,0x8a
  407205:	xor    ecx,edi
  407207:	inc    esi
  407208:	enter  0x2949,0x5c
  40720c:	je     0x40727d
  40720e:	loopne 0x407206
  407210:	call   0x9516:0xdea53f3d
  407217:	das    
  407218:	dec    eax
  407219:	ss jae 0x4071eb
  40721c:	test   esi,esp
  40721e:	dec    ecx
  40721f:	xchg   ebp,eax
  407220:	jae    0x40726c
  407222:	xor    BYTE PTR ds:0xc9653e4,0xf4
  407229:	mov    al,0x1f
  40722b:	pusha  
  40722c:	arpl   WORD PTR [eax-0x20bad89d],ax
  407232:	xchg   ecx,eax
  407233:	jmp    0xf4ef:0x69b866ed
  40723a:	pushf  
  40723b:	pop    ss
  40723c:	mov    eax,ds:0x9e91c772
  407241:	dec    ebp
  407242:	dec    eax
  407243:	nop
  407244:	cli    
  407245:	loope  0x407230
  407247:	mov    esp,0x67b27f6c
  40724c:	shr    DWORD PTR [eax-0x80],0xb1
  407250:	in     eax,dx
  407251:	push   ss
  407252:	stos   BYTE PTR es:[edi],al
  407253:	mov    ah,0x71
  407255:	enter  0x4dd8,0x3d
  407259:	mov    edi,0xc03cbe75
  40725e:	data16 sbb al,0xf4
  407261:	xor    DWORD PTR [ebx],edi
  407263:	jmp    0xbc4c8fc5
  407268:	xor    cl,BYTE PTR [eax]
  40726a:	inc    eax
  40726b:	mov    esi,0x4083654a
  407270:	pop    esp
  407271:	push   ebp
  407272:	pop    ebx
  407273:	push   0xa04d3a0a
  407278:	jbe    0x407230
  40727a:	arpl   WORD PTR [edx+0x43],bp
  40727d:	push   esi
  40727e:	inc    edx
  40727f:	arpl   bp,di
  407281:	cs pop ds
  407283:	daa    
  407284:	les    ebp,FWORD PTR [esp+esi*4]
  407287:	lods   eax,DWORD PTR ds:[esi]
  407288:	les    esp,FWORD PTR [ebx+esi*2-0x5af245e8]
  40728f:	inc    esp
  407290:	and    BYTE PTR [edx-0x75],bh
  407293:	bound  ebx,QWORD PTR [ebx-0x4bbc2cad]
  407299:	cmp    eax,0x338cbfdd
  40729e:	dec    eax
  40729f:	adc    ah,BYTE PTR [edi+0x1e]
  4072a2:	pop    eax
  4072a3:	jge    0x4072b8
  4072a5:	repnz push 0xffffff9c
  4072a8:	or     esi,DWORD PTR [edx]
  4072aa:	push   esi
  4072ab:	out    dx,eax
  4072ac:	mov    eax,0xbf61b197
  4072b1:	call   0x40d6:0x5f4b8bf9
  4072b8:	ss xchg edx,eax
  4072ba:	push   ss
  4072bb:	imul   edi,esi,0x4c7c5624
  4072c1:	xchg   edx,esp
  4072c3:	or     eax,0x8e2e87a8
  4072c8:	cmp    al,0x74
  4072ca:	sbb    eax,0xc5ce0461
  4072cf:	popf   
  4072d0:	pop    ebp
  4072d1:	dec    ebx
  4072d2:	xor    eax,0x6a56b8c
  4072d7:	sbb    ebp,DWORD PTR [ebx*2-0x3e073993]
  4072de:	jnp    0x4072c7
  4072e0:	unpcklps xmm6,XMMWORD PTR [edi]
  4072e3:	icebp  
  4072e4:	jle    0x4072e6
  4072e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072e7:	jb     0x4072fc
  4072e9:	sub    eax,DWORD PTR [esp+ebx*1]
  4072ec:	add    eax,0x39ce8f56
  4072f1:	ja     0x407361
  4072f3:	mov    ah,0x23
  4072f5:	inc    BYTE PTR [esi]
  4072f7:	adc    BYTE PTR ds:0xc99525a9,bh
  4072fd:	out    0x1a,eax
  4072ff:	add    al,0x4a
  407301:	dec    ebx
  407302:	addr16 cmp eax,0x8864162a
  407308:	int    0xff
  40730a:	mov    WORD PTR [esi+0x22],cs
  40730d:	(bad)  
  407310:	shl    edi,cl
  407312:	in     al,0x75
  407314:	retf   
  407315:	addr16 popf 
  407317:	mov    eax,DWORD PTR [ecx]
  407319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40731a:	shl    BYTE PTR [eax+0x2572d609],cl
  407320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407321:	jmp    0x407358
  407323:	add    edi,DWORD PTR [edx]
  407325:	popa   
  407326:	addr16 jmp 0x6f39:0xdfd1ad1b
  40732e:	or     al,BYTE PTR [ebp+0x6576a0ff]
  407334:	pop    edi
  407335:	xchg   edi,eax
  407336:	xchg   edx,eax
  407337:	fidivr DWORD PTR [esi]
  407339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40733a:	xor    DWORD PTR [eax],eax
  40733c:	add    DWORD PTR [edx],esp
  40733e:	stos   DWORD PTR es:[edi],eax
  40733f:	lods   eax,DWORD PTR ds:[esi]
  407340:	fucomip st,st(4)
  407342:	pop    ss
  407343:	cs sub al,0xbf
  407346:	ja     0x40730e
  407348:	lds    edx,FWORD PTR [edi]
  40734a:	cmc    
  40734b:	call   0xf4af0359
  407350:	out    0xd7,al
  407352:	dec    edi
  407353:	inc    eax
  407354:	into   
  407355:	loope  0x4072ed
  407357:	mov    bl,0x41
  407359:	jmp    0x4073a9
  40735b:	es inc edi
  40735d:	and    esi,edi
  40735f:	fcmovnb st,st(3)
  407361:	lods   eax,DWORD PTR ds:[esi]
  407362:	sub    al,BYTE PTR [ecx+0x45]
  407365:	lds    esp,FWORD PTR [ebp+0x55e0d870]
  40736b:	cld    
  40736c:	test   BYTE PTR [ecx],bh
  40736e:	jg     0x407320
  407370:	adc    BYTE PTR [edx+0x1c],ah
  407373:	imul   edi
  407375:	or     ecx,DWORD PTR [edi+0x71dad327]
  40737b:	cmp    cl,BYTE PTR [esi+0x59818d9a]
  407381:	call   0xf99e:0x806bf929
  407388:	jmp    0x147e842c
  40738d:	sbb    al,0xb9
  40738f:	jle    0x407392
  407391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407392:	ficom  DWORD PTR [edi]
  407394:	rol    BYTE PTR ds:0x2748cad9,0x44
  40739b:	inc    esi
  40739c:	aas    
  40739d:	popa   
  40739e:	hlt    
  40739f:	sub    al,0x5d
  4073a1:	in     al,dx
  4073a2:	mov    ?,WORD PTR [ecx+0x6]
  4073a5:	mov    ?,WORD PTR [ecx-0x10]
  4073a8:	jno    0x4073d6
  4073aa:	lods   eax,DWORD PTR ds:[esi]
  4073ab:	enter  0xa0c9,0x4f
  4073af:	jp     0x407371
  4073b1:	jns    0x4073a7
  4073b3:	and    al,0xf4
  4073b5:	shr    BYTE PTR cs:[edi],0x2f
  4073b9:	lock (bad) [ebx+0x59]
  4073bd:	ja     0x407358
  4073bf:	lock pop ss
  4073c1:	fwait
  4073c2:	repz iret 
  4073c4:	dec    eax
  4073c5:	sub    al,BYTE PTR [ebx]
  4073c7:	mov    ebx,DWORD PTR [ebx+0x403cbde2]
  4073cd:	gs push edi
  4073cf:	and    al,BYTE PTR [ecx+0x7]
  4073d2:	push   ds
  4073d3:	add    eax,0x2c588454
  4073d8:	sbb    ch,cl
  4073da:	mov    ah,bl
  4073dc:	sub    eax,0x931b2aa7
  4073e1:	and    eax,0xfdc046b9
  4073e6:	mov    ecx,0x912700f8
  4073eb:	xor    BYTE PTR [esi+0x29b4c6c7],0xb0
  4073f2:	or     BYTE PTR [ebx+esi*2],dl
  4073f5:	scas   eax,DWORD PTR es:[edi]
  4073f6:	leave  
  4073f7:	jmp    0x4073f6
  4073f9:	in     al,0x8f
  4073fb:	xchg   ebx,eax
  4073fc:	xchg   edi,eax
  4073fd:	imul   edx,edx,0x8e6e3168
  407403:	outs   dx,DWORD PTR ds:[esi]
  407404:	or     ah,BYTE PTR [ebx]
  407406:	nop
  407407:	cmp    al,0xcf
  407409:	out    0x56,al
  40740b:	xor    DWORD PTR [ecx],edx
  40740d:	popf   
  40740e:	jl     0x407424
  407410:	xchg   edi,eax
  407411:	inc    ebp
  407412:	clc    
  407413:	pop    ds
  407414:	arpl   WORD PTR [esi-0x7a52f58],dx
  40741a:	push   es
  40741b:	push   esi
  40741c:	dec    edi
  40741d:	mov    ebx,0x49e6b98c
  407422:	pop    ss
  407423:	sbb    al,BYTE PTR [ecx]
  407425:	mov    eax,ds:0x83232b63
  40742a:	fcmove st,st(1)
  40742c:	pusha  
  40742d:	ins    DWORD PTR es:[edi],dx
  40742e:	inc    esi
  40742f:	test   eax,0x905cfa7f
  407434:	pop    ebx
  407435:	push   ds
  407436:	sub    eax,0x39300b3b
  40743b:	xchg   BYTE PTR [edx-0x20],cl
  40743e:	sbb    BYTE PTR [eax-0x659e8723],al
  407444:	push   cs
  407445:	js     0x407469
  407447:	add    DWORD PTR [ebx],eax
  407449:	sbb    esp,eax
  40744b:	aas    
  40744c:	pop    es
  40744d:	verw   WORD PTR [ebx-0x117c1d2d]
  407454:	sahf   
  407455:	out    0x8d,al
  407457:	pop    ebp
  407458:	retf   0x7121
  40745b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40745c:	in     eax,0x9b
  40745e:	push   cs
  40745f:	das    
  407460:	pop    ecx
  407461:	sub    eax,ebp
  407463:	addr16 cmc 
  407465:	xchg   eax,ecx
  407467:	mov    edi,0xb181438a
  40746c:	rcl    DWORD PTR [ebp+edx*2-0x7b002762],0xd4
  407474:	in     al,dx
  407475:	inc    eax
  407476:	lods   al,BYTE PTR ds:[esi]
  407477:	fdivr  QWORD PTR [eax]
  407479:	adc    eax,0x7d8877a4
  40747e:	add    eax,0x92edc3c9
  407483:	dec    DWORD PTR [eax+0x7761423]
  407489:	inc    ebx
  40748a:	clc    
  40748b:	daa    
  40748c:	add    bl,BYTE PTR [esi]
  40748e:	jge    0x4074e3
  407490:	rol    edi,1
  407492:	lea    esi,[ebx-0x4]
  407495:	mov    eax,0x76de0e0c
  40749a:	out    0xf2,al
  40749c:	jl     0x4074c1
  40749e:	sub    DWORD PTR [ecx+0x5e],ecx
  4074a1:	ja     0x4074c6
  4074a3:	cdq    
  4074a4:	(bad)  
  4074a5:	jnp    0x407499
  4074a7:	push   ebx
  4074a8:	or     eax,0xa0411cc8
  4074ad:	shl    BYTE PTR [esi+0x53],cl
  4074b0:	pop    esi
  4074b1:	test   eax,0xda5cc68a
  4074b6:	mov    ds:0xdb3c1941,eax
  4074bb:	xor    cl,bl
  4074bd:	ret    
  4074be:	inc    eax
  4074bf:	sahf   
  4074c0:	sub    al,cl
  4074c2:	ror    esi,1
  4074c4:	mov    ah,0x38
  4074c6:	lods   al,BYTE PTR ds:[esi]
  4074c7:	mov    edx,0xb5cc8ad9
  4074cc:	jnp    0x4074c6
  4074ce:	push   ebx
  4074cf:	pop    ds
  4074d0:	data16 jne 0x4074a0
  4074d3:	nop
  4074d4:	jg     0x4074ae
  4074d6:	mov    edx,0x465c0649
  4074db:	in     eax,dx
  4074dc:	and    eax,0x5c29f42d
  4074e1:	add    dl,dh
  4074e3:	and    esi,DWORD PTR [ebp-0xa]
  4074e6:	je     0x407474
  4074e8:	sub    al,0xb1
  4074ea:	inc    esi
  4074eb:	and    ecx,DWORD PTR [edx-0x8a2d275]
  4074f1:	into   
  4074f2:	ins    DWORD PTR es:[edi],dx
  4074f3:	add    dh,BYTE PTR [ebp-0x1e9dc56]
  4074f9:	leave  
  4074fa:	xchg   esi,eax
  4074fb:	sub    eax,0x6719f435
  407500:	sbb    DWORD PTR [ecx-0x19fe5fe4],ecx
  407506:	pop    esi
  407507:	ret    0x853d
  40750a:	xchg   esi,eax
  40750b:	or     al,0x68
  40750d:	fcom   st(0)
  40750f:	xor    eax,0xcc68c2ad
  407514:	mov    esi,0x9e6924fc
  407519:	sub    al,0x82
  40751b:	inc    ebp
  40751c:	jmp    0x407539
  40751e:	sub    eax,0x268f4c6e
  407523:	add    al,0xb5
  407525:	ss jle 0x40750a
  407528:	imul   edi,DWORD PTR ds:0xca0f425b,0xc9caa7f7
  407532:	xor    dh,cl
  407534:	inc    ebx
  407535:	sbb    cl,dh
  407537:	lea    eax,[ebx]
  407539:	mov    ds:0x33f65bfb,al
  40753e:	adc    BYTE PTR [ecx],bh
  407540:	popf   
  407541:	call   0x2bd2:0xcfa32f
  407548:	cmp    DWORD PTR [edx-0x31ccef7d],eax
  40754e:	aam    0xed
  407550:	xor    eax,0xf24aa0d2
  407555:	lea    esi,[edx+0x45]
  407558:	jmp    0x407520
  40755a:	sub    BYTE PTR [edi],bh
  40755c:	popa   
  40755d:	mov    edi,fs
  40755f:	call   0x9de24803
  407564:	in     eax,dx
  407565:	sahf   
  407566:	(bad)  
  407567:	fsubr  DWORD PTR [esi]
  407569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40756a:	sahf   
  40756b:	aas    
  40756c:	and    al,0xd
  40756e:	inc    edx
  40756f:	mov    eax,0x44d703fe
  407574:	push   esi
  407575:	jecxz  0x40754f
  407577:	stos   DWORD PTR es:[edi],eax
  407578:	sub    eax,DWORD PTR [edi-0x59]
  40757b:	aam    0xd8
  40757d:	mov    edi,0xec18c956
  407582:	pushf  
  407583:	adc    ecx,DWORD PTR [ebp+0x2e739cdf]
  407589:	xor    esi,DWORD PTR [esi-0x4427758]
  40758f:	add    al,0x95
  407591:	jle    0x40759e
  407593:	sub    ch,bl
  407595:	add    DWORD PTR [eax+0x19],esi
  407598:	mov    ebx,0x8cedcdc5
  40759d:	mov    ds:0x15a4d3ef,eax
  4075a2:	sbb    eax,0xf3e9474e
  4075a7:	dec    esp
  4075a8:	fidiv  WORD PTR [ecx-0x50ba310e]
  4075ae:	mov    ah,0x79
  4075b0:	int    0xc1
  4075b2:	mov    dh,0x17
  4075b4:	inc    edi
  4075b5:	pusha  
  4075b6:	jmp    0x4075a5
  4075b8:	inc    edx
  4075b9:	nop
  4075ba:	ins    DWORD PTR es:[edi],dx
  4075bb:	jae    0x407627
  4075bd:	pop    es
  4075be:	cli    
  4075bf:	mov    ah,BYTE PTR ds:0xe3befe4a
  4075c5:	push   edx
  4075c6:	inc    eax
  4075c7:	loopne 0x407597
  4075c9:	fld    DWORD PTR [esi-0x1a]
  4075cc:	popf   
  4075cd:	add    al,0x77
  4075cf:	pop    ss
  4075d0:	rcl    DWORD PTR [edx],1
  4075d2:	push   esp
  4075d3:	mov    ecx,0x8975fc9e
  4075d8:	jo     0x40763a
  4075da:	test   eax,0xf144008b
  4075df:	cmp    dl,dh
  4075e1:	leave  
  4075e2:	xor    DWORD PTR [ebx],0xffffffec
  4075e5:	mov    bl,0x29
  4075e7:	xor    al,0x9e
  4075e9:	jmp    0x407633
  4075eb:	jno    0x4075ee
  4075ed:	mov    edi,DWORD PTR [ebx]
  4075ef:	xchg   esi,eax
  4075f0:	outs   dx,DWORD PTR ds:[esi]
  4075f1:	je     0x4075e0
  4075f3:	xor    al,BYTE PTR [ebp+0x42]
  4075f6:	in     eax,0x4f
  4075f8:	jns    0x407667
  4075fa:	jl     0x4075a3
  4075fc:	sbb    BYTE PTR [edi],ch
  4075fe:	pop    es
  4075ff:	inc    esp
  407600:	inc    edx
  407601:	dec    ebp
  407602:	aad    0x65
  407604:	iret   
  407605:	cmp    DWORD PTR [ebx],eax
  407607:	jle    0x407664
  407609:	push   ecx
  40760a:	ja     0x40766f
  40760c:	std    
  40760d:	cmp    BYTE PTR [edx],dh
  40760f:	adc    ah,bh
  407611:	out    dx,al
  407612:	adc    ah,ch
  407614:	call   0x6d85204b
  407619:	fsubr  DWORD PTR [ebx+0x5a]
  40761c:	mov    ecx,0xaaf38e3f
  407621:	cld    
  407622:	add    DWORD PTR ds:0x16f5d92a,0xffffffb9
  407629:	lods   al,BYTE PTR ds:[esi]
  40762a:	sbb    bl,cl
  40762c:	xor    al,bl
  40762e:	arpl   dx,cx
  407630:	test   al,0x7a
  407632:	inc    eax
  407633:	mov    esi,0x39b4bf22
  407638:	jmp    0x7994:0x3a124e0a
  40763f:	jnp    0x4075c1
  407641:	mov    ebp,0xcc3e6682
  407646:	cmp    eax,0x3c26cab1
  40764b:	adc    dh,bl
  40764d:	push   es
  40764e:	cli    
  40764f:	push   cs
  407650:	lea    edi,[eax+0x6276ec0f]
  407656:	adc    al,0x8e
  407658:	mov    DWORD PTR cs:[esi+0x31c630b2],esp
  40765f:	loope  0x407656
  407661:	arpl   WORD PTR [ebp-0x1dd9eef2],sp
  407667:	pop    ebx
  407668:	add    eax,0x434685e
  40766d:	add    BYTE PTR [eax],al
  40766f:	or     DWORD PTR ds:0x429018,0x42b014
  407679:	push   0x98678765
  40767e:	call   DWORD PTR ds:0x42ec63
  407684:	adc    eax,DWORD PTR ds:0x42d008
  40768a:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  407691:	add    DWORD PTR ds:0x429024,0x6cdb
  40769b:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4076a2:	neg    eax
  4076a4:	mov    eax,DWORD PTR [ebp-0x4]
  4076a7:	mov    esi,0x7510899
  4076ac:	dec    DWORD PTR ds:0x42c014
  4076b2:	xor    eax,esi
  4076b4:	and    DWORD PTR ds:0x42d010,ebx
  4076ba:	mov    edi,0x3272e0
  4076bf:	and    DWORD PTR ds:0x42c00c,0x622d
  4076c9:	add    eax,edi
  4076cb:	mov    DWORD PTR [ebp-0x1c],eax
  4076ce:	sub    DWORD PTR ds:0x42a008,ecx
  4076d4:	mov    eax,DWORD PTR [ebp+0x14]
  4076d7:	test   eax,eax
  4076d9:	je     0x407700
  4076df:	and    eax,DWORD PTR ds:0x42c010
  4076e5:	mov    eax,DWORD PTR [ebp+0x14]
  4076e8:	movzx  ebx,BYTE PTR ds:0x42a010
  4076ef:	sub    ebx,DWORD PTR ds:0x42b000
  4076f5:	mov    DWORD PTR ds:0x42a010,ebx
  4076fb:	mov    eax,DWORD PTR [eax]
  4076fd:	mov    DWORD PTR [ebp-0x1c],eax
  407700:	mov    eax,DWORD PTR [ebp-0x4]
  407703:	xor    DWORD PTR ds:0x42a01c,0x6981
  40770d:	xor    eax,esi
  40770f:	dec    ebx
  407710:	add    eax,edi
  407712:	sbb    ebx,0x28a0
  407718:	mov    DWORD PTR [ebp-0x8],eax
  40771b:	xor    eax,0x6e91
  407720:	mov    eax,DWORD PTR [ebp-0xc]
  407723:	neg    ebx
  407725:	xor    eax,esi
  407727:	and    DWORD PTR ds:0x429004,0x0
  407731:	jmp    0x407743
  407736:	mov    ebx,DWORD PTR ds:0x429004
  40773c:	inc    ebx
  40773d:	mov    DWORD PTR ds:0x429004,ebx
  407743:	cmp    DWORD PTR ds:0x429004,0x17
  40774a:	jae    0x40776d
  407750:	cmp    DWORD PTR ds:0x429004,0x22
  407757:	jne    0x407768
  40775d:	push   0x42d014
  407762:	call   DWORD PTR ds:0x42ec8b
  407768:	jmp    0x407736
  40776d:	add    eax,edi
  40776f:	mov    DWORD PTR [ebp-0x2c],eax
  407772:	mov    eax,DWORD PTR [ebp-0x4]
  407775:	adc    ebx,DWORD PTR ds:0x42c01c
  40777b:	xor    eax,esi
  40777d:	add    eax,edi
  40777f:	sbb    DWORD PTR ds:0x42c008,edi
  407785:	mov    DWORD PTR [ebp-0x38],eax
  407788:	and    DWORD PTR ds:0x42a000,0x0
  407792:	jmp    0x4077a2
  407797:	mov    eax,ds:0x42a000
  40779c:	inc    eax
  40779d:	mov    ds:0x42a000,eax
  4077a2:	cmp    DWORD PTR ds:0x42a000,0x1d
  4077a9:	jae    0x4077fc
  4077af:	cmp    DWORD PTR ds:0x42a000,0xc
  4077b6:	jne    0x4077d3
  4077bc:	push   0x27ff
  4077c1:	push   0x1
  4077c3:	push   0x42a000
  4077c8:	push   0x69ee
  4077cd:	call   DWORD PTR ds:0x42ec8f
  4077d3:	cmp    DWORD PTR ds:0x42a000,0xb
  4077da:	jne    0x4077eb
  4077e0:	mov    eax,ds:0x42a000
  4077e5:	inc    eax
  4077e6:	mov    ds:0x42a000,eax
  4077eb:	jmp    0x407797
  4077f0:	mov    ebx,DWORD PTR ds:0x42a004
  4077f6:	sbb    DWORD PTR ds:0x429004,ebx
  4077fc:	mov    ebx,DWORD PTR [ebp-0x4]
  4077ff:	xor    ebx,esi
  407801:	sbb    DWORD PTR ds:0x42900c,ebx
  407807:	add    ebx,edi
  407809:	mov    eax,DWORD PTR [ebp-0x2c]
  40780c:	add    DWORD PTR ds:0x42d004,0x19e2
  407816:	sub    eax,edi
  407818:	lea    ecx,[ebx-0x3272e0]
  40781e:	add    DWORD PTR ds:0x42a01c,0x7b3b
  407828:	xor    eax,esi
  40782a:	xor    DWORD PTR ds:0x42c01c,0x2532
  407834:	xor    ecx,esi
  407836:	mov    DWORD PTR ds:0x42b014,0x5b4d
  407840:	cmp    ecx,eax
  407842:	mov    DWORD PTR ds:0x42b008,0x5311
  40784c:	je     0x409eee
  407852:	mov    eax,ds:0x418f51
  407857:	mov    eax,DWORD PTR [eax]
  407859:	adc    DWORD PTR ds:0x429018,eax
  40785f:	mov    eax,DWORD PTR [ebp-0x4]
  407862:	adc    DWORD PTR ds:0x42d008,0x42a004
  40786c:	xor    eax,esi
  40786e:	adc    DWORD PTR ds:0x42a008,0x6af5
  407878:	add    eax,edi
  40787a:	cmp    ebx,eax
  40787c:	mov    DWORD PTR ds:0x42b008,0x1a7e
  407886:	jne    0x407b46
  40788c:	sub    DWORD PTR ds:0x42c008,0x42b00c
  407896:	push   DWORD PTR [ebp+0x8]
  407899:	xor    DWORD PTR ds:0x42c01c,0x42a018
  4078a3:	call   0x40514a
  4078a8:	mov    DWORD PTR ds:0x42a00c,0x1b
  4078b2:	cmp    DWORD PTR ds:0x42a00c,0x0
  4078b9:	je     0x407906
  4078bf:	cmp    DWORD PTR ds:0x42a00c,0xa
  4078c6:	jne    0x4078d2
  4078cc:	call   DWORD PTR ds:0x42ec93
  4078d2:	cmp    DWORD PTR ds:0x42a00c,0xb
  4078d9:	jne    0x4078ee
  4078df:	xor    ecx,ecx
  4078e1:	xor    ecx,DWORD PTR ds:0x42a00c
  4078e7:	dec    ecx
  4078e8:	mov    DWORD PTR ds:0x42a00c,ecx
  4078ee:	mov    ecx,DWORD PTR ds:0x42a00c
  4078f4:	dec    ecx
  4078f5:	mov    DWORD PTR ds:0x42a00c,ecx
  4078fb:	jmp    0x4078b2
  407900:	or     ecx,0x1d45
  407906:	mov    DWORD PTR [ebp-0x14],eax
  407909:	mov    eax,DWORD PTR [ebp-0x4]
  40790c:	mov    ecx,DWORD PTR [ebp-0x14]
  40790f:	xor    eax,esi
  407911:	dec    DWORD PTR ds:0x42901c
  407917:	add    eax,edi
  407919:	cmp    ecx,eax
  40791b:	je     0x40c2de
  407921:	and    DWORD PTR ds:0x42c000,0x7708
  40792b:	push   DWORD PTR [ebp-0x14]
  40792e:	push   DWORD PTR [ebp+0x8]
  407931:	xor    DWORD PTR ds:0x42a018,0x429008
  40793b:	call   0x40f0e2
  407940:	mov    DWORD PTR [ebp-0x14],eax
  407943:	and    DWORD PTR ds:0x429018,0x0
  40794d:	mov    eax,ds:0x429018
  407952:	inc    eax
  407953:	mov    ds:0x429018,eax
  407958:	cmp    DWORD PTR ds:0x429018,0x1e
  40795f:	jne    0x407987
  407965:	push   0x6c13
  40796a:	push   0x42d014
  40796f:	push   DWORD PTR [ebp-0x1c]
  407972:	push   0x4b90
  407977:	push   0x1e8a
  40797c:	push   0x4e24
  407981:	call   DWORD PTR ds:0x42ec97
  407987:	cmp    DWORD PTR ds:0x429018,0x14
  40798e:	jb     0x40794d
  407994:	mov    eax,DWORD PTR [ebp-0x4]
  407997:	mov    ecx,DWORD PTR [ebp-0x14]
  40799a:	xor    eax,esi
  40799c:	add    eax,edi
  40799e:	cmp    ecx,eax
  4079a0:	je     0x40c2de
  4079a6:	mov    DWORD PTR ds:0x42a008,0x19
  4079b0:	cmp    DWORD PTR ds:0x42a008,0x0
  4079b7:	je     0x4079e6
  4079bd:	cmp    DWORD PTR ds:0x42a008,0x24
  4079c4:	jne    0x4079d0
  4079ca:	call   DWORD PTR ds:0x42ec9b
  4079d0:	mov    eax,ds:0x42a008
  4079d5:	dec    eax
  4079d6:	mov    ds:0x42a008,eax
  4079db:	jmp    0x4079b0
  4079e0:	or     ecx,DWORD PTR ds:0x42b00c
  4079e6:	mov    eax,DWORD PTR [ebp-0x14]
  4079e9:	and    DWORD PTR ds:0x429000,0x0
  4079f3:	jmp    0x407a07
  4079f8:	xor    ecx,ecx
  4079fa:	or     ecx,DWORD PTR ds:0x429000
  407a00:	inc    ecx
  407a01:	mov    DWORD PTR ds:0x429000,ecx
  407a07:	cmp    DWORD PTR ds:0x429000,0x14
  407a0e:	jae    0x407a3d
  407a14:	cmp    DWORD PTR ds:0x429000,0x18
  407a1b:	jne    0x407a32
  407a21:	push   DWORD PTR [ebp-0x18]
  407a24:	push   0x42d000
  407a29:	push   DWORD PTR [ebp-0x1c]
  407a2c:	call   DWORD PTR ds:0x42ec9f
  407a32:	jmp    0x4079f8
  407a37:	xor    DWORD PTR ds:0x42b00c,ecx
  407a3d:	mov    eax,DWORD PTR [eax+0x18]
  407a40:	mov    DWORD PTR [ebp-0x2c],eax
  407a43:	mov    ecx,DWORD PTR ds:0x418f4d
  407a49:	mov    eax,ds:0x418f65
  407a4e:	sub    eax,ecx
  407a50:	and    ecx,DWORD PTR [ecx+eax*1]
  407a53:	mov    eax,DWORD PTR [ebp-0x14]
  407a56:	mov    ecx,DWORD PTR [ebp+0x8]
  407a59:	add    ecx,DWORD PTR [eax+0x20]
  407a5c:	mov    DWORD PTR ds:0x429014,0x11
  407a66:	cmp    DWORD PTR ds:0x429014,0x0
  407a6d:	je     0x407ac8
  407a73:	cmp    DWORD PTR ds:0x429014,0x9
  407a7a:	jne    0x407a93
  407a80:	push   0x42e127
  407a85:	push   0x42e111
  407a8a:	push   DWORD PTR [ebp-0x20]
  407a8d:	call   DWORD PTR ds:0x42eca7
  407a93:	cmp    DWORD PTR ds:0x429014,0xa
  407a9a:	jne    0x407aab
  407aa0:	mov    eax,ds:0x429014
  407aa5:	dec    eax
  407aa6:	mov    ds:0x429014,eax
  407aab:	xor    eax,eax
  407aad:	or     eax,DWORD PTR ds:0x429014
  407ab3:	dec    eax
  407ab4:	mov    ds:0x429014,eax
  407ab9:	jmp    0x407a66
  407abe:	and    DWORD PTR ds:0x42d000,0x2b86
  407ac8:	mov    DWORD PTR [ebp-0x34],ecx
  407acb:	xor    DWORD PTR ds:0x42a00c,edx
  407ad1:	mov    eax,DWORD PTR [ebp-0x14]
  407ad4:	and    DWORD PTR ds:0x429018,0x0
  407ade:	xor    ecx,ecx
  407ae0:	or     ecx,DWORD PTR ds:0x429018
  407ae6:	inc    ecx
  407ae7:	mov    DWORD PTR ds:0x429018,ecx
  407aed:	cmp    DWORD PTR ds:0x429018,0xa
  407af4:	jne    0x407b05
  407afa:	push   0x42e139
  407aff:	call   DWORD PTR ds:0x42ecab
  407b05:	cmp    DWORD PTR ds:0x429018,0x9
  407b0c:	jne    0x407b1f
  407b12:	mov    ecx,DWORD PTR ds:0x429018
  407b18:	inc    ecx
  407b19:	mov    DWORD PTR ds:0x429018,ecx
  407b1f:	cmp    DWORD PTR ds:0x429018,0x1e
  407b26:	jb     0x407ade
  407b2c:	mov    ecx,DWORD PTR [ebp+0x8]
  407b2f:	add    ecx,DWORD PTR [eax+0x24]
  407b32:	mov    DWORD PTR [ebp-0x3c],ecx
  407b35:	mov    eax,DWORD PTR [ebp-0x14]
  407b38:	mov    ecx,DWORD PTR [ebp+0x8]
  407b3b:	add    ecx,DWORD PTR [eax+0x1c]
  407b3e:	mov    DWORD PTR [ebp-0x14],ecx
  407b41:	jmp    0x409f21
  407b46:	mov    eax,DWORD PTR [ebp-0x34]
  407b49:	mov    ecx,DWORD PTR [ebp+0x8]
  407b4c:	add    ecx,DWORD PTR [eax+ebx*4]
  407b4f:	mov    DWORD PTR [ebp-0x30],ecx
  407b52:	mov    eax,DWORD PTR [ebp-0x4]
  407b55:	jmp    0x409eda
  407b5a:	icebp  
  407b5b:	pop    ebx
  407b5c:	call   DWORD PTR [edx-0x4408697d]
  407b62:	das    
  407b63:	sbb    DWORD PTR [eax],ecx
  407b65:	mov    bl,0x33
  407b67:	lods   al,BYTE PTR ds:[esi]
  407b68:	stos   DWORD PTR es:[edi],eax
  407b69:	xchg   esi,eax
  407b6a:	stos   BYTE PTR es:[edi],al
  407b6b:	cmp    al,0x7a
  407b6d:	jp     0x407b71
  407b6f:	pop    edi
  407b70:	jp     0x407bec
  407b72:	adc    ecx,DWORD PTR ds:0x49b187f9
  407b78:	xchg   edx,eax
  407b79:	inc    esi
  407b7a:	cdq    
  407b7b:	enter  0x1376,0x46
  407b7f:	fidivr WORD PTR [esi-0x114865c2]
  407b85:	mov    edx,0x66e60680
  407b8a:	and    BYTE PTR [ebp+0x57],bh
  407b8d:	xchg   ebx,eax
  407b8e:	arpl   cx,di
  407b90:	mov    eax,ds:0xa5cf0a71
  407b95:	jmp    0xad33:0x4bf4ae75
  407b9c:	jbe    0x407bb1
  407b9e:	adc    BYTE PTR [ecx-0x125d7a09],0x56
  407ba5:	cld    
  407ba6:	xlat   BYTE PTR ds:[ebx]
  407ba7:	enter  0xe179,0x44
  407bab:	cmp    eax,0xfaae234b
  407bb0:	mov    esi,0x2a6df802
  407bb5:	push   eax
  407bb6:	(bad)  
  407bb8:	jnp    0x407b5d
  407bba:	mov    bh,0x78
  407bbc:	mov    al,ds:0xb466e3d
  407bc1:	push   cs
  407bc2:	outs   dx,BYTE PTR ds:[esi]
  407bc3:	out    0x3f,eax
  407bc5:	or     BYTE PTR [eax],dh
  407bc7:	retf   0xd1c8
  407bca:	add    eax,DWORD PTR [eax+0x287f327b]
  407bd0:	cli    
  407bd1:	test   eax,0x64a54e5d
  407bd6:	sar    DWORD PTR [esi-0x5561b2d1],0xf9
  407bdd:	int3   
  407bde:	dec    ebp
  407bdf:	in     al,dx
  407be0:	inc    eax
  407be1:	jne    0x407c23
  407be3:	push   ss
  407be4:	and    al,0xb1
  407be6:	repnz call 0xbe68:0x6dd82a38
  407bee:	cmp    dl,BYTE PTR [eax+ebx*1]
  407bf1:	stos   BYTE PTR es:[edi],al
  407bf2:	mov    dl,0xd4
  407bf4:	lods   eax,DWORD PTR ds:[esi]
  407bf5:	(bad)  
  407bf6:	jo     0x407beb
  407bf8:	push   esp
  407bf9:	punpckhbw mm1,QWORD PTR [ebp-0x60]
  407bfd:	aam    0xcf
  407bff:	sti    
  407c00:	jl     0x407c64
  407c02:	hlt    
  407c03:	pop    esp
  407c04:	ins    BYTE PTR es:[edi],dx
  407c05:	jecxz  0x407bb2
  407c07:	jmp    0x407c35
  407c09:	mov    ebx,0x18337c5b
  407c0e:	or     dh,BYTE PTR ds:0xb1e5abf2
  407c14:	cdq    
  407c15:	ins    DWORD PTR es:[edi],dx
  407c16:	lahf   
  407c17:	iret   
  407c18:	enter  0x7702,0x2e
  407c1c:	push   ecx
  407c1d:	(bad)  
  407c1e:	lods   al,BYTE PTR ds:[esi]
  407c1f:	push   ebx
  407c20:	imul   ebx,DWORD PTR [ebx],0x2d5bbe1b
  407c26:	ss push eax
  407c28:	imul   esp,esi,0x86af3853
  407c2e:	push   0x4acd34b1
  407c33:	es popa 
  407c35:	cli    
  407c36:	ss push ecx
  407c38:	push   eax
  407c39:	adc    eax,DWORD PTR [esi+0x3f23bf58]
  407c3f:	or     DWORD PTR [bx+0x87d],ebp
  407c44:	cdq    
  407c45:	dec    edx
  407c46:	jmp    FWORD PTR [eax+0x61b2bc76]
  407c4c:	mov    ebx,0xe5845869
  407c51:	call   0xe0978b3e
  407c56:	or     ecx,esp
  407c58:	enter  0xed11,0xf4
  407c5c:	jmp    0x17035f62
  407c61:	push   esp
  407c62:	mov    WORD PTR [eax-0x63da5cce],?
  407c68:	xlat   BYTE PTR ds:[ebx]
  407c69:	fiadd  WORD PTR ss:[edx+0x68e457bf]
  407c70:	ret    0x75c8
  407c73:	sti    
  407c74:	aad    0x88
  407c76:	nop
  407c77:	dec    edi
  407c78:	mov    al,ds:0x16b56b9a
  407c7d:	push   0xffffff9e
  407c7f:	xchg   ebx,eax
  407c80:	gs sbb al,0xb5
  407c83:	push   esp
  407c84:	(bad)  
  407c85:	jbe    0x407cb7
  407c87:	ficomp DWORD PTR [ecx+0x14b82fd0]
  407c8d:	mov    esi,0xd88b41ac
  407c92:	mov    cs,WORD PTR [edx+eax*8]
  407c95:	add    DWORD PTR ds:0x98ba1c56,esi
  407c9b:	mov    dl,0x13
  407c9d:	lock jae 0x407cbc
  407ca0:	adc    dh,BYTE PTR [esi-0x4127a59a]
  407ca6:	pop    eax
  407ca7:	xchg   ecx,eax
  407ca8:	fxtract 
  407caa:	sar    DWORD PTR [esi],cl
  407cac:	rcl    DWORD PTR [edx+ebp*8],0xc8
  407cb0:	or     eax,0x69b1310e
  407cb5:	pusha  
  407cb6:	out    dx,al
  407cb7:	cmp    DWORD PTR [edi+0x2b],edx
  407cba:	leave  
  407cbb:	and    ah,dh
  407cbd:	addr16 jb 0x407c8a
  407cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc1:	cmp    al,0x8b
  407cc3:	xor    DWORD PTR [ebx+0x77],0xe95ded13
  407cca:	mov    ebx,DWORD PTR [ebx-0x4977d4c]
  407cd0:	loop   0x407ced
  407cd2:	mov    dh,0xa6
  407cd4:	sbb    al,0x0
  407cd6:	pushf  
  407cd7:	fimul  DWORD PTR [edx+0x7c1c0f22]
  407cdd:	jae    0x407cba
  407cdf:	push   esp
  407ce0:	(bad)  
  407ce2:	dec    edi
  407ce3:	data16 hlt 
  407ce5:	cmc    
  407ce6:	addr16 sti 
  407ce8:	xchg   edi,eax
  407ce9:	pop    ebp
  407cea:	mov    dh,0x44
  407cec:	jno    0x407cbd
  407cee:	in     eax,0xd
  407cf0:	xor    eax,0x341bef2b
  407cf5:	sahf   
  407cf6:	shl    DWORD PTR [edi+eax*4-0x16],cl
  407cfa:	inc    esi
  407cfb:	adc    dl,BYTE PTR [edi]
  407cfd:	inc    edi
  407cfe:	and    al,0xb5
  407d00:	jge    0x407d6d
  407d02:	pusha  
  407d03:	repnz mov bh,0xc3
  407d06:	clc    
  407d07:	add    al,0x92
  407d09:	sar    bl,cl
  407d0b:	mov    WORD PTR [ebx+esi*1+0x49],?
  407d0f:	cli    
  407d10:	mov    ch,0xc6
  407d12:	push   ebp
  407d13:	cs jecxz 0x407d26
  407d16:	push   0x64
  407d18:	in     al,0xd
  407d1a:	add    ebx,DWORD PTR [esi]
  407d1c:	addr16 inc eax
  407d1e:	out    0x73,al
  407d20:	sti    
  407d21:	push   ebp
  407d22:	sbb    al,BYTE PTR ds:0x8a2387a9
  407d28:	mov    bh,bh
  407d2a:	popa   
  407d2b:	jecxz  0x407cb8
  407d2d:	xor    ebp,ebp
  407d2f:	adc    bl,cl
  407d31:	xor    edi,DWORD PTR [eax+edi*1-0x106977d7]
  407d38:	sub    DWORD PTR [ebp-0x19],esi
  407d3b:	sub    eax,0xa72dfc6f
  407d40:	pop    ecx
  407d41:	aad    0xd1
  407d43:	repnz ss repz std 
  407d47:	(bad)  
  407d48:	pop    ds
  407d49:	repnz (bad) 
  407d4b:	out    dx,eax
  407d4c:	xor    DWORD PTR [edi-0x31c3f793],edx
  407d52:	add    eax,0x9c40e57e
  407d57:	or     DWORD PTR [esi+0x4ff1e85c],esi
  407d5d:	mov    ds:0x290c2d23,eax
  407d62:	adc    eax,0x62d74393
  407d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d68:	mov    ds:0xe4b071a6,al
  407d6d:	(bad)  
  407d6e:	sahf   
  407d6f:	(bad)  
  407d71:	jbe    0x407db3
  407d73:	mov    edx,0x5db4d247
  407d78:	jno    0x407dc1
  407d7a:	add    DWORD PTR [edx-0x40],0x3a55da4f
  407d81:	inc    eax
  407d82:	dec    ebp
  407d83:	shl    DWORD PTR ds:0x5828454f,1
  407d89:	jo     0x407db9
  407d8b:	push   eax
  407d8c:	or     DWORD PTR fs:[edx],ebx
  407d8f:	or     al,0x1b
  407d91:	push   ebx
  407d92:	stc    
  407d93:	sbb    BYTE PTR [ebx-0x3],ah
  407d96:	and    DWORD PTR [ecx-0x29],ecx
  407d99:	loopne 0x407dd3
  407d9b:	pop    edi
  407d9c:	pop    ebp
  407d9d:	test   BYTE PTR ds:0x21544a4,bh
  407da3:	adc    DWORD PTR [esi-0x77],esp
  407da6:	jbe    0x407e0c
  407da8:	mov    eax,ds:0x221fdf0e
  407dad:	mov    al,ds:0xc06fff4
  407db2:	pop    ebx
  407db3:	mov    ds:0x782c574a,al
  407db8:	das    
  407db9:	leave  
  407dba:	add    BYTE PTR fs:[ecx-0x28],0xba
  407dbf:	mov    ah,0x47
  407dc1:	rol    BYTE PTR [edx+esi*2],1
  407dc4:	sbb    eax,0x52b90b84
  407dc9:	(bad)  
  407dca:	repz push cs
  407dcc:	pop    ds
  407dcd:	mov    al,ds:0x6ee1c9f3
  407dd2:	push   edx
  407dd3:	pushf  
  407dd4:	sbb    ah,BYTE PTR [edx+edi*4-0x971b701]
  407ddb:	aad    0xd2
  407ddd:	out    dx,al
  407dde:	cmp    al,0xb
  407de0:	adc    al,0xb5
  407de2:	mov    ecx,0xde12a4fe
  407de7:	or     BYTE PTR [esi+0x1b],dl
  407dea:	jns    0x407e60
  407dec:	repz sbb ecx,DWORD PTR cs:[edx]
  407df0:	push   ecx
  407df1:	jmp    FWORD PTR [ebx-0x75]
  407df4:	int    0xea
  407df6:	mov    ah,0x3b
  407df8:	(bad)  
  407df9:	fisubr WORD PTR [ebx+esi*4-0x3cae88d4]
  407e00:	aaa    
  407e01:	mov    al,ds:0xdab71f4c
  407e06:	pop    eax
  407e07:	sub    al,0x6b
  407e09:	das    
  407e0a:	shl    DWORD PTR [ebp-0x26],1
  407e0d:	add    esi,ebp
  407e0f:	sti    
  407e10:	mov    dh,0xc2
  407e12:	scas   al,BYTE PTR es:[edi]
  407e13:	or     BYTE PTR [eax],ch
  407e15:	outs   dx,DWORD PTR ds:[esi]
  407e16:	and    ch,dl
  407e18:	jbe    0x407e3c
  407e1a:	arpl   WORD PTR ds:0x567dba0,ax
  407e20:	xor    bl,dh
  407e22:	mov    dl,0xb3
  407e24:	xor    bl,dh
  407e26:	push   edi
  407e27:	in     eax,dx
  407e28:	and    esp,DWORD PTR [edi-0x719a8637]
  407e2e:	inc    edi
  407e2f:	fcomp  st(2)
  407e31:	mov    bh,0xe5
  407e33:	gs popf 
  407e35:	and    bl,BYTE PTR [edi]
  407e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e38:	and    al,0xf0
  407e3a:	add    cl,BYTE PTR [ecx+edx*2+0x34]
  407e3e:	sbb    edx,ebx
  407e40:	dec    esi
  407e41:	mov    BYTE PTR [edi],bh
  407e43:	ds or  al,0x28
  407e46:	pop    ss
  407e47:	aaa    
  407e48:	sub    DWORD PTR [ebx-0x64d21e78],edi
  407e4e:	stos   DWORD PTR es:[edi],eax
  407e4f:	or     bh,BYTE PTR [edx-0x7c]
  407e52:	in     eax,dx
  407e53:	stc    
  407e54:	pop    ss
  407e55:	sahf   
  407e56:	sbb    esp,0x1e1221e6
  407e5c:	xor    DWORD PTR [ecx],eax
  407e5e:	ja     0x407e32
  407e60:	(bad)  
  407e61:	jno    0x407e34
  407e63:	dec    edx
  407e64:	cwde   
  407e65:	out    dx,al
  407e66:	add    al,0x37
  407e68:	imul   edi,DWORD PTR [ebx-0x48],0x5f4306f6
  407e6f:	jle    0x407e8d
  407e71:	gs sub ebp,0x1d
  407e75:	das    
  407e76:	cli    
  407e77:	cld    
  407e78:	sbb    BYTE PTR [edi-0x3c8670f2],al
  407e7e:	ja     0x407ea8
  407e80:	clc    
  407e81:	retf   
  407e82:	mov    ecx,0x2badf79b
  407e87:	sbb    cl,ah
  407e89:	mov    BYTE PTR [ebx],al
  407e8b:	inc    edi
  407e8c:	ja     0x407f00
  407e8e:	cld    
  407e8f:	push   ds
  407e90:	lds    eax,FWORD PTR [ebx+0x3b125682]
  407e96:	xor    BYTE PTR [ecx+0x36],0xa7
  407e9a:	mov    fs:0x5d0a27f8,eax
  407ea0:	ret    0x5682
  407ea3:	inc    esi
  407ea4:	in     eax,0x67
  407ea6:	hlt    
  407ea7:	dec    ebp
  407ea8:	add    BYTE PTR [eax-0x53],al
  407eab:	jbe    0x407ee1
  407ead:	pushf  
  407eae:	and    BYTE PTR [edx-0x5a],bh
  407eb1:	(bad)
  407eb4:	pop    ebp
  407eb5:	push   ss
  407eb6:	idiv   BYTE PTR [esi]
  407eb8:	mov    esi,0xf12bbc33
  407ebd:	push   cs
  407ebe:	mov    ch,0xe5
  407ec0:	push   es
  407ec1:	out    dx,al
  407ec2:	test   DWORD PTR [ecx+0x4ef2ad5b],ebx
  407ec8:	shl    cl,1
  407eca:	push   0x3ccfc848
  407ecf:	jo     0x407f0d
  407ed1:	push   ecx
  407ed2:	or     cl,bh
  407ed4:	push   eax
  407ed5:	les    esp,FWORD PTR [ebx-0x7d]
  407ed8:	inc    ecx
  407ed9:	dec    eax
  407eda:	push   ecx
  407edb:	stos   BYTE PTR es:[edi],al
  407edc:	inc    edi
  407edd:	mov    ch,0x35
  407edf:	adc    ah,BYTE PTR [edx-0x6863bef4]
  407ee5:	and    edx,ecx
  407ee7:	icebp  
  407ee8:	dec    esi
  407ee9:	jae    0x407f34
  407eeb:	inc    ebx
  407eec:	mov    BYTE PTR [ebx-0x17360067],cl
  407ef2:	pushf  
  407ef3:	jmp    0x492d:0xe93564ba
  407efa:	ins    DWORD PTR es:[edi],dx
  407efb:	das    
  407efc:	mov    ebp,0x3b9dc28e
  407f01:	(bad)
  407f04:	cmp    al,0x7d
  407f06:	jp     0x407eee
  407f08:	push   ecx
  407f09:	xchg   ah,bl
  407f0b:	sub    ch,BYTE PTR [ecx]
  407f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f0e:	bound  ecx,QWORD PTR [ebp+0x1b]
  407f11:	dec    ebp
  407f12:	fs and al,0xa7
  407f15:	xchg   ecx,eax
  407f16:	adc    ecx,DWORD PTR [edi+0x7c]
  407f19:	icebp  
  407f1a:	sbb    edx,DWORD PTR [ebx+0x7a]
  407f1d:	xchg   esi,eax
  407f1e:	sbb    bh,BYTE PTR [edi+ebx*8-0x3657cc13]
  407f25:	and    eax,0x3f43bcd0
  407f2a:	out    0x77,eax
  407f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f2d:	push   ebp
  407f2e:	mov    DWORD PTR [ecx-0x6944b243],ebx
  407f34:	iret   
  407f35:	mov    ds:0xb38a93db,al
  407f3a:	in     al,0x9f
  407f3c:	jae    0x407f52
  407f3e:	int    0x24
  407f40:	push   0x3a6207e5
  407f45:	ds mov dl,0xdf
  407f48:	mov    eax,ds:0x82193da2
  407f4d:	xor    eax,edx
  407f4f:	dec    edi
  407f50:	xchg   ebp,eax
  407f51:	or     ebx,eax
  407f53:	lahf   
  407f54:	or     al,0xa8
  407f56:	xchg   edi,eax
  407f57:	repnz sbb dl,dh
  407f5a:	jl     0x407f9d
  407f5c:	fadd   QWORD PTR [esi+0x2e]
  407f5f:	sub    DWORD PTR ds:0x50da0791,esp
  407f65:	retf   0x74dc
  407f68:	outs   dx,BYTE PTR ds:[esi]
  407f69:	xor    ah,BYTE PTR [ecx]
  407f6b:	jns    0x407f3c
  407f6d:	cmc    
  407f6e:	int    0xe4
  407f70:	int    0xda
  407f72:	lods   eax,DWORD PTR ds:[esi]
  407f73:	xor    eax,0x546890c5
  407f78:	mov    ?,WORD PTR [eax-0x37]
  407f7b:	mov    WORD PTR [ebx-0x65],ss
  407f7e:	fidivr WORD PTR [ebx+0x2f4b0980]
  407f84:	sahf   
  407f85:	inc    edi
  407f86:	hlt    
  407f87:	pop    ebp
  407f88:	inc    ebp
  407f89:	or     eax,0xbde16359
  407f8e:	loopne 0x407ffd
  407f90:	or     DWORD PTR [esi-0x48c4f3e1],ebp
  407f96:	outs   dx,BYTE PTR ds:[esi]
  407f97:	add    BYTE PTR [eax-0x32b9790a],0x24
  407f9e:	cdq    
  407f9f:	sbb    DWORD PTR [ecx],0x49
  407fa2:	neg    DWORD PTR [ecx+ebp*2]
  407fa5:	call   0xcb:0x7d708b70
  407fac:	push   es
  407fad:	xchg   esi,eax
  407fae:	in     eax,dx
  407faf:	addr16 dec edx
  407fb1:	or     BYTE PTR [esi-0x48],0xb
  407fb5:	(bad)  
  407fb6:	adc    DWORD PTR [ebp+ebp*2-0x20],esp
  407fba:	rcl    BYTE PTR [ecx+0x40],cl
  407fbd:	sbb    al,0x8b
  407fbf:	outs   dx,BYTE PTR ds:[esi]
  407fc0:	cmp    BYTE PTR [esi-0x1b4cb0e],ch
  407fc6:	push   esi
  407fc7:	ror    BYTE PTR [edi-0x72],1
  407fca:	pushf  
  407fcb:	push   eax
  407fcc:	aad    0x67
  407fce:	(bad)  
  407fd0:	cdq    
  407fd1:	mov    dh,0x2f
  407fd3:	jmp    0x408031
  407fd5:	idiv   DWORD PTR [esi]
  407fd7:	(bad)  
  407fd8:	and    edi,DWORD PTR [esi+0x6a]
  407fdb:	jp     0x40800b
  407fdd:	mov    eax,ds:0x13458656
  407fe2:	push   0xffffffca
  407fe4:	mov    esp,0xb4750d0b
  407fe9:	in     al,dx
  407fea:	mov    al,0x49
  407fec:	outs   dx,DWORD PTR ds:[esi]
  407fed:	push   edi
  407fee:	mov    al,0xa2
  407ff0:	push   esp
  407ff1:	ins    DWORD PTR es:[edi],dx
  407ff2:	popf   
  407ff3:	lock mov eax,ds:0xdebfe286
  407ff9:	xor    BYTE PTR [ecx+0x355a5784],0x32
  408000:	xor    edx,ebx
  408002:	inc    eax
  408003:	(bad)  
  408004:	das    
  408005:	mov    eax,0x70cc4451
  40800a:	pop    ebp
  40800b:	jmp    0xb1a13345
  408010:	out    0x14,al
  408012:	mov    ds,WORD PTR [esp+eax*4-0x52]
  408016:	sbb    ecx,DWORD PTR [esi]
  408018:	cmp    al,0xa
  40801a:	sar    BYTE PTR [ebx+0x66],cl
  40801d:	repz bound esi,QWORD PTR [edi+0x28]
  408021:	push   edx
  408022:	mov    cl,0xe9
  408024:	test   eax,0xdb8b8b0b
  408029:	sbb    ch,BYTE PTR [edx]
  40802b:	jns    0x408019
  40802d:	inc    edx
  40802e:	sti    
  40802f:	jns    0x408008
  408031:	cmp    al,0xaa
  408033:	xchg   bh,bh
  408035:	dec    esp
  408036:	jmp    0x408058
  408038:	mov    esi,0xc73f82d7
  40803d:	int3   
  40803e:	xor    al,0x53
  408040:	ret    
  408041:	fmul   st,st(5)
  408043:	call   0x423f:0xf8020f82
  40804a:	out    0xe6,eax
  40804c:	add    al,0xe0
  40804e:	out    dx,eax
  40804f:	mov    al,0x70
  408051:	loop   0x407ffa
  408053:	sub    DWORD PTR [ecx+0x39fa805e],ecx
  408059:	pop    esi
  40805a:	icebp  
  40805b:	inc    ebp
  40805c:	dec    edx
  40805d:	loop   0x40807e
  40805f:	dec    edx
  408060:	and    dl,BYTE PTR [ecx]
  408062:	icebp  
  408063:	lods   al,BYTE PTR ds:[esi]
  408064:	push   eax
  408065:	stc    
  408066:	icebp  
  408067:	jnp    0x4080b1
  408069:	adc    eax,0xd8c3249
  40806e:	into   
  40806f:	sub    ecx,edi
  408071:	sbb    al,0xea
  408073:	pop    edx
  408074:	in     al,0x3a
  408076:	add    DWORD PTR [eax-0x5],esi
  408079:	lods   eax,DWORD PTR ds:[esi]
  40807a:	add    BYTE PTR [eax+0x59],0x73
  40807e:	xchg   DWORD PTR ds:[esi],edi
  408081:	cs fs leave 
  408084:	xor    al,0x53
  408086:	jl     0x40800a
  408088:	pusha  
  408089:	popa   
  40808a:	dec    eax
  40808b:	mov    WORD PTR [esi+0x5e],ss
  40808e:	and    eax,0xd91da652
  408093:	mov    dl,ch
  408095:	sahf   
  408096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408097:	xor    cl,BYTE PTR [ebx]
  408099:	xlat   BYTE PTR ds:[ebx]
  40809a:	jae    0x408117
  40809c:	pop    ss
  40809d:	jl     0x40810d
  40809f:	popf   
  4080a0:	jnp    0x4080f4
  4080a2:	push   esi
  4080a3:	push   es
  4080a4:	jo     0x40802f
  4080a6:	jb     0x408064
  4080a8:	outs   dx,BYTE PTR ds:[esi]
  4080a9:	pop    ebp
  4080aa:	pop    es
  4080ab:	sbb    BYTE PTR ds:0x311fb798,dh
  4080b1:	mov    eax,ds:0xffae3ba9
  4080b6:	mov    bh,0xac
  4080b8:	idiv   BYTE PTR [esi-0x148a5d0d]
  4080be:	xchg   ebp,eax
  4080bf:	and    edx,ecx
  4080c1:	(bad)
  4080c5:	jbe    0x4080d3
  4080c7:	test   BYTE PTR [edx+0x63d46c62],bl
  4080cd:	fiadd  WORD PTR [edx+0x51]
  4080d0:	jb     0x4080ae
  4080d2:	or     al,0xc3
  4080d4:	lds    eax,FWORD PTR ds:0x474f4da9
  4080da:	test   eax,0xb4ff14e6
  4080df:	jmp    0x2d1f:0x74bbce25
  4080e6:	xor    ebx,DWORD PTR [edi+0x27bca75f]
  4080ec:	ret    
  4080ed:	into   
  4080ee:	xor    DWORD PTR [esi+0x7b5ec14f],0x5c
  4080f5:	adc    bl,BYTE PTR [eax+0x6753c1a]
  4080fb:	or     edi,DWORD PTR [edx+0x27]
  4080fe:	shl    cl,cl
  408100:	add    BYTE PTR [ebx+0x395dabb0],0x5f
  408107:	jg     0x4080aa
  408109:	mov    esi,0x8769fe77
  40810e:	push   ebx
  40810f:	aam    0x7b
  408111:	pop    esp
  408112:	(bad)  
  408114:	add    ah,BYTE PTR [esi*1+0x38efb910]
  40811b:	enter  0x8d84,0x7b
  40811f:	xor    eax,0x3ba85c39
  408124:	jae    0x4080c0
  408126:	jbe    0x408171
  408128:	not    al
  40812a:	clc    
  40812b:	jne    0x408155
  40812d:	mov    ch,0x17
  40812f:	jl     0x408194
  408131:	(bad)  
  408133:	stos   BYTE PTR es:[edi],al
  408134:	mov    ds:0x768be10e,al
  408139:	(bad)  
  40813a:	out    0x35,al
  40813c:	dec    edx
  40813d:	sahf   
  40813e:	sub    al,0x4e
  408140:	push   edx
  408141:	add    esi,DWORD PTR [edi+0x51e5522d]
  408147:	into   
  408148:	push   eax
  408149:	lea    esi,[eax+0xf4dd14e]
  40814f:	mov    ds:0x41239a0c,eax
  408154:	sbb    eax,0x42de7bd4
  408159:	aaa    
  40815a:	jnp    0x4081b9
  40815c:	fabs   
  40815e:	stc    
  40815f:	dec    edi
  408160:	sub    al,0xa3
  408162:	sub    DWORD PTR [esi+ebx*8+0xa],0xc32ad8df
  40816a:	xlat   BYTE PTR ds:[ebx]
  40816b:	js     0x408183
  40816d:	and    BYTE PTR [eax+ebx*1-0x4e30f742],dh
  408174:	jbe    0x40818d
  408176:	stos   BYTE PTR es:[edi],al
  408177:	sub    eax,0x28206dbd
  40817c:	jae    0x40818b
  40817e:	out    dx,eax
  40817f:	push   ss
  408180:	jnp    0x40810e
  408182:	jnp    0x4081ea
  408184:	out    0x29,al
  408186:	loope  0x40811c
  408188:	push   ecx
  408189:	push   ss
  40818a:	add    DWORD PTR [ecx-0x40],eax
  40818d:	stos   BYTE PTR es:[edi],al
  40818e:	pusha  
  40818f:	out    dx,al
  408190:	xor    ebp,DWORD PTR [esi]
  408192:	adc    al,0xa
  408194:	retf   0xad73
  408197:	fld    QWORD PTR [esi-0x26]
  40819a:	loopne 0x4081eb
  40819c:	out    0xb2,eax
  40819e:	jae    0x408147
  4081a0:	and    ch,BYTE PTR [ebx*8-0x26ed7aa6]
  4081a7:	fwait
  4081a8:	jp     0x40813a
  4081aa:	cwde   
  4081ab:	clc    
  4081ac:	adc    dh,bl
  4081ae:	retf   0x9724
  4081b1:	ds and eax,0x2180ef99
  4081b7:	jge    0x408139
  4081b9:	push   edi
  4081ba:	pop    esi
  4081bb:	pop    edx
  4081bc:	cld    
  4081bd:	and    DWORD PTR [ecx],ebp
  4081bf:	lock out 0x8,al
  4081c2:	in     eax,dx
  4081c3:	push   eax
  4081c4:	imul   DWORD PTR [edi]
  4081c6:	in     al,0x2
  4081c8:	idiv   BYTE PTR ds:0xbc7089a8
  4081ce:	ficom  DWORD PTR [edi-0x13]
  4081d1:	xor    DWORD PTR [esi],esp
  4081d3:	rcr    BYTE PTR [ecx],0x24
  4081d6:	or     DWORD PTR [eax],0x3d3e3051
  4081dc:	and    al,0xde
  4081de:	or     eax,edx
  4081e0:	adc    al,0xed
  4081e2:	pop    edi
  4081e3:	mov    ecx,0x51b0eaac
  4081e8:	(bad)  
  4081e9:	mov    bh,0x28
  4081eb:	out    dx,eax
  4081ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ed:	(bad)  
  4081ee:	loope  0x408185
  4081f0:	xchg   ecx,eax
  4081f1:	ins    DWORD PTR es:[edi],dx
  4081f2:	jmp    0x7509de0b
  4081f7:	cwde   
  4081f8:	mov    ds:0xdc2d762d,eax
  4081fd:	iret   
  4081fe:	xchg   edx,eax
  4081ff:	data16 xor BYTE PTR [ebp-0x46],0x34
  408204:	hlt    
  408205:	imul   esp,DWORD PTR [edi-0x44c13ef0],0x74b6795a
  40820f:	jg     0x408290
  408211:	mov    al,cl
  408213:	sbb    BYTE PTR [esi],0x5d
  408216:	dec    esi
  408217:	in     eax,dx
  408218:	dec    esi
  408219:	sbb    BYTE PTR [ebx+esi*1-0x1c],bl
  40821d:	mov    ah,0x79
  40821f:	mov    ebp,0x6e18ed35
  408224:	mov    esp,0xebc38f94
  408229:	xor    al,0x4a
  40822b:	ja     0x4081ec
  40822d:	and    dl,ah
  40822f:	dec    edx
  408230:	shl    DWORD PTR [esi+0x2],0xea
  408234:	sub    BYTE PTR [ebp+esi*2+0x7b],dh
  408238:	rcl    BYTE PTR [ebx],0xf
  40823b:	imul   esi,DWORD PTR [eax-0x7b7897dd],0xc1259306
  408245:	je     0x408211
  408247:	inc    ecx
  408248:	jns    0x4081dc
  40824a:	jnp    0x4082b0
  40824c:	ret    0x4cd0
  40824f:	ds (bad) 
  408251:	cmp    eax,0x61e0cec7
  408256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408257:	(bad)  
  408258:	sub    cl,BYTE PTR [edx-0x73]
  40825b:	mov    bl,0x5f
  40825d:	repnz int3 
  40825f:	es leave 
  408261:	paddb  mm7,mm2
  408264:	aam    0x6c
  408266:	lahf   
  408267:	popf   
  408268:	loopne 0x408291
  40826a:	adc    al,0x3c
  40826c:	stc    
  40826d:	mov    ebp,0x1ada82fb
  408272:	cdq    
  408273:	xor    DWORD PTR [eax],ecx
  408275:	pop    es
  408276:	fnsave [edi-0x5170ad54]
  40827c:	jl     0x40821e
  40827e:	sar    DWORD PTR [edx],cl
  408280:	push   cs
  408281:	(bad)  
  408282:	(bad)  
  408283:	xor    BYTE PTR [ecx+0x5df1ade6],dl
  408289:	push   0xffffffe4
  40828b:	mov    ecx,0x352746d2
  408290:	mov    eax,ds:0x285b62f5
  408295:	jno    0x4082c8
  408297:	xchg   edx,eax
  408298:	(bad)  
  408299:	fadd   st(4),st
  40829b:	shl    edx,0x57
  40829e:	inc    eax
  40829f:	js     0x408241
  4082a1:	fsubr  DWORD PTR [esi-0x7e]
  4082a4:	mov    edi,DWORD PTR [edi+esi*2]
  4082a7:	xchg   DWORD PTR [ebp+esi*1-0x28],edi
  4082ab:	inc    eax
  4082ac:	mov    edi,0xb2db8469
  4082b1:	stos   BYTE PTR es:[edi],al
  4082b2:	cs add ecx,edi
  4082b5:	mov    eax,ds:0x15cfa40e
  4082ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082bc:	inc    esp
  4082bd:	xchg   BYTE PTR [ebx-0x3d],al
  4082c0:	fimul  WORD PTR [ebx]
  4082c2:	imul   esi,ecx,0xffffffd7
  4082c5:	mov    dh,0xed
  4082c7:	js     0x40832a
  4082c9:	aas    
  4082ca:	ja     0x40829c
  4082cc:	push   esi
  4082cd:	or     eax,0x4ec1fa12
  4082d2:	rcr    DWORD PTR [ecx],0x43
  4082d5:	shr    DWORD PTR [edi+0x3a],1
  4082d8:	inc    ecx
  4082d9:	(bad)  
  4082da:	jmp    0xfcd070bf
  4082df:	mov    ch,0x42
  4082e1:	jo     0x40832e
  4082e3:	ss int 0x6b
  4082e6:	inc    ecx
  4082e7:	add    BYTE PTR [eax],ch
  4082e9:	mov    dl,0xff
  4082eb:	iret   
  4082ec:	call   0x834d4c41
  4082f1:	(bad)  
  4082f2:	ds inc ecx
  4082f4:	push   cs
  4082f5:	inc    ebx
  4082f6:	xchg   edx,eax
  4082f7:	adc    bh,BYTE PTR [edi-0x237faecc]
  4082fd:	pop    eax
  4082fe:	loope  0x408351
  408300:	mov    cl,0xe4
  408302:	push   0xffffff9f
  408304:	(bad)  
  408306:	dec    ebx
  408307:	call   0x6b722a63
  40830c:	daa    
  40830d:	inc    eax
  40830e:	sub    BYTE PTR [edx],dh
  408310:	xchg   esi,eax
  408311:	or     DWORD PTR [ebx],ecx
  408313:	int3   
  408314:	lea    eax,[ebx+0x5d]
  408317:	xor    BYTE PTR [edi],0x31
  40831a:	jo     0x408397
  40831c:	mov    ch,0xa0
  40831e:	mov    dh,0x67
  408320:	fldl2t 
  408322:	popf   
  408323:	jne    0x408322
  408325:	int    0xa2
  408327:	dec    esi
  408328:	inc    esi
  408329:	loope  0x4082d3
  40832b:	pop    edx
  40832c:	xchg   ecx,eax
  40832d:	cmp    BYTE PTR [edi],ah
  40832f:	out    dx,eax
  408330:	ins    DWORD PTR es:[edi],dx
  408331:	mov    eax,ds:0xaf2e1342
  408336:	cmp    ah,BYTE PTR [ecx]
  408338:	les    esi,FWORD PTR [edi+edi*1-0x2a]
  40833c:	or     al,0x8
  40833e:	mov    ds,WORD PTR [ebp-0x26ee121e]
  408344:	jae    0x408346
  408346:	(bad)  
  408347:	ficomp DWORD PTR [eax+0x671195d6]
  40834d:	mov    ch,0xa6
  40834f:	pop    esp
  408350:	retf   
  408351:	inc    esp
  408352:	cs mov al,0x1c
  408355:	stos   DWORD PTR es:[edi],eax
  408356:	faddp  st(4),st
  408358:	out    dx,al
  408359:	fadd   DWORD PTR [esi]
  40835b:	test   BYTE PTR [eax+0x229d609b],dh
  408361:	add    BYTE PTR [ebx],0xd7
  408364:	fadd   QWORD PTR [esi]
  408366:	pop    ebx
  408367:	push   0x6f7007e2
  40836c:	lods   al,BYTE PTR ds:[esi]
  40836d:	add    eax,0x8075b773
  408372:	pop    es
  408373:	mov    dh,0xf4
  408375:	(bad)  
  408377:	xchg   edx,eax
  408378:	dec    ebp
  408379:	cli    
  40837a:	pop    ss
  40837b:	inc    esp
  40837c:	test   dl,bh
  40837e:	inc    esi
  40837f:	popa   
  408380:	pop    esp
  408381:	call   0xc56c6997
  408386:	sub    al,0xa
  408388:	fs cdq 
  40838a:	test   DWORD PTR [ebx+eiz*1],esp
  40838d:	mov    ch,BYTE PTR [ecx-0x5d]
  408390:	inc    ah
  408392:	mov    ebx,edi
  408394:	loop   0x4083aa
  408396:	xchg   edx,eax
  408397:	in     eax,dx
  408398:	pop    ss
  408399:	fcomp  DWORD PTR [ebp-0x231666b4]
  40839f:	or     ebp,DWORD PTR [edi*8+0x2821c652]
  4083a6:	aas    
  4083a7:	mov    eax,0xe52c1acd
  4083ac:	mov    ah,0x91
  4083ae:	mov    al,ds:0xb9df10f4
  4083b3:	cmp    al,0xc7
  4083b5:	jnp    0x408362
  4083b7:	xchg   esi,eax
  4083b8:	jbe    0x408423
  4083ba:	or     dl,BYTE PTR [ecx]
  4083bc:	push   ebp
  4083bd:	int    0x85
  4083bf:	(bad)  
  4083c0:	(bad)  
  4083c1:	xor    eax,0x4618e386
  4083c6:	xchg   eax,ebx
  4083c8:	jno    0x4083ad
  4083ca:	push   edx
  4083cb:	pop    eax
  4083cc:	ins    DWORD PTR es:[edi],dx
  4083cd:	push   ecx
  4083ce:	mov    eax,ds:0x29f53257
  4083d3:	push   ebx
  4083d4:	or     dh,BYTE PTR [ecx-0x1d]
  4083d7:	adc    dl,0xaa
  4083da:	xchg   BYTE PTR [edx-0x426b06c4],bh
  4083e0:	in     eax,dx
  4083e1:	inc    esi
  4083e2:	int3   
  4083e3:	mov    dl,0xf3
  4083e5:	xchg   BYTE PTR [esi],dl
  4083e7:	xor    BYTE PTR [edi],al
  4083e9:	mov    cl,0xea
  4083eb:	cs xchg ecx,eax
  4083ed:	stos   DWORD PTR es:[edi],eax
  4083ee:	pusha  
  4083ef:	mov    DWORD PTR [eax+0x13],edx
  4083f2:	add    DWORD PTR [ebp+0x47],0x432e085
  4083f9:	imul   esi,DWORD PTR [eax+0x5f52475a],0x7fe7a63b
  408403:	scas   al,BYTE PTR es:[edi]
  408404:	jl     0x408447
  408406:	dec    eax
  408407:	dec    eax
  408408:	xchg   edi,eax
  408409:	pop    ss
  40840a:	push   ebx
  40840b:	xlat   BYTE PTR ds:[ebx]
  40840c:	sbb    edi,0xffffff8e
  40840f:	xor    dl,BYTE PTR [ebp-0x10]
  408412:	or     BYTE PTR [edi-0x55],al
  408415:	loopne 0x40845f
  408417:	adc    al,0xa5
  408419:	outs   dx,BYTE PTR ds:[esi]
  40841a:	or     eax,0xada51990
  40841f:	mov    ch,0x3e
  408421:	nop
  408422:	add    eax,0xd0ee1156
  408427:	lahf   
  408428:	sti    
  408429:	xlat   BYTE PTR ds:[ebx]
  40842a:	inc    edi
  40842b:	pop    edx
  40842c:	jmp    0x40841e
  40842e:	mov    ch,0xba
  408430:	or     al,0xca
  408432:	fcomp  st(6)
  408434:	out    dx,eax
  408435:	sbb    eax,0x24888e05
  40843a:	pop    ds
  40843b:	sub    DWORD PTR [esi],eax
  40843d:	pop    es
  40843e:	and    DWORD PTR [edx+0xe],edi
  408441:	and    al,0x4d
  408443:	lods   al,BYTE PTR ds:[esi]
  408444:	call   0x5a9b582a
  408449:	mov    bh,BYTE PTR [esi-0x74]
  40844c:	jp     0x4084c3
  40844e:	lahf   
  40844f:	call   0x5863:0xd3edfa3e
  408456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408457:	inc    esi
  408458:	je     0x4084cc
  40845a:	mov    ecx,0x2909e82c
  40845f:	mov    ds:0x155925e8,al
  408464:	xchg   edi,eax
  408465:	jp     0x4084de
  408467:	jle    0x4084b5
  408469:	dec    esp
  40846a:	ins    DWORD PTR es:[edi],dx
  40846b:	pop    ebp
  40846c:	loopne 0x40842a
  40846e:	dec    edx
  40846f:	pop    ecx
  408470:	pop    eax
  408471:	(bad)  
  408472:	lods   eax,DWORD PTR ds:[esi]
  408473:	pop    ecx
  408474:	pop    esi
  408475:	(bad)  
  408477:	jp     0x4084eb
  408479:	imul   ecx,DWORD PTR [ecx-0x4c],0x53f8cc09
  408480:	adc    bh,0x70
  408483:	out    0x7a,al
  408485:	dec    eax
  408486:	jmp    0x408441
  408488:	dec    esp
  408489:	inc    esi
  40848a:	mov    ecx,0xd17c0337
  40848f:	into   
  408490:	mov    ds:0xb0f1723e,al
  408495:	dec    ecx
  408496:	loopne 0x40849c
  408498:	(bad)  
  408499:	fistp  DWORD PTR [esi]
  40849b:	mov    cs:0x8d0fe170,eax
  4084a1:	xchg   esi,eax
  4084a2:	mov    eax,0x6f73aa07
  4084a7:	out    0xca,al
  4084a9:	mov    al,ds:0x1e2a5270
  4084ae:	mov    eax,DWORD PTR [ecx+0x45511a4]
  4084b4:	cli    
  4084b5:	out    dx,al
  4084b6:	or     dl,ah
  4084b8:	push   ebp
  4084b9:	xchg   esi,eax
  4084ba:	add    BYTE PTR [ecx+0x5db06ff2],0x93
  4084c1:	jp     0x4084b0
  4084c3:	(bad)  
  4084c4:	mov    ch,0x61
  4084c6:	pop    esi
  4084c8:	ja     0x408451
  4084ca:	inc    ebx
  4084cb:	fcmovnbe st,st(2)
  4084cd:	(bad)  
  4084ce:	sub    DWORD PTR [esi+0x1d2cc16f],eax
  4084d4:	inc    ebp
  4084d5:	clc    
  4084d6:	ret    0x3277
  4084d9:	cmp    BYTE PTR [ecx],bh
  4084db:	jle    0x408508
  4084dd:	fdivr  st,st(4)
  4084df:	push   ebp
  4084e0:	leave  
  4084e1:	sbb    ah,dh
  4084e3:	xor    BYTE PTR [ebx+ebp*8+0x469e497d],ah
  4084ea:	das    
  4084eb:	inc    esi
  4084ec:	popf   
  4084ed:	xchg   ebx,eax
  4084ee:	fsubr  DWORD PTR [esi+0x27]
  4084f1:	or     DWORD PTR [esi-0x26],esp
  4084f4:	(bad)  
  4084f6:	xlat   BYTE PTR ds:[ebx]
  4084f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084f8:	shl    BYTE PTR [esp+ebx*2+0xd1c2bc8],1
  4084ff:	in     al,dx
  408500:	or     cl,ah
  408502:	inc    ebp
  408503:	neg    BYTE PTR [ebx]
  408505:	lds    esp,FWORD PTR [ecx]
  408507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408508:	push   0xffffff83
  40850a:	jae    0x4084df
  40850c:	test   DWORD PTR [ebp+0x3573f18b],0xda8d6005
  408516:	pusha  
  408517:	fdivr  QWORD PTR [esi]
  408519:	stos   DWORD PTR es:[edi],eax
  40851a:	sub    BYTE PTR [eax],dh
  40851c:	lea    edi,[ecx]
  40851e:	dec    edi
  40851f:	shl    BYTE PTR ss:0xecfbb78c,1
  408526:	aam    0x72
  408528:	pushf  
  408529:	imul   edx,ebx,0x6ca4ed2
  40852f:	int    0x89
  408531:	leave  
  408532:	xchg   DWORD PTR ds:0xf23cb1df,edx
  408538:	mov    ds:0x407d882a,al
  40853d:	std    
  40853e:	js     0x408513
  408540:	mov    eax,ds:0xca84fb5
  408545:	sbb    eax,0xec5baa6c
  40854a:	xor    BYTE PTR [eax-0x49],bl
  40854d:	push   edx
  40854e:	and    dl,bh
  408550:	mov    cl,0x2b
  408552:	push   eax
  408553:	xchg   DWORD PTR [ebx-0x57],ecx
  408556:	mov    ecx,0xca3e43b3
  40855b:	iret   
  40855c:	mov    cl,0x4c
  40855e:	cmp    al,0x90
  408561:	add    DWORD PTR ds:0x937dc8a6,0x4ce4b854
  40856b:	or     eax,0x994afa6
  408570:	dec    edi
  408571:	ss mov cl,0xde
  408574:	mov    edx,0xe3ab71ac
  408579:	mov    edx,?
  40857b:	and    DWORD PTR [ebx+0x44],0x33
  40857f:	lods   al,BYTE PTR ds:[esi]
  408580:	or     DWORD PTR [ebp-0x7d35e9f3],0xcbb6fc0b
  40858a:	repnz sub al,BYTE PTR [esi-0x2e7b9fbd]
  408591:	push   ebx
  408592:	dec    ebp
  408593:	pop    esi
  408594:	dec    edi
  408595:	ss adc eax,0x1e336483
  40859b:	jno    0x4085ad
  40859d:	loopne 0x40852c
  40859f:	scas   eax,DWORD PTR es:[edi]
  4085a0:	sar    dl,0xea
  4085a3:	or     al,0xbc
  4085a5:	jmp    0x4085a7
  4085a7:	pop    edx
  4085a8:	fiadd  DWORD PTR [eax-0x2ed389ad]
  4085ae:	push   ebx
  4085af:	dec    ebp
  4085b0:	add    DWORD PTR [edi-0x3f78ba73],ecx
  4085b6:	mov    dh,0x21
  4085b8:	pop    ebp
  4085b9:	dec    ebx
  4085ba:	jp     0x4085c7
  4085bc:	sbb    al,0x69
  4085be:	push   esp
  4085bf:	call   DWORD PTR [esi-0xd]
  4085c2:	sbb    al,0xdd
  4085c4:	add    al,0xda
  4085c6:	sti    
  4085c7:	add    al,0xee
  4085c9:	icebp  
  4085ca:	xor    BYTE PTR [edi-0x13],0xdb
  4085ce:	pop    ebx
  4085cf:	and    bh,0x9f
  4085d2:	sbb    al,0x50
  4085d4:	push   esi
  4085d5:	jle    0x40862e
  4085d7:	xchg   esp,eax
  4085d8:	stos   BYTE PTR es:[edi],al
  4085d9:	push   ebp
  4085da:	cmp    al,0x65
  4085dc:	fmul   DWORD PTR [esi-0x32590ab]
  4085e2:	dec    edx
  4085e3:	inc    edx
  4085e4:	jg     0x408625
  4085e6:	jge    0x4085d6
  4085e8:	in     al,dx
  4085e9:	(bad)  
  4085ea:	jmp    0x428:0xf07d04fe
  4085f1:	cmp    BYTE PTR [eax],al
  4085f3:	jne    0x4085b2
  4085f5:	(bad)  
  4085f6:	aam    0x18
  4085f8:	aam    0xec
  4085fa:	add    cl,BYTE PTR ds:0x63b87b82
  408600:	std    
  408601:	(bad)  
  408602:	inc    ebx
  408603:	aaa    
  408604:	pop    eax
  408605:	xchg   ecx,eax
  408606:	jmp    0xbf10:0xd4ec7f5a
  40860d:	lods   eax,DWORD PTR ds:[esi]
  40860e:	jecxz  0x408674
  408610:	push   esp
  408611:	and    eax,0xbf3bea20
  408616:	clc    
  408617:	xchg   edi,eax
  408618:	jno    0x408664
  40861a:	xor    dh,BYTE PTR [edx-0x19]
  40861d:	xchg   esp,eax
  40861e:	xchg   DWORD PTR [eax+edx*4-0x4f85a9c],ebx
  408625:	dec    ecx
  408626:	inc    ecx
  408627:	out    dx,eax
  408628:	ss out dx,al
  40862a:	scas   eax,DWORD PTR es:[edi]
  40862b:	jns    0x408600
  40862d:	fcom   DWORD PTR [eax+ebx*2+0x39]
  408631:	call   0xe610e3b9
  408636:	xchg   edx,eax
  408637:	int3   
  408638:	retf   
  408639:	pop    ebp
  40863a:	xor    cl,BYTE PTR [esi]
  40863c:	push   edx
  40863d:	cmovnp ebp,DWORD PTR ds:0xd35d1455
  408644:	jb     0x408652
  408646:	sar    DWORD PTR [esi],0x99
  408649:	pushf  
  40864a:	and    ch,dl
  40864c:	jl     0x408607
  40864e:	mov    ebp,0x9d0762d3
  408653:	xor    eax,DWORD PTR [edx-0x80]
  408656:	fcom   DWORD PTR [ebp+0x36]
  408659:	push   edi
  40865a:	push   es
  40865b:	pop    es
  40865c:	leave  
  40865d:	adc    DWORD PTR [ecx+0xe],0xffffffe3
  408661:	xchg   edx,eax
  408662:	pushf  
  408663:	not    DWORD PTR [eax+0x26]
  408666:	mov    ecx,0xb1fc52aa
  40866b:	js     0x4086cb
  40866d:	jmp    0x38c6:0xcff29e35
  408674:	ds aam 0x96
  408677:	push   ebp
  408678:	or     ah,BYTE PTR [ebp+0x5b]
  40867b:	adc    BYTE PTR [esi-0x3b5fb6e2],0x87
  408682:	push   ebx
  408683:	popa   
  408684:	into   
  408685:	adc    ebp,ecx
  408687:	loop   0x408620
  408689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40868a:	or     eax,0x87d2f318
  40868f:	pop    ebp
  408690:	ret    0x1d41
  408693:	int    0x92
  408695:	in     al,0xc6
  408697:	jbe    0x4086d6
  408699:	cs jmp 0x4af9:0x54a71b9b
  4086a1:	inc    edi
  4086a2:	fstp   QWORD PTR [edx+0x6]
  4086a5:	xor    eax,0x1844ca43
  4086aa:	sub    BYTE PTR [esi+0x18d80558],dh
  4086b0:	mov    ch,0xee
  4086b2:	xchg   edi,eax
  4086b3:	jmp    0x40865f
  4086b5:	xchg   edi,eax
  4086b6:	pop    ebx
  4086b7:	cs iret 
  4086b9:	loop   0x4086d7
  4086bb:	std    
  4086bc:	sahf   
  4086bd:	jl     0x40869e
  4086bf:	fadd   DWORD PTR [edx-0xf]
  4086c2:	xchg   ecx,eax
  4086c3:	imul   edi,DWORD PTR [eax+0x7c5b7a52],0x6e
  4086ca:	adc    eax,edx
  4086cc:	fsub   st(5),st
  4086ce:	or     DWORD PTR [eax+0x7],edx
  4086d1:	push   cs
  4086d2:	std    
  4086d3:	enter  0xe40f,0x22
  4086d7:	push   0x60139483
  4086dc:	out    0x76,al
  4086de:	out    0x3f,eax
  4086e0:	inc    ecx
  4086e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086e2:	pop    ds
  4086e3:	arpl   WORD PTR [ebx+0x1d2e5d0f],ax
  4086e9:	rcl    al,1
  4086eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ec:	loope  0x4086b2
  4086ee:	and    dl,bh
  4086f0:	and    BYTE PTR [ecx+0x20],ah
  4086f3:	pushf  
  4086f4:	mov    bh,0xf
  4086f6:	mov    ds:0x1d980407,al
  4086fb:	pop    ds
  4086fc:	out    0x4b,al
  4086fe:	retf   0xa61a
  408701:	sub    esi,esi
  408703:	clc    
  408704:	mov    dh,0x9d
  408706:	or     al,0xb3
  408708:	addr16 mov eax,gs:0x5724
  40870d:	adc    al,0xd8
  40870f:	mov    eax,0x58a98cf4
  408714:	leave  
  408715:	xchg   DWORD PTR [ebx+0x656c1b2e],edi
  40871b:	xor    eax,0xc21b165
  408720:	je     0x40879e
  408722:	ret    0xe439
  408725:	push   esp
  408726:	jp     0x4086f6
  408728:	icebp  
  408729:	jb     0x4087aa
  40872b:	mov    esi,0xdd29e3b1
  408730:	fnstcw WORD PTR [ebp-0x1317eb34]
  408736:	fdivr  DWORD PTR [ecx+ecx*4+0x32090e87]
  40873d:	jge    0x40875d
  40873f:	cmp    al,0x35
  408741:	inc    esp
  408742:	cmp    al,0x4
  408744:	and    DWORD PTR [edi+0x291cd87f],esp
  40874a:	out    0x68,eax
  40874c:	jo     0x4086fe
  40874e:	sbb    eax,DWORD PTR [esi-0x24abb451]
  408754:	cs and eax,0x956e926b
  40875a:	mov    ecx,0xd0b75e47
  40875f:	xchg   esi,eax
  408760:	mov    ch,0xf0
  408762:	mov    BYTE PTR ds:0xa92a12a9,bl
  408768:	je     0x40871d
  40876a:	and    al,BYTE PTR [ebx-0x45]
  40876d:	arpl   ax,bx
  40876f:	neg    BYTE PTR [esi+0x6702ce15]
  408775:	pop    esi
  408776:	xor    BYTE PTR [edx],ah
  408778:	sti    
  408779:	push   edi
  40877a:	xchg   edi,eax
  40877b:	inc    edi
  40877c:	jbe    0x408786
  40877e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40877f:	xchg   ebp,eax
  408780:	mov    edi,0x92537a97
  408785:	dec    esi
  408786:	rcl    BYTE PTR [ebx+0x3a],1
  408789:	sbb    eax,DWORD PTR [edx-0x400a0b1b]
  40878f:	mov    DWORD PTR [esi-0x19],edi
  408792:	ins    DWORD PTR es:[edi],dx
  408793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408794:	dec    edx
  408795:	dec    ebx
  408796:	pop    ebx
  408797:	add    al,0x49
  408799:	xor    BYTE PTR [eax+0x53daa1da],cl
  40879f:	ds cmp eax,0x31000465
  4087a5:	aas    
  4087a6:	sub    DWORD PTR [edx],0x24
  4087a9:	push   ss
  4087aa:	jnp    0x408812
  4087ac:	lods   al,BYTE PTR ds:[esi]
  4087ad:	in     eax,dx
  4087ae:	add    bl,BYTE PTR [ebp+esi*4-0x52]
  4087b2:	loopne 0x408796
  4087b4:	data16 into 
  4087b6:	inc    edi
  4087b7:	or     bh,bh
  4087b9:	pop    edi
  4087ba:	inc    esp
  4087bb:	mov    dl,0x44
  4087bd:	mov    al,ds:0xf1b9bd54
  4087c2:	or     DWORD PTR [ebx],edi
  4087c4:	pop    edx
  4087c5:	or     BYTE PTR [ecx],al
  4087c7:	xor    al,0x94
  4087c9:	dec    esp
  4087ca:	push   edx
  4087cb:	jl     0x40876a
  4087cd:	rcl    BYTE PTR [esi+0x65b29914],0xb8
  4087d4:	mov    eax,DWORD PTR [ebp+0x6c]
  4087d7:	mov    esp,DWORD PTR [esi]
  4087d9:	pop    es
  4087da:	in     eax,0xad
  4087dc:	mov    cl,ch
  4087de:	pcmpgtb mm2,QWORD PTR [ebx]
  4087e1:	sahf   
  4087e2:	jns    0x408853
  4087e4:	lahf   
  4087e5:	or     DWORD PTR [edx],0xca432ce5
  4087eb:	sbb    WORD PTR [esp+edx*4+0x79a3af5c],0xfff6
  4087f4:	mov    esp,0x3bbb52ad
  4087f9:	(bad)  
  4087fa:	jge    0x40886c
  4087fc:	cmp    al,0x68
  4087fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087ff:	or     DWORD PTR [ecx+eax*4],edx
  408802:	shr    edi,0x58
  408805:	ffree  st(6)
  408807:	xchg   BYTE PTR [ebx+0x31cc5b49],bh
  40880d:	fcom   st(2)
  40880f:	mov    edi,0x29752803
  408814:	xchg   ch,al
  408816:	cmp    DWORD PTR [ebx+0x2926118c],edi
  40881c:	add    DWORD PTR [ebx+0x1],ecx
  40881f:	dec    edx
  408820:	inc    ecx
  408821:	mov    al,ds:0x239a0288
  408826:	mov    edi,0xa9e241b0
  40882b:	sub    DWORD PTR [ebx-0x11],ecx
  40882e:	jns    0x40882a
  408830:	or     DWORD PTR [ebx+eax*2],eax
  408833:	in     eax,dx
  408834:	inc    edx
  408835:	ins    BYTE PTR es:[edi],dx
  408836:	ror    DWORD PTR [ebx-0x627f9784],0x78
  40883d:	out    dx,eax
  40883e:	mov    dl,0x61
  408840:	push   esi
  408841:	and    BYTE PTR [edx+0x6489931b],0x9a
  408848:	sub    eax,0x40d06fa
  40884d:	jnp    0x4088c6
  40884f:	mov    ebp,0xa2a64659
  408854:	sahf   
  408855:	ror    al,cl
  408857:	add    eax,0x3dd360e4
  40885c:	into   
  40885d:	clc    
  40885e:	push   ebp
  40885f:	pop    esp
  408860:	mov    edx,0x811f81b1
  408865:	stos   BYTE PTR es:[edi],al
  408866:	inc    ebp
  408867:	mov    cl,0x2
  408869:	retf   
  40886a:	dec    edx
  40886b:	mov    ss,esi
  40886d:	lea    ecx,[edx-0x3a]
  408870:	stos   BYTE PTR es:[edi],al
  408871:	(bad)  
  408872:	mov    BYTE PTR [ecx+0x6d],dl
  408875:	pop    ecx
  408876:	push   ds
  408877:	mov    ecx,0x21abd16a
  40887c:	out    0xe,eax
  40887e:	sub    cl,BYTE PTR [eax+edi*4-0x2c7dd62b]
  408885:	sub    dh,BYTE PTR ds:0x3b3fc952
  40888b:	add    BYTE PTR [eax],0xd4
  40888e:	loop   0x4088dc
  408890:	jp     0x4088ee
  408892:	jge    0x408899
  408894:	pop    esi
  408895:	ret    
  408896:	or     cl,BYTE PTR [edi+0x58]
  408899:	inc    edx
  40889a:	out    dx,eax
  40889b:	das    
  40889c:	sbb    BYTE PTR [esi-0x727ae9a0],bl
  4088a2:	cmp    BYTE PTR [ebp-0x533c9a9c],0xf
  4088a9:	and    dl,BYTE PTR [ebx-0x3b43a34f]
  4088af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b0:	das    
  4088b1:	(bad)  
  4088b2:	mov    cl,0x2
  4088b4:	dec    edx
  4088b5:	xchg   esp,eax
  4088b6:	adc    eax,0xc8493268
  4088bb:	add    ah,BYTE PTR fs:[ecx+0x3fe78bfd]
  4088c2:	test   al,0x8d
  4088c4:	cwde   
  4088c5:	adc    ch,BYTE PTR [eax+0x29]
  4088c8:	xchg   esp,eax
  4088c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088ca:	inc    eax
  4088cb:	push   ds
  4088cc:	shl    ah,0x6e
  4088cf:	xchg   edx,eax
  4088d0:	push   eax
  4088d1:	mov    ebp,0xb2b50840
  4088d6:	xchg   ecx,eax
  4088d7:	xchg   BYTE PTR ds:[eax-0x728d116b],al
  4088de:	sbb    eax,0xda2d2a63
  4088e3:	add    eax,0x672d7894
  4088e8:	add    bl,BYTE PTR [edi]
  4088ea:	dec    edx
  4088eb:	out    0x1e,al
  4088ed:	lods   eax,DWORD PTR ds:[esi]
  4088ee:	dec    edi
  4088ef:	push   ebx
  4088f0:	bound  esi,QWORD PTR [edx+0x47]
  4088f3:	fsub   DWORD PTR [ebx+0x25bbb09c]
  4088f9:	sbb    ebp,DWORD PTR ds:0x2d4e1e3e
  4088ff:	jns    0x40895e
  408901:	call   0x5f66:0xb65683fd
  408908:	iret   
  408909:	stc    
  40890a:	cmp    eax,DWORD PTR [eax-0x67]
  40890d:	add    BYTE PTR [edi+0x11f4a618],bl
  408913:	inc    ebx
  408914:	(bad)  [ebx+0x54]
  408917:	(bad)  
  408918:	arpl   WORD PTR [esp+eax*1],dx
  40891b:	shr    BYTE PTR [edx],0xdb
  40891e:	sub    esi,DWORD PTR [ebp+0x2b91df4e]
  408924:	nop
  408925:	(bad)  
  408926:	or     BYTE PTR [ebx],ah
  408928:	fs jae 0x40890e
  40892b:	mov    ch,0x28
  40892d:	and    al,0x78
  40892f:	and    BYTE PTR [eax+0x7f043ae4],al
  408935:	pop    ebx
  408936:	leave  
  408937:	retf   0x13cd
  40893a:	ret    
  40893b:	sub    ebx,ecx
  40893d:	fstp   QWORD PTR [ecx-0x232204a8]
  408943:	cmp    DWORD PTR gs:[ebp-0x3c],ebx
  408947:	adc    BYTE PTR [edi],al
  408949:	fs dec eax
  40894b:	addr16 push 0xba05be7f
  408951:	cdq    
  408952:	hlt    
  408953:	mov    bl,0x9
  408955:	(bad)  
  408956:	adc    bh,BYTE PTR [edx]
  408958:	cmp    BYTE PTR [ebx],bl
  40895a:	push   ebx
  40895b:	mov    edi,0x2316e7ab
  408960:	xchg   BYTE PTR [ebx+0x49d7ec79],bl
  408966:	adc    dl,BYTE PTR [edx-0x50]
  408969:	jecxz  0x408956
  40896b:	nop
  40896c:	mov    al,ds:0xa2c083c0
  408971:	inc    esi
  408972:	mov    edx,0xe26c38f9
  408977:	push   eax
  408978:	test   eax,0x6c437eb
  40897d:	mov    ecx,0x7496530f
  408982:	sbb    al,0x7b
  408984:	mov    al,ds:0x6bcb13ce
  408989:	xor    BYTE PTR [esi],0xd5
  40898c:	scas   eax,DWORD PTR es:[edi]
  40898d:	imul   eax,ecx,0x6121397f
  408993:	xchg   esi,eax
  408994:	js     0x4089a1
  408996:	mov    ebx,0x5a98b9b2
  40899b:	mov    bl,0xd1
  40899d:	or     al,0xe0
  40899f:	cmp    al,0xdf
  4089a1:	sar    DWORD PTR [ecx-0x15],1
  4089a4:	and    DWORD PTR [ecx],0xffffffd6
  4089a7:	pop    ss
  4089a8:	stc    
  4089a9:	add    DWORD PTR [edx+0x46427384],edx
  4089af:	sub    BYTE PTR [eax],ch
  4089b1:	nop
  4089b2:	cmp    DWORD PTR [edx+ecx*1],esp
  4089b5:	pop    esi
  4089b6:	sti    
  4089b7:	or     al,0x72
  4089b9:	lock (bad) 
  4089bb:	pushf  
  4089bc:	into   
  4089bd:	and    eax,DWORD PTR [ebx+esi*2-0x69bfabb9]
  4089c4:	mov    edx,0x12dd48b
  4089c9:	in     al,0x2
  4089cb:	scas   eax,DWORD PTR es:[edi]
  4089cc:	mov    bh,BYTE PTR [ecx]
  4089ce:	xor    BYTE PTR [ebp+ebp*8+0xe],ah
  4089d2:	jmp    0xcb64:0x311b9c62
  4089d9:	sbb    DWORD PTR [ebx+ebp*8+0x4f],eax
  4089dd:	jl     0x4089ef
  4089df:	xor    DWORD PTR [esi+0x13],0x7
  4089e3:	xchg   ecx,eax
  4089e4:	mov    DWORD PTR [ebx],ebp
  4089e6:	jnp    0x408996
  4089e8:	xlat   BYTE PTR ds:[ebx]
  4089e9:	scas   eax,DWORD PTR es:[edi]
  4089ea:	sub    DWORD PTR [ebx+0x33f40a78],esp
  4089f0:	test   edi,ecx
  4089f2:	xchg   edx,eax
  4089f3:	pop    ebx
  4089f4:	xchg   ecx,eax
  4089f5:	or     ah,BYTE PTR [ebp+0x7a067b6a]
  4089fb:	adc    eax,0xce1f1ec2
  408a00:	push   cs
  408a01:	rcl    BYTE PTR [ecx],cl
  408a03:	lds    ebp,FWORD PTR [ecx+0x68]
  408a06:	lea    eax,ss:[ebx+0x22ae8662]
  408a0d:	cmp    edx,ebx
  408a0f:	and    eax,0x527bd346
  408a14:	push   ecx
  408a15:	and    esp,ebp
  408a17:	aad    0xa6
  408a19:	jo     0x4089ca
  408a1b:	or     BYTE PTR [eax-0x70d72a52],cl
  408a21:	lods   al,BYTE PTR ds:[esi]
  408a22:	adc    al,0xe5
  408a24:	push   cs
  408a25:	xor    bl,ah
  408a27:	ins    DWORD PTR es:[edi],dx
  408a28:	mov    es,WORD PTR [edx-0x4a]
  408a2b:	bound  eax,QWORD PTR [esp+eax*2-0x60]
  408a2f:	xchg   esi,eax
  408a30:	sub    bh,bl
  408a32:	mov    bl,0xb7
  408a34:	out    0xc2,al
  408a36:	rcl    al,cl
  408a38:	xor    DWORD PTR [ebx-0x4d],0x7d
  408a3c:	sti    
  408a3d:	dec    esi
  408a3e:	mov    edx,0x1ba9112e
  408a43:	add    al,0xaa
  408a45:	or     edx,ecx
  408a47:	stc    
  408a48:	xchg   ebx,eax
  408a49:	(bad)  
  408a4a:	cmp    ebp,DWORD PTR [ecx-0x3ebcd94b]
  408a50:	fcmovbe st,st(7)
  408a52:	adc    cl,dl
  408a54:	stc    
  408a55:	in     al,dx
  408a56:	sub    al,0x32
  408a58:	ds repz push ebx
  408a5b:	sbb    al,0xb6
  408a5d:	ins    DWORD PTR es:[edi],dx
  408a5e:	(bad)  
  408a5f:	mov    dl,0x37
  408a61:	cmp    eax,ecx
  408a63:	pop    esp
  408a64:	jae    0x408a0d
  408a66:	popa   
  408a67:	push   ss
  408a68:	inc    eax
  408a69:	mov    bl,0x43
  408a6b:	addr16 push 0xd3e89732
  408a71:	dec    esp
  408a72:	(bad)  
  408a73:	dec    edi
  408a74:	push   cs
  408a75:	mov    ebx,DWORD PTR [ecx-0x52a33b91]
  408a7b:	les    esi,FWORD PTR [edx-0x40]
  408a7e:	cmp    DWORD PTR [ebx+0x6a0853b],esp
  408a84:	adc    ebx,DWORD PTR ss:[eax+0x50]
  408a88:	test   cl,bh
  408a8a:	cmp    ah,BYTE PTR [edx+ebx*8-0x2bb1ce15]
  408a91:	adc    eax,0x1fef9be7
  408a96:	xchg   esi,eax
  408a97:	pop    eax
  408a98:	jmp    0x408aa4
  408a9a:	(bad)  [ecx]
  408a9c:	push   0x4be43cf6
  408aa1:	ja     0x408a77
  408aa3:	jge    0x408ae7
  408aa5:	sar    BYTE PTR [ebx-0x6abdbdc],0x4
  408aac:	mov    edx,0x9c5b5ce
  408ab1:	(bad)  
  408ab2:	push   0xab47b047
  408ab7:	pop    ebp
  408ab8:	mov    DWORD PTR [ebp-0x6f5429e7],esp
  408abe:	jns    0x408b3a
  408ac0:	push   0x42
  408ac2:	fisub  WORD PTR [edi-0x16f023c2]
  408ac8:	loop   0x408b31
  408aca:	ja     0x408b03
  408acc:	mov    cl,0x34
  408ace:	inc    esi
  408acf:	pop    esp
  408ad0:	sbb    al,0x85
  408ad2:	mov    edi,0xe18350b9
  408ad7:	loop   0x408ac9
  408ad9:	xor    bl,BYTE PTR [edi-0x3d]
  408adc:	inc    edi
  408add:	ds adc al,0xab
  408ae0:	ins    DWORD PTR es:[edi],dx
  408ae1:	call   0x45403880
  408ae6:	leave  
  408ae7:	adc    al,0x57
  408ae9:	inc    edx
  408aea:	dec    esi
  408aeb:	mov    dh,0x42
  408aed:	aaa    
  408aee:	es test ebp,eax
  408af1:	mov    esp,?
  408af3:	call   0x854e:0xed2b6c0
  408afa:	imul   ebx,DWORD PTR [edi],0x3a1466d7
  408b00:	mov    dl,0x46
  408b02:	imul   edi,DWORD PTR [esi+0x1a5abe11],0x42
  408b09:	mov    bh,0x77
  408b0b:	or     eax,ebx
  408b0d:	adc    ah,dl
  408b0f:	sbb    cl,BYTE PTR cs:[edi]
  408b12:	in     al,dx
  408b13:	adc    ecx,0x6c926b0a
  408b19:	sub    al,0xdf
  408b1b:	pop    fs
  408b1d:	pop    ebp
  408b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b1f:	ins    DWORD PTR es:[edi],dx
  408b20:	jbe    0x408ac9
  408b22:	mov    ch,0xa3
  408b24:	xor    BYTE PTR [edi-0x3a80599d],ah
  408b2a:	loope  0x408b59
  408b2c:	aam    0x8d
  408b2e:	scas   eax,DWORD PTR es:[edi]
  408b2f:	aam    0x48
  408b31:	fcomp  QWORD PTR [esi]
  408b33:	sbb    dh,BYTE PTR [edi]
  408b35:	xchg   edx,eax
  408b36:	xchg   esi,eax
  408b37:	je     0x408ac0
  408b39:	jp     0x408b51
  408b3b:	xchg   edi,eax
  408b3c:	xchg   ebp,eax
  408b3d:	inc    ebx
  408b3e:	push   ss
  408b3f:	std    
  408b40:	mov    dl,0x92
  408b42:	imul   edx,DWORD PTR [ebp+0x2a2d0ef8],0xffffffdb
  408b49:	sub    eax,0xe768f895
  408b4e:	jmp    0x67893d8b
  408b53:	sub    bh,cl
  408b55:	adc    al,0x2c
  408b57:	mov    ds:0x69de38aa,al
  408b5c:	xchg   ebx,eax
  408b5d:	mov    ecx,0x85bc1d1f
  408b62:	mov    al,0xde
  408b64:	xor    esi,eax
  408b66:	mov    DWORD PTR [edi+0x3f4ef509],ebx
  408b6c:	adc    bh,BYTE PTR [edi+0x3f00884]
  408b72:	or     eax,0xe0a6c58a
  408b77:	lods   al,BYTE PTR ds:[esi]
  408b78:	iret   
  408b79:	adc    DWORD PTR ds:0x4d445e10,esi
  408b7f:	mov    edi,0x37e63841
  408b84:	jmp    0xb85fb94a
  408b89:	sub    DWORD PTR [eax+ecx*4+0xb0c8635],esi
  408b90:	pop    eax
  408b91:	loope  0x408b19
  408b93:	mov    dh,0xca
  408b95:	inc    eax
  408b96:	push   ecx
  408b97:	xchg   esp,eax
  408b98:	js     0x408bfa
  408b9a:	or     DWORD PTR [esi],ebx
  408b9c:	(bad)  
  408b9d:	invd   
  408b9f:	add    al,0xfb
  408ba1:	jne    0x408b78
  408ba3:	push   0x3d7f5c85
  408ba8:	jo     0x408b48
  408baa:	xchg   edi,eax
  408bab:	xor    DWORD PTR [edx+edx*1],ebp
  408bae:	adc    al,0x85
  408bb0:	pop    ebx
  408bb1:	aad    0x79
  408bb3:	push   edi
  408bb4:	push   0xffffffdd
  408bb6:	inc    edx
  408bb7:	and    BYTE PTR [ebp-0x44d6b69a],bl
  408bbd:	imul   BYTE PTR [ecx+0x77576b4a]
  408bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bc4:	pop    ds
  408bc5:	xchg   esp,eax
  408bc6:	nop
  408bc7:	ins    BYTE PTR es:[edi],dx
  408bc8:	call   0xa2d0:0xc786338d
  408bcf:	xchg   ecx,eax
  408bd0:	mov    ecx,0x3454e05
  408bd5:	add    bl,BYTE PTR [edi]
  408bd7:	ins    DWORD PTR es:[edi],dx
  408bd8:	dec    ebp
  408bd9:	ja     0x408c20
  408bdb:	mov    BYTE PTR [ebx-0xcbec1f6],cl
  408be1:	ins    BYTE PTR es:[edi],dx
  408be2:	sub    eax,0x2e478bae
  408be7:	ja     0x408c1b
  408be9:	add    DWORD PTR [ebp+0x88006c2],edx
  408bef:	out    0x71,al
  408bf1:	int3   
  408bf2:	das    
  408bf3:	sbb    esp,edi
  408bf5:	popa   
  408bf6:	inc    eax
  408bf7:	ret    
  408bf8:	or     DWORD PTR [ebx],esp
  408bfa:	mov    dl,0xc
  408bfc:	ja     0x408c7b
  408bfe:	test   eax,0x76a4fc4
  408c03:	cwde   
  408c04:	gs sti 
  408c06:	lahf   
  408c07:	push   edi
  408c08:	sub    bh,BYTE PTR [eax-0x74]
  408c0b:	push   es
  408c0c:	or     DWORD PTR [esi],0xfd3c71a9
  408c12:	retf   
  408c13:	aam    0x79
  408c15:	dec    edi
  408c16:	sub    DWORD PTR [esi+0x71],edx
  408c19:	sti    
  408c1a:	es scas eax,DWORD PTR es:[edi]
  408c1c:	jp     0x408ba7
  408c1e:	mov    al,0x56
  408c20:	std    
  408c21:	adc    DWORD PTR [edi-0x24535280],0x295bb26e
  408c2b:	sub    cl,al
  408c2d:	jne    0x408c61
  408c2f:	cs add al,0x94
  408c32:	out    dx,eax
  408c33:	(bad)  
  408c34:	stc    
  408c35:	jns    0x408c7c
  408c37:	loopne 0x408c4c
  408c39:	pushf  
  408c3a:	lods   al,BYTE PTR ds:[esi]
  408c3b:	hlt    
  408c3c:	push   eax
  408c3d:	jmp    0x4549:0x57be70fd
  408c44:	or     al,0x64
  408c46:	mov    DWORD PTR [ebp-0x1e924929],edx
  408c4c:	data16 ja 0x408c3e
  408c4f:	push   edi
  408c50:	or     eax,0xbc6f744a
  408c55:	int    0xb6
  408c57:	retf   0xa142
  408c5a:	add    esi,esi
  408c5c:	jmp    0x408c76
  408c5e:	jmp    0x408be4
  408c60:	mov    cl,0x4a
  408c62:	ret    
  408c63:	jl     0x408c79
  408c65:	mov    ah,0xa7
  408c67:	sub    al,BYTE PTR [eax-0x1708b0b4]
  408c6d:	ror    BYTE PTR [edx-0x45],0x72
  408c71:	and    eax,0x78c79976
  408c76:	shl    BYTE PTR [eax],cl
  408c78:	pop    edi
  408c79:	inc    esi
  408c7a:	(bad)  
  408c7b:	sbb    edx,DWORD PTR [esi+0x68]
  408c7e:	ror    BYTE PTR [ecx+ebx*2],cl
  408c81:	jne    0x408ccb
  408c83:	shl    ah,0x37
  408c86:	or     ch,0xfa
  408c89:	loop   0x408cd6
  408c8b:	repnz mul BYTE PTR [edi+0x6ba72530]
  408c92:	imul   ecx,DWORD PTR [bp+di],0x4b
  408c96:	out    0x99,eax
  408c98:	and    dl,dh
  408c9a:	dec    edi
  408c9b:	xchg   ecx,eax
  408c9c:	fnstcw WORD PTR [edi-0x79]
  408c9f:	pop    ebp
  408ca0:	nop
  408ca1:	sahf   
  408ca2:	or     bl,cl
  408ca4:	xchg   BYTE PTR [ebp-0xc],al
  408ca7:	xchg   DWORD PTR [edx],ebp
  408ca9:	std    
  408caa:	mov    esp,0xf5a4dbe8
  408caf:	shl    DWORD PTR [edi],0x6a
  408cb2:	test   BYTE PTR [ebx+0x1d],cl
  408cb5:	sub    esp,DWORD PTR [edx-0x39c5e454]
  408cbb:	test   al,0x87
  408cbd:	mov    al,0xe6
  408cbf:	pop    eax
  408cc0:	jne    0x408d11
  408cc2:	xchg   esp,eax
  408cc3:	rcl    DWORD PTR [esp+ecx*8+0x423a900],1
  408cca:	mov    ecx,0x4f2132c
  408ccf:	or     ecx,DWORD PTR [ecx+0x31d92bac]
  408cd5:	jmp    0xa28e:0xbd64fd48
  408cdc:	jno    0x408d01
  408cde:	test   bh,0xd
  408ce1:	fisubr WORD PTR [edx+ecx*1-0x15ce02df]
  408ce8:	rol    BYTE PTR [edx+0x32c80a9],cl
  408cee:	mov    DWORD PTR [ebp+0x32],ecx
  408cf1:	sub    al,0xb9
  408cf3:	lea    edx,[eax]
  408cf5:	call   FWORD PTR [ebp+0x55]
  408cf8:	std    
  408cf9:	dec    edi
  408cfa:	mov    ?,WORD PTR [esi-0x6c]
  408cfd:	test   BYTE PTR [ecx],dl
  408cff:	dec    edi
  408d00:	jb     0x408d15
  408d02:	sbb    eax,DWORD PTR [ebp+eax*1+0x64e9a89c]
  408d09:	out    dx,eax
  408d0a:	fst    DWORD PTR [eax-0x5191fb4c]
  408d10:	push   esi
  408d11:	dec    esp
  408d12:	pop    edi
  408d13:	mov    edx,0x8ff7d674
  408d18:	mov    al,ds:0x1d2f5d8e
  408d1d:	push   0xe560483
  408d22:	iret   
  408d23:	fld    st(2)
  408d25:	scas   al,BYTE PTR es:[edi]
  408d26:	aas    
  408d27:	out    0x77,eax
  408d29:	loop   0x408d5b
  408d2b:	xor    BYTE PTR [edi],0x91
  408d2e:	jmp    0x3f92:0x540460b9
  408d35:	inc    eax
  408d36:	sahf   
  408d37:	and    al,0xd0
  408d39:	xchg   ebp,eax
  408d3a:	push   ebp
  408d3b:	mov    al,ds:0xaa66166f
  408d40:	push   edx
  408d41:	inc    ebx
  408d42:	dec    edx
  408d43:	clc    
  408d44:	lea    esp,[ebx+edx*2]
  408d47:	mov    BYTE PTR [ecx+0x61],ah
  408d4a:	fs pop ds
  408d4c:	xor    eax,0x86f4b0be
  408d51:	mov    edx,0x50062618
  408d56:	dec    ecx
  408d57:	mov    esi,0x460671dd
  408d5c:	aas    
  408d5d:	jno    0x408cf8
  408d5f:	repnz push ds
  408d61:	xor    ebp,ebx
  408d63:	pop    ebp
  408d64:	pop    ecx
  408d65:	cli    
  408d66:	push   ebx
  408d67:	mov    esi,0x701fc873
  408d6c:	xchg   DWORD PTR [ebx-0x43667b74],esi
  408d72:	dec    esp
  408d73:	push   esp
  408d74:	fiadd  DWORD PTR [eax+0x3804e50]
  408d7a:	ret    
  408d7b:	sbb    cl,bl
  408d7d:	xchg   edi,eax
  408d7e:	fdiv   QWORD PTR [esi-0xb9d34d4]
  408d84:	js     0x408d7b
  408d86:	test   al,0x87
  408d88:	sti    
  408d89:	adc    DWORD PTR [edx-0x45],ecx
  408d8c:	jno    0x408d32
  408d8e:	xchg   edx,eax
  408d8f:	dec    eax
  408d90:	ds adc eax,eax
  408d93:	shr    al,0x35
  408d96:	(bad)  
  408d97:	neg    BYTE PTR ds:0xd293da89
  408d9d:	xor    DWORD PTR [ecx+0x57353bc6],esi
  408da3:	add    dl,BYTE PTR [edi-0x61]
  408da6:	sbb    dl,BYTE PTR [ebp+0xb]
  408da9:	les    edi,FWORD PTR ds:0x636594ff
  408daf:	das    
  408db0:	jl     0x408d9f
  408db2:	xchg   ebp,eax
  408db3:	pop    es
  408db4:	jmp    0x49b3eec9
  408db9:	jbe    0x408d99
  408dbb:	xor    ebx,DWORD PTR [esi+0x6ff515fa]
  408dc1:	mov    bl,0x69
  408dc3:	mov    esp,0x4e8fe3c1
  408dc8:	stos   DWORD PTR es:[edi],eax
  408dc9:	mov    bl,0x73
  408dcb:	mov    edx,0xe119280b
  408dd0:	push   esp
  408dd1:	pop    ebx
  408dd2:	loop   0x408e02
  408dd4:	aam    0x71
  408dd6:	cmp    al,0x80
  408dd8:	add    BYTE PTR [ebx+0x508ceae8],bl
  408dde:	inc    esi
  408ddf:	pusha  
  408de0:	cwde   
  408de1:	lock xchg DWORD PTR [esi+edx*1],ecx
  408de5:	ja     0x408e3a
  408de7:	pop    ds
  408de8:	cmp    BYTE PTR [edx-0x6a],bh
  408deb:	sub    BYTE PTR [edx+0x61],ah
  408dee:	into   
  408def:	fdivr  st,st(5)
  408df1:	cmp    BYTE PTR [ebx+0x5c],ch
  408df4:	jp     0x408e18
  408df6:	popa   
  408df7:	dec    edx
  408df8:	call   0x7e860221
  408dfd:	push   ebp
  408dfe:	sbb    ebx,DWORD PTR [ebp+edx*8-0x4951435a]
  408e05:	push   0x52e67e72
  408e0a:	les    edx,FWORD PTR [ebx+0x7d1c6c96]
  408e10:	div    edx
  408e12:	data16 in al,dx
  408e14:	pop    edi
  408e15:	or     eax,eax
  408e17:	xchg   edx,eax
  408e18:	cdq    
  408e19:	test   al,0xde
  408e1b:	enter  0x8592,0xe0
  408e1f:	out    0xd7,al
  408e21:	jecxz  0x408daa
  408e23:	or     al,0x84
  408e25:	jne    0x408dee
  408e27:	(bad)  
  408e28:	rcr    bl,1
  408e2a:	jecxz  0x408dca
  408e2c:	jb     0x408ea6
  408e2e:	das    
  408e2f:	lahf   
  408e30:	dec    edx
  408e31:	into   
  408e32:	rcl    DWORD PTR [ebx+0xb1abbde],0x49
  408e39:	sbb    eax,0xeac5f7ea
  408e3e:	mov    dh,0x5e
  408e40:	xor    DWORD PTR [ebx+ecx*4-0x6153503e],edx
  408e47:	enter  0x45a2,0xd7
  408e4b:	mov    WORD PTR [esi+0x739f4789],es
  408e51:	fcomp  DWORD PTR [ebp-0x7a1ac36b]
  408e57:	inc    ebp
  408e58:	sub    eax,0xf4b47a29
  408e5d:	inc    esi
  408e5e:	mov    eax,ds:0xf61d42d2
  408e63:	std    
  408e64:	je     0x408e89
  408e66:	jo     0x408e94
  408e68:	imul   edx,DWORD PTR [edx+0x2a],0xffffffe3
  408e6c:	add    bh,al
  408e6e:	jbe    0x408eba
  408e70:	in     eax,dx
  408e71:	pushf  
  408e72:	scas   eax,DWORD PTR es:[edi]
  408e73:	ja     0x408e3d
  408e75:	dec    ebx
  408e76:	xor    DWORD PTR [ecx+eiz*8+0x20],0x74
  408e7b:	and    BYTE PTR [eax+eax*1+0x455eb613],bl
  408e82:	push   ebp
  408e83:	push   ecx
  408e84:	lods   al,BYTE PTR ds:[esi]
  408e85:	arpl   WORD PTR [ecx],si
  408e87:	ficomp WORD PTR [edi-0x18ce7ba5]
  408e8d:	xchg   edi,eax
  408e8e:	retf   0xc5bb
  408e91:	out    dx,al
  408e92:	mov    ah,BYTE PTR [eax]
  408e94:	mov    bh,cl
  408e96:	scas   eax,DWORD PTR es:[edi]
  408e97:	test   DWORD PTR [esp+eax*1+0x70],ecx
  408e9b:	pusha  
  408e9c:	dec    ebx
  408e9d:	jle    0x408e25
  408e9f:	addr16 or al,0xcc
  408ea2:	cmc    
  408ea3:	push   ecx
  408ea4:	jns    0x408efa
  408ea6:	loop   0x408ef2
  408ea8:	scas   al,BYTE PTR es:[edi]
  408ea9:	popa   
  408eaa:	into   
  408eab:	cmp    eax,0xb0eacdd7
  408eb0:	popf   
  408eb1:	(bad)  
  408eb2:	mov    esi,0xf8f4d50f
  408eb7:	fidiv  WORD PTR [edx*1-0x658b4b93]
  408ebe:	jmp    0x408ec9
  408ec0:	sub    DWORD PTR [ebp+edx*1+0x1b36e90d],ecx
  408ec7:	pop    ebp
  408ec8:	pushf  
  408ec9:	cmp    DWORD PTR [edi-0x39],0x9c870ff7
  408ed0:	push   ds
  408ed1:	or     dh,BYTE PTR [ebx+esi*4]
  408ed4:	fstp   DWORD PTR [esi-0x6d3cea66]
  408eda:	imul   eax,DWORD PTR [eax-0x18],0xffffffad
  408ede:	cmc    
  408edf:	adc    eax,0x47c00e7b
  408ee4:	or     bl,BYTE PTR ds:0x770baacd
  408eea:	iret   
  408eeb:	pop    esi
  408eec:	ja     0x408ef4
  408eee:	inc    esi
  408eef:	test   DWORD PTR [eax-0xd36de7e],ecx
  408ef5:	xchg   edx,eax
  408ef6:	xchg   BYTE PTR [ecx],cl
  408ef8:	aaa    
  408ef9:	pushf  
  408efa:	or     BYTE PTR ds:0xa7c95460,bl
  408f00:	(bad)
  408f03:	mov    bh,0xba
  408f05:	inc    esp
  408f06:	xor    BYTE PTR [edx+0x75b07776],bh
  408f0c:	sbb    dh,dl
  408f0e:	mov    esp,0x3445ed73
  408f13:	inc    ecx
  408f14:	loop   0x408f46
  408f16:	xchg   BYTE PTR [esi-0x3d0daf08],ch
  408f1c:	div    DWORD PTR [ecx+eax*4]
  408f1f:	sub    DWORD PTR [edi],ebp
  408f21:	jo     0x408f06
  408f23:	mov    ds:0xb6255b8c,al
  408f28:	sub    al,0xee
  408f2a:	jle    0x408f0d
  408f2c:	mov    ebp,0xc287d6d1
  408f31:	xchg   ebx,eax
  408f32:	es dec ecx
  408f34:	pusha  
  408f35:	inc    eax
  408f36:	outs   dx,BYTE PTR ds:[esi]
  408f37:	adc    BYTE PTR [edx-0x6],dl
  408f3a:	mov    ebx,?
  408f3c:	clc    
  408f3d:	push   ebx
  408f3e:	add    ebx,esp
  408f40:	pop    esp
  408f41:	out    0x6e,al
  408f43:	dec    ebx
  408f44:	dec    edi
  408f45:	or     ebx,DWORD PTR [ebp+0x19fe3db3]
  408f4b:	sahf   
  408f4c:	shr    BYTE PTR [ebp-0x2d7595b6],1
  408f52:	pop    esp
  408f53:	adc    DWORD PTR ds:0xb4f2ac6b,edi
  408f59:	mov    esi,0xefd0798
  408f5e:	mov    eax,0x438c6d14
  408f63:	les    ecx,FWORD PTR [edx-0x33]
  408f66:	sub    DWORD PTR ds:0x9a8f7a84,0xffffff84
  408f6d:	(bad)  
  408f6e:	daa    
  408f6f:	fcom   DWORD PTR [eax-0x6]
  408f72:	inc    ebp
  408f73:	jmp    0x92e4:0x2cef4301
  408f7a:	inc    edi
  408f7b:	mov    dl,0xa4
  408f7d:	int    0x43
  408f7f:	cdq    
  408f80:	jne    0x408f28
  408f82:	call   0x8b6726e4
  408f87:	add    eax,0x7a9cd92b
  408f8c:	aaa    
  408f8d:	sbb    edi,esp
  408f8f:	cld    
  408f90:	(bad)  
  408f91:	scas   eax,DWORD PTR es:[edi]
  408f92:	push   ebp
  408f93:	in     eax,dx
  408f94:	mov    dh,0x48
  408f96:	mov    eax,ds:0xf391c498
  408f9b:	aaa    
  408f9c:	inc    esp
  408f9d:	outs   dx,BYTE PTR ds:[esi]
  408f9e:	jmp    0x6ce302d7
  408fa3:	pop    esi
  408fa4:	jmp    0x408fd2
  408fa6:	scas   al,BYTE PTR es:[edi]
  408fa7:	push   edx
  408fa8:	xchg   edx,eax
  408fa9:	sar    BYTE PTR [edi-0x6d230326],1
  408faf:	cmp    BYTE PTR [edx+0x2b],dl
  408fb2:	fstp   DWORD PTR [ecx-0x3e958f1b]
  408fb8:	std    
  408fb9:	fadd   st(3),st
  408fbb:	fst    QWORD PTR [edx-0x9]
  408fbe:	or     al,0xf5
  408fc0:	mov    cl,0xab
  408fc2:	push   0x6f
  408fc4:	jmp    0x773a:0x78421797
  408fcb:	fadd   QWORD PTR [edx-0x279362b0]
  408fd1:	cld    
  408fd2:	mov    bl,0x4d
  408fd4:	scas   eax,DWORD PTR es:[edi]
  408fd5:	retf   0x954d
  408fd8:	sbb    BYTE PTR [edx+0x9],dl
  408fdb:	cmp    DWORD PTR [esi-0x6],edi
  408fde:	push   es
  408fdf:	adc    bl,dl
  408fe1:	in     al,0xf9
  408fe3:	pop    eax
  408fe4:	bnd jae 0x409032
  408fe7:	mov    WORD PTR [ebx-0x1ccfb381],cs
  408fed:	sbb    ebp,DWORD PTR [edi+edi*1-0x14]
  408ff1:	inc    eax
  408ff2:	aam    0x50
  408ff4:	push   0x13
  408ff6:	and    eax,0x713cb56a
  408ffb:	jb     0x408fcc
  408ffd:	xchg   ebx,eax
  408ffe:	sbb    DWORD PTR ds:0x1d2d1e73,esp
  409004:	sub    esi,DWORD PTR [eax-0x536c7490]
  40900a:	xor    dh,BYTE PTR [edi]
  40900c:	std    
  40900d:	or     BYTE PTR [ebx],bh
  40900f:	push   0x70bc062c
  409014:	inc    edi
  409015:	mov    dl,0xe5
  409017:	inc    ebp
  409018:	mov    ch,0x20
  40901a:	inc    esi
  40901b:	xabort 0xb8
  40901e:	pop    ss
  40901f:	and    BYTE PTR [eax-0x25ff95d2],dl
  409025:	inc    ecx
  409026:	mov    ds:0x20d12ca4,al
  40902b:	jne    0x409097
  40902d:	mov    DWORD PTR [edx-0x5ea3308d],eax
  409033:	dec    edi
  409034:	es xchg ebx,eax
  409036:	inc    edx
  409037:	stos   DWORD PTR es:[edi],eax
  409038:	sub    BYTE PTR [ebx+0x5ff9eb7f],bh
  40903e:	je     0x4090af
  409040:	mov    cl,BYTE PTR [edi-0x5f]
  409043:	inc    ebp
  409044:	loope  0x40900f
  409046:	addr16 das 
  409048:	mov    dl,0x3e
  40904a:	pop    ebx
  40904b:	lahf   
  40904c:	jae    0x40906e
  40904e:	test   al,cl
  409050:	imul   edx,eax,0x53
  409053:	cmp    DWORD PTR [ecx+0x13],ecx
  409056:	aam    0x4b
  409058:	fdivp  st(7),st
  40905a:	or     BYTE PTR [edx+0x16],dl
  40905d:	add    dh,bl
  40905f:	in     eax,dx
  409060:	enter  0x8db3,0xd5
  409064:	sbb    eax,0x8172b72c
  409069:	sbb    ecx,DWORD PTR [edx+0x1]
  40906c:	push   eax
  40906d:	pop    es
  40906e:	ss and al,0xa8
  409071:	xchg   ebx,eax
  409072:	outs   dx,DWORD PTR ds:[esi]
  409073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409074:	mov    edx,DWORD PTR [eax-0x72]
  409077:	rep lods eax,DWORD PTR ds:[esi]
  409079:	dec    edi
  40907a:	ja     0x409022
  40907c:	push   0x24
  40907e:	(bad)  
  40907f:	retf   
  409080:	mov    eax,ds:0x74c25aab
  409085:	mov    esp,0xac369590
  40908a:	or     dl,BYTE PTR [edi+0x24]
  40908d:	pop    ecx
  40908e:	push   cs
  40908f:	sahf   
  409090:	or     BYTE PTR [eax-0x23d32ae5],cl
  409096:	xchg   ebp,eax
  409097:	clc    
  409098:	cld    
  409099:	das    
  40909a:	push   ds
  40909b:	fs inc ebx
  40909d:	and    eax,0x4f2b35c6
  4090a2:	adc    al,0xbf
  4090a4:	push   cs
  4090a5:	jmp    0x40909d
  4090a7:	int3   
  4090a8:	dec    edx
  4090a9:	mov    DWORD PTR [ebx-0x5146382d],ebx
  4090af:	es aaa 
  4090b1:	xor    esi,DWORD PTR [edi]
  4090b3:	mov    ecx,0x47e973b
  4090b8:	sbb    eax,0x951a4735
  4090bd:	scas   al,BYTE PTR es:[edi]
  4090be:	cmp    eax,0x5f0ec9b
  4090c3:	cmp    DWORD PTR [ecx+ebx*1-0x69b77c55],esp
  4090ca:	add    edi,DWORD PTR [ebp+0x1c]
  4090cd:	dec    esp
  4090ce:	cs (bad) 
  4090d0:	add    DWORD PTR [edi],0x5e
  4090d3:	cwde   
  4090d4:	outs   dx,DWORD PTR ds:[esi]
  4090d5:	xchg   ecx,eax
  4090d6:	xor    DWORD PTR [edx+0x39],eax
  4090d9:	pop    ebx
  4090da:	repnz fist DWORD PTR fs:[edi+edx*2+0x61d2449b]
  4090e3:	outs   dx,DWORD PTR ds:[esi]
  4090e4:	xor    al,0xbe
  4090e6:	std    
  4090e7:	mov    dl,0x2b
  4090e9:	cmp    dl,dh
  4090eb:	(bad)  
  4090ed:	pop    eax
  4090ee:	out    0x49,al
  4090f0:	addr16 aam 0x26
  4090f3:	inc    eax
  4090f4:	pop    ss
  4090f5:	out    dx,al
  4090f6:	dec    ecx
  4090f7:	mov    ebx,0x7d9994e2
  4090fc:	addr16 xchg ebx,eax
  4090fe:	es fwait
  409100:	pop    edi
  409101:	cli    
  409102:	xor    al,0xb
  409104:	mov    eax,ds:0xac87580
  409109:	push   ds
  40910a:	mov    BYTE PTR [edx],al
  40910c:	retf   
  40910d:	setnp  BYTE PTR [ecx+0x18c16cd8]
  409114:	int    0x15
  409116:	mov    ds,esi
  409118:	pop    edx
  409119:	push   ebx
  40911a:	push   es
  40911b:	out    0xd9,eax
  40911d:	(bad)  
  40911f:	mov    ah,0x8e
  409121:	mov    dl,0x19
  409123:	sub    eax,0xbe7cfe32
  409128:	ds test eax,0x98c834e5
  40912e:	sub    DWORD PTR [ecx],ebp
  409130:	and    DWORD PTR [ecx+edi*8],ecx
  409133:	sub    al,0x96
  409135:	in     eax,dx
  409136:	lds    ecx,FWORD PTR [edx+0x2d052eaa]
  40913c:	pop    edx
  40913d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40913e:	mov    di,WORD PTR [ebp-0x73]
  409142:	jecxz  0x409156
  409144:	jg     0x40913b
  409146:	pop    ss
  409147:	add    al,0xdc
  409149:	mov    dl,0x58
  40914b:	xchg   esp,eax
  40914c:	outs   dx,BYTE PTR ds:[esi]
  40914d:	loopne 0x4091a3
  40914f:	cld    
  409150:	xor    DWORD PTR ds:0x8ad023c8,ebx
  409156:	dec    esi
  409157:	nop
  409158:	xor    eax,0x3ca3eb9e
  40915d:	lahf   
  40915e:	pop    esp
  40915f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409160:	adc    ebp,edi
  409162:	inc    edi
  409163:	sub    al,0x79
  409165:	enter  0x9c46,0xf2
  409169:	mov    dh,0xf2
  40916b:	cmp    bh,BYTE PTR [eax-0x16]
  40916e:	jne    0x4091ea
  409170:	mov    ecx,0xa3b75ff2
  409175:	jecxz  0x409111
  409177:	aas    
  409178:	mov    eax,ds:0x487c97c3
  40917d:	stos   DWORD PTR es:[edi],eax
  40917e:	pop    edx
  40917f:	test   eax,0x9ba14ac8
  409184:	arpl   WORD PTR ds:0xa38e85f5,bp
  40918a:	cmp    BYTE PTR [esi],0x12
  40918d:	push   esp
  40918e:	push   ss
  40918f:	dec    edi
  409190:	and    eax,0xae48888
  409195:	mov    al,ds:0xff032148
  40919a:	cdq    
  40919b:	jno    0x4091c7
  40919d:	adc    DWORD PTR [ecx],eax
  40919f:	shl    DWORD PTR [edi+ebp*1],0xd7
  4091a3:	shr    DWORD PTR [eax],cl
  4091a5:	imul   edi,DWORD PTR [esi],0x50b0a297
  4091ab:	ret    
  4091ac:	pop    es
  4091ad:	xchg   edx,eax
  4091ae:	das    
  4091af:	std    
  4091b0:	xchg   esp,eax
  4091b1:	ins    BYTE PTR es:[edi],dx
  4091b2:	cmp    DWORD PTR [edx],eax
  4091b4:	popf   
  4091b5:	sbb    DWORD PTR [ecx+0x27],edi
  4091b8:	jl     0x4091a1
  4091ba:	sub    edi,DWORD PTR [edi+0x61]
  4091bd:	xchg   ebp,eax
  4091be:	or     eax,0xa056ef83
  4091c3:	dec    edx
  4091c4:	jle    0x40915e
  4091c6:	in     eax,0x95
  4091c8:	test   BYTE PTR [esi+0x3b35c7f0],al
  4091ce:	cmp    DWORD PTR [edi+0x3c],edx
  4091d1:	mov    eax,ebp
  4091d3:	popf   
  4091d4:	cld    
  4091d5:	jnp    0x409161
  4091d7:	dec    edi
  4091d8:	cmp    dh,BYTE PTR ds:0x6a94b433
  4091de:	cmp    BYTE PTR [ecx],ah
  4091e0:	and    cl,BYTE PTR [edi+0x21]
  4091e3:	pop    esp
  4091e4:	loop   0x4091ee
  4091e6:	retf   0xa55d
  4091e9:	pop    ebx
  4091ea:	or     eax,0x6ba76faa
  4091ef:	mov    ch,BYTE PTR [ecx-0x775db6b9]
  4091f5:	xor    eax,0xb5599236
  4091fa:	pop    ebx
  4091fb:	mov    DWORD PTR [ebp+esi*8-0x52807318],ebx
  409202:	mov    ch,0x5f
  409204:	out    dx,al
  409205:	push   esi
  409206:	push   ebp
  409207:	jo     0x4091fc
  409209:	ret    0x14a4
  40920c:	adc    bh,BYTE PTR [esi+0x1170689c]
  409212:	and    esi,DWORD PTR [ecx+0x47]
  409215:	(bad)  
  409216:	repnz das 
  409218:	xchg   esi,eax
  409219:	sub    al,0xb7
  40921b:	idiv   BYTE PTR [bx+di-0x24]
  40921f:	mov    ds:0x95117ee7,eax
  409224:	adc    BYTE PTR [esi],dl
  409226:	pop    ebp
  409227:	shr    ecx,cl
  409229:	lahf   
  40922a:	and    eax,0xa10c54b3
  40922f:	and    edx,ebx
  409231:	add    eax,0xa7c8cd06
  409236:	or     ecx,edx
  409238:	retf   
  409239:	jbe    0x4091dc
  40923b:	iret   
  40923c:	sahf   
  40923d:	in     eax,dx
  40923e:	mov    ebp,0xb512cc80
  409243:	les    ebx,FWORD PTR [edi+ecx*1-0x49e1901]
  40924a:	push   eax
  40924b:	cmc    
  40924c:	test   al,0xf4
  40924e:	push   cs
  40924f:	dec    esp
  409250:	add    eax,0x8f96262c
  409255:	lods   al,BYTE PTR ds:[esi]
  409256:	scas   eax,DWORD PTR es:[edi]
  409257:	hlt    
  409258:	xchg   BYTE PTR [ecx+ebp*4-0x65cf317d],al
  40925f:	scas   eax,DWORD PTR es:[edi]
  409260:	int3   
  409261:	cwde   
  409262:	sbb    BYTE PTR [edx+0x52],ch
  409265:	icebp  
  409266:	mov    ebx,0x39205d9a
  40926b:	addr16 es pop ds
  40926e:	test   BYTE PTR [edx+0x1b80c106],dl
  409274:	ds nop
  409276:	in     eax,0x42
  409278:	mov    eax,0x9a1fa541
  40927d:	ja     0x40924f
  40927f:	inc    ecx
  409280:	add    edi,DWORD PTR [ebp-0x2f]
  409283:	mov    ah,bh
  409285:	pop    ds
  409286:	xor    BYTE PTR [ebp+0x2b],dh
  409289:	push   edx
  40928a:	push   0xdb940f5a
  40928f:	push   0xffffffb1
  409291:	ror    BYTE PTR [edi+ebx*4-0x6fe2df12],cl
  409298:	je     0x4092fd
  40929a:	dec    ebx
  40929b:	jge    0x4092fd
  40929d:	out    dx,eax
  40929e:	sub    esi,DWORD PTR [ebp-0x48]
  4092a1:	jnp    0x4092dd
  4092a3:	ja     0x409249
  4092a5:	mov    BYTE PTR [esi],cl
  4092a7:	ret    
  4092a8:	add    BYTE PTR [edi+eiz*8],dh
  4092ab:	test   DWORD PTR [edi+0x70],esi
  4092ae:	push   ds
  4092af:	jae    0x40926a
  4092b1:	mov    edi,0xb560d898
  4092b6:	sub    eax,0xd59bdc9d
  4092bb:	lea    ecx,ds:[esi-0x39]
  4092bf:	xchg   ebp,eax
  4092c0:	es ins BYTE PTR es:[edi],dx
  4092c2:	push   esp
  4092c3:	bound  edx,QWORD PTR [ebx+ebx*8+0x53ae286e]
  4092ca:	nop
  4092cb:	mov    bl,0x6
  4092cd:	pusha  
  4092ce:	into   
  4092cf:	shr    edx,1
  4092d1:	or     BYTE PTR [edi-0x25431047],dh
  4092d7:	bswap  ecx
  4092d9:	sub    cl,BYTE PTR [edi-0xa3fa324]
  4092df:	imul   esi,DWORD PTR [eax-0x69],0x9
  4092e3:	into   
  4092e4:	hlt    
  4092e5:	gs mov dl,dh
  4092e8:	push   esp
  4092e9:	outs   dx,BYTE PTR ds:[esi]
  4092ea:	xor    al,BYTE PTR [eax+0x1d5bd1a1]
  4092f0:	jl     0x4092a7
  4092f2:	push   esp
  4092f3:	dec    ebx
  4092f4:	repnz fwait
  4092f6:	ins    DWORD PTR es:[edi],dx
  4092f7:	sti    
  4092f8:	lds    esp,FWORD PTR [edx-0x46fbf4f3]
  4092fe:	adc    BYTE PTR [ecx+0x64],dl
  409301:	mov    ebp,0x907efa9
  409306:	xor    al,BYTE PTR [esp+eax*2-0xc]
  40930a:	pop    ebx
  40930b:	iret   
  40930c:	xor    al,0x67
  40930e:	push   edx
  40930f:	inc    esi
  409310:	jo     0x40929d
  409312:	inc    eax
  409313:	or     esi,edx
  409315:	in     al,0xc8
  409317:	add    BYTE PTR [edi-0x64],0x16
  40931b:	inc    esp
  40931c:	sub    edi,DWORD PTR [eax+0x58f0292d]
  409322:	fnstcw WORD PTR [edx+0x2]
  409325:	iret   
  409326:	popf   
  409327:	dec    esi
  409328:	in     al,0x6
  40932a:	ret    
  40932b:	add    bh,dl
  40932d:	xchg   esi,eax
  40932e:	test   DWORD PTR [edi],edi
  409330:	pop    es
  409331:	adc    eax,0x566f88d9
  409336:	nop
  409337:	out    0xbb,al
  409339:	push   ds
  40933a:	xor    cl,BYTE PTR [esp+eax*1-0x53ba3014]
  409341:	jo     0x40937c
  409343:	cdq    
  409344:	stc    
  409345:	sub    bh,cl
  409347:	jmp    0x54d1:0x5a4b210a
  40934e:	arpl   dx,ax
  409350:	mov    eax,ds:0xfd249d2d
  409355:	jnp    0x409343
  409357:	mov    cl,0x36
  409359:	and    esi,ebx
  40935b:	ret    0x3372
  40935e:	sbb    al,0x54
  409360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409361:	pop    edi
  409362:	push   edi
  409363:	retf   0xbd13
  409366:	fwait
  409367:	(bad)  
  409369:	pop    ebx
  40936a:	adc    DWORD PTR [eax+0x7e],0xf6935f16
  409371:	clc    
  409372:	xchg   ebp,eax
  409373:	or     cl,BYTE PTR [edx]
  409375:	cmp    edi,DWORD PTR [eax+0x31]
  409378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409379:	add    ch,cl
  40937b:	(bad)  
  40937d:	and    cl,BYTE PTR [edi]
  40937f:	sbb    bl,BYTE PTR [edx]
  409381:	adc    eax,0xbc778cbb
  409386:	mov    WORD PTR [ecx-0x7120f182],es
  40938c:	mov    ch,0xdf
  40938e:	mov    esp,0xec762806
  409393:	add    al,0x7d
  409395:	fldenv [esi-0x46]
  409398:	jmp    0xd8ae599a
  40939d:	int    0xa4
  40939f:	sbb    ch,dh
  4093a1:	addr16 loopne 0x40938d
  4093a4:	ss sahf 
  4093a6:	dec    edx
  4093a7:	test   BYTE PTR [esi+0x5a96529f],0x53
  4093ae:	out    dx,eax
  4093af:	cli    
  4093b0:	lock xchg ebp,eax
  4093b2:	sbb    al,0x95
  4093b4:	fistp  DWORD PTR [ebx+0x417861bc]
  4093ba:	xchg   edi,eax
  4093bb:	scas   al,BYTE PTR es:[edi]
  4093bc:	xor    al,BYTE PTR es:[eax-0x2b]
  4093c0:	inc    ebp
  4093c1:	jne    0x4093ec
  4093c3:	pop    ss
  4093c4:	mov    ebx,0xf6509205
  4093c9:	xor    ah,BYTE PTR [ecx+0x1c]
  4093cc:	jmp    0x4093ec
  4093ce:	push   0xb0030760
  4093d3:	mov    cl,0x35
  4093d5:	cmp    dl,BYTE PTR [ebp+0x57]
  4093d8:	add    DWORD PTR [esi+0x68],eax
  4093db:	mov    eax,0x27654675
  4093e0:	aaa    
  4093e1:	test   al,ch
  4093e3:	sub    al,BYTE PTR [eax-0x4cd9c326]
  4093e9:	cwde   
  4093ea:	sbb    ch,ch
  4093ec:	and    edi,0x8e54ff36
  4093f2:	rcl    BYTE PTR [edx],1
  4093f4:	in     al,dx
  4093f5:	push   es
  4093f6:	lea    esp,[edi-0x164f9853]
  4093fc:	jg     0x5cd9e965
  409402:	xchg   edx,eax
  409403:	xlat   BYTE PTR ds:[ebx]
  409404:	out    0x6a,al
  409406:	sbb    cl,cl
  409408:	mov    bh,0x63
  40940a:	mov    al,0xa3
  40940c:	jno    0x4093cf
  40940e:	fnstenv [edi]
  409410:	and    eax,0x7766f091
  409415:	sbb    BYTE PTR [eax-0x5414dbf],ch
  40941b:	and    bh,bh
  40941d:	fdivr  st,st(3)
  40941f:	in     al,dx
  409420:	dec    eax
  409421:	out    dx,eax
  409422:	test   BYTE PTR [edx],al
  409424:	xchg   edx,eax
  409425:	(bad)  
  409426:	dec    ebp
  409427:	cmc    
  409428:	test   eax,0xc2109ed6
  40942d:	sbb    BYTE PTR [ebx+0x7b],al
  409430:	mov    al,0xfb
  409432:	cli    
  409433:	les    edi,FWORD PTR [edx]
  409435:	mov    dl,0x15
  409437:	mov    esi,0x9c73c036
  40943c:	enter  0x9b01,0x9d
  409440:	mov    ebp,DWORD PTR [esi+0x3f]
  409443:	cli    
  409444:	or     BYTE PTR [ecx-0x7baf7dbe],ah
  40944a:	mov    ah,0x95
  40944c:	pop    esp
  40944d:	pop    edx
  40944e:	dec    eax
  40944f:	fwait
  409450:	jp     0x40946f
  409452:	sbb    al,0xc4
  409454:	dec    ebp
  409455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409456:	inc    ecx
  409457:	mov    ebp,0xbab82e21
  40945c:	lods   al,BYTE PTR ds:[esi]
  40945d:	cld    
  40945e:	mov    edx,0xb913fadc
  409463:	sbb    eax,0xf3cb68c9
  409468:	xchg   DWORD PTR [ebx+0x6b],eax
  40946b:	jbe    0x40946b
  40946d:	fmul   DWORD PTR [eax-0x15cb1db8]
  409473:	jmp    0x1267:0x48a2f569
  40947a:	popa   
  40947b:	iret   
  40947c:	jo     0x4094bd
  40947e:	inc    edi
  40947f:	xor    ecx,DWORD PTR [ecx+ebp*1]
  409482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409483:	fs adc ecx,ecx
  409486:	inc    esi
  409487:	cmp    DWORD PTR [edx+0x5a],0xffffff9b
  40948b:	data16 aam 0x5e
  40948e:	mov    ds:0x84aeba4e,al
  409493:	inc    bx
  409495:	enter  0x834e,0x2c
  409499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40949a:	jmp    0xe90cabc1
  40949f:	fst    QWORD PTR [edi+0x25]
  4094a2:	pop    esp
  4094a3:	jl     0x4094b8
  4094a5:	xor    edi,DWORD PTR [edx+ecx*2-0x6b20f1a5]
  4094ac:	cs test al,0x90
  4094af:	(bad)  
  4094b1:	dec    esp
  4094b2:	cdq    
  4094b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094b4:	and    ebx,DWORD PTR [edi]
  4094b6:	fisubr WORD PTR [edi+0x1ae1f904]
  4094bc:	fild   QWORD PTR [esi+0x18fb745]
  4094c2:	dec    ebx
  4094c3:	pop    ss
  4094c4:	stc    
  4094c5:	outs   dx,BYTE PTR ds:[esi]
  4094c6:	jb     0x4094b1
  4094c8:	out    0xfb,al
  4094ca:	xchg   BYTE PTR [esi],dh
  4094cc:	inc    ecx
  4094cd:	cli    
  4094ce:	ss jo  0x409522
  4094d1:	jno    0x4094ea
  4094d3:	mov    BYTE PTR gs:[esi],cl
  4094d6:	test   DWORD PTR ds:0xd6073ec2,esp
  4094dc:	or     ebx,ebp
  4094de:	fiadd  WORD PTR ss:[ecx]
  4094e1:	pop    esp
  4094e2:	vandnpd xmm0,xmm5,XMMWORD PTR [esi]
  4094e6:	rcl    DWORD PTR [edx],0x69
  4094e9:	xchg   edi,eax
  4094ea:	test   al,0x51
  4094ec:	and    DWORD PTR [esi-0x653a9ceb],0x26cfbbde
  4094f6:	rol    WORD PTR [esi-0x3e870683],1
  4094fd:	pop    esi
  4094fe:	stos   DWORD PTR es:[edi],eax
  4094ff:	jnp    0x409493
  409501:	cwde   
  409502:	std    
  409503:	dec    ecx
  409504:	ficom  WORD PTR [edi]
  409506:	mov    ds:0x73b6ebb7,al
  40950b:	jecxz  0x4094b7
  40950d:	fs fcmovnb st,st(2)
  409510:	in     al,0x6e
  409512:	sbb    edi,DWORD PTR [ecx]
  409514:	in     al,dx
  409515:	aaa    
  409516:	sbb    DWORD PTR [esi],eax
  409518:	dec    ecx
  409519:	aad    0x16
  40951b:	loopne 0x409593
  40951d:	sub    bl,BYTE PTR [ebx]
  40951f:	and    eax,0x71cf2a9
  409524:	jb     0x40952d
  409526:	fnstsw WORD PTR [ecx-0x11]
  409529:	jmp    0x409507
  40952b:	dec    esi
  40952c:	sbb    BYTE PTR [ecx],bh
  40952e:	pop    ss
  40952f:	not    DWORD PTR [edi-0x8]
  409532:	mov    ecx,0xedff6ba
  409537:	sahf   
  409538:	dec    edx
  409539:	sub    BYTE PTR [ebx],al
  40953b:	ja     0x409504
  40953d:	pop    eax
  40953e:	inc    esp
  40953f:	std    
  409540:	std    
  409541:	(bad)  
  409543:	popf   
  409544:	dec    esi
  409545:	ror    BYTE PTR [eax-0x756e31a0],0x5f
  40954c:	loopne 0x409539
  40954e:	sbb    esi,DWORD PTR [ebp+eiz*8-0xe]
  409552:	(bad)  
  409553:	frstor [esi-0xf]
  409556:	cdq    
  409557:	hlt    
  409558:	lds    ebp,FWORD PTR [ecx-0x4e]
  40955b:	clc    
  40955c:	inc    ebp
  40955d:	mov    ?,WORD PTR [edi+0x3d5c7893]
  409563:	in     eax,0x12
  409565:	jnp    0x40955d
  409567:	pop    es
  409568:	adc    al,0xc1
  40956a:	loopne 0x4094ff
  40956c:	pop    ecx
  40956d:	mov    bh,0xa9
  40956f:	outs   dx,BYTE PTR ds:[esi]
  409570:	adc    cl,al
  409572:	div    dh
  409574:	ret    
  409575:	dec    edi
  409576:	(bad)  
  409577:	sar    BYTE PTR [eax+0x4c],0x9f
  40957b:	outs   dx,DWORD PTR ds:[esi]
  40957c:	and    eax,0x15252931
  409581:	inc    eax
  409582:	sub    bh,BYTE PTR [ecx-0x3fc1a01e]
  409588:	add    eax,0xe7a052dd
  40958d:	test   al,0x38
  40958f:	jge    0x4095b3
  409591:	int    0x98
  409593:	sub    al,0x48
  409595:	xchg   esi,eax
  409596:	ja     0x409611
  409598:	mov    eax,ds:0xb2bfe72c
  40959d:	lea    edi,[ebx]
  40959f:	fsubr  st(3),st
  4095a1:	xor    DWORD PTR [edi+0x4f078b71],0x57e90af0
  4095ab:	mov    WORD PTR [edx-0x7e],?
  4095ae:	inc    esp
  4095af:	popa   
  4095b0:	stos   DWORD PTR es:[edi],eax
  4095b1:	adc    ah,ch
  4095b3:	stc    
  4095b4:	dec    edx
  4095b5:	fadd   QWORD PTR [edi+0x73]
  4095b8:	jmp    0x54c8:0x8f00425b
  4095bf:	add    eax,0x86057346
  4095c4:	jbe    0x409555
  4095c6:	shl    BYTE PTR [ebp+0x78],1
  4095c9:	shl    BYTE PTR [edx+0x60bd1561],0x2
  4095d0:	ficom  DWORD PTR [edi]
  4095d2:	repnz dec edx
  4095d4:	pop    ds
  4095d5:	repnz dec BYTE PTR [ecx]
  4095d8:	scas   eax,DWORD PTR es:[edi]
  4095d9:	scas   al,BYTE PTR es:[edi]
  4095da:	adc    ebx,ecx
  4095dc:	xor    edx,DWORD PTR [esi*4+0x6f85dbac]
  4095e3:	cmp    BYTE PTR [ecx+0x1495a59a],0x34
  4095ea:	jmp    0x2cff:0xb8cc33b
  4095f1:	lods   eax,DWORD PTR ds:[esi]
  4095f2:	neg    DWORD PTR [eax-0x13865aac]
  4095f8:	jmp    DWORD PTR ds:0x926b32a
  4095fe:	cmp    DWORD PTR [ecx-0x4bac276f],edi
  409604:	push   ds
  409605:	push   ebx
  409606:	loopne 0x409685
  409608:	dec    eax
  409609:	into   
  40960a:	cmp    ebp,edi
  40960c:	or     esp,eax
  40960e:	push   es
  40960f:	cmp    bh,BYTE PTR [edi-0x1c12988f]
  409615:	out    dx,al
  409616:	fild   DWORD PTR [eax-0x25]
  409619:	leave  
  40961a:	pushw  0xff9f
  40961d:	adc    DWORD PTR [ebx],0x9a3cadad
  409623:	pop    es
  409624:	cmp    eax,0xc916d75d
  409629:	and    bh,BYTE PTR [esi+0x7a]
  40962c:	jmp    0x40968e
  40962e:	pop    edx
  40962f:	mov    esp,0x9bb6f3db
  409634:	mov    eax,ds:0x530b5746
  409639:	mov    ecx,0x4b3ab500
  40963e:	adc    DWORD PTR [edx-0x5077c7c8],0x22
  409645:	jmp    0xe3853c29
  40964a:	test   bh,0xfb
  40964d:	out    dx,eax
  40964e:	push   eax
  40964f:	xlat   BYTE PTR ds:[ebx]
  409650:	mov    bl,0xee
  409652:	rcl    BYTE PTR [edi-0x67],0x6c
  409656:	aad    0x39
  409658:	hlt    
  409659:	pop    ebx
  40965a:	add    edi,DWORD PTR [edx+0x519ba85f]
  409660:	in     eax,dx
  409661:	inc    ebx
  409662:	in     al,0x19
  409664:	mov    BYTE PTR ds:0xcda14420,dh
  40966a:	inc    edx
  40966b:	add    esi,DWORD PTR [esi+0x78891084]
  409671:	sbb    eax,0x3a39b398
  409676:	call   0x1a7180b1
  40967b:	retf   0x1c4d
  40967e:	js     0x40964e
  409680:	pop    ecx
  409681:	and    eax,DWORD PTR [ecx]
  409683:	dec    esp
  409684:	mov    BYTE PTR [ebx+0x29],al
  409687:	adc    eax,0x94a7342
  40968c:	add    ah,BYTE PTR ds:0x21f4398f
  409692:	test   eax,0xb26563aa
  409697:	sbb    al,0x47
  409699:	push   ebp
  40969a:	pusha  
  40969b:	push   edx
  40969c:	mov    WORD PTR [edx+0x6b18bcb0],?
  4096a2:	into   
  4096a3:	fistp  DWORD PTR [eax-0x53cd1c67]
  4096a9:	ins    DWORD PTR es:[edi],dx
  4096aa:	jne    0x409680
  4096ac:	mov    ds:0x51be2278,eax
  4096b1:	test   DWORD PTR [esi-0x70],ecx
  4096b4:	mov    BYTE PTR [ebx+0x718d6d8c],cl
  4096ba:	ja     0x40966d
  4096bc:	pop    eax
  4096bd:	pop    DWORD PTR [esi+ecx*4]
  4096c0:	mov    cl,0xc7
  4096c2:	ins    BYTE PTR es:[edi],dx
  4096c3:	jp     0x40972a
  4096c5:	int    0x55
  4096c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096c8:	loope  0x409673
  4096ca:	arpl   WORD PTR [eax-0x41b9a547],si
  4096d0:	js     0x409669
  4096d2:	and    BYTE PTR [ebx],ah
  4096d4:	jns    0x4096fa
  4096d6:	push   eax
  4096d7:	scas   al,BYTE PTR es:[edi]
  4096d8:	and    edi,DWORD PTR [ebp-0x80]
  4096db:	or     BYTE PTR [ebp-0x29],cl
  4096de:	mov    esi,0x4d865304
  4096e3:	mov    ebp,0x39c51dd4
  4096e8:	fs xor eax,0x3f996ef1
  4096ee:	gs sbb al,0xa8
  4096f1:	fist   DWORD PTR [edi+ecx*4+0x39]
  4096f5:	cs loopne 0x409716
  4096f8:	loopne 0x409715
  4096fa:	pushf  
  4096fb:	rol    DWORD PTR [esi-0x12],cl
  4096fe:	push   es
  4096ff:	shr    DWORD PTR [ecx+0x3f],1
  409702:	inc    esi
  409703:	or     ah,ch
  409705:	sbb    DWORD PTR [edx+0x7e],ecx
  409708:	cld    
  409709:	adc    edx,esi
  40970b:	fcmove st,st(0)
  40970d:	adc    eax,0xc7115db
  409712:	add    DWORD PTR [ebx+0x45],ecx
  409715:	adc    eax,edx
  409717:	cwde   
  409718:	imul   BYTE PTR [ebx+eiz*4]
  40971b:	mov    eax,0x236c9544
  409720:	fidivr WORD PTR [ecx-0x4e]
  409723:	adc    eax,0xb08518eb
  409728:	cmc    
  409729:	pop    esp
  40972a:	stc    
  40972b:	test   eax,0x1398828f
  409730:	cmp    dh,dh
  409732:	mov    ah,0x7a
  409734:	mov    ch,0xaa
  409736:	outs   dx,BYTE PTR ds:[esi]
  409737:	aaa    
  409738:	lods   al,BYTE PTR ds:[esi]
  409739:	scas   al,BYTE PTR es:[edi]
  40973a:	inc    ebp
  40973b:	or     al,BYTE PTR [ebp+0x27]
  40973e:	and    ecx,ebx
  409740:	lods   eax,DWORD PTR ds:[esi]
  409741:	xchg   ebp,ecx
  409743:	add    ebx,DWORD PTR [edi+edx*4+0x557d92f3]
  40974a:	shl    DWORD PTR [edi-0x55],cl
  40974d:	mov    bl,0x6c
  40974f:	cdq    
  409750:	iret   
  409751:	pop    ebx
  409752:	sti    
  409753:	xchg   DWORD PTR [ecx+0x0],ebp
  409756:	retf   
  409757:	fimul  WORD PTR [ebx-0x30]
  40975a:	xlat   BYTE PTR ds:[ebx]
  40975b:	add    DWORD PTR [edx],0x2ff7c641
  409761:	jbe    0x409737
  409763:	mov    bh,0xf5
  409765:	lods   eax,DWORD PTR ds:[esi]
  409766:	jl     0x4097bc
  409768:	aas    
  409769:	or     ecx,DWORD PTR [eax]
  40976b:	out    dx,eax
  40976c:	retf   
  40976d:	jecxz  0x409795
  40976f:	pop    es
  409770:	lahf   
  409771:	ja     0x40976e
  409773:	push   0xffffffc6
  409775:	jecxz  0x40979a
  409777:	adc    eax,0x7ff5d14b
  40977c:	push   ebx
  40977d:	or     eax,0x74e9f01b
  409782:	fsubr  DWORD PTR [ebp-0x7ab46725]
  409788:	lock enter 0xf521,0x7a
  40978d:	gs std 
  40978f:	xchg   ebx,eax
  409790:	cmp    al,0xec
  409792:	xor    eax,0xb94cdc28
  409797:	addr16 iret 
  409799:	sti    
  40979a:	or     edi,DWORD PTR [edi-0x52ae0240]
  4097a0:	and    DWORD PTR ds:0xe9eb008b,ebx
  4097a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097a7:	sub    dl,BYTE PTR [esi+0xbe98b5f]
  4097ad:	mov    BYTE PTR [eax-0x1dfbd15],dh
  4097b3:	xchg   esp,eax
  4097b4:	jl     0x409792
  4097b6:	cwde   
  4097b7:	push   0x3f
  4097b9:	push   esi
  4097ba:	add    esi,DWORD PTR [edx+eax*4-0x4bb23435]
  4097c1:	mov    dh,0x62
  4097c3:	jns    0x409818
  4097c5:	push   ss
  4097c6:	mov    DWORD PTR [ecx-0x66f2cf96],eax
  4097cc:	mov    WORD PTR [ebx],gs
  4097ce:	mov    bh,0x6f
  4097d0:	jae    0x4097f2
  4097d2:	sub    esp,edx
  4097d4:	inc    ecx
  4097d6:	xchg   edi,eax
  4097d7:	out    dx,eax
  4097d8:	outs   dx,DWORD PTR ds:[esi]
  4097d9:	and    eax,0x1c7ea7d2
  4097de:	call   0x198f35d7
  4097e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097e4:	cmp    al,0x65
  4097e6:	dec    ecx
  4097e7:	push   ds
  4097e8:	dec    esp
  4097e9:	mov    edx,0xa29a2ca6
  4097ee:	popf   
  4097ef:	and    al,0xd6
  4097f1:	ja     0x40977e
  4097f3:	les    ecx,FWORD PTR [ebp-0x1e158e0]
  4097f9:	mov    es,WORD PTR [esi+eiz*8-0x57e5a15e]
  409800:	dec    BYTE PTR [ebx]
  409802:	mov    edi,0x4a949185
  409807:	mov    esp,0x891c92f5
  40980c:	call   DWORD PTR [edi+0x51]
  40980f:	sbb    eax,0xe21786f9
  409814:	xchg   edx,eax
  409815:	mov    esi,0x9118b065
  40981a:	pop    ss
  40981b:	stc    
  40981c:	add    al,0x7
  40981e:	jp     0x409844
  409820:	outs   dx,BYTE PTR ds:[esi]
  409821:	push   ecx
  409822:	(bad)  
  409823:	call   0xd4fe100
  409828:	sub    esp,DWORD PTR [ebx-0xde6f4b0]
  40982e:	mov    cl,0x1
  409830:	jg     0x409890
  409832:	jmp    FWORD PTR ds:[edi+0x3dba4233]
  409839:	test   eax,0x6e92846a
  40983e:	xor    al,0x29
  409840:	push   dx
  409842:	jle    0x409891
  409844:	ret    
  409845:	pop    ds
  409846:	inc    esi
  409847:	xchg   ecx,eax
  409848:	push   ds
  409849:	test   BYTE PTR ds:[eax-0x7f],ah
  40984d:	(bad)  
  40984e:	xchg   ebx,eax
  40984f:	mov    bl,0x45
  409851:	xchg   ebx,eax
  409852:	(bad)  
  409853:	clc    
  409854:	add    esp,DWORD PTR [eax+ebp*4+0x766be172]
  40985b:	add    edi,esi
  40985d:	pop    es
  40985e:	xor    al,0x40
  409860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409861:	ret    
  409862:	push   ds
  409863:	xchg   ebx,eax
  409864:	test   BYTE PTR [esi-0x25],bl
  409867:	push   edi
  409868:	add    esp,DWORD PTR ds:0x4b8392c9
  40986e:	fdiv   DWORD PTR [edi]
  409870:	lea    edi,[ecx+0x2a451386]
  409876:	and    BYTE PTR [edi],dh
  409878:	fisubr WORD PTR [ebx]
  40987a:	fidiv  WORD PTR [esi]
  40987c:	push   ebp
  40987d:	xchg   BYTE PTR [ebp+0x5c],ch
  409880:	rcr    BYTE PTR ds:0x3ebe4412,cl
  409886:	retf   0xdfa0
  409889:	mov    DWORD PTR [ebx],edx
  40988b:	xchg   esp,eax
  40988c:	mov    edi,0x6680ed97
  409891:	sahf   
  409892:	cmp    BYTE PTR [bp-0x21],dh
  409896:	dec    ecx
  409897:	test   ch,cl
  409899:	cmp    esi,ebx
  40989b:	cmp    al,0x5e
  40989d:	lock add ebp,ebx
  4098a0:	out    dx,eax
  4098a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a2:	cld    
  4098a3:	in     eax,0x98
  4098a5:	mov    ss,WORD PTR [esi-0x622bd857]
  4098ab:	push   es
  4098ac:	dec    ecx
  4098ad:	aaa    
  4098ae:	rcl    edx,cl
  4098b0:	enter  0xf173,0x35
  4098b4:	les    ebx,FWORD PTR [ebp-0x80]
  4098b7:	or     eax,0xf2b76628
  4098bc:	scas   eax,DWORD PTR es:[edi]
  4098bd:	add    DWORD PTR [esi+0x66],edx
  4098c0:	sbb    ecx,esi
  4098c2:	in     al,dx
  4098c3:	iret   
  4098c4:	mov    ecx,0x639ffb0f
  4098c9:	fnsave [ecx-0x3751ee88]
  4098cf:	fs js  0x409894
  4098d2:	into   
  4098d3:	cli    
  4098d4:	inc    ebx
  4098d5:	mov    bh,0x33
  4098d7:	xchg   esi,eax
  4098d8:	or     DWORD PTR [ebp-0x3f],esi
  4098db:	push   0xffffffd9
  4098dd:	test   DWORD PTR [edx+0x56],0xe241a7f2
  4098e4:	pop    ecx
  4098e5:	loope  0x409870
  4098e7:	jne    0x4098cb
  4098e9:	popf   
  4098ea:	mov    ch,0x8e
  4098ec:	mov    esp,0xa13c068b
  4098f1:	(bad)
  4098f4:	jns    0x4098f1
  4098f6:	js     0x409975
  4098f8:	std    
  4098f9:	rep stos BYTE PTR es:[edi],al
  4098fb:	and    DWORD PTR [ecx-0x2e],0x6c
  4098ff:	cwde   
  409900:	sub    al,0xdb
  409902:	ja     0x409893
  409904:	dec    esp
  409905:	(bad)  
  409906:	jle    0x4098a9
  409908:	push   esi
  409909:	or     ah,BYTE PTR [ecx-0xb]
  40990c:	hlt    
  40990d:	pop    edi
  40990e:	cwde   
  40990f:	adc    ah,BYTE PTR [eax]
  409911:	div    DWORD PTR [ebx]
  409913:	popf   
  409914:	sti    
  409915:	mov    ecx,0xe536284c
  40991a:	stc    
  40991b:	scas   eax,DWORD PTR es:[edi]
  40991c:	std    
  40991d:	fcom   DWORD PTR [ecx]
  40991f:	inc    ebx
  409920:	pop    esi
  409921:	ins    BYTE PTR es:[edi],dx
  409922:	jo     0x4098f9
  409924:	xor    al,0xb5
  409926:	push   eax
  409927:	(bad)  
  409928:	sahf   
  409929:	push   cs
  40992a:	leave  
  40992b:	aaa    
  40992c:	xor    DWORD PTR [edi-0x37],ebp
  40992f:	fadd   st,st(0)
  409931:	je     0x409920
  409933:	sub    BYTE PTR [esp+edx*4-0x43b2b883],cl
  40993a:	sub    edx,ebx
  40993c:	cs pop ebp
  40993e:	nop
  40993f:	mov    al,ds:0xeefe84db
  409944:	jmp    0xfca8:0xc7044a73
  40994b:	mov    ds:0x954651a4,eax
  409950:	hlt    
  409951:	lea    edi,[esi-0x5a62b58d]
  409957:	mov    eax,ds:0xaf07d530
  40995c:	scas   al,BYTE PTR es:[edi]
  40995d:	mov    BYTE PTR [ebx+0x10],bh
  409960:	js     0x4099a1
  409962:	pop    ebx
  409963:	xor    ecx,edi
  409965:	push   0x529dfda
  40996a:	cs mov esi,0x46e5bdf8
  409970:	jmp    0xb745:0x46c0688b
  409977:	test   eax,0x6dd37dae
  40997c:	pop    ebx
  40997d:	(bad)  
  40997e:	daa    
  40997f:	and    al,0xe5
  409981:	ss cdq 
  409983:	mov    ebp,DWORD PTR ds:0x74c3ebbd
  409989:	jnp    0x40992d
  40998b:	push   cs
  40998c:	mov    ecx,0x4dec7d2
  409991:	jp     0x409939
  409993:	mov    eax,ds:0xd66a86e2
  409998:	and    edi,ecx
  40999a:	and    eax,0x67465673
  40999f:	adc    dh,BYTE PTR [ecx+0xe5e39fb]
  4099a5:	test   DWORD PTR [edx-0x3a059a23],edx
  4099ab:	cmc    
  4099ac:	mov    dl,BYTE PTR [edi]
  4099ae:	dec    ebp
  4099af:	inc    edx
  4099b0:	mov    ebp,0xa74fe4b9
  4099b5:	enter  0x5eb1,0x33
  4099b9:	daa    
  4099ba:	ja     0x4099e0
  4099bc:	in     al,0xe2
  4099be:	cmp    al,0x73
  4099c0:	retf   
  4099c1:	outs   dx,DWORD PTR ds:[esi]
  4099c2:	inc    ecx
  4099c3:	pop    esi
  4099c4:	lea    edi,[ebx-0x795880e]
  4099ca:	addr16 call 0x8b598790
  4099d0:	sbb    BYTE PTR [esi],bl
  4099d2:	push   0xffffff86
  4099d4:	adc    eax,0x159cf636
  4099d9:	push   ebp
  4099da:	dec    edi
  4099db:	arpl   WORD PTR [esi],bp
  4099dd:	ds retf 0xdc7b
  4099e1:	ficom  WORD PTR [ecx-0x1c88b2a3]
  4099e7:	or     DWORD PTR [edx+0x2c],esp
  4099ea:	es jg  0x409977
  4099ed:	outs   dx,DWORD PTR ds:[esi]
  4099ee:	lods   al,BYTE PTR ds:[esi]
  4099ef:	imul   esp,eax,0xb3d326f0
  4099f5:	jnp    0x4099ff
  4099f7:	fild   WORD PTR ds:0x39def276
  4099fd:	add    DWORD PTR [ebx-0x2d108e2e],ecx
  409a03:	mov    ch,BYTE PTR [ecx]
  409a05:	adc    esi,DWORD PTR [edx+0x1a]
  409a08:	add    eax,0x519e371e
  409a0d:	sub    eax,edi
  409a0f:	jbe    0x4099c5
  409a11:	inc    esp
  409a12:	jle    0x4099dc
  409a14:	(bad)  
  409a16:	sub    eax,0x59b16d88
  409a1b:	cmp    esi,DWORD PTR [ebx]
  409a1d:	repz jle 0x4099cd
  409a20:	pop    esp
  409a21:	jmp    0x4099fd
  409a23:	mov    edx,0x46692b52
  409a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a29:	jmp    0x409a9b
  409a2b:	es adc cl,dh
  409a2e:	push   ebx
  409a2f:	cmp    edi,DWORD PTR [ebx]
  409a31:	in     eax,dx
  409a32:	lea    edx,[ecx-0x76]
  409a35:	scas   al,BYTE PTR es:[edi]
  409a36:	iret   
  409a37:	lahf   
  409a38:	mov    ds:0xbd69e80e,eax
  409a3d:	jg     0x409a85
  409a3f:	mul    DWORD PTR [eax]
  409a41:	out    dx,al
  409a42:	mov    ds:0x60060b69,al
  409a47:	inc    edi
  409a48:	les    esp,FWORD PTR [eax+ebp*2]
  409a4b:	(bad)  
  409a4c:	mov    eax,0x942cbbd1
  409a51:	add    BYTE PTR [ebx+0x60eef7ec],ah
  409a57:	in     al,dx
  409a58:	test   BYTE PTR [ecx+ebp*8+0x64],dh
  409a5c:	ds xchg ebp,eax
  409a5e:	dec    edi
  409a5f:	mov    ebp,0x9801774a
  409a64:	std    
  409a65:	dec    ebp
  409a66:	in     al,0x4e
  409a68:	retf   0xd619
  409a6b:	ret    
  409a6c:	inc    ecx
  409a6d:	xor    eax,0x7c5d7cff
  409a72:	jne    0x409a88
  409a74:	dec    edi
  409a75:	les    eax,FWORD PTR [eax-0x4c9b63c5]
  409a7b:	cmp    eax,0xbf230f44
  409a80:	push   0x2d5576b9
  409a85:	add    esi,ecx
  409a87:	mov    WORD PTR ds:0x98fe8c7f,gs
  409a8d:	fild   DWORD PTR [edi+0x11]
  409a90:	js     0x409a6c
  409a92:	sub    BYTE PTR [edi],ah
  409a94:	sub    al,ch
  409a96:	pusha  
  409a97:	out    dx,eax
  409a98:	(bad)  
  409a99:	push   edi
  409a9a:	sub    cl,BYTE PTR [edi-0x1212a115]
  409aa0:	aas    
  409aa1:	or     BYTE PTR [edx],cl
  409aa3:	pop    ebx
  409aa4:	(bad)  
  409aa5:	fldenv [ecx-0x61388965]
  409aab:	sub    al,0xff
  409aad:	xchg   esi,eax
  409aae:	mov    al,0x8b
  409ab0:	sbb    BYTE PTR [ebx+0x2f116a48],dh
  409ab6:	push   cs
  409ab7:	cdq    
  409ab8:	(bad)  
  409ab9:	jns    0x409a70
  409abb:	push   edi
  409abc:	push   edx
  409abd:	sub    BYTE PTR [edx-0x7e],dh
  409ac0:	jb     0x409b2b
  409ac2:	lea    ecx,[ebx]
  409ac4:	add    al,0x27
  409ac6:	rcr    bl,cl
  409ac8:	jno    0x409b46
  409aca:	add    dh,BYTE PTR [ebx]
  409acc:	cmp    al,0x54
  409ace:	sbb    al,0x7f
  409ad0:	or     BYTE PTR [eax],0x6a
  409ad3:	(bad)  
  409ad4:	jno    0x409a78
  409ad6:	or     BYTE PTR [esp+eax*1+0x6e],al
  409ada:	pop    ebp
  409adb:	xor    cl,BYTE PTR [ebx+0x6ab69c31]
  409ae1:	ins    DWORD PTR es:[edi],dx
  409ae2:	mov    fs,WORD PTR [esi]
  409ae4:	xchg   esp,eax
  409ae5:	(bad)  
  409ae6:	cmp    bl,BYTE PTR [edi-0x3a1fddfa]
  409aec:	dec    ebx
  409aed:	jge    0x409ab8
  409aef:	add    ch,BYTE PTR [eax]
  409af1:	or     edx,0x33
  409af4:	lods   eax,DWORD PTR ds:[esi]
  409af5:	test   BYTE PTR [edi+0x30],0xe8
  409af9:	retf   
  409afa:	cld    
  409afb:	repz jne 0x409b49
  409afe:	je     0x409ac3
  409b00:	or     al,BYTE PTR [esi+0x32]
  409b03:	push   ss
  409b04:	mov    esi,0xf74dced
  409b09:	xchg   DWORD PTR [ebx-0x1bbf8273],ecx
  409b0f:	dec    ebp
  409b10:	dec    esp
  409b11:	mov    ds:0x9a4266d,eax
  409b16:	ret    
  409b17:	fcom   QWORD PTR [eax-0x79]
  409b1a:	xor    ah,BYTE PTR [edi+0x5e500b97]
  409b20:	sbb    bh,BYTE PTR [eax+edx*1-0x5a]
  409b24:	xchg   BYTE PTR [edi],bh
  409b26:	push   0x35
  409b28:	push   esp
  409b29:	(bad)  
  409b2a:	sti    
  409b2b:	fwait
  409b2c:	xchg   edx,eax
  409b2d:	cmp    BYTE PTR [esi-0x76],dh
  409b30:	aaa    
  409b31:	cmp    eax,DWORD PTR [eax]
  409b33:	and    bl,BYTE PTR [esi+0x15]
  409b36:	xchg   esi,eax
  409b37:	mov    ?,WORD PTR [edx]
  409b39:	cmp    ebp,DWORD PTR [ebx+0x35]
  409b3c:	pop    esp
  409b3d:	popf   
  409b3e:	mov    ebx,0x346c0c5b
  409b43:	sar    BYTE PTR [ebp+eax*2+0x18],0xb0
  409b48:	mov    al,0xa7
  409b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b4b:	xchg   edi,eax
  409b4c:	loop   0x409b5e
  409b4e:	ret    0x5457
  409b51:	imul   ebx,DWORD PTR [esi],0x25
  409b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b55:	fmulp  st(4),st
  409b57:	(bad)  
  409b58:	mov    ebp,0x1412d04a
  409b5d:	jp     0x409b4a
  409b5f:	inc    edi
  409b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b61:	add    BYTE PTR [ebp+0x66],dh
  409b64:	in     al,dx
  409b65:	retf   
  409b66:	pop    ss
  409b67:	mov    ecx,0x372edc89
  409b6c:	ret    0x90f7
  409b6f:	(bad)  
  409b71:	and    eax,0x8fb12577
  409b76:	aam    0x73
  409b78:	pop    edi
  409b79:	int3   
  409b7a:	push   edx
  409b7b:	pop    eax
  409b7c:	ss hlt 
  409b7e:	push   ebx
  409b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b80:	push   esi
  409b82:	inc    esi
  409b83:	mov    ds:0x5d3e5f6e,eax
  409b88:	ins    DWORD PTR es:[edi],dx
  409b89:	cli    
  409b8a:	cmp    bh,al
  409b8c:	sbb    eax,0x2b6629fc
  409b91:	xor    BYTE PTR [ebp+0x35b75dc5],bh
  409b97:	shr    edx,0xa2
  409b9a:	jmp    0x2045:0xcd8053e9
  409ba1:	clc    
  409ba2:	pop    ds
  409ba3:	mov    esi,0xb730600d
  409ba8:	add    ah,BYTE PTR [eax]
  409baa:	add    DWORD PTR [ecx+0x25],eax
  409bad:	or     DWORD PTR [esi],ebp
  409baf:	push   es
  409bb0:	das    
  409bb1:	and    al,BYTE PTR [edi+ebx*8]
  409bb4:	pop    ds
  409bb5:	mov    eax,0x7944ba78
  409bba:	cwde   
  409bbb:	shl    DWORD PTR [ecx+0x25b12d94],1
  409bc1:	lods   eax,DWORD PTR fs:[esi]
  409bc3:	out    dx,al
  409bc4:	xchg   BYTE PTR [bp+si+0x3a],bl
  409bc8:	xor    bh,bh
  409bca:	sbb    cl,bh
  409bcc:	mov    dl,0xe8
  409bce:	into   
  409bcf:	xchg   ebp,eax
  409bd0:	outs   dx,DWORD PTR ds:[esi]
  409bd1:	dec    ebp
  409bd2:	or     BYTE PTR [ecx],cl
  409bd4:	xchg   edi,eax
  409bd5:	arpl   WORD PTR [eax],ax
  409bd7:	mov    ecx,0x996092b8
  409bdc:	outs   dx,BYTE PTR ds:[esi]
  409bdd:	pop    DWORD PTR [ebx+edx*8-0x30]
  409be1:	iret   
  409be2:	neg    DWORD PTR [esi-0x49c307fa]
  409be8:	fistp  QWORD PTR [ebx+ebp*2-0x40]
  409bec:	push   ebx
  409bed:	xchg   DWORD PTR cs:[ebp+0xa],ebx
  409bf1:	mov    es,WORD PTR [ecx+0x66f960cd]
  409bf7:	ins    BYTE PTR es:[edi],dx
  409bf8:	inc    edi
  409bf9:	pushf  
  409bfa:	xor    dl,BYTE PTR [edi+edi*8-0x4db07ddb]
  409c01:	(bad)  
  409c02:	lods   eax,DWORD PTR ds:[esi]
  409c03:	repz imul esp,DWORD PTR [ecx-0x5c],0x33
  409c08:	pop    ss
  409c09:	pop    eax
  409c0a:	and    edi,DWORD PTR [edi-0x4]
  409c0d:	test   DWORD PTR ds:0xd038b652,esp
  409c13:	mov    eax,ds:0xbfb92cb
  409c18:	jne    0x409bbb
  409c1a:	xor    esi,DWORD PTR [eax+0x3efa67ca]
  409c20:	aad    0x23
  409c22:	dec    edx
  409c23:	xchg   BYTE PTR [ebp+0xbde00f9],cl
  409c29:	jmp    0x886eb4b
  409c2e:	ss jg  0x409c50
  409c31:	outs   dx,BYTE PTR ds:[esi]
  409c32:	enter  0xaffc,0xf2
  409c36:	ss iret 
  409c38:	mov    WORD PTR [ebx+0x5b],?
  409c3b:	jecxz  0x409c88
  409c3d:	rol    BYTE PTR [edi+0x3e],cl
  409c40:	jg     0x409bc9
  409c42:	outs   dx,DWORD PTR ds:[esi]
  409c43:	sub    dl,BYTE PTR [ebx]
  409c45:	fwait
  409c46:	xlat   BYTE PTR ds:[ebx]
  409c47:	dec    eax
  409c48:	inc    ecx
  409c49:	xor    DWORD PTR [ebp-0x6630e9fd],edi
  409c4f:	(bad)  
  409c50:	push   ebp
  409c51:	jno    0x409c8b
  409c53:	adc    DWORD PTR [ebx],ecx
  409c55:	add    eax,0xe2546329
  409c5a:	aas    
  409c5b:	ss xchg ecx,eax
  409c5d:	mov    ds:0xa862d04e,eax
  409c62:	or     BYTE PTR [esi-0x6e514f7d],dh
  409c68:	out    dx,al
  409c69:	in     eax,dx
  409c6a:	std    
  409c6b:	xor    ebx,DWORD PTR [esi+0x31aac683]
  409c71:	xchg   edi,eax
  409c72:	(bad)  
  409c73:	cmp    BYTE PTR [edx+0x4],dh
  409c76:	jl     0x409c71
  409c78:	adc    al,0x7d
  409c7a:	inc    ebp
  409c7b:	jne    0x409c41
  409c7d:	xchg   edx,eax
  409c7e:	mov    edx,0xf317c721
  409c83:	mov    bh,0xef
  409c85:	sub    BYTE PTR [eiz*2+0x200cc282],bh
  409c8c:	and    esp,DWORD PTR [esi-0x28]
  409c8f:	lahf   
  409c90:	mov    eax,ds:0xa876774e
  409c95:	xchg   DWORD PTR [ecx+0x7b185b2d],eax
  409c9b:	sar    DWORD PTR [esi+0x71],cl
  409c9e:	jecxz  0x409c25
  409ca0:	out    0xb4,eax
  409ca2:	sub    al,0xa9
  409ca4:	pop    ss
  409ca5:	icebp  
  409ca6:	mov    eax,ds:0xcfd62e80
  409cab:	sbb    edi,esp
  409cad:	test   eax,0x52806cda
  409cb2:	push   ebp
  409cb3:	fwait
  409cb4:	icebp  
  409cb5:	add    al,0x78
  409cb7:	xchg   DWORD PTR [ebx+edi*2],esp
  409cba:	test   al,0x4d
  409cbc:	dec    ecx
  409cbd:	lock mov BYTE PTR [edx-0x73],bl
  409cc1:	(bad)  
  409cc2:	xor    eax,ebx
  409cc4:	xor    al,BYTE PTR [edx+0x3216b269]
  409cca:	add    bl,BYTE PTR [edx-0x17588ab3]
  409cd0:	imul   BYTE PTR [edx]
  409cd2:	mov    eax,ds:0x69852455
  409cd7:	xchg   edi,eax
  409cd8:	cmp    dl,dl
  409cda:	jge    0x409d1c
  409cdc:	daa    
  409cdd:	fild   WORD PTR [edi-0x4c]
  409ce0:	adc    esp,DWORD PTR [edx-0x63871cac]
  409ce6:	push   0xfffffffc
  409ce8:	jecxz  0x409cea
  409cea:	inc    ebp
  409ceb:	fdivr  st,st(3)
  409ced:	push   DWORD PTR [ebx+esi*4-0x12]
  409cf1:	pushf  
  409cf2:	cmp    DWORD PTR [ebx-0x5d],eax
  409cf5:	push   edx
  409cf6:	add    cl,dl
  409cf8:	ja     0x409d24
  409cfa:	mov    ch,BYTE PTR [ecx-0x6d]
  409cfd:	iret   
  409cfe:	adc    eax,0x1ba773eb
  409d03:	mov    al,ds:0x4803c82d
  409d08:	jle    0x409cce
  409d0a:	xlat   BYTE PTR ds:[ebx]
  409d0b:	in     eax,dx
  409d0c:	mov    ah,0x8b
  409d0e:	push   edi
  409d0f:	sar    DWORD PTR [ebx+0x7d19d303],1
  409d15:	mov    cl,0xdb
  409d17:	dec    esp
  409d18:	outs   dx,BYTE PTR ds:[esi]
  409d19:	or     al,0xa9
  409d1b:	xchg   DWORD PTR [eax-0x4d],esp
  409d1e:	aad    0x7f
  409d20:	ins    BYTE PTR es:[edi],dx
  409d21:	mov    BYTE PTR [ecx],ah
  409d23:	push   ss
  409d24:	in     eax,0x1e
  409d26:	daa    
  409d27:	(bad)  
  409d28:	fs adc ah,cl
  409d2b:	test   al,0x60
  409d2d:	jnp    0x409cbc
  409d2f:	addr16 mov al,ds:0x6a1a
  409d33:	ins    DWORD PTR es:[edi],dx
  409d34:	in     eax,dx
  409d35:	sub    bh,BYTE PTR [edx+ebx*4-0x590807f]
  409d3c:	sub    eax,0xf52c2da1
  409d41:	data16 fstp DWORD PTR [ebx+0x20]
  409d45:	mov    esi,0x9e568ea3
  409d4a:	or     BYTE PTR [ebp+0x4b],ch
  409d4d:	jbe    0x409dab
  409d4f:	in     al,0x7e
  409d51:	push   esi
  409d52:	stc    
  409d53:	test   DWORD PTR [edx-0x280ac6d4],ebx
  409d59:	inc    ebp
  409d5a:	push   0xffffff9f
  409d5c:	xor    BYTE PTR ds:0x8216596a,0xc0
  409d63:	imul   ebx,DWORD PTR [edi],0x40
  409d66:	ss sahf 
  409d68:	les    esp,FWORD PTR [eax]
  409d6a:	sub    ecx,DWORD PTR [ecx+0x5]
  409d6d:	(bad)  
  409d6e:	pusha  
  409d6f:	test   BYTE PTR es:[ecx],dh
  409d72:	mov    edi,0x34997b9e
  409d77:	mov    al,ds:0x73592bc9
  409d7c:	xor    al,0xb0
  409d7e:	stos   BYTE PTR es:[edi],al
  409d7f:	mov    eax,0x7ccd2cab
  409d84:	mov    ebp,0x8bf2e2ad
  409d89:	scas   al,BYTE PTR es:[edi]
  409d8a:	push   edx
  409d8b:	or     eax,0x1a468556
  409d90:	inc    eax
  409d91:	lea    bp,[ebx-0x4a011779]
  409d98:	into   
  409d99:	sbb    al,0x4f
  409d9b:	adc    esi,DWORD PTR [ebx]
  409d9d:	jo     0x409dd2
  409d9f:	push   0x34e3cc7f
  409da4:	pop    ebp
  409da5:	retf   
  409da6:	scas   al,BYTE PTR es:[edi]
  409da7:	inc    ebx
  409da8:	cs sahf 
  409daa:	cs nop
  409dac:	adc    BYTE PTR [ecx-0x18],dl
  409daf:	push   ecx
  409db0:	cmp    BYTE PTR [eax+0x18ad77d6],bh
  409db6:	in     eax,0x1a
  409db8:	mov    dh,dl
  409dba:	in     eax,0x47
  409dbc:	jmp    0x8e125f86
  409dc1:	sbb    esp,ecx
  409dc3:	sar    BYTE PTR [ecx+0x74],cl
  409dc6:	into   
  409dc7:	and    al,0x47
  409dc9:	outs   dx,DWORD PTR ds:[esi]
  409dca:	xor    al,0xb9
  409dcc:	shl    ecx,1
  409dce:	fbld   TBYTE PTR [ebp-0x1b7d772]
  409dd4:	mov    ebx,0x7cdaa8d7
  409dd9:	fistp  WORD PTR [esi-0x6d089528]
  409ddf:	mov    bl,0x1c
  409de1:	pop    ds
  409de2:	xchg   bl,bl
  409de4:	xor    bh,ch
  409de6:	es jmp 0x409e27
  409de9:	stos   DWORD PTR es:[edi],eax
  409dea:	xlat   BYTE PTR ds:[ebx]
  409deb:	pop    ss
  409dec:	lods   eax,DWORD PTR ds:[esi]
  409ded:	jo     0x409de0
  409def:	mov    esi,0xb5c6f8de
  409df4:	not    BYTE PTR [ebx-0x60f902f7]
  409dfa:	mov    ds:0xdc8561cf,eax
  409dff:	sub    eax,ecx
  409e01:	jmp    0x409d96
  409e03:	data16 (bad) 
  409e05:	hlt    
  409e06:	ficom  DWORD PTR [ebx+0x52265d72]
  409e0c:	ins    DWORD PTR es:[edi],dx
  409e0d:	xor    bh,BYTE PTR [esi+0xf724ce6]
  409e13:	int3   
  409e14:	xor    al,0xd5
  409e16:	pushf  
  409e17:	ins    DWORD PTR es:[edi],dx
  409e18:	ret    
  409e19:	int    0x72
  409e1b:	out    0x86,eax
  409e1d:	sbb    edi,ebp
  409e1f:	jbe    0x409e90
  409e21:	push   cs
  409e22:	sysret 
  409e24:	push   ss
  409e25:	sbb    DWORD PTR [edi-0x67],edx
  409e28:	mov    al,ds:0xef9e8250
  409e2d:	aaa    
  409e2e:	jbe    0x409e8f
  409e30:	and    ah,BYTE PTR [edx-0x75b861ed]
  409e36:	ja     0x409e71
  409e38:	fnstenv [ebx+0x1360f71d]
  409e3e:	sub    bl,BYTE PTR [edx]
  409e40:	aam    0xee
  409e42:	in     al,dx
  409e43:	hlt    
  409e44:	adc    al,0x3f
  409e46:	xchg   ebp,eax
  409e47:	ja     0x409e50
  409e49:	sar    DWORD PTR [eax-0x50b15c70],0x36
  409e50:	sbb    ah,dl
  409e52:	adc    DWORD PTR [ecx],esi
  409e54:	push   0x9f3c44f6
  409e59:	sub    al,BYTE PTR [ecx]
  409e5b:	adc    BYTE PTR [ecx+0x9ee5d9f],dh
  409e61:	retf   0xbe56
  409e64:	repz pop es
  409e66:	push   0xffffffae
  409e68:	mov    edx,0x7fbc3fc1
  409e6d:	repnz aam 0x3
  409e70:	mov    bl,0x14
  409e72:	test   dl,bl
  409e74:	lahf   
  409e75:	in     al,dx
  409e76:	les    ecx,FWORD PTR es:[edx+esi*2]
  409e7a:	(bad)  
  409e7b:	(bad)  
  409e7d:	pushf  
  409e7e:	lods   al,BYTE PTR ds:[esi]
  409e7f:	mov    eax,ds:0x268e6ced
  409e84:	mov    dh,0x3a
  409e86:	loop   0x409edb
  409e88:	xchg   edi,eax
  409e89:	data16 aaa 
  409e8b:	stos   BYTE PTR es:[edi],al
  409e8c:	es std 
  409e8e:	xchg   esp,eax
  409e8f:	cs cli 
  409e91:	fwait
  409e92:	mov    dh,0x59
  409e94:	dec    esi
  409e95:	fmul   QWORD PTR [ecx+0x6cce63b4]
  409e9b:	and    esi,esp
  409e9d:	and    DWORD PTR [ecx+0x10078137],esp
  409ea3:	sbb    al,0x83
  409ea5:	iret   
  409ea6:	pop    es
  409ea7:	call   0xaf578ee5
  409eac:	into   
  409ead:	push   esp
  409eae:	loop   0x409f19
  409eb0:	fwait
  409eb1:	or     edi,edi
  409eb3:	lock (bad) 
  409eb6:	jae    0x409e8a
  409eb8:	xchg   esp,eax
  409eb9:	test   DWORD PTR [eax-0x7c42e436],esp
  409ebf:	xor    cl,dl
  409ec1:	or     DWORD PTR [eax-0x72],esi
  409ec4:	lods   eax,DWORD PTR ds:[esi]
  409ec5:	jmp    0x4105:0xb01b8e40
  409ecc:	push   edx
  409ecd:	lock (bad) 
  409ecf:	xchg   ebx,eax
  409ed0:	jbe    0x409e6d
  409ed2:	sbb    dh,ah
  409ed4:	out    0xa,al
  409ed6:	stos   BYTE PTR es:[edi],al
  409ed7:	clc    
  409ed8:	dec    esp
  409ed9:	mov    ecx,DWORD PTR es:[ebp-0x30]
  409edd:	xor    eax,esi
  409edf:	add    eax,edi
  409ee1:	cmp    ecx,eax
  409ee3:	je     0x409f21
  409ee9:	jmp    0x409f12
  409eee:	mov    eax,DWORD PTR [ebp-0x4]
  409ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  409ef4:	xor    eax,esi
  409ef6:	add    eax,edi
  409ef8:	cmp    ecx,eax
  409efa:	mov    eax,DWORD PTR [ebp-0x4]
  409efd:	je     0x40c2e1
  409f03:	mov    ecx,DWORD PTR [ebp-0x38]
  409f06:	xor    eax,esi
  409f08:	add    eax,edi
  409f0a:	cmp    ecx,eax
  409f0c:	je     0x40c2ea
  409f12:	lea    eax,[ebp-0x8]
  409f15:	push   eax
  409f16:	push   DWORD PTR [ebp-0x30]
  409f19:	push   DWORD PTR [ebp+0xc]
  409f1c:	call   0x41169e
  409f21:	mov    eax,DWORD PTR [ebp-0x4]
  409f24:	mov    ecx,DWORD PTR [ebp-0x8]
  409f27:	jmp    0x40c2ac
  409f2c:	inc    DWORD PTR [ebp+edi*2+0x29]
  409f30:	(bad)
  409f33:	je     0x409f70
  409f35:	fs and eax,0x81f10ef0
  409f3b:	mov    cl,0x32
  409f3d:	add    BYTE PTR [edx+0x7a],bh
  409f40:	add    bl,BYTE PTR [edi+0x7a]
  409f43:	jp     0x409f06
  409f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f46:	sbb    ch,al
  409f48:	dec    edi
  409f49:	sub    al,0x6c
  409f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f4c:	(bad)  
  409f4d:	enter  0x1a65,0x12
  409f51:	cmp    edi,DWORD PTR [edi]
  409f53:	mov    al,ds:0x8cf7b29e
  409f58:	xor    eax,0xd5e84a04
  409f5d:	pop    ss
  409f5e:	mov    ch,0xb6
  409f60:	jae    0x409f0b
  409f62:	jecxz  0x409f88
  409f64:	mov    dl,0x71
  409f66:	xor    BYTE PTR [eax+0x48],0x4a
  409f6a:	xchg   DWORD PTR [ebp-0x68],ecx
  409f6d:	mov    ebx,esp
  409f6f:	rol    BYTE PTR [esi],0x29
  409f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f73:	pop    ebx
  409f74:	sahf   
  409f75:	das    
  409f76:	fsub   QWORD PTR [ecx+ebx*2]
  409f79:	and    esp,DWORD PTR [ebx-0xc]
  409f7c:	push   ds
  409f7d:	or     eax,0x23501193
  409f82:	xchg   DWORD PTR [edi-0x5b],ebp
  409f85:	sbb    ah,ch
  409f87:	lahf   
  409f88:	add    DWORD PTR [ecx-0x45],esi
  409f8b:	es push ss
  409f8d:	xor    ah,dh
  409f8f:	das    
  409f90:	xor    dl,BYTE PTR [eax-0xd71fda1]
  409f96:	adc    al,dl
  409f98:	pop    eax
  409f99:	(bad)  
  409f9a:	mov    cl,0xd8
  409f9c:	jbe    0x409f6a
  409f9e:	inc    ebp
  409f9f:	lods   al,BYTE PTR ds:[esi]
  409fa0:	outs   dx,DWORD PTR ds:[esi]
  409fa1:	popf   
  409fa2:	jmp    0xd1bba9c9
  409fa7:	mov    dl,0x76
  409fa9:	dec    edi
  409faa:	bound  edx,QWORD PTR [edi+0x7ff9a789]
  409fb0:	dec    ebp
  409fb1:	add    eax,0x3667fbf4
  409fb6:	push   edx
  409fb7:	mov    cl,0xb7
  409fb9:	push   edi
  409fba:	mov    edx,0x6cec1c43
  409fbf:	cwde   
  409fc0:	ret    
  409fc1:	leave  
  409fc2:	call   0xa7741a6e
  409fc7:	in     al,dx
  409fc8:	shl    ah,0x5e
  409fcb:	lods   al,BYTE PTR ds:[esi]
  409fcc:	or     eax,0x6000f14e
  409fd1:	mov    es,WORD PTR [esi+0x9]
  409fd4:	dec    ebp
  409fd5:	idiv   BYTE PTR [edx-0x51]
  409fd8:	mov    al,0x6e
  409fda:	into   
  409fdb:	mul    BYTE PTR [esi-0x2c]
  409fde:	scas   eax,DWORD PTR es:[edi]
  409fdf:	push   esp
  409fe0:	pop    ecx
  409fe1:	clc    
  409fe2:	and    ebp,eax
  409fe4:	mov    cl,0x16
  409fe6:	icebp  
  409fe7:	(bad)  
  409fe8:	sbb    eax,0xfdf53aef
  409fed:	and    DWORD PTR [ecx+edx*8+0x56],ebp
  409ff1:	gs add al,0x46
  409ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ff5:	sub    DWORD PTR ds:0x345ffadf,0x37
  409ffc:	retf   0x494e
  409fff:	add    edi,esp
  40a001:	call   0x9f36:0x9261e5c3
  40a008:	xchg   ebp,eax
  40a009:	addr16 out 0x1d,eax
  40a00c:	mov    ebp,0xc4806156
  40a011:	les    ebp,FWORD PTR [eax]
  40a013:	cmc    
  40a014:	xchg   DWORD PTR [ebx+0x6f638204],edx
  40a01a:	push   esi
  40a01b:	xor    BYTE PTR [ecx-0xc6c5d2d],dl
  40a021:	sub    edi,eax
  40a023:	es rep ins BYTE PTR es:[edi],dx
  40a026:	jge    0x409fb2
  40a028:	shl    DWORD PTR [ebp-0x78],1
  40a02b:	fisttp DWORD PTR [edi]
  40a02d:	daa    
  40a02e:	scas   al,BYTE PTR es:[edi]
  40a02f:	shl    BYTE PTR ds:0x18fd7371,cl
  40a035:	data16 cs fcomip st,st(1)
  40a039:	dec    BYTE PTR [edx-0xe]
  40a03c:	push   esp
  40a03d:	nop
  40a03e:	fs mov edx,fs
  40a041:	sub    al,0x47
  40a043:	mov    ebp,0x813058b2
  40a048:	mov    ah,0xb3
  40a04a:	in     al,dx
  40a04b:	out    dx,al
  40a04c:	call   0x36a7:0xe92c98f6
  40a053:	push   ecx
  40a054:	shl    DWORD PTR [edx],cl
  40a056:	pop    esi
  40a057:	and    eax,0x4763d447
  40a05c:	pop    edi
  40a05d:	add    BYTE PTR [edi+0xc],dh
  40a060:	mov    dh,0xf8
  40a062:	or     ah,0x70
  40a065:	mov    ebx,0xfb65b4de
  40a06a:	or     ch,BYTE PTR [esi]
  40a06c:	sub    eax,0xf4cc746a
  40a071:	into   
  40a072:	aas    
  40a073:	inc    esi
  40a074:	loop   0x40a062
  40a076:	fdiv   DWORD PTR [esi-0x21]
  40a079:	mov    eax,ds:0x23ba3e5
  40a07e:	out    0x10,al
  40a080:	(bad)  
  40a082:	lahf   
  40a083:	pop    ebx
  40a084:	loop   0x40a050
  40a086:	daa    
  40a087:	xor    dl,BYTE PTR [edi]
  40a089:	jl     0x40a0d1
  40a08b:	xor    BYTE PTR [ecx],bl
  40a08d:	sahf   
  40a08e:	push   es
  40a08f:	jg     0x40a0aa
  40a091:	shl    DWORD PTR [ebp-0x6056a4a9],0xb0
  40a098:	repz mov edi,esp
  40a09b:	and    ah,dl
  40a09d:	cmp    eax,0xe05f40a1
  40a0a2:	hlt    
  40a0a3:	mov    dh,0xc4
  40a0a5:	pop    ecx
  40a0a6:	push   0x8fff97be
  40a0ab:	mul    DWORD PTR [edx+0x62e4d17d]
  40a0b1:	pop    esp
  40a0b2:	jns    0x40a05a
  40a0b4:	fistp  WORD PTR [eax]
  40a0b6:	ds dec eax
  40a0b8:	push   edi
  40a0b9:	add    DWORD PTR [ebx],edi
  40a0bb:	xchg   edi,eax
  40a0bc:	or     BYTE PTR ds:0x3b873989,ah
  40a0c2:	sbb    eax,0x6403e5a0
  40a0c7:	pop    ebp
  40a0c8:	and    ecx,DWORD PTR [edi+0x36]
  40a0cb:	or     BYTE PTR [ecx+0x622661a8],bl
  40a0d1:	jle    0x40a0ed
  40a0d3:	mov    ds:0x9e793dfc,al
  40a0d8:	loop   0x40a116
  40a0da:	xchg   edx,eax
  40a0db:	scas   eax,DWORD PTR es:[edi]
  40a0dc:	push   0xbc0c16f8
  40a0e1:	les    ebp,FWORD PTR [edx]
  40a0e3:	xor    bl,BYTE PTR [eax+0x57]
  40a0e6:	jmp    0x40a0d1
  40a0e8:	mov    DWORD PTR [eax+eax*4+0x34],edx
  40a0ec:	imul   edx,DWORD PTR [ebp+0x38acc4fe],0xa8e8dd28
  40a0f6:	adc    bh,BYTE PTR ds:0x7c9fac27
  40a0fc:	mov    ch,0x15
  40a0fe:	and    al,0xb0
  40a100:	in     eax,dx
  40a101:	mov    ebp,0x34c22c81
  40a106:	mov    ?,ebp
  40a108:	pop    edx
  40a109:	xor    eax,DWORD PTR [edi+0x31]
  40a10c:	in     al,dx
  40a10d:	in     eax,0x12
  40a10f:	adc    bl,dh
  40a111:	inc    ebx
  40a112:	and    eax,DWORD PTR [esp+eax*4+0x6c]
  40a116:	cmp    DWORD PTR [edx+0x30],ecx
  40a119:	das    
  40a11a:	jo     0x40a137
  40a11c:	mov    edx,0x71933e09
  40a121:	outs   dx,DWORD PTR ds:[esi]
  40a122:	in     eax,dx
  40a123:	(bad)  
  40a124:	xor    DWORD PTR [esi-0x48c6348c],ebp
  40a12a:	xor    esp,ebp
  40a12c:	pusha  
  40a12d:	pushf  
  40a12e:	push   eax
  40a12f:	push   DWORD PTR [edi]
  40a131:	push   ss
  40a132:	lock mov DWORD PTR gs:[esi-0x4b],esi
  40a137:	mov    ds:0xfd7611a8,eax
  40a13c:	add    DWORD PTR [eax-0x8],0x31e88f9b
  40a143:	jp     0x40a198
  40a145:	cmp    BYTE PTR [edx+0x5e],al
  40a148:	shl    eax,0xa0
  40a14b:	pop    edi
  40a14c:	jmp    0x904f6e39
  40a151:	scas   al,BYTE PTR es:[edi]
  40a152:	xchg   DWORD PTR [esi],edx
  40a154:	jge    0x40a123
  40a156:	cdq    
  40a157:	push   0x903e6548
  40a15c:	les    edi,FWORD PTR [esi+ebx*1]
  40a15f:	scas   eax,DWORD PTR es:[edi]
  40a160:	iret   
  40a161:	cpuid  
  40a163:	aaa    
  40a164:	and    al,0x27
  40a166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a167:	adc    BYTE PTR [ebp-0x6a891683],dl
  40a16d:	shl    ah,cl
  40a16f:	pop    esi
  40a170:	dec    ebp
  40a171:	rcl    BYTE PTR [ebx-0x30],1
  40a174:	inc    ecx
  40a175:	jbe    0x40a162
  40a177:	(bad)  
  40a179:	push   es
  40a17a:	mov    al,0x8a
  40a17c:	jae    0x40a1f4
  40a17e:	xchg   edi,eax
  40a17f:	icebp  
  40a180:	std    
  40a181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a182:	cmp    BYTE PTR [ecx],dl
  40a184:	test   al,0xf5
  40a186:	push   ds
  40a187:	lea    edi,[edi]
  40a189:	dec    edx
  40a18a:	es repz dec edx
  40a18d:	shl    ah,0x46
  40a190:	loopne 0x40a1f5
  40a192:	xchg   BYTE PTR ds:0x8b0a22bc,ah
  40a198:	inc    ebp
  40a199:	fsub   DWORD PTR [eax]
  40a19b:	or     ecx,ecx
  40a19d:	mov    ch,0xa
  40a19f:	or     DWORD PTR [ebx-0x28936f31],ebx
  40a1a5:	mov    eax,ds:0xbf83f5e5
  40a1aa:	push   0x29
  40a1ac:	enter  0xb8e1,0x8c
  40a1b0:	push   ecx
  40a1b1:	bound  eax,QWORD PTR [esp+edx*2+0x26]
  40a1b5:	adc    bl,BYTE PTR [esi+esi*4]
  40a1b8:	mov    ecx,DWORD PTR [esi+esi*4-0x25]
  40a1bc:	add    dl,BYTE PTR [edi+0x72]
  40a1bf:	xlat   BYTE PTR ds:[ebx]
  40a1c0:	push   0x54
  40a1c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1c3:	xchg   esi,eax
  40a1c4:	jae    0x40a1e1
  40a1c6:	pop    esp
  40a1c7:	and    BYTE PTR [ecx-0x6],bl
  40a1ca:	loop   0x40a1d4
  40a1cc:	add    al,0x1c
  40a1ce:	jge    0x40a1cb
  40a1d0:	push   edi
  40a1d1:	fwait
  40a1d2:	pop    edi
  40a1d3:	dec    edi
  40a1d4:	out    dx,eax
  40a1d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1d6:	pop    ecx
  40a1d7:	mov    ebp,0x6e364119
  40a1dc:	jp     0x40a207
  40a1de:	add    al,0x5f
  40a1e0:	retf   0xfc4f
  40a1e3:	inc    ecx
  40a1e4:	scas   eax,DWORD PTR es:[edi]
  40a1e5:	xchg   esp,eax
  40a1e6:	cldemote BYTE PTR [ebp+esi*4+0x61]
  40a1eb:	fidivr DWORD PTR [edi+0x15670798]
  40a1f1:	or     DWORD PTR [ebx-0x64b9fdc7],esi
  40a1f7:	addr16 mov ds:0xcb05,eax
  40a1fb:	into   
  40a1fc:	jo     0x40a20b
  40a1fe:	outs   dx,BYTE PTR ds:[esi]
  40a1ff:	pop    ecx
  40a200:	(bad)  
  40a201:	(bad)  
  40a202:	sub    dh,al
  40a204:	or     DWORD PTR [esi],esp
  40a206:	fistp  WORD PTR [eax+edi*4-0x3f]
  40a20a:	out    dx,eax
  40a20b:	les    ebp,FWORD PTR [ecx-0x75c5000c]
  40a211:	cmp    dl,BYTE PTR [esi+ecx*4]
  40a214:	cli    
  40a215:	ins    BYTE PTR es:[edi],dx
  40a216:	sub    eax,0xcaebfe43
  40a21b:	stc    
  40a21c:	scas   al,BYTE PTR es:[edi]
  40a21d:	int    0x2b
  40a21f:	xchg   esi,eax
  40a220:	mov    ds:0x845fb234,eax
  40a225:	es adc al,0xd3
  40a228:	adc    edi,esp
  40a22a:	lods   al,BYTE PTR ds:[esi]
  40a22b:	adc    cl,BYTE PTR [esi]
  40a22d:	add    BYTE PTR [ebp-0x70c20aef],ah
  40a233:	xchg   ecx,eax
  40a234:	add    DWORD PTR [ebx+0x27c88149],esp
  40a23a:	test   DWORD PTR [ebx+ebp*4+0x36786028],eax
  40a241:	(bad)  [eax+0x29abafee]
  40a247:	sbb    DWORD PTR [eax-0x514d1361],esp
  40a24d:	inc    eax
  40a24e:	add    eax,0xe8237ea3
  40a253:	and    eax,0x979b1465
  40a258:	loopne 0x40a293
  40a25a:	mov    cs,edx
  40a25c:	mov    ebp,0xc3a461ab
  40a261:	dec    eax
  40a262:	xor    eax,0x526cd3b5
  40a267:	mov    al,ds:0x40353f13
  40a26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a26d:	xchg   esi,eax
  40a26e:	add    BYTE PTR [eax],dh
  40a270:	out    0xa1,al
  40a272:	dec    eax
  40a273:	pop    esp
  40a274:	push   eax
  40a275:	jb     0x40a270
  40a277:	mov    DWORD PTR [edx-0x40],ebx
  40a27a:	hlt    
  40a27b:	mov    WORD PTR [edi],cs
  40a27d:	sub    DWORD PTR [ebp+0x7eba2c9e],eax
  40a283:	xor    edi,DWORD PTR [edx]
  40a285:	ret    0x9e21
  40a288:	shl    cl,1
  40a28a:	mov    ah,0xbc
  40a28c:	sub    bl,BYTE PTR [ecx+edx*4+0xb62fa1c]
  40a293:	shl    BYTE PTR [eax-0x57],cl
  40a296:	outs   dx,BYTE PTR ds:[esi]
  40a297:	js     0x40a2d2
  40a299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a29a:	mov    ah,0x58
  40a29c:	outs   dx,DWORD PTR ds:[esi]
  40a29d:	ror    cl,0x34
  40a2a0:	mov    bh,0x4d
  40a2a2:	popa   
  40a2a3:	rcl    BYTE PTR [ebp-0x17888edb],0xfb
  40a2aa:	scas   eax,DWORD PTR es:[edi]
  40a2ab:	mov    ecx,0x952606a8
  40a2b0:	sub    al,0xd1
  40a2b2:	in     eax,dx
  40a2b3:	repnz (bad) 
  40a2b5:	mov    ds:0xca4e915b,al
  40a2ba:	out    0xb7,eax
  40a2bc:	sub    eax,0xbb504bc6
  40a2c1:	daa    
  40a2c2:	jmp    0xa361665b
  40a2c7:	pusha  
  40a2c8:	mov    esp,0xd4fac64c
  40a2cd:	pop    DWORD PTR [eax+0x3cfa64ae]
  40a2d3:	in     al,dx
  40a2d4:	jno    0x40a268
  40a2d6:	pop    es
  40a2d7:	add    eax,DWORD PTR [ebp-0x6a]
  40a2da:	fmul   DWORD PTR [eax+0x225c95e8]
  40a2e0:	dec    ebx
  40a2e1:	add    dh,BYTE PTR [eax-0xed6054b]
  40a2e7:	jg     0x40a2d9
  40a2e9:	loope  0x40a28c
  40a2eb:	cli    
  40a2ec:	dec    edx
  40a2ed:	arpl   WORD PTR [eax-0x1fc42bd7],si
  40a2f3:	div    BYTE PTR [esi+0x65]
  40a2f6:	scas   al,BYTE PTR es:[edi]
  40a2f7:	mul    eax
  40a2f9:	mov    bh,0x99
  40a2fb:	ret    
  40a2fc:	int    0x4a
  40a2fe:	mov    al,BYTE PTR [ecx]
  40a300:	xor    al,bl
  40a302:	lea    edi,ds:0x5c704f36
  40a308:	pop    ds
  40a309:	mov    dh,BYTE PTR [esi]
  40a30b:	mov    bh,0xd8
  40a30d:	imul   ebp,DWORD PTR [eax-0x80],0xffffffd5
  40a311:	or     ebp,edx
  40a313:	mov    esi,0x42ee49fe
  40a318:	loop   0x40a356
  40a31a:	dec    eax
  40a31b:	adc    al,0x88
  40a31d:	cmc    
  40a31e:	jb     0x40a34c
  40a320:	sbb    eax,0xb86065ee
  40a325:	xor    al,BYTE PTR ds:0xecdad045
  40a32b:	loopne 0x40a2fa
  40a32d:	or     BYTE PTR [ecx],dl
  40a32f:	add    bl,BYTE PTR [edx+0x60757cd3]
  40a335:	mov    bh,0x48
  40a337:	imul   eax,DWORD PTR [ebx+edx*1+0x261139b7],0xe2239733
  40a342:	mov    BYTE PTR [esp+eiz*4],dl
  40a345:	shl    BYTE PTR [ebx+0x2],cl
  40a348:	jl     0x40a34f
  40a34a:	cwde   
  40a34b:	sub    al,0x38
  40a34d:	mov    ebp,0x52bd603b
  40a352:	(bad)  
  40a353:	ficomp DWORD PTR [ebx-0x1efebe9c]
  40a359:	pusha  
  40a35a:	inc    esp
  40a35b:	inc    esi
  40a35c:	push   0x4b
  40a35e:	loop   0x40a3dd
  40a360:	retf   0x58a1
  40a363:	ret    0xfde0
  40a366:	mov    bl,0x90
  40a368:	cmp    ebp,DWORD PTR [eax+0x78d60334]
  40a36e:	xchg   ecx,eax
  40a36f:	inc    eax
  40a370:	and    dl,bh
  40a372:	mov    ebx,0xacd1e071
  40a377:	addr16 cwde 
  40a379:	pop    ebp
  40a37a:	xchg   edx,eax
  40a37b:	sub    BYTE PTR [ecx+0x1c2ac48a],ah
  40a381:	push   edx
  40a382:	cmp    eax,0x48e1bf7
  40a387:	sbb    al,0xc4
  40a389:	jns    0x40a359
  40a38b:	pop    ebp
  40a38c:	mov    al,ds:0xd2754832
  40a391:	ret    0x8a92
  40a394:	xor    al,0x9d
  40a396:	jg     0x40a408
  40a398:	(bad)  
  40a399:	not    BYTE PTR ds:0xea07bdfc
  40a39f:	pop    esp
  40a3a0:	add    BYTE PTR [ecx],bl
  40a3a2:	scas   eax,DWORD PTR es:[edi]
  40a3a3:	ror    BYTE PTR [edx+0x4463ea42],cl
  40a3a9:	jb     0x40a381
  40a3ab:	push   ecx
  40a3ac:	das    
  40a3ad:	push   ds
  40a3ae:	(bad)  
  40a3af:	jle    0x40a377
  40a3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3b2:	pop    esp
  40a3b3:	fdiv   DWORD PTR [ecx+0x52247379]
  40a3b9:	aas    
  40a3ba:	or     BYTE PTR [eax+0x2b],0x39
  40a3be:	jmp    0xa869:0x661196f4
  40a3c5:	scas   eax,DWORD PTR es:[edi]
  40a3c6:	cmp    ah,ah
  40a3c8:	xchg   ebp,eax
  40a3c9:	jo     0x40a368
  40a3cb:	scas   eax,DWORD PTR es:[edi]
  40a3cc:	mov    bl,0x47
  40a3ce:	sub    BYTE PTR [edi+0x75],dl
  40a3d1:	nop
  40a3d2:	mov    ebx,0xcf4d606e
  40a3d7:	cmc    
  40a3d8:	aas    
  40a3d9:	jmp    0x18f0:0x1b5e5419
  40a3e0:	pop    edx
  40a3e1:	in     al,0xd4
  40a3e3:	jne    0x40a435
  40a3e5:	gs sti 
  40a3e7:	mov    bh,0x46
  40a3e9:	ss stos BYTE PTR es:[edi],al
  40a3eb:	inc    ebx
  40a3ec:	sub    esp,DWORD PTR [ecx]
  40a3ee:	cdq    
  40a3ef:	mov    bh,0x78
  40a3f1:	pop    ds
  40a3f2:	cmp    ebp,ebp
  40a3f4:	push   ds
  40a3f5:	cdq    
  40a3f6:	dec    edi
  40a3f7:	xor    al,BYTE PTR [esp+ebx*2]
  40a3fa:	push   esp
  40a3fb:	and    esp,ecx
  40a3fd:	xor    al,0xc1
  40a3ff:	dec    esp
  40a400:	and    eax,DWORD PTR [ebx+esi*4+0x68]
  40a404:	adc    al,0x63
  40a406:	ret    
  40a407:	ds out dx,eax
  40a409:	mov    dl,BYTE PTR [esp+edx*8+0x81ce861]
  40a410:	lods   al,BYTE PTR ds:[esi]
  40a411:	clc    
  40a412:	sahf   
  40a413:	jmp    0x3b86:0x6d375235
  40a41a:	add    DWORD PTR [edi+edx*1-0x79],eax
  40a41e:	int3   
  40a41f:	adc    BYTE PTR [edi-0x32],dl
  40a422:	jecxz  0x40a3ed
  40a424:	sub    cl,BYTE PTR [esi-0x2719db2b]
  40a42a:	adc    ebx,DWORD PTR [edi-0x60]
  40a42d:	pop    ecx
  40a42e:	mov    bl,0x68
  40a430:	pushf  
  40a431:	call   FWORD PTR [edi]
  40a433:	push   ebp
  40a434:	add    al,0xe6
  40a436:	pop    eax
  40a437:	cmp    DWORD PTR [edx],0x41616327
  40a43d:	ret    
  40a43e:	mov    al,0xdd
  40a440:	pushf  
  40a441:	mov    bl,0xe8
  40a443:	push   ds
  40a444:	lea    ecx,[edx+0x45bfee13]
  40a44a:	jmp    0xd8226704
  40a44f:	push   ss
  40a450:	add    ch,bh
  40a452:	(bad)  
  40a453:	and    eax,0x1b88b48b
  40a458:	dec    eax
  40a459:	mov    cs,WORD PTR [edi-0x57ba6fcd]
  40a45f:	sub    al,0x9d
  40a461:	imul   esp,DWORD PTR [eax],0x123c01ec
  40a467:	das    
  40a468:	xor    dh,BYTE PTR [ebx-0x4d]
  40a46b:	adc    eax,0x743b101a
  40a470:	sbb    eax,0x1a82de16
  40a475:	and    ecx,DWORD PTR ds:[ebx-0xe1cd902]
  40a47c:	mov    dl,0xf7
  40a47e:	repnz xchg ah,bh
  40a481:	mov    DWORD PTR [edx],ebx
  40a483:	jno    0x40a502
  40a485:	lds    edx,FWORD PTR [ebx+0x255916b3]
  40a48b:	clc    
  40a48c:	cmp    DWORD PTR [esi-0x7abced53],edi
  40a492:	ins    BYTE PTR es:[edi],dx
  40a493:	gs jmp 0x288c6746
  40a499:	adc    BYTE PTR [eax],ah
  40a49b:	lods   al,BYTE PTR ds:[esi]
  40a49c:	pop    edx
  40a49d:	fs rcr edx,cl
  40a4a0:	add    bl,0x13
  40a4a3:	call   0xd814413b
  40a4a8:	mov    BYTE PTR [ebx-0x12],ah
  40a4ab:	sbb    DWORD PTR [edx+0x411d665],0xffffffa4
  40a4b2:	inc    ecx
  40a4b3:	pop    eax
  40a4b4:	pop    ecx
  40a4b5:	call   0x9ba5:0xff7d33a7
  40a4bc:	push   edx
  40a4bd:	cld    
  40a4be:	sbb    bl,ch
  40a4c0:	add    DWORD PTR [esi+0x11],0x24f5be50
  40a4c7:	lock mov ecx,DWORD PTR [ebx-0x20]
  40a4cb:	inc    ebp
  40a4cc:	sar    BYTE PTR [ecx-0x41b213f1],0x7e
  40a4d3:	push   cs
  40a4d4:	lock push 0xeb9fb0ad
  40a4da:	mov    esi,DWORD PTR [esi-0x5f3e7313]
  40a4e0:	loope  0x40a4b4
  40a4e2:	iret   
  40a4e3:	mov    bh,0xc7
  40a4e5:	ja     0x40a4b9
  40a4e7:	adc    dh,BYTE PTR [ebx]
  40a4e9:	pop    esp
  40a4ea:	dec    eax
  40a4eb:	mov    ds:0x14013e33,eax
  40a4f0:	sbb    cl,BYTE PTR [esi+0x51]
  40a4f3:	cld    
  40a4f4:	push   0x1c8dce1
  40a4f9:	test   DWORD PTR [ebp-0x1d],edi
  40a4fc:	mov    ds:0xca4c64d8,al
  40a501:	call   0x72f091f
  40a506:	xchg   ebp,eax
  40a507:	scas   eax,DWORD PTR es:[edi]
  40a508:	pop    edi
  40a509:	dec    esp
  40a50a:	add    dh,BYTE PTR [esi+0x2]
  40a50d:	enter  0x49a0,0xa4
  40a511:	scas   eax,DWORD PTR es:[edi]
  40a512:	ja     0x40a4d7
  40a514:	fst    QWORD PTR [ebp+0x53]
  40a517:	mov    WORD PTR [edi-0x3f1688f5],ds
  40a51d:	adc    eax,0xa5240316
  40a522:	int3   
  40a523:	lahf   
  40a524:	iret   
  40a525:	and    esi,esp
  40a527:	jmp    0x40a4b9
  40a529:	jmp    0xbc62:0xd295413d
  40a530:	loopne 0x40a590
  40a532:	cld    
  40a533:	dec    ebx
  40a534:	push   esp
  40a535:	inc    ebx
  40a536:	leave  
  40a537:	js     0x40a55a
  40a539:	jecxz  0x40a565
  40a53b:	out    0x65,al
  40a53d:	stc    
  40a53e:	pusha  
  40a53f:	lahf   
  40a540:	add    eax,0x3d30301
  40a545:	mov    WORD PTR ds:0x7664c742,es
  40a54b:	(bad)  
  40a54c:	test   ebp,ebx
  40a54e:	cmp    eax,0x419fa817
  40a553:	inc    eax
  40a554:	ftst   
  40a556:	jmp    0x40a529
  40a558:	jmp    0x7f68b253
  40a55d:	jns    0x40a4f0
  40a55f:	add    BYTE PTR [ecx+0x77fb4402],ch
  40a565:	arpl   WORD PTR [esi+0x1cbbc7c1],sp
  40a56b:	jbe    0x40a5b2
  40a56d:	stc    
  40a56e:	in     eax,dx
  40a56f:	test   BYTE PTR [ecx],bh
  40a571:	js     0x40a59a
  40a573:	mov    al,ds:0x5ed84380
  40a578:	xor    ch,BYTE PTR [ecx]
  40a57a:	mov    BYTE PTR [ebx+0x63],ch
  40a57d:	fcmovnb st,st(0)
  40a57f:	xchg   esp,eax
  40a580:	xchg   ecx,eax
  40a581:	into   
  40a582:	scas   eax,DWORD PTR es:[edi]
  40a583:	mov    esp,0xabad1328
  40a588:	pop    eax
  40a589:	mov    al,ds:0x2423bf2
  40a58e:	inc    esp
  40a58f:	cmp    ah,dh
  40a591:	pop    ecx
  40a592:	push   0xe0f2fff
  40a597:	jb     0x40a60c
  40a599:	cmc    
  40a59a:	lahf   
  40a59b:	sub    ecx,DWORD PTR [edx+0x72168d58]
  40a5a1:	mov    dh,0x51
  40a5a3:	stc    
  40a5a4:	xor    al,0xb3
  40a5a6:	addr16 out dx,eax
  40a5a8:	into   
  40a5a9:	ins    BYTE PTR es:[edi],dx
  40a5aa:	dec    esi
  40a5ab:	push   ds
  40a5ac:	cmp    al,0x79
  40a5ae:	repnz sub DWORD PTR [esi],ebp
  40a5b1:	sbb    bl,BYTE PTR [eax]
  40a5b3:	test   al,0x27
  40a5b5:	inc    esp
  40a5b6:	or     BYTE PTR [ebp-0x17ce084e],bh
  40a5bc:	js     0x40a5b4
  40a5be:	push   eax
  40a5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c0:	dec    esi
  40a5c1:	stos   BYTE PTR es:[edi],al
  40a5c2:	xlat   BYTE PTR ds:[ebx]
  40a5c3:	pop    ss
  40a5c4:	sbb    bl,BYTE PTR [edx-0x49567eb5]
  40a5ca:	imul   ebp,eax,0xbc3ab97f
  40a5d0:	pop    ebp
  40a5d1:	and    dl,BYTE PTR ds:0x8f19dc64
  40a5d7:	pop    esi
  40a5d8:	in     eax,0xb9
  40a5da:	pop    edi
  40a5db:	add    eax,0xf0e04192
  40a5e0:	and    BYTE PTR ds:0xdc0d46d8,0xe1
  40a5e7:	mov    ebp,0x9e701efc
  40a5ec:	adc    DWORD PTR [esi+eax*8+0x695211d6],esi
  40a5f3:	je     0x40a622
  40a5f5:	mov    BYTE PTR [esi+ebx*1-0xb],ah
  40a5f9:	clc    
  40a5fa:	retf   
  40a5fb:	inc    esp
  40a5fc:	mov    BYTE PTR [esi],bl
  40a5fe:	hlt    
  40a5ff:	cdq    
  40a600:	sbb    eax,DWORD PTR [edi+0x2d7460b2]
  40a606:	jmp    0x81df:0xbd76e2e4
  40a60d:	jle    0x40a5f7
  40a60f:	adc    esi,ecx
  40a611:	lods   al,BYTE PTR ds:[esi]
  40a612:	jmp    0xb21f:0x9451c5eb
  40a619:	mov    al,0x65
  40a61b:	pop    ss
  40a61c:	sbb    dh,0xeb
  40a61f:	dec    esi
  40a620:	dec    ebp
  40a621:	dec    esp
  40a622:	bound  esp,QWORD PTR [edi-0x4c558176]
  40a628:	push   ebx
  40a629:	xlat   BYTE PTR ds:[ebx]
  40a62a:	mov    bh,0x7a
  40a62c:	sbb    DWORD PTR [ebp+ebp*4-0x2a],edx
  40a630:	outs   dx,BYTE PTR ds:[esi]
  40a631:	aad    0xc5
  40a633:	or     eax,0xc864124
  40a638:	xchg   esp,eax
  40a639:	sub    esi,ebx
  40a63b:	jmp    0xfea48e0d
  40a640:	adc    ebx,DWORD PTR [ebx+0x4f]
  40a643:	in     eax,dx
  40a644:	ret    
  40a645:	lock int3 
  40a647:	fldcw  WORD PTR [ebp+0xe]
  40a64a:	hlt    
  40a64b:	xchg   esi,eax
  40a64c:	int    0x1b
  40a64e:	pop    esp
  40a64f:	out    dx,eax
  40a650:	add    ebp,edi
  40a652:	mov    ebx,0x4bbc878
  40a657:	inc    edx
  40a658:	stos   BYTE PTR es:[edi],al
  40a659:	push   ebx
  40a65a:	test   DWORD PTR [ebx],esp
  40a65c:	and    eax,DWORD PTR ds:0xdddbcd13
  40a662:	call   0x780b:0xd493ea6f
  40a669:	dec    esi
  40a66a:	xor    ebx,DWORD PTR [edx+eiz*8]
  40a66d:	add    eax,0x9592edb4
  40a672:	pushf  
  40a673:	bound  edi,QWORD PTR [ecx+0x6c8af83c]
  40a679:	push   esi
  40a67a:	imul   ebx,DWORD PTR [edx],0xfc3f3968
  40a680:	popf   
  40a681:	add    edx,DWORD PTR [ecx-0x43]
  40a684:	daa    
  40a685:	in     eax,dx
  40a686:	lahf   
  40a687:	mov    al,ds:0x556c33
  40a68c:	or     DWORD PTR [esp+edi*2-0x80],0x13
  40a691:	mov    bh,0x2
  40a693:	dec    ecx
  40a694:	inc    edx
  40a695:	mov    al,0x44
  40a697:	imul   esi,eax,0x4125c174
  40a69d:	(bad)  
  40a69f:	mov    cl,dh
  40a6a1:	test   DWORD PTR [edx-0xd2a1701],ecx
  40a6a7:	and    BYTE PTR [ecx-0x60],bl
  40a6aa:	out    dx,al
  40a6ab:	pop    es
  40a6ac:	mov    DWORD PTR [ecx],ebp
  40a6ae:	fdivr  QWORD PTR [ecx+0x4dc9a315]
  40a6b4:	shr    DWORD PTR [esi+0xc],cl
  40a6b7:	add    DWORD PTR [edx+0x75],edi
  40a6ba:	jns    0x40a6dd
  40a6bc:	loop   0x40a70f
  40a6be:	ins    BYTE PTR es:[edi],dx
  40a6bf:	loopne 0x40a677
  40a6c1:	enter  0xfec7,0x4d
  40a6c5:	inc    ecx
  40a6c6:	adc    ch,dl
  40a6c8:	add    eax,0x372acfc9
  40a6cd:	loope  0x40a723
  40a6cf:	scas   al,BYTE PTR es:[edi]
  40a6d0:	pusha  
  40a6d1:	sub    eax,0x2a853231
  40a6d6:	test   cl,bh
  40a6d8:	popf   
  40a6d9:	pushf  
  40a6da:	aaa    
  40a6db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6dc:	add    esp,DWORD PTR [ebx]
  40a6de:	jne    0x40a731
  40a6e0:	sub    al,0x1f
  40a6e2:	inc    esi
  40a6e3:	push   ebx
  40a6e4:	das    
  40a6e5:	mov    BYTE PTR [edx],dh
  40a6e7:	iret   
  40a6e8:	jle    0x40a6d7
  40a6ea:	and    ebp,DWORD PTR [ecx+edi*4-0x5ebcb050]
  40a6f1:	adc    al,0x25
  40a6f3:	xchg   BYTE PTR [ebx+0x15],ch
  40a6f6:	sbb    ch,ch
  40a6f8:	sbb    dl,BYTE PTR [edx-0x49]
  40a6fb:	clc    
  40a6fc:	sbb    BYTE PTR [edx+0x72992ea9],cl
  40a702:	jg     0x40a708
  40a704:	cmp    ecx,DWORD PTR [eax]
  40a706:	mov    esi,0x296e91ba
  40a70b:	rol    bh,0x88
  40a70e:	push   edi
  40a710:	add    al,0xbf
  40a712:	xchg   edx,eax
  40a713:	daa    
  40a714:	xchg   esp,eax
  40a715:	or     eax,0xc7972cc1
  40a71a:	pop    edi
  40a71b:	hlt    
  40a71c:	fsubr  DWORD PTR [eax+0x39a5137c]
  40a722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a723:	(bad)  
  40a724:	jnp    0x40a76f
  40a726:	shr    DWORD PTR [esi+0x34],0xe9
  40a72a:	(bad)  [esi-0x41ab033c]
  40a730:	call   0x9896b3b4
  40a735:	idiv   DWORD PTR [ecx-0x42]
  40a738:	int    0x4b
  40a73a:	push   edi
  40a73b:	rcl    DWORD PTR [edi+0x4c58ede2],0xc5
  40a742:	jbe    0x40a772
  40a744:	xchg   ebx,eax
  40a745:	sbb    eax,0x49e58801
  40a74a:	pop    ecx
  40a74b:	xchg   esp,eax
  40a74c:	ja     0x40a6d0
  40a74e:	imul   edi,DWORD PTR [eax+0x2b],0xffffffe9
  40a752:	sahf   
  40a753:	(bad)  
  40a754:	out    dx,al
  40a755:	gs pushf 
  40a757:	adc    al,0x5e
  40a759:	push   cs
  40a75a:	adc    ecx,edi
  40a75c:	or     DWORD PTR [esi],ebp
  40a75e:	popa   
  40a75f:	clc    
  40a760:	mov    BYTE PTR [ecx+0x66],al
  40a763:	hlt    
  40a764:	jb     0x40a7db
  40a766:	xchg   esi,eax
  40a767:	popf   
  40a768:	xchg   BYTE PTR [ecx+0x410d14df],al
  40a76e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a76f:	mov    al,ds:0x8ce489b4
  40a774:	dec    edi
  40a775:	mov    eax,0x28af3191
  40a77a:	hlt    
  40a77b:	pop    ss
  40a77c:	cmp    BYTE PTR [ebx],0x60
  40a77f:	lods   al,BYTE PTR ds:[esi]
  40a780:	adc    ah,bl
  40a782:	jp     0x40a75b
  40a784:	push   esp
  40a785:	imul   ebx,esi,0xe814f4fb
  40a78b:	xchg   esi,eax
  40a78c:	lds    ebx,FWORD PTR [edx+eiz*4+0x63]
  40a790:	gs jp  0x40a78f
  40a793:	mov    ds:0x1b9e94fc,eax
  40a798:	icebp  
  40a799:	pop    ds
  40a79a:	dec    ecx
  40a79b:	fbstp  TBYTE PTR [eax+0x2b]
  40a79e:	lea    ecx,[ebx]
  40a7a0:	jb     0x40a7b5
  40a7a2:	jg     0x40a7a4
  40a7a4:	lahf   
  40a7a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7a6:	sub    ah,dl
  40a7a8:	jmp    0x4ef6f0da
  40a7ad:	sub    al,0xc1
  40a7af:	xchg   ecx,eax
  40a7b0:	stos   DWORD PTR es:[edi],eax
  40a7b1:	mov    cl,0x43
  40a7b3:	jmp    0xcf6f:0x10360ff0
  40a7ba:	int    0x2
  40a7bc:	ret    0x8c96
  40a7bf:	dec    edi
  40a7c0:	push   0x2434f201
  40a7c5:	xlat   BYTE PTR ds:[ebx]
  40a7c6:	add    eax,0xcfb281ec
  40a7cb:	fmul   DWORD PTR [ecx+0x1f44eb]
  40a7d1:	mov    eax,DWORD PTR [si]
  40a7d4:	adc    ah,BYTE PTR ds:0xde449080
  40a7da:	ret    
  40a7db:	ss pusha 
  40a7dd:	es (bad) 
  40a7df:	js     0x40a761
  40a7e1:	test   DWORD PTR [esi+0x40],ecx
  40a7e4:	fild   DWORD PTR [bx+si+0x15]
  40a7e8:	dec    ebp
  40a7e9:	push   es
  40a7ea:	shl    DWORD PTR [edi+0x4d935afd],1
  40a7f0:	ins    BYTE PTR es:[edi],dx
  40a7f1:	das    
  40a7f2:	lods   eax,DWORD PTR ds:[esi]
  40a7f3:	test   eax,0x6eaef510
  40a7f8:	dec    DWORD PTR [edi]
  40a7fa:	(bad)  
  40a7fc:	xchg   ecx,eax
  40a7fd:	mov    al,ds:0xe75c142b
  40a802:	ret    0x188b
  40a805:	sbb    eax,0x58bb69f
  40a80a:	(bad)  
  40a80b:	hlt    
  40a80c:	jns    0x40a821
  40a80e:	jbe    0x40a81e
  40a810:	cmp    BYTE PTR [eax+0x365494a6],bh
  40a816:	add    al,0xe8
  40a818:	push   esp
  40a819:	push   es
  40a81a:	call   0xe6456214
  40a81f:	xchg   edi,eax
  40a820:	cld    
  40a821:	jge    0x40a88c
  40a823:	add    eax,0xd4ac6b96
  40a828:	and    al,0xc8
  40a82a:	mov    dh,0x17
  40a82c:	mov    ebp,0x361b44c7
  40a831:	sub    al,0x86
  40a833:	sbb    ah,al
  40a835:	or     dh,cl
  40a837:	mov    ecx,0xbadaf011
  40a83c:	push   cs
  40a83d:	arpl   bx,cx
  40a83f:	xchg   esi,eax
  40a840:	pop    esi
  40a841:	xor    ah,BYTE PTR [ebp-0x15]
  40a844:	mov    ch,0x2a
  40a846:	ret    
  40a847:	in     eax,0x1a
  40a849:	adc    ebp,ebx
  40a84b:	into   
  40a84c:	sub    eax,0x368f710b
  40a851:	lock push edi
  40a853:	sub    ch,0x82
  40a856:	and    ah,0xd0
  40a859:	jae    0x40a8aa
  40a85b:	mov    cl,0x9d
  40a85d:	outs   dx,DWORD PTR ds:[esi]
  40a85e:	(bad)  
  40a85f:	lds    ebp,FWORD PTR [ebx]
  40a861:	pop    edx
  40a862:	ss jns 0x40a852
  40a865:	(bad)  
  40a866:	ds test al,0xc9
  40a869:	ud0    ebx,esp
  40a86c:	sub    eax,0xde890a22
  40a871:	add    DWORD PTR [ecx+edx*8-0x49],0xffffff89
  40a876:	jge    0x40a885
  40a878:	popf   
  40a879:	gs jns 0x40a89d
  40a87c:	inc    edx
  40a87d:	dec    edi
  40a87e:	popf   
  40a87f:	and    bl,BYTE PTR [eax-0x64]
  40a882:	fs sti 
  40a884:	popa   
  40a885:	cs test al,0x85
  40a888:	dec    edx
  40a889:	inc    esi
  40a88a:	pop    ecx
  40a88b:	or     ah,BYTE PTR ds:0x2d4b9fcc
  40a891:	jge    0x40a8ba
  40a893:	push   edx
  40a894:	xchg   ebp,eax
  40a895:	imul   esp,DWORD PTR [ebp+eiz*8-0x5a],0x4205ae56
  40a89d:	(bad)  
  40a89e:	leave  
  40a89f:	(bad)  
  40a8a0:	into   
  40a8a1:	aaa    
  40a8a2:	cwde   
  40a8a3:	bsr    eax,DWORD PTR [ebp+0x4a1ebb51]
  40a8aa:	imul   edx,DWORD PTR [edi-0x1fa04aff],0xc231c3e3
  40a8b4:	mov    ds,WORD PTR [edx+eiz*4+0x687bdb60]
  40a8bb:	sbb    DWORD PTR [edi+0x48d09046],esi
  40a8c1:	inc    ecx
  40a8c2:	cmp    eax,esi
  40a8c4:	outs   dx,DWORD PTR ds:[esi]
  40a8c5:	lock push ecx
  40a8c7:	xlat   BYTE PTR ds:[ebx]
  40a8c8:	add    al,0x29
  40a8ca:	fcmovu st,st(4)
  40a8cc:	jp     0x40a8bb
  40a8ce:	mov    eax,0xa53c48cb
  40a8d3:	outs   dx,BYTE PTR ds:[esi]
  40a8d4:	and    BYTE PTR [ecx-0x45],al
  40a8d7:	push   cs
  40a8d8:	or     BYTE PTR [eax-0x24186b00],dl
  40a8de:	or     eax,0x9900e748
  40a8e3:	and    BYTE PTR [edi+0x4cd83daf],ah
  40a8e9:	jae    0x40a90e
  40a8eb:	ret    
  40a8ec:	mov    esp,0xdfef0ce1
  40a8f1:	dec    ebx
  40a8f2:	or     al,0x7
  40a8f4:	mov    WORD PTR [eax],gs
  40a8f6:	jle    0x40a8d0
  40a8f8:	and    ch,ah
  40a8fa:	jns    0x40a903
  40a8fc:	pop    es
  40a8fd:	mov    dh,0x71
  40a8ff:	add    al,0x71
  40a901:	sub    ah,bl
  40a903:	jecxz  0x40a94e
  40a905:	add    eax,0x35b1735e
  40a90a:	jnp    0x40a91e
  40a90c:	add    BYTE PTR [edi-0x1650e11f],ah
  40a912:	mov    al,0xb0
  40a914:	das    
  40a915:	jno    0x40a8d3
  40a917:	jmp    FWORD PTR [eax+0x22]
  40a91a:	inc    edx
  40a91b:	test   al,0x50
  40a91d:	stc    
  40a91e:	lock leave 
  40a920:	cdq    
  40a921:	sub    BYTE PTR [eax],bl
  40a923:	xchg   esp,eax
  40a924:	sahf   
  40a925:	sbb    eax,DWORD PTR ds:[edx]
  40a928:	iret   
  40a929:	mov    eax,ds:0x4e552b78
  40a92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a92f:	sbb    ch,BYTE PTR [ecx+0x4]
  40a932:	fcmovnu st,st(5)
  40a934:	(bad)  
  40a935:	(bad)  
  40a936:	gs pop ss
  40a938:	push   ss
  40a939:	and    dl,BYTE PTR [edx+ebp*4-0x22]
  40a93d:	xchg   BYTE PTR [edx-0x80],cl
  40a940:	in     al,dx
  40a941:	out    0x92,eax
  40a943:	push   es
  40a944:	xchg   esp,eax
  40a945:	pop    ebx
  40a946:	pusha  
  40a947:	jmp    0xd480:0x53d6b5e6
  40a94e:	sahf   
  40a94f:	add    BYTE PTR [ecx],dl
  40a951:	and    eax,0x178bc72f
  40a956:	aam    0x9d
  40a958:	inc    edi
  40a959:	mov    edi,0x17675c72
  40a95e:	mov    ?,WORD PTR [esi]
  40a960:	inc    esp
  40a961:	pop    es
  40a962:	fst    DWORD PTR [eax+eiz*1+0x6d255346]
  40a969:	sub    BYTE PTR [edx+0x36],cl
  40a96c:	test   DWORD PTR [eax-0x53fcdc4c],edi
  40a972:	push   cs
  40a973:	xchg   edi,eax
  40a974:	jl     0x40a971
  40a976:	xchg   ebx,eax
  40a977:	daa    
  40a978:	retf   0x3127
  40a97b:	test   DWORD PTR [eax],esp
  40a97d:	xor    ebp,ebp
  40a97f:	add    BYTE PTR [edi],ch
  40a981:	dec    ebx
  40a982:	fist   WORD PTR [ebx]
  40a984:	ins    DWORD PTR es:[edi],dx
  40a985:	pusha  
  40a986:	or     DWORD PTR ds:0x56a85e09,0x2a
  40a98d:	in     eax,dx
  40a98e:	push   eax
  40a98f:	push   cs
  40a990:	xchg   DWORD PTR [eax-0x39352314],edx
  40a996:	stos   DWORD PTR es:[edi],eax
  40a997:	inc    ecx
  40a998:	js     0x40a9da
  40a99a:	mov    ebp,0x1dbefdb0
  40a99f:	mov    ebp,0x1b77c24e
  40a9a4:	pop    ebx
  40a9a5:	inc    ebx
  40a9a6:	mov    edx,0xa89548c1
  40a9ab:	pushf  
  40a9ac:	test   al,0xbd
  40a9ae:	pop    esp
  40a9af:	in     al,dx
  40a9b0:	leave  
  40a9b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9b2:	mov    edi,0x823a5aa8
  40a9b7:	fs stc 
  40a9b9:	mov    eax,ds:0x25cd2522
  40a9be:	loope  0x40a9df
  40a9c0:	sbb    DWORD PTR [edi+ebx*1],ebp
  40a9c3:	cmp    esi,DWORD PTR [edx+ebx*1-0x14c377fa]
  40a9ca:	xchg   ebp,eax
  40a9cb:	out    dx,al
  40a9cc:	repnz rcl BYTE PTR [ebx+0x48],0xbd
  40a9d1:	popa   
  40a9d2:	push   esp
  40a9d3:	and    BYTE PTR [ebp+edi*1-0x6b],ah
  40a9d7:	xor    eax,0x9d318044
  40a9dc:	stc    
  40a9dd:	mov    al,ds:0x2b3a8739
  40a9e2:	inc    ebp
  40a9e3:	iret   
  40a9e4:	mov    edx,0xc82a080a
  40a9e9:	dec    esi
  40a9ea:	outs   dx,DWORD PTR ds:[esi]
  40a9eb:	aas    
  40a9ec:	xor    edx,DWORD PTR [esi+0xdd06f8d]
  40a9f2:	mov    WORD PTR [ebx+ecx*1+0x22],es
  40a9f6:	call   0xcd0c4003
  40a9fb:	push   cs
  40a9fc:	sub    BYTE PTR [eax+0x30],dl
  40a9ff:	jb     0x40aa73
  40aa01:	js     0x40a987
  40aa03:	mov    bl,BYTE PTR [ebx+0x2cce5ce3]
  40aa09:	sub    BYTE PTR [edx+eiz*1],bl
  40aa0c:	fnstenv ds:0x2f5f8acf
  40aa12:	add    DWORD PTR [ecx+0x1206f6f2],eax
  40aa18:	fs int3 
  40aa1a:	push   ss
  40aa1b:	(bad)  
  40aa1e:	es ret 
  40aa20:	call   0xe999:0xec32c5bc
  40aa27:	enter  0xa45c,0xb5
  40aa2b:	retf   0x527f
  40aa2e:	add    DWORD PTR [ecx],ecx
  40aa30:	into   
  40aa31:	push   es
  40aa32:	lds    ebx,FWORD PTR [edx]
  40aa34:	loop   0x40aa02
  40aa36:	lock jecxz 0x40a9fa
  40aa39:	loope  0x40a9d7
  40aa3b:	push   ds
  40aa3c:	mov    ebx,0xa2be4403
  40aa41:	mov    WORD PTR [esi-0x23],ds
  40aa44:	sbb    eax,0x46be9c2e
  40aa49:	lods   al,BYTE PTR ds:[esi]
  40aa4a:	pop    ecx
  40aa4b:	rol    BYTE PTR [eax+0x19],cl
  40aa4e:	(bad)  
  40aa50:	rcl    DWORD PTR [edi+0x73a23ff6],cl
  40aa56:	inc    ebp
  40aa57:	int3   
  40aa58:	xlat   BYTE PTR ds:[ebx]
  40aa59:	mov    al,ds:0x3cdf63b4
  40aa5e:	(bad)
  40aa62:	add    eax,0xc5adba06
  40aa67:	and    DWORD PTR [ecx-0x6be58783],eax
  40aa6d:	jp     0x40aa01
  40aa6f:	(bad)  [ebp+0x68fd6e27]
  40aa75:	je     0x40aab3
  40aa77:	jmp    0xb990:0x33b8a056
  40aa7e:	mov    edi,0x1a211a44
  40aa83:	sti    
  40aa84:	pusha  
  40aa85:	adc    DWORD PTR [edx-0x77],eax
  40aa88:	mov    bl,0xeb
  40aa8a:	mov    edx,eax
  40aa8c:	mov    ebp,0x58aec192
  40aa91:	xchg   ecx,eax
  40aa92:	out    dx,al
  40aa93:	sub    dh,BYTE PTR [ecx+ebp*8+0x124b1b26]
  40aa9a:	inc    edx
  40aa9b:	lods   al,BYTE PTR ds:[esi]
  40aa9c:	jle    0x40aa8c
  40aa9e:	and    cl,bh
  40aaa0:	data16 lock mov bh,0xe3
  40aaa4:	mov    ds:0x511cfcf1,al
  40aaa9:	test   eax,0x176a4081
  40aaae:	xchg   edx,eax
  40aaaf:	fld    TBYTE PTR [edx-0x3aff2960]
  40aab5:	bnd jl 0x40aae8
  40aab8:	cmp    DWORD PTR [edi],edx
  40aaba:	inc    ecx
  40aabb:	xchg   esi,edi
  40aabd:	mov    ds:0x48e27806,eax
  40aac2:	cs jmp 0x474e:0x8c71eaab
  40aaca:	(bad)  
  40aacb:	pop    esp
  40aacc:	les    ecx,FWORD PTR [edi-0x74]
  40aacf:	test   BYTE PTR [esi+0x3eba8ad1],al
  40aad5:	and    ecx,DWORD PTR [ecx-0x7d]
  40aad8:	sbb    eax,0x1ee1ef27
  40aadd:	mov    ecx,0xc82a04ed
  40aae2:	cs das 
  40aae4:	and    eax,0x5ff04cc2
  40aae9:	adc    eax,0x7a09c793
  40aaee:	push   0x35
  40aaf0:	and    edx,DWORD PTR [eax+0x43]
  40aaf3:	imul   ebx,edi,0xffffff8a
  40aaf6:	out    dx,al
  40aaf7:	jle    0x40aa8d
  40aaf9:	jbe    0x40aafa
  40aafb:	xchg   esp,eax
  40aafc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aafd:	add    DWORD PTR [edx+0x745d4ff2],ebp
  40ab03:	sbb    BYTE PTR [edi-0x2e],bh
  40ab06:	adc    edx,DWORD PTR [ebx-0x65]
  40ab09:	pop    eax
  40ab0a:	arpl   cx,si
  40ab0c:	pop    eax
  40ab0d:	xchg   DWORD PTR [edx+ecx*2+0xceba904],edx
  40ab14:	pop    es
  40ab15:	imul   edi,DWORD PTR [ecx-0x50],0xffffff89
  40ab19:	jle    0x40ab24
  40ab1b:	mov    WORD PTR gs:[edi+0x4391247f],gs
  40ab22:	outs   dx,BYTE PTR ds:[esi]
  40ab23:	pop    esi
  40ab24:	push   eax
  40ab25:	and    al,0x40
  40ab27:	or     DWORD PTR [esi+0x200e6c21],0x4c
  40ab2e:	test   BYTE PTR ds:0x88e59d6f,0x12
  40ab35:	dec    edx
  40ab36:	fcomp  st(4)
  40ab38:	dec    edx
  40ab39:	je     0x40ab75
  40ab3b:	xor    edi,DWORD PTR [ecx]
  40ab3d:	idiv   BYTE PTR [edx-0x7c]
  40ab40:	jb     0x40ab9f
  40ab42:	popa   
  40ab43:	retf   
  40ab44:	pop    esp
  40ab45:	mov    dh,0x87
  40ab47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab48:	mov    cl,0xfe
  40ab4a:	and    eax,DWORD PTR [ebx+0x4781b041]
  40ab50:	pop    ss
  40ab51:	jl     0x40aae5
  40ab53:	pop    eax
  40ab54:	sbb    eax,0x14a569d7
  40ab59:	mov    edx,0x429fef30
  40ab5e:	sub    ch,BYTE PTR [edi]
  40ab60:	fucom  st(1)
  40ab62:	pop    esp
  40ab63:	arpl   bx,sp
  40ab65:	sbb    eax,0x268b85d1
  40ab6a:	inc    edi
  40ab6b:	push   0xffffffb2
  40ab6d:	fimul  DWORD PTR [edx+0x4052bd64]
  40ab73:	je     0x40aaf6
  40ab75:	pop    esi
  40ab76:	cld    
  40ab77:	push   ecx
  40ab78:	sub    al,cl
  40ab7a:	push   edx
  40ab7b:	gs loopne 0x40ab10
  40ab7e:	push   ecx
  40ab7f:	sub    al,0xfb
  40ab81:	fst    QWORD PTR [eax-0x5c0eb960]
  40ab87:	xor    al,0x81
  40ab89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab8a:	es jl  0x40ab5b
  40ab8d:	pop    eax
  40ab8e:	add    al,0xc8
  40ab90:	lods   al,BYTE PTR ds:[esi]
  40ab91:	xor    bl,dl
  40ab93:	sub    ch,ah
  40ab95:	retf   0xe0bc
  40ab98:	or     BYTE PTR [ebx-0x75],dl
  40ab9b:	es (bad) 
  40ab9d:	or     al,0x4d
  40ab9f:	and    esp,edx
  40aba1:	and    BYTE PTR [esi-0x22],dl
  40aba4:	mov    ch,0xbc
  40aba6:	enter  0x410,0x2a
  40abaa:	xor    al,0xba
  40abac:	sub    al,0xc3
  40abae:	fnstenv [ebx+0x0]
  40abb1:	popa   
  40abb2:	adc    ah,dl
  40abb4:	dec    ebp
  40abb5:	adc    eax,0x688e1415
  40abba:	fidiv  WORD PTR [edi+ecx*4]
  40abbd:	fbld   TBYTE PTR [edi+0x4bbc54c7]
  40abc3:	sub    BYTE PTR [edi],cl
  40abc5:	push   esi
  40abc6:	sbb    al,0xf8
  40abc8:	mov    DWORD PTR [edi-0x12],edi
  40abcb:	shl    DWORD PTR [edi+0x51],cl
  40abce:	xor    bh,ch
  40abd0:	mov    ah,BYTE PTR [esi+ecx*8]
  40abd3:	ins    BYTE PTR es:[edi],dx
  40abd4:	dec    ecx
  40abd5:	pop    es
  40abd6:	and    al,0x4c
  40abd8:	lock pop ebx
  40abda:	lds    edx,FWORD PTR [edx-0xfac21e9]
  40abe0:	popa   
  40abe1:	ins    BYTE PTR es:[edi],dx
  40abe2:	mov    edi,esp
  40abe4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40abe6:	mov    al,0x2a
  40abe8:	push   es
  40abe9:	cmp    eax,ecx
  40abeb:	add    ch,cl
  40abed:	cmp    DWORD PTR [eax-0x13],ebp
  40abf0:	aaa    
  40abf1:	jmp    0x8dd1:0x6b009693
  40abf8:	dec    edi
  40abf9:	data16 and BYTE PTR [eax+edi*8],bh
  40abfd:	ret    0x13c2
  40ac00:	or     ebx,DWORD PTR [ecx-0x36d061c0]
  40ac06:	das    
  40ac07:	xchg   edx,eax
  40ac08:	or     BYTE PTR [ebp-0x2f],dl
  40ac0b:	gs test eax,0x1d064949
  40ac11:	ja     0x40abb2
  40ac13:	inc    edi
  40ac14:	std    
  40ac15:	mov    edx,esp
  40ac17:	ret    
  40ac18:	repnz test DWORD PTR ds:0x6069a9ee,edi
  40ac1f:	das    
  40ac20:	outs   dx,BYTE PTR ds:[esi]
  40ac21:	pop    ebp
  40ac22:	retf   0x5e3c
  40ac25:	push   eax
  40ac26:	sbb    BYTE PTR [ecx],0x57
  40ac29:	fwait
  40ac2a:	sbb    al,0xd1
  40ac2c:	xchg   DWORD PTR ds:0x9071079f,ecx
  40ac32:	pop    esp
  40ac33:	xor    al,0x89
  40ac35:	(bad)  
  40ac37:	mov    bl,0x17
  40ac39:	fs in  eax,0x5d
  40ac3c:	sub    BYTE PTR [ebp+0x68],0x72
  40ac40:	call   0x9382b81c
  40ac45:	retf   
  40ac46:	jl     0x40acc4
  40ac48:	aad    0x22
  40ac4a:	jo     0x40acad
  40ac4c:	dec    ebx
  40ac4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac4e:	sub    ch,BYTE PTR [esi+0x5f65137f]
  40ac54:	jae    0x40ac92
  40ac56:	xor    BYTE PTR [edi],dh
  40ac58:	push   ss
  40ac59:	push   es
  40ac5a:	or     dl,cl
  40ac5c:	xor    edi,ebp
  40ac5e:	sub    edx,DWORD PTR [edi]
  40ac60:	pop    esi
  40ac61:	mov    BYTE PTR [eax+ebx*1+0x10],al
  40ac65:	sub    ebp,DWORD PTR [ecx+ecx*8]
  40ac68:	jg     0x40ac1c
  40ac6a:	(bad)  
  40ac6b:	mov    eax,0xbe7ac495
  40ac70:	pop    ecx
  40ac71:	pushf  
  40ac72:	ins    BYTE PTR es:[edi],dx
  40ac73:	and    esp,DWORD PTR [ecx]
  40ac75:	adc    bh,BYTE PTR [edx-0xa]
  40ac78:	cmc    
  40ac79:	xchg   esp,eax
  40ac7a:	sbb    esi,edx
  40ac7c:	xor    bl,BYTE PTR [edi+0x971e1b6]
  40ac82:	inc    esp
  40ac84:	mov    ebp,DWORD PTR [esi]
  40ac86:	out    dx,al
  40ac87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac88:	cmp    al,0x33
  40ac8a:	xor    eax,0x976c5689
  40ac8f:	pop    esp
  40ac90:	xor    al,0xc1
  40ac92:	sbb    cl,dl
  40ac94:	or     DWORD PTR [edx-0x16],ecx
  40ac97:	(bad)  
  40ac98:	lock mov ch,0x92
  40ac9b:	jnp    0x40ac37
  40ac9d:	add    BYTE PTR ds:0xa5c47972,ch
  40aca3:	stos   DWORD PTR es:[edi],eax
  40aca4:	(bad)  
  40aca5:	std    
  40aca6:	cmp    ah,BYTE PTR [ecx-0x3c7c1ccc]
  40acac:	shr    BYTE PTR [edi],0x3d
  40acaf:	dec    DWORD PTR [ebp+edx*8+0x2ab79d39]
  40acb6:	jmp    0x389f:0x5cd1de98
  40acbd:	nop
  40acbe:	and    ch,cl
  40acc0:	sbb    BYTE PTR cs:[esi],bl
  40acc3:	aam    0xd2
  40acc5:	fst    QWORD PTR [ebp+0x2893edec]
  40accb:	fadd   QWORD PTR [esi+eiz*8]
  40acce:	das    
  40accf:	enter  0x120a,0x43
  40acd3:	pop    es
  40acd4:	add    DWORD PTR [eax+0x1e],esi
  40acd7:	adc    bh,BYTE PTR [edx-0x63]
  40acda:	lods   eax,DWORD PTR ds:[esi]
  40acdb:	fucomi st,st(1)
  40acdd:	adc    al,0xa8
  40acdf:	add    DWORD PTR [ecx+0x62],0xc7f7ca52
  40ace6:	xor    esp,ecx
  40ace8:	add    bl,0x8a
  40aceb:	scas   eax,DWORD PTR es:[edi]
  40acec:	retf   
  40aced:	retf   
  40acee:	pop    esp
  40acef:	xor    BYTE PTR [esp+edx*8-0x58bdf8c5],ah
  40acf6:	arpl   sp,si
  40acf8:	pop    ds
  40acf9:	adc    al,0x57
  40acfb:	sub    eax,0x414b54b4
  40ad00:	(bad)
  40ad03:	inc    eax
  40ad04:	mov    WORD PTR [ebx+0x7b52a3a6],fs
  40ad0a:	lods   eax,DWORD PTR ds:[esi]
  40ad0b:	inc    ebp
  40ad0c:	es push 0xffffffb4
  40ad0f:	pusha  
  40ad10:	and    cl,BYTE PTR [edi+ebp*1+0x56cd784d]
  40ad17:	mov    bl,0xc7
  40ad19:	bswap  eax
  40ad1b:	push   ebx
  40ad1c:	dec    eax
  40ad1d:	(bad)  
  40ad1e:	sbb    BYTE PTR [ebp+0x53],ch
  40ad21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad22:	mul    DWORD PTR [esp+esi*2]
  40ad25:	mov    dl,0x7a
  40ad27:	cdq    
  40ad28:	inc    edi
  40ad29:	add    eax,0x4134790b
  40ad2e:	call   edx
  40ad30:	cmp    al,0x67
  40ad32:	inc    edi
  40ad33:	mov    BYTE PTR [edi+edx*2-0x1a],bh
  40ad37:	jne    0x40ad1c
  40ad39:	dec    esi
  40ad3a:	push   0xffffff89
  40ad3c:	test   DWORD PTR ds:0xe8b65bab,0xd85ed53e
  40ad46:	jnp    0x40ad34
  40ad48:	call   0x2811:0x5e72019a
  40ad4f:	xchg   ecx,eax
  40ad50:	push   ecx
  40ad51:	js     0x40ad77
  40ad53:	add    DWORD PTR [edi+eiz*4-0x5a],ebx
  40ad57:	push   0xffffffbb
  40ad59:	aam    0xab
  40ad5b:	(bad)  
  40ad5c:	dec    ebx
  40ad5d:	jns    0x40ad05
  40ad5f:	fisubr WORD PTR [esi+0x33]
  40ad62:	(bad)  
  40ad63:	adc    ecx,esp
  40ad65:	xchg   ecx,eax
  40ad66:	fcomp  QWORD PTR [ecx]
  40ad68:	lds    eax,FWORD PTR [esi+ebx*2-0x7243f4a1]
  40ad6f:	mov    ah,0x3e
  40ad71:	sbb    eax,DWORD PTR [ebx]
  40ad73:	xchg   ebp,eax
  40ad74:	stc    
  40ad75:	loope  0x40ada7
  40ad77:	daa    
  40ad78:	dec    ebx
  40ad79:	adc    al,0xf6
  40ad7b:	movnti DWORD PTR [ecx],ebx
  40ad7e:	icebp  
  40ad7f:	mov    al,0x30
  40ad81:	xor    DWORD PTR [eax-0x55],eax
  40ad84:	aas    
  40ad85:	xor    BYTE PTR [ebp-0x31],0xfd
  40ad89:	repnz (bad) 
  40ad8b:	xor    esi,DWORD PTR [edx]
  40ad8d:	mov    ds:0xe1cfda26,eax
  40ad92:	mov    edi,DWORD PTR [edi]
  40ad94:	dec    ebx
  40ad95:	inc    eax
  40ad96:	push   edi
  40ad97:	fist   WORD PTR [ecx-0x3437d622]
  40ad9d:	mov    bl,0xcf
  40ad9f:	cmc    
  40ada0:	jae    0x40ad4b
  40ada2:	mov    ?,WORD PTR [ebx+0x6b]
  40ada5:	mov    bl,0xea
  40ada7:	ficom  WORD PTR [eax-0x2385c391]
  40adad:	and    edi,DWORD PTR [ebx+0x2f9fc870]
  40adb3:	jp     0x40ad58
  40adb5:	addr16 inc esi
  40adb7:	cmp    al,0xad
  40adb9:	sbb    eax,0x1e6ac9e9
  40adbe:	pop    es
  40adbf:	cli    
  40adc0:	jecxz  0x40adfe
  40adc2:	jmp    0x1897:0x252ebe45
  40adc9:	push   es
  40adca:	ins    BYTE PTR es:[edi],dx
  40adcb:	stos   DWORD PTR es:[edi],eax
  40adcc:	sbb    bh,dh
  40adce:	inc    edx
  40adcf:	adc    dh,ah
  40add1:	push   ebp
  40add2:	mov    ds:0x1e19acaa,al
  40add7:	rol    DWORD PTR [ebx-0x1dd79132],1
  40addd:	test   eax,0x8b985953
  40ade2:	adc    ebx,DWORD PTR [ebp+0x28eda29b]
  40ade8:	adc    eax,0xd933d2b3
  40aded:	std    
  40adee:	sbb    ah,BYTE PTR [ecx+esi*8]
  40adf1:	mov    dh,0x9f
  40adf3:	pusha  
  40adf4:	sbb    al,0xa6
  40adf6:	mov    esp,0x23190900
  40adfb:	pop    edi
  40adfc:	push   0x1ae692af
  40ae01:	xchg   esp,eax
  40ae02:	repnz leave 
  40ae04:	dec    edi
  40ae05:	popa   
  40ae06:	mov    edx,0xd204d2cf
  40ae0b:	jno    0x40ae79
  40ae0d:	rcr    DWORD PTR [edi+0x65],cl
  40ae10:	enter  0xef1a,0x5c
  40ae14:	test   BYTE PTR [ecx+edx*2+0x36],ch
  40ae18:	loopne 0x40ae38
  40ae1a:	(bad)  
  40ae1b:	hlt    
  40ae1c:	idiv   DWORD PTR [esi+0x2c]
  40ae1f:	dec    edi
  40ae20:	pushf  
  40ae21:	fprem1 
  40ae23:	cmp    esp,DWORD PTR [bp+di+0x1bd2]
  40ae28:	mov    edi,0x2c2c88fa
  40ae2d:	es mov edi,0x10a8863b
  40ae33:	inc    esp
  40ae34:	push   0xfffffffb
  40ae36:	ret    0xbfce
  40ae39:	loopne 0x40ae0b
  40ae3b:	retf   
  40ae3c:	or     ebp,DWORD PTR ds:[ebp-0xe5c48ed]
  40ae43:	dec    edx
  40ae44:	push   edi
  40ae45:	and    esi,DWORD PTR [ebp+0x62]
  40ae48:	cli    
  40ae49:	sbb    eax,0x8bfd8cc7
  40ae4e:	mov    ebx,0x7c680d74
  40ae53:	ds sbb al,0x40
  40ae56:	addr16 adc al,0x4f
  40ae59:	adc    al,0x63
  40ae5b:	xor    BYTE PTR [edx],ah
  40ae5d:	pushf  
  40ae5e:	out    0x71,eax
  40ae60:	dec    eax
  40ae61:	imul   ecx,DWORD PTR [ecx],0x4f5ca007
  40ae67:	xor    dh,bh
  40ae69:	mov    esi,0xa21d109f
  40ae6e:	repnz xor DWORD PTR [ebx+0x526434e],edi
  40ae75:	test   eax,0xf5fc300a
  40ae7a:	push   ecx
  40ae7b:	mov    edx,0x9696180a
  40ae80:	mov    bl,0xe7
  40ae82:	test   DWORD PTR [edi+0x4e457df0],edi
  40ae88:	xor    eax,0x9bc907c
  40ae8d:	jle    0x40ae93
  40ae8f:	in     al,dx
  40ae90:	es xchg edi,eax
  40ae93:	sub    eax,0x6ca22de3
  40ae98:	inc    eax
  40ae99:	adc    eax,0x520de643
  40ae9e:	push   es
  40ae9f:	mov    eax,ds:0xf42f6fe7
  40aea4:	loopne 0x40aea5
  40aea6:	xchg   BYTE PTR [ebp-0xc],ch
  40aea9:	iret   
  40aeaa:	pop    es
  40aeab:	mov    ds:0xa4921188,al
  40aeb0:	jo     0x40ae3a
  40aeb2:	dec    ebx
  40aeb4:	inc    edx
  40aeb5:	inc    edx
  40aeb6:	jmp    0x40aeda
  40aeb8:	test   DWORD PTR ds:0x5adf5e58,0x3a46e4b
  40aec2:	cwde   
  40aec3:	mov    eax,0x89146ffe
  40aec8:	lock xor ebx,ebp
  40aecb:	(bad)  
  40aecc:	mov    ch,0x94
  40aece:	xchg   BYTE PTR [ebp+0x4d83ca09],ah
  40aed4:	pop    ss
  40aed5:	test   BYTE PTR [esi],al
  40aed7:	mov    ebx,0x195b80f5
  40aedd:	mov    edi,0x3f526565
  40aee2:	sub    BYTE PTR [ecx+edi*4],al
  40aee5:	jmp    0x40af4d
  40aee7:	adc    bh,al
  40aee9:	add    BYTE PTR [esi],dl
  40aeeb:	fild   QWORD PTR [ebp+0x6a]
  40aeee:	or     eax,0x7efb0402
  40aef3:	and    cl,0xd2
  40aef6:	call   0x3009:0x9b202206
  40aefd:	mov    bh,0x80
  40aeff:	mov    al,ds:0x4236f7f6
  40af04:	aam    0x3d
  40af06:	add    eax,0x500295bd
  40af0b:	inc    edi
  40af0c:	adc    DWORD PTR [esi+0x31],edi
  40af0f:	sub    esp,ecx
  40af11:	cmp    BYTE PTR [eax+ebx*4-0x45],bl
  40af15:	pop    ecx
  40af16:	mov    eax,ds:0xa9fa17ab
  40af1b:	and    eax,0x4cca2ec7
  40af20:	mov    ch,0xb2
  40af22:	mov    ebp,0xf19dc5ed
  40af27:	dec    esp
  40af28:	cwde   
  40af29:	addr16 cmc 
  40af2b:	js     0x40af88
  40af2d:	mov    ah,0x30
  40af2f:	adc    ecx,DWORD PTR [ecx-0x55]
  40af32:	shl    DWORD PTR [edi-0x55],cl
  40af35:	sahf   
  40af36:	jno    0x40af99
  40af38:	lods   al,BYTE PTR ds:[esi]
  40af39:	and    eax,0xcf140ee1
  40af3e:	ja     0x40aeee
  40af40:	mov    esp,0xe57f6a7f
  40af45:	adc    eax,0x229cbc9b
  40af4a:	test   bh,0x1f
  40af4d:	push   0x3cd830cc
  40af52:	pop    ds
  40af53:	pop    ecx
  40af54:	mov    esi,DWORD PTR [esi]
  40af56:	mov    WORD PTR fs:[ecx-0x26],gs
  40af5a:	jne    0x40afd2
  40af5c:	test   BYTE PTR [ebx+0x3f],0x85
  40af60:	(bad)  
  40af61:	adc    DWORD PTR [esi-0x6856ecf2],0x51d4889c
  40af6b:	or     DWORD PTR [edi],esi
  40af6d:	(bad)  
  40af6e:	xchg   ecx,eax
  40af6f:	jl     0x40af49
  40af71:	jl     0x40af31
  40af73:	adc    eax,0xf1ebb9e5
  40af78:	pop    esp
  40af79:	xchg   ebp,eax
  40af7a:	pop    esp
  40af7b:	xor    dh,cl
  40af7d:	cli    
  40af7e:	inc    esp
  40af7f:	sbb    al,BYTE PTR [edx-0x1c]
  40af82:	in     eax,0x7
  40af84:	adc    BYTE PTR [ebp-0x3f00d463],ch
  40af8a:	jge    0x40af2b
  40af8c:	sub    al,0x5f
  40af8e:	mov    ecx,0x877b9e4
  40af93:	mov    ebp,0x51b58f2f
  40af98:	sbb    cl,ch
  40af9a:	sub    edi,ebp
  40af9c:	aaa    
  40af9d:	int    0xd4
  40af9f:	nop
  40afa0:	sahf   
  40afa1:	pushf  
  40afa2:	xor    eax,0xb2e557d4
  40afa7:	mov    esp,0x937d8668
  40afac:	les    ecx,FWORD PTR [ecx-0x6da53fee]
  40afb2:	fwait
  40afb3:	sub    dh,bl
  40afb5:	out    dx,al
  40afb6:	xor    DWORD PTR [edi-0x49],edi
  40afb9:	mov    esi,0x3db836fe
  40afbe:	xchg   ebp,eax
  40afbf:	scas   eax,DWORD PTR es:[edi]
  40afc0:	mov    ds:0x94fd7a74,eax
  40afc5:	inc    DWORD PTR [edx-0x2d]
  40afc8:	and    BYTE PTR [esi-0x27a472f9],al
  40afce:	mov    bl,0xd0
  40afd0:	mov    eax,ds:0x157702c
  40afd5:	mov    ah,al
  40afd7:	loopne 0x40b008
  40afd9:	daa    
  40afda:	test   bl,bh
  40afdc:	xor    DWORD PTR [esi+0x625e3627],esp
  40afe2:	dec    esi
  40afe3:	sti    
  40afe4:	xor    BYTE PTR [ebx-0x29cc5903],al
  40afea:	in     eax,dx
  40afeb:	mov    ch,0xf9
  40afed:	xchg   ebp,eax
  40afee:	mov    esp,0xdfbf7ab8
  40aff3:	jbe    0x40afb5
  40aff5:	xor    al,0x6b
  40aff7:	xlat   BYTE PTR ds:[ebx]
  40aff8:	push   0x15047013
  40affd:	inc    esi
  40affe:	neg    BYTE PTR [ecx+0x4]
  40b001:	mov    esp,DWORD PTR [ecx-0x1]
  40b004:	hlt    
  40b005:	cs add esi,ebx
  40b008:	or     al,0x9c
  40b00a:	and    BYTE PTR [edi],0x62
  40b00d:	push   DWORD PTR ds:0x49c93c6a
  40b013:	stos   DWORD PTR es:[edi],eax
  40b014:	(bad)  
  40b015:	cli    
  40b016:	or     ecx,ebx
  40b018:	imul   ebp,DWORD PTR [ebp+0x2a],0x55
  40b01c:	out    dx,al
  40b01d:	cmp    BYTE PTR [ebx+0x34ee187e],ah
  40b023:	add    BYTE PTR ds:0xa87222bf,cl
  40b029:	pop    ebx
  40b02a:	jmp    0x40b058
  40b02c:	mov    BYTE PTR [esi],ch
  40b02e:	in     eax,dx
  40b02f:	adc    esp,DWORD PTR [eax]
  40b031:	cmpps  xmm1,XMMWORD PTR [edi+0x7f53196b],0x9a
  40b039:	jne    0x40b031
  40b03b:	add    eax,0xb1f849ce
  40b040:	dec    esp
  40b041:	mov    ch,0x3e
  40b043:	adc    al,0x98
  40b045:	je     0x40b08d
  40b047:	mov    dh,0x26
  40b049:	add    BYTE PTR [esi-0x287e37fd],ah
  40b04f:	mov    dl,0x86
  40b051:	cmp    BYTE PTR [eax-0x5575534],cl
  40b057:	mov    cl,0xcc
  40b059:	in     al,0xc4
  40b05b:	or     bh,BYTE PTR [edi]
  40b05d:	jl     0x40b046
  40b05f:	mov    ?,WORD PTR [edi]
  40b061:	retf   
  40b062:	cmp    al,0x63
  40b064:	retf   
  40b065:	add    edi,DWORD PTR [esi-0x68954216]
  40b06b:	cs aaa 
  40b06d:	je     0x40b081
  40b06f:	loop   0x40b06a
  40b071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b072:	cmp    BYTE PTR [eax+0x53],cl
  40b075:	ret    
  40b076:	in     al,dx
  40b077:	mov    bh,0x96
  40b079:	pop    ebp
  40b07a:	data16 fdivr QWORD PTR [esi+0x61224a91]
  40b081:	and    edx,edx
  40b083:	mov    ah,0x1f
  40b085:	push   0x1cd228c1
  40b08a:	sbb    BYTE PTR [ebx+0x4cb51bf4],0x89
  40b091:	shl    BYTE PTR ds:0x138ff721,0xca
  40b098:	xor    DWORD PTR [edx],edi
  40b09a:	cwde   
  40b09b:	dec    ebx
  40b09c:	stos   DWORD PTR es:[edi],eax
  40b09d:	mov    gs,WORD PTR [eax]
  40b09f:	jge    0x40b11b
  40b0a1:	pop    ds
  40b0a2:	or     ebp,ecx
  40b0a4:	mov    ah,0xbc
  40b0a6:	push   esp
  40b0a7:	mov    eax,0x59ab88a
  40b0ac:	cdq    
  40b0ad:	dec    ebp
  40b0ae:	mov    esp,0x1723b589
  40b0b3:	or     bl,ch
  40b0b5:	add    bl,BYTE PTR [esi-0x5dfb3126]
  40b0bb:	jno    0x40b136
  40b0bd:	push   ecx
  40b0be:	js     0x40b0a5
  40b0c0:	clc    
  40b0c1:	adc    al,0xd8
  40b0c3:	add    BYTE PTR [edi],bl
  40b0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0c7:	repz xchg esi,eax
  40b0c9:	mov    WORD PTR [ecx-0x1a],ss
  40b0cc:	xor    DWORD PTR [ecx-0x54],0xa2ccaf36
  40b0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0d4:	outs   dx,BYTE PTR ds:[esi]
  40b0d5:	jmp    0xeca8:0xc31e4eea
  40b0dc:	inc    ebx
  40b0dd:	imul   esi,DWORD PTR [ebp-0x6546a0],0x44
  40b0e4:	adc    al,0xf8
  40b0e6:	and    BYTE PTR [ecx+esi*1],0x56
  40b0ea:	pop    ss
  40b0eb:	mov    eax,0x34e24853
  40b0f0:	ret    0x5eba
  40b0f3:	ret    0x2c90
  40b0f6:	jmp    0x5f299745
  40b0fb:	lock scas al,BYTE PTR es:[edi]
  40b0fd:	pop    ebp
  40b0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ff:	lds    esi,FWORD PTR [ecx+0x5393da4f]
  40b105:	pop    ecx
  40b106:	imul   ecx,ebp,0x243615a0
  40b10c:	int    0x5b
  40b10e:	xor    edx,edx
  40b110:	cmp    eax,0xd0c852bb
  40b115:	mov    esp,0x19d64a86
  40b11a:	or     BYTE PTR [ecx-0x10],ch
  40b11d:	mov    DWORD PTR [ebp-0xdc41048],edi
  40b123:	dec    ebx
  40b124:	lds    esi,FWORD PTR [edx]
  40b126:	jg     0x40b19b
  40b128:	lods   eax,DWORD PTR ds:[esi]
  40b129:	(bad)
  40b12c:	fstp   QWORD PTR [edi+0x474aa579]
  40b132:	loopne 0x40b167
  40b134:	int    0x6e
  40b136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b137:	dec    edi
  40b138:	adc    edx,DWORD PTR [edi+0x69]
  40b13b:	lahf   
  40b13c:	in     al,0xd3
  40b13e:	bound  ebx,QWORD PTR [edi]
  40b140:	fs imul ecx,eax,0x55a4c9bc
  40b147:	inc    eax
  40b148:	and    esp,DWORD PTR [edi+ebx*2]
  40b14b:	push   ebp
  40b14c:	dec    edx
  40b14d:	inc    edi
  40b14e:	icebp  
  40b14f:	dec    ebx
  40b150:	idiv   BYTE PTR [ebp-0x78]
  40b153:	ret    0x2cc
  40b156:	push   esp
  40b157:	inc    edi
  40b158:	out    dx,al
  40b159:	mov    ebx,0xc7c75fc6
  40b15e:	inc    ecx
  40b15f:	std    
  40b160:	jae    0x40b1a5
  40b162:	es iret 
  40b164:	or     ebx,DWORD PTR [esi+0x59d0f9f6]
  40b16a:	jo     0x40b16f
  40b16c:	cmp    BYTE PTR [ebp-0x61],dh
  40b16f:	fbstp  TBYTE PTR [edx+0x19fc439]
  40b175:	push   ebx
  40b176:	jmp    0xf94b039d
  40b17b:	int3   
  40b17c:	jecxz  0x40b168
  40b17e:	lds    ebp,FWORD PTR [eax+0x55ec3019]
  40b184:	retf   
  40b185:	lods   eax,DWORD PTR ds:[esi]
  40b186:	push   eax
  40b187:	push   es
  40b188:	push   eax
  40b189:	xchg   ecx,eax
  40b18a:	jmp    0x73cd7455
  40b18f:	jo     0x40b206
  40b191:	pushf  
  40b192:	shl    DWORD PTR [ecx-0x26],1
  40b195:	adc    al,0x52
  40b197:	inc    edx
  40b198:	shr    DWORD PTR [ecx],0x98
  40b19b:	inc    esi
  40b19c:	sbb    al,0xd7
  40b19e:	stos   BYTE PTR es:[edi],al
  40b19f:	ret    0xb5b5
  40b1a2:	pop    esp
  40b1a3:	(bad)  
  40b1a4:	xchg   ebx,eax
  40b1a5:	push   ebp
  40b1a6:	inc    esp
  40b1a7:	into   
  40b1a8:	scas   al,BYTE PTR es:[edi]
  40b1a9:	sbb    eax,0xddaf4652
  40b1ae:	test   eax,0x527f4298
  40b1b3:	mov    esi,0xd57add39
  40b1b8:	xor    DWORD PTR [edi],esi
  40b1ba:	mov    dh,0xa3
  40b1bc:	mov    eax,0xca5618e2
  40b1c1:	out    0x87,al
  40b1c3:	dec    ecx
  40b1c4:	ficom  WORD PTR ds:0xe9ebfbbe
  40b1ca:	mov    esp,0x5e4813b1
  40b1cf:	popf   
  40b1d0:	push   esp
  40b1d1:	xor    eax,0x29150de1
  40b1d6:	call   0x4e2908ff
  40b1db:	dec    eax
  40b1dc:	jp     0x40b165
  40b1de:	ins    DWORD PTR es:[edi],dx
  40b1df:	push   0xffffffb1
  40b1e1:	jg     0x40b1bd
  40b1e3:	pop    ebp
  40b1e4:	test   DWORD PTR [esi],edx
  40b1e6:	inc    esi
  40b1e7:	ss push edi
  40b1e9:	adc    eax,0xb995a231
  40b1ee:	jle    0x40b248
  40b1f0:	xchg   ebp,eax
  40b1f1:	popa   
  40b1f2:	adc    ah,0x9e
  40b1f5:	fadd   DWORD PTR [esi-0x3a]
  40b1f8:	sbb    edx,DWORD PTR [edx+esi*1-0x2610609c]
  40b1ff:	mov    edx,0xdc8e7a30
  40b204:	out    dx,eax
  40b205:	mov    al,ds:0x3ea76d37
  40b20a:	mov    al,ds:0xf3d7a928
  40b20f:	(bad)  
  40b210:	fcomp  QWORD PTR [eax+eiz*1+0xd]
  40b214:	loop   0x40b19f
  40b216:	dec    eax
  40b217:	adc    eax,0x77cb976e
  40b21c:	inc    esp
  40b21d:	xor    ch,BYTE PTR [edi+esi*4+0x30]
  40b221:	dec    esp
  40b222:	mov    cl,0x42
  40b224:	jne    0x40b1cc
  40b226:	xchg   DWORD PTR [ecx],ebx
  40b228:	repz pop eax
  40b22a:	arpl   WORD PTR [ebp-0x38d0839a],bp
  40b230:	sbb    al,0x9a
  40b232:	or     eax,DWORD PTR [eax+0x4a]
  40b235:	xchg   edi,eax
  40b236:	rcl    BYTE PTR [esi],1
  40b238:	jb     0x40b27a
  40b23a:	out    dx,al
  40b23b:	mul    edx
  40b23d:	stos   BYTE PTR es:[edi],al
  40b23e:	and    DWORD PTR [edi+0x32864c6d],ebp
  40b244:	mov    edx,0x72ca95c3
  40b249:	sub    ah,0x55
  40b24c:	push   es
  40b24d:	xor    DWORD PTR [ebx],ebx
  40b24f:	dec    esp
  40b250:	xchg   DWORD PTR [ebx],edi
  40b252:	(bad)  
  40b253:	out    0x59,eax
  40b255:	jae    0x40b27e
  40b257:	(bad)  
  40b258:	(bad)  
  40b259:	and    DWORD PTR [eax+0x58],ebp
  40b25c:	cs pop ebx
  40b25e:	ror    DWORD PTR [esi-0x40],cl
  40b261:	adc    DWORD PTR [ecx+0x11],0x79
  40b265:	mov    dl,0x53
  40b267:	imul   eax,DWORD PTR [edi-0x2],0xc5057490
  40b26e:	mov    eax,0xd466be59
  40b273:	dec    ebp
  40b274:	inc    eax
  40b275:	fisttp QWORD PTR [ecx+0x7cfb4230]
  40b27b:	push   esi
  40b27c:	repnz ss (bad) 
  40b27f:	sub    al,0x62
  40b281:	outs   dx,BYTE PTR ds:[esi]
  40b282:	and    esp,DWORD PTR [ebx]
  40b284:	lods   eax,DWORD PTR ds:[esi]
  40b285:	sub    DWORD PTR [edx+edx*4-0x24],0x89277710
  40b28d:	adc    DWORD PTR [ebp+0x6f],0x1d
  40b291:	fs sub eax,0x270a380
  40b297:	or     ebp,ecx
  40b299:	mov    ds,WORD PTR [ecx]
  40b29b:	and    ebp,DWORD PTR [ebp+ebp*1-0x258fc3c1]
  40b2a2:	fadd   QWORD PTR [eax-0x790f9a7f]
  40b2a8:	xchg   ecx,eax
  40b2a9:	xor    eax,0x87742ae8
  40b2ae:	ja     0x40b329
  40b2b0:	mov    eax,0x5a13260b
  40b2b5:	lea    edi,[ebx-0x5]
  40b2b8:	(bad)  
  40b2b9:	mov    al,0xc4
  40b2bb:	mov    gs,WORD PTR [eax-0xe49e514]
  40b2c1:	jbe    0x40b2fb
  40b2c3:	lock jne 0x40b28f
  40b2c6:	push   ebp
  40b2c7:	sbb    BYTE PTR [ecx-0x45f90a1e],ah
  40b2cd:	cmp    edx,DWORD PTR [eax]
  40b2cf:	pop    edi
  40b2d0:	dec    esp
  40b2d1:	mov    ds:0x2b0dccb5,eax
  40b2d6:	push   0xffffffd1
  40b2d8:	jns    0x40b26d
  40b2da:	addr16 in al,0x4f
  40b2dd:	lea    esi,[ebx+0x1678ff31]
  40b2e3:	pop    ebx
  40b2e4:	pop    ds
  40b2e5:	jbe    0x40b2c0
  40b2e7:	idiv   edi
  40b2e9:	mov    ch,0xd1
  40b2eb:	sub    al,0xaa
  40b2ed:	xor    al,0x50
  40b2ef:	push   ecx
  40b2f0:	leave  
  40b2f1:	fdiv   QWORD PTR [edx]
  40b2f3:	sub    eax,0x436a05b4
  40b2f8:	add    BYTE PTR [eax+0x4e6a14f1],0xac
  40b2ff:	lods   al,BYTE PTR ds:[esi]
  40b300:	(bad)  
  40b301:	jmp    DWORD PTR [edx+0xf]
  40b304:	sbb    ebp,DWORD PTR ds:0x4211fbf5
  40b30a:	nop
  40b30b:	xchg   esi,eax
  40b30c:	pop    edi
  40b30d:	mov    edi,0x23a9092b
  40b312:	stos   DWORD PTR es:[edi],eax
  40b313:	cmp    al,0xb
  40b315:	(bad)  
  40b316:	pop    esi
  40b317:	dec    edi
  40b318:	arpl   bp,si
  40b31a:	or     al,0x8f
  40b31c:	push   0x46
  40b31e:	add    al,0x3f
  40b320:	es aaa 
  40b322:	scas   al,BYTE PTR es:[edi]
  40b323:	lds    ebp,FWORD PTR [esp+edi*8-0x2c0dd2e2]
  40b32a:	sub    ecx,esp
  40b32c:	xchg   esp,eax
  40b32d:	push   eax
  40b32e:	and    BYTE PTR [edi+ecx*1+0x75],dl
  40b332:	jmp    0x77a3:0xa45901f6
  40b339:	or     bl,bh
  40b33b:	xchg   ebx,eax
  40b33c:	ja     0x40b2be
  40b33e:	jnp    0x40b373
  40b340:	aas    
  40b341:	pop    ds
  40b342:	pop    edx
  40b343:	mov    ecx,0xe7ceb4a2
  40b349:	sbb    eax,0x95e8fa74
  40b34e:	shl    BYTE PTR [ecx+0x37e19180],1
  40b354:	xchg   ebp,eax
  40b355:	mov    esi,esi
  40b357:	jge    0x40b337
  40b359:	cdq    
  40b35a:	pop    ebx
  40b35b:	push   0xffffff87
  40b35d:	jp     0x40b34f
  40b35f:	or     al,0x99
  40b361:	mov    bl,ch
  40b363:	mov    dl,0xa4
  40b365:	cmp    DWORD PTR ds:0xb84fd535,esp
  40b36b:	clc    
  40b36c:	mov    eax,ds:0xb0d288d7
  40b371:	dec    ebx
  40b372:	aad    0x64
  40b374:	stos   DWORD PTR es:[edi],eax
  40b375:	sbb    BYTE PTR [ebp-0x35274381],ah
  40b37b:	push   DWORD PTR [ebx-0x342d41b4]
  40b381:	xor    esi,edi
  40b383:	and    BYTE PTR [edx-0x5c],dl
  40b386:	jns    0x40b37a
  40b388:	xchg   ebx,eax
  40b389:	dec    edi
  40b38a:	bnd jno 0x40b372
  40b38d:	push   ecx
  40b38e:	mov    ?,WORD PTR [edx]
  40b390:	jb     0x40b3d5
  40b392:	retf   0x674e
  40b395:	or     al,0xb0
  40b397:	out    dx,al
  40b398:	lock js 0x40b3bb
  40b39b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b39c:	nop
  40b39d:	cmp    al,0x1b
  40b39f:	test   BYTE PTR [bx+di],ah
  40b3a2:	adc    al,0xdd
  40b3a4:	xor    dh,BYTE PTR [ebx]
  40b3a6:	xchg   edi,eax
  40b3a7:	enter  0x3cd7,0xa7
  40b3ab:	fwait
  40b3ac:	(bad)  
  40b3ad:	adc    edx,esp
  40b3af:	nop
  40b3b0:	out    0xd4,eax
  40b3b2:	pusha  
  40b3b3:	fild   QWORD PTR [ebx+0xfbedef7]
  40b3b9:	cmp    ch,BYTE PTR [ebx]
  40b3bb:	jp     0x40b35b
  40b3bd:	adc    esi,DWORD PTR [eax+0x52]
  40b3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3c1:	lds    edi,FWORD PTR [edx]
  40b3c3:	pop    edx
  40b3c4:	xchg   BYTE PTR es:[ebx],ch
  40b3c7:	stos   BYTE PTR es:[edi],al
  40b3c8:	xchg   esp,eax
  40b3c9:	mov    ah,0xb1
  40b3cb:	cmp    eax,0x6773f5a6
  40b3d0:	jecxz  0x40b3ec
  40b3d2:	and    BYTE PTR [eax+0x33],ch
  40b3d5:	adc    cl,BYTE PTR [edx]
  40b3d7:	sar    BYTE PTR [esi],cl
  40b3d9:	sbb    al,0x67
  40b3db:	fsubr  DWORD PTR [eax+0x2e]
  40b3de:	stc    
  40b3df:	repz arpl bp,cx
  40b3e2:	adc    DWORD PTR [esi],eax
  40b3e4:	jmp    0x40b41a
  40b3e6:	or     eax,0x69206442
  40b3eb:	push   eax
  40b3ec:	pop    ecx
  40b3ed:	xlat   BYTE PTR ds:[ebx]
  40b3ee:	push   cs
  40b3ef:	iret   
  40b3f0:	mov    ch,0x90
  40b3f2:	push   es
  40b3f3:	mov    ds:0x9e9e59c5,eax
  40b3f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f9:	jle    0x40b3a5
  40b3fb:	aad    0xf8
  40b3fd:	mov    edi,0x87764d29
  40b402:	add    dl,ch
  40b404:	xchg   edi,eax
  40b405:	aad    0xf7
  40b407:	mov    dh,0x8d
  40b409:	jb     0x40b3cf
  40b40b:	xchg   ebx,esp
  40b40d:	and    eax,DWORD PTR [esi-0x3affa781]
  40b413:	rol    BYTE PTR [ebp+ebp*8-0x6],0x4c
  40b418:	fsub   QWORD PTR [esi+ebx*8]
  40b41b:	repz xchg ebx,eax
  40b41d:	jl     0x40b470
  40b41f:	add    al,0x28
  40b421:	pop    esp
  40b422:	pop    edi
  40b423:	dec    ebx
  40b424:	xor    al,0xb3
  40b426:	cld    
  40b427:	xchg   ecx,eax
  40b428:	add    ecx,ebx
  40b42a:	push   0x36fdf9ae
  40b42f:	nop
  40b430:	retf   
  40b431:	sar    DWORD PTR [ecx],cl
  40b433:	jmp    0x40b4a5
  40b435:	pop    ss
  40b436:	xchg   DWORD PTR [ebp+0x5d],eax
  40b439:	out    0x64,al
  40b43b:	retf   
  40b43c:	ins    DWORD PTR es:[edi],dx
  40b43d:	fisttp QWORD PTR [eax]
  40b43f:	loop   0x40b403
  40b441:	dec    esp
  40b442:	inc    ebx
  40b443:	dec    edi
  40b444:	mov    cl,0x8a
  40b446:	shl    DWORD PTR [ebp-0xb],cl
  40b449:	jb     0x40b445
  40b44b:	push   0xe0534487
  40b450:	and    BYTE PTR [esi],ah
  40b452:	(bad)  
  40b453:	inc    ebp
  40b454:	cmc    
  40b455:	xor    BYTE PTR [edx+edx*2+0x5bc911d4],ch
  40b45c:	jg     0x40b404
  40b45e:	mov    eax,ds:0x2ee33f86
  40b463:	clc    
  40b464:	fisttp WORD PTR [edi+0x3dc0ac17]
  40b46a:	loope  0x40b48b
  40b46c:	pop    ebx
  40b46d:	loop   0x40b424
  40b46f:	je     0x40b3f9
  40b471:	jbe    0x40b44d
  40b473:	imul   eax,DWORD PTR [ecx],0xac23336a
  40b479:	or     DWORD PTR [esi+0x61],0x429cb6b7
  40b480:	xor    eax,0x76153152
  40b485:	es inc eax
  40b487:	leave  
  40b488:	daa    
  40b489:	cmp    eax,0xd2d27c93
  40b48e:	js     0x40b4db
  40b490:	dec    eax
  40b491:	mov    WORD PTR [eax+0x5d],?
  40b494:	popf   
  40b495:	mov    edi,0x4eecc160
  40b49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b49b:	or     DWORD PTR [edx],ebx
  40b49d:	dec    esp
  40b49e:	inc    esi
  40b49f:	js     0x40b44b
  40b4a1:	xor    edi,ebp
  40b4a3:	(bad)  
  40b4a4:	aaa    
  40b4a5:	xchg   esp,eax
  40b4a6:	cli    
  40b4a7:	ret    
  40b4a8:	pop    esp
  40b4a9:	push   0x6cccac2d
  40b4ae:	sbb    BYTE PTR [ebp+0x562dfcbf],cl
  40b4b4:	sbb    DWORD PTR [edi+0x28a2ec2],0x68
  40b4bb:	les    eax,FWORD PTR [edx-0x20e5176]
  40b4c1:	xor    cl,dh
  40b4c3:	mov    cs,WORD PTR [ecx+0x70]
  40b4c6:	aam    0xb7
  40b4c8:	ins    BYTE PTR es:[edi],dx
  40b4c9:	rcr    bl,cl
  40b4cb:	scas   eax,DWORD PTR es:[edi]
  40b4cc:	imul   ebx,DWORD PTR [esi],0xffffff97
  40b4cf:	xlat   BYTE PTR ds:[ebx]
  40b4d0:	sbb    eax,0x71141875
  40b4d5:	mov    ecx,0xa2a308c9
  40b4da:	mov    edx,0xf37db9a0
  40b4df:	mov    esi,DWORD PTR [edx-0x2e740a60]
  40b4e5:	and    eax,0x8518bfd2
  40b4ea:	adc    BYTE PTR [ebx+0x4a],0x18
  40b4ee:	push   ebx
  40b4ef:	sbb    DWORD PTR [esi+0x35],edx
  40b4f2:	mov    gs,WORD PTR [esi-0x6f]
  40b4f5:	aas    
  40b4f6:	lods   eax,DWORD PTR ds:[esi]
  40b4f7:	add    ebx,edx
  40b4f9:	std    
  40b4fa:	push   0xc8ac3181
  40b4ff:	leave  
  40b500:	sbb    edi,ebx
  40b502:	dec    edi
  40b503:	adc    edi,DWORD PTR [edx]
  40b505:	int    0xf0
  40b507:	aam    0xbd
  40b509:	mov    ds:0x41eb0417,eax
  40b50e:	retf   0xd70e
  40b511:	mov    al,ah
  40b513:	mov    BYTE PTR [eax+0x659ade3],bh
  40b519:	into   
  40b51a:	push   0x24
  40b51c:	push   cs
  40b51d:	xchg   DWORD PTR ss:[edi+0x6fc5cc16],ebx
  40b524:	jle    0x40b4fe
  40b526:	mov    esp,0x800360e0
  40b52b:	fistp  WORD PTR [edx]
  40b52d:	add    al,0x6d
  40b52f:	lods   al,BYTE PTR ds:[esi]
  40b530:	xor    bl,BYTE PTR [esi+0x2a1d987c]
  40b536:	push   eax
  40b537:	leave  
  40b538:	bound  edx,QWORD PTR [ecx-0x64]
  40b53b:	aas    
  40b53c:	xlat   BYTE PTR ds:[ebx]
  40b53d:	inc    ebx
  40b53e:	adc    BYTE PTR [eax-0x4a],ch
  40b541:	repnz push cs
  40b543:	mov    dh,0xf3
  40b545:	mov    edx,cs
  40b547:	or     eax,DWORD PTR [edi-0x188fde4e]
  40b54d:	daa    
  40b54e:	outs   dx,BYTE PTR ds:[esi]
  40b550:	jbe    0x40b514
  40b552:	inc    esi
  40b553:	in     al,dx
  40b554:	in     eax,0xa1
  40b556:	stos   DWORD PTR es:[edi],eax
  40b557:	fadd   st,st(1)
  40b559:	pop    ecx
  40b55a:	ss push ecx
  40b55c:	stos   BYTE PTR es:[edi],al
  40b55d:	sbb    edx,DWORD PTR [ebp+0x46129f8a]
  40b563:	jne    0x40b56b
  40b565:	fdivr  st,st(7)
  40b567:	nop
  40b568:	loopne 0x40b561
  40b56a:	inc    ebx
  40b56b:	aam    0x80
  40b56d:	xor    DWORD PTR ds:0xc4606f94,0xf0440dbf
  40b577:	pop    es
  40b578:	xor    al,0x3e
  40b57a:	lods   eax,DWORD PTR ds:[esi]
  40b57b:	stos   DWORD PTR es:[edi],eax
  40b57c:	pusha  
  40b57d:	push   ss
  40b57e:	ror    DWORD PTR [ecx-0x25],0xc2
  40b582:	ret    
  40b583:	xor    BYTE PTR [esi-0x3c],bh
  40b586:	loopne 0x40b521
  40b588:	pop    ebx
  40b589:	repz xor DWORD PTR [ebx+0x29c265c7],esp
  40b590:	aad    0x8b
  40b592:	out    dx,eax
  40b593:	pop    edx
  40b594:	mov    ebx,0x3af11089
  40b599:	dec    ecx
  40b59a:	fadd   QWORD PTR [ecx-0x61]
  40b59d:	pop    edi
  40b59e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b59f:	adc    dh,BYTE PTR [ebx+0x5607d36b]
  40b5a5:	mov    ds:0x94df7efc,eax
  40b5aa:	adc    ebp,DWORD PTR [ecx-0x76]
  40b5ad:	(bad)  
  40b5ae:	adc    al,0x3a
  40b5b0:	pop    ds
  40b5b1:	ficom  DWORD PTR [edx]
  40b5b3:	fbld   TBYTE PTR [edi-0x70af0457]
  40b5b9:	jl     0x40b60a
  40b5bb:	push   es
  40b5bc:	mov    ebx,edx
  40b5be:	inc    esi
  40b5bf:	push   esi
  40b5c0:	jl     0x40b5fb
  40b5c2:	jge    0x40b5d7
  40b5c4:	sub    ah,BYTE PTR [ebp-0x7e1dda02]
  40b5ca:	bound  esp,QWORD PTR [edx+eax*1]
  40b5cd:	inc    ecx
  40b5ce:	mov    ebp,0xdf59a538
  40b5d3:	sar    DWORD PTR ds:0x451c04b5,cl
  40b5d9:	xchg   ecx,eax
  40b5da:	push   ss
  40b5db:	inc    ecx
  40b5dc:	loope  0x40b5c9
  40b5de:	xor    al,0xf9
  40b5e0:	add    eax,0x9412e6b
  40b5e5:	cmc    
  40b5e6:	cli    
  40b5e7:	hlt    
  40b5e8:	or     eax,0xb99452dc
  40b5ed:	and    edi,DWORD PTR ds:0xc26406b0
  40b5f3:	enter  0x7361,0x47
  40b5f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f8:	fstp   QWORD PTR [ecx-0x6e30fc35]
  40b5fe:	call   0xdc7d9e99
  40b603:	call   0xe4cdae4f
  40b608:	test   eax,0xff6b16c0
  40b60d:	sub    al,0x11
  40b60f:	enter  0x75e4,0xdf
  40b613:	pop    ss
  40b614:	stc    
  40b615:	leave  
  40b616:	daa    
  40b617:	aad    0x60
  40b619:	iret   
  40b61a:	jns    0x40b622
  40b61c:	xor    eax,0x7961e946
  40b621:	mov    ebp,0x1cc590ca
  40b626:	dec    ecx
  40b627:	push   esi
  40b628:	jne    0x40b658
  40b62a:	cwde   
  40b62b:	inc    edi
  40b62c:	push   cx
  40b62e:	mov    dh,0x5f
  40b630:	fisttp QWORD PTR [esi]
  40b632:	pop    ebp
  40b633:	jno    0x40b6b1
  40b635:	pop    esp
  40b636:	jno    0x40b64f
  40b638:	cdq    
  40b639:	push   es
  40b63a:	cwde   
  40b63b:	bound  eax,QWORD PTR [edx+0x4219119d]
  40b641:	outs   dx,DWORD PTR ds:[esi]
  40b642:	pop    edx
  40b643:	pop    ebx
  40b644:	mov    ah,0xe4
  40b646:	jle    0x40b6c4
  40b648:	jae    0x40b688
  40b64a:	jnp    0x40b5fa
  40b64c:	rcl    DWORD PTR [edx-0x4c],cl
  40b64f:	xor    bl,ah
  40b651:	arpl   WORD PTR [edx],dx
  40b653:	sub    eax,0xa91293ed
  40b658:	iret   
  40b659:	out    dx,eax
  40b65a:	jmp    0x40b653
  40b65c:	inc    esi
  40b65d:	xor    al,0xf6
  40b65f:	dec    edi
  40b660:	cmp    BYTE PTR [edx],ch
  40b662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b663:	jge    0x40b64b
  40b665:	inc    ebx
  40b666:	xor    DWORD PTR [ebx-0x27],0x2e
  40b66a:	cmp    eax,0x1b356c38
  40b66f:	or     DWORD PTR [eax],0x7a
  40b672:	leave  
  40b673:	pushf  
  40b674:	push   edx
  40b675:	mov    ch,0x9a
  40b677:	idiv   BYTE PTR [eax+0x79]
  40b67a:	xlat   BYTE PTR fs:[ebx]
  40b67c:	push   ebx
  40b67d:	or     eax,0xcf97b799
  40b682:	js     0x40b65b
  40b684:	adc    ecx,DWORD PTR [ebx+eiz*4+0x35]
  40b688:	stc    
  40b689:	jns    0x40b66d
  40b68b:	out    dx,al
  40b68c:	mov    bl,0x9d
  40b68e:	sub    al,0xcb
  40b690:	dec    ecx
  40b691:	loope  0x40b677
  40b693:	mov    edi,edx
  40b695:	div    BYTE PTR [edx-0x12e710f6]
  40b69b:	jno    0x40b625
  40b69d:	inc    esp
  40b69e:	push   ecx
  40b69f:	jbe    0x40b62b
  40b6a1:	fsubr  QWORD PTR [ecx+0x3b]
  40b6a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6a5:	xchg   edi,eax
  40b6a6:	inc    esi
  40b6a7:	inc    edx
  40b6a8:	js     0x40b70a
  40b6aa:	xchg   esi,eax
  40b6ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6ac:	push   edi
  40b6ad:	cmp    cl,dl
  40b6af:	inc    edi
  40b6b0:	and    al,cl
  40b6b2:	scas   eax,DWORD PTR es:[edi]
  40b6b3:	ret    0x4e64
  40b6b6:	pop    ebp
  40b6b7:	dec    edi
  40b6b8:	ins    BYTE PTR es:[edi],dx
  40b6b9:	jb     0x40b72e
  40b6bb:	xchg   ebx,eax
  40b6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6bd:	mov    BYTE PTR [ecx+edx*2],ch
  40b6c0:	cdq    
  40b6c1:	test   al,0x1e
  40b6c3:	loop   0x40b6e9
  40b6c5:	cli    
  40b6c6:	push   es
  40b6c7:	lock stos DWORD PTR es:[edi],eax
  40b6c9:	outs   dx,DWORD PTR ds:[esi]
  40b6ca:	cmp    eax,0xaf3fa88f
  40b6cf:	jle    0x40b731
  40b6d1:	inc    eax
  40b6d2:	add    BYTE PTR [esi-0x65d285b0],bh
  40b6d8:	jmp    0x23698353
  40b6dd:	call   0x654d23a1
  40b6e2:	ins    BYTE PTR es:[edi],dx
  40b6e3:	shr    DWORD PTR [eax-0x35],1
  40b6e6:	pusha  
  40b6e7:	cmp    al,ah
  40b6e9:	add    DWORD PTR [ecx+0x3e987726],edx
  40b6ef:	or     ebx,DWORD PTR [eax-0x906e211]
  40b6f5:	lods   al,BYTE PTR ds:[esi]
  40b6f6:	sti    
  40b6f7:	fsub   st(5),st
  40b6f9:	inc    edx
  40b6fa:	sar    DWORD PTR [ecx+0x43],cl
  40b6fd:	call   0x4fce870c
  40b702:	(bad)  
  40b703:	std    
  40b704:	xchg   edi,eax
  40b705:	jge    0x40b75c
  40b707:	loopne 0x40b6b1
  40b709:	xor    al,0xfe
  40b70b:	mov    edi,0x86bed776
  40b710:	imul   DWORD PTR [eax-0x28]
  40b713:	cmp    BYTE PTR [edx],ch
  40b715:	jo     0x40b76b
  40b717:	jmp    eax
  40b719:	pop    es
  40b71a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b71b:	jecxz  0x40b6bc
  40b71d:	or     BYTE PTR [edi+0x565732ef],dh
  40b723:	cmp    cl,BYTE PTR [ecx+0xe0a3643]
  40b729:	cmp    BYTE PTR [ecx-0x77],dh
  40b72c:	iret   
  40b72d:	jmp    0x941d4a6
  40b732:	lahf   
  40b733:	clc    
  40b734:	loop   0x40b758
  40b736:	dec    ebx
  40b737:	and    al,0x15
  40b739:	dec    ecx
  40b73a:	add    eax,0xef17d0c
  40b73f:	ret    0xa88a
  40b742:	es scas eax,DWORD PTR es:[edi]
  40b744:	sbb    eax,0xb9812dd2
  40b749:	cmp    BYTE PTR [ebx-0x7779b263],al
  40b74f:	popf   
  40b750:	fcom   DWORD PTR [ebx-0x3868c98]
  40b756:	out    dx,eax
  40b757:	sub    BYTE PTR [ebx+0x5b],ah
  40b75a:	pop    esi
  40b75b:	aaa    
  40b75c:	xchg   ebx,eax
  40b75d:	pop    esp
  40b75e:	fisubr WORD PTR [eax+0x37]
  40b761:	sbb    edx,DWORD PTR [edx]
  40b763:	lods   eax,DWORD PTR ds:[esi]
  40b764:	mov    edi,?
  40b766:	mov    ch,dh
  40b768:	imul   esp,DWORD PTR ds:0x62e837eb,0x60399311
  40b772:	inc    ebx
  40b773:	aad    0xa4
  40b775:	cmp    al,0x76
  40b777:	out    dx,al
  40b778:	je     0x40b73c
  40b77a:	mov    al,0xa2
  40b77c:	sahf   
  40b77d:	mov    bh,0x20
  40b77f:	jge    0x40b725
  40b781:	(bad)  
  40b782:	fbld   TBYTE PTR [edi+0x56305476]
  40b788:	and    eax,0xa5adfd2f
  40b78d:	gs stc 
  40b78f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b790:	mov    cl,0x65
  40b792:	adc    DWORD PTR [edx-0x7602cb6f],ebp
  40b798:	pusha  
  40b799:	stos   BYTE PTR es:[edi],al
  40b79a:	cmp    cl,bh
  40b79c:	sbb    cl,BYTE PTR [ebp+0x28]
  40b79f:	xchg   ecx,eax
  40b7a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7a1:	iret   
  40b7a2:	cmp    DWORD PTR [ecx+0x68b1a246],0xffffffaa
  40b7a9:	stos   DWORD PTR es:[edi],eax
  40b7aa:	mov    al,ah
  40b7ac:	and    ebp,eax
  40b7ae:	cdq    
  40b7af:	(bad)  
  40b7b1:	xchg   esp,eax
  40b7b2:	sbb    eax,0x1a8ce803
  40b7b7:	outs   dx,BYTE PTR ds:[esi]
  40b7b8:	lods   eax,DWORD PTR ds:[esi]
  40b7b9:	mov    dl,0x69
  40b7bb:	sbb    al,0x42
  40b7bd:	jno    0x40b777
  40b7bf:	push   edx
  40b7c0:	cs in  eax,dx
  40b7c2:	outs   dx,BYTE PTR ds:[esi]
  40b7c3:	ins    BYTE PTR es:[edi],dx
  40b7c4:	shl    DWORD PTR [ebx+eax*4-0x5d85c540],1
  40b7cb:	jo     0x40b81c
  40b7cd:	(bad)  
  40b7ce:	iret   
  40b7cf:	mov    DWORD PTR [edx+ebp*2],ebx
  40b7d2:	test   BYTE PTR [eax],dh
  40b7d4:	dec    ebx
  40b7d5:	xor    ch,dh
  40b7d7:	es call 0xad2bded1
  40b7dd:	imul   ebp,DWORD PTR [ebx-0x62876589],0x63c27bca
  40b7e7:	inc    ecx
  40b7e8:	pop    ebx
  40b7e9:	std    
  40b7ea:	push   ebx
  40b7eb:	or     eax,0x19ddce3e
  40b7f0:	lods   al,BYTE PTR ds:[esi]
  40b7f1:	addr16 mov edx,0x329fe034
  40b7f7:	jns    0x40b791
  40b7f9:	add    BYTE PTR [ebx+0x7868c467],cl
  40b7ff:	mov    bl,BYTE PTR [ebx]
  40b801:	call   0xa5808d3d
  40b806:	xchg   BYTE PTR [ebx-0x374bbfd3],dl
  40b80c:	test   BYTE PTR [edx+0x78e9270c],al
  40b812:	gs add esi,edx
  40b815:	test   BYTE PTR [edi-0x781d1f9b],dl
  40b81b:	mov    edi,0x8ea46918
  40b820:	mov    eax,edx
  40b822:	dec    ecx
  40b823:	or     ah,al
  40b825:	fimul  WORD PTR [ecx+0x41]
  40b828:	fcom   DWORD PTR ds:[edx+0x1b71e824]
  40b82f:	daa    
  40b830:	call   0x37beba54
  40b835:	pop    ebp
  40b836:	and    esi,esp
  40b838:	ins    BYTE PTR es:[edi],dx
  40b839:	mov    edi,0x5ec4088d
  40b83e:	adc    al,0x68
  40b840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b841:	push   eax
  40b843:	or     eax,DWORD PTR [ecx-0x19]
  40b846:	lods   eax,DWORD PTR ds:[esi]
  40b847:	aaa    
  40b848:	les    edx,FWORD PTR [eax]
  40b84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b84b:	jle    0x40b8b6
  40b84d:	add    BYTE PTR [ebp-0x4ca1e218],dh
  40b853:	inc    BYTE PTR ds:0xd9b77076
  40b859:	outs   dx,BYTE PTR ds:[esi]
  40b85a:	push   ebp
  40b85b:	sbb    BYTE PTR [ebp-0x68],bl
  40b85e:	iret   
  40b85f:	mov    esi,0xc53e4b7a
  40b864:	enter  0x56d3,0x2c
  40b868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b869:	sub    al,0x15
  40b86b:	mov    ds:0xe92ea614,al
  40b870:	call   0xef32:0xb498b7b8
  40b877:	repz cwde 
  40b879:	fldenv [ecx]
  40b87b:	fnstenv [ebp-0x43]
  40b87e:	push   edx
  40b87f:	xchg   edi,eax
  40b880:	sbb    dh,dl
  40b882:	repnz or DWORD PTR ds:[ecx],edx
  40b886:	ret    0xf559
  40b889:	adc    eax,0x5c26cb98
  40b88e:	mov    eax,ds:0x14e8f366
  40b893:	inc    esp
  40b894:	add    eax,0x156b0113
  40b899:	cld    
  40b89a:	(bad)  
  40b89b:	in     eax,dx
  40b89c:	(bad)  
  40b89d:	jmp    0x8f97:0x539da638
  40b8a4:	push   cs
  40b8a5:	(bad)  
  40b8a6:	pushf  
  40b8a7:	xchg   ecx,eax
  40b8a8:	loopne 0x40b8cd
  40b8aa:	jb     0x40b83e
  40b8ac:	fwait
  40b8ad:	add    esp,DWORD PTR [edi+0x5d415e85]
  40b8b3:	xlat   BYTE PTR ds:[ebx]
  40b8b4:	data16 mov WORD PTR [esi+0x4c263fe6],?
  40b8bb:	and    eax,0x46bab4b1
  40b8c0:	clc    
  40b8c1:	adc    eax,DWORD PTR [esi]
  40b8c3:	ror    BYTE PTR [esi+eiz*2-0x6e8c7d0c],1
  40b8ca:	pop    ebx
  40b8cb:	bound  ebp,QWORD PTR [ebp+0x6a]
  40b8ce:	push   esp
  40b8cf:	jb     0x40b8ba
  40b8d1:	xchg   ebx,eax
  40b8d2:	or     eax,0x3d9e3128
  40b8d7:	xchg   edi,eax
  40b8d8:	or     DWORD PTR [eax-0x67],ecx
  40b8db:	not    BYTE PTR [ebx]
  40b8dd:	push   es
  40b8de:	sbb    DWORD PTR [ebx+0x1c],ebp
  40b8e1:	stos   DWORD PTR es:[edi],eax
  40b8e2:	punpckhdq mm0,QWORD PTR [edx-0x2fb4361]
  40b8e9:	cwde   
  40b8ea:	sbb    al,0x74
  40b8ec:	pop    eax
  40b8ed:	jmp    0x40b87a
  40b8ef:	dec    edi
  40b8f0:	test   cl,0x21
  40b8f3:	xor    eax,DWORD PTR [ecx]
  40b8f5:	out    0xa9,al
  40b8f7:	xchg   esi,eax
  40b8f8:	call   0xe5cfd13f
  40b8fd:	xor    ch,BYTE PTR [ecx]
  40b8ff:	pop    ecx
  40b900:	jb     0x40b8ed
  40b902:	cdq    
  40b903:	jg     0x40b8f3
  40b905:	sahf   
  40b906:	out    0x2d,eax
  40b908:	not    DWORD PTR [ecx]
  40b90a:	ds fsubp st(1),st
  40b90d:	mov    dh,0x26
  40b90f:	mov    al,ds:0x3c9faa69
  40b914:	shr    DWORD PTR [ebx-0x39],cl
  40b917:	jae    0x40b98b
  40b919:	test   al,0x6f
  40b91b:	add    edi,esp
  40b91d:	xor    al,0x6b
  40b91f:	mov    dh,0xa7
  40b921:	out    dx,al
  40b922:	adc    DWORD PTR [ebx+0x3a],ebx
  40b925:	in     eax,0x39
  40b927:	sub    eax,0x2a52889b
  40b92c:	jbe    0x40b935
  40b92e:	test   eax,0x580ee5f9
  40b933:	fimul  WORD PTR [edx]
  40b935:	sub    BYTE PTR [esi+0x50d73a5b],ch
  40b93b:	xchg   ecx,eax
  40b93c:	cmp    eax,DWORD PTR [ecx-0x51]
  40b93f:	jmp    FWORD PTR [esi+0x25]
  40b942:	test   DWORD PTR [ebp-0x44],ebx
  40b945:	(bad)  
  40b946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b947:	jge    0x40b978
  40b949:	mov    dl,0x5e
  40b94b:	mov    al,ds:0x6d8d17dc
  40b950:	adc    eax,0xb728763e
  40b955:	adc    DWORD PTR [edi],0x70
  40b958:	mov    edi,0x82a12781
  40b95d:	adc    al,al
  40b95f:	pop    edi
  40b960:	mov    ebx,0xae8a358
  40b965:	and    dh,BYTE PTR [edi+0x5e]
  40b968:	repz jnp 0x40b982
  40b96b:	bound  edx,QWORD PTR [ecx+ebx*8-0x7fcd1300]
  40b972:	mov    ebp,0x94bdf0af
  40b977:	and    cl,BYTE PTR [edi-0x2c86ef76]
  40b97d:	push   ebx
  40b97e:	mov    edx,0xdeebd3d5
  40b983:	loope  0x40b9be
  40b985:	jecxz  0x40b9fd
  40b987:	out    dx,al
  40b988:	jg     0x40b941
  40b98a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b98b:	mov    bl,al
  40b98d:	sbb    eax,0xf781b289
  40b992:	fisttp QWORD PTR [ebx]
  40b994:	ds jo  0x40b9bf
  40b997:	lods   al,BYTE PTR ds:[esi]
  40b998:	inc    edi
  40b999:	cmp    al,0xc4
  40b99b:	fst    DWORD PTR [ebp+0x60]
  40b99e:	(bad)  
  40b99f:	idiv   DWORD PTR [ebx+0x15a951b7]
  40b9a5:	inc    eax
  40b9a6:	call   0x127ab17
  40b9ab:	push   esp
  40b9ac:	mov    ?,WORD PTR [edx]
  40b9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9af:	sub    DWORD PTR [ebx],edi
  40b9b1:	enter  0xcb2e,0x99
  40b9b5:	push   ds
  40b9b6:	push   0x6b328efc
  40b9bb:	cs push ecx
  40b9bd:	or     DWORD PTR [edi+0x6edecd62],ecx
  40b9c3:	leave  
  40b9c4:	cmp    al,0xe0
  40b9c6:	retf   
  40b9c7:	retf   
  40b9c8:	(bad)  
  40b9c9:	idiv   DWORD PTR [eax]
  40b9cb:	cwde   
  40b9cc:	in     eax,0x28
  40b9ce:	clc    
  40b9cf:	repnz dec edx
  40b9d2:	fld    DWORD PTR [ebx-0x21bb2c4b]
  40b9d8:	into   
  40b9d9:	adc    DWORD PTR es:[edx+0x37],eax
  40b9dd:	shl    DWORD PTR [ebp+0x2e],0x18
  40b9e1:	mov    bl,0xaf
  40b9e3:	dec    ecx
  40b9e4:	sbb    eax,0x49cba52f
  40b9e9:	mov    dh,0x7e
  40b9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ec:	ins    BYTE PTR es:[edi],dx
  40b9ed:	jne    0x40b9ee
  40b9ef:	xchg   ecx,eax
  40b9f0:	(bad)  
  40b9f1:	(bad)  
  40b9f2:	jp     0x40b9d6
  40b9f4:	js     0x40ba6b
  40b9f6:	inc    ebx
  40b9f7:	push   cs
  40b9f8:	stos   BYTE PTR es:[edi],al
  40b9f9:	aaa    
  40b9fa:	jge    0x40b9b0
  40b9fc:	adc    eax,0x9258d06a
  40ba01:	add    al,BYTE PTR [eax+0x7f]
  40ba04:	push   esi
  40ba05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba06:	fdivr  QWORD PTR [ecx]
  40ba08:	dec    eax
  40ba09:	pusha  
  40ba0a:	jmp    0x719f2281
  40ba0f:	or     bh,BYTE PTR [ecx]
  40ba11:	fistp  QWORD PTR [ebp+0x5a2fea23]
  40ba17:	test   al,0x72
  40ba19:	and    esi,DWORD PTR [eax+0x7c1ded8c]
  40ba1f:	ss gs popf 
  40ba22:	lahf   
  40ba23:	xor    DWORD PTR [ecx-0x29],esi
  40ba26:	daa    
  40ba27:	out    dx,eax
  40ba28:	inc    eax
  40ba29:	pop    ss
  40ba2a:	jae    0x40b9f4
  40ba2c:	test   eax,0x6ae25838
  40ba31:	sbb    BYTE PTR [ebx],al
  40ba33:	(bad)  
  40ba34:	repnz loop 0x40ba1d
  40ba37:	or     BYTE PTR [eax+0x40],ah
  40ba3a:	mov    dh,0x70
  40ba3c:	popf   
  40ba3d:	xchg   ebx,eax
  40ba3e:	cwde   
  40ba3f:	nop
  40ba40:	div    BYTE PTR [edi]
  40ba42:	lds    edx,FWORD PTR fs:[edi-0x17c3a3da]
  40ba49:	add    edi,DWORD PTR [edi]
  40ba4b:	fcom   QWORD PTR [esp+edx*8-0x5]
  40ba4f:	jp     0x40ba5c
  40ba51:	jns    0x40ba01
  40ba53:	popf   
  40ba54:	adc    BYTE PTR [edi],cl
  40ba56:	sbb    dh,BYTE PTR [ecx-0x6384ac77]
  40ba5c:	inc    bp
  40ba5e:	test   al,0x65
  40ba60:	push   ecx
  40ba61:	cmp    ebp,esp
  40ba63:	idiv   BYTE PTR ds:0x1afa53a8
  40ba69:	int3   
  40ba6a:	mov    ds:0xcbdf7d9b,al
  40ba6f:	pop    ecx
  40ba70:	push   es
  40ba71:	in     al,0x37
  40ba73:	nop
  40ba74:	and    dl,dh
  40ba76:	ds mov bl,0x8f
  40ba79:	sbb    eax,0x1d01adf4
  40ba7e:	popa   
  40ba7f:	fdiv   QWORD PTR [ebp-0x72]
  40ba82:	pop    es
  40ba83:	dec    ebp
  40ba84:	push   esi
  40ba85:	jo     0x40ba30
  40ba87:	xchg   ecx,eax
  40ba88:	lea    eax,[ebp+0x41]
  40ba8b:	fdiv   DWORD PTR [eax*2-0x1be361ba]
  40ba92:	sub    ecx,DWORD PTR [edx-0x79]
  40ba95:	or     bh,BYTE PTR [edx-0x21]
  40ba98:	xchg   ecx,eax
  40ba99:	cld    
  40ba9a:	out    0x37,al
  40ba9c:	adc    esi,DWORD PTR [edx-0x34713368]
  40baa2:	div    DWORD PTR [ecx]
  40baa4:	xor    ebp,DWORD PTR [esi-0x42b86397]
  40baaa:	fwait
  40baab:	(bad)  
  40baac:	mov    eax,0x1314dc4c
  40bab1:	aam    0xdf
  40bab3:	ds fs push ds
  40bab6:	push   esi
  40bab7:	or     dl,cl
  40bab9:	jno    0x40ba5c
  40babb:	xor    al,0xbf
  40babd:	into   
  40babe:	popf   
  40babf:	lea    edi,[ecx]
  40bac1:	jl     0x40bb21
  40bac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bac4:	cmp    BYTE PTR [edi],0x99
  40bac7:	xchg   esi,eax
  40bac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bac9:	fucomi st,st(4)
  40bacb:	mul    DWORD PTR [edi+eax*2+0x3907b29]
  40bad2:	cmp    BYTE PTR [edx],al
  40bad4:	fcom   QWORD PTR [eax-0x1f8fb7a]
  40bada:	mov    eax,0x68190674
  40badf:	inc    ebx
  40bae0:	lds    edi,FWORD PTR [ecx+0x26]
  40bae3:	std    
  40bae4:	and    esp,esi
  40bae6:	mov    al,0x3f
  40bae8:	mov    edi,0x5abc02be
  40baed:	mov    cl,0x98
  40baef:	push   0x88ce3a5c
  40baf4:	out    dx,eax
  40baf5:	fisubr DWORD PTR [eax-0x7b]
  40baf8:	mov    eax,0x5358a4c
  40bafd:	int    0x44
  40baff:	hlt    
  40bb00:	cwde   
  40bb01:	enter  0xf579,0xc1
  40bb05:	jne    0x40bb6c
  40bb07:	cmc    
  40bb08:	rol    BYTE PTR [esi],0xe4
  40bb0b:	sbb    esi,DWORD PTR [ebx+0x17d0f1cf]
  40bb11:	pop    esi
  40bb12:	jnp    0x40bb6c
  40bb14:	adc    eax,0x92d2a08d
  40bb19:	sbb    cl,BYTE PTR [esi]
  40bb1b:	cmc    
  40bb1c:	call   0x9c487459
  40bb21:	popa   
  40bb22:	arpl   si,cx
  40bb24:	mov    eax,ds:0x3ca3a424
  40bb29:	repnz daa 
  40bb2b:	mov    ecx,DWORD PTR [bp+0x24]
  40bb2f:	in     eax,dx
  40bb30:	push   ss
  40bb31:	add    DWORD PTR [ebp-0x6aaf7ba4],ecx
  40bb37:	rcl    BYTE PTR [eax+0x15959a47],cl
  40bb3d:	mov    ch,0x24
  40bb3f:	rcr    DWORD PTR [edx],1
  40bb41:	das    
  40bb42:	repz sub BYTE PTR ds:[esi-0x51f2a79f],al
  40bb4a:	sbb    eax,0xe43cc1a4
  40bb4f:	xor    dh,cl
  40bb51:	jns    0x40bb7d
  40bb53:	lea    esi,[ebp+0x40be97b8]
  40bb59:	adc    BYTE PTR [ebx-0x19],0xd3
  40bb5d:	and    eax,0x44362b1
  40bb62:	adc    BYTE PTR [edx],dl
  40bb64:	pop    ss
  40bb65:	data16 xor dh,BYTE PTR [edi+0x78b5e142]
  40bb6c:	adc    eax,0xe6f27f50
  40bb71:	ficomp DWORD PTR [ecx]
  40bb73:	ret    
  40bb74:	repnz adc DWORD PTR [edx],eax
  40bb77:	adc    edx,DWORD PTR [edi]
  40bb79:	push   edx
  40bb7a:	les    ecx,FWORD PTR [eax+ecx*4]
  40bb7d:	jge    0x40bbd1
  40bb7f:	mov    dh,0x80
  40bb81:	rcr    ch,cl
  40bb83:	sub    al,0xfe
  40bb85:	sbb    ecx,DWORD PTR [edi]
  40bb87:	iret   
  40bb88:	into   
  40bb89:	push   edx
  40bb8a:	imul   edx,DWORD PTR [edx-0x7f4b32df],0x64a54fc3
  40bb94:	xor    al,0x50
  40bb96:	jmp    0x40bbde
  40bb98:	jl     0x40bb97
  40bb9a:	in     eax,0x10
  40bb9c:	mov    esp,0x60d9f7c1
  40bba1:	test   BYTE PTR [ecx+0xe1434e6],bh
  40bba7:	cli    
  40bba8:	jge    0x40bbd3
  40bbaa:	adc    edx,DWORD PTR [edx]
  40bbac:	jnp    0x40bbc2
  40bbae:	ficomp WORD PTR [ecx]
  40bbb0:	xor    esi,eax
  40bbb2:	xor    dl,cl
  40bbb4:	(bad)  [edx-0x3d5b9761]
  40bbba:	add    BYTE PTR [edx+ecx*2],bh
  40bbbd:	pusha  
  40bbbe:	or     DWORD PTR [ebp+0x4a],ebp
  40bbc1:	mov    bl,0xc6
  40bbc3:	sbb    eax,0x1df684b7
  40bbc8:	mov    ecx,ebp
  40bbca:	repz aas 
  40bbcc:	fs stc 
  40bbce:	inc    ebp
  40bbcf:	or     dl,dl
  40bbd1:	pop    ebp
  40bbd2:	shl    BYTE PTR [ecx+0xe4929],1
  40bbd8:	retf   0xc4f
  40bbdb:	leave  
  40bbdc:	hlt    
  40bbdd:	out    0x65,eax
  40bbdf:	push   esp
  40bbe0:	repnz cmp al,0x22
  40bbe3:	jecxz  0x40bba5
  40bbe5:	into   
  40bbe6:	hlt    
  40bbe7:	sub    eax,0x7fdf00f9
  40bbec:	sahf   
  40bbed:	leave  
  40bbee:	sbb    eax,0x891c2e5c
  40bbf3:	sub    BYTE PTR [edi+0x762c568],al
  40bbf9:	icebp  
  40bbfa:	cmp    al,0x6b
  40bbfc:	mov    BYTE PTR [ebx+ecx*4-0x6e802cf4],0xcf
  40bc04:	xor    DWORD PTR [esi-0x3d5194ee],edi
  40bc0a:	popf   
  40bc0b:	add    edi,DWORD PTR [eax]
  40bc0d:	nop
  40bc0e:	bound  edi,QWORD PTR [edi+0x7a]
  40bc11:	daa    
  40bc12:	sub    BYTE PTR es:[ebx-0xa5d33b9],0xb
  40bc1a:	pop    ss
  40bc1b:	or     al,0x8c
  40bc1d:	jnp    0x40bbb1
  40bc1f:	fist   DWORD PTR [edi-0x1c]
  40bc22:	test   eax,0xd7c55dfd
  40bc27:	and    eax,0xd45c49df
  40bc2c:	push   ebp
  40bc2d:	ss dec edx
  40bc2f:	or     eax,0x4e504666
  40bc34:	pop    es
  40bc35:	sub    bl,BYTE PTR [eax]
  40bc37:	pop    ss
  40bc38:	popf   
  40bc39:	push   ecx
  40bc3a:	test   ch,0x56
  40bc3d:	rcr    dl,cl
  40bc3f:	or     al,BYTE PTR [ebx+0x72850937]
  40bc45:	jl     0x40bc3c
  40bc47:	fist   WORD PTR [ecx+0x57]
  40bc4a:	retf   0xd35c
  40bc4d:	inc    ecx
  40bc4e:	stos   DWORD PTR es:[edi],eax
  40bc4f:	mov    WORD PTR [ebx+0x95708ab],?
  40bc55:	inc    ecx
  40bc56:	dec    edx
  40bc57:	nop
  40bc58:	adc    dl,BYTE PTR cs:[eax]
  40bc5b:	mov    eax,0x9498e9f
  40bc60:	enter  0xc560,0x6e
  40bc64:	stc    
  40bc65:	adc    eax,ecx
  40bc67:	or     ebp,DWORD PTR [edi+0x35d68478]
  40bc6d:	lods   eax,DWORD PTR ds:[esi]
  40bc6e:	fsubrp st(3),st
  40bc70:	ins    DWORD PTR es:[edi],dx
  40bc71:	adc    eax,0xbaf8ff60
  40bc76:	xor    eax,0x1c35ee45
  40bc7b:	and    DWORD PTR [eax],esi
  40bc7d:	pop    edx
  40bc7e:	or     bl,0x9a
  40bc81:	(bad)  
  40bc82:	in     eax,0x17
  40bc84:	out    dx,al
  40bc85:	int3   
  40bc86:	xlat   BYTE PTR ds:[ebx]
  40bc87:	cmp    edi,DWORD PTR [eax-0x47]
  40bc8a:	sahf   
  40bc8b:	jp     0x40bcc0
  40bc8d:	fsub   DWORD PTR [esi]
  40bc8f:	lods   eax,DWORD PTR ds:[esi]
  40bc90:	jl     0x40bcd3
  40bc92:	sub    al,0x9
  40bc94:	or     DWORD PTR [ebp+0x20],esi
  40bc97:	sub    dh,al
  40bc99:	ds mov eax,0x6fd38676
  40bc9f:	mov    dl,0xdc
  40bca1:	cwde   
  40bca2:	pop    esi
  40bca3:	dec    eax
  40bca4:	outs   dx,DWORD PTR ds:[esi]
  40bca5:	xchg   cl,ah
  40bca7:	sbb    DWORD PTR [esi],ebp
  40bca9:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40bcab:	fldenv [edi+0x77a7b57b]
  40bcb1:	fidiv  DWORD PTR [ebp-0xe]
  40bcb4:	lock cmp eax,0x2015f39c
  40bcba:	imul   ebx,DWORD PTR [ecx+0x2263c3d3],0x7b7fc929
  40bcc4:	gs mov edi,0xf05e85f8
  40bcca:	lahf   
  40bccb:	jecxz  0x40bc84
  40bccd:	xor    BYTE PTR [edx],ah
  40bccf:	rol    BYTE PTR [esi+0x5435850f],1
  40bcd5:	mov    edx,0x97504053
  40bcda:	popf   
  40bcdb:	and    al,0x28
  40bcdd:	push   es
  40bcde:	and    dh,BYTE PTR ds:0x32bd86a1
  40bce4:	jl     0x40bd41
  40bce6:	and    al,bh
  40bce8:	mov    ds:0x863597df,eax
  40bced:	loope  0x40bcea
  40bcef:	out    0x55,eax
  40bcf1:	adc    BYTE PTR [ebx+esi*4-0x67],ch
  40bcf5:	push   eax
  40bcf6:	pop    ds
  40bcf7:	pop    ds
  40bcf8:	(bad)  
  40bcf9:	cli    
  40bcfa:	pop    ebp
  40bcfb:	pop    ds
  40bcfc:	cmp    eax,0xfde2f70
  40bd01:	jb     0x40bcfe
  40bd03:	sub    edi,DWORD PTR [esi]
  40bd05:	mov    ds:0x611e998,eax
  40bd0a:	in     al,0x43
  40bd0c:	xchg   ecx,eax
  40bd0d:	and    DWORD PTR [ebx],esi
  40bd0f:	mov    ah,ah
  40bd11:	sbb    al,0x71
  40bd13:	es out 0xd9,al
  40bd16:	dec    ecx
  40bd17:	mov    bl,BYTE PTR [ebx+ebp*4+0x7450b161]
  40bd1e:	or     bh,BYTE PTR [edx-0x45]
  40bd21:	je     0x40bd8c
  40bd23:	mov    dl,0xe9
  40bd25:	mov    ch,0x90
  40bd27:	cwde   
  40bd28:	push   esp
  40bd29:	mov    al,ds:0x2eb8a5f9
  40bd2e:	cmc    
  40bd2f:	fldenv [edi+0x44a0dbff]
  40bd35:	out    dx,al
  40bd36:	les    eax,FWORD PTR [edx+eax*8-0x27]
  40bd3a:	fidiv  DWORD PTR [ebp-0x703e5a86]
  40bd40:	cmp    edi,DWORD PTR [esi-0x4c]
  40bd43:	lahf   
  40bd44:	stc    
  40bd45:	or     al,0x59
  40bd47:	jg     0x40bce3
  40bd49:	shl    BYTE PTR cs:[esi+0x79],0xa0
  40bd4e:	lock mov al,ds:0x2828a01e
  40bd54:	sbb    DWORD PTR [esi-0x2d],ebx
  40bd57:	jbe    0x40bd49
  40bd59:	inc    ecx
  40bd5a:	sub    BYTE PTR [ebx-0x48d7033a],ah
  40bd60:	xchg   ebp,eax
  40bd61:	das    
  40bd62:	cmp    al,0x10
  40bd64:	push   edx
  40bd65:	outs   dx,BYTE PTR ds:[esi]
  40bd66:	retf   0x798a
  40bd69:	je     0x40bd9e
  40bd6b:	int3   
  40bd6c:	or     eax,DWORD PTR [ebx+0x58]
  40bd6f:	fnstsw WORD PTR [esi-0x3e]
  40bd72:	fcom   DWORD PTR [ebx-0x108f318f]
  40bd78:	dec    esi
  40bd79:	push   ds
  40bd7a:	sbb    dl,BYTE PTR [ebx+0x57]
  40bd7d:	mov    ch,0xe9
  40bd7f:	jnp    0x40bd94
  40bd81:	dec    bh
  40bd83:	sbb    al,0x1c
  40bd85:	pop    es
  40bd86:	enter  0xbb68,0xc1
  40bd8a:	out    0xc6,al
  40bd8c:	in     eax,dx
  40bd8d:	push   0xffffffe1
  40bd8f:	fstp   TBYTE PTR [ecx]
  40bd91:	jb     0x40bd52
  40bd93:	out    0xbf,al
  40bd95:	inc    ecx
  40bd96:	cwde   
  40bd97:	mov    ds:0x1cd56967,al
  40bd9c:	and    cl,BYTE PTR [ebp-0xa]
  40bd9f:	nop
  40bda0:	cmp    ah,BYTE PTR [eax]
  40bda2:	cs int 0x59
  40bda5:	pop    edx
  40bda6:	mov    ebp,0xf3148d8b
  40bdab:	jmp    0x40bd37
  40bdad:	shr    DWORD PTR ds:0x7f81bf4c,cl
  40bdb3:	cmp    DWORD PTR [ecx+0x474bf087],esi
  40bdb9:	fbld   TBYTE PTR [edx]
  40bdbb:	int3   
  40bdbc:	jmp    0x3dfd:0xfafa3d9d
  40bdc3:	dec    edi
  40bdc4:	loopne 0x40bdf7
  40bdc6:	sub    BYTE PTR [ebx+0x48],cl
  40bdc9:	push   ecx
  40bdca:	mov    esi,0x45119199
  40bdd0:	fistp  WORD PTR [eax+0x2a]
  40bdd3:	or     al,0x31
  40bdd5:	mov    BYTE PTR [edi+0x74],dh
  40bdd8:	push   cs
  40bdd9:	xchg   ebx,eax
  40bdda:	retf   0xcc48
  40bddd:	xchg   ebp,eax
  40bdde:	push   esp
  40bddf:	cwde   
  40bde0:	aaa    
  40bde1:	jecxz  0x40bd63
  40bde3:	das    
  40bde4:	add    esi,DWORD PTR [edx]
  40bde6:	lea    ebx,[edi-0x61]
  40bde9:	nop
  40bdea:	xor    bh,BYTE PTR [edi]
  40bdec:	retf   0xf08d
  40bdef:	mov    esi,es
  40bdf1:	cmp    al,0xb6
  40bdf3:	nop
  40bdf4:	cmp    eax,0x81e9479a
  40bdf9:	xchg   edi,eax
  40bdfa:	outs   dx,DWORD PTR ds:[esi]
  40bdfb:	rcl    BYTE PTR [ecx],0x4d
  40bdfe:	enter  0x6aa4,0x2
  40be02:	cli    
  40be03:	int3   
  40be04:	mov    eax,0x57e6c652
  40be09:	shl    dh,0x3b
  40be0c:	cs aaa 
  40be0e:	pop    es
  40be0f:	sti    
  40be10:	mov    dl,0x32
  40be12:	pop    esp
  40be13:	call   0x51470a20
  40be18:	daa    
  40be19:	jecxz  0x40bda0
  40be1b:	ds inc edx
  40be1d:	mov    ah,0xf
  40be1f:	in     al,0x18
  40be21:	xor    dh,0x16
  40be24:	push   cs
  40be25:	nop
  40be26:	inc    esp
  40be27:	je     0x40be31
  40be29:	and    DWORD PTR [ebx+0x6cc05f2a],esi
  40be2f:	fidiv  WORD PTR [esi]
  40be31:	sbb    ebp,DWORD PTR ds:0xe89b862a
  40be37:	scas   al,BYTE PTR es:[edi]
  40be38:	out    dx,eax
  40be39:	mov    cl,0x43
  40be3b:	ds gs xor edx,edx
  40be3f:	jecxz  0x40bdcf
  40be41:	outs   dx,DWORD PTR ds:[esi]
  40be42:	int    0xfc
  40be44:	jle    0x40be45
  40be46:	fidiv  WORD PTR [ebp-0x40b5bef4]
  40be4c:	add    al,0x88
  40be4e:	addr16 call 0xa775958a
  40be54:	(bad)  
  40be55:	daa    
  40be56:	retf   
  40be57:	jg     0x40be87
  40be59:	out    0x8c,al
  40be5b:	sbb    ebx,ebp
  40be5d:	int3   
  40be5e:	add    al,0x8f
  40be60:	not    BYTE PTR [ecx+0x3c]
  40be63:	jne    0x40be8b
  40be65:	lods   al,BYTE PTR ds:[esi]
  40be66:	es push edx
  40be68:	sti    
  40be69:	sar    esp,cl
  40be6b:	jo     0x40be91
  40be6d:	xlat   BYTE PTR ds:[ebx]
  40be6e:	popa   
  40be6f:	xchg   esp,eax
  40be70:	imul   esp,DWORD PTR [ebx+esi*1],0x97582b71
  40be77:	pop    ecx
  40be78:	pushf  
  40be79:	and    BYTE PTR [ecx],bh
  40be7b:	ror    BYTE PTR ds:0x56ef11b5,1
  40be81:	mov    gs,esi
  40be83:	push   es
  40be84:	push   es
  40be85:	lahf   
  40be86:	iret   
  40be87:	sub    eax,0x183b6997
  40be8c:	or     BYTE PTR [eax-0x48b2ad95],ch
  40be92:	pop    edi
  40be93:	test   DWORD PTR [esi-0xd],edx
  40be96:	stos   DWORD PTR es:[edi],eax
  40be97:	xchg   ebp,eax
  40be98:	sub    eax,0x795b155f
  40be9d:	aaa    
  40be9e:	fs ret 0x574e
  40bea2:	cld    
  40bea3:	iret   
  40bea4:	pushf  
  40bea5:	aas    
  40bea6:	dec    eax
  40bea7:	or     al,dh
  40bea9:	inc    ebp
  40beaa:	mov    ch,0x17
  40beac:	xchg   esi,eax
  40bead:	arpl   WORD PTR [edx+0x8],si
  40beb0:	sbb    al,0x9f
  40beb2:	scas   al,BYTE PTR es:[edi]
  40beb3:	test   eax,0xcfd6c996
  40beb8:	mov    esi,0xe4147383
  40bebd:	mov    ds:0x793c293c,al
  40bec2:	sar    BYTE PTR [edx-0x7f],cl
  40bec5:	mov    al,0x4d
  40bec7:	in     al,0x9
  40bec9:	rol    DWORD PTR [edx-0x66a730e4],cl
  40becf:	add    edx,DWORD PTR [ebx-0x17c07e2a]
  40bed5:	bswap  esi
  40bed7:	int    0x98
  40bed9:	rcl    DWORD PTR [ecx+esi*1+0x473a877d],0x6e
  40bee1:	jo     0x40bea5
  40bee3:	inc    cl
  40bee5:	mov    cl,0x50
  40bee7:	outs   dx,BYTE PTR ds:[esi]
  40bee8:	sub    ebp,DWORD PTR [eax+0x56]
  40beeb:	cs jl  0x40bec9
  40beee:	dec    eax
  40beef:	add    al,BYTE PTR [edx+eax*1+0x1fc9f2aa]
  40bef6:	fs add edi,ebp
  40bef9:	inc    edx
  40befa:	inc    ebx
  40befb:	jmp    0xc78:0xde52fbbb
  40bf02:	sahf   
  40bf03:	nop
  40bf04:	lock or al,0x75
  40bf07:	push   ds
  40bf08:	sub    BYTE PTR [edi-0x7e3af863],al
  40bf0e:	jb     0x40beab
  40bf10:	(bad)  
  40bf11:	outs   dx,BYTE PTR ds:[esi]
  40bf12:	in     al,0x15
  40bf14:	mov    eax,0xf64a839c
  40bf19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf1a:	xchg   DWORD PTR [ebx+0x76baecac],esi
  40bf20:	lock inc ebx
  40bf22:	fnstcw WORD PTR [edi+0x1aa895ce]
  40bf28:	xchg   BYTE PTR [ebx],dh
  40bf2a:	inc    ebp
  40bf2b:	xor    esi,edi
  40bf2d:	in     al,0x1d
  40bf2f:	jl     0x40bf0c
  40bf31:	mov    es,edx
  40bf33:	mov    ds:0x669273de,eax
  40bf38:	test   eax,0x3f044f9c
  40bf3d:	adc    BYTE PTR [esi+eiz*2-0x76],dh
  40bf41:	(bad)  
  40bf42:	jl     0x40bf6f
  40bf44:	ret    0xc6f8
  40bf47:	clc    
  40bf48:	dec    edi
  40bf49:	in     al,dx
  40bf4a:	clc    
  40bf4b:	xchg   esp,eax
  40bf4c:	mov    dh,BYTE PTR [edx]
  40bf4e:	push   ss
  40bf4f:	imul   ebx,DWORD PTR [eax-0x192fd935],0x902eb855
  40bf59:	mov    BYTE PTR [ebx-0x3b],ch
  40bf5c:	mov    ebp,0xd7bc2393
  40bf61:	retf   0x43cd
  40bf64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf65:	push   es
  40bf66:	xor    edi,DWORD PTR [ecx+edi*4]
  40bf69:	(bad)  
  40bf6b:	xor    DWORD PTR [edx-0x75],ebp
  40bf6e:	nop
  40bf6f:	fdivr  DWORD PTR [ebx-0xe000656]
  40bf75:	ins    DWORD PTR es:[edi],dx
  40bf76:	dec    edx
  40bf77:	fwait
  40bf78:	pop    edi
  40bf79:	inc    ebp
  40bf7a:	cld    
  40bf7b:	neg    bh
  40bf7d:	inc    eax
  40bf7e:	jo     0x40bf49
  40bf80:	xchg   edx,eax
  40bf81:	loop   0x40bf6b
  40bf83:	sbb    al,0xec
  40bf85:	shr    DWORD PTR [edx+0x70fe0118],0x19
  40bf8c:	out    dx,eax
  40bf8d:	jg     0x40bffb
  40bf8f:	je     0x40bfd8
  40bf91:	scas   al,BYTE PTR es:[edi]
  40bf92:	(bad)  
  40bf93:	xor    al,0xee
  40bf95:	in     eax,0xce
  40bf97:	scas   eax,DWORD PTR es:[edi]
  40bf98:	sub    edi,DWORD PTR [esi]
  40bf9a:	or     eax,DWORD PTR [esp+edi*1]
  40bf9d:	addr16 sbb eax,0xb9a78829
  40bfa3:	dec    ecx
  40bfa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfa5:	stos   DWORD PTR es:[edi],eax
  40bfa6:	fdiv   DWORD PTR [edi]
  40bfa9:	inc    esp
  40bfaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfab:	retf   0x412c
  40bfae:	and    DWORD PTR [eax+0x15fd33f9],ebx
  40bfb4:	lock mov ch,0x61
  40bfb7:	into   
  40bfb8:	and    bh,BYTE PTR [ecx+ebp*4+0x21]
  40bfbc:	mov    bh,0xed
  40bfbe:	ret    0x3725
  40bfc1:	retf   0x3308
  40bfc4:	xchg   esi,eax
  40bfc5:	cld    
  40bfc6:	mov    dl,BYTE PTR [esi+eax*8]
  40bfc9:	int3   
  40bfca:	sbb    ecx,DWORD PTR [edi+0x12]
  40bfcd:	js     0x40c036
  40bfcf:	dec    edi
  40bfd0:	daa    
  40bfd1:	fild   WORD PTR [ecx+0x18]
  40bfd4:	das    
  40bfd5:	cmp    edx,DWORD PTR [ebx]
  40bfd7:	outs   dx,DWORD PTR ds:[esi]
  40bfd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfd9:	daa    
  40bfda:	ret    
  40bfdb:	adc    dh,cl
  40bfdd:	and    BYTE PTR [edx-0x48],cl
  40bfe0:	(bad)
  40bfe3:	xchg   BYTE PTR [ebx+eiz*8],ah
  40bfe6:	ret    
  40bfe7:	cmp    bl,0x4
  40bfea:	popf   
  40bfeb:	mov    al,ds:0x85f5ab29
  40bff0:	cld    
  40bff1:	test   ecx,eax
  40bff3:	ins    DWORD PTR es:[edi],dx
  40bff4:	pop    ebp
  40bff5:	jge    0x40bffd
  40bff7:	push   0xffffffa1
  40bff9:	or     DWORD PTR [ecx],ebx
  40bffb:	call   0xdad0f96d
  40c000:	pushf  
  40c001:	dec    ebx
  40c002:	mov    bl,dh
  40c004:	push   0xffffff91
  40c006:	or     eax,0x6facaf0d
  40c00b:	push   edx
  40c00c:	mov    al,ds:0x4059f775
  40c011:	popf   
  40c012:	scas   al,BYTE PTR es:[edi]
  40c013:	sub    ah,al
  40c015:	add    al,0xe
  40c017:	mov    dl,0x9a
  40c019:	inc    ecx
  40c01a:	(bad)  
  40c01b:	xchg   BYTE PTR [ebx+ebx*1-0x43],bh
  40c01f:	into   
  40c020:	add    eax,0xc7a42440
  40c025:	mov    al,ds:0xba170799
  40c02a:	ins    DWORD PTR es:[edi],dx
  40c02b:	add    ah,ah
  40c02d:	retf   
  40c02e:	daa    
  40c02f:	xor    BYTE PTR [esi*4-0xa8b715],dl
  40c036:	(bad)  
  40c037:	adc    al,0x50
  40c039:	sahf   
  40c03a:	repz ficom DWORD PTR [esi]
  40c03d:	sbb    eax,0x341ee240
  40c042:	sahf   
  40c043:	call   DWORD PTR [edx-0x298e5a55]
  40c049:	dec    ebx
  40c04a:	adc    esi,DWORD PTR [esi-0x11e70a1b]
  40c050:	stos   DWORD PTR es:[edi],eax
  40c051:	aam    0x7b
  40c053:	pop    edx
  40c054:	mov    al,0x4f
  40c056:	aaa    
  40c057:	mov    edx,0x1b6a0af5
  40c05c:	aad    0xf0
  40c05e:	xchg   ebp,eax
  40c05f:	mov    dh,0xd4
  40c061:	es cwde 
  40c063:	adc    ah,BYTE PTR [edi-0x22]
  40c066:	inc    eax
  40c067:	jg     0x40c033
  40c069:	sbb    BYTE PTR [ebp+0x375e4ca0],al
  40c06f:	aas    
  40c070:	mov    eax,0x582daad2
  40c075:	out    dx,eax
  40c076:	push   0x61
  40c078:	aaa    
  40c079:	retf   
  40c07a:	mov    edi,0xa40e2998
  40c07f:	jb     0x40c02b
  40c081:	push   0x326d77a8
  40c086:	cmp    al,0x31
  40c088:	and    al,0xb2
  40c08a:	repnz or eax,0xfc3a2c01
  40c090:	mov    al,ds:0xf94c968b
  40c095:	lahf   
  40c096:	dec    ecx
  40c097:	push   edx
  40c098:	int    0xb9
  40c09a:	or     bh,BYTE PTR [edx]
  40c09c:	add    ebp,DWORD PTR [ecx]
  40c09e:	in     al,dx
  40c09f:	sub    DWORD PTR [ebp+0x7f755855],ebx
  40c0a5:	cwde   
  40c0a6:	loope  0x40c077
  40c0a8:	lds    edx,FWORD PTR cs:[edi+0x72]
  40c0ac:	xor    eax,0x3e01afea
  40c0b1:	ror    DWORD PTR [ecx],0xe2
  40c0b4:	mov    ebp,0xba44b94c
  40c0b9:	call   0x41a7ab47
  40c0be:	fs pop edx
  40c0c0:	ret    0xaca1
  40c0c3:	mov    cl,0xd1
  40c0c5:	and    bl,0x52
  40c0c8:	lods   al,BYTE PTR ds:[esi]
  40c0c9:	(bad)  
  40c0ca:	neg    eax
  40c0cc:	push   eax
  40c0cd:	scas   al,BYTE PTR es:[edi]
  40c0ce:	enter  0x71e3,0xee
  40c0d2:	enter  0x495d,0xf
  40c0d6:	xor    bl,BYTE PTR [esp+edi*1-0x6966a1db]
  40c0dd:	sub    al,0xf0
  40c0df:	push   ds
  40c0e0:	add    DWORD PTR [ebp-0x44],0xd019c483
  40c0e7:	mov    ah,0xd0
  40c0e9:	inc    eax
  40c0ea:	adc    DWORD PTR [edi-0x26011ee7],ebx
  40c0f0:	xor    al,0x42
  40c0f2:	and    ebx,DWORD PTR [edx]
  40c0f4:	lods   al,BYTE PTR ds:[esi]
  40c0f5:	dec    edx
  40c0f6:	mov    esp,0xfcbc212
  40c0fb:	mov    eax,ds:0x25aa4840
  40c100:	rcr    DWORD PTR [ecx-0x6f69b0c4],0x24
  40c107:	xor    edi,esi
  40c109:	or     eax,0xff128135
  40c10e:	push   ebp
  40c10f:	fld    TBYTE PTR [ebx]
  40c111:	xchg   BYTE PTR [ebx],bl
  40c113:	lock rol DWORD PTR [eax+0x54],1
  40c117:	xor    DWORD PTR [ecx-0x2b1816db],ebx
  40c11d:	jo     0x40c13d
  40c11f:	fwait
  40c120:	cmp    eax,0x3f22f43e
  40c125:	ret    0x6e
  40c128:	inc    esi
  40c129:	icebp  
  40c12a:	test   DWORD PTR [edi-0x46fa9be2],0x5000011b
  40c134:	neg    esp
  40c136:	jmp    0x40c0c0
  40c138:	mov    eax,0x942a4e8
  40c13d:	jne    0x40c104
  40c13f:	sub    eax,0x9d434e7
  40c144:	mov    ecx,0x6ec817e0
  40c149:	jmp    0x40c101
  40c14b:	add    BYTE PTR [esp+eax*8+0x50],dl
  40c14f:	in     eax,0x6f
  40c151:	rcr    DWORD PTR [esi-0x3c],1
  40c154:	cs scas eax,DWORD PTR es:[edi]
  40c156:	outs   dx,BYTE PTR ds:[esi]
  40c157:	push   eax
  40c158:	mov    eax,ds:0x3a6a75e
  40c15d:	int    0xe7
  40c15f:	sub    eax,0x1915576
  40c164:	lea    eax,[ebp-0x46d6c9ac]
  40c16a:	pop    esp
  40c16b:	popa   
  40c16c:	mov    dh,0xf6
  40c16e:	loop   0x40c1e4
  40c170:	xor    dl,dl
  40c172:	adc    edx,esi
  40c174:	in     al,dx
  40c175:	jb     0x40c12d
  40c177:	adc    eax,0x54e8369c
  40c17c:	scas   al,BYTE PTR es:[edi]
  40c17d:	mov    ah,BYTE PTR [edx-0x241d9d5b]
  40c183:	mov    ds:0xd21b09e,eax
  40c188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c189:	cmp    eax,0x82467499
  40c18e:	cmc    
  40c18f:	fstp   DWORD PTR [eax+0x1ae8e58e]
  40c195:	jmp    0x40c149
  40c197:	pop    ecx
  40c198:	js     0x40c1b5
  40c19a:	test   BYTE PTR [esi],al
  40c19c:	retf   
  40c19d:	adc    al,0x2d
  40c19f:	sbb    DWORD PTR [ecx+edx*2+0x19bac9df],0xfc959444
  40c1aa:	enter  0x851f,0x49
  40c1ae:	adc    al,0x25
  40c1b0:	xchg   BYTE PTR [edx+0x44],ch
  40c1b3:	and    cl,ch
  40c1b5:	in     eax,0x41
  40c1b7:	mov    ds:0x6e89a188,eax
  40c1bc:	fwait
  40c1bd:	mov    edx,0xd6a00c53
  40c1c2:	mov    al,ds:0x3007871b
  40c1c7:	jbe    0x40c1c8
  40c1c9:	jns    0x40c20d
  40c1cb:	xor    al,0xfb
  40c1cd:	jne    0x40c1f1
  40c1cf:	(bad)  
  40c1d0:	sar    edx,cl
  40c1d2:	lock xchg ebp,eax
  40c1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d5:	jg     0x40c1cf
  40c1d7:	std    
  40c1d8:	xchg   esp,eax
  40c1d9:	inc    ebp
  40c1da:	(bad)  
  40c1db:	scas   al,BYTE PTR es:[edi]
  40c1dc:	sbb    ebx,DWORD PTR [edx-0x13488df8]
  40c1e2:	data16 or cl,BYTE PTR [esi]
  40c1e5:	test   dh,dh
  40c1e7:	mov    dh,0xd6
  40c1e9:	inc    ebx
  40c1ea:	inc    esp
  40c1eb:	ja     0x40c192
  40c1ed:	dec    ebp
  40c1ee:	(bad)  
  40c1ef:	xor    ch,BYTE PTR [ebp-0x6e5b1374]
  40c1f5:	xchg   ecx,eax
  40c1f6:	fstp   TBYTE PTR ds:0x83895ef3
  40c1fc:	not    BYTE PTR [ebx]
  40c1fe:	in     eax,0xc8
  40c200:	stos   BYTE PTR es:[edi],al
  40c201:	sub    ch,BYTE PTR [eax-0xfee2be6]
  40c207:	sahf   
  40c208:	(bad)  
  40c209:	adc    dl,BYTE PTR [edx]
  40c20b:	sbb    al,0x3d
  40c20d:	add    cl,dl
  40c20f:	xchg   ecx,eax
  40c210:	xchg   ebp,eax
  40c211:	popf   
  40c212:	adc    al,0xb1
  40c214:	mov    ?,WORD PTR [ecx-0x4fa6fdfe]
  40c21a:	jae    0x40c22c
  40c21c:	ret    0x94ec
  40c21f:	mov    ebx,0x63cb2fc3
  40c224:	sbb    DWORD PTR [edx+0x1b],eax
  40c227:	xor    al,0x98
  40c229:	jecxz  0x40c1dc
  40c22b:	pop    esi
  40c22c:	icebp  
  40c22d:	xchg   edi,eax
  40c22e:	jle    0x40c1fc
  40c230:	sti    
  40c231:	add    eax,0xf320b9a5
  40c236:	jmp    0x40c1e8
  40c238:	cli    
  40c239:	ret    0x9a66
  40c23c:	inc    esp
  40c23d:	adc    eax,0xb448f004
  40c242:	clc    
  40c243:	sar    DWORD PTR [edx+0x73],0x23
  40c247:	add    al,0x1c
  40c249:	mov    dl,0xe9
  40c24b:	cmp    eax,DWORD PTR [edx]
  40c24d:	stc    
  40c24e:	sbb    eax,0x6f276b3f
  40c253:	test   DWORD PTR [ebx+eax*4+0x12a8ea64],ebp
  40c25a:	jmp    0x40c223
  40c25c:	(bad)  
  40c25d:	and    al,0x1f
  40c25f:	push   ss
  40c260:	xchg   ebx,edi
  40c262:	adc    eax,0xbc7598cc
  40c267:	mov    ?,ebp
  40c269:	pushf  
  40c26a:	ret    
  40c26b:	mov    bh,0x1e
  40c26d:	pop    ebp
  40c26e:	or     DWORD PTR [esi+0x16a3c503],0x68
  40c275:	pop    esp
  40c276:	sbb    esi,ebx
  40c278:	or     ecx,0x77
  40c27b:	push   edi
  40c27c:	fild   WORD PTR [ebp-0x6d]
  40c27f:	adc    bh,BYTE PTR [eax]
  40c281:	jp     0x40c2a7
  40c283:	add    eax,0x3e480fbc
  40c288:	hlt    
  40c289:	mov    esi,0xfae0b64f
  40c28e:	sub    BYTE PTR [edx+0x5765480a],ch
  40c294:	imul   ebp,ebx,0xffffffb3
  40c297:	lahf   
  40c298:	cmp    BYTE PTR [ebx-0x306bec3e],ch
  40c29e:	pusha  
  40c29f:	call   0x7eab:0xf956671
  40c2a6:	mov    ebx,0xb7700b92
  40c2ab:	in     eax,dx
  40c2ac:	xor    eax,esi
  40c2ae:	add    eax,edi
  40c2b0:	cmp    ecx,eax
  40c2b2:	je     0x40c2cd
  40c2b8:	mov    eax,DWORD PTR [ebp-0x3c]
  40c2bb:	movzx  eax,WORD PTR [eax+ebx*2]
  40c2bf:	mov    ecx,DWORD PTR [ebp-0x14]
  40c2c2:	mov    eax,DWORD PTR [ecx+eax*4]
  40c2c5:	mov    DWORD PTR [ebp-0x40],eax
  40c2c8:	jmp    0x409eee
  40c2cd:	mov    eax,DWORD PTR [ebp-0xc]
  40c2d0:	xor    eax,esi
  40c2d2:	lea    ebx,[ebx+eax*1+0x3272e0]
  40c2d9:	jmp    0x407809
  40c2de:	mov    eax,DWORD PTR [ebp-0x4]
  40c2e1:	xor    eax,esi
  40c2e3:	add    eax,edi
  40c2e5:	jmp    0x40c407
  40c2ea:	mov    eax,DWORD PTR [ebp-0x40]
  40c2ed:	add    eax,DWORD PTR [ebp+0x8]
  40c2f0:	mov    DWORD PTR [ebp-0x18],eax
  40c2f3:	mov    eax,DWORD PTR [ebp-0x1c]
  40c2f6:	test   eax,eax
  40c2f8:	je     0x40c392
  40c2fe:	mov    DWORD PTR [ebp-0x28],0x0
  40c305:	push   0x3
  40c307:	xor    edx,edx
  40c309:	pop    edx
  40c30a:	add    edx,0x8
  40c30d:	push   edx
  40c30e:	pop    ecx
  40c30f:	push   0x6
  40c311:	dec    ecx
  40c312:	pop    ebx
  40c313:	dec    ebx
  40c314:	xchg   ebx,ecx
  40c316:	sub    ebx,ecx
  40c318:	xchg   ebx,ecx
  40c31a:	dec    ecx
  40c31b:	mov    eax,DWORD PTR [ebp-0x1c]
  40c31e:	imul   eax,ecx
  40c321:	sub    esp,eax
  40c323:	mov    DWORD PTR [ebp-0x28],esp
  40c326:	mov    eax,DWORD PTR [ebp-0x4]
  40c329:	xor    eax,esi
  40c32b:	add    eax,edi
  40c32d:	jmp    0x40c36b
  40c332:	mov    ecx,DWORD PTR [ebp-0xc]
  40c335:	mov    eax,DWORD PTR [ebp+0x8]
  40c338:	mov    edx,DWORD PTR [ebp+0x14]
  40c33b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c33f:	xor    ecx,esi
  40c341:	add    ecx,edi
  40c343:	xor    edx,edx
  40c345:	div    ecx
  40c347:	mov    ecx,DWORD PTR [ebp-0x4]
  40c34a:	xor    ecx,esi
  40c34c:	lea    eax,[ecx+eax*1+0x3272e0]
  40c353:	mov    ecx,DWORD PTR [ebp+0x8]
  40c356:	mov    edx,DWORD PTR [ebp-0x28]
  40c359:	mov    DWORD PTR [edx+ecx*4],eax
  40c35c:	mov    eax,DWORD PTR [ebp-0xc]
  40c35f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c362:	xor    eax,esi
  40c364:	lea    eax,[eax+ecx*1+0x3272e0]
  40c36b:	mov    DWORD PTR [ebp+0x8],eax
  40c36e:	mov    eax,DWORD PTR [ebp-0xc]
  40c371:	mov    ecx,DWORD PTR [ebp+0x14]
  40c374:	xor    eax,esi
  40c376:	add    eax,edi
  40c378:	imul   eax,DWORD PTR [ecx]
  40c37b:	mov    ecx,DWORD PTR [ebp-0x4]
  40c37e:	mov    edx,DWORD PTR [ebp+0x8]
  40c381:	xor    ecx,esi
  40c383:	lea    ecx,[ecx+edx*1+0x3272e0]
  40c38a:	cmp    ecx,eax
  40c38c:	jne    0x40c332
  40c392:	mov    eax,DWORD PTR [ebp-0x4]
  40c395:	xor    eax,esi
  40c397:	add    eax,edi
  40c399:	mov    DWORD PTR [ebp-0x10],eax
  40c39c:	mov    ebx,0x65655
  40c3a1:	add    ebx,0x3234
  40c3a7:	xchg   ebx,esi
  40c3a9:	xor    ebx,ebx
  40c3ab:	push   esi
  40c3ac:	mov    esi,ebx
  40c3ae:	pop    ebx
  40c3af:	mov    edx,esi
  40c3b1:	add    ebx,0x1002
  40c3b7:	lea    eax,[ebp-0x18]
  40c3ba:	add    edx,eax
  40c3bc:	add    edx,0x5
  40c3bf:	push   edx
  40c3c0:	inc    esi
  40c3c1:	pop    ecx
  40c3c2:	dec    ecx
  40c3c3:	xchg   ecx,eax
  40c3c4:	dec    eax
  40c3c5:	xchg   ecx,eax
  40c3c6:	dec    ecx
  40c3c7:	xchg   ecx,edx
  40c3c9:	dec    edx
  40c3ca:	push   edx
  40c3cb:	mov    edx,ebx
  40c3cd:	pop    ebx
  40c3ce:	dec    ebx
  40c3cf:	call   DWORD PTR [ebx]
  40c3d1:	cmp    DWORD PTR [ebp+0x10],esi
  40c3d4:	je     0x40c3f3
  40c3da:	xchg   edx,eax
  40c3db:	push   0xb
  40c3dd:	pop    ecx
  40c3de:	push   0x4
  40c3e0:	pop    ebx
  40c3e1:	inc    ebx
  40c3e2:	xchg   ebx,ecx
  40c3e4:	sub    ebx,ecx
  40c3e6:	xchg   ebx,ecx
  40c3e8:	dec    ecx
  40c3e9:	dec    ecx
  40c3ea:	mov    eax,DWORD PTR [ebp-0x1c]
  40c3ed:	imul   eax,ecx
  40c3f0:	add    esp,eax
  40c3f2:	xchg   edx,eax
  40c3f3:	push   eax
  40c3f4:	xor    ebx,ebx
  40c3f6:	mov    edx,esp
  40c3f8:	dec    edx
  40c3f9:	inc    ebx
  40c3fa:	add    ebx,DWORD PTR [edx+ebx*1]
  40c3fd:	dec    ebx
  40c3fe:	xor    edx,edx
  40c400:	add    DWORD PTR [ebp-0x10],ebx
  40c403:	pop    ebx
  40c404:	mov    eax,DWORD PTR [ebp-0x10]
  40c407:	pop    edi
  40c408:	pop    esi
  40c409:	pop    ebx
  40c40a:	leave  
  40c40b:	ret    0x10
  40c40e:	push   ebp
  40c40f:	mov    ebp,esp
  40c411:	sub    esp,0x7c
  40c414:	push   esi
  40c415:	xor    ecx,esi
  40c417:	push   edi
  40c418:	mov    eax,ds:0x42e313
  40c41d:	mov    DWORD PTR [ebp-0x24],eax
  40c420:	mov    eax,ds:0x42e41f
  40c425:	mov    DWORD PTR [ebp-0x34],eax
  40c428:	mov    DWORD PTR ds:0x42d01c,0x1b
  40c432:	cmp    DWORD PTR ds:0x42d01c,0x0
  40c439:	je     0x40c519
  40c43f:	cmp    DWORD PTR ds:0x42d01c,0x22
  40c446:	jne    0x40c457
  40c44c:	push   0x429028
  40c451:	call   DWORD PTR ds:0x42ecb3
  40c457:	xor    eax,eax
  40c459:	add    eax,DWORD PTR ds:0x42d01c
  40c45f:	dec    eax
  40c460:	mov    ds:0x42d01c,eax
  40c465:	jmp    0x40c432
  40c46a:	and    DWORD PTR ds:0x429010,0x0
  40c474:	xor    ecx,ecx
  40c476:	xor    ecx,DWORD PTR ds:0x429010
  40c47c:	inc    ecx
  40c47d:	mov    DWORD PTR ds:0x429010,ecx
  40c483:	cmp    DWORD PTR ds:0x429010,0x6
  40c48a:	jne    0x40c4a5
  40c490:	push   0x42a004
  40c495:	push   0x42b01c
  40c49a:	push   0x429010
  40c49f:	call   DWORD PTR ds:0x42ec73
  40c4a5:	cmp    DWORD PTR ds:0x429010,0x5
  40c4ac:	jne    0x40c4bf
  40c4b2:	mov    ecx,DWORD PTR ds:0x429010
  40c4b8:	inc    ecx
  40c4b9:	mov    DWORD PTR ds:0x429010,ecx
  40c4bf:	cmp    DWORD PTR ds:0x429010,0x16
  40c4c6:	jb     0x40c474
  40c4cc:	and    DWORD PTR ds:0x42c004,0x0
  40c4d6:	jmp    0x40c4e8
  40c4db:	mov    esi,DWORD PTR ds:0x42c004
  40c4e1:	inc    esi
  40c4e2:	mov    DWORD PTR ds:0x42c004,esi
  40c4e8:	cmp    DWORD PTR ds:0x42c004,0x1a
  40c4ef:	jae    0x40c519
  40c4f5:	cmp    DWORD PTR ds:0x42c004,0x23
  40c4fc:	jne    0x40c514
  40c502:	push   0x1
  40c504:	push   0x6fde
  40c509:	push   0x44e1
  40c50e:	call   DWORD PTR ds:0x42ec77
  40c514:	jmp    0x40c4db
  40c519:	and    DWORD PTR [ebp-0x30],0x0
  40c51d:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40c524:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  40c52b:	mov    eax,DWORD PTR [ebp-0x10]
  40c52e:	and    DWORD PTR ds:0x429020,0x0
  40c538:	mov    ecx,DWORD PTR ds:0x429020
  40c53e:	inc    ecx
  40c53f:	mov    DWORD PTR ds:0x429020,ecx
  40c545:	cmp    DWORD PTR ds:0x429020,0x18
  40c54c:	jne    0x40c571
  40c552:	push   DWORD PTR [ebp-0x1c]
  40c555:	push   DWORD PTR [ebp-0x18]
  40c558:	push   0x42d004
  40c55d:	push   0x3a2d
  40c562:	push   DWORD PTR [ebp-0x18]
  40c565:	push   DWORD PTR [ebp-0x14]
  40c568:	push   DWORD PTR [ebp-0x1c]
  40c56b:	call   DWORD PTR ds:0x42ec7f
  40c571:	cmp    DWORD PTR ds:0x429020,0x10
  40c578:	jb     0x40c538
  40c57e:	xor    edi,ecx
  40c580:	mov    ecx,DWORD PTR [ebp-0x10]
  40c583:	mov    esi,DWORD PTR ds:0x42d000
  40c589:	and    DWORD PTR ds:0x42c018,esi
  40c58f:	sub    eax,ecx
  40c591:	sub    DWORD PTR ds:0x429028,edx
  40c597:	mov    DWORD PTR [ebp-0x10],eax
  40c59a:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40c5a1:	mov    eax,DWORD PTR [ebp-0x18]
  40c5a4:	and    DWORD PTR ds:0x429000,0x0
  40c5ae:	jmp    0x40c5c2
  40c5b3:	xor    esi,esi
  40c5b5:	xor    esi,DWORD PTR ds:0x429000
  40c5bb:	inc    esi
  40c5bc:	mov    DWORD PTR ds:0x429000,esi
  40c5c2:	cmp    DWORD PTR ds:0x429000,0x19
  40c5c9:	jae    0x40c645
  40c5cf:	cmp    DWORD PTR ds:0x429000,0x26
  40c5d6:	jne    0x40c5f7
  40c5dc:	push   0x42a000
  40c5e1:	push   DWORD PTR [ebp-0xc]
  40c5e4:	push   0x42e000
  40c5e9:	push   DWORD PTR [ebp-0x20]
  40c5ec:	push   0x21f7
  40c5f1:	call   DWORD PTR ds:0x42ec83
  40c5f7:	jmp    0x40c5b3
  40c5fc:	mov    DWORD PTR ds:0x42a018,0x13
  40c606:	cmp    DWORD PTR ds:0x42a018,0x0
  40c60d:	je     0x40c645
  40c613:	cmp    DWORD PTR ds:0x42a018,0x21
  40c61a:	jne    0x40c62b
  40c620:	push   0x42d008
  40c625:	call   DWORD PTR ds:0x42ec8b
  40c62b:	xor    esi,esi
  40c62d:	xor    esi,DWORD PTR ds:0x42a018
  40c633:	dec    esi
  40c634:	mov    DWORD PTR ds:0x42a018,esi
  40c63a:	jmp    0x40c606
  40c63f:	sub    DWORD PTR ds:0x42d01c,edx
  40c645:	mov    ecx,DWORD PTR [ebp-0x18]
  40c648:	sbb    edi,esi
  40c64a:	sub    eax,ecx
  40c64c:	and    DWORD PTR ds:0x429020,0x0
  40c656:	jmp    0x40c66a
  40c65b:	xor    esi,esi
  40c65d:	or     esi,DWORD PTR ds:0x429020
  40c663:	inc    esi
  40c664:	mov    DWORD PTR ds:0x429020,esi
  40c66a:	cmp    DWORD PTR ds:0x429020,0x14
  40c671:	jae    0x40c6b9
  40c677:	cmp    DWORD PTR ds:0x429020,0x5
  40c67e:	jne    0x40c69a
  40c684:	push   0x2bc2
  40c689:	push   DWORD PTR [ebp-0x28]
  40c68c:	push   0x42b010
  40c691:	push   DWORD PTR [ebp-0x14]
  40c694:	call   DWORD PTR ds:0x42ec8f
  40c69a:	cmp    DWORD PTR ds:0x429020,0x4
  40c6a1:	jne    0x40c6b4
  40c6a7:	mov    esi,DWORD PTR ds:0x429020
  40c6ad:	inc    esi
  40c6ae:	mov    DWORD PTR ds:0x429020,esi
  40c6b4:	jmp    0x40c65b
  40c6b9:	mov    DWORD PTR [ebp-0x18],eax
  40c6bc:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40c6c3:	mov    eax,DWORD PTR [ebp-0xc]
  40c6c6:	mov    ecx,DWORD PTR [ebp-0xc]
  40c6c9:	sub    eax,ecx
  40c6cb:	mov    DWORD PTR [ebp-0xc],eax
  40c6ce:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  40c6d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40c6d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  40c6db:	sub    eax,ecx
  40c6dd:	mov    DWORD PTR [ebp-0x1c],eax
  40c6e0:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  40c6e7:	mov    eax,DWORD PTR [ebp-0x20]
  40c6ea:	mov    ecx,DWORD PTR [ebp-0x20]
  40c6ed:	sub    eax,ecx
  40c6ef:	mov    DWORD PTR [ebp-0x20],eax
  40c6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40c6f5:	mov    ecx,DWORD PTR [ebp-0x20]
  40c6f8:	mov    esi,0x7510899
  40c6fd:	xor    eax,esi
  40c6ff:	mov    edi,0x3272e0
  40c704:	add    eax,edi
  40c706:	or     eax,ecx
  40c708:	mov    DWORD PTR [ebp-0x20],eax
  40c70b:	mov    eax,DWORD PTR [ebp-0x4]
  40c70e:	mov    ecx,DWORD PTR [ebp-0x4]
  40c711:	sub    eax,ecx
  40c713:	mov    DWORD PTR [ebp-0x4],eax
  40c716:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  40c71d:	mov    eax,DWORD PTR [ebp-0xc]
  40c720:	xor    eax,esi
  40c722:	add    eax,edi
  40c724:	push   eax
  40c725:	mov    eax,DWORD PTR [ebp-0x10]
  40c728:	xor    eax,esi
  40c72a:	add    eax,edi
  40c72c:	push   eax
  40c72d:	mov    eax,DWORD PTR [ebp-0x4]
  40c730:	xor    eax,esi
  40c732:	add    eax,edi
  40c734:	push   eax
  40c735:	lea    eax,[ebp-0x7c]
  40c738:	push   eax
  40c739:	push   DWORD PTR [ebp-0x2c]
  40c73c:	push   DWORD PTR [ebp-0x28]
  40c73f:	call   0x4115b7
  40c744:	test   eax,eax
  40c746:	je     0x40c774
  40c74c:	lea    eax,[ebp-0x7c]
  40c74f:	push   eax
  40c750:	mov    eax,DWORD PTR [ebp-0x28]
  40c753:	xor    eax,esi
  40c755:	add    eax,edi
  40c757:	push   eax
  40c758:	mov    eax,DWORD PTR [ebp-0x24]
  40c75b:	add    eax,0xaa
  40c760:	push   eax
  40c761:	mov    eax,DWORD PTR [ebp-0x24]
  40c764:	mov    eax,DWORD PTR [eax+0x198]
  40c76a:	push   DWORD PTR [eax]
  40c76c:	call   0x405286
  40c771:	mov    DWORD PTR [ebp-0x14],eax
  40c774:	lea    eax,[ebp+0x4]
  40c777:	mov    DWORD PTR [ebp-0x30],eax
  40c77a:	mov    eax,DWORD PTR [ebp-0x14]
  40c77d:	test   eax,eax
  40c77f:	je     0x40c7e7
  40c785:	lea    eax,[ebp-0x8]
  40c788:	mov    DWORD PTR [ebp-0x38],eax
  40c78b:	mov    eax,DWORD PTR [ebp-0x34]
  40c78e:	mov    DWORD PTR [ebp-0x8],eax
  40c791:	mov    eax,DWORD PTR [ebp-0x8]
  40c794:	mov    ecx,DWORD PTR [ebp-0x14]
  40c797:	sub    eax,ecx
  40c799:	mov    DWORD PTR [ebp-0x8],eax
  40c79c:	mov    ecx,DWORD PTR [ebp-0x4]
  40c79f:	xor    ecx,esi
  40c7a1:	mov    eax,0xffcd8d20
  40c7a6:	sub    eax,ecx
  40c7a8:	add    DWORD PTR [ebp-0x8],eax
  40c7ab:	mov    eax,DWORD PTR [ebp-0x8]
  40c7ae:	mov    ecx,DWORD PTR [ebp-0x14]
  40c7b1:	mov    DWORD PTR [ecx+0x1],eax
  40c7b4:	mov    eax,DWORD PTR [ebp-0x14]
  40c7b7:	push   DWORD PTR [ebp-0x24]
  40c7ba:	mov    BYTE PTR [eax],0xe9
  40c7bd:	mov    eax,ds:0x42e18f
  40c7c2:	push   DWORD PTR [eax]
  40c7c4:	push   DWORD PTR ds:0x42e3eb
  40c7ca:	push   DWORD PTR ds:0x42e197
  40c7d0:	push   DWORD PTR ds:0x42e3cb
  40c7d6:	push   DWORD PTR ds:0x42e9db
  40c7dc:	push   DWORD PTR [ebp-0x28]
  40c7df:	push   DWORD PTR [ebp-0x2c]
  40c7e2:	mov    eax,DWORD PTR [ebp-0x14]
  40c7e5:	call   eax
  40c7e7:	mov    eax,DWORD PTR [ebp-0x30]
  40c7ea:	mov    ecx,DWORD PTR ds:0x42e38f
  40c7f0:	add    DWORD PTR [eax],ecx
  40c7f2:	pop    edi
  40c7f3:	pop    esi
  40c7f4:	leave  
  40c7f5:	ret    
  40c7f6:	push   ebp
  40c7f7:	mov    ebp,esp
  40c7f9:	sub    esp,0x18
  40c7fc:	adc    edx,ecx
  40c7fe:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  40c805:	add    edx,ecx
  40c807:	lea    eax,[ebp+0x14]
  40c80a:	and    DWORD PTR ds:0x42d014,0x0
  40c814:	jmp    0x40c826
  40c819:	mov    ecx,DWORD PTR ds:0x42d014
  40c81f:	inc    ecx
  40c820:	mov    DWORD PTR ds:0x42d014,ecx
  40c826:	cmp    DWORD PTR ds:0x42d014,0x18
  40c82d:	jae    0x40c86f
  40c833:	cmp    DWORD PTR ds:0x42d014,0x8
  40c83a:	jne    0x40c846
  40c840:	call   DWORD PTR ds:0x42ec93
  40c846:	cmp    DWORD PTR ds:0x42d014,0x7
  40c84d:	jne    0x40c860
  40c853:	mov    ecx,DWORD PTR ds:0x42d014
  40c859:	inc    ecx
  40c85a:	mov    DWORD PTR ds:0x42d014,ecx
  40c860:	jmp    0x40c819
  40c865:	xor    DWORD PTR ds:0x42d004,0x7da9
  40c86f:	mov    DWORD PTR [ebp-0x4],eax
  40c872:	dec    edx
  40c873:	push   esi
  40c874:	and    DWORD PTR ds:0x42b004,0x0
  40c87e:	mov    esi,DWORD PTR ds:0x42b004
  40c884:	inc    esi
  40c885:	mov    DWORD PTR ds:0x42b004,esi
  40c88b:	cmp    DWORD PTR ds:0x42b004,0x4
  40c892:	jne    0x40c8b6
  40c898:	push   DWORD PTR [ebp-0x24]
  40c89b:	push   0x42c000
  40c8a0:	push   DWORD PTR [ebp-0x1c]
  40c8a3:	push   0x1834
  40c8a8:	push   0x14e1
  40c8ad:	push   DWORD PTR [ebp-0x24]
  40c8b0:	call   DWORD PTR ds:0x42ec97
  40c8b6:	cmp    DWORD PTR ds:0x42b004,0x3
  40c8bd:	jne    0x40c8d2
  40c8c3:	xor    esi,esi
  40c8c5:	xor    esi,DWORD PTR ds:0x42b004
  40c8cb:	inc    esi
  40c8cc:	mov    DWORD PTR ds:0x42b004,esi
  40c8d2:	cmp    DWORD PTR ds:0x42b004,0x16
  40c8d9:	jb     0x40c87e
  40c8df:	mov    esi,0xf89c85b9
  40c8e4:	adc    edx,DWORD PTR ds:0x429004
  40c8ea:	mov    DWORD PTR [ebp-0xc],esi
  40c8ed:	lea    eax,[ebp-0xc]
  40c8f0:	sbb    edx,DWORD PTR ds:0x42a004
  40c8f6:	mov    DWORD PTR [ebp-0x14],eax
  40c8f9:	xor    ecx,ecx
  40c8fb:	or     ecx,DWORD PTR ds:0x418f85
  40c901:	mov    ecx,DWORD PTR [ecx]
  40c903:	adc    DWORD PTR ds:0x42c018,ecx
  40c909:	mov    eax,DWORD PTR [ebp-0xc]
  40c90c:	add    DWORD PTR ds:0x42d004,0x429008
  40c916:	mov    edx,DWORD PTR [ebp-0x14]
  40c919:	mov    ecx,0x7510899
  40c91e:	xor    eax,ecx
  40c920:	sbb    DWORD PTR ds:0x42c010,0x429000
  40c92a:	add    eax,0x3272e0
  40c92f:	xor    DWORD PTR ds:0x42c018,0x1738
  40c939:	mov    DWORD PTR [edx],eax
  40c93b:	or     DWORD PTR ds:0x42a008,0x34e
  40c945:	mov    eax,ds:0x42e18b
  40c94a:	mov    edx,DWORD PTR [ebp-0x4]
  40c94d:	mov    eax,DWORD PTR [eax]
  40c94f:	sbb    DWORD PTR ds:0x42a010,0x361f
  40c959:	add    eax,DWORD PTR [edx]
  40c95b:	dec    edx
  40c95c:	push   edi
  40c95d:	mov    DWORD PTR ds:0x42a01c,0x1f
  40c967:	cmp    DWORD PTR ds:0x42a01c,0x0
  40c96e:	je     0x40c9b5
  40c974:	cmp    DWORD PTR ds:0x42a01c,0x3
  40c97b:	jne    0x40c987
  40c981:	call   DWORD PTR ds:0x42ec9b
  40c987:	cmp    DWORD PTR ds:0x42a01c,0x4
  40c98e:	jne    0x40c9a3
  40c994:	xor    edx,edx
  40c996:	or     edx,DWORD PTR ds:0x42a01c
  40c99c:	dec    edx
  40c99d:	mov    DWORD PTR ds:0x42a01c,edx
  40c9a3:	mov    edx,DWORD PTR ds:0x42a01c
  40c9a9:	dec    edx
  40c9aa:	mov    DWORD PTR ds:0x42a01c,edx
  40c9b0:	jmp    0x40c967
  40c9b5:	mov    DWORD PTR [ebp-0x8],eax
  40c9b8:	or     edi,edi
  40c9ba:	mov    edi,DWORD PTR [ebp+0x8]
  40c9bd:	adc    edx,edx
  40c9bf:	mov    eax,ds:0x42e313
  40c9c4:	mov    eax,DWORD PTR [eax+0x198]
  40c9ca:	xor    edi,ecx
  40c9cc:	mov    edx,0x3272e0
  40c9d1:	sub    DWORD PTR ds:0x42b00c,0x42c010
  40c9db:	add    edi,edx
  40c9dd:	mov    DWORD PTR ds:0x429010,0x673c
  40c9e7:	cmp    DWORD PTR [eax],edi
  40c9e9:	je     0x40c9f6
  40c9ef:	mov    eax,DWORD PTR [eax]
  40c9f1:	jmp    0x40f0dc
  40c9f6:	mov    eax,DWORD PTR [ebp+0x18]
  40c9f9:	mov    DWORD PTR ds:0x42b01c,0x6325
  40ca03:	cmp    eax,esi
  40ca05:	jne    0x40ca1f
  40ca0b:	push   0xf89c85b8
  40ca10:	mov    DWORD PTR ds:0x42b00c,0x25aa
  40ca1a:	jmp    0x40f0cb
  40ca1f:	mov    esi,0x6599
  40ca24:	mov    esi,DWORD PTR [ebp+0x18]
  40ca27:	mov    eax,0xf89c85bb
  40ca2c:	mov    DWORD PTR ds:0x42d00c,0x595f
  40ca36:	cmp    esi,eax
  40ca38:	mov    DWORD PTR ds:0x42a008,0x11a1
  40ca42:	jne    0x40f0bb
  40ca48:	add    eax,DWORD PTR ds:0x42b004
  40ca4e:	mov    eax,DWORD PTR [ebp+0x10]
  40ca51:	xor    eax,ecx
  40ca53:	add    eax,edx
  40ca55:	and    DWORD PTR ds:0x429014,0x0
  40ca5f:	jmp    0x40ca71
  40ca64:	mov    esi,DWORD PTR ds:0x429014
  40ca6a:	inc    esi
  40ca6b:	mov    DWORD PTR ds:0x429014,esi
  40ca71:	cmp    DWORD PTR ds:0x429014,0x16
  40ca78:	jae    0x40caa5
  40ca7e:	cmp    DWORD PTR ds:0x429014,0x1b
  40ca85:	jne    0x40ca9e
  40ca8b:	push   DWORD PTR [ebp-0x28]
  40ca8e:	push   0x429018
  40ca93:	push   0x4f77
  40ca98:	call   DWORD PTR ds:0x42ec9f
  40ca9e:	jmp    0x40ca64
  40caa3:	not    esi
  40caa5:	mov    DWORD PTR [ebp-0x18],eax
  40caa8:	sub    DWORD PTR ds:0x429014,ecx
  40caae:	mov    eax,DWORD PTR [ebp+0xc]
  40cab1:	mov    esi,DWORD PTR ds:0x429008
  40cab7:	or     DWORD PTR ds:0x429028,esi
  40cabd:	mov    esi,DWORD PTR [ebp-0x8]
  40cac0:	xor    eax,ecx
  40cac2:	add    eax,edx
  40cac4:	adc    DWORD PTR ds:0x42a000,0x42a00c
  40cace:	imul   eax,DWORD PTR [esi]
  40cad1:	and    DWORD PTR ds:0x42d004,0x0
  40cadb:	mov    esi,DWORD PTR ds:0x42d004
  40cae1:	inc    esi
  40cae2:	mov    DWORD PTR ds:0x42d004,esi
  40cae8:	cmp    DWORD PTR ds:0x42d004,0x5
  40caef:	jne    0x40cb08
  40caf5:	push   0x42e0b3
  40cafa:	push   0x42e127
  40caff:	push   DWORD PTR [ebp-0x24]
  40cb02:	call   DWORD PTR ds:0x42eca7
  40cb08:	cmp    DWORD PTR ds:0x42d004,0x4
  40cb0f:	jne    0x40cb22
  40cb15:	mov    esi,DWORD PTR ds:0x42d004
  40cb1b:	inc    esi
  40cb1c:	mov    DWORD PTR ds:0x42d004,esi
  40cb22:	cmp    DWORD PTR ds:0x42d004,0x14
  40cb29:	jb     0x40cadb
  40cb2f:	mov    esi,DWORD PTR [ebp+0x8]
  40cb32:	and    DWORD PTR ds:0x42b008,0x408f
  40cb3c:	xor    esi,ecx
  40cb3e:	add    esi,edx
  40cb40:	cmp    esi,eax
  40cb42:	mov    DWORD PTR ds:0x42a000,0x45f2
  40cb4c:	mov    eax,DWORD PTR [ebp-0x4]
  40cb4f:	mov    DWORD PTR ds:0x429010,0x639a
  40cb59:	push   ebx
  40cb5a:	mov    DWORD PTR ds:0x429004,0x7615
  40cb64:	je     0x40cbb2
  40cb6a:	sub    esi,DWORD PTR ds:0x42c01c
  40cb70:	mov    esi,DWORD PTR [ebp-0x18]
  40cb73:	add    DWORD PTR [eax],esi
  40cb75:	dec    eax
  40cb76:	mov    eax,DWORD PTR [ebp-0x4]
  40cb79:	mov    esi,DWORD PTR [ebp+0xc]
  40cb7c:	adc    DWORD PTR ds:0x42c014,0x3307
  40cb86:	xor    esi,ecx
  40cb88:	add    DWORD PTR ds:0x42d004,0x3241
  40cb92:	add    esi,edx
  40cb94:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40cb9e:	imul   esi,DWORD PTR [eax]
  40cba1:	mov    DWORD PTR ds:0x429000,0x39ad
  40cbab:	mov    DWORD PTR [eax],esi
  40cbad:	jmp    0x40cbb7
  40cbb2:	mov    esi,DWORD PTR [ebp+0x14]
  40cbb5:	xor    DWORD PTR [eax],esi
  40cbb7:	mov    eax,DWORD PTR [ebp-0x4]
  40cbba:	mov    edi,DWORD PTR [ebp+0x10]
  40cbbd:	xor    edi,ecx
  40cbbf:	mov    esi,0xffcd8d20
  40cbc4:	mov    ebx,esi
  40cbc6:	sub    ebx,edi
  40cbc8:	add    DWORD PTR [eax],ebx
  40cbca:	mov    eax,DWORD PTR [ebp-0x4]
  40cbcd:	mov    edi,DWORD PTR [ebp-0x8]
  40cbd0:	add    edi,DWORD PTR [eax]
  40cbd2:	mov    DWORD PTR [ebp-0x8],edi
  40cbd5:	mov    eax,DWORD PTR [ebp+0xc]
  40cbd8:	mov    edi,DWORD PTR [ebp+0xc]
  40cbdb:	xor    edi,ecx
  40cbdd:	xor    eax,ecx
  40cbdf:	lea    eax,[eax+edi*1+0x64e5c0]
  40cbe6:	mov    edi,DWORD PTR [ebp+0xc]
  40cbe9:	xor    edi,ecx
  40cbeb:	add    edi,edx
  40cbed:	imul   eax,edi
  40cbf0:	mov    edi,DWORD PTR [ebp+0xc]
  40cbf3:	xor    edi,ecx
  40cbf5:	sub    edi,eax
  40cbf7:	mov    eax,DWORD PTR [ebp-0x4]
  40cbfa:	add    edi,edx
  40cbfc:	cmp    DWORD PTR [eax],edi
  40cbfe:	mov    eax,DWORD PTR [ebp-0x4]
  40cc01:	mov    edi,DWORD PTR [ebp+0x10]
  40cc04:	jg     0x40cc17
  40cc0a:	xor    edi,ecx
  40cc0c:	mov    ebx,esi
  40cc0e:	sub    ebx,edi
  40cc10:	add    DWORD PTR [eax],ebx
  40cc12:	jmp    0x40cc1d
  40cc17:	xor    edi,ecx
  40cc19:	add    edi,edx
  40cc1b:	add    DWORD PTR [eax],edi
  40cc1d:	mov    eax,DWORD PTR [ebp-0x8]
  40cc20:	mov    edi,DWORD PTR [ebp-0x10]
  40cc23:	mov    eax,DWORD PTR [eax]
  40cc25:	xor    edi,ecx
  40cc27:	add    edi,0x3272df
  40cc2d:	jmp    0x40efd7
  40cc32:	xchg   ebx,eax
  40cc33:	rol    BYTE PTR [ebx+ebx*8-0x5],0xdb
  40cc38:	jae    0x40cbba
  40cc3a:	fs lock inc edx
  40cc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc3e:	xlat   BYTE PTR ds:[ebx]
  40cc3f:	arpl   WORD PTR [ebp+0x7ae5da5b],di
  40cc45:	jp     0x40cc2c
  40cc47:	pop    edi
  40cc48:	jp     0x40ccc4
  40cc4a:	mov    esi,0x1f805367
  40cc4f:	mov    ds:0x838510cc,al
  40cc54:	aas    
  40cc55:	push   0x4c4638ea
  40cc5a:	sub    eax,0x86987635
  40cc5f:	aaa    
  40cc60:	mov    BYTE PTR [eax+ebp*4+0x50d38b71],bl
  40cc67:	mov    ah,0xf0
  40cc69:	adc    eax,0xd94f18bf
  40cc6e:	(bad)  
  40cc70:	rcr    BYTE PTR [ebx],1
  40cc72:	in     eax,dx
  40cc73:	ja     0x40cc39
  40cc75:	xchg   BYTE PTR [edi],dh
  40cc77:	jnp    0x40ccde
  40cc79:	push   eax
  40cc7a:	dec    edx
  40cc7b:	mov    ah,0x80
  40cc7d:	pop    esi
  40cc7e:	ja     0x40ccb4
  40cc80:	int3   
  40cc81:	je     0x40cc0f
  40cc83:	lock xor eax,0x7d20a740
  40cc89:	test   DWORD PTR [eax+0x20fc1656],0x4a3cc16b
  40cc93:	shl    BYTE PTR [ebx-0x4261f949],cl
  40cc99:	(bad)  
  40cc9a:	jmp    0x5938:0x3dc31858
  40cca1:	add    al,BYTE PTR [eax+0x75c252cd]
  40cca7:	cld    
  40cca8:	outs   dx,BYTE PTR ds:[esi]
  40cca9:	dec    ebp
  40ccaa:	jno    0x40cc40
  40ccac:	cs inc eax
  40ccae:	dec    edi
  40ccaf:	mov    bl,0x69
  40ccb1:	pop    ebp
  40ccb2:	retf   
  40ccb3:	lea    ecx,[edx+0x4b]
  40ccb6:	enter  0xe90,0x89
  40ccba:	dec    ebp
  40ccbb:	pop    edi
  40ccbc:	je     0x40cd09
  40ccbe:	push   0xb409d798
  40ccc3:	cmp    ebx,ebx
  40ccc5:	jo     0x40cd17
  40ccc7:	jno    0x40cccc
  40ccc9:	les    ebp,FWORD PTR [esi+0xef73d27]
  40cccf:	aad    0xa2
  40ccd1:	or     ch,0x2c
  40ccd4:	cli    
  40ccd5:	and    BYTE PTR cs:[ebx+0x54],0xf7
  40ccda:	loopne 0x40cd02
  40ccdc:	outs   dx,BYTE PTR ds:[esi]
  40ccdd:	add    ecx,DWORD PTR [edi+0x3f934c82]
  40cce3:	xchg   edi,eax
  40cce4:	pusha  
  40cce5:	cld    
  40cce6:	pop    DWORD PTR [esi+0x4e]
  40cce9:	mov    ecx,0x24118c7
  40ccee:	out    0x56,eax
  40ccf0:	sub    bl,BYTE PTR [esp+edi*2]
  40ccf3:	loopne 0x40cd36
  40ccf5:	in     eax,0xfa
  40ccf7:	retf   0x1315
  40ccfa:	xor    ah,BYTE PTR [ebx-0x2e]
  40ccfd:	lods   eax,DWORD PTR ds:[esi]
  40ccfe:	test   al,0xcc
  40cd00:	lds    esp,FWORD PTR [ebp-0x2c410ca9]
  40cd06:	push   cs
  40cd07:	(bad)  
  40cd08:	adc    DWORD PTR [ecx-0x63],edi
  40cd0b:	test   dh,ah
  40cd0d:	jae    0x40cd33
  40cd0f:	gs test bl,cl
  40cd12:	push   esp
  40cd13:	ja     0x40cd32
  40cd15:	jp     0x40cd82
  40cd17:	mov    esi,0xa8fbc08d
  40cd1c:	out    dx,eax
  40cd1d:	cmp    esi,DWORD PTR [edi]
  40cd1f:	neg    BYTE PTR [di+0x3b70]
  40cd24:	push   ebp
  40cd25:	inc    ebp
  40cd26:	and    dh,BYTE PTR [ebx]
  40cd28:	test   al,0x28
  40cd2a:	add    bh,BYTE PTR [esi-0x5bc02a3a]
  40cd30:	xor    eax,0xe4738d94
  40cd35:	push   ebx
  40cd36:	test   eax,0x2086ad3
  40cd3b:	mov    esp,0x71cb150a
  40cd40:	xchg   esp,eax
  40cd41:	idiv   DWORD PTR [ecx]
  40cd43:	and    al,0x96
  40cd45:	aam    0x26
  40cd47:	xor    eax,0x83af11df
  40cd4c:	dec    esi
  40cd4d:	pop    ecx
  40cd4e:	mov    WORD PTR [ebx-0x5e11403e],gs
  40cd54:	dec    ebx
  40cd55:	pop    ds
  40cd56:	xor    eax,0xc19af747
  40cd5b:	sub    BYTE PTR [eax],ah
  40cd5d:	jno    0x40cce1
  40cd5f:	xchg   ebp,eax
  40cd60:	test   al,0x98
  40cd62:	cmc    
  40cd63:	shl    ebx,cl
  40cd65:	adc    eax,0xaab5aef2
  40cd6a:	adc    bh,BYTE PTR [eax+0x55]
  40cd6d:	jnp    0x40cdd1
  40cd6f:	mov    dh,0x31
  40cd71:	fwait
  40cd72:	push   esi
  40cd73:	mov    ds:0x14e4549c,eax
  40cd78:	retf   
  40cd79:	sub    dh,BYTE PTR [ebx]
  40cd7b:	mov    dl,0x8e
  40cd7d:	inc    esp
  40cd7e:	shl    al,0xd7
  40cd81:	les    ebx,FWORD PTR [ebp+0x15]
  40cd84:	loopne 0x40cd29
  40cd86:	cmp    DWORD PTR [ebx-0x607f7d2b],ecx
  40cd8c:	(bad)  
  40cd8d:	push   ds
  40cd8e:	call   0xda33:0x53bd67c5
  40cd95:	pop    eax
  40cd96:	mov    WORD PTR [esi],cs
  40cd98:	fs std 
  40cd9a:	dec    ebp
  40cd9b:	idiv   al
  40cd9d:	repz fst DWORD PTR [ecx-0x2b]
  40cda1:	sub    al,0x3e
  40cda3:	jecxz  0x40cdbd
  40cda5:	adc    al,0x15
  40cda7:	xchg   DWORD PTR [eax-0x1d],ecx
  40cdaa:	fcmovne st,st(0)
  40cdac:	dec    esp
  40cdad:	outs   dx,BYTE PTR ds:[esi]
  40cdae:	jmp    0x40cd33
  40cdb0:	(bad)  ds:0x4d735650
  40cdb6:	jns    0x40cd8c
  40cdb8:	mov    DWORD PTR [edi+0x71],edx
  40cdbb:	adc    al,0x8e
  40cdbd:	add    al,0x43
  40cdbf:	and    al,0x5d
  40cdc1:	add    ah,BYTE PTR [esi-0x44d4cd24]
  40cdc7:	je     0x40ce1a
  40cdc9:	and    eax,0xb1f14872
  40cdce:	bnd ret 0x34ce
  40cdd2:	js     0x40ce13
  40cdd4:	fs jge 0x40ce16
  40cdd7:	inc    ebx
  40cdd8:	cmp    ecx,DWORD PTR [edi]
  40cdda:	retf   
  40cddb:	pushf  
  40cddc:	inc    edx
  40cddd:	xchg   esp,eax
  40cdde:	imul   esi,ebp,0xebdd18ab
  40cde4:	shl    BYTE PTR [ebx-0x56d12c44],1
  40cdea:	test   eax,0xe577b32
  40cdef:	stos   DWORD PTR es:[edi],eax
  40cdf0:	fwait
  40cdf1:	inc    ax
  40cdf3:	jmp    FWORD PTR [ebx+0xd52569f]
  40cdf9:	retf   
  40cdfa:	(bad)  
  40cdfb:	loopne 0x40ce09
  40cdfd:	xor    edx,eax
  40cdff:	fxch   st(2)
  40ce01:	out    dx,eax
  40ce02:	or     BYTE PTR [esi],ch
  40ce04:	ret    
  40ce05:	mov    BYTE PTR [ecx+0xa403b84],bh
  40ce0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce0c:	mov    ah,0x3e
  40ce0e:	xor    eax,0xf81fb416
  40ce13:	and    BYTE PTR [ebx],0xf6
  40ce16:	mov    bl,BYTE PTR [esi+ebx*2+0xd]
  40ce1a:	fild   QWORD PTR [edi+0x57ab193a]
  40ce20:	mov    eax,ds:0x59a7eac
  40ce25:	rcl    DWORD PTR [esi-0x3ac6d383],1
  40ce2b:	xchg   ebp,eax
  40ce2c:	cld    
  40ce2d:	lods   al,BYTE PTR ds:[esi]
  40ce2e:	mov    bh,0xfd
  40ce30:	lea    esp,[edi+0x20]
  40ce33:	push   edx
  40ce34:	not    BYTE PTR [edx-0x5b748e16]
  40ce3a:	mov    esp,0xdd6fdd65
  40ce3f:	inc    edi
  40ce40:	jmp    0xbd9b:0xb9db513e
  40ce47:	jmp    0x5023:0x8bd92ba7
  40ce4e:	lods   eax,DWORD PTR ds:[esi]
  40ce4f:	cmp    bh,BYTE PTR [edi]
  40ce51:	fcomp  QWORD PTR [ebx+ebx*4]
  40ce54:	(bad)  
  40ce56:	mov    BYTE PTR [edi-0x62],al
  40ce59:	adc    DWORD PTR [edx-0x47],ebp
  40ce5c:	push   0x18
  40ce5e:	scas   al,BYTE PTR es:[edi]
  40ce5f:	jb     0x40ce6a
  40ce61:	sub    eax,DWORD PTR [ebx]
  40ce63:	nop    DWORD PTR [edi]
  40ce66:	fadd   QWORD PTR [ebx-0xf]
  40ce69:	pop    ebp
  40ce6a:	imul   esp,ebx,0x8b4942e0
  40ce70:	shl    BYTE PTR [esp+eiz*8],1
  40ce73:	add    dl,BYTE PTR [edx+ecx*1-0x6e]
  40ce77:	rol    BYTE PTR ds:0xbc3edfac,cl
  40ce7d:	mov    eax,0xb5b898a
  40ce82:	pop    edi
  40ce83:	add    ecx,ebx
  40ce85:	fdivr  DWORD PTR [bx+si-0x3266]
  40ce8a:	add    BYTE PTR [edi+0x82ee93c],0x45
  40ce91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce92:	jmp    0xb037:0xdc6c7353
  40ce99:	cmp    eax,0x41410f34
  40ce9e:	pop    esi
  40ce9f:	and    BYTE PTR [esi-0x4a],dl
  40cea2:	ret    
  40cea3:	xor    al,0xfc
  40cea5:	mov    al,ds:0xc6942ea
  40ceaa:	dec    edx
  40ceab:	in     eax,0x9f
  40cead:	xor    al,BYTE PTR [edi-0x23cd9c5e]
  40ceb3:	cmc    
  40ceb4:	mov    ds:0x56992ccb,eax
  40ceb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceba:	fs push cs
  40cebc:	xchg   DWORD PTR gs:[eax-0x5a],edi
  40cec0:	out    dx,eax
  40cec1:	fwait
  40cec2:	ds mov dh,0xb9
  40cec5:	cmp    esi,0x23f24b9d
  40cecb:	lods   eax,DWORD PTR ds:[esi]
  40cecc:	fwait
  40cecd:	mov    esi,DWORD PTR [esi]
  40cecf:	aam    0x3e
  40ced1:	dec    ecx
  40ced2:	(bad)  
  40ced3:	es or  al,0x49
  40ced6:	cli    
  40ced7:	xchg   ecx,eax
  40ced8:	mov    ebx,ebx
  40ceda:	or     al,0xff
  40cedc:	mov    ebp,0x5be63396
  40cee1:	mov    dh,cl
  40cee3:	add    eax,0x98dd4aa7
  40cee8:	pop    DWORD PTR [ecx+0x61]
  40ceeb:	pushf  
  40ceec:	push   edi
  40ceed:	cmc    
  40ceee:	test   DWORD PTR [ecx-0x3c],eax
  40cef1:	ror    BYTE PTR [ebp+0x17],cl
  40cef4:	add    eax,0x71ed62dd
  40cef9:	bound  esi,QWORD PTR [eiz*8+0x72894328]
  40cf00:	rcl    DWORD PTR [edx-0x47445391],0xfb
  40cf07:	loop   0x40cf31
  40cf09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf0a:	test   BYTE PTR [ebx-0x4fdf49b9],dl
  40cf10:	mov    WORD PTR [edx-0x80],gs
  40cf13:	sar    bl,0xa2
  40cf16:	fwait
  40cf17:	and    esp,DWORD PTR [ebp+eax*1+0x37]
  40cf1b:	outs   dx,DWORD PTR ds:[esi]
  40cf1c:	inc    eax
  40cf1d:	mov    ah,0x4
  40cf1f:	mov    bl,0x5c
  40cf21:	xlat   BYTE PTR ds:[ebx]
  40cf22:	(bad)  
  40cf23:	push   esp
  40cf24:	push   edi
  40cf25:	and    ebx,edi
  40cf27:	(bad)
  40cf2b:	cmp    dh,bh
  40cf2d:	xor    ebx,DWORD PTR [ebx+edi*2]
  40cf30:	(bad)  
  40cf31:	int3   
  40cf32:	in     al,dx
  40cf33:	add    eax,0xef340060
  40cf38:	xlat   BYTE PTR ds:[ebx]
  40cf39:	repz or WORD PTR [eax],cx
  40cf3d:	adc    eax,0x9ae2f00f
  40cf42:	sub    BYTE PTR [ecx],bl
  40cf44:	sub    al,0xec
  40cf46:	lods   eax,DWORD PTR ds:[esi]
  40cf47:	mov    eax,0x7d9506ec
  40cf4c:	add    DWORD PTR [eax-0x4d3eb5a2],ebx
  40cf52:	mov    ecx,0x8b45e334
  40cf57:	fcomp  DWORD PTR [ebp+eax*2-0x7f09484f]
  40cf5e:	xor    BYTE PTR [eax],ch
  40cf60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf61:	xor    al,0x9b
  40cf63:	and    DWORD PTR [ebp+0x7c],edx
  40cf66:	jb     0x40cf54
  40cf68:	xor    ebp,DWORD PTR [esp+eiz*4+0xf]
  40cf6c:	dec    esi
  40cf6d:	pop    ds
  40cf6e:	dec    eax
  40cf6f:	outs   dx,DWORD PTR ds:[esi]
  40cf70:	pop    edi
  40cf71:	idiv   BYTE PTR [ebx-0x30ec3dcb]
  40cf77:	add    eax,0xb187f2f9
  40cf7c:	xchg   esi,eax
  40cf7d:	push   eax
  40cf7e:	out    0x1f,al
  40cf80:	push   eax
  40cf81:	bound  esp,QWORD PTR [esi-0x7373e1a4]
  40cf87:	jmp    ecx
  40cf89:	ins    DWORD PTR es:[edi],dx
  40cf8a:	dec    ebx
  40cf8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf8c:	adc    edi,DWORD PTR [edx-0x45cc1a90]
  40cf92:	jp     0x40cfa8
  40cf94:	fwait
  40cf95:	push   edi
  40cf96:	adc    DWORD PTR [ebx+eiz*1],0xcdcc0f5c
  40cf9d:	lahf   
  40cf9e:	xor    al,0x6a
  40cfa0:	imul   esi,DWORD PTR [edx+0x43],0x41716245
  40cfa7:	shl    BYTE PTR [ecx],1
  40cfa9:	daa    
  40cfaa:	push   ebp
  40cfab:	not    BYTE PTR [eax]
  40cfad:	push   ebx
  40cfae:	jb     0x40d01b
  40cfb0:	push   ebp
  40cfb1:	jno    0x40cf76
  40cfb3:	xchg   BYTE PTR [ecx],al
  40cfb5:	add    al,0x68
  40cfb7:	out    dx,eax
  40cfb8:	pop    ds
  40cfb9:	into   
  40cfba:	in     al,dx
  40cfbb:	mov    esi,0xfa5a2367
  40cfc0:	repz inc esi
  40cfc2:	sbb    DWORD PTR [esi-0x56],0x961d1db6
  40cfc9:	sbb    al,0x95
  40cfcb:	cwde   
  40cfcc:	sub    BYTE PTR [ebx],al
  40cfce:	cwde   
  40cfcf:	mov    eax,edx
  40cfd1:	pop    edx
  40cfd2:	mov    al,ds:0xc8e4346c
  40cfd7:	and    eax,0x73daf3b6
  40cfdc:	cmp    edi,DWORD PTR ds:0xe1ddcd5d
  40cfe2:	call   0x677d555e
  40cfe7:	(bad)  
  40cfe8:	gs jmp 0xe3311a29
  40cfee:	sub    BYTE PTR [esi-0x6deb2f82],ch
  40cff4:	or     eax,0x59a787de
  40cff9:	cmp    bl,BYTE PTR gs:[eax]
  40cffc:	pop    esi
  40cffd:	jmp    0xa64b6e32
  40d002:	loop   0x40cfc7
  40d004:	nop
  40d005:	je     0x40cf8c
  40d007:	aaa    
  40d008:	pusha  
  40d009:	hlt    
  40d00a:	push   eax
  40d00b:	push   edi
  40d00c:	out    0xcf,al
  40d00e:	nop
  40d00f:	rcr    bl,cl
  40d011:	mov    ds:0xf46a1b2c,eax
  40d016:	call   0x4e6f:0xcf1893cc
  40d01d:	test   eax,0xe0f8e214
  40d022:	mov    ah,0xbc
  40d024:	pop    ebp
  40d025:	jns    0x40cff9
  40d027:	xor    al,0x59
  40d029:	adc    dh,BYTE PTR ss:[edi]
  40d02c:	sbb    al,0x92
  40d02e:	aas    
  40d02f:	mov    cl,0xb7
  40d031:	xlat   BYTE PTR ds:[ebx]
  40d032:	jecxz  0x40d07c
  40d034:	(bad)  
  40d035:	mov    bl,0xbb
  40d037:	xlat   BYTE PTR ds:[ebx]
  40d038:	push   esi
  40d039:	fst    DWORD PTR [edx+0x5a]
  40d03c:	shl    DWORD PTR [eax-0x171f25e9],1
  40d042:	ins    BYTE PTR es:[edi],dx
  40d043:	sbb    edi,eax
  40d045:	mov    esp,0xce459d92
  40d04a:	gs std 
  40d04c:	pop    ebp
  40d04d:	push   edi
  40d04e:	mov    cl,0x9b
  40d050:	dec    ebp
  40d051:	push   eax
  40d052:	xor    eax,0x841a75cc
  40d057:	mov    cl,0x74
  40d059:	popa   
  40d05a:	js     0x40d03d
  40d05c:	cwde   
  40d05d:	mov    dh,0x27
  40d05f:	mov    ds:0xa6a68ceb,al
  40d064:	pop    edx
  40d065:	or     DWORD PTR [edi-0x7c],esi
  40d068:	mov    ebp,0x9f2a6de4
  40d06d:	(bad)  
  40d06e:	cmp    al,0x45
  40d070:	addr16 dec esp
  40d072:	push   ecx
  40d073:	pop    eax
  40d074:	push   eax
  40d075:	jmp    0x7bb2c071
  40d07a:	push   esi
  40d07b:	dec    edx
  40d07c:	or     eax,0x77ef53c4
  40d081:	xchg   BYTE PTR [edi],cl
  40d083:	xor    ch,BYTE PTR [edi+edi*1-0xa]
  40d087:	sti    
  40d088:	bound  ecx,QWORD PTR [ecx]
  40d08a:	mov    bh,0x57
  40d08c:	jmp    0xb631:0x74373be3
  40d093:	fild   WORD PTR ss:[edx+edi*2]
  40d097:	ror    BYTE PTR [ecx+eax*4+0x29a95623],cl
  40d09e:	mov    ebp,0x2f6ecc05
  40d0a3:	add    al,0x2a
  40d0a5:	fiadd  DWORD PTR [ecx-0x421a32f0]
  40d0ab:	jnp    0x40d111
  40d0ad:	leave  
  40d0ae:	jo     0x40d079
  40d0b0:	ins    DWORD PTR es:[edi],dx
  40d0b1:	int3   
  40d0b2:	sub    esp,DWORD PTR [ebp-0x3]
  40d0b5:	xchg   edi,eax
  40d0b6:	sub    ch,BYTE PTR [ecx+0x13380210]
  40d0bc:	pop    es
  40d0bd:	in     al,dx
  40d0be:	repnz mov bh,0x21
  40d0c1:	mov    esp,0x4a612e86
  40d0c6:	iret   
  40d0c7:	sahf   
  40d0c8:	(bad)  
  40d0c9:	xlat   BYTE PTR ds:[ebx]
  40d0ca:	dec    ebp
  40d0cb:	in     al,0xfe
  40d0cd:	(bad)  
  40d0ce:	adc    eax,0x8e445f76
  40d0d3:	stos   DWORD PTR es:[edi],eax
  40d0d4:	stos   BYTE PTR es:[edi],al
  40d0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0d6:	stos   BYTE PTR es:[edi],al
  40d0d7:	rcr    DWORD PTR [edx+0x7],0x70
  40d0db:	rcl    DWORD PTR [edx-0x7654d780],cl
  40d0e1:	dec    eax
  40d0e2:	clc    
  40d0e3:	mov    ds:0x91f78a81,eax
  40d0e8:	cmp    DWORD PTR [ebp+0x6a993baa],ebp
  40d0ee:	jnp    0x40d0b9
  40d0f0:	cmp    DWORD PTR [esi-0x7762129c],0xfd2dbedb
  40d0fa:	mov    esi,0xa4fec1bf
  40d0ff:	jae    0x40d0d4
  40d101:	imul   BYTE PTR ds:0x39e7782d
  40d107:	add    eax,0x3ddd6d34
  40d10c:	sbb    eax,0x1c4b3516
  40d111:	add    eax,0x5df2a87e
  40d116:	dec    edx
  40d117:	xchg   ecx,eax
  40d118:	sahf   
  40d119:	mov    ds:0x465f9ca8,eax
  40d11e:	lahf   
  40d11f:	inc    eax
  40d120:	xor    BYTE PTR [eax+ecx*1-0x1d],cl
  40d124:	stc    
  40d125:	imul   DWORD PTR [ebx-0x724b28f6]
  40d12b:	stos   BYTE PTR es:[edi],al
  40d12c:	call   0x61ea:0x4ca8585b
  40d133:	mov    eax,ds:0xa85556a5
  40d138:	das    
  40d139:	adc    BYTE PTR [ecx],dh
  40d13b:	in     eax,0x61
  40d13d:	dec    eax
  40d13e:	std    
  40d13f:	loope  0x40d13c
  40d141:	stos   BYTE PTR es:[edi],al
  40d142:	popf   
  40d143:	or     dl,ah
  40d145:	sbb    edx,DWORD PTR [ebx-0x5badfa88]
  40d14b:	iret   
  40d14c:	push   esp
  40d14d:	outs   dx,BYTE PTR ds:[esi]
  40d14e:	fwait
  40d14f:	data16 js 0x40d10f
  40d152:	pop    edx
  40d153:	xchg   BYTE PTR [esi+0x4d],dl
  40d156:	cmp    BYTE PTR ds:0x9ebb8800,ch
  40d15c:	out    dx,al
  40d15d:	dec    ebp
  40d15e:	push   edx
  40d15f:	into   
  40d160:	jbe    0x40d19e
  40d162:	add    eax,DWORD PTR [eax]
  40d164:	xor    cl,al
  40d166:	pop    ebx
  40d167:	loope  0x40d192
  40d169:	ret    
  40d16a:	retf   
  40d16b:	sbb    bh,BYTE PTR [ecx-0x1a]
  40d16e:	add    ecx,DWORD PTR [esi+0x7eab62f5]
  40d174:	das    
  40d175:	retf   
  40d176:	jmp    0xb5f66c38
  40d17b:	mov    edx,0x667e85c7
  40d180:	add    eax,0xd135908f
  40d185:	xchg   edx,eax
  40d186:	mov    eax,ds:0xbe562001
  40d18b:	jp     0x40d1d3
  40d18d:	push   es
  40d18e:	push   cs
  40d18f:	aad    0x9d
  40d191:	ficomp DWORD PTR [ebx]
  40d193:	xor    eax,0x542f673a
  40d198:	je     0x40d169
  40d19a:	test   BYTE PTR [edx-0x5],ah
  40d19d:	(bad)  
  40d19e:	in     eax,dx
  40d19f:	add    esi,DWORD PTR [ebx+0x3463c164]
  40d1a5:	out    0xe8,al
  40d1a7:	jo     0x40d20e
  40d1a9:	inc    eax
  40d1aa:	ja     0x40d1bc
  40d1ac:	sar    DWORD PTR [edi],0x71
  40d1af:	mov    dl,0x16
  40d1b1:	cmp    ah,dl
  40d1b3:	inc    esp
  40d1b4:	xchg   edi,eax
  40d1b5:	and    ah,dh
  40d1b7:	cli    
  40d1b8:	stos   BYTE PTR es:[edi],al
  40d1b9:	cmp    DWORD PTR [eax-0x37],edi
  40d1bc:	aas    
  40d1bd:	push   ebx
  40d1be:	xchg   edi,eax
  40d1bf:	sub    BYTE PTR [esi-0xdc491d],bl
  40d1c5:	out    dx,eax
  40d1c6:	daa    
  40d1c7:	ror    ebx,0xb7
  40d1ca:	ins    BYTE PTR es:[edi],dx
  40d1cb:	mov    eax,0xfb739fac
  40d1d0:	in     al,0xa4
  40d1d2:	adc    al,0xb9
  40d1d4:	sbb    eax,0x90a3c988
  40d1d9:	out    0x13,eax
  40d1db:	popf   
  40d1dc:	jmp    0x242f:0x109a4ed9
  40d1e3:	xlat   BYTE PTR ds:[ebx]
  40d1e4:	ds in  eax,dx
  40d1e6:	and    dh,BYTE PTR [ebp+0x7a]
  40d1e9:	std    
  40d1ea:	pop    eax
  40d1eb:	mov    ebp,0xfba92385
  40d1f0:	dec    edi
  40d1f1:	lods   al,BYTE PTR ds:[esi]
  40d1f2:	icebp  
  40d1f3:	mov    ds:0x2e72cafc,eax
  40d1f8:	pop    ebp
  40d1f9:	jno    0x40d1ba
  40d1fb:	jmp    0x40d1fa
  40d1fd:	xchg   ebx,eax
  40d1fe:	sbb    esi,DWORD PTR [edx+0x7a4ffcfe]
  40d204:	je     0x40d1c7
  40d206:	mov    ebx,0xb9d3b550
  40d20b:	pop    ecx
  40d20c:	add    ecx,DWORD PTR [edx+edx*2-0x160e2309]
  40d213:	mov    eax,ds:0x9ca57f24
  40d218:	(bad)  
  40d219:	adc    cl,0x4c
  40d21c:	mul    BYTE PTR [ebp-0x7ae2a9b1]
  40d222:	pusha  
  40d223:	mov    esp,0xc424b986
  40d228:	lods   al,BYTE PTR ds:[esi]
  40d229:	mov    ecx,0x6373de8d
  40d22e:	lahf   
  40d22f:	mov    ds:0xc2091e26,eax
  40d234:	fwait
  40d235:	cmp    bl,BYTE PTR [edx]
  40d237:	mov    esp,0xe48dbe0a
  40d23c:	ja     0x40d23e
  40d23e:	outs   dx,BYTE PTR ds:[esi]
  40d23f:	or     ebx,edi
  40d241:	xchg   BYTE PTR [edi],bl
  40d243:	leave  
  40d244:	inc    edi
  40d245:	fsub   DWORD PTR [ebx-0x2498cd72]
  40d24b:	sub    eax,0x568c8c17
  40d250:	nop
  40d251:	adc    ecx,ebx
  40d253:	jns    0x40d269
  40d255:	mov    edx,0x75e1019f
  40d25a:	test   dh,0x37
  40d25d:	cwde   
  40d25e:	push   edx
  40d25f:	aas    
  40d260:	cmp    DWORD PTR [ecx+0x1b],ecx
  40d263:	or     al,0xf
  40d265:	jnp    0x40d298
  40d267:	push   0x258106ca
  40d26c:	xor    ch,dh
  40d26e:	sbb    eax,0xf20357a6
  40d273:	push   0xae1139d8
  40d278:	mov    DWORD PTR [edi],edx
  40d27a:	fstp   DWORD PTR [ecx]
  40d27c:	or     dl,bh
  40d27e:	(bad)  
  40d27f:	and    al,0xd5
  40d281:	lock (bad) 
  40d283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d284:	out    dx,al
  40d285:	cmp    BYTE PTR [esp+ebx*2],0xbe
  40d289:	hlt    
  40d28a:	pop    edi
  40d28b:	test   esi,edi
  40d28d:	add    eax,0xa4c4699e
  40d292:	mov    al,ds:0x898c7cb
  40d297:	cmp    eax,esi
  40d299:	sti    
  40d29a:	jl     0x40d27d
  40d29c:	and    edi,DWORD PTR [esi+0x6a0ffeb8]
  40d2a2:	cmp    edi,DWORD PTR [edi]
  40d2a4:	jl     0x40d255
  40d2a6:	ins    BYTE PTR es:[edi],dx
  40d2a7:	mov    eax,?
  40d2a9:	ins    DWORD PTR es:[edi],dx
  40d2aa:	ror    BYTE PTR [edi-0x60f729f8],cl
  40d2b0:	pop    ds
  40d2b1:	mov    esp,0x62370423
  40d2b6:	cmp    eax,0x53b8a060
  40d2bb:	jno    0x40d25c
  40d2bd:	hlt    
  40d2be:	and    ch,BYTE PTR [esi+esi*2]
  40d2c1:	sub    al,0x80
  40d2c3:	stos   BYTE PTR es:[edi],al
  40d2c4:	in     al,dx
  40d2c5:	test   al,0x81
  40d2c7:	loop   0x40d261
  40d2c9:	mov    al,ds:0x2c31061e
  40d2ce:	gs jnp 0x40d2f0
  40d2d1:	jns    0x40d26a
  40d2d3:	and    dl,ah
  40d2d5:	sub    al,ah
  40d2d7:	out    dx,al
  40d2d8:	xor    eax,0xbffab820
  40d2dd:	dec    ebp
  40d2de:	jo     0x40d343
  40d2e0:	enter  0x5de4,0x2d
  40d2e4:	(bad)  
  40d2e5:	stc    
  40d2e6:	jge    0x40d277
  40d2e8:	jae    0x40d2cd
  40d2ea:	shl    DWORD PTR [ebx+0x1a],1
  40d2ed:	mov    esi,0xff3daaf4
  40d2f2:	cli    
  40d2f3:	test   al,0x72
  40d2f5:	dec    ecx
  40d2f6:	lds    ebp,FWORD PTR [ebx+0x6e]
  40d2f9:	add    DWORD PTR [ebx+0x4f],0xc1c924ee
  40d300:	ss out 0xc,al
  40d303:	fdivrp st(7),st
  40d305:	cs push eax
  40d307:	imul   eax,DWORD PTR [edi+0x69],0x5b
  40d30b:	in     al,dx
  40d30c:	rol    DWORD PTR [edi-0x673d7b66],0x64
  40d313:	jl     0x40d36c
  40d315:	xor    DWORD PTR [ebx-0x55],ebp
  40d318:	pop    es
  40d319:	cmp    BYTE PTR ds:0x89f43144,ch
  40d31f:	jae    0x40d2d3
  40d321:	and    DWORD PTR ds:0x9d99017d,esi
  40d327:	push   ss
  40d328:	fnstenv [ecx-0x1]
  40d32b:	push   ecx
  40d32c:	mov    dh,0x6d
  40d32e:	jns    0x40d314
  40d330:	mov    edi,0x76e74643
  40d335:	dec    ebp
  40d336:	xchg   ebx,eax
  40d337:	cli    
  40d338:	mov    esi,0x5f7e21bb
  40d33d:	dec    eax
  40d33e:	cmc    
  40d33f:	das    
  40d340:	(bad)  
  40d341:	xlat   BYTE PTR ds:[ebx]
  40d342:	jmp    0x9d94:0xa401582a
  40d349:	mov    al,0xcb
  40d34b:	pop    ds
  40d34c:	int    0xb1
  40d34e:	jl     0x40d354
  40d350:	sbb    DWORD PTR [ebx-0x44],esi
  40d353:	push   esi
  40d354:	bound  eax,QWORD PTR [esi-0x4e62a7c9]
  40d35a:	inc    ecx
  40d35b:	xor    BYTE PTR ds:0x17de78dc,bh
  40d361:	es mov edi,0xf04059fb
  40d367:	xlat   BYTE PTR ds:[ebx]
  40d368:	jo     0x40d3e0
  40d36a:	(bad)  
  40d36b:	ins    DWORD PTR es:[edi],dx
  40d36c:	jb     0x40d359
  40d36e:	mov    bl,0x35
  40d370:	mov    esp,0x78f913cd
  40d375:	or     BYTE PTR [edi-0x3459cb9b],dh
  40d37b:	cmp    edi,edx
  40d37d:	cs stos BYTE PTR es:[edi],al
  40d37f:	call   0x5a3e:0xfcb8759c
  40d386:	add    al,0x4d
  40d388:	sar    DWORD PTR [ecx],1
  40d38a:	xchg   esp,eax
  40d38b:	sub    BYTE PTR [edi+0x633f6dac],ch
  40d391:	into   
  40d392:	sub    al,0x7e
  40d394:	test   BYTE PTR [edx],dl
  40d396:	test   al,0x1
  40d398:	push   ebp
  40d399:	adc    DWORD PTR [edi+ebp*1],esi
  40d39c:	sub    edi,eax
  40d39e:	jo     0x40d341
  40d3a0:	rcl    BYTE PTR [ebx+0x35],0xaf
  40d3a4:	push   ds
  40d3a5:	pop    eax
  40d3a6:	adc    eax,0xabb6ac07
  40d3ab:	int3   
  40d3ac:	cmc    
  40d3ad:	outs   dx,DWORD PTR ds:[esi]
  40d3ae:	sbb    eax,0x445595dd
  40d3b3:	fistp  QWORD PTR [ebx-0x19]
  40d3b6:	shl    DWORD PTR [ebp-0x1aeef57c],1
  40d3bc:	sbb    dh,0xb2
  40d3bf:	ret    0xe289
  40d3c2:	lock dec esp
  40d3c4:	neg    ebp
  40d3c6:	test   DWORD PTR [eax+ebp*2-0x429a8665],edi
  40d3cd:	push   ds
  40d3ce:	mov    dl,0x65
  40d3d0:	mov    edx,DWORD PTR [edx]
  40d3d2:	and    eax,0xf65cb47
  40d3d7:	pop    edi
  40d3d8:	pop    ebp
  40d3d9:	adc    al,0x8d
  40d3db:	and    cl,BYTE PTR [edx+ecx*8-0x3c8319a1]
  40d3e2:	out    dx,al
  40d3e3:	add    al,0xbf
  40d3e5:	dec    eax
  40d3e6:	and    al,0xb5
  40d3e8:	push   es
  40d3e9:	je     0x40d37f
  40d3eb:	cmc    
  40d3ec:	daa    
  40d3ed:	xor    DWORD PTR [ebp+0x64],esi
  40d3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3f1:	dec    esi
  40d3f2:	aam    0x17
  40d3f4:	ins    BYTE PTR es:[edi],dx
  40d3f5:	mov    ds:0x9aa3d067,al
  40d3fa:	mov    cl,0x3
  40d3fc:	mov    cl,BYTE PTR [ebp+0x2e]
  40d3ff:	and    DWORD PTR [esi+0x19],ebp
  40d402:	sub    eax,0x5fb38f60
  40d407:	pop    es
  40d408:	out    dx,eax
  40d409:	test   eax,0xd33ee303
  40d40e:	or     ebx,ebp
  40d410:	push   esi
  40d411:	adc    al,0xe9
  40d413:	pushf  
  40d414:	loopne 0x40d468
  40d416:	and    dl,bl
  40d418:	push   0xffffff95
  40d41a:	xchg   ebx,eax
  40d41b:	fs sahf 
  40d41d:	xor    al,0x8b
  40d41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d420:	nop
  40d421:	out    0x4f,eax
  40d423:	test   DWORD PTR [edi+ebx*1+0x68af20b0],esp
  40d42a:	mov    ah,0x5f
  40d42c:	dec    esp
  40d42d:	je     0x40d48d
  40d42f:	sar    BYTE PTR ds:0x67af56eb,1
  40d435:	rcr    bh,1
  40d437:	daa    
  40d438:	mov    al,0xb8
  40d43a:	jnp    0x40d3d1
  40d43c:	pop    edx
  40d43d:	fsub   QWORD PTR [edi]
  40d43f:	and    DWORD PTR [ebp-0xed5e143],0xf8a77ad7
  40d449:	(bad)  
  40d44a:	ror    BYTE PTR [esp+ebp*4+0x5f],1
  40d44e:	ret    0x930f
  40d451:	mov    edi,ebx
  40d453:	addr16 push ebx
  40d455:	push   eax
  40d456:	lahf   
  40d457:	popf   
  40d458:	in     eax,dx
  40d459:	mov    al,ds:0x9199d49f
  40d45e:	adc    ch,BYTE PTR [edx]
  40d460:	jmp    0xe14f:0x43fa1004
  40d467:	cld    
  40d468:	call   0xc143c1d6
  40d46d:	cdq    
  40d46e:	test   BYTE PTR [ebx+esi*8-0x291b9d56],0xbb
  40d476:	imul   ebp,DWORD PTR [edx+edi*4-0x55],0xffffff8f
  40d47b:	inc    ecx
  40d47c:	out    dx,al
  40d47d:	into   
  40d47e:	xchg   DWORD PTR [esi+0x1eaa7c36],ecx
  40d484:	mov    dl,0x27
  40d486:	jbe    0x40d4b1
  40d488:	cmc    
  40d489:	adc    dh,BYTE PTR [edi-0x2072b795]
  40d48f:	cld    
  40d490:	mov    ebx,0x50f3b83
  40d495:	mov    bh,0x17
  40d497:	pushf  
  40d498:	rcl    DWORD PTR [edi],0xf3
  40d49b:	push   ebp
  40d49c:	je     0x40d421
  40d49e:	mov    cs,ebx
  40d4a0:	xlat   BYTE PTR ds:[ebx]
  40d4a1:	jle    0x40d4f8
  40d4a3:	sub    ah,BYTE PTR ds:0x3ac59487
  40d4a9:	cmc    
  40d4aa:	inc    esi
  40d4ab:	jecxz  0x40d433
  40d4ad:	outs   dx,BYTE PTR ds:[esi]
  40d4ae:	stos   DWORD PTR es:[edi],eax
  40d4af:	sbb    eax,0xe5ad226c
  40d4b4:	sbb    DWORD PTR ds:0x510cfa31,eax
  40d4ba:	push   esi
  40d4bb:	aas    
  40d4bc:	mov    edx,0xe8b08b91
  40d4c1:	and    al,0xfb
  40d4c3:	add    esp,edi
  40d4c5:	fstp   QWORD PTR [esi+0x5d]
  40d4c8:	xchg   ecx,eax
  40d4c9:	mov    ds:0x5d4e7fb8,eax
  40d4cf:	push   ebp
  40d4d0:	aas    
  40d4d1:	push   esi
  40d4d2:	xor    esp,DWORD PTR [esp+edi*4]
  40d4d5:	ins    BYTE PTR es:[edi],dx
  40d4d6:	cmp    bl,0x89
  40d4d9:	mov    eax,ds:0xc2035270
  40d4de:	test   eax,0x4b55b2ae
  40d4e3:	aam    0x40
  40d4e5:	xchg   ebx,eax
  40d4e6:	call   0xcbf63084
  40d4eb:	lods   eax,DWORD PTR ds:[esi]
  40d4ec:	das    
  40d4ed:	stos   DWORD PTR es:[edi],eax
  40d4ee:	retf   
  40d4ef:	push   edx
  40d4f0:	lods   eax,DWORD PTR ds:[esi]
  40d4f1:	cmp    dh,BYTE PTR [edi+0x13]
  40d4f4:	stc    
  40d4f5:	push   ebx
  40d4f6:	xlat   BYTE PTR ds:[ebx]
  40d4f7:	aas    
  40d4f8:	stos   BYTE PTR es:[edi],al
  40d4f9:	or     ebx,eax
  40d4fb:	mov    ds:0x644b60a4,eax
  40d500:	mov    eax,ds:0x8a74dcde
  40d505:	mov    ds:0x6900dc59,al
  40d50a:	in     eax,0x87
  40d50c:	pop    ebp
  40d50d:	shr    esi,cl
  40d50f:	jb     0x40d56f
  40d511:	fs loope 0x40d56d
  40d514:	or     BYTE PTR [ebx+0x6c26c47d],ah
  40d51a:	push   ds
  40d51b:	sahf   
  40d51c:	call   esi
  40d51e:	inc    edx
  40d51f:	cdq    
  40d520:	daa    
  40d521:	adc    al,0x38
  40d523:	add    DWORD PTR [ecx-0x45],ebx
  40d526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d527:	adc    eax,0x25db335c
  40d52c:	dec    esp
  40d52d:	or     al,0xe
  40d52f:	adc    BYTE PTR [edi],ah
  40d531:	retf   0x2bf8
  40d534:	test   BYTE PTR [ecx-0x68e328d5],ah
  40d53a:	mov    ds:0x698a6942,al
  40d53f:	mov    ch,0xbc
  40d541:	mov    ebx,0xfe23b5c4
  40d546:	addr16 push ebp
  40d548:	fmul   QWORD PTR [ebx-0x71]
  40d54b:	mov    edx,0x352ee4f7
  40d550:	fwait
  40d551:	test   BYTE PTR [eax],cl
  40d553:	ror    DWORD PTR [edx-0x2a2faecb],0xf0
  40d55a:	jp     0x40d540
  40d55c:	in     eax,dx
  40d55d:	pusha  
  40d55e:	xchg   ecx,eax
  40d55f:	dec    ecx
  40d560:	sti    
  40d561:	xchg   edi,eax
  40d562:	ins    BYTE PTR es:[edi],dx
  40d563:	sbb    al,bh
  40d565:	mov    edx,0x636ee53e
  40d56a:	pop    edi
  40d56b:	push   edi
  40d56c:	xchg   esi,eax
  40d56d:	fwait
  40d56e:	push   ecx
  40d56f:	in     eax,dx
  40d570:	push   es
  40d571:	pop    es
  40d572:	xlat   BYTE PTR ds:[ebx]
  40d573:	loop   0x40d56a
  40d575:	stos   DWORD PTR es:[edi],eax
  40d576:	fadd   st(6),st
  40d578:	xchg   ebp,eax
  40d579:	jle    0x40d578
  40d57b:	lock shr BYTE PTR [eax+0x2b6f34f6],0xdc
  40d583:	xchg   esp,eax
  40d584:	dec    ebx
  40d585:	daa    
  40d586:	inc    edi
  40d587:	push   ss
  40d588:	push   ss
  40d589:	and    eax,DWORD PTR [eax]
  40d58b:	ins    DWORD PTR es:[edi],dx
  40d58c:	icebp  
  40d58d:	pop    esi
  40d58e:	fadd   QWORD PTR [eax+0x6e]
  40d591:	jnp    0x40d5f8
  40d593:	cmp    eax,0xd9b62e65
  40d598:	mov    dh,0x26
  40d59a:	mov    ah,0x3c
  40d59c:	xchg   ecx,eax
  40d59d:	lods   eax,DWORD PTR ds:[esi]
  40d59e:	jo     0x40d5c5
  40d5a0:	scas   eax,DWORD PTR es:[edi]
  40d5a1:	mov    eax,ds:0x8af5ebc9
  40d5a6:	(bad)  
  40d5a7:	pushf  
  40d5a8:	push   esi
  40d5a9:	call   0xcd907d40
  40d5ae:	mov    ebx,DWORD PTR [edx-0xe]
  40d5b1:	mov    ebp,0xc68a2e0a
  40d5b6:	cmp    ch,BYTE PTR [edx]
  40d5b8:	enter  0xcffd,0x2d
  40d5bc:	pop    ebx
  40d5bd:	adc    DWORD PTR ds:0xac9c3391,edx
  40d5c3:	sub    eax,0xe9ac8762
  40d5c8:	mov    ds:0x3fb4ebcd,eax
  40d5cd:	sahf   
  40d5ce:	or     dh,0x33
  40d5d1:	xchg   ebx,eax
  40d5d2:	or     bl,0x70
  40d5d5:	inc    ebx
  40d5d6:	pop    edi
  40d5d7:	nop
  40d5d8:	cmp    dh,ah
  40d5da:	and    DWORD PTR [eax+0x71976fe9],eax
  40d5e0:	rcr    DWORD PTR [edi+0x67a7b058],cl
  40d5e6:	jb     0x40d657
  40d5e8:	or     edi,DWORD PTR [edx]
  40d5ea:	mov    cl,0x50
  40d5ec:	jg     0x40d595
  40d5ee:	sub    eax,0x82bba32f
  40d5f3:	adc    BYTE PTR ds:0xa7934ce,0xd4
  40d5fa:	lds    edi,FWORD PTR [ebp-0x46]
  40d5fd:	jne    0x40d613
  40d5ff:	icebp  
  40d600:	imul   ebx,ebp,0x2d
  40d603:	and    eax,DWORD PTR [ebx+0xc]
  40d606:	mov    bl,0xe2
  40d608:	inc    esi
  40d609:	xor    esp,DWORD PTR [edx+esi*2+0x3237b1fc]
  40d610:	out    0x3f,al
  40d612:	pop    ebp
  40d613:	aam    0x6a
  40d615:	push   esi
  40d616:	inc    eax
  40d617:	mov    dl,0xcb
  40d619:	cmp    DWORD PTR [ecx+ecx*2],ebp
  40d61c:	dec    ecx
  40d61d:	or     BYTE PTR [ebp-0x7b],cl
  40d620:	add    esp,eax
  40d622:	xlat   BYTE PTR ds:[ebx]
  40d623:	jae    0x40d5e5
  40d625:	pop    ebp
  40d626:	(bad)  
  40d627:	stc    
  40d628:	jl     0x40d5cc
  40d62a:	inc    edi
  40d62b:	pop    ebp
  40d62c:	jae    0x40d5e3
  40d62e:	sbb    al,BYTE PTR fs:[esi]
  40d631:	pop    eax
  40d632:	(bad)  
  40d633:	in     eax,0x53
  40d635:	jmp    0x816eb991
  40d63a:	jge    0x40d620
  40d63c:	and    cl,BYTE PTR [ebp+0xa7e00d8]
  40d642:	aad    0x8a
  40d644:	dec    eax
  40d645:	pusha  
  40d646:	inc    esp
  40d647:	jb     0x40d6a2
  40d649:	xor    al,0x82
  40d64b:	push   ebx
  40d64c:	xor    DWORD PTR [ebx-0x60e9b781],ebp
  40d652:	mov    ds:0xc8f360f3,al
  40d657:	pop    es
  40d658:	mov    edi,0x227a28f2
  40d65d:	aam    0xaa
  40d65f:	std    
  40d660:	or     DWORD PTR [esp-0x41d9bdb7],esp
  40d667:	das    
  40d668:	fsubrp st(5),st
  40d66a:	pop    ecx
  40d66b:	mov    edi,0x4a4c3124
  40d670:	push   ebp
  40d671:	xor    BYTE PTR [ecx-0x75feeaaf],cl
  40d677:	mov    dh,bl
  40d679:	sbb    cl,BYTE PTR [ebx]
  40d67b:	xchg   esp,eax
  40d67c:	std    
  40d67d:	mov    ecx,0xaf78ccb1
  40d682:	out    0x13,eax
  40d684:	and    dh,cl
  40d686:	out    0x98,al
  40d688:	hlt    
  40d689:	imul   ecx,DWORD PTR ds:0x6a4356ec,0xffffffee
  40d690:	pop    edi
  40d691:	in     al,dx
  40d692:	cmp    edx,esi
  40d694:	in     al,0x83
  40d696:	xor    dl,cl
  40d698:	test   ebx,ecx
  40d69a:	adc    DWORD PTR [edi+0x1a],ebp
  40d69d:	xor    edx,eax
  40d69f:	mov    eax,ds:0x94cb01e7
  40d6a4:	icebp  
  40d6a5:	mov    dl,0xc8
  40d6a7:	int3   
  40d6a8:	fbld   TBYTE PTR [ebp-0x21]
  40d6ab:	mov    ch,0x25
  40d6ad:	shr    dh,cl
  40d6af:	in     al,0x6c
  40d6b1:	das    
  40d6b2:	bound  ebx,QWORD PTR [ebp+0x1468a518]
  40d6b8:	jle    0x40d63a
  40d6ba:	das    
  40d6bb:	ja     0x40d67d
  40d6bd:	jae    0x40d691
  40d6bf:	iret   
  40d6c0:	fnsave [edi+0x7fe162ea]
  40d6c6:	aas    
  40d6c7:	pop    esp
  40d6c8:	mov    dh,0x80
  40d6ca:	add    al,0x3f
  40d6cc:	dec    ebp
  40d6cd:	fst    QWORD PTR [edx-0x52]
  40d6d0:	mov    bh,0x86
  40d6d2:	ficomp WORD PTR [edi+0x52]
  40d6d5:	and    bh,BYTE PTR [edx+0x67]
  40d6d8:	cmp    BYTE PTR [esi],ah
  40d6da:	cdq    
  40d6db:	outs   dx,BYTE PTR ds:[esi]
  40d6dc:	mov    edi,0x6a2a905d
  40d6e1:	ins    BYTE PTR es:[edi],dx
  40d6e2:	inc    edx
  40d6e3:	ror    BYTE PTR [esi+edi*2],1
  40d6e6:	mov    bl,0x97
  40d6e8:	jne    0x40d742
  40d6ea:	xchg   DWORD PTR [ebx+edx*4-0x22],esi
  40d6ee:	or     esp,ebx
  40d6f0:	dec    edi
  40d6f1:	pop    edi
  40d6f2:	enter  0xac77,0x29
  40d6f6:	fild   DWORD PTR [ebx]
  40d6f8:	push   ebp
  40d6f9:	jae    0x40d754
  40d6fb:	loope  0x40d6a2
  40d6fd:	xchg   BYTE PTR [ebx+0x6d],ah
  40d700:	mov    ds:0xf4bcc23,al
  40d705:	mov    edi,0x91792f60
  40d70a:	shl    BYTE PTR [eax+0x556a4b8a],1
  40d710:	outs   dx,DWORD PTR ds:[esi]
  40d711:	xchg   BYTE PTR [eax],bl
  40d713:	mov    edi,0x51bb6beb
  40d718:	mov    ch,0xe0
  40d71a:	mov    eax,0xaf2cd10e
  40d71f:	fcmovnu st,st(0)
  40d721:	stos   BYTE PTR es:[edi],al
  40d722:	scas   eax,DWORD PTR es:[edi]
  40d723:	xor    eax,0x10354ca1
  40d728:	ins    BYTE PTR es:[edi],dx
  40d729:	ins    BYTE PTR es:[edi],dx
  40d72a:	in     eax,0x90
  40d72c:	pop    eax
  40d72d:	push   esp
  40d72e:	in     al,0x85
  40d730:	gs mov bh,0x83
  40d733:	imul   ecx,DWORD PTR [eax+0x4e6bcbbc],0x2155dbf4
  40d73d:	xor    eax,0xe27ef9f9
  40d742:	push   edx
  40d743:	xchg   ebx,esi
  40d745:	cmp    ebp,DWORD PTR [esi-0x7cc71e8f]
  40d74b:	pop    edx
  40d74c:	add    eax,0x5b0cefe6
  40d751:	jo     0x40d793
  40d753:	(bad)  
  40d754:	xchg   edx,eax
  40d755:	adc    DWORD PTR [ebp+edx*8-0x4ad43e04],esi
  40d75c:	mov    ebx,0x17c9d79c
  40d761:	add    al,0xcb
  40d763:	add    BYTE PTR [edi-0x7],bl
  40d766:	aaa    
  40d767:	and    edx,esi
  40d769:	ret    
  40d76a:	add    DWORD PTR [esi],esi
  40d76c:	mov    al,ds:0x70299209
  40d771:	sub    dh,BYTE PTR [edi+0x4b]
  40d774:	or     al,0xe1
  40d776:	aam    0xeb
  40d778:	mov    ?,eax
  40d77a:	test   DWORD PTR [edx],esi
  40d77c:	(bad)  
  40d77f:	out    0x5b,eax
  40d781:	jno    0x40d723
  40d783:	lds    esi,FWORD PTR [edx-0x60e9e7ca]
  40d789:	ret    0xc745
  40d78c:	jg     0x40d731
  40d78e:	imul   ebp,ebp,0x1b
  40d791:	fnstcw WORD PTR [ecx-0x289aeb62]
  40d797:	mov    ah,0x1d
  40d799:	xor    eax,0xa82a4356
  40d79e:	js     0x40d79f
  40d7a0:	int3   
  40d7a1:	ret    
  40d7a2:	bound  edx,QWORD PTR [edx-0x53359bfe]
  40d7a8:	sub    BYTE PTR [edx+0x6dfa6688],ah
  40d7ae:	fstp   DWORD PTR [edi+0x42]
  40d7b1:	xchg   esp,eax
  40d7b2:	sub    DWORD PTR [esi+0x10224d03],esi
  40d7b8:	xor    BYTE PTR [esi-0x43],ch
  40d7bb:	push   eax
  40d7bc:	mov    cs,WORD PTR [ebx]
  40d7be:	cmp    al,cl
  40d7c0:	mov    eax,ds:0x23ffb338
  40d7c5:	fbstp  TBYTE PTR [ebx+0x12]
  40d7c8:	nop
  40d7c9:	ja     0x40d836
  40d7cb:	std    
  40d7cc:	scas   eax,DWORD PTR es:[edi]
  40d7cd:	gs jg  0x40d771
  40d7d0:	ins    BYTE PTR es:[edi],dx
  40d7d1:	jae    0x40d778
  40d7d3:	and    BYTE PTR [ebx-0x65],ah
  40d7d6:	xor    BYTE PTR [ebx-0x54],ah
  40d7d9:	xor    DWORD PTR [esi-0x7d],ecx
  40d7dc:	mov    dl,0xad
  40d7de:	aas    
  40d7df:	push   cs
  40d7e0:	scas   al,BYTE PTR es:[edi]
  40d7e1:	setge  BYTE PTR [ebp+0x15]
  40d7e5:	dec    esi
  40d7e6:	(bad)  
  40d7e7:	cmp    DWORD PTR [ecx],0x141018d1
  40d7ed:	(bad)  
  40d7ee:	dec    ebx
  40d7ef:	mov    ds:0x6ac7fdd4,eax
  40d7f4:	add    eax,0x775eaa12
  40d7f9:	pusha  
  40d7fa:	out    0x8d,eax
  40d7fc:	add    edi,esp
  40d7fe:	in     al,0xad
  40d800:	repz pop es
  40d802:	sub    al,0x8d
  40d804:	jnp    0x40d834
  40d806:	loop   0x40d829
  40d808:	mov    bl,0x86
  40d80a:	and    eax,DWORD PTR [ebx+eax*1]
  40d80d:	xchg   esi,eax
  40d80e:	(bad)  
  40d810:	cmp    DWORD PTR [ecx-0x5f0336ba],edx
  40d816:	xchg   edi,eax
  40d817:	cmovbe edx,DWORD PTR [eax+0x2b]
  40d81b:	jg     0x40d88e
  40d81d:	mov    al,0x33
  40d81f:	push   ebp
  40d820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d821:	add    al,0x28
  40d823:	stos   BYTE PTR es:[edi],al
  40d824:	mov    ?,ecx
  40d826:	xchg   ebx,eax
  40d827:	sub    edi,DWORD PTR [ebp+0x1e]
  40d82a:	cmp    eax,0x5d70644b
  40d82f:	mov    BYTE PTR [ebx+0x40e617b0],ch
  40d835:	push   ecx
  40d836:	test   eax,0x47858a39
  40d83b:	and    edi,esp
  40d83d:	mov    esp,0x3c6fcdcc
  40d842:	jl     0x40d88e
  40d844:	adc    esi,DWORD PTR [ebp+0x37a29d1f]
  40d84a:	push   edi
  40d84b:	retf   0x2516
  40d84e:	out    dx,al
  40d84f:	push   edx
  40d850:	pop    ebp
  40d851:	or     bl,BYTE PTR [ecx]
  40d853:	(bad)  
  40d854:	rcr    DWORD PTR [edi-0x257f924b],1
  40d85a:	rcl    ecx,1
  40d85c:	fs pop eax
  40d85e:	or     BYTE PTR [ecx-0x7279ce2e],dh
  40d864:	xchg   ebx,eax
  40d865:	inc    esi
  40d866:	mov    ebp,0xd7df7367
  40d86b:	lahf   
  40d86c:	push   ebx
  40d86d:	jl     0x40d821
  40d86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d870:	mov    al,0x80
  40d872:	push   es
  40d873:	xor    cl,al
  40d875:	adc    al,0xc8
  40d877:	mov    DWORD PTR [edx],ebp
  40d879:	push   eax
  40d87a:	jmp    0x40d8a5
  40d87c:	mov    esp,0x75ca2a94
  40d881:	icebp  
  40d882:	icebp  
  40d883:	bound  esi,QWORD PTR [ebx+0x37]
  40d886:	mov    eax,DWORD PTR [ebx+esi*8]
  40d889:	inc    edx
  40d88a:	add    al,0x97
  40d88c:	int3   
  40d88d:	popf   
  40d88e:	in     eax,0x6a
  40d890:	dec    eax
  40d891:	call   0xb431d3f8
  40d896:	outs   dx,DWORD PTR ds:[esi]
  40d897:	sub    edx,ebp
  40d899:	pop    ds
  40d89a:	call   ecx
  40d89c:	test   al,0x7b
  40d89e:	jb     0x40d841
  40d8a0:	jg     0x40d8fe
  40d8a2:	jb     0x40d91f
  40d8a4:	mov    dl,0xce
  40d8a6:	sbb    al,0xd0
  40d8a8:	pop    ds
  40d8a9:	(bad)  
  40d8aa:	aam    0x94
  40d8ac:	mov    ch,0xc0
  40d8ae:	lea    esp,[edx-0x3a]
  40d8b1:	push   edx
  40d8b2:	rol    DWORD PTR [edx+0x1a735a00],cl
  40d8b8:	lahf   
  40d8b9:	sbb    al,0x60
  40d8bb:	fnsave [edx]
  40d8bd:	or     eax,0x8ae8d703
  40d8c2:	ret    0x9541
  40d8c5:	out    0x86,eax
  40d8c7:	jbe    0x40d8b6
  40d8c9:	and    al,0xae
  40d8cb:	add    eax,0x51ca0c27
  40d8d0:	shr    DWORD PTR [ecx+0x3b],cl
  40d8d3:	pop    ecx
  40d8d4:	dec    esp
  40d8d5:	mov    ds:0x815c9a2d,al
  40d8da:	jle    0x40d8a4
  40d8dc:	dec    eax
  40d8dd:	lahf   
  40d8de:	scas   eax,DWORD PTR es:[edi]
  40d8df:	push   esp
  40d8e0:	mov    esp,0xb017394c
  40d8e5:	jmp    0x2366e0ad
  40d8ea:	fdivp  st(5),st
  40d8ec:	jo     0x40d876
  40d8ee:	pop    esi
  40d8ef:	arpl   WORD PTR [ecx*1+0x2c95f99a],ax
  40d8f6:	pop    ds
  40d8f7:	call   0x8a92:0x7b35e1be
  40d8fe:	add    dl,BYTE PTR [edx-0x73b42710]
  40d904:	xchg   ebx,eax
  40d905:	in     eax,0x5f
  40d907:	push   esp
  40d908:	mov    esi,0x3145c065
  40d90d:	xchg   ebp,eax
  40d90e:	sbb    esi,DWORD PTR [edx]
  40d910:	inc    edi
  40d911:	push   edi
  40d912:	loop   0x40d961
  40d914:	inc    esi
  40d915:	mov    esi,0xd64802ef
  40d91a:	sub    eax,0x1d0f4a89
  40d91f:	xor    al,0x8b
  40d921:	dec    esi
  40d922:	inc    ebx
  40d923:	arpl   ax,cx
  40d925:	jp     0x40d98b
  40d927:	inc    edx
  40d928:	xor    dl,cl
  40d92a:	mov    DWORD PTR [ebp+0x2fd13005],edi
  40d930:	xchg   esp,eax
  40d931:	mov    al,0x3f
  40d933:	xor    eax,0x14d7ce8a
  40d938:	js     0x40d946
  40d93a:	sbb    DWORD PTR [ecx],0x2c
  40d93d:	sar    BYTE PTR [ebp+0x36],cl
  40d940:	fnsave [edx]
  40d942:	idiv   BYTE PTR [ecx]
  40d944:	and    al,0x9b
  40d946:	jbe    0x40d900
  40d948:	dec    edi
  40d949:	mul    ecx
  40d94b:	js     0x40d960
  40d94d:	xor    al,0x90
  40d94f:	sub    eax,0xdcf12033
  40d954:	pop    esp
  40d955:	add    BYTE PTR [edi+0x34],bl
  40d958:	dec    ebx
  40d959:	mov    esi,0x2e9d3a0c
  40d95e:	dec    esp
  40d95f:	sub    DWORD PTR [edx+0x52],ecx
  40d962:	sbb    cl,BYTE PTR [edx-0x19]
  40d965:	cs mov dl,0xed
  40d968:	aam    0x6c
  40d96a:	pop    ecx
  40d96b:	push   esp
  40d96c:	mov    al,ds:0x4642e858
  40d971:	mov    dl,0x53
  40d973:	fild   QWORD PTR [eax-0x4394727d]
  40d979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d97a:	cmp    al,0x37
  40d97c:	sub    esi,DWORD PTR [eax+0x7c564860]
  40d982:	scas   al,BYTE PTR es:[edi]
  40d983:	iret   
  40d984:	add    DWORD PTR [esi+0x2a],eax
  40d987:	int3   
  40d988:	sbb    ebp,DWORD PTR [ecx+ecx*8+0x63]
  40d98c:	retf   
  40d98d:	sbb    al,0x1c
  40d98f:	inc    ecx
  40d990:	(bad)  
  40d991:	imul   edx,DWORD PTR cs:[ebx-0x103f1559],0xffffff89
  40d999:	mov    cl,0xb3
  40d99b:	xchg   esi,eax
  40d99c:	cmc    
  40d99d:	inc    ebp
  40d99e:	xor    BYTE PTR [ebx+0x9],cl
  40d9a1:	pop    ebx
  40d9a2:	inc    ebx
  40d9a3:	mov    dh,0xfa
  40d9a5:	or     eax,0x9a49d56e
  40d9aa:	retf   0xc623
  40d9ad:	xor    al,BYTE PTR [edi-0x71b59712]
  40d9b3:	lods   eax,DWORD PTR ds:[esi]
  40d9b4:	rcl    BYTE PTR [ebp-0x21],1
  40d9b7:	out    0xbc,eax
  40d9b9:	in     al,dx
  40d9ba:	rcl    BYTE PTR [edi+0x7c],0x4a
  40d9be:	into   
  40d9bf:	inc    edi
  40d9c0:	mov    esi,esp
  40d9c2:	inc    edi
  40d9c3:	cli    
  40d9c4:	fnstsw WORD PTR [edi]
  40d9c6:	pop    ebp
  40d9c7:	cli    
  40d9c8:	adc    BYTE PTR [ecx+ebp*4],bh
  40d9cb:	daa    
  40d9cc:	and    al,0xd8
  40d9ce:	fbstp  TBYTE PTR [esi+0x322614ea]
  40d9d5:	mov    edx,0xcf2ae94c
  40d9da:	jl     0x40d9cc
  40d9dc:	mul    DWORD PTR [esi+eax*2-0x37]
  40d9e0:	jae    0x40da3b
  40d9e2:	ds adc al,0x58
  40d9e6:	pop    eax
  40d9e7:	stos   DWORD PTR es:[edi],eax
  40d9e8:	cmp    cl,BYTE PTR [ebx+ebx*8+0x3d]
  40d9ec:	mov    bh,0xf9
  40d9ee:	jmp    0x40da4b
  40d9f0:	mov    bl,0x81
  40d9f2:	add    ah,BYTE PTR [ebp-0x76a6a3b9]
  40d9f8:	stc    
  40d9f9:	or     eax,0x95f41297
  40d9fe:	sub    eax,0xfa4d35ec
  40da03:	lock (bad) 
  40da05:	sahf   
  40da06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da07:	sbb    ecx,edi
  40da09:	jecxz  0x40da81
  40da0b:	mov    dl,0xae
  40da0d:	jbe    0x40d9a8
  40da0f:	mov    edi,0x38d51caa
  40da14:	jg     0x40da45
  40da16:	fnstsw WORD PTR [edi+esi*1]
  40da19:	add    eax,0xa1d548c5
  40da1e:	imul   esp
  40da20:	pop    esi
  40da21:	inc    ebp
  40da22:	scas   eax,DWORD PTR es:[edi]
  40da23:	mov    esi,0x9f1645fd
  40da28:	leave  
  40da29:	aad    0xf2
  40da2b:	cmovs  ecx,DWORD PTR [eax+0xe208675]
  40da32:	lea    ecx,[esi+0x2d]
  40da35:	es xor eax,0x8a8bc85c
  40da3b:	into   
  40da3c:	adc    eax,DWORD PTR [esi+0x6d5fecd6]
  40da42:	ret    
  40da43:	inc    ecx
  40da44:	mov    ah,dh
  40da46:	cmp    DWORD PTR [eax+0x39f6c20b],ebx
  40da4c:	test   al,0x7d
  40da4e:	scas   al,BYTE PTR es:[edi]
  40da4f:	out    dx,eax
  40da50:	sahf   
  40da51:	daa    
  40da52:	dec    ebx
  40da53:	imul   esi,DWORD PTR [esi+0x63b548d9],0x22
  40da5a:	xor    edx,ecx
  40da5c:	lods   eax,DWORD PTR ds:[esi]
  40da5d:	ja     0x40dab6
  40da5f:	loopne 0x40d9f9
  40da61:	ret    
  40da62:	pop    ecx
  40da63:	add    eax,0xcf860114
  40da68:	les    ecx,FWORD PTR [ecx-0x4b]
  40da6b:	sbb    cl,BYTE PTR [ebx+0x10]
  40da6e:	not    ch
  40da70:	stos   BYTE PTR es:[edi],al
  40da71:	sar    ch,0xda
  40da74:	pop    edx
  40da75:	or     bh,al
  40da77:	loope  0x40da6b
  40da79:	aas    
  40da7a:	and    DWORD PTR [edi+edi*2-0x43],0xffffff90
  40da7f:	iret   
  40da80:	iret   
  40da81:	pop    edx
  40da82:	hlt    
  40da83:	mov    ds:0xf133d2a6,al
  40da88:	push   ecx
  40da89:	xor    dl,BYTE PTR [eax]
  40da8b:	xchg   ebx,eax
  40da8c:	inc    ecx
  40da8d:	cwde   
  40da8e:	enter  0x47c3,0x6d
  40da92:	or     cl,dl
  40da94:	jg     0x40dad1
  40da96:	sub    al,ch
  40da98:	jp     0x40db0d
  40da9a:	mov    ebp,0xcac08250
  40da9f:	inc    ebp
  40daa0:	mov    dh,0x9e
  40daa2:	sbb    BYTE PTR [edi],dl
  40daa4:	cmp    eax,0x6f7ac6ea
  40daa9:	fstp   TBYTE PTR [edx+0x1bc18497]
  40daaf:	mov    cl,BYTE PTR [edi-0x16762cc5]
  40dab5:	popa   
  40dab6:	pop    es
  40dab7:	shr    DWORD PTR [esi],cl
  40dab9:	mov    eax,ds:0x9162e817
  40dabe:	or     al,0xac
  40dac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dac1:	mov    ah,0x68
  40dac3:	mov    ah,dl
  40dac5:	addr16 repnz fwait
  40dac8:	lods   eax,DWORD PTR ds:[esi]
  40dac9:	outs   dx,DWORD PTR ds:[esi]
  40daca:	or     esi,DWORD PTR [edx]
  40dacc:	add    DWORD PTR [eax],ebp
  40dace:	or     esp,eax
  40dad0:	js     0x40dadf
  40dad2:	and    al,0xfc
  40dad4:	mov    bh,0x43
  40dad6:	fwait
  40dad7:	sahf   
  40dad8:	outs   dx,BYTE PTR ds:[esi]
  40dad9:	push   ecx
  40dada:	push   esp
  40dadb:	loope  0x40dad0
  40dadd:	(bad)  
  40dadf:	or     eax,0x95689398
  40dae4:	and    dl,BYTE PTR [edi]
  40dae6:	aad    0xf7
  40dae8:	mov    ah,0xb0
  40daea:	push   ecx
  40daeb:	add    bh,ch
  40daed:	add    BYTE PTR [esi-0x18],al
  40daf0:	lods   al,BYTE PTR ds:[esi]
  40daf1:	or     ah,BYTE PTR [edi-0x4e]
  40daf4:	push   cs
  40daf5:	aaa    
  40daf6:	fild   DWORD PTR [ebx*2-0x2de63b52]
  40dafd:	mov    ch,BYTE PTR [ecx+edi*8]
  40db00:	xor    bh,BYTE PTR [ecx+ebp*4-0x1fd858e2]
  40db07:	data16 data16 adc BYTE PTR [ebp*8-0x7f09e4a2],0x52
  40db11:	cmp    DWORD PTR [edi-0x59718869],esi
  40db17:	mov    edi,0x34879ff2
  40db1c:	loope  0x40db06
  40db1e:	int    0xe
  40db20:	mov    cl,0xa4
  40db22:	leave  
  40db23:	mov    ds:0x6e355968,al
  40db28:	sbb    bl,ah
  40db2a:	dec    edx
  40db2b:	jbe    0x40dbab
  40db2d:	and    eax,0xbe1cc530
  40db32:	shr    DWORD PTR [esi+0x6b268bc8],0x6d
  40db39:	fnstenv [ecx-0x60]
  40db3c:	sbb    DWORD PTR [esi-0x45],esp
  40db3f:	mov    DWORD PTR [eax+0x1614823e],0x3844dfb
  40db49:	std    
  40db4a:	push   ebp
  40db4b:	jbe    0x40dbb9
  40db4d:	dec    esp
  40db4e:	sbb    eax,DWORD PTR [esi]
  40db50:	sub    cl,BYTE PTR [esi]
  40db52:	push   es
  40db53:	into   
  40db54:	sbb    edx,eax
  40db56:	lods   eax,DWORD PTR ds:[esi]
  40db57:	js     0x40dbae
  40db59:	sbb    eax,0x4ce722c6
  40db5e:	mov    ecx,0xe6f323a3
  40db63:	ja     0x40db84
  40db65:	mov    cs,WORD PTR [ebx+0x6fccff95]
  40db6b:	jmp    0x51beccc9
  40db70:	ret    0x4434
  40db73:	pusha  
  40db74:	inc    ebx
  40db75:	retf   0xad66
  40db78:	aam    0xf4
  40db7a:	fs push ebx
  40db7c:	and    ecx,0xa0cea617
  40db82:	stc    
  40db83:	mov    ecx,0xbe0207e8
  40db88:	jg     0x40db8a
  40db8a:	mov    cl,0x66
  40db8c:	xor    al,0x84
  40db8e:	outs   dx,DWORD PTR ds:[esi]
  40db8f:	scas   eax,DWORD PTR es:[edi]
  40db90:	outs   dx,BYTE PTR ds:[esi]
  40db91:	(bad)  
  40db92:	retf   
  40db93:	or     DWORD PTR gs:[ebx-0x23],edx
  40db97:	pop    edx
  40db98:	adc    bh,dl
  40db9a:	ins    BYTE PTR es:[edi],dx
  40db9b:	jb     0x40db2a
  40db9d:	loopne 0x40db55
  40db9f:	retf   
  40dba0:	aas    
  40dba1:	inc    edi
  40dba2:	inc    ecx
  40dba3:	xor    al,0x7b
  40dba5:	test   BYTE PTR [esi+0x7c],dh
  40dba8:	popf   
  40dba9:	dec    esp
  40dbaa:	cmp    cl,dh
  40dbac:	adc    eax,0xb84c291b
  40dbb1:	imul   eax,eax,0x530ac30d
  40dbb7:	jbe    0x40dc0b
  40dbb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbba:	ror    eax,cl
  40dbbc:	outs   dx,DWORD PTR ds:[esi]
  40dbbd:	ins    BYTE PTR es:[edi],dx
  40dbbe:	(bad)  
  40dbbf:	and    esi,DWORD PTR [edi+0x77]
  40dbc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbc3:	js     0x40dc39
  40dbc5:	xchg   edx,eax
  40dbc6:	imul   ecx,DWORD PTR [edx],0x8dfcbea9
  40dbcc:	mov    ecx,0xe732102f
  40dbd1:	jb     0x40dc4e
  40dbd3:	sbb    al,0x7a
  40dbd5:	xchg   esi,eax
  40dbd6:	(bad)  [esi+0x4a6c9a4c]
  40dbdc:	js     0x40db81
  40dbde:	add    BYTE PTR [edx-0x2696123d],dl
  40dbe4:	sub    BYTE PTR [edi-0x2b],cl
  40dbe7:	scas   eax,DWORD PTR es:[edi]
  40dbe8:	cmc    
  40dbe9:	and    DWORD PTR [ebx],0x89d8fd15
  40dbef:	mov    al,ds:0xef7c2156
  40dbf4:	fwait
  40dbf5:	and    BYTE PTR [edx],dh
  40dbf7:	test   DWORD PTR [eax+0x63],0x55f0e868
  40dbfe:	cld    
  40dbff:	out    0x2b,al
  40dc01:	mul    edi
  40dc03:	jmp    0x40dc59
  40dc05:	mov    DWORD PTR [eax],eax
  40dc07:	push   ebx
  40dc08:	push   cs
  40dc09:	ror    BYTE PTR [esi-0x70],cl
  40dc0c:	jmp    0xf4c:0x32813d0d
  40dc13:	and    BYTE PTR [edx+0x71],bh
  40dc16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc17:	xchg   edx,eax
  40dc18:	dec    esi
  40dc19:	jg     0x40dc25
  40dc1b:	pushf  
  40dc1c:	and    al,0x2a
  40dc1e:	mov    ecx,0xdd50d5ee
  40dc23:	jae    0x40dc29
  40dc25:	call   0xe31f:0xdf2c7cd7
  40dc2c:	std    
  40dc2d:	bound  esi,QWORD PTR [ecx]
  40dc2f:	xor    eax,DWORD PTR [edi+0x77e3915d]
  40dc35:	dec    eax
  40dc36:	fisttp DWORD PTR [ebx-0x5dcc3a3d]
  40dc3c:	jp     0x40dbef
  40dc3e:	icebp  
  40dc3f:	int3   
  40dc40:	and    eax,0x40962ac6
  40dc45:	cli    
  40dc46:	ja     0x40dc11
  40dc48:	das    
  40dc49:	jo     0x40dcba
  40dc4b:	add    al,0x62
  40dc4d:	sub    BYTE PTR [ebx+0x56d4ae46],bh
  40dc53:	mov    eax,0xfb25a0a2
  40dc58:	pop    ebx
  40dc59:	and    ecx,ebp
  40dc5b:	pop    eax
  40dc5c:	dec    edi
  40dc5d:	popa   
  40dc5e:	push   ebx
  40dc5f:	popf   
  40dc60:	or     eax,0x3280b82b
  40dc65:	lods   al,BYTE PTR ds:[esi]
  40dc66:	test   BYTE PTR [ebx],ch
  40dc68:	mov    ah,BYTE PTR [ecx]
  40dc6a:	retf   0x1de1
  40dc6d:	sub    eax,0x40675101
  40dc72:	aad    0xdb
  40dc74:	xor    ebp,ebx
  40dc76:	xchg   edx,eax
  40dc77:	repz xor ecx,DWORD PTR [edx+0x2e]
  40dc7b:	arpl   dx,ax
  40dc7d:	scas   eax,DWORD PTR es:[edi]
  40dc7e:	scas   eax,DWORD PTR es:[edi]
  40dc7f:	adc    eax,0x8eec72a5
  40dc84:	rcr    DWORD PTR [edx-0x4c],cl
  40dc87:	push   es
  40dc88:	or     eax,0xcea5a43d
  40dc8d:	jp     0x40dc75
  40dc8f:	pop    ebp
  40dc90:	mov    ecx,0x75832d04
  40dc95:	and    eax,0xf4e72cf
  40dc9a:	pusha  
  40dc9b:	push   ss
  40dc9c:	(bad)  
  40dc9d:	out    dx,al
  40dc9e:	dec    edi
  40dc9f:	mov    al,0x26
  40dca1:	mov    dl,0xaa
  40dca3:	outs   dx,DWORD PTR ds:[esi]
  40dca4:	int    0x59
  40dca6:	mov    eax,0xcbc6cb54
  40dcab:	xchg   DWORD PTR [eax+0x6e],ebp
  40dcae:	inc    eax
  40dcaf:	jg     0x40dca6
  40dcb1:	(bad)  
  40dcb2:	(bad)  
  40dcb3:	into   
  40dcb4:	inc    ecx
  40dcb5:	in     eax,dx
  40dcb6:	ror    DWORD PTR [ebp+0xe625598],cl
  40dcbc:	fidiv  DWORD PTR [edi-0x3b777f00]
  40dcc2:	cmc    
  40dcc3:	fst    QWORD PTR [ebx+0x6a]
  40dcc6:	push   ecx
  40dcc7:	jae    0x40dc77
  40dcc9:	ins    DWORD PTR es:[edi],dx
  40dcca:	adc    ch,cl
  40dccc:	mov    ebx,0x2c7d28fb
  40dcd1:	rcl    DWORD PTR [ebp+0x2d],0xb2
  40dcd5:	aam    0x31
  40dcd7:	dec    esp
  40dcd8:	sti    
  40dcd9:	or     BYTE PTR [edi-0xf],dl
  40dcdc:	pusha  
  40dcdd:	xchg   ebp,eax
  40dcde:	or     eax,0xca096c9b
  40dce3:	rol    DWORD PTR [edx+0x24014525],cl
  40dce9:	popf   
  40dcea:	xor    eax,0xeeb708f4
  40dcef:	cs retf 0x80ba
  40dcf3:	inc    ebx
  40dcf4:	test   eax,0x20c4d7a
  40dcf9:	lds    ebx,FWORD PTR [ecx-0x3ef074c9]
  40dcff:	pusha  
  40dd00:	(bad)  
  40dd01:	ds pusha 
  40dd03:	and    ebp,DWORD PTR [esi]
  40dd05:	ret    0x16d7
  40dd08:	jmp    0x5491a1c6
  40dd0d:	mov    edi,0xfefd4aef
  40dd12:	xchg   edi,eax
  40dd13:	sbb    BYTE PTR [esi+0x15a3d59c],0x55
  40dd1a:	test   eax,0x60186fd2
  40dd1f:	imul   ecx,DWORD PTR [ebx-0x2c3b1a6c],0x3f9ff5a2
  40dd29:	ret    0x29ef
  40dd2c:	(bad)  
  40dd2e:	in     al,dx
  40dd2f:	jl     0x40dda3
  40dd31:	retf   0x4bd6
  40dd34:	iret   
  40dd35:	inc    eax
  40dd36:	(bad)  
  40dd37:	and    BYTE PTR [ebp-0x22f10104],al
  40dd3d:	loopne 0x40dcd6
  40dd3f:	(bad)  
  40dd40:	(bad)  
  40dd41:	and    BYTE PTR [edi+0x2d],al
  40dd44:	icebp  
  40dd45:	sub    edi,DWORD PTR [ebx+0x27]
  40dd48:	push   ss
  40dd49:	repz mov cl,0xee
  40dd4c:	test   al,0x79
  40dd4e:	jns    0x40dd51
  40dd50:	test   eax,0x5672a5b8
  40dd55:	lea    esp,[eax-0x3dbc992d]
  40dd5b:	or     cl,BYTE PTR ds:0xae8e04d6
  40dd61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd62:	sbb    DWORD PTR [edi+0x74],0xe
  40dd66:	out    dx,eax
  40dd67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd69:	push   ds
  40dd6a:	fbstp  TBYTE PTR [edi-0x4e]
  40dd6d:	sub    esp,DWORD PTR [esi-0x192842d2]
  40dd73:	loop   0x40dd3b
  40dd75:	xchg   edi,eax
  40dd76:	jp     0x40dd28
  40dd78:	retf   
  40dd79:	rol    BYTE PTR [edi+ecx*2+0x65119306],1
  40dd80:	and    cl,BYTE PTR [ebx+edx*8]
  40dd83:	mov    esp,0x5c71bd2a
  40dd88:	sub    DWORD PTR [eax-0x51],ebp
  40dd8b:	jns    0x40dde2
  40dd8d:	pop    ecx
  40dd8e:	jl     0x40dd4a
  40dd90:	pinsrw mm6,WORD PTR [ecx-0x4e],0x74
  40dd95:	arpl   WORD PTR [ebx+0x61],sp
  40dd98:	and    cl,ch
  40dd9a:	pop    edi
  40dd9b:	xchg   DWORD PTR [eax-0x4065dbb4],edi
  40dda1:	adc    cl,BYTE PTR [esi-0x5829b624]
  40dda7:	sbb    esi,esp
  40dda9:	jmp    0x40dd50
  40ddab:	inc    ebx
  40ddac:	stos   BYTE PTR es:[edi],al
  40ddad:	push   ebx
  40ddae:	ja     0x40de13
  40ddb0:	popa   
  40ddb1:	and    eax,0xadefb201
  40ddb6:	mov    ecx,0x1b50bfc8
  40ddbb:	mov    bl,0xc5
  40ddbd:	jle    0x40de27
  40ddbf:	imul   ebx,DWORD PTR [ebx],0xd0c79221
  40ddc5:	hlt    
  40ddc6:	sbb    DWORD PTR [edi],edx
  40ddc8:	xchg   ebp,eax
  40ddc9:	inc    ebp
  40ddca:	xor    ebp,edx
  40ddcc:	push   ds
  40ddcd:	and    ebx,DWORD PTR [edi-0x21]
  40ddd0:	outs   dx,BYTE PTR ds:[esi]
  40ddd1:	jne    0x40ddc9
  40ddd3:	mov    ah,0x69
  40ddd5:	int    0x92
  40ddd7:	inc    ebp
  40ddd8:	outs   dx,BYTE PTR ds:[esi]
  40ddd9:	push   es
  40ddda:	dec    ebx
  40dddb:	outs   dx,BYTE PTR ds:[esi]
  40dddc:	add    al,0x8d
  40ddde:	call   0x26a1:0x990ea885
  40dde5:	popa   
  40dde6:	outs   dx,DWORD PTR ds:[esi]
  40dde7:	daa    
  40dde8:	xchg   ebx,eax
  40dde9:	add    ch,dh
  40ddeb:	jns    0x40de11
  40dded:	sub    BYTE PTR [ebp+edx*1+0x2e],ch
  40ddf1:	fcom   st(1)
  40ddf3:	retf   
  40ddf4:	adc    al,BYTE PTR [ecx+0x3a82f6e3]
  40ddfa:	dec    esp
  40ddfb:	mov    ch,al
  40ddfd:	xor    edx,DWORD PTR ds:[esi]
  40de00:	or     edi,DWORD PTR [edi-0x5]
  40de03:	adc    ah,ah
  40de05:	shr    DWORD PTR [edi+0x34],1
  40de08:	sti    
  40de09:	lods   al,BYTE PTR ds:[esi]
  40de0a:	adc    eax,ebx
  40de0c:	imul   ebp,esp,0x2c
  40de0f:	jle    0x40de07
  40de11:	lods   eax,DWORD PTR ds:[esi]
  40de12:	push   ebx
  40de13:	test   DWORD PTR [edi],edi
  40de15:	shr    DWORD PTR [ebp-0xee0174b],1
  40de1b:	add    ebx,esi
  40de1d:	fist   WORD PTR [ebx+0x5e]
  40de20:	cmp    DWORD PTR [ecx+0x5],0xc84798fe
  40de27:	pushf  
  40de28:	or     DWORD PTR [edx],edx
  40de2a:	or     bh,BYTE PTR [ecx+ecx*1-0x5f0ebca3]
  40de31:	pop    edx
  40de32:	inc    ecx
  40de33:	fwait
  40de34:	xchg   ecx,eax
  40de35:	js     0x40ddd4
  40de37:	dec    edi
  40de38:	dec    eax
  40de39:	daa    
  40de3a:	add    DWORD PTR [edx],0xffffffd6
  40de3d:	xor    bh,BYTE PTR [ebx+0x11]
  40de40:	and    ah,BYTE PTR [ebp+0x73]
  40de43:	js     0x40de6a
  40de45:	lahf   
  40de46:	mov    esp,0xfa377f8
  40de4b:	fwait
  40de4c:	daa    
  40de4d:	add    BYTE PTR [edi],ch
  40de4f:	inc    edx
  40de50:	xor    al,0x2f
  40de52:	inc    esi
  40de53:	mov    cl,0xad
  40de55:	imul   ebx,DWORD PTR [edi+edi*4-0x7dd494c]
  40de5d:	cmp    ch,al
  40de5f:	xor    al,0x1
  40de61:	cmc    
  40de62:	push   edi
  40de63:	imul   eax,DWORD PTR [eax-0x47],0x1b80fe4
  40de6a:	xor    dh,al
  40de6c:	adc    dh,BYTE PTR [ecx-0x34]
  40de6f:	add    BYTE PTR ds:0x517c3578,al
  40de75:	cmp    al,0xa9
  40de77:	shl    DWORD PTR [ecx],1
  40de79:	push   0xa61e54a3
  40de7e:	jmp    0xcf0f:0xab776a26
  40de85:	xchg   edi,eax
  40de86:	lock cld 
  40de88:	mov    bh,0xd
  40de8a:	pop    ss
  40de8b:	lods   al,BYTE PTR ds:[esi]
  40de8c:	sbb    cl,BYTE PTR [eax-0x58]
  40de8f:	(bad)  
  40de90:	mov    bl,0x99
  40de92:	sbb    al,0x75
  40de94:	or     BYTE PTR [eax+eax*1+0x14becdad],bl
  40de9b:	test   eax,0xf6d5eb55
  40dea0:	mov    BYTE PTR [ebp+0xe600f21],cl
  40dea6:	inc    ecx
  40dea7:	pop    es
  40dea8:	mov    ah,0xd3
  40deaa:	sti    
  40deab:	inc    edx
  40deac:	int3   
  40dead:	in     al,0x63
  40deaf:	jns    0x40def6
  40deb1:	add    al,al
  40deb3:	sahf   
  40deb4:	sbb    al,0x2d
  40deb6:	jmp    0xcdbb:0x3f02c848
  40debd:	call   0x6629:0xba34cb4f
  40dec4:	aam    0xe7
  40dec6:	mov    ds:0xe39c9ee4,eax
  40decb:	fldl2t 
  40decd:	leave  
  40dece:	test   eax,0xfff7002b
  40ded3:	js     0x40df1e
  40ded5:	dec    ecx
  40ded6:	pextrw esp,(bad),0xc5
  40ded8:	mov    eax,ds:0x80a2f7e9
  40dedd:	mov    eax,0x1f6ac776
  40dee2:	fldenv [esi+ecx*8-0x3a7f0ed0]
  40dee9:	fimul  WORD PTR [edi+ebp*2]
  40deec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40deed:	mov    ds:0xc892c370,eax
  40def2:	lea    edi,[edi+ebp*2+0x7669714e]
  40def9:	pop    ss
  40defa:	inc    eax
  40defb:	pop    ebx
  40defc:	cmp    ch,al
  40defe:	jae    0x40ded4
  40df00:	jecxz  0x40debe
  40df02:	push   ss
  40df03:	jg     0x40df13
  40df05:	enter  0x201d,0xbe
  40df09:	xchg   esp,eax
  40df0a:	inc    edi
  40df0b:	fsubr  DWORD PTR [ecx]
  40df0d:	sub    bl,BYTE PTR [ecx]
  40df0f:	pop    esp
  40df10:	sub    al,0x4
  40df12:	lar    edx,WORD PTR [ebp-0x2c68fffc]
  40df19:	cmp    esp,edi
  40df1b:	sub    DWORD PTR [ebx],edi
  40df1d:	xor    bh,BYTE PTR [esi-0x2b]
  40df20:	inc    edi
  40df21:	scas   eax,DWORD PTR es:[edi]
  40df22:	in     eax,dx
  40df23:	pop    ds
  40df24:	or     ecx,DWORD PTR [eax]
  40df26:	fstp   st(0)
  40df28:	aad    0x33
  40df2a:	add    bh,BYTE PTR [ebp+0x2a]
  40df2d:	mov    bh,0x2e
  40df2f:	pop    edx
  40df30:	mov    esp,0xc53452c5
  40df35:	std    
  40df36:	adc    DWORD PTR [ebx-0x5a],esi
  40df39:	aad    0x80
  40df3b:	call   FWORD PTR [ecx+0x4d]
  40df3e:	push   esp
  40df3f:	inc    eax
  40df40:	(bad)  
  40df41:	push   ecx
  40df42:	enter  0xcf13,0x56
  40df46:	repz sbb esi,DWORD PTR [esi]
  40df49:	push   0xa2e8ffd3
  40df4e:	cld    
  40df4f:	push   eax
  40df50:	and    al,bl
  40df52:	xor    dh,BYTE PTR [edi+0x43]
  40df55:	int3   
  40df56:	jo     0x40df26
  40df58:	add    edi,0x68
  40df5b:	cli    
  40df5c:	aas    
  40df5d:	adc    al,0x99
  40df5f:	xlat   BYTE PTR ds:[ebx]
  40df60:	ret    
  40df61:	pop    edi
  40df62:	sbb    al,0xbf
  40df64:	stos   DWORD PTR es:[edi],eax
  40df65:	sub    eax,0x72274ef8
  40df6a:	sbb    al,0x3
  40df6c:	push   ds
  40df6d:	es sub dl,cl
  40df70:	pushf  
  40df71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df72:	stos   DWORD PTR es:[edi],eax
  40df73:	push   es
  40df74:	cmp    esp,DWORD PTR [ebp+ebx*1-0x7aa1199f]
  40df7b:	adc    esp,esi
  40df7d:	mov    bl,0xad
  40df7f:	pop    edi
  40df80:	leave  
  40df81:	cwde   
  40df82:	cli    
  40df83:	ficomp DWORD PTR [esi+eax*4]
  40df86:	lahf   
  40df87:	lock lea eax,[ebx-0x3]
  40df8b:	jmp    0x40df65
  40df8d:	stos   DWORD PTR es:[edi],eax
  40df8e:	outs   dx,BYTE PTR ds:[esi]
  40df8f:	inc    ecx
  40df90:	into   
  40df91:	popf   
  40df92:	push   eax
  40df93:	stc    
  40df94:	xchg   esp,eax
  40df95:	int3   
  40df96:	jns    0x40e014
  40df98:	dec    esi
  40df99:	add    edi,DWORD PTR ds:0x9721dcc
  40df9f:	or     al,BYTE PTR [eax]
  40dfa1:	bound  edx,QWORD PTR [ebp-0x462da1f5]
  40dfa7:	jmp    0xbeff7d59
  40dfac:	mov    esp,0x4a63fb6d
  40dfb1:	(bad)  [eax-0x15fbfed7]
  40dfb7:	(bad)  
  40dfb8:	push   edi
  40dfb9:	pop    ebx
  40dfba:	pop    es
  40dfbb:	test   al,0x39
  40dfbd:	std    
  40dfbe:	lea    ecx,[esi-0x456f914]
  40dfc4:	pop    eax
  40dfc5:	xor    ch,bl
  40dfc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfc8:	rcr    ecx,0x3
  40dfcb:	pop    esp
  40dfcc:	(bad)  
  40dfcd:	pop    esp
  40dfce:	mov    eax,ds:0xede568e
  40dfd3:	dec    ecx
  40dfd4:	dec    eax
  40dfd5:	pop    edi
  40dfd6:	push   eax
  40dfd7:	ds dec edx
  40dfd9:	int3   
  40dfda:	sub    al,0x65
  40dfdc:	retf   0x14e2
  40dfdf:	pop    ds
  40dfe0:	mov    ah,0xec
  40dfe2:	jmp    0x40dfe1
  40dfe4:	jge    0x40dffe
  40dfe6:	push   es
  40dfe7:	inc    edi
  40dfe8:	test   eax,0x5734ce86
  40dfed:	sti    
  40dfee:	xchg   DWORD PTR [edi+0x13],esp
  40dff1:	inc    edi
  40dff2:	icebp  
  40dff3:	in     al,0x83
  40dff5:	push   esi
  40dff6:	adc    eax,0x27511c47
  40dffb:	lea    ebp,[edx-0x41]
  40dffe:	arpl   di,si
  40e000:	lahf   
  40e001:	pmullw mm0,QWORD PTR [esi]
  40e004:	(bad)  
  40e005:	cwde   
  40e006:	fsqrt  
  40e008:	sbb    bh,BYTE PTR [ecx]
  40e00a:	xchg   ebp,eax
  40e00b:	dec    edx
  40e00c:	(bad)  
  40e00d:	cmp    eax,0x2e18fdb1
  40e012:	push   0x60e4acbe
  40e017:	pop    eax
  40e018:	mov    ch,0xeb
  40e01a:	dec    eax
  40e01b:	std    
  40e01c:	pushf  
  40e01d:	int3   
  40e01e:	jnp    0x40e047
  40e020:	inc    ebx
  40e021:	imul   DWORD PTR [ebx-0x1f]
  40e024:	lahf   
  40e025:	(bad)  
  40e026:	adc    BYTE PTR [eax],cl
  40e028:	cmc    
  40e029:	or     eax,0xc3ff35c5
  40e02e:	call   0xaf5bde1c
  40e033:	das    
  40e034:	outs   dx,DWORD PTR ds:[esi]
  40e035:	jmp    0xab2d6eba
  40e03a:	lahf   
  40e03b:	and    edx,esp
  40e03d:	(bad)  
  40e03e:	outs   dx,DWORD PTR ds:[esi]
  40e03f:	retf   
  40e040:	sbb    BYTE PTR [ecx-0x60],ah
  40e043:	pushf  
  40e044:	outs   dx,DWORD PTR ds:[esi]
  40e045:	pop    ds
  40e046:	inc    esp
  40e047:	test   BYTE PTR [eax+0x6b],bl
  40e04a:	in     al,dx
  40e04b:	ins    DWORD PTR es:[edi],dx
  40e04c:	shl    BYTE PTR [esi-0x67],0x3a
  40e050:	sar    DWORD PTR [ebx+0x40],1
  40e053:	aam    0xfc
  40e055:	gs push esi
  40e057:	cdq    
  40e058:	ret    
  40e059:	iret   
  40e05a:	xor    eax,0x9aecaf59
  40e05f:	sbb    eax,0x7490445f
  40e064:	jo     0x40dff6
  40e066:	push   eax
  40e067:	xchg   DWORD PTR [ecx-0x77],edx
  40e06a:	pavgb  mm3,mm3
  40e06d:	and    eax,0xde293ff2
  40e072:	xchg   ebp,eax
  40e073:	sub    dh,dh
  40e075:	ins    BYTE PTR es:[edi],dx
  40e076:	mov    ch,0x6
  40e078:	inc    edi
  40e079:	rcr    DWORD PTR [ecx+0x2c],cl
  40e07c:	xchg   ebp,eax
  40e07d:	gs add eax,0x25284c9
  40e083:	inc    ecx
  40e084:	iret   
  40e085:	lahf   
  40e086:	sbb    eax,0x105922b8
  40e08b:	xor    al,0xae
  40e08d:	push   0xffffffd9
  40e08f:	jecxz  0x40e0fc
  40e091:	inc    esp
  40e092:	push   edi
  40e093:	push   edi
  40e094:	fnstsw WORD PTR [ebx-0x17]
  40e097:	mov    al,0x96
  40e099:	ins    BYTE PTR es:[edi],dx
  40e09a:	push   eax
  40e09b:	xor    DWORD PTR [edi-0x6c],0xffffffe5
  40e09f:	and    BYTE PTR [esi+0x65eac26e],cl
  40e0a5:	push   ebx
  40e0a6:	popf   
  40e0a7:	in     al,dx
  40e0a8:	or     al,0x4b
  40e0aa:	pop    edi
  40e0ab:	aaa    
  40e0ac:	inc    ebx
  40e0ad:	mov    fs,ecx
  40e0af:	xor    al,0xd2
  40e0b1:	into   
  40e0b2:	cmp    DWORD PTR [ebx-0x80],edx
  40e0b5:	xchg   esi,eax
  40e0b6:	iret   
  40e0b7:	scas   eax,DWORD PTR es:[edi]
  40e0b8:	mov    eax,ds:0xbad4541a
  40e0bd:	pushf  
  40e0be:	or     edi,DWORD PTR [ecx+0x45]
  40e0c1:	jp     0x40e0d9
  40e0c3:	call   DWORD PTR [esi-0x1a]
  40e0c6:	sahf   
  40e0c7:	and    ah,BYTE PTR [ebx-0x146063d4]
  40e0cd:	nop
  40e0ce:	pop    esi
  40e0cf:	mov    BYTE PTR [esi+ebx*1],cl
  40e0d2:	fidiv  DWORD PTR [edx-0x5ce571e6]
  40e0d8:	dec    ecx
  40e0d9:	popa   
  40e0da:	cs clc 
  40e0dc:	(bad)  
  40e0dd:	fnstcw WORD PTR [edi+0x1b]
  40e0e0:	ja     0x40e100
  40e0e2:	push   esi
  40e0e3:	cmp    DWORD PTR [ebx-0x7004ef4a],eax
  40e0e9:	xor    al,0x15
  40e0eb:	mov    al,ds:0xaf7822b2
  40e0f0:	jle    0x40e149
  40e0f2:	cmp    eax,0x11ca674c
  40e0f7:	bound  edx,QWORD PTR cs:[edi]
  40e0fa:	inc    ebx
  40e0fb:	mov    edx,0x6e59149c
  40e100:	stc    
  40e101:	xchg   ecx,eax
  40e102:	jb     0x40e0aa
  40e104:	xor    DWORD PTR [edx+0x6cfc9e07],0x21
  40e10b:	stc    
  40e10c:	popf   
  40e10d:	out    0xfe,al
  40e10f:	mov    WORD PTR [ebx-0x3dd53e88],cs
  40e115:	xchg   ebp,eax
  40e116:	sub    edx,ecx
  40e118:	sub    BYTE PTR [ebx+0x6f1de170],bl
  40e11e:	repz push edx
  40e120:	div    BYTE PTR [ecx]
  40e122:	or     bl,ah
  40e124:	xchg   DWORD PTR [edx],eax
  40e126:	imul   ebx,DWORD PTR [ecx-0x7fd54188],0x65
  40e12d:	mov    WORD PTR [esi+0x5a643856],ds
  40e133:	in     eax,dx
  40e134:	cs adc eax,0x6f
  40e138:	lods   al,BYTE PTR ds:[esi]
  40e139:	xor    dh,ch
  40e13b:	xlat   BYTE PTR ds:[ebx]
  40e13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e13d:	cwde   
  40e13e:	adc    ebx,DWORD PTR [eax-0x7fad5055]
  40e144:	push   esp
  40e145:	iret   
  40e146:	push   esi
  40e147:	lods   al,BYTE PTR ds:[esi]
  40e148:	jo     0x40e113
  40e14a:	push   ecx
  40e14b:	adc    al,0x12
  40e14d:	lods   eax,DWORD PTR ds:[esi]
  40e14e:	js     0x40e0fe
  40e150:	sahf   
  40e151:	(bad)  
  40e152:	inc    eax
  40e153:	iret   
  40e154:	loope  0x40e19e
  40e156:	ret    0x20e
  40e159:	adc    al,0x16
  40e15b:	js     0x40e1d3
  40e15d:	loope  0x40e0e2
  40e15f:	fsub   st(7),st
  40e161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e162:	jmp    0xede54b2a
  40e167:	sub    ecx,DWORD PTR [esi-0x31]
  40e16a:	cmp    DWORD PTR [ebx+0x5abc92ec],ebx
  40e170:	adc    al,BYTE PTR [ebx+0x31]
  40e173:	pop    esi
  40e174:	cli    
  40e175:	ins    BYTE PTR es:[edi],dx
  40e176:	(bad)  
  40e177:	icebp  
  40e178:	push   ebx
  40e179:	add    BYTE PTR [eax-0x59],0x67
  40e17d:	or     al,0xc7
  40e17f:	nop
  40e180:	dec    edx
  40e181:	lods   al,BYTE PTR ds:[esi]
  40e182:	mov    cl,0x68
  40e184:	pop    es
  40e185:	jne    0x40e1ef
  40e187:	mov    ds:0xb094e287,al
  40e18c:	aas    
  40e18d:	jge    0x40e150
  40e18f:	ret    0x20f7
  40e192:	mov    ebx,0x4f9fb635
  40e197:	mov    dl,0x3b
  40e199:	adc    DWORD PTR [esi-0x4f],0x83dd1af
  40e1a0:	xor    al,0x7
  40e1a2:	add    edi,DWORD PTR [esp+eiz*2]
  40e1a5:	pushf  
  40e1a6:	imul   esp,DWORD PTR [eax+ebp*8-0x3f],0xd853433d
  40e1ae:	in     al,0x1d
  40e1b0:	(bad)  
  40e1b1:	out    dx,al
  40e1b2:	xchg   edx,eax
  40e1b3:	int3   
  40e1b4:	add    ebp,DWORD PTR [eax+0x0]
  40e1b7:	sti    
  40e1b8:	xor    dl,BYTE PTR [eax-0x780fd416]
  40e1be:	imul   edi,DWORD PTR [ebx+esi*4+0x7dae8e5],0xffffffcf
  40e1c6:	cmp    ecx,DWORD PTR [eax-0x18]
  40e1c9:	mov    al,ds:0x2322f5af
  40e1ce:	jl     0x40e1ce
  40e1d0:	fld    DWORD PTR [esi-0x60333c13]
  40e1d6:	jg     0x40e19c
  40e1d8:	rcr    BYTE PTR [esi+0x59],cl
  40e1db:	ins    BYTE PTR es:[edi],dx
  40e1dc:	mov    edi,0xc9d7c661
  40e1e1:	test   DWORD PTR [edx],0xd0b18426
  40e1e7:	inc    edx
  40e1e8:	mov    ah,0xf7
  40e1ea:	xchg   edi,eax
  40e1eb:	jmp    0x40e1ac
  40e1ed:	cmp    DWORD PTR [edx+0x5d4f2c36],esi
  40e1f3:	pop    es
  40e1f4:	icebp  
  40e1f5:	fwait
  40e1f6:	mov    bh,0x70
  40e1f8:	test   DWORD PTR [ebx+0x3b],0xcc27add8
  40e1ff:	or     ecx,esi
  40e201:	xor    al,0xa8
  40e203:	push   edx
  40e204:	adc    al,0xf1
  40e206:	mov    ebp,DWORD PTR [esi+0x81977f2]
  40e20c:	bnd jle 0x40e21e
  40e20f:	icebp  
  40e210:	(bad)  
  40e212:	sahf   
  40e213:	(bad)  
  40e214:	xlat   BYTE PTR ds:[ebx]
  40e215:	jne    0x40e276
  40e217:	push   eax
  40e218:	sbb    DWORD PTR [eax-0x3009da0],edi
  40e21e:	xor    DWORD PTR [ebp+0x79],0x2
  40e222:	data16 into 
  40e224:	sub    ah,bl
  40e226:	pop    es
  40e227:	fnstenv [edx+0x23]
  40e22a:	aad    0xd3
  40e22c:	icebp  
  40e22d:	xlat   BYTE PTR ds:[ebx]
  40e22e:	mov    eax,ds:0xdb094877
  40e233:	das    
  40e234:	ret    0xf10b
  40e237:	push   edi
  40e238:	int    0xd2
  40e23a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e23b:	arpl   WORD PTR [ebx-0x77feb4d8],ax
  40e241:	mov    esi,0x5fe594a6
  40e246:	mov    al,0x1d
  40e248:	mov    WORD PTR [edi-0x4a01888f],?
  40e24e:	cmc    
  40e24f:	xor    BYTE PTR [ebx+0x51],ch
  40e252:	shr    edx,cl
  40e254:	test   BYTE PTR [edi],bl
  40e256:	mov    al,ds:0x7da29e58
  40e25b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e25c:	adc    al,0xe5
  40e25e:	push   ebp
  40e25f:	pop    esi
  40e260:	sub    al,bh
  40e262:	sbb    DWORD PTR [eax-0x5a4d9b01],esp
  40e268:	out    0x35,eax
  40e26a:	ja     0x40e23e
  40e26c:	leave  
  40e26d:	add    eax,0x9d6c22de
  40e272:	mov    es,esp
  40e274:	pop    ss
  40e275:	jle    0x40e2b9
  40e277:	add    BYTE PTR [edi-0x36],dh
  40e27a:	or     DWORD PTR [edi-0x50882d1c],eax
  40e280:	mov    ch,0x7b
  40e282:	cmp    al,0x7f
  40e284:	cmp    eax,0xb561a150
  40e289:	sbb    al,0x88
  40e28b:	add    eax,0x56821d6c
  40e290:	dec    esp
  40e291:	out    0x86,eax
  40e293:	pop    ecx
  40e294:	js     0x40e228
  40e296:	mov    bl,0xc5
  40e298:	push   cs
  40e299:	adc    edi,ebx
  40e29b:	sar    BYTE PTR [ecx-0x46d132f4],0x3
  40e2a2:	pop    edx
  40e2a3:	les    ebx,FWORD PTR [ebx]
  40e2a5:	dec    bh
  40e2a7:	imul   eax,DWORD PTR [ecx],0x8a6dbde9
  40e2ad:	sbb    eax,0x57f5b3e3
  40e2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2b3:	xlat   BYTE PTR ds:[ebx]
  40e2b4:	fisttp WORD PTR [eax-0x4d]
  40e2b7:	fdiv   DWORD PTR [eax+0x0]
  40e2ba:	xchg   ebx,eax
  40e2bb:	lahf   
  40e2bc:	or     al,0x24
  40e2be:	mov    ds:0x9bb6c327,al
  40e2c3:	loope  0x40e2b0
  40e2c5:	pop    ebx
  40e2c6:	or     BYTE PTR [edx+eax*1+0x2a161be3],bl
  40e2cd:	mov    edi,0x7dda9598
  40e2d2:	xchg   ecx,ebp
  40e2d4:	xor    BYTE PTR [edi+0x79],ah
  40e2d7:	std    
  40e2d8:	inc    ebx
  40e2d9:	add    dh,BYTE PTR [eax+0x29]
  40e2dc:	adc    al,0xde
  40e2de:	sbb    BYTE PTR [ecx+esi*8+0x2395f6ea],bh
  40e2e5:	push   ecx
  40e2e6:	jb     0x40e34d
  40e2e8:	xor    bl,BYTE PTR [esi+0x5681817f]
  40e2ee:	dec    esi
  40e2ef:	add    dh,cl
  40e2f1:	push   0xdff6330f
  40e2f6:	xor    al,ah
  40e2f8:	je     0x40e2f1
  40e2fa:	sbb    al,0xa
  40e2fc:	mov    ebp,0x627e8c1f
  40e301:	rcl    BYTE PTR [edx-0x59],1
  40e304:	js     0x40e314
  40e306:	(bad)  
  40e307:	ret    0x373
  40e30a:	lock inc ebx
  40e30c:	jns    0x40e2a7
  40e30e:	cli    
  40e30f:	test   ch,dh
  40e311:	(bad)  
  40e312:	pop    esp
  40e313:	mov    eax,ds:0xfaea4685
  40e318:	cmp    BYTE PTR [ecx-0x682b2fba],dl
  40e31e:	inc    ecx
  40e31f:	scas   eax,DWORD PTR es:[edi]
  40e320:	data16 out 0x75,al
  40e323:	push   edi
  40e324:	js     0x40e2d0
  40e326:	push   0x20220d68
  40e32b:	out    0x4,eax
  40e32d:	retf   0x81e
  40e330:	xchg   edi,eax
  40e331:	and    ebx,DWORD PTR [eax+0x37]
  40e334:	enter  0x1f91,0x39
  40e338:	(bad)  
  40e339:	fcom   DWORD PTR [edi-0x3b097771]
  40e33f:	fldenv [esi]
  40e341:	xor    bl,BYTE PTR [ebx-0x78]
  40e344:	inc    ecx
  40e345:	cmp    BYTE PTR [ebp+ebp*1-0xf010d1e],bl
  40e34c:	mov    esi,0x67c58e49
  40e351:	out    0xa2,eax
  40e353:	sub    BYTE PTR [eax],0x8e
  40e356:	ja     0x40e3b7
  40e358:	das    
  40e359:	nop
  40e35a:	rol    bh,1
  40e35c:	fcom   QWORD PTR [edx-0x54]
  40e35f:	mov    DWORD PTR [esi-0x69],edi
  40e362:	inc    edi
  40e363:	xchg   ebp,eax
  40e364:	xor    al,0x54
  40e366:	jl     0x40e363
  40e368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e369:	(bad)  [eax+0x6a]
  40e36c:	pusha  
  40e36d:	ret    0xbd78
  40e370:	lahf   
  40e371:	mov    bh,0xfe
  40e373:	loopne 0x40e3e5
  40e375:	and    dh,ch
  40e377:	scas   al,BYTE PTR es:[edi]
  40e378:	cmp    edi,DWORD PTR [ebx-0x65]
  40e37b:	push   ebx
  40e37c:	sbb    ebx,DWORD PTR ds:0x2e70bdfc
  40e382:	pop    ebx
  40e383:	mov    dh,0xf7
  40e385:	nop
  40e386:	iret   
  40e387:	call   0xe2127ea2
  40e38c:	push   esi
  40e38d:	jbe    0x40e3a4
  40e38f:	jmp    0xa10eee27
  40e394:	test   bh,bh
  40e396:	int3   
  40e397:	out    0xa2,eax
  40e399:	out    0x8f,al
  40e39b:	addr16 ret 0xc72e
  40e39f:	es scas eax,DWORD PTR es:[edi]
  40e3a1:	stc    
  40e3a2:	dec    edi
  40e3a3:	test   edx,esp
  40e3a5:	loop   0x40e392
  40e3a7:	std    
  40e3a8:	leave  
  40e3a9:	sub    esi,DWORD PTR [esi]
  40e3ab:	pop    ecx
  40e3ac:	loop   0x40e365
  40e3ae:	lods   eax,DWORD PTR ds:[esi]
  40e3af:	loope  0x40e390
  40e3b1:	push   esi
  40e3b2:	mov    es,WORD PTR [eax-0x26db8c33]
  40e3b8:	ja     0x40e3b5
  40e3ba:	iret   
  40e3bb:	add    BYTE PTR es:[ebx-0x550e47bc],ah
  40e3c2:	mov    eax,0x7faa0e73
  40e3c7:	ror    BYTE PTR [ebp-0x5888f71],1
  40e3cd:	jo     0x40e432
  40e3cf:	xor    BYTE PTR [edi-0x67],ah
  40e3d2:	lahf   
  40e3d3:	cld    
  40e3d4:	cmp    al,0x58
  40e3d6:	jnp    0x40e3ad
  40e3d8:	jb     0x40e360
  40e3da:	mov    ds:0x87c6c106,al
  40e3df:	cld    
  40e3e0:	inc    esp
  40e3e1:	mov    ah,0x9f
  40e3e3:	pushf  
  40e3e4:	retf   0xa4d
  40e3e7:	test   eax,0x3a82fee1
  40e3ec:	and    DWORD PTR [eax-0x70],0x67208a4
  40e3f3:	cmp    al,0xb7
  40e3f5:	pop    eax
  40e3f6:	arpl   WORD PTR [edi+0x27],bx
  40e3f9:	(bad)  [edi-0x5a702f6b]
  40e3ff:	mov    eax,0xa1010b21
  40e404:	inc    ebp
  40e405:	(bad)  
  40e406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e407:	dec    edi
  40e408:	fstp   DWORD PTR [edx]
  40e40a:	mov    bl,0x6
  40e40c:	cmp    ebp,DWORD PTR [esi]
  40e40e:	rcr    DWORD PTR [edi-0x71fcf864],cl
  40e414:	out    dx,eax
  40e415:	mov    ebx,0x7e7db186
  40e41a:	popf   
  40e41b:	int    0x9f
  40e41d:	jae    0x40e40f
  40e41f:	mov    edx,DWORD PTR [esi]
  40e421:	cmp    edx,DWORD PTR [ebx-0x56f464d1]
  40e427:	es loopne 0x40e4a2
  40e42a:	mov    eax,0x824ff7d4
  40e42f:	popa   
  40e430:	xlat   BYTE PTR ds:[ebx]
  40e431:	inc    esp
  40e432:	nop
  40e433:	cdq    
  40e434:	dec    edi
  40e435:	xchg   esp,eax
  40e436:	loopne 0x40e460
  40e438:	dec    edi
  40e439:	or     al,0x78
  40e43c:	std    
  40e43d:	call   0x4f0:0xf543bf1e
  40e444:	nop
  40e445:	scas   eax,DWORD PTR es:[edi]
  40e446:	jl     0x40e3f7
  40e448:	ret    
  40e449:	call   0xe75688f
  40e44e:	leave  
  40e44f:	enter  0x735d,0xa1
  40e453:	xor    edx,DWORD PTR [edx]
  40e455:	mov    edi,0x97baa358
  40e45a:	stos   BYTE PTR es:[edi],al
  40e45b:	sbb    ebx,DWORD PTR [ebx-0x420ab861]
  40e461:	sub    edi,DWORD PTR [edx-0x54da9875]
  40e467:	add    BYTE PTR ds:0xbd328526,al
  40e46d:	cwde   
  40e46e:	xchg   esp,eax
  40e46f:	fisubr WORD PTR [edx-0x44939535]
  40e475:	pop    esi
  40e476:	mov    esi,0x9a6eb8eb
  40e47b:	cli    
  40e47c:	pop    eax
  40e47d:	leave  
  40e47e:	cmp    al,0x3d
  40e480:	in     eax,0xc0
  40e482:	xor    al,0xe5
  40e484:	jno    0x40e47f
  40e486:	pop    ss
  40e487:	inc    edx
  40e488:	xor    edx,0xf1fb1dfa
  40e48e:	adc    edx,DWORD PTR [ebp-0x143d3e40]
  40e494:	popf   
  40e495:	lock or BYTE PTR [eax-0xa908c98],bh
  40e49c:	mov    bh,0x9f
  40e49e:	pop    eax
  40e49f:	pop    DWORD PTR [esi+0x5e1d74ac]
  40e4a5:	outs   dx,DWORD PTR ds:[esi]
  40e4a6:	js     0x40e4c7
  40e4a8:	outs   dx,DWORD PTR ds:[esi]
  40e4a9:	leave  
  40e4aa:	mov    ecx,DWORD PTR [edx+0xd]
  40e4ad:	ficomp DWORD PTR [esi-0x38]
  40e4b0:	push   esp
  40e4b1:	in     al,0x32
  40e4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4b4:	sbb    BYTE PTR [ebp+0x5640a18d],0xdf
  40e4bb:	sahf   
  40e4bc:	dec    ebp
  40e4bd:	call   FWORD PTR [ebx-0x5fa93c7b]
  40e4c3:	leave  
  40e4c4:	add    BYTE PTR [edi-0x2b],bh
  40e4c7:	push   edi
  40e4c8:	pop    edi
  40e4c9:	loop   0x40e504
  40e4cb:	in     eax,0x14
  40e4cd:	nop
  40e4ce:	inc    ebp
  40e4cf:	cmp    dh,bl
  40e4d1:	pop    eax
  40e4d2:	jmp    0x84a1a1e8
  40e4d7:	jmp    0x40e4ec
  40e4d9:	adc    cl,0x80
  40e4dc:	pop    eax
  40e4dd:	(bad)  
  40e4de:	cld    
  40e4df:	test   eax,0x8b42d726
  40e4e4:	cmc    
  40e4e5:	cld    
  40e4e6:	in     al,0x62
  40e4e8:	jle    0x40e4e1
  40e4ea:	jnp    0x40e4f0
  40e4ec:	push   esp
  40e4ed:	shl    DWORD PTR [ecx+0x71],0xe4
  40e4f1:	sbb    BYTE PTR [esi-0x6aec4660],al
  40e4f7:	cmp    al,dl
  40e4f9:	jge    0x40e4cc
  40e4fb:	xor    ebx,DWORD PTR [ebp+0x54]
  40e4fe:	sbb    ebp,DWORD PTR [ebx+edx*8+0x78260f6e]
  40e505:	call   ecx
  40e507:	cmp    eax,0x437cf844
  40e50c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e50d:	dec    edi
  40e50e:	lock mov cl,0x6c
  40e511:	call   0x6b941527
  40e516:	inc    edi
  40e517:	dec    ebp
  40e518:	inc    esp
  40e519:	dec    eax
  40e51a:	std    
  40e51b:	(bad)  
  40e51c:	sbb    al,0xfe
  40e51e:	scas   al,BYTE PTR es:[edi]
  40e51f:	leave  
  40e520:	sbb    DWORD PTR [ebp+0x77066c26],0xf4ebd4b0
  40e52a:	neg    BYTE PTR [ecx+0x77]
  40e52d:	sbb    al,0xb2
  40e52f:	rol    ebp,1
  40e531:	jl     0x40e4ff
  40e533:	jmp    0x40e4eb
  40e535:	push   esi
  40e536:	xchg   esp,eax
  40e537:	mov    ah,BYTE PTR [ecx-0x46d4b25f]
  40e53d:	aad    0x58
  40e53f:	cmp    eax,0xa7c03bde
  40e544:	push   ebx
  40e545:	jp     0x40e5c5
  40e547:	mov    edi,0xe6af423a
  40e54c:	mov    al,al
  40e54e:	inc    edi
  40e54f:	ins    DWORD PTR es:[edi],dx
  40e550:	out    0xb2,eax
  40e552:	nop
  40e553:	jo     0x40e4f7
  40e555:	push   edx
  40e556:	in     al,0xae
  40e558:	mov    bh,0x42
  40e55a:	jns    0x40e572
  40e55c:	aam    0xe6
  40e55e:	jbe    0x40e523
  40e560:	pop    ebp
  40e561:	repz push 0x78
  40e564:	xor    eax,0x963f7913
  40e569:	inc    ebp
  40e56a:	and    BYTE PTR [eax+0x12f82a7b],0xb6
  40e571:	mov    edi,0x2ae18289
  40e576:	mov    DWORD PTR [esi+0x14147845],edx
  40e57c:	(bad)
  40e57f:	mov    al,BYTE PTR [ebx]
  40e581:	out    0xd2,al
  40e583:	jo     0x40e5f5
  40e585:	pushf  
  40e586:	push   edx
  40e587:	sbb    al,0x5
  40e589:	push   ebp
  40e58a:	fwait
  40e58b:	gs jmp 0x1b9c98b5
  40e591:	dec    esi
  40e592:	mov    ebx,0xd43f6435
  40e597:	loopne 0x40e5c3
  40e599:	das    
  40e59a:	add    bh,BYTE PTR [edi-0x31]
  40e59d:	call   0x2674:0xcdcc7aab
  40e5a4:	push   edx
  40e5a5:	ins    BYTE PTR es:[edi],dx
  40e5a6:	lods   al,BYTE PTR ds:[esi]
  40e5a7:	jmp    0xab8009ba
  40e5ac:	cmp    cl,BYTE PTR [edx-0x76]
  40e5af:	or     eax,0x891806ad
  40e5b4:	arpl   WORD PTR [edx-0x453aaa4a],si
  40e5ba:	xchg   edi,eax
  40e5bb:	scas   eax,DWORD PTR es:[edi]
  40e5bc:	dec    eax
  40e5bd:	mov    dl,0x82
  40e5bf:	mov    WORD PTR [ebp+0x54],?
  40e5c2:	xchg   ebx,eax
  40e5c3:	int    0xdb
  40e5c5:	and    DWORD PTR [edx+ebx*2],esi
  40e5c8:	jge    0x40e588
  40e5ca:	pop    ebp
  40e5cb:	(bad)  
  40e5cc:	adc    BYTE PTR ds:0x5c77b48d,0xca
  40e5d4:	ins    DWORD PTR es:[edi],dx
  40e5d5:	ja     0x40e585
  40e5d7:	hlt    
  40e5d8:	shl    DWORD PTR [ecx-0x126e7823],0x23
  40e5df:	sbb    DWORD PTR [edx+0x60be0382],esi
  40e5e5:	mov    al,0x41
  40e5e7:	jmp    0x8d39377d
  40e5ec:	fcmovbe st,st(0)
  40e5ee:	xor    al,BYTE PTR [eax+0x1]
  40e5f1:	mov    al,ds:0x3ee3d3f6
  40e5f6:	mov    ecx,0x83104a57
  40e5fb:	dec    esp
  40e5fc:	sub    BYTE PTR ds:[eax-0x54],0xdd
  40e601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e602:	mov    dl,0x92
  40e604:	sbb    DWORD PTR [ecx-0x49736274],esi
  40e60a:	div    BYTE PTR [ebx]
  40e60c:	sub    edi,DWORD PTR [edx-0x6e4cc91d]
  40e612:	sbb    al,0x38
  40e614:	aam    0xd
  40e616:	(bad)  
  40e617:	lahf   
  40e618:	jns    0x40e638
  40e61a:	dec    esi
  40e61b:	adc    al,0xaa
  40e61d:	imul   edi,DWORD PTR [edi+0x1c],0xffffffb1
  40e621:	test   eax,0x80a8b715
  40e626:	adc    esp,DWORD PTR [esi+0x4f]
  40e629:	sbb    al,0xb4
  40e62b:	ins    DWORD PTR es:[edi],dx
  40e62c:	add    esi,DWORD PTR [edx+0x1388b3c3]
  40e632:	sub    DWORD PTR [eax-0x1b],ebx
  40e635:	push   eax
  40e636:	loopne 0x40e5df
  40e638:	dec    edi
  40e639:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e63b:	or     BYTE PTR [esi],dl
  40e63d:	not    DWORD PTR [ecx-0x1b]
  40e640:	scas   eax,DWORD PTR es:[edi]
  40e641:	push   0xffffffcc
  40e643:	icebp  
  40e644:	sub    bl,BYTE PTR [eax-0x16]
  40e647:	and    edx,edx
  40e649:	nop
  40e64a:	jno    0x40e5ff
  40e64c:	outs   dx,BYTE PTR ds:[esi]
  40e64d:	pop    ecx
  40e64e:	adc    eax,edi
  40e650:	test   DWORD PTR [ebp-0x2419397e],ecx
  40e656:	rol    BYTE PTR [ecx+ebp*1+0x75],cl
  40e65a:	in     eax,dx
  40e65b:	cmc    
  40e65c:	cmp    esp,edx
  40e65e:	test   al,0x3c
  40e660:	or     cl,BYTE PTR [ebp+0x23]
  40e663:	jle    0x40e6a5
  40e665:	xor    al,0xe5
  40e667:	sub    DWORD PTR [esp+edx*8+0x1c0dee63],0xfffffff3
  40e66f:	or     DWORD PTR [eax+0x37],0x75e89ec4
  40e676:	xchg   BYTE PTR [eax+0x55cc6747],dh
  40e67c:	(bad)  
  40e67d:	cmp    al,ah
  40e67f:	add    eax,0x1878e172
  40e684:	cmp    al,0xd6
  40e686:	aas    
  40e687:	icebp  
  40e688:	and    BYTE PTR [edi+ecx*8],ah
  40e68b:	mov    ds:0x9b3d77c6,al
  40e690:	and    DWORD PTR [eax+0x1],esp
  40e693:	mov    ds:0x48da20c6,eax
  40e698:	lds    eax,FWORD PTR [eax]
  40e69a:	aad    0x72
  40e69c:	or     dh,BYTE PTR [edx+0x49]
  40e69f:	mov    edx,0x6d0d1d1
  40e6a4:	loopne 0x40e702
  40e6a6:	ja     0x40e713
  40e6a8:	cli    
  40e6a9:	shr    esp,1
  40e6ab:	add    eax,0x7ee28b47
  40e6b0:	rol    DWORD PTR [esi-0x3beeab],0x72
  40e6b7:	xchg   esp,eax
  40e6b8:	pop    ebp
  40e6b9:	cmp    ebx,0x34
  40e6bc:	add    bl,BYTE PTR [esi+edi*8-0xd]
  40e6c0:	xchg   DWORD PTR [ebx+edi*4+0x41],ecx
  40e6c4:	cdq    
  40e6c5:	mov    esi,0xf3b415bf
  40e6ca:	shl    DWORD PTR [edi],1
  40e6cc:	xchg   edx,eax
  40e6cd:	push   ds
  40e6ce:	mov    ah,0x5a
  40e6d0:	out    0x5f,eax
  40e6d2:	adc    DWORD PTR [ecx+ecx*8],eax
  40e6d5:	bound  edx,QWORD PTR [esi+0x53]
  40e6d8:	(bad)  
  40e6d9:	popa   
  40e6da:	sub    BYTE PTR [eax+0x73e91cb8],0x54
  40e6e1:	adc    BYTE PTR [ebx+0x61637ce0],al
  40e6e7:	pop    ds
  40e6e8:	xchg   ebx,eax
  40e6e9:	jo     0x40e6b4
  40e6eb:	push   0x9f71e6bd
  40e6f0:	mov    dl,0xc8
  40e6f2:	cmp    al,0xf5
  40e6f4:	gs jmp 0x8864:0xc6de84e0
  40e6fc:	mul    DWORD PTR [esi]
  40e6fe:	cmp    eax,0x91d53497
  40e703:	fidivr WORD PTR [eax-0x5ebcf70f]
  40e709:	xchg   ebp,eax
  40e70a:	push   ecx
  40e70b:	dec    edx
  40e70c:	jmp    0x40e70a
  40e70e:	popa   
  40e70f:	xor    dl,dh
  40e711:	ins    DWORD PTR es:[edi],dx
  40e712:	lahf   
  40e713:	mov    ebx,0x9690f40c
  40e718:	and    eax,0x27115526
  40e71d:	xchg   BYTE PTR [ebp+0x71600ef0],cl
  40e723:	pop    ecx
  40e724:	lods   al,BYTE PTR ds:[esi]
  40e725:	mov    bl,0xcd
  40e727:	cmp    eax,0x52b554c6
  40e72c:	dec    ecx
  40e72d:	mov    cl,BYTE PTR [edi]
  40e72f:	pop    ebp
  40e730:	mov    esi,DWORD PTR [edi+0x4e]
  40e733:	stos   BYTE PTR es:[edi],al
  40e734:	nop
  40e735:	ror    DWORD PTR [edx],cl
  40e737:	sbb    bh,BYTE PTR gs:[edi+0x73683eaf]
  40e73e:	enter  0xbb8c,0xfb
  40e742:	sbb    bl,cl
  40e744:	das    
  40e745:	pop    es
  40e746:	neg    BYTE PTR [edi-0x56]
  40e749:	xor    bh,BYTE PTR [ebx-0x7e5b12bf]
  40e74f:	loopne 0x40e755
  40e751:	jmp    0xe87c34bf
  40e756:	clc    
  40e757:	jmp    0x40e7c2
  40e759:	outs   dx,BYTE PTR ds:[esi]
  40e75a:	push   edi
  40e75b:	cmc    
  40e75c:	clc    
  40e75d:	push   ebp
  40e75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e75f:	ds jnp 0x40e7d6
  40e762:	sbb    al,BYTE PTR [ebx]
  40e764:	in     eax,dx
  40e765:	(bad)  
  40e766:	xchg   ebp,eax
  40e767:	add    dh,BYTE PTR [edi]
  40e769:	jbe    0x40e72f
  40e76b:	pop    es
  40e76c:	push   ebx
  40e76d:	jl     0x40e709
  40e76f:	adc    BYTE PTR [edx+0x52],cl
  40e772:	rcl    DWORD PTR [eax*4+0x238b1827],0xdb
  40e77a:	pop    ecx
  40e77b:	or     ebp,DWORD PTR [edi]
  40e77d:	jno    0x40e7a8
  40e77f:	cmp    eax,0xb6290a3e
  40e784:	fldenv [edx-0x6d1c0b5b]
  40e78a:	loope  0x40e7fb
  40e78c:	bound  esi,QWORD PTR [esi+0xb]
  40e78f:	xor    al,0xec
  40e791:	mov    bl,0x99
  40e793:	out    dx,al
  40e794:	dec    ebp
  40e795:	test   DWORD PTR [esi+ebx*2],ecx
  40e798:	sbb    bl,al
  40e79a:	cmp    DWORD PTR [edi-0x21226a7e],edx
  40e7a0:	mov    ah,0xe1
  40e7a2:	push   0x53
  40e7a4:	pusha  
  40e7a5:	dec    eax
  40e7a6:	add    ecx,DWORD PTR [edi]
  40e7a8:	fstp   QWORD PTR [esi+0x11]
  40e7ab:	and    al,0x4e
  40e7ad:	fisubr WORD PTR [edi-0x244fa703]
  40e7b3:	(bad)  
  40e7b4:	and    ch,ch
  40e7b6:	mov    dl,0x72
  40e7b8:	mov    al,0xcf
  40e7ba:	dec    esp
  40e7bb:	out    0xeb,eax
  40e7bd:	push   ebp
  40e7be:	mov    ecx,0xce866047
  40e7c3:	cmp    ecx,DWORD PTR [ecx]
  40e7c5:	das    
  40e7c6:	mov    esi,0xb7de0a34
  40e7cb:	pop    ebx
  40e7cc:	(bad)  
  40e7cd:	daa    
  40e7ce:	push   ds
  40e7cf:	jns    0x40e83c
  40e7d1:	psrad  mm1,QWORD PTR [ebx]
  40e7d4:	xchg   ebx,eax
  40e7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7d6:	xchg   ecx,eax
  40e7d7:	mov    ecx,esp
  40e7d9:	jne    0x40e84e
  40e7db:	jecxz  0x40e776
  40e7dd:	jo     0x40e7c9
  40e7df:	jns    0x40e78d
  40e7e1:	fild   DWORD PTR ds:0x2407b1b7
  40e7e7:	out    0x90,al
  40e7e9:	fstp   DWORD PTR [edx]
  40e7eb:	sar    cl,0x55
  40e7ee:	add    dl,bl
  40e7f0:	ins    BYTE PTR es:[edi],dx
  40e7f1:	jle    0x40e776
  40e7f3:	mov    dh,0xf7
  40e7f5:	and    ebx,DWORD PTR [eax]
  40e7f7:	ds je  0x40e85c
  40e7fa:	mov    ebp,DWORD PTR [edx-0x46]
  40e7fd:	add    eax,0x70359f40
  40e802:	sbb    eax,0x2c3fcac1
  40e807:	aaa    
  40e808:	pop    esi
  40e809:	inc    eax
  40e80a:	and    BYTE PTR [edx],0xa
  40e80d:	inc    esp
  40e80e:	and    al,0x6b
  40e810:	sub    eax,esp
  40e812:	mov    BYTE PTR ds:0xa97355f8,cl
  40e818:	ds lahf 
  40e81a:	dec    esp
  40e81b:	pop    ss
  40e81c:	fcom   DWORD PTR [esi+0x63808b34]
  40e822:	jmp    0x40e7e2
  40e824:	add    DWORD PTR [ebp+0x10754ba3],ecx
  40e82a:	xor    al,0x89
  40e82c:	sar    BYTE PTR [edx+ebx*2+0x69],0xe0
  40e831:	jecxz  0x40e855
  40e833:	mov    edi,0x7e05b5cc
  40e838:	(bad)  
  40e839:	xchg   esp,eax
  40e83a:	inc    edi
  40e83b:	jbe    0x40e8b1
  40e83d:	sub    dh,BYTE PTR [edx-0x200b2cb]
  40e843:	stos   DWORD PTR es:[edi],eax
  40e844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e845:	mov    BYTE PTR [ebx-0x48],al
  40e848:	aad    0x73
  40e84a:	call   0x90851c1a
  40e84f:	nop
  40e850:	jo     0x40e85f
  40e852:	inc    edi
  40e853:	fistp  DWORD PTR [ebx-0x2e273966]
  40e859:	mov    al,ds:0x85033d4
  40e85e:	and    eax,0x3811d0b7
  40e863:	icebp  
  40e864:	lods   al,BYTE PTR ds:[esi]
  40e865:	scas   al,BYTE PTR es:[edi]
  40e866:	add    eax,0x55a77d0e
  40e86b:	fbstp  TBYTE PTR [ecx+0x33]
  40e86e:	retf   
  40e86f:	pop    esi
  40e870:	pop    eax
  40e871:	push   ebx
  40e872:	cli    
  40e873:	push   0x47b9de5
  40e878:	ret    0x1d93
  40e87b:	add    DWORD PTR [esi+0x7b38e576],0xffffffa5
  40e882:	enter  0x5c93,0x9d
  40e886:	(bad)  
  40e888:	cld    
  40e889:	and    edi,DWORD PTR [eax]
  40e88b:	scas   eax,DWORD PTR es:[edi]
  40e88c:	jne    0x40e84d
  40e88e:	test   DWORD PTR [edi+0x1174a49b],ecx
  40e894:	or     BYTE PTR [ecx],0x2a
  40e897:	int    0x8c
  40e899:	xor    DWORD PTR [esi+0x2c4576e5],eax
  40e89f:	cmc    
  40e8a0:	sub    DWORD PTR [edx+eax*4+0x8b1f29c],ebx
  40e8a7:	cmp    BYTE PTR [edx-0x37],0x3a
  40e8ab:	jnp    0x40e8b6
  40e8ad:	xor    al,0xeb
  40e8af:	nop
  40e8b0:	ins    DWORD PTR es:[edi],dx
  40e8b1:	jge    0x40e896
  40e8b3:	push   0xec1bb633
  40e8b8:	add    ch,BYTE PTR [edi-0x19]
  40e8bb:	mov    edx,0x277b2e77
  40e8c0:	mov    dh,0x5e
  40e8c2:	mov    dl,0x64
  40e8c4:	dec    edi
  40e8c5:	stc    
  40e8c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8c7:	(bad)  
  40e8c8:	cmp    DWORD PTR [ecx-0x39],esp
  40e8cb:	xchg   esp,eax
  40e8cc:	shr    BYTE PTR [ecx],0xd1
  40e8cf:	push   ds
  40e8d0:	call   0x900f9337
  40e8d5:	xchg   esp,eax
  40e8d6:	sahf   
  40e8d7:	push   eax
  40e8d8:	sbb    DWORD PTR [ebx],ecx
  40e8da:	inc    esi
  40e8db:	jg     0x40e94c
  40e8dd:	fs (bad) 
  40e8df:	ror    DWORD PTR [edx+0x27],0x94
  40e8e3:	lahf   
  40e8e4:	js     0x40e8bd
  40e8e6:	push   ecx
  40e8e7:	ficom  WORD PTR [ebx]
  40e8e9:	xchg   ecx,eax
  40e8ea:	pop    ss
  40e8eb:	inc    ebx
  40e8ec:	mov    al,0x3
  40e8ee:	or     edi,DWORD PTR [esi+0x25982a22]
  40e8f4:	push   es
  40e8f5:	add    DWORD PTR [edx-0x2f2fec63],edi
  40e8fb:	jl     0x40e88c
  40e8fd:	aas    
  40e8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ff:	cli    
  40e900:	fnstcw WORD PTR [esi-0x6d26cf82]
  40e906:	out    0x23,al
  40e908:	cli    
  40e909:	pop    esp
  40e90a:	clc    
  40e90b:	lods   eax,DWORD PTR ds:[esi]
  40e90c:	cmp    BYTE PTR [ebx+edx*8-0x28],cl
  40e910:	pop    edi
  40e911:	xchg   edx,eax
  40e912:	sbb    al,0x89
  40e914:	fmul   QWORD PTR [ecx]
  40e916:	push   edi
  40e917:	out    dx,eax
  40e918:	mov    WORD PTR ds:0x346a58f7,gs
  40e91e:	sub    al,0x7b
  40e920:	cmp    al,0xed
  40e922:	push   ds
  40e923:	cmc    
  40e924:	imul   BYTE PTR [esi+edi*1+0x16]
  40e928:	addr16 inc esi
  40e92a:	jb     0x40e8fb
  40e92c:	inc    esp
  40e92d:	push   esi
  40e92e:	jae    0x40e8cf
  40e930:	mov    ch,0x46
  40e932:	jo     0x40e973
  40e934:	sar    DWORD PTR [ebp+0x4c],1
  40e937:	dec    esi
  40e938:	dec    ebp
  40e939:	jmp    0xa1cb4c02
  40e93e:	add    eax,ebp
  40e940:	mov    fs:0xa531e7cb,al
  40e946:	pop    es
  40e947:	call   0x687f:0x60b8dfd0
  40e94e:	leave  
  40e94f:	lods   al,BYTE PTR ds:[esi]
  40e950:	aam    0x7b
  40e952:	xchg   esp,eax
  40e953:	imul   esp,DWORD PTR [eax-0x5],0xffffffc9
  40e957:	call   0xc09cb4c2
  40e95c:	bound  edi,QWORD PTR [edx]
  40e95e:	daa    
  40e95f:	push   esp
  40e960:	popf   
  40e961:	adc    al,0xdd
  40e963:	mov    bh,0xed
  40e965:	arpl   WORD PTR [ecx-0x44],cx
  40e968:	fadd   QWORD PTR [ecx+0x20]
  40e96b:	in     al,0xf9
  40e96d:	js     0x40e965
  40e96f:	cmp    BYTE PTR [ebx+0x2b6b06a0],ch
  40e975:	add    eax,0xab896725
  40e97a:	xor    DWORD PTR [eax-0x34],edi
  40e97d:	mov    dl,0xea
  40e97f:	cld    
  40e980:	fisubr DWORD PTR fs:[ecx]
  40e983:	sar    DWORD PTR [ebp+0x34],cl
  40e986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e987:	mov    ch,0xb2
  40e989:	mov    eax,ds:0x1f133267
  40e98e:	sub    al,ch
  40e990:	mov    edx,0x3faa3533
  40e995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e996:	sub    eax,0x398c87be
  40e99b:	jl     0x40e99c
  40e99d:	std    
  40e99e:	loopne 0x40ea09
  40e9a0:	leave  
  40e9a1:	repz mov cl,0x24
  40e9a4:	add    al,0xb5
  40e9a6:	or     DWORD PTR [ebx-0x2714ffa8],eax
  40e9ac:	popa   
  40e9ad:	loopne 0x40e987
  40e9af:	jmp    0x40e98e
  40e9b1:	add    al,0x4a
  40e9b3:	rcl    bl,0xb5
  40e9b6:	loop   0x40e958
  40e9b8:	lods   eax,DWORD PTR ds:[esi]
  40e9b9:	push   ebx
  40e9ba:	push   edx
  40e9bb:	outs   dx,DWORD PTR ds:[esi]
  40e9bc:	dec    edi
  40e9bd:	iret   
  40e9be:	xchg   esi,eax
  40e9bf:	or     cl,bl
  40e9c1:	push   edx
  40e9c2:	shl    DWORD PTR [edx],1
  40e9c4:	mov    al,0x6a
  40e9c6:	sbb    eax,0x34da13c2
  40e9cb:	add    eax,0x3d5ce99e
  40e9d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9d1:	leave  
  40e9d2:	sub    esi,DWORD PTR [ebx-0x49]
  40e9d5:	loop   0x40ea48
  40e9d7:	ja     0x40e9bc
  40e9d9:	les    esi,FWORD PTR [edx-0x6e]
  40e9dc:	outs   dx,BYTE PTR ds:[esi]
  40e9dd:	adc    eax,0x54d231c0
  40e9e2:	ja     0x40ea5d
  40e9e4:	and    al,0x2
  40e9e6:	cld    
  40e9e7:	jle    0x40e9cb
  40e9e9:	out    0x33,eax
  40e9eb:	mov    ds:0xec04a171,al
  40e9f0:	bound  esp,QWORD PTR ds:0xa845c86e
  40e9f6:	test   eax,0xb968a2dd
  40e9fb:	add    eax,0xbc79ade
  40ea00:	jnp    0x40ea22
  40ea02:	int3   
  40ea03:	ret    
  40ea04:	sbb    eax,0x5764e7d
  40ea09:	xor    DWORD PTR [edi+0x5c53073e],esp
  40ea0f:	out    0xae,eax
  40ea11:	stos   BYTE PTR es:[edi],al
  40ea12:	jns    0x40ea87
  40ea14:	push   0xffffff8a
  40ea16:	jno    0x40ea97
  40ea18:	leave  
  40ea19:	dec    ecx
  40ea1a:	pop    esp
  40ea1b:	pop    es
  40ea1c:	xchg   ecx,eax
  40ea1d:	mov    bl,0xd6
  40ea1f:	in     al,dx
  40ea20:	push   ds
  40ea21:	or     DWORD PTR [ecx+ecx*2+0x49894ba],esi
  40ea28:	add    esi,0x4b
  40ea2b:	mov    ah,0x89
  40ea2d:	(bad)  
  40ea2e:	ficom  DWORD PTR [ebp+0x29]
  40ea31:	aas    
  40ea32:	and    ah,BYTE PTR [esi+0x74eff8f1]
  40ea38:	ja     0x40ea66
  40ea3a:	mov    ah,0x16
  40ea3c:	xor    al,0x1
  40ea3e:	out    0xe,al
  40ea40:	adc    DWORD PTR [ebp-0x3fa6df2],esp
  40ea46:	sbb    al,BYTE PTR [bp+di]
  40ea49:	mov    cs,WORD PTR [edi+0x345be133]
  40ea4f:	mov    esp,0xa31d78
  40ea54:	clc    
  40ea55:	and    BYTE PTR [eax+0x2df283fb],dh
  40ea5b:	enter  0x81e4,0xd8
  40ea5f:	pop    ds
  40ea60:	pop    esp
  40ea61:	aaa    
  40ea62:	dec    ebx
  40ea64:	daa    
  40ea65:	addr16 int3 
  40ea67:	add    al,0xf6
  40ea69:	sbb    edx,edx
  40ea6b:	jp     0x40ea9a
  40ea6d:	mov    ebp,0x677e1c99
  40ea72:	xor    eax,0x3af71ddb
  40ea77:	or     bh,0x2b
  40ea7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea7b:	fidivr DWORD PTR [ebx]
  40ea7d:	and    eax,0xd7d3c314
  40ea82:	sbb    BYTE PTR [ecx+0x72],ch
  40ea85:	mov    ebp,0x2d362eb6
  40ea8a:	push   ebx
  40ea8b:	imul   edi
  40ea8d:	scas   al,BYTE PTR es:[edi]
  40ea8e:	jns    0x40ea68
  40ea90:	sub    eax,0xde13be67
  40ea95:	lea    eax,[ecx-0x7e]
  40ea98:	idiv   BYTE PTR ds:0xdbae7418
  40ea9e:	retf   
  40ea9f:	add    al,BYTE PTR [esp+ebx*4]
  40eaa2:	xchg   ecx,eax
  40eaa3:	aam    0xed
  40eaa5:	xchg   esi,eax
  40eaa6:	out    0xbe,al
  40eaa8:	cmp    al,0x5
  40eaaa:	popf   
  40eaab:	pop    ss
  40eaac:	xlat   BYTE PTR ds:[ebx]
  40eaad:	jmp    0xe87e:0x1b19dd1f
  40eab4:	mov    BYTE PTR [eax+0x6fcdd1cc],0x7f
  40eabb:	enter  0x70f6,0x48
  40eabf:	sbb    BYTE PTR [edi],bl
  40eac1:	or     BYTE PTR [edi],dl
  40eac3:	mov    ss,WORD PTR [esi+0x34]
  40eac6:	icebp  
  40eac7:	dec    eax
  40eac8:	mov    ecx,0x77949fc8
  40eacd:	out    dx,al
  40eace:	das    
  40eacf:	pop    ss
  40ead0:	icebp  
  40ead1:	aas    
  40ead2:	adc    ebx,ecx
  40ead4:	xchg   esi,eax
  40ead5:	ds push es
  40ead7:	fld    TBYTE PTR [esi]
  40ead9:	ss retf 
  40eadb:	cmc    
  40eadc:	jne    0x40eb38
  40eade:	stos   DWORD PTR es:[edi],eax
  40eadf:	(bad)  
  40eae0:	pop    esi
  40eae1:	mov    ah,0x47
  40eae3:	dec    edi
  40eae4:	adc    BYTE PTR [edx+0x78ed5935],bl
  40eaea:	sbb    al,al
  40eaec:	pop    ss
  40eaed:	or     BYTE PTR [eax],bh
  40eaef:	pop    esi
  40eaf0:	dec    ecx
  40eaf1:	sub    esp,DWORD PTR [edi+0x62]
  40eaf4:	repnz shl BYTE PTR [ebp-0x2],cl
  40eaf8:	daa    
  40eaf9:	xchg   esi,eax
  40eafa:	mov    ebx,0x5d2d1359
  40eaff:	das    
  40eb00:	pop    edi
  40eb01:	sub    al,0x8d
  40eb03:	jo     0x40eb4b
  40eb05:	not    DWORD PTR [edx-0x18]
  40eb08:	xchg   edi,eax
  40eb09:	cmp    cl,bh
  40eb0b:	icebp  
  40eb0c:	jo     0x40eafd
  40eb0e:	xor    DWORD PTR [eax-0x3a1b31f2],eax
  40eb14:	cdq    
  40eb15:	(bad)  
  40eb16:	into   
  40eb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb18:	(bad)  
  40eb19:	xor    ch,dh
  40eb1b:	test   eax,0xd4edbbc4
  40eb20:	sub    DWORD PTR [ebp-0x8],ecx
  40eb23:	mov    bl,0x3a
  40eb25:	dec    ebp
  40eb26:	hlt    
  40eb27:	fstp   QWORD PTR [ebx]
  40eb29:	sub    al,0x45
  40eb2b:	call   0xa7a93342
  40eb30:	dec    eax
  40eb31:	adc    al,0xb1
  40eb33:	fld    DWORD PTR [eax+0x6c557922]
  40eb39:	icebp  
  40eb3a:	ins    DWORD PTR es:[edi],dx
  40eb3b:	call   0x9a8c:0xb43dc2d4
  40eb42:	sbb    eax,0xbbd3772b
  40eb47:	stos   BYTE PTR es:[edi],al
  40eb48:	cmp    eax,0xeeda2413
  40eb4d:	sbb    eax,0xb9206c3a
  40eb52:	(bad)  
  40eb53:	fidiv  DWORD PTR [ebp-0x62926947]
  40eb59:	imul   ebx,DWORD PTR [esi],0x69
  40eb5c:	(bad)  
  40eb5d:	retf   0xfde3
  40eb60:	(bad)  
  40eb61:	loopne 0x40eaea
  40eb63:	sbb    BYTE PTR fs:[ecx+0x5c397236],dh
  40eb6a:	xchg   ebx,eax
  40eb6b:	repz push es
  40eb6d:	fnstsw WORD PTR [eax-0xf]
  40eb70:	dec    BYTE PTR [edi+0x651e7685]
  40eb76:	in     eax,0x3a
  40eb78:	xchg   DWORD PTR [edx],esp
  40eb7a:	ins    WORD PTR es:[edi],dx
  40eb7c:	sbb    al,0xb7
  40eb7e:	call   0x8fd1742e
  40eb83:	mov    DWORD PTR [esi+0x3e],ebx
  40eb86:	cmp    DWORD PTR [eax+0x1e8ba853],edi
  40eb8c:	mov    ds:0x7fe1b23d,al
  40eb91:	int    0x3e
  40eb93:	pop    ebx
  40eb94:	xchg   edx,eax
  40eb95:	leave  
  40eb96:	push   0x15
  40eb98:	jbe    0x40eb82
  40eb9a:	cld    
  40eb9b:	jns    0x40ec0a
  40eb9d:	pop    esi
  40eb9e:	mov    cl,0xf3
  40eba0:	call   0xcb10aab5
  40eba5:	adc    ecx,ebx
  40eba7:	xchg   di,ax
  40eba9:	add    BYTE PTR [edi+eax*1-0x8],dl
  40ebad:	adc    ecx,DWORD PTR [ebp+0x47339b15]
  40ebb3:	repnz mov edi,0x98f08c0
  40ebb9:	jle    0x40ebf3
  40ebbb:	mov    bl,0x38
  40ebbd:	pop    ebx
  40ebbe:	call   0x5115:0xd3ca976a
  40ebc5:	or     al,0x8
  40ebc7:	les    edi,FWORD PTR [edi+0x1c]
  40ebca:	and    esi,DWORD PTR [ecx-0x571890bb]
  40ebd0:	add    eax,0x627a39d
  40ebd5:	ss xchg ebx,eax
  40ebd7:	stc    
  40ebd8:	pop    esi
  40ebd9:	in     eax,dx
  40ebda:	xor    al,0x8e
  40ebdc:	xchg   edx,eax
  40ebdd:	in     al,0x79
  40ebdf:	ja     0x40ec2b
  40ebe1:	dec    ebp
  40ebe2:	repnz add al,0x9d
  40ebe5:	push   edx
  40ebe7:	and    eax,0x11f45fd1
  40ebec:	inc    ecx
  40ebed:	scas   al,BYTE PTR es:[edi]
  40ebee:	add    BYTE PTR [ecx+0x8],dh
  40ebf1:	xor    al,0xa9
  40ebf3:	inc    ebx
  40ebf4:	pop    es
  40ebf5:	jge    0x40eba7
  40ebf7:	xchg   edx,eax
  40ebf8:	fadd   st,st(4)
  40ebfa:	pop    ebx
  40ebfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebfc:	fadd   QWORD PTR [ebx-0x11]
  40ebff:	xor    ebx,DWORD PTR [ebp-0x6]
  40ec02:	xor    eax,0xd94ce719
  40ec07:	xchg   esp,eax
  40ec08:	int3   
  40ec09:	gs jae 0x40ec4c
  40ec0c:	mov    ah,0x56
  40ec0e:	jg     0x40ec61
  40ec10:	cmp    DWORD PTR [ebp-0x7940aa92],esp
  40ec16:	gs dec edx
  40ec18:	aad    0x63
  40ec1a:	daa    
  40ec1b:	cmp    al,0xe
  40ec1d:	xchg   ebp,eax
  40ec1e:	push   ecx
  40ec1f:	mov    al,ds:0x9f852504
  40ec24:	add    eax,0xd37a2197
  40ec29:	sbb    bh,BYTE PTR [edi+0x30]
  40ec2c:	clc    
  40ec2d:	push   ebx
  40ec2e:	mov    bh,0x69
  40ec30:	xor    BYTE PTR [edx+0xc],ch
  40ec33:	inc    eax
  40ec34:	out    dx,al
  40ec35:	mov    bl,0x88
  40ec37:	mov    ebx,0xe53cc9c
  40ec3c:	add    BYTE PTR fs:[ebp-0x142b84f4],0x5f
  40ec44:	fnsave [esi+0x2175f3ca]
  40ec4a:	(bad)  
  40ec4b:	dec    ebp
  40ec4c:	(bad)  
  40ec4d:	jmp    0x40ec87
  40ec4f:	mov    esi,0x9b18353e
  40ec54:	not    BYTE PTR [eax+eax*8-0x5f]
  40ec58:	pushf  
  40ec59:	push   es
  40ec5a:	icebp  
  40ec5b:	lods   al,BYTE PTR ds:[esi]
  40ec5c:	retf   
  40ec5d:	add    al,0x46
  40ec5f:	adc    BYTE PTR [eax-0x2d],0x74
  40ec63:	dec    edi
  40ec64:	test   al,0xb6
  40ec66:	dec    ebx
  40ec67:	fidivr WORD PTR [esi-0x72]
  40ec6a:	mov    al,gs:0x33ec5641
  40ec70:	gs cmc 
  40ec72:	push   edx
  40ec73:	fwait
  40ec74:	inc    edx
  40ec75:	mov    al,0x92
  40ec77:	xchg   esp,eax
  40ec78:	aam    0xd2
  40ec7a:	(bad)  
  40ec7c:	into   
  40ec7d:	mov    ah,0x9c
  40ec7f:	cwde   
  40ec80:	inc    esi
  40ec81:	or     ecx,edi
  40ec83:	push   ecx
  40ec84:	call   0x580f9966
  40ec89:	cs mov ah,bl
  40ec8c:	rol    DWORD PTR [ecx],0xe7
  40ec8f:	add    bh,ch
  40ec91:	mov    ?,eax
  40ec93:	mov    eax,0x71fa799e
  40ec98:	into   
  40ec99:	add    BYTE PTR [eax-0x69fcc089],dh
  40ec9f:	test   DWORD PTR [esp+eiz*2-0x76],ebx
  40eca3:	arpl   WORD PTR [eax+esi*4-0x19],ax
  40eca7:	xchg   ebx,eax
  40eca8:	sub    BYTE PTR [esi],0x48
  40ecab:	out    dx,eax
  40ecac:	jns    0x40ecdd
  40ecae:	mov    esp,0x866a4a27
  40ecb3:	sub    edi,DWORD PTR ds:0x51a64e92
  40ecb9:	mov    esp,0xd1b31fb6
  40ecbe:	fiadd  WORD PTR [esp+edi*1-0x76cb09d5]
  40ecc5:	dec    edx
  40ecc6:	inc    esi
  40ecc7:	call   0xc089:0xb043ecac
  40ecce:	aas    
  40eccf:	aad    0x86
  40ecd1:	pop    esi
  40ecd2:	xchg   edi,eax
  40ecd3:	(bad)  
  40ecd4:	stos   BYTE PTR es:[edi],al
  40ecd5:	jg     0x40ece2
  40ecd7:	dec    ebx
  40ecd8:	sub    BYTE PTR [edi],0x27
  40ecdb:	test   DWORD PTR cs:[eax],edx
  40ecde:	jp     0x40eccb
  40ece0:	jne    0x40ec86
  40ece2:	pop    es
  40ece3:	cdq    
  40ece4:	ins    DWORD PTR es:[edi],dx
  40ece5:	mov    dh,0x9d
  40ece7:	ins    DWORD PTR es:[edi],dx
  40ece8:	and    al,0x91
  40ecea:	jg     0x40ece6
  40ecec:	dec    ecx
  40eced:	(bad)  
  40ecee:	fs cmp ch,al
  40ecf1:	test   eax,0x3ee1fd6c
  40ecf6:	fild   QWORD PTR [ecx+0x66183697]
  40ecfc:	ins    DWORD PTR es:[edi],dx
  40ecfd:	sub    eax,0xa15f3b07
  40ed02:	jbe    0x40ed47
  40ed04:	cld    
  40ed05:	mov    eax,0x91f676e5
  40ed0a:	cdq    
  40ed0b:	pop    ebx
  40ed0c:	xor    esi,ebx
  40ed0e:	and    dh,BYTE PTR [esi]
  40ed10:	(bad)  ds:0x885cd03d
  40ed16:	xchg   edx,eax
  40ed17:	call   0xbb4a80b8
  40ed1c:	sar    BYTE PTR [ebx+0x38],1
  40ed1f:	jno    0x40ed82
  40ed21:	(bad)  
  40ed22:	aam    0xad
  40ed24:	mov    ecx,0x79cba636
  40ed29:	adc    al,0xe0
  40ed2c:	inc    esi
  40ed2d:	jmp    0x40ed59
  40ed2f:	push   cs
  40ed30:	outs   dx,BYTE PTR ds:[esi]
  40ed31:	jae    0x40ed03
  40ed33:	add    dh,dh
  40ed35:	push   0x77d2e197
  40ed3a:	jmp    0x40ecf9
  40ed3c:	xchg   ebp,eax
  40ed3d:	xchg   BYTE PTR [edx+0x2a],dl
  40ed40:	pop    edi
  40ed41:	fs add eax,0xc1c8227
  40ed47:	cdq    
  40ed48:	dec    esi
  40ed49:	enter  0xf849,0x6b
  40ed4d:	in     eax,dx
  40ed4e:	or     eax,0x4f7b2df9
  40ed53:	or     ebx,DWORD PTR [esi-0x2b]
  40ed56:	push   eax
  40ed57:	dec    ecx
  40ed58:	(bad)  
  40ed59:	loope  0x40ece1
  40ed5b:	pop    esi
  40ed5c:	jg     0x40ecee
  40ed5e:	call   0xd1e7edb1
  40ed63:	sbb    dh,0x68
  40ed66:	jb     0x40ed88
  40ed68:	cmp    dl,BYTE PTR [edx+ecx*4-0x69]
  40ed6c:	mov    edx,0x137393e1
  40ed71:	das    
  40ed72:	inc    eax
  40ed73:	and    cl,BYTE PTR [esi]
  40ed75:	push   ds
  40ed76:	je     0x40ed99
  40ed78:	and    al,0xcb
  40ed7a:	mov    ecx,DWORD PTR [esi+0x2fd62219]
  40ed80:	gs jae 0x40edca
  40ed83:	push   ebp
  40ed84:	mov    ebx,0x4de4916c
  40ed89:	mov    BYTE PTR [ebx-0x4],bh
  40ed8c:	xor    DWORD PTR [eax],0x4b
  40ed8f:	ja     0x40edba
  40ed91:	push   ecx
  40ed92:	arpl   WORD PTR [ebp-0x4ceb9f8d],di
  40ed98:	mov    ah,0xa9
  40ed9a:	mov    edi,0x9cbc9eb5
  40ed9f:	cs aad 0xbc
  40eda2:	xor    bl,BYTE PTR [esi]
  40eda4:	fcmovnu st,st(6)
  40eda6:	mov    al,dh
  40eda8:	xor    DWORD PTR [ebp+0x2992f87a],ebp
  40edae:	pop    ebp
  40edaf:	sub    al,0x53
  40edb1:	loop   0x40ed4a
  40edb3:	stos   BYTE PTR es:[edi],al
  40edb4:	xor    BYTE PTR ds:0xb2a423ea,al
  40edba:	(bad)  
  40edbc:	push   esp
  40edbd:	ret    
  40edbe:	cmp    BYTE PTR [ecx-0x61a0be4b],cl
  40edc4:	jmp    0x715f6650
  40edc9:	push   ebx
  40edca:	(bad)  [edx]
  40edcc:	inc    esp
  40edcd:	sbb    al,0x48
  40edcf:	ja     0x40ee11
  40edd1:	mov    WORD PTR [edx+0x16],?
  40edd4:	in     al,0xac
  40edd6:	or     ebp,ebp
  40edd8:	xor    BYTE PTR [edx+eiz*8+0x38],bh
  40eddc:	js     0x40edd5
  40edde:	aam    0xb1
  40ede0:	or     eax,0x4ebc0f18
  40ede5:	sti    
  40ede6:	stos   BYTE PTR es:[edi],al
  40ede7:	out    dx,al
  40ede8:	adc    ebp,ebx
  40edea:	and    al,0x1c
  40edec:	mov    ah,0x19
  40edee:	lea    edi,[edx]
  40edf0:	call   0xabdb09a8
  40edf5:	xor    BYTE PTR [ebx+0x1],ah
  40edf8:	iret   
  40edf9:	imul   edx,ebx,0x162e6ca4
  40edff:	xor    DWORD PTR [ebx],esp
  40ee01:	stc    
  40ee02:	pop    ecx
  40ee03:	add    eax,0xd3a2c6b7
  40ee08:	je     0x40ee61
  40ee0a:	sbb    DWORD PTR [edi],eax
  40ee0c:	cmc    
  40ee0d:	and    cl,BYTE PTR [ebx+esi*1]
  40ee10:	mov    ds:0xea531b79,eax
  40ee15:	idiv   bh
  40ee17:	pop    es
  40ee18:	push   esp
  40ee19:	pop    eax
  40ee1a:	or     al,0x8
  40ee1c:	xor    eax,0x1ffc8fff
  40ee21:	pop    ebp
  40ee22:	mov    bh,cl
  40ee24:	bound  ebx,QWORD PTR cs:[edx]
  40ee27:	or     BYTE PTR [eax],ch
  40ee29:	mov    ebp,0x49e38583
  40ee2e:	and    eax,0x5428507a
  40ee33:	and    eax,0x83919045
  40ee38:	xchg   BYTE PTR ds:0x5ae47394,ah
  40ee3e:	push   eax
  40ee3f:	jecxz  0x40ee1d
  40ee41:	out    dx,al
  40ee42:	rcr    DWORD PTR [edi+0x26611a28],cl
  40ee48:	ins    DWORD PTR es:[edi],dx
  40ee49:	out    0xaf,eax
  40ee4b:	jo     0x40ede9
  40ee4d:	popf   
  40ee4e:	mov    cs,esi
  40ee50:	jp     0x40ee4b
  40ee52:	jge    0x40ee43
  40ee54:	mov    edx,0xe8d0c048
  40ee59:	jecxz  0x40ee02
  40ee5b:	sub    al,0x5f
  40ee5d:	push   ecx
  40ee5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee5f:	jo     0x40eeab
  40ee61:	fldcw  WORD PTR [esp+eax*8]
  40ee64:	pushf  
  40ee65:	mov    dh,0x25
  40ee67:	clc    
  40ee68:	pop    eax
  40ee69:	cdq    
  40ee6a:	js     0x40ee80
  40ee6c:	mov    eax,0x7067ca87
  40ee71:	push   cs
  40ee72:	inc    esp
  40ee73:	scas   al,BYTE PTR es:[edi]
  40ee74:	mov    ah,0xdb
  40ee76:	and    al,BYTE PTR [edi]
  40ee78:	sti    
  40ee79:	fsubp  st(0),st
  40ee7b:	sbb    bh,ch
  40ee7d:	outs   dx,DWORD PTR ds:[esi]
  40ee7e:	enter  0xc085,0x7c
  40ee82:	jns    0x40eecd
  40ee84:	pusha  
  40ee85:	lods   eax,DWORD PTR ds:[esi]
  40ee86:	cmp    BYTE PTR [ecx-0x23],0xd1
  40ee8a:	outs   dx,DWORD PTR ds:[esi]
  40ee8b:	lahf   
  40ee8c:	xor    esp,DWORD PTR [ebx+0x34]
  40ee8f:	clc    
  40ee90:	retf   0x374a
  40ee93:	dec    ebx
  40ee94:	pop    ebp
  40ee95:	sbb    ebp,eax
  40ee97:	mov    eax,0xbb9fd170
  40ee9c:	dec    ebp
  40ee9d:	test   BYTE PTR ds:[ecx],cl
  40eea0:	in     al,0xa8
  40eea2:	ins    DWORD PTR es:[edi],dx
  40eea3:	mov    edi,0xb79b0005
  40eea8:	fcmovnb st,st(6)
  40eeaa:	inc    edi
  40eeab:	out    dx,al
  40eeac:	xchg   DWORD PTR [esi+0x590bfa49],esp
  40eeb2:	push   esp
  40eeb3:	(bad)  
  40eeb4:	fidiv  WORD PTR [edi-0x6865b51d]
  40eeba:	imul   ecx,ebp,0xf9380f69
  40eec0:	daa    
  40eec1:	push   esp
  40eec2:	jnp    0x40ee96
  40eec4:	mov    ebp,0x2b1d03cb
  40eec9:	xchg   esi,eax
  40eeca:	add    eax,0x62e68a69
  40eecf:	leave  
  40eed0:	xchg   ebx,eax
  40eed1:	pop    eax
  40eed2:	repz pop ss
  40eed4:	fisubr WORD PTR [ebx]
  40eed6:	dec    ebp
  40eed7:	add    al,0x6c
  40eed9:	leave  
  40eeda:	adc    edx,ebx
  40eedc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eedd:	jp     0x40eefc
  40eedf:	adc    ah,ch
  40eee1:	cmp    DWORD PTR [ebp+0x4ac5d10f],ecx
  40eee7:	iret   
  40eee8:	add    dl,ah
  40eeea:	jl     0x40eefc
  40eeec:	pop    ebx
  40eeed:	sar    DWORD PTR [ebx+0x59],0x77
  40eef1:	fisub  DWORD PTR [ebx-0x36]
  40eef4:	mov    ds:0xf4ca54f,al
  40eef9:	sbb    BYTE PTR [ebp+0x1e],ah
  40eefc:	inc    edx
  40eefd:	pop    eax
  40eefe:	push   ds
  40eeff:	sti    
  40ef00:	push   ecx
  40ef01:	ja     0x40ef2f
  40ef03:	jb     0x40ef34
  40ef05:	not    eax
  40ef07:	outs   dx,BYTE PTR ds:[esi]
  40ef08:	aad    0x21
  40ef0a:	stos   DWORD PTR es:[edi],eax
  40ef0b:	jmp    FWORD PTR [si+0x550d]
  40ef10:	addr16 push 0x6f
  40ef13:	xor    bh,BYTE PTR [eax]
  40ef15:	push   ebp
  40ef16:	push   0x1d134234
  40ef1b:	or     al,0xdb
  40ef1d:	mov    ecx,0x30028b33
  40ef22:	dec    edi
  40ef23:	fwait
  40ef24:	std    
  40ef25:	out    dx,eax
  40ef26:	mov    BYTE PTR [ecx+0x4414208d],0x82
  40ef2d:	sahf   
  40ef2e:	jnp    0x40eeb2
  40ef30:	xchg   BYTE PTR ds:0x390f4ff7,ch
  40ef36:	aaa    
  40ef37:	lahf   
  40ef38:	pop    esi
  40ef39:	jg     0x40ef9c
  40ef3b:	call   0x8e13529b
  40ef40:	jle    0x40ef73
  40ef42:	mov    eax,0x43164573
  40ef47:	lds    ebx,FWORD PTR [edx]
  40ef49:	sbb    ecx,DWORD PTR [edx-0x5f]
  40ef4c:	inc    ebx
  40ef4d:	and    al,0xd8
  40ef4f:	bound  ebp,QWORD PTR [ecx]
  40ef51:	lock mov ds:0x73a9fe5e,eax
  40ef57:	add    DWORD PTR [ebp+0x58],edx
  40ef5a:	out    dx,al
  40ef5b:	test   DWORD PTR [ebp+edx*1+0x57e47898],esp
  40ef62:	and    eax,0x7d8a8b8f
  40ef67:	adc    cl,bl
  40ef69:	fwait
  40ef6a:	pop    edx
  40ef6b:	push   edx
  40ef6c:	mov    ebp,0x2bcf8f7b
  40ef71:	inc    esp
  40ef72:	repnz mov ah,BYTE PTR [edx-0x14]
  40ef76:	cmc    
  40ef77:	pop    esp
  40ef78:	mov    al,ds:0xa6846621
  40ef7d:	shl    ch,1
  40ef7f:	fisub  WORD PTR [edi-0x7d4a4307]
  40ef85:	cmc    
  40ef86:	and    al,0xba
  40ef88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef89:	or     al,0x8
  40ef8b:	mov    al,ds:0x7286d594
  40ef90:	jmp    0x40ef69
  40ef92:	mov    ebx,DWORD PTR [ecx-0x4cf98890]
  40ef98:	inc    esi
  40ef99:	sub    DWORD PTR [edx-0x6b],edi
  40ef9c:	pop    ds
  40ef9d:	add    al,0xed
  40ef9f:	adc    BYTE PTR [ebx+0x371c9294],0xf4
  40efa6:	(bad)  
  40efa7:	mul    DWORD PTR [edx+0x3f2db98d]
  40efad:	mov    BYTE PTR [ebp-0x12],ah
  40efb0:	add    dl,0xf0
  40efb3:	jne    0x40efa2
  40efb5:	jecxz  0x40efc3
  40efb7:	scas   eax,DWORD PTR es:[edi]
  40efb8:	fistp  DWORD PTR [edi-0x49e49592]
  40efbe:	xlat   BYTE PTR ds:[ebx]
  40efbf:	outs   dx,BYTE PTR ds:[esi]
  40efc0:	hlt    
  40efc1:	pop    esi
  40efc2:	loop   0x40ef72
  40efc4:	xchg   ebp,eax
  40efc5:	lea    ecx,[esi-0x934056a]
  40efcb:	pop    edi
  40efcc:	scas   eax,DWORD PTR es:[edi]
  40efcd:	imul   eax,esp,0x5e
  40efd0:	sbb    al,0x94
  40efd2:	mov    eax,ds:0x62b948ad
  40efd7:	not    edi
  40efd9:	and    eax,edi
  40efdb:	movsx  di,BYTE PTR [eax+0x1]
  40efe0:	mov    ebx,0x3b50
  40efe5:	sub    di,bx
  40efe8:	mov    ebx,0x8a8c
  40efed:	xor    di,bx
  40eff0:	mov    ebx,0x4f86
  40eff5:	cmp    di,bx
  40eff8:	jne    0x40f020
  40effe:	movsx  di,BYTE PTR [eax]
  40f002:	mov    ebx,0x3b50
  40f007:	sub    di,bx
  40f00a:	mov    ebx,0x8a8c
  40f00f:	xor    di,bx
  40f012:	mov    ebx,0x4e71
  40f017:	cmp    di,bx
  40f01a:	je     0x40f030
  40f020:	mov    edi,DWORD PTR [ebp-0x10]
  40f023:	xor    edi,ecx
  40f025:	mov    ebx,esi
  40f027:	sub    ebx,edi
  40f029:	add    eax,ebx
  40f02b:	jmp    0x40efdb
  40f030:	mov    esi,DWORD PTR [ebp-0x14]
  40f033:	mov    esi,DWORD PTR [esi]
  40f035:	mov    edi,DWORD PTR [eax+0x3c]
  40f038:	lea    esi,[edi+esi*8+0x78]
  40f03c:	mov    esi,DWORD PTR [esi+eax*1]
  40f03f:	mov    DWORD PTR [ebp-0x8],esi
  40f042:	mov    esi,DWORD PTR [ebp+0x8]
  40f045:	xor    esi,ecx
  40f047:	add    esi,edx
  40f049:	mov    DWORD PTR [ebp-0x14],esi
  40f04c:	mov    esi,DWORD PTR [ebp+0x8]
  40f04f:	mov    edi,DWORD PTR [ebp-0x8]
  40f052:	xor    esi,ecx
  40f054:	add    esi,edx
  40f056:	pop    ebx
  40f057:	cmp    edi,esi
  40f059:	jne    0x40f077
  40f05f:	mov    eax,DWORD PTR [ebp+0xc]
  40f062:	xor    eax,ecx
  40f064:	mov    ecx,DWORD PTR [ebp-0x8]
  40f067:	add    eax,edx
  40f069:	imul   eax,ecx
  40f06c:	mov    DWORD PTR [ebp-0x8],eax
  40f06f:	push   DWORD PTR [ebp+0x18]
  40f072:	jmp    0x40f0cb
  40f077:	mov    ecx,DWORD PTR [ebp-0x8]
  40f07a:	add    ecx,eax
  40f07c:	mov    DWORD PTR [ebp-0x14],ecx
  40f07f:	mov    ecx,DWORD PTR [ebp-0x14]
  40f082:	mov    ecx,DWORD PTR [ecx+0xc]
  40f085:	movsx  cx,BYTE PTR [ecx+eax*1]
  40f08a:	mov    edx,0x3b50
  40f08f:	sub    cx,dx
  40f092:	mov    edx,0x8a8c
  40f097:	xor    cx,dx
  40f09a:	mov    edx,0x4e77
  40f09f:	cmp    cx,dx
  40f0a2:	jne    0x40f06f
  40f0a8:	mov    ecx,DWORD PTR ds:0x42e313
  40f0ae:	mov    ecx,DWORD PTR [ecx+0x198]
  40f0b4:	mov    DWORD PTR [ecx],eax
  40f0b6:	jmp    0x40f0dc
  40f0bb:	mov    ecx,DWORD PTR [ebp+0x18]
  40f0be:	cmp    ecx,0xf89c85b8
  40f0c4:	jne    0x40f0dc
  40f0ca:	push   eax
  40f0cb:	push   DWORD PTR [ebp+0x14]
  40f0ce:	push   DWORD PTR [ebp+0x10]
  40f0d1:	push   DWORD PTR [ebp+0xc]
  40f0d4:	push   DWORD PTR [ebp+0x8]
  40f0d7:	call   0x40c7f6
  40f0dc:	pop    edi
  40f0dd:	pop    esi
  40f0de:	leave  
  40f0df:	ret    0x14
  40f0e2:	push   ebp
  40f0e3:	mov    ebp,esp
  40f0e5:	sub    esp,0xc
  40f0e8:	xor    ecx,ecx
  40f0ea:	push   esi
  40f0eb:	mov    esi,DWORD PTR ds:0x418f55
  40f0f1:	mov    edx,DWORD PTR ds:0x418f5d
  40f0f7:	sub    edx,esi
  40f0f9:	add    esi,DWORD PTR [esi+edx*1]
  40f0fc:	mov    esi,0xf89c85b9
  40f101:	add    DWORD PTR ds:0x42c008,0x5d21
  40f10b:	mov    DWORD PTR [ebp-0x8],esi
  40f10e:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40f115:	push   edi
  40f116:	or     edi,DWORD PTR ds:0x42a014
  40f11c:	mov    eax,eax
  40f11e:	mov    edi,DWORD PTR ds:0x42d000
  40f124:	xor    DWORD PTR ds:0x42a000,edi
  40f12a:	mov    eax,DWORD PTR [ebp-0x4]
  40f12d:	mov    edi,DWORD PTR [ebp-0x8]
  40f130:	mov    ecx,0x7510899
  40f135:	inc    DWORD PTR ds:0x429014
  40f13b:	xor    eax,ecx
  40f13d:	movzx  edx,WORD PTR ds:0x42c018
  40f144:	adc    edx,DWORD PTR ds:0x429028
  40f14a:	mov    DWORD PTR ds:0x42c018,edx
  40f150:	xor    edi,ecx
  40f152:	mov    edx,0x3272e0
  40f157:	and    DWORD PTR ds:0x429028,0x42b018
  40f161:	add    edi,edx
  40f163:	add    eax,edx
  40f165:	imul   eax,edi
  40f168:	movzx  edi,WORD PTR ds:0x42c018
  40f16f:	mov    edi,DWORD PTR [ebp+0xc]
  40f172:	cmp    edi,eax
  40f174:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f17e:	je     0x4115a0
  40f184:	mov    DWORD PTR [ebp-0xc],esi
  40f187:	sub    esi,eax
  40f189:	mov    eax,DWORD PTR [ebp-0xc]
  40f18c:	xor    esi,esi
  40f18e:	add    esi,DWORD PTR ds:0x42d01c
  40f194:	adc    DWORD PTR ds:0x42c008,esi
  40f19a:	mov    esi,DWORD PTR [ebp+0xc]
  40f19d:	xor    eax,ecx
  40f19f:	add    DWORD PTR ds:0x42a014,0x1458
  40f1a9:	lea    eax,[eax*8+0x1939778]
  40f1b0:	xor    DWORD PTR ds:0x429008,0x1867
  40f1ba:	mov    eax,DWORD PTR [esi+eax*1]
  40f1bd:	or     esi,DWORD PTR ds:0x429020
  40f1c3:	mov    DWORD PTR [ebp+0xc],eax
  40f1c6:	mov    eax,DWORD PTR [ebp-0x4]
  40f1c9:	mov    DWORD PTR ds:0x42a004,0x19
  40f1d3:	cmp    DWORD PTR ds:0x42a004,0x0
  40f1da:	je     0x40f224
  40f1e0:	cmp    DWORD PTR ds:0x42a004,0x6
  40f1e7:	jne    0x40f1f8
  40f1ed:	push   0x42e000
  40f1f2:	call   DWORD PTR ds:0x42ecab
  40f1f8:	cmp    DWORD PTR ds:0x42a004,0x7
  40f1ff:	jne    0x40f212
  40f205:	mov    esi,DWORD PTR ds:0x42a004
  40f20b:	dec    esi
  40f20c:	mov    DWORD PTR ds:0x42a004,esi
  40f212:	mov    esi,DWORD PTR ds:0x42a004
  40f218:	dec    esi
  40f219:	mov    DWORD PTR ds:0x42a004,esi
  40f21f:	jmp    0x40f1d3
  40f224:	mov    esi,DWORD PTR [ebp-0x8]
  40f227:	xor    eax,ecx
  40f229:	xor    esi,ecx
  40f22b:	add    esi,edx
  40f22d:	add    eax,edx
  40f22f:	imul   eax,esi
  40f232:	mov    esi,DWORD PTR [ebp+0xc]
  40f235:	cmp    esi,eax
  40f237:	je     0x4115a0
  40f23d:	jmp    0x411585
  40f242:	xor    DWORD PTR [ebx+0x7483b0d9],ebx
  40f248:	aaa    
  40f249:	fwait
  40f24a:	mov    eax,0x205ef52d
  40f24f:	gs dec eax
  40f251:	fiadd  WORD PTR [ebp-0x37]
  40f254:	jp     0x40f2d0
  40f256:	inc    edi
  40f257:	pop    edi
  40f258:	jp     0x40f2d4
  40f25a:	call   0x24d2:0xea281aeb
  40f261:	xlat   BYTE PTR ds:[ebx]
  40f262:	lods   eax,DWORD PTR ds:[esi]
  40f263:	lock fcom DWORD PTR [ebx-0x341d2056]
  40f26a:	loope  0x40f2d8
  40f26c:	enter  0x796,0x64
  40f270:	dec    ebx
  40f271:	push   ebp
  40f272:	imul   edx,DWORD PTR [eax+edx*2-0x37],0xffffffab
  40f277:	mov    cl,0x1e
  40f279:	fld    QWORD PTR [ebx]
  40f27b:	jb     0x40f23f
  40f27d:	jle    0x40f244
  40f27f:	push   ebx
  40f280:	js     0x40f23a
  40f282:	fsubr  DWORD PTR [edi+ecx*4-0x6063917a]
  40f289:	lea    ebx,es:[ebp-0x53]
  40f28d:	fcmovnb st,st(2)
  40f28f:	jnp    0x40f24b
  40f291:	inc    ebp
  40f292:	cmp    al,0x91
  40f294:	or     DWORD PTR [esi+esi*8-0x2b82ef57],esi
  40f29b:	jns    0x40f275
  40f29d:	scas   eax,DWORD PTR es:[edi]
  40f29e:	xchg   ecx,eax
  40f29f:	push   ds
  40f2a0:	push   0x7e6f871b
  40f2a5:	or     ah,BYTE PTR [edx]
  40f2a7:	cld    
  40f2a8:	pop    edi
  40f2a9:	sahf   
  40f2aa:	in     al,0x4e
  40f2ac:	jp     0x40f30e
  40f2ae:	mov    DWORD PTR [edi+0x4a7bf6f7],esp
  40f2b4:	scas   eax,DWORD PTR es:[edi]
  40f2b5:	mov    ecx,0x468dc5b9
  40f2ba:	xchg   esp,eax
  40f2bb:	inc    ecx
  40f2bc:	scas   al,BYTE PTR es:[edi]
  40f2bd:	cli    
  40f2be:	int3   
  40f2bf:	hlt    
  40f2c0:	pop    es
  40f2c1:	pop    eax
  40f2c2:	inc    ebx
  40f2c3:	and    dl,cl
  40f2c5:	pop    esi
  40f2c6:	jmp    0x6192:0x481682b3
  40f2cd:	sub    ch,BYTE PTR [ebx-0x3c]
  40f2d0:	cli    
  40f2d1:	fistp  DWORD PTR [ebp+esi*2-0x16]
  40f2d5:	mov    ebp,0xe3d1568f
  40f2da:	or     ebp,DWORD PTR [edx]
  40f2dc:	jnp    0x40f34b
  40f2de:	mov    cl,BYTE PTR [esi-0x10]
  40f2e1:	loope  0x40f2f8
  40f2e3:	bound  edi,QWORD PTR [ebp+0x42]
  40f2e6:	sbb    BYTE PTR [ebp+ebp*2-0x779b3c20],0x19
  40f2ee:	je     0x40f28f
  40f2f0:	sub    BYTE PTR [edx+0x3c],ch
  40f2f3:	jnp    0x40f281
  40f2f5:	fiadd  WORD PTR [ecx]
  40f2f7:	popf   
  40f2f8:	sub    DWORD PTR gs:[ecx-0xb],esp
  40f2fc:	mov    bh,BYTE PTR [esi+0x32]
  40f2ff:	mov    dh,0x6
  40f301:	xor    BYTE PTR [ecx+0x6d],0x4e
  40f305:	fcom   DWORD PTR [eax-0x43636e2a]
  40f30b:	jl     0x40f343
  40f30d:	stos   BYTE PTR es:[edi],al
  40f30e:	mov    eax,0xc27093cf
  40f313:	mov    esi,0x421a8875
  40f318:	shl    esi,0xdc
  40f31b:	mov    WORD PTR [edi-0x576e3800],ss
  40f321:	clc    
  40f322:	xor    eax,ebp
  40f324:	int3   
  40f325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f326:	loop   0x40f2f6
  40f328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f329:	loope  0x40f2fa
  40f32b:	xchg   esi,eax
  40f32c:	cld    
  40f32d:	inc    ecx
  40f32e:	jne    0x40f34f
  40f330:	mov    cl,0xe1
  40f332:	pushf  
  40f333:	scas   eax,DWORD PTR es:[edi]
  40f334:	sbb    al,0xe8
  40f336:	or     al,0x1e
  40f338:	add    ecx,DWORD PTR [ecx]
  40f33a:	js     0x40f2f8
  40f33c:	push   DWORD PTR [ecx-0x77fb829b]
  40f342:	xchg   ebx,eax
  40f343:	out    0x91,al
  40f345:	add    BYTE PTR [ebp-0x20],0xcd
  40f349:	mov    ?,WORD PTR [ebx]
  40f34b:	cs arpl dx,si
  40f34e:	mov    esp,DWORD PTR [eax]
  40f350:	(bad)  
  40f351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f352:	pop    ecx
  40f353:	and    BYTE PTR [esi-0x1b],bh
  40f356:	outs   dx,DWORD PTR ds:[esi]
  40f357:	retf   0x76c1
  40f35a:	push   ebp
  40f35b:	aas    
  40f35c:	xchg   ecx,eax
  40f35d:	repz rcl DWORD PTR [edx+0x4b],0x3
  40f362:	xor    dl,bl
  40f364:	mov    ebp,0x44c865bc
  40f369:	mov    eax,0x2c1d43b8
  40f36e:	mov    ds:0xecd7cc6f,eax
  40f373:	and    ebx,DWORD PTR [esi]
  40f375:	push   0x11e167db
  40f37a:	not    al
  40f37c:	fwait
  40f37d:	sub    al,0xe1
  40f37f:	pusha  
  40f380:	sbb    DWORD PTR [ecx+0x7c],ebx
  40f383:	shl    DWORD PTR [ecx+ebp*2-0x6a4d359],0x47
  40f38b:	pop    ss
  40f38c:	stc    
  40f38d:	test   eax,0xcc5f4388
  40f392:	into   
  40f393:	dec    ebp
  40f394:	mov    eax,ds:0x60ed5a5a
  40f399:	int    0x94
  40f39b:	or     al,0x26
  40f39d:	aaa    
  40f39e:	sbb    dh,ch
  40f3a0:	(bad)  
  40f3a1:	stos   BYTE PTR es:[edi],al
  40f3a2:	int3   
  40f3a3:	in     eax,0x14
  40f3a5:	xchg   BYTE PTR [edx-0x25],ah
  40f3a8:	out    dx,eax
  40f3a9:	not    BYTE PTR [ebp-0x218a0b5d]
  40f3af:	fbstp  TBYTE PTR [edi]
  40f3b1:	in     al,dx
  40f3b2:	pop    edx
  40f3b3:	inc    ebx
  40f3b4:	das    
  40f3b5:	stos   DWORD PTR es:[edi],eax
  40f3b6:	imul   ecx,DWORD PTR [edi],0x7fcceefc
  40f3bc:	dec    edi
  40f3bd:	and    eax,0x7ef7fe82
  40f3c2:	(bad)  
  40f3c3:	loop   0x40f366
  40f3c5:	nop    DWORD PTR [esi-0x7e215aa3]
  40f3cc:	xchg   ebx,eax
  40f3cd:	dec    ebp
  40f3ce:	xchg   ebx,eax
  40f3cf:	mov    dh,0xf4
  40f3d1:	xor    edi,esp
  40f3d3:	jmp    0x40f369
  40f3d5:	mov    edx,DWORD PTR [edx+0x528ad26e]
  40f3db:	mov    bl,0xe
  40f3dd:	pop    esi
  40f3de:	dec    ecx
  40f3df:	cmp    esi,DWORD PTR [ebx]
  40f3e1:	sbb    edx,esp
  40f3e3:	std    
  40f3e4:	cmp    ch,cl
  40f3e6:	pop    esi
  40f3e7:	jnp    0x40f3f8
  40f3e9:	(bad)  
  40f3ea:	sub    BYTE PTR [ebx+edi*2],ah
  40f3ed:	jnp    0x40f3ac
  40f3ef:	sbb    eax,0x1e08c274
  40f3f4:	gs push 0x83ec963c
  40f3fa:	test   DWORD PTR [esi],0x7126a9f5
  40f400:	cmc    
  40f401:	jp     0x40f46d
  40f403:	adc    al,0xe8
  40f405:	or     dh,BYTE PTR [ecx-0x60]
  40f408:	mov    cl,0x40
  40f40a:	cli    
  40f40b:	nop
  40f40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f40d:	xlat   BYTE PTR ds:[ebx]
  40f40e:	inc    esp
  40f40f:	fwait
  40f410:	mov    esi,0xd17b175b
  40f415:	cwde   
  40f416:	js     0x40f467
  40f418:	dec    ebp
  40f419:	jge    0x40f496
  40f41b:	jnp    0x40f3ff
  40f41d:	mov    ebp,0x6b8e97b0
  40f422:	mov    dh,BYTE PTR [edx+0x7d]
  40f425:	xlat   BYTE PTR ds:[ebx]
  40f426:	out    dx,al
  40f427:	daa    
  40f428:	shl    BYTE PTR [ecx],0xd
  40f42b:	(bad)  
  40f42c:	rol    DWORD PTR [edx-0x4c98eae6],0xd6
  40f433:	mov    al,ds:0xed101b40
  40f438:	add    cl,BYTE PTR [edi]
  40f43a:	imul   eax,DWORD PTR [edx],0xffffffc3
  40f43d:	push   edi
  40f43e:	pop    ss
  40f43f:	bound  eax,QWORD PTR [esp+eax*8-0x77de582b]
  40f446:	fwait
  40f447:	mov    ecx,0x845896e
  40f44c:	mov    bh,0x2b
  40f44e:	jns    0x40f3f6
  40f450:	xchg   edx,eax
  40f451:	sub    dh,BYTE PTR [edi-0x39ffd8df]
  40f457:	in     al,0xd8
  40f459:	pop    edi
  40f45a:	sbb    al,0xab
  40f45c:	bound  ecx,QWORD PTR [ebx-0x38]
  40f45f:	out    0xd2,al
  40f461:	add    BYTE PTR [ebx-0x31d949dc],ah
  40f467:	push   edx
  40f468:	add    DWORD PTR [ecx*8-0x6539b6c6],ecx
  40f46f:	loope  0x40f459
  40f471:	(bad)
  40f474:	mov    ch,0x11
  40f476:	dec    ebp
  40f477:	and    DWORD PTR [eax-0x5b6a8a24],esp
  40f47d:	int    0x88
  40f47f:	or     eax,0xbe493509
  40f484:	pop    ss
  40f485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f486:	jae    0x40f451
  40f488:	sahf   
  40f489:	rol    ecx,cl
  40f48b:	test   DWORD PTR [ecx+0x40],ebp
  40f48e:	loope  0x40f4ee
  40f490:	je     0x40f4f9
  40f492:	jmp    0x40f4bf
  40f494:	ds inc ecx
  40f496:	pop    ss
  40f497:	(bad)  
  40f498:	xchg   esp,eax
  40f499:	jne    0x40f43c
  40f49b:	je     0x40f4c2
  40f49d:	hlt    
  40f49e:	xor    ebx,DWORD PTR [edx+ebx*8-0xf]
  40f4a2:	outs   dx,DWORD PTR ds:[esi]
  40f4a3:	popf   
  40f4a4:	rcl    DWORD PTR [ebx-0x65],1
  40f4a7:	fisttp WORD PTR [edx+0x1cfbfa5c]
  40f4ad:	xchg   edx,eax
  40f4ae:	or     ebx,DWORD PTR [edi+0x2d]
  40f4b1:	test   BYTE PTR [ebp+eiz*8-0x2163cd75],ch
  40f4b8:	les    ebp,FWORD PTR [ecx+0x40]
  40f4bb:	jo     0x40f512
  40f4bd:	(bad)  
  40f4be:	sbb    edx,ecx
  40f4c0:	mov    ah,0x2
  40f4c2:	xor    BYTE PTR [ecx+eax*8-0x43],bl
  40f4c6:	lods   al,BYTE PTR ds:[esi]
  40f4c7:	fist   DWORD PTR [esp+edx*8+0x32a11ab7]
  40f4ce:	imul   edi,DWORD PTR ds:0x21c3f3bb,0x9a49d143
  40f4d8:	or     al,0x99
  40f4da:	scas   al,BYTE PTR es:[edi]
  40f4db:	out    0x29,eax
  40f4dd:	cmp    BYTE PTR [ecx-0x4534da86],al
  40f4e3:	xor    BYTE PTR [esi],ch
  40f4e5:	add    eax,0xbc540e7f
  40f4ea:	dec    ebp
  40f4eb:	out    dx,al
  40f4ec:	repz or BYTE PTR [eax+0x4516e285],bl
  40f4f3:	dec    ebx
  40f4f4:	data16 adc BYTE PTR [eax+0x61],ch
  40f4f8:	inc    esi
  40f4f9:	pop    ebx
  40f4fa:	push   0xe12227af
  40f4ff:	push   ds
  40f500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f501:	push   eax
  40f502:	fs pop ss
  40f504:	xor    BYTE PTR [ecx],bh
  40f506:	fild   DWORD PTR [ecx]
  40f508:	or     dl,BYTE PTR [edi]
  40f50a:	add    ah,bh
  40f50c:	(bad)  
  40f50d:	mov    al,0x67
  40f50f:	sahf   
  40f510:	jecxz  0x40f53f
  40f512:	(bad)  
  40f513:	loop   0x40f4a8
  40f515:	cmc    
  40f516:	mov    WORD PTR [ecx],ss
  40f518:	in     eax,0xd2
  40f51a:	pop    eax
  40f51b:	inc    eax
  40f51c:	pop    ebp
  40f51d:	sbb    ch,dh
  40f51f:	call   0xcf1a:0x333d3e11
  40f526:	dec    edi
  40f527:	inc    ebp
  40f528:	shl    BYTE PTR [ebp-0x3f],cl
  40f52b:	addps  xmm1,XMMWORD PTR [ebx]
  40f52e:	or     DWORD PTR [eax-0x19],esi
  40f531:	push   0x91020ee7
  40f536:	rol    dl,1
  40f538:	nop
  40f539:	mov    esp,DWORD PTR [ebx]
  40f53b:	sub    ebx,DWORD PTR cs:[ebp+0x29]
  40f53f:	xlat   BYTE PTR ds:[ebx]
  40f540:	fist   DWORD PTR [ecx+edi*8]
  40f543:	ficom  DWORD PTR [ebp-0x78]
  40f546:	aas    
  40f547:	xchg   ebx,eax
  40f548:	sti    
  40f549:	fcmovnb st,st(4)
  40f54b:	cld    
  40f54c:	fstp   DWORD PTR [eax]
  40f54e:	and    cl,dh
  40f550:	dec    ebx
  40f551:	inc    edx
  40f552:	or     eax,0xb1604b00
  40f557:	dec    ebx
  40f558:	sub    eax,0xbe41cfa5
  40f55d:	lea    esi,[ecx+0x2a]
  40f560:	xor    bh,BYTE PTR [eax+edi*2-0x5d7e3e7a]
  40f567:	mov    cl,0x4d
  40f569:	and    eax,0xd15c760
  40f56e:	out    dx,al
  40f56f:	(bad)  
  40f570:	enter  0x76de,0x37
  40f574:	int3   
  40f575:	dec    esp
  40f576:	shr    BYTE PTR [ebx-0x6ec8d290],cl
  40f57c:	lahf   
  40f57d:	(bad)  
  40f57f:	push   ebx
  40f580:	outs   dx,BYTE PTR ds:[esi]
  40f581:	std    
  40f582:	push   ecx
  40f583:	mov    eax,0x1645b829
  40f588:	and    dl,BYTE PTR [esp+eax*4]
  40f58b:	mov    ebx,0x2805d82b
  40f590:	jno    0x40f5e5
  40f592:	push   eax
  40f593:	ins    DWORD PTR es:[edi],dx
  40f594:	inc    ebp
  40f595:	out    dx,eax
  40f596:	mov    dh,0x27
  40f598:	pushf  
  40f599:	in     al,0x50
  40f59b:	addr16 dec eax
  40f59d:	cmp    al,0x50
  40f59f:	push   ecx
  40f5a0:	outs   dx,BYTE PTR ds:[esi]
  40f5a1:	fcomp  st(7)
  40f5a3:	arpl   WORD PTR [ebx-0x43a52eaa],cx
  40f5a9:	xor    DWORD PTR [esi+eiz*2-0x6589c5],esp
  40f5b0:	retf   
  40f5b1:	test   al,0xe2
  40f5b3:	loopne 0x40f620
  40f5b5:	inc    edi
  40f5b6:	mov    eax,ss:0x467dedd3
  40f5bc:	and    al,0xce
  40f5be:	push   esi
  40f5bf:	ficomp WORD PTR ds:0x3aeb72c1
  40f5c5:	and    BYTE PTR [eax+0x7c],dh
  40f5c8:	popa   
  40f5c9:	cmp    DWORD PTR [ebx],esi
  40f5cb:	data16 aad 0x70
  40f5ce:	popf   
  40f5cf:	test   al,0x41
  40f5d1:	sbb    bh,BYTE PTR [edi+0x50754d01]
  40f5d7:	dec    edx
  40f5d8:	stc    
  40f5d9:	lahf   
  40f5da:	rol    BYTE PTR [esi],1
  40f5dc:	jl     0x40f561
  40f5de:	sbb    al,0x9
  40f5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5e1:	sbb    BYTE PTR [eax-0x1b],cl
  40f5e4:	add    esp,ebx
  40f5e6:	not    ecx
  40f5e8:	xor    al,0x11
  40f5ea:	sbb    al,BYTE PTR [ebx+0x63e19216]
  40f5f0:	mov    eax,ds:0xb551fa7e
  40f5f5:	add    cl,BYTE PTR [bx+di]
  40f5f8:	outs   dx,BYTE PTR ds:[esi]
  40f5f9:	push   0xbfd0730e
  40f5fe:	cmp    al,0xec
  40f600:	pushf  
  40f601:	cli    
  40f602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f603:	out    dx,eax
  40f604:	lods   al,BYTE PTR ds:[esi]
  40f605:	inc    ebx
  40f606:	scas   al,BYTE PTR es:[edi]
  40f607:	mov    dl,0xb4
  40f609:	xor    cl,bl
  40f60b:	mov    cs,edi
  40f60d:	fidiv  DWORD PTR [eax+0x10ba4290]
  40f613:	out    0xc7,eax
  40f615:	pop    esi
  40f616:	lock (bad) 
  40f618:	inc    ebx
  40f619:	iret   
  40f61a:	ret    
  40f61b:	jmp    0x6169e655
  40f620:	jno    0x40f5eb
  40f622:	pop    ebx
  40f623:	add    ebp,ebx
  40f625:	outs   dx,BYTE PTR ds:[esi]
  40f626:	mov    edi,0xd28f65e2
  40f62b:	pop    ds
  40f62c:	cmp    ebx,DWORD PTR [esi-0x6b3fb34e]
  40f632:	jb     0x40f5f6
  40f634:	and    BYTE PTR [edx],dl
  40f636:	(bad)  
  40f637:	(bad)  
  40f638:	stc    
  40f639:	shl    bl,cl
  40f63b:	jmp    FWORD PTR [edx-0x24]
  40f63e:	stos   BYTE PTR es:[edi],al
  40f63f:	out    0xd4,al
  40f641:	pop    edi
  40f642:	int    0x76
  40f644:	add    DWORD PTR [eax-0x6a],ecx
  40f647:	push   ecx
  40f648:	mov    ch,0xf5
  40f64a:	arpl   di,ax
  40f64c:	mov    cl,0x64
  40f64e:	nop
  40f64f:	jg     0x40f61d
  40f651:	xlat   BYTE PTR ds:[ebx]
  40f652:	ins    DWORD PTR es:[edi],dx
  40f653:	or     ebp,DWORD PTR ss:[ebp+0x1a97605]
  40f65a:	fnstcw WORD PTR [ebp-0x44]
  40f65d:	and    al,0x55
  40f65f:	sbb    BYTE PTR [edx+0x2c],0xa3
  40f663:	jg     0x40f6b4
  40f665:	lock fnstsw WORD PTR ds:0xe10dffbf
  40f66c:	ins    DWORD PTR es:[edi],dx
  40f66d:	mov    ebx,0x5816ac93
  40f672:	data16 (bad) 
  40f674:	add    BYTE PTR [ecx],ah
  40f676:	hlt    
  40f677:	cs jnp 0x40f617
  40f67a:	cdq    
  40f67b:	retf   0xf2eb
  40f67e:	and    al,BYTE PTR [ebx+0xe33e6f3]
  40f684:	int3   
  40f685:	test   BYTE PTR [esi+0x38],0x81
  40f689:	or     BYTE PTR [ebp+eiz*2+0x207ef666],0xcd
  40f691:	das    
  40f692:	dec    esi
  40f693:	and    eax,0xe35abaf4
  40f698:	scas   al,BYTE PTR es:[edi]
  40f699:	jp     0x40f6ba
  40f69b:	shl    DWORD PTR [ebx-0x1da4867b],0x4e
  40f6a2:	pop    ds
  40f6a3:	(bad)  
  40f6a4:	sbb    BYTE PTR [edx+0x71],bh
  40f6a7:	xor    ebx,eax
  40f6a9:	sub    al,BYTE PTR [esi+0x3811b4a]
  40f6af:	dec    DWORD PTR [edi-0x71]
  40f6b2:	jo     0x40f6ce
  40f6b4:	xlat   BYTE PTR ds:[ebx]
  40f6b5:	xchg   esp,ecx
  40f6b7:	lahf   
  40f6b8:	fistp  DWORD PTR [ecx+0x6d5afdf4]
  40f6be:	mov    ds:0x103cf3f2,eax
  40f6c3:	dec    ebp
  40f6c4:	pop    ebp
  40f6c5:	outs   dx,BYTE PTR ds:[esi]
  40f6c6:	shl    DWORD PTR [eax-0x1a650351],1
  40f6cc:	(bad)  [ecx-0x5e]
  40f6cf:	xchg   ebp,eax
  40f6d0:	(bad)  
  40f6d1:	jmp    0x40f6b4
  40f6d3:	loop   0x40f6da
  40f6d5:	mov    eax,ds:0xa0ab2183
  40f6da:	(bad)  
  40f6dc:	mov    ch,0x69
  40f6de:	ja     0x40f6d7
  40f6e0:	ret    0x14bf
  40f6e3:	xor    BYTE PTR [eax-0x38],bl
  40f6e6:	add    eax,0x6188fc0c
  40f6eb:	jbe    0x40f73a
  40f6ed:	add    edx,DWORD PTR [edx]
  40f6ef:	ret    0x8754
  40f6f2:	push   0x79
  40f6f4:	hlt    
  40f6f5:	mov    DWORD PTR [esi+0x7a0c48e6],esp
  40f6fb:	in     al,0xc9
  40f6fd:	ret    0x643e
  40f700:	xchg   DWORD PTR [ebx],esp
  40f702:	and    eax,0x542429ed
  40f707:	add    cl,BYTE PTR [ecx+ecx*2+0x22402d0c]
  40f70e:	ficomp WORD PTR es:[ecx-0x3075905b]
  40f715:	(bad)  
  40f717:	or     ebx,DWORD PTR [edx]
  40f719:	ins    BYTE PTR es:[edi],dx
  40f71a:	cld    
  40f71b:	cdq    
  40f71c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f71d:	pop    esi
  40f71e:	mov    bh,0x61
  40f720:	or     al,0x65
  40f722:	outs   dx,BYTE PTR ds:[esi]
  40f723:	jl     0x40f72c
  40f725:	add    al,0xbc
  40f727:	jb     0x40f784
  40f729:	and    bl,cl
  40f72b:	ins    BYTE PTR es:[edi],dx
  40f72c:	shl    DWORD PTR [esi-0x38],1
  40f72f:	jo     0x40f78f
  40f731:	fisttp DWORD PTR [esp+eax*4-0x29]
  40f735:	push   ss
  40f736:	sub    edi,DWORD PTR [ebx]
  40f738:	push   edx
  40f739:	pop    esi
  40f73a:	stos   DWORD PTR es:[edi],eax
  40f73b:	out    0xde,eax
  40f73d:	pusha  
  40f73e:	xor    DWORD PTR [ecx+0x6f],esi
  40f741:	loopne 0x40f6f8
  40f743:	fstp   DWORD PTR [eax-0x7e]
  40f746:	add    eax,DWORD PTR [eax-0x29e49f78]
  40f74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f74d:	mov    eax,0xb5309aa5
  40f752:	sbb    esi,DWORD PTR [edx]
  40f754:	or     DWORD PTR ds:0x82c7ed44,edx
  40f75a:	or     eax,0x5441b720
  40f75f:	fcomip st,st(0)
  40f761:	mov    ecx,0xcced4db8
  40f766:	jmp    0xf9a4:0x47edcdf5
  40f76d:	xchg   edx,eax
  40f76e:	arpl   sp,sp
  40f770:	repz adc BYTE PTR [esi],dh
  40f773:	xchg   edx,eax
  40f774:	pmulhuw mm7,QWORD PTR [eax]
  40f777:	stos   BYTE PTR es:[edi],al
  40f778:	aaa    
  40f779:	in     al,dx
  40f77a:	notrack call DWORD PTR [ebx]
  40f77d:	scas   eax,DWORD PTR es:[edi]
  40f77e:	rol    bl,cl
  40f780:	repz sbb eax,0xb29a1722
  40f786:	adc    al,0xde
  40f788:	dec    edx
  40f789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f78a:	sbb    eax,0xe96c401
  40f78f:	lahf   
  40f790:	in     al,dx
  40f791:	or     eax,0x982253c1
  40f796:	pop    esi
  40f797:	cmc    
  40f798:	jp     0x40f78a
  40f79a:	ins    DWORD PTR es:[edi],dx
  40f79b:	mov    ebp,0x76e62132
  40f7a0:	call   0x6e62:0xbe406119
  40f7a7:	test   esi,ebp
  40f7a9:	pop    esp
  40f7aa:	push   0x8a2524c
  40f7af:	pushf  
  40f7b0:	push   edx
  40f7b1:	xchg   esp,eax
  40f7b2:	add    bh,al
  40f7b4:	jne    0x40f797
  40f7b6:	test   bh,ah
  40f7b8:	push   es
  40f7b9:	push   ds
  40f7ba:	inc    ecx
  40f7bb:	in     al,0x31
  40f7bd:	push   ds
  40f7be:	mov    BYTE PTR [ebp-0x29],cl
  40f7c1:	aad    0x2b
  40f7c3:	or     eax,0x4b97eff9
  40f7c8:	or     al,0xee
  40f7ca:	das    
  40f7cb:	cwde   
  40f7cc:	aad    0xb4
  40f7ce:	repz adc BYTE PTR [ecx],al
  40f7d1:	outs   dx,BYTE PTR ds:[esi]
  40f7d2:	and    eax,eax
  40f7d4:	xchg   esi,eax
  40f7d5:	mov    dh,0x29
  40f7d7:	clc    
  40f7d8:	shl    BYTE PTR [ebp-0xd024185],cl
  40f7de:	push   edx
  40f7df:	push   ebp
  40f7e0:	das    
  40f7e1:	push   eax
  40f7e2:	sub    ebp,DWORD PTR [ebp+0x4c]
  40f7e5:	call   0xc6d50997
  40f7ea:	mov    DWORD PTR [ecx+0x72],ebx
  40f7ed:	mov    bl,ch
  40f7ef:	in     al,0x81
  40f7f1:	xor    DWORD PTR [ebp+0x52],ebx
  40f7f4:	les    esp,FWORD PTR [ebx+edi*4]
  40f7f7:	xchg   edi,eax
  40f7f8:	aam    0xbc
  40f7fa:	sbb    ebx,ecx
  40f7fc:	xor    eax,0x3cdf4a55
  40f801:	out    dx,al
  40f802:	cmp    al,0x86
  40f804:	loop   0x40f81d
  40f806:	cmp    DWORD PTR [ebx+eiz*2-0x41c72022],0xffffffa2
  40f80e:	pop    ds
  40f80f:	int    0x4c
  40f811:	cld    
  40f812:	ror    DWORD PTR [ebx],cl
  40f814:	mov    BYTE PTR [edx+0x75828d82],dh
  40f81a:	retf   0x51ef
  40f81d:	adc    eax,0xba16cd75
  40f822:	xchg   ebp,eax
  40f823:	cwde   
  40f824:	mov    edi,0xf3403b1b
  40f829:	or     edx,edi
  40f82b:	test   DWORD PTR [eax],edi
  40f82d:	ja     0x40f7f8
  40f82f:	jl     0x40f8a9
  40f831:	xchg   ebp,eax
  40f832:	mov    ebp,esp
  40f834:	adc    al,BYTE PTR [eax-0x4d]
  40f837:	pop    ss
  40f838:	xchg   ebp,eax
  40f839:	jl     0x40f7fc
  40f83b:	(bad)  
  40f83d:	arpl   WORD PTR [ecx+0x6f8d4652],bp
  40f843:	into   
  40f844:	cmp    BYTE PTR [edx+0x7badde36],dh
  40f84a:	pushf  
  40f84b:	cs in  eax,0x6
  40f84e:	mov    ah,0xee
  40f850:	jg     0x40f7fc
  40f852:	(bad)  
  40f853:	dec    bx
  40f855:	jnp    0x40f81f
  40f857:	in     eax,0x84
  40f859:	jl     0x40f7e7
  40f85b:	scas   al,BYTE PTR es:[edi]
  40f85c:	xchg   esp,eax
  40f85d:	sub    eax,0xe3843f5a
  40f862:	out    0xeb,al
  40f864:	sbb    eax,0xcbdf4916
  40f869:	shl    DWORD PTR [edx-0x651260fa],0xdf
  40f870:	sbb    eax,0xe8f0c94e
  40f875:	xor    ebx,ecx
  40f877:	into   
  40f878:	daa    
  40f879:	repz xchg ebx,eax
  40f87b:	sub    eax,0x63336b8b
  40f880:	adc    BYTE PTR [edx+0x29],dl
  40f883:	out    0xea,al
  40f885:	mov    ds,WORD PTR cs:[edx+ecx*2]
  40f889:	ja     0x40f817
  40f88b:	lock leave 
  40f88d:	retf   
  40f88e:	jno    0x40f8ad
  40f890:	inc    edi
  40f891:	in     eax,0x2d
  40f893:	shl    BYTE PTR [ebx],0xef
  40f896:	sub    BYTE PTR [ecx+0x1b],dh
  40f899:	cs inc ebp
  40f89b:	neg    DWORD PTR [ebx+eiz*8+0x6f]
  40f89f:	rcr    edx,1
  40f8a1:	bound  eax,QWORD PTR [esi]
  40f8a3:	pusha  
  40f8a4:	sub    BYTE PTR [ebx-0x7b16bc87],0x14
  40f8ab:	xchg   ecx,eax
  40f8ac:	cmp    eax,0x56c66bfb
  40f8b1:	mov    edi,DWORD PTR ss:[ecx+0x20e5ac3c]
  40f8b8:	pop    edx
  40f8b9:	cmp    eax,DWORD PTR [ebp+0x2f1450ff]
  40f8bf:	mov    al,ds:0xd8ab6f8d
  40f8c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8c5:	inc    edx
  40f8c6:	enter  0xeb78,0xed
  40f8ca:	mov    DWORD PTR [ecx-0x5b],edi
  40f8cd:	fsub   DWORD PTR [edx-0x58]
  40f8d0:	icebp  
  40f8d1:	xor    esi,DWORD PTR [ecx-0x50dce8e4]
  40f8d7:	outs   dx,BYTE PTR ds:[esi]
  40f8d8:	xor    eax,0xa9c21519
  40f8dd:	outs   dx,BYTE PTR ds:[esi]
  40f8de:	and    bl,cl
  40f8e0:	add    DWORD PTR [eax+0xd],ebp
  40f8e3:	das    
  40f8e4:	leave  
  40f8e5:	cmp    edx,DWORD PTR [eax+0x1a]
  40f8e8:	call   0x804f:0xe113d3af
  40f8ef:	leave  
  40f8f0:	cmp    edx,DWORD PTR [edx]
  40f8f2:	sub    BYTE PTR cs:[eax],cl
  40f8f5:	and    eax,0x1cef04a7
  40f8fa:	jnp    0x40f903
  40f8fc:	mov    esi,0xa0ff2f47
  40f901:	mov    bl,0x53
  40f903:	shl    BYTE PTR [eax+0x50],cl
  40f906:	scas   eax,DWORD PTR es:[edi]
  40f907:	adc    dh,dh
  40f909:	pop    edx
  40f90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f90b:	aas    
  40f90c:	fsubrp st(5),st
  40f90e:	mov    ah,BYTE PTR [edx]
  40f910:	cmp    BYTE PTR [edi+0xf96d503],dl
  40f916:	and    cl,BYTE PTR [esi-0x1cd95c29]
  40f91c:	retf   0xa56e
  40f91f:	aaa    
  40f920:	das    
  40f921:	sar    BYTE PTR [edi],1
  40f923:	enter  0xf6a,0xb9
  40f927:	xchg   ebp,eax
  40f928:	inc    ebp
  40f929:	jne    0x40f8cb
  40f92b:	mov    bh,0x36
  40f92d:	rol    DWORD PTR ds:0x144c95bd,1
  40f933:	cmp    eax,DWORD PTR [eax+0x7c]
  40f936:	neg    DWORD PTR ds:0x819b7753
  40f93c:	in     al,dx
  40f93d:	sub    esp,DWORD PTR [ebx+0x1abe8e6d]
  40f943:	ins    DWORD PTR es:[edi],dx
  40f944:	enter  0x80cf,0xe8
  40f948:	ds cld 
  40f94a:	dec    edi
  40f94b:	push   es
  40f94c:	adc    ebx,DWORD PTR [ecx]
  40f94e:	sub    eax,0x362c92b6
  40f953:	in     eax,0xd4
  40f955:	and    eax,0x7158713e
  40f95a:	imul   ebp,esp,0x6d
  40f95d:	or     eax,0xf565fb94
  40f962:	xor    eax,0x3d8b17e4
  40f967:	add    al,BYTE PTR cs:[eax-0x3ad8520a]
  40f96e:	loop   0x40f929
  40f970:	adc    eax,0x926f26cd
  40f975:	jnp    0x40f935
  40f977:	or     cl,BYTE PTR [ecx-0x5b]
  40f97a:	inc    eax
  40f97b:	cmp    eax,0x3caf02c8
  40f980:	cmp    eax,0x87a50205
  40f985:	outs   dx,DWORD PTR ds:[esi]
  40f986:	sub    edi,ebp
  40f988:	inc    ecx
  40f989:	not    DWORD PTR [edx]
  40f98b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f98c:	mov    bh,0xa9
  40f98e:	fidiv  WORD PTR [ebx]
  40f990:	push   esp
  40f991:	and    ah,BYTE PTR [ebp+0x62]
  40f994:	xchg   esp,eax
  40f995:	dec    esi
  40f996:	shl    bl,0x1c
  40f999:	(bad)  
  40f99a:	xor    al,0xc4
  40f99c:	xlat   BYTE PTR ds:[ebx]
  40f99d:	aaa    
  40f99e:	(bad)  
  40f9a0:	cld    
  40f9a1:	neg    edx
  40f9a3:	and    ch,BYTE PTR ds:0x1b8055f3
  40f9a9:	cld    
  40f9aa:	xchg   ecx,eax
  40f9ab:	lock pop ecx
  40f9ad:	cmp    DWORD PTR [ebx+edi*2+0x50da5e70],0xfef5dd9c
  40f9b8:	pop    ss
  40f9b9:	push   DWORD PTR ds:[edi-0x11c5b586]
  40f9c0:	push   es
  40f9c1:	fld    QWORD PTR [ecx-0x1fca1e3f]
  40f9c7:	lock xchg DWORD PTR [esi-0x21],edi
  40f9cb:	jbe    0x40f9ef
  40f9cd:	sahf   
  40f9ce:	shr    ecx,0x4a
  40f9d1:	push   esp
  40f9d2:	adc    BYTE PTR [ebx],bh
  40f9d4:	addr16 cwde 
  40f9d6:	and    eax,0x8b66ad8f
  40f9db:	dec    edx
  40f9dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9dd:	cld    
  40f9de:	and    eax,0x649d7508
  40f9e3:	jg     0x40f9d9
  40f9e5:	dec    edx
  40f9e6:	cwde   
  40f9e7:	pop    esi
  40f9e8:	push   ecx
  40f9e9:	fdivrp st(6),st
  40f9eb:	fs sbb al,0x10
  40f9ee:	mov    dh,0xf9
  40f9f0:	fcom   QWORD PTR [edi+0x3b]
  40f9f3:	adc    eax,0xec650e06
  40f9f8:	xchg   ecx,eax
  40f9f9:	mov    ebp,0x86771a65
  40f9fe:	cwde   
  40f9ff:	sbb    dl,BYTE PTR [ebp-0x7386da1d]
  40fa05:	xchg   ebx,eax
  40fa06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa07:	add    ch,BYTE PTR [edi+0x1c6ce077]
  40fa0d:	dec    esp
  40fa0e:	out    0xc2,al
  40fa10:	pop    ss
  40fa11:	xor    edx,DWORD PTR [edx]
  40fa13:	xchg   esp,eax
  40fa14:	pop    ebx
  40fa15:	jnp    0x40fa7b
  40fa17:	jmp    0x35323b5b
  40fa1c:	scas   eax,DWORD PTR es:[edi]
  40fa1d:	mov    esi,0xdfccc42
  40fa22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa23:	inc    edx
  40fa24:	mov    bh,0x1f
  40fa26:	cld    
  40fa27:	jg     0x40faa0
  40fa29:	jb     0x40fa9d
  40fa2b:	jnp    0x40fa97
  40fa2d:	mov    DWORD PTR ds:0x51e254e0,edx
  40fa33:	mov    edx,0x84466910
  40fa38:	xor    BYTE PTR [edx+edx*8],bl
  40fa3b:	cli    
  40fa3c:	mov    cl,0x35
  40fa3e:	pop    esp
  40fa3f:	sub    DWORD PTR [edi],ebp
  40fa41:	ret    
  40fa42:	lock push ebp
  40fa44:	jecxz  0x40fa91
  40fa46:	cmp    eax,DWORD PTR [edi-0xb4c9c98]
  40fa4c:	mov    ah,0x8e
  40fa4e:	aas    
  40fa4f:	and    BYTE PTR ds:0x5354842f,0x22
  40fa56:	or     DWORD PTR [esi-0x3e40b205],ecx
  40fa5c:	add    eax,0x23d49b08
  40fa61:	sub    BYTE PTR [edx-0x67],ah
  40fa64:	shr    DWORD PTR [edx-0x9],cl
  40fa67:	jnp    0x40fa12
  40fa69:	xchg   esp,eax
  40fa6a:	and    al,0x72
  40fa6c:	pop    esi
  40fa6d:	dec    esi
  40fa6e:	call   0xc9785a62
  40fa73:	das    
  40fa74:	xchg   sp,ax
  40fa76:	pop    eax
  40fa77:	scas   al,BYTE PTR es:[edi]
  40fa78:	dec    edi
  40fa79:	shl    ah,cl
  40fa7b:	and    BYTE PTR [edi-0x3f64bdb9],bl
  40fa81:	mov    ecx,0xd89b6908
  40fa86:	ret    0x673a
  40fa89:	and    ebp,DWORD PTR [ebx]
  40fa8b:	and    eax,0x1f1efe20
  40fa90:	mov    dh,0x22
  40fa92:	pop    ebx
  40fa93:	xchg   edi,eax
  40fa94:	clc    
  40fa95:	adc    eax,0xce0ec723
  40fa9a:	dec    esp
  40fa9b:	enter  0x69d1,0x48
  40fa9f:	icebp  
  40faa0:	fnstenv [ecx]
  40faa2:	sbb    esp,ebx
  40faa4:	or     ah,BYTE PTR [esi+0x6c]
  40faa7:	mov    bh,0xd8
  40faa9:	xor    edi,DWORD PTR [ebx-0x2dbe37b4]
  40faaf:	les    ebp,FWORD PTR [ebx]
  40fab1:	fcom   QWORD PTR [eax-0x67aaaf65]
  40fab7:	retf   
  40fab8:	cmp    BYTE PTR ds:0xc1b16998,0xcc
  40fabf:	sub    BYTE PTR [esi],0xc1
  40fac2:	seta   cl
  40fac5:	jecxz  0x40fa47
  40fac7:	loop   0x40fa6a
  40fac9:	xor    al,0x1e
  40facb:	inc    ecx
  40facc:	or     bl,ch
  40face:	sbb    BYTE PTR [ebx+0x45],0xf7
  40fad2:	aaa    
  40fad3:	je     0x40fae1
  40fad5:	ret    0xdb30
  40fad8:	adc    BYTE PTR [esi+0x44c26faa],al
  40fade:	in     al,0xf5
  40fae0:	call   0xc2b0178a
  40fae5:	out    dx,al
  40fae6:	dec    edx
  40fae7:	dec    edi
  40fae8:	aaa    
  40fae9:	sub    DWORD PTR [esi-0x3d27a10a],eax
  40faef:	and    DWORD PTR [eax+0x10],ecx
  40faf2:	stc    
  40faf3:	fild   WORD PTR [esi+0x8]
  40faf6:	std    
  40faf7:	loope  0x40fb76
  40faf9:	js     0x40fb41
  40fafb:	hlt    
  40fafc:	mov    al,ds:0x3d12f78b
  40fb01:	pushf  
  40fb02:	mov    BYTE PTR [esi+0x15aeb93a],0xb1
  40fb09:	bound  edi,QWORD PTR [ecx+0x37c6b7f3]
  40fb0f:	dec    ebx
  40fb10:	(bad)  
  40fb12:	bnd js 0x40faea
  40fb15:	retf   0x683a
  40fb18:	push   ss
  40fb19:	xchg   DWORD PTR [eax-0xe],eax
  40fb1c:	dec    edi
  40fb1d:	ins    DWORD PTR es:[edi],dx
  40fb1e:	xchg   DWORD PTR [ebp-0x41fd1833],edx
  40fb24:	jns    0x40fb64
  40fb26:	adc    ebx,ebx
  40fb28:	sbb    DWORD PTR [esi+eax*4-0x1e],0x69
  40fb2d:	data16 fwait
  40fb2f:	das    
  40fb30:	mov    bl,0xe9
  40fb32:	mov    ch,0x56
  40fb34:	(bad)  
  40fb35:	pop    esp
  40fb36:	add    DWORD PTR [edx-0x3fd195ce],eax
  40fb3c:	and    al,0xe1
  40fb3e:	stos   DWORD PTR es:[edi],eax
  40fb3f:	mov    ds:0x55a1adf9,al
  40fb44:	shl    ch,1
  40fb46:	sbb    al,0xb8
  40fb48:	test   DWORD PTR [ebx+0x35],ebx
  40fb4b:	popf   
  40fb4c:	fild   QWORD PTR [edx-0x24ea7c85]
  40fb52:	mov    ds:0x7bfcbdad,al
  40fb57:	or     al,0xcd
  40fb59:	int3   
  40fb5a:	iret   
  40fb5b:	cmp    ecx,ecx
  40fb5d:	jp     0x40fb6a
  40fb5f:	mov    cl,0x67
  40fb61:	mov    bl,0xc8
  40fb63:	jnp    0x40fbc8
  40fb65:	mov    ecx,0xe221885d
  40fb6a:	jno    0x40fb71
  40fb6c:	stos   BYTE PTR es:[edi],al
  40fb6d:	out    dx,eax
  40fb6e:	addr16 jns 0x40fb72
  40fb71:	out    0xce,al
  40fb73:	lock and edi,DWORD PTR [ebx+0xe]
  40fb77:	xlat   BYTE PTR ds:[ebx]
  40fb78:	mov    ecx,DWORD PTR [edx+0x206e23ef]
  40fb7e:	xor    DWORD PTR [edi],ecx
  40fb80:	and    al,BYTE PTR [eax+ecx*4+0x574ea578]
  40fb87:	imul   ebp,DWORD PTR [ebp+0x13],0xaa85c5e9
  40fb8e:	pop    ecx
  40fb8f:	jg     0x40fb70
  40fb91:	(bad)  
  40fb92:	ja     0x40fb60
  40fb94:	ins    DWORD PTR es:[edi],dx
  40fb95:	inc    esi
  40fb96:	test   DWORD PTR [edx],ecx
  40fb98:	imul   DWORD PTR [ecx-0x74]
  40fb9b:	mov    ch,0x1
  40fb9d:	loopne 0x40fb9f
  40fb9f:	xor    BYTE PTR [esi-0x2ea4c901],ah
  40fba5:	loopne 0x40fb35
  40fba7:	jnp    0x40fbda
  40fba9:	mov    esi,0xa025f1e1
  40fbae:	in     eax,dx
  40fbaf:	out    0x76,al
  40fbb1:	je     0x40fbbc
  40fbb3:	test   eax,0xd957ff3
  40fbb8:	sar    BYTE PTR [ebx],cl
  40fbba:	inc    eax
  40fbbb:	adc    bl,dh
  40fbbd:	pop    es
  40fbbe:	and    al,0x9b
  40fbc0:	mov    eax,0x69b8f1c9
  40fbc5:	call   0x31e4faaa
  40fbca:	bound  edi,QWORD PTR [ecx]
  40fbcc:	xchg   DWORD PTR [esi+0x73654045],edx
  40fbd2:	push   edx
  40fbd3:	xor    al,0xab
  40fbd5:	jmp    0x1ede65b0
  40fbda:	std    
  40fbdb:	push   0xe988e6a
  40fbe0:	mov    al,0x98
  40fbe2:	mov    esp,ebx
  40fbe4:	jmp    0x441293a3
  40fbe9:	mov    ?,WORD PTR [eax]
  40fbeb:	or     al,BYTE PTR [edi+0x7e3fe050]
  40fbf1:	or     bl,BYTE PTR [ebp-0x54f4d362]
  40fbf7:	lods   al,BYTE PTR ds:[esi]
  40fbf8:	push   es
  40fbf9:	and    bl,cl
  40fbfb:	jmp    0xced12d7e
  40fc00:	into   
  40fc01:	mov    BYTE PTR [edi],al
  40fc03:	into   
  40fc04:	adc    eax,0x763e4a91
  40fc09:	inc    edi
  40fc0a:	shl    ch,0xc
  40fc0d:	lock into 
  40fc0f:	jg     0x40fb9b
  40fc11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc12:	shl    BYTE PTR [ecx],1
  40fc14:	xchg   BYTE PTR [edi],ch
  40fc16:	xor    ebx,DWORD PTR [esi]
  40fc18:	into   
  40fc19:	sbb    bh,cl
  40fc1b:	sbb    esp,eax
  40fc1d:	sbb    cl,BYTE PTR es:[ebp+0x681b0e8e]
  40fc24:	sub    al,0xae
  40fc26:	cmp    bl,BYTE PTR [eax+0x60]
  40fc29:	imul   ecx,DWORD PTR [esi+0x48193846],0xb6f8f4c7
  40fc33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc34:	inc    esp
  40fc35:	mov    edx,0xeaeb8a62
  40fc3a:	push   eax
  40fc3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc3c:	repz add edx,DWORD PTR [esi-0x69]
  40fc40:	ja     0x40fbc8
  40fc42:	es scas al,BYTE PTR es:[edi]
  40fc44:	adc    eax,eax
  40fc46:	in     eax,0xd3
  40fc48:	adc    DWORD PTR ds:[esi],ebx
  40fc4b:	pop    ss
  40fc4c:	mov    ah,0xbb
  40fc4e:	shl    BYTE PTR fs:[edi+0x4c],1
  40fc52:	repnz data16 stos BYTE PTR es:[edi],al
  40fc55:	(bad)  
  40fc56:	xchg   ebx,eax
  40fc57:	or     dh,BYTE PTR [esi+0x51]
  40fc5a:	adc    esi,edx
  40fc5c:	test   BYTE PTR [ebx+0x6d],al
  40fc5f:	xor    esp,DWORD PTR ds:0x8a8842e1
  40fc65:	outs   dx,BYTE PTR ds:[esi]
  40fc66:	add    ch,BYTE PTR [edi]
  40fc68:	adc    DWORD PTR [eax],esi
  40fc6a:	push   esp
  40fc6b:	inc    esi
  40fc6c:	out    0xd3,eax
  40fc6e:	mov    al,0x60
  40fc70:	mov    ch,0xbf
  40fc72:	adc    ah,BYTE PTR [edx-0x42]
  40fc75:	lock shl BYTE PTR ds:[edi],0x6f
  40fc7a:	xor    al,0x73
  40fc7c:	scas   al,BYTE PTR es:[edi]
  40fc7d:	xchg   BYTE PTR [edx+0x3b],bl
  40fc80:	dec    esi
  40fc81:	fistp  QWORD PTR ds:0xf69575bc
  40fc87:	scas   al,BYTE PTR es:[edi]
  40fc88:	mov    al,0x54
  40fc8a:	inc    ebp
  40fc8b:	lods   al,BYTE PTR ds:[esi]
  40fc8c:	pop    esp
  40fc8d:	loopne 0x40fcdf
  40fc8f:	mov    es,WORD PTR [edi]
  40fc91:	outs   dx,BYTE PTR ds:[esi]
  40fc92:	jo     0x40fc77
  40fc94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc95:	mov    edx,0x2ac80efc
  40fc9a:	fcom   QWORD PTR [ebx+ecx*2]
  40fc9d:	add    esi,eax
  40fc9f:	fcmovne st,st(3)
  40fca1:	sub    DWORD PTR [edx],ebx
  40fca3:	mov    edx,ecx
  40fca5:	pop    es
  40fca6:	lds    edx,FWORD PTR [ebx]
  40fca8:	js     0x40fc2a
  40fcaa:	popf   
  40fcab:	mov    dh,0x62
  40fcad:	sub    DWORD PTR [edx-0x7f9e657],eax
  40fcb3:	adc    ecx,DWORD PTR [edx-0x61]
  40fcb6:	pop    ebx
  40fcb7:	mov    WORD PTR [ecx-0x24],?
  40fcba:	xlat   BYTE PTR ds:[ebx]
  40fcbb:	imul   edi,esp,0xffffffef
  40fcbe:	add    eax,0x85d61fa2
  40fcc3:	inc    ecx
  40fcc4:	pop    ebp
  40fcc5:	and    BYTE PTR [esi],bl
  40fcc7:	sub    eax,0x9c33dd00
  40fccc:	jb     0x40fce0
  40fcce:	(bad)  
  40fccf:	fidivr WORD PTR [ecx-0xd]
  40fcd2:	cmp    BYTE PTR ss:[esi-0x5705f43a],bh
  40fcd9:	xchg   esp,eax
  40fcda:	push   esi
  40fcdb:	fimul  DWORD PTR [ebx-0x4816a2cb]
  40fce1:	adc    esi,DWORD PTR [edi+0x17c38fb2]
  40fce7:	fucom  st(1)
  40fce9:	ins    BYTE PTR es:[edi],dx
  40fcea:	push   0x9501ee37
  40fcef:	jp     0x40fd2c
  40fcf1:	mov    dl,0x55
  40fcf3:	jp     0x40fcf7
  40fcf5:	iret   
  40fcf6:	xor    eax,0xe217d66f
  40fcfb:	fcmovbe st,st(0)
  40fcfd:	gs adc al,0xc9
  40fd00:	mov    ch,0x3
  40fd02:	daa    
  40fd03:	or     al,0x7
  40fd05:	or     eax,0x352c9953
  40fd0a:	retf   0x7920
  40fd0d:	adc    BYTE PTR [eax-0x4d41f9c4],bh
  40fd13:	cwde   
  40fd14:	pop    edi
  40fd15:	test   al,0x73
  40fd17:	mov    ebp,0x6215ad56
  40fd1c:	data16 loopne 0x40fccd
  40fd1f:	fstp   st(4)
  40fd21:	mov    ebp,0xde705ee9
  40fd26:	push   esi
  40fd27:	sub    BYTE PTR [edi],dl
  40fd29:	lea    ecx,[esi-0x53]
  40fd2c:	imul   esi,esi,0xffffffd7
  40fd2f:	push   cs
  40fd30:	mov    eax,ds:0x818e63d9
  40fd35:	jbe    0x40fd75
  40fd37:	iret   
  40fd38:	cmp    BYTE PTR [esi-0x34e57319],al
  40fd3e:	or     eax,0x99817e78
  40fd43:	add    eax,0x3590d4f7
  40fd48:	daa    
  40fd49:	imul   edi,DWORD PTR [esi-0x1c],0x1d
  40fd4d:	(bad)  
  40fd4f:	ret    
  40fd50:	into   
  40fd51:	in     eax,dx
  40fd52:	outs   dx,DWORD PTR ds:[esi]
  40fd53:	push   0x25a5f0e7
  40fd58:	mov    ds:0xc2cca23,al
  40fd5d:	sbb    eax,DWORD PTR [edi+0x5969b980]
  40fd63:	sub    eax,0x4c2e1d4a
  40fd68:	push   0x43
  40fd6a:	jnp    0x40fdc2
  40fd6c:	jle    0x40fdd1
  40fd6e:	add    bh,BYTE PTR [eax+0x50]
  40fd71:	xchg   esp,eax
  40fd72:	sub    BYTE PTR [edx-0x4f],al
  40fd75:	stc    
  40fd76:	clc    
  40fd77:	mov    cl,dl
  40fd79:	stos   BYTE PTR es:[edi],al
  40fd7a:	add    dl,BYTE PTR [ebp-0x15eeb42a]
  40fd80:	pusha  
  40fd81:	mov    bl,0x37
  40fd83:	push   cs
  40fd84:	mov    ah,0x33
  40fd86:	pop    esi
  40fd87:	call   0x18c1:0x494dc00d
  40fd8e:	add    eax,0x6970fe81
  40fd93:	sbb    eax,0xbbb12aef
  40fd98:	ja     0x40fe10
  40fd9a:	mov    esp,0xb790e88f
  40fd9f:	dec    edx
  40fda0:	push   ebp
  40fda1:	fwait
  40fda2:	ja     0x40fde5
  40fda4:	inc    edi
  40fda5:	mov    ebx,0x540ce15f
  40fdaa:	inc    ebx
  40fdab:	or     eax,0x9901fbaf
  40fdb0:	repnz adc DWORD PTR [esi+eax*4-0x38c5a5eb],ecx
  40fdb8:	mov    eax,0xbc2238fe
  40fdbd:	dec    edi
  40fdbe:	(bad)  
  40fdbf:	dec    edx
  40fdc0:	mov    DWORD PTR [edx+0x5f],esi
  40fdc3:	sub    al,0x6
  40fdc5:	sub    edi,ebp
  40fdc7:	mov    ah,0x38
  40fdc9:	or     bl,BYTE PTR [eax+0x2fed5fa8]
  40fdcf:	sti    
  40fdd0:	mov    bh,0xdf
  40fdd2:	xchg   esi,eax
  40fdd3:	xlat   BYTE PTR ds:[ebx]
  40fdd4:	mov    ebx,0xb9205df9
  40fdd9:	or     bl,al
  40fddb:	mov    BYTE PTR [ecx-0x63bf340e],bl
  40fde1:	adc    eax,DWORD PTR ds:0x27b7e72
  40fde7:	(bad)  
  40fde9:	xor    dl,BYTE PTR [ebx-0x632cbc3e]
  40fdef:	repz add dh,dh
  40fdf2:	pusha  
  40fdf3:	(bad)  
  40fdf4:	xchg   ah,bl
  40fdf6:	fild   DWORD PTR [ecx+0x51]
  40fdf9:	xor    dh,ch
  40fdfb:	xchg   esi,esp
  40fdfd:	(bad)  
  40fdfe:	or     dl,BYTE PTR [ecx+0x57]
  40fe01:	adc    dh,BYTE PTR [edi+0x63]
  40fe04:	jns    0x40fe71
  40fe06:	jae    0x40fdfd
  40fe08:	sbb    eax,0xd8b2c45a
  40fe0d:	and    DWORD PTR [ebx-0x1e],edi
  40fe10:	sub    bh,BYTE PTR [ebx+0x5f575fa4]
  40fe16:	test   BYTE PTR [eax+0x49ced8b1],ah
  40fe1c:	xor    DWORD PTR [ebp+0x73b8cf5f],esi
  40fe22:	call   0xf9f3:0x3f3f26c4
  40fe29:	sti    
  40fe2a:	add    ecx,0x6f
  40fe2d:	repnz dec edi
  40fe2f:	or     BYTE PTR [eax],ah
  40fe31:	sbb    DWORD PTR [edx+0x27b21a38],esp
  40fe37:	std    
  40fe38:	pop    ss
  40fe39:	lods   eax,DWORD PTR ds:[esi]
  40fe3a:	jne    0x40fe68
  40fe3c:	stos   BYTE PTR es:[edi],al
  40fe3d:	es daa 
  40fe3f:	ss lock in al,dx
  40fe42:	mov    ecx,0xf853926e
  40fe47:	sub    eax,0x5868b533
  40fe4c:	call   0xe80b34b2
  40fe51:	pop    ebx
  40fe52:	xchg   ebx,eax
  40fe53:	mov    ecx,0x58048449
  40fe58:	daa    
  40fe59:	sub    DWORD PTR [esi-0x33f64bca],0xbdd57c2a
  40fe63:	xchg   ebx,eax
  40fe64:	xchg   ebx,eax
  40fe65:	pop    ds
  40fe66:	div    DWORD PTR [esi-0x13a4325]
  40fe6c:	ret    
  40fe6d:	cmc    
  40fe6e:	mov    bl,0x24
  40fe70:	jmp    0x1a83:0x4ef74593
  40fe77:	leave  
  40fe78:	sti    
  40fe79:	mov    ds:0xf1e61cde,al
  40fe7e:	mov    ebx,ecx
  40fe80:	pop    eax
  40fe81:	adc    DWORD PTR [ecx-0x71],eax
  40fe84:	mov    ebx,0xe9234ade
  40fe89:	inc    edi
  40fe8a:	sbb    bl,BYTE PTR [esi]
  40fe8c:	outs   dx,DWORD PTR ds:[esi]
  40fe8d:	adc    ecx,ebx
  40fe8f:	stos   BYTE PTR es:[edi],al
  40fe90:	lods   al,BYTE PTR ds:[esi]
  40fe91:	mov    cl,0x4c
  40fe93:	dec    eax
  40fe94:	mov    ch,0x58
  40fe96:	xchg   DWORD PTR [edx+0x7e5f1b5],ecx
  40fe9c:	dec    ebp
  40fe9d:	loopne 0x40fef0
  40fe9f:	ins    DWORD PTR es:[edi],dx
  40fea0:	cld    
  40fea1:	or     dl,BYTE PTR [edx]
  40fea3:	pop    edi
  40fea4:	cli    
  40fea5:	or     ch,0x5b
  40fea8:	adc    eax,DWORD PTR ss:[ebp-0x3ebc4d35]
  40feaf:	(bad)  
  40feb0:	mov    ebx,0x5d8c1044
  40feb5:	jno    0x40feeb
  40feb7:	mov    al,ds:0x8f18b950
  40febc:	dec    ecx
  40febe:	idiv   DWORD PTR [ebx+ecx*2]
  40fec1:	mul    DWORD PTR [edi-0x71]
  40fec4:	cmp    ebx,edx
  40fec6:	ficom  WORD PTR [ecx]
  40fec8:	(bad)  
  40fec9:	dec    BYTE PTR [ebp+0x7b14caa1]
  40fecf:	xor    al,0x73
  40fed1:	mov    bh,0x7e
  40fed3:	aam    0xf0
  40fed5:	mov    al,0x51
  40fed7:	adc    eax,0xd616ba2b
  40fedc:	jb     0x40fed9
  40fede:	retf   
  40fedf:	aad    0xf
  40fee1:	loope  0x40fec6
  40fee3:	fs mov ebp,0x1b1d582a
  40fee9:	push   ebp
  40feea:	push   esi
  40feeb:	push   edx
  40feec:	cdq    
  40feed:	push   edx
  40feee:	pop    ebp
  40feef:	push   esi
  40fef0:	mov    ds:0xdc4234e9,eax
  40fef5:	xor    BYTE PTR [esi-0x48939161],cl
  40fefb:	pop    esi
  40fefc:	sbb    DWORD PTR [edi],edi
  40fefe:	add    BYTE PTR [ecx-0x7f4098d4],dh
  40ff04:	es frndint 
  40ff07:	dec    esi
  40ff08:	cwde   
  40ff09:	sub    al,0xd0
  40ff0b:	jo     0x40ff24
  40ff0d:	std    
  40ff0e:	out    dx,al
  40ff0f:	lds    esp,FWORD PTR [eax+0x65]
  40ff12:	lods   al,BYTE PTR ds:[esi]
  40ff13:	pop    ebp
  40ff14:	(bad)  
  40ff15:	in     eax,dx
  40ff16:	or     BYTE PTR ds:0xec411834,cl
  40ff1c:	jbe    0x40ff5a
  40ff1e:	cmp    BYTE PTR [eax+0x3d],dl
  40ff21:	popf   
  40ff22:	pop    es
  40ff23:	cmp    DWORD PTR [edx+0x19],0x78b03367
  40ff2a:	test   al,0x8c
  40ff2c:	xchg   ebx,eax
  40ff2d:	push   0xaa69d318
  40ff32:	pop    ss
  40ff33:	add    cl,cl
  40ff35:	xor    ebx,DWORD PTR [esi-0x83432d8]
  40ff3b:	or     BYTE PTR [ecx+esi*8],bl
  40ff3e:	lahf   
  40ff3f:	or     ebp,edx
  40ff41:	rcr    DWORD PTR gs:[edi+ebp*1+0x15],cl
  40ff46:	rol    DWORD PTR [edx],0xcc
  40ff49:	xor    bh,BYTE PTR [ebx+0x185e3632]
  40ff4f:	mov    esi,0x44a0035a
  40ff54:	imul   edx,esi,0xfbf642e6
  40ff5a:	pop    esi
  40ff5b:	into   
  40ff5c:	adc    ecx,DWORD PTR [edx-0xa]
  40ff5f:	fcomp  QWORD PTR [ebx-0x3a2c49d5]
  40ff65:	sti    
  40ff66:	adc    DWORD PTR [esi+0x52],esp
  40ff69:	sub    eax,0x463df788
  40ff6e:	out    dx,eax
  40ff6f:	lods   al,BYTE PTR ds:[esi]
  40ff70:	stos   BYTE PTR es:[edi],al
  40ff71:	pop    es
  40ff72:	test   eax,esp
  40ff74:	dec    ecx
  40ff75:	xor    bl,al
  40ff77:	in     eax,0x88
  40ff79:	add    DWORD PTR [esp+ebx*1],eax
  40ff7c:	into   
  40ff7d:	mov    eax,ds:0xa62c8af
  40ff82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff83:	in     eax,0xf6
  40ff85:	retf   
  40ff86:	mov    ch,0x55
  40ff88:	shl    BYTE PTR [edi],0x3
  40ff8b:	sub    BYTE PTR [ecx+0xf],dl
  40ff8e:	clc    
  40ff8f:	int    0xea
  40ff91:	push   eax
  40ff92:	inc    edi
  40ff93:	sub    eax,0xc1cb6fc1
  40ff98:	(bad)
  40ff9c:	repnz hlt 
  40ff9e:	push   edx
  40ff9f:	add    al,0x79
  40ffa1:	rcr    DWORD PTR [edx],1
  40ffa3:	xchg   ecx,eax
  40ffa4:	dec    edi
  40ffa5:	and    edx,DWORD PTR [esi-0x27bee9e]
  40ffab:	jmp    0x1f3a:0xeaae1c35
  40ffb2:	jo     0x40ffc1
  40ffb4:	push   ecx
  40ffb5:	jecxz  0x40ff95
  40ffb7:	mov    eax,ds:0xf9e69365
  40ffbc:	loopne 0x40ffe4
  40ffbe:	int3   
  40ffbf:	jb     0x410030
  40ffc1:	pop    eax
  40ffc2:	dec    esp
  40ffc3:	jns    0x40ffcf
  40ffc5:	add    eax,ebp
  40ffc7:	mov    edx,0xf82c34a9
  40ffcc:	dec    ecx
  40ffcd:	dec    esp
  40ffce:	outs   dx,BYTE PTR ds:[esi]
  40ffcf:	adc    BYTE PTR [edi-0x2f],bl
  40ffd2:	push   edi
  40ffd3:	mov    ds:0xc3fdf44,al
  40ffd8:	jge    0x40ff70
  40ffda:	outs   dx,DWORD PTR ds:[esi]
  40ffdb:	cmp    cl,BYTE PTR [ebp-0x32]
  40ffde:	sbb    dh,ch
  40ffe0:	and    dl,BYTE PTR [edx]
  40ffe2:	sub    ah,BYTE PTR [ecx-0x4ec4ecd4]
  40ffe8:	mov    bh,0xf8
  40ffea:	stc    
  40ffeb:	add    esi,ecx
  40ffed:	sub    bh,BYTE PTR [ecx-0x4d]
  40fff0:	scas   eax,DWORD PTR es:[edi]
  40fff1:	xor    DWORD PTR [ebx-0x26],ebp
  40fff4:	stc    
  40fff5:	and    DWORD PTR [eax+edi*1+0x5db5fe4c],edi
  40fffc:	mov    edx,0x41db9c23
  410001:	mov    bl,0x31
  410003:	cmp    BYTE PTR ds:0x483b050,ah
  410009:	cmp    al,ch
  41000b:	mov    dh,0xb8
  41000d:	mov    ah,0x18
  41000f:	cmp    DWORD PTR [ebp+0x31e813b7],ebp
  410015:	dec    ebp
  410017:	dec    edi
  410018:	xlat   BYTE PTR ds:[ebx]
  410019:	mov    al,ds:0xb708bb15
  41001e:	rcr    DWORD PTR [esi+0x20],0x70
  410022:	lds    ebx,FWORD PTR [edx-0x74]
  410025:	inc    esi
  410026:	mov    esp,0x6983ed7d
  41002b:	(bad)  
  41002c:	xchg   esi,eax
  41002d:	mov    ah,0x3
  41002f:	pushf  
  410030:	mov    DWORD PTR ds:0x6e0439cd,ecx
  410036:	push   es
  410037:	add    eax,0xc5aff095
  41003c:	mov    dh,0xd2
  41003e:	cmc    
  41003f:	repnz pushf 
  410041:	inc    ecx
  410042:	mov    ch,0x1f
  410044:	ins    BYTE PTR es:[edi],dx
  410045:	adc    esi,DWORD PTR [edi-0x7d0a5a66]
  41004b:	mov    ebp,0x72ff6945
  410050:	jecxz  0x410033
  410052:	lahf   
  410053:	in     al,0xb1
  410055:	jl     0x4100a8
  410057:	out    dx,eax
  410058:	fimul  WORD PTR [ecx]
  41005a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41005b:	and    al,0x39
  41005d:	addr16 inc esp
  41005f:	mov    ah,0xb1
  410061:	pop    ds
  410062:	cs dec ebp
  410064:	imul   ebx,esp,0x53
  410067:	dec    edx
  410068:	cmp    eax,0xd95ce60d
  41006d:	adc    eax,0x416297be
  410072:	xchg   edi,eax
  410073:	arpl   cx,bx
  410075:	call   0x4dce4201
  41007a:	dec    ecx
  41007b:	inc    esp
  41007c:	fld    TBYTE PTR [esp+eax*2+0x36]
  410080:	lds    edx,FWORD PTR [edx+0xdc822d8]
  410086:	les    ecx,FWORD PTR [ecx]
  410088:	mov    esp,0x59c4c5b8
  41008d:	or     eax,0x8c706b1f
  410092:	test   al,0x45
  410094:	mov    esp,0x1313684e
  410099:	into   
  41009a:	(bad)  
  41009b:	ins    BYTE PTR es:[edi],dx
  41009c:	cmp    BYTE PTR [edi+0x41bfc59b],dh
  4100a2:	leave  
  4100a3:	leave  
  4100a4:	mov    BYTE PTR [eax-0xc1587db],bh
  4100aa:	mov    edx,0x4e0cf0ea
  4100af:	jnp    0x410065
  4100b1:	xor    ah,BYTE PTR [edx-0x406e157f]
  4100b7:	test   BYTE PTR [eax+0x69c30c8f],0x7
  4100be:	add    al,0x35
  4100c0:	push   ebx
  4100c1:	call   0x73f2:0xbfab2dfb
  4100c8:	inc    edi
  4100c9:	lds    edx,FWORD PTR [edi]
  4100cb:	outs   dx,BYTE PTR ds:[esi]
  4100cc:	pop    ebp
  4100cd:	repnz aam 0xd3
  4100d0:	and    DWORD PTR [ecx],ebp
  4100d2:	outs   dx,BYTE PTR ds:[esi]
  4100d3:	jmp    0x31ea1de4
  4100d8:	or     esp,esp
  4100da:	cmp    DWORD PTR [eax-0x127c9fc3],esi
  4100e0:	in     eax,0x7
  4100e2:	clc    
  4100e3:	pop    edx
  4100e4:	icebp  
  4100e5:	pop    esi
  4100e6:	xor    edi,esi
  4100e8:	daa    
  4100e9:	fcmovu st,st(3)
  4100eb:	push   edx
  4100ec:	jo     0x410135
  4100ee:	jmp    0x7c699c6c
  4100f3:	inc    edi
  4100f4:	jp     0x4100c0
  4100f6:	push   0xf28107a2
  4100fb:	mov    esp,0x48d322a3
  410100:	rcl    dl,1
  410102:	addr16 mov esp,0x2df44696
  410108:	loop   0x4100a8
  41010a:	inc    eax
  41010b:	sbb    al,0xa2
  41010d:	and    BYTE PTR [ecx-0x2c7549b6],dh
  410113:	adc    BYTE PTR [eax+0x5d],bh
  410116:	retf   
  410117:	push   0xffffffc0
  410119:	adc    BYTE PTR [eax],dh
  41011b:	push   ebx
  41011c:	in     eax,0x2e
  41011e:	repnz xor BYTE PTR [ebx+0x5ddb06db],al
  410125:	xlat   BYTE PTR ds:[ebx]
  410126:	push   eax
  410127:	and    eax,0x4459d412
  41012c:	mov    edi,0x3c2738c9
  410131:	fist   WORD PTR [eax]
  410133:	xchg   edi,eax
  410134:	inc    ebx
  410135:	out    0xf5,eax
  410137:	xor    DWORD PTR [eax+0x2e],eax
  41013a:	call   0xea77:0x5f4d49ab
  410141:	int    0x87
  410143:	leave  
  410144:	xchg   BYTE PTR [ebp-0x2b],ch
  410147:	fisub  DWORD PTR [ecx+0x5d]
  41014a:	jle    0x41011c
  41014c:	arpl   WORD PTR [eax+ebp*8+0x12],bx
  410150:	int3   
  410151:	xor    eax,0xd90a3f3a
  410156:	hlt    
  410157:	jge    0x41011f
  410159:	mov    edi,0x7c60d789
  41015e:	in     al,dx
  41015f:	jae    0x4100f5
  410161:	daa    
  410162:	mov    ecx,DWORD PTR [ebp-0x6c736a66]
  410168:	lods   eax,DWORD PTR ds:[esi]
  410169:	mov    ebp,DWORD PTR [edx-0x3]
  41016c:	je     0x4101de
  41016e:	xchg   BYTE PTR [edi+0x1a],bl
  410171:	mov    edx,0x78b802f7
  410176:	shl    eax,cl
  410178:	or     eax,DWORD PTR ds:0xd83f4f7d
  41017e:	push   0x453fb67b
  410183:	adc    ecx,DWORD PTR [edi-0x5b958531]
  410189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41018a:	sar    DWORD PTR [eax+esi*8-0x7a672982],1
  410191:	inc    esp
  410192:	jmp    0xacc3f06b
  410197:	sub    BYTE PTR [edi+0x21f165d7],al
  41019d:	push   es
  41019e:	in     al,dx
  41019f:	or     eax,0x16239d3b
  4101a4:	sbb    esi,ebp
  4101a6:	jnp    0x410140
  4101a8:	cs dec eax
  4101aa:	pop    edx
  4101ab:	add    DWORD PTR [esi+0x7e],edx
  4101ae:	xor    DWORD PTR [ecx+ecx*8+0x53],ebp
  4101b2:	scas   al,BYTE PTR es:[edi]
  4101b3:	xor    BYTE PTR [ecx],ch
  4101b5:	sub    DWORD PTR [esi],ebp
  4101b7:	mov    edi,0x503e956f
  4101bc:	or     eax,0xd213ce0e
  4101c1:	fdivr  QWORD PTR [ebp-0x22]
  4101c4:	mov    dh,0xdb
  4101c6:	xchg   ebx,eax
  4101c7:	mov    ch,0x9a
  4101c9:	jb     0x410186
  4101cb:	mov    ebx,0x94ce0dc8
  4101d0:	push   ebp
  4101d1:	lea    edi,[edx+0x78]
  4101d4:	cmp    ah,BYTE PTR [ebx-0x20ba37ed]
  4101da:	ins    DWORD PTR es:[edi],dx
  4101db:	jnp    0x4101ad
  4101dd:	ror    eax,cl
  4101df:	mov    eax,ds:0xe1d28255
  4101e4:	loop   0x410207
  4101e6:	xchg   edi,eax
  4101e7:	and    DWORD PTR [edi+0x15],0xffffffec
  4101eb:	(bad)  
  4101ec:	loop   0x410210
  4101ee:	data16 daa 
  4101f0:	in     al,dx
  4101f1:	sbb    ebp,ebp
  4101f3:	hlt    
  4101f4:	push   ds
  4101f5:	push   es
  4101f6:	jb     0x4101a3
  4101f8:	xchg   DWORD PTR [edi-0x35],edx
  4101fb:	pop    edx
  4101fc:	dec    ebx
  4101fd:	mov    BYTE PTR [edx-0x5ec7ce11],cl
  410203:	xchg   BYTE PTR [eax],bh
  410205:	add    eax,0x745f3891
  41020a:	(bad)  
  41020b:	or     eax,0xcde624b1
  410210:	icebp  
  410211:	mov    bh,0x25
  410213:	inc    esi
  410214:	add    al,0x93
  410216:	arpl   WORD PTR [ebx-0x69b5930c],cx
  41021c:	ss and bl,ch
  41021f:	aas    
  410220:	mov    BYTE PTR gs:[edi-0x40152acd],ah
  410227:	inc    esi
  410228:	xchg   edx,eax
  410229:	stc    
  41022a:	rcl    DWORD PTR [ecx-0x31],cl
  41022d:	jno    0x41023c
  41022f:	outs   dx,BYTE PTR ds:[esi]
  410230:	icebp  
  410231:	and    eax,0x9cf092cc
  410236:	cdq    
  410237:	xor    al,0x44
  410239:	add    BYTE PTR [ecx],0xf1
  41023c:	adc    ebp,DWORD PTR [eax+0x35]
  41023f:	ret    0xea77
  410242:	pop    ebp
  410243:	shl    DWORD PTR ds:0x79edbb20,0x58
  41024a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41024b:	ret    
  41024c:	fild   DWORD PTR [edx+0x716090f3]
  410252:	add    esi,DWORD PTR [ebx+0x36]
  410255:	shl    DWORD PTR [esi+edi*4-0x3f],1
  410259:	mov    ecx,0xee207aae
  41025e:	or     ebp,DWORD PTR [edi]
  410260:	bound  edx,QWORD PTR [ecx]
  410262:	inc    ecx
  410263:	cs push 0x693ca149
  410269:	test   BYTE PTR [eax],dl
  41026b:	mov    esi,0x4462e96c
  410270:	pop    ebx
  410271:	retf   
  410272:	shl    BYTE PTR [eax-0x5f03a508],0xb
  410279:	or     eax,0xc54fee5d
  41027e:	sub    DWORD PTR [ebp-0x51],eax
  410281:	addr16 js 0x410271
  410284:	enter  0x729c,0x54
  410288:	jl     0x410239
  41028a:	xlat   BYTE PTR ds:[ebx]
  41028b:	rcl    DWORD PTR ds:0x6575340d,0x7b
  410292:	not    BYTE PTR [ecx]
  410294:	lahf   
  410295:	jbe    0x41028e
  410297:	cmp    BYTE PTR es:[ebp-0x5ddabde5],bh
  41029e:	pop    ebp
  41029f:	push   ds
  4102a0:	clc    
  4102a1:	out    0x6,al
  4102a3:	lds    edx,FWORD PTR [eax-0x8]
  4102a6:	mov    edi,0x59cc51a4
  4102ab:	mov    eax,ds:0x8838df8f
  4102b0:	pop    esi
  4102b1:	xchg   esp,eax
  4102b2:	mov    dl,0x14
  4102b4:	xchg   edx,eax
  4102b5:	(bad)  
  4102b6:	std    
  4102b7:	cmp    al,0xc
  4102b9:	xchg   ecx,eax
  4102ba:	mov    dl,0x4b
  4102bc:	sub    bl,BYTE PTR [ecx-0x39]
  4102bf:	mov    dl,0x21
  4102c1:	lahf   
  4102c2:	and    BYTE PTR cs:0xc5fa2b38,dh
  4102c9:	cdq    
  4102ca:	ret    0xeedf
  4102cd:	adc    al,0xeb
  4102cf:	mov    BYTE PTR [edx-0x67d94244],cl
  4102d5:	std    
  4102d6:	(bad)
  4102d9:	jmp    0x778:0xf144f978
  4102e0:	pop    ss
  4102e1:	mov    ds:0xe842950d,al
  4102e6:	fbld   TBYTE PTR [ecx+0x76]
  4102e9:	lods   eax,DWORD PTR ds:[esi]
  4102ea:	dec    esp
  4102eb:	(bad)  
  4102ec:	out    0xc7,al
  4102ee:	(bad)  
  4102ef:	cmp    eax,0x2a9fbd3e
  4102f4:	gs cs adc eax,0x933241f2
  4102fb:	dec    ebx
  4102fc:	push   edi
  4102fd:	xchg   BYTE PTR [ebx],dl
  4102ff:	stc    
  410300:	mov    BYTE PTR [ebx-0x42],ch
  410303:	xchg   esi,eax
  410304:	loope  0x410377
  410306:	cmp    BYTE PTR [edx+0x600d3fe5],bl
  41030c:	mov    ebp,0xf499fcaf
  410311:	adc    DWORD PTR [esi+0x35],ebx
  410314:	adc    DWORD PTR [ebp+0x75],edx
  410317:	sbb    eax,0x3b3fd8ef
  41031c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41031d:	(bad)  
  41031e:	sub    eax,0x206d01cb
  410323:	push   0xffffff9a
  410325:	jb     0x410326
  410327:	jecxz  0x410329
  410329:	sbb    eax,0xc6d33514
  41032e:	test   al,0x77
  410330:	cmp    eax,0xd7b3ea39
  410335:	pop    ebx
  410336:	xlat   BYTE PTR ds:[ebx]
  410337:	jae    0x410342
  410339:	mov    ah,0xcf
  41033b:	jmp    0x7e44:0xf0e5fc00
  410342:	ins    DWORD PTR es:[edi],dx
  410343:	mov    WORD PTR [ebp+esi*4+0x4],ds
  410347:	ins    DWORD PTR es:[edi],dx
  410348:	mov    dh,0x6d
  41034a:	pusha  
  41034b:	xchg   ebp,eax
  41034c:	popa   
  41034d:	test   DWORD PTR [esi+0x46],eax
  410350:	adc    al,0x1c
  410352:	jno    0x41036f
  410354:	sahf   
  410355:	pushf  
  410356:	sbb    DWORD PTR [edx+0x39],esi
  410359:	es push eax
  41035b:	add    cl,0xa6
  41035e:	or     eax,0x7e8dfc4d
  410363:	test   al,0x63
  410365:	pop    es
  410366:	cmp    BYTE PTR [esi],bl
  410368:	xor    BYTE PTR [edx+eiz*8],0xf8
  41036c:	or     DWORD PTR [eax+0x7d98c87a],ebx
  410372:	call   0x9181:0x781ecf20
  410379:	xchg   edi,eax
  41037a:	sahf   
  41037b:	and    BYTE PTR [edi+0x5be3c02a],ch
  410381:	xlat   BYTE PTR ds:[ebx]
  410382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410383:	jg     0x410351
  410385:	dec    esi
  410386:	xchg   ebp,eax
  410387:	in     eax,dx
  410388:	jle    0x4103a7
  41038a:	clc    
  41038b:	xor    ecx,DWORD PTR [esi+0x496e1db9]
  410391:	(bad)  
  410392:	mov    eax,ds:0xb9f2bc5a
  410397:	cmp    dh,BYTE PTR [edi+0x7877bba9]
  41039d:	hlt    
  41039e:	sub    al,0x28
  4103a0:	out    0x69,eax
  4103a2:	(bad)  
  4103a3:	adc    DWORD PTR [ebx],ebx
  4103a5:	mov    ch,0x23
  4103a7:	(bad)  
  4103a8:	pop    ss
  4103a9:	mov    ds:0xc37de112,al
  4103ae:	inc    ecx
  4103af:	dec    eax
  4103b0:	sbb    esi,DWORD PTR cs:[eax+edx*4+0x46]
  4103b5:	out    dx,eax
  4103b6:	ret    
  4103b7:	lds    edx,FWORD PTR ds:0xe043bbc4
  4103bd:	sbb    BYTE PTR [ebp-0x21],ch
  4103c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103c1:	(bad)  
  4103c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103c4:	loopne 0x41041f
  4103c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103c7:	pop    edx
  4103c8:	pop    ebx
  4103c9:	jle    0x410430
  4103cb:	mov    dh,0x1
  4103cd:	enter  0x4afb,0x1d
  4103d1:	or     ch,BYTE PTR [esi+eiz*2-0x5]
  4103d5:	cld    
  4103d6:	or     al,0x0
  4103d8:	xor    al,0xf4
  4103da:	adc    BYTE PTR [edx],bh
  4103dc:	je     0x410380
  4103de:	sbb    al,0xb7
  4103e0:	ins    DWORD PTR es:[edi],dx
  4103e1:	test   eax,0xb03d1717
  4103e6:	dec    ebx
  4103e7:	or     BYTE PTR [ebx],ah
  4103e9:	fucom  st(2)
  4103eb:	fdivr  QWORD PTR [eax-0x26]
  4103ee:	jne    0x410416
  4103f0:	shl    BYTE PTR [edi-0x6e68e986],cl
  4103f6:	sub    al,0xfb
  4103f8:	sbb    dl,cl
  4103fa:	ret    0xb3cb
  4103fd:	jmp    0x3a87add
  410402:	lahf   
  410403:	sub    eax,0xbad6ded3
  410408:	sub    eax,0x46bf0d6c
  41040d:	ret    0x8103
  410410:	ret    
  410411:	mov    ecx,DWORD PTR [edx]
  410413:	sbb    bh,BYTE PTR [esi-0x8]
  410416:	or     eax,DWORD PTR [edi+0x36]
  410419:	(bad)  [ebx-0x3]
  41041c:	pop    edx
  41041d:	retf   
  41041e:	sub    al,0xd0
  410420:	inc    esi
  410421:	push   eax
  410422:	inc    edi
  410423:	shl    al,cl
  410425:	cs push ds
  410427:	(bad)  
  410428:	and    esi,DWORD PTR [edi+0xd17b34b]
  41042e:	outs   dx,BYTE PTR ds:[esi]
  41042f:	clc    
  410430:	(bad)  
  410431:	out    0xa3,eax
  410433:	push   es
  410434:	lods   al,BYTE PTR ds:[esi]
  410435:	inc    edi
  410436:	dec    esi
  410437:	enter  0x7da0,0x62
  41043b:	les    edi,FWORD PTR [esi+0x78]
  41043e:	jo     0x41041f
  410440:	ret    
  410441:	ja     0x4103d3
  410443:	jg     0x4103cd
  410445:	lods   al,BYTE PTR ds:[esi]
  410446:	pop    ds
  410447:	mov    bh,dh
  410449:	dec    edi
  41044a:	dec    ecx
  41044b:	dec    edi
  41044c:	out    0xed,eax
  41044e:	scas   eax,DWORD PTR es:[edi]
  41044f:	rcl    BYTE PTR [eax-0x5a16c35],cl
  410455:	shr    al,cl
  410457:	stos   DWORD PTR es:[edi],eax
  410458:	(bad)
  41045b:	jmp    0x1b11b328
  410460:	or     edi,DWORD PTR [edi]
  410462:	inc    edi
  410463:	shl    BYTE PTR [ecx],1
  410465:	pop    edx
  410466:	adc    eax,0xaba1c3bb
  41046b:	mov    ?,WORD PTR [eax+0x7313851e]
  410471:	sar    DWORD PTR [eax],1
  410473:	es push ds
  410475:	shl    BYTE PTR [edx+0x5cb8c6e3],1
  41047b:	scas   al,BYTE PTR es:[edi]
  41047c:	add    BYTE PTR [ebx-0x39],ah
  41047f:	inc    ebp
  410480:	add    DWORD PTR [ebx],edi
  410482:	fisttp DWORD PTR [ecx]
  410484:	icebp  
  410485:	inc    esi
  410486:	inc    ebp
  410487:	aas    
  410488:	(bad)
  41048b:	sub    BYTE PTR [ecx-0x1d],bl
  41048e:	loopne 0x410414
  410490:	sub    edi,ebp
  410492:	cmp    ah,BYTE PTR [esi]
  410494:	pop    eax
  410495:	dec    edx
  410496:	cli    
  410497:	fld    TBYTE PTR [eax-0x3592cd8d]
  41049d:	pushf  
  41049e:	or     ah,ch
  4104a0:	sub    dl,BYTE PTR [ecx]
  4104a2:	mov    bl,0xbc
  4104a4:	retf   
  4104a5:	cmp    ecx,DWORD PTR [eax-0x2ee11b18]
  4104ab:	push   esp
  4104ac:	rol    BYTE PTR [ebx-0x66680767],1
  4104b2:	bnd jno 0x41046e
  4104b5:	push   0xa
  4104b7:	lea    edx,ds:0x7fde9f06
  4104bd:	mov    dl,0x39
  4104bf:	jae    0x41049f
  4104c1:	dec    ebp
  4104c2:	in     al,dx
  4104c3:	sbb    al,BYTE PTR [ebp-0x570025fa]
  4104c9:	xor    esi,DWORD PTR [ecx+0xe2e3a72]
  4104cf:	call   0xa5b1fa49
  4104d4:	loope  0x4104f8
  4104d6:	(bad)  
  4104d7:	call   0xa394d163
  4104dc:	jp     0x4104ba
  4104de:	xchg   ebp,eax
  4104df:	int3   
  4104e0:	cs mov esp,0x7c5eb26a
  4104e6:	pop    eax
  4104e7:	lods   eax,DWORD PTR ds:[esi]
  4104e8:	mov    bh,0x20
  4104ea:	test   DWORD PTR [eax+0x4c],edi
  4104ed:	adc    esp,ebx
  4104ef:	xchg   esi,eax
  4104f0:	inc    edx
  4104f1:	out    dx,al
  4104f2:	xchg   edx,eax
  4104f3:	hlt    
  4104f4:	lods   eax,DWORD PTR ds:[esi]
  4104f5:	mov    al,ds:0x5cde5cda
  4104fa:	sub    al,0xb9
  4104fc:	pop    ebp
  4104fd:	ficom  DWORD PTR [edx+0x1]
  410500:	ret    
  410501:	out    dx,al
  410502:	call   0xaa7d6bbf
  410507:	mov    ah,0xbb
  410509:	test   BYTE PTR [edi+eiz*8],dh
  41050c:	inc    esi
  41050d:	push   edx
  41050e:	pop    ebp
  41050f:	popf   
  410510:	not    BYTE PTR [esi+0x7a3729f3]
  410516:	out    dx,al
  410517:	sbb    eax,0xf8175b2c
  41051c:	adc    dl,cl
  41051e:	test   eax,0x8a1e736e
  410523:	(bad)  
  410524:	mov    eax,ds:0x509a0c21
  410529:	aas    
  41052a:	sbb    esp,DWORD PTR [ebx+0x17]
  41052d:	jg     0x4104e8
  41052f:	js     0x410506
  410531:	int    0xdc
  410533:	fistp  DWORD PTR [ecx-0x25]
  410536:	mov    bh,0x9b
  410538:	aam    0xf0
  41053a:	sahf   
  41053b:	add    esi,edx
  41053d:	retf   
  41053e:	jb     0x410559
  410540:	imul   ebp,edx,0x38
  410543:	imul   ebp,ebx,0x954de41d
  410549:	or     ebx,DWORD PTR ds:0x389f290a
  41054f:	stos   BYTE PTR es:[edi],al
  410550:	adc    BYTE PTR [ebx+eax*1+0x3a],0x3b
  410555:	fimul  DWORD PTR [ebx+0x20]
  410558:	rcr    BYTE PTR ds:0x932c59f7,cl
  41055e:	leave  
  41055f:	mov    esi,0xf5196c35
  410564:	test   eax,0x74524bd0
  410569:	(bad)  
  41056a:	jns    0x41058a
  41056c:	call   0x34a5:0xb6a2f1fd
  410573:	mov    eax,ds:0x135b416d
  410578:	dec    edx
  410579:	jmp    0x410572
  41057b:	fwait
  41057c:	and    DWORD PTR [edx-0x14ad0e6f],0x5b
  410583:	ja     0x4105e0
  410585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410586:	lods   al,BYTE PTR ds:[esi]
  410587:	retf   
  410588:	imul   edx,DWORD PTR [edx],0x1a
  41058b:	pop    esi
  41058c:	ds mov dl,0xa0
  41058f:	cs in  eax,0xbd
  410592:	sbb    esi,DWORD PTR [edx-0x18]
  410595:	mov    ch,0x81
  410597:	xchg   edi,eax
  410598:	hlt    
  410599:	pop    ebx
  41059a:	pop    edi
  41059b:	sbb    DWORD PTR [eax-0x59],edx
  41059e:	shr    DWORD PTR [esi],0x94
  4105a1:	call   0x47dcacd3
  4105a6:	xor    al,0x3f
  4105a8:	pop    edi
  4105a9:	pop    ss
  4105aa:	jb     0x410571
  4105ac:	loope  0x41061b
  4105ae:	lea    ecx,[ecx+0x64]
  4105b1:	add    ch,al
  4105b3:	retf   0x1d96
  4105b6:	(bad)  
  4105b7:	inc    esp
  4105b8:	pop    esi
  4105b9:	jge    0x410549
  4105bb:	(bad)  [edi]
  4105bd:	adc    al,0x2e
  4105bf:	mov    eax,0x5adf66f3
  4105c4:	xor    esi,DWORD PTR [esi]
  4105c6:	push   ss
  4105c7:	test   al,0x90
  4105c9:	lods   al,BYTE PTR fs:[esi]
  4105cb:	fucomi st,st(3)
  4105cd:	scas   eax,DWORD PTR es:[edi]
  4105ce:	jp     0x4105e7
  4105d0:	aaa    
  4105d1:	sub    eax,0x572ccd42
  4105d6:	enter  0xca43,0xbd
  4105da:	xor    al,0xb9
  4105dc:	aaa    
  4105dd:	push   cs
  4105de:	js     0x41056e
  4105e0:	popa   
  4105e1:	push   0x4871fea2
  4105e6:	rcr    DWORD PTR [ebp+0x2],0x80
  4105ea:	in     al,dx
  4105eb:	cs xchg esi,eax
  4105ed:	xor    cl,BYTE PTR [ebp+0xd]
  4105f0:	sub    cl,BYTE PTR [eax+0xb03f058]
  4105f6:	push   edx
  4105f7:	es jecxz 0x4105cb
  4105fa:	out    dx,al
  4105fb:	mov    edi,0x487fa3d9
  410600:	jb     0x41064a
  410602:	dec    esp
  410603:	in     eax,dx
  410604:	sub    DWORD PTR [edi-0x39a0e248],0xcb063a86
  41060e:	mov    ebp,0xd3bb6330
  410613:	fwait
  410614:	shr    DWORD PTR [ecx+0x65ad39be],cl
  41061a:	jecxz  0x410626
  41061c:	shr    DWORD PTR [edi],cl
  41061e:	cwde   
  41061f:	push   edi
  410620:	mov    WORD PTR [ecx+0x24],ss
  410623:	jle    0x4105e7
  410625:	pop    ss
  410626:	sub    al,0xdd
  410628:	xchg   esp,eax
  410629:	push   ebp
  41062a:	out    dx,eax
  41062b:	jnp    0x41060d
  41062d:	dec    edi
  41062e:	les    ebx,FWORD PTR [ecx+eiz*1+0x235922bb]
  410635:	sub    ebx,DWORD PTR [edi-0x43]
  410638:	call   0xf6ec:0xd3295d00
  41063f:	pop    ebx
  410640:	shl    dl,0xf1
  410643:	popf   
  410644:	or     ch,BYTE PTR [ecx]
  410646:	test   BYTE PTR ds:0x1b98aa45,dl
  41064c:	out    0x1d,eax
  41064e:	push   ecx
  41064f:	(bad)  
  410650:	in     eax,0x9d
  410652:	xor    dh,BYTE PTR [ebx]
  410654:	arpl   bp,bp
  410656:	adc    BYTE PTR ds:0x44d5bb62,ah
  41065c:	div    BYTE PTR [eax-0x78]
  41065f:	data16 or al,BYTE PTR [ecx]
  410662:	sahf   
  410663:	fist   DWORD PTR [esp+eiz*8-0x4a]
  410667:	adc    eax,0x8c30957
  41066c:	add    eax,esp
  41066e:	outs   dx,DWORD PTR ds:[esi]
  41066f:	enter  0xd0a2,0x90
  410673:	mov    ch,0xc2
  410675:	and    esi,0xbeb73279
  41067b:	pushf  
  41067c:	lods   al,BYTE PTR ds:[esi]
  41067d:	mov    BYTE PTR [edi],cl
  41067f:	inc    ebp
  410680:	aas    
  410681:	adc    al,0xa8
  410683:	cli    
  410684:	xchg   edi,ebx
  410686:	iret   
  410687:	ret    
  410688:	cmp    bl,BYTE PTR ds:0xdfdcfc9
  41068e:	test   al,0x84
  410690:	mov    bl,0xac
  410692:	push   esi
  410693:	mov    ecx,DWORD PTR [eax]
  410695:	loope  0x4106e1
  410697:	or     ebp,DWORD PTR [ecx]
  410699:	xchg   esp,ebp
  41069b:	mov    bl,0xaa
  41069d:	xchg   edx,eax
  41069e:	adc    eax,0x725d4022
  4106a3:	jle    0x4106a5
  4106a5:	stos   BYTE PTR es:[edi],al
  4106a6:	mov    dh,0x9
  4106a8:	or     eax,0x1609b0ff
  4106ad:	and    BYTE PTR [esi-0x34],dl
  4106b0:	sbb    ebx,DWORD PTR [ebx]
  4106b2:	jg     0x4106e1
  4106b4:	jbe    0x410725
  4106b6:	pop    esp
  4106b7:	pop    edx
  4106b8:	pop    ebp
  4106b9:	bound  edi,QWORD PTR [ecx-0x4]
  4106bc:	add    cl,0x52
  4106bf:	jg     0x4106e9
  4106c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106c2:	jnp    0x4106b1
  4106c4:	js     0x41067d
  4106c6:	jge    0x410696
  4106c8:	ror    DWORD PTR [ecx+0x7ffb031f],1
  4106ce:	in     eax,0x8e
  4106d0:	(bad)  
  4106d1:	js     0x41074e
  4106d3:	xchg   ecx,eax
  4106d4:	and    al,0xc1
  4106d6:	jmp    DWORD PTR [edi]
  4106d8:	ins    BYTE PTR es:[edi],dx
  4106d9:	mov    al,ds:0x80f1ce59
  4106de:	or     al,0x43
  4106e0:	ins    BYTE PTR es:[edi],dx
  4106e1:	and    ah,0x17
  4106e4:	pop    ebp
  4106e5:	push   ss
  4106e6:	mul    ebx
  4106e8:	jo     0x4106ce
  4106ea:	pop    ebx
  4106eb:	mov    al,0x3f
  4106ed:	popa   
  4106ee:	pop    edi
  4106ef:	(bad)  [edi+0x12]
  4106f2:	(bad)  
  4106f4:	(bad)  
  4106f5:	jne    0x41068b
  4106f7:	xlat   BYTE PTR ds:[ebx]
  4106f8:	(bad)  
  4106f9:	retf   0x8665
  4106fc:	shl    DWORD PTR [ebx-0x1],0x1b
  410700:	jp     0x410724
  410702:	enter  0x9b5d,0x3b
  410706:	jno    0x410772
  410708:	and    al,0xe2
  41070a:	popa   
  41070b:	sub    BYTE PTR [bp+0x20],dh
  41070f:	push   0x30
  410711:	pop    ds
  410712:	mov    esp,0x4f34015f
  410717:	loop   0x410793
  410719:	hlt    
  41071a:	adc    ebx,eax
  41071c:	test   eax,0x6d4bd2bf
  410721:	adc    BYTE PTR [esi],bh
  410723:	out    dx,eax
  410724:	xor    DWORD PTR [eax-0x29],esp
  410727:	add    BYTE PTR [edx+eax*1+0x73],ah
  41072b:	push   eax
  41072c:	push   ebx
  41072d:	std    
  41072e:	mov    edi,0x464ed95e
  410733:	std    
  410734:	inc    ecx
  410735:	xchg   ecx,eax
  410736:	push   ebx
  410737:	jmp    FWORD PTR [edx+0x4b9af55d]
  41073d:	or     DWORD PTR [esi+0x538a61e3],0xb60536b8
  410747:	cmp    al,0x14
  410749:	std    
  41074a:	retf   0xd8bb
  41074d:	push   ebp
  41074e:	dec    esi
  41074f:	add    cl,BYTE PTR [ecx+0x396114f]
  410755:	jne    0x410719
  410757:	xor    al,al
  410759:	xchg   BYTE PTR [ebp-0x59f7e9ad],dh
  41075f:	sbb    eax,0xf5fc1107
  410764:	das    
  410765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410766:	jbe    0x41079e
  410768:	push   ecx
  410769:	arpl   WORD PTR [ebx-0x2e],cx
  41076c:	enter  0x3b47,0x70
  410770:	push   edi
  410771:	imul   ecx,DWORD PTR ss:[edi],0x3d
  410775:	outs   dx,DWORD PTR ds:[esi]
  410776:	mov    ds:0x10de221a,eax
  41077b:	fisub  DWORD PTR [edi-0x7b]
  41077e:	dec    edx
  41077f:	and    eax,0x2f9564e4
  410784:	fst    DWORD PTR [edi-0x45a62ba3]
  41078a:	pop    ebx
  41078b:	(bad)  
  41078c:	fadd   QWORD PTR [ebp-0x7]
  41078f:	and    esi,DWORD PTR [esi-0x58]
  410792:	add    BYTE PTR ds:[edi+ebp*8],al
  410796:	mov    dl,0xf4
  410798:	loopne 0x4107b7
  41079a:	adc    DWORD PTR [edx],esi
  41079c:	pusha  
  41079d:	push   ebp
  41079e:	xor    dl,bh
  4107a0:	sub    BYTE PTR [edx-0x77],0xd1
  4107a4:	pop    ds
  4107a5:	call   0xd73e8aa1
  4107aa:	mov    cl,0x1
  4107ac:	lahf   
  4107ad:	pushf  
  4107ae:	leave  
  4107af:	bound  edi,QWORD PTR [ebx+ebp*2]
  4107b2:	dec    esp
  4107b3:	mov    eax,ds:0x3f09d8a8
  4107b8:	adc    eax,edx
  4107ba:	or     bh,BYTE PTR [ebp+0x24161e23]
  4107c0:	cmp    dh,BYTE PTR [edx-0x67c163]
  4107c6:	mov    eax,edi
  4107c8:	div    DWORD PTR [esi+0x26ac8c46]
  4107ce:	xor    eax,0xdeefb256
  4107d3:	not    BYTE PTR [ecx+eax*4]
  4107d6:	stc    
  4107d7:	adc    ch,BYTE PTR [ecx-0x2b]
  4107da:	stos   BYTE PTR es:[edi],al
  4107db:	mov    edi,0x702ce07d
  4107e0:	jbe    0x4107bb
  4107e2:	xor    ebx,DWORD PTR [eax-0x28]
  4107e5:	data16 fld QWORD PTR [esi-0x2e93b485]
  4107ec:	jno    0x4107e0
  4107ee:	sbb    BYTE PTR [eax-0xeb7a7e7],bl
  4107f4:	jo     0x410872
  4107f6:	aad    0x41
  4107f8:	mov    bl,0xd1
  4107fa:	jge    0x410855
  4107fc:	jbe    0x410826
  4107fe:	pop    eax
  4107ff:	inc    ebp
  410800:	jecxz  0x4107c0
  410802:	cdq    
  410803:	xchg   edi,eax
  410804:	shl    DWORD PTR [esi*8-0x68391ee8],cl
  41080b:	push   0xffffff9e
  41080d:	stos   BYTE PTR es:[edi],al
  41080e:	pop    es
  41080f:	je     0x41080d
  410811:	mov    eax,ds:0x73388104
  410816:	inc    ebp
  410817:	jmp    FWORD PTR ds:0x5701d92e
  41081d:	push   edi
  41081e:	jae    0x410813
  410820:	push   esp
  410821:	out    0xba,eax
  410823:	dec    esi
  410824:	pop    ds
  410825:	or     BYTE PTR [esi+0x2e07f400],cl
  41082b:	loopne 0x410811
  41082d:	stc    
  41082e:	enter  0x4260,0xac
  410832:	and    eax,0x4fb8e2fc
  410837:	in     eax,dx
  410838:	jns    0x410864
  41083a:	xor    ch,BYTE PTR [edx+0x786b366]
  410840:	or     BYTE PTR [eax],dh
  410842:	and    BYTE PTR [esi-0x330c2fdd],ah
  410848:	sub    ebp,DWORD PTR [ecx+0xefacc5b]
  41084e:	nop
  41084f:	push   ds
  410850:	pop    edx
  410851:	fld    DWORD PTR [ebx+0x5a]
  410854:	cmp    eax,ebx
  410856:	fisubr DWORD PTR ds:0x5efed5e8
  41085c:	dec    ecx
  41085d:	mov    bh,0x1e
  41085f:	lock or dl,BYTE PTR [ecx+0xedff806]
  410866:	ret    
  410867:	sub    al,0xf2
  410869:	lds    ebx,FWORD PTR [ebx+0xc]
  41086c:	icebp  
  41086d:	enter  0x26d0,0x4
  410871:	jb     0x410874
  410873:	mov    DWORD PTR [ecx+0x2b1f4ac5],ecx
  410879:	inc    esp
  41087a:	mov    BYTE PTR ds:0x43635d71,cl
  410880:	pop    ds
  410881:	fs and eax,0xb29e8218
  410887:	test   al,0x98
  410889:	sti    
  41088a:	jo     0x410881
  41088c:	test   al,0xf7
  41088e:	mov    esi,0xdf2399cd
  410893:	cmp    edx,DWORD PTR [ebx+eax*2+0x29]
  410897:	aad    0xe7
  410899:	push   ecx
  41089a:	dec    edi
  41089b:	xor    eax,0xf076fb9f
  4108a0:	xchg   ecx,eax
  4108a1:	test   ebp,ebx
  4108a3:	or     eax,0x97d21d84
  4108a8:	sar    DWORD PTR [ebp+0x62ea7b96],1
  4108ae:	sahf   
  4108af:	xchg   ebx,edi
  4108b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108b2:	cmp    esi,DWORD PTR [ebx-0x6b]
  4108b5:	call   0x366:0x2ff964bd
  4108bc:	xchg   ecx,eax
  4108bd:	mov    al,0xa2
  4108bf:	cmp    eax,0x463f3455
  4108c4:	gs jbe 0x4108a4
  4108c7:	(bad)  
  4108c9:	aaa    
  4108ca:	in     al,dx
  4108cb:	push   ds
  4108cc:	rol    dl,cl
  4108ce:	lahf   
  4108cf:	or     eax,0x546bd619
  4108d4:	and    esp,DWORD PTR [edi+0x16dece9b]
  4108da:	outs   dx,BYTE PTR ds:[esi]
  4108db:	(bad)  
  4108dc:	cld    
  4108dd:	aaa    
  4108de:	fwait
  4108df:	out    dx,eax
  4108e0:	rcr    esp,0xf0
  4108e3:	or     eax,0x38c1e686
  4108e8:	iret   
  4108e9:	div    edi
  4108eb:	loopne 0x4108ef
  4108ed:	call   0x6d6fac4d
  4108f2:	jecxz  0x41091c
  4108f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108f5:	jno    0x410897
  4108f7:	or     BYTE PTR ds:0x4b3547c2,0x96
  4108fe:	jp     0x41094b
  410900:	sub    al,0x4b
  410902:	es push edx
  410904:	mov    al,0xc1
  410906:	or     ch,ch
  410908:	pop    ds
  410909:	push   0x2b830d27
  41090e:	sbb    esi,ebx
  410910:	mov    ebx,0x99c47e12
  410915:	rcr    BYTE PTR [eax-0x7b],cl
  410918:	and    al,0x6f
  41091a:	xchg   edi,eax
  41091b:	adc    DWORD PTR [edi+0x5a3ea4dd],ebp
  410921:	sub    eax,0xec97bbf
  410926:	push   ecx
  410927:	adc    al,0x7
  410929:	div    BYTE PTR [esi+0x64]
  41092c:	jb     0x41099b
  41092e:	ins    BYTE PTR es:[edi],dx
  41092f:	adc    DWORD PTR [edx-0x6c7b45bf],esi
  410935:	dec    edx
  410936:	mov    al,0xc
  410938:	outs   dx,BYTE PTR ds:[esi]
  410939:	xor    al,0x52
  41093b:	je     0x41099a
  41093d:	mov    bh,0x95
  41093f:	dec    ecx
  410940:	push   eax
  410941:	push   cs
  410942:	xor    eax,0x308311ab
  410947:	pop    ebp
  410948:	cmp    BYTE PTR [edx],ch
  41094a:	add    dl,BYTE PTR [eax]
  41094c:	lods   al,BYTE PTR ds:[esi]
  41094d:	jmp    0xb0d1:0x1f26d95
  410954:	in     al,0x8f
  410956:	mov    bl,0x3e
  410958:	les    edi,FWORD PTR [ebx+ebx*8-0x417a5e31]
  41095f:	shl    ebx,0xec
  410962:	std    
  410963:	mov    bh,0xf0
  410965:	imul   esp,DWORD PTR [edx-0x57b2eef4],0x4f
  41096c:	jns    0x410969
  41096e:	sahf   
  41096f:	nop
  410970:	mov    ss,eax
  410972:	adc    BYTE PTR [esi],0x3e
  410975:	mov    ds:0x2815a164,al
  41097a:	(bad)  
  41097b:	out    0xcd,al
  41097d:	nop
  41097e:	push   es
  41097f:	(bad)  
  410980:	outs   dx,BYTE PTR ds:[esi]
  410981:	adc    DWORD PTR ds:0x4e994b3f,eax
  410987:	jmp    0x4109f4
  410989:	xchg   ecx,eax
  41098a:	and    bl,BYTE PTR [edi]
  41098c:	nop
  41098d:	mov    ch,0x66
  41098f:	mov    edx,cr1
  410992:	push   0x9ac8c21d
  410997:	jbe    0x4109a2
  410999:	int    0x3c
  41099b:	das    
  41099c:	dec    ecx
  41099d:	xchg   esi,eax
  41099e:	loopne 0x410a1b
  4109a0:	mov    al,0x2d
  4109a2:	test   BYTE PTR [ebx],cl
  4109a4:	jg     0x410927
  4109a6:	js     0x410964
  4109a8:	scas   eax,DWORD PTR es:[edi]
  4109a9:	ret    0x9f43
  4109ac:	or     bl,BYTE PTR [edi]
  4109ae:	ins    BYTE PTR es:[edi],dx
  4109af:	ins    DWORD PTR es:[edi],dx
  4109b0:	add    al,0x9e
  4109b2:	stos   DWORD PTR es:[edi],eax
  4109b3:	or     eax,0xec8ef345
  4109b8:	push   ebx
  4109b9:	cmp    al,0x6d
  4109bb:	sub    eax,0x47e27613
  4109c0:	push   ds
  4109c1:	cmp    eax,0x32f27f38
  4109c6:	arpl   WORD PTR [esi-0x9],dx
  4109c9:	(bad)  
  4109cb:	push   ss
  4109cc:	(bad)
  4109d0:	mov    ds:0x1a353dd3,al
  4109d5:	cmp    BYTE PTR [ebp-0x6],bl
  4109d8:	sbb    DWORD PTR [ebp-0x4e731646],ebp
  4109de:	pop    eax
  4109df:	add    ecx,DWORD PTR [esi-0x2df8db51]
  4109e5:	push   0x54
  4109e7:	(bad)  
  4109ea:	push   edx
  4109eb:	xor    DWORD PTR [ecx-0xcd8c7be],esi
  4109f1:	jno    0x41098e
  4109f3:	dec    ebx
  4109f4:	outs   dx,DWORD PTR ds:[esi]
  4109f5:	and    edx,esp
  4109f7:	rcr    bh,cl
  4109f9:	jb     0x4109a2
  4109fb:	pop    edx
  4109fc:	xor    edi,DWORD PTR [edx-0x3f08c975]
  410a02:	xor    eax,0x7c3eeae2
  410a07:	mov    DWORD PTR [eax],eax
  410a09:	add    eax,0x6e5fc456
  410a0e:	sbb    ch,ch
  410a10:	lock cs (bad) 
  410a13:	and    bh,BYTE PTR [edx]
  410a15:	dec    edx
  410a16:	dec    edi
  410a17:	xchg   edi,eax
  410a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a19:	sbb    ebx,ecx
  410a1b:	lock sbb BYTE PTR [edx-0xe231d23],ah
  410a22:	test   DWORD PTR [ebx],edx
  410a24:	pop    esp
  410a25:	sbb    eax,0x49d70b57
  410a2a:	or     dl,al
  410a2c:	fsubrp st(0),st
  410a2e:	ror    ch,0x9
  410a31:	dec    ebp
  410a32:	mov    al,ds:0xfdd12354
  410a37:	sub    BYTE PTR [esi+ebp*2-0x5c],al
  410a3b:	add    eax,0x1ae46d7b
  410a40:	jp     0x410a91
  410a42:	test   eax,0x216f8424
  410a47:	xor    BYTE PTR [ecx],cl
  410a49:	xor    eax,0x4bddec9a
  410a4e:	push   ss
  410a4f:	cmp    bh,ch
  410a51:	push   cs
  410a52:	in     eax,dx
  410a53:	sbb    al,0xa2
  410a55:	sub    al,0x61
  410a57:	jp     0x410a87
  410a59:	idiv   DWORD PTR [edx-0x73]
  410a5c:	xchg   esi,esp
  410a5e:	jecxz  0x410adc
  410a60:	gs add al,0xc
  410a63:	dec    esi
  410a64:	push   ebx
  410a65:	clc    
  410a66:	daa    
  410a67:	stos   DWORD PTR es:[edi],eax
  410a68:	and    eax,0x8ee75aa9
  410a6d:	mov    edi,0xba407b7a
  410a72:	mov    dh,0xe8
  410a74:	mov    WORD PTR [esi-0x2e],?
  410a77:	inc    BYTE PTR [esi+0x79353667]
  410a7d:	push   0x7362c3d6
  410a82:	dec    esi
  410a83:	aas    
  410a84:	cmp    DWORD PTR [esi],eax
  410a86:	popf   
  410a87:	xchg   bh,bl
  410a89:	or     BYTE PTR [ebp+ecx*1-0x28691686],ch
  410a90:	jns    0x410a9f
  410a92:	xchg   DWORD PTR [ebx+0x1237f261],ebx
  410a98:	push   cs
  410a99:	mov    edi,0xd1e6af55
  410a9e:	add    BYTE PTR [ebp+0x59344e75],dh
  410aa4:	nop
  410aa5:	cmp    DWORD PTR [edi],edx
  410aa7:	mov    dh,0x4e
  410aa9:	adc    eax,esi
  410aab:	repz icebp 
  410aad:	push   0xffffffab
  410aaf:	lods   al,BYTE PTR ds:[esi]
  410ab0:	nop
  410ab1:	inc    ebx
  410ab2:	leave  
  410ab3:	pop    ebx
  410ab4:	cmp    edi,esi
  410ab6:	pop    eax
  410ab7:	xchg   edi,eax
  410ab8:	sub    al,0xe2
  410aba:	ret    
  410abb:	mov    ?,WORD PTR [bx]
  410abe:	adc    BYTE PTR [esi+0x55],cl
  410ac1:	int3   
  410ac2:	adc    eax,0x225b41b9
  410ac7:	int    0x0
  410ac9:	js     0x410a84
  410acb:	jo     0x410ae5
  410acd:	inc    ebx
  410ace:	add    BYTE PTR [edx-0x3f7fa759],ah
  410ad4:	pop    edi
  410ad5:	sbb    BYTE PTR fs:[eax+0x3264ebf7],al
  410adc:	fcom   st(3)
  410ade:	push   es
  410adf:	mul    DWORD PTR [ecx+0x25]
  410ae2:	sub    al,0xeb
  410ae4:	xor    bh,BYTE PTR [eax-0x5e01fc22]
  410aea:	rcl    DWORD PTR [ecx],1
  410aec:	cmp    ah,dh
  410aee:	dec    edi
  410aef:	repz mov dh,dh
  410af2:	mov    bh,0x74
  410af4:	ret    0x5cea
  410af7:	adc    bl,cl
  410af9:	pop    eax
  410afa:	sub    al,0x34
  410afc:	sub    al,0x19
  410afe:	fucomi st,st(1)
  410b00:	or     DWORD PTR [eax+0x59],ebx
  410b03:	pop    ecx
  410b04:	jmp    0xcd0a1fc
  410b09:	xchg   ecx,eax
  410b0a:	inc    edx
  410b0b:	or     ecx,eax
  410b0d:	pop    ebp
  410b0e:	std    
  410b0f:	pop    ebp
  410b10:	push   edx
  410b11:	call   0x11b0:0x5724263f
  410b18:	push   edi
  410b19:	xchg   esp,eax
  410b1a:	mov    ds:0x721e83e3,al
  410b1f:	mov    esi,0xd2064d7c
  410b24:	mov    edi,0xe0a7db75
  410b29:	cmp    bl,BYTE PTR [eax-0xa]
  410b2c:	inc    esi
  410b2d:	pop    edi
  410b2e:	add    al,0xf5
  410b30:	dec    edx
  410b31:	jmp    0x410b40
  410b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b34:	inc    edi
  410b35:	jbe    0x410b83
  410b37:	retf   
  410b38:	or     BYTE PTR [eax+0x6e26da0e],bh
  410b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b3f:	ret    
  410b40:	scas   eax,DWORD PTR es:[edi]
  410b41:	mov    bh,0xad
  410b43:	repz xchg ebp,eax
  410b45:	lahf   
  410b46:	(bad)  
  410b47:	aad    0xb3
  410b49:	mov    DWORD PTR [esi+0x3c],eax
  410b4c:	icebp  
  410b4d:	pop    ss
  410b4e:	inc    edx
  410b4f:	or     al,0xb4
  410b51:	pop    ecx
  410b52:	mov    bh,0x4
  410b54:	xlat   BYTE PTR ds:[ebx]
  410b55:	or     al,0x9e
  410b57:	(bad)  [ebx+0x2e83018]
  410b5d:	dec    edx
  410b5e:	lock dec edi
  410b60:	xchg   ecx,eax
  410b61:	lock cmp cl,BYTE PTR [ecx]
  410b64:	stos   BYTE PTR es:[edi],al
  410b65:	sbb    eax,0xbc3786d2
  410b6a:	lahf   
  410b6b:	add    ebp,DWORD PTR [edx-0x6d683394]
  410b71:	jbe    0x410bde
  410b73:	mov    bh,0x6f
  410b75:	cdq    
  410b76:	pusha  
  410b77:	retf   
  410b78:	inc    edi
  410b79:	cmp    al,0xdd
  410b7b:	pop    edx
  410b7c:	sub    BYTE PTR [edx+0x2da04a74],bh
  410b82:	xor    BYTE PTR [edi-0x71842680],ah
  410b88:	pusha  
  410b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b8a:	rol    DWORD PTR [esi],0xbd
  410b8d:	or     eax,0x86450c18
  410b92:	loopne 0x410be6
  410b94:	mov    edx,edi
  410b96:	sub    eax,0xbc3fb8f
  410b9b:	fnstcw WORD PTR [eax]
  410b9d:	mov    eax,ds:0xe241ecd6
  410ba2:	and    esp,DWORD PTR [ecx-0x135a1c01]
  410ba8:	mov    esi,0x693b5f4b
  410bad:	inc    edi
  410bae:	jne    0x410c11
  410bb0:	pop    ecx
  410bb1:	push   es
  410bb2:	mov    cl,0x3b
  410bb4:	adc    al,0x19
  410bb6:	mov    eax,ds:0xc69d1bd2
  410bbb:	mov    ch,BYTE PTR [eax-0x1c]
  410bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bbf:	call   esp
  410bc1:	pop    eax
  410bc2:	out    0x3a,al
  410bc4:	int3   
  410bc5:	pop    edi
  410bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bc7:	loopne 0x410bc7
  410bc9:	pop    edx
  410bca:	ror    BYTE PTR [ecx-0x5ba5faea],1
  410bd0:	jmp    0xbcd7:0x4a72b12d
  410bd7:	push   es
  410bd8:	inc    eax
  410bd9:	sti    
  410bda:	mov    al,ds:0x141a646b
  410bdf:	sub    dh,BYTE PTR [ebx-0x6e]
  410be2:	(bad)  
  410be3:	jmp    0xfd3e:0x3798f8ed
  410bea:	pop    eax
  410beb:	xor    al,0x8d
  410bed:	sbb    dl,BYTE PTR [edi+0xe5b6958]
  410bf3:	cmp    ebp,DWORD PTR [esi+0x7d6398c0]
  410bf9:	popf   
  410bfa:	and    edx,DWORD PTR [edx+esi*2]
  410bfd:	jnp    0x410bca
  410bff:	aad    0x8
  410c01:	pop    esp
  410c02:	stos   BYTE PTR es:[edi],al
  410c03:	fs and eax,0xe6cfcba9
  410c09:	sbb    bl,BYTE PTR [edi-0x26]
  410c0c:	jmp    0x410c27
  410c0e:	fld    QWORD PTR [eax-0x53db6953]
  410c14:	sbb    dl,BYTE PTR [eax]
  410c16:	pop    ss
  410c17:	sub    BYTE PTR [ecx+ebp*8+0x689db3cc],ch
  410c1e:	ret    0x4011
  410c21:	jb     0x410c61
  410c23:	mov    dl,BYTE PTR [ebp+edx*1-0x3b]
  410c27:	mov    cl,0xb
  410c29:	mov    cl,0x4
  410c2b:	cdq    
  410c2c:	pop    esi
  410c2d:	add    BYTE PTR [eax+0xe],0x3b
  410c31:	cmp    BYTE PTR [ebx],0x4d
  410c34:	sbb    DWORD PTR [ebx],eax
  410c36:	dec    esi
  410c37:	mov    esp,DWORD PTR [ecx+ebx*8]
  410c3a:	xor    eax,0x2e13165a
  410c3f:	adc    ax,WORD PTR [bx+di+0x28c9]
  410c45:	or     cl,BYTE PTR [edi]
  410c47:	sub    BYTE PTR [ebx+edx*2+0x4],dl
  410c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c4c:	sbb    DWORD PTR [eax],esi
  410c4e:	mov    ebx,0x8ff93f00
  410c53:	fwait
  410c54:	aam    0xbd
  410c56:	xchg   esp,eax
  410c57:	clc    
  410c58:	sub    eax,0x2b2627fc
  410c5d:	and    dl,BYTE PTR [edi]
  410c5f:	adc    eax,0xd44b0c81
  410c64:	pop    es
  410c65:	sbb    ch,BYTE PTR [ecx-0x4acde9fa]
  410c6b:	lock ja 0x410cd0
  410c6e:	cwde   
  410c6f:	das    
  410c70:	jb     0x410cec
  410c72:	(bad)  
  410c73:	addr16 xchg edi,eax
  410c75:	push   es
  410c76:	imul   esp,DWORD PTR [eax-0x22798585],0x31
  410c7d:	dec    edx
  410c7e:	enter  0x67e3,0xe5
  410c82:	fmul   st,st(4)
  410c84:	add    eax,0x24a2bd45
  410c89:	mov    esp,0xeac4e28a
  410c8e:	or     BYTE PTR [esi-0x64],ch
  410c91:	enter  0xb656,0xaa
  410c95:	fucomi st,st(0)
  410c97:	fidiv  WORD PTR [eax-0x56f59327]
  410c9d:	jno    0x410ce2
  410c9f:	jecxz  0x410cd9
  410ca1:	mov    cl,0x1e
  410ca3:	jg     0x410cc7
  410ca5:	dec    edx
  410ca6:	adc    ch,BYTE PTR fs:[ecx]
  410ca9:	pop    ebp
  410caa:	ins    DWORD PTR es:[edi],dx
  410cab:	mov    DWORD PTR [esi+ebx*1-0x76],edi
  410caf:	outs   dx,BYTE PTR ds:[esi]
  410cb0:	adc    DWORD PTR [eax-0x41ac466b],0xfffffffd
  410cb7:	nop
  410cb8:	test   al,0x59
  410cba:	mov    al,ds:0xba4944c0
  410cbf:	shl    BYTE PTR [edx],1
  410cc1:	repz ror BYTE PTR [ecx],1
  410cc4:	jnp    0x410d2e
  410cc6:	add    edi,DWORD PTR ss:[ebx]
  410cc9:	test   DWORD PTR [eax+esi*8+0x70],ebx
  410ccd:	(bad)  
  410cce:	in     eax,dx
  410ccf:	jg     0x410d0a
  410cd1:	ret    0xe483
  410cd4:	jge    0x410cbe
  410cd6:	xor    BYTE PTR [ebx-0x3d639fd],bh
  410cdc:	test   DWORD PTR [ebx],esp
  410cde:	inc    esp
  410cdf:	xlat   BYTE PTR ds:[ebx]
  410ce0:	cmp    DWORD PTR [esi],esp
  410ce2:	(bad)  
  410ce3:	jne    0x410cf4
  410ce5:	das    
  410ce6:	and    al,BYTE PTR [edx+0x2c269107]
  410cec:	inc    edi
  410ced:	cdq    
  410cee:	push   0xffffffe4
  410cf0:	and    ebx,DWORD PTR ds:0xdaec780a
  410cf6:	xchg   ecx,eax
  410cf7:	adc    DWORD PTR [esi+0xa1ff08a],eax
  410cfd:	sub    al,0xfc
  410cff:	inc    ecx
  410d00:	int3   
  410d01:	loop   0x410d5a
  410d03:	cmp    esi,esp
  410d05:	popf   
  410d06:	pop    es
  410d07:	xchg   esp,eax
  410d08:	pop    edx
  410d09:	push   ds
  410d0a:	popa   
  410d0b:	dec    edx
  410d0c:	lods   eax,DWORD PTR ds:[esi]
  410d0d:	add    BYTE PTR [edx],bl
  410d0f:	jle    0x410d51
  410d11:	sub    eax,0xfffc97b2
  410d16:	push   cs
  410d17:	fisub  WORD PTR [edi+ecx*2+0x3c]
  410d1b:	push   es
  410d1c:	inc    esi
  410d1d:	pop    edi
  410d1e:	xchg   esi,eax
  410d1f:	pop    ecx
  410d20:	fs pop edi
  410d22:	push   ebx
  410d23:	ror    DWORD PTR [edi-0x755ce67f],1
  410d29:	scas   eax,DWORD PTR es:[edi]
  410d2a:	nop
  410d2b:	ds jns 0x410d37
  410d2e:	cs mov bl,0xd6
  410d31:	ret    0x9564
  410d34:	fldcw  WORD PTR [edi+0x2ba9a2a]
  410d3a:	jecxz  0x410da4
  410d3c:	outs   dx,DWORD PTR ds:[esi]
  410d3d:	iret   
  410d3e:	add    BYTE PTR [esi],0x85
  410d41:	xchg   edi,eax
  410d42:	push   eax
  410d43:	aas    
  410d44:	neg    BYTE PTR [eax]
  410d46:	xor    BYTE PTR [ebp-0x7408ee8e],bh
  410d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d4d:	xchg   ecx,eax
  410d4e:	cwde   
  410d4f:	push   cs
  410d50:	enter  0x535d,0x31
  410d54:	out    0xb8,eax
  410d56:	rcr    BYTE PTR [ebx+0x34],cl
  410d59:	mov    bl,0xf2
  410d5b:	leave  
  410d5c:	or     DWORD PTR [edx],ebx
  410d5e:	mov    WORD PTR [ebx-0x5db0dc5f],?
  410d64:	jl     0x410d38
  410d66:	ins    BYTE PTR es:[edi],dx
  410d67:	bnd jno 0x410d2c
  410d6a:	adc    bl,ch
  410d6c:	aaa    
  410d6d:	push   esi
  410d6e:	(bad)  
  410d6f:	mov    ?,WORD PTR [eax]
  410d71:	jmp    DWORD PTR [ecx+0x20]
  410d74:	shr    BYTE PTR [ebp+0x292adc21],0x81
  410d7b:	mov    al,ds:0x46686d25
  410d80:	xchg   ebx,eax
  410d81:	sbb    DWORD PTR [edi],0xffffff90
  410d84:	pusha  
  410d85:	das    
  410d86:	inc    ebx
  410d87:	jae    0x410d39
  410d89:	xchg   edx,eax
  410d8a:	rcl    DWORD PTR [edx+ebp*1-0x49e00af5],cl
  410d91:	ficomp DWORD PTR [edx]
  410d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d94:	mov    ?,WORD PTR [ebx]
  410d96:	(bad)  
  410d98:	rol    BYTE PTR [esi-0x79f896d],1
  410d9e:	xor    DWORD PTR [ebp-0x53],edi
  410da1:	and    ebx,ebx
  410da3:	ins    DWORD PTR es:[edi],dx
  410da4:	clc    
  410da5:	mov    es,WORD PTR [edi+edx*4-0xafc8d26]
  410dac:	ins    DWORD PTR es:[edi],dx
  410dad:	mov    esi,edx
  410daf:	js     0x410e00
  410db1:	stc    
  410db2:	out    0x6d,eax
  410db4:	push   ebx
  410db5:	dec    esp
  410db6:	mov    bh,0x76
  410db8:	inc    eax
  410db9:	hlt    
  410dba:	xchg   ebx,edx
  410dbc:	xlat   BYTE PTR ds:[ebx]
  410dbd:	jl     0x410d5c
  410dbf:	cli    
  410dc0:	push   eax
  410dc1:	mov    edx,0x4ec45ed9
  410dc6:	ss popf 
  410dc8:	push   ss
  410dc9:	(bad)  
  410dca:	fsub   QWORD PTR [ebp+0x15c3bf5]
  410dd0:	pop    esi
  410dd1:	or     eax,DWORD PTR [ecx+0x663e55e3]
  410dd7:	add    BYTE PTR [ebx+0x3fe04a04],bl
  410ddd:	push   0x10
  410ddf:	and    BYTE PTR [ebx-0x6e086d64],bl
  410de5:	add    eax,0xb90f22fb
  410dea:	iret   
  410deb:	push   ecx
  410dec:	adc    eax,0x315238e7
  410df1:	cmp    cl,BYTE PTR ds:0xb283c723
  410df7:	std    
  410df8:	cmc    
  410df9:	scas   al,BYTE PTR es:[edi]
  410dfa:	jns    0x410e78
  410dfc:	retf   
  410dfd:	jp     0x410dc3
  410dff:	mov    ds:0xf4f8091e,eax
  410e04:	push   ds
  410e05:	rol    DWORD PTR [ebx+0x49bdabb6],1
  410e0b:	mov    ds:0x2ab6de05,al
  410e10:	add    al,bl
  410e12:	adc    DWORD PTR [ecx+ecx*1-0x61],esi
  410e16:	out    dx,al
  410e17:	mov    edi,0xeeb71302
  410e1c:	lods   al,BYTE PTR ds:[esi]
  410e1d:	dec    esp
  410e1e:	pop    ecx
  410e1f:	cdq    
  410e20:	dec    edi
  410e21:	and    bl,BYTE PTR [ebx]
  410e23:	jno    0x410e9a
  410e25:	xchg   esp,eax
  410e26:	idiv   BYTE PTR [ebx+eax*1-0x5152750c]
  410e2d:	out    dx,eax
  410e2e:	cmp    edi,DWORD PTR [edx+0x20e2035a]
  410e34:	lock or BYTE PTR [esi+0x7a],0x7
  410e39:	sbb    esi,DWORD PTR [ecx]
  410e3b:	dec    ecx
  410e3c:	push   edi
  410e3d:	pop    edi
  410e3e:	inc    edi
  410e3f:	mov    es,WORD PTR [edx]
  410e41:	sbb    al,0x72
  410e43:	xor    eax,0xa39e04f1
  410e48:	adc    al,BYTE PTR ds:0xd4b33573
  410e4e:	adc    BYTE PTR [eax-0xa],bl
  410e51:	dec    edi
  410e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e53:	repnz pushf 
  410e55:	aad    0xc0
  410e57:	scas   al,BYTE PTR es:[edi]
  410e58:	push   0x57e968c7
  410e5d:	or     cl,BYTE PTR [edx-0x2e]
  410e60:	ret    
  410e61:	(bad)  [esi-0x66]
  410e64:	mov    al,ds:0xe301155e
  410e69:	aas    
  410e6a:	std    
  410e6b:	and    bl,0x50
  410e6e:	sub    BYTE PTR [edi],cl
  410e70:	dec    esp
  410e71:	sub    eax,0xeeffbdd0
  410e76:	sub    cl,BYTE PTR [ecx-0x57e1e14e]
  410e7c:	mov    ebx,0x2585cad6
  410e81:	and    esp,DWORD PTR [edx+0x13]
  410e84:	test   BYTE PTR [edx+ecx*4-0x3f],0xed
  410e89:	sar    edi,0x93
  410e8c:	inc    edi
  410e8d:	mov    al,0x8b
  410e8f:	inc    ecx
  410e90:	inc    ecx
  410e91:	or     ecx,DWORD PTR [eax]
  410e93:	test   DWORD PTR [edx+edx*8],edi
  410e96:	mov    ds:0xe0f5a08a,eax
  410e9b:	loop   0x410e4a
  410e9d:	cmp    dl,al
  410e9f:	push   0xffffffa8
  410ea1:	out    dx,al
  410ea2:	mov    al,0x87
  410ea4:	rcl    DWORD PTR [ebp-0x61],0xcd
  410ea8:	inc    esi
  410ea9:	cvttps2pi mm3,QWORD PTR [ebx]
  410eac:	lods   al,BYTE PTR ds:[esi]
  410ead:	popf   
  410eae:	cs aas 
  410eb0:	mov    bl,0xf0
  410eb2:	push   ebx
  410eb3:	jmp    0x4a3d:0xcfe9af45
  410eba:	push   eax
  410ebb:	arpl   WORD PTR [eax+0xd],ax
  410ebe:	dec    esi
  410ebf:	ins    BYTE PTR es:[edi],dx
  410ec0:	lock jmp 0xbeee:0x1ae4f275
  410ec8:	mov    ch,0xb3
  410eca:	sbb    DWORD PTR [eax+0x7856d06f],0x3bcf2df5
  410ed4:	int    0x36
  410ed6:	sub    DWORD PTR [ecx],0x6936dee2
  410edc:	inc    ebx
  410edd:	push   cs
  410ede:	into   
  410edf:	mov    ebp,eax
  410ee1:	lea    ebx,[edx]
  410ee3:	call   0x741171dd
  410ee8:	adc    BYTE PTR [esi+0x22],ah
  410eeb:	and    al,0xd9
  410eed:	int    0xf3
  410eef:	test   DWORD PTR [esi],edi
  410ef1:	das    
  410ef2:	and    bh,BYTE PTR [edi+0x11b78ef3]
  410ef8:	jnp    0x410ed0
  410efa:	not    BYTE PTR [edx+0x7c]
  410efd:	ds xchg edx,eax
  410eff:	mov    ebp,gs
  410f01:	idiv   DWORD PTR [esi-0x38b15e53]
  410f07:	fisub  DWORD PTR [edi+0x5e]
  410f0a:	fisub  DWORD PTR [ecx]
  410f0c:	jmp    0x410f74
  410f0e:	dec    edi
  410f0f:	adc    DWORD PTR [ecx+0x3049b277],ecx
  410f15:	in     eax,0xbf
  410f17:	retf   
  410f18:	in     al,dx
  410f19:	rcr    al,0xfb
  410f1c:	pusha  
  410f1d:	mov    bl,0xdb
  410f1f:	gs xor edi,DWORD PTR gs:[eax*2-0x14c27672]
  410f28:	mov    ch,0x78
  410f2a:	jne    0x410f89
  410f2c:	cmp    eax,0x431b4aca
  410f31:	mov    esi,0x21412d90
  410f36:	mov    WORD PTR [edi-0x64],?
  410f39:	mov    ebp,0x91cb41de
  410f3e:	fcmovnb st,st(5)
  410f40:	cmp    DWORD PTR [esi-0x1b],eax
  410f43:	jg     0x410ecd
  410f45:	sbb    ch,BYTE PTR [edi-0x4300e58b]
  410f4b:	push   esi
  410f4c:	push   edx
  410f4d:	pop    eax
  410f4e:	lock xchg esi,eax
  410f50:	repz sub eax,0xbc8c1f2f
  410f56:	sub    dh,bh
  410f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f59:	xor    BYTE PTR [ebx-0x6e730492],dl
  410f5f:	and    bh,0x93
  410f62:	mov    ah,0xe5
  410f64:	pop    edx
  410f65:	jae    0x410fc9
  410f67:	jno    0x410f49
  410f69:	cld    
  410f6a:	adc    ch,bh
  410f6c:	mov    esp,0x216c45ad
  410f71:	dec    eax
  410f72:	xchg   esi,eax
  410f73:	mov    BYTE PTR ds:0xd38a7d12,dl
  410f79:	popf   
  410f7a:	retf   
  410f7b:	adc    DWORD PTR [ecx],ebx
  410f7d:	jmp    0xa9c5a463
  410f82:	inc    eax
  410f83:	cmp    eax,0xc5e28b69
  410f88:	or     dl,BYTE PTR [ebp-0x70]
  410f8b:	mov    bl,ch
  410f8d:	sub    eax,0xf92befe4
  410f92:	sbb    cl,BYTE PTR [eax+0x2b]
  410f95:	jb     0x410f97
  410f97:	outs   dx,DWORD PTR ds:[esi]
  410f98:	call   0x4d15:0xb1270e02
  410f9f:	fcom   QWORD PTR [esi+0x22]
  410fa2:	mov    ebx,0x91af28ff
  410fa7:	jae    0x410f49
  410fa9:	ret    
  410faa:	jmp    0x7a757dc
  410faf:	dec    eax
  410fb0:	dec    ecx
  410fb1:	out    0xe8,eax
  410fb3:	mov    ebp,0x2f045aa2
  410fb8:	pop    ebx
  410fb9:	sub    eax,0x676b1505
  410fbe:	cmp    dh,BYTE PTR [edi+0x39bb8130]
  410fc4:	ss daa 
  410fc6:	fcom   QWORD PTR [ecx-0x13]
  410fc9:	dec    ecx
  410fca:	xchg   edx,eax
  410fcb:	sbb    eax,0x968ef33d
  410fd0:	sbb    edx,esp
  410fd2:	imul   BYTE PTR [esi-0x3c]
  410fd5:	add    bl,ah
  410fd7:	aad    0xfd
  410fd9:	jns    0x410fc3
  410fdb:	sbb    dl,0xef
  410fde:	jge    0x410fc8
  410fe0:	push   edi
  410fe1:	gs pop ebp
  410fe3:	lock fisubr DWORD PTR [eax]
  410fe6:	ret    0x4e58
  410fe9:	ret    
  410fea:	push   0xfffffff3
  410fec:	mov    dh,0x96
  410fee:	test   BYTE PTR [ecx-0x78a9bf1d],ch
  410ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ff5:	mov    eax,0xfcdeb719
  410ffa:	jle    0x411060
  410ffc:	sub    ch,BYTE PTR [edi]
  410ffe:	xchg   esp,eax
  410fff:	bound  ebp,QWORD PTR [ebp+0x54e28424]
  411005:	xor    eax,0xcce5bf39
  41100a:	cmp    DWORD PTR [ecx-0x4bf5bb38],ecx
  411010:	xor    al,al
  411012:	in     al,dx
  411013:	add    BYTE PTR [esi],0x65
  411016:	rcl    DWORD PTR [ebx-0x4ddad046],0x46
  41101d:	lods   al,BYTE PTR ds:[esi]
  41101e:	(bad)  
  41101f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411020:	retf   0xb3b7
  411023:	pop    ebx
  411024:	call   0x45e72853
  411029:	mov    ch,ah
  41102b:	mov    eax,ds:0xdba42482
  411030:	adc    DWORD PTR [edx-0x394435d8],eax
  411036:	pop    ss
  411037:	sub    eax,0x71821f23
  41103c:	cmp    eax,0x666e3964
  411041:	push   ecx
  411042:	mov    ebp,fs
  411044:	shl    bl,0x4f
  411047:	in     al,dx
  411048:	out    0x9f,al
  41104a:	add    DWORD PTR [ecx-0x2d4dfa4f],ecx
  411050:	adc    dh,BYTE PTR [ebx+0x44691ea]
  411056:	dec    esp
  411057:	sbb    ecx,DWORD PTR [esi-0x45]
  41105a:	aaa    
  41105b:	es sahf 
  41105d:	inc    edx
  41105e:	test   eax,0x2ba7940e
  411063:	cmp    eax,0xfb119d23
  411068:	mov    bh,0x9d
  41106a:	shl    DWORD PTR [ebx+0x7c55fd45],0x54
  411071:	das    
  411072:	cmc    
  411073:	punpcklbw mm7,DWORD PTR [eax-0x5d]
  411077:	pop    ds
  411078:	(bad)  
  411079:	out    dx,al
  41107a:	fisttp QWORD PTR [eax+0x54980a7c]
  411080:	(bad)  
  411081:	jl     0x41108b
  411083:	dec    esi
  411084:	stos   BYTE PTR es:[edi],al
  411085:	cli    
  411086:	mov    bh,0xaa
  411088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411089:	xchg   BYTE PTR [ebx+0x35b72539],dl
  41108f:	jbe    0x4110c0
  411091:	jbe    0x411056
  411093:	fiadd  WORD PTR [ebx-0x521246e6]
  411099:	leave  
  41109a:	add    edi,DWORD PTR [ebx]
  41109c:	mov    ecx,0x8da9e0a6
  4110a1:	inc    ebx
  4110a2:	not    BYTE PTR [edi]
  4110a4:	cmp    BYTE PTR [eax],bh
  4110a6:	imul   edi,DWORD PTR [ecx],0x8a245cac
  4110ac:	xchg   ebx,eax
  4110ad:	sbb    eax,0xfc1940bb
  4110b2:	add    eax,0x3413982a
  4110b7:	inc    esp
  4110b8:	rol    BYTE PTR [edi+0x3c],cl
  4110bb:	push   ds
  4110bc:	jmp    0x7a846b4d
  4110c1:	adc    ecx,DWORD PTR [esi+0x1]
  4110c4:	(bad)  
  4110c5:	retf   
  4110c6:	dec    esi
  4110c7:	es fs add eax,0x8f9772f8
  4110ce:	cmp    DWORD PTR [ecx],0x3b
  4110d1:	into   
  4110d2:	pop    ds
  4110d3:	pop    ebp
  4110d4:	jle    0x411151
  4110d6:	(bad)  
  4110d7:	das    
  4110d8:	mov    ebp,0x607ce1d1
  4110dd:	stos   DWORD PTR es:[edi],eax
  4110de:	push   ebx
  4110df:	pop    ds
  4110e0:	pop    esi
  4110e1:	xor    BYTE PTR [eax+0x63],dl
  4110e4:	std    
  4110e5:	loope  0x41110e
  4110e7:	hlt    
  4110e8:	push   es
  4110e9:	aas    
  4110ea:	out    dx,eax
  4110eb:	push   esi
  4110ec:	sbb    ah,0xd7
  4110ef:	es (bad) 
  4110f1:	mul    BYTE PTR [esi-0x3]
  4110f4:	inc    DWORD PTR [edx+0x2638be6f]
  4110fa:	test   BYTE PTR [ecx+0x17],ch
  4110fd:	js     0x4110a2
  4110ff:	sti    
  411100:	inc    esp
  411101:	or     BYTE PTR [ebp-0x8],dh
  411104:	or     eax,0xaec57283
  411109:	dec    ebp
  41110a:	out    0x99,eax
  41110c:	retf   0x51a
  41110f:	sub    DWORD PTR [eax-0x1e],edi
  411112:	pop    ecx
  411113:	fadd   DWORD PTR [ecx+ecx*1]
  411116:	arpl   WORD PTR [ebx],di
  411118:	inc    edx
  411119:	sub    DWORD PTR [edi],esi
  41111b:	cs les eax,FWORD PTR fs:[eax+edi*1-0x6f05ad9e]
  411124:	xor    al,0x2
  411126:	iret   
  411127:	popa   
  411128:	xchg   edi,eax
  411129:	sbb    eax,0xcd8e98ae
  41112e:	cdq    
  41112f:	pop    edx
  411130:	inc    ecx
  411131:	push   ss
  411132:	or     ecx,ecx
  411134:	inc    esi
  411135:	popf   
  411136:	mov    esp,0xa073165
  41113b:	mov    edi,DWORD PTR [ebx-0x557df20b]
  411141:	pop    edi
  411142:	neg    bh
  411144:	daa    
  411145:	xchg   ebx,eax
  411146:	rcl    DWORD PTR [edx-0x40],0xd6
  41114a:	mov    dh,0xe4
  41114c:	retf   0x4cac
  41114f:	mov    DWORD PTR [esi+0x62],ebx
  411152:	(bad)
  411155:	sbb    BYTE PTR [edx+eax*8+0x64],0x35
  41115a:	push   ebp
  41115b:	pop    ebp
  41115c:	pop    ss
  41115d:	push   DWORD PTR es:[ebp-0x5e]
  411161:	bnd jle 0x41117e
  411164:	ja     0x4111c5
  411166:	ror    BYTE PTR ds:0xc965214b,0xce
  41116d:	loop   0x41117f
  41116f:	xlat   BYTE PTR ds:[ebx]
  411170:	add    eax,0x880f2d97
  411175:	iret   
  411176:	pop    eax
  411177:	jp     0x4111f3
  411179:	cwde   
  41117a:	test   al,0x58
  41117c:	sbb    esp,DWORD PTR [ebp+0x6ab5f82a]
  411182:	out    0x3f,al
  411184:	push   ds
  411185:	xchg   ebx,eax
  411186:	jl     0x4111f8
  411188:	add    al,0x8c
  41118a:	fsubr  QWORD PTR [esi]
  41118c:	adc    ch,BYTE PTR [edx+0x41ad8736]
  411192:	push   esp
  411193:	int3   
  411194:	dec    esp
  411195:	cmp    DWORD PTR [edi-0xfdc6e92],esp
  41119b:	shr    BYTE PTR [ebx+ebx*8+0x7b],cl
  41119f:	inc    edx
  4111a0:	mov    BYTE PTR [ebp+0x77],dl
  4111a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111a4:	and    ch,ch
  4111a6:	mov    eax,0x2d8cdc94
  4111ab:	in     al,0xe5
  4111ad:	adc    dh,cl
  4111af:	ret    0xf14b
  4111b2:	lahf   
  4111b3:	ficomp DWORD PTR [edx]
  4111b5:	dec    esi
  4111b6:	and    eax,0x4165a2d1
  4111bb:	aad    0x9c
  4111bd:	gs cmc 
  4111bf:	daa    
  4111c0:	imul   ebx,DWORD PTR ds:0xc1ec782c,0xffffffda
  4111c7:	or     BYTE PTR [eax-0x7ce0a028],cl
  4111cd:	fiadd  WORD PTR [ecx]
  4111cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111d0:	pushf  
  4111d1:	js     0x41117f
  4111d3:	retf   0x905b
  4111d6:	lock in eax,0xb3
  4111d9:	add    ah,BYTE PTR [ebx+0x34]
  4111dc:	(bad)  
  4111dd:	fsubr  QWORD PTR [edx]
  4111df:	data16 out 0x18,al
  4111e2:	mov    esp,0x1a47e71
  4111e7:	ds retf 0x2b91
  4111eb:	sbb    eax,0x56ad1cbe
  4111f0:	pop    es
  4111f1:	pop    edi
  4111f2:	lds    edi,FWORD PTR [ebx*8-0x42d08b33]
  4111f9:	cmp    DWORD PTR [edx-0x52d58389],eax
  4111ff:	retf   0x1b7b
  411202:	repz jbe 0x4111e7
  411205:	js     0x41118f
  411207:	mov    eax,eax
  411209:	(bad)  
  41120a:	gs arpl ax,dx
  41120d:	jmp    0xce0db241
  411212:	or     eax,0x1f115de1
  411217:	ds popa 
  411219:	ins    BYTE PTR es:[edi],dx
  41121a:	sub    dh,BYTE PTR [ebp+0x71]
  41121d:	fsub   DWORD PTR [ebx-0x77004d9e]
  411223:	mov    cl,BYTE PTR [ecx]
  411225:	inc    ebp
  411226:	dec    edx
  411227:	into   
  411228:	xor    DWORD PTR [edx+ebx*1-0x30e09b46],ecx
  41122f:	aad    0xe7
  411231:	sub    al,0x64
  411233:	or     BYTE PTR [edi-0x66],dh
  411236:	inc    edi
  411237:	es mov cl,0x62
  41123a:	dec    esi
  41123b:	add    ch,0x3a
  41123e:	jmp    0x4111d7
  411240:	loop   0x4111e8
  411242:	rcl    BYTE PTR [edi-0x62f034bd],0x6
  411249:	jae    0x411210
  41124b:	sahf   
  41124c:	out    0x3e,al
  41124e:	jl     0x411226
  411250:	pop    edi
  411251:	jmp    bp
  411254:	int    0xf5
  411256:	scas   al,BYTE PTR es:[edi]
  411257:	sbb    DWORD PTR [ecx-0x37a92f8d],edi
  41125d:	ret    0xdfbd
  411260:	je     0x4111ee
  411262:	jae    0x411271
  411264:	ss cmp cl,0x3f
  411268:	jmp    0x75f9:0x52b0d946
  41126f:	push   es
  411270:	adc    DWORD PTR [ebx+0x3d],esi
  411273:	mov    ebp,0xb2da024c
  411278:	cmp    eax,0x93e0c871
  41127d:	cmp    al,0xb7
  41127f:	cmovae ebx,ebx
  411282:	das    
  411283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411284:	pop    edi
  411285:	out    dx,eax
  411286:	xchg   DWORD PTR [ebx],esp
  411288:	push   esi
  411289:	mov    ah,0xbc
  41128b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41128c:	mov    ebp,0xe9d1172d
  411291:	int    0xc
  411293:	mov    ds:0x8da7f063,eax
  411298:	mov    ah,0x23
  41129a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41129b:	push   ds
  41129c:	retf   
  41129d:	or     eax,0x17e7f2c9
  4112a2:	push   ds
  4112a3:	jae    0x4112dd
  4112a5:	fwait
  4112a6:	jp     0x411286
  4112a8:	dec    ebx
  4112a9:	hlt    
  4112aa:	fst    QWORD PTR [ecx-0x76f15eda]
  4112b0:	jg     0x41123a
  4112b2:	or     al,al
  4112b4:	loopne 0x411286
  4112b6:	cmc    
  4112b7:	inc    esi
  4112b8:	xchg   ecx,eax
  4112b9:	mov    ds:0xcc76f115,eax
  4112be:	js     0x411295
  4112c0:	add    cl,BYTE PTR [edx-0xc2251ef]
  4112c6:	scas   al,BYTE PTR es:[edi]
  4112c7:	xchg   esp,eax
  4112c8:	fsub   QWORD PTR [edi]
  4112ca:	sub    bh,0xec
  4112cd:	div    BYTE PTR [esi+0x196dba95]
  4112d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112d4:	ins    BYTE PTR es:[edi],dx
  4112d5:	aam    0xd7
  4112d7:	(bad)  [edi-0x70]
  4112da:	mov    ch,dl
  4112dc:	push   ebp
  4112dd:	shl    DWORD PTR [ebx-0x59],0x4
  4112e1:	sub    BYTE PTR [eax+0x43],dh
  4112e4:	adc    al,0xeb
  4112e6:	pusha  
  4112e7:	jmp    0xcb84f5a7
  4112ec:	sbb    al,0x27
  4112ee:	pop    eax
  4112ef:	xor    eax,0xe809adb1
  4112f4:	xchg   edi,eax
  4112f5:	fnstenv [ebx-0x30d6d9e2]
  4112fb:	sub    DWORD PTR ds:0xa766e984,esi
  411301:	addr16 jp 0x41131b
  411304:	stos   DWORD PTR es:[edi],eax
  411305:	cmp    al,0x67
  411307:	sbb    DWORD PTR [edi+ebx*1+0x57],0x5776ba68
  41130f:	je     0x4112bc
  411311:	fisttp WORD PTR [ecx-0x12]
  411314:	mov    bh,0x5e
  411316:	jno    0x41131d
  411318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411319:	in     eax,dx
  41131a:	mov    dl,BYTE PTR [eax-0x41adcd8e]
  411320:	int3   
  411321:	jnp    0x4112a6
  411323:	adc    dl,BYTE PTR [edi-0x72720099]
  411329:	enter  0x5c7d,0xb
  41132d:	dec    esp
  41132e:	sti    
  41132f:	jne    0x41131c
  411331:	jb     0x4112bb
  411333:	retf   
  411334:	ins    BYTE PTR es:[edi],dx
  411335:	lock mov cl,0xb3
  411338:	jae    0x41132d
  41133a:	adc    edi,DWORD PTR [edx+0x2c4cf27f]
  411340:	push   ecx
  411341:	dec    esi
  411342:	cmp    ch,bl
  411344:	ins    BYTE PTR es:[edi],dx
  411345:	lea    ebx,[ebx]
  411347:	dec    edi
  411348:	mov    esp,DWORD PTR [edi]
  41134a:	and    eax,0xd7c48b02
  41134f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411350:	lock and DWORD PTR [edx+0x41],edi
  411354:	les    ecx,FWORD PTR [esi-0x8f7bc89]
  41135a:	push   edi
  41135b:	add    bl,bl
  41135d:	push   0x68
  41135f:	cmp    DWORD PTR [edi],ebx
  411361:	dec    ebx
  411362:	lods   al,BYTE PTR ds:[esi]
  411363:	loope  0x411310
  411365:	into   
  411366:	retf   0x409d
  411369:	mov    eax,ds:0xd8b48b36
  41136e:	or     edx,DWORD PTR [esi]
  411370:	mov    cl,0xeb
  411372:	scas   al,BYTE PTR es:[edi]
  411373:	push   ebp
  411374:	xchg   ah,al
  411376:	jno    0x411353
  411378:	dec    esp
  411379:	das    
  41137a:	fidiv  WORD PTR [ebp+0x35210556]
  411380:	inc    esi
  411381:	(bad)  
  411382:	aad    0xe4
  411384:	ins    BYTE PTR es:[edi],dx
  411385:	test   BYTE PTR [eax+0x35c207fe],al
  41138b:	dec    edx
  41138d:	pop    ebx
  41138e:	pop    edx
  41138f:	cmp    al,0xb
  411391:	sub    bh,BYTE PTR [edi+0x4f57b38f]
  411397:	in     eax,dx
  411398:	(bad)  
  411399:	or     BYTE PTR [edi+0x56],bh
  41139c:	xor    al,0xb3
  41139e:	push   0x47
  4113a0:	iret   
  4113a1:	das    
  4113a2:	or     ch,bl
  4113a4:	ficomp DWORD PTR [edx-0x304f4cc7]
  4113aa:	cmc    
  4113ab:	sahf   
  4113ac:	mov    ch,0xb9
  4113ae:	aad    0x7c
  4113b0:	pushf  
  4113b1:	mov    ah,0x1e
  4113b3:	bound  ecx,QWORD PTR ds:0x1ea894b7
  4113b9:	stos   BYTE PTR es:[edi],al
  4113ba:	test   eax,0xc05a929c
  4113bf:	repnz sub eax,0xf5916cb4
  4113c5:	pop    esp
  4113c6:	add    bl,cl
  4113c8:	mov    edi,0x708e2533
  4113cd:	ss gs add eax,0x7221f5a
  4113d4:	xchg   esp,eax
  4113d5:	lahf   
  4113d6:	cmp    eax,0x76b86802
  4113db:	xchg   edx,eax
  4113dc:	push   ds
  4113dd:	mov    bl,0xd6
  4113df:	push   edx
  4113e0:	and    al,0xc8
  4113e3:	sub    al,0xdc
  4113e5:	jo     0x411397
  4113e7:	into   
  4113e8:	repz mov bl,0x30
  4113eb:	outs   dx,DWORD PTR ds:[esi]
  4113ec:	jbe    0x4113e0
  4113ee:	ds test al,0x4b
  4113f1:	sti    
  4113f2:	xor    DWORD PTR [edi+0x4dbd582d],ecx
  4113f8:	push   ebx
  4113f9:	inc    eax
  4113fa:	push   ebp
  4113fb:	jae    0x411432
  4113fd:	mov    BYTE PTR [esi-0x70],ch
  411400:	fist   DWORD PTR [ebx+0x28fe53c1]
  411406:	push   edx
  411407:	(bad)  
  411408:	pop    esp
  411409:	jns    0x411404
  41140b:	jbe    0x4113ae
  41140d:	daa    
  41140e:	add    bh,BYTE PTR [ecx+eax*8]
  411411:	adc    dl,ch
  411413:	into   
  411414:	daa    
  411415:	mov    cl,ch
  411417:	jbe    0x411491
  411419:	xor    eax,0xc2e5ff52
  41141e:	(bad)  
  41141f:	popa   
  411420:	xlat   BYTE PTR ds:[ebx]
  411421:	mov    al,0xb6
  411423:	jp     0x411402
  411425:	nop
  411426:	push   ebx
  411427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411428:	fs pop ss
  41142a:	sbb    al,0x2
  41142c:	pop    ds
  41142d:	pushf  
  41142e:	popa   
  41142f:	mov    esp,0x9d9a2c6b
  411434:	jg     0x41144f
  411436:	mov    cl,ah
  411438:	inc    edi
  411439:	mul    DWORD PTR [edi]
  41143b:	push   eax
  41143c:	out    0xf6,eax
  41143e:	push   es
  41143f:	dec    ecx
  411440:	xchg   esi,eax
  411441:	(bad)  
  411442:	mov    al,0xd5
  411444:	leave  
  411445:	or     al,0x6e
  411447:	xchg   ch,bh
  411449:	add    al,dl
  41144b:	pop    ds
  41144c:	pop    ecx
  41144d:	int3   
  41144e:	jge    0x4114b2
  411450:	xlat   BYTE PTR ds:[ebx]
  411451:	add    eax,0x4d16201d
  411456:	pushf  
  411457:	pusha  
  411458:	je     0x4114b1
  41145a:	jmp    0x411472
  41145c:	shr    esp,0xe0
  41145f:	inc    edx
  411460:	scas   al,BYTE PTR es:[edi]
  411461:	(bad)  
  411462:	sbb    al,0x46
  411464:	bound  edi,QWORD PTR [eax+ecx*8]
  411467:	je     0x4114ad
  411469:	in     eax,0xfd
  41146b:	rcl    BYTE PTR [ebp-0x5f002af8],1
  411471:	retf   
  411472:	adc    DWORD PTR [ecx],eax
  411474:	mov    dh,0x41
  411476:	jl     0x4114c1
  411478:	fidiv  WORD PTR [esi]
  41147a:	(bad)  
  41147b:	cli    
  41147c:	dec    esi
  41147d:	pop    eax
  41147e:	dec    edi
  41147f:	imul   ebx,DWORD PTR [esi+0x6a],0xc702d835
  411486:	test   eax,0xf81764d1
  41148b:	aas    
  41148c:	or     eax,0x3462dc61
  411491:	xor    BYTE PTR [ebx+0x7ec30db],al
  411497:	add    eax,0xe60cdef2
  41149c:	ja     0x411467
  41149e:	aam    0xa6
  4114a0:	mov    dh,0x5a
  4114a2:	inc    esi
  4114a3:	(bad)  
  4114a4:	dec    esp
  4114a5:	ins    BYTE PTR es:[edi],dx
  4114a6:	clc    
  4114a7:	push   ecx
  4114a8:	cmc    
  4114a9:	call   0x6404cf85
  4114ae:	std    
  4114af:	mov    ds:0xa4631f6e,al
  4114b4:	aam    0x2b
  4114b6:	daa    
  4114b7:	imul   edi,DWORD PTR [esi],0x4f
  4114ba:	rcl    BYTE PTR [ebp+0x6d484132],1
  4114c0:	mov    ch,0x47
  4114c2:	jae    0x4114d7
  4114c4:	(bad)  
  4114c5:	jnp    0x4114fc
  4114c7:	retf   0x4ab9
  4114ca:	pop    ebx
  4114cb:	xchg   ebx,eax
  4114cc:	xchg   ebp,eax
  4114cd:	push   di
  4114cf:	lock into 
  4114d1:	inc    esp
  4114d2:	gs pop edx
  4114d4:	ss (bad) 
  4114d6:	(bad)  
  4114d7:	cmc    
  4114d8:	in     al,dx
  4114d9:	into   
  4114da:	outs   dx,BYTE PTR ds:[esi]
  4114db:	sahf   
  4114dc:	xor    ebp,DWORD PTR [ecx+0x35]
  4114df:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4114e1:	and    ah,BYTE PTR [ebx+0x7686ad2]
  4114e7:	xor    dh,BYTE PTR [ebx+0x61a45bae]
  4114ed:	retf   
  4114ee:	adc    ebx,esp
  4114f0:	in     al,0xad
  4114f2:	ds retf 0xa03a
  4114f6:	loope  0x41155f
  4114f8:	stos   BYTE PTR es:[edi],al
  4114f9:	repnz int 0xf3
  4114fc:	push   edx
  4114fd:	mov    dh,0xfa
  4114ff:	cmp    al,0xba
  411501:	fs mov al,0x61
  411504:	xchg   BYTE PTR [eax+0x7b99e350],ch
  41150a:	pop    edi
  41150b:	cld    
  41150c:	mov    BYTE PTR [esi-0x6e],bl
  41150f:	fcmove st,st(5)
  411511:	mov    dh,0x6b
  411513:	jl     0x411532
  411515:	dec    edi
  411516:	adc    al,0xe5
  411518:	mov    cl,0xd4
  41151a:	cmc    
  41151b:	push   ebx
  41151c:	cwde   
  41151d:	xchg   ecx,eax
  41151e:	shl    DWORD PTR [ecx],0x45
  411521:	sub    ch,ch
  411523:	shl    BYTE PTR [edi+ebx*2-0x461966cd],1
  41152a:	aas    
  41152b:	mul    DWORD PTR [ecx+0x649046c7]
  411531:	jl     0x4114eb
  411533:	pop    ebx
  411534:	dec    eax
  411535:	add    dh,BYTE PTR [eax]
  411537:	xchg   BYTE PTR [edx-0x43],bl
  41153a:	mov    edx,0xdb5d1bfa
  41153f:	mov    edx,0xecada19e
  411544:	sbb    ecx,DWORD PTR [edx+0x6e]
  411547:	adc    eax,0xafb9e95a
  41154c:	pop    ss
  41154d:	mov    eax,0x9dae5982
  411552:	sub    ch,BYTE PTR [ecx-0x41]
  411555:	cmp    al,0xf7
  411557:	or     al,0xe4
  411559:	cld    
  41155a:	fstp   TBYTE PTR [ecx+0x71]
  41155d:	jbe    0x41152a
  41155f:	std    
  411560:	pop    es
  411561:	call   0x273c218d
  411566:	pop    esp
  411567:	push   edx
  411568:	mov    bl,0xce
  41156a:	xor    cl,al
  41156c:	mov    bl,0xc9
  41156e:	mul    DWORD PTR [edi+eiz*8+0x6f85d5a2]
  411575:	fwait
  411576:	sbb    cl,BYTE PTR [edi-0x6b]
  411579:	and    al,0x24
  41157b:	mov    ah,0x1a
  41157d:	pop    ss
  41157e:	ja     0x411578
  411580:	mov    ds:0x842648c,eax
  411585:	mov    eax,DWORD PTR [ebp-0x4]
  411588:	xor    eax,ecx
  41158a:	mov    ecx,DWORD PTR [ebp+0xc]
  41158d:	add    eax,edx
  41158f:	imul   eax,ecx
  411592:	add    eax,DWORD PTR [ebp+0x8]
  411595:	mov    DWORD PTR [ebp+0xc],eax
  411598:	mov    eax,DWORD PTR [ebp+0xc]
  41159b:	jmp    0x4115b1
  4115a0:	mov    eax,DWORD PTR [ebp-0x4]
  4115a3:	mov    esi,DWORD PTR [ebp-0x8]
  4115a6:	xor    esi,ecx
  4115a8:	xor    eax,ecx
  4115aa:	add    esi,edx
  4115ac:	add    eax,edx
  4115ae:	imul   eax,esi
  4115b1:	pop    edi
  4115b2:	pop    esi
  4115b3:	leave  
  4115b4:	ret    0x8
  4115b7:	push   ebp
  4115b8:	mov    ebp,esp
  4115ba:	push   ecx
  4115bb:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  4115c2:	xor    DWORD PTR ds:0x42c000,0x5835
  4115cc:	mov    eax,DWORD PTR [ebp-0x4]
  4115cf:	mov    edx,DWORD PTR [ebp+0x10]
  4115d2:	adc    DWORD PTR ds:0x42c018,0x22a2
  4115dc:	mov    ecx,0x7510899
  4115e1:	xor    eax,ecx
  4115e3:	sbb    DWORD PTR ds:0x42a014,0x72a0
  4115ed:	add    eax,0x3272e0
  4115f2:	or     DWORD PTR ds:0x42d000,0x42a000
  4115fc:	mov    DWORD PTR [edx],eax
  4115fe:	and    DWORD PTR ds:0x42b014,0x0
  411608:	jmp    0x411618
  41160d:	mov    eax,ds:0x42b014
  411612:	inc    eax
  411613:	mov    ds:0x42b014,eax
  411618:	cmp    DWORD PTR ds:0x42b014,0x1d
  41161f:	jae    0x411664
  411625:	cmp    DWORD PTR ds:0x42b014,0x9
  41162c:	jne    0x41163d
  411632:	push   0x429004
  411637:	call   DWORD PTR ds:0x42ecb3
  41163d:	cmp    DWORD PTR ds:0x42b014,0x8
  411644:	jne    0x411655
  41164a:	mov    eax,ds:0x42b014
  41164f:	inc    eax
  411650:	mov    ds:0x42b014,eax
  411655:	jmp    0x41160d
  41165a:	and    DWORD PTR ds:0x42c01c,0x369c
  411664:	mov    eax,DWORD PTR [ebp+0xc]
  411667:	xor    eax,ecx
  411669:	push   esi
  41166a:	mov    esi,DWORD PTR [ebp+0x10]
  41166d:	mov    edx,0x3272e0
  411672:	add    eax,edx
  411674:	mov    DWORD PTR [esi+0x4],eax
  411677:	mov    eax,DWORD PTR [ebp+0x14]
  41167a:	mov    esi,DWORD PTR [ebp+0x10]
  41167d:	mov    DWORD PTR [esi+0x8],eax
  411680:	mov    eax,DWORD PTR [ebp+0x18]
  411683:	mov    esi,DWORD PTR [ebp+0x10]
  411686:	mov    DWORD PTR [esi+0xc],eax
  411689:	mov    eax,DWORD PTR [ebp+0x1c]
  41168c:	mov    esi,DWORD PTR [ebp+0x10]
  41168f:	mov    DWORD PTR [esi+0x10],eax
  411692:	mov    eax,DWORD PTR [ebp+0x8]
  411695:	xor    eax,ecx
  411697:	add    eax,edx
  411699:	pop    esi
  41169a:	leave  
  41169b:	ret    0x18
  41169e:	push   ebp
  41169f:	mov    ebp,esp
  4116a1:	sub    esp,0x9c
  4116a7:	add    eax,DWORD PTR ds:0x429004
  4116ad:	mov    ecx,DWORD PTR [ebp+0x8]
  4116b0:	movzx  eax,BYTE PTR ds:0x42901c
  4116b7:	adc    DWORD PTR ds:0x42b010,eax
  4116bd:	mov    eax,0x8a8c
  4116c2:	adc    DWORD PTR ds:0x42b00c,0x7010
  4116cc:	xor    ax,WORD PTR [ecx+0x20]
  4116d0:	mov    ecx,0x3b50
  4116d5:	or     DWORD PTR ds:0x429020,0x42a018
  4116df:	add    ax,cx
  4116e2:	xor    DWORD PTR ds:0x42c014,0x42d014
  4116ec:	movzx  eax,ax
  4116ef:	mov    DWORD PTR [ebp-0x10],eax
  4116f2:	mov    BYTE PTR [ebp-0x1],0x79
  4116f6:	adc    ecx,DWORD PTR ds:0x42b000
  4116fc:	lea    eax,[ebp-0x1]
  4116ff:	mov    DWORD PTR [ebp-0xc],eax
  411702:	sub    ecx,0x24e1
  411708:	mov    al,BYTE PTR [ebp-0x1]
  41170b:	or     DWORD PTR ds:0x42c01c,0x3fe4
  411715:	mov    ecx,DWORD PTR [ebp-0xc]
  411718:	and    DWORD PTR ds:0x42900c,0x42a000
  411722:	xor    al,0x73
  411724:	or     DWORD PTR ds:0x429024,0x42900c
  41172e:	sub    al,0x9
  411730:	or     DWORD PTR ds:0x429010,0x42d008
  41173a:	mov    BYTE PTR [ecx],al
  41173c:	and    DWORD PTR ds:0x429010,0x6711
  411746:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  41174d:	xor    DWORD PTR ds:0x42c004,ecx
  411753:	push   ebx
  411754:	mov    DWORD PTR ds:0x42901c,0x1f
  41175e:	cmp    DWORD PTR ds:0x42901c,0x0
  411765:	je     0x4117b8
  41176b:	cmp    DWORD PTR ds:0x42901c,0xf
  411772:	jne    0x41178d
  411778:	push   0x429024
  41177d:	push   0x42d010
  411782:	push   0x42d004
  411787:	call   DWORD PTR ds:0x42ec73
  41178d:	cmp    DWORD PTR ds:0x42901c,0x10
  411794:	jne    0x4117a8
  41179a:	xor    eax,eax
  41179c:	or     eax,DWORD PTR ds:0x42901c
  4117a2:	dec    eax
  4117a3:	mov    ds:0x42901c,eax
  4117a8:	mov    eax,ds:0x42901c
  4117ad:	dec    eax
  4117ae:	mov    ds:0x42901c,eax
  4117b3:	jmp    0x41175e
  4117b8:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  4117bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4117c2:	add    DWORD PTR ds:0x42c004,0x3f3f
  4117cc:	push   esi
  4117cd:	add    DWORD PTR ds:0x42c018,edx
  4117d3:	mov    eax,0x7510899
  4117d8:	mov    DWORD PTR ds:0x42c01c,0x1b
  4117e2:	cmp    DWORD PTR ds:0x42c01c,0x0
  4117e9:	je     0x411895
  4117ef:	cmp    DWORD PTR ds:0x42c01c,0x2b
  4117f6:	jne    0x41180f
  4117fc:	push   DWORD PTR [ebp-0x24]
  4117ff:	push   0x19b0
  411804:	push   0x7260
  411809:	call   DWORD PTR ds:0x42ec77
  41180f:	xor    esi,esi
  411811:	xor    esi,DWORD PTR ds:0x42c01c
  411817:	dec    esi
  411818:	mov    DWORD PTR ds:0x42c01c,esi
  41181e:	jmp    0x4117e2
  411823:	and    DWORD PTR ds:0x429020,0x0
  41182d:	xor    esi,esi
  41182f:	add    esi,DWORD PTR ds:0x429020
  411835:	inc    esi
  411836:	mov    DWORD PTR ds:0x429020,esi
  41183c:	cmp    DWORD PTR ds:0x429020,0x10
  411843:	jne    0x41186e
  411849:	push   0x1225
  41184e:	push   0x6cf4
  411853:	push   0x42a010
  411858:	push   DWORD PTR [ebp-0x28]
  41185b:	push   DWORD PTR [ebp-0x10]
  41185e:	push   0x51d6
  411863:	push   0x29de
  411868:	call   DWORD PTR ds:0x42ec7f
  41186e:	cmp    DWORD PTR ds:0x429020,0xf
  411875:	jne    0x411888
  41187b:	mov    esi,DWORD PTR ds:0x429020
  411881:	inc    esi
  411882:	mov    DWORD PTR ds:0x429020,esi
  411888:	cmp    DWORD PTR ds:0x429020,0x1b
  41188f:	jb     0x41182d
  411895:	xor    ecx,eax
  411897:	mov    esi,0x3272e0
  41189c:	push   edi
  41189d:	add    ecx,esi
  41189f:	mov    DWORD PTR ds:0x429024,0x3aa4
  4118a9:	jmp    0x4118cd
  4118ae:	mov    dl,BYTE PTR [ebp-0x1]
  4118b1:	mov    DWORD PTR ds:0x42a004,0x1ec
  4118bb:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4118c2:	mov    DWORD PTR ds:0x429024,0x3051
  4118cc:	inc    ecx
  4118cd:	mov    DWORD PTR ds:0x42c000,0x19d9
  4118d7:	cmp    ecx,0x40
  4118da:	jb     0x4118ae
  4118e0:	mov    edx,DWORD PTR [ebp-0x18]
  4118e3:	add    DWORD PTR ds:0x42a004,0x42c00c
  4118ed:	xor    edx,eax
  4118ef:	adc    DWORD PTR ds:0x42c00c,0x429010
  4118f9:	add    edx,esi
  4118fb:	mov    DWORD PTR ds:0x42c004,0x7d7
  411905:	jmp    0x4119f4
  41190a:	mov    edi,DWORD PTR [ebp+0x8]
  41190d:	movzx  ecx,WORD PTR ds:0x42b018
  411914:	sub    ecx,DWORD PTR ds:0x42a004
  41191a:	mov    DWORD PTR ds:0x42b018,ecx
  411920:	mov    ecx,0x8a8c
  411925:	dec    DWORD PTR ds:0x42a00c
  41192b:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411930:	mov    edi,0x3b50
  411935:	and    DWORD PTR ds:0x42a018,0x6b4e
  41193f:	add    cx,di
  411942:	and    DWORD PTR ds:0x429028,0x42b01c
  41194c:	movzx  ecx,cx
  41194f:	mov    DWORD PTR [ebp-0xc],ecx
  411952:	and    DWORD PTR ds:0x42b008,0x0
  41195c:	jmp    0x41196e
  411961:	mov    ecx,DWORD PTR ds:0x42b008
  411967:	inc    ecx
  411968:	mov    DWORD PTR ds:0x42b008,ecx
  41196e:	cmp    DWORD PTR ds:0x42b008,0x16
  411975:	jae    0x4119ca
  41197b:	cmp    DWORD PTR ds:0x42b008,0x5
  411982:	jne    0x4119a5
  411988:	push   0x42b01c
  41198d:	push   DWORD PTR [ebp-0x28]
  411990:	push   0x42e111
  411995:	push   0x1c03
  41199a:	push   0x29bc
  41199f:	call   DWORD PTR ds:0x42ec83
  4119a5:	cmp    DWORD PTR ds:0x42b008,0x4
  4119ac:	jne    0x4119bf
  4119b2:	mov    ecx,DWORD PTR ds:0x42b008
  4119b8:	inc    ecx
  4119b9:	mov    DWORD PTR ds:0x42b008,ecx
  4119bf:	jmp    0x411961
  4119c4:	add    ecx,0x3957
  4119ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4119cd:	movzx  ecx,WORD PTR [ecx+edx*4]
  4119d1:	or     DWORD PTR ds:0x42a00c,0x1f94
  4119db:	xor    ecx,0x8a8c
  4119e1:	add    ecx,edi
  4119e3:	mov    edi,DWORD PTR ds:0x42a000
  4119e9:	mov    edi,DWORD PTR [ebp-0xc]
  4119ec:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4119f3:	inc    edx
  4119f4:	mov    DWORD PTR ds:0x42a00c,0x4266
  4119fe:	mov    ecx,DWORD PTR [ebp-0x10]
  411a01:	mov    DWORD PTR ds:0x42c014,0x5a0e
  411a0b:	cmp    edx,ecx
  411a0d:	mov    DWORD PTR ds:0x42c014,0x51cd
  411a17:	jne    0x41190a
  411a1d:	sub    DWORD PTR ds:0x429004,ebx
  411a23:	mov    ecx,DWORD PTR [ebp-0x18]
  411a26:	adc    edx,0x568c
  411a2c:	mov    edx,DWORD PTR [ebp+0x10]
  411a2f:	and    DWORD PTR ds:0x42a000,0x0
  411a39:	jmp    0x411a4b
  411a3e:	mov    edi,DWORD PTR ds:0x42a000
  411a44:	inc    edi
  411a45:	mov    DWORD PTR ds:0x42a000,edi
  411a4b:	cmp    DWORD PTR ds:0x42a000,0x18
  411a52:	jae    0x411a91
  411a58:	cmp    DWORD PTR ds:0x42a000,0xf
  411a5f:	jne    0x411a70
  411a65:	push   0x42b00c
  411a6a:	call   DWORD PTR ds:0x42ec8b
  411a70:	cmp    DWORD PTR ds:0x42a000,0xe
  411a77:	jne    0x411a8c
  411a7d:	xor    edi,edi
  411a7f:	xor    edi,DWORD PTR ds:0x42a000
  411a85:	inc    edi
  411a86:	mov    DWORD PTR ds:0x42a000,edi
  411a8c:	jmp    0x411a3e
  411a91:	xor    ecx,eax
  411a93:	and    DWORD PTR ds:0x42d018,0x0
  411a9d:	mov    edi,DWORD PTR ds:0x42d018
  411aa3:	inc    edi
  411aa4:	mov    DWORD PTR ds:0x42d018,edi
  411aaa:	cmp    DWORD PTR ds:0x42d018,0xf
  411ab1:	jne    0x411acd
  411ab7:	push   0x3d1c
  411abc:	push   DWORD PTR [ebp-0x24]
  411abf:	push   0x42c010
  411ac4:	push   DWORD PTR [ebp-0x20]
  411ac7:	call   DWORD PTR ds:0x42ec8f
  411acd:	cmp    DWORD PTR ds:0x42d018,0xe
  411ad4:	jne    0x411ae7
  411ada:	mov    edi,DWORD PTR ds:0x42d018
  411ae0:	inc    edi
  411ae1:	mov    DWORD PTR ds:0x42d018,edi
  411ae7:	cmp    DWORD PTR ds:0x42d018,0x1c
  411aee:	jb     0x411a9d
  411af4:	add    ecx,esi
  411af6:	mov    DWORD PTR ds:0x42a014,0x11ec
  411b00:	mov    DWORD PTR [edx],ecx
  411b02:	mov    ecx,DWORD PTR [ebp-0x18]
  411b05:	adc    edi,0xc83
  411b0b:	xor    ecx,eax
  411b0d:	sbb    DWORD PTR ds:0x429010,ecx
  411b13:	add    ecx,esi
  411b15:	or     DWORD PTR ds:0x42d010,edx
  411b1b:	mov    DWORD PTR [ebp-0xc],ecx
  411b1e:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  411b25:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  411b2c:	mov    DWORD PTR ds:0x42c014,0x1e
  411b36:	cmp    DWORD PTR ds:0x42c014,0x0
  411b3d:	je     0x411b6a
  411b43:	cmp    DWORD PTR ds:0x42c014,0x21
  411b4a:	jne    0x411b56
  411b50:	call   DWORD PTR ds:0x42ec93
  411b56:	xor    edi,edi
  411b58:	xor    edi,DWORD PTR ds:0x42c014
  411b5e:	dec    edi
  411b5f:	mov    DWORD PTR ds:0x42c014,edi
  411b65:	jmp    0x411b36
  411b6a:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  411b71:	mov    ecx,DWORD PTR [ebp-0x14]
  411b74:	or     edi,DWORD PTR ds:0x42c018
  411b7a:	mov    DWORD PTR [ebp+0x8],ecx
  411b7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411b80:	xor    ecx,eax
  411b82:	add    DWORD PTR ds:0x42c00c,edi
  411b88:	add    ecx,esi
  411b8a:	mov    DWORD PTR ds:0x42c010,0x3ca8
  411b94:	mov    ecx,0x242ebed
  411b99:	mov    edi,DWORD PTR ds:0x42a004
  411b9f:	mov    edi,0xf641bea
  411ba4:	je     0x4145ae
  411baa:	mov    edx,DWORD PTR [ebp+0x8]
  411bad:	mov    ebx,DWORD PTR [ebp-0x8]
  411bb0:	jmp    0x413f6f
  411bb5:	mov    edx,0x77290712
  411bba:	pshufw mm2,QWORD PTR [ecx-0x127d1cb5],0x8
  411bc2:	fdiv   QWORD PTR [esi]
  411bc4:	push   esp
  411bc5:	adc    ch,BYTE PTR [esi+0x5fd87a7a]
  411bcb:	jp     0x411c47
  411bcd:	popf   
  411bce:	mov    edi,ecx
  411bd0:	add    DWORD PTR [ecx-0x3cb43579],ecx
  411bd6:	mov    bl,0xff
  411bd8:	or     BYTE PTR [ebx-0x7b],0xd4
  411bdc:	mov    ch,0x9e
  411bde:	mov    esi,0xb08aa3a
  411be3:	and    bh,BYTE PTR [edx+0x50fe7d7]
  411be9:	dec    ebp
  411bea:	(bad)  
  411beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bec:	cdq    
  411bed:	mov    al,ds:0xc45d3004
  411bf2:	add    al,0x8b
  411bf4:	bound  ecx,QWORD PTR ds:0x917c283
  411bfa:	push   0x9
  411bfc:	(bad)  [esi-0x7e]
  411bff:	ins    DWORD PTR es:[edi],dx
  411c00:	cs jae 0x411c40
  411c03:	jbe    0x411b9e
  411c05:	mov    esi,0x2734db3d
  411c0a:	loopne 0x411c80
  411c0c:	or     ebp,DWORD PTR [ecx+0x49]
  411c0f:	inc    edi
  411c10:	in     eax,dx
  411c11:	push   0xffa779c2
  411c16:	imul   esp,esi,0x93e9ad7a
  411c1c:	leave  
  411c1d:	xor    BYTE PTR [esi],dl
  411c1f:	adc    BYTE PTR [edx],0x5f
  411c22:	jge    0x411bf2
  411c24:	jnp    0x411bd6
  411c26:	outs   dx,DWORD PTR ds:[esi]
  411c27:	retf   0x58a9
  411c2a:	add    eax,0xf8e87310
  411c2f:	and    cl,BYTE PTR [ecx+0x1d]
  411c32:	dec    eax
  411c33:	in     eax,0xfb
  411c35:	aaa    
  411c36:	rol    DWORD PTR [ecx+0x47],1
  411c39:	pop    ss
  411c3a:	stos   BYTE PTR es:[edi],al
  411c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c3c:	cmp    al,bh
  411c3e:	xor    esi,DWORD PTR [esi]
  411c40:	aam    0x33
  411c42:	mov    eax,ds:0xc4af3c69
  411c47:	fiadd  WORD PTR [edi]
  411c49:	and    al,0x75
  411c4b:	das    
  411c4c:	in     al,0x76
  411c4e:	(bad)  [esp+edi*1+0x1c51623c]
  411c55:	xchg   DWORD PTR [esi-0x27],ecx
  411c58:	inc    edx
  411c59:	push   eax
  411c5a:	xchg   BYTE PTR [eax+eax*2+0x1c8107bb],al
  411c61:	push   cs
  411c62:	clc    
  411c63:	and    BYTE PTR [esi],0xdb
  411c66:	pop    edx
  411c67:	mov    dh,BYTE PTR [edx+ebp*1-0x5d]
  411c6b:	sbb    al,0x51
  411c6d:	sub    al,BYTE PTR [ebx-0x7b2dc18e]
  411c73:	add    eax,0x65af2af5
  411c78:	fwait
  411c79:	and    ebp,0x42115f74
  411c7f:	outs   dx,BYTE PTR ds:[esi]
  411c80:	imul   ebx,DWORD PTR [ebp+0x4bc3836],0x3d253ce1
  411c8a:	mov    ecx,0xacbf0e46
  411c8f:	mov    bl,bh
  411c91:	jg     0x411c51
  411c93:	int3   
  411c94:	mov    al,ds:0x64554bc6
  411c99:	out    0x81,al
  411c9b:	jne    0x411c40
  411c9d:	jbe    0x411c81
  411c9f:	sbb    DWORD PTR [ebp+0x4d],esp
  411ca2:	les    edi,FWORD PTR [ecx+edi*1+0x5f1194e]
  411ca9:	inc    esi
  411caa:	or     al,dl
  411cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cad:	(bad)  
  411caf:	popa   
  411cb0:	lods   al,BYTE PTR ds:[esi]
  411cb1:	icebp  
  411cb2:	dec    edi
  411cb3:	out    0xc5,eax
  411cb5:	bound  ecx,QWORD PTR [ebx-0x240a2a88]
  411cbb:	or     DWORD PTR [ebx-0xa65ff04],edx
  411cc1:	loope  0x411cad
  411cc3:	push   ecx
  411cc4:	outs   dx,DWORD PTR ds:[esi]
  411cc5:	std    
  411cc6:	jno    0x411d2e
  411cc8:	sbb    cl,bh
  411cca:	inc    esi
  411ccb:	jmp    0x49ee72fc
  411cd0:	inc    eax
  411cd1:	out    dx,eax
  411cd2:	xchg   al,dl
  411cd4:	adc    cl,ah
  411cd6:	out    0xb1,al
  411cd8:	ret    0xa7c4
  411cdb:	mov    edx,0x8a09af54
  411ce0:	lods   al,BYTE PTR ds:[esi]
  411ce1:	jbe    0x411cec
  411ce3:	dec    edx
  411ce4:	into   
  411ce5:	ins    BYTE PTR es:[edi],dx
  411ce6:	and    DWORD PTR [edx-0x64],ebx
  411ce9:	mov    ecx,0xb82f8b52
  411cee:	ror    esp,1
  411cf0:	mov    dh,0x1a
  411cf2:	mov    eax,ds:0x13f866c0
  411cf7:	retf   
  411cf8:	dec    ecx
  411cf9:	repnz hlt 
  411cfb:	shr    esi,0xa2
  411cfe:	clc    
  411cff:	adc    DWORD PTR [edi-0x2217bd44],esp
  411d05:	bound  eax,QWORD PTR [ebp-0x2618723f]
  411d0b:	(bad)  [esi-0x47]
  411d0e:	cmp    dh,ah
  411d10:	jmp    0x4cb52b23
  411d15:	mov    eax,ds:0x8837bf17
  411d1a:	or     BYTE PTR [ecx-0x41],ah
  411d1d:	repnz out dx,al
  411d1f:	mov    ah,0xd5
  411d21:	cmp    DWORD PTR [eax+0x36],ecx
  411d24:	icebp  
  411d25:	ss mov ch,0x49
  411d28:	pop    ebp
  411d29:	jb     0x411d7a
  411d2b:	and    edx,DWORD PTR [esi]
  411d2d:	retf   
  411d2e:	sbb    al,0xf1
  411d30:	jae    0x411daf
  411d32:	xor    ebx,DWORD PTR [esp+esi*8-0x6d]
  411d36:	mov    ds:0x8f14cd6d,al
  411d3b:	es in  eax,dx
  411d3d:	adc    al,0x8f
  411d3f:	or     eax,0x8642bb6d
  411d44:	aam    0x43
  411d46:	xor    eax,0xf9cb00de
  411d4b:	imul   esp,DWORD PTR ds:0xd00954a0,0x1e
  411d53:	xchg   ebp,eax
  411d54:	mov    edi,0x27293c77
  411d59:	xor    BYTE PTR [edi],ch
  411d5b:	push   ss
  411d5c:	sar    BYTE PTR [esp+ebx*4],cl
  411d5f:	xor    BYTE PTR [eax+0x11e81037],al
  411d65:	stos   DWORD PTR es:[edi],eax
  411d66:	cli    
  411d67:	pop    ecx
  411d68:	xchg   ecx,eax
  411d69:	jbe    0x411d26
  411d6b:	pop    esi
  411d6c:	fsubr  st,st(0)
  411d6e:	add    ah,cl
  411d70:	jno    0x411d3d
  411d72:	inc    esp
  411d73:	and    BYTE PTR [eax+0x49],0x45
  411d77:	lds    ecx,FWORD PTR [ecx]
  411d79:	aaa    
  411d7a:	mov    ds:0xd4f81b9,eax
  411d7f:	jbe    0x411dae
  411d81:	mov    bh,0x5b
  411d83:	mov    ch,0xee
  411d85:	js     0x411d24
  411d87:	fwait
  411d88:	(bad)  
  411d89:	imul   edx,DWORD PTR [ebx],0x3b
  411d8c:	adc    esp,edx
  411d8e:	inc    esi
  411d8f:	jle    0x411de7
  411d91:	jnp    0x411d7b
  411d93:	add    ah,BYTE PTR [ecx-0x796b111c]
  411d99:	or     BYTE PTR [edx+0x50],ah
  411d9c:	bound  edx,QWORD PTR [edi-0x6391c1d2]
  411da2:	or     ecx,DWORD PTR ds:0x63e9d0e0
  411da8:	lods   eax,DWORD PTR ds:[esi]
  411da9:	loope  0x411d8a
  411dab:	loop   0x411d36
  411dad:	cmp    al,0xba
  411daf:	push   ecx
  411db0:	jne    0x411ddf
  411db2:	aaa    
  411db3:	repnz lea eax,[ecx-0x392aa969]
  411dba:	fnstenvw [edx+esi*1+0x10524d9b]
  411dc2:	test   eax,0xff5140c9
  411dc7:	sbb    dh,BYTE PTR ds:0x61430534
  411dcd:	or     BYTE PTR [esi+esi*4+0x5fb9a67],cl
  411dd4:	sub    DWORD PTR [eax-0x712376d5],0x59ca5982
  411dde:	xor    edx,DWORD PTR ds:[edx-0x6bce046e]
  411de5:	xchg   ecx,eax
  411de6:	sub    bl,BYTE PTR [ecx-0x3dede4d3]
  411dec:	popa   
  411ded:	loopne 0x411e31
  411def:	xchg   ecx,eax
  411df0:	xor    cl,BYTE PTR [ebx+esi*8]
  411df3:	pop    esp
  411df4:	in     eax,0x9b
  411df6:	shr    BYTE PTR [ebx],cl
  411df8:	xor    eax,0xd1190658
  411dfd:	cmp    eax,0xcc9be920
  411e02:	xor    al,0x79
  411e04:	pop    ebp
  411e05:	jge    0x411e02
  411e07:	stc    
  411e08:	loop   0x411d93
  411e0a:	dec    eax
  411e0b:	sbb    ebp,DWORD PTR [ebp+0x68e81166]
  411e11:	cmp    esi,DWORD PTR [esp+eax*8]
  411e14:	bnd jl 0x411e70
  411e17:	inc    ebp
  411e18:	add    BYTE PTR [edx+0x54],bl
  411e1b:	dec    ebp
  411e1c:	call   0x5720:0x85b03723
  411e23:	in     eax,dx
  411e24:	jg     0x411e5a
  411e26:	push   es
  411e27:	je     0x411e87
  411e29:	mov    ah,BYTE PTR [edi-0x3e]
  411e2c:	je     0x411ddb
  411e2e:	pop    ss
  411e2f:	pop    edi
  411e30:	pop    esi
  411e31:	dec    esp
  411e32:	fmul   QWORD PTR [eax]
  411e34:	out    dx,eax
  411e35:	add    esp,edx
  411e37:	xchg   edi,ebx
  411e39:	lods   eax,DWORD PTR ds:[esi]
  411e3a:	sub    DWORD PTR [edx+0xc],0xffffff9d
  411e3e:	sub    ecx,0xffffffc2
  411e41:	scas   eax,DWORD PTR es:[edi]
  411e42:	test   al,0xda
  411e44:	or     DWORD PTR [esi],esp
  411e46:	pop    eax
  411e47:	loope  0x411e7d
  411e49:	dec    ecx
  411e4a:	inc    esi
  411e4b:	xchg   ebx,eax
  411e4c:	sbb    al,ch
  411e4e:	push   edx
  411e4f:	inc    eax
  411e50:	and    eax,0xffffff9e
  411e53:	call   0xb498e0f0
  411e58:	push   edi
  411e59:	sbb    al,0x97
  411e5b:	dec    ebx
  411e5c:	or     al,0xdc
  411e5e:	out    0x2a,eax
  411e60:	mov    esp,0x3639ab1f
  411e65:	push   esi
  411e66:	add    eax,0xcffffb7a
  411e6b:	fdivr  DWORD PTR [edi+edx*1-0x45]
  411e6f:	fs out dx,eax
  411e71:	pop    edx
  411e72:	cli    
  411e73:	pop    es
  411e74:	push   es
  411e75:	mov    bl,0x5a
  411e77:	inc    ebp
  411e78:	or     DWORD PTR [eax-0x5d],ecx
  411e7b:	sub    dl,BYTE PTR [ebx]
  411e7d:	add    bh,0x70
  411e80:	bound  ecx,QWORD PTR [edx-0x4e156072]
  411e86:	fnstcw WORD PTR [ecx+ebp*4]
  411e89:	inc    esi
  411e8a:	mov    edi,DWORD PTR es:[esi]
  411e8d:	and    BYTE PTR [ebx+0x4a4da7e3],al
  411e93:	aad    0x96
  411e95:	(bad)  
  411e96:	lock test DWORD PTR [ebx],eax
  411e99:	mov    BYTE PTR [esp+esi*8-0x2],ah
  411e9d:	inc    edi
  411e9e:	stos   DWORD PTR es:[edi],eax
  411e9f:	std    
  411ea0:	popf   
  411ea1:	inc    esi
  411ea2:	popf   
  411ea3:	adc    al,0xc8
  411ea5:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  411ea7:	outs   dx,BYTE PTR ds:[esi]
  411ea8:	xlat   BYTE PTR ds:[ebx]
  411ea9:	inc    ebx
  411eaa:	or     al,dh
  411eac:	mov    eax,0xc62a9503
  411eb1:	test   eax,0xc36a3e51
  411eb6:	mov    eax,0xdb8fd3e0
  411ebb:	push   esp
  411ebc:	xor    BYTE PTR [edi-0x11816dc6],0xad
  411ec3:	call   0xf70b8463
  411ec8:	pop    esp
  411ec9:	gs add eax,0xa11dd122
  411ecf:	xchg   esi,eax
  411ed0:	mov    bh,0x63
  411ed2:	loop   0x411eb3
  411ed4:	bound  edi,QWORD PTR [ecx-0xf]
  411ed7:	cmp    al,0x75
  411eda:	bound  esi,QWORD PTR [edi-0x14b262aa]
  411ee0:	jl     0x411e96
  411ee2:	mov    dh,0x6f
  411ee4:	fld    QWORD PTR [esi-0x2]
  411ee7:	push   esp
  411ee8:	shl    BYTE PTR [ebx+edi*1],1
  411eeb:	ss or  eax,0x4f9a69e
  411ef1:	xchg   ecx,eax
  411ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ef3:	sti    
  411ef4:	sbb    esi,DWORD PTR [edi]
  411ef6:	in     eax,dx
  411ef7:	mov    ah,0x1d
  411ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411efb:	cmp    eax,0x71397416
  411f00:	lahf   
  411f01:	mov    ebp,0x31e64021
  411f06:	fild   QWORD PTR [ebx+0x32]
  411f09:	dec    edx
  411f0a:	out    0xdd,eax
  411f0c:	xchg   esi,eax
  411f0d:	mov    es,ebx
  411f0f:	cwde   
  411f10:	ror    DWORD PTR [ecx],0x6c
  411f13:	rcl    DWORD PTR [ebx],cl
  411f15:	pop    es
  411f16:	inc    ebx
  411f17:	mov    cl,BYTE PTR [ecx-0x62111bee]
  411f1d:	and    DWORD PTR [ebp+0x20],edi
  411f20:	adc    esp,esp
  411f22:	retf   
  411f23:	imul   edx,DWORD PTR [ebx],0xc5621dbd
  411f29:	sbb    al,0x33
  411f2b:	sub    esp,edx
  411f2d:	addr16 call 0x52c25f
  411f33:	add    edx,0x5e
  411f36:	shl    bl,0xef
  411f39:	jmp    0xaa763537
  411f3e:	cmp    al,0x4a
  411f40:	div    DWORD PTR [esi]
  411f42:	and    DWORD PTR [esi-0x6165b05f],edx
  411f48:	loopne 0x411ee2
  411f4a:	xlat   BYTE PTR ds:[ebx]
  411f4b:	cmp    edi,DWORD PTR [ecx+0x740b809c]
  411f51:	fisttp QWORD PTR [eax]
  411f53:	pop    esi
  411f54:	lods   al,BYTE PTR ds:[esi]
  411f55:	rcr    DWORD PTR [edi+edi*8],1
  411f58:	mov    edi,0xb7b065
  411f5d:	cmp    al,0x1b
  411f5f:	iret   
  411f60:	mov    al,0x90
  411f62:	xchg   esp,eax
  411f63:	xor    ebp,DWORD PTR [ebx]
  411f65:	inc    ebx
  411f66:	xor    DWORD PTR [esi+edi*2],edx
  411f69:	int    0xb2
  411f6b:	inc    ebx
  411f6c:	jmp    0xa278:0x43c36d40
  411f73:	mov    esp,0xd8728b1e
  411f78:	cdq    
  411f79:	out    dx,al
  411f7a:	aas    
  411f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f7c:	call   0x470c0595
  411f81:	(bad)  
  411f82:	cmp    dl,BYTE PTR [eax+esi*4-0x1802209c]
  411f89:	scas   al,BYTE PTR es:[edi]
  411f8a:	mov    al,ds:0x166637a0
  411f8f:	xchg   ebp,eax
  411f90:	add    edx,DWORD PTR [eax-0x7f4ac6a5]
  411f96:	jg     0x411f49
  411f98:	fimul  DWORD PTR [ebp+0x41]
  411f9b:	cld    
  411f9c:	mov    es,WORD PTR [edx]
  411f9e:	xchg   ebp,eax
  411f9f:	mov    esp,0x2c696135
  411fa4:	lock clc 
  411fa6:	add    al,0x89
  411fa8:	mov    ss,edi
  411faa:	mov    WORD PTR [edx-0x3e],?
  411fad:	xor    BYTE PTR [ebx],0x57
  411fb0:	xchg   ebx,eax
  411fb1:	scas   al,BYTE PTR es:[edi]
  411fb2:	out    dx,al
  411fb3:	cmp    DWORD PTR [ebp-0x3e6b5a1f],ebp
  411fb9:	xor    al,BYTE PTR [edx+0x36]
  411fbc:	xor    al,0x64
  411fbe:	shr    DWORD PTR [edx],1
  411fc0:	push   ebp
  411fc1:	ja     0x411f47
  411fc3:	nop
  411fc4:	jle    0x411fe5
  411fc6:	jne    0x411fc0
  411fc8:	sub    BYTE PTR [edi],cl
  411fca:	push   ecx
  411fcb:	sbb    ch,dl
  411fcd:	les    esp,FWORD PTR [edx-0x73aedd8a]
  411fd3:	int3   
  411fd4:	push   eax
  411fd5:	lea    edi,[ecx]
  411fd7:	mov    al,ds:0x62eed929
  411fdc:	xor    eax,ebx
  411fde:	fiadd  DWORD PTR [ebx]
  411fe0:	jbe    0x412031
  411fe2:	ficom  WORD PTR [ebx]
  411fe4:	test   eax,0x5736a06a
  411fe9:	mov    bh,al
  411feb:	retf   
  411fec:	xchg   ecx,eax
  411fed:	dec    ebp
  411fee:	cmp    dl,bl
  411ff0:	jbe    0x412005
  411ff2:	hlt    
  411ff3:	test   eax,0xdaa4b946
  411ff8:	in     al,dx
  411ff9:	pop    edx
  411ffa:	(bad)  
  411ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ffd:	loop   0x412011
  411fff:	retf   
  412000:	pop    ecx
  412001:	stos   BYTE PTR es:[edi],al
  412002:	les    edi,FWORD PTR [ebx-0x30]
  412005:	pusha  
  412006:	mov    bl,0xd8
  412008:	jo     0x412089
  41200a:	mov    cl,0x2b
  41200c:	inc    ecx
  41200d:	idiv   DWORD PTR [ebx-0x3ae7ee7c]
  412013:	jb     0x41206c
  412015:	call   0xff9eae8b
  41201a:	adc    esp,ebx
  41201c:	stc    
  41201d:	push   cs
  41201e:	fs pusha 
  412020:	outs   dx,DWORD PTR ds:[esi]
  412021:	das    
  412022:	hlt    
  412023:	xor    eax,0x56fa32d3
  412028:	mov    DWORD PTR [esi],ecx
  41202a:	mov    eax,ds:0x3fe96633
  41202f:	test   eax,0x3da5702e
  412034:	mov    dh,0x3b
  412036:	cld    
  412037:	js     0x411fe8
  412039:	adc    ah,BYTE PTR [esi]
  41203b:	nop
  41203c:	push   esp
  41203d:	push   es
  41203e:	fild   DWORD PTR ds:0x42436d49
  412044:	out    0xff,al
  412046:	rcl    BYTE PTR [esi],0x62
  412049:	or     al,BYTE PTR [edx+0x398e4a3d]
  41204f:	jmp    0x771f:0x8cb3affb
  412056:	dec    edx
  412057:	dec    ecx
  412058:	arpl   WORD PTR [edi+0x66f0030d],dx
  41205e:	std    
  41205f:	push   esi
  412060:	mov    ecx,ecx
  412062:	xchg   ecx,eax
  412063:	add    dh,BYTE PTR [edx-0x4f]
  412066:	mov    ecx,0x6aa027fb
  41206b:	(bad)  
  41206c:	ret    0x99d9
  41206f:	push   0x78
  412071:	adc    bl,BYTE PTR [edi]
  412073:	lods   eax,DWORD PTR ds:[esi]
  412074:	sub    ch,dh
  412076:	ficomp WORD PTR [ebp-0x5dddb78b]
  41207c:	in     eax,dx
  41207d:	aas    
  41207e:	out    0x72,eax
  412080:	clc    
  412081:	ins    DWORD PTR es:[edi],dx
  412082:	out    dx,eax
  412083:	daa    
  412084:	je     0x41206a
  412086:	pop    edx
  412087:	sbb    ch,BYTE PTR [ecx+0x5d]
  41208a:	sbb    ah,0xdc
  41208d:	leave  
  41208e:	sub    ch,cl
  412090:	shl    cl,0x80
  412093:	xor    esp,DWORD PTR cs:[eax-0x39f07887]
  41209a:	fdiv   DWORD PTR ds:0xae876f4
  4120a0:	xor    DWORD PTR [ebp+0x7ecf3e5a],eax
  4120a6:	(bad)  
  4120a7:	popa   
  4120a8:	add    BYTE PTR [ecx],0x38
  4120ab:	sbb    edx,DWORD PTR [esi+eax*4+0x3c87c71a]
  4120b2:	mov    edx,0x82bfb2a1
  4120b7:	frstor [esi]
  4120b9:	iret   
  4120ba:	das    
  4120bb:	stc    
  4120bc:	out    dx,al
  4120bd:	fimul  WORD PTR ds:0x1ec81334
  4120c3:	push   es
  4120c4:	pop    es
  4120c5:	pop    ebp
  4120c6:	pop    ebx
  4120c7:	sub    BYTE PTR [edi-0x7],ch
  4120ca:	sbb    al,0x59
  4120cc:	mov    cl,0xee
  4120ce:	idiv   DWORD PTR [ecx]
  4120d0:	loope  0x412101
  4120d2:	aas    
  4120d3:	lock sbb ecx,edi
  4120d6:	add    DWORD PTR [eax+eax*1-0x3ec2732],edi
  4120dd:	mov    bh,0x29
  4120df:	js     0x41208b
  4120e1:	inc    ebx
  4120e2:	shl    BYTE PTR [ebp-0x58],0x26
  4120e6:	xor    ch,BYTE PTR [edx]
  4120e8:	stos   BYTE PTR es:[edi],al
  4120e9:	mov    ch,0x52
  4120eb:	cmp    dl,BYTE PTR [edx+0x65793285]
  4120f1:	inc    eax
  4120f2:	iret   
  4120f3:	fild   WORD PTR [edx]
  4120f5:	dec    esp
  4120f6:	shl    DWORD PTR [ebp+0x1d2886f5],0x5c
  4120fd:	fs adc ebp,eax
  412100:	or     edi,ebp
  412102:	sbb    eax,0x49977ad
  412107:	ins    DWORD PTR es:[edi],dx
  412108:	and    eax,0x250a9336
  41210d:	ja     0x41215d
  41210f:	mov    DWORD PTR [ecx-0x6cbaa62a],ebx
  412115:	fistp  WORD PTR [edi]
  412117:	js     0x412189
  412119:	call   0x7c3928f
  41211e:	mov    ch,0x57
  412120:	cmp    ch,ah
  412122:	mov    BYTE PTR [edx-0x5f],dh
  412125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412126:	mov    ?,WORD PTR [ecx]
  412128:	out    0x32,eax
  41212a:	jne    0x41219e
  41212c:	sar    DWORD PTR [ebx],1
  41212e:	or     eax,0xcdb72e3c
  412133:	div    BYTE PTR [esp+edx*8]
  412136:	xlat   BYTE PTR ds:[ebx]
  412137:	cmp    bh,bl
  412139:	and    eax,0xdf0c3b9e
  41213e:	sahf   
  41213f:	xchg   esp,eax
  412140:	and    eax,0x9d460bec
  412145:	push   esi
  412146:	fisubr WORD PTR [ebx+ebx*4-0x25]
  41214a:	xchg   esi,eax
  41214b:	ja     0x4120fa
  41214d:	(bad)  
  41214e:	fldcw  WORD PTR [ebx]
  412150:	xchg   DWORD PTR [esi-0x2a],eax
  412153:	rcl    DWORD PTR [edx],0xe8
  412156:	mov    esp,0x1eca05cd
  41215b:	fistp  WORD PTR [eax-0xd882abb]
  412161:	std    
  412162:	mov    edx,0x7487bda
  412167:	inc    edi
  412168:	stos   DWORD PTR es:[edi],eax
  412169:	mov    esi,0x65f60f75
  41216e:	jns    0x4121b5
  412170:	lods   eax,DWORD PTR ds:[esi]
  412171:	stos   BYTE PTR es:[edi],al
  412172:	lods   al,BYTE PTR ds:[esi]
  412173:	xlat   BYTE PTR ds:[ebx]
  412174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412175:	cld    
  412176:	inc    ebp
  412177:	dec    edi
  412178:	and    bh,ch
  41217a:	aas    
  41217b:	sbb    BYTE PTR [ebx-0x3a76475a],dl
  412181:	rcr    BYTE PTR [edi+0x48abdb05],0xe
  412188:	cmp    al,0x37
  41218a:	nop
  41218b:	xor    DWORD PTR [edi-0x46d86923],ebx
  412191:	jbe    0x41212f
  412193:	gs iret 
  412195:	outs   dx,DWORD PTR ds:[esi]
  412196:	xchg   esp,eax
  412197:	push   ds
  412198:	das    
  412199:	cdq    
  41219a:	jge    0x4121f7
  41219c:	mov    ds:0x82af385a,eax
  4121a1:	out    dx,al
  4121a2:	mov    ds:0x65b47f14,al
  4121a7:	mov    ah,0x4e
  4121a9:	sar    DWORD PTR [edi+0x6a],1
  4121ac:	mov    edx,0x2538d633
  4121b1:	dec    eax
  4121b2:	mov    bh,ah
  4121b4:	retf   
  4121b5:	ins    DWORD PTR es:[edi],dx
  4121b6:	jo     0x4121ca
  4121b8:	cwde   
  4121b9:	xor    ebp,ebp
  4121bb:	in     eax,0x72
  4121bd:	iret   
  4121be:	fsubr  DWORD PTR [esi+0x39ab2310]
  4121c4:	add    BYTE PTR [ebp+0x2215a82d],dl
  4121ca:	rcl    dh,cl
  4121cc:	cld    
  4121cd:	mov    eax,ds:0x8c2e5cc2
  4121d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121d3:	data16 into 
  4121d5:	rol    DWORD PTR [edi-0x5a],cl
  4121d8:	je     0x41221e
  4121da:	inc    ebx
  4121db:	outs   dx,BYTE PTR ds:[esi]
  4121dc:	sub    ah,BYTE PTR [ecx+ecx*4]
  4121df:	iret   
  4121e0:	pop    ebx
  4121e1:	jge    0x4121a6
  4121e3:	dec    edi
  4121e4:	shl    BYTE PTR [edi+0x2c],1
  4121e7:	sbb    al,0x24
  4121e9:	rcr    bh,0x36
  4121ec:	jae    0x412176
  4121ee:	mov    dl,0xc4
  4121f0:	and    BYTE PTR [edx],cl
  4121f2:	jnp    0x412273
  4121f4:	push   ss
  4121f5:	popf   
  4121f6:	dec    ecx
  4121f7:	inc    ebp
  4121f8:	(bad)  
  4121f9:	mov    esp,0xd02ed1c0
  4121fe:	adc    edi,DWORD PTR [ebp+0x24b1894e]
  412204:	outs   dx,DWORD PTR ds:[esi]
  412205:	fcomp  QWORD PTR [ecx+ecx*8]
  412208:	adc    eax,0xe9798154
  41220d:	and    al,0x60
  41220f:	mov    ah,0xba
  412211:	mov    bh,0xae
  412213:	mov    ch,0xc3
  412215:	adc    al,0xfb
  412217:	and    ebp,DWORD PTR [edi+0x5a22e188]
  41221d:	mov    cl,0x20
  41221f:	dec    esi
  412220:	test   al,0xe0
  412222:	nop
  412223:	inc    ecx
  412224:	repz pop es
  412226:	in     eax,0x0
  412228:	jo     0x4121e8
  41222a:	sti    
  41222b:	jo     0x4121cc
  41222d:	cmp    BYTE PTR [eax],dl
  41222f:	mov    ecx,0x97dac985
  412234:	nop
  412235:	mov    ah,0x67
  412237:	mov    ecx,0xbd17e997
  41223c:	fidivr WORD PTR [eax+ecx*2-0x69]
  412240:	and    BYTE PTR [ebp+0x3779e77c],dl
  412246:	xor    BYTE PTR [edi+0x1],ch
  412249:	cmp    BYTE PTR [ebx],bh
  41224b:	fldcw  WORD PTR [eax]
  41224d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41224e:	ja     0x412254
  412250:	sbb    cl,BYTE PTR [edi]
  412252:	cli    
  412253:	dec    edx
  412254:	mov    ch,0xf6
  412256:	add    al,0x97
  412258:	push   ss
  412259:	mov    DWORD PTR [ebx-0x20],ebp
  41225c:	(bad)  
  41225d:	aas    
  41225e:	mov    ebp,0xdc62dc02
  412263:	mov    ds:0xf02a14fa,al
  412268:	or     al,0x82
  41226a:	cmp    BYTE PTR [eax-0x1e6885e7],dl
  412270:	call   0x28d626ce
  412275:	jp     0x412247
  412277:	sahf   
  412278:	push   0xfffffff0
  41227a:	adc    al,BYTE PTR [esi-0x7a291f6e]
  412280:	pushfw 
  412282:	ins    DWORD PTR es:[edi],dx
  412283:	and    edi,DWORD PTR [ebx]
  412285:	cli    
  412286:	pop    esp
  412287:	mul    DWORD PTR [ebp-0x64f5051c]
  41228d:	pop    ss
  41228e:	popf   
  41228f:	jbe    0x412294
  412291:	cmp    al,0x9c
  412293:	xlat   BYTE PTR ds:[ebx]
  412294:	sti    
  412295:	pushf  
  412296:	mov    bh,0x27
  412298:	push   esi
  412299:	(bad)  
  41229b:	call   0x497:0xed18edc3
  4122a2:	sbb    eax,0xd6926413
  4122a7:	mov    ah,0x6a
  4122a9:	mov    edx,0x9800416f
  4122ae:	nop
  4122af:	in     eax,0xb5
  4122b1:	or     BYTE PTR [eax],bl
  4122b3:	xchg   edx,eax
  4122b4:	test   edx,eax
  4122b6:	dec    edx
  4122b7:	jmp    FWORD PTR [eax]
  4122b9:	push   0xb83537cf
  4122be:	add    BYTE PTR [edx+0x4ae94529],bl
  4122c4:	imul   esi,DWORD PTR [ebp-0x2d052cbe],0x92dd275c
  4122ce:	call   0xe445:0xbf7fa466
  4122d5:	add    DWORD PTR [ebx+0x33],esi
  4122d8:	push   ss
  4122d9:	in     al,0x7e
  4122db:	push   es
  4122dc:	jge    0x412314
  4122de:	fild   QWORD PTR [edi-0x1757520a]
  4122e4:	add    BYTE PTR [eax-0x1a618883],bh
  4122ea:	cwde   
  4122eb:	stos   BYTE PTR es:[edi],al
  4122ec:	dec    ebx
  4122ed:	mov    ch,0x7a
  4122ef:	(bad)  
  4122f0:	hlt    
  4122f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122f2:	inc    edi
  4122f3:	jmp    0x41231d
  4122f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122f6:	add    al,0xdb
  4122f8:	push   edx
  4122f9:	mov    dh,0xf9
  4122fb:	stc    
  4122fc:	cmp    BYTE PTR [ecx],0xec
  4122ff:	pop    esi
  412300:	sti    
  412301:	jge    0x41235c
  412303:	mov    fs,esi
  412305:	push   ebp
  412306:	xchg   ebp,eax
  412307:	aas    
  412308:	scas   al,BYTE PTR es:[edi]
  412309:	cs and eax,0xe8a9da3b
  41230f:	sahf   
  412310:	mov    esi,0x5ad1941a
  412315:	dec    ebx
  412316:	aas    
  412317:	ficom  DWORD PTR [eax+0x9]
  41231a:	aad    0xdc
  41231c:	ret    
  41231d:	ret    0xce7f
  412320:	push   0xb5a52405
  412325:	les    ecx,FWORD PTR [esi-0x30]
  412328:	enter  0xf99d,0xef
  41232c:	adc    ebx,0xffffffc1
  41232f:	shr    BYTE PTR [edx-0x1a],0xf2
  412333:	leave  
  412334:	and    DWORD PTR [ecx*8-0x27a08fe2],esp
  41233b:	stos   BYTE PTR es:[edi],al
  41233c:	mov    dl,0xb2
  41233e:	outs   dx,DWORD PTR ds:[esi]
  41233f:	add    ah,ah
  412341:	cld    
  412342:	in     eax,0x8b
  412344:	or     eax,0x2b92592f
  412349:	stos   BYTE PTR es:[edi],al
  41234a:	sbb    BYTE PTR [esi],ch
  41234c:	xchg   ebx,eax
  41234d:	add    ebx,eax
  41234f:	pop    esp
  412350:	mov    edi,DWORD PTR [ecx]
  412352:	xchg   edx,eax
  412353:	lds    eax,FWORD PTR [ebx]
  412355:	lock dec esp
  412358:	popf   
  412359:	(bad)  
  41235b:	pop    edx
  41235c:	and    eax,0x1c1eb968
  412361:	or     BYTE PTR [eax+0x11],ch
  412364:	and    edx,DWORD PTR ds:[esi+0x4e]
  412368:	sbb    DWORD PTR [ebp-0x17e51b28],0x57938666
  412372:	pop    edx
  412373:	add    eax,0xb54872eb
  412378:	mov    ah,0x7
  41237a:	cmp    ah,cl
  41237c:	xchg   ecx,eax
  41237d:	jno    0x41231f
  41237f:	sbb    BYTE PTR [edx+0x10],ch
  412382:	fsubr  DWORD PTR [eax-0x191bc873]
  412388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412389:	shl    ebx,0x89
  41238c:	xchg   esi,eax
  41238d:	cmp    eax,ecx
  41238f:	adc    al,BYTE PTR [ebp+0x22]
  412392:	push   esi
  412393:	jne    0x41231c
  412395:	jb     0x412360
  412397:	jno    0x4123de
  412399:	pushf  
  41239a:	or     al,0xd
  41239c:	mov    dl,0x5a
  41239e:	inc    edi
  41239f:	jmp    0xd90b6f83
  4123a4:	xchg   ecx,eax
  4123a5:	mov    ebx,0xde5ddfc2
  4123aa:	mov    al,dh
  4123ac:	push   eax
  4123ad:	sub    edi,DWORD PTR [ebx-0x154d9994]
  4123b3:	ret    0xe522
  4123b6:	mov    dh,0x69
  4123b8:	or     bl,BYTE PTR [ecx]
  4123ba:	sub    bh,dh
  4123bc:	(bad)  
  4123bd:	cmp    eax,esi
  4123bf:	jmp    0x41235c
  4123c1:	out    0x86,eax
  4123c3:	jnp    0x41241e
  4123c5:	dec    ecx
  4123c6:	push   edi
  4123c7:	les    edi,FWORD PTR [eax-0x4a]
  4123ca:	ret    0x2f0f
  4123cd:	aam    0x3b
  4123cf:	nop
  4123d0:	push   0xfffffff4
  4123d2:	test   al,0x7f
  4123d4:	push   esp
  4123d5:	les    ecx,FWORD PTR [esi]
  4123d7:	dec    esp
  4123d8:	shl    DWORD PTR [edi+0x7c],cl
  4123db:	leave  
  4123dc:	mov    edx,0xa65f569e
  4123e1:	mov    cl,0xc6
  4123e3:	add    ebx,DWORD PTR [ebp+0x6f]
  4123e6:	cwde   
  4123e7:	sbb    ebx,DWORD PTR [ebp+0x42674f8d]
  4123ed:	xor    BYTE PTR [eax+0x0],al
  4123f0:	push   esp
  4123f1:	and    bh,BYTE PTR [ebx]
  4123f3:	scas   eax,DWORD PTR es:[edi]
  4123f4:	gs leave 
  4123f6:	jnp    0x4123f9
  4123f8:	out    dx,eax
  4123f9:	outs   dx,DWORD PTR ds:[esi]
  4123fa:	add    al,0xea
  4123fc:	mov    al,ds:0x8aa3d6e
  412401:	sub    eax,0xed2ae9d0
  412406:	(bad)  
  412407:	call   0x3ca:0xac782411
  41240e:	push   0x1660db09
  412413:	cmc    
  412414:	xchg   edx,eax
  412415:	mov    WORD PTR [edi],es
  412417:	pop    es
  412418:	and    esp,DWORD PTR [esi]
  41241a:	mov    ah,BYTE PTR [ebx+0x77deddb7]
  412420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412421:	xchg   ebx,eax
  412422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412423:	in     al,0x82
  412425:	inc    esi
  412426:	cmp    eax,0xfd09ab19
  41242b:	sbb    al,0xb
  41242d:	cmp    al,al
  41242f:	mov    esp,0xaed2d4fe
  412434:	push   cs
  412435:	mov    dh,0x52
  412437:	mov    edi,0xd75b0181
  41243c:	sbb    DWORD PTR [ecx],edi
  41243e:	adc    al,0xf0
  412440:	ja     0x4123ca
  412442:	ja     0x412462
  412444:	sahf   
  412445:	(bad)  
  412446:	call   0xdbb8:0x32f9ae6d
  41244d:	cli    
  41244e:	inc    ebx
  41244f:	(bad)
  412452:	sahf   
  412453:	lods   al,BYTE PTR ds:[esi]
  412454:	jne    0x41246a
  412456:	ja     0x412400
  412458:	mov    esp,0xba06195e
  41245d:	mov    ch,0xce
  41245f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412460:	xlat   BYTE PTR ds:[ebx]
  412461:	dec    esp
  412462:	cmp    DWORD PTR [eax+0x612f659f],ecx
  412468:	jnp    0x412495
  41246a:	js     0x4124d5
  41246c:	clc    
  41246d:	pop    ecx
  41246e:	pop    esp
  41246f:	or     ecx,esp
  412471:	je     0x41240f
  412473:	and    cl,BYTE PTR [eax]
  412475:	es push edi
  412477:	push   0x8beef9fa
  41247c:	inc    edx
  41247d:	jmp    0x6a58:0x113c71f6
  412484:	pusha  
  412485:	mov    al,ds:0x78f13594
  41248a:	cmp    al,0xd8
  41248c:	mov    fs,esp
  41248e:	mov    ds:0x4664a6ef,eax
  412493:	jns    0x412459
  412495:	jne    0x41247b
  412497:	or     ah,BYTE PTR [edi-0x16]
  41249a:	sub    DWORD PTR [esi+eax*2],0xffffff87
  41249e:	in     al,dx
  41249f:	(bad)  
  4124a0:	(bad)  
  4124a1:	in     al,dx
  4124a2:	cli    
  4124a3:	stos   DWORD PTR es:[edi],eax
  4124a4:	sbb    ebp,eax
  4124a6:	es mov dl,0x99
  4124a9:	mov    ecx,0x2e87a462
  4124ae:	lds    ebx,FWORD PTR [ebx-0x16]
  4124b1:	test   eax,0xc6c7bb49
  4124b6:	rol    BYTE PTR [esi+edx*1+0x1ca9efc],1
  4124bd:	push   ss
  4124be:	call   0xb1bb:0xc2066044
  4124c5:	inc    edi
  4124c6:	adc    eax,0x77332568
  4124cb:	xor    eax,0x16bd2092
  4124d0:	jmp    0xc871a968
  4124d5:	sub    BYTE PTR [ecx+0x16],al
  4124d8:	jle    0x412501
  4124da:	ins    DWORD PTR es:[edi],dx
  4124db:	pop    ecx
  4124dc:	pop    ebp
  4124dd:	cmc    
  4124de:	push   ecx
  4124df:	jecxz  0x4124bf
  4124e1:	lock push ecx
  4124e3:	and    dh,BYTE PTR [esp+eax*8+0xec947d9]
  4124ea:	or     eax,0xeb6c4e1e
  4124ef:	popf   
  4124f0:	out    0xf5,al
  4124f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124f3:	mov    dh,0x1
  4124f5:	jecxz  0x4124fd
  4124f7:	sbb    dl,al
  4124f9:	stc    
  4124fa:	jg     0x41254e
  4124fc:	inc    edx
  4124fd:	xor    DWORD PTR [edx-0x2581db04],esp
  412503:	js     0x41253a
  412505:	out    dx,eax
  412506:	(bad)  ds:0x85277d
  41250c:	mov    ds,WORD PTR fs:[ebp+0x1f49f580]
  412513:	jb     0x412497
  412515:	icebp  
  412516:	(bad)  
  412517:	daa    
  412518:	out    0x9e,al
  41251a:	cwde   
  41251b:	jbe    0x41252a
  41251d:	or     eax,0x3a59b49d
  412522:	stc    
  412523:	call   0x1ff022b5
  412528:	jno    0x4124e4
  41252a:	push   es
  41252b:	mov    esp,0x717fb459
  412530:	loopne 0x4125ae
  412532:	pop    es
  412533:	imul   edx,DWORD PTR [edi],0x83f630ac
  412539:	or     ebp,ebx
  41253b:	or     ebp,DWORD PTR [ebx+0x2a03a041]
  412541:	addr16 popa 
  412543:	xor    esp,esp
  412545:	pop    es
  412546:	inc    edx
  412547:	cmp    al,0x64
  412549:	mov    ah,0xbc
  41254b:	xchg   esp,eax
  41254c:	and    DWORD PTR [edi-0x6d],esp
  41254f:	pop    esi
  412550:	sub    eax,0x2af5e319
  412555:	cmp    ch,cl
  412557:	mov    ecx,DWORD PTR [ecx+0x163e8148]
  41255d:	xor    dh,dh
  41255f:	sti    
  412560:	sbb    DWORD PTR [ebp+0x40e31307],esi
  412566:	pop    ss
  412567:	(bad)  
  412568:	push   esp
  412569:	cmp    eax,0xd816775b
  41256e:	retf   0x9d34
  412571:	sbb    dl,al
  412573:	fcmovbe st,st(7)
  412575:	add    esp,DWORD PTR [esi+edx*1+0x72]
  412579:	sahf   
  41257a:	push   es
  41257b:	call   0x9e945361
  412580:	lahf   
  412581:	mov    ds:0x4a28ae4e,al
  412586:	push   0x9
  412588:	push   eax
  412589:	and    DWORD PTR [esi-0x756e0bf3],ebx
  41258f:	dec    esp
  412590:	lock imul edx,DWORD PTR [ebp-0x543e358],0xffffffee
  412598:	mov    ds:0xd53467a6,eax
  41259d:	in     eax,0x7f
  41259f:	adc    ch,bl
  4125a1:	sub    esp,ebp
  4125a3:	pop    eax
  4125a4:	pusha  
  4125a5:	mov    edx,0x7c6a776d
  4125aa:	add    DWORD PTR ds:0xb89fecc6,ebp
  4125b0:	mov    bh,0x3a
  4125b2:	jl     0x412594
  4125b4:	push   es
  4125b5:	mov    eax,ds:0x12237c98
  4125ba:	or     DWORD PTR [esp+eax*8+0x2c],0x37e7dc86
  4125c2:	lods   al,BYTE PTR ds:[esi]
  4125c3:	lock shr cl,cl
  4125c6:	dec    ebp
  4125c7:	mov    cs,WORD PTR [edi+0x4b]
  4125ca:	mov    ecx,0x68cb754
  4125cf:	mov    ecx,0x7856d4fa
  4125d4:	jmp    0x8fe4:0xbecbcfa9
  4125db:	aaa    
  4125dc:	jb     0x41264f
  4125de:	and    DWORD PTR [ebp-0x28],ebp
  4125e1:	jno    0x412604
  4125e3:	ret    
  4125e4:	cmp    al,0xfd
  4125e6:	mov    cl,BYTE PTR [edx+ebx*2]
  4125e9:	fild   WORD PTR [ebx]
  4125eb:	fisub  DWORD PTR [esp+edx*2+0x7b]
  4125ef:	or     eax,0x61e26bf4
  4125f4:	retf   0x1821
  4125f7:	out    dx,eax
  4125f8:	jg     0x41259a
  4125fa:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4125fc:	push   ss
  4125fd:	mov    ch,0xfa
  4125ff:	outs   dx,DWORD PTR ds:[esi]
  412600:	pop    es
  412601:	pop    ss
  412602:	inc    edi
  412603:	cli    
  412604:	xor    cl,ch
  412606:	pop    esi
  412607:	iret   
  412608:	(bad)  
  412609:	imul   ebp,DWORD PTR [bp+0x5005],0x75
  41260f:	xlat   BYTE PTR ds:[ebx]
  412610:	jg     0x4125a3
  412612:	and    al,0xbf
  412614:	inc    ebp
  412615:	icebp  
  412616:	enter  0xd5c1,0x94
  41261a:	loope  0x4125b8
  41261c:	leave  
  41261d:	pushw  cs
  41261f:	xchg   ebp,eax
  412620:	test   DWORD PTR [edx],0xa4f14910
  412626:	adc    al,0xe3
  412628:	add    BYTE PTR [edx],ah
  41262a:	or     eax,0xa28323ba
  41262f:	pop    ss
  412630:	xor    bh,BYTE PTR [edx+0x71278644]
  412636:	data16 (bad) 
  412638:	pop    eax
  412639:	das    
  41263a:	stc    
  41263b:	jbe    0x4125f7
  41263d:	pusha  
  41263e:	ret    
  41263f:	sbb    al,0xff
  412641:	fdivr  QWORD PTR [edx+0x13e2293]
  412647:	into   
  412648:	mov    ch,0xd
  41264a:	cld    
  41264b:	in     al,0xa6
  41264d:	push   ecx
  41264e:	inc    ebx
  41264f:	jnp    0x4126be
  412651:	hlt    
  412652:	enter  0x43a5,0xd5
  412656:	dec    ebp
  412657:	fidivr DWORD PTR [ecx+edi*8-0x240457a6]
  41265e:	adc    eax,0x1c016b17
  412663:	add    eax,0x9aa02d68
  412668:	and    DWORD PTR [edx-0x4f],edi
  41266b:	fisttp WORD PTR [edx+eiz*8]
  41266e:	fxch   st(6)
  412670:	adc    al,0xf7
  412672:	cmc    
  412673:	or     BYTE PTR [eax+0x179dd023],cl
  412679:	fcom   st(3)
  41267b:	stos   BYTE PTR es:[edi],al
  41267c:	cmp    edi,DWORD PTR [edx]
  41267e:	xchg   ebp,esi
  412680:	mov    DWORD PTR [eax-0x13564d04],edi
  412686:	mov    al,ds:0xce8e2c6c
  41268b:	sub    BYTE PTR [edi+ebx*4],cl
  41268e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41268f:	jmp    0x32852ace
  412694:	dec    ebp
  412695:	es (bad) 
  412698:	xchg   ebx,eax
  412699:	cwde   
  41269a:	ds ret 0xae96
  41269e:	sub    esi,DWORD PTR ds:0xfdcdfba8
  4126a4:	dec    BYTE PTR [edi-0x5e3a867f]
  4126aa:	adc    BYTE PTR [ebx+ecx*2],al
  4126ad:	mov    ch,0x5a
  4126af:	push   0x31
  4126b1:	and    DWORD PTR [eax-0x73],esp
  4126b4:	cmp    eax,0xb9d38b7d
  4126b9:	add    eax,0x24b61f19
  4126be:	cli    
  4126bf:	mov    BYTE PTR [ecx],bl
  4126c1:	xor    al,0xcf
  4126c3:	test   BYTE PTR [ebp*4-0x6f6591ca],0x1
  4126cb:	xchg   esi,eax
  4126cc:	dec    edi
  4126cd:	not    BYTE PTR [ebp+0x60]
  4126d0:	sbb    DWORD PTR [edx],0xffffffd5
  4126d3:	cwde   
  4126d4:	call   0xf7faa9fb
  4126d9:	pop    esi
  4126da:	loop   0x41268a
  4126dc:	xlat   BYTE PTR ds:[ebx]
  4126dd:	lahf   
  4126de:	add    al,0x76
  4126e0:	je     0x4126ae
  4126e2:	cmp    esi,DWORD PTR [esi+0x2d]
  4126e5:	mov    al,0xf
  4126e7:	std    
  4126e8:	aad    0x17
  4126ea:	pop    esi
  4126eb:	cli    
  4126ec:	cwde   
  4126ed:	sbb    DWORD PTR [esi-0x78c93930],ebx
  4126f3:	push   esi
  4126f4:	xor    dh,BYTE PTR [ebx]
  4126f6:	and    eax,0x8d498e21
  4126fb:	fld    QWORD PTR [ebp-0x3e]
  4126fe:	loop   0x4126db
  412700:	mov    eax,0xcb2d49ba
  412705:	ret    0xaf91
  412708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412709:	aad    0xa7
  41270b:	xor    edi,DWORD PTR [ecx]
  41270d:	or     ch,bl
  41270f:	js     0x41270f
  412711:	mov    ds:0x3fba3ccb,al
  412716:	mov    al,ds:0x97c0651
  41271b:	fdiv   QWORD PTR [ebp+0x34ed7ecc]
  412721:	imul   esi,ecx,0x695d6d0
  412727:	in     eax,dx
  412728:	push   edx
  412729:	std    
  41272a:	mov    bl,0x81
  41272c:	test   eax,0xead2537d
  412731:	sub    dh,ch
  412733:	adc    eax,0x3db4ea17
  412738:	mov    edx,0x81e07aeb
  41273d:	jl     0x4126f5
  41273f:	rol    eax,cl
  412741:	jae    0x412720
  412743:	xchg   edx,eax
  412744:	jg     0x41277c
  412746:	pop    edi
  412747:	xorps  xmm0,XMMWORD PTR [ebp-0x45d60d04]
  41274e:	in     al,dx
  41274f:	mov    esi,0x1eda0a32
  412754:	xor    al,0x7d
  412756:	xchg   edi,eax
  412757:	rcl    BYTE PTR [edx],cl
  412759:	outs   dx,DWORD PTR ds:[esi]
  41275a:	cmp    al,0x9a
  41275c:	xor    edi,edi
  41275e:	cs inc ebx
  412760:	in     eax,0x82
  412762:	sub    edi,DWORD PTR [edx]
  412764:	mov    esi,0x6a144ae
  412769:	adc    BYTE PTR [ebx+eax*8+0x2ab2a92a],dl
  412770:	ret    0x7dd9
  412773:	leave  
  412774:	lock pop ecx
  412776:	imul   ecx,DWORD PTR [esi-0x7],0x66be9bf7
  41277d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41277e:	pop    edx
  41277f:	push   edi
  412780:	and    DWORD PTR [edi-0x17],ebx
  412783:	push   0xffffffde
  412785:	cmp    eax,ebx
  412787:	mov    dh,0xf2
  412789:	(bad)  
  41278a:	bound  esp,QWORD PTR [ebx-0x2e4cf786]
  412790:	push   esi
  412791:	lock jno 0x412744
  412794:	bound  esi,QWORD PTR [eax+0x4be73594]
  41279a:	imul   edx,DWORD PTR [esi],0xffffffae
  41279d:	in     al,dx
  41279e:	cwde   
  41279f:	jnp    0x4127fb
  4127a1:	icebp  
  4127a2:	das    
  4127a3:	mov    esp,0x98ba11a1
  4127a8:	inc    edx
  4127a9:	jl     0x412829
  4127ab:	popf   
  4127ac:	pop    ebx
  4127ad:	inc    esi
  4127ae:	jnp    0x41275d
  4127b0:	pop    eax
  4127b1:	cmp    al,0xcb
  4127b3:	or     eax,0x4b501619
  4127b8:	sbb    bh,BYTE PTR [ebx]
  4127ba:	xor    eax,0xfdfa2fb4
  4127bf:	not    DWORD PTR [edi]
  4127c1:	rcr    BYTE PTR [eax],0xd3
  4127c4:	call   0x64c9:0x572e6452
  4127cb:	int    0xcf
  4127cd:	sbb    ah,BYTE PTR [eax]
  4127cf:	mov    ebp,0x354a752c
  4127d4:	jno    0x41278c
  4127d6:	(bad)  
  4127d8:	xchg   ecx,eax
  4127d9:	sub    DWORD PTR ds:0xac60d203,ebp
  4127df:	sahf   
  4127e0:	xchg   ecx,eax
  4127e1:	inc    eax
  4127e2:	ds shr edx,cl
  4127e5:	sbb    ebx,edi
  4127e7:	stos   DWORD PTR es:[edi],eax
  4127e8:	fst    QWORD PTR [ebx+ebp*1-0x69]
  4127ec:	test   eax,0x3c247c94
  4127f1:	mov    WORD PTR [ebx+0x2d],cs
  4127f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127f5:	mov    esp,0x9c0f389e
  4127fa:	dec    edi
  4127fb:	mov    dl,0x6a
  4127fd:	jp     0x412838
  4127ff:	sub    eax,0x936a0c4c
  412804:	xor    eax,0x5725e9a0
  412809:	pop    es
  41280a:	xor    eax,DWORD PTR [ecx]
  41280c:	aaa    
  41280d:	pop    edi
  41280e:	sub    ebp,DWORD PTR [eax+0x60]
  412811:	fiadd  WORD PTR [ecx]
  412813:	leave  
  412814:	add    al,0xfa
  412816:	pusha  
  412817:	pop    ss
  412818:	cld    
  412819:	xbegin 0x8a0ea137
  41281f:	cmp    BYTE PTR [eax],0xcc
  412822:	je     0x41281e
  412824:	ror    edi,1
  412826:	jo     0x4127ef
  412828:	fsub   st,st(7)
  41282a:	cld    
  41282b:	inc    ecx
  41282c:	mov    edx,0xf9ebced
  412831:	test   ecx,eax
  412833:	ins    DWORD PTR es:[edi],dx
  412834:	cmp    ebx,DWORD PTR [ebx-0x1a]
  412837:	stc    
  412838:	pop    ss
  412839:	lea    edi,[edi+ebx*2]
  41283c:	mov    ecx,0x916120ce
  412841:	push   es
  412842:	cld    
  412843:	ds push ebp
  412845:	stc    
  412846:	and    al,0x4
  412848:	mov    cl,0x60
  41284a:	arpl   cx,si
  41284c:	stos   DWORD PTR es:[edi],eax
  41284d:	xchg   ebx,eax
  41284e:	pop    eax
  41284f:	rcr    DWORD PTR [esi-0x31],cl
  412852:	cmp    esi,ebp
  412854:	popf   
  412855:	test   DWORD PTR [edx-0x5ea9e505],esi
  41285b:	cld    
  41285c:	push   ss
  41285d:	inc    edi
  41285e:	push   ecx
  41285f:	inc    ecx
  412860:	rcr    DWORD PTR [edx+0x7e],1
  412863:	repnz sub eax,0x9a4799a8
  412869:	shr    ah,cl
  41286b:	mov    bl,0x61
  41286d:	pushf  
  41286e:	fst    QWORD PTR [edx]
  412870:	out    0x7f,eax
  412872:	cmc    
  412873:	sub    al,0x9f
  412875:	out    dx,eax
  412876:	inc    ebx
  412877:	icebp  
  412878:	cmp    eax,0xfc377b8e
  41287d:	add    al,al
  41287f:	xchg   esp,eax
  412880:	aad    0xbc
  412882:	lahf   
  412883:	sbb    dl,bl
  412885:	stc    
  412886:	loop   0x4128fd
  412888:	cmp    DWORD PTR [ecx-0x49a74dc6],ebx
  41288e:	mov    dl,0xf4
  412890:	sahf   
  412891:	in     eax,0xcf
  412893:	cmp    esp,DWORD PTR [ebx+ebp*2+0x32c77585]
  41289a:	pop    ss
  41289b:	retf   
  41289c:	icebp  
  41289d:	inc    eax
  41289e:	dec    esi
  41289f:	sub    dh,BYTE PTR ss:[ecx+0x34]
  4128a3:	sti    
  4128a4:	out    0xca,al
  4128a6:	popa   
  4128a7:	js     0x4128d2
  4128a9:	ins    BYTE PTR es:[edi],dx
  4128aa:	ret    
  4128ab:	mov    DWORD PTR [edi+0x69],edi
  4128ae:	sbb    DWORD PTR [esi-0x7797c0f2],ebx
  4128b4:	in     eax,0xf6
  4128b6:	or     ebx,DWORD PTR [edi]
  4128b8:	fnsave [edi]
  4128ba:	jb     0x4128d7
  4128bc:	jecxz  0x412872
  4128be:	cwde   
  4128bf:	or     ch,BYTE PTR [edi]
  4128c1:	inc    esp
  4128c2:	xlat   BYTE PTR ds:[ebx]
  4128c3:	dec    eax
  4128c4:	pop    eax
  4128c5:	and    ch,BYTE PTR [ecx+0xea05bf]
  4128cb:	cli    
  4128cc:	sbb    bl,0xb
  4128cf:	sub    eax,0x2669ff26
  4128d4:	mov    eax,ds:0x5fcf394e
  4128d9:	adc    al,0x5b
  4128db:	loopne 0x4128dd
  4128dd:	int3   
  4128de:	(bad)  
  4128df:	scas   eax,DWORD PTR es:[edi]
  4128e0:	fs cmp al,0x2
  4128e3:	fcomi  st,st(2)
  4128e5:	enter  0x6905,0x14
  4128e9:	adc    BYTE PTR [ebp+0x2cae6442],ah
  4128ef:	push   0xffffffbe
  4128f1:	xchg   ebp,eax
  4128f2:	test   eax,0x951d3faf
  4128f8:	pmuludq mm2,QWORD PTR [edx-0xb]
  4128fc:	shl    DWORD PTR [eax],0xe6
  4128ff:	subps  xmm7,XMMWORD PTR [edx-0x398dcf17]
  412906:	and    al,0x5d
  412908:	xor    al,0x31
  41290a:	xlat   BYTE PTR ds:[ebx]
  41290b:	jecxz  0x41290f
  41290d:	loope  0x4128b5
  41290f:	push   ecx
  412910:	pop    ebp
  412911:	pop    esi
  412912:	(bad)  
  412913:	pop    ebx
  412914:	mov    edx,0x94355982
  412919:	jo     0x7a8a99ad
  41291f:	mov    dl,0xd8
  412921:	mov    DWORD PTR [esi],0x6388cf03
  412927:	adc    ebx,DWORD PTR [ebp+eax*1+0x52]
  41292b:	fs jge 0x41295f
  41292e:	jecxz  0x41295c
  412930:	dec    esi
  412931:	stc    
  412932:	sahf   
  412933:	sub    eax,0x705bd23b
  412938:	mov    ebp,0x21050a57
  41293d:	mov    ebp,0x41b4718d
  412942:	aas    
  412943:	ret    
  412944:	out    0xa,al
  412946:	ror    dh,1
  412948:	out    dx,al
  412949:	clc    
  41294a:	imul   edi,DWORD PTR [edx],0x8da8822
  412950:	mov    ah,0x4c
  412952:	add    al,0xea
  412954:	les    eax,FWORD PTR [ecx-0x1bc868c3]
  41295a:	es pop ebp
  41295c:	ss jne 0x412958
  41295f:	ins    DWORD PTR es:[edi],dx
  412960:	rol    BYTE PTR [esi-0x51],1
  412963:	lds    ebp,FWORD PTR [ebp+ecx*4+0x4420f754]
  41296a:	test   al,0x58
  41296c:	cmp    esp,esi
  41296e:	inc    esi
  41296f:	xor    DWORD PTR [esi+ebp*8+0x502102c9],0x35ab49a0
  41297a:	mov    esi,0x7521fb8b
  41297f:	punpcklbw mm6,DWORD PTR [eax-0x13]
  412983:	imul   edi,ebx,0xffffff9a
  412986:	test   BYTE PTR [edx-0x757533ec],dh
  41298c:	ret    
  41298d:	ja     0x412980
  41298f:	push   ss
  412990:	or     al,0xfb
  412992:	sub    BYTE PTR [esi],dl
  412994:	into   
  412995:	push   eax
  412996:	sti    
  412997:	add    eax,0xf0204d62
  41299c:	mov    esp,0xe2bc2fa2
  4129a1:	or     eax,0xc469aa7c
  4129a6:	xchg   esp,eax
  4129a7:	and    DWORD PTR [ebx-0x1d],eax
  4129aa:	icebp  
  4129ab:	mov    esi,0xd6925dea
  4129b0:	inc    ebp
  4129b1:	loope  0x4129a9
  4129b3:	loop   0x4129e5
  4129b5:	or     BYTE PTR [ecx+0x71],ch
  4129b8:	mov    dh,BYTE PTR [edi+ebp*4]
  4129bb:	aam    0xb9
  4129bd:	xchg   esi,eax
  4129be:	not    BYTE PTR [ecx+0x533cc524]
  4129c4:	mov    dh,0x4e
  4129c6:	sub    edi,DWORD PTR [edx-0x3950a55d]
  4129cc:	call   0xdc8af408
  4129d1:	in     al,dx
  4129d2:	cli    
  4129d3:	fucomp st(7)
  4129d5:	jg     0x412a41
  4129d7:	fldenv [ecx]
  4129d9:	xchg   ch,al
  4129db:	mov    esi,0xe53c111
  4129e0:	jecxz  0x4129a8
  4129e2:	shl    BYTE PTR [ecx-0x125ffb1b],1
  4129e8:	stos   BYTE PTR es:[edi],al
  4129e9:	lea    ebx,[esi+0x17]
  4129ec:	scas   al,BYTE PTR es:[edi]
  4129ed:	jecxz  0x412a0d
  4129ef:	inc    ebx
  4129f0:	jp     0x4129fd
  4129f2:	dec    esp
  4129f3:	cmp    al,0x2c
  4129f5:	inc    esi
  4129f6:	inc    ebp
  4129f7:	push   edx
  4129f8:	sbb    BYTE PTR [ecx+ecx*2],dh
  4129fb:	fnstenv [ebp-0x51bda05]
  412a01:	clc    
  412a02:	sub    edx,DWORD PTR [esi+0x7a]
  412a05:	(bad)  [eax-0x3d]
  412a08:	leave  
  412a09:	cmp    eax,0x20d1edfb
  412a0e:	fs (bad) 
  412a10:	jns    0x412a37
  412a12:	in     al,dx
  412a13:	sbb    al,0x91
  412a15:	push   esp
  412a16:	sbb    BYTE PTR ds:0x33ded184,ch
  412a1c:	mov    ch,BYTE PTR [edx+0x270a8c64]
  412a22:	add    bh,BYTE PTR [ecx+0x72]
  412a25:	out    0xe6,al
  412a27:	fwait
  412a28:	sbb    ebp,DWORD PTR [esi+0x54941f0c]
  412a2e:	xor    al,0x3f
  412a30:	and    dh,bl
  412a32:	popa   
  412a33:	fstp   QWORD PTR [eax]
  412a35:	adc    eax,DWORD PTR [eax-0x4ffaaea8]
  412a3b:	ds dec ebp
  412a3d:	test   eax,0xb7e3c2ff
  412a42:	mov    esp,0x83205cbb
  412a47:	pop    ss
  412a48:	jmp    0xee97:0x95ec1ad3
  412a4f:	repz and eax,0xbe5d6a5b
  412a55:	bound  edi,QWORD PTR [ebx-0xbd6507b]
  412a5b:	popf   
  412a5c:	and    esi,DWORD PTR [eax+edi*1+0x788d83d4]
  412a63:	xchg   DWORD PTR [ebp+0x12],edx
  412a66:	xchg   ebx,eax
  412a67:	stos   BYTE PTR es:[edi],al
  412a68:	xor    bl,ah
  412a6a:	int3   
  412a6b:	mov    dl,0xb1
  412a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a6e:	fwait
  412a6f:	inc    edi
  412a70:	sbb    ebx,eax
  412a72:	aas    
  412a73:	scas   al,BYTE PTR es:[edi]
  412a74:	out    dx,eax
  412a75:	fbstp  TBYTE PTR [ebx+edx*4]
  412a78:	mov    eax,ebp
  412a7a:	js     0x412a4f
  412a7c:	mov    eax,DWORD PTR [esi]
  412a7e:	pop    eax
  412a7f:	adc    BYTE PTR [ebx-0x15686213],cl
  412a85:	bound  ecx,QWORD PTR [edi+0x269d2151]
  412a8b:	stos   DWORD PTR es:[edi],eax
  412a8c:	ficom  WORD PTR [ebp+0x45]
  412a8f:	outs   dx,BYTE PTR ds:[esi]
  412a90:	pop    ds
  412a91:	jmp    0x5664fc32
  412a96:	(bad)  
  412a97:	shl    DWORD PTR [esp+edi*8],1
  412a9a:	add    DWORD PTR [ecx-0x746e8a05],ecx
  412aa0:	pop    eax
  412aa1:	inc    ebp
  412aa2:	cmp    BYTE PTR [ecx-0x75bddf28],dl
  412aa8:	push   esi
  412aa9:	loope  0x412abd
  412aab:	inc    DWORD PTR [eax-0x3]
  412aae:	sbb    DWORD PTR [eax],ebx
  412ab0:	xchg   ebp,eax
  412ab1:	adc    eax,0xf6e0b795
  412ab6:	mov    DWORD PTR [ebx+0x5aaad009],esi
  412abc:	push   cs
  412abd:	ja     0x412a6c
  412abf:	adc    bh,BYTE PTR [edi]
  412ac1:	ds xor eax,0xb4704eab
  412ac7:	js     0x412a9f
  412ac9:	loopne 0x412a97
  412acb:	mov    edi,0x78ba9f5f
  412ad0:	push   ds
  412ad1:	push   ecx
  412ad2:	mov    dh,0xc
  412ad4:	leave  
  412ad5:	inc    esi
  412ad6:	cmp    edi,esi
  412ad8:	mov    WORD PTR [edi],ss
  412ada:	pop    ds
  412adb:	add    bl,BYTE PTR [edi-0x1fee855f]
  412ae1:	js     0x412b37
  412ae3:	sub    eax,0xfe294192
  412ae8:	test   ebp,edi
  412aea:	mov    ebx,0x4a9a7a4a
  412aef:	fsubr  QWORD PTR [edi]
  412af1:	rcr    DWORD PTR [edx],0x58
  412af4:	xlat   BYTE PTR ds:[ebx]
  412af5:	jle    0x412b29
  412af7:	cmp    BYTE PTR [esi+0x6ec077ba],al
  412afd:	mov    ebp,0xbf94386f
  412b02:	js     0x412aa3
  412b04:	mov    WORD PTR [ecx-0x68],ss
  412b07:	mov    bl,0x20
  412b09:	imul   eax,DWORD PTR [ecx-0x21],0x6
  412b0d:	(bad)  
  412b0f:	in     eax,dx
  412b10:	mov    eax,0x58b6516d
  412b15:	xchg   esp,eax
  412b16:	iret   
  412b17:	mov    ch,0x49
  412b19:	in     eax,0xdb
  412b1b:	in     eax,dx
  412b1c:	add    ebp,ecx
  412b1e:	mov    edx,0xfaabce1f
  412b23:	in     al,0xa6
  412b25:	sub    ecx,DWORD PTR [eax]
  412b27:	sbb    DWORD PTR ds:0xe850637c,edi
  412b2d:	add    DWORD PTR [edi-0x14d19b40],0x4d6b2d0b
  412b37:	(bad)  
  412b38:	out    dx,eax
  412b39:	shl    DWORD PTR [esi],0x27
  412b3c:	adc    ebx,DWORD PTR [edi]
  412b3e:	or     BYTE PTR [ebx-0x5d7f4d9],0x44
  412b45:	icebp  
  412b46:	js     0x412b9b
  412b48:	in     eax,dx
  412b49:	cld    
  412b4a:	and    al,0x3
  412b4c:	inc    ebx
  412b4d:	(bad)  
  412b4e:	dec    ebx
  412b4f:	je     0x412b0d
  412b51:	cmp    DWORD PTR [ebx+0x72],edi
  412b54:	inc    esp
  412b55:	sub    ah,ah
  412b57:	out    dx,eax
  412b58:	and    bl,dh
  412b5a:	mov    dh,0xb7
  412b5c:	mov    eax,0x8e8304d4
  412b61:	mov    ebp,0x56aaa7e7
  412b66:	pusha  
  412b67:	jecxz  0x412bb5
  412b69:	icebp  
  412b6a:	xchg   ebx,eax
  412b6b:	fsub   QWORD PTR [edx-0x56]
  412b6e:	lods   al,BYTE PTR ds:[esi]
  412b6f:	pop    ds
  412b70:	xchg   BYTE PTR [edi],dh
  412b72:	push   0x49
  412b74:	imul   esp,edx,0xffffffa0
  412b77:	mov    esi,0xf922a7b9
  412b7c:	ret    0x2598
  412b7f:	inc    ecx
  412b80:	call   0x4b13deb2
  412b85:	pop    ecx
  412b86:	lea    edi,[esi]
  412b88:	add    al,0x22
  412b8a:	mov    bl,0x90
  412b8c:	mov    ss,WORD PTR [ecx+edx*4-0x7d]
  412b90:	push   cs
  412b91:	fwait
  412b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b93:	mov    ebx,0xa9795a79
  412b98:	cdq    
  412b99:	pop    es
  412b9a:	or     dl,BYTE PTR [eax+0x6b1f5a36]
  412ba0:	enter  0xe5a7,0x24
  412ba4:	sti    
  412ba5:	fld    TBYTE PTR [esi]
  412ba7:	es mov ebx,cs
  412baa:	in     eax,0xbe
  412bac:	push   ds
  412bad:	mov    dl,0x29
  412baf:	add    eax,0x5551bb02
  412bb4:	cmc    
  412bb5:	mov    edx,ebx
  412bb7:	mov    al,ds:0x43133fb
  412bbc:	xor    al,BYTE PTR [eax-0x8]
  412bbf:	xor    eax,0xd14f746
  412bc4:	push   es
  412bc5:	ret    
  412bc6:	stos   BYTE PTR es:[edi],al
  412bc7:	aaa    
  412bc8:	lahf   
  412bc9:	retf   
  412bca:	bound  ebp,QWORD PTR [esi-0x399d4a07]
  412bd0:	mov    BYTE PTR [esi+0x47],al
  412bd3:	sbb    BYTE PTR [ecx+0x34],0xe9
  412bd7:	mov    al,ds:0x6a2c98df
  412bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bdd:	sub    al,0x4e
  412bdf:	arpl   WORD PTR [edx+0x7e],di
  412be2:	call   0xf69c:0x8e1c557e
  412be9:	aad    0x4a
  412beb:	inc    esp
  412bec:	or     cl,BYTE PTR [eax]
  412bee:	mov    bh,0x52
  412bf0:	and    BYTE PTR [ebp+ebx*2-0x50],cl
  412bf4:	aam    0xf1
  412bf6:	aad    0xa8
  412bf8:	pop    es
  412bf9:	fisub  DWORD PTR [eax-0xf7b2dd0]
  412bff:	mov    edi,0x5b3529d
  412c04:	cs leave 
  412c06:	jecxz  0x412c02
  412c08:	aad    0xd2
  412c0a:	popa   
  412c0b:	lods   al,BYTE PTR ds:[esi]
  412c0c:	std    
  412c0d:	push   ss
  412c0e:	mov    ch,0x82
  412c10:	sbb    eax,0x580ee549
  412c15:	in     al,0xdd
  412c17:	add    al,0xe8
  412c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c1a:	or     al,0x7c
  412c1c:	push   0x29
  412c1e:	loop   0x412c88
  412c20:	inc    esi
  412c21:	(bad)  
  412c22:	mov    bl,0x50
  412c24:	or     al,0x23
  412c26:	push   edx
  412c27:	cmp    BYTE PTR [ecx-0x4b143ad2],bl
  412c2d:	sbb    eax,ecx
  412c2f:	adc    DWORD PTR [ebp+0x39],ebp
  412c32:	mov    bh,0x86
  412c34:	or     eax,0xb96a3e72
  412c39:	std    
  412c3a:	ret    0xadb4
  412c3d:	mov    WORD PTR [edi+0x5f],es
  412c40:	jg     0x412c70
  412c42:	jecxz  0x412c3a
  412c44:	mov    bl,0xe2
  412c46:	pusha  
  412c47:	xlat   BYTE PTR ds:[ebx]
  412c48:	pop    ebp
  412c49:	das    
  412c4a:	lock div ebx
  412c4d:	dec    ecx
  412c4e:	fwait
  412c4f:	sbb    BYTE PTR [ebp+0x35],al
  412c52:	ret    0x75aa
  412c55:	dec    ebp
  412c56:	in     al,0x5
  412c58:	push   DWORD PTR ss:[ebx+0x10]
  412c5c:	jp     0x412c4c
  412c5e:	aaa    
  412c5f:	(bad)  
  412c60:	jbe    0x412cd6
  412c62:	(bad)  
  412c63:	cmp    BYTE PTR [eax],0xc5
  412c66:	jge    0x412c2a
  412c68:	xchg   BYTE PTR [eax+edi*1-0x5ffaa2f2],al
  412c6f:	mov    edx,0x8d57b8b
  412c74:	jmp    0xb1b0:0xa70f8408
  412c7b:	pop    edi
  412c7c:	or     ecx,DWORD PTR [ecx]
  412c7e:	out    dx,eax
  412c7f:	aam    0xd
  412c81:	add    bl,BYTE PTR ss:[ebp+0x57]
  412c85:	sar    edi,cl
  412c87:	mov    bl,0x51
  412c89:	fyl2x  
  412c8b:	ret    
  412c8c:	imul   ebp,esp,0xf6571455
  412c92:	dec    ecx
  412c93:	(bad)  
  412c94:	push   0xffffff9b
  412c96:	addr16 dec esi
  412c98:	das    
  412c99:	imul   edx,DWORD PTR ds:0x257414f2,0x48
  412ca0:	jbe    0x412c26
  412ca2:	jle    0x412c76
  412ca4:	lods   eax,DWORD PTR ds:[esi]
  412ca5:	dec    esi
  412ca6:	out    0xb2,eax
  412ca8:	pop    ds
  412ca9:	ins    BYTE PTR es:[edi],dx
  412caa:	xchg   edx,eax
  412cab:	sbb    DWORD PTR [ecx],0x8f8155f4
  412cb1:	cmp    BYTE PTR [ebx-0x64],dh
  412cb4:	iret   
  412cb5:	popf   
  412cb6:	gs push ds
  412cb8:	mov    ds:0xdb7aab8d,eax
  412cbd:	mov    es,ecx
  412cbf:	mov    ecx,0x50745d25
  412cc4:	ins    BYTE PTR es:[edi],dx
  412cc5:	jmp    0x412d1a
  412cc7:	call   0x6922:0x1ab5fb74
  412cce:	gs dec ecx
  412cd0:	sbb    DWORD PTR [edx],ebx
  412cd2:	push   cs
  412cd3:	lods   eax,DWORD PTR ds:[esi]
  412cd4:	xor    ecx,eax
  412cd6:	ins    BYTE PTR es:[edi],dx
  412cd7:	mov    ?,WORD PTR [ebx-0x5f]
  412cda:	int    0xe4
  412cdc:	mov    esp,0x3049e114
  412ce1:	loop   0x412d50
  412ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce4:	adc    BYTE PTR [edi],bh
  412ce6:	mov    DWORD PTR [eax-0x3d19aaec],edx
  412cec:	loope  0x412c77
  412cee:	and    BYTE PTR [eax],0xfd
  412cf1:	cmc    
  412cf2:	mov    ax,0xed7a
  412cf6:	sub    al,0xd1
  412cf8:	jae    0x412d56
  412cfa:	jecxz  0x412d24
  412cfc:	push   ss
  412cfd:	lds    ebp,FWORD PTR [edx]
  412cff:	cmp    DWORD PTR [edx+0x6d],esi
  412d02:	cdq    
  412d03:	fs aaa 
  412d05:	popf   
  412d06:	ret    0xc74f
  412d09:	call   0x7fec8956
  412d0e:	loop   0x412d22
  412d10:	gs jecxz 0x412d71
  412d13:	jmp    0xd38a:0x1ff1e3cc
  412d1a:	mov    bl,0x4b
  412d1c:	in     al,0x26
  412d1e:	pop    edi
  412d1f:	dec    edi
  412d20:	(bad)  
  412d22:	sbb    eax,0xfb2cdff9
  412d27:	ds je  0x412d98
  412d2a:	jg     0x412cc1
  412d2c:	dec    ecx
  412d2d:	dec    edx
  412d2e:	jp     0x412d86
  412d30:	inc    edi
  412d31:	xchg   edx,eax
  412d32:	xor    al,0x41
  412d34:	sub    BYTE PTR [esi],0xf
  412d37:	pop    ds
  412d38:	dec    ebx
  412d39:	out    dx,eax
  412d3a:	dec    ebp
  412d3b:	mov    edx,0x7fd8f2fb
  412d40:	lahf   
  412d41:	sub    DWORD PTR [edx-0x5a],eax
  412d44:	ret    
  412d45:	mov    BYTE PTR [esp+ecx*1],dl
  412d48:	int3   
  412d49:	cdq    
  412d4a:	imul   edi,DWORD PTR [eax],0xffffffdd
  412d4d:	out    0xc9,al
  412d4f:	push   ecx
  412d50:	out    dx,eax
  412d51:	call   0x1406:0xe5ecc8ab
  412d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d59:	mov    edx,0x633a08eb
  412d5e:	add    eax,0xdd53545b
  412d63:	xchg   esp,eax
  412d64:	ret    0x851b
  412d67:	mov    al,ds:0xdbab65e5
  412d6c:	div    BYTE PTR [ebp-0x6e]
  412d6f:	pop    es
  412d70:	scas   al,BYTE PTR es:[edi]
  412d71:	icebp  
  412d72:	pop    ecx
  412d73:	loopne 0x412d10
  412d75:	mov    dl,BYTE PTR fs:[esi-0xb59bfac]
  412d7c:	dec    esp
  412d7d:	sahf   
  412d7e:	fdiv   QWORD PTR [ecx+esi*4+0x36]
  412d82:	test   BYTE PTR [edx-0x6aaceef5],cl
  412d88:	cmp    dl,BYTE PTR [edx-0x75]
  412d8b:	bound  ecx,QWORD PTR [esi+0x76]
  412d8e:	aam    0x30
  412d90:	dec    ebx
  412d91:	enter  0x7cfe,0x3f
  412d95:	cmp    DWORD PTR [ebx],edi
  412d97:	adc    BYTE PTR [edx],ah
  412d99:	push   0xffffffe3
  412d9b:	aas    
  412d9c:	shl    BYTE PTR [edi],0xdf
  412d9f:	mov    al,0xc9
  412da1:	inc    ebx
  412da2:	jmp    0x412e0f
  412da4:	and    DWORD PTR [eax],eax
  412da6:	sbb    bl,ch
  412da8:	add    edx,DWORD PTR [ebp+edi*1+0x34]
  412dac:	std    
  412dad:	sub    al,0x5d
  412daf:	bound  eax,QWORD PTR [ebx-0x4]
  412db2:	std    
  412db3:	push   ebp
  412db4:	sbb    ebx,0xc232bd59
  412dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dbb:	ja     0x412dfe
  412dbd:	or     eax,0x37542384
  412dc2:	pusha  
  412dc3:	jg     0x412e26
  412dc5:	neg    edi
  412dc7:	stc    
  412dc8:	mov    bh,0x84
  412dca:	push   cs
  412dcb:	xor    eax,0x3733ca7d
  412dd0:	dec    ecx
  412dd1:	cmc    
  412dd2:	sub    al,0xff
  412dd4:	xchg   edi,eax
  412dd5:	pop    ecx
  412dd6:	in     al,0xfc
  412dd8:	push   0xffffff97
  412dda:	xor    ch,dh
  412ddc:	rol    BYTE PTR [esi+edx*4],cl
  412ddf:	xlat   BYTE PTR ds:[ebx]
  412de0:	imul   esp,DWORD PTR [ebp-0x36],0x56
  412de4:	dec    esi
  412de5:	std    
  412de6:	ins    BYTE PTR es:[edi],dx
  412de7:	or     BYTE PTR [ecx-0x33],dl
  412dea:	inc    esi
  412deb:	pop    edx
  412dec:	int3   
  412ded:	(bad)
  412df1:	pop    esp
  412df2:	xchg   ebp,eax
  412df3:	dec    BYTE PTR ds:0x5e8969f
  412df9:	pop    ss
  412dfa:	ja     0x412dff
  412dfc:	sbb    al,BYTE PTR [ecx+0x3b]
  412dff:	jne    0x412db2
  412e01:	adc    al,0xb4
  412e03:	pusha  
  412e04:	or     eax,0x37794080
  412e09:	out    0x54,eax
  412e0b:	pop    ds
  412e0c:	and    dh,ah
  412e0e:	mov    al,ds:0xe5e5f886
  412e13:	imul   ebx,DWORD PTR [esi],0xfffffffc
  412e16:	cli    
  412e17:	test   BYTE PTR [esp+edi*2+0x17],al
  412e1b:	sub    bl,BYTE PTR [eax+0x5c]
  412e1e:	sub    edi,ecx
  412e20:	inc    edi
  412e21:	mov    dl,0x15
  412e23:	cmp    al,0x7d
  412e25:	(bad)  
  412e26:	xchg   esp,eax
  412e27:	repz xchg ebp,eax
  412e29:	loopne 0x412e9d
  412e2b:	das    
  412e2c:	cmp    al,0xe9
  412e2e:	jle    0x412dc7
  412e30:	jge    0x412e53
  412e32:	mov    bl,0xb4
  412e34:	gs mov bh,0x9c
  412e37:	aad    0x24
  412e39:	jmp    0xffc08c0e
  412e3e:	pop    edx
  412e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e40:	aad    0x3
  412e42:	pop    ecx
  412e43:	or     al,0x73
  412e45:	aad    0xba
  412e47:	cmp    bh,dh
  412e49:	jp     0x412ead
  412e4b:	aad    0x18
  412e4d:	inc    ebx
  412e4e:	js     0x412e03
  412e50:	pushf  
  412e51:	and    esp,DWORD PTR [ecx-0x68a4b682]
  412e57:	xor    DWORD PTR [ebp+0x37],edi
  412e5a:	call   0xc46b:0x9bbd88a7
  412e61:	fwait
  412e62:	call   FWORD PTR [ebp+0x85970cf]
  412e68:	push   ss
  412e69:	js     0x163f6df2
  412e6f:	int3   
  412e70:	jge    0x412eef
  412e72:	fiadd  WORD PTR [eax-0x5]
  412e75:	mov    al,0xa8
  412e77:	popa   
  412e78:	lea    esp,[edx+0x14]
  412e7b:	add    al,0xac
  412e7d:	cmp    DWORD PTR [edx],0x5e
  412e80:	pop    ss
  412e81:	push   0x4dcab13e
  412e86:	xor    ah,al
  412e88:	mov    eax,0x2dee0b8a
  412e8d:	fldcw  WORD PTR [ebx+0x5b3f44a9]
  412e93:	push   ds
  412e94:	pop    ebp
  412e95:	arpl   WORD PTR [ebp-0x2e],sp
  412e98:	cmp    al,0x40
  412e9a:	scas   eax,DWORD PTR es:[edi]
  412e9b:	cs ja  0x412e6b
  412e9e:	scas   al,BYTE PTR es:[edi]
  412e9f:	lods   al,BYTE PTR ds:[esi]
  412ea0:	adc    eax,0x903b695e
  412ea5:	shl    BYTE PTR [edi-0x6],1
  412ea8:	in     al,0xfd
  412eaa:	or     bh,0x44
  412ead:	sahf   
  412eae:	mov    ebp,0xc0dac813
  412eb3:	dec    esp
  412eb4:	sbb    edx,DWORD PTR [edx]
  412eb6:	xchg   edx,eax
  412eb7:	loop   0x412eff
  412eb9:	jl     0x412f2d
  412ebb:	inc    esi
  412ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ebd:	mov    BYTE PTR [ecx-0x553acd26],cl
  412ec3:	test   dl,ch
  412ec5:	cmp    esi,DWORD PTR [edx+eiz*1-0x12f93e66]
  412ecc:	call   0xb36b:0x9f365b55
  412ed3:	(bad)  
  412ed4:	out    dx,al
  412ed5:	push   ecx
  412ed6:	cmp    eax,0xcc33901c
  412edb:	daa    
  412edc:	mov    ebx,0xef6c5843
  412ee1:	jg     0x412efa
  412ee3:	mov    esi,ecx
  412ee5:	(bad)  
  412ee6:	mov    ebp,0x458cc73b
  412eeb:	mov    BYTE PTR [ebp-0x159e5aa5],dh
  412ef1:	ror    DWORD PTR [edx-0x2],cl
  412ef4:	push   cs
  412ef5:	aam    0x7c
  412ef7:	out    dx,al
  412ef8:	sub    al,BYTE PTR [eax+ecx*8]
  412efb:	js     0x412ebc
  412efd:	and    DWORD PTR [eax-0x3a],edi
  412f00:	leave  
  412f01:	in     eax,dx
  412f02:	cs pop ebp
  412f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f05:	adc    DWORD PTR [ecx-0x5d],edi
  412f08:	imul   edi,edx,0xdbb1eada
  412f0e:	dec    eax
  412f0f:	shl    DWORD PTR [eax],1
  412f11:	inc    esp
  412f12:	sbb    al,0xe4
  412f14:	push   ecx
  412f15:	out    0xc,al
  412f17:	xor    esp,ecx
  412f19:	les    ebx,FWORD PTR [ebx-0x70]
  412f1c:	mov    ds:0x452338d9,al
  412f21:	push   ebp
  412f22:	dec    esp
  412f23:	lea    edi,[ecx]
  412f25:	dec    ecx
  412f26:	stos   DWORD PTR es:[edi],eax
  412f27:	jmp    0x7458:0x2c5469af
  412f2e:	call   0x9b90:0x22d59cd8
  412f35:	stos   BYTE PTR es:[edi],al
  412f36:	(bad)  
  412f37:	push   DWORD PTR [edi-0x4]
  412f3a:	mov    ah,BYTE PTR [esi+esi*8+0x265db6b3]
  412f41:	mov    cl,0x2c
  412f43:	rol    BYTE PTR [esi+eax*2+0x48ba6eb9],1
  412f4a:	lahf   
  412f4b:	lods   al,BYTE PTR ds:[esi]
  412f4c:	inc    edi
  412f4d:	icebp  
  412f4e:	xor    eax,DWORD PTR [edi+eax*8-0x1577dfad]
  412f55:	in     al,dx
  412f56:	mov    BYTE PTR [ecx-0x31],bh
  412f59:	inc    ebp
  412f5a:	out    0xb6,al
  412f5c:	jnp    0x412f00
  412f5e:	loop   0x412f4d
  412f60:	and    cl,dl
  412f62:	ret    
  412f63:	dec    DWORD PTR [edx+0x249312b1]
  412f69:	mov    ds:0x56c1beca,al
  412f6e:	sbb    BYTE PTR [edi+0x30],cl
  412f71:	lock sbb edi,DWORD PTR [ecx+0x1c]
  412f75:	mov    ecx,?
  412f77:	ja     0x412f7d
  412f79:	mov    al,ds:0xb58091b3
  412f7e:	mov    edx,0x8921af3e
  412f83:	rcr    DWORD PTR [ebp-0x725266ed],0x62
  412f8a:	xor    edi,DWORD PTR [eax+0xf7bc3f6]
  412f90:	arpl   sp,di
  412f92:	mov    esp,0xead85797
  412f97:	fistp  DWORD PTR [edx-0x3e]
  412f9a:	ins    BYTE PTR es:[edi],dx
  412f9b:	idiv   esi
  412f9d:	sub    ebp,DWORD PTR [edi]
  412f9f:	or     BYTE PTR [ebp+edi*8+0x10],ch
  412fa3:	ins    BYTE PTR es:[edi],dx
  412fa4:	pop    eax
  412fa5:	xchg   edi,eax
  412fa6:	ret    
  412fa7:	add    eax,0xba792510
  412fac:	xchg   BYTE PTR ds:0xebb5b36a,cl
  412fb2:	jnp    0x412fdf
  412fb4:	jae    0x412fcb
  412fb6:	xlat   BYTE PTR ds:[ebx]
  412fb7:	jno    0x412f4e
  412fb9:	fsub   DWORD PTR [esi-0x66]
  412fbc:	push   ecx
  412fbd:	aas    
  412fbe:	out    dx,al
  412fbf:	fisubr WORD PTR [edi+eiz*1-0x6f]
  412fc3:	jmp    0x412fe6
  412fc5:	test   al,0x3f
  412fc7:	add    al,0x17
  412fc9:	std    
  412fca:	inc    ebx
  412fcb:	mov    edx,DWORD PTR [eax]
  412fcd:	and    DWORD PTR [esi-0x6f],ecx
  412fd0:	inc    esi
  412fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fd2:	or     BYTE PTR [ebx-0x5d7ba2fe],bl
  412fd8:	hlt    
  412fd9:	jge    0x412fd3
  412fdb:	cld    
  412fdc:	mov    WORD PTR [ecx],fs
  412fde:	aad    0xb1
  412fe0:	dec    ebp
  412fe1:	enter  0x2924,0xf6
  412fe5:	xor    eax,0x27f7b3d3
  412fea:	ins    BYTE PTR es:[edi],dx
  412feb:	jmp    0x23d5bd33
  412ff0:	sar    BYTE PTR [eax],1
  412ff2:	out    dx,eax
  412ff3:	jnp    0x41305c
  412ff5:	and    esi,DWORD PTR [esi-0x12]
  412ff8:	or     bl,BYTE PTR [ebx-0x2915c7fc]
  412ffe:	jbe    0x41305a
  413000:	gs repnz aam 0x25
  413004:	cdq    
  413005:	ins    DWORD PTR es:[edi],dx
  413006:	push   0x71ef478a
  41300b:	fmul   DWORD PTR ss:[eax+0x30]
  41300f:	in     al,0xca
  413011:	sub    al,0x76
  413013:	jge    0x413068
  413015:	iret   
  413016:	out    dx,al
  413017:	or     BYTE PTR [ebx],ch
  413019:	jecxz  0x412fe2
  41301b:	jbe    0x41300a
  41301d:	pusha  
  41301e:	inc    ebx
  41301f:	jmp    0x412ffe
  413021:	cmp    BYTE PTR [esi],bh
  413023:	loop   0x412fa9
  413025:	jecxz  0x412fa8
  413027:	in     al,dx
  413028:	cmp    bh,BYTE PTR [ebx+0x6dbcaa4c]
  41302e:	sbb    al,0xf0
  413030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413031:	jmp    0x412fe3
  413033:	adc    eax,0xb9f7b9a4
  413038:	cmp    DWORD PTR [ebp+0x6ff62b87],ebx
  41303e:	ss inc edx
  413040:	ss adc eax,0x9318d50f
  413046:	shl    DWORD PTR [ebp-0x31156568],0x2a
  41304d:	sar    DWORD PTR [edx],cl
  41304f:	lea    ecx,[edi+0x6d7cb759]
  413055:	(bad)  [ebx+0x6cc4379c]
  41305b:	loop   0x412ffa
  41305d:	xchg   ebx,eax
  41305e:	loop   0x413086
  413060:	jmp    0x412ffc
  413062:	dec    esp
  413063:	addr16 gs jno 0x413001
  413067:	sbb    al,0x27
  413069:	jno    0x412ffd
  41306b:	mov    dh,0x78
  41306d:	(bad)  [edi+ebp*8-0xa]
  413071:	pop    ebx
  413072:	xor    DWORD PTR [ecx],ebx
  413074:	stos   BYTE PTR es:[edi],al
  413075:	inc    ebp
  413076:	mov    al,0xbd
  413078:	xor    eax,0xbc40c9cb
  41307d:	pop    esi
  41307e:	and    al,0xcf
  413080:	hlt    
  413081:	repz je 0x41300e
  413084:	pop    es
  413085:	xlat   BYTE PTR ds:[ebx]
  413086:	inc    ebx
  413087:	cmp    eax,0xbabfb05e
  41308c:	xor    BYTE PTR [edx-0x5cefa92d],bl
  413092:	ret    
  413093:	jae    0x4130eb
  413095:	arpl   sp,ax
  413097:	repz inc esp
  413099:	xor    eax,edi
  41309b:	xlat   BYTE PTR ds:[ebx]
  41309c:	jge    0x41307e
  41309e:	inc    ebp
  41309f:	lds    esi,FWORD PTR [edi+0x6c]
  4130a2:	jmp    0xeb4eb1d6
  4130a7:	(bad)  
  4130a8:	loopne 0x413060
  4130aa:	or     ebp,DWORD PTR [edx+0x44]
  4130ad:	hlt    
  4130ae:	not    BYTE PTR [esi-0x49]
  4130b1:	push   ds
  4130b2:	sahf   
  4130b3:	push   cs
  4130b4:	sbb    esi,DWORD PTR [ebx+0x9]
  4130b7:	test   DWORD PTR [edx],0x3c5a967b
  4130bd:	inc    ebp
  4130be:	jnp    0x4130ec
  4130c0:	cmp    dh,BYTE PTR [eax-0x1ddc87fd]
  4130c6:	xchg   ebp,eax
  4130c7:	mov    ecx,DWORD PTR [ebx+0x686ddb83]
  4130cd:	and    al,0xd2
  4130cf:	or     dl,BYTE PTR [edi-0x29]
  4130d2:	xchg   ecx,eax
  4130d3:	mov    al,ds:0x9c833465
  4130d8:	stos   DWORD PTR es:[edi],eax
  4130d9:	cmp    al,dl
  4130db:	mov    cl,0x20
  4130dd:	sbb    ebp,DWORD PTR [edi]
  4130df:	and    ch,BYTE PTR [eax]
  4130e1:	je     0x41315c
  4130e3:	cmp    ebx,DWORD PTR [ebx+eax*4]
  4130e6:	ds cmp ah,ch
  4130e9:	inc    esp
  4130ea:	lods   al,BYTE PTR ds:[esi]
  4130eb:	inc    edi
  4130ec:	nop
  4130ed:	cld    
  4130ee:	daa    
  4130ef:	shr    BYTE PTR [ebp+0x5914cf82],0x5d
  4130f6:	adc    DWORD PTR [edi+0x6],0x56
  4130fa:	dec    edx
  4130fb:	mov    ds:0x38b6c698,eax
  413100:	push   DWORD PTR [eax-0x27]
  413103:	inc    eax
  413104:	call   0xa789a097
  413109:	test   BYTE PTR [edi],0xd3
  41310c:	retf   
  41310d:	sub    eax,0x608edefd
  413112:	mov    edi,fs
  413114:	jae    0x4130d5
  413116:	sub    BYTE PTR [ebp+ebp*2-0x5c43913a],ch
  41311d:	(bad)  
  41311e:	iret   
  41311f:	dec    eax
  413120:	rol    al,1
  413122:	sbb    DWORD PTR [edi-0x3a],ebp
  413125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413126:	jl     0x4130bc
  413128:	(bad)  
  413129:	neg    esi
  41312b:	les    ebx,FWORD PTR [esi+0x49f506d2]
  413131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413132:	dec    ebx
  413133:	ja     0x413173
  413135:	add    eax,0xbed8fccf
  41313a:	and    bl,BYTE PTR [ebx]
  41313c:	pusha  
  41313d:	sar    BYTE PTR [edi+ecx*2+0x18045808],cl
  413144:	add    edi,DWORD PTR [ecx-0x69]
  413147:	retf   
  413148:	inc    eax
  413149:	or     BYTE PTR [edx-0x130347d0],0x47
  413150:	scas   al,BYTE PTR es:[edi]
  413151:	loope  0x41316c
  413153:	inc    esi
  413154:	dec    esp
  413155:	ins    BYTE PTR es:[edi],dx
  413156:	arpl   dx,si
  413158:	aam    0x43
  41315a:	test   DWORD PTR [edi-0x34038c81],0xae18f432
  413164:	cli    
  413165:	cmp    esi,DWORD PTR [ecx]
  413167:	sar    BYTE PTR [edi+0x16],1
  41316a:	mov    WORD PTR [edx],cs
  41316c:	inc    edx
  41316d:	cdq    
  41316e:	xchg   ecx,eax
  41316f:	adc    BYTE PTR [ebx-0x452a2777],0xe8
  413176:	push   0x71
  413178:	inc    esi
  413179:	pop    ebx
  41317a:	push   ecx
  41317b:	adc    dh,cl
  41317d:	sbb    dl,ah
  41317f:	shr    DWORD PTR [esi],0xed
  413182:	ins    BYTE PTR es:[edi],dx
  413183:	inc    esi
  413184:	bswap  edi
  413186:	jmp    0xb35894f9
  41318b:	out    dx,eax
  41318c:	inc    esp
  41318d:	sub    BYTE PTR [esi-0x4855e657],al
  413193:	push   ecx
  413194:	ret    
  413195:	mov    DWORD PTR [ecx],eax
  413197:	mov    bh,0xe6
  413199:	dec    eax
  41319a:	jp     0x413207
  41319c:	xchg   eax,esi
  41319e:	cdq    
  41319f:	jle    0x4131fb
  4131a1:	pop    ss
  4131a2:	sbb    bl,BYTE PTR [esi-0x7f07988b]
  4131a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131a9:	jl     0x413214
  4131ab:	fadd   DWORD PTR [edx-0x5ddd7070]
  4131b1:	dec    edx
  4131b2:	mov    ah,0x36
  4131b4:	cdq    
  4131b5:	(bad)  
  4131b6:	fimul  WORD PTR [ecx+0x64]
  4131b9:	fdiv   st,st(7)
  4131bb:	push   eax
  4131bc:	(bad)  
  4131bd:	jnp    0x4131ed
  4131bf:	add    BYTE PTR [ecx+0x1d],ah
  4131c2:	shl    DWORD PTR [esp+eiz*2-0x76c290f8],1
  4131c9:	test   eax,0x319d2960
  4131cf:	test   BYTE PTR [edi],dl
  4131d1:	xchg   ebp,eax
  4131d2:	enter  0xcb27,0x7a
  4131d6:	mov    BYTE PTR [edx+ecx*4-0x781d273d],ch
  4131dd:	mov    ecx,0xd9504b4d
  4131e2:	mov    bh,0xd9
  4131e4:	pop    ds
  4131e5:	sti    
  4131e6:	rcr    BYTE PTR [edi+ecx*8+0x66],cl
  4131ea:	jle    0x4131bb
  4131ec:	(bad)  
  4131ed:	jo     0x4131fe
  4131ef:	(bad)  
  4131f0:	retf   
  4131f1:	mov    edi,0x94c44f9
  4131f6:	imul   ecx,DWORD PTR [ebp+0x7480b874],0x77
  4131fd:	mov    ebp,eax
  4131ff:	loopne 0x41320a
  413201:	or     bh,0x9
  413204:	jbe    0x413243
  413206:	jle    0x413191
  413208:	mov    al,0x9e
  41320a:	sar    DWORD PTR [esi],cl
  41320c:	cld    
  41320d:	ins    DWORD PTR es:[edi],dx
  41320e:	mov    ds:0x7787b0c,eax
  413213:	loope  0x413234
  413215:	xor    eax,0xf2724db2
  41321a:	sahf   
  41321b:	dec    eax
  41321c:	mov    ds:0x3dd5faf8,al
  413221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413222:	jnp    0x4131d6
  413224:	push   ds
  413225:	mov    ecx,0x2f8ffe16
  41322a:	mov    ebx,0x8b0bef8d
  41322f:	pop    eax
  413230:	pop    ss
  413231:	pcmpgtw mm6,mm6
  413234:	sbb    eax,0x7eafa4a3
  413239:	or     ch,BYTE PTR [ecx-0x4f]
  41323c:	jbe    0x413254
  41323e:	dec    ecx
  41323f:	icebp  
  413240:	push   ebx
  413241:	mov    esp,0xad4571d9
  413246:	and    eax,0x6d185a0e
  41324b:	jno    0x413218
  41324d:	and    BYTE PTR [ebx-0x7f],al
  413250:	loope  0x4132bb
  413252:	icebp  
  413253:	inc    esp
  413254:	out    0x9a,eax
  413256:	jae    0x41329c
  413258:	adc    eax,DWORD PTR [edx+0x7aba0e14]
  41325e:	mov    ah,0x15
  413260:	pop    es
  413261:	lock lock push ebx
  413264:	fucomip st,st(5)
  413266:	into   
  413267:	jo     0x413227
  413269:	adc    DWORD PTR [ebx-0x1d787873],ebx
  41326f:	cwde   
  413270:	dec    edx
  413271:	mov    bl,0xf
  413273:	xor    al,0x4d
  413275:	and    DWORD PTR fs:[edx],esp
  413278:	cmc    
  413279:	pop    es
  41327a:	mov    dl,0x4a
  41327c:	inc    ecx
  41327d:	in     al,dx
  41327e:	je     0x41323f
  413280:	(bad)  
  413281:	iret   
  413282:	add    DWORD PTR [esi+0x52028962],ebp
  413288:	ficom  WORD PTR [edi-0x1b]
  41328b:	nop
  41328c:	mov    edi,0x30c6a86b
  413291:	jl     0x4132f8
  413293:	push   ds
  413294:	mov    bh,0x45
  413296:	fiadd  WORD PTR [ebp-0x13034b62]
  41329c:	xchg   DWORD PTR [ebp+0x8],ecx
  41329f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132a1:	mov    al,BYTE PTR [edx-0x1e]
  4132a4:	imul   esp,DWORD PTR [ebx+esi*2+0x6231befb],0x6ae0152e
  4132af:	or     eax,0x8da60f79
  4132b4:	adc    BYTE PTR [ecx-0x127310f7],0x6b
  4132bb:	xor    eax,DWORD PTR [edi]
  4132bd:	test   eax,0x21881283
  4132c2:	leave  
  4132c3:	sub    al,0x95
  4132c5:	cmp    esi,edx
  4132c7:	mov    ah,0xc8
  4132c9:	loop   0x41325b
  4132cb:	inc    edi
  4132cc:	rol    DWORD PTR [ecx-0x54f96d95],0x4d
  4132d3:	mov    esp,DWORD PTR [ebx-0x2d]
  4132d6:	xchg   ecx,eax
  4132d7:	aam    0x63
  4132d9:	imul   ecx,DWORD PTR [edx-0x40],0x440fedbc
  4132e0:	imul   ecx,DWORD PTR [ecx],0xf83c02d5
  4132e6:	xor    bh,bh
  4132e8:	sbb    esp,ebx
  4132ea:	mov    eax,ecx
  4132ec:	push   es
  4132ed:	xchg   edi,eax
  4132ee:	pop    ecx
  4132ef:	inc    ebx
  4132f0:	mov    ds:0x94b4fcd4,eax
  4132f5:	imul   ecx,DWORD PTR [eax-0x295eafb1],0x8e2f73b1
  4132ff:	xchg   esp,eax
  413300:	repz aad 0x29
  413303:	repnz mul BYTE PTR [esp+ebx*2]
  413307:	popa   
  413308:	xchg   edx,eax
  413309:	adc    al,0x6b
  41330b:	out    0xce,al
  41330d:	(bad)  
  41330e:	lock iret 
  413310:	es mov cl,0xb6
  413313:	call   0x3d78bb74
  413318:	mov    eax,ds:0x303d65e5
  41331d:	or     DWORD PTR [edi-0x74a166a5],eax
  413323:	dec    eax
  413324:	or     dl,bh
  413326:	aad    0xaa
  413328:	into   
  413329:	ss inc esp
  41332b:	inc    edx
  41332c:	xor    DWORD PTR [ecx],0x121ed643
  413332:	sbb    al,ah
  413334:	mov    ds:0xc7441e05,eax
  413339:	retf   0xda9f
  41333c:	fsubr  st(6),st
  41333e:	push   ebx
  41333f:	sbb    DWORD PTR ss:[eax-0x7904a033],ebx
  413346:	arpl   sp,ax
  413348:	inc    ecx
  413349:	add    eax,0x294d8de1
  41334e:	add    BYTE PTR ds:0xe4175c6f,ch
  413354:	pop    es
  413355:	pushf  
  413356:	test   al,0xe8
  413358:	shr    DWORD PTR [edx],0x3b
  41335b:	inc    ebp
  41335c:	int3   
  41335d:	hlt    
  41335e:	out    dx,eax
  41335f:	jnp    0x4133d1
  413361:	xchg   esi,eax
  413362:	dec    ebp
  413363:	(bad)  
  413364:	mov    cl,0xfa
  413366:	pushf  
  413367:	sbb    eax,0x9cbce3ea
  41336c:	mov    WORD PTR [ebp+0x62],ds
  41336f:	jmp    DWORD PTR [edx]
  413371:	jne    0x41332f
  413373:	or     BYTE PTR [eax],cl
  413375:	cmp    ch,BYTE PTR [ebp+eiz*4-0x24fbbbc3]
  41337c:	xor    DWORD PTR [edi],ebx
  41337e:	inc    esp
  41337f:	jecxz  0x4133ff
  413381:	inc    ebx
  413382:	es push 0x1116786d
  413388:	leave  
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	pop    ss
  41338b:	out    0x67,eax
  41338d:	je     0x41339b
  41338f:	addr16 fs sahf 
  413392:	jns    0x41332b
  413394:	dec    edi
  413395:	sar    BYTE PTR [edx+0x7f],0x73
  413399:	ret    
  41339a:	xchg   DWORD PTR [edx+0x6ff6de02],edi
  4133a0:	out    0xf2,eax
  4133a2:	inc    ecx
  4133a3:	mov    ah,0x72
  4133a5:	pushf  
  4133a6:	cmp    BYTE PTR [ecx-0x199265a2],al
  4133ac:	scas   al,BYTE PTR es:[edi]
  4133ad:	(bad)  [esi]
  4133af:	mov    ds,WORD PTR [esi+0x25]
  4133b2:	test   al,0x8
  4133b4:	push   ss
  4133b5:	js     0x413382
  4133b7:	inc    ebx
  4133b8:	push   ecx
  4133b9:	loope  0x4133c2
  4133bb:	xchg   edx,eax
  4133bc:	shr    DWORD PTR [ebx+0x6a],cl
  4133bf:	adc    DWORD PTR [esi+edi*1+0x4a],ebx
  4133c3:	fs mov dh,0x2f
  4133c6:	mov    bh,0xbc
  4133c8:	daa    
  4133c9:	fs or  al,0xab
  4133cc:	mov    ?,WORD PTR [edi-0x7b]
  4133cf:	sbb    cl,BYTE PTR [esi+0x4e892f81]
  4133d5:	jnp    0x4133d3
  4133d7:	iret   
  4133d8:	adc    eax,0xfabfd23f
  4133dd:	(bad)  
  4133de:	hlt    
  4133df:	sub    dh,BYTE PTR [ebp+0x1567cab5]
  4133e5:	add    al,0xf6
  4133e7:	xor    DWORD PTR [ebp-0x57],0x7c26a7c8
  4133ee:	aam    0xf5
  4133f0:	retf   
  4133f1:	lods   al,BYTE PTR ds:[esi]
  4133f2:	stos   BYTE PTR es:[edi],al
  4133f3:	mov    ebx,0x3b6f7eed
  4133f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133f9:	mov    ds:0x8acd90a8,eax
  4133fe:	xor    eax,0xb5f9899
  413403:	push   eax
  413404:	jmp    0x1266:0xb534668a
  41340b:	popf   
  41340c:	shl    BYTE PTR [esi+0x35],0xbe
  413410:	in     al,0x39
  413412:	xor    DWORD PTR [ebp+0x51],ebx
  413415:	imul   ebx,ecx,0xf29b35c4
  41341b:	sahf   
  41341c:	and    DWORD PTR [edi+0x41],0x59
  413420:	xchg   edi,eax
  413421:	fsub   st,st(3)
  413423:	mov    bh,0x8c
  413425:	mov    bh,0xe4
  413427:	lds    ecx,FWORD PTR ds:[eax+0x4d]
  41342b:	gs pop ebp
  41342d:	dec    ecx
  41342e:	cmp    eax,0x72db439d
  413433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413434:	jl     0x4133de
  413436:	into   
  413437:	les    edx,FWORD PTR [edx+0x6b]
  41343a:	or     al,0x8d
  41343c:	lahf   
  41343d:	or     al,0x76
  41343f:	jb     0x4133e7
  413441:	push   cs
  413442:	hlt    
  413443:	in     al,0x94
  413445:	jle    0x4133d1
  413447:	inc    eax
  413448:	jmp    0x413493
  41344a:	js     0x413435
  41344c:	(bad)  
  41344d:	stos   DWORD PTR es:[edi],eax
  41344e:	push   0x9e565f61
  413453:	int3   
  413454:	out    0xd5,al
  413456:	out    dx,eax
  413457:	call   DWORD PTR [edx-0x5e]
  41345a:	call   0x4cf6b5f
  41345f:	xchg   edx,eax
  413460:	sbb    ebp,edi
  413462:	or     al,0x48
  413464:	leave  
  413465:	in     eax,dx
  413466:	scas   eax,DWORD PTR es:[edi]
  413467:	xor    DWORD PTR [edi],ebx
  413469:	adc    BYTE PTR [edi+edi*2+0x3c],al
  41346d:	fs es xor al,0xfd
  413471:	push   es
  413472:	pop    edx
  413473:	xchg   ecx,eax
  413474:	outs   dx,DWORD PTR ds:[esi]
  413475:	test   eax,0x2ef58258
  41347a:	push   ebx
  41347b:	lods   al,BYTE PTR ds:[esi]
  41347c:	aas    
  41347d:	inc    eax
  41347e:	call   0x4f75:0x55137141
  413485:	sub    BYTE PTR [esi-0x76e5a69c],0x3a
  41348c:	aam    0x37
  41348e:	push   edx
  41348f:	sub    eax,0xaa8f8094
  413494:	or     al,0x78
  413496:	push   ebp
  413497:	pop    ebp
  413498:	sbb    eax,0x324f883c
  41349d:	pop    eax
  41349e:	push   ds
  41349f:	dec    ecx
  4134a0:	int    0xde
  4134a2:	ret    0x9742
  4134a5:	adc    DWORD PTR [eax-0x18],esp
  4134a8:	(bad)  
  4134a9:	sbb    edi,DWORD PTR [ebx+eiz*4+0x4cae0b8c]
  4134b0:	loop   0x4134e3
  4134b2:	adc    DWORD PTR [edx+0x5dcbad21],edx
  4134b8:	sar    BYTE PTR [ebx-0x3f],cl
  4134bb:	mov    bl,0xb0
  4134bd:	or     DWORD PTR ds:[eax-0x50],ebx
  4134c1:	or     BYTE PTR [ecx-0x697552cf],dl
  4134c7:	aad    0xc3
  4134c9:	and    BYTE PTR [esi+0x79],ah
  4134cc:	jg     0x41345f
  4134ce:	add    al,0x6d
  4134d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134d1:	mov    ds:0x4ae0e3d5,eax
  4134d6:	push   edx
  4134d7:	loope  0x41349d
  4134d9:	js     0x413464
  4134db:	hlt    
  4134dc:	jns    0x413537
  4134de:	sbb    ch,0x58
  4134e1:	pop    es
  4134e2:	push   ecx
  4134e3:	cmp    ch,BYTE PTR [edi]
  4134e5:	push   ss
  4134e6:	inc    esp
  4134e7:	and    ah,BYTE PTR [edx]
  4134e9:	pop    ebp
  4134ea:	jns    0x41349c
  4134ec:	mov    ah,0xdf
  4134ef:	dec    esp
  4134f0:	mov    ah,0x22
  4134f2:	sub    eax,ecx
  4134f4:	and    BYTE PTR [ecx+0x0],cl
  4134f7:	jmp    0x93652b80
  4134fc:	inc    eax
  4134fd:	or     edi,ecx
  4134ff:	add    eax,0xf0978c19
  413504:	int3   
  413505:	iret   
  413506:	pop    ebp
  413507:	test   DWORD PTR [edi+0x2],ebp
  41350a:	mov    al,ds:0x3d057750
  41350f:	and    al,0x9f
  413511:	add    ah,BYTE PTR [ebp+0x79ed653c]
  413517:	ret    
  413518:	aad    0x4d
  41351a:	jno    0x4134bc
  41351c:	fwait
  41351d:	repnz in al,dx
  41351f:	xchg   edi,eax
  413520:	mov    dl,0x5a
  413522:	cmp    eax,0xbb26fcb9
  413527:	push   ebx
  413528:	xor    ah,BYTE PTR [edx]
  41352a:	jg     0x41352f
  41352c:	push   edx
  41352d:	xchg   edi,eax
  41352e:	mov    esp,DWORD PTR [esi]
  413530:	(bad)  
  413531:	stos   BYTE PTR es:[edi],al
  413532:	xchg   edx,eax
  413533:	pop    esi
  413534:	fcom   QWORD PTR [ecx+0x2dbd6b41]
  41353a:	sahf   
  41353b:	dec    esi
  41353c:	sbb    esi,esp
  41353e:	jecxz  0x41350c
  413540:	xor    al,0x1
  413542:	add    esi,DWORD PTR [ecx+0x67]
  413545:	sub    eax,0xdd254e52
  41354a:	pop    ss
  41354b:	xchg   esp,eax
  41354c:	inc    esi
  41354d:	xor    eax,0xf3f7520d
  413552:	fild   WORD PTR [esp+ecx*8-0x2879a38b]
  413559:	nop
  41355a:	sub    BYTE PTR [eax-0x43],ah
  41355d:	xchg   BYTE PTR [eax-0x146d8666],cl
  413563:	add    DWORD PTR [eax+0x572e2084],esi
  413569:	in     al,dx
  41356a:	jge    0x41358c
  41356c:	ret    0xf324
  41356f:	mov    al,ds:0xc3bdbacd
  413574:	icebp  
  413575:	rcl    BYTE PTR [ebp+0x614b123a],cl
  41357b:	inc    edi
  41357c:	and    eax,0x29886462
  413581:	ds xchg esi,eax
  413583:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413585:	xchg   esp,eax
  413586:	shl    DWORD PTR [ecx+0x5c],0xa8
  41358a:	push   es
  41358b:	jnp    0x4135b9
  41358d:	std    
  41358e:	adc    DWORD PTR [esi+edx*8+0x2a],ebp
  413592:	cmc    
  413593:	xchg   esp,eax
  413594:	in     eax,0x3d
  413596:	mov    edi,0x8e5d1cba
  41359b:	xchg   BYTE PTR [edi],dh
  41359d:	shl    dh,1
  41359f:	into   
  4135a0:	mov    esi,0x2a8ab93e
  4135a5:	das    
  4135a6:	or     BYTE PTR ds:0xcdd41770,ch
  4135ac:	fld    TBYTE PTR [ecx+0xe63e758]
  4135b2:	jle    0x413540
  4135b4:	push   eax
  4135b5:	fisttp QWORD PTR [eax]
  4135b7:	out    0x15,al
  4135b9:	push   ss
  4135ba:	pop    esp
  4135bb:	(bad)  
  4135bc:	or     DWORD PTR [esi-0x1d7267b6],edx
  4135c2:	or     DWORD PTR [edi-0x7b],ebp
  4135c5:	stc    
  4135c6:	pop    ss
  4135c7:	sbb    eax,0x3e014a56
  4135cc:	shl    BYTE PTR [eax],0xe8
  4135cf:	sti    
  4135d0:	pop    edi
  4135d1:	loopne 0x4135e8
  4135d3:	test   bh,bl
  4135d5:	inc    ecx
  4135d6:	add    al,0xf3
  4135d8:	fcomp  DWORD PTR [edi-0x9e1b38c]
  4135de:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135e0:	ja     0x413571
  4135e2:	add    eax,0x6c49ead1
  4135e7:	jg     0x413583
  4135e9:	pop    edx
  4135ea:	aad    0xfa
  4135ec:	lahf   
  4135ed:	das    
  4135ee:	loopne 0x413649
  4135f0:	cli    
  4135f1:	mov    DWORD PTR [edx-0x59],edx
  4135f4:	xlat   BYTE PTR ds:[ebx]
  4135f5:	sbb    dl,dh
  4135f7:	aad    0xde
  4135f9:	adc    al,bh
  4135fb:	mov    dl,BYTE PTR [ebp+0x6e]
  4135fe:	std    
  4135ff:	xor    esp,DWORD PTR [edx+0x293f80bd]
  413605:	mov    WORD PTR [ebp+esi*4+0x71a2d723],?
  41360c:	jbe    0x4135b5
  41360e:	fneni(8087 only) 
  413610:	in     eax,0xe1
  413612:	cmp    BYTE PTR [edi+0x2d63fe05],0x8
  413619:	inc    eax
  41361a:	mov    DWORD PTR ds:0xaada5374,ebp
  413620:	test   eax,0xeabefdb1
  413625:	pusha  
  413626:	(bad)  
  413627:	cmp    DWORD PTR ss:[ecx+0x6d],0x44009559
  41362f:	mov    ds:0xc1450025,al
  413634:	and    DWORD PTR [eax-0x3f8974d],ebx
  41363a:	xor    al,0x52
  41363c:	ret    
  41363d:	fs push ds
  41363f:	jb     0x413615
  413641:	jecxz  0x41363b
  413643:	xlat   BYTE PTR ds:[ebx]
  413644:	cld    
  413645:	pop    ebx
  413646:	in     al,0xff
  413648:	push   0xa74da9d
  41364d:	clc    
  41364e:	add    DWORD PTR [edi-0x59db8c0],edi
  413654:	or     BYTE PTR [edx],ah
  413656:	sub    al,0xc9
  413658:	mov    eax,ds:0xcdc08a00
  41365d:	cmp    ebp,ebx
  41365f:	in     al,dx
  413660:	xchg   esp,eax
  413661:	pop    ecx
  413662:	aas    
  413663:	int3   
  413664:	ret    
  413665:	scas   eax,DWORD PTR es:[edi]
  413666:	rcr    DWORD PTR [edx+0x31],cl
  413669:	xchg   DWORD PTR [edi-0x68cdc207],edx
  41366f:	inc    ebp
  413670:	call   DWORD PTR [esi+0x19939087]
  413676:	jp     0x413691
  413678:	popa   
  413679:	imul   ebx,DWORD PTR [eax-0x17],0x756d560a
  413680:	and    eax,0xbc259c9
  413685:	in     eax,dx
  413686:	clc    
  413687:	add    BYTE PTR [ebp+0x6e0e2b8a],dl
  41368d:	cmp    al,0x70
  41368f:	dec    esp
  413690:	add    eax,0x3b26abaa
  413695:	adc    ah,ch
  413697:	call   0x56dba9be
  41369c:	xchg   ebx,eax
  41369d:	add    BYTE PTR [ebp-0x23],0xb9
  4136a1:	mov    ebx,0xdabb232c
  4136a6:	fbld   TBYTE PTR [edi]
  4136a8:	(bad)  
  4136a9:	aas    
  4136aa:	cmc    
  4136ab:	mov    ch,0xa
  4136ad:	sub    eax,0xf7cf8bb4
  4136b2:	fwait
  4136b3:	aaa    
  4136b4:	cmp    eax,DWORD PTR [eax]
  4136b6:	xlat   BYTE PTR ds:[ebx]
  4136b7:	ss loope 0x41368f
  4136ba:	adc    BYTE PTR [eax+0x7831f126],cl
  4136c0:	adc    esp,DWORD PTR [esi]
  4136c2:	lods   eax,DWORD PTR ss:[esi]
  4136c4:	fmulp  st(0),st
  4136c6:	out    dx,al
  4136c7:	and    eax,0xe60132c2
  4136cc:	inc    ebx
  4136cd:	dec    edx
  4136ce:	cmp    eax,0x4d03ce7a
  4136d3:	inc    ebp
  4136d4:	out    dx,al
  4136d5:	lods   eax,DWORD PTR ds:[esi]
  4136d6:	pop    ds
  4136d7:	sub    al,0x95
  4136d9:	sub    al,0x3d
  4136db:	adc    DWORD PTR [eax+0x51],ebp
  4136de:	jbe    0x4136b0
  4136e0:	add    al,0x64
  4136e2:	js     0x41375a
  4136e4:	ret    0x1a56
  4136e7:	jle    0x413689
  4136e9:	adc    esp,DWORD PTR [edx+edx*8]
  4136ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ed:	add    DWORD PTR [edx-0x1182ebad],esp
  4136f3:	dec    esp
  4136f4:	popa   
  4136f5:	hlt    
  4136f6:	pop    esp
  4136f7:	mov    ds:0x761c7259,eax
  4136fc:	sbb    BYTE PTR [edi],dh
  4136fe:	xor    al,0x2d
  413700:	shl    dh,0xeb
  413703:	stc    
  413704:	repnz push edi
  413706:	ins    BYTE PTR es:[edi],dx
  413707:	in     eax,dx
  413708:	mov    ebx,0x2fb61902
  41370d:	inc    esi
  41370e:	sub    al,BYTE PTR [ebp+0x280f943d]
  413714:	adc    dl,bl
  413716:	lock js 0x41376c
  413719:	xchg   ecx,eax
  41371a:	fdivr  DWORD PTR [ebx]
  41371c:	xor    BYTE PTR [edx-0x28d409dc],ah
  413722:	or     DWORD PTR [esp+ecx*2+0x2c],0xffffffa7
  413727:	int3   
  413728:	(bad)  
  413729:	out    0xbb,eax
  41372b:	popa   
  41372c:	and    dh,BYTE PTR [edx+edx*8+0x4ff31f92]
  413733:	jl     0x41379a
  413735:	or     DWORD PTR [ebx-0x6cee2887],esi
  41373b:	(bad)
  41373e:	mov    esp,0x3429b06e
  413743:	cmp    BYTE PTR [ebx-0x30a156ef],dh
  413749:	xchg   edx,eax
  41374a:	scas   al,BYTE PTR es:[edi]
  41374b:	rcr    esi,cl
  41374d:	xor    al,0xc5
  41374f:	out    dx,eax
  413750:	neg    bl
  413752:	enter  0x4f39,0x42
  413756:	stos   BYTE PTR es:[edi],al
  413757:	and    al,0xe9
  413759:	inc    ebp
  41375a:	adc    esp,eax
  41375c:	cdq    
  41375d:	es push esp
  41375f:	adc    dl,BYTE PTR [ebx+0x34d46f75]
  413765:	out    0x6e,eax
  413767:	sar    BYTE PTR [eax+0x58],cl
  41376a:	loop   0x4136f7
  41376c:	and    eax,0x9ec8ee5a
  413771:	cmp    eax,0xcb1c2000
  413776:	out    dx,eax
  413777:	xchg   ebx,eax
  413778:	add    BYTE PTR [ebp+0xefa9f87],0x44
  41377f:	sti    
  413780:	xchg   ah,dl
  413782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413783:	retf   
  413784:	adc    BYTE PTR [esi+eax*8],cl
  413787:	inc    esp
  413788:	push   cs
  413789:	xor    al,0x90
  41378b:	hlt    
  41378c:	pop    ebx
  41378d:	fadd   QWORD PTR [edi+0x5a]
  413790:	sub    eax,0xb032b3e7
  413795:	repz add al,0x41
  413798:	add    esi,esp
  41379a:	das    
  41379b:	(bad)  
  41379c:	inc    eax
  41379d:	pop    ss
  41379e:	inc    esi
  41379f:	pop    ebp
  4137a0:	ret    0x1e87
  4137a3:	push   ebp
  4137a4:	stc    
  4137a5:	xchg   ecx,eax
  4137a6:	cmc    
  4137a7:	mov    al,ds:0x479b7759
  4137ac:	fisttp DWORD PTR [ebp+0x41]
  4137af:	enter  0x7556,0x2f
  4137b3:	add    al,0x1c
  4137b5:	ss sub eax,0xb92bc1a9
  4137bb:	adc    dl,BYTE PTR [ecx+ebp*8-0x4934f26a]
  4137c2:	bnd jo 0x413775
  4137c5:	je     0x413779
  4137c7:	stos   BYTE PTR es:[edi],al
  4137c8:	cmp    al,0xca
  4137ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137cb:	hlt    
  4137cc:	push   ecx
  4137cd:	js     0x41377e
  4137cf:	xor    al,0xb5
  4137d1:	je     0x41380a
  4137d3:	push   0xd78f3194
  4137d8:	les    esp,FWORD PTR [eax+eiz*4+0x5006b456]
  4137df:	fs stos BYTE PTR es:[edi],al
  4137e1:	xor    DWORD PTR [ecx-0x2e8c56ed],ebx
  4137e7:	jbe    0x413846
  4137e9:	mov    bl,0x9
  4137eb:	sbb    al,BYTE PTR [edi-0x5b]
  4137ee:	loopne 0x413822
  4137f0:	adc    BYTE PTR [edi],dl
  4137f2:	jge    0x413865
  4137f4:	adc    al,0x8c
  4137f6:	pop    esi
  4137f7:	sub    bl,al
  4137f9:	mov    al,0x73
  4137fb:	push   ebp
  4137fc:	imul   ebp,eax,0xffffffd7
  4137ff:	cmp    edi,ebx
  413801:	cdq    
  413802:	pop    es
  413803:	daa    
  413804:	jp     0x4137f9
  413806:	gs pop ds
  413808:	sbb    BYTE PTR [edx+ebx*2+0x70],0x70
  41380d:	fldenv ds:0xe043f03d
  413813:	xchg   edx,eax
  413814:	mov    eax,0x425ca6a1
  413819:	aad    0xb0
  41381b:	lea    esp,[ecx-0xbd46ca8]
  413821:	lods   al,BYTE PTR ds:[esi]
  413822:	popf   
  413823:	adc    BYTE PTR [esi+eax*8-0x160c62d5],0xd5
  41382b:	icebp  
  41382c:	stc    
  41382d:	jge    0x413853
  41382f:	add    eax,0xa15edacd
  413834:	push   ebp
  413835:	cmp    eax,DWORD PTR [ecx+0x2d]
  413838:	push   esp
  413839:	(bad)  
  41383a:	push   cs
  41383b:	ror    DWORD PTR [di-0x3d],1
  41383f:	add    DWORD PTR [eax],ebx
  413841:	fimul  WORD PTR [edx+0x769e3037]
  413847:	adc    bl,BYTE PTR [eax+0x2b2a180]
  41384d:	mov    cl,0x10
  41384f:	push   ss
  413850:	and    DWORD PTR [ecx-0x39],eax
  413853:	pop    eax
  413854:	ret    
  413855:	ins    DWORD PTR es:[edi],dx
  413856:	xchg   ecx,eax
  413857:	add    DWORD PTR [ecx+0x75],0xeefeaa81
  41385e:	push   0x1dbb8094
  413863:	add    DWORD PTR [edx],esi
  413865:	ret    
  413866:	jb     0x4138cd
  413868:	shl    ecx,0xdd
  41386b:	enter  0x8742,0x39
  41386f:	mov    eax,0x489f8a67
  413874:	add    eax,0x66a24dca
  413879:	pop    edx
  41387a:	test   DWORD PTR [eax+0x57],eax
  41387d:	sub    ah,BYTE PTR [edi+ebx*1]
  413880:	ds mov bl,0xe5
  413883:	dec    ecx
  413884:	sahf   
  413885:	rcl    BYTE PTR [ebx-0x44],0x42
  413889:	data16 rol BYTE PTR [esi],cl
  41388c:	shrd   ecx,esp,cl
  41388f:	rcr    cl,0x94
  413892:	and    eax,0x1b7abb15
  413897:	ss push 0x94ad6912
  41389d:	jno    0x413821
  41389f:	mov    cl,0xc1
  4138a1:	mov    eax,ds:0x82a33e
  4138a6:	in     al,dx
  4138a7:	dec    ebp
  4138a8:	xor    esp,DWORD PTR [esi]
  4138aa:	lea    ebx,[ebx+0x3c]
  4138ad:	sub    eax,0x865b15d0
  4138b2:	int    0xb0
  4138b4:	mov    edi,ebp
  4138b6:	(bad)  
  4138b7:	shl    DWORD PTR [edi+0x16741ad2],0x23
  4138be:	add    ebx,ebp
  4138c0:	push   ebx
  4138c1:	test   DWORD PTR [esi],0x41137d88
  4138c7:	out    0xa5,al
  4138c9:	imul   esi,DWORD PTR [ebp-0x4aa307f7],0x2daa5442
  4138d3:	push   cs
  4138d4:	(bad)  
  4138d5:	rcl    DWORD PTR [edx+ebp*1-0x46f2274e],cl
  4138dc:	xchg   esi,eax
  4138dd:	push   edi
  4138de:	xor    cl,BYTE PTR [eax+ebp*1+0x54]
  4138e2:	cmp    al,0xcf
  4138e4:	adc    ebx,DWORD PTR [esi]
  4138e6:	call   0x32c5:0xad002e97
  4138ed:	adc    eax,0x9e1f9784
  4138f2:	outs   dx,DWORD PTR ds:[esi]
  4138f3:	call   0x6e7c:0x759c3567
  4138fa:	sub    al,0xbd
  4138fc:	xchg   BYTE PTR [ebx],ch
  4138fe:	xlat   BYTE PTR ds:[ebx]
  4138ff:	mov    edx,0x5f463fea
  413904:	mov    ds:0x59f8caa9,eax
  413909:	or     BYTE PTR [edx+0x424b6833],dh
  41390f:	add    ah,dh
  413911:	sub    BYTE PTR [esi+0x1f],bl
  413914:	jb     0x413975
  413916:	mov    edx,0xa425de6e
  41391b:	aaa    
  41391c:	cwde   
  41391d:	sbb    BYTE PTR [ecx],0xb6
  413920:	test   BYTE PTR [edx],bh
  413922:	xchg   ebp,eax
  413923:	ja     0x413999
  413925:	and    eax,0x16de1689
  41392a:	outs   dx,DWORD PTR ds:[esi]
  41392b:	shr    BYTE PTR ds:0xc9ec045,cl
  413931:	push   cs
  413932:	aaa    
  413933:	cmc    
  413934:	fdiv   DWORD PTR [edi]
  413936:	sbb    eax,0xed376ae2
  41393b:	std    
  41393c:	inc    esi
  41393d:	rcr    ecx,0xf2
  413940:	lea    esp,[esi+eiz*4]
  413943:	jl     0x413951
  413945:	je     0x4139a5
  413947:	shr    DWORD PTR ds:0x8289522a,cl
  41394d:	mov    eax,0x2b4e8610
  413952:	leave  
  413953:	push   esp
  413954:	lods   eax,DWORD PTR ds:[esi]
  413955:	xor    bl,ch
  413957:	adc    ebp,ebp
  413959:	ja     0x41390a
  41395b:	sbb    BYTE PTR [edi],dl
  41395d:	ror    BYTE PTR [esi-0x3e961aa5],1
  413963:	cmp    bh,BYTE PTR [ebp-0x7d943b0d]
  413969:	imul   DWORD PTR [ecx-0xb]
  41396c:	xor    bh,BYTE PTR [eax+0x4203ae4b]
  413972:	mov    ah,0x64
  413974:	dec    ebx
  413975:	test   DWORD PTR gs:[eax],0x3ee1e410
  41397c:	pusha  
  41397d:	mov    WORD PTR ds:0x756bddf8,es
  413983:	pop    ebp
  413984:	mov    ds:0xc9633ad4,eax
  413989:	rol    ebp,0xab
  41398c:	add    ecx,DWORD PTR [ebx+0x3c]
  41398f:	imul   ecx,DWORD PTR [ebx],0x27
  413992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413993:	inc    eax
  413994:	pop    esp
  413995:	adc    ebx,DWORD PTR [esi]
  413997:	dec    eax
  413998:	sub    eax,0x8e02a8de
  41399d:	fst    QWORD PTR [esi+0x548fd27f]
  4139a3:	popf   
  4139a4:	out    dx,al
  4139a5:	fldcw  WORD PTR [ebp-0x5f9cd230]
  4139ab:	fwait
  4139ac:	mov    cl,0x5
  4139ae:	and    ah,dl
  4139b0:	out    dx,al
  4139b1:	lods   eax,DWORD PTR ds:[esi]
  4139b2:	adc    al,0x75
  4139b4:	lock push ebx
  4139b6:	or     edx,DWORD PTR [edi-0x7965db3]
  4139bc:	adc    DWORD PTR [eax],edi
  4139be:	fs loop 0x41397a
  4139c1:	stos   BYTE PTR es:[edi],al
  4139c2:	pop    ecx
  4139c3:	fst    DWORD PTR [ecx+0x59]
  4139c6:	mov    ds:0xc415bd06,al
  4139cb:	std    
  4139cc:	cvtps2pi mm0,QWORD PTR [edx+0x9e9c7f]
  4139d3:	xor    al,0x1d
  4139d5:	rcl    DWORD PTR [ebx],cl
  4139d7:	xchg   DWORD PTR [eax+0x1b4ab77a],edx
  4139dd:	jl     0x413a2e
  4139df:	sub    edx,DWORD PTR [eax]
  4139e1:	cmp    dh,bl
  4139e3:	int    0x1d
  4139e5:	push   edi
  4139e6:	xor    ch,BYTE PTR [esp+edi*2]
  4139e9:	cmc    
  4139ea:	push   ebx
  4139eb:	cmp    ebp,edi
  4139ed:	lds    eax,FWORD PTR [ebp-0x17]
  4139f0:	out    0x83,al
  4139f2:	mov    ah,0x78
  4139f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f5:	repnz scas al,BYTE PTR es:[edi]
  4139f7:	jp     0x413998
  4139f9:	mov    al,ds:0x2a27165e
  4139fe:	and    al,0xc1
  413a00:	sbb    bl,BYTE PTR [eax]
  413a02:	scas   eax,DWORD PTR es:[edi]
  413a03:	in     eax,dx
  413a04:	jecxz  0x4139db
  413a06:	popf   
  413a07:	popa   
  413a08:	sbb    ch,BYTE PTR [edi]
  413a0a:	ja     0x413a27
  413a0c:	fsubr  QWORD PTR [edi-0x71]
  413a0f:	sar    DWORD PTR [edx-0xc],cl
  413a12:	and    al,0xfb
  413a14:	inc    edi
  413a15:	xor    cl,dh
  413a17:	test   al,0x14
  413a19:	adc    cl,bh
  413a1b:	mov    edi,0xc58b8557
  413a20:	pop    ebp
  413a21:	adc    BYTE PTR [esi],dh
  413a23:	mov    ebx,0x68ed87bc
  413a29:	ret    0xd7e9
  413a2c:	mul    BYTE PTR [edi+0x70]
  413a2f:	loopne 0x413a5c
  413a31:	mov    edx,0x60d557f3
  413a36:	jnp    0x413a90
  413a38:	fidiv  WORD PTR [ecx+0xa20f919]
  413a3e:	add    BYTE PTR [edi-0x78],dl
  413a41:	(bad)  
  413a42:	sahf   
  413a43:	and    ch,BYTE PTR [ebx+eiz*8-0x63a8050d]
  413a4a:	pop    edx
  413a4b:	ss inc bp
  413a4e:	jecxz  0x413a65
  413a50:	or     cl,BYTE PTR [eax]
  413a52:	(bad)  
  413a53:	ss jge 0x413abe
  413a56:	iret   
  413a57:	jnp    0x413a24
  413a59:	imul   DWORD PTR [ecx-0x374fcf77]
  413a5f:	dec    edx
  413a60:	dec    ebp
  413a61:	mov    al,0x37
  413a63:	imul   DWORD PTR [eax+0x1b]
  413a66:	jmp    0xa8123b4f
  413a6b:	repz xor DWORD PTR ds:0xb618bab6,0x4c8d621b
  413a76:	(bad)  
  413a77:	(bad)  
  413a78:	push   ebx
  413a79:	inc    ebp
  413a7a:	(bad)  
  413a7b:	cmc    
  413a7c:	pop    esp
  413a7d:	sbb    BYTE PTR [edx-0x182689e3],0x83
  413a84:	xor    dh,BYTE PTR [eax-0x66]
  413a87:	sbb    bl,0x76
  413a8a:	icebp  
  413a8b:	mov    sp,0x70d1
  413a8f:	adc    eax,0x49635dae
  413a94:	in     al,dx
  413a95:	dec    ebp
  413a96:	jl     0x413ac7
  413a98:	dec    edx
  413a99:	ret    0x3fb7
  413a9c:	repnz fistp WORD PTR ds:0xca52889c
  413aa3:	cli    
  413aa4:	loope  0x413a9d
  413aa6:	adc    al,BYTE PTR [eax-0x12]
  413aa9:	and    DWORD PTR [esi-0x48],ebx
  413aac:	pop    esi
  413aad:	sar    BYTE PTR [edi-0x45e3d4ae],0xbd
  413ab4:	ja     0x413a42
  413ab6:	lds    ecx,FWORD PTR [edx+ebp*2-0xf6727a1]
  413abd:	push   0xffffffc2
  413abf:	sub    DWORD PTR ds:0xa5b6e06e,edi
  413ac5:	jl     0x413a76
  413ac7:	sub    bl,BYTE PTR [ebp-0x2f]
  413aca:	pop    ebx
  413acb:	fnstsw ax
  413acd:	cli    
  413ace:	repnz mov al,0xa
  413ad1:	xchg   ebx,eax
  413ad2:	inc    edx
  413ad3:	not    BYTE PTR [ecx-0x75]
  413ad6:	push   ecx
  413ad7:	es dec esp
  413ad9:	dec    ebx
  413ada:	cmc    
  413adb:	add    BYTE PTR [eax+0x67],0xd3
  413adf:	fcmovnb st,st(4)
  413ae1:	mov    ds:0x7b3cc2bd,ax
  413ae8:	mov    cl,0xb4
  413aea:	mov    ebx,?
  413aec:	or     esp,ebp
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	xor    BYTE PTR [ebx],ch
  413af1:	(bad)  
  413af2:	jne    0x413b42
  413af4:	adc    eax,0x7966e737
  413af9:	xchg   DWORD PTR [eax+0x7cd3afa2],ebp
  413aff:	or     BYTE PTR [ecx-0x9],bl
  413b02:	or     dh,cl
  413b04:	and    bl,BYTE PTR [edx+eiz*1-0x687f8e53]
  413b0b:	in     al,0x1
  413b0d:	add    DWORD PTR [esi+0x11],edx
  413b10:	(bad)  
  413b11:	sub    BYTE PTR [ebp+0x6b147765],dl
  413b17:	sti    
  413b18:	sub    BYTE PTR [esi+0x3ac0482],0x1b
  413b1f:	stc    
  413b20:	scas   al,BYTE PTR es:[edi]
  413b21:	xlat   BYTE PTR ds:[ebx]
  413b22:	shr    DWORD PTR [edx],1
  413b24:	ror    esp,1
  413b26:	mov    WORD PTR [eax],cs
  413b28:	mov    esp,0x5b7e9576
  413b2d:	in     al,dx
  413b2e:	cld    
  413b2f:	sar    DWORD PTR [edi+0xc],0x8b
  413b33:	inc    ecx
  413b34:	cli    
  413b35:	sbb    eax,0x451e3782
  413b3a:	cmp    bh,BYTE PTR [ebx+edx*1-0x19441ba9]
  413b41:	out    dx,al
  413b42:	mov    edi,0xb4a6fcaa
  413b47:	dec    BYTE PTR [edi+ebx*1+0x41]
  413b4b:	(bad)  
  413b4c:	mov    bl,0xa
  413b4e:	pop    ss
  413b4f:	imul   ebx,DWORD PTR [edi-0x16c419b8],0x34a13fda
  413b59:	mov    ebp,0x6ca9e569
  413b5e:	pop    es
  413b5f:	sub    bh,cl
  413b61:	adc    eax,0xdde9bd9f
  413b66:	xor    DWORD PTR [edx+0x60],esp
  413b69:	inc    ebp
  413b6a:	jns    0x413afe
  413b6c:	xchg   DWORD PTR [edi-0x324521e0],edi
  413b72:	mov    BYTE PTR [ebx+eiz*2-0x4b191619],bh
  413b79:	mov    al,ds:0xf6b3af4e
  413b7e:	icebp  
  413b7f:	mov    dl,0xc8
  413b81:	mov    dl,0x70
  413b83:	inc    ebx
  413b84:	mov    ds:0x206b8218,al
  413b89:	mov    dl,0xa0
  413b8b:	out    0xea,eax
  413b8d:	pop    ecx
  413b8e:	adc    al,0x6b
  413b90:	std    
  413b91:	adc    al,0xc7
  413b93:	stos   DWORD PTR es:[edi],eax
  413b94:	or     eax,0x6ae12fe4
  413b99:	leave  
  413b9a:	cmp    BYTE PTR [ebx-0x3a],bl
  413b9d:	(bad)  
  413b9e:	call   0xbd0c236d
  413ba3:	clc    
  413ba4:	jno    0x413b5c
  413ba6:	xor    al,0x6d
  413ba8:	mov    ebx,?
  413baa:	cmc    
  413bab:	jmp    0x5966:0x40e8e681
  413bb2:	xchg   ebx,eax
  413bb3:	jo     0x413bca
  413bb5:	daa    
  413bb6:	outs   dx,BYTE PTR ds:[esi]
  413bb7:	rcl    cl,0xe8
  413bba:	pusha  
  413bbb:	cmp    al,0xf5
  413bbd:	lds    eax,FWORD PTR [eax+0x251b368d]
  413bc3:	pop    DWORD PTR [edx]
  413bc5:	aam    0x55
  413bc7:	push   ecx
  413bc8:	test   BYTE PTR [ecx-0x1739e190],bh
  413bce:	pop    es
  413bcf:	das    
  413bd0:	mov    dh,bl
  413bd2:	pop    ss
  413bd3:	or     edi,ebp
  413bd5:	(bad)  
  413bd6:	cli    
  413bd7:	cmp    al,dh
  413bd9:	(bad)  
  413bda:	lea    esp,[edx+0x78]
  413bdd:	fwait
  413bde:	xchg   edi,eax
  413bdf:	mov    BYTE PTR [edx+0x16],al
  413be2:	adc    ah,dl
  413be4:	cmp    DWORD PTR [esi],esi
  413be6:	push   ebp
  413be7:	int3   
  413be8:	shr    BYTE PTR [eax],0x11
  413beb:	(bad)  
  413bec:	cmc    
  413bed:	or     DWORD PTR [ebx-0x75eaa693],ecx
  413bf3:	and    al,0x83
  413bf5:	in     eax,0xfc
  413bf7:	je     0x413c05
  413bf9:	jecxz  0x413bd2
  413bfb:	mov    ebx,0xcc08d823
  413c00:	jl     0x413b98
  413c02:	ins    DWORD PTR es:[edi],dx
  413c03:	adc    eax,0x4aea13d0
  413c08:	jnp    0x413bfd
  413c0a:	addr16 cmp ecx,0x5920e178
  413c11:	les    eax,FWORD PTR [edx-0x2dd34d6a]
  413c17:	jns    0x413bf4
  413c19:	(bad)  
  413c1a:	int    0x0
  413c1c:	not    BYTE PTR [eax]
  413c1e:	jp     0x413c1c
  413c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c21:	in     eax,0x22
  413c23:	(bad)  
  413c25:	stos   DWORD PTR es:[edi],eax
  413c26:	mov    ds:0x82905d1e,al
  413c2b:	mov    al,0x7b
  413c2d:	xor    esp,DWORD PTR [ebx-0x53494749]
  413c33:	jmp    0x7257197b
  413c38:	pop    esi
  413c39:	xor    DWORD PTR [ebx+0x12bc4d68],esp
  413c3f:	and    DWORD PTR [ecx+0x60151439],esi
  413c45:	lea    eax,[edx-0x1c]
  413c48:	mov    esi,0xce1c2a41
  413c4d:	iret   
  413c4e:	shr    ecx,1
  413c50:	mov    al,0xed
  413c52:	cld    
  413c53:	sub    BYTE PTR [esi-0x70],dh
  413c56:	adc    edx,DWORD PTR [edx-0x13]
  413c59:	imul   edi,DWORD PTR [ebx],0x4f0b34d9
  413c5f:	fcomi  st,st(4)
  413c61:	or     DWORD PTR [edx],0xc7e4a005
  413c67:	fdiv   st,st(6)
  413c69:	and    edi,ebx
  413c6b:	sbb    DWORD PTR [edi],ebx
  413c6d:	js     0x413c6b
  413c6f:	retf   
  413c70:	jle    0x413c81
  413c72:	ja     0x413bf5
  413c74:	jmp    0xbcba:0x27274149
  413c7b:	popa   
  413c7c:	mov    ds:0x51eb2581,al
  413c81:	out    dx,eax
  413c82:	push   es
  413c83:	loope  0x413c38
  413c85:	sub    al,BYTE PTR [edx-0x2758858]
  413c8b:	(bad)  
  413c8d:	ja     0x413d0b
  413c8f:	cli    
  413c90:	imul   ecx,edx,0xfffffff1
  413c93:	and    al,0x59
  413c95:	ins    DWORD PTR es:[edi],dx
  413c96:	cmp    al,0x94
  413c98:	mov    ah,0xd8
  413c9a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  413c9c:	imul   ecx,DWORD PTR ds:0xbf7e7631,0xfd241da1
  413ca6:	repz jnp 0x413ce8
  413ca9:	xchg   BYTE PTR [eax+0x43067dc9],al
  413caf:	mov    BYTE PTR [esi-0x62],dl
  413cb2:	cs jns 0x413d1a
  413cb5:	xchg   BYTE PTR ds:[ecx-0x3d613d4e],bl
  413cbc:	mov    esp,0x186511c5
  413cc1:	jno    0x413cb9
  413cc3:	add    al,0xa9
  413cc5:	in     al,dx
  413cc6:	adc    al,dh
  413cc8:	jge    0x413c95
  413cca:	in     eax,dx
  413ccb:	stc    
  413ccc:	jne    0x413c70
  413cce:	dec    edi
  413ccf:	fwait
  413cd0:	lock xchg esp,eax
  413cd2:	adc    edx,DWORD PTR [eax+0x1dbe6407]
  413cd8:	adc    DWORD PTR [esi-0x79e66b7c],0x5d93daee
  413ce2:	xchg   edx,eax
  413ce3:	jl     0x413cb6
  413ce5:	sbb    ebx,0xb7c13e60
  413ceb:	xchg   esp,eax
  413cec:	or     al,0xb8
  413cee:	cmc    
  413cef:	shr    DWORD PTR [eax-0x68],0x12
  413cf3:	std    
  413cf4:	cld    
  413cf5:	inc    edi
  413cf6:	daa    
  413cf7:	out    0xf0,al
  413cf9:	fmul   QWORD PTR [esi+0x43aa9dc]
  413cff:	aam    0x57
  413d01:	push   ebp
  413d02:	push   edi
  413d03:	sbb    ecx,eax
  413d05:	cwde   
  413d06:	jb     0x413d43
  413d08:	xchg   ecx,eax
  413d09:	fidiv  WORD PTR [ebx+0x34955e31]
  413d0f:	test   DWORD PTR [edx],ebx
  413d11:	scas   al,BYTE PTR es:[edi]
  413d12:	sbb    DWORD PTR [edi+0x7168a31f],esi
  413d18:	cmp    ebx,DWORD PTR [edx-0x7354490a]
  413d1e:	outs   dx,DWORD PTR ds:[esi]
  413d1f:	shr    BYTE PTR [edi],1
  413d21:	call   0x73fe2fbc
  413d26:	mov    WORD PTR [ebp+0xfda92ca],fs
  413d2c:	dec    edi
  413d2d:	mov    ebp,0x5371c1a4
  413d32:	(bad)  
  413d33:	pop    es
  413d34:	mov    ch,0xa6
  413d36:	cwde   
  413d37:	call   0xdd8d:0xfabce61a
  413d3e:	mov    edx,0xb1afe911
  413d43:	mov    BYTE PTR ds:0x3adb0e9b,0xf2
  413d4a:	iret   
  413d4b:	inc    BYTE PTR [esi-0x6f]
  413d4e:	sub    al,ah
  413d50:	mov    edx,0x69389d4
  413d55:	sub    BYTE PTR [ecx+0x256b7e01],bh
  413d5b:	sbb    bh,BYTE PTR [edx]
  413d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d5e:	je     0x413db4
  413d60:	test   BYTE PTR [eax],dh
  413d62:	or     ebx,DWORD PTR [edi+0x2c]
  413d65:	(bad)  
  413d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d67:	mov    edi,0xa31c1b4f
  413d6c:	scas   al,BYTE PTR es:[edi]
  413d6d:	leave  
  413d6e:	call   0x3cd8d1d7
  413d73:	outs   dx,DWORD PTR ds:[esi]
  413d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d75:	inc    ah
  413d77:	cmp    BYTE PTR [edi+0x759d693e],dh
  413d7d:	data16 stos BYTE PTR es:[edi],al
  413d7f:	cmp    DWORD PTR [ecx+0x32],esp
  413d82:	mov    ebx,0x86813d
  413d87:	sahf   
  413d88:	adc    esp,DWORD PTR [edi-0xbd27e3c]
  413d8e:	iret   
  413d8f:	in     eax,0x5a
  413d91:	or     BYTE PTR ds:0xc47d3407,ah
  413d97:	loope  0x413d41
  413d99:	ret    0x8704
  413d9c:	ins    BYTE PTR es:[edi],dx
  413d9d:	inc    edx
  413d9e:	in     eax,0x1f
  413da0:	ret    
  413da1:	shl    DWORD PTR [edx-0x65],0x23
  413da5:	push   ss
  413da6:	push   esi
  413da7:	not    DWORD PTR [ebx+ebp*2-0x67a7212e]
  413dae:	mov    DWORD PTR [ebx+0x20d6e6a5],ebp
  413db4:	je     0x413d77
  413db6:	(bad)  
  413db7:	xlat   BYTE PTR ds:[ebx]
  413db8:	std    
  413db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dba:	inc    ebp
  413dbb:	nop
  413dbc:	pop    ebx
  413dbd:	ror    BYTE PTR [edx],cl
  413dbf:	stc    
  413dc0:	inc    esp
  413dc1:	inc    ecx
  413dc2:	mov    eax,ds:0xb2846736
  413dc7:	add    ah,BYTE PTR [ebx+0x25]
  413dca:	das    
  413dcb:	xchg   ecx,eax
  413dcc:	fnstsw WORD PTR [edx+0x4141f00a]
  413dd2:	arpl   WORD PTR [ebx-0x80],bp
  413dd5:	and    eax,0x61e1de42
  413dda:	es stos BYTE PTR es:[edi],al
  413ddc:	xor    ah,BYTE PTR [ebp-0x74]
  413ddf:	pop    ecx
  413de0:	or     ebx,DWORD PTR [edx+0x5548f5d]
  413de6:	adc    eax,DWORD PTR [edx+0x38b68eb7]
  413dec:	mov    al,ds:0xcac9c0ab
  413df1:	mov    ebp,0x99e89119
  413df6:	lea    ecx,[ebx-0x47]
  413df9:	jmp    0x413e6b
  413dfb:	push   esp
  413dfc:	or     BYTE PTR [ebx],dh
  413dfe:	dec    edi
  413dff:	pop    esi
  413e00:	mov    ecx,0xa978a141
  413e05:	ins    BYTE PTR es:[edi],dx
  413e06:	sub    dl,bl
  413e08:	std    
  413e09:	dec    edx
  413e0a:	iret   
  413e0b:	jge    0x413e65
  413e0d:	(bad)  
  413e0e:	jp     0x413d9a
  413e10:	sbb    DWORD PTR [edi],ebx
  413e12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e13:	xchg   esp,eax
  413e14:	xlat   BYTE PTR ds:[ebx]
  413e15:	cmp    al,0x88
  413e17:	sub    BYTE PTR [esi+0x7c5ae4cb],0x47
  413e1e:	cs jmp 0x413e31
  413e21:	jp     0x413db7
  413e23:	xchg   ecx,eax
  413e24:	div    BYTE PTR [ecx+0x64]
  413e27:	cmp    al,0x1c
  413e29:	sbb    esp,edi
  413e2b:	cmc    
  413e2c:	xchg   edi,eax
  413e2d:	dec    esp
  413e2e:	jg     0x413dba
  413e30:	(bad)  
  413e31:	jl     0x413dbc
  413e33:	adc    dl,BYTE PTR [ebp+0x52]
  413e36:	sub    dl,dh
  413e38:	mov    ch,0xd6
  413e3a:	fild   QWORD PTR [ecx-0x7]
  413e3d:	outs   dx,BYTE PTR ds:[esi]
  413e3e:	jecxz  0x413de6
  413e40:	pop    ss
  413e41:	rcl    BYTE PTR [ecx-0x378a1959],1
  413e47:	jp     0x413ec3
  413e49:	adc    edi,DWORD PTR [esi-0x169840e8]
  413e4f:	cmp    cl,BYTE PTR [ebp+0x64]
  413e52:	jecxz  0x413e72
  413e54:	inc    ebx
  413e55:	jg     0x413eb6
  413e57:	pop    ecx
  413e58:	jecxz  0x413ec2
  413e5a:	dec    eax
  413e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e5c:	pusha  
  413e5d:	or     DWORD PTR [edi],edi
  413e5f:	outs   dx,DWORD PTR ds:[esi]
  413e60:	jge    0x413e03
  413e62:	jmp    0x4546:0xe0d9eac1
  413e69:	xchg   ecx,eax
  413e6a:	xlat   BYTE PTR ds:[ebx]
  413e6b:	adc    BYTE PTR [edx-0x3d04686],dh
  413e71:	pop    esi
  413e72:	lahf   
  413e73:	mov    ds:0x1b9bcb87,eax
  413e78:	cmp    al,0xfc
  413e7a:	pop    gs
  413e7c:	pop    ebp
  413e7d:	sub    cl,BYTE PTR [edi+0x27]
  413e80:	test   al,0x45
  413e82:	sbb    DWORD PTR [ecx-0x67b150c5],0x4d127daa
  413e8c:	pop    ds
  413e8d:	mov    ch,0x68
  413e8f:	hlt    
  413e90:	out    0xb9,eax
  413e92:	mov    dl,0xe8
  413e94:	cwde   
  413e95:	repz rcl cl,cl
  413e98:	int3   
  413e99:	(bad)  
  413e9a:	stos   BYTE PTR es:[edi],al
  413e9b:	cwde   
  413e9c:	or     DWORD PTR [edx-0x6cf8b48],ebp
  413ea2:	daa    
  413ea3:	icebp  
  413ea4:	xchg   edi,eax
  413ea5:	and    DWORD PTR [ebx+ecx*1+0x61],esi
  413ea9:	inc    eax
  413eaa:	cmc    
  413eab:	fsubrp st(1),st
  413ead:	jne    0x413f2e
  413eaf:	cmp    ah,dl
  413eb1:	or     bl,BYTE PTR [edx+0x37ad83b8]
  413eb7:	inc    edi
  413eb8:	sub    eax,0x6db19fa9
  413ebd:	dec    edi
  413ebe:	push   esp
  413ebf:	fisub  WORD PTR [ebx]
  413ec1:	sub    eax,0xd1251f39
  413ec6:	mov    fs,WORD PTR [ebp+eax*1-0x72]
  413eca:	pusha  
  413ecb:	jg     0x413e98
  413ecd:	fnsetpm(287 only) 
  413ecf:	jb     0x413ebc
  413ed1:	dec    edi
  413ed2:	mov    ah,BYTE PTR [esi]
  413ed4:	je     0x413f3d
  413ed6:	dec    ebp
  413ed7:	dec    edx
  413ed8:	pop    ebp
  413ed9:	jo     0x413eea
  413edb:	addr16 icebp 
  413edd:	mov    ch,0x1b
  413edf:	mov    ah,BYTE PTR [edi]
  413ee1:	mov    edx,0xa5c17aab
  413ee6:	xchg   esp,eax
  413ee7:	mov    DWORD PTR ds:0xa303b883,ebp
  413eed:	stos   BYTE PTR es:[edi],al
  413eee:	retf   0x1354
  413ef1:	stos   BYTE PTR es:[edi],al
  413ef2:	es clc 
  413ef4:	fnsave [ebx]
  413ef6:	and    ebx,DWORD PTR [eax+0x26cc5d8]
  413efc:	(bad)  
  413efd:	int3   
  413efe:	out    0x48,al
  413f00:	int3   
  413f01:	inc    eax
  413f02:	mov    al,0xd6
  413f04:	mov    eax,0x92276271
  413f09:	dec    esi
  413f0a:	mov    bl,0xd4
  413f0c:	and    al,0xdc
  413f0e:	add    al,0x9d
  413f10:	inc    ecx
  413f11:	fld    DWORD PTR [ebx+esi*4+0x295e17fc]
  413f18:	ins    DWORD PTR es:[edi],dx
  413f19:	imul   eax,DWORD PTR [edx],0xffffffcc
  413f1c:	inc    ecx
  413f1d:	hlt    
  413f1e:	nop
  413f1f:	in     al,0xe4
  413f21:	dec    esi
  413f22:	push   es
  413f23:	dec    ecx
  413f24:	pop    esp
  413f25:	(bad)  
  413f26:	push   ecx
  413f27:	xor    ah,BYTE PTR [eax+0x7a]
  413f2a:	pop    ss
  413f2b:	xchg   ecx,eax
  413f2c:	mov    edx,0x81a77644
  413f31:	(bad)  
  413f32:	and    BYTE PTR [edx],dh
  413f34:	retf   0xe341
  413f37:	inc    ecx
  413f38:	jp     0x413f82
  413f3a:	aas    
  413f3b:	inc    esp
  413f3c:	repz or edx,DWORD PTR [esi+0x1c0b5753]
  413f43:	shr    DWORD PTR [edx+0x63],1
  413f46:	pusha  
  413f47:	jecxz  0x413fad
  413f49:	in     al,dx
  413f4a:	rcr    DWORD PTR [ebx+0x43],1
  413f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f4e:	push   ebx
  413f4f:	xor    cx,WORD PTR [esi]
  413f52:	cmp    cl,al
  413f54:	and    eax,0x8588bd37
  413f59:	retf   0x2272
  413f5c:	xor    BYTE PTR [ebx],ch
  413f5e:	inc    esi
  413f60:	fimul  DWORD PTR [ecx]
  413f62:	retf   
  413f63:	in     al,0x24
  413f65:	xchg   esp,eax
  413f66:	aaa    
  413f67:	adc    dh,BYTE PTR [edx]
  413f69:	(bad)  
  413f6a:	sbb    esp,DWORD PTR [esi]
  413f6c:	or     bh,ah
  413f6e:	cdq    
  413f6f:	xor    edx,eax
  413f71:	xor    ebx,eax
  413f73:	xor    DWORD PTR ds:0x42b00c,0x42900c
  413f7d:	sub    edx,ebx
  413f7f:	mov    DWORD PTR ds:0x42b010,0x4d7f
  413f89:	sub    edx,esi
  413f8b:	or     ebx,0x6e50
  413f91:	xor    edx,eax
  413f93:	mov    DWORD PTR ds:0x429008,0x2a34
  413f9d:	mov    DWORD PTR [ebp+0x8],edx
  413fa0:	mov    edx,DWORD PTR [ebp+0x8]
  413fa3:	mov    ebx,DWORD PTR [ebp-0x58]
  413fa6:	add    edx,0x5708f8
  413fac:	or     DWORD PTR ds:0x42c008,0x42c014
  413fb6:	imul   edx,ebx
  413fb9:	and    DWORD PTR ds:0x42d000,0x0
  413fc3:	jmp    0x413fd5
  413fc8:	mov    ebx,DWORD PTR ds:0x42d000
  413fce:	inc    ebx
  413fcf:	mov    DWORD PTR ds:0x42d000,ebx
  413fd5:	cmp    DWORD PTR ds:0x42d000,0x1c
  413fdc:	jae    0x414018
  413fe2:	cmp    DWORD PTR ds:0x42d000,0x1d
  413fe9:	jne    0x41400d
  413fef:	push   DWORD PTR [ebp-0x10]
  413ff2:	push   0x42c004
  413ff7:	push   0x1feb
  413ffc:	push   DWORD PTR [ebp-0x28]
  413fff:	push   DWORD PTR [ebp-0x28]
  414002:	push   0x72a4
  414007:	call   DWORD PTR ds:0x42ec97
  41400d:	jmp    0x413fc8
  414012:	adc    ebx,0x7a0c
  414018:	mov    DWORD PTR [ebp-0x58],edx
  41401b:	and    DWORD PTR ds:0x429000,0x0
  414025:	jmp    0x414037
  41402a:	mov    edx,DWORD PTR ds:0x429000
  414030:	inc    edx
  414031:	mov    DWORD PTR ds:0x429000,edx
  414037:	cmp    DWORD PTR ds:0x429000,0x19
  41403e:	jae    0x414083
  414044:	cmp    DWORD PTR ds:0x429000,0x4
  41404b:	jne    0x414057
  414051:	call   DWORD PTR ds:0x42ec9b
  414057:	cmp    DWORD PTR ds:0x429000,0x3
  41405e:	jne    0x414071
  414064:	mov    edx,DWORD PTR ds:0x429000
  41406a:	inc    edx
  41406b:	mov    DWORD PTR ds:0x429000,edx
  414071:	jmp    0x41402a
  414076:	movzx  edx,BYTE PTR ds:0x42901c
  41407d:	or     DWORD PTR ds:0x42c008,edx
  414083:	mov    edx,DWORD PTR [ebp+0x8]
  414086:	mov    DWORD PTR ds:0x429004,0x6b93
  414090:	mov    ebx,DWORD PTR [ebp-0x54]
  414093:	add    DWORD PTR ds:0x42c00c,0x429000
  41409d:	add    edx,0x64f8da
  4140a3:	xor    DWORD PTR ds:0x42b004,0x45d1
  4140ad:	or     edx,ebx
  4140af:	mov    DWORD PTR [ebp-0x54],edx
  4140b2:	not    ebx
  4140b4:	mov    edx,DWORD PTR [ebp+0x8]
  4140b7:	mov    ebx,DWORD PTR [ebp-0x50]
  4140ba:	add    edx,ecx
  4140bc:	xor    edx,ebx
  4140be:	adc    DWORD PTR ds:0x42d008,0x7f53
  4140c8:	mov    DWORD PTR [ebp-0x50],edx
  4140cb:	mov    edx,DWORD PTR [ebp+0x8]
  4140ce:	not    ebx
  4140d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4140d3:	sub    DWORD PTR ds:0x42a01c,0x30e3
  4140dd:	add    edx,edi
  4140df:	sub    DWORD PTR ds:0x42d01c,0x42d000
  4140e9:	and    edx,ebx
  4140eb:	sub    DWORD PTR ds:0x42b018,0x3308
  4140f5:	mov    DWORD PTR [ebp-0x4c],edx
  4140f8:	and    DWORD PTR ds:0x42c018,0x0
  414102:	jmp    0x414114
  414107:	mov    ebx,DWORD PTR ds:0x42c018
  41410d:	inc    ebx
  41410e:	mov    DWORD PTR ds:0x42c018,ebx
  414114:	cmp    DWORD PTR ds:0x42c018,0x1c
  41411b:	jae    0x414160
  414121:	cmp    DWORD PTR ds:0x42c018,0x9
  414128:	jne    0x41413f
  41412e:	push   DWORD PTR [ebp-0x1c]
  414131:	push   0x429028
  414136:	push   DWORD PTR [ebp-0x20]
  414139:	call   DWORD PTR ds:0x42ec9f
  41413f:	cmp    DWORD PTR ds:0x42c018,0x8
  414146:	jne    0x41415b
  41414c:	xor    ebx,ebx
  41414e:	add    ebx,DWORD PTR ds:0x42c018
  414154:	inc    ebx
  414155:	mov    DWORD PTR ds:0x42c018,ebx
  41415b:	jmp    0x414107
  414160:	mov    edx,DWORD PTR [ebp+0x8]
  414163:	mov    ebx,DWORD PTR [ebp-0x48]
  414166:	mov    DWORD PTR ds:0x429008,0x1eac
  414170:	lea    edx,[ebx+edx*1+0x241fc1f]
  414177:	and    DWORD PTR ds:0x42900c,0x77ed
  414181:	mov    DWORD PTR [ebp-0x48],edx
  414184:	mov    edx,DWORD PTR [ebp+0x8]
  414187:	mov    ebx,0xfa5e15e2
  41418c:	sub    ebx,edx
  41418e:	add    ebx,DWORD PTR [ebp-0x44]
  414191:	sub    DWORD PTR ds:0x42a010,0x32d9
  41419b:	mov    DWORD PTR [ebp-0x44],ebx
  41419e:	mov    edx,DWORD PTR [ebp+0x8]
  4141a1:	or     DWORD PTR ds:0x429000,0x42b018
  4141ab:	xor    edx,eax
  4141ad:	add    edx,esi
  4141af:	mov    DWORD PTR ds:0x42d004,0x438b
  4141b9:	jne    0x411baa
  4141bf:	mov    DWORD PTR ds:0x42c008,0x3945
  4141c9:	jmp    0x4145ae
  4141ce:	mov    edx,DWORD PTR [ebp-0xc]
  4141d1:	sub    edx,esi
  4141d3:	and    DWORD PTR ds:0x429004,0x0
  4141dd:	jmp    0x4141ef
  4141e2:	mov    ebx,DWORD PTR ds:0x429004
  4141e8:	inc    ebx
  4141e9:	mov    DWORD PTR ds:0x429004,ebx
  4141ef:	cmp    DWORD PTR ds:0x429004,0x10
  4141f6:	jae    0x414243
  4141fc:	cmp    DWORD PTR ds:0x429004,0x9
  414203:	jne    0x41421e
  414209:	push   0x42e127
  41420e:	push   0x42e000
  414213:	push   0x400000
  414218:	call   DWORD PTR ds:0x42eca7
  41421e:	cmp    DWORD PTR ds:0x429004,0x8
  414225:	jne    0x414238
  41422b:	mov    ebx,DWORD PTR ds:0x429004
  414231:	inc    ebx
  414232:	mov    DWORD PTR ds:0x429004,ebx
  414238:	jmp    0x4141e2
  41423d:	sub    DWORD PTR ds:0x42b004,ecx
  414243:	xor    edx,eax
  414245:	mov    DWORD PTR [ebp-0x5c],edx
  414248:	sub    DWORD PTR ds:0x42b000,edx
  41424e:	mov    edx,DWORD PTR [ebp-0x10]
  414251:	sbb    DWORD PTR ds:0x429000,0x7854
  41425b:	mov    ebx,DWORD PTR [ebp-0x8]
  41425e:	inc    DWORD PTR ds:0x42d010
  414264:	xor    edx,eax
  414266:	add    DWORD PTR ds:0x42c008,0x42b018
  414270:	xor    ebx,eax
  414272:	mov    DWORD PTR ds:0x42a01c,0x61e1
  41427c:	sub    edx,ebx
  41427e:	sub    DWORD PTR ds:0x42c014,0x2136
  414288:	sub    edx,esi
  41428a:	xor    edx,eax
  41428c:	mov    DWORD PTR ds:0x42a01c,0x74d4
  414296:	mov    DWORD PTR [ebp-0x10],edx
  414299:	mov    edx,DWORD PTR [ebp-0x14]
  41429c:	mov    DWORD PTR ds:0x42a008,0x2bcf
  4142a6:	mov    DWORD PTR [ebp+0x8],edx
  4142a9:	jmp    0x414392
  4142ae:	mov    edx,DWORD PTR [ebp+0x8]
  4142b1:	neg    ebx
  4142b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4142b6:	xor    DWORD PTR ds:0x429000,0x42b004
  4142c0:	xor    edx,eax
  4142c2:	add    DWORD PTR ds:0x42a01c,0x429024
  4142cc:	xor    ebx,eax
  4142ce:	sub    edx,ebx
  4142d0:	and    DWORD PTR ds:0x429028,edi
  4142d6:	sub    edx,esi
  4142d8:	xor    edx,eax
  4142da:	mov    DWORD PTR [ebp+0x8],edx
  4142dd:	mov    ebx,DWORD PTR ds:0x429000
  4142e3:	adc    DWORD PTR ds:0x42a018,ebx
  4142e9:	mov    edx,DWORD PTR [ebp+0x8]
  4142ec:	xor    ebx,ebx
  4142ee:	xor    ebx,DWORD PTR ds:0x429014
  4142f4:	adc    ebx,DWORD PTR ds:0x42b000
  4142fa:	mov    DWORD PTR ds:0x429014,ebx
  414300:	mov    ebx,DWORD PTR [ebp-0x58]
  414303:	xor    DWORD PTR ds:0x42a004,0x429028
  41430d:	add    edx,0x5708f8
  414313:	imul   edx,ebx
  414316:	xor    ebx,ebx
  414318:	or     ebx,DWORD PTR ds:0x42a018
  41431e:	add    ebx,DWORD PTR ds:0x42d010
  414324:	mov    DWORD PTR ds:0x42a018,ebx
  41432a:	mov    DWORD PTR [ebp-0x58],edx
  41432d:	mov    ebx,DWORD PTR ds:0x42a014
  414333:	sbb    DWORD PTR ds:0x42d008,ebx
  414339:	mov    edx,DWORD PTR [ebp+0x8]
  41433c:	xor    ebx,ebx
  41433e:	xor    ebx,DWORD PTR ds:0x42a00c
  414344:	add    DWORD PTR ds:0x429004,ebx
  41434a:	mov    ebx,DWORD PTR [ebp-0x54]
  41434d:	add    edx,0x64f8da
  414353:	or     edx,ebx
  414355:	mov    DWORD PTR [ebp-0x54],edx
  414358:	mov    edx,DWORD PTR [ebp+0x8]
  41435b:	mov    ebx,DWORD PTR [ebp-0x50]
  41435e:	add    edx,ecx
  414360:	xor    edx,ebx
  414362:	mov    DWORD PTR [ebp-0x50],edx
  414365:	mov    edx,DWORD PTR [ebp+0x8]
  414368:	mov    ebx,DWORD PTR [ebp-0x4c]
  41436b:	add    edx,edi
  41436d:	and    edx,ebx
  41436f:	mov    DWORD PTR [ebp-0x4c],edx
  414372:	mov    edx,DWORD PTR [ebp+0x8]
  414375:	mov    ebx,DWORD PTR [ebp-0x48]
  414378:	lea    edx,[ebx+edx*1+0x241fc1f]
  41437f:	mov    DWORD PTR [ebp-0x48],edx
  414382:	mov    edx,DWORD PTR [ebp+0x8]
  414385:	mov    ebx,0xfa5e15e2
  41438a:	sub    ebx,edx
  41438c:	add    ebx,DWORD PTR [ebp-0x44]
  41438f:	mov    DWORD PTR [ebp-0x44],ebx
  414392:	mov    edx,DWORD PTR [ebp+0x8]
  414395:	xor    edx,eax
  414397:	add    edx,esi
  414399:	jne    0x4142ae
  41439f:	mov    edx,DWORD PTR [ebp-0xc]
  4143a2:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4143a9:	mov    bl,BYTE PTR [ebp-0x1]
  4143ac:	cmp    dl,bl
  4143ae:	je     0x41448c
  4143b4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4143b7:	mov    edx,DWORD PTR [ebp-0xc]
  4143ba:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4143c1:	mov    ebx,DWORD PTR [ebp+0xc]
  4143c4:	xor    ecx,eax
  4143c6:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  4143cd:	jne    0x4145c0
  4143d3:	mov    ecx,DWORD PTR [ebp-0x5c]
  4143d6:	mov    edx,DWORD PTR [ebp+0xc]
  4143d9:	xor    ecx,eax
  4143db:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  4143e3:	mov    edx,DWORD PTR [ebp-0x18]
  4143e6:	xor    edx,eax
  4143e8:	add    edx,esi
  4143ea:	cmp    ecx,edx
  4143ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4143ef:	mov    DWORD PTR [ebp+0x8],ecx
  4143f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4143f5:	je     0x416a87
  4143fb:	xor    ecx,eax
  4143fd:	add    ecx,esi
  4143ff:	mov    ecx,0x242ebed
  414404:	je     0x414514
  41440a:	mov    edx,DWORD PTR [ebp+0x8]
  41440d:	mov    ebx,DWORD PTR [ebp-0x8]
  414410:	xor    edx,eax
  414412:	xor    ebx,eax
  414414:	sub    edx,ebx
  414416:	sub    edx,esi
  414418:	xor    edx,eax
  41441a:	mov    DWORD PTR [ebp+0x8],edx
  41441d:	mov    edx,DWORD PTR [ebp+0x8]
  414420:	mov    ebx,DWORD PTR [ebp-0x58]
  414423:	add    edx,0x5708f8
  414429:	imul   edx,ebx
  41442c:	mov    DWORD PTR [ebp-0x58],edx
  41442f:	mov    edx,DWORD PTR [ebp+0x8]
  414432:	mov    ebx,DWORD PTR [ebp-0x54]
  414435:	add    edx,0x64f8da
  41443b:	or     edx,ebx
  41443d:	mov    DWORD PTR [ebp-0x54],edx
  414440:	mov    edx,DWORD PTR [ebp+0x8]
  414443:	mov    ebx,DWORD PTR [ebp-0x50]
  414446:	add    edx,ecx
  414448:	xor    edx,ebx
  41444a:	mov    DWORD PTR [ebp-0x50],edx
  41444d:	mov    edx,DWORD PTR [ebp+0x8]
  414450:	mov    ebx,DWORD PTR [ebp-0x4c]
  414453:	add    edx,edi
  414455:	and    edx,ebx
  414457:	mov    DWORD PTR [ebp-0x4c],edx
  41445a:	mov    edx,DWORD PTR [ebp+0x8]
  41445d:	mov    ebx,DWORD PTR [ebp-0x48]
  414460:	lea    edx,[ebx+edx*1+0x241fc1f]
  414467:	mov    DWORD PTR [ebp-0x48],edx
  41446a:	mov    edx,DWORD PTR [ebp+0x8]
  41446d:	mov    ebx,0xfa5e15e2
  414472:	sub    ebx,edx
  414474:	add    ebx,DWORD PTR [ebp-0x44]
  414477:	mov    DWORD PTR [ebp-0x44],ebx
  41447a:	mov    edx,DWORD PTR [ebp+0x8]
  41447d:	xor    edx,eax
  41447f:	add    edx,esi
  414481:	jne    0x41440a
  414487:	jmp    0x414514
  41448c:	mov    edx,DWORD PTR [ebp-0x14]
  41448f:	mov    DWORD PTR [ebp+0x8],edx
  414492:	jmp    0x414507
  414497:	mov    edx,DWORD PTR [ebp+0x8]
  41449a:	mov    ebx,DWORD PTR [ebp-0x8]
  41449d:	xor    edx,eax
  41449f:	xor    ebx,eax
  4144a1:	sub    edx,ebx
  4144a3:	sub    edx,esi
  4144a5:	xor    edx,eax
  4144a7:	mov    DWORD PTR [ebp+0x8],edx
  4144aa:	mov    edx,DWORD PTR [ebp+0x8]
  4144ad:	mov    ebx,DWORD PTR [ebp-0x58]
  4144b0:	add    edx,0x5708f8
  4144b6:	imul   edx,ebx
  4144b9:	mov    DWORD PTR [ebp-0x58],edx
  4144bc:	mov    edx,DWORD PTR [ebp+0x8]
  4144bf:	mov    ebx,DWORD PTR [ebp-0x54]
  4144c2:	add    edx,0x64f8da
  4144c8:	or     edx,ebx
  4144ca:	mov    DWORD PTR [ebp-0x54],edx
  4144cd:	mov    edx,DWORD PTR [ebp+0x8]
  4144d0:	mov    ebx,DWORD PTR [ebp-0x50]
  4144d3:	add    edx,ecx
  4144d5:	xor    edx,ebx
  4144d7:	mov    DWORD PTR [ebp-0x50],edx
  4144da:	mov    edx,DWORD PTR [ebp+0x8]
  4144dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4144e0:	add    edx,edi
  4144e2:	and    edx,ebx
  4144e4:	mov    DWORD PTR [ebp-0x4c],edx
  4144e7:	mov    edx,DWORD PTR [ebp+0x8]
  4144ea:	mov    ebx,DWORD PTR [ebp-0x48]
  4144ed:	lea    edx,[ebx+edx*1+0x241fc1f]
  4144f4:	mov    DWORD PTR [ebp-0x48],edx
  4144f7:	mov    edx,DWORD PTR [ebp+0x8]
  4144fa:	mov    ebx,0xfa5e15e2
  4144ff:	sub    ebx,edx
  414501:	add    ebx,DWORD PTR [ebp-0x44]
  414504:	mov    DWORD PTR [ebp-0x44],ebx
  414507:	mov    edx,DWORD PTR [ebp+0x8]
  41450a:	xor    edx,eax
  41450c:	add    edx,esi
  41450e:	jne    0x414497
  414514:	mov    edx,DWORD PTR [ebp-0x14]
  414517:	mov    DWORD PTR [ebp+0x8],edx
  41451a:	jmp    0x41458f
  41451f:	mov    edx,DWORD PTR [ebp+0x8]
  414522:	mov    ebx,DWORD PTR [ebp-0x8]
  414525:	xor    edx,eax
  414527:	xor    ebx,eax
  414529:	sub    edx,ebx
  41452b:	sub    edx,esi
  41452d:	xor    edx,eax
  41452f:	mov    DWORD PTR [ebp+0x8],edx
  414532:	mov    edx,DWORD PTR [ebp+0x8]
  414535:	mov    ebx,DWORD PTR [ebp-0x58]
  414538:	add    edx,0x5708f8
  41453e:	imul   edx,ebx
  414541:	mov    DWORD PTR [ebp-0x58],edx
  414544:	mov    edx,DWORD PTR [ebp+0x8]
  414547:	mov    ebx,DWORD PTR [ebp-0x54]
  41454a:	add    edx,0x64f8da
  414550:	or     edx,ebx
  414552:	mov    DWORD PTR [ebp-0x54],edx
  414555:	mov    edx,DWORD PTR [ebp+0x8]
  414558:	mov    ebx,DWORD PTR [ebp-0x50]
  41455b:	add    edx,ecx
  41455d:	xor    edx,ebx
  41455f:	mov    DWORD PTR [ebp-0x50],edx
  414562:	mov    edx,DWORD PTR [ebp+0x8]
  414565:	mov    ebx,DWORD PTR [ebp-0x4c]
  414568:	add    edx,edi
  41456a:	and    edx,ebx
  41456c:	mov    DWORD PTR [ebp-0x4c],edx
  41456f:	mov    edx,DWORD PTR [ebp+0x8]
  414572:	mov    ebx,DWORD PTR [ebp-0x48]
  414575:	lea    edx,[ebx+edx*1+0x241fc1f]
  41457c:	mov    DWORD PTR [ebp-0x48],edx
  41457f:	mov    edx,DWORD PTR [ebp+0x8]
  414582:	mov    ebx,0xfa5e15e2
  414587:	sub    ebx,edx
  414589:	add    ebx,DWORD PTR [ebp-0x44]
  41458c:	mov    DWORD PTR [ebp-0x44],ebx
  41458f:	mov    edx,DWORD PTR [ebp+0x8]
  414592:	xor    edx,eax
  414594:	add    edx,esi
  414596:	jne    0x41451f
  41459c:	mov    edx,DWORD PTR [ebp-0x8]
  41459f:	mov    ebx,DWORD PTR [ebp-0xc]
  4145a2:	xor    edx,eax
  4145a4:	lea    edx,[edx+ebx*1+0x3272e0]
  4145ab:	mov    DWORD PTR [ebp-0xc],edx
  4145ae:	mov    edx,DWORD PTR [ebp-0x10]
  4145b1:	xor    edx,eax
  4145b3:	add    edx,esi
  4145b5:	jne    0x4141ce
  4145bb:	jmp    0x418e50
  4145c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4145c3:	mov    DWORD PTR [ebp+0x8],ecx
  4145c6:	jmp    0x41463f
  4145cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4145ce:	mov    edx,DWORD PTR [ebp-0x8]
  4145d1:	xor    ecx,eax
  4145d3:	xor    edx,eax
  4145d5:	sub    ecx,edx
  4145d7:	sub    ecx,esi
  4145d9:	xor    ecx,eax
  4145db:	mov    DWORD PTR [ebp+0x8],ecx
  4145de:	mov    ecx,DWORD PTR [ebp+0x8]
  4145e1:	mov    edx,DWORD PTR [ebp-0x58]
  4145e4:	add    ecx,0x5708f8
  4145ea:	imul   ecx,edx
  4145ed:	mov    DWORD PTR [ebp-0x58],ecx
  4145f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4145f3:	mov    edx,DWORD PTR [ebp-0x54]
  4145f6:	add    ecx,0x64f8da
  4145fc:	or     ecx,edx
  4145fe:	mov    DWORD PTR [ebp-0x54],ecx
  414601:	mov    ecx,DWORD PTR [ebp+0x8]
  414604:	mov    edx,DWORD PTR [ebp-0x50]
  414607:	add    ecx,0x242ebed
  41460d:	xor    ecx,edx
  41460f:	mov    DWORD PTR [ebp-0x50],ecx
  414612:	mov    ecx,DWORD PTR [ebp+0x8]
  414615:	mov    edx,DWORD PTR [ebp-0x4c]
  414618:	add    ecx,edi
  41461a:	and    ecx,edx
  41461c:	mov    DWORD PTR [ebp-0x4c],ecx
  41461f:	mov    ecx,DWORD PTR [ebp+0x8]
  414622:	mov    edx,DWORD PTR [ebp-0x48]
  414625:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41462c:	mov    DWORD PTR [ebp-0x48],ecx
  41462f:	mov    ecx,DWORD PTR [ebp+0x8]
  414632:	mov    edx,0xfa5e15e2
  414637:	sub    edx,ecx
  414639:	add    edx,DWORD PTR [ebp-0x44]
  41463c:	mov    DWORD PTR [ebp-0x44],edx
  41463f:	mov    ecx,DWORD PTR [ebp+0x8]
  414642:	xor    ecx,eax
  414644:	add    ecx,esi
  414646:	jne    0x4145cb
  41464c:	jmp    0x418e5c
  414651:	mov    ecx,DWORD PTR [ebp+0x8]
  414654:	mov    edx,DWORD PTR [ebp-0x8]
  414657:	xor    ecx,eax
  414659:	xor    edx,eax
  41465b:	sub    ecx,edx
  41465d:	sub    ecx,esi
  41465f:	xor    ecx,eax
  414661:	mov    DWORD PTR [ebp+0x8],ecx
  414664:	mov    ecx,DWORD PTR [ebp+0x8]
  414667:	mov    edx,DWORD PTR [ebp-0x58]
  41466a:	add    ecx,0x5708f8
  414670:	imul   ecx,edx
  414673:	mov    DWORD PTR [ebp-0x58],ecx
  414676:	mov    ecx,DWORD PTR [ebp+0x8]
  414679:	mov    edx,DWORD PTR [ebp-0x54]
  41467c:	add    ecx,0x64f8da
  414682:	or     ecx,edx
  414684:	mov    DWORD PTR [ebp-0x54],ecx
  414687:	mov    ecx,DWORD PTR [ebp+0x8]
  41468a:	mov    edx,DWORD PTR [ebp-0x50]
  41468d:	add    ecx,0x242ebed
  414693:	xor    ecx,edx
  414695:	mov    DWORD PTR [ebp-0x50],ecx
  414698:	mov    ecx,DWORD PTR [ebp+0x8]
  41469b:	mov    edx,DWORD PTR [ebp-0x4c]
  41469e:	add    ecx,edi
  4146a0:	and    ecx,edx
  4146a2:	mov    DWORD PTR [ebp-0x4c],ecx
  4146a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4146a8:	mov    edx,DWORD PTR [ebp-0x48]
  4146ab:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4146b2:	mov    DWORD PTR [ebp-0x48],ecx
  4146b5:	jmp    0x416a74
  4146ba:	sub    dl,BYTE PTR [esi]
  4146bc:	jg     0x41469d
  4146be:	imul   edi,DWORD PTR [ebx-0x76],0x7b
  4146c2:	stc    
  4146c3:	nop
  4146c4:	inc    esp
  4146c5:	sub    al,0x4b
  4146c7:	sub    eax,0x737093f7
  4146cc:	jp     0x414748
  4146ce:	fcomp  DWORD PTR [edi+0x7a]
  4146d1:	jp     0x414693
  4146d3:	test   al,0x82
  4146d5:	aas    
  4146d6:	enter  0xdfc2,0xb2
  4146da:	imul   ebx,DWORD PTR [esi+0x22fad68c],0x5de2dff7
  4146e4:	push   ebx
  4146e5:	mov    dl,bh
  4146e7:	push   ecx
  4146e8:	jns    0x4146e0
  4146ea:	pop    ebp
  4146eb:	js     0x4146f9
  4146ed:	sbb    dl,cl
  4146ef:	sbb    edi,DWORD PTR [ebx]
  4146f1:	and    edi,DWORD PTR [ecx]
  4146f3:	mov    ecx,0xf95ba9e2
  4146f8:	jg     0x414681
  4146fa:	xor    esp,esi
  4146fc:	ror    bl,1
  4146fe:	mov    esp,0x38014c05
  414703:	push   ecx
  414704:	or     al,0x51
  414706:	add    bl,BYTE PTR [ebx]
  414708:	call   0xa7a0258f
  41470d:	and    al,0xb4
  41470f:	dec    edx
  414710:	imul   ebp,edi,0xffffffb5
  414713:	test   DWORD PTR [eax-0x6],0x60cace00
  41471a:	popf   
  41471b:	cwde   
  41471c:	je     0x414711
  41471e:	or     al,0xaf
  414720:	and    al,dh
  414722:	mov    ch,0x4
  414724:	add    al,0x8a
  414726:	xlat   BYTE PTR ds:[ebx]
  414727:	sub    cl,0x60
  41472a:	ret    
  41472b:	xchg   cl,cl
  41472d:	out    0xaf,eax
  41472f:	fucomp st(6)
  414731:	adc    ebp,edi
  414733:	adc    dl,cl
  414735:	int    0xee
  414737:	sbb    eax,0x7fab379d
  41473c:	ret    0xd3e5
  41473f:	adc    dh,ch
  414741:	dec    edx
  414742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414743:	xor    al,0xab
  414745:	in     eax,dx
  414746:	xchg   edi,eax
  414747:	dec    ebx
  414748:	dec    esi
  414749:	into   
  41474a:	stos   DWORD PTR es:[edi],eax
  41474b:	leave  
  41474c:	jo     0x414757
  41474e:	xlat   BYTE PTR ds:[ebx]
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	pop    edx
  414751:	dec    esp
  414752:	fsubr  st(4),st
  414754:	aad    0x25
  414756:	xor    al,0x80
  414758:	push   ecx
  414759:	fwait
  41475a:	dec    esi
  41475b:	hlt    
  41475c:	xor    BYTE PTR [eax-0xc],bh
  41475f:	les    ebx,FWORD PTR [edx+0x0]
  414762:	add    al,0x22
  414764:	out    dx,eax
  414765:	sub    eax,0xa2e57f3f
  41476a:	int    0x67
  41476c:	jp     0x41475a
  41476e:	push   eax
  41476f:	ret    
  414770:	and    eax,0x99598081
  414775:	aam    0xa0
  414777:	push   ebx
  414778:	adc    DWORD PTR [eax],esi
  41477a:	push   0x3da9ed0f
  41477f:	xchg   esp,eax
  414780:	mov    al,ds:0xae847283
  414785:	sbb    eax,0x8a9eed0c
  41478a:	bound  edi,QWORD PTR [eax]
  41478c:	xor    dl,BYTE PTR [ebx]
  41478e:	out    0xc7,al
  414790:	ja     0x4147ff
  414792:	rol    BYTE PTR [ecx],cl
  414794:	push   0xe9ffacd5
  414799:	sbb    ax,0x60c4
  41479d:	cli    
  41479e:	pop    edx
  41479f:	ins    DWORD PTR es:[edi],dx
  4147a0:	pushf  
  4147a1:	es sti 
  4147a3:	xor    esi,edx
  4147a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a6:	loop   0x414768
  4147a8:	jbe    0x41481f
  4147aa:	cmp    DWORD PTR [eax],ecx
  4147ac:	mov    eax,ds:0x3148d08
  4147b1:	outs   dx,BYTE PTR ds:[esi]
  4147b2:	mov    edi,0x44adf431
  4147b7:	xchg   ebp,eax
  4147b8:	loope  0x4147aa
  4147ba:	or     esp,DWORD PTR [ecx]
  4147bc:	pop    edx
  4147bd:	mov    ecx,0x3fc2190e
  4147c2:	fwait
  4147c3:	aaa    
  4147c4:	out    0xc9,al
  4147c6:	or     DWORD PTR [eax],edi
  4147c8:	ret    0x3fc3
  4147cb:	pop    ds
  4147cc:	into   
  4147cd:	mov    ebx,0x90b698c6
  4147d2:	lea    ebp,[esi+0x719e702a]
  4147d8:	jno    0x4147f6
  4147da:	and    esp,DWORD PTR [ebp-0x19]
  4147dd:	aas    
  4147de:	in     al,0xf9
  4147e0:	jge    0x414852
  4147e2:	mov    edx,0x4e056b8d
  4147e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e8:	lods   eax,DWORD PTR ds:[esi]
  4147e9:	mov    esi,?
  4147eb:	sub    edx,0x12
  4147ee:	ret    
  4147ef:	arpl   bp,dx
  4147f1:	inc    ebx
  4147f2:	mov    ebx,ecx
  4147f4:	rcr    DWORD PTR [ebp+0x77],cl
  4147f7:	icebp  
  4147f8:	sahf   
  4147f9:	or     BYTE PTR [eax],dl
  4147fb:	adc    edi,ebx
  4147fd:	out    dx,eax
  4147fe:	jecxz  0x414782
  414800:	iret   
  414801:	in     eax,0x79
  414803:	aam    0x91
  414805:	cmp    ecx,ecx
  414807:	xor    BYTE PTR [eax+edi*1-0x43],dh
  41480b:	xchg   ebp,eax
  41480c:	jle    0x4147b3
  41480e:	ins    DWORD PTR es:[edi],dx
  41480f:	mov    esi,DWORD PTR [edi+0x4e815b3c]
  414815:	mov    eax,ds:0x5213df6b
  41481a:	ret    0x487d
  41481d:	cmp    dl,BYTE PTR [ebx+edi*2+0x2c144e36]
  414824:	push   0xd31f6a05
  414829:	jb     0x4147bf
  41482b:	jb     0x4147e1
  41482d:	jo     0x4147b2
  41482f:	sbb    eax,0xa71c6804
  414834:	arpl   sp,bp
  414836:	inc    edi
  414837:	pop    ds
  414838:	pop    ebp
  414839:	sub    ebp,DWORD PTR [edx]
  41483b:	fwait
  41483c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41483d:	cmp    ah,BYTE PTR ds:0x3864d56c
  414843:	sar    BYTE PTR [ecx],cl
  414845:	das    
  414846:	fs mov ecx,0xd4e1a272
  41484c:	pop    esp
  41484d:	(bad)  
  41484e:	ja     0x41483a
  414850:	test   BYTE PTR ds:[ecx-0x2b4f6905],bl
  414857:	je     0x4147e2
  414859:	(bad)  
  41485b:	push   edx
  41485c:	fild   DWORD PTR [edx+0x27]
  41485f:	int3   
  414860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414861:	aas    
  414862:	mov    ?,WORD PTR [eax-0x6e0e41d2]
  414868:	sbb    dl,BYTE PTR [edx+0x64]
  41486b:	clc    
  41486c:	aaa    
  41486d:	dec    esp
  41486e:	(bad)  
  41486f:	cs mov cl,0x8e
  414872:	add    eax,0xadde4633
  414877:	cmp    DWORD PTR [esi-0x41],eax
  41487a:	cmp    ch,BYTE PTR [edi]
  41487c:	dec    esi
  41487d:	sbb    ebx,DWORD PTR [eax]
  41487f:	into   
  414880:	test   eax,0x1c9ef651
  414885:	jns    0x41487f
  414887:	or     al,0xfc
  414889:	xchg   edx,eax
  41488a:	xor    DWORD PTR [esi],edi
  41488c:	repnz retf 
  41488e:	in     al,dx
  41488f:	dec    esi
  414890:	in     al,dx
  414891:	mov    al,0xfa
  414893:	pop    ecx
  414894:	and    eax,0xffffffaa
  414897:	outs   dx,BYTE PTR ds:[esi]
  414898:	sub    dh,dl
  41489a:	and    ecx,eax
  41489c:	jecxz  0x414893
  41489e:	stos   DWORD PTR es:[edi],eax
  41489f:	push   esp
  4148a0:	push   cs
  4148a1:	aas    
  4148a2:	and    al,0x4e
  4148a4:	xchg   edi,eax
  4148a5:	sub    BYTE PTR [ecx-0x32],dh
  4148a8:	mov    ds:0x5fc8342c,eax
  4148ad:	inc    ebp
  4148ae:	(bad)  
  4148af:	jg     0x4148e4
  4148b1:	mov    ebp,0x9376b2c1
  4148b6:	in     eax,0x40
  4148b8:	mov    bh,0x49
  4148ba:	inc    edi
  4148bb:	fisttp QWORD PTR [esi+0x4]
  4148be:	adc    esp,ebx
  4148c0:	add    BYTE PTR [ebx+0x50],bh
  4148c3:	mov    ds:0xbc625c7e,al
  4148c8:	push   edx
  4148c9:	adc    al,0xfe
  4148cb:	mov    ah,0x9c
  4148cd:	jmp    0x6c77dc53
  4148d2:	fcmove st,st(5)
  4148d4:	in     al,dx
  4148d5:	or     al,0x72
  4148d7:	outs   dx,DWORD PTR ds:[esi]
  4148d8:	xor    eax,0x77260444
  4148dd:	aad    0x11
  4148df:	es jmp 0xb8a5:0x1a76acdf
  4148e7:	loope  0x4148f4
  4148e9:	sub    al,0xc4
  4148eb:	jle    0x4148e9
  4148ed:	xchg   ebp,eax
  4148ee:	jns    0x41494e
  4148f0:	xor    al,BYTE PTR [edi+0x66]
  4148f3:	adc    ecx,ebp
  4148f5:	call   FWORD PTR [edx+0x23]
  4148f8:	popf   
  4148f9:	or     BYTE PTR [ecx+0x19],0x8d
  4148fd:	stos   BYTE PTR es:[edi],al
  4148fe:	mov    ebx,DWORD PTR [ebx]
  414900:	push   edi
  414901:	push   es
  414902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414903:	aas    
  414904:	xchg   ebx,eax
  414905:	pop    ebp
  414906:	xchg   ebp,eax
  414907:	sahf   
  414908:	or     ecx,DWORD PTR [eax-0x155ff53]
  41490e:	jno    0x414920
  414910:	lds    edx,FWORD PTR fs:0x6c9ccae3
  414917:	dec    edx
  414918:	push   edx
  414919:	xchg   esi,eax
  41491a:	mov    DWORD PTR [ebx+esi*8-0x6d7eba2a],esi
  414921:	sbb    al,0xee
  414923:	cmp    eax,0x83f9de15
  414928:	test   eax,0xe04423ed
  41492d:	push   esp
  41492e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41492f:	lods   al,BYTE PTR ds:[esi]
  414930:	fs push ebx
  414932:	cmp    al,al
  414934:	add    edx,DWORD PTR [ebx-0x386c64e7]
  41493a:	jne    0x4148d8
  41493c:	sbb    ch,ah
  41493e:	cwde   
  41493f:	test   DWORD PTR [eax],esi
  414941:	or     esp,ebx
  414943:	cs not DWORD PTR ds:[ebx]
  414947:	and    ecx,ecx
  414949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41494a:	fidivr DWORD PTR [edx]
  41494c:	loop   0x414986
  41494e:	inc    esi
  41494f:	xchg   eax,esp
  414951:	(bad)  
  414952:	sahf   
  414953:	jle    0x414904
  414955:	mov    edi,0x5b9fb61
  41495a:	mov    ds:0xce697bc9,al
  41495f:	ficom  DWORD PTR [edi+eax*2+0x3e]
  414963:	mov    ah,dl
  414965:	pusha  
  414966:	pop    edi
  414967:	and    al,0x51
  414969:	pop    ds
  41496a:	retf   
  41496b:	fsubr  QWORD PTR [edx]
  41496d:	sti    
  41496e:	mov    edx,0xdde3bc0f
  414973:	push   fs
  414975:	add    eax,0x22a46058
  41497a:	fcmove st,st(2)
  41497c:	push   ebx
  41497d:	sbb    ebx,DWORD PTR [eax]
  41497f:	mov    esi,0xc31798fd
  414984:	dec    edi
  414985:	cs inc ebp
  414987:	pop    DWORD PTR [edi]
  414989:	cmp    BYTE PTR [ecx+0x3e047233],bl
  41498f:	fcmovnb st,st(7)
  414991:	cmc    
  414992:	pop    ebx
  414993:	aas    
  414994:	sbb    ebp,DWORD PTR ds:[ecx]
  414997:	dec    eax
  414998:	adc    eax,esp
  41499a:	lock inc edi
  41499c:	mov    bl,0xb0
  41499e:	mov    eax,ds:0xdc9ab8ad
  4149a3:	fadd   QWORD PTR [eax+0x242ec829]
  4149a9:	call   0x1055:0xea207ab1
  4149b0:	sub    al,0x5c
  4149b2:	mov    bh,0x78
  4149b4:	std    
  4149b5:	sub    al,0x13
  4149b7:	and    ch,BYTE PTR [edx]
  4149b9:	mov    dl,0x90
  4149bb:	mov    WORD PTR ds:0x7e7a4c22,?
  4149c1:	cmc    
  4149c2:	xor    edi,DWORD PTR [ecx-0x52]
  4149c5:	push   ecx
  4149c6:	mov    al,0x1c
  4149c8:	sbb    ah,BYTE PTR [edx]
  4149ca:	iret   
  4149cb:	rcl    DWORD PTR [eax+0x633fd45],1
  4149d1:	mov    DWORD PTR ds:0xf92b8662,esp
  4149d7:	sbb    al,0xd3
  4149d9:	sub    edi,DWORD PTR [edi+ebx*4]
  4149dc:	xor    eax,0xc3584d49
  4149e1:	fcomp  QWORD PTR [ebp+edi*2-0x23]
  4149e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149e6:	add    edi,0x8902115b
  4149ec:	test   eax,0x86d1a784
  4149f1:	add    ebp,edx
  4149f3:	xchg   ecx,eax
  4149f4:	aad    0xcd
  4149f6:	and    dl,ch
  4149f8:	outs   dx,DWORD PTR ds:[esi]
  4149f9:	xchg   ebp,eax
  4149fa:	jg     0x414a68
  4149fc:	mov    ah,0x72
  4149fe:	xor    BYTE PTR [ecx+0x22],al
  414a01:	(bad)  
  414a02:	and    edi,ecx
  414a04:	repz sub DWORD PTR [edx],edx
  414a07:	das    
  414a08:	loop   0x414a0d
  414a0a:	mov    al,0x4d
  414a0c:	hlt    
  414a0d:	sar    BYTE PTR [eax+eax*4-0x2a4ef30f],1
  414a14:	popa   
  414a15:	in     al,0xfb
  414a17:	jge    0x414a83
  414a19:	dec    ecx
  414a1a:	cdq    
  414a1b:	jo     0x4149fa
  414a1d:	add    BYTE PTR [edi-0x73],0x22
  414a21:	data16 cmp BYTE PTR [ebp+ebx*1+0x53],0x5c
  414a27:	cwde   
  414a28:	pop    esi
  414a29:	mov    ebx,0x88fd128b
  414a2e:	les    edi,FWORD PTR [eax-0x14]
  414a31:	mov    ebx,DWORD PTR [eax-0x6592af20]
  414a37:	sub    al,0x6d
  414a39:	fisub  DWORD PTR [edx-0x6c]
  414a3c:	mov    WORD PTR [ebp+0x1315131b],fs
  414a42:	push   ebp
  414a43:	cli    
  414a44:	or     BYTE PTR [eax+0x56],bl
  414a47:	sti    
  414a48:	in     al,0xce
  414a4a:	fiadd  DWORD PTR [edi+eiz*8+0x7e]
  414a4e:	and    BYTE PTR [bx+si],0x33
  414a52:	mov    al,0xbe
  414a54:	std    
  414a55:	dec    ecx
  414a56:	push   esi
  414a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a58:	fucom  st(0)
  414a5a:	mov    edi,0x434f603f
  414a5f:	scas   eax,DWORD PTR es:[edi]
  414a60:	scas   al,BYTE PTR es:[edi]
  414a61:	mov    ecx,0x53c449d9
  414a66:	dec    ecx
  414a67:	sbb    eax,DWORD PTR [ecx]
  414a69:	sub    bl,BYTE PTR ds:0xeca0c0f3
  414a6f:	div    BYTE PTR [ecx-0x2d9c43a]
  414a75:	sub    eax,0x84ff1a91
  414a7a:	or     ecx,DWORD PTR [edi+edx*2-0x7eb32d4]
  414a81:	inc    ebx
  414a82:	jp     0x414ac7
  414a84:	xchg   edx,eax
  414a85:	aas    
  414a86:	and    DWORD PTR [ecx],edi
  414a88:	cdq    
  414a89:	test   al,0xa0
  414a8b:	cmc    
  414a8c:	nop
  414a8d:	mov    ds:0xff83d715,eax
  414a92:	push   ebp
  414a93:	ins    BYTE PTR es:[edi],dx
  414a94:	int3   
  414a95:	dec    esp
  414a96:	imul   ch
  414a98:	pushf  
  414a99:	jge    0x414b02
  414a9b:	ret    
  414a9c:	fs sub edx,ecx
  414a9f:	ins    BYTE PTR es:[edi],dx
  414aa0:	scas   eax,DWORD PTR es:[edi]
  414aa1:	cmp    edi,DWORD PTR [ebp-0xa9977fc]
  414aa7:	adc    BYTE PTR [ebx-0x1fb6936],dl
  414aad:	dec    ebx
  414aae:	sub    BYTE PTR [ebp-0x4c],dl
  414ab1:	cwde   
  414ab2:	ja     0x414a6a
  414ab4:	mov    edx,DWORD PTR [edi-0x4a]
  414ab7:	iret   
  414ab8:	dec    edx
  414ab9:	data16 mov ?,WORD PTR [esi]
  414abc:	mov    esi,0x274e7946
  414ac1:	and    ebp,0xc86d4572
  414ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac8:	test   eax,0xae165301
  414acd:	mov    ah,0xd9
  414acf:	dec    ebp
  414ad0:	rcr    DWORD PTR [edx+0x5e],1
  414ad3:	mov    al,ds:0x1c6ccff9
  414ad8:	jle    0x414b02
  414ada:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  414adc:	mov    bl,0x1f
  414ade:	dec    esi
  414adf:	dec    ecx
  414ae0:	cld    
  414ae1:	jns    0x414b30
  414ae3:	push   ebx
  414ae4:	aaa    
  414ae5:	test   eax,0x6433b0eb
  414aea:	rol    BYTE PTR [esi+ecx*1+0x3b03893b],1
  414af1:	rol    BYTE PTR [edx+0x4af8ffc7],1
  414af7:	mov    ds:0x43ec393b,eax
  414afc:	(bad)  
  414afd:	mov    edi,0x76c1a87d
  414b02:	fnstcw WORD PTR [edi-0x4]
  414b05:	jg     0x414b30
  414b07:	and    BYTE PTR [ebp+0x2d],cl
  414b0a:	fwait
  414b0b:	test   edi,ebx
  414b0d:	stos   DWORD PTR es:[edi],eax
  414b0e:	stos   BYTE PTR es:[edi],al
  414b0f:	adc    al,0x23
  414b11:	sbb    ecx,DWORD PTR [edx+0x53]
  414b14:	sub    al,0x8a
  414b16:	cld    
  414b17:	inc    eax
  414b18:	pop    ecx
  414b19:	mov    edi,0xf2b22701
  414b1e:	cmp    al,0xca
  414b20:	cmp    eax,DWORD PTR [ebp+0x5f]
  414b23:	fld    TBYTE PTR [esi+0x11]
  414b26:	xchg   ebp,eax
  414b27:	push   esp
  414b28:	sbb    dl,dh
  414b2a:	das    
  414b2b:	mov    ch,0x87
  414b2d:	adc    ebp,esi
  414b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b30:	xlat   BYTE PTR ds:[ebx]
  414b31:	and    bh,dh
  414b33:	int    0xdb
  414b35:	aas    
  414b36:	sub    al,0x1f
  414b38:	adc    bl,al
  414b3a:	gs push esi
  414b3c:	dec    edx
  414b3d:	(bad)  
  414b3e:	pop    esp
  414b3f:	xor    al,0x1f
  414b41:	inc    ebp
  414b42:	sub    edi,edi
  414b44:	cmp    al,0x7
  414b46:	les    eax,FWORD PTR cs:[esi]
  414b49:	ficomp WORD PTR [esi-0x5f558820]
  414b4f:	test   BYTE PTR [esi+eax*1],0x95
  414b53:	jg     0x414b6b
  414b55:	hlt    
  414b56:	pop    edi
  414b57:	adc    cl,BYTE PTR [ebx+0x5b]
  414b5a:	int3   
  414b5b:	and    DWORD PTR [bp-0x48],ebx
  414b5f:	push   ss
  414b60:	push   es
  414b61:	pop    es
  414b62:	(bad)  
  414b63:	daa    
  414b64:	addr16 inc ecx
  414b66:	sub    DWORD PTR [edi-0x37e4c1a6],ebp
  414b6c:	sar    dl,1
  414b6e:	inc    esi
  414b6f:	inc    eax
  414b70:	aas    
  414b71:	pop    eax
  414b72:	sub    DWORD PTR [ebx+0x48172a27],esi
  414b78:	lahf   
  414b79:	mov    ds:0xcac3dfdf,eax
  414b7e:	dec    esp
  414b7f:	mov    ah,BYTE PTR cs:0x2ae0b407
  414b86:	int3   
  414b87:	arpl   bp,si
  414b89:	loope  0x414ba9
  414b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b8c:	jae    0x414b9a
  414b8e:	jmp    FWORD PTR [edx+0x69af70d8]
  414b94:	mov    ch,0xc5
  414b96:	jle    0x414b40
  414b98:	jb     0x414bba
  414b9a:	cdq    
  414b9b:	push   0x1fce52dd
  414ba0:	enter  0xcc7b,0x89
  414ba4:	(bad)  
  414ba5:	mov    ebp,0xda9ef442
  414baa:	js     0x414b7b
  414bac:	inc    ebx
  414bad:	test   al,0x45
  414baf:	call   FWORD PTR [ecx-0x1017c2b4]
  414bb5:	leave  
  414bb6:	sbb    ebp,DWORD PTR [edi+0x36b5d207]
  414bbc:	inc    esp
  414bbd:	inc    esp
  414bbe:	or     DWORD PTR [edx-0x6729f10a],esi
  414bc4:	inc    edx
  414bc5:	xchg   ebx,eax
  414bc6:	xor    eax,eax
  414bc8:	pop    ebx
  414bc9:	(bad)  
  414bca:	mul    edx
  414bcc:	xchg   ebx,eax
  414bcd:	and    eax,0x74639ad0
  414bd2:	js     0x414be2
  414bd4:	dec    edx
  414bd5:	jle    0x414c3c
  414bd7:	cmp    al,0x62
  414bd9:	or     BYTE PTR [eax-0x744818ce],ch
  414bdf:	outs   dx,BYTE PTR ds:[esi]
  414be0:	sti    
  414be1:	push   ecx
  414be2:	mov    ds:0xf9831734,al
  414be7:	sbb    ch,BYTE PTR [eax]
  414be9:	das    
  414bea:	test   eax,0x6f405387
  414bef:	ficom  DWORD PTR [edx-0x61e200e5]
  414bf5:	leave  
  414bf6:	pop    edi
  414bf7:	fild   DWORD PTR [edx]
  414bf9:	ins    DWORD PTR es:[edi],dx
  414bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bfb:	inc    edx
  414bfc:	fistp  DWORD PTR [ebx-0x6aa082cb]
  414c02:	add    eax,0xe906aa1b
  414c07:	add    BYTE PTR [esi],0xa9
  414c0a:	cmp    BYTE PTR [edi+eax*4],bl
  414c0d:	pop    edx
  414c0e:	push   edi
  414c0f:	xchg   edx,eax
  414c10:	in     eax,dx
  414c11:	(bad)  
  414c12:	bound  esp,QWORD PTR [ebp-0x7c]
  414c15:	fs mov ecx,0x5791b457
  414c1b:	mov    edx,0x1678f117
  414c20:	push   eax
  414c21:	mov    ebx,0x8c9d4c16
  414c26:	xchg   ecx,eax
  414c27:	pushf  
  414c28:	dec    esi
  414c29:	cwde   
  414c2a:	sub    DWORD PTR [eax],eax
  414c2c:	ret    
  414c2d:	xchg   DWORD PTR [ecx],ebx
  414c2f:	cld    
  414c30:	loopne 0x414c13
  414c32:	aas    
  414c33:	es repnz xchg esi,eax
  414c36:	stos   BYTE PTR es:[edi],al
  414c37:	pushf  
  414c38:	popa   
  414c39:	cdq    
  414c3a:	cli    
  414c3b:	shl    bh,1
  414c3d:	popa   
  414c3e:	js     0x414c54
  414c40:	jecxz  0x414bf8
  414c42:	ss mov ah,0x53
  414c45:	adc    DWORD PTR [edx],ebx
  414c47:	gs mov ah,0x5d
  414c4a:	stc    
  414c4b:	mov    dl,0x2a
  414c4d:	inc    esi
  414c4e:	and    BYTE PTR [edx+0x3b],cl
  414c51:	mov    gs,WORD PTR [edi-0x65]
  414c54:	loope  0x414c11
  414c56:	sub    bl,ch
  414c58:	loopne 0x414cab
  414c5a:	mov    esi,DWORD PTR [edi+0x413242e5]
  414c60:	fisttp QWORD PTR [ecx+ebx*2+0x61]
  414c64:	cmp    eax,esp
  414c66:	repnz and eax,esp
  414c69:	push   cs
  414c6a:	je     0x414cba
  414c6c:	(bad)  
  414c6e:	push   edi
  414c6f:	dec    eax
  414c70:	mov    esp,DWORD PTR [eax+ebx*4-0x74b6e5a5]
  414c77:	rcl    DWORD PTR [eax*2+0x155e32b5],cl
  414c7e:	and    eax,0x163cce61
  414c83:	in     al,0xcf
  414c85:	push   ebx
  414c86:	jp     0x414cd3
  414c88:	into   
  414c89:	and    DWORD PTR [edx+0xe],0x8b4d212d
  414c90:	mov    ecx,esi
  414c92:	or     esp,esp
  414c94:	or     eax,0xe896329f
  414c99:	leave  
  414c9a:	repz ret 0x4ab3
  414c9e:	adc    BYTE PTR [esi-0x34],ah
  414ca1:	cmovs  ebp,DWORD PTR [edx]
  414ca4:	pop    eax
  414ca5:	je     0x414ca2
  414ca7:	add    eax,0x23c8b8d
  414cac:	cli    
  414cad:	jbe    0x414d2a
  414caf:	mov    ?,WORD PTR [ebx+ebx*8+0x78d7239f]
  414cb6:	mov    ?,WORD PTR [eax+0x27]
  414cb9:	loopne 0x414cde
  414cbb:	sub    ah,ah
  414cbd:	sbb    al,0x1
  414cbf:	jb     0x414d33
  414cc1:	adc    dh,BYTE PTR [ebx+ebp*2-0x47]
  414cc5:	push   cs
  414cc6:	xchg   esi,eax
  414cc7:	jp     0x414ca9
  414cc9:	nop
  414cca:	mov    al,0xaf
  414ccc:	sbb    al,0xed
  414cce:	fsub   DWORD PTR [ebx+0x2e]
  414cd1:	shl    BYTE PTR [edx+0x2056818e],1
  414cd7:	and    BYTE PTR [ecx-0x5e4f6828],cl
  414cdd:	test   BYTE PTR [ecx],dh
  414cdf:	inc    ebp
  414ce0:	inc    esi
  414ce1:	xlat   BYTE PTR ds:[ebx]
  414ce2:	adc    ah,BYTE PTR [esi]
  414ce4:	nop
  414ce5:	lods   eax,DWORD PTR ds:[esi]
  414ce6:	ds loope 0x414c86
  414ce9:	stc    
  414cea:	pop    eax
  414ceb:	add    DWORD PTR [eax+0x612a7fc3],esp
  414cf1:	mov    DWORD PTR [esi+esi*4+0x60043a58],edx
  414cf8:	mov    bh,0xce
  414cfa:	mov    edi,0xa5a0b7cb
  414cff:	(bad)  
  414d00:	sbb    eax,0x8f7da707
  414d05:	(bad)  
  414d07:	or     BYTE PTR [ecx+0x35],0xae
  414d0b:	adc    BYTE PTR ds:0x6bf3691f,cl
  414d11:	(bad)  
  414d12:	fdivr  QWORD PTR [ecx+0xcf021e8]
  414d18:	sbb    BYTE PTR [eax+0x2b],0xe4
  414d1c:	sbb    cl,ah
  414d1e:	cmpxchg BYTE PTR [edx],dh
  414d21:	or     al,dh
  414d23:	shr    BYTE PTR [edx-0x7d680524],0xad
  414d2a:	and    esp,DWORD PTR [edx-0x5]
  414d2d:	jg     0x414d7f
  414d2f:	pop    es
  414d30:	test   DWORD PTR [ecx],esp
  414d32:	mov    bl,0x84
  414d34:	(bad)  
  414d35:	fwait
  414d36:	pop    edx
  414d37:	and    dl,BYTE PTR [esi+edi*2+0x252713c8]
  414d3e:	mov    ebx,0xa9e1805f
  414d43:	loope  0x414db3
  414d45:	ret    0xb35d
  414d48:	out    0xb6,eax
  414d4a:	inc    edi
  414d4b:	stc    
  414d4c:	inc    edi
  414d4d:	loopne 0x414d2e
  414d4f:	inc    eax
  414d50:	stos   BYTE PTR es:[edi],al
  414d51:	jge    0x414d63
  414d53:	adc    al,0x4e
  414d55:	xlat   BYTE PTR ds:[ebx]
  414d56:	clc    
  414d57:	std    
  414d58:	arpl   WORD PTR [esi],bp
  414d5a:	hlt    
  414d5b:	lea    edi,[ecx+edi*2+0x19]
  414d5f:	xor    DWORD PTR [esi+edx*2-0x6942eafd],0x862b230a
  414d6a:	jge    0x414d8b
  414d6c:	es (bad) 
  414d6e:	sti    
  414d6f:	ins    BYTE PTR es:[edi],dx
  414d70:	ins    BYTE PTR es:[edi],dx
  414d71:	inc    DWORD PTR [ebp+0x8a4a876]
  414d77:	dec    esp
  414d78:	push   0x16
  414d7a:	daa    
  414d7b:	dec    eax
  414d7c:	xor    edx,ebp
  414d7e:	mov    dh,0x63
  414d80:	aas    
  414d81:	mov    cl,0x81
  414d83:	sub    eax,0xadb8813
  414d88:	push   ebp
  414d89:	int3   
  414d8a:	mov    bl,BYTE PTR [ecx-0x53f34aa6]
  414d90:	xor    al,0x3a
  414d92:	mov    ds:0xefcb198d,al
  414d97:	push   cs
  414d98:	xchg   edi,eax
  414d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d9a:	cmp    al,BYTE PTR ds:0xa508abcd
  414da0:	ret    0x20f4
  414da3:	or     DWORD PTR [esi+0x5f4d04f1],edi
  414da9:	dec    edx
  414daa:	mov    bl,0x90
  414dac:	scas   eax,DWORD PTR es:[edi]
  414dad:	xchg   DWORD PTR [ebp-0x20],ecx
  414db0:	xchg   edi,eax
  414db1:	(bad)
  414db4:	xchg   ebx,eax
  414db5:	push   0xffffffb6
  414db7:	push   ds
  414db8:	dec    ebx
  414db9:	rcl    BYTE PTR [ecx+0x34be5659],cl
  414dbf:	std    
  414dc0:	or     BYTE PTR [ecx+0x46e9904f],cl
  414dc6:	test   BYTE PTR [eax-0x9],0xce
  414dca:	pusha  
  414dcb:	lds    esi,FWORD PTR [edx]
  414dcd:	int3   
  414dce:	or     eax,0x9cab7bde
  414dd3:	popf   
  414dd4:	cmp    BYTE PTR [edx-0x4a4fc0d3],0x8f
  414ddb:	pop    esi
  414ddc:	jl     0x414dfa
  414dde:	inc    edi
  414ddf:	mov    ebx,0xf636c60f
  414de4:	and    eax,0x24e65799
  414de9:	mov    dl,0x57
  414deb:	popa   
  414dec:	and    BYTE PTR [esi+0x62],0x78
  414df0:	stc    
  414df1:	dec    ecx
  414df2:	jp     0x414dc9
  414df4:	cmp    BYTE PTR [ecx+0x5a],al
  414df7:	sub    BYTE PTR [ebx+edi*8+0x335d9387],ah
  414dfe:	test   DWORD PTR [edi],ecx
  414e00:	mov    ah,0xa2
  414e02:	push   0x4d
  414e04:	cmp    eax,0xbf1bd038
  414e09:	jb     0x414dad
  414e0b:	push   ss
  414e0c:	js     0x414e53
  414e0e:	leave  
  414e0f:	hlt    
  414e10:	sbb    eax,0xc500b34e
  414e15:	sub    edx,DWORD PTR [ecx+0x291d0957]
  414e1b:	mov    al,0x5c
  414e1d:	call   0x8192:0x953066c7
  414e24:	sahf   
  414e25:	rcr    BYTE PTR [ebx],cl
  414e27:	mov    dl,0x0
  414e29:	arpl   WORD PTR [eax],bx
  414e2b:	stc    
  414e2c:	je     0x414e84
  414e2e:	or     eax,0x4097e930
  414e33:	xlat   BYTE PTR ds:[ebx]
  414e34:	test   al,0xa6
  414e36:	mov    esi,0xcd564d59
  414e3b:	sub    DWORD PTR [ecx+0x4ad4a1bb],ebx
  414e41:	xor    ch,BYTE PTR [edx]
  414e43:	push   eax
  414e44:	jb     0x414e16
  414e46:	and    ebx,esi
  414e48:	ins    DWORD PTR es:[edi],dx
  414e49:	shl    DWORD PTR [edi+0x4880dd6c],1
  414e4f:	adc    dl,BYTE PTR [ebp+0xe]
  414e52:	lock int3 
  414e54:	test   DWORD PTR [edi],edi
  414e56:	dec    esp
  414e57:	bound  ecx,QWORD PTR cs:[eax-0x541bf5c9]
  414e5e:	inc    edx
  414e5f:	popa   
  414e60:	lahf   
  414e61:	stc    
  414e62:	push   esp
  414e63:	sub    edx,0xffffffc7
  414e66:	jg     0x414df7
  414e68:	jo     0x414df7
  414e6a:	cmp    al,0xee
  414e6c:	clc    
  414e6d:	jp     0x414e7d
  414e6f:	mov    dh,BYTE PTR [ebx+0x37]
  414e72:	imul   eax,ebx,0x72
  414e75:	sbb    ebp,DWORD PTR [esi+ebp*2-0x1c]
  414e79:	adc    BYTE PTR [ecx-0x62edea41],ah
  414e7f:	sbb    esi,ebp
  414e81:	sub    esp,DWORD PTR [eax-0x18ded630]
  414e87:	jle    0x414e1c
  414e89:	test   DWORD PTR ds:0x50fcc721,0x4d89a43f
  414e93:	jp     0x414edb
  414e95:	push   es
  414e96:	fs retf 
  414e98:	sti    
  414e99:	retf   
  414e9a:	mov    ds:0xf05292d3,eax
  414e9f:	push   ebp
  414ea0:	or     dh,cl
  414ea2:	add    DWORD PTR [ebx-0x29],ebx
  414ea5:	in     al,dx
  414ea6:	mov    esi,0xdfec88ce
  414eab:	shr    DWORD PTR [eax],1
  414ead:	mov    eax,0xe2bcd9e2
  414eb2:	xor    ebp,DWORD PTR [esi+0x17]
  414eb5:	adc    ebp,0xffffffd6
  414eb8:	data16 cli 
  414eba:	lds    eax,FWORD PTR [edi+0x14002409]
  414ec0:	sar    BYTE PTR [edx+0x5a],cl
  414ec3:	xchg   DWORD PTR [eax-0x515c9ec],esp
  414ec9:	add    DWORD PTR [esi],edx
  414ecb:	mov    esp,0xf61e6787
  414ed0:	repz fwait
  414ed2:	or     al,0xdb
  414ed4:	repnz cmc 
  414ed6:	adc    BYTE PTR [edx-0x3],ch
  414ed9:	(bad)  
  414eda:	add    esp,DWORD PTR [ecx]
  414edc:	inc    eax
  414edd:	cs js  0x414eb1
  414ee0:	inc    edx
  414ee1:	scas   eax,DWORD PTR es:[edi]
  414ee2:	mov    ds,WORD PTR [esi]
  414ee4:	cmp    al,0x85
  414ee6:	sbb    cl,BYTE PTR [esi]
  414ee8:	jl     0x414ec9
  414eea:	popa   
  414eeb:	xchg   edi,eax
  414eec:	pop    ecx
  414eed:	rcl    DWORD PTR [bp+si],0x92
  414ef1:	and    BYTE PTR [edi+0xe095406],dl
  414ef7:	adc    ebx,DWORD PTR [edi-0x444fa512]
  414efd:	mov    cl,0x14
  414eff:	fsubr  DWORD PTR [esi-0x5]
  414f02:	inc    eax
  414f03:	sar    ebx,0x9
  414f06:	ins    BYTE PTR es:[edi],dx
  414f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f08:	push   cs
  414f09:	adc    BYTE PTR [edx],ch
  414f0b:	test   al,0xb
  414f0d:	ins    DWORD PTR es:[edi],dx
  414f0e:	jmp    0x414f52
  414f10:	push   edi
  414f11:	xor    eax,0x92fa9edf
  414f16:	data16 jg 0x414eb6
  414f19:	popa   
  414f1a:	(bad)  
  414f1b:	ss add al,0x96
  414f1e:	mov    ch,BYTE PTR [ecx]
  414f20:	sbb    eax,0xaf2e3798
  414f25:	aam    0xba
  414f27:	mov    cl,0xf2
  414f29:	adc    esi,DWORD PTR [esi]
  414f2b:	fbstp  TBYTE PTR [ebx+0x733b8e61]
  414f31:	fist   WORD PTR ds:0x5539dcad
  414f37:	xlat   BYTE PTR ds:[ebx]
  414f38:	retf   
  414f39:	push   esi
  414f3a:	jne    0x14da8237
  414f40:	es std 
  414f42:	xchg   esi,eax
  414f43:	mov    esp,0x1bbc4e36
  414f48:	sub    edx,DWORD PTR [edi+0x69076913]
  414f4e:	sbb    eax,0x25294a91
  414f53:	pop    ebx
  414f54:	dec    edi
  414f55:	push   0xffffffef
  414f57:	ss dec esp
  414f59:	mov    ds:0xff8fafb3,eax
  414f5e:	mov    ds:0x8286104,eax
  414f63:	enter  0xb298,0x2b
  414f67:	mov    ch,0xe
  414f69:	sbb    DWORD PTR [ebp+edx*2-0x18],eax
  414f6d:	sub    al,0x12
  414f6f:	mov    ecx,DWORD PTR ds:0x5a2cbd63
  414f75:	shl    DWORD PTR [esi-0x36],cl
  414f78:	add    bl,ah
  414f7a:	rcl    DWORD PTR [edx-0x3a222fbe],1
  414f80:	push   cs
  414f81:	and    esi,DWORD PTR [esi+0x1b]
  414f84:	push   es
  414f85:	(bad)  
  414f86:	fadd   DWORD PTR [edx+0x73742a4f]
  414f8c:	out    0xb3,eax
  414f8e:	les    edi,FWORD PTR [ecx-0x18e7cbcf]
  414f94:	jb     0x414f50
  414f96:	arpl   WORD PTR [edx+0x47],si
  414f99:	add    ebp,ebx
  414f9b:	jp     0x414f6d
  414f9d:	cmp    cl,BYTE PTR [ebp-0x355707d1]
  414fa3:	icebp  
  414fa4:	mov    ecx,0xa0875a84
  414fa9:	xchg   BYTE PTR [esi-0x7f521029],cl
  414faf:	sahf   
  414fb0:	pop    ecx
  414fb1:	and    al,0x20
  414fb3:	mov    ebx,0x8ce9d0bc
  414fb8:	jmp    0xb3c0:0xc485a64a
  414fbf:	jge    0x414f95
  414fc1:	mov    ebx,0xe925b3f
  414fc6:	sbb    eax,DWORD PTR [edi+eax*4-0x7b]
  414fca:	cmp    eax,0xa961feb7
  414fcf:	sti    
  414fd0:	cmp    dl,BYTE PTR [eax]
  414fd2:	pop    ecx
  414fd3:	xchg   ecx,eax
  414fd4:	pop    esi
  414fd5:	aam    0xb7
  414fd7:	adc    dl,BYTE PTR [esi+0x5]
  414fda:	in     eax,dx
  414fdb:	jbe    0x414fa6
  414fdd:	shr    esi,1
  414fdf:	cmp    BYTE PTR [edx+0x41],0x30
  414fe3:	fistp  QWORD PTR [edx+0x74398951]
  414fe9:	sub    BYTE PTR [esp+ebx*1+0x7c],0x4c
  414fee:	push   ebx
  414fef:	ss sub al,0xcb
  414ff2:	push   0x722bcae8
  414ff7:	lods   eax,DWORD PTR ds:[esi]
  414ff8:	test   DWORD PTR [eax-0x51],edx
  414ffb:	pop    ebp
  414ffc:	inc    eax
  414ffd:	loope  0x415075
  414fff:	add    al,0x5d
  415001:	popa   
  415002:	jge    0x414ff4
  415004:	mov    cl,0x3c
  415006:	test   BYTE PTR [ebp+0x76],0x2b
  41500a:	fwait
  41500b:	inc    esi
  41500c:	int3   
  41500d:	adc    esi,DWORD PTR [edi+ebp*2+0x61]
  415011:	mov    edi,0x635549f9
  415016:	enter  0x6814,0x79
  41501a:	imul   ecx,DWORD PTR cs:[edx],0x2a
  41501e:	jl     0x415066
  415020:	inc    ecx
  415021:	pop    edx
  415022:	ret    
  415023:	std    
  415024:	sbb    al,0xe7
  415026:	bnd ret 
  415028:	dec    esp
  415029:	pop    ecx
  41502a:	mov    dh,0x47
  41502c:	mov    bl,0x26
  41502e:	out    0xec,al
  415030:	call   0xf96cb525
  415035:	ror    edx,0x8
  415038:	test   BYTE PTR [edx+0x7d424061],0xa9
  41503f:	push   edi
  415040:	mov    edx,0xfd050a7e
  415045:	jl     0x41505b
  415047:	clc    
  415048:	stc    
  415049:	mov    edi,0xd9b5c92a
  41504e:	add    BYTE PTR ds:0x5bcf7f8d,dh
  415054:	test   BYTE PTR [esi+0x7899b10f],cl
  41505a:	nop
  41505b:	nop
  41505c:	and    dl,BYTE PTR [esi-0x69]
  41505f:	mov    dh,0xa0
  415061:	out    0x64,eax
  415063:	out    0xff,al
  415065:	mov    al,0xa1
  415067:	sbb    DWORD PTR [edx-0x2b],eax
  41506a:	dec    eax
  41506b:	iret   
  41506c:	xor    BYTE PTR [ebx-0x17],ch
  41506f:	vdivss xmm1,xmm7,DWORD PTR [eax]
  415073:	cld    
  415074:	psubusb mm2,QWORD PTR [esi]
  415077:	cmp    al,0x49
  415079:	inc    eax
  41507a:	ss out dx,eax
  41507c:	pop    es
  41507d:	dec    edi
  41507e:	sub    edi,DWORD PTR [edx]
  415080:	or     DWORD PTR [eax-0x4b8950f7],eax
  415086:	mov    cl,0xec
  415088:	mov    ch,0x66
  41508a:	rcr    bh,cl
  41508c:	mov    bh,0xe9
  41508e:	pop    ss
  41508f:	mov    ecx,0x16377d1a
  415094:	adc    ecx,edx
  415096:	xor    al,0x85
  415098:	dec    edx
  415099:	or     eax,0x42206ffb
  41509e:	out    dx,al
  41509f:	shl    BYTE PTR [ebp+0x74],0x83
  4150a3:	xchg   DWORD PTR [ebp+0x52d17e24],esi
  4150a9:	or     DWORD PTR [edx+eiz*1+0x24eba9b9],ebp
  4150b0:	ins    BYTE PTR es:[edi],dx
  4150b1:	cmp    al,0xf0
  4150b3:	mov    ch,0xd3
  4150b5:	int    0xad
  4150b7:	sub    BYTE PTR [edx-0x457afd8f],dl
  4150bd:	push   0xf8cf3e7c
  4150c2:	out    0x64,al
  4150c4:	(bad)  
  4150c5:	xchg   ecx,eax
  4150c6:	dec    esi
  4150c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150c8:	push   edi
  4150c9:	mov    dl,0x6d
  4150cb:	lahf   
  4150cc:	and    edx,eax
  4150ce:	xor    cl,al
  4150d0:	data16 aam 0xa9
  4150d3:	in     al,dx
  4150d4:	dec    edi
  4150d5:	xchg   ecx,eax
  4150d6:	stos   DWORD PTR es:[edi],eax
  4150d7:	mov    ebx,0xaac0e7e6
  4150dc:	pop    ecx
  4150dd:	lods   al,BYTE PTR ds:[esi]
  4150de:	dec    ebp
  4150df:	mov    ebp,cr6
  4150e2:	ret    
  4150e3:	xor    eax,0xe8930de0
  4150e8:	clc    
  4150e9:	dec    ebx
  4150ea:	push   cs
  4150eb:	loope  0x41510e
  4150ed:	sub    DWORD PTR [ebx+0x6],eax
  4150f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150f1:	pop    ebp
  4150f2:	pop    esi
  4150f3:	mov    ah,0xaa
  4150f5:	jge    0x41510c
  4150f7:	stos   BYTE PTR es:[edi],al
  4150f8:	rcr    BYTE PTR [esi],cl
  4150fa:	or     edi,edi
  4150fc:	push   edi
  4150fd:	mov    eax,ds:0x87ef5d03
  415102:	and    BYTE PTR [ebp+0x79],dl
  415105:	xor    DWORD PTR [ebx],0x27
  415108:	ss pop edx
  41510a:	push   ecx
  41510b:	adc    al,0x49
  41510d:	sub    bl,ah
  41510f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415110:	les    edi,FWORD PTR [edi-0x3ea9506d]
  415116:	std    
  415117:	jns    0x4150c9
  415119:	xor    BYTE PTR [edx-0x5c5158e8],dh
  41511f:	into   
  415120:	xor    al,0xa1
  415122:	lods   eax,DWORD PTR gs:[esi]
  415124:	sub    eax,esp
  415126:	mov    ds:0x4a928582,al
  41512b:	mov    ebx,0xf0155d04
  415130:	mov    ds,WORD PTR [ebx+0x6c3e0b02]
  415136:	xchg   esi,eax
  415137:	div    bl
  415139:	lds    esp,FWORD PTR [edi-0x7019d76a]
  41513f:	sbb    bh,0xb
  415142:	sub    ebp,DWORD PTR ds:0x823904f1
  415148:	cmp    eax,0x1359a0df
  41514d:	inc    ecx
  41514e:	mov    WORD PTR [ecx],ds
  415150:	(bad)  
  415151:	cli    
  415152:	stc    
  415153:	xchg   BYTE PTR [eax+0x33],bl
  415156:	xchg   ebp,eax
  415157:	mov    esp,0xe2a0c5af
  41515c:	js     0x415181
  41515e:	in     eax,0xda
  415160:	sub    esp,DWORD PTR [edi-0x7da608c0]
  415166:	cdq    
  415167:	mov    ah,0x2b
  415169:	cld    
  41516a:	xchg   ebx,eax
  41516b:	rcr    DWORD PTR [ecx+0x441b4bc4],1
  415171:	into   
  415172:	sub    al,0xcc
  415174:	xchg   ebp,eax
  415175:	hlt    
  415176:	out    dx,eax
  415177:	sti    
  415178:	ins    BYTE PTR es:[edi],dx
  415179:	add    BYTE PTR [esi],bh
  41517b:	retf   
  41517c:	ror    BYTE PTR ds:0x3070f6f2,0x22
  415183:	cmp    DWORD PTR [ecx],esi
  415185:	mov    edx,0x6dcfb834
  41518a:	mov    edx,cr0
  41518d:	(bad)  
  41518e:	mov    BYTE PTR [esi],ch
  415190:	pop    ebp
  415191:	push   ebx
  415192:	add    eax,0x872b852c
  415197:	sub    al,0x65
  415199:	sub    bl,BYTE PTR [esi+0x556d29a3]
  41519f:	sbb    al,dh
  4151a1:	aas    
  4151a2:	xor    ecx,DWORD PTR [edx+0x8]
  4151a5:	pop    eax
  4151a6:	and    DWORD PTR [eax+0x6e],esi
  4151a9:	jns    0x4151c3
  4151ab:	fs inc ecx
  4151ad:	retf   0x2b6b
  4151b0:	sub    DWORD PTR [eax-0x6ad14c6a],edx
  4151b6:	lods   eax,DWORD PTR ds:[esi]
  4151b7:	dec    ebx
  4151b8:	jmp    0x41515c
  4151ba:	jg     0x41513e
  4151bc:	jmp    0x27b88641
  4151c1:	bound  esp,QWORD PTR [eax]
  4151c3:	jae    0x4151d8
  4151c5:	and    eax,0x2e73093c
  4151ca:	packssdw mm5,QWORD PTR [esi+0x6f040ced]
  4151d1:	std    
  4151d2:	xchg   ecx,eax
  4151d3:	cmp    eax,0x1b287be5
  4151d8:	cs push cs
  4151da:	inc    esi
  4151db:	and    DWORD PTR [edi-0x7d6b3d94],esp
  4151e1:	out    dx,eax
  4151e2:	dec    edx
  4151e3:	mov    cl,0x1a
  4151e5:	fsubr  QWORD PTR [ebp+0x28501c2d]
  4151eb:	dec    ebx
  4151ec:	loopne 0x415256
  4151ee:	int3   
  4151ef:	loop   0x415177
  4151f1:	cmp    BYTE PTR [ecx+0x77d6b346],ah
  4151f7:	xor    bl,BYTE PTR [edi]
  4151f9:	bound  edi,QWORD PTR [edi]
  4151fb:	xchg   ecx,eax
  4151fc:	mov    esi,0x4b559be1
  415201:	push   eax
  415202:	jne    0x41519d
  415204:	jp     0x415221
  415206:	dec    ebp
  415207:	jnp    0x41520e
  415209:	inc    esi
  41520a:	pop    ebx
  41520b:	cmp    ebp,edi
  41520d:	dec    esi
  41520e:	mov    bl,0x7d
  415210:	dec    edi
  415211:	and    bh,BYTE PTR [ebx-0x693b9492]
  415217:	adc    DWORD PTR [ebp-0x80],0x46
  41521b:	xchg   edx,eax
  41521c:	push   edx
  41521d:	aad    0xf3
  41521f:	mov    ebx,0xfafa064c
  415224:	loopne 0x415221
  415226:	pop    es
  415227:	xchg   DWORD PTR [ecx+edi*1-0x71],esi
  41522b:	inc    eax
  41522c:	imul   ebx,DWORD PTR [ecx],0xffffffcf
  41522f:	sbb    eax,0x3c0b2f1f
  415234:	int    0x3f
  415236:	cld    
  415237:	enter  0x2bc0,0x18
  41523b:	mov    ecx,0x7a417a79
  415240:	fldl2t 
  415242:	jle    0x4152a8
  415244:	mov    ah,0xa5
  415246:	add    edx,ecx
  415248:	loop   0x4151d8
  41524a:	mov    ds:0x50639a49,al
  41524f:	or     edi,edi
  415251:	mov    esp,0x151e532a
  415256:	fucomip st,st(0)
  415258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415259:	add    al,0xbd
  41525b:	mov    ds:0xfd830486,al
  415260:	adc    ebp,ebp
  415262:	(bad)  
  415264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415265:	lods   eax,DWORD PTR ds:[esi]
  415266:	push   ds
  415267:	mov    WORD PTR ds:0xa7d39e6d,ss
  41526d:	push   edi
  41526e:	xchg   BYTE PTR [edi+0x24b4dab2],al
  415274:	test   al,0x4d
  415276:	(bad)  
  415277:	aam    0xb9
  415279:	and    al,0x36
  41527b:	sar    DWORD PTR [edx-0x7d],1
  41527e:	mov    edx,0xb2ad4efe
  415283:	in     eax,dx
  415284:	(bad)  
  415285:	add    al,0xd6
  415287:	xor    dl,BYTE PTR [eax]
  415289:	scas   eax,DWORD PTR es:[edi]
  41528a:	adc    esi,esp
  41528c:	dec    ebx
  41528d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41528e:	test   DWORD PTR [ecx+0x6fce86e9],0x4ae0253c
  415298:	in     eax,0xe
  41529a:	aam    0x26
  41529c:	mov    ds:0xecc454b8,eax
  4152a1:	and    edi,esp
  4152a3:	cmp    eax,0x62aa76c1
  4152a8:	mov    ch,0x4a
  4152aa:	xchg   DWORD PTR [edx+0x5e7da145],ebx
  4152b0:	jg     0x415307
  4152b2:	repz jl 0x415266
  4152b5:	add    edi,DWORD PTR ds:0xb09381b4
  4152bb:	dec    esi
  4152bc:	outs   dx,BYTE PTR ds:[esi]
  4152bd:	sub    bh,BYTE PTR [ebp+0x43459677]
  4152c3:	mov    edi,0x65cd1ec6
  4152c8:	inc    esp
  4152c9:	cmovb  esi,DWORD PTR [ebx+0x64]
  4152cd:	cmp    al,0xcd
  4152cf:	pop    ecx
  4152d0:	or     DWORD PTR [ecx+0x63efdce5],0xd4461e11
  4152da:	inc    ebx
  4152db:	and    ah,0x3
  4152de:	iret   
  4152df:	sahf   
  4152e0:	mov    ch,0x6c
  4152e2:	mov    dh,0xe1
  4152e4:	push   ebx
  4152e5:	mov    eax,0x9f3420e1
  4152ea:	imul   esp,esi,0xffffffb7
  4152ed:	imul   eax,DWORD PTR [esi-0xc91b0da],0x1dca1754
  4152f7:	sub    dh,BYTE PTR [edx+0x14]
  4152fa:	sub    eax,0xf366f8a5
  4152ff:	sub    BYTE PTR [ebx],bl
  415301:	adc    dh,bl
  415303:	(bad)  
  415304:	cwde   
  415305:	or     eax,0x8c269f5f
  41530a:	bound  edx,QWORD PTR [ebx-0xf3a3207]
  415310:	ret    
  415311:	int3   
  415312:	cli    
  415313:	dec    eax
  415314:	push   0x46
  415316:	push   ss
  415317:	or     ah,cl
  415319:	push   0xffffffba
  41531b:	lods   al,BYTE PTR ds:[esi]
  41531c:	(bad)  
  41531d:	cmc    
  41531e:	push   ss
  41531f:	popa   
  415320:	xor    BYTE PTR [ebp+0x6714b907],0xcb
  415327:	pop    edi
  415328:	mov    ds:0x9b21b203,eax
  41532d:	jo     0x41535e
  41532f:	stos   DWORD PTR es:[edi],eax
  415330:	xor    edi,DWORD PTR [edx+ecx*8-0x44]
  415334:	mov    al,bl
  415336:	cmp    DWORD PTR [edi+0x39],0xd0a7fa3e
  41533d:	enter  0xcbe5,0xb7
  415341:	or     al,0x5
  415343:	sub    cl,BYTE PTR [ebp+0x45]
  415346:	test   DWORD PTR [ebx+0x5c8af2a0],0x4671e764
  415350:	bound  ecx,QWORD PTR [ebp-0x145670ab]
  415356:	popa   
  415357:	dec    edx
  415358:	leave  
  415359:	adc    BYTE PTR gs:[ecx-0x11012c99],al
  415360:	mov    esp,DWORD PTR ss:[edx+0x3f]
  415364:	fadd   QWORD PTR [edi+0x4640660f]
  41536a:	sbb    eax,0x12c84fff
  41536f:	cmp    eax,0x3fef73d9
  415374:	pop    edx
  415375:	sbb    DWORD PTR [edi],edi
  415377:	xchg   ebp,eax
  415378:	mov    bl,bh
  41537a:	add    eax,0xfdbed64e
  41537f:	int3   
  415380:	push   edi
  415381:	xlat   BYTE PTR ds:[ebx]
  415382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415383:	push   edx
  415384:	bnd jmp 0x415341
  415387:	rcr    DWORD PTR [eax-0x569748d0],cl
  41538d:	jecxz  0x4153e0
  41538f:	pop    edx
  415390:	or     DWORD PTR [esi+0x45],ebx
  415393:	push   esi
  415394:	or     esp,ebx
  415396:	mov    al,ds:0xc7535c57
  41539b:	shl    DWORD PTR [ebx+0x45079578],1
  4153a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153a2:	sub    al,0xf6
  4153a4:	xchg   esi,eax
  4153a5:	aas    
  4153a6:	xchg   edx,eax
  4153a7:	add    al,0x4a
  4153a9:	lods   eax,DWORD PTR ds:[esi]
  4153aa:	inc    ebx
  4153ab:	dec    ebp
  4153ac:	mov    esp,DWORD PTR [ebx-0x440ffa04]
  4153b2:	les    edi,FWORD PTR [edx]
  4153b4:	lods   al,BYTE PTR fs:[esi]
  4153b6:	fidiv  DWORD PTR [ecx-0x3af9ea89]
  4153bc:	lea    ebx,[ebx-0x3c313de9]
  4153c2:	idiv   BYTE PTR [ebp-0x7c]
  4153c5:	mov    ah,0xa9
  4153c7:	js     0x4153d6
  4153c9:	mov    ah,0x1d
  4153cb:	outs   dx,DWORD PTR ds:[esi]
  4153cc:	push   eax
  4153cd:	adc    eax,0x5894c13c
  4153d2:	mov    ebx,DWORD PTR [eax]
  4153d4:	cs xchg ebx,eax
  4153d6:	loope  0x415399
  4153d8:	aas    
  4153d9:	push   cs
  4153da:	lds    ebp,FWORD PTR [edx+ebx*1-0xc957215]
  4153e1:	xor    ebx,ecx
  4153e3:	xchg   edi,eax
  4153e4:	popa   
  4153e5:	add    al,0x10
  4153e7:	mov    bh,0xcd
  4153ea:	jmp    0x41538e
  4153ec:	shr    DWORD PTR [esi+0x3e],cl
  4153ef:	leave  
  4153f0:	pop    ebx
  4153f1:	mov    bh,0xd3
  4153f3:	test   BYTE PTR [edi-0x72],cl
  4153f6:	sbb    dl,BYTE PTR [edi-0x698d28aa]
  4153fc:	push   es
  4153fd:	mul    DWORD PTR [edx-0x12774dc4]
  415403:	fild   DWORD PTR [eax+0x40]
  415406:	mov    BYTE PTR [edi],ch
  415408:	xchg   ecx,eax
  415409:	inc    ebx
  41540a:	inc    edi
  41540b:	mov    dh,0x9
  41540d:	or     DWORD PTR [ebp-0x77],ebx
  415410:	xchg   ecx,eax
  415411:	cdq    
  415412:	cmp    bh,dl
  415414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415415:	mov    al,BYTE PTR [eax-0x39]
  415418:	data16 cs sub al,0xb3
  41541c:	popa   
  41541d:	pop    eax
  41541e:	fs ret 0x1a5d
  415422:	js     0x4153e2
  415424:	lock xchg ebp,eax
  415426:	and    eax,esp
  415428:	adc    BYTE PTR [ecx-0x40b0b7d9],ah
  41542e:	sub    esi,DWORD PTR [esp+ebp*8-0x402d19fe]
  415435:	or     ebp,DWORD PTR [ecx+0xa]
  415438:	mov    al,0x43
  41543a:	mov    dl,cl
  41543c:	mov    ah,0xee
  41543e:	das    
  41543f:	shl    DWORD PTR [esi-0x4b6a9d25],1
  415445:	sub    DWORD PTR [eax],edi
  415447:	(bad)  
  415448:	fsubr  QWORD PTR [ebp-0x3e]
  41544b:	sbb    al,BYTE PTR [edx+0x43]
  41544e:	sub    eax,0x3fed42d2
  415453:	jae    0x41543d
  415455:	in     al,0x54
  415457:	mov    ecx,0xdc486d28
  41545c:	mov    ch,0x99
  41545e:	scas   al,BYTE PTR es:[edi]
  41545f:	xchg   esp,eax
  415460:	push   esp
  415461:	pop    eax
  415462:	arpl   WORD PTR [ebx-0x2adff5a1],ax
  415468:	and    ebp,DWORD PTR [esi+0x78]
  41546b:	add    BYTE PTR [edx],dl
  41546d:	or     al,0x1a
  41546f:	xlat   BYTE PTR ds:[ebx]
  415470:	xor    dl,BYTE PTR [edx-0x4a]
  415473:	xor    al,0xeb
  415475:	dec    eax
  415476:	and    esi,DWORD PTR [edx+0x2a]
  415479:	mov    eax,0xe969871a
  41547e:	sahf   
  41547f:	jae    0x4154ba
  415481:	or     BYTE PTR [esi+0x20],ch
  415484:	sub    DWORD PTR [edi-0x34d1ed9e],ebx
  41548a:	add    ch,bl
  41548c:	xchg   edx,eax
  41548d:	dec    eax
  41548e:	inc    edx
  41548f:	xor    bl,BYTE PTR [edi]
  415491:	or     BYTE PTR [ebp+0x7e958e77],dh
  415497:	pushf  
  415498:	fs clc 
  41549a:	rcr    DWORD PTR [esi],0x7f
  41549d:	sbb    eax,0x31911740
  4154a2:	jmp    0x415465
  4154a4:	hlt    
  4154a5:	pop    ebp
  4154a6:	push   es
  4154a7:	mov    ch,0xe5
  4154a9:	pop    ebx
  4154aa:	xor    eax,DWORD PTR [eax+esi*1+0x61f19d17]
  4154b1:	fisub  DWORD PTR [ecx+0x2875e26f]
  4154b7:	mov    BYTE PTR [eax+0x172d3697],dl
  4154bd:	xlat   BYTE PTR ds:[ebx]
  4154be:	je     0x4154e3
  4154c0:	pop    ds
  4154c1:	mov    edx,0x9b06c220
  4154c6:	popf   
  4154c7:	push   ebx
  4154c8:	jnp    0x41544d
  4154ca:	xchg   DWORD PTR [edx],esi
  4154cc:	cmp    al,0x52
  4154ce:	sbb    al,0xe1
  4154d0:	add    ah,BYTE PTR [ebx+ebx*8-0x1a]
  4154d4:	je     0x4154c8
  4154d6:	jge    0x415503
  4154d8:	mov    bh,0x8c
  4154da:	pop    ebp
  4154db:	les    eax,FWORD PTR [edi-0x14]
  4154de:	xor    al,0xab
  4154e0:	lock ss neg dh
  4154e4:	call   0x55b9:0x2b20de8b
  4154eb:	iret   
  4154ec:	pop    es
  4154ed:	push   esi
  4154ee:	pusha  
  4154ef:	add    eax,0x7c9358f3
  4154f4:	jae    0x415490
  4154f6:	push   0xffffffd9
  4154f8:	ret    
  4154f9:	sub    ch,ch
  4154fb:	imul   BYTE PTR [edx+0x31]
  4154fe:	mov    dl,0x6b
  415500:	std    
  415501:	jmp    0xa0771563
  415506:	(bad)  
  415507:	sub    al,0x5
  415509:	xor    BYTE PTR [ebp+0x59f74f66],dh
  41550f:	xchg   ebx,eax
  415510:	adc    ah,BYTE PTR [ebp+ecx*2+0x217bc965]
  415517:	mov    ebx,0x3d2edc92
  41551c:	or     BYTE PTR [esi+esi*4],ch
  41551f:	les    eax,FWORD PTR [ebx-0x73]
  415522:	mov    ch,0x78
  415524:	sub    eax,0x5d685ba8
  415529:	addr16 leave 
  41552b:	jae    0x4154e4
  41552d:	call   0x109f:0xf0b2ac61
  415534:	xchg   ah,cl
  415536:	or     al,BYTE PTR [ecx-0x31]
  415539:	ja     0x415522
  41553b:	retf   
  41553c:	scas   al,BYTE PTR es:[edi]
  41553d:	dec    edi
  41553e:	jle    0x4155b8
  415540:	iret   
  415541:	push   edi
  415542:	bound  edx,QWORD PTR [esi]
  415544:	cmp    BYTE PTR [ebp-0x2a],0xae
  415548:	dec    esi
  415549:	sbb    eax,0x96de0aa
  41554e:	and    bh,BYTE PTR [ebp+0x65]
  415551:	sub    al,0xdb
  415553:	and    DWORD PTR [esi-0x3b],ebp
  415556:	jnp    0x41557d
  415558:	push   ds
  415559:	xor    ah,bh
  41555b:	push   edx
  41555c:	inc    esp
  41555d:	ja     0x4154e0
  41555f:	pop    esp
  415560:	inc    esp
  415561:	jle    0x4155b9
  415563:	mov    dl,0xf2
  415565:	aaa    
  415566:	inc    edx
  415567:	push   ebp
  415568:	pushf  
  415569:	rcr    DWORD PTR [edi-0x6897e3de],cl
  41556f:	add    ebx,DWORD PTR [ecx]
  415571:	sbb    eax,0x7b746f14
  415576:	and    BYTE PTR [edi],cl
  415578:	sub    eax,0x5bdef7ea
  41557d:	js     0x4155da
  41557f:	add    al,0x51
  415581:	push   ds
  415582:	mov    esi,0x89c6d67f
  415587:	pop    edi
  415588:	xchg   edi,eax
  415589:	(bad)  
  41558a:	in     al,dx
  41558b:	mov    BYTE PTR [eax],dl
  41558d:	mov    ecx,0xc6fa2d19
  415592:	in     eax,0x75
  415594:	sub    edi,DWORD PTR [ecx]
  415596:	add    BYTE PTR [ecx],al
  415598:	sub    cl,BYTE PTR [esi+edx*1]
  41559b:	sbb    eax,0x1acc8c04
  4155a0:	out    dx,eax
  4155a1:	fmul   st,st(5)
  4155a3:	xchg   esi,ebp
  4155a5:	jmp    0x499eafe7
  4155aa:	inc    edx
  4155ab:	mov    esp,esi
  4155ad:	sahf   
  4155ae:	mov    DWORD PTR [edi],ebx
  4155b0:	shl    DWORD PTR [ebx],1
  4155b2:	bnd jmp 0x415549
  4155b5:	xchg   ebp,eax
  4155b6:	sbb    BYTE PTR [edx+0x1ff36350],0x6e
  4155bd:	mov    dl,ch
  4155bf:	push   cs
  4155c0:	mov    DWORD PTR [ebx],edx
  4155c2:	xchg   edx,eax
  4155c3:	shl    eax,1
  4155c5:	dec    esp
  4155c6:	les    eax,FWORD PTR [eax]
  4155c8:	adc    dl,BYTE PTR [ebp+0x35]
  4155cb:	sti    
  4155cc:	data16 shr BYTE PTR [edx+ecx*2],0x7a
  4155d1:	icebp  
  4155d2:	cdq    
  4155d3:	rcr    DWORD PTR [edi+0x1dd835a1],0xf5
  4155da:	ds inc edi
  4155dc:	pop    edi
  4155dd:	loop   0x41557c
  4155df:	addr16 and esp,esi
  4155e2:	(bad)  
  4155e3:	sti    
  4155e4:	dec    eax
  4155e5:	call   0xb20c:0xb291ac9d
  4155ec:	fsubr  DWORD PTR [ebx+0x78]
  4155ef:	ds ss mov ax,0x5aa1
  4155f5:	add    DWORD PTR [ecx-0x58cf4ce4],edx
  4155fb:	inc    ebp
  4155fc:	adc    edx,DWORD PTR [esi+0x28d64898]
  415602:	and    DWORD PTR [edx],0xb283290f
  415608:	in     eax,dx
  415609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41560a:	add    eax,0xcda3b995
  41560f:	or     eax,0x8912bff3
  415614:	push   0x15
  415616:	call   0xd307dd27
  41561b:	ins    DWORD PTR es:[edi],dx
  41561c:	mov    ch,0x1e
  41561e:	das    
  41561f:	push   cs
  415620:	dec    esi
  415621:	cmp    DWORD PTR ds:0x85fa5a42,esi
  415627:	xchg   ebx,eax
  415628:	cmp    al,0xbc
  41562a:	sub    dh,BYTE PTR [ecx+0x2d8336d2]
  415630:	cmp    ebx,ebx
  415632:	or     dl,0xa
  415635:	cmp    dh,BYTE PTR [edx+0x97a21d6]
  41563b:	stc    
  41563c:	(bad)  
  41563d:	adc    esp,ebp
  41563f:	mov    WORD PTR [eax-0x79],ds
  415642:	outs   dx,BYTE PTR ds:[esi]
  415643:	push   esp
  415644:	sub    eax,DWORD PTR [eax-0x41b3c69f]
  41564a:	aaa    
  41564b:	mov    es,WORD PTR [esi-0x6e54f39b]
  415651:	lods   eax,DWORD PTR ds:[esi]
  415652:	ja     0x415627
  415654:	dec    ecx
  415655:	sar    BYTE PTR [ebx-0x2e],0x45
  415659:	pop    ecx
  41565a:	jns    0x4156cb
  41565c:	jmp    0xf8f91410
  415661:	lahf   
  415662:	adc    eax,0xabbc1e89
  415667:	add    eax,0xc4964934
  41566c:	xchg   BYTE PTR [edi+0x7e],ch
  41566f:	loopne 0x41568c
  415671:	add    BYTE PTR [ecx+0x39],bh
  415674:	push   ecx
  415675:	fidivr DWORD PTR [esi]
  415677:	stos   DWORD PTR es:[di],eax
  415679:	inc    esp
  41567a:	jnp    0x4156f3
  41567c:	sub    dh,dh
  41567e:	push   edx
  41567f:	inc    BYTE PTR [ebx]
  415681:	mov    cs,WORD PTR [ebp-0x49]
  415684:	add    edi,DWORD PTR [edx-0x2b]
  415687:	xchg   ebx,eax
  415688:	cdq    
  415689:	inc    esi
  41568a:	sar    BYTE PTR [ebp+0x35],cl
  41568d:	cs pop ebx
  41568f:	or     DWORD PTR [esi-0x56],0xe9025fb3
  415696:	call   0xef8a:0x83f1b7ed
  41569d:	adc    al,0x51
  41569f:	pop    ebx
  4156a0:	pop    ss
  4156a1:	fsubp  st(2),st
  4156a3:	lds    esp,FWORD PTR [ebp+0x7a]
  4156a6:	jae    0x4156e5
  4156a8:	inc    edx
  4156a9:	dec    esi
  4156aa:	scas   al,BYTE PTR es:[edi]
  4156ab:	pop    ss
  4156ac:	loop   0x41570e
  4156ae:	in     eax,0x59
  4156b0:	adc    esp,eax
  4156b2:	cld    
  4156b3:	out    dx,al
  4156b4:	push   0x43
  4156b6:	pop    esp
  4156b7:	dec    ebp
  4156b8:	repz in al,dx
  4156ba:	add    BYTE PTR [ebx-0x7e],bl
  4156bd:	scas   al,BYTE PTR es:[edi]
  4156be:	iret   
  4156bf:	stos   BYTE PTR es:[edi],al
  4156c0:	sti    
  4156c1:	cmp    ah,dh
  4156c3:	jge    0x4156ec
  4156c5:	xchg   ebp,eax
  4156c6:	push   eax
  4156c7:	jp     0x415733
  4156c9:	jge    0x4156f3
  4156cb:	cmp    edi,DWORD PTR cs:[edi+edx*2+0x67]
  4156d0:	jnp    0x4156ff
  4156d2:	pusha  
  4156d3:	mov    edx,0x839679e5
  4156d8:	xchg   esi,eax
  4156d9:	pop    ss
  4156da:	pop    ecx
  4156db:	and    al,0x7c
  4156dd:	scas   al,BYTE PTR es:[edi]
  4156de:	test   eax,0x9d9db508
  4156e3:	pop    ss
  4156e4:	in     eax,dx
  4156e5:	mov    BYTE PTR gs:[eax-0x66],ah
  4156e9:	std    
  4156ea:	fs adc al,0xf0
  4156ed:	loopne 0x41572b
  4156ef:	pusha  
  4156f0:	je     0x41575b
  4156f2:	dec    ecx
  4156f3:	pop    ecx
  4156f4:	push   0xfffffffc
  4156f6:	retf   
  4156f7:	popa   
  4156f8:	push   ds
  4156f9:	fmul   DWORD PTR [ecx+0x479025f5]
  4156ff:	pop    ds
  415700:	push   esp
  415701:	adc    bl,BYTE PTR [ecx-0x5b12c1f4]
  415707:	jo     0x4156f2
  415709:	lods   al,BYTE PTR ds:[esi]
  41570a:	loopne 0x4156fa
  41570c:	out    dx,al
  41570d:	aas    
  41570e:	pop    es
  41570f:	ins    DWORD PTR es:[edi],dx
  415710:	add    ch,dl
  415712:	int    0x88
  415714:	jp     0x4156a3
  415716:	sub    BYTE PTR [edi+0x330a0b75],ch
  41571c:	mov    eax,0x7cc827f4
  415721:	test   al,0x8f
  415723:	or     al,0x13
  415725:	xor    edi,edi
  415727:	es jns 0x415706
  41572a:	push   cs
  41572b:	ins    BYTE PTR es:[edi],dx
  41572c:	or     bh,BYTE PTR [edi]
  41572e:	cmp    BYTE PTR [eax],bh
  415730:	adc    al,0xe3
  415732:	sub    al,al
  415734:	mov    esi,0x2beba46b
  415739:	dec    ebx
  41573a:	xor    al,0x1b
  41573c:	mov    cs,WORD PTR [esi-0x17]
  41573f:	sub    DWORD PTR [edi+0x15],edi
  415742:	in     al,dx
  415743:	sar    cl,cl
  415745:	add    DWORD PTR [ecx],edx
  415747:	mov    ecx,0x3c560aea
  41574c:	xlat   BYTE PTR ds:[ebx]
  41574d:	dec    edx
  41574e:	and    DWORD PTR [ebp-0x37bb2774],ebp
  415754:	add    DWORD PTR [ebp+0x38a7c624],edi
  41575a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41575b:	adc    eax,0x672a02d0
  415760:	repz jmp 0xc17ce8a
  415766:	aad    0xab
  415768:	push   eax
  415769:	add    esi,ecx
  41576b:	or     DWORD PTR ds:0xaa0eed76,edi
  415771:	std    
  415772:	in     al,dx
  415773:	sub    al,0x5c
  415775:	and    eax,0xd477bed0
  41577a:	or     eax,0xfa2af123
  41577f:	adc    edx,ebp
  415781:	cmp    DWORD PTR ds:0x9bec5139,edx
  415787:	dec    edx
  415788:	mov    dl,0x95
  41578a:	xchg   DWORD PTR [edx],ebx
  41578c:	call   0x1b11:0x1859e724
  415793:	pop    ds
  415794:	add    al,0x1f
  415796:	push   0x32
  415798:	xor    eax,ecx
  41579a:	push   ds
  41579b:	arpl   WORD PTR [edi],cx
  41579d:	lods   eax,DWORD PTR ds:[esi]
  41579e:	fwait
  41579f:	cmp    ecx,DWORD PTR [ebp+ecx*1-0x40]
  4157a3:	mov    BYTE PTR [ebx+0x26],ah
  4157a6:	scas   eax,DWORD PTR es:[edi]
  4157a7:	jmp    0x415814
  4157a9:	sub    esp,DWORD PTR [edi-0x5fe7025c]
  4157af:	push   0xdf2cae7d
  4157b4:	mov    ds:0x2ceab19c,al
  4157b9:	jg     0x415820
  4157bb:	dec    ebp
  4157bc:	stos   DWORD PTR es:[edi],eax
  4157bd:	call   0x3c57:0x79dcefe
  4157c4:	les    ebp,FWORD PTR [eax+0x305dffe]
  4157ca:	and    BYTE PTR [ebp+edx*8-0x45885cb7],ch
  4157d1:	xor    ebp,edx
  4157d3:	aas    
  4157d4:	inc    edi
  4157d5:	xlat   BYTE PTR ds:[ebx]
  4157d6:	add    DWORD PTR ds:0xbcd134b4,edx
  4157dc:	repz clc 
  4157de:	and    eax,0xb712e09d
  4157e3:	sbb    eax,0x7743b418
  4157e8:	inc    esi
  4157e9:	push   edx
  4157ea:	sub    DWORD PTR [esi],0xffffff9f
  4157ed:	(bad)  [eax]
  4157ef:	inc    eax
  4157f0:	inc    edx
  4157f1:	xor    al,0xa0
  4157f3:	(bad)  
  4157f4:	fmul   st,st(3)
  4157f6:	mov    ah,0x53
  4157f8:	rol    BYTE PTR [eax-0x10],1
  4157fb:	jecxz  0x4157fa
  4157fd:	arpl   WORD PTR [esi+0x6],si
  415800:	(bad)  
  415801:	dec    ebx
  415802:	add    al,0xba
  415804:	nop
  415805:	test   eax,0xc35e1e4e
  41580a:	not    DWORD PTR [ebx]
  41580c:	clc    
  41580d:	nop
  41580e:	mov    dh,0x8f
  415810:	push   edi
  415811:	js     0x4157f8
  415813:	inc    edx
  415814:	pop    edi
  415815:	cmp    eax,esp
  415817:	xchg   ecx,eax
  415818:	(bad)  ds:0x6f26aab1
  41581e:	mov    bh,0x40
  415820:	sti    
  415821:	std    
  415822:	nop
  415823:	or     ebp,edi
  415825:	pop    edx
  415826:	(bad)  [edi+eax*8-0x20]
  41582a:	call   0x32bfa4e1
  41582f:	adc    bl,BYTE PTR [edx+0x7b23c89]
  415835:	dec    edi
  415836:	add    BYTE PTR [ebp+0x72ef4fdd],ch
  41583c:	and    DWORD PTR [esi],esi
  41583e:	cmp    eax,0x479d93e2
  415843:	push   0x3170f587
  415848:	add    BYTE PTR [esi+edx*8+0xaee01c6],cl
  41584f:	(bad)  
  415850:	mov    edx,0xc08bf22c
  415855:	inc    ebx
  415856:	call   0xce024b89
  41585b:	dec    edx
  41585c:	ins    BYTE PTR es:[edi],dx
  41585d:	mul    DWORD PTR [eax]
  41585f:	push   esi
  415860:	pop    edx
  415861:	rol    DWORD PTR [edi-0x2e],1
  415864:	cmp    al,0xb6
  415866:	jbe    0x415801
  415868:	jle    0x4158de
  41586a:	fwait
  41586b:	int3   
  41586c:	push   es
  41586d:	xor    al,0x73
  41586f:	test   eax,0x791770f3
  415874:	fist   WORD PTR [edi-0x61]
  415877:	arpl   bp,dx
  415879:	dec    ecx
  41587a:	jecxz  0x415880
  41587c:	push   edx
  41587d:	call   0x78a5:0x3c19a72
  415884:	or     al,0xf0
  415886:	hlt    
  415887:	mov    edx,0x8106e9bc
  41588c:	fwait
  41588d:	pop    edx
  41588e:	xor    dh,dh
  415890:	push   ss
  415891:	shl    BYTE PTR [edx+0x79],1
  415894:	add    DWORD PTR [ecx],esi
  415896:	test   al,0xa0
  415898:	mov    edi,0xef6bb482
  41589d:	push   ebp
  41589e:	mov    ds:0xf1d04bc7,al
  4158a3:	dec    ebx
  4158a4:	repnz pop eax
  4158a6:	std    
  4158a7:	sbb    edx,DWORD PTR [esi-0x1e29a932]
  4158ad:	in     al,0x6c
  4158af:	jge    0x415913
  4158b1:	(bad)  
  4158b3:	xchg   BYTE PTR [edx-0x3e],ah
  4158b6:	push   0x563d7a59
  4158bb:	repnz mov eax,ds:0xdcc77187
  4158c1:	iret   
  4158c2:	cmp    ch,bh
  4158c4:	(bad)  
  4158c6:	shr    DWORD PTR [ecx+eiz*2],cl
  4158c9:	dec    esp
  4158ca:	sub    BYTE PTR [edi+0x83f9d62],dh
  4158d0:	jg     0x4158c3
  4158d2:	mov    eax,ds:0x27ea43ef
  4158d7:	sbb    eax,DWORD PTR [bx+di-0x52ee]
  4158dc:	sub    DWORD PTR [ebp+0x7fb51275],0xffffffb4
  4158e3:	push   0xffffffc6
  4158e5:	pop    ds
  4158e6:	pop    ebx
  4158e7:	stc    
  4158e8:	call   0x90bd6fed
  4158ed:	scas   eax,DWORD PTR es:[edi]
  4158ee:	mov    WORD PTR [ecx-0x78],es
  4158f1:	add    DWORD PTR [ebx-0x487b0b10],edi
  4158f7:	aad    0xd5
  4158f9:	xchg   edx,eax
  4158fa:	ret    0x4ddc
  4158fd:	add    eax,0x8f546f99
  415902:	lock es outs dx,DWORD PTR gs:[esi]
  415906:	sti    
  415907:	fxch   st(4)
  415909:	mov    BYTE PTR [edx+0x51],ch
  41590c:	in     eax,dx
  41590d:	shr    edx,cl
  41590f:	loope  0x41594b
  415911:	mov    edx,0x78e852eb
  415916:	pop    ss
  415917:	push   es
  415918:	mov    di,0xd4b7
  41591c:	mov    ebp,0xbd5acedc
  415921:	lods   eax,DWORD PTR ds:[esi]
  415922:	in     al,0xa3
  415924:	out    dx,al
  415925:	(bad)  
  415926:	arpl   WORD PTR [edx+0x3d],bp
  415929:	cdq    
  41592a:	retf   0x5f7f
  41592d:	(bad)  
  41592f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415930:	test   bl,0xdd
  415933:	mov    ecx,DWORD PTR [ecx-0x69]
  415936:	cwde   
  415937:	mov    fs,esi
  415939:	lods   al,BYTE PTR ds:[esi]
  41593a:	iret   
  41593b:	inc    esi
  41593c:	adc    al,0xec
  41593e:	mov    ebp,DWORD PTR [edx]
  415940:	inc    eax
  415941:	inc    ebp
  415942:	in     al,0xe0
  415944:	fs dec edi
  415946:	push   cs
  415947:	popa   
  415948:	sbb    BYTE PTR [eax-0x1d],ch
  41594b:	sbb    al,BYTE PTR [edi+ebx*1+0x5c7701b4]
  415952:	sub    edx,DWORD PTR [ecx]
  415954:	call   0x42bb:0x9a9d098e
  41595b:	mov    ?,esi
  41595d:	xor    eax,0xc108081d
  415962:	xor    eax,0x98c6610d
  415967:	ja     0x415970
  415969:	out    0x9c,eax
  41596b:	out    dx,eax
  41596c:	jo     0x41591e
  41596e:	ret    
  41596f:	push   esi
  415970:	(bad)  
  415971:	mov    BYTE PTR [ebx-0x18],cl
  415974:	retf   0x687a
  415977:	pop    ebp
  415978:	dec    edi
  415979:	stc    
  41597a:	mov    edx,0x1960159e
  41597f:	inc    ecx
  415980:	cmp    bh,BYTE PTR [ecx+0x40035d7d]
  415986:	ret    0xc83d
  415989:	mov    edi,DWORD PTR [eax+0x2e]
  41598c:	mov    ch,0x75
  41598e:	ret    
  41598f:	test   DWORD PTR [ecx-0x60],0x4339d304
  415996:	jae    0x415a14
  415998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415999:	sbb    esp,ebp
  41599b:	jg     0x415949
  41599d:	mov    ds:0x6964f9da,al
  4159a2:	test   eax,0x810984a2
  4159a7:	mov    esp,0xb4f71e31
  4159ac:	fcomp  QWORD PTR [ebx]
  4159ae:	and    bl,BYTE PTR [ebx+edi*2-0x70]
  4159b2:	fild   QWORD PTR [ebx+0x5fe165d5]
  4159b8:	out    dx,eax
  4159b9:	fs mov ecx,0x8e54f107
  4159bf:	(bad)  
  4159c0:	mov    esp,0xe6823ee2
  4159c5:	mov    dl,0x94
  4159c7:	mov    al,ds:0x92c10e4f
  4159cc:	dec    edx
  4159cd:	dec    edi
  4159ce:	and    eax,0xe6f7acd9
  4159d3:	push   ecx
  4159d4:	stos   BYTE PTR es:[edi],al
  4159d5:	test   BYTE PTR [esi],dh
  4159d7:	xor    eax,0x80e1831d
  4159dc:	jne    0x4159e5
  4159de:	xchg   edx,eax
  4159df:	mov    ch,0x5e
  4159e1:	iret   
  4159e2:	popa   
  4159e3:	enter  0x5aa3,0x25
  4159e7:	xor    BYTE PTR [edx],ch
  4159e9:	sbb    eax,ecx
  4159eb:	jle    0x415a54
  4159ed:	xchg   ebp,eax
  4159ee:	popf   
  4159ef:	(bad)  
  4159f1:	push   es
  4159f2:	dec    ebp
  4159f3:	xchg   DWORD PTR [edx-0xa],eax
  4159f6:	push   es
  4159f7:	mov    dl,0x72
  4159f9:	push   ds
  4159fa:	inc    edi
  4159fb:	add    DWORD PTR [ebp-0x3dab65a1],ebp
  415a01:	fist   DWORD PTR [ebx]
  415a03:	ins    BYTE PTR es:[edi],dx
  415a04:	mov    WORD PTR [eax+0x3e],ds
  415a07:	les    ebx,FWORD PTR [ebx]
  415a09:	or     al,0xd8
  415a0b:	push   0xefaed9cc
  415a10:	stos   BYTE PTR es:[edi],al
  415a11:	repz mov ds:0xd9e5cbe3,al
  415a17:	ins    DWORD PTR es:[edi],dx
  415a18:	push   cs
  415a19:	dec    ebp
  415a1a:	add    DWORD PTR [ecx-0x30e28437],esi
  415a20:	jge    0x4159ca
  415a22:	(bad)  
  415a23:	in     al,dx
  415a24:	pushf  
  415a25:	jbe    0x4159d2
  415a27:	rcr    BYTE PTR [edx],0xa3
  415a2a:	jne    0x415aa2
  415a2c:	xlat   BYTE PTR ds:[ebx]
  415a2d:	je     0x415a37
  415a2f:	mov    DWORD PTR [edi],edx
  415a31:	xchg   ecx,eax
  415a32:	sub    al,0xd5
  415a34:	scas   eax,DWORD PTR es:[edi]
  415a35:	dec    eax
  415a36:	call   0x27cb:0x2c1950c6
  415a3d:	test   DWORD PTR [edi-0x1e183c26],edx
  415a43:	int3   
  415a44:	inc    ecx
  415a45:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a47:	je     0x415a4a
  415a49:	mov    ah,0x86
  415a4b:	enter  0x9b88,0x3b
  415a4f:	pop    ss
  415a50:	cmp    esp,DWORD PTR [ecx]
  415a52:	and    BYTE PTR [eax+0x867cd64],ch
  415a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a59:	pop    eax
  415a5a:	out    dx,eax
  415a5b:	ins    BYTE PTR es:[edi],dx
  415a5c:	inc    eax
  415a5d:	and    eax,0x838adf67
  415a62:	xchg   BYTE PTR [ecx+0x45fde80],ch
  415a68:	lock adc BYTE PTR [eax-0x7f79b8ed],ah
  415a6f:	inc    ebx
  415a70:	shl    edx,0xc8
  415a73:	cld    
  415a74:	and    eax,0xb42c10c8
  415a79:	cld    
  415a7a:	adc    eax,0xf7f531be
  415a7f:	fs retf 
  415a81:	fstp   TBYTE PTR [edi-0x46d46136]
  415a87:	xor    bl,BYTE PTR fs:[edi+0x30a9b46e]
  415a8e:	mov    ds:0x6e09af5d,eax
  415a93:	(bad)
  415a96:	loopne 0x415a9d
  415a98:	pop    esi
  415a99:	aaa    
  415a9a:	xor    eax,0x7e4de2d2
  415a9f:	test   al,0x5c
  415aa1:	stos   BYTE PTR es:[edi],al
  415aa2:	mov    cl,0x53
  415aa4:	inc    edi
  415aa5:	fbld   TBYTE PTR [eax+ebp*2-0x6aae625a]
  415aac:	gs (bad) 
  415aae:	fidivr WORD PTR ds:0x8c461bbc
  415ab4:	sar    DWORD PTR [edi],1
  415ab6:	adc    BYTE PTR ds:0xe9ca0b1d,0x4
  415abd:	mov    ds:0xc00ab285,al
  415ac2:	push   ebp
  415ac3:	pop    ss
  415ac4:	(bad)  
  415ac5:	mov    ?,WORD PTR ds:0xc4f8fba8
  415acb:	jns    0x415ad8
  415acd:	fist   WORD PTR [edx]
  415acf:	fnstsw ax
  415ad1:	stos   BYTE PTR es:[edi],al
  415ad2:	xchg   ebp,eax
  415ad3:	adc    al,0x7f
  415ad5:	adc    ebp,ebp
  415ad7:	(bad)  
  415ad8:	dec    ecx
  415ad9:	mov    eax,0x799e30fb
  415ade:	sbb    BYTE PTR [ebx+0x78],0x7d
  415ae2:	push   0x3768c725
  415ae7:	jl     0x415aee
  415ae9:	cdq    
  415aea:	xchg   esi,eax
  415aeb:	(bad)  [ebp+0x4f]
  415aee:	popa   
  415aef:	loopne 0x415b56
  415af1:	adc    BYTE PTR [esi],bl
  415af3:	inc    ebp
  415af4:	jle    0x415ab6
  415af6:	or     ebp,DWORD PTR ds:0xec4d13fd
  415afc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415afe:	test   eax,0x3df5d906
  415b03:	mov    cl,0x86
  415b05:	(bad)  
  415b06:	mov    esp,0x827c4781
  415b0b:	mov    dl,ch
  415b0d:	sub    DWORD PTR [ecx-0x5596caee],esp
  415b13:	pop    ebx
  415b14:	inc    edi
  415b15:	into   
  415b16:	cmp    al,0xf2
  415b18:	js     0x415b2d
  415b1a:	jp     0x415b19
  415b1c:	icebp  
  415b1d:	push   ebp
  415b1e:	das    
  415b1f:	mov    edx,0x1e0c31a0
  415b24:	inc    ebp
  415b25:	push   ebp
  415b26:	adc    ebp,edx
  415b28:	enter  0x4611,0x66
  415b2c:	push   edx
  415b2d:	dec    edi
  415b2e:	icebp  
  415b2f:	push   esp
  415b30:	mov    esi,0xba73a56e
  415b35:	into   
  415b36:	xchg   ebx,eax
  415b37:	int3   
  415b38:	xor    al,0x4e
  415b3a:	int3   
  415b3b:	add    dl,BYTE PTR [edi]
  415b3d:	test   eax,0x7b9064c3
  415b42:	push   ss
  415b43:	dec    edx
  415b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b45:	fsub   QWORD PTR [eax-0x60]
  415b48:	or     dh,BYTE PTR [eax]
  415b4a:	cmp    al,0x3d
  415b4c:	cmp    eax,0x43bde955
  415b51:	mov    ds:0xa6f1433,al
  415b56:	sub    eax,0x48837dee
  415b5b:	icebp  
  415b5c:	not    DWORD PTR [edi]
  415b5e:	mov    edx,0x6ecccdf
  415b63:	mov    cl,0x7b
  415b65:	pop    eax
  415b66:	arpl   WORD PTR [esi+0x46],dx
  415b69:	aas    
  415b6a:	sbb    bl,BYTE PTR [ebx+edx*2+0x697adbed]
  415b71:	cmp    dh,BYTE PTR [edx+eax*2]
  415b74:	pop    esp
  415b75:	mov    al,0x55
  415b77:	in     al,dx
  415b78:	shl    BYTE PTR [edx],cl
  415b7a:	adc    ah,bh
  415b7c:	sar    ah,0xe6
  415b7f:	add    DWORD PTR [edi],ebp
  415b81:	mov    edi,0x5dc29587
  415b86:	mov    ds:0xe35469cd,al
  415b8b:	or     dl,bl
  415b8d:	(bad)  
  415b8e:	fstp   DWORD PTR [eax-0x46]
  415b91:	(bad)  
  415b92:	in     eax,dx
  415b93:	aas    
  415b94:	(bad)  
  415b95:	dec    ecx
  415b96:	dec    esp
  415b97:	push   esi
  415b98:	jb     0x415bb5
  415b9a:	mov    edi,0xbd83bbcd
  415b9f:	out    0x2b,eax
  415ba1:	stc    
  415ba2:	pusha  
  415ba3:	jg     0x415bee
  415ba5:	inc    ebp
  415ba6:	aas    
  415ba7:	int    0x3c
  415ba9:	leave  
  415baa:	pop    ebx
  415bab:	outs   dx,BYTE PTR ds:[esi]
  415bac:	inc    ebx
  415bad:	int3   
  415bae:	mov    ecx,0x2ce6b693
  415bb3:	push   edx
  415bb4:	(bad)  [edi-0xd159565]
  415bba:	(bad)  
  415bbc:	cmp    bh,BYTE PTR [edx+ebp*4+0x1f]
  415bc0:	push   eax
  415bc1:	xchg   ebx,eax
  415bc2:	jb     0x415bd2
  415bc4:	sbb    al,0x19
  415bc6:	inc    esi
  415bc7:	dec    eax
  415bc8:	jae    0x415c43
  415bca:	outs   dx,BYTE PTR ds:[esi]
  415bcb:	fld    TBYTE PTR [ecx]
  415bcd:	(bad)  
  415bce:	std    
  415bcf:	adc    DWORD PTR [eax-0x2f603631],ebp
  415bd5:	nop
  415bd6:	pop    ss
  415bd7:	scas   al,BYTE PTR es:[edi]
  415bd8:	inc    esp
  415bd9:	sub    ebx,ebx
  415bdb:	dec    esp
  415bdc:	cwde   
  415bdd:	sub    ecx,DWORD PTR [esp+eiz*4-0x6237b150]
  415be4:	rol    BYTE PTR [bp+si-0xb],1
  415be8:	mov    edx,0x1ef91990
  415bed:	xor    BYTE PTR [ebx-0x47bedbc1],ch
  415bf3:	xchg   esp,eax
  415bf4:	ss mov bh,0xf1
  415bf7:	loop   0x415b96
  415bf9:	test   eax,0x551a3c5f
  415bfe:	sbb    bh,BYTE PTR [ecx-0x4a]
  415c01:	or     DWORD PTR [ebx+0x32],esi
  415c04:	cli    
  415c05:	add    bh,BYTE PTR [eax+eiz*4]
  415c08:	adc    BYTE PTR [edi+0x51],al
  415c0b:	xor    al,0xd1
  415c0d:	push   0xbead8235
  415c12:	or     BYTE PTR cs:[ecx-0x53],dl
  415c16:	dec    ecx
  415c17:	xor    ebx,eax
  415c19:	jge    0x415c36
  415c1b:	popf   
  415c1c:	lds    edi,FWORD PTR [eax+0x79278c2e]
  415c22:	dec    ebx
  415c23:	xor    ebx,DWORD PTR [edi-0x5b]
  415c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c27:	leave  
  415c28:	popf   
  415c29:	jg     0x415c25
  415c2b:	bswap  eax
  415c2d:	pop    ebp
  415c2e:	sub    DWORD PTR [edi+0x60e51b67],edx
  415c34:	sub    ebp,edi
  415c36:	mov    esp,0x3d7c90e4
  415c3b:	out    0xf,eax
  415c3d:	stos   BYTE PTR es:[edi],al
  415c3e:	out    0x6a,al
  415c40:	add    al,BYTE PTR [edx]
  415c42:	pushw  ds
  415c44:	aaa    
  415c45:	pop    esp
  415c46:	sub    dl,BYTE PTR [ecx+0x16]
  415c49:	push   eax
  415c4a:	mov    ds:0xe8344bb8,eax
  415c4f:	mov    esp,0xf6bd72a
  415c54:	mov    ecx,0x8cb098b7
  415c59:	gs jp  0x415cab
  415c5c:	inc    ecx
  415c5d:	push   0x46ca6a42
  415c62:	add    eax,DWORD PTR [edx+0x311b84e8]
  415c68:	mov    al,0x34
  415c6a:	clc    
  415c6b:	push   0xffffff8a
  415c6d:	xor    BYTE PTR ds:0xde291083,al
  415c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c74:	push   0x9021571c
  415c79:	leave  
  415c7a:	arpl   cx,cx
  415c7c:	jne    0x415cf8
  415c7e:	pop    ds
  415c7f:	aad    0x9e
  415c81:	xlat   BYTE PTR ds:[ebx]
  415c82:	jne    0x415c32
  415c84:	sbb    ebp,DWORD PTR [esi]
  415c86:	pop    eax
  415c87:	mov    BYTE PTR [ebx],ch
  415c89:	or     cl,bl
  415c8b:	dec    ebx
  415c8c:	sub    bl,BYTE PTR [edx-0x5f]
  415c8f:	mov    esp,0x3893a713
  415c94:	cmc    
  415c95:	in     eax,0xaa
  415c97:	xchg   ebp,eax
  415c98:	or     dh,BYTE PTR [ebx+0x3e]
  415c9b:	xlat   BYTE PTR ds:[ebx]
  415c9c:	sbb    BYTE PTR [ecx+0x1e],dl
  415c9f:	aas    
  415ca0:	outs   dx,BYTE PTR ds:[esi]
  415ca1:	sub    eax,0x95357218
  415ca6:	leave  
  415ca7:	and    edi,DWORD PTR [eax-0x3df4fdb6]
  415cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cae:	mov    ah,0x51
  415cb0:	int    0xb1
  415cb2:	jmp    0xfc4a:0xe4143a5a
  415cb9:	test   BYTE PTR [ecx+0x68],0x57
  415cbd:	loop   0x415d27
  415cbf:	and    DWORD PTR [edx+0x4e69dda5],edx
  415cc5:	lods   al,BYTE PTR ds:[esi]
  415cc6:	jno    0x415ca2
  415cc8:	lods   al,BYTE PTR ds:[esi]
  415cc9:	dec    eax
  415cca:	add    BYTE PTR [ebp-0x4a624c0c],al
  415cd0:	cmp    ebx,ebp
  415cd2:	sbb    al,0x2d
  415cd4:	jp     0x415d2e
  415cd6:	or     DWORD PTR [edx+0x16],edx
  415cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cda:	outs   dx,BYTE PTR ds:[esi]
  415cdb:	ds into 
  415cdd:	cmp    ebx,DWORD PTR [eax+0x20]
  415ce0:	cmp    dl,bl
  415ce2:	adc    esi,DWORD PTR [eax+0x67]
  415ce5:	shl    BYTE PTR [esi],cl
  415ce7:	inc    eax
  415ce8:	cmp    al,0xd7
  415cea:	outs   dx,DWORD PTR ds:[esi]
  415ceb:	int    0x6a
  415ced:	popf   
  415cee:	xchg   BYTE PTR [ebx+0x60b7eb82],dl
  415cf4:	and    eax,0xe27d8a96
  415cf9:	call   0x8641f939
  415cfe:	push   ebp
  415cff:	push   ecx
  415d00:	mov    ch,0x96
  415d02:	rol    DWORD PTR [ecx-0x2c01c94e],1
  415d08:	sahf   
  415d09:	cmp    BYTE PTR [edx+0xe],0x23
  415d0d:	add    edx,DWORD PTR [eax+ecx*1-0x18]
  415d11:	mov    esi,0x6f57ece2
  415d16:	fsub   QWORD PTR [esi-0x38384514]
  415d1c:	test   eax,0x2289c878
  415d21:	into   
  415d22:	lea    eax,[ebx-0x51]
  415d25:	nop
  415d26:	add    BYTE PTR [esi],ah
  415d28:	call   DWORD PTR [ecx]
  415d2a:	dec    esi
  415d2b:	sbb    ecx,DWORD PTR [esi+0x1c]
  415d2e:	jle    0x415d56
  415d30:	mov    BYTE PTR [eax+0x54605415],al
  415d36:	shl    ecx,1
  415d38:	pop    esp
  415d39:	imul   esi,DWORD PTR [eax],0xf506e8e9
  415d3f:	loopne 0x415cea
  415d41:	and    ecx,ebx
  415d43:	sub    edx,ecx
  415d45:	outs   dx,BYTE PTR ds:[esi]
  415d46:	jns    0x415dab
  415d48:	add    dh,cl
  415d4a:	xchg   edi,eax
  415d4b:	sar    ebp,1
  415d4d:	xor    ch,bl
  415d4f:	in     eax,dx
  415d50:	lahf   
  415d51:	add    BYTE PTR [edx+0x3fe75c73],0xba
  415d58:	pop    ss
  415d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d5a:	or     DWORD PTR [esi+ebp*4],0x18
  415d5e:	lea    ecx,[esi+ebp*4+0x53c5dd0d]
  415d65:	jecxz  0x415d46
  415d67:	out    0xa,eax
  415d69:	mov    cl,0x92
  415d6b:	inc    ecx
  415d6c:	cmp    al,0x8e
  415d6e:	ds inc edi
  415d70:	repnz cmp eax,0x73bc0429
  415d76:	dec    ebp
  415d77:	dec    esp
  415d78:	jmp    0xcc5799df
  415d7d:	cwde   
  415d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d7f:	cmp    BYTE PTR [ecx-0x17],dl
  415d82:	in     eax,dx
  415d83:	das    
  415d84:	pop    ss
  415d85:	pop    ss
  415d86:	and    DWORD PTR [ebp-0x69f54ae2],esp
  415d8c:	and    eax,DWORD PTR [esi+0x3105247e]
  415d92:	push   ecx
  415d93:	xchg   esp,eax
  415d94:	fistp  WORD PTR [edi]
  415d96:	inc    ecx
  415d97:	stos   DWORD PTR es:[edi],eax
  415d98:	and    eax,0x9f8fad55
  415d9d:	xor    BYTE PTR [ebx+0x66cd33a2],dl
  415da3:	das    
  415da4:	int    0x33
  415da6:	addr16 lahf 
  415da8:	shr    BYTE PTR [eax+0x7970c8bd],0x9c
  415daf:	push   es
  415db0:	mov    DWORD PTR [edi-0x5d],esp
  415db3:	fldenv [edx]
  415db5:	fbld   TBYTE PTR [ebx+0x166e4b2c]
  415dbb:	loope  0x415d9a
  415dbd:	nop
  415dbe:	outs   dx,DWORD PTR ds:[esi]
  415dbf:	out    0x49,eax
  415dc1:	test   WORD PTR [ebp+0x48],ax
  415dc5:	(bad)  
  415dc6:	and    bl,BYTE PTR [ebp-0x3bb34233]
  415dcc:	ror    dh,0xdb
  415dcf:	sbb    dh,al
  415dd1:	popf   
  415dd2:	mov    bl,0xf0
  415dd4:	pop    ecx
  415dd5:	sbb    al,0x52
  415dd7:	push   ebp
  415dd8:	fcomip st,st(0)
  415dda:	add    al,0x4a
  415ddc:	xor    al,0xfc
  415dde:	shl    DWORD PTR [ecx-0xb56cb2b],cl
  415de4:	lods   eax,DWORD PTR ds:[esi]
  415de5:	fwait
  415de6:	add    dl,ah
  415de8:	sbb    al,0x42
  415dea:	lds    edi,FWORD PTR [ecx+0xf]
  415ded:	jns    0x415d9c
  415def:	bound  eax,QWORD PTR [ebx+0x66e11507]
  415df5:	mov    ds:0x1d70f6a,eax
  415dfa:	lods   al,BYTE PTR ds:[esi]
  415dfb:	push   edi
  415dfc:	pop    eax
  415dfd:	nop
  415dfe:	in     al,0xd5
  415e00:	mov    dh,0x2f
  415e02:	out    0x88,al
  415e04:	dec    edx
  415e05:	aaa    
  415e06:	push   edx
  415e07:	xlat   BYTE PTR ds:[ebx]
  415e08:	retf   
  415e09:	jb     0x415e12
  415e0b:	cwde   
  415e0c:	mov    ecx,esi
  415e0e:	adc    BYTE PTR [ebx+0xf],ah
  415e11:	inc    ebx
  415e12:	or     dl,al
  415e14:	xor    esi,ecx
  415e16:	mov    ds:0xa2b16858,al
  415e1b:	pop    eax
  415e1c:	xor    al,0x76
  415e1e:	add    al,0xea
  415e20:	xor    al,0xa1
  415e22:	in     eax,dx
  415e23:	dec    ebx
  415e24:	div    edx
  415e26:	(bad)  
  415e27:	fcomp  DWORD PTR [eax]
  415e29:	ret    
  415e2a:	push   0x263b08a
  415e2f:	cwde   
  415e30:	add    ebp,DWORD PTR [ecx+0x46]
  415e33:	dec    edi
  415e34:	cmp    ecx,DWORD PTR [esi+0x250a8552]
  415e3a:	pop    esp
  415e3b:	lea    ebp,[eax+0x183cdbe2]
  415e41:	out    dx,eax
  415e42:	and    ebp,DWORD PTR [eax]
  415e44:	fimul  DWORD PTR [eax]
  415e46:	and    BYTE PTR [ebp-0x4ecb3d41],al
  415e4c:	inc    esi
  415e4d:	jnp    0x415e6a
  415e4f:	sub    cl,al
  415e51:	clc    
  415e52:	mov    ds:0xc87ffe5f,al
  415e57:	mov    dh,0x60
  415e59:	and    dl,ch
  415e5b:	adc    eax,0x8394d2e9
  415e60:	clc    
  415e61:	jns    0x415e0b
  415e63:	add    eax,0xb130f035
  415e68:	imul   ebp,DWORD PTR [edi+0x2e],0xffffff9d
  415e6c:	sub    ch,BYTE PTR [edi]
  415e6e:	inc    ebx
  415e6f:	js     0x415e43
  415e71:	inc    edx
  415e72:	push   ss
  415e73:	call   0x3204:0x7189df8e
  415e7a:	jae    0x415e34
  415e7c:	cmp    al,0xce
  415e7e:	fistp  QWORD PTR [ebp+ecx*8+0x3681c3b5]
  415e85:	push   eax
  415e86:	sbb    BYTE PTR [esi-0x40],bl
  415e89:	mov    ebp,0x27191d91
  415e8e:	fsub   DWORD PTR [ecx]
  415e90:	adc    DWORD PTR gs:[ebp+0x36],ebp
  415e94:	enter  0x191c,0x67
  415e98:	out    dx,al
  415e99:	int3   
  415e9a:	sub    eax,0xadc94ece
  415e9f:	stos   WORD PTR es:[edi],ax
  415ea1:	inc    esi
  415ea2:	adc    eax,0xff408960
  415ea7:	or     al,0xdf
  415ea9:	mov    bl,0x24
  415eab:	pushf  
  415eac:	sbb    BYTE PTR [esi],0x21
  415eaf:	repz xor al,0xb
  415eb2:	and    al,0x8c
  415eb4:	xor    DWORD PTR [edx+eax*2],esp
  415eb7:	sbb    BYTE PTR [edx-0x1f],bl
  415eba:	mov    WORD PTR [edi+eax*1],ss
  415ebd:	and    ch,BYTE PTR [edx]
  415ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ec0:	in     al,dx
  415ec1:	jb     0x415f29
  415ec3:	xor    esi,DWORD PTR [ebp-0x50f82866]
  415ec9:	pushf  
  415eca:	stos   DWORD PTR es:[edi],eax
  415ecb:	aad    0x88
  415ecd:	mov    edi,0xfb550c99
  415ed2:	dec    ch
  415ed4:	inc    edi
  415ed5:	mov    DWORD PTR [ecx-0x7b],ebp
  415ed8:	inc    DWORD PTR [eax+esi*4+0x55626a9a]
  415edf:	cdq    
  415ee0:	mul    edi
  415ee2:	xor    dh,0x74
  415ee5:	xor    BYTE PTR [esi],bh
  415ee7:	js     0x415f00
  415ee9:	aad    0xaa
  415eeb:	repz daa 
  415eed:	mov    al,ds:0xbe51a6a
  415ef2:	or     ch,bl
  415ef4:	inc    edx
  415ef5:	mov    edx,0x9e20d6d9
  415efa:	jmp    0xc183:0xb733c0f7
  415f01:	dec    ebx
  415f02:	sbb    ch,BYTE PTR ds:0xd25c957
  415f08:	push   edi
  415f09:	lahf   
  415f0a:	push   ds
  415f0b:	mov    bh,0x5d
  415f0d:	dec    eax
  415f0e:	ins    BYTE PTR es:[edi],dx
  415f0f:	rcr    BYTE PTR [esi+0x350e9417],1
  415f15:	(bad)  
  415f16:	or     dl,ah
  415f18:	cmp    dh,BYTE PTR [edx+0x400748e8]
  415f1e:	mov    eax,0x5d39845e
  415f23:	pop    eax
  415f24:	lahf   
  415f25:	(bad)  
  415f26:	adc    dl,dh
  415f28:	pushf  
  415f29:	push   ebp
  415f2a:	add    al,0x27
  415f2c:	adc    BYTE PTR [eax+edx*8+0x29bcd5a],0xa2
  415f34:	push   esi
  415f35:	push   0x3d323074
  415f3a:	push   ebx
  415f3b:	jmp    DWORD PTR [ebx]
  415f3d:	mov    esp,0x335a78f2
  415f42:	(bad)  
  415f43:	jnp    0x415f8d
  415f45:	add    al,0x99
  415f47:	neg    esp
  415f49:	sbb    al,0xc9
  415f4b:	mov    ch,0x22
  415f4d:	in     eax,0xc1
  415f4f:	(bad)  
  415f50:	dec    esi
  415f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f52:	push   ss
  415f53:	add    al,0x6d
  415f55:	mov    eax,0x59a83617
  415f5a:	pusha  
  415f5b:	into   
  415f5c:	lea    ebx,[eax-0x13]
  415f5f:	xchg   esi,eax
  415f60:	sbb    eax,0xbea04887
  415f65:	ror    ebx,0x30
  415f68:	mov    ch,0x4f
  415f6a:	jb     0x415f7e
  415f6c:	(bad)  [edi-0x5ea02a8b]
  415f72:	mov    bh,0x5b
  415f74:	popf   
  415f75:	std    
  415f76:	xlat   BYTE PTR ds:[ebx]
  415f77:	or     al,0x98
  415f79:	sbb    bh,BYTE PTR [eax+ecx*2]
  415f7c:	int    0x39
  415f7e:	ja     0x415f7e
  415f80:	ret    
  415f81:	stos   BYTE PTR es:[edi],al
  415f82:	cld    
  415f83:	xchg   DWORD PTR [ebp+0x66],eax
  415f86:	aaa    
  415f87:	mov    al,0xe0
  415f89:	xchg   edx,eax
  415f8a:	jns    0x415fda
  415f8c:	jp     0x415ffa
  415f8e:	or     eax,esp
  415f90:	jae    0x415f5a
  415f92:	pop    ebx
  415f93:	loop   0x415fd6
  415f95:	fisubr WORD PTR [edi-0x5c437ef7]
  415f9b:	(bad)  
  415f9c:	pop    esp
  415f9d:	test   al,0x87
  415f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fa0:	scas   al,BYTE PTR es:[edi]
  415fa1:	adc    eax,0x36d6dff3
  415fa6:	repz call 0x23f777bd
  415fac:	jne    0x41601d
  415fae:	mov    ecx,0x29efa274
  415fb3:	xor    eax,0xb2d41ad
  415fb8:	imul   ebx,DWORD PTR [ebp-0x5],0xffffffc1
  415fbc:	mov    BYTE PTR [bx],al
  415fbf:	and    al,0x72
  415fc1:	jge    0x415fd2
  415fc3:	ja     0x41602a
  415fc5:	xor    edi,DWORD PTR [eax-0x56]
  415fc8:	inc    edx
  415fc9:	push   eax
  415fca:	push   ebx
  415fcb:	es mov eax,0x67712299
  415fd1:	stos   DWORD PTR es:[edi],eax
  415fd2:	dec    ebx
  415fd3:	daa    
  415fd4:	or     eax,0x290a1a5c
  415fd9:	or     DWORD PTR [ecx-0x23],eax
  415fdc:	sub    DWORD PTR [eax+eax*8+0x0],0x30
  415fe1:	and    DWORD PTR [ebp-0x1e07482f],0xffffffa3
  415fe8:	hlt    
  415fe9:	mov    edx,0xbf89d2c9
  415fee:	push   es
  415fef:	adc    DWORD PTR [edi-0x543b486a],ebx
  415ff5:	repnz pop esi
  415ff7:	jae    0x415fc8
  415ff9:	scas   al,BYTE PTR es:[edi]
  415ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ffb:	and    edx,DWORD PTR [eax+eax*2-0x7f4e29de]
  416002:	outs   dx,DWORD PTR ds:[esi]
  416003:	pusha  
  416004:	and    BYTE PTR [edx],bh
  416006:	addr16 xor eax,0xb7e44c8a
  41600c:	dec    ebp
  41600d:	mov    ch,BYTE PTR [ecx+0x67]
  416010:	xchg   BYTE PTR [edi+0x188e161d],ch
  416016:	in     eax,dx
  416017:	out    dx,eax
  416018:	pop    ecx
  416019:	stos   BYTE PTR es:[edi],al
  41601a:	loopne 0x415fbe
  41601c:	jl     0x415fa2
  41601e:	(bad)  
  41601f:	pop    edi
  416020:	dec    edx
  416021:	mov    ecx,0x9358018c
  416026:	inc    edx
  416027:	test   DWORD PTR [ecx+0x65],esp
  41602a:	xor    BYTE PTR [eax+0x27],ah
  41602d:	xor    BYTE PTR [edi-0x2d],ch
  416030:	mov    edx,0x9826857f
  416035:	mov    eax,ds:0x85e888e8
  41603a:	push   ds
  41603b:	ja     0x416020
  41603d:	icebp  
  41603e:	inc    eax
  41603f:	mov    edx,0x8d677026
  416044:	push   esp
  416045:	adc    DWORD PTR [eiz*2+0x72327924],edi
  41604c:	xor    ah,BYTE PTR [ebx-0x25]
  41604f:	pop    edx
  416050:	and    eax,0xff9d2af7
  416055:	std    
  416056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416057:	jl     0x41609c
  416059:	mov    al,0xb1
  41605b:	leave  
  41605c:	sti    
  41605d:	ja     0x416049
  41605f:	mov    BYTE PTR [ecx+0x38],al
  416062:	pushf  
  416063:	pop    edi
  416064:	adc    al,0x6a
  416066:	mov    edi,DWORD PTR [ebx-0x449579aa]
  41606c:	or     eax,0x462d02b2
  416071:	inc    ebx
  416072:	and    esi,DWORD PTR [esi]
  416074:	fbld   TBYTE PTR [ebp+0x5]
  416077:	and    BYTE PTR [ebx],bh
  416079:	push   ds
  41607a:	or     al,0x6d
  41607c:	mov    ds:0x6d41f177,al
  416081:	add    ebp,DWORD PTR [ebp-0x18]
  416084:	retf   
  416085:	push   esi
  416086:	dec    ebx
  416087:	add    BYTE PTR [ebx+0x2b46917a],bh
  41608d:	stc    
  41608e:	jnp    0x41602c
  416090:	cdq    
  416091:	std    
  416092:	inc    DWORD PTR [ecx-0x7b445f28]
  416098:	jae    0x4160fd
  41609a:	and    DWORD PTR [ecx-0x6cd56b76],edx
  4160a0:	out    dx,eax
  4160a1:	loope  0x4160f0
  4160a3:	jmp    0x416026
  4160a5:	add    BYTE PTR [edi-0x4aeba618],0xf7
  4160ac:	sub    eax,0x9d068b44
  4160b1:	rcr    DWORD PTR [eax],0xbc
  4160b4:	dec    esi
  4160b5:	dec    esp
  4160b6:	sub    al,0x45
  4160b8:	or     bl,BYTE PTR [bp+si+0x60e1]
  4160bd:	(bad)  
  4160be:	iret   
  4160bf:	fadd   st(5),st
  4160c1:	dec    esi
  4160c2:	cmp    edx,DWORD PTR ss:[eax+0x14]
  4160c6:	repnz or DWORD PTR ds:0x5d47f1b9,edi
  4160cd:	jecxz  0x416137
  4160cf:	ss xchg edx,eax
  4160d1:	scas   al,BYTE PTR es:[edi]
  4160d2:	jno    0x41613a
  4160d4:	std    
  4160d5:	jne    0x41606d
  4160d7:	cmp    al,0x41
  4160d9:	xchg   BYTE PTR ds:0xcb8a5989,ch
  4160df:	test   al,0x3e
  4160e1:	adc    DWORD PTR [eax-0x36],edi
  4160e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160e5:	adc    DWORD PTR [ebx+0x60db0ddd],edx
  4160eb:	adc    BYTE PTR [eax+0x51],bh
  4160ee:	and    bl,ah
  4160f0:	and    DWORD PTR [esi],esp
  4160f2:	fld    TBYTE PTR [edi]
  4160f4:	inc    edx
  4160f5:	jns    0x41609d
  4160f7:	shr    BYTE PTR [eax+0x57e4c476],0xd9
  4160fe:	add    al,0x6c
  416100:	jp     0x416122
  416102:	jae    0x4160dd
  416104:	add    eax,0x861e554c
  416109:	dec    esp
  41610a:	mov    esp,ecx
  41610c:	mov    al,0x5
  41610e:	out    0xd5,al
  416110:	xchg   esi,eax
  416111:	into   
  416112:	(bad)  
  416113:	lods   al,BYTE PTR ds:[esi]
  416114:	in     eax,0x2a
  416116:	gs sahf 
  416118:	dec    esi
  416119:	add    esp,DWORD PTR [ebx]
  41611b:	adc    ch,BYTE PTR [edx-0x76]
  41611e:	int3   
  41611f:	mov    DWORD PTR [ebx],esi
  416121:	xchg   ebp,eax
  416122:	test   BYTE PTR [eax-0x3f],al
  416125:	cmp    dl,ah
  416127:	test   eax,0xe974445
  41612c:	inc    eax
  41612d:	sahf   
  41612e:	ins    DWORD PTR es:[edi],dx
  41612f:	test   al,0x5a
  416131:	cmp    al,0xd1
  416133:	dec    esp
  416134:	aam    0xe0
  416136:	push   edi
  416137:	jge    0x4161b4
  416139:	mov    ds:0x73612210,al
  41613e:	pop    edx
  41613f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416140:	pusha  
  416141:	adc    dl,BYTE PTR [ebp-0x3e10f486]
  416147:	cmc    
  416148:	ror    DWORD PTR [ebx-0x7c],1
  41614b:	inc    cx
  41614d:	adc    bh,BYTE PTR [edx]
  41614f:	pusha  
  416150:	shl    DWORD PTR ds:0xec94f91d,1
  416156:	aaa    
  416157:	gs push ecx
  416159:	(bad)  
  41615b:	dec    ebp
  41615c:	cmp    esp,0x4cbffe2c
  416162:	(bad)  
  416163:	push   edx
  416164:	mov    edx,DWORD PTR [edi+0x78de4576]
  41616a:	out    dx,al
  41616b:	call   0xe7a26003
  416170:	push   ebx
  416171:	loopne 0x4161dc
  416173:	lea    ebp,[eax+0x3dd9d12e]
  416179:	ret    
  41617a:	repz xor al,0xe5
  41617d:	icebp  
  41617e:	leave  
  41617f:	aam    0x3b
  416181:	clc    
  416182:	pushf  
  416183:	dec    edx
  416184:	inc    ecx
  416185:	sub    esi,DWORD PTR [edi-0x5f]
  416188:	jo     0x4161f2
  41618a:	(bad)  
  41618b:	arpl   WORD PTR [ecx+0x1631c3f3],ax
  416191:	sbb    al,0xf0
  416193:	jns    0x416165
  416195:	fmul   QWORD PTR [edx+0x4ad318d1]
  41619b:	shl    DWORD PTR [esi-0x3a],0xbd
  41619f:	jne    0x4161ca
  4161a1:	jle    0x41618d
  4161a3:	into   
  4161a4:	dec    DWORD PTR [edi+0x69]
  4161a7:	dec    ebx
  4161a8:	popa   
  4161a9:	cmp    al,0x5
  4161ab:	push   ecx
  4161ac:	cmp    bh,ah
  4161ae:	jae    0x4161e8
  4161b0:	xor    eax,0xd0a09919
  4161b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161b6:	das    
  4161b7:	out    0xdc,eax
  4161b9:	dec    ebx
  4161ba:	out    dx,al
  4161bb:	mov    cl,0xa4
  4161bd:	hlt    
  4161be:	std    
  4161bf:	cwde   
  4161c0:	data16 mov ah,0xf2
  4161c3:	lock mov ebx,0x30d04bdd
  4161c9:	mov    eax,ds:0xf2d87cfa
  4161ce:	push   esi
  4161cf:	and    eax,0xe6a43eea
  4161d4:	in     al,dx
  4161d5:	xchg   ecx,eax
  4161d6:	gs sub ebp,esp
  4161d9:	and    BYTE PTR [ebp-0x29],bh
  4161dc:	and    BYTE PTR [ecx],cl
  4161de:	jge    0x416232
  4161e0:	mov    dh,0x3
  4161e2:	test   BYTE PTR [edx+edx*8+0x5729f7a6],al
  4161e9:	or     al,0x6
  4161eb:	and    bh,BYTE PTR [ecx]
  4161ed:	popa   
  4161ee:	cmp    al,0xb4
  4161f0:	dec    edx
  4161f1:	shr    BYTE PTR [eax],1
  4161f3:	jmp    0x41617e
  4161f5:	shl    BYTE PTR [ebx],1
  4161f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161f8:	dec    BYTE PTR [esi]
  4161fa:	into   
  4161fb:	pop    esp
  4161fc:	push   ebx
  4161fd:	mov    bl,0xf9
  4161ff:	adc    al,0x1e
  416201:	dec    ebp
  416202:	ins    DWORD PTR es:[edi],dx
  416203:	icebp  
  416204:	into   
  416205:	mov    dl,0x61
  416207:	push   0x43
  416209:	push   0x59ba7b88
  41620e:	nop
  41620f:	add    edi,0xffffffe3
  416212:	mov    esp,0x5d194203
  416217:	scas   al,BYTE PTR es:[edi]
  416218:	imul   BYTE PTR [edx+0x4b]
  41621b:	adc    eax,0x7ffeb147
  416220:	ret    0xf511
  416223:	jmp    0x79e8:0xc460484f
  41622a:	(bad)  
  41622b:	nop
  41622c:	data16 fbld TBYTE PTR [ebp-0x3dc80890]
  416234:	and    DWORD PTR [ebx-0x37],ebp
  416237:	dec    edx
  416238:	xchg   ebx,eax
  416239:	sbb    BYTE PTR [esi-0x4eda6c8c],ah
  41623f:	arpl   WORD PTR [esi+0x2a],sp
  416242:	enter  0x8cfb,0x98
  416246:	xchg   ebp,eax
  416247:	call   0x2496:0xb2489ae8
  41624e:	das    
  41624f:	lods   al,BYTE PTR ds:[esi]
  416250:	icebp  
  416251:	cmp    DWORD PTR [esi+0x13],ebx
  416254:	enter  0x8f6e,0xb9
  416258:	test   DWORD PTR ds:0x7d87a141,edi
  41625e:	jo     0x41629c
  416260:	mov    dl,bh
  416262:	rcr    edi,1
  416264:	scas   al,BYTE PTR es:[edi]
  416265:	push   ss
  416266:	sbb    ah,BYTE PTR [eax-0x5c821e9c]
  41626c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41626d:	pop    edx
  41626e:	stos   DWORD PTR es:[edi],eax
  41626f:	test   eax,0x5675d460
  416274:	cdq    
  416275:	lahf   
  416276:	scas   al,BYTE PTR es:[edi]
  416277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416278:	cli    
  416279:	lods   eax,DWORD PTR ds:[esi]
  41627a:	cmp    dl,BYTE PTR [edi+0x589e4f7c]
  416280:	jno    0x41624b
  416282:	mov    ebp,0x8b4a3ebd
  416287:	xlat   BYTE PTR ds:[ebx]
  416288:	repz mov eax,DWORD PTR [eax-0x23e3e081]
  41628f:	mov    edx,0xf4791a39
  416294:	mov    ah,0x59
  416296:	hlt    
  416297:	jmp    0x41627e
  416299:	xor    ebp,edi
  41629b:	(bad)  
  41629c:	iret   
  41629d:	mov    ch,0x61
  41629f:	push   esi
  4162a0:	mul    DWORD PTR [edi]
  4162a2:	xor    DWORD PTR [esi-0x7bec813a],esi
  4162a8:	jp     0x416276
  4162aa:	idiv   DWORD PTR [esi]
  4162ac:	in     al,dx
  4162ad:	mov    dl,0x87
  4162af:	and    eax,DWORD PTR [edi-0x7f4fa740]
  4162b5:	add    BYTE PTR [edx+0x7ac97995],bh
  4162bb:	cmp    al,0x39
  4162bd:	outs   dx,BYTE PTR ds:[esi]
  4162be:	xor    eax,0x459492e6
  4162c3:	ror    BYTE PTR [ecx+eiz*8-0x11],1
  4162c7:	nop
  4162c8:	sbb    al,0x54
  4162ca:	inc    ebp
  4162cb:	hlt    
  4162cc:	lahf   
  4162cd:	mov    al,0x70
  4162cf:	les    ebp,FWORD PTR [eax]
  4162d1:	pusha  
  4162d2:	push   esp
  4162d3:	jae    0x4162b7
  4162d5:	or     ebp,edx
  4162d7:	ins    DWORD PTR es:[edi],dx
  4162d8:	add    BYTE PTR [ebx],0x25
  4162db:	dec    esp
  4162dc:	lods   eax,DWORD PTR ds:[esi]
  4162de:	test   BYTE PTR [edi-0x1f],0x4
  4162e2:	jg     0x416293
  4162e4:	and    dh,bl
  4162e6:	gs mov edx,0xa75a38b4
  4162ec:	repz dec edi
  4162ee:	mov    edi,0x31ac13e3
  4162f3:	(bad)  
  4162f4:	aas    
  4162f5:	and    BYTE PTR [ecx+0x62],0x44
  4162f9:	ins    DWORD PTR es:[edi],dx
  4162fa:	(bad)  
  4162fb:	sbb    al,0x89
  4162fd:	adc    eax,0x4ccc646a
  416302:	cld    
  416303:	leave  
  416304:	icebp  
  416305:	mov    ds:0x6f23f711,al
  41630a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41630b:	sub    ebx,DWORD PTR [eax]
  41630d:	xchg   edi,eax
  41630e:	ss mov ch,0xb0
  416311:	mov    cl,0x8e
  416313:	and    eax,0x738f7b03
  416318:	xchg   esp,eax
  416319:	imul   DWORD PTR [edi+edx*8]
  41631c:	xchg   esi,eax
  41631d:	ins    DWORD PTR es:[edi],dx
  41631e:	out    dx,eax
  41631f:	popf   
  416320:	icebp  
  416321:	or     BYTE PTR [edi-0x3f1df070],dl
  416327:	aam    0xda
  416329:	mov    ds:0x996d399b,eax
  41632e:	data16 or bl,dh
  416331:	fucom  st(4)
  416333:	sub    DWORD PTR [ecx+ecx*4],edi
  416336:	lods   eax,DWORD PTR ds:[esi]
  416337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416338:	xor    ecx,DWORD PTR [ebp+0x61944e64]
  41633e:	lea    eax,[ecx]
  416340:	mov    ah,0xa9
  416342:	dec    esi
  416343:	stos   DWORD PTR es:[edi],eax
  416344:	jne    0x4162fb
  416346:	pop    ecx
  416347:	and    BYTE PTR [edx-0x5321b02b],0x22
  41634e:	(bad)  
  416350:	das    
  416351:	mov    al,ds:0x70846e6d
  416356:	inc    edx
  416357:	retf   0x315d
  41635a:	and    bh,ch
  41635c:	out    0x7b,al
  41635e:	xor    al,0x7e
  416360:	mov    ebx,0x322824ee
  416365:	push   esi
  416366:	and    dh,ch
  416368:	test   DWORD PTR [ebp+0x5a],esi
  41636b:	and    DWORD PTR [ecx+0x156dd440],eax
  416371:	mov    ah,0x6e
  416373:	fnclex 
  416375:	les    edx,FWORD PTR [ecx-0x38]
  416378:	sub    esi,ebp
  41637a:	and    BYTE PTR [ecx+0x57],al
  41637d:	loopne 0x4163ba
  41637f:	in     eax,0xe9
  416381:	add    eax,DWORD PTR [edi+eiz*4+0x76]
  416385:	push   esp
  416386:	test   BYTE PTR [ebx-0x4],0x68
  41638a:	ror    ebp,1
  41638c:	jl     0x4163d9
  41638e:	js     0x4163a0
  416390:	enter  0xc6c4,0x9d
  416394:	adc    dh,bh
  416396:	and    al,0xc8
  416398:	ja     0x416389
  41639a:	sbb    esp,DWORD PTR [ebx-0x19]
  41639d:	test   BYTE PTR [ebx+0x2580760a],ch
  4163a3:	popf   
  4163a4:	mov    ds,esp
  4163a6:	jo     0x41636b
  4163a8:	paddsw mm5,QWORD PTR [edx]
  4163ab:	inc    edx
  4163ac:	cld    
  4163ad:	jp     0x416395
  4163af:	dec    ebx
  4163b0:	cs repz jp 0x416335
  4163b4:	retf   0x842f
  4163b7:	sar    DWORD PTR [eax],cl
  4163b9:	jns    0x416341
  4163bb:	xchg   edx,eax
  4163bc:	dec    edx
  4163bd:	sti    
  4163be:	dec    edx
  4163bf:	sub    cl,bl
  4163c1:	mov    edx,0xc2932d1f
  4163c6:	imul   esi,eax,0xcd342800
  4163cc:	jp     0x4163a1
  4163ce:	mov    ebp,0x6a991f9
  4163d3:	test   al,0x2d
  4163d5:	sub    bh,BYTE PTR [edx+ebp*1]
  4163d8:	loope  0x41641f
  4163da:	aas    
  4163db:	int    0xc8
  4163dd:	sbb    BYTE PTR [ebx+0x44],0x2c
  4163e1:	pop    ecx
  4163e2:	loope  0x41638b
  4163e4:	(bad)  
  4163e5:	fdecstp 
  4163e7:	sbb    eax,0x25df0a9f
  4163ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163ed:	jo     0x4163e7
  4163ef:	jl     0x4163bd
  4163f1:	or     BYTE PTR [eax+0x4c47d266],al
  4163f7:	rcr    ah,1
  4163f9:	inc    ebp
  4163fa:	jbe    0x4163be
  4163fc:	mov    al,ds:0x78ed911
  416401:	rcr    BYTE PTR [esi-0x1809305c],1
  416407:	jle    0x416440
  416409:	lea    ebp,[edi+ebx*1+0x468820d9]
  416410:	mov    bh,0x1c
  416412:	jg     0x4163cf
  416414:	jmp    0x86b73e3d
  416419:	ja     0x416485
  41641b:	in     al,0x80
  41641d:	mov    esi,0x2b279a32
  416422:	mov    eax,esp
  416424:	or     BYTE PTR [ebp+0x43],0x6c
  416428:	push   esi
  416429:	mov    bh,0xbc
  41642b:	push   ebx
  41642c:	sub    al,BYTE PTR [edi]
  41642e:	jo     0x416424
  416430:	or     edi,DWORD PTR [edx-0x6465596d]
  416436:	xchg   ebp,eax
  416437:	mov    ds:0xb8979cfd,eax
  41643c:	inc    ecx
  41643d:	jecxz  0x416400
  41643f:	les    esp,FWORD PTR [esi]
  416441:	ss icebp 
  416443:	int3   
  416444:	scas   eax,DWORD PTR es:[edi]
  416445:	ror    DWORD PTR [edx-0x12032e95],0xce
  41644c:	jl     0x416496
  41644e:	test   al,0x68
  416450:	xchg   ebx,eax
  416451:	fisubr DWORD PTR ds:0x8e5c24fb
  416457:	and    DWORD PTR [esi],eax
  416459:	and    DWORD PTR [edx+0x3c],edx
  41645c:	mov    ebp,0x4ca668f0
  416461:	test   BYTE PTR [edx-0x61],cl
  416464:	adc    eax,0x857310d7
  416469:	mov    ds:0x8f67a31b,al
  41646e:	lahf   
  41646f:	xor    al,0x7
  416471:	hlt    
  416472:	call   0x4151f40f
  416477:	fs jmp 0x637ce4f5
  41647d:	push   0xffffffe8
  41647f:	loop   0x416434
  416481:	dec    edx
  416482:	push   ecx
  416483:	fnstcw WORD PTR [edx+0x16e72870]
  416489:	imul   esp,DWORD PTR [esp+ecx*4-0x21],0x16d68d44
  416491:	sub    eax,0xee3367d9
  416496:	mov    ah,0xb9
  416498:	hlt    
  416499:	test   BYTE PTR [eax-0x68],ch
  41649c:	mov    cl,BYTE PTR [edx]
  41649e:	mov    esi,0xd6139c2
  4164a3:	xor    eax,0x94c253a6
  4164a8:	and    eax,DWORD PTR ds:0x9e025526
  4164ae:	out    0x35,al
  4164b0:	push   ecx
  4164b1:	mov    edi,0x22dcb0c1
  4164b6:	mov    bh,0x8
  4164b8:	pop    esp
  4164b9:	xchg   ebp,eax
  4164ba:	cli    
  4164bb:	ds adc eax,0xf3796f9d
  4164c1:	lock add ch,0x5e
  4164c5:	sub    BYTE PTR [edi+0x4d],dh
  4164c8:	mov    DWORD PTR [ebx+0x24],ecx
  4164cb:	outs   dx,BYTE PTR ds:[esi]
  4164cc:	repnz mov edi,0xdaf435a5
  4164d2:	xchg   edx,eax
  4164d3:	inc    edx
  4164d4:	cmc    
  4164d5:	test   eax,0x6a622a48
  4164da:	cmp    al,0xda
  4164dc:	cdq    
  4164dd:	jo     0x4164b3
  4164df:	sbb    eax,0x80a262b
  4164e4:	sub    BYTE PTR [eax-0x68223c18],0xc9
  4164eb:	pop    esi
  4164ec:	repnz scas eax,DWORD PTR es:[edi]
  4164ee:	mov    bh,BYTE PTR [eax-0x35]
  4164f1:	and    al,0xd6
  4164f3:	jnp    0x4164db
  4164f5:	ret    0x7438
  4164f8:	xchg   esi,eax
  4164f9:	mov    al,ds:0x4137269d
  4164fe:	stos   BYTE PTR es:[edi],al
  4164ff:	fstp   TBYTE PTR [edx-0x1d]
  416502:	mov    edx,0xaeb44cd0
  416507:	mov    edi,0xad254d87
  41650c:	clc    
  41650d:	sti    
  41650e:	and    esi,edi
  416510:	cdq    
  416511:	aas    
  416512:	lock xor ebp,DWORD PTR [ebx]
  416515:	dec    eax
  416516:	mov    ebp,?
  416518:	sub    al,0x2c
  41651a:	cmp    eax,0xd8e7ad7b
  41651f:	fnsave [esi-0x6a]
  416522:	sbb    al,0xd2
  416524:	popa   
  416525:	rcr    ebx,cl
  416527:	push   edx
  416528:	xchg   BYTE PTR [eax+ecx*4+0x63],dl
  41652c:	stos   DWORD PTR es:[edi],eax
  41652d:	cmp    al,0x85
  41652f:	xor    BYTE PTR [eax-0x54],ch
  416532:	div    cl
  416534:	dec    esp
  416535:	ds xor edx,edx
  416538:	push   esi
  416539:	jp     0x41653f
  41653b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41653c:	sub    DWORD PTR [eax+0x5c904cb],0x1173199c
  416546:	pop    ds
  416547:	xchg   ebp,eax
  416548:	xchg   esp,eax
  416549:	push   edi
  41654a:	push   es
  41654b:	push   esi
  41654c:	loopne 0x41657d
  41654e:	push   0xffffffec
  416550:	push   ecx
  416551:	jmp    0xb71f:0x30235481
  416558:	cmp    eax,0x5d065e4b
  41655d:	js     0x4165b4
  41655f:	(bad)  
  416560:	(bad)  
  416562:	push   ss
  416563:	in     al,dx
  416564:	xor    bl,0x1a
  416567:	inc    ebx
  416568:	jge    0x416561
  41656a:	inc    edx
  41656b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41656c:	fisttp DWORD PTR [edx]
  41656e:	imul   edi,ecx,0xffffffc8
  416571:	sub    al,0x85
  416573:	push   0xa7471f10
  416578:	ror    DWORD PTR [esi-0x55987d16],0xcd
  41657f:	push   ebp
  416580:	dec    esi
  416581:	out    dx,eax
  416582:	pushf  
  416583:	loop   0x416575
  416585:	ret    
  416586:	or     al,0x93
  416588:	mov    BYTE PTR [edi],bl
  41658a:	and    ecx,esp
  41658c:	fidiv  WORD PTR [edi]
  41658e:	xchg   edi,eax
  41658f:	inc    ebx
  416590:	jp     0x416568
  416592:	mov    cl,0xaf
  416594:	aas    
  416595:	mov    bl,0xca
  416597:	inc    edx
  416598:	in     eax,dx
  416599:	outs   dx,BYTE PTR ds:[esi]
  41659a:	pop    eax
  41659b:	mov    WORD PTR [edx],?
  41659d:	out    0xba,eax
  41659f:	leave  
  4165a0:	pop    ds
  4165a1:	mov    ecx,0xf92e50d
  4165a6:	sub    al,0x6a
  4165a8:	add    ecx,edi
  4165aa:	lahf   
  4165ab:	mov    dh,0xe0
  4165ad:	mov    cl,0x17
  4165af:	push   esi
  4165b0:	push   edx
  4165b1:	(bad)  
  4165b2:	test   BYTE PTR [edi],dh
  4165b4:	sbb    ecx,ecx
  4165b6:	ret    
  4165b7:	mov    ebp,DWORD PTR [ebx-0x2ba8e031]
  4165bd:	loopne 0x416565
  4165bf:	inc    edx
  4165c0:	loop   0x416637
  4165c2:	in     eax,dx
  4165c3:	mov    al,ds:0x988ca0af
  4165c8:	popa   
  4165c9:	mov    ah,0xb3
  4165cb:	push   ebx
  4165cc:	ins    BYTE PTR es:[edi],dx
  4165cd:	xchg   edx,eax
  4165ce:	(bad)  
  4165cf:	ficomp WORD PTR [eax]
  4165d1:	or     DWORD PTR [edx],esi
  4165d3:	add    eax,0xbf62e36d
  4165d8:	out    dx,eax
  4165d9:	repnz xchg edx,eax
  4165db:	(bad)  
  4165dc:	xchg   esp,eax
  4165dd:	cmp    esi,DWORD PTR [ebx-0x26]
  4165e0:	into   
  4165e1:	leave  
  4165e2:	dec    edi
  4165e3:	xchg   edx,eax
  4165e4:	dec    ebp
  4165e5:	in     eax,0x5c
  4165e7:	xchg   edx,eax
  4165e8:	jmp    DWORD PTR [ecx+0x2]
  4165eb:	xlat   BYTE PTR ds:[ebx]
  4165ec:	dec    ebp
  4165ed:	fist   DWORD PTR [edi]
  4165ef:	push   ss
  4165f0:	jmp    0x4165fb
  4165f2:	pop    ebp
  4165f3:	inc    esp
  4165f4:	mov    ch,0x64
  4165f6:	cli    
  4165f7:	xor    eax,0x77817743
  4165fc:	iret   
  4165fd:	xchg   edx,eax
  4165fe:	sar    DWORD PTR [esi],cl
  416600:	sbb    DWORD PTR [edx],edx
  416602:	out    dx,eax
  416603:	fdiv   st(3),st
  416605:	stos   BYTE PTR es:[edi],al
  416606:	adc    al,0xd5
  416608:	not    BYTE PTR [esi+0x1f]
  41660b:	test   al,0x36
  41660d:	outs   dx,BYTE PTR ds:[esi]
  41660e:	sbb    BYTE PTR [edx-0x4ce88806],bh
  416614:	adc    dh,BYTE PTR [esi+0x5b98e060]
  41661a:	jns    0x416698
  41661c:	push   esi
  41661d:	push   ds
  41661e:	(bad)  
  41661f:	rol    bh,cl
  416621:	sbb    eax,0x322dfbea
  416626:	mov    eax,0xcff3b50b
  41662b:	inc    esp
  41662c:	retf   
  41662d:	out    dx,al
  41662e:	shr    BYTE PTR [ecx+0x308984e1],0x1d
  416635:	out    0xa3,al
  416637:	cli    
  416638:	je     0x41669a
  41663a:	addr16 (bad) 
  41663c:	pop    ebp
  41663d:	mov    eax,0x1a1b9f40
  416642:	retf   0x4cdd
  416645:	ja     0x4166c6
  416647:	call   0xf372:0x2157c75d
  41664e:	or     al,0x5d
  416650:	in     eax,0x2e
  416652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416653:	xchg   ebx,eax
  416654:	clc    
  416655:	xchg   ecx,eax
  416656:	in     al,0x77
  416658:	daa    
  416659:	rcr    DWORD PTR ds:0xcafa4ca1,cl
  41665f:	int3   
  416660:	xor    BYTE PTR [esi+0x2a042000],bh
  416666:	ins    BYTE PTR es:[edi],dx
  416667:	xor    eax,0x7e7e1c74
  41666c:	nop
  41666d:	cdq    
  41666e:	mov    ecx,0xcf2f4200
  416673:	(bad)  
  416674:	out    dx,eax
  416675:	add    al,0x6c
  416677:	lock xchg ebp,eax
  416679:	ins    DWORD PTR es:[edi],dx
  41667a:	inc    edi
  41667b:	mov    BYTE PTR ds:0xf9e88ca5,bh
  416681:	inc    esp
  416682:	(bad)  
  416683:	daa    
  416684:	fist   WORD PTR [esi+0x7a9f2df9]
  41668a:	xchg   esi,eax
  41668b:	out    0xa6,eax
  41668d:	outs   dx,BYTE PTR ds:[esi]
  41668e:	or     BYTE PTR [edx+0x14478e6a],bh
  416694:	dec    ecx
  416695:	or     DWORD PTR gs:[ecx],edx
  416698:	sbb    DWORD PTR [ecx],esi
  41669a:	data16 (bad) 
  41669c:	idiv   DWORD PTR [ebp+0x91dcfda]
  4166a2:	lods   al,BYTE PTR ds:[esi]
  4166a3:	add    BYTE PTR ds:[edi],0xcf
  4166a7:	outs   dx,DWORD PTR ds:[esi]
  4166a8:	daa    
  4166a9:	(bad)  
  4166aa:	popf   
  4166ab:	sub    bl,ch
  4166ad:	push   edi
  4166ae:	mov    ds:0xb31ed83c,al
  4166b3:	mov    DWORD PTR [edi-0x53e25d38],eax
  4166b9:	test   eax,0xb442ef6a
  4166be:	idiv   DWORD PTR [edx+0x4f]
  4166c1:	add    ch,al
  4166c3:	push   ds
  4166c4:	inc    ecx
  4166c5:	cmp    ah,BYTE PTR [edx]
  4166c7:	xor    al,0x4
  4166c9:	push   edx
  4166ca:	mov    dl,0x2e
  4166cc:	gs jp  0x4166e5
  4166cf:	pop    di
  4166d1:	rcl    DWORD PTR [ecx+0x123f1722],0xa7
  4166d8:	std    
  4166d9:	sbb    dl,cl
  4166db:	sbb    al,0xa9
  4166dd:	out    0x57,eax
  4166df:	and    ecx,DWORD PTR ss:[edi-0x42]
  4166e3:	and    al,0x30
  4166e5:	mov    bh,0x3e
  4166e7:	fs in  eax,dx
  4166e9:	lods   al,BYTE PTR ds:[esi]
  4166ea:	icebp  
  4166eb:	icebp  
  4166ec:	dec    ebp
  4166ed:	xor    DWORD PTR [edx+0x54],edx
  4166f0:	imul   ebp,DWORD PTR [edx],0x574a30f4
  4166f6:	xor    BYTE PTR [eax-0x5778971e],cl
  4166fc:	ss push ecx
  4166fe:	aad    0xa3
  416700:	ficom  DWORD PTR [ebx+0x1552d13d]
  416706:	xlat   BYTE PTR ds:[ebx]
  416707:	repz and DWORD PTR ss:[edx+0x507b2bf3],esp
  41670f:	aaa    
  416710:	mov    al,ds:0x3f192063
  416715:	inc    ecx
  416716:	add    bl,cl
  416718:	pop    edi
  416719:	fiadd  WORD PTR [ecx-0x51]
  41671c:	outs   dx,DWORD PTR ds:[esi]
  41671d:	xlat   BYTE PTR ds:[ebx]
  41671e:	or     DWORD PTR [ecx],ecx
  416720:	mov    BYTE PTR [edx],bh
  416722:	or     BYTE PTR [esi],ah
  416724:	push   ss
  416725:	jo     0x4167a2
  416727:	test   eax,0x9d1223bb
  41672c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672d:	mov    BYTE PTR [esi+0x7e14fa07],bh
  416733:	push   ebx
  416734:	imul   DWORD PTR [edx]
  416736:	xor    eax,0xb76c8d2a
  41673b:	std    
  41673c:	xor    eax,0x4b6ad2d3
  416741:	xchg   edx,eax
  416742:	dec    eax
  416743:	repz jo 0x4166dd
  416746:	pop    es
  416747:	out    dx,eax
  416748:	adc    bl,al
  41674a:	ins    DWORD PTR es:[edi],dx
  41674b:	push   ebx
  41674c:	mov    dl,0xb
  41674e:	xchg   ebp,eax
  41674f:	sub    esi,DWORD PTR [esi-0x6d4bd024]
  416755:	(bad)  
  416756:	frstor [edi]
  416758:	inc    eax
  416759:	lods   al,BYTE PTR ds:[esi]
  41675a:	hlt    
  41675b:	pop    esi
  41675c:	push   eax
  41675d:	sbb    al,0x24
  41675f:	push   edx
  416760:	and    ebx,edi
  416762:	xchg   ebp,eax
  416763:	js     0x416738
  416765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416766:	out    dx,al
  416767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416768:	pop    ds
  416769:	inc    ecx
  41676a:	js     0x4166f0
  41676c:	out    0xe3,al
  41676e:	jp     0x4167a6
  416770:	sub    DWORD PTR [ecx-0x403996a9],edi
  416776:	mov    esi,0x458c9247
  41677b:	shr    BYTE PTR [edi+0x6293e847],cl
  416781:	icebp  
  416782:	mov    esp,0x4a3266fd
  416787:	fisub  DWORD PTR [esp+eax*8]
  41678a:	xchg   esp,eax
  41678b:	mov    esp,0x8130dcb1
  416790:	test   al,0x18
  416792:	xchg   esp,eax
  416793:	xchg   ebx,eax
  416794:	js     0x41679e
  416796:	and    al,0xd9
  416798:	ins    DWORD PTR es:[edi],dx
  416799:	int3   
  41679a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41679b:	jle    0x41674d
  41679d:	xchg   esp,eax
  41679e:	sbb    ah,al
  4167a0:	mov    edi,0x43999488
  4167a5:	test   al,0x5a
  4167a7:	inc    edi
  4167a8:	in     al,dx
  4167a9:	xor    BYTE PTR [edi+ecx*1],bl
  4167ac:	fcmovnu st,st(0)
  4167ae:	pop    ds
  4167af:	sti    
  4167b0:	cmp    dl,BYTE PTR [ecx+0x63]
  4167b3:	sti    
  4167b4:	ins    DWORD PTR es:[edi],dx
  4167b5:	test   eax,0xacb59f23
  4167ba:	jno    0x416755
  4167bc:	add    eax,0x87792c9d
  4167c1:	cmp    dh,0x88
  4167c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c5:	(bad)  
  4167c6:	dec    bl
  4167c8:	ret    
  4167c9:	data16 jge 0x416792
  4167cc:	jno    0x4167ec
  4167ce:	cmp    di,ax
  4167d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167d2:	adc    al,0xd
  4167d4:	push   ss
  4167d5:	dec    edi
  4167d6:	xchg   edi,eax
  4167d7:	push   ds
  4167d8:	rol    DWORD PTR [ecx-0x68475d7c],cl
  4167de:	xor    eax,0x1d5bbcfc
  4167e3:	adc    edi,DWORD PTR [eax]
  4167e5:	inc    esi
  4167e6:	popa   
  4167e7:	mov    edx,0xc97baaab
  4167ec:	jbe    0x416787
  4167ee:	lds    esp,FWORD PTR [ebp-0x70]
  4167f1:	retf   
  4167f2:	into   
  4167f3:	add    bl,bh
  4167f5:	mov    ecx,edx
  4167f7:	fadd   QWORD PTR [ebx]
  4167f9:	jb     0x4167c1
  4167fb:	mov    ch,0x3c
  4167fd:	hlt    
  4167fe:	xchg   ecx,eax
  4167ff:	fidivr WORD PTR [ecx+0x4878f360]
  416805:	mov    al,0xfb
  416807:	or     BYTE PTR ds:0xde75885f,cl
  41680d:	sti    
  41680e:	mov    ecx,0x6b8ab89c
  416813:	mov    eax,0xf61a959d
  416818:	dec    eax
  416819:	push   ss
  41681a:	call   0xeae82138
  41681f:	xchg   BYTE PTR [bp+di-0x29],bh
  416823:	fwait
  416824:	lds    edi,FWORD PTR ds:0x645f3042
  41682a:	outs   dx,BYTE PTR ds:[esi]
  41682b:	out    dx,eax
  41682c:	(bad)  
  41682d:	pop    ds
  41682e:	in     eax,0x87
  416830:	xchg   BYTE PTR ds:0xfdc469b2,ch
  416836:	jl     0x416873
  416838:	test   edi,0xaf68d7a0
  41683e:	push   edx
  41683f:	call   0xb8d9:0x69728da0
  416846:	push   ss
  416847:	pop    ebx
  416848:	mov    edi,0xd79601b2
  41684d:	in     al,dx
  41684e:	out    dx,eax
  41684f:	adc    al,BYTE PTR [ecx-0x54]
  416852:	pop    edi
  416853:	aam    0x6f
  416855:	lock adc cl,dl
  416858:	push   eax
  416859:	retf   
  41685a:	(bad)  
  41685c:	pusha  
  41685d:	pusha  
  41685e:	(bad)  
  416860:	mov    edx,0xb7f5145f
  416865:	sbb    dl,BYTE PTR [esi+0x5f]
  416868:	mov    edi,0x44f2840f
  41686d:	test   DWORD PTR [ebp+0x12],esp
  416870:	or     al,0x9f
  416872:	jo     0x4168f0
  416874:	jo     0x4168f5
  416876:	sar    ecx,0x16
  416879:	jmp    0x745e:0x1192e17b
  416880:	push   esp
  416881:	mov    cs,WORD PTR [edi-0x5c]
  416884:	dec    esi
  416885:	cmp    dl,BYTE PTR [edx-0x3006aa08]
  41688b:	adc    eax,ecx
  41688d:	sub    ebp,ebp
  41688f:	jbe    0x416900
  416891:	lahf   
  416892:	sti    
  416893:	sahf   
  416894:	and    edx,DWORD PTR [ebx+0x58]
  416897:	idiv   BYTE PTR [edi]
  416899:	(bad)
  41689c:	or     al,0x36
  41689e:	aas    
  41689f:	(bad)
  4168a4:	sahf   
  4168a5:	js     0x416923
  4168a7:	mov    eax,DWORD PTR [ecx-0x52]
  4168aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168ab:	iret   
  4168ac:	cdq    
  4168ad:	rcl    DWORD PTR es:[ebp+0x6b],1
  4168b1:	int3   
  4168b2:	das    
  4168b3:	shl    BYTE PTR [ebx+0x12],cl
  4168b6:	dec    ebx
  4168b7:	je     0x4168ae
  4168b9:	aad    0x14
  4168bb:	jae    0x41693b
  4168bd:	lds    ecx,FWORD PTR [ecx+0xf]
  4168c0:	push   cs
  4168c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168c3:	test   DWORD PTR [edi+ecx*8],edx
  4168c6:	mov    dl,0x39
  4168c8:	mov    ch,0x25
  4168ca:	test   DWORD PTR [ecx+0x2c],edi
  4168cd:	pop    es
  4168ce:	int    0x10
  4168d0:	(bad)  
  4168d1:	(bad)
  4168d4:	pop    edi
  4168d5:	xlat   BYTE PTR ds:[ebx]
  4168d6:	sti    
  4168d7:	or     bl,BYTE PTR [ebx]
  4168d9:	das    
  4168da:	xchg   ebx,eax
  4168db:	or     esp,DWORD PTR [edi+0x26]
  4168de:	push   0xffffff93
  4168e0:	gs aad 0x51
  4168e3:	inc    eax
  4168e4:	std    
  4168e5:	fadd   DWORD PTR [esi-0x632efaae]
  4168eb:	das    
  4168ec:	dec    edx
  4168ed:	or     ebp,DWORD PTR [esi]
  4168ef:	pop    esi
  4168f0:	xchg   esi,eax
  4168f2:	mov    eax,ds:0xa696a56e
  4168f7:	outs   dx,DWORD PTR es:[esi]
  4168f9:	sbb    esp,DWORD PTR [edi+0x7176fd61]
  4168ff:	push   0xfffffff1
  416901:	adc    DWORD PTR [ebp+0x79bae690],edx
  416907:	or     ebx,DWORD PTR [esp+ebp*4+0x1]
  41690b:	ret    
  41690c:	fld    QWORD PTR [eax+0x1a]
  41690f:	push   ebx
  416910:	fs scas al,BYTE PTR es:[edi]
  416912:	stos   DWORD PTR es:[edi],eax
  416913:	xor    ebp,edi
  416915:	in     al,0xd5
  416917:	bound  ebp,QWORD PTR [ebx+0x464ec832]
  41691d:	mov    esp,0x3cf80ee6
  416922:	enter  0x22e0,0x1d
  416926:	dec    ecx
  416927:	les    ebp,FWORD PTR [ecx+0x24c37e31]
  41692d:	test   dl,dl
  41692f:	(bad)  
  416930:	adc    al,0xb1
  416932:	in     al,dx
  416933:	adc    DWORD PTR ds:0x252cb54e,ebp
  416939:	and    cl,BYTE PTR [eax-0x3c86dd95]
  41693f:	jp     0x416964
  416941:	in     eax,0xc2
  416943:	pop    edx
  416944:	ret    
  416945:	mov    esp,0x89cc2af0
  41694a:	fidivr DWORD PTR [edx-0x64]
  41694d:	das    
  41694e:	push   eax
  41694f:	or     bh,BYTE PTR [ebx+0x7438a346]
  416955:	arpl   bp,ax
  416957:	mov    bl,0x10
  416959:	add    BYTE PTR [edx],bl
  41695b:	sbb    BYTE PTR [edi],dh
  41695d:	push   eax
  41695e:	jnp    0x4169b8
  416960:	add    eax,0x70e136aa
  416965:	push   0xc
  416967:	inc    eax
  416968:	sbb    DWORD PTR [ecx-0x6d121be6],ebx
  41696e:	inc    esp
  41696f:	imul   esi,edx,0x259f55dd
  416975:	dec    edi
  416976:	frstor [edx+0x1a3a5899]
  41697c:	sbb    al,0x54
  41697e:	cld    
  41697f:	adc    eax,0x3485c5ff
  416984:	test   al,0xab
  416986:	pusha  
  416987:	ror    BYTE PTR [ebx-0x5bacab9b],cl
  41698d:	mov    ds:0xf295c1e4,al
  416992:	xor    al,0x87
  416994:	xor    eax,0xc4ae7530
  416999:	lock push esp
  41699b:	ins    BYTE PTR es:[edi],dx
  41699c:	mov    ds:0x6416cb65,eax
  4169a1:	jb     0x4169f2
  4169a3:	xor    BYTE PTR [eax+0x64],bl
  4169a6:	cmc    
  4169a7:	std    
  4169a8:	pop    ebx
  4169a9:	nop
  4169aa:	cdq    
  4169ab:	adc    DWORD PTR [eax-0x10],edx
  4169ae:	cmp    DWORD PTR [edi-0x14],0x885fa64a
  4169b5:	fsubr  QWORD PTR [edi-0x3e]
  4169b8:	jnp    0x41696d
  4169ba:	xchg   ebx,eax
  4169bb:	(bad)  
  4169bc:	neg    eax
  4169be:	in     al,dx
  4169bf:	jge    0x416960
  4169c1:	scas   eax,DWORD PTR es:[edi]
  4169c2:	sahf   
  4169c3:	or     ah,BYTE PTR [esi-0x61]
  4169c6:	push   ebp
  4169c7:	test   eax,0xf82d134d
  4169cc:	jno    0x4169e6
  4169ce:	jo     0x416a09
  4169d0:	clc    
  4169d1:	arpl   WORD PTR [bx+di],ax
  4169d4:	sti    
  4169d5:	out    0xfd,al
  4169d7:	xchg   ebx,eax
  4169d8:	mov    al,ds:0x7636e2e3
  4169dd:	xor    ch,BYTE PTR [eax+0x2fe1a20c]
  4169e3:	int    0x8a
  4169e5:	rcr    dh,0x15
  4169e8:	outs   dx,BYTE PTR ds:[esi]
  4169e9:	adc    DWORD PTR [edi-0x5d7727f2],edx
  4169ef:	mov    esp,0x8b0fb720
  4169f4:	es test bl,dh
  4169f7:	mov    eax,0x6c0a3f92
  4169fc:	mov    dh,0x8c
  4169fe:	ja     0x416a1d
  416a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a01:	xor    eax,0x714481ac
  416a06:	rcl    ah,cl
  416a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a09:	cld    
  416a0a:	fld    QWORD PTR [eax-0x45]
  416a0d:	imul   ecx,DWORD PTR [eax],0xffffffc9
  416a10:	test   al,0xae
  416a12:	mov    esp,0x342cbb31
  416a17:	jmp    0x2b24230a
  416a1c:	repz arpl WORD PTR [esp+esi*8-0x5],di
  416a21:	lods   eax,DWORD PTR ds:[esi]
  416a22:	fdivr  st,st(0)
  416a24:	stos   DWORD PTR es:[edi],eax
  416a25:	pop    ebp
  416a26:	mov    dl,dh
  416a28:	ds xchg ebp,eax
  416a2a:	mov    esp,0x78090fcf
  416a2f:	cdq    
  416a30:	repz mov cl,0xb4
  416a33:	cld    
  416a34:	and    eax,0xb2533fc2
  416a39:	mov    bh,0xea
  416a3b:	sub    BYTE PTR [eiz*4-0x5e12a521],ch
  416a42:	pop    edi
  416a43:	cdq    
  416a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a45:	(bad)  
  416a46:	sub    esi,edi
  416a48:	leave  
  416a49:	pop    ds
  416a4a:	jns    0x416a22
  416a4c:	mov    dl,0x46
  416a4e:	push   es
  416a4f:	test   eax,0xc19d4384
  416a54:	fcom   QWORD PTR [edi+0xf]
  416a57:	jnp    0x416a56
  416a59:	push   edi
  416a5a:	test   al,0x79
  416a5c:	inc    eax
  416a5d:	mov    al,0x5e
  416a5f:	pop    ebp
  416a60:	(bad)  
  416a62:	leave  
  416a63:	loopne 0x416a10
  416a65:	mov    BYTE PTR [eax-0x1],bh
  416a68:	les    esi,FWORD PTR [eax+ebp*1-0x115b4cea]
  416a6f:	enter  0x3556,0x31
  416a73:	mov    ecx,0xba084d8b
  416a78:	loop   0x416a8f
  416a7a:	pop    esi
  416a7b:	cli    
  416a7c:	sub    edx,ecx
  416a7e:	add    edx,DWORD PTR [ebp-0x44]
  416a81:	mov    DWORD PTR [ebp-0x44],edx
  416a84:	mov    ecx,DWORD PTR [ebp+0x8]
  416a87:	xor    ecx,eax
  416a89:	add    ecx,esi
  416a8b:	jmp    0x418e4a
  416a90:	(bad)  
  416a91:	clc    
  416a92:	fsub   st,st(6)
  416a94:	mov    ah,0xc6
  416a96:	mov    ah,0xe8
  416a98:	mov    cl,0x4b
  416a9a:	cmp    DWORD PTR [edx+esi*2-0x290c30d4],edi
  416aa1:	push   edi
  416aa2:	jns    0x416b1e
  416aa4:	fcomp  DWORD PTR [edi+0x7a]
  416aa7:	jp     0x416b0c
  416aa9:	dec    esp
  416aaa:	dec    ebp
  416aab:	cmp    DWORD PTR [edx-0x1],edx
  416aae:	stos   DWORD PTR es:[edi],eax
  416aaf:	mov    ds:0x255ca4d7,eax
  416ab4:	outs   dx,BYTE PTR ds:[esi]
  416ab5:	ja     0x416afe
  416ab7:	sub    BYTE PTR ds:0x35fcd10a,0xa2
  416abe:	mov    ecx,0x85df9e0
  416ac3:	rol    DWORD PTR [ebp+0x79fceacf],1
  416ac9:	sub    al,0x42
  416acb:	xchg   esp,eax
  416acd:	loop   0x416abe
  416acf:	xor    cl,0x12
  416ad2:	lds    ecx,FWORD PTR ds:0x939a4691
  416ad8:	outs   dx,DWORD PTR ds:[esi]
  416ad9:	imul   ebx,DWORD PTR [ebp-0x47],0xffffffd8
  416add:	xor    ah,bl
  416adf:	dec    ecx
  416ae0:	and    bh,dh
  416ae2:	mov    ch,0x82
  416ae4:	jl     0x416b19
  416ae6:	inc    ebp
  416ae7:	rol    BYTE PTR [eax],0x2b
  416aea:	enter  0xaac8,0x45
  416aee:	push   esp
  416aef:	xchg   DWORD PTR [ebx+eiz*4-0x16],esi
  416af3:	xchg   ebp,eax
  416af4:	(bad)  
  416af6:	sub    al,0xbf
  416af8:	mov    bh,0x88
  416afa:	cmc    
  416afb:	fdivr  st(2),st
  416afd:	inc    esi
  416afe:	sub    bh,al
  416b00:	nop
  416b01:	inc    ebx
  416b02:	pop    ds
  416b03:	and    ecx,edx
  416b05:	or     eax,0x1970f52
  416b0a:	or     dl,BYTE PTR [ebx-0x13bab95]
  416b10:	inc    esi
  416b11:	and    DWORD PTR [edx+0x2f],edx
  416b14:	sti    
  416b15:	push   esi
  416b16:	out    0x1d,eax
  416b18:	xchg   esi,eax
  416b19:	pop    edi
  416b1a:	aam    0xb5
  416b1c:	ret    
  416b1d:	add    BYTE PTR [ebx-0x26],bh
  416b20:	xor    DWORD PTR [esi],esi
  416b22:	sub    ch,cl
  416b24:	xor    ch,al
  416b26:	sar    BYTE PTR [esi+0x62b70ed9],0xb9
  416b2d:	call   0xc050:0xc3611903
  416b34:	ror    DWORD PTR [edi],0xde
  416b37:	dec    esp
  416b38:	cli    
  416b39:	xor    al,0x6b
  416b3b:	outs   dx,DWORD PTR ds:[esi]
  416b3c:	push   ss
  416b3d:	(bad)  
  416b3e:	enter  0x972d,0x60
  416b42:	add    ah,BYTE PTR gs:[ebx]
  416b45:	dec    esp
  416b46:	sbb    BYTE PTR [ebp-0x58],ah
  416b49:	shl    BYTE PTR [ebp-0x72c77481],0xa2
  416b50:	adc    BYTE PTR [ecx+0x410e343d],0xc0
  416b57:	(bad)
  416b5b:	sar    BYTE PTR [eax+0x4],0x72
  416b5f:	xlat   BYTE PTR ds:[ebx]
  416b60:	adc    DWORD PTR [ebp-0x267faef3],esp
  416b66:	mov    DWORD PTR [ebx-0x28de2869],esi
  416b6c:	or     ch,BYTE PTR [eax]
  416b6e:	mov    eax,0x1b890129
  416b73:	leave  
  416b74:	stos   DWORD PTR es:[edi],eax
  416b75:	out    0x88,al
  416b77:	xchg   DWORD PTR [ebp+0xb05f62a],ebp
  416b7d:	sahf   
  416b7e:	add    edi,ebp
  416b80:	cmp    edi,DWORD PTR [ebx]
  416b82:	mov    WORD PTR [ecx],?
  416b84:	xchg   ebx,eax
  416b85:	mov    bh,0x63
  416b87:	xlat   BYTE PTR ds:[ebx]
  416b88:	pop    DWORD PTR [ecx]
  416b8a:	rol    BYTE PTR [edi],cl
  416b8c:	dec    ebx
  416b8d:	adc    al,0xec
  416b8f:	adc    esi,DWORD PTR [ecx+0x7775c40d]
  416b95:	sub    bl,BYTE PTR [esi+0x6293ccb4]
  416b9b:	(bad)  
  416b9c:	loopne 0x416b99
  416b9e:	jbe    0x416c18
  416ba0:	push   ecx
  416ba1:	out    0x75,eax
  416ba3:	scas   al,BYTE PTR es:[edi]
  416ba4:	jns    0x416bc0
  416ba6:	add    eax,0x152bcb9e
  416bab:	sti    
  416bac:	mov    bh,0xb4
  416bae:	shl    ah,1
  416bb0:	and    eax,0x3708e3a8
  416bb5:	in     eax,dx
  416bb6:	sbb    BYTE PTR ds:0xf88f8fcb,bh
  416bbc:	xchg   DWORD PTR [edx-0x358ab637],eax
  416bc2:	jns    0x416bf8
  416bc4:	nop
  416bc5:	sub    DWORD PTR [esi+0x62],0x77bab8f7
  416bcc:	cmp    esp,DWORD PTR [esi+0x1f2212ff]
  416bd2:	xor    BYTE PTR [edi],ch
  416bd4:	sar    BYTE PTR [edi],1
  416bd6:	in     eax,0x5e
  416bd8:	lahf   
  416bd9:	push   esp
  416bda:	or     eax,edx
  416bdc:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bde:	scas   al,BYTE PTR es:[edi]
  416bdf:	in     al,0x54
  416be1:	pop    ss
  416be2:	test   BYTE PTR [esi+ecx*1+0x40f426a],dl
  416be9:	mov    ds:0xcf3d8945,al
  416bee:	retf   
  416bef:	and    DWORD PTR [edx],ebx
  416bf1:	mov    ebx,0xb44cd78
  416bf6:	sub    BYTE PTR [edi],cl
  416bf8:	dec    esi
  416bf9:	adc    esi,DWORD PTR [edi-0x4b]
  416bfc:	(bad)  
  416bfd:	jecxz  0x416c1b
  416bff:	inc    esp
  416c00:	test   DWORD PTR [ebp-0x10ec87a5],ecx
  416c06:	outs   dx,DWORD PTR ds:[esi]
  416c07:	leave  
  416c08:	pop    edx
  416c09:	call   0x6763d339
  416c0e:	pushf  
  416c0f:	bswap  ebp
  416c11:	jg     0x416c2a
  416c13:	and    al,0x36
  416c15:	call   0xa452:0xf696af49
  416c1c:	shl    BYTE PTR [edi+0x597cf23a],0x72
  416c23:	ror    DWORD PTR [ebp-0x7d],cl
  416c26:	lods   al,BYTE PTR ds:[esi]
  416c27:	repnz xchg esp,eax
  416c29:	out    dx,al
  416c2a:	lds    eax,FWORD PTR [edx]
  416c2c:	imul   ebx,DWORD PTR [edi-0x21],0x7f
  416c30:	retf   0x190c
  416c33:	mov    ch,BYTE PTR [eax+ebx*4-0x571b71fb]
  416c3a:	sub    al,0x20
  416c3c:	cmp    DWORD PTR [ebp+esi*4+0x2408ce2f],esp
  416c43:	shl    BYTE PTR [esp+esi*8-0x13],1
  416c47:	not    BYTE PTR [edx-0x2f8a978c]
  416c4d:	xor    DWORD PTR [ebx-0x255f9938],0xffffff89
  416c54:	fcomp  QWORD PTR [ebx-0x49479bde]
  416c5a:	call   0xdfcd:0xe4a01e3f
  416c61:	jg     0x416c7e
  416c63:	aaa    
  416c64:	mov    eax,0x304e1931
  416c69:	mov    ebx,0xbb49d930
  416c6e:	leave  
  416c6f:	sbb    ebx,DWORD PTR ds:0xd51c28b2
  416c75:	loopne 0x416caa
  416c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c78:	outs   dx,BYTE PTR ds:[esi]
  416c79:	sbb    al,0x92
  416c7b:	test   al,0x9c
  416c7d:	push   edi
  416c7e:	js     0x416c86
  416c80:	xchg   esi,eax
  416c81:	pusha  
  416c82:	mov    ebp,eax
  416c84:	adc    edi,esi
  416c86:	leave  
  416c87:	or     DWORD PTR [eax-0xefbede7],esi
  416c8d:	jle    0x416d03
  416c8f:	cdq    
  416c90:	cmp    dl,BYTE PTR [edi-0x38]
  416c93:	sbb    ch,BYTE PTR [ecx+eiz*8-0x50]
  416c97:	jo     0x416c31
  416c99:	mov    ss,WORD PTR [ecx-0x83c2cb6]
  416c9f:	cmp    DWORD PTR [ebx],ebx
  416ca1:	sbb    al,0xfd
  416ca3:	add    cl,BYTE PTR [edx-0x1b]
  416ca6:	cmp    BYTE PTR [eax],0x28
  416ca9:	xchg   edi,eax
  416caa:	fnstcw WORD PTR [ecx]
  416cac:	mov    ebx,DWORD PTR [edx-0x14ca7caf]
  416cb2:	pusha  
  416cb3:	aam    0xc1
  416cb5:	push   edx
  416cb6:	(bad)  
  416cb7:	in     al,0x28
  416cb9:	push   ecx
  416cba:	xchg   esp,eax
  416cbb:	mov    dl,0xf5
  416cbd:	js     0x416d3d
  416cbf:	push   ebp
  416cc0:	cli    
  416cc1:	dec    ebx
  416cc2:	clc    
  416cc3:	div    DWORD PTR [edi]
  416cc5:	scas   eax,DWORD PTR es:[edi]
  416cc6:	add    BYTE PTR cs:[esi],dh
  416cc9:	cmc    
  416cca:	jp     0x416c6f
  416ccc:	dec    esp
  416ccd:	(bad)  
  416cce:	mov    ah,0xe2
  416cd0:	(bad)  
  416cd2:	fcomp  QWORD PTR [edi+eax*1+0x27]
  416cd6:	pop    esp
  416cd7:	xor    edi,DWORD PTR [ebx-0x41]
  416cda:	dec    eax
  416cdb:	ror    DWORD PTR [esi+0x4354d6c9],cl
  416ce1:	mov    ch,0xf5
  416ce3:	jne    0x416c82
  416ce5:	mov    eax,0x65ad3bb8
  416cea:	mov    DWORD PTR [ebp+0x66],0xe9f67ac1
  416cf1:	push   ebp
  416cf2:	ds add ah,dh
  416cf5:	stos   DWORD PTR es:[edi],eax
  416cf6:	ds mov ecx,0xc135e71e
  416cfc:	fstp   TBYTE PTR [esi+0x47cb964f]
  416d02:	maxps  xmm5,XMMWORD PTR [edi+0x1]
  416d06:	and    al,0x80
  416d08:	cmp    al,0xa6
  416d0a:	nop
  416d0b:	test   BYTE PTR [edx],bh
  416d0d:	push   0x439c5eef
  416d12:	outs   dx,BYTE PTR ds:[esi]
  416d13:	jge    0x416cc6
  416d15:	retf   0xb148
  416d18:	arpl   WORD PTR [esi],bp
  416d1a:	(bad)  
  416d1b:	and    ecx,DWORD PTR [edi+0x31f03470]
  416d21:	(bad)  
  416d22:	neg    DWORD PTR [ebx]
  416d24:	mov    esi,0x3c8b69a4
  416d29:	cdq    
  416d2a:	pop    esi
  416d2b:	inc    esp
  416d2c:	(bad)  
  416d2d:	jno    0x416d1a
  416d2f:	jae    0x416da6
  416d31:	mov    cl,0xa5
  416d33:	bound  ebx,QWORD PTR [eax+0x77]
  416d36:	mov    dh,0xd5
  416d38:	push   ebx
  416d39:	jb     0x416d31
  416d3b:	sahf   
  416d3c:	out    0xd4,al
  416d3e:	pusha  
  416d3f:	clc    
  416d40:	cdq    
  416d41:	(bad)  
  416d42:	mov    cl,0x51
  416d44:	xchg   BYTE PTR [eax-0x55a5bf05],cl
  416d4a:	leave  
  416d4b:	dec    ebp
  416d4c:	mov    edx,0x422dd481
  416d51:	add    edi,edx
  416d53:	fs dec ecx
  416d55:	xlat   BYTE PTR ds:[ebx]
  416d57:	not    bh
  416d59:	jmp    0xa9d37e3d
  416d5e:	imul   ebx,DWORD PTR [eax-0x80],0xffffffb5
  416d62:	idiv   DWORD PTR [esi+0x240be97c]
  416d68:	dec    ebp
  416d69:	(bad)  
  416d6a:	inc    esp
  416d6b:	es sub eax,0xf51b059f
  416d71:	mov    ch,0x79
  416d73:	pusha  
  416d74:	shr    BYTE PTR [ecx+ebp*4],1
  416d77:	int    0x2f
  416d79:	sbb    BYTE PTR [ebx-0x705ad4a2],cl
  416d7f:	in     al,dx
  416d80:	xchg   esp,eax
  416d81:	stos   BYTE PTR es:[edi],al
  416d82:	lods   eax,DWORD PTR ds:[esi]
  416d83:	iret   
  416d84:	cld    
  416d85:	ds inc edi
  416d87:	sub    eax,0x77131385
  416d8c:	ret    
  416d8d:	sub    DWORD PTR [edi+0x15e2ee3f],edx
  416d93:	push   cs
  416d94:	hlt    
  416d95:	mov    ds:0x7ea0b2fb,eax
  416d9a:	jnp    0x416e08
  416d9c:	sbb    al,bh
  416d9e:	mov    esi,0xb6315cf5
  416da3:	pop    eax
  416da4:	sub    DWORD PTR [edi-0x5b],eax
  416da7:	add    eax,0x7672b661
  416dac:	sbb    BYTE PTR [ebx+eiz*1-0x2a],dl
  416db0:	mov    edx,0x1a67bbe0
  416db5:	push   es
  416db6:	pop    ebp
  416db7:	fstenv [ebp-0x4f6ece75]
  416dbe:	sbb    al,0xa7
  416dc0:	test   DWORD PTR [eax-0x37e0e694],ecx
  416dc6:	jno    0x416de5
  416dc8:	dec    ecx
  416dc9:	jg     0x416e17
  416dcb:	inc    ecx
  416dcc:	jno    0x416dda
  416dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dcf:	iret   
  416dd0:	adc    ch,BYTE PTR [esi-0x6499de4a]
  416dd6:	mov    ebx,0x2b486bed
  416ddb:	sti    
  416ddc:	mov    bh,0xaf
  416dde:	xor    al,0x77
  416de0:	pop    ebp
  416de1:	leave  
  416de2:	and    DWORD PTR [edi-0x4a1cbfcc],0xad87f9dc
  416dec:	loopne 0x416e6d
  416dee:	shl    DWORD PTR ds:0x1e236538,cl
  416df4:	out    dx,al
  416df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df6:	dec    eax
  416df7:	xor    al,bl
  416df9:	das    
  416dfa:	cmp    al,0x5b
  416dfc:	loope  0x416db3
  416dfe:	push   eax
  416dff:	mov    edx,0xcfe739e1
  416e04:	loop   0x416e4d
  416e06:	jecxz  0x416df1
  416e08:	hlt    
  416e09:	or     BYTE PTR [esi-0x576e0d0c],al
  416e0f:	div    DWORD PTR [edi+ebx*8-0x2]
  416e13:	push   eax
  416e14:	je     0x416e4d
  416e16:	lahf   
  416e17:	add    cl,BYTE PTR [esi-0x74eae1d7]
  416e1d:	mul    BYTE PTR [ebp+0x78]
  416e20:	xchg   esi,eax
  416e21:	cmc    
  416e22:	sbb    ecx,DWORD PTR [edi]
  416e24:	mov    ds:0xedbc4394,eax
  416e29:	sub    BYTE PTR [ecx+0x36f5019],al
  416e2f:	xor    esp,DWORD PTR [ecx]
  416e31:	inc    ebx
  416e32:	shr    al,cl
  416e34:	dec    eax
  416e35:	imul   edi,ebx,0x6036617e
  416e3b:	loop   0x416e37
  416e3d:	test   al,0xf8
  416e3f:	fsub   QWORD PTR [esi]
  416e41:	jge    0x416e2d
  416e43:	cwde   
  416e44:	mov    dl,0x9f
  416e46:	add    eax,0x1056f1b2
  416e4b:	jecxz  0x416e12
  416e4d:	push   ss
  416e4e:	pop    ecx
  416e4f:	cli    
  416e50:	in     al,0xe0
  416e52:	data16 or al,0xc4
  416e55:	push   ebp
  416e56:	clc    
  416e57:	sub    al,0xa6
  416e59:	ror    DWORD PTR [edx+0x14],0xe8
  416e5d:	lds    ecx,FWORD PTR [edi]
  416e5f:	and    BYTE PTR [esi],dl
  416e61:	call   0x40c9:0xe79eacdd
  416e68:	daa    
  416e69:	jp     0x416ed2
  416e6b:	mov    cl,0xd2
  416e6d:	mov    esi,0xf92c0b2f
  416e72:	xor    DWORD PTR [ebx],ebp
  416e74:	cmp    al,0x8b
  416e76:	lods   al,BYTE PTR ds:[esi]
  416e77:	(bad)  
  416e78:	jae    0x416e18
  416e7a:	ja     0x416ef0
  416e7c:	add    al,0xd3
  416e7e:	aaa    
  416e7f:	scas   al,BYTE PTR es:[edi]
  416e80:	pop    esi
  416e81:	add    DWORD PTR [edi],eax
  416e83:	xchg   esp,eax
  416e84:	bound  esi,QWORD PTR [ebx+esi*4]
  416e87:	mov    ?,WORD PTR [edx-0x49]
  416e8a:	aaa    
  416e8b:	stos   BYTE PTR es:[edi],al
  416e8c:	lock popf 
  416e8e:	clc    
  416e8f:	xor    BYTE PTR [ecx],ah
  416e91:	ss add bh,ch
  416e94:	dec    ecx
  416e95:	xor    eax,0x61e51181
  416e9a:	outs   dx,DWORD PTR ds:[esi]
  416e9b:	jno    0x416eec
  416e9d:	lea    edx,[eax+0x27]
  416ea0:	test   BYTE PTR [ebx-0x5d],bh
  416ea3:	pop    edx
  416ea4:	inc    edi
  416ea5:	or     al,0x8e
  416ea7:	out    dx,al
  416ea8:	push   ebx
  416ea9:	outs   dx,BYTE PTR ds:[esi]
  416eaa:	mov    cs,WORD PTR [eax]
  416eac:	jbe    0x416f04
  416eae:	push   ebx
  416eaf:	and    BYTE PTR [edi],0x22
  416eb2:	call   0x766ecb13
  416eb7:	pop    esi
  416eb8:	mov    ecx,0x99f9bacd
  416ebd:	div    DWORD PTR [ebx-0x46]
  416ec0:	push   ds
  416ec1:	and    DWORD PTR [esi+0x1e],edx
  416ec4:	xchg   esi,eax
  416ec5:	fidivr WORD PTR [edx]
  416ec7:	mov    bh,BYTE PTR [edi-0x4c53a7e9]
  416ecd:	pop    ebx
  416ece:	push   ecx
  416ecf:	pop    ebx
  416ed0:	cli    
  416ed1:	outs   dx,DWORD PTR ds:[esi]
  416ed2:	in     eax,dx
  416ed3:	xor    eax,0x590b3d52
  416ed8:	into   
  416ed9:	xchg   edx,edx
  416edb:	adc    BYTE PTR ds:0x8a76940b,cl
  416ee1:	and    esi,edi
  416ee3:	(bad)  
  416ee4:	jp     0x416f36
  416ee6:	sbb    dl,BYTE PTR [esi]
  416ee8:	push   ds
  416ee9:	pmaxsw mm4,QWORD PTR [edx+eax*1+0x59]
  416eee:	jmp    0xceb3:0x483f3aca
  416ef5:	pushf  
  416ef6:	es mov ch,0x2d
  416ef9:	xchg   BYTE PTR [ebx-0xa],dl
  416efc:	outs   dx,BYTE PTR ds:[esi]
  416efd:	add    DWORD PTR [edx+ebx*2],edi
  416f00:	iret   
  416f01:	jg     0x416ed6
  416f03:	push   0xd497b5ba
  416f08:	and    dl,ch
  416f0a:	mov    esp,0x78ca85f6
  416f0f:	pop    ds
  416f10:	and    eax,0xe9d707bf
  416f15:	sub    al,0x32
  416f17:	sub    DWORD PTR [ecx-0x29],0x3b735428
  416f1e:	hlt    
  416f1f:	sbb    ecx,DWORD PTR [ebx-0x66]
  416f22:	std    
  416f23:	sahf   
  416f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f25:	mov    esi,0x5402a263
  416f2a:	mov    ds:0xaba48d0b,eax
  416f2f:	addr16 xor al,0xb2
  416f32:	pop    esp
  416f33:	stc    
  416f34:	pop    edx
  416f35:	adc    BYTE PTR [edi],dh
  416f37:	jae    0x416f4d
  416f39:	adc    eax,0x8b5a17d5
  416f3e:	inc    eax
  416f3f:	das    
  416f40:	and    esp,DWORD PTR [ebx-0x32906a02]
  416f46:	add    eax,DWORD PTR [edi+0x30a6da69]
  416f4c:	sahf   
  416f4d:	cwde   
  416f4e:	inc    eax
  416f4f:	into   
  416f50:	jae    0x416ef9
  416f52:	add    al,0xe
  416f54:	cmp    al,0x85
  416f56:	pusha  
  416f57:	loope  0x416f01
  416f59:	dec    esi
  416f5a:	retf   0x16ee
  416f5d:	rcr    dh,1
  416f5f:	mov    eax,0xe907b19e
  416f64:	jnp    0x416f3e
  416f66:	dec    eax
  416f67:	fild   DWORD PTR [ecx+0x23e842c]
  416f6d:	test   BYTE PTR [esi+0x59],dh
  416f70:	out    dx,eax
  416f71:	and    al,0xa4
  416f73:	inc    edx
  416f74:	sub    DWORD PTR [ebx+0x7e2b7be2],ebp
  416f7a:	pop    esp
  416f7b:	in     eax,0x9f
  416f7d:	ret    0x325e
  416f80:	add    eax,0x128811db
  416f85:	push   0x9bef1191
  416f8a:	sub    dl,BYTE PTR [ecx-0x2ccf1da7]
  416f90:	ror    DWORD PTR [ecx+0x51],0x97
  416f94:	test   eax,eax
  416f96:	retf   0x4285
  416f99:	mov    eax,ds:0x86971c6a
  416f9e:	test   BYTE PTR [eax-0x53acfa09],ch
  416fa4:	enter  0x63f4,0xf5
  416fa8:	(bad)
  416fab:	ror    BYTE PTR [ebp+0x5b],cl
  416fae:	popa   
  416faf:	or     eax,0xc0847c80
  416fb4:	adc    BYTE PTR [esi],bl
  416fb6:	test   BYTE PTR ss:[eax-0x5a7bd85c],bl
  416fbd:	xchg   esi,eax
  416fbe:	and    eax,0x6a7d6cd5
  416fc3:	mov    cl,0xf0
  416fc5:	daa    
  416fc6:	dec    ecx
  416fc7:	fisub  DWORD PTR [edx+0x5895bd72]
  416fcd:	mov    al,0xa8
  416fcf:	pop    eax
  416fd0:	cmp    al,0x3f
  416fd2:	jmp    0x4d8feb4b
  416fd7:	gs sub al,0x2b
  416fda:	mov    eax,0xce76fab1
  416fdf:	test   eax,0x9331a251
  416fe4:	adc    ebp,DWORD PTR [edi+ebp*1+0x2d868fe3]
  416feb:	xchg   DWORD PTR [esi+0x4f6506cd],esi
  416ff1:	xchg   esp,eax
  416ff2:	pop    ebx
  416ff3:	retf   
  416ff4:	shl    BYTE PTR [ebp-0x4eb464f6],1
  416ffa:	out    0x5a,al
  416ffc:	inc    ecx
  416ffd:	xlat   BYTE PTR ds:[ebx]
  416ffe:	jmp    0x5559:0xa6baf017
  417005:	or     BYTE PTR [esi],0xdc
  417008:	jmp    0x3e85:0xebb6234b
  41700f:	outs   dx,DWORD PTR ds:[esi]
  417010:	xchg   esp,eax
  417011:	mov    ch,0x23
  417013:	xchg   DWORD PTR [esi+0xff83cfa],edi
  417019:	(bad)  
  41701a:	lods   al,BYTE PTR ds:[esi]
  41701b:	pop    esi
  41701c:	lahf   
  41701d:	(bad)  
  41701e:	es add al,0xb6
  417021:	jae    0x416ffe
  417023:	sti    
  417024:	adc    BYTE PTR [ecx],cl
  417026:	push   ds
  417027:	aas    
  417028:	test   DWORD PTR ss:[esp+esi*4+0x112da6f1],ebp
  417030:	(bad)  
  417031:	pop    edx
  417032:	mov    al,0xd8
  417034:	imul   bx,WORD PTR es:[esi],0x6ca3
  41703a:	mov    ds:0xd872e45d,eax
  41703f:	push   0x6162a35f
  417044:	pop    esi
  417045:	pop    es
  417046:	fmul   st(5),st
  417048:	push   esp
  417049:	pop    ebp
  41704a:	out    0xf1,al
  41704c:	pop    edx
  41704d:	push   esi
  41704e:	mov    edi,0xae2769fb
  417053:	fistp  QWORD PTR [esi]
  417055:	push   edx
  417056:	out    0xba,eax
  417058:	enter  0xa0d5,0x91
  41705c:	inc    esp
  41705d:	(bad)  
  41705e:	mov    esp,0x4aaf347f
  417063:	ret    0x7334
  417066:	push   esi
  417067:	ins    BYTE PTR es:[edi],dx
  417068:	cmp    al,0x89
  41706a:	xchg   edx,eax
  41706b:	xchg   ebx,eax
  41706c:	xchg   ebx,eax
  41706d:	push   0x12
  41706f:	add    BYTE PTR [ebx],al
  417071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417072:	jnp    0x417083
  417074:	ins    BYTE PTR es:[edi],dx
  417075:	add    cl,BYTE PTR [esi-0x58fa2550]
  41707b:	or     DWORD PTR [ebx+0x6b],ebp
  41707e:	in     eax,0xf1
  417080:	and    DWORD PTR [edx],eax
  417082:	nop
  417083:	jl     0x417026
  417085:	rcr    BYTE PTR [edx],0x46
  417088:	mov    ch,0x8
  41708a:	clc    
  41708b:	mov    ecx,0x5ab39a34
  417090:	xor    eax,DWORD PTR [ecx+0x7ea76712]
  417096:	sub    DWORD PTR [esi+ebp*4],edx
  417099:	inc    ecx
  41709a:	neg    BYTE PTR [edx+0x31]
  41709d:	inc    ebp
  41709e:	aad    0x76
  4170a0:	and    eax,0xd54b194b
  4170a5:	(bad)  
  4170a6:	aas    
  4170a7:	jmp    DWORD PTR [edi-0x6d]
  4170aa:	stos   BYTE PTR es:[edi],al
  4170ab:	xchg   edi,eax
  4170ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170ad:	daa    
  4170ae:	xor    ebx,DWORD PTR [edx+edi*2-0x44]
  4170b2:	adc    DWORD PTR [esi],0x6c1e4740
  4170b8:	nop
  4170b9:	pop    eax
  4170ba:	pop    eax
  4170bb:	sbb    ebp,ebx
  4170bd:	aam    0xc9
  4170bf:	or     ebp,DWORD PTR [ebx-0x528d487c]
  4170c5:	fwait
  4170c6:	sahf   
  4170c7:	icebp  
  4170c8:	repz je 0x4170c3
  4170cb:	jmp    0x378f592a
  4170d0:	fwait
  4170d1:	pop    es
  4170d2:	xchg   ecx,eax
  4170d3:	push   ss
  4170d4:	mov    esi,0xe42afce3
  4170d9:	repnz mov gs,WORD PTR [ecx+ebp*8]
  4170dd:	jge    0x41711a
  4170df:	pushf  
  4170e0:	pop    esp
  4170e1:	ja     0x41711d
  4170e3:	jmp    0xfee9:0x8c68253e
  4170ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170eb:	push   eax
  4170ec:	sub    al,0xe4
  4170ee:	stos   DWORD PTR es:[edi],eax
  4170ef:	jno    0x41711b
  4170f1:	xchg   bp,ax
  4170f3:	and    eax,0xc3138b0a
  4170f8:	dec    dx
  4170fa:	fld    TBYTE PTR [edx]
  4170fc:	jnp    0x4170a6
  4170fe:	mov    al,ds:0x2daf680d
  417103:	nop
  417104:	inc    DWORD PTR [eax-0x5c6a370f]
  41710a:	inc    edi
  41710b:	or     esp,DWORD PTR [eax]
  41710d:	push   ebx
  41710e:	enter  0x913b,0x57
  417112:	mov    ds:0x3590d69f,eax
  417117:	mov    eax,ds:0x6d390747
  41711c:	mov    ?,WORD PTR [edi]
  41711e:	outs   dx,BYTE PTR ds:[esi]
  41711f:	not    DWORD PTR [eax-0x6]
  417122:	xor    esp,DWORD PTR [eax-0x67]
  417125:	test   DWORD PTR [edx+0x3fc10a84],edx
  41712b:	shl    BYTE PTR [edx],1
  41712d:	(bad)  
  41712e:	(bad)  
  41712f:	(bad)  
  417130:	stc    
  417131:	fucomp st(6)
  417133:	mov    al,0x23
  417135:	iret   
  417136:	repnz sub edi,DWORD PTR [eax+0x4c719af]
  41713d:	int    0x1d
  41713f:	mov    dl,BYTE PTR [ebp-0x66ffc717]
  417145:	jecxz  0x4170ea
  417147:	adc    bh,dl
  417149:	(bad)  
  41714a:	fnstenv [ebp-0x495c60da]
  417150:	xchg   esp,eax
  417151:	js     0x417128
  417153:	addr16 push esi
  417155:	sbb    ebp,DWORD PTR [ebx+eax*4]
  417158:	adc    al,0xef
  41715a:	dec    edi
  41715b:	cmp    eax,0x3f2f2229
  417160:	adc    al,ah
  417162:	clc    
  417163:	in     eax,dx
  417164:	inc    edi
  417165:	fnstenv [edi+edx*2-0x74a5fb48]
  41716c:	or     eax,0x9491e53e
  417171:	call   0x83c99987
  417176:	fwait
  417177:	data16 mov ds,WORD PTR [eax+0x4c10d3ab]
  41717e:	xor    eax,0xfe5fab55
  417183:	ror    BYTE PTR [ecx*1+0x257190a6],0x4
  41718b:	push   ebp
  41718c:	push   edx
  41718d:	nop
  41718e:	cwde   
  41718f:	xor    al,0x39
  417191:	loopne 0x41718f
  417193:	cs mov bh,0x57
  417196:	arpl   WORD PTR [esi+eax*4+0x5e],sp
  41719a:	pop    edx
  41719b:	cmp    eax,0xd2800201
  4171a0:	sbb    eax,0x768a55b9
  4171a5:	xchg   edx,eax
  4171a6:	cld    
  4171a7:	mov    dh,0x9e
  4171a9:	mov    cl,al
  4171ab:	inc    esi
  4171ac:	not    al
  4171ae:	out    0x7c,eax
  4171b0:	scas   al,BYTE PTR es:[edi]
  4171b1:	popa   
  4171b2:	nop
  4171b3:	popa   
  4171b4:	mov    al,0xb4
  4171b6:	dec    ebp
  4171b7:	popa   
  4171b8:	push   ds
  4171b9:	shl    BYTE PTR [eax],1
  4171bb:	jmp    0xaef1:0x10930d67
  4171c2:	gs adc al,0x1b
  4171c5:	jno    0x4171aa
  4171c7:	cdq    
  4171c8:	scas   al,BYTE PTR es:[edi]
  4171c9:	imul   edx,DWORD PTR [ebx+0x5ed20492],0xffffffae
  4171d0:	cmp    bh,dh
  4171d2:	pop    esp
  4171d3:	out    dx,eax
  4171d4:	dec    ecx
  4171d5:	mov    dh,0x11
  4171d7:	and    edi,DWORD PTR [edx+esi*1+0x66487dc5]
  4171de:	retf   
  4171df:	enter  0xf3bb,0x2f
  4171e3:	add    dl,dl
  4171e5:	or     bh,BYTE PTR [esi-0x2a00c621]
  4171eb:	push   0x10
  4171ed:	stc    
  4171ee:	imul   ecx,ebp,0x225292ff
  4171f4:	xchg   ebx,eax
  4171f5:	and    eax,0x89df48eb
  4171fa:	arpl   di,cx
  4171fc:	mov    ds:0x431325c6,al
  417201:	dec    esi
  417202:	pop    ds
  417203:	aaa    
  417204:	fwait
  417205:	dec    ebx
  417206:	test   BYTE PTR ds:[edi+0x31],dl
  41720a:	push   es
  41720b:	jns    0x417287
  41720d:	or     eax,0xdc2756bf
  417212:	cmp    BYTE PTR [eax-0x54bfa8c],cl
  417218:	repz adc DWORD PTR ds:[ebx],esp
  41721c:	adc    DWORD PTR [esi+0x41],ebx
  41721f:	push   edx
  417220:	in     al,0xf0
  417222:	push   ecx
  417223:	mov    es,edx
  417225:	mov    ch,bh
  417227:	xor    al,0xa7
  417229:	jmp    0x417215
  41722b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41722c:	out    dx,al
  41722d:	adc    eax,0x2a37dbda
  417232:	(bad)  
  417233:	out    0xfc,eax
  417235:	enter  0x938b,0xbd
  417239:	xchg   ebx,eax
  41723a:	enter  0x26fd,0xea
  41723e:	(bad)  
  417240:	push   ebp
  417241:	hlt    
  417242:	sbb    ebx,DWORD PTR [ecx+0x6f]
  417245:	xchg   ecx,eax
  417246:	outs   dx,DWORD PTR ds:[esi]
  417247:	adc    bh,cl
  417249:	(bad)  
  41724b:	xchg   BYTE PTR [eax+0x42],ch
  41724e:	jnp    0x417219
  417250:	xor    BYTE PTR ds:0xcbbeb78b,0x26
  417257:	data16 aam 0xc0
  41725a:	inc    ebx
  41725b:	rcl    ch,0xa2
  41725e:	loope  0x4172a0
  417260:	out    dx,eax
  417261:	mov    ch,0x60
  417263:	and    ebx,DWORD PTR [esp+esi*1]
  417266:	cmp    edi,DWORD PTR [eax-0x92639b7]
  41726c:	pcmpeqd mm0,QWORD PTR [edi]
  41726f:	mov    ds:0x152add41,al
  417274:	stc    
  417275:	sub    ebx,DWORD PTR [esi+ebp*2]
  417278:	ins    BYTE PTR es:[edi],dx
  417279:	push   cs
  41727a:	sti    
  41727b:	cmp    al,0x6e
  41727d:	bound  esp,QWORD PTR [eax+0x17c14d5a]
  417283:	imul   edi,esi,0x1e882675
  417289:	cmp    esp,DWORD PTR [edx-0x4a2c7a25]
  41728f:	cmovns ecx,DWORD PTR [ecx-0x36]
  417293:	ret    
  417294:	out    0x24,eax
  417296:	push   esp
  417297:	add    eax,0xf4627e58
  41729c:	scas   al,BYTE PTR es:[edi]
  41729d:	jae    0x4172ee
  41729f:	ds jp  0x41725a
  4172a2:	sahf   
  4172a3:	nop
  4172a4:	rcr    BYTE PTR [eax+ebx*8-0x3d],cl
  4172a8:	lahf   
  4172a9:	adc    al,0xc2
  4172ab:	rcl    BYTE PTR [edx],0x88
  4172ae:	inc    edx
  4172af:	das    
  4172b0:	xor    al,0xff
  4172b2:	xchg   esi,eax
  4172b3:	jnp    0x41725d
  4172b5:	cmp    cl,BYTE PTR [edi-0x51]
  4172b8:	xor    dl,BYTE PTR [eax]
  4172ba:	ins    DWORD PTR es:[edi],dx
  4172bb:	or     BYTE PTR [ebx+edx*8],ch
  4172be:	std    
  4172bf:	add    al,0xef
  4172c1:	pop    eax
  4172c2:	adc    al,0x50
  4172c4:	and    DWORD PTR [edx],eax
  4172c6:	fstp   st(3)
  4172c8:	clc    
  4172c9:	loope  0x417345
  4172cb:	fidiv  DWORD PTR [ecx]
  4172cd:	inc    ecx
  4172ce:	bswap  ebp
  4172d0:	xor    esp,ebx
  4172d2:	retf   
  4172d3:	xchg   ecx,eax
  4172d4:	pop    eax
  4172d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172d6:	add    edx,ebx
  4172d8:	and    BYTE PTR [ecx+0x5abd3ddc],dh
  4172de:	and    DWORD PTR [eiz*4+0x356dbfd3],esp
  4172e5:	in     al,dx
  4172e6:	pop    ds
  4172e7:	mov    ah,0xb
  4172e9:	hlt    
  4172ea:	mov    cs,ecx
  4172ec:	dec    ecx
  4172ed:	jmp    0x1171de30
  4172f2:	imul   esi,DWORD PTR [edi],0xffffffcd
  4172f5:	push   ecx
  4172f6:	lock out 0x29,eax
  4172f9:	xchg   esp,eax
  4172fa:	mov    gs,esp
  4172fc:	push   0x68
  4172fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ff:	je     0x4172b7
  417301:	popa   
  417302:	adc    dl,dh
  417304:	inc    eax
  417305:	mov    BYTE PTR [edi],al
  417307:	ds pop eax
  417309:	test   al,0xc7
  41730b:	or     bl,BYTE PTR [eax]
  41730d:	sub    BYTE PTR [ebx-0x1a9e2d97],0x7f
  417314:	(bad)
  417317:	gs loope 0x417393
  41731a:	add    BYTE PTR [edx+0x12],bl
  41731d:	sbb    BYTE PTR [esi+0x3116282c],ah
  417323:	xor    DWORD PTR [edi],esp
  417325:	mov    edx,DWORD PTR [edi]
  417327:	jo     0x4172b3
  417329:	or     ch,BYTE PTR ds:0x21bbd2c4
  41732f:	sar    DWORD PTR [ebp+0x6c],0x64
  417333:	clc    
  417334:	jp     0x4172d5
  417336:	or     DWORD PTR [ebp-0x27],eax
  417339:	out    0x75,al
  41733b:	lods   eax,DWORD PTR ds:[esi]
  41733c:	mov    al,ds:0x18f394d0
  417341:	pusha  
  417342:	pop    ecx
  417343:	scas   al,BYTE PTR es:[edi]
  417344:	xchg   edx,eax
  417345:	mov    ds:0x8f78fe5b,eax
  41734a:	jns    0x4173bb
  41734c:	mov    ds:0x24dd6618,al
  417351:	fs call 0xbc5f:0x2332111b
  417359:	std    
  41735a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41735b:	sub    ah,BYTE PTR [ebx]
  41735d:	cdq    
  41735e:	or     DWORD PTR ds:0x5836c0cf,0x6
  417365:	enter  0xbc5b,0x3a
  417369:	scas   al,BYTE PTR es:[edi]
  41736a:	retf   0xafd9
  41736d:	gs pop esp
  41736f:	inc    edx
  417370:	xchg   DWORD PTR [edx],edi
  417372:	jnp    0x417359
  417374:	add    eax,0xeca4fa58
  417379:	fdivr  QWORD PTR [edi+0x179d9e8]
  41737f:	push   edx
  417380:	loope  0x417314
  417382:	scas   al,BYTE PTR es:[edi]
  417383:	sub    esp,esi
  417385:	nop
  417386:	xor    eax,0x1a9e555f
  41738b:	dec    eax
  41738c:	pop    esi
  41738d:	pop    eax
  41738e:	push   edi
  41738f:	mov    edx,0xe74bb11d
  417394:	push   cs
  417395:	(bad)  
  417396:	out    0xbb,al
  417398:	jge    0x417415
  41739a:	or     al,0xd6
  41739c:	mov    al,0xf7
  41739e:	jge    0x4173f9
  4173a0:	fsub   QWORD PTR [ecx]
  4173a2:	call   0xe20f:0xcf0c70d7
  4173a9:	sbb    ah,ah
  4173ab:	inc    esp
  4173ac:	or     al,0x6e
  4173ae:	adc    BYTE PTR [eax],0x8b
  4173b1:	cmp    ecx,ebp
  4173b3:	mov    ds:0x2cb3fdfb,al
  4173b8:	cmp    al,0x79
  4173ba:	imul   esp,DWORD PTR [ebx+0x8],0xa7ae2c65
  4173c1:	and    dl,dl
  4173c3:	sub    DWORD PTR [esi],eax
  4173c5:	adc    esi,edx
  4173c7:	push   0x8
  4173c9:	pop    ds
  4173ca:	mov    DWORD PTR [esi+0x414df701],esi
  4173d0:	in     al,0xc3
  4173d2:	pop    ebx
  4173d3:	cmp    eax,0x4487746b
  4173d8:	daa    
  4173d9:	call   0x9d18:0x151a28f2
  4173e0:	pushf  
  4173e1:	fcomp  DWORD PTR [edx]
  4173e3:	inc    esp
  4173e4:	and    al,ah
  4173e6:	out    dx,al
  4173e7:	pop    edx
  4173e8:	xor    edi,DWORD PTR [eax-0xdb1a553]
  4173ee:	outs   dx,BYTE PTR ds:[esi]
  4173ef:	ja     0x41742e
  4173f1:	jmp    0x4173dc
  4173f3:	clc    
  4173f4:	jecxz  0x4173d0
  4173f6:	mov    eax,0xc693893f
  4173fb:	(bad)  
  4173fc:	pop    esp
  4173fd:	push   cs
  4173fe:	call   0x2c85ae9e
  417403:	outs   dx,DWORD PTR ds:[esi]
  417404:	pop    esi
  417405:	xchg   edx,eax
  417406:	sub    ch,dl
  417408:	out    0xe9,al
  41740a:	stos   DWORD PTR es:[edi],eax
  41740b:	shr    ebp,cl
  41740d:	ret    0x2fe
  417410:	and    esp,DWORD PTR [esi]
  417412:	cmp    al,0x1
  417414:	outs   dx,BYTE PTR ds:[esi]
  417415:	push   edi
  417416:	fbld   TBYTE PTR [edx+eax*2+0x45eb1e14]
  41741d:	ret    
  41741e:	lahf   
  41741f:	inc    edx
  417420:	pop    ss
  417421:	repnz cli 
  417423:	cmc    
  417424:	xor    BYTE PTR [ecx+ebx*1+0x47e40c1e],0x6c
  41742c:	jbe    0x4174a8
  41742e:	test   eax,0xd569fc4b
  417433:	das    
  417434:	dec    ecx
  417435:	xor    DWORD PTR [edx-0x3bdec057],ebx
  41743b:	std    
  41743c:	sub    ebp,DWORD PTR [ebp-0x1]
  41743f:	(bad)  
  417440:	int    0x45
  417442:	popa   
  417443:	std    
  417444:	fstp   st(1)
  417446:	test   al,0xa0
  417448:	test   DWORD PTR [ebx-0x26efcc93],esp
  41744e:	loop   0x4174b1
  417450:	adc    esi,ecx
  417452:	inc    ecx
  417453:	sbb    ebx,edx
  417455:	adc    DWORD PTR [edi+eax*2],ecx
  417458:	mov    ebp,DWORD PTR [esi+0x6d]
  41745b:	das    
  41745c:	imul   edi,ebx,0x19
  41745f:	pop    eax
  417460:	arpl   WORD PTR [ecx+0x4b9f7a29],dx
  417466:	jne    0x4174af
  417468:	outs   dx,DWORD PTR ds:[esi]
  417469:	adc    ebp,DWORD PTR [ebx+edi*2+0x615b58b5]
  417470:	retf   0xbf6
  417473:	pushf  
  417474:	pop    ss
  417475:	test   al,0xed
  417477:	jbe    0x4173ff
  417479:	dec    esi
  41747a:	xchg   ebp,eax
  41747b:	out    0x58,al
  41747d:	stos   DWORD PTR es:[edi],eax
  41747e:	mov    esp,0xd20f8319
  417483:	iret   
  417484:	xchg   DWORD PTR [ebx],ebx
  417486:	shl    DWORD PTR [eax],1
  417488:	ja     0x417458
  41748a:	jl     0x41747b
  41748c:	mov    al,ds:0xc9c3d16a
  417491:	aas    
  417492:	mul    DWORD PTR [edi]
  417494:	sbb    dh,BYTE PTR [ecx+0x23]
  417497:	sub    DWORD PTR [edi+0x19],0xffffffcb
  41749b:	inc    edi
  41749c:	jae    0x4174ea
  41749e:	jbe    0x41744e
  4174a0:	or     DWORD PTR [esi-0x7f],0x6a
  4174a4:	repnz push ebp
  4174a6:	out    dx,al
  4174a7:	push   ds
  4174a8:	pop    esi
  4174a9:	test   ch,ah
  4174ab:	in     al,dx
  4174ac:	dec    ecx
  4174ad:	xor    al,0x41
  4174af:	shl    BYTE PTR [ecx+0x6a],1
  4174b2:	jnp    0x417508
  4174b4:	shr    ecx,1
  4174b6:	inc    eax
  4174b7:	pop    ss
  4174b8:	and    eax,0xa19b4802
  4174bd:	push   esp
  4174be:	mov    eax,0x1826be7a
  4174c3:	sub    DWORD PTR [esi+0x52],ebx
  4174c6:	fwait
  4174c7:	adc    BYTE PTR [ecx],dh
  4174c9:	fdivr  DWORD PTR [edi+0x30]
  4174cc:	inc    esi
  4174cd:	dec    ebx
  4174ce:	test   eax,0xacd4cb68
  4174d3:	fs jbe 0x41753f
  4174d6:	adc    esp,edx
  4174d8:	lods   eax,DWORD PTR ds:[esi]
  4174d9:	cmc    
  4174da:	pop    ss
  4174db:	arpl   ax,sp
  4174dd:	icebp  
  4174de:	inc    ecx
  4174df:	inc    ecx
  4174e0:	inc    edi
  4174e1:	or     eax,0x9f212ec7
  4174e6:	push   ecx
  4174e7:	retf   0xa578
  4174ea:	push   edi
  4174eb:	or     BYTE PTR [ebx+0x2f],bl
  4174ee:	(bad)  
  4174ef:	rol    DWORD PTR [esi+edx*8+0xc],0x2f
  4174f4:	dec    esp
  4174f5:	jnp    0x4174c8
  4174f7:	and    DWORD PTR [esi+0x11],esi
  4174fa:	cs int3 
  4174fc:	mov    esi,0x5fa01696
  417501:	aaa    
  417502:	xchg   esi,eax
  417503:	ins    DWORD PTR es:[edi],dx
  417504:	das    
  417505:	rcl    DWORD PTR [edx+0x2adabefa],1
  41750b:	mov    edi,0x2aef26a7
  417510:	push   0xffffffb1
  417512:	sbb    ebx,DWORD PTR [ecx+0x499042af]
  417518:	pop    edi
  417519:	add    cl,BYTE PTR [eax+0x31]
  41751c:	jbe    0x41750b
  41751e:	jno    0x41757d
  417520:	stos   DWORD PTR es:[edi],eax
  417521:	or     eax,0x530c3ec0
  417526:	popa   
  417527:	mov    eax,ds:0xc7fd7fa
  41752c:	fisub  WORD PTR [esi]
  41752e:	mov    ecx,0x3c510ee9
  417533:	call   0xba1ba2d2
  417538:	mov    BYTE PTR [ecx],ch
  41753a:	adc    dh,ch
  41753c:	stc    
  41753d:	xchg   edx,eax
  41753e:	loope  0x41753e
  417540:	dec    eax
  417541:	outs   dx,BYTE PTR ds:[esi]
  417542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417543:	xchg   esp,eax
  417544:	jmp    0x6593:0x1a3a4be0
  41754b:	pop    ss
  41754c:	mov    dh,0x77
  41754e:	add    edi,DWORD PTR [eax]
  417550:	adc    BYTE PTR [edx-0x2b5a07c3],bl
  417556:	sub    eax,0x6e18c931
  41755b:	scas   eax,DWORD PTR es:[edi]
  41755c:	lea    esp,[ebp-0x57b3d195]
  417562:	jae    0x417517
  417564:	ja     0x4175ce
  417566:	nop
  417567:	fistp  QWORD PTR [ebp+0x10]
  41756a:	mov    ds:0xa61622f5,eax
  41756f:	push   ebx
  417570:	add    bx,cx
  417573:	jne    0x4175cf
  417575:	dec    esi
  417576:	out    0x7c,al
  417578:	or     edi,ebp
  41757a:	xchg   DWORD PTR [esp+ebx*2+0x7b8f8e5e],edx
  417581:	pop    ss
  417582:	pop    esi
  417583:	sub    ebx,DWORD PTR [edi-0x886f511]
  417589:	mov    cl,0x49
  41758b:	inc    ebp
  41758c:	pop    eax
  41758d:	xor    al,0x49
  41758f:	ins    DWORD PTR es:[edi],dx
  417590:	retf   0x122d
  417593:	fistp  DWORD PTR [edx-0x33]
  417596:	stos   DWORD PTR es:[edi],eax
  417597:	xchg   ebp,eax
  417598:	ss dec ebp
  41759a:	and    edx,ebp
  41759c:	xchg   BYTE PTR [ebx+edx*2],bl
  41759f:	scas   eax,DWORD PTR es:[edi]
  4175a0:	xchg   ebx,eax
  4175a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175a2:	xchg   esp,eax
  4175a3:	call   FWORD PTR [ebx-0x2f]
  4175a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a7:	jno    0x417543
  4175a9:	(bad)  
  4175ab:	popa   
  4175ac:	gs mov cl,dl
  4175af:	push   edx
  4175b0:	jge    0x4175bc
  4175b2:	xchg   ebx,eax
  4175b3:	jecxz  0x4175a3
  4175b5:	or     al,0xe8
  4175b7:	cmp    DWORD PTR [edi+0x446d76d],0xe5f5e6e1
  4175c1:	test   eax,0xeecd9348
  4175c6:	je     0x41755c
  4175c8:	fadd   DWORD PTR [edi-0x15]
  4175cb:	xchg   ebp,eax
  4175cc:	fcom   QWORD PTR [esi+0x70f9d5d0]
  4175d2:	inc    edx
  4175d3:	sbb    BYTE PTR [eax+0xb1da1cf],bl
  4175d9:	jbe    0x41761d
  4175db:	mov    ch,0x9d
  4175dd:	ror    DWORD PTR [ecx+0x2378147],cl
  4175e3:	xor    al,0x59
  4175e5:	xchg   esi,eax
  4175e6:	mov    eax,ds:0x37a4e38f
  4175eb:	lods   al,BYTE PTR ds:[esi]
  4175ec:	mov    dl,0x24
  4175ee:	fisttp DWORD PTR [edi-0x4b558dd2]
  4175f4:	int3   
  4175f5:	mov    ecx,0x2d189b60
  4175fa:	mov    BYTE PTR [ebx+0x10af6e0d],ah
  417600:	xchg   bh,ch
  417602:	nop
  417603:	jl     0x4175ce
  417605:	jbe    0x41766e
  417607:	push   ebp
  417608:	jecxz  0x41766f
  41760a:	fsub   DWORD PTR [esi+0x13a7a859]
  417610:	cld    
  417611:	popa   
  417612:	pavgw  mm0,QWORD PTR [edi-0x5e]
  417616:	xchg   ecx,eax
  417617:	and    DWORD PTR [ebp-0x7b5fa890],esp
  41761d:	mov    ah,0xe5
  41761f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417620:	push   ss
  417621:	js     0x417687
  417623:	cmp    al,0x36
  417625:	or     eax,0xef39a015
  41762a:	shl    bh,0xd2
  41762d:	adc    DWORD PTR [eax],esi
  41762f:	and    BYTE PTR [edi+0x11],ch
  417632:	iret   
  417633:	inc    ebx
  417634:	(bad)  
  417635:	add    dh,BYTE PTR [edi]
  417637:	loope  0x41765b
  417639:	and    dh,BYTE PTR es:[ebx-0x80]
  41763d:	jns    0x417653
  41763f:	call   0x807b487f
  417644:	mov    edi,0xace8a2a7
  417649:	rcl    ebx,1
  41764b:	jmp    0x80a5:0xcacf9a6
  417652:	xchg   BYTE PTR ds:0x260ada5a,ch
  417658:	inc    edi
  417659:	jb     0x4175db
  41765b:	(bad)  
  41765c:	cmp    al,0x1f
  41765e:	out    0x5e,al
  417660:	mov    cl,dh
  417662:	add    BYTE PTR [ebp+0x3b],dl
  417665:	jb     0x417628
  417667:	xor    eax,0xd70d6249
  41766c:	data16 (bad) 
  41766e:	in     al,0x72
  417670:	aad    0xed
  417672:	test   al,0xc8
  417674:	xchg   edi,eax
  417675:	dec    edi
  417676:	call   FWORD PTR [ebp-0x664225cc]
  41767c:	pop    ss
  41767d:	adc    eax,0x5c54c490
  417682:	push   esi
  417683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417684:	scas   al,BYTE PTR es:[edi]
  417685:	xchg   ebp,eax
  417686:	ins    DWORD PTR es:[edi],dx
  417687:	or     ebp,DWORD PTR [edx-0x21]
  41768a:	mov    dh,BYTE PTR [eax-0x22]
  41768d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41768e:	pop    eax
  41768f:	cld    
  417690:	xchg   edx,eax
  417691:	xchg   ebp,eax
  417692:	mov    al,ds:0xfd70ddbc
  417697:	sti    
  417698:	adc    dl,BYTE PTR [ebx]
  41769a:	test   al,0xc4
  41769c:	js     0x41768c
  41769e:	fstp   DWORD PTR [edx]
  4176a0:	inc    esp
  4176a1:	mov    DWORD PTR [ecx-0x36],ebp
  4176a4:	fistp  WORD PTR [esi-0x7d]
  4176a7:	sbb    eax,0x1d66e178
  4176ac:	imul   eax,DWORD PTR [ebx-0xc9ba9d8],0xffffffd1
  4176b3:	addr16 sub al,0x19
  4176b6:	ror    DWORD PTR [edi],1
  4176b8:	or     eax,DWORD PTR [ebp+edx*4-0x65dbe295]
  4176bf:	pusha  
  4176c0:	jp     0x4176e9
  4176c2:	(bad)  
  4176c3:	jp     0x4176e7
  4176c5:	jle    0x417661
  4176c7:	ret    0x470f
  4176ca:	pop    esp
  4176cb:	nop
  4176cc:	ds aam 0xb4
  4176cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176d0:	idiv   BYTE PTR [ebx]
  4176d2:	aas    
  4176d3:	nop
  4176d4:	dec    ebx
  4176d5:	out    dx,eax
  4176d6:	ss mov cl,0xc5
  4176d9:	push   es
  4176da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176db:	xor    DWORD PTR [eax+0x67],0x634cd1c1
  4176e2:	rol    BYTE PTR [edx-0x4fdab5bf],1
  4176e8:	xor    dh,BYTE PTR [esi]
  4176ea:	call   0x9eb348aa
  4176ef:	inc    edi
  4176f0:	loop   0x4176c8
  4176f2:	in     al,0x50
  4176f4:	add    DWORD PTR [ebp+0x168dca26],esi
  4176fa:	aam    0xaf
  4176fc:	inc    DWORD PTR [ebp+0x605e85db]
  417702:	adc    ecx,DWORD PTR [ebx+0x4c]
  417705:	sbb    eax,0xb50cbd47
  41770a:	out    dx,al
  41770b:	loopne 0x417710
  41770d:	or     cl,BYTE PTR [edi-0x447b60ee]
  417713:	aad    0xc
  417715:	mov    cl,BYTE PTR [esi+0xd94b01d]
  41771b:	stos   BYTE PTR es:[edi],al
  41771c:	mov    bl,0xc
  41771e:	add    BYTE PTR [ebx-0x4b],bl
  417721:	lds    ebp,FWORD PTR [edx]
  417723:	push   ss
  417724:	arpl   WORD PTR [ecx-0x4e597db],di
  41772a:	lea    ebx,ds:0xf42e5cea
  417730:	cdq    
  417731:	fist   WORD PTR [ecx+0x6f982010]
  417737:	pop    es
  417738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417739:	jge    0x4176ca
  41773b:	(bad)  
  41773c:	cs enter 0x636b,0x4c
  417741:	cmc    
  417742:	or     DWORD PTR [eax+0x1769bbb6],0xac531db8
  41774c:	sub    BYTE PTR [eax],bh
  41774e:	xchg   edi,eax
  41774f:	fistp  WORD PTR [ecx+0x5378ffbc]
  417755:	xor    al,0x6a
  417757:	aaa    
  417758:	sub    cl,BYTE PTR [ecx+esi*1]
  41775b:	fwait
  41775c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775d:	hlt    
  41775e:	adc    BYTE PTR fs:[ebx+0x7d],ch
  417762:	sbb    bh,dh
  417764:	test   DWORD PTR [esi+eax*2+0x2f],eax
  417768:	mov    dl,0xdc
  41776a:	pop    ds
  41776b:	push   ecx
  41776c:	ss xchg edi,eax
  41776e:	outs   dx,BYTE PTR ds:[esi]
  41776f:	ds loope 0x4177c2
  417772:	mov    ch,0xd5
  417774:	mov    esp,DWORD PTR [edi]
  417776:	faddp  st(4),st
  417778:	out    dx,al
  417779:	pop    ss
  41777a:	xchg   ecx,eax
  41777b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41777c:	mov    bl,0xad
  41777e:	loope  0x4177ae
  417780:	imul   ebp,DWORD PTR [edx+0x22],0xb3b586ed
  417787:	mov    cs,edx
  417789:	arpl   bx,bp
  41778b:	aad    0xd5
  41778d:	lsl    esp,WORD PTR [edi-0x7d]
  417791:	rcl    ebp,1
  417793:	inc    edi
  417794:	mov    DWORD PTR [edx-0x2e],esi
  417797:	push   ebx
  417798:	fidivr WORD PTR [edi+edi*1-0x118589b8]
  41779f:	enter  0x7ea0,0x5
  4177a3:	add    ebp,eax
  4177a5:	outs   dx,BYTE PTR ds:[esi]
  4177a6:	jmp    0xde1adb81
  4177ab:	cmp    eax,0xded9ff57
  4177b0:	jne    0x4177fb
  4177b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177b3:	test   bh,ch
  4177b5:	push   0xd0c02843
  4177ba:	inc    DWORD PTR [edi]
  4177bc:	push   es
  4177bd:	ja     0x417776
  4177bf:	es popf 
  4177c1:	ins    BYTE PTR es:[edi],dx
  4177c2:	sub    edi,DWORD PTR [ebp-0xc375cbe]
  4177c8:	out    0x53,al
  4177ca:	bound  edx,QWORD PTR [esi]
  4177cc:	test   eax,0x6fd47e86
  4177d1:	push   cs
  4177d2:	sbb    dl,BYTE PTR [ebp-0x6bdeaf49]
  4177d8:	mov    ds:0x530889a5,eax
  4177dd:	sahf   
  4177de:	test   eax,0x562c6669
  4177e3:	mov    cs,WORD PTR [edi+0x1]
  4177e6:	ret    0x9860
  4177e9:	sub    al,0xa0
  4177eb:	inc    edi
  4177ec:	dec    edi
  4177ed:	ins    BYTE PTR es:[edi],dx
  4177ee:	sbb    DWORD PTR [eax+0x473e854c],eax
  4177f4:	dec    ebp
  4177f5:	mov    eax,0x5932705f
  4177fa:	jecxz  0x41778e
  4177fc:	hlt    
  4177fd:	ja     0x417849
  4177ff:	mov    ebx,0xda88c851
  417804:	sub    dh,BYTE PTR [eax+ebx*4-0xfb84e07]
  41780b:	or     ebx,DWORD PTR [ebp-0x6c]
  41780e:	adc    BYTE PTR [eax+0x8422d18],dl
  417814:	icebp  
  417815:	leave  
  417816:	jmp    0xd0ee:0xb5174831
  41781d:	jmp    0x7a5f:0xa32fe5cd
  417824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417825:	push   esi
  417826:	call   0x6bf9bb27
  41782b:	sbb    bl,BYTE PTR [eax-0xd]
  41782e:	imul   edi,ebx,0x579252be
  417834:	push   eax
  417835:	clc    
  417836:	xchg   edi,eax
  417837:	outs   dx,DWORD PTR ds:[esi]
  417838:	icebp  
  417839:	in     eax,0xbc
  41783b:	xchg   ebp,eax
  41783c:	fwait
  41783d:	push   ss
  41783e:	je     0x417854
  417840:	mov    dl,0x79
  417842:	das    
  417843:	mov    eax,ds:0x9a68191c
  417848:	pop    edx
  417849:	rol    BYTE PTR [esi+ecx*1],0x67
  41784d:	mov    dh,0x53
  41784f:	xchg   ebp,eax
  417850:	jns    0x417895
  417852:	iret   
  417853:	aam    0xe8
  417855:	les    esi,FWORD PTR [edx]
  417857:	ss icebp 
  417859:	add    ebp,ebx
  41785b:	push   ecx
  41785c:	mov    eax,ds:0xe4a1be13
  417861:	jmp    DWORD PTR [ebx-0x34]
  417864:	fdiv   st,st(0)
  417866:	repz pop es
  417868:	sbb    BYTE PTR [ebx+0x15],cl
  41786b:	inc    esi
  41786c:	mul    BYTE PTR [esi]
  41786e:	jne    0x4178ac
  417870:	int3   
  417871:	jmp    0x417803
  417873:	repz mov dh,0xdc
  417876:	lea    ecx,[edx]
  417878:	mov    bl,0x27
  41787a:	or     ah,BYTE PTR [eax-0x16]
  41787d:	pop    esi
  41787e:	dec    edx
  41787f:	sub    eax,0x35d6dae4
  417884:	dec    edi
  417885:	outs   dx,DWORD PTR ds:[esi]
  417886:	adc    al,0x3b
  417888:	fcmovnu st,st(3)
  41788a:	mov    ebp,0xf2b50a1f
  41788f:	retf   0x368c
  417892:	sbb    eax,0x698b9b81
  417897:	call   0x5f6be05d
  41789c:	lock repz sbb eax,0xaf37caac
  4178a3:	adc    BYTE PTR [edi+edi*1-0x651e38bb],0x97
  4178ab:	mov    edi,0x48110712
  4178b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178b1:	in     al,0xb6
  4178b3:	lea    ebp,[edi+0x7e]
  4178b6:	outs   dx,BYTE PTR ds:[esi]
  4178b7:	data16 adc bl,BYTE PTR fs:[ebp+ebx*1-0x56682292]
  4178c0:	das    
  4178c1:	(bad)  
  4178c2:	and    al,0xc5
  4178c4:	inc    edx
  4178c5:	mov    esp,0x2a5368e5
  4178ca:	inc    ecx
  4178cb:	nop
  4178cc:	lahf   
  4178cd:	sbb    edx,DWORD PTR [eax-0x43]
  4178d0:	jbe    0x4178d2
  4178d2:	lds    ecx,FWORD PTR [ecx+0x6c223a54]
  4178d8:	mov    ecx,0x9c94d41f
  4178dd:	out    dx,al
  4178de:	mov    al,0x36
  4178e0:	inc    edx
  4178e1:	sti    
  4178e2:	aad    0xc
  4178e4:	mov    al,0x7f
  4178e6:	push   0x82591f4b
  4178eb:	loope  0x417881
  4178ed:	pop    DWORD PTR fs:[ebp+0x617b73a7]
  4178f4:	icebp  
  4178f5:	je     0x4178b8
  4178f7:	and    esp,eax
  4178f9:	cmp    BYTE PTR [ecx-0x2f120370],bl
  4178ff:	rcl    BYTE PTR [edx-0x65],0xa8
  417903:	out    0xbe,eax
  417905:	mov    BYTE PTR [eax-0x3465bcec],ch
  41790b:	les    edx,FWORD PTR [bx+si+0xc]
  41790f:	xchg   edx,eax
  417910:	mov    cl,0x4d
  417912:	push   0x7f
  417914:	inc    esi
  417915:	or     eax,0xe87895d0
  41791a:	xchg   ecx,eax
  41791b:	call   0x6842:0x38485a9c
  417922:	xor    al,0xc3
  417924:	mov    dh,0xf5
  417926:	int    0x43
  417928:	mov    ds:0x174d4429,al
  41792d:	out    0x35,eax
  41792f:	sub    edi,eax
  417931:	sbb    DWORD PTR [edx+0x58be468c],ebp
  417937:	lock push edi
  417939:	and    BYTE PTR [edx+edi*4-0x7b4618b8],bh
  417940:	pminsw mm2,mm3
  417943:	(bad)  
  417944:	jge    0x417967
  417946:	jmp    0xd27200b4
  41794b:	inc    ecx
  41794c:	xchg   ebx,eax
  41794d:	aam    0xbe
  41794f:	jmp    0xa4fda1f5
  417954:	and    al,0xbd
  417956:	fdiv   QWORD PTR [eax]
  417958:	shl    esp,0x3c
  41795b:	ins    BYTE PTR es:[edi],dx
  41795c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41795d:	jl     0x4179ac
  41795f:	ins    BYTE PTR es:[edi],dx
  417960:	enter  0xa091,0x9c
  417964:	xchg   edx,eax
  417965:	push   ebp
  417966:	and    al,bh
  417968:	xor    eax,0xeff6a396
  41796d:	das    
  41796e:	js     0x4179ce
  417970:	xchg   DWORD PTR [ebp-0x2b],ecx
  417973:	mov    ds:0x2cd535d7,al
  417978:	adc    DWORD PTR [ecx-0x3accd2b2],ebx
  41797e:	add    eax,0x76378d5e
  417983:	hlt    
  417984:	pop    DWORD PTR [esp+0x56]
  417988:	retf   
  417989:	nop
  41798a:	loop   0x417991
  41798c:	cmp    eax,0xec11139b
  417991:	mov    bl,0xb0
  417993:	lock jnp 0x41792d
  417996:	dec    ebp
  417997:	push   edx
  417998:	sbb    bh,al
  41799a:	fsub   DWORD PTR [esi-0x20]
  41799d:	mov    WORD PTR [edi],gs
  41799f:	xor    DWORD PTR [edi+ecx*1+0x7a34ec39],ebp
  4179a6:	or     DWORD PTR [edx+0x43],esp
  4179a9:	sbb    eax,0x44d1cc45
  4179ae:	pop    edx
  4179af:	xchg   esi,eax
  4179b0:	aas    
  4179b1:	jecxz  0x41799c
  4179b3:	ret    
  4179b4:	cmp    eax,0x8ad28fbd
  4179b9:	outs   dx,DWORD PTR ds:[esi]
  4179ba:	int    0x87
  4179bc:	jnp    0x417974
  4179be:	sub    BYTE PTR [ebx+esi*1],0x35
  4179c2:	push   ecx
  4179c3:	arpl   WORD PTR [ebx],bp
  4179c5:	jnp    0x417950
  4179c7:	imul   ebx,ebp,0x5d
  4179ca:	lds    ebp,FWORD PTR [esi]
  4179cc:	sahf   
  4179cd:	cli    
  4179ce:	test   BYTE PTR [ebx],bl
  4179d0:	sar    BYTE PTR [esi],1
  4179d2:	inc    edx
  4179d3:	sub    al,0x15
  4179d5:	test   al,0xdf
  4179d7:	dec    eax
  4179d8:	shl    DWORD PTR [eax-0x17176d26],cl
  4179de:	mov    dl,0x7c
  4179e0:	cmp    al,0xcf
  4179e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179e3:	dec    ebx
  4179e4:	jno    0x417a4f
  4179e6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4179e8:	mov    dl,0xe1
  4179ea:	push   es
  4179eb:	ret    
  4179ec:	inc    edx
  4179ed:	fwait
  4179ee:	inc    ebp
  4179ef:	cmp    al,0xad
  4179f1:	mov    BYTE PTR [ebp+0x38],ch
  4179f4:	in     al,dx
  4179f5:	outs   dx,BYTE PTR ds:[esi]
  4179f6:	or     dl,BYTE PTR [edx-0x30]
  4179f9:	add    BYTE PTR [edx],al
  4179fb:	mov    bh,0xd
  4179fd:	loope  0x4179d6
  4179ff:	dec    eax
  417a00:	xor    BYTE PTR [ebx-0x73],dl
  417a03:	nop
  417a04:	aas    
  417a05:	int3   
  417a06:	mov    ds:0x625a497c,eax
  417a0b:	dec    edi
  417a0c:	fwait
  417a0d:	xor    al,0xe9
  417a0f:	push   0xb058beb2
  417a14:	call   0xd0e:0x848cac5
  417a1b:	pop    es
  417a1c:	mov    ecx,0x1c379516
  417a21:	xchg   ecx,eax
  417a22:	mov    ebx,0xd76ef720
  417a27:	std    
  417a28:	loopne 0x417a4d
  417a2a:	sbb    eax,0xb78ae9e6
  417a2f:	jge    0x417a76
  417a31:	mov    es,WORD PTR [esi-0x6a]
  417a34:	lods   eax,DWORD PTR ds:[esi]
  417a35:	jge    0x4179d0
  417a37:	shl    BYTE PTR [ebx],cl
  417a39:	or     DWORD PTR [eax],esp
  417a3b:	mov    eax,0xdf4705b7
  417a40:	cmp    BYTE PTR [eax-0x79ca3d99],dh
  417a46:	and    al,0xe1
  417a48:	das    
  417a49:	arpl   bx,bp
  417a4b:	jnp    0x417a49
  417a4d:	xor    esp,DWORD PTR fs:[eax-0x23e6e47e]
  417a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a55:	jecxz  0x417aca
  417a57:	adc    eax,0xa8d5b28e
  417a5c:	cmp    esi,DWORD PTR [esi+0x53]
  417a5f:	adc    DWORD PTR [esi],eax
  417a61:	pop    edi
  417a62:	inc    esp
  417a63:	or     bh,BYTE PTR [ecx]
  417a65:	pop    es
  417a66:	test   DWORD PTR [esi-0xf0d5b5c],edx
  417a6c:	into   
  417a6d:	imul   esi,DWORD PTR [ebx-0x1c],0x78
  417a71:	lods   al,BYTE PTR ds:[esi]
  417a72:	add    bh,al
  417a74:	mov    esp,0x55f70a6d
  417a79:	push   edi
  417a7a:	jmp    0x417a1b
  417a7c:	inc    edi
  417a7d:	mov    al,0x1e
  417a7f:	in     al,dx
  417a80:	xlat   BYTE PTR ds:[ebx]
  417a81:	pop    edi
  417a82:	stos   BYTE PTR es:[edi],al
  417a83:	or     al,0x85
  417a85:	out    dx,eax
  417a86:	int    0x8a
  417a88:	call   0x33ca:0x75b21330
  417a8f:	aaa    
  417a90:	sub    esp,edi
  417a92:	out    0x5f,eax
  417a94:	sbb    DWORD PTR [edx+0x3fd8c220],eax
  417a9a:	sub    al,0xbe
  417a9c:	into   
  417a9d:	stc    
  417a9e:	mov    BYTE PTR [edi],bl
  417aa0:	(bad)  
  417aa1:	in     al,dx
  417aa2:	fsub   st(3),st
  417aa4:	and    ebp,DWORD PTR [esi+0x13]
  417aa7:	push   edi
  417aa8:	imul   edx,esp,0xe3e51f8
  417aae:	in     al,dx
  417aaf:	xlat   BYTE PTR ds:[ebx]
  417ab0:	and    BYTE PTR [edx],bh
  417ab2:	cmp    edx,DWORD PTR [eax+edx*8+0x17]
  417ab6:	xchg   edx,eax
  417ab7:	mov    ds:0xb2861983,al
  417abc:	cmp    esi,DWORD PTR [eax]
  417abe:	push   ebx
  417abf:	inc    edx
  417ac0:	adc    eax,0x3de2acee
  417ac5:	loopne 0x417afa
  417ac7:	std    
  417ac8:	call   0xd5d6:0x9a468fd7
  417acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ad0:	enter  0xd76d,0x97
  417ad4:	jno    0x417a59
  417ad6:	pop    ecx
  417ad7:	mov    cl,0xcc
  417ad9:	(bad)  
  417ada:	mov    ah,0x86
  417adc:	jp     0x417b0a
  417ade:	push   esp
  417adf:	sbb    DWORD PTR ds:0x408a6a1a,ecx
  417ae5:	jno    0x417aca
  417ae7:	sub    BYTE PTR [eax],cl
  417ae9:	gs push eax
  417aeb:	xor    DWORD PTR [edi+0x13],ebx
  417aee:	std    
  417aef:	(bad)  
  417af0:	xchg   esp,eax
  417af1:	mov    esi,0x123afe98
  417af6:	repnz pushf 
  417af8:	inc    sp
  417afa:	imul   bh
  417afc:	int    0x59
  417afe:	stc    
  417aff:	xchg   ebp,eax
  417b00:	std    
  417b01:	or     ebp,DWORD PTR [edi-0x5d7747dd]
  417b07:	push   ebp
  417b08:	iret   
  417b09:	or     BYTE PTR [ecx],al
  417b0b:	xor    esp,edi
  417b0d:	cwde   
  417b0e:	push   esi
  417b0f:	mov    ecx,0xed611dcc
  417b14:	add    ah,bh
  417b16:	cmp    eax,0xbda8af8f
  417b1b:	stos   DWORD PTR es:[edi],eax
  417b1c:	aaa    
  417b1d:	pop    ecx
  417b1e:	(bad)  
  417b1f:	jl     0x417b71
  417b21:	rcr    BYTE PTR [ebp-0x55],0xc
  417b25:	lahf   
  417b26:	call   0x14cc:0x19159dc6
  417b2d:	xchg   esp,eax
  417b2e:	dec    edi
  417b2f:	dec    ecx
  417b30:	xor    DWORD PTR [ebp+0x6d3e87fd],edx
  417b36:	pop    ebx
  417b37:	shl    DWORD PTR [edx+ecx*2],0xa4
  417b3b:	out    dx,al
  417b3c:	and    al,0x16
  417b3e:	sar    DWORD PTR [esi],0xb0
  417b41:	cwde   
  417b42:	adc    al,0x8d
  417b44:	inc    ebp
  417b45:	sti    
  417b46:	out    0xb4,eax
  417b48:	test   BYTE PTR [eax-0x546ba701],bl
  417b4e:	push   ecx
  417b4f:	(bad)  
  417b50:	mov    esp,0x54f55d91
  417b55:	pop    ebx
  417b56:	adc    eax,0xef28ecb7
  417b5b:	lea    esp,[esi]
  417b5d:	mov    bl,0x67
  417b5f:	or     DWORD PTR [edi],esp
  417b61:	icebp  
  417b62:	(bad)  
  417b65:	in     eax,dx
  417b66:	add    ebx,ebp
  417b68:	adc    DWORD PTR [eax],edi
  417b6a:	fs dec edi
  417b6c:	push   eax
  417b6d:	pop    edi
  417b6e:	inc    eax
  417b6f:	or     BYTE PTR [edi+0x58f5b19d],bh
  417b75:	enter  0x749a,0xc9
  417b79:	push   edi
  417b7a:	(bad)  
  417b7c:	and    DWORD PTR [esi],esp
  417b7e:	je     0x417b71
  417b80:	test   ecx,esi
  417b82:	leave  
  417b83:	inc    esi
  417b84:	pop    edx
  417b85:	ret    0x6b46
  417b88:	std    
  417b89:	cbw    
  417b8b:	mov    bl,BYTE PTR [edx+0x72]
  417b8e:	cmp    ebp,esp
  417b90:	iret   
  417b91:	jecxz  0x417b2a
  417b93:	pop    ebp
  417b94:	mov    ebp,0x6edd853
  417b99:	dec    ebp
  417b9a:	mov    esp,0x5e59fdd6
  417b9f:	sahf   
  417ba0:	add    BYTE PTR [esi+0x4e336013],0xd6
  417ba7:	repnz fcomp DWORD PTR [edi-0x4eb8aa2]
  417bae:	into   
  417baf:	icebp  
  417bb0:	arpl   WORD PTR [edi-0x1d],bx
  417bb3:	sti    
  417bb4:	rcr    DWORD PTR [edi-0x38c414b2],cl
  417bba:	ror    DWORD PTR [ebx],1
  417bbc:	out    0x58,eax
  417bbe:	rcl    esi,0xab
  417bc1:	sti    
  417bc2:	cwde   
  417bc3:	inc    edx
  417bc4:	pop    ebp
  417bc5:	push   edi
  417bc6:	dec    edi
  417bc7:	je     0x417bd4
  417bc9:	mov    bh,0x17
  417bcb:	dec    ebp
  417bcc:	int3   
  417bcd:	jne    0x417bcf
  417bcf:	mov    cl,0xe5
  417bd1:	fstp   QWORD PTR [ebp+0xb]
  417bd4:	add    bh,ch
  417bd6:	or     DWORD PTR cs:[ebp+0x5564c32e],edi
  417bdd:	(bad)  
  417bde:	scas   eax,DWORD PTR es:[edi]
  417bdf:	mov    ah,0x81
  417be1:	add    BYTE PTR [ebx-0x72],bh
  417be4:	pop    ebx
  417be5:	ffree  st(7)
  417be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be8:	mov    bh,0xdd
  417bea:	mov    al,0xac
  417bec:	adc    al,0xa5
  417bee:	jne    0x417c69
  417bf0:	test   DWORD PTR ds:0xdf7b61e3,ebx
  417bf6:	(bad)  
  417bf7:	cs scas al,BYTE PTR es:[edi]
  417bf9:	lahf   
  417bfa:	(bad)
  417bfe:	sbb    bl,dl
  417c00:	fcomp  QWORD PTR [ecx]
  417c02:	and    BYTE PTR [esi+0x4],dh
  417c05:	in     eax,0xa
  417c07:	dec    ecx
  417c08:	inc    ebx
  417c09:	push   ebp
  417c0a:	leave  
  417c0b:	adc    ch,BYTE PTR [esi-0x57d3cec9]
  417c11:	fisub  DWORD PTR [edx]
  417c13:	jge    0x417be8
  417c15:	or     BYTE PTR [edx+edi*4],ch
  417c18:	adc    ebx,esp
  417c1a:	sbb    DWORD PTR [edx+edx*8-0x11393f34],esi
  417c21:	push   esi
  417c22:	inc    ebp
  417c23:	std    
  417c24:	sub    DWORD PTR [ecx],eax
  417c26:	dec    ebp
  417c27:	pop    eax
  417c28:	inc    esi
  417c29:	cmp    DWORD PTR [edi-0x1],edi
  417c2c:	bound  edi,QWORD PTR [ebx]
  417c2e:	lock pop ss
  417c30:	fs in  eax,0x44
  417c33:	sar    BYTE PTR [ebp+0x7e1e2782],cl
  417c39:	or     al,0x76
  417c3b:	jp     0x417bfa
  417c3d:	xchg   esp,eax
  417c3e:	jbe    0x417cbf
  417c40:	pop    ebx
  417c41:	inc    BYTE PTR [edi-0x29]
  417c44:	add    BYTE PTR [edi-0x7b],ah
  417c47:	out    0xea,al
  417c49:	jge    0x417ca9
  417c4b:	pusha  
  417c4c:	sub    DWORD PTR ds:0x496fad41,esi
  417c52:	in     al,dx
  417c53:	out    0x73,eax
  417c55:	pushf  
  417c56:	test   eax,0xac67575d
  417c5b:	lahf   
  417c5c:	imul   esi,ebx,0xffffffb2
  417c5f:	mov    ch,0xc
  417c61:	push   edx
  417c62:	cmp    eax,0x2d3b6182
  417c67:	xchg   edx,eax
  417c68:	(bad)  
  417c69:	call   0x7bdc:0x2bbb42d
  417c70:	inc    ebx
  417c71:	call   0x9944:0x4f137785
  417c78:	int3   
  417c79:	cmp    al,0x3d
  417c7b:	sub    eax,esi
  417c7d:	adc    DWORD PTR [edi-0x546c5c2c],edi
  417c83:	aaa    
  417c84:	lods   eax,DWORD PTR ds:[esi]
  417c85:	ins    DWORD PTR es:[edi],dx
  417c86:	jecxz  0x417cb4
  417c88:	loop   0x417cd8
  417c8a:	stos   BYTE PTR es:[edi],al
  417c8b:	dec    eax
  417c8c:	jbe    0x417d08
  417c8e:	(bad)  
  417c8f:	jb     0x417d04
  417c91:	push   edx
  417c92:	xchg   ecx,eax
  417c93:	cwde   
  417c94:	add    al,0xa
  417c96:	imul   edi,DWORD PTR [edx+ebp*8+0x24],0xffffff88
  417c9b:	loopne 0x417c64
  417c9d:	mov    bh,0xf0
  417c9f:	push   ecx
  417ca0:	push   edi
  417ca1:	rcr    BYTE PTR [esi],1
  417ca3:	cwde   
  417ca4:	clc    
  417ca5:	xchg   ah,al
  417ca7:	mov    esi,0xf2982803
  417cac:	pop    esi
  417cad:	out    dx,eax
  417cae:	jnp    0x417cfa
  417cb0:	inc    edx
  417cb1:	in     eax,0x8b
  417cb3:	icebp  
  417cb4:	sbb    bh,BYTE PTR [edx-0x21]
  417cb7:	iret   
  417cb8:	inc    edi
  417cb9:	xor    al,0x98
  417cbb:	mov    ds:0xc5f959fc,eax
  417cc0:	push   edx
  417cc1:	xor    al,0x51
  417cc3:	pcmpgtd mm6,mm7
  417cc6:	ja     0x417d07
  417cc8:	lahf   
  417cc9:	cmp    DWORD PTR [ebp-0x55],esp
  417ccc:	and    DWORD PTR [edx],0x68
  417ccf:	call   0xe5d7f27e
  417cd4:	hlt    
  417cd5:	sbb    al,0x1b
  417cd7:	int    0x7
  417cd9:	bound  esi,QWORD PTR [ebp-0x1]
  417cdc:	pop    ebx
  417cdd:	in     eax,dx
  417cde:	cmp    al,0x36
  417ce0:	xor    edi,ebx
  417ce2:	fnstenv [edx]
  417ce4:	repz fisttp DWORD PTR [eax-0x79]
  417ce8:	mov    eax,esp
  417cea:	xchg   esp,eax
  417ceb:	sub    al,BYTE PTR [edx-0x56]
  417cee:	cli    
  417cef:	inc    edx
  417cf0:	out    dx,al
  417cf1:	mov    eax,0x48c536b0
  417cf6:	inc    eax
  417cf7:	scas   eax,DWORD PTR es:[edi]
  417cf8:	sub    BYTE PTR [ecx+0x31],0xa5
  417cfc:	sub    ch,BYTE PTR [edi+0x4e35d43e]
  417d02:	add    DWORD PTR [ecx+0x1810e7bd],edx
  417d08:	add    esp,DWORD PTR [edi-0x7179b599]
  417d0e:	iret   
  417d0f:	hlt    
  417d10:	test   al,0x18
  417d12:	addr16 mov bl,0x71
  417d15:	imul   ebp,DWORD PTR [esi]
  417d18:	out    dx,eax
  417d19:	div    eax
  417d1b:	ffreep st(2)
  417d1d:	mov    eax,ds:0x946098ca
  417d22:	adc    BYTE PTR [eax-0x70],ah
  417d25:	imul   esi,ebp,0xf072b9db
  417d2b:	pop    es
  417d2c:	add    eax,eax
  417d2e:	push   0x52
  417d30:	add    eax,0x92e79b05
  417d35:	fs pop esi
  417d37:	jbe    0x417da0
  417d39:	dec    ebp
  417d3a:	mov    bh,0xd0
  417d3c:	mov    cl,0x9e
  417d3e:	ror    BYTE PTR [esi+0x7c],1
  417d41:	test   eax,0xe9be2d21
  417d46:	inc    ebx
  417d47:	pop    edx
  417d48:	add    al,dh
  417d4a:	sahf   
  417d4b:	jmp    0x417d75
  417d4d:	sub    eax,DWORD PTR [edi+0x35]
  417d50:	dec    edi
  417d51:	and    DWORD PTR [edx],0xe
  417d54:	shl    DWORD PTR [ecx-0x110080f],1
  417d5a:	int3   
  417d5b:	or     DWORD PTR [ebp+edi*8-0x1b],esi
  417d5f:	pop    edx
  417d60:	adc    cl,ch
  417d62:	push   0xd3c47cec
  417d67:	xlat   BYTE PTR ds:[ebx]
  417d68:	cdq    
  417d69:	rcl    BYTE PTR es:[edi],1
  417d6c:	push   esi
  417d6d:	xchg   esi,eax
  417d6e:	push   cs
  417d6f:	ja     0x417d44
  417d71:	dec    edx
  417d72:	into   
  417d73:	lds    esi,FWORD PTR [ebx]
  417d75:	inc    esi
  417d76:	js     0x417d67
  417d78:	push   ecx
  417d79:	dec    esi
  417d7a:	add    bh,bh
  417d7c:	inc    ecx
  417d7d:	pop    ds
  417d7e:	(bad)  
  417d7f:	push   cs
  417d80:	and    esi,esp
  417d82:	jmp    0x417d4b
  417d84:	das    
  417d85:	xchg   esp,eax
  417d86:	mov    esi,0x1652fe8
  417d8b:	mov    WORD PTR ss:[ebp+ecx*8-0x1e],?
  417d90:	inc    esp
  417d91:	jecxz  0x417d74
  417d93:	sub    ch,BYTE PTR [ebx+0x2b]
  417d96:	scas   eax,DWORD PTR es:[edi]
  417d97:	pop    ds
  417d98:	xor    al,0x6c
  417d9a:	pop    edi
  417d9b:	mov    ds:0x18b92a93,eax
  417da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417da1:	jg     0x417da3
  417da3:	fsubrp st(2),st
  417da5:	in     eax,dx
  417da6:	and    edx,DWORD PTR [esi+0x2]
  417da9:	cld    
  417daa:	mov    edi,0x2d51f05
  417daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db0:	pushf  
  417db1:	and    bh,BYTE PTR [edi-0x24]
  417db4:	xor    eax,0x84ad971c
  417db9:	fwait
  417dba:	jge    0x417dc4
  417dbc:	pop    esi
  417dbd:	mov    esi,0x92a05902
  417dc2:	fisttp DWORD PTR [ebx+0x27df11ba]
  417dc8:	push   es
  417dc9:	stc    
  417dca:	cmp    al,0x26
  417dcc:	lods   eax,DWORD PTR ds:[esi]
  417dcd:	imul   edi,DWORD PTR [ebx+eiz*1+0x5e9da8c9],0xd092b504
  417dd8:	(bad)  
  417dd9:	loope  0x417dd8
  417ddb:	adc    BYTE PTR [ecx-0x13],ah
  417dde:	leave  
  417ddf:	xor    al,0xe5
  417de1:	jo     0x417dbf
  417de3:	test   DWORD PTR [eax+eiz*2],edx
  417de6:	sbb    al,0xad
  417de8:	sub    al,0xe
  417dea:	not    edx
  417dec:	mov    BYTE PTR [edi+0x48a2dad7],dh
  417df2:	push   ecx
  417df3:	shr    BYTE PTR [edx+0x3eefbb5c],cl
  417df9:	xchg   ebx,eax
  417dfa:	mov    ecx,0xb105b30c
  417dff:	jecxz  0x417e1e
  417e01:	dec    dl
  417e03:	fnsave [eax]
  417e05:	push   ss
  417e06:	ins    BYTE PTR es:[edi],dx
  417e07:	mov    eax,ds:0xc2c637b2
  417e0c:	out    dx,al
  417e0d:	and    BYTE PTR [edi+0x23065ff],0xb2
  417e14:	jge    0x417e7c
  417e16:	loop   0x417e31
  417e18:	popa   
  417e19:	mov    WORD PTR [esi-0x13073888],fs
  417e1f:	mov    ah,BYTE PTR [eax]
  417e21:	push   ebp
  417e22:	push   esp
  417e23:	jne    0x417e11
  417e25:	mov    al,ds:0x910ab513
  417e2a:	sub    DWORD PTR ds:0xd56c03fe,ecx
  417e30:	pop    edi
  417e31:	mov    al,ds:0xdf1a5965
  417e36:	retf   
  417e37:	das    
  417e38:	mov    gs,WORD PTR ds:0x2e1a7c8c
  417e3e:	inc    esp
  417e3f:	xor    al,0x9
  417e41:	aaa    
  417e42:	mov    al,0xaa
  417e44:	(bad)  
  417e45:	fldcw  WORD PTR [edi+esi*2+0x4d]
  417e49:	and    DWORD PTR [ebx+ebp*2-0x514a141e],0xdcd941a5
  417e54:	mov    eax,0xfc590ca1
  417e59:	dec    edi
  417e5a:	add    DWORD PTR [eax-0x1d],edx
  417e5d:	addr16 jge 0x417e53
  417e60:	add    ebp,esp
  417e62:	sahf   
  417e63:	adc    esp,DWORD PTR [ebx-0x69]
  417e66:	pop    es
  417e67:	jg     0x417dfe
  417e69:	fdiv   QWORD PTR [eax]
  417e6b:	inc    edx
  417e6c:	dec    edx
  417e6d:	neg    bh
  417e6f:	and    cl,BYTE PTR [eax+0x3d7429fa]
  417e75:	inc    ebp
  417e76:	inc    edx
  417e77:	pop    ebx
  417e78:	mov    ds:0x6ed10c5a,al
  417e7d:	loope  0x417e2d
  417e7f:	lods   eax,DWORD PTR ds:[esi]
  417e80:	ja     0x417e81
  417e82:	xor    BYTE PTR [edi+0x0],dl
  417e85:	stos   DWORD PTR es:[edi],eax
  417e86:	test   eax,0xd0f805e6
  417e8b:	popw   es
  417e8d:	xchg   esi,eax
  417e8e:	push   esi
  417e8f:	outs   dx,DWORD PTR ds:[esi]
  417e90:	mov    dl,0x59
  417e92:	lds    ecx,FWORD PTR [edx-0x40e341f1]
  417e98:	sbb    DWORD PTR [edi+0x13],ebx
  417e9b:	inc    ebx
  417e9c:	and    BYTE PTR ds:[eax+0x4c6611ec],0x9d
  417ea4:	jl     0x417ec3
  417ea6:	dec    ebp
  417ea7:	inc    ebx
  417ea8:	xchg   BYTE PTR [ecx-0x4a],al
  417eab:	rol    DWORD PTR gs:[edx],1
  417eae:	dec    ebx
  417eaf:	cs jnp 0x417e61
  417eb2:	xor    BYTE PTR [edx+0x55927fd6],bl
  417eb8:	xchg   ebx,eax
  417eb9:	lds    edi,FWORD PTR [esi+0x2d26a299]
  417ebf:	repnz push eax
  417ec1:	lock ds mov ah,0xbb
  417ec5:	pop    ecx
  417ec6:	add    DWORD PTR [edx+0x3a],edi
  417ec9:	mov    ebp,0x7b22f67b
  417ece:	push   cs
  417ecf:	pop    ebx
  417ed0:	fucomip st,st(0)
  417ed2:	stc    
  417ed3:	(bad)  
  417ed4:	call   0xdedccaba
  417ed9:	cld    
  417eda:	iret   
  417edb:	mov    edi,0xd61145a9
  417ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ee1:	pop    ecx
  417ee2:	ret    
  417ee3:	std    
  417ee4:	test   al,0x25
  417ee6:	cmp    eax,0xc361d276
  417eeb:	leave  
  417eec:	mov    dh,0x55
  417eee:	sti    
  417eef:	mov    cs,WORD PTR [ebp-0x43ed5acd]
  417ef5:	hlt    
  417ef6:	cdq    
  417ef7:	sbb    ebx,DWORD PTR [ecx-0x2b]
  417efa:	inc    ebx
  417efb:	test   eax,0x47b466e6
  417f00:	pop    ebx
  417f01:	jl     0x417f40
  417f03:	add    esi,ecx
  417f05:	pop    ecx
  417f06:	aam    0x75
  417f08:	or     ch,BYTE PTR [edi-0x68b4b06]
  417f0e:	jecxz  0x417e9d
  417f10:	jno    0x417ed4
  417f12:	mov    ebp,0x27ab297
  417f17:	scas   eax,DWORD PTR es:[edi]
  417f18:	pop    ebx
  417f19:	loopne 0x417f84
  417f1b:	or     ch,dl
  417f1d:	imul   edx,DWORD PTR [ebx-0x24],0xffffffee
  417f21:	push   ebp
  417f22:	sub    WORD PTR [eax+0x59a59b87],0x2a
  417f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f2b:	xchg   DWORD PTR [edx+0x138de75e],esp
  417f31:	(bad)  
  417f32:	jbe    0x417ee8
  417f34:	loopne 0x417f7d
  417f36:	mov    DWORD PTR [esi],ebx
  417f38:	push   ebp
  417f39:	mov    edi,DWORD PTR [eax-0x70]
  417f3c:	out    dx,al
  417f3d:	dec    esp
  417f3e:	call   0xfdd584ba
  417f43:	xchg   edi,eax
  417f44:	lahf   
  417f45:	arpl   bx,sp
  417f47:	sar    BYTE PTR [ebx-0x6669ccbb],0x7e
  417f4e:	(bad)  
  417f4f:	(bad)  
  417f50:	xor    eax,0xc6518c30
  417f55:	out    dx,eax
  417f56:	xchg   ebp,eax
  417f57:	push   ebx
  417f58:	mov    ebp,edx
  417f5a:	mov    al,0xec
  417f5c:	add    esi,edi
  417f5e:	shl    BYTE PTR [eax-0x26],1
  417f61:	and    DWORD PTR [esi+ebp*2-0x7d],ebx
  417f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f67:	push   0xffffffa7
  417f69:	(bad)  
  417f6a:	mov    WORD PTR [ecx+0x31],cs
  417f6d:	cmp    DWORD PTR [edx],ebp
  417f6f:	popf   
  417f70:	push   eax
  417f71:	mov    eax,ds:0x152591f3
  417f76:	(bad)  [esi-0xd]
  417f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f7a:	and    al,0xc1
  417f7c:	retf   
  417f7d:	mov    ch,0xa3
  417f7f:	inc    ebx
  417f80:	loop   0x417f7f
  417f82:	loopne 0x417f58
  417f84:	stos   DWORD PTR es:[edi],eax
  417f85:	std    
  417f86:	inc    BYTE PTR [ebx+0x13]
  417f89:	aas    
  417f8a:	retf   
  417f8b:	xlat   BYTE PTR ds:[ebx]
  417f8c:	(bad)  
  417f8d:	push   esp
  417f8e:	or     BYTE PTR [eax+0x39],dh
  417f91:	sbb    ebp,DWORD PTR [ecx-0x7861ba94]
  417f97:	mov    edx,gs
  417f99:	mov    bh,0xe9
  417f9b:	ss iret 
  417f9d:	(bad)  
  417f9e:	aas    
  417f9f:	ret    0x1369
  417fa2:	xchg   esp,eax
  417fa3:	ja     0x417f2a
  417fa5:	jle    0x417f64
  417fa7:	cmp    bh,BYTE PTR [esi+0x9]
  417faa:	mul    DWORD PTR [ebp-0xb]
  417fad:	xor    edi,ecx
  417faf:	pop    eax
  417fb0:	cwde   
  417fb1:	and    DWORD PTR [edi],ecx
  417fb3:	out    dx,al
  417fb4:	xor    DWORD PTR [ebx+ebx*8+0x36e8bca5],0xb2f58b88
  417fbf:	and    edx,edi
  417fc1:	mov    ds:0x73fc1f0a,al
  417fc6:	call   0x9ea1:0xc98df6e3
  417fcd:	(bad)  
  417fce:	xchg   esp,eax
  417fcf:	into   
  417fd0:	(bad)  
  417fd1:	sub    ah,BYTE PTR [edi+0xf996e1a]
  417fd7:	fidiv  WORD PTR [esi]
  417fd9:	imul   edx,DWORD PTR [esi+edi*1-0x55],0xf1baf66b
  417fe1:	sub    dh,BYTE PTR [eax-0x31]
  417fe4:	xchg   DWORD PTR [eax+0x3f],esp
  417fe7:	int    0x18
  417fe9:	or     dh,dh
  417feb:	dec    ebp
  417fec:	and    DWORD PTR [esi+0x299b34b2],edi
  417ff2:	inc    edi
  417ff3:	adc    eax,0xdb8ef3b4
  417ff8:	or     BYTE PTR [ecx+0x5222cc3],dl
  417ffe:	test   DWORD PTR [ebp-0x19acc078],0xab239247
  418008:	(bad)  
  41800a:	xchg   esi,eax
  41800b:	and    eax,esi
  41800d:	add    al,0xb7
  41800f:	jno    0x417fe9
  418011:	aad    0x26
  418013:	sub    bh,cl
  418015:	xlat   BYTE PTR ss:[ebx]
  418017:	mov    bl,ch
  418019:	loopne 0x41806e
  41801b:	dec    eax
  41801c:	mov    ebx,0x138517a1
  418021:	ins    BYTE PTR es:[edi],dx
  418022:	xchg   BYTE PTR [edx+0x42],cl
  418025:	mov    ch,ah
  418027:	pop    ecx
  418028:	and    eax,0x2326ed49
  41802d:	inc    ebx
  41802e:	ds ins BYTE PTR es:[edi],dx
  418030:	jno    0x417fbf
  418032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418033:	bound  eax,QWORD PTR [eax-0x2e5aa294]
  418039:	jmp    DWORD PTR [edi]
  41803b:	cmp    DWORD PTR [eax-0x1c],edx
  41803e:	xchg   cx,ax
  418040:	pop    es
  418041:	rcl    BYTE PTR [edx+0x62],1
  418044:	jb     0x417ffd
  418046:	pop    edx
  418047:	pop    ecx
  418048:	and    esi,DWORD PTR [esi]
  41804a:	nop    DWORD PTR [eax-0x3588d9b5]
  418051:	repnz ins DWORD PTR es:[edi],dx
  418053:	popw   ds
  418055:	retf   0xf83d
  418058:	pop    ebp
  418059:	pop    ss
  41805a:	sbb    BYTE PTR ds:0x10df4991,ah
  418060:	inc    edi
  418061:	jb     0x418087
  418063:	or     bl,BYTE PTR [ecx]
  418065:	or     DWORD PTR [edx+0x482b896],ecx
  41806b:	add    eax,DWORD PTR ds:0xea5d3655
  418071:	sbb    BYTE PTR [ecx],bh
  418073:	dec    edi
  418074:	dec    edx
  418075:	shr    DWORD PTR [esi-0x1b09c2f5],0xe9
  41807c:	data16 div BYTE PTR [ebp+0x2a301624]
  418083:	jge    0x4180c1
  418085:	sbb    DWORD PTR [eax-0x19],ecx
  418088:	jo     0x418064
  41808a:	pushf  
  41808b:	loop   0x418051
  41808d:	xchg   esp,eax
  41808e:	int3   
  41808f:	std    
  418090:	pusha  
  418091:	cmp    DWORD PTR [edi-0x58ffadc6],ebp
  418097:	add    al,BYTE PTR [edx]
  418099:	sub    ebp,eax
  41809b:	(bad)  
  41809c:	(bad)  
  41809d:	dec    eax
  41809e:	and    al,0x7d
  4180a0:	lea    ecx,[esi+0x6b]
  4180a3:	cmp    al,0xaa
  4180a5:	mov    ch,0x71
  4180a7:	and    al,0x57
  4180a9:	cld    
  4180aa:	fcomp  DWORD PTR [ecx-0x7dfe6790]
  4180b0:	mov    bh,0x6c
  4180b2:	sub    al,0x1d
  4180b4:	cdq    
  4180b5:	out    dx,al
  4180b6:	xor    eax,0xd508b059
  4180bb:	popf   
  4180bc:	cmp    eax,eax
  4180be:	sti    
  4180bf:	imul   ebx,DWORD PTR [esi+0x70edbc0b],0x4d
  4180c6:	add    al,0x6c
  4180c8:	ins    BYTE PTR es:[edi],dx
  4180c9:	mov    edi,0x44ce422
  4180ce:	mov    ecx,0x82009b4f
  4180d3:	sar    DWORD PTR [ecx+0x3870c00a],1
  4180d9:	fbstp  TBYTE PTR [eax]
  4180db:	cwde   
  4180dc:	fsubr  DWORD PTR [edi-0x5bc66aa7]
  4180e2:	dec    ebx
  4180e3:	add    dl,bl
  4180e5:	push   edi
  4180e6:	ins    DWORD PTR es:[edi],dx
  4180e7:	test   al,0x2c
  4180e9:	dec    esp
  4180ea:	mov    bh,0x97
  4180ec:	jg     0x41812b
  4180ee:	les    edi,FWORD PTR [edx+0x37]
  4180f1:	cmp    BYTE PTR [edi-0x3a0ce2c0],dh
  4180f7:	pop    ebx
  4180f8:	xor    al,0x27
  4180fa:	(bad)  
  4180fb:	retf   
  4180fc:	stos   BYTE PTR es:[edi],al
  4180fd:	repnz cwde 
  4180ff:	or     al,0x1b
  418101:	dec    edx
  418102:	inc    esi
  418103:	dec    ebp
  418104:	sub    DWORD PTR [ebx+esi*4+0x4b],0xffffffe3
  418109:	gs rcr edi,1
  41810c:	dec    ecx
  41810d:	outs   dx,BYTE PTR ds:[esi]
  41810e:	test   al,0x7b
  418110:	sbb    bh,BYTE PTR [bx+di+0x47]
  418114:	or     BYTE PTR [edi+esi*4+0x51],0xc3
  418119:	jp     0x4180aa
  41811b:	mov    ch,0x23
  41811d:	mov    ds:0x4750f53f,eax
  418122:	loop   0x418105
  418124:	(bad)  
  418125:	xchg   ecx,eax
  418126:	ins    DWORD PTR es:[edi],dx
  418127:	and    eax,0x76c6a3d0
  41812c:	cld    
  41812d:	out    dx,eax
  41812e:	jns    0x41819f
  418130:	enter  0x939d,0xbd
  418134:	or     eax,0x6fb38717
  418139:	xlat   BYTE PTR ds:[ebx]
  41813a:	hlt    
  41813b:	lock mov eax,0x2511ae5e
  418141:	ss jl  0x418174
  418144:	mov    ebp,0xaa80035d
  418149:	iret   
  41814a:	mov    edx,0x6167bffd
  41814f:	lock out 0xe4,eax
  418152:	xchg   ecx,eax
  418153:	test   BYTE PTR [eax-0x21],ah
  418156:	std    
  418157:	aad    0xcd
  418159:	adc    esp,DWORD PTR [ebx]
  41815b:	pop    ss
  41815c:	jmp    0x418104
  41815e:	push   eax
  41815f:	fcom   DWORD PTR [esi-0x69eba71a]
  418165:	lods   al,BYTE PTR ds:[esi]
  418166:	popf   
  418167:	jnp    0x41814d
  418169:	push   edi
  41816a:	inc    ebx
  41816b:	out    0xb1,eax
  41816d:	addr16 push edx
  41816f:	pusha  
  418170:	xchg   edx,eax
  418171:	jno    0x4181bf
  418173:	dec    esi
  418174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418175:	mov    WORD PTR ds:0x11fb226e,fs
  41817b:	lods   eax,DWORD PTR ds:[esi]
  41817c:	push   edi
  41817d:	or     al,0xcd
  41817f:	xchg   BYTE PTR [edi],ch
  418181:	xchg   edi,eax
  418182:	pop    esp
  418183:	lea    edi,[esi+ebx*4+0x790393b2]
  41818a:	dec    ebp
  41818c:	sub    eax,0x1ffbc009
  418191:	push   0xf5f80d
  418196:	aaa    
  418197:	push   eax
  418198:	sbb    BYTE PTR [edx-0x3ddb9e16],0xb7
  41819f:	jecxz  0x41816c
  4181a1:	cwde   
  4181a2:	aas    
  4181a3:	retf   0xba9c
  4181a6:	push   0x2d
  4181a8:	pusha  
  4181a9:	inc    esp
  4181aa:	clc    
  4181ab:	repz data16 mov ah,0x24
  4181af:	mov    eax,es
  4181b1:	add    BYTE PTR [ecx-0x21],al
  4181b4:	fild   DWORD PTR [eax+edi*8]
  4181b7:	push   0x3
  4181b9:	mov    al,ds:0x8ee01c73
  4181be:	es pop ebp
  4181c0:	and    edi,edx
  4181c2:	sub    ebp,esp
  4181c4:	fwait
  4181c5:	dec    eax
  4181c6:	cmp    DWORD PTR [eax+0x5c],0xffffffbf
  4181ca:	jp     0x418209
  4181cc:	mov    edx,0x2d972e74
  4181d1:	lods   al,BYTE PTR ds:[esi]
  4181d2:	mov    bl,0x45
  4181d4:	rol    DWORD PTR [edi+0x622b6ef9],cl
  4181da:	(bad)  
  4181db:	hlt    
  4181dc:	shl    ebx,1
  4181de:	div    DWORD PTR [ecx-0x75fdc593]
  4181e4:	icebp  
  4181e5:	sub    al,bl
  4181e7:	sbb    dh,ah
  4181e9:	mov    ah,0x5e
  4181eb:	push   ecx
  4181ec:	arpl   cx,cx
  4181ee:	out    0xbd,eax
  4181f0:	cmp    al,0xc8
  4181f2:	jbe    0x4181ee
  4181f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181f5:	test   ecx,edx
  4181f7:	lahf   
  4181f8:	nop
  4181f9:	lahf   
  4181fa:	loope  0x41818f
  4181fc:	shl    BYTE PTR [eax-0x3a266085],cl
  418202:	adc    eax,0x4b69b3f7
  418207:	dec    ebp
  418208:	push   esi
  418209:	std    
  41820a:	pop    eax
  41820b:	mov    ebp,0x3a9c7e62
  418210:	mov    WORD PTR [edx],?
  418212:	ja     0x41819d
  418214:	or     DWORD PTR [esp+eiz*2-0x773aa170],esi
  41821b:	mov    bl,0x82
  41821d:	(bad)  
  41821e:	and    DWORD PTR [ebx],esi
  418220:	jle    0x418238
  418222:	sub    DWORD PTR [edx-0xef844c3],0x2e8a55af
  41822c:	push   cs
  41822d:	inc    ebp
  41822e:	sbb    ah,BYTE PTR [esi+0x2dd6178e]
  418234:	ficomp DWORD PTR [edx-0x386a7d74]
  41823a:	cdq    
  41823b:	dec    esp
  41823c:	addr16 xchg edi,eax
  41823e:	repz or edx,DWORD PTR [ebx]
  418241:	retf   
  418242:	jge    0x418212
  418244:	cmp    eax,0x3b91c41b
  418249:	push   ds
  41824a:	sar    BYTE PTR [esi],0xb9
  41824d:	aas    
  41824e:	fnstsw WORD PTR [ebp-0x9feeb6]
  418254:	sti    
  418255:	jae    0x4182a4
  418257:	repz xor ecx,DWORD PTR [ebx-0x62]
  41825b:	mov    ds:0xc4053b5f,eax
  418260:	jnp    0x41827d
  418262:	lods   eax,DWORD PTR ds:[esi]
  418263:	ins    BYTE PTR es:[edi],dx
  418264:	mov    dl,0xea
  418266:	dec    edi
  418267:	mov    ecx,0x68f7272
  41826c:	into   
  41826d:	jbe    0x41821e
  41826f:	and    eax,0xefeafd41
  418274:	shl    ebp,cl
  418276:	repnz (bad) [ecx]
  418279:	and    BYTE PTR [edi-0x7c9afa60],bl
  41827f:	mov    eax,0x410256f2
  418284:	dec    ecx
  418285:	sub    esp,esp
  418287:	or     DWORD PTR [edi],esp
  418289:	push   cs
  41828a:	mov    ds:0x1b9b769d,al
  41828f:	int3   
  418290:	mov    edi,0xbb568160
  418295:	inc    edx
  418296:	pop    esi
  418297:	adc    DWORD PTR [esi],ecx
  418299:	into   
  41829a:	icebp  
  41829b:	and    eax,0xdc055067
  4182a0:	dec    ebx
  4182a1:	sbb    esp,esi
  4182a3:	xor    DWORD PTR ds:0x9307e809,ecx
  4182a9:	xor    eax,0x77d2da15
  4182ae:	adc    DWORD PTR [esi+0x5d],esi
  4182b1:	(bad)  
  4182b2:	xchg   ebp,eax
  4182b3:	int    0x86
  4182b5:	loopne 0x41831a
  4182b7:	(bad)  
  4182b8:	js     0x41828a
  4182ba:	lods   eax,DWORD PTR ds:[esi]
  4182bb:	leave  
  4182bc:	cs jg  0x4182e5
  4182bf:	test   eax,0xf33e47c4
  4182c4:	sub    eax,0x9cfbb289
  4182c9:	sub    BYTE PTR [esi-0x3d13d564],ah
  4182cf:	mov    es,WORD PTR [eax-0x5a0b42fb]
  4182d5:	hlt    
  4182d6:	rcl    esp,0xd1
  4182d9:	out    dx,al
  4182da:	mov    dl,0x99
  4182dc:	out    dx,al
  4182dd:	dec    esi
  4182de:	xchg   ecx,eax
  4182df:	mov    al,0x2a
  4182e1:	(bad)  
  4182e2:	clc    
  4182e3:	push   cs
  4182e4:	shl    ch,cl
  4182e6:	xchg   esp,ecx
  4182e8:	into   
  4182e9:	imul   esp,edx,0x7c
  4182ec:	clc    
  4182ed:	cwde   
  4182ee:	dec    ebx
  4182ef:	test   al,0x3d
  4182f1:	stos   DWORD PTR es:[edi],eax
  4182f2:	shr    BYTE PTR [eax+ebp*8-0x4c],cl
  4182f6:	retf   
  4182f7:	xchg   ecx,eax
  4182f8:	(bad)  
  4182f9:	(bad)  
  4182fa:	call   0xf651f062
  4182ff:	pusha  
  418300:	xchg   edx,eax
  418301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418302:	repnz nop
  418304:	(bad)  
  418305:	imul   eax,DWORD PTR [eax],0xffffff8c
  418308:	push   eax
  418309:	mov    edx,0x38e28fec
  41830e:	mov    edi,0xc686646b
  418313:	cld    
  418314:	lds    esp,FWORD PTR [esi-0x48]
  418317:	inc    eax
  418318:	repz push edx
  41831a:	out    0x15,al
  41831c:	das    
  41831d:	int3   
  41831e:	mov    ?,WORD PTR [ecx]
  418320:	sbb    BYTE PTR [ecx-0x5e],ah
  418323:	push   0xffffff83
  418325:	je     0x41838e
  418327:	jl     0x4182b7
  418329:	mov    ecx,0x817ab706
  41832e:	inc    esi
  41832f:	push   0x30
  418331:	xor    edi,DWORD PTR [esi-0x5b]
  418334:	enter  0x3ec6,0xb1
  418338:	mov    ch,0x1d
  41833a:	xchg   ecx,eax
  41833b:	ret    
  41833c:	sub    al,0xae
  41833e:	cmp    esi,DWORD PTR [ebx+0x33570948]
  418344:	dec    edi
  418345:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  418347:	cli    
  418348:	mov    edi,0x180ab0de
  41834d:	mov    ah,0xb4
  41834f:	xchg   ebx,eax
  418350:	add    BYTE PTR [edx+0x2d],bh
  418353:	stc    
  418354:	jg     0x418315
  418356:	add    BYTE PTR [esp+eax*2],ch
  418359:	ins    DWORD PTR es:[edi],dx
  41835a:	out    0xd6,al
  41835c:	js     0x4183bc
  41835e:	out    0x37,al
  418360:	cmp    DWORD PTR [edx],edx
  418362:	push   0x6d7c9338
  418367:	int3   
  418368:	dec    esi
  418369:	loopne 0x41833a
  41836b:	and    ebp,DWORD PTR [esp+eax*8+0x16947870]
  418372:	push   ds
  418373:	adc    DWORD PTR ds:0x5778aaff,eax
  418379:	add    ch,bh
  41837b:	jns    0x418323
  41837d:	jg     0x418389
  41837f:	pop    ecx
  418380:	mov    ds:0x61b671e2,eax
  418385:	loope  0x4183a7
  418387:	mov    edx,0x350e0402
  41838c:	inc    edx
  41838d:	cmp    eax,0x565b316
  418392:	adc    esp,DWORD PTR [esp+edi*2+0x1ca769a]
  418399:	int    0xf1
  41839b:	mov    ebp,0xbb3ae086
  4183a0:	outs   dx,DWORD PTR ds:[esi]
  4183a1:	popf   
  4183a2:	mov    ah,0x38
  4183a4:	pop    esi
  4183a5:	xchg   edi,eax
  4183a6:	(bad)  ds:0x62e46ff1
  4183ac:	add    cl,dl
  4183ae:	daa    
  4183af:	xchg   ecx,eax
  4183b0:	xor    BYTE PTR [esi],0x90
  4183b3:	xchg   esi,eax
  4183b4:	fldcw  WORD PTR [eax-0x60]
  4183b7:	xchg   edx,eax
  4183b8:	aas    
  4183b9:	dec    eax
  4183ba:	jb     0x418401
  4183bc:	inc    edi
  4183bd:	imul   edi,DWORD PTR [ebx+ebx*1],0xfa8ca9f2
  4183c4:	dec    esi
  4183c5:	cwde   
  4183c6:	push   esi
  4183c7:	jl     0x4183dd
  4183c9:	loop   0x41843a
  4183cb:	mov    bh,0xfa
  4183cd:	out    0x46,al
  4183cf:	loopne 0x41839e
  4183d1:	push   esi
  4183d2:	es dec esi
  4183d4:	cli    
  4183d5:	mov    eax,ds:0xcda20ca6
  4183da:	jno    0x41835d
  4183dc:	jns    0x4183da
  4183de:	mov    dh,0x4c
  4183e0:	pop    ds
  4183e1:	sahf   
  4183e2:	popf   
  4183e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183e4:	shl    BYTE PTR [ebp+0x41e7df68],1
  4183ea:	cmp    BYTE PTR [eax+0x20],ah
  4183ed:	sbb    esi,DWORD PTR [ebp-0xd]
  4183f0:	je     0x41837c
  4183f2:	loop   0x4183b1
  4183f4:	pop    edx
  4183f5:	int    0xb7
  4183f7:	js     0x41846d
  4183f9:	jae    0x418430
  4183fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183fc:	stc    
  4183fd:	rol    BYTE PTR [edi],1
  4183ff:	out    0xb8,al
  418401:	add    eax,0xa2d3e0ce
  418406:	cli    
  418407:	int3   
  418408:	fwait
  418409:	jae    0x4183d9
  41840b:	shr    DWORD PTR ds:0x430666b1,cl
  418411:	shl    DWORD PTR [ebx],1
  418413:	ds sub al,bh
  418416:	jns    0x418468
  418418:	dec    esi
  418419:	jle    0x418474
  41841b:	jecxz  0x41848b
  41841d:	mov    dl,0x57
  41841f:	inc    esp
  418420:	jge    0x41846d
  418422:	pop    edi
  418423:	jbe    0x4183ff
  418425:	outs   dx,DWORD PTR ds:[esi]
  418426:	lods   al,BYTE PTR ds:[esi]
  418427:	mov    ch,0xc0
  418429:	retf   
  41842a:	test   DWORD PTR [edi+0x47238794],ebp
  418430:	mov    ebp,0xa665522e
  418435:	in     eax,0x5a
  418437:	std    
  418438:	bnd gs jo 0x418488
  41843c:	ins    DWORD PTR es:[edi],dx
  41843d:	fstp   QWORD PTR ds:0x7a742236
  418443:	push   eax
  418444:	push   ecx
  418445:	lock mov ch,BYTE PTR [edx+edx*2-0x7eef35ab]
  41844d:	fisubr DWORD PTR [esi+esi*8+0x18c3cee7]
  418454:	test   BYTE PTR [ecx+0x5e07fb73],bh
  41845a:	fidivr DWORD PTR [eax]
  41845c:	test   al,0x1c
  41845e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41845f:	pop    esi
  418460:	inc    ebx
  418461:	mov    cl,0xc8
  418463:	sub    DWORD PTR [ebp-0x79],esp
  418466:	push   edx
  418467:	sti    
  418468:	mov    BYTE PTR [edx],bh
  41846a:	dec    esp
  41846b:	push   ecx
  41846c:	dec    ecx
  41846e:	jg     0x418487
  418470:	jns    0x4184e2
  418472:	xor    al,0x59
  418474:	cmp    al,0x24
  418476:	scas   al,BYTE PTR es:[edi]
  418477:	jmp    0x5c4eecc
  41847c:	fstp   st(4)
  41847e:	inc    ebx
  41847f:	pop    ss
  418480:	and    dh,dl
  418482:	and    dl,ah
  418484:	mov    esi,0x153c4ab0
  418489:	dec    ebx
  41848a:	pop    eax
  41848b:	add    ecx,DWORD PTR [ecx+0x21a1ab23]
  418491:	jmp    0x2ee9:0xc0acb7df
  418498:	mov    ebp,0x4ebcc83b
  41849d:	sub    al,0x75
  41849f:	and    al,BYTE PTR [ebp+0x7b68c14b]
  4184a5:	xlat   BYTE PTR ds:[ebx]
  4184a6:	aaa    
  4184a7:	xor    eax,0x4fa6e977
  4184ac:	push   esi
  4184ad:	stos   DWORD PTR es:[edi],eax
  4184ae:	rol    dl,cl
  4184b0:	jo     0x4184fe
  4184b2:	js     0x4184fa
  4184b4:	xchg   BYTE PTR [ecx+edi*4+0x78dc3666],bh
  4184bb:	mov    ecx,DWORD PTR [eax+ecx*2-0x6949f40b]
  4184c2:	int    0xc4
  4184c4:	loop   0x418519
  4184c6:	pop    esp
  4184c7:	jge    0x418481
  4184c9:	scas   eax,DWORD PTR es:[edi]
  4184ca:	or     bh,BYTE PTR [ecx]
  4184cc:	(bad)  [ebp-0x7c]
  4184cf:	shl    BYTE PTR [eax],1
  4184d1:	or     DWORD PTR [ecx],edx
  4184d3:	inc    ebx
  4184d4:	sahf   
  4184d5:	retf   0x7992
  4184d8:	cmp    DWORD PTR [ebx+eax*8-0x33],edx
  4184dc:	dec    esp
  4184dd:	lods   eax,DWORD PTR ds:[esi]
  4184de:	sub    DWORD PTR [edi+0x54404e9c],ebp
  4184e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184e5:	sub    BYTE PTR [ecx],bl
  4184e7:	sar    DWORD PTR [ecx+0x68],cl
  4184ea:	or     dh,ch
  4184ec:	aas    
  4184ed:	push   0x2b489ef2
  4184f2:	sub    al,0xb0
  4184f4:	pop    edi
  4184f5:	jns    0x418530
  4184f7:	je     0x41854b
  4184f9:	or     DWORD PTR [ebp+0x5b],edi
  4184fc:	fcmovnb st,st(2)
  4184fe:	bswap  eax
  418500:	stc    
  418501:	ret    0x1821
  418504:	push   esi
  418505:	sbb    BYTE PTR [esi-0x1107d9b0],ah
  41850b:	in     eax,dx
  41850c:	je     0x41852f
  41850e:	or     bl,0xa8
  418511:	leave  
  418512:	lock mov edx,0x6cf0ffe5
  418518:	jmp    0x7f78fa92
  41851d:	xchg   edx,eax
  41851e:	stos   DWORD PTR es:[edi],eax
  41851f:	loopne 0x4184e0
  418521:	fsubr  QWORD PTR [edi-0x67ba8dda]
  418527:	xor    BYTE PTR [edi-0x47104ed8],bl
  41852d:	mov    BYTE PTR [edx-0x430e537a],ch
  418533:	test   eax,esp
  418535:	or     DWORD PTR [ecx-0x68],edx
  418538:	adc    al,0xd4
  41853a:	pop    es
  41853b:	(bad)  
  41853d:	push   edi
  41853e:	dec    edx
  41853f:	inc    esi
  418540:	mov    ecx,0x94bea68c
  418545:	mov    edx,0x83e4c7f7
  41854a:	inc    eax
  41854b:	fwait
  41854c:	rcl    BYTE PTR [ebp+0x73],cl
  41854f:	stos   BYTE PTR es:[edi],al
  418550:	inc    eax
  418551:	push   edi
  418552:	push   ss
  418553:	push   esp
  418554:	push   edi
  418555:	fisub  WORD PTR [ebx+0x119b9fe5]
  41855b:	pop    esp
  41855c:	jb     0x4184f9
  41855e:	pop    ss
  41855f:	xor    BYTE PTR [ebp+0x38],dl
  418562:	je     0x41852c
  418564:	sub    dh,BYTE PTR [edx]
  418566:	adc    DWORD PTR [eax+esi*8-0x619956fc],eax
  41856d:	stos   BYTE PTR es:[edi],al
  41856e:	cmp    DWORD PTR [ebx+0x49],edi
  418571:	mov    ds:0x597fedc3,al
  418576:	lods   al,BYTE PTR ds:[esi]
  418577:	pop    esi
  418578:	pop    ecx
  418579:	sbb    eax,0xa6d79119
  41857e:	loop   0x418576
  418580:	(bad)  
  418581:	dec    ebp
  418582:	test   eax,0x6c453133
  418587:	pop    eax
  418588:	and    eax,0xc1072871
  41858e:	pop    eax
  41858f:	mov    edi,edi
  418591:	loopne 0x418566
  418593:	shr    edi,1
  418595:	and    edi,DWORD PTR [ebp+ebx*1+0x7b7113c4]
  41859c:	in     eax,dx
  41859d:	inc    eax
  41859e:	imul   DWORD PTR [ebp-0x15]
  4185a1:	rol    ecx,1
  4185a3:	push   ss
  4185a4:	add    edx,DWORD PTR [eax-0x31]
  4185a7:	pop    ecx
  4185a8:	pop    esp
  4185a9:	or     eax,0xf7449f84
  4185ae:	dec    edi
  4185af:	stos   BYTE PTR es:[edi],al
  4185b0:	jmp    0x4bef6822
  4185b5:	cmp    BYTE PTR [eax+0x79],0x7
  4185b9:	stos   BYTE PTR es:[edi],al
  4185ba:	push   es
  4185bb:	push   edx
  4185bc:	lea    esp,[ebp-0x751554bb]
  4185c2:	popf   
  4185c3:	fcomip st,st(0)
  4185c5:	nop
  4185c6:	test   DWORD PTR [edx-0x4574cef1],esi
  4185cc:	push   0xa90f61da
  4185d1:	mov    eax,0xca4e6c8b
  4185d6:	jl     0x41862f
  4185d8:	(bad)  
  4185d9:	mov    al,ds:0xe8f4a62e
  4185de:	xchg   edi,eax
  4185df:	das    
  4185e0:	loop   0x418580
  4185e2:	jae    0x4185c1
  4185e4:	jne    0x41862c
  4185e6:	test   DWORD PTR [eax+0xc94624d],edx
  4185ec:	cwde   
  4185ed:	mov    cl,0xb
  4185ef:	clc    
  4185f0:	(bad)  
  4185f1:	sbb    al,0x62
  4185f3:	dec    esi
  4185f4:	adc    dl,BYTE PTR [esi]
  4185f6:	and    DWORD PTR [esi],edi
  4185f8:	add    al,0x28
  4185fa:	push   ebp
  4185fb:	mov    bl,0xe9
  4185fd:	pushf  
  4185fe:	das    
  4185ff:	sbb    ch,bh
  418601:	je     0x4185e1
  418603:	and    al,0x33
  418605:	stos   BYTE PTR es:[edi],al
  418606:	out    0x82,eax
  418608:	xor    eax,0x98ee6265
  41860d:	mov    edx,0x716fecb
  418612:	sbb    BYTE PTR [ebp+ebx*4+0x59],0xdc
  418617:	jle    0x41864a
  418619:	dec    ebp
  41861a:	retf   0x3c8b
  41861d:	loop   0x4185cc
  41861f:	xor    eax,esi
  418621:	xchg   ebp,eax
  418622:	add    eax,0xf076dd1
  418627:	fs push ds
  418629:	mov    dl,0x46
  41862b:	lock lahf 
  41862d:	add    eax,DWORD PTR [eax]
  41862f:	lahf   
  418630:	pop    ds
  418631:	push   esi
  418632:	icebp  
  418633:	sbb    al,0x48
  418635:	mov    eax,0x4f9bc4bc
  41863a:	pop    esp
  41863b:	idiv   eax
  41863d:	shr    DWORD PTR cs:[edi+0x6503a100],0xb0
  418645:	aad    0x5e
  418647:	cmp    eax,0x6d0d0774
  41864c:	xor    bh,BYTE PTR [edi+0x76]
  41864f:	pop    ebp
  418650:	jbe    0x418641
  418652:	add    dl,BYTE PTR [edi+edi*4+0x0]
  418656:	push   ecx
  418657:	into   
  418658:	xchg   BYTE PTR [edi+0x47],ch
  41865b:	pop    esp
  41865c:	ins    DWORD PTR es:[edi],dx
  41865d:	cli    
  41865e:	and    al,0x82
  418660:	add    al,0xfa
  418662:	inc    edx
  418663:	outs   dx,DWORD PTR ds:[esi]
  418664:	cmp    al,0x53
  418666:	cmp    ebx,DWORD PTR [ebp+0xdd42d14]
  41866c:	xchg   DWORD PTR [ebx+0x740412c2],edi
  418672:	or     al,0xb3
  418674:	push   0x25bb1eb9
  418679:	fdiv   QWORD PTR [eax]
  41867b:	lods   al,BYTE PTR ds:[esi]
  41867c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41867d:	pop    ecx
  41867e:	(bad)  
  41867f:	shl    DWORD PTR [esi],cl
  418681:	call   0xe6ebe603
  418686:	lahf   
  418687:	mov    cl,0xbf
  418689:	fldenv [edi+edx*1-0x7d]
  41868d:	ja     0x4186be
  41868f:	ficomp WORD PTR [ebx+ebx*2]
  418692:	inc    edi
  418693:	inc    ebp
  418694:	or     al,0x5b
  418696:	xor    ebp,eax
  418698:	loope  0x418714
  41869a:	fwait
  41869b:	inc    ebx
  41869c:	(bad)  
  41869d:	xor    bl,ah
  41869f:	dec    ebx
  4186a0:	lock mov ds:0x396950bd,eax
  4186a6:	in     eax,dx
  4186a7:	popf   
  4186a8:	push   eax
  4186a9:	and    BYTE PTR [eax],ah
  4186ab:	cwde   
  4186ac:	dec    ebx
  4186ad:	or     esp,DWORD PTR [esi+0x2f]
  4186b0:	or     al,0xd5
  4186b2:	mov    edi,fs
  4186b4:	outs   dx,DWORD PTR ds:[esi]
  4186b5:	ret    
  4186b6:	xchg   ebx,eax
  4186b7:	jb     0x4186c6
  4186b9:	pop    edi
  4186ba:	repnz ror DWORD PTR [ebx-0x3f],0xe
  4186bf:	sbb    DWORD PTR [eax],esi
  4186c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186c2:	mov    eax,ds:0xcef6f910
  4186c7:	lods   eax,DWORD PTR ds:[esi]
  4186c8:	pop    ecx
  4186c9:	push   0x65
  4186cb:	ja     0x418658
  4186cd:	fs leave 
  4186cf:	pop    ss
  4186d0:	in     eax,0x29
  4186d2:	mov    edi,0xc43789a5
  4186d7:	std    
  4186d8:	push   ds
  4186d9:	gs pushf 
  4186db:	or     eax,0x3583e750
  4186e0:	ins    BYTE PTR es:[edi],dx
  4186e1:	ins    DWORD PTR es:[edi],dx
  4186e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186e3:	mov    ebp,0x897f9e90
  4186e8:	inc    ebx
  4186e9:	lods   al,BYTE PTR ds:[esi]
  4186ea:	icebp  
  4186eb:	xor    eax,0xc9a3bcef
  4186f0:	sar    BYTE PTR [eax+ebx*2],1
  4186f3:	xor    al,0xa4
  4186f5:	mov    ds:0x2883ae44,al
  4186fa:	arpl   si,sp
  4186fc:	in     al,dx
  4186fd:	jnp    0x418723
  4186ff:	es call 0x24ce:0x9abd2488
  418707:	rcr    edi,1
  418709:	nop
  41870a:	aaa    
  41870b:	cmp    esi,0x74
  41870e:	jle    0x4186e8
  418710:	dec    esp
  418711:	lds    esi,FWORD PTR [edx-0xf]
  418714:	and    BYTE PTR [eax],ah
  418716:	sbb    BYTE PTR [edx+0x5c],0x66
  41871a:	xchg   ecx,eax
  41871b:	rol    DWORD PTR [ebx],0xf8
  41871e:	jmp    0x65b5d87e
  418723:	out    0xc1,eax
  418725:	inc    edi
  418726:	xor    ebp,DWORD PTR [edi-0x17a1585e]
  41872c:	idiv   ah
  41872e:	(bad)  ds:0x93717fb7
  418734:	and    BYTE PTR [edi],bl
  418736:	jmp    0xc1d398cf
  41873b:	repnz sub eax,0x397e23b6
  418741:	ror    esi,cl
  418743:	mov    dh,0x4
  418745:	not    dl
  418747:	or     al,0xc5
  418749:	int    0xbd
  41874b:	mov    bl,0x62
  41874d:	push   ss
  41874e:	and    esp,DWORD PTR [ebx-0x7a]
  418751:	mov    DWORD PTR [eax],ebp
  418753:	retf   
  418754:	into   
  418755:	push   0x83eb8493
  41875a:	mov    bl,0x68
  41875c:	mov    bh,ch
  41875e:	jecxz  0x418795
  418760:	xor    ch,cl
  418762:	dec    esp
  418763:	inc    ebp
  418764:	xchg   DWORD PTR [edi],esp
  418766:	mov    edx,DWORD PTR [edi]
  418768:	xchg   ebp,eax
  418769:	jmp    0x418727
  41876b:	pop    edx
  41876c:	icebp  
  41876d:	cmp    al,0xf8
  41876f:	inc    esi
  418770:	mov    ds:0x451f805b,al
  418775:	mov    ch,0x8a
  418777:	inc    edx
  418778:	and    dl,ch
  41877a:	loopne 0x41874d
  41877c:	into   
  41877d:	test   DWORD PTR [ebp-0x30],edi
  418780:	iret   
  418781:	push   ebx
  418782:	retf   
  418783:	xchg   edx,eax
  418784:	das    
  418785:	or     cl,BYTE PTR [ecx+0x79]
  418788:	(bad)  
  418789:	and    al,0xef
  41878b:	cwde   
  41878c:	or     al,0xb9
  41878e:	test   al,0xe4
  418790:	sbb    eax,DWORD PTR [eax-0x1ac2fd84]
  418796:	stos   BYTE PTR es:[edi],al
  418797:	xchg   ecx,eax
  418798:	lods   eax,DWORD PTR ds:[esi]
  418799:	or     eax,0xd4add366
  41879e:	and    esi,DWORD PTR [edi+ebx*2+0xd]
  4187a2:	jl     0x4187ec
  4187a4:	add    ah,BYTE PTR [edi-0x3d43a734]
  4187aa:	stos   DWORD PTR es:[edi],eax
  4187ab:	out    0xf8,eax
  4187ad:	xchg   DWORD PTR [eax],ecx
  4187af:	in     al,dx
  4187b0:	out    0xef,eax
  4187b2:	repz mov bh,0x96
  4187b5:	(bad)  ds:0x6b448353
  4187bb:	push   ebp
  4187bc:	call   0x2253a364
  4187c1:	ja     0x4187e6
  4187c3:	fwait
  4187c4:	push   eax
  4187c5:	dec    edi
  4187c6:	push   ebp
  4187c7:	pop    eax
  4187c8:	popf   
  4187c9:	ss adc bl,ah
  4187cc:	mov    bh,0xe2
  4187ce:	ror    bl,cl
  4187d0:	xchg   ebx,eax
  4187d1:	lods   eax,DWORD PTR es:[esi]
  4187d3:	push   0x3fade698
  4187d8:	(bad)  
  4187da:	lahf   
  4187db:	stc    
  4187dc:	pusha  
  4187dd:	dec    edx
  4187de:	jl     0x41877e
  4187e0:	cwde   
  4187e1:	or     bh,ch
  4187e3:	dec    edx
  4187e4:	and    BYTE PTR [ecx+eax*2-0x51bb064f],0x8e
  4187ec:	dec    eax
  4187ed:	inc    edi
  4187ee:	enter  0x83f7,0x25
  4187f2:	in     eax,0x70
  4187f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187f6:	data16 ja 0x4187d1
  4187f9:	dec    esi
  4187fa:	movntps XMMWORD PTR [ecx-0x7ded0e89],xmm1
  418801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418802:	jle    0x4187af
  418804:	fdiv   DWORD PTR [esi]
  418806:	pop    ecx
  418807:	pop    esp
  418808:	sbb    DWORD PTR [ebx],esi
  41880a:	xchg   esi,eax
  41880b:	mov    ebp,0x2a345a84
  418810:	xchg   esp,eax
  418811:	inc    ebx
  418812:	add    al,0xe1
  418814:	mov    al,0xe0
  418816:	jle    0x418885
  418818:	push   ebx
  418819:	add    DWORD PTR [ecx],ebp
  41881b:	(bad)  
  41881c:	inc    esi
  41881e:	push   ebx
  41881f:	pop    es
  418820:	jnp    0x4187fc
  418822:	push   ebx
  418823:	sbb    al,BYTE PTR [ecx-0x19]
  418826:	sub    DWORD PTR [ecx+0x648ede44],0x9440761
  418830:	gs retf 
  418832:	push   ebx
  418833:	shl    ah,0x67
  418836:	sbb    al,0x29
  418838:	test   al,0x7
  41883a:	in     eax,0xe9
  41883c:	in     al,0x5b
  41883e:	(bad)  
  41883f:	ror    al,0x73
  418842:	inc    esi
  418843:	fcmovb st,st(4)
  418845:	aad    0x3a
  418847:	push   esp
  418848:	mov    bh,0x62
  41884a:	xchg   edx,eax
  41884b:	fsub   st,st(1)
  41884d:	pop    eax
  41884e:	(bad)  
  418850:	pop    esi
  418851:	pop    ss
  418852:	scas   eax,DWORD PTR es:[edi]
  418853:	popf   
  418854:	push   0xf9323e9f
  418859:	mov    esp,0xe4fd6c79
  41885e:	iret   
  41885f:	arpl   WORD PTR [edi-0x60],ax
  418862:	call   0xcf390324
  418867:	(bad)  
  418869:	mov    ax,0xee82
  41886d:	xchg   edi,eax
  41886e:	lods   al,BYTE PTR ds:[esi]
  41886f:	push   0xffffffbe
  418871:	jle    0x4188b0
  418873:	int    0x45
  418875:	in     eax,0xcb
  418877:	cmp    al,0x8d
  418879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41887a:	sub    eax,0xaf42443
  41887f:	inc    ebx
  418880:	cmp    ebp,DWORD PTR [ecx-0x2d4f42df]
  418886:	sbb    BYTE PTR [eax],bh
  418888:	pop    edx
  418889:	sub    DWORD PTR [edx-0x48],edx
  41888c:	repnz inc esp
  41888e:	popf   
  41888f:	cwde   
  418890:	add    esp,eax
  418892:	jmp    0x2a59:0xb3e6ec34
  418899:	stos   BYTE PTR es:[edi],al
  41889a:	cs mov esi,0x711332b6
  4188a0:	sbb    DWORD PTR [edx+0x5e],eax
  4188a3:	xor    esi,ebp
  4188a5:	leave  
  4188a6:	jno    0x41883c
  4188a8:	ins    BYTE PTR es:[edi],dx
  4188a9:	adc    DWORD PTR [ebx-0x89fb690],esi
  4188af:	les    edi,FWORD PTR [edi+eiz*2]
  4188b2:	inc    eax
  4188b3:	mov    ecx,0xf55720f3
  4188b8:	sbb    DWORD PTR [eax],0xc1b31770
  4188be:	add    ebx,esi
  4188c0:	pop    ds
  4188c1:	or     BYTE PTR [ebx-0x2a],bh
  4188c4:	je     0x418919
  4188c6:	xor    eax,0xf05f2ae7
  4188cb:	and    eax,0xb4a61b3c
  4188d0:	sub    dx,sp
  4188d3:	add    DWORD PTR [eax+ebx*2+0x54],esp
  4188d7:	push   esi
  4188d8:	in     eax,0x42
  4188da:	popf   
  4188db:	pop    ebx
  4188dc:	fwait
  4188dd:	iret   
  4188de:	test   BYTE PTR [edx+0x47277037],cl
  4188e4:	retf   
  4188e5:	xor    eax,0x7fe8a334
  4188ea:	inc    esp
  4188eb:	pandn  mm4,QWORD PTR [ecx-0x4ec9e33f]
  4188f2:	sets   BYTE PTR [ebx+0x3a31061]
  4188f9:	push   es
  4188fa:	std    
  4188fb:	hlt    
  4188fc:	ret    0x2d06
  4188ff:	cmp    bh,ah
  418901:	retf   
  418902:	call   0x8f4c:0xdb627c21
  418909:	pop    esp
  41890a:	aam    0x2
  41890c:	fisub  WORD PTR [eax]
  41890e:	fcomp  DWORD PTR [ebp+0x59]
  418911:	scas   eax,DWORD PTR es:[edi]
  418912:	mov    ch,0xdc
  418914:	addr16 xchg edi,eax
  418916:	inc    esi
  418917:	xlat   BYTE PTR ds:[ebx]
  418918:	dec    edx
  418919:	hlt    
  41891a:	add    DWORD PTR [ebx-0x49],ebx
  41891d:	cmp    DWORD PTR [esi*2+0x49fb6bae],ebx
  418924:	inc    esp
  418925:	sar    DWORD PTR [esi],cl
  418927:	cmp    ebx,ecx
  418929:	test   BYTE PTR [ebx],bh
  41892b:	jp     0x4188d7
  41892d:	jmp    0xebf9c1d6
  418932:	bound  ebx,QWORD PTR [ebp+0x41]
  418935:	(bad)  
  418936:	fs xchg esp,eax
  418938:	loop   0x418913
  41893a:	shl    DWORD PTR [ebp-0x18a5d7b4],1
  418940:	lds    edx,FWORD PTR [ecx]
  418942:	stc    
  418943:	mov    fs,WORD PTR [eax*8-0x7138b76d]
  41894a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41894b:	mov    ebx,0x47a46268
  418950:	loope  0x418979
  418952:	popa   
  418953:	pop    edi
  418954:	popf   
  418955:	or     dl,BYTE PTR [esi+0x9]
  418958:	xlat   BYTE PTR ds:[ebx]
  418959:	mov    esp,0xc2a8e1d2
  41895e:	ja     0x418939
  418960:	sti    
  418961:	xchg   edx,eax
  418962:	cmp    dh,al
  418964:	add    eax,0xae548cfe
  418969:	out    dx,eax
  41896a:	pop    esi
  41896b:	mov    ds:0xa83440dc,al
  418970:	pop    ebp
  418971:	xor    dl,cl
  418973:	std    
  418974:	sti    
  418975:	mov    al,0x44
  418977:	push   eax
  418978:	cmp    al,0x18
  41897a:	cmp    al,0x8f
  41897c:	idiv   DWORD PTR [edx+edi*4]
  41897f:	sub    BYTE PTR [edi],bl
  418981:	xlat   BYTE PTR ds:[ebx]
  418982:	cmp    BYTE PTR [ecx-0x7],al
  418985:	add    edi,edi
  418987:	mov    ecx,0x162ae689
  41898c:	cmp    DWORD PTR [edx+eiz*2],eax
  41898f:	sar    DWORD PTR [ebx-0x3f2b0a93],0x9f
  418996:	inc    esi
  418997:	or     dl,BYTE PTR [edx+0x1cb3cbe9]
  41899d:	push   ss
  41899e:	xor    eax,0xb63596d3
  4189a3:	rol    DWORD PTR [ebx],cl
  4189a5:	test   eax,0x9b274c73
  4189aa:	sub    eax,0xd89749e9
  4189af:	das    
  4189b0:	in     eax,0xd5
  4189b2:	fs dec ebp
  4189b4:	mov    fs,WORD PTR [ecx]
  4189b6:	call   0x3723001b
  4189bb:	mov    eax,gs
  4189bd:	arpl   WORD PTR [esi+0x7c83e6f3],dx
  4189c3:	out    dx,eax
  4189c4:	loopne 0x418999
  4189c6:	xor    esp,DWORD PTR [eax]
  4189c8:	into   
  4189c9:	or     DWORD PTR [eax-0x2],edi
  4189cc:	cld    
  4189cd:	fwait
  4189ce:	imul   edx,DWORD PTR [eax+0x2f],0xea9728f6
  4189d5:	retf   
  4189d6:	test   eax,0x2f7ea2bd
  4189db:	cmp    ebp,edi
  4189dd:	dec    esi
  4189de:	lock sub eax,0xe8cf4503
  4189e4:	push   0xffffff9f
  4189e6:	pop    ebp
  4189e7:	das    
  4189e8:	and    eax,DWORD PTR gs:[esi]
  4189eb:	jl     0x4189f1
  4189ed:	cmp    bl,BYTE PTR [eax-0x2d]
  4189f0:	das    
  4189f1:	mov    WORD PTR [eax+0x754ec21b],cs
  4189f7:	xchg   ecx,eax
  4189f8:	pop    eax
  4189f9:	ins    DWORD PTR es:[edi],dx
  4189fa:	inc    ebx
  4189fb:	sub    eax,DWORD PTR [ecx+0x53]
  4189fe:	inc    edx
  4189ff:	jo     0x418a34
  418a01:	inc    esp
  418a02:	sub    cl,BYTE PTR [eax+0x16ca93f]
  418a08:	xchg   edi,eax
  418a09:	adc    cl,BYTE PTR [esi+0x14]
  418a0c:	lahf   
  418a0d:	retf   0xb6f6
  418a10:	jno    0x418a1c
  418a12:	dec    esi
  418a13:	jp     0x418a6b
  418a15:	fs aas 
  418a17:	es inc edx
  418a19:	test   al,0xf8
  418a1b:	pop    edx
  418a1c:	retf   
  418a1d:	push   ss
  418a1e:	ss pop es
  418a20:	leave  
  418a21:	cmp    DWORD PTR [eax+ebx*1+0x18cf7e0],edx
  418a28:	ret    0x95bd
  418a2b:	ror    BYTE PTR [edi],0x59
  418a2e:	jns    0x418a0f
  418a30:	adc    al,0x67
  418a32:	add    eax,0x380fa394
  418a37:	sbb    eax,0x4d43740d
  418a3c:	push   edi
  418a3d:	(bad)  
  418a3f:	test   al,0xd3
  418a41:	xchg   edx,eax
  418a42:	push   ss
  418a43:	adc    al,0x9e
  418a45:	jmp    0x418a39
  418a47:	xchg   edi,esi
  418a49:	test   BYTE PTR [ecx-0x11],0x64
  418a4d:	jno    0x418a4c
  418a4f:	out    0x56,eax
  418a51:	fs retf 
  418a53:	inc    edx
  418a54:	sahf   
  418a55:	sti    
  418a56:	and    BYTE PTR [esi-0x584ae291],al
  418a5c:	mov    dl,0x7a
  418a5e:	retf   0xe459
  418a61:	mov    al,0x7f
  418a63:	iret   
  418a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a65:	gs popf 
  418a67:	push   edi
  418a68:	mov    ecx,0x19b1dcd3
  418a6d:	loop   0x418a6f
  418a6f:	es mov bl,0x54
  418a72:	arpl   cx,ax
  418a74:	jb     0x418abb
  418a76:	sbb    eax,0xdcac250d
  418a7b:	rcl    ecx,0x41
  418a7e:	lds    edi,FWORD PTR [ecx]
  418a80:	mov    edi,0xf1c8314e
  418a85:	push   ecx
  418a86:	call   0x35a6aeeb
  418a8b:	inc    ebp
  418a8c:	out    dx,eax
  418a8d:	cmp    dh,ah
  418a8f:	iret   
  418a90:	dec    edi
  418a91:	ret    0xf16a
  418a94:	mov    ch,BYTE PTR [edi]
  418a96:	test   eax,0x812daddf
  418a9b:	add    eax,0x5fbd2330
  418aa0:	mul    ebx
  418aa2:	xchg   ebp,eax
  418aa3:	and    eax,DWORD PTR [ebp-0x47]
  418aa6:	inc    edi
  418aa7:	dec    ebp
  418aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aa9:	gs pop ebp
  418aab:	mov    edx,0xbd8b5d91
  418ab0:	out    dx,eax
  418ab1:	push   cs
  418ab2:	aaa    
  418ab3:	sbb    al,0xe5
  418ab5:	cdq    
  418ab6:	sahf   
  418ab7:	lods   eax,DWORD PTR ds:[esi]
  418ab8:	pop    ebp
  418ab9:	xor    ebp,DWORD PTR [ebx-0x33fd91b6]
  418abf:	and    cl,dl
  418ac1:	stc    
  418ac2:	push   esp
  418ac3:	or     al,0x68
  418ac5:	xchg   esi,eax
  418ac6:	gs adc ebp,edi
  418ac9:	fld    TBYTE PTR ds:0x493ffdd4
  418acf:	mov    bh,0x1e
  418ad1:	iret   
  418ad2:	sbb    al,0x5e
  418ad4:	(bad)  
  418ad5:	jg     0x418ac6
  418ad7:	aam    0x6e
  418ad9:	adc    BYTE PTR [edx],dh
  418adb:	fdiv   QWORD PTR [ebp-0x26]
  418ade:	xchg   ebp,eax
  418adf:	add    bl,bh
  418ae1:	jmp    0x383ff3c2
  418ae6:	daa    
  418ae7:	sbb    cl,dh
  418ae9:	(bad)  
  418aea:	jmp    0xdd3f4765
  418aef:	jmp    0x418ae1
  418af1:	xor    al,BYTE PTR [esi+0x60]
  418af4:	push   es
  418af5:	aaa    
  418af6:	xor    edx,DWORD PTR [ecx-0x24376db8]
  418afc:	push   ss
  418afd:	mov    DWORD PTR [esi+eiz*2],ebp
  418b00:	push   cs
  418b01:	mov    edx,0xce13d98a
  418b06:	pop    es
  418b07:	imul   edi,ebp,0xffffffa9
  418b0a:	retf   
  418b0b:	bound  esi,QWORD PTR [edi+0x52]
  418b0e:	lds    edx,FWORD PTR [ecx+0x37]
  418b11:	les    edi,FWORD PTR [edx-0xc]
  418b14:	mov    cl,0x1
  418b16:	data16 or al,0x70
  418b19:	push   es
  418b1a:	cmp    edi,DWORD PTR [ebp+esi*1-0x50150fa5]
  418b21:	cmp    edx,edx
  418b23:	xchg   DWORD PTR [ecx+0x5b2f242d],edx
  418b29:	cli    
  418b2a:	push   edx
  418b2b:	(bad)  
  418b2c:	xchg   ecx,eax
  418b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b2e:	aaa    
  418b2f:	lock fcomp QWORD PTR ss:[edx+eiz*8+0x2d]
  418b35:	jl     0x418b20
  418b37:	das    
  418b38:	fwait
  418b39:	and    ch,BYTE PTR [edi-0x13ff40d2]
  418b3f:	mov    WORD PTR [edx+eiz*1-0x2d9ab1c4],ss
  418b46:	enter  0x403c,0x46
  418b4a:	scas   al,BYTE PTR es:[edi]
  418b4b:	cmp    al,0x23
  418b4d:	xchg   ecx,eax
  418b4e:	aad    0x3d
  418b50:	cmp    ecx,esi
  418b52:	test   DWORD PTR [edx+0x5e150f13],ecx
  418b58:	and    dl,BYTE PTR [eax-0x78988ef3]
  418b5e:	mov    edx,0xe8f59051
  418b63:	sub    edx,DWORD PTR [ebx+eiz*1-0x21]
  418b67:	shr    BYTE PTR [ecx+0x692ef708],1
  418b6d:	sub    edi,DWORD PTR [eax-0xff5d051]
  418b73:	into   
  418b74:	shl    BYTE PTR [edx+0x25],0xcb
  418b78:	jle    0x418b09
  418b7a:	test   BYTE PTR [ebx+0x179efdfa],ch
  418b80:	add    al,BYTE PTR [esi+0x1d]
  418b83:	les    esp,FWORD PTR [esi]
  418b85:	mov    al,0xf1
  418b87:	pusha  
  418b88:	pop    ds
  418b89:	(bad)  
  418b8a:	and    DWORD PTR [ebx],eax
  418b8c:	cmp    al,0x4e
  418b8e:	lods   eax,DWORD PTR ds:[esi]
  418b8f:	addr16 enter 0x50ed,0xc7
  418b94:	lods   eax,DWORD PTR ds:[esi]
  418b95:	cmp    ebp,edi
  418b97:	add    eax,0x6f3ad004
  418b9c:	or     esi,edx
  418b9e:	pop    ds
  418b9f:	cmp    ecx,DWORD PTR [ebx+0x72]
  418ba2:	int3   
  418ba3:	inc    ebx
  418ba4:	add    BYTE PTR [ebx+0x47],ah
  418ba7:	(bad)  
  418ba8:	mov    eax,ds:0xe6ef06ad
  418bad:	dec    edx
  418bae:	scas   al,BYTE PTR es:[edi]
  418baf:	jne    0x418be4
  418bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bb2:	int    0x47
  418bb4:	jbe    0x418c22
  418bb6:	out    0xcd,eax
  418bb8:	test   eax,eax
  418bba:	jmp    0x73141eb8
  418bbf:	jo     0x418bb2
  418bc1:	repz pop es
  418bc3:	loop   0x418ba2
  418bc5:	call   0x1ed9:0x77390e3e
  418bcc:	lds    eax,FWORD PTR [eax+0x6b4659db]
  418bd2:	xchg   ecx,eax
  418bd3:	or     bh,0xbb
  418bd6:	leave  
  418bd7:	sbb    BYTE PTR [esi-0x6d],cl
  418bda:	jbe    0x418c47
  418bdc:	pusha  
  418bdd:	mov    cl,0xec
  418bdf:	jae    0x418b91
  418be1:	xlat   BYTE PTR ds:[ebx]
  418be2:	cmp    bh,BYTE PTR [ecx+ebx*8-0x70410666]
  418be9:	fadd   st,st(7)
  418beb:	test   al,0xea
  418bed:	jmp    0x60fbac30
  418bf2:	js     0x418bf8
  418bf4:	jmp    0x418c5e
  418bf6:	addr16 inc esp
  418bf8:	xor    edx,edx
  418bfa:	neg    BYTE PTR [esi+0x1e]
  418bfd:	mov    bl,0x5d
  418bff:	inc    ecx
  418c00:	imul   edi,DWORD PTR [edx+0x56b758af],0xffffff9c
  418c07:	popf   
  418c08:	jbe    0x418bd4
  418c0a:	sub    esi,DWORD PTR [edi]
  418c0c:	xchg   DWORD PTR [eax+0x35b0e829],ebx
  418c12:	mov    ah,0xc6
  418c14:	mov    dl,0xb1
  418c16:	cmp    DWORD PTR [ebx+ecx*4+0x5cc6c731],eax
  418c1d:	stc    
  418c1e:	mov    ah,0xca
  418c20:	je     0x418ba4
  418c22:	xor    eax,0x23b4ebd3
  418c27:	aas    
  418c28:	(bad)  
  418c29:	lods   eax,DWORD PTR ds:[esi]
  418c2a:	test   BYTE PTR [ecx+0x57b3eda],ah
  418c30:	jecxz  0x418ca1
  418c32:	pusha  
  418c33:	int    0x1e
  418c35:	cld    
  418c36:	push   edx
  418c37:	pusha  
  418c38:	pop    es
  418c39:	retf   0x9b17
  418c3c:	mov    WORD PTR [edi+0x3c],cs
  418c3f:	out    0xb9,al
  418c41:	push   es
  418c42:	sub    al,BYTE PTR [eax]
  418c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c45:	mov    BYTE PTR [ecx*8+0x8c79479],al
  418c4c:	leave  
  418c4d:	or     bl,BYTE PTR [esi-0x4b]
  418c50:	inc    edx
  418c51:	(bad)  
  418c52:	sbb    eax,DWORD PTR [di-0x50]
  418c56:	imul   ecx,DWORD PTR [ecx-0x75f49d5e],0xffffffc8
  418c5d:	(bad)  [edx]
  418c5f:	cmp    al,0xa2
  418c61:	push   eax
  418c62:	call   0x41b39136
  418c67:	adc    eax,0x2c141abb
  418c6c:	pop    ss
  418c6d:	stos   BYTE PTR es:[edi],al
  418c6e:	add    al,0x8
  418c70:	in     al,0x33
  418c72:	add    BYTE PTR [ebx+0x6ee33a49],bh
  418c78:	pop    es
  418c79:	lahf   
  418c7a:	push   cs
  418c7b:	push   edi
  418c7c:	cld    
  418c7d:	and    bl,BYTE PTR [ebx+ebp*1+0x489e68fe]
  418c84:	outs   dx,BYTE PTR ds:[esi]
  418c85:	push   0xfffffffc
  418c87:	fsubr  DWORD PTR [esi]
  418c89:	fst    DWORD PTR [ecx+0x30a843dd]
  418c8f:	call   0xf72d9488
  418c94:	push   ecx
  418c95:	std    
  418c96:	pop    DWORD PTR fs:[edi]
  418c99:	or     BYTE PTR [edi-0x628c48e],dl
  418c9f:	test   eax,ecx
  418ca1:	jge    0x418cb0
  418ca3:	xor    al,0xa1
  418ca5:	jo     0x418c92
  418ca7:	sub    DWORD PTR [eax],edx
  418ca9:	cld    
  418caa:	stos   BYTE PTR es:[edi],al
  418cab:	sub    eax,0x4be96ab0
  418cb0:	in     eax,0x90
  418cb2:	dec    ebp
  418cb3:	dec    esp
  418cb4:	mov    edi,0xf4d0d03
  418cb9:	shl    ecx,cl
  418cbb:	ins    DWORD PTR es:[edi],dx
  418cbc:	sub    cl,BYTE PTR [ebp-0x2f]
  418cbf:	sar    BYTE PTR [ebx+0xb5c65b1],1
  418cc5:	and    eax,0x7e151857
  418cca:	mov    cl,0x49
  418ccc:	add    ah,BYTE PTR ds:0x3fa3fd36
  418cd2:	fcom   DWORD PTR [esi+0x28]
  418cd5:	or     DWORD PTR [ebp+0xaaa932c],ebp
  418cdb:	test   eax,0x3d5286b3
  418ce0:	sbb    BYTE PTR [esi],dh
  418ce2:	jle    0x418ca9
  418ce4:	add    edi,DWORD PTR [edi-0x66]
  418ce7:	cdq    
  418ce8:	std    
  418ce9:	or     ebp,0xffffffd4
  418cec:	and    eax,0x2a4e0048
  418cf1:	jp     0x418c84
  418cf3:	mov    esi,ebp
  418cf5:	sbb    BYTE PTR [eax],dh
  418cf7:	adc    edx,eax
  418cf9:	push   ds
  418cfa:	mov    edi,DWORD PTR [ebx-0x53b4435e]
  418d00:	aaa    
  418d01:	add    ecx,edx
  418d03:	push   ecx
  418d04:	xchg   edi,eax
  418d05:	fistp  WORD PTR [edx+0x60d82d62]
  418d0b:	dec    esp
  418d0c:	add    al,0x5d
  418d0e:	xchg   ebx,eax
  418d0f:	in     eax,dx
  418d10:	mov    ch,0xff
  418d12:	ret    
  418d13:	(bad)  
  418d14:	or     al,BYTE PTR [ebx+0x1d]
  418d17:	xchg   edx,eax
  418d18:	stc    
  418d19:	repz dec ebp
  418d1b:	stos   BYTE PTR es:[edi],al
  418d1c:	sub    BYTE PTR [edi-0xf916ee7],ah
  418d22:	lods   eax,DWORD PTR ds:[esi]
  418d23:	jnp    0x418d41
  418d25:	aad    0xe1
  418d27:	iret   
  418d28:	out    0xbc,al
  418d2a:	sub    ah,bl
  418d2c:	pushf  
  418d2d:	mov    esi,0x9ed54a49
  418d32:	mov    bl,BYTE PTR [ebp-0x5a]
  418d35:	push   edi
  418d36:	xchg   DWORD PTR [ecx],esp
  418d38:	iret   
  418d39:	daa    
  418d3a:	ret    
  418d3b:	push   es
  418d3c:	(bad)  
  418d3d:	repz add al,0xdd
  418d40:	cmp    ecx,esp
  418d42:	test   BYTE PTR [ebp+0x2b],dh
  418d45:	push   ds
  418d46:	xchg   bl,bl
  418d48:	stos   BYTE PTR es:[edi],al
  418d49:	(bad)  
  418d4a:	out    0xf9,eax
  418d4c:	xchg   esp,eax
  418d4d:	pushf  
  418d4e:	ret    
  418d4f:	mov    ds:0x4405edc,eax
  418d54:	jle    0x418d44
  418d56:	enter  0x1b8e,0xf4
  418d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d5b:	cmp    al,0x20
  418d5d:	stos   DWORD PTR es:[edi],eax
  418d5e:	jo     0x418d8a
  418d60:	mov    cl,BYTE PTR [ecx+0x7d]
  418d63:	out    0x3e,al
  418d65:	sub    DWORD PTR [edx-0x2b],esp
  418d68:	jmp    0x6286724e
  418d6d:	ja     0x418cf5
  418d6f:	rcl    BYTE PTR [ebx],0x47
  418d72:	outs   dx,DWORD PTR ds:[esi]
  418d73:	mov    edx,0x752820ef
  418d78:	hlt    
  418d79:	ins    BYTE PTR es:[edi],dx
  418d7a:	jb     0x418d25
  418d7c:	dec    edi
  418d7d:	and    BYTE PTR [edx-0x15],cl
  418d80:	inc    ebp
  418d81:	pop    esi
  418d82:	add    bl,0x8b
  418d85:	leave  
  418d86:	es cld 
  418d88:	(bad)
  418d8b:	cli    
  418d8c:	ins    DWORD PTR es:[edi],dx
  418d8d:	dec    edx
  418d8e:	push   esi
  418d8f:	iret   
  418d90:	bound  edi,QWORD PTR [ebx+0x48]
  418d93:	jmp    0x2adb:0x399618
  418d9a:	mov    al,ds:0xc488b6d5
  418d9f:	mov    eax,0x135debd5
  418da4:	add    al,BYTE PTR [esi+0x30814a83]
  418daa:	mov    dh,BYTE PTR [ecx-0x35ed1ca5]
  418db0:	lods   eax,DWORD PTR ds:[esi]
  418db1:	(bad)  
  418db4:	ror    BYTE PTR [esi+0x1],1
  418db7:	(bad)  
  418db8:	enter  0xa72b,0x3d
  418dbc:	push   ss
  418dbd:	pop    esi
  418dbe:	sub    eax,0xb1522000
  418dc3:	ret    0x998a
  418dc6:	jge    0x418df3
  418dc8:	push   ebx
  418dc9:	ins    DWORD PTR es:[edi],dx
  418dca:	or     ebx,DWORD PTR [eax]
  418dcc:	adc    BYTE PTR [eax],0x19
  418dcf:	sub    al,0x50
  418dd1:	add    ebx,DWORD PTR [ebx-0x5d5a4b07]
  418dd7:	inc    DWORD PTR [edi]
  418dd9:	pop    eax
  418dda:	sbb    DWORD PTR [ebp*8+0xedec704],0x51
  418de2:	movq   mm3,QWORD PTR [esi+0x159c1ed0]
  418de9:	stos   BYTE PTR es:[edi],al
  418dea:	inc    ebp
  418deb:	stos   BYTE PTR es:[edi],al
  418dec:	add    dh,BYTE PTR [eax+0x5a]
  418def:	xchg   esi,eax
  418df0:	js     0x418e04
  418df2:	stos   DWORD PTR es:[edi],eax
  418df3:	cmp    eax,DWORD PTR [eax+0x0]
  418df6:	call   FWORD PTR [ebp+edx*1+0x5d66a5b1]
  418dfd:	mov    eax,ds:0xa98b0535
  418e02:	add    eax,0xfc24decd
  418e07:	and    al,0x7d
  418e09:	sbb    DWORD PTR [esi+0x1c],edi
  418e0c:	pop    edi
  418e0d:	jnp    0x418db2
  418e0f:	jno    0x418e15
  418e11:	mov    esp,DWORD PTR [ebp-0x7e54f123]
  418e17:	ret    0x841e
  418e1a:	pop    edx
  418e1b:	mov    esp,DWORD PTR [edi+edi*2-0x2381aabe]
  418e22:	xor    ebp,DWORD PTR [ecx+0x8]
  418e25:	mov    esp,0xe959fc2
  418e2a:	dec    esp
  418e2b:	int3   
  418e2c:	jnp    0x418e09
  418e2e:	jo     0x418e9b
  418e30:	mov    ds:0x10c3b4a1,al
  418e35:	das    
  418e36:	js     0x418dff
  418e38:	add    BYTE PTR [esi-0x463ef47d],cl
  418e3e:	vpsrlw ymm5,ymm6,xmm6
  418e42:	mov    bl,0x8d
  418e44:	popf   
  418e45:	inc    esp
  418e46:	ror    DWORD PTR [edi-0x7af014ab],1
  418e4c:	add    DWORD PTR [eax+0x4d8bffff],edi
  418e52:	clc    
  418e53:	xor    ecx,eax
  418e55:	mov    eax,DWORD PTR [ebp+0x10]
  418e58:	add    ecx,esi
  418e5a:	mov    DWORD PTR [eax],ecx
  418e5c:	pop    edi
  418e5d:	pop    esi
  418e5e:	pop    ebx
  418e5f:	leave  
  418e60:	ret    0xc
  418e63:	add    BYTE PTR [eax-0x5ffbffbe],ah
  418e69:	inc    edx
  418e6a:	add    BYTE PTR [eax],cl
  418e6c:	mov    al,ds:0xa00c0042
  418e71:	inc    edx
  418e72:	add    BYTE PTR [eax],dl
  418e74:	mov    al,ds:0xa0140042
  418e79:	inc    edx
  418e7a:	add    BYTE PTR [eax],bl
  418e7c:	mov    al,ds:0xa01c0042
  418e81:	inc    edx
  418e82:	add    BYTE PTR [eax],al
  418e84:	rol    BYTE PTR [edx+0x0],1
  418e87:	add    al,0xd0
  418e89:	inc    edx
  418e8a:	add    BYTE PTR [eax],cl
  418e8c:	rol    BYTE PTR [edx+0x0],1
  418e8f:	or     al,0xd0
  418e91:	inc    edx
  418e92:	add    BYTE PTR [eax],dl
  418e94:	rol    BYTE PTR [edx+0x0],1
  418e97:	adc    al,0xd0
  418e99:	inc    edx
  418e9a:	add    BYTE PTR [eax],bl
  418e9c:	rol    BYTE PTR [edx+0x0],1
  418e9f:	sbb    al,0xd0
  418ea1:	inc    edx
	...
  418eb2:	add    BYTE PTR [eax],al
  418eb4:	sub    al,0x84
  418eb6:	pop    esi
  418eb7:	dec    ebp
  418eb8:	add    BYTE PTR [eax],al
  418eba:	add    BYTE PTR [eax],al
  418ebc:	add    al,BYTE PTR [eax]
  418ebe:	add    BYTE PTR [eax],al
  418ec0:	cmp    eax,0xb0000000
  418ec5:	pop    DWORD PTR [ecx]
  418ec7:	add    BYTE PTR [eax+0x183],dh
  418ecd:	add    BYTE PTR [eax],al
  418ecf:	add    BYTE PTR [eax],al
  418ed1:	add    BYTE PTR [eax],al
  418ed3:	add    BYTE PTR [esp+eax*4],ch
  418ed6:	pop    esi
  418ed7:	dec    ebp
  418ed8:	add    BYTE PTR [eax],al
  418eda:	add    BYTE PTR [eax],al
  418edc:	add    cl,BYTE PTR [edi+0x10001]
  418ee2:	add    BYTE PTR [eax],al
  418ee4:	add    DWORD PTR [eax],eax
  418ee6:	add    BYTE PTR [eax],al
  418ee8:	add    DWORD PTR [eax],eax
  418eea:	add    BYTE PTR [eax],al
  418eec:	clc    
  418eed:	mov    es,WORD PTR [ecx]
  418eef:	add    ah,bh
  418ef1:	mov    es,WORD PTR [ecx]
  418ef3:	add    BYTE PTR [eax],al
  418ef5:	pop    DWORD PTR [ecx]
  418ef7:	add    bl,al
  418ef9:	sub    eax,DWORD PTR [eax]
  418efb:	add    BYTE PTR [esi],cl
  418efd:	pop    DWORD PTR [ecx]
  418eff:	add    BYTE PTR [eax],al
  418f01:	add    BYTE PTR [ecx+edi*2+0x6e],al
  418f05:	popa   
  418f06:	ins    DWORD PTR es:[edi],dx
  418f07:	imul   ebp,DWORD PTR [ecx+0x43],0x747361
  418f0e:	aas    
  418f0f:	inc    edi
  418f10:	gs je  0x418f68
  418f13:	jae    0x418f7a
  418f15:	jb     0x418f66
  418f17:	bound  ebp,QWORD PTR [edx+0x65]
  418f1a:	arpl   WORD PTR [ebx+edx*2+0x65],si
  418f1e:	arpl   WORD PTR [ebp+0x72],si
  418f21:	imul   esi,DWORD PTR [ecx+edi*2+0x47],0x73557465
  418f29:	gs jb  0x418f7b
  418f2c:	bound  ebp,QWORD PTR [edx+0x65]
  418f2f:	arpl   WORD PTR [ebx+edx*2+0x65],si
  418f33:	arpl   WORD PTR [ebp+0x0],si
  418f36:	nop
  418f37:	inc    edx
  418f38:	add    BYTE PTR [eax+edx*4],al
  418f3b:	inc    edx
  418f3c:	add    BYTE PTR [eax],cl
  418f3e:	nop
  418f3f:	inc    edx
  418f40:	add    BYTE PTR [eax+edx*4],cl
  418f43:	inc    edx
  418f44:	add    BYTE PTR [eax],dl
  418f46:	nop
  418f47:	inc    edx
  418f48:	add    BYTE PTR [eax+edx*4],dl
  418f4b:	inc    edx
  418f4c:	add    BYTE PTR [eax],bl
  418f4e:	nop
  418f4f:	inc    edx
  418f50:	add    BYTE PTR [eax+edx*4],bl
  418f53:	inc    edx
  418f54:	add    BYTE PTR [eax],ah
  418f56:	nop
  418f57:	inc    edx
  418f58:	add    BYTE PTR [eax+edx*4],ah
  418f5b:	inc    edx
  418f5c:	add    BYTE PTR [eax],ch
  418f5e:	nop
  418f5f:	inc    edx
  418f60:	add    BYTE PTR [eax],al
  418f62:	mov    al,0x42
  418f64:	add    BYTE PTR [eax+esi*4],al
  418f67:	inc    edx
  418f68:	add    BYTE PTR [eax],cl
  418f6a:	mov    al,0x42
  418f6c:	add    BYTE PTR [eax+esi*4],cl
  418f6f:	inc    edx
  418f70:	add    BYTE PTR [eax],dl
  418f72:	mov    al,0x42
  418f74:	add    BYTE PTR [eax+esi*4],dl
  418f77:	inc    edx
  418f78:	add    BYTE PTR [eax],bl
  418f7a:	mov    al,0x42
  418f7c:	add    BYTE PTR [eax+esi*4],bl
  418f7f:	inc    edx
  418f80:	add    BYTE PTR [eax],al
  418f82:	rol    BYTE PTR [edx+0x0],0x4
  418f86:	rol    BYTE PTR [edx+0x0],0x8
  418f8a:	rol    BYTE PTR [edx+0x0],0xc
  418f8e:	rol    BYTE PTR [edx+0x0],0x10
  418f92:	rol    BYTE PTR [edx+0x0],0x14
  418f96:	rol    BYTE PTR [edx+0x0],0x18
  418f9a:	rol    BYTE PTR [edx+0x0],0x1c
  418f9e:	rol    BYTE PTR [edx+0x0],0x0
	...
  418fae:	add    BYTE PTR [eax],al
  418fb0:	push   edx
  418fb1:	push   ebx
  418fb2:	inc    esp
  418fb3:	push   ebx
  418fb4:	test   DWORD PTR [edi+0x46],0x10d730e2
  418fbb:	dec    ecx
  418fbc:	test   BYTE PTR [edx],ah
  418fbe:	adc    BYTE PTR [ebp+0x59],al
  418fc1:	enter  0x6a03,0x1
  418fc5:	add    BYTE PTR [eax],al
  418fc7:	add    BYTE PTR [ebx+0x3a],al
  418fca:	pop    esp
  418fcb:	inc    ebx
  418fcc:	jne    0x419040
  418fce:	jb     0x419035
  418fd0:	outs   dx,BYTE PTR ds:[esi]
  418fd1:	je     0x419017
  418fd3:	popa   
  418fd4:	je     0x419037
  418fd6:	pop    esp
  418fd7:	dec    ebp
  418fd8:	outs   dx,DWORD PTR ds:[esi]
  418fd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  418fe1:	ins    BYTE PTR es:[edi],dx
  418fe2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  418fe9:	dec    esi
  418fea:	gs ja  0x418fed
  418fed:	mov    edx,DWORD PTR [ebp-0x14]
  418ff0:	sub    esp,0xe4
  418ff6:	push   ebx
  418ff7:	mov    eax,ebx
  418ff9:	xchg   ecx,eax
  418ffa:	mov    eax,DWORD PTR [ebp+0x8]
  418ffd:	cmp    eax,0xf89c85b9
  419002:	jne    0x419394
  419008:	mov    eax,DWORD PTR [ebp+0xc]
  41900b:	cmp    eax,0xf89c85b8
  419010:	jne    0x419394
  419016:	mov    eax,DWORD PTR [ebp+0x24]
  419019:	mov    DWORD PTR [ebp-0x4],eax
  41901c:	mov    BYTE PTR [ebp-0x18],0x3
  419020:	mov    BYTE PTR [ebp-0x17],0x1e
  419024:	mov    BYTE PTR [ebp-0x16],0x1
  419028:	mov    BYTE PTR [ebp-0x15],0x4f
  41902c:	mov    BYTE PTR [ebp-0x14],0x48
  419030:	mov    BYTE PTR [ebp-0x13],0x7a
  419034:	mov    BYTE PTR [ebp-0x20],0xd
  419038:	mov    BYTE PTR [ebp-0x1f],0xf
  41903c:	mov    BYTE PTR [ebp-0x1e],0x1d
  419040:	mov    BYTE PTR [ebp-0x1d],0x8
  419044:	mov    BYTE PTR [ebp-0x1c],0x4f
  419048:	mov    BYTE PTR [ebp-0x1b],0x48
  41904c:	mov    BYTE PTR [ebp-0x1a],0x7a
  419050:	mov    BYTE PTR [ebp-0x28],0xf
  419054:	mov    BYTE PTR [ebp-0x27],0x2
  419058:	push   esi
  419059:	mov    BYTE PTR [ebp-0x26],0x6
  41905d:	mov    BYTE PTR [ebp-0x25],0xf3
  419061:	push   edi
  419062:	mov    BYTE PTR [ebp-0x24],0x19
  419066:	mov    BYTE PTR [ebp-0x23],0xa
  41906a:	push   0x73
  41906c:	mov    BYTE PTR [ebp-0x22],0x1
  419070:	xor    edi,edi
  419072:	mov    BYTE PTR [ebp-0x21],0x7a
  419076:	xor    esi,esi
  419078:	pop    edx
  419079:	mov    eax,0xf7
  41907e:	lea    ecx,[ebp+esi*1-0x18]
  419082:	movzx  ebx,BYTE PTR [ecx]
  419085:	xor    ebx,edx
  419087:	add    ebx,eax
  419089:	inc    esi
  41908a:	mov    BYTE PTR [ecx],bl
  41908c:	cmp    esi,0x6
  41908f:	jb     0x41907e
  419091:	xor    esi,esi
  419093:	lea    ecx,[ebp+esi*1-0x20]
  419097:	movzx  ebx,BYTE PTR [ecx]
  41909a:	xor    ebx,edx
  41909c:	add    ebx,eax
  41909e:	inc    esi
  41909f:	mov    BYTE PTR [ecx],bl
  4190a1:	cmp    esi,0x7
  4190a4:	jb     0x419093
  4190a6:	xor    esi,esi
  4190a8:	lea    ecx,[ebp+esi*1-0x28]
  4190ac:	movzx  ebx,BYTE PTR [ecx]
  4190af:	xor    ebx,edx
  4190b1:	add    ebx,eax
  4190b3:	push   0x8
  4190b5:	mov    BYTE PTR [ecx],bl
  4190b7:	inc    esi
  4190b8:	pop    ecx
  4190b9:	cmp    esi,ecx
  4190bb:	jb     0x4190a8
  4190bd:	lea    eax,[ebp-0x2c]
  4190c0:	mov    DWORD PTR [ebp-0x8],eax
  4190c3:	mov    esi,DWORD PTR [ebp-0x8]
  4190c6:	mov    eax,0x7113fcef
  4190cb:	mov    DWORD PTR [esi],eax
  4190cd:	mov    esi,DWORD PTR [ebp-0x2c]
  4190d0:	cmp    esi,eax
  4190d2:	jne    0x4190e2
  4190d4:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  4190db:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  4190e2:	mov    eax,DWORD PTR [ebp-0x4]
  4190e5:	mov    eax,DWORD PTR [eax+0x18c]
  4190eb:	cmp    DWORD PTR [eax],edi
  4190ed:	jne    0x41933d
  4190f3:	mov    eax,DWORD PTR [ebp-0x4]
  4190f6:	mov    eax,DWORD PTR [eax+0x17c]
  4190fc:	mov    DWORD PTR [eax],edi
  4190fe:	mov    eax,DWORD PTR [ebp-0x4]
  419101:	mov    eax,DWORD PTR [eax+0x180]
  419107:	mov    DWORD PTR [eax],edi
  419109:	mov    edi,0x4e3c
  41910e:	mov    eax,0x4f8f
  419113:	mov    WORD PTR [ebp-0x78],ax
  419117:	mov    eax,edi
  419119:	mov    WORD PTR [ebp-0x76],ax
  41911d:	add    eax,0x43
  419120:	mov    WORD PTR [ebp-0x74],ax
  419124:	lea    eax,[edi+0x3]
  419127:	mov    WORD PTR [ebp-0x72],ax
  41912b:	mov    eax,0x4fac
  419130:	mov    WORD PTR [ebp-0x70],ax
  419134:	lea    eax,[edi-0x4]
  419137:	mov    WORD PTR [ebp-0x6e],ax
  41913b:	add    eax,0x45
  41913e:	mov    WORD PTR [ebp-0x6c],ax
  419142:	lea    eax,[edi-0x2]
  419145:	mov    WORD PTR [ebp-0x6a],ax
  419149:	mov    eax,edi
  41914b:	mov    WORD PTR [ebp-0x68],ax
  41914f:	dec    eax
  419150:	mov    WORD PTR [ebp-0x66],ax
  419154:	mov    eax,0x99ff
  419159:	mov    WORD PTR [ebp-0x64],ax
  41915d:	mov    eax,0x8288
  419162:	mov    WORD PTR [ebp-0x62],ax
  419166:	mov    eax,0xd78d
  41916b:	mov    WORD PTR [ebp-0x60],ax
  41916f:	add    eax,0x1c
  419172:	mov    WORD PTR [ebp-0x5e],ax
  419176:	mov    eax,0x27aa
  41917b:	mov    WORD PTR [ebp-0x5c],ax
  41917f:	mov    eax,0x47aa
  419184:	mov    WORD PTR [ebp-0x5a],ax
  419188:	lea    eax,[edi-0x3]
  41918b:	mov    WORD PTR [ebp-0x58],ax
  41918f:	mov    DWORD PTR [ebp-0x10],0xf306020f
  419196:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41919d:	lea    eax,[ebp-0x10]
  4191a0:	mov    bl,BYTE PTR [eax]
  4191a2:	xor    bl,dl
  4191a4:	sub    bl,0x9
  4191a7:	mov    BYTE PTR [eax],bl
  4191a9:	inc    eax
  4191aa:	dec    ecx
  4191ab:	jne    0x4191a0
  4191ad:	lea    eax,[ebp-0x10]
  4191b0:	mov    DWORD PTR [ebp-0xb8],eax
  4191b6:	lea    eax,[ebp-0xbc]
  4191bc:	push   eax
  4191bd:	mov    eax,DWORD PTR [ebp+0xc]
  4191c0:	mov    ebx,0x7510899
  4191c5:	xor    eax,ebx
  4191c7:	mov    esi,0x3272e0
  4191cc:	add    eax,esi
  4191ce:	push   eax
  4191cf:	mov    eax,DWORD PTR [ebp-0x4]
  4191d2:	add    eax,0x66
  4191d5:	push   eax
  4191d6:	mov    eax,DWORD PTR [ebp-0x4]
  4191d9:	mov    eax,DWORD PTR [eax+0x198]
  4191df:	mov    DWORD PTR [ebp-0xbc],0x1
  4191e9:	push   DWORD PTR [eax]
  4191eb:	mov    eax,DWORD PTR [ebp+0x10]
  4191ee:	call   eax
  4191f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f3:	xor    ecx,ebx
  4191f5:	add    ecx,esi
  4191f7:	mov    DWORD PTR [ebp-0x8],eax
  4191fa:	cmp    eax,ecx
  4191fc:	jne    0x419217
  4191fe:	mov    eax,ds:0x33730bee
  419203:	or     eax,0x22150bef
  419208:	mov    ds:0x33730bee,eax
  41920d:	add    eax,0x3372e90f
  419212:	mov    ds:0x33730bee,eax
  419217:	mov    ecx,0x4f84
  41921c:	mov    eax,ecx
  41921e:	mov    WORD PTR [ebp-0x40],ax
  419222:	mov    eax,0x4e71
  419227:	mov    edx,eax
  419229:	mov    WORD PTR [ebp-0x3e],dx
  41922d:	lea    edx,[ecx+0x15]
  419230:	mov    WORD PTR [ebp-0x3c],dx
  419234:	add    edx,0xfffffff8
  419237:	mov    WORD PTR [ebp-0x3a],dx
  41923b:	lea    edx,[ecx+0xf]
  41923e:	mov    WORD PTR [ebp-0x38],dx
  419242:	add    edx,0x1b
  419245:	mov    WORD PTR [ebp-0x36],dx
  419249:	lea    edx,[ecx+0x21]
  41924c:	mov    WORD PTR [ebp-0x34],dx
  419250:	mov    WORD PTR [ebp-0x32],cx
  419254:	mov    ecx,edi
  419256:	mov    WORD PTR [ebp-0x30],cx
  41925a:	lea    ecx,[edx-0x1]
  41925d:	mov    edx,ecx
  41925f:	mov    WORD PTR [ebp-0x54],dx
  419263:	mov    edx,eax
  419265:	mov    WORD PTR [ebp-0x52],dx
  419269:	add    edx,0x8
  41926c:	mov    WORD PTR [ebp-0x50],dx
  419270:	mov    WORD PTR [ebp-0x4e],ax
  419274:	add    eax,0x2
  419277:	mov    WORD PTR [ebp-0x4c],ax
  41927b:	lea    eax,[ecx-0x16]
  41927e:	mov    WORD PTR [ebp-0x4a],ax
  419282:	add    eax,0xfffffff7
  419285:	mov    WORD PTR [ebp-0x48],ax
  419289:	mov    WORD PTR [ebp-0x46],cx
  41928d:	mov    WORD PTR [ebp-0x44],di
  419291:	mov    eax,DWORD PTR [ebp+0x8]
  419294:	movzx  ecx,WORD PTR [ebp-0x54]
  419298:	xor    eax,ebx
  41929a:	add    eax,esi
  41929c:	xor    eax,ecx
  41929e:	mov    WORD PTR [ebp-0x54],ax
  4192a2:	mov    eax,DWORD PTR [ebp+0x8]
  4192a5:	movzx  ecx,WORD PTR [ebp-0x40]
  4192a9:	xor    eax,ebx
  4192ab:	add    eax,esi
  4192ad:	xor    eax,ecx
  4192af:	mov    WORD PTR [ebp-0x40],ax
  4192b3:	xor    eax,eax
  4192b5:	mov    WORD PTR [ebp-0xd0],ax
  4192bc:	mov    WORD PTR [ebp-0xe4],ax
  4192c3:	mov    edi,DWORD PTR [ebp+0x24]
  4192c6:	lea    eax,[ebp-0xd0]
  4192cc:	lea    edx,[ebp-0x54]
  4192cf:	mov    DWORD PTR [ebp-0xbc],0x2
  4192d9:	mov    DWORD PTR [ebp-0xb8],eax
  4192df:	call   0x41bcc3
  4192e4:	mov    DWORD PTR [ebp-0xb4],eax
  4192ea:	lea    eax,[ebp-0xbc]
  4192f0:	push   eax
  4192f1:	mov    eax,DWORD PTR [ebp+0xc]
  4192f4:	xor    eax,ebx
  4192f6:	add    eax,esi
  4192f8:	push   eax
  4192f9:	lea    eax,[ebp-0x78]
  4192fc:	push   eax
  4192fd:	push   DWORD PTR [ebp-0x8]
  419300:	mov    eax,DWORD PTR [ebp+0x10]
  419303:	call   eax
  419305:	mov    edi,DWORD PTR [ebp+0x24]
  419308:	lea    eax,[ebp-0xe4]
  41930e:	lea    edx,[ebp-0x40]
  419311:	mov    DWORD PTR [ebp-0xb8],eax
  419317:	call   0x41bcc3
  41931c:	mov    DWORD PTR [ebp-0xb4],eax
  419322:	lea    eax,[ebp-0xbc]
  419328:	push   eax
  419329:	mov    eax,DWORD PTR [ebp+0xc]
  41932c:	xor    eax,ebx
  41932e:	add    eax,esi
  419330:	push   eax
  419331:	lea    eax,[ebp-0x78]
  419334:	push   eax
  419335:	push   DWORD PTR [ebp-0x8]
  419338:	mov    eax,DWORD PTR [ebp+0x10]
  41933b:	call   eax
  41933d:	mov    eax,DWORD PTR [ebp+0x14]
  419340:	push   DWORD PTR [ebp-0x4]
  419343:	push   DWORD PTR [ebp+0x20]
  419346:	push   DWORD PTR [ebp+0x1c]
  419349:	push   DWORD PTR [ebp+0x18]
  41934c:	push   DWORD PTR [ebp+0x10]
  41934f:	push   DWORD PTR [ebp+0x8]
  419352:	push   DWORD PTR [ebp+0xc]
  419355:	call   0x41a4ec
  41935a:	add    DWORD PTR [ebp-0x4],eax
  41935d:	mov    eax,DWORD PTR [ebp-0x4]
  419360:	mov    eax,DWORD PTR [ebp-0x4]
  419363:	mov    edi,DWORD PTR [eax+0x190]
  419369:	mov    eax,DWORD PTR [ebp-0x4]
  41936c:	mov    eax,DWORD PTR [eax+0x18c]
  419372:	mov    esi,DWORD PTR [eax]
  419374:	lea    ecx,[ebp+0x4]
  419377:	mov    edx,DWORD PTR [ecx]
  419379:	cmp    edx,esi
  41937b:	jb     0x419392
  41937d:	mov    eax,DWORD PTR [edi]
  41937f:	mov    edi,DWORD PTR [eax+0x3c]
  419382:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  419386:	add    edi,esi
  419388:	cmp    edx,edi
  41938a:	jae    0x419392
  41938c:	sub    eax,esi
  41938e:	add    eax,edx
  419390:	mov    DWORD PTR [ecx],eax
  419392:	pop    edi
  419393:	pop    esi
  419394:	pop    ebx
  419395:	leave  
  419396:	ret    0x20
  419399:	push   edi
  41939a:	push   esi
  41939b:	push   ebx
  41939c:	push   ebp
  41939d:	mov    ebp,esp
  41939f:	mov    eax,DWORD PTR [ebp+0x24]
  4193a2:	add    DWORD PTR [ebp+0x28],eax
  4193a5:	push   eax
  4193a6:	cld    
  4193a7:	mov    esi,DWORD PTR [ebp+0x18]
  4193aa:	add    DWORD PTR [ebp+0x1c],esi
  4193ad:	push   esi
  4193ae:	mov    esi,DWORD PTR [ebp+0x14]
  4193b1:	lods   eax,DWORD PTR ds:[esi]
  4193b2:	xchg   edx,eax
  4193b3:	push   edx
  4193b4:	mov    cl,BYTE PTR [esi-0x2]
  4193b7:	or     eax,0xffffffff
  4193ba:	shl    eax,cl
  4193bc:	not    eax
  4193be:	push   eax
  4193bf:	mov    cl,dh
  4193c1:	or     eax,0xffffffff
  4193c4:	shl    eax,cl
  4193c6:	not    eax
  4193c8:	push   eax
  4193c9:	add    cl,dl
  4193cb:	mov    edi,esi
  4193cd:	sub    esp,0xc
  4193d0:	sub    eax,eax
  4193d2:	inc    eax
  4193d3:	push   eax
  4193d4:	push   eax
  4193d5:	push   eax
  4193d6:	push   eax
  4193d7:	push   eax
  4193d8:	push   edi
  4193d9:	sub    esi,esi
  4193db:	push   esi
  4193dc:	or     ebx,0xffffffff
  4193df:	mov    eax,0x300
  4193e4:	shl    eax,cl
  4193e6:	lea    ecx,[eax+0x736]
  4193ec:	mov    eax,0x4000400
  4193f1:	shr    ecx,1
  4193f3:	rep stos DWORD PTR es:[edi],eax
  4193f5:	push   0x5
  4193f7:	pop    ecx
  4193f8:	call   0x4196e3
  4193fd:	loop   0x4193f8
  4193ff:	lea    esi,[esi]
  419401:	lea    edi,[edi]
  419403:	mov    edi,DWORD PTR [ebp-0x4]
  419406:	mov    eax,DWORD PTR [ebp-0x10]
  419409:	sub    edi,DWORD PTR [ebp+0x24]
  41940c:	and    eax,edi
  41940e:	mov    DWORD PTR [ebp-0x18],eax
  419411:	mov    al,0x0
  419413:	call   0x4196fb
  419418:	jne    0x4194b3
  41941e:	mov    cl,BYTE PTR [ebp-0xc]
  419421:	and    edi,DWORD PTR [ebp-0x14]
  419424:	shl    edi,cl
  419426:	sub    cl,0x8
  419429:	neg    cl
  41942b:	shr    esi,cl
  41942d:	pop    eax
  41942e:	add    edi,esi
  419430:	pop    esi
  419431:	lea    edi,[edi+edi*2]
  419434:	shl    edi,0x8
  419437:	cmp    al,0x7
  419439:	pop    edx
  41943a:	lea    ecx,[esi+edi*2+0xe6c]
  419441:	push   ecx
  419442:	push   esi
  419443:	mov    esi,0x100
  419448:	push   eax
  419449:	mov    al,0x1
  41944b:	jb     0x419481
  41944d:	mov    edi,DWORD PTR [ebp-0x4]
  419450:	sub    edi,DWORD PTR [ebp-0x24]
  419453:	movzx  edi,BYTE PTR [edi]
  419456:	mov    ebp,DWORD PTR [ebp-0x34]
  419459:	shl    edi,1
  41945b:	mov    ecx,esi
  41945d:	and    esi,edi
  41945f:	add    ecx,esi
  419461:	lea    ebp,[ebp+ecx*2+0x0]
  419465:	call   0x41971a
  41946a:	mov    ecx,eax
  41946c:	shr    esi,0x8
  41946f:	and    ecx,0x1
  419472:	cmp    esi,ecx
  419474:	mov    esi,0x100
  419479:	jne    0x419489
  41947b:	cmp    eax,esi
  41947d:	jb     0x419456
  41947f:	jmp    0x419495
  419481:	mov    ebp,DWORD PTR [ebp-0x34]
  419484:	call   0x41971a
  419489:	inc    eax
  41948a:	inc    esi
  41948b:	sub    eax,0x1
  41948e:	sub    esi,0x1
  419491:	cmp    eax,esi
  419493:	jb     0x419481
  419495:	pop    edx
  419496:	inc    edx
  419497:	cmp    edx,0x5
  41949a:	dec    edx
  41949b:	mov    ecx,edx
  41949d:	jb     0x4194ae
  41949f:	inc    edx
  4194a0:	cmp    edx,0xb
  4194a3:	dec    edx
  4194a4:	mov    cl,0x4
  4194a6:	dec    cl
  4194a8:	jb     0x4194ae
  4194aa:	mov    cl,0x7
  4194ac:	dec    cl
  4194ae:	sub    edx,ecx
  4194b0:	push   edx
  4194b1:	jmp    0x419502
  4194b3:	mov    al,0xc1
  4194b5:	dec    al
  4194b7:	call   0x41970b
  4194bc:	jne    0x4194d2
  4194be:	pop    eax
  4194bf:	pop    edi
  4194c0:	pop    edx
  4194c1:	pop    ecx
  4194c2:	pop    edx
  4194c3:	pop    ecx
  4194c4:	push   DWORD PTR [esp]
  4194c7:	push   ecx
  4194c8:	push   edx
  4194c9:	mov    edx,0x664
  4194ce:	mov    cl,0x0
  4194d0:	jmp    0x419545
  4194d2:	mov    al,0xcd
  4194d4:	dec    al
  4194d6:	call   0x41970b
  4194db:	jne    0x41950b
  4194dd:	mov    al,0xf1
  4194df:	dec    al
  4194e1:	call   0x4196fb
  4194e6:	jne    0x41953b
  4194e8:	pop    eax
  4194e9:	cmp    al,0x7
  4194eb:	mov    al,0x9
  4194ed:	jb     0x4194f1
  4194ef:	mov    al,0xb
  4194f1:	push   eax
  4194f2:	mov    esi,DWORD PTR [ebp-0x4]
  4194f5:	sub    esi,DWORD PTR [ebp-0x24]
  4194f8:	cmp    esi,DWORD PTR [ebp+0x24]
  4194fb:	jb     0x4196d2
  419501:	lods   al,BYTE PTR ds:[esi]
  419502:	mov    edi,DWORD PTR [ebp-0x4]
  419505:	stos   BYTE PTR es:[edi],al
  419506:	jmp    0x419699
  41950b:	mov    al,0xd8
  41950d:	call   0x41970b
  419512:	mov    esi,DWORD PTR [ebp-0x28]
  419515:	je     0x419532
  419517:	mov    al,0xe4
  419519:	call   0x41970b
  41951e:	mov    esi,DWORD PTR [ebp-0x2c]
  419521:	je     0x41952c
  419523:	mov    esi,DWORD PTR [ebp-0x30]
  419526:	mov    ecx,DWORD PTR [ebp-0x2c]
  419529:	mov    DWORD PTR [ebp-0x30],ecx
  41952c:	mov    ecx,DWORD PTR [ebp-0x28]
  41952f:	mov    DWORD PTR [ebp-0x2c],ecx
  419532:	mov    ecx,DWORD PTR [ebp-0x24]
  419535:	mov    DWORD PTR [ebp-0x28],ecx
  419538:	mov    DWORD PTR [ebp-0x24],esi
  41953b:	pop    eax
  41953c:	pop    edi
  41953d:	pop    ecx
  41953e:	mov    edx,0xa68
  419543:	mov    cl,0x8
  419545:	add    edx,edi
  419547:	push   edx
  419548:	push   edi
  419549:	cmp    al,0x7
  41954b:	mov    al,cl
  41954d:	jb     0x419551
  41954f:	add    al,0x3
  419551:	push   eax
  419552:	mov    ebp,DWORD PTR [ebp-0x34]
  419555:	call   0x419718
  41955a:	jne    0x419570
  41955c:	mov    eax,DWORD PTR [ebp-0x18]
  41955f:	mov    edi,DWORD PTR [ebp-0x34]
  419562:	shl    eax,0x3
  419565:	sub    ecx,ecx
  419567:	push   0x8
  419569:	pop    esi
  41956a:	lea    edi,[edi+eax*2+0x4]
  41956e:	jmp    0x4195a5
  419570:	mov    ebp,DWORD PTR [ebp-0x34]
  419573:	add    ebp,0x2
  419576:	call   0x419718
  41957b:	jne    0x419595
  41957d:	mov    eax,DWORD PTR [ebp-0x18]
  419580:	mov    edi,DWORD PTR [ebp-0x34]
  419583:	shl    eax,0x3
  419586:	push   0x8
  419588:	pop    ecx
  419589:	push   0x8
  41958b:	pop    esi
  41958c:	lea    edi,[edi+eax*2+0x104]
  419593:	jmp    0x4195a5
  419595:	mov    edi,0x204
  41959a:	add    edi,DWORD PTR [ebp-0x34]
  41959d:	push   0x10
  41959f:	pop    ecx
  4195a0:	mov    esi,0x100
  4195a5:	mov    DWORD PTR [ebp-0x1c],ecx
  4195a8:	sub    eax,eax
  4195aa:	inc    eax
  4195ab:	mov    ebp,edi
  4195ad:	call   0x41971a
  4195b2:	mov    ecx,eax
  4195b4:	sub    ecx,esi
  4195b6:	jb     0x4195ab
  4195b8:	add    DWORD PTR [ebp-0x1c],ecx
  4195bb:	cmp    DWORD PTR [ebp-0x3c],0x4
  4195bf:	jae    0x419675
  4195c5:	add    DWORD PTR [ebp-0x3c],0x7
  4195c9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4195cc:	cmp    ecx,0x4
  4195cf:	jb     0x4195d4
  4195d1:	push   0x3
  4195d3:	pop    ecx
  4195d4:	mov    edi,DWORD PTR [ebp-0x38]
  4195d7:	shl    ecx,0x6
  4195da:	sub    eax,eax
  4195dc:	inc    eax
  4195dd:	push   0x40
  4195df:	pop    esi
  4195e0:	lea    edi,[edi+ecx*2+0x360]
  4195e7:	mov    ebp,edi
  4195e9:	call   0x41971a
  4195ee:	mov    ecx,eax
  4195f0:	sub    ecx,esi
  4195f2:	jb     0x4195e7
  4195f4:	mov    DWORD PTR [ebp-0x18],ecx
  4195f7:	mov    DWORD PTR [ebp-0x24],ecx
  4195fa:	cmp    ecx,0x4
  4195fd:	jb     0x419672
  4195ff:	mov    esi,ecx
  419601:	and    DWORD PTR [ebp-0x24],0x1
  419605:	shr    esi,1
  419607:	or     DWORD PTR [ebp-0x24],0x2
  41960b:	dec    esi
  41960c:	cmp    ecx,0xe
  41960f:	jae    0x41962a
  419611:	mov    eax,0x2af
  419616:	sub    eax,ecx
  419618:	mov    ecx,esi
  41961a:	shl    BYTE PTR [ebp-0x24],cl
  41961d:	add    eax,DWORD PTR [ebp-0x24]
  419620:	shl    eax,1
  419622:	add    eax,DWORD PTR [ebp-0x38]
  419625:	mov    DWORD PTR [ebp-0x34],eax
  419628:	jmp    0x419657
  41962a:	sub    esi,0x4
  41962d:	call   0x4196d7
  419632:	shr    ebx,1
  419634:	shl    DWORD PTR [ebp-0x24],1
  419637:	cmp    DWORD PTR [ebp-0x20],ebx
  41963a:	jb     0x419642
  41963c:	inc    DWORD PTR [ebp-0x24]
  41963f:	sub    DWORD PTR [ebp-0x20],ebx
  419642:	dec    esi
  419643:	jne    0x41962d
  419645:	mov    eax,0x644
  41964a:	add    eax,DWORD PTR [ebp-0x38]
  41964d:	mov    DWORD PTR [ebp-0x34],eax
  419650:	shl    DWORD PTR [ebp-0x24],0x4
  419654:	push   0x4
  419656:	pop    esi
  419657:	sub    edi,edi
  419659:	inc    edi
  41965a:	mov    eax,edi
  41965c:	mov    ebp,DWORD PTR [ebp-0x34]
  41965f:	call   0x41971a
  419664:	test   al,0x1
  419666:	je     0x41966b
  419668:	or     DWORD PTR [ebp-0x24],edi
  41966b:	shl    edi,1
  41966d:	dec    esi
  41966e:	jne    0x41965c
  419670:	jmp    0x419672
  419672:	inc    DWORD PTR [ebp-0x24]
  419675:	mov    ecx,DWORD PTR [ebp-0x1c]
  419678:	add    ecx,0x2
  41967b:	mov    edi,DWORD PTR [ebp-0x4]
  41967e:	mov    eax,edi
  419680:	sub    eax,DWORD PTR [ebp+0x24]
  419683:	cmp    DWORD PTR [ebp-0x24],eax
  419686:	ja     0x4196d2
  419688:	mov    esi,edi
  41968a:	sub    esi,DWORD PTR [ebp-0x24]
  41968d:	mov    edx,DWORD PTR [ebp+0x28]
  419690:	lods   al,BYTE PTR ds:[esi]
  419691:	stos   BYTE PTR es:[edi],al
  419692:	cmp    edi,edx
  419694:	jae    0x419699
  419696:	dec    ecx
  419697:	jne    0x419690
  419699:	mov    DWORD PTR [ebp-0x4],edi
  41969c:	movzx  esi,al
  41969f:	cmp    edi,DWORD PTR [ebp+0x28]
  4196a2:	jb     0x419403
  4196a8:	call   0x4196d7
  4196ad:	sub    eax,eax
  4196af:	lea    ebp,[esp+0x3c]
  4196b3:	mov    edx,DWORD PTR [ebp+0x20]
  4196b6:	mov    esi,DWORD PTR [ebp-0x8]
  4196b9:	sub    esi,DWORD PTR [ebp+0x18]
  4196bc:	mov    DWORD PTR [edx],esi
  4196be:	mov    edx,DWORD PTR [ebp+0x2c]
  4196c1:	mov    edi,DWORD PTR [ebp-0x4]
  4196c4:	sub    edi,DWORD PTR [ebp+0x24]
  4196c7:	mov    DWORD PTR [edx],edi
  4196c9:	leave  
  4196ca:	pop    ebx
  4196cb:	pop    esi
  4196cc:	pop    edi
  4196cd:	ret    0x1c
  4196d0:	pop    esi
  4196d1:	pop    eax
  4196d2:	sub    eax,eax
  4196d4:	inc    eax
  4196d5:	jmp    0x4196af
  4196d7:	cmp    ebx,0x1000000
  4196dd:	jb     0x4196e0
  4196df:	ret    
  4196e0:	shl    ebx,0x8
  4196e3:	push   esi
  4196e4:	mov    esi,DWORD PTR [ebp-0x8]
  4196e7:	cmp    esi,DWORD PTR [ebp+0x1c]
  4196ea:	jae    0x4196d0
  4196ec:	mov    eax,DWORD PTR [ebp-0x20]
  4196ef:	shl    eax,0x8
  4196f2:	lods   al,BYTE PTR ds:[esi]
  4196f3:	mov    DWORD PTR [ebp-0x20],eax
  4196f6:	mov    DWORD PTR [ebp-0x8],esi
  4196f9:	pop    esi
  4196fa:	ret    
  4196fb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4196fe:	movzx  eax,al
  419701:	shl    ecx,0x4
  419704:	add    eax,DWORD PTR [ebp-0x18]
  419707:	add    eax,ecx
  419709:	jmp    0x419711
  41970b:	movzx  eax,al
  41970e:	add    eax,DWORD PTR [ebp-0x3c]
  419711:	mov    ebp,DWORD PTR [ebp-0x38]
  419714:	lea    ebp,[ebp+eax*2+0x0]
  419718:	sub    eax,eax
  41971a:	lea    ebp,[ebp+eax*2+0x0]
  41971e:	cmp    ebx,0x1000000
  419724:	jae    0x419742
  419726:	mov    ecx,DWORD PTR [esp+0x38]
  41972a:	shl    DWORD PTR [esp+0x20],0x8
  41972f:	cmp    ecx,DWORD PTR [esp+0x5c]
  419733:	jae    0x4196d1
  419735:	mov    dl,BYTE PTR [ecx]
  419737:	inc    DWORD PTR [esp+0x38]
  41973b:	shl    ebx,0x8
  41973e:	mov    BYTE PTR [esp+0x20],dl
  419742:	mov    ecx,ebx
  419744:	movzx  edx,WORD PTR [ebp+0x0]
  419748:	shr    ecx,0xb
  41974b:	imul   ecx,edx
  41974e:	cmp    DWORD PTR [esp+0x20],ecx
  419752:	jae    0x41976b
  419754:	mov    ebx,ecx
  419756:	mov    ecx,0x800
  41975b:	sub    ecx,edx
  41975d:	shr    ecx,0x5
  419760:	add    WORD PTR [ebp+0x0],cx
  419764:	add    eax,eax
  419766:	lea    ebp,[esp+0x40]
  41976a:	ret    
  41976b:	shr    edx,0x5
  41976e:	sub    DWORD PTR [esp+0x20],ecx
  419772:	sub    ebx,ecx
  419774:	sub    WORD PTR [ebp+0x0],dx
  419778:	add    eax,eax
  41977a:	add    eax,0x1
  41977d:	lea    ebp,[esp+0x40]
  419781:	ret    
  419782:	push   ebp
  419783:	mov    ebp,esp
  419785:	sub    esp,0x104
  41978b:	push   ebx
  41978c:	push   esi
  41978d:	push   edi
  41978e:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  419795:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41979c:	mov    eax,DWORD PTR [ebp+0x8]
  41979f:	mov    DWORD PTR [ebp+0x8],eax
  4197a2:	mov    ecx,DWORD PTR [ebp-0x14]
  4197a5:	mov    ebx,0x7510899
  4197aa:	xor    ecx,ebx
  4197ac:	mov    eax,0x3272e0
  4197b1:	add    ecx,eax
  4197b3:	mov    DWORD PTR [ebp-0x28],ecx
  4197b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4197b9:	xor    ecx,ebx
  4197bb:	add    ecx,eax
  4197bd:	mov    DWORD PTR [ebp-0x40],ecx
  4197c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4197c3:	xor    ecx,ebx
  4197c5:	add    ecx,eax
  4197c7:	mov    DWORD PTR [ebp-0x3c],ecx
  4197ca:	mov    ecx,DWORD PTR [ebp-0x14]
  4197cd:	xor    ecx,ebx
  4197cf:	add    ecx,eax
  4197d1:	mov    DWORD PTR [ebp-0xa0],ecx
  4197d7:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  4197de:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  4197e5:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  4197ec:	push   0x25
  4197ee:	pop    ecx
  4197ef:	mov    DWORD PTR [ebp-0x2c],ecx
  4197f2:	mov    DWORD PTR [ebp-0x2c],ecx
  4197f5:	push   0x65
  4197f7:	pop    ecx
  4197f8:	mov    DWORD PTR [ebp-0x2c],ecx
  4197fb:	mov    DWORD PTR [ebp-0x2c],ecx
  4197fe:	mov    DWORD PTR [ebp-0x2c],0x4d
  419805:	mov    DWORD PTR [ebp-0x2c],0x43
  41980c:	mov    ecx,DWORD PTR [ebp-0x14]
  41980f:	xor    ecx,ebx
  419811:	add    ecx,eax
  419813:	mov    DWORD PTR [ebp-0x2c],ecx
  419816:	mov    ecx,DWORD PTR [ebp-0x14]
  419819:	xor    ecx,ebx
  41981b:	add    ecx,eax
  41981d:	mov    DWORD PTR [ebp-0x2c],ecx
  419820:	mov    DWORD PTR [ebp-0x24],0x257
  419827:	mov    DWORD PTR [ebp-0x34],0x35
  41982e:	mov    DWORD PTR [ebp-0x10],0x79
  419835:	lea    edi,[ebp-0xe4]
  41983b:	lea    esi,[ebp-0x104]
  419841:	call   0x41a45b
  419846:	dec    DWORD PTR [ebp-0x10]
  419849:	jne    0x419835
  41984b:	dec    DWORD PTR [ebp-0x34]
  41984e:	jne    0x41982e
  419850:	dec    DWORD PTR [ebp-0x24]
  419853:	jne    0x419827
  419855:	mov    DWORD PTR [ebp-0x24],0x400d
  41985c:	mov    eax,DWORD PTR [ebp-0x14]
  41985f:	xor    eax,ebx
  419861:	mov    esi,0x3272e0
  419866:	add    eax,esi
  419868:	mov    DWORD PTR [ebp-0x8],eax
  41986b:	mov    eax,DWORD PTR [ebp-0x14]
  41986e:	and    DWORD PTR [ebp-0x94],0x0
  419875:	xor    eax,ebx
  419877:	add    eax,esi
  419879:	mov    DWORD PTR [ebp-0x38],eax
  41987c:	mov    eax,fs:0x18
  419882:	mov    DWORD PTR [ebp-0x94],eax
  419888:	mov    eax,DWORD PTR [eax+0x30]
  41988b:	mov    DWORD PTR [ebp-0x98],eax
  419891:	mov    eax,DWORD PTR [eax+0xc]
  419894:	mov    DWORD PTR [ebp-0xc0],eax
  41989a:	mov    eax,DWORD PTR [ebp+0x8]
  41989d:	lea    ecx,[ebp-0x94]
  4198a3:	mov    DWORD PTR [eax+0x1a0],ecx
  4198a9:	mov    eax,DWORD PTR [ebp+0x8]
  4198ac:	lea    ecx,[ebp-0x98]
  4198b2:	mov    DWORD PTR [eax+0x1a4],ecx
  4198b8:	mov    eax,DWORD PTR [ebp+0x8]
  4198bb:	push   DWORD PTR [ebp+0x8]
  4198be:	lea    ecx,[ebp-0xc0]
  4198c4:	mov    DWORD PTR [eax+0x1a8],ecx
  4198ca:	call   0x41bc94
  4198cf:	mov    ecx,DWORD PTR [ebp-0x14]
  4198d2:	xor    ecx,ebx
  4198d4:	add    ecx,esi
  4198d6:	cmp    ecx,eax
  4198d8:	je     0x419bb5
  4198de:	mov    eax,DWORD PTR [ebp+0x8]
  4198e1:	mov    eax,DWORD PTR [eax+0x194]
  4198e7:	mov    ecx,DWORD PTR [eax]
  4198e9:	mov    eax,DWORD PTR [ebp+0x8]
  4198ec:	mov    eax,DWORD PTR [eax+0x194]
  4198f2:	mov    eax,DWORD PTR [eax]
  4198f4:	add    eax,DWORD PTR [ecx+0x3c]
  4198f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4198fa:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419900:	lea    edx,[ebp-0xc4]
  419906:	push   edx
  419907:	mov    edx,DWORD PTR [ebp+0x8]
  41990a:	mov    edx,DWORD PTR [edx+0x18c]
  419910:	mov    edx,DWORD PTR [edx]
  419912:	add    edx,DWORD PTR [eax+0x88]
  419918:	push   0x4
  41991a:	push   DWORD PTR [eax+0x8c]
  419920:	push   edx
  419921:	call   DWORD PTR [ecx+0x1c]
  419924:	push   DWORD PTR [ebp+0x8]
  419927:	mov    edi,DWORD PTR [ebp+0x8]
  41992a:	mov    eax,DWORD PTR [ebp+0x8]
  41992d:	mov    edx,DWORD PTR [eax+0x1b8]
  419933:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41993a:	mov    DWORD PTR [ebp-0x64],0x10a051f
  419941:	mov    WORD PTR [ebp-0x60],0x7a39
  419947:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  419951:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41995b:	mov    DWORD PTR [ebp-0x88],0x2419020a
  419965:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41996f:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  419976:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41997d:	mov    DWORD PTR [ebp-0x78],0x6390819
  419984:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41998b:	mov    DWORD PTR [ebp-0x70],0x81d050d
  419992:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  419999:	call   0x41bcc3
  41999e:	push   eax
  41999f:	mov    eax,DWORD PTR [ebp+0x8]
  4199a2:	mov    eax,DWORD PTR [eax+0x1a8]
  4199a8:	push   DWORD PTR [eax]
  4199aa:	call   0x41b965
  4199af:	test   eax,eax
  4199b1:	jne    0x419a03
  4199b3:	mov    eax,DWORD PTR [ebp+0x8]
  4199b6:	mov    eax,DWORD PTR [eax+0x1d8]
  4199bc:	mov    edi,DWORD PTR [ebp+0x8]
  4199bf:	add    eax,0x4
  4199c2:	mov    DWORD PTR [ebp-0x20],eax
  4199c5:	mov    eax,DWORD PTR [ebp+0x8]
  4199c8:	mov    edx,DWORD PTR [eax+0x1b8]
  4199ce:	call   0x41bcc3
  4199d3:	push   eax
  4199d4:	mov    eax,DWORD PTR [ebp-0x20]
  4199d7:	call   DWORD PTR [eax]
  4199d9:	test   eax,eax
  4199db:	jne    0x419a03
  4199dd:	mov    eax,DWORD PTR [ebp+0x8]
  4199e0:	mov    eax,DWORD PTR [eax+0x1d8]
  4199e6:	mov    edi,DWORD PTR [ebp+0x8]
  4199e9:	add    eax,0x10
  4199ec:	mov    DWORD PTR [ebp-0x20],eax
  4199ef:	mov    eax,DWORD PTR [ebp+0x8]
  4199f2:	mov    edx,DWORD PTR [eax+0x1b8]
  4199f8:	call   0x41bcc3
  4199fd:	push   eax
  4199fe:	mov    eax,DWORD PTR [ebp-0x20]
  419a01:	call   DWORD PTR [eax]
  419a03:	mov    eax,DWORD PTR [ebp-0x14]
  419a06:	mov    ecx,DWORD PTR [ebp-0x24]
  419a09:	xor    eax,ebx
  419a0b:	add    eax,esi
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b8e
  419a15:	mov    eax,DWORD PTR [ebp-0x18]
  419a18:	xor    eax,ebx
  419a1a:	mov    ecx,0xffcd8d20
  419a1f:	sub    ecx,eax
  419a21:	add    ecx,DWORD PTR [ebp-0x24]
  419a24:	mov    eax,DWORD PTR [ebp-0x8]
  419a27:	cmp    eax,ecx
  419a29:	ja     0x419b8e
  419a2f:	mov    DWORD PTR [ebp-0x34],0x0
  419a36:	push   DWORD PTR [ebp+0x8]
  419a39:	mov    edi,DWORD PTR [ebp+0x8]
  419a3c:	mov    eax,DWORD PTR [ebp+0x8]
  419a3f:	mov    edx,DWORD PTR [eax+0x1b4]
  419a45:	call   0x41bcc3
  419a4a:	push   eax
  419a4b:	mov    eax,DWORD PTR [ebp+0x8]
  419a4e:	mov    eax,DWORD PTR [eax+0x1a8]
  419a54:	push   DWORD PTR [eax]
  419a56:	call   0x41b965
  419a5b:	mov    ecx,DWORD PTR [ebp+0x8]
  419a5e:	mov    ecx,DWORD PTR [ecx+0x19c]
  419a64:	mov    DWORD PTR [ecx],eax
  419a66:	mov    eax,DWORD PTR [ebp+0x8]
  419a69:	mov    edi,DWORD PTR [eax+0x1d8]
  419a6f:	mov    esi,DWORD PTR [ebp+0x8]
  419a72:	xor    eax,eax
  419a74:	lea    edx,[ebp-0x7c]
  419a77:	call   0x41bcf9
  419a7c:	push   eax
  419a7d:	mov    eax,DWORD PTR [ebp+0x8]
  419a80:	mov    eax,DWORD PTR [eax+0x19c]
  419a86:	push   DWORD PTR [eax]
  419a88:	call   DWORD PTR [edi+0x8]
  419a8b:	mov    DWORD PTR [ebp-0x20],eax
  419a8e:	mov    eax,DWORD PTR [ebp+0x8]
  419a91:	mov    edi,DWORD PTR [eax+0x1d8]
  419a97:	mov    esi,DWORD PTR [ebp+0x8]
  419a9a:	xor    eax,eax
  419a9c:	lea    edx,[ebp-0x90]
  419aa2:	call   0x41bcf9
  419aa7:	push   eax
  419aa8:	mov    eax,DWORD PTR [ebp+0x8]
  419aab:	mov    eax,DWORD PTR [eax+0x19c]
  419ab1:	push   DWORD PTR [eax]
  419ab3:	call   DWORD PTR [edi+0x8]
  419ab6:	and    DWORD PTR [ebp-0x1c],0x0
  419aba:	mov    eax,DWORD PTR [ebp-0x1c]
  419abd:	and    eax,0x7
  419ac0:	add    eax,0x31
  419ac3:	push   eax
  419ac4:	call   DWORD PTR [ebp-0x20]
  419ac7:	test   eax,eax
  419ac9:	jne    0x419ad0
  419acb:	and    DWORD PTR [ebp-0x10],eax
  419ace:	jmp    0x419af8
  419ad0:	mov    eax,DWORD PTR [ebp+0x8]
  419ad3:	mov    edi,DWORD PTR [eax+0x1d8]
  419ad9:	mov    esi,DWORD PTR [ebp+0x8]
  419adc:	xor    eax,eax
  419ade:	lea    edx,[ebp-0x68]
  419ae1:	call   0x41bcf9
  419ae6:	push   eax
  419ae7:	mov    eax,DWORD PTR [ebp+0x8]
  419aea:	mov    eax,DWORD PTR [eax+0x198]
  419af0:	push   DWORD PTR [eax]
  419af2:	call   DWORD PTR [edi+0x8]
  419af5:	mov    DWORD PTR [ebp-0x10],eax
  419af8:	inc    DWORD PTR [ebp-0x1c]
  419afb:	cmp    DWORD PTR [ebp-0x1c],0x10
  419aff:	jb     0x419aba
  419b01:	mov    eax,DWORD PTR [ebp-0x18]
  419b04:	mov    esi,DWORD PTR [ebp+0x8]
  419b07:	xor    eax,ebx
  419b09:	mov    edi,0x3272e0
  419b0e:	add    eax,edi
  419b10:	lea    edx,[ebp-0xe4]
  419b16:	call   0x41bcf9
  419b1b:	push   eax
  419b1c:	mov    eax,DWORD PTR [ebp-0x14]
  419b1f:	mov    esi,DWORD PTR [ebp+0x8]
  419b22:	xor    eax,ebx
  419b24:	add    eax,edi
  419b26:	lea    edx,[ebp-0x104]
  419b2c:	call   0x41bcf9
  419b31:	push   eax
  419b32:	call   DWORD PTR [ebp-0x10]
  419b35:	mov    ecx,DWORD PTR [ebp-0x14]
  419b38:	xor    ecx,ebx
  419b3a:	add    ecx,edi
  419b3c:	cmp    ecx,eax
  419b3e:	jne    0x419b47
  419b40:	mov    DWORD PTR [ebp-0x34],0x1
  419b47:	mov    eax,DWORD PTR [ebp-0x18]
  419b4a:	mov    ecx,DWORD PTR [ebp-0x8]
  419b4d:	xor    eax,ebx
  419b4f:	lea    eax,[eax+ecx*1+0x3272e0]
  419b56:	mov    DWORD PTR [ebp-0x8],eax
  419b59:	mov    eax,DWORD PTR [ebp-0x34]
  419b5c:	test   eax,eax
  419b5e:	je     0x419b72
  419b60:	mov    eax,DWORD PTR [ebp-0x18]
  419b63:	mov    ecx,DWORD PTR [ebp-0x38]
  419b66:	xor    eax,ebx
  419b68:	lea    eax,[eax+ecx*1+0x3272e0]
  419b6f:	mov    DWORD PTR [ebp-0x38],eax
  419b72:	mov    eax,DWORD PTR [ebp-0x18]
  419b75:	xor    eax,ebx
  419b77:	mov    ecx,0xffcd8d20
  419b7c:	sub    ecx,eax
  419b7e:	add    ecx,DWORD PTR [ebp-0x24]
  419b81:	mov    eax,DWORD PTR [ebp-0x8]
  419b84:	cmp    eax,ecx
  419b86:	jbe    0x419a2f
  419b8c:	mov    esi,edi
  419b8e:	mov    eax,DWORD PTR [ebp-0x38]
  419b91:	mov    ecx,DWORD PTR [ebp-0x8]
  419b94:	cmp    ecx,eax
  419b96:	jne    0x419ba9
  419b98:	push   DWORD PTR [ebp+0x8]
  419b9b:	lea    eax,[ebp-0x40]
  419b9e:	push   eax
  419b9f:	call   0x41c772
  419ba4:	mov    DWORD PTR [ebp-0x28],eax
  419ba7:	jmp    0x419bb5
  419ba9:	mov    eax,DWORD PTR [ebp-0x28]
  419bac:	mov    ecx,DWORD PTR [ebp-0x18]
  419baf:	xor    ecx,ebx
  419bb1:	add    ecx,esi
  419bb3:	xor    DWORD PTR [eax],ecx
  419bb5:	mov    eax,DWORD PTR [ebp-0x14]
  419bb8:	mov    ecx,DWORD PTR [ebp-0x28]
  419bbb:	xor    eax,ebx
  419bbd:	add    eax,esi
  419bbf:	cmp    eax,ecx
  419bc1:	je     0x41a339
  419bc7:	mov    eax,DWORD PTR [ebp-0x14]
  419bca:	mov    ecx,DWORD PTR [ebp-0x40]
  419bcd:	xor    eax,ebx
  419bcf:	add    eax,esi
  419bd1:	cmp    eax,ecx
  419bd3:	je     0x41a339
  419bd9:	mov    eax,DWORD PTR [ebp-0x14]
  419bdc:	xor    eax,ebx
  419bde:	add    eax,esi
  419be0:	jmp    0x419bfe
  419be2:	mov    edi,DWORD PTR [ebp-0x28]
  419be5:	mov    cl,al
  419be7:	and    cl,0x1f
  419bea:	or     dl,0xff
  419bed:	sub    dl,cl
  419bef:	add    BYTE PTR [edi+eax*1],dl
  419bf2:	mov    ecx,DWORD PTR [ebp-0x18]
  419bf5:	xor    ecx,ebx
  419bf7:	lea    eax,[eax+ecx*1+0x3272e0]
  419bfe:	mov    ecx,DWORD PTR [ebp-0x40]
  419c01:	cmp    eax,ecx
  419c03:	jb     0x419be2
  419c05:	mov    eax,DWORD PTR [ebp-0x40]
  419c08:	mov    DWORD PTR [ebp-0x24],eax
  419c0b:	mov    eax,DWORD PTR [ebp-0x28]
  419c0e:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  419c15:	mov    DWORD PTR [ebp-0xbc],eax
  419c1b:	mov    edi,0xf89c85b8
  419c20:	mov    DWORD PTR [ebp-0x30],edi
  419c23:	mov    eax,DWORD PTR [ebp-0x38]
  419c26:	xor    eax,ebx
  419c28:	add    eax,esi
  419c2a:	mov    DWORD PTR [ebp-0xc],eax
  419c2d:	mov    eax,DWORD PTR [ebp-0x38]
  419c30:	xor    eax,ebx
  419c32:	add    eax,esi
  419c34:	mov    DWORD PTR [ebp-0x8],eax
  419c37:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  419c3e:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  419c45:	mov    eax,DWORD PTR [ebp-0x38]
  419c48:	mov    ecx,DWORD PTR [ebp-0x24]
  419c4b:	xor    eax,ebx
  419c4d:	add    eax,esi
  419c4f:	cmp    ecx,eax
  419c51:	je     0x419e50
  419c57:	jmp    0x419e2c
  419c5c:	mov    ecx,DWORD PTR [ebp-0xc]
  419c5f:	mov    eax,DWORD PTR [ebp-0x24]
  419c62:	sub    eax,ecx
  419c64:	mov    ecx,DWORD PTR [ebp-0x48]
  419c67:	xor    ecx,ebx
  419c69:	add    ecx,esi
  419c6b:	xor    edx,edx
  419c6d:	div    ecx
  419c6f:	mov    DWORD PTR [ebp-0x8],eax
  419c72:	mov    eax,DWORD PTR [ebp-0x54]
  419c75:	mov    ecx,DWORD PTR [ebp-0x8]
  419c78:	xor    eax,ebx
  419c7a:	add    eax,esi
  419c7c:	cmp    ecx,eax
  419c7e:	jbe    0x419c8a
  419c80:	mov    eax,DWORD PTR [ebp-0x54]
  419c83:	xor    eax,ebx
  419c85:	add    eax,esi
  419c87:	mov    DWORD PTR [ebp-0x8],eax
  419c8a:	mov    eax,DWORD PTR [ebp-0x48]
  419c8d:	mov    ecx,DWORD PTR [ebp-0x8]
  419c90:	xor    eax,ebx
  419c92:	add    eax,esi
  419c94:	imul   eax,ecx
  419c97:	mov    DWORD PTR [ebp-0x8],eax
  419c9a:	mov    eax,DWORD PTR [ebp-0x38]
  419c9d:	mov    ecx,DWORD PTR [ebp-0x8]
  419ca0:	xor    eax,ebx
  419ca2:	add    eax,esi
  419ca4:	cmp    ecx,eax
  419ca6:	je     0x419e1a
  419cac:	mov    eax,DWORD PTR [ebp-0x8]
  419caf:	mov    DWORD PTR [ebp-0x10],eax
  419cb2:	mov    eax,DWORD PTR [ebp-0xc]
  419cb5:	add    eax,DWORD PTR [ebp-0xbc]
  419cbb:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  419cc2:	mov    DWORD PTR [ebp-0x34],edi
  419cc5:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  419ccf:	mov    DWORD PTR [ebp-0x8],eax
  419cd2:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  419cd9:	mov    DWORD PTR [ebp-0x1c],edi
  419cdc:	mov    eax,DWORD PTR [ebp-0x20]
  419cdf:	xor    eax,ebx
  419ce1:	add    eax,esi
  419ce3:	jmp    0x419dd9
  419ce8:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  419cf2:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  419cfc:	mov    eax,DWORD PTR [ebp-0x1c]
  419cff:	mov    ecx,DWORD PTR [ebp-0x44]
  419d02:	xor    eax,ebx
  419d04:	add    eax,esi
  419d06:	imul   eax,ecx
  419d09:	mov    ecx,DWORD PTR [ebp-0x8]
  419d0c:	mov    al,BYTE PTR [eax+ecx*1]
  419d0f:	mov    BYTE PTR [ebp-0x2],al
  419d12:	mov    eax,DWORD PTR [ebp-0x1c]
  419d15:	mov    ecx,DWORD PTR [ebp-0x44]
  419d18:	xor    eax,ebx
  419d1a:	add    eax,esi
  419d1c:	imul   eax,ecx
  419d1f:	mov    ecx,DWORD PTR [ebp-0xa8]
  419d25:	xor    ecx,ebx
  419d27:	add    eax,ecx
  419d29:	mov    ecx,DWORD PTR [ebp-0x8]
  419d2c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  419d34:	mov    ecx,DWORD PTR [ebp-0xb0]
  419d3a:	xor    ecx,ebx
  419d3c:	lea    eax,[ecx+eax*1+0x3272e0]
  419d43:	movzx  ecx,BYTE PTR [ebp-0x2]
  419d47:	xor    ecx,eax
  419d49:	mov    BYTE PTR [ebp-0x2],cl
  419d4c:	mov    al,BYTE PTR [ebp-0x2]
  419d4f:	mov    ecx,DWORD PTR [ebp-0x1c]
  419d52:	mov    edx,DWORD PTR [ebp-0x44]
  419d55:	xor    ecx,ebx
  419d57:	add    ecx,esi
  419d59:	imul   ecx,edx
  419d5c:	mov    edx,DWORD PTR [ebp-0x8]
  419d5f:	mov    BYTE PTR [ecx+edx*1],al
  419d62:	mov    eax,DWORD PTR [ebp-0x1c]
  419d65:	mov    ecx,DWORD PTR [ebp-0x44]
  419d68:	xor    eax,ebx
  419d6a:	add    eax,esi
  419d6c:	imul   eax,ecx
  419d6f:	mov    ecx,DWORD PTR [ebp-0x8]
  419d72:	mov    al,BYTE PTR [eax+ecx*1]
  419d75:	mov    BYTE PTR [ebp-0x2],al
  419d78:	mov    eax,DWORD PTR [ebp-0x1c]
  419d7b:	mov    ecx,DWORD PTR [ebp-0x44]
  419d7e:	xor    eax,ebx
  419d80:	add    eax,esi
  419d82:	imul   eax,ecx
  419d85:	mov    ecx,DWORD PTR [ebp-0x34]
  419d88:	xor    ecx,ebx
  419d8a:	add    eax,ecx
  419d8c:	mov    ecx,DWORD PTR [ebp-0x8]
  419d8f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  419d97:	mov    ecx,DWORD PTR [ebp-0xb8]
  419d9d:	xor    ecx,ebx
  419d9f:	lea    eax,[ecx+eax*1+0x3272e0]
  419da6:	movzx  ecx,BYTE PTR [ebp-0x2]
  419daa:	xor    ecx,eax
  419dac:	mov    BYTE PTR [ebp-0x2],cl
  419daf:	mov    al,BYTE PTR [ebp-0x2]
  419db2:	mov    ecx,DWORD PTR [ebp-0x1c]
  419db5:	mov    edx,DWORD PTR [ebp-0x44]
  419db8:	xor    ecx,ebx
  419dba:	add    ecx,esi
  419dbc:	imul   ecx,edx
  419dbf:	mov    edx,DWORD PTR [ebp-0x8]
  419dc2:	mov    BYTE PTR [ecx+edx*1],al
  419dc5:	mov    eax,DWORD PTR [ebp-0x2c]
  419dc8:	mov    ecx,DWORD PTR [ebp-0x34]
  419dcb:	xor    eax,ebx
  419dcd:	xor    ecx,ebx
  419dcf:	add    eax,esi
  419dd1:	add    ecx,esi
  419dd3:	imul   eax,ecx
  419dd6:	add    eax,DWORD PTR [ebp-0x44]
  419dd9:	mov    DWORD PTR [ebp-0x44],eax
  419ddc:	mov    eax,DWORD PTR [ebp-0x44]
  419ddf:	mov    ecx,DWORD PTR [ebp-0x10]
  419de2:	cmp    ecx,eax
  419de4:	jb     0x419ce8
  419dea:	mov    eax,DWORD PTR [ebp-0x34]
  419ded:	mov    ecx,DWORD PTR [ebp-0x10]
  419df0:	xor    eax,ebx
  419df2:	add    eax,esi
  419df4:	imul   eax,ecx
  419df7:	mov    ecx,DWORD PTR [ebp-0x20]
  419dfa:	xor    ecx,ebx
  419dfc:	add    ecx,esi
  419dfe:	or     eax,ecx
  419e00:	mov    ecx,DWORD PTR [ebp-0x30]
  419e03:	xor    ecx,ebx
  419e05:	add    eax,ecx
  419e07:	mov    ecx,DWORD PTR [ebp-0x30]
  419e0a:	xor    ecx,ebx
  419e0c:	add    eax,ecx
  419e0e:	mov    ecx,DWORD PTR [ebp-0xc]
  419e11:	lea    eax,[eax+ecx*1+0x64e5c0]
  419e18:	jmp    0x419e29
  419e1a:	mov    eax,DWORD PTR [ebp-0x30]
  419e1d:	mov    ecx,DWORD PTR [ebp-0xc]
  419e20:	xor    eax,ebx
  419e22:	lea    eax,[eax+ecx*1+0x3272e0]
  419e29:	mov    DWORD PTR [ebp-0xc],eax
  419e2c:	mov    eax,DWORD PTR [ebp-0x30]
  419e2f:	xor    eax,ebx
  419e31:	mov    ecx,0xffcd8d20
  419e36:	sub    ecx,eax
  419e38:	add    ecx,DWORD PTR [ebp-0x24]
  419e3b:	mov    eax,DWORD PTR [ebp-0x30]
  419e3e:	mov    edx,DWORD PTR [ebp-0xc]
  419e41:	xor    eax,ebx
  419e43:	add    eax,esi
  419e45:	imul   eax,edx
  419e48:	cmp    eax,ecx
  419e4a:	jbe    0x419c5c
  419e50:	mov    eax,DWORD PTR [ebp-0x14]
  419e53:	mov    ecx,DWORD PTR [ebp-0x40]
  419e56:	mov    eax,DWORD PTR [ebp+0x8]
  419e59:	mov    edx,DWORD PTR [ebp-0x4c]
  419e5c:	mov    eax,DWORD PTR [eax+0x1d8]
  419e62:	xor    edx,ebx
  419e64:	add    edx,esi
  419e66:	push   edx
  419e67:	mov    edx,DWORD PTR [ebp-0x3c]
  419e6a:	xor    edx,ebx
  419e6c:	add    edx,esi
  419e6e:	push   edx
  419e6f:	push   ecx
  419e70:	mov    DWORD PTR [ebp-0x2c],ecx
  419e73:	mov    ecx,DWORD PTR [ebp-0x14]
  419e76:	xor    ecx,ebx
  419e78:	add    ecx,esi
  419e7a:	push   ecx
  419e7b:	call   DWORD PTR [eax+0x14]
  419e7e:	mov    edi,eax
  419e80:	mov    eax,DWORD PTR [ebp-0x14]
  419e83:	xor    eax,ebx
  419e85:	add    eax,esi
  419e87:	cmp    eax,edi
  419e89:	je     0x419ee4
  419e8b:	mov    eax,DWORD PTR [ebp-0x14]
  419e8e:	jmp    0x419eb1
  419e90:	mov    ecx,DWORD PTR [ebp-0x28]
  419e93:	xor    eax,ebx
  419e95:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  419e9c:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  419ea3:	mov    ecx,DWORD PTR [ebp-0x18]
  419ea6:	xor    ecx,ebx
  419ea8:	lea    eax,[ecx+eax*1+0x3272e0]
  419eaf:	xor    eax,ebx
  419eb1:	mov    ecx,DWORD PTR [ebp-0x40]
  419eb4:	sub    ecx,esi
  419eb6:	xor    ecx,ebx
  419eb8:	cmp    eax,ecx
  419eba:	jne    0x419e90
  419ebc:	mov    eax,DWORD PTR [ebp+0x8]
  419ebf:	mov    ecx,DWORD PTR [ebp-0x50]
  419ec2:	mov    eax,DWORD PTR [eax+0x1d8]
  419ec8:	xor    ecx,ebx
  419eca:	add    ecx,esi
  419ecc:	push   ecx
  419ecd:	mov    ecx,DWORD PTR [ebp-0x14]
  419ed0:	xor    ecx,ebx
  419ed2:	add    ecx,esi
  419ed4:	push   ecx
  419ed5:	push   DWORD PTR [ebp-0x28]
  419ed8:	call   DWORD PTR [eax+0x18]
  419edb:	mov    eax,DWORD PTR [ebp-0x2c]
  419ede:	mov    DWORD PTR [ebp-0x28],edi
  419ee1:	mov    DWORD PTR [ebp-0x40],eax
  419ee4:	mov    edi,DWORD PTR [ebp-0x28]
  419ee7:	mov    eax,DWORD PTR [ebp-0x18]
  419eea:	mov    ecx,DWORD PTR [ebp-0x14]
  419eed:	xor    eax,ebx
  419eef:	mov    DWORD PTR [ebp-0x2c],edi
  419ef2:	add    eax,esi
  419ef4:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  419efb:	mov    DWORD PTR [ebp-0x58],0x27123f12
  419f02:	jmp    0x419f36
  419f04:	xor    ecx,ebx
  419f06:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  419f0d:	xor    dl,0x73
  419f10:	sub    dl,0x9
  419f13:	mov    DWORD PTR [ebp-0x3c],ecx
  419f16:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  419f1e:	movzx  edx,dl
  419f21:	cmp    ecx,edx
  419f23:	jne    0x419f40
  419f25:	mov    ecx,DWORD PTR [ebp-0x18]
  419f28:	mov    edx,DWORD PTR [ebp-0x3c]
  419f2b:	xor    ecx,ebx
  419f2d:	lea    ecx,[ecx+edx*1+0x3272e0]
  419f34:	xor    ecx,ebx
  419f36:	cmp    ecx,0xf89c85b1
  419f3c:	jne    0x419f04
  419f3e:	jmp    0x419f47
  419f40:	mov    eax,DWORD PTR [ebp-0x14]
  419f43:	xor    eax,ebx
  419f45:	add    eax,esi
  419f47:	mov    ecx,DWORD PTR [ebp-0x14]
  419f4a:	xor    ecx,ebx
  419f4c:	add    ecx,esi
  419f4e:	cmp    ecx,eax
  419f50:	je     0x41a0c3
  419f56:	mov    eax,DWORD PTR [edi+0x8]
  419f59:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  419f60:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  419f67:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  419f6e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  419f75:	mov    DWORD PTR [ebp-0x10],eax
  419f78:	mov    eax,DWORD PTR [ebp+0x8]
  419f7b:	mov    ecx,DWORD PTR [ebp-0x20]
  419f7e:	xor    ecx,ebx
  419f80:	add    ecx,esi
  419f82:	push   ecx
  419f83:	mov    ecx,DWORD PTR [ebp-0x48]
  419f86:	mov    eax,DWORD PTR [eax+0x1d8]
  419f8c:	xor    ecx,ebx
  419f8e:	add    ecx,esi
  419f90:	push   ecx
  419f91:	mov    ecx,DWORD PTR [ebp-0x3c]
  419f94:	xor    ecx,ebx
  419f96:	add    ecx,esi
  419f98:	push   ecx
  419f99:	mov    ecx,DWORD PTR [ebp-0xc]
  419f9c:	xor    ecx,ebx
  419f9e:	add    ecx,esi
  419fa0:	push   ecx
  419fa1:	call   DWORD PTR [eax+0x14]
  419fa4:	mov    edi,eax
  419fa6:	mov    eax,DWORD PTR [ebp+0x8]
  419fa9:	mov    ecx,DWORD PTR [ebp-0x20]
  419fac:	mov    eax,DWORD PTR [eax+0x1d8]
  419fb2:	xor    ecx,ebx
  419fb4:	add    ecx,esi
  419fb6:	push   ecx
  419fb7:	mov    ecx,DWORD PTR [ebp-0x48]
  419fba:	xor    ecx,ebx
  419fbc:	add    ecx,esi
  419fbe:	push   ecx
  419fbf:	mov    ecx,DWORD PTR [ebp-0xc]
  419fc2:	push   DWORD PTR [ebp-0x10]
  419fc5:	xor    ecx,ebx
  419fc7:	add    ecx,esi
  419fc9:	push   ecx
  419fca:	call   DWORD PTR [eax+0x14]
  419fcd:	mov    ecx,DWORD PTR [ebp-0xc]
  419fd0:	xor    ecx,ebx
  419fd2:	add    ecx,esi
  419fd4:	mov    DWORD PTR [ebp-0x20],eax
  419fd7:	cmp    ecx,edi
  419fd9:	je     0x41a366
  419fdf:	mov    ecx,DWORD PTR [ebp-0xc]
  419fe2:	xor    ecx,ebx
  419fe4:	add    ecx,esi
  419fe6:	cmp    ecx,eax
  419fe8:	je     0x41a366
  419fee:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  419ff5:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  419ffc:	mov    ecx,DWORD PTR [ebp-0x3c]
  419fff:	xor    cl,0x99
  41a002:	sub    cl,0x20
  41a005:	mov    BYTE PTR [edi],cl
  41a007:	mov    ecx,DWORD PTR [ebp-0xc]
  41a00a:	xor    cl,0x99
  41a00d:	sub    cl,0x20
  41a010:	mov    BYTE PTR [edi+0x1],cl
  41a013:	mov    ecx,DWORD PTR [ebp-0x4c]
  41a016:	xor    cl,0x99
  41a019:	sub    cl,0x20
  41a01c:	mov    BYTE PTR [edi+0x2],cl
  41a01f:	and    DWORD PTR [ebp-0xb4],0x0
  41a026:	and    DWORD PTR [ebp-0xa4],0x0
  41a02d:	lea    ecx,[ebp-0xa4]
  41a033:	push   ecx
  41a034:	push   DWORD PTR [ebp-0x10]
  41a037:	push   eax
  41a038:	lea    eax,[ebp-0xb4]
  41a03e:	push   eax
  41a03f:	mov    eax,DWORD PTR [ebp-0x2c]
  41a042:	push   DWORD PTR [eax+0xc]
  41a045:	mov    eax,DWORD PTR [ebp-0x28]
  41a048:	add    eax,0x10
  41a04b:	push   eax
  41a04c:	push   edi
  41a04d:	call   0x419399
  41a052:	mov    DWORD PTR [ebp-0x3c],eax
  41a055:	mov    eax,DWORD PTR [ebp+0x8]
  41a058:	mov    ecx,DWORD PTR [ebp-0x50]
  41a05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41a061:	xor    ecx,ebx
  41a063:	add    ecx,esi
  41a065:	push   ecx
  41a066:	mov    ecx,DWORD PTR [ebp-0xc]
  41a069:	xor    ecx,ebx
  41a06b:	add    ecx,esi
  41a06d:	push   ecx
  41a06e:	push   edi
  41a06f:	call   DWORD PTR [eax+0x18]
  41a072:	mov    eax,DWORD PTR [ebp-0x3c]
  41a075:	add    eax,0xffcd8d20
  41a07a:	xor    eax,ebx
  41a07c:	cmp    eax,0xf89c85b9
  41a081:	mov    eax,DWORD PTR [ebp+0x8]
  41a084:	mov    eax,DWORD PTR [eax+0x1d8]
  41a08a:	mov    ecx,DWORD PTR [ebp-0x50]
  41a08d:	jne    0x41a0b0
  41a08f:	xor    ecx,ebx
  41a091:	add    ecx,esi
  41a093:	push   ecx
  41a094:	mov    ecx,DWORD PTR [ebp-0xc]
  41a097:	xor    ecx,ebx
  41a099:	add    ecx,esi
  41a09b:	push   ecx
  41a09c:	push   DWORD PTR [ebp-0x28]
  41a09f:	call   DWORD PTR [eax+0x18]
  41a0a2:	mov    eax,DWORD PTR [ebp-0x20]
  41a0a5:	mov    DWORD PTR [ebp-0x28],eax
  41a0a8:	mov    eax,DWORD PTR [ebp-0x10]
  41a0ab:	mov    DWORD PTR [ebp-0x40],eax
  41a0ae:	jmp    0x41a0c3
  41a0b0:	xor    ecx,ebx
  41a0b2:	add    ecx,esi
  41a0b4:	push   ecx
  41a0b5:	mov    ecx,DWORD PTR [ebp-0xc]
  41a0b8:	xor    ecx,ebx
  41a0ba:	add    ecx,esi
  41a0bc:	push   ecx
  41a0bd:	push   DWORD PTR [ebp-0x20]
  41a0c0:	call   DWORD PTR [eax+0x18]
  41a0c3:	mov    eax,DWORD PTR [ebp-0x40]
  41a0c6:	mov    DWORD PTR [ebp-0x38],eax
  41a0c9:	mov    eax,DWORD PTR [ebp-0x28]
  41a0cc:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41a0d3:	mov    DWORD PTR [ebp-0x3c],eax
  41a0d6:	mov    edi,0xf89c85b8
  41a0db:	mov    DWORD PTR [ebp-0x30],edi
  41a0de:	mov    eax,DWORD PTR [ebp-0x24]
  41a0e1:	xor    eax,ebx
  41a0e3:	add    eax,esi
  41a0e5:	mov    DWORD PTR [ebp-0xc],eax
  41a0e8:	mov    eax,DWORD PTR [ebp-0x24]
  41a0eb:	xor    eax,ebx
  41a0ed:	add    eax,esi
  41a0ef:	mov    DWORD PTR [ebp-0x10],eax
  41a0f2:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41a0f9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41a100:	mov    eax,DWORD PTR [ebp-0x24]
  41a103:	mov    ecx,DWORD PTR [ebp-0x38]
  41a106:	xor    eax,ebx
  41a108:	add    eax,esi
  41a10a:	cmp    ecx,eax
  41a10c:	je     0x41a302
  41a112:	jmp    0x41a2de
  41a117:	mov    ecx,DWORD PTR [ebp-0xc]
  41a11a:	mov    eax,DWORD PTR [ebp-0x38]
  41a11d:	sub    eax,ecx
  41a11f:	mov    ecx,DWORD PTR [ebp-0x48]
  41a122:	xor    ecx,ebx
  41a124:	add    ecx,esi
  41a126:	xor    edx,edx
  41a128:	div    ecx
  41a12a:	mov    DWORD PTR [ebp-0x10],eax
  41a12d:	mov    eax,DWORD PTR [ebp-0x20]
  41a130:	mov    ecx,DWORD PTR [ebp-0x10]
  41a133:	xor    eax,ebx
  41a135:	add    eax,esi
  41a137:	cmp    ecx,eax
  41a139:	jbe    0x41a145
  41a13b:	mov    eax,DWORD PTR [ebp-0x20]
  41a13e:	xor    eax,ebx
  41a140:	add    eax,esi
  41a142:	mov    DWORD PTR [ebp-0x10],eax
  41a145:	mov    eax,DWORD PTR [ebp-0x48]
  41a148:	mov    ecx,DWORD PTR [ebp-0x10]
  41a14b:	xor    eax,ebx
  41a14d:	add    eax,esi
  41a14f:	imul   eax,ecx
  41a152:	mov    DWORD PTR [ebp-0x10],eax
  41a155:	mov    eax,DWORD PTR [ebp-0x24]
  41a158:	mov    ecx,DWORD PTR [ebp-0x10]
  41a15b:	xor    eax,ebx
  41a15d:	add    eax,esi
  41a15f:	cmp    ecx,eax
  41a161:	je     0x41a2cc
  41a167:	mov    eax,DWORD PTR [ebp-0x10]
  41a16a:	mov    DWORD PTR [ebp-0x34],eax
  41a16d:	mov    eax,DWORD PTR [ebp-0xc]
  41a170:	add    eax,DWORD PTR [ebp-0x3c]
  41a173:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41a17a:	mov    DWORD PTR [ebp-0x10],edi
  41a17d:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41a184:	mov    DWORD PTR [ebp-0x1c],eax
  41a187:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41a18e:	mov    DWORD PTR [ebp-0x8],edi
  41a191:	mov    eax,DWORD PTR [ebp-0x54]
  41a194:	xor    eax,ebx
  41a196:	add    eax,esi
  41a198:	jmp    0x41a28b
  41a19d:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41a1a7:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41a1b1:	mov    eax,DWORD PTR [ebp-0x8]
  41a1b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41a1b7:	xor    eax,ebx
  41a1b9:	add    eax,esi
  41a1bb:	imul   eax,ecx
  41a1be:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a1c1:	mov    al,BYTE PTR [eax+ecx*1]
  41a1c4:	mov    BYTE PTR [ebp-0x1],al
  41a1c7:	mov    eax,DWORD PTR [ebp-0x8]
  41a1ca:	mov    ecx,DWORD PTR [ebp-0x18]
  41a1cd:	xor    eax,ebx
  41a1cf:	add    eax,esi
  41a1d1:	imul   eax,ecx
  41a1d4:	mov    ecx,DWORD PTR [ebp-0x4c]
  41a1d7:	xor    ecx,ebx
  41a1d9:	add    eax,ecx
  41a1db:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a1de:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41a1e6:	mov    ecx,DWORD PTR [ebp-0xac]
  41a1ec:	xor    ecx,ebx
  41a1ee:	lea    eax,[ecx+eax*1+0x3272e0]
  41a1f5:	movzx  ecx,BYTE PTR [ebp-0x1]
  41a1f9:	xor    ecx,eax
  41a1fb:	mov    BYTE PTR [ebp-0x1],cl
  41a1fe:	mov    al,BYTE PTR [ebp-0x1]
  41a201:	mov    ecx,DWORD PTR [ebp-0x8]
  41a204:	mov    edx,DWORD PTR [ebp-0x18]
  41a207:	xor    ecx,ebx
  41a209:	add    ecx,esi
  41a20b:	imul   ecx,edx
  41a20e:	mov    edx,DWORD PTR [ebp-0x1c]
  41a211:	mov    BYTE PTR [ecx+edx*1],al
  41a214:	mov    eax,DWORD PTR [ebp-0x8]
  41a217:	mov    ecx,DWORD PTR [ebp-0x18]
  41a21a:	xor    eax,ebx
  41a21c:	add    eax,esi
  41a21e:	imul   eax,ecx
  41a221:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a224:	mov    al,BYTE PTR [eax+ecx*1]
  41a227:	mov    BYTE PTR [ebp-0x1],al
  41a22a:	mov    eax,DWORD PTR [ebp-0x8]
  41a22d:	mov    ecx,DWORD PTR [ebp-0x18]
  41a230:	xor    eax,ebx
  41a232:	add    eax,esi
  41a234:	imul   eax,ecx
  41a237:	mov    ecx,DWORD PTR [ebp-0x10]
  41a23a:	xor    ecx,ebx
  41a23c:	add    eax,ecx
  41a23e:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a241:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41a249:	mov    ecx,DWORD PTR [ebp-0x9c]
  41a24f:	xor    ecx,ebx
  41a251:	lea    eax,[ecx+eax*1+0x3272e0]
  41a258:	movzx  ecx,BYTE PTR [ebp-0x1]
  41a25c:	xor    ecx,eax
  41a25e:	mov    BYTE PTR [ebp-0x1],cl
  41a261:	mov    al,BYTE PTR [ebp-0x1]
  41a264:	mov    ecx,DWORD PTR [ebp-0x8]
  41a267:	mov    edx,DWORD PTR [ebp-0x18]
  41a26a:	xor    ecx,ebx
  41a26c:	add    ecx,esi
  41a26e:	imul   ecx,edx
  41a271:	mov    edx,DWORD PTR [ebp-0x1c]
  41a274:	mov    BYTE PTR [ecx+edx*1],al
  41a277:	mov    eax,DWORD PTR [ebp-0x2c]
  41a27a:	mov    ecx,DWORD PTR [ebp-0x10]
  41a27d:	xor    eax,ebx
  41a27f:	xor    ecx,ebx
  41a281:	add    eax,esi
  41a283:	add    ecx,esi
  41a285:	imul   eax,ecx
  41a288:	add    eax,DWORD PTR [ebp-0x18]
  41a28b:	mov    DWORD PTR [ebp-0x18],eax
  41a28e:	mov    eax,DWORD PTR [ebp-0x18]
  41a291:	mov    ecx,DWORD PTR [ebp-0x34]
  41a294:	cmp    ecx,eax
  41a296:	jb     0x41a19d
  41a29c:	mov    eax,DWORD PTR [ebp-0x10]
  41a29f:	mov    ecx,DWORD PTR [ebp-0x34]
  41a2a2:	xor    eax,ebx
  41a2a4:	add    eax,esi
  41a2a6:	imul   eax,ecx
  41a2a9:	mov    ecx,DWORD PTR [ebp-0x54]
  41a2ac:	xor    ecx,ebx
  41a2ae:	add    ecx,esi
  41a2b0:	or     eax,ecx
  41a2b2:	mov    ecx,DWORD PTR [ebp-0x30]
  41a2b5:	xor    ecx,ebx
  41a2b7:	add    eax,ecx
  41a2b9:	mov    ecx,DWORD PTR [ebp-0x30]
  41a2bc:	xor    ecx,ebx
  41a2be:	add    eax,ecx
  41a2c0:	mov    ecx,DWORD PTR [ebp-0xc]
  41a2c3:	lea    eax,[eax+ecx*1+0x64e5c0]
  41a2ca:	jmp    0x41a2db
  41a2cc:	mov    eax,DWORD PTR [ebp-0x30]
  41a2cf:	mov    ecx,DWORD PTR [ebp-0xc]
  41a2d2:	xor    eax,ebx
  41a2d4:	lea    eax,[eax+ecx*1+0x3272e0]
  41a2db:	mov    DWORD PTR [ebp-0xc],eax
  41a2de:	mov    eax,DWORD PTR [ebp-0x30]
  41a2e1:	xor    eax,ebx
  41a2e3:	mov    ecx,0xffcd8d20
  41a2e8:	sub    ecx,eax
  41a2ea:	add    ecx,DWORD PTR [ebp-0x38]
  41a2ed:	mov    eax,DWORD PTR [ebp-0x30]
  41a2f0:	mov    edx,DWORD PTR [ebp-0xc]
  41a2f3:	xor    eax,ebx
  41a2f5:	add    eax,esi
  41a2f7:	imul   eax,edx
  41a2fa:	cmp    eax,ecx
  41a2fc:	jbe    0x41a117
  41a302:	push   DWORD PTR [ebp+0x8]
  41a305:	mov    eax,DWORD PTR [ebp+0x8]
  41a308:	push   DWORD PTR [eax+0x1cc]
  41a30e:	lea    eax,[ebp-0xa0]
  41a314:	push   eax
  41a315:	mov    eax,DWORD PTR [ebp+0x8]
  41a318:	mov    eax,DWORD PTR [eax+0x1c4]
  41a31e:	push   DWORD PTR [eax]
  41a320:	mov    eax,DWORD PTR [ebp+0x8]
  41a323:	mov    eax,DWORD PTR [eax+0x1c0]
  41a329:	push   DWORD PTR [eax]
  41a32b:	push   DWORD PTR [ebp-0x40]
  41a32e:	push   DWORD PTR [ebp-0x28]
  41a331:	call   0x41ae07
  41a336:	mov    DWORD PTR [ebp-0x3c],eax
  41a339:	mov    eax,DWORD PTR [ebp-0x14]
  41a33c:	mov    ecx,DWORD PTR [ebp-0x28]
  41a33f:	xor    eax,ebx
  41a341:	add    eax,esi
  41a343:	cmp    eax,ecx
  41a345:	je     0x41a366
  41a347:	mov    eax,DWORD PTR [ebp+0x8]
  41a34a:	mov    ecx,DWORD PTR [ebp-0x50]
  41a34d:	mov    eax,DWORD PTR [eax+0x1d8]
  41a353:	xor    ecx,ebx
  41a355:	add    ecx,esi
  41a357:	push   ecx
  41a358:	mov    ecx,DWORD PTR [ebp-0x14]
  41a35b:	xor    ecx,ebx
  41a35d:	add    ecx,esi
  41a35f:	push   ecx
  41a360:	push   DWORD PTR [ebp-0x28]
  41a363:	call   DWORD PTR [eax+0x18]
  41a366:	pop    edi
  41a367:	pop    esi
  41a368:	pop    ebx
  41a369:	leave  
  41a36a:	ret    0x4
  41a36d:	push   ebp
  41a36e:	mov    ebp,esp
  41a370:	push   ecx
  41a371:	push   ecx
  41a372:	lea    eax,[ebp-0x8]
  41a375:	mov    DWORD PTR [ebp-0x4],eax
  41a378:	push   esi
  41a379:	mov    esi,DWORD PTR [ebp-0x4]
  41a37c:	mov    eax,0xf881ba0f
  41a381:	mov    DWORD PTR [esi],eax
  41a383:	mov    esi,DWORD PTR [ebp-0x8]
  41a386:	cmp    esi,eax
  41a388:	pop    esi
  41a389:	jne    0x41a393
  41a38b:	mov    BYTE PTR [ecx+0xa],0x7a
  41a38f:	mov    BYTE PTR [edx+0x8],0x2f
  41a393:	mov    BYTE PTR [edx+0xa],0x7a
  41a397:	mov    BYTE PTR [ecx+0x2],0x4
  41a39b:	leave  
  41a39c:	ret    
  41a39d:	push   ebp
  41a39e:	mov    ebp,esp
  41a3a0:	push   ecx
  41a3a1:	push   ecx
  41a3a2:	lea    eax,[ebp-0x8]
  41a3a5:	mov    DWORD PTR [ebp-0x4],eax
  41a3a8:	mov    edx,DWORD PTR [ebp-0x4]
  41a3ab:	mov    eax,0xf88b0be3
  41a3b0:	mov    DWORD PTR [edx],eax
  41a3b2:	mov    edx,DWORD PTR [ebp-0x8]
  41a3b5:	cmp    edx,eax
  41a3b7:	jne    0x41a3c8
  41a3b9:	mov    eax,DWORD PTR [ebp+0x8]
  41a3bc:	mov    BYTE PTR [ecx+0x9],0xe
  41a3c0:	mov    BYTE PTR [eax+0x7],0x47
  41a3c4:	mov    BYTE PTR [ecx+0x6],0xf
  41a3c8:	mov    BYTE PTR [ecx+0x3],0x1e
  41a3cc:	leave  
  41a3cd:	ret    0x4
  41a3d0:	push   ebp
  41a3d1:	mov    ebp,esp
  41a3d3:	push   ecx
  41a3d4:	push   ecx
  41a3d5:	lea    eax,[ebp-0x8]
  41a3d8:	mov    DWORD PTR [ebp-0x4],eax
  41a3db:	mov    edx,DWORD PTR [ebp-0x4]
  41a3de:	mov    eax,0x7e0da0f
  41a3e3:	mov    DWORD PTR [edx],eax
  41a3e5:	mov    edx,DWORD PTR [ebp-0x8]
  41a3e8:	cmp    edx,eax
  41a3ea:	jne    0x41a3f0
  41a3ec:	mov    BYTE PTR [ecx+0x7],0x47
  41a3f0:	mov    eax,DWORD PTR [ebp+0x8]
  41a3f3:	mov    BYTE PTR [ecx+0x1],0x1
  41a3f7:	mov    BYTE PTR [eax+0x9],0x2e
  41a3fb:	leave  
  41a3fc:	ret    0x4
  41a3ff:	push   ebp
  41a400:	mov    ebp,esp
  41a402:	push   ecx
  41a403:	push   ecx
  41a404:	lea    eax,[ebp-0x8]
  41a407:	mov    DWORD PTR [ebp-0x4],eax
  41a40a:	push   esi
  41a40b:	mov    esi,DWORD PTR [ebp-0x4]
  41a40e:	mov    eax,0x7060e3e
  41a413:	mov    DWORD PTR [esi],eax
  41a415:	mov    esi,DWORD PTR [ebp-0x8]
  41a418:	cmp    esi,eax
  41a41a:	pop    esi
  41a41b:	jne    0x41a427
  41a41d:	mov    BYTE PTR [edx+0x4],0xb
  41a421:	mov    WORD PTR [ecx+0x3],0xb1e
  41a427:	mov    BYTE PTR [edx],0x3f
  41a42a:	leave  
  41a42b:	ret    
  41a42c:	push   ebp
  41a42d:	mov    ebp,esp
  41a42f:	push   ecx
  41a430:	push   ecx
  41a431:	lea    eax,[ebp-0x8]
  41a434:	mov    DWORD PTR [ebp-0x4],eax
  41a437:	mov    edx,DWORD PTR [ebp-0x4]
  41a43a:	mov    eax,0xf8870b3f
  41a43f:	mov    DWORD PTR [edx],eax
  41a441:	mov    edx,DWORD PTR [ebp-0x8]
  41a444:	cmp    edx,eax
  41a446:	jne    0x41a453
  41a448:	mov    eax,DWORD PTR [ebp+0x8]
  41a44b:	mov    BYTE PTR [ecx+0x8],0xf
  41a44f:	mov    BYTE PTR [eax+0x1],0x1
  41a453:	mov    BYTE PTR [ecx+0x5],0xf3
  41a457:	leave  
  41a458:	ret    0x4
  41a45b:	push   esi
  41a45c:	mov    ecx,edi
  41a45e:	call   0x41a42c
  41a463:	mov    edx,edi
  41a465:	mov    ecx,esi
  41a467:	mov    BYTE PTR [esi],0x1f
  41a46a:	call   0x41a3ff
  41a46f:	push   esi
  41a470:	mov    ecx,edi
  41a472:	mov    BYTE PTR [esi+0x5],0xf3
  41a476:	call   0x41a3d0
  41a47b:	push   esi
  41a47c:	mov    BYTE PTR [esi+0x6],0xf
  41a480:	call   0x41a39d
  41a485:	mov    BYTE PTR [esi+0x2],0x4
  41a489:	mov    edx,esi
  41a48b:	jmp    0x41a36d
  41a490:	push   ebp
  41a491:	mov    ebp,esp
  41a493:	push   ecx
  41a494:	mov    ecx,DWORD PTR [edx+0x194]
  41a49a:	push   esi
  41a49b:	mov    esi,DWORD PTR [ebp+0x8]
  41a49e:	mov    esi,DWORD PTR [esi]
  41a4a0:	mov    DWORD PTR [ecx],esi
  41a4a2:	mov    ecx,DWORD PTR [edx+0x194]
  41a4a8:	mov    ecx,DWORD PTR [ecx]
  41a4aa:	mov    esi,DWORD PTR [edx+0x190]
  41a4b0:	mov    DWORD PTR [esi],ecx
  41a4b2:	mov    eax,DWORD PTR [edx+0x194]
  41a4b8:	mov    ecx,DWORD PTR [eax]
  41a4ba:	mov    ecx,DWORD PTR [ecx+0x3c]
  41a4bd:	add    ecx,DWORD PTR [eax]
  41a4bf:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41a4c6:	mov    eax,DWORD PTR [ebp-0x4]
  41a4c9:	movzx  ecx,WORD PTR [ecx+0x16]
  41a4cd:	xor    eax,0x7510899
  41a4d2:	add    eax,0x3272e0
  41a4d7:	pop    esi
  41a4d8:	test   ecx,eax
  41a4da:	je     0x41a4e8
  41a4dc:	mov    eax,DWORD PTR [edx+0x1c8]
  41a4e2:	mov    DWORD PTR [eax],0xf89c85b8
  41a4e8:	leave  
  41a4e9:	ret    0x4
  41a4ec:	push   ebp
  41a4ed:	mov    ebp,esp
  41a4ef:	sub    esp,0x70
  41a4f2:	and    DWORD PTR [ebp-0x20],0x0
  41a4f6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41a4fd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41a504:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41a50b:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41a512:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41a519:	mov    eax,DWORD PTR [ebp+0x20]
  41a51c:	mov    eax,DWORD PTR [eax+0x194]
  41a522:	mov    DWORD PTR [ebp-0xc],eax
  41a525:	mov    eax,DWORD PTR [ebp+0x20]
  41a528:	push   ebx
  41a529:	push   esi
  41a52a:	mov    esi,DWORD PTR [eax+0x190]
  41a530:	mov    eax,DWORD PTR [ebp+0x20]
  41a533:	mov    eax,DWORD PTR [eax+0x18c]
  41a539:	mov    DWORD PTR [ebp-0x8],eax
  41a53c:	mov    eax,DWORD PTR [eax]
  41a53e:	push   edi
  41a53f:	mov    DWORD PTR [ebp-0x4],esi
  41a542:	test   eax,eax
  41a544:	jne    0x41a551
  41a546:	push   DWORD PTR [ebp+0x1c]
  41a549:	mov    edx,DWORD PTR [ebp+0x20]
  41a54c:	call   0x41a490
  41a551:	mov    eax,DWORD PTR [esi]
  41a553:	mov    ebx,DWORD PTR [esi]
  41a555:	add    ebx,DWORD PTR [eax+0x3c]
  41a558:	mov    eax,DWORD PTR [ebp+0xc]
  41a55b:	mov    ecx,DWORD PTR [ebp-0x8]
  41a55e:	mov    ecx,DWORD PTR [ecx]
  41a560:	mov    esi,0x7510899
  41a565:	xor    eax,esi
  41a567:	mov    edi,0x3272e0
  41a56c:	add    eax,edi
  41a56e:	cmp    eax,ecx
  41a570:	jne    0x41a7a8
  41a576:	mov    eax,DWORD PTR [ebp-0xc]
  41a579:	mov    eax,DWORD PTR [eax]
  41a57b:	mov    DWORD PTR [ebp-0x10],eax
  41a57e:	mov    eax,DWORD PTR [ebx+0x50]
  41a581:	mov    DWORD PTR [ebp-0x68],eax
  41a584:	mov    eax,DWORD PTR [ebp-0x18]
  41a587:	xor    eax,esi
  41a589:	add    eax,edi
  41a58b:	mov    DWORD PTR [ebp-0x64],eax
  41a58e:	mov    eax,DWORD PTR [ebp-0x14]
  41a591:	and    DWORD PTR [ebp-0x6c],0x0
  41a595:	xor    eax,esi
  41a597:	add    eax,edi
  41a599:	mov    DWORD PTR [ebp-0x60],eax
  41a59c:	lea    eax,[ebp-0x70]
  41a59f:	push   eax
  41a5a0:	mov    eax,DWORD PTR [ebp+0x8]
  41a5a3:	xor    eax,esi
  41a5a5:	add    eax,edi
  41a5a7:	push   eax
  41a5a8:	mov    eax,DWORD PTR [ebp+0x20]
  41a5ab:	add    eax,0xaa
  41a5b0:	push   eax
  41a5b1:	mov    eax,DWORD PTR [ebp+0x20]
  41a5b4:	mov    eax,DWORD PTR [eax+0x198]
  41a5ba:	mov    DWORD PTR [ebp-0x70],0x4
  41a5c1:	push   DWORD PTR [eax]
  41a5c3:	mov    eax,DWORD PTR [ebp+0x10]
  41a5c6:	call   eax
  41a5c8:	mov    ecx,DWORD PTR [ebp-0xc]
  41a5cb:	mov    ecx,DWORD PTR [ecx]
  41a5cd:	mov    edx,DWORD PTR [ebp-0x8]
  41a5d0:	mov    DWORD PTR [ebp-0x6c],eax
  41a5d3:	mov    DWORD PTR [ebp+0x1c],eax
  41a5d6:	mov    DWORD PTR [edx],ecx
  41a5d8:	mov    ecx,DWORD PTR [ebp-0x4]
  41a5db:	mov    DWORD PTR [ecx],eax
  41a5dd:	mov    eax,DWORD PTR [ebx+0x50]
  41a5e0:	mov    DWORD PTR [ebp-0x68],eax
  41a5e3:	mov    eax,DWORD PTR [ebp-0x1c]
  41a5e6:	xor    eax,esi
  41a5e8:	add    eax,edi
  41a5ea:	mov    DWORD PTR [ebp-0x64],eax
  41a5ed:	lea    eax,[ebp-0x20]
  41a5f0:	mov    DWORD PTR [ebp-0x60],eax
  41a5f3:	lea    eax,[ebp-0x70]
  41a5f6:	push   eax
  41a5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41a5fa:	xor    eax,esi
  41a5fc:	add    eax,edi
  41a5fe:	push   eax
  41a5ff:	mov    eax,DWORD PTR [ebp+0x20]
  41a602:	add    eax,0xee
  41a607:	push   eax
  41a608:	mov    eax,DWORD PTR [ebp+0x20]
  41a60b:	mov    eax,DWORD PTR [eax+0x198]
  41a611:	mov    DWORD PTR [ebp-0x70],0x4
  41a618:	push   DWORD PTR [eax]
  41a61a:	mov    eax,DWORD PTR [ebp+0x10]
  41a61d:	call   eax
  41a61f:	test   eax,eax
  41a621:	je     0x41a646
  41a623:	and    DWORD PTR [ebp+0xc],0x0
  41a627:	cmp    DWORD PTR [ebx+0x50],0x0
  41a62b:	jbe    0x41a646
  41a62d:	mov    eax,DWORD PTR [ebp+0x1c]
  41a630:	mov    ecx,DWORD PTR [ebp-0x10]
  41a633:	sub    ecx,eax
  41a635:	mov    dl,BYTE PTR [ecx+eax*1]
  41a638:	inc    DWORD PTR [ebp+0xc]
  41a63b:	mov    BYTE PTR [eax],dl
  41a63d:	mov    edx,DWORD PTR [ebp+0xc]
  41a640:	inc    eax
  41a641:	cmp    edx,DWORD PTR [ebx+0x50]
  41a644:	jb     0x41a635
  41a646:	mov    edx,DWORD PTR [ebp+0x1c]
  41a649:	mov    ecx,DWORD PTR [edx+0x3c]
  41a64c:	add    ecx,edx
  41a64e:	mov    eax,DWORD PTR [ecx+0xa0]
  41a654:	mov    ebx,DWORD PTR [ecx+0x28]
  41a657:	add    eax,edx
  41a659:	sub    edx,DWORD PTR [ebp-0x10]
  41a65c:	add    ebx,DWORD PTR [ebp+0x1c]
  41a65f:	mov    DWORD PTR [ebp+0xc],edx
  41a662:	mov    DWORD PTR [ebp-0x2c],ecx
  41a665:	mov    DWORD PTR [ebp-0x14],ebx
  41a668:	mov    DWORD PTR [ebp-0x8],0x0
  41a66f:	jmp    0x41a6eb
  41a671:	add    edx,0xfffffff8
  41a674:	shr    edx,1
  41a676:	mov    DWORD PTR [ebp-0x18],edx
  41a679:	je     0x41a6d7
  41a67b:	lea    edx,[eax+0x8]
  41a67e:	mov    DWORD PTR [ebp-0x4],edx
  41a681:	mov    edx,DWORD PTR [ebp-0x18]
  41a684:	mov    DWORD PTR [ebp-0x18],edx
  41a687:	mov    edx,DWORD PTR [ebp-0x4]
  41a68a:	movzx  edx,WORD PTR [edx]
  41a68d:	mov    DWORD PTR [ebp-0x24],edx
  41a690:	and    edx,0xfff
  41a696:	mov    DWORD PTR [ebp-0x28],edx
  41a699:	mov    edx,DWORD PTR [ebp-0x24]
  41a69c:	shr    edx,0xc
  41a69f:	add    edx,0xffcd8d20
  41a6a5:	xor    edx,esi
  41a6a7:	cmp    edx,0xf89c85ba
  41a6ad:	jne    0x41a6ce
  41a6af:	mov    edx,DWORD PTR [ebp-0x28]
  41a6b2:	add    edx,DWORD PTR [ebp+0x1c]
  41a6b5:	mov    ebx,DWORD PTR [eax]
  41a6b7:	cmp    DWORD PTR [ebx+edx*1],0x0
  41a6bb:	je     0x41a6cb
  41a6bd:	mov    ecx,DWORD PTR [ebp+0xc]
  41a6c0:	add    ecx,DWORD PTR [ebx+edx*1]
  41a6c3:	mov    ebx,DWORD PTR [eax]
  41a6c5:	mov    DWORD PTR [edx+ebx*1],ecx
  41a6c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41a6cb:	mov    ebx,DWORD PTR [ebp-0x14]
  41a6ce:	add    DWORD PTR [ebp-0x4],0x2
  41a6d2:	dec    DWORD PTR [ebp-0x18]
  41a6d5:	jne    0x41a687
  41a6d7:	mov    edx,DWORD PTR [ebp-0xc]
  41a6da:	add    DWORD PTR [ebp-0x8],edx
  41a6dd:	mov    edx,DWORD PTR [ebp-0x8]
  41a6e0:	cmp    edx,DWORD PTR [ecx+0xa4]
  41a6e6:	jae    0x41a6f9
  41a6e8:	add    eax,DWORD PTR [ebp-0xc]
  41a6eb:	mov    edx,DWORD PTR [eax+0x4]
  41a6ee:	mov    DWORD PTR [ebp-0xc],edx
  41a6f1:	test   edx,edx
  41a6f3:	jne    0x41a671
  41a6f9:	mov    eax,DWORD PTR [ebp-0x10]
  41a6fc:	mov    DWORD PTR [ebp-0x6c],eax
  41a6ff:	mov    DWORD PTR [ebp-0x70],0x4
  41a706:	mov    eax,DWORD PTR [ecx+0x50]
  41a709:	mov    DWORD PTR [ebp-0x68],eax
  41a70c:	mov    eax,DWORD PTR [ebp-0x1c]
  41a70f:	xor    eax,esi
  41a711:	add    eax,edi
  41a713:	mov    DWORD PTR [ebp-0x64],eax
  41a716:	lea    eax,[ebp-0x20]
  41a719:	mov    DWORD PTR [ebp-0x60],eax
  41a71c:	lea    eax,[ebp-0x70]
  41a71f:	push   eax
  41a720:	mov    eax,DWORD PTR [ebp+0x8]
  41a723:	xor    eax,esi
  41a725:	add    eax,edi
  41a727:	push   eax
  41a728:	mov    eax,DWORD PTR [ebp+0x20]
  41a72b:	add    eax,0xee
  41a730:	push   eax
  41a731:	mov    eax,DWORD PTR [ebp+0x20]
  41a734:	mov    eax,DWORD PTR [eax+0x198]
  41a73a:	push   DWORD PTR [eax]
  41a73c:	mov    eax,DWORD PTR [ebp+0x10]
  41a73f:	call   eax
  41a741:	mov    eax,DWORD PTR [ebp+0x20]
  41a744:	mov    eax,DWORD PTR [eax+0x180]
  41a74a:	add    eax,DWORD PTR [ebp+0xc]
  41a74d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a750:	push   DWORD PTR [ebp+0x18]
  41a753:	mov    DWORD PTR [eax],ecx
  41a755:	push   DWORD PTR [ebp+0x14]
  41a758:	push   DWORD PTR [ebp+0x1c]
  41a75b:	call   ebx
  41a75d:	mov    eax,DWORD PTR [ebp+0xc]
  41a760:	add    eax,DWORD PTR [ebp+0x20]
  41a763:	lea    ecx,[ebp+0x4]
  41a766:	mov    DWORD PTR [ebp+0x20],eax
  41a769:	mov    eax,DWORD PTR [ebp+0x20]
  41a76c:	mov    eax,DWORD PTR [ebp+0x20]
  41a76f:	mov    edx,DWORD PTR [eax+0x190]
  41a775:	mov    eax,DWORD PTR [ebp+0x20]
  41a778:	mov    eax,DWORD PTR [eax+0x18c]
  41a77e:	mov    esi,DWORD PTR [eax]
  41a780:	cmp    DWORD PTR [ecx],esi
  41a782:	jb     0x41a7a3
  41a784:	mov    esi,DWORD PTR [edx]
  41a786:	mov    edi,DWORD PTR [edx]
  41a788:	mov    esi,DWORD PTR [esi+0x3c]
  41a78b:	lea    esi,[edi+esi*1+0x50]
  41a78f:	mov    edi,DWORD PTR [eax]
  41a791:	add    edi,DWORD PTR [esi]
  41a793:	cmp    DWORD PTR [ecx],edi
  41a795:	jae    0x41a7a3
  41a797:	mov    esi,DWORD PTR [eax]
  41a799:	mov    eax,DWORD PTR [ecx]
  41a79b:	mov    edx,DWORD PTR [edx]
  41a79d:	sub    eax,esi
  41a79f:	add    edx,eax
  41a7a1:	mov    DWORD PTR [ecx],edx
  41a7a3:	mov    eax,DWORD PTR [ebp+0xc]
  41a7a6:	jmp    0x41a7e9
  41a7a8:	push   DWORD PTR [ebp+0x20]
  41a7ab:	call   0x419782
  41a7b0:	mov    eax,DWORD PTR [ebp+0x20]
  41a7b3:	mov    eax,DWORD PTR [eax+0x1c8]
  41a7b9:	mov    eax,DWORD PTR [eax]
  41a7bb:	xor    eax,esi
  41a7bd:	add    eax,edi
  41a7bf:	mov    eax,DWORD PTR [ebp+0x20]
  41a7c2:	jne    0x41a7da
  41a7c4:	mov    ecx,DWORD PTR [ebp+0x20]
  41a7c7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41a7cd:	push   DWORD PTR [ecx]
  41a7cf:	mov    eax,DWORD PTR [eax+0x1d8]
  41a7d5:	call   DWORD PTR [eax+0x28]
  41a7d8:	jmp    0x41a7e7
  41a7da:	mov    eax,DWORD PTR [eax+0x17c]
  41a7e0:	mov    ecx,DWORD PTR [eax]
  41a7e2:	lea    eax,[ebp+0x4]
  41a7e5:	add    DWORD PTR [eax],ecx
  41a7e7:	xor    eax,eax
  41a7e9:	pop    edi
  41a7ea:	pop    esi
  41a7eb:	pop    ebx
  41a7ec:	leave  
  41a7ed:	ret    0x1c
  41a7f0:	push   ebp
  41a7f1:	mov    ebp,esp
  41a7f3:	sub    esp,0x1c
  41a7f6:	push   esi
  41a7f7:	mov    esi,eax
  41a7f9:	mov    eax,DWORD PTR [ecx+0x190]
  41a7ff:	cmp    DWORD PTR [eax],0x0
  41a802:	je     0x41a912
  41a808:	test   edx,edx
  41a80a:	je     0x41a912
  41a810:	test   esi,esi
  41a812:	je     0x41a912
  41a818:	mov    eax,DWORD PTR [esi+0x88]
  41a81e:	test   eax,eax
  41a820:	je     0x41a90d
  41a826:	cmp    DWORD PTR [esi+0x8c],0x10
  41a82d:	je     0x41a90d
  41a833:	cmp    DWORD PTR [esi+0x34],edx
  41a836:	je     0x41a90d
  41a83c:	mov    esi,DWORD PTR [ecx+0x18c]
  41a842:	and    DWORD PTR [ebp-0x10],0x0
  41a846:	mov    ecx,edx
  41a848:	sub    ecx,DWORD PTR [esi]
  41a84a:	add    eax,edx
  41a84c:	movzx  edx,WORD PTR [eax+0xc]
  41a850:	mov    DWORD PTR [ebp-0x1c],ecx
  41a853:	movzx  ecx,WORD PTR [eax+0xe]
  41a857:	add    ecx,edx
  41a859:	je     0x41a90d
  41a85f:	lea    ecx,[eax+0x14]
  41a862:	push   ebx
  41a863:	mov    DWORD PTR [ebp-0x18],ecx
  41a866:	mov    esi,0x7fffffff
  41a86b:	push   edi
  41a86c:	test   DWORD PTR [ecx],esi
  41a86e:	je     0x41a8ef
  41a870:	mov    edx,DWORD PTR [ecx]
  41a872:	and    DWORD PTR [ebp-0xc],0x0
  41a876:	and    edx,esi
  41a878:	add    edx,eax
  41a87a:	movzx  edi,WORD PTR [edx+0xe]
  41a87e:	movzx  ebx,WORD PTR [edx+0xc]
  41a882:	add    edi,ebx
  41a884:	je     0x41a8ef
  41a886:	lea    ecx,[edx+0x14]
  41a889:	mov    DWORD PTR [ebp-0x14],ecx
  41a88c:	test   DWORD PTR [ecx],esi
  41a88e:	je     0x41a8d1
  41a890:	mov    ecx,DWORD PTR [ecx]
  41a892:	and    DWORD PTR [ebp-0x8],0x0
  41a896:	and    ecx,esi
  41a898:	add    ecx,eax
  41a89a:	movzx  edi,WORD PTR [ecx+0xe]
  41a89e:	movzx  ebx,WORD PTR [ecx+0xc]
  41a8a2:	add    edi,ebx
  41a8a4:	je     0x41a8d1
  41a8a6:	lea    edi,[ecx+0x14]
  41a8a9:	mov    DWORD PTR [ebp-0x4],edi
  41a8ac:	mov    edi,DWORD PTR [ebp-0x4]
  41a8af:	mov    edi,DWORD PTR [edi]
  41a8b1:	test   edi,edi
  41a8b3:	je     0x41a8bb
  41a8b5:	mov    ebx,DWORD PTR [ebp-0x1c]
  41a8b8:	add    DWORD PTR [edi+eax*1],ebx
  41a8bb:	movzx  edi,WORD PTR [ecx+0xe]
  41a8bf:	movzx  ebx,WORD PTR [ecx+0xc]
  41a8c3:	inc    DWORD PTR [ebp-0x8]
  41a8c6:	add    DWORD PTR [ebp-0x4],0x8
  41a8ca:	add    edi,ebx
  41a8cc:	cmp    DWORD PTR [ebp-0x8],edi
  41a8cf:	jb     0x41a8ac
  41a8d1:	movzx  edi,WORD PTR [edx+0xe]
  41a8d5:	movzx  ebx,WORD PTR [edx+0xc]
  41a8d9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8dc:	inc    DWORD PTR [ebp-0xc]
  41a8df:	add    ecx,0x8
  41a8e2:	add    edi,ebx
  41a8e4:	mov    DWORD PTR [ebp-0x14],ecx
  41a8e7:	cmp    DWORD PTR [ebp-0xc],edi
  41a8ea:	jb     0x41a88c
  41a8ec:	mov    ecx,DWORD PTR [ebp-0x18]
  41a8ef:	movzx  edx,WORD PTR [eax+0xe]
  41a8f3:	movzx  edi,WORD PTR [eax+0xc]
  41a8f7:	inc    DWORD PTR [ebp-0x10]
  41a8fa:	add    ecx,0x8
  41a8fd:	add    edx,edi
  41a8ff:	mov    DWORD PTR [ebp-0x18],ecx
  41a902:	cmp    DWORD PTR [ebp-0x10],edx
  41a905:	jb     0x41a86c
  41a90b:	pop    edi
  41a90c:	pop    ebx
  41a90d:	xor    eax,eax
  41a90f:	inc    eax
  41a910:	jmp    0x41a914
  41a912:	xor    eax,eax
  41a914:	pop    esi
  41a915:	leave  
  41a916:	ret    
  41a917:	push   ebp
  41a918:	mov    ebp,esp
  41a91a:	mov    ecx,DWORD PTR [ecx+0x190]
  41a920:	mov    eax,DWORD PTR [ebp+0xc]
  41a923:	sub    esp,0x10
  41a926:	push   ebx
  41a927:	xor    ebx,ebx
  41a929:	push   esi
  41a92a:	push   edi
  41a92b:	cmp    DWORD PTR [ecx],ebx
  41a92d:	je     0x41a9b5
  41a933:	cmp    eax,ebx
  41a935:	je     0x41a9b5
  41a937:	cmp    DWORD PTR [eax+0x78],ebx
  41a93a:	jne    0x41a941
  41a93c:	xor    eax,eax
  41a93e:	inc    eax
  41a93f:	jmp    0x41a9b7
  41a941:	mov    eax,DWORD PTR [eax+0x78]
  41a944:	add    eax,DWORD PTR [ebp+0x8]
  41a947:	mov    ecx,DWORD PTR [eax+0x1c]
  41a94a:	mov    edx,DWORD PTR [eax+0x24]
  41a94d:	mov    esi,DWORD PTR [eax+0x14]
  41a950:	mov    edi,DWORD PTR [eax+0x18]
  41a953:	add    ecx,DWORD PTR [ebp+0x8]
  41a956:	add    edx,DWORD PTR [ebp+0x8]
  41a959:	mov    DWORD PTR [ebp-0x4],esi
  41a95c:	cmp    esi,edi
  41a95e:	ja     0x41a963
  41a960:	mov    DWORD PTR [ebp-0x4],edi
  41a963:	mov    DWORD PTR [ebp-0x8],ebx
  41a966:	cmp    DWORD PTR [ebp-0x4],ebx
  41a969:	jbe    0x41a93c
  41a96b:	cmp    ebx,DWORD PTR [eax+0x14]
  41a96e:	jae    0x41a976
  41a970:	movzx  esi,WORD PTR [edx+ebx*2]
  41a974:	jmp    0x41a978
  41a976:	mov    esi,ebx
  41a978:	lea    esi,[ecx+esi*4]
  41a97b:	mov    edi,DWORD PTR [esi]
  41a97d:	test   edi,edi
  41a97f:	je     0x41a9aa
  41a981:	add    edi,DWORD PTR [ebp+0x8]
  41a984:	mov    DWORD PTR [ebp-0x10],edi
  41a987:	cmp    edi,eax
  41a989:	jbe    0x41a99b
  41a98b:	mov    ebx,DWORD PTR [ebp+0xc]
  41a98e:	mov    ebx,DWORD PTR [ebx+0x7c]
  41a991:	add    ebx,eax
  41a993:	cmp    edi,ebx
  41a995:	jae    0x41a99b
  41a997:	mov    esi,DWORD PTR [esi]
  41a999:	jmp    0x41a9a3
  41a99b:	sub    edi,DWORD PTR [ebp+0x8]
  41a99e:	mov    DWORD PTR [esi],edi
  41a9a0:	mov    esi,DWORD PTR [ebp-0x10]
  41a9a3:	test   esi,esi
  41a9a5:	je     0x41a9b5
  41a9a7:	mov    ebx,DWORD PTR [ebp-0x8]
  41a9aa:	inc    ebx
  41a9ab:	mov    DWORD PTR [ebp-0x8],ebx
  41a9ae:	cmp    ebx,DWORD PTR [ebp-0x4]
  41a9b1:	jb     0x41a96b
  41a9b3:	jmp    0x41a93c
  41a9b5:	xor    eax,eax
  41a9b7:	pop    edi
  41a9b8:	pop    esi
  41a9b9:	pop    ebx
  41a9ba:	leave  
  41a9bb:	ret    0x8
  41a9be:	push   ebp
  41a9bf:	mov    ebp,esp
  41a9c1:	sub    esp,0x2c
  41a9c4:	mov    edx,0xf89c85b9
  41a9c9:	mov    DWORD PTR [ebp-0x4],edx
  41a9cc:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41a9d3:	mov    eax,DWORD PTR [ebp-0x4]
  41a9d6:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9d9:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9dc:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9df:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9e2:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9e5:	push   ebx
  41a9e6:	mov    ebx,DWORD PTR [ebp+0x10]
  41a9e9:	push   esi
  41a9ea:	mov    esi,0x7510899
  41a9ef:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41a9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9f9:	mov    ebx,DWORD PTR [ebx+0x190]
  41a9ff:	push   edi
  41aa00:	mov    edi,0x3272e0
  41aa05:	xor    ecx,esi
  41aa07:	xor    eax,esi
  41aa09:	add    eax,edi
  41aa0b:	add    ecx,edi
  41aa0d:	mov    DWORD PTR [ebp-0x18],eax
  41aa10:	cmp    ecx,DWORD PTR [ebx]
  41aa12:	je     0x41ac93
  41aa18:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa1b:	mov    ecx,DWORD PTR [ebp+0xc]
  41aa1e:	xor    ebx,esi
  41aa20:	add    ebx,edi
  41aa22:	cmp    ebx,ecx
  41aa24:	je     0x41ac93
  41aa2a:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa2d:	mov    ecx,DWORD PTR [ecx+0x80]
  41aa33:	xor    ebx,esi
  41aa35:	add    ebx,edi
  41aa37:	cmp    ecx,ebx
  41aa39:	je     0x41ac8e
  41aa3f:	add    ecx,DWORD PTR [ebp+0x8]
  41aa42:	mov    DWORD PTR [ebp-0x2c],ecx
  41aa45:	mov    ebx,edx
  41aa47:	xor    ebx,esi
  41aa49:	add    ebx,edi
  41aa4b:	mov    DWORD PTR [ebp-0x10],ebx
  41aa4e:	mov    ebx,DWORD PTR [ebp-0x10]
  41aa51:	cmp    ebx,edx
  41aa53:	je     0x41aa67
  41aa55:	mov    edx,DWORD PTR [ebp-0x10]
  41aa58:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa5b:	imul   edx,edx,0x14
  41aa5e:	xor    ebx,esi
  41aa60:	add    ebx,edi
  41aa62:	cmp    DWORD PTR [edx+ecx*1],ebx
  41aa65:	jne    0x41aa7e
  41aa67:	mov    edx,DWORD PTR [ebp-0x10]
  41aa6a:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa6d:	imul   edx,edx,0x14
  41aa70:	xor    ebx,esi
  41aa72:	add    ebx,edi
  41aa74:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41aa78:	je     0x41ac80
  41aa7e:	mov    eax,DWORD PTR [ebp-0x4]
  41aa81:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa84:	mov    eax,DWORD PTR [ebp-0x10]
  41aa87:	imul   eax,eax,0x14
  41aa8a:	add    eax,ecx
  41aa8c:	mov    ecx,DWORD PTR [eax+0x10]
  41aa8f:	add    ecx,DWORD PTR [ebp+0x8]
  41aa92:	xor    ebx,esi
  41aa94:	mov    DWORD PTR [ebp-0x1c],ecx
  41aa97:	mov    ecx,DWORD PTR [ebp-0x4]
  41aa9a:	mov    edx,DWORD PTR [ebp-0x4]
  41aa9d:	xor    ecx,esi
  41aa9f:	add    ecx,edi
  41aaa1:	xor    edx,esi
  41aaa3:	mov    DWORD PTR [ebp-0x24],ecx
  41aaa6:	mov    ecx,DWORD PTR [eax]
  41aaa8:	add    edx,edi
  41aaaa:	add    ebx,edi
  41aaac:	cmp    ecx,edx
  41aaae:	je     0x41aab6
  41aab0:	add    ecx,DWORD PTR [ebp+0x8]
  41aab3:	mov    DWORD PTR [ebp-0x24],ecx
  41aab6:	mov    ecx,DWORD PTR [ebp-0x4]
  41aab9:	xor    ecx,esi
  41aabb:	add    ecx,DWORD PTR [eax+0xc]
  41aabe:	mov    eax,DWORD PTR [ebp+0x8]
  41aac1:	lea    eax,[ecx+eax*1+0x3272e0]
  41aac8:	mov    DWORD PTR [ebp+0xc],eax
  41aacb:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41aad2:	mov    eax,DWORD PTR [ebp+0x10]
  41aad5:	push   DWORD PTR [ebp+0xc]
  41aad8:	mov    eax,DWORD PTR [eax+0x1d8]
  41aade:	call   DWORD PTR [eax]
  41aae0:	mov    ecx,DWORD PTR [ebp-0x4]
  41aae3:	xor    ecx,esi
  41aae5:	add    ecx,edi
  41aae7:	mov    DWORD PTR [ebp-0xc],eax
  41aaea:	cmp    ecx,eax
  41aaec:	jne    0x41ab00
  41aaee:	mov    eax,DWORD PTR [ebp+0x10]
  41aaf1:	push   DWORD PTR [ebp+0xc]
  41aaf4:	mov    eax,DWORD PTR [eax+0x1d8]
  41aafa:	call   DWORD PTR [eax+0xc]
  41aafd:	mov    DWORD PTR [ebp-0xc],eax
  41ab00:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41ab07:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41ab0e:	mov    eax,DWORD PTR [ebp-0x4]
  41ab11:	xor    eax,esi
  41ab13:	add    eax,edi
  41ab15:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab18:	jne    0x41ab3d
  41ab1a:	mov    eax,DWORD PTR [ebp-0x8]
  41ab1d:	mov    ecx,DWORD PTR [ebp-0x20]
  41ab20:	xor    eax,esi
  41ab22:	xor    ecx,esi
  41ab24:	lea    ebx,[ebx+eax*1+0x3272e0]
  41ab2b:	mov    eax,DWORD PTR [ebp+0x10]
  41ab2e:	mov    eax,DWORD PTR [eax+0x1d8]
  41ab34:	add    ecx,edi
  41ab36:	imul   ecx,ebx
  41ab39:	push   ecx
  41ab3a:	call   DWORD PTR [eax+0x24]
  41ab3d:	mov    eax,DWORD PTR [ebp-0x4]
  41ab40:	xor    eax,esi
  41ab42:	add    eax,edi
  41ab44:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab47:	jne    0x41ab58
  41ab49:	mov    eax,DWORD PTR [ebp-0x28]
  41ab4c:	xor    eax,esi
  41ab4e:	add    eax,edi
  41ab50:	cmp    ebx,eax
  41ab52:	jbe    0x41aad2
  41ab58:	mov    eax,DWORD PTR [ebp-0x4]
  41ab5b:	xor    eax,esi
  41ab5d:	add    eax,edi
  41ab5f:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab62:	jne    0x41ab7b
  41ab64:	mov    eax,DWORD PTR [ebp-0x8]
  41ab67:	mov    ecx,DWORD PTR [ebp-0x18]
  41ab6a:	xor    eax,esi
  41ab6c:	lea    eax,[ecx+eax*1+0x3272e0]
  41ab73:	mov    DWORD PTR [ebp-0x18],eax
  41ab76:	jmp    0x41ac6a
  41ab7b:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41ab82:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41ab89:	mov    ebx,DWORD PTR [ebp-0x4]
  41ab8c:	xor    ebx,esi
  41ab8e:	add    ebx,edi
  41ab90:	jmp    0x41ac57
  41ab95:	mov    eax,DWORD PTR [ebp-0x4]
  41ab98:	xor    eax,esi
  41ab9a:	add    eax,edi
  41ab9c:	mov    DWORD PTR [ebp-0x14],eax
  41ab9f:	mov    eax,DWORD PTR [ebp-0x4]
  41aba2:	xor    eax,esi
  41aba4:	add    eax,edi
  41aba6:	mov    DWORD PTR [ebp+0xc],eax
  41aba9:	mov    ecx,DWORD PTR [ebp-0x4]
  41abac:	mov    eax,DWORD PTR [ebp-0x24]
  41abaf:	xor    ecx,esi
  41abb1:	add    ecx,edi
  41abb3:	cmp    ecx,eax
  41abb5:	je     0x41abbd
  41abb7:	mov    eax,DWORD PTR [eax+ebx*4]
  41abba:	mov    DWORD PTR [ebp-0x14],eax
  41abbd:	mov    eax,DWORD PTR [ebp-0x1c]
  41abc0:	mov    eax,DWORD PTR [eax+ebx*4]
  41abc3:	mov    DWORD PTR [ebp+0xc],eax
  41abc6:	mov    eax,DWORD PTR [ebp-0x4]
  41abc9:	mov    ecx,DWORD PTR [ebp-0x14]
  41abcc:	xor    eax,esi
  41abce:	add    eax,edi
  41abd0:	cmp    eax,ecx
  41abd2:	je     0x41abfd
  41abd4:	mov    eax,DWORD PTR [ebp-0x4]
  41abd7:	mov    ecx,DWORD PTR [ebp-0x14]
  41abda:	xor    eax,esi
  41abdc:	add    eax,edi
  41abde:	shr    ecx,0x1f
  41abe1:	cmp    eax,ecx
  41abe3:	je     0x41abfd
  41abe5:	mov    ecx,DWORD PTR [ebp-0x14]
  41abe8:	mov    eax,DWORD PTR [ebp+0x10]
  41abeb:	mov    eax,DWORD PTR [eax+0x1d8]
  41abf1:	movzx  ecx,cx
  41abf4:	push   ecx
  41abf5:	push   DWORD PTR [ebp-0xc]
  41abf8:	call   DWORD PTR [eax+0x8]
  41abfb:	jmp    0x41ac16
  41abfd:	mov    eax,DWORD PTR [ebp+0xc]
  41ac00:	add    eax,DWORD PTR [ebp+0x8]
  41ac03:	mov    ecx,DWORD PTR [ebp+0x10]
  41ac06:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ac0c:	add    eax,0x2
  41ac0f:	push   eax
  41ac10:	push   DWORD PTR [ebp-0xc]
  41ac13:	call   DWORD PTR [ecx+0x8]
  41ac16:	mov    DWORD PTR [ebp+0xc],eax
  41ac19:	mov    eax,DWORD PTR [ebp-0x4]
  41ac1c:	mov    ecx,DWORD PTR [ebp+0xc]
  41ac1f:	xor    eax,esi
  41ac21:	add    eax,edi
  41ac23:	cmp    eax,ecx
  41ac25:	mov    eax,DWORD PTR [ebp-0x8]
  41ac28:	jne    0x41ac3b
  41ac2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41ac2d:	xor    eax,esi
  41ac2f:	lea    eax,[ecx+eax*1+0x3272e0]
  41ac36:	mov    DWORD PTR [ebp-0x18],eax
  41ac39:	jmp    0x41ac4b
  41ac3b:	mov    ecx,DWORD PTR [ebp+0xc]
  41ac3e:	xor    eax,esi
  41ac40:	add    eax,edi
  41ac42:	imul   eax,ecx
  41ac45:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ac48:	mov    DWORD PTR [ecx+ebx*4],eax
  41ac4b:	mov    eax,DWORD PTR [ebp-0x8]
  41ac4e:	xor    eax,esi
  41ac50:	lea    ebx,[ebx+eax*1+0x3272e0]
  41ac57:	mov    eax,DWORD PTR [ebp-0x4]
  41ac5a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ac5d:	xor    eax,esi
  41ac5f:	add    eax,edi
  41ac61:	cmp    DWORD PTR [ecx+ebx*4],eax
  41ac64:	jne    0x41ab95
  41ac6a:	mov    edx,DWORD PTR [ebp-0x10]
  41ac6d:	mov    eax,DWORD PTR [ebp-0x18]
  41ac70:	mov    ecx,DWORD PTR [ebp-0x2c]
  41ac73:	sub    edx,0x3272df
  41ac79:	xor    edx,esi
  41ac7b:	jmp    0x41aa45
  41ac80:	mov    ecx,DWORD PTR [ebp-0x4]
  41ac83:	xor    ecx,esi
  41ac85:	add    ecx,edi
  41ac87:	cmp    eax,ecx
  41ac89:	mov    eax,DWORD PTR [ebp-0x4]
  41ac8c:	jne    0x41ac96
  41ac8e:	mov    eax,DWORD PTR [ebp-0x8]
  41ac91:	jmp    0x41ac96
  41ac93:	mov    eax,DWORD PTR [ebp-0x4]
  41ac96:	xor    eax,esi
  41ac98:	add    eax,edi
  41ac9a:	pop    edi
  41ac9b:	pop    esi
  41ac9c:	pop    ebx
  41ac9d:	leave  
  41ac9e:	ret    0xc
  41aca1:	push   ebp
  41aca2:	mov    ebp,esp
  41aca4:	sub    esp,0x28
  41aca7:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41acae:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41acb5:	mov    eax,DWORD PTR [ebp+0xc]
  41acb8:	mov    DWORD PTR [ebp+0xc],eax
  41acbb:	push   esi
  41acbc:	mov    eax,eax
  41acbe:	mov    eax,DWORD PTR [ebp-0x4]
  41acc1:	mov    esi,DWORD PTR [ebp+0x8]
  41acc4:	mov    ecx,0x7510899
  41acc9:	xor    eax,ecx
  41accb:	mov    edx,0x3272e0
  41acd0:	add    eax,edx
  41acd2:	cmp    esi,eax
  41acd4:	je     0x41adfb
  41acda:	mov    eax,DWORD PTR [ebp+0x8]
  41acdd:	mov    esi,DWORD PTR [ebp+0x8]
  41ace0:	add    esi,DWORD PTR [eax+0x3c]
  41ace3:	push   edi
  41ace4:	mov    DWORD PTR [ebp+0xc],esi
  41ace7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41acee:	mov    eax,DWORD PTR [ebp-0x1c]
  41acf1:	mov    esi,DWORD PTR [ebp-0x4]
  41acf4:	mov    edi,DWORD PTR [ebp+0xc]
  41acf7:	xor    esi,ecx
  41acf9:	xor    eax,ecx
  41acfb:	add    esi,edx
  41acfd:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41ad04:	je     0x41adf5
  41ad0a:	mov    esi,DWORD PTR [ebp+0xc]
  41ad0d:	mov    eax,DWORD PTR [ebp+0x8]
  41ad10:	add    eax,DWORD PTR [esi+0xa0]
  41ad16:	mov    esi,DWORD PTR [ebp+0x8]
  41ad19:	mov    edi,DWORD PTR [ebp+0xc]
  41ad1c:	sub    esi,DWORD PTR [edi+0x34]
  41ad1f:	mov    edi,DWORD PTR [ebp-0x4]
  41ad22:	xor    edi,ecx
  41ad24:	add    edi,edx
  41ad26:	mov    DWORD PTR [ebp-0x24],esi
  41ad29:	cmp    esi,edi
  41ad2b:	je     0x41adf5
  41ad31:	mov    esi,DWORD PTR [ebp-0x4]
  41ad34:	xor    esi,ecx
  41ad36:	add    esi,edx
  41ad38:	mov    DWORD PTR [ebp-0x8],esi
  41ad3b:	push   ebx
  41ad3c:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ad43:	jmp    0x41addf
  41ad48:	mov    esi,DWORD PTR [ebp-0x4]
  41ad4b:	xor    esi,ecx
  41ad4d:	lea    edi,[ebx-0x8]
  41ad50:	add    esi,edx
  41ad52:	shr    edi,1
  41ad54:	cmp    esi,edi
  41ad56:	jae    0x41adc5
  41ad58:	sub    edi,esi
  41ad5a:	lea    ebx,[eax+esi*2+0x8]
  41ad5e:	mov    DWORD PTR [ebp-0x18],edi
  41ad61:	movzx  esi,WORD PTR [ebx]
  41ad64:	and    esi,0xfff
  41ad6a:	mov    DWORD PTR [ebp-0x14],esi
  41ad6d:	mov    edi,DWORD PTR [ebp-0x14]
  41ad70:	mov    esi,DWORD PTR [eax]
  41ad72:	sub    esi,edx
  41ad74:	add    edi,esi
  41ad76:	movzx  esi,WORD PTR [ebx]
  41ad79:	shr    esi,0xc
  41ad7c:	xor    edi,ecx
  41ad7e:	mov    DWORD PTR [ebp-0x20],edi
  41ad81:	mov    DWORD PTR [ebp-0x14],esi
  41ad84:	mov    esi,DWORD PTR [ebp-0x20]
  41ad87:	mov    edi,DWORD PTR [ebp+0x8]
  41ad8a:	xor    esi,ecx
  41ad8c:	lea    esi,[esi+edi*1+0x3272e0]
  41ad93:	mov    DWORD PTR [ebp-0x20],esi
  41ad96:	mov    esi,DWORD PTR [ebp-0x10]
  41ad99:	mov    edi,DWORD PTR [ebp-0x14]
  41ad9c:	xor    esi,ecx
  41ad9e:	add    esi,edx
  41ada0:	cmp    edi,esi
  41ada2:	jne    0x41adba
  41ada4:	mov    esi,DWORD PTR [ebp-0x10]
  41ada7:	mov    edi,DWORD PTR [ebp-0x14]
  41adaa:	xor    esi,ecx
  41adac:	add    esi,edx
  41adae:	cmp    edi,esi
  41adb0:	jne    0x41adba
  41adb2:	mov    esi,DWORD PTR [ebp-0x20]
  41adb5:	mov    edi,DWORD PTR [ebp-0x24]
  41adb8:	add    DWORD PTR [esi],edi
  41adba:	add    ebx,0x2
  41adbd:	dec    DWORD PTR [ebp-0x18]
  41adc0:	jne    0x41ad61
  41adc2:	mov    ebx,DWORD PTR [ebp-0xc]
  41adc5:	add    DWORD PTR [ebp-0x8],ebx
  41adc8:	mov    esi,DWORD PTR [ebp-0x1c]
  41adcb:	mov    edi,DWORD PTR [ebp-0x8]
  41adce:	mov    ebx,DWORD PTR [ebp+0xc]
  41add1:	xor    esi,ecx
  41add3:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41adda:	jae    0x41adf4
  41addc:	add    eax,DWORD PTR [ebp-0xc]
  41addf:	mov    esi,DWORD PTR [ebp-0x4]
  41ade2:	mov    ebx,DWORD PTR [eax+0x4]
  41ade5:	xor    esi,ecx
  41ade7:	add    esi,edx
  41ade9:	mov    DWORD PTR [ebp-0xc],ebx
  41adec:	cmp    ebx,esi
  41adee:	jne    0x41ad48
  41adf4:	pop    ebx
  41adf5:	mov    eax,DWORD PTR [ebp-0x28]
  41adf8:	pop    edi
  41adf9:	jmp    0x41adfe
  41adfb:	mov    eax,DWORD PTR [ebp-0x4]
  41adfe:	xor    eax,ecx
  41ae00:	add    eax,edx
  41ae02:	pop    esi
  41ae03:	leave  
  41ae04:	ret    0x8
  41ae07:	push   ebp
  41ae08:	mov    ebp,esp
  41ae0a:	sub    esp,0xcc
  41ae10:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41ae17:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41ae1e:	mov    eax,DWORD PTR [ebp-0x4]
  41ae21:	push   ebx
  41ae22:	push   esi
  41ae23:	mov    esi,0x7510899
  41ae28:	xor    eax,esi
  41ae2a:	push   edi
  41ae2b:	mov    edi,0x3272e0
  41ae30:	add    eax,edi
  41ae32:	mov    DWORD PTR [ebp-0x1c],eax
  41ae35:	mov    eax,DWORD PTR [ebp-0x4]
  41ae38:	xor    eax,esi
  41ae3a:	add    eax,edi
  41ae3c:	mov    DWORD PTR [ebp-0x8],eax
  41ae3f:	mov    ebx,DWORD PTR [ebp+0x20]
  41ae42:	mov    eax,DWORD PTR [ebp-0x14]
  41ae45:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae48:	xor    eax,ecx
  41ae4a:	mov    DWORD PTR [ebp-0x14],eax
  41ae4d:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41ae54:	mov    eax,DWORD PTR [ebp-0xc]
  41ae57:	mov    ecx,DWORD PTR [ebp-0xc]
  41ae5a:	xor    eax,ecx
  41ae5c:	mov    DWORD PTR [ebp-0xc],eax
  41ae5f:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41ae66:	mov    eax,DWORD PTR [ebp-0x10]
  41ae69:	mov    ecx,DWORD PTR [ebp-0x10]
  41ae6c:	xor    eax,ecx
  41ae6e:	mov    DWORD PTR [ebp-0x10],eax
  41ae71:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41ae78:	mov    eax,DWORD PTR [ebp-0x20]
  41ae7b:	mov    ecx,DWORD PTR [ebp-0x20]
  41ae7e:	xor    eax,ecx
  41ae80:	mov    DWORD PTR [ebp-0x20],eax
  41ae83:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41ae8a:	mov    eax,0x9471
  41ae8f:	mov    WORD PTR [ebp+0x20],ax
  41ae93:	mov    eax,DWORD PTR [ebp+0x8]
  41ae96:	test   eax,eax
  41ae98:	je     0x41b2f5
  41ae9e:	mov    eax,DWORD PTR [ebp+0xc]
  41aea1:	test   eax,eax
  41aea3:	je     0x41b2f5
  41aea9:	mov    eax,DWORD PTR [ebp+0x18]
  41aeac:	test   eax,eax
  41aeae:	je     0x41b2f5
  41aeb4:	mov    ax,WORD PTR [ebp+0x20]
  41aeb8:	mov    ecx,0x8a8c
  41aebd:	xor    ax,cx
  41aec0:	mov    ecx,0x3b50
  41aec5:	add    ax,cx
  41aec8:	mov    ecx,DWORD PTR [ebp+0x8]
  41aecb:	cmp    WORD PTR [ecx],ax
  41aece:	jne    0x41b2f5
  41aed4:	mov    eax,DWORD PTR [ebp-0x4]
  41aed7:	xor    eax,esi
  41aed9:	add    eax,edi
  41aedb:	mov    DWORD PTR [ebp-0x30],eax
  41aede:	mov    eax,DWORD PTR [ebp-0x4]
  41aee1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aee4:	mov    eax,DWORD PTR [ebp+0x8]
  41aee7:	add    eax,DWORD PTR [ecx+0x3c]
  41aeea:	mov    DWORD PTR [ebp+0xc],eax
  41aeed:	mov    eax,DWORD PTR [eax+0x50]
  41aef0:	test   eax,eax
  41aef2:	je     0x41b2f5
  41aef8:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41aeff:	mov    eax,DWORD PTR [ebp-0x2c]
  41af02:	xor    eax,esi
  41af04:	add    eax,edi
  41af06:	mov    DWORD PTR [ebp-0x2c],eax
  41af09:	mov    eax,DWORD PTR [ebp-0x4]
  41af0c:	mov    eax,DWORD PTR [ebx+0x190]
  41af12:	mov    ecx,DWORD PTR [eax]
  41af14:	mov    ecx,DWORD PTR [ecx+0x3c]
  41af17:	add    ecx,DWORD PTR [eax]
  41af19:	mov    eax,DWORD PTR [ebp-0x4]
  41af1c:	mov    eax,DWORD PTR [ebx+0x18c]
  41af22:	mov    edx,DWORD PTR [eax]
  41af24:	mov    DWORD PTR [ebp-0x18],ecx
  41af27:	mov    DWORD PTR [ebp+0x20],edx
  41af2a:	cmp    edx,edx
  41af2c:	jne    0x41af61
  41af2e:	mov    eax,DWORD PTR [ebx+0x1d8]
  41af34:	lea    edx,[ebp-0x1c]
  41af37:	push   edx
  41af38:	mov    edx,DWORD PTR [ebp-0xc]
  41af3b:	xor    edx,esi
  41af3d:	add    edx,edi
  41af3f:	push   edx
  41af40:	push   DWORD PTR [ecx+0x50]
  41af43:	push   DWORD PTR [ebp+0x20]
  41af46:	call   DWORD PTR [eax+0x1c]
  41af49:	mov    ecx,DWORD PTR [ebp-0x18]
  41af4c:	mov    eax,DWORD PTR [ecx+0x54]
  41af4f:	mov    ecx,DWORD PTR [ecx+0x50]
  41af52:	sub    ecx,eax
  41af54:	add    eax,DWORD PTR [ebp+0x20]
  41af57:	push   ecx
  41af58:	push   eax
  41af59:	call   0x41b909
  41af5e:	mov    edx,DWORD PTR [ebp+0x20]
  41af61:	mov    eax,DWORD PTR [ebx+0x194]
  41af67:	mov    DWORD PTR [eax],edx
  41af69:	mov    eax,DWORD PTR [ebp+0xc]
  41af6c:	push   DWORD PTR [eax+0x54]
  41af6f:	push   DWORD PTR [ebp+0x8]
  41af72:	push   edx
  41af73:	call   0x41b7b0
  41af78:	mov    ecx,DWORD PTR [ebp+0x20]
  41af7b:	mov    eax,DWORD PTR [ecx+0x3c]
  41af7e:	add    eax,ecx
  41af80:	movzx  ecx,WORD PTR [eax+0x14]
  41af84:	lea    ecx,[ecx+eax*1+0x18]
  41af88:	mov    DWORD PTR [ebp+0x18],ecx
  41af8b:	mov    ecx,DWORD PTR [ebp-0x4]
  41af8e:	movzx  edx,WORD PTR [eax+0x6]
  41af92:	xor    ecx,esi
  41af94:	add    ecx,edi
  41af96:	mov    DWORD PTR [ebp+0xc],eax
  41af99:	cmp    edx,ecx
  41af9b:	je     0x41b049
  41afa1:	mov    ecx,DWORD PTR [ebp-0x4]
  41afa4:	xor    ecx,esi
  41afa6:	add    ecx,edi
  41afa8:	mov    DWORD PTR [ebp-0x8],ecx
  41afab:	mov    ecx,DWORD PTR [ebp-0x24]
  41afae:	movzx  edx,WORD PTR [eax+0x6]
  41afb2:	xor    ecx,esi
  41afb4:	sub    edx,ecx
  41afb6:	sub    edx,edi
  41afb8:	cmp    DWORD PTR [ebp-0x8],edx
  41afbb:	ja     0x41b049
  41afc1:	mov    edx,DWORD PTR [ebp+0x18]
  41afc4:	add    edx,0x8
  41afc7:	mov    DWORD PTR [ebp+0x18],edx
  41afca:	jmp    0x41afcf
  41afcc:	mov    edx,DWORD PTR [ebp+0x18]
  41afcf:	mov    eax,DWORD PTR [eax+0x38]
  41afd2:	lea    ecx,[eax-0x1]
  41afd5:	mov    DWORD PTR [ebp-0x34],eax
  41afd8:	mov    eax,DWORD PTR [edx]
  41afda:	test   ecx,eax
  41afdc:	je     0x41afe5
  41afde:	not    ecx
  41afe0:	and    eax,ecx
  41afe2:	add    eax,DWORD PTR [ebp-0x34]
  41afe5:	push   eax
  41afe6:	mov    eax,DWORD PTR [edx+0x4]
  41afe9:	add    eax,DWORD PTR [ebp+0x20]
  41afec:	push   eax
  41afed:	call   0x41b909
  41aff2:	mov    edx,DWORD PTR [ebp-0x4]
  41aff5:	mov    eax,DWORD PTR [ebp+0x18]
  41aff8:	mov    ecx,DWORD PTR [eax+0x8]
  41affb:	xor    edx,esi
  41affd:	add    edx,edi
  41afff:	cmp    ecx,edx
  41b001:	je     0x41b01a
  41b003:	push   ecx
  41b004:	mov    ecx,DWORD PTR [ebp+0x8]
  41b007:	add    ecx,DWORD PTR [eax+0xc]
  41b00a:	mov    eax,DWORD PTR [eax+0x4]
  41b00d:	add    eax,DWORD PTR [ebp+0x20]
  41b010:	push   ecx
  41b011:	push   eax
  41b012:	call   0x41b7b0
  41b017:	mov    eax,DWORD PTR [ebp+0x18]
  41b01a:	mov    ecx,DWORD PTR [ebp-0x24]
  41b01d:	mov    edx,DWORD PTR [ebp-0x8]
  41b020:	add    eax,0x28
  41b023:	xor    ecx,esi
  41b025:	lea    ecx,[edx+ecx*1+0x3272e0]
  41b02c:	mov    edx,DWORD PTR [ebp+0xc]
  41b02f:	mov    DWORD PTR [ebp+0x18],eax
  41b032:	mov    eax,DWORD PTR [ebp-0x24]
  41b035:	movzx  edx,WORD PTR [edx+0x6]
  41b039:	xor    eax,esi
  41b03b:	sub    edx,eax
  41b03d:	mov    eax,DWORD PTR [ebp+0xc]
  41b040:	sub    edx,edi
  41b042:	mov    DWORD PTR [ebp-0x8],ecx
  41b045:	cmp    ecx,edx
  41b047:	jbe    0x41afcc
  41b049:	mov    edx,DWORD PTR [ebx+0x18c]
  41b04f:	mov    ecx,DWORD PTR [ebp+0x20]
  41b052:	cmp    ecx,DWORD PTR [edx]
  41b054:	jne    0x41b07d
  41b056:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b05c:	lea    edx,[ebp-0x1c]
  41b05f:	push   edx
  41b060:	mov    edx,DWORD PTR [ebp-0x10]
  41b063:	xor    edx,esi
  41b065:	add    edx,edi
  41b067:	push   edx
  41b068:	mov    edx,DWORD PTR [ebp-0x18]
  41b06b:	push   DWORD PTR [edx+0x54]
  41b06e:	push   ecx
  41b06f:	call   DWORD PTR [eax+0x1c]
  41b072:	test   eax,eax
  41b074:	je     0x41b2e6
  41b07a:	mov    eax,DWORD PTR [ebp+0xc]
  41b07d:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41b083:	mov    ecx,DWORD PTR [ecx]
  41b085:	xor    ecx,esi
  41b087:	add    ecx,edi
  41b089:	je     0x41b211
  41b08f:	and    DWORD PTR [ebp-0x28],0x0
  41b093:	and    DWORD PTR [ebp+0x8],0x0
  41b097:	mov    eax,0xf89c851d
  41b09c:	lea    ecx,[eax-0x8]
  41b09f:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41b0a6:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41b0ad:	mov    DWORD PTR [ebp-0x44],eax
  41b0b0:	mov    DWORD PTR [ebp-0x40],ecx
  41b0b3:	mov    DWORD PTR [ebp-0x3c],ecx
  41b0b6:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b0bd:	mov    edx,DWORD PTR [ebp+0x8]
  41b0c0:	mov    ecx,0x899
  41b0c5:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41b0ca:	mov    edx,0x72e0
  41b0cf:	add    cx,dx
  41b0d2:	mov    edx,DWORD PTR [ebp+0x8]
  41b0d5:	inc    DWORD PTR [ebp+0x8]
  41b0d8:	cmp    DWORD PTR [ebp+0x8],0x6
  41b0dc:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41b0e4:	jb     0x41b0bd
  41b0e6:	mov    ecx,0xf89c850b
  41b0eb:	mov    DWORD PTR [ebp-0xa4],eax
  41b0f1:	mov    DWORD PTR [ebp-0x90],eax
  41b0f7:	mov    DWORD PTR [ebp-0x68],eax
  41b0fa:	mov    DWORD PTR [ebp-0x64],eax
  41b0fd:	lea    eax,[ecx-0x1]
  41b100:	mov    edx,0xf89c85ff
  41b105:	mov    DWORD PTR [ebp-0x58],eax
  41b108:	mov    DWORD PTR [ebp-0x54],eax
  41b10b:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41b115:	mov    DWORD PTR [ebp-0xa0],ecx
  41b11b:	mov    DWORD PTR [ebp-0x9c],edx
  41b121:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41b12b:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41b135:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41b13f:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41b149:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41b153:	mov    DWORD PTR [ebp-0x80],ecx
  41b156:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41b15d:	mov    DWORD PTR [ebp-0x78],edx
  41b160:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41b167:	mov    DWORD PTR [ebp-0x70],ecx
  41b16a:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41b171:	mov    DWORD PTR [ebp-0x60],ecx
  41b174:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41b17b:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41b182:	xor    eax,eax
  41b184:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41b18b:	xor    cl,0x99
  41b18e:	sub    cl,0x20
  41b191:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41b198:	inc    eax
  41b199:	cmp    eax,0x17
  41b19c:	jb     0x41b184
  41b19e:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b1a4:	lea    ecx,[ebp-0xb4]
  41b1aa:	push   ecx
  41b1ab:	call   DWORD PTR [eax+0x4]
  41b1ae:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41b1b4:	lea    edx,[ebp-0xcc]
  41b1ba:	push   edx
  41b1bb:	push   eax
  41b1bc:	call   DWORD PTR [ecx+0x8]
  41b1bf:	lea    ecx,[ebp-0x28]
  41b1c2:	push   ecx
  41b1c3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1c9:	push   DWORD PTR [ecx]
  41b1cb:	call   eax
  41b1cd:	mov    eax,DWORD PTR [ebp-0x28]
  41b1d0:	test   eax,eax
  41b1d2:	je     0x41b20e
  41b1d4:	mov    DWORD PTR [ebp+0x8],eax
  41b1d7:	jmp    0x41b1e3
  41b1d9:	mov    eax,DWORD PTR [eax]
  41b1db:	mov    DWORD PTR [ebp-0x28],eax
  41b1de:	cmp    eax,DWORD PTR [ebp+0x8]
  41b1e1:	je     0x41b1f0
  41b1e3:	mov    edx,DWORD PTR [eax+0x18]
  41b1e6:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1ec:	cmp    edx,DWORD PTR [ecx]
  41b1ee:	jne    0x41b1d9
  41b1f0:	mov    edx,DWORD PTR [eax+0x18]
  41b1f3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1f9:	cmp    edx,DWORD PTR [ecx]
  41b1fb:	jne    0x41b20e
  41b1fd:	mov    edx,DWORD PTR [ebp-0x18]
  41b200:	mov    ecx,DWORD PTR [ebx+0x190]
  41b206:	mov    edx,DWORD PTR [edx+0x28]
  41b209:	add    edx,DWORD PTR [ecx]
  41b20b:	mov    DWORD PTR [eax+0x1c],edx
  41b20e:	mov    eax,DWORD PTR [ebp+0xc]
  41b211:	push   ebx
  41b212:	push   eax
  41b213:	push   DWORD PTR [ebp+0x20]
  41b216:	call   0x41a9be
  41b21b:	test   eax,eax
  41b21d:	je     0x41b2e6
  41b223:	push   DWORD PTR [ebp+0xc]
  41b226:	mov    ecx,ebx
  41b228:	push   DWORD PTR [ebp+0x20]
  41b22b:	call   0x41a917
  41b230:	test   eax,eax
  41b232:	je     0x41b2e6
  41b238:	mov    eax,DWORD PTR [ebp+0xc]
  41b23b:	mov    edx,DWORD PTR [ebp+0x20]
  41b23e:	mov    ecx,ebx
  41b240:	call   0x41a7f0
  41b245:	test   eax,eax
  41b247:	je     0x41b2e6
  41b24d:	push   ebx
  41b24e:	push   DWORD PTR [ebp+0x20]
  41b251:	call   0x41aca1
  41b256:	test   eax,eax
  41b258:	je     0x41b2e6
  41b25e:	mov    eax,DWORD PTR [ebx+0x18c]
  41b264:	mov    edx,DWORD PTR [ebp+0x20]
  41b267:	cmp    edx,DWORD PTR [eax]
  41b269:	jne    0x41b285
  41b26b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b271:	lea    ecx,[ebp-0x1c]
  41b274:	push   ecx
  41b275:	push   DWORD PTR [ebp-0x1c]
  41b278:	mov    ecx,DWORD PTR [ebp-0x18]
  41b27b:	push   DWORD PTR [ecx+0x54]
  41b27e:	push   edx
  41b27f:	call   DWORD PTR [eax+0x1c]
  41b282:	mov    edx,DWORD PTR [ebp+0x20]
  41b285:	mov    eax,DWORD PTR [ebx+0x1c8]
  41b28b:	mov    eax,DWORD PTR [eax]
  41b28d:	xor    eax,esi
  41b28f:	add    eax,edi
  41b291:	je     0x41b2ca
  41b293:	mov    ecx,DWORD PTR [ebp+0xc]
  41b296:	mov    eax,DWORD PTR [ecx+0x28]
  41b299:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41b2a0:	mov    esi,DWORD PTR [ebp+0x8]
  41b2a3:	push   DWORD PTR [ebp+0x14]
  41b2a6:	xor    esi,0x899
  41b2ac:	push   DWORD PTR [ebp+0x10]
  41b2af:	add    esi,0x72e0
  41b2b5:	or     WORD PTR [ecx+0x16],si
  41b2b9:	add    eax,edx
  41b2bb:	push   edx
  41b2bc:	call   eax
  41b2be:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41b2c8:	jmp    0x41b2d4
  41b2ca:	mov    eax,DWORD PTR [ebp+0xc]
  41b2cd:	mov    eax,DWORD PTR [eax+0x28]
  41b2d0:	add    eax,edx
  41b2d2:	call   eax
  41b2d4:	mov    DWORD PTR [ebp-0x8],eax
  41b2d7:	mov    eax,DWORD PTR [ebp-0x8]
  41b2da:	mov    ecx,DWORD PTR [ebp+0x1c]
  41b2dd:	mov    DWORD PTR [ecx],eax
  41b2df:	mov    DWORD PTR [ebp-0x30],0x1
  41b2e6:	cmp    DWORD PTR [ebp-0x30],0x0
  41b2ea:	jne    0x41b2f0
  41b2ec:	and    DWORD PTR [ebp+0x20],0x0
  41b2f0:	mov    eax,DWORD PTR [ebp+0x20]
  41b2f3:	jmp    0x41b2f7
  41b2f5:	xor    eax,eax
  41b2f7:	pop    edi
  41b2f8:	pop    esi
  41b2f9:	pop    ebx
  41b2fa:	leave  
  41b2fb:	ret    0x1c
  41b2fe:	push   ebp
  41b2ff:	mov    ebp,esp
  41b301:	movzx  edx,WORD PTR [ecx+0x6]
  41b305:	movzx  eax,WORD PTR [ecx+0x14]
  41b309:	push   ebx
  41b30a:	push   edi
  41b30b:	xor    edi,edi
  41b30d:	lea    eax,[eax+ecx*1+0x18]
  41b311:	test   edx,edx
  41b313:	je     0x41b334
  41b315:	mov    ecx,DWORD PTR [eax+0xc]
  41b318:	lea    ebx,[ecx+esi*1]
  41b31b:	cmp    DWORD PTR [ebp+0x8],ebx
  41b31e:	jb     0x41b32c
  41b320:	mov    ebx,DWORD PTR [eax+0x8]
  41b323:	add    ebx,ecx
  41b325:	add    ebx,esi
  41b327:	cmp    DWORD PTR [ebp+0x8],ebx
  41b32a:	jb     0x41b336
  41b32c:	add    eax,0x28
  41b32f:	inc    edi
  41b330:	cmp    edi,edx
  41b332:	jb     0x41b315
  41b334:	xor    eax,eax
  41b336:	pop    edi
  41b337:	pop    ebx
  41b338:	pop    ebp
  41b339:	ret    0x4
  41b33c:	push   ebp
  41b33d:	mov    ebp,esp
  41b33f:	sub    esp,0x28
  41b342:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41b349:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41b350:	mov    DWORD PTR [ebp-0x28],0xf89c85bb
  41b357:	mov    eax,0x4f9d
  41b35c:	mov    WORD PTR [ebp-0xc],ax
  41b360:	mov    eax,0x4e7d
  41b365:	mov    WORD PTR [ebp-0x4],ax
  41b369:	mov    eax,0x4fa6
  41b36e:	mov    WORD PTR [ebp-0x8],ax
  41b372:	add    eax,0xffffffe0
  41b375:	mov    WORD PTR [ebp-0x8],ax
  41b379:	mov    eax,DWORD PTR [ebp+0x8]
  41b37c:	mov    DWORD PTR [ebp-0x14],eax
  41b37f:	mov    eax,DWORD PTR [ebp+0xc]
  41b382:	mov    DWORD PTR [ebp-0x18],eax
  41b385:	mov    eax,DWORD PTR [ebp-0x10]
  41b388:	push   ebx
  41b389:	mov    ecx,0x7510899
  41b38e:	xor    eax,ecx
  41b390:	push   esi
  41b391:	mov    esi,DWORD PTR [ebp-0x14]
  41b394:	mov    edx,0x3272e0
  41b399:	add    eax,edx
  41b39b:	push   edi
  41b39c:	cmp    esi,eax
  41b39e:	je     0x41b59c
  41b3a4:	mov    eax,DWORD PTR [ebp-0x10]
  41b3a7:	mov    esi,DWORD PTR [ebp-0x18]
  41b3aa:	xor    eax,ecx
  41b3ac:	add    eax,edx
  41b3ae:	cmp    esi,eax
  41b3b0:	je     0x41b59c
  41b3b6:	mov    eax,DWORD PTR [ebp-0x10]
  41b3b9:	xor    eax,ecx
  41b3bb:	add    eax,edx
  41b3bd:	mov    DWORD PTR [ebp-0x20],eax
  41b3c0:	mov    eax,DWORD PTR [ebp-0x10]
  41b3c3:	xor    eax,ecx
  41b3c5:	add    eax,edx
  41b3c7:	mov    DWORD PTR [ebp-0x24],eax
  41b3ca:	movzx  esi,WORD PTR [ebp-0x4]
  41b3ce:	movzx  edi,WORD PTR [ebp-0xc]
  41b3d2:	mov    eax,0x8a8c
  41b3d7:	xor    si,ax
  41b3da:	mov    ebx,0x8a8c
  41b3df:	xor    di,bx
  41b3e2:	mov    eax,0x3b50
  41b3e7:	add    si,ax
  41b3ea:	add    di,ax
  41b3ed:	sub    edi,esi
  41b3ef:	mov    WORD PTR [ebp-0xc],di
  41b3f3:	mov    esi,DWORD PTR [ebp-0x20]
  41b3f6:	mov    edi,DWORD PTR [ebp-0x14]
  41b3f9:	mov    si,WORD PTR [edi+esi*2]
  41b3fd:	mov    WORD PTR [ebp+0x8],si
  41b401:	mov    esi,DWORD PTR [ebp-0x24]
  41b404:	mov    edi,DWORD PTR [ebp-0x18]
  41b407:	mov    si,WORD PTR [edi+esi*2]
  41b40b:	mov    WORD PTR [ebp+0xc],si
  41b40f:	mov    esi,0x72e0
  41b414:	jmp    0x41b521
  41b419:	mov    edi,DWORD PTR [ebp-0x10]
  41b41c:	mov    bx,WORD PTR [ebp+0xc]
  41b420:	xor    edi,0x899
  41b426:	add    edi,esi
  41b428:	cmp    bx,di
  41b42b:	je     0x41b54b
  41b431:	mov    edi,DWORD PTR [ebp-0x10]
  41b434:	mov    ebx,DWORD PTR [ebp+0x10]
  41b437:	xor    edi,ecx
  41b439:	add    edi,edx
  41b43b:	cmp    ebx,edi
  41b43d:	mov    di,WORD PTR [ebp+0xc]
  41b441:	mov    bx,WORD PTR [ebp+0x8]
  41b445:	je     0x41b4d8
  41b44b:	cmp    bx,di
  41b44e:	je     0x41b4e1
  41b454:	mov    di,WORD PTR [ebp-0x4]
  41b458:	mov    ebx,0x8a8c
  41b45d:	xor    di,bx
  41b460:	mov    bx,WORD PTR [ebp+0x8]
  41b464:	add    di,ax
  41b467:	cmp    bx,di
  41b46a:	jb     0x41b492
  41b46c:	mov    di,WORD PTR [ebp-0x8]
  41b470:	mov    ebx,0x8a8c
  41b475:	xor    di,bx
  41b478:	mov    bx,WORD PTR [ebp+0x8]
  41b47c:	add    di,ax
  41b47f:	cmp    bx,di
  41b482:	ja     0x41b492
  41b484:	movzx  edi,WORD PTR [ebp+0x8]
  41b488:	movzx  ebx,WORD PTR [ebp-0xc]
  41b48c:	add    edi,ebx
  41b48e:	mov    WORD PTR [ebp+0x8],di
  41b492:	mov    di,WORD PTR [ebp-0x4]
  41b496:	mov    ebx,0x8a8c
  41b49b:	xor    di,bx
  41b49e:	mov    bx,WORD PTR [ebp+0xc]
  41b4a2:	add    di,ax
  41b4a5:	cmp    bx,di
  41b4a8:	jb     0x41b4d0
  41b4aa:	mov    di,WORD PTR [ebp-0x8]
  41b4ae:	mov    ebx,0x8a8c
  41b4b3:	xor    di,bx
  41b4b6:	mov    bx,WORD PTR [ebp+0xc]
  41b4ba:	add    di,ax
  41b4bd:	cmp    bx,di
  41b4c0:	ja     0x41b4d0
  41b4c2:	movzx  edi,WORD PTR [ebp+0xc]
  41b4c6:	movzx  ebx,WORD PTR [ebp-0xc]
  41b4ca:	add    edi,ebx
  41b4cc:	mov    WORD PTR [ebp+0xc],di
  41b4d0:	mov    di,WORD PTR [ebp+0xc]
  41b4d4:	mov    bx,WORD PTR [ebp+0x8]
  41b4d8:	cmp    bx,di
  41b4db:	jne    0x41b59c
  41b4e1:	mov    edi,DWORD PTR [ebp-0x28]
  41b4e4:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4e7:	xor    edi,ecx
  41b4e9:	lea    edi,[edi+ebx*1+0x3272e0]
  41b4f0:	mov    DWORD PTR [ebp-0x14],edi
  41b4f3:	mov    edi,DWORD PTR [ebp-0x28]
  41b4f6:	mov    ebx,DWORD PTR [ebp-0x18]
  41b4f9:	xor    edi,ecx
  41b4fb:	lea    edi,[edi+ebx*1+0x3272e0]
  41b502:	mov    DWORD PTR [ebp-0x18],edi
  41b505:	mov    edi,DWORD PTR [ebp-0x20]
  41b508:	mov    ebx,DWORD PTR [ebp-0x14]
  41b50b:	mov    di,WORD PTR [ebx+edi*2]
  41b50f:	mov    WORD PTR [ebp+0x8],di
  41b513:	mov    edi,DWORD PTR [ebp-0x24]
  41b516:	mov    ebx,DWORD PTR [ebp-0x18]
  41b519:	mov    di,WORD PTR [ebx+edi*2]
  41b51d:	mov    WORD PTR [ebp+0xc],di
  41b521:	mov    edi,DWORD PTR [ebp-0x10]
  41b524:	mov    bx,WORD PTR [ebp+0x8]
  41b528:	xor    edi,0x899
  41b52e:	add    edi,esi
  41b530:	cmp    bx,di
  41b533:	jne    0x41b419
  41b539:	mov    esi,DWORD PTR [ebp-0x1c]
  41b53c:	xor    esi,ecx
  41b53e:	mov    ecx,DWORD PTR [ebp-0x10]
  41b541:	add    esi,edx
  41b543:	imul   esi,ecx
  41b546:	mov    DWORD PTR [ebp-0x10],esi
  41b549:	jmp    0x41b55d
  41b54b:	mov    edx,DWORD PTR [ebp-0x10]
  41b54e:	xor    edx,ecx
  41b550:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b553:	lea    ecx,[edx+ecx*1+0x3272e0]
  41b55a:	mov    DWORD PTR [ebp-0x1c],ecx
  41b55d:	mov    edx,DWORD PTR [ebp-0x20]
  41b560:	mov    esi,DWORD PTR [ebp-0x14]
  41b563:	mov    si,WORD PTR [esi+edx*2]
  41b567:	mov    ecx,eax
  41b569:	sub    si,cx
  41b56c:	mov    edx,0x8a8c
  41b571:	xor    si,dx
  41b574:	mov    ecx,0x4e3c
  41b579:	cmp    si,cx
  41b57c:	jne    0x41b597
  41b57e:	mov    esi,DWORD PTR [ebp-0x24]
  41b581:	mov    edi,DWORD PTR [ebp-0x18]
  41b584:	mov    si,WORD PTR [edi+esi*2]
  41b588:	sub    si,ax
  41b58b:	xor    si,dx
  41b58e:	cmp    si,cx
  41b591:	jne    0x41b597
  41b593:	xor    eax,eax
  41b595:	jmp    0x41b5a3
  41b597:	xor    eax,eax
  41b599:	inc    eax
  41b59a:	jmp    0x41b5a3
  41b59c:	mov    eax,DWORD PTR [ebp-0x1c]
  41b59f:	xor    eax,ecx
  41b5a1:	add    eax,edx
  41b5a3:	pop    edi
  41b5a4:	pop    esi
  41b5a5:	pop    ebx
  41b5a6:	leave  
  41b5a7:	ret    0xc
  41b5aa:	push   ebp
  41b5ab:	mov    ebp,esp
  41b5ad:	push   ecx
  41b5ae:	mov    cx,WORD PTR [eax]
  41b5b1:	push   esi
  41b5b2:	mov    esi,0x3b50
  41b5b7:	sub    cx,si
  41b5ba:	mov    esi,0x8a8c
  41b5bf:	xor    cx,si
  41b5c2:	mov    esi,0x4e3c
  41b5c7:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b5ce:	mov    edx,0xf89c85b9
  41b5d3:	cmp    cx,si
  41b5d6:	je     0x41b635
  41b5d8:	push   ebx
  41b5d9:	push   edi
  41b5da:	movzx  ecx,cx
  41b5dd:	mov    edi,0xffcd8d20
  41b5e2:	mov    esi,0x7510899
  41b5e7:	mov    ebx,0x4f80
  41b5ec:	cmp    cx,bx
  41b5ef:	jne    0x41b5f4
  41b5f1:	mov    DWORD PTR [ebp-0x4],edx
  41b5f4:	lea    edx,[edi+0x1]
  41b5f7:	xor    edx,esi
  41b5f9:	mov    edi,edx
  41b5fb:	xor    edi,esi
  41b5fd:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41b605:	mov    ebx,0x3b50
  41b60a:	sub    cx,bx
  41b60d:	mov    ebx,0x8a8c
  41b612:	xor    cx,bx
  41b615:	mov    ebx,0x4e3c
  41b61a:	cmp    cx,bx
  41b61d:	jne    0x41b5e7
  41b61f:	mov    ecx,DWORD PTR [ebp-0x4]
  41b622:	pop    edi
  41b623:	pop    ebx
  41b624:	cmp    ecx,0xf89c8586
  41b62a:	je     0x41b635
  41b62c:	xor    ecx,esi
  41b62e:	lea    eax,[eax+ecx*2+0x64e5c2]
  41b635:	pop    esi
  41b636:	leave  
  41b637:	ret    
  41b638:	push   ebp
  41b639:	mov    ebp,esp
  41b63b:	push   ecx
  41b63c:	push   esi
  41b63d:	push   edi
  41b63e:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b645:	mov    esi,0xf89c85b9
  41b64a:	call   0x41b5aa
  41b64f:	mov    edi,eax
  41b651:	mov    al,BYTE PTR [edi]
  41b653:	add    al,0x9
  41b655:	xor    al,0x73
  41b657:	cmp    al,0x7a
  41b659:	je     0x41b6bc
  41b65b:	mov    eax,edi
  41b65d:	mov    edx,0xffcd8d20
  41b662:	mov    ecx,0x7510899
  41b667:	push   ebx
  41b668:	mov    ax,WORD PTR [eax]
  41b66b:	mov    ebx,0x3b50
  41b670:	sub    ax,bx
  41b673:	mov    ebx,0x8a8c
  41b678:	xor    ax,bx
  41b67b:	mov    ebx,0x4e52
  41b680:	cmp    ax,bx
  41b683:	jne    0x41b688
  41b685:	mov    DWORD PTR [ebp-0x4],esi
  41b688:	lea    esi,[edx+0x1]
  41b68b:	xor    esi,ecx
  41b68d:	mov    edx,esi
  41b68f:	xor    edx,ecx
  41b691:	lea    eax,[edi+edx*2+0x64e5c0]
  41b698:	mov    bl,BYTE PTR [eax]
  41b69a:	add    bl,0x9
  41b69d:	xor    bl,0x73
  41b6a0:	cmp    bl,0x7a
  41b6a3:	jne    0x41b668
  41b6a5:	mov    eax,DWORD PTR [ebp-0x4]
  41b6a8:	pop    ebx
  41b6a9:	cmp    eax,0xf89c8586
  41b6ae:	je     0x41b6bc
  41b6b0:	xor    eax,ecx
  41b6b2:	xor    ecx,ecx
  41b6b4:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41b6bc:	mov    eax,edi
  41b6be:	pop    edi
  41b6bf:	pop    esi
  41b6c0:	leave  
  41b6c1:	ret    
  41b6c2:	push   ebp
  41b6c3:	mov    ebp,esp
  41b6c5:	push   ecx
  41b6c6:	push   esi
  41b6c7:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b6ce:	mov    esi,0xf89c85b9
  41b6d3:	call   0x41b5aa
  41b6d8:	mov    cx,WORD PTR [eax]
  41b6db:	mov    edx,0x3b50
  41b6e0:	sub    cx,dx
  41b6e3:	mov    edx,0x8a8c
  41b6e8:	xor    cx,dx
  41b6eb:	mov    edx,0x4e3c
  41b6f0:	cmp    cx,dx
  41b6f3:	je     0x41b74c
  41b6f5:	push   ebx
  41b6f6:	push   edi
  41b6f7:	movzx  ecx,cx
  41b6fa:	mov    edx,0xffcd8d20
  41b6ff:	mov    edi,0x7510899
  41b704:	mov    ebx,0x4e52
  41b709:	cmp    cx,bx
  41b70c:	jne    0x41b711
  41b70e:	mov    DWORD PTR [ebp-0x4],esi
  41b711:	lea    esi,[edx+0x1]
  41b714:	xor    esi,edi
  41b716:	mov    edx,esi
  41b718:	xor    edx,edi
  41b71a:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41b722:	mov    ebx,0x3b50
  41b727:	sub    cx,bx
  41b72a:	mov    ebx,0x8a8c
  41b72f:	xor    cx,bx
  41b732:	mov    ebx,0x4e3c
  41b737:	cmp    cx,bx
  41b73a:	jne    0x41b704
  41b73c:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41b743:	pop    edi
  41b744:	pop    ebx
  41b745:	je     0x41b74c
  41b747:	xor    eax,eax
  41b749:	inc    eax
  41b74a:	jmp    0x41b74e
  41b74c:	xor    eax,eax
  41b74e:	pop    esi
  41b74f:	leave  
  41b750:	ret    
  41b751:	push   ebp
  41b752:	mov    ebp,esp
  41b754:	push   ecx
  41b755:	mov    eax,DWORD PTR [ebp+0x8]
  41b758:	movzx  ecx,WORD PTR [eax]
  41b75b:	push   esi
  41b75c:	lea    eax,[ecx-0x3b50]
  41b762:	mov    esi,0x8a8c
  41b767:	push   edi
  41b768:	xor    eax,esi
  41b76a:	mov    edi,0x4e3c
  41b76f:	mov    DWORD PTR [ebp-0x4],edx
  41b772:	cmp    ax,di
  41b775:	je     0x41b7a2
  41b777:	mov    eax,DWORD PTR [ebp+0x8]
  41b77a:	sub    eax,edx
  41b77c:	mov    DWORD PTR [ebp+0x8],eax
  41b77f:	jmp    0x41b784
  41b781:	mov    eax,DWORD PTR [ebp+0x8]
  41b784:	mov    WORD PTR [edx],cx
  41b787:	add    edx,0x2
  41b78a:	movzx  edi,WORD PTR [eax+edx*1]
  41b78e:	mov    ecx,edi
  41b790:	add    edi,0xffffc4b0
  41b796:	xor    edi,esi
  41b798:	mov    eax,0x4e3c
  41b79d:	cmp    di,ax
  41b7a0:	jne    0x41b781
  41b7a2:	xor    eax,eax
  41b7a4:	pop    edi
  41b7a5:	mov    WORD PTR [edx],ax
  41b7a8:	mov    eax,DWORD PTR [ebp-0x4]
  41b7ab:	pop    esi
  41b7ac:	leave  
  41b7ad:	ret    0x4
  41b7b0:	push   ebp
  41b7b1:	mov    ebp,esp
  41b7b3:	sub    esp,0x18
  41b7b6:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b7bd:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b7c4:	mov    eax,DWORD PTR [ebp-0x14]
  41b7c7:	xor    eax,0x7510899
  41b7cc:	add    eax,0x3272e0
  41b7d1:	mov    DWORD PTR [ebp-0x8],eax
  41b7d4:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41b7db:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41b7e2:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41b7e9:	mov    eax,DWORD PTR [ebp-0x14]
  41b7ec:	xor    eax,0x7510899
  41b7f1:	mov    ecx,DWORD PTR [ebp-0x8]
  41b7f4:	lea    eax,[ecx+eax*1+0x3272e0]
  41b7fb:	mov    ecx,DWORD PTR [ebp-0x18]
  41b7fe:	xor    ecx,0x7510899
  41b804:	add    ecx,0x3272e0
  41b80a:	mov    edx,DWORD PTR [ebp+0x10]
  41b80d:	imul   edx,ecx
  41b810:	cmp    eax,edx
  41b812:	jae    0x41b905
  41b818:	mov    eax,DWORD PTR [ebp+0x10]
  41b81b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b81e:	sub    eax,ecx
  41b820:	mov    ecx,DWORD PTR [ebp-0x10]
  41b823:	xor    ecx,0x7510899
  41b829:	add    ecx,0x3272e0
  41b82f:	cmp    eax,ecx
  41b831:	jbe    0x41b863
  41b833:	mov    eax,DWORD PTR [ebp+0x8]
  41b836:	add    eax,DWORD PTR [ebp-0x8]
  41b839:	mov    ecx,DWORD PTR [ebp+0xc]
  41b83c:	add    ecx,DWORD PTR [ebp-0x8]
  41b83f:	mov    edx,DWORD PTR [ecx]
  41b841:	mov    DWORD PTR [eax],edx
  41b843:	mov    ecx,DWORD PTR [ecx+0x4]
  41b846:	mov    DWORD PTR [eax+0x4],ecx
  41b849:	mov    eax,DWORD PTR [ebp-0x10]
  41b84c:	xor    eax,0x7510899
  41b851:	mov    ecx,DWORD PTR [ebp-0x8]
  41b854:	lea    eax,[ecx+eax*1+0x3272e0]
  41b85b:	mov    DWORD PTR [ebp-0x8],eax
  41b85e:	jmp    0x41b900
  41b863:	mov    eax,DWORD PTR [ebp+0x10]
  41b866:	mov    ecx,DWORD PTR [ebp-0x8]
  41b869:	sub    eax,ecx
  41b86b:	mov    ecx,DWORD PTR [ebp-0xc]
  41b86e:	xor    ecx,0x7510899
  41b874:	add    ecx,0x3272e0
  41b87a:	cmp    eax,ecx
  41b87c:	jbe    0x41b8a5
  41b87e:	mov    eax,DWORD PTR [ebp+0x8]
  41b881:	add    eax,DWORD PTR [ebp-0x8]
  41b884:	mov    ecx,DWORD PTR [ebp+0xc]
  41b887:	add    ecx,DWORD PTR [ebp-0x8]
  41b88a:	mov    ecx,DWORD PTR [ecx]
  41b88c:	mov    DWORD PTR [eax],ecx
  41b88e:	mov    eax,DWORD PTR [ebp-0xc]
  41b891:	xor    eax,0x7510899
  41b896:	mov    ecx,DWORD PTR [ebp-0x8]
  41b899:	lea    eax,[ecx+eax*1+0x3272e0]
  41b8a0:	mov    DWORD PTR [ebp-0x8],eax
  41b8a3:	jmp    0x41b900
  41b8a5:	mov    eax,DWORD PTR [ebp+0x10]
  41b8a8:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8ab:	sub    eax,ecx
  41b8ad:	mov    ecx,DWORD PTR [ebp-0x4]
  41b8b0:	xor    ecx,0x7510899
  41b8b6:	add    ecx,0x3272e0
  41b8bc:	cmp    eax,ecx
  41b8be:	jbe    0x41b8e9
  41b8c0:	mov    eax,DWORD PTR [ebp+0x8]
  41b8c3:	add    eax,DWORD PTR [ebp-0x8]
  41b8c6:	mov    ecx,DWORD PTR [ebp+0xc]
  41b8c9:	add    ecx,DWORD PTR [ebp-0x8]
  41b8cc:	mov    cx,WORD PTR [ecx]
  41b8cf:	mov    WORD PTR [eax],cx
  41b8d2:	mov    eax,DWORD PTR [ebp-0x4]
  41b8d5:	xor    eax,0x7510899
  41b8da:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8dd:	lea    eax,[ecx+eax*1+0x3272e0]
  41b8e4:	mov    DWORD PTR [ebp-0x8],eax
  41b8e7:	jmp    0x41b900
  41b8e9:	mov    eax,DWORD PTR [ebp+0x8]
  41b8ec:	add    eax,DWORD PTR [ebp-0x8]
  41b8ef:	mov    ecx,DWORD PTR [ebp+0xc]
  41b8f2:	add    ecx,DWORD PTR [ebp-0x8]
  41b8f5:	mov    cl,BYTE PTR [ecx]
  41b8f7:	mov    BYTE PTR [eax],cl
  41b8f9:	mov    eax,DWORD PTR [ebp-0x8]
  41b8fc:	inc    eax
  41b8fd:	mov    DWORD PTR [ebp-0x8],eax
  41b900:	jmp    0x41b7e9
  41b905:	leave  
  41b906:	ret    0xc
  41b909:	push   ebp
  41b90a:	mov    ebp,esp
  41b90c:	push   ecx
  41b90d:	push   ecx
  41b90e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41b915:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41b91c:	xor    eax,eax
  41b91e:	inc    eax
  41b91f:	je     0x41b961
  41b921:	mov    eax,DWORD PTR [ebp-0x4]
  41b924:	xor    eax,0x7510899
  41b929:	add    eax,0x3272e0
  41b92e:	cmp    DWORD PTR [ebp+0xc],eax
  41b931:	jne    0x41b935
  41b933:	jmp    0x41b961
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	xor    eax,0x7510899
  41b93d:	add    eax,0x3272e0
  41b942:	mov    ecx,DWORD PTR [ebp+0xc]
  41b945:	sub    ecx,eax
  41b947:	mov    DWORD PTR [ebp+0xc],ecx
  41b94a:	mov    eax,DWORD PTR [ebp-0x4]
  41b94d:	xor    eax,0x7510899
  41b952:	add    eax,0x3272e0
  41b957:	mov    ecx,DWORD PTR [ebp+0x8]
  41b95a:	add    ecx,DWORD PTR [ebp+0xc]
  41b95d:	mov    BYTE PTR [ecx],al
  41b95f:	jmp    0x41b91c
  41b961:	leave  
  41b962:	ret    0x8
  41b965:	push   ebp
  41b966:	mov    ebp,esp
  41b968:	sub    esp,0x21c
  41b96e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41b975:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41b97c:	mov    eax,DWORD PTR [ebp+0x10]
  41b97f:	mov    eax,DWORD PTR [ebp-0x4]
  41b982:	mov    ecx,DWORD PTR [ebp+0x8]
  41b985:	push   esi
  41b986:	push   edi
  41b987:	mov    edi,0x7510899
  41b98c:	xor    eax,edi
  41b98e:	mov    esi,0x3272e0
  41b993:	add    eax,esi
  41b995:	cmp    eax,ecx
  41b997:	mov    eax,DWORD PTR [ebp-0x4]
  41b99a:	jne    0x41b9a5
  41b99c:	xor    eax,edi
  41b99e:	add    eax,esi
  41b9a0:	jmp    0x41ba51
  41b9a5:	mov    ecx,DWORD PTR [ebp+0xc]
  41b9a8:	xor    eax,edi
  41b9aa:	add    eax,esi
  41b9ac:	cmp    eax,ecx
  41b9ae:	jne    0x41b9b5
  41b9b0:	mov    eax,DWORD PTR [ebp-0x4]
  41b9b3:	jmp    0x41b99c
  41b9b5:	lea    eax,[ebp-0x21c]
  41b9bb:	mov    DWORD PTR [ebp-0x8],eax
  41b9be:	mov    eax,DWORD PTR [ebp+0xc]
  41b9c1:	mov    DWORD PTR [ebp-0x10],eax
  41b9c4:	mov    eax,DWORD PTR [ebp-0x4]
  41b9c7:	xor    eax,edi
  41b9c9:	add    eax,esi
  41b9cb:	mov    DWORD PTR [ebp+0x10],eax
  41b9ce:	mov    eax,DWORD PTR [ebp+0xc]
  41b9d1:	push   ebx
  41b9d2:	call   0x41b6c2
  41b9d7:	mov    ebx,eax
  41b9d9:	mov    eax,DWORD PTR [ebp+0x8]
  41b9dc:	mov    eax,DWORD PTR [eax+0x14]
  41b9df:	jmp    0x41ba39
  41b9e1:	mov    eax,DWORD PTR [ebp+0xc]
  41b9e4:	sub    eax,0x8
  41b9e7:	mov    DWORD PTR [ebp-0xc],eax
  41b9ea:	mov    eax,DWORD PTR [ebp-0xc]
  41b9ed:	mov    eax,DWORD PTR [eax+0x28]
  41b9f0:	call   0x41b5aa
  41b9f5:	mov    DWORD PTR [ebp+0x10],eax
  41b9f8:	push   DWORD PTR [ebp+0x10]
  41b9fb:	mov    edx,DWORD PTR [ebp-0x8]
  41b9fe:	call   0x41b751
  41ba03:	mov    eax,DWORD PTR [ebp-0x4]
  41ba06:	xor    eax,edi
  41ba08:	add    eax,esi
  41ba0a:	cmp    eax,ebx
  41ba0c:	jne    0x41ba16
  41ba0e:	mov    eax,DWORD PTR [ebp-0x8]
  41ba11:	call   0x41b638
  41ba16:	mov    eax,DWORD PTR [ebp-0x14]
  41ba19:	xor    eax,edi
  41ba1b:	add    eax,esi
  41ba1d:	push   eax
  41ba1e:	push   DWORD PTR [ebp-0x10]
  41ba21:	push   DWORD PTR [ebp-0x8]
  41ba24:	call   0x41b33c
  41ba29:	mov    ecx,DWORD PTR [ebp-0x4]
  41ba2c:	xor    ecx,edi
  41ba2e:	add    ecx,esi
  41ba30:	cmp    eax,ecx
  41ba32:	je     0x41ba57
  41ba34:	mov    eax,DWORD PTR [ebp+0xc]
  41ba37:	mov    eax,DWORD PTR [eax]
  41ba39:	mov    DWORD PTR [ebp+0xc],eax
  41ba3c:	mov    eax,DWORD PTR [ebp+0x8]
  41ba3f:	mov    ecx,DWORD PTR [ebp+0xc]
  41ba42:	add    eax,0x14
  41ba45:	cmp    ecx,eax
  41ba47:	jne    0x41b9e1
  41ba49:	mov    eax,DWORD PTR [ebp-0x4]
  41ba4c:	xor    eax,edi
  41ba4e:	add    eax,esi
  41ba50:	pop    ebx
  41ba51:	pop    edi
  41ba52:	pop    esi
  41ba53:	leave  
  41ba54:	ret    0xc
  41ba57:	mov    eax,DWORD PTR [ebp-0xc]
  41ba5a:	mov    eax,DWORD PTR [eax+0x18]
  41ba5d:	jmp    0x41ba50
  41ba5f:	push   ebp
  41ba60:	mov    ebp,esp
  41ba62:	mov    eax,DWORD PTR [ebp+0xc]
  41ba65:	sub    esp,0x10
  41ba68:	cmp    DWORD PTR [ebp+0x8],0x0
  41ba6c:	push   ebx
  41ba6d:	push   esi
  41ba6e:	push   edi
  41ba6f:	je     0x41bb24
  41ba75:	test   eax,eax
  41ba77:	je     0x41bb24
  41ba7d:	movzx  eax,WORD PTR [eax+0x20]
  41ba81:	mov    ecx,eax
  41ba83:	mov    DWORD PTR [ebp-0x10],eax
  41ba86:	xor    edx,edx
  41ba88:	and    DWORD PTR [ebp-0x8],edx
  41ba8b:	mov    eax,0x8a8c
  41ba90:	xor    ecx,eax
  41ba92:	add    ecx,0x3b50
  41ba98:	mov    DWORD PTR [ebp-0xc],ecx
  41ba9b:	and    DWORD PTR [ebp-0x4],0x0
  41ba9f:	xor    ecx,ecx
  41baa1:	push   0x78
  41baa3:	pop    edi
  41baa4:	cmp    cx,WORD PTR [ebp-0xc]
  41baa8:	jae    0x41bb0e
  41baaa:	lea    esi,[edx-0x3b50]
  41bab0:	xor    esi,eax
  41bab2:	movzx  ecx,WORD PTR [ebp-0x4]
  41bab6:	mov    ebx,DWORD PTR [ebp+0xc]
  41bab9:	lea    ecx,[ebx+ecx*4]
  41babc:	cmp    WORD PTR [ecx+0x2],si
  41bac0:	jne    0x41baf9
  41bac2:	movzx  ecx,WORD PTR [ecx]
  41bac5:	mov    edi,0x4e3c
  41baca:	cmp    cx,di
  41bacd:	jne    0x41badb
  41bacf:	mov    ebx,DWORD PTR [ebp+0x8]
  41bad2:	movzx  edi,dx
  41bad5:	cmp    BYTE PTR [edi+ebx*1],0x0
  41bad9:	je     0x41bb08
  41badb:	mov    ebx,DWORD PTR [ebp+0x8]
  41bade:	movzx  edi,dx
  41bae1:	movsx  di,BYTE PTR [edi+ebx*1]
  41bae6:	mov    ebx,0x3b50
  41baeb:	sub    di,bx
  41baee:	xor    di,ax
  41baf1:	cmp    cx,di
  41baf4:	je     0x41bb08
  41baf6:	push   0x7a
  41baf8:	pop    edi
  41baf9:	inc    DWORD PTR [ebp-0x4]
  41bafc:	mov    cx,WORD PTR [ebp-0xc]
  41bb00:	cmp    WORD PTR [ebp-0x4],cx
  41bb04:	jb     0x41bab2
  41bb06:	jmp    0x41bb0e
  41bb08:	inc    DWORD PTR [ebp-0x8]
  41bb0b:	push   0x79
  41bb0d:	pop    edi
  41bb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41bb11:	movzx  ecx,dx
  41bb14:	cmp    BYTE PTR [ecx+esi*1],0x0
  41bb18:	je     0x41bb2d
  41bb1a:	inc    edx
  41bb1b:	cmp    edi,0x7a
  41bb1e:	jne    0x41ba9b
  41bb24:	xor    eax,eax
  41bb26:	pop    edi
  41bb27:	pop    esi
  41bb28:	pop    ebx
  41bb29:	leave  
  41bb2a:	ret    0x8
  41bb2d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bb30:	add    ecx,0xffffc4b0
  41bb36:	xor    cx,ax
  41bb39:	xor    eax,eax
  41bb3b:	cmp    cx,WORD PTR [ebp-0x10]
  41bb3f:	sete   al
  41bb42:	jmp    0x41bb26
  41bb44:	push   ebp
  41bb45:	mov    ebp,esp
  41bb47:	sub    esp,0x50
  41bb4a:	push   edi
  41bb4b:	mov    edi,eax
  41bb4d:	mov    eax,DWORD PTR [edi+0x1a8]
  41bb53:	cmp    DWORD PTR [eax],0x0
  41bb56:	jne    0x41bb5f
  41bb58:	xor    eax,eax
  41bb5a:	jmp    0x41bc8f
  41bb5f:	push   0x2c
  41bb61:	push   DWORD PTR [ebp+0x8]
  41bb64:	call   0x41b909
  41bb69:	mov    edx,DWORD PTR [edi+0x1ac]
  41bb6f:	lea    eax,[edi+0x22]
  41bb72:	mov    DWORD PTR [ebp-0x4c],eax
  41bb75:	lea    eax,[edi+0x44]
  41bb78:	mov    DWORD PTR [ebp-0x48],eax
  41bb7b:	lea    eax,[edi+0x66]
  41bb7e:	mov    DWORD PTR [ebp-0x44],eax
  41bb81:	lea    eax,[edi+0x88]
  41bb87:	mov    DWORD PTR [ebp-0x40],eax
  41bb8a:	lea    eax,[edi+0xaa]
  41bb90:	mov    DWORD PTR [ebp-0x3c],eax
  41bb93:	lea    eax,[edi+0xcc]
  41bb99:	mov    DWORD PTR [ebp-0x38],eax
  41bb9c:	lea    eax,[edi+0xee]
  41bba2:	mov    DWORD PTR [ebp-0x34],eax
  41bba5:	lea    eax,[edi+0x110]
  41bbab:	mov    DWORD PTR [ebp-0x30],eax
  41bbae:	lea    eax,[edi+0x132]
  41bbb4:	mov    DWORD PTR [ebp-0x2c],eax
  41bbb7:	lea    eax,[edi+0x154]
  41bbbd:	push   edi
  41bbbe:	mov    DWORD PTR [ebp-0x50],edi
  41bbc1:	mov    DWORD PTR [ebp-0x28],eax
  41bbc4:	call   0x41bcc3
  41bbc9:	push   eax
  41bbca:	mov    eax,DWORD PTR [edi+0x1a8]
  41bbd0:	push   DWORD PTR [eax]
  41bbd2:	call   0x41b965
  41bbd7:	mov    DWORD PTR [ebp-0x10],eax
  41bbda:	test   eax,eax
  41bbdc:	je     0x41bc8f
  41bbe2:	mov    ecx,DWORD PTR [eax+0x3c]
  41bbe5:	push   ebx
  41bbe6:	push   esi
  41bbe7:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41bbeb:	add    esi,eax
  41bbed:	mov    edi,DWORD PTR [esi+0x24]
  41bbf0:	mov    ecx,DWORD PTR [esi+0x1c]
  41bbf3:	mov    edx,DWORD PTR [esi+0x20]
  41bbf6:	mov    ebx,DWORD PTR [esi+0x18]
  41bbf9:	add    edi,eax
  41bbfb:	mov    DWORD PTR [ebp-0x20],edi
  41bbfe:	mov    edi,DWORD PTR [esi+0x14]
  41bc01:	add    ecx,eax
  41bc03:	add    edx,eax
  41bc05:	mov    DWORD PTR [ebp-0xc],ecx
  41bc08:	mov    DWORD PTR [ebp-0x1c],edx
  41bc0b:	mov    DWORD PTR [ebp-0x8],edi
  41bc0e:	cmp    edi,ebx
  41bc10:	ja     0x41bc15
  41bc12:	mov    DWORD PTR [ebp-0x8],ebx
  41bc15:	xor    ebx,ebx
  41bc17:	mov    DWORD PTR [ebp-0x18],ebx
  41bc1a:	cmp    DWORD PTR [ebp-0x8],ebx
  41bc1d:	jbe    0x41bc8d
  41bc1f:	jmp    0x41bc24
  41bc21:	mov    edx,DWORD PTR [ebp-0x1c]
  41bc24:	mov    edi,DWORD PTR [ebp-0x20]
  41bc27:	movzx  edi,WORD PTR [edi+ebx*2]
  41bc2b:	cmp    ebx,DWORD PTR [esi+0x18]
  41bc2e:	jae    0x41bc8d
  41bc30:	cmp    edi,DWORD PTR [esi+0x14]
  41bc33:	jae    0x41bc8d
  41bc35:	mov    ebx,DWORD PTR [edx+ebx*4]
  41bc38:	mov    edx,DWORD PTR [ebp+0x8]
  41bc3b:	mov    edi,DWORD PTR [ecx+edi*4]
  41bc3e:	mov    DWORD PTR [ebp-0x4],edx
  41bc41:	lea    edx,[ebp-0x50]
  41bc44:	add    ebx,eax
  41bc46:	add    edi,eax
  41bc48:	sub    edx,DWORD PTR [ebp+0x8]
  41bc4b:	mov    DWORD PTR [ebp-0x14],0xb
  41bc52:	mov    DWORD PTR [ebp-0x24],edx
  41bc55:	mov    edx,DWORD PTR [ebp-0x4]
  41bc58:	cmp    DWORD PTR [edx],0x0
  41bc5b:	jne    0x41bc78
  41bc5d:	mov    eax,DWORD PTR [ebp-0x24]
  41bc60:	push   DWORD PTR [eax+edx*1]
  41bc63:	push   ebx
  41bc64:	call   0x41ba5f
  41bc69:	mov    ecx,DWORD PTR [ebp-0xc]
  41bc6c:	test   eax,eax
  41bc6e:	je     0x41bc75
  41bc70:	mov    eax,DWORD PTR [ebp-0x4]
  41bc73:	mov    DWORD PTR [eax],edi
  41bc75:	mov    eax,DWORD PTR [ebp-0x10]
  41bc78:	add    DWORD PTR [ebp-0x4],0x4
  41bc7c:	dec    DWORD PTR [ebp-0x14]
  41bc7f:	jne    0x41bc55
  41bc81:	mov    ebx,DWORD PTR [ebp-0x18]
  41bc84:	inc    ebx
  41bc85:	mov    DWORD PTR [ebp-0x18],ebx
  41bc88:	cmp    ebx,DWORD PTR [ebp-0x8]
  41bc8b:	jb     0x41bc21
  41bc8d:	pop    esi
  41bc8e:	pop    ebx
  41bc8f:	pop    edi
  41bc90:	leave  
  41bc91:	ret    0x4
  41bc94:	push   ebp
  41bc95:	mov    ebp,esp
  41bc97:	mov    eax,DWORD PTR [ebp+0x8]
  41bc9a:	push   esi
  41bc9b:	push   DWORD PTR [eax+0x1d8]
  41bca1:	lea    esi,[eax+0x198]
  41bca7:	mov    eax,DWORD PTR [ebp+0x8]
  41bcaa:	call   0x41bb44
  41bcaf:	mov    ecx,DWORD PTR [esi]
  41bcb1:	mov    DWORD PTR [ecx],eax
  41bcb3:	mov    eax,DWORD PTR [esi]
  41bcb5:	xor    ecx,ecx
  41bcb7:	cmp    DWORD PTR [eax],ecx
  41bcb9:	pop    esi
  41bcba:	setne  cl
  41bcbd:	mov    eax,ecx
  41bcbf:	pop    ebp
  41bcc0:	ret    0x4
  41bcc3:	mov    ecx,DWORD PTR [edi+0x188]
  41bcc9:	push   ebx
  41bcca:	jmp    0x41bcdf
  41bccc:	xor    eax,0x8a8c
  41bcd1:	add    eax,0x3b50
  41bcd6:	mov    WORD PTR [ecx],ax
  41bcd9:	add    ecx,0x2
  41bcdc:	add    edx,0x2
  41bcdf:	movzx  eax,WORD PTR [edx]
  41bce2:	mov    ebx,0x4e3c
  41bce7:	cmp    ax,bx
  41bcea:	jne    0x41bccc
  41bcec:	xor    eax,eax
  41bcee:	mov    WORD PTR [ecx],ax
  41bcf1:	mov    eax,DWORD PTR [edi+0x188]
  41bcf7:	pop    ebx
  41bcf8:	ret    
  41bcf9:	push   edi
  41bcfa:	mov    edi,eax
  41bcfc:	mov    eax,DWORD PTR [esi+0x188]
  41bd02:	shl    edi,0x6
  41bd05:	add    eax,edi
  41bd07:	jmp    0x41bd13
  41bd09:	xor    cl,0x73
  41bd0c:	sub    cl,0x9
  41bd0f:	mov    BYTE PTR [eax],cl
  41bd11:	inc    eax
  41bd12:	inc    edx
  41bd13:	mov    cl,BYTE PTR [edx]
  41bd15:	cmp    cl,0x7a
  41bd18:	jne    0x41bd09
  41bd1a:	mov    BYTE PTR [eax],0x0
  41bd1d:	mov    eax,DWORD PTR [esi+0x188]
  41bd23:	add    eax,edi
  41bd25:	pop    edi
  41bd26:	ret    
  41bd27:	push   ebp
  41bd28:	mov    ebp,esp
  41bd2a:	sub    esp,0x38
  41bd2d:	push   ebx
  41bd2e:	mov    ebx,0xf89c85b9
  41bd33:	mov    DWORD PTR [ebp-0x4],ebx
  41bd36:	lea    eax,[ebx-0x1]
  41bd39:	push   esi
  41bd3a:	mov    DWORD PTR [ebp-0x24],eax
  41bd3d:	mov    ecx,DWORD PTR [ebp-0x4]
  41bd40:	mov    edx,DWORD PTR [ebp+0x8]
  41bd43:	mov    esi,0x7510899
  41bd48:	push   edi
  41bd49:	xor    ecx,esi
  41bd4b:	mov    edi,0x3272e0
  41bd50:	add    ecx,edi
  41bd52:	cmp    edx,ecx
  41bd54:	je     0x41bec2
  41bd5a:	mov    ecx,DWORD PTR [ebp-0x4]
  41bd5d:	mov    edx,DWORD PTR [ebp+0xc]
  41bd60:	xor    ecx,esi
  41bd62:	add    ecx,edi
  41bd64:	cmp    edx,ecx
  41bd66:	je     0x41bec2
  41bd6c:	mov    ecx,DWORD PTR [ebp+0x10]
  41bd6f:	mov    DWORD PTR [ebp-0x18],ecx
  41bd72:	mov    ecx,DWORD PTR [ebp+0xc]
  41bd75:	mov    DWORD PTR [ebp-0x14],ecx
  41bd78:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd7b:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41bd82:	mov    DWORD PTR [ebp-0x20],eax
  41bd85:	mov    DWORD PTR [ebp-0x10],ebx
  41bd88:	mov    DWORD PTR [ebp+0xc],eax
  41bd8b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41bd92:	mov    eax,DWORD PTR [ebp+0xc]
  41bd95:	mov    DWORD PTR [ebp-0xc],ecx
  41bd98:	xor    eax,esi
  41bd9a:	mov    ecx,0xffcd8d20
  41bd9f:	sub    ecx,eax
  41bda1:	add    ecx,DWORD PTR [ebp-0x14]
  41bda4:	mov    DWORD PTR [ebp+0x8],ecx
  41bda7:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41bdae:	jmp    0x41beb2
  41bdb3:	mov    eax,DWORD PTR [ebp+0xc]
  41bdb6:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdb9:	xor    eax,esi
  41bdbb:	xor    ecx,esi
  41bdbd:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41bdc4:	mov    eax,DWORD PTR [ebp+0x8]
  41bdc7:	xor    edx,edx
  41bdc9:	div    ecx
  41bdcb:	mov    eax,DWORD PTR [ebp+0x10]
  41bdce:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdd1:	xor    eax,esi
  41bdd3:	xor    ecx,esi
  41bdd5:	sub    eax,ecx
  41bdd7:	cmp    edx,eax
  41bdd9:	jne    0x41be6e
  41bddf:	mov    eax,DWORD PTR [ebp+0x8]
  41bde2:	add    eax,DWORD PTR [ebp-0xc]
  41bde5:	mov    dl,BYTE PTR [eax]
  41bde7:	mov    eax,DWORD PTR [ebp-0x10]
  41bdea:	mov    ecx,DWORD PTR [ebp-0x8]
  41bded:	xor    eax,esi
  41bdef:	xor    ecx,esi
  41bdf1:	add    eax,edi
  41bdf3:	add    ecx,edi
  41bdf5:	cmp    eax,ecx
  41bdf7:	jae    0x41be3f
  41bdf9:	lea    ecx,[eax-0x3272e0]
  41bdff:	mov    DWORD PTR [ebp-0x4],ecx
  41be02:	mov    ebx,DWORD PTR [ebp-0x4]
  41be05:	xor    ebx,esi
  41be07:	add    ebx,0x7f55d8fb
  41be0d:	lea    ecx,[ebp+eax*4-0x38]
  41be11:	mov    DWORD PTR [ecx],ebx
  41be13:	mov    ebx,DWORD PTR [ecx]
  41be15:	cmp    ebx,0x244ecbda
  41be1b:	jbe    0x41be25
  41be1d:	add    DWORD PTR [ecx],0x405fc1d
  41be23:	jmp    0x41be2b
  41be25:	add    DWORD PTR [ecx],0xfdaf43e3
  41be2b:	mov    ecx,DWORD PTR [ebp-0x8]
  41be2e:	xor    ecx,esi
  41be30:	inc    eax
  41be31:	inc    DWORD PTR [ebp-0x4]
  41be34:	add    ecx,edi
  41be36:	cmp    eax,ecx
  41be38:	jb     0x41be02
  41be3a:	mov    ebx,0xf89c85b9
  41be3f:	mov    eax,DWORD PTR [ebp-0x18]
  41be42:	test   eax,eax
  41be44:	jne    0x41be4e
  41be46:	xor    dl,0x73
  41be49:	sub    dl,0x9
  41be4c:	jmp    0x41be64
  41be4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41be51:	xor    al,0x99
  41be53:	mov    cl,0x20
  41be55:	sub    cl,al
  41be57:	add    dl,cl
  41be59:	mov    ecx,DWORD PTR [ebp-0x20]
  41be5c:	xor    cl,0x99
  41be5f:	sub    cl,0x20
  41be62:	ror    dl,cl
  41be64:	xor    eax,eax
  41be66:	mov    eax,DWORD PTR [ebp+0x8]
  41be69:	add    eax,DWORD PTR [ebp-0xc]
  41be6c:	mov    BYTE PTR [eax],dl
  41be6e:	mov    eax,DWORD PTR [ebp+0x8]
  41be71:	mov    ecx,DWORD PTR [ebp-0x10]
  41be74:	sub    eax,edi
  41be76:	xor    eax,esi
  41be78:	cmp    eax,ecx
  41be7a:	jne    0x41bea0
  41be7c:	mov    eax,DWORD PTR [ebp+0x10]
  41be7f:	mov    ecx,DWORD PTR [ebp+0xc]
  41be82:	xor    eax,esi
  41be84:	xor    ecx,esi
  41be86:	sub    eax,ecx
  41be88:	sub    eax,edi
  41be8a:	xor    eax,esi
  41be8c:	mov    DWORD PTR [ebp+0x10],eax
  41be8f:	mov    eax,DWORD PTR [ebp+0xc]
  41be92:	xor    eax,esi
  41be94:	mov    ecx,0xffcd8d20
  41be99:	sub    ecx,eax
  41be9b:	add    ecx,DWORD PTR [ebp-0x14]
  41be9e:	jmp    0x41beaf
  41bea0:	mov    eax,DWORD PTR [ebp+0xc]
  41bea3:	xor    eax,esi
  41bea5:	mov    ecx,0xffcd8d20
  41beaa:	sub    ecx,eax
  41beac:	add    ecx,DWORD PTR [ebp+0x8]
  41beaf:	mov    DWORD PTR [ebp+0x8],ecx
  41beb2:	mov    eax,DWORD PTR [ebp+0x10]
  41beb5:	cmp    eax,ebx
  41beb7:	jne    0x41bdb3
  41bebd:	mov    eax,DWORD PTR [ebp-0x24]
  41bec0:	jmp    0x41bec5
  41bec2:	mov    eax,DWORD PTR [ebp-0x4]
  41bec5:	xor    eax,esi
  41bec7:	add    eax,edi
  41bec9:	pop    edi
  41beca:	pop    esi
  41becb:	pop    ebx
  41becc:	leave  
  41becd:	ret    0xc
  41bed0:	push   ebp
  41bed1:	mov    ebp,esp
  41bed3:	sub    esp,0x14
  41bed6:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41bedd:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41bee4:	mov    eax,DWORD PTR [ebx]
  41bee6:	mov    DWORD PTR [ebp-0x8],eax
  41bee9:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41bef0:	push   esi
  41bef1:	push   edi
  41bef2:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41bef9:	mov    edi,DWORD PTR [ebp-0x4]
  41befc:	mov    ecx,DWORD PTR [ebp-0x10]
  41beff:	mov    eax,0x7510899
  41bf04:	xor    edi,eax
  41bf06:	mov    edx,0x3272e0
  41bf0b:	xor    ecx,eax
  41bf0d:	add    edi,edx
  41bf0f:	add    ecx,edx
  41bf11:	imul   edi,ecx
  41bf14:	jmp    0x41bf5c
  41bf16:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf19:	mov    esi,DWORD PTR [ebp-0x4]
  41bf1c:	xor    ecx,eax
  41bf1e:	xor    esi,eax
  41bf20:	add    ecx,edx
  41bf22:	add    esi,edx
  41bf24:	test   esi,ecx
  41bf26:	mov    esi,DWORD PTR [ebp-0x8]
  41bf29:	mov    ecx,DWORD PTR [ebp-0x4]
  41bf2c:	je     0x41bf43
  41bf2e:	xor    ecx,eax
  41bf30:	xor    esi,eax
  41bf32:	add    ecx,edx
  41bf34:	add    esi,edx
  41bf36:	shr    esi,cl
  41bf38:	mov    ecx,DWORD PTR [ebp-0x14]
  41bf3b:	xor    ecx,eax
  41bf3d:	add    ecx,edx
  41bf3f:	xor    esi,ecx
  41bf41:	jmp    0x41bf4d
  41bf43:	xor    esi,eax
  41bf45:	xor    ecx,eax
  41bf47:	add    esi,edx
  41bf49:	add    ecx,edx
  41bf4b:	shr    esi,cl
  41bf4d:	mov    DWORD PTR [ebp-0x8],esi
  41bf50:	mov    ecx,DWORD PTR [ebp-0x4]
  41bf53:	xor    ecx,eax
  41bf55:	lea    edi,[edi+ecx*1+0x3272e0]
  41bf5c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bf5f:	mov    esi,DWORD PTR [ebp-0x4]
  41bf62:	xor    esi,eax
  41bf64:	xor    ecx,eax
  41bf66:	sub    ecx,esi
  41bf68:	cmp    edi,ecx
  41bf6a:	jbe    0x41bf16
  41bf6c:	mov    eax,DWORD PTR [ebp-0x8]
  41bf6f:	pop    edi
  41bf70:	mov    DWORD PTR [ebx],eax
  41bf72:	mov    eax,DWORD PTR [ebp-0x8]
  41bf75:	pop    esi
  41bf76:	leave  
  41bf77:	ret    
  41bf78:	push   ebp
  41bf79:	mov    ebp,esp
  41bf7b:	sub    esp,0x420
  41bf81:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41bf88:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41bf8f:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41bf96:	push   ebx
  41bf97:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41bf9e:	mov    eax,DWORD PTR [ebp-0x14]
  41bfa1:	push   esi
  41bfa2:	mov    esi,0x7510899
  41bfa7:	push   edi
  41bfa8:	xor    eax,esi
  41bfaa:	mov    edi,0x3272e0
  41bfaf:	add    eax,edi
  41bfb1:	mov    DWORD PTR [ebp-0x8],eax
  41bfb4:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41bfbb:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41bfc2:	mov    DWORD PTR [ebp-0x10],0x8
  41bfc9:	mov    ecx,ecx
  41bfcb:	mov    eax,DWORD PTR [ebp-0xc]
  41bfce:	mov    ecx,DWORD PTR [ebp-0x14]
  41bfd1:	xor    eax,esi
  41bfd3:	xor    ecx,esi
  41bfd5:	add    eax,edi
  41bfd7:	add    ecx,edi
  41bfd9:	imul   eax,ecx
  41bfdc:	jmp    0x41c00f
  41bfde:	mov    eax,DWORD PTR [ebp-0x4]
  41bfe1:	sub    eax,edi
  41bfe3:	xor    eax,esi
  41bfe5:	mov    DWORD PTR [ebp-0x8],eax
  41bfe8:	lea    ebx,[ebp-0x8]
  41bfeb:	call   0x41bed0
  41bff0:	mov    DWORD PTR [ebp-0x8],eax
  41bff3:	mov    eax,DWORD PTR [ebp-0x8]
  41bff6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bff9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41c000:	mov    eax,DWORD PTR [ebp-0xc]
  41c003:	mov    ecx,DWORD PTR [ebp-0x4]
  41c006:	xor    eax,esi
  41c008:	lea    eax,[eax+ecx*1+0x3272e0]
  41c00f:	mov    DWORD PTR [ebp-0x4],eax
  41c012:	mov    eax,DWORD PTR [ebp-0x18]
  41c015:	mov    ecx,DWORD PTR [ebp-0xc]
  41c018:	xor    ecx,esi
  41c01a:	xor    eax,esi
  41c01c:	sub    eax,ecx
  41c01e:	mov    ecx,DWORD PTR [ebp-0x4]
  41c021:	cmp    ecx,eax
  41c023:	jbe    0x41bfde
  41c025:	mov    eax,DWORD PTR [ebp-0x1c]
  41c028:	xor    eax,esi
  41c02a:	add    eax,edi
  41c02c:	mov    DWORD PTR [ebp-0x8],eax
  41c02f:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41c036:	mov    ebx,ebx
  41c038:	jmp    0x41c09b
  41c03a:	mov    ecx,DWORD PTR [ebp-0x20]
  41c03d:	mov    eax,DWORD PTR [ebp-0x8]
  41c040:	xor    ecx,esi
  41c042:	add    ecx,edi
  41c044:	shr    eax,cl
  41c046:	mov    DWORD PTR [ebp-0x4],eax
  41c049:	mov    eax,DWORD PTR [ebp+0x8]
  41c04c:	mov    cl,BYTE PTR [eax]
  41c04e:	mov    BYTE PTR [ebp+0xb],cl
  41c051:	mov    cl,BYTE PTR [ebp+0xb]
  41c054:	mov    edx,DWORD PTR [ebp-0x8]
  41c057:	movzx  ecx,cl
  41c05a:	xor    ecx,edx
  41c05c:	mov    DWORD PTR [ebp+0x8],ecx
  41c05f:	mov    ecx,DWORD PTR [ebp-0x18]
  41c062:	mov    edx,DWORD PTR [ebp+0x8]
  41c065:	xor    ecx,esi
  41c067:	add    ecx,edi
  41c069:	and    ecx,edx
  41c06b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41c072:	mov    edx,DWORD PTR [ebp-0x4]
  41c075:	xor    ecx,edx
  41c077:	mov    DWORD PTR [ebp-0x8],ecx
  41c07a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c07d:	xor    ecx,esi
  41c07f:	lea    eax,[eax+ecx*1+0x3272e0]
  41c086:	mov    DWORD PTR [ebp+0x8],eax
  41c089:	mov    eax,DWORD PTR [ebp-0xc]
  41c08c:	xor    eax,esi
  41c08e:	mov    ecx,0xffcd8d20
  41c093:	sub    ecx,eax
  41c095:	add    ecx,DWORD PTR [ebp-0x10]
  41c098:	mov    DWORD PTR [ebp-0x10],ecx
  41c09b:	mov    eax,DWORD PTR [ebp-0x14]
  41c09e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0a1:	xor    eax,esi
  41c0a3:	add    eax,edi
  41c0a5:	cmp    ecx,eax
  41c0a7:	jne    0x41c03a
  41c0a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c0ac:	mov    ecx,DWORD PTR [ebp-0x8]
  41c0af:	xor    eax,esi
  41c0b1:	add    eax,edi
  41c0b3:	pop    edi
  41c0b4:	pop    esi
  41c0b5:	xor    eax,ecx
  41c0b7:	pop    ebx
  41c0b8:	leave  
  41c0b9:	ret    0x4
  41c0bc:	push   ebp
  41c0bd:	mov    ebp,esp
  41c0bf:	mov    eax,DWORD PTR [ebp+0x1c]
  41c0c2:	mov    ecx,DWORD PTR [ebp+0x8]
  41c0c5:	mov    edx,DWORD PTR [ebp+0x10]
  41c0c8:	mov    eax,DWORD PTR [eax+0x190]
  41c0ce:	mov    eax,DWORD PTR [eax]
  41c0d0:	sub    esp,0x64
  41c0d3:	push   ebx
  41c0d4:	push   esi
  41c0d5:	push   edi
  41c0d6:	mov    edi,0x7510899
  41c0db:	xor    ecx,edi
  41c0dd:	mov    ebx,0x3272e0
  41c0e2:	add    ecx,ebx
  41c0e4:	cmp    ecx,edx
  41c0e6:	jne    0x41c0f7
  41c0e8:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41c0f2:	jmp    0x41c5f4
  41c0f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c0fa:	mov    esi,DWORD PTR [ebp+0x14]
  41c0fd:	mov    edx,DWORD PTR [esi]
  41c0ff:	xor    ecx,edi
  41c101:	add    ecx,ebx
  41c103:	cmp    edx,ecx
  41c105:	je     0x41c5af
  41c10b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c10e:	mov    DWORD PTR [ebp-0x1c],eax
  41c111:	mov    DWORD PTR [ebp+0x1c],ecx
  41c114:	mov    ecx,DWORD PTR [ebp+0x18]
  41c117:	mov    eax,DWORD PTR [esi]
  41c119:	mov    DWORD PTR [ebp-0x20],eax
  41c11c:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41c123:	mov    edx,0xf89c85b8
  41c128:	mov    DWORD PTR [ebp-0x8],edx
  41c12b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c12e:	mov    DWORD PTR [ebp+0x1c],eax
  41c131:	mov    eax,DWORD PTR [ebp+0x1c]
  41c134:	mov    eax,DWORD PTR [eax+0x190]
  41c13a:	mov    eax,DWORD PTR [eax]
  41c13c:	mov    DWORD PTR [ebp-0x24],ecx
  41c13f:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c142:	mov    ecx,DWORD PTR [ecx+0x190]
  41c148:	mov    ecx,DWORD PTR [ecx]
  41c14a:	add    ecx,DWORD PTR [eax+0x3c]
  41c14d:	mov    DWORD PTR [ebp+0x10],ecx
  41c150:	mov    eax,DWORD PTR [ebp+0x8]
  41c153:	xor    eax,edi
  41c155:	add    eax,ebx
  41c157:	mov    DWORD PTR [ebp-0x4],eax
  41c15a:	mov    eax,DWORD PTR [ebp+0x8]
  41c15d:	xor    eax,edi
  41c15f:	add    eax,ebx
  41c161:	mov    DWORD PTR [ebp+0x18],eax
  41c164:	mov    eax,DWORD PTR [ebp+0x10]
  41c167:	mov    eax,DWORD PTR [eax+0x50]
  41c16a:	sub    eax,0xc
  41c16d:	mov    DWORD PTR [ebp-0x28],eax
  41c170:	mov    eax,DWORD PTR [ebp+0x10]
  41c173:	mov    eax,DWORD PTR [eax+0x38]
  41c176:	mov    ecx,DWORD PTR [ebp+0x10]
  41c179:	dec    eax
  41c17a:	test   DWORD PTR [ecx+0x54],eax
  41c17d:	mov    eax,DWORD PTR [ebp+0x10]
  41c180:	je     0x41c19a
  41c182:	mov    eax,DWORD PTR [eax+0x38]
  41c185:	mov    ecx,DWORD PTR [ebp+0x10]
  41c188:	mov    ecx,DWORD PTR [ecx+0x54]
  41c18b:	dec    eax
  41c18c:	not    eax
  41c18e:	and    ecx,eax
  41c190:	mov    eax,DWORD PTR [ebp+0x10]
  41c193:	mov    eax,DWORD PTR [eax+0x38]
  41c196:	add    eax,ecx
  41c198:	jmp    0x41c19d
  41c19a:	mov    eax,DWORD PTR [eax+0x54]
  41c19d:	mov    DWORD PTR [ebp+0x1c],eax
  41c1a0:	mov    eax,DWORD PTR [ebp+0x8]
  41c1a3:	xor    eax,edi
  41c1a5:	add    eax,ebx
  41c1a7:	mov    DWORD PTR [ebp+0x18],eax
  41c1aa:	mov    eax,DWORD PTR [ebp+0x8]
  41c1ad:	xor    eax,edi
  41c1af:	add    eax,ebx
  41c1b1:	mov    DWORD PTR [ebp+0x18],eax
  41c1b4:	mov    eax,DWORD PTR [ebp+0x8]
  41c1b7:	mov    ecx,DWORD PTR [ebp-0x24]
  41c1ba:	xor    eax,edi
  41c1bc:	add    eax,ebx
  41c1be:	mov    DWORD PTR [ecx],eax
  41c1c0:	mov    DWORD PTR [ebp+0x18],edx
  41c1c3:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41c1ca:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41c1d1:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41c1d8:	mov    eax,DWORD PTR [ebp-0x8]
  41c1db:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c1de:	xor    eax,edi
  41c1e0:	add    eax,ebx
  41c1e2:	imul   eax,ecx
  41c1e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c1e8:	mov    edx,DWORD PTR [ebp-0x28]
  41c1eb:	xor    ecx,edi
  41c1ed:	lea    ecx,[ecx+edx*1+0x3272e0]
  41c1f4:	cmp    eax,ecx
  41c1f6:	jae    0x41c5a8
  41c1fc:	mov    eax,DWORD PTR [ebp+0x8]
  41c1ff:	xor    eax,edi
  41c201:	add    eax,ebx
  41c203:	mov    DWORD PTR [ebp+0x18],eax
  41c206:	mov    eax,DWORD PTR [ebp+0x1c]
  41c209:	add    eax,DWORD PTR [ebp-0x1c]
  41c20c:	mov    DWORD PTR [ebp-0x4],eax
  41c20f:	push   DWORD PTR [ebp-0x4]
  41c212:	mov    esi,DWORD PTR [ebp-0x1c]
  41c215:	mov    ecx,DWORD PTR [ebp+0x10]
  41c218:	call   0x41b2fe
  41c21d:	mov    DWORD PTR [ebp+0xc],eax
  41c220:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41c227:	mov    eax,DWORD PTR [ebp-0x18]
  41c22a:	xor    eax,edi
  41c22c:	add    eax,ebx
  41c22e:	push   eax
  41c22f:	lea    eax,[ebp-0x40]
  41c232:	push   eax
  41c233:	call   0x41b909
  41c238:	mov    eax,DWORD PTR [ebp+0xc]
  41c23b:	test   eax,eax
  41c23d:	je     0x41c28d
  41c23f:	mov    eax,DWORD PTR [ebp-0x18]
  41c242:	xor    eax,edi
  41c244:	add    eax,ebx
  41c246:	push   eax
  41c247:	push   DWORD PTR [ebp+0xc]
  41c24a:	lea    eax,[ebp-0x40]
  41c24d:	push   eax
  41c24e:	call   0x41b7b0
  41c253:	mov    eax,DWORD PTR [ebp-0x4]
  41c256:	mov    DWORD PTR [ebp-0x18],eax
  41c259:	mov    eax,DWORD PTR [ebp-0x18]
  41c25c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c25f:	sub    eax,ecx
  41c261:	mov    DWORD PTR [ebp-0x18],eax
  41c264:	mov    eax,DWORD PTR [ebp+0xc]
  41c267:	mov    ecx,DWORD PTR [ebp+0xc]
  41c26a:	mov    eax,DWORD PTR [eax+0x10]
  41c26d:	add    eax,DWORD PTR [ecx+0xc]
  41c270:	mov    ecx,DWORD PTR [ebp-0x18]
  41c273:	cmp    ecx,eax
  41c275:	jb     0x41c28d
  41c277:	mov    eax,DWORD PTR [ebp+0xc]
  41c27a:	mov    eax,DWORD PTR [eax+0xc]
  41c27d:	mov    ecx,DWORD PTR [ebp+0xc]
  41c280:	add    eax,DWORD PTR [ecx+0x8]
  41c283:	mov    ecx,DWORD PTR [ebp-0x18]
  41c286:	sub    eax,ecx
  41c288:	jmp    0x41c57b
  41c28d:	push   0xc
  41c28f:	push   DWORD PTR [ebp-0x4]
  41c292:	lea    eax,[ebp-0x4c]
  41c295:	push   eax
  41c296:	call   0x41b7b0
  41c29b:	mov    eax,0xf89c85b9
  41c2a0:	mov    DWORD PTR [ebp-0x2c],eax
  41c2a3:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41c2aa:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41c2b1:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41c2b8:	lea    ecx,[ebp-0x2c]
  41c2bb:	mov    DWORD PTR [ebp-0xc],ecx
  41c2be:	lea    ecx,[ebp-0x30]
  41c2c1:	mov    DWORD PTR [ebp-0x10],ecx
  41c2c4:	lea    ecx,[ebp-0x34]
  41c2c7:	mov    DWORD PTR [ebp+0xc],ecx
  41c2ca:	lea    ecx,[ebp-0x38]
  41c2cd:	mov    DWORD PTR [ebp-0x14],ecx
  41c2d0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c2d3:	xor    ecx,edi
  41c2d5:	add    ecx,ebx
  41c2d7:	mov    DWORD PTR [ebp-0x18],ecx
  41c2da:	jmp    0x41c4d6
  41c2df:	cmp    eax,0xf89c85bb
  41c2e4:	je     0x41c4e8
  41c2ea:	mov    ecx,DWORD PTR [ebp-0x8]
  41c2ed:	xor    ecx,edi
  41c2ef:	mov    esi,eax
  41c2f1:	add    ecx,ebx
  41c2f3:	mov    DWORD PTR [ebp+0x18],ecx
  41c2f6:	mov    eax,DWORD PTR [ebp-0x18]
  41c2f9:	xor    esi,edi
  41c2fb:	lea    eax,[eax+esi*1+0x3272e0]
  41c302:	mov    DWORD PTR [ebp-0x18],eax
  41c305:	mov    eax,DWORD PTR [ebp-0x8]
  41c308:	mov    ecx,DWORD PTR [ebp-0x18]
  41c30b:	xor    eax,edi
  41c30d:	add    eax,ebx
  41c30f:	cmp    ecx,eax
  41c311:	jne    0x41c326
  41c313:	mov    eax,DWORD PTR [ebp+0x8]
  41c316:	xor    eax,edi
  41c318:	add    eax,ebx
  41c31a:	push   eax
  41c31b:	push   0xc
  41c31d:	lea    eax,[ebp-0x4c]
  41c320:	push   eax
  41c321:	call   0x41bd27
  41c326:	mov    eax,DWORD PTR [ebp-0xc]
  41c329:	mov    eax,DWORD PTR [eax]
  41c32b:	xor    eax,edi
  41c32d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c334:	mov    ecx,DWORD PTR [ebp+0x8]
  41c337:	xor    ecx,edi
  41c339:	movzx  eax,al
  41c33c:	add    ecx,ebx
  41c33e:	cmp    eax,ecx
  41c340:	je     0x41c4be
  41c346:	mov    eax,DWORD PTR [ebp-0x10]
  41c349:	mov    eax,DWORD PTR [eax]
  41c34b:	xor    eax,edi
  41c34d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c354:	mov    ecx,DWORD PTR [ebp+0x8]
  41c357:	xor    ecx,edi
  41c359:	movzx  eax,al
  41c35c:	add    ecx,ebx
  41c35e:	cmp    eax,ecx
  41c360:	je     0x41c4be
  41c366:	mov    eax,DWORD PTR [ebp+0xc]
  41c369:	mov    eax,DWORD PTR [eax]
  41c36b:	xor    eax,edi
  41c36d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c374:	mov    ecx,DWORD PTR [ebp+0x8]
  41c377:	xor    ecx,edi
  41c379:	movzx  eax,al
  41c37c:	add    ecx,ebx
  41c37e:	cmp    eax,ecx
  41c380:	je     0x41c4be
  41c386:	mov    eax,DWORD PTR [ebp-0x14]
  41c389:	mov    eax,DWORD PTR [eax]
  41c38b:	xor    eax,edi
  41c38d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c394:	mov    ecx,DWORD PTR [ebp+0x8]
  41c397:	xor    ecx,edi
  41c399:	movzx  eax,al
  41c39c:	add    ecx,ebx
  41c39e:	cmp    eax,ecx
  41c3a0:	je     0x41c4be
  41c3a6:	mov    eax,DWORD PTR [ebp-0x10]
  41c3a9:	mov    eax,DWORD PTR [eax]
  41c3ab:	xor    eax,edi
  41c3ad:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c3b4:	mov    ecx,DWORD PTR [ebp-0xc]
  41c3b7:	mov    ecx,DWORD PTR [ecx]
  41c3b9:	xor    ecx,edi
  41c3bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c3c2:	xor    al,cl
  41c3c4:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3c7:	mov    ecx,DWORD PTR [ecx]
  41c3c9:	xor    ecx,edi
  41c3cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c3d2:	or     al,cl
  41c3d4:	mov    ecx,DWORD PTR [ebp-0xc]
  41c3d7:	mov    ecx,DWORD PTR [ecx]
  41c3d9:	xor    ecx,edi
  41c3db:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c3e2:	cmp    cl,al
  41c3e4:	jne    0x41c4be
  41c3ea:	mov    eax,DWORD PTR [ebp+0xc]
  41c3ed:	mov    eax,DWORD PTR [eax]
  41c3ef:	xor    eax,edi
  41c3f1:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c3f8:	mov    ecx,DWORD PTR [ebp-0x10]
  41c3fb:	mov    ecx,DWORD PTR [ecx]
  41c3fd:	xor    ecx,edi
  41c3ff:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c406:	xor    al,cl
  41c408:	mov    ecx,DWORD PTR [ebp-0x14]
  41c40b:	mov    ecx,DWORD PTR [ecx]
  41c40d:	xor    ecx,edi
  41c40f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c416:	or     al,cl
  41c418:	mov    ecx,DWORD PTR [ebp-0x10]
  41c41b:	mov    ecx,DWORD PTR [ecx]
  41c41d:	xor    ecx,edi
  41c41f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c426:	cmp    cl,al
  41c428:	jne    0x41c4be
  41c42e:	mov    eax,DWORD PTR [ebp-0x14]
  41c431:	mov    eax,DWORD PTR [eax]
  41c433:	xor    eax,edi
  41c435:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c43c:	mov    ecx,DWORD PTR [ebp+0xc]
  41c43f:	mov    ecx,DWORD PTR [ecx]
  41c441:	xor    ecx,edi
  41c443:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c44a:	xor    al,cl
  41c44c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c44f:	mov    ecx,DWORD PTR [ecx]
  41c451:	xor    ecx,edi
  41c453:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c45a:	or     al,cl
  41c45c:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45f:	mov    ecx,DWORD PTR [ecx]
  41c461:	xor    ecx,edi
  41c463:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c46a:	cmp    cl,al
  41c46c:	jne    0x41c4be
  41c46e:	mov    eax,DWORD PTR [ebp-0x14]
  41c471:	mov    eax,DWORD PTR [eax]
  41c473:	xor    eax,edi
  41c475:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c47c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c47f:	mov    ecx,DWORD PTR [ecx]
  41c481:	xor    ecx,edi
  41c483:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c48a:	xor    al,cl
  41c48c:	mov    ecx,DWORD PTR [ebp-0x10]
  41c48f:	mov    ecx,DWORD PTR [ecx]
  41c491:	xor    ecx,edi
  41c493:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c49a:	or     al,cl
  41c49c:	mov    ecx,DWORD PTR [ebp-0x14]
  41c49f:	mov    ecx,DWORD PTR [ecx]
  41c4a1:	xor    ecx,edi
  41c4a3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c4aa:	cmp    cl,al
  41c4ac:	jne    0x41c4be
  41c4ae:	lea    eax,[ebp-0x4c]
  41c4b1:	push   eax
  41c4b2:	call   0x41bf78
  41c4b7:	mov    ecx,DWORD PTR [ebp-0x44]
  41c4ba:	cmp    eax,ecx
  41c4bc:	je     0x41c4c8
  41c4be:	mov    eax,DWORD PTR [ebp+0x8]
  41c4c1:	xor    eax,edi
  41c4c3:	add    eax,ebx
  41c4c5:	mov    DWORD PTR [ebp+0x18],eax
  41c4c8:	mov    eax,DWORD PTR [ebp-0x8]
  41c4cb:	xor    eax,edi
  41c4cd:	lea    eax,[eax+esi*1+0x3272e0]
  41c4d4:	xor    eax,edi
  41c4d6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4d9:	mov    edx,DWORD PTR [ebp+0x18]
  41c4dc:	xor    ecx,edi
  41c4de:	add    ecx,ebx
  41c4e0:	cmp    edx,ecx
  41c4e2:	je     0x41c2df
  41c4e8:	mov    eax,DWORD PTR [ebp+0x8]
  41c4eb:	mov    ecx,DWORD PTR [ebp+0x18]
  41c4ee:	xor    eax,edi
  41c4f0:	add    eax,ebx
  41c4f2:	cmp    ecx,eax
  41c4f4:	jne    0x41c507
  41c4f6:	mov    eax,DWORD PTR [ebp-0x8]
  41c4f9:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c4fc:	xor    eax,edi
  41c4fe:	lea    eax,[eax+ecx*1+0x3272e0]
  41c505:	jmp    0x41c57e
  41c507:	push   0x18
  41c509:	push   DWORD PTR [ebp-0x4]
  41c50c:	lea    eax,[ebp-0x64]
  41c50f:	push   eax
  41c510:	call   0x41b7b0
  41c515:	mov    eax,DWORD PTR [ebp+0x8]
  41c518:	mov    ecx,DWORD PTR [ebp-0x18]
  41c51b:	xor    eax,edi
  41c51d:	add    eax,ebx
  41c51f:	cmp    eax,ecx
  41c521:	je     0x41c536
  41c523:	mov    eax,DWORD PTR [ebp+0x8]
  41c526:	xor    eax,edi
  41c528:	add    eax,ebx
  41c52a:	push   eax
  41c52b:	push   0x18
  41c52d:	lea    eax,[ebp-0x64]
  41c530:	push   eax
  41c531:	call   0x41bd27
  41c536:	mov    eax,DWORD PTR [ebp-0x4]
  41c539:	add    eax,0x18
  41c53c:	mov    DWORD PTR [ebp+0x18],eax
  41c53f:	push   DWORD PTR [ebp-0x50]
  41c542:	push   DWORD PTR [ebp+0x18]
  41c545:	mov    eax,DWORD PTR [ebp-0x54]
  41c548:	add    eax,DWORD PTR [ebp-0x20]
  41c54b:	push   eax
  41c54c:	call   0x41b7b0
  41c551:	mov    eax,DWORD PTR [ebp+0x8]
  41c554:	mov    ecx,DWORD PTR [ebp-0x18]
  41c557:	xor    eax,edi
  41c559:	add    eax,ebx
  41c55b:	cmp    eax,ecx
  41c55d:	je     0x41c570
  41c55f:	push   0x0
  41c561:	push   DWORD PTR [ebp-0x50]
  41c564:	mov    eax,DWORD PTR [ebp-0x54]
  41c567:	add    eax,DWORD PTR [ebp-0x20]
  41c56a:	push   eax
  41c56b:	call   0x41bd27
  41c570:	mov    eax,DWORD PTR [ebp-0x24]
  41c573:	mov    ecx,DWORD PTR [ebp-0x50]
  41c576:	add    DWORD PTR [eax],ecx
  41c578:	mov    eax,DWORD PTR [ebp-0x50]
  41c57b:	add    eax,DWORD PTR [ebp+0x1c]
  41c57e:	mov    DWORD PTR [ebp+0x1c],eax
  41c581:	mov    eax,DWORD PTR [ebp-0x8]
  41c584:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c587:	xor    eax,edi
  41c589:	add    eax,ebx
  41c58b:	imul   eax,ecx
  41c58e:	mov    ecx,DWORD PTR [ebp+0x8]
  41c591:	mov    edx,DWORD PTR [ebp-0x28]
  41c594:	xor    ecx,edi
  41c596:	lea    ecx,[ecx+edx*1+0x3272e0]
  41c59d:	cmp    eax,ecx
  41c59f:	jb     0x41c1fc
  41c5a5:	mov    esi,DWORD PTR [ebp+0x14]
  41c5a8:	mov    eax,DWORD PTR [ebp-0x20]
  41c5ab:	mov    DWORD PTR [esi],eax
  41c5ad:	jmp    0x41c5f4
  41c5af:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5b2:	mov    edx,DWORD PTR [ebp+0xc]
  41c5b5:	xor    ecx,edi
  41c5b7:	xor    edx,edi
  41c5b9:	add    ecx,ebx
  41c5bb:	add    edx,ebx
  41c5bd:	cmp    ecx,edx
  41c5bf:	jne    0x41c5d3
  41c5c1:	mov    eax,ds:0x7f642d1e
  41c5c6:	imul   eax,eax,0x9f15fcef
  41c5cc:	mov    ds:0x7f642d1e,eax
  41c5d1:	jmp    0x41c5f4
  41c5d3:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5d6:	xor    ecx,edi
  41c5d8:	add    ecx,ebx
  41c5da:	cmp    eax,ecx
  41c5dc:	je     0x41c5ea
  41c5de:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41c5e8:	jmp    0x41c5f4
  41c5ea:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41c5f4:	pop    edi
  41c5f5:	pop    esi
  41c5f6:	pop    ebx
  41c5f7:	leave  
  41c5f8:	ret    0x18
  41c5fb:	push   ebp
  41c5fc:	mov    ebp,esp
  41c5fe:	and    esp,0xfffffff8
  41c601:	mov    eax,DWORD PTR [ebp+0x20]
  41c604:	sub    esp,0x14
  41c607:	push   ebx
  41c608:	mov    ebx,DWORD PTR [ebp+0x14]
  41c60b:	push   esi
  41c60c:	push   edi
  41c60d:	cmp    eax,0xf89c85b9
  41c612:	jne    0x41c61e
  41c614:	push   0xf89c85b8
  41c619:	jmp    0x41c750
  41c61e:	mov    eax,DWORD PTR [ebp+0x20]
  41c621:	cmp    eax,0xf89c85b8
  41c626:	jne    0x41c632
  41c628:	push   0xf89c85bb
  41c62d:	jmp    0x41c750
  41c632:	mov    eax,DWORD PTR [ebp+0x20]
  41c635:	cmp    eax,0xf89c85bb
  41c63a:	jne    0x41c646
  41c63c:	push   0xf89c85ba
  41c641:	jmp    0x41c750
  41c646:	mov    eax,DWORD PTR [ebp+0x20]
  41c649:	cmp    eax,0xf89c85ba
  41c64e:	jne    0x41c65a
  41c650:	push   0xf89c85bd
  41c655:	jmp    0x41c750
  41c65a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c65d:	mov    eax,0xf89c85be
  41c662:	cmp    ecx,eax
  41c664:	jne    0x41c720
  41c66a:	mov    eax,DWORD PTR [ebp+0x10]
  41c66d:	mov    DWORD PTR [esp+0xc],eax
  41c671:	mov    eax,DWORD PTR [ebp+0x18]
  41c674:	mov    DWORD PTR [esp+0x14],eax
  41c678:	mov    eax,DWORD PTR [ebp+0xc]
  41c67b:	mov    DWORD PTR [esp+0x18],eax
  41c67f:	mov    eax,DWORD PTR [ebp+0x8]
  41c682:	mov    DWORD PTR [esp+0x10],eax
  41c686:	mov    eax,DWORD PTR [esp+0x10]
  41c68a:	mov    ecx,DWORD PTR [esp+0x14]
  41c68e:	mov    edi,0x7510899
  41c693:	xor    eax,edi
  41c695:	mov    esi,0x3272e0
  41c69a:	add    eax,esi
  41c69c:	mov    DWORD PTR [ecx],eax
  41c69e:	mov    eax,DWORD PTR [esp+0xc]
  41c6a2:	mov    eax,DWORD PTR [eax+0x194]
  41c6a8:	mov    ecx,DWORD PTR [eax]
  41c6aa:	mov    eax,DWORD PTR [esp+0xc]
  41c6ae:	mov    eax,DWORD PTR [eax+0x194]
  41c6b4:	mov    eax,DWORD PTR [eax]
  41c6b6:	add    eax,DWORD PTR [ecx+0x3c]
  41c6b9:	mov    ecx,DWORD PTR [esp+0xc]
  41c6bd:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c6c3:	mov    ecx,DWORD PTR [ecx+0x14]
  41c6c6:	push   0x4
  41c6c8:	push   0x3000
  41c6cd:	push   DWORD PTR [eax+0x50]
  41c6d0:	push   0x0
  41c6d2:	call   ecx
  41c6d4:	mov    DWORD PTR [ebx],eax
  41c6d6:	mov    eax,DWORD PTR [esp+0x10]
  41c6da:	push   DWORD PTR [esp+0xc]
  41c6de:	xor    eax,edi
  41c6e0:	add    eax,esi
  41c6e2:	mov    DWORD PTR [esp+0x20],eax
  41c6e6:	lea    eax,[esp+0x20]
  41c6ea:	push   eax
  41c6eb:	push   ebx
  41c6ec:	push   DWORD PTR [esp+0x20]
  41c6f0:	push   DWORD PTR [esp+0x28]
  41c6f4:	push   DWORD PTR [esp+0x24]
  41c6f8:	call   0x41c0bc
  41c6fd:	mov    eax,DWORD PTR [esp+0x10]
  41c701:	mov    ecx,DWORD PTR [ebx]
  41c703:	xor    eax,edi
  41c705:	add    eax,esi
  41c707:	cmp    ecx,eax
  41c709:	je     0x41c767
  41c70b:	mov    eax,DWORD PTR [esp+0x18]
  41c70f:	mov    ecx,DWORD PTR [esp+0x14]
  41c713:	xor    eax,edi
  41c715:	add    eax,esi
  41c717:	imul   eax,DWORD PTR [esp+0x1c]
  41c71c:	mov    DWORD PTR [ecx],eax
  41c71e:	jmp    0x41c767
  41c720:	mov    ecx,DWORD PTR [ebp+0x20]
  41c723:	cmp    ecx,0xf89c85bd
  41c729:	jne    0x41c732
  41c72b:	push   0xf89c85bc
  41c730:	jmp    0x41c750
  41c732:	mov    ecx,DWORD PTR [ebp+0x20]
  41c735:	cmp    ecx,0xf89c85bc
  41c73b:	jne    0x41c744
  41c73d:	push   0xf89c85bf
  41c742:	jmp    0x41c750
  41c744:	mov    ecx,DWORD PTR [ebp+0x20]
  41c747:	cmp    ecx,0xf89c85bf
  41c74d:	jne    0x41c767
  41c74f:	push   eax
  41c750:	push   DWORD PTR [ebp+0x1c]
  41c753:	push   DWORD PTR [ebp+0x18]
  41c756:	push   ebx
  41c757:	push   DWORD PTR [ebp+0x10]
  41c75a:	push   DWORD PTR [ebp+0xc]
  41c75d:	push   DWORD PTR [ebp+0x8]
  41c760:	call   0x41c5fb
  41c765:	mov    DWORD PTR [ebx],eax
  41c767:	mov    eax,DWORD PTR [ebx]
  41c769:	pop    edi
  41c76a:	pop    esi
  41c76b:	pop    ebx
  41c76c:	mov    esp,ebp
  41c76e:	pop    ebp
  41c76f:	ret    0x1c
  41c772:	push   ebp
  41c773:	mov    ebp,esp
  41c775:	sub    esp,0xc
  41c778:	mov    eax,0xf89c85b9
  41c77d:	mov    DWORD PTR [ebp-0x8],eax
  41c780:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41c787:	mov    ecx,DWORD PTR [ebp-0x8]
  41c78a:	xor    ecx,0x7510899
  41c790:	add    ecx,0x3272e0
  41c796:	mov    DWORD PTR [ebp-0x4],ecx
  41c799:	mov    ecx,DWORD PTR [ebp+0xc]
  41c79c:	push   eax
  41c79d:	mov    DWORD PTR [ebp+0xc],ecx
  41c7a0:	push   DWORD PTR [ebp+0xc]
  41c7a3:	lea    eax,[ebp-0x4]
  41c7a6:	push   DWORD PTR [ebp+0x8]
  41c7a9:	push   eax
  41c7aa:	push   DWORD PTR [ebp+0xc]
  41c7ad:	push   DWORD PTR [ebp-0xc]
  41c7b0:	push   DWORD PTR [ebp-0x8]
  41c7b3:	call   0x41c5fb
  41c7b8:	mov    DWORD PTR [ebp-0x4],eax
  41c7bb:	mov    eax,DWORD PTR [ebp-0x4]
  41c7be:	leave  
  41c7bf:	ret    0x8
  41c7c2:	jg     0x41c778
  41c7c4:	jge    0xf7418799
  41c7ca:	xor    BYTE PTR [ebp+0x4f0a916e],0x8b
  41c7d1:	mov    al,ds:0x13f3e
  41c7d6:	sub    al,0x3
  41c7d8:	add    BYTE PTR [eax],al
  41c7da:	dec    ecx
  41c7db:	nop
  41c7dc:	mov    dh,0xee
  41c7de:	fild   WORD PTR [ebx+0x370294ed]
  41c7e4:	sbb    cl,al
  41c7e6:	xor    ch,bl
  41c7e8:	retf   0xaa21
  41c7eb:	int    0xa3
  41c7ed:	test   BYTE PTR [edx+ecx*8],bh
  41c7f0:	dec    ecx
  41c7f1:	jl     0x41c7ee
  41c7f3:	leave  
  41c7f4:	inc    esp
  41c7f5:	cmp    eax,0x11966f2f
  41c7fa:	push   esi
  41c7fb:	cmp    DWORD PTR [edx+0x22a2a37f],0x628f5935
  41c805:	cli    
  41c806:	cmp    al,0xba
  41c808:	dec    ebx
  41c809:	(bad)  
  41c80a:	cdq    
  41c80b:	mov    ah,0x6
  41c80d:	inc    eax
  41c80e:	imul   ecx,DWORD PTR [ebp+0x75b789f5],0x54548846
  41c818:	lods   eax,DWORD PTR ds:[esi]
  41c819:	dec    eax
  41c81a:	jne    0x41c7ae
  41c81c:	jle    0x41c7da
  41c81e:	sar    bl,1
  41c820:	sub    eax,0xd79db47
  41c825:	fstp   QWORD PTR [edi-0x5b09db9f]
  41c82b:	and    dl,bl
  41c82d:	lock cmp DWORD PTR [ebp+0x25],edi
  41c831:	loopne 0x41c7e0
  41c833:	mov    eax,0xe05fbbac
  41c838:	push   eax
  41c839:	mov    ds:0xaed83e,eax
  41c83e:	add    ebp,ebp
  41c840:	sbb    eax,ecx
  41c842:	mov    DWORD PTR [esi+0x38],esi
  41c845:	int    0x5b
  41c847:	xchg   ebx,eax
  41c848:	clc    
  41c849:	enter  0xa812,0xfd
  41c84d:	dec    ecx
  41c84e:	mov    ecx,0x9f3b3c91
  41c853:	xchg   edi,eax
  41c854:	test   al,0xe3
  41c856:	push   edx
  41c857:	jnp    0x41c89d
  41c859:	xchg   edx,eax
  41c85a:	pop    esi
  41c85b:	push   es
  41c85c:	cmp    al,0xa1
  41c85e:	jne    0x41c89c
  41c860:	loope  0x41c80f
  41c862:	jp     0x41c8da
  41c864:	jno    0x41c83e
  41c866:	add    cl,ch
  41c868:	mov    al,ds:0x3f6a4259
  41c86d:	scas   al,BYTE PTR es:[edi]
  41c86e:	in     al,0xcd
  41c870:	enter  0x8a1,0x8c
  41c874:	push   0xffffff89
  41c876:	push   0xffffff8c
  41c878:	inc    ebx
  41c879:	xchg   ecx,eax
  41c87a:	test   eax,0x11398ef5
  41c87f:	jle    0x41c881
  41c881:	scas   al,BYTE PTR es:[edi]
  41c882:	fsubr  QWORD PTR [ebp+0x4b]
  41c885:	ins    DWORD PTR es:[edi],dx
  41c886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c887:	mov    esi,0xa01e31a1
  41c88c:	stc    
  41c88d:	xchg   esp,eax
  41c88e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c88f:	fld    DWORD PTR ds:0x42274835
  41c895:	dec    esp
  41c896:	lock mov ah,BYTE PTR [ebx]
  41c899:	push   0x34729cf0
  41c89e:	fwait
  41c89f:	jl     0x41c894
  41c8a1:	rol    BYTE PTR [ebx],1
  41c8a3:	lahf   
  41c8a4:	mov    edx,0x1ea4d529
  41c8a9:	mov    bl,0x4c
  41c8ab:	gs pmuludq mm6,mm0
  41c8af:	repnz mov edi,0xe0de829f
  41c8b5:	call   0x391e9f88
  41c8ba:	jmp    0x41c8e1
  41c8bc:	and    DWORD PTR [ebp+0xf33e8a4],0x94260ead
  41c8c6:	mov    eax,DWORD PTR ds:0x7157f66d
  41c8cc:	les    ecx,FWORD PTR [eax-0x60]
  41c8cf:	mul    BYTE PTR [edx+eiz*1-0x36]
  41c8d3:	ins    DWORD PTR es:[edi],dx
  41c8d4:	das    
  41c8d5:	cmc    
  41c8d6:	das    
  41c8d7:	in     eax,dx
  41c8d8:	arpl   WORD PTR [ebp+0x10],bp
  41c8db:	ficom  WORD PTR [ebp+eiz*8-0x3bd46c35]
  41c8e2:	lods   al,BYTE PTR ds:[esi]
  41c8e3:	das    
  41c8e4:	mov    ebx,0xbd7f127e
  41c8e9:	mov    cl,0xd0
  41c8eb:	(bad)  
  41c8ec:	imul   ecx,DWORD PTR [edi],0x6d25a6e8
  41c8f2:	lahf   
  41c8f3:	sbb    DWORD PTR [ebp+0x2951b923],esi
  41c8f9:	jno    0x41c960
  41c8fb:	call   0x3ed1:0x6e3299b5
  41c902:	fsubp  st(1),st
  41c904:	shl    BYTE PTR [ebp-0x24],1
  41c907:	sbb    esp,0x886812e3
  41c90d:	fisub  WORD PTR [ebp+esi*4-0x32]
  41c911:	mov    ebx,0x9c2b4bc1
  41c916:	or     al,0x52
  41c918:	cdq    
  41c919:	test   DWORD PTR [esi],eax
  41c91b:	fwait
  41c91c:	call   0xf80c9a64
  41c921:	pop    edi
  41c922:	xor    edx,DWORD PTR [edx-0x16]
  41c925:	and    eax,0xffffff99
  41c928:	mov    cl,0xc9
  41c92a:	add    BYTE PTR [edx],bh
  41c92c:	enter  0xa9c1,0xb5
  41c930:	xor    al,0x8c
  41c932:	mov    ebx,esi
  41c934:	dec    edi
  41c935:	jnp    0x41c99b
  41c937:	sbb    ah,BYTE PTR [ebx*4-0x5c2e3532]
  41c93e:	adc    dl,al
  41c940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c941:	sbb    ecx,ebp
  41c943:	jge    0x41c8d9
  41c945:	stos   BYTE PTR es:[edi],al
  41c946:	out    0xe4,al
  41c948:	fwait
  41c949:	pop    ebx
  41c94a:	cld    
  41c94b:	scas   al,BYTE PTR es:[edi]
  41c94c:	scas   eax,DWORD PTR es:[edi]
  41c94d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c94e:	call   0x42ca127d
  41c953:	fxch   st(6)
  41c955:	aaa    
  41c956:	retf   
  41c957:	xchg   ebx,eax
  41c958:	(bad)  
  41c959:	and    al,cl
  41c95b:	in     al,0xbe
  41c95d:	retf   
  41c95e:	(bad)  
  41c95f:	clc    
  41c960:	icebp  
  41c961:	loop   0x41c9d8
  41c963:	aas    
  41c964:	adc    dl,BYTE PTR [ebp+0xbd00401]
  41c96a:	cs test al,0x13
  41c96d:	mov    ds:0xc97e5d06,eax
  41c972:	shl    DWORD PTR gs:[esi+0x3],cl
  41c976:	inc    esp
  41c977:	jp     0x41c9e7
  41c979:	xor    BYTE PTR [esi-0x1],dh
  41c97c:	push   ebp
  41c97d:	mov    ebp,0x3ae0d23e
  41c982:	mov    edi,0xbd1300fc
  41c987:	inc    edi
  41c988:	je     0x41c9b5
  41c98a:	mov    eax,0xdf8db79e
  41c98f:	fs shl edx,0xb3
  41c993:	test   BYTE PTR [eax-0x4b],0x5
  41c997:	clc    
  41c998:	test   DWORD PTR [bp+di-0x380b],eax
  41c99d:	sub    edx,DWORD PTR [ecx+0x19f9116f]
  41c9a3:	test   DWORD PTR [ebx],ebp
  41c9a5:	push   ebx
  41c9a6:	call   0x3806:0xa5e98dae
  41c9ad:	pop    esp
  41c9ae:	or     ecx,ebp
  41c9b0:	cmp    BYTE PTR [edx],cl
  41c9b2:	inc    edx
  41c9b3:	add    DWORD PTR [ebx],ebp
  41c9b5:	daa    
  41c9b6:	outs   dx,DWORD PTR ds:[esi]
  41c9b7:	cmp    BYTE PTR [edx+ebp*8],dh
  41c9ba:	push   eax
  41c9bb:	inc    ebp
  41c9bc:	(bad)  
  41c9bd:	pop    es
  41c9be:	pop    ecx
  41c9bf:	adc    al,0x74
  41c9c1:	jge    0x41c94e
  41c9c3:	sbb    ch,BYTE PTR [eax]
  41c9c5:	cmp    ah,0x1
  41c9c8:	push   edi
  41c9c9:	xor    BYTE PTR ds:0x357ef165,al
  41c9cf:	xchg   edx,eax
  41c9d0:	sar    BYTE PTR [edi],0x4b
  41c9d3:	and    eax,0xcbebeb97
  41c9d8:	push   sp
  41c9da:	fist   DWORD PTR [edx-0x35073ba7]
  41c9e0:	pushf  
  41c9e1:	loop   0x41c9ea
  41c9e3:	nop
  41c9e4:	xchg   ecx,eax
  41c9e5:	xchg   esi,eax
  41c9e6:	lahf   
  41c9e7:	aaa    
  41c9e8:	mov    dh,0x90
  41c9ea:	pop    ss
  41c9eb:	mov    ch,cl
  41c9ed:	pop    ebx
  41c9ee:	into   
  41c9ef:	cli    
  41c9f0:	test   DWORD PTR [ebx+edx*1],esp
  41c9f3:	or     bh,ch
  41c9f5:	enter  0xdab7,0x8
  41c9f9:	shl    BYTE PTR [eax-0x24a49e5],1
  41c9ff:	mov    al,0x6
  41ca01:	ret    
  41ca02:	repz dec ebp
  41ca04:	lahf   
  41ca05:	inc    ebx
  41ca06:	inc    ebp
  41ca07:	jmp    0x2625:0x18fdcc5c
  41ca0e:	sbb    DWORD PTR [ecx],ebp
  41ca10:	bound  esi,QWORD PTR [edx]
  41ca12:	cld    
  41ca13:	push   ebp
  41ca14:	adc    eax,0x115a81c4
  41ca19:	cs enter 0x8aea,0xed
  41ca1e:	pushf  
  41ca1f:	inc    ecx
  41ca20:	pop    edx
  41ca21:	rcl    dl,1
  41ca23:	push   edi
  41ca24:	retf   0x6d18
  41ca27:	shl    DWORD PTR [ecx+0x47],cl
  41ca2a:	adc    edx,ecx
  41ca2c:	cdq    
  41ca2d:	pop    edx
  41ca2e:	fwait
  41ca2f:	sbb    ebx,DWORD PTR [ebx+0x6b]
  41ca32:	pusha  
  41ca33:	sar    edi,cl
  41ca35:	int3   
  41ca36:	mov    dh,0x5b
  41ca38:	mov    edx,DWORD PTR [esi-0x17]
  41ca3b:	mov    bh,0x96
  41ca3d:	aam    0xb6
  41ca3f:	(bad)  
  41ca40:	adc    BYTE PTR [edi],ah
  41ca42:	inc    ebx
  41ca43:	pop    es
  41ca44:	mov    BYTE PTR [ecx+esi*2+0x52e04edc],cl
  41ca4b:	fs xor eax,0xfadc61f3
  41ca51:	jne    0x41ca4f
  41ca53:	mov    dh,0xee
  41ca55:	push   DWORD PTR [ebx-0x74f2836a]
  41ca5b:	push   0x5f
  41ca5d:	cmp    DWORD PTR [ebp-0x73],ebx
  41ca60:	push   edx
  41ca61:	lock das 
  41ca63:	sub    cl,cl
  41ca65:	nop
  41ca66:	xchg   ebp,eax
  41ca67:	jmp    0x12f4:0x9cc665d2
  41ca6e:	mov    dl,dh
  41ca70:	out    dx,eax
  41ca71:	fnstsw WORD PTR [edx+0x6978ed64]
  41ca77:	loope  0x41ca15
  41ca79:	or     DWORD PTR [eax],0xad02cc4b
  41ca7f:	sbb    DWORD PTR [ebp-0x18],ebp
  41ca82:	iret   
  41ca83:	inc    ecx
  41ca84:	add    al,0xc3
  41ca86:	push   ecx
  41ca87:	loopne 0x41cac2
  41ca89:	ja     0x41cafc
  41ca8b:	aas    
  41ca8c:	push   ecx
  41ca8d:	add    BYTE PTR [ebx+ecx*2-0x1a3cca39],0xf1
  41ca95:	pop    esi
  41ca96:	cwde   
  41ca97:	repz cmp ebp,ecx
  41ca9a:	(bad)  
  41ca9b:	into   
  41ca9c:	sub    edi,0xffffffc4
  41ca9f:	shl    cl,0x2
  41caa2:	mov    esp,0x14d2ca20
  41caa7:	ss or  al,0xa4
  41caaa:	mov    edi,0xdb7caa3c
  41caaf:	adc    al,0x3c
  41cab1:	call   0x4383:0x15474adc
  41cab8:	test   eax,0x8a82f4fa
  41cabd:	std    
  41cabe:	mov    edx,ebp
  41cac0:	or     cl,cl
  41cac2:	jbe    0x41cb06
  41cac4:	dec    esp
  41cac5:	push   ecx
  41cac6:	lods   al,BYTE PTR ds:[esi]
  41cac7:	xchg   DWORD PTR [edx+0x41267d83],edx
  41cacd:	test   ecx,eax
  41cacf:	test   al,0x3c
  41cad1:	shl    DWORD PTR [ebp+0x33f2f41f],1
  41cad7:	add    bl,BYTE PTR [ecx+0x31]
  41cada:	mov    dh,0x7a
  41cadc:	inc    esi
  41cadd:	sar    BYTE PTR [esp+edx*1-0x31797689],1
  41cae4:	mov    DWORD PTR [esi-0x54],edx
  41cae7:	ins    BYTE PTR es:[edi],dx
  41cae8:	pop    ebp
  41cae9:	jns    0x41cb55
  41caeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caec:	fadd   DWORD PTR [ecx+0x396a15dc]
  41caf2:	retf   
  41caf3:	cs pop eax
  41caf5:	dec    edx
  41caf6:	cmp    al,0x5f
  41caf8:	scas   al,BYTE PTR es:[edi]
  41caf9:	ds push 0x680611d0
  41caff:	fnstsw WORD PTR [edx]
  41cb01:	scas   eax,DWORD PTR es:[edi]
  41cb02:	fbld   TBYTE PTR [edx-0x4]
  41cb05:	ret    
	...
  41cb12:	ja     0x41cb60
  41cb14:	idiv   dh
  41cb16:	(bad)  
  41cb17:	(bad)  
  41cb18:	jg     0x41cae7
  41cb1a:	mov    ah,0x6b
  41cb1c:	mov    dh,0x14
  41cb1e:	xor    eax,0x6a983478
  41cb23:	inc    edx
  41cb24:	add    DWORD PTR [eax],eax
  41cb26:	sub    al,0x3
  41cb28:	add    BYTE PTR [eax],al
  41cb2a:	add    ah,ah
  41cb2c:	xchg   edi,eax
  41cb2d:	add    BYTE PTR [edx-0x6ce5bbc0],0x10
  41cb34:	cwde   
  41cb35:	push   edx
  41cb36:	icebp  
  41cb37:	add    BYTE PTR [ebp+0x21],al
  41cb3a:	adc    al,cl
  41cb3c:	jmp    0x687e921b
  41cb41:	xchg   esi,eax
  41cb42:	mov    esp,0xca0796fb
  41cb47:	pop    eax
  41cb48:	and    edx,eax
  41cb4a:	xor    BYTE PTR [ebx-0x18],0xe8
  41cb4e:	jmp    0xf39e8faa
  41cb53:	push   esp
  41cb54:	lods   al,BYTE PTR ds:[esi]
  41cb55:	lods   al,BYTE PTR ds:[esi]
  41cb56:	iret   
  41cb57:	cmp    dl,BYTE PTR [ebp+0x4ce94312]
  41cb5d:	(bad)  
  41cb5e:	adc    ah,BYTE PTR [eax-0x168c5f9d]
  41cb64:	aas    
  41cb65:	mov    WORD PTR [ecx+0x474235fd],cs
  41cb6b:	(bad)
  41cb6e:	xchg   esi,eax
  41cb6f:	fs add al,bh
  41cb72:	mov    bl,0xe2
  41cb74:	push   edi
  41cb75:	mov    bl,BYTE PTR [eax]
  41cb77:	sub    esi,edi
  41cb79:	sub    esi,esi
  41cb7b:	rcr    BYTE PTR [edi],0x2e
  41cb7e:	stos   BYTE PTR es:[edi],al
  41cb7f:	nop
  41cb80:	inc    ebx
  41cb81:	out    0xe4,eax
  41cb83:	scas   eax,DWORD PTR es:[edi]
  41cb84:	or     BYTE PTR [esi-0x1f3cf38a],dl
  41cb8a:	lahf   
  41cb8b:	iret   
  41cb8c:	push   esi
  41cb8d:	inc    ebx
  41cb8e:	mov    ah,0x8b
  41cb90:	in     eax,0x30
  41cb92:	add    BYTE PTR [edi-0x102931e4],cl
  41cb98:	stc    
  41cb99:	mov    esi,0x4fbb718b
  41cb9e:	mov    ebp,DWORD PTR [ebx]
  41cba0:	clc    
  41cba1:	and    DWORD PTR [eax+0x64adb0ee],0x2c
  41cba8:	push   ds
  41cba9:	push   ds
  41cbaa:	xchg   edi,eax
  41cbab:	iret   
  41cbac:	imul   edi,ebp,0x3310b044
  41cbb2:	sub    al,0xbe
  41cbb4:	pusha  
  41cbb5:	xor    ch,BYTE PTR ds:0xe7638897
  41cbbb:	(bad)  
  41cbbe:	sbb    al,dl
  41cbc0:	js     0x41cb54
  41cbc2:	or     eax,DWORD PTR ds:0x8f2f369c
  41cbc8:	jmp    0xbe1f4b08
  41cbcd:	push   esp
  41cbce:	pop    esp
  41cbcf:	lahf   
  41cbd0:	or     cl,bl
  41cbd2:	out    dx,eax
  41cbd3:	bound  ebx,QWORD PTR [edi]
  41cbd5:	stos   DWORD PTR es:[edi],eax
  41cbd6:	xor    DWORD PTR ds:0x1befae0e,eax
  41cbdc:	or     DWORD PTR [ecx-0x1c],ebx
  41cbdf:	inc    edx
  41cbe0:	test   BYTE PTR [edx],ch
  41cbe2:	repz mov ch,0x2b
  41cbe5:	add    eax,0xa31271e
  41cbea:	pop    ebp
  41cbeb:	sbb    BYTE PTR [ebx],ah
  41cbed:	shl    BYTE PTR [esi+0x3b],1
  41cbf0:	cmp    al,0xeb
  41cbf2:	aas    
  41cbf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbf4:	pop    ebp
  41cbf5:	and    DWORD PTR [ecx+edx*8],edi
  41cbf8:	inc    ebp
  41cbf9:	inc    edx
  41cbfa:	adc    dl,BYTE PTR [esi-0x7b43194e]
  41cc00:	mov    dl,0x76
  41cc02:	push   esi
  41cc03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc04:	jp     0x41cbed
  41cc06:	(bad)  
  41cc07:	adc    al,BYTE PTR [eax]
  41cc09:	inc    edx
  41cc0a:	out    dx,al
  41cc0b:	push   esi
  41cc0c:	retf   
  41cc0d:	jge    0x41cc73
  41cc0f:	ror    al,cl
  41cc11:	sub    DWORD PTR [edx],esi
  41cc13:	add    al,0x44
  41cc15:	adc    al,0xed
  41cc17:	std    
  41cc18:	shl    DWORD PTR ds:0xb3a9d1d3,0x23
  41cc1f:	in     eax,dx
  41cc20:	lods   al,BYTE PTR ds:[esi]
  41cc21:	and    al,0xc2
  41cc23:	scas   al,BYTE PTR es:[edi]
  41cc24:	cmp    al,dh
  41cc26:	fs scas eax,DWORD PTR es:[edi]
  41cc28:	pop    eax
  41cc29:	pop    ecx
  41cc2a:	pop    ebx
  41cc2b:	popf   
  41cc2c:	and    al,0xe2
  41cc2e:	daa    
  41cc2f:	leave  
  41cc30:	xor    edx,0x71
  41cc33:	sub    DWORD PTR [edx+0x17f23334],ebx
  41cc39:	mov    DWORD PTR [esi-0x27c0883],esi
  41cc3f:	sub    BYTE PTR [ecx],bl
  41cc41:	jecxz  0x41cbe8
  41cc43:	inc    ecx
  41cc44:	pop    es
  41cc45:	in     al,0x84
  41cc47:	xchg   edi,eax
  41cc48:	mov    bh,0x59
  41cc4a:	stos   DWORD PTR es:[edi],eax
  41cc4b:	xchg   esp,eax
  41cc4c:	aas    
  41cc4d:	pusha  
  41cc4e:	push   esi
  41cc4f:	add    BYTE PTR [edx-0x1],dh
  41cc52:	jbe    0x41cbd8
  41cc54:	mov    eax,0x5beaf1b2
  41cc59:	shl    BYTE PTR [esi-0x640d0c48],1
  41cc5f:	and    DWORD PTR [eax],edi
  41cc61:	mov    DWORD PTR [eax],esi
  41cc63:	rcr    DWORD PTR [eax],0xcd
  41cc66:	xor    BYTE PTR [ecx+0x14],ch
  41cc69:	add    edx,DWORD PTR ds:0xe2f0fcb9
  41cc6f:	repz bound ebx,QWORD PTR [edi+0x7d]
  41cc73:	or     eax,0x8d080d9e
  41cc78:	cwde   
  41cc79:	ja     0x41cc9e
  41cc7b:	push   ss
  41cc7c:	pop    es
  41cc7d:	mov    edx,DWORD PTR [edx-0xc]
  41cc80:	cld    
  41cc81:	jns    0x41cc7b
  41cc83:	cld    
  41cc84:	loope  0x41cccc
  41cc86:	jg     0x41ccef
  41cc88:	fisubr DWORD PTR [eax]
  41cc8b:	mov    bh,0xa3
  41cc8d:	adc    al,0x6a
  41cc8f:	jbe    0x41cc23
  41cc91:	add    al,0x82
  41cc93:	mov    al,0x81
  41cc95:	push   0x5aee5b8f
  41cc9a:	scas   eax,DWORD PTR es:[edi]
  41cc9b:	xchg   ecx,eax
  41cc9c:	mov    al,0x62
  41cc9e:	mov    esp,0xeecf62a6
  41cca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cca4:	psubq  mm2,QWORD PTR [esi+0x48]
  41cca8:	mov    ah,0xed
  41ccaa:	or     ah,dl
  41ccac:	clc    
  41ccad:	es push ebx
  41ccaf:	(bad)  
  41ccb0:	push   0xffffff8b
  41ccb2:	adc    DWORD PTR [edi+edx*8-0x4f196eb5],esp
  41ccb9:	stos   DWORD PTR es:[edi],eax
  41ccba:	push   esi
  41ccbb:	inc    ecx
  41ccbc:	xchg   ebx,eax
  41ccbd:	pop    ebx
  41ccbe:	push   ebx
  41ccbf:	sbb    eax,0x99808ccb
  41ccc4:	mov    gs,WORD PTR [edx+0x6]
  41ccc7:	bound  ecx,QWORD PTR ds:[esp+edx*2+0x12]
  41cccc:	fiadd  WORD PTR [edx+0x2c2d8e47]
  41ccd2:	sub    eax,0x8029a717
  41ccd7:	mov    fs:0x4eb68d7f,al
  41ccdd:	lods   al,BYTE PTR ds:[esi]
  41ccde:	adc    eax,0xd0fe6b7f
  41cce3:	in     eax,dx
  41cce4:	pop    edi
  41cce5:	(bad)  
  41cce7:	xchg   DWORD PTR [esi-0x15],eax
  41ccea:	in     al,dx
  41cceb:	mov    esp,0xd620bf8e
  41ccf0:	pop    ds
  41ccf1:	aas    
  41ccf2:	pop    ebp
  41ccf3:	mov    ah,0x63
  41ccf5:	jge    0x41cc85
  41ccf7:	or     BYTE PTR [ebx],ah
  41ccf9:	lahf   
  41ccfa:	fld    DWORD PTR [ecx+0x70]
  41ccfd:	pop    esp
  41ccfe:	mov    ds:0xee7d39f9,al
  41cd03:	mov    dh,0x27
  41cd05:	xchg   ebx,eax
  41cd06:	inc    ebp
  41cd07:	xor    eax,0x410226d1
  41cd0c:	xor    DWORD PTR [ebp+esi*1+0x19d56b51],ebx
  41cd13:	gs push eax
  41cd15:	(bad)  
  41cd16:	int3   
  41cd17:	xchg   esp,eax
  41cd18:	mov    BYTE PTR [edi],bl
  41cd1a:	push   edx
  41cd1b:	add    BYTE PTR [esi-0x52],ch
  41cd1e:	adc    al,0x2d
  41cd20:	push   DWORD PTR [edx-0x25fa4fe8]
  41cd26:	repz mov al,0xf7
  41cd29:	movaps XMMWORD PTR [edx],xmm6
  41cd2c:	and    al,0x45
  41cd2e:	call   0xea4e:0x1595e533
  41cd35:	mov    dl,0x4f
  41cd37:	mov    edi,0xcfc35a67
  41cd3c:	xor    ecx,ecx
  41cd3e:	out    0x5b,eax
  41cd40:	xor    eax,edi
  41cd42:	fnstsw WORD PTR [eax-0x5]
  41cd45:	arpl   sp,di
  41cd47:	lahf   
  41cd48:	xor    al,BYTE PTR [esi]
  41cd4a:	pushf  
  41cd4b:	inc    ebx
  41cd4c:	clc    
  41cd4d:	jmp    0xd3858a4a
  41cd52:	pop    ecx
  41cd53:	or     eax,0x2805042f
  41cd58:	mov    al,es:0x29465f52
  41cd5e:	mov    ebp,0x3ca06987
  41cd63:	xor    ebx,ebp
  41cd65:	cli    
  41cd66:	xchg   ebp,eax
  41cd67:	sub    eax,0x624d8332
  41cd6c:	in     al,dx
  41cd6d:	cmc    
  41cd6e:	test   eax,0xeb8e8a97
  41cd73:	in     eax,0x7c
  41cd75:	cld    
  41cd76:	inc    ebx
  41cd77:	ds pop es
  41cd79:	sbb    edi,ebp
  41cd7b:	sbb    edi,DWORD PTR [ebx]
  41cd7d:	xchg   ebp,eax
  41cd7e:	add    edi,DWORD PTR [ebx-0x98d86ec]
  41cd84:	lock ficomp WORD PTR [edi]
  41cd87:	cmc    
  41cd88:	ja     0x41cdfc
  41cd8a:	scas   al,BYTE PTR es:[edi]
  41cd8b:	mov    al,ds:0x70a1219f
  41cd90:	mov    ebx,0x4713862f
  41cd95:	sti    
  41cd96:	xchg   BYTE PTR [ebx+0x4ad17e7e],ah
  41cd9c:	mov    WORD PTR [ecx],?
  41cd9e:	xchg   ebp,eax
  41cd9f:	add    eax,0xdd7d558a
  41cda4:	(bad)  [ebp+0x55]
  41cda7:	mov    al,ds:0x7c49d59d
  41cdac:	sar    BYTE PTR [eax-0x60e48fae],1
  41cdb2:	mov    cl,0x21
  41cdb4:	push   0xffffff8a
  41cdb6:	loope  0x41ce12
  41cdb8:	sub    al,0xb6
  41cdba:	cmp    eax,0x8270c43
  41cdbf:	adc    eax,0x8160183a
  41cdc4:	jbe    0x41cdc6
  41cdc6:	add    DWORD PTR [ebp-0x251e3754],eax
  41cdcc:	sbb    al,0x83
  41cdce:	pop    ds
  41cdcf:	out    0x2c,eax
  41cdd1:	cmp    DWORD PTR [bx+di-0x7d],esi
  41cdd5:	enter  0xeed4,0xc8
  41cdd9:	add    eax,0x901e1db7
  41cdde:	pop    ds
  41cddf:	mov    cs:0x34d482c3,eax
  41cde5:	mov    ecx,0x2b216c3f
  41cdea:	xchg   ebx,eax
  41cdeb:	aaa    
  41cdec:	and    bl,BYTE PTR [ebx+edx*2+0x13]
  41cdf0:	loopne 0x41cdb2
  41cdf2:	cmp    DWORD PTR [ebx-0x2],esi
  41cdf5:	(bad)  
  41cdf6:	cs pop esp
  41cdf8:	fmul   DWORD PTR [eax-0x36]
  41cdfb:	loope  0x41ce11
  41cdfd:	mov    ebx,0xecf757ef
  41ce02:	adc    edx,eax
  41ce04:	mov    dh,0x9d
  41ce06:	lds    edi,FWORD PTR [ecx]
  41ce08:	sub    BYTE PTR [eax],dl
  41ce0a:	inc    edi
  41ce0b:	inc    edx
  41ce0c:	pusha  
  41ce0d:	setb   BYTE PTR [esi+0x3bdf871b]
  41ce14:	mulps  xmm5,XMMWORD PTR ds:0x25360b8c
  41ce1b:	sar    BYTE PTR [ecx-0x5a8655e4],0x6d
  41ce22:	adc    dl,BYTE PTR [esp+esi*2+0x330c9887]
  41ce29:	fsub   QWORD PTR [eax-0x7c]
  41ce2c:	add    eax,0x13f41d85
  41ce31:	not    bl
  41ce33:	pusha  
  41ce34:	or     ah,dl
  41ce36:	into   
  41ce37:	sbb    BYTE PTR [edx],0xe8
  41ce3a:	scas   eax,DWORD PTR es:[edi]
  41ce3b:	push   cs
  41ce3c:	mov    edi,0x6e58f371
  41ce41:	enter  0xd112,0x67
  41ce45:	jmp    0xde836c75
  41ce4a:	dec    eax
  41ce4b:	push   esp
  41ce4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce4d:	inc    edi
  41ce4e:	mov    dl,0xda
  41ce50:	fs das 
  41ce52:	aam    0x14
  41ce54:	in     al,dx
  41ce55:	jg     0x41ce57
	...
  41ce5f:	add    BYTE PTR [eax],al
  41ce61:	add    BYTE PTR [edi],al
  41ce63:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41ce69:	pop    ds
  41ce6a:	xchg   BYTE PTR [ebx],bl
  41ce6c:	mov    edx,0x97f3b2d0
  41ce71:	cmp    DWORD PTR [esi+0x2c000145],edx
  41ce77:	add    eax,DWORD PTR [eax]
  41ce79:	add    BYTE PTR [esi+ecx*1+0x5],al
  41ce7d:	mov    cl,0xbf
  41ce7f:	xchg   edx,eax
  41ce80:	cwde   
  41ce81:	mov    eax,ds:0x6ff5446
  41ce86:	or     al,0xfb
  41ce88:	shr    DWORD PTR [edx-0xd],1
  41ce8b:	fmul   DWORD PTR [edi-0x22f2a61e]
  41ce91:	inc    ebp
  41ce92:	mov    ah,0x76
  41ce94:	bound  edx,QWORD PTR [ecx+0x6571413e]
  41ce9a:	jg     0x41ceec
  41ce9c:	mov    dh,0x43
  41ce9e:	mov    ah,0xfc
  41cea0:	popa   
  41cea1:	jmp    0x41cecf
  41cea3:	out    0x8e,al
  41cea5:	mov    esp,DWORD PTR [ebp-0x5ebb4a45]
  41ceab:	and    dh,bl
  41cead:	xor    al,0x7c
  41ceaf:	or     al,0x3f
  41ceb1:	js     0x41ceac
  41ceb3:	cmp    eax,0x36be1128
  41ceb8:	popa   
  41ceb9:	jnp    0x41cf24
  41cebb:	ss cs sbb al,0xc0
  41cebf:	retf   0x3f46
  41cec2:	inc    ebx
  41cec3:	jae    0x41ce84
  41cec5:	(bad)  
  41cec6:	xor    BYTE PTR [esi+0x5bf2881e],dl
  41cecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cecd:	in     eax,dx
  41cece:	mov    BYTE PTR [edi+0x4a10c4fc],bh
  41ced4:	pop    ebx
  41ced5:	scas   eax,DWORD PTR es:[edi]
  41ced6:	add    DWORD PTR [eax-0xd7356f9],esp
  41cedc:	add    ah,0x51
  41cedf:	xchg   esi,eax
  41cee0:	jnp    0x41cec2
  41cee2:	fild   DWORD PTR [ebp+0x300288a9]
  41cee8:	fdivr  QWORD PTR [ebp+edx*4+0x21]
  41ceec:	dec    ecx
  41ceed:	add    al,0xec
  41ceef:	sbb    cl,BYTE PTR [ecx+0x6c]
  41cef2:	jp     0x41cf23
  41cef4:	dec    edx
  41cef5:	mov    esp,0x634302f5
  41cefa:	xor    edx,DWORD PTR [edi]
  41cefc:	pop    ebp
  41cefd:	outs   dx,BYTE PTR ds:[esi]
  41cefe:	in     al,0x28
  41cf00:	in     al,0x8f
  41cf02:	(bad)  
  41cf03:	pop    edx
  41cf04:	jp     0x41ce87
  41cf06:	mov    ah,BYTE PTR [esi+0x9]
  41cf09:	jno    0x41cf44
  41cf0b:	das    
  41cf0c:	push   ds
  41cf0d:	jmp    0x41cf66
  41cf0f:	sbb    al,0x56
  41cf11:	mov    esp,0x6624fb0d
  41cf16:	xchg   edx,eax
  41cf17:	jmp    0x41cf1d
  41cf19:	pop    edx
  41cf1a:	mov    al,ds:0xa77cbcc4
  41cf1f:	and    BYTE PTR [edx-0x1b],al
  41cf22:	xchg   edi,eax
  41cf23:	xor    eax,0xa0c32dbb
  41cf28:	mov    cl,0xbd
  41cf2a:	test   dh,cl
  41cf2c:	cli    
  41cf2d:	shr    BYTE PTR [edx],cl
  41cf2f:	imul   ebp,DWORD PTR [edi+0x11],0xbb6607cb
  41cf36:	inc    ecx
  41cf37:	popa   
  41cf38:	mul    BYTE PTR [edi+0x5f6086d6]
  41cf3e:	sub    DWORD PTR [ebx+0x48],edi
  41cf41:	rcr    BYTE PTR [ebp-0x121a1e05],0xc8
  41cf48:	loop   0x41cfbe
  41cf4a:	(bad)  
  41cf4c:	inc    edi
  41cf4d:	jnp    0x41cf91
  41cf4f:	stos   DWORD PTR es:[edi],eax
  41cf50:	or     al,0x91
  41cf52:	in     eax,dx
  41cf53:	sub    edi,DWORD PTR [edx+0x64b8620b]
  41cf59:	jnp    0x41cee0
  41cf5b:	out    0xd3,al
  41cf5d:	test   DWORD PTR [esi+0x60238169],esp
  41cf63:	das    
  41cf64:	jmp    0x41cf7f
  41cf66:	push   esp
  41cf67:	mov    ds:0x8c8f2494,al
  41cf6c:	out    dx,al
  41cf6d:	fst    DWORD PTR [esi+0x19]
  41cf70:	xchg   esi,eax
  41cf71:	adc    bh,bl
  41cf73:	add    dh,cl
  41cf75:	pushf  
  41cf76:	clc    
  41cf77:	std    
  41cf78:	sbb    DWORD PTR [ecx+0x49b2c015],esi
  41cf7e:	or     DWORD PTR [ecx],ebp
  41cf80:	clc    
  41cf81:	rcl    edi,0xab
  41cf84:	lds    ebx,FWORD PTR [esi]
  41cf86:	or     esi,ebx
  41cf88:	cli    
  41cf89:	in     al,dx
  41cf8a:	aas    
  41cf8b:	push   esi
  41cf8c:	and    al,0x2c
  41cf8e:	ret    0x3c5d
  41cf91:	int    0x1d
  41cf93:	je     0x41cf72
  41cf95:	push   ebx
  41cf96:	push   esi
  41cf97:	cmp    al,0x1e
  41cf99:	pop    es
  41cf9a:	jo     0x41cfef
  41cf9c:	adc    eax,0x12d035bf
  41cfa1:	sbb    BYTE PTR [edi+0xfb16ea6],ch
  41cfa7:	rol    DWORD PTR [esi+eax*4+0x61],cl
  41cfab:	leave  
  41cfac:	ret    0x99f7
  41cfaf:	mov    ah,0xa9
  41cfb1:	dec    ebp
  41cfb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfb3:	dec    esi
  41cfb4:	lock mov BYTE PTR [edx+ebx*4-0x15],dl
  41cfb9:	rol    BYTE PTR [edi],0xa3
  41cfbc:	(bad)  
  41cfbd:	icebp  
  41cfbe:	out    0x15,eax
  41cfc0:	lea    esp,ds:0x99870923
  41cfc6:	inc    ecx
  41cfc7:	mov    DWORD PTR [edx],ebp
  41cfc9:	cmp    ecx,eax
  41cfcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfcc:	out    dx,al
  41cfcd:	ds ret 0x56fa
  41cfd1:	push   esi
  41cfd2:	jge    0x41cf65
  41cfd4:	push   ebx
  41cfd5:	adc    DWORD PTR [eax+0x2d],esi
  41cfd8:	dec    eax
  41cfd9:	(bad)  
  41cfda:	(bad)  
  41cfdc:	out    0x94,eax
  41cfde:	ja     0x41cf6d
  41cfe0:	imul   BYTE PTR [edx-0x5d]
  41cfe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfe4:	in     al,dx
  41cfe5:	je     0x41d001
  41cfe7:	mov    esp,0x89882f4
  41cfec:	jbe    0x41cfc3
  41cfee:	jo     0x41cfa1
  41cff0:	cs je  0x41d01c
  41cff3:	cmp    BYTE PTR [ebx],0x90
  41cff6:	mov    bh,BYTE PTR [esp+esi*1-0x5bee97b3]
  41cffd:	cmp    DWORD PTR [esp+ebx*8+0x5dbba161],eax
  41d004:	or     eax,0xbcb7e5f8
  41d009:	fst    DWORD PTR [edx+0x607f83bc]
  41d00f:	xor    BYTE PTR [edi-0x53],0x7b
  41d013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d014:	jnp    0x41d05a
  41d016:	add    esi,DWORD PTR [edi+ebx*2-0x4e]
  41d01a:	pusha  
  41d01b:	or     bh,BYTE PTR [edx+0x2d]
  41d01e:	call   0xe8e:0x1badaaa3
  41d025:	dec    ecx
  41d026:	test   al,0x47
  41d028:	cmp    ecx,DWORD PTR [eax-0x47e37be0]
  41d02e:	sahf   
  41d02f:	iret   
  41d030:	sbb    eax,0x30db1ee8
  41d035:	pop    ds
  41d036:	call   0xfbf7ab58
  41d03b:	jg     0x41d01f
  41d03d:	or     dl,bl
  41d03f:	ins    BYTE PTR es:[edi],dx
  41d040:	push   edx
  41d041:	int    0x3f
  41d043:	addr16 dec eax
  41d045:	mov    edx,0x47af67b6
  41d04a:	xchg   ebp,esi
  41d04c:	loop   0x41cfdf
  41d04e:	aam    0x3f
  41d050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d051:	mov    bh,0xf1
  41d053:	push   0x44
  41d055:	push   cs
  41d056:	mov    dl,0x18
  41d058:	push   eax
  41d059:	fdivr  st,st(5)
  41d05b:	mov    al,ds:0x4bb909f4
  41d060:	jno    0x41d045
  41d062:	sti    
  41d063:	jge    0x41d086
  41d065:	retf   
  41d066:	push   eax
  41d067:	imul   edi,ebx,0x21bd2c86
  41d06d:	xor    eax,0xd209b3ac
  41d072:	and    al,0x3c
  41d074:	aam    0x56
  41d076:	sbb    al,0x36
  41d078:	clc    
  41d079:	jae    0x41d064
  41d07b:	mul    al
  41d07d:	fs pop esi
  41d07f:	icebp  
  41d080:	outs   dx,DWORD PTR ds:[esi]
  41d081:	iret   
  41d082:	jecxz  0x41d0e6
  41d084:	in     al,dx
  41d085:	inc    esp
  41d086:	push   ecx
  41d087:	sahf   
  41d088:	out    0x4b,eax
  41d08a:	mov    ah,0xee
  41d08c:	fst    DWORD PTR [esp+edx*8+0x5052d027]
  41d093:	dec    esp
  41d094:	shr    BYTE PTR [edx+0x6a],0x38
  41d098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d099:	stc    
  41d09a:	outs   dx,BYTE PTR ds:[esi]
  41d09b:	mov    dh,ch
  41d09d:	pop    ss
  41d09e:	fs sub bh,dl
  41d0a1:	adc    ebp,DWORD PTR [ebx+ebx*1]
  41d0a4:	dec    edx
  41d0a5:	push   edx
  41d0a6:	xor    BYTE PTR [eax+eiz*1],dh
  41d0a9:	dec    ebp
  41d0aa:	jo     0x41d046
  41d0ac:	in     eax,0x31
  41d0ae:	xchg   DWORD PTR [ebx],esp
  41d0b0:	sub    DWORD PTR [eax],ecx
  41d0b2:	cli    
  41d0b3:	inc    esp
  41d0b4:	cmp    BYTE PTR [edx-0x4c56dfa5],dl
  41d0ba:	sub    ebp,DWORD PTR [edi+eax*8-0x49a45bf2]
  41d0c1:	mov    ah,0x4b
  41d0c3:	(bad)  
  41d0c4:	in     eax,dx
  41d0c5:	lea    edx,[eiz*1-0x672e4285]
  41d0cc:	pop    eax
  41d0cd:	cdq    
  41d0ce:	xchg   esi,eax
  41d0cf:	cld    
  41d0d0:	ret    
  41d0d1:	not    DWORD PTR [ebx-0x66e7c7c]
  41d0d7:	push   cs
  41d0d8:	iret   
  41d0d9:	sbb    eax,DWORD PTR [esi]
  41d0db:	nop
  41d0dc:	(bad)  
  41d0dd:	and    al,0xee
  41d0df:	arpl   WORD PTR [ebp-0x32],bx
  41d0e2:	or     eax,0x7112f3f3
  41d0e7:	xchg   DWORD PTR [ebp+0xe0c6323],ebx
  41d0ed:	scas   eax,DWORD PTR es:[edi]
  41d0ee:	mov    ah,0xc2
  41d0f0:	dec    ebp
  41d0f1:	dec    edx
  41d0f2:	inc    edi
  41d0f3:	add    ebx,0xffffffd2
  41d0f6:	xor    ch,BYTE PTR [ecx-0x61]
  41d0f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0fa:	lahf   
  41d0fb:	pop    esp
  41d0fc:	push   esp
  41d0fd:	inc    eax
  41d0fe:	sbb    al,BYTE PTR ds:0xce3c56fc
  41d104:	jb     0x41d13f
  41d106:	imul   esp,eax,0x72
  41d109:	add    eax,0x346dd63c
  41d10e:	mov    bh,0x33
  41d110:	jg     0x41d09f
  41d112:	fs jl  0x41d192
  41d115:	pop    esp
  41d116:	cmp    al,0x73
  41d118:	dec    esi
  41d119:	dec    ecx
  41d11a:	inc    esi
  41d11b:	and    al,0xd9
  41d11d:	mov    ecx,0xe5dd6363
  41d122:	vpcmpgtd xmm3,xmm1,XMMWORD PTR [esi-0x49418496]
  41d12a:	cmp    eax,0x44bbef62
  41d12f:	mov    bh,0x34
  41d131:	and    DWORD PTR [ebx-0x357407d2],edi
  41d137:	repz das 
  41d139:	imul   edx,DWORD PTR [eax],0x68393d5c
  41d13f:	mov    bh,BYTE PTR [edx]
  41d141:	(bad)  
  41d142:	cmp    eax,0x4edb2ae9
  41d147:	aad    0x2f
  41d149:	xor    eax,0x5b13dc6e
  41d14e:	mov    dh,0xbb
  41d150:	adc    BYTE PTR [esi+esi*8-0x17eb51b4],0x25
  41d158:	cwde   
  41d159:	(bad)  
  41d15a:	pop    ebx
  41d15b:	outs   dx,BYTE PTR ds:[esi]
  41d15c:	sbb    ah,BYTE PTR [edi+0x33]
  41d15f:	js     0x41d18c
  41d161:	xchg   ecx,eax
  41d162:	mov    eax,0xf15cdc2d
  41d167:	adc    BYTE PTR [edx-0x570e87c0],ch
  41d16d:	in     al,0x19
  41d16f:	retf   0xeb26
  41d172:	xor    eax,0x226e7ad1
  41d177:	scas   eax,DWORD PTR es:[edi]
  41d178:	jmp    0x41d140
  41d17a:	jmp    0x41d1e5
  41d17c:	in     al,dx
  41d17d:	and    cl,BYTE PTR [ebp-0x1]
  41d180:	adc    DWORD PTR [edi+0x1f0033b1],eax
  41d186:	or     ebx,DWORD PTR [eax+0x1e9bb20]
  41d18c:	fwait
  41d18d:	or     esp,ecx
  41d18f:	adc    al,0x49
  41d191:	loope  0x41d15f
  41d193:	ror    edi,1
  41d195:	jmp    0x59708416
  41d19a:	inc    ecx
  41d19b:	rdmsr  
  41d19d:	in     eax,dx
  41d19e:	mov    esp,0xd80106f6
  41d1a3:	ins    BYTE PTR es:[edi],dx
  41d1a4:	cmp    BYTE PTR ds:0x0,cl
	...
  41d1b2:	push   ds
  41d1b3:	add    al,0xa7
  41d1b5:	(bad)  
  41d1b6:	mov    edi,0xf6dd7ee7
  41d1bb:	jp     0x41d186
  41d1bd:	push   esi
  41d1be:	sbb    BYTE PTR [ebx+0x48c2febe],al
  41d1c4:	add    DWORD PTR [eax],eax
  41d1c6:	sub    al,0x3
  41d1c8:	add    BYTE PTR [eax],al
  41d1ca:	in     eax,dx
  41d1cb:	mov    ds:0xf1c98cd0,al
  41d1d0:	or     BYTE PTR [esi-0x1467d8ab],dh
  41d1d6:	pop    ebp
  41d1d7:	aam    0x50
  41d1d9:	out    dx,al
  41d1da:	cmp    eax,0xc5845742
  41d1df:	sbb    al,0x1a
  41d1e1:	inc    ebp
  41d1e2:	push   edx
  41d1e3:	xor    ecx,eax
  41d1e5:	mov    esp,0xee3e55dc
  41d1ea:	mov    bl,0x49
  41d1ec:	inc    BYTE PTR [edx+ebx*8-0x48]
  41d1f0:	xor    al,0x1
  41d1f2:	dec    ebx
  41d1f3:	cmp    DWORD PTR [ebp*8+0x7d2835a2],ebp
  41d1fa:	retf   
  41d1fb:	sub    al,0x94
  41d1fd:	dec    esi
  41d1fe:	sti    
  41d1ff:	adc    esp,DWORD PTR [edx+0x77]
  41d202:	rcl    DWORD PTR [ebx],cl
  41d204:	xchg   ecx,eax
  41d205:	inc    esp
  41d206:	ret    
  41d207:	jo     0x41d21f
  41d209:	push   edi
  41d20a:	daa    
  41d20b:	das    
  41d20c:	and    al,al
  41d20e:	jecxz  0x41d288
  41d210:	ret    
  41d211:	jmp    0x41d262
  41d213:	jle    0x41d1d1
  41d215:	(bad)  
  41d216:	out    dx,al
  41d217:	jno    0x41d28b
  41d219:	stos   DWORD PTR es:[edi],eax
  41d21a:	push   esi
  41d21b:	and    esi,edx
  41d21d:	adc    DWORD PTR [edi],eax
  41d21f:	sbb    dh,BYTE PTR [ebp-0x36744f27]
  41d225:	cmp    ecx,0x42
  41d228:	fcomip st,st(3)
  41d22a:	fistp  QWORD PTR [ebx+0x7]
  41d22d:	jle    0x41d260
  41d22f:	out    0xd8,al
  41d231:	aas    
  41d232:	cmp    BYTE PTR [esi-0x262a50af],cl
  41d238:	int3   
  41d239:	cs retf 
  41d23b:	int3   
  41d23c:	aas    
  41d23d:	mov    BYTE PTR [esi],bh
  41d23f:	adc    DWORD PTR [edi],0x1e973cdd
  41d245:	and    ch,bh
  41d247:	adc    dh,BYTE PTR [ebp-0x39117ba9]
  41d24d:	jecxz  0x41d27d
  41d24f:	and    al,0xec
  41d251:	call   0x3d69ae17
  41d256:	xor    edx,edi
  41d258:	bound  edi,QWORD PTR [edi]
  41d25a:	push   ds
  41d25b:	push   ebx
  41d25c:	fmul   DWORD PTR [ebp+ebp*1-0x60]
  41d260:	nop
  41d261:	js     0x41d1ed
  41d263:	or     BYTE PTR [edx-0x47],ch
  41d266:	xchg   DWORD PTR [ecx],ebp
  41d268:	loop   0x41d2c1
  41d26a:	jg     0x41d29c
  41d26c:	lods   al,BYTE PTR ds:[esi]
  41d26d:	clc    
  41d26e:	xchg   esp,eax
  41d26f:	ret    0x53c9
  41d272:	retf   0x7e02
  41d275:	jb     0x41d267
  41d277:	mov    ah,0xf9
  41d279:	iret   
  41d27a:	dec    ecx
  41d27b:	inc    ebx
  41d27c:	add    al,0x5b
  41d27e:	xor    BYTE PTR [esi],dl
  41d280:	xchg   edi,eax
  41d281:	stos   DWORD PTR es:[edi],eax
  41d282:	cs pop esi
  41d284:	jle    0x41d215
  41d286:	(bad)  
  41d287:	repnz dec eax
  41d289:	test   DWORD PTR [ebp+0x7e73750f],esp
  41d28f:	and    DWORD PTR [esi],ecx
  41d291:	push   esi
  41d292:	mov    ecx,0x29c4ed13
  41d297:	add    DWORD PTR [ecx-0x61],edx
  41d29a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d29b:	imul   ecx,DWORD PTR [edx],0xe8d47d06
  41d2a1:	adc    al,BYTE PTR [ebx-0x5e]
  41d2a4:	(bad)  
  41d2a5:	and    DWORD PTR [edi+0x218a191b],ecx
  41d2ab:	mov    bh,0x69
  41d2ad:	cmp    ebx,esi
  41d2af:	sbb    BYTE PTR [edi-0x161e2437],bl
  41d2b5:	pop    ss
  41d2b6:	mov    ds:0xb83418d1,eax
  41d2bb:	sub    eax,0x3a9f5b5
  41d2c0:	js     0x41d2c1
  41d2c2:	out    dx,eax
  41d2c3:	add    DWORD PTR [ebx],eax
  41d2c5:	hlt    
  41d2c6:	mov    ds:0xe54551a9,eax
  41d2cb:	ins    DWORD PTR es:[edi],dx
  41d2cc:	arpl   bx,bx
  41d2ce:	nop
  41d2cf:	fs hlt 
  41d2d1:	rcr    dh,1
  41d2d3:	xor    al,0xa0
  41d2d5:	outs   dx,DWORD PTR ds:[esi]
  41d2d6:	(bad)  
  41d2d7:	push   esp
  41d2d8:	fwait
  41d2d9:	dec    ebx
  41d2da:	mov    al,BYTE PTR [ebp+0x2e]
  41d2dd:	shl    BYTE PTR [ecx+esi*1-0x7ef81600],cl
  41d2e4:	and    eax,0xd9489e50
  41d2e9:	and    BYTE PTR [ebx+0x0],0xfa
  41d2ed:	mov    WORD PTR [edi+0x51],gs
  41d2f0:	or     BYTE PTR [edi-0x7005ff24],bl
  41d2f6:	jg     0x41d2e3
  41d2f8:	les    esi,FWORD PTR ds:0x41a07988
  41d2fe:	mov    esp,0x1063dab4
  41d303:	jp     0x41d298
  41d305:	mov    DWORD PTR [edi],eax
  41d307:	sbb    ah,BYTE PTR [edi-0x482b83a6]
  41d30d:	jecxz  0x41d2c6
  41d30f:	and    DWORD PTR [ebx-0x27722465],ebx
  41d315:	mov    ecx,DWORD PTR [ebp-0x18cf8f50]
  41d31b:	jne    0x41d330
  41d31d:	mov    edi,0x9b1cabfa
  41d322:	packuswb mm5,mm2
  41d325:	or     esi,DWORD PTR [ebp-0xfaebaad]
  41d32b:	push   ds
  41d32c:	sar    DWORD PTR [ebx+0x56],cl
  41d32f:	or     dh,BYTE PTR [edx]
  41d331:	and    BYTE PTR [ebx-0x7b],ch
  41d334:	jecxz  0x41d359
  41d336:	lock fstp DWORD PTR [edi+0x5e1bb097]
  41d33d:	add    bl,BYTE PTR [edi]
  41d33f:	int    0xbb
  41d341:	hlt    
  41d342:	or     ebx,DWORD PTR [edi+edi*2]
  41d345:	je     0x41d376
  41d347:	mov    edx,0xd1eaff97
  41d34c:	ss mov bl,0xc
  41d34f:	out    dx,eax
  41d350:	mov    eax,0x1cc78958
  41d355:	daa    
  41d356:	jmp    0x41d334
  41d358:	adc    eax,0xe40c3067
  41d35d:	inc    edx
  41d35e:	push   0x60616070
  41d363:	jo     0x41d378
  41d365:	retf   
  41d366:	mov    ebp,0x675bfc1b
  41d36b:	xor    bh,al
  41d36d:	xchg   edi,eax
  41d36e:	pop    eax
  41d36f:	sbb    al,0x90
  41d371:	push   0xffffff99
  41d373:	rep lods eax,DWORD PTR ds:[esi]
  41d375:	imul   eax,ecx,0x9435a39e
  41d37b:	xor    esi,0x6e8c2548
  41d381:	rol    esi,0xb
  41d384:	out    0xa8,al
  41d386:	push   ebp
  41d387:	out    0x71,al
  41d389:	or     al,0xd8
  41d38b:	pop    es
  41d38c:	mov    eax,ds:0x26d81ff3
  41d391:	rol    bl,1
  41d393:	outs   dx,BYTE PTR ds:[esi]
  41d394:	aad    0x34
  41d396:	or     al,0x5b
  41d398:	mov    ch,0xb1
  41d39a:	shl    DWORD PTR [ebp+0x52],1
  41d39d:	sbb    al,0x97
  41d39f:	(bad)  
  41d3a0:	repnz inc ecx
  41d3a2:	fsubr  QWORD PTR [edx+0x7a7a8ee0]
  41d3a8:	push   cs
  41d3a9:	push   ebx
  41d3aa:	sbb    DWORD PTR [ebx-0x26],0xc27b165c
  41d3b1:	push   ebp
  41d3b2:	test   eax,ebx
  41d3b4:	femms  
  41d3b6:	xchg   esi,eax
  41d3b7:	xor    edx,edi
  41d3b9:	fs nop
  41d3bb:	inc    edx
  41d3bc:	add    edx,DWORD PTR [ebx-0x77]
  41d3bf:	adc    eax,DWORD PTR [edx]
  41d3c1:	inc    esi
  41d3c2:	jo     0x41d3ee
  41d3c4:	jno    0x41d424
  41d3c6:	imul   BYTE PTR [esi+0x5752b341]
  41d3cc:	fcmovbe st,st(7)
  41d3ce:	mov    eax,ds:0xfdc1de40
  41d3d3:	icebp  
  41d3d4:	ja     0x41d35c
  41d3d6:	push   es
  41d3d7:	daa    
  41d3d8:	gs xchg esi,eax
  41d3da:	jae    0x41d3b1
  41d3dc:	pop    esp
  41d3dd:	ret    0x5fca
  41d3e0:	mov    eax,ds:0x702f6589
  41d3e5:	or     eax,0xea93c5de
  41d3ea:	push   ds
  41d3eb:	xchg   edi,eax
  41d3ec:	scas   eax,DWORD PTR es:[edi]
  41d3ed:	add    ebp,eax
  41d3ef:	shl    bl,cl
  41d3f1:	pusha  
  41d3f2:	scas   eax,DWORD PTR es:[edi]
  41d3f3:	fild   QWORD PTR [edi-0x51]
  41d3f6:	xlat   BYTE PTR ds:[ebx]
  41d3f7:	call   0xaf00:0xcd8a1533
  41d3fe:	dec    edx
  41d3ff:	aas    
  41d400:	push   ecx
  41d401:	fldenv [esp+eax*2+0x4520d02c]
  41d408:	jg     0x41d3a1
  41d40a:	jge    0x41d3aa
  41d40c:	push   ebp
  41d40d:	aad    0xe
  41d40f:	mov    esp,0xe9185aa1
  41d414:	stc    
  41d415:	int    0xa5
  41d417:	xchg   esi,eax
  41d418:	fdiv   st,st(6)
  41d41a:	jmp    0x88b0ddd0
  41d41f:	imul   esp,DWORD PTR [ecx+0x2],0xffffffc0
  41d423:	cmp    ebx,DWORD PTR [ebx+0x63]
  41d426:	xchg   DWORD PTR [ebp-0x6e06c2d6],edx
  41d42c:	sub    al,0xc7
  41d42e:	jge    0x41d3da
  41d430:	mov    esp,0xc63b0879
  41d435:	pop    ss
  41d436:	xor    BYTE PTR [edx],dl
  41d438:	add    BYTE PTR [eax-0xdcbcd94],0x30
  41d43f:	add    al,0x5f
  41d442:	fild   QWORD PTR [ecx+0x22]
  41d445:	adc    eax,0x84ebcb86
  41d44a:	adc    bl,ch
  41d44c:	fist   WORD PTR [eax-0x2f2169df]
  41d452:	call   0x67e2:0x76bb01e9
  41d459:	cmp    eax,0x3902463
  41d45e:	mov    ds:0xa6faf9b8,al
  41d463:	inc    ebp
  41d464:	pushf  
  41d465:	test   BYTE PTR [ebx+esi*2],bh
  41d468:	jge    0x41d453
  41d46a:	add    BYTE PTR [ebx],ah
  41d46c:	sbb    bl,ch
  41d46e:	and    al,0x50
  41d470:	xchg   DWORD PTR [ebx+0x3413b3ba],edi
  41d476:	std    
  41d477:	mov    BYTE PTR [edx],al
  41d479:	les    esp,FWORD PTR [edx]
  41d47b:	cmp    DWORD PTR [eax+0x1e7f1f98],eax
  41d481:	iret   
  41d482:	add    bh,bh
  41d484:	cmp    eax,0x296eb26d
  41d489:	push   ds
  41d48a:	icebp  
  41d48b:	ds jmp 0xa5fdb79c
  41d491:	jne    0x41d4c7
  41d493:	cmc    
  41d494:	mov    ecx,0xdf8fa0fb
  41d499:	jmp    0x41d4ab
  41d49b:	pop    esp
  41d49c:	popa   
  41d49d:	pop    eax
  41d49e:	test   al,0x52
  41d4a0:	into   
  41d4a1:	push   es
  41d4a2:	jne    0x41d440
  41d4a4:	call   0xd775ca07
  41d4a9:	repnz push ss
  41d4ab:	shl    DWORD PTR [esi-0x23d3a04a],1
  41d4b1:	adc    ebx,ebp
  41d4b3:	out    0x6a,eax
  41d4b5:	icebp  
  41d4b6:	pusha  
  41d4b7:	sub    ebp,DWORD PTR [edx+0x53]
  41d4ba:	ins    BYTE PTR es:[edi],dx
  41d4bb:	jmp    0x63ea:0x294a4867
  41d4c2:	xchg   ebx,eax
  41d4c3:	jp     0x41d45c
  41d4c5:	add    BYTE PTR [esi+0x58fcda81],ch
  41d4cb:	adc    edx,ebx
  41d4cd:	lock mov ecx,es
  41d4d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4d1:	inc    esp
  41d4d2:	xchg   edx,eax
  41d4d3:	shr    DWORD PTR [esi+0x51],cl
  41d4d6:	dec    esp
  41d4d7:	pop    edi
  41d4d8:	push   edi
  41d4d9:	or     eax,DWORD PTR [esi]
  41d4db:	mov    bl,0xda
  41d4dd:	cmp    esi,edi
  41d4df:	addr16 inc edx
  41d4e1:	mov    esp,0x456041e9
  41d4e6:	test   DWORD PTR [ecx+0x17e5b9df],esi
  41d4ec:	dec    esi
  41d4ed:	addr16 jnp 0x41d4f0
  41d4f0:	(bad)  
  41d4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4f2:	sahf   
  41d4f3:	pop    ebx
  41d4f4:	add    dl,BYTE PTR [ecx]
	...
  41d502:	js     0x41d48d
  41d504:	hlt    
  41d505:	mov    al,0xf5
  41d507:	std    
  41d508:	jl     0x41d4d3
  41d50a:	dec    edi
  41d50b:	pop    ds
  41d50c:	cmp    DWORD PTR [ebx+0x19],ebp
  41d50f:	mov    dh,ch
  41d511:	sbb    eax,0x14bee
  41d516:	sub    al,0x3
  41d518:	add    BYTE PTR [eax],al
  41d51a:	push   ds
  41d51b:	pop    ecx
  41d51c:	jecxz  0x41d4a1
  41d51e:	mov    cl,0x4c
  41d520:	push   0x7d67a72
  41d525:	jmp    0xf18d:0xd23d5c95
  41d52c:	mov    cl,0xb1
  41d52e:	ret    0x882d
  41d531:	cld    
  41d532:	xor    BYTE PTR [edi-0x80],0x43
  41d536:	bound  esp,QWORD PTR [ebp-0x22]
  41d539:	test   DWORD PTR [ecx],ecx
  41d53b:	jge    0x41d4cd
  41d53d:	cli    
  41d53e:	pop    ecx
  41d53f:	push   eax
  41d540:	mov    esp,0xd0efb819
  41d545:	sbb    al,0xf9
  41d547:	dec    ebp
  41d548:	pop    esp
  41d549:	popf   
  41d54a:	rcl    eax,cl
  41d54c:	sub    al,0x7a
  41d54e:	repnz data16 mov dl,0xbc
  41d552:	ret    0xb7b7
  41d555:	adc    BYTE PTR [esi],dl
  41d557:	popf   
  41d558:	dec    eax
  41d559:	push   0x77ae1f78
  41d55e:	jns    0x41d514
  41d560:	ss pushf 
  41d562:	out    dx,al
  41d563:	jge    0x41d592
  41d565:	adc    al,bl
  41d567:	mov    DWORD PTR ds:0xc7b53cf8,ebp
  41d56d:	aam    0xaa
  41d56f:	ins    BYTE PTR es:[edi],dx
  41d570:	cld    
  41d571:	ins    DWORD PTR es:[edi],dx
  41d572:	nop
  41d573:	stos   BYTE PTR es:[edi],al
  41d574:	and    al,0x93
  41d576:	dec    ebp
  41d577:	js     0x41d54d
  41d579:	cmp    eax,0xa8178ca3
  41d57e:	neg    DWORD PTR [ebx]
  41d580:	loope  0x41d51a
  41d582:	cmc    
  41d583:	addr16 icebp 
  41d585:	push   ss
  41d586:	push   edi
  41d587:	push   ecx
  41d588:	mov    dl,0x15
  41d58a:	xor    al,0x6f
  41d58c:	ret    
  41d58d:	cmp    cl,BYTE PTR [ebp+0x24a255b6]
  41d593:	push   ebx
  41d594:	xchg   edx,eax
  41d596:	int3   
  41d597:	aad    0xe
  41d599:	push   0x2b
  41d59b:	inc    esi
  41d59c:	push   ss
  41d59d:	and    al,0xd9
  41d59f:	(bad)  
  41d5a0:	and    al,0x0
  41d5a2:	mov    dl,0x93
  41d5a4:	mov    BYTE PTR [edi],cl
  41d5a6:	fcom   st(2)
  41d5a8:	jns    0x41d5c4
  41d5aa:	or     bh,BYTE PTR [ebx+esi*4+0x46]
  41d5ae:	xchg   ebx,eax
  41d5af:	jle    0x41d55b
  41d5b1:	cwde   
  41d5b2:	daa    
  41d5b3:	ins    BYTE PTR es:[edi],dx
  41d5b4:	sub    BYTE PTR [ecx+0x58f3fe0b],0x18
  41d5bb:	sbb    edx,DWORD PTR [esi-0x7f]
  41d5be:	jo     0x41d621
  41d5c0:	ror    BYTE PTR [edi+0x1e],0x56
  41d5c4:	sub    eax,0xd8a2b5de
  41d5c9:	aaa    
  41d5ca:	nop
  41d5cb:	pop    ds
  41d5cc:	in     al,0x3
  41d5ce:	push   0x3d6d8943
  41d5d3:	inc    esp
  41d5d4:	cmp    al,0x28
  41d5d6:	pop    ebx
  41d5d7:	mov    gs,WORD PTR gs:[esi+0x37]
  41d5db:	cmp    eax,ebp
  41d5dd:	cmc    
  41d5de:	pop    edx
  41d5df:	adc    al,0x2
  41d5e1:	out    dx,al
  41d5e2:	mov    BYTE PTR [edi+0x43],dl
  41d5e5:	cdq    
  41d5e6:	shr    DWORD PTR [eax-0x18],1
  41d5e9:	mov    edx,0x820376a7
  41d5ee:	das    
  41d5ef:	das    
  41d5f0:	xor    BYTE PTR [ecx-0x48],dl
  41d5f3:	ins    DWORD PTR es:[edi],dx
  41d5f4:	out    0x4b,eax
  41d5f6:	dec    esi
  41d5f7:	and    dl,BYTE PTR [ebp-0xf]
  41d5fa:	shr    DWORD PTR [ebp+0x6],0x65
  41d5fe:	loopne 0x41d67b
  41d600:	jge    0x41d58b
  41d602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d603:	sbb    al,0x5c
  41d605:	outs   dx,BYTE PTR ds:[esi]
  41d606:	push   ecx
  41d607:	fiadd  WORD PTR [edx+edx*4-0x6dc581d4]
  41d60e:	sbb    al,0xe
  41d610:	ss push ebp
  41d612:	les    edi,FWORD PTR [edx+0x3f]
  41d615:	jnp    0x41d5cc
  41d617:	clc    
  41d618:	xor    dl,BYTE PTR [edi-0x93ec3d0]
  41d61e:	mov    BYTE PTR [edx],dh
  41d620:	outs   dx,DWORD PTR ds:[esi]
  41d621:	mov    al,0x93
  41d623:	xchg   ebx,eax
  41d624:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d627:	push   ss
  41d628:	cmc    
  41d629:	test   al,0x8f
  41d62b:	fisttp QWORD PTR [edi-0xe]
  41d62e:	addr16 push es
  41d630:	pushf  
  41d631:	sar    eax,0x9f
  41d634:	xor    BYTE PTR [edi-0x24],ch
  41d637:	das    
  41d638:	jecxz  0x41d647
  41d63a:	xchg   ebp,eax
  41d63b:	cmc    
  41d63c:	stos   BYTE PTR es:[edi],al
  41d63d:	test   BYTE PTR [ebx+0x74],0xb4
  41d641:	out    0x18,eax
  41d643:	pushf  
  41d644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d645:	and    al,0xfb
  41d647:	inc    esp
  41d648:	in     eax,0x85
  41d64a:	loop   0x41d6bc
  41d64c:	pop    edx
  41d64d:	jge    0x41d6bd
  41d64f:	and    DWORD PTR [ecx+ebx*8+0x24dff7ea],0x44
  41d657:	sti    
  41d658:	ret    
  41d659:	add    ecx,DWORD PTR [edx+0x69]
  41d65c:	les    edi,FWORD PTR [esi+0x7a]
  41d65f:	and    DWORD PTR [edi],ebx
  41d661:	in     eax,dx
  41d662:	not    DWORD PTR [esp+edi*1+0x7f]
  41d666:	push   edx
  41d667:	popf   
  41d668:	ret    0xca1b
  41d66b:	mov    esp,0x933d99a0
  41d670:	stos   DWORD PTR es:[edi],eax
  41d671:	rol    BYTE PTR [edi-0x70],0xc9
  41d675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d676:	ror    DWORD PTR [eax],0x78
  41d679:	stos   DWORD PTR es:[edi],eax
  41d67a:	jge    0x41d6cd
  41d67c:	lock fucomp st(7)
  41d67f:	ins    DWORD PTR es:[edi],dx
  41d680:	les    edx,FWORD PTR [esi+eax*8]
  41d683:	popf   
  41d684:	pop    eax
  41d685:	xchg   ebx,eax
  41d686:	js     0x41d68f
  41d688:	pop    ebp
  41d689:	mov    ch,0x98
  41d68b:	cwde   
  41d68c:	sub    ebp,DWORD PTR [esi+esi*8]
  41d68f:	adc    BYTE PTR [edi],ah
  41d691:	stos   DWORD PTR es:[di],eax
  41d693:	ret    
  41d694:	push   edi
  41d695:	iret   
  41d696:	inc    esi
  41d697:	icebp  
  41d698:	retf   0x7630
  41d69b:	cmc    
  41d69c:	push   edx
  41d69d:	fadd   st,st(6)
  41d69f:	shl    ah,0x94
  41d6a2:	inc    esp
  41d6a3:	jne    0x41d6a6
  41d6a5:	rol    DWORD PTR [edx+0x7b],cl
  41d6a8:	mov    edi,0x430271b9
  41d6ad:	and    cl,bl
  41d6af:	sbb    eax,0x18069ba0
  41d6b4:	mov    ah,0x7c
  41d6b6:	push   es
  41d6b7:	sbb    BYTE PTR [esi-0x5872d4c8],dh
  41d6bd:	aam    0x17
  41d6bf:	test   eax,0x7741daaa
  41d6c4:	push   es
  41d6c5:	xchg   edi,eax
  41d6c6:	leave  
  41d6c7:	xor    ch,BYTE PTR [ebp-0x27b1300d]
  41d6cd:	sahf   
  41d6ce:	cwde   
  41d6cf:	lea    esi,[edi]
  41d6d1:	mov    ch,0xb5
  41d6d3:	retf   
  41d6d4:	push   ebp
  41d6d5:	ret    
  41d6d6:	or     DWORD PTR [ebx-0x13cbbdaf],eax
  41d6dc:	in     al,dx
  41d6dd:	xchg   edx,eax
  41d6de:	stc    
  41d6df:	xor    al,0x8d
  41d6e1:	pop    ebx
  41d6e2:	push   ds
  41d6e3:	jb     0x41d759
  41d6e5:	jl     0x41d74e
  41d6e7:	jb     0x41d67f
  41d6e9:	mov    ?,WORD PTR [ebx+0x57443a69]
  41d6ef:	icebp  
  41d6f0:	(bad)  [esi+eax*2-0x6d]
  41d6f4:	adc    al,0xe3
  41d6f6:	sub    al,BYTE PTR [edi+eiz*8+0x41]
  41d6fa:	push   esi
  41d6fb:	cld    
  41d6fc:	adc    al,0xd
  41d6fe:	lock das 
  41d700:	or     edi,ecx
  41d702:	inc    ecx
  41d703:	push   esp
  41d704:	or     BYTE PTR [ecx],0xd4
  41d707:	out    dx,al
  41d708:	mov    eax,ds:0x65b3596
  41d70d:	pop    esp
  41d70e:	cmp    DWORD PTR [edi+edi*1],eax
  41d711:	lds    esi,FWORD PTR [eax+eax*2+0x686b623f]
  41d718:	inc    edx
  41d719:	call   0xb99c690b
  41d71e:	pop    eax
  41d71f:	ret    
  41d720:	mov    dl,0xd7
  41d722:	fdiv   st,st(3)
  41d724:	ja     0x41d76e
  41d726:	pop    esi
  41d727:	pop    esp
  41d728:	xor    esi,0xf13018e9
  41d72e:	aam    0x30
  41d730:	not    ebp
  41d732:	push   edi
  41d733:	ror    BYTE PTR [ecx],1
  41d735:	and    al,0x35
  41d737:	repz inc esp
  41d739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d73a:	jge    0x41d79e
  41d73c:	push   eax
  41d73d:	adc    edi,DWORD PTR [ebx]
  41d73f:	imul   esp,DWORD PTR [ebx],0xffffffbc
  41d742:	sbb    DWORD PTR [eax],ecx
  41d744:	jbe    0x41d720
  41d746:	add    eax,0x50ac3434
  41d74b:	(bad)  
  41d74c:	mov    dh,bl
  41d74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d74f:	sbb    DWORD PTR [esi-0x6870ce35],ebp
  41d755:	cld    
  41d756:	xlat   BYTE PTR ds:[ebx]
  41d757:	fistp  WORD PTR [esi+ebp*1]
  41d75a:	ror    BYTE PTR [ecx+0x54],cl
  41d75d:	enter  0xcb7f,0x68
  41d761:	int    0x95
  41d763:	in     eax,dx
  41d764:	ds rol eax,cl
  41d767:	ins    DWORD PTR es:[edi],dx
  41d768:	sbb    al,0xea
  41d76a:	lea    edx,[ecx]
  41d76c:	mov    cl,0xcd
  41d76e:	and    ecx,DWORD PTR [edx-0xf]
  41d771:	rol    DWORD PTR ds:0xbf9e16a7,1
  41d777:	enter  0xf4cd,0x3e
  41d77b:	pop    esp
  41d77c:	pop    edi
  41d77d:	aad    0x75
  41d77f:	fist   WORD PTR [edx]
  41d781:	aas    
  41d782:	sbb    ch,BYTE PTR [ecx+ebp*4+0x2774c1c2]
  41d789:	addr16 (bad) 
  41d78b:	mov    al,ds:0x5aa57a1c
  41d790:	cdq    
  41d791:	sub    BYTE PTR [ecx+0x5d],0x43
  41d795:	or     ah,BYTE PTR [esi]
  41d797:	push   ds
  41d798:	aas    
  41d799:	mov    fs,WORD PTR [ecx+0x16]
  41d79c:	shr    BYTE PTR [edi],cl
  41d79e:	pushf  
  41d79f:	sbb    al,0xd5
  41d7a1:	pusha  
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	imul   eax,DWORD PTR [ecx],0xe495038e
  41d7a9:	aas    
  41d7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7ab:	sti    
  41d7ac:	ret    
  41d7ad:	sbb    eax,0x3c48aa51
  41d7b2:	adc    DWORD PTR [edx+0x11ca4981],edi
  41d7b8:	and    bl,BYTE PTR [ecx]
  41d7ba:	and    BYTE PTR [ebx-0x9334cee],dh
  41d7c0:	(bad)  
  41d7c1:	popa   
  41d7c2:	pop    ds
  41d7c3:	jno    0x41d80a
  41d7c5:	retf   
  41d7c6:	ja     0x41d830
  41d7c8:	mov    eax,0x93a1a9fd
  41d7cd:	stos   BYTE PTR es:[edi],al
  41d7ce:	inc    esp
  41d7cf:	xchg   bh,dl
  41d7d1:	xchg   esi,eax
  41d7d2:	pop    ss
  41d7d3:	rcl    DWORD PTR [edx+0x173c6fdc],cl
  41d7d9:	inc    esp
  41d7da:	fcomip st,st(5)
  41d7dc:	ss clc 
  41d7de:	pop    eax
  41d7df:	jecxz  0x41d797
  41d7e1:	add    al,al
  41d7e3:	jb     0x41d826
  41d7e5:	das    
  41d7e6:	cmp    al,0xb2
  41d7e8:	adc    ebp,DWORD PTR [esi-0x40]
  41d7eb:	popf   
  41d7ec:	or     DWORD PTR [ebx+0x6528109d],ecx
  41d7f2:	out    0x70,eax
  41d7f4:	mov    DWORD PTR [ebp+0x3c],ebx
  41d7f7:	sahf   
  41d7f8:	sar    DWORD PTR ds:0x90408ac0,1
  41d7fe:	xchg   DWORD PTR [ebp+0x4c6c9a84],eax
  41d804:	clc    
  41d805:	push   ss
  41d806:	pop    eax
  41d807:	add    eax,DWORD PTR [ecx+esi*8]
  41d80a:	jmp    0x84c3c505
  41d80f:	(bad)  
  41d810:	add    al,0xfc
  41d812:	xchg   ebx,eax
  41d813:	ret    0x3c51
  41d816:	aas    
  41d817:	leave  
  41d818:	mov    eax,ds:0xd721e3b5
  41d81d:	inc    ecx
  41d81e:	adc    bl,0x8a
  41d821:	aas    
  41d822:	adc    BYTE PTR [ecx+0xa],bl
  41d825:	mov    dh,0xb6
  41d827:	dec    ebp
  41d828:	(bad)  
  41d829:	pusha  
  41d82a:	xchg   ebx,eax
  41d82b:	inc    esi
  41d82c:	sub    al,0x5a
  41d82e:	xchg   edx,eax
  41d82f:	mov    BYTE PTR [eax],dh
  41d831:	add    al,0x2c
  41d833:	add    BYTE PTR [ebx-0x5],0xa0
  41d837:	inc    ebp
  41d838:	adc    ah,bh
  41d83a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d83b:	sbb    bl,BYTE PTR [edx+0x2805cb9d]
  41d841:	push   edi
  41d842:	inc    ebx
  41d843:	mov    ds:0xe00c,al
	...
  41d850:	add    BYTE PTR [eax],al
  41d852:	pop    esp
  41d853:	mov    dh,BYTE PTR [edi-0x23800895]
  41d859:	mov    edi,0xd9de0759
  41d85e:	and    DWORD PTR [eax+0x4f1a057f],edx
  41d864:	add    DWORD PTR [eax],eax
  41d866:	sub    al,0x3
  41d868:	add    BYTE PTR [eax],al
  41d86a:	or     al,0x29
  41d86c:	ins    BYTE PTR es:[edi],dx
  41d86d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d86e:	inc    ecx
  41d86f:	sahf   
  41d870:	les    edx,FWORD PTR [ecx]
  41d872:	icebp  
  41d873:	test   eax,0x722ee416
  41d878:	dec    edi
  41d879:	mov    BYTE PTR [ecx+0x5ae56639],bh
  41d87f:	es retf 0x169c
  41d883:	jbe    0x41d894
  41d885:	dec    eax
  41d886:	inc    edx
  41d887:	sub    eax,edx
  41d889:	jecxz  0x41d835
  41d88b:	add    BYTE PTR [edx],cl
  41d88d:	mov    dl,0xb2
  41d88f:	add    al,0xd3
  41d891:	mov    al,BYTE PTR [edx-0x513d5196]
  41d897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d898:	in     eax,dx
  41d899:	pop    ebx
  41d89a:	jnp    0x41d84b
  41d89c:	jmp    0x11336680
  41d8a1:	fld    TBYTE PTR [ebx]
  41d8a3:	add    DWORD PTR [ebp+0x6e5bfb00],edi
  41d8a9:	test   DWORD PTR [bp+di+0x7f0f],edx
  41d8ae:	pop    esi
  41d8af:	push   ebx
  41d8b0:	push   edx
  41d8b1:	ret    
  41d8b2:	adc    DWORD PTR [ecx-0x7c],edi
  41d8b5:	mov    ch,0xc0
  41d8b7:	loopne 0x41d8d2
  41d8b9:	xor    DWORD PTR [edx],esp
  41d8bb:	sbb    bh,BYTE PTR [eax+0x3e24e958]
  41d8c1:	outs   dx,BYTE PTR ds:[esi]
  41d8c2:	xor    ebx,edi
  41d8c4:	mov    ah,0x8f
  41d8c6:	xor    BYTE PTR [edx],0x3
  41d8c9:	mov    cl,BYTE PTR [esi+0x66]
  41d8cc:	mov    DWORD PTR [edi],esp
  41d8ce:	or     DWORD PTR [edi],eax
  41d8d0:	test   al,0x53
  41d8d2:	pop    eax
  41d8d3:	dec    edi
  41d8d4:	mov    bh,0x69
  41d8d6:	inc    esp
  41d8d7:	popf   
  41d8d8:	hlt    
  41d8d9:	inc    ebp
  41d8da:	dec    edi
  41d8db:	mov    dl,0x24
  41d8dd:	and    al,0xcf
  41d8df:	sar    DWORD PTR [edi],1
  41d8e1:	push   0xffffff84
  41d8e3:	stos   BYTE PTR es:[edi],al
  41d8e4:	xchg   ecx,eax
  41d8e5:	aaa    
  41d8e6:	stos   BYTE PTR es:[edi],al
  41d8e7:	adc    al,0xc1
  41d8e9:	inc    eax
  41d8ea:	sub    eax,0x69f4b2fd
  41d8ef:	fwait
  41d8f0:	mov    dh,BYTE PTR [ebx+0x55]
  41d8f3:	sbb    DWORD PTR [edi+0x1a4587ef],ebx
  41d8f9:	mov    ch,0x70
  41d8fb:	jle    0x41d924
  41d8fd:	hlt    
  41d8fe:	add    bh,dl
  41d900:	lods   eax,DWORD PTR ds:[esi]
  41d901:	repz mov ebp,0x2f6e2a34
  41d907:	xor    edx,DWORD PTR [esi-0xeaf5efd]
  41d90d:	outs   dx,BYTE PTR ds:[esi]
  41d90e:	jno    0x41d8f5
  41d910:	dec    ebx
  41d911:	inc    esi
  41d912:	and    al,0xe8
  41d914:	pop    ebx
  41d915:	bound  ebp,QWORD PTR [edi+0x4dfec703]
  41d91b:	(bad)  
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	jo     0x41d8a7
  41d91f:	jg     0x41d98e
  41d921:	(bad)  
  41d922:	(bad)  
  41d923:	jle    0x41d920
  41d925:	add    al,0xd0
  41d927:	loope  0x41d917
  41d929:	rcr    DWORD PTR [eax],cl
  41d92b:	mov    al,ds:0x301b5a13
  41d930:	loopne 0x41d90e
  41d932:	cmp    edi,edx
  41d934:	jmp    0x5c37caa6
  41d939:	mov    ch,0xba
  41d93b:	sbb    al,0xf
  41d93d:	sub    BYTE PTR [edx-0x2cad872e],bh
  41d943:	inc    esp
  41d944:	ds retf 0x7466
  41d948:	nop
  41d949:	adc    esi,DWORD PTR [ebx+0x65]
  41d94c:	inc    edx
  41d94d:	push   es
  41d94e:	sub    eax,0xcfc7d71a
  41d953:	mov    bl,0xc8
  41d955:	jbe    0x41d957
  41d957:	and    eax,0x3f32c824
  41d95c:	push   ebp
  41d95d:	inc    ebx
  41d95e:	stos   DWORD PTR es:[edi],eax
  41d95f:	mov    bh,0x67
  41d961:	mov    ch,0x6
  41d963:	in     al,0x18
  41d965:	cmovo  esi,DWORD PTR [ecx]
  41d968:	int    0xc3
  41d96a:	mov    eax,0xf09dd066
  41d96f:	mov    ebp,0x89d4b0a6
  41d974:	stos   BYTE PTR es:[edi],al
  41d975:	sahf   
  41d976:	retf   
  41d977:	outs   dx,DWORD PTR ds:[esi]
  41d978:	adc    eax,0xa56809c
  41d97d:	gs xchg esp,eax
  41d97f:	lea    edi,[esi]
  41d981:	mov    edx,0xedae9e94
  41d986:	dec    esi
  41d987:	mov    esi,0x5887d73c
  41d98c:	out    dx,al
  41d98d:	ds or  al,cl
  41d990:	loop   0x41d913
  41d992:	add    ah,BYTE PTR [ecx+eax*4+0x5d]
  41d996:	sub    eax,0x8b3cb868
  41d99b:	enter  0x85c7,0x8f
  41d99f:	bound  edx,QWORD PTR [ebp+0x4fe7ce39]
  41d9a5:	mov    bh,0xc9
  41d9a7:	xchg   DWORD PTR [edx+edx*4+0x3c],eax
  41d9ab:	mov    ebx,0x8f073ab9
  41d9b0:	xchg   edx,eax
  41d9b1:	(bad)  
  41d9b2:	dec    esi
  41d9b3:	out    0x8d,al
  41d9b5:	add    cl,BYTE PTR [ecx-0x13]
  41d9b8:	lods   eax,DWORD PTR ds:[esi]
  41d9b9:	push   es
  41d9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9bb:	vpunpckldq xmm2,xmm1,XMMWORD PTR [edx]
  41d9bf:	aas    
  41d9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9c1:	push   ds
  41d9c2:	call   DWORD PTR [ecx+0x71]
  41d9c5:	pop    edi
  41d9c6:	dec    cx
  41d9c8:	jge    0x41d9da
  41d9ca:	loop   0x41da0b
  41d9cc:	retf   
  41d9cd:	pusha  
  41d9ce:	and    BYTE PTR ds:0xd90e51f4,bl
  41d9d4:	jecxz  0x41d9ed
  41d9d6:	or     al,0x24
  41d9d8:	jno    0x41d96e
  41d9da:	nop
  41d9db:	cmp    cl,bh
  41d9dd:	call   0x921f:0x530f318b
  41d9e4:	(bad)  [esi]
  41d9e6:	mov    ch,0xdf
  41d9e8:	jg     0x41da69
  41d9ea:	int    0x21
  41d9ec:	stc    
  41d9ed:	lahf   
  41d9ee:	fidivr WORD PTR [edx]
  41d9f0:	push   esi
  41d9f1:	je     0x41da3b
  41d9f3:	popf   
  41d9f4:	sti    
  41d9f5:	mov    dl,0x8c
  41d9f7:	push   ebx
  41d9f8:	fistp  DWORD PTR [eax]
  41d9fa:	jecxz  0x41d9a6
  41d9fc:	sti    
  41d9fd:	int    0xed
  41d9ff:	add    DWORD PTR [ebp+0xeae16ed],edi
  41da05:	rcr    ah,1
  41da07:	push   edx
  41da08:	push   cs
  41da09:	add    ch,bl
  41da0b:	imul   edi,DWORD PTR [ebx+0x296e6b92],0x9bcb7c
  41da15:	xor    BYTE PTR [ebp-0x31103962],dl
  41da1b:	jb     0x41da6a
  41da1d:	mov    eax,DWORD PTR [edx-0xc05d454]
  41da23:	push   ecx
  41da24:	dec    DWORD PTR [ebx-0x196734aa]
  41da2a:	pop    es
  41da2b:	xor    dh,BYTE PTR [ecx+eiz*8]
  41da2e:	push   edx
  41da2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da30:	push   ecx
  41da31:	add    eax,0xb3d942ca
  41da36:	jbe    0x41da94
  41da38:	leave  
  41da39:	shl    BYTE PTR [edx+0x65],0xd4
  41da3d:	mov    edx,ss
  41da3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da40:	adc    al,0x15
  41da42:	faddp  st(5),st
  41da44:	inc    ebx
  41da45:	add    DWORD PTR [edi],0x6bcb73d8
  41da4b:	jns    0x41dabf
  41da4d:	pop    eax
  41da4e:	call   0x302b43b0
  41da53:	mov    ch,0x25
  41da55:	popa   
  41da56:	inc    esi
  41da57:	and    DWORD PTR [ecx+0x12],esp
  41da5a:	dec    ecx
  41da5b:	icebp  
  41da5c:	jge    0x41daa5
  41da5e:	aas    
  41da5f:	cmp    al,0x2b
  41da61:	inc    ebp
  41da62:	inc    ebx
  41da63:	ss dec ebp
  41da65:	ret    0xde97
  41da68:	mov    esi,0xf3ed23db
  41da6d:	rol    dl,1
  41da6f:	lock sub ecx,DWORD PTR [eax+esi*4]
  41da73:	pop    ss
  41da74:	lahf   
  41da75:	mov    bh,0xc2
  41da77:	in     al,dx
  41da78:	mov    ds:0x2c22ed62,al
  41da7d:	mov    ebx,0xef483036
  41da82:	mov    edx,0x35144da8
  41da87:	push   esp
  41da88:	lods   eax,DWORD PTR ds:[esi]
  41da89:	repz aad 0xe8
  41da8c:	mov    DWORD PTR [edx],edx
  41da8e:	xlat   BYTE PTR ds:[ebx]
  41da8f:	out    0x96,al
  41da91:	lea    ebp,[eax]
  41da93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da94:	sub    BYTE PTR [esi],ch
  41da96:	dec    eax
  41da97:	arpl   WORD PTR [edx-0x1188b0b4],ax
  41da9d:	fadd   DWORD PTR [edi-0x39]
  41daa0:	or     al,BYTE PTR [edi-0x52]
  41daa3:	lea    eax,[esi]
  41daa5:	push   edx
  41daa6:	mov    ebx,0xb4dd31c1
  41daab:	mov    edi,0x8fa9ba32
  41dab0:	inc    esp
  41dab1:	mov    ?,ebx
  41dab3:	div    DWORD PTR [eax-0x3b]
  41dab6:	sbb    esi,DWORD PTR [edx]
  41dab8:	adc    BYTE PTR [edi-0x65],0xe0
  41dabc:	dec    edi
  41dabd:	add    dh,BYTE PTR [edi+ebp*4]
  41dac0:	mov    ds:0x5efd4ec4,eax
  41dac5:	or     al,0xec
  41dac7:	mov    ds:0x4870a40c,eax
  41dacc:	xor    esp,edx
  41dace:	jns    0x41dae3
  41dad0:	(bad)  
  41dad1:	int3   
  41dad2:	inc    esp
  41dad3:	fnsave [ecx-0x51]
  41dad6:	aas    
  41dad7:	arpl   cx,cx
  41dad9:	xlat   BYTE PTR ds:[ebx]
  41dada:	(bad)  
  41dadb:	cli    
  41dadc:	add    dh,BYTE PTR [eax]
  41dade:	pop    es
  41dadf:	fistp  DWORD PTR [edx+0x52]
  41dae2:	repz addr16 pop ds
  41dae5:	imul   edx,eax,0x54b705af
  41daeb:	bound  edi,QWORD PTR [eax-0x1606b5ab]
  41daf1:	iret   
  41daf2:	xor    BYTE PTR [esp+ebx*8-0x726d4cbf],0xd5
  41dafa:	xchg   ebp,eax
  41dafb:	mov    eax,ds:0xe0e5c2a
  41db00:	sub    al,0x24
  41db02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db03:	pop    esp
  41db04:	lods   eax,DWORD PTR ds:[esi]
  41db05:	mov    dl,BYTE PTR [ecx]
  41db07:	adc    DWORD PTR [esi-0x12],ecx
  41db0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db0b:	(bad)  
  41db0c:	jl     0x41db72
  41db0e:	fsub   QWORD PTR es:[ebx-0x6268a448]
  41db15:	call   0xbf6be459
  41db1a:	in     eax,dx
  41db1b:	sub    ebx,DWORD PTR [ebp+0x43]
  41db1e:	ret    0x1791
  41db21:	out    0xd5,al
  41db23:	cld    
  41db24:	xor    dl,ah
  41db26:	neg    BYTE PTR [edx+ebp*4]
  41db29:	mov    eax,0x2c8fd4a4
  41db2e:	push   ebp
  41db2f:	aad    0x10
  41db31:	outs   dx,BYTE PTR ds:[esi]
  41db32:	cdq    
  41db33:	ret    0x6084
  41db36:	mov    al,ds:0x684931ed
  41db3b:	loopne 0x41dace
  41db3d:	imul   esi,DWORD PTR [ebx+edx*2+0x22],0xffffffc6
  41db42:	jmp    0xb821:0xe2c17dc2
  41db49:	mov    dl,0xe1
  41db4b:	popf   
  41db4c:	jp     0x41db4e
  41db4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db4f:	adc    esp,edx
  41db51:	cli    
  41db52:	mov    esi,0x42ef506f
  41db57:	jl     0x41dbd2
  41db59:	jp     0x41db26
  41db5b:	and    ecx,DWORD PTR [edx]
  41db5d:	(bad)  
  41db5e:	cmc    
  41db5f:	xchg   edx,eax
  41db60:	dec    ebp
  41db61:	cld    
  41db62:	xchg   edx,eax
  41db63:	xor    dl,BYTE PTR [ecx]
  41db65:	leave  
  41db66:	js     0x41dbe1
  41db68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db69:	fwait
  41db6a:	test   BYTE PTR [ecx],dl
  41db6c:	movhps QWORD PTR [eax+0x3c12bc7],xmm4
  41db73:	ins    BYTE PTR es:[edi],dx
  41db74:	ja     0x41db5d
  41db76:	out    dx,eax
  41db77:	sub    bh,bl
  41db79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db7a:	lods   al,BYTE PTR ds:[esi]
  41db7b:	xchg   ebp,eax
  41db7c:	mov    eax,ds:0xf6c87743
  41db81:	mov    al,ds:0xbc399c32
  41db86:	push   edi
  41db87:	push   edi
  41db88:	stc    
  41db89:	jmp    0xd165:0x2802a877
  41db90:	dec    esi
  41db91:	xor    ah,BYTE PTR [esi+esi*8+0x78]
  41db95:	pop    ss
	...
  41dba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dba3:	sbb    al,BYTE PTR [edi-0x204026]
  41dba9:	jg     0x41db57
  41dbab:	pop    ss
  41dbac:	aad    0x14
  41dbae:	pop    ecx
  41dbaf:	mov    cl,0x5b
  41dbb1:	mov    ebp,0x15246
  41dbb6:	sub    al,0x3
  41dbb8:	add    BYTE PTR [eax],al
  41dbba:	mov    al,ds:0x72ad4a0d
  41dbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbc0:	inc    edi
  41dbc1:	dec    edx
  41dbc2:	jae    0x41db58
  41dbc4:	clc    
  41dbc5:	jno    0x41dc1f
  41dbc7:	mov    ch,BYTE PTR [esi-0x8]
  41dbca:	in     eax,0xb5
  41dbcc:	iret   
  41dbcd:	fsubp  st(5),st
  41dbcf:	aam    0x1c
  41dbd1:	test   DWORD PTR [eax],ecx
  41dbd3:	jecxz  0x41dc1c
  41dbd5:	and    DWORD PTR [eax+0x46],ebp
  41dbd8:	aad    0xbd
  41dbda:	imul   ebp,eax,0x359b5c53
  41dbe0:	jmp    0xeec4:0x3e4dcc63
  41dbe7:	mov    edx,0xebbf81f9
  41dbec:	(bad)  
  41dbed:	test   DWORD PTR [ebx-0x38],edi
  41dbf0:	in     al,dx
  41dbf1:	ret    0x4a09
  41dbf4:	popf   
  41dbf5:	popa   
  41dbf6:	loop   0x41db9d
  41dbf8:	idiv   esi
  41dbfa:	cmp    bl,ch
  41dbfc:	jmp    0xa0cac535
  41dc01:	xor    eax,0x2c98e372
  41dc06:	push   eax
  41dc07:	test   DWORD PTR [edi],edi
  41dc09:	xchg   DWORD PTR [ebp+ebp*4-0x68],esi
  41dc0d:	mov    ebp,0x9e0d19c9
  41dc12:	sbb    al,0xe5
  41dc14:	jno    0x41dba8
  41dc16:	stos   BYTE PTR es:[edi],al
  41dc17:	mov    DWORD PTR [ebx+ecx*1],esi
  41dc1a:	aas    
  41dc1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc1c:	mov    WORD PTR [ebx+0x508991fb],fs
  41dc22:	mov    al,ds:0xbe87ed94
  41dc27:	xor    ah,BYTE PTR [edi]
  41dc29:	call   0x3b16:0xb31ee4a2
  41dc30:	pop    eax
  41dc31:	ret    0x88bc
  41dc34:	test   eax,0x9b4562fe
  41dc39:	popa   
  41dc3a:	push   ss
  41dc3b:	inc    edi
  41dc3c:	mov    ch,0x23
  41dc3e:	or     BYTE PTR [edi*4-0x5154cf18],0xfb
  41dc46:	cmp    BYTE PTR [ebp-0x6e75b328],cl
  41dc4c:	sub    al,0xf1
  41dc4e:	mov    ah,0xa7
  41dc50:	imul   edi,DWORD PTR [edx],0x12b0be7f
  41dc56:	hlt    
  41dc57:	cmp    al,0x1d
  41dc59:	adc    eax,0x33bee0fb
  41dc5e:	frstor [edx+0x3c]
  41dc61:	icebp  
  41dc62:	mov    bl,0x8e
  41dc64:	inc    esp
  41dc65:	xlat   BYTE PTR ds:[ebx]
  41dc66:	xchg   edi,eax
  41dc67:	jg     0x41dc84
  41dc69:	rol    BYTE PTR [edi-0x7a],1
  41dc6c:	dec    DWORD PTR [ecx-0x66]
  41dc6f:	xchg   DWORD PTR [ebp-0x8],edi
  41dc72:	and    dl,BYTE PTR [ebp+0x15bb17e4]
  41dc78:	aad    0x8b
  41dc7a:	pusha  
  41dc7b:	jae    0x41dc98
  41dc7d:	and    ah,dl
  41dc7f:	sbb    DWORD PTR [edx],0x341f21c4
  41dc85:	mov    al,0x1
  41dc87:	fsub   DWORD PTR [edi-0x36b517f7]
  41dc8d:	stos   DWORD PTR es:[edi],eax
  41dc8e:	mov    DWORD PTR [esi+0x57],esi
  41dc91:	inc    edx
  41dc92:	dec    ebp
  41dc93:	inc    ebx
  41dc94:	lds    edx,FWORD PTR [edi-0x3ca1a622]
  41dc9a:	jbe    0x41dc3a
  41dc9c:	dec    esp
  41dc9d:	jecxz  0x41dc84
  41dc9f:	add    al,0x9f
  41dca1:	popf   
  41dca2:	mov    edx,0x749acecc
  41dca7:	xlat   BYTE PTR ds:[ebx]
  41dca8:	test   DWORD PTR [ebx+eiz*1],esp
  41dcab:	loope  0x41dd10
  41dcad:	inc    esp
  41dcae:	push   esi
  41dcaf:	push   cs
  41dcb0:	gs xchg ebp,eax
  41dcb2:	adc    esi,DWORD PTR [ecx-0x8]
  41dcb5:	jecxz  0x41dc66
  41dcb7:	mov    dh,BYTE PTR [edi]
  41dcb9:	mov    esp,DWORD PTR [ebx+0xad2b7]
  41dcbf:	(bad)  
  41dcc0:	pop    ds
  41dcc1:	pop    ecx
  41dcc2:	scas   eax,DWORD PTR es:[edi]
  41dcc3:	jmp    DWORD PTR [edi]
  41dcc5:	sbb    ebx,DWORD PTR [ebx+0x2e8422ee]
  41dccb:	push   eax
  41dccc:	scas   al,BYTE PTR es:[edi]
  41dccd:	xor    DWORD PTR [edx],edx
  41dccf:	mov    ds:0xa110c978,al
  41dcd4:	in     al,dx
  41dcd5:	lock xlat BYTE PTR ds:[ebx]
  41dcd7:	enter  0x8baf,0xb6
  41dcdb:	pop    esi
  41dcdc:	pop    ecx
  41dcdd:	and    al,0x27
  41dcdf:	add    BYTE PTR [ecx+0x43db7cc7],ch
  41dce5:	imul   ebx,DWORD PTR [edi+edx*2],0x5830533b
  41dcec:	outs   dx,BYTE PTR ds:[esi]
  41dced:	test   BYTE PTR [ecx-0x74],dl
  41dcf0:	mov    ebx,0x56902213
  41dcf5:	push   0xffffffe9
  41dcf7:	pop    eax
  41dcf8:	sbb    BYTE PTR [esi],bh
  41dcfa:	adc    dl,dh
  41dcfc:	add    DWORD PTR [ecx-0x1bffd580],edi
  41dd02:	mov    ss,WORD PTR [edx-0x16bec786]
  41dd08:	mov    al,0x68
  41dd0a:	shl    DWORD PTR [eax-0x70fcd991],1
  41dd10:	clc    
  41dd11:	push   0xa1dbb74b
  41dd16:	mov    ds:0xe439ee36,al
  41dd1b:	pop    ecx
  41dd1c:	scas   eax,DWORD PTR es:[edi]
  41dd1d:	(bad)  
  41dd1e:	rcl    DWORD PTR [eax-0x70421fbd],1
  41dd24:	mov    edx,0xd25b4c58
  41dd29:	sar    ebx,cl
  41dd2b:	fisttp WORD PTR [ecx+ebx*4-0x3f]
  41dd2f:	push   eax
  41dd30:	push   ebx
  41dd31:	gs mov ebx,0xfd45b560
  41dd37:	std    
  41dd38:	je     0x41dd51
  41dd3a:	int    0xd9
  41dd3c:	call   0x3adc:0x97bb6213
  41dd43:	in     eax,0x40
  41dd45:	les    esp,FWORD PTR gs:[ebx+edi*4]
  41dd49:	pop    esi
  41dd4a:	mov    edx,0x8e19fec7
  41dd4f:	add    bh,dl
  41dd51:	mov    eax,0x6c3b1d06
  41dd56:	inc    edx
  41dd57:	je     0x41dd61
  41dd59:	jae    0x41ddc4
  41dd5b:	(bad)  
  41dd5c:	and    BYTE PTR [ecx-0x60],0x52
  41dd60:	in     eax,0x96
  41dd62:	popa   
  41dd63:	aad    0xb2
  41dd65:	jge    0x41dd79
  41dd67:	sub    BYTE PTR [edi+0x430dd94b],dl
  41dd6d:	xchg   ecx,eax
  41dd6e:	mov    esi,DWORD PTR [ecx-0x19]
  41dd71:	iret   
  41dd72:	(bad)  
  41dd73:	mov    al,0x3b
  41dd75:	cmp    cl,BYTE PTR [edi+ebx*4]
  41dd78:	cmp    al,0x38
  41dd7a:	sub    DWORD PTR [eax+0x45fa20de],ebx
  41dd80:	je     0x41ddf9
  41dd82:	sar    BYTE PTR [ecx-0x13],0xb7
  41dd86:	dec    edx
  41dd87:	pushf  
  41dd88:	push   es
  41dd89:	rol    bh,0xc
  41dd8c:	fsubr  QWORD PTR [esi-0x77982963]
  41dd92:	xchg   ecx,eax
  41dd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd94:	cmp    al,0x30
  41dd96:	dec    edi
  41dd97:	jbe    0x41dd58
  41dd99:	pop    ebp
  41dd9a:	cmc    
  41dd9b:	pop    ebp
  41dd9c:	push   edx
  41dd9d:	sub    dl,ch
  41dd9f:	cdq    
  41dda0:	cwde   
  41dda1:	aaa    
  41dda2:	fmul   st(7),st
  41dda4:	mov    DWORD PTR [edi-0x1366f665],edx
  41ddaa:	jne    0x41de14
  41ddac:	pop    esi
  41ddad:	or     DWORD PTR [eax],ebx
  41ddaf:	ds inc esp
  41ddb1:	stc    
  41ddb2:	mov    al,BYTE PTR [edx-0x6d6a0ef6]
  41ddb8:	xchg   ebp,eax
  41ddb9:	jecxz  0x41de32
  41ddbb:	shr    DWORD PTR [ebp+eiz*1-0x395a047d],1
  41ddc2:	mov    ebp,0x45fb880c
  41ddc7:	jno    0x41dd9b
  41ddc9:	push   0x7b084dce
  41ddce:	test   al,0x7d
  41ddd0:	jmp    0x41dd63
  41ddd2:	fisttp DWORD PTR [ebx-0x127e2d50]
  41ddd8:	sub    BYTE PTR [di+0x15],0xf6
  41dddd:	inc    eax
  41ddde:	mov    ds:0x2d96dd33,al
  41dde3:	mov    ch,0x66
  41dde5:	sbb    DWORD PTR [edi],eax
  41dde7:	jecxz  0x41dde8
  41dde9:	inc    edi
  41ddea:	add    eax,0x5a0db0aa
  41ddef:	cmovae ecx,DWORD PTR [ebx+0x3ca9a31e]
  41ddf6:	stc    
  41ddf7:	in     eax,dx
  41ddf8:	pop    ds
  41ddf9:	dec    eax
  41ddfa:	pusha  
  41ddfb:	loopne 0x41de68
  41ddfd:	push   ds
  41ddfe:	push   es
  41ddff:	es xor eax,0xb70454d7
  41de05:	int3   
  41de06:	leave  
  41de07:	test   eax,0xb184719e
  41de0c:	rcr    BYTE PTR [eax+0x7c2bf8b3],1
  41de12:	fcom   QWORD PTR [ebx-0x3855b9e5]
  41de18:	loope  0x41dda9
  41de1a:	xchg   esi,eax
  41de1b:	mov    ebx,0xb385599a
  41de20:	out    dx,eax
  41de21:	xchg   esp,eax
  41de22:	gs sub edi,ebp
  41de25:	stos   DWORD PTR es:[edi],eax
  41de26:	or     ch,BYTE PTR [esi-0x5]
  41de29:	xor    eax,0x6e8b87cb
  41de2e:	jno    0x41de2f
  41de30:	pop    ebx
  41de31:	loope  0x41de61
  41de33:	sbb    ebx,DWORD PTR [edi]
  41de35:	enter  0x1984,0x12
  41de39:	add    eax,0xf625e60
  41de3e:	ret    
  41de3f:	das    
  41de40:	mov    dh,0xc2
  41de42:	jb     0x41de7b
  41de44:	es and edi,esi
  41de47:	jge    0x41ddeb
  41de49:	xchg   BYTE PTR [esi],dl
  41de4b:	and    ebx,DWORD PTR [eax]
  41de4d:	sub    ebp,DWORD PTR [edi+0x566659ef]
  41de53:	jle    0x41de51
  41de55:	push   es
  41de56:	das    
  41de57:	xchg   edi,eax
  41de58:	das    
  41de59:	mov    ebp,0x98524c14
  41de5e:	iret   
  41de5f:	mov    ebx,0xbe972848
  41de64:	inc    bh
  41de66:	and    dl,cl
  41de68:	arpl   WORD PTR [edi],dx
  41de6a:	dec    edi
  41de6b:	mov    esi,0x6e1db8eb
  41de70:	in     eax,dx
  41de71:	mov    esi,0xdb315136
  41de76:	pop    ds
  41de77:	iret   
  41de78:	mov    bh,0xf8
  41de7a:	das    
  41de7b:	push   ecx
  41de7c:	xchg   ebx,eax
  41de7d:	jbe    0x41de46
  41de7f:	add    eax,0xea8ee7d0
  41de84:	ins    BYTE PTR es:[edi],dx
  41de85:	(bad)  
  41de86:	mov    dl,0xa
  41de88:	aaa    
  41de89:	xor    ebp,DWORD PTR [ebx]
  41de8b:	int    0xa7
  41de8d:	jmp    0x1f0213a6
  41de92:	neg    DWORD PTR [ebp-0x34]
  41de95:	xchg   ecx,eax
  41de96:	sub    eax,0x6b6811aa
  41de9b:	fidivr WORD PTR [esi+0x67]
  41de9e:	jp     0x41dedc
  41dea0:	int    0xc2
  41dea2:	jle    0x41dec4
  41dea4:	jnp    0x41de3c
  41dea6:	cld    
  41dea7:	lds    edx,FWORD PTR [ebx-0x63]
  41deaa:	push   0x783f62c
  41deaf:	add    DWORD PTR [edx-0x5f222d35],esi
  41deb5:	or     DWORD PTR [ebp+0x41],ecx
  41deb8:	js     0x41de52
  41deba:	inc    edx
  41debb:	cmp    cl,BYTE PTR [edx-0x52]
  41debe:	push   esp
  41debf:	xor    cl,BYTE PTR [edx]
  41dec1:	mov    ch,0xde
  41dec3:	call   0xc544:0xa269d4c0
  41deca:	and    eax,0xcf65bd9
  41decf:	loope  0x41de9b
  41ded1:	adc    esi,esi
  41ded3:	cmp    DWORD PTR [eax+0x79a120e5],0x7efb6526
  41dedd:	inc    edx
  41dede:	nop
  41dedf:	cmp    ecx,DWORD PTR [ebx+esi*8]
  41dee2:	cmp    DWORD PTR [edx+0x5c],esi
  41dee5:	jo     0x41dee7
	...
  41deef:	add    BYTE PTR [eax],al
  41def1:	add    BYTE PTR [ebp-0x15b01f1],bl
  41def7:	cmc    
  41def8:	fistp  QWORD PTR [edi]
  41defa:	stc    
  41defb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41defc:	mov    bl,0x6e
  41defe:	into   
  41deff:	and    ah,BYTE PTR [ecx+0x1557272]
  41df05:	add    BYTE PTR [ebx+eax*1],ch
  41df08:	add    BYTE PTR [eax],al
  41df0a:	into   
  41df0b:	test   eax,0x278877a3
  41df10:	mov    ebp,0xb58fcb6e
  41df15:	pop    ecx
  41df16:	mov    eax,0xec558a75
  41df1b:	inc    esi
  41df1c:	aaa    
  41df1d:	mov    eax,ds:0xd910b198
  41df22:	pushf  
  41df23:	mov    esi,ebx
  41df25:	lods   eax,DWORD PTR ds:[esi]
  41df26:	xor    DWORD PTR [ebp-0x1d99a8c6],ebx
  41df2c:	jmp    DWORD PTR [ebx+0x54]
  41df2f:	mov    esi,0x9251a47a
  41df34:	push   eax
  41df35:	pop    esp
  41df36:	mov    ch,ah
  41df38:	sub    BYTE PTR ds:[edx+eiz*2],0x19
  41df3d:	and    ah,BYTE PTR [ebx+0x67]
  41df40:	js     0x41df14
  41df42:	mov    eax,0x452c608
  41df47:	inc    ebp
  41df48:	or     dl,BYTE PTR [edi-0x71e6feb9]
  41df4e:	xchg   ecx,eax
  41df4f:	pop    es
  41df50:	cmp    ebx,ebp
  41df52:	sbb    cl,cl
  41df54:	aam    0xd5
  41df56:	jne    0x41df4b
  41df58:	add    bl,dh
  41df5a:	jg     0x41df6c
  41df5c:	in     eax,dx
  41df5d:	cmp    BYTE PTR ds:0x95326eae,0xf9
  41df64:	cmp    al,0x13
  41df66:	fnstcw WORD PTR [edi]
  41df68:	add    bh,BYTE PTR [edi-0x74e32d06]
  41df6e:	js     0x41df0a
  41df70:	stos   BYTE PTR es:[edi],al
  41df71:	cld    
  41df72:	inc    esp
  41df73:	adc    cl,BYTE PTR [ecx+0x39]
  41df76:	fadd   st,st(5)
  41df78:	mov    bh,0x7
  41df7a:	ss in  eax,0x6b
  41df7d:	push   esp
  41df7e:	inc    ebx
  41df7f:	shr    BYTE PTR [esi+0x55],1
  41df82:	addr16 int3 
  41df84:	scas   eax,DWORD PTR es:[edi]
  41df85:	mov    ah,0x5e
  41df87:	dec    eax
  41df88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df89:	jb     0x41dfce
  41df8b:	adc    eax,0x1040a456
  41df90:	sbb    bl,cl
  41df92:	dec    edx
  41df93:	sbb    BYTE PTR [esi+0x10],cl
  41df96:	cwde   
  41df97:	xlat   BYTE PTR ds:[ebx]
  41df98:	mov    ah,0xb6
  41df9a:	je     0x41df90
  41df9c:	lods   eax,DWORD PTR ds:[esi]
  41df9d:	pop    edx
  41df9e:	(bad)  
  41df9f:	and    ebx,eax
  41dfa1:	xor    eax,edx
  41dfa3:	imul   ecx,DWORD PTR [esi+0x470ba27],0x2da26c38
  41dfad:	xor    DWORD PTR [ecx+0x2a978f4b],edx
  41dfb3:	add    al,0x9d
  41dfb5:	scas   eax,DWORD PTR es:[edi]
  41dfb6:	push   ebx
  41dfb7:	cmp    DWORD PTR [esi],0x5c142d98
  41dfbd:	inc    ebx
  41dfbe:	fs add al,0x74
  41dfc1:	cwde   
  41dfc2:	cmp    ebx,DWORD PTR [edx-0x1f]
  41dfc5:	sub    al,0xa
  41dfc7:	xor    esi,DWORD PTR [ecx+0x56]
  41dfca:	into   
  41dfcb:	xor    eax,0x8b4fcc4f
  41dfd0:	idiv   BYTE PTR [eax+0x77f36a77]
  41dfd6:	repnz int 0x9f
  41dfd9:	pop    eax
  41dfda:	xchg   ecx,eax
  41dfdb:	adc    DWORD PTR [ebx],eax
  41dfdd:	dec    DWORD PTR [ebx-0x414b23d]
  41dfe3:	repz mov ds:0x2f20ce52,eax
  41dfe9:	inc    eax
  41dfea:	add    eax,0x94512d5b
  41dfef:	lods   eax,DWORD PTR ds:[esi]
  41dff0:	out    dx,al
  41dff1:	xchg   ecx,eax
  41dff2:	lea    ebp,[esi-0x32]
  41dff5:	cmp    eax,0x65141966
  41dffa:	fwait
  41dffb:	sub    eax,0xb835ddf2
  41e000:	shr    BYTE PTR [ebx-0x4],1
  41e003:	inc    eax
  41e004:	outs   dx,BYTE PTR ds:[esi]
  41e005:	pop    edx
  41e006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e007:	mov    ebp,0x8478f84e
  41e00c:	into   
  41e00d:	out    0xff,al
  41e00f:	ds push cs
  41e011:	push   ss
  41e012:	aaa    
  41e013:	mov    edi,0xc1b8b40e
  41e018:	daa    
  41e019:	pop    edx
  41e01a:	mov    edi,0x742ca865
  41e01f:	push   ebx
  41e020:	(bad)  
  41e021:	sti    
  41e022:	loop   0x41e049
  41e024:	dec    edx
  41e025:	les    ebx,FWORD PTR [ecx+edx*4]
  41e028:	pop    esi
  41e029:	and    eax,0xe73b0d10
  41e02e:	sbb    ch,BYTE PTR [edx]
  41e030:	jecxz  0x41e05c
  41e032:	xor    ch,BYTE PTR [eax]
  41e034:	fstp   QWORD PTR [ebx+0x1f]
  41e037:	xchg   DWORD PTR [eax+0x1a11cbf1],eax
  41e03d:	jg     0x41e063
  41e03f:	xchg   ebx,eax
  41e040:	or     al,BYTE PTR [edi+edi*2-0x111f15da]
  41e047:	dec    edi
  41e048:	outs   dx,DWORD PTR ds:[esi]
  41e049:	mov    esp,0xfada703f
  41e04e:	adc    DWORD PTR [ecx-0x5a2b6511],eax
  41e054:	push   eax
  41e055:	mov    eax,ds:0x3246e9be
  41e05a:	mov    esp,0x4eab3dbb
  41e05f:	enter  0xf138,0x5d
  41e063:	pop    esp
  41e064:	pop    edx
  41e065:	sub    eax,DWORD PTR [edi-0x4f]
  41e068:	pop    esi
  41e069:	mov    esp,?
  41e06b:	sbb    ch,BYTE PTR [ebp+0x7f]
  41e06e:	loop   0x41e08e
  41e070:	test   BYTE PTR [ecx],bh
  41e072:	icebp  
  41e073:	inc    esp
  41e074:	bound  edx,QWORD PTR [ebp+0x7eb9ef0b]
  41e07a:	pop    ebp
  41e07b:	sar    cl,1
  41e07d:	add    eax,0x566f9f6c
  41e082:	int    0x7a
  41e084:	gs loope 0x41e01c
  41e087:	scas   eax,DWORD PTR es:[edi]
  41e088:	mov    al,0x61
  41e08a:	pop    ebx
  41e08b:	fild   DWORD PTR [eax-0x1d]
  41e08e:	push   ecx
  41e08f:	xchg   di,ax
  41e091:	push   es
  41e092:	xchg   DWORD PTR [ebx-0x4dc5b68],ebx
  41e098:	mov    bl,ah
  41e09a:	(bad)  
  41e09b:	sub    bh,ch
  41e09d:	dec    eax
  41e09e:	std    
  41e09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a0:	das    
  41e0a1:	and    bl,ch
  41e0a3:	je     0x41e034
  41e0a5:	icebp  
  41e0a6:	pop    edi
  41e0a7:	imul   edx,edi,0x350d9f59
  41e0ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0ae:	and    edx,DWORD PTR [edi]
  41e0b0:	lods   eax,DWORD PTR ds:[esi]
  41e0b1:	pop    esp
  41e0b2:	aaa    
  41e0b3:	das    
  41e0b4:	adc    DWORD PTR [ecx],esp
  41e0b6:	sahf   
  41e0b7:	xor    bh,BYTE PTR [ecx]
  41e0b9:	call   0x342b:0xe7f8019c
  41e0c0:	stos   BYTE PTR es:[edi],al
  41e0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0c2:	pop    edi
  41e0c3:	(bad)  
  41e0c5:	pop    ebp
  41e0c6:	inc    eax
  41e0c7:	cli    
  41e0c8:	sbb    bl,cl
  41e0ca:	jmp    0x41e0f9
  41e0cc:	ss cdq 
  41e0ce:	outs   dx,BYTE PTR ds:[esi]
  41e0cf:	scas   al,BYTE PTR es:[edi]
  41e0d0:	jecxz  0x41e0cd
  41e0d2:	nop
  41e0d3:	cmp    BYTE PTR [edx+0x5fa6b6c6],dl
  41e0d9:	or     esi,DWORD PTR [eax-0x77]
  41e0dc:	pop    ecx
  41e0dd:	popf   
  41e0de:	add    eax,0xaf7129d5
  41e0e3:	xor    cl,cl
  41e0e5:	inc    esp
  41e0e6:	rol    DWORD PTR [edx],cl
  41e0e8:	(bad)  
  41e0e9:	loope  0x41e0a4
  41e0eb:	push   ebx
  41e0ec:	pop    ds
  41e0ed:	cs js  0x41e07e
  41e0f0:	shr    DWORD PTR [edi],0xe9
  41e0f3:	dec    edx
  41e0f4:	loop   0x41e0b4
  41e0f6:	ds das 
  41e0f8:	push   ebp
  41e0f9:	popa   
  41e0fa:	and    al,0x3b
  41e0fc:	(bad)  
  41e0fd:	push   esi
  41e0fe:	sub    BYTE PTR [esi+0x58],0x76
  41e102:	ja     0x41e0de
  41e104:	xchg   BYTE PTR [eax],ah
  41e106:	jecxz  0x41e10d
  41e108:	sbb    eax,0x1823cde5
  41e10d:	cmp    al,0x4a
  41e10f:	mov    dh,al
  41e111:	in     al,dx
  41e112:	or     BYTE PTR [ebx+eax*8],0xbb
  41e116:	mov    dl,0xbd
  41e118:	sar    edx,1
  41e11a:	fcmovnu st,st(1)
  41e11c:	stc    
  41e11d:	popf   
  41e11e:	inc    edx
  41e11f:	mov    bl,0x4f
  41e121:	fs inc ecx
  41e123:	mov    ebx,0xbd6d11a6
  41e128:	cmp    cl,BYTE PTR [ebx+0x60]
  41e12b:	pop    esi
  41e12c:	and    BYTE PTR [edi+0x2c],ah
  41e12f:	fmul   QWORD PTR [edx+0x60]
  41e132:	mov    es,WORD PTR [ecx]
  41e134:	jne    0x41e1a1
  41e136:	enter  0x6d7a,0x3b
  41e13a:	xor    bl,BYTE PTR [edx]
  41e13c:	mov    cl,0xc2
  41e13e:	retf   0xaaf9
  41e141:	xor    ecx,esi
  41e143:	jo     0x41e17a
  41e145:	test   BYTE PTR [ebx+ebx*4],bh
  41e148:	pop    ecx
  41e149:	jnp    0x41e1a9
  41e14b:	or     BYTE PTR [esi-0x5ede5eb5],bl
  41e151:	jge    0x41e116
  41e153:	out    dx,eax
  41e154:	and    BYTE PTR [ecx+0x5e],0x43
  41e158:	adc    BYTE PTR [ebp-0x64fead4a],ah
  41e15e:	fimul  DWORD PTR [ebx]
  41e160:	inc    ebx
  41e161:	cmp    al,0x9a
  41e163:	fcom   st(4)
  41e165:	mov    esi,0x6a4c13ae
  41e16a:	add    edx,DWORD PTR [ebx-0x9]
  41e16d:	ror    BYTE PTR [edi-0x6f5a2af0],cl
  41e173:	xchg   esp,eax
  41e174:	inc    ebp
  41e175:	into   
  41e176:	pop    esp
  41e177:	lds    edi,FWORD PTR [ebx]
  41e179:	mov    esi,0xdd4de639
  41e17e:	dec    edx
  41e17f:	sbb    eax,0xbd4f2d41
  41e184:	jmp    0x826ba035
  41e189:	jo     0x41e198
  41e18b:	mov    fs,WORD PTR [ebp+0x4080ea3]
  41e191:	adc    BYTE PTR [esp+eax*1-0x11],al
  41e195:	mov    eax,ds:0x37672223
  41e19a:	daa    
  41e19b:	dec    edi
  41e19c:	xchg   ecx,eax
  41e19d:	mov    esi,0x8e9f24a0
  41e1a2:	std    
  41e1a3:	imul   eax,DWORD PTR [esi+esi*2],0xfffffff7
  41e1a7:	xchg   esp,eax
  41e1a8:	and    dl,BYTE PTR [ebx-0xaac3691]
  41e1ae:	jmp    edi
  41e1b0:	mov    eax,ds:0x9113dddb
  41e1b5:	sub    eax,0x6e15253f
  41e1ba:	adc    al,0x3e
  41e1bc:	pusha  
  41e1bd:	xchg   ch,dl
  41e1bf:	push   ecx
  41e1c0:	cdq    
  41e1c1:	sub    al,BYTE PTR [edi+0x9]
  41e1c4:	dec    esp
  41e1c5:	stc    
  41e1c6:	mov    ds:0x16b6149f,eax
  41e1cb:	xor    DWORD PTR [edx-0x429b1015],ebp
  41e1d1:	jl     0x41e1db
  41e1d3:	jno    0x41e1a8
  41e1d5:	push   ebx
  41e1d6:	loop   0x41e184
  41e1d8:	push   ebp
  41e1d9:	repz dec ebx
  41e1db:	(bad)  
  41e1dc:	cmp    bl,BYTE PTR [esi-0xf]
  41e1df:	dec    eax
  41e1e0:	push   ds
  41e1e1:	retf   0xc55b
  41e1e4:	add    esp,DWORD PTR [esi]
  41e1e6:	cmp    al,0xec
  41e1e8:	fs push ebx
  41e1ea:	jmp    0x41e1f1
  41e1ec:	inc    esi
  41e1ed:	ins    BYTE PTR es:[edi],dx
  41e1ee:	les    edi,FWORD PTR [edi+0x1d08f40f]
  41e1f4:	jmp    0xf0df:0xb6de43f
  41e1fb:	repz fst DWORD PTR [edx+0x45]
  41e1ff:	jb     0x41e276
  41e201:	xchg   esi,eax
  41e202:	or     DWORD PTR [edx+0x780a4bab],eax
  41e208:	mov    dl,bh
  41e20a:	prefetchnta BYTE PTR [edi-0x2]
  41e20e:	add    al,0x5d
  41e210:	pop    eax
  41e211:	inc    eax
  41e212:	dec    esp
  41e213:	int    0xa8
  41e215:	aaa    
  41e216:	repnz sub bh,dh
  41e219:	xchg   ebx,eax
  41e21a:	test   BYTE PTR ds:0x6b5fc6a9,ah
  41e220:	mov    eax,0x62fb8488
  41e225:	mov    al,ds:0xa38d6be2
  41e22a:	xor    DWORD PTR [esi+0x3482d1ab],0xffffffe2
  41e231:	xchg   edi,eax
  41e232:	in     al,dx
  41e233:	ret    
  41e234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e235:	jnp    0x41e237
	...
  41e23f:	add    BYTE PTR [eax],al
  41e241:	add    BYTE PTR [eax],ah
  41e243:	push   ss
  41e244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e245:	lea    esi,[esi+0x25bf29bf]
  41e24b:	lods   eax,DWORD PTR ds:[esi]
  41e24c:	and    dl,al
  41e24e:	adc    BYTE PTR [edi+0x27],ah
  41e251:	and    al,0x9e
  41e253:	pop    eax
  41e254:	add    DWORD PTR [eax],eax
  41e256:	sub    al,0x3
  41e258:	add    BYTE PTR [eax],al
  41e25a:	clc    
  41e25b:	mov    dh,0xc1
  41e25d:	xchg   esp,eax
  41e25e:	lds    esi,FWORD PTR fs:[esi+esi*8]
  41e262:	clc    
  41e263:	ss mov esp,0xb7305430
  41e269:	dec    esp
  41e26a:	jmp    0x41e2b7
  41e26c:	inc    eax
  41e26d:	in     eax,dx
  41e26e:	mov    ds:0x8f17bb38,al
  41e273:	xlat   BYTE PTR ds:[ebx]
  41e274:	sti    
  41e275:	lds    eax,FWORD PTR [edx]
  41e277:	lahf   
  41e278:	xor    ah,BYTE PTR [ebx*2+0x965b4c8]
  41e27f:	push   es
  41e280:	xor    bl,cl
  41e282:	data16 jbe 0x41e261
  41e285:	test   al,0x1a
  41e287:	or     eax,0x4d48f07e
  41e28c:	inc    ebx
  41e28d:	mov    BYTE PTR [ebp-0x7b],ah
  41e290:	cli    
  41e291:	jnp    0x41e2ab
  41e293:	repz pop ss
  41e295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e296:	sti    
  41e297:	lods   al,BYTE PTR ds:[esi]
  41e298:	jecxz  0x41e2ce
  41e29a:	in     al,0xd2
  41e29c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e29d:	gs hlt 
  41e29f:	push   0x76
  41e2a1:	into   
  41e2a2:	clc    
  41e2a3:	enter  0x4ae,0xff
  41e2a7:	inc    eax
  41e2a8:	shl    DWORD PTR es:[ecx+0x4bbe041e],1
  41e2af:	push   ds
  41e2b0:	(bad)  
  41e2b1:	or     DWORD PTR [eax],ebp
  41e2b3:	sbb    esp,DWORD PTR [bp+0x37c1]
  41e2b8:	jmp    0x37d5aae5
  41e2bd:	or     eax,0x655027c3
  41e2c2:	and    eax,0xda01256e
  41e2c7:	xor    eax,0x5d11d5c6
  41e2cc:	out    dx,eax
  41e2cd:	push   ebx
  41e2ce:	ja     0x41e2cc
  41e2d0:	and    al,0x95
  41e2d2:	mov    edi,0x63b1345d
  41e2d7:	cwde   
  41e2d8:	sub    dl,bl
  41e2da:	push   cs
  41e2db:	sub    esp,DWORD PTR [ebx]
  41e2dd:	mov    edx,0x4a054a9
  41e2e2:	loope  0x41e2cc
  41e2e4:	je     0x41e267
  41e2e6:	daa    
  41e2e7:	rcr    DWORD PTR [edx+ebx*2],0x14
  41e2eb:	div    DWORD PTR [ebp+ecx*1+0x5612c95d]
  41e2f2:	mov    esi,0x2f2ceeda
  41e2f7:	pop    es
  41e2f8:	test   al,0xbe
  41e2fa:	pop    eax
  41e2fb:	lahf   
  41e2fc:	popf   
  41e2fd:	fcomp  QWORD PTR [edx+eax*1+0x5a4111d0]
  41e304:	inc    edx
  41e305:	into   
  41e306:	daa    
  41e307:	loope  0x41e36d
  41e309:	and    BYTE PTR [ecx+0x44],0xdd
  41e30d:	(bad)  [eax-0x30b01ef0]
  41e313:	xchg   ecx,eax
  41e314:	dec    ebp
  41e315:	popf   
  41e316:	pop    ss
  41e317:	jne    0x41e2dc
  41e319:	addr16 fmul st,st(2)
  41e31c:	fwait
  41e31d:	sti    
  41e31e:	push   0xffffffc7
  41e320:	(bad)  
  41e321:	fist   DWORD PTR [edx+0xf]
  41e324:	push   ebx
  41e325:	aas    
  41e326:	stos   BYTE PTR es:[edi],al
  41e327:	push   0x1a7dbda1
  41e32c:	jge    0x41e351
  41e32e:	sbb    edx,DWORD PTR [eax+eax*2-0x738e7927]
  41e335:	ret    
  41e336:	pop    edx
  41e337:	setne  BYTE PTR [esp+eiz*8]
  41e33b:	cmp    cl,ah
  41e33d:	aad    0x54
  41e33f:	and    eax,0xfb9c4d80
  41e344:	sar    DWORD PTR [eax],0x7
  41e347:	sahf   
  41e348:	inc    edx
  41e349:	gs stc 
  41e34b:	cmp    al,0x60
  41e34d:	cmp    al,0xa2
  41e34f:	push   ecx
  41e350:	(bad)  
  41e351:	shr    DWORD PTR [edi-0x75ba7b6e],cl
  41e357:	xor    al,0x17
  41e359:	push   ebp
  41e35a:	es mov cl,0x94
  41e35d:	sbb    bl,0x19
  41e360:	call   0x91a8:0xfbd9f45f
  41e367:	je     0x41e3a6
  41e369:	sub    DWORD PTR [esi-0x706f583c],eax
  41e36f:	mov    ecx,0xede80e1f
  41e374:	mov    al,0x97
  41e376:	call   0xf39c:0x54c8f66f
  41e37d:	mov    edx,0x899e37
  41e382:	daa    
  41e383:	test   eax,0x883a9474
  41e388:	xor    al,0x9f
  41e38a:	xchg   esi,eax
  41e38b:	lea    ecx,[ebp-0xa]
  41e38e:	ss das 
  41e390:	shr    DWORD PTR [ebp+0x2e55ad5f],cl
  41e396:	ret    
  41e397:	fnstsw WORD PTR [ebp-0x135124dd]
  41e39d:	mov    dl,BYTE PTR [ebx+0x22]
  41e3a0:	mov    dh,dh
  41e3a2:	xchg   ebx,eax
  41e3a3:	ja     0x41e3b4
  41e3a5:	(bad)  
  41e3a6:	jg     0x41e3f2
  41e3a8:	pop    ebx
  41e3a9:	and    ch,BYTE PTR [ebx+0x8]
  41e3ac:	adc    DWORD PTR [esp+edx*4],ecx
  41e3af:	or     al,BYTE PTR [edi+0x26]
  41e3b2:	xchg   ecx,eax
  41e3b3:	inc    ebx
  41e3b4:	adc    al,ah
  41e3b6:	rcl    ecx,1
  41e3b8:	pop    edi
  41e3b9:	sbb    al,0xb9
  41e3bb:	jae    0x41e3c7
  41e3bd:	mov    bl,0x78
  41e3bf:	push   esp
  41e3c0:	in     eax,dx
  41e3c1:	int    0xea
  41e3c3:	ret    
  41e3c4:	out    dx,al
  41e3c5:	fs pop ecx
  41e3c7:	fist   WORD PTR [ebp-0x66]
  41e3ca:	data16 in al,0x2b
  41e3cd:	sub    esp,DWORD PTR [esi]
  41e3cf:	jbe    0x41e41a
  41e3d1:	mov    dl,0x48
  41e3d3:	stos   BYTE PTR es:[edi],al
  41e3d4:	out    dx,al
  41e3d5:	dec    esp
  41e3d6:	lahf   
  41e3d7:	fcmovb st,st(4)
  41e3d9:	sub    dh,BYTE PTR [eax+esi*1+0x67fdaa2b]
  41e3e0:	setb   dl
  41e3e3:	mov    eax,ds:0xbab50a76
  41e3e8:	inc    ebx
  41e3e9:	push   cs
  41e3ea:	inc    ecx
  41e3eb:	or     eax,0x6b894c00
  41e3f0:	jb     0x41e40a
  41e3f2:	or     dh,BYTE PTR [esi+0x2a]
  41e3f5:	in     eax,0x84
  41e3f7:	je     0x41e40a
  41e3f9:	xlat   BYTE PTR ds:[ebx]
  41e3fa:	pop    edi
  41e3fb:	jle    0x41e42d
  41e3fd:	push   edi
  41e3fe:	in     al,dx
  41e3ff:	ret    0xf871
  41e402:	sti    
  41e403:	inc    esp
  41e404:	inc    edx
  41e405:	shl    DWORD PTR [edx],0x24
  41e408:	addr16 mov edi,0xc27d80e5
  41e40e:	xor    al,0xcc
  41e410:	dec    edx
  41e411:	ficomp WORD PTR [ebp+0x6a22512a]
  41e417:	in     al,0x7f
  41e419:	iret   
  41e41a:	and    DWORD PTR [edi],edi
  41e41c:	push   ds
  41e41d:	jne    0x41e3c2
  41e41f:	gs pop ss
  41e421:	push   ebx
  41e422:	inc    edx
  41e423:	mov    gs,WORD PTR [edi+edi*8-0x7981a3ad]
  41e42a:	ss xor al,ch
  41e42d:	add    BYTE PTR [edx],bl
  41e42f:	sbb    esi,DWORD PTR [edx]
  41e431:	inc    edi
  41e432:	or     ch,BYTE PTR [eax+0x1e4fbb1d]
  41e438:	shr    BYTE PTR [eax],1
  41e43a:	test   al,0x68
  41e43c:	xor    cl,ch
  41e43e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e43f:	and    ah,ch
  41e441:	cdq    
  41e442:	test   eax,0x1e14acb6
  41e447:	(bad)  
  41e448:	repz repz adc al,0x9e
  41e44c:	mov    dh,BYTE PTR [esi+0x68]
  41e44f:	and    al,0x8c
  41e451:	inc    ecx
  41e452:	jno    0x41e443
  41e454:	jnp    0x41e436
  41e456:	push   cs
  41e457:	das    
  41e458:	fsubr  DWORD PTR [ebx-0x1deb9266]
  41e45e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e45f:	mov    bh,0x14
  41e461:	push   edx
  41e462:	pop    ebx
  41e463:	jmp    0x8f1a8bca
  41e468:	das    
  41e469:	in     al,0x88
  41e46b:	ins    DWORD PTR es:[edi],dx
  41e46c:	ret    0x7f04
  41e46f:	popw   ss
  41e471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e472:	aam    0x33
  41e474:	ss jg  0x41e409
  41e477:	pop    esi
  41e478:	xchg   edi,eax
  41e479:	fistp  WORD PTR [ebp+0x4a]
  41e47c:	add    al,0x6e
  41e47e:	mov    bl,0x4b
  41e480:	add    ah,BYTE PTR [ebx]
  41e482:	pause  
  41e484:	inc    edi
  41e485:	sub    ebx,DWORD PTR [edi]
  41e487:	xor    esi,DWORD PTR [ebp-0x2521432b]
  41e48d:	fwait
  41e48e:	retf   0x690
  41e491:	mov    esp,0xf33dab4b
  41e496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e497:	mov    ebx,0x8d739f4a
  41e49c:	mov    es,WORD PTR [eax]
  41e49e:	rol    cl,cl
  41e4a0:	mov    ebx,0x36db8bf
  41e4a5:	in     eax,dx
  41e4a6:	hlt    
  41e4a7:	(bad)  
  41e4a8:	mov    edx,0x48976faf
  41e4ad:	(bad)  
  41e4ae:	loop   0x41e49a
  41e4b0:	sti    
  41e4b1:	push   edx
  41e4b2:	sub    BYTE PTR [ecx-0x19b8500d],0x87
  41e4b9:	mov    edi,0xb4c89e76
  41e4be:	call   0x1ee3d5d6
  41e4c3:	sbb    DWORD PTR [ebx+0xb],esp
  41e4c6:	pop    ebp
  41e4c7:	xor    eax,0x5dc4178f
  41e4cc:	push   esi
  41e4cd:	jns    0x41e466
  41e4cf:	pusha  
  41e4d0:	into   
  41e4d1:	mov    ch,0x7b
  41e4d3:	sahf   
  41e4d4:	adc    eax,0x3d2f6a3a
  41e4d9:	dec    eax
  41e4da:	push   cs
  41e4db:	inc    edi
  41e4dc:	test   eax,0xb8bc7eb7
  41e4e1:	int3   
  41e4e2:	out    dx,eax
  41e4e3:	pusha  
  41e4e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4e5:	lahf   
  41e4e6:	sbb    BYTE PTR [esp+eax*8+0x34d20f0b],0xfc
  41e4ee:	sbb    ebp,DWORD PTR [eax+edx*1]
  41e4f1:	xchg   esi,eax
  41e4f2:	add    dh,BYTE PTR [edi-0xca24fc]
  41e4f8:	jmp    0x41e579
  41e4fa:	inc    esp
  41e4fb:	scas   al,BYTE PTR es:[edi]
  41e4fc:	jecxz  0x41e53e
  41e4fe:	cli    
  41e4ff:	inc    esp
  41e500:	cmp    dl,dh
  41e502:	inc    edi
  41e503:	lods   al,BYTE PTR ds:[esi]
  41e504:	adc    eax,0x86a2ec72
  41e509:	(bad)  
  41e50a:	jle    0x41e550
  41e50c:	ret    0x2996
  41e50f:	jmp    0xbace:0xff210923
  41e516:	ror    DWORD PTR [edi],0x71
  41e519:	adc    ah,BYTE PTR [edx-0x782285d4]
  41e51f:	pop    edi
  41e520:	dec    edx
  41e521:	jecxz  0x41e4ce
  41e523:	test   eax,0x2c01288f
  41e528:	cwde   
  41e529:	(bad)  
  41e52a:	push   esi
  41e52b:	outs   dx,BYTE PTR ds:[esi]
  41e52c:	out    dx,eax
  41e52d:	mov    dl,0x26
  41e52f:	mov    WORD PTR [esi],?
  41e531:	mov    ds:0xeb751eed,eax
  41e536:	es out 0xff,al
  41e539:	fimul  WORD PTR [edi-0x74f251d9]
  41e53f:	(bad)  
  41e540:	adc    al,0xcc
  41e542:	add    al,0xae
  41e544:	call   0x22e4:0xd2cc12e3
  41e54b:	ficom  DWORD PTR [ecx]
  41e54d:	ret    
  41e54e:	nop
  41e54f:	pop    ebx
  41e550:	cmc    
  41e551:	(bad)  [edx+0x7]
  41e554:	sbb    eax,DWORD PTR [eax-0x548c19c0]
  41e55a:	mov    fs,WORD PTR [edi]
  41e55c:	mov    ds:0xbd65aa96,eax
  41e561:	int    0xe1
  41e563:	lock stc 
  41e565:	push   esp
  41e566:	jp     0x41e5cb
  41e568:	jns    0x41e5cb
  41e56a:	jae    0x41e5c3
  41e56c:	and    BYTE PTR [edx+0x36],al
  41e56f:	call   0x4c9514e9
  41e574:	int    0xa
  41e576:	fist   DWORD PTR [eax-0x51]
  41e579:	ds mov ch,0x8a
  41e57c:	sub    esi,edx
  41e57e:	push   edx
  41e57f:	lods   al,BYTE PTR ds:[esi]
  41e580:	dec    edi
  41e581:	sub    DWORD PTR [esi+0xcebf03],ebp
	...
  41e58f:	add    BYTE PTR [eax],al
  41e591:	add    BYTE PTR [eax-0x4456c5cd],dh
  41e597:	test   eax,0xb7853bb3
  41e59c:	mov    esi,0x73facc0c
  41e5a1:	ret    0x5bca
  41e5a4:	add    DWORD PTR [eax],eax
  41e5a6:	sub    al,0x3
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	imul   ebp,DWORD PTR [edx+0x54e7ad28],0x473c7ca1
  41e5b4:	jg     0x41e61b
  41e5b6:	repnz mov eax,ecx
  41e5b9:	xlat   BYTE PTR ds:[ebx]
  41e5ba:	addr16 out dx,al
  41e5bc:	xchg   BYTE PTR [edi],bh
  41e5be:	fcom   DWORD PTR [ebp-0x50c29e4c]
  41e5c4:	mov    ch,BYTE PTR [edi]
  41e5c6:	loope  0x41e60b
  41e5c8:	jns    0x41e5cf
  41e5ca:	sub    DWORD PTR [edi+0x123eee03],ebp
  41e5d0:	and    BYTE PTR [eax],bl
  41e5d2:	sub    DWORD PTR [ebp+0x2a6bd9a5],esp
  41e5d8:	mov    ch,0x83
  41e5da:	cmp    eax,0x4c4de8a6
  41e5df:	dec    eax
  41e5e0:	pop    edx
  41e5e1:	mov    ah,0xdd
  41e5e3:	fisttp WORD PTR [eax+0x74]
  41e5e6:	lds    esi,FWORD PTR [edi-0x51]
  41e5e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5ea:	cmp    cl,BYTE PTR [esp+ebp*2+0x417e8a10]
  41e5f1:	dec    ebx
  41e5f2:	pop    ebx
  41e5f3:	and    al,0x57
  41e5f5:	fimul  DWORD PTR [esp+ecx*8-0x7d924142]
  41e5fc:	jp     0x41e629
  41e5fe:	sti    
  41e5ff:	cmp    ah,BYTE PTR [edi+0x74]
  41e602:	or     cl,bl
  41e604:	adc    bh,BYTE PTR [ebp+0x4a]
  41e607:	inc    ecx
  41e608:	inc    esi
  41e609:	inc    ebp
  41e60a:	jmp    0x194f:0xd0079444
  41e611:	outs   dx,DWORD PTR ds:[esi]
  41e612:	rcr    DWORD PTR [ebx],0xa9
  41e615:	into   
  41e616:	inc    eax
  41e617:	lahf   
  41e618:	xchg   ecx,ebp
  41e61a:	ja     0x41e678
  41e61c:	pop    ebp
  41e61d:	lods   eax,DWORD PTR ds:[esi]
  41e61e:	xchg   edi,eax
  41e61f:	mov    ebp,0xc86fd102
  41e624:	pushf  
  41e625:	inc    esi
  41e626:	dec    edx
  41e627:	push   cs
  41e628:	inc    eax
  41e629:	test   DWORD PTR [ecx+0x43a3bee7],0xc52f7da1
  41e633:	bound  edx,QWORD PTR [edi]
  41e635:	mov    edx,edx
  41e637:	(bad)  
  41e638:	jl     0x41e6a4
  41e63a:	sbb    eax,0x237b40b0
  41e63f:	rol    ah,1
  41e641:	bound  ecx,QWORD PTR [esi+edi*1]
  41e644:	in     eax,0xc7
  41e646:	inc    esi
  41e647:	scas   al,BYTE PTR es:[edi]
  41e648:	sbb    al,0x27
  41e64a:	popfw  
  41e64c:	adc    esp,ebx
  41e64e:	aaa    
  41e64f:	pop    ds
  41e650:	stc    
  41e651:	dec    ecx
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	inc    edx
  41e654:	push   esi
  41e655:	dec    eax
  41e656:	push   eax
  41e657:	cs jmp 0x73d8e4fd
  41e65d:	push   ebp
  41e65e:	push   ebx
  41e65f:	mov    ds:0x8a2ff5fe,al
  41e664:	jnp    0x41e6a7
  41e666:	and    eax,0x8cf53bf8
  41e66b:	inc    eax
  41e66c:	sub    DWORD PTR [edi-0x1dd82a86],eax
  41e672:	push   edi
  41e673:	push   ecx
  41e674:	jmp    0x41e615
  41e676:	mov    ah,BYTE PTR [edi]
  41e678:	repnz out dx,eax
  41e67a:	inc    esi
  41e67b:	push   0xa7d87e2a
  41e680:	mov    cl,0x1d
  41e682:	or     dl,BYTE PTR [eax-0x63ed32bb]
  41e688:	xchg   esi,eax
  41e689:	repz loopne 0x41e698
  41e68c:	mov    edx,0x5ffe153
  41e691:	hlt    
  41e692:	ins    BYTE PTR es:[edi],dx
  41e693:	cld    
  41e694:	sbb    al,0x66
  41e696:	ss je  0x41e691
  41e699:	fcomip st,st(2)
  41e69b:	pusha  
  41e69c:	leave  
  41e69d:	mov    ah,BYTE PTR [edx]
  41e69f:	mov    WORD PTR [ecx],fs
  41e6a1:	aas    
  41e6a2:	xlat   BYTE PTR ds:[ebx]
  41e6a3:	mov    edx,0xc509cad5
  41e6a8:	(bad)  
  41e6a9:	test   eax,0xc6a5fafe
  41e6ae:	xchg   BYTE PTR [ebp-0x57a2ee83],ch
  41e6b4:	xor    ah,al
  41e6b6:	mov    eax,ds:0x77fdb174
  41e6bb:	dec    ecx
  41e6bc:	(bad)  
  41e6bd:	lods   eax,DWORD PTR ds:[esi]
  41e6be:	push   cs
  41e6bf:	faddp  st(6),st
  41e6c1:	sbb    ebx,esp
  41e6c3:	repnz add ebx,DWORD PTR [edi]
  41e6c6:	cmp    eax,0x56072af1
  41e6cb:	pop    ebp
  41e6cc:	inc    BYTE PTR [edx+0x1e732b06]
  41e6d2:	cmp    esp,DWORD PTR [eax-0x13]
  41e6d5:	mov    esp,0x62bae322
  41e6da:	mov    DWORD PTR [edx],edx
  41e6dc:	out    0x0,al
  41e6de:	das    
  41e6df:	lahf   
  41e6e0:	mov    eax,0x8a7bf6ef
  41e6e5:	mov    dl,0x81
  41e6e7:	gs pop ebx
  41e6e9:	xlat   BYTE PTR ds:[ebx]
  41e6ea:	dec    ecx
  41e6eb:	mov    es,WORD PTR [edx-0x7facafd3]
  41e6f1:	xchg   ecx,eax
  41e6f2:	enter  0xfe29,0xa6
  41e6f6:	push   ebx
  41e6f7:	dec    ebx
  41e6f8:	push   eax
  41e6f9:	xchg   DWORD PTR [eax+0x3c9c8611],ebp
  41e6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e700:	mov    BYTE PTR [edx+esi*4],ah
  41e703:	jmp    0x5f4b8ae4
  41e708:	fst    DWORD PTR [esi]
  41e70a:	sub    eax,0x41a94967
  41e70f:	ret    0xd042
  41e712:	push   ebx
  41e713:	adc    eax,edi
  41e715:	in     eax,dx
  41e716:	push   edx
  41e717:	push   edi
  41e718:	or     DWORD PTR [esi+ecx*4+0x413f6b5d],esi
  41e71f:	out    dx,eax
  41e720:	xor    eax,0x40c0fcf0
  41e725:	fstp   QWORD PTR [ebx-0x429afeee]
  41e72b:	popa   
  41e72c:	xor    DWORD PTR [ebx+edx*2+0x66bdad0],esi
  41e733:	or     al,0x8e
  41e735:	sub    DWORD PTR [ecx+0x50b24ad2],edi
  41e73b:	data16 xor bh,BYTE PTR [esi+0x14e70575]
  41e742:	out    0x3e,al
  41e744:	lods   al,BYTE PTR ds:[esi]
  41e745:	mov    ecx,0x17e90c5e
  41e74a:	jmp    0x41e732
  41e74c:	stos   DWORD PTR es:[edi],eax
  41e74d:	test   DWORD PTR [ecx*4-0x59545af2],edi
  41e754:	pop    ebx
  41e755:	addr16 pop esi
  41e757:	fs and eax,0x7d9fdd08
  41e75d:	xor    ecx,DWORD PTR [ebp+ebx*1+0x797ec504]
  41e764:	push   ss
  41e765:	inc    ecx
  41e766:	xor    eax,DWORD PTR [ecx]
  41e768:	sub    ecx,DWORD PTR [ebx+0x328ef1f1]
  41e76e:	or     DWORD PTR [edx+0x56cad21b],ecx
  41e774:	push   esi
  41e775:	inc    ebx
  41e776:	push   esi
  41e777:	or     al,0x18
  41e779:	pop    esi
  41e77a:	pop    edx
  41e77b:	daa    
  41e77c:	stc    
  41e77d:	fs cwde 
  41e77f:	cmp    eax,0x8b445384
  41e784:	pop    esi
  41e785:	push   gs
  41e787:	mov    bl,0xdc
  41e789:	unpckhps xmm7,XMMWORD PTR [ebx+0x11e92a38]
  41e790:	(bad)  
  41e791:	hlt    
  41e792:	cmc    
  41e793:	leave  
  41e794:	hlt    
  41e795:	xlat   BYTE PTR ds:[ebx]
  41e796:	or     ecx,esp
  41e798:	fidiv  WORD PTR [esi+0x31]
  41e79b:	(bad)  
  41e79c:	push   es
  41e79d:	xchg   BYTE PTR [ebp-0x2],bh
  41e7a0:	mov    edx,ds
  41e7a2:	jmp    0x41e7f2
  41e7a4:	mov    ds:0x982d248e,eax
  41e7a9:	sub    eax,0xbcb0c64f
  41e7ae:	int3   
  41e7af:	fild   QWORD PTR [esi+0x6a6a7794]
  41e7b5:	in     eax,dx
  41e7b6:	cwde   
  41e7b7:	adc    BYTE PTR [esi],bh
  41e7b9:	push   eax
  41e7ba:	lea    esp,[ebx-0x52]
  41e7bd:	xlat   BYTE PTR ds:[ebx]
  41e7be:	dec    edi
  41e7bf:	loopne 0x41e7e8
  41e7c1:	scas   al,BYTE PTR es:[edi]
  41e7c2:	jo     0x41e744
  41e7c4:	pop    ss
  41e7c5:	retf   0xf65d
  41e7c8:	mov    ds:0xd1361b40,eax
  41e7cd:	arpl   WORD PTR [ebx],bx
  41e7cf:	sbb    BYTE PTR [edi+0x5bbac6e5],bh
  41e7d5:	or     bl,0x5b
  41e7d8:	sbb    dh,BYTE PTR [edi+0x6df60023]
  41e7de:	dec    ebx
  41e7df:	xor    eax,0xff215e3c
  41e7e4:	(bad)  
  41e7e6:	mov    ch,BYTE PTR [esi+0xc4a8866]
  41e7ec:	loopne 0x41e78c
  41e7ee:	pop    edx
  41e7ef:	(bad)  
  41e7f0:	je     0x41e81d
  41e7f2:	push   es
  41e7f3:	xchg   esi,eax
  41e7f4:	add    cl,bl
  41e7f6:	popf   
  41e7f7:	jg     0x41e83f
  41e7f9:	daa    
  41e7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7fb:	xchg   ebp,eax
  41e7fc:	jmp    0x79ab:0x802315ba
  41e803:	mov    cl,0xad
  41e805:	xchg   dl,bl
  41e807:	mov    bh,dh
  41e809:	popa   
  41e80a:	clc    
  41e80b:	fdivp  st(6),st
  41e80d:	push   edx
  41e80e:	cwde   
  41e80f:	sti    
  41e810:	mov    esp,0x444a59b3
  41e815:	loop   0x41e810
  41e817:	mov    WORD PTR [edx+0x7d],ds
  41e81a:	sbb    edx,ecx
  41e81c:	mov    bl,0x88
  41e81e:	rcl    BYTE PTR [eax+0x23],cl
  41e821:	jge    0x41e886
  41e823:	pop    ds
  41e824:	sbb    al,0x96
  41e826:	jbe    0x41e851
  41e828:	add    DWORD PTR [ecx+0x2c8c0303],eax
  41e82e:	fucomp st(5)
  41e830:	sbb    eax,DWORD PTR [edx+esi*8+0x20]
  41e834:	fucomip st,st(1)
  41e836:	enter  0xe72,0xf7
  41e83a:	cmp    ecx,DWORD PTR [ebx]
  41e83c:	les    esi,FWORD PTR [eax]
  41e83e:	ret    
  41e83f:	push   esi
  41e840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e841:	dec    ebx
  41e842:	and    DWORD PTR [esi+eiz*1],ecx
  41e845:	div    DWORD PTR [edi]
  41e847:	mov    ebx,DWORD PTR [edx+0x2e]
  41e84a:	mov    esi,0x4bc34a0d
  41e84f:	xlat   BYTE PTR ds:[ebx]
  41e850:	sar    DWORD PTR [ecx],1
  41e852:	xchg   DWORD PTR [ebx],esp
  41e854:	lock fidiv WORD PTR [edi+ecx*1]
  41e858:	lds    esi,FWORD PTR ds:0x2593e7b4
  41e85e:	retf   0x3632
  41e861:	loope  0x41e8d1
  41e863:	inc    ebp
  41e864:	ret    0xb678
  41e867:	pop    esi
  41e868:	(bad)  
  41e869:	mov    ds:0xfccd602c,eax
  41e86e:	xchg   edi,eax
  41e86f:	adc    ebx,ecx
  41e871:	inc    esi
  41e872:	inc    ebx
  41e873:	(bad)
  41e876:	stos   BYTE PTR es:[edi],al
  41e877:	mov    DWORD PTR [ebx+0x38],edi
  41e87a:	ja     0x41e808
  41e87c:	cmp    ebx,DWORD PTR [ecx+0x3]
  41e87f:	shl    BYTE PTR [esi-0x6d],1
  41e882:	xchg   ebp,eax
  41e883:	pop    ebx
  41e884:	sub    BYTE PTR [edi-0x366ebc2c],ch
  41e88a:	mov    al,0x44
  41e88c:	add    ecx,DWORD PTR [esi]
  41e88e:	aaa    
  41e88f:	in     eax,dx
  41e890:	add    BYTE PTR [ecx+0x34f0dea1],0x19
  41e897:	or     BYTE PTR [ecx],ch
  41e899:	nop
  41e89a:	outs   dx,BYTE PTR ds:[esi]
  41e89b:	ins    BYTE PTR es:[edi],dx
  41e89c:	ins    BYTE PTR es:[edi],dx
  41e89d:	daa    
  41e89e:	adc    dl,BYTE PTR [esi+0x250b1fba]
  41e8a4:	cdq    
  41e8a5:	nop
  41e8a6:	int3   
  41e8a7:	push   ss
  41e8a8:	inc    edi
  41e8a9:	fmul   st(1),st
  41e8ab:	and    edx,DWORD PTR ds:0xb81d8e2c
  41e8b1:	mov    eax,ds:0x8e871ba7
  41e8b6:	xchg   BYTE PTR [eax+0x34da67c2],bh
  41e8bc:	sahf   
  41e8bd:	mov    edi,0x65b1daf0
  41e8c2:	mov    ?,WORD PTR [ecx+0x73]
  41e8c5:	xchg   DWORD PTR [edx],eax
  41e8c7:	jecxz  0x41e910
  41e8c9:	adc    al,BYTE PTR [eax+0x9]
  41e8cc:	cmp    DWORD PTR [ebp+ebx*4-0x5c99054e],esi
  41e8d3:	jmp    0x428d04
	...
  41e8e0:	add    BYTE PTR [eax],al
  41e8e2:	test   eax,0xff94c95e
  41e8e7:	xchg   edi,eax
  41e8e8:	std    
  41e8e9:	jg     0x41e8f5
  41e8eb:	in     al,0x99
  41e8ed:	pop    ecx
  41e8ee:	js     0x41e92c
  41e8f0:	xor    DWORD PTR [ebx],edi
  41e8f2:	neg    BYTE PTR [esi+0x1]
  41e8f5:	add    BYTE PTR [ebx+eax*1],ch
  41e8f8:	add    BYTE PTR [eax],al
  41e8fa:	cmp    eax,0xc9fd6ade
  41e8ff:	inc    ecx
  41e900:	in     eax,dx
  41e901:	popa   
  41e902:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e904:	mov    cl,0x81
  41e906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e907:	shl    BYTE PTR [ebp+0x6f9a2c19],1
  41e90d:	xor    al,al
  41e90f:	mov    eax,0x805f9726
  41e914:	sbb    BYTE PTR [eax+0x6fc7a6e2],al
  41e91a:	ds enter 0x88b2,0x91
  41e91f:	pusha  
  41e920:	jecxz  0x41e90b
  41e922:	pop    ss
  41e923:	add    al,0x60
  41e925:	pop    esi
  41e926:	adc    al,BYTE PTR [edi-0x14bd8b72]
  41e92c:	mov    ah,0x29
  41e92e:	mov    edi,0xcc31a21f
  41e933:	fiadd  DWORD PTR [edx]
  41e935:	pusha  
  41e936:	int3   
  41e937:	dec    esp
  41e938:	clc    
  41e939:	(bad)  
  41e93a:	icebp  
  41e93b:	or     cl,BYTE PTR [edi]
  41e93d:	or     BYTE PTR [eax+ebp*2+0x4077960d],bh
  41e944:	and    BYTE PTR [edx+0x6b],cl
  41e947:	pop    esp
  41e948:	push   0x7f00e470
  41e94d:	scas   al,BYTE PTR es:[edi]
  41e94e:	aas    
  41e94f:	sub    eax,ebp
  41e951:	fwait
  41e952:	das    
  41e953:	push   ss
  41e954:	pop    esp
  41e955:	fist   WORD PTR [ecx+0x1b]
  41e958:	cwde   
  41e959:	jmp    0xcddc:0xa9ea3752
  41e960:	out    0x9a,eax
  41e962:	cmp    al,dh
  41e964:	lods   al,BYTE PTR ds:[esi]
  41e965:	cld    
  41e966:	clc    
  41e967:	pop    ecx
  41e968:	mov    es,eax
  41e96a:	push   0xafcb9569
  41e96f:	ins    BYTE PTR es:[edi],dx
  41e970:	ficomp WORD PTR [ebx-0x3ac4bcc0]
  41e976:	jmp    0x41e9f7
  41e978:	push   edi
  41e979:	adc    dh,BYTE PTR [ebp+0x0]
  41e97c:	inc    ebx
  41e97d:	pushf  
  41e97e:	jbe    0x41e976
  41e980:	mov    cl,0x35
  41e982:	xchg   edi,eax
  41e983:	mov    al,0x59
  41e985:	xor    ch,dh
  41e987:	mov    WORD PTR [ebx-0x64],?
  41e98a:	fstp   DWORD PTR [eax+ebp*2]
  41e98d:	xor    BYTE PTR [ebp-0x56],ch
  41e990:	sbb    eax,DWORD PTR [eax+0x4e]
  41e993:	(bad)  
  41e994:	xchg   ebp,eax
  41e995:	out    dx,eax
  41e996:	sbb    edx,DWORD PTR [ebp+0xe]
  41e999:	cwde   
  41e99a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e99b:	pop    ecx
  41e99c:	stc    
  41e99d:	(bad)  
  41e99e:	and    eax,ebp
  41e9a0:	push   ebp
  41e9a1:	mov    al,BYTE PTR [ecx]
  41e9a3:	test   BYTE PTR [ebx+0x54bb8701],ah
  41e9a9:	jmp    0x41e965
  41e9ab:	imul   eax,DWORD PTR [bp+di+0x10],0x2e
  41e9b0:	bound  edx,QWORD PTR [edi]
  41e9b2:	in     eax,0x31
  41e9b4:	push   0xfa0c6f49
  41e9b9:	jmp    0xe1c0:0xeb99eac9
  41e9c0:	out    dx,al
  41e9c1:	ins    DWORD PTR es:[edi],dx
  41e9c2:	cmp    BYTE PTR [ecx-0x64469b70],ah
  41e9c8:	mov    ch,0xe4
  41e9ca:	sub    eax,0x8e869f68
  41e9cf:	(bad)  
  41e9d0:	fwait
  41e9d1:	ins    BYTE PTR es:[edi],dx
  41e9d2:	test   al,0xae
  41e9d4:	inc    edx
  41e9d5:	or     BYTE PTR [ebp+0xd],ah
  41e9d8:	push   edx
  41e9d9:	out    dx,eax
  41e9da:	push   ebp
  41e9db:	sub    al,0xd4
  41e9dd:	mov    cl,0x13
  41e9df:	aam    0x42
  41e9e1:	jmp    0x41e995
  41e9e3:	adc    BYTE PTR [ebx+0x68],dl
  41e9e6:	inc    esi
  41e9e7:	and    ecx,0x4a
  41e9ea:	jp     0x41ea4b
  41e9ec:	pop    ss
  41e9ed:	sub    eax,0xed240b5
  41e9f2:	out    dx,eax
  41e9f3:	mov    ch,0x10
  41e9f5:	imul   edi,DWORD PTR [ecx],0x61
  41e9f8:	or     al,bh
  41e9fa:	retf   0xa238
  41e9fd:	jp     0x41e99e
  41e9ff:	sbb    BYTE PTR [edx],dh
  41ea01:	icebp  
  41ea02:	dec    edi
  41ea03:	rcl    BYTE PTR [eax+0x4a8aed95],1
  41ea09:	mov    ebp,0x5f0aba65
  41ea0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea0f:	mov    edx,0x24bd03a7
  41ea14:	bound  eax,QWORD PTR [eax]
  41ea16:	xchg   DWORD PTR [esi+0x100a3d69],ecx
  41ea1c:	jno    0x41e9f8
  41ea1e:	and    al,0xaa
  41ea20:	ins    BYTE PTR es:[edi],dx
  41ea21:	xchg   ebx,eax
  41ea22:	add    DWORD PTR ds:0x5fd240b7,ecx
  41ea28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea29:	add    eax,0x69f0e4fa
  41ea2e:	imul   eax,DWORD PTR [esi+0x2ef7194f],0x4ee9cc99
  41ea38:	xchg   esp,eax
  41ea39:	mov    edi,0xeded1926
  41ea3e:	or     eax,0xdba7a33
  41ea43:	call   0xf0dc235
  41ea48:	loope  0x41eaa5
  41ea4a:	cmp    dh,BYTE PTR [esi]
  41ea4c:	jmp    0x17625c2e
  41ea51:	out    dx,al
  41ea52:	push   ds
  41ea53:	aad    0xeb
  41ea55:	mov    edx,0xdeaeaa93
  41ea5a:	inc    ebx
  41ea5b:	fisttp QWORD PTR [esi-0xe61009b]
  41ea61:	mov    esp,0x100e49fd
  41ea66:	in     eax,0x79
  41ea68:	addr16 iret 
  41ea6a:	pop    es
  41ea6b:	out    dx,al
  41ea6c:	sub    ebx,DWORD PTR [edi]
  41ea6e:	(bad)  [edx+edi*2-0x695f7208]
  41ea75:	dec    ebx
  41ea76:	mov    al,ds:0x7e4eb9de
  41ea7b:	or     edi,DWORD PTR [edi-0x24]
  41ea7e:	scas   al,BYTE PTR es:[edi]
  41ea7f:	into   
  41ea80:	mov    al,0x76
  41ea82:	div    DWORD PTR [esi]
  41ea84:	xor    cl,bl
  41ea86:	pop    ebx
  41ea87:	pop    edx
  41ea88:	xchg   edx,eax
  41ea89:	data16 cmp BYTE PTR ss:[esi*4+0xf5835a6],dh
  41ea92:	(bad)  [ebx+0x1c842c6]
  41ea98:	jo     0x41ea22
  41ea9a:	xchg   ebx,eax
  41ea9b:	clc    
  41ea9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea9d:	dec    edi
  41ea9e:	xor    eax,0x15e2654
  41eaa3:	xchg   ebp,eax
  41eaa4:	lods   ax,WORD PTR ds:[esi]
  41eaa6:	mov    ecx,0x4eacae58
  41eaab:	adc    al,BYTE PTR [ebx-0x2e]
  41eaae:	jbe    0x41ea9b
  41eab0:	lds    edi,FWORD PTR [ebx]
  41eab2:	repz call 0x81e0b69b
  41eab8:	inc    edi
  41eab9:	lahf   
  41eaba:	fsubr  DWORD PTR [esi]
  41eabc:	push   edi
  41eabd:	push   ds
  41eabe:	or     BYTE PTR [edi],0x15
  41eac1:	addr16 popa 
  41eac3:	add    ch,bl
  41eac5:	xchg   ecx,eax
  41eac6:	pop    edx
  41eac7:	sbb    eax,0xc700e760
  41eacc:	xor    DWORD PTR [esi-0x471820e0],esp
  41ead2:	(bad)  
  41ead3:	out    dx,al
  41ead4:	idiv   DWORD PTR [eax-0x48]
  41ead7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ead8:	sbb    esi,DWORD PTR [ecx+0x2d00880a]
  41eade:	stc    
  41eadf:	or     DWORD PTR [ecx],edx
  41eae1:	or     edi,DWORD PTR [ebp-0x5c803e]
  41eae7:	imul   ebx,ebp,0xffffff8b
  41eaea:	inc    ebp
  41eaeb:	imul   esp,DWORD PTR [edi-0x6a],0xffffffca
  41eaef:	aaa    
  41eaf0:	mov    edi,0xbef3cfe8
  41eaf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaf6:	jns    0x41eb05
  41eaf8:	ja     0x41eb5c
  41eafa:	push   esp
  41eafb:	fcomp  QWORD PTR [ebx+0x621bdcc2]
  41eb01:	repnz xchg ebp,eax
  41eb03:	out    0xe0,eax
  41eb05:	adc    ebp,esi
  41eb07:	dec    ebx
  41eb08:	gs stos BYTE PTR es:[edi],al
  41eb0a:	adc    esp,DWORD PTR [eax+0x7071e4b8]
  41eb10:	mov    DWORD PTR [ecx],edx
  41eb12:	hlt    
  41eb13:	test   BYTE PTR [edi-0x5e],0xa7
  41eb17:	ret    
  41eb18:	sub    ebp,DWORD PTR ds:0x5a64b4d
  41eb1e:	in     al,dx
  41eb1f:	aaa    
  41eb20:	shr    DWORD PTR [eax+0x9],0xb
  41eb24:	pushf  
  41eb25:	ret    
  41eb26:	into   
  41eb27:	jle    0x41eb24
  41eb29:	add    al,0x54
  41eb2b:	daa    
  41eb2c:	push   ebp
  41eb2d:	lods   eax,DWORD PTR ds:[esi]
  41eb2e:	add    eax,0x420728ef
  41eb33:	out    dx,al
  41eb34:	stc    
  41eb35:	and    al,0xa9
  41eb37:	lods   al,BYTE PTR ds:[esi]
  41eb38:	cmp    esi,esi
  41eb3a:	mov    ds:0x1429e47a,al
  41eb3f:	push   ds
  41eb40:	mov    eax,0x82c36f7d
  41eb45:	xchg   DWORD PTR [edx],eax
  41eb47:	retf   0x6f66
  41eb4a:	mov    esi,0x168a12ba
  41eb4f:	adc    BYTE PTR [eax-0x190683c3],0xf1
  41eb56:	pop    ebp
  41eb57:	lahf   
  41eb58:	xlat   BYTE PTR ds:[ebx]
  41eb59:	sti    
  41eb5a:	cmp    ah,BYTE PTR [eax-0x63d5e38b]
  41eb60:	aad    0xf2
  41eb62:	dec    esi
  41eb63:	(bad)  
  41eb64:	mov    ecx,0x4976c735
  41eb69:	or     DWORD PTR [edx+0x4a4269a1],ecx
  41eb6f:	in     eax,0x92
  41eb71:	push   ds
  41eb72:	cli    
  41eb73:	test   eax,0xc8cd7de7
  41eb78:	dec    esp
  41eb79:	push   ebx
  41eb7a:	mov    edx,0xb500f0ed
  41eb7f:	int    0xc
  41eb81:	and    dl,BYTE PTR [eax-0x8c57d38]
  41eb87:	pop    es
  41eb88:	pop    ebp
  41eb89:	pop    eax
  41eb8a:	rcr    DWORD PTR [esi+0x2f],1
  41eb8d:	shr    BYTE PTR [eax+0x38],cl
  41eb90:	mov    dl,0xb6
  41eb92:	inc    edx
  41eb93:	je     0x41eb6b
  41eb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb96:	dec    eax
  41eb97:	sub    al,0xd9
  41eb99:	inc    esp
  41eb9a:	int3   
  41eb9b:	imul   al
  41eb9d:	push   ecx
  41eb9e:	sbb    eax,0x1691ac3d
  41eba3:	adc    dh,BYTE PTR [ebp-0x24]
  41eba6:	lahf   
  41eba7:	jmp    0xde2b:0x6221f784
  41ebae:	cmp    BYTE PTR [edi],ah
  41ebb0:	mov    edi,0x9174f689
  41ebb5:	adc    edx,edi
  41ebb7:	leave  
  41ebb8:	adc    DWORD PTR [ecx-0x6639cb91],0x77658bbe
  41ebc2:	xor    al,0xdc
  41ebc4:	jg     0x41eb5c
  41ebc6:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebc8:	cmc    
  41ebc9:	xchg   ebp,eax
  41ebca:	shl    eax,cl
  41ebcc:	out    dx,eax
  41ebcd:	btr    DWORD PTR [ebx+0x7776f60a],ecx
  41ebd4:	and    eax,0xa24973e1
  41ebd9:	jl     0x41eb6e
  41ebdb:	dec    eax
  41ebdc:	dec    ecx
  41ebdd:	mov    ds:0x5a3deb80,eax
  41ebe2:	and    DWORD PTR [esi-0x44e86f25],ebp
  41ebe8:	sahf   
  41ebe9:	sub    BYTE PTR [edi],bl
  41ebeb:	inc    ebp
  41ebec:	jo     0x41ebbf
  41ebee:	rcl    DWORD PTR [edi+0x24260ae8],1
  41ebf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebf5:	or     DWORD PTR [eax],edi
  41ebf7:	ja     0x41ec10
  41ebf9:	xor    dl,BYTE PTR [edi-0x1]
  41ebfc:	outs   dx,DWORD PTR ds:[esi]
  41ebfd:	mov    ?,WORD PTR [ebp-0x7fc4ca62]
  41ec03:	stos   DWORD PTR es:[edi],eax
  41ec04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec05:	cwde   
  41ec06:	jae    0x41ec62
  41ec08:	sub    al,0x3
  41ec0a:	add    ecx,DWORD PTR ds:0x46fcedb0
  41ec10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec11:	pop    edx
  41ec12:	dec    eax
  41ec13:	into   
  41ec14:	jecxz  0x41ec17
  41ec16:	enter  0x7df1,0x18
  41ec1a:	imul   esp,DWORD PTR [esi-0x3b01a10],0x3ee8f2db
  41ec24:	mov    ah,0xa1
	...
  41ec32:	mov    ebx,0x7d7539cf
  41ec37:	idiv   edi
  41ec39:	iret   
  41ec3a:	std    
  41ec3b:	mov    ecx,DWORD PTR [esi-0x35f74bf1]
  41ec41:	lock and ah,BYTE PTR [edx+0x1]
  41ec45:	add    BYTE PTR [ebx+eax*1],ch
  41ec48:	add    BYTE PTR [eax],al
  41ec4a:	xor    al,0x90
  41ec4c:	call   0x6331deb7
  41ec51:	int    0x75
  41ec53:	mov    al,0xc0
  41ec55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec56:	adc    bl,BYTE PTR [edi+ebp*8]
  41ec59:	ss jp  0x41ec04
  41ec5c:	je     0x41ec03
  41ec5e:	lds    ebx,FWORD PTR [ecx+0x4a]
  41ec61:	jmp    0xba27e2c2
  41ec66:	lods   eax,DWORD PTR ds:[esi]
  41ec67:	(bad)  
  41ec68:	leave  
  41ec69:	mov    edx,0x7ecd5f37
  41ec6e:	scas   al,BYTE PTR es:[edi]
  41ec6f:	jecxz  0x41ec10
  41ec71:	fcom   DWORD PTR [ebp-0x66]
  41ec74:	test   eax,0x2384fd25
  41ec79:	jno    0x41ec65
  41ec7b:	pop    esi
  41ec7c:	test   al,0x3d
  41ec7e:	dec    esi
  41ec7f:	ss dec eax
  41ec81:	pop    esi
  41ec82:	pop    ecx
  41ec83:	fisttp WORD PTR [esi+eax*2-0x15c1586f]
  41ec8a:	ficom  DWORD PTR [ecx+0x23]
  41ec8d:	mov    edi,0xa2be23ec
  41ec92:	jecxz  0x41ec5d
  41ec94:	in     al,dx
  41ec95:	cmovs  ebp,DWORD PTR [ebx-0x2e0e19e2]
  41ec9c:	je     0x41ec57
  41ec9e:	or     al,ah
  41eca0:	sub    DWORD PTR [ebx],eax
  41eca2:	pop    es
  41eca3:	imul   ebp,ebp,0xb5aed86f
  41eca9:	push   0xffffffc1
  41ecab:	inc    esi
  41ecac:	outs   dx,DWORD PTR ds:[esi]
  41ecad:	adc    eax,0x974c6439
  41ecb2:	mov    esp,0xe0baaf52
  41ecb7:	ficom  DWORD PTR ds:0x80da9e2b
  41ecbd:	mov    dh,0x32
  41ecbf:	push   esp
  41ecc0:	xchg   ebx,eax
  41ecc1:	(bad)  
  41ecc2:	fisttp WORD PTR ss:[ecx-0x6261afb2]
  41ecc9:	or     cl,BYTE PTR [ecx]
  41eccb:	out    0x2,al
  41eccd:	pusha  
  41ecce:	cmp    BYTE PTR [ecx+0x51],dh
  41ecd1:	push   edi
  41ecd2:	pop    ecx
  41ecd3:	dec    ebp
  41ecd4:	mov    DWORD PTR [ebx-0x2afbbcaf],0x1322f37
  41ecde:	pop    es
  41ecdf:	sub    cl,BYTE PTR [edx+0x78]
  41ece2:	adc    DWORD PTR [esi],0xffffffae
  41ece5:	mov    cl,0x2c
  41ece7:	push   ebx
  41ece8:	jo     0x41ec95
  41ecea:	jg     0x41ed2b
  41ecec:	pushf  
  41eced:	sbb    edx,eax
  41ecef:	pop    edx
  41ecf0:	xor    al,0x1e
  41ecf2:	das    
  41ecf3:	loope  0x41ecdd
  41ecf5:	push   cs
  41ecf6:	ins    DWORD PTR es:[edi],dx
  41ecf7:	jnp    0x41ec9a
  41ecf9:	aas    
  41ecfa:	jae    0x41ece4
  41ecfc:	cld    
  41ecfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecfe:	int    0x78
  41ed00:	inc    eax
  41ed01:	cmp    eax,esp
  41ed03:	mov    ah,0x79
  41ed05:	jl     0x41ed37
  41ed07:	or     esp,DWORD PTR [eax-0x35]
  41ed0a:	push   eax
  41ed0b:	nop
  41ed0c:	push   0x37903f04
  41ed11:	clc    
  41ed12:	xchg   ebp,eax
  41ed13:	pop    esp
  41ed14:	push   es
  41ed15:	fcomp  DWORD PTR [ebp-0x54a95138]
  41ed1b:	mov    DWORD PTR [esi+ebx*4-0xfc591e6],0x6aa5a74f
  41ed26:	adc    BYTE PTR [edi-0x34b5aa8d],al
  41ed2c:	inc    esp
  41ed2d:	mov    ah,0x50
  41ed2f:	inc    ebx
  41ed30:	fwait
  41ed31:	xlat   BYTE PTR ds:[ebx]
  41ed32:	shr    BYTE PTR [edx+ebp*8],0x18
  41ed36:	mov    bh,0x2
  41ed38:	cmc    
  41ed39:	shl    cl,0x3f
  41ed3c:	mov    al,0x9c
  41ed3e:	cdq    
  41ed3f:	jne    0x41ecf5
  41ed41:	mov    dl,0x9d
  41ed43:	sub    BYTE PTR [ebx+0x58],dh
  41ed46:	imul   edx,DWORD PTR [esi+0x5e],0x54ed3a8b
  41ed4d:	and    ch,BYTE PTR [esi+eax*4]
  41ed50:	les    ebp,FWORD PTR [eax-0x5eb07211]
  41ed56:	dec    esp
  41ed57:	in     al,0x9
  41ed59:	outs   dx,BYTE PTR ds:[esi]
  41ed5a:	jns    0x41ed49
  41ed5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed5d:	enter  0xfd0e,0x9
  41ed61:	jne    0x41ed3a
  41ed63:	bound  edi,QWORD PTR [eax]
  41ed65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed66:	in     eax,dx
  41ed67:	mov    ds:0xfd20ce52,al
  41ed6c:	je     0x41edbe
  41ed6e:	int    0x87
  41ed70:	mov    edx,0xecc61e
  41ed75:	(bad)
  41ed79:	jl     0x41eda0
  41ed7b:	ret    0x1b1b
  41ed7e:	add    esi,edi
  41ed80:	out    0xb0,eax
  41ed82:	pusha  
  41ed83:	loope  0x41ede7
  41ed85:	xchg   DWORD PTR [ebx],eax
  41ed87:	xor    al,0x76
  41ed89:	loop   0x41ed63
  41ed8b:	mov    eax,0xdd66cc2a
  41ed90:	(bad)  
  41ed91:	pop    edi
  41ed92:	bts    ecx,esi
  41ed95:	inc    ebp
  41ed96:	ds dec ecx
  41ed98:	shl    DWORD PTR [ebx+0x6e],cl
  41ed9b:	pop    edi
  41ed9c:	sbb    BYTE PTR [ecx+eax*1+0x1f],0xda
  41eda1:	xchg   esi,eax
  41eda2:	inc    edi
  41eda4:	jne    0x41ee13
  41eda6:	into   
  41eda7:	add    eax,0x2ba8d5be
  41edac:	push   ebp
  41edad:	fistp  QWORD PTR [edi+0x2993ced2]
  41edb3:	xor    BYTE PTR [ecx+0x1b],dh
  41edb6:	test   BYTE PTR [esi+0x7],bh
  41edb9:	xor    DWORD PTR [ebx-0x1dc2bfd7],0x6e
  41edc0:	fldenv [edi-0x34]
  41edc3:	xlat   BYTE PTR ds:[ebx]
  41edc4:	pushf  
  41edc5:	mov    esp,0x562d47b1
  41edca:	aaa    
  41edcb:	mov    bl,0x5a
  41edcd:	dec    esp
  41edce:	xor    al,0x49
  41edd0:	ins    BYTE PTR es:[edi],dx
  41edd1:	and    al,0xee
  41edd3:	cmp    eax,0x10211ee8
  41edd8:	imul   edx,DWORD PTR cs:[eax],0x590c7de1
  41eddf:	pop    esi
  41ede0:	gs dec ebp
  41ede2:	jp     0x41edae
  41ede4:	gs in  eax,0xf
  41ede7:	stos   BYTE PTR es:[edi],al
  41ede8:	into   
  41ede9:	mov    dl,cl
  41edeb:	ja     0x41ed76
  41eded:	jbe    0x41edaa
  41edef:	inc    eax
  41edf0:	push   ecx
  41edf1:	pop    eax
  41edf2:	ret    
  41edf3:	pop    es
  41edf4:	xor    eax,0x41c93213
  41edf9:	and    eax,0x1dc4c251
  41edfe:	add    edx,0xfffffff1
  41ee01:	cmp    DWORD PTR [eax+ecx*1-0x2930ad55],esi
  41ee08:	outs   dx,BYTE PTR ds:[esi]
  41ee09:	(bad)  
  41ee0a:	mov    edx,0xf76043d3
  41ee0f:	mov    esp,0xeeca16ff
  41ee14:	mov    dl,0xb2
  41ee16:	push   ds
  41ee17:	shr    BYTE PTR [edx-0x41580f27],1
  41ee1d:	dec    esp
  41ee1e:	lds    ebx,FWORD PTR [edi+eax*4-0x5f]
  41ee22:	aas    
  41ee23:	cmp    bh,BYTE PTR [edx+0x7fabe5d0]
  41ee29:	mov    dl,0xb6
  41ee2b:	gs loopne 0x41ee49
  41ee2e:	jns    0x41ee5f
  41ee30:	(bad)  
  41ee31:	xor    edi,esi
  41ee33:	in     al,dx
  41ee34:	push   ds
  41ee35:	fs mov cl,0xc7
  41ee38:	push   esi
  41ee39:	pop    edx
  41ee3a:	mov    fs,eax
  41ee3c:	sbb    al,0x60
  41ee3e:	pop    ebx
  41ee3f:	jno    0x41ee80
  41ee41:	aas    
  41ee42:	scas   eax,DWORD PTR es:[edi]
  41ee43:	mov    ch,0xa1
  41ee45:	test   esi,edi
  41ee47:	aad    0xfc
  41ee49:	imul   edi,DWORD PTR ds:0x77d59e5,0xcd06f135
  41ee53:	cdq    
  41ee54:	out    dx,al
  41ee55:	out    dx,al
  41ee56:	sbb    eax,0xe2b7a1c
  41ee5b:	in     al,0x98
  41ee5d:	inc    ecx
  41ee5e:	cmp    al,0x3c
  41ee60:	sti    
  41ee61:	xchg   di,ax
  41ee63:	or     ah,BYTE PTR [eax+0x68]
  41ee66:	call   0x4d79:0xe4a93f3c
  41ee6d:	int3   
  41ee6e:	rcr    BYTE PTR [ecx-0x6dddaddb],1
  41ee74:	mov    ds:0xb4513c22,eax
  41ee79:	loope  0x41eeb7
  41ee7b:	pop    ss
  41ee7c:	test   BYTE PTR [edi+eiz*8+0x2770880a],0x8f
  41ee84:	int    0xf6
  41ee86:	adc    BYTE PTR [ebp-0x2b],al
  41ee89:	lds    edi,FWORD PTR [esi+0x14af380c]
  41ee8f:	out    0x7e,al
  41ee91:	sub    ecx,DWORD PTR [edx-0x4bce8c2b]
  41ee97:	pop    esi
  41ee98:	adc    eax,ebx
  41ee9a:	mov    ch,0xfc
  41ee9c:	call   DWORD PTR [ecx+0x4045be68]
  41eea2:	xchg   esi,eax
  41eea3:	xchg   ebp,eax
  41eea4:	outs   dx,BYTE PTR ds:[esi]
  41eea5:	push   ds
  41eea6:	adc    eax,0xcf93834a
  41eeab:	fs fst st(6)
  41eeae:	mov    edx,0xd42d5d0
  41eeb3:	fisttp WORD PTR [edi-0x50]
  41eeb6:	fisubr DWORD PTR [ecx]
  41eeb8:	mov    edx,0x7890187e
  41eebd:	cmp    eax,0xc362330b
  41eec2:	(bad)  [ecx+0x61]
  41eec5:	scas   eax,DWORD PTR es:[edi]
  41eec6:	cmp    eax,0xa85a1799
  41eecb:	cmp    dl,bh
  41eecd:	(bad)  
  41eece:	push   ebp
  41eecf:	or     eax,0xc9af236
  41eed4:	call   0x35dac231
  41eed9:	loop   0x41ef4a
  41eedb:	add    DWORD PTR [ecx-0x3caaebd6],0xffffff92
  41eee2:	rol    DWORD PTR [ebx],1
  41eee4:	push   0x6f
  41eee6:	mov    eax,ds:0x123fa239
  41eeeb:	shr    BYTE PTR ss:[edi+0x60f8ed19],cl
  41eef2:	cmp    eax,0x1fd90b84
  41eef7:	outs   dx,BYTE PTR ds:[esi]
  41eef8:	(bad)  [ecx-0x230665cb]
  41eefe:	rcl    BYTE PTR ds:0xa2018fe0,cl
  41ef04:	leave  
  41ef05:	repnz adc bl,BYTE PTR [ebp-0x59]
  41ef09:	jns    0x41ef4b
  41ef0b:	xor    bh,0xc
  41ef0e:	xor    al,0xa2
  41ef10:	retf   
  41ef11:	call   0xcdfd156c
  41ef16:	loope  0x41ef5a
  41ef18:	ja     0x41eefc
  41ef1a:	fstp   TBYTE PTR [esi-0x59]
  41ef1d:	sbb    ah,cl
  41ef1f:	sbb    bh,bh
  41ef21:	mov    BYTE PTR ds:0x54a14e1a,ah
  41ef27:	jge    0x41eed1
  41ef29:	xchg   ebp,eax
  41ef2a:	inc    ecx
  41ef2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef2c:	cmc    
  41ef2d:	mov    al,0xf5
  41ef2f:	mov    BYTE PTR [ecx-0x286b987f],0x99
  41ef36:	into   
  41ef37:	mov    eax,0xc0e55b11
  41ef3c:	ss loop 0x41ef4c
  41ef3f:	pop    edx
  41ef40:	loope  0x41ef77
  41ef42:	xchg   edi,eax
  41ef43:	inc    BYTE PTR [ebp-0x2b]
  41ef46:	cmp    eax,0x32a06bb9
  41ef4b:	xor    al,0xfd
  41ef4d:	jmp    0x41ef60
  41ef4f:	jecxz  0x41ef3f
  41ef51:	inc    ebx
  41ef52:	xchg   BYTE PTR [esi-0x76100e1f],bl
  41ef58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef59:	out    0xed,al
  41ef5b:	sbb    DWORD PTR [esp+eax*1+0x41],ebp
  41ef5f:	xor    BYTE PTR [edi-0x47],bh
  41ef62:	cli    
  41ef63:	mov    BYTE PTR [ebx-0x26],ah
  41ef66:	xor    dh,BYTE PTR [esi]
  41ef68:	jp     0x41eeff
  41ef6a:	mov    esi,0xfe941de
  41ef6f:	outs   dx,DWORD PTR ds:[esi]
  41ef70:	mov    edx,0x4c28d913
  41ef75:	lds    eax,FWORD PTR [eax]
	...
  41ef7f:	add    BYTE PTR [eax],al
  41ef81:	add    dh,ch
  41ef83:	ret    0x2d9d
  41ef86:	mov    ebp,0x3fc3fe7f
  41ef8b:	out    dx,eax
  41ef8c:	mov    edi,0x1986e537
  41ef91:	xor    cl,BYTE PTR [esi+0x65]
  41ef94:	add    DWORD PTR [eax],eax
  41ef96:	sub    al,0x3
  41ef98:	add    BYTE PTR [eax],al
  41ef9a:	out    dx,al
  41ef9b:	xor    al,0xdb
  41ef9d:	xor    ecx,DWORD PTR [eax-0x4264153e]
  41efa3:	inc    ebp
  41efa4:	mov    ebp,0xa01251d1
  41efa9:	adc    BYTE PTR [ecx+0x708ced15],dh
  41efaf:	pop    es
  41efb0:	add    al,0x4d
  41efb2:	cmp    bl,BYTE PTR [edi-0x1e14f1a9]
  41efb8:	sub    BYTE PTR [ebx],dh
  41efba:	jl     0x41ef5e
  41efbc:	jg     0x41efe2
  41efbe:	pop    edi
  41efbf:	pop    esp
  41efc0:	inc    esp
  41efc1:	or     eax,0xb113bc8a
  41efc6:	and    DWORD PTR [edi+0x1c],esp
  41efc9:	sub    al,0x25
  41efcb:	adc    BYTE PTR [edi-0x4ef122a8],0xb8
  41efd2:	pop    edx
  41efd3:	jle    0x41ef7d
  41efd5:	jecxz  0x41eff0
  41efd7:	add    DWORD PTR [edx+0x27],edi
  41efda:	dec    esp
  41efdb:	pusha  
  41efdc:	xchg   ebx,eax
  41efdd:	icebp  
  41efde:	js     0x41ef87
  41efe0:	ins    DWORD PTR es:[di],dx
  41efe2:	stos   BYTE PTR es:[edi],al
  41efe3:	adc    DWORD PTR [esi-0x55],0x58
  41efe7:	mov    dl,0xcb
  41efe9:	scas   al,BYTE PTR es:[edi]
  41efea:	scas   al,BYTE PTR es:[edi]
  41efeb:	dec    ebp
  41efec:	push   esp
  41efed:	fcmovbe st,st(6)
  41efef:	push   ebx
  41eff0:	xor    cl,BYTE PTR [edx+0x6d]
  41eff3:	enter  0x85eb,0xe4
  41eff7:	(bad)  
  41eff8:	jmp    0xb441:0xd83e0f18
  41efff:	out    dx,eax
  41f000:	jns    0x41f01b
  41f002:	pop    edi
  41f003:	stc    
  41f004:	iret   
  41f005:	(bad)  
  41f006:	xor    al,0xf
  41f008:	xchg   BYTE PTR [ebx],dl
  41f00a:	or     eax,0x6c830ec3
  41f00f:	mov    al,0x52
  41f011:	fisubr DWORD PTR [ebp-0x5f]
  41f014:	shl    BYTE PTR ds:0xc8ab4731,1
  41f01a:	into   
  41f01b:	cmp    eax,0x9e7cd686
  41f020:	push   0xffffffe2
  41f022:	add    ah,al
  41f024:	jmp    0x5497:0xc94a6fcb
  41f02b:	xlat   BYTE PTR ds:[ebx]
  41f02c:	mov    ah,0xf6
  41f02e:	test   DWORD PTR [ecx],eax
  41f030:	add    DWORD PTR ds:0x8e5a950a,ebx
  41f036:	push   ebp
  41f037:	and    dh,BYTE PTR [edx-0x1290b6a7]
  41f03d:	into   
  41f03e:	(bad)  
  41f03f:	int    0xe4
  41f041:	dec    edi
  41f042:	(bad)  
  41f043:	mov    edx,ebx
  41f045:	jge    0x41f046
  41f047:	dec    esi
  41f048:	aaa    
  41f049:	addr16 xchg ebp,eax
  41f04b:	cmp    al,ah
  41f04d:	adc    DWORD PTR [ecx-0x54],eax
  41f050:	dec    ebx
  41f051:	js     0x41f02b
  41f053:	fs mov ch,0x70
  41f056:	shr    edi,1
  41f058:	jl     0x41f003
  41f05a:	out    dx,eax
  41f05b:	sub    ch,BYTE PTR [eax]
  41f05d:	scas   al,BYTE PTR es:[edi]
  41f05e:	push   eax
  41f05f:	lock jl 0x41f07a
  41f062:	xor    al,0xd2
  41f064:	xor    esi,DWORD PTR [esi-0x7a]
  41f067:	sub    al,0x88
  41f069:	jp     0x41f049
  41f06b:	cvtps2pi mm6,QWORD PTR [eax-0x49269946]
  41f072:	fstp   QWORD PTR [edi-0x1ece129a]
  41f078:	and    bh,ch
  41f07a:	xor    eax,0x2b3bcaa7
  41f07f:	add    al,0xdc
  41f081:	xor    ecx,DWORD PTR [ebp-0x7bb639cc]
  41f087:	arpl   WORD PTR [eax+0x5b],sp
  41f08a:	dec    esi
  41f08b:	andnps xmm1,xmm7
  41f08e:	jb     0xf28fdb51
  41f094:	jbe    0x41f04c
  41f096:	cwde   
  41f097:	inc    edx
  41f098:	xor    al,0xb7
  41f09a:	mov    ecx,0x847a4a1c
  41f09f:	pop    ds
  41f0a0:	push   0x8391c08f
  41f0a5:	sbb    al,0x2b
  41f0a7:	dec    esi
  41f0a8:	xor    al,0xcf
  41f0aa:	adc    ecx,DWORD PTR [ebp+0x14edb0b6]
  41f0b0:	sbb    ah,dl
  41f0b2:	retf   0x1051
  41f0b5:	cdq    
  41f0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b7:	imul   ecx,DWORD PTR [edi+0x66],0x3ce99625
  41f0be:	mov    ah,0x8b
  41f0c0:	sbb    esi,esi
  41f0c2:	push   es
  41f0c3:	push   0xfffffffb
  41f0c5:	pusha  
  41f0c6:	inc    eax
  41f0c7:	out    dx,al
  41f0c8:	or     ah,BYTE PTR [ecx]
  41f0ca:	add    eax,DWORD PTR [esi+ebp*8+0x4a]
  41f0ce:	aaa    
  41f0cf:	xor    ch,BYTE PTR [ebx]
  41f0d1:	fistp  QWORD PTR [edx+eax*4-0x1ac049ed]
  41f0d8:	sbb    eax,0x79370118
  41f0dd:	push   edi
  41f0de:	mov    ebx,0x36a1b57c
  41f0e3:	shr    DWORD PTR ds:0x29a4a99d,0xa3
  41f0ea:	push   esp
  41f0eb:	ins    BYTE PTR es:[edi],dx
  41f0ec:	mov    esi,0x438ca333
  41f0f1:	cli    
  41f0f2:	cmp    al,0x3c
  41f0f4:	jb     0x41f0d9
  41f0f6:	vmulpd ymm5,ymm1,YMMWORD PTR [edi+edi*1]
  41f0fb:	enter  0x5736,0x5f
  41f0ff:	or     al,0xee
  41f101:	jmp    0x41f124
  41f103:	hlt    
  41f104:	sbb    BYTE PTR [esi-0x73],ch
  41f107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f108:	jecxz  0x41f0dc
  41f10a:	in     al,0x7a
  41f10c:	pop    eax
  41f10d:	fiadd  DWORD PTR [eax+esi*1]
  41f110:	mov    cl,0x94
  41f112:	and    esi,ebp
  41f114:	inc    esp
  41f115:	or     cl,BYTE PTR [eax]
  41f117:	mov    al,ds:0x3df83f2f
  41f11c:	aad    0xd4
  41f11e:	lahf   
  41f11f:	pop    esi
  41f120:	xchg   al,ah
  41f122:	and    eax,0x9be58645
  41f127:	cld    
  41f128:	mov    ebp,0x2849c48d
  41f12d:	dec    ecx
  41f12e:	icebp  
  41f12f:	dec    ebp
  41f130:	or     esi,edi
  41f132:	cmp    al,0xa7
  41f134:	push   esp
  41f135:	jge    0x41f16d
  41f137:	mov    esp,0x42aaa781
  41f13c:	pop    ds
  41f13d:	iret   
  41f13e:	retf   
  41f13f:	sbb    al,0xa6
  41f141:	out    dx,eax
  41f142:	mov    esp,ebx
  41f144:	ja     0x41f163
  41f146:	push   ecx
  41f147:	xchg   edx,eax
  41f148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f149:	ret    
  41f14a:	mov    dl,0xeb
  41f14c:	xor    ecx,edx
  41f14e:	(bad)  
  41f150:	xchg   edi,eax
  41f151:	xor    DWORD PTR ds:0xedba3a58,ebp
  41f157:	jmp    0x41f11c
  41f159:	arpl   WORD PTR [edi-0x696281cb],dx
  41f15f:	sub    BYTE PTR [edi],dh
  41f161:	add    BYTE PTR [eax],bl
  41f163:	cwde   
  41f164:	in     al,0x49
  41f166:	inc    esi
  41f167:	mov    eax,ds:0xf490050b
  41f16c:	ret    0x6de9
  41f16f:	jmp    0x138c3594
  41f174:	jno    0x41f19a
  41f176:	mov    dh,BYTE PTR [esi-0x20c9cd7c]
  41f17c:	or     al,0x3d
  41f17e:	je     0x41f1f5
  41f180:	sub    al,BYTE PTR [ebp-0x5c]
  41f183:	repnz sub eax,edi
  41f186:	mov    dl,0x4
  41f188:	retf   
  41f189:	js     0x41f1b6
  41f18b:	cli    
  41f18c:	pusha  
  41f18d:	ss push ecx
  41f18f:	mov    WORD PTR [ebp-0x56],ss
  41f192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f193:	pop    ebp
  41f194:	push   ds
  41f195:	repnz push ds
  41f197:	sub    eax,0xf423460e
  41f19c:	ror    DWORD PTR [edi+0x1af3799],0x74
  41f1a3:	repnz mov esp,DWORD PTR [eax-0x6d]
  41f1a7:	add    DWORD PTR [ebp-0x8],ebp
  41f1aa:	sub    eax,0xf31feec0
  41f1af:	dec    ebx
  41f1b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1b1:	ja     0x41f1ba
  41f1b3:	jle    0x41f214
  41f1b5:	sbb    eax,0x4e7df86e
  41f1ba:	es add ebx,ebx
  41f1bd:	lods   al,BYTE PTR ds:[esi]
  41f1be:	sbb    ch,dh
  41f1c0:	add    cl,BYTE PTR ss:[eax]
  41f1c3:	sub    ah,BYTE PTR gs:[ecx+0x58205a41]
  41f1ca:	sbb    eax,0x6db5efdd
  41f1cf:	das    
  41f1d0:	and    ebx,eax
  41f1d2:	pop    ds
  41f1d3:	gs xchg edi,eax
  41f1d5:	xchg   DWORD PTR [ecx-0x38528e21],esi
  41f1db:	lods   al,BYTE PTR ds:[esi]
  41f1dc:	shl    BYTE PTR [edx],0xac
  41f1df:	dec    edi
  41f1e0:	and    eax,0x58621c9c
  41f1e5:	jle    0x41f1f3
  41f1e7:	pop    ss
  41f1e8:	push   0x3ccfba11
  41f1ed:	add    BYTE PTR [eax+0x2a827cf0],dl
  41f1f3:	pop    eax
  41f1f4:	sub    ebx,esp
  41f1f6:	cmp    eax,0xd1c91c66
  41f1fb:	pushf  
  41f1fc:	pusha  
  41f1fd:	rol    ah,1
  41f1ff:	int3   
  41f200:	or     BYTE PTR [edi+0x79d99c1d],ch
  41f206:	push   0x3d
  41f208:	mov    cl,BYTE PTR [edx-0x10]
  41f20b:	dec    esp
  41f20c:	loop   0x41f1ae
  41f20e:	xchg   BYTE PTR [ecx+ecx*1+0x43],ch
  41f212:	xchg   ecx,eax
  41f213:	hlt    
  41f214:	aas    
  41f215:	pop    esp
  41f216:	ss adc dl,dl
  41f219:	repnz mov DWORD PTR [eax-0x4906bd12],ecx
  41f220:	inc    eax
  41f221:	loope  0x41f1b4
  41f223:	sbb    ebp,DWORD PTR [ebp+0x2c9ff2f8]
  41f229:	fimul  WORD PTR [ecx-0x3d31fd8]
  41f22f:	imul   esi,esp,0xf9702a8d
  41f235:	sahf   
  41f236:	bound  ecx,QWORD PTR [ebp-0x7b]
  41f239:	sub    ecx,DWORD PTR [edi]
  41f23b:	nop
  41f23c:	xchg   DWORD PTR [ecx],ecx
  41f23e:	(bad)  
  41f23f:	clc    
  41f240:	outs   dx,BYTE PTR ds:[esi]
  41f241:	fs js  0x41f275
  41f244:	bound  ecx,QWORD PTR [edi-0x4e]
  41f247:	(bad)  
  41f248:	push   DWORD PTR [esi+0x24]
  41f24b:	aad    0xd
  41f24d:	inc    esi
  41f24e:	and    BYTE PTR [esi+0x2a],dl
  41f251:	lods   eax,DWORD PTR ds:[esi]
  41f252:	xor    eax,0x8fb21ad2
  41f257:	sbb    DWORD PTR [edx-0x77],ecx
  41f25a:	sbb    al,0xda
  41f25c:	mov    DWORD PTR [ebp-0x6899c987],eax
  41f262:	int3   
  41f263:	shr    BYTE PTR [edi],0x63
  41f266:	ins    DWORD PTR es:[edi],dx
  41f267:	imul   eax,DWORD PTR [eax+0x7a],0x4b9584cf
  41f26e:	ins    BYTE PTR es:[edi],dx
  41f26f:	addr16 (bad) 
  41f271:	adc    eax,0xc9f1752d
  41f276:	(bad)  
  41f277:	cmp    ebx,DWORD PTR [eax]
  41f279:	test   BYTE PTR [ecx],dh
  41f27b:	xchg   edi,eax
  41f27c:	cmp    ebp,DWORD PTR [esp+edi*1]
  41f27f:	and    BYTE PTR [edx],0xa3
  41f282:	out    dx,al
  41f283:	mov    ch,ah
  41f285:	mov    edx,0xc71d9f16
  41f28a:	or     al,0xb9
  41f28c:	xchg   BYTE PTR [eax-0x45],ah
  41f28f:	shl    DWORD PTR [esi+0x778559f8],1
  41f295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f296:	cmp    BYTE PTR [ebp+0x1a],cl
  41f299:	fnstcw WORD PTR [ecx-0x1461d69a]
  41f29f:	mov    bh,0x33
  41f2a1:	fcom   QWORD PTR [ebx-0x6e]
  41f2a4:	inc    esi
  41f2a5:	jnp    0x41f2e8
  41f2a7:	xchg   edx,eax
  41f2a8:	add    al,0x6f
  41f2aa:	dec    ecx
  41f2ab:	ja     0x41f286
  41f2ad:	sbb    DWORD PTR [ebp+0x24],ecx
  41f2b0:	adc    dh,BYTE PTR [edx+0x57]
  41f2b3:	mov    al,ds:0xdd2cbf30
  41f2b8:	sub    DWORD PTR ds:0x79ec07c9,edi
  41f2be:	in     eax,dx
  41f2bf:	mov    dl,0x1
  41f2c1:	and    DWORD PTR [esi],edx
  41f2c3:	inc    ebp
  41f2c4:	xchg   DWORD PTR [eax+0x0],edi
	...
  41f2d2:	push   ebx
  41f2d3:	(bad)  
  41f2d4:	(bad)  
  41f2d5:	push   esi
  41f2d6:	(bad)  
  41f2d7:	jle    0x41f2d4
  41f2d9:	xlat   BYTE PTR ds:[ebx]
  41f2da:	outs   dx,DWORD PTR ds:[esi]
  41f2db:	mov    ah,0x77
  41f2dd:	call   0x687a:0x2bcb5951
  41f2e4:	add    DWORD PTR [eax],eax
  41f2e6:	sub    al,0x3
  41f2e8:	add    BYTE PTR [eax],al
  41f2ea:	inc    ebp
  41f2eb:	jp     0x41f343
  41f2ed:	ret    0xcf06
  41f2f0:	sub    BYTE PTR [edx+0x394a6b42],al
  41f2f6:	xchg   ebx,eax
  41f2f7:	aas    
  41f2f8:	lea    eax,[edx+eax*2+0x11cc0d02]
  41f2ff:	retf   0x9d54
  41f302:	adc    BYTE PTR es:[ebx-0x7808b7fc],0xb8
  41f30a:	ret    
  41f30b:	xchg   esi,eax
  41f30c:	push   ebx
  41f30d:	and    eax,0x37f41802
  41f312:	ds mov al,0x66
  41f315:	cmp    eax,0xb9eba988
  41f31a:	mov    ch,0x5
  41f31c:	arpl   bx,dx
  41f31e:	inc    edx
  41f31f:	mov    ecx,0x285fd407
  41f324:	inc    ebp
  41f325:	xchg   DWORD PTR [esi],eax
  41f327:	in     al,0x90
  41f329:	nop
  41f32a:	sar    ah,1
  41f32c:	out    dx,eax
  41f32d:	(bad)  
  41f32e:	rcl    BYTE PTR [edx+0x63bece37],0xf4
  41f335:	sub    eax,0x9b10799b
  41f33a:	popa   
  41f33b:	nop
  41f33c:	xor    eax,0x3340a197
  41f341:	mov    edx,DWORD PTR [ebx+0x3677b789]
  41f347:	fwait
  41f348:	inc    ebx
  41f349:	xor    BYTE PTR [edx+0x1f1ad1bb],cl
  41f34f:	mov    al,ds:0x6957cd23
  41f354:	clc    
  41f355:	(bad)  
  41f357:	inc    esp
  41f358:	xor    edx,DWORD PTR [ebp+0x66]
  41f35b:	fistp  QWORD PTR [eax+edi*2-0x23b7f23f]
  41f362:	jo     0x41f332
  41f364:	fcom   DWORD PTR [edi+0x4c7b77b1]
  41f36a:	in     eax,0xaf
  41f36c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f36d:	adc    dh,BYTE PTR [esi]
  41f36f:	pop    ebx
  41f370:	or     al,0xd8
  41f372:	dec    ecx
  41f373:	repz cs push es
  41f376:	jmp    0x41f3eb
  41f378:	jbe    0x41f38c
  41f37a:	js     0x41f3d5
  41f37c:	xchg   edi,eax
  41f37d:	mov    eax,0x6bb1cefb
  41f382:	pop    esp
  41f383:	add    DWORD PTR [ebp-0xa],ebp
  41f386:	mov    edx,0x30230ecc
  41f38b:	xlat   BYTE PTR ds:[ebx]
  41f38c:	daa    
  41f38d:	bound  edi,QWORD PTR [eax-0x517eaf2]
  41f393:	es iret 
  41f395:	fidivr DWORD PTR [ecx-0x15836fb6]
  41f39b:	adc    BYTE PTR [esi],ch
  41f39d:	adc    edx,esp
  41f39f:	lahf   
  41f3a0:	icebp  
  41f3a1:	inc    ebp
  41f3a2:	pop    esp
  41f3a3:	xor    BYTE PTR [ebp+0xc],ch
  41f3a6:	push   0xffffffe8
  41f3a8:	mov    esi,0xbde4452e
  41f3ad:	xchg   DWORD PTR [edx+0x65c5eccb],edi
  41f3b3:	jno    0x41f424
  41f3b5:	ss clc 
  41f3b7:	lahf   
  41f3b8:	or     al,0x93
  41f3ba:	and    al,0x7a
  41f3bc:	mov    cl,0x9e
  41f3be:	shl    BYTE PTR [eax-0x43],0x45
  41f3c2:	les    ecx,FWORD PTR [edi]
  41f3c4:	mov    esp,0x94341eb4
  41f3c9:	xchg   edi,eax
  41f3ca:	inc    esi
  41f3cb:	cmp    al,0xdd
  41f3cd:	xor    BYTE PTR [eax],al
  41f3cf:	xor    DWORD PTR [esi+0x5757f6b],0xfbbc4f62
  41f3d9:	fcmovb st,st(0)
  41f3db:	std    
  41f3dc:	in     al,dx
  41f3dd:	mov    ds:0x1d87c53b,eax
  41f3e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3e3:	bound  eax,QWORD PTR ds:0x1360d151
  41f3e9:	cld    
  41f3ea:	jl     0x41f42e
  41f3ec:	dec    esp
  41f3ed:	scas   eax,DWORD PTR es:[edi]
  41f3ee:	mov    cl,0x90
  41f3f0:	cmp    eax,0x9e86fbd4
  41f3f5:	je     0x41f416
  41f3f7:	push   ebx
  41f3f8:	js     0x41f3b9
  41f3fa:	cmp    BYTE PTR [ebp+0x5],ah
  41f3fd:	xor    al,0x40
  41f3ff:	mov    ebp,0x8130d21e
  41f404:	add    BYTE PTR ds:[ebp+0x5a7490cd],al
  41f40b:	or     ebx,esi
  41f40d:	addr16 or eax,0x2e3329aa
  41f413:	jle    0x41f451
  41f415:	fmul   DWORD PTR [edi+0x1c2c8615]
  41f41b:	adc    BYTE PTR [esi+eiz*4+0x44322196],ch
  41f422:	pop    ds
  41f423:	ret    
  41f424:	xor    BYTE PTR [eax-0x1c],0xd0
  41f428:	sub    DWORD PTR [eax-0x71568409],esi
  41f42e:	fs or  eax,0x2807d41a
  41f434:	cmp    esi,DWORD PTR [esi]
  41f436:	cmp    DWORD PTR [ecx-0x78],esp
  41f439:	mov    dh,0x85
  41f43b:	mov    esp,0xee1bfd1
  41f440:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41f442:	jmp    0x24cf:0xacfad088
  41f449:	or     bh,BYTE PTR [ebp-0x3337917f]
  41f44f:	push   eax
  41f450:	push   ds
  41f451:	pop    eax
  41f452:	outs   dx,BYTE PTR ds:[esi]
  41f453:	popf   
  41f454:	(bad)  [edx]
  41f456:	enter  0x7a19,0x81
  41f45a:	xchg   ecx,eax
  41f45b:	inc    esp
  41f45c:	dec    ecx
  41f45d:	push   es
  41f45e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f45f:	jnp    0x41f458
  41f461:	sub    BYTE PTR [esi],al
  41f463:	jns    0x41f473
  41f465:	rcr    DWORD PTR [eax+esi*4-0x5619868],0x9e
  41f46d:	retf   0xcc29
  41f470:	jmp    0x45e95a52
  41f475:	jae    0x41f4af
  41f477:	in     al,dx
  41f478:	jge    0x41f4d3
  41f47a:	push   0x3e
  41f47c:	out    dx,eax
  41f47d:	rol    ebp,1
  41f47f:	xchg   ecx,eax
  41f480:	fnstsw WORD PTR [edi]
  41f482:	or     BYTE PTR [edi-0x1e77c867],ch
  41f488:	xor    edi,DWORD PTR [edx+0x7a]
  41f48b:	fidiv  DWORD PTR [ebx-0xef692a5]
  41f491:	les    edi,FWORD PTR [eax]
  41f493:	pop    edi
  41f494:	or     al,ah
  41f496:	sub    dl,bh
  41f498:	in     eax,dx
  41f499:	ret    0x1e31
  41f49c:	push   0x792cac54
  41f4a1:	cwde   
  41f4a2:	sub    eax,0xc5264e72
  41f4a7:	push   esi
  41f4a8:	nop
  41f4a9:	add    eax,0x15e6b7c0
  41f4ae:	scas   al,BYTE PTR es:[edi]
  41f4af:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4b1:	mov    gs,WORD PTR [edx-0x73]
  41f4b4:	push   esp
  41f4b5:	iret   
  41f4b6:	div    BYTE PTR [esi+0x46]
  41f4b9:	je     0x41f467
  41f4bb:	popa   
  41f4bc:	sbb    DWORD PTR [edx+edx*8],edi
  41f4bf:	clc    
  41f4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4c1:	push   cs
  41f4c2:	(bad)  
  41f4c3:	sub    BYTE PTR [edx-0x2f550d8d],ah
  41f4c9:	sub    al,0xa4
  41f4cb:	mov    es:0xc0a08e2b,eax
  41f4d1:	daa    
  41f4d2:	lods   eax,DWORD PTR ds:[esi]
  41f4d3:	adc    BYTE PTR [esi],0x8e
  41f4d6:	lods   eax,DWORD PTR ds:[esi]
  41f4d7:	pop    eax
  41f4d8:	xchg   ebx,eax
  41f4d9:	sub    al,0xd
  41f4db:	and    al,0x94
  41f4dd:	dec    edi
  41f4de:	and    eax,0xadf2fb80
  41f4e3:	add    eax,0xfbfb7632
  41f4e8:	call   0x16d9f315
  41f4ed:	jle    0x41f48a
  41f4ef:	scas   al,BYTE PTR es:[edi]
  41f4f0:	pop    esi
  41f4f1:	pop    ss
  41f4f2:	sete   BYTE PTR [ebp-0x36]
  41f4f6:	push   ds
  41f4f7:	lea    ebp,[edi+0x25]
  41f4fa:	or     DWORD PTR [edx],ecx
  41f4fc:	in     al,dx
  41f4fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4fe:	xchg   esi,eax
  41f4ff:	sub    dl,BYTE PTR [esi+0x7ac71286]
  41f505:	loope  0x41f4bf
  41f507:	stos   DWORD PTR es:[edi],eax
  41f508:	retf   
  41f509:	pusha  
  41f50a:	mov    cs,WORD PTR [eax-0x49f68928]
  41f510:	mov    ebx,0xa036e8c9
  41f515:	shr    DWORD PTR [esp+ebx*4],1
  41f518:	pop    eax
  41f519:	jg     0x41f4a0
  41f51b:	inc    edx
  41f51c:	sahf   
  41f51d:	adc    BYTE PTR [ebx],al
  41f51f:	fild   QWORD PTR [edx+0x633c4132]
  41f525:	inc    esi
  41f526:	fs aad 0xaa
  41f529:	sbb    bh,cl
  41f52b:	fistp  QWORD PTR [eax]
  41f52d:	add    bl,bh
  41f52f:	or     BYTE PTR [edi+0x5c65ff8e],0xe7
  41f536:	sahf   
  41f537:	dec    esp
  41f538:	jns    0x41f56e
  41f53a:	xor    ah,BYTE PTR [ecx+0x1c]
  41f53d:	sar    bl,0x60
  41f540:	scas   eax,DWORD PTR es:[edi]
  41f541:	xor    dl,cl
  41f543:	imul   esp,DWORD PTR [edi-0xa6a408e],0x41
  41f54a:	xlat   BYTE PTR ds:[ebx]
  41f54b:	inc    esp
  41f54c:	add    ebx,DWORD PTR [edi+0x74dbb47f]
  41f552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f553:	jg     0x41f56b
  41f555:	mov    ecx,DWORD PTR [edi]
  41f557:	jge    0x41f569
  41f559:	sqrtps xmm5,xmm4
  41f55c:	in     al,dx
  41f55d:	mov    edx,0x89341f5b
  41f562:	stos   DWORD PTR es:[edi],eax
  41f563:	mov    edi,0xc87505c3
  41f568:	cmc    
  41f569:	out    dx,eax
  41f56a:	mov    ch,0x4e
  41f56c:	xchg   ecx,eax
  41f56d:	ret    
  41f56e:	sti    
  41f56f:	sahf   
  41f570:	cs shl cl,cl
  41f573:	stos   BYTE PTR es:[edi],al
  41f574:	les    esi,FWORD PTR [ecx-0x20]
  41f577:	test   al,0x1e
  41f579:	enter  0x5793,0x49
  41f57d:	fnstenv ds:0x8095f9ed
  41f583:	or     BYTE PTR [esi-0xbb10444],dh
  41f589:	(bad)  
  41f58a:	adc    al,0xf2
  41f58c:	sbb    eax,0x1dabebcf
  41f591:	(bad)  
  41f592:	fwait
  41f593:	test   BYTE PTR [ebx],bl
  41f595:	xchg   edi,eax
  41f596:	(bad)  
  41f597:	mov    esp,DWORD PTR ds:0x34106816
  41f59d:	mov    esp,0xa5c029d6
  41f5a2:	bound  esp,QWORD PTR [ebx+0x5e]
  41f5a5:	sub    eax,0xac75cf12
  41f5aa:	nop
  41f5ab:	xor    eax,DWORD PTR [edx]
  41f5ad:	dec    ebx
  41f5ae:	xchg   edi,eax
  41f5af:	sbb    DWORD PTR [edx],ecx
  41f5b1:	test   eax,0xff17b2f
  41f5b6:	cmc    
  41f5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b8:	jecxz  0x41f632
  41f5ba:	mov    esi,0xb88d5141
  41f5bf:	pop    edi
  41f5c0:	jmp    0xcc363e5
  41f5c5:	and    edi,DWORD PTR [esi]
  41f5c7:	shl    DWORD PTR [eax-0x52],0x5a
  41f5cb:	loope  0x41f62e
  41f5cd:	ret    0x3ad0
  41f5d0:	out    0x4c,al
  41f5d2:	dec    esi
  41f5d3:	in     eax,dx
  41f5d4:	popf   
  41f5d5:	cmp    cl,BYTE PTR ds:0x54266f32
  41f5db:	enter  0xc65b,0xf
  41f5df:	outs   dx,BYTE PTR ds:[esi]
  41f5e0:	mov    DWORD PTR ds:0xcf35dc2e,esi
  41f5e6:	dec    ebx
  41f5e7:	imul   edi,DWORD PTR [edx-0x265e6d0a],0xdd2c2243
  41f5f1:	jnp    0x41f5e5
  41f5f3:	ror    edx,0x5d
  41f5f6:	adc    eax,0x8bfb856c
  41f5fb:	in     al,dx
  41f5fc:	outs   dx,BYTE PTR ds:[esi]
  41f5fd:	push   edx
  41f5fe:	jmp    0x41f5ca
  41f600:	xchg   esi,eax
  41f601:	scas   eax,DWORD PTR es:[edi]
  41f602:	xor    BYTE PTR [esi+eax*1-0x6a],dl
  41f606:	(bad)  
  41f607:	pop    eax
  41f608:	retf   0x3fec
  41f60b:	es jp  0x41f65e
  41f60e:	ds test al,0xbe
  41f611:	add    al,0xbe
  41f613:	int    0x8
  41f615:	fiadd  DWORD PTR [eax]
	...
  41f61f:	add    BYTE PTR [eax],al
  41f621:	add    BYTE PTR [ecx],dl
  41f623:	push   cs
  41f624:	or     dl,ch
  41f626:	pop    ds
  41f627:	out    dx,al
  41f628:	repz jmp FWORD PTR [edi-0x2030fbda]
  41f62f:	arpl   WORD PTR [eax+edi*1-0x5a],di
  41f633:	imul   eax,DWORD PTR [ecx],0x0
  41f636:	sub    al,0x3
  41f638:	add    BYTE PTR [eax],al
  41f63a:	mov    ecx,0x4f504a75
  41f63f:	bound  edx,QWORD PTR [eax+0x47e074f2]
  41f645:	out    0x89,al
  41f647:	je     0x41f69d
  41f649:	pop    eax
  41f64a:	push   esi
  41f64b:	adc    esi,DWORD PTR [ebx]
  41f64d:	mov    cl,0x10
  41f64f:	mov    bh,0x5f
  41f651:	mov    cl,0x4d
  41f653:	call   0xdfcc:0x79d73e66
  41f65a:	loope  0x41f63f
  41f65c:	sbb    DWORD PTR [esi],ebx
  41f65e:	retf   0x5bb
  41f661:	jg     0x41f68a
  41f663:	addr16 inc eax
  41f665:	adc    eax,0x7b5f64b
  41f66a:	pusha  
  41f66b:	ins    BYTE PTR es:[edi],dx
  41f66c:	fstp   QWORD PTR [eax]
  41f66e:	xchg   ecx,eax
  41f66f:	lods   al,BYTE PTR ds:[esi]
  41f670:	inc    esp
  41f671:	(bad)  
  41f672:	es (bad) 
  41f674:	add    ebx,ebp
  41f676:	add    edi,DWORD PTR [ebp+0x2bc4f8ab]
  41f67c:	aas    
  41f67d:	xor    BYTE PTR [edx+eax*1-0x6a],cl
  41f681:	imul   ch
  41f683:	and    esi,DWORD PTR [edx+0x64d5a7f9]
  41f689:	xor    eax,0x4da97e7f
  41f68e:	push   0x7c
  41f690:	adc    eax,0x7143d81e
  41f695:	shr    BYTE PTR [eax-0x30],1
  41f698:	mov    bl,0x73
  41f69a:	in     eax,dx
  41f69b:	inc    esi
  41f69c:	lock mov dl,0xfb
  41f69f:	push   ebx
  41f6a0:	pop    ds
  41f6a1:	xchg   si,ax
  41f6a3:	sub    eax,0x181aba43
  41f6a8:	js     0x41f69a
  41f6aa:	retf   0xfd31
  41f6ad:	scas   eax,DWORD PTR es:[edi]
  41f6ae:	das    
  41f6af:	or     al,0x67
  41f6b1:	test   esp,edx
  41f6b3:	(bad)  
  41f6b4:	int3   
  41f6b5:	ds mov esi,0x9f3d39ed
  41f6bb:	jbe    0x41f695
  41f6bd:	icebp  
  41f6be:	clc    
  41f6bf:	sub    DWORD PTR [ecx],ebx
  41f6c1:	pop    edi
  41f6c2:	pop    ds
  41f6c3:	mov    dh,0x9a
  41f6c5:	mov    DWORD PTR [ebx-0x2941e669],edx
  41f6cb:	jecxz  0x41f72a
  41f6cd:	dec    ecx
  41f6ce:	mov    esi,0x231621b1
  41f6d3:	add    BYTE PTR [eax+ecx*4+0x37],0x84
  41f6d8:	xchg   esi,eax
  41f6d9:	pop    edi
  41f6da:	xchg   ebp,eax
  41f6db:	mov    ebp,0x7d8ef816
  41f6e0:	pop    esi
  41f6e1:	add    al,BYTE PTR [ebp+0x26955a1c]
  41f6e7:	out    dx,al
  41f6e8:	push   ecx
  41f6e9:	enter  0x1ffc,0x8d
  41f6ed:	mov    eax,ds:0xa30c7d52
  41f6f2:	cmp    BYTE PTR [ebp+0x7ffdf4d4],cl
  41f6f8:	(bad)  
  41f6f9:	popf   
  41f6fa:	popf   
  41f6fb:	adc    eax,0xe56dbcba
  41f700:	jl     0x41f690
  41f702:	mov    ebp,0x75b577dd
  41f707:	pop    esp
  41f708:	cmp    eax,ebx
  41f70a:	cmp    al,0x67
  41f70c:	ss cmp eax,0xecd0cc31
  41f712:	idiv   DWORD PTR [ecx]
  41f714:	aad    0xda
  41f716:	pop    ds
  41f717:	dec    esi
  41f718:	jno    0x41f6f8
  41f71a:	inc    ecx
  41f71b:	jae    0x41f71f
  41f71d:	cmp    al,0xf5
  41f71f:	cmp    DWORD PTR [eax-0xbe72630],0x36f88666
  41f729:	sti    
  41f72a:	aam    0xf0
  41f72c:	adc    bl,BYTE PTR [edx]
  41f72e:	fisttp QWORD PTR ds:[esi]
  41f731:	fild   QWORD PTR [esi]
  41f733:	mov    ch,cl
  41f735:	mov    ebp,0xbc97b801
  41f73a:	int    0x1a
  41f73c:	mov    ds:0x5f428e01,al
  41f741:	in     al,0x19
  41f743:	xchg   ebp,eax
  41f744:	pop    es
  41f745:	pushf  
  41f746:	xlat   BYTE PTR ds:[ebx]
  41f747:	or     BYTE PTR [ecx+0x62],bl
  41f74a:	ss test ebx,ebp
  41f74d:	(bad)  
  41f74e:	pop    ss
  41f74f:	int3   
  41f750:	imul   ebx,DWORD PTR [ecx-0x66fe9327],0x651cf4d
  41f75a:	xor    bh,bl
  41f75c:	sbb    DWORD PTR [ebx],eax
  41f75e:	fisubr DWORD PTR [edx-0x7634714c]
  41f764:	dec    esp
  41f765:	inc    ecx
  41f766:	sub    al,0x96
  41f768:	jge    0x41f776
  41f76a:	icebp  
  41f76b:	jbe    0x41f78c
  41f76d:	stos   BYTE PTR es:[edi],al
  41f76e:	shr    DWORD PTR [esi],0x1b
  41f771:	sbb    BYTE PTR [esi+0x42],dh
  41f774:	pushw  ss
  41f776:	pop    ebp
  41f777:	inc    ebp
  41f778:	in     al,0x86
  41f77a:	bound  ecx,QWORD PTR [edx-0x6b]
  41f77d:	fisub  WORD PTR [eax]
  41f77f:	or     cl,bl
  41f781:	cwde   
  41f782:	inc    edx
  41f783:	mov    edx,0x54bcd881
  41f788:	jno    0x41f7dd
  41f78a:	push   edi
  41f78b:	clc    
  41f78c:	mov    al,0x34
  41f78e:	gs push edx
  41f790:	sbb    ch,BYTE PTR [eax+0x0]
  41f793:	pandn  mm5,QWORD PTR [ecx+0x7f]
  41f797:	cdq    
  41f798:	mov    cl,BYTE PTR [ecx]
  41f79a:	test   eax,0xabde82de
  41f79f:	pop    edi
  41f7a0:	add    BYTE PTR [esi-0x4a],dl
  41f7a3:	inc    ecx
  41f7a4:	cwde   
  41f7a5:	push   edi
  41f7a6:	(bad)
  41f7a9:	xor    ah,dh
  41f7ab:	bound  eax,QWORD PTR [ebx]
  41f7ad:	pop    edx
  41f7ae:	xchg   BYTE PTR [ebp-0x72],bl
  41f7b1:	(bad)  
  41f7b2:	ss adc bl,dl
  41f7b5:	hlt    
  41f7b6:	addr16 aad 0x29
  41f7b9:	mov    ah,ch
  41f7bb:	fwait
  41f7bc:	mov    al,BYTE PTR [edx+eiz*1]
  41f7bf:	add    esp,ebp
  41f7c1:	out    dx,eax
  41f7c2:	jp     0x41f7ff
  41f7c4:	fcmovnb st,st(7)
  41f7c6:	into   
  41f7c7:	fld    QWORD PTR [ecx-0x5acaaf44]
  41f7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7ce:	mov    WORD PTR [edi],?
  41f7d0:	pop    ds
  41f7d1:	in     al,dx
  41f7d2:	pop    esi
  41f7d4:	fcmovu st,st(7)
  41f7d6:	fmul   DWORD PTR [ebp-0x1821dacc]
  41f7dc:	rcl    DWORD PTR [edx-0x4bbc4f41],0xda
  41f7e3:	div    BYTE PTR [ebp+0xc]
  41f7e6:	fwait
  41f7e7:	and    DWORD PTR [edx],esi
  41f7e9:	fcom   st(3)
  41f7eb:	push   DWORD PTR [ecx+edi*8]
  41f7ee:	sub    eax,0xd20527af
  41f7f3:	mov    dh,0xb7
  41f7f5:	inc    ebp
  41f7f6:	iret   
  41f7f7:	xor    DWORD PTR [eax-0x7917bdd2],esp
  41f7fd:	sahf   
  41f7fe:	imul   edx,DWORD PTR [edx],0xffffff8a
  41f801:	jecxz  0x41f7ad
  41f803:	push   0x6e8dcc9
  41f808:	add    eax,0x53720555
  41f80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f80e:	dec    ebp
  41f80f:	pop    ebp
  41f810:	(bad)  
  41f811:	loopne 0x41f807
  41f813:	pop    edx
  41f814:	imul   ecx,DWORD PTR [edi],0xe4a495dd
  41f81a:	push   cs
  41f81b:	in     al,0xc6
  41f81d:	ss int3 
  41f81f:	sub    dh,ch
  41f821:	out    dx,eax
  41f822:	(bad)  
  41f823:	push   esp
  41f824:	loop   0x41f7da
  41f826:	xor    BYTE PTR [eax],bh
  41f828:	loop   0x41f876
  41f82a:	adc    ebp,DWORD PTR [ecx]
  41f82c:	aaa    
  41f82d:	pop    esp
  41f82e:	aad    0xbf
  41f830:	xchg   DWORD PTR [ecx+0x4b],edi
  41f833:	pop    esp
  41f834:	and    dh,ch
  41f836:	(bad)  
  41f837:	dec    ah
  41f839:	push   ds
  41f83a:	sbb    BYTE PTR [edx+0x2a],0x5a
  41f83e:	popa   
  41f83f:	sub    BYTE PTR [ebx],al
  41f841:	mov    edx,0xd7ba17ca
  41f846:	sbb    DWORD PTR [eax],esi
  41f848:	mov    dh,0xd9
  41f84a:	aaa    
  41f84b:	mov    DWORD PTR [edx],ebp
  41f84d:	xchg   ebp,eax
  41f84e:	stos   DWORD PTR es:[edi],eax
  41f84f:	sbb    al,0xc9
  41f851:	push   ebp
  41f852:	fiadd  DWORD PTR [esi+ecx*2-0x58]
  41f856:	fisttp WORD PTR [ecx+ecx*1]
  41f859:	mov    edx,0x90e6ead0
  41f85e:	jl     0x41f87a
  41f860:	add    BYTE PTR [ebx+0x62c44ccd],dl
  41f866:	outs   dx,BYTE PTR ds:[esi]
  41f867:	mov    ebp,0x2fb8fda0
  41f86c:	int3   
  41f86d:	mov    BYTE PTR [eax-0x5fb3cc6f],al
  41f873:	lods   eax,DWORD PTR ds:[esi]
  41f874:	cmp    eax,0xba10fff2
  41f879:	pop    ss
  41f87a:	mov    bh,0x88
  41f87c:	repnz mov edi,0xcd2a9659
  41f882:	sbb    eax,0xc6b27122
  41f887:	push   es
  41f888:	xchg   ecx,eax
  41f889:	add    eax,0xe1d317f
  41f88e:	and    eax,0xcb8e8eaf
  41f893:	xchg   edi,eax
  41f894:	jnp    0x41f872
  41f896:	pop    edi
  41f897:	dec    eax
  41f898:	int3   
  41f899:	jge    0x41f8cd
  41f89b:	sbb    eax,0x8bebaa2e
  41f8a0:	mov    al,0x1e
  41f8a2:	jmp    0xe2c5:0xa3911a5b
  41f8a9:	jp     0x41f8ad
  41f8ab:	fwait
  41f8ac:	pop    esp
  41f8ad:	mov    edi,0xf01c0480
  41f8b2:	pop    ss
  41f8b3:	bound  eax,QWORD PTR [eax+eax*8+0x250be1cf]
  41f8ba:	dec    ebp
  41f8bb:	js     0x41f899
  41f8bd:	mov    dh,0xdb
  41f8bf:	loopne 0x41f930
  41f8c1:	push   ebp
  41f8c2:	sbb    DWORD PTR [edx],edi
  41f8c4:	and    edx,DWORD PTR [ebx*4+0x6935e5dc]
  41f8cb:	test   BYTE PTR [eax+0x4a8a1199],bh
  41f8d1:	rol    BYTE PTR [esi+0x521230b0],1
  41f8d7:	mov    dl,0xa2
  41f8d9:	jb     0x41f930
  41f8db:	mov    edx,0xdf70cc08
  41f8e0:	cmp    DWORD PTR [edi],edx
  41f8e2:	push   edx
  41f8e3:	(bad)  
  41f8e4:	fld    st(6)
  41f8e6:	mov    eax,0x28b20ee0
  41f8eb:	mov    edx,0x76ae52a5
  41f8f0:	rcr    edx,cl
  41f8f2:	lock imul esp,DWORD PTR [ebx-0x624e07e7],0xffffff85
  41f8fa:	stc    
  41f8fb:	jecxz  0x41f954
  41f8fd:	inc    esp
  41f8fe:	scas   eax,DWORD PTR es:[edi]
  41f8ff:	call   0xe175:0xb95a2072
  41f906:	jbe    0x41f8f4
  41f908:	cmp    DWORD PTR [eax-0x12c94bbc],edi
  41f90e:	outs   dx,DWORD PTR ds:[esi]
  41f90f:	xchg   ebx,eax
  41f910:	dec    ebx
  41f911:	in     al,dx
  41f912:	clc    
  41f913:	mov    ebp,0xaf02e3
  41f918:	scas   al,BYTE PTR es:[edi]
  41f919:	push   ds
  41f91a:	mov    ds:0x7bd80308,al
  41f91f:	jbe    0x41f8e3
  41f921:	shl    DWORD PTR [eax+0x59ff29d],0x10
  41f928:	sahf   
  41f929:	popa   
  41f92a:	aas    
  41f92b:	adc    esi,DWORD PTR [edi]
  41f92d:	push   ecx
  41f92e:	test   eax,0x6d6512c4
  41f933:	loopne 0x41f9b2
  41f935:	mov    esi,0x1ae8e44b
  41f93a:	pop    DWORD PTR [eax]
  41f93c:	call   0xf5dbb176
  41f941:	mov    edx,0x51d70785
  41f946:	xchg   ebx,eax
  41f947:	jbe    0x41f96f
  41f949:	or     al,0xf3
  41f94b:	pop    ss
  41f94c:	cmp    al,al
  41f94e:	inc    eax
  41f94f:	adc    ecx,DWORD PTR [ebx-0x6c92b880]
  41f955:	iret   
  41f956:	push   0x54
  41f958:	inc    eax
  41f959:	into   
  41f95a:	repnz (bad) 
  41f95d:	ror    BYTE PTR [ecx-0x23903133],cl
  41f963:	imul   eax,DWORD PTR [eax],0xffffffb2
	...
  41f972:	leave  
  41f973:	xchg   esi,eax
  41f974:	ins    DWORD PTR es:[edi],dx
  41f975:	mov    dh,0x7f
  41f977:	(bad)  
  41f978:	(bad)  
  41f97a:	aam    0xd9
  41f97c:	inc    ebx
  41f97d:	fcomp  DWORD PTR [edi]
  41f97f:	mov    esp,0x6ed28745
  41f984:	add    DWORD PTR [eax],eax
  41f986:	sub    al,0x3
  41f988:	add    BYTE PTR [eax],al
  41f98a:	mov    eax,0xab86ec98
  41f98f:	add    al,0x5
  41f991:	dec    ecx
  41f992:	adc    DWORD PTR [edi],esi
  41f994:	sbb    ecx,DWORD PTR [ecx]
  41f996:	pop    ebp
  41f997:	lods   al,BYTE PTR ds:[esi]
  41f998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f999:	stos   BYTE PTR es:[edi],al
  41f99a:	jns    0x41f986
  41f99c:	mov    ecx,0x30dd2369
  41f9a1:	cs or  ebp,edx
  41f9a4:	adc    bl,BYTE PTR [edx+0x56]
  41f9a7:	adc    al,0xa5
  41f9a9:	outs   dx,DWORD PTR ds:[esi]
  41f9aa:	xlat   BYTE PTR ds:[ebx]
  41f9ab:	jp     0x41fa17
  41f9ad:	push   0xffffffc8
  41f9af:	mov    edi,0xe092c352
  41f9b4:	push   edi
  41f9b5:	cmp    ch,BYTE PTR [edx]
  41f9b7:	dec    eax
  41f9b8:	adc    al,0xe2
  41f9ba:	rcl    ch,1
  41f9bc:	and    DWORD PTR [ecx+0x2d],esp
  41f9bf:	and    ch,BYTE PTR [ebp+eiz*1+0x79]
  41f9c3:	dec    DWORD PTR [esi-0x7a5bfd10]
  41f9c9:	push   edx
  41f9ca:	inc    ebp
  41f9cb:	adc    ecx,DWORD PTR [ebp+0x4f]
  41f9ce:	pop    edx
  41f9cf:	push   ds
  41f9d0:	rol    BYTE PTR [eax+0x5f],0x51
  41f9d4:	jl     0x41fa46
  41f9d6:	xor    ah,dh
  41f9d8:	and    ah,dl
  41f9da:	idiv   ch
  41f9dc:	pop    edx
  41f9dd:	outs   dx,DWORD PTR ds:[esi]
  41f9de:	ja     0x41fa38
  41f9e0:	fsub   st(7),st
  41f9e2:	arpl   WORD PTR [esi],di
  41f9e4:	dec    edx
  41f9e5:	cld    
  41f9e6:	std    
  41f9e7:	inc    ebx
  41f9e8:	sub    DWORD PTR [ebx-0x6a397e23],esp
  41f9ee:	ret    
  41f9ef:	mov    ds:0x9f2d1ec4,eax
  41f9f4:	xor    eax,0x64495a24
  41f9f9:	push   es
  41f9fa:	arpl   WORD PTR [esi+0x64b970fd],dx
  41fa00:	cs mov dl,0x49
  41fa03:	xor    edi,DWORD PTR ds:0xa649f8c0
  41fa09:	call   0xac7c:0xb6b6dcf0
  41fa10:	dec    esp
  41fa11:	jae    0x41fa05
  41fa13:	fs cmp eax,0xff1bf602
  41fa19:	cwde   
  41fa1a:	cmc    
  41fa1b:	xor    ecx,ebx
  41fa1d:	jecxz  0x41fa8c
  41fa1f:	add    edi,DWORD PTR [ecx]
  41fa21:	push   ss
  41fa22:	shl    BYTE PTR ds:0x8bb05ed9,cl
  41fa28:	leave  
  41fa29:	call   0x73ecf051
  41fa2e:	dec    edi
  41fa2f:	lea    esi,[edx+0x2a]
  41fa32:	adc    DWORD PTR [esp+eax*2+0x55],0x14
  41fa37:	adc    BYTE PTR [ecx],al
  41fa39:	aad    0x6a
  41fa3b:	imul   esi,DWORD PTR [ebp+0x63e0d824],0xd74e2edd
  41fa45:	nop
  41fa46:	jb     0x41faac
  41fa48:	shr    DWORD PTR [edx*2+0x662173fa],cl
  41fa4f:	sub    DWORD PTR [eax],0x36
  41fa52:	rol    BYTE PTR [edx-0x475b67e4],cl
  41fa58:	into   
  41fa59:	hlt    
  41fa5a:	ficom  DWORD PTR [eax+edx*8-0x6566ff2a]
  41fa61:	enter  0x82b4,0x2f
  41fa65:	add    dl,0x6d
  41fa68:	adc    BYTE PTR [ebx+0xa6824d7],dh
  41fa6e:	adc    eax,0xe06bd757
  41fa73:	jg     0x41fac4
  41fa75:	out    dx,al
  41fa76:	push   ebp
  41fa77:	iret   
  41fa78:	adc    al,0x47
  41fa7a:	fnstsw WORD PTR [edx-0x73d3da8]
  41fa80:	jne    0x41fa16
  41fa82:	jmp    0xffba:0xe806c9c3
  41fa89:	adc    bl,ch
  41fa8b:	fidivr DWORD PTR [esi]
  41fa8d:	jmp    0x41fb03
  41fa8f:	call   0xc087c98c
  41fa94:	cli    
  41fa95:	fstp   TBYTE PTR [ecx+ecx*2]
  41fa98:	aaa    
  41fa99:	int3   
  41fa9a:	xlat   BYTE PTR ds:[ebx]
  41fa9b:	retf   
  41fa9c:	mov    ebp,DWORD PTR [edx+0x6b]
  41fa9f:	pop    DWORD PTR [edx-0x12]
  41faa2:	ja     0x41fa61
  41faa4:	xor    eax,0x84085074
  41faa9:	push   cs
  41faaa:	jg     0x41face
  41faac:	mov    bl,0xb9
  41faae:	mul    BYTE PTR [ecx+0x20]
  41fab1:	dec    esp
  41fab2:	popa   
  41fab3:	imul   edx,DWORD PTR [edi+0x19546f0],0x23
  41faba:	pusha  
  41fabb:	ret    0x2e0c
  41fabe:	add    eax,0xb55602f3
  41fac3:	push   es
  41fac4:	pop    eax
  41fac5:	sub    DWORD PTR [esi],edx
  41fac7:	mov    eax,0xef84bdfb
  41facc:	inc    ecx
  41facd:	out    dx,al
  41face:	sbb    al,0xdb
  41fad0:	mov    edx,0x91a858b8
  41fad5:	(bad)  
  41fad6:	sbb    BYTE PTR [ebp+0x1],ah
  41fad9:	jl     0x41fb10
  41fadb:	shl    DWORD PTR [ebx],cl
  41fadd:	mov    eax,ds:0xbaf549e8
  41fae3:	xor    edx,edi
  41fae5:	or     dl,0xe6
  41fae8:	ins    BYTE PTR es:[edi],dx
  41fae9:	dec    esi
  41faea:	jno    0x41fa88
  41faec:	pop    ds
  41faed:	loope  0x41facf
  41faef:	fidiv  WORD PTR [eax+0x59]
  41faf2:	mov    esp,0xfea26eef
  41faf7:	(bad)  
  41faf8:	bound  edi,QWORD PTR [edx-0x15bcc11d]
  41fafe:	xchg   edx,eax
  41faff:	jae    0x41fb24
  41fb01:	pop    ebx
  41fb02:	pop    esp
  41fb03:	cmc    
  41fb04:	inc    ebp
  41fb05:	mov    edi,0x58aadf00
  41fb0a:	push   ds
  41fb0b:	ss ror esp,0x48
  41fb0f:	sub    DWORD PTR [eax+edi*2+0x7dc895f3],0x5a
  41fb17:	xchg   ebx,eax
  41fb18:	cld    
  41fb19:	inc    esp
  41fb1a:	out    dx,al
  41fb1b:	mov    esi,DWORD PTR [edx-0x1500d44a]
  41fb21:	aas    
  41fb22:	xchg   edi,eax
  41fb23:	sub    al,0x98
  41fb25:	dec    DWORD PTR [ecx+0x207eaf70]
  41fb2b:	jmp    0x267f:0xdd5873da
  41fb32:	out    0xdf,al
  41fb34:	jl     0x41fae9
  41fb36:	sbb    ebx,eax
  41fb38:	cld    
  41fb39:	mov    BYTE PTR [esi+eax*1-0xc2aa2b9],ch
  41fb40:	popf   
  41fb41:	pusha  
  41fb42:	loop   0x41fb33
  41fb44:	out    dx,al
  41fb45:	sub    eax,0x9339e92
  41fb4a:	add    al,0xce
  41fb4c:	(bad)  
  41fb4d:	cs (bad) 
  41fb4f:	nop
  41fb50:	jl     0x41fb9b
  41fb52:	nop
  41fb53:	adc    DWORD PTR [edx+ebp*2+0x6a],esi
  41fb57:	out    0xd8,eax
  41fb59:	push   ds
  41fb5a:	push   ebx
  41fb5b:	les    esp,FWORD PTR [ebp-0x34]
  41fb5e:	inc    esp
  41fb5f:	aaa    
  41fb60:	jmp    0x41fb34
  41fb62:	into   
  41fb63:	add    esp,ebp
  41fb65:	jmp    0x6258:0xb9300da9
  41fb6c:	lahf   
  41fb6d:	push   eax
  41fb6e:	lods   eax,DWORD PTR ds:[esi]
  41fb6f:	imul   ebx,DWORD PTR [edx+0x2c],0xe9b8c10c
  41fb76:	lds    ecx,FWORD PTR [ecx]
  41fb78:	jb     0x41fb3e
  41fb7a:	retf   0x5551
  41fb7d:	sbb    eax,0x1383acbb
  41fb82:	or     ebx,DWORD PTR [ebp+0x5801cba1]
  41fb88:	adc    DWORD PTR [eax-0x4d369bf6],eax
  41fb8e:	sbb    esi,DWORD PTR [edx+0x61cbb373]
  41fb94:	cwde   
  41fb95:	cmp    eax,0xaf322546
  41fb9a:	and    DWORD PTR [edi-0x4],ecx
  41fb9d:	pop    eax
  41fb9e:	and    edx,DWORD PTR [eax]
  41fba0:	dec    ecx
  41fba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fba2:	nop
  41fba3:	dec    ebp
  41fba4:	popf   
  41fba5:	add    ah,0xb3
  41fba8:	push   esp
  41fba9:	iret   
  41fbaa:	dec    esi
  41fbab:	shl    eax,cl
  41fbad:	mov    BYTE PTR [ebp+0x7eabd9db],bh
  41fbb3:	adc    ch,BYTE PTR [ebp-0x1cbe2d7f]
  41fbb9:	ficomp WORD PTR [ebp-0x80]
  41fbbc:	lods   eax,DWORD PTR ds:[esi]
  41fbbd:	mov    ds:0x2f1ae232,eax
  41fbc2:	loope  0x41fc24
  41fbc4:	aad    0x32
  41fbc6:	mov    esi,0x25b59a9d
  41fbcb:	cwde   
  41fbcc:	ss sub al,0x9f
  41fbcf:	mov    dl,0xb7
  41fbd1:	stc    
  41fbd2:	cmp    eax,0xc679d249
  41fbd7:	adc    cl,ah
  41fbd9:	pop    esp
  41fbda:	mov    ch,0x2a
  41fbdc:	xlat   BYTE PTR ds:[ebx]
  41fbdd:	(bad)  
  41fbdf:	out    dx,eax
  41fbe0:	mov    DWORD PTR [eax-0x18],edi
  41fbe3:	cmp    eax,0x20d7282c
  41fbe8:	jge    0x41fb8c
  41fbea:	(bad)  
  41fbeb:	imul   esi,DWORD PTR [eax+0x12767114],0x28944bba
  41fbf5:	out    0x6e,al
  41fbf7:	cmove  edi,DWORD PTR [edx-0x30]
  41fbfb:	in     eax,0x1b
  41fbfd:	and    eax,0xb8496b0a
  41fc02:	test   BYTE PTR [edx+0x64],al
  41fc05:	mov    al,ds:0x8cfa2fb6
  41fc0a:	sbb    BYTE PTR [esp+ebp*4+0x36771e06],al
  41fc11:	ret    0x2807
  41fc14:	aas    
  41fc15:	or     BYTE PTR [edi],bh
  41fc17:	je     0x41fc8b
  41fc19:	(bad)  
  41fc1a:	sbb    BYTE PTR [ebx+0x731c992f],ah
  41fc20:	sbb    ecx,DWORD PTR [ecx-0x7e]
  41fc23:	push   esp
  41fc24:	xchg   ecx,eax
  41fc25:	mov    ecx,esp
  41fc27:	(bad)  
  41fc28:	jmp    0x214c:0xbb6bccd1
  41fc2f:	rcr    BYTE PTR [ebp-0x6c],cl
  41fc32:	or     eax,edi
  41fc34:	mov    ds:0x42935c64,al
  41fc39:	pop    edi
  41fc3a:	stos   DWORD PTR es:[edi],eax
  41fc3b:	jne    0x41fc02
  41fc3d:	xchg   DWORD PTR [esi-0x5f],esi
  41fc40:	xchg   ebx,eax
  41fc41:	les    esi,FWORD PTR [eax+0x6395ab6d]
  41fc47:	in     eax,dx
  41fc48:	adc    dl,BYTE PTR [edi+ebx*8+0x28]
  41fc4c:	dec    edi
  41fc4d:	loopne 0x41fc99
  41fc4f:	push   0xd79fcdcf
  41fc54:	div    edi
  41fc56:	(bad)  
  41fc57:	mov    edi,0x7cd89d4a
  41fc5c:	shr    DWORD PTR ds:0x7bc5f463,1
  41fc62:	mov    al,ds:0x54f91210
  41fc67:	and    BYTE PTR [ebp-0x39fc1cd0],ch
  41fc6d:	sbb    eax,0xbb6e438f
  41fc72:	dec    edi
  41fc73:	fbld   TBYTE PTR [edx]
  41fc76:	shl    DWORD PTR [eax+0x13e9d983],0xf2
  41fc7d:	pop    ebx
  41fc7e:	fiadd  WORD PTR [eax]
  41fc80:	sbb    al,0x1
  41fc82:	xor    ebp,DWORD PTR [edi]
  41fc84:	sbb    dl,0xa7
  41fc87:	or     al,0xea
  41fc89:	dec    ebx
  41fc8a:	pop    ds
  41fc8b:	jle    0x41fcd8
  41fc8d:	jb     0x41fca3
  41fc8f:	es jne 0x41fc65
  41fc92:	jg     0x41fd0f
  41fc94:	and    eax,0x7b15f671
  41fc99:	push   ebx
  41fc9a:	mov    eax,ds:0xa0991969
  41fc9f:	mov    ch,0x7d
  41fca1:	jb     0x41fcda
  41fca3:	inc    ebx
  41fca4:	mov    ebx,gs
  41fca6:	push   ds
  41fca7:	xor    DWORD PTR [ebx],edx
  41fca9:	inc    edi
  41fcaa:	jmp    0xb995:0x7dbded16
  41fcb1:	jmp    0x0:0xcc5f81cb
	...
  41fcc0:	add    BYTE PTR [eax],al
  41fcc2:	dec    eax
  41fcc3:	out    dx,eax
  41fcc4:	ja     0x41fd31
  41fcc6:	idiv   ebx
  41fcc8:	pop    esp
  41fcc9:	out    dx,eax
  41fcca:	dec    esp
  41fccb:	mul    BYTE PTR [esi-0x7d]
  41fcce:	retf   0x8a7b
  41fcd1:	jae    0x41fcd1
  41fcd3:	jno    0x41fcd6
  41fcd5:	add    BYTE PTR [ebx+eax*1],ch
  41fcd8:	add    BYTE PTR [eax],al
  41fcda:	xchg   ebp,eax
  41fcdb:	mul    BYTE PTR [ebx]
  41fcdd:	imul   edi,DWORD PTR [esi-0x257d1fbe],0xb8c7a0ab
  41fce7:	adc    al,0xa0
  41fce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcea:	mov    ebx,esi
  41fcec:	nop
  41fced:	and    ebp,DWORD PTR [ecx-0x471a5011]
  41fcf3:	xor    BYTE PTR [esi+ebx*1+0x34aaf5d0],dl
  41fcfa:	mov    eax,0x1ae810da
  41fcff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd00:	inc    ebx
  41fd01:	into   
  41fd02:	mov    ?,WORD PTR [esp-0x75a4ec78]
  41fd09:	es (bad) 
  41fd0b:	rcr    DWORD PTR ds:0xb2e64be,1
  41fd11:	mov    edi,0x238adfda
  41fd16:	xchg   ecx,eax
  41fd17:	retf   
  41fd18:	test   BYTE PTR [edi+eax*8+0x13270676],0x1e
  41fd20:	mov    edx,0xac92829d
  41fd25:	inc    esp
  41fd26:	dec    edi
  41fd27:	push   es
  41fd28:	jmp    DWORD PTR [ebx]
  41fd2a:	enter  0xcec6,0x5d
  41fd2e:	sbb    BYTE PTR [esi],cl
  41fd30:	xor    esi,DWORD PTR [ebp+0x6]
  41fd33:	or     eax,DWORD PTR [edx+edi*8]
  41fd36:	aad    0x87
  41fd38:	aas    
  41fd39:	lahf   
  41fd3a:	mov    ecx,0xedfdc190
  41fd3f:	sahf   
  41fd40:	pop    edx
  41fd41:	add    bl,dh
  41fd43:	sub    DWORD PTR [ebx-0x40b7d68f],esi
  41fd49:	call   0x817984cd
  41fd4e:	lahf   
  41fd4f:	adc    al,0x5e
  41fd51:	jle    0x41fcfb
  41fd53:	dec    edx
  41fd54:	jb     0x41fd60
  41fd56:	sub    DWORD PTR [ebx-0x3f22492e],ebx
  41fd5c:	push   edx
  41fd5d:	lock iret 
  41fd5f:	clc    
  41fd60:	inc    eax
  41fd61:	ins    BYTE PTR es:[edi],dx
  41fd62:	retf   
  41fd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd64:	repz and bh,bl
  41fd67:	sbb    dh,BYTE PTR [edi-0x6a50a5ec]
  41fd6d:	jecxz  0x41fdc2
  41fd6f:	mov    bh,0x17
  41fd71:	mov    ebx,0x8a5e9812
  41fd76:	loope  0x41fd30
  41fd78:	ss mov ch,0xd3
  41fd7b:	popfw  
  41fd7d:	push   esp
  41fd7e:	dec    ecx
  41fd7f:	bound  esp,QWORD PTR [eax+0x5e]
  41fd82:	adc    eax,0xc4da66db
  41fd87:	cmp    eax,0xdf36f81f
  41fd8c:	enter  0x3348,0x5c
  41fd90:	push   ds
  41fd91:	fstp   DWORD PTR [ebx]
  41fd93:	or     edi,DWORD PTR [esi+0x66]
  41fd96:	ss enter 0x3d19,0xe9
  41fd9b:	aam    0x42
  41fd9d:	adc    al,0x26
  41fd9f:	jecxz  0x41fd6c
  41fda1:	paddusb mm1,QWORD PTR [edx+edx*4-0x28]
  41fda6:	iret   
  41fda7:	sahf   
  41fda8:	out    dx,al
  41fda9:	push   cs
  41fdaa:	pop    eax
  41fdab:	retf   
  41fdac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdad:	sbb    ecx,edx
  41fdaf:	cli    
  41fdb0:	dec    edx
  41fdb1:	push   esp
  41fdb2:	(bad)  
  41fdb3:	repnz push ebx
  41fdb5:	xchg   edx,eax
  41fdb6:	inc    esp
  41fdb7:	sub    ebx,ebp
  41fdb9:	int3   
  41fdba:	fs push 0x44
  41fdbd:	lock or DWORD PTR [eax-0x35],ebp
  41fdc1:	mov    WORD PTR [esi-0x3e],?
  41fdc4:	sub    BYTE PTR [eax],cl
  41fdc6:	repz inc ebx
  41fdc8:	es add al,0xe1
  41fdcb:	cs aaa 
  41fdcd:	dec    eax
  41fdce:	pop    ebx
  41fdcf:	add    al,0x99
  41fdd1:	push   0xf93d21c4
  41fdd6:	xchg   ebx,eax
  41fdd7:	out    dx,eax
  41fdd8:	aad    0xa8
  41fdda:	out    0xef,eax
  41fddc:	adc    ah,bl
  41fdde:	cmp    ebp,ecx
  41fde0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fde1:	sub    edx,ecx
  41fde3:	mov    edi,0x7d161732
  41fde8:	sbb    al,0xac
  41fdea:	rcl    DWORD PTR [edi-0x3c],1
  41fded:	mov    ebx,0x625b9a63
  41fdf2:	fst    QWORD PTR [ebx+esi*1]
  41fdf5:	call   0xe7d4:0xe679c48e
  41fdfc:	cmp    ecx,DWORD PTR [ecx]
  41fdfe:	fisttp QWORD PTR [ebx]
  41fe00:	nop
  41fe01:	cmp    eax,0x5062c3e2
  41fe06:	inc    ebx
  41fe07:	push   0xd583e6c6
  41fe0c:	and    ecx,ebx
  41fe0e:	jbe    0x41fe73
  41fe10:	nop
  41fe11:	cld    
  41fe12:	or     eax,0x645e202e
  41fe17:	mov    eax,ds:0xc094fb35
  41fe1c:	add    al,0x8f
  41fe1e:	std    
  41fe1f:	mov    edi,gs
  41fe21:	mov    WORD PTR [ecx],gs
  41fe23:	sar    BYTE PTR [edx],cl
  41fe25:	jl     0x41fe5f
  41fe27:	aas    
  41fe28:	fistp  WORD PTR [edx+ebx*4]
  41fe2b:	popa   
  41fe2c:	add    esp,ecx
  41fe2e:	xchg   ebx,eax
  41fe2f:	mov    ebp,0x43ed06f9
  41fe34:	xor    eax,0xd2841ab8
  41fe39:	imul   esi,edx,0x78
  41fe3c:	aad    0xbb
  41fe3e:	int    0xa0
  41fe40:	mov    cl,al
  41fe42:	fidiv  WORD PTR [ebx+0x7ab71cc5]
  41fe48:	call   FWORD PTR [ebx]
  41fe4a:	cmp    DWORD PTR [eax-0x7b],esp
  41fe4d:	lock sbb al,0x58
  41fe50:	aas    
  41fe51:	jbe    0x41fe07
  41fe53:	test   DWORD PTR [ebx-0x5429397b],0x24f757a8
  41fe5d:	sub    DWORD PTR [eax-0x8e6e4f9],0xabb7e8c9
  41fe67:	lock lock jns 0x41fe68
  41fe6b:	jg     0x41feda
  41fe6d:	int    0xfc
  41fe6f:	push   cs
  41fe70:	inc    ebx
  41fe71:	mov    cl,dh
  41fe73:	push   cs
  41fe74:	ss clc 
  41fe76:	add    BYTE PTR [edi-0x46],ch
  41fe79:	dec    DWORD PTR [edx+0x6c1552db]
  41fe7f:	dec    edi
  41fe80:	call   0x40030e55
  41fe85:	push   0xffffffbb
  41fe87:	fs mov bh,0xff
  41fe8a:	sbb    eax,0xcb602130
  41fe8f:	fidiv  WORD PTR [edx-0x48]
  41fe92:	pop    esp
  41fe93:	rol    ah,cl
  41fe95:	and    al,0x22
  41fe97:	retf   0xe487
  41fe9a:	ds es dec esi
  41fe9d:	repz mov eax,0xddfb5179
  41fea3:	add    BYTE PTR [edi+0x7919b8f6],ah
  41fea9:	adc    eax,ebx
  41feab:	mov    dl,0xd7
  41fead:	scas   al,BYTE PTR es:[edi]
  41feae:	in     al,0x5a
  41feb0:	aam    0xf8
  41feb2:	sub    eax,DWORD PTR [ecx+0x19]
  41feb5:	das    
  41feb6:	mov    edx,0xed7a3518
  41febb:	push   ebp
  41febc:	mov    al,ds:0x391e44f9
  41fec1:	jmp    0xc266:0xfa0bc0b9
  41fec8:	fsub   QWORD PTR [ebp-0x4147ab4b]
  41fece:	jb     0x41fe6a
  41fed0:	sbb    bl,BYTE PTR [eax+0x5940908d]
  41fed6:	dec    edx
  41fed7:	ins    BYTE PTR es:[edi],dx
  41fed8:	bound  ebp,QWORD PTR [ebx-0x44]
  41fedb:	int    0x67
  41fedd:	push   eax
  41fede:	jl     0x41fe67
  41fee0:	stc    
  41fee1:	data16 clc 
  41fee3:	daa    
  41fee4:	adc    DWORD PTR [edi+0x33],0x4d0789a2
  41feeb:	inc    ecx
  41feec:	dec    DWORD PTR [eax+0xb]
  41feef:	jo     0x41fea2
  41fef1:	pop    ss
  41fef2:	call   DWORD PTR [ecx+edi*4]
  41fef5:	daa    
  41fef6:	cmovs  ebp,DWORD PTR ds:0x32b6067
  41fefd:	push   esi
  41fefe:	adc    bh,BYTE PTR [eax-0x45]
  41ff01:	add    DWORD PTR [ebp+0x2add2e56],esi
  41ff07:	(bad)  
  41ff08:	xor    BYTE PTR [esi+eiz*1-0x7f486ba8],bh
  41ff0f:	jns    0x41fe94
  41ff11:	lock shr DWORD PTR es:[edi+0x57],1
  41ff16:	popa   
  41ff17:	mov    esp,0x65ee529
  41ff1c:	repz jmp DWORD PTR [edi-0x5bf80948]
  41ff23:	dec    al
  41ff25:	inc    edx
  41ff26:	inc    edx
  41ff27:	dec    ebx
  41ff28:	dec    ebx
  41ff29:	stc    
  41ff2a:	mov    esi,0xc437f6d7
  41ff2f:	(bad)  
  41ff30:	pop    esp
  41ff31:	inc    edx
  41ff32:	pop    ebp
  41ff33:	cmp    al,0xee
  41ff35:	xor    ebp,ecx
  41ff37:	xor    esi,DWORD PTR [eax-0x2aa6798]
  41ff3d:	and    eax,0x2a017d6d
  41ff42:	sbb    ebp,eax
  41ff44:	seto   dl
  41ff47:	adc    al,0x8
  41ff49:	scas   eax,DWORD PTR es:[edi]
  41ff4a:	jnp    0x41ff12
  41ff4c:	lahf   
  41ff4d:	int3   
  41ff4e:	test   al,0x7f
  41ff50:	out    0x83,al
  41ff52:	mov    esp,ecx
  41ff54:	mov    edi,0x387410f3
  41ff59:	retf   
  41ff5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff5b:	xchg   esp,eax
  41ff5c:	or     bh,bl
  41ff5e:	sbb    ebx,eax
  41ff60:	mov    edi,0x1509cb39
  41ff65:	mov    ch,0x9f
  41ff67:	push   cs
  41ff68:	sub    al,0xed
  41ff6a:	daa    
  41ff6b:	imul   esi,DWORD PTR [esi+0x29],0x19
  41ff6f:	xor    DWORD PTR [ecx-0x4f6e01ea],ebp
  41ff75:	add    eax,0x63e90a57
  41ff7a:	mov    esi,0x4156b7ae
  41ff7f:	out    0xb2,eax
  41ff81:	add    cl,BYTE PTR [edi+0x336998da]
  41ff87:	sbb    BYTE PTR [edx],0xc3
  41ff8a:	std    
  41ff8b:	xchg   esp,eax
  41ff8c:	xor    al,0x9a
  41ff8e:	loopne 0x41ffa1
  41ff90:	jno    0x41ff1f
  41ff92:	or     eax,0x6304bb17
  41ff97:	xor    BYTE PTR es:[ebp-0x16],cl
  41ff9b:	sbb    eax,0x7299a43f
  41ffa0:	retf   0x2ee1
  41ffa3:	xchg   esp,eax
  41ffa4:	loope  0x41ff4c
  41ffa6:	cld    
  41ffa7:	hlt    
  41ffa8:	mov    ebp,ebx
  41ffaa:	bound  ebp,QWORD PTR [edx-0x6c]
  41ffad:	arpl   ax,di
  41ffaf:	pusha  
  41ffb0:	(bad)  
  41ffb1:	scas   eax,DWORD PTR es:[edi]
  41ffb2:	call   0x4c58:0xfc526e08
  41ffb9:	cmp    al,0x67
  41ffbb:	pop    edx
  41ffbc:	inc    edi
  41ffbd:	jle    0x41ffc1
  41ffbf:	test   DWORD PTR [esi+0xf],eax
  41ffc2:	int    0xd3
  41ffc4:	and    dh,ah
  41ffc6:	fxch   st(0)
  41ffc8:	mov    al,ds:0xfdb3dfdf
  41ffcd:	loop   0x420026
  41ffcf:	outs   dx,BYTE PTR ds:[esi]
  41ffd0:	sbb    BYTE PTR [ebx],dl
  41ffd2:	int3   
  41ffd3:	aas    
  41ffd4:	stos   BYTE PTR es:[edi],al
  41ffd5:	dec    ebp
  41ffd6:	push   ss
  41ffd7:	sub    eax,0xf098e8de
  41ffdc:	add    al,0x6f
  41ffde:	popa   
  41ffdf:	pop    ebp
  41ffe0:	leave  
  41ffe1:	call   0xc6ef:0xa9862f5b
  41ffe8:	sub    al,BYTE PTR [edx-0x39]
  41ffeb:	adc    edi,ebx
  41ffed:	sub    eax,0x7c95d238
  41fff2:	adc    ah,BYTE PTR [esi-0x46ed12f5]
  41fff8:	ins    DWORD PTR es:[edi],dx
  41fff9:	mov    ecx,0xcac722c8
  41fffe:	xchg   ebp,eax
  41ffff:	idiv   DWORD PTR ds:0x38ce3e9f
  420005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  420012:	mov    al,0xe3
  420014:	pop    edx
  420015:	jecxz  0x420072
  420017:	sti    
  420018:	mov    ecx,0x72415ff3
  42001d:	test   ebp,edi
  42001f:	fisub  DWORD PTR cs:[ecx+0x2a]
  420023:	jne    0x420026
  420025:	add    BYTE PTR [ebx+eax*1],ch
  420028:	add    BYTE PTR [eax],al
  42002a:	xchg   edx,eax
  42002b:	jmp    0x2fd749e7
  420030:	or     DWORD PTR [esi-0x3fd8f75],eax
  420036:	ja     0x420069
  420038:	repnz out dx,eax
  42003a:	mov    ax,0x318f
  42003e:	aas    
  42003f:	aam    0x47
  420041:	clc    
  420042:	outs   dx,DWORD PTR ds:[esi]
  420043:	mov    al,0x59
  420045:	inc    esi
  420046:	(bad)
  420049:	jmp    0xcb2ed9db
  42004e:	jle    0x4200cc
  420050:	xor    ah,ah
  420052:	and    ch,bh
  420054:	lods   al,BYTE PTR ds:[esi]
  420055:	sbb    esi,DWORD PTR [ebp-0x78]
  420058:	pop    ebp
  420059:	lahf   
  42005a:	jecxz  0x420067
  42005c:	xlat   BYTE PTR ds:[ebx]
  42005d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42005e:	in     al,dx
  42005f:	fnstenv [ecx-0x1d]
  420062:	jnp    0x420024
  420064:	out    0x92,eax
  420066:	xor    DWORD PTR ss:[ebp-0x6208a7f6],0xe0f77060
  420071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420072:	stos   BYTE PTR es:[edi],al
  420073:	jp     0x4200da
  420075:	jb     0x4200c6
  420077:	mov    ch,0xa7
  420079:	pop    ds
  42007a:	lea    eax,[ecx-0x45]
  42007d:	in     eax,dx
  42007e:	sub    cl,BYTE PTR [ecx-0x13]
  420081:	les    esp,FWORD PTR [edx+ebp*4]
  420084:	fld    DWORD PTR [ecx]
  420086:	push   edx
  420087:	cwde   
  420088:	scas   eax,DWORD PTR es:[edi]
  420089:	mov    cl,0x54
  42008b:	gs push edx
  42008d:	add    edx,0x46
  420090:	outs   dx,DWORD PTR ds:[esi]
  420091:	jne    0x420100
  420093:	(bad)  
  420094:	lock push 0xffffffd7
  420097:	or     BYTE PTR [esi],bl
  420099:	leave  
  42009a:	mov    ecx,0xeec549c9
  42009f:	adc    eax,0x60eb120e
  4200a4:	ins    BYTE PTR es:[edi],dx
  4200a5:	xor    DWORD PTR [edi],ebp
  4200a7:	popa   
  4200a8:	jecxz  0x4200d3
  4200aa:	mov    edx,0xd1ed1df
  4200af:	jno    0x4200e8
  4200b1:	aad    0x14
  4200b3:	(bad)  
  4200b4:	pusha  
  4200b5:	out    dx,eax
  4200b6:	je     0x4200bf
  4200b8:	cs stc 
  4200ba:	loop   0x4200a3
  4200bc:	dec    ebp
  4200bd:	xor    BYTE PTR [ebp-0x4d],dl
  4200c0:	cmp    al,0xf8
  4200c2:	or     BYTE PTR [ecx-0x40472622],al
  4200c8:	out    0xd0,eax
  4200ca:	pop    es
  4200cb:	jnp    0x420136
  4200cd:	ret    0x7f8b
  4200d0:	nop
  4200d1:	mov    esp,0x9d6f7935
  4200d6:	add    BYTE PTR [edx-0x4957843a],bh
  4200dc:	add    bh,BYTE PTR [esi+0x17]
  4200df:	jg     0x420073
  4200e1:	adc    eax,DWORD PTR [edi+0x4e746d60]
  4200e7:	pop    ss
  4200e8:	imul   esp,DWORD PTR [esi+0x4b],0x4b
  4200ec:	out    dx,eax
  4200ed:	and    BYTE PTR [ecx],cl
  4200ef:	sub    eax,0x9c1065ac
  4200f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200f5:	xchg   esi,eax
  4200f6:	jno    0x42011d
  4200f8:	fwait
  4200f9:	pop    ecx
  4200fa:	pusha  
  4200fb:	mov    eax,ss
  4200fd:	cld    
  4200fe:	test   eax,0x701cb645
  420103:	je     0x420161
  420105:	inc    ecx
  420106:	dec    esi
  420107:	out    dx,al
  420108:	sub    DWORD PTR [ecx+edi*1],eax
  42010b:	push   es
  42010c:	add    bh,BYTE PTR [esi-0x64fe0f8a]
  420112:	out    dx,al
  420113:	sahf   
  420114:	cli    
  420115:	and    bl,BYTE PTR [esi-0x58bc24ce]
  42011b:	mov    cl,0x66
  42011d:	push   0x38b446a3
  420122:	jns    0x42018b
  420124:	dec    ebp
  420125:	outs   dx,DWORD PTR ds:[esi]
  420126:	pusha  
  420127:	xchg   edi,eax
  420128:	adc    eax,0x41e8c327
  42012d:	push   es
  42012e:	adc    bl,BYTE PTR [ecx-0x1f]
  420131:	mov    dh,0xdb
  420133:	mov    al,ds:0x16463047
  420138:	jmp    0x40344da4
  42013d:	(bad)
  420140:	mov    ds:0x612be878,al
  420145:	mov    BYTE PTR [ebx+0x65ddd1c8],dl
  42014b:	mov    ds:0xacd68efa,eax
  420150:	jnp    0x4201c9
  420152:	jge    0x4201a7
  420154:	jl     0x420119
  420156:	adc    DWORD PTR [ecx+esi*1+0x73],esi
  42015a:	inc    ebx
  42015b:	aad    0xf1
  42015d:	fnsave [ecx+0xb080a73]
  420163:	retf   0xfcf3
  420166:	xor    edx,DWORD PTR [ecx]
  420168:	jmp    0xe231:0xb6925831
  42016f:	sti    
  420170:	cmc    
  420171:	neg    DWORD PTR [esi+0x56565c90]
  420177:	xchg   esi,eax
  420178:	xchg   edx,eax
  420179:	out    dx,eax
  42017a:	xor    DWORD PTR [ebx-0x5d122427],ebx
  420180:	out    0xd3,eax
  420182:	pop    ebx
  420183:	fucomip st,st(2)
  420185:	push   ds
  420186:	into   
  420187:	sbb    eax,DWORD PTR [ecx-0x6c9c18e4]
  42018d:	fst    st(3)
  42018f:	iret   
  420190:	adc    DWORD PTR [edi+0x14478209],ecx
  420196:	out    0x76,al
  420198:	mov    dh,0xbe
  42019a:	std    
  42019b:	push   es
  42019c:	mov    cl,0x7d
  42019e:	pop    esp
  42019f:	retf   0x9f43
  4201a2:	adc    dl,ah
  4201a4:	cmp    BYTE PTR [esp+edx*1],cl
  4201a7:	pop    ds
  4201a8:	xchg   esi,eax
  4201a9:	adc    DWORD PTR [edx+0x4fcd7d3e],eax
  4201af:	mov    DWORD PTR [ebp+0x7ebf189f],esp
  4201b5:	xchg   ebp,eax
  4201b6:	or     ecx,DWORD PTR [ebx+0xb36e1ea]
  4201bc:	sub    eax,0xc7a0d19
  4201c1:	pop    esi
  4201c2:	lds    ebx,FWORD PTR [edx-0x6e]
  4201c5:	retf   
  4201c6:	mov    eax,ds:0xe496a6d5
  4201cb:	inc    eax
  4201cc:	jle    0x4201e8
  4201ce:	add    DWORD PTR [ecx+eax*8],0x85e0fd11
  4201d5:	jb     0x4201b8
  4201d7:	iret   
  4201d8:	add    esi,esp
  4201da:	adc    al,0xc6
  4201dc:	inc    edx
  4201dd:	int    0x51
  4201df:	int3   
  4201e0:	cs jnp 0x420208
  4201e3:	jmp    DWORD PTR [eax-0x4e]
  4201e6:	jl     0x420257
  4201e8:	add    esp,edi
  4201ea:	adc    BYTE PTR [ecx-0x95bde21],bh
  4201f0:	add    al,0x6a
  4201f2:	jge    0x42019a
  4201f4:	outs   dx,DWORD PTR ds:[esi]
  4201f5:	popa   
  4201f6:	adc    al,0xc3
  4201f8:	mov    ecx,0xa36a5d83
  4201fd:	pop    ss
  4201fe:	test   al,0xe5
  420200:	lahf   
  420201:	inc    esp
  420202:	arpl   WORD PTR [edi+0x2934b8ed],di
  420208:	push   eax
  420209:	mov    ebp,gs
  42020b:	addr16 ss jo 0x42019d
  42020f:	lea    esp,[edi]
  420211:	out    dx,eax
  420212:	dec    ebx
  420213:	xchg   ebx,eax
  420214:	mov    cs,WORD PTR [esp+edx*8-0x5d]
  420218:	mov    ecx,0x9f53795d
  42021d:	rol    al,0xa5
  420220:	lock lahf 
  420222:	adc    dh,BYTE PTR [esi+0x5bcd9fd4]
  420228:	in     al,0xcc
  42022a:	mov    al,BYTE PTR [ebp+0x65]
  42022d:	out    dx,al
  42022e:	and    al,BYTE PTR [eax-0x75]
  420231:	out    0x70,al
  420233:	inc    edx
  420234:	pusha  
  420235:	mov    cl,0x4c
  420237:	or     DWORD PTR [ebx],ebx
  420239:	sub    edi,edx
  42023b:	adc    esp,esp
  42023d:	jg     0x42028b
  42023f:	addr16 cmp dl,al
  420242:	sbb    cl,dh
  420244:	add    ecx,ebx
  420246:	(bad)  
  420248:	sbb    edx,ebx
  42024a:	into   
  42024b:	cli    
  42024c:	jle    0x4202c4
  42024e:	push   0x213ec4d
  420253:	ins    BYTE PTR es:[edi],dx
  420254:	call   0x57f7d2b9
  420259:	mov    ch,0xd3
  42025b:	jmp    0x4201e8
  42025d:	neg    bh
  42025f:	jb     0x420294
  420261:	pop    ecx
  420262:	(bad)  
  420264:	dec    edx
  420265:	jmp    0x420283
  420267:	repnz mov ds:0x5be64f1b,al
  42026d:	sub    dh,BYTE PTR [eax-0x5c68c1fd]
  420273:	lds    edx,FWORD PTR [ebp-0x77]
  420276:	(bad)  
  420277:	mov    ch,0xa2
  420279:	push   cs
  42027a:	gs pop edi
  42027c:	outs   dx,BYTE PTR ds:[esi]
  42027d:	mov    esi,0xc0d973b8
  420282:	xor    eax,0xbb671072
  420287:	jp     0x42025f
  420289:	nop
  42028a:	mov    edx,0xdec09acf
  42028f:	dec    ebp
  420290:	daa    
  420291:	add    al,0xce
  420293:	mov    ebp,0x857ba681
  420298:	dec    ebx
  420299:	and    BYTE PTR [ecx+0x38af1371],al
  42029f:	dec    ebx
  4202a0:	fbstp  TBYTE PTR [eax-0x28208522]
  4202a6:	out    0x12,eax
  4202a8:	mov    ah,0xf2
  4202aa:	xchg   eax,ebx
  4202ac:	mov    ds:0x590dbc8f,eax
  4202b1:	dec    eax
  4202b2:	loope  0x420312
  4202b4:	mov    dl,0x56
  4202b6:	clc    
  4202b7:	inc    esi
  4202b8:	mul    BYTE PTR [esi]
  4202ba:	jbe    0x420256
  4202bc:	pop    eax
  4202bd:	sahf   
  4202be:	adc    al,0x96
  4202c0:	mov    bl,0xb4
  4202c2:	cmp    DWORD PTR [edi],esi
  4202c4:	cwde   
  4202c5:	fiadd  WORD PTR [ebx+0x566547df]
  4202cb:	mov    dl,BYTE PTR [ebp+0x19]
  4202ce:	or     al,0xe1
  4202d0:	adc    eax,0x4802bb87
  4202d5:	dec    ecx
  4202d6:	mov    cs,WORD PTR ds:0x94cb0d53
  4202dc:	mov    al,0xd
  4202de:	push   ebx
  4202df:	frstor [eax]
  4202e1:	ins    BYTE PTR es:[edi],dx
  4202e2:	lods   al,BYTE PTR ds:[esi]
  4202e3:	jge    0x420361
  4202e5:	sbb    al,0xff
  4202e7:	repz xchg edi,eax
  4202e9:	dec    ecx
  4202ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202eb:	repz mov bh,0x7d
  4202ee:	push   esp
  4202ef:	jbe    0x420367
  4202f1:	xor    esp,0x24
  4202f4:	xor    ah,BYTE PTR [edi-0x17]
  4202f7:	call   0x3a36e485
  4202fc:	dec    ebp
  4202fd:	sar    DWORD PTR [ebx+0x1f],0x91
  420301:	adc    eax,0xabcee293
  420306:	cmp    eax,0x8ee4a791
  42030b:	add    BYTE PTR [ebp-0x34b4bec8],al
  420311:	or     BYTE PTR [eax],ah
  420313:	in     eax,dx
  420314:	cmp    eax,0xd3cda644
  420319:	in     eax,0xd1
  42031b:	(bad)  
  42031c:	and    al,BYTE PTR [edi-0x3e]
  42031f:	fisttp WORD PTR [ebx+0x51]
  420322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420323:	leave  
  420324:	sbb    ecx,DWORD PTR [esp+esi*1-0x44f08bc3]
  42032b:	test   ch,dh
  42032d:	mov    ecx,0x568f53c4
  420332:	test   al,0xba
  420334:	cmp    al,0xd8
  420336:	in     eax,dx
  420337:	sub    esp,DWORD PTR [edi]
  420339:	les    edi,FWORD PTR ds:0xaa95a7f7
  42033f:	mov    eax,0x7fe6b828
  420344:	jg     0x4203aa
  420346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420347:	lahf   
  420348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420349:	dec    ecx
  42034a:	ret    
  42034b:	jp     0x420359
  42034d:	imul   eax,DWORD PTR [ecx-0x17],0x48
  420351:	fnstcw WORD PTR [ebx-0x7]
  420354:	ret    
  420355:	mov    BYTE PTR [eax],0x0
	...
  420360:	add    BYTE PTR [eax],al
  420362:	xor    eax,0xbf06168e
  420367:	sahf   
  420368:	xor    eax,0xa0e807bf
  42036d:	mov    edx,0x9d2f14ce
  420372:	push   esi
  420373:	js     0x420376
  420375:	add    BYTE PTR [ebx+eax*1],ch
  420378:	add    BYTE PTR [eax],al
  42037a:	pusha  
  42037b:	sbb    esi,DWORD PTR [ecx]
  42037d:	inc    esp
  42037e:	in     al,dx
  42037f:	xlat   BYTE PTR ds:[ebx]
  420380:	pop    ecx
  420381:	sbb    al,0xd8
  420383:	cmp    al,0x62
  420385:	push   ebx
  420386:	cmp    bh,BYTE PTR [esi-0x3a]
  420389:	(bad)  
  42038b:	test   BYTE PTR [esp+ebp*1-0x51],0xb3
  420390:	(bad)  
  420391:	iret   
  420392:	and    eax,0x24a066ed
  420397:	cmp    ecx,DWORD PTR [edi]
  420399:	sbb    ecx,DWORD PTR [ebx+0x52]
  42039c:	xchg   edx,eax
  42039d:	or     BYTE PTR [esi+0x2f],al
  4203a0:	scas   al,BYTE PTR es:[edi]
  4203a1:	adc    DWORD PTR ds:0xc3801909,edx
  4203a7:	fldenv [ebp-0x27]
  4203aa:	mov    dh,0xd
  4203ac:	mov    bh,0x24
  4203ae:	adc    DWORD PTR [eax-0x10],eax
  4203b1:	push   0xffffffe1
  4203b3:	arpl   WORD PTR [edx-0x1d8d5716],sp
  4203b9:	cmp    BYTE PTR [edi],ch
  4203bb:	enter  0x967a,0x65
  4203bf:	inc    ebp
  4203c0:	into   
  4203c1:	clc    
  4203c2:	and    eax,0xa89f8d0a
  4203c7:	and    eax,0x2e49e778
  4203cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203cd:	sbb    eax,0xeee33522
  4203d2:	(bad)  
  4203d3:	int3   
  4203d4:	aas    
  4203d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d6:	retf   0x8232
  4203d9:	shl    DWORD PTR ds:[esp+eiz*2-0x26b2b134],cl
  4203e1:	out    dx,al
  4203e2:	xor    bl,ch
  4203e4:	scas   eax,DWORD PTR es:[edi]
  4203e5:	sub    edi,ecx
  4203e7:	inc    edx
  4203e8:	call   FWORD PTR [ecx+ecx*8+0x2d]
  4203ec:	stos   DWORD PTR es:[edi],eax
  4203ed:	xchg   ebp,eax
  4203ee:	pop    esi
  4203ef:	ins    BYTE PTR es:[edi],dx
  4203f0:	push   ecx
  4203f1:	mov    edx,0x613b52d2
  4203f6:	mov    ds:0x4a236835,eax
  4203fb:	imul   esp,DWORD PTR ds:0x21824410,0x85b80dfd
  420405:	into   
  420406:	jae    0x42041d
  420408:	inc    ecx
  420409:	adc    dh,bh
  42040b:	jp     0x420419
  42040d:	fbld   TBYTE PTR [ecx+0x3375ea11]
  420413:	xlat   BYTE PTR ds:[ebx]
  420414:	sub    al,0x7
  420416:	add    ecx,DWORD PTR [edi+0xc91399]
  42041c:	std    
  42041d:	or     DWORD PTR [esi+eax*8],0xf5eb055
  420424:	retf   0x9602
  420427:	das    
  420428:	push   ebx
  420429:	lods   al,BYTE PTR ds:[esi]
  42042a:	(bad)  
  42042b:	jae    0x42047d
  42042d:	mov    ebx,0xf26b5576
  420432:	scas   al,BYTE PTR es:[edi]
  420433:	and    DWORD PTR [esi],edi
  420435:	adc    ah,BYTE PTR [edi]
  420437:	mov    bh,BYTE PTR [esi-0x4f1c7ad3]
  42043d:	xchg   esp,eax
  42043e:	scas   al,BYTE PTR es:[edi]
  42043f:	push   esp
  420440:	loop   0x4204a7
  420442:	repnz inc eax
  420444:	xchg   ebx,eax
  420445:	jne    0x42046c
  420447:	mov    ch,0xc5
  420449:	and    BYTE PTR [edx],dh
  42044b:	sti    
  42044c:	mov    eax,0x6a7767d3
  420451:	mov    eax,ds:0x664bddab
  420456:	test   eax,0x76a70bec
  42045b:	(bad)  
  42045c:	jbe    0x4203e6
  42045e:	int3   
  42045f:	mov    cl,0x76
  420461:	mov    bl,0x33
  420463:	and    eax,0xc4e1fccb
  420468:	ins    DWORD PTR es:[edi],dx
  420469:	cmp    eax,0x970de513
  42046e:	xchg   edx,eax
  42046f:	lods   al,BYTE PTR ds:[esi]
  420470:	je     0x4204f0
  420472:	dec    ebx
  420473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420474:	ficomp WORD PTR [esi]
  420476:	xchg   esi,eax
  420477:	adc    esi,DWORD PTR [esp+0x16]
  42047b:	adc    edx,DWORD PTR [edi+0x78]
  42047e:	lods   eax,DWORD PTR ds:[esi]
  42047f:	aaa    
  420480:	xor    esi,edi
  420482:	loope  0x4204d3
  420484:	xlat   BYTE PTR ds:[ebx]
  420485:	push   ds
  420486:	sbb    al,0x63
  420488:	loop   0x420476
  42048a:	nop
  42048b:	mov    ds:0x9af7a25c,al
  420490:	xor    eax,0x6c49d3a6
  420495:	sbb    eax,DWORD PTR [edi]
  420497:	mov    cl,0xf3
  420499:	mov    al,0x8
  42049b:	mov    ch,0x73
  42049d:	cmovno ebx,DWORD PTR [edi+0x4b]
  4204a1:	mov    edi,0x115190b9
  4204a6:	inc    BYTE PTR [ebp-0x5a]
  4204a9:	adc    DWORD PTR [edi],edx
  4204ab:	add    BYTE PTR cs:[ebx+edx*2+0x41638ac7],cl
  4204b3:	pop    ss
  4204b4:	imul   edx,DWORD PTR [edi-0x54],0xffffff8c
  4204b8:	and    edx,DWORD PTR [eax+eax*1-0x632c64ce]
  4204bf:	imul   ebx,DWORD PTR [edx],0xffffff92
  4204c2:	shr    ecx,0xcf
  4204c5:	mov    eax,0x95dcf820
  4204ca:	ins    DWORD PTR es:[edi],dx
  4204cb:	mov    ch,BYTE PTR ds:0x653e1d6b
  4204d1:	adc    eax,0xd03e6208
  4204d6:	fsub   DWORD PTR [esi+0x51]
  4204d9:	out    dx,al
  4204da:	jl     0x4204cc
  4204dc:	adc    ebx,DWORD PTR [esi+0x54]
  4204df:	push   esp
  4204e0:	leave  
  4204e1:	lods   al,BYTE PTR ds:[esi]
  4204e2:	scas   eax,DWORD PTR es:[edi]
  4204e3:	out    0x19,al
  4204e5:	fs xor al,0x18
  4204e8:	adc    al,bl
  4204ea:	mov    eax,ds:0xc473eb84
  4204ef:	fsub   st,st(3)
  4204f1:	xchg   esp,eax
  4204f2:	das    
  4204f3:	or     ebx,esp
  4204f5:	xchg   esp,eax
  4204f6:	ins    BYTE PTR es:[edi],dx
  4204f7:	stos   DWORD PTR es:[edi],eax
  4204f8:	sub    dh,BYTE PTR [ecx+0x32c4fcac]
  4204fe:	ret    
  4204ff:	adc    DWORD PTR [ebp-0x6306d7cc],0x9683824a
  420509:	sti    
  42050a:	add    edx,eax
  42050c:	mov    eax,0x15f11c4e
  420511:	fwait
  420512:	in     eax,dx
  420513:	and    eax,DWORD PTR [edx+0x2fb84ae0]
  420519:	pushf  
  42051a:	adc    eax,DWORD PTR [esi-0x52]
  42051d:	sbb    ah,dl
  42051f:	pop    edx
  420520:	or     ecx,esi
  420522:	sbb    edx,DWORD PTR [ecx+0x65]
  420525:	sbb    bh,BYTE PTR [esi+0x69]
  420528:	in     al,0xe7
  42052a:	(bad)  
  42052b:	mov    ebp,0x47da580b
  420530:	and    bh,BYTE PTR [edx+edx*4-0x18]
  420534:	mov    esi,0xeffed1c0
  420539:	push   es
  42053a:	sub    al,0x6
  42053c:	jl     0x4204c3
  42053e:	dec    edx
  42053f:	xor    edi,DWORD PTR ds:0xb0798b4a
  420545:	in     eax,0x68
  420547:	push   eax
  420548:	jg     0x4204ff
  42054a:	cld    
  42054b:	cmp    BYTE PTR [edi+esi*8+0x1c],al
  42054f:	sbb    al,0x1b
  420551:	call   0x901417ae
  420556:	hlt    
  420557:	add    bl,al
  420559:	mov    esi,0xc6ffdf0e
  42055e:	jl     0x420535
  420560:	cs jno 0x42059e
  420563:	es jmp 0x880:0x147b1dcc
  42056b:	xchg   esp,eax
  42056c:	pop    ss
  42056d:	outs   dx,DWORD PTR ds:[esi]
  42056e:	into   
  42056f:	mov    ch,0xc7
  420571:	fbstp  TBYTE PTR [ecx-0xc1a71c6]
  420577:	dec    edi
  420578:	mov    ah,0x62
  42057a:	xor    cl,BYTE PTR [edi]
  42057c:	cdq    
  42057d:	js     0x420599
  42057f:	cmp    ebp,DWORD PTR [ebx]
  420581:	rcr    esp,1
  420583:	inc    edi
  420584:	jge    0x42052f
  420586:	mov    ebp,0xd6e5b5c6
  42058b:	retf   0x767b
  42058e:	push   ds
  42058f:	jnp    0x420571
  420591:	mov    esi,0x87560f9c
  420596:	fld    st(7)
  420598:	xchg   BYTE PTR [edi+edx*2-0x1a],ch
  42059c:	push   cs
  42059d:	push   ss
  42059e:	push   0x4cf2a245
  4205a3:	test   eax,0x1dcbe7b3
  4205a8:	jmp    0x986e:0xdafc4070
  4205af:	stc    
  4205b0:	fucomp st(6)
  4205b2:	and    ebp,DWORD PTR [ecx]
  4205b4:	xor    edi,DWORD PTR [ecx]
  4205b6:	mov    cs:0x5cc05903,al
  4205bc:	mov    eax,0xb3e1cd79
  4205c1:	cmp    eax,0xc7f794f1
  4205c6:	jnp    0x42062e
  4205c8:	ins    DWORD PTR es:[edi],dx
  4205c9:	or     DWORD PTR [edi-0x3d],ecx
  4205cc:	add    BYTE PTR [esi+0x5af6d801],bl
  4205d2:	loope  0x420593
  4205d4:	jo     0x42058e
  4205d6:	adc    bl,BYTE PTR [ebp+0x253bd35e]
  4205dc:	rcr    DWORD PTR [ebx-0x6a5ae35e],cl
  4205e2:	sahf   
  4205e3:	pop    edi
  4205e4:	sub    edi,DWORD PTR [ecx+0x7d]
  4205e7:	xor    al,0x89
  4205e9:	pop    ecx
  4205ea:	pop    edx
  4205eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205ec:	loope  0x4205e5
  4205ee:	or     cl,BYTE PTR [eax]
  4205f0:	mov    esi,0xcf2432dc
  4205f5:	das    
  4205f6:	inc    ebx
  4205f7:	mov    cl,0xd3
  4205f9:	hlt    
  4205fa:	cmp    DWORD PTR [ebp-0x5fb9af04],edx
  420600:	aaa    
  420601:	es es (bad) 
  420604:	retf   
  420605:	jecxz  0x42061e
  420607:	xor    DWORD PTR [esi],eax
  420609:	adc    BYTE PTR [edx+0x45],cl
  42060c:	aam    0x1c
  42060e:	stc    
  42060f:	sbb    DWORD PTR [ecx],esi
  420611:	mov    esi,0x68c44763
  420616:	mov    esp,0xe68146fe
  42061b:	(bad)  
  42061c:	fild   WORD PTR [esi]
  42061e:	daa    
  42061f:	out    0xf9,al
  420621:	sbb    DWORD PTR [esi],ecx
  420623:	das    
  420624:	out    dx,eax
  420625:	iret   
  420626:	jne    0x420643
  420628:	inc    ebx
  420629:	(bad)  [edi]
  42062b:	push   0x63
  42062d:	mov    eax,0xa6be9fac
  420632:	bound  edx,QWORD PTR [ecx+0x51]
  420635:	cmp    al,0xa1
  420637:	repz cmp DWORD PTR [ecx+0x1d],edx
  42063b:	add    eax,0xc3bedf34
  420640:	pop    ebx
  420641:	push   ss
  420642:	dec    eax
  420643:	mul    bl
  420645:	add    bl,0x37
  420648:	xchg   bh,bh
  42064a:	ja     0x420690
  42064c:	xor    eax,0xbaf9a000
  420651:	mov    ch,0x43
  420653:	dec    ecx
  420654:	loope  0x42069d
  420656:	mov    BYTE PTR [eax+0x26c6e412],ch
  42065c:	xor    eax,0x4a5dec34
  420661:	push   esp
  420662:	jnp    0x4205e6
  420664:	enter  0x882,0x37
  420668:	inc    edi
  420669:	jmp    0x63b6b07b
  42066e:	sbb    ch,BYTE PTR [edi+0x60]
  420671:	imul   esp,DWORD PTR ds:0xfa246436,0x52
  420678:	cmp    esi,ecx
  42067a:	and    BYTE PTR [edi+0x9da54f4],ch
  420680:	push   esp
  420681:	mul    BYTE PTR [ecx-0x73]
  420684:	mov    ebx,0xf1640fc4
  420689:	popf   
  42068a:	xor    DWORD PTR [eax-0x10],0xf7a7c083
  420691:	not    BYTE PTR gs:[eax]
  420694:	call   0x458e:0x6c30d596
  42069b:	xor    BYTE PTR [eax+0x38e8d7f2],cl
  4206a1:	sahf   
  4206a2:	es xchg esp,eax
  4206a4:	push   es
  4206a5:	add    BYTE PTR [eax],0x0
	...
  4206b0:	add    BYTE PTR [eax],al
  4206b2:	stc    
  4206b3:	std    
  4206b4:	in     eax,dx
  4206b5:	mov    cl,0xed
  4206b7:	mov    cl,0xfd
  4206b9:	std    
  4206ba:	pop    ds
  4206bb:	xor    dl,0xed
  4206be:	mov    ah,0x9a
  4206c0:	xchg   ebx,eax
  4206c1:	adc    eax,DWORD PTR [edx+0x2c00017b]
  4206c7:	add    eax,DWORD PTR [eax]
  4206c9:	add    BYTE PTR [ebx],bl
  4206cb:	out    0x4a,al
  4206cd:	test   BYTE PTR [eax-0x70ba20c0],bh
  4206d3:	shr    esi,0xc0
  4206d6:	mov    ebp,0x616bbe9f
  4206db:	ror    edi,0x31
  4206de:	add    dh,BYTE PTR [eax-0x7a]
  4206e1:	add    BYTE PTR [eax+0x421977a5],0x2f
  4206e8:	stos   BYTE PTR es:[edi],al
  4206e9:	mov    ecx,DWORD PTR [ebx+0x3c675d7b]
  4206ef:	xor    cl,BYTE PTR [ebx]
  4206f1:	sub    BYTE PTR [edx-0x40a2b215],ah
  4206f7:	int3   
  4206f8:	ja     0x42067b
  4206fa:	push   eax
  4206fb:	aam    0xf8
  4206fd:	mov    ds:0x10c3d611,eax
  420702:	(bad)  
  420703:	aad    0x46
  420705:	enter  0xc837,0xbc
  420709:	pop    edi
  42070a:	lods   al,BYTE PTR fs:[esi]
  42070c:	inc    eax
  42070d:	fldl2t 
  42070f:	inc    esi
  420710:	andnps xmm2,XMMWORD PTR [edi+eiz*8]
  420714:	loopne 0x420768
  420716:	mov    eax,0x1931ed37
  42071b:	inc    ecx
  42071c:	jge    0x4206f5
  42071e:	scas   al,BYTE PTR es:[edi]
  42071f:	mov    bl,0x9
  420721:	pop    ebx
  420722:	(bad)  
  420723:	shr    BYTE PTR [esi-0x5d],cl
  420726:	sbb    al,0x7f
  420728:	dec    ebx
  420729:	dec    eax
  42072a:	mov    edx,0x651f1721
  42072f:	inc    ebp
  420730:	cli    
  420731:	fdivr  QWORD PTR [edi-0x3850be13]
  420737:	add    cl,dl
  420739:	iret   
  42073a:	in     eax,dx
  42073b:	xor    eax,0x43c3921a
  420740:	adc    al,0x95
  420742:	inc    BYTE PTR [edx+0x205c7d92]
  420748:	sti    
  420749:	hlt    
  42074a:	xor    bh,bl
  42074c:	dec    esp
  42074d:	bound  ecx,QWORD PTR [ecx-0x2d]
  420750:	inc    eax
  420751:	push   ebx
  420752:	mov    cl,0x97
  420754:	inc    ecx
  420755:	leave  
  420756:	retf   
  420757:	ja     0x42072d
  420759:	das    
  42075a:	sbb    bh,BYTE PTR fs:[ebp+0xdd223c0]
  420761:	imul   esi,ebx,0xbbe95744
  420767:	jbe    0x4207e4
  420769:	fstp   st(5)
  42076b:	push   esi
  42076c:	into   
  42076d:	ret    0x8b19
  420770:	enter  0xfe6a,0x17
  420774:	aas    
  420775:	cld    
  420776:	push   0xb2d0e266
  42077b:	xor    BYTE PTR [edx],cl
  42077d:	clc    
  42077e:	je     0x420737
  420780:	lods   eax,DWORD PTR ds:[esi]
  420781:	and    ah,0x37
  420784:	sbb    eax,0x1684086d
  420789:	mov    esp,0x492988dd
  42078e:	cmp    eax,0xcefe5486
  420793:	repz mov ebp,0x33f44e6e
  420799:	ja     0x4207c2
  42079b:	mov    edx,DWORD PTR [esi+0x48611b5f]
  4207a1:	xor    BYTE PTR [eax-0x3092acd6],ah
  4207a7:	ins    DWORD PTR es:[edi],dx
  4207a8:	scas   eax,DWORD PTR es:[edi]
  4207a9:	xchg   ebp,eax
  4207aa:	jmp    0x420828
  4207ac:	jo     0x4207ca
  4207ae:	outs   dx,BYTE PTR ds:[esi]
  4207af:	and    eax,0x5eec19a1
  4207b4:	sti    
  4207b5:	fs mov edx,0x9149063f
  4207bb:	xlat   BYTE PTR ds:[ebx]
  4207bc:	(bad)  
  4207bd:	arpl   WORD PTR [ebx],di
  4207bf:	iret   
  4207c0:	(bad)  
  4207c1:	bound  edx,QWORD PTR [edi-0x4b]
  4207c4:	mov    ds:0x9b49f37a,al
  4207c9:	jmp    FWORD PTR [esi+0x47]
  4207cc:	vcvtsd2ss xmm3,xmm5,QWORD PTR [eax]
  4207d0:	sbb    BYTE PTR [ecx-0x161b2541],bh
  4207d6:	out    dx,eax
  4207d7:	sbb    ch,BYTE PTR [esi+0x45bd15fe]
  4207dd:	in     eax,0x5b
  4207df:	shl    dh,0x2f
  4207e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207e3:	ror    al,0x0
  4207e6:	pop    ecx
  4207e7:	adc    al,0xb8
  4207e9:	loop   0x420779
  4207eb:	(bad)  
  4207ed:	dec    edi
  4207ee:	inc    ecx
  4207ef:	scas   eax,DWORD PTR es:[edi]
  4207f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207f1:	out    dx,al
  4207f2:	and    al,BYTE PTR [esi+eax*1-0x25253440]
  4207f9:	jae    0x4207fa
  4207fb:	push   eax
  4207fc:	adc    cl,ch
  4207fe:	pop    ds
  4207ff:	mov    cl,0x16
  420801:	outs   dx,DWORD PTR ds:[esi]
  420802:	cmp    eax,0x368f74a1
  420807:	xchg   edx,eax
  420808:	frstor [ecx-0x67]
  42080b:	sub    bl,BYTE PTR [ecx]
  42080d:	icebp  
  42080e:	mov    ebx,0x3b06690b
  420813:	jp     0x420848
  420815:	lods   al,BYTE PTR ds:[esi]
  420816:	retf   0x8dea
  420819:	fsubr  QWORD PTR [eax-0x46d70856]
  42081f:	push   ebp
  420820:	sbb    eax,DWORD PTR [edi+0x11]
  420823:	push   esi
  420824:	aaa    
  420825:	test   edi,edx
  420827:	sub    eax,0x2e565ce8
  42082c:	xchg   ecx,eax
  42082d:	addr16 test eax,0x567dc22b
  420833:	or     esi,DWORD PTR [ecx]
  420835:	outs   dx,DWORD PTR ds:[esi]
  420836:	(bad)  
  420837:	int    0xd2
  420839:	cmp    bh,BYTE PTR [esi]
  42083b:	ret    
  42083c:	sbb    edi,DWORD PTR [esi]
  42083e:	jmp    0x4207f5
  420840:	mov    WORD PTR [ebx-0x5d134d8f],fs
  420846:	jnp    0x42086e
  420848:	add    ecx,DWORD PTR [edi+0x167b55f8]
  42084e:	sub    ebp,DWORD PTR [eax-0x5ff011dd]
  420854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420855:	das    
  420856:	push   edx
  420857:	mov    bh,0x3a
  420859:	sbb    DWORD PTR [edx],eax
  42085b:	mov    DWORD PTR [ecx],esp
  42085d:	dec    esi
  42085e:	fstp   DWORD PTR [ecx]
  420860:	std    
  420861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420862:	mov    bh,0xe4
  420864:	mov    bh,0xb0
  420866:	stos   DWORD PTR es:[edi],eax
  420867:	jecxz  0x42087e
  420869:	xchg   edi,eax
  42086a:	mov    ds:0x9f116a0f,al
  42086f:	mov    eax,0x12b31851
  420874:	les    ebx,FWORD PTR [ebx-0x43]
  420877:	nop
  420878:	sub    BYTE PTR [ebp-0x66],ah
  42087b:	xor    ebx,DWORD PTR cs:[edx+0x79]
  42087f:	push   ebx
  420880:	mov    bl,0xa0
  420882:	lods   eax,DWORD PTR ds:[esi]
  420883:	cmp    BYTE PTR [edx-0x7a9d8adb],dl
  420889:	and    al,0x74
  42088b:	adc    ecx,DWORD PTR [edx+0x6b]
  42088e:	xor    DWORD PTR [ebx+0x6ef81c27],ecx
  420894:	cld    
  420895:	xor    DWORD PTR [ecx],edx
  420897:	popf   
  420898:	mov    bl,0x58
  42089a:	cmc    
  42089b:	(bad)  
  42089c:	int    0x88
  42089e:	and    dl,BYTE PTR [ecx-0x39]
  4208a1:	adc    BYTE PTR ds:0xb5270f4a,dl
  4208a7:	fsub   DWORD PTR [ebx+eiz*1-0x38]
  4208ab:	pop    ss
  4208ac:	sub    ecx,DWORD PTR [esi-0x1f55f5d1]
  4208b2:	add    BYTE PTR [edx+edx*8],al
  4208b5:	xchg   edi,eax
  4208b6:	ds xchg edi,eax
  4208b8:	xor    ebp,DWORD PTR [ebp-0x21]
  4208bb:	mov    BYTE PTR [edx-0x639ad533],bh
  4208c1:	pand   mm2,QWORD PTR [esi+esi*4-0x74]
  4208c6:	shl    BYTE PTR [ebx+0x7a0c0252],0x1d
  4208cd:	sub    BYTE PTR [ebx+0x1a2be4d5],al
  4208d3:	clc    
  4208d4:	out    0x41,al
  4208d6:	retf   0x82a4
  4208d9:	jmp    0x42091c
  4208db:	mov    al,0x34
  4208dd:	repnz gs iret 
  4208e0:	jmp    0xa243bc68
  4208e5:	add    ch,BYTE PTR [ebp+0x1d26a1e4]
  4208eb:	aaa    
  4208ec:	mov    eax,ds:0x491cfb79
  4208f1:	mov    ebx,0x260855bf
  4208f6:	pop    edi
  4208f7:	cmp    dl,BYTE PTR [ebp+0x48]
  4208fa:	pusha  
  4208fb:	fcom   st(2)
  4208fd:	sti    
  4208fe:	mov    edx,0x55e0a1b3
  420903:	or     al,0xa4
  420905:	call   0x6bb3:0x2e7701a1
  42090c:	or     edi,esp
  42090e:	and    ch,BYTE PTR [eax-0x11c5cb7f]
  420914:	jb     0x4208de
  420916:	mov    ch,0xe1
  420918:	les    edi,FWORD PTR [eax+ebx*1-0x13]
  42091c:	mov    dl,0x27
  42091e:	ficom  DWORD PTR ds:0x87c36ed
  420924:	mov    cs,WORD PTR [edi-0x7879e513]
  42092a:	jmp    FWORD PTR [esi+edi*1+0x78b45f29]
  420931:	xlat   BYTE PTR ds:[ebx]
  420932:	push   ebx
  420933:	scas   eax,DWORD PTR es:[edi]
  420934:	mov    esp,0x5174f0e6
  420939:	fbld   TBYTE PTR [edx]
  42093b:	fwait
  42093c:	adc    BYTE PTR [edx+0x69],cl
  42093f:	add    BYTE PTR [eax+0x5f],cl
  420942:	mov    cl,0x33
  420944:	push   cs
  420945:	lahf   
  420946:	mov    eax,ds:0xea6e8e64
  42094b:	lods   al,BYTE PTR ds:[esi]
  42094c:	test   DWORD PTR cs:[edx-0x104121b9],eax
  420953:	(bad)  
  420954:	shr    DWORD PTR [ecx+eax*1],cl
  420957:	adc    al,BYTE PTR [esi-0x2f]
  42095a:	lds    ebx,FWORD PTR [ebx]
  42095c:	dec    ebp
  42095d:	(bad)  
  42095e:	outs   dx,DWORD PTR ds:[esi]
  42095f:	jmp    0x7ebecd53
  420964:	pop    esp
  420965:	sub    ebp,esi
  420967:	(bad)  
  420969:	cmp    al,0xde
  42096b:	call   0x5f5:0x91cb337f
  420972:	cmp    bh,bh
  420974:	xchg   ebx,eax
  420975:	jne    0x420918
  420977:	out    dx,al
  420978:	xor    DWORD PTR [ebp+0x50],ebp
  42097b:	adc    eax,DWORD PTR [eax+0x52]
  42097e:	inc    ebp
  42097f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420980:	and    eax,0xf0fd7331
  420985:	lods   al,BYTE PTR ds:[esi]
  420986:	push   edx
  420987:	mov    ebx,0x5dce6e1d
  42098c:	aam    0x2a
  42098e:	pop    esi
  42098f:	addr16 sbb al,0x32
  420992:	xor    DWORD PTR [edx],eax
  420994:	jge    0x420a06
  420996:	ds loope 0x4209d4
  420999:	sahf   
  42099a:	repnz mov dh,0xb9
  42099d:	int    0x36
  42099f:	ficom  DWORD PTR [ecx-0x74]
  4209a2:	cli    
  4209a3:	adc    DWORD PTR [edx+0x7a],edi
  4209a6:	or     al,0x75
  4209a8:	dec    ebp
  4209a9:	ja     0x420a1f
  4209ab:	out    dx,eax
  4209ac:	stc    
  4209ad:	jmp    0x4209eb
  4209af:	aam    0x59
  4209b1:	arpl   WORD PTR [eax],bp
  4209b3:	pop    ecx
  4209b4:	popa   
  4209b5:	lock in eax,dx
  4209b7:	test   DWORD PTR [eax+0x30],edi
  4209ba:	push   edx
  4209bb:	push   ss
  4209bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209bd:	aad    0x5c
  4209bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209c0:	or     DWORD PTR [esi+0x5f],ebp
  4209c3:	jno    0x4209a2
  4209c5:	ror    edi,1
  4209c7:	sub    esp,ebx
  4209c9:	dec    esi
  4209ca:	out    dx,al
  4209cb:	mov    cl,0x73
  4209ce:	and    BYTE PTR [edi-0x30],cl
  4209d1:	les    esp,FWORD PTR [ecx+0x1d]
  4209d4:	adc    bl,BYTE PTR [edx-0x69]
  4209d7:	sti    
  4209d8:	add    edx,esp
  4209da:	xlat   BYTE PTR ds:[ebx]
  4209db:	rcl    BYTE PTR [ecx+0x6],cl
  4209de:	push   esi
  4209df:	int3   
  4209e0:	mov    eax,0xa84b9a1e
  4209e5:	into   
  4209e6:	xchg   DWORD PTR [edi-0x21],ebp
  4209e9:	mov    ds:0x38026599,al
  4209ee:	lods   eax,DWORD PTR ds:[esi]
  4209ef:	and    edx,edx
  4209f1:	ja     0x4209af
  4209f3:	mov    dl,0x93
  4209f5:	xchg   ebx,eax
	...
  420a02:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  420a0a:	out    dx,al
  420a0b:	sub    ebp,esp
  420a0d:	movq   mm7,mm3
  420a10:	mov    bh,0xf1
  420a12:	scas   al,BYTE PTR es:[edi]
  420a13:	jle    0x420a16
  420a15:	add    BYTE PTR [ebx+eax*1],ch
  420a18:	add    BYTE PTR [eax],al
  420a1a:	lahf   
  420a1b:	js     0x420a57
  420a1d:	(bad)  
  420a1e:	cdq    
  420a1f:	imul   esi,edi,0x0
  420a22:	adc    eax,DWORD PTR [edx]
  420a24:	rcl    DWORD PTR [edx+0x1fdd50e0],1
  420a2a:	lds    ecx,FWORD PTR [eax]
  420a2c:	xchg   ebp,eax
  420a2d:	push   ecx
  420a2e:	xor    al,BYTE PTR [esi-0x5]
  420a31:	cwde   
  420a32:	test   BYTE PTR [eax+0x4ae56496],dh
  420a38:	and    DWORD PTR [ebx-0x233aac4b],eax
  420a3e:	pop    esp
  420a3f:	sub    al,0x30
  420a41:	mov    DWORD PTR [ebx+0x3d0ebfb1],ecx
  420a47:	xchg   esp,eax
  420a48:	je     0x4209d0
  420a4a:	and    DWORD PTR [eax-0x13e4c9f2],esi
  420a50:	jo     0x420aa0
  420a52:	pusha  
  420a53:	and    al,0x5f
  420a55:	pop    es
  420a56:	scas   al,BYTE PTR es:[edi]
  420a57:	fisttp WORD PTR [esi-0x34]
  420a5a:	add    al,ah
  420a5c:	dec    edi
  420a5d:	cmp    BYTE PTR [esi],al
  420a5f:	(bad)  
  420a60:	out    0xfa,eax
  420a62:	jae    0x420a65
  420a64:	enter  0xe8,0xe
  420a68:	stc    
  420a69:	push   0x7694b760
  420a6e:	mov    al,0xb7
  420a70:	idiv   BYTE PTR [eax+edi*8+0x25cacd66]
  420a77:	shr    BYTE PTR [ecx],cl
  420a79:	inc    edx
  420a7a:	sub    ecx,edx
  420a7c:	adc    DWORD PTR [esi],esp
  420a7e:	lock test eax,0x3183a72d
  420a84:	test   DWORD PTR [edi-0x46c8a2ca],eax
  420a8a:	sbb    al,0x38
  420a8c:	rcr    bh,1
  420a8e:	out    dx,eax
  420a8f:	adc    al,0x74
  420a91:	cs add al,0x78
  420a94:	mov    bl,0xc9
  420a96:	pop    ds
  420a97:	mov    al,0x8a
  420a99:	test   BYTE PTR [ecx-0xf],bl
  420a9c:	push   ebx
  420a9d:	idiv   BYTE PTR [ebx]
  420a9f:	fild   WORD PTR [edx+0x3704ef4c]
  420aa5:	push   eax
  420aa6:	outs   dx,DWORD PTR ds:[esi]
  420aa7:	inc    eax
  420aa8:	into   
  420aa9:	repnz loopne 0x420acc
  420aac:	enter  0x92c7,0x8f
  420ab0:	push   ebx
  420ab1:	pop    ecx
  420ab2:	dec    esi
  420ab3:	xor    eax,0x7fedbe91
  420ab8:	icebp  
  420ab9:	mov    cl,BYTE PTR [eax-0x2f]
  420abc:	sbb    BYTE PTR [edx*8+0x3d2aa03e],dl
  420ac3:	aas    
  420ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac5:	pop    es
  420ac6:	retf   0x8113
  420ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aca:	(bad)  
  420acb:	das    
  420acc:	test   eax,0x3c1295b
  420ad1:	std    
  420ad2:	(bad)  
  420ad3:	fsub   st(1),st
  420ad5:	adc    ebp,DWORD PTR ds:0xcbdce086
  420adb:	xchg   esi,eax
  420adc:	add    eax,0x868ab126
  420ae1:	push   esp
  420ae2:	sbb    al,0xce
  420ae4:	outs   dx,DWORD PTR ds:[esi]
  420ae5:	in     eax,0x41
  420ae7:	lea    edx,[edx-0x41]
  420aea:	push   esi
  420aeb:	aas    
  420aec:	pop    esp
  420aed:	or     BYTE PTR [edi-0x40],dl
  420af0:	push   ecx
  420af1:	out    0x95,al
  420af3:	adc    eax,DWORD PTR [eax+0x312b7a8a]
  420af9:	jecxz  0x420b3c
  420afb:	adc    al,0xc
  420afd:	lahf   
  420afe:	xchg   DWORD PTR [edi+0x69],ebx
  420b01:	sar    BYTE PTR ds:0x4aa86b6b,1
  420b07:	rol    DWORD PTR [ebx+ecx*2],1
  420b0a:	popa   
  420b0b:	dec    esp
  420b0c:	or     BYTE PTR [ecx],ah
  420b0e:	(bad)
  420b12:	(bad)  
  420b13:	cmp    al,0x3a
  420b15:	mov    eax,ds:0x7bfbec10
  420b1a:	mov    ebp,0x222a2e0e
  420b1f:	push   esi
  420b20:	leave  
  420b21:	push   0x1ddf8991
  420b26:	pop    ds
  420b27:	mov    dh,0x64
  420b29:	sub    eax,0xe6b4d403
  420b2e:	mov    ds:0x3395d14,al
  420b33:	dec    edi
  420b34:	jmp    0x420b73
  420b36:	call   0xe38d:0x9966
  420b3c:	mov    ecx,0x7bc18e4a
  420b41:	and    BYTE PTR [ecx],al
  420b43:	adc    ebp,ebx
  420b45:	int    0xb0
  420b47:	or     esp,DWORD PTR [ebp+0x1f1dee06]
  420b4d:	stos   DWORD PTR es:[edi],eax
  420b4e:	fsub   DWORD PTR [edi-0x56]
  420b51:	fmul   QWORD PTR [esi+ecx*1-0x7]
  420b55:	jmp    0x8b87925b
  420b5a:	into   
  420b5b:	sahf   
  420b5c:	daa    
  420b5d:	dec    ecx
  420b5e:	in     al,dx
  420b5f:	scas   al,BYTE PTR es:[edi]
  420b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b61:	pop    ebx
  420b62:	jmp    0x7c40:0x43791a1c
  420b69:	stos   DWORD PTR es:[edi],eax
  420b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b6b:	arpl   WORD PTR [ecx],bx
  420b6d:	sbb    esp,DWORD PTR [eax-0x10]
  420b70:	sub    eax,0x21ff5e7e
  420b75:	xchg   esi,eax
  420b76:	js     0x420b7d
  420b78:	pop    ecx
  420b79:	mov    ch,0x2b
  420b7b:	jp     0x420bd1
  420b7d:	jecxz  0x420b9f
  420b7f:	pop    ecx
  420b80:	out    dx,al
  420b81:	xor    BYTE PTR [ebx+0x58],0x59
  420b85:	es mov edx,0x49662cd2
  420b8b:	adc    DWORD PTR [ebx-0x41],ebp
  420b8e:	adc    al,0x3b
  420b90:	mov    ah,0x5
  420b92:	and    ebx,DWORD PTR [ecx]
  420b94:	xor    cl,bl
  420b96:	push   ss
  420b97:	rol    BYTE PTR [edi+0x3f535a02],0xb3
  420b9e:	fwait
  420b9f:	jo     0x420b89
  420ba1:	xor    dl,ch
  420ba3:	out    dx,eax
  420ba4:	fld    DWORD PTR [eax]
  420ba6:	dec    esp
  420ba7:	xor    esi,DWORD PTR [edx]
  420ba9:	shl    DWORD PTR [edi+edx*1],cl
  420bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bad:	xchg   ebp,eax
  420bae:	push   ecx
  420baf:	or     al,0x18
  420bb1:	fdiv   DWORD PTR [edi+ecx*2+0x7d1d564e]
  420bb8:	adc    al,0x22
  420bba:	adc    eax,0x4b520db4
  420bbf:	mov    edi,0xddef8b41
  420bc4:	sbb    esp,DWORD PTR [edi]
  420bc6:	test   BYTE PTR [eax],dh
  420bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bc9:	pop    ecx
  420bca:	call   0xa23:0xa71777d0
  420bd1:	push   cs
  420bd2:	and    DWORD PTR ds:0x5c96ea0a,0xf4817b4e
  420bdc:	imul   ebx,DWORD PTR [ebx],0x59c662f9
  420be2:	sar    DWORD PTR [edx+0x1ae5eb06],1
  420be8:	push   eax
  420be9:	sbb    eax,0x28bbb3ba
  420bee:	push   esi
  420bef:	jb     0x420c15
  420bf1:	xchg   edi,eax
  420bf2:	lods   eax,DWORD PTR ds:[esi]
  420bf3:	inc    ebx
  420bf4:	sub    eax,DWORD PTR [edx-0x381fdef1]
  420bfa:	enter  0x923e,0xe3
  420bfe:	mov    eax,0x84d6e6a2
  420c03:	ins    DWORD PTR es:[edi],dx
  420c04:	dec    esi
  420c05:	jae    0x420bec
  420c07:	ja     0x420c11
  420c09:	or     al,0x46
  420c0b:	dec    ebp
  420c0c:	xchg   esp,eax
  420c0d:	xor    al,BYTE PTR [edi+edi*2]
  420c10:	push   0xdaeace36
  420c15:	dec    esp
  420c16:	and    dl,BYTE PTR [esi+0x2d0dfa39]
  420c1c:	hlt    
  420c1d:	push   es
  420c1e:	sub    eax,0xfeb27a76
  420c23:	pop    ebp
  420c24:	cmp    eax,0x374b9868
  420c29:	or     ch,bl
  420c2b:	dec    eax
  420c2c:	jg     0x420c14
  420c2e:	int    0x52
  420c30:	dec    esp
  420c31:	pusha  
  420c32:	mov    bh,0x9
  420c34:	clc    
  420c35:	push   0xb2a5f84b
  420c3a:	jnp    0x420c1a
  420c3c:	repz sti 
  420c3e:	fst    QWORD PTR [edx]
  420c40:	xor    bl,bh
  420c42:	sub    BYTE PTR ds:0xc912fc80,cl
  420c48:	xor    BYTE PTR [ecx+edi*4+0x48350f22],bl
  420c4f:	mov    edi,0x742d41fe
  420c54:	jecxz  0x420bf5
  420c56:	ret    0xe552
  420c59:	add    al,0xd
  420c5b:	clc    
  420c5c:	xlat   BYTE PTR ds:[ebx]
  420c5d:	iret   
  420c5e:	sbb    bh,ah
  420c60:	into   
  420c61:	pop    edi
  420c62:	retf   0x9e94
  420c65:	out    0xc3,al
  420c67:	pop    ss
  420c68:	and    al,0x2a
  420c6a:	pop    ds
  420c6b:	stos   DWORD PTR es:[edi],eax
  420c6c:	inc    ebp
  420c6d:	cmp    DWORD PTR [ebp-0x27],ebp
  420c70:	sbb    BYTE PTR [esi-0xf],dh
  420c73:	mov    edx,DWORD PTR [ebx+0x22d3c392]
  420c79:	into   
  420c7a:	fadd   st,st(3)
  420c7c:	ins    DWORD PTR es:[edi],dx
  420c7d:	outs   dx,DWORD PTR ds:[esi]
  420c7e:	imul   eax,DWORD PTR [ecx-0x1f],0x19
  420c82:	add    eax,eax
  420c84:	imul   esi,DWORD PTR [edi+ebp*8-0x51],0xffffffaf
  420c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c8a:	add    BYTE PTR [ebx],dh
  420c8c:	outs   dx,BYTE PTR gs:[esi]
  420c8e:	aad    0x7d
  420c90:	xchg   edx,ebx
  420c92:	pop    edx
  420c93:	sub    al,0x4c
  420c95:	adc    eax,0xe3284305
  420c9a:	inc    esp
  420c9b:	mov    ds:0x865d6114,eax
  420ca0:	pop    esi
  420ca1:	pop    es
  420ca2:	sub    DWORD PTR [edi+edx*2+0x2e7f7973],esi
  420ca9:	retf   0xba01
  420cac:	cld    
  420cad:	xchg   ebp,eax
  420cae:	sbb    eax,0xae474891
  420cb3:	inc    ecx
  420cb4:	cdq    
  420cb5:	nop
  420cb6:	cmp    eax,ecx
  420cb8:	mov    edx,0x682f2015
  420cbd:	leave  
  420cbe:	xor    al,ah
  420cc0:	pop    es
  420cc1:	add    DWORD PTR [ebp+ebx*8-0x3c],0x29
  420cc6:	fneni(8087 only) 
  420cc8:	mov    eax,ds:0xb4154c52
  420ccd:	hlt    
  420cce:	call   0x2edc:0xb67c0063
  420cd5:	rol    DWORD PTR [ecx+edi*4],cl
  420cd8:	jle    0x420ca0
  420cda:	call   0x964:0xf96524b6
  420ce1:	pop    ebp
  420ce2:	sbb    esi,eax
  420ce4:	call   0xd37798ca
  420ce9:	pop    edx
  420cea:	fld    DWORD PTR [esi+0x38185a91]
  420cf0:	xchg   BYTE PTR ds:0xd22ad2fe,bl
  420cf6:	mov    dh,0x2a
  420cf8:	xor    DWORD PTR [ecx+0x13c702a9],0x42
  420cff:	mov    ebp,0x5aea3dd7
  420d04:	inc    ecx
  420d05:	call   0x912309bf
  420d0a:	gs push esi
  420d0c:	dec    edx
  420d0d:	adc    al,BYTE PTR ds:0x42935c57
  420d13:	jmp    0x5dc9:0xe05e278a
  420d1a:	lock xor BYTE PTR [esi-0x6c],ah
  420d1e:	inc    ebp
  420d1f:	jmp    0x764c8b6e
  420d24:	cld    
  420d25:	dec    esp
  420d26:	leave  
  420d27:	sbb    bh,BYTE PTR [edi-0x5f4d339e]
  420d2d:	sub    ebp,DWORD PTR [edi-0x28]
  420d30:	cmp    DWORD PTR [esi+0x7e],esp
  420d33:	adc    bl,BYTE PTR [esi+0x5d6c15e8]
  420d39:	and    eax,0x41c2ebd9
  420d3e:	fsub   QWORD PTR [ecx-0x62]
  420d41:	cmp    edi,esp
  420d43:	mov    esp,0x453c
	...
  420d50:	add    BYTE PTR [eax],al
  420d52:	inc    ebx
  420d53:	inc    ecx
  420d54:	popa   
  420d55:	data16 arpl WORD PTR [esi+0x47],sp
  420d59:	rcr    DWORD PTR gs:[edi+0x16],cl
  420d5d:	xor    al,bh
  420d5f:	out    0x67,eax
  420d61:	mov    eax,ds:0x181da
  420d66:	sub    al,0x3
  420d68:	add    BYTE PTR [eax],al
  420d6a:	xor    edi,ebx
  420d6c:	xor    DWORD PTR [edx],ebp
  420d6e:	and    DWORD PTR [edx],0xef618dc9
  420d74:	push   0x4fc2cf9b
  420d79:	pushf  
  420d7a:	xchg   edi,eax
  420d7b:	mov    esi,0x589fc4f5
  420d80:	cld    
  420d81:	mov    bl,BYTE PTR [ebp+esi*1-0x1a7271c3]
  420d88:	mov    ds:0x39d8e74,al
  420d8d:	shl    DWORD PTR [esi],cl
  420d8f:	jno    0x420dd8
  420d91:	shl    edx,0x87
  420d94:	addr16 sub al,0xf0
  420d97:	mov    dl,0xff
  420d99:	mov    edi,0x8432611f
  420d9e:	dec    esi
  420d9f:	xlat   BYTE PTR ds:[ebx]
  420da0:	jge    0x420df8
  420da2:	aad    0x8e
  420da4:	aam    0xfc
  420da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420da7:	pop    ebp
  420da8:	aaa    
  420da9:	push   cs
  420daa:	inc    esi
  420dab:	inc    edi
  420dac:	mov    ebx,0xc4c1a9a1
  420db1:	imul   esi,esp,0x61
  420db4:	or     eax,0xde3a2618
  420db9:	adc    eax,0xa4d1084b
  420dbe:	pop    esi
  420dbf:	in     eax,dx
  420dc0:	aaa    
  420dc1:	in     al,dx
  420dc2:	xor    al,0x7a
  420dc4:	popf   
  420dc5:	aam    0xf8
  420dc7:	adc    cl,BYTE PTR ds:0x4a426699
  420dcd:	xchg   ebx,eax
  420dce:	aam    0xbd
  420dd0:	cmc    
  420dd1:	sub    BYTE PTR [esi],cl
  420dd3:	xor    dh,BYTE PTR [ebp+0x57]
  420dd6:	xchg   edi,eax
  420dd7:	mov    ecx,0xb69c6125
  420ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ddd:	cs cli 
  420ddf:	lahf   
  420de0:	mov    esp,0x68cf4b72
  420de5:	(bad)  
  420de6:	cmp    ecx,DWORD PTR [ecx]
  420de8:	mov    dh,0xc5
  420dea:	inc    ebp
  420deb:	fcmovbe st,st(5)
  420ded:	icebp  
  420dee:	jg     0x420d9a
  420df0:	shl    DWORD PTR [edx-0x1e],1
  420df3:	inc    esp
  420df4:	inc    esp
  420df5:	push   0x21
  420df7:	push   esp
  420df8:	or     DWORD PTR [ecx+0x4c],0x7e029684
  420dff:	push   0xb0ecc396
  420e04:	mov    dh,bl
  420e06:	mov    cl,0xd
  420e08:	jae    0x420e71
  420e0a:	add    DWORD PTR [eax],edi
  420e0c:	inc    edx
  420e0d:	mov    ch,0xd3
  420e0f:	push   edi
  420e10:	test   al,0xc5
  420e12:	mov    ch,0xed
  420e14:	push   esp
  420e15:	jae    0x420e3e
  420e17:	imul   edx,DWORD PTR [ebx+eax*1-0x31769e2e],0xffffff96
  420e1f:	lahf   
  420e20:	fs xchg esi,eax
  420e22:	mov    ebx,0x2cfc7507
  420e27:	jno    0x420e65
  420e29:	aam    0x74
  420e2b:	lods   eax,DWORD PTR ds:[esi]
  420e2c:	push   eax
  420e2d:	test   BYTE PTR [ebx],dl
  420e2f:	push   ds
  420e30:	xor    edx,DWORD PTR [esi]
  420e32:	fsub   st(3),st
  420e34:	push   edi
  420e35:	idiv   DWORD PTR [eax-0x5533aaeb]
  420e3b:	mov    esi,ecx
  420e3d:	dec    edi
  420e3e:	mov    esp,0x7047b10c
  420e43:	sbb    dh,bh
  420e45:	mov    ds:0x83b4195f,eax
  420e4a:	jecxz  0x420e7a
  420e4c:	mov    esp,0xfc1ff154
  420e51:	shl    DWORD PTR [eax+0x4ac8a441],cl
  420e57:	inc    DWORD PTR ds:0x7e18886f
  420e5d:	cmp    eax,esi
  420e5f:	xchg   edi,eax
  420e60:	lea    edi,[edi+0x29]
  420e63:	sti    
  420e64:	ret    0x4b69
  420e67:	std    
  420e68:	fidiv  DWORD PTR [esi-0xf2a3236]
  420e6e:	pop    es
  420e6f:	jmp    0x7e73:0x604a173e
  420e76:	xchg   esi,eax
  420e77:	out    dx,eax
  420e78:	loop   0x420e21
  420e7a:	mov    bh,0xf1
  420e7c:	loop   0x420ece
  420e7e:	gs cmp esi,0x67c032bd
  420e85:	xchg   ebp,eax
  420e86:	jg     0x420e53
  420e88:	jl     0x420e39
  420e8a:	es cwde 
  420e8c:	mov    DWORD PTR [edx-0x7a],edx
  420e8f:	int3   
  420e90:	xor    eax,0x79d7102a
  420e95:	push   eax
  420e96:	cli    
  420e97:	push   edx
  420e98:	outs   dx,BYTE PTR ds:[esi]
  420e99:	js     0x420e8d
  420e9b:	push   edi
  420e9c:	aaa    
  420e9d:	ficom  WORD PTR [edi-0x726ec3ac]
  420ea3:	inc    esp
  420ea4:	pop    ebp
  420ea5:	mov    ch,0x24
  420ea7:	(bad)  
  420ea8:	jmp    0x1f7cd778
  420ead:	or     bl,BYTE PTR [edi-0x39]
  420eb0:	jne    0x420f0e
  420eb2:	gs pop eax
  420eb4:	hlt    
  420eb5:	xchg   BYTE PTR [ebp-0x17f8d6cc],ch
  420ebb:	push   edx
  420ebc:	sahf   
  420ebd:	pop    ds
  420ebe:	pop    eax
  420ebf:	test   eax,0xf2b121e0
  420ec4:	xor    BYTE PTR [eax+0x65ff6f3f],dl
  420eca:	gs das 
  420ecc:	pop    eax
  420ecd:	push   ecx
  420ece:	xor    edi,DWORD PTR [eax+0x22f13bcd]
  420ed4:	mov    eax,ds:0x715de4f7
  420ed9:	ds jl  0x420e6a
  420edc:	pop    esp
  420edd:	imul   esp,ebp,0x6
  420ee0:	jle    0x420e6f
  420ee2:	or     DWORD PTR [ebx],edx
  420ee4:	pop    ds
  420ee5:	mov    edx,DWORD PTR [ebp+0x5e0f00f9]
  420eeb:	cmp    DWORD PTR [ecx-0x43],ebp
  420eee:	lods   eax,DWORD PTR ds:[esi]
  420eef:	imul   esp,ebx,0xdf4b0ea2
  420ef5:	adc    eax,0xf71ba530
  420efa:	adc    DWORD PTR ds:0x8b22652f,edi
  420f00:	mov    ds:0x9c00adc3,eax
  420f05:	enter  0x2e87,0x50
  420f09:	jg     0x420f77
  420f0b:	xchg   bh,cl
  420f0d:	pop    ebx
  420f0e:	jb     0xa9ff0e0a
  420f14:	mov    esp,0xdb109147
  420f19:	xchg   ebp,eax
  420f1a:	ins    BYTE PTR es:[edi],dx
  420f1b:	add    esi,DWORD PTR [eax+0x245d038f]
  420f21:	ror    DWORD PTR [ebp-0x57],0xdb
  420f25:	xchg   DWORD PTR [ebp+0x50f51063],edi
  420f2b:	ja     0x420f97
  420f2d:	inc    edi
  420f2e:	add    DWORD PTR [esi],ebx
  420f30:	test   BYTE PTR [edx+ebp*2-0x5cbfcc00],dl
  420f37:	loopne 0x420f85
  420f39:	inc    eax
  420f3a:	push   ecx
  420f3b:	or     ebp,eax
  420f3d:	mov    dh,0x96
  420f3f:	imul   esi,ebx,0x13595913
  420f45:	and    edx,DWORD PTR [ecx+0x73]
  420f48:	jl     0x420f50
  420f4a:	add    al,0xcb
  420f4c:	mov    eax,ds:0x254fdc25
  420f51:	js     0x420f45
  420f53:	mov    WORD PTR [ebx-0x19],?
  420f56:	dec    esp
  420f57:	dec    edi
  420f58:	(bad)  
  420f59:	es jge 0x420fb1
  420f5c:	cli    
  420f5d:	aas    
  420f5e:	call   0xc02ff9d7
  420f63:	(bad)  
  420f65:	or     eax,0x236e6c46
  420f6a:	xchg   esp,eax
  420f6b:	test   eax,0xf749439c
  420f70:	pop    eax
  420f71:	neg    BYTE PTR [eax+0xdbd2f5e]
  420f77:	dec    ebx
  420f78:	or     DWORD PTR [esi],0xffffffc9
  420f7b:	popa   
  420f7c:	pop    esp
  420f7d:	xor    esp,DWORD PTR [esi]
  420f7f:	push   eax
  420f80:	inc    eax
  420f81:	rol    DWORD PTR [ecx+ecx*1],0x3
  420f85:	dec    ebp
  420f86:	dec    BYTE PTR [edx]
  420f88:	lahf   
  420f89:	movq   mm2,QWORD PTR [ebp+0x30143409]
  420f90:	mov    ebx,0xeba42c02
  420f95:	dec    ebp
  420f96:	je     0x421007
  420f98:	pop    esi
  420f99:	call   0x1e7:0xecd535b9
  420fa0:	mov    cl,0x73
  420fa2:	outs   dx,BYTE PTR ds:[esi]
  420fa3:	out    dx,al
  420fa4:	aaa    
  420fa5:	add    BYTE PTR [edi-0x622baf1d],0x85
  420fac:	daa    
  420fad:	jno    0x420f31
  420faf:	mov    edx,0x139790a9
  420fb4:	jp     0x421020
  420fb6:	ror    BYTE PTR [ecx-0x2596ae6c],cl
  420fbc:	test   BYTE PTR [esi+0x7b],0xca
  420fc0:	idiv   DWORD PTR [eax+0x1b7c672f]
  420fc6:	mov    ah,0xca
  420fc8:	sbb    DWORD PTR [edx-0x7f],ecx
  420fcb:	(bad)  
  420fcc:	repnz (bad) 
  420fce:	repz (bad) 
  420fd0:	and    al,0x8b
  420fd2:	leave  
  420fd3:	add    edi,DWORD PTR [ecx+ecx*8]
  420fd6:	aas    
  420fd7:	dec    eax
  420fd8:	pushf  
  420fd9:	int3   
  420fda:	cs js  0x420ff1
  420fdd:	adc    DWORD PTR [edx+ebp*2],edi
  420fe0:	idiv   BYTE PTR [esi]
  420fe2:	sub    DWORD PTR [edi+0x58],esp
  420fe5:	mov    ds:0x18584664,eax
  420fea:	scas   eax,DWORD PTR es:[edi]
  420feb:	dec    edx
  420fec:	ucomiss xmm6,DWORD PTR [edi+0x2d6d69bc]
  420ff3:	pop    ds
  420ff4:	xchg   BYTE PTR [esi+0x6d],ch
  420ff7:	es pop esp
  420ff9:	adc    esp,DWORD PTR [esi+esi*1+0x4b]
  420ffd:	inc    eax
  420ffe:	dec    eax
  420fff:	mov    eax,0x75b311f
  421004:	mov    ebx,0x749660b1
  421009:	xor    al,0xd4
  42100b:	ins    BYTE PTR es:[edi],dx
  42100c:	pop    edx
  42100d:	mov    eax,0x8eca43e0
  421012:	add    DWORD PTR [edi-0x6a],ecx
  421015:	xor    eax,0x49737640
  42101a:	pop    es
  42101b:	shl    ebx,0x2b
  42101e:	or     al,0x5f
  421020:	xchg   ebx,eax
  421021:	mov    dh,0x8c
  421023:	mov    edi,0x983612ab
  421028:	and    edx,ebp
  42102a:	sbb    al,al
  42102c:	mov    ah,0x10
  42102e:	(bad)  
  42102f:	mov    al,BYTE PTR [eax+0x41ef2d3b]
  421035:	imul   esp,DWORD PTR [ebx-0x25],0x24a0a083
  42103c:	inc    esp
  42103d:	and    BYTE PTR [esi],cl
  42103f:	push   0xffffffe9
  421041:	ja     0x421026
  421043:	aas    
  421044:	sbb    BYTE PTR [ebx+0x72],dl
  421047:	int    0xc9
  421049:	dec    ebp
  42104a:	and    bl,BYTE PTR [eax+0x7f86ec36]
  421050:	push   edi
  421051:	push   ecx
  421052:	iret   
  421053:	or     al,0x71
  421055:	rcl    DWORD PTR [esi],0x14
  421058:	(bad)  
  421059:	inc    ah
  42105b:	bnd jg 0x421095
  42105e:	sbb    al,0xa
  421060:	js     0x4210de
  421062:	in     al,dx
  421063:	lea    ebx,[esi]
  421065:	mov    al,0x7f
  421067:	(bad)  
  421068:	or     al,0x2b
  42106a:	and    al,0x55
  42106c:	js     0x4210d5
  42106e:	dec    ebx
  42106f:	lods   eax,DWORD PTR ds:[esi]
  421070:	sar    bh,cl
  421072:	(bad)  
  421073:	push   ebp
  421074:	mov    ah,0xc6
  421076:	mov    esi,0xd3f17730
  42107b:	stos   BYTE PTR es:[edi],al
  42107c:	enter  0x4e0c,0x9e
  421080:	xchg   ecx,eax
  421081:	pop    ebp
  421082:	retf   
  421083:	jmp    0x421076
  421085:	hlt    
  421086:	loopne 0x421028
  421088:	sbb    DWORD PTR [ecx],edi
  42108a:	sbb    bl,BYTE PTR [ebx+0x5cb82491]
  421090:	add    al,0x50
  421092:	push   ebp
  421093:	les    esi,FWORD PTR [esi+ebx*1]
	...
  4210a2:	mov    ebp,edx
  4210a4:	rcr    DWORD PTR [ebx],cl
  4210a6:	repz cmp ecx,ebx
  4210a9:	cli    
  4210aa:	in     al,dx
  4210ab:	jg     0x4210e4
  4210ad:	loopne 0x4210a0
  4210af:	mov    DWORD PTR [ebx-0x4a],ebp
  4210b2:	push   es
  4210b3:	test   DWORD PTR [ecx],eax
  4210b5:	add    BYTE PTR [ebx+eax*1],ch
  4210b8:	add    BYTE PTR [eax],al
  4210ba:	jp     0x42107c
  4210bc:	(bad)  
  4210bd:	cmp    DWORD PTR [ebp-0x7f],edx
  4210c0:	outs   dx,DWORD PTR ds:[esi]
  4210c1:	pushf  
  4210c2:	jl     0x421067
  4210c4:	out    0xbe,al
  4210c6:	imul   edi,esi,0xffffffb3
  4210c9:	jl     0x421084
  4210cb:	or     BYTE PTR [ecx],ch
  4210cd:	jge    0x42109f
  4210cf:	lds    ebp,FWORD PTR ds:0xa9b4e88a
  4210d5:	out    0xda,al
  4210d7:	jmp    0xb77b7937
  4210dc:	repnz cmc 
  4210de:	cmp    DWORD PTR [esp+edx*4],eax
  4210e1:	pop    eax
  4210e2:	lods   eax,DWORD PTR ds:[esi]
  4210e3:	or     ebp,DWORD PTR [edx+esi*1-0x3e7ff3fb]
  4210ea:	push   edx
  4210eb:	nop
  4210ec:	xor    BYTE PTR [edx+0x55],0x9a
  4210f0:	xlat   BYTE PTR ds:[ebx]
  4210f1:	or     al,0xcf
  4210f3:	shl    BYTE PTR [ebp+0x37492305],0xd9
  4210fa:	or     DWORD PTR [eax],0x1cfcaac
  421100:	or     bh,ah
  421102:	mov    al,0x17
  421104:	adc    edi,0xb75e46f3
  42110a:	jb     0x4210ae
  42110c:	add    al,0xa9
  42110e:	aas    
  42110f:	jp     0x42109c
  421111:	dec    eax
  421112:	push   es
  421113:	das    
  421114:	xor    ebx,DWORD PTR [edx-0x68e300fa]
  42111a:	cmp    DWORD PTR [edi+eax*1-0x34],0xf875a26e
  421122:	pop    ebx
  421123:	xchg   edx,eax
  421124:	(bad)  
  421125:	out    0x9f,al
  421127:	fmulp  st(5),st
  421129:	arpl   WORD PTR [esi-0x68d27daa],bp
  42112f:	mov    DWORD PTR [ebp+0x7a4e423f],edi
  421135:	mov    ds,WORD PTR [ebx-0x76]
  421138:	adc    al,0xa1
  42113a:	push   ds
  42113b:	mov    al,0x5d
  42113d:	aad    0xa3
  42113f:	dec    eax
  421140:	push   ebx
  421141:	aam    0x42
  421143:	imul   esp,DWORD PTR [edx+0xef25070],0x49683ce5
  42114d:	adc    al,0x1f
  42114f:	dec    eax
  421150:	dec    ecx
  421151:	inc    edi
  421152:	xor    al,BYTE PTR [esi]
  421154:	cmp    al,0xcb
  421156:	mov    BYTE PTR [edx],ch
  421158:	sbb    cl,ch
  42115a:	sti    
  42115b:	inc    ecx
  42115c:	ins    BYTE PTR es:[edi],dx
  42115d:	sub    eax,0x6508600a
  421162:	push   edx
  421163:	mov    bl,0xfa
  421165:	sbb    ah,dl
  421167:	xchg   edx,eax
  421168:	leave  
  421169:	loop   0x42116f
  42116b:	dec    ebp
  42116c:	sub    BYTE PTR [edx-0x674694a9],al
  421172:	rcl    BYTE PTR [edi+0x52],cl
  421175:	mov    DWORD PTR [edx-0x2c20b79c],eax
  42117b:	ins    DWORD PTR es:[edi],dx
  42117c:	(bad)  
  42117d:	cs das 
  42117f:	xor    ah,BYTE PTR ds:0x67bdb80f
  421186:	inc    ecx
  421187:	std    
  421188:	mov    ds:0x7f3257df,al
  42118d:	sub    DWORD PTR [edi],0x17
  421190:	adc    cl,BYTE PTR [edx+0x24]
  421193:	dec    ebp
  421194:	xchg   ebp,eax
  421195:	cwde   
  421196:	loope  0x4211b9
  421198:	int3   
  421199:	into   
  42119a:	pop    edi
  42119b:	lea    eax,gs:[ecx]
  42119e:	cs jbe 0x4211a4
  4211a1:	xchg   ebp,eax
  4211a2:	sti    
  4211a3:	jmp    0x2cc6:0x6c354d1c
  4211aa:	pop    ebx
  4211ab:	popa   
  4211ac:	pop    ss
  4211ad:	push   edx
  4211ae:	in     al,dx
  4211af:	inc    ecx
  4211b0:	pop    edx
  4211b1:	xchg   eax,eax
  4211b3:	sti    
  4211b4:	pop    edx
  4211b5:	jnp    0x421190
  4211b7:	and    bh,BYTE PTR [ecx]
  4211b9:	data16 stc 
  4211bb:	out    dx,al
  4211bc:	out    dx,eax
  4211bd:	sub    BYTE PTR [ebp+esi*8+0x1],dh
  4211c1:	mov    dh,0x40
  4211c3:	cmp    eax,0xd2c59a90
  4211c8:	mov    ds:0x32b81713,al
  4211cd:	push   ecx
  4211ce:	ret    0xa370
  4211d1:	daa    
  4211d2:	lea    edi,[ebx-0x3f260ee4]
  4211d8:	fwait
  4211d9:	out    dx,eax
  4211da:	xor    esp,eax
  4211dc:	dec    esi
  4211dd:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4211df:	inc    esp
  4211e0:	stc    
  4211e1:	xor    bh,BYTE PTR [edi]
  4211e3:	or     eax,0x67594219
  4211e8:	and    ch,BYTE PTR ds:[ebx+eax*4-0x25761243]
  4211f0:	dec    edi
  4211f1:	das    
  4211f2:	pop    edi
  4211f3:	sbb    BYTE PTR [ebx+eax*2+0x5b53aa94],bl
  4211fa:	fld    DWORD PTR [edx-0x57]
  4211fd:	fcos   
  4211ff:	into   
  421200:	fidivr WORD PTR [esi+eiz*4+0x40a0184c]
  421207:	inc    ecx
  421208:	sub    DWORD PTR [edx-0x40],edx
  42120b:	lock and al,0x32
  42120e:	xchg   ebp,eax
  42120f:	fnstsw WORD PTR [ebx]
  421211:	popaw  
  421213:	hlt    
  421214:	(bad)  [edx-0x3e]
  421217:	lea    ebx,[ebp+0x9f896b3]
  42121d:	pop    ebp
  42121e:	inc    eax
  42121f:	dec    ebx
  421220:	out    0x74,al
  421222:	cmove  esi,DWORD PTR [ebx+0x56]
  421226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421227:	es push eax
  421229:	dec    esp
  42122a:	sub    ch,BYTE PTR [ebx]
  42122c:	jmp    0xca38799c
  421231:	and    DWORD PTR [edi],esi
  421233:	sbb    al,0x93
  421235:	test   eax,0xf789ed77
  42123a:	stos   BYTE PTR es:[edi],al
  42123b:	add    eax,0xee8b1042
  421240:	(bad)  
  421241:	cli    
  421242:	scas   eax,DWORD PTR es:[edi]
  421243:	gs cdq 
  421245:	add    dl,BYTE PTR [eax]
  421247:	js     0x4211fd
  421249:	pop    ebx
  42124a:	sub    al,0x94
  42124c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42124d:	mov    ecx,DWORD PTR [edi+0x62766262]
  421253:	test   al,0xa5
  421255:	lahf   
  421256:	pop    esp
  421257:	cmp    esp,DWORD PTR [eax]
  421259:	adc    al,0x66
  42125b:	in     eax,0x81
  42125d:	adc    BYTE PTR [eax],ah
  42125f:	inc    esp
  421260:	jbe    0x4212cf
  421262:	(bad)  
  421263:	sub    al,0xce
  421265:	push   cs
  421266:	sar    DWORD PTR [ebx-0x7],cl
  421269:	jnp    0x42125e
  42126b:	push   esp
  42126c:	repz test eax,0x24d239e8
  421272:	jge    0x4212bb
  421274:	push   ebx
  421275:	ja     0x421283
  421277:	fwait
  421278:	jmp    0x4212d7
  42127a:	and    dl,BYTE PTR [edi-0x6b7d8fba]
  421280:	push   es
  421281:	pop    es
  421282:	and    ah,BYTE PTR [ebx+0x61aa11e0]
  421288:	sbb    eax,0xcc64006e
  42128d:	sub    al,0x4f
  42128f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421290:	arpl   WORD PTR [esi],bp
  421292:	ins    BYTE PTR es:[edi],dx
  421293:	mov    ds:0x51e69722,al
  421298:	test   al,ch
  42129a:	clc    
  42129b:	inc    esi
  42129c:	xchg   edi,eax
  42129d:	xchg   ebp,eax
  42129e:	mov    ds:0xaff1c23b,eax
  4212a3:	xor    BYTE PTR [ecx],0x37
  4212a6:	lock mov ebp,0xcae5d23a
  4212ac:	push   ebp
  4212ad:	sub    eax,DWORD PTR [eax+0x78879b6]
  4212b3:	ins    BYTE PTR es:[edi],dx
  4212b4:	(bad)  
  4212b5:	xor    bl,BYTE PTR [esp+eax*8-0x49]
  4212b9:	pop    edi
  4212ba:	and    al,0x37
  4212bc:	inc    eax
  4212bd:	dec    ebx
  4212be:	call   0xe44e14ac
  4212c3:	nop
  4212c4:	pop    ds
  4212c5:	pop    edi
  4212c6:	shl    BYTE PTR [ebx+0x3047ee88],0x71
  4212cd:	dec    eax
  4212ce:	lds    edx,FWORD PTR [edx-0x66498733]
  4212d4:	in     al,dx
  4212d5:	test   DWORD PTR [edi-0x49795f20],0x8d607883
  4212df:	jp     0x421302
  4212e1:	stos   DWORD PTR es:[edi],eax
  4212e2:	stos   BYTE PTR es:[edi],al
  4212e3:	pop    edx
  4212e4:	rcr    BYTE PTR [eax+ebp*1],1
  4212e7:	std    
  4212e8:	jno    0x4212ed
  4212ea:	adc    esi,esi
  4212ec:	repz jno 0x4212ef
  4212ef:	call   0xbb7fb220
  4212f4:	push   edx
  4212f5:	jmp    0x6a36:0xff9cbb8d
  4212fc:	in     al,dx
  4212fd:	inc    ebx
  4212fe:	rol    DWORD PTR [eax+esi*4],1
  421301:	ror    eax,cl
  421303:	cli    
  421304:	mov    edx,0xaa344214
  421309:	pop    ss
  42130a:	mov    bh,0xb7
  42130c:	dec    eax
  42130d:	aas    
  42130e:	push   ss
  42130f:	sbb    DWORD PTR [esi-0x6c],ebp
  421312:	aaa    
  421313:	fisub  DWORD PTR [ecx+0x4a9813a0]
  421319:	and    ah,BYTE PTR [esi-0x71]
  42131c:	fldenv [edx]
  42131e:	or     DWORD PTR [eax-0x79],0xfffffff0
  421322:	fiadd  WORD PTR [ebp+ebx*2+0x77]
  421326:	icebp  
  421327:	cmp    bl,BYTE PTR [edi+edi*4]
  42132a:	scas   al,BYTE PTR es:[edi]
  42132b:	ds push ds
  42132d:	pop    es
  42132e:	popf   
  42132f:	rcr    DWORD PTR [esi-0x6bde1b5c],1
  421335:	sbb    al,0xf7
  421337:	jo     0x4212d6
  421339:	push   ebx
  42133a:	test   eax,0x9b13e525
  42133f:	cmp    ebp,eax
  421341:	test   DWORD PTR [edx],edi
  421343:	sub    eax,0x9e215e6a
  421348:	jmp    0x47c5:0xcf965571
  42134f:	sbb    al,0x4f
  421351:	jecxz  0x421390
  421353:	mov    eax,0x55d52e0c
  421358:	fadd   QWORD PTR [eax+0x7b65ac58]
  42135e:	clc    
  42135f:	dec    edi
  421360:	imul   BYTE PTR ds:0x712cbf2
  421366:	(bad)  
  421367:	lea    ebx,[eax-0x4]
  42136a:	sub    DWORD PTR [esi+0x25],esi
  42136d:	add    DWORD PTR [edx+ecx*8+0x37087ac],0x6e0d419d
  421378:	stc    
  421379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42137a:	ins    BYTE PTR es:[edi],dx
  42137b:	clc    
  42137c:	inc    esi
  42137d:	in     al,0x1c
  42137f:	mov    cx,0x6231
  421383:	out    dx,eax
  421384:	addr16 inc edi
  421386:	push   0x96ebe17c
  42138b:	inc    ecx
  42138c:	push   0xccb8656d
  421391:	mov    ecx,0xf0f00bf6
  421396:	(bad)  
  421397:	mov    ebp,0xfc9e2813
  42139c:	push   esi
  42139d:	sub    al,0x12
  42139f:	je     0x4213bd
  4213a1:	push   edx
  4213a2:	pop    esp
  4213a3:	cmovae esi,DWORD PTR [eax+0x7930dbba]
  4213aa:	ficomp WORD PTR [ebp-0x80]
  4213ad:	dec    esi
  4213ae:	sbb    eax,0x4104ef2
  4213b3:	outs   dx,DWORD PTR ds:[esi]
  4213b4:	xor    esi,DWORD PTR [ebp-0x6cebdcaa]
  4213ba:	jge    0x421405
  4213bc:	mov    eax,ds:0xae6d502f
  4213c1:	enter  0x5781,0x9c
  4213c5:	imul   esi,DWORD PTR [esi-0x3bdc5593],0x3a3e3d27
  4213cf:	in     eax,0x6e
  4213d1:	in     al,dx
  4213d2:	in     al,dx
  4213d3:	xlat   BYTE PTR ds:[ebx]
  4213d4:	loopne 0x421387
  4213d6:	js     0x4213fc
  4213d8:	jge    0x421428
  4213da:	xor    eax,edi
  4213dc:	lock sahf 
  4213de:	scas   al,BYTE PTR es:[edi]
  4213df:	mov    dh,0x2
  4213e1:	add    esp,esi
  4213e3:	and    bl,BYTE PTR [eax+eiz*8+0x0]
	...
  4213f2:	shl    BYTE PTR [edx],cl
  4213f4:	xchg   esi,eax
  4213f5:	call   0x1e52:0x6adebef6
  4213fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213fd:	and    bl,dl
  4213ff:	pop    ecx
  421400:	test   BYTE PTR [edx],0x32
  421403:	mov    BYTE PTR [ecx],al
  421405:	add    BYTE PTR [ebx+eax*1],ch
  421408:	add    BYTE PTR [eax],al
  42140a:	mov    edi,DWORD PTR [ecx]
  42140c:	or     eax,0xa7ffb3fa
  421411:	(bad)  
  421412:	out    0xe1,eax
  421414:	mov    esp,0xc473706f
  421419:	adc    eax,0xdc5e5b5
  42141e:	(bad)  
  42141f:	push   edi
  421420:	gs jbe 0x42148e
  421423:	lds    edx,FWORD PTR cs:[ebx]
  421426:	lods   al,BYTE PTR ds:[esi]
  421427:	inc    edi
  421428:	shl    BYTE PTR [ecx+ecx*1],cl
  42142b:	clc    
  42142c:	inc    edi
  42142d:	cli    
  42142e:	loope  0x421426
  421430:	hlt    
  421431:	push   edi
  421432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421433:	cld    
  421434:	jg     0x4213df
  421436:	mov    dl,0xec
  421438:	enter  0x22f,0xc8
  42143c:	sbb    bl,BYTE PTR [ebx-0x6d3a3c67]
  421442:	(bad)  
  421443:	adc    eax,0x1503031a
  421448:	xchg   eax,ebp
  42144a:	hlt    
  42144b:	sub    bh,dh
  42144d:	scas   al,BYTE PTR es:[edi]
  42144e:	ficom  DWORD PTR [edi]
  421450:	jmp    0x4214cc
  421452:	test   BYTE PTR [ecx*2-0x2f747786],cl
  421459:	scas   al,BYTE PTR es:[edi]
  42145a:	imul   edi,DWORD PTR [ebp+0x27972e21],0x2b
  421461:	or     DWORD PTR [eax+0x427d2f39],ebx
  421467:	lock icebp 
  421469:	xchg   ebx,eax
  42146a:	cmp    eax,0xbbcc76e
  42146f:	jl     0x421483
  421471:	aaa    
  421472:	(bad)  
  421473:	jmp    0x3006:0xb8861a8b
  42147a:	shl    BYTE PTR [ebp-0x3b],0xea
  42147e:	lock lods eax,DWORD PTR es:[esi]
  421481:	imul   esp,DWORD PTR [ecx-0x6],0x36a97dce
  421488:	mov    dh,0x67
  42148a:	in     al,0xb9
  42148c:	add    DWORD PTR [ebp-0x20995c60],0xbb2c2978
  421496:	fisttp QWORD PTR [ecx]
  421498:	mov    dl,0x74
  42149a:	xor    eax,edx
  42149c:	lea    edx,[esp+ecx*8+0x2fd12083]
  4214a3:	dec    ecx
  4214a4:	jmp    0x469f534
  4214a9:	or     al,0x5a
  4214ab:	mov    ds:0xe3416e03,al
  4214b0:	in     eax,dx
  4214b1:	xchg   edi,eax
  4214b2:	and    bl,BYTE PTR [ecx+0x46cf271e]
  4214b8:	jmp    0xde8b1a98
  4214bd:	outs   dx,BYTE PTR ds:[esi]
  4214be:	je     0x42147a
  4214c0:	out    0x9,eax
  4214c2:	add    DWORD PTR [edi-0x4b15c852],ecx
  4214c8:	sub    BYTE PTR [ebx-0x2c],cl
  4214cb:	test   BYTE PTR [ecx-0x25],0xe5
  4214cf:	xchg   edx,eax
  4214d0:	repnz repz mov ebp,0x97b7bd65
  4214d7:	xor    edi,edi
  4214d9:	sar    DWORD PTR [esi],cl
  4214db:	or     edi,DWORD PTR [ecx]
  4214dd:	inc    esi
  4214de:	and    DWORD PTR [edx+0x7cc6db1f],edi
  4214e4:	or     ebx,edi
  4214e6:	mov    dl,0x5b
  4214e8:	mov    esp,0x482e7c32
  4214ed:	dec    ebp
  4214ee:	add    eax,0x478b77cb
  4214f3:	call   0x87d7:0xb7929e29
  4214fa:	mov    dh,0x67
  4214fc:	push   0x39db79c0
  421501:	ret    
  421502:	adc    BYTE PTR [edx+0x2e5a1dfa],0x75
  421509:	push   esi
  42150a:	cmp    dl,bl
  42150c:	push   cs
  42150d:	es stc 
  42150f:	fwait
  421510:	shl    bh,cl
  421512:	push   ebx
  421513:	cdq    
  421514:	mov    ds:0x1369a110,eax
  421519:	or     ah,bh
  42151b:	enter  0xb5b9,0x84
  42151f:	push   ebx
  421520:	jae    0x4214ce
  421522:	in     al,0x3c
  421524:	aaa    
  421525:	jecxz  0x4214ab
  421527:	bound  edi,QWORD PTR [ebp-0x44]
  42152a:	lods   eax,DWORD PTR ds:[esi]
  42152b:	(bad)  
  42152c:	pop    esp
  42152d:	ja     0x421527
  42152f:	cs or  al,0x58
  421532:	imul   edx,DWORD PTR [edx+0x1e799994],0xffffffce
  421539:	sbb    BYTE PTR [eax+0x546a76f7],al
  42153f:	inc    esi
  421540:	pushf  
  421541:	cmp    al,0xe4
  421543:	and    DWORD PTR [ecx],0x18a2f036
  421549:	dec    ecx
  42154a:	add    edx,DWORD PTR [eax+0x2f08b459]
  421550:	idiv   DWORD PTR [eax]
  421552:	push   eax
  421553:	je     0x42154b
  421555:	iret   
  421556:	dec    esp
  421557:	in     al,dx
  421558:	cmp    DWORD PTR [edi],0xec1e2728
  42155e:	mov    BYTE PTR [eax+0x23b69527],dl
  421564:	jb     0x42156e
  421566:	lods   eax,DWORD PTR ds:[esi]
  421567:	(bad)  
  421568:	pop    edi
  421569:	bound  ecx,QWORD PTR [edi+0x7a]
  42156c:	leave  
  42156d:	in     al,0xe2
  42156f:	push   esi
  421570:	mov    bh,0xa0
  421572:	ret    0x52eb
  421575:	xor    eax,0x32d528b
  42157a:	mov    BYTE PTR [ecx],al
  42157c:	(bad)  
  42157d:	sbb    BYTE PTR [eax*1-0x6d4cee2a],bl
  421584:	in     eax,0x29
  421586:	fild   WORD PTR [ebp+edi*2-0x1a]
  42158a:	xor    eax,0xe71b269b
  42158f:	inc    ebx
  421590:	mov    edx,0xb05bb73f
  421595:	iret   
  421596:	pushf  
  421597:	push   esi
  421598:	inc    eax
  421599:	mov    ds:0x97322d,eax
  42159e:	mov    cl,0xe8
  4215a0:	or     al,0x6a
  4215a2:	dec    edx
  4215a3:	int3   
  4215a4:	dec    edi
  4215a5:	adc    al,0x7a
  4215a7:	jmp    0x921a05b
  4215ac:	sbb    DWORD PTR [ebx],eax
  4215ae:	gs test eax,0x37cb91b3
  4215b4:	loopne 0x421562
  4215b6:	cmp    al,0x2f
  4215b8:	pop    es
  4215b9:	test   al,0x7f
  4215bb:	das    
  4215bc:	sub    al,0x22
  4215be:	ror    ecx,0xad
  4215c1:	or     eax,0xa5c268b1
  4215c6:	mov    cl,0xab
  4215c8:	inc    eax
  4215c9:	ficom  DWORD PTR [edx+esi*1+0x41]
  4215cd:	in     eax,0x88
  4215cf:	mov    WORD PTR ss:[edx],es
  4215d2:	push   cs
  4215d3:	cmp    BYTE PTR [esi+0x4c52971b],al
  4215d9:	shr    ecx,1
  4215db:	stc    
  4215dc:	rol    esi,cl
  4215de:	xchg   esi,eax
  4215df:	in     al,0xd7
  4215e1:	mov    ecx,0x12d466f9
  4215e6:	outs   dx,BYTE PTR ds:[esi]
  4215e7:	lds    ecx,FWORD PTR [edx-0x258cbe89]
  4215ed:	mov    al,0xf7
  4215ef:	push   ds
  4215f0:	jae    0x421603
  4215f2:	ds add eax,0x7838e538
  4215f8:	arpl   WORD PTR [ecx],bp
  4215fa:	loop   0x421649
  4215fc:	sbb    BYTE PTR [ecx],ah
  4215fe:	xchg   edx,eax
  4215ff:	out    dx,eax
  421600:	fidivr WORD PTR [eax+ecx*8-0xe]
  421604:	and    al,bh
  421606:	sub    esp,eax
  421608:	adc    al,0x1d
  42160a:	fbstp  TBYTE PTR ds:0x2e0aa45a
  421610:	mov    eax,0x5237095b
  421615:	pop    esi
  421616:	mov    ebp,0xffe27ec4
  42161b:	adc    BYTE PTR [ebx-0x50c6f8a6],bh
  421621:	jge    0x421605
  421623:	stos   DWORD PTR es:[edi],eax
  421624:	or     BYTE PTR [ecx+0x7d],al
  421627:	pop    edx
  421628:	or     ch,cl
  42162a:	add    ecx,DWORD PTR [edi+eax*1]
  42162d:	out    dx,al
  42162e:	mov    cl,BYTE PTR [esi]
  421630:	push   edi
  421631:	sub    ch,dh
  421633:	lea    eax,[esi+0x21]
  421636:	je     0x421671
  421638:	cld    
  421639:	imul   ecx,DWORD PTR [ebx],0x4230ec3e
  42163f:	jnp    0x4216be
  421641:	pop    edx
  421642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421643:	or     ah,dl
  421645:	fiadd  DWORD PTR [esi+0x59]
  421648:	loopne 0x4216a9
  42164a:	scas   eax,DWORD PTR es:[edi]
  42164b:	mov    bl,BYTE PTR [eax]
  42164d:	mov    ecx,0x9a473f58
  421652:	adc    bh,BYTE PTR ds:0x26da89e0
  421658:	sub    al,0x52
  42165a:	push   ss
  42165b:	mov    eax,ds:0x659a97e0
  421660:	jo     0x421654
  421662:	pop    edi
  421663:	js     0x4216b6
  421665:	cmp    dl,BYTE PTR [ebx-0x71a94bc8]
  42166b:	fcomp  QWORD PTR gs:[ecx+0x24]
  42166f:	push   eax
  421670:	cli    
  421671:	aaa    
  421672:	mov    ds:0xd21039ac,eax
  421677:	into   
  421678:	xor    DWORD PTR [ebx+0x31],esp
  42167b:	jl     0x421653
  42167d:	pop    ss
  42167e:	imul   eax,edx,0xffffffb5
  421681:	pop    ecx
  421682:	sub    eax,0x2bf93391
  421687:	pop    ecx
  421689:	add    al,0x73
  42168b:	dec    edx
  42168c:	jmp    0xb1c486f6
  421691:	addr16 jb 0x4216cb
  421694:	out    dx,al
  421695:	std    
  421696:	dec    al
  421698:	adc    DWORD PTR [ecx-0xbcf7068],0x4b
  42169f:	dec    edi
  4216a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216a1:	pop    es
  4216a2:	pop    ecx
  4216a3:	sahf   
  4216a4:	fistp  WORD PTR [ecx-0x39]
  4216a7:	push   ecx
  4216a8:	test   al,0x45
  4216aa:	std    
  4216ab:	addr16 leave 
  4216ad:	inc    edx
  4216ae:	sub    eax,0x2f49e402
  4216b3:	shl    BYTE PTR [ecx],0x2a
  4216b6:	inc    eax
  4216b7:	jg     0x4216db
  4216b9:	xchg   edi,eax
  4216ba:	or     eax,0x30d2ea4f
  4216bf:	add    eax,0xf62ab8b3
  4216c4:	clc    
  4216c5:	mov    ch,0x4f
  4216c7:	or     eax,0x62fba190
  4216cc:	retf   
  4216cd:	jnp    0x421652
  4216cf:	mov    WORD PTR [edx],?
  4216d1:	pop    ebx
  4216d2:	cmp    ah,BYTE PTR [esi]
  4216d4:	xor    eax,0x52c41c67
  4216d9:	loope  0x4216d1
  4216db:	adc    al,BYTE PTR [edi-0x7a85cd83]
  4216e1:	jg     0x42168b
  4216e3:	loope  0x421752
  4216e5:	adc    DWORD PTR [edx-0x15dda78b],ebp
  4216eb:	add    BYTE PTR [ecx+0x9],dl
  4216ee:	and    eax,DWORD PTR ds:0x59862909
  4216f4:	cld    
  4216f5:	xor    ecx,DWORD PTR [edi]
  4216f7:	xchg   ebp,eax
  4216f8:	sbb    ah,BYTE PTR [ebx]
  4216fa:	test   eax,0x58bc64a
  4216ff:	push   es
  421700:	jae    0x421757
  421702:	mov    cl,0x8a
  421704:	sbb    al,0x30
  421706:	dec    esp
  421707:	jbe    0x421775
  421709:	popf   
  42170a:	daa    
  42170b:	mov    dl,0x5c
  42170d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42170e:	fistp  WORD PTR [edx]
  421710:	mov    ?,ecx
  421712:	cwde   
  421713:	pop    ss
  421714:	and    BYTE PTR [edi],bh
  421716:	test   DWORD PTR ds:[ebx+0xa0113e9],ebp
  42171d:	call   0xea18:0x56ab0d2c
  421724:	mov    ch,0x37
  421726:	popf   
  421727:	mov    ds:0xddad9409,eax
  42172c:	inc    ecx
  42172d:	push   esp
  42172e:	cmp    ebp,edi
  421730:	test   BYTE PTR ds:0xfb83edbf,al
	...
  421742:	fnstsw WORD PTR [edi+ecx*4]
  421745:	mov    esp,0x7dffbfef
  42174a:	add    al,BYTE PTR [ebp+0x59458dc1]
  421750:	jle    0x4216d4
  421752:	pop    esi
  421753:	mov    eax,DWORD PTR [ecx]
  421755:	add    BYTE PTR [ebx+eax*1],ch
  421758:	add    BYTE PTR [eax],al
  42175a:	punpcklbw mm3,DWORD PTR [esp+ecx*4-0x2]
  42175f:	test   DWORD PTR [ecx-0x17],esi
  421762:	jmp    0x4c5b:0x6c57ca8c
  421769:	and    eax,0x6d1a50d9
  42176e:	push   eax
  42176f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421770:	icebp  
  421771:	dec    eax
  421772:	mov    ebx,0xfcca79c4
  421777:	inc    edi
  421778:	icebp  
  421779:	ffreep st(3)
  42177b:	nop
  42177c:	leave  
  42177d:	xchg   ecx,eax
  42177e:	call   0xfae3f95e
  421783:	pop    esi
  421784:	jl     0x421780
  421786:	mov    ecx,0xe54de054
  42178b:	je     0x421795
  42178d:	pusha  
  42178e:	or     dh,BYTE PTR [edx+0x5edb1510]
  421794:	daa    
  421795:	cmp    eax,0x91372f7
  42179a:	mov    eax,ds:0xdb3bc564
  42179f:	add    DWORD PTR [ecx-0x70],esi
  4217a2:	out    dx,eax
  4217a3:	and    DWORD PTR [ebx-0x341e94ac],edx
  4217a9:	ss pop ebp
  4217ab:	inc    eax
  4217ac:	push   ss
  4217ad:	cmp    al,0xbf
  4217af:	mov    dh,0xf4
  4217b1:	push   ebp
  4217b2:	dec    esp
  4217b3:	dec    ebp
  4217b4:	jo     0x421829
  4217b6:	adc    bl,dh
  4217b8:	fcomp  QWORD PTR [ebx-0x2c]
  4217bb:	fwait
  4217bc:	inc    ebx
  4217bd:	dec    ebx
  4217be:	sar    DWORD PTR [edx-0x6a4d9809],0xac
  4217c5:	test   BYTE PTR [ebx-0x6d],cl
  4217c8:	stos   BYTE PTR es:[edi],al
  4217c9:	mov    dh,0x76
  4217cb:	pop    ebp
  4217cc:	shl    ebx,0x24
  4217cf:	xor    DWORD PTR [ebx+0x7e],0xffffffcd
  4217d3:	(bad)  [ecx-0x4018d9ed]
  4217d9:	in     al,0x52
  4217db:	enter  0xe788,0x10
  4217df:	clc    
  4217e0:	fnsave [ebx+0x10]
  4217e3:	and    eax,0xdf31c61a
  4217e8:	mov    DWORD PTR [eax],ebp
  4217ea:	mov    ebx,cs
  4217ec:	inc    edi
  4217ed:	clc    
  4217ee:	lds    eax,FWORD PTR [edi+0x60]
  4217f1:	jle    0x421825
  4217f3:	add    eax,DWORD PTR [ebp-0x1a8e8c57]
  4217f9:	and    BYTE PTR [eax-0x35],ah
  4217fc:	repnz iret 
  4217fe:	mov    ?,WORD PTR [ecx]
  421800:	jp     0x421824
  421802:	add    al,0x67
  421804:	mov    bh,0x8a
  421806:	cmp    al,0x5e
  421808:	mov    bh,0x44
  42180a:	fimul  DWORD PTR [ecx+0x5b]
  42180d:	sub    BYTE PTR [esi+0x5a],ah
  421810:	lock sub dl,BYTE PTR [eax-0x51300413]
  421817:	sub    al,0x39
  421819:	fstp   DWORD PTR [eax+0x38]
  42181c:	clc    
  42181d:	iret   
  42181e:	jb     0x42183d
  421820:	add    BYTE PTR [esi],cl
  421822:	push   0x20
  421824:	cmc    
  421825:	in     al,0xc8
  421827:	pop    ebp
  421828:	and    al,BYTE PTR [ecx+0x22]
  42182b:	pushf  
  42182c:	loopne 0x4217c4
  42182e:	push   ebx
  42182f:	js     0x42181d
  421831:	jg     0x42182e
  421833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421834:	shl    DWORD PTR [ebp-0xf],0x1d
  421838:	in     eax,dx
  421839:	adc    DWORD PTR [ebp+0x3db8b13c],edx
  42183f:	xorps  xmm4,XMMWORD PTR [ebp-0x73]
  421843:	or     DWORD PTR [esi],ebp
  421845:	stc    
  421846:	mov    ds:0x4750f796,eax
  42184b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42184c:	pop    ss
  42184d:	dec    ebp
  42184e:	ds fwait
  421850:	jle    0x42186b
  421852:	pop    es
  421853:	sbb    DWORD PTR [edx+0x58e98e75],eax
  421859:	pop    edx
  42185a:	sahf   
  42185b:	in     eax,0x51
  42185d:	jp     0x42188b
  42185f:	cdq    
  421860:	lahf   
  421861:	xor    BYTE PTR [ebp+0x58],0xdf
  421865:	add    ebp,0x62f5d5e1
  42186b:	(bad)  
  42186d:	lds    edx,FWORD PTR [eax-0x18e291e3]
  421873:	ja     0x421805
  421875:	retf   0x9601
  421878:	push   esp
  421879:	ret    0x3c81
  42187c:	inc    edx
  42187d:	cmp    dl,BYTE PTR [ebp-0x1fb891ec]
  421883:	dec    eax
  421884:	sbb    cl,dl
  421886:	mov    ebx,0x23b5d71d
  42188b:	mov    ch,BYTE PTR [edi-0x2d6e8bf3]
  421891:	mov    al,ds:0xc07be04c
  421896:	cli    
  421897:	push   esp
  421898:	sbb    eax,0xbc6f18b6
  42189d:	jge    0x4218dd
  42189f:	mov    eax,0x5d6346db
  4218a4:	adc    al,BYTE PTR [ebp+0x42261abf]
  4218aa:	pop    es
  4218ab:	jp     0x4218c4
  4218ad:	xor    edx,DWORD PTR [edi+0x395d1316]
  4218b3:	push   0x1a
  4218b5:	inc    edx
  4218b6:	mov    dl,0x77
  4218b8:	aas    
  4218b9:	xlat   BYTE PTR ds:[ebx]
  4218ba:	and    BYTE PTR [ebp+0x69],0x25
  4218be:	push   cs
  4218bf:	or     BYTE PTR [esi+0x67],ch
  4218c2:	and    DWORD PTR [esi+edi*4],0x20
  4218c6:	fimul  DWORD PTR [eax+0x926140f]
  4218cc:	cmp    eax,0x8ea24678
  4218d1:	es retf 0x43d9
  4218d5:	cmp    BYTE PTR ds:0xa8eae423,ah
  4218db:	fsubr  DWORD PTR [eax+0x120ffe40]
  4218e1:	cld    
  4218e2:	ins    BYTE PTR es:[edi],dx
  4218e3:	data16 add al,BYTE PTR [edx+0x475b7185]
  4218ea:	test   al,0x4d
  4218ec:	out    dx,al
  4218ed:	lahf   
  4218ee:	mov    al,ds:0x88c72dd
  4218f3:	mov    WORD PTR [eax-0x28e07d63],fs
  4218f9:	mov    gs:0xcdb58397,al
  4218ff:	cmp    al,BYTE PTR [ecx-0x15]
  421902:	inc    esp
  421903:	push   es
  421904:	and    BYTE PTR [ecx],ch
  421906:	clc    
  421907:	xor    al,0x39
  421909:	leave  
  42190a:	jae    0x4218bc
  42190c:	idiv   edx
  42190e:	jge    0x42193e
  421910:	ror    BYTE PTR ds:0xba5c6262,cl
  421916:	fld    st(7)
  421918:	push   ebp
  421919:	shr    esp,cl
  42191b:	inc    edi
  42191c:	jo     0x42196c
  42191e:	jecxz  0x4218ec
  421920:	js     0x4218e9
  421922:	mov    al,ds:0x4188be04
  421927:	cmc    
  421928:	retf   0x55e2
  42192b:	mov    bx,0x2fa1
  42192f:	in     al,dx
  421930:	jnp    0x4218d0
  421932:	ror    BYTE PTR [ecx-0xa],1
  421935:	call   0xae0e3513
  42193a:	clc    
  42193b:	rcr    bl,0xde
  42193e:	mov    bl,0x21
  421940:	sub    eax,0x6005db7d
  421945:	cmp    al,dh
  421947:	sub    dh,ch
  421949:	inc    esi
  42194a:	push   eax
  42194b:	das    
  42194c:	push   ds
  42194d:	fadd   st(3),st
  42194f:	pushf  
  421950:	mov    DWORD PTR [ecx+0xa],edi
  421953:	imul   edx,DWORD PTR [eax+0x3b6a534],0x68d04f18
  42195d:	cmp    BYTE PTR [ebx],0xeb
  421960:	int3   
  421961:	lock and DWORD PTR [eax+0x47],esi
  421965:	in     eax,dx
  421966:	loop   0x421974
  421968:	test   ebp,eax
  42196a:	and    cl,BYTE PTR [eax+0x9]
  42196d:	add    al,0xa0
  42196f:	lods   eax,DWORD PTR ds:[esi]
  421970:	cwde   
  421971:	aam    0xb8
  421973:	or     DWORD PTR [ebx+0x6eb2bc83],ebx
  421979:	pop    edi
  42197a:	xchg   esp,eax
  42197b:	jno    0x42196c
  42197d:	or     DWORD PTR [eax],ebx
  42197f:	dec    esi
  421980:	xor    DWORD PTR [ebp+0x761d6362],ebx
  421986:	sub    al,BYTE PTR [edx-0x285606cc]
  42198c:	adc    BYTE PTR [edx-0x4ff13ef9],bh
  421992:	(bad)  [ebx-0x52e70b94]
  421998:	retf   0xfff2
  42199b:	cwde   
  42199c:	fiadd  DWORD PTR [edx+0x2c]
  42199f:	mov    ebp,0x7848abfa
  4219a4:	jo     0x421a1b
  4219a6:	jno    0x4219af
  4219a8:	dec    ebp
  4219a9:	sbb    al,0xed
  4219ab:	xchg   BYTE PTR [eax+0x35],bh
  4219ae:	enter  0x1ee6,0x0
  4219b2:	out    dx,al
  4219b3:	popf   
  4219b4:	push   cs
  4219b5:	ins    DWORD PTR es:[edi],dx
  4219b6:	dec    esi
  4219b7:	iret   
  4219b8:	lods   al,BYTE PTR ds:[esi]
  4219b9:	xchg   ebp,eax
  4219ba:	mov    ecx,0x77d5b566
  4219bf:	enter  0x77fd,0xa7
  4219c3:	sub    esp,edx
  4219c5:	mov    ch,0xdc
  4219c7:	mov    edi,0xdc5f199
  4219cc:	stos   BYTE PTR es:[edi],al
  4219cd:	dec    ebp
  4219ce:	xor    eax,DWORD PTR [esi-0x4e393450]
  4219d4:	and    al,0xda
  4219d6:	jge    0x421966
  4219d8:	or     eax,0xcd6d9e6
  4219dd:	out    0x6a,al
  4219df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219e0:	or     al,0x0
  4219e2:	icebp  
  4219e3:	cmp    ecx,DWORD PTR [ebx+0x51513fd8]
  4219e9:	fcmovnu st,st(5)
  4219eb:	inc    esp
  4219ec:	or     BYTE PTR [ebx+0x32],bh
  4219ef:	sub    al,0x8f
  4219f1:	dec    ecx
  4219f2:	add    al,0x41
  4219f4:	jmp    0x50422e27
  4219f9:	xchg   esp,eax
  4219fa:	int3   
  4219fb:	cmp    al,0xb8
  4219fd:	jmp    0x42199c
  4219ff:	fsub   st,st(5)
  421a01:	ror    BYTE PTR [edi],cl
  421a03:	rcr    BYTE PTR [esi+ecx*1],0x89
  421a07:	mov    ch,0x8
  421a09:	xchg   ebp,eax
  421a0a:	js     0x4219b2
  421a0c:	xor    DWORD PTR [ebx],esp
  421a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a0f:	adc    edx,eax
  421a11:	xchg   DWORD PTR [ebp-0x79d87bcb],ebp
  421a17:	lea    esi,[edx]
  421a19:	dec    esi
  421a1a:	pop    edx
  421a1b:	stos   DWORD PTR es:[edi],eax
  421a1c:	in     al,dx
  421a1d:	dec    esp
  421a1e:	pop    edx
  421a1f:	push   ss
  421a20:	pop    ebx
  421a21:	adc    al,0x9
  421a23:	xor    al,0xe5
  421a25:	mov    eax,ds:0x19f6ed95
  421a2a:	jne    0x421a68
  421a2c:	mov    eax,0x75c27d65
  421a31:	imul   ecx,DWORD PTR [edx+0x3df85dff],0x2a
  421a38:	mov    cl,0x81
  421a3a:	jecxz  0x421a59
  421a3c:	add    eax,0x18571dbb
  421a41:	push   edi
  421a42:	sub    bl,bh
  421a44:	addr16 in eax,dx
  421a46:	shr    esi,cl
  421a48:	adc    al,0x4
  421a4a:	or     esi,DWORD PTR [edi+0x3fc770e2]
  421a50:	fs icebp 
  421a52:	cmc    
  421a53:	sbb    esp,0x22df2ea0
  421a59:	push   0xffffffff
  421a5b:	repnz out dx,al
  421a5d:	and    DWORD PTR [eax+0x216f67a8],esp
  421a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a64:	vpmulhuw xmm4,xmm1,xmm3
  421a68:	aaa    
  421a69:	push   eax
  421a6a:	(bad)  
  421a6b:	in     eax,dx
  421a6c:	or     al,0x22
  421a6e:	add    eax,0x96d6943
  421a73:	ret    
  421a74:	(bad)  
  421a75:	push   eax
  421a76:	mov    ecx,0xefe40ce0
  421a7b:	fwait
  421a7c:	cmc    
  421a7d:	in     eax,0xb9
  421a7f:	and    BYTE PTR [esi],cl
  421a81:	popa   
  421a82:	mov    al,0x63
  421a84:	mov    dl,0x0
	...
  421a92:	mov    dh,0xdf
  421a94:	fwait
  421a95:	add    bh,bl
  421a97:	inc    esi
  421a98:	mov    edi,0x5e25f0ff
  421a9d:	and    eax,0x2b6fd87e
  421aa2:	mov    cl,BYTE PTR [esi+0x32c0001]
  421aa8:	add    BYTE PTR [eax],al
  421aaa:	adc    al,0x7
  421aac:	lds    esp,FWORD PTR [edx]
  421aae:	pop    ebp
  421aaf:	lea    ebp,[ebx-0x39]
  421ab2:	or     eax,0xc2613875
  421ab7:	in     al,0x1a
  421ab9:	xchg   BYTE PTR [ecx],al
  421abb:	js     0x421b13
  421abd:	mov    al,0xe5
  421abf:	popf   
  421ac0:	(bad)  
  421ac2:	(bad)  
  421ac4:	add    BYTE PTR [ecx+0x53c0366d],0xe7
  421acb:	imul   edi,DWORD PTR [esi],0x8f9b64d9
  421ad1:	dec    esp
  421ad2:	push   0xa8683080
  421ad7:	adc    eax,0xee503bd
  421adc:	mov    bl,BYTE PTR [edx]
  421ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421adf:	and    eax,0x7b47569b
  421ae4:	enter  0x7594,0x4f
  421ae8:	pop    edi
  421ae9:	fisub  DWORD PTR [ecx-0x2e53fef4]
  421aef:	icebp  
  421af0:	out    0x55,eax
  421af2:	push   cs
  421af3:	cmp    al,0xe4
  421af5:	xchg   ebx,eax
  421af6:	adc    ecx,ebp
  421af8:	sub    ebx,esi
  421afa:	pop    ebx
  421afb:	push   edi
  421afc:	ins    BYTE PTR es:[edi],dx
  421afd:	mov    esi,0xc86b0a78
  421b02:	(bad)  
  421b04:	daa    
  421b05:	imul   edi,edi,0xa65584cd
  421b0b:	push   es
  421b0c:	in     eax,0x2
  421b0e:	mov    dh,0x3
  421b10:	ss mov ebx,0x689864a8
  421b16:	mov    ah,0xa6
  421b18:	xchg   cl,bh
  421b1a:	push   ebp
  421b1b:	mov    edx,esp
  421b1d:	push   esi
  421b1e:	mov    dh,0xca
  421b20:	cs cwde 
  421b22:	out    dx,eax
  421b23:	ds jb  0x421b4d
  421b26:	stos   BYTE PTR es:[edi],al
  421b27:	adc    bl,BYTE PTR [edi]
  421b29:	jge    0x421b0f
  421b2b:	xchg   edx,esi
  421b2d:	xchg   ebx,eax
  421b2e:	dec    edi
  421b2f:	adc    eax,0xbcb37700
  421b34:	push   0x65
  421b36:	xchg   esi,eax
  421b37:	test   BYTE PTR [eax+0x729eebae],cl
  421b3d:	push   eax
  421b3e:	popf   
  421b3f:	out    dx,al
  421b40:	gs sti 
  421b42:	xor    edx,edx
  421b44:	jb     0x421b5d
  421b46:	mov    dh,0x20
  421b48:	push   edx
  421b49:	xchg   esp,eax
  421b4a:	mov    al,0x1e
  421b4c:	mov    ah,0xa0
  421b4e:	sbb    BYTE PTR [esi-0x5c],bh
  421b51:	ret    
  421b52:	dec    edx
  421b53:	daa    
  421b54:	xchg   ebp,eax
  421b55:	mov    ebp,0xc1de999a
  421b5a:	std    
  421b5b:	ret    0xa7f4
  421b5e:	add    BYTE PTR [ebx-0x52],ah
  421b61:	pushf  
  421b62:	mov    al,ds:0x70984ccf
  421b67:	sbb    DWORD PTR [ebx+0x4f57b8ec],0x45c63150
  421b71:	aam    0x23
  421b73:	(bad)  
  421b75:	in     al,0xbe
  421b77:	sar    BYTE PTR [edi],cl
  421b79:	xor    bl,0x19
  421b7c:	leave  
  421b7d:	cmp    dl,dh
  421b7f:	gs ret 
  421b81:	gs inc ebx
  421b83:	mov    edi,0xcde91f22
  421b88:	int    0xc3
  421b8a:	jno    0x421b23
  421b8c:	mov    fs,esp
  421b8e:	mov    ecx,0x7428699
  421b93:	inc    edx
  421b94:	xor    BYTE PTR [edx],bh
  421b96:	jmp    0x421c11
  421b98:	mov    ah,dh
  421b9a:	scas   al,BYTE PTR es:[edi]
  421b9b:	mov    edi,cs
  421b9d:	sub    dh,bl
  421b9f:	pushf  
  421ba0:	lods   al,BYTE PTR ds:[esi]
  421ba1:	mov    edi,ebp
  421ba3:	test   DWORD PTR [ecx-0x40],eax
  421ba6:	retf   0xd283
  421ba9:	pop    ebx
  421baa:	dec    esi
  421bab:	out    dx,al
  421bac:	adc    DWORD PTR [edx+0x1d935b76],eax
  421bb2:	jle    0x421bf6
  421bb4:	loope  0x421b44
  421bb6:	push   eax
  421bb7:	imul   edx,DWORD PTR ds:0x8f1ec7f0,0x671a9c07
  421bc1:	test   eax,0xd089e11c
  421bc6:	cmp    eax,DWORD PTR [eax+0xd]
  421bc9:	sbb    DWORD PTR [ecx-0x34],edx
  421bcc:	jle    0x421bdc
  421bce:	bound  ebx,QWORD PTR [edx]
  421bd0:	push   ebx
  421bd1:	sahf   
  421bd2:	pop    esp
  421bd3:	sahf   
  421bd4:	cmp    bh,ch
  421bd6:	cmp    ah,BYTE PTR [ecx+0x5c]
  421bd9:	setnp  BYTE PTR [eax]
  421bdc:	sub    al,0x7b
  421bde:	xchg   esp,eax
  421bdf:	fist   DWORD PTR [edx-0x4deb9e7f]
  421be5:	inc    esp
  421be6:	lods   eax,DWORD PTR ds:[esi]
  421be7:	sbb    edx,DWORD PTR [eax]
  421be9:	sub    bl,BYTE PTR [eax]
  421beb:	or     DWORD PTR [eax+0x7478e599],0xfffffff2
  421bf2:	jecxz  0x421b78
  421bf4:	xor    eax,0x37e05314
  421bf9:	lods   eax,DWORD PTR ds:[esi]
  421bfa:	les    esp,FWORD PTR [ecx-0x11d6bfd6]
  421c00:	dec    ebp
  421c01:	xchg   ebx,eax
  421c02:	nop
  421c03:	dec    ebp
  421c04:	push   ebx
  421c05:	pushf  
  421c06:	or     bl,BYTE PTR [ebp+0xa]
  421c09:	inc    eax
  421c0a:	add    BYTE PTR [edi],al
  421c0c:	or     BYTE PTR [eax-0x37],ch
  421c0f:	loop   0x421c3c
  421c11:	loope  0x421bc5
  421c13:	call   0x4beb363
  421c18:	scas   eax,DWORD PTR es:[edi]
  421c19:	scas   eax,DWORD PTR es:[edi]
  421c1a:	mov    edx,0x6026164e
  421c1f:	pusha  
  421c20:	dec    ebp
  421c21:	or     ch,BYTE PTR [ebp+0x2a]
  421c24:	mov    ch,0x41
  421c26:	xchg   ecx,eax
  421c27:	repz neg bl
  421c2a:	or     DWORD PTR [edi],esi
  421c2c:	ror    DWORD PTR [edi],cl
  421c2e:	in     al,dx
  421c2f:	inc    ebx
  421c30:	cmp    bl,bh
  421c32:	fisubr DWORD PTR cs:[ebp+0x70]
  421c36:	sar    BYTE PTR [edx+ecx*2],cl
  421c39:	in     al,dx
  421c3a:	sbb    ah,BYTE PTR [ebp+0x26]
  421c3d:	test   bh,dh
  421c3f:	sub    dh,cl
  421c41:	imul   edx,ebp,0xffffff80
  421c44:	fld    DWORD PTR [edi+0x69]
  421c47:	push   ss
  421c48:	push   0xffffff8b
  421c4a:	inc    eax
  421c4b:	cdq    
  421c4c:	repz mov dl,BYTE PTR [esi+eiz*2-0x1cbc6178]
  421c54:	dec    esp
  421c55:	out    0x61,eax
  421c57:	or     DWORD PTR [edx],esp
  421c59:	fs (bad) 
  421c5b:	xchg   edi,eax
  421c5c:	push   ebx
  421c5d:	(bad)  
  421c5e:	adc    esi,esp
  421c60:	sub    al,0xc6
  421c62:	dec    ebx
  421c63:	int3   
  421c64:	inc    ecx
  421c65:	jns    0x421cc0
  421c67:	cli    
  421c68:	test   eax,0xc05f88d7
  421c6d:	inc    eax
  421c6e:	sub    BYTE PTR [ecx+0x44],dl
  421c71:	out    0x8a,eax
  421c73:	fmul   QWORD PTR [ebx+0x19855c60]
  421c79:	jp     0x421caa
  421c7b:	sbb    ah,ch
  421c7d:	neg    BYTE PTR [eax+0x78ca883]
  421c83:	or     ch,0x94
  421c86:	ja     0x421c35
  421c88:	retf   
  421c89:	mov    dh,0xae
  421c8b:	push   es
  421c8c:	sub    al,0x6a
  421c8e:	bound  esi,QWORD PTR [eax]
  421c90:	shl    al,0x57
  421c93:	aad    0xeb
  421c95:	cmp    eax,0x8cf0c983
  421c9a:	add    DWORD PTR [ecx-0x56],edi
  421c9d:	ret    0x3043
  421ca0:	xor    ebp,ebp
  421ca2:	ret    0x5dea
  421ca5:	out    0xc,al
  421ca7:	xchg   ebx,eax
  421ca8:	stos   DWORD PTR es:[edi],eax
  421ca9:	ror    DWORD PTR [ebp-0x65b69043],cl
  421caf:	mov    edx,0x1e9c0d0e
  421cb4:	rcr    BYTE PTR [ebx-0x58],0x9a
  421cb8:	inc    ebx
  421cb9:	das    
  421cba:	xchg   esp,eax
  421cbb:	das    
  421cbc:	bound  edi,QWORD PTR [eax+0x27fe420d]
  421cc2:	loope  0x421c99
  421cc4:	das    
  421cc5:	data16 jns 0x421cbe
  421cc8:	fwait
  421cc9:	imul   esi,DWORD PTR [ecx-0x68],0xac923f5
  421cd0:	cwde   
  421cd1:	jl     0x421cbd
  421cd3:	xchg   DWORD PTR [edx-0xca2e0d7],edx
  421cd9:	adc    BYTE PTR [ebx+0x30],ch
  421cdc:	push   ebx
  421cdd:	xchg   esp,eax
  421cde:	mov    esp,0xe04f73a3
  421ce3:	and    ch,cl
  421ce5:	adc    eax,0x4313bbf4
  421cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ceb:	inc    edi
  421cec:	add    eax,0xa40439d7
  421cf1:	ss add al,0x6d
  421cf4:	xchg   ecx,eax
  421cf5:	jmp    0x9e35efdc
  421cfa:	or     dl,BYTE PTR [ecx-0x14]
  421cfd:	sar    BYTE PTR ds:0x4102f431,0xd3
  421d04:	lahf   
  421d05:	dec    esi
  421d06:	sbb    al,BYTE PTR [ebp+0x3a]
  421d09:	pop    eax
  421d0a:	mov    ebx,0xd414676a
  421d0f:	int    0x49
  421d11:	sbb    esi,DWORD PTR [esi]
  421d13:	dec    esi
  421d14:	mov    dh,0xe6
  421d16:	in     al,0xb2
  421d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d19:	sbb    ah,bl
  421d1b:	in     al,0xdf
  421d1d:	cmp    DWORD PTR [ecx],ecx
  421d1f:	aad    0xc5
  421d21:	mov    DWORD PTR [ecx+0x7757cd6],ecx
  421d27:	push   cs
  421d28:	int    0x3b
  421d2a:	mov    esp,0xe79464c5
  421d2f:	(bad)  
  421d30:	cmp    eax,0x97761bb7
  421d35:	cmp    eax,0x866aabb1
  421d3a:	mov    ah,0x67
  421d3c:	inc    ecx
  421d3d:	(bad)  ds:0xbf14e93f
  421d43:	or     cl,ch
  421d45:	out    0x68,al
  421d47:	xchg   BYTE PTR [ecx+0xfaa8978],ah
  421d4d:	sub    al,dl
  421d4f:	mov    WORD PTR [esi+0x2d4678d3],es
  421d55:	aad    0x20
  421d57:	aaa    
  421d58:	and    al,dh
  421d5a:	mov    ebx,DWORD PTR [ebp-0x4f]
  421d5d:	pusha  
  421d5e:	aam    0x3
  421d60:	retf   0x2966
  421d63:	xchg   ebx,eax
  421d64:	or     eax,0xd906c5ae
  421d69:	jl     0x421dd5
  421d6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d6c:	mov    esi,DWORD PTR ds:0x327b1efe
  421d72:	enter  0x2794,0xf0
  421d76:	pop    edx
  421d77:	adc    eax,0xbb1a1f39
  421d7c:	sub    DWORD PTR [ebp-0x1354964a],eax
  421d82:	retf   
  421d83:	and    eax,0x15068db8
  421d88:	outs   dx,DWORD PTR ds:[esi]
  421d89:	out    dx,al
  421d8a:	cld    
  421d8b:	sub    ebp,edi
  421d8d:	add    edi,edi
  421d8f:	adc    BYTE PTR [edi-0x14091e42],dh
  421d95:	jmp    0x421d82
  421d97:	clc    
  421d98:	jae    0x421d38
  421d9a:	add    edi,DWORD PTR [eax]
  421d9c:	fstp   QWORD PTR [edx+0x3b77894e]
  421da2:	retf   
  421da3:	lods   al,BYTE PTR ds:[esi]
  421da4:	ficom  WORD PTR [esi+0x21]
  421da7:	arpl   WORD PTR [ecx],ax
  421da9:	fdivr  st(3),st
  421dab:	xchg   ebx,esi
  421dad:	inc    ecx
  421dae:	stos   DWORD PTR es:[edi],eax
  421daf:	mov    es,WORD PTR [ecx-0x32f727b0]
  421db5:	cld    
  421db6:	jge    0x421d3e
  421db8:	and    bh,BYTE PTR [ecx+0x3f]
  421dbb:	stos   BYTE PTR es:[edi],al
  421dbc:	out    0x54,al
  421dbe:	rol    BYTE PTR [edx-0x6f8060f0],cl
  421dc4:	icebp  
  421dc5:	rcr    DWORD PTR ds:0x8e1ec1dc,0x52
  421dcc:	push   edi
  421dcd:	and    eax,0x3b9395ec
  421dd2:	ret    
  421dd3:	jb     0x421e35
  421dd5:	cli    
	...
  421de2:	clc    
  421de3:	mov    ah,0x7f
  421de5:	cmp    eax,0xf5faff7f
  421dea:	jle    0x421dee
  421dec:	xor    eax,DWORD PTR [esi-0x52]
  421def:	pushf  
  421df0:	loopne 0x421e6b
  421df2:	mov    dh,0x91
  421df4:	add    DWORD PTR [eax],eax
  421df6:	sub    al,0x3
  421df8:	add    BYTE PTR [eax],al
  421dfa:	jnp    0x421e25
  421dfc:	fs (bad) 
  421dfe:	std    
  421dff:	or     ch,BYTE PTR [ebx+0x69]
  421e02:	ret    
  421e03:	lds    ebx,FWORD PTR [ebp-0x78ac1715]
  421e09:	or     ah,BYTE PTR [ecx+0x297ce7da]
  421e0f:	or     eax,0xea5899b
  421e14:	retf   0xd00e
  421e17:	push   eax
  421e18:	cli    
  421e19:	xchg   BYTE PTR [ebx-0x7f],bh
  421e1c:	jbe    0x421e24
  421e1e:	dec    ebx
  421e1f:	mov    ebp,0xe84f1d32
  421e24:	shl    ch,1
  421e26:	fsub   QWORD PTR [ecx]
  421e28:	daa    
  421e29:	retf   
  421e2a:	jnp    0x421e41
  421e2c:	fs xchg ecx,eax
  421e2e:	inc    edi
  421e2f:	push   edx
  421e30:	es jg  0x421ea1
  421e33:	sub    ebp,DWORD PTR ds:0xdc773cfe
  421e39:	int3   
  421e3a:	or     ebp,edi
  421e3c:	popf   
  421e3d:	jmp    0xff81:0x758f4b12
  421e44:	vmread DWORD PTR ds:[edx],esi
  421e48:	pop    esi
  421e49:	in     al,0xcd
  421e4b:	add    BYTE PTR [ebp-0x5abf22a],dh
  421e51:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  421e53:	cmp    al,0xfa
  421e55:	repz and DWORD PTR [ebx-0x76],0xb518a6b6
  421e5d:	daa    
  421e5e:	das    
  421e5f:	clc    
  421e60:	pop    ebp
  421e61:	fiadd  DWORD PTR [ebp+0x3f224178]
  421e67:	stc    
  421e68:	and    DWORD PTR [ebx],esp
  421e6a:	ror    BYTE PTR [edi+0x47],1
  421e6d:	out    dx,al
  421e6e:	jp     0x11600cfb
  421e74:	inc    edi
  421e75:	rcr    BYTE PTR [ebx+0x53],cl
  421e78:	cmp    ebx,DWORD PTR [eax-0x79]
  421e7b:	push   ss
  421e7c:	or     BYTE PTR [eax],dh
  421e7e:	aad    0xc6
  421e80:	mov    esi,ebp
  421e82:	add    al,0xe3
  421e84:	mov    cl,0x14
  421e86:	ficom  WORD PTR [esp+ebp*1]
  421e89:	push   ecx
  421e8a:	dec    edx
  421e8b:	cs dec edx
  421e8d:	and    BYTE PTR [ebp-0x808daf6],ch
  421e93:	or     eax,edx
  421e95:	mov    esi,0x2c69b32f
  421e9a:	pop    eax
  421e9b:	mov    BYTE PTR [ebp-0x3533280f],dl
  421ea1:	rcl    BYTE PTR [ebx+ebp*1-0x32cf0542],cl
  421ea8:	rol    DWORD PTR [edx-0x7373d1db],1
  421eae:	jne    0x421ec6
  421eb0:	pop    esi
  421eb1:	mov    ch,0xbd
  421eb3:	push   0x91463075
  421eb8:	jbe    0x421ea7
  421eba:	ret    
  421ebb:	pop    ecx
  421ebc:	lods   eax,DWORD PTR ds:[esi]
  421ebd:	and    eax,0x22a0afe6
  421ec2:	inc    esp
  421ec3:	shr    DWORD PTR [eax+ebp*4+0x6a],1
  421ec7:	or     BYTE PTR [ecx],0xb8
  421eca:	xchg   edi,eax
  421ecb:	ret    0xd4ab
  421ece:	jmp    0xc982a2e9
  421ed3:	push   es
  421ed4:	or     eax,DWORD PTR [ebx]
  421ed6:	addr16 sahf 
  421ed8:	xor    al,0x9e
  421eda:	inc    eax
  421edb:	mov    dl,BYTE PTR [edx]
  421edd:	mov    dh,BYTE PTR [edi+ebp*1]
  421ee0:	pop    ecx
  421ee1:	jnp    0x421f29
  421ee3:	out    dx,eax
  421ee4:	add    BYTE PTR [ebp-0x6a],ch
  421ee7:	and    al,0xa7
  421ee9:	xchg   ebp,eax
  421eea:	inc    ebx
  421eeb:	cwde   
  421eec:	sub    eax,0x62ebaa57
  421ef1:	mov    es,WORD PTR [edx]
  421ef3:	mov    edx,0xbb518ae5
  421ef8:	jo     0x421eff
  421efa:	or     eax,0xb7b589a4
  421eff:	call   0xd80:0xa04c4cd5
  421f06:	pop    ebx
  421f07:	sar    BYTE PTR [edx-0x359841b2],cl
  421f0d:	dec    edx
  421f0e:	mov    WORD PTR [edx-0xa395beb],ds
  421f14:	mov    edx,0xea0bab2c
  421f19:	test   al,0x6a
  421f1b:	out    0x92,al
  421f1d:	dec    edx
  421f1e:	jmp    0x421f2b
  421f20:	push   ebx
  421f21:	call   0x5b614c1b
  421f26:	cmp    eax,DWORD PTR [eax+0x77a86d9f]
  421f2c:	jmp    FWORD PTR [eax-0x71]
  421f2f:	imul   ebx,DWORD PTR [edx-0x74],0x537b1158
  421f36:	or     cl,BYTE PTR [edi]
  421f38:	cmp    edx,esi
  421f3a:	mov    cl,0xea
  421f3c:	cli    
  421f3d:	cmp    DWORD PTR [edx+0x45],edi
  421f40:	pop    esi
  421f41:	(bad)  
  421f42:	std    
  421f43:	imul   DWORD PTR [ebx]
  421f45:	js     0x421fa9
  421f47:	mov    ds:0xb3d749d6,al
  421f4c:	push   0x6c
  421f4e:	adc    DWORD PTR [eax],edi
  421f50:	je     0x421ee7
  421f52:	out    0xce,eax
  421f54:	mov    bl,0xcd
  421f56:	out    0x5e,eax
  421f58:	fs into 
  421f5a:	adc    eax,0xe3f0a778
  421f5f:	shr    ch,cl
  421f61:	jne    0x421fc4
  421f63:	sbb    eax,0xc6956866
  421f68:	xchg   BYTE PTR [eax-0x2b],ah
  421f6b:	lahf   
  421f6c:	aas    
  421f6d:	call   0x89fb4b1c
  421f72:	add    BYTE PTR es:[eax],bh
  421f75:	inc    edx
  421f76:	sub    DWORD PTR [ebx+eax*1-0x6e87dc14],ebx
  421f7d:	add    DWORD PTR [edi],eax
  421f7f:	mov    BYTE PTR [ebx],dl
  421f81:	outs   dx,DWORD PTR ds:[esi]
  421f82:	add    BYTE PTR [ebx+ecx*2],ch
  421f85:	adc    al,0x56
  421f87:	(bad)  
  421f88:	adc    al,0x1
  421f8a:	bound  eax,QWORD PTR [ecx+0xf]
  421f8d:	dec    eax
  421f8e:	adc    ah,BYTE PTR [esi+0x49]
  421f91:	sub    DWORD PTR [eax-0x708b6619],0xf952dfaa
  421f9b:	shr    BYTE PTR [ecx+eiz*2+0x30],1
  421f9f:	test   al,0xa5
  421fa1:	clc    
  421fa2:	es jge 0x42201f
  421fa5:	mul    bh
  421fa7:	pop    ds
  421fa8:	mov    ebx,0xa226151a
  421fad:	imul   ecx,DWORD PTR [esi-0x743a3fef],0x5fe3b36b
  421fb7:	push   0x5c
  421fb9:	popa   
  421fba:	lods   eax,DWORD PTR ds:[esi]
  421fbb:	std    
  421fbc:	mov    ebp,0x120d32a0
  421fc1:	dec    ebp
  421fc2:	fstp   DWORD PTR [esi-0x1f93515a]
  421fc8:	std    
  421fc9:	inc    ebp
  421fca:	add    DWORD PTR [ecx+0x41],0x4d04e194
  421fd1:	mov    ecx,0x669327ea
  421fd6:	mov    ds,esi
  421fd8:	and    BYTE PTR [esi],bh
  421fda:	jns    0x421f7d
  421fdc:	mov    bh,0xd6
  421fde:	pop    ebx
  421fdf:	jo     0x42205c
  421fe1:	loope  0x42202a
  421fe3:	ds mov ch,0x1c
  421fe6:	pushf  
  421fe7:	aam    0xf5
  421fe9:	rcl    BYTE PTR ds:0x98ff2c52,0x2
  421ff0:	ror    DWORD PTR [ebp-0x5d],1
  421ff3:	jg     0x421f77
  421ff5:	sub    DWORD PTR [ecx-0x7a],edi
  421ff8:	sar    BYTE PTR [ebp-0x10],1
  421ffb:	xchg   ebx,eax
  421ffc:	mov    dh,0xeb
  421ffe:	ins    BYTE PTR es:[edi],dx
  421fff:	pop    eax
  422000:	retf   
  422001:	sub    eax,0xc4b1319c
  422006:	fidivr DWORD PTR [edx]
  422008:	and    eax,0xcb9167a6
  42200d:	jmp    0x422000
  42200f:	mov    al,ds:0x3cf8c722
  422014:	fcomp  QWORD PTR [ecx-0x6ecbf9ed]
  42201a:	ss je  0x422073
  42201d:	test   eax,0xb09fe2f5
  422022:	cmp    al,BYTE PTR [ecx-0x6c]
  422025:	aas    
  422026:	imul   cl
  422028:	js     0x422023
  42202a:	rcl    DWORD PTR [eax],cl
  42202c:	inc    esi
  42202d:	add    al,BYTE PTR [edi+ecx*4+0x2df0c59e]
  422034:	sub    al,0xd5
  422036:	dec    ebx
  422037:	mov    eax,ds:0x5e68b082
  42203c:	and    ebp,0x96f9f87e
  422042:	xor    eax,0xf5d7a44a
  422047:	mov    db3,ecx
  42204a:	adc    bh,ch
  42204c:	sub    BYTE PTR [edx+0x1a],al
  42204f:	pop    edi
  422051:	or     BYTE PTR [ebx-0x3fdc5a87],dl
  422057:	pop    esp
  422058:	sbb    al,0x4f
  42205a:	mov    eax,ds:0x5a1c494a
  42205f:	cmp    DWORD PTR [edx+0x51],0x3
  422063:	mov    ch,0x11
  422065:	mov    WORD PTR [ebp+0x4f],?
  422068:	retf   
  422069:	and    DWORD PTR [ecx],edx
  42206b:	lods   eax,DWORD PTR ds:[esi]
  42206c:	retf   
  42206d:	push   ebp
  42206e:	xchg   ebx,eax
  42206f:	cs jp  0x42207d
  422072:	cmp    DWORD PTR [ebx-0x6713bef1],ebp
  422078:	mov    cl,0xbe
  42207a:	scas   eax,DWORD PTR es:[edi]
  42207b:	aas    
  42207c:	das    
  42207d:	cs (bad) 
  422082:	mov    ah,0x96
  422084:	iret   
  422085:	jns    0x4220f6
  422087:	out    dx,eax
  422088:	arpl   WORD PTR [esi+0x39c64ec6],bx
  42208e:	ss jno 0x4220d7
  422091:	and    al,0xb
  422093:	ins    BYTE PTR es:[edi],dx
  422094:	mov    ecx,esi
  422096:	iret   
  422097:	nop
  422098:	add    BYTE PTR [edi-0x44c5f5e9],dl
  42209e:	je     0x422072
  4220a0:	add    edx,DWORD PTR [edi-0x5f]
  4220a3:	ins    DWORD PTR es:[edi],dx
  4220a4:	js     0x42210b
  4220a6:	mov    ah,0xc7
  4220a8:	pop    esi
  4220a9:	mov    ds:0x3b12ba5a,eax
  4220ae:	and    al,0xa0
  4220b0:	adc    cl,BYTE PTR [edx+0x71]
  4220b3:	shl    DWORD PTR [bp+si-0x78],1
  4220b7:	in     eax,0xd8
  4220b9:	inc    ebp
  4220ba:	jecxz  0x42204d
  4220bc:	std    
  4220bd:	shl    BYTE PTR [edi-0x6d1a01cc],0x97
  4220c4:	lds    esp,FWORD PTR ds:0x34eb9f3e
  4220ca:	adc    bl,ch
  4220cc:	push   ebp
  4220cd:	retf   0x934a
  4220d0:	aad    0x17
  4220d2:	or     DWORD PTR [ecx-0x18b323f5],edx
  4220d8:	jmp    0x5c83aea3
  4220dd:	sbb    eax,0x50b0863b
  4220e2:	mov    ds:0xf658bc44,eax
  4220e7:	push   ds
  4220e8:	dec    esp
  4220e9:	mov    bh,0x8b
  4220eb:	sbb    al,0xb1
  4220ed:	dec    esi
  4220ee:	aam    0x99
  4220f0:	mov    esp,0x69f2b951
  4220f5:	pop    ebp
  4220f6:	push   0xbef7124b
  4220fb:	mov    eax,ds:0x1cb64fcd
  422100:	sti    
  422101:	aas    
  422102:	pop    edi
  422103:	inc    esp
  422104:	dec    ebp
  422105:	sbb    DWORD PTR [ebx-0x3a9545e1],ebp
  42210b:	jno    0x42216c
  42210d:	int3   
  42210e:	mov    esp,0x840d6f97
  422113:	jnp    0x42212e
  422115:	out    0xdf,eax
  422117:	adc    eax,0xd12df504
  42211c:	mov    ecx,0xc9b578f7
  422121:	aas    
  422122:	or     DWORD PTR [ebx],0xb357
	...
  422130:	add    BYTE PTR [eax],al
  422132:	cmp    DWORD PTR [ecx+ecx*4],ebx
  422135:	out    0xad,eax
  422137:	idiv   DWORD PTR [edi-0x22]
  42213a:	mov    DWORD PTR [edx+0x79],ebp
  42213d:	and    DWORD PTR [edi],0xe2e850ec
  422143:	xchg   esp,eax
  422144:	add    DWORD PTR [eax],eax
  422146:	sub    al,0x3
  422148:	add    BYTE PTR [eax],al
  42214a:	inc    esi
  42214b:	dec    edx
  42214c:	push   0x6df5f930
  422151:	scas   eax,DWORD PTR es:[edi]
  422152:	mov    esi,0x59f0bd12
  422157:	and    ah,BYTE PTR [edi+edi*2]
  42215a:	aam    0x5b
  42215c:	lar    edx,di
  42215f:	call   0xf494:0x96073f1a
  422166:	pop    DWORD PTR [ebx+0x6bc5c8f1]
  42216c:	ins    BYTE PTR es:[edi],dx
  42216d:	pop    ebp
  42216e:	test   al,0xd6
  422170:	xchg   edi,eax
  422171:	btc    ebx,ebp
  422174:	inc    eax
  422175:	outs   dx,DWORD PTR ds:[esi]
  422176:	dec    ebp
  422177:	pop    eax
  422178:	sbb    ecx,DWORD PTR [edx+eiz*1]
  42217b:	sbb    dh,BYTE PTR [ebx]
  42217d:	mov    al,ds:0x48e8ac7b
  422182:	(bad)
  422185:	data16 or al,BYTE PTR [ebx-0x68]
  422189:	inc    ebx
  42218a:	out    dx,eax
  42218b:	xchg   BYTE PTR ds:0x19ebe44b,bh
  422191:	or     eax,0xc8da72a9
  422196:	scas   al,BYTE PTR es:[edi]
  422197:	dec    edx
  422198:	bound  ebx,QWORD PTR [edx+0xf27e511]
  42219e:	loop   0x42216c
  4221a0:	enter  0x57fd,0x26
  4221a4:	call   0x99b0:0xdde48fcb
  4221ab:	jmp    0xb1ab772e
  4221b0:	mov    cl,0xd8
  4221b2:	push   eax
  4221b3:	div    DWORD PTR [esi-0xa9bb44]
  4221b9:	sahf   
  4221ba:	mov    cl,0xea
  4221bc:	adc    eax,0xccc3d97a
  4221c1:	shl    BYTE PTR [edi-0xd873b9a],1
  4221c7:	call   0xf3c8:0xbb349b79
  4221ce:	or     BYTE PTR [eax-0x2c2f8fca],al
  4221d4:	inc    edx
  4221d5:	cwde   
  4221d6:	cmp    ch,BYTE PTR [ecx+ecx*2+0x0]
  4221da:	mov    ebp,0xfe3899f3
  4221df:	gs fdiv st,st(1)
  4221e2:	inc    dx
  4221e4:	and    BYTE PTR [edi-0x59ef1a26],dh
  4221ea:	out    dx,eax
  4221eb:	stos   DWORD PTR es:[edi],eax
  4221ec:	mov    edx,0x2f78428
  4221f1:	test   eax,0x2f265367
  4221f6:	ret    0x2940
  4221f9:	in     al,0xa3
  4221fb:	shl    DWORD PTR [eax-0x730e3f64],1
  422201:	mov    dl,0x79
  422203:	int    0x84
  422205:	lods   al,BYTE PTR ds:[esi]
  422206:	test   DWORD PTR [edi+0x50],eax
  422209:	add    al,0xfc
  42220b:	cmp    eax,0xd9084b4b
  422210:	or     DWORD PTR ds:0xcd6d840b,edx
  422216:	rcr    BYTE PTR [ecx+0x39ca957f],cl
  42221c:	idiv   BYTE PTR [ecx+0x6423505f]
  422222:	push   esp
  422223:	repnz mov cl,0x22
  422226:	lahf   
  422227:	or     DWORD PTR [eax-0x231ee668],0x591739e
  422231:	mov    ah,0xce
  422233:	outs   dx,BYTE PTR ds:[esi]
  422234:	mov    esi,0x23a3e46
  422239:	out    dx,eax
  42223a:	icebp  
  42223b:	pop    ebx
  42223c:	(bad)  
  42223d:	adc    al,0x49
  42223f:	mov    ds:0x52d4a7b6,al
  422244:	loope  0x42227f
  422246:	sub    BYTE PTR [esi-0x5184652f],0x9e
  42224d:	mov    ebp,0x5f808c90
  422252:	sbb    eax,0xdcdc6f81
  422257:	dec    ebx
  422258:	or     eax,0x88c63485
  42225d:	lahf   
  42225e:	push   ecx
  42225f:	jne    0x422200
  422261:	cs xor bh,al
  422264:	stc    
  422265:	cmp    ch,BYTE PTR [ecx+0x39]
  422268:	xchg   ebx,eax
  422269:	pop    ds
  42226a:	jne    0x422284
  42226c:	mov    BYTE PTR [ebx],dh
  42226e:	jp     0x4222c6
  422270:	test   eax,0x6114ed73
  422275:	in     al,dx
  422276:	push   es
  422277:	xor    eax,0xa3712a45
  42227c:	test   dl,0x1
  42227f:	scas   eax,DWORD PTR es:[edi]
  422280:	sti    
  422281:	sbb    esp,edi
  422283:	lea    edi,[eax-0x34b35570]
  422289:	mov    al,ds:0x8912de8b
  42228e:	fwait
  42228f:	adc    dh,BYTE PTR ds:0x1e597c82
  422295:	imul   ecx,DWORD PTR [esi-0x5df4cd25],0xfffffffa
  42229c:	push   cs
  42229d:	mov    al,ds:0x5cd21cd6
  4222a2:	mov    ah,bh
  4222a4:	mov    bh,al
  4222a6:	loop   0x422280
  4222a8:	sub    dl,ch
  4222aa:	das    
  4222ab:	xor    eax,0xca0cf2fa
  4222b0:	lahf   
  4222b1:	repz push ss
  4222b3:	popa   
  4222b4:	rcl    BYTE PTR [edx-0x4b],cl
  4222b7:	mul    BYTE PTR [ecx+ebx*1-0x2d]
  4222bb:	xchg   ebp,eax
  4222bd:	out    0x62,eax
  4222bf:	mov    WORD PTR ds:0x1d505d87,ds
  4222c5:	push   edx
  4222c6:	cdq    
  4222c7:	dec    edi
  4222c8:	outs   dx,BYTE PTR ds:[esi]
  4222c9:	inc    ecx
  4222ca:	fs xchg edi,eax
  4222cc:	cmc    
  4222cd:	popa   
  4222ce:	sbb    al,0xc8
  4222d0:	inc    ebp
  4222d1:	ins    DWORD PTR es:[edi],dx
  4222d2:	int3   
  4222d3:	(bad)  
  4222d4:	pop    ss
  4222d5:	test   DWORD PTR [edx-0x5242f817],edx
  4222db:	adc    dl,bh
  4222dd:	dec    eax
  4222de:	xor    ecx,eax
  4222e0:	sbb    BYTE PTR [ebx+0x79712e32],dh
  4222e6:	aad    0xae
  4222e8:	test   cl,dh
  4222ea:	aas    
  4222eb:	scas   eax,DWORD PTR es:[edi]
  4222ec:	mov    ah,BYTE PTR [esi-0x4e99ec5c]
  4222f2:	mov    ch,0x69
  4222f4:	ret    0xaa66
  4222f7:	lods   eax,DWORD PTR ds:[esi]
  4222f8:	cmp    DWORD PTR [ebp+edi*8-0x69],esi
  4222fc:	xchg   ebx,eax
  4222fd:	inc    ebp
  4222fe:	jmp    0x636:0x3bc58afd
  422305:	mov    dh,al
  422307:	push   edi
  422308:	jb     0x42228a
  42230a:	push   0xfe7796f
  42230f:	jo     0x4222ca
  422311:	nop
  422312:	dec    edx
  422313:	test   BYTE PTR [ebx+0x25f0d444],0x52
  42231a:	and    ebx,0x74
  42231d:	cmp    BYTE PTR [esi-0x8631fef],dl
  422323:	push   esi
  422324:	dec    ebx
  422325:	sbb    DWORD PTR ds:0x493fc71,edi
  42232b:	jmp    0xacd3:0xd2f5c8f8
  422332:	bound  esp,QWORD PTR [ebp+0x50]
  422335:	rcl    DWORD PTR [ebp+0x10e50178],0xc9
  42233c:	inc    edx
  42233d:	cmp    DWORD PTR [edi],ebx
  42233f:	mov    edi,0xb29ca5be
  422344:	pop    esi
  422345:	out    dx,al
  422346:	arpl   WORD PTR ds:0x261a0efd,si
  42234c:	push   0x64d9d2f3
  422351:	jecxz  0x422333
  422353:	dec    edi
  422354:	or     ebp,DWORD PTR [ebx+0xb]
  422357:	jbe    0x42236e
  422359:	loope  0x422359
  42235b:	push   eax
  42235c:	cmp    edx,DWORD PTR [ebx]
  42235e:	(bad)  [esi-0x7650bfdc]
  422364:	jae    0x42233b
  422366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422367:	jmp    0x422307
  422369:	sub    al,0xba
  42236b:	mov    edi,0x5ed9b2c1
  422370:	cli    
  422371:	(bad)  
  422372:	std    
  422373:	fwait
  422374:	sub    al,0xdd
  422377:	call   DWORD PTR [ebx+0x6233d489]
  42237d:	ret    
  42237e:	inc    ebp
  42237f:	jne    0x4223f9
  422381:	dec    edi
  422382:	outs   dx,DWORD PTR ds:[esi]
  422383:	inc    ebp
  422384:	jmp    0xaf1d:0x51b86ecd
  42238b:	mov    esi,0x67dddb91
  422390:	pop    esi
  422391:	dec    esi
  422392:	ds jecxz 0x422348
  422395:	rcr    ch,cl
  422397:	and    esp,DWORD PTR [eax-0x5c23dc0d]
  42239d:	scas   al,BYTE PTR es:[edi]
  42239e:	gs pop esi
  4223a0:	or     DWORD PTR [ecx],ebp
  4223a2:	xor    DWORD PTR es:[ebx],edx
  4223a5:	mov    ch,0x21
  4223a7:	inc    edx
  4223a8:	fcmovnb st,st(6)
  4223aa:	xchg   edx,eax
  4223ab:	pop    esp
  4223ac:	lods   eax,DWORD PTR ds:[esi]
  4223ad:	retf   
  4223ae:	add    ah,BYTE PTR [ebx+0x14]
  4223b1:	mov    ah,0x61
  4223b3:	jmp    0x6d62:0xacef16f0
  4223ba:	xor    BYTE PTR [esi-0x36],0xa6
  4223be:	ja     0x422429
  4223c0:	push   0x8e7bd1e8
  4223c5:	call   DWORD PTR [eax+edi*2-0x79]
  4223c9:	fcom   QWORD PTR [edx+0x50c37d4e]
  4223cf:	jb     0x4223a4
  4223d1:	les    ecx,FWORD PTR [ebx+0x3d31f501]
  4223d7:	push   esp
  4223d8:	scas   al,BYTE PTR es:[edi]
  4223d9:	(bad)  
  4223da:	lahf   
  4223db:	out    0xe2,al
  4223dd:	jp     0x422391
  4223df:	pop    edi
  4223e0:	cld    
  4223e1:	xchg   BYTE PTR [edx+0x39fc2b17],ch
  4223e7:	jmp    0x1ebb:0x2b7c2808
  4223ee:	(bad)  
  4223ef:	mov    edi,0x20c55374
  4223f4:	push   esp
  4223f5:	bnd je 0x422448
  4223f8:	adc    DWORD PTR [ecx],ebp
  4223fa:	cmp    bh,BYTE PTR [edx-0x262051c3]
  422400:	pop    esp
  422401:	push   0xffffffc2
  422403:	fsubr  QWORD PTR [edi-0x5b]
  422406:	retf   
  422407:	stos   DWORD PTR es:[edi],eax
  422408:	outs   dx,BYTE PTR ds:[esi]
  422409:	jne    0x422414
  42240b:	sbb    ch,al
  42240d:	jge    0x4223f6
  42240f:	int3   
  422410:	stos   DWORD PTR es:[edi],eax
  422411:	adc    dl,BYTE PTR [ebp-0x34]
  422414:	jns    0x42246b
  422416:	pop    esi
  422417:	call   0x7a7df79c
  42241c:	jo     0xf0ddb546
  422422:	or     al,0xcb
  422424:	xchg   esp,eax
  422425:	dec    edx
  422426:	sbb    BYTE PTR [ebp-0x1a],bl
  422429:	cmp    DWORD PTR [ebx],edi
  42242b:	retf   
  42242c:	add    eax,DWORD PTR [ebp+0x7f]
  42242f:	push   ecx
  422430:	fisttp WORD PTR [ecx]
  422432:	or     DWORD PTR [ebx+0x4e],edi
  422435:	push   esp
  422436:	stos   DWORD PTR es:[edi],eax
  422437:	jmp    0x6bc9a66d
  42243c:	aas    
  42243d:	and    ch,BYTE PTR [ecx-0x62]
  422440:	cs dec esp
  422442:	adc    BYTE PTR [edx+ebx*4-0x4f2f3c4c],ah
  422449:	pop    ds
  42244a:	ins    BYTE PTR es:[edi],dx
  42244b:	(bad)  
  42244c:	das    
  42244d:	sub    ch,dl
  42244f:	ret    0xec7c
  422452:	js     0x4224a8
  422454:	jecxz  0x4223d7
  422456:	rol    DWORD PTR [ecx+0x75],0x75
  42245a:	jle    0x4224a9
  42245c:	mov    dl,0xb3
  42245e:	jae    0x4223ed
  422460:	pop    ebp
  422461:	mov    dh,0x52
  422463:	dec    edx
  422464:	rcl    DWORD PTR [esi+ebx*4+0x6c6e0ba],0x9d
  42246c:	das    
  42246d:	fdivr  DWORD PTR [ecx]
  42246f:	les    edi,FWORD PTR [ebp-0x24]
  422472:	rcl    BYTE PTR [ecx+0x2b06],cl
	...
  422480:	add    BYTE PTR [eax],al
  422482:	gs mov ah,0x18
  422485:	fcompp 
  422487:	(bad)  
  422488:	out    0xbf,eax
  42248a:	gs mov ah,0x46
  42248d:	div    dl
  42248f:	adc    dh,al
  422491:	or     ecx,DWORD PTR [esi]
  422493:	cwde   
  422494:	add    DWORD PTR [eax],eax
  422496:	sub    al,0x3
  422498:	add    BYTE PTR [eax],al
  42249a:	jp     0x4224d2
  42249c:	mov    ds:0xaa0cd168,eax
  4224a1:	jae    0x4224e7
  4224a3:	call   0x8e2d:0x3bad1cda
  4224aa:	sbb    BYTE PTR [ebx],ch
  4224ac:	mov    ebx,0xf2f6acea
  4224b1:	scas   al,BYTE PTR es:[edi]
  4224b2:	test   BYTE PTR [edi-0xf59a2c9],cl
  4224b8:	jnp    0x422487
  4224ba:	dec    ebx
  4224bb:	repz retf 
  4224bd:	mov    dl,0xb8
  4224bf:	dec    eax
  4224c0:	jmp    0x42248f
  4224c2:	lods   eax,DWORD PTR ds:[esi]
  4224c3:	push   DWORD PTR [eax]
  4224c5:	xlat   BYTE PTR ds:[ebx]
  4224c6:	mov    WORD PTR [edi+0x7d097e19],cs
  4224cc:	sbb    edi,DWORD PTR [edx+0x67]
  4224cf:	lods   eax,DWORD PTR ds:[esi]
  4224d0:	inc    esi
  4224d1:	xor    esi,DWORD PTR [eax+0x2d]
  4224d4:	xor    BYTE PTR [ebx],dl
  4224d6:	fmul   DWORD PTR [esi]
  4224d8:	pop    edi
  4224d9:	test   al,0x81
  4224db:	sub    BYTE PTR [ebx],cl
  4224dd:	call   0xeb172280
  4224e2:	out    0x63,al
  4224e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224e5:	mov    ebx,0x7684bb8d
  4224ea:	jnp    0x422489
  4224ec:	clc    
  4224ed:	mov    edi,DWORD PTR [eax+0x5b450dd6]
  4224f3:	imul   esp,DWORD PTR [ecx+eax*4],0xffffffc1
  4224f7:	nop
  4224f8:	jg     0x422482
  4224fa:	jg     0x422546
  4224fc:	cmp    eax,0x352142f3
  422501:	jp     0x42256e
  422503:	pop    es
  422504:	das    
  422505:	outs   dx,DWORD PTR ds:[esi]
  422506:	sbb    eax,0x1e1b736d
  42250b:	inc    ebp
  42250c:	popf   
  42250d:	cmp    eax,0xad2f5142
  422512:	dec    edi
  422513:	sbb    esp,ebp
  422515:	dec    edx
  422516:	into   
  422517:	xor    dl,BYTE PTR [ecx]
  422519:	add    eax,0xe26b1985
  42251e:	pop    ds
  42251f:	xchg   ecx,eax
  422520:	cli    
  422521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422522:	dec    ecx
  422523:	xchg   dh,bh
  422525:	sub    BYTE PTR [ebx-0x65c1ab67],0x6e
  42252c:	out    0xc0,al
  42252e:	push   DWORD PTR [ebx+esi*4]
  422531:	popf   
  422532:	inc    esi
  422533:	add    BYTE PTR [edi+0x32934c5e],0xe4
  42253a:	iret   
  42253b:	aas    
  42253c:	dec    esp
  42253d:	sahf   
  42253e:	mov    ds:0x613f8435,eax
  422543:	push   esp
  422544:	push   ebx
  422545:	jb     0x4224ee
  422547:	seta   BYTE PTR [ebx+0x5]
  42254b:	out    dx,eax
  42254c:	neg    DWORD PTR [ecx-0x74]
  42254f:	rcr    esi,1
  422551:	inc    ecx
  422552:	dec    ecx
  422553:	icebp  
  422554:	outs   dx,DWORD PTR ds:[esi]
  422555:	in     al,dx
  422556:	inc    edi
  422557:	ror    DWORD PTR [edi-0xe5125ae],cl
  42255d:	dec    esi
  42255e:	mov    esp,0xa3177abb
  422563:	(bad)  
  422564:	mov    esp,0x90808c4b
  422569:	mov    ebp,0x50c79660
  42256e:	fisubr DWORD PTR [eax+0x1a]
  422571:	xor    al,0xa3
  422573:	call   0x9616:0x52cd1bb8
  42257a:	inc    edi
  42257b:	xchg   BYTE PTR [ecx],ch
  42257d:	add    BYTE PTR [ebx-0x11f4ce5b],cl
  422583:	outs   dx,DWORD PTR ds:[esi]
  422584:	mov    ah,0x69
  422586:	mov    ds:0x638160d6,eax
  42258b:	enter  0xc553,0xac
  42258f:	jb     0x42257f
  422591:	retf   0xc908
  422594:	xor    DWORD PTR [ebp+0x72bba94],edi
  42259a:	xchg   esi,edx
  42259c:	sahf   
  42259d:	jnp    0x422536
  42259f:	int    0x8d
  4225a1:	scas   eax,DWORD PTR es:[edi]
  4225a2:	cmp    BYTE PTR [ecx-0x1fb4ff6b],al
  4225a8:	mov    esp,edi
  4225aa:	outs   dx,DWORD PTR ds:[esi]
  4225ab:	mov    ah,0xaa
  4225ad:	imul   edx,DWORD PTR [edi],0x9a568dd3
  4225b3:	jne    0x42260c
  4225b5:	push   es
  4225b6:	arpl   WORD PTR [eax*8+0x22fef282],sp
  4225bd:	adc    WORD PTR [ecx-0x19],di
  4225c1:	int3   
  4225c2:	adc    al,0xdd
  4225c4:	push   esp
  4225c5:	xor    al,0x10
  4225c7:	jo     0x422635
  4225c9:	push   esp
  4225ca:	sbb    dl,BYTE PTR [ecx-0x80]
  4225cd:	xchg   edx,eax
  4225ce:	sti    
  4225cf:	nop
  4225d0:	cld    
  4225d1:	stos   DWORD PTR es:[edi],eax
  4225d2:	cmp    bh,BYTE PTR [ebp+0x6292ba40]
  4225d8:	cwde   
  4225d9:	cli    
  4225da:	mov    al,ds:0x8c18f1e3
  4225df:	push   ebx
  4225e0:	jns    0x42261a
  4225e2:	pop    ss
  4225e3:	push   eax
  4225e4:	mov    ds:0x5fa9b1a8,al
  4225e9:	daa    
  4225ea:	(bad)  
  4225ec:	imul   edx,ebx,0x278729ad
  4225f2:	mov    ebp,DWORD PTR [edi-0x4337fb3b]
  4225f8:	lock sbb eax,0xf415199f
  4225fe:	sahf   
  4225ff:	mov    ebx,0x8151222
  422604:	es call 0x84555d30
  42260a:	hlt    
  42260b:	test   al,0xcb
  42260d:	mov    ah,0xf0
  42260f:	les    ebx,FWORD PTR [ebx]
  422611:	xchg   esi,eax
  422612:	xchg   edi,eax
  422613:	sub    BYTE PTR fs:[ebp+0x5d],dl
  422617:	xor    ebx,DWORD PTR [ebx]
  422619:	hlt    
  42261a:	test   BYTE PTR [edx],ch
  42261c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42261e:	imul   esi,DWORD PTR [edx+ecx*1-0x57702ccf],0xee571aeb
  422629:	cmp    ah,dh
  42262b:	xor    esi,ebx
  42262d:	mov    esi,0x76e6a4d3
  422632:	jb     0x422683
  422634:	push   ecx
  422635:	xor    edi,esp
  422637:	sub    al,0xa5
  422639:	jg     0x4225f4
  42263b:	jecxz  0x42261d
  42263d:	pop    edi
  42263e:	inc    edi
  422640:	cmp    cl,BYTE PTR [ebp+0x79]
  422643:	push   0x79
  422645:	push   0xa30daa3c
  42264a:	cli    
  42264b:	rcl    DWORD PTR [ebp+eiz*1-0x5b3d3c01],0xd7
  422653:	mov    edi,DWORD PTR [eax]
  422655:	int    0x28
  422657:	shl    DWORD PTR ds:0x24451a0a,cl
  42265d:	or     BYTE PTR [esi-0x73b3aafc],dl
  422663:	sub    edi,DWORD PTR [eax+0x71]
  422666:	fsubr  QWORD PTR [edx+0x12]
  422669:	das    
  42266a:	jp     0x42262a
  42266c:	pop    ds
  42266d:	icebp  
  42266e:	inc    edx
  42266f:	push   esi
  422670:	pusha  
  422671:	pop    esi
  422672:	dec    ebp
  422673:	add    DWORD PTR [ebp-0x313d85d8],eax
  422679:	xchg   ebp,eax
  42267a:	cmp    edi,DWORD PTR [ecx-0x72]
  42267d:	addr16 and bh,cl
  422680:	fsub   QWORD PTR [ecx-0x16371a7b]
  422686:	pop    edi
  422687:	ds jge 0x4226d8
  42268a:	and    DWORD PTR [edx+0x6e],eax
  42268d:	adc    BYTE PTR [ebp+0x63017dc1],0x9b
  422694:	cmp    DWORD PTR [esi+0x45],0x9206f42f
  42269b:	cmc    
  42269c:	xchg   ebx,eax
  42269d:	and    BYTE PTR [edi-0x50],cl
  4226a0:	daa    
  4226a1:	shl    DWORD PTR [eax],1
  4226a3:	or     ch,BYTE PTR [edx+esi*4-0x21a9c3c]
  4226aa:	fwait
  4226ab:	dec    ebx
  4226ac:	sub    DWORD PTR [edi-0x7c],ebx
  4226af:	cli    
  4226b0:	fistp  DWORD PTR [eax-0x3d]
  4226b3:	and    eax,0x7c6720fa
  4226b8:	add    al,BYTE PTR [esi+0x54]
  4226bb:	add    esi,ebp
  4226bd:	test   edx,ecx
  4226bf:	xchg   ebx,eax
  4226c0:	jl     0x42267e
  4226c2:	jnp    0x422688
  4226c4:	adc    bh,0x10
  4226c7:	jecxz  0x422740
  4226c9:	adc    dh,cl
  4226cb:	lds    esp,FWORD PTR [ebp+0x56c16d54]
  4226d1:	xor    cl,BYTE PTR [edx+0x55]
  4226d4:	push   ebx
  4226d5:	jb     0x4226c7
  4226d7:	mov    ebx,0x705fb178
  4226dc:	mov    ds:0x1c73f251,al
  4226e1:	and    eax,0x65bd6582
  4226e6:	add    esp,DWORD PTR [edx]
  4226e8:	in     al,dx
  4226e9:	adc    esi,esi
  4226eb:	cwde   
  4226ec:	sbb    eax,0xfa23d690
  4226f1:	pop    es
  4226f2:	jmp    0x1c14:0x7a1caf5d
  4226f9:	mov    cl,0xfd
  4226fb:	inc    ecx
  4226fc:	or     eax,0x15526a29
  422701:	push   esp
  422702:	and    al,0xd5
  422704:	ret    0x7e64
  422707:	inc    ebx
  422708:	mov    esi,0xbddff670
  42270d:	ret    0xa758
  422710:	or     al,0x60
  422712:	mov    esp,0x6a168a87
  422717:	add    dl,BYTE PTR [ecx]
  422719:	pop    es
  42271a:	jnp    0x42276e
  42271c:	push   ebp
  42271d:	cmp    al,0x43
  42271f:	xchg   esp,eax
  422720:	mov    dh,0x9c
  422722:	mov    cl,0xd6
  422724:	nop
  422725:	ficom  WORD PTR [eax-0x10]
  422728:	loop   0x42279c
  42272a:	xchg   ecx,eax
  42272b:	xchg   ebx,eax
  42272c:	push   edi
  42272d:	or     DWORD PTR [eax-0x6c],esp
  422730:	xchg   edx,eax
  422731:	cld    
  422732:	out    0x20,al
  422734:	nop
  422735:	scas   al,BYTE PTR es:[edi]
  422736:	or     dl,BYTE PTR [ecx-0x73]
  422739:	xchg   edi,eax
  42273a:	inc    eax
  42273b:	in     al,0xa9
  42273d:	popa   
  42273e:	loope  0x42276c
  422740:	sbb    eax,edx
  422742:	bound  esi,QWORD PTR [ebp+eiz*1-0x72cceafa]
  422749:	(bad)  
  42274a:	jae    0x422727
  42274c:	or     al,0x3c
  42274e:	mov    fs,edx
  422750:	comiss xmm1,DWORD PTR [edi+0x244ba7ba]
  422757:	cmp    BYTE PTR ds:0x3a4a91cc,0x23
  42275e:	mov    WORD PTR [edi],ss
  422760:	mov    eax,0x35968c21
  422765:	pxor   mm1,QWORD PTR [edx+0x6d266d09]
  42276c:	inc    esi
  42276d:	or     edx,DWORD PTR [edx+0x5c]
  422770:	imul   edx,DWORD PTR [eax+0x16cf3213],0x2
  422777:	and    al,0xf4
  422779:	cmp    eax,0xba046423
  42277e:	jecxz  0x4227c8
  422780:	dec    ecx
  422781:	jle    0x422741
  422783:	test   al,0xdd
  422785:	jmp    0x42270d
  422787:	rol    BYTE PTR [edi+0x587abd93],1
  42278d:	inc    esi
  42278e:	in     eax,dx
  42278f:	pop    ebp
  422790:	lea    edx,[ebx]
  422792:	out    dx,al
  422793:	mov    ah,0x5d
  422795:	jb     0x42272b
  422797:	cmp    DWORD PTR [esi-0x576de40f],ebx
  42279d:	mov    edx,0x3aa80594
  4227a2:	cwde   
  4227a3:	mov    dh,0x27
  4227a5:	push   ds
  4227a6:	lods   eax,DWORD PTR ds:[esi]
  4227a7:	lea    edx,[edi]
  4227a9:	lods   eax,DWORD PTR ds:[esi]
  4227aa:	je     0x42275a
  4227ac:	mov    esp,0x1edf7d8e
  4227b1:	pop    ebp
  4227b2:	std    
  4227b3:	pop    eax
  4227b4:	dec    esp
  4227b5:	ja     0x4227e2
  4227b7:	mov    WORD PTR [esp+edi*4+0xdd9a671],?
  4227be:	imul   DWORD PTR [eax+0x221ebc07]
  4227c4:	cmp    ebx,DWORD PTR [eax+eax*1]
	...
  4227cf:	add    BYTE PTR [eax],al
  4227d1:	add    BYTE PTR [edx],dl
  4227d3:	fsub   DWORD PTR [ebx+0x72]
  4227d6:	jmp    0x4227d3
  4227d8:	adc    edi,eax
  4227da:	sub    edi,DWORD PTR [ebx+0xc0f88f7]
  4227e0:	inc    eax
  4227e1:	das    
  4227e2:	cmp    bl,BYTE PTR [ebx+0x32c0001]
  4227e8:	add    BYTE PTR [eax],al
  4227ea:	lahf   
  4227eb:	xchg   edx,eax
  4227ec:	ss dec edi
  4227ee:	sbb    BYTE PTR ds:0x6f8e5a89,0xa2
  4227f5:	and    BYTE PTR [esi],ch
  4227f7:	xchg   ebp,eax
  4227f8:	and    ah,dl
  4227fa:	pushf  
  4227fb:	pop    ebp
  4227fc:	retf   0xe159
  4227ff:	sbb    bl,BYTE PTR [ecx-0x3e5ab489]
  422805:	(bad)  
  422806:	hlt    
  422807:	mov    al,ds:0x2aab51aa
  42280c:	shr    BYTE PTR [ecx-0x10],1
  42280f:	lods   al,BYTE PTR ds:[esi]
  422810:	mov    ecx,0x30a7459f
  422815:	out    0x9,eax
  422817:	nop
  422818:	xchg   ebx,eax
  422819:	mov    edx,DWORD PTR [ecx+eiz*4-0x290d1fc5]
  422820:	and    dh,BYTE PTR [ebp+0xbfcaa9b]
  422826:	shl    ebp,cl
  422828:	push   0xe9b37afc
  42282d:	adc    cl,BYTE PTR [esi]
  42282f:	cli    
  422830:	adc    esp,DWORD PTR [eax-0x55621b39]
  422836:	jg     0x42286c
  422838:	rol    BYTE PTR [eax],0x65
  42283b:	inc    ebx
  42283c:	repnz add ebp,DWORD PTR [ecx-0x41]
  422840:	std    
  422841:	cdq    
  422842:	cmp    eax,0x8760eb4f
  422847:	inc    ebp
  422848:	(bad)  
  422849:	and    BYTE PTR [ebx+0x320b9366],cl
  42284f:	rol    DWORD PTR [ebp+ebx*2-0x65317b80],1
  422856:	sbb    BYTE PTR [ecx],0x33
  422859:	sub    edi,edi
  42285b:	or     DWORD PTR [esi+0x60],ebp
  42285e:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  422860:	pop    edx
  422861:	jl     0x42286f
  422863:	je     0x42288b
  422865:	add    DWORD PTR [esi+0x5cc00a75],esi
  42286b:	mov    eax,ds:0xed046a73
  422870:	popf   
  422871:	adc    eax,esi
  422873:	les    ebp,FWORD PTR [ecx-0x35cd20e]
  422879:	mov    ds:0x94791523,eax
  42287e:	aaa    
  42287f:	int3   
  422880:	les    esi,FWORD PTR [edx]
  422882:	in     al,0x3c
  422884:	repz daa 
  422886:	xchg   DWORD PTR [ecx+0x59],ebx
  422889:	out    0x2d,eax
  42288b:	or     al,0x41
  42288d:	shr    BYTE PTR [esi],0xf1
  422890:	out    0xb6,eax
  422892:	pop    es
  422893:	(bad)  
  422894:	in     al,dx
  422895:	pop    edi
  422896:	jmp    0xe6c687f
  42289b:	pop    ebp
  42289c:	nop
  42289d:	and    eax,0xa8f2f9f
  4228a2:	pop    ebp
  4228a3:	pop    es
  4228a4:	stos   DWORD PTR es:[edi],eax
  4228a5:	ror    BYTE PTR [ebp-0x4e2b2b98],1
  4228ab:	int    0x7c
  4228ad:	out    0xe8,eax
  4228af:	adc    eax,0x1118f55b
  4228b4:	mov    al,ds:0x9c79b159
  4228b9:	mov    al,ds:0xa60a97b1
  4228be:	test   BYTE PTR [edx+0x2fb76ad7],bh
  4228c4:	neg    DWORD PTR [esi+0x203e7d3a]
  4228ca:	div    ah
  4228cc:	stos   BYTE PTR es:[edi],al
  4228cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ce:	xchg   edx,eax
  4228cf:	push   ss
  4228d0:	sahf   
  4228d1:	xor    edi,DWORD PTR [edx+0x76f46da1]
  4228d7:	mov    ebp,0xee12b3f8
  4228dc:	cmovno eax,DWORD PTR [eax-0xb]
  4228e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228e1:	sub    eax,0x62196d62
  4228e6:	push   cs
  4228e7:	pop    edi
  4228e8:	into   
  4228e9:	inc    ecx
  4228ea:	xchg   edx,esi
  4228ec:	pop    edx
  4228ed:	or     al,0x61
  4228ef:	je     0x4228d9
  4228f1:	mov    bh,0xdf
  4228f3:	push   ecx
  4228f4:	add    ecx,DWORD PTR [eax-0x19df3261]
  4228fa:	inc    edx
  4228fb:	sub    al,0x24
  4228fd:	leave  
  4228fe:	pop    edi
  4228ff:	inc    ecx
  422900:	out    0x11,al
  422902:	pop    edx
  422903:	mov    ds:0xd34cc858,al
  422908:	pop    esp
  422909:	push   0xffffff90
  42290b:	repz and dl,BYTE PTR [eax+edx*2+0x7a7c94c3]
  422913:	test   eax,0x7887a0a4
  422918:	iret   
  422919:	pop    edx
  42291a:	sub    al,0x75
  42291c:	(bad)  
  42291d:	retf   
  42291e:	stc    
  42291f:	arpl   sp,cx
  422921:	test   DWORD PTR [edx],ebx
  422923:	mov    BYTE PTR [eax-0x6a],dl
  422926:	stos   BYTE PTR es:[edi],al
  422927:	lods   eax,DWORD PTR ds:[esi]
  422928:	cmp    esi,DWORD PTR [edx+eiz*4]
  42292b:	xchg   esp,eax
  42292c:	fwait
  42292d:	pop    eax
  42292e:	jecxz  0x4228c7
  422930:	dec    DWORD PTR [edi-0x7bb495dc]
  422936:	mov    esp,0x813ac1e6
  42293b:	neg    BYTE PTR [esi]
  42293d:	outs   dx,BYTE PTR ds:[esi]
  42293e:	mov    dh,0xaf
  422940:	aad    0x8e
  422942:	inc    ebp
  422943:	or     al,0x61
  422945:	pop    es
  422946:	inc    eax
  422947:	xchg   ebp,eax
  422948:	cdq    
  422949:	ins    DWORD PTR es:[edi],dx
  42294a:	and    ebp,DWORD PTR [edx+0x7114dc8e]
  422950:	jbe    0x422931
  422952:	push   ebx
  422953:	mov    WORD PTR [edi-0x4f],?
  422956:	imul   ecx,esi,0xffffffb8
  422959:	lods   al,BYTE PTR ds:[esi]
  42295a:	adc    eax,0xe8d4ab8e
  42295f:	test   edi,0xd0947fd7
  422965:	mov    ah,0xe8
  422967:	xchg   BYTE PTR [esi],cl
  422969:	mov    ecx,0x70141b6e
  42296e:	push   0x1a7bff0
  422973:	sahf   
  422974:	dec    ebp
  422975:	jne    0x4229a5
  422977:	inc    ebp
  422978:	cmp    eax,0x4520c6f2
  42297d:	mov    dl,BYTE PTR [ebx]
  42297f:	scas   al,BYTE PTR es:[edi]
  422980:	add    al,0x4d
  422982:	mov    es,WORD PTR [edx-0x5a5c35be]
  422988:	loopne 0x4229e4
  42298a:	xchg   ebp,eax
  42298b:	xchg   ecx,eax
  42298c:	hlt    
  42298d:	fdiv   st,st(2)
  42298f:	icebp  
  422990:	aaa    
  422991:	dec    eax
  422992:	mov    eax,0x9b60a3b5
  422997:	fsub   DWORD PTR [eax-0x16]
  42299a:	js     0x422966
  42299c:	sar    BYTE PTR [ecx-0xa],0x7a
  4229a0:	mov    al,0x48
  4229a2:	jp     0x42297c
  4229a4:	push   0xc606a460
  4229a9:	fstp   QWORD PTR [ebx]
  4229ab:	sub    al,0xec
  4229ad:	(bad)  
  4229af:	into   
  4229b0:	clc    
  4229b1:	cmp    DWORD PTR [ebp+0x17c66e30],0xffffff9c
  4229b8:	mov    edx,0x430b4d7f
  4229bd:	mov    edi,0x80dd2e37
  4229c2:	ins    BYTE PTR es:[edi],dx
  4229c3:	es add al,al
  4229c6:	popa   
  4229c7:	les    ecx,FWORD PTR [ebx+0x4]
  4229ca:	arpl   WORD PTR [edi],di
  4229cc:	(bad)  
  4229cd:	pop    esi
  4229ce:	pop    ss
  4229cf:	pushf  
  4229d0:	pop    ebx
  4229d1:	(bad)  
  4229d2:	mov    edx,0x7caec20e
  4229d7:	loopne 0x422963
  4229d9:	push   0x390204ae
  4229de:	xchg   edi,eax
  4229df:	popf   
  4229e0:	fild   WORD PTR [ebp+0x73]
  4229e3:	ja     0x4229d3
  4229e5:	sub    ebx,edi
  4229e7:	adc    ch,BYTE PTR [eax+ebx*2+0x516a0441]
  4229ee:	xchg   edx,eax
  4229ef:	enter  0x48dd,0xe4
  4229f3:	inc    edi
  4229f4:	xor    bl,BYTE PTR [ebx-0x374f2b3]
  4229fa:	imul   eax,DWORD PTR [ecx+ebp*1+0x6aace73b],0x10
  422a02:	add    edx,edi
  422a04:	mov    esi,DWORD PTR ds:0x8d7ae53d
  422a0a:	imul   esp,DWORD PTR [edx+0x54c7b863],0x5ce70ca3
  422a14:	(bad)  
  422a15:	repnz xchg ebx,eax
  422a17:	push   0x40
  422a19:	outs   dx,BYTE PTR ds:[esi]
  422a1a:	xchg   esp,eax
  422a1b:	push   ebp
  422a1c:	fcmovnb st,st(4)
  422a1e:	inc    esi
  422a1f:	adc    DWORD PTR [esi],edi
  422a21:	inc    eax
  422a22:	push   ebx
  422a23:	aas    
  422a24:	mov    DWORD PTR [esi+0x304716b5],esi
  422a2a:	sub    al,BYTE PTR [eax+0x23]
  422a2d:	stc    
  422a2e:	xchg   ebp,eax
  422a2f:	xor    al,al
  422a31:	mov    esp,edi
  422a33:	xchg   edx,eax
  422a34:	imul   ebp,DWORD PTR [ecx],0x39958bc3
  422a3a:	and    eax,0xe727ac65
  422a3f:	mov    dh,0x43
  422a41:	ficom  DWORD PTR [ecx-0x3342eaba]
  422a47:	mov    cl,0x45
  422a49:	ja     0x422a0f
  422a4b:	xor    eax,0x7254fe4b
  422a50:	rol    BYTE PTR [esi],0xd5
  422a53:	(bad)  
  422a55:	pcmpgtb mm6,mm7
  422a58:	fs pop ds
  422a5a:	ins    DWORD PTR es:[edi],dx
  422a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a5c:	push   ss
  422a5d:	adc    al,0x23
  422a5f:	and    bl,dh
  422a61:	and    BYTE PTR [esp+eax*2+0x795747b1],0x24
  422a69:	enter  0xf34d,0x9c
  422a6d:	ror    DWORD PTR [ebp+0x3e],cl
  422a70:	cs int3 
  422a72:	sahf   
  422a73:	sub    esp,DWORD PTR ds:0x123d2a72
  422a79:	cmp    dh,0x13
  422a7c:	rol    ebx,cl
  422a7e:	lock cmp dh,bl
  422a81:	xor    ah,dl
  422a83:	outs   dx,DWORD PTR ds:[esi]
  422a84:	fwait
  422a85:	inc    esi
  422a86:	loope  0x422aed
  422a88:	or     bl,BYTE PTR [ebx-0x6b]
  422a8b:	shl    BYTE PTR [edi-0xd],cl
  422a8e:	stc    
  422a8f:	jae    0x422a23
  422a91:	push   edi
  422a92:	rol    ebp,cl
  422a94:	and    eax,0xe3d7545
  422a99:	ins    BYTE PTR es:[edi],dx
  422a9a:	sub    al,al
  422a9c:	and    BYTE PTR [esi+0x9],bl
  422a9f:	imul   DWORD PTR [eax]
  422aa1:	popf   
  422aa2:	hlt    
  422aa3:	mov    bl,0x60
  422aa5:	aaa    
  422aa6:	and    al,dl
  422aa8:	test   ah,cl
  422aaa:	mov    al,0xf6
  422aac:	cmp    edx,ecx
  422aae:	loope  0x422adc
  422ab0:	and    DWORD PTR ds:0x1e56c566,ecx
  422ab6:	push   edi
  422ab7:	ins    BYTE PTR es:[edi],dx
  422ab8:	sub    eax,0x20ada085
  422abd:	mov    ds:0xdc71d975,eax
  422ac2:	out    dx,al
  422ac3:	or     dl,dl
  422ac5:	retf   
  422ac6:	pop    es
  422ac7:	retf   0x70d
  422aca:	push   ss
  422acb:	or     eax,0x4b45bc6e
  422ad0:	mov    al,0xc6
  422ad2:	add    eax,0xd6d53048
  422ad7:	and    eax,0xe72fbf1e
  422adc:	ins    BYTE PTR es:[edi],dx
  422add:	xchg   ebx,eax
  422ade:	jno    0x422a75
  422ae0:	mov    eax,ds:0x5ad64cc8
  422ae5:	(bad)  
  422ae6:	mov    dh,0x54
  422ae8:	mov    WORD PTR [esi-0x5e],?
  422aeb:	xor    eax,0x5befbc28
  422af0:	sub    al,0x1c
  422af2:	fmul   st,st(5)
  422af4:	daa    
  422af5:	ins    BYTE PTR es:[edi],dx
  422af6:	call   0xb41c:0xecc2681f
  422afd:	jo     0x422b74
  422aff:	jnp    0x422b33
  422b01:	inc    ecx
  422b02:	xor    dl,bl
  422b04:	push   edi
  422b05:	xchg   bh,al
  422b07:	push   edi
  422b08:	adc    DWORD PTR [ebx-0x68],ecx
  422b0b:	call   0x252a93a4
  422b10:	xchg   bh,cl
  422b12:	mov    ecx,esi
  422b14:	jmp    0x0:0x85
  422b1b:	add    BYTE PTR [eax],al
  422b1d:	add    BYTE PTR [eax],al
  422b1f:	add    BYTE PTR [eax],al
  422b21:	add    BYTE PTR [esi],cl
  422b23:	and    BYTE PTR [eax-0x404051c1],cl
  422b29:	xor    DWORD PTR [ebx+0x39289bd],edx
  422b2f:	ret    0x1f08
  422b32:	data16 sahf 
  422b34:	add    DWORD PTR [eax],eax
  422b36:	sub    al,0x3
  422b38:	add    BYTE PTR [eax],al
  422b3a:	push   ss
  422b3b:	and    ah,cl
  422b3d:	repz xchg esp,eax
  422b3f:	cmp    DWORD PTR [esi-0x57],0xe83fb5f2
  422b46:	ins    BYTE PTR es:[edi],dx
  422b47:	int3   
  422b48:	sbb    BYTE PTR [eax+0x20],ch
  422b4b:	lods   eax,DWORD PTR ds:[esi]
  422b4c:	mov    DWORD PTR ds:0xa19323f6,ebp
  422b52:	sbb    dl,bl
  422b54:	adc    eax,DWORD PTR gs:[ebx]
  422b57:	shr    cl,1
  422b59:	push   edi
  422b5a:	aas    
  422b5b:	mov    esi,0xaffd6da
  422b60:	inc    edi
  422b61:	aaa    
  422b62:	ss es push cs
  422b65:	mov    al,0x31
  422b67:	sbb    ah,bh
  422b69:	es mov cl,0x69
  422b6c:	mov    ds:0xf460de27,al
  422b71:	push   ebx
  422b72:	imul   edi,DWORD PTR [edi+0x5d42d292],0x9793b803
  422b7c:	call   0x628b:0x815d402d
  422b83:	scas   eax,DWORD PTR es:[edi]
  422b84:	cmp    cl,bh
  422b86:	mov    cl,0xc0
  422b88:	inc    esi
  422b89:	fiadd  DWORD PTR [ecx]
  422b8b:	push   esp
  422b8c:	pop    DWORD PTR [edx]
  422b8e:	out    0x7a,eax
  422b90:	adc    cl,BYTE PTR [esi-0x33]
  422b93:	cs into 
  422b95:	mov    al,ds:0x79b6c2ef
  422b9a:	xor    dh,BYTE PTR [eax-0x4fbc9de9]
  422ba0:	pop    ss
  422ba1:	add    eax,DWORD PTR [ebx-0xf]
  422ba4:	push   edx
  422ba5:	dec    ecx
  422ba6:	aam    0xf7
  422ba8:	out    dx,eax
  422ba9:	jo     0x422b8a
  422bab:	(bad)  
  422bac:	rcr    BYTE PTR [ebx],0xdd
  422baf:	adc    dh,BYTE PTR [eax]
  422bb1:	fstp   QWORD PTR [eax+eax*2+0x52d2ee17]
  422bb8:	test   BYTE PTR [edi],bl
  422bba:	or     BYTE PTR [esi],ch
  422bbc:	cmp    cl,BYTE PTR [ecx-0x29]
  422bbf:	mov    bl,0xa9
  422bc1:	jo     0x422bc2
  422bc3:	test   DWORD PTR [ecx+0x1a03b03f],ebx
  422bc9:	pop    ebx
  422bca:	shl    DWORD PTR ds:0x40160da6,cl
  422bd0:	jne    0x422b71
  422bd2:	or     al,0x43
  422bd4:	sub    ebx,DWORD PTR [edi-0x1]
  422bd7:	add    DWORD PTR [ebp-0x6402cde0],esi
  422bdd:	sub    al,0x12
  422bdf:	in     eax,dx
  422be0:	out    dx,al
  422be1:	push   0xb76f3324
  422be6:	inc    esi
  422be7:	rol    BYTE PTR [ebp+ebp*8-0x480043ae],0x1
  422bef:	pop    eax
  422bf0:	scas   eax,DWORD PTR es:[edi]
  422bf1:	leave  
  422bf2:	adc    BYTE PTR [edx+0x5c1a9360],dl
  422bf8:	scas   al,BYTE PTR es:[edi]
  422bf9:	fisttp DWORD PTR [edx+0x66d1fd2b]
  422bff:	lods   eax,DWORD PTR ds:[esi]
  422c00:	add    esp,ebx
  422c02:	jle    0x422bb3
  422c04:	add    ecx,DWORD PTR [eax-0x10]
  422c07:	pop    edi
  422c08:	daa    
  422c09:	mov    DWORD PTR [esi-0x46069d3a],eax
  422c0f:	arpl   WORD PTR [edx-0x439d4bba],dx
  422c15:	es (bad) 
  422c17:	loopne 0x422c61
  422c19:	scas   eax,DWORD PTR es:[edi]
  422c1a:	push   eax
  422c1b:	mov    eax,0x37dab3e9
  422c20:	mov    edx,DWORD PTR [ebp+0x47]
  422c23:	jbe    0x422c2b
  422c25:	jb     0x422bfe
  422c27:	push   ebx
  422c28:	stos   BYTE PTR es:[edi],al
  422c29:	sbb    esp,DWORD PTR [ebx+edx*4-0x32]
  422c2d:	ret    0xb511
  422c30:	mov    dh,0xb1
  422c32:	or     ebx,DWORD PTR [ecx]
  422c34:	push   ebx
  422c35:	test   dl,0x5c
  422c38:	push   eax
  422c39:	sbb    eax,0xd8cd77fc
  422c3e:	mov    DWORD PTR [eax],0xde0e1cdb
  422c44:	std    
  422c45:	or     al,0xc2
  422c47:	div    DWORD PTR [edi-0x5]
  422c4a:	mov    dh,0x25
  422c4c:	cs mov edx,0xf622d03e
  422c52:	cs dec esp
  422c54:	sub    dh,ah
  422c56:	iret   
  422c57:	je     0x422cd7
  422c59:	xchg   esp,eax
  422c5a:	imul   ebp,DWORD PTR [ebx+0x78],0xffffffea
  422c5e:	stc    
  422c5f:	pop    esp
  422c60:	lock adc al,bh
  422c63:	cmp    dh,BYTE PTR [ebx+0x6881e00d]
  422c69:	scas   al,BYTE PTR es:[edi]
  422c6a:	(bad)  
  422c6b:	fs mov ch,0x16
  422c6e:	mov    cl,dl
  422c70:	sbb    DWORD PTR [edi+ebx*2+0x27],ebx
  422c74:	xchg   edi,eax
  422c75:	xor    DWORD PTR [ebx-0x7eea8d],0x7a54719f
  422c7f:	dec    esi
  422c80:	adc    DWORD PTR [esi],0x47
  422c83:	nop
  422c84:	out    0x5b,al
  422c86:	push   esp
  422c87:	je     0x422ca3
  422c89:	stc    
  422c8a:	inc    ecx
  422c8b:	add    BYTE PTR [edi-0x4702de9d],0x46
  422c92:	xor    eax,0x2cc90be8
  422c97:	mov    ds:0xa8212d2d,eax
  422c9c:	test   eax,0xec7b369a
  422ca1:	js     0x422c93
  422ca3:	inc    ebx
  422ca4:	loope  0x422cb6
  422ca6:	in     al,0x4e
  422ca8:	das    
  422ca9:	push   DWORD PTR [edi+0x60]
  422cac:	loopne 0x422c3a
  422cae:	jbe    0x422cef
  422cb0:	rcl    eax,1
  422cb2:	push   ds
  422cb3:	mov    ?,WORD PTR ds:0x9e749ab1
  422cb9:	xchg   DWORD PTR [edi+0x55],ebx
  422cbc:	mov    WORD PTR [eax],gs
  422cbe:	dec    edi
  422cbf:	ret    
  422cc0:	ins    DWORD PTR es:[edi],dx
  422cc1:	pop    esi
  422cc2:	test   BYTE PTR [eax+0x3589b110],0xf3
  422cc9:	test   ebx,ebx
  422ccb:	pop    ds
  422ccc:	fwait
  422ccd:	sub    al,cl
  422ccf:	jae    0x422cdd
  422cd1:	or     ebp,DWORD PTR [ebp+0x12103054]
  422cd7:	mul    DWORD PTR [esi+0x34]
  422cda:	test   eax,0x7b369433
  422cdf:	jp     0x308556e0
  422ce5:	mov    ds:0xc143a9bf,eax
  422cea:	cmp    cl,BYTE PTR [edi-0x45]
  422ced:	xor    edi,esi
  422cef:	jb     0x422c7b
  422cf1:	xor    ebx,DWORD PTR [ebp+0x157f2e22]
  422cf7:	or     al,0x80
  422cf9:	sbb    al,BYTE PTR [edi-0x4c]
  422cfc:	std    
  422cfd:	push   ss
  422cfe:	repnz iret 
  422d00:	jg     0x422d01
  422d02:	push   eax
  422d03:	and    BYTE PTR [ecx-0x45],bl
  422d06:	call   0x55f5b32
  422d0b:	jmp    0x6bb01740
  422d10:	stos   DWORD PTR es:[edi],eax
  422d11:	and    DWORD PTR [edx],0x28
  422d14:	jmp    0x422d50
  422d16:	fisttp DWORD PTR [ebx]
  422d18:	ret    0x4e4a
  422d1b:	inc    esp
  422d1c:	push   edi
  422d1d:	js     0x422d81
  422d1f:	push   0x6a805f23
  422d24:	aaa    
  422d25:	xchg   ebx,eax
  422d26:	mov    ah,0xf4
  422d28:	aad    0x21
  422d2a:	pop    esi
  422d2b:	inc    eax
  422d2c:	mov    ebp,0xf9adb0d1
  422d31:	mov    ds:0x27cdcfff,eax
  422d36:	xchg   edx,eax
  422d37:	jecxz  0x422d81
  422d39:	mov    edi,0xe58ff852
  422d3e:	repz icebp 
  422d40:	cmp    ch,BYTE PTR [ebx]
  422d42:	jmp    0xaf755087
  422d47:	jnp    0x422cf6
  422d49:	add    BYTE PTR [ecx-0x30],ah
  422d4c:	push   ds
  422d4d:	addr16 xchg ebp,edi
  422d50:	xor    DWORD PTR [ecx-0x35],eax
  422d53:	mov    al,0x5b
  422d55:	mov    edi,0xeb0a7bd1
  422d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d5b:	sub    BYTE PTR [ecx+0x48f8ad46],0xad
  422d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d63:	adc    ecx,DWORD PTR [eax-0x1b]
  422d66:	inc    eax
  422d67:	sahf   
  422d68:	and    al,0xe6
  422d6a:	mov    ebx,0x5e021523
  422d6f:	mov    esi,0xd8d9f21f
  422d74:	out    0x30,eax
  422d76:	push   cs
  422d77:	mov    al,0xbf
  422d79:	(bad)  [edx-0x1f5aacb0]
  422d7f:	mov    ecx,0xc39519e9
  422d84:	fistp  QWORD PTR [ebp+ebx*4+0x43]
  422d88:	jae    0x422d37
  422d8a:	bound  ebx,QWORD PTR [esi]
  422d8c:	std    
  422d8d:	outs   dx,DWORD PTR ds:[esi]
  422d8e:	add    esp,DWORD PTR [ecx]
  422d90:	jne    0x422df0
  422d92:	pusha  
  422d93:	lds    ecx,FWORD PTR [esi-0x7194984]
  422d99:	mov    al,0x1f
  422d9b:	xor    ebp,DWORD PTR [ebp-0x70]
  422d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d9f:	in     eax,dx
  422da0:	ret    0x1da5
  422da3:	xchg   edx,eax
  422da4:	push   esi
  422da5:	cs sbb eax,0x8523b5f8
  422dab:	jnp    0x422e14
  422dad:	scas   al,BYTE PTR es:[edi]
  422dae:	lahf   
  422daf:	repnz inc edx
  422db1:	(bad)  
  422db2:	mov    bh,0xcf
  422db4:	fwait
  422db5:	xor    eax,0xbd9b0c9d
  422dba:	jno    0x422d57
  422dbc:	out    dx,al
  422dbd:	ja     0x422d85
  422dbf:	pop    ds
  422dc0:	aas    
  422dc1:	or     ebx,DWORD PTR [ebx+0x2d]
  422dc4:	push   ebx
  422dc5:	ins    BYTE PTR es:[edi],dx
  422dc6:	jmp    0xb51c:0x6170b129
  422dcd:	dec    DWORD PTR [eax]
  422dcf:	sahf   
  422dd0:	sar    al,cl
  422dd2:	imul   ebp,DWORD PTR [edx+ecx*2],0xa6d8a10f
  422dd9:	pop    edi
  422dda:	icebp  
  422ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ddc:	jb     0x422e5d
  422dde:	sbb    esp,eax
  422de0:	dec    eax
  422de1:	adc    bh,0xa3
  422de4:	(bad)  
  422de5:	je     0x422e18
  422de7:	loopne 0x422e3c
  422de9:	push   ebp
  422dea:	mov    dh,0x4
  422dec:	sub    al,0x91
  422dee:	nop
  422def:	je     0x422e24
  422df1:	jns    0x422e4a
  422df3:	in     al,0xef
  422df5:	mov    BYTE PTR [esi+0x269ec2a9],ch
  422dfb:	cmp    al,0x82
  422dfd:	mov    bh,0xe9
  422dff:	xchg   edx,eax
  422e00:	and    DWORD PTR [ebx+0x15],edx
  422e03:	pop    edx
  422e04:	or     BYTE PTR [esi+ebp*2-0x52],al
  422e08:	sbb    BYTE PTR [ebx],ch
  422e0a:	cmp    ebp,DWORD PTR [edx]
  422e0c:	call   0x366:0xe3fc6ce7
  422e13:	test   eax,esi
  422e15:	adc    cl,BYTE PTR [esp+edi*4]
  422e18:	push   ss
  422e19:	ss nop
  422e1b:	out    0x27,eax
  422e1d:	loop   0x422da9
  422e1f:	or     ebp,edi
  422e21:	inc    ebp
  422e22:	es or  al,0x42
  422e25:	mov    esp,0x8a116c80
  422e2a:	test   DWORD PTR [edx-0x4718d3b0],eax
  422e30:	scas   al,BYTE PTR es:[edi]
  422e31:	cli    
  422e32:	ins    BYTE PTR es:[edi],dx
  422e33:	ins    BYTE PTR es:[edi],dx
  422e34:	or     eax,0x9b67728
  422e39:	outs   dx,BYTE PTR ds:[esi]
  422e3a:	dec    ebp
  422e3b:	sahf   
  422e3c:	cs add al,0xed
  422e3f:	js     0x422ead
  422e41:	or     eax,0x871cb1ce
  422e46:	jmp    FWORD PTR [edx-0x75]
  422e49:	jno    0x422e0b
  422e4b:	daa    
  422e4c:	fidiv  WORD PTR [edx-0x6852cfee]
  422e52:	lods   eax,DWORD PTR ds:[esi]
  422e53:	dec    esi
  422e54:	sbb    BYTE PTR [ebx-0x7ec13c4d],bh
  422e5a:	pop    ds
  422e5b:	add    BYTE PTR [edx+0x38],0xb4
  422e5f:	cmp    dh,BYTE PTR [ebp-0x61b588d5]
  422e65:	fld    QWORD PTR [eax]
	...
  422e6f:	add    BYTE PTR [eax],al
  422e71:	add    BYTE PTR [edi+edi*4+0x63],bl
  422e75:	push   eax
  422e76:	jecxz  0x422e54
  422e78:	jg     0x422e39
  422e7a:	popa   
  422e7b:	hlt    
  422e7c:	mov    esi,0x4837141d
  422e81:	cdq    
  422e82:	xchg   edx,eax
  422e83:	mov    eax,ds:0x32c0001
  422e88:	add    BYTE PTR [eax],al
  422e8a:	fadd   QWORD PTR [esi-0x764d4854]
  422e90:	mov    eax,ds:0x7dbc1164
  422e95:	mov    al,ch
  422e97:	arpl   WORD PTR [ecx+0x17c5acab],ax
  422e9d:	pop    edx
  422e9e:	scas   eax,DWORD PTR es:[edi]
  422e9f:	or     edx,esp
  422ea1:	or     al,0x7c
  422ea3:	int3   
  422ea4:	shl    BYTE PTR [eax-0x7b],0xd6
  422ea8:	fsubr  QWORD PTR [ebx]
  422eaa:	and    BYTE PTR [esi-0x22e30229],dl
  422eb0:	clc    
  422eb1:	or     cl,BYTE PTR [ebp-0x65]
  422eb4:	loopne 0x422efa
  422eb6:	adc    eax,0x14572899
  422ebb:	inc    ecx
  422ebc:	jns    0x422ebb
  422ebe:	dec    edx
  422ebf:	push   esi
  422ec0:	clc    
  422ec1:	arpl   WORD PTR [eax+0x9],sp
  422ec4:	cmp    ebp,DWORD PTR ds:0x55fdbf3c
  422eca:	shr    BYTE PTR [edi+esi*4],0xa4
  422ece:	mov    DWORD PTR [eax],0x9bc909f2
  422ed4:	mov    ds:0x1d7d85b0,al
  422ed9:	adc    DWORD PTR [edi],ebx
  422edb:	or     al,0xe7
  422edd:	mov    ebx,0x8a232550
  422ee2:	addr16 jle 0x422f29
  422ee5:	cmp    al,0xa9
  422ee7:	outs   dx,BYTE PTR ds:[esi]
  422ee8:	call   0xc6df2a0c
  422eed:	ds (bad) 
  422eef:	cmp    al,0x2e
  422ef1:	jp     0x422ee0
  422ef3:	das    
  422ef4:	push   esi
  422ef5:	gs dec ebp
  422ef7:	fsub   QWORD PTR [edx+0x6]
  422efa:	mov    dh,0x2f
  422efc:	mov    dh,0x6e
  422efe:	and    eax,DWORD PTR [eax]
  422f00:	test   BYTE PTR [edx],al
  422f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f03:	outs   dx,DWORD PTR ds:[esi]
  422f04:	xchg   esi,eax
  422f05:	int    0x71
  422f07:	sub    eax,0xceb44b4a
  422f0c:	xor    ah,cl
  422f0e:	cmp    al,0x27
  422f10:	cmp    eax,0xad65b62
  422f15:	lods   eax,DWORD PTR ds:[esi]
  422f16:	push   esi
  422f17:	leave  
  422f18:	sbb    al,BYTE PTR [ebp-0x21]
  422f1b:	sahf   
  422f1c:	xor    DWORD PTR [ebx+esi*1+0x4041dc64],edi
  422f23:	and    BYTE PTR [edi-0x78],ch
  422f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f27:	test   DWORD PTR [ebx],eax
  422f29:	out    0x6c,eax
  422f2b:	(bad)  
  422f2c:	leave  
  422f2d:	adc    eax,0xc727a33e
  422f32:	push   esi
  422f33:	in     al,dx
  422f34:	out    0xd5,eax
  422f36:	and    BYTE PTR [edi+0x64594bd7],0xbe
  422f3d:	stc    
  422f3e:	fcomip st,st(1)
  422f40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f41:	cmp    al,0x4b
  422f43:	sub    DWORD PTR [edx+ebx*4-0x778f1e42],edi
  422f4a:	jne    0x422f69
  422f4c:	pop    ebx
  422f4d:	mov    es,WORD PTR ds:0x2ed20534
  422f53:	sub    BYTE PTR [esi],bl
  422f55:	adc    al,0x2d
  422f57:	cli    
  422f58:	and    edx,DWORD PTR [eax+0x14]
  422f5b:	and    DWORD PTR [esi+0x3f],edi
  422f5e:	outs   dx,BYTE PTR ds:[esi]
  422f5f:	pop    ecx
  422f60:	cmp    eax,0x8650120
  422f65:	jg     0x422fd8
  422f67:	cmc    
  422f68:	pop    ss
  422f69:	adc    al,0x97
  422f6b:	and    al,0x47
  422f6d:	xor    al,0x8
  422f6f:	and    al,0xf6
  422f71:	mov    cl,0x7f
  422f73:	cmc    
  422f74:	cs in  al,dx
  422f76:	fcomp  st(6)
  422f78:	or     al,0x4d
  422f7a:	jnp    0x422f53
  422f7c:	loopne 0x422fbd
  422f7e:	inc    edx
  422f7f:	and    ah,BYTE PTR [ebx-0x2d]
  422f82:	rol    DWORD PTR [esi-0x3b6a90f2],0x7b
  422f89:	cmp    ch,ch
  422f8b:	adc    bh,BYTE PTR [edx+0x60d8f329]
  422f91:	aaa    
  422f92:	jge    0x422f8e
  422f94:	mov    al,0xac
  422f96:	jo     0x422ff9
  422f98:	int3   
  422f99:	sub    BYTE PTR [eax+eax*8+0x49],dh
  422f9d:	add    eax,0x72a00ed3
  422fa2:	(bad)  
  422fa3:	push   edx
  422fa4:	add    eax,0x9e261fe
  422fa9:	cmp    al,0xb8
  422fab:	pop    ecx
  422fac:	js     0x422fa6
  422fae:	out    0x30,eax
  422fb0:	test   al,0x89
  422fb2:	(bad)  
  422fb3:	out    dx,eax
  422fb4:	xlat   BYTE PTR ds:[ebx]
  422fb5:	mov    bh,0xb7
  422fb7:	(bad)
  422fba:	adc    BYTE PTR [esi-0x66],0xb7
  422fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fbf:	aas    
  422fc0:	dec    eax
  422fc1:	add    eax,0x1b9b3d89
  422fc6:	jne    0x422f5c
  422fc8:	(bad)  
  422fc9:	jbe    0x422fcc
  422fcb:	scas   eax,DWORD PTR es:[edi]
  422fcc:	fst    QWORD PTR [esi+0x7d]
  422fcf:	in     eax,0xe8
  422fd1:	lahf   
  422fd2:	adc    eax,0x3fcb293d
  422fd7:	out    0xf4,eax
  422fd9:	dec    ecx
  422fda:	pop    esi
  422fdb:	pop    ebx
  422fdc:	dec    ebp
  422fdd:	in     al,dx
  422fde:	push   ebx
  422fdf:	je     0x422f79
  422fe1:	out    dx,al
  422fe2:	rcr    DWORD PTR [ebp+0x271cf453],1
  422fe8:	je     0x423042
  422fea:	mov    ebp,?
  422fec:	push   ds
  422fed:	(bad)  
  422fee:	(bad)  
  422fef:	and    eax,0xba6877cc
  422ff4:	lahf   
  422ff5:	clc    
  422ff6:	fisttp WORD PTR [esi]
  422ff8:	jp     0x422fa2
  422ffa:	cmc    
  422ffb:	cmp    bl,bh
  422ffd:	cs loope 0x422fd1
  423000:	or     cl,BYTE PTR [esi+0x21]
  423003:	pop    ebp
  423004:	ins    BYTE PTR es:[edi],dx
  423005:	popa   
  423006:	mov    esp,0x58a37175
  42300b:	pop    eax
  42300c:	mov    BYTE PTR [eax-0x5],dl
  42300f:	mov    ebp,0x39780dbc
  423014:	ficomp WORD PTR [esi+0x30]
  423017:	inc    ecx
  423018:	mov    ebp,0xfc6f5722
  42301d:	dec    ebx
  42301e:	push   0x5785071a
  423023:	push   es
  423024:	pushf  
  423025:	sahf   
  423026:	add    DWORD PTR [ecx-0x1f],esi
  423029:	(bad)  
  42302a:	bound  esi,QWORD PTR [eax+0x56]
  42302d:	or     DWORD PTR [edx+0x4f6d0ea2],esp
  423033:	cmp    eax,0xeb1242da
  423038:	or     BYTE PTR [edx-0x5b],0x1e
  42303c:	jo     0x42305c
  42303e:	sbb    eax,0x7c998ba2
  423043:	and    esi,DWORD PTR [ecx+0x2114b6c4]
  423049:	fcmovu st,st(3)
  42304b:	mov    ss,WORD PTR [ebp+0x3e]
  42304e:	push   es
  42304f:	jle    0x42300e
  423051:	sbb    al,0x1d
  423053:	sbb    bl,ch
  423055:	jge    0x423036
  423057:	cmp    ebx,esi
  423059:	ficomp DWORD PTR [edi]
  42305b:	mov    cl,0x58
  42305d:	adc    DWORD PTR [ecx+0x70],0xffffffc2
  423061:	pop    ss
  423062:	lods   al,BYTE PTR ds:[esi]
  423063:	(bad)  
  423064:	push   edx
  423065:	mov    eax,ds:0xd9c6657d
  42306a:	enter  0x66a3,0xdf
  42306e:	adc    DWORD PTR [esi+0x5ea99e70],esp
  423074:	dec    ebp
  423075:	popf   
  423076:	and    dh,BYTE PTR [edi+0x7a]
  423079:	cmp    eax,0x33f10604
  42307e:	jbe    0x42301a
  423080:	or     eax,0x149ba934
  423085:	bound  esp,QWORD PTR [ebx-0x10]
  423088:	out    0xef,eax
  42308a:	xor    al,al
  42308c:	adc    dh,BYTE PTR [esi-0x2c]
  42308f:	ja     0x4230ef
  423091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423092:	test   sp,bp
  423095:	(bad)  
  423096:	cli    
  423097:	cmp    DWORD PTR [ebp+0x25fcf45b],esp
  42309d:	fcmovbe st,st(1)
  42309f:	sub    al,0x17
  4230a1:	popf   
  4230a2:	cmp    al,0x8e
  4230a4:	test   BYTE PTR [edi-0x55],al
  4230a7:	push   esi
  4230a8:	cmp    DWORD PTR [ebx+eax*1],ecx
  4230ab:	dec    ecx
  4230ac:	scas   al,BYTE PTR es:[edi]
  4230ad:	xor    ebx,DWORD PTR [edi]
  4230af:	or     eax,ebp
  4230b1:	xchg   edx,eax
  4230b2:	es mov cl,0x61
  4230b5:	lea    edx,[ecx+0x19]
  4230b8:	cdq    
  4230b9:	mov    BYTE PTR [esi-0x60],bl
  4230bc:	mov    ?,WORD PTR ds:0x16317d6e
  4230c2:	push   ss
  4230c3:	adc    eax,0xf992adc4
  4230c8:	js     0x423149
  4230ca:	out    dx,al
  4230cb:	push   ebp
  4230cc:	dec    ebp
  4230cd:	add    BYTE PTR [ebx],al
  4230cf:	lds    ecx,FWORD PTR [esp+ebp*4-0x7f8badef]
  4230d6:	mov    ah,0x72
  4230d8:	stos   DWORD PTR es:[edi],eax
  4230d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230da:	jecxz  0x4230a4
  4230dc:	mov    al,ds:0x42ce3378
  4230e1:	idiv   dh
  4230e3:	leave  
  4230e4:	ror    DWORD PTR [ebp+0x1832894d],1
  4230ea:	call   0xee08:0x8fda35e3
  4230f1:	fwait
  4230f2:	sbb    ebx,DWORD PTR [esi-0x22cc6610]
  4230f8:	shl    BYTE PTR ds:0x95213847,1
  4230fe:	pop    esp
  4230ff:	dec    ecx
  423100:	mov    bh,0xc7
  423102:	xor    edi,DWORD PTR [ecx]
  423104:	cli    
  423105:	jmp    0xdaff:0xaf222588
  42310c:	pop    ds
  42310d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42310e:	sbb    al,0xeb
  423110:	in     al,0xbc
  423112:	out    0xb7,eax
  423114:	icebp  
  423115:	cld    
  423116:	sahf   
  423117:	movzx  edx,BYTE PTR [edi]
  42311a:	(bad)  
  42311b:	les    edx,FWORD PTR [esi+0xe]
  42311e:	add    BYTE PTR [edi+0x7b],cl
  423121:	sub    ecx,esi
  423123:	cwde   
  423124:	nop
  423125:	loop   0x423131
  423127:	sub    eax,0x76ebe17d
  42312c:	cwde   
  42312d:	cli    
  42312e:	cmp    eax,0x3daa3e24
  423133:	ja     0x42311c
  423135:	push   edi
  423136:	(bad)  
  423137:	adc    dl,BYTE PTR [ecx-0x1b]
  42313a:	fdivr  st,st(7)
  42313c:	ja     0x4230ee
  42313e:	jb     0x42318c
  423140:	lock ds enter 0xb040,0x3
  423146:	retf   
  423147:	pop    edi
  423148:	aam    0x1c
  42314a:	daa    
  42314b:	or     al,0xfa
  42314d:	pop    ecx
  42314e:	test   DWORD PTR ds:0xb3283428,edx
  423154:	stc    
  423155:	sub    ebp,ecx
  423157:	test   DWORD PTR [edx+0x2d],esi
  42315a:	xchg   edi,eax
  42315b:	scas   eax,DWORD PTR es:[edi]
  42315c:	and    bh,BYTE PTR [esi+0x31]
  42315f:	(bad)  
  423160:	in     al,0xfe
  423162:	test   BYTE PTR [esi],al
  423164:	inc    eax
  423165:	cmp    eax,0xb2f2d159
  42316a:	mov    edi,0x74d52587
  42316f:	ror    DWORD PTR [ecx-0xe0c88bb],cl
  423175:	xchg   esi,eax
  423176:	mov    edi,0x959e52ea
  42317b:	adc    ebx,DWORD PTR [ecx-0x2a]
  42317e:	inc    eax
  42317f:	fild   DWORD PTR [esi-0x1a5cd811]
  423185:	out    dx,al
  423186:	lods   al,BYTE PTR ds:[esi]
  423187:	push   edx
  423188:	frstor [edx+edx*1-0x3]
  42318c:	xchg   edx,eax
  42318d:	push   ebp
  42318e:	ret    0x25e9
  423191:	pop    es
  423192:	push   ebx
  423193:	mov    dh,0x9b
  423195:	cmc    
  423196:	jnp    0x4231d9
  423198:	cmp    eax,0xea7f37be
  42319d:	nop
  42319e:	and    ah,BYTE PTR [esi+0x3aefb702]
  4231a4:	or     eax,0x13eb6ce2
  4231a9:	jmp    0x4231ae
  4231ab:	jo     0x4231d1
  4231ad:	and    ebx,DWORD PTR es:[edi-0x5c8385b4]
  4231b4:	int3   
  4231b5:	loope  0x4231b7
	...
  4231bf:	add    BYTE PTR [eax],al
  4231c1:	add    BYTE PTR [ebx+0x55],al
  4231c4:	pusha  
  4231c5:	(bad)  
  4231c6:	jbe    0x423187
  4231c8:	out    dx,eax
  4231c9:	fnstsw WORD PTR [edx-0x2abca93d]
  4231cf:	je     0x42323c
  4231d1:	iret   
  4231d2:	mov    esi,0x2c0001a4
  4231d7:	add    eax,DWORD PTR [eax]
  4231d9:	add    BYTE PTR [edi+0x2f797736],dl
  4231df:	jge    0x4231ae
  4231e1:	arpl   dx,di
  4231e3:	out    0xfd,al
  4231e5:	aam    0x88
  4231e7:	mov    dh,0x3f
  4231e9:	icebp  
  4231ea:	popf   
  4231eb:	adc    al,0x2d
  4231ed:	dec    esp
  4231ee:	out    0x50,al
  4231f0:	fst    DWORD PTR [esi-0x49da48dc]
  4231f6:	lods   eax,DWORD PTR ds:[esi]
  4231f7:	(bad)  
  4231f9:	je     0x423195
  4231fb:	sbb    DWORD PTR [ecx],edi
  4231fd:	xchg   edx,eax
  4231fe:	mov    ecx,0xc90094d1
  423203:	jns    0x4231ff
  423205:	cmp    al,BYTE PTR [esi+ebp*1+0x68ed2eda]
  42320c:	std    
  42320d:	(bad)  [edi+ebp*8]
  423210:	aad    0xfa
  423212:	cmp    al,0xe1
  423214:	mov    esi,0xea5afd99
  423219:	or     dh,BYTE PTR [eax+0x17]
  42321c:	arpl   WORD PTR [ebx-0x4f],cx
  42321f:	xchg   esp,eax
  423220:	add    ebp,DWORD PTR [ebx]
  423222:	mov    ebp,0xf8275481
  423227:	(bad)  
  423228:	out    0xb2,al
  42322a:	push   cs
  42322b:	mov    esi,0xbb4d09f8
  423230:	int    0x72
  423232:	sbb    eax,0x1a38781
  423237:	push   es
  423238:	pop    ss
  423239:	retf   
  42323a:	add    al,0xbc
  42323c:	push   es
  42323d:	jo     0x4231dc
  42323f:	es enter 0x19ea,0xd9
  423244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423245:	jecxz  0x42328a
  423247:	dec    edi
  423248:	push   ss
  423249:	lds    ebp,FWORD PTR [esp+eax*1]
  42324c:	xor    dl,ah
  42324e:	fstp   DWORD PTR [ecx]
  423250:	fwait
  423251:	and    BYTE PTR [ebx+0x37],ch
  423254:	add    DWORD PTR [edx+0x0],ecx
  423257:	xor    dh,BYTE PTR [eax+0x7a4114a0]
  42325d:	test   dh,ch
  42325f:	int    0x4a
  423261:	cmp    al,BYTE PTR [eax+esi*8-0x4d16130b]
  423268:	or     DWORD PTR [edx+0x34761709],edx
  42326e:	jnp    0x4232a7
  423270:	outs   dx,BYTE PTR ds:[esi]
  423271:	mov    ss,ebp
  423273:	dec    ecx
  423274:	int3   
  423275:	push   eax
  423276:	fisttp DWORD PTR [ebp+0x46]
  423279:	out    dx,al
  42327a:	inc    edx
  42327b:	sub    DWORD PTR ss:[eax+0x62779079],edx
  423282:	fisttp QWORD PTR [esi-0xb]
  423285:	cmp    edi,DWORD PTR [esi-0x49051c71]
  42328b:	loop   0x423223
  42328d:	mov    al,ds:0x52902e49
  423292:	sbb    eax,0xe7780f18
  423297:	push   edx
  423298:	data16 mov bh,BYTE PTR [esi+0x5c47736f]
  42329f:	std    
  4232a0:	mov    ds:0xb0fcd147,eax
  4232a5:	adc    ah,BYTE PTR [ebp-0x468dec9e]
  4232ab:	sbb    eax,0x3c94b48d
  4232b0:	stos   BYTE PTR es:[edi],al
  4232b1:	mov    ebx,0xa77fa02f
  4232b6:	sar    BYTE PTR [ebx-0x17],1
  4232b9:	je     0x423277
  4232bb:	ud2    
  4232bd:	popa   
  4232be:	cdq    
  4232bf:	mov    bl,BYTE PTR [eax-0x47]
  4232c2:	not    BYTE PTR [edx+0x4f1bf25a]
  4232c8:	sub    eax,DWORD PTR [ebp+0x4b]
  4232cb:	and    al,0x7b
  4232cd:	push   eax
  4232ce:	inc    eax
  4232cf:	inc    edx
  4232d0:	or     cl,BYTE PTR [ebx+0x7d6c8554]
  4232d6:	mov    al,0x6b
  4232d8:	lahf   
  4232d9:	int    0x9c
  4232db:	fstp   DWORD PTR [esi+0xa50b527]
  4232e1:	jb     0x423265
  4232e3:	fnop   
  4232e5:	loope  0x423288
  4232e7:	and    esp,DWORD PTR [edi+0x51e2fd19]
  4232ed:	out    0xdd,al
  4232ef:	and    al,0xfa
  4232f1:	int3   
  4232f2:	lds    ebx,FWORD PTR [eax-0x24d5632d]
  4232f8:	xchg   BYTE PTR [eax-0x2e62bdac],ah
  4232fe:	inc    ebp
  4232ff:	mov    edx,0x34f9e040
  423304:	shr    BYTE PTR [ebx],0x15
  423307:	adc    DWORD PTR [edx+0x76],ebp
  42330a:	jle    0x423343
  42330c:	lahf   
  42330d:	retf   0x920b
  423310:	aad    0x3a
  423312:	jmp    0x51e9:0x91e7d12
  423319:	fidiv  DWORD PTR ds:0x663ac793
  42331f:	popf   
  423320:	rol    BYTE PTR ds:0xad5b2fc,1
  423326:	jmp    0x42338c
  423328:	popf   
  423329:	(bad)  
  42332a:	out    0xc6,eax
  42332c:	ins    DWORD PTR es:[edi],dx
  42332d:	js     0x42338f
  42332f:	xchg   ecx,eax
  423330:	aad    0xa0
  423332:	aaa    
  423333:	add    ch,dl
  423335:	add    BYTE PTR [ebx],bl
  423337:	push   cs
  423338:	fadd   QWORD PTR [ecx]
  42333a:	push   esp
  42333b:	mov    ebp,0xa62e0fca
  423340:	cmp    ecx,DWORD PTR [edi]
  423342:	(bad)
  423345:	lea    esi,[ebp+eax*4-0x50091a1e]
  42334c:	ins    BYTE PTR es:[edi],dx
  42334d:	cs aam 0x13
  423350:	pop    ds
  423351:	adc    cl,cl
  423353:	cs mov bh,0xc2
  423356:	outs   dx,DWORD PTR ds:[esi]
  423357:	je     0x4233c4
  423359:	and    ch,al
  42335b:	xor    DWORD PTR [edx+esi*2],ecx
  42335e:	jge    0x4233a7
  423360:	or     esi,DWORD PTR [edi-0x5d]
  423363:	jmp    0x551ab72d
  423368:	sub    eax,0xa455637c
  42336d:	push   edi
  42336e:	and    al,0x4c
  423370:	jg     0x4233ba
  423372:	sub    dh,BYTE PTR [edx+0xe]
  423375:	stc    
  423376:	clc    
  423377:	fstp   QWORD PTR [ebp+0x1e]
  42337a:	mov    bl,0xe2
  42337c:	push   ebx
  42337d:	pop    edi
  42337e:	das    
  42337f:	xchg   edx,eax
  423380:	pop    ebx
  423381:	cld    
  423382:	aaa    
  423383:	sub    ah,bh
  423385:	(bad)  
  423386:	fs sti 
  423388:	lock inc eax
  42338a:	(bad)  
  42338c:	ret    0x6892
  42338f:	mov    dl,0xdf
  423391:	pop    edx
  423392:	ret    
  423393:	leave  
  423394:	cwde   
  423395:	fld    st(3)
  423397:	les    eax,FWORD PTR [eax-0x4f]
  42339a:	sbb    ecx,DWORD PTR [edx+eax*4+0x31]
  42339e:	enter  0x3ef8,0xa7
  4233a2:	ins    DWORD PTR es:[edi],dx
  4233a3:	mov    ebp,0xef981271
  4233a8:	xchg   ebp,eax
  4233a9:	add    edx,DWORD PTR [esp+eax*4+0x3e]
  4233ad:	dec    edx
  4233ae:	jnp    0x4233fd
  4233b0:	adc    al,0x33
  4233b2:	lock xor BYTE PTR [edx+0x7b],bh
  4233b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233b7:	mov    ch,0x62
  4233b9:	hlt    
  4233ba:	mov    ebp,0x96c5a174
  4233bf:	outs   dx,BYTE PTR ds:[esi]
  4233c0:	aas    
  4233c1:	call   0x278a:0xef11f05a
  4233c8:	fsub   QWORD PTR [ebp+0x5d]
  4233cb:	jecxz  0x423365
  4233cd:	cmp    DWORD PTR [edi-0x42b84f66],edx
  4233d3:	mov    eax,ds:0xbba1cd1e
  4233d8:	daa    
  4233d9:	out    dx,eax
  4233da:	ds jbe 0x4233a2
  4233dd:	or     al,0xff
  4233df:	fdivr  QWORD PTR [eax]
  4233e1:	nop
  4233e2:	in     al,dx
  4233e3:	push   edi
  4233e4:	mov    ebp,0x49f522ec
  4233e9:	lods   eax,DWORD PTR ds:[esi]
  4233ea:	sub    ecx,ecx
  4233ec:	mov    bl,0xe2
  4233ee:	test   eax,0xf3bfa160
  4233f4:	xchg   ebp,eax
  4233f5:	mov    ah,0xd8
  4233f7:	add    eax,ecx
  4233f9:	xlat   BYTE PTR ds:[ebx]
  4233fa:	aam    0x7e
  4233fc:	pop    ecx
  4233fd:	xchg   esi,eax
  4233fe:	jno    0x4233ba
  423400:	mov    al,ds:0x2f2c372a
  423405:	jns    0x42342d
  423407:	lods   al,BYTE PTR ds:[esi]
  423408:	xor    BYTE PTR [esi+esi*1-0x3a5cd3b3],0x4b
  423410:	mov    bl,0x2b
  423412:	or     cl,BYTE PTR [edx]
  423414:	rcl    edi,1
  423416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423417:	xor    esp,DWORD PTR [ebx]
  423419:	cmp    eax,0xdc041e8c
  42341e:	sbb    bh,BYTE PTR [ebp-0x11]
  423421:	imul   eax,esi,0xbd8b165e
  423427:	push   ds
  423428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423429:	jge    0x423443
  42342b:	xchg   eax,esi
  42342d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42342e:	pop    eax
  42342f:	ror    BYTE PTR [edx+0x6cee0791],cl
  423435:	push   es
  423436:	out    0xd3,al
  423438:	jg     0x4233c4
  42343a:	div    ebp
  42343c:	xchg   esp,eax
  42343d:	mov    ds:0xfb672822,eax
  423442:	nop
  423443:	sub    al,BYTE PTR [ebp+0x5b648c04]
  423449:	fcomip st,st(1)
  42344b:	add    DWORD PTR ds:0xaedecbdd,0xaa784a1d
  423455:	test   ecx,ebx
  423457:	inc    ebx
  423458:	cs dec edi
  42345a:	cmp    cl,BYTE PTR [ecx+0x44663c16]
  423460:	cmc    
  423461:	add    dh,bh
  423463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423464:	out    dx,eax
  423465:	rcl    esi,cl
  423467:	pop    ds
  423468:	or     al,0xd0
  42346a:	(bad)  
  42346b:	xchg   DWORD PTR [di],esp
  42346e:	and    al,0x13
  423470:	mov    esp,0xd5bc847c
  423475:	out    dx,al
  423476:	mov    bh,BYTE PTR [eax-0xb09fa65]
  42347c:	mov    ebx,0xa2d5f3d1
  423481:	and    BYTE PTR ds:0x8a954ea4,cl
  423487:	test   al,0x94
  423489:	rcpps  xmm2,XMMWORD PTR [edx+0x47]
  42348d:	out    dx,eax
  42348e:	mov    BYTE PTR [eax],0x3a
  423491:	sbb    eax,0xfc5a70c
  423496:	iret   
  423497:	js     0x423481
  423499:	in     eax,dx
  42349a:	std    
  42349b:	cs pop ds
  42349d:	(bad)  
  42349e:	xor    dl,BYTE PTR [ecx-0x1]
  4234a1:	gs mov cl,dh
  4234a4:	pop    edi
  4234a5:	test   ebx,0x78b8efa7
  4234ab:	xchg   edx,eax
  4234ac:	add    cl,BYTE PTR [edi+0x53564215]
  4234b2:	mov    edx,0x791b2ff4
  4234b7:	cmp    al,0x75
  4234b9:	out    dx,eax
  4234ba:	xchg   edi,eax
  4234bb:	in     al,0xc4
  4234bd:	icebp  
  4234be:	mov    eax,ds:0x430e098c
  4234c3:	stc    
  4234c4:	pop    edi
  4234c5:	arpl   WORD PTR [ecx+ecx*2-0x4664599b],ax
  4234cc:	repnz mov bl,0x74
  4234cf:	unpcklps xmm6,XMMWORD PTR [edi]
  4234d2:	cld    
  4234d3:	stos   BYTE PTR es:[edi],al
  4234d4:	sbb    DWORD PTR [edx+esi*8-0x58],esi
  4234d8:	adc    BYTE PTR [ebx+0x18b9388c],0x3f
  4234df:	cmc    
  4234e0:	outs   dx,BYTE PTR ds:[esi]
  4234e1:	sub    BYTE PTR [eax],0x44
  4234e4:	dec    edx
  4234e5:	push   0xa2be84d8
  4234ea:	sub    eax,0xfe2f59ca
  4234ef:	repnz pop edx
  4234f1:	dec    esp
  4234f2:	(bad)  
  4234f3:	sub    al,0xbc
  4234f5:	ins    BYTE PTR es:[edi],dx
  4234f6:	idiv   DWORD PTR ds:[edx]
  4234f9:	jmp    FWORD PTR [ecx]
  4234fb:	sub    al,BYTE PTR [edi]
  4234fd:	popf   
  4234fe:	jl     0x423488
  423500:	and    ecx,DWORD PTR [eax+0x85d04f6]
	...
  423512:	push   edi
  423513:	sub    eax,0xba7f9a07
  423518:	fucomip st,st(5)
  42351a:	ficom  WORD PTR [ebp+0x41]
  42351d:	adc    al,0xfd
  42351f:	enter  0x997e,0xea
  423523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423524:	add    DWORD PTR [eax],eax
  423526:	sub    al,0x3
  423528:	add    BYTE PTR [eax],al
  42352a:	das    
  42352b:	xchg   edx,eax
  42352c:	imul   BYTE PTR [eax]
  42352e:	push   esi
  42352f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423530:	lock adc al,0xce
  423533:	test   edx,esi
  423535:	jae    0x423555
  423537:	xchg   ebx,eax
  423538:	fisttp QWORD PTR [ecx]
  42353a:	or     eax,0x534099b2
  42353f:	xchg   BYTE PTR [eax-0x67],dl
  423542:	jb     0x423545
  423544:	push   eax
  423545:	popf   
  423546:	inc    eax
  423547:	(bad)  
  423548:	fstp   st(2)
  42354a:	add    ax,WORD PTR [eax+0x4c]
  42354e:	loop   0x423528
  423550:	inc    esp
  423551:	inc    eax
  423552:	aam    0x2
  423554:	adc    DWORD PTR [esi-0x7ca51458],edx
  42355a:	scas   al,BYTE PTR es:[edi]
  42355b:	loop   0x42351e
  42355d:	inc    esp
  42355e:	xchg   ah,bh
  423560:	repz mov cs:0xd0a060c9,eax
  423567:	adc    dh,ch
  423569:	pmulhw mm1,QWORD PTR [esi+0x3e]
  42356d:	pop    esp
  42356e:	test   eax,0x5f862ce2
  423573:	js     0x4235d0
  423575:	mov    WORD PTR [esi+esi*8+0x37077db6],?
  42357c:	adc    bl,dl
  42357e:	lds    esp,FWORD PTR [ebx+0x4a620b8a]
  423584:	push   ebp
  423585:	add    esp,DWORD PTR [ebx-0x66]
  423588:	mov    eax,ds:0x734ecd2a
  42358d:	ss cdq 
  42358f:	iret   
  423590:	les    edi,FWORD PTR [ebp+0x259809a0]
  423596:	cmp    bh,BYTE PTR [esp+ebx*4]
  423599:	xlat   BYTE PTR ds:[ebx]
  42359a:	push   edi
  42359b:	retf   0x2c00
  42359e:	sub    ah,BYTE PTR [edx+edi*2-0x6a93cb0f]
  4235a5:	mov    ebx,0x9904cdc8
  4235aa:	and    al,0x82
  4235ac:	pop    edx
  4235ad:	pop    esi
  4235ae:	stos   BYTE PTR es:[edi],al
  4235af:	addr16 loop 0x4235c1
  4235b2:	pop    es
  4235b3:	sbb    esi,DWORD PTR [edx-0x7f2d91b0]
  4235b9:	fs pop ecx
  4235bb:	(bad)  
  4235bd:	push   es
  4235be:	push   es
  4235bf:	adc    al,BYTE PTR [ebx-0x29572713]
  4235c5:	(bad)  
  4235c6:	pop    esp
  4235c7:	and    ah,BYTE PTR ds:0x569a4d9a
  4235cd:	cmp    ah,ch
  4235cf:	add    al,0xb7
  4235d1:	xchg   edx,eax
  4235d2:	aaa    
  4235d3:	pop    eax
  4235d4:	ret    
  4235d5:	pusha  
  4235d6:	sub    al,0x4e
  4235d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235d9:	aaa    
  4235da:	outs   dx,DWORD PTR ds:[esi]
  4235db:	dec    eax
  4235dc:	loop   0x4235bb
  4235de:	add    BYTE PTR [ebx+eax*1+0x31],bl
  4235e2:	mov    al,0xa0
  4235e4:	fnstenv [ebp+0x44ec93d7]
  4235ea:	out    0x5a,al
  4235ec:	dec    edx
  4235ed:	ret    0xba3a
  4235f0:	loope  0x4235c8
  4235f2:	add    al,0x22
  4235f4:	fmul   DWORD PTR [ecx-0x57]
  4235f7:	out    dx,eax
  4235f8:	jp     0x42366e
  4235fa:	jl     0x42358d
  4235fc:	mov    ds:0xf2558b37,eax
  423601:	std    
  423602:	in     al,dx
  423603:	pop    edi
  423604:	adc    BYTE PTR [eax+0x6],al
  423607:	or     ah,BYTE PTR [esi+0x530520b3]
  42360d:	xor    DWORD PTR [edx+0x628defdc],esp
  423613:	mov    al,BYTE PTR [edx-0x39432be3]
  423619:	in     al,dx
  42361a:	stos   BYTE PTR es:[edi],al
  42361b:	jno    0x42359f
  42361d:	es jb  0x71983581
  423624:	popf   
  423625:	test   eax,0xa742b96a
  42362a:	mov    esp,0x1ec0770e
  42362f:	inc    edx
  423630:	mov    dh,0x31
  423632:	dec    ebx
  423633:	xchg   BYTE PTR [eax+0x4e1ca80e],dh
  423639:	int3   
  42363a:	aaa    
  42363b:	aaa    
  42363c:	fwait
  42363d:	mov    ebx,0x28d1d1e4
  423642:	imul   edx,ebx,0x9eb37382
  423648:	bound  edx,QWORD PTR [eax+0x50d5ae58]
  42364e:	(bad)  
  42364f:	fisubr WORD PTR [edi+0x34c7381a]
  423655:	adc    al,0x5e
  423657:	outs   dx,BYTE PTR ds:[esi]
  423658:	mov    es,WORD PTR [ecx-0x22]
  42365b:	into   
  42365c:	cli    
  42365d:	outs   dx,DWORD PTR ds:[esi]
  42365e:	jae    0x423663
  423660:	jns    0x42366c
  423662:	inc    esp
  423663:	sbb    BYTE PTR [ebp-0x60],ah
  423666:	ss out 0x69,al
  423669:	cmp    DWORD PTR [ebp+0x3c],edi
  42366c:	xor    dl,BYTE PTR [edx-0x59]
  42366f:	add    al,0x6d
  423671:	mov    esi,0x3cf9e6e
  423676:	fucomip st,st(0)
  423678:	sub    edi,DWORD PTR [ebp+0x38]
  42367b:	int3   
  42367c:	cwde   
  42367d:	dec    esp
  42367e:	and    DWORD PTR [edi],ebx
  423680:	stc    
  423681:	lods   al,BYTE PTR ds:[esi]
  423682:	xchg   esp,eax
  423683:	jno    0x4236a1
  423685:	mov    ds:0x8fe081a4,eax
  42368a:	out    0x9e,eax
  42368c:	fdiv   QWORD PTR [esp+ebp*8-0x78449358]
  423693:	pop    esi
  423694:	and    dl,BYTE PTR es:[eax+ecx*1+0x36c6adab]
  42369c:	out    dx,eax
  42369d:	loope  0x42367c
  42369f:	imul   esp,DWORD PTR [ecx+0x118dd2a2],0x2aee33c9
  4236a9:	out    dx,al
  4236aa:	lods   eax,DWORD PTR ds:[esi]
  4236ab:	pop    ds
  4236ac:	es cs mov esp,0x3274f09a
  4236b3:	nop
  4236b4:	shr    DWORD PTR [eax-0x375363ac],1
  4236ba:	or     ah,BYTE PTR [eax-0x6c]
  4236bd:	xor    eax,0x4463b404
  4236c2:	sbb    esp,DWORD PTR ds:[edx-0x46]
  4236c6:	pop    esi
  4236c7:	inc    ebp
  4236c8:	or     ch,BYTE PTR [esp+eax*4]
  4236cb:	xchg   ecx,eax
  4236cc:	or     esi,DWORD PTR [esi]
  4236ce:	dec    ebx
  4236cf:	mov    dh,0x78
  4236d1:	mov    edx,0xd249182f
  4236d6:	dec    esi
  4236d7:	jno    0x423748
  4236d9:	xchg   BYTE PTR [ecx],bh
  4236db:	xchg   BYTE PTR [edi+0x3],ah
  4236de:	test   BYTE PTR [edi-0x1f],ah
  4236e1:	addr16 push esi
  4236e3:	xchg   di,ax
  4236e5:	leave  
  4236e6:	mov    dl,0xab
  4236e8:	out    dx,al
  4236e9:	pop    edx
  4236ea:	sub    al,0xda
  4236ec:	xchg   ebx,eax
  4236ed:	sbb    ebp,edi
  4236ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236f0:	(bad)  
  4236f1:	push   ecx
  4236f3:	push   edi
  4236f4:	add    edi,ebp
  4236f6:	hlt    
  4236f7:	xor    BYTE PTR [edi+0x30],bh
  4236fa:	adc    esi,0xffffffba
  4236fd:	cli    
  4236fe:	iret   
  4236ff:	sahf   
  423700:	stos   BYTE PTR es:[edi],al
  423701:	or     edx,ecx
  423703:	int3   
  423704:	jmp    0x423767
  423706:	pop    ss
  423707:	pushf  
  423708:	repnz push ebp
  42370a:	mov    ebp,0xa29c8b77
  42370f:	das    
  423710:	xchg   BYTE PTR [ebx+0x76740c55],bh
  423716:	xor    BYTE PTR [edi-0x728068a],cl
  42371c:	outs   dx,BYTE PTR ds:[esi]
  42371d:	leave  
  42371e:	out    0x23,eax
  423720:	in     al,dx
  423721:	dec    esi
  423722:	out    0x0,eax
  423724:	push   es
  423725:	pop    ds
  423726:	xor    eax,0x4dc21484
  42372b:	push   ecx
  42372c:	mov    eax,0xc75a821f
  423731:	cmp    BYTE PTR [edx-0x5afce461],0x9b
  423738:	jecxz  0x423759
  42373a:	out    0x2a,al
  42373c:	sbb    ah,BYTE PTR [esp+ebx*8-0x2c]
  423740:	jl     0x42375a
  423742:	out    dx,al
  423743:	inc    esp
  423744:	hlt    
  423745:	addr16 repz ret 0x9017
  42374a:	mov    esp,0x52290fca
  42374f:	pop    edi
  423750:	pusha  
  423751:	aas    
  423752:	jo     0x4237b1
  423754:	es jbe 0x42372b
  423757:	in     eax,0x57
  423759:	pop    ebp
  42375a:	jo     0x4237a5
  42375c:	or     esp,ebp
  42375e:	pop    esi
  42375f:	mov    ebx,0x788a2af3
  423764:	cmp    al,BYTE PTR [ecx+eiz*2-0x21]
  423768:	out    dx,eax
  423769:	xor    eax,0x6467f2a3
  42376e:	push   ebp
  42376f:	jecxz  0x4237c9
  423771:	pusha  
  423772:	or     eax,0xe336d028
  423777:	mov    ds:0x8cb9baa1,eax
  42377c:	ja     0x4237e5
  42377e:	fld    DWORD PTR [ecx]
  423780:	call   0x8e16:0xc94d9e1a
  423787:	jns    0x4237cd
  423789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42378a:	mov    edi,0x761aa559
  42378f:	stc    
  423790:	out    0xc6,eax
  423792:	les    edi,FWORD PTR [edx+edx*8+0x2e]
  423796:	dec    ebx
  423797:	call   0xa31c6cfd
  42379c:	jo     0x423769
  42379e:	dec    edx
  42379f:	scas   al,BYTE PTR es:[edi]
  4237a0:	test   DWORD PTR [eax+0x37c2418d],edi
  4237a6:	push   ss
  4237a7:	das    
  4237a8:	mov    edx,esi
  4237aa:	add    eax,0x5ee99baa
  4237af:	enter  0xa329,0xcc
  4237b3:	in     al,dx
  4237b4:	ins    DWORD PTR es:[edi],dx
  4237b5:	je     0x423824
  4237b7:	pusha  
  4237b8:	iret   
  4237b9:	pop    es
  4237ba:	dec    edi
  4237bb:	xor    BYTE PTR [edx-0x2554b3d],bl
  4237c1:	sub    ecx,ebx
  4237c3:	add    esp,DWORD PTR [eax]
  4237c5:	cmp    eax,0x62b6d32
  4237ca:	ins    BYTE PTR es:[edi],dx
  4237cb:	add    al,ah
  4237cd:	leave  
  4237ce:	push   cs
  4237cf:	cmp    ecx,DWORD PTR [esi-0x45]
  4237d2:	sbb    ebp,ecx
  4237d4:	in     eax,0x7f
  4237d6:	mov    es,WORD PTR [ebp+0x3001899b]
  4237dc:	in     al,dx
  4237dd:	data16 repnz lods al,BYTE PTR fs:[esi]
  4237e1:	shr    BYTE PTR [esi+0x43788c18],0xbc
  4237e8:	add    al,0x71
  4237ea:	and    DWORD PTR [ebp+ebp*8-0x733f34ee],esi
  4237f1:	jno    0x423847
  4237f3:	sbb    al,0xe
  4237f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237f6:	and    al,BYTE PTR [eax+0x5]
  4237f9:	sub    ebx,edx
  4237fb:	imul   edi,DWORD PTR [eax],0xffffffdb
  4237fe:	pop    edx
  4237ff:	jae    0x4237ac
  423801:	pop    edi
  423802:	add    BYTE PTR [edx-0x3ade3544],al
  423808:	or     al,0x60
  42380a:	pop    esp
  42380b:	test   eax,0xac8cc342
  423810:	enter  0x4cda,0x60
  423814:	mov    bl,0x6e
  423816:	push   edx
  423817:	ja     0x423809
  423819:	pop    edi
  42381a:	std    
  42381b:	pop    es
  42381c:	mov    esi,DWORD PTR [edx+0x1b0cdcc1]
  423822:	pushf  
  423823:	sbb    al,0xef
  423825:	rcr    BYTE PTR [esi-0x284d2455],1
  42382b:	dec    esp
  42382c:	popf   
  42382d:	xchg   ebx,eax
  42382e:	(bad)  
  42382f:	ffree  st(4)
  423831:	fst    DWORD PTR [ecx]
  423833:	jge    0x4237d3
  423835:	sbb    al,0xe6
  423837:	and    eax,0xbd15dbfa
  42383c:	stos   BYTE PTR es:[edi],al
  42383d:	add    DWORD PTR [edi+0x43],ebp
  423840:	jne    0x42380f
  423842:	cdq    
  423843:	mov    esp,0x9367f84b
  423848:	stc    
  423849:	push   ebp
  42384a:	sbb    eax,0x247ab324
  42384f:	push   es
  423850:	jg     0x42383e
  423852:	pop    edx
  423853:	sar    BYTE PTR [ebx],1
  423855:	loop   0x423857
	...
  42385f:	add    BYTE PTR [eax],al
  423861:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  423865:	outs   dx,DWORD PTR es:[esi]
  423867:	daa    
  423868:	ins    DWORD PTR es:[edi],dx
  423869:	push   0xfffffff2
  42386b:	push   esp
  42386c:	stos   DWORD PTR es:[edi],eax
  42386d:	adc    esi,DWORD PTR [ecx-0x70]
  423870:	pop    ebx
  423871:	sub    edx,DWORD PTR [esi]
  423873:	stos   DWORD PTR es:[edi],eax
  423874:	add    DWORD PTR [eax],eax
  423876:	sub    al,0x3
  423878:	add    BYTE PTR [eax],al
  42387a:	les    esp,FWORD PTR [eax+0x348dc54d]
  423880:	lahf   
  423881:	mov    WORD PTR cs:[eax],fs
  423884:	push   0x3fc7fa78
  423889:	inc    ebx
  42388a:	popa   
  42388b:	cmp    al,0x4c
  42388d:	les    edi,FWORD PTR [ecx-0x28]
  423890:	cwde   
  423891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423892:	xchg   edi,eax
  423893:	inc    ecx
  423894:	mov    edx,0x14ddf3c
  423899:	add    BYTE PTR [ebx+0x5e140347],ch
  42389f:	les    edi,FWORD PTR [ecx]
  4238a1:	jmp    0x549b191b
  4238a6:	pop    esi
  4238a7:	mov    cl,0x8f
  4238a9:	xchg   edx,eax
  4238aa:	les    eax,FWORD PTR [ebx]
  4238ac:	retfw  
  4238ae:	(bad)  [esi]
  4238b0:	and    esi,DWORD PTR [esi+0x4316c61e]
  4238b6:	(bad)  
  4238b7:	pop    edi
  4238b8:	(bad)  
  4238b9:	(bad)  
  4238ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238bb:	popf   
  4238bc:	iret   
  4238bd:	add    eax,0x7095db8a
  4238c2:	pop    esp
  4238c3:	aam    0xb4
  4238c5:	dec    esp
  4238c6:	mov    ebx,0x2e1d4a6e
  4238cb:	xchg   esi,eax
  4238cc:	icebp  
  4238cd:	or     DWORD PTR [esi],0xffffffec
  4238d0:	aam    0x20
  4238d2:	mov    ah,0xd7
  4238d4:	push   ebp
  4238d5:	sbb    edx,DWORD PTR [edx-0x2b]
  4238d8:	arpl   WORD PTR [edx+0x6f],dx
  4238db:	add    DWORD PTR [ebx],edx
  4238dd:	lds    ebx,FWORD PTR [edx]
  4238df:	and    DWORD PTR [ebx-0x522bccad],esp
  4238e5:	(bad)  
  4238e7:	xlat   BYTE PTR ds:[ebx]
  4238e8:	les    edx,FWORD PTR [edi+0x7bfcaac9]
  4238ee:	fstp   DWORD PTR [eax-0x34271528]
  4238f4:	cli    
  4238f5:	imul   ebx,DWORD PTR [ebx-0x13b1087d],0xa
  4238fc:	icebp  
  4238fd:	mov    bh,0x55
  4238ff:	push   esp
  423900:	dec    ebx
  423901:	or     BYTE PTR [edi+ebx*2+0x67dbc1d4],0xfe
  423909:	cmc    
  42390a:	jle    0x423959
  42390c:	cmp    ebx,DWORD PTR [eax]
  42390e:	pushf  
  42390f:	outs   dx,DWORD PTR ds:[esi]
  423910:	mov    ebx,0xb4c6fb38
  423915:	into   
  423916:	sub    al,BYTE PTR [eax+0x77f482a]
  42391c:	cmp    ecx,DWORD PTR [ecx+0x17490904]
  423922:	lds    eax,FWORD PTR [edx]
  423924:	jp     0x42392c
  423926:	and    eax,0x4c738992
  42392b:	(bad)  
  42392d:	sub    ecx,DWORD PTR [eax]
  42392f:	retf   
  423930:	ja     0x423935
  423932:	or     DWORD PTR [ecx-0xdb3afeb],0xffffffb2
  423939:	xchg   ecx,eax
  42393a:	sbb    eax,ebx
  42393c:	cmp    ebx,DWORD PTR [ecx]
  42393e:	sub    BYTE PTR [edi-0x9],dl
  423941:	jge    0x423976
  423943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423944:	sub    ah,bh
  423946:	mov    dl,0x12
  423948:	fmul   QWORD PTR [edi+0x77e5f52]
  42394e:	cmp    al,0xa5
  423950:	sbb    eax,0x78a97bc6
  423955:	mov    edx,0x6bd962ff
  42395a:	xchg   BYTE PTR [edi],ah
  42395c:	xchg   ebx,eax
  42395d:	pop    ebx
  42395e:	sub    eax,0x93e97bdf
  423963:	in     al,0xa5
  423965:	sub    edx,DWORD PTR [edi-0x6e]
  423968:	mov    cl,0x3d
  42396a:	int3   
  42396b:	inc    edx
  42396c:	les    ecx,FWORD PTR [edi-0xad117a5]
  423972:	(bad)  
  423973:	outs   dx,BYTE PTR ds:[esi]
  423974:	mov    cl,al
  423976:	div    BYTE PTR [eax+eax*1-0x25a36d3d]
  42397d:	add    BYTE PTR [eax+0x57cc9c6a],bh
  423983:	mov    al,0xa2
  423985:	scas   al,BYTE PTR es:[edi]
  423986:	add    DWORD PTR ds:0x4fe903d8,ebx
  42398c:	inc    esp
  42398d:	outs   dx,BYTE PTR ds:[esi]
  42398e:	scas   al,BYTE PTR es:[edi]
  42398f:	and    BYTE PTR [ecx],dh
  423991:	mov    bl,0x80
  423993:	into   
  423994:	dec    ecx
  423995:	add    bl,BYTE PTR [edx+0x592847be]
  42399b:	add    bh,BYTE PTR [edi+eax*2+0x5de94c47]
  4239a2:	loopne 0x4239ec
  4239a4:	outs   dx,BYTE PTR ds:[esi]
  4239a5:	bound  ebx,QWORD PTR [edx+0x18af2a1a]
  4239ab:	mov    cl,al
  4239ad:	shr    cl,0xa5
  4239b0:	mov    cl,ah
  4239b2:	jnp    0x4239ff
  4239b4:	aam    0xad
  4239b6:	fiadd  WORD PTR [ebx-0x5f]
  4239b9:	push   es
  4239ba:	ret    0x60ee
  4239bd:	adc    al,0xdb
  4239bf:	pop    es
  4239c0:	setle  BYTE PTR [ebp-0x432eca49]
  4239c7:	xlat   BYTE PTR ds:[ebx]
  4239c8:	rcr    bl,cl
  4239ca:	jecxz  0x423986
  4239cc:	jo     0x423a23
  4239ce:	es sbb al,0xa6
  4239d1:	addr16 push ds
  4239d3:	sbb    BYTE PTR [ecx+0x1671d6a2],bl
  4239d9:	sbb    DWORD PTR [ebp-0x5077b7ef],edi
  4239df:	mov    ds:0xd8b84e3f,eax
  4239e4:	push   ss
  4239e5:	aaa    
  4239e6:	push   cs
  4239e7:	loope  0x423a4e
  4239e9:	in     eax,0xf8
  4239eb:	adc    esp,DWORD PTR [edi+0x25]
  4239ee:	ja     0x423a42
  4239f0:	xchg   ecx,eax
  4239f1:	push   esp
  4239f2:	outs   dx,DWORD PTR ds:[esi]
  4239f3:	xchg   DWORD PTR [ebx-0x70269105],edi
  4239f9:	cli    
  4239fa:	aaa    
  4239fb:	dec    eax
  4239fc:	aad    0x2d
  4239fe:	icebp  
  4239ff:	cli    
  423a00:	lea    ebx,[ebx+esi*4+0x7310b89e]
  423a07:	adc    bh,0x7
  423a0a:	std    
  423a0b:	js     0x423a5b
  423a0d:	test   DWORD PTR [ecx+0x3b],eax
  423a10:	jle    0x4239d6
  423a12:	cmp    al,0xbc
  423a14:	add    dh,BYTE PTR [edx+0x510f755e]
  423a1a:	out    0x2e,eax
  423a1c:	in     eax,0xc0
  423a1e:	aas    
  423a1f:	es jo  0x423a86
  423a22:	outs   dx,DWORD PTR ds:[esi]
  423a23:	cmp    esi,edi
  423a25:	push   eax
  423a26:	bound  ebx,QWORD PTR [edi-0xa]
  423a29:	cld    
  423a2a:	cmp    eax,0x64fdd4df
  423a2f:	jb     0x423a00
  423a31:	ret    
  423a32:	sar    DWORD PTR [esi+0x4eb1f245],0x3d
  423a39:	or     BYTE PTR [esi],dh
  423a3b:	adc    al,0xfc
  423a3d:	daa    
  423a3e:	outs   dx,DWORD PTR ds:[esi]
  423a3f:	dec    esi
  423a40:	leave  
  423a41:	fcom   DWORD PTR cs:[ebp+0x2c27857b]
  423a48:	sahf   
  423a49:	(bad)  
  423a4a:	and    DWORD PTR [ebp-0x2248df47],esi
  423a50:	sbb    DWORD PTR [ecx-0x17],edi
  423a53:	sbb    eax,0xc95e858c
  423a58:	mov    al,0x72
  423a5a:	sbb    DWORD PTR [ebx+0x79418e65],esp
  423a60:	repz mov edi,0x5f7fafca
  423a66:	lods   eax,DWORD PTR ds:[esi]
  423a67:	inc    esi
  423a68:	(bad)
  423a6c:	lock jnp 0x423aed
  423a6f:	xchg   esi,ecx
  423a71:	sub    eax,0xe8a6f59e
  423a76:	xor    dh,BYTE PTR [ecx-0x1e]
  423a79:	dec    esi
  423a7a:	pop    ecx
  423a7b:	mov    al,ds:0xe9db607
  423a80:	jns    0x423a0a
  423a82:	xor    ch,BYTE PTR [ebx]
  423a84:	fs xchg ebx,eax
  423a86:	inc    edx
  423a87:	stos   DWORD PTR es:[edi],eax
  423a88:	fldpi  
  423a8a:	push   eax
  423a8b:	les    esi,FWORD PTR [edx+0x33aacea3]
  423a91:	data16 loope 0x423a6e
  423a94:	in     eax,dx
  423a95:	hlt    
  423a96:	jbe    0x423adf
  423a98:	cli    
  423a99:	push   edx
  423a9a:	mov    esi,0x5b4750ed
  423a9f:	fidiv  DWORD PTR [esi-0x52627f28]
  423aa5:	sbb    eax,0x7b928601
  423aaa:	inc    eax
  423aab:	push   ds
  423aac:	out    0xa3,al
  423aae:	push   0x6b78f337
  423ab3:	jno    0x423ad1
  423ab5:	mov    ah,0x72
  423ab7:	fadd   DWORD PTR [eax-0x55c89d71]
  423abd:	jne    0x423ab3
  423abf:	cwde   
  423ac0:	stc    
  423ac1:	test   DWORD PTR [edx],edi
  423ac3:	cmp    edi,DWORD PTR [ecx+ecx*8]
  423ac6:	test   BYTE PTR [ecx-0x5e],ch
  423ac9:	sbb    ah,ah
  423acb:	jne    0x423afd
  423acd:	mov    ch,0xf9
  423acf:	push   ebp
  423ad0:	pop    ebx
  423ad1:	dec    ebx
  423ad2:	mov    ch,0x36
  423ad4:	adc    ebp,DWORD PTR [edx+edx*4]
  423ad7:	and    BYTE PTR [ebp+0x37],bl
  423ada:	iret   
  423adb:	add    ecx,DWORD PTR ss:[edx+edx*8+0x54]
  423ae0:	in     al,0x8e
  423ae2:	mov    edi,0xf632d951
  423ae7:	jae    0x423b38
  423ae9:	xchg   BYTE PTR [ecx+ebp*8+0x60],dh
  423aed:	loope  0x423ade
  423aef:	retf   0x99de
  423af2:	dec    edi
  423af3:	and    eax,0x9cd0aa4
  423af8:	and    DWORD PTR [edi],edi
  423afa:	outs   dx,DWORD PTR ds:[esi]
  423afb:	push   0xffffff8d
  423afd:	mov    cl,0x82
  423aff:	gs mov ebx,0x3960743a
  423b05:	dec    eax
  423b06:	adc    DWORD PTR [ebp-0x30],0x1c
  423b0a:	jecxz  0x423abf
  423b0c:	stos   BYTE PTR es:[edi],al
  423b0d:	inc    esp
  423b0e:	mov    ebx,0x5ed77aa0
  423b13:	or     esi,0xccf69302
  423b19:	stos   DWORD PTR es:[edi],eax
  423b1a:	xor    ecx,DWORD PTR [edi]
  423b1c:	nop
  423b1d:	(bad)  
  423b1e:	pop    eax
  423b1f:	test   eax,0x997866ba
  423b24:	fild   WORD PTR [edx]
  423b26:	icebp  
  423b27:	lea    esp,[ebx+0x191336a2]
  423b2d:	mov    ds:0xac27403e,al
  423b32:	neg    BYTE PTR [edi-0x29b7d6ad]
  423b38:	jnp    0x423b3c
  423b3a:	jbe    0x423b3c
  423b3c:	xor    DWORD PTR [ebx],eax
  423b3e:	ficom  DWORD PTR [esp+esi*1-0x6d6bede2]
  423b45:	outs   dx,BYTE PTR ds:[esi]
  423b46:	ins    DWORD PTR es:[edi],dx
  423b47:	pop    ss
  423b48:	mov    ah,al
  423b4a:	sub    ch,bh
  423b4c:	ret    
  423b4d:	sbb    eax,DWORD PTR [ecx+0x26f21d04]
  423b53:	ins    BYTE PTR es:[edi],dx
  423b54:	std    
  423b55:	jg     0x423bba
  423b57:	xor    al,ah
  423b59:	inc    ebx
  423b5a:	les    ebx,FWORD PTR [edx+0x63b19b03]
  423b60:	icebp  
  423b61:	addr16 mov gs,esp
  423b64:	mov    eax,ss:0x1156861e
  423b6a:	add    al,0xcb
  423b6c:	add    DWORD PTR [esi+0x63c6e6f1],eax
  423b72:	cmp    esi,DWORD PTR [ecx+0x326cb68e]
  423b78:	cwde   
  423b79:	lds    eax,FWORD PTR [edx+eiz*1-0x1a]
  423b7d:	jns    0x423b0c
  423b7f:	xor    edi,edx
  423b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b82:	test   edi,esi
  423b84:	mov    WORD PTR [ebp-0x4b],ds
  423b87:	or     BYTE PTR [ecx-0x445dec99],dh
  423b8d:	mov    eax,0xedc3a626
  423b92:	cld    
  423b93:	inc    edi
  423b94:	inc    esi
  423b95:	(bad)  
  423b96:	lock mov dl,0x9b
  423b99:	call   0xad74:0x72301a50
  423ba0:	ret    0x2474
  423ba3:	sbb    BYTE PTR [edx],dl
  423ba5:	mov    es,WORD PTR [eax]
	...
  423baf:	add    BYTE PTR [eax],al
  423bb1:	add    BYTE PTR [ebx-0x73],al
  423bb4:	pop    ds
  423bb5:	and    bh,bl
  423bb7:	mov    dl,0x7f
  423bb9:	out    dx,eax
  423bba:	add    BYTE PTR [ebx+0x176f2710],dl
  423bc0:	stc    
  423bc1:	push   ecx
  423bc2:	inc    edx
  423bc3:	scas   al,BYTE PTR es:[edi]
  423bc4:	add    DWORD PTR [eax],eax
  423bc6:	sub    al,0x3
  423bc8:	add    BYTE PTR [eax],al
  423bca:	not    DWORD PTR [edx+0x77]
  423bcd:	rcr    edx,0xe2
  423bd0:	jmp    0xe859db80
  423bd5:	outs   dx,DWORD PTR ds:[esi]
  423bd6:	mov    WORD PTR [esp+ebx*4],ss
  423bd9:	add    ecx,edi
  423bdb:	dec    ebx
  423bdc:	das    
  423bdd:	pop    ecx
  423bde:	mov    ebp,esp
  423be0:	fiadd  DWORD PTR [edx-0x1c7ed830]
  423be6:	popf   
  423be7:	das    
  423be8:	mov    al,ds:0xce3f0a20
  423bed:	dec    esi
  423bee:	iret   
  423bef:	jmp    0xb12ec5c5
  423bf4:	xchg   BYTE PTR [eax],bl
  423bf6:	lahf   
  423bf7:	mov    eax,0xac60a6d2
  423bfc:	sub    al,0x69
  423bfe:	aam    0x4e
  423c00:	lods   al,BYTE PTR ds:[esi]
  423c01:	ins    DWORD PTR es:[edi],dx
  423c02:	cmp    eax,0x73163eae
  423c07:	out    0x37,al
  423c09:	sub    eax,0xfa381647
  423c0e:	jne    0x423bae
  423c10:	popf   
  423c11:	les    esp,FWORD PTR [esi-0x3cde651f]
  423c17:	push   esp
  423c18:	and    DWORD PTR [esi-0x70],ebp
  423c1b:	leave  
  423c1c:	ror    DWORD PTR [ebp+0x46c36bba],cl
  423c22:	cmp    eax,0xb623c1db
  423c27:	daa    
  423c28:	xor    eax,0x6a55839a
  423c2d:	call   0xb68c219c
  423c32:	inc    esi
  423c33:	mov    ebp,0xa49758e6
  423c38:	mov    esp,0xb71a0b7c
  423c3d:	test   BYTE PTR [ebx-0x14],al
  423c40:	mov    ch,0x12
  423c42:	push   0xd56032d8
  423c47:	(bad)  
  423c48:	in     al,dx
  423c49:	fistp  WORD PTR [esp+edi*2-0x18]
  423c4d:	jecxz  0x423cb5
  423c4f:	jecxz  0x423c6d
  423c51:	xor    al,0x83
  423c53:	sub    ecx,esi
  423c55:	push   ecx
  423c56:	lods   al,BYTE PTR ds:[esi]
  423c57:	leave  
  423c58:	adc    DWORD PTR [ebx+0x2cf6b3a6],ebx
  423c5e:	fwait
  423c5f:	mov    ds:0xef21c67d,al
  423c64:	loopne 0x423ce4
  423c66:	mov    ds:0x1819c4ed,eax
  423c6b:	push   ds
  423c6c:	shl    DWORD PTR [edx],0x2e
  423c6f:	and    al,0xbb
  423c71:	jmp    0xb11b36df
  423c76:	or     DWORD PTR [esi*2-0x11ea1a5c],0xffffff9b
  423c7e:	cmp    eax,0x7a50f36d
  423c83:	scas   eax,DWORD PTR es:[edi]
  423c84:	push   0xffffff94
  423c86:	and    ch,dl
  423c88:	dec    eax
  423c89:	jae    0x423c83
  423c8b:	scas   eax,DWORD PTR es:[edi]
  423c8c:	je     0x423c33
  423c8e:	inc    esp
  423c8f:	and    BYTE PTR [eax],0xd7
  423c92:	test   eax,0x1b13a39c
  423c97:	fadd   st(0),st
  423c99:	inc    ebp
  423c9a:	(bad)  
  423c9b:	out    dx,eax
  423c9c:	mov    fs,WORD PTR [edx-0x10a7cca]
  423ca2:	and    ah,BYTE PTR [ebx+ebx*4-0x24dad62]
  423ca9:	(bad)  
  423caa:	push   edx
  423cab:	les    eax,FWORD PTR [ebx-0x7ee1ab68]
  423cb1:	int    0x3b
  423cb3:	push   0x7b
  423cb5:	stos   DWORD PTR es:[edi],eax
  423cb6:	adc    DWORD PTR [esi-0x2b5b3057],esi
  423cbc:	jmp    0xa70b9e4
  423cc1:	pop    esp
  423cc2:	into   
  423cc3:	fisubr DWORD PTR [ecx+0x7c]
  423cc6:	ins    DWORD PTR es:[edi],dx
  423cc7:	pcmpeqb mm5,QWORD PTR [edi+0x296ef4cb]
  423cce:	add    DWORD PTR [esi+0x56],ebx
  423cd1:	shl    al,1
  423cd3:	and    esp,DWORD PTR [ebp+0x25]
  423cd6:	hlt    
  423cd7:	jecxz  0x423cab
  423cd9:	(bad)  
  423cda:	push   cs
  423cdb:	inc    ebp
  423cdc:	ret    
  423cdd:	scas   eax,DWORD PTR es:[edi]
  423cde:	dec    esp
  423cdf:	mov    BYTE PTR [ebp+0x5d2aeb79],bl
  423ce5:	pusha  
  423ce6:	or     DWORD PTR [ebp+0x25],ebx
  423ce9:	xor    al,0x6b
  423ceb:	push   es
  423cec:	xor    edi,DWORD PTR [edi-0x3b]
  423cef:	jnp    0x423ca7
  423cf1:	in     eax,dx
  423cf2:	sub    DWORD PTR [ebx+0x7d064ce0],0x31
  423cf9:	dec    esi
  423cfa:	dec    ebx
  423cfb:	mov    ch,BYTE PTR [ecx-0x63]
  423cfe:	test   eax,0xe1c24502
  423d03:	daa    
  423d04:	dec    ebx
  423d05:	and    al,0x94
  423d07:	adc    ebp,DWORD PTR [edi+0x59b56c3b]
  423d0d:	mov    bl,0xfe
  423d0f:	das    
  423d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d11:	ret    0xc8b4
  423d14:	outs   dx,BYTE PTR ds:[esi]
  423d15:	mov    dh,0x3f
  423d17:	shr    BYTE PTR [ecx-0x3e],cl
  423d1a:	push   edi
  423d1b:	ins    DWORD PTR es:[edi],dx
  423d1c:	add    eax,0x9c4fa92a
  423d21:	shl    esp,0x9d
  423d24:	sub    ecx,edx
  423d26:	loop   0x423cca
  423d28:	int3   
  423d29:	lods   eax,DWORD PTR ds:[esi]
  423d2a:	sti    
  423d2b:	jp     0x423d73
  423d2d:	imul   esp,edi,0x9c85ab5a
  423d33:	push   esi
  423d34:	xchg   esi,eax
  423d35:	mov    al,0x15
  423d37:	jl     0x423d76
  423d39:	jecxz  0x423d5d
  423d3b:	and    ebp,0x2a
  423d3e:	xchg   esi,eax
  423d3f:	jae    0x423cd8
  423d41:	bound  ecx,QWORD PTR [edi+0x3c893aa9]
  423d47:	push   ss
  423d48:	call   FWORD PTR [ecx+edx*2-0x48c67994]
  423d4f:	scas   al,BYTE PTR es:[edi]
  423d50:	nop
  423d51:	xchg   ecx,eax
  423d52:	pop    ss
  423d53:	pop    edx
  423d54:	arpl   WORD PTR [edx-0x196f84a7],bp
  423d5a:	adc    esi,DWORD PTR [ebx-0x32a2dca7]
  423d60:	shl    DWORD PTR [esi],0xbe
  423d63:	ja     0x423db1
  423d65:	imul   ecx,DWORD PTR [ebx+0x62],0x471d28b6
  423d6c:	push   0xffffffef
  423d6e:	mov    edi,0x28e658d1
  423d73:	jl     0x423d81
  423d75:	cli    
  423d76:	clc    
  423d77:	data16 mov bl,0xe6
  423d7a:	jne    0x423dc9
  423d7c:	or     BYTE PTR [edx-0x304c0a6a],ch
  423d82:	lock in eax,dx
  423d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d85:	mov    bl,al
  423d87:	pop    edx
  423d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d89:	jnp    0x423d41
  423d8b:	pop    edi
  423d8c:	(bad)  
  423d8d:	xlat   BYTE PTR ds:[ebx]
  423d8e:	jnp    0x423da7
  423d90:	mov    ds:0x99de36fa,al
  423d95:	sbb    eax,0x1de1d187
  423d9a:	jns    0x423db3
  423d9c:	lea    ebx,[esi+0x63]
  423d9f:	mov    ds:0x33453628,eax
  423da4:	fwait
  423da5:	push   ds
  423da6:	xchg   DWORD PTR [ecx-0x65],edi
  423da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423daa:	inc    ecx
  423dab:	fwait
  423dac:	mov    cl,0x88
  423dae:	mov    al,0x21
  423db0:	push   esp
  423db1:	(bad)  
  423db2:	jmp    0xbfaf:0xb38f2159
  423db9:	test   eax,0x99faed09
  423dbe:	pop    ecx
  423dbf:	jl     0x423e34
  423dc1:	xchg   esi,eax
  423dc2:	mov    ch,0x64
  423dc4:	nop
  423dc5:	ret    0xb21b
  423dc8:	std    
  423dc9:	ror    DWORD PTR [ebp+0x18],0x5c
  423dcd:	stos   DWORD PTR es:[edi],eax
  423dce:	xchg   ebp,eax
  423dcf:	push   cs
  423dd0:	push   eax
  423dd1:	xchg   BYTE PTR [eax],al
  423dd3:	out    0x54,al
  423dd5:	xchg   esi,eax
  423dd6:	pushf  
  423dd7:	inc    ebp
  423dd8:	mov    dl,0x47
  423dda:	pop    ebp
  423ddb:	and    ebx,DWORD PTR [edi+0x10f8c1fb]
  423de1:	jne    0x423d68
  423de3:	add    eax,0xb95c1bf4
  423de8:	frstor [esp+eax*1+0x4d]
  423dec:	lds    edx,FWORD PTR [esp+ecx*8+0x24]
  423df0:	mov    ds:0x7197e5c7,al
  423df5:	pop    ebx
  423df6:	out    dx,al
  423df7:	adc    esp,edx
  423df9:	jb     0x423e0e
  423dfb:	popf   
  423dfc:	jmp    0x423e13
  423dfe:	adc    BYTE PTR [eax+ebx*8],bl
  423e01:	dec    edi
  423e02:	jns    0x423e37
  423e04:	mov    eax,ds:0x8a5c6c2f
  423e09:	and    eax,0x2d7b7477
  423e0e:	retf   
  423e0f:	cmp    al,BYTE PTR [eax]
  423e11:	mov    ss,WORD PTR ds:0xd4face90
  423e17:	push   es
  423e18:	dec    ebx
  423e19:	sahf   
  423e1a:	push   edi
  423e1b:	jmp    DWORD PTR [ebx]
  423e1d:	mov    edi,0xfa4d739f
  423e22:	shl    BYTE PTR [ebp-0x44],cl
  423e25:	adc    al,0xb2
  423e27:	outs   dx,BYTE PTR ds:[esi]
  423e28:	in     al,0xe3
  423e2a:	nop
  423e2b:	add    eax,0xa76ad90
  423e30:	sbb    eax,0xdf9331d6
  423e35:	ds ds (bad) 
  423e38:	pop    edx
  423e39:	mov    edx,0x6f4689ef
  423e3e:	sbb    cl,BYTE PTR [esi+0x220d6e4f]
  423e44:	lea    esp,ds:0x480dac4b
  423e4a:	out    dx,al
  423e4b:	aaa    
  423e4c:	and    eax,0xa28d1cda
  423e51:	nop
  423e52:	dec    ebx
  423e53:	push   es
  423e54:	scas   al,BYTE PTR es:[edi]
  423e55:	arpl   di,si
  423e57:	cmp    BYTE PTR [edx],dl
  423e59:	jg     0x423e1a
  423e5b:	rol    BYTE PTR [esi+0x40],1
  423e5e:	xchg   ebx,eax
  423e5f:	mov    bh,0xc3
  423e61:	xchg   edx,eax
  423e62:	imul   ebp,DWORD PTR [ebx],0x25
  423e65:	pop    ecx
  423e66:	repnz mov eax,ds:0x37fb9396
  423e6c:	fwait
  423e6d:	(bad)  
  423e6e:	mov    dl,0x7e
  423e70:	sahf   
  423e71:	shl    DWORD PTR [edx+0x5064ba77],0x58
  423e78:	cmovs  ecx,edx
  423e7b:	adc    esi,DWORD PTR [ebp-0x11]
  423e7e:	ins    BYTE PTR es:[edi],dx
  423e7f:	mul    DWORD PTR [ebp-0x6fc2e38]
  423e85:	add    eax,0x25a11650
  423e8a:	out    dx,eax
  423e8b:	ds jae 0x423ece
  423e8e:	arpl   bx,bx
  423e90:	or     eax,DWORD PTR [esi+ecx*4+0x5d]
  423e94:	fmul   st(6),st
  423e96:	dec    ecx
  423e97:	pushf  
  423e98:	push   ebx
  423e99:	xor    ebx,esp
  423e9b:	add    al,0x5d
  423e9d:	or     eax,0xda8f91bf
  423ea2:	outs   dx,BYTE PTR ds:[esi]
  423ea3:	jbe    0x423eb6
  423ea5:	xlat   BYTE PTR ds:[ebx]
  423ea6:	xlat   BYTE PTR ds:[ebx]
  423ea7:	mov    bl,al
  423ea9:	jmp    0x423f04
  423eab:	popa   
  423eac:	add    ecx,DWORD PTR [eax]
  423eae:	daa    
  423eaf:	mov    BYTE PTR [edx-0x11a5553],ch
  423eb5:	dec    ebx
  423eb6:	sub    esi,eax
  423eb8:	out    dx,eax
  423eb9:	sbb    BYTE PTR [eax],ch
  423ebb:	popa   
  423ebc:	pop    esi
  423ebd:	hlt    
  423ebe:	xor    ebp,DWORD PTR [esi]
  423ec0:	icebp  
  423ec1:	mov    BYTE PTR [edi-0x61109dbf],al
  423ec7:	out    dx,al
  423ec8:	outs   dx,DWORD PTR ds:[esi]
  423ec9:	push   edi
  423eca:	mov    dh,0xed
  423ecc:	in     eax,dx
  423ecd:	xchg   ebx,eax
  423ece:	mov    WORD PTR [bp+si],gs
  423ed1:	xor    DWORD PTR [eax-0x4b],edx
  423ed4:	push   0x5253de40
  423ed9:	dec    esp
  423eda:	into   
  423edb:	or     al,BYTE PTR [esi-0x70]
  423ede:	jg     0x423e77
  423ee0:	inc    ebp
  423ee1:	arpl   di,bp
  423ee3:	shl    DWORD PTR ds:0x302a25c3,cl
  423ee9:	sub    al,0xf6
  423eeb:	sahf   
  423eec:	imul   BYTE PTR [ebx+0x13eff6e8]
  423ef2:	pop    es
  423ef3:	mov    ebx,0x16e6
	...
  423f00:	add    BYTE PTR [eax],al
  423f02:	hlt    
  423f03:	cmp    DWORD PTR [edx-0x2002081],edx
  423f09:	mov    ebx,0xc0721507
  423f0e:	(bad)  
  423f0f:	enter  0xfee4,0x6e
  423f13:	mov    cl,0x1
  423f15:	add    BYTE PTR [ebx+eax*1],ch
  423f18:	add    BYTE PTR [eax],al
  423f1a:	adc    eax,0xa0f20453
  423f1f:	sub    eax,DWORD PTR [ebx+0x1430eaf6]
  423f25:	or     al,BYTE PTR [ebx-0x2d332ef]
  423f2b:	cmp    ebp,DWORD PTR [ecx-0xe]
  423f2e:	ret    
  423f2f:	stos   DWORD PTR es:[edi],eax
  423f30:	jle    0x423f00
  423f32:	mov    edi,0x78137bda
  423f37:	or     ebp,eax
  423f39:	sbb    BYTE PTR [ecx+0x4050db66],cl
  423f3f:	mov    bh,0x84
  423f41:	xchg   BYTE PTR [esi+eax*1+0x4a],bl
  423f45:	sub    BYTE PTR [ecx],ch
  423f47:	xchg   ebp,eax
  423f48:	bound  esi,QWORD PTR [ebp+0x58]
  423f4b:	mov    ebp,0xf107809
  423f50:	in     eax,dx
  423f51:	adc    al,BYTE PTR [edi+0x4f56b39e]
  423f57:	int    0x2b
  423f59:	cmp    al,0xbf
  423f5b:	add    esi,ecx
  423f5d:	add    ah,BYTE PTR [ebp-0x75]
  423f60:	sub    BYTE PTR [edi],bl
  423f62:	add    eax,DWORD PTR [edx]
  423f64:	gs sbb ch,ch
  423f67:	add    esi,DWORD PTR [ebp+0xe2e4912]
  423f6d:	xor    eax,0x5c1346d7
  423f72:	or     esi,ebp
  423f74:	xor    BYTE PTR [ecx+0x7e],0x17
  423f78:	cs xchg esi,eax
  423f7a:	mov    cl,0x97
  423f7c:	adc    ah,BYTE PTR [edx+ebp*2+0x7f197e86]
  423f83:	lock sahf 
  423f85:	addr16 fsub st,st(5)
  423f88:	and    al,0xe1
  423f8a:	jp     0x423f62
  423f8c:	cmc    
  423f8d:	push   esp
  423f8e:	and    DWORD PTR [edx+0x6e],esp
  423f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f92:	fxtract 
  423f94:	sbb    al,0x70
  423f96:	scas   eax,DWORD PTR es:[edi]
  423f97:	cli    
  423f98:	shl    BYTE PTR [esp+eiz*8+0x69],cl
  423f9c:	mov    eax,0xd9c0fdeb
  423fa1:	lds    ebx,FWORD PTR [esi-0x40858298]
  423fa7:	dec    edi
  423fa8:	pop    ebp
  423fa9:	xchg   DWORD PTR ds:[ebp-0x76955535],esi
  423fb0:	sub    edi,ecx
  423fb2:	jb     0x423f41
  423fb4:	leave  
  423fb5:	adc    dl,al
  423fb7:	int    0x1f
  423fb9:	addr16 jp 0x423f93
  423fbc:	inc    edx
  423fbd:	mov    esi,0xc9e0cb5b
  423fc2:	call   0xbe38:0x2d884013
  423fc9:	sbb    BYTE PTR [esi-0x78],0x25
  423fcd:	(bad)  
  423fce:	enter  0x4a66,0x8c
  423fd2:	shl    BYTE PTR [ebx],cl
  423fd4:	in     al,0x2a
  423fd6:	fbld   TBYTE PTR [ecx-0x4088960e]
  423fdc:	and    ebx,eax
  423fde:	and    BYTE PTR [esp+ebp*8-0x573195ec],ah
  423fe5:	ins    DWORD PTR es:[edi],dx
  423fe6:	push   edx
  423fe7:	mov    DWORD PTR [esi+0x2],ebp
  423fea:	enter  0xeeab,0x9b
  423fee:	xchg   ebp,eax
  423fef:	addr16 mov bl,0x8d
  423ff2:	pop    ecx
  423ff3:	fs and esp,0xcf1a9648
  423ffa:	(bad)  
  423ffb:	repz imul edx,DWORD PTR [edx],0x1
  423fff:	jmp    0xaf2e:0x26c4eb4
  424006:	loopne 0x424001
  424008:	jns    0x423fdf
  42400a:	lods   eax,DWORD PTR ds:[esi]
  42400b:	mov    edx,0xea382d35
  424010:	les    ebx,FWORD PTR [eax-0x7b6752ad]
  424016:	adc    dh,al
  424018:	(bad)  
  424019:	cld    
  42401a:	sbb    eax,0xf95fc5a3
  42401f:	xchg   ebx,eax
  424020:	dec    edx
  424021:	sbb    DWORD PTR [edi],esi
  424023:	loope  0x424037
  424025:	sbb    eax,0x44
  424028:	mov    ds:0xae23077c,eax
  42402d:	out    dx,eax
  42402e:	mov    DWORD PTR [ebx],edx
  424030:	fchs   
  424032:	out    0xa4,al
  424034:	sub    ebp,DWORD PTR [ecx-0x3e]
  424037:	dec    ebp
  424038:	mov    edx,0xe82e62e7
  42403d:	(bad)  
  42403e:	int3   
  42403f:	push   edx
  424040:	addr16 push esp
  424042:	jle    0x424062
  424044:	xchg   al,al
  424046:	sbb    al,0x8b
  424048:	cmc    
  424049:	test   eax,0x23851a3b
  42404e:	imul   edx,DWORD PTR [eax+ebx*1-0x70c0ebc4],0x9830c36d
  424059:	repnz push edi
  42405b:	or     DWORD PTR [ecx-0x2c],esp
  42405e:	or     ch,dh
  424060:	(bad)  
  424061:	loopne 0x424024
  424063:	test   BYTE PTR [eax+edi*8],al
  424066:	outs   dx,DWORD PTR ds:[esi]
  424067:	loop   0x424011
  424069:	xor    ah,BYTE PTR [edi]
  42406b:	pop    ebp
  42406c:	mov    esi,0x1a097cb9
  424071:	repz or BYTE PTR [edx+0x15],bl
  424075:	push   ds
  424076:	in     al,0xe9
  424078:	sbb    BYTE PTR [edi+0x54],0x8e
  42407c:	push   ecx
  42407d:	mov    ds:0xfb253235,eax
  424082:	mov    al,0xbd
  424084:	lea    ebp,[edx-0x3d625166]
  42408a:	cmp    BYTE PTR [edi],0xa3
  42408d:	test   dh,0x60
  424090:	xchg   edx,eax
  424091:	sub    al,0xb4
  424093:	and    dl,BYTE PTR [ecx]
  424095:	test   eax,0x8bdedc46
  42409a:	dec    esp
  42409b:	mov    ebx,0xf5187ae4
  4240a0:	cmp    al,0x32
  4240a2:	inc    esi
  4240a3:	iret   
  4240a4:	and    al,0x1f
  4240a6:	rsqrtps xmm5,xmm3
  4240a9:	xchg   ebp,eax
  4240aa:	in     eax,0xc2
  4240ac:	add    cl,BYTE PTR [ecx+ebp*2+0x4008cc4e]
  4240b3:	mov    ch,0xde
  4240b5:	mov    edx,0xf3fdc1b2
  4240ba:	pop    ecx
  4240bb:	mov    edi,0xfabef003
  4240c0:	fisttp QWORD PTR [ebx]
  4240c2:	pushf  
  4240c3:	mov    eax,ds:0xa78a60ec
  4240c8:	dec    ecx
  4240c9:	inc    ebx
  4240ca:	push   edi
  4240cb:	push   cs
  4240cc:	push   cs
  4240cd:	mov    ecx,0xff285ad0
  4240d2:	xor    ah,BYTE PTR [ebx-0x491ccfe5]
  4240d8:	pop    esp
  4240d9:	mov    esp,0x3f3d5ce
  4240de:	mov    ch,0x27
  4240e0:	(bad)  
  4240e2:	and    ecx,ebp
  4240e4:	jbe    0x424151
  4240e6:	push   0x7bd035d8
  4240eb:	push   0x81135916
  4240f0:	inc    esi
  4240f1:	(bad)  [edi-0x44]
  4240f4:	mov    al,0x1
  4240f6:	imul   edi,DWORD PTR [esi+0x152a680d],0x3a
  4240fd:	call   0x58a5:0xc595f497
  424104:	xor    BYTE PTR [edi-0x10dad4ae],0x18
  42410b:	mov    edx,0x49fa85ee
  424110:	jae    0x42413b
  424112:	mov    dl,0xe5
  424114:	loop   0x424178
  424116:	ror    DWORD PTR [ebx-0x4c414ce7],0x47
  42411d:	mov    edi,0xd48747ed
  424122:	inc    eax
  424123:	es push esp
  424125:	idiv   BYTE PTR [ecx]
  424127:	inc    edi
  424128:	adc    ebx,esp
  42412a:	sbb    dh,cl
  42412c:	mov    edx,0xdf37b81b
  424131:	mov    BYTE PTR [ebp-0x8],bl
  424134:	lea    ecx,[ebx+0x292be971]
  42413a:	sahf   
  42413b:	and    esp,DWORD PTR [edx+ebx*8-0x2234b5e4]
  424142:	xor    ah,BYTE PTR [ebp+0x24]
  424145:	push   edi
  424146:	mov    esi,0x1a6f53b7
  42414b:	mov    al,0x38
  42414d:	in     al,0xa2
  42414f:	out    0xe3,eax
  424151:	fcmovb st,st(6)
  424153:	(bad)  
  424154:	and    BYTE PTR [edi-0x72],ah
  424157:	mov    DWORD PTR [ebp+0x1e],eax
  42415a:	add    al,0xde
  42415c:	dec    eax
  42415d:	in     eax,dx
  42415e:	pop    ss
  42415f:	dec    eax
  424160:	and    BYTE PTR ds:0xd69a4844,cl
  424166:	push   es
  424167:	cld    
  424168:	mov    dl,0x91
  42416a:	popa   
  42416b:	dec    ecx
  42416c:	dec    edx
  42416d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42416e:	sbb    bl,ch
  424170:	sub    al,ah
  424172:	sub    ah,BYTE PTR [edx-0x7f3b443d]
  424178:	jmp    0xf504:0x7703480e
  42417f:	das    
  424180:	shrd   edx,esi,cl
  424183:	ja     0x424144
  424185:	mov    ds,WORD PTR [eax+0x5c]
  424188:	fsubr  DWORD PTR [ecx-0x4599fa6d]
  42418e:	jno    0x42416d
  424190:	lahf   
  424191:	mov    DWORD PTR [eax+eiz*2+0x45],0x7c7f6364
  424199:	or     BYTE PTR [edx-0x15],cl
  42419c:	pop    eax
  42419d:	sar    DWORD PTR [ecx+ecx*1],1
  4241a0:	dec    ebp
  4241a1:	lods   eax,DWORD PTR ds:[esi]
  4241a2:	adc    al,0x53
  4241a4:	stc    
  4241a5:	dec    BYTE PTR [ecx-0x46]
  4241a8:	xchg   ebp,eax
  4241a9:	loop   0x4241fe
  4241ab:	pop    ss
  4241ac:	dec    ebx
  4241ad:	mul    BYTE PTR ds:0x6fc3a3d6
  4241b3:	mov    bh,ch
  4241b5:	das    
  4241b6:	aam    0xad
  4241b8:	jl     0x4241c3
  4241ba:	stc    
  4241bb:	in     eax,0x16
  4241bd:	cmp    DWORD PTR [bp+di],edi
  4241c0:	jo     0x42421b
  4241c2:	mov    bh,0xd8
  4241c4:	(bad)
  4241c7:	mov    ebp,?
  4241c9:	mov    esp,0xaa0e34db
  4241ce:	mov    edx,0xce7648d3
  4241d3:	inc    eax
  4241d4:	popa   
  4241d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241d6:	aas    
  4241d7:	out    0x7,al
  4241d9:	frstor [edi-0x76]
  4241dc:	loopne 0x4241c5
  4241de:	stos   DWORD PTR es:[edi],eax
  4241df:	outs   dx,BYTE PTR ds:[esi]
  4241e0:	outs   dx,DWORD PTR ds:[esi]
  4241e1:	test   DWORD PTR [esi+edx*8-0x36fec3ee],eax
  4241e8:	dec    ecx
  4241e9:	xor    edi,DWORD PTR [ebx+0x54]
  4241ec:	int3   
  4241ed:	xchg   esi,eax
  4241ee:	fimul  WORD PTR [ecx-0x2f]
  4241f1:	outs   dx,BYTE PTR ds:[esi]
  4241f2:	out    dx,al
  4241f3:	xor    bl,BYTE PTR [esi+ecx*2]
  4241f6:	or     BYTE PTR [esi-0x5],ch
  4241f9:	lahf   
  4241fa:	fsubr  DWORD PTR [ecx+0x26]
  4241fd:	pop    ss
  4241fe:	nop
  4241ff:	int3   
  424200:	mov    ch,0x52
  424202:	pop    eax
  424203:	mov    bh,0x43
  424205:	repz loopne 0x42420f
  424208:	inc    eax
  424209:	push   edi
  42420a:	push   ebx
  42420b:	aaa    
  42420c:	xchg   DWORD PTR [ebx+0x1bcd3592],edi
  424212:	mov    al,0x7c
  424214:	jp     0x424234
  424216:	pop    edi
  424217:	mov    ds:0x3231136b,eax
  42421c:	xchg   esp,eax
  42421d:	push   0xc3462386
  424222:	mov    edx,0xb8b76e08
  424227:	and    dh,dl
  424229:	jmp    0xd9ad:0xbd23d94b
  424230:	inc    ecx
  424231:	jl     0x4242aa
  424233:	stos   BYTE PTR es:[edi],al
  424234:	pop    esp
  424235:	and    eax,0x4118f5c
  42423a:	mov    ds:0x57de1ec6,al
  42423f:	jnp    0x42429b
  424241:	jnp    0x4242a7
  424243:	sub    dl,BYTE PTR [edi+0x59]
	...
  424251:	add    BYTE PTR [esi+edi*1+0x24],dl
  424255:	sbb    DWORD PTR [esi+0x1b],ebp
  424258:	jge    0x4242d9
  42425a:	(bad)  
  42425b:	mov    eax,0x1ce2cfc0
  424260:	outs   dx,DWORD PTR ds:[esi]
  424261:	xchg   esp,eax
  424262:	call   0x3:0x2c0001b4
  424269:	add    BYTE PTR [ecx+0x52],dh
  42426c:	mov    BYTE PTR [edi],cl
  42426e:	outs   dx,DWORD PTR ds:[esi]
  42426f:	out    0x99,eax
  424271:	push   ss
  424272:	int    0x12
  424274:	pop    edi
  424275:	dec    esi
  424276:	pop    esp
  424277:	fwait
  424278:	call   0x5d21:0x8e40a969
  42427f:	pop    ds
  424280:	push   0x30657741
  424285:	xor    BYTE PTR [esi],ch
  424287:	mov    ch,0xff
  424289:	push   eax
  42428a:	mov    bl,0x9f
  42428c:	lods   eax,DWORD PTR ds:[esi]
  42428d:	les    edx,FWORD PTR [ebx+ebp*1+0x1a]
  424291:	xchg   ebx,eax
  424292:	mov    eax,ds:0x304342c3
  424297:	inc    esi
  424298:	shl    BYTE PTR [edx],cl
  42429a:	(bad)  
  42429b:	data16 cld 
  42429d:	out    0x4f,al
  42429f:	add    DWORD PTR [ecx+ebp*1-0x6a],edi
  4242a3:	add    eax,0xbea2f08d
  4242a8:	int    0x96
  4242aa:	xor    al,0x3b
  4242ac:	sub    ch,bh
  4242ae:	xchg   ebx,eax
  4242af:	and    edi,DWORD PTR [eax+0x53bcba86]
  4242b5:	(bad)  
  4242b6:	cmp    ch,BYTE PTR [ebx+0x6af684de]
  4242bc:	lahf   
  4242bd:	mov    bl,dh
  4242bf:	xor    BYTE PTR [edi+0x13],ah
  4242c2:	ret    0xe5e1
  4242c5:	mov    ah,0x25
  4242c7:	xor    DWORD PTR [esi-0x6f63affc],0x519339
  4242d1:	sub    BYTE PTR [eax],bh
  4242d3:	xor    DWORD PTR [edi-0x18f51304],ebp
  4242d9:	pop    ebx
  4242da:	(bad)  
  4242db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242dc:	adc    ebx,0xb
  4242df:	mov    al,ds:0x16ce6084
  4242e4:	xchg   ebp,eax
  4242e5:	shl    BYTE PTR [ecx],0x2f
  4242e8:	ds cmc 
  4242ea:	push   ebp
  4242eb:	and    BYTE PTR [edx+0x32],0xd
  4242ef:	ins    BYTE PTR es:[edi],dx
  4242f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242f1:	mov    BYTE PTR [ebx-0x7b],0x24
  4242f5:	rcr    BYTE PTR [ebx-0x2727d1be],1
  4242fb:	pop    edx
  4242fc:	mov    al,ds:0x6bec2bc2
  424301:	cli    
  424302:	sub    BYTE PTR [esi+0xa],cl
  424305:	xor    eax,0xe8adfece
  42430a:	int    0xb8
  42430c:	jnp    0x4242d0
  42430e:	adc    bh,ah
  424310:	in     eax,0xee
  424312:	lods   eax,DWORD PTR ds:[esi]
  424313:	je     0x4242e9
  424315:	stc    
  424316:	addr16 push 0xfffffff4
  424319:	jmp    0xb1df134b
  42431e:	inc    eax
  42431f:	pop    ebx
  424320:	lods   al,BYTE PTR ds:[esi]
  424321:	iret   
  424322:	je     0x4242d2
  424324:	mov    al,0x1d
  424326:	xchg   ecx,eax
  424327:	ins    BYTE PTR es:[edi],dx
  424328:	mov    bh,0x34
  42432a:	adc    eax,0xa43e824d
  42432f:	enter  0x6efe,0xaf
  424333:	sub    BYTE PTR [esi-0x5],ch
  424336:	lock cmp eax,0xec2371a2
  42433c:	outs   dx,BYTE PTR ds:[esi]
  42433d:	lds    esp,FWORD PTR [esi+0x43e9fa7b]
  424343:	add    eax,0xc0750491
  424348:	stc    
  424349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42434a:	lock add DWORD PTR [ebp+0x4a],0xfffffff4
  42434f:	out    dx,eax
  424350:	lds    ebx,FWORD PTR [esi+edx*8-0x74]
  424354:	jg     0x424335
  424356:	stos   DWORD PTR es:[edi],eax
  424357:	pusha  
  424358:	mov    ah,0xfd
  42435a:	add    ecx,DWORD PTR [ecx-0x2b]
  42435d:	nop
  42435e:	fisttp WORD PTR ds:0xcf008ed4
  424365:	retf   0x6db5
  424368:	fiadd  WORD PTR ds:0x6105f8d7
  42436e:	ins    BYTE PTR es:[edi],dx
  42436f:	int3   
  424370:	mov    WORD PTR [ecx+0x33],es
  424373:	push   cs
  424374:	stc    
  424375:	sbb    DWORD PTR [eax],0x48
  424378:	fadd   st,st(2)
  42437a:	inc    eax
  42437b:	jbe    0x424383
  42437d:	lods   eax,DWORD PTR ds:[esi]
  42437e:	adc    eax,0x31c31c93
  424383:	mov    ebx,DWORD PTR [ebp+0x2c]
  424386:	jl     0x424353
  424388:	outs   dx,DWORD PTR ds:[esi]
  424389:	mov    cl,0x9b
  42438b:	dec    ebx
  42438c:	arpl   sp,sp
  42438e:	adc    DWORD PTR [edx+0x4bf57e1c],ebx
  424394:	ficom  WORD PTR [ebx]
  424396:	add    al,0x26
  424398:	jg     0x424393
  42439a:	push   0xffffffcd
  42439c:	jb     0x42437f
  42439e:	and    eax,DWORD PTR [ebp+0x1b3e58f]
  4243a4:	dec    ebx
  4243a5:	shl    DWORD PTR [edi],0xfe
  4243a8:	jecxz  0x424355
  4243aa:	push   DWORD PTR [esi+0x378c078]
  4243b0:	ja     0x424427
  4243b2:	shl    DWORD PTR [ebx+0x151a3874],0x72
  4243b9:	push   ebx
  4243ba:	or     bh,cl
  4243bc:	out    0xd9,al
  4243be:	mov    gs,WORD PTR ds:0x96ea6582
  4243c4:	sub    DWORD PTR [edi-0x345bbc66],0x6102d379
  4243ce:	push   0x3d
  4243d0:	int3   
  4243d1:	jb     0x4243e4
  4243d3:	ror    BYTE PTR [ebx-0x7862860a],0x84
  4243da:	in     al,0x34
  4243dc:	sub    al,0x21
  4243de:	xor    dl,BYTE PTR [eax+0x67fbd895]
  4243e4:	dec    ebp
  4243e5:	xor    ch,BYTE PTR [esi-0x59]
  4243e8:	int    0x99
  4243ea:	test   DWORD PTR [eax],edx
  4243ec:	outs   dx,BYTE PTR ds:[esi]
  4243ed:	stc    
  4243ee:	mov    eax,ds:0x23fa4924
  4243f4:	out    0x12,eax
  4243f6:	cmc    
  4243f7:	scas   al,BYTE PTR es:[edi]
  4243f8:	push   ss
  4243f9:	fisub  WORD PTR [eax+0x539671ef]
  4243ff:	push   0xc9bee5a5
  424404:	fdivr  st,st(3)
  424406:	jbe    0x4243cc
  424408:	in     eax,dx
  424409:	adc    edx,DWORD PTR [esi+0x7e]
  42440c:	push   0xc592fe68
  424411:	stos   BYTE PTR es:[edi],al
  424412:	(bad)  
  424413:	shl    BYTE PTR [esi+0xe],cl
  424416:	dec    ecx
  424417:	data16 stos BYTE PTR es:[edi],al
  424419:	fst    st(2)
  42441b:	cmp    edx,ecx
  42441d:	aas    
  42441e:	add    edi,edx
  424420:	imul   ecx,DWORD PTR [edx+0x4e],0x156c8564
  424427:	adc    dl,BYTE PTR [edx+0x3e646f0d]
  42442d:	or     DWORD PTR [edx-0x3b],ebp
  424430:	in     eax,dx
  424431:	(bad)  
  424432:	mov    ebp,0x971cf629
  424437:	les    eax,FWORD PTR [edx+0x1ebaeaa9]
  42443d:	xchg   DWORD PTR [ebp+0x1389101],edi
  424443:	xchg   edi,eax
  424444:	mov    eax,ds:0xf4b611dc
  424449:	hlt    
  42444a:	fild   WORD PTR [ebx+0x33e67b93]
  424450:	cmp    DWORD PTR [eax-0x31],edi
  424453:	lods   al,BYTE PTR ds:[esi]
  424454:	push   esp
  424455:	icebp  
  424456:	dec    eax
  424457:	xchg   BYTE PTR [ebp+esi*2-0x52573dad],cl
  42445e:	mov    edi,0xf43d3fc2
  424463:	dec    ecx
  424464:	push   esi
  424465:	pop    edx
  424466:	loopne 0x4244a6
  424468:	sbb    al,0xba
  42446a:	cmp    DWORD PTR [ebp-0x33],0xdab8d78b
  424471:	xchg   esp,eax
  424472:	or     esi,0x31
  424475:	fcom   DWORD PTR gs:[ebp-0x58]
  424479:	enter  0x6747,0x47
  42447d:	sbb    eax,0x667c776f
  424482:	mov    ebp,0x11aa6c73
  424487:	stos   DWORD PTR es:[edi],eax
  424488:	add    eax,0x77601308
  42448d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42448e:	in     al,0x2c
  424490:	dec    eax
  424491:	xchg   DWORD PTR [edx-0x1bf3f2a3],eax
  424497:	das    
  424498:	pop    ds
  424499:	pop    esp
  42449a:	repnz mov ds:0x1431e553,al
  4244a0:	mov    ds:0xaf032c51,al
  4244a5:	xchg   esi,eax
  4244a6:	xchg   DWORD PTR [esi+0x5a],ebp
  4244a9:	ss (bad) 
  4244ac:	data16 jp 0x424432
  4244af:	sti    
  4244b0:	and    dh,BYTE PTR [ebx]
  4244b2:	xchg   ebp,eax
  4244b3:	mov    ds:0x93e748e5,al
  4244b8:	mov    ch,0x70
  4244ba:	push   edi
  4244bb:	pop    esi
  4244bc:	push   0xffffff8e
  4244be:	leave  
  4244bf:	sbb    dl,dl
  4244c1:	repz push esi
  4244c3:	or     ah,BYTE PTR [ebx]
  4244c5:	test   al,0x33
  4244c7:	inc    edx
  4244c8:	shr    DWORD PTR [esi-0xa09a5ce],0xb
  4244cf:	adc    al,0x4f
  4244d1:	add    BYTE PTR [edi-0x4b2a424b],dh
  4244d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244d8:	outs   dx,DWORD PTR ds:[esi]
  4244d9:	pushf  
  4244da:	xchg   ebx,eax
  4244db:	and    eax,0x69ac349e
  4244e0:	ins    DWORD PTR es:[edi],dx
  4244e1:	inc    ebx
  4244e2:	xchg   ebx,eax
  4244e3:	rcr    esi,cl
  4244e5:	adc    al,cl
  4244e7:	push   0xf5dd04dc
  4244ec:	cmp    bl,0xe
  4244ef:	bound  eax,QWORD PTR [ecx]
  4244f1:	push   0xfffffff5
  4244f3:	fisubr WORD PTR [edi+0x2f]
  4244f6:	mov    ch,0xa3
  4244f8:	fcmovnu st,st(3)
  4244fa:	data16 adc ch,ch
  4244fd:	jle    0x4244f0
  4244ff:	ins    BYTE PTR es:[edi],dx
  424500:	push   ds
  424501:	in     eax,0x8c
  424503:	std    
  424504:	sbb    al,0x99
  424506:	adc    DWORD PTR [eax],0xde98a472
  42450c:	xchg   ebp,eax
  42450d:	call   0x9703:0x6ea2045b
  424514:	jmp    0x4244e3
  424516:	jg     0x424505
  424518:	call   0x7d939f76
  42451d:	stc    
  42451e:	push   eax
  42451f:	xor    BYTE PTR [esp+ecx*8-0x68],0xa
  424524:	sbb    eax,0x73fdb8eb
  424529:	ds fsubr st(6),st
  42452c:	pop    ebx
  42452d:	popf   
  42452e:	push   ebx
  42452f:	mov    ah,0xb3
  424531:	arpl   WORD PTR [eax],bx
  424533:	iret   
  424534:	jns    0x424536
  424536:	inc    eax
  424537:	repz in al,0xf9
  42453a:	cmp    eax,0xd3b680d3
  42453f:	jmp    0x4244e1
  424541:	in     eax,0x2c
  424543:	aaa    
  424544:	or     DWORD PTR [edi+ebp*8],ebx
  424547:	and    DWORD PTR [edi],esi
  424549:	xchg   edx,eax
  42454a:	lahf   
  42454b:	adc    eax,0x577256e3
  424550:	mov    ?,WORD PTR [ebp+0x0]
  424553:	in     al,dx
  424554:	daa    
  424555:	int    0x53
  424557:	jl     0x424566
  424559:	mov    edx,eax
  42455b:	mov    BYTE PTR [edx+0xf364578],0xcc
  424562:	test   BYTE PTR [edx-0x46],dl
  424565:	dec    ebx
  424566:	adc    dh,BYTE PTR [ebx]
  424568:	inc    eax
  424569:	xchg   ebx,eax
  42456a:	test   eax,0x77900b1
  42456f:	das    
  424570:	lods   al,BYTE PTR gs:[esi]
  424572:	mov    al,0x66
  424574:	loopne 0x4244fa
  424576:	cmc    
  424577:	adc    DWORD PTR [esi+eax*4-0x3fecb337],esi
  42457e:	mul    DWORD PTR ds:0xb42659a6
  424584:	jl     0x4245a5
  424586:	mov    al,ds:0xd3b5bfcf
  42458b:	pop    esp
  42458c:	jle    0x4245fd
  42458e:	leave  
  42458f:	repz pop edi
  424591:	cs adc eax,0x6adf03
	...
  42459f:	add    BYTE PTR [eax],al
  4245a1:	add    BYTE PTR [esi+0x74ef74ea],bh
  4245a7:	(bad)  
  4245a8:	mov    edi,0x98b349fb
  4245ad:	xor    ah,BYTE PTR [ebp-0x39c7bc89]
  4245b3:	mov    bh,0x1
  4245b5:	add    BYTE PTR [ebx+eax*1],ch
  4245b8:	add    BYTE PTR [eax],al
  4245ba:	loope  0x424587
  4245bc:	ror    BYTE PTR [eax],cl
  4245be:	jecxz  0x424593
  4245c0:	cmp    BYTE PTR [esi-0xb927178],0x5f
  4245c7:	inc    esi
  4245c8:	xchg   BYTE PTR [edx+0x63b675d3],bh
  4245ce:	ins    BYTE PTR es:[edi],dx
  4245cf:	bound  eax,QWORD PTR [eax+0x123087a9]
  4245d5:	out    dx,al
  4245d6:	clc    
  4245d7:	sti    
  4245d8:	lea    ebx,[edx]
  4245da:	mov    al,ds:0x9f96c9e7
  4245df:	popa   
  4245e0:	cmp    ch,BYTE PTR [edx]
  4245e2:	(bad)  
  4245e3:	cld    
  4245e4:	clc    
  4245e5:	shr    BYTE PTR [ebp-0x391768a9],cl
  4245eb:	mov    DWORD PTR [eax+0x46],0x5c8fa7b7
  4245f2:	test   al,0xfe
  4245f4:	dec    edx
  4245f5:	jge    0x424626
  4245f7:	push   ss
  4245f8:	xlat   BYTE PTR ds:[ebx]
  4245f9:	mov    ds:0x830a7db6,al
  4245fe:	xor    DWORD PTR [esi+edi*4-0x5af4f1e1],edx
  424605:	dec    edx
  424606:	jle    0x4245d6
  424608:	mov    cl,0x7b
  42460a:	stos   DWORD PTR es:[edi],eax
  42460b:	xlat   BYTE PTR ds:[ebx]
  42460c:	jle    0x4245f9
  42460e:	cwde   
  42460f:	pop    ecx
  424610:	retf   0xfa58
  424613:	ss mov edx,0xc974e61
  424619:	sub    ecx,DWORD PTR [edx+0x73]
  42461c:	jmp    0x4245ad
  42461e:	retf   0x362c
  424621:	or     BYTE PTR [edx],al
  424623:	addr16 pop edx
  424625:	pop    edx
  424626:	jmp    0x424694
  424628:	or     BYTE PTR [ecx],ah
  42462a:	aad    0xc8
  42462c:	outs   dx,DWORD PTR ds:[esi]
  42462d:	adc    eax,0x20997a32
  424632:	mov    bl,0xad
  424634:	mov    edx,0x861dc294
  424639:	int    0x8c
  42463b:	out    0x91,eax
  42463d:	inc    ebx
  42463e:	pop    esi
  42463f:	adc    DWORD PTR es:[eax+0x7e939118],ebp
  424646:	pop    edx
  424647:	(bad)  
  424648:	xor    eax,0x28659a13
  42464d:	sbb    BYTE PTR gs:[edx],0x3
  424651:	jle    0x424607
  424653:	xor    edi,DWORD PTR [ecx-0x4e]
  424656:	dec    esp
  424657:	cs xchg esi,eax
  424659:	sub    eax,0x69dcf178
  42465e:	push   ebx
  42465f:	outs   dx,BYTE PTR ds:[esi]
  424660:	scas   eax,DWORD PTR es:[edi]
  424661:	mov    eax,fs:0x10a9712c
  424667:	xor    ch,BYTE PTR [ebx-0x5f]
  42466a:	stos   BYTE PTR es:[edi],al
  42466b:	jle    0x424691
  42466d:	dec    esi
  42466e:	and    eax,0x3913b04
  424673:	ficomp WORD PTR [ecx-0x54]
  424676:	imul   ebp,esi,0xae8a3d70
  42467c:	pusha  
  42467d:	push   ebx
  42467e:	or     al,0xdf
  424680:	push   ecx
  424681:	push   eax
  424682:	cli    
  424683:	lock jle 0x424655
  424686:	lahf   
  424687:	mov    ecx,0xb1efc3df
  42468c:	jo     0x42468d
  42468e:	and    DWORD PTR [ebp+0x65ca62a3],ebx
  424694:	fisttp DWORD PTR [ebx+0x5a]
  424697:	lock nop
  424699:	dec    edi
  42469a:	int    0xd7
  42469c:	cmp    ecx,DWORD PTR [ecx-0x525ac114]
  4246a2:	lahf   
  4246a3:	mov    ebx,DWORD PTR [edi]
  4246a5:	push   esi
  4246a6:	test   DWORD PTR [esi+eiz*1-0x16],0x86ca4af6
  4246ae:	sub    dh,dh
  4246b0:	push   eax
  4246b1:	ins    DWORD PTR es:[edi],dx
  4246b2:	fistp  WORD PTR [ebp+ebp*8-0x61]
  4246b6:	out    0xb6,al
  4246b8:	pushf  
  4246b9:	in     al,dx
  4246ba:	or     ecx,DWORD PTR [eax+0x225817c1]
  4246c0:	and    al,0xc7
  4246c2:	mov    WORD PTR [eax],ds
  4246c4:	les    ebp,FWORD PTR [esi]
  4246c6:	dec    edx
  4246c7:	popa   
  4246c8:	add    al,0x29
  4246ca:	pop    ebp
  4246cb:	fstp   QWORD PTR [edx-0x17]
  4246ce:	outs   dx,DWORD PTR ds:[esi]
  4246cf:	fcmovnbe st,st(4)
  4246d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246d2:	ror    DWORD PTR [esi-0xa],0x40
  4246d6:	or     al,0xcf
  4246d8:	stos   BYTE PTR es:[edi],al
  4246d9:	imul   eax,DWORD PTR [edx-0x1f],0xdd707aa7
  4246e0:	cvtps2pd xmm0,QWORD PTR [edi-0xfbfa3d7]
  4246e7:	es int3 
  4246e9:	jno    0x4246c8
  4246eb:	push   ecx
  4246ec:	jg     0x42469c
  4246ee:	dec    DWORD PTR [ebx]
  4246f0:	fidiv  DWORD PTR [ebx]
  4246f2:	fs jp  0x4246fb
  4246f5:	sar    dh,cl
  4246f7:	fst    QWORD PTR [edi]
  4246f9:	mov    ds:0xd0902d2a,al
  4246fe:	dec    eax
  4246ff:	pop    edx
  424700:	loopne 0x4246bb
  424702:	jns    0x4246f9
  424704:	cmp    dl,BYTE PTR [esi-0x16b0b2a5]
  42470a:	out    dx,al
  42470b:	shr    DWORD PTR [ebx-0x4d700a6b],1
  424711:	cld    
  424712:	jle    0x424778
  424714:	int    0x6f
  424716:	bound  esi,QWORD PTR [eax-0x26]
  424719:	xchg   edi,eax
  42471a:	xchg   BYTE PTR [ebp-0x3105ae10],bh
  424720:	cs retf 
  424722:	nop
  424723:	mov    bl,0xbf
  424725:	jge    0x42473a
  424727:	ins    DWORD PTR es:[edi],dx
  424728:	dec    edi
  424729:	icebp  
  42472a:	repnz sub DWORD PTR [ebp+eax*2-0x61da875b],0x56
  424733:	test   BYTE PTR [edx-0x2973d854],dl
  424739:	sub    bh,BYTE PTR [edx+0x7b]
  42473c:	lds    esi,FWORD PTR [esp+edi*8+0x30edd0cc]
  424743:	call   0x8da2:0xdf25c35c
  42474a:	sbb    ch,BYTE PTR [eax+0x62]
  42474d:	mov    ecx,0xef8c6df2
  424752:	nop
  424753:	test   eax,0x479dd74a
  424758:	mov    eax,ds:0x1cce3fd7
  42475d:	int    0x18
  42475f:	and    ebp,DWORD PTR [edi-0x40b82919]
  424765:	pop    es
  424766:	loope  0x424744
  424768:	pop    ebx
  424769:	mov    ds,WORD PTR [esi]
  42476b:	jge    0x424731
  42476d:	xchg   edi,eax
  42476e:	or     al,BYTE PTR [ecx+0x78]
  424771:	fmul   QWORD PTR [edx-0x57]
  424774:	shr    bl,1
  424776:	(bad)  
  424777:	in     al,0x0
  424779:	inc    ecx
  42477a:	push   edx
  42477b:	push   cs
  42477c:	pop    eax
  42477d:	ficomp WORD PTR [edx+0x7f8cf058]
  424783:	(bad)  
  424784:	push   ebx
  424785:	mov    esi,0x695943e1
  42478a:	neg    BYTE PTR [ebp+ecx*8-0x3d]
  42478e:	inc    eax
  42478f:	jg     0x4247cc
  424791:	hlt    
  424792:	mov    esi,ebp
  424794:	ret    
  424795:	jbe    0x4247e9
  424797:	mov    bl,dl
  424799:	pop    ss
  42479a:	add    esi,DWORD PTR [esi+0x42009061]
  4247a0:	mov    ah,0x8f
  4247a2:	retf   0xf65e
  4247a5:	sub    ebp,DWORD PTR [edx+eax*8+0xe561817]
  4247ac:	jbe    0x424757
  4247ae:	sub    eax,0x548e8560
  4247b3:	stos   DWORD PTR es:[edi],eax
  4247b4:	jne    0x424830
  4247b6:	enter  0x2a42,0x4b
  4247ba:	push   0x16
  4247bc:	in     al,dx
  4247bd:	rcl    bl,0x6f
  4247c0:	aaa    
  4247c1:	mov    edi,0x1cf56397
  4247c6:	retf   
  4247c7:	xchg   ecx,eax
  4247c8:	mov    ch,0x76
  4247ca:	(bad)  
  4247cb:	mul    ch
  4247cd:	cmp    BYTE PTR [ecx],dl
  4247cf:	movsx  ecx,sp
  4247d2:	sahf   
  4247d3:	adc    ecx,esi
  4247d5:	add    DWORD PTR [eax+0x61],0x19
  4247d9:	fst    DWORD PTR [ecx+ebp*4]
  4247dc:	mov    DWORD PTR [esi],ecx
  4247de:	daa    
  4247df:	(bad)  
  4247e0:	mov    ds:0xac5b43c9,al
  4247e5:	sub    BYTE PTR [eax-0x24d8e5cd],dl
  4247eb:	inc    ebx
  4247ec:	fld    QWORD PTR [ecx]
  4247ee:	lahf   
  4247ef:	dec    edi
  4247f0:	imul   ebp,edi,0xfa74798e
  4247f6:	cmp    al,0x5
  4247f8:	push   ecx
  4247f9:	in     al,0x65
  4247fb:	cmp    eax,0x88dac643
  424800:	mov    bl,0xce
  424802:	out    dx,eax
  424803:	aam    0x6e
  424805:	out    0xe2,eax
  424807:	add    DWORD PTR [ebx+ecx*1],esi
  42480a:	pop    es
  42480b:	or     ah,BYTE PTR [ecx+0x10737d48]
  424811:	in     al,0xea
  424813:	shr    ebp,cl
  424815:	mov    eax,0xe4bcc81d
  42481a:	mov    ah,0x7a
  42481c:	mov    ah,0x37
  42481e:	neg    DWORD PTR [edi]
  424820:	or     ecx,esi
  424822:	pop    esi
  424823:	pusha  
  424824:	jge    0x424818
  424826:	fninit 
  424828:	pop    ecx
  424829:	mov    esi,0x778ae055
  42482e:	jae    0x424863
  424830:	push   ss
  424831:	or     al,BYTE PTR [ebx]
  424833:	imul   ebx,DWORD PTR [edx],0x17
  424836:	jmp    FWORD PTR [ecx+eiz*8+0x36]
  42483a:	pop    ds
  42483b:	ret    
  42483c:	outs   dx,DWORD PTR ds:[esi]
  42483d:	sub    esi,ebx
  42483f:	loopne 0x424835
  424841:	aad    0x5f
  424843:	cdq    
  424844:	cwde   
  424845:	cmp    eax,DWORD PTR [eax-0x1a]
  424848:	popf   
  424849:	adc    eax,0x5979ce22
  42484e:	push   es
  42484f:	scas   eax,DWORD PTR es:[edi]
  424850:	shr    BYTE PTR [esi+ebp*1+0x4c9b7413],1
  424857:	repnz test BYTE PTR [ebx+0x7b],cl
  42485b:	xchg   DWORD PTR [ecx+0x2932199e],ebp
  424861:	inc    ecx
  424862:	dec    edx
  424863:	test   DWORD PTR [edx+0x2d2799af],esi
  424869:	mov    DWORD PTR [esp+0x3d],edi
  42486d:	hlt    
  42486e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42486f:	sbb    DWORD PTR [edi],esp
  424871:	data16 scas al,BYTE PTR es:[edi]
  424873:	sbb    BYTE PTR [ecx+0x3bf0a2a],ch
  424879:	aaa    
  42487a:	and    DWORD PTR [edx],0x49
  42487d:	mov    ebx,0x508fce93
  424882:	ins    DWORD PTR es:[edi],dx
  424883:	icebp  
  424884:	or     bh,BYTE PTR [eax]
  424886:	jg     0x424829
  424888:	push   edx
  424889:	fs dec edx
  42488b:	cdq    
  42488c:	jge    0x4248d2
  42488e:	cmc    
  42488f:	scas   eax,DWORD PTR es:[edi]
  424890:	mov    ch,0x92
  424892:	xchg   ebp,eax
  424893:	and    eax,0xa40de28e
  424898:	inc    ebx
  424899:	leave  
  42489a:	xor    BYTE PTR [edx],bl
  42489c:	xchg   ecx,eax
  42489d:	ins    BYTE PTR es:[edi],dx
  42489e:	mov    esi,0x5a666834
  4248a3:	push   edx
  4248a4:	outs   dx,DWORD PTR ds:[esi]
  4248a5:	add    eax,0xddbd1902
  4248aa:	or     al,0xe3
  4248ac:	ds jae 0x4248b1
  4248af:	sbb    eax,0xe1371809
  4248b4:	adc    al,0xc2
  4248b6:	(bad)  
  4248b7:	mov    DWORD PTR [ebx],ebp
  4248b9:	cmp    BYTE PTR [ebx+ecx*1],al
  4248bc:	dec    edi
  4248bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248be:	mov    esi,0xe2bf432b
  4248c3:	sub    ebx,ecx
  4248c5:	in     al,0xda
  4248c7:	shl    BYTE PTR [edx+edi*8-0x65],0x80
  4248cc:	cmp    al,0xc7
  4248ce:	call   0x768a:0x8c956486
  4248d5:	or     edi,DWORD PTR [edx]
  4248d7:	mov    ah,0x57
  4248d9:	mov    esi,0xa74e1a07
  4248de:	dec    edi
  4248df:	pop    ds
  4248e0:	push   ss
  4248e1:	sub    DWORD PTR [edi+0x4c],0xffffff95
  4248e5:	cdq    
	...
  4248f2:	dec    ebx
  4248f3:	inc    ebp
  4248f4:	mov    edx,0x5fffbeee
  4248f9:	in     eax,0x54
  4248fb:	stos   BYTE PTR es:[edi],al
  4248fc:	clc    
  4248fd:	adc    esi,eax
  4248ff:	or     dl,BYTE PTR [eax]
  424901:	dec    edi
  424902:	repnz mov edx,0x32c0001
  424908:	add    BYTE PTR [eax],al
  42490a:	fisubr WORD PTR [ecx+eiz*2-0x44]
  42490e:	inc    ebx
  42490f:	or     al,0x21
  424911:	test   al,0xa7
  424913:	and    DWORD PTR ds:0x55af50f8,0x2444ecfd
  42491d:	push   edx
  42491e:	fnstcw WORD PTR [bx+0xeb5]
  424923:	push   ecx
  424924:	mov    dh,0x79
  424926:	(bad)  
  424927:	int3   
  424928:	mov    ch,0xcb
  42492a:	cmp    edx,edi
  42492c:	and    BYTE PTR [edx-0x9900556],bh
  424932:	dec    ebx
  424933:	xlat   BYTE PTR ds:[ebx]
  424934:	inc    esp
  424935:	popf   
  424936:	push   cs
  424937:	add    al,0x84
  424939:	mov    bh,0x56
  42493b:	mov    al,ds:0xad9d4d26
  424940:	push   es
  424941:	push   esp
  424942:	xchg   esi,eax
  424943:	and    cl,bl
  424945:	jbe    0x4248dd
  424947:	lahf   
  424948:	scas   eax,DWORD PTR es:[edi]
  424949:	push   edi
  42494a:	jl     0x4248cc
  42494c:	ins    DWORD PTR es:[edi],dx
  42494d:	enter  0x4dab,0x82
  424951:	xor    esi,DWORD PTR [eax+ecx*8+0x4a7d6846]
  424958:	sbb    bl,BYTE PTR [esi-0x14156fc4]
  42495e:	repz scas eax,DWORD PTR es:[edi]
  424960:	scas   al,BYTE PTR es:[edi]
  424961:	xor    DWORD PTR [ecx+0x6ac9a09e],edi
  424967:	mov    esi,DWORD PTR [esi+eiz*2]
  42496a:	test   al,0x55
  42496c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42496d:	xlat   BYTE PTR ds:[ebx]
  42496e:	in     eax,dx
  42496f:	xchg   edi,eax
  424970:	mov    ah,0x73
  424972:	sar    BYTE PTR [edx-0x73f8a1d7],0x5a
  424979:	retf   0x206f
  42497c:	inc    ebx
  42497d:	cmp    al,BYTE PTR [edi+0x120e339c]
  424983:	stc    
  424984:	dec    eax
  424985:	push   ebx
  424986:	mov    ds:0xe251d402,al
  42498b:	xor    BYTE PTR [ebx],dl
  42498d:	fild   DWORD PTR [esi+0x48]
  424990:	or     eax,0x64f993f3
  424995:	pop    esi
  424996:	and    eax,0xd4e98fa
  42499b:	sub    edi,0x9ff3836b
  4249a1:	adc    al,0xc4
  4249a3:	sbb    BYTE PTR [esi+0x12dced79],bl
  4249a9:	and    ecx,esi
  4249ab:	repz (bad) 
  4249ad:	xchg   ecx,eax
  4249ae:	lods   eax,DWORD PTR ds:[esi]
  4249af:	aaa    
  4249b0:	add    ah,BYTE PTR [esp+ebp*1-0x68]
  4249b4:	cwde   
  4249b5:	and    bh,BYTE PTR [esi+0x34111fc6]
  4249bb:	les    edi,FWORD PTR [ebp-0x22]
  4249be:	pop    es
  4249bf:	sahf   
  4249c0:	mov    ah,0xd2
  4249c2:	or     al,0x1b
  4249c4:	mov    cl,0xd
  4249c6:	repz dec ebp
  4249c8:	fwait
  4249c9:	inc    ebx
  4249ca:	pop    ds
  4249cb:	xor    al,0xe1
  4249cd:	pop    ds
  4249ce:	aaa    
  4249cf:	ficomp WORD PTR ds:0x3c1e6ed
  4249d5:	loope  0x4249a4
  4249d7:	retf   0x9fa6
  4249da:	and    bh,dl
  4249dc:	and    al,0xfc
  4249de:	cmp    eax,ecx
  4249e0:	jmp    0x42496b
  4249e2:	ins    DWORD PTR es:[edi],dx
  4249e3:	sub    BYTE PTR [edi-0xc],dl
  4249e6:	(bad)  
  4249e7:	pop    esp
  4249e8:	and    eax,0xeeeab225
  4249ed:	ror    DWORD PTR ds:0xb3ea2d4c,cl
  4249f3:	sahf   
  4249f4:	das    
  4249f5:	inc    eax
  4249f6:	sub    eax,0xeb3b0f28
  4249fb:	out    dx,al
  4249fc:	adc    al,0x16
  4249fe:	sbb    BYTE PTR [ebx-0x6b],0xbc
  424a02:	das    
  424a03:	mov    ch,0xf3
  424a05:	mov    eax,0x140dfeff
  424a0a:	(bad)  
  424a0b:	out    0xbe,eax
  424a0d:	fiadd  WORD PTR [edi+0x23]
  424a10:	mov    ah,0x9e
  424a12:	test   BYTE PTR [eax+0x2b12e42a],ah
  424a18:	mov    DWORD PTR [edi-0x142f544d],esp
  424a1e:	out    dx,al
  424a1f:	in     al,0x17
  424a21:	outs   dx,BYTE PTR ds:[esi]
  424a22:	ss pop eax
  424a24:	push   edi
  424a25:	fsubr  DWORD PTR [ecx]
  424a27:	dec    esi
  424a28:	inc    edi
  424a29:	loop   0x424a25
  424a2b:	or     bh,BYTE PTR [ecx+0x6bac7c66]
  424a31:	dec    ebp
  424a32:	pop    es
  424a33:	out    0x73,eax
  424a35:	inc    esi
  424a36:	repz inc eax
  424a38:	xchg   edi,ecx
  424a3a:	scas   al,BYTE PTR es:[edi]
  424a3b:	dec    esi
  424a3c:	mov    ecx,0xa9684186
  424a41:	push   ds
  424a42:	jle    0x424a6d
  424a44:	add    edi,DWORD PTR [edi+0x239381eb]
  424a4a:	js     0x424ab5
  424a4c:	retf   0xa2a2
  424a4f:	mov    ecx,0x6d78f6e3
  424a54:	and    esp,DWORD PTR [ebx-0x4b]
  424a57:	imul   esp,DWORD PTR [ebx+0x7],0x70
  424a5b:	xor    al,al
  424a5d:	addr16 jae 0x424ac5
  424a60:	pop    esp
  424a61:	inc    ebx
  424a62:	jle    0x424a78
  424a64:	sbb    ah,BYTE PTR [eax+ebp*4]
  424a67:	jg     0x424a84
  424a69:	cmp    BYTE PTR [eax+ebp*2],bl
  424a6c:	bound  esp,QWORD PTR [eax-0x527dd69d]
  424a72:	mov    eax,ds:0x10511fe8
  424a77:	push   0xca1afd6b
  424a7c:	inc    eax
  424a7d:	cmp    ecx,DWORD PTR [esi+0x79ea9098]
  424a83:	stos   DWORD PTR es:[edi],eax
  424a84:	repnz outs dx,BYTE PTR es:[esi]
  424a87:	sbb    al,0x90
  424a89:	pop    ecx
  424a8a:	mov    gs:0x4fc4891d,eax
  424a90:	sbb    eax,0x4a7b5333
  424a95:	xchg   ecx,eax
  424a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a97:	dec    esi
  424a98:	jns    0x424a9b
  424a9a:	xchg   esi,eax
  424a9b:	mov    dh,0x31
  424a9d:	adc    eax,0x37e36a47
  424aa2:	ror    DWORD PTR [esi-0x7ece62ef],1
  424aa8:	pop    edi
  424aa9:	mov    ch,0x43
  424aab:	push   ds
  424aac:	xor    BYTE PTR [ecx],al
  424aae:	mov    bh,0x82
  424ab0:	test   al,0x9f
  424ab2:	mov    fs:0x2441fb5b,eax
  424ab8:	in     al,0x0
  424aba:	sar    edx,0xca
  424abd:	out    dx,eax
  424abe:	in     al,dx
  424abf:	jno    0x424afd
  424ac1:	es je  0x424b04
  424ac4:	dec    ebp
  424ac5:	and    BYTE PTR [edx+0x7],dl
  424ac8:	mov    ebp,0x23214d2d
  424acd:	and    eax,0x8ac17b34
  424ad2:	jno    0x424ab4
  424ad4:	sub    BYTE PTR [ebp-0x2f4e3933],al
  424ada:	add    eax,DWORD PTR [ecx+0x19a1efdf]
  424ae0:	fist   DWORD PTR [edx-0x717f852]
  424ae6:	xchg   ebp,eax
  424ae7:	mov    eax,DWORD PTR [eax+0x44c17210]
  424aed:	neg    DWORD PTR [edi-0x29]
  424af0:	mov    bl,0x4e
  424af2:	dec    esp
  424af3:	dec    edi
  424af4:	(bad)  [esi]
  424af6:	loopne 0x424aa2
  424af8:	bsr    esp,DWORD PTR [edx]
  424afb:	mov    ebp,0xc1383a9
  424b00:	in     eax,dx
  424b01:	arpl   WORD PTR [edx+0x37],bp
  424b04:	(bad)  
  424b05:	sub    dl,bl
  424b07:	iret   
  424b08:	dec    ebx
  424b09:	rcr    eax,1
  424b0b:	int3   
  424b0c:	cmc    
  424b0d:	adc    BYTE PTR [ecx+0x32],bh
  424b10:	pop    ecx
  424b11:	std    
  424b12:	mov    al,ds:0xf80f558f
  424b17:	repnz nop
  424b19:	mov    dl,BYTE PTR [esi+ebp*1-0x5e5e07da]
  424b20:	repnz mov ah,0xbc
  424b23:	push   edi
  424b24:	jnp    0x424ac5
  424b26:	push   esp
  424b27:	shl    BYTE PTR [ebx+ebx*1],0x62
  424b2b:	jle    0x424ae8
  424b2d:	jge    0x424b67
  424b2f:	pusha  
  424b30:	lds    ecx,FWORD PTR [eax+0xfc7932d]
  424b36:	jo     0x424b6f
  424b38:	dec    ecx
  424b39:	sbb    DWORD PTR [ecx+0x600123f8],0x3e
  424b40:	rol    BYTE PTR [edi+ebp*1+0x672c979b],1
  424b47:	outs   dx,BYTE PTR ds:[esi]
  424b48:	in     al,dx
  424b49:	add    BYTE PTR [ebp-0xd307904],cl
  424b4f:	jnp    0x424af9
  424b51:	aas    
  424b52:	in     al,dx
  424b53:	adc    al,BYTE PTR [edx+0x8]
  424b56:	pop    ecx
  424b57:	sar    BYTE PTR [esi],1
  424b59:	jne    0x424bc8
  424b5b:	(bad)  
  424b5c:	lock push ds
  424b5e:	sbb    ecx,DWORD PTR [ebp-0x1]
  424b61:	dec    edx
  424b62:	in     al,0x6
  424b64:	aad    0xb9
  424b66:	sbb    eax,0xd233fb68
  424b6b:	or     BYTE PTR [eax+0x21],bl
  424b6e:	cmp    al,0x79
  424b70:	xor    BYTE PTR [ecx+0x2e],0x9
  424b74:	inc    ecx
  424b75:	ds sbb eax,0xe3e66bd6
  424b7b:	mov    ds:0xde2197f5,eax
  424b80:	jne    0x424b1b
  424b82:	cli    
  424b83:	mov    dh,0xa8
  424b85:	adc    BYTE PTR [edi-0x64],al
  424b88:	lea    ebp,[edx]
  424b8a:	into   
  424b8b:	(bad)  
  424b8d:	fwait
  424b8e:	retf   
  424b8f:	imul   esp,ebx,0xf
  424b92:	icebp  
  424b93:	stos   BYTE PTR es:[edi],al
  424b94:	cwde   
  424b95:	jl     0x424b9e
  424b97:	stc    
  424b98:	gs mov bh,0xe3
  424b9b:	jnp    0x424bc9
  424b9d:	repnz ins BYTE PTR es:[edi],dx
  424b9f:	fadd   st(0),st
  424ba1:	jecxz  0x424b67
  424ba3:	cli    
  424ba4:	mov    ecx,0x4baa290d
  424ba9:	stos   BYTE PTR es:[edi],al
  424baa:	(bad)  
  424bab:	shl    DWORD PTR [ecx-0xf911744],cl
  424bb1:	cmp    DWORD PTR [esi],ebx
  424bb3:	xor    ah,dl
  424bb5:	push   edi
  424bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bb7:	push   0xffffffcd
  424bb9:	(bad)
  424bbe:	or     dh,BYTE PTR [ebx]
  424bc0:	xor    al,0x7f
  424bc2:	outs   dx,DWORD PTR ds:[esi]
  424bc3:	shl    BYTE PTR [esi],1
  424bc5:	adc    DWORD PTR [esi],eax
  424bc7:	adc    al,0xb3
  424bc9:	sub    eax,0x2b6ed74e
  424bce:	adc    BYTE PTR ds:0x12f17804,dl
  424bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bd5:	xor    BYTE PTR [ebx],cl
  424bd7:	cmp    BYTE PTR [eax-0x1589429b],dl
  424bdd:	fld    QWORD PTR [edx+0x48437a87]
  424be3:	lds    ecx,FWORD PTR [ecx]
  424be5:	arpl   WORD PTR [ebx],cx
  424be7:	mov    ch,0x5
  424be9:	mov    ebx,0xfe942a8
  424bee:	test   BYTE PTR [esi+0x7a],0x25
  424bf2:	in     al,0x68
  424bf4:	std    
  424bf5:	mov    cl,0xed
  424bf7:	pop    edi
  424bf8:	outs   dx,DWORD PTR ds:[esi]
  424bf9:	mov    edx,0xa14bf13a
  424bfe:	xchg   BYTE PTR [ecx],al
  424c00:	adc    BYTE PTR [edi-0x39637792],cl
  424c06:	outs   dx,DWORD PTR ds:[esi]
  424c07:	cmc    
  424c08:	fistp  DWORD PTR [ecx]
  424c0a:	retf   0xe7f7
  424c0d:	jne    0x424c3b
  424c0f:	add    BYTE PTR [edi],al
  424c11:	in     eax,dx
  424c12:	jbe    0x424c01
  424c14:	or     al,0x3a
  424c16:	or     esi,DWORD PTR [ebx]
  424c18:	xor    BYTE PTR [esp+ebp*8-0x30e1c0c2],0x55
  424c20:	or     eax,0xbb07a60e
  424c25:	lods   eax,DWORD PTR ds:[esi]
  424c26:	or     eax,DWORD PTR [edx+0x2a]
  424c29:	in     al,dx
  424c2a:	gs cwde 
  424c2c:	and    eax,0x2c295949
  424c31:	xchg   esi,eax
  424c32:	mov    fs,esi
  424c34:	stc    
  424c35:	jne    0x424c37
	...
  424c3f:	add    BYTE PTR [eax],al
  424c41:	add    BYTE PTR [edx-0x5b61f90],ch
  424c47:	fldcw  WORD PTR [ebx-0x35bf70d]
  424c4d:	loopne 0x424c15
  424c4f:	inc    ax
  424c51:	inc    edi
  424c52:	push   ds
  424c53:	mov    esi,0x32c0001
  424c58:	add    BYTE PTR [eax],al
  424c5a:	clc    
  424c5b:	inc    ecx
  424c5c:	or     dh,BYTE PTR [edx]
  424c5e:	outs   dx,DWORD PTR ds:[esi]
  424c5f:	(bad)  
  424c61:	sub    DWORD PTR [eax-0x5b59b12a],esp
  424c67:	std    
  424c68:	aad    0x64
  424c6a:	call   0xc60da057
  424c6f:	sbb    BYTE PTR [esi-0x6e],bh
  424c72:	aam    0x2a
  424c74:	mov    cs,ebp
  424c76:	cmp    eax,0x98f21702
  424c7b:	pop    esp
  424c7c:	aas    
  424c7d:	mov    ch,bl
  424c7f:	lock push esi
  424c81:	push   ecx
  424c82:	mov    edx,0x86c6ef8
  424c87:	xchg   edx,eax
  424c88:	loope  0x424c3e
  424c8a:	into   
  424c8b:	(bad)  
  424c8c:	pause  
  424c8e:	mov    cl,0x76
  424c90:	sub    edi,esi
  424c92:	add    DWORD PTR [ebx],esp
  424c94:	push   ecx
  424c95:	aas    
  424c96:	sub    ah,ah
  424c98:	cmp    BYTE PTR [ebx],0x96
  424c9b:	fstp   QWORD PTR [eax+eax*2-0x4b]
  424c9f:	lea    edx,[edi+0x1b]
  424ca2:	std    
  424ca3:	sub    DWORD PTR [edx+0x102853a4],esi
  424ca9:	sbb    dh,BYTE PTR [ecx]
  424cab:	inc    ecx
  424cac:	pop    ss
  424cad:	clc    
  424cae:	sbb    eax,DWORD PTR [eax+edi*2]
  424cb1:	mov    edx,0xed46f7eb
  424cb6:	es call 0x5eec:0xfb3943e6
  424cbe:	jne    0x424c6f
  424cc0:	pop    esi
  424cc1:	jb     0x424cca
  424cc3:	push   esp
  424cc4:	push   ss
  424cc5:	test   eax,0xd03edd53
  424cca:	dec    ecx
  424ccb:	sbb    BYTE PTR [eax],cl
  424ccd:	xchg   edi,eax
  424cce:	add    ebp,DWORD PTR [esi+0x5036294b]
  424cd4:	nop
  424cd5:	or     esi,DWORD PTR [esi+0x3bfff85e]
  424cdb:	xor    eax,0x4d98a23a
  424ce0:	rol    DWORD PTR [esi+0x21],cl
  424ce3:	xchg   esi,eax
  424ce4:	cmc    
  424ce5:	out    dx,eax
  424ce6:	retf   
  424ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ce8:	outs   dx,BYTE PTR ds:[esi]
  424ce9:	out    0xb2,al
  424ceb:	test   al,0xe8
  424ced:	test   dl,cl
  424cef:	xchg   DWORD PTR [esi+eiz*4+0x641a2979],edi
  424cf6:	repz mov es:0xa3443b4a,al
  424cfd:	ins    BYTE PTR es:[edi],dx
  424cfe:	fwait
  424cff:	mov    DWORD PTR [esi-0x922fb72],0xce70d40c
  424d09:	or     DWORD PTR [edi+0x41],eax
  424d0c:	jb     0x424ce0
  424d0e:	xchg   ebp,eax
  424d0f:	ss mov bh,0x7d
  424d12:	int    0xaa
  424d14:	enter  0xb351,0x69
  424d18:	xlat   BYTE PTR ds:[ebx]
  424d19:	pop    edx
  424d1a:	jmp    0x91dd0ee3
  424d1f:	outs   dx,DWORD PTR ds:[esi]
  424d20:	xor    ebx,eax
  424d22:	aad    0x3c
  424d24:	jl     0x424d35
  424d26:	inc    ebp
  424d27:	das    
  424d28:	cwde   
  424d29:	push   ecx
  424d2a:	arpl   bp,cx
  424d2c:	push   es
  424d2d:	rol    BYTE PTR [edx],1
  424d2f:	xor    bl,BYTE PTR [eax]
  424d31:	ficom  WORD PTR [ebx+0x7]
  424d34:	arpl   WORD PTR [edx+eiz*2+0x4b],bp
  424d38:	cmp    DWORD PTR [ebp+0x6f],eax
  424d3b:	(bad)  
  424d3c:	jmp    0xa59f:0x77ed128b
  424d43:	pop    edi
  424d44:	call   0x3049:0x8475dd43
  424d4b:	push   esp
  424d4c:	xchg   edx,eax
  424d4d:	push   cs
  424d4e:	jle    0x424da1
  424d50:	cli    
  424d51:	sti    
  424d52:	ret    
  424d53:	das    
  424d54:	enter  0x9ee3,0x3c
  424d58:	mov    esi,0x1db0f563
  424d5d:	bndldx (bad),[edx+eax*2]
  424d61:	lods   eax,DWORD PTR ds:[esi]
  424d62:	mov    db1,ecx
  424d65:	mov    DWORD PTR [edx-0x22],0xebc12816
  424d6c:	arpl   cx,bp
  424d6e:	out    dx,eax
  424d6f:	push   es
  424d70:	int    0x53
  424d72:	int    0xfb
  424d74:	shr    DWORD PTR [edx],cl
  424d76:	push   edx
  424d77:	outs   dx,DWORD PTR ds:[esi]
  424d78:	push   eax
  424d79:	call   0x572c5e30
  424d7e:	cmp    DWORD PTR [edx+0x7f66affa],ecx
  424d84:	mov    ecx,0xf165364e
  424d89:	enter  0x8882,0x26
  424d8d:	imul   BYTE PTR [ecx+0x31b21d5a]
  424d93:	adc    BYTE PTR [edi+ecx*2+0x6c65b086],ch
  424d9a:	(bad)  
  424d9b:	mov    bl,0x9f
  424d9d:	int3   
  424d9e:	sbb    al,0x6e
  424da0:	outs   dx,BYTE PTR ds:[esi]
  424da1:	js     0x424dba
  424da3:	cli    
  424da4:	inc    ecx
  424da5:	xlat   BYTE PTR ds:[ebx]
  424da6:	paddd  mm3,QWORD PTR [eax-0x52]
  424daa:	pop    ebp
  424dab:	fcomp  DWORD PTR [eax]
  424dad:	add    ebx,ebp
  424daf:	sub    eax,0xacde528
  424db4:	ds push ecx
  424db7:	(bad)  
  424db8:	push   esi
  424db9:	mov    esp,0x7247711
  424dbe:	xlat   BYTE PTR ds:[ebx]
  424dbf:	sahf   
  424dc0:	pop    edx
  424dc1:	jmp    0x424e21
  424dc3:	jb     0x424d68
  424dc5:	jmp    0xd579:0x5134861e
  424dcc:	cmp    ch,bh
  424dce:	pop    es
  424dcf:	push   ebp
  424dd0:	pop    DWORD PTR ds:0xb512888
  424dd6:	cld    
  424dd7:	push   ebx
  424dd8:	int    0x5c
  424dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ddb:	shr    DWORD PTR [edi-0x76],1
  424dde:	sub    cl,BYTE PTR [ecx-0x26bf0bb9]
  424de4:	push   es
  424de5:	ja     0x424dfc
  424de7:	sti    
  424de8:	push   0x8b95f23c
  424ded:	test   BYTE PTR [edi-0x12],0x21
  424df1:	sbb    dl,al
  424df3:	push   cs
  424df4:	and    DWORD PTR [eax],0xfffffffb
  424df7:	adc    edx,DWORD PTR [ecx]
  424df9:	repnz push cs
  424dfb:	push   esi
  424dfc:	bound  ecx,QWORD PTR [edx+esi*2-0x2a]
  424e00:	inc    ebx
  424e01:	bound  eax,QWORD PTR [esi-0x446af0a2]
  424e07:	aad    0x99
  424e09:	mov    eax,ds:0xbd26a0d1
  424e0e:	cmp    eax,0x9ea45b16
  424e13:	daa    
  424e14:	push   eax
  424e15:	jmp    0x351c:0x1da3a9cc
  424e1c:	adc    ebp,DWORD PTR [esi-0x3b]
  424e1f:	jmp    0xccd1:0x84623668
  424e26:	test   DWORD PTR [edx+0x34],ebp
  424e29:	jae    0xb1f2fc60
  424e2f:	fiadd  WORD PTR [ecx-0x7a]
  424e32:	(bad)  
  424e33:	jmp    0xa263:0xd47a09e
  424e3a:	adc    dh,al
  424e3c:	jg     0x424e89
  424e3e:	mov    bh,0xc6
  424e40:	adc    BYTE PTR [ebx],0x22
  424e43:	(bad)  
  424e44:	(bad)  
  424e45:	call   0x37bb80fc
  424e4a:	push   eax
  424e4b:	shl    DWORD PTR [ebp+0x25],0x92
  424e4f:	int3   
  424e50:	mov    ds:0x8a30c9a4,eax
  424e55:	xor    al,0x41
  424e57:	bound  edi,QWORD PTR [edx+0x1ea83826]
  424e5d:	loop   0x424eb2
  424e5f:	xchg   ebx,eax
  424e60:	or     ebx,DWORD PTR [ebx]
  424e62:	jnp    0x424ebb
  424e64:	xor    al,0x41
  424e66:	in     al,dx
  424e67:	shl    DWORD PTR [edx+edx*4-0x4d957d64],1
  424e6e:	xchg   esi,eax
  424e6f:	push   ecx
  424e70:	dec    ebp
  424e71:	data16 arpl WORD PTR [edi-0x49],sp
  424e75:	or     BYTE PTR [eax],dh
  424e77:	(bad)  
  424e78:	jg     0x424e66
  424e7a:	popf   
  424e7b:	imul   cl
  424e7d:	add    eax,0x655517dd
  424e82:	out    dx,eax
  424e83:	mov    bh,0xf2
  424e85:	and    esp,DWORD PTR [esi]
  424e87:	dec    ebx
  424e88:	ds inc edi
  424e8a:	sub    esi,DWORD PTR [eax-0x1ad5f803]
  424e90:	loope  0x424e13
  424e92:	dec    eax
  424e93:	cld    
  424e94:	or     eax,0x8bec8db6
  424e99:	mov    ds:0x9820aade,al
  424e9e:	adc    esp,DWORD PTR [ecx]
  424ea0:	xchg   esi,eax
  424ea1:	jb     0x424e45
  424ea3:	lea    edi,[esi+0x29c23961]
  424ea9:	bound  eax,QWORD PTR [esi+0x47]
  424eac:	add    eax,0xb2385506
  424eb1:	push   ecx
  424eb2:	sub    BYTE PTR ds:0x1c1bce9d,bl
  424eb8:	mov    ebx,ecx
  424eba:	lock lahf 
  424ebc:	frstpm(287 only) 
  424ebe:	sub    al,BYTE PTR [eax-0x66]
  424ec1:	cmp    al,0x8b
  424ec3:	pusha  
  424ec4:	pop    edi
  424ec5:	cli    
  424ec6:	or     BYTE PTR [ebx],cl
  424ec8:	or     eax,0xea42197b
  424ecd:	mov    gs,WORD PTR [eax+0x783f69ea]
  424ed3:	cwde   
  424ed4:	sahf   
  424ed5:	dec    esp
  424ed6:	pop    edi
  424ed7:	sar    BYTE PTR [ebp+0x273ba173],1
  424edd:	cmp    DWORD PTR [edi-0x7b2c3ce5],ebx
  424ee3:	(bad)  
  424ee4:	sub    dh,BYTE PTR [eax+0x79]
  424ee7:	or     ebx,0x704e095a
  424eed:	mov    BYTE PTR [edx],dh
  424eef:	in     eax,dx
  424ef0:	stos   BYTE PTR es:[edi],al
  424ef1:	mov    al,ds:0xcb48011e
  424ef6:	jge    0x424f50
  424ef8:	jl     0x424eda
  424efa:	and    BYTE PTR [esi+edi*8-0x66],cl
  424efe:	bound  ecx,QWORD PTR [edx+0x4582153e]
  424f04:	sub    ebx,edi
  424f06:	loope  0x424f78
  424f08:	mov    esi,0xade6ed50
  424f0d:	dec    edx
  424f0e:	xchg   ecx,eax
  424f0f:	sbb    BYTE PTR [ecx-0x23d3928],0x9e
  424f16:	test   DWORD PTR [ebx+0x11],ebp
  424f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f1a:	fs xchg esp,eax
  424f1c:	mov    DWORD PTR ds:0x9f2839c1,ebp
  424f22:	jge    0x424f63
  424f24:	das    
  424f25:	xchg   ecx,eax
  424f26:	cmp    ebp,DWORD PTR [eax+0x23e4777d]
  424f2c:	mov    esi,0xa473ed02
  424f31:	sti    
  424f32:	ja     0x424f21
  424f34:	ret    
  424f35:	adc    BYTE PTR [ebp+0x49],dh
  424f38:	sbb    dh,BYTE PTR [edx+0x54]
  424f3b:	rcr    BYTE PTR fs:[ecx-0x33b665e3],0x60
  424f43:	jmp    0x424f39
  424f45:	push   ebp
  424f46:	mov    es,WORD PTR [eax+0x60]
  424f49:	mov    ch,0x29
  424f4b:	push   0x46
  424f4d:	out    dx,eax
  424f4e:	iret   
  424f4f:	lods   al,BYTE PTR ds:[esi]
  424f50:	xchg   ebp,eax
  424f51:	and    ecx,edx
  424f53:	fnsave [edx-0x2efbbb96]
  424f59:	call   0x12dc:0x1269523
  424f60:	aas    
  424f61:	mov    ch,0xb0
  424f63:	icebp  
  424f64:	xchg   edi,edi
  424f66:	rcr    DWORD PTR [ebx+ecx*2-0x153ee225],0xc8
  424f6e:	imul   ecx,DWORD PTR [ebp-0x55],0x60
  424f72:	adc    ebp,DWORD PTR [eax]
  424f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f75:	icebp  
  424f76:	dec    ecx
  424f77:	mov    ebx,0x63dc8e39
  424f7c:	adc    al,0xc1
  424f7e:	pop    ebx
  424f7f:	push   ds
  424f80:	mov    BYTE PTR [esi],bh
  424f82:	jae    0x424f78
  424f84:	je     0x424fd1
	...
  424f92:	dec    edx
  424f93:	xchg   DWORD PTR [edx+0x4c],edx
  424f96:	(bad)  
  424f98:	pop    esi
  424f99:	xchg   eax,esp
  424f9b:	js     0x424f1e
  424f9d:	mov    ebx,0xfe6a1d0
  424fa2:	dec    edx
  424fa3:	rol    DWORD PTR [ecx],0x0
  424fa6:	sub    al,0x3
  424fa8:	add    BYTE PTR [eax],al
  424faa:	dec    eax
  424fab:	xor    edi,ecx
  424fad:	jns    0x424fb3
  424faf:	push   0xc500b1ab
  424fb4:	js     0x424fee
  424fb6:	in     al,0x8e
  424fb8:	cmp    DWORD PTR [esi],ecx
  424fba:	test   DWORD PTR [ebp+0x27],edx
  424fbd:	mov    edx,0x45c31a12
  424fc2:	cmp    bh,dl
  424fc4:	test   eax,0x62af773d
  424fc9:	mov    esi,0xa80d0a28
  424fce:	ja     0x424ff8
  424fd0:	cmc    
  424fd1:	adc    cl,BYTE PTR [ecx]
  424fd3:	mov    eax,0x727f29a5
  424fd8:	sbb    eax,0x24607d6b
  424fdd:	pop    ebx
  424fde:	in     al,0xf8
  424fe0:	test   eax,0x2ee7b4ec
  424fe5:	ins    DWORD PTR es:[edi],dx
  424fe6:	in     al,dx
  424fe7:	das    
  424fe8:	fs cli 
  424fea:	dec    esp
  424feb:	nop
  424fec:	cwde   
  424fed:	sbb    al,0x65
  424fef:	inc    esi
  424ff0:	cmp    al,0x4f
  424ff2:	mov    al,0x4c
  424ff4:	js     0x42503f
  424ff6:	int    0xce
  424ff8:	lods   al,BYTE PTR ds:[esi]
  424ff9:	jg     0x424fcb
  424ffb:	pop    es
  424ffc:	jne    0x424fb5
  424ffe:	sahf   
  424fff:	scas   eax,DWORD PTR es:[edi]
  425000:	sub    BYTE PTR [edi-0x26b8e0ec],bl
  425006:	jmpw   0xedbd
  42500a:	cli    
  42500b:	xchg   ebp,eax
  42500c:	rcl    BYTE PTR cs:[bx+0x3ee8],0x1a
  425013:	cmp    bh,BYTE PTR ss:[edx-0x636d9a5]
  42501a:	push   edx
  42501b:	cs inc ebx
  42501d:	aam    0x1c
  42501f:	mov    gs,WORD PTR [ecx]
  425021:	add    eax,0x74a1ae2b
  425026:	aaa    
  425027:	xlat   BYTE PTR ds:[ebx]
  425028:	lods   al,BYTE PTR ds:[esi]
  425029:	add    edx,DWORD PTR [ebx-0x20]
  42502c:	sbb    al,0x73
  42502e:	rcl    BYTE PTR [ebx],cl
  425030:	int3   
  425031:	outs   dx,DWORD PTR ds:[esi]
  425032:	ret    0xbb53
  425035:	sub    al,0xfa
  425037:	rol    ah,cl
  425039:	mov    ?,WORD PTR [ecx]
  42503b:	mov    bh,0x2c
  42503d:	pop    ebp
  42503e:	add    DWORD PTR [ebx+eax*2+0x79e2d5f6],edi
  425045:	jns    0x42500c
  425047:	cmc    
  425048:	adc    esi,ebx
  42504a:	divps  xmm3,XMMWORD PTR ds:0xfe9632f4
  425051:	les    eax,FWORD PTR [edi]
  425053:	(bad)  
  425054:	in     eax,0x6b
  425056:	pop    edi
  425057:	sbb    BYTE PTR [edi-0x4b],bl
  42505a:	adc    BYTE PTR ds:0x495a720d,bl
  425060:	lds    ecx,FWORD PTR [ecx-0x37]
  425063:	push   ds
  425064:	and    al,0xb4
  425066:	inc    ebx
  425067:	stos   DWORD PTR es:[edi],eax
  425068:	pop    ecx
  425069:	mov    dh,0xbe
  42506b:	fcomp  DWORD PTR [ebp+0x20]
  42506e:	mov    edx,0xccf03b4e
  425073:	pusha  
  425074:	xchg   ebx,eax
  425075:	push   edx
  425076:	xchg   ebx,eax
  425077:	out    dx,eax
  425078:	retf   
  425079:	xor    eax,0x9d557652
  42507e:	inc    DWORD PTR [ebx+0x10]
  425081:	cmp    eax,0xf76f3392
  425086:	mov    dh,cl
  425088:	sub    edx,DWORD PTR [esi]
  42508a:	in     eax,0x1b
  42508c:	nop
  42508d:	call   0xf9a6:0x2dfb1f45
  425094:	pop    es
  425095:	pop    ecx
  425096:	xor    DWORD PTR [esi-0x1d904a5d],0xffffff9e
  42509d:	push   eax
  42509e:	inc    edi
  42509f:	inc    esi
  4250a0:	xor    ebp,eax
  4250a2:	inc    ecx
  4250a3:	cs sti 
  4250a5:	cdq    
  4250a6:	pop    edx
  4250a7:	fstp   QWORD PTR [esi+eiz*2]
  4250aa:	dec    edx
  4250ab:	push   ss
  4250ac:	imul   edx,eax,0xffffffb7
  4250af:	dec    ebp
  4250b0:	cdq    
  4250b1:	xor    esi,DWORD PTR [ebp+0x1c92f363]
  4250b7:	jmp    0x42506f
  4250b9:	jbe    0x425051
  4250bb:	inc    ebx
  4250bc:	mov    al,0x23
  4250be:	mov    ds:0x48a8880b,al
  4250c3:	pop    eax
  4250c4:	pop    edx
  4250c5:	imul   esp,DWORD PTR [edi-0x7a],0xdfe5ea7b
  4250cc:	rcr    BYTE PTR [eax],cl
  4250ce:	pusha  
  4250cf:	pop    ds
  4250d0:	jp     0x425070
  4250d2:	jbe    0x425096
  4250d4:	cmc    
  4250d5:	jmp    DWORD PTR [edx+edx*8]
  4250d8:	push   edi
  4250d9:	sbb    DWORD PTR [eax],edx
  4250db:	(bad)  
  4250dc:	sbb    edx,DWORD PTR [edx+0x56d724ba]
  4250e2:	jg     0x425128
  4250e4:	ret    0xdd1b
  4250e7:	or     dl,bl
  4250e9:	mov    dh,0x11
  4250eb:	xchg   DWORD PTR [ecx],esi
  4250ed:	mov    edi,0x7eb4f4f0
  4250f2:	cld    
  4250f3:	lahf   
  4250f4:	stos   DWORD PTR es:[edi],eax
  4250f5:	add    BYTE PTR [eax],0xc2
  4250f8:	clc    
  4250f9:	(bad)  
  4250fa:	lea    esi,[ebp+0x6e162c0d]
  425100:	inc    ecx
  425101:	mov    cl,0x7
  425103:	(bad)  
  425104:	mov    eax,ds:0x5bc2752d
  425109:	push   edi
  42510a:	sub    bh,al
  42510c:	loope  0x4250a0
  42510e:	mov    eax,0x57b4c416
  425113:	fidiv  WORD PTR [esp+edx*2]
  425116:	mov    edi,0xcad8443c
  42511b:	pop    esp
  42511c:	pop    ss
  42511d:	ret    0x70f
  425120:	sub    DWORD PTR [ebx+0x59],edi
  425123:	fisttp QWORD PTR [ebx-0x56]
  425126:	inc    eax
  425127:	leave  
  425128:	sahf   
  425129:	fisttp DWORD PTR [eax-0x4459ea9d]
  42512f:	mov    esp,0x62f1b83d
  425134:	sti    
  425135:	adc    dl,ah
  425137:	cwde   
  425138:	jp     0x4250fc
  42513a:	aaa    
  42513b:	fwait
  42513c:	pop    edx
  42513d:	xor    eax,0xe3df3cfa
  425142:	mul    BYTE PTR [ebx]
  425144:	push   ss
  425145:	sub    eax,0x20382d4c
  42514a:	jno    0x425138
  42514c:	jp     0x4251ad
  42514e:	fwait
  42514f:	not    cl
  425151:	pop    ss
  425152:	mov    esi,0x8ef2e1
  425157:	push   0x994d4fac
  42515c:	(bad)
  42515f:	loope  0x42518a
  425161:	cdq    
  425162:	dec    ebx
  425163:	xchg   ebx,eax
  425164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425165:	retf   
  425166:	loopne 0x4251bf
  425168:	jg     0x425171
  42516a:	cdq    
  42516b:	sub    BYTE PTR [edi+0x20611502],0x5
  425172:	push   edx
  425173:	ror    DWORD PTR [ebx-0x54],cl
  425176:	add    al,0xb4
  425178:	int3   
  425179:	test   edx,esp
  42517b:	xor    BYTE PTR [eax+ebp*1],cl
  42517e:	mov    cl,dh
  425180:	jecxz  0x4251b4
  425182:	or     eax,DWORD PTR [edi+eiz*4-0x5942260e]
  425189:	lahf   
  42518a:	scas   al,BYTE PTR es:[edi]
  42518b:	inc    esp
  42518c:	hlt    
  42518d:	fst    DWORD PTR [ecx+ebx*2+0x42601f7a]
  425194:	into   
  425195:	daa    
  425196:	inc    eax
  425197:	les    esp,FWORD PTR [edi+0x63803fb4]
  42519d:	push   ebp
  42519e:	arpl   WORD PTR [ebp+0xa49d404],si
  4251a4:	pop    edx
  4251a5:	lods   eax,DWORD PTR ds:[esi]
  4251a6:	xchg   edi,eax
  4251a7:	adc    BYTE PTR [ecx+0x5e],0xb4
  4251ab:	mov    ds:0x7db087b5,al
  4251b0:	ins    DWORD PTR es:[edi],dx
  4251b1:	and    DWORD PTR ds:[edx+0x31],ebx
  4251b5:	cmp    eax,DWORD PTR [edi+ebx*4-0x5]
  4251b9:	mov    al,0xbb
  4251bb:	sbb    al,0xb5
  4251bd:	mov    esp,0x8edb11a
  4251c2:	sub    al,0x97
  4251c4:	xor    BYTE PTR [esp+edx*1-0x24700720],0x96
  4251cc:	test   BYTE PTR [edi],0x3f
  4251cf:	clc    
  4251d0:	xchg   ebx,eax
  4251d1:	fiadd  DWORD PTR [edi-0x3a74ea76]
  4251d7:	jl     0x42524d
  4251d9:	sti    
  4251da:	rcr    DWORD PTR [eax+0x67ba18e5],1
  4251e0:	mov    DWORD PTR [eax],edi
  4251e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251e3:	inc    eax
  4251e4:	arpl   di,dx
  4251e6:	iret   
  4251e7:	dec    ecx
  4251e8:	and    ecx,edi
  4251ea:	cld    
  4251eb:	frstor [ecx]
  4251ed:	icebp  
  4251ee:	icebp  
  4251ef:	loop   0x4251a5
  4251f1:	stos   BYTE PTR es:[edi],al
  4251f2:	sub    BYTE PTR [edx-0x18eff876],al
  4251f8:	inc    esp
  4251f9:	cmp    BYTE PTR [ecx-0x11d133ce],dh
  4251ff:	retf   0x2456
  425202:	and    al,BYTE PTR [ebx-0x1f]
  425205:	push   ds
  425206:	pop    edx
  425207:	aam    0x74
  425209:	push   esi
  42520a:	movq   mm3,QWORD PTR [esi+0x2e]
  42520e:	into   
  42520f:	xchg   ah,dl
  425211:	aas    
  425212:	iret   
  425213:	mov    bl,0x7b
  425215:	dec    ecx
  425216:	push   edx
  425217:	sub    ecx,DWORD PTR [ebx-0x6a]
  42521a:	dec    esp
  42521b:	xchg   ebx,eax
  42521c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42521d:	je     0x425211
  42521f:	sub    al,0xfe
  425221:	push   ds
  425222:	adc    DWORD PTR [ecx-0x3f],ebx
  425225:	mov    al,0x11
  425227:	xchg   ebp,eax
  425228:	xchg   esi,eax
  425229:	mov    esi,0x63427250
  42522e:	jo     0x425234
  425230:	cs dec eax
  425232:	add    eax,0x92935e09
  425237:	ror    al,cl
  425239:	dec    ebx
  42523a:	mov    esp,0x663c4b25
  42523f:	lods   al,BYTE PTR ds:[esi]
  425240:	cs daa 
  425242:	bound  eax,QWORD PTR [edi]
  425244:	js     0x4252be
  425246:	xor    eax,DWORD PTR [eax+0x5a]
  425249:	jmp    0x951cfcd9
  42524e:	add    DWORD PTR [ebp+0x6e],edx
  425251:	fldcw  WORD PTR [edx+edi*4-0xd]
  425255:	sbb    eax,0xffe83bd8
  42525a:	int    0x20
  42525c:	fs cdq 
  42525e:	in     eax,dx
  42525f:	and    DWORD PTR [edx-0x63],esp
  425262:	les    ebx,FWORD PTR [eax]
  425264:	mov    fs,WORD PTR ds:0x20aa0e85
  42526a:	push   esi
  42526b:	mov    gs,WORD PTR [edx]
  42526d:	adc    al,0xd2
  42526f:	push   ds
  425270:	cld    
  425271:	and    bl,al
  425273:	rcl    BYTE PTR [ecx+0x76],1
  425276:	popa   
  425277:	stos   DWORD PTR es:[edi],eax
  425278:	pusha  
  425279:	and    eax,0x7143da70
  42527e:	and    esi,ebx
  425280:	push   ebp
  425281:	clc    
  425282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425283:	sub    BYTE PTR [ebx-0x48],cl
  425286:	test   eax,0x66537371
  42528b:	into   
  42528c:	jl     0x4252a8
  42528e:	jb     0x425267
  425290:	test   DWORD PTR [ebx+0x2ca05e12],ecx
  425296:	mov    ah,0x24
  425298:	aaa    
  425299:	or     ch,BYTE PTR [ebp+0x31]
  42529c:	mov    BYTE PTR [edx+0x6952c880],dh
  4252a2:	sti    
  4252a3:	sub    DWORD PTR [eax-0x5f],edi
  4252a6:	dec    edi
  4252a7:	inc    ebp
  4252a8:	push   esi
  4252a9:	xchg   esp,eax
  4252aa:	rcl    eax,1
  4252ac:	xchg   esi,eax
  4252ad:	repnz adc DWORD PTR [eax-0x34708f2e],0x2c6414df
  4252b8:	and    eax,0xe7eaf064
  4252bd:	and    BYTE PTR [esi-0xef632d1],dl
  4252c3:	pop    ebx
  4252c4:	or     eax,0x4a831d25
  4252c9:	out    0x8d,al
  4252cb:	aam    0x64
  4252cd:	sbb    dh,dl
  4252cf:	pushf  
  4252d0:	jge    0x4252a6
  4252d2:	popf   
  4252d3:	xchg   ebp,eax
  4252d4:	hlt    
  4252d5:	out    dx,eax
	...
  4252e2:	or     dl,BYTE PTR [edx-0x3c684]
  4252e8:	dec    edi
  4252e9:	mov    bl,0xec
  4252eb:	jo     0x4252a4
  4252ed:	lea    esp,ds:0x769616ec
  4252f3:	les    eax,FWORD PTR [ecx]
  4252f5:	add    BYTE PTR [ebx+eax*1],ch
  4252f8:	add    BYTE PTR [eax],al
  4252fa:	xor    esi,DWORD PTR [eax-0xb]
  4252fd:	leave  
  4252fe:	jns    0x425349
  425300:	test   cl,ch
  425302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425303:	retf   0x892a
  425306:	inc    eax
  425307:	xchg   esi,eax
  425308:	loopne 0x4252c2
  42530a:	adc    DWORD PTR [edx-0x79],edx
  42530d:	ret    
  42530e:	imul   eax,DWORD PTR [esi+0x2b6a1828],0x1024c59a
  425318:	stos   BYTE PTR es:[edi],al
  425319:	xor    BYTE PTR [edi],0x70
  42531c:	jecxz  0x4252cb
  42531e:	inc    esi
  42531f:	dec    edx
  425320:	xchg   esp,eax
  425321:	out    0x1a,eax
  425323:	ret    
  425324:	aaa    
  425325:	add    ah,BYTE PTR [edi]
  425327:	adc    DWORD PTR [ecx],eax
  425329:	stos   BYTE PTR es:[edi],al
  42532a:	xchg   ebx,eax
  42532b:	pop    esp
  42532c:	push   esi
  42532d:	fstp   TBYTE PTR [edx]
  42532f:	add    ecx,edi
  425331:	sbb    al,0x13
  425333:	add    DWORD PTR [edx],0xd02f7f64
  425339:	mov    ch,BYTE PTR [edx]
  42533b:	loop   0x425301
  42533d:	pop    edx
  42533e:	fldenv [edx]
  425340:	or     ch,BYTE PTR [ebp+0x74]
  425343:	arpl   WORD PTR [ebx+0x7bde645d],dx
  425349:	or     BYTE PTR [edi],0x28
  42534c:	call   FWORD PTR fs:[eax-0x52]
  425350:	mov    edi,DWORD PTR [ebx]
  425352:	adc    dh,BYTE PTR [esi+0x7f]
  425355:	adc    al,0xc5
  425357:	sub    ecx,DWORD PTR [edx]
  425359:	inc    DWORD PTR [ecx]
  42535b:	aas    
  42535c:	inc    edx
  42535d:	xchg   esi,eax
  42535e:	xchg   ecx,eax
  42535f:	mov    ds:0xc1ed5cb6,al
  425364:	push   ebx
  425365:	scas   al,BYTE PTR es:[edi]
  425366:	mov    cl,0xf5
  425368:	mov    ah,0xf
  42536a:	cmc    
  42536b:	mov    esi,0xc1ae6feb
  425370:	(bad)  
  425372:	mov    edi,0x53e21b26
  425377:	mov    DWORD PTR [ebx-0x2b],edi
  42537a:	setns  BYTE PTR [ebx+0x30]
  42537e:	imul   ebp,DWORD PTR [ecx+0x73181dd5],0xaed6ee1f
  425388:	daa    
  425389:	dec    edx
  42538a:	dec    esp
  42538b:	cs push 0xffffffaa
  42538e:	cli    
  42538f:	xor    BYTE PTR [ebp+0x56],al
  425392:	fxch   st(4)
  425394:	fist   WORD PTR [ebx-0x39dd9dfd]
  42539a:	mov    dh,0x5e
  42539c:	and    al,0x6a
  42539e:	(bad)  
  42539f:	mov    ah,0x67
  4253a1:	push   ss
  4253a2:	in     al,0x70
  4253a4:	test   eax,0x3c3f015a
  4253a9:	push   cs
  4253aa:	jg     0x42539d
  4253ac:	inc    ebx
  4253ad:	inc    eax
  4253ae:	dec    edi
  4253af:	push   0x6e
  4253b1:	push   ecx
  4253b2:	mov    al,ds:0x46e594cf
  4253b7:	push   eax
  4253b8:	enter  0x6296,0xb3
  4253bc:	daa    
  4253bd:	scas   al,BYTE PTR es:[edi]
  4253be:	out    dx,eax
  4253bf:	inc    esi
  4253c0:	or     dl,BYTE PTR [esi-0x7a]
  4253c3:	or     eax,0xb023136b
  4253c8:	add    eax,0x5f692a96
  4253cd:	data16 cmp bl,BYTE PTR [edi*4-0x77b80d5c]
  4253d5:	cmp    BYTE PTR [eax+ebp*1+0x52],bh
  4253d9:	test   eax,0xae917bd1
  4253de:	mov    DWORD PTR [ebx+0x9],eax
  4253e1:	push   eax
  4253e2:	sbb    DWORD PTR [edi-0x6],ebp
  4253e5:	test   BYTE PTR [edi+0x29],bh
  4253e8:	cdq    
  4253e9:	sar    DWORD PTR [edx+0x678be041],0x35
  4253f0:	add    eax,0xe79ab27e
  4253f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253f6:	icebp  
  4253f7:	push   edx
  4253f8:	out    0x5d,eax
  4253fa:	addr16 je 0x4253c5
  4253fd:	xchg   edi,eax
  4253fe:	scas   al,BYTE PTR es:[edi]
  4253ff:	mov    ebx,0x7b9231f8
  425404:	fs jnp 0x425435
  425407:	ja     0x4253e9
  425409:	or     BYTE PTR [eax+0xb11cfa9],dh
  42540f:	test   DWORD PTR [ecx],ebx
  425411:	sbb    ebp,0x20
  425414:	mov    eax,ds:0x74064cf2
  425419:	pushf  
  42541a:	sbb    eax,0x30c7bab2
  42541f:	inc    ecx
  425420:	std    
  425421:	xor    eax,eax
  425423:	fstp   QWORD PTR [ebx+0x386b2cce]
  425429:	ds and al,0x9f
  42542c:	vpmulhw xmm7,xmm7,xmm1
  425430:	stos   BYTE PTR es:[edi],al
  425431:	fsub   st(5),st
  425433:	in     al,0xdf
  425435:	call   0x3e46:0x5f722b54
  42543c:	sti    
  42543d:	inc    ecx
  42543e:	pop    ebp
  42543f:	jg     0x4253da
  425441:	push   0x7a
  425443:	fbstp  TBYTE PTR [eax]
  425445:	jae    0x4253eb
  425447:	loope  0x42542d
  425449:	xlat   BYTE PTR ds:[ebx]
  42544a:	cli    
  42544b:	mov    edi,0x726ed205
  425450:	jnp    0x42544b
  425452:	xchg   ecx,eax
  425453:	mov    esp,0x3b8d816c
  425458:	ror    ebp,1
  42545a:	retf   0xc8de
  42545d:	into   
  42545e:	shl    BYTE PTR [ecx-0x39876916],0x70
  425465:	fstp   QWORD PTR [ebx-0x38]
  425468:	jle    0x425452
  42546a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42546b:	test   al,ah
  42546d:	jecxz  0x425451
  42546f:	and    al,0xbd
  425471:	xor    dh,BYTE PTR [ecx+0x81e0b77]
  425477:	nop
  425478:	addr16 adc bh,ah
  42547b:	pop    ds
  42547c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42547d:	fist   DWORD PTR [eax]
  42547f:	ds std 
  425481:	in     al,0x97
  425483:	push   esp
  425484:	push   ss
  425485:	xchg   BYTE PTR [ebp-0x6af0c7b2],dl
  42548b:	lea    ecx,[edx+ecx*2-0x54acf348]
  425492:	pop    es
  425493:	cmp    edx,eax
  425495:	xchg   esp,eax
  425496:	jae    0x425436
  425498:	sub    ah,dl
  42549a:	dec    edi
  42549b:	and    esi,DWORD PTR [edi+0x22]
  42549e:	ja     0x425492
  4254a0:	pop    esp
  4254a1:	push   esi
  4254a2:	cld    
  4254a3:	mov    edi,0x3ae663ab
  4254a8:	or     esp,ebx
  4254aa:	mov    bl,0x63
  4254ac:	div    BYTE PTR [ecx+0x51d78d75]
  4254b2:	pop    ss
  4254b3:	repz jmp 0x6c75:0xd9fa3fbf
  4254bb:	out    dx,al
  4254bc:	inc    ebx
  4254bd:	xor    BYTE PTR [ebp-0x5c],al
  4254c0:	sti    
  4254c1:	(bad)  
  4254c2:	mov    ecx,ds
  4254c4:	sub    BYTE PTR [ebx],0x18
  4254c7:	cld    
  4254c8:	push   ebx
  4254c9:	push   ebx
  4254ca:	mov    ebx,0x7a2b8f3d
  4254cf:	cli    
  4254d0:	call   0xaf65:0x2c62ff06
  4254d7:	imul   ebp,edi,0xd60643a4
  4254dd:	sbb    eax,0xee7f46ea
  4254e2:	sbb    ebx,DWORD PTR [edx]
  4254e4:	sbb    al,0x2e
  4254e6:	dec    ebx
  4254e7:	push   edi
  4254e8:	scas   eax,DWORD PTR es:[edi]
  4254e9:	(bad)  
  4254ea:	test   al,0x96
  4254ec:	ins    DWORD PTR es:[edi],dx
  4254ed:	pushf  
  4254ee:	push   ebx
  4254ef:	mov    dh,0xa4
  4254f1:	sub    al,BYTE PTR [edx-0x5ae563bf]
  4254f7:	test   al,0x2d
  4254f9:	or     ebx,ebx
  4254fb:	test   BYTE PTR [ebp+edi*8+0x49],bh
  4254ff:	je     0x425498
  425501:	jle    0x425562
  425503:	jmp    0x450c:0x2d5ee625
  42550a:	xchg   ebx,eax
  42550b:	cwde   
  42550c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42550d:	xor    al,0x67
  42550f:	(bad)  
  425510:	jno    0x4254fb
  425512:	pop    edx
  425513:	imul   eax,ebx,0x58
  425516:	(bad)  
  425517:	hlt    
  425518:	push   esi
  425519:	mov    ah,0xcd
  42551b:	mov    eax,DWORD PTR [edi+0x26809462]
  425521:	aaa    
  425522:	cli    
  425523:	dec    edx
  425524:	cwde   
  425525:	sbb    al,0x15
  425527:	out    0x97,al
  425529:	in     al,dx
  42552a:	rol    BYTE PTR [edi-0x41],1
  42552d:	scas   eax,DWORD PTR es:[edi]
  42552e:	push   cs
  42552f:	cmp    ch,dl
  425531:	ror    edi,0x5f
  425534:	jns    0x4255aa
  425536:	popf   
  425537:	cmp    eax,0xe9909c12
  42553c:	adc    edx,ebp
  42553e:	jp     0x4254c3
  425540:	leave  
  425541:	sar    BYTE PTR [esi-0x199058c8],1
  425547:	pop    esp
  425548:	imul   eax,DWORD PTR [edx+eiz*4+0x2a],0x2e
  42554d:	bound  edx,QWORD PTR gs:0x3255812f
  425554:	loope  0x4255a0
  425556:	jle    0x4255c5
  425558:	pop    edi
  425559:	fadd   DWORD PTR [esi]
  42555b:	dec    ecx
  42555c:	fild   DWORD PTR [ebp+0x54aa42f6]
  425562:	dec    esi
  425563:	fs in  al,dx
  425565:	lock scas eax,DWORD PTR es:[edi]
  425567:	xchg   ebx,eax
  425568:	div    dl
  42556a:	shr    dh,cl
  42556c:	jbe    0x425582
  42556e:	in     eax,0x31
  425570:	push   ecx
  425571:	dec    ebx
  425572:	mov    edi,0xc0f24bb7
  425577:	(bad)  
  425578:	mov    ebp,0x77401a7
  42557d:	sub    BYTE PTR ds:0xe8d3950e,al
  425583:	mov    bh,0x72
  425585:	sbb    ebp,eax
  425587:	mov    edx,0xc39bf48d
  42558c:	mov    ch,0x31
  42558e:	mov    ebp,0x7236a78e
  425593:	and    cl,BYTE PTR [eax]
  425595:	pop    es
  425596:	mov    WORD PTR ds:0xe8f37c6,?
  42559c:	or     BYTE PTR [edi+0x6befd698],dh
  4255a2:	sbb    BYTE PTR [esi+ebx*2],cl
  4255a5:	xchg   esi,eax
  4255a6:	pop    edi
  4255a7:	mov    edi,0x9b3626bc
  4255ac:	push   ebx
  4255ad:	mov    edi,0xb0ecef9c
  4255b2:	cmp    al,0xb0
  4255b4:	xlat   BYTE PTR ds:[ebx]
  4255b5:	jmp    0xa53529d3
  4255ba:	adc    al,0x22
  4255bc:	lods   al,BYTE PTR ds:[esi]
  4255bd:	jmp    0x97db:0xffa2d744
  4255c4:	in     eax,dx
  4255c5:	cmovne ebp,DWORD PTR [edx+0x15]
  4255c9:	sub    DWORD PTR ds:0x868f2f64,ebp
  4255cf:	fstp   TBYTE PTR [eax]
  4255d1:	push   esi
  4255d2:	xlat   BYTE PTR ds:[ebx]
  4255d3:	mov    edx,0xfc66d990
  4255d8:	or     eax,0x9bbec6fd
  4255dd:	or     al,0x7e
  4255df:	push   ecx
  4255e0:	dec    esi
  4255e1:	push   edx
  4255e2:	enter  0x10f9,0x50
  4255e6:	call   0x2bdd:0xc1ff64eb
  4255ed:	lahf   
  4255ee:	pop    ds
  4255ef:	(bad)  
  4255f1:	pop    di
  4255f3:	stc    
  4255f4:	and    BYTE PTR [ebx],bh
  4255f6:	imul   esp,DWORD PTR [ebx],0xcacab53e
  4255fc:	sub    eax,0x90d2c9b8
  425601:	daa    
  425602:	jmp    0x1c61:0x98c4a26c
  425609:	les    edx,FWORD PTR [ebx+0x390116fd]
  42560f:	aaa    
  425610:	(bad)  
  425611:	jbe    0x42567d
  425613:	pop    ds
  425614:	adc    eax,DWORD PTR [edx-0x40]
  425617:	je     0x425649
  425619:	popa   
  42561a:	test   al,0x8
  42561c:	inc    BYTE PTR [eax-0x39482a1f]
  425622:	(bad)  
  425624:	icebp  
  425625:	mov    edi,0x0
	...
  425632:	ret    
  425633:	and    ecx,edx
  425635:	dec    eax
  425636:	repz clc 
  425638:	fld    TBYTE PTR [ebx+0x202892a0]
  42563e:	and    eax,DWORD PTR [eax-0x385df857]
  425644:	add    DWORD PTR [eax],eax
  425646:	sub    al,0x3
  425648:	add    BYTE PTR [eax],al
  42564a:	jnp    0x4256b3
  42564c:	fisubr WORD PTR ds:0xd21d6813
  425652:	std    
  425653:	iret   
  425654:	shl    BYTE PTR [esi+0x2f84320f],0xd5
  42565b:	(bad)  
  42565c:	push   ecx
  42565d:	ret    0x9934
  425660:	clc    
  425661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425662:	outs   dx,DWORD PTR ds:[esi]
  425663:	jge    0x425625
  425665:	add    BYTE PTR [ebx-0x7e],ch
  425668:	in     al,0x45
  42566a:	gs push 0xd78843e
  425670:	mov    BYTE PTR [ebp-0x10],bl
  425673:	call   0xe6d9c883
  425678:	fwait
  425679:	les    esi,FWORD PTR [edx+0x69]
  42567c:	in     al,dx
  42567d:	xor    al,0x50
  42567f:	add    al,0x2a
  425681:	dec    ebx
  425682:	hlt    
  425683:	imul   BYTE PTR [ecx]
  425685:	sbb    al,0x2d
  425687:	retf   
  425688:	es mov cl,0x4d
  42568b:	nop
  42568c:	inc    esp
  42568d:	or     BYTE PTR [ecx+0x2d4e2437],ah
  425693:	in     eax,0xb5
  425695:	retf   0x9fe8
  425698:	retf   
  425699:	or     BYTE PTR [ebx],ah
  42569b:	adc    bl,BYTE PTR fs:0x417466d0
  4256a2:	fcmovnu st,st(7)
  4256a4:	test   DWORD PTR [edi],ecx
  4256a6:	into   
  4256a7:	add    BYTE PTR [esi+0x6f],0xa
  4256ab:	clc    
  4256ac:	into   
  4256ad:	das    
  4256ae:	xchg   ebx,eax
  4256af:	lods   eax,DWORD PTR ds:[esi]
  4256b0:	stc    
  4256b1:	addr16 add eax,0x5d6aa865
  4256b7:	jle    0x425656
  4256b9:	dec    ebp
  4256ba:	inc    eax
  4256bb:	fcmovnu st,st(2)
  4256bd:	push   ss
  4256be:	and    al,0x10
  4256c0:	je     0x425661
  4256c2:	sub    cl,BYTE PTR [esp+edi*4+0x1b5e8052]
  4256c9:	cs xor al,bh
  4256cc:	fist   WORD PTR ds:0x3254c11e
  4256d2:	imul   ecx,DWORD PTR [ecx+0x25b902c8],0xffffff8f
  4256d9:	add    DWORD PTR [ecx-0x14ed37fa],edx
  4256df:	pop    ecx
  4256e0:	jge    0x425715
  4256e2:	and    al,0x54
  4256e4:	jcxz   0x42567c
  4256e7:	aas    
  4256e8:	or     BYTE PTR [edx-0x67],0xdc
  4256ec:	sbb    ebx,0xffffffc0
  4256ef:	jp     0x4256fa
  4256f1:	cdq    
  4256f2:	push   es
  4256f3:	xchg   BYTE PTR [ebx-0x504f55f],al
  4256f9:	inc    esp
  4256fa:	pop    ds
  4256fb:	inc    ebp
  4256fc:	fcomp  DWORD PTR [edi]
  4256fe:	clc    
  4256ff:	dec    ebp
  425700:	fcomp  QWORD PTR [ecx-0x69]
  425703:	jmp    0xa5220190
  425708:	shl    DWORD PTR [ebx],1
  42570a:	adc    dh,BYTE PTR [edx+0x447d379b]
  425710:	retf   0x8449
  425713:	sahf   
  425714:	add    eax,0x85529cb9
  425719:	out    0x2f,al
  42571b:	xchg   ebp,eax
  42571c:	mov    esi,0x95bed680
  425721:	dec    ecx
  425722:	ds push es
  425724:	mov    esp,0xcdc080b6
  425729:	mov    esp,0x4ecac669
  42572e:	xchg   DWORD PTR [edi-0x38008625],edx
  425734:	jle    0x425741
  425736:	mov    edi,0x9350ab6e
  42573b:	cmp    esp,edx
  42573d:	jmp    0x5098:0x8e019f3b
  425744:	add    eax,0x71bc8695
  42574a:	int    0x33
  42574c:	outs   dx,BYTE PTR ds:[esi]
  42574d:	dec    esp
  42574e:	jmp    0x2381:0xe4a5e1c4
  425755:	xchg   BYTE PTR [ebp+0x28f2ce77],ch
  42575b:	xchg   DWORD PTR [ebx-0x29],edx
  42575e:	xor    DWORD PTR [eax],0xffffffd9
  425761:	mov    dh,0x8f
  425763:	mov    edx,0x2870016c
  425768:	ins    BYTE PTR es:[edi],dx
  425769:	test   eax,0xfd5e9672
  42576e:	scas   eax,DWORD PTR es:[edi]
  42576f:	es xchg ecx,eax
  425771:	xor    dl,BYTE PTR cs:[edi+ecx*1-0x1c]
  425776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425777:	enter  0x752a,0x5b
  42577b:	xchg   esp,eax
  42577c:	lahf   
  42577d:	pop    es
  42577e:	(bad)  
  425780:	xchg   ebx,eax
  425781:	or     DWORD PTR [bx-0x71c0],0xffffffec
  425787:	sub    eax,0xa9eb9904
  42578c:	dec    edi
  42578d:	xor    ecx,DWORD PTR [eax+edi*2]
  425790:	add    DWORD PTR [eiz*8-0x2c04f31c],ecx
  425797:	in     eax,dx
  425798:	add    DWORD PTR [ecx+edx*4],ecx
  42579b:	icebp  
  42579c:	pop    esp
  42579d:	das    
  42579e:	inc    ebx
  42579f:	addr16 (bad) 
  4257a1:	pop    edi
  4257a2:	xlat   BYTE PTR ds:[ebx]
  4257a3:	push   esp
  4257a4:	mov    dl,0xb3
  4257a6:	push   cs
  4257a7:	les    esp,FWORD PTR [edi-0x43]
  4257aa:	pop    edi
  4257ab:	cmp    esp,DWORD PTR [eax]
  4257ad:	popf   
  4257ae:	jle    0x4257ef
  4257b0:	jle    0x425770
  4257b2:	fwait
  4257b3:	adc    al,BYTE PTR [edi-0x68ae105b]
  4257b9:	dec    ebp
  4257ba:	fsub   DWORD PTR [ebx]
  4257bc:	outs   dx,DWORD PTR ds:[esi]
  4257bd:	mov    esp,0x30452507
  4257c2:	push   esi
  4257c3:	jmp    0xa7ae:0x8daffb6e
  4257ca:	mov    dl,bl
  4257cc:	scas   al,BYTE PTR es:[edi]
  4257cd:	cmp    ch,bh
  4257cf:	mov    bh,0xb4
  4257d1:	push   ecx
  4257d2:	xchg   esp,eax
  4257d3:	xchg   edx,eax
  4257d4:	test   BYTE PTR [ecx],0xd2
  4257d7:	inc    esp
  4257d8:	arpl   WORD PTR [esp+edi*8-0x4c4a2413],bp
  4257df:	bound  ecx,QWORD PTR [edx-0x11f57370]
  4257e5:	or     DWORD PTR [edi],ecx
  4257e7:	push   eax
  4257e8:	dec    edx
  4257e9:	shl    BYTE PTR [esi-0x66726db],cl
  4257ef:	xchg   DWORD PTR [eax],ecx
  4257f1:	ds sub dl,dh
  4257f4:	push   eax
  4257f5:	mov    al,0x23
  4257f7:	aam    0xe8
  4257f9:	cmp    BYTE PTR [edi],ch
  4257fb:	mov    es,WORD PTR [esi+eax*1+0x2c]
  4257ff:	call   0x77712815
  425804:	sahf   
  425805:	add    ch,BYTE PTR [ecx+0x49]
  425808:	add    BYTE PTR ds:0x44de60a5,dh
  42580e:	pop    ds
  42580f:	dec    ebp
  425810:	xor    DWORD PTR [ebx-0x73],ebx
  425813:	xlat   BYTE PTR ds:[ebx]
  425814:	xor    al,0x2d
  425816:	xchg   ebx,eax
  425817:	add    al,0xa5
  425819:	push   edi
  42581a:	pop    eax
  42581b:	pusha  
  42581c:	jmp    0x5911a463
  425821:	push   edi
  425822:	xor    BYTE PTR [ebp+0x34],al
  425825:	fcomp  QWORD PTR [edi+edi*1-0x77521701]
  42582c:	adc    DWORD PTR [eax-0x126436eb],edx
  425832:	xchg   dl,ch
  425834:	inc    edi
  425835:	inc    eax
  425836:	xchg   ebp,eax
  425837:	mov    BYTE PTR [esi+0x1f],cl
  42583a:	xchg   ch,cl
  42583c:	jl     0x42587f
  42583e:	xor    al,0x99
  425840:	int    0xbd
  425842:	or     DWORD PTR [ebx+0x36],ebx
  425845:	ss pop edi
  425847:	sar    BYTE PTR [edx+0x5218b783],0xee
  42584e:	jg     0x425824
  425850:	mov    ds,WORD PTR [esi-0x78]
  425853:	not    DWORD PTR [eax+0x78bd98d8]
  425859:	test   bl,dl
  42585b:	mov    dh,0x5d
  42585d:	push   eax
  42585e:	je     0x42585c
  425860:	lods   eax,DWORD PTR ds:[esi]
  425861:	push   DWORD PTR [ebx-0x4b]
  425864:	jle    0x42580f
  425866:	push   es
  425867:	aam    0x2e
  425869:	js     0x42581d
  42586b:	push   esi
  42586c:	pop    edx
  42586d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42586e:	(bad)  
  42586f:	mov    edx,0xf9c35a0d
  425874:	push   cs
  425875:	scas   eax,DWORD PTR es:[edi]
  425876:	pusha  
  425877:	and    BYTE PTR [edi+0x3c],dh
  42587a:	int3   
  42587b:	daa    
  42587c:	shr    BYTE PTR [esi+0x67b61ae8],1
  425882:	sbb    dh,BYTE PTR [esi+0x6e66a20c]
  425888:	mov    eax,0x9daba464
  42588d:	xchg   esp,eax
  42588e:	pop    ebp
  42588f:	xor    BYTE PTR [edx],0xc3
  425892:	ficomp DWORD PTR [edx]
  425895:	cmp    DWORD PTR [ebx+0x2],ecx
  425898:	ins    DWORD PTR es:[edi],dx
  425899:	int    0xb0
  42589b:	xor    al,0xc1
  42589d:	jge    0x42587e
  42589f:	add    dl,BYTE PTR [ecx]
  4258a1:	retf   0xaaea
  4258a4:	sub    bl,ah
  4258a6:	cmp    eax,0x9bef504f
  4258ab:	(bad)  
  4258ad:	je     0x425878
  4258af:	jg     0x4258b5
  4258b1:	outs   dx,BYTE PTR ds:[esi]
  4258b2:	ds test al,0xda
  4258b5:	sub    eax,0x49400758
  4258ba:	aad    0xcd
  4258bc:	or     al,0x80
  4258be:	adc    eax,0xb8358746
  4258c3:	mov    ecx,0xb4230bab
  4258c8:	mov    edx,DWORD PTR [eax]
  4258ca:	popa   
  4258cb:	push   edi
  4258cc:	pop    esi
  4258cd:	xchg   DWORD PTR ds:0x147daee,esp
  4258d3:	ret    0x4c9f
  4258d6:	push   ebx
  4258d7:	out    dx,al
  4258d8:	call   0x67f3:0xaad8a47f
  4258df:	mov    eax,ds:0x1aff1b0c
  4258e4:	es mov esi,0x165c9897
  4258ea:	pop    es
  4258eb:	push   esp
  4258ec:	jbe    0x42593d
  4258ee:	scas   eax,DWORD PTR es:[edi]
  4258ef:	mov    ebp,0xb8c44ad1
  4258f4:	jb     0x425906
  4258f6:	cmp    DWORD PTR [edi+eax*1-0x41],0x74250602
  4258fe:	aaa    
  4258ff:	sub    edi,edx
  425901:	fst    DWORD PTR [esi-0x45]
  425904:	int3   
  425905:	dec    ecx
  425906:	cmp    ebp,DWORD PTR [ebp+0x4b]
  425909:	daa    
  42590a:	into   
  42590b:	mov    BYTE PTR [edx+0x38f34f99],dl
  425911:	xchg   esi,eax
  425912:	ret    0x6442
  425915:	es pop eax
  425917:	cmp    eax,0xb76d1c18
  42591c:	out    dx,eax
  42591d:	xor    ah,bh
  42591f:	adc    BYTE PTR [edx+0x4929b18a],0xc0
  425926:	out    0x28,eax
  425928:	and    eax,edx
  42592a:	dec    edi
  42592b:	mov    esi,0x79df9f37
  425930:	xchg   esp,eax
  425931:	lock jns 0x425926
  425934:	cmc    
  425935:	jmp    0x425964
  425937:	hlt    
  425938:	inc    esp
  425939:	jnp    0x42590d
  42593b:	cmp    BYTE PTR [eax],ch
  42593d:	adc    ecx,edx
  42593f:	xor    eax,0xa9c64512
  425944:	(bad)  
  425945:	pop    edi
  425946:	mov    eax,ds:0x4355709c
  42594b:	push   edi
  42594c:	lods   al,BYTE PTR ds:[esi]
  42594d:	test   eax,0x67807c14
  425952:	in     al,dx
  425953:	cld    
  425954:	xchg   ecx,eax
  425955:	pop    edi
  425956:	cmp    eax,DWORD PTR [esi-0x34edba0a]
  42595c:	sub    BYTE PTR [eax+0x6e],ch
  42595f:	div    esp
  425961:	pushf  
  425962:	mov    dl,0x5b
  425964:	sub    BYTE PTR [eax],cl
  425966:	ret    
  425967:	push   edi
  425968:	(bad)  
  425969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42596a:	pop    edx
  42596b:	push   ebp
  42596c:	mov    DWORD PTR [ecx+ecx*1],0x85f1b5a1
  425973:	jl     0x42594c
  425975:	jo     0x425977
	...
  42597f:	add    BYTE PTR [eax],al
  425981:	add    BYTE PTR [edx-0x101610a7],bl
  425987:	call   FWORD PTR [esi+0x5c5d437b]
  42598d:	mov    cl,0xf5
  42598f:	gs mov cl,0x70
  425992:	into   
  425993:	retf   0x1
  425996:	sub    al,0x3
  425998:	add    BYTE PTR [eax],al
  42599a:	pushf  
  42599b:	adc    al,0x2d
  42599d:	mov    ss,ebx
  42599f:	lods   al,BYTE PTR ds:[esi]
  4259a0:	dec    ebx
  4259a1:	rcr    BYTE PTR [esi],cl
  4259a3:	mov    ebx,edx
  4259a5:	mov    esi,0x15cebf0b
  4259aa:	inc    ebx
  4259ab:	ss sbb eax,0x9ccd61ac
  4259b1:	adc    DWORD PTR [ebx+0x6e],0x20
  4259b5:	fdiv   st(3),st
  4259b7:	xlat   BYTE PTR ds:[ebx]
  4259b8:	sbb    ebx,esp
  4259ba:	daa    
  4259bb:	repz xor edx,0xfc30f5e
  4259c2:	push   eax
  4259c3:	push   ebx
  4259c4:	sub    BYTE PTR [ecx],dh
  4259c6:	fs jno 0x4259d3
  4259c9:	xor    al,0x60
  4259cb:	(bad)  
  4259cd:	(bad)  
  4259ce:	jb     0x4259f7
  4259d0:	xchg   ecx,eax
  4259d1:	fdivp  st(4),st
  4259d3:	ds call 0xf61e50e4
  4259d9:	push   cs
  4259da:	(bad)
  4259df:	mov    bh,0x7d
  4259e1:	sti    
  4259e2:	push   0xe3fa8c8f
  4259e7:	ficomp DWORD PTR [edi+0x13821ee3]
  4259ed:	ins    BYTE PTR es:[edi],dx
  4259ee:	mov    DWORD PTR [edx],0x2e29dd4b
  4259f4:	jecxz  0x425a06
  4259f6:	(bad)  
  4259f7:	aas    
  4259f8:	xor    BYTE PTR [esi-0x29a393ec],0x8c
  4259ff:	cld    
  425a00:	mov    bl,BYTE PTR [edx+0x4a]
  425a03:	pop    edi
  425a04:	in     eax,dx
  425a05:	add    dh,dl
  425a07:	sbb    ecx,DWORD PTR [ebp+0x1c]
  425a0a:	mov    al,ds:0x4d7bb587
  425a0f:	push   ds
  425a10:	into   
  425a11:	imul   eax,DWORD PTR [ebx],0x5839b6a2
  425a17:	add    BYTE PTR [eax+0x6e],ah
  425a1a:	inc    ecx
  425a1b:	xor    DWORD PTR gs:[eax],0x6e
  425a1f:	xchg   ecx,eax
  425a20:	sbb    esi,DWORD PTR [ebx+0x48]
  425a23:	push   eax
  425a24:	dec    eax
  425a25:	mov    edx,0x270c6863
  425a2b:	loop   0x425a0e
  425a2d:	and    eax,0xb1cdf91f
  425a32:	lods   eax,DWORD PTR ds:[esi]
  425a33:	push   ecx
  425a34:	mov    edi,DWORD PTR [edx]
  425a36:	repz dec esi
  425a38:	icebp  
  425a39:	enter  0x3f1d,0x78
  425a3d:	add    al,0x5f
  425a3f:	jmp    0xdc8f:0x76964cb
  425a46:	dec    bp
  425a48:	jge    0x425a79
  425a4a:	pushf  
  425a4b:	mov    esi,0x47c8e3d1
  425a50:	lsl    esp,sp
  425a53:	xor    BYTE PTR [ecx-0x4e],bh
  425a56:	add    DWORD PTR [esp+eax*4],ecx
  425a59:	jo     0x425a1a
  425a5b:	mov    dl,0x8f
  425a5d:	mov    ebp,0x27343391
  425a62:	jmp    0x425a9c
  425a64:	xchg   ebx,eax
  425a65:	ss aad 0x3e
  425a68:	and    eax,0xbec3806
  425a6d:	inc    ebp
  425a6e:	daa    
  425a6f:	jne    0x425a75
  425a71:	push   esi
  425a72:	sbb    ebx,edx
  425a74:	fmul   st,st(5)
  425a76:	shl    ebx,0x57
  425a79:	clc    
  425a7a:	cwde   
  425a7b:	mov    esp,0xf403dc5a
  425a80:	add    DWORD PTR [ebp-0x2fcc1fe],eax
  425a86:	mov    BYTE PTR [esi-0x8585c39],ah
  425a8c:	aas    
  425a8d:	pop    ebp
  425a8e:	xor    al,0x37
  425a90:	aam    0xe0
  425a92:	fcmove st,st(0)
  425a94:	mov    bl,0xae
  425a96:	push   0x37
  425a98:	inc    ebx
  425a99:	sbb    ebp,DWORD PTR [eax]
  425a9b:	(bad)  
  425a9c:	mov    esi,0x3fe5f96d
  425aa1:	mov    esi,0xa572b87
  425aa6:	sahf   
  425aa7:	outs   dx,DWORD PTR ds:[esi]
  425aa8:	mov    edi,0xfc4f985c
  425aae:	add    esp,ebp
  425ab0:	cmp    al,0xd1
  425ab2:	out    0xc4,eax
  425ab4:	mov    eax,ds:0x3ac6fe19
  425ab9:	popf   
  425aba:	xor    cl,BYTE PTR [ebx-0x3a]
  425abd:	adc    al,0xa5
  425abf:	out    0xf5,al
  425ac1:	fs mov ebx,0x8a790e5c
  425ac7:	in     al,dx
  425ac8:	jns    0x425abe
  425aca:	retf   
  425acb:	push   ebp
  425acc:	popf   
  425acd:	in     eax,dx
  425ace:	mov    ah,0x2f
  425ad0:	das    
  425ad1:	out    dx,eax
  425ad2:	jns    0x425b52
  425ad4:	mov    ebx,0x7b873567
  425ad9:	add    dl,BYTE PTR [esi-0x7e]
  425adc:	clc    
  425add:	cmp    DWORD PTR [ebp+0x26c31e50],edi
  425ae3:	frstor [ebp+ebx*8-0x5b05b37c]
  425aea:	scas   eax,DWORD PTR es:[edi]
  425aeb:	cmp    edx,DWORD PTR [ebp+0x3b62860c]
  425af1:	and    DWORD PTR [edi],0x8
  425af4:	arpl   di,sp
  425af6:	and    eax,0x2268d09d
  425afb:	daa    
  425afc:	ds inc esp
  425afe:	lock in eax,0xb7
  425b01:	retf   0xb997
  425b04:	mov    al,0xa2
  425b06:	sbb    ebx,ebx
  425b08:	jg     0x425b72
  425b0a:	enter  0x6c2d,0x1e
  425b0e:	jg     0x425abe
  425b10:	pop    edx
  425b11:	fild   DWORD PTR [ebx-0x38]
  425b14:	jno    0x425ae6
  425b16:	retf   
  425b17:	pushf  
  425b18:	mov    DWORD PTR [eax-0x39],edi
  425b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b1c:	push   cs
  425b1d:	mov    DWORD PTR [edi+0x3cf08778],ebp
  425b23:	add    eax,0x304c2943
  425b28:	push   es
  425b29:	or     eax,0x3aa9cb3f
  425b2e:	mov    eax,fs
  425b30:	or     BYTE PTR [eax],dh
  425b32:	aaa    
  425b33:	mov    WORD PTR [edx+0x395beaae],cs
  425b39:	ret    
  425b3a:	cld    
  425b3b:	mov    ebx,0x74f544e7
  425b40:	out    dx,al
  425b41:	push   0x17b89d44
  425b46:	jo     0x425b5a
  425b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b49:	pop    esi
  425b4a:	xlat   BYTE PTR ds:[ebx]
  425b4b:	xchg   ebp,eax
  425b4c:	xchg   ecx,eax
  425b4d:	loop   0x425af4
  425b4f:	pop    edi
  425b50:	inc    esi
  425b51:	mov    bh,ah
  425b53:	ret    0x55ed
  425b56:	mov    al,0x64
  425b58:	jmp    0x170ae018
  425b5d:	xor    ebp,DWORD PTR [ebx]
  425b5f:	not    BYTE PTR [eax+0x399564b3]
  425b65:	lock mov edx,edx
  425b68:	std    
  425b69:	push   ebx
  425b6a:	dec    ebx
  425b6b:	xor    cl,BYTE PTR [ebx-0x51]
  425b6e:	cdq    
  425b6f:	mov    edi,0x824eaeee
  425b74:	pushf  
  425b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b76:	fild   QWORD PTR [esi+esi*8+0x30]
  425b7a:	test   DWORD PTR [edx+0x429708cf],0x567d0f75
  425b84:	out    dx,eax
  425b85:	into   
  425b86:	ret    
  425b87:	leave  
  425b88:	xor    eax,0x3dab1276
  425b8d:	push   ds
  425b8e:	gs dec edx
  425b90:	adc    esp,DWORD PTR ds:0x8d2ae555
  425b96:	shr    DWORD PTR [edi+eax*4],1
  425b99:	cmp    al,0x85
  425b9b:	je     0x425c04
  425b9d:	mov    BYTE PTR [ecx],dh
  425b9f:	add    cl,BYTE PTR [edi-0x111b187]
  425ba5:	test   DWORD PTR [edi-0x5a63690b],ecx
  425bab:	add    dh,BYTE PTR [ebx]
  425bad:	inc    edi
  425bae:	fwait
  425baf:	test   al,0x91
  425bb1:	cmp    BYTE PTR [eax+0x66],al
  425bb4:	xchg   esi,eax
  425bb5:	xchg   esp,eax
  425bb6:	mov    al,0x44
  425bb8:	push   0x52
  425bba:	fnstsw WORD PTR [ebp-0x5bb03193]
  425bc0:	pusha  
  425bc1:	iret   
  425bc2:	(bad)  
  425bc3:	out    0x97,eax
  425bc5:	int3   
  425bc6:	hlt    
  425bc7:	jbe    0x425bd7
  425bc9:	dec    ebp
  425bca:	xchg   ebx,eax
  425bcb:	jmp    0xdb0e0390
  425bd0:	jge    0x425be5
  425bd2:	jmp    0xa713c762
  425bd7:	cmp    esp,DWORD PTR [ebp+0x46afa03]
  425bdd:	mov    ecx,0xbb60676a
  425be2:	stos   BYTE PTR es:[edi],al
  425be3:	xchg   ebx,eax
  425be4:	(bad)  
  425be5:	push   edi
  425be6:	dec    ebp
  425be7:	lea    ebp,[eax-0x16]
  425bea:	fmulp  st(6),st
  425bec:	(bad)  
  425bed:	icebp  
  425bee:	cmp    DWORD PTR [ebp-0x3a],esi
  425bf1:	mov    al,ds:0xf1792c2e
  425bf6:	or     DWORD PTR [edx+0x6bd25cd1],esi
  425bfc:	cmp    al,BYTE PTR [eax+0x1f67b44b]
  425c02:	cmp    DWORD PTR [ecx+ebx*2+0x3f],edi
  425c06:	stc    
  425c07:	xlat   BYTE PTR ds:[ebx]
  425c08:	sub    eax,0xe303731d
  425c0d:	pop    eax
  425c0e:	mov    ebp,0x6fa8b137
  425c13:	push   eax
  425c14:	sub    eax,0xe6270e81
  425c19:	(bad)  
  425c1a:	xchg   esi,eax
  425c1b:	daa    
  425c1c:	imul   ecx,DWORD PTR [eax],0xb3ff119f
  425c22:	xchg   edi,eax
  425c23:	jae    0x425c38
  425c25:	rol    DWORD PTR [ebp+0x7a],0x9d
  425c29:	fs adc eax,0x104a42c9
  425c2f:	mov    cs,WORD PTR [edi-0x7faed40e]
  425c35:	(bad)  
  425c36:	cmc    
  425c37:	cmp    al,0x7f
  425c39:	jne    0x425c4b
  425c3b:	jb     0x425c35
  425c3d:	in     al,dx
  425c3e:	pop    esp
  425c3f:	mov    esp,?
  425c41:	jbe    0x425cb8
  425c43:	adc    al,0x88
  425c45:	shr    BYTE PTR [edi],cl
  425c47:	mov    eax,ds:0x3e098cc1
  425c4c:	jb     0x425ccc
  425c4e:	mov    ebx,DWORD PTR [ebp+0x7089c945]
  425c54:	add    ch,BYTE PTR [ebp-0x66169dc3]
  425c5a:	std    
  425c5b:	xchg   ebx,eax
  425c5c:	inc    esp
  425c5d:	sbb    al,0xcb
  425c5f:	retf   
  425c60:	pop    ss
  425c61:	pop    ss
  425c62:	mov    ebp,0x952b1975
  425c67:	icebp  
  425c68:	xor    al,0xfa
  425c6a:	pop    ss
  425c6b:	out    dx,eax
  425c6c:	mov    ebx,0xe196b523
  425c71:	aad    0x84
  425c73:	test   eax,0x8c9b085f
  425c78:	jge    0x425cd9
  425c7a:	pop    ebp
  425c7b:	test   DWORD PTR [esi],0x32f3eee4
  425c81:	and    DWORD PTR [ebp+0x39],edx
  425c84:	xchg   ebx,eax
  425c85:	xor    al,0x25
  425c87:	adc    BYTE PTR [ecx+0x45e1139d],al
  425c8d:	cld    
  425c8e:	and    bl,dl
  425c90:	sub    dl,dl
  425c92:	ret    
  425c93:	inc    edx
  425c94:	mov    ebx,0xc7ce4ac1
  425c99:	mov    esp,0xa8afd459
  425c9e:	in     eax,dx
  425c9f:	add    BYTE PTR [eax+0x43c355c6],dl
  425ca5:	pop    ss
  425ca6:	pusha  
  425ca7:	(bad)  
  425ca8:	push   ebx
  425ca9:	xor    ebx,DWORD PTR [eax]
  425cab:	dec    edi
  425cac:	aaa    
  425cad:	mov    ebx,0x15969faa
  425cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cb3:	xchg   ecx,eax
  425cb4:	retf   0xc8d9
  425cb7:	rol    DWORD PTR [eax],0xad
  425cba:	fnstenv [ebp-0x6ec06ed1]
  425cc0:	mov    al,ds:0x2c744014
  425cc5:	cmp    al,0x0
	...
  425ccf:	add    BYTE PTR [eax],al
  425cd1:	add    BYTE PTR [ebp+0x4f3707c0],cl
  425cd7:	idiv   DWORD PTR [ebp+0x532a00fa]
  425cdd:	(bad)  [ecx+ebp*2-0x32051ebc]
  425ce4:	add    DWORD PTR [eax],eax
  425ce6:	sub    al,0x3
  425ce8:	add    BYTE PTR [eax],al
  425cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ceb:	(bad)  
  425cec:	pop    esp
  425ced:	pop    eax
  425cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cef:	inc    ebx
  425cf0:	mov    ebx,0xe4639098
  425cf5:	push   ebx
  425cf6:	in     al,0x20
  425cf8:	mov    ah,0xfb
  425cfa:	cld    
  425cfb:	sahf   
  425cfc:	repnz mov dl,0x35
  425cff:	jae    0x425d4b
  425d01:	jmp    0x425d16
  425d03:	call   0x697a1f74
  425d08:	fistp  QWORD PTR [ebp-0x51]
  425d0b:	jno    0x425d5b
  425d0d:	out    0xe3,al
  425d0f:	repnz push ebx
  425d11:	xchg   ecx,eax
  425d12:	and    BYTE PTR [ebp+eiz*2-0x4159b7ba],cl
  425d19:	sub    al,0x60
  425d1b:	xor    eax,DWORD PTR [edx-0x56]
  425d1e:	mov    BYTE PTR [esi+0x53809c5c],al
  425d24:	cs mov edx,0xc8c983f3
  425d2a:	push   0x93a3fb22
  425d2f:	cdq    
  425d30:	pop    edx
  425d31:	je     0x425ce0
  425d33:	popa   
  425d34:	addr16 in al,dx
  425d36:	mov    cl,0xf7
  425d38:	push   esp
  425d39:	fist   DWORD PTR es:[edx-0x1b]
  425d3d:	xor    BYTE PTR gs:[ebp-0x3e],bh
  425d41:	push   eax
  425d42:	cld    
  425d43:	in     al,dx
  425d44:	push   cs
  425d45:	sar    DWORD PTR [ecx+0x25],1
  425d48:	dec    ebx
  425d49:	addr16 jmp 0x425db3
  425d4c:	ret    
  425d4d:	cmp    esp,DWORD PTR [edi+ebp*8-0x32]
  425d51:	pop    esp
  425d52:	repnz dec esp
  425d54:	and    DWORD PTR [ebp-0x236dc297],esi
  425d5a:	sub    ah,BYTE PTR [esi-0x24]
  425d5d:	inc    edx
  425d5e:	les    ebx,FWORD PTR [edx+edi*2]
  425d61:	xor    DWORD PTR [ebp-0x5d],ecx
  425d64:	sbb    cl,BYTE PTR [edi]
  425d66:	inc    esp
  425d67:	rcr    DWORD PTR [eax+0x7a],0x2d
  425d6b:	pop    ss
  425d6c:	jge    0x425d9d
  425d6e:	test   ah,ah
  425d70:	xor    DWORD PTR [esi],eax
  425d72:	ins    DWORD PTR es:[edi],dx
  425d73:	adc    BYTE PTR [ecx-0x26],bl
  425d76:	retf   
  425d77:	and    ebx,DWORD PTR ds:0x88b4b3a7
  425d7d:	and    al,0xdd
  425d7f:	xchg   edi,eax
  425d80:	popa   
  425d81:	inc    esi
  425d82:	lods   al,BYTE PTR ds:[esi]
  425d83:	in     eax,dx
  425d84:	jno    0x425d5f
  425d86:	(bad)  
  425d88:	or     ch,BYTE PTR [ebp+ebx*2+0x3efea546]
  425d8f:	push   eax
  425d90:	xor    al,0xff
  425d92:	rcl    DWORD PTR [edi-0x5f65b533],1
  425d98:	cdq    
  425d99:	shl    BYTE PTR [eax],0x9a
  425d9c:	inc    edx
  425d9d:	fucomip st,st(4)
  425d9f:	or     DWORD PTR [eax+0x22],edx
  425da2:	fsub   DWORD PTR [esi-0x78]
  425da5:	push   eax
  425da6:	(bad)  
  425da8:	mov    ebx,0xd13d0e67
  425dad:	div    DWORD PTR [ecx-0x4b]
  425db0:	jns    0x425dc4
  425db2:	adc    al,0x5
  425db4:	fs out 0x86,eax
  425db7:	les    ebx,FWORD PTR [edx]
  425db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dba:	inc    edx
  425dbb:	jns    0x425de0
  425dbd:	scas   al,BYTE PTR es:[edi]
  425dbe:	or     eax,esp
  425dc0:	jmp    0x425e2d
  425dc2:	adc    BYTE PTR [esi+0x4d],bl
  425dc5:	pop    eax
  425dc6:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  425dc8:	test   eax,0xafbee6f8
  425dcd:	fs pop ebp
  425dcf:	pop    eax
  425dd0:	sar    DWORD PTR [eax],1
  425dd2:	jg     0x425d57
  425dd4:	pop    esi
  425dd5:	ins    DWORD PTR es:[edi],dx
  425dd6:	or     BYTE PTR [edi+ebp*2-0x7d],bl
  425dda:	sbb    dl,BYTE PTR [ebp-0xa]
  425ddd:	sti    
  425dde:	sbb    BYTE PTR [ecx+0x467612a9],cl
  425de4:	mov    ebp,0x743fce46
  425de9:	lods   eax,DWORD PTR ds:[esi]
  425dea:	xor    eax,0xd17ecbd3
  425def:	add    dl,ah
  425df1:	imul   esp,DWORD PTR [esi+ebp*2],0xed609cf1
  425df8:	dec    esi
  425df9:	test   al,0x99
  425dfb:	mov    ch,0x1b
  425dfd:	fwait
  425dfe:	cmp    ebp,esp
  425e00:	sub    al,BYTE PTR [edx]
  425e02:	xor    eax,0x871dd982
  425e07:	or     DWORD PTR [edx+ecx*8],esp
  425e0a:	xor    al,0x64
  425e0c:	int    0x1
  425e0e:	add    al,0x3
  425e10:	aad    0x6f
  425e12:	rcl    BYTE PTR [esi+0x42450474],1
  425e18:	add    ch,dh
  425e1a:	out    0x7f,eax
  425e1c:	add    edx,ecx
  425e1e:	stc    
  425e1f:	pop    ecx
  425e20:	retf   0x42e2
  425e23:	dec    ebp
  425e24:	je     0x425e81
  425e26:	pop    es
  425e27:	or     ebp,edi
  425e29:	outs   dx,DWORD PTR ds:[esi]
  425e2a:	xchg   ecx,eax
  425e2b:	jae    0x425e73
  425e2d:	mov    dl,BYTE PTR [esi+0x35]
  425e30:	or     dh,BYTE PTR [esi-0x4d604d7a]
  425e36:	les    ecx,FWORD PTR [edi-0x52300d40]
  425e3c:	loopne 0x425e83
  425e3e:	jbe    0x425e91
  425e40:	mov    ds:0xb5492810,al
  425e45:	(bad)  
  425e46:	or     al,0x12
  425e48:	popf   
  425e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e4a:	lea    esi,[ebp-0x1e]
  425e4d:	fcomp  QWORD PTR [esi+eiz*1-0x78c10f2c]
  425e54:	ins    DWORD PTR es:[edi],dx
  425e55:	xchg   edx,eax
  425e56:	gs add eax,0x237f268e
  425e5c:	mov    al,0xbd
  425e5e:	mov    ds:0x40c8c1c8,al
  425e63:	enter  0x960,0x8d
  425e67:	aaa    
  425e68:	dec    eax
  425e69:	adc    dl,ah
  425e6b:	popa   
  425e6c:	add    ecx,DWORD PTR [ebp-0x1f]
  425e6f:	jmp    0x6a524f72
  425e74:	adc    eax,0x9ed06a5b
  425e79:	mov    dh,0x6a
  425e7b:	enter  0x5845,0x30
  425e7f:	(bad)  
  425e80:	jmp    0xb95d:0xd9c5c02e
  425e87:	inc    esp
  425e88:	xchg   esp,eax
  425e89:	jns    0x425e25
  425e8b:	xchg   edx,eax
  425e8c:	stos   DWORD PTR es:[edi],eax
  425e8d:	cmp    dl,BYTE PTR [ebp-0x4b]
  425e90:	add    esi,ebx
  425e92:	(bad)  
  425e93:	hlt    
  425e94:	mov    dh,BYTE PTR [edx-0x18022499]
  425e9a:	cwde   
  425e9b:	xor    ecx,DWORD PTR [edi]
  425e9d:	sub    eax,0x79fef42c
  425ea2:	mov    esi,0x20447486
  425ea7:	aad    0x7e
  425ea9:	daa    
  425eaa:	inc    edx
  425eab:	jae    0x425f26
  425ead:	sub    dh,ah
  425eaf:	arpl   WORD PTR [ecx+0x7],ax
  425eb2:	or     edi,DWORD PTR [edi-0xf87914b]
  425eb8:	mov    dl,0xe5
  425eba:	sbb    eax,0xf90711e7
  425ebf:	sub    al,0xc9
  425ec1:	jnp    0x425e60
  425ec3:	nop
  425ec4:	mov    dl,0x18
  425ec6:	add    DWORD PTR [eax-0x306bc4e2],esi
  425ecc:	fdivr  st(5),st
  425ece:	(bad)  
  425ecf:	adc    al,0x5b
  425ed1:	push   edi
  425ed2:	inc    ecx
  425ed3:	(bad)  
  425ed4:	mov    BYTE PTR ss:[edx+0x641c174e],ah
  425edb:	sub    al,0x4e
  425edd:	or     ah,BYTE PTR ds:0x3ca448dc
  425ee3:	or     al,0xdd
  425ee5:	push   ecx
  425ee6:	pop    ebx
  425ee7:	push   DWORD PTR ds:0xdfb8188
  425eed:	mov    ds:0xb430b94f,eax
  425ef2:	xchg   esi,eax
  425ef3:	mov    bl,0x41
  425ef5:	push   ss
  425ef6:	retf   
  425ef7:	cmp    bh,al
  425ef9:	jne    0x425f14
  425efb:	add    eax,0xf51b88f6
  425f00:	lahf   
  425f01:	add    al,0x4f
  425f03:	pusha  
  425f04:	(bad)  
  425f05:	sti    
  425f06:	sbb    al,0xa4
  425f08:	pusha  
  425f09:	je     0x425f46
  425f0b:	inc    ecx
  425f0c:	imul   eax,DWORD PTR [edx-0x53da409c],0xa2060968
  425f16:	sub    ebx,0xc6778bf
  425f1c:	imul   ebp,DWORD PTR [edi-0x61],0xb2826798
  425f23:	cwde   
  425f24:	push   es
  425f25:	lds    ebx,FWORD PTR [eax-0x9]
  425f28:	test   BYTE PTR [edx-0x26cb7f34],ah
  425f2e:	sbb    ecx,ecx
  425f30:	adc    ch,dh
  425f32:	int    0xab
  425f34:	push   DWORD PTR [esi]
  425f36:	out    0xda,eax
  425f38:	xlat   BYTE PTR ds:[ebx]
  425f39:	rol    BYTE PTR [edi-0x28b7157a],cl
  425f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f40:	std    
  425f41:	je     0x425ed3
  425f43:	and    BYTE PTR [edx+0x432920aa],0xac
  425f4a:	pop    ss
  425f4b:	mov    ecx,0xd6fbf46f
  425f50:	jmp    0x848e7542
  425f55:	dec    eax
  425f56:	jge    0x425f9c
  425f58:	sbb    DWORD PTR [eax-0x46f31b20],ebp
  425f5e:	mov    ds:0x1a1939f1,eax
  425f63:	cmp    ah,cl
  425f65:	jae    0x425f63
  425f67:	lods   al,BYTE PTR ds:[esi]
  425f68:	xor    DWORD PTR [esi],0xf9301c00
  425f6e:	(bad)  
  425f6f:	(bad)  
  425f70:	sbb    al,0xe1
  425f72:	push   0xf61e1dff
  425f77:	sbb    bh,ah
  425f79:	out    0x55,al
  425f7b:	jg     0x425f40
  425f7d:	jbe    0x425fdc
  425f7f:	jge    0x425f41
  425f81:	jo     0x426001
  425f83:	pushaw 
  425f85:	add    eax,0xda4de8ba
  425f8a:	and    BYTE PTR [eax],dh
  425f8c:	jo     0x42600c
  425f8e:	or     DWORD PTR [ebx+0x2946c853],0x8
  425f95:	dec    eax
  425f96:	dec    esi
  425f97:	jnp    0x425f22
  425f99:	mov    bh,0xbc
  425f9b:	mov    eax,ds:0x914cd2c9
  425fa0:	jp     0x425f95
  425fa2:	pusha  
  425fa3:	test   DWORD PTR [edi+0x5a2b303b],ebx
  425fa9:	test   ch,cl
  425fab:	pushf  
  425fac:	(bad)  
  425fae:	pop    ebx
  425faf:	cmp    BYTE PTR [edi-0x35],cl
  425fb2:	stos   BYTE PTR es:[edi],al
  425fb3:	xchg   DWORD PTR [edx+0x50786459],ecx
  425fb9:	aas    
  425fba:	mov    BYTE PTR [edi-0x4b],ah
  425fbd:	add    al,BYTE PTR [eax-0x58]
  425fc0:	lds    eax,FWORD PTR [eax-0x36fd458b]
  425fc6:	pop    esi
  425fc7:	clc    
  425fc8:	and    eax,0x9d6ec4c8
  425fcd:	cmp    DWORD PTR [ebp-0x4e],edx
  425fd0:	push   ebx
  425fd1:	xchg   ebx,eax
  425fd2:	and    al,BYTE PTR ds:0x6691bd81
  425fd8:	popf   
  425fd9:	fisub  WORD PTR fs:[edx+0x51]
  425fdd:	mov    dh,0x7a
  425fdf:	stos   DWORD PTR es:[edi],eax
  425fe0:	fucomp st(7)
  425fe2:	and    al,0x90
  425fe4:	adc    bh,BYTE PTR ds:0xa944ab02
  425fea:	cmp    DWORD PTR [esi+0x4c0a45d5],0xffffff8a
  425ff1:	jl     0x425fe1
  425ff3:	arpl   WORD PTR [edx+0x34],dx
  425ff6:	sbb    BYTE PTR [eax+0x5a66bc72],dl
  425ffc:	shl    DWORD PTR [esp+eiz*8],cl
  425fff:	add    eax,0xfe3cdceb
  426004:	into   
  426005:	adc    al,0x23
  426007:	ret    0xe61
  42600a:	inc    edi
  42600b:	and    eax,0x910fef6a
  426010:	cli    
  426011:	scas   eax,DWORD PTR es:[edi]
  426012:	push   edi
  426013:	cs popf 
  426015:	daa    
	...
  426022:	mov    al,0x8a
  426024:	call   0xfa265aaa
  426029:	mov    ebx,0x99242062
  42602e:	cmp    DWORD PTR ds:0xd126b415,ecx
  426034:	add    DWORD PTR [eax],eax
  426036:	sub    al,0x3
  426038:	add    BYTE PTR [eax],al
  42603a:	xchg   edi,eax
  42603b:	pop    ecx
  42603c:	mov    edi,0xf41fc8bd
  426041:	jb     0x42607d
  426043:	hlt    
  426044:	(bad)  
  426045:	stc    
  426046:	mov    dl,ah
  426048:	jl     0x426075
  42604a:	inc    ebx
  42604b:	inc    esp
  42604c:	push   cs
  42604d:	es xor al,0x18
  426050:	jmp    0xd8d59936
  426055:	sar    BYTE PTR [esi],cl
  426057:	sbb    bl,BYTE PTR [ecx+0x43]
  42605a:	ss pushf 
  42605c:	mov    esi,0x6527d95d
  426061:	arpl   WORD PTR [edi-0x699a9b61],si
  426067:	push   edi
  426068:	outs   dx,DWORD PTR ds:[esi]
  426069:	int3   
  42606a:	mov    bh,0x67
  42606c:	fld    TBYTE PTR [edi-0x1a]
  42606f:	(bad)  
  426070:	js     0x426031
  426072:	mov    ah,0x61
  426074:	push   esp
  426075:	and    esp,ecx
  426077:	aas    
  426078:	cmp    BYTE PTR [ebx],bh
  42607a:	shr    BYTE PTR [edi+0x4c0823c4],1
  426080:	xchg   ebp,eax
  426081:	sub    DWORD PTR [esi],ecx
  426083:	or     al,0xb8
  426085:	xor    esp,DWORD PTR [edx+0x4e328b72]
  42608b:	dec    ecx
  42608c:	push   0xa0795f16
  426091:	loope  0x4260e3
  426093:	(bad)  
  426095:	dec    eax
  426096:	mov    eax,ds:0x8b6af3f3
  42609b:	fdivr  QWORD PTR [ebp+0x5dd3216f]
  4260a1:	hlt    
  4260a2:	pop    edi
  4260a3:	fwait
  4260a4:	push   ds
  4260a5:	or     eax,0x747f528a
  4260aa:	inc    edx
  4260ab:	inc    edx
  4260ac:	adc    eax,0x5ea9c7a8
  4260b1:	sbb    DWORD PTR [esi+0x634ba9de],0x4fb6d4f6
  4260bb:	dec    esi
  4260bc:	push   ds
  4260bd:	sahf   
  4260be:	push   esi
  4260bf:	mov    edx,0xb553b953
  4260c4:	jge    0x426105
  4260c6:	icebp  
  4260c7:	sti    
  4260c8:	push   0xffffffd4
  4260ca:	sbb    eax,0x44c18e64
  4260cf:	jmp    0xb5413275
  4260d4:	push   0xffffffe9
  4260d6:	retf   
  4260d7:	pusha  
  4260d8:	or     al,0x93
  4260da:	aas    
  4260db:	pop    ecx
  4260dc:	inc    esp
  4260dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260de:	pop    edi
  4260df:	sbb    eax,ebp
  4260e1:	jno    0x426084
  4260e3:	or     esp,DWORD PTR [esp+esi*2-0x4ea3e21b]
  4260ea:	pop    es
  4260eb:	outs   dx,DWORD PTR ds:[esi]
  4260ec:	rcr    BYTE PTR [ecx-0x73753c03],cl
  4260f2:	xchg   ecx,eax
  4260f3:	arpl   WORD PTR [ebp+0x0],bp
  4260f6:	sub    DWORD PTR [edx-0x51593c58],ecx
  4260fc:	jno    0x4260c0
  4260fe:	or     eax,0x8c6df0ef
  426103:	gs ins BYTE PTR es:[edi],dx
  426105:	adc    DWORD PTR [ebx],ebp
  426107:	mov    edi,0xdfa0e94
  42610c:	adc    edx,DWORD PTR ds:[edi+0x60f3588c]
  426113:	push   edi
  426114:	sbb    dh,ch
  426116:	xchg   edx,eax
  426117:	adc    al,0x31
  426119:	add    cl,cl
  42611b:	outs   dx,DWORD PTR ds:[esi]
  42611c:	sub    eax,0x5e778bbc
  426121:	or     DWORD PTR [eax-0x2c],eax
  426124:	and    al,0x4a
  426126:	fisub  DWORD PTR [ecx-0x1a]
  426129:	or     DWORD PTR [ecx],esp
  42612b:	or     ch,BYTE PTR [ebx]
  42612d:	push   0x3e9a0733
  426132:	dec    edx
  426133:	xor    DWORD PTR [ebp+0x1d],eax
  426136:	add    dh,BYTE PTR [ebx+0x59101114]
  42613c:	ret    
  42613d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42613e:	xchg   ebx,eax
  42613f:	push   esp
  426140:	lock addr16 fwait
  426143:	mov    al,0xdb
  426145:	clc    
  426146:	xchg   edi,eax
  426147:	pop    ds
  426148:	mov    ebx,0xe971075d
  42614d:	pushf  
  42614e:	mov    dl,0xc5
  426150:	or     eax,0xdfdbad83
  426155:	inc    ecx
  426156:	fadd   DWORD PTR [edx-0x5]
  426159:	aam    0x2e
  42615b:	inc    ebp
  42615c:	mov    ds,WORD PTR [edx-0x38]
  42615f:	test   bh,dl
  426161:	sbb    eax,0x3f9678a0
  426166:	or     eax,0x94f0faaf
  42616b:	outs   dx,DWORD PTR ds:[esi]
  42616c:	rcr    BYTE PTR [ebp+0x335b41e4],0x84
  426173:	pop    edi
  426174:	xor    esp,edi
  426176:	popf   
  426177:	add    ecx,DWORD PTR [esi]
  426179:	pop    edi
  42617a:	imul   ebx,ebp,0xffffffc5
  42617d:	mov    BYTE PTR [edx],dh
  42617f:	jp     0x4261bc
  426181:	inc    ebx
  426182:	in     eax,dx
  426183:	test   DWORD PTR [ecx-0xb724d46],edx
  426189:	jns    0x426179
  42618b:	loop   0x4261ab
  42618d:	and    al,0x5
  42618f:	add    bl,BYTE PTR [ecx]
  426191:	pop    ebp
  426192:	outs   dx,BYTE PTR ds:[esi]
  426193:	sbb    bl,BYTE PTR [ebp-0x4c]
  426196:	enter  0xd244,0x7a
  42619a:	mov    ecx,0xda2e5b9d
  42619f:	repz loopne 0x426167
  4261a2:	xchg   ebx,eax
  4261a3:	arpl   WORD PTR [eax-0x2f],bp
  4261a6:	rcr    DWORD PTR [edx+0x26c1e161],1
  4261ac:	or     DWORD PTR [eax],0xd5b53254
  4261b2:	dec    eax
  4261b3:	fbstp  TBYTE PTR [edi+edx*2]
  4261b6:	into   
  4261b7:	lock xchg ebp,edi
  4261ba:	push   edx
  4261bb:	lods   al,BYTE PTR ds:[esi]
  4261bc:	repnz fimul DWORD PTR [esi+esi*4-0x4b87dcdd]
  4261c4:	test   al,0x3e
  4261c6:	adc    eax,0xbccccdb8
  4261cb:	sub    edx,DWORD PTR [eax+0xc8ba744]
  4261d1:	add    eax,0x99ca4dec
  4261d6:	sti    
  4261d7:	hlt    
  4261d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261d9:	mov    ecx,0x84fb6dfc
  4261de:	call   0xb50f:0x783ec151
  4261e5:	xor    edi,edi
  4261e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261e8:	cmp    al,dl
  4261ea:	pop    esi
  4261eb:	enter  0x5ae0,0x84
  4261ef:	cwde   
  4261f0:	lods   al,BYTE PTR ds:[esi]
  4261f1:	(bad)  
  4261f3:	sbb    BYTE PTR [esi+0x4f],0x8
  4261f7:	xchg   edi,eax
  4261f8:	out    dx,eax
  4261f9:	push   cs
  4261fa:	push   es
  4261fb:	add    BYTE PTR [ebp+0x4c986e70],dh
  426201:	in     eax,0x8c
  426203:	outs   dx,DWORD PTR ds:[esi]
  426204:	addr16 loope 0x4261d8
  426207:	hlt    
  426208:	mov    ecx,0x5eb8741d
  42620d:	mov    al,ds:0x91e05ab9
  426212:	fs daa 
  426214:	loop   0x426229
  426216:	push   ss
  426217:	sar    BYTE PTR [ebx-0x33],cl
  42621a:	jne    0x426254
  42621c:	inc    ebx
  42621d:	inc    edx
  42621e:	jbe    0x426296
  426220:	jbe    0x426225
  426222:	je     0x426292
  426224:	pop    eax
  426225:	imul   esi,edi,0xe6604d9
  42622b:	jbe    0x426288
  42622d:	fcom   DWORD PTR [eax]
  42622f:	pop    edx
  426230:	mov    al,0x9a
  426232:	mov    esp,esi
  426234:	shl    DWORD PTR [eax-0x62],0x3c
  426238:	push   ds
  426239:	push   0xffffffda
  42623b:	xor    eax,DWORD PTR [edx+eax*2-0x55dd450d]
  426242:	sti    
  426243:	jnp    0x42623e
  426245:	shl    bh,1
  426247:	(bad)  
  426248:	or     al,BYTE PTR [edi-0x2b]
  42624b:	mov    esi,0xf49ee7f8
  426250:	push   edi
  426251:	sbb    BYTE PTR [edi+0x3d],ch
  426254:	pop    ss
  426255:	gs call 0x56526d93
  42625b:	out    dx,eax
  42625c:	add    DWORD PTR [edx],eax
  42625e:	adc    ch,BYTE PTR [edx-0x7c1580ef]
  426264:	xlat   BYTE PTR ds:[ebx]
  426265:	(bad)  
  426266:	ss cmp eax,0xf1552ba7
  42626c:	data16 and BYTE PTR [ebx+0x52ca4401],0xad
  426274:	in     al,0xe
  426276:	jp     0x426240
  426278:	add    BYTE PTR [edi-0x773edb5f],cl
  42627e:	jbe    0x426225
  426280:	loopne 0x426230
  426282:	add    dl,ch
  426284:	jnp    0x426216
  426286:	int3   
  426287:	call   0xd333a38c
  42628c:	stos   BYTE PTR es:[edi],al
  42628d:	add    bl,bh
  42628f:	dec    ebp
  426290:	adc    BYTE PTR [eax],dl
  426292:	es mov ebp,0x26c32e91
  426298:	jbe    0x4262eb
  42629a:	mov    esi,0x540b477e
  42629f:	inc    ebp
  4262a0:	ins    BYTE PTR es:[edi],dx
  4262a1:	shl    DWORD PTR [edi],1
  4262a3:	popa   
  4262a4:	push   ss
  4262a5:	cmp    BYTE PTR [ecx+0x66],ch
  4262a8:	aam    0x4c
  4262aa:	jmp    0x917711d7
  4262af:	add    al,0x31
  4262b1:	push   ecx
  4262b2:	push   0x1a
  4262b4:	inc    ebx
  4262b5:	popa   
  4262b6:	jge    0x42628f
  4262b8:	xchg   BYTE PTR [esi],dh
  4262ba:	dec    ebp
  4262bb:	mov    DWORD PTR [edx+ebx*1],esp
  4262be:	sub    eax,0x42c9998d
  4262c3:	sti    
  4262c4:	mov    ?,WORD PTR [ebx+0x34]
  4262c7:	repnz fisttp QWORD PTR [ebx-0x2adc41a5]
  4262ce:	je     0x4262e6
  4262d0:	mov    al,ds:0xe9b39346
  4262d5:	cmc    
  4262d6:	fst    QWORD PTR [eax+0x178d1df5]
  4262dc:	xor    edx,DWORD PTR [ecx]
  4262de:	dec    esi
  4262df:	push   ss
  4262e0:	out    dx,eax
  4262e1:	ds push eax
  4262e3:	shr    BYTE PTR [esi-0x6280c71e],cl
  4262e9:	sbb    al,0x94
  4262eb:	xchg   DWORD PTR [edx-0xf],ecx
  4262ee:	mov    esp,0x107108f3
  4262f3:	sub    DWORD PTR [ecx],ecx
  4262f5:	xor    al,0x63
  4262f7:	enter  0xbe95,0xdc
  4262fb:	cwde   
  4262fc:	cmp    esi,DWORD PTR [ebx-0x33]
  4262ff:	lahf   
  426300:	(bad)  
  426301:	push   eax
  426302:	sbb    eax,0xec617ea6
  426307:	inc    eax
  426308:	jmp    0xcca7:0x3f387ecc
  42630f:	outs   dx,DWORD PTR ds:[esi]
  426310:	push   0x7d
  426312:	xchg   esp,eax
  426313:	popa   
  426314:	and    esi,ebp
  426316:	retf   0x13d1
  426319:	outs   dx,BYTE PTR ds:[esi]
  42631a:	js     0x42638f
  42631c:	add    BYTE PTR [edx-0x6d],0x26
  426320:	mov    edx,0x67e15b16
  426325:	dec    eax
  426326:	push   0x17
  426328:	gs dec ebx
  42632a:	jmp    0x222bc005
  42632f:	push   0x20
  426331:	out    0x6,eax
  426333:	inc    esi
  426334:	cmp    al,0x18
  426336:	in     al,dx
  426337:	push   esi
  426338:	gs (bad) 
  42633a:	in     eax,dx
  42633b:	outs   dx,BYTE PTR ds:[esi]
  42633c:	iret   
  42633d:	imul   eax,DWORD PTR [esi+0x1ac5bd73],0x3a
  426344:	pop    edi
  426345:	gs push ss
  426347:	cmp    DWORD PTR [eax],edi
  426349:	adc    ah,cl
  42634b:	pop    ds
  42634c:	lock adc eax,0xf0b5c866
  426352:	ror    DWORD PTR [ecx+0x2deef437],1
  426358:	dec    ebp
  426359:	imul   esi,DWORD PTR [edx+0x3341a6b8],0x643535d0
  426363:	mov    ebx,0x69d6
	...
  426370:	add    BYTE PTR [eax],al
  426372:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  426379:	fsubr  st(7),st
  42637b:	sub    DWORD PTR [ecx],0xffffff8c
  42637e:	push   esp
  42637f:	push   edi
  426380:	xlat   BYTE PTR ds:[ebx]
  426381:	xlat   BYTE PTR ds:[ebx]
  426382:	push   edx
  426383:	aam    0x1
  426385:	add    BYTE PTR [ebx+eax*1],ch
  426388:	add    BYTE PTR [eax],al
  42638a:	mov    al,BYTE PTR [ecx]
  42638c:	sar    BYTE PTR [ecx],0x5f
  42638f:	fiadd  WORD PTR [ecx-0x42ec2e64]
  426395:	cld    
  426396:	retf   
  426397:	out    0x91,al
  426399:	pop    ebx
  42639a:	lea    esi,[edx+ebx*4+0x2c26e44c]
  4263a1:	bound  ecx,QWORD PTR [ebx]
  4263a3:	stc    
  4263a4:	or     eax,0xdfda9dcc
  4263a9:	imul   DWORD PTR [edx]
  4263ab:	fwait
  4263ac:	xor    DWORD PTR [ebx],0xfffffff7
  4263af:	test   eax,0x17c00f39
  4263b4:	ins    DWORD PTR es:[edi],dx
  4263b5:	ret    0x2d11
  4263b8:	push   ss
  4263b9:	rcl    dl,0xfc
  4263bc:	push   edx
  4263bd:	int3   
  4263be:	xchg   ecx,eax
  4263bf:	shl    DWORD PTR ds:0xc7714289,0xf7
  4263c6:	int    0xb2
  4263c8:	jmp    0xaa39:0xca7a84a5
  4263cf:	mov    al,ds:0xa456dc1a
  4263d4:	sar    DWORD PTR [esi-0x5a720df8],0x1d
  4263db:	xchg   ebx,eax
  4263dc:	jp     0x426373
  4263de:	rcl    ecx,0x8a
  4263e1:	push   0x4d3ff355
  4263e6:	sbb    al,0xfe
  4263e8:	inc    edx
  4263e9:	in     al,dx
  4263ea:	and    cl,BYTE PTR [ebx]
  4263ec:	adc    BYTE PTR [ebp+0x65],dh
  4263ef:	pop    esi
  4263f0:	jno    0x426390
  4263f2:	push   ss
  4263f3:	push   edx
  4263f4:	mov    bl,0x7c
  4263f6:	stos   DWORD PTR es:[edi],eax
  4263f7:	xlat   BYTE PTR ds:[ebx]
  4263f8:	std    
  4263f9:	cmp    BYTE PTR [ecx],al
  4263fb:	jecxz  0x4263d4
  4263fd:	je     0x42639f
  4263ff:	retf   
  426400:	or     bl,BYTE PTR [esi+0x21023bbc]
  426406:	cli    
  426407:	sti    
  426408:	lahf   
  426409:	fiadd  WORD PTR ds:0x105ac704
  42640f:	clc    
  426410:	mov    ch,0x79
  426412:	mov    al,ds:0xc3c90eaa
  426417:	xlat   BYTE PTR ds:[ebx]
  426418:	fild   WORD PTR [edx+0x79190e9c]
  42641e:	sub    al,0x9
  426420:	fisub  DWORD PTR [ecx+0x205a090]
  426426:	jns    0x4263af
  426428:	push   esp
  426429:	mov    DWORD PTR [ecx+edx*8+0x6d],ebp
  42642d:	leave  
  42642e:	lock popf 
  426430:	mov    ebp,0x18d3f39c
  426435:	jl     0x426433
  426437:	mov    dh,BYTE PTR [esp+esi*2]
  42643a:	fistp  DWORD PTR [eax-0x713377e4]
  426440:	inc    edi
  426441:	pop    edx
  426442:	bound  ebx,QWORD PTR [edx+edi*1-0x7105c8ef]
  426449:	shr    BYTE PTR [edx+0x4d01b88a],1
  42644f:	jmp    0x5d027619
  426454:	jo     0x42646c
  426456:	outs   dx,BYTE PTR ds:[esi]
  426457:	ror    BYTE PTR [ebp-0x60],cl
  42645a:	pop    ss
  42645b:	and    BYTE PTR [ebx+0x68071bf7],0x2f
  426462:	jbe    0x426454
  426464:	ins    BYTE PTR es:[edi],dx
  426465:	push   eax
  426466:	sbb    eax,0x2fd28abc
  42646b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42646c:	cli    
  42646d:	ins    DWORD PTR es:[edi],dx
  42646e:	fneni(8087 only) 
  426470:	je     0x4264a9
  426472:	shl    BYTE PTR [edi*8+0x4b9f8b60],1
  426479:	and    DWORD PTR [ebx],edi
  42647b:	mov    ah,0x5d
  42647d:	mov    al,ds:0x41ce5a8b
  426482:	xchg   esp,eax
  426483:	adc    BYTE PTR [ebx+0x52],dl
  426486:	xchg   edi,eax
  426487:	mov    ch,0xa3
  426489:	repz add ah,cl
  42648c:	das    
  42648d:	jae    0x4264be
  42648f:	dec    edi
  426490:	jmp    0x426458
  426492:	xchg   ebp,eax
  426493:	addr16 mov ch,0xe7
  426496:	inc    esi
  426497:	rcl    BYTE PTR [edi],1
  426499:	shr    ah,cl
  42649b:	jb     0x4264bb
  42649d:	jo     0x426451
  42649f:	imul   esp,DWORD PTR [ebx+0x1c],0xc7aeef8a
  4264a6:	or     BYTE PTR [eax],dl
  4264a8:	inc    esi
  4264a9:	mov    cl,0xc1
  4264ab:	out    dx,al
  4264ac:	pop    es
  4264ad:	xlat   BYTE PTR ds:[ebx]
  4264ae:	(bad)  
  4264b0:	sbb    al,0xe3
  4264b2:	loope  0x4264c1
  4264b4:	pop    ds
  4264b5:	fcom   QWORD PTR [edx+eax*1-0x1c]
  4264b9:	mov    ah,0xf9
  4264bb:	rcl    BYTE PTR [eax+0x764a419d],1
  4264c1:	and    al,bl
  4264c3:	xchg   edx,eax
  4264c4:	add    eax,0xf81bb6e1
  4264c9:	retf   
  4264ca:	cld    
  4264cb:	jo     0x4264f7
  4264cd:	aas    
  4264ce:	jge    0x426540
  4264d0:	ja     0x42652f
  4264d2:	mov    edx,0x545095ac
  4264d7:	arpl   WORD PTR [edx-0x42],sp
  4264da:	xor    DWORD PTR [esi],esp
  4264dc:	loop   0x42651c
  4264de:	jo     0x4264d9
  4264e0:	clc    
  4264e1:	add    BYTE PTR [ebp+0x67],0x20
  4264e5:	in     al,dx
  4264e6:	push   ecx
  4264e7:	mov    esp,0x591d56b4
  4264ec:	adc    bh,BYTE PTR [ebp-0x2a8938dc]
  4264f2:	mov    bh,0x60
  4264f4:	cmp    DWORD PTR [ecx],eax
  4264f6:	push   ecx
  4264f7:	fstp   TBYTE PTR [eax+0x1b]
  4264fa:	repnz outs dx,BYTE PTR ds:[esi]
  4264fc:	pop    eax
  4264fd:	adc    BYTE PTR [edx+0x9],0x9b
  426501:	dec    eax
  426502:	mov    DWORD PTR [ebp+0x15fe05f5],esp
  426508:	outs   dx,DWORD PTR ds:[esi]
  426509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42650a:	and    dh,BYTE PTR [ebx]
  42650c:	lds    ebp,FWORD PTR [ebx-0x63]
  42650f:	ins    DWORD PTR es:[edi],dx
  426510:	pop    es
  426511:	adc    bl,0xc4
  426514:	dec    eax
  426515:	je     0x4264db
  426517:	ret    0xfcdb
  42651a:	xchg   DWORD PTR [esi+edx*8],ebp
  42651d:	cdq    
  42651e:	adc    al,0x6c
  426520:	into   
  426521:	comiss xmm1,xmm7
  426524:	scas   eax,DWORD PTR es:[edi]
  426525:	shl    ch,cl
  426527:	ins    DWORD PTR es:[edi],dx
  426528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426529:	xchg   ecx,eax
  42652a:	push   es
  42652b:	mov    gs,WORD PTR [edx-0x6ce5e1fb]
  426531:	loopne 0x4264f6
  426533:	sar    ah,cl
  426535:	imul   ecx,DWORD PTR [esp+ebx*8+0x41],0x6e28ec74
  42653d:	cli    
  42653e:	jge    0x426556
  426540:	daa    
  426541:	out    dx,eax
  426542:	inc    eax
  426543:	sub    ah,BYTE PTR [ebp+eiz*4+0x1f]
  426547:	cmc    
  426548:	ins    DWORD PTR es:[edi],dx
  426549:	jb     0x4264f5
  42654b:	xor    dl,ah
  42654d:	add    al,0x47
  42654f:	cmp    cl,BYTE PTR [ecx-0x17]
  426552:	aas    
  426553:	hlt    
  426554:	stos   BYTE PTR es:[edi],al
  426555:	push   ecx
  426556:	lock mov ax,0x4aa2
  42655b:	pop    ebx
  42655c:	xlat   BYTE PTR ds:[ebx]
  42655d:	mov    bl,0x9f
  42655f:	out    0xb2,al
  426561:	pop    ss
  426562:	pop    eax
  426563:	fnstcw WORD PTR [ebx+0x30]
  426566:	push   esp
  426567:	push   cs
  426568:	clc    
  426569:	adc    bh,BYTE PTR [edx]
  42656b:	mov    esp,0xe649def8
  426570:	pusha  
  426571:	cmp    al,0x46
  426573:	nop
  426574:	mov    ds:0x3e578f90,al
  426579:	mov    dh,0x2c
  42657b:	xchg   edx,eax
  42657c:	sar    DWORD PTR [esi+0x6f6427c8],0x4
  426583:	add    BYTE PTR [edx+0x372ce042],0xd
  42658a:	sub    edx,DWORD PTR [eax+0x37ab0115]
  426590:	arpl   WORD PTR [ebx+0xc02cd7c],cx
  426596:	out    dx,eax
  426597:	cmp    BYTE PTR [edi],0xa0
  42659a:	cmp    al,0x92
  42659c:	jg     0x42653a
  42659e:	(bad)  
  42659f:	sar    bl,cl
  4265a1:	xor    eax,0x7320335d
  4265a6:	mov    WORD PTR [ebp-0x4a],ds
  4265a9:	jnp    0x4265c4
  4265ab:	sub    DWORD PTR [ebx],0xfffffffd
  4265ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265af:	mov    al,0xc5
  4265b1:	xchg   ecx,eax
  4265b2:	ffree  st(3)
  4265b4:	test   ebp,ecx
  4265b6:	jns    0x4265ea
  4265b8:	jmp    0x2990fa9d
  4265bd:	mov    ah,BYTE PTR ds:0x9e1b52d6
  4265c3:	push   es
  4265c4:	pop    edx
  4265c5:	clc    
  4265c6:	in     al,dx
  4265c7:	jb     0x426553
  4265c9:	xchg   BYTE PTR gs:[edx-0x3a87a425],cl
  4265d0:	xor    eax,0xdca749f4
  4265d5:	adc    ah,bl
  4265d7:	popa   
  4265d8:	adc    ch,ah
  4265da:	jae    0x42663a
  4265dc:	sbb    BYTE PTR [ecx-0x597bccff],dh
  4265e2:	fwait
  4265e3:	cmp    esp,esi
  4265e5:	mov    DWORD PTR [edx-0x80],esi
  4265e8:	push   ebx
  4265e9:	xchg   edx,eax
  4265ea:	loope  0x42665a
  4265ec:	jp     0x4265e9
  4265ee:	add    DWORD PTR [eax-0x3d],0x5288274e
  4265f5:	call   DWORD PTR [esi]
  4265f7:	mov    edx,0x83be44cc
  4265fc:	mov    BYTE PTR [ecx-0x528b13ac],cl
  426602:	sbb    al,ch
  426604:	dec    edi
  426605:	(bad)  [eax]
  426607:	test   BYTE PTR ds:0x43dd3c0e,al
  42660d:	(bad)  
  42660e:	(bad)  
  426611:	ror    BYTE PTR [ebx],0xa3
  426614:	inc    ecx
  426615:	add    esi,DWORD PTR [esi+ecx*2+0x71]
  426619:	ss and eax,0x926c45b7
  42661f:	push   ss
  426620:	aaa    
  426621:	xchg   edx,eax
  426622:	jmp    0x749fe2a7
  426627:	mov    WORD PTR [ebx-0x7b],cs
  42662a:	mov    ch,0x79
  42662c:	dec    ecx
  42662d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42662e:	mov    dh,0xf4
  426630:	in     al,dx
  426631:	in     al,dx
  426632:	adc    ecx,DWORD PTR ds:0x9ee06651
  426638:	cwde   
  426639:	cmp    edi,eax
  42663b:	js     0x426672
  42663d:	sahf   
  42663e:	and    al,0xe6
  426640:	mov    al,0xa9
  426642:	inc    ebx
  426643:	(bad)  
  426645:	stos   DWORD PTR es:[edi],eax
  426646:	pop    ds
  426647:	mov    cl,0x2a
  426649:	mov    al,ds:0x566094ea
  42664e:	mov    ebp,0x9b121bef
  426653:	inc    eax
  426654:	in     al,0xce
  426656:	cmp    eax,0x7034a707
  42665b:	enter  0xb2e4,0x46
  42665f:	js     0x4266cd
  426661:	jne    0x4266d6
  426663:	sbb    eax,0x2d417e2e
  426668:	or     edx,DWORD PTR [eax+0x17]
  42666b:	dec    eax
  42666c:	mov    al,0x64
  42666e:	fst    DWORD PTR [edx]
  426670:	outs   dx,BYTE PTR ds:[esi]
  426671:	xor    DWORD PTR [edi],ebx
  426673:	push   eax
  426674:	not    dl
  426676:	mov    dl,0xfb
  426678:	fcmovne st,st(1)
  42667a:	jge    0x426604
  42667c:	sar    BYTE PTR [ecx],0xb8
  42667f:	or     al,0xff
  426681:	dec    esi
  426682:	and    eax,0x75b09f67
  426687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426688:	sbb    eax,0x44248c28
  42668d:	xchg   esi,eax
  42668e:	mov    esi,esi
  426690:	xlat   BYTE PTR ds:[ebx]
  426691:	push   ss
  426692:	xor    al,0x4e
  426694:	retf   
  426695:	dec    edi
  426696:	loop   0x426668
  426698:	ss or  eax,0x1916ee0b
  42669e:	retf   
  42669f:	xor    ch,BYTE PTR [eax+0x43d07fe]
  4266a5:	into   
  4266a6:	repnz pop edi
  4266a8:	dec    ebp
  4266a9:	pop    esi
  4266aa:	lods   eax,DWORD PTR ds:[esi]
  4266ab:	loop   0x42665e
  4266ad:	xchg   DWORD PTR [edi],esi
  4266af:	(bad)  
  4266b0:	or     eax,0x6d64c907
  4266b5:	mov    ch,0x0
	...
  4266bf:	add    BYTE PTR [eax],al
  4266c1:	add    BYTE PTR [eax-0x56],al
  4266c4:	pop    edx
  4266c5:	sbb    bh,dl
  4266c7:	cli    
  4266c8:	inc    eax
  4266c9:	cli    
  4266ca:	outs   dx,BYTE PTR ds:[esi]
  4266cb:	jmp    0xb05c:0xc893e400
  4266d2:	jle    0x4266ab
  4266d4:	add    DWORD PTR [eax],eax
  4266d6:	sub    al,0x3
  4266d8:	add    BYTE PTR [eax],al
  4266da:	div    BYTE PTR [eax-0x33]
  4266dd:	mov    bh,0x4b
  4266df:	xchg   edx,eax
  4266e0:	pop    ebp
  4266e1:	push   eax
  4266e2:	mov    dl,BYTE PTR [esi]
  4266e4:	bound  eax,QWORD PTR [edi+0x11]
  4266e7:	xlat   BYTE PTR ds:[ebx]
  4266e8:	aad    0xbe
  4266ea:	mov    ah,0xbd
  4266ec:	icebp  
  4266ed:	hlt    
  4266ee:	das    
  4266ef:	nop    DWORD PTR [edx+0x657af8eb]
  4266f6:	mov    bh,0xef
  4266f8:	push   edi
  4266f9:	sbb    BYTE PTR [eax-0x5bb19c93],0x9b
  426700:	es loopne 0x42668a
  426703:	fadd   DWORD PTR [edx+0x2c]
  426706:	(bad)  
  426707:	ret    0x311b
  42670a:	adc    eax,0x9490928d
  42670f:	nop
  426710:	in     al,dx
  426711:	retf   0xb475
  426714:	cwde   
  426715:	loope  0x426734
  426717:	mov    ebp,0x7e64eba4
  42671c:	lock xchg esi,eax
  42671e:	jno    0x42672a
  426720:	dec    DWORD PTR fs:[eax]
  426723:	dec    ecx
  426724:	inc    ecx
  426725:	or     edx,ebp
  426727:	adc    al,BYTE PTR [esi+0x65]
  42672a:	test   eax,0x79563e4
  42672f:	ret    0x1d57
  426732:	push   0xfffffff2
  426734:	test   eax,0xeaf4323a
  426739:	inc    edx
  42673a:	jp     0x426732
  42673c:	mov    ebp,0xdd7f2a25
  426741:	push   ss
  426742:	(bad)  
  426744:	mov    bh,BYTE PTR [ebp-0x27]
  426747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426748:	add    al,0x78
  42674a:	pop    eax
  42674b:	out    0xd5,eax
  42674d:	sbb    DWORD PTR [edi-0x79b7c04c],0x30716723
  426757:	inc    edx
  426758:	loop   0x426774
  42675a:	add    ah,BYTE PTR [edi+0x12]
  42675d:	neg    DWORD PTR [esi+0x6a]
  426760:	xchg   edx,eax
  426761:	sbb    DWORD PTR [eax-0x6f],ecx
  426764:	rcr    esi,cl
  426766:	mov    DWORD PTR [edi],ebp
  426768:	mov    al,ah
  42676a:	xor    ch,BYTE PTR [ebx+0x2687d4f5]
  426770:	mov    ch,dh
  426772:	push   ds
  426773:	jle    0x4266f7
  426775:	adc    eax,0x349b08cc
  42677a:	xor    al,0x7
  42677c:	cli    
  42677d:	cs mov ebp,ebx
  426780:	xchg   DWORD PTR [edx+0x175661e4],ecx
  426786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426787:	mov    edx,DWORD PTR [edx+0x6b86adb0]
  42678d:	jg     0x42675b
  42678f:	and    ah,BYTE PTR [ecx]
  426791:	pop    esi
  426792:	push   edi
  426793:	out    dx,al
  426794:	and    BYTE PTR [ebx+0x39e73a7c],ah
  42679a:	fisttp QWORD PTR [edi-0x1654f152]
  4267a0:	xor    dl,BYTE PTR [edx-0x53cbe92e]
  4267a6:	js     0x426754
  4267a8:	mov    ds:0xfca7dbd8,eax
  4267ad:	ret    
  4267ae:	repnz mov ch,0x13
  4267b1:	(bad)  
  4267b2:	loop   0x4267c7
  4267b4:	and    ecx,ebp
  4267b6:	push   esp
  4267b7:	inc    edx
  4267b8:	mov    ebp,edi
  4267ba:	mov    ?,WORD PTR ds:0x1cab2601
  4267c0:	stos   DWORD PTR es:[edi],eax
  4267c1:	push   cs
  4267c2:	test   BYTE PTR [ecx+0x21444a4d],al
  4267c8:	xor    al,0xf7
  4267ca:	fmul   DWORD PTR [ebx-0x2697973d]
  4267d0:	stos   DWORD PTR es:[edi],eax
  4267d1:	std    
  4267d2:	or     ah,cl
  4267d4:	mov    ebx,0x2821c666
  4267d9:	xchg   ebx,eax
  4267da:	add    DWORD PTR [edi],ecx
  4267dc:	ss mov al,0x15
  4267df:	out    dx,al
  4267e0:	std    
  4267e1:	fdivr  DWORD PTR [edi]
  4267e3:	xor    al,0x29
  4267e5:	sbb    BYTE PTR [ecx-0x7b],dh
  4267e8:	call   0xbc3bda9c
  4267ed:	or     eax,0xca764a02
  4267f2:	lea    esp,[esi+0x2e]
  4267f5:	xchg   edx,eax
  4267f6:	(bad)  
  4267f7:	jecxz  0x4267cb
  4267f9:	jge    0x4267e2
  4267fb:	jbe    0x426873
  4267fd:	cmp    al,0x8
  426800:	loopne 0x426878
  426802:	jae    0x42681d
  426804:	fidivr DWORD PTR [ebp-0x5ffabc64]
  42680a:	inc    ebx
  42680b:	and    eax,0x65de95f7
  426810:	popa   
  426811:	mov    ch,0x86
  426813:	mov    al,0x2e
  426815:	xchg   ebp,eax
  426816:	ja     0x4267f4
  426818:	mov    al,ds:0x36859004
  42681d:	loope  0x4267d1
  42681f:	cmovae ecx,DWORD PTR [ebx+0xd]
  426823:	mov    al,ds:0x3a0e40d
  426828:	clc    
  426829:	xchg   BYTE PTR [ecx],al
  42682b:	sbb    DWORD PTR [esi-0xf],0xb3deae37
  426832:	xor    al,0xba
  426834:	(bad)  
  426835:	sbb    ah,bl
  426837:	repz arpl WORD PTR [eax-0x39],dx
  42683b:	cli    
  42683c:	add    bl,ah
  42683e:	pop    ss
  42683f:	push   0xee5bf3fe
  426844:	in     eax,0x22
  426846:	jne    0x4268bb
  426848:	jno    0x4268b7
  42684a:	rcl    DWORD PTR [ecx-0x26],1
  42684d:	xor    esi,DWORD PTR [eax-0x44]
  426850:	aas    
  426851:	outs   dx,BYTE PTR ds:[esi]
  426852:	scas   al,BYTE PTR es:[edi]
  426853:	ds pop ecx
  426855:	jno    0x426890
  426857:	sbb    ax,bx
  42685a:	arpl   WORD PTR ds:[edi],dx
  42685d:	jp     0x4267f5
  42685f:	les    esp,FWORD PTR ds:0xa9ee3d5d
  426865:	dec    ebx
  426866:	mov    edx,0x83513a05
  42686b:	lds    ecx,FWORD PTR [eax+0x42]
  42686e:	jecxz  0x4268cb
  426870:	adc    ecx,DWORD PTR [ebp-0x45]
  426873:	not    esp
  426875:	adc    al,0xb0
  426877:	inc    ebp
  426878:	jge    0x42681d
  42687a:	adc    ebx,DWORD PTR [eax-0x1f9bf57c]
  426880:	lahf   
  426881:	rcl    ch,1
  426883:	and    al,0x6c
  426885:	push   edi
  426886:	push   edi
  426887:	push   ebx
  426888:	fcomp  QWORD PTR [ecx-0x24d89604]
  42688e:	sub    eax,0xe7ec664f
  426893:	pop    esi
  426894:	jle    0x426859
  426896:	pop    ebx
  426897:	ss xchg ebx,eax
  426899:	sub    BYTE PTR [eax],bh
  42689b:	sub    al,0xf7
  42689d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42689e:	add    ch,BYTE PTR [ecx-0x39]
  4268a1:	sbb    edx,DWORD PTR [edi+ecx*1-0x2c]
  4268a5:	in     al,0xd3
  4268a7:	push   cs
  4268a8:	cmp    BYTE PTR [esi+0x7b],ch
  4268ab:	xor    ah,ch
  4268ad:	push   ds
  4268ae:	mov    ?,esi
  4268b0:	lods   al,BYTE PTR ds:[esi]
  4268b1:	sub    edi,DWORD PTR [edx]
  4268b3:	sbb    eax,0x561b7ded
  4268b8:	sbb    DWORD PTR [edx+0x24133975],0x4601d098
  4268c2:	push   ds
  4268c3:	and    BYTE PTR [ecx],dl
  4268c5:	push   esi
  4268c6:	aam    0xe3
  4268c8:	xchg   DWORD PTR [edi+0x652577e9],edi
  4268ce:	ror    DWORD PTR [eax+0x4b],0x1c
  4268d2:	cmp    esi,ebx
  4268d4:	jb     0x42686a
  4268d6:	xchg   esp,eax
  4268d7:	sahf   
  4268d8:	sub    DWORD PTR [esi-0x12],ecx
  4268db:	xchg   esp,eax
  4268dc:	adc    eax,0xcceaf7d2
  4268e1:	dec    esp
  4268e2:	pop    edi
  4268e3:	xchg   ebx,eax
  4268e4:	jbe    0x4268cf
  4268e6:	ds push 0x6bb2b0e5
  4268ec:	inc    esp
  4268ed:	std    
  4268ee:	mov    ds:0xf998a43d,eax
  4268f3:	mov    esi,0x86fc6efa
  4268f8:	std    
  4268f9:	out    0x50,eax
  4268fb:	push   eax
  4268fc:	daa    
  4268fd:	iret   
  4268fe:	pushf  
  4268ff:	cmp    bl,BYTE PTR [eax-0x45]
  426902:	icebp  
  426903:	adc    al,0x6b
  426905:	push   eax
  426906:	sub    eax,0x7e2157da
  42690b:	jae    0x4268bb
  42690d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42690e:	fdiv   QWORD PTR [eax+0x64]
  426911:	daa    
  426912:	out    0x1,al
  426914:	(bad)  
  426915:	into   
  426916:	out    0xec,al
  426918:	sbb    eax,DWORD PTR [edx-0x65261cb3]
  42691e:	rcl    ebp,cl
  426920:	cmp    al,0x8c
  426922:	fistp  WORD PTR [ecx+eax*8-0x689ac25f]
  426929:	inc    ecx
  42692a:	sti    
  42692b:	mov    ds:0xa1141710,al
  426930:	test   DWORD PTR [ebp+0x5c4b38ce],edx
  426936:	sbb    esi,DWORD PTR [esi]
  426938:	pop    edx
  426939:	mov    ch,0xb
  42693b:	mov    edi,0xf5979dda
  426940:	xor    eax,0x5575b781
  426945:	nop
  426946:	call   0x2313:0x6c4b571e
  42694d:	adc    bh,BYTE PTR [ecx]
  42694f:	imul   esi,DWORD PTR [edi+0x17],0x76e4c34
  426956:	inc    ebp
  426957:	xchg   ebp,eax
  426958:	out    dx,eax
  426959:	sbb    DWORD PTR [ebp-0x7d],esp
  42695c:	(bad)  
  42695e:	or     BYTE PTR [ecx+0x28],al
  426961:	fst    DWORD PTR [edx+0xa]
  426964:	aam    0x8a
  426966:	adc    dl,ah
  426968:	add    DWORD PTR [ecx],ebx
  42696a:	clc    
  42696b:	inc    esi
  42696c:	push   cs
  42696d:	dec    esi
  42696e:	stos   DWORD PTR es:[edi],eax
  42696f:	enter  0x5938,0x42
  426973:	dec    ecx
  426974:	push   edi
  426975:	ja     0x4269af
  426977:	mov    cl,0x3a
  426979:	int    0xb2
  42697b:	sub    esi,ecx
  42697d:	or     DWORD PTR [edx-0x4de475a5],esi
  426983:	arpl   WORD PTR [ecx-0x7e80ff78],di
  426989:	sbb    al,0xa4
  42698b:	call   0xfaa4867b
  426990:	aas    
  426991:	mov    ds:0xcd56d4ca,eax
  426996:	int    0x2d
  426998:	xlat   BYTE PTR ds:[ebx]
  426999:	pop    ebx
  42699a:	addr16 pop edx
  42699c:	arpl   WORD PTR [eax-0x14],si
  42699f:	imul   ebp,DWORD PTR [eax],0x96d50aa0
  4269a5:	push   edi
  4269a6:	jo     0x42698b
  4269a8:	mov    ebx,0x1b700666
  4269ad:	aas    
  4269ae:	sub    eax,0xc9a8424d
  4269b3:	call   0x550d:0xbb9f4c96
  4269ba:	stos   DWORD PTR es:[edi],eax
  4269bb:	shl    eax,1
  4269bd:	fs (bad) 
  4269c0:	ins    DWORD PTR es:[edi],dx
  4269c1:	call   0x3780c317
  4269c6:	push   ds
  4269c7:	cwde   
  4269c8:	(bad)  
  4269ca:	lds    ebx,FWORD PTR [eax]
  4269cc:	jno    0x426a4b
  4269ce:	cmp    eax,0x3d86d8a6
  4269d3:	fsubr  QWORD PTR ds:0x7c1a9840
  4269d9:	mov    al,0x1f
  4269db:	fidiv  DWORD PTR fs:[eax-0x65fe1485]
  4269e2:	lds    edi,FWORD PTR [ebx+0x4654a5fa]
  4269e8:	ret    
  4269e9:	xchg   edx,eax
  4269eb:	push   ss
  4269ec:	sti    
  4269ed:	mov    al,ds:0x6e394779
  4269f2:	pop    es
  4269f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269f4:	test   BYTE PTR [edx-0x55de5928],bl
  4269fa:	loop   0x426a01
  4269fc:	(bad)  
  4269fd:	mov    bl,0x93
  4269ff:	repnz dec ebx
  426a01:	aad    0xe7
  426a03:	xor    eax,0xf123
	...
  426a10:	add    BYTE PTR [eax],al
  426a12:	mov    dh,0xe4
  426a14:	xlat   BYTE PTR ds:[ebx]
  426a15:	push   esp
  426a16:	xlat   BYTE PTR ds:[ebx]
  426a17:	ja     0x4269d0
  426a19:	out    0xf3,al
  426a1b:	ss icebp 
  426a1d:	mov    esp,0x7c33c639
  426a22:	stos   BYTE PTR es:[edi],al
  426a23:	fiadd  DWORD PTR [ecx]
  426a25:	add    BYTE PTR [ebx+eax*1],ch
  426a28:	add    BYTE PTR [eax],al
  426a2a:	imul   eax,DWORD PTR [edi],0x2ce0cdc2
  426a30:	jle    0x426ab0
  426a32:	daa    
  426a33:	ja     0x4269ff
  426a35:	mov    edi,0x8f81788c
  426a3a:	and    eax,0xe64a7323
  426a3f:	push   edx
  426a40:	add    dh,dh
  426a42:	sbb    DWORD PTR [edx],eax
  426a44:	shr    DWORD PTR [esi+0x1d4f08df],1
  426a4a:	adc    ecx,DWORD PTR [ebx-0x18]
  426a4d:	push   cs
  426a4e:	and    BYTE PTR [ebp+0x593386a4],dh
  426a54:	dec    esi
  426a55:	and    DWORD PTR [ebp+ecx*8+0x74],ebp
  426a59:	test   eax,0x220caf93
  426a5e:	or     dl,BYTE PTR [eax+0x56]
  426a61:	ret    0xca08
  426a64:	pusha  
  426a65:	dec    esp
  426a66:	add    BYTE PTR [ecx-0x54d543e7],0x11
  426a6d:	pop    es
  426a6e:	pop    ecx
  426a6f:	adc    eax,0xcc1ef8d6
  426a74:	(bad)
  426a79:	mov    ch,BYTE PTR [eax-0x3a61ad59]
  426a7f:	mov    edi,0x644fd35f
  426a84:	xchg   esp,eax
  426a85:	cs aad 0x89
  426a88:	sbb    cl,BYTE PTR [edx]
  426a8a:	add    DWORD PTR [edi],esi
  426a8c:	push   edi
  426a8d:	(bad)  [ecx+0x3bdd1ebc]
  426a93:	scas   eax,DWORD PTR es:[edi]
  426a94:	daa    
  426a95:	fiadd  DWORD PTR [esi]
  426a97:	mov    ebp,eax
  426a99:	dec    ebp
  426a9a:	fsubr  st,st(0)
  426a9c:	inc    edi
  426a9d:	sub    BYTE PTR [edi-0x7d],0xf1
  426aa1:	sub    edi,DWORD PTR ds:0x16685458
  426aa7:	mov    dl,0x3f
  426aa9:	xor    BYTE PTR [eax-0x22],al
  426aac:	or     dh,al
  426aae:	push   esi
  426aaf:	lods   eax,DWORD PTR ds:[esi]
  426ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ab1:	mov    ds:0x476251,eax
  426ab6:	fsubr  st(0),st
  426ab8:	fdiv   DWORD PTR [ecx-0xf6da013]
  426abe:	(bad)  
  426abf:	mov    esi,0xb913c024
  426ac4:	inc    ebx
  426ac5:	lahf   
  426ac6:	add    eax,0x21d3bf22
  426acb:	(bad)  
  426acd:	add    ah,BYTE PTR [edi]
  426acf:	dec    esp
  426ad0:	xchg   edx,eax
  426ad1:	mov    ?,ebp
  426ad3:	popf   
  426ad4:	lahf   
  426ad5:	xchg   ebp,eax
  426ad6:	ins    BYTE PTR es:[edi],dx
  426ad7:	fst    QWORD PTR [ebp-0x6e5e9933]
  426add:	addr16 push esp
  426adf:	xchg   ebx,eax
  426ae0:	jg     0x426b55
  426ae2:	aas    
  426ae3:	xor    DWORD PTR [ecx-0x77f2b3b7],0xffffffe9
  426aea:	push   0x484d4928
  426aef:	jne    0x426acd
  426af1:	outs   dx,BYTE PTR ds:[esi]
  426af2:	jge    0x426b0e
  426af4:	cmp    ecx,eax
  426af6:	sub    eax,0x948deddd
  426afb:	into   
  426afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426afd:	sub    eax,0x88f1e153
  426b02:	(bad)  
  426b03:	push   ecx
  426b04:	js     0x426b18
  426b06:	shr    DWORD PTR [ebp+0x40d86019],1
  426b0c:	lock add bl,BYTE PTR [bx+di]
  426b10:	cld    
  426b11:	pop    ecx
  426b12:	or     edi,0x41fb80a8
  426b18:	pop    ecx
  426b19:	repnz xchg edx,eax
  426b1b:	lods   al,BYTE PTR ds:[esi]
  426b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b1d:	imul   esi,DWORD PTR [edx+ebp*1+0x51],0x4b
  426b22:	jnp    0x426afa
  426b24:	popa   
  426b25:	pop    es
  426b26:	add    cl,BYTE PTR [esi+esi*2+0x3df6d3f6]
  426b2d:	jecxz  0x426b16
  426b2f:	ins    BYTE PTR es:[edi],dx
  426b30:	push   eax
  426b31:	xchg   ecx,eax
  426b32:	ins    DWORD PTR es:[edi],dx
  426b33:	sub    DWORD PTR fs:[ecx-0x1d],0xffffff81
  426b38:	scas   eax,DWORD PTR es:[edi]
  426b39:	xlat   BYTE PTR ds:[ebx]
  426b3a:	ins    DWORD PTR es:[edi],dx
  426b3b:	add    cl,bl
  426b3d:	fmulp  st(0),st
  426b3f:	mov    ds:0x19d88d5a,eax
  426b44:	mov    esi,DWORD PTR [edx-0x58a29b95]
  426b4a:	sub    esi,0x38
  426b4d:	loope  0x426b1e
  426b4f:	(bad)  
  426b50:	(bad)  
  426b52:	imul   esp,edx,0x6b96e7a2
  426b58:	pop    ebp
  426b59:	mov    al,ds:0x4c9c1322
  426b5e:	test   ebp,esi
  426b60:	call   0xbe9b:0x610a5011
  426b67:	jae    0x426b7e
  426b69:	push   esi
  426b6a:	pop    eax
  426b6b:	mov    edx,0xc22cbc7b
  426b70:	push   esi
  426b71:	xor    al,0xbe
  426b73:	cli    
  426b74:	inc    edi
  426b75:	retf   0x6971
  426b78:	mov    esi,0xb3909269
  426b7d:	add    DWORD PTR [ebx+ecx*2-0x48],esi
  426b81:	scas   eax,DWORD PTR es:[edi]
  426b82:	add    DWORD PTR [edx],edx
  426b84:	mov    BYTE PTR [ecx+0x76],dl
  426b87:	xor    BYTE PTR [edi-0x66],0x50
  426b8b:	mov    ebx,0x7ed4557d
  426b90:	inc    ecx
  426b91:	and    DWORD PTR [edi-0x560f0fc4],esp
  426b97:	add    al,0x4b
  426b99:	jmp    0x426b82
  426b9b:	in     al,dx
  426b9c:	fist   WORD PTR [ebp-0x611073f2]
  426ba2:	int3   
  426ba3:	mov    ds,WORD PTR [esp+edx*1+0x69]
  426ba7:	into   
  426ba8:	cmp    DWORD PTR gs:[eax+ecx*2-0x7a2662a4],edx
  426bb0:	xchg   DWORD PTR [esi+0x33],edx
  426bb3:	mov    edi,0xecc60aa3
  426bb8:	aad    0xc
  426bba:	adc    al,0xa5
  426bbc:	repnz pusha 
  426bbe:	sbb    cl,BYTE PTR [edi]
  426bc0:	cwde   
  426bc1:	daa    
  426bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bc3:	cs lock mov bl,0x19
  426bc7:	int3   
  426bc8:	div    BYTE PTR [ecx]
  426bca:	jg     0x426bbb
  426bcc:	addr16 mov eax,ds:0xc71d
  426bd0:	scas   al,BYTE PTR es:[edi]
  426bd1:	sub    al,0x30
  426bd3:	arpl   WORD PTR [eax],bp
  426bd5:	lahf   
  426bd6:	and    al,0xdd
  426bd8:	or     eax,0x4b3fa5e1
  426bdd:	loope  0x426bb0
  426bdf:	popa   
  426be0:	fiadd  WORD PTR [edx]
  426be2:	sahf   
  426be3:	push   ebx
  426be4:	sti    
  426be5:	adc    ch,BYTE PTR [edi]
  426be7:	sub    al,BYTE PTR [edi]
  426be9:	mov    al,0x60
  426beb:	pusha  
  426bec:	cmp    dh,BYTE PTR [eax+0x1c173708]
  426bf2:	mov    DWORD PTR [ecx+0x60e8f1cd],eax
  426bf8:	ret    
  426bf9:	cmp    dl,ch
  426bfb:	sbb    bl,bh
  426bfd:	mov    ds:0x9da10bdd,eax
  426c02:	inc    BYTE PTR [eax]
  426c04:	jl     0x426c41
  426c06:	lock dec edx
  426c08:	jge    0x426c2c
  426c0a:	sbb    DWORD PTR [edx+edx*2+0x59],eax
  426c0e:	loope  0x426b92
  426c10:	call   0xf73c4032
  426c15:	fdiv   QWORD PTR ss:[ebx]
  426c18:	xor    ah,BYTE PTR [ebx-0x3cc54d95]
  426c1e:	mov    al,ds:0x8c7af75e
  426c23:	fwait
  426c24:	add    DWORD PTR [ebp+ecx*4+0x69],esi
  426c28:	dec    ebp
  426c29:	aas    
  426c2a:	pop    eax
  426c2b:	mov    al,ds:0xf737a8e8
  426c30:	add    esi,DWORD PTR [esi]
  426c32:	je     0x426bed
  426c34:	xor    DWORD PTR fs:[esi+0x1e],ebx
  426c38:	or     DWORD PTR [ecx-0x6fa003a],ebp
  426c3e:	xor    DWORD PTR cs:[ebp+0x6b],esp
  426c42:	xchg   ecx,eax
  426c43:	mov    esp,0x25d29659
  426c48:	clc    
  426c49:	imul   edx,ecx,0xffffffb3
  426c4c:	pop    es
  426c4d:	rcl    BYTE PTR [edi],0x9d
  426c50:	rol    BYTE PTR [esi+0x1879984c],1
  426c56:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  426c58:	sub    DWORD PTR [ecx],ebx
  426c5a:	jnp    0x426c60
  426c5c:	mov    edx,0xda19b3cd
  426c61:	ret    
  426c62:	dec    edi
  426c63:	xchg   esi,eax
  426c64:	out    dx,al
  426c65:	ins    BYTE PTR es:[edi],dx
  426c66:	and    eax,0xf282b188
  426c6b:	lock inc edi
  426c6d:	add    dl,al
  426c6f:	mov    eax,ds:0x4c398f33
  426c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c75:	adc    al,0x43
  426c77:	fbld   TBYTE PTR [esp+ecx*1]
  426c7a:	cli    
  426c7b:	mov    dl,0x48
  426c7d:	xor    eax,esp
  426c7f:	leave  
  426c80:	not    DWORD PTR [edx-0x3f]
  426c83:	mov    ebp,0x532bba04
  426c88:	lock je 0x426c84
  426c8b:	rcl    DWORD PTR [ecx+0x37],cl
  426c8e:	jo     0x426c5e
  426c90:	mov    eax,ds:0x853be6bd
  426c95:	stc    
  426c96:	clc    
  426c97:	cmp    BYTE PTR [edi-0x68],ah
  426c9a:	jmp    0x426ce5
  426c9c:	aas    
  426c9d:	test   edx,ecx
  426c9f:	ins    DWORD PTR es:[edi],dx
  426ca0:	push   ebx
  426ca1:	xlat   BYTE PTR ds:[ebx]
  426ca2:	bound  ecx,QWORD PTR [ebx]
  426ca4:	or     ch,ch
  426ca6:	stos   BYTE PTR es:[edi],al
  426ca7:	fnstsw WORD PTR [ecx]
  426ca9:	pusha  
  426caa:	adc    eax,0xccdd31f2
  426caf:	pop    ebp
  426cb0:	adc    esp,DWORD PTR [ebx]
  426cb2:	adc    al,0xaf
  426cb4:	fsub   st,st(4)
  426cb6:	ficom  DWORD PTR ds:0x93a1f3b
  426cbc:	xchg   edi,eax
  426cbd:	fst    QWORD PTR [edx-0x78]
  426cc0:	stos   DWORD PTR es:[edi],eax
  426cc1:	inc    esi
  426cc2:	push   edx
  426cc3:	lods   al,BYTE PTR ds:[esi]
  426cc4:	data16 dec dx
  426cc7:	sti    
  426cc8:	iret   
  426cc9:	repz inc edx
  426ccb:	in     eax,dx
  426ccc:	fsubr  DWORD PTR [esi-0x38f8b507]
  426cd2:	enter  0x96e8,0xd1
  426cd6:	mov    esi,0x8ccd63a3
  426cdb:	repz push 0x4c31a1d0
  426ce1:	jl     0x426d60
  426ce3:	lods   eax,DWORD PTR ds:[esi]
  426ce4:	imul   ecx,DWORD PTR [ebp-0x58],0xb
  426ce8:	mov    eax,0xd50cc603
  426ced:	mov    dl,0x42
  426cef:	out    dx,al
  426cf0:	call   0x7c0e41ad
  426cf5:	(bad)  
  426cf6:	cs hlt 
  426cf8:	sbb    cl,bh
  426cfa:	jmp    0xd804:0xa545341e
  426d01:	out    0x34,eax
  426d03:	cmp    ebp,DWORD PTR [ecx+0xd]
  426d06:	or     ebp,DWORD PTR [esi]
  426d08:	push   ebx
  426d09:	test   BYTE PTR [ebp+0x668ae015],cl
  426d0f:	shl    BYTE PTR [ebx],cl
  426d11:	sti    
  426d12:	xlat   BYTE PTR ds:[ebx]
  426d13:	sbb    al,0xb4
  426d15:	mov    ebp,edx
  426d17:	gs cdq 
  426d19:	nop
  426d1a:	(bad)  
  426d1b:	out    dx,eax
  426d1c:	xor    eax,0xd68d442f
  426d21:	retf   0x8d59
  426d24:	addr16 in eax,0xf9
  426d27:	pop    ds
  426d28:	dec    ebp
  426d29:	out    0xdc,al
  426d2b:	add    BYTE PTR [ecx+0x26],ah
  426d2e:	mov    dl,0xf1
  426d30:	adc    bl,BYTE PTR [esi+ebp*4-0x77]
  426d34:	je     0x426d71
  426d36:	xor    al,0xef
  426d38:	or     edx,DWORD PTR [esi+0x2f]
  426d3b:	ja     0x426d45
  426d3d:	jge    0xbbb9bb5f
  426d43:	(bad)  
  426d44:	scas   al,BYTE PTR es:[edi]
  426d45:	push   es
  426d46:	test   BYTE PTR [esi-0x4f3d8513],ah
  426d4c:	fbld   TBYTE PTR [edx*1-0x1b563ea8]
  426d53:	xor    DWORD PTR [eax],esp
  426d55:	pusha  
	...
  426d62:	cli    
  426d63:	rcl    DWORD PTR ds:0xfac73d07,cl
  426d69:	push   DWORD PTR ds:0x751c7bfe
  426d6f:	stos   DWORD PTR es:[edi],eax
  426d70:	xchg   ebp,eax
  426d71:	sbb    esi,edx
  426d73:	fld    QWORD PTR [ecx]
  426d75:	add    BYTE PTR [ebx+eax*1],ch
  426d78:	add    BYTE PTR [eax],al
  426d7a:	xchg   edi,eax
  426d7b:	adc    dl,BYTE PTR [ebx]
  426d7d:	mov    DWORD PTR [ecx-0x40],esi
  426d80:	das    
  426d81:	fidivr DWORD PTR [esi+0x39]
  426d84:	imul   ebx,DWORD PTR [ebx],0x60
  426d87:	adc    ebx,DWORD PTR [edi]
  426d89:	dec    edx
  426d8a:	stos   BYTE PTR es:[edi],al
  426d8b:	pop    ds
  426d8c:	dec    edi
  426d8d:	adc    BYTE PTR [ecx],bl
  426d8f:	stos   BYTE PTR es:[edi],al
  426d90:	mov    ecx,0x5644a0b0
  426d95:	pop    ebp
  426d96:	cmp    al,0x2d
  426d98:	imul   edi,DWORD PTR [ecx],0x78
  426d9b:	popf   
  426d9c:	adc    DWORD PTR [esi+0x46b19041],0xffffffb9
  426da3:	test   eax,0xcbd5943
  426da8:	push   edi
  426da9:	gs out 0x16,eax
  426dac:	out    0x6e,al
  426dae:	jmp    0x2f90:0x48b0d197
  426db5:	dec    edx
  426db6:	sahf   
  426db7:	lock or al,0x5
  426dba:	sub    al,ah
  426dbc:	(bad)  
  426dbd:	iret   
  426dbe:	pop    ebx
  426dbf:	and    al,0xab
  426dc1:	call   DWORD PTR [ebp-0x71587acd]
  426dc7:	jp     0x426e0f
  426dc9:	test   al,0xe7
  426dcb:	push   0xffffffe9
  426dcd:	mov    ds:0x25948e9f,eax
  426dd2:	push   ds
  426dd3:	ins    DWORD PTR es:[edi],dx
  426dd4:	inc    edx
  426dd5:	fcom   QWORD PTR [esi]
  426dd7:	loopne 0x426dcb
  426dd9:	in     al,0x68
  426ddb:	mov    ebx,0xad9121ba
  426de0:	push   0x1
  426de2:	loope  0x426dbf
  426de4:	sub    eax,0x8c2d6788
  426de9:	fmul   DWORD PTR ds:0x3d85c021
  426def:	fwait
  426df0:	dec    ebp
  426df1:	ret    0x777e
  426df4:	call   0x6fad1fe0
  426df9:	retf   
  426dfa:	pop    ss
  426dfb:	push   esp
  426dfc:	iret   
  426dfd:	sbb    eax,0x50fa3822
  426e02:	das    
  426e03:	cdq    
  426e04:	sbb    DWORD PTR [ebp+0x3add0a0b],edi
  426e0a:	pop    es
  426e0b:	scas   eax,DWORD PTR es:[edi]
  426e0c:	xor    ah,dl
  426e0e:	mov    al,0x6e
  426e10:	mov    cl,0xa7
  426e12:	daa    
  426e13:	loop   0x426d99
  426e15:	nop
  426e16:	sbb    esp,eax
  426e18:	retf   
  426e19:	in     al,dx
  426e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e1b:	ret    0xcd30
  426e1e:	jp     0x426ddf
  426e20:	aas    
  426e21:	jo     0x426e9f
  426e23:	jno    0x426e20
  426e25:	mov    edx,0xd0c44882
  426e2a:	sub    bl,cl
  426e2c:	or     ecx,DWORD PTR [ebx+0xb]
  426e2f:	imul   edx,DWORD PTR [ebp-0x73],0x26
  426e33:	jge    0x426e36
  426e35:	je     0x426e3a
  426e37:	cmp    ch,BYTE PTR [edi]
  426e39:	and    eax,0x2d0b5a8d
  426e3e:	in     eax,dx
  426e3f:	xor    edi,DWORD PTR [eax-0xadd9c2d]
  426e45:	mov    edi,0x7f010ca8
  426e4a:	test   DWORD PTR [ebp-0x79],ecx
  426e4d:	mov    dl,0x72
  426e4f:	pop    edx
  426e50:	sbb    eax,0x4a031b28
  426e55:	scas   eax,DWORD PTR es:[edi]
  426e56:	js     0x426e03
  426e58:	iret   
  426e59:	xchg   ebp,eax
  426e5a:	ret    0x3a65
  426e5d:	fcom   QWORD PTR [esi+0x13]
  426e60:	or     DWORD PTR [ecx+0x71],ebx
  426e63:	or     esp,esi
  426e65:	(bad)  
  426e66:	pop    esp
  426e67:	xchg   esi,eax
  426e68:	addr16 ja 0x426e91
  426e6b:	(bad)  
  426e6c:	mov    eax,ds:0x5d2f04fc
  426e71:	jae    0x426e80
  426e73:	mov    ds:0x156ff5ec,al
  426e78:	sbb    eax,0xc43b9621
  426e7d:	and    BYTE PTR [edi],al
  426e7f:	bnd jp 0x426e31
  426e82:	lods   al,BYTE PTR ds:[esi]
  426e83:	or     dl,BYTE PTR [esi+esi*1+0x7ca1b793]
  426e8a:	xchg   BYTE PTR [edi+0x61],bl
  426e8d:	data16 data16 in al,dx
  426e90:	xor    dh,dl
  426e92:	mov    ds:0x9abb7d17,eax
  426e97:	push   esp
  426e98:	sbb    BYTE PTR [ebp+0x37e8754c],bl
  426e9e:	xchg   esi,eax
  426e9f:	ins    DWORD PTR es:[edi],dx
  426ea0:	add    edx,ebp
  426ea2:	les    ebp,FWORD PTR [edi]
  426ea4:	mov    eax,DWORD PTR [eax+0x275c2415]
  426eaa:	pop    ds
  426eab:	(bad)  
  426eac:	out    dx,al
  426ead:	jp     0x426e6a
  426eaf:	daa    
  426eb0:	xor    al,0x80
  426eb2:	push   esi
  426eb3:	les    edi,FWORD PTR [ecx+0x74f2129d]
  426eb9:	xchg   eax,ebx
  426ebb:	and    BYTE PTR [esi-0x2b],cl
  426ebe:	std    
  426ebf:	ret    0xd80d
  426ec2:	inc    eax
  426ec3:	jmp    0x434d5781
  426ec8:	in     al,0xd
  426eca:	inc    eax
  426ecb:	xchg   ebx,eax
  426ecc:	ficomp DWORD PTR [edx+0x27807288]
  426ed2:	ret    0x9ca4
  426ed5:	int    0xd9
  426ed7:	mov    esp,0x32aa9190
  426edc:	pop    esp
  426edd:	lods   al,BYTE PTR ds:[esi]
  426ede:	adc    esp,DWORD PTR [eax+edi*4]
  426ee1:	pusha  
  426ee2:	xchg   ebx,ebp
  426ee4:	push   0xffffffc8
  426ee6:	test   DWORD PTR [edi+edi*1-0x29f2b30f],edi
  426eed:	jae    0x426e80
  426eef:	mov    cl,0xb3
  426ef1:	pop    ebp
  426ef2:	mov    dh,0xe4
  426ef4:	pusha  
  426ef5:	push   es
  426ef6:	cmp    BYTE PTR [eax],0x33
  426ef9:	xchg   esp,eax
  426efa:	push   cs
  426efb:	mov    esp,0xb09aa1a6
  426f00:	or     al,0x23
  426f02:	dec    edx
  426f03:	pushf  
  426f04:	test   esi,0x46754eed
  426f0a:	leave  
  426f0b:	mov    ds:0xacd33472,al
  426f10:	jmp    0x426e99
  426f12:	call   0x8fdbbfc3
  426f17:	in     eax,0x93
  426f19:	sbb    al,0x2a
  426f1b:	mov    cl,0x9d
  426f1d:	ja     0x426f28
  426f1f:	xchg   ebp,eax
  426f20:	mov    ch,0xae
  426f22:	sub    DWORD PTR [ebx],esi
  426f24:	out    dx,eax
  426f25:	(bad)  
  426f26:	jp     0x426f63
  426f28:	or     al,0x8d
  426f2a:	add    BYTE PTR [edx+0x6df4611c],bh
  426f30:	mov    al,ds:0xdd4dcf9e
  426f35:	and    ah,BYTE PTR [esi+0x20cb6747]
  426f3b:	repz xlat BYTE PTR ds:[ebx]
  426f3d:	jecxz  0x426f92
  426f3f:	nop
  426f40:	nop
  426f41:	cmp    BYTE PTR [ecx+0x30765c25],bh
  426f47:	ror    DWORD PTR [edi-0x2d],0x8c
  426f4b:	ins    BYTE PTR es:[edi],dx
  426f4c:	js     0x426f7c
  426f4e:	data16 jo 0x426ed9
  426f51:	outs   dx,DWORD PTR ds:[esi]
  426f52:	in     al,0xdb
  426f54:	push   ds
  426f55:	(bad)  
  426f56:	xor    ch,BYTE PTR [esp+eiz*4]
  426f59:	or     al,0xb1
  426f5b:	fistp  DWORD PTR [eax-0x713d642b]
  426f61:	test   DWORD PTR [ecx+0x2a],esi
  426f64:	sub    dl,ah
  426f66:	jnp    0x426fd0
  426f68:	xchg   DWORD PTR [edx-0x558188ec],esi
  426f6e:	mov    edx,?
  426f70:	in     eax,dx
  426f71:	push   ss
  426f72:	sub    BYTE PTR [esi+0xa9df21f],ch
  426f78:	mov    ebp,0x5c6334ca
  426f7d:	into   
  426f7e:	stos   DWORD PTR es:[edi],eax
  426f7f:	mov    ch,0xb9
  426f81:	scas   al,BYTE PTR es:[edi]
  426f82:	(bad)  
  426f83:	scas   eax,DWORD PTR es:[edi]
  426f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f85:	or     bh,bh
  426f87:	mov    dl,0x55
  426f89:	jno    0x426fb6
  426f8b:	or     al,0x54
  426f8d:	xor    eax,0x9a574fc8
  426f92:	and    ebp,DWORD PTR [edx-0x1d]
  426f95:	in     al,dx
  426f96:	xchg   edx,eax
  426f97:	cld    
  426f98:	cmp    ebp,DWORD PTR [edi]
  426f9a:	outs   dx,DWORD PTR ds:[esi]
  426f9b:	mov    edi,ds
  426f9d:	out    dx,al
  426f9e:	xchg   ebp,eax
  426f9f:	jmp    0xb03fd07
  426fa4:	retf   0xc8c
  426fa7:	scas   eax,DWORD PTR es:[edi]
  426fa8:	mov    ebx,0x48e0eab0
  426fad:	fld1   
  426faf:	sub    edx,eax
  426fb1:	scas   al,BYTE PTR es:[edi]
  426fb2:	push   esi
  426fb3:	cmc    
  426fb4:	dec    edi
  426fb5:	mov    dh,0x80
  426fb7:	in     eax,0xb9
  426fb9:	inc    ecx
  426fba:	lods   eax,DWORD PTR ds:[esi]
  426fbb:	adc    al,0x1e
  426fbd:	pop    esp
  426fbe:	out    dx,eax
  426fbf:	popa   
  426fc0:	or     BYTE PTR [ecx-0x5c],bh
  426fc3:	and    al,0x9a
  426fc5:	aad    0xf1
  426fc7:	outs   dx,DWORD PTR ds:[esi]
  426fc8:	jle    0x426fb8
  426fca:	imul   edx,ebp,0xf8284fc8
  426fd0:	test   edi,ebx
  426fd2:	sbb    eax,0x61fcc451
  426fd7:	inc    ecx
  426fd8:	jo     0x426fc6
  426fda:	(bad)  
  426fdb:	pushf  
  426fdc:	data16 xor ch,ch
  426fdf:	scas   al,BYTE PTR es:[edi]
  426fe0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  426fe2:	(bad)  
  426fe3:	sbb    edx,DWORD PTR ds:0xaf495a79
  426fe9:	cmp    cl,BYTE PTR [ecx+0x1f]
  426fec:	mov    eax,0x7598c433
  426ff1:	cmp    BYTE PTR [ecx],al
  426ff3:	jno    0x426ffe
  426ff5:	mov    ecx,DWORD PTR [ebx-0x695a8db6]
  426ffb:	iret   
  426ffc:	dec    esi
  426ffd:	jae    0x427061
  426fff:	dec    esp
  427000:	xchg   ebx,eax
  427001:	mov    eax,0x482e7354
  427006:	lahf   
  427007:	adc    DWORD PTR [esi-0x41],esp
  42700a:	mov    dl,0xb4
  42700c:	xchg   edi,eax
  42700d:	clc    
  42700e:	loopne 0x426ff6
  427010:	into   
  427011:	lods   eax,DWORD PTR ds:[esi]
  427012:	jo     0x426feb
  427014:	loope  0x427059
  427016:	cmp    edx,DWORD PTR [ecx+0x63]
  427019:	test   DWORD PTR [ebx-0x39],eax
  42701c:	pushf  
  42701d:	int    0x3b
  42701f:	jnp    0x426fa7
  427021:	popa   
  427022:	sub    DWORD PTR [edx-0x1d],esp
  427025:	pop    es
  427026:	test   eax,0x4d5a3c4c
  42702b:	ds daa 
  42702d:	ret    0xf871
  427030:	pop    ss
  427031:	mov    edx,0x73402ce4
  427036:	xchg   esp,eax
  427037:	add    al,0xc6
  427039:	test   eax,0xb4362009
  42703e:	mov    ebp,0x2b953441
  427043:	add    ebp,ecx
  427045:	adc    BYTE PTR [esi-0x55],bl
  427048:	ds pop ds
  42704a:	jecxz  0x4270b6
  42704c:	add    BYTE PTR [ebx],cl
  42704e:	cmc    
  42704f:	enter  0x5203,0x38
  427053:	cmp    BYTE PTR [ebp+0x25],0xb2
  427057:	jl     0x427067
  427059:	fstp   TBYTE PTR [eax-0x121ea6f2]
  42705f:	fadd   DWORD PTR ds:0x3455859a
  427065:	mov    esi,DWORD PTR ds:0xb148dd90
  42706b:	nop
  42706c:	je     0x4270eb
  42706e:	xlat   BYTE PTR ds:[ebx]
  42706f:	mov    ecx,0x630faf54
  427074:	mov    edi,0x206d95c4
  427079:	pop    ebp
  42707a:	shl    BYTE PTR [ecx],0xf2
  42707d:	mov    ds:0x704bd0f7,al
  427082:	imul   esp,DWORD PTR [edx],0xffffffa3
  427085:	daa    
  427086:	pop    ss
  427087:	in     eax,0x7a
  427089:	loope  0x427048
  42708b:	nop
  42708c:	aas    
  42708d:	movntq QWORD PTR [eax-0x7abd2c14],mm4
  427094:	repnz ins DWORD PTR es:[edi],dx
  427096:	adc    dl,dl
  427098:	out    0x4e,al
  42709a:	pusha  
  42709b:	mov    WORD PTR [ecx-0x21497484],ss
  4270a1:	nop
  4270a2:	aad    0x75
  4270a4:	(bad)  
  4270a5:	adc    eax,DWORD PTR [eax]
	...
  4270af:	add    BYTE PTR [eax],al
  4270b1:	add    bh,cl
  4270b3:	neg    BYTE PTR [ebp-0x308442b0]
  4270b9:	(bad)  
  4270ba:	out    dx,eax
  4270bb:	lods   al,BYTE PTR ds:[esi]
  4270bc:	(bad)  
  4270bd:	push   ss
  4270be:	shl    BYTE PTR [ebp-0x1efd5f0c],cl
  4270c4:	add    DWORD PTR [eax],eax
  4270c6:	sub    al,0x3
  4270c8:	add    BYTE PTR [eax],al
  4270ca:	xchg   edi,eax
  4270cb:	pop    esp
  4270cc:	fisttp WORD PTR ds:0xee26a843
  4270d2:	inc    edx
  4270d3:	pop    esp
  4270d4:	aad    0x86
  4270d6:	xor    edx,0xffffffbc
  4270d9:	and    BYTE PTR [ebx+ebp*4+0x1],bh
  4270dd:	push   esp
  4270de:	mov    al,0x41
  4270e0:	pushf  
  4270e1:	pop    edi
  4270e2:	jecxz  0x427084
  4270e4:	and    ebx,ecx
  4270e6:	push   0xffffffa6
  4270e8:	fldenv [edx+eiz*2-0x58ef8c3b]
  4270ef:	(bad)  
  4270f2:	pop    es
  4270f3:	pop    ss
  4270f4:	(bad)  
  4270f6:	out    dx,al
  4270f7:	push   0x73
  4270f9:	and    al,0xdd
  4270fb:	add    eax,0x56ab0a4b
  427100:	(bad)  
  427101:	push   edx
  427102:	call   0xe671:0x7e2aa85e
  427109:	or     eax,0x3bddcd88
  42710e:	je     0x42709b
  427110:	shl    edx,0x89
  427113:	push   0x23
  427115:	fyl2x  
  427117:	jne    0x42710d
  427119:	mov    ah,0x91
  42711b:	rcl    BYTE PTR [ecx],1
  42711d:	sub    esp,DWORD PTR [eax]
  42711f:	jmp    0x4270fd
  427121:	stos   BYTE PTR es:[edi],al
  427122:	aam    0xd5
  427124:	push   esp
  427125:	pop    eax
  427126:	pop    ebp
  427127:	and    dl,ch
  427129:	(bad)  
  42712a:	pop    ss
  42712b:	xchg   BYTE PTR [edi+0x3ec4f9e6],dl
  427131:	cdq    
  427132:	cmp    edx,DWORD PTR [eax]
  427134:	push   esi
  427135:	mov    edx,0x620ff55f
  42713a:	out    dx,eax
  42713b:	ds mov dl,0x64
  42713e:	and    ebp,DWORD PTR [ecx+0x27d77b93]
  427144:	test   DWORD PTR [ebx],esp
  427146:	fisttp DWORD PTR [ebp-0x74]
  427149:	and    DWORD PTR [edx-0x42],ecx
  42714c:	repz cmp ch,BYTE PTR [edx]
  42714f:	jge    0x427169
  427151:	push   ecx
  427152:	retf   
  427153:	xchg   esp,eax
  427154:	loope  0x4271bb
  427156:	js     0x427122
  427158:	retf   
  427159:	inc    edi
  42715a:	stos   DWORD PTR es:[edi],eax
  42715b:	js     0x42716b
  42715d:	test   BYTE PTR [ecx],ch
  42715f:	inc    edx
  427160:	mov    edi,0x3faa1523
  427165:	int3   
  427166:	pop    ss
  427167:	fcmovnu st,st(7)
  427169:	test   eax,0xdf3ae124
  42716e:	hlt    
  42716f:	add    al,0x80
  427171:	mov    ecx,0x3178943a
  427176:	jg     0x427175
  427178:	cld    
  427179:	jnp    0x4270ff
  42717b:	cmp    al,0x77
  42717d:	clc    
  42717e:	cmp    BYTE PTR [edi-0x21],0x7f
  427182:	hlt    
  427183:	sbb    ch,cl
  427185:	mov    eax,0x3055cd52
  42718a:	xchg   DWORD PTR [eax],ecx
  42718c:	rcr    BYTE PTR [ecx-0x73984886],cl
  427192:	inc    ecx
  427193:	xor    al,BYTE PTR [esi-0x78717146]
  427199:	clc    
  42719a:	cdq    
  42719b:	cmp    bl,0xc9
  42719e:	mov    dl,0x36
  4271a0:	mov    al,ds:0x64948b88
  4271a5:	cli    
  4271a6:	or     DWORD PTR [edi+edi*1-0x4d7922d3],ecx
  4271ad:	jae    0x427152
  4271af:	sbb    edi,DWORD PTR [edx]
  4271b1:	or     BYTE PTR [ecx],0x40
  4271b4:	and    eax,0x5662840b
  4271b9:	jne    0x427141
  4271bb:	mov    dh,bl
  4271bd:	dec    eax
  4271be:	xchg   esi,eax
  4271bf:	xor    al,0x49
  4271c1:	test   eax,0x6524872
  4271c6:	sbb    DWORD PTR [ebx],esp
  4271c8:	or     eax,0x3d12cbeb
  4271cd:	lahf   
  4271ce:	ss into 
  4271d0:	iret   
  4271d1:	outs   dx,BYTE PTR ds:[esi]
  4271d2:	aas    
  4271d3:	sub    edx,DWORD PTR [ebx+0x8819207]
  4271d9:	cld    
  4271da:	test   DWORD PTR [ebx+0x78],0x817d9ba7
  4271e1:	add    ebp,DWORD PTR [ebx+0x680a730c]
  4271e7:	pushf  
  4271e8:	or     eax,esi
  4271ea:	loope  0x4271e6
  4271ec:	xchg   ebx,eax
  4271ed:	icebp  
  4271ee:	push   ebx
  4271ef:	sbb    al,cl
  4271f1:	imul   BYTE PTR [ebp+0x784ca5d]
  4271f7:	adc    bh,bl
  4271f9:	pop    ebp
  4271fa:	push   ss
  4271fb:	test   BYTE PTR [edi],0xe6
  4271fe:	test   DWORD PTR [edx-0x5b589bc5],0x2b2d94e2
  427208:	cwde   
  427209:	out    dx,al
  42720a:	(bad)  [edi+0x5885394c]
  427210:	push   esi
  427211:	ret    0xb504
  427214:	mov    edx,0xc65bcb22
  427219:	cmp    BYTE PTR [edi-0x4c],ch
  42721c:	ja     0x427266
  42721e:	mov    ah,0x20
  427220:	retf   0x4c01
  427223:	out    0x81,eax
  427225:	fadd   QWORD PTR [ecx-0x417aa58e]
  42722b:	enter  0x7c5f,0x30
  42722f:	or     BYTE PTR [eax+0xd92665b],dh
  427235:	mov    ch,0x24
  427237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427238:	jne    0x427223
  42723a:	xor    cl,BYTE PTR [edx+0x27]
  42723d:	sar    cl,1
  42723f:	dec    esi
  427240:	(bad)  
  427241:	mov    ah,0xb2
  427243:	out    dx,al
  427244:	push   ss
  427245:	xlat   BYTE PTR ds:[ebx]
  427246:	dec    esp
  427247:	xchg   esi,eax
  427248:	pop    edi
  427249:	push   0x67fb68dc
  42724e:	test   eax,esi
  427250:	mov    al,0x68
  427252:	in     eax,0x79
  427254:	inc    eax
  427255:	jmp    0x4271ed
  427257:	add    eax,0x5dbc9f46
  42725c:	cli    
  42725d:	lahf   
  42725e:	imul   esp,ebx,0xffffffe4
  427261:	mov    ecx,0xfe897984
  427266:	mov    al,0xfc
  427268:	dec    ecx
  427269:	(bad)  
  42726b:	pop    ecx
  42726c:	(bad)  
  42726d:	and    edx,DWORD PTR [edx-0x53b59fad]
  427273:	scas   al,BYTE PTR es:[edi]
  427274:	xlat   BYTE PTR ds:[ebx]
  427275:	jl     0x4272c3
  427277:	jecxz  0x427246
  427279:	fs call 0xa349135e
  42727f:	sub    DWORD PTR [eax-0x66],0xffffff9a
  427283:	loope  0x427278
  427285:	stos   BYTE PTR es:[edi],al
  427286:	stos   DWORD PTR es:[edi],eax
  427287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427289:	xor    DWORD PTR [esi],edi
  42728b:	out    0xc8,eax
  42728d:	and    ch,BYTE PTR [eax]
  42728f:	sbb    DWORD PTR [edi+ebx*2-0x33f7f1a6],ecx
  427296:	scas   eax,DWORD PTR es:[edi]
  427297:	push   edi
  427298:	pop    ss
  427299:	push   esi
  42729a:	or     eax,0x5d32d1c
  42729f:	add    cl,BYTE PTR [ecx]
  4272a1:	cs leave 
  4272a3:	popa   
  4272a4:	icebp  
  4272a5:	int    0x2a
  4272a7:	ret    0xaf88
  4272aa:	inc    ebp
  4272ab:	popf   
  4272ac:	mov    ?,WORD PTR [edx+0x271277a]
  4272b2:	outs   dx,DWORD PTR ds:[esi]
  4272b3:	dec    edx
  4272b4:	loope  0x4272df
  4272b6:	pop    edx
  4272b7:	pop    esp
  4272b8:	ins    DWORD PTR es:[edi],dx
  4272b9:	cs out 0xcd,al
  4272bc:	xchg   ebp,eax
  4272bd:	aas    
  4272be:	stos   BYTE PTR es:[edi],al
  4272bf:	popa   
  4272c0:	jg     0x4272a0
  4272c2:	popa   
  4272c3:	push   ebp
  4272c4:	out    0x6b,al
  4272c6:	xchg   esi,eax
  4272c7:	sbb    DWORD PTR [ebx],esp
  4272c9:	daa    
  4272ca:	bt     ebp,esi
  4272cd:	fmul   st(0),st
  4272cf:	ins    BYTE PTR es:[edi],dx
  4272d0:	pop    edx
  4272d1:	imul   esi,DWORD PTR [edi],0x4c07673c
  4272d7:	xor    dh,dh
  4272d9:	mov    ebp,0x27dcb04b
  4272de:	jg     0x427353
  4272e0:	aam    0xb8
  4272e2:	(bad)  
  4272e3:	sti    
  4272e4:	shl    BYTE PTR [esp+ecx*1+0x3c],cl
  4272e8:	push   ds
  4272e9:	pop    ecx
  4272ea:	stc    
  4272eb:	adc    ah,BYTE PTR [esi-0x8]
  4272ee:	pusha  
  4272ef:	cmc    
  4272f0:	dec    ecx
  4272f1:	stc    
  4272f2:	dec    esp
  4272f3:	inc    edx
  4272f4:	cmp    BYTE PTR [ebx],bh
  4272f6:	aaa    
  4272f7:	ror    BYTE PTR [edx],0x7e
  4272fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272fb:	std    
  4272fc:	ret    
  4272fd:	sub    cl,BYTE PTR es:[ebx]
  427300:	test   eax,0xc390b181
  427305:	lods   eax,DWORD PTR ds:[esi]
  427306:	imul   edi,esi,0x99c5049
  42730c:	pop    es
  42730d:	(bad)  
  42730e:	stc    
  42730f:	inc    edi
  427310:	test   BYTE PTR [esi+eiz*1-0xd690ef],dh
  427317:	std    
  427318:	lock daa 
  42731a:	jge    0x42729f
  42731c:	push   ebx
  42731d:	add    BYTE PTR [esi+0x14],0xfb
  427321:	dec    esi
  427322:	out    0x77,al
  427324:	inc    BYTE PTR [eax+esi*8+0x4fa62d99]
  42732b:	or     esp,DWORD PTR [eax+0x35]
  42732e:	leave  
  42732f:	retf   0xcf8
  427332:	lods   al,BYTE PTR ds:[esi]
  427333:	mov    dh,0x94
  427335:	push   ebx
  427336:	push   0x3688e9a7
  42733b:	addr16 cdq 
  42733d:	jecxz  0x4273ad
  42733f:	mov    BYTE PTR [eax+0x532bb38a],al
  427345:	iret   
  427346:	pop    ebp
  427347:	mov    dh,0x1f
  427349:	(bad)  [ecx-0xb40e10f]
  42734f:	in     al,dx
  427350:	(bad)  
  427351:	cmc    
  427352:	les    edx,FWORD PTR [ecx]
  427354:	sub    BYTE PTR [esi-0x76],al
  427357:	or     al,0x3b
  427359:	data16 icebp 
  42735b:	mov    ebp,DWORD PTR [ebx-0x3da2006b]
  427361:	push   eax
  427362:	pop    esp
  427363:	stos   BYTE PTR es:[edi],al
  427364:	and    eax,0x8e146c6f
  427369:	test   al,0xa5
  42736b:	sbb    BYTE PTR [ebx],al
  42736d:	out    dx,eax
  42736e:	retf   
  42736f:	lahf   
  427370:	fisub  DWORD PTR [edi-0x5a]
  427373:	sahf   
  427374:	xor    al,0x2a
  427376:	add    ecx,ebx
  427378:	repnz ds pop ecx
  42737b:	and    esp,DWORD PTR [ebx]
  42737d:	clc    
  42737e:	fidiv  DWORD PTR [edx]
  427380:	rol    BYTE PTR [edx-0x23639b70],1
  427386:	jl     0x427370
  427388:	mov    eax,0x66526123
  42738d:	das    
  42738e:	mov    cl,0xd3
  427390:	enter  0x85a5,0x15
  427394:	enter  0x6b0,0x6
  427398:	jl     0x427391
  42739a:	data16 mov ds:0xb2fc86e2,al
  4273a0:	outs   dx,DWORD PTR ds:[esi]
  4273a1:	mov    ch,0xa6
  4273a3:	mov    al,ds:0xd505fa82
  4273a8:	lahf   
  4273a9:	adc    al,BYTE PTR [eax-0x4]
  4273ac:	ror    BYTE PTR [ebx+0x1d],cl
  4273af:	xchg   BYTE PTR gs:[edx-0x4e],bh
  4273b3:	mov    esp,0x5945899f
  4273b8:	clc    
  4273b9:	nop
  4273ba:	inc    edx
  4273bb:	fdiv   QWORD PTR [edx-0x6c]
  4273be:	inc    esp
  4273bf:	sbb    esi,DWORD PTR [esi+0x2126b585]
  4273c5:	pop    es
  4273c6:	xchg   edx,esi
  4273c8:	aam    0x1a
  4273ca:	xor    edx,DWORD PTR [ecx+0x6be30eb5]
  4273d0:	adc    BYTE PTR [ebx],0xe1
  4273d3:	pop    edx
  4273d4:	cmp    esp,ecx
  4273d6:	loope  0x427442
  4273d8:	mov    ebp,0xc69713f6
  4273dd:	div    edi
  4273df:	aaa    
  4273e0:	mov    al,ds:0x312f28cb
  4273e5:	aaa    
  4273e6:	lods   eax,DWORD PTR ds:[esi]
  4273e7:	sti    
  4273e8:	adc    eax,0xa6a46c71
  4273ed:	dec    edi
  4273ee:	ror    al,cl
  4273f0:	xchg   BYTE PTR [ebp+0x6953401a],ah
	...
  427402:	push   0x6f1e2d23
  427407:	push   ds
  427408:	jnp    0x427481
  42740a:	fisub  WORD PTR [ebp-0x1f284fca]
  427410:	mov    al,ds:0x1e42eed
  427415:	add    BYTE PTR [ebx+eax*1],ch
  427418:	add    BYTE PTR [eax],al
  42741a:	jp     0x4273e4
  42741c:	ss cs nop
  42741f:	aas    
  427420:	sub    DWORD PTR [esi],esi
  427422:	gs loopne 0x4273dd
  427425:	xchg   DWORD PTR [esi+0x3d],eax
  427428:	dec    esp
  427429:	lds    eax,FWORD PTR [eax*1+0x6c477b76]
  427430:	adc    DWORD PTR [edx+0x29],esi
  427433:	call   0xf881307a
  427438:	jp     0x4273f7
  42743a:	add    eax,0x6942f49e
  42743f:	and    bh,BYTE PTR [edi-0x49]
  427442:	scas   al,BYTE PTR es:[edi]
  427443:	cld    
  427444:	adc    cl,dh
  427446:	cmp    bh,dh
  427448:	cmp    ecx,ecx
  42744a:	cmp    eax,0x9356111f
  42744f:	mov    al,ds:0xec235a67
  427454:	inc    esi
  427455:	add    al,0xa6
  427457:	cmp    DWORD PTR [esi+edi*2+0x37],edi
  42745b:	outs   dx,DWORD PTR ds:[esi]
  42745c:	jmp    0x2f5c:0x5b1396f9
  427463:	mov    ds:0xf0eb7f10,al
  427468:	inc    esp
  427469:	and    al,0x56
  42746b:	add    eax,0x5749c3ed
  427470:	xchg   esp,eax
  427471:	nop
  427472:	xchg   ecx,eax
  427473:	xor    esi,DWORD PTR [edx]
  427475:	cdq    
  427476:	fs sub al,0x39
  427479:	mov    dh,0xa5
  42747b:	mov    fs,WORD PTR [edx+edx*4]
  42747e:	push   0x2b
  427480:	push   esi
  427481:	out    dx,al
  427482:	outs   dx,BYTE PTR ds:[esi]
  427483:	in     al,0x90
  427485:	mov    ds:0x9f7b429d,al
  42748a:	xchg   ecx,eax
  42748b:	or     eax,0xcb4a715f
  427490:	mov    esp,gs
  427492:	into   
  427493:	lods   eax,DWORD PTR ds:[esi]
  427494:	mov    cl,0x9e
  427496:	daa    
  427497:	pop    esp
  427498:	push   cs
  427499:	add    ch,BYTE PTR [esi-0x254ff8b8]
  42749f:	and    esp,DWORD PTR [ecx+0x7d072129]
  4274a5:	daa    
  4274a6:	es das 
  4274a8:	mov    cl,0xa1
  4274aa:	shl    BYTE PTR [eax+0x23ae2d6d],1
  4274b0:	inc    edx
  4274b1:	arpl   bp,dx
  4274b3:	jecxz  0x427532
  4274b5:	(bad)  
  4274b6:	and    eax,DWORD PTR [edi-0x63d3f84]
  4274bc:	mov    eax,ds:0xe9903d8a
  4274c1:	sub    edi,ecx
  4274c3:	mov    bl,0x64
  4274c5:	stc    
  4274c6:	inc    ecx
  4274c7:	sbb    eax,0xb07486a2
  4274cc:	or     al,0x9
  4274ce:	or     DWORD PTR [edi-0x7b],esi
  4274d1:	jle    0x42750e
  4274d3:	call   0xc807:0xa46bcfd1
  4274da:	sub    dh,BYTE PTR [edx+0x2460fc7e]
  4274e0:	test   al,0xc7
  4274e2:	or     esi,DWORD PTR ds:0xeae7f078
  4274e9:	mov    esi,esi
  4274eb:	dec    edx
  4274ec:	sub    al,0xd4
  4274ee:	push   es
  4274ef:	stos   DWORD PTR es:[edi],eax
  4274f0:	xor    eax,0x86eb1b18
  4274f5:	daa    
  4274f6:	daa    
  4274f7:	popa   
  4274f8:	push   ds
  4274f9:	jns    0x427527
  4274fb:	jl     0x427550
  4274fd:	out    dx,eax
  4274fe:	inc    ecx
  4274ff:	cmc    
  427500:	outs   dx,DWORD PTR ds:[esi]
  427501:	out    0xb8,al
  427503:	and    ah,BYTE PTR [ecx+0x4c870cab]
  427509:	dec    edi
  42750a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42750b:	push   ebx
  42750c:	xor    BYTE PTR [ecx],dh
  42750e:	enter  0x7888,0xf6
  427512:	into   
  427513:	ror    ebp,0x54
  427516:	inc    edx
  427517:	pop    ds
  427518:	into   
  427519:	add    ah,BYTE PTR [ebx-0x67475101]
  42751f:	xlat   BYTE PTR ds:[ebx]
  427520:	xchg   ebp,eax
  427521:	mov    WORD PTR [ebx+0x28],es
  427524:	ret    
  427525:	sbb    DWORD PTR [eax-0x45],0xffffffe2
  427529:	into   
  42752a:	inc    esp
  42752b:	push   ss
  42752c:	stos   BYTE PTR es:[edi],al
  42752d:	add    DWORD PTR [esp+edx*8-0x2e515888],edi
  427534:	jge    0x427512
  427536:	inc    edi
  427537:	(bad)  
  427538:	pop    edi
  427539:	xor    eax,0x49118162
  42753e:	fadd   DWORD PTR [esi+0xd8643df]
  427544:	icebp  
  427545:	outs   dx,BYTE PTR ds:[esi]
  427546:	hlt    
  427547:	mov    eax,ds:0xe455e57e
  42754c:	xchg   esp,eax
  42754d:	repz cmc 
  42754f:	outs   dx,BYTE PTR ds:[esi]
  427550:	fimul  DWORD PTR [edi]
  427552:	push   ds
  427553:	push   0xd7cefb9e
  427558:	shl    dh,1
  42755a:	pop    eax
  42755b:	ror    BYTE PTR [eax+0x2daaee00],cl
  427561:	lds    edx,FWORD PTR [edx+0x59]
  427564:	loope  0x42750b
  427566:	or     edi,eax
  427568:	mov    dh,0x1a
  42756a:	push   edi
  42756b:	into   
  42756c:	mov    eax,edx
  42756e:	call   0x7976:0x9c41b13
  427575:	loopne 0x427523
  427577:	sbb    ecx,DWORD PTR [edi+0x70]
  42757a:	cmp    eax,0xdb8c3908
  42757f:	pop    eax
  427580:	repnz pop esi
  427582:	jno    0x4275c8
  427584:	retf   
  427585:	je     0x4275d7
  427587:	jb     0x4275e8
  427589:	mov    cl,0xa4
  42758b:	fdivr  DWORD PTR [edx+0x52]
  42758e:	outs   dx,BYTE PTR ds:[esi]
  42758f:	jb     0x42757a
  427591:	call   0x7e7d:0xd143f9d1
  427598:	mov    ds:0x1ae27ae0,eax
  42759d:	add    al,0x5c
  42759f:	xchg   ebp,eax
  4275a0:	repnz push 0xa46b66a3
  4275a6:	dec    edi
  4275a7:	cwde   
  4275a8:	or     eax,0xfdd97a40
  4275ad:	dec    bp
  4275af:	pop    edi
  4275b0:	aaa    
  4275b1:	inc    esi
  4275b2:	pop    eax
  4275b3:	push   ecx
  4275b4:	ret    
  4275b5:	mov    esi,0x5b66ffe3
  4275ba:	pop    ebx
  4275bb:	mov    DWORD PTR [ebx+0x21fd6ede],ebx
  4275c1:	adc    DWORD PTR [edx-0x5cc6253e],0xffffff9c
  4275c8:	outs   dx,DWORD PTR ds:[esi]
  4275c9:	outs   dx,BYTE PTR ds:[esi]
  4275ca:	add    edx,DWORD PTR [edi+0x5dc1592f]
  4275d0:	cdq    
  4275d1:	into   
  4275d2:	add    al,0x24
  4275d4:	lods   al,BYTE PTR ds:[esi]
  4275d5:	xchg   ecx,eax
  4275d6:	dec    esp
  4275d7:	clc    
  4275d8:	or     al,0xb9
  4275da:	fdiv   DWORD PTR [esi]
  4275dc:	or     dl,bl
  4275de:	cmp    ecx,DWORD PTR [edi-0x7f]
  4275e1:	stc    
  4275e2:	dec    eax
  4275e3:	stos   DWORD PTR es:[edi],eax
  4275e4:	xchg   ebx,eax
  4275e5:	call   0x85ee:0x452e9b1e
  4275ec:	(bad)  
  4275ed:	mov    ds:0xacc1a0cc,eax
  4275f2:	and    al,0xf5
  4275f4:	push   esi
  4275f5:	sub    eax,0xb23399f4
  4275fa:	mov    bh,BYTE PTR [ecx+ebx*4-0x7512447a]
  427601:	retf   0xcd92
  427604:	mov    edx,0x26ef068d
  427609:	and    al,0xbc
  42760b:	lods   al,BYTE PTR ds:[esi]
  42760c:	dec    ecx
  42760d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42760e:	inc    esi
  42760f:	inc    ecx
  427610:	ja     0x42768a
  427612:	addr16 dec eax
  427614:	push   es
  427615:	es out 0x6a,al
  427618:	fdivr  QWORD PTR [edi]
  42761a:	ror    DWORD PTR [ecx+ebx*8+0x0],1
  42761e:	jg     0x4275ea
  427620:	fcmovu st,st(4)
  427622:	out    0x6c,eax
  427624:	retf   0x250f
  427627:	out    dx,al
  427628:	mov    dl,0x43
  42762a:	(bad)  
  42762b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42762c:	int3   
  42762d:	xor    BYTE PTR [ecx-0x1f],al
  427630:	idiv   DWORD PTR [ecx+edx*1-0x4dd447ab]
  427637:	out    0x41,al
  427639:	outs   dx,BYTE PTR ds:[esi]
  42763a:	shl    cl,1
  42763c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42763d:	inc    esp
  42763e:	shl    DWORD PTR [edx+0x281db033],cl
  427644:	jns    0x42763e
  427646:	sbb    bh,ch
  427648:	sbb    ch,bh
  42764a:	pop    esp
  42764b:	ror    DWORD PTR [esi+eax*1],1
  42764e:	push   ds
  42764f:	dec    edi
  427650:	xor    esp,DWORD PTR [ecx+0x22]
  427653:	inc    ebx
  427654:	iret   
  427655:	int    0x7a
  427657:	push   es
  427658:	xchg   esi,eax
  427659:	and    eax,0x80c2067
  42765e:	pop    eax
  42765f:	push   ebp
  427660:	jmp    0x960e4b9e
  427665:	or     dl,ch
  427667:	out    0x6a,eax
  427669:	or     ecx,DWORD PTR [edi-0x10]
  42766c:	jmp    0x5358d914
  427671:	add    ebx,DWORD PTR [edx-0x70]
  427674:	jl     0x42763d
  427676:	clc    
  427677:	mov    eax,ds:0x16b832a6
  42767c:	mov    DWORD PTR [ecx],eax
  42767e:	retf   
  42767f:	clc    
  427680:	add    edi,DWORD PTR [ebx+edx*4]
  427683:	(bad)  
  427684:	cmp    bh,BYTE PTR [edi+0x6f]
  427687:	std    
  427688:	mov    ch,BYTE PTR [ebx+0x6c]
  42768b:	or     BYTE PTR [edx],bl
  42768d:	sbb    DWORD PTR [edi],ebp
  42768f:	push   ecx
  427690:	js     0x4276a1
  427692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427693:	or     ebx,esi
  427695:	(bad)  
  427696:	mov    dh,0xaa
  427698:	neg    esi
  42769a:	test   cl,dh
  42769c:	mov    ebx,0xb4c92947
  4276a1:	push   0x21672c5a
  4276a6:	xlat   BYTE PTR ds:[ebx]
  4276a7:	mov    cl,0x8d
  4276a9:	or     eax,0x32210b20
  4276ae:	sub    eax,0xad494637
  4276b3:	sbb    DWORD PTR [esp+ebx*4+0x3b],ebp
  4276b7:	into   
  4276b8:	and    DWORD PTR [eax+0x45],esp
  4276bb:	jmp    DWORD PTR [esp+eiz*2+0x3d44ead2]
  4276c2:	icebp  
  4276c3:	ret    0x8c5
  4276c6:	push   eax
  4276c7:	xchg   ecx,eax
  4276c8:	jl     0x42767f
  4276ca:	mov    bh,0xf3
  4276cc:	add    eax,DWORD PTR ds:0x37764d12
  4276d3:	test   BYTE PTR [ebx],bl
  4276d5:	mov    esi,0x8b27343f
  4276da:	add    DWORD PTR [ecx+ebp*8+0x3dc6245d],ebp
  4276e1:	into   
  4276e2:	mov    ds:0xc4242783,al
  4276e7:	add    eax,0x1b4c9169
  4276ec:	test   DWORD PTR [ebx],ebx
  4276ee:	mov    edx,0x3267843b
  4276f3:	sub    DWORD PTR [ebx-0x30],0x79a5663f
  4276fa:	fs sbb edx,edx
  4276fd:	jecxz  0x427711
  4276ff:	xchg   ebx,eax
  427700:	jae    0x4276ff
  427702:	or     DWORD PTR [ebx-0x2bbdb321],ebx
  427708:	fistp  DWORD PTR [ebx-0x67]
  42770b:	aaa    
  42770c:	cmp    al,0x64
  42770f:	mov    ch,0xc1
  427711:	adc    edx,DWORD PTR gs:[ebx+0x4b]
  427715:	shl    BYTE PTR [ebx+ebp*8],0x5b
  427719:	jo     0x4276f0
  42771b:	fnstsw WORD PTR [ecx+edi*4+0x2c1e23b4]
  427722:	mov    ah,bl
  427724:	mov    eax,ds:0x37a7c8f9
  427729:	stos   DWORD PTR es:[edi],eax
  42772a:	xor    dh,BYTE PTR ds:[edx+esi*4]
  42772e:	ja     0x427746
  427730:	stc    
  427731:	jae    0x42772c
  427733:	arpl   WORD PTR [esi-0x67],bp
  427736:	ss xor al,0xfa
  427739:	lods   al,BYTE PTR ds:[esi]
  42773a:	xor    BYTE PTR [ecx+esi*2+0x25],bl
  42773e:	(bad)  
  42773f:	lahf   
  427740:	push   0xffffffb7
  427742:	jecxz  0x42778d
  427744:	jecxz  0x427775
	...
  427752:	cdq    
  427753:	enter  0x9ff8,0xf9
  427757:	mov    edi,0xdf92ceff
  42775c:	push   ds
  42775d:	outs   dx,BYTE PTR ds:[esi]
  42775e:	ja     0x4277d4
  427760:	test   al,0xbd
  427762:	pop    edx
  427763:	out    0x1,eax
  427765:	add    BYTE PTR [ebx+eax*1],ch
  427768:	add    BYTE PTR [eax],al
  42776a:	in     al,dx
  42776b:	mov    bh,0x3f
  42776d:	and    edi,ecx
  42776f:	scas   al,BYTE PTR es:[edi]
  427770:	push   edx
  427771:	jge    0x4277c1
  427773:	or     al,0xf9
  427775:	and    DWORD PTR [edx-0x2dabbb3],edx
  42777b:	mov    ebp,0x9579c44d
  427780:	jbe    0x4277d1
  427782:	add    eax,0x19045986
  427787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427788:	cmp    DWORD PTR [ebx],ebp
  42778a:	and    al,0xeb
  42778c:	mov    WORD PTR [edi],cs
  42778e:	in     al,0xa5
  427790:	sahf   
  427791:	in     al,dx
  427792:	ret    
  427793:	fild   WORD PTR [ebp+0x44e296c9]
  427799:	cli    
  42779a:	scas   eax,DWORD PTR es:[edi]
  42779b:	adc    dh,BYTE PTR [ebx]
  42779d:	iret   
  42779e:	push   es
  42779f:	sbb    al,0xc
  4277a1:	add    al,0x4f
  4277a3:	mov    esi,0x64b920c
  4277a8:	hlt    
  4277a9:	add    BYTE PTR [ecx-0x25eab45f],0xef
  4277b0:	test   DWORD PTR [edx],0x4901ff51
  4277b6:	hlt    
  4277b7:	mov    al,ds:0xfdb00fa6
  4277bc:	aaa    
  4277bd:	and    al,0xc5
  4277bf:	dec    esp
  4277c0:	out    0x7c,al
  4277c2:	arpl   WORD PTR [eax+0x30e9b77],sp
  4277c8:	xor    ebp,ebx
  4277ca:	jnp    0x4277a7
  4277cc:	xchg   edi,eax
  4277cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277ce:	and    ecx,DWORD PTR [edi]
  4277d0:	inc    edx
  4277d1:	repnz mov DWORD PTR [esi+0x2770f918],ebx
  4277d8:	icebp  
  4277d9:	stos   BYTE PTR es:[edi],al
  4277da:	adc    eax,0x27a5a34f
  4277df:	mov    esp,0xa1b5fe3f
  4277e4:	push   eax
  4277e5:	mov    esi,0xeec7f793
  4277ea:	sbb    eax,0xbde32ff9
  4277ef:	add    eax,0xa02ea12a
  4277f4:	jmp    0x7322:0x85846ca0
  4277fb:	ins    BYTE PTR es:[edi],dx
  4277fc:	lock or BYTE PTR [eax],dh
  4277ff:	xor    eax,0xdb751cd0
  427804:	sub    ecx,DWORD PTR [eax-0x2e]
  427807:	dec    ebp
  427808:	mov    edi,0x59a0aab4
  42780d:	adc    edi,edx
  42780f:	xchg   edx,eax
  427810:	imul   esp,DWORD PTR [edx+0x4a],0xffffff9c
  427814:	sbb    ebp,DWORD PTR [eax-0x4b6423f4]
  42781a:	les    edx,FWORD PTR [eax-0x62]
  42781d:	dec    ebx
  42781e:	inc    ebp
  42781f:	repz call 0x9713:0xf34640c8
  427827:	adc    bh,BYTE PTR [edi-0x26]
  42782a:	sub    edx,0x2d
  42782d:	adc    BYTE PTR [esi-0x15],al
  427830:	loop   0x427880
  427832:	imul   ecx,DWORD PTR [eax-0x67aa9e26],0x874137ef
  42783c:	jle    0x427859
  42783e:	pop    es
  42783f:	enter  0xad79,0xb3
  427843:	adc    ch,bl
  427845:	ror    BYTE PTR [ebx+eiz*1],0xd
  427849:	inc    edi
  42784a:	mov    ds:0x842803ed,al
  42784f:	add    eax,0x2877df3d
  427854:	shl    BYTE PTR [ecx+0x28f0a6b4],0xba
  42785b:	rcr    DWORD PTR [esi+eax*1-0x15],0x59
  427860:	cmc    
  427861:	shr    cl,cl
  427863:	jo     0x4278d3
  427865:	jo     0x427868
  427867:	xchg   esi,eax
  427868:	pop    edi
  427869:	lock repnz push edi
  42786c:	xchg   esi,eax
  42786d:	test   DWORD PTR [ecx-0x7bda634e],edi
  427873:	push   0xffffff88
  427875:	lea    ebp,[edx+edi*2+0x65dcf22d]
  42787c:	and    dl,al
  42787e:	cs push ss
  427880:	mul    BYTE PTR [edi+0x7cd1edf0]
  427886:	adc    ebx,DWORD PTR ds:0xfd46d1ac
  42788c:	mov    ch,0x8b
  42788e:	pop    ds
  42788f:	sub    ah,dh
  427891:	scas   eax,DWORD PTR es:[edi]
  427892:	js     0x427824
  427894:	dec    eax
  427895:	xor    esp,DWORD PTR [ebx-0x6d]
  427898:	outs   dx,DWORD PTR ds:[esi]
  427899:	shl    edi,cl
  42789b:	mov    dh,0x40
  42789d:	imul   edi,DWORD PTR [ebx-0x3e7d2105],0xf8c75afe
  4278a7:	pop    edx
  4278a8:	and    BYTE PTR [ecx],bl
  4278aa:	lods   eax,DWORD PTR ds:[si]
  4278ac:	sub    edx,esi
  4278ae:	mov    ?,esi
  4278b0:	sbb    DWORD PTR [edi],ecx
  4278b2:	jecxz  0x427888
  4278b4:	dec    edx
  4278b5:	jno    0x42790a
  4278b7:	sbb    al,0x4c
  4278b9:	mov    esi,0x79d64ed2
  4278be:	fst    st(7)
  4278c0:	pop    ds
  4278c1:	test   ebp,ebp
  4278c3:	mov    dh,0x8f
  4278c5:	jne    0x4278df
  4278c7:	nop
  4278c8:	ds inc edx
  4278ca:	pop    ds
  4278cb:	jle    0x4278ee
  4278cd:	mov    BYTE PTR [esi+0x299065d3],bh
  4278d3:	outs   dx,BYTE PTR ds:[esi]
  4278d4:	sbb    eax,DWORD PTR [esi+0x6c]
  4278d7:	xchg   ebx,eax
  4278d8:	dec    edx
  4278d9:	out    0x54,al
  4278db:	and    ebx,DWORD PTR [ebx]
  4278dd:	scas   al,BYTE PTR es:[edi]
  4278de:	ja     0x4278d2
  4278e0:	ret    
  4278e1:	or     esp,ecx
  4278e3:	pop    ds
  4278e4:	into   
  4278e5:	pop    DWORD PTR [ecx+0x4978011d]
  4278eb:	mov    esp,DWORD PTR [edi-0x39]
  4278ee:	dec    ecx
  4278ef:	pop    edi
  4278f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278f1:	pop    es
  4278f2:	push   ss
  4278f3:	and    bl,bh
  4278f5:	inc    esi
  4278f6:	push   edx
  4278f7:	add    DWORD PTR [ebp+0x2b],0x9a7de56
  4278fe:	in     al,dx
  4278ff:	cmp    al,0x46
  427901:	inc    ebp
  427902:	cwde   
  427903:	setg   BYTE PTR [ebx]
  427906:	out    0xae,eax
  427908:	rcl    DWORD PTR [esi+ebx*4-0x511259c6],cl
  42790f:	shl    ah,0x5
  427912:	push   0xc49463f3
  427917:	fnstcw WORD PTR [esi+0x13]
  42791a:	pop    ecx
  42791b:	cmp    BYTE PTR [ebx-0x37073898],0xdc
  427922:	mov    ah,0x66
  427924:	xchg   ecx,eax
  427925:	jo     0x42799d
  427927:	jecxz  0x427905
  427929:	xor    eax,0xc5859dab
  42792e:	loopne 0x4278f1
  427930:	push   0x5cdd684b
  427935:	lods   eax,DWORD PTR ds:[esi]
  427936:	fdiv   st,st(0)
  427938:	or     al,0xa6
  42793a:	dec    edi
  42793b:	or     BYTE PTR [edi+0x3d1256ff],al
  427941:	inc    eax
  427942:	cmp    al,0x6e
  427944:	mov    edi,0x3a8017cf
  427949:	rol    ebx,1
  42794b:	loope  0x42797e
  42794d:	pop    ds
  42794e:	rcr    DWORD PTR [edi],cl
  427950:	mov    ah,0xe5
  427952:	es jp  0x42798f
  427955:	adc    esp,DWORD PTR [ecx+0x1]
  427958:	nop
  427959:	jo     0x4279c3
  42795b:	bound  esi,QWORD PTR [eax-0xa061a76]
  427961:	in     al,dx
  427962:	jnp    0x42799d
  427964:	(bad)  
  427966:	push   ebx
  427967:	push   cs
  427968:	xchg   ebp,eax
  427969:	lock adc DWORD PTR [edx-0x12c58fae],edx
  427970:	shr    DWORD PTR [esi],0x79
  427973:	bnd jnp 0x42799a
  427976:	and    esp,ecx
  427978:	jb     0x42796b
  42797a:	pop    ds
  42797b:	dec    edi
  42797c:	xchg   ebx,eax
  42797d:	or     edi,ebp
  42797f:	in     al,dx
  427980:	push   es
  427981:	fsub   QWORD PTR [eax+eax*2]
  427984:	lds    ecx,FWORD PTR [esi+0x660e1edc]
  42798a:	jbe    0x42799f
  42798c:	aad    0xdf
  42798e:	bound  edx,QWORD PTR [esi]
  427990:	add    eax,0xcaf23e3d
  427995:	dec    edx
  427996:	mov    es,WORD PTR [edx+0x6cb5bb77]
  42799c:	scas   al,BYTE PTR es:[edi]
  42799d:	aaa    
  42799e:	add    ecx,DWORD PTR [esi+0x448f0107]
  4279a4:	xor    eax,DWORD PTR [eax-0x5d248c19]
  4279aa:	mov    ebp,0x477aa8a8
  4279af:	sub    eax,ecx
  4279b1:	push   esi
  4279b2:	retf   
  4279b3:	mov    esp,0xa653c402
  4279b8:	or     al,0xd
  4279ba:	add    BYTE PTR [ecx+0x70],dl
  4279bd:	call   ebx
  4279bf:	mov    dh,0x28
  4279c1:	imul   ecx,ecx,0xf12d7530
  4279c7:	outs   dx,BYTE PTR ds:[esi]
  4279c8:	ficomp DWORD PTR [edx]
  4279ca:	stos   BYTE PTR es:[edi],al
  4279cb:	jl     0x427a38
  4279cd:	or     esi,edi
  4279cf:	in     al,0xc1
  4279d1:	hlt    
  4279d2:	and    cl,BYTE PTR [edi+eiz*2-0x43047386]
  4279d9:	pop    ebp
  4279da:	xor    ch,BYTE PTR [esi+0x1f230a4d]
  4279e0:	pop    edi
  4279e1:	cmp    DWORD PTR [edi+0xd],esi
  4279e4:	cmp    DWORD PTR [edi],eax
  4279e6:	int3   
  4279e7:	loop   0x4279b5
  4279e9:	mov    WORD PTR [eax+0x47a7ed94],gs
  4279ef:	xchg   ecx,eax
  4279f0:	xchg   ecx,eax
  4279f1:	mov    bl,dh
  4279f3:	push   ecx
  4279f4:	mov    cl,0xb0
  4279f6:	fstp   DWORD PTR [edx-0x7a3cb230]
  4279fc:	lahf   
  4279fd:	pop    edi
  4279fe:	fsub   QWORD PTR [esi-0x12d23446]
  427a04:	xchg   BYTE PTR [edx+0x59],ah
  427a07:	jecxz  0x427a6a
  427a09:	push   0x37
  427a0b:	fs pop es
  427a0d:	jbe    0x427a2b
  427a0f:	pop    esp
  427a10:	clc    
  427a11:	push   ss
  427a12:	ficomp DWORD PTR [eax-0x16]
  427a15:	dec    ebx
  427a16:	jle    0x427a17
  427a18:	cmp    eax,0x1b2d695c
  427a1d:	int3   
  427a1e:	cdq    
  427a1f:	imul   ebp,ecx,0x76
  427a22:	mov    eax,eax
  427a24:	mov    dh,0xb9
  427a26:	jge    0x427a73
  427a28:	mov    edx,0xae2d0d7f
  427a2d:	(bad)  
  427a2e:	add    ecx,DWORD PTR [esi+ebx*2+0x5e]
  427a32:	lahf   
  427a33:	jne    0x427a18
  427a35:	sbb    ecx,edi
  427a37:	(bad)  
  427a38:	ficom  DWORD PTR [eax+0x13]
  427a3b:	adc    DWORD PTR [edi-0x773e7dbe],ebp
  427a41:	jg     0x4279d4
  427a43:	inc    eax
  427a44:	ret    
  427a45:	pop    ecx
  427a46:	push   es
  427a47:	cdq    
  427a48:	outs   dx,DWORD PTR ds:[esi]
  427a49:	imul   esi,DWORD PTR [ecx+eax*2],0xffffff8c
  427a4d:	pop    ds
  427a4e:	push   ebp
  427a4f:	adc    bl,ah
  427a51:	push   ss
  427a52:	out    0xd8,eax
  427a54:	aam    0xdc
  427a56:	mov    al,0x21
  427a58:	pop    ecx
  427a59:	xchg   esp,eax
  427a5a:	jb     0x427a91
  427a5c:	stos   BYTE PTR es:[edi],al
  427a5d:	adc    DWORD PTR [di+0x3fee],0xe880ff3c
  427a66:	xchg   esi,eax
  427a67:	sbb    bl,BYTE PTR ds:0xbad01ad5
  427a6d:	add    bh,BYTE PTR [ebx]
  427a6f:	adc    ecx,eax
  427a71:	pop    ds
  427a72:	xor    eax,0xacfc106
  427a77:	iret   
  427a78:	sar    DWORD PTR [esi],cl
  427a7a:	sbb    al,0x81
  427a7c:	inc    ebp
  427a7d:	add    ah,BYTE PTR [edi]
  427a7f:	leave  
  427a80:	outs   dx,BYTE PTR ds:[esi]
  427a81:	mov    edx,0xcd5b921a
  427a86:	sbb    BYTE PTR [edx],bl
  427a88:	pop    eax
  427a89:	ins    BYTE PTR es:[edi],dx
  427a8a:	jge    0x427a96
  427a8c:	test   DWORD PTR [edx],esp
  427a8e:	into   
  427a8f:	std    
  427a90:	xor    DWORD PTR [ebp+0x56],esp
  427a93:	stc    
  427a94:	pop    eax
  427a95:	mov    DWORD PTR [eax],eax
	...
  427a9f:	add    BYTE PTR [eax],al
  427aa1:	add    BYTE PTR [ecx+0xa],bh
  427aa4:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427aa8:	jge    0x427b15
  427aaa:	int3   
  427aab:	outs   dx,BYTE PTR ds:[esi]
  427aac:	xchg   esi,esi
  427aae:	jecxz  0x427a68
  427ab0:	cmc    
  427ab1:	push   esp
  427ab2:	xchg   dl,ch
  427ab4:	add    DWORD PTR [eax],eax
  427ab6:	sub    al,0x3
  427ab8:	add    BYTE PTR [eax],al
  427aba:	mov    al,ds:0xfe85bf16
  427abf:	mov    bl,0x33
  427ac1:	cdq    
  427ac2:	and    eax,0x526f8341
  427ac7:	jmp    0x427af5
  427ac9:	loopne 0x427a8b
  427acb:	stc    
  427acc:	aam    0x74
  427ace:	stos   BYTE PTR es:[edi],al
  427acf:	into   
  427ad0:	ror    ah,0xb8
  427ad3:	or     BYTE PTR [edi],ah
  427ad5:	push   ecx
  427ad6:	call   0x1c04:0xaefd56b6
  427add:	inc    ebp
  427ade:	and    DWORD PTR [esi],0x49bf1226
  427ae4:	loopne 0x427a70
  427ae6:	popa   
  427ae7:	mov    ah,0xbf
  427ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aea:	popa   
  427aeb:	aaa    
  427aec:	aas    
  427aed:	jle    0x427afd
  427aef:	(bad)  
  427af0:	sbb    eax,0xd74d4cd2
  427af5:	ret    0x1919
  427af8:	std    
  427af9:	add    ebp,ebx
  427afb:	jp     0x427b78
  427afd:	sub    DWORD PTR [eax+0x3a],ecx
  427b00:	cmp    edi,0x4a
  427b03:	inc    cl
  427b05:	adc    eax,0xf82e0500
  427b0a:	jge    0x427b1c
  427b0c:	sub    BYTE PTR [esi],dh
  427b0e:	stos   BYTE PTR es:[edi],al
  427b0f:	dec    eax
  427b10:	rol    DWORD PTR [ebp+0x410db68d],0x77
  427b17:	stos   BYTE PTR es:[edi],al
  427b18:	shl    bl,1
  427b1a:	and    eax,DWORD PTR [edi+0x39bcb173]
  427b20:	daa    
  427b21:	int3   
  427b22:	mov    bh,0x22
  427b24:	ds pop edx
  427b26:	es xor al,0xf
  427b29:	sbb    eax,0x846b39f1
  427b2e:	scas   al,BYTE PTR es:[edi]
  427b2f:	mov    fs,WORD PTR [edx-0x5e]
  427b32:	inc    ebp
  427b33:	mov    ds:0xeff19d96,eax
  427b38:	sti    
  427b39:	loope  0x427ae5
  427b3b:	xchg   edi,eax
  427b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b3d:	inc    ecx
  427b3e:	or     BYTE PTR [ecx+0x21],al
  427b41:	icebp  
  427b42:	mov    ds:0x903b5e1b,eax
  427b47:	je     0x427b1c
  427b49:	ss push ss
  427b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b4c:	cmp    dl,BYTE PTR [ebx]
  427b4e:	xor    al,0xa1
  427b50:	das    
  427b51:	push   edx
  427b52:	retf   
  427b53:	xchg   ebp,eax
  427b54:	push   cs
  427b55:	bound  ebx,QWORD PTR [ebp+eiz*2+0x3c]
  427b59:	dec    ecx
  427b5a:	sti    
  427b5b:	pop    eax
  427b5c:	push   0x25cd88a5
  427b61:	dec    edx
  427b62:	push   ebx
  427b63:	das    
  427b64:	lahf   
  427b65:	jecxz  0x427bba
  427b67:	inc    ebx
  427b68:	push   esp
  427b69:	int3   
  427b6a:	div    BYTE PTR [ebp-0x25b39d1f]
  427b70:	xor    BYTE PTR [esp+edx*4+0x59],dl
  427b74:	lds    edx,FWORD PTR [edx+0x6a]
  427b77:	xchg   esi,eax
  427b78:	test   ah,dl
  427b7a:	hlt    
  427b7b:	mov    esi,0xe386a31e
  427b80:	push   cs
  427b81:	into   
  427b82:	inc    edi
  427b83:	cmp    DWORD PTR [ecx+0x454479ab],ebx
  427b89:	lods   al,BYTE PTR ds:[esi]
  427b8a:	or     DWORD PTR [edi+0x23],0x5ec98c8f
  427b91:	shr    DWORD PTR [ecx+0x4a],1
  427b94:	outs   dx,BYTE PTR ds:[esi]
  427b95:	call   0x41cf:0x966fb38a
  427b9c:	inc    BYTE PTR [ecx+0x41]
  427b9f:	jmp    0xe25bafe1
  427ba4:	ins    BYTE PTR es:[edi],dx
  427ba5:	push   edi
  427ba6:	xor    bl,dh
  427ba8:	sub    al,0x7a
  427baa:	sbb    al,0x44
  427bac:	(bad)  
  427bad:	(bad)  
  427bae:	mov    ah,0xac
  427bb0:	mov    ch,0x27
  427bb2:	jmp    0xb5a2:0x619f8a4d
  427bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bba:	cmp    dh,BYTE PTR [ecx+0x76]
  427bbd:	adc    al,0x3c
  427bbf:	repz sbb DWORD PTR [eax-0x32a71292],ebx
  427bc6:	retf   
  427bc7:	inc    esi
  427bc8:	rcl    bh,1
  427bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bcb:	outs   dx,DWORD PTR ds:[esi]
  427bcc:	pop    DWORD PTR [eax+0x49694902]
  427bd2:	xlat   BYTE PTR ds:[ebx]
  427bd3:	mov    esi,0xeafd57b7
  427bd8:	dec    edx
  427bd9:	test   DWORD PTR [ecx+0x4d],esi
  427bdc:	add    BYTE PTR [ecx+esi*8+0x4b],0x96
  427be1:	mov    esp,0xd6cb6b82
  427be6:	xchg   esi,eax
  427be7:	mov    ds:0xce92a716,al
  427bec:	enter  0x84df,0xba
  427bf0:	add    dh,ah
  427bf2:	call   0x5c38:0x3846eaf2
  427bf9:	seta   BYTE PTR [edi]
  427bfc:	inc    edi
  427bfd:	or     DWORD PTR [esi-0x72],eax
  427c00:	arpl   WORD PTR [ecx-0x62a2d577],si
  427c06:	inc    ebp
  427c07:	mov    cs,WORD PTR [eax*4+0x11c2bc67]
  427c0e:	pop    esi
  427c0f:	xor    eax,0x3119ab6f
  427c14:	xor    BYTE PTR [esi-0x1b],0x6f
  427c18:	mov    bl,0x7e
  427c1a:	pop    esi
  427c1b:	dec    edi
  427c1c:	sbb    DWORD PTR [edx],0x2d7151f3
  427c22:	add    al,0x40
  427c24:	lods   al,BYTE PTR ds:[esi]
  427c25:	add    eax,0xc4e285a1
  427c2a:	mov    edx,0x59397260
  427c2f:	push   esp
  427c30:	fmul   DWORD PTR [ecx]
  427c32:	fidiv  DWORD PTR [ecx+ecx*4]
  427c35:	add    eax,0x2875adf3
  427c3a:	add    al,0xb2
  427c3c:	fsubr  DWORD PTR ss:[esi]
  427c3f:	push   edx
  427c40:	push   ebp
  427c41:	scas   eax,DWORD PTR es:[edi]
  427c42:	cwde   
  427c43:	or     DWORD PTR [edx+0x51],ecx
  427c46:	push   ebx
  427c47:	push   ecx
  427c48:	mov    ecx,0x14118eb5
  427c4d:	sbb    BYTE PTR [edx-0x272c85a1],ah
  427c53:	rol    DWORD PTR [ebx-0x691dc87],cl
  427c59:	lock imul BYTE PTR [edx]
  427c5c:	dec    esi
  427c5d:	xchg   ecx,eax
  427c5e:	push   0x14dc1415
  427c63:	(bad)  
  427c64:	jb     0x427c4a
  427c66:	dec    edi
  427c67:	sub    eax,0xbe904346
  427c6c:	and    DWORD PTR [edi-0x6c],esp
  427c6f:	rcl    DWORD PTR [eax+0x7f],0xaa
  427c73:	cwde   
  427c74:	jae    0x427c0d
  427c76:	call   0x8f6a:0x5aed1bd1
  427c7d:	mov    ds:0x81baeb21,al
  427c82:	mov    al,ds:0x5fe3dd2d
  427c87:	and    eax,0xcd3881ad
  427c8c:	and    cl,BYTE PTR [eax-0x76]
  427c8f:	pushf  
  427c90:	mov    ecx,0x2924db15
  427c95:	iret   
  427c96:	je     0x427c6b
  427c98:	into   
  427c99:	repnz mov WORD PTR [ecx+0x5a],ds
  427c9d:	shl    dh,0xe4
  427ca0:	mov    dh,0xee
  427ca2:	lock sub ch,BYTE PTR [ebx+0x6cee4af9]
  427ca9:	int    0x69
  427cab:	add    al,0xbb
  427cad:	add    ecx,DWORD PTR ds:0xdc148918
  427cb3:	test   DWORD PTR [eax],edi
  427cb5:	loop   0x427c42
  427cb7:	aad    0xee
  427cb9:	aam    0x2f
  427cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427cbc:	jbe    0x427d1e
  427cbe:	retf   0xb899
  427cc1:	repz jno 0x427cab
  427cc4:	cli    
  427cc5:	cdq    
  427cc6:	jmp    DWORD PTR [eax-0x63]
  427cc9:	cdq    
  427cca:	retf   
  427ccb:	xchg   ebx,eax
  427ccc:	cdq    
  427ccd:	std    
  427cce:	aam    0xdf
  427cd0:	daa    
  427cd1:	imul   edx,DWORD PTR [edi-0x3558ab98],0x58
  427cd8:	xor    DWORD PTR [edi],edx
  427cda:	neg    DWORD PTR ss:[ebx-0x1f]
  427cde:	fwait
  427cdf:	je     0x427d51
  427ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ce2:	cmp    eax,0x4188ff1c
  427ce7:	mov    cl,0x34
  427ce9:	fwait
  427cea:	xlat   BYTE PTR ds:[ebx]
  427ceb:	xor    ebx,DWORD PTR [ebp+0x3d58e65a]
  427cf1:	bound  edx,QWORD PTR [edx]
  427cf3:	dec    esp
  427cf4:	popf   
  427cf5:	jno    0x427d14
  427cf7:	cs push cs
  427cf9:	aam    0x73
  427cfb:	fdivrp st(4),st
  427cfd:	loopne 0x427cac
  427cff:	test   BYTE PTR [edx-0x30],ch
  427d02:	test   al,0xeb
  427d04:	retf   0x2775
  427d07:	adc    al,0xcf
  427d09:	cmc    
  427d0a:	nop
  427d0b:	inc    eax
  427d0c:	pop    esp
  427d0d:	aam    0xcb
  427d0f:	jmp    0xbdaf:0x1afcfaf0
  427d16:	and    ebx,DWORD PTR [esi+0x77]
  427d19:	add    BYTE PTR [ebx+0x10],cl
  427d1c:	mov    dl,0xe7
  427d1e:	out    0xc5,eax
  427d20:	icebp  
  427d21:	sub    edi,DWORD PTR [eax+ebp*8]
  427d24:	test   al,0x6d
  427d26:	pushf  
  427d27:	mov    ecx,0x319b9134
  427d2c:	pop    es
  427d2d:	adc    ecx,ebx
  427d2f:	pop    esp
  427d30:	aas    
  427d31:	xchg   ecx,eax
  427d32:	iret   
  427d33:	in     al,0xab
  427d35:	cld    
  427d36:	xor    esp,DWORD PTR [eax-0x220664b2]
  427d3c:	pusha  
  427d3d:	adc    DWORD PTR [ebx+0x32a789ea],ebx
  427d43:	fwait
  427d44:	sub    DWORD PTR [ecx],ebx
  427d46:	push   ecx
  427d47:	and    dh,BYTE PTR [edi+eiz*1]
  427d4a:	lds    ebp,FWORD PTR [esi-0x61a649da]
  427d50:	adc    ebx,DWORD PTR [edx]
  427d52:	outs   dx,BYTE PTR ds:[esi]
  427d53:	retf   
  427d54:	inc    eax
  427d55:	fidivr WORD PTR [edi]
  427d57:	aam    0xb8
  427d59:	cld    
  427d5a:	int3   
  427d5b:	xchg   ebp,esi
  427d5d:	call   0xf1aa8970
  427d62:	imul   ebx,DWORD PTR [ecx-0x1e],0x8c0f7fec
  427d69:	out    dx,al
  427d6a:	xchg   BYTE PTR [ecx+eiz*4],bl
  427d6d:	into   
  427d6e:	pop    ss
  427d6f:	xchg   ebp,eax
  427d70:	cmp    al,0xc4
  427d72:	pop    eax
  427d73:	aas    
  427d74:	out    dx,eax
  427d75:	fwait
  427d76:	sub    eax,DWORD PTR [eax]
  427d78:	scas   eax,DWORD PTR es:[edi]
  427d79:	fldcw  WORD PTR [esi-0x11c503f0]
  427d7f:	jle    0x427d95
  427d81:	or     bl,BYTE PTR [esi-0x1e229855]
  427d87:	mov    ch,cl
  427d89:	sub    al,cl
  427d8b:	adc    DWORD PTR [esi],0xd481d22f
  427d91:	jmp    0xafad3666
  427d96:	ror    DWORD PTR [ebp+0x4731b686],cl
  427d9c:	sbb    eax,0xe327eafe
  427da1:	cwde   
  427da2:	sbb    eax,0x36a60ff7
  427da7:	out    dx,eax
  427da8:	aaa    
  427da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427daa:	mov    edi,0x3b7d1a5e
  427daf:	fldenv ds:0x71d14912
  427db5:	mov    ecx,0xef1cfac6
  427dba:	jmp    0x427e18
  427dbc:	add    esi,ebp
  427dbe:	sbb    BYTE PTR [ebx+0x5],dh
  427dc1:	mov    ch,0x65
  427dc3:	jle    0x427dab
  427dc5:	aaa    
  427dc6:	aam    0x27
  427dc8:	jmp    0x6075:0xe61e444a
  427dcf:	mov    edx,0x7241a7b5
  427dd4:	je     0x427d70
  427dd6:	adc    eax,0xb4a6f3ab
  427ddb:	xchg   ebx,eax
  427ddc:	push   esi
  427ddd:	push   ds
  427dde:	adc    BYTE PTR [esi+eiz*4-0x5e],dl
  427de2:	push   ecx
  427de3:	jb     0x427e19
  427de5:	add    BYTE PTR [bx+si],al
	...
  427df0:	add    BYTE PTR [eax],al
  427df2:	pop    ecx
  427df3:	add    eax,ecx
  427df5:	inc    esp
  427df6:	fcmovnb st,st(6)
  427df8:	fstp   QWORD PTR [edi]
  427dfa:	sub    ebp,DWORD PTR [esi+0x5aff3eba]
  427e00:	fbstp  TBYTE PTR ds:[edx+0x2c0001ed]
  427e07:	add    eax,DWORD PTR [eax]
  427e09:	add    BYTE PTR [ebp-0x38],ch
  427e0c:	lods   al,BYTE PTR ds:[esi]
  427e0d:	xor    ecx,ecx
  427e0f:	sbb    edx,ebp
  427e11:	xchg   edx,eax
  427e12:	ja     0x427d9f
  427e14:	loope  0x427da4
  427e16:	mov    al,ds:0x3013e5de
  427e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e1c:	cmc    
  427e1d:	xor    ecx,esi
  427e1f:	fimul  WORD PTR [ecx]
  427e21:	inc    edx
  427e22:	push   edi
  427e23:	call   0x1ada:0x5e2d508a
  427e2a:	push   ebp
  427e2b:	adc    BYTE PTR [edx+0x7dc750e8],bl
  427e31:	(bad)  
  427e32:	pop    ebx
  427e33:	fcomp  st(4)
  427e35:	jns    0x427db9
  427e37:	fild   DWORD PTR [ebp+0x5dc5041e]
  427e3d:	retf   
  427e3e:	fisttp QWORD PTR [ebp+0xc49b596]
  427e44:	(bad)  
  427e46:	add    dh,BYTE PTR [ebp+eax*4-0x80]
  427e4a:	in     al,0xb3
  427e4c:	cmp    esp,DWORD PTR [ebx]
  427e4e:	pop    edi
  427e4f:	test   DWORD PTR [edi-0x4e],eax
  427e52:	dec    esi
  427e53:	dec    ebp
  427e54:	fbld   TBYTE PTR [ebx+ebp*4+0x54]
  427e58:	fstp   QWORD PTR [ebx-0x79]
  427e5b:	lods   eax,DWORD PTR ds:[esi]
  427e5c:	test   al,0x38
  427e5e:	repz sub DWORD PTR [eax],esp
  427e61:	mov    DWORD PTR [edx],esi
  427e63:	dec    ebx
  427e64:	shl    DWORD PTR [ecx+0x53],1
  427e67:	lock mov ebp,0xc529f1cf
  427e6d:	xor    al,0xf5
  427e6f:	xlat   BYTE PTR ds:[ebx]
  427e70:	dec    eax
  427e71:	inc    edx
  427e72:	jg     0x427e42
  427e74:	and    al,0x9c
  427e76:	xlat   BYTE PTR ds:[ebx]
  427e77:	sub    DWORD PTR [eax],edi
  427e79:	mov    edx,0x9fdd7513
  427e7e:	push   cs
  427e7f:	fwait
  427e80:	iret   
  427e81:	mov    esp,0xb7eb42cc
  427e86:	push   edx
  427e87:	aas    
  427e88:	repnz pushf 
  427e8a:	in     al,0x31
  427e8c:	cs (bad) 
  427e8e:	lods   al,BYTE PTR ds:[esi]
  427e8f:	jne    0x427e70
  427e91:	adc    al,0xed
  427e93:	jbe    0x427f04
  427e95:	outs   dx,BYTE PTR ds:[esi]
  427e96:	fs jae 0x427e37
  427e99:	add    ebp,DWORD PTR [eax+ecx*2]
  427e9c:	repnz xchg edi,eax
  427e9e:	addr16 hlt 
  427ea0:	enter  0x3724,0x1c
  427ea4:	mov    ds:0x93fce3a0,al
  427ea9:	sub    eax,0x1501f3bb
  427eae:	aam    0x77
  427eb0:	stos   BYTE PTR es:[edi],al
  427eb1:	pushf  
  427eb2:	mov    ebx,0xe52d1dde
  427eb7:	pop    ecx
  427eb8:	jbe    0x427eb8
  427eba:	inc    edx
  427ebb:	fild   QWORD PTR [ebx-0x5a85807]
  427ec1:	fstp   QWORD PTR [ebx+0x59]
  427ec4:	daa    
  427ec5:	bound  eax,QWORD PTR [ebx]
  427ec7:	nop
  427ec8:	cld    
  427ec9:	and    DWORD PTR [ebx-0x7434b423],ebp
  427ecf:	sti    
  427ed0:	or     BYTE PTR [ecx],dl
  427ed2:	repz xchg dh,ch
  427ed5:	cli    
  427ed6:	shl    BYTE PTR [ebx],0x27
  427ed9:	out    dx,eax
  427eda:	mov    ds:0xce3c64fe,al
  427edf:	outs   dx,BYTE PTR ds:[esi]
  427ee0:	les    cx,DWORD PTR [ebx+0x36]
  427ee4:	pop    edx
  427ee5:	stos   BYTE PTR es:[edi],al
  427ee6:	mov    bl,0xc
  427ee8:	push   esp
  427ee9:	push   ecx
  427eea:	dec    esi
  427eeb:	jmp    0x74f4:0x539fdf6d
  427ef2:	std    
  427ef3:	xchg   ebx,eax
  427ef4:	pusha  
  427ef5:	mov    ebp,0xcb125fd9
  427efa:	outs   dx,BYTE PTR ds:[esi]
  427efb:	ja     0x427f59
  427efd:	dec    edi
  427efe:	xchg   ebx,eax
  427eff:	push   ds
  427f00:	fsubr  QWORD PTR [ebp-0x1a93ac14]
  427f06:	add    BYTE PTR [ebx+0x6],bl
  427f09:	(bad)  
  427f0a:	mov    esi,0x30dff867
  427f0f:	lods   eax,DWORD PTR ds:[esi]
  427f10:	icebp  
  427f11:	cwde   
  427f12:	add    esi,esp
  427f14:	mov    cl,0xb0
  427f16:	mov    dh,BYTE PTR [edi+edi*1]
  427f19:	sub    DWORD PTR ds:0x2a21330c,eax
  427f1f:	rcl    DWORD PTR [edi+0x30c38230],1
  427f25:	fdivr  QWORD PTR ds:0x64392608
  427f2b:	(bad)  
  427f2c:	pop    ss
  427f2d:	xchg   esi,eax
  427f2e:	add    BYTE PTR [ecx+0x2b0b4e39],0x97
  427f35:	ds xchg ecx,eax
  427f37:	stc    
  427f38:	repz mov ch,ah
  427f3b:	(bad)  
  427f3d:	jb     0x427eed
  427f3f:	stos   DWORD PTR es:[edi],eax
  427f40:	cmp    eax,DWORD PTR [edi]
  427f42:	and    ebx,0x5a37168c
  427f48:	stos   BYTE PTR es:[edi],al
  427f49:	jmp    0x6ebd9a2a
  427f4e:	xchg   DWORD PTR [edi],edx
  427f50:	ret    0x48d5
  427f53:	fwait
  427f54:	sbb    ch,al
  427f56:	cdq    
  427f57:	inc    ecx
  427f58:	test   eax,0xce1f2887
  427f5d:	out    0x23,eax
  427f5f:	mov    eax,0xd4b86bf1
  427f64:	dec    eax
  427f65:	jmp    0x427f07
  427f67:	pop    ebp
  427f68:	adc    ebx,ebx
  427f6a:	bound  ebx,QWORD PTR [ecx]
  427f6c:	shl    BYTE PTR ds:0xea1fdc71,0x2f
  427f73:	daa    
  427f74:	sbb    al,0x66
  427f76:	dec    eax
  427f77:	sbb    ebp,DWORD PTR [eax+ecx*4-0x6982127c]
  427f7e:	jnp    0x427f44
  427f80:	stc    
  427f81:	mov    bl,0xba
  427f83:	cmp    bh,BYTE PTR [ebx-0x714cf4db]
  427f89:	hlt    
  427f8a:	mov    ebp,0x3eb54f5a
  427f8f:	cmp    BYTE PTR [edx-0x211feace],ah
  427f95:	pop    edx
  427f96:	mov    esp,0xaa7d04e5
  427f9b:	outs   dx,BYTE PTR ds:[esi]
  427f9c:	sub    eax,DWORD PTR [eax]
  427f9e:	loop   0x428013
  427fa0:	ds loopne 0x427fe3
  427fa3:	fwait
  427fa4:	pop    dx
  427fa6:	imul   ecx,edi,0xf77aad5d
  427fac:	sbb    DWORD PTR [edx-0xb],ebx
  427faf:	pop    edx
  427fb0:	mov    dl,0x50
  427fb2:	call   0xffb1685e
  427fb7:	jno    0x42802c
  427fb9:	pop    ecx
  427fba:	imul   esi,DWORD PTR [eax+0xa31d520],0x0
  427fc1:	jmp    0x42802d
  427fc3:	cmp    DWORD PTR [ebp+ecx*8+0x7758e930],esp
  427fca:	mov    DWORD PTR [edi-0x15],edx
  427fcd:	bnd jmp 0x5c3e1794
  427fd3:	repnz gs inc eax
  427fd6:	pushf  
  427fd7:	jge    0x427fdc
  427fd9:	adc    ecx,edx
  427fdb:	cmp    DWORD PTR [ebp+edx*2+0x16],edx
  427fdf:	hlt    
  427fe0:	out    dx,eax
  427fe1:	xchg   esp,eax
  427fe2:	and    al,0x13
  427fe4:	cmc    
  427fe5:	push   ds
  427fe6:	mov    ebx,0xb0dd8461
  427feb:	mov    al,0x80
  427fed:	jnp    0x42800b
  427fef:	cmp    eax,0xa0f1bf11
  427ff4:	jne    0x427fe2
  427ff6:	in     eax,dx
  427ff7:	adc    eax,0x9794c0aa
  427ffc:	shl    BYTE PTR [ecx+0x685b8859],1
  428002:	xor    eax,0x3400b365
  428007:	push   edi
  428008:	(bad)  
  428009:	lods   eax,DWORD PTR ds:[esi]
  42800a:	mov    WORD PTR [ebp+esi*8-0x2d],fs
  42800e:	sar    BYTE PTR [esi+0x77],0xe6
  428012:	aad    0x17
  428014:	push   ss
  428015:	sbb    bl,dh
  428017:	pop    ebx
  428018:	or     eax,DWORD PTR [eax-0x73]
  42801b:	push   ecx
  42801c:	mov    ds:0xf43d744f,al
  428021:	adc    DWORD PTR [ecx],ebx
  428023:	in     eax,dx
  428024:	cld    
  428025:	leave  
  428026:	stc    
  428027:	out    dx,al
  428028:	mov    esp,0x3bfa2ce1
  42802d:	jmp    0x427fd7
  42802f:	sub    ebp,DWORD PTR [ebx]
  428031:	mov    bl,0x2a
  428033:	sub    eax,0x2130b745
  428038:	inc    DWORD PTR [ecx+0x4f]
  42803b:	inc    edi
  42803c:	cmp    edi,edx
  42803e:	push   ecx
  42803f:	push   ebx
  428040:	fldenv [ebp-0x724241ec]
  428046:	jae    0x42801b
  428048:	rcl    BYTE PTR [ecx-0x38],0x56
  42804c:	lea    ecx,[esi]
  42804e:	call   0x4a5a7cf0
  428053:	(bad)  
  428054:	push   esp
  428055:	xchg   esp,eax
  428056:	jle    0x427fe8
  428058:	sbb    edi,esi
  42805a:	mov    edi,0x41686543
  42805f:	and    ebx,DWORD PTR [edi-0x76]
  428062:	mov    cl,0x4e
  428064:	in     al,0xf5
  428066:	lods   al,BYTE PTR ds:[esi]
  428067:	and    DWORD PTR [ebp+0x50],0xbe016238
  42806e:	jnp    0x4280b0
  428070:	sbb    DWORD PTR [edx+0x6f],eax
  428073:	mov    BYTE PTR [ecx-0x1acc00fc],dh
  428079:	mov    dl,0x95
  42807b:	loopne 0x428070
  42807d:	mov    esi,DWORD PTR [esi+0x34]
  428080:	pop    ecx
  428081:	inc    esi
  428082:	pop    ecx
  428083:	inc    esp
  428084:	mov    eax,ds:0x4dece473
  428089:	bound  ebx,QWORD PTR [ebp-0x7cb88f63]
  42808f:	cmp    eax,0x24a42666
  428094:	or     eax,0x809e0904
  428099:	cmp    edi,DWORD PTR [ecx+esi*4-0x74a62cbc]
  4280a0:	xchg   BYTE PTR [esi-0x17657789],bl
  4280a6:	into   
  4280a7:	mov    dh,dl
  4280a9:	pop    es
  4280aa:	mov    edx,0x85830d83
  4280af:	jns    0x4280ae
  4280b1:	and    esp,ebp
  4280b3:	cmp    al,0x81
  4280b5:	pop    ebx
  4280b6:	jl     0x42805b
  4280b8:	sub    ebp,DWORD PTR ss:[edi]
  4280bb:	(bad)  
  4280bc:	push   esi
  4280bd:	sar    BYTE PTR [ecx],cl
  4280bf:	retf   0x764a
  4280c2:	and    BYTE PTR [eax-0x1a],ah
  4280c5:	inc    edi
  4280c6:	mov    eax,0xadda1940
  4280cb:	or     DWORD PTR [eax],esp
  4280cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280ce:	push   edx
  4280cf:	jmp    FWORD PTR [ebx+ebx*1-0x7599a810]
  4280d6:	jbe    0x4280fd
  4280d8:	jecxz  0x428076
  4280da:	int3   
  4280db:	and    al,0xd4
  4280dd:	and    BYTE PTR [edx-0x22],dh
  4280e0:	das    
  4280e1:	aas    
  4280e2:	xchg   ebp,eax
  4280e3:	dec    ebp
  4280e4:	rcl    DWORD PTR [edx+0x61],0xb1
  4280e8:	pop    edx
  4280e9:	sub    al,0xdf
  4280eb:	mov    ebx,0x4a97bb2b
  4280f0:	push   ebp
  4280f1:	jmp    0xffc7:0x55a4e48f
  4280f8:	push   eax
  4280f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280fa:	cs ins BYTE PTR es:[edi],dx
  4280fc:	or     BYTE PTR [ecx+0x1958fd2c],cl
  428102:	xchg   ebp,eax
  428103:	mov    fs:0x4d9345e8,al
  428109:	mov    ebx,0xd3a500e4
  42810e:	sbb    eax,0x581de843
  428113:	xchg   ecx,eax
  428114:	pop    eax
  428115:	lds    esp,FWORD PTR [esi+0x3dc6dadd]
  42811b:	add    al,BYTE PTR [esi+0x6859ea5e]
  428121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428122:	das    
  428123:	xchg   ecx,eax
  428124:	ins    DWORD PTR es:[edi],dx
  428125:	scas   al,BYTE PTR es:[edi]
  428126:	push   es
  428127:	or     al,0x25
  428129:	shl    DWORD PTR [eax+0xc],cl
  42812c:	test   eax,0x843fa07f
  428131:	jmp    0x428106
  428133:	shl    BYTE PTR ds:0xcb,0x0
	...
  428142:	sbb    esp,DWORD PTR [edi]
  428144:	pushf  
  428145:	cli    
  428146:	mov    esp,0x2ae77ffb
  42814b:	scas   al,BYTE PTR es:[edi]
  42814c:	aad    0xf
  42814e:	aad    0xe2
  428150:	out    dx,al
  428151:	stc    
  428152:	fdivrp st(0),st
  428154:	add    DWORD PTR [eax],eax
  428156:	sub    al,0x3
  428158:	add    BYTE PTR [eax],al
  42815a:	push   0x28
  42815c:	mov    BYTE PTR [ebx],bh
  42815e:	jns    0x4281c3
  428160:	retf   0x9e88
  428163:	and    eax,0x41e43d0e
  428168:	pop    es
  428169:	sbb    eax,0xfd72af6f
  42816e:	add    DWORD PTR [ebp-0x40],eax
  428171:	xchg   edx,eax
  428172:	les    edi,FWORD PTR [edi]
  428174:	push   eax
  428175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428176:	jecxz  0x428135
  428178:	in     eax,dx
  428179:	lods   eax,DWORD PTR ds:[esi]
  42817a:	xor    DWORD PTR [eax],esi
  42817c:	sub    eax,DWORD PTR [edi]
  42817e:	xor    ebp,ebp
  428180:	stos   BYTE PTR es:[edi],al
  428181:	ss mov esi,0x5b79ce3a
  428187:	test   al,0xe7
  428189:	jge    0x4281dd
  42818b:	cld    
  42818c:	dec    edi
  42818d:	shr    BYTE PTR [ebx-0x1e12aeaa],cl
  428193:	jo     0x4281de
  428195:	mov    dl,0x16
  428197:	jae    0x4281d0
  428199:	jmp    0xe7fde646
  42819e:	ja     0x428199
  4281a0:	jno    0x428218
  4281a2:	into   
  4281a3:	jb     0x4281c6
  4281a5:	push   esi
  4281a6:	(bad)  
  4281a8:	mov    bl,dh
  4281aa:	push   esp
  4281ab:	push   ebx
  4281ac:	mov    ah,0xdc
  4281ae:	imul   ebp,DWORD PTR [eax+0x4eaf87cb],0x90dbeb0d
  4281b8:	(bad)  
  4281b9:	mov    esp,0x92d337e4
  4281be:	cwde   
  4281bf:	test   BYTE PTR [ecx],0x2a
  4281c2:	lock call 0x398cb055
  4281c8:	imul   ebp,edx,0xd3e9d1b
  4281ce:	and    ah,BYTE PTR [esi-0x232c3a9a]
  4281d4:	jmp    0xe77f0dda
  4281d9:	push   ebp
  4281da:	and    al,0xa5
  4281dc:	std    
  4281dd:	shr    BYTE PTR [edi+0x48],0x29
  4281e1:	fsubr  st(3),st
  4281e4:	sub    eax,0x3874da82
  4281e9:	loopne 0x4281d8
  4281eb:	(bad)  
  4281ec:	out    dx,al
  4281ed:	inc    eax
  4281ee:	push   0x7f893930
  4281f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f4:	push   edx
  4281f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281f6:	sub    DWORD PTR [edx],edx
  4281f8:	push   esp
  4281f9:	cmp    al,0x99
  4281fb:	jo     0x4281e4
  4281fd:	les    esp,FWORD PTR [edi-0x5fc2d2f1]
  428203:	mov    bl,0x68
  428205:	out    dx,eax
  428206:	stc    
  428207:	cmp    al,0xca
  428209:	fisttp DWORD PTR [ebx+0x18]
  42820c:	lea    ebp,[ebp+0x2a]
  42820f:	fisub  WORD PTR [esi]
  428211:	mov    WORD PTR [esi+0x3d5ef84d],ds
  428217:	fld    DWORD PTR [ebx-0x1c]
  42821a:	pop    ebp
  42821b:	out    dx,al
  42821c:	icebp  
  42821d:	jg     0x42828c
  42821f:	addr16 div dh
  428222:	mov    esp,0xc049c31b
  428227:	jmp    FWORD PTR [ecx+0x77]
  42822a:	mov    ecx,0xbf5e20cc
  42822f:	js     0x42820c
  428231:	mov    eax,ds:0x838eb8e0
  428236:	int    0x89
  428238:	jae    0x4281e8
  42823a:	xchg   ecx,eax
  42823b:	call   0x6058c892
  428240:	jmp    0x4282b1
  428242:	ins    DWORD PTR es:[edi],dx
  428243:	enter  0xafb3,0xc7
  428247:	stos   DWORD PTR es:[edi],eax
  428248:	add    bl,BYTE PTR [ebp+ecx*2-0x64]
  42824c:	dec    esi
  42824d:	je     0x4282a0
  42824f:	(bad)  
  428250:	scas   eax,DWORD PTR es:[edi]
  428251:	push   ax
  428253:	mov    ch,0xca
  428255:	push   edi
  428256:	setbe  BYTE PTR [esi+0x5a]
  42825a:	add    BYTE PTR [ecx-0x4d],dh
  42825d:	rcl    bl,1
  42825f:	into   
  428260:	jae    0x4281ee
  428262:	outs   dx,WORD PTR ds:[esi]
  428264:	in     eax,dx
  428265:	repz push edi
  428267:	sub    eax,0xb0f9bf60
  42826c:	push   esp
  42826d:	xor    al,0x4b
  42826f:	and    al,bl
  428271:	bound  edi,QWORD PTR [ebx-0x46af175f]
  428277:	hlt    
  428278:	(bad)  
  428279:	sar    BYTE PTR [edi],0x3b
  42827c:	outs   dx,DWORD PTR ds:[esi]
  42827d:	sahf   
  42827e:	jns    0x4282d4
  428280:	ret    
  428281:	add    eax,DWORD PTR ds:0x2df47761
  428287:	dec    ebp
  428288:	in     eax,dx
  428289:	(bad)  
  42828a:	and    cl,dl
  42828c:	ss cli 
  42828e:	mov    cl,0xc5
  428290:	adc    edx,eax
  428292:	(bad)
  428296:	inc    ebp
  428297:	imul   ebp,DWORD PTR [ebp-0x6d79a378],0xffffffb8
  42829e:	test   DWORD PTR [edi],ecx
  4282a0:	js     0x4282a0
  4282a2:	retf   0x87be
  4282a5:	shl    BYTE PTR [ebp-0x3235b163],0x64
  4282ac:	pop    ecx
  4282ad:	pusha  
  4282ae:	leave  
  4282af:	in     al,dx
  4282b0:	sahf   
  4282b1:	mov    ds:0x27c6b2c6,eax
  4282b6:	xchg   DWORD PTR [edi],ebp
  4282b8:	or     dh,bl
  4282ba:	and    BYTE PTR [ecx+ebp*4],bl
  4282bd:	push   edi
  4282be:	dec    edx
  4282bf:	das    
  4282c0:	jns    0x428251
  4282c2:	dec    ecx
  4282c3:	xchg   esp,eax
  4282c4:	icebp  
  4282c5:	jecxz  0x428300
  4282c7:	popa   
  4282c8:	stc    
  4282c9:	shr    DWORD PTR [ecx],0x37
  4282cc:	adc    ebp,DWORD PTR es:[ecx]
  4282cf:	inc    ebx
  4282d0:	dec    edx
  4282d1:	adc    eax,DWORD PTR cs:[eax-0x13]
  4282d5:	jl     0x4282f6
  4282d7:	xor    BYTE PTR [ebp+0x40],0x28
  4282db:	lock push eax
  4282dd:	fdiv   QWORD PTR [edi+0x67]
  4282e0:	pop    esp
  4282e1:	cmp    eax,0x7a941c85
  4282e6:	xchg   ecx,eax
  4282e7:	fild   QWORD PTR [edi-0x63]
  4282ea:	in     eax,dx
  4282eb:	or     al,0xc
  4282ed:	pop    esp
  4282ee:	out    0xf2,al
  4282f0:	fnstsw WORD PTR [ecx]
  4282f2:	repnz mov bh,0x9c
  4282f5:	sbb    BYTE PTR [edi+0x1d365cf3],0xd3
  4282fc:	(bad)  
  4282fd:	mov    bh,0x1d
  4282ff:	jl     0x4282f9
  428301:	jb     0x4282cd
  428303:	jp     0x4282d1
  428305:	sub    al,0x1a
  428307:	xchg   ecx,eax
  428308:	mov    esp,0xd4cdf86f
  42830d:	pop    esp
  42830e:	mov    ebx,edi
  428310:	cmp    DWORD PTR [ebp-0x28a8992],ecx
  428316:	(bad)  [esp+ecx*1-0x3c7bdc9d]
  42831d:	aas    
  42831e:	xchg   esi,eax
  42831f:	and    al,0x97
  428321:	xor    DWORD PTR [edx+0x211436db],esi
  428327:	inc    edx
  428328:	add    BYTE PTR [eax+0x3b],0xc4
  42832c:	mov    DWORD PTR [edi],ebx
  42832e:	adc    BYTE PTR [ebx+0x6f],0xbd
  428332:	ret    
  428333:	push   0xfdd6b1ff
  428338:	mov    dl,0x1f
  42833a:	fld    TBYTE PTR [ebp+0xe]
  42833d:	das    
  42833e:	fwait
  42833f:	jns    0x428390
  428341:	push   cs
  428342:	mov    bh,0x2d
  428344:	(bad)  
  428345:	xor    al,0xa6
  428347:	outs   dx,DWORD PTR ds:[esi]
  428348:	add    BYTE PTR [esi-0x621103fe],0x2
  42834f:	jmp    0x42839e
  428351:	xchg   DWORD PTR ds:0x5b0f966d,eax
  428357:	pop    ss
  428358:	loop   0x428320
  42835a:	sub    dh,cl
  42835c:	ret    
  42835d:	call   0xf131d25b
  428362:	pop    ss
  428363:	repnz int3 
  428365:	add    eax,DWORD PTR [eax+0x3e9733c9]
  42836b:	in     eax,0x7d
  42836d:	add    BYTE PTR [edi+ebp*8],0x8f
  428371:	dec    ebp
  428372:	mov    ebp,0x87d79b2d
  428377:	adc    BYTE PTR [edx-0x22],ah
  42837a:	dec    ecx
  42837b:	add    BYTE PTR [esp+edx*8+0x56],dl
  42837f:	std    
  428380:	lds    ebx,FWORD PTR [ebp+0x5e]
  428383:	inc    esp
  428384:	std    
  428385:	xchg   esp,eax
  428386:	in     al,0x12
  428388:	adc    DWORD PTR [edx+edx*2],esp
  42838b:	inc    edi
  42838c:	repz ror DWORD PTR [ebx+0xc9bd669],1
  428393:	pop    ecx
  428394:	jp     0x42840d
  428396:	ds loope 0x4283e4
  428399:	adc    BYTE PTR [edx-0x7e],0x8d
  42839d:	jnp    0x42834a
  42839f:	xor    eax,0xf6c4855a
  4283a4:	mov    ch,dh
  4283a6:	vpaddq ymm3,ymm6,YMMWORD PTR [esi+edx*4+0x76]
  4283ac:	test   eax,0x44603d93
  4283b1:	(bad)  
  4283b3:	cdq    
  4283b4:	mov    ch,0x78
  4283b6:	in     eax,dx
  4283b7:	mov    eax,ds:0xfad6da93
  4283bc:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4283be:	xchg   ecx,eax
  4283bf:	inc    edi
  4283c0:	sbb    DWORD PTR [edi+0x35],ecx
  4283c3:	pushf  
  4283c4:	stc    
  4283c5:	imul   ebx,edx,0x9dbf8066
  4283cb:	fbld   TBYTE PTR [eax+ecx*8+0x73]
  4283cf:	mov    esp,0x3dab2336
  4283d4:	lods   eax,DWORD PTR ds:[esi]
  4283d5:	outs   dx,BYTE PTR ds:[esi]
  4283d6:	mov    dh,0x27
  4283d8:	push   edi
  4283d9:	dec    esp
  4283da:	je     0x428362
  4283dc:	xor    DWORD PTR [ebx+eiz*4],ebx
  4283df:	sbb    ecx,0xffffff92
  4283e2:	push   esp
  4283e3:	push   ds
  4283e4:	push   esp
  4283e5:	mov    edi,0xe9726feb
  4283ea:	cmp    BYTE PTR [eax+0x36529b05],bl
  4283f0:	arpl   bx,dx
  4283f2:	mov    DWORD PTR [edx+0x2094f6c4],ebp
  4283f8:	dec    eax
  4283f9:	dec    edi
  4283fa:	mov    bh,0xcd
  4283fc:	pop    ds
  4283fd:	xlat   BYTE PTR ds:[ebx]
  4283fe:	imul   ecx,DWORD PTR [edx],0x9
  428401:	xchg   BYTE PTR [ebp-0x40],cl
  428404:	and    BYTE PTR [eax],bl
  428406:	dec    ecx
  428407:	mov    es,WORD PTR [ebx+ebx*1]
  42840a:	lods   al,BYTE PTR ds:[esi]
  42840b:	test   DWORD PTR [edi+0x62],0x84469b86
  428412:	inc    eax
  428413:	push   ebx
  428414:	je     0x4283ed
  428416:	add    ebx,DWORD PTR [eax+0x32]
  428419:	sbb    al,0x64
  42841b:	mov    esi,0x4651a6b6
  428420:	and    edi,DWORD PTR [eax-0x41e44134]
  428426:	mov    ebp,esp
  428428:	or     bl,BYTE PTR [ecx+0x6ae8b788]
  42842e:	xlat   BYTE PTR ds:[ebx]
  42842f:	(bad)  
  428430:	in     al,dx
  428431:	or     al,0xad
  428433:	icebp  
  428434:	lock xchg edi,eax
  428436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428437:	mov    esi,0xd3424f93
  42843c:	mov    dl,BYTE PTR [bp+0x10c3]
  428441:	pop    eax
  428442:	inc    edx
  428443:	ret    
  428444:	shr    BYTE PTR [ebx+ebx*2+0x4d],0x84
  428449:	pop    edx
  42844a:	and    bl,BYTE PTR ss:[eax+0x622829e3]
  428451:	jmp    0xe8ac:0x70feb3d9
  428458:	gs mov dh,0xec
  42845b:	call   0x3bbfb8bf
  428460:	test   BYTE PTR [edx+ecx*8+0x2f14bdea],dh
  428467:	jle    0x428438
  428469:	adc    DWORD PTR [edi],esi
  42846b:	pop    ebx
  42846c:	sub    BYTE PTR [esi+0x35],dh
  42846f:	mov    ebp,0xe05c300d
  428474:	sahf   
  428475:	outs   dx,BYTE PTR ds:[esi]
  428476:	stc    
  428477:	sbb    ebx,edx
  428479:	inc    ecx
  42847a:	mov    esi,0x89851272
  42847f:	push   0xffffffa0
  428481:	gs test ebp,0x1d6f
	...
  428490:	add    BYTE PTR [eax],al
  428492:	call   0xdafe:0xfef82244
  428499:	bound  di,DWORD PTR [eax-0x25d68b8b]
  4284a0:	ret    0xacd
  4284a3:	hlt    
  4284a4:	add    DWORD PTR [eax],eax
  4284a6:	sub    al,0x3
  4284a8:	add    BYTE PTR [eax],al
  4284aa:	mov    esp,0xe7da3259
  4284af:	cs dec ebp
  4284b1:	jle    0x428462
  4284b3:	cvtpi2ps xmm3,QWORD PTR [edi-0x4aa47cf6]
  4284ba:	adc    eax,0x2a65ee43
  4284bf:	mov    esi,0x1a349c79
  4284c4:	loop   0x42849c
  4284c6:	sbb    dl,BYTE PTR [ecx+0x5d5f25b6]
  4284cc:	sub    eax,0x4ecddb29
  4284d1:	push   ebp
  4284d2:	mov    cs,WORD PTR [eax]
  4284d4:	dec    ebx
  4284d5:	mov    esi,0xc4904506
  4284da:	mov    WORD PTR [eax+0x21],es
  4284dd:	sub    BYTE PTR [edx+0xd],ah
  4284e0:	push   es
  4284e1:	(bad)  
  4284e2:	jne    0x42853b
  4284e4:	fdiv   QWORD PTR [esi]
  4284e6:	imul   ebx,DWORD PTR [eax],0xfffffff6
  4284e9:	cmp    al,0x2e
  4284eb:	jle    0x428545
  4284ed:	mov    bh,0xeb
  4284ef:	sub    esi,DWORD PTR [ecx+0x78]
  4284f2:	sub    BYTE PTR [esi-0x3b],ch
  4284f5:	nop
  4284f6:	int    0x55
  4284f8:	jmp    0x99ea4fa1
  4284fd:	neg    DWORD PTR [esi]
  4284ff:	rol    DWORD PTR [esi+0x7ed209f0],1
  428505:	mov    bl,0x1f
  428507:	fst    st(0)
  428509:	clc    
  42850a:	mov    gs,WORD PTR [edi+0x1b91c1c]
  428510:	aaa    
  428511:	loopne 0x42849f
  428513:	adc    eax,0xe8f921d6
  428518:	leave  
  428519:	in     eax,dx
  42851a:	ins    DWORD PTR es:[edi],dx
  42851b:	mov    BYTE PTR [ecx+0x5a],cl
  42851e:	popf   
  42851f:	es (bad) 
  428521:	sbb    bh,BYTE PTR [ecx-0x7]
  428524:	pop    es
  428525:	lock test al,0xe1
  428528:	shr    BYTE PTR [esi-0x4a],1
  42852b:	or     ebx,0x3aca3630
  428531:	cmp    BYTE PTR ds:0xd6339ded,0x4c
  428538:	mov    bh,0x3c
  42853a:	call   0x1e8c:0x5a940065
  428541:	sti    
  428542:	xor    ah,BYTE PTR ds:0xdc27b33c
  428548:	pushf  
  428549:	inc    ebp
  42854a:	retf   
  42854b:	fild   WORD PTR [edx+0x2da06c7f]
  428551:	or     bl,BYTE PTR fs:[ebx-0x5706fc55]
  428558:	dec    ebp
  428559:	ins    DWORD PTR es:[edi],dx
  42855a:	inc    esp
  42855b:	imul   esp,edx,0xffffffc4
  42855e:	iret   
  42855f:	dec    esp
  428560:	(bad)  
  428561:	sub    eax,0xc6428d1f
  428566:	les    esp,FWORD PTR [ebx]
  428568:	inc    ebx
  428569:	fdivrp st(5),st
  42856b:	xor    al,0x65
  42856d:	mov    ds:0x7097270b,eax
  428572:	pop    ecx
  428573:	mov    ebx,0x282e353f
  428578:	lahf   
  428579:	cmp    al,0x92
  42857b:	add    esp,DWORD PTR [esp+eiz*2+0x75f12204]
  428582:	outs   dx,DWORD PTR ds:[esi]
  428583:	out    dx,eax
  428584:	mov    ds:0xbecfeea1,al
  428589:	pop    ecx
  42858a:	jl     0x4285ea
  42858c:	pusha  
  42858d:	sbb    cl,ch
  42858f:	rcl    BYTE PTR [eax+0x1d7b4cce],0xd8
  428596:	cwde   
  428597:	mov    cl,0x55
  428599:	add    eax,0xcfa00040
  42859e:	dec    ecx
  42859f:	scas   al,BYTE PTR es:[edi]
  4285a0:	mov    edi,0x63754d87
  4285a5:	jmp    0xe40064da
  4285aa:	stos   BYTE PTR es:[edi],al
  4285ab:	xor    al,0xb6
  4285ad:	push   ds
  4285ae:	push   ds
  4285af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285b0:	fisub  DWORD PTR [ecx+0x1d]
  4285b3:	(bad)  
  4285b4:	fbld   TBYTE PTR [eax-0x45726d9]
  4285ba:	inc    ebp
  4285bb:	fnstenv [edx+0x58b37024]
  4285c1:	or     BYTE PTR ds:0x4018dd15,0xfc
  4285c8:	adc    cl,BYTE PTR ds:0xa4ff2aee
  4285ce:	cmp    BYTE PTR [edi+eax*8+0x2eb1fb8e],ah
  4285d5:	pop    esp
  4285d6:	cmp    ah,BYTE PTR [esi+0x180bdd28]
  4285dc:	aaa    
  4285dd:	inc    ecx
  4285de:	por    mm2,mm0
  4285e1:	push   esp
  4285e2:	mov    ebp,0x810c0435
  4285e7:	repnz mov al,0x7
  4285ea:	fisttp QWORD PTR [eax-0x4e]
  4285ed:	in     al,0xc1
  4285ef:	int    0x12
  4285f1:	and    eax,0x6bb88327
  4285f6:	test   DWORD PTR cs:[ecx],eax
  4285f9:	imul   ebx,esp,0xfe3750d0
  4285ff:	ret    
  428600:	sub    esp,DWORD PTR [eax+0x63]
  428603:	adc    BYTE PTR [eax],0xba
  428606:	or     dl,BYTE PTR [ebx+0x343bcbdc]
  42860c:	fstp   DWORD PTR [edi]
  42860e:	push   esp
  42860f:	(bad)  
  428610:	ins    BYTE PTR es:[edi],dx
  428611:	loopne 0x428687
  428613:	cmc    
  428614:	push   esi
  428615:	push   0xffffffac
  428617:	test   BYTE PTR [ecx+eiz*4+0x18],0xc5
  42861c:	fsubrp st(2),st
  42861e:	jmp    0xfc9a:0x70d6de89
  428625:	and    bh,dh
  428627:	adc    ecx,DWORD PTR [ebx-0xa]
  42862a:	jne    0x428664
  42862c:	mov    edi,DWORD PTR ds:0x44590197
  428632:	add    eax,0x19e5c7f3
  428637:	in     al,dx
  428638:	inc    eax
  428639:	xor    DWORD PTR ss:[esi],esi
  42863c:	sar    DWORD PTR [esi-0x7e01917b],1
  428642:	std    
  428643:	stc    
  428644:	mov    edx,0x8eb86c9b
  428649:	or     al,0xc1
  42864b:	mov    BYTE PTR [eax+0x72a91347],dh
  428651:	iret   
  428652:	xor    eax,0x35600d7b
  428657:	sti    
  428658:	ret    
  428659:	addr16 sub dh,bl
  42865c:	fucomip st,st(2)
  42865e:	stos   DWORD PTR es:[edi],eax
  42865f:	or     BYTE PTR [edx],ch
  428661:	int    0x63
  428663:	popa   
  428664:	retf   0x87ce
  428667:	rol    eax,1
  428669:	dec    edi
  42866a:	sbb    DWORD PTR [ecx],edi
  42866c:	(bad)  
  42866d:	scas   eax,DWORD PTR es:[edi]
  42866e:	(bad)  
  42866f:	leave  
  428670:	clc    
  428671:	aam    0x55
  428673:	mov    eax,0x9c43b513
  428678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428679:	jp     0x428684
  42867b:	(bad)  
  42867c:	retf   
  42867d:	add    al,0xa5
  42867f:	mov    dh,0x8b
  428681:	add    bl,BYTE PTR [edx-0x21165e7e]
  428687:	in     al,0xa3
  428689:	test   al,0xba
  42868b:	lds    edx,FWORD PTR ds:0x88016220
  428691:	sbb    al,0xaa
  428693:	xchg   ebp,eax
  428694:	lds    ebp,FWORD PTR [eax+0x11aaebcd]
  42869a:	push   0xd5acc494
  42869f:	and    al,0x55
  4286a1:	call   0x68e4660a
  4286a6:	test   eax,0x22b6afd6
  4286ab:	cwde   
  4286ac:	or     BYTE PTR [bx],dl
  4286af:	aaa    
  4286b0:	mov    dl,0x7
  4286b2:	mov    edi,0xa1ef85f2
  4286b7:	inc    ecx
  4286b8:	xchg   DWORD PTR [ebx-0x203f5da1],ebp
  4286be:	mov    ah,0x6d
  4286c0:	in     eax,dx
  4286c1:	dec    edi
  4286c2:	out    0xbf,al
  4286c4:	mov    DWORD PTR [ecx],ebx
  4286c6:	xchg   edi,eax
  4286c7:	jp     0x428661
  4286c9:	push   0x23
  4286cb:	jecxz  0x4286d0
  4286cd:	pop    ebx
  4286ce:	test   BYTE PTR [ecx+0x64],bl
  4286d1:	xchg   ebp,eax
  4286d2:	test   al,0xd1
  4286d4:	push   edx
  4286d5:	test   BYTE PTR [edx],dl
  4286d7:	lahf   
  4286d8:	(bad)
  4286db:	popf   
  4286dc:	popa   
  4286dd:	dec    ebp
  4286de:	jle    0x428757
  4286e0:	pop    esp
  4286e1:	lahf   
  4286e2:	xor    ch,ah
  4286e4:	jmp    0x4286e6
  4286e6:	pop    eax
  4286e7:	and    eax,0x6ae629d4
  4286ec:	inc    edi
  4286ed:	cs or  dl,ah
  4286f0:	int3   
  4286f1:	and    esp,esp
  4286f3:	in     eax,dx
  4286f4:	in     eax,dx
  4286f5:	mov    edx,0xfd813ac3
  4286fa:	pop    eax
  4286fb:	int    0x88
  4286fd:	xchg   DWORD PTR [esi],edi
  4286ff:	leave  
  428700:	clc    
  428701:	mov    ch,BYTE PTR [edx+0x7610aa6e]
  428707:	dec    ecx
  428708:	mov    ?,ecx
  42870a:	fcmove st,st(7)
  42870c:	nop
  42870d:	adc    edx,edx
  42870f:	mov    ecx,0xc70642f5
  428714:	sub    DWORD PTR [eax+ebp*2-0x56ec3195],ebx
  42871b:	or     BYTE PTR [edx-0x40],ah
  42871e:	(bad)  
  42871f:	cld    
  428720:	jge    0x428734
  428722:	movq   QWORD PTR [ecx+esi*1],mm5
  428726:	fadd   st,st(0)
  428728:	dec    ebp
  428729:	fcom   QWORD PTR [edi]
  42872b:	push   0x206613cc
  428730:	test   al,0x81
  428732:	repnz mov edi,esp
  428735:	lea    eax,[edx-0x41ba1e9f]
  42873b:	outs   dx,DWORD PTR ds:[esi]
  42873c:	mov    ebp,fs
  42873e:	adc    al,0xdb
  428740:	pop    ebx
  428741:	sbb    al,0xb5
  428743:	push   esi
  428744:	js     0x428724
  428746:	sub    ch,bh
  428748:	inc    eax
  428749:	ficomp WORD PTR [edx-0x5314fb9]
  42874f:	sbb    bl,0x3f
  428752:	jb     0x4287a0
  428754:	repnz fdivr st,st(5)
  428757:	inc    edx
  428758:	scas   al,BYTE PTR es:[edi]
  428759:	push   esi
  42875a:	(bad)  
  42875b:	lea    esp,ds:0x6c225d5e
  428761:	and    ebx,eax
  428763:	mov    cl,0x32
  428765:	sub    edx,DWORD PTR [eax]
  428767:	and    DWORD PTR [ecx+0x2795f551],esp
  42876d:	fadd   QWORD PTR [edi]
  42876f:	mov    eax,0xf00ceebf
  428774:	dec    ebx
  428775:	mov    dl,0x9f
  428777:	xchg   ebx,eax
  428778:	xchg   ebx,eax
  428779:	leave  
  42877a:	scas   al,BYTE PTR es:[edi]
  42877b:	iret   
  42877c:	stos   DWORD PTR es:[edi],eax
  42877d:	pop    ebx
  42877e:	pop    ds
  42877f:	mov    ds:0xe61109bf,eax
  428784:	outs   dx,BYTE PTR ds:[esi]
  428785:	xor    ah,BYTE PTR [ebp-0x16]
  428788:	pop    eax
  428789:	cmp    ebx,DWORD PTR [ebx+0x18]
  42878c:	pop    ebx
  42878d:	neg    bl
  42878f:	imul   ebx,DWORD PTR [edi-0x5a74d9c5],0xd4145a10
  428799:	push   cs
  42879a:	js     0x42881a
  42879c:	jecxz  0x4287be
  42879e:	mov    al,0x71
  4287a0:	dec    esi
  4287a1:	jg     0x428791
  4287a3:	in     al,0x57
  4287a5:	mov    bh,0x22
  4287a7:	inc    ebp
  4287a8:	(bad)  
  4287a9:	adc    al,0x84
  4287ab:	cmp    al,0x5
  4287ad:	ins    DWORD PTR es:[edi],dx
  4287ae:	jge    0x4287c7
  4287b0:	and    dh,BYTE PTR ds:0x5b949e08
  4287b6:	adc    DWORD PTR [esi+0x57f166b],0x2ba78665
  4287c0:	shl    DWORD PTR [ebp-0x28],0x49
  4287c4:	retf   0x950c
  4287c7:	rcl    DWORD PTR [edx+0x15dc0994],0x2a
  4287ce:	js     0x4287af
  4287d0:	xchg   edx,eax
  4287d1:	loope  0x4287da
  4287d3:	xor    DWORD PTR [edx+eax*2],edi
	...
  4287e2:	nop
  4287e3:	stos   DWORD PTR es:[edi],eax
  4287e4:	es ret 
  4287e6:	aas    
  4287e7:	iret   
  4287e8:	cmc    
  4287e9:	sti    
  4287ea:	pushf  
  4287eb:	ds loop 0x4287da
  4287ee:	or     bh,BYTE PTR [ebp-0x8c94faa]
  4287f4:	add    DWORD PTR [eax],eax
  4287f6:	sub    al,0x3
  4287f8:	add    BYTE PTR [eax],al
  4287fa:	and    ah,BYTE PTR [ecx-0x2c]
  4287fd:	lds    ecx,FWORD PTR [edi-0x28cea273]
  428803:	je     0x4287e5
  428805:	sub    BYTE PTR [ebp-0x391719ff],dl
  42880b:	sti    
  42880c:	xchg   DWORD PTR [ebx+0x39f86513],ebx
  428812:	adc    bh,ch
  428814:	outs   dx,DWORD PTR ds:[esi]
  428815:	xor    BYTE PTR [edi-0x18],0xc1
  428819:	and    bl,0xe2
  42881c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42881d:	mov    eax,ds
  42881f:	mov    ecx,0x959c84c5
  428824:	call   0xffd3a0b7
  428829:	fnsave [edi-0x7811f873]
  42882f:	out    0x9,al
  428831:	xchg   DWORD PTR [ecx-0x40],ebp
  428834:	inc    esi
  428835:	in     al,dx
  428836:	and    edi,esi
  428838:	push   ss
  428839:	mov    edi,0x9cfd2410
  42883e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42883f:	loope  0x42889a
  428841:	add    eax,0xffc941e7
  428846:	stos   BYTE PTR es:[edi],al
  428847:	mov    edi,0x4faa00fc
  42884c:	mov    bl,0x33
  42884e:	cmp    DWORD PTR [ebp+0x390dd02b],0x1716918
  428858:	(bad)  
  42885a:	ror    ah,0x55
  42885d:	in     eax,0x5d
  42885f:	xchg   ebp,eax
  428860:	ret    
  428861:	ja     0x428804
  428863:	xor    BYTE PTR [esi+0x7a],0xef
  428867:	(bad)  
  428869:	xor    eax,0xba9875d0
  42886e:	call   0x15f2:0xed8445db
  428875:	cs pop eax
  428877:	std    
  428878:	ss xor cl,bh
  42887b:	add    eax,0x9d17c14b
  428880:	adc    ecx,DWORD PTR [esi]
  428882:	sar    BYTE PTR [esp+edi*8-0x11],0xe6
  428887:	dec    edx
  428888:	test   DWORD PTR [esi-0x6c11d9b8],0xf5260153
  428892:	gs stos BYTE PTR es:[edi],al
  428894:	ss test al,0xd
  428897:	ins    BYTE PTR es:[edi],dx
  428898:	pop    ebx
  428899:	icebp  
  42889a:	enter  0xf473,0xe1
  42889e:	loope  0x4288f9
  4288a0:	ret    
  4288a1:	out    dx,eax
  4288a2:	scas   al,BYTE PTR es:[edi]
  4288a3:	inc    esi
  4288a4:	mov    al,0x3f
  4288a6:	mov    ds:0x3592f265,eax
  4288ab:	cmp    eax,0xe3a1a5d2
  4288b0:	aas    
  4288b1:	test   dl,bh
  4288b3:	das    
  4288b4:	xor    al,0xbf
  4288b6:	mov    ecx,0x7288cb4f
  4288bb:	push   ds
  4288bc:	pop    ecx
  4288bd:	gs push edx
  4288bf:	sub    BYTE PTR [edx],bh
  4288c1:	sahf   
  4288c2:	enter  0x4c81,0xaa
  4288c6:	cdq    
  4288c7:	rcl    BYTE PTR [ebp+ecx*4+0x6],1
  4288cb:	push   0xffffffa8
  4288cd:	and    al,0x77
  4288cf:	xor    BYTE PTR [esi+0x1a8b9d44],bl
  4288d5:	add    BYTE PTR [eax],ch
  4288d7:	js     0x428926
  4288d9:	jmp    0x42894e
  4288db:	mov    esp,0x7e99a3f4
  4288e0:	mov    edx,0xe89a7760
  4288e5:	mov    dl,BYTE PTR [eax+0x3b]
  4288e8:	aam    0x79
  4288ea:	fisub  WORD PTR [ebp+eax*2+0x553128f1]
  4288f1:	and    al,0x6d
  4288f3:	lods   eax,DWORD PTR ds:[esi]
  4288f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4288f5:	push   cs
  4288f6:	stos   BYTE PTR es:[edi],al
  4288f7:	dec    esp
  4288f8:	retf   0x4bf7
  4288fb:	cmp    ebx,DWORD PTR [ebp-0x123c3fb5]
  428901:	pop    ss
  428902:	push   edi
  428903:	mov    ebp,ds
  428905:	push   es
  428906:	push   ds
  428907:	lods   eax,DWORD PTR ds:[esi]
  428908:	imul   edi,ebp,0x12a48b29
  42890e:	adc    bh,BYTE PTR [ebx+0x61c735c8]
  428914:	jae    0x42895e
  428916:	sbb    eax,0x8acd48d1
  42891b:	cmc    
  42891c:	and    edi,DWORD PTR [eax-0x3]
  42891f:	lahf   
  428920:	jge    0x428988
  428922:	iret   
  428923:	pop    edi
  428924:	or     al,0xde
  428926:	and    eax,0xa9033d16
  42892b:	mov    ds:0xe1e20476,eax
  428930:	add    BYTE PTR [edx],dl
  428932:	inc    ecx
  428933:	shr    BYTE PTR [edx-0x43],1
  428936:	dec    edi
  428937:	ret    0xefd2
  42893a:	ds loopne 0x428987
  42893d:	dec    esp
  42893e:	jmp    0x2ffbeee8
  428943:	ja     0x428928
  428945:	xchg   edi,eax
  428946:	cmp    esp,0xffffff8b
  428949:	cmp    eax,0x67538f0c
  42894e:	test   dh,ah
  428950:	in     eax,dx
  428951:	dec    edx
  428952:	push   0xfffffffd
  428954:	in     al,dx
  428955:	popa   
  428956:	mov    esp,0x8b7dbd51
  42895b:	imul   esi,edi,0xffffffee
  42895e:	jnp    0x42895a
  428960:	mov    cs,WORD PTR [ebp-0x23aeaeb7]
  428966:	xor    esi,0xfffffffe
  428969:	cmp    BYTE PTR [eax+0x7af56fc2],cl
  42896f:	stc    
  428970:	push   eax
  428971:	stos   DWORD PTR es:[edi],eax
  428972:	sbb    eax,eax
  428974:	in     eax,dx
  428975:	add    BYTE PTR gs:[edi+eax*4],bl
  428979:	popa   
  42897a:	gs punpckhwd mm0,mm0
  42897e:	into   
  42897f:	dec    esp
  428980:	push   esi
  428981:	jmp    0x4289be
  428983:	(bad)  
  428984:	retf   0xd6f8
  428987:	ret    0x14da
  42898a:	aaa    
  42898b:	mov    al,0x2
  42898d:	xor    ah,ch
  42898f:	mov    ah,BYTE PTR [edi+ecx*1]
  428992:	outs   dx,BYTE PTR ds:[esi]
  428993:	jmp    0xae38ccbd
  428998:	sbb    DWORD PTR [ebp-0x2e],eax
  42899b:	jl     0x4289bf
  42899d:	push   es
  42899e:	dec    edx
  42899f:	add    eax,eax
  4289a1:	(bad)  
  4289a2:	fst    DWORD PTR [edx]
  4289a4:	xchg   ecx,eax
  4289a5:	js     0x42895f
  4289a7:	add    ch,BYTE PTR [esi+esi*8-0x5bcfd53e]
  4289ae:	push   ebp
  4289af:	in     al,dx
  4289b0:	add    bl,BYTE PTR [eax-0x76]
  4289b3:	lods   al,BYTE PTR ds:[esi]
  4289b4:	push   ebx
  4289b5:	lahf   
  4289b6:	repz push ecx
  4289b8:	cwde   
  4289b9:	pop    ecx
  4289ba:	xchg   edx,eax
  4289bb:	sbb    ecx,esi
  4289bd:	pop    edx
  4289be:	pop    eax
  4289bf:	icebp  
  4289c0:	rsm    
  4289c2:	dec    BYTE PTR es:[esi+0x17]
  4289c6:	mov    ecx,0xadc74f8d
  4289cb:	cli    
  4289cc:	pop    esp
  4289cd:	ja     0x428a0c
  4289cf:	dec    esp
  4289d0:	bnd jns 0x428a00
  4289d3:	hlt    
  4289d4:	mov    ah,0x3
  4289d6:	adc    esp,DWORD PTR [esi-0xa68546c]
  4289dc:	sub    al,0x10
  4289de:	jns    0x4289e1
  4289e0:	icebp  
  4289e1:	pop    esi
  4289e2:	jne    0x4289dc
  4289e4:	push   eax
  4289e5:	xchg   ebp,eax
  4289e6:	xchg   ecx,eax
  4289e7:	mov    bh,BYTE PTR [ecx-0x2a]
  4289ea:	jmp    0x3ae7:0x4956194f
  4289f1:	out    dx,eax
  4289f2:	pushf  
  4289f3:	push   0x2f2dc88c
  4289f8:	pop    ecx
  4289f9:	push   ebx
  4289fa:	cld    
  4289fb:	cli    
  4289fc:	enter  0x66fa,0xad
  428a00:	mov    ebx,0xc5f1e03c
  428a05:	jnp    0x4289ef
  428a07:	xor    al,BYTE PTR cs:[edi]
  428a0a:	jb     0x4289ea
  428a0c:	loopne 0x428a42
  428a0e:	or     eax,0x5b16f56e
  428a13:	jge    0x428a13
  428a15:	or     edi,DWORD PTR [edx-0x680e4fa2]
  428a1b:	inc    ecx
  428a1c:	cmp    BYTE PTR [esi],bh
  428a1e:	xor    DWORD PTR ds:0xe643ab5e,esp
  428a24:	call   0x55d042fa
  428a29:	enter  0x2397,0xbf
  428a2d:	jge    0x428a85
  428a2f:	pop    DWORD PTR [edi]
  428a31:	clc    
  428a32:	and    BYTE PTR [eax-0x7a327db8],ah
  428a38:	iret   
  428a39:	add    esi,esi
  428a3b:	stos   DWORD PTR es:[edi],eax
  428a3c:	ret    0x326e
  428a3f:	pop    ss
  428a40:	and    DWORD PTR [ebx+0x14319e84],0xffffffaf
  428a47:	push   0x2a
  428a49:	out    dx,eax
  428a4a:	mov    BYTE PTR [eax+0x43],cl
  428a4d:	call   0x798e:0x208acfb3
  428a54:	fnstcw WORD PTR [esi-0x2f]
  428a57:	sbb    BYTE PTR [ebx+ebp*8],bl
  428a5a:	ret    0x3716
  428a5d:	push   edi
  428a5e:	pushf  
  428a5f:	scas   eax,DWORD PTR es:[edi]
  428a60:	mov    bh,0xc2
  428a62:	cli    
  428a63:	(bad)  
  428a65:	mov    ah,0x9d
  428a67:	fistp  DWORD PTR [edi*2+0x6fa9fdf4]
  428a6e:	stos   BYTE PTR es:[edi],al
  428a6f:	mov    bl,0x85
  428a71:	xchg   DWORD PTR [esi+ecx*2+0x62],esi
  428a75:	pop    ebp
  428a76:	loopne 0x428a57
  428a78:	mov    ds:0x69ed16b3,al
  428a7d:	fsub   QWORD PTR [eax+ebp*4]
  428a80:	mov    esp,0x8f848a75
  428a85:	lahf   
  428a86:	or     DWORD PTR [ebx-0x797912a1],0x8cd19f22
  428a90:	mov    dh,0x55
  428a92:	nop
  428a93:	inc    ebp
  428a94:	(bad)  
  428a95:	dec    edi
  428a96:	bound  esp,QWORD PTR [ebx-0x6888171f]
  428a9c:	mov    cl,0x11
  428a9e:	int    0xd
  428aa0:	lahf   
  428aa1:	mov    dh,0x4f
  428aa3:	cmp    bl,BYTE PTR [ecx+0x36]
  428aa6:	ins    BYTE PTR es:[edi],dx
  428aa7:	push   esp
  428aa8:	jp     0x428ad5
  428aaa:	jmp    0x2188887b
  428aaf:	and    al,0x5a
  428ab1:	cld    
  428ab2:	pop    ecx
  428ab3:	iret   
  428ab4:	or     esi,DWORD PTR [edx-0x6b]
  428ab7:	bound  eax,QWORD PTR [edx-0x2d19d7fd]
  428abd:	sbb    BYTE PTR [edi],0x7b
  428ac0:	mov    esi,0x6dcd0805
  428ac5:	jge    0x428a6a
  428ac7:	mov    bl,0x9
  428ac9:	cmp    al,0xad
  428acb:	push   ds
  428acc:	dec    esp
  428acd:	stos   BYTE PTR es:[edi],al
  428ace:	fidiv  WORD PTR ds:0x9bf0a6d6
  428ad4:	fcomp  st(6)
  428ad6:	aad    0x4c
  428ad8:	ffreep st(6)
  428ada:	pop    ecx
  428adb:	and    ch,ah
  428add:	or     DWORD PTR [ebx+0x23],ecx
  428ae0:	inc    ebp
  428ae1:	not    BYTE PTR [eax+0x3]
  428ae4:	popa   
  428ae5:	pop    edi
  428ae6:	hlt    
  428ae7:	jle    0x428ae4
  428ae9:	cmp    eax,0x66e019d4
  428aee:	cdq    
  428aef:	shr    DWORD PTR [edx],cl
  428af1:	add    BYTE PTR [edx-0x62d24ad9],0xc
  428af8:	scas   eax,DWORD PTR es:[edi]
  428af9:	lods   al,BYTE PTR ds:[esi]
  428afa:	loope  0x428afb
  428afc:	mov    edx,0xd142fa61
  428b01:	out    0x12,al
  428b03:	push   ss
  428b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b05:	jge    0x428b4e
  428b07:	push   edx
  428b08:	mov    ah,0x91
  428b0a:	icebp  
  428b0b:	daa    
  428b0c:	lds    edi,FWORD PTR [ecx+0xe]
  428b0f:	in     al,0x76
  428b11:	(bad)  
  428b12:	add    eax,0x5adbc738
  428b17:	iret   
  428b18:	cld    
  428b19:	add    ebp,ebx
  428b1b:	dec    esp
  428b1c:	in     al,0x45
  428b1e:	mov    eax,ds:0xae620b5f
  428b23:	les    esi,FWORD PTR [ebx-0x7c]
	...
  428b32:	std    
  428b33:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428b39:	stc    
  428b3a:	int    0xea
  428b3c:	xor    al,al
  428b3e:	imul   ecx,DWORD PTR [ebx],0x4e
  428b41:	in     eax,0x62
  428b43:	cli    
  428b44:	add    DWORD PTR [eax],eax
  428b46:	sub    al,0x3
  428b48:	add    BYTE PTR [eax],al
  428b4a:	add    ch,ch
  428b4c:	arpl   di,bp
  428b4e:	jp     0x428b2c
  428b50:	scas   al,BYTE PTR es:[edi]
  428b51:	or     ebp,DWORD PTR [eax+0x4a]
  428b54:	daa    
  428b55:	lahf   
  428b56:	pusha  
  428b57:	imul   edi,DWORD PTR [edx+0x0],0xffffffaf
  428b5b:	dec    BYTE PTR [ebx]
  428b5d:	ror    BYTE PTR [ebp+0x5b],cl
  428b60:	jmp    0x586aa1c2
  428b65:	push   ecx
  428b66:	in     eax,0xf5
  428b68:	(bad)  
  428b69:	fsubr  QWORD PTR [ebx+0x3f]
  428b6c:	mov    ebp,0x5d388682
  428b71:	mov    al,ds:0xebb1aa10
  428b76:	add    BYTE PTR es:[eax-0x38890421],0xf1
  428b7e:	jae    0x428bcf
  428b80:	inc    ebx
  428b81:	js     0x428bf3
  428b83:	inc    ebp
  428b84:	loopne 0x428b67
  428b86:	iret   
  428b87:	(bad)  
  428b88:	pop    ebp
  428b89:	fisttp WORD PTR [ecx-0x15]
  428b8c:	out    0x5e,eax
  428b8e:	sahf   
  428b8f:	mov    ebp,0x66a601ba
  428b94:	ja     0x428b68
  428b96:	and    edx,DWORD PTR [eax+0x2b]
  428b99:	push   edi
  428b9a:	out    dx,al
  428b9b:	out    dx,al
  428b9c:	xor    al,0x5
  428b9e:	sbb    edi,ebp
  428ba0:	out    dx,al
  428ba1:	jne    0x428beb
  428ba3:	ds cwde 
  428ba5:	xchg   DWORD PTR [ebp-0x651bf86a],ecx
  428bab:	sub    eax,0xe6f9c5e0
  428bb0:	mov    esp,0xfa71219a
  428bb5:	in     eax,dx
  428bb6:	pop    edi
  428bb7:	mov    eax,0xe9748e92
  428bbc:	mov    ds:0x4e2ef96c,al
  428bc1:	sub    eax,0x6ffa174f
  428bc6:	mov    ch,0x1a
  428bc8:	mov    bl,0xe5
  428bca:	xor    BYTE PTR [eax],0xb9
  428bcd:	or     dh,BYTE PTR [edx+edi*1+0x923cf18]
  428bd4:	dec    edx
  428bd5:	arpl   WORD PTR [esi],cx
  428bd7:	ss jb  0x428c1f
  428bda:	adc    eax,0xe6651e16
  428bdf:	push   es
  428be0:	lods   eax,DWORD PTR ds:[esi]
  428be1:	(bad)  [edi]
  428be3:	fs or  eax,0x3f7504de
  428be9:	push   edx
  428bea:	pushf  
  428beb:	jle    0x428c27
  428bed:	and    ebx,DWORD PTR [edx+eax*8]
  428bf0:	xchg   esp,eax
  428bf1:	js     0x428bb0
  428bf3:	les    esp,FWORD PTR [edi]
  428bf5:	mov    ebx,0xef4fee79
  428bfa:	bndldx bnd1,[edx-0x43]
  428bfe:	in     al,0x1d
  428c00:	lods   al,BYTE PTR ds:[esi]
  428c01:	repnz loope 0x428beb
  428c04:	cdq    
  428c05:	test   BYTE PTR [eax],ah
  428c07:	or     esp,edi
  428c09:	xchg   esp,ebp
  428c0b:	and    al,BYTE PTR [esi+0x56]
  428c0e:	cdq    
  428c0f:	mov    ebp,0xc3dfc837
  428c14:	ret    0x4eaa
  428c17:	jb     0x428c75
  428c19:	or     DWORD PTR [esi-0x4f],edi
  428c1c:	adc    ebp,esi
  428c1e:	aaa    
  428c1f:	mov    edx,0x943c84ca
  428c24:	loope  0x428c33
  428c26:	push   edi
  428c27:	pop    ebp
  428c28:	nop
  428c29:	lods   eax,DWORD PTR ds:[esi]
  428c2a:	cmp    DWORD PTR [ebp-0x749beae7],edi
  428c30:	int3   
  428c31:	(bad)  
  428c32:	aas    
  428c33:	sub    BYTE PTR [edi+edi*8-0x23],0xb8
  428c38:	aad    0xb6
  428c3a:	ret    
  428c3b:	mov    ah,0xe3
  428c3d:	jb     0x428cb6
  428c3f:	xchg   ebp,eax
  428c40:	mov    ds:0x7c5a0aa1,eax
  428c45:	jb     0x428c4e
  428c47:	ss mov cs,esi
  428c4a:	les    esi,FWORD PTR [ecx+0x67]
  428c4d:	test   BYTE PTR [ecx],cl
  428c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c50:	dec    esi
  428c51:	sub    al,0x5d
  428c53:	push   0xffffffc5
  428c55:	mov    ebx,DWORD PTR [ecx]
  428c57:	mov    bl,0xe5
  428c59:	sbb    cl,BYTE PTR [esp+eax*1]
  428c5c:	dec    ebx
  428c5d:	jmp    0x428bfc
  428c5f:	jle    0x428bf2
  428c61:	shr    DWORD PTR [ecx+0x7c0d2dcc],1
  428c67:	dec    edi
  428c68:	cmp    al,0xd3
  428c6a:	(bad)  
  428c6b:	jno    0x428c77
  428c6d:	mov    eax,ds:0xd3a529c8
  428c72:	pop    ebx
  428c73:	or     bl,BYTE PTR [esi+esi*4-0x28]
  428c77:	adc    DWORD PTR [esi],edx
  428c79:	mov    edi,0x8861cae9
  428c7e:	js     0x428c60
  428c80:	xchg   edi,eax
  428c81:	outs   dx,BYTE PTR ds:[esi]
  428c82:	xchg   esi,eax
  428c83:	pop    eax
  428c84:	ret    0xf512
  428c87:	or     ebp,DWORD PTR [edx+ecx*8+0x18]
  428c8b:	out    0x31,eax
  428c8d:	add    BYTE PTR [edx],dh
  428c8f:	and    al,0x9e
  428c91:	ss call 0xa4ab8405
  428c97:	int3   
  428c98:	aam    0xde
  428c9a:	lods   al,BYTE PTR ds:[esi]
  428c9b:	dec    edx
  428c9c:	shr    BYTE PTR [edi],cl
  428c9e:	out    dx,al
  428c9f:	jmp    0xcba34156
  428ca4:	jnp    0x428c50
  428ca6:	imul   edx,DWORD PTR [edx-0xdbef40],0x6855453c
  428cb0:	clc    
  428cb1:	xchg   ecx,ebx
  428cb3:	xlat   BYTE PTR ds:[ebx]
  428cb4:	sub    ebp,DWORD PTR [ecx-0x5]
  428cb7:	dec    ecx
  428cb8:	inc    ebx
  428cb9:	xchg   edx,eax
  428cba:	mov    ecx,DWORD PTR es:0x6d2fbc43
  428cc1:	inc    edi
  428cc2:	mov    ecx,0xe4b9c34d
  428cc7:	sub    al,0xb5
  428cc9:	dec    ecx
  428cca:	inc    edx
  428ccb:	mov    ebx,0xf28d23d5
  428cd0:	popf   
  428cd1:	xlat   BYTE PTR ds:[ebx]
  428cd2:	imul   ecx,esp,0x27
  428cd5:	cmp    ch,BYTE PTR gs:[eax-0x31]
  428cd9:	fidiv  DWORD PTR [edi-0x37fc5359]
  428cdf:	imul   edx,ebx,0x65123f23
  428ce5:	or     edx,esp
  428ce7:	int3   
  428ce8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  428cea:	cmp    bh,cl
  428cec:	into   
  428ced:	icebp  
  428cee:	ds loopne 0x428c80
  428cf1:	jnp    0x428c73
  428cf3:	jne    0x428cc8
  428cf5:	movntps XMMWORD PTR [ebp-0x8],xmm3
  428cf9:	pop    DWORD PTR [esi+edx*2]
  428cfc:	mov    bl,0xee
  428cfe:	xchg   edi,eax
  428cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d00:	loope  0x428d1e
  428d02:	cli    
  428d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d04:	jne    0x428cc8
  428d06:	pop    esi
  428d07:	mov    dl,BYTE PTR fs:[edi+0x16]
  428d0b:	adc    esi,DWORD PTR [esi+eax*1]
  428d0e:	test   bh,dl
  428d10:	mov    ch,0x51
  428d12:	popa   
  428d13:	mov    esp,0x2b8e0164
  428d18:	in     al,dx
  428d19:	popf   
  428d1a:	mov    eax,0xb35d682
  428d1f:	(bad)
  428d22:	pop    ds
  428d23:	and    ebx,DWORD PTR [edi-0x6]
  428d26:	mov    ebp,0x551c0c74
  428d2b:	pop    ds
  428d2c:	sbb    al,0x2
  428d2e:	mov    cl,0xef
  428d30:	mov    dl,0x64
  428d32:	out    dx,al
  428d33:	call   DWORD PTR [esi-0x37]
  428d36:	or     esp,DWORD PTR [esp+ebx*1]
  428d39:	mov    al,0xf7
  428d3b:	push   edi
  428d3c:	test   DWORD PTR [edx-0x7e],esp
  428d3f:	xor    eax,0xac0bc0fc
  428d44:	jl     0x428d36
  428d46:	mov    ds:0x7df23608,al
  428d4b:	arpl   WORD PTR gs:[edx+0x66b7d370],bp
  428d52:	outs   dx,DWORD PTR ds:[esi]
  428d53:	xor    ah,bl
  428d55:	and    ch,BYTE PTR [eax+edx*4+0x7a]
  428d59:	into   
  428d5a:	shr    DWORD PTR [ecx],0x2b
  428d5d:	rcr    DWORD PTR [esi],1
  428d5f:	pusha  
  428d60:	or     eax,0x756d4695
  428d65:	bound  edi,QWORD PTR [ecx+0x42]
  428d68:	mov    bh,BYTE PTR [ebp+edx*1-0x6d]
  428d6c:	ja     0x428d1b
  428d6e:	mov    al,0xe7
  428d70:	dec    edi
  428d71:	js     0x428d7a
  428d73:	(bad)  
  428d74:	mov    ecx,DWORD PTR [edx-0x786f8a5c]
  428d7a:	imul   ebp,DWORD PTR [eax+0x27],0xffffff99
  428d7e:	mov    esi,DWORD PTR [esi]
  428d80:	sbb    ecx,DWORD PTR [ebp+0x1b]
  428d83:	cmp    eax,0x722205e1
  428d88:	mov    esp,0x9cbaacdb
  428d8d:	fld    st(0)
  428d8f:	cmp    al,0x6b
  428d91:	push   ebx
  428d92:	pop    ss
  428d93:	not    DWORD PTR [esi-0x46]
  428d96:	mov    ecx,0xc9667b8f
  428d9b:	leave  
  428d9c:	jne    0x428d38
  428d9e:	jecxz  0x428df4
  428da0:	fisttp QWORD PTR [ebp-0x5d]
  428da3:	mov    ebp,0x536bf480
  428da8:	and    DWORD PTR [esi+0x54],0x992c0c38
  428daf:	jecxz  0x428d57
  428db1:	adc    ebx,DWORD PTR [edi-0x2d]
  428db4:	ucomiss xmm1,DWORD PTR [edi]
  428db7:	lds    esp,FWORD PTR [ecx-0xc]
  428dba:	push   eax
  428dbb:	cmp    BYTE PTR [edi+0x75cf8d70],dl
  428dc1:	jle    0x428d5c
  428dc3:	(bad)  
  428dc4:	fwait
  428dc5:	push   esi
  428dc6:	sub    eax,esp
  428dc8:	bound  esi,QWORD PTR [eax]
  428dca:	adc    BYTE PTR [edx-0x2d33b671],ch
  428dd0:	mov    eax,0x70fb34b6
  428dd5:	loope  0x428e23
  428dd7:	shr    BYTE PTR [edi+0x2fbe7fe5],cl
  428ddd:	(bad)  
  428dde:	adc    esi,esi
  428de0:	dec    ebp
  428de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428de2:	mov    edx,DWORD PTR [ebx]
  428de4:	or     al,0x4d
  428de6:	lea    esp,[ebx+esi*4-0x1f]
  428dea:	stos   BYTE PTR es:[edi],al
  428deb:	adc    eax,0x84904830
  428df0:	jno    0x428e56
  428df2:	jl     0x428e69
  428df4:	mov    ebx,?
  428df6:	xchg   edx,eax
  428df7:	xor    DWORD PTR [esi+0x705222ad],0xfe65c727
  428e01:	clc    
  428e02:	mov    eax,ds:0x254b58cf
  428e07:	or     al,0xa3
  428e09:	mov    ds:0x1457d830,eax
  428e0e:	jge    0x428e2c
  428e10:	jns    0x428e15
  428e12:	call   FWORD PTR [esp+edx*4+0x72da9f4e]
  428e19:	mov    ds:0x36bd625e,al
  428e1e:	mov    ebp,0x5e165c9e
  428e23:	leave  
  428e24:	inc    esp
  428e25:	test   al,0x14
  428e27:	mov    ecx,0x4d7fa697
  428e2c:	mov    ecx,0x2bd0e8e6
  428e31:	cld    
  428e32:	add    ch,BYTE PTR [ecx-0x37]
  428e35:	out    0x22,eax
  428e37:	adc    DWORD PTR [ecx],esi
  428e39:	test   BYTE PTR [esi-0x36533382],cl
  428e3f:	mov    ah,0xaa
  428e41:	xchg   BYTE PTR ds:0x50a59880,dh
  428e47:	sbb    eax,0xb6b4ae56
  428e4c:	sub    DWORD PTR [ecx-0x23],ecx
  428e4f:	sbb    edx,DWORD PTR [esi+0x49]
  428e52:	ins    BYTE PTR es:[edi],dx
  428e53:	popf   
  428e54:	mov    WORD PTR [edx-0x6f],es
  428e57:	in     al,0x84
  428e59:	ffree  st(4)
  428e5b:	pop    ebp
  428e5c:	hlt    
  428e5d:	out    0xb3,al
  428e5f:	jb     0x428df2
  428e61:	pop    es
  428e62:	xor    eax,0x45891c4e
  428e67:	inc    eax
  428e68:	addr16 jns 0x428ed7
  428e6b:	(bad)  
  428e6c:	div    DWORD PTR [edi]
  428e6e:	gs xor al,0xbe
  428e71:	mov    esi,0xaa4a35cc
	...
  428e82:	test   eax,0xf82c6051
  428e87:	cmp    eax,0x8ba9d5ed
  428e8c:	mov    ebx,0xcd00b592
  428e91:	int    0x8e
  428e93:	std    
  428e94:	add    DWORD PTR [eax],eax
  428e96:	sbb    eax,0x53000000
  428e9b:	pop    ebp
  428e9c:	mov    fs,edi
  428e9e:	outs   dx,DWORD PTR ds:[esi]
  428e9f:	jae    0x428ed2
  428ea1:	mov    ss,WORD PTR [esi-0x2b4c5059]
  428ea7:	test   DWORD PTR [ecx+0x6d0f9437],esp
  428ead:	jle    0x428ef6
  428eaf:	mov    DWORD PTR [edx],eax
  428eb1:	sbb    ah,BYTE PTR ds:0xb0a49bf
	...
