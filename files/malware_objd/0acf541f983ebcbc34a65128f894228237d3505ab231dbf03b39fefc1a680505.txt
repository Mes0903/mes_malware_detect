
0acf541f983ebcbc34a65128f894228237d3505ab231dbf03b39fefc1a680505.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	mov    ecx,DWORD PTR [ebp+0x8]
  401006:	lea    eax,[ebp+0xc]
  401009:	push   eax
  40100a:	push   ecx
  40100b:	push   edx
  40100c:	call   0x4048e6
  401011:	add    esp,0xc
  401014:	pop    ebp
  401015:	ret    
  401016:	int3   
  401017:	int3   
  401018:	int3   
  401019:	int3   
  40101a:	int3   
  40101b:	int3   
  40101c:	int3   
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	mov    DWORD PTR [ecx],0x4433e0
  401026:	jmp    0x403fd0
  40102b:	int3   
  40102c:	int3   
  40102d:	int3   
  40102e:	int3   
  40102f:	int3   
  401030:	push   ebp
  401031:	mov    ebp,esp
  401033:	push   esi
  401034:	mov    esi,ecx
  401036:	mov    DWORD PTR [esi],0x4433e0
  40103c:	call   0x403fd0
  401041:	test   BYTE PTR [ebp+0x8],0x1
  401045:	je     0x401050
  401047:	push   esi
  401048:	call   0x403ed2
  40104d:	add    esp,0x4
  401050:	mov    eax,esi
  401052:	pop    esi
  401053:	pop    ebp
  401054:	ret    0x4
  401057:	int3   
  401058:	int3   
  401059:	int3   
  40105a:	int3   
  40105b:	int3   
  40105c:	int3   
  40105d:	int3   
  40105e:	int3   
  40105f:	int3   
  401060:	push   ebp
  401061:	mov    ebp,esp
  401063:	push   ecx
  401064:	push   esi
  401065:	push   edi
  401066:	mov    edi,ecx
  401068:	push   0x0
  40106a:	lea    ecx,[ebp-0x4]
  40106d:	call   0x403e28
  401072:	mov    eax,DWORD PTR [edi+0x4]
  401075:	test   eax,eax
  401077:	je     0x401082
  401079:	cmp    eax,0xffffffff
  40107c:	jae    0x401082
  40107e:	dec    eax
  40107f:	mov    DWORD PTR [edi+0x4],eax
  401082:	mov    esi,DWORD PTR [edi+0x4]
  401085:	neg    esi
  401087:	sbb    esi,esi
  401089:	not    esi
  40108b:	lea    ecx,[ebp-0x4]
  40108e:	and    esi,edi
  401090:	call   0x403e50
  401095:	pop    edi
  401096:	mov    eax,esi
  401098:	pop    esi
  401099:	mov    esp,ebp
  40109b:	pop    ebp
  40109c:	ret    
  40109d:	int3   
  40109e:	int3   
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	push   ecx
  4010a4:	push   edi
  4010a5:	mov    edi,DWORD PTR [ecx]
  4010a7:	test   edi,edi
  4010a9:	je     0x4010e6
  4010ab:	push   0x0
  4010ad:	lea    ecx,[ebp-0x4]
  4010b0:	call   0x403e28
  4010b5:	mov    eax,DWORD PTR [edi+0x4]
  4010b8:	test   eax,eax
  4010ba:	je     0x4010c5
  4010bc:	cmp    eax,0xffffffff
  4010bf:	jae    0x4010c5
  4010c1:	dec    eax
  4010c2:	mov    DWORD PTR [edi+0x4],eax
  4010c5:	push   esi
  4010c6:	mov    esi,DWORD PTR [edi+0x4]
  4010c9:	neg    esi
  4010cb:	sbb    esi,esi
  4010cd:	lea    ecx,[ebp-0x4]
  4010d0:	not    esi
  4010d2:	call   0x403e50
  4010d7:	and    esi,edi
  4010d9:	je     0x4010e5
  4010db:	mov    eax,DWORD PTR [esi]
  4010dd:	mov    edx,DWORD PTR [eax]
  4010df:	push   0x1
  4010e1:	mov    ecx,esi
  4010e3:	call   edx
  4010e5:	pop    esi
  4010e6:	pop    edi
  4010e7:	mov    esp,ebp
  4010e9:	pop    ebp
  4010ea:	ret    
  4010eb:	int3   
  4010ec:	int3   
  4010ed:	int3   
  4010ee:	int3   
  4010ef:	int3   
  4010f0:	push   ebp
  4010f1:	mov    ebp,esp
  4010f3:	push   esi
  4010f4:	mov    esi,ecx
  4010f6:	mov    eax,DWORD PTR [esi+0x4]
  4010f9:	push   eax
  4010fa:	mov    DWORD PTR [esi],0x447994
  401100:	call   DWORD PTR ds:0x4432c0
  401106:	test   BYTE PTR [ebp+0x8],0x1
  40110a:	je     0x401113
  40110c:	push   esi
  40110d:	call   DWORD PTR ds:0x4432c8
  401113:	mov    eax,esi
  401115:	pop    esi
  401116:	pop    ebp
  401117:	ret    0x4
  40111a:	int3   
  40111b:	int3   
  40111c:	int3   
  40111d:	int3   
  40111e:	int3   
  40111f:	int3   
  401120:	push   ebp
  401121:	mov    ebp,esp
  401123:	push   ecx
  401124:	push   esi
  401125:	mov    esi,ecx
  401127:	mov    ecx,DWORD PTR [esi+0x4]
  40112a:	lea    eax,[ebp-0x4]
  40112d:	push   eax
  40112e:	push   ecx
  40112f:	mov    DWORD PTR [ebp-0x4],0x0
  401136:	call   DWORD PTR ds:0x4432b8
  40113c:	test   eax,eax
  40113e:	je     0x401143
  401140:	mov    DWORD PTR [esi+0x8],eax
  401143:	push   0x10
  401145:	call   DWORD PTR ds:0x4432c4
  40114b:	test   eax,eax
  40114d:	je     0x401166
  40114f:	mov    esi,DWORD PTR [esi+0x8]
  401152:	mov    ecx,DWORD PTR [ebp-0x4]
  401155:	mov    DWORD PTR [eax+0x8],esi
  401158:	mov    DWORD PTR [eax],0x447994
  40115e:	mov    DWORD PTR [eax+0x4],ecx
  401161:	pop    esi
  401162:	mov    esp,ebp
  401164:	pop    ebp
  401165:	ret    
  401166:	xor    eax,eax
  401168:	pop    esi
  401169:	mov    esp,ebp
  40116b:	pop    ebp
  40116c:	ret    
  40116d:	int3   
  40116e:	int3   
  40116f:	int3   
  401170:	push   ebp
  401171:	mov    ebp,esp
  401173:	sub    esp,0xc
  401176:	push   ebx
  401177:	push   esi
  401178:	xor    esi,esi
  40117a:	xor    ebx,ebx
  40117c:	push   edi
  40117d:	mov    edi,eax
  40117f:	mov    DWORD PTR [ebp-0x8],esi
  401182:	cmp    DWORD PTR [ebp+0x8],esi
  401185:	jle    0x4011f6
  401187:	mov    edx,DWORD PTR ds:0x44e860
  40118d:	mov    al,dl
  40118f:	mov    cl,0x4d
  401191:	imul   cl
  401193:	sub    al,0x66
  401195:	mov    BYTE PTR [ebp-0x1],al
  401198:	mov    al,dl
  40119a:	add    al,al
  40119c:	sub    edx,edi
  40119e:	mov    BYTE PTR [ebp-0x2],al
  4011a1:	mov    ecx,edi
  4011a3:	mov    DWORD PTR [ebp-0xc],edx
  4011a6:	mov    eax,esi
  4011a8:	cdq    
  4011a9:	mov    edi,0x4d
  4011ae:	idiv   edi
  4011b0:	mov    eax,DWORD PTR [ebp-0x8]
  4011b3:	sub    dl,BYTE PTR ds:0x44e868
  4011b9:	add    dl,BYTE PTR [ebp-0x1]
  4011bc:	add    dl,BYTE PTR [ebp-0x2]
  4011bf:	add    dl,bl
  4011c1:	xor    BYTE PTR [ecx],dl
  4011c3:	mov    edx,DWORD PTR [ebp-0xc]
  4011c6:	add    edx,ecx
  4011c8:	add    eax,edx
  4011ca:	mov    DWORD PTR [ebp-0x8],eax
  4011cd:	lea    edi,[eax+0x2]
  4011d0:	mov    eax,ds:0x44e854
  4011d5:	cdq    
  4011d6:	idiv   edi
  4011d8:	sub    eax,DWORD PTR ds:0x44e858
  4011de:	cmp    eax,DWORD PTR ds:0x44e86c
  4011e4:	jle    0x4011ec
  4011e6:	inc    DWORD PTR ds:0x44e858
  4011ec:	inc    ebx
  4011ed:	add    esi,0x3
  4011f0:	inc    ecx
  4011f1:	cmp    ebx,DWORD PTR [ebp+0x8]
  4011f4:	jl     0x4011a6
  4011f6:	pop    edi
  4011f7:	pop    esi
  4011f8:	pop    ebx
  4011f9:	mov    esp,ebp
  4011fb:	pop    ebp
  4011fc:	ret    0x4
  4011ff:	int3   
  401200:	push   ebp
  401201:	mov    ebp,esp
  401203:	and    esp,0xffffffc0
  401206:	mov    eax,0x16f4
  40120b:	call   0x40e5b0
  401210:	mov    eax,ds:0x44b470
  401215:	xor    eax,esp
  401217:	mov    DWORD PTR [esp+0x16f0],eax
  40121e:	mov    eax,DWORD PTR [ebp+0x8]
  401221:	mov    ecx,DWORD PTR [ebp+0x14]
  401224:	push   ebx
  401225:	push   esi
  401226:	push   edi
  401227:	mov    DWORD PTR [esp+0x64],eax
  40122b:	mov    ds:0x44e85c,eax
  401230:	mov    DWORD PTR [esp+0x360],eax
  401237:	xor    eax,eax
  401239:	push   0x1
  40123b:	xor    edx,edx
  40123d:	mov    DWORD PTR [esp+0x234],eax
  401244:	mov    DWORD PTR [esp+0x244],eax
  40124b:	push   0x1
  40124d:	mov    DWORD PTR [esp+0x238],edx
  401254:	mov    DWORD PTR [esp+0x248],edx
  40125b:	lea    edx,[esp+0x60]
  40125f:	push   edx
  401260:	mov    DWORD PTR [esp+0x44],ecx
  401264:	mov    DWORD PTR [esp+0x234],eax
  40126b:	mov    DWORD PTR [esp+0x238],eax
  401272:	mov    DWORD PTR [esp+0x240],eax
  401279:	mov    DWORD PTR [esp+0x244],eax
  401280:	mov    DWORD PTR [esp+0x248],eax
  401287:	mov    DWORD PTR [esp+0x250],eax
  40128e:	mov    DWORD PTR [esp+0x64],eax
  401292:	mov    DWORD PTR [esp+0x68],eax
  401296:	xor    ecx,ecx
  401298:	push   0x2
  40129a:	xor    esi,esi
  40129c:	mov    ebx,0x117
  4012a1:	lea    eax,[esp+0x238]
  4012a8:	mov    WORD PTR [esp+0x244],cx
  4012b0:	push   eax
  4012b1:	mov    ecx,ebx
  4012b3:	push   0x1
  4012b5:	mov    DWORD PTR [esp+0x6c],esi
  4012b9:	mov    DWORD PTR [esp+0x48],ebx
  4012bd:	mov    DWORD PTR [esp+0x240],esi
  4012c4:	mov    DWORD PTR [esp+0x244],esi
  4012cb:	mov    WORD PTR [esp+0x25c],cx
  4012d3:	mov    DWORD PTR [esp+0x250],ebx
  4012da:	mov    DWORD PTR [esp+0x254],esi
  4012e1:	mov    DWORD PTR [esp+0x70],esi
  4012e5:	mov    DWORD PTR [esp+0x74],0x1
  4012ed:	call   DWORD PTR ds:0x4431e0
  4012f3:	mov    ecx,DWORD PTR ds:0x44e854
  4012f9:	mov    edx,DWORD PTR ds:0x44e858
  4012ff:	lea    ecx,[ecx+edx*1-0x4]
  401303:	mov    DWORD PTR ds:0x44e854,ecx
  401309:	cmp    eax,esi
  40130b:	jne    0x4013c8
  401311:	mov    eax,DWORD PTR [esp+0x22c]
  401318:	mov    DWORD PTR [esp+0x40],eax
  40131c:	cmp    eax,esi
  40131e:	je     0x401388
  401320:	xor    eax,eax
  401322:	mov    DWORD PTR [esp+0x90],eax
  401329:	mov    DWORD PTR [esp+0x94],eax
  401330:	mov    DWORD PTR [esp+0xa0],eax
  401337:	mov    DWORD PTR [esp+0x98],eax
  40133e:	mov    DWORD PTR [esp+0x9c],eax
  401345:	mov    DWORD PTR [esp+0xa4],eax
  40134c:	mov    DWORD PTR [esp+0xa8],eax
  401353:	lea    eax,[esp+0x8c]
  40135a:	lea    edx,[esp+0xa98]
  401361:	push   eax
  401362:	mov    DWORD PTR [esp+0x90],0x20
  40136d:	mov    DWORD PTR [esp+0x94],esi
  401374:	mov    DWORD PTR [esp+0x98],edx
  40137b:	mov    DWORD PTR [esp+0xa4],ebx
  401382:	call   DWORD PTR ds:0x443130
  401388:	mov    edi,DWORD PTR [esp+0x40]
  40138c:	inc    DWORD PTR ds:0x44e854
  401392:	cmp    edi,esi
  401394:	jge    0x4013a5
  401396:	mov    ebx,0x314
  40139b:	xor    edi,edi
  40139d:	mov    DWORD PTR [esp+0x30],ebx
  4013a1:	mov    DWORD PTR [esp+0x40],edi
  4013a5:	mov    ecx,DWORD PTR ds:0x44e858
  4013ab:	lea    edx,[ecx+ecx*1-0x4]
  4013af:	sub    edx,edi
  4013b1:	mov    DWORD PTR ds:0x44e858,edx
  4013b7:	cmp    edi,esi
  4013b9:	jne    0x4013d5
  4013bb:	mov    DWORD PTR [esp+0x28],0x751
  4013c3:	jmp    0x40154f
  4013c8:	mov    DWORD PTR [esp+0x40],0x2
  4013d0:	jmp    0x401320
  4013d5:	lea    eax,[esp+0x60]
  4013d9:	push   eax
  4013da:	push   0x5
  4013dc:	push   edi
  4013dd:	mov    DWORD PTR [esp+0x34],esi
  4013e1:	mov    DWORD PTR [esp+0x6c],esi
  4013e5:	call   DWORD PTR ds:0x44300c
  4013eb:	cmp    eax,ebx
  4013ed:	jne    0x40144d
  4013ef:	mov    ecx,DWORD PTR [esp+0x60]
  4013f3:	movzx  edx,WORD PTR [ecx]
  4013f6:	add    edx,0x2
  4013f9:	push   edx
  4013fa:	push   0x40
  4013fc:	call   DWORD PTR ds:0x443118
  401402:	mov    esi,eax
  401404:	xor    edi,edi
  401406:	cmp    esi,edi
  401408:	jne    0x401410
  40140a:	xor    ebx,ebx
  40140c:	mov    DWORD PTR [esp+0x30],ebx
  401410:	mov    eax,DWORD PTR [esp+0x60]
  401414:	movzx  ecx,WORD PTR [eax]
  401417:	mov    edx,DWORD PTR [eax+0x4]
  40141a:	push   ecx
  40141b:	push   edx
  40141c:	push   esi
  40141d:	call   0x4045c0
  401422:	add    esp,0xc
  401425:	push   esi
  401426:	call   DWORD PTR ds:0x4430f8
  40142c:	mov    eax,DWORD PTR [esp+0x60]
  401430:	push   eax
  401431:	call   DWORD PTR ds:0x443004
  401437:	cmp    ebx,eax
  401439:	je     0x40145a
  40143b:	lea    ecx,[esp+0x10f0]
  401442:	push   ecx
  401443:	call   0x40479f
  401448:	add    esp,0x4
  40144b:	jmp    0x40145a
  40144d:	push   eax
  40144e:	call   DWORD PTR ds:0x443000
  401454:	mov    DWORD PTR [esp+0x30],eax
  401458:	xor    edi,edi
  40145a:	lea    edx,[esp+0x468]
  401461:	push   edx
  401462:	push   0x445aa8
  401467:	mov    DWORD PTR [esp+0x34],edi
  40146b:	mov    DWORD PTR [esp+0x4c],edi
  40146f:	mov    DWORD PTR [esp+0x44],edi
  401473:	mov    DWORD PTR [esp+0x50],edi
  401477:	call   0x40479f
  40147c:	add    esp,0x8
  40147f:	nop
  401480:	lea    eax,[esp+0x48]
  401484:	push   eax
  401485:	lea    ecx,[esp+0x40]
  401489:	push   ecx
  40148a:	lea    edx,[esp+0x4c]
  40148e:	push   edx
  40148f:	push   0xffffffff
  401491:	lea    eax,[esp+0x3c]
  401495:	push   eax
  401496:	push   0x2
  401498:	push   0x0
  40149a:	lea    ecx,[esp+0x484]
  4014a1:	push   ecx
  4014a2:	call   DWORD PTR ds:0x4431e8
  4014a8:	mov    edi,eax
  4014aa:	test   edi,edi
  4014ac:	je     0x4014d2
  4014ae:	cmp    edi,0xea
  4014b4:	je     0x4014d2
  4014b6:	lea    edx,[esp+0x1048]
  4014bd:	push   edi
  4014be:	push   edx
  4014bf:	call   0x4043cb
  4014c4:	add    eax,0x40
  4014c7:	push   eax
  4014c8:	call   0x404a3a
  4014cd:	add    esp,0xc
  4014d0:	jmp    0x40151b
  4014d2:	mov    esi,DWORD PTR [esp+0x2c]
  4014d6:	test   esi,esi
  4014d8:	je     0x401530
  4014da:	xor    ebx,ebx
  4014dc:	cmp    DWORD PTR [esp+0x44],ebx
  4014e0:	jbe    0x40151f
  4014e2:	test   esi,esi
  4014e4:	je     0x401502
  4014e6:	mov    eax,DWORD PTR [esi]
  4014e8:	push   eax
  4014e9:	push   0x445ab0
  4014ee:	call   0x40479f
  4014f3:	inc    ebx
  4014f4:	add    esp,0x8
  4014f7:	add    esi,0x4
  4014fa:	cmp    ebx,DWORD PTR [esp+0x44]
  4014fe:	jb     0x4014e2
  401500:	jmp    0x40151b
  401502:	lea    ecx,[esp+0xba0]
  401509:	push   ecx
  40150a:	call   0x4043cb
  40150f:	add    eax,0x40
  401512:	push   eax
  401513:	call   0x404a3a
  401518:	add    esp,0x8
  40151b:	mov    esi,DWORD PTR [esp+0x2c]
  40151f:	test   esi,esi
  401521:	je     0x401530
  401523:	push   esi
  401524:	call   DWORD PTR ds:0x4431ec
  40152a:	xor    esi,esi
  40152c:	mov    DWORD PTR [esp+0x2c],esi
  401530:	cmp    edi,0xea
  401536:	je     0x401480
  40153c:	test   esi,esi
  40153e:	je     0x401547
  401540:	push   esi
  401541:	call   DWORD PTR ds:0x4431ec
  401547:	mov    ebx,DWORD PTR [esp+0x30]
  40154b:	mov    edi,DWORD PTR [esp+0x40]
  40154f:	mov    edx,DWORD PTR [esp+0x38]
  401553:	mov    DWORD PTR [esp+0x2c],edx
  401557:	call   DWORD PTR ds:0x443120
  40155d:	mov    DWORD PTR [esp+0x44],eax
  401561:	lea    eax,[esp+0x178]
  401568:	push   eax
  401569:	call   DWORD PTR ds:0x443134
  40156f:	cmp    WORD PTR [esp+0x1c2],0x0
  401578:	jne    0x401585
  40157a:	mov    ecx,DWORD PTR [esp+0x220]
  401581:	mov    DWORD PTR [esp+0x44],ecx
  401585:	mov    esi,DWORD PTR ds:0x44e854
  40158b:	cmp    esi,DWORD PTR ds:0x44e858
  401591:	jg     0x4015a0
  401593:	mov    eax,edi
  401595:	sub    eax,DWORD PTR [esp+0xc0]
  40159c:	mov    DWORD PTR [esp+0x2c],eax
  4015a0:	cmp    WORD PTR [esp+0x1be],0x0
  4015a9:	je     0x4015e2
  4015ab:	mov    edx,DWORD PTR [esp+0x28]
  4015af:	push   edx
  4015b0:	lea    eax,[edi+0x1]
  4015b3:	push   eax
  4015b4:	call   0x404580
  4015b9:	add    esp,0x8
  4015bc:	test   eax,eax
  4015be:	je     0x4015eb
  4015c0:	mov    ecx,DWORD PTR ds:0x44e858
  4015c6:	xor    ebx,ebx
  4015c8:	sub    esi,ecx
  4015ca:	mov    DWORD PTR [esp+0x30],ebx
  4015ce:	cmp    esi,DWORD PTR ds:0x44e86c
  4015d4:	jle    0x4015fd
  4015d6:	mov    edx,DWORD PTR [esp+0x2c]
  4015da:	add    edx,ecx
  4015dc:	mov    DWORD PTR [esp+0x48],edx
  4015e0:	jmp    0x4015fd
  4015e2:	lea    eax,[esp+0x360]
  4015e9:	jmp    0x4015c0
  4015eb:	mov    edi,DWORD PTR [esp+0x64]
  4015ef:	mov    eax,DWORD PTR [esp+0x78]
  4015f3:	mov    ecx,DWORD PTR ds:0x44e858
  4015f9:	mov    DWORD PTR [esp+0x40],edi
  4015fd:	test   edi,edi
  4015ff:	jne    0x401606
  401601:	mov    ds:0x44e86c,eax
  401606:	mov    eax,DWORD PTR [esp+0x44]
  40160a:	mov    esi,eax
  40160c:	sub    esi,DWORD PTR [esp+0x28]
  401610:	cmp    DWORD PTR ds:0x44e86c,0x0
  401617:	mov    DWORD PTR ds:0x44e854,esi
  40161d:	je     0x401629
  40161f:	mov    DWORD PTR [esp+0x54],0x1
  401627:	jmp    0x40162b
  401629:	mov    DWORD PTR [edi],ebx
  40162b:	test   edi,edi
  40162d:	je     0x401637
  40162f:	mov    esi,ecx
  401631:	mov    DWORD PTR ds:0x44e854,esi
  401637:	test   eax,eax
  401639:	je     0x401644
  40163b:	imul   ebx,ebx,0x35
  40163e:	mov    DWORD PTR [esp+0x30],ebx
  401642:	jmp    0x40164c
  401644:	add    DWORD PTR [esp+0x54],0x199
  40164c:	push   0x54
  40164e:	lea    eax,[esp+0xe0]
  401655:	push   0x0
  401657:	push   eax
  401658:	call   0x40a550
  40165d:	add    esp,0xc
  401660:	lea    edx,[esp+0xd8]
  401667:	lea    ecx,[esp+0x10f0]
  40166e:	or     esi,0x81020
  401674:	push   edx
  401675:	mov    DWORD PTR [esp+0xdc],0x58
  401680:	mov    DWORD PTR [esp+0xe8],ecx
  401687:	mov    DWORD PTR [esp+0xfc],0x2
  401692:	mov    DWORD PTR [esp+0x110],esi
  401699:	mov    DWORD PTR [esp+0xe0],0x4
  4016a4:	call   DWORD PTR ds:0x443030
  4016aa:	mov    esi,eax
  4016ac:	call   DWORD PTR ds:0x443028
  4016b2:	test   esi,esi
  4016b4:	jne    0x4016be
  4016b6:	mov    ecx,DWORD PTR [esp+0x28]
  4016ba:	add    DWORD PTR [esp+0x44],ecx
  4016be:	test   eax,eax
  4016c0:	je     0x4016cc
  4016c2:	mov    edx,DWORD PTR [esp+0x44]
  4016c6:	mov    DWORD PTR ds:0x44e864,edx
  4016cc:	mov    eax,ds:0x44e860
  4016d1:	mov    ecx,DWORD PTR [esp+0x48]
  4016d5:	add    ecx,DWORD PTR [esp+0x2c]
  4016d9:	add    eax,ebx
  4016db:	imul   eax,DWORD PTR ds:0x44e864
  4016e2:	cmp    ecx,eax
  4016e4:	jne    0x4016f0
  4016e6:	mov    eax,DWORD PTR [esp+0x54]
  4016ea:	add    DWORD PTR ds:0x44e858,eax
  4016f0:	call   DWORD PTR ds:0x443220
  4016f6:	mov    DWORD PTR [esp+0x2c],eax
  4016fa:	cmp    eax,DWORD PTR ds:0x44e864
  401700:	jge    0x401708
  401702:	mov    eax,edi
  401704:	mov    DWORD PTR [esp+0x2c],edi
  401708:	mov    ecx,DWORD PTR [esp+0x38]
  40170c:	mov    esi,DWORD PTR [esp+0x64]
  401710:	lea    edx,[esp+ecx*1+0x868]
  401717:	mov    DWORD PTR [edx+edi*1],esi
  40171a:	cmp    DWORD PTR [esp+0x28],ebx
  40171e:	jle    0x40172c
  401720:	mov    edx,DWORD PTR [esp+0x54]
  401724:	sub    edx,ecx
  401726:	add    ebx,edx
  401728:	mov    DWORD PTR [esp+0x30],ebx
  40172c:	mov    DWORD PTR ds:0x44e854,edi
  401732:	test   eax,eax
  401734:	je     0x401738
  401736:	mov    DWORD PTR [edi],ebx
  401738:	cmp    eax,edi
  40173a:	je     0x401740
  40173c:	mov    eax,DWORD PTR [esp+0x64]
  401740:	lea    ecx,[esp+0x8c]
  401747:	mov    ds:0x44e868,eax
  40174c:	xor    eax,eax
  40174e:	push   ecx
  40174f:	push   edi
  401750:	mov    DWORD PTR [esp+0x98],eax
  401757:	mov    DWORD PTR [esp+0x9c],eax
  40175e:	mov    DWORD PTR [esp+0xa0],eax
  401765:	mov    DWORD PTR [esp+0xa4],eax
  40176c:	mov    DWORD PTR [esp+0xa8],eax
  401773:	mov    DWORD PTR [esp+0xac],eax
  40177a:	mov    DWORD PTR [esp+0xb0],eax
  401781:	mov    DWORD PTR [esp+0xb4],eax
  401788:	mov    DWORD PTR [esp+0xb8],eax
  40178f:	mov    DWORD PTR [esp+0x94],0x28
  40179a:	call   DWORD PTR ds:0x443250
  4017a0:	test   eax,eax
  4017a2:	je     0x4017b0
  4017a4:	mov    edx,DWORD PTR ds:0x44e858
  4017aa:	mov    DWORD PTR ds:0x44e854,edx
  4017b0:	mov    edx,DWORD PTR [esp+0x90]
  4017b7:	add    edx,0x3
  4017ba:	xor    ecx,ecx
  4017bc:	mov    esi,0x1
  4017c1:	test   edx,edx
  4017c3:	jle    0x4017dc
  4017c5:	mov    ebx,DWORD PTR [esp+0xac]
  4017cc:	lea    esp,[esp+0x0]
  4017d0:	cmp    ebx,edi
  4017d2:	jne    0x4017dc
  4017d4:	inc    ecx
  4017d5:	shl    esi,0x4
  4017d8:	cmp    ecx,edx
  4017da:	jl     0x4017d0
  4017dc:	mov    edi,DWORD PTR [esp+0x40]
  4017e0:	lea    ebx,[edi+0x1]
  4017e3:	mov    ecx,0x111
  4017e8:	sub    ecx,edi
  4017ea:	mov    edx,0x2c0
  4017ef:	imul   ecx,ebx
  4017f2:	sub    edx,edi
  4017f4:	imul   ecx,esi
  4017f7:	imul   edx,ebx
  4017fa:	mov    DWORD PTR [esp+0x78],ebx
  4017fe:	imul   edx,esi
  401801:	mov    ebx,DWORD PTR [esp+0x8c]
  401808:	add    ebx,0x18
  40180b:	test   eax,eax
  40180d:	jne    0x40182f
  40180f:	imul   esi,ebx
  401812:	cmp    DWORD PTR ds:0x44e864,eax
  401818:	je     0x40182f
  40181a:	cmp    DWORD PTR ds:0x44e868,eax
  401820:	jne    0x40182f
  401822:	push   edx
  401823:	push   ecx
  401824:	push   esi
  401825:	call   DWORD PTR ds:0x443138
  40182b:	mov    DWORD PTR [esp+0x48],eax
  40182f:	push   0x10
  401831:	call   DWORD PTR ds:0x4432c4
  401837:	mov    esi,eax
  401839:	test   esi,esi
  40183b:	je     0x401864
  40183d:	lea    eax,[esi+0x4]
  401840:	push   eax
  401841:	mov    DWORD PTR [eax],0x0
  401847:	lea    eax,[esp+0x10f4]
  40184e:	push   eax
  40184f:	mov    DWORD PTR [esi],0x447994
  401855:	call   DWORD PTR ds:0x4432a4
  40185b:	mov    DWORD PTR [esi+0x8],eax
  40185e:	mov    DWORD PTR [esp+0x38],esi
  401862:	jmp    0x40186c
  401864:	mov    DWORD PTR [esp+0x38],0x0
  40186c:	mov    edi,DWORD PTR [esp+0x2c]
  401870:	lea    ecx,[esp+0x34]
  401874:	push   ecx
  401875:	push   edi
  401876:	mov    DWORD PTR [esp+0x3c],0x0
  40187e:	call   DWORD PTR ds:0x4432b0
  401884:	mov    ebx,DWORD PTR ds:0x44e864
  40188a:	mov    ecx,0x3
  40188f:	sub    ecx,DWORD PTR [esp+0x40]
  401893:	mov    edx,ebx
  401895:	sar    edx,0x8
  401898:	lea    esi,[edx*4+0x3]
  40189f:	mov    edx,0x1
  4018a4:	test   ecx,ecx
  4018a6:	jle    0x4018c6
  4018a8:	mov    DWORD PTR [esp+0x28],ecx
  4018ac:	lea    esp,[esp+0x0]
  4018b0:	cmp    DWORD PTR [esp+0x38],0x0
  4018b5:	je     0x4018ba
  4018b7:	dec    edx
  4018b8:	jmp    0x4018c0
  4018ba:	lea    ecx,[eax-0x2]
  4018bd:	imul   edx,ecx
  4018c0:	dec    DWORD PTR [esp+0x28]
  4018c4:	jne    0x4018b0
  4018c6:	test   edi,edi
  4018c8:	jne    0x4018cd
  4018ca:	imul   esi,edx
  4018cd:	test   ebx,ebx
  4018cf:	je     0x4018e6
  4018d1:	mov    edx,DWORD PTR [esp+0x48]
  4018d5:	push   esi
  4018d6:	xor    ebx,ebx
  4018d8:	push   ebx
  4018d9:	push   edx
  4018da:	call   DWORD PTR ds:0x44313c
  4018e0:	mov    DWORD PTR [esp+0x68],eax
  4018e4:	jmp    0x4018e8
  4018e6:	xor    ebx,ebx
  4018e8:	mov    eax,DWORD PTR [esp+0x34]
  4018ec:	push   eax
  4018ed:	call   DWORD PTR ds:0x4432ac
  4018f3:	test   BYTE PTR ds:0x450758,0x1
  4018fa:	mov    esi,0x7
  4018ff:	jne    0x40192a
  401901:	or     DWORD PTR ds:0x450758,0x1
  401908:	xor    ecx,ecx
  40190a:	push   0x442690
  40190f:	mov    DWORD PTR ds:0x44e8e8,esi
  401915:	mov    DWORD PTR ds:0x44e8e4,ebx
  40191b:	mov    WORD PTR ds:0x44e8d4,cx
  401922:	call   0x404a23
  401927:	add    esp,0x4
  40192a:	test   BYTE PTR ds:0x450758,0x2
  401931:	jne    0x40195c
  401933:	or     DWORD PTR ds:0x450758,0x2
  40193a:	xor    edx,edx
  40193c:	push   0x442650
  401941:	mov    DWORD PTR ds:0x450750,esi
  401947:	mov    DWORD PTR ds:0x45074c,ebx
  40194d:	mov    WORD PTR ds:0x45073c,dx
  401954:	call   0x404a23
  401959:	add    esp,0x4
  40195c:	test   BYTE PTR ds:0x450758,0x4
  401963:	jne    0x40198d
  401965:	or     DWORD PTR ds:0x450758,0x4
  40196c:	xor    eax,eax
  40196e:	push   0x442610
  401973:	mov    DWORD PTR ds:0x450734,esi
  401979:	mov    DWORD PTR ds:0x450730,ebx
  40197f:	mov    ds:0x450720,ax
  401985:	call   0x404a23
  40198a:	add    esp,0x4
  40198d:	push   ebx
  40198e:	call   DWORD PTR ds:0x443110
  401994:	mov    esi,DWORD PTR [esp+0x40]
  401998:	cmp    esi,0x113
  40199e:	ja     0x401d85
  4019a4:	je     0x401b1a
  4019aa:	mov    eax,esi
  4019ac:	dec    eax
  4019ad:	je     0x4019ea
  4019af:	dec    eax
  4019b0:	je     0x4019ba
  4019b2:	sub    eax,0xd
  4019b5:	jmp    0x401da0
  4019ba:	mov    ecx,DWORD PTR ds:0x44e874
  4019c0:	cmp    ecx,ebx
  4019c2:	je     0x4019d2
  4019c4:	mov    edx,DWORD PTR [ecx]
  4019c6:	mov    eax,DWORD PTR [edx]
  4019c8:	push   0x1
  4019ca:	call   eax
  4019cc:	mov    DWORD PTR ds:0x44e874,ebx
  4019d2:	push   0x3e9
  4019d7:	push   edi
  4019d8:	call   DWORD PTR ds:0x443280
  4019de:	push   ebx
  4019df:	call   DWORD PTR ds:0x443274
  4019e5:	jmp    0x401daa
  4019ea:	push   ebx
  4019eb:	push   0x32
  4019ed:	push   0x3e9
  4019f2:	push   edi
  4019f3:	call   DWORD PTR ds:0x44326c
  4019f9:	lea    ecx,[esp+0xd8]
  401a00:	push   ecx
  401a01:	push   edi
  401a02:	call   DWORD PTR ds:0x443254
  401a08:	lea    edx,[esp+0x68]
  401a0c:	push   edx
  401a0d:	push   edi
  401a0e:	call   DWORD PTR ds:0x443290
  401a14:	mov    ecx,DWORD PTR [esp+0xd8]
  401a1b:	lea    eax,[esp+0x48]
  401a1f:	push   eax
  401a20:	push   ecx
  401a21:	mov    DWORD PTR [esp+0x50],ebx
  401a25:	call   DWORD PTR ds:0x4432bc
  401a2b:	mov    eax,DWORD PTR [esp+0x48]
  401a2f:	push   0x40ffffff
  401a34:	push   eax
  401a35:	mov    DWORD PTR [esp+0x250],eax
  401a3c:	call   DWORD PTR ds:0x4432d0
  401a42:	mov    eax,ds:0x44e874
  401a47:	lea    edx,[esp+0x3c]
  401a4b:	mov    esi,eax
  401a4d:	mov    eax,DWORD PTR [eax+0x4]
  401a50:	push   edx
  401a51:	push   eax
  401a52:	mov    DWORD PTR [esp+0x44],ebx
  401a56:	call   DWORD PTR ds:0x4432b4
  401a5c:	cmp    eax,ebx
  401a5e:	je     0x401a63
  401a60:	mov    DWORD PTR [esi+0x8],eax
  401a63:	mov    esi,DWORD PTR [esp+0x70]
  401a67:	sub    esi,DWORD PTR [esp+0x3c]
  401a6b:	mov    eax,ds:0x44e874
  401a70:	sub    esi,DWORD PTR [esp+0x68]
  401a74:	mov    edx,DWORD PTR [eax+0x4]
  401a77:	mov    edi,DWORD PTR ds:0x4432cc
  401a7d:	lea    ecx,[esp+0x34]
  401a81:	push   ecx
  401a82:	push   edx
  401a83:	shr    esi,1
  401a85:	mov    ebx,eax
  401a87:	mov    DWORD PTR [esp+0x3c],0x0
  401a8f:	call   edi
  401a91:	test   eax,eax
  401a93:	je     0x401a98
  401a95:	mov    DWORD PTR [ebx+0x8],eax
  401a98:	mov    ebx,DWORD PTR [esp+0x74]
  401a9c:	sub    ebx,DWORD PTR [esp+0x34]
  401aa0:	mov    eax,ds:0x44e874
  401aa5:	sub    ebx,DWORD PTR [esp+0x6c]
  401aa9:	shr    ebx,1
  401aab:	test   eax,eax
  401aad:	je     0x403241
  401ab3:	mov    edx,DWORD PTR [eax+0x4]
  401ab6:	lea    ecx,[esp+0x3c]
  401aba:	push   ecx
  401abb:	push   edx
  401abc:	mov    DWORD PTR [esp+0x80],eax
  401ac3:	mov    DWORD PTR [esp+0x44],0x0
  401acb:	call   edi
  401acd:	test   eax,eax
  401acf:	je     0x401ad8
  401ad1:	mov    ecx,DWORD PTR [esp+0x78]
  401ad5:	mov    DWORD PTR [ecx+0x8],eax
  401ad8:	mov    edx,DWORD PTR [esp+0x3c]
  401adc:	mov    eax,ds:0x44e874
  401ae1:	lea    ecx,[esp+0x34]
  401ae5:	mov    DWORD PTR [esp+0x78],edx
  401ae9:	mov    edx,DWORD PTR [eax+0x4]
  401aec:	push   ecx
  401aed:	push   edx
  401aee:	mov    edi,eax
  401af0:	mov    DWORD PTR [esp+0x3c],0x0
  401af8:	call   DWORD PTR ds:0x4432b4
  401afe:	test   eax,eax
  401b00:	je     0x401b05
  401b02:	mov    DWORD PTR [edi+0x8],eax
  401b05:	mov    eax,ds:0x44e874
  401b0a:	test   eax,eax
  401b0c:	je     0x403224
  401b12:	mov    eax,DWORD PTR [eax+0x4]
  401b15:	jmp    0x403226
  401b1a:	cmp    DWORD PTR ds:0x44e870,ebx
  401b20:	jne    0x401c4f
  401b26:	xor    ecx,ecx
  401b28:	push   0x104
  401b2d:	lea    eax,[esp+0x46c]
  401b34:	mov    WORD PTR [esp+0x46c],cx
  401b3c:	mov    ecx,DWORD PTR ds:0x44e878
  401b42:	push   eax
  401b43:	xor    edx,edx
  401b45:	push   ecx
  401b46:	mov    DWORD PTR ds:0x44e870,0x1
  401b50:	mov    WORD PTR [esp+0xc54],dx
  401b58:	call   DWORD PTR ds:0x44323c
  401b5e:	test   eax,eax
  401b60:	je     0x401b7f
  401b62:	mov    eax,ds:0x44e878
  401b67:	push   0x104
  401b6c:	lea    edx,[esp+0xc4c]
  401b73:	push   edx
  401b74:	push   eax
  401b75:	call   DWORD PTR ds:0x443240
  401b7b:	test   eax,eax
  401b7d:	jne    0x401b86
  401b7f:	push   edi
  401b80:	call   DWORD PTR ds:0x443260
  401b86:	lea    eax,[esp+0x468]
  401b8d:	lea    edx,[eax+0x2]
  401b90:	mov    cx,WORD PTR [eax]
  401b93:	add    eax,0x2
  401b96:	cmp    cx,bx
  401b99:	jne    0x401b90
  401b9b:	sub    eax,edx
  401b9d:	sar    eax,1
  401b9f:	push   eax
  401ba0:	lea    eax,[esp+0x46c]
  401ba7:	mov    ecx,0x45073c
  401bac:	call   0x4033f0
  401bb1:	lea    eax,[esp+0xc48]
  401bb8:	lea    edx,[eax+0x2]
  401bbb:	jmp    0x401bc0
  401bbd:	lea    ecx,[ecx+0x0]
  401bc0:	mov    cx,WORD PTR [eax]
  401bc3:	add    eax,0x2
  401bc6:	cmp    cx,bx
  401bc9:	jne    0x401bc0
  401bcb:	sub    eax,edx
  401bcd:	sar    eax,1
  401bcf:	push   eax
  401bd0:	lea    eax,[esp+0xc4c]
  401bd7:	mov    ecx,0x450720
  401bdc:	call   0x4033f0
  401be1:	mov    ecx,DWORD PTR ds:0x44e874
  401be7:	cmp    ecx,ebx
  401be9:	je     0x401bf9
  401beb:	mov    edx,DWORD PTR [ecx]
  401bed:	mov    eax,DWORD PTR [edx]
  401bef:	push   0x1
  401bf1:	call   eax
  401bf3:	mov    DWORD PTR ds:0x44e874,ebx
  401bf9:	cmp    DWORD PTR ds:0x44e8e8,0x8
  401c00:	mov    ebx,DWORD PTR ds:0x44e8d4
  401c06:	jae    0x401c0d
  401c08:	mov    ebx,0x44e8d4
  401c0d:	push   0x10
  401c0f:	call   DWORD PTR ds:0x4432c4
  401c15:	mov    esi,eax
  401c17:	test   esi,esi
  401c19:	je     0x401c37
  401c1b:	lea    eax,[esi+0x4]
  401c1e:	push   eax
  401c1f:	push   ebx
  401c20:	mov    DWORD PTR [esi],0x447994
  401c26:	mov    DWORD PTR [eax],0x0
  401c2c:	call   DWORD PTR ds:0x4432a4
  401c32:	mov    DWORD PTR [esi+0x8],eax
  401c35:	jmp    0x401c39
  401c37:	xor    esi,esi
  401c39:	push   0x1
  401c3b:	push   0x0
  401c3d:	push   edi
  401c3e:	mov    DWORD PTR ds:0x44e874,esi
  401c44:	call   DWORD PTR ds:0x443244
  401c4a:	jmp    0x403262
  401c4f:	mov    eax,ds:0x44e878
  401c54:	cmp    eax,ebx
  401c56:	je     0x403262
  401c5c:	cmp    DWORD PTR ds:0x44e874,ebx
  401c62:	je     0x403262
  401c68:	mov    esi,DWORD PTR ds:0x443270
  401c6e:	lea    ecx,[esp+0x248]
  401c75:	push   ecx
  401c76:	push   eax
  401c77:	call   esi
  401c79:	test   eax,eax
  401c7b:	je     0x403262
  401c81:	lea    edx,[esp+0x78]
  401c85:	push   edx
  401c86:	push   edi
  401c87:	call   esi
  401c89:	mov    esi,DWORD PTR ds:0x44322c
  401c8f:	lea    eax,[esp+0x360]
  401c96:	push   eax
  401c97:	lea    ecx,[esp+0x86c]
  401c9e:	push   ecx
  401c9f:	push   edi
  401ca0:	call   esi
  401ca2:	mov    ebx,DWORD PTR ds:0x44328c
  401ca8:	push   eax
  401ca9:	call   ebx
  401cab:	push   0x0
  401cad:	push   0x0
  401caf:	push   edi
  401cb0:	mov    DWORD PTR [esp+0x40],eax
  401cb4:	call   esi
  401cb6:	push   eax
  401cb7:	call   ebx
  401cb9:	mov    edx,DWORD PTR ds:0x44e878
  401cbf:	mov    esi,DWORD PTR ds:0x443228
  401cc5:	mov    DWORD PTR [esp+0x48],eax
  401cc9:	cmp    DWORD PTR [esp+0x34],edx
  401ccd:	je     0x401ce3
  401ccf:	push   0x5b
  401cd1:	push   0x0
  401cd3:	push   0x0
  401cd5:	push   0x0
  401cd7:	push   0x0
  401cd9:	push   edi
  401cda:	push   edx
  401cdb:	call   esi
  401cdd:	mov    edx,DWORD PTR ds:0x44e878
  401ce3:	mov    eax,0x10
  401ce8:	xor    ecx,ecx
  401cea:	lea    ebx,[ebx+0x0]
  401cf0:	mov    ebx,DWORD PTR [esp+ecx*1+0x248]
  401cf7:	cmp    ebx,DWORD PTR [esp+ecx*1+0x78]
  401cfb:	jne    0x401d12
  401cfd:	sub    eax,0x4
  401d00:	add    ecx,0x4
  401d03:	cmp    eax,0x4
  401d06:	jae    0x401cf0
  401d08:	cmp    DWORD PTR [esp+0x48],edx
  401d0c:	je     0x403262
  401d12:	mov    eax,0x10
  401d17:	xor    ecx,ecx
  401d19:	lea    esp,[esp+0x0]
  401d20:	mov    ebx,DWORD PTR [esp+ecx*1+0x248]
  401d27:	cmp    ebx,DWORD PTR [esp+ecx*1+0x78]
  401d2b:	jne    0x401d42
  401d2d:	sub    eax,0x4
  401d30:	add    ecx,0x4
  401d33:	cmp    eax,0x4
  401d36:	jae    0x401d20
  401d38:	cmp    DWORD PTR [esp+0x34],edx
  401d3c:	je     0x403262
  401d42:	mov    eax,DWORD PTR [esp+0x24c]
  401d49:	mov    ecx,DWORD PTR [esp+0x254]
  401d50:	mov    ebx,DWORD PTR [esp+0x250]
  401d57:	push   0x50
  401d59:	sub    ecx,eax
  401d5b:	push   ecx
  401d5c:	mov    ecx,DWORD PTR [esp+0x250]
  401d63:	sub    ebx,ecx
  401d65:	push   ebx
  401d66:	push   eax
  401d67:	push   ecx
  401d68:	push   edx
  401d69:	push   edi
  401d6a:	call   esi
  401d6c:	mov    edx,DWORD PTR ds:0x44e878
  401d72:	push   0x5b
  401d74:	push   0x0
  401d76:	push   0x0
  401d78:	push   0x0
  401d7a:	push   0x0
  401d7c:	push   edi
  401d7d:	push   edx
  401d7e:	call   esi
  401d80:	jmp    0x403262
  401d85:	mov    eax,esi
  401d87:	sub    eax,0x201
  401d8c:	je     0x4019f9
  401d92:	sub    eax,0x3
  401d95:	je     0x4019f9
  401d9b:	sub    eax,0x11a
  401da0:	je     0x4019f9
  401da6:	cmp    esi,ebx
  401da8:	je     0x401dbc
  401daa:	mov    eax,DWORD PTR [esp+0x54]
  401dae:	mov    ecx,DWORD PTR [esp+0x30]
  401db2:	push   eax
  401db3:	push   ecx
  401db4:	push   esi
  401db5:	push   edi
  401db6:	call   DWORD PTR ds:0x443230
  401dbc:	cmp    edi,ebx
  401dbe:	je     0x401e55
  401dc4:	mov    eax,0x4
  401dc9:	lea    edx,[esp+0x248]
  401dd0:	push   edx
  401dd1:	mov    DWORD PTR [esp+0x40],eax
  401dd5:	mov    DWORD PTR [esp+0x38],eax
  401dd9:	lea    eax,[esp+0x3c]
  401ddd:	push   eax
  401dde:	push   ebx
  401ddf:	push   0x2001f
  401de4:	push   ebx
  401de5:	push   ebx
  401de6:	push   ebx
  401de7:	lea    ecx,[esp+0x37c]
  401dee:	push   ecx
  401def:	push   0x80000001
  401df4:	call   DWORD PTR ds:0x443010
  401dfa:	test   eax,eax
  401dfc:	jne    0x401e55
  401dfe:	cmp    esi,ebx
  401e00:	je     0x401e27
  401e02:	mov    edx,DWORD PTR [esp+0x34]
  401e06:	mov    ecx,DWORD PTR [esp+0x3c]
  401e0a:	push   edx
  401e0b:	mov    edx,DWORD PTR [esp+0x3c]
  401e0f:	lea    eax,[esp+0x364]
  401e16:	push   eax
  401e17:	push   ecx
  401e18:	push   ebx
  401e19:	push   0x445ab8
  401e1e:	push   edx
  401e1f:	call   DWORD PTR ds:0x443018
  401e25:	jmp    0x401e4a
  401e27:	lea    eax,[esp+0x34]
  401e2b:	push   eax
  401e2c:	mov    eax,DWORD PTR [esp+0x3c]
  401e30:	lea    ecx,[esp+0x86c]
  401e37:	push   ecx
  401e38:	lea    edx,[esp+0x44]
  401e3c:	push   edx
  401e3d:	push   ebx
  401e3e:	push   0x445ac4
  401e43:	push   eax
  401e44:	call   DWORD PTR ds:0x443014
  401e4a:	mov    ecx,DWORD PTR [esp+0x38]
  401e4e:	push   ecx
  401e4f:	call   DWORD PTR ds:0x443008
  401e55:	mov    eax,DWORD PTR [esp+0x40]
  401e59:	fldz   
  401e5b:	mov    edi,DWORD PTR ds:0x44e868
  401e61:	mov    esi,DWORD PTR ds:0x44e858
  401e67:	mov    ebx,DWORD PTR ds:0x443224
  401e6d:	mov    DWORD PTR [esp+0x48],edi
  401e71:	cmp    eax,0xf
  401e74:	ja     0x4021be
  401e7a:	fstp   st(0)
  401e7c:	je     0x40214e
  401e82:	dec    eax
  401e83:	je     0x401eba
  401e85:	dec    eax
  401e86:	jne    0x4021c7
  401e8c:	mov    eax,ds:0x45071c
  401e91:	test   eax,eax
  401e93:	je     0x401e9d
  401e95:	push   eax
  401e96:	push   edi
  401e97:	call   DWORD PTR ds:0x443280
  401e9d:	mov    eax,ds:0x450718
  401ea2:	test   eax,eax
  401ea4:	je     0x401ead
  401ea6:	push   eax
  401ea7:	call   DWORD PTR ds:0x443058
  401ead:	push   0x0
  401eaf:	call   DWORD PTR ds:0x443274
  401eb5:	jmp    0x402395
  401eba:	mov    edx,DWORD PTR [esp+0x30]
  401ebe:	push   edx
  401ebf:	push   0x5
  401ec1:	push   0x0
  401ec3:	call   DWORD PTR ds:0x443074
  401ec9:	push   0x0
  401ecb:	mov    ds:0x450718,eax
  401ed0:	call   ebx
  401ed2:	cdq    
  401ed3:	sub    eax,edx
  401ed5:	sar    eax,1
  401ed7:	push   0x1
  401ed9:	mov    ds:0x44e8c0,eax
  401ede:	call   ebx
  401ee0:	mov    ecx,DWORD PTR ds:0x44e8c0
  401ee6:	cdq    
  401ee7:	sub    eax,edx
  401ee9:	sar    eax,1
  401eeb:	lea    edx,[eax+ecx*1-0x4]
  401eef:	mov    DWORD PTR ds:0x44e8c8,edx
  401ef5:	lea    edx,[ecx-0x1f4]
  401efb:	mov    DWORD PTR ds:0x450708,edx
  401f01:	lea    edx,[eax-0x1f4]
  401f07:	mov    ds:0x44e8c4,eax
  401f0c:	add    eax,0x1f4
  401f11:	mov    ds:0x450714,eax
  401f16:	mov    DWORD PTR ds:0x45070c,edx
  401f1c:	mov    eax,0xb60b60b7
  401f21:	imul   esi
  401f23:	add    edx,esi
  401f25:	sar    edx,0x7
  401f28:	mov    esi,edx
  401f2a:	add    ecx,0x1f4
  401f30:	xor    ebx,ebx
  401f32:	shr    esi,0x1f
  401f35:	mov    DWORD PTR ds:0x450710,ecx
  401f3b:	mov    DWORD PTR [esp+0x28],ebx
  401f3f:	add    esi,edx
  401f41:	fild   DWORD PTR [esp+0x28]
  401f45:	fst    QWORD PTR [esp+0x48]
  401f49:	call   0x4420a0
  401f4e:	fstp   QWORD PTR [ebx*8+0x44fbc8]
  401f55:	fld    QWORD PTR [esp+0x48]
  401f59:	call   0x441f70
  401f5e:	fstp   QWORD PTR [ebx*8+0x44f088]
  401f65:	add    DWORD PTR [esp+0x28],esi
  401f69:	inc    ebx
  401f6a:	cmp    ebx,0x168
  401f70:	jl     0x401f41
  401f72:	fld    QWORD PTR ds:0x4479b8
  401f78:	push   0x0
  401f7a:	fst    QWORD PTR ds:0x44ed88
  401f80:	push   0x1ef
  401f85:	fld    QWORD PTR ds:0x4479b0
  401f8b:	push   0x1
  401f8d:	fst    QWORD PTR ds:0x44ed90
  401f93:	push   edi
  401f94:	fst    QWORD PTR ds:0x44ed98
  401f9a:	mov    DWORD PTR ds:0x44ed84,ebx
  401fa0:	fst    QWORD PTR ds:0x44eda8
  401fa6:	fst    QWORD PTR ds:0x44edb0
  401fac:	fst    QWORD PTR ds:0x44edb8
  401fb2:	fst    QWORD PTR ds:0x44edc8
  401fb8:	fst    QWORD PTR ds:0x44edd8
  401fbe:	fst    QWORD PTR ds:0x44ede8
  401fc4:	fst    QWORD PTR ds:0x44edf0
  401fca:	fst    QWORD PTR ds:0x44edf8
  401fd0:	fst    QWORD PTR ds:0x44ee08
  401fd6:	fst    QWORD PTR ds:0x44ee10
  401fdc:	fst    QWORD PTR ds:0x44ee28
  401fe2:	fst    QWORD PTR ds:0x44ee30
  401fe8:	fst    QWORD PTR ds:0x44ee38
  401fee:	fst    QWORD PTR ds:0x44ee58
  401ff4:	fst    QWORD PTR ds:0x44ee70
  401ffa:	fst    QWORD PTR ds:0x44ee78
  402000:	fst    QWORD PTR ds:0x44ee90
  402006:	fst    QWORD PTR ds:0x44eeb0
  40200c:	fst    QWORD PTR ds:0x44eeb8
  402012:	fst    QWORD PTR ds:0x44eed8
  402018:	fst    QWORD PTR ds:0x44eee8
  40201e:	fst    QWORD PTR ds:0x44eef8
  402024:	fst    QWORD PTR ds:0x44ef10
  40202a:	fst    QWORD PTR ds:0x44ef28
  402030:	fst    QWORD PTR ds:0x44ef30
  402036:	fst    QWORD PTR ds:0x44ef68
  40203c:	fst    QWORD PTR ds:0x44efb0
  402042:	fst    QWORD PTR ds:0x44efc8
  402048:	fst    QWORD PTR ds:0x44efe8
  40204e:	fst    QWORD PTR ds:0x44eff8
  402054:	fst    QWORD PTR ds:0x44f008
  40205a:	fst    QWORD PTR ds:0x44f028
  402060:	fst    QWORD PTR ds:0x44f030
  402066:	fstp   QWORD PTR ds:0x44f078
  40206c:	fst    QWORD PTR ds:0x44edd0
  402072:	fst    QWORD PTR ds:0x44ee18
  402078:	fst    QWORD PTR ds:0x44ee48
  40207e:	fst    QWORD PTR ds:0x44ee50
  402084:	fst    QWORD PTR ds:0x44ee68
  40208a:	fst    QWORD PTR ds:0x44ee88
  402090:	fst    QWORD PTR ds:0x44ee98
  402096:	fst    QWORD PTR ds:0x44eea8
  40209c:	fst    QWORD PTR ds:0x44eec8
  4020a2:	fst    QWORD PTR ds:0x44eed0
  4020a8:	fst    QWORD PTR ds:0x44eef0
  4020ae:	fst    QWORD PTR ds:0x44ef08
  4020b4:	fst    QWORD PTR ds:0x44ef18
  4020ba:	fst    QWORD PTR ds:0x44ef38
  4020c0:	fst    QWORD PTR ds:0x44ef48
  4020c6:	fst    QWORD PTR ds:0x44ef50
  4020cc:	fst    QWORD PTR ds:0x44ef58
  4020d2:	fst    QWORD PTR ds:0x44ef70
  4020d8:	fst    QWORD PTR ds:0x44ef78
  4020de:	fst    QWORD PTR ds:0x44ef88
  4020e4:	fst    QWORD PTR ds:0x44ef90
  4020ea:	fst    QWORD PTR ds:0x44ef98
  4020f0:	fst    QWORD PTR ds:0x44efa8
  4020f6:	fst    QWORD PTR ds:0x44efb8
  4020fc:	fst    QWORD PTR ds:0x44efd0
  402102:	fst    QWORD PTR ds:0x44efd8
  402108:	fst    QWORD PTR ds:0x44eff0
  40210e:	fst    QWORD PTR ds:0x44f010
  402114:	fst    QWORD PTR ds:0x44f018
  40211a:	fst    QWORD PTR ds:0x44f038
  402120:	fst    QWORD PTR ds:0x44f048
  402126:	fst    QWORD PTR ds:0x44f050
  40212c:	fst    QWORD PTR ds:0x44f058
  402132:	fst    QWORD PTR ds:0x44f068
  402138:	fstp   QWORD PTR ds:0x44f070
  40213e:	call   DWORD PTR ds:0x44326c
  402144:	mov    ds:0x45071c,eax
  402149:	jmp    0x402395
  40214e:	push   0x44e880
  402153:	push   edi
  402154:	call   DWORD PTR ds:0x443254
  40215a:	push   0x0
  40215c:	push   eax
  40215d:	mov    ds:0x44ed80,eax
  402162:	call   DWORD PTR ds:0x443054
  402168:	mov    eax,ds:0x44ed80
  40216d:	push   0xff00
  402172:	push   eax
  402173:	call   DWORD PTR ds:0x44304c
  402179:	mov    edx,DWORD PTR ds:0x44ed80
  40217f:	mov    esi,DWORD PTR ds:0x443084
  402185:	push   0x13
  402187:	lea    ecx,[esp+0x364]
  40218e:	push   ecx
  40218f:	push   0x1e
  402191:	push   0x23
  402193:	push   edx
  402194:	call   esi
  402196:	mov    ecx,DWORD PTR ds:0x44ed80
  40219c:	push   0x1f
  40219e:	lea    eax,[esp+0x86c]
  4021a5:	push   eax
  4021a6:	push   0x32
  4021a8:	push   0x32
  4021aa:	push   ecx
  4021ab:	call   esi
  4021ad:	push   0x44e880
  4021b2:	push   edi
  4021b3:	call   DWORD PTR ds:0x443258
  4021b9:	jmp    0x402395
  4021be:	cmp    eax,0x113
  4021c3:	je     0x4021d4
  4021c5:	fstp   st(0)
  4021c7:	mov    DWORD PTR [esp+0x30],0x0
  4021cf:	jmp    0x402395
  4021d4:	mov    ecx,DWORD PTR ds:0x44e8cc
  4021da:	fild   DWORD PTR ds:0x44e8c8
  4021e0:	mov    eax,ds:0x44e8d0
  4021e5:	fld1   
  4021e7:	fld    QWORD PTR ds:0x4479a8
  4021ed:	lea    ebx,[ecx*8+0x44fbc8]
  4021f4:	lea    edi,[ecx*8+0x44f088]
  4021fb:	xor    ecx,ecx
  4021fd:	lea    edx,[eax*8+0x44fbc8]
  402204:	lea    esi,[eax*8+0x44f088]
  40220b:	mov    DWORD PTR [esp+0x28],ecx
  40220f:	mov    DWORD PTR ds:0x44ed84,0xc
  402219:	fld    QWORD PTR [ecx+0x44ed90]
  40221f:	fmul   QWORD PTR [edi]
  402221:	fld    QWORD PTR [ebx]
  402223:	fmul   QWORD PTR [ecx+0x44ed88]
  402229:	fsubp  st(1),st
  40222b:	fstp   QWORD PTR [ecx+0x44ea80]
  402231:	fld    QWORD PTR [ecx+0x44ed90]
  402237:	fmul   QWORD PTR [ebx]
  402239:	fld    QWORD PTR [edi]
  40223b:	fmul   QWORD PTR [ecx+0x44ed88]
  402241:	fld    st(1)
  402243:	fmul   QWORD PTR [edx]
  402245:	fld    st(1)
  402247:	fmul   QWORD PTR [edx]
  402249:	faddp  st(1),st
  40224b:	fld    QWORD PTR [ecx+0x44ed98]
  402251:	fmul   QWORD PTR [esi]
  402253:	faddp  st(1),st
  402255:	fsubr  st,st(4)
  402257:	fstp   QWORD PTR [ecx+0x44ea88]
  40225d:	fld    QWORD PTR [ecx+0x44ed98]
  402263:	fmul   QWORD PTR [edx]
  402265:	fxch   st(1)
  402267:	fmul   QWORD PTR [esi]
  402269:	fxch   st(2)
  40226b:	fmul   QWORD PTR [esi]
  40226d:	faddp  st(2),st
  40226f:	fsubrp st(1),st
  402271:	fstp   QWORD PTR [ecx+0x44ea90]
  402277:	fld    QWORD PTR [edi]
  402279:	fmul   QWORD PTR [ecx+0x44edb0]
  40227f:	fld    QWORD PTR [ecx+0x44eda8]
  402285:	fmul   QWORD PTR [ebx]
  402287:	fsubp  st(1),st
  402289:	fstp   QWORD PTR [ecx+0x44eaa0]
  40228f:	fld    QWORD PTR [ebx]
  402291:	fmul   QWORD PTR [ecx+0x44edb0]
  402297:	fld    QWORD PTR [ecx+0x44eda8]
  40229d:	fmul   QWORD PTR [edi]
  40229f:	fld    st(0)
  4022a1:	fmul   QWORD PTR [edx]
  4022a3:	fld    st(2)
  4022a5:	fmul   QWORD PTR [edx]
  4022a7:	faddp  st(1),st
  4022a9:	fld    QWORD PTR [ecx+0x44edb8]
  4022af:	fmul   QWORD PTR [esi]
  4022b1:	faddp  st(1),st
  4022b3:	fsubr  st,st(4)
  4022b5:	fstp   QWORD PTR [ecx+0x44eaa8]
  4022bb:	fld    QWORD PTR [ecx+0x44edb8]
  4022c1:	fmul   QWORD PTR [edx]
  4022c3:	fxch   st(1)
  4022c5:	fmul   QWORD PTR [esi]
  4022c7:	fxch   st(2)
  4022c9:	fmul   QWORD PTR [esi]
  4022cb:	faddp  st(2),st
  4022cd:	fsubrp st(1),st
  4022cf:	fst    QWORD PTR [ecx+0x44eab0]
  4022d5:	fld    QWORD PTR [ecx+0x44ea90]
  4022db:	fadd   st,st(4)
  4022dd:	fcom   st(5)
  4022df:	fnstsw ax
  4022e1:	test   ah,0x41
  4022e4:	je     0x4022ef
  4022e6:	fcom   st(5)
  4022e8:	fnstsw ax
  4022ea:	test   ah,0x5
  4022ed:	jp     0x40231f
  4022ef:	fld    QWORD PTR [ecx+0x44ea80]
  4022f5:	mov    eax,DWORD PTR [esp+0x28]
  4022f9:	fdiv   st,st(1)
  4022fb:	fmul   st,st(3)
  4022fd:	fiadd  DWORD PTR ds:0x44e8c0
  402303:	fstp   QWORD PTR [eax+0x44e9c0]
  402309:	fdivr  QWORD PTR [ecx+0x44ea88]
  40230f:	fmul   st,st(2)
  402311:	fiadd  DWORD PTR ds:0x44e8c4
  402317:	fstp   QWORD PTR [eax+0x44e900]
  40231d:	jmp    0x402321
  40231f:	fstp   st(0)
  402321:	fadd   st,st(3)
  402323:	fcom   st(4)
  402325:	fnstsw ax
  402327:	test   ah,0x41
  40232a:	je     0x402335
  40232c:	fcom   st(4)
  40232e:	fnstsw ax
  402330:	test   ah,0x5
  402333:	jp     0x402365
  402335:	fld    QWORD PTR [ecx+0x44eaa0]
  40233b:	mov    eax,DWORD PTR [esp+0x28]
  40233f:	fdiv   st,st(1)
  402341:	fmul   st,st(2)
  402343:	fiadd  DWORD PTR ds:0x44e8c0
  402349:	fstp   QWORD PTR [eax+0x44e9c8]
  40234f:	fdivr  QWORD PTR [ecx+0x44eaa8]
  402355:	fmul   st,st(1)
  402357:	fiadd  DWORD PTR ds:0x44e8c4
  40235d:	fstp   QWORD PTR [eax+0x44e908]
  402363:	jmp    0x402367
  402365:	fstp   st(0)
  402367:	add    DWORD PTR [esp+0x28],0x10
  40236c:	add    ecx,0x40
  40236f:	cmp    ecx,0x300
  402375:	jl     0x402219
  40237b:	mov    edx,DWORD PTR [esp+0x48]
  40237f:	fstp   st(3)
  402381:	push   0x1
  402383:	fstp   st(0)
  402385:	push   0x450708
  40238a:	fstp   st(0)
  40238c:	push   edx
  40238d:	fstp   st(0)
  40238f:	call   DWORD PTR ds:0x443244
  402395:	movzx  ecx,BYTE PTR [esp+0x248]
  40239d:	mov    eax,ds:0x44e854
  4023a2:	movzx  edx,BYTE PTR [esp+0x248]
  4023aa:	shl    ecx,0x8
  4023ad:	mov    DWORD PTR [esp+0x48],eax
  4023b1:	movzx  eax,BYTE PTR [esp+0x248]
  4023b9:	or     ecx,edx
  4023bb:	shl    ecx,0x8
  4023be:	or     ecx,eax
  4023c0:	push   ecx
  4023c1:	call   DWORD PTR ds:0x443088
  4023c7:	mov    ebx,DWORD PTR ds:0x44305c
  4023cd:	mov    esi,eax
  4023cf:	push   esi
  4023d0:	push   0x1
  4023d2:	call   ebx
  4023d4:	mov    edi,DWORD PTR [esp+0x248]
  4023db:	mov    DWORD PTR [esp+0x3c],eax
  4023df:	mov    eax,DWORD PTR [esp+0x248]
  4023e6:	lea    ecx,[edi+eax*2]
  4023e9:	push   ecx
  4023ea:	mov    ecx,DWORD PTR [esp+0x4c]
  4023ee:	lea    edx,[ecx+eax*2]
  4023f1:	push   edx
  4023f2:	push   edi
  4023f3:	push   ecx
  4023f4:	push   0x1
  4023f6:	call   DWORD PTR ds:0x44306c
  4023fc:	mov    eax,DWORD PTR [esp+0x48]
  402400:	push   eax
  402401:	push   0x445ad0
  402406:	lea    edx,[esp+0x94]
  40240d:	call   0x401000
  402412:	lea    eax,[esp+0x94]
  402419:	add    esp,0x8
  40241c:	lea    ecx,[eax+0x2]
  40241f:	nop
  402420:	mov    dx,WORD PTR [eax]
  402423:	add    eax,0x2
  402426:	test   dx,dx
  402429:	jne    0x402420
  40242b:	mov    edx,DWORD PTR [esp+0x48]
  40242f:	sub    eax,ecx
  402431:	sar    eax,1
  402433:	push   eax
  402434:	lea    ecx,[esp+0x90]
  40243b:	push   ecx
  40243c:	push   edi
  40243d:	push   edx
  40243e:	push   0x1
  402440:	call   DWORD PTR ds:0x443080
  402446:	mov    eax,DWORD PTR [esp+0x3c]
  40244a:	push   eax
  40244b:	push   0x1
  40244d:	call   ebx
  40244f:	push   esi
  402450:	call   DWORD PTR ds:0x443058
  402456:	cmp    DWORD PTR [esp+0x40],0x113
  40245e:	ja     0x4029bf
  402464:	mov    eax,DWORD PTR [esp+0x40]
  402468:	cmp    eax,0x113
  40246d:	je     0x402786
  402473:	sub    eax,0x110
  402478:	je     0x4026dd
  40247e:	dec    eax
  40247f:	jne    0x4029dd
  402485:	movzx  eax,WORD PTR [esp+0x30]
  40248a:	dec    eax
  40248b:	cmp    eax,0x13
  40248e:	ja     0x4029dd
  402494:	movzx  ecx,BYTE PTR [eax+0x40329c]
  40249b:	jmp    DWORD PTR [ecx*4+0x40327c]
  4024a2:	mov    eax,DWORD PTR [esp+0x30]
  4024a6:	shr    eax,0x10
  4024a9:	dec    eax
  4024aa:	jne    0x4029dd
  4024b0:	mov    edi,DWORD PTR [esp+0x54]
  4024b4:	mov    esi,DWORD PTR ds:0x44325c
  4024ba:	push   eax
  4024bb:	push   eax
  4024bc:	push   eax
  4024bd:	push   0x147
  4024c2:	push   edi
  4024c3:	call   esi
  4024c5:	push   eax
  4024c6:	push   0x150
  4024cb:	push   edi
  4024cc:	call   esi
  4024ce:	mov    ds:0x44e8fc,eax
  4024d3:	jmp    0x4029dd
  4024d8:	mov    eax,DWORD PTR [esp+0x2c]
  4024dc:	lea    edx,[esp+0x8c]
  4024e3:	push   edx
  4024e4:	mov    ecx,0x7
  4024e9:	mov    esi,0x44d914
  4024ee:	lea    edi,[esp+0x98]
  4024f5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024f7:	push   eax
  4024f8:	lea    ecx,[esp+0x250]
  4024ff:	push   ecx
  402500:	call   DWORD PTR ds:0x443168
  402506:	test   eax,eax
  402508:	je     0x4029dd
  40250e:	mov    ecx,0x7
  402513:	lea    esi,[esp+0x94]
  40251a:	mov    edi,0x44d914
  40251f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402521:	jmp    0x4029dd
  402526:	mov    eax,DWORD PTR [esp+0x30]
  40252a:	shr    eax,0x10
  40252d:	dec    eax
  40252e:	jne    0x4029dd
  402534:	mov    edi,DWORD PTR [esp+0x54]
  402538:	mov    esi,DWORD PTR ds:0x44325c
  40253e:	lea    edx,[esp+0xa98]
  402545:	push   edx
  402546:	push   eax
  402547:	push   eax
  402548:	push   0x147
  40254d:	push   edi
  40254e:	call   esi
  402550:	push   eax
  402551:	push   0x148
  402556:	push   edi
  402557:	call   esi
  402559:	jmp    0x4029dd
  40255e:	mov    esi,DWORD PTR [esp+0x30]
  402562:	lea    eax,[esp+0x990]
  402569:	push   0x104
  40256e:	mov    edx,eax
  402570:	push   edx
  402571:	dec    esi
  402572:	mov    DWORD PTR [esp+0xfc],eax
  402579:	mov    eax,DWORD PTR [esp+0x34]
  40257d:	push   esi
  40257e:	lea    ecx,[esp+0x264]
  402585:	push   eax
  402586:	mov    DWORD PTR [esp+0xf4],ecx
  40258d:	mov    DWORD PTR [esp+0x11c],0x1004
  402598:	call   DWORD PTR ds:0x443218
  40259e:	lea    ecx,[esp+0xd8]
  4025a5:	push   ecx
  4025a6:	call   DWORD PTR ds:0x44302c
  4025ac:	test   eax,eax
  4025ae:	je     0x4029dd
  4025b4:	mov    eax,DWORD PTR [esp+0x2c]
  4025b8:	lea    edx,[esp+0x990]
  4025bf:	push   edx
  4025c0:	push   esi
  4025c1:	push   eax
  4025c2:	call   DWORD PTR ds:0x443214
  4025c8:	jmp    0x4029dd
  4025cd:	mov    eax,DWORD PTR [esp+0x30]
  4025d1:	shr    eax,0x10
  4025d4:	dec    eax
  4025d5:	jne    0x4029dd
  4025db:	mov    ecx,DWORD PTR [esp+0x54]
  4025df:	push   eax
  4025e0:	push   eax
  4025e1:	push   0x147
  4025e6:	push   ecx
  4025e7:	call   DWORD PTR ds:0x44325c
  4025ed:	jmp    0x4029dd
  4025f2:	mov    esi,DWORD PTR [esp+0x2c]
  4025f6:	push   0xa
  4025f8:	push   esi
  4025f9:	call   DWORD PTR ds:0x443238
  4025ff:	push   0x0
  402601:	push   0x0
  402603:	mov    edi,eax
  402605:	push   0x147
  40260a:	push   edi
  40260b:	call   DWORD PTR ds:0x44325c
  402611:	test   eax,eax
  402613:	jns    0x402621
  402615:	push   edi
  402616:	call   DWORD PTR ds:0x443294
  40261c:	jmp    0x4029dd
  402621:	push   0xd
  402623:	push   esi
  402624:	call   DWORD PTR ds:0x443238
  40262a:	push   0x0
  40262c:	push   0x0
  40262e:	mov    edi,eax
  402630:	push   0x147
  402635:	push   edi
  402636:	call   DWORD PTR ds:0x44325c
  40263c:	test   eax,eax
  40263e:	jns    0x40264c
  402640:	push   edi
  402641:	call   DWORD PTR ds:0x443294
  402647:	jmp    0x4029dd
  40264c:	push   0x1
  40264e:	lea    edx,[esp+0x2c]
  402652:	push   edx
  402653:	mov    edi,0x16
  402658:	push   edi
  402659:	push   esi
  40265a:	call   DWORD PTR ds:0x443268
  402660:	cmp    DWORD PTR [esp+0x28],0x0
  402665:	je     0x4026a1
  402667:	push   0x1
  402669:	lea    eax,[esp+0x2c]
  40266d:	push   eax
  40266e:	mov    edi,0x17
  402673:	push   edi
  402674:	push   esi
  402675:	call   DWORD PTR ds:0x443268
  40267b:	cmp    DWORD PTR [esp+0x28],0x0
  402680:	je     0x4026a1
  402682:	push   0x0
  402684:	lea    ecx,[esp+0x2c]
  402688:	push   ecx
  402689:	mov    edi,0xc
  40268e:	push   edi
  40268f:	push   esi
  402690:	call   DWORD PTR ds:0x443268
  402696:	imul   eax,eax,0x3e8
  40269c:	test   ax,ax
  40269f:	jne    0x4026cb
  4026a1:	push   edi
  4026a2:	push   esi
  4026a3:	call   DWORD PTR ds:0x443238
  4026a9:	push   0xffffffff
  4026ab:	push   0x0
  4026ad:	mov    esi,eax
  4026af:	push   0xb1
  4026b4:	push   esi
  4026b5:	call   DWORD PTR ds:0x44325c
  4026bb:	push   esi
  4026bc:	call   DWORD PTR ds:0x443294
  4026c2:	jmp    0x4029dd
  4026c7:	mov    esi,DWORD PTR [esp+0x2c]
  4026cb:	movzx  eax,WORD PTR [esp+0x30]
  4026d0:	push   eax
  4026d1:	push   esi
  4026d2:	call   DWORD PTR ds:0x443234
  4026d8:	jmp    0x4029dd
  4026dd:	movzx  ecx,WORD PTR [esp+0x58]
  4026e2:	mov    edi,DWORD PTR [esp+0x2c]
  4026e6:	mov    esi,DWORD PTR ds:0x443248
  4026ec:	mov    eax,0x10624dd3
  4026f1:	imul   ecx
  4026f3:	sar    edx,0x6
  4026f6:	mov    eax,edx
  4026f8:	push   0x0
  4026fa:	shr    eax,0x1f
  4026fd:	add    eax,edx
  4026ff:	push   eax
  402700:	push   0xc
  402702:	push   edi
  402703:	call   esi
  402705:	mov    ebx,DWORD PTR ds:0x443214
  40270b:	lea    ecx,[esp+0xc48]
  402712:	push   ecx
  402713:	push   0x10
  402715:	push   edi
  402716:	call   ebx
  402718:	lea    edx,[esp+0x468]
  40271f:	push   edx
  402720:	push   0x12
  402722:	push   edi
  402723:	call   ebx
  402725:	push   0x14
  402727:	push   edi
  402728:	call   DWORD PTR ds:0x443238
  40272e:	movzx  ecx,BYTE PTR [esp+0x5a]
  402733:	mov    ebx,DWORD PTR ds:0x44325c
  402739:	push   0x0
  40273b:	push   ecx
  40273c:	push   0x14e
  402741:	push   eax
  402742:	call   ebx
  402744:	movsx  edx,WORD PTR [esp+0x5c]
  402749:	push   0x1
  40274b:	push   edx
  40274c:	push   0x16
  40274e:	push   edi
  40274f:	call   esi
  402751:	movsx  eax,WORD PTR [esp+0x5e]
  402756:	push   0x1
  402758:	push   eax
  402759:	push   0x17
  40275b:	push   edi
  40275c:	call   esi
  40275e:	push   0x0
  402760:	push   0x1
  402762:	push   0x113
  402767:	push   edi
  402768:	call   ebx
  40276a:	mov    eax,0x1
  40276f:	pop    edi
  402770:	pop    esi
  402771:	pop    ebx
  402772:	mov    ecx,DWORD PTR [esp+0x16f0]
  402779:	xor    ecx,esp
  40277b:	call   0x403edd
  402780:	mov    esp,ebp
  402782:	pop    ebp
  402783:	ret    0x10
  402786:	cmp    DWORD PTR [esp+0x30],0x1
  40278b:	jne    0x4029dd
  402791:	mov    esi,DWORD PTR [esp+0x2c]
  402795:	push   0x1
  402797:	push   esi
  402798:	call   DWORD PTR ds:0x443280
  40279e:	push   0xa
  4027a0:	push   esi
  4027a1:	call   DWORD PTR ds:0x443238
  4027a7:	push   0x0
  4027a9:	push   0x0
  4027ab:	mov    esi,eax
  4027ad:	push   0x14b
  4027b2:	push   esi
  4027b3:	call   DWORD PTR ds:0x44325c
  4027b9:	push   0x2
  4027bb:	push   0x0
  4027bd:	push   0x0
  4027bf:	lea    ecx,[esp+0xcc]
  4027c6:	push   ecx
  4027c7:	mov    DWORD PTR [esp+0xd0],0x1
  4027d2:	call   DWORD PTR ds:0x4431f4
  4027d8:	mov    edi,eax
  4027da:	mov    DWORD PTR [esp+0x34],edi
  4027de:	cmp    edi,0xffffffff
  4027e1:	je     0x4028ce
  4027e7:	lea    edx,[esp+0x8c]
  4027ee:	push   edx
  4027ef:	push   0x0
  4027f1:	push   edi
  4027f2:	mov    DWORD PTR [esp+0x98],0x1c
  4027fd:	mov    DWORD PTR [esp+0x34],0x0
  402805:	call   DWORD PTR ds:0x4431fc
  40280b:	test   eax,eax
  40280d:	je     0x4028c7
  402813:	push   0x20019
  402818:	push   0x1
  40281a:	push   0x0
  40281c:	push   0x1
  40281e:	lea    eax,[esp+0x9c]
  402825:	push   eax
  402826:	push   edi
  402827:	mov    BYTE PTR [esp+0x260],0x0
  40282f:	call   DWORD PTR ds:0x443200
  402835:	cmp    eax,0xffffffff
  402838:	je     0x4028a6
  40283a:	push   eax
  40283b:	call   DWORD PTR ds:0x443008
  402841:	cmp    BYTE PTR [esp+0x248],0x43
  402849:	jne    0x4028a6
  40284b:	lea    ecx,[esp+0x248]
  402852:	push   ecx
  402853:	push   0x0
  402855:	push   0x143
  40285a:	push   esi
  40285b:	call   DWORD PTR ds:0x44325c
  402861:	lea    edx,[esp+0x254]
  402868:	push   edx
  402869:	mov    DWORD PTR [esp+0x40],eax
  40286d:	call   DWORD PTR ds:0x443208
  402873:	mov    edi,eax
  402875:	mov    eax,DWORD PTR [esp+0x3c]
  402879:	push   edi
  40287a:	push   eax
  40287b:	push   0x151
  402880:	push   esi
  402881:	call   DWORD PTR ds:0x44325c
  402887:	cmp    edi,DWORD PTR ds:0x44e8fc
  40288d:	jne    0x4028a2
  40288f:	mov    ecx,DWORD PTR [esp+0x3c]
  402893:	push   0x0
  402895:	push   ecx
  402896:	push   0x14e
  40289b:	push   esi
  40289c:	call   DWORD PTR ds:0x44325c
  4028a2:	mov    edi,DWORD PTR [esp+0x34]
  4028a6:	mov    eax,DWORD PTR [esp+0x28]
  4028aa:	lea    edx,[esp+0x8c]
  4028b1:	inc    eax
  4028b2:	push   edx
  4028b3:	push   eax
  4028b4:	push   edi
  4028b5:	mov    DWORD PTR [esp+0x34],eax
  4028b9:	call   DWORD PTR ds:0x4431fc
  4028bf:	test   eax,eax
  4028c1:	jne    0x402813
  4028c7:	push   edi
  4028c8:	call   DWORD PTR ds:0x4431f8
  4028ce:	mov    eax,DWORD PTR [esp+0x2c]
  4028d2:	push   0xd
  4028d4:	xor    edi,edi
  4028d6:	push   eax
  4028d7:	mov    DWORD PTR [esp+0x40],edi
  4028db:	call   DWORD PTR ds:0x443238
  4028e1:	push   edi
  4028e2:	push   edi
  4028e3:	push   0x14b
  4028e8:	push   eax
  4028e9:	mov    DWORD PTR [esp+0x4c],eax
  4028ed:	call   DWORD PTR ds:0x44325c
  4028f3:	mov    eax,DWORD PTR [esp+0x38]
  4028f7:	lea    ecx,[esp+0x48]
  4028fb:	push   ecx
  4028fc:	lea    edx,[esp+0x3c]
  402900:	push   edx
  402901:	push   eax
  402902:	push   edi
  402903:	push   0x5
  402905:	xor    esi,esi
  402907:	push   esi
  402908:	push   0x6
  40290a:	call   DWORD PTR ds:0x44329c
  402910:	test   eax,eax
  402912:	jne    0x402943
  402914:	call   DWORD PTR ds:0x443120
  40291a:	mov    esi,eax
  40291c:	test   edi,edi
  40291e:	je     0x402927
  402920:	push   edi
  402921:	call   DWORD PTR ds:0x4430f8
  402927:	mov    ecx,DWORD PTR [esp+0x38]
  40292b:	push   ecx
  40292c:	push   0x40
  40292e:	call   DWORD PTR ds:0x443118
  402934:	mov    edi,eax
  402936:	test   edi,edi
  402938:	je     0x4029dd
  40293e:	cmp    esi,0x7a
  402941:	je     0x4028f3
  402943:	test   edi,edi
  402945:	je     0x4029dd
  40294b:	test   esi,esi
  40294d:	jne    0x4029dd
  402953:	mov    DWORD PTR [esp+0x34],esi
  402957:	cmp    DWORD PTR [esp+0x48],esi
  40295b:	jbe    0x4029b6
  40295d:	mov    esi,edi
  40295f:	nop
  402960:	mov    edx,DWORD PTR [esi]
  402962:	mov    eax,DWORD PTR [esp+0x3c]
  402966:	push   edx
  402967:	push   0x0
  402969:	push   0x143
  40296e:	push   eax
  40296f:	call   DWORD PTR ds:0x44325c
  402975:	mov    edx,DWORD PTR [esi]
  402977:	lea    ecx,[esp+0xa98]
  40297e:	push   ecx
  40297f:	push   edx
  402980:	mov    DWORD PTR [esp+0x30],eax
  402984:	call   DWORD PTR ds:0x4430c4
  40298a:	test   eax,eax
  40298c:	jne    0x4029a4
  40298e:	mov    ecx,DWORD PTR [esp+0x3c]
  402992:	push   eax
  402993:	mov    eax,DWORD PTR [esp+0x2c]
  402997:	push   eax
  402998:	push   0x14e
  40299d:	push   ecx
  40299e:	call   DWORD PTR ds:0x44325c
  4029a4:	mov    eax,DWORD PTR [esp+0x34]
  4029a8:	inc    eax
  4029a9:	add    esi,0x14
  4029ac:	mov    DWORD PTR [esp+0x34],eax
  4029b0:	cmp    eax,DWORD PTR [esp+0x48]
  4029b4:	jb     0x402960
  4029b6:	push   edi
  4029b7:	call   DWORD PTR ds:0x4430f8
  4029bd:	jmp    0x4029dd
  4029bf:	cmp    DWORD PTR [esp+0x40],0x219
  4029c7:	jne    0x4029dd
  4029c9:	mov    edx,DWORD PTR [esp+0x2c]
  4029cd:	push   0x0
  4029cf:	push   0x9c4
  4029d4:	push   0x1
  4029d6:	push   edx
  4029d7:	call   DWORD PTR ds:0x44326c
  4029dd:	mov    edi,DWORD PTR [esp+0x2c]
  4029e1:	push   edi
  4029e2:	call   DWORD PTR ds:0x443210
  4029e8:	mov    DWORD PTR [esp+0x38],eax
  4029ec:	mov    eax,DWORD PTR [esp+0x40]
  4029f0:	sub    eax,0x2
  4029f3:	je     0x40320e
  4029f9:	sub    eax,0x3
  4029fc:	je     0x402f71
  402a02:	sub    eax,0xa
  402a05:	je     0x403104
  402a0b:	mov    eax,DWORD PTR [esp+0x54]
  402a0f:	mov    ecx,DWORD PTR [esp+0x30]
  402a13:	mov    edx,DWORD PTR [esp+0x40]
  402a17:	push   eax
  402a18:	mov    eax,DWORD PTR [esp+0x3c]
  402a1c:	push   ecx
  402a1d:	push   edx
  402a1e:	push   eax
  402a1f:	call   DWORD PTR ds:0x443230
  402a25:	lea    ecx,[esp+0xc48]
  402a2c:	push   ecx
  402a2d:	lea    edx,[esp+0x46c]
  402a34:	push   edx
  402a35:	call   DWORD PTR ds:0x4430f4
  402a3b:	mov    esi,DWORD PTR ds:0x443128
  402a41:	lea    eax,[esp+0x468]
  402a48:	push   eax
  402a49:	call   esi
  402a4b:	test   eax,eax
  402a4d:	je     0x402a62
  402a4f:	push   0x445ae4
  402a54:	lea    ecx,[esp+0x46c]
  402a5b:	push   ecx
  402a5c:	call   DWORD PTR ds:0x443104
  402a62:	lea    edx,[esp+0x12f8]
  402a69:	push   edx
  402a6a:	lea    eax,[esp+0x46c]
  402a71:	push   eax
  402a72:	call   DWORD PTR ds:0x443104
  402a78:	push   0x0
  402a7a:	lea    ecx,[esp+0x24c]
  402a81:	push   ecx
  402a82:	lea    edx,[esp+0x470]
  402a89:	push   edx
  402a8a:	call   esi
  402a8c:	push   eax
  402a8d:	lea    eax,[esp+0x474]
  402a94:	push   eax
  402a95:	push   0x0
  402a97:	call   DWORD PTR ds:0x44327c
  402a9d:	mov    ecx,DWORD PTR [esp+0x30]
  402aa1:	push   ecx
  402aa2:	lea    edx,[esp+0x24c]
  402aa9:	push   edx
  402aaa:	mov    eax,0x14
  402aaf:	add    DWORD PTR [esp+0x254],eax
  402ab6:	add    DWORD PTR [esp+0x25c],eax
  402abd:	push   0x0
  402abf:	push   edi
  402ac0:	call   DWORD PTR ds:0x443278
  402ac6:	test   eax,eax
  402ac8:	jne    0x402ad0
  402aca:	call   DWORD PTR ds:0x443120
  402ad0:	mov    eax,DWORD PTR [esp+0x40]
  402ad4:	sub    eax,0xf
  402ad7:	je     0x402e2d
  402add:	sub    eax,0x75
  402ae0:	je     0x402e11
  402ae6:	xor    esi,esi
  402ae8:	sub    eax,0x21
  402aeb:	jne    0x402af4
  402aed:	push   esi
  402aee:	call   DWORD PTR ds:0x443274
  402af4:	push   esi
  402af5:	mov    DWORD PTR [esp+0x3c],esi
  402af9:	mov    DWORD PTR [esp+0x2c],esi
  402afd:	mov    DWORD PTR [esp+0x4c],esi
  402b01:	call   DWORD PTR ds:0x4432dc
  402b07:	lea    eax,[esp+0x38]
  402b0b:	push   eax
  402b0c:	push   0x44337c
  402b11:	push   0x1
  402b13:	push   esi
  402b14:	push   0x44338c
  402b19:	call   DWORD PTR ds:0x4432d8
  402b1f:	mov    edx,DWORD PTR [esp+0x38]
  402b23:	mov    esi,DWORD PTR [edx]
  402b25:	lea    eax,[esp+0x28]
  402b29:	push   eax
  402b2a:	mov    ecx,0x3
  402b2f:	mov    WORD PTR [esp+0x24c],cx
  402b37:	mov    ebx,DWORD PTR [esp+0x24c]
  402b3e:	sub    esp,0x10
  402b41:	mov    eax,esp
  402b43:	mov    DWORD PTR [eax],ebx
  402b45:	mov    ebx,DWORD PTR [esp+0x260]
  402b4c:	mov    ecx,0x2
  402b51:	mov    DWORD PTR [eax+0x4],ebx
  402b54:	mov    DWORD PTR [eax+0x8],ecx
  402b57:	mov    ecx,DWORD PTR [esp+0x268]
  402b5e:	push   edx
  402b5f:	mov    edx,DWORD PTR [esi+0x24]
  402b62:	mov    DWORD PTR [eax+0xc],ecx
  402b65:	call   edx
  402b67:	mov    eax,DWORD PTR [esp+0x28]
  402b6b:	mov    ecx,DWORD PTR [eax]
  402b6d:	lea    edx,[esp+0x48]
  402b71:	push   edx
  402b72:	push   0x44336c
  402b77:	push   eax
  402b78:	mov    eax,DWORD PTR [ecx]
  402b7a:	call   eax
  402b7c:	mov    ecx,DWORD PTR [esp+0x44]
  402b80:	cmp    ecx,DWORD PTR [esp+0x38]
  402b84:	jle    0x402b8e
  402b86:	mov    edx,DWORD PTR ds:0x44e86c
  402b8c:	jmp    0x402ba4
  402b8e:	cmp    edi,eax
  402b90:	je     0x402b9c
  402b92:	mov    eax,DWORD PTR [esp+0x30]
  402b96:	mov    DWORD PTR [esp+0x44],eax
  402b9a:	jmp    0x402ba8
  402b9c:	mov    edx,DWORD PTR [esp+0x68]
  402ba0:	add    edx,DWORD PTR [esp+0x40]
  402ba4:	mov    DWORD PTR [esp+0x44],edx
  402ba8:	mov    eax,ds:0x44e868
  402bad:	mov    ebx,DWORD PTR [esp+0x40]
  402bb1:	mov    esi,eax
  402bb3:	sub    esi,edi
  402bb5:	add    esi,ecx
  402bb7:	lea    ecx,[ebx+ebx*1+0x3]
  402bbb:	imul   esi,ecx
  402bbe:	cmp    DWORD PTR [esp+0x28],0x0
  402bc3:	je     0x402bdd
  402bc5:	lea    edx,[eax+edi*1+0x440ba0]
  402bcc:	mov    eax,DWORD PTR [esp+0x44]
  402bd0:	push   esi
  402bd1:	add    edx,ebx
  402bd3:	push   edx
  402bd4:	push   eax
  402bd5:	call   0x4054e0
  402bda:	add    esp,0xc
  402bdd:	call   DWORD PTR ds:0x443020
  402be3:	movzx  ecx,WORD PTR [esp+0x30]
  402be8:	push   ecx
  402be9:	push   0x445aec
  402bee:	call   DWORD PTR ds:0x4430d4
  402bf4:	push   eax
  402bf5:	call   DWORD PTR ds:0x443288
  402bfb:	mov    edx,DWORD PTR ds:0x44e868
  402c01:	add    edx,edi
  402c03:	cmp    ebx,edx
  402c05:	jne    0x402c18
  402c07:	cmp    DWORD PTR [esp+0x48],0x0
  402c0c:	je     0x402c18
  402c0e:	mov    eax,DWORD PTR [esp+0x44]
  402c12:	push   esi
  402c13:	call   0x401170
  402c18:	test   edi,edi
  402c1a:	jne    0x402c27
  402c1c:	mov    ecx,DWORD PTR [esp+0x44]
  402c20:	lea    eax,[esp+0x64]
  402c24:	mov    DWORD PTR [ecx+0x1],eax
  402c27:	xor    eax,eax
  402c29:	mov    ecx,0x1
  402c2e:	mov    edi,ecx
  402c30:	mov    BYTE PTR [esp+0x258],al
  402c37:	cmp    ebx,0x21
  402c3a:	je     0x402c4e
  402c3c:	cmp    ebx,0x60
  402c3f:	je     0x402c4a
  402c41:	cmp    ebx,0x7e
  402c44:	jne    0x402c55
  402c46:	xor    edi,edi
  402c48:	jmp    0x402c37
  402c4a:	xor    ecx,ecx
  402c4c:	jmp    0x402c37
  402c4e:	mov    eax,0x1
  402c53:	jmp    0x402c37
  402c55:	test   eax,eax
  402c57:	je     0x402c63
  402c59:	mov    WORD PTR [esp+0x258],0x7
  402c63:	mov    esi,DWORD PTR ds:0x44312c
  402c69:	test   ecx,ecx
  402c6b:	je     0x402c7c
  402c6d:	push   0x445af8
  402c72:	lea    edx,[esp+0x25c]
  402c79:	push   edx
  402c7a:	call   esi
  402c7c:	test   edi,edi
  402c7e:	je     0x402c8f
  402c80:	push   0x445afc
  402c85:	lea    eax,[esp+0x25c]
  402c8c:	push   eax
  402c8d:	call   esi
  402c8f:	lea    ecx,[esp+0x258]
  402c96:	push   ecx
  402c97:	call   DWORD PTR ds:0x443100
  402c9d:	mov    esi,DWORD PTR ds:0x443124
  402ca3:	push   0x0
  402ca5:	push   0x445b00
  402caa:	push   0x44d930
  402caf:	call   esi
  402cb1:	push   0x0
  402cb3:	push   0x445b08
  402cb8:	push   0x44d930
  402cbd:	call   esi
  402cbf:	mov    esi,DWORD PTR ds:0x443114
  402cc5:	push   0x2
  402cc7:	lea    edx,[esp+0x46c]
  402cce:	push   edx
  402ccf:	push   0x445b10
  402cd4:	push   0x445b14
  402cd9:	push   0x44d930
  402cde:	call   esi
  402ce0:	push   0x2
  402ce2:	lea    eax,[esp+0xc4c]
  402ce9:	push   eax
  402cea:	push   0x445b1c
  402cef:	push   0x445b20
  402cf4:	push   0x44d930
  402cf9:	call   esi
  402cfb:	push   0x9c
  402d00:	lea    ecx,[esp+0xdc]
  402d07:	push   0x0
  402d09:	push   ecx
  402d0a:	call   0x40a550
  402d0f:	mov    esi,DWORD PTR ds:0x4430fc
  402d15:	add    esp,0xc
  402d18:	lea    edx,[esp+0xd8]
  402d1f:	push   edx
  402d20:	mov    DWORD PTR [esp+0xdc],0x9c
  402d2b:	call   esi
  402d2d:	test   eax,eax
  402d2f:	jne    0x402d46
  402d31:	lea    eax,[esp+0xd8]
  402d38:	push   eax
  402d39:	mov    DWORD PTR [esp+0xdc],0x94
  402d44:	call   esi
  402d46:	mov    eax,DWORD PTR [esp+0xe8]
  402d4d:	sub    eax,0x0
  402d50:	je     0x402d64
  402d52:	dec    eax
  402d53:	je     0x402d64
  402d55:	dec    eax
  402d56:	je     0x402d64
  402d58:	mov    ecx,DWORD PTR ds:0x44e858
  402d5e:	mov    DWORD PTR ds:0x44e854,ecx
  402d64:	push   0x0
  402d66:	push   0x0
  402d68:	push   0x0
  402d6a:	push   0x445b28
  402d6f:	call   DWORD PTR ds:0x44307c
  402d75:	lea    edx,[esp+0xd8]
  402d7c:	mov    esi,eax
  402d7e:	push   edx
  402d7f:	push   esi
  402d80:	call   DWORD PTR ds:0x443078
  402d86:	push   esi
  402d87:	call   DWORD PTR ds:0x443050
  402d8d:	mov    esi,DWORD PTR ds:0x443224
  402d93:	push   0x7
  402d95:	call   esi
  402d97:	push   0x0
  402d99:	call   esi
  402d9b:	push   0x8
  402d9d:	call   esi
  402d9f:	mov    esi,DWORD PTR ds:0x44e868
  402da5:	lea    eax,[esp+0x248]
  402dac:	push   eax
  402dad:	call   0x4051ab
  402db2:	lea    ecx,[esp+0x24c]
  402db9:	add    esp,0x4
  402dbc:	push   ecx
  402dbd:	call   0x405052
  402dc2:	add    esp,0x4
  402dc5:	lea    edx,[esp+0xc0]
  402dcc:	push   edx
  402dcd:	push   esi
  402dce:	call   DWORD PTR ds:0x443290
  402dd4:	push   0x101
  402dd9:	lea    eax,[esp+0xc4]
  402de0:	push   eax
  402de1:	push   0xffffffff
  402de3:	lea    ecx,[esp+0x98]
  402dea:	push   ecx
  402deb:	push   0x1
  402ded:	call   DWORD PTR ds:0x443284
  402df3:	mov    eax,DWORD PTR [esp+0x44]
  402df7:	push   eax
  402df8:	call   eax
  402dfa:	pop    edi
  402dfb:	pop    esi
  402dfc:	pop    ebx
  402dfd:	mov    ecx,DWORD PTR [esp+0x16f0]
  402e04:	xor    ecx,esp
  402e06:	call   0x403edd
  402e0b:	mov    esp,ebp
  402e0d:	pop    ebp
  402e0e:	ret    0x10
  402e11:	mov    eax,0x2
  402e16:	pop    edi
  402e17:	pop    esi
  402e18:	pop    ebx
  402e19:	mov    ecx,DWORD PTR [esp+0x16f0]
  402e20:	xor    ecx,esp
  402e22:	call   0x403edd
  402e27:	mov    esp,ebp
  402e29:	pop    ebp
  402e2a:	ret    0x10
  402e2d:	mov    eax,DWORD PTR [esp+0x2c]
  402e31:	lea    edx,[esp+0xd8]
  402e38:	push   edx
  402e39:	push   eax
  402e3a:	call   DWORD PTR ds:0x443254
  402e40:	mov    esi,eax
  402e42:	push   esi
  402e43:	call   DWORD PTR ds:0x443064
  402e49:	mov    ecx,DWORD PTR [esp+0x30]
  402e4d:	mov    edi,eax
  402e4f:	push   ecx
  402e50:	push   edi
  402e51:	call   ebx
  402e53:	push   0xcc0020
  402e58:	push   0x0
  402e5a:	push   0x0
  402e5c:	push   edi
  402e5d:	push   0x118
  402e62:	push   0x118
  402e67:	push   0x0
  402e69:	push   0x0
  402e6b:	push   esi
  402e6c:	call   DWORD PTR ds:0x443040
  402e72:	push   0x6464ff
  402e77:	push   0x2
  402e79:	push   0x0
  402e7b:	call   DWORD PTR ds:0x443074
  402e81:	mov    edi,eax
  402e83:	push   edi
  402e84:	push   esi
  402e85:	call   ebx
  402e87:	push   0x0
  402e89:	push   0x77
  402e8b:	push   0x77
  402e8d:	push   esi
  402e8e:	mov    DWORD PTR [esp+0x78],eax
  402e92:	call   DWORD PTR ds:0x44303c
  402e98:	push   0x23
  402e9a:	push   0x77
  402e9c:	push   esi
  402e9d:	call   DWORD PTR ds:0x443048
  402ea3:	mov    edx,DWORD PTR [esp+0x68]
  402ea7:	push   edx
  402ea8:	push   esi
  402ea9:	call   ebx
  402eab:	push   edi
  402eac:	mov    edi,DWORD PTR ds:0x443058
  402eb2:	call   edi
  402eb4:	push   0x505050
  402eb9:	push   0x3
  402ebb:	push   0x0
  402ebd:	call   DWORD PTR ds:0x443074
  402ec3:	push   eax
  402ec4:	push   esi
  402ec5:	mov    DWORD PTR [esp+0x50],eax
  402ec9:	call   ebx
  402ecb:	push   0x0
  402ecd:	push   0x77
  402ecf:	push   0x77
  402ed1:	push   esi
  402ed2:	mov    DWORD PTR [esp+0x78],eax
  402ed6:	call   DWORD PTR ds:0x44303c
  402edc:	push   0x41
  402ede:	push   0x9b
  402ee3:	push   esi
  402ee4:	call   DWORD PTR ds:0x443048
  402eea:	mov    eax,DWORD PTR [esp+0x68]
  402eee:	push   eax
  402eef:	push   esi
  402ef0:	call   ebx
  402ef2:	mov    ecx,DWORD PTR [esp+0x48]
  402ef6:	push   ecx
  402ef7:	call   edi
  402ef9:	push   0xaaaaaa
  402efe:	push   0x3
  402f00:	push   0x0
  402f02:	call   DWORD PTR ds:0x443074
  402f08:	push   eax
  402f09:	push   esi
  402f0a:	mov    DWORD PTR [esp+0x3c],eax
  402f0e:	call   ebx
  402f10:	push   0x50
  402f12:	mov    DWORD PTR [esp+0x40],eax
  402f16:	call   DWORD PTR ds:0x443088
  402f1c:	push   eax
  402f1d:	push   esi
  402f1e:	mov    DWORD PTR [esp+0x50],eax
  402f22:	call   ebx
  402f24:	push   0x7d
  402f26:	push   0x7d
  402f28:	push   0x71
  402f2a:	push   0x71
  402f2c:	push   esi
  402f2d:	mov    DWORD PTR [esp+0x7c],eax
  402f31:	call   DWORD PTR ds:0x44306c
  402f37:	mov    edx,DWORD PTR [esp+0x68]
  402f3b:	push   edx
  402f3c:	push   esi
  402f3d:	call   ebx
  402f3f:	mov    eax,DWORD PTR [esp+0x48]
  402f43:	push   eax
  402f44:	call   edi
  402f46:	mov    ecx,DWORD PTR [esp+0x3c]
  402f4a:	push   ecx
  402f4b:	push   esi
  402f4c:	call   ebx
  402f4e:	mov    edx,DWORD PTR [esp+0x34]
  402f52:	push   edx
  402f53:	call   edi
  402f55:	mov    eax,0xf
  402f5a:	pop    edi
  402f5b:	pop    esi
  402f5c:	pop    ebx
  402f5d:	mov    ecx,DWORD PTR [esp+0x16f0]
  402f64:	xor    ecx,esp
  402f66:	call   0x403edd
  402f6b:	mov    esp,ebp
  402f6d:	pop    ebp
  402f6e:	ret    0x10
  402f71:	mov    eax,DWORD PTR [esp+0x54]
  402f75:	movzx  ecx,ax
  402f78:	push   0x7f02
  402f7d:	shr    eax,0x10
  402f80:	push   0x0
  402f82:	mov    DWORD PTR ds:0x44e8f8,ecx
  402f88:	mov    ds:0x44e8f4,eax
  402f8d:	call   DWORD PTR ds:0x44321c
  402f93:	push   eax
  402f94:	call   DWORD PTR ds:0x443264
  402f9a:	push   0x1
  402f9c:	mov    DWORD PTR [esp+0x6c],eax
  402fa0:	call   DWORD PTR ds:0x44324c
  402fa6:	mov    eax,ds:0x44e8f0
  402fab:	test   eax,eax
  402fad:	je     0x402fb6
  402faf:	push   eax
  402fb0:	call   DWORD PTR ds:0x443058
  402fb6:	mov    ecx,DWORD PTR ds:0x44e8f4
  402fbc:	lea    edx,[ecx+ecx*1]
  402fbf:	mov    eax,0x55555556
  402fc4:	imul   edx
  402fc6:	mov    eax,edx
  402fc8:	shr    eax,0x1f
  402fcb:	add    eax,edx
  402fcd:	push   eax
  402fce:	mov    eax,ds:0x44e8f8
  402fd3:	cdq    
  402fd4:	mov    esi,DWORD PTR ds:0x443038
  402fda:	sub    eax,edx
  402fdc:	sar    eax,1
  402fde:	push   eax
  402fdf:	mov    eax,0x55555556
  402fe4:	imul   ecx
  402fe6:	mov    ecx,edx
  402fe8:	shr    ecx,0x1f
  402feb:	add    ecx,edx
  402fed:	push   ecx
  402fee:	push   0x0
  402ff0:	call   esi
  402ff2:	mov    ecx,DWORD PTR ds:0x44e8f4
  402ff8:	mov    ebx,eax
  402ffa:	lea    edx,[ecx+ecx*1]
  402ffd:	mov    eax,0x55555556
  403002:	imul   edx
  403004:	mov    edi,DWORD PTR ds:0x44e8f8
  40300a:	mov    eax,edx
  40300c:	shr    eax,0x1f
  40300f:	add    eax,edx
  403011:	push   eax
  403012:	mov    eax,0x55555556
  403017:	imul   ecx
  403019:	mov    ecx,edx
  40301b:	shr    ecx,0x1f
  40301e:	add    ecx,edx
  403020:	mov    eax,edi
  403022:	cdq    
  403023:	push   edi
  403024:	sub    eax,edx
  403026:	push   ecx
  403027:	sar    eax,1
  403029:	push   eax
  40302a:	mov    DWORD PTR [esp+0xd0],ebx
  403031:	call   esi
  403033:	mov    ecx,DWORD PTR ds:0x44e8f8
  403039:	mov    edi,eax
  40303b:	mov    eax,ds:0x44e8f4
  403040:	cdq    
  403041:	sub    eax,edx
  403043:	sar    eax,1
  403045:	push   eax
  403046:	lea    edx,[ecx+ecx*1]
  403049:	mov    eax,0x55555556
  40304e:	imul   edx
  403050:	mov    eax,edx
  403052:	shr    eax,0x1f
  403055:	add    eax,edx
  403057:	push   eax
  403058:	mov    eax,0x55555556
  40305d:	imul   ecx
  40305f:	mov    ecx,edx
  403061:	shr    ecx,0x1f
  403064:	push   0x0
  403066:	add    ecx,edx
  403068:	push   ecx
  403069:	mov    DWORD PTR [esp+0xd4],edi
  403070:	call   esi
  403072:	push   0x1
  403074:	push   0x1
  403076:	push   0x0
  403078:	push   0x0
  40307a:	mov    DWORD PTR [esp+0xd8],eax
  403081:	call   DWORD PTR ds:0x443070
  403087:	push   0x1
  403089:	push   0x1
  40308b:	mov    esi,eax
  40308d:	push   0x0
  40308f:	mov    DWORD PTR [esp+0xe0],esi
  403096:	push   0x0
  403098:	call   DWORD PTR ds:0x443070
  40309e:	push   0x2
  4030a0:	push   edi
  4030a1:	mov    edi,DWORD PTR [esp+0xd8]
  4030a8:	push   ebx
  4030a9:	mov    ebx,DWORD PTR ds:0x443068
  4030af:	push   edi
  4030b0:	mov    ds:0x44e8f0,eax
  4030b5:	call   ebx
  4030b7:	mov    edx,DWORD PTR [esp+0xcc]
  4030be:	mov    eax,DWORD PTR [esp+0xc8]
  4030c5:	push   0x2
  4030c7:	push   edx
  4030c8:	push   eax
  4030c9:	push   esi
  4030ca:	call   ebx
  4030cc:	mov    ecx,DWORD PTR ds:0x44e8f0
  4030d2:	push   0x3
  4030d4:	push   esi
  4030d5:	push   edi
  4030d6:	push   ecx
  4030d7:	call   ebx
  4030d9:	mov    edi,DWORD PTR ds:0x443058
  4030df:	xor    esi,esi
  4030e1:	mov    edx,DWORD PTR [esp+esi*4+0xc0]
  4030e8:	push   edx
  4030e9:	call   edi
  4030eb:	inc    esi
  4030ec:	cmp    esi,0x6
  4030ef:	jl     0x4030e1
  4030f1:	mov    eax,DWORD PTR [esp+0x68]
  4030f5:	push   eax
  4030f6:	call   DWORD PTR ds:0x443264
  4030fc:	push   0x0
  4030fe:	call   DWORD PTR ds:0x44324c
  403104:	mov    edx,DWORD PTR [esp+0x38]
  403108:	lea    ecx,[esp+0xd8]
  40310f:	push   ecx
  403110:	push   edx
  403111:	call   DWORD PTR ds:0x443254
  403117:	mov    esi,eax
  403119:	mov    eax,ds:0x44e8f4
  40311e:	cdq    
  40311f:	sub    eax,edx
  403121:	sar    eax,1
  403123:	push   0x0
  403125:	push   eax
  403126:	mov    eax,ds:0x44e8f8
  40312b:	cdq    
  40312c:	sub    eax,edx
  40312e:	sar    eax,1
  403130:	push   eax
  403131:	push   esi
  403132:	call   DWORD PTR ds:0x443044
  403138:	mov    eax,ds:0x44e8f0
  40313d:	push   eax
  40313e:	push   esi
  40313f:	call   DWORD PTR ds:0x443060
  403145:	fild   DWORD PTR ds:0x44e8f4
  40314b:	sub    esp,0x10
  40314e:	fld    QWORD PTR ds:0x4479a0
  403154:	fmul   st(1),st
  403156:	fxch   st(1)
  403158:	fstp   QWORD PTR [esp+0x8]
  40315c:	fimul  DWORD PTR ds:0x44e8f8
  403162:	fstp   QWORD PTR [esp]
  403165:	call   0x404da9
  40316a:	fstp   QWORD PTR [esp+0x258]
  403171:	add    esp,0x10
  403174:	fldz   
  403176:	fst    QWORD PTR [esp+0x58]
  40317a:	fild   DWORD PTR [esp+0x78]
  40317e:	fst    QWORD PTR [esp+0x68]
  403182:	fcompp 
  403184:	fnstsw ax
  403186:	test   ah,0x41
  403189:	jne    0x4031fb
  40318b:	fild   DWORD PTR [esp+0x40]
  40318f:	mov    edi,DWORD PTR ds:0x44303c
  403195:	mov    ebx,DWORD PTR ds:0x443048
  40319b:	fstp   QWORD PTR [esp+0x78]
  40319f:	nop
  4031a0:	push   0x0
  4031a2:	push   0x0
  4031a4:	push   0x0
  4031a6:	push   esi
  4031a7:	call   edi
  4031a9:	fld    QWORD PTR [esp+0x58]
  4031ad:	call   0x4420a0
  4031b2:	fmul   QWORD PTR [esp+0x248]
  4031b9:	fsubr  QWORD PTR ds:0x4479a0
  4031bf:	call   0x441e80
  4031c4:	fld    QWORD PTR [esp+0x58]
  4031c8:	push   eax
  4031c9:	call   0x441f70
  4031ce:	fmul   QWORD PTR [esp+0x24c]
  4031d5:	fadd   QWORD PTR ds:0x4479a0
  4031db:	call   0x441e80
  4031e0:	push   eax
  4031e1:	push   esi
  4031e2:	call   ebx
  4031e4:	fld    QWORD PTR [esp+0x58]
  4031e8:	fadd   QWORD PTR [esp+0x78]
  4031ec:	fst    QWORD PTR [esp+0x58]
  4031f0:	fcomp  QWORD PTR [esp+0x68]
  4031f4:	fnstsw ax
  4031f6:	test   ah,0x5
  4031f9:	jnp    0x4031a0
  4031fb:	mov    edx,DWORD PTR [esp+0x38]
  4031ff:	lea    ecx,[esp+0xd8]
  403206:	push   ecx
  403207:	push   edx
  403208:	call   DWORD PTR ds:0x443258
  40320e:	mov    eax,ds:0x44e8f0
  403213:	push   eax
  403214:	call   DWORD PTR ds:0x443058
  40321a:	push   0x0
  40321c:	call   DWORD PTR ds:0x443274
  403222:	jmp    0x403262
  403224:	xor    eax,eax
  403226:	mov    ecx,DWORD PTR [esp+0x78]
  40322a:	mov    edx,DWORD PTR [esp+0x34]
  40322e:	push   ecx
  40322f:	push   edx
  403230:	push   ebx
  403231:	push   esi
  403232:	push   eax
  403233:	mov    eax,DWORD PTR [esp+0x25c]
  40323a:	push   eax
  40323b:	call   DWORD PTR ds:0x4432a8
  403241:	mov    edx,DWORD PTR [esp+0x2c]
  403245:	lea    ecx,[esp+0xd8]
  40324c:	push   ecx
  40324d:	push   edx
  40324e:	call   DWORD PTR ds:0x443258
  403254:	mov    eax,DWORD PTR [esp+0x248]
  40325b:	push   eax
  40325c:	call   DWORD PTR ds:0x4432ac
  403262:	mov    ecx,DWORD PTR [esp+0x16fc]
  403269:	pop    edi
  40326a:	pop    esi
  40326b:	pop    ebx
  40326c:	xor    ecx,esp
  40326e:	xor    eax,eax
  403270:	call   0x403edd
  403275:	mov    esp,ebp
  403277:	pop    ebp
  403278:	ret    0x10
  40327b:	nop
  40327c:	repnz and eax,0x26c70040
  403282:	inc    eax
  403283:	add    BYTE PTR [edx-0x27ffbfdc],ah
  403289:	and    al,0x40
  40328b:	add    BYTE PTR [esi],ah
  40328d:	and    eax,0x255e0040
  403292:	inc    eax
  403293:	add    ch,cl
  403295:	and    eax,0x29dd0040
  40329a:	inc    eax
  40329b:	add    BYTE PTR [eax],al
  40329d:	add    DWORD PTR [edi],eax
  40329f:	pop    es
  4032a0:	pop    es
  4032a1:	pop    es
  4032a2:	pop    es
  4032a3:	pop    es
  4032a4:	pop    es
  4032a5:	add    al,BYTE PTR [ebx]
  4032a7:	pop    es
  4032a8:	add    al,0x7
  4032aa:	pop    es
  4032ab:	pop    es
  4032ac:	add    eax,0x55060507
  4032b1:	mov    ebp,esp
  4032b3:	push   esi
  4032b4:	mov    esi,ecx
  4032b6:	mov    eax,DWORD PTR [esi+0x10]
  4032b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4032bc:	push   edi
  4032bd:	cmp    eax,ecx
  4032bf:	jae    0x4032cb
  4032c1:	push   0x447978
  4032c6:	call   0x403d60
  4032cb:	mov    edi,DWORD PTR [ebp+0xc]
  4032ce:	sub    eax,ecx
  4032d0:	cmp    eax,edi
  4032d2:	jae    0x4032d6
  4032d4:	mov    edi,eax
  4032d6:	test   edi,edi
  4032d8:	je     0x40332a
  4032da:	mov    edx,DWORD PTR [esi+0x14]
  4032dd:	push   ebx
  4032de:	cmp    edx,0x10
  4032e1:	jb     0x4032e7
  4032e3:	mov    ebx,DWORD PTR [esi]
  4032e5:	jmp    0x4032e9
  4032e7:	mov    ebx,esi
  4032e9:	cmp    edx,0x10
  4032ec:	jb     0x4032f2
  4032ee:	mov    edx,DWORD PTR [esi]
  4032f0:	jmp    0x4032f4
  4032f2:	mov    edx,esi
  4032f4:	sub    eax,edi
  4032f6:	add    ebx,ecx
  4032f8:	push   eax
  4032f9:	add    ebx,edi
  4032fb:	add    edx,ecx
  4032fd:	push   ebx
  4032fe:	push   edx
  4032ff:	call   0x404030
  403304:	mov    eax,DWORD PTR [esi+0x10]
  403307:	add    esp,0xc
  40330a:	sub    eax,edi
  40330c:	cmp    DWORD PTR [esi+0x14],0x10
  403310:	mov    DWORD PTR [esi+0x10],eax
  403313:	pop    ebx
  403314:	jb     0x403324
  403316:	mov    ecx,DWORD PTR [esi]
  403318:	mov    BYTE PTR [ecx+eax*1],0x0
  40331c:	pop    edi
  40331d:	mov    eax,esi
  40331f:	pop    esi
  403320:	pop    ebp
  403321:	ret    0x8
  403324:	mov    ecx,esi
  403326:	mov    BYTE PTR [ecx+eax*1],0x0
  40332a:	pop    edi
  40332b:	mov    eax,esi
  40332d:	pop    esi
  40332e:	pop    ebp
  40332f:	ret    0x8
  403332:	int3   
  403333:	int3   
  403334:	int3   
  403335:	int3   
  403336:	int3   
  403337:	int3   
  403338:	int3   
  403339:	int3   
  40333a:	int3   
  40333b:	int3   
  40333c:	int3   
  40333d:	int3   
  40333e:	int3   
  40333f:	int3   
  403340:	push   ebp
  403341:	mov    ebp,esp
  403343:	mov    ecx,DWORD PTR [ebp+0x8]
  403346:	push   ebx
  403347:	mov    ebx,DWORD PTR [ebp+0xc]
  40334a:	push   esi
  40334b:	mov    esi,DWORD PTR [ecx+0x10]
  40334e:	cmp    esi,ebx
  403350:	jae    0x40335c
  403352:	push   0x447978
  403357:	call   0x403d60
  40335c:	sub    esi,ebx
  40335e:	cmp    eax,esi
  403360:	jae    0x403364
  403362:	mov    esi,eax
  403364:	cmp    edi,ecx
  403366:	jne    0x403386
  403368:	lea    ecx,[esi+ebx*1]
  40336b:	or     eax,0xffffffff
  40336e:	mov    esi,edi
  403370:	call   0x4035b0
  403375:	mov    eax,ebx
  403377:	xor    ecx,ecx
  403379:	call   0x4035b0
  40337e:	pop    esi
  40337f:	mov    eax,edi
  403381:	pop    ebx
  403382:	pop    ebp
  403383:	ret    0x8
  403386:	mov    eax,edi
  403388:	call   0x403630
  40338d:	test   al,al
  40338f:	je     0x4033e0
  403391:	mov    ecx,DWORD PTR [ebp+0x8]
  403394:	mov    eax,0x8
  403399:	cmp    DWORD PTR [ecx+0x14],eax
  40339c:	jb     0x4033a0
  40339e:	mov    ecx,DWORD PTR [ecx]
  4033a0:	cmp    DWORD PTR [edi+0x14],eax
  4033a3:	jb     0x4033a9
  4033a5:	mov    eax,DWORD PTR [edi]
  4033a7:	jmp    0x4033ab
  4033a9:	mov    eax,edi
  4033ab:	mov    edx,DWORD PTR [ebp+0xc]
  4033ae:	lea    ebx,[esi+esi*1]
  4033b1:	push   ebx
  4033b2:	lea    ecx,[ecx+edx*2]
  4033b5:	push   ecx
  4033b6:	push   eax
  4033b7:	call   0x4054e0
  4033bc:	add    esp,0xc
  4033bf:	cmp    DWORD PTR [edi+0x14],0x8
  4033c3:	mov    DWORD PTR [edi+0x10],esi
  4033c6:	jb     0x4033d8
  4033c8:	mov    eax,DWORD PTR [edi]
  4033ca:	xor    edx,edx
  4033cc:	mov    WORD PTR [ebx+eax*1],dx
  4033d0:	pop    esi
  4033d1:	mov    eax,edi
  4033d3:	pop    ebx
  4033d4:	pop    ebp
  4033d5:	ret    0x8
  4033d8:	mov    eax,edi
  4033da:	xor    edx,edx
  4033dc:	mov    WORD PTR [ebx+eax*1],dx
  4033e0:	pop    esi
  4033e1:	mov    eax,edi
  4033e3:	pop    ebx
  4033e4:	pop    ebp
  4033e5:	ret    0x8
  4033e8:	int3   
  4033e9:	int3   
  4033ea:	int3   
  4033eb:	int3   
  4033ec:	int3   
  4033ed:	int3   
  4033ee:	int3   
  4033ef:	int3   
  4033f0:	push   ebp
  4033f1:	mov    ebp,esp
  4033f3:	push   esi
  4033f4:	mov    esi,eax
  4033f6:	push   edi
  4033f7:	mov    edi,ecx
  4033f9:	test   esi,esi
  4033fb:	je     0x403455
  4033fd:	mov    ecx,DWORD PTR [edi+0x14]
  403400:	cmp    ecx,0x8
  403403:	jb     0x403409
  403405:	mov    eax,DWORD PTR [edi]
  403407:	jmp    0x40340b
  403409:	mov    eax,edi
  40340b:	cmp    esi,eax
  40340d:	jb     0x403455
  40340f:	cmp    ecx,0x8
  403412:	jb     0x403418
  403414:	mov    eax,DWORD PTR [edi]
  403416:	jmp    0x40341a
  403418:	mov    eax,edi
  40341a:	mov    edx,DWORD PTR [edi+0x10]
  40341d:	lea    eax,[eax+edx*2]
  403420:	cmp    eax,esi
  403422:	jbe    0x403455
  403424:	cmp    ecx,0x8
  403427:	jb     0x40343f
  403429:	mov    eax,DWORD PTR [edi]
  40342b:	sub    esi,eax
  40342d:	mov    eax,DWORD PTR [ebp+0x8]
  403430:	sar    esi,1
  403432:	push   esi
  403433:	push   edi
  403434:	call   0x403340
  403439:	pop    edi
  40343a:	pop    esi
  40343b:	pop    ebp
  40343c:	ret    0x4
  40343f:	mov    eax,edi
  403441:	sub    esi,eax
  403443:	mov    eax,DWORD PTR [ebp+0x8]
  403446:	sar    esi,1
  403448:	push   esi
  403449:	push   edi
  40344a:	call   0x403340
  40344f:	pop    edi
  403450:	pop    esi
  403451:	pop    ebp
  403452:	ret    0x4
  403455:	push   ebx
  403456:	mov    ebx,DWORD PTR [ebp+0x8]
  403459:	cmp    ebx,0x7ffffffe
  40345f:	jbe    0x40346b
  403461:	push   0x447968
  403466:	call   0x403d13
  40346b:	mov    eax,DWORD PTR [edi+0x14]
  40346e:	cmp    eax,ebx
  403470:	jae    0x40348b
  403472:	mov    ecx,DWORD PTR [edi+0x10]
  403475:	push   ecx
  403476:	push   ebx
  403477:	push   edi
  403478:	call   0x4037f0
  40347d:	test   ebx,ebx
  40347f:	je     0x4034e9
  403481:	cmp    DWORD PTR [edi+0x14],0x8
  403485:	jb     0x4034b5
  403487:	mov    eax,DWORD PTR [edi]
  403489:	jmp    0x4034b7
  40348b:	test   ebx,ebx
  40348d:	jne    0x403481
  40348f:	mov    DWORD PTR [edi+0x10],ebx
  403492:	cmp    eax,0x8
  403495:	jb     0x4034a7
  403497:	mov    eax,DWORD PTR [edi]
  403499:	xor    edx,edx
  40349b:	pop    ebx
  40349c:	mov    WORD PTR [eax],dx
  40349f:	mov    eax,edi
  4034a1:	pop    edi
  4034a2:	pop    esi
  4034a3:	pop    ebp
  4034a4:	ret    0x4
  4034a7:	pop    ebx
  4034a8:	mov    eax,edi
  4034aa:	xor    edx,edx
  4034ac:	pop    edi
  4034ad:	mov    WORD PTR [eax],dx
  4034b0:	pop    esi
  4034b1:	pop    ebp
  4034b2:	ret    0x4
  4034b5:	mov    eax,edi
  4034b7:	add    ebx,ebx
  4034b9:	push   ebx
  4034ba:	push   esi
  4034bb:	push   eax
  4034bc:	call   0x4054e0
  4034c1:	mov    eax,DWORD PTR [ebp+0x8]
  4034c4:	add    esp,0xc
  4034c7:	cmp    DWORD PTR [edi+0x14],0x8
  4034cb:	mov    DWORD PTR [edi+0x10],eax
  4034ce:	jb     0x4034e1
  4034d0:	mov    eax,DWORD PTR [edi]
  4034d2:	xor    ecx,ecx
  4034d4:	mov    WORD PTR [ebx+eax*1],cx
  4034d8:	pop    ebx
  4034d9:	mov    eax,edi
  4034db:	pop    edi
  4034dc:	pop    esi
  4034dd:	pop    ebp
  4034de:	ret    0x4
  4034e1:	mov    eax,edi
  4034e3:	xor    ecx,ecx
  4034e5:	mov    WORD PTR [ebx+eax*1],cx
  4034e9:	pop    ebx
  4034ea:	mov    eax,edi
  4034ec:	pop    edi
  4034ed:	pop    esi
  4034ee:	pop    ebp
  4034ef:	ret    0x4
  4034f2:	int3   
  4034f3:	int3   
  4034f4:	int3   
  4034f5:	int3   
  4034f6:	int3   
  4034f7:	int3   
  4034f8:	int3   
  4034f9:	int3   
  4034fa:	int3   
  4034fb:	int3   
  4034fc:	int3   
  4034fd:	int3   
  4034fe:	int3   
  4034ff:	int3   
  403500:	push   ebp
  403501:	mov    ebp,esp
  403503:	push   ebx
  403504:	mov    ebx,DWORD PTR [ebp+0x8]
  403507:	push   esi
  403508:	mov    esi,ecx
  40350a:	cmp    ebx,0xfffffffe
  40350d:	jbe    0x403519
  40350f:	push   0x447968
  403514:	call   0x403d13
  403519:	mov    eax,DWORD PTR [esi+0x14]
  40351c:	cmp    eax,ebx
  40351e:	jae    0x403538
  403520:	mov    eax,DWORD PTR [esi+0x10]
  403523:	push   eax
  403524:	push   ebx
  403525:	call   0x403680
  40352a:	xor    ecx,ecx
  40352c:	cmp    ecx,ebx
  40352e:	sbb    eax,eax
  403530:	pop    esi
  403531:	neg    eax
  403533:	pop    ebx
  403534:	pop    ebp
  403535:	ret    0x8
  403538:	cmp    BYTE PTR [ebp+0xc],0x0
  40353c:	je     0x40358c
  40353e:	cmp    ebx,0x10
  403541:	jae    0x40358c
  403543:	push   edi
  403544:	mov    edi,DWORD PTR [esi+0x10]
  403547:	cmp    ebx,edi
  403549:	jae    0x40354d
  40354b:	mov    edi,ebx
  40354d:	cmp    eax,0x10
  403550:	jb     0x40356f
  403552:	mov    ebx,DWORD PTR [esi]
  403554:	test   edi,edi
  403556:	je     0x403563
  403558:	push   edi
  403559:	push   ebx
  40355a:	push   esi
  40355b:	call   0x4054e0
  403560:	add    esp,0xc
  403563:	push   ebx
  403564:	call   0x403ed2
  403569:	mov    ebx,DWORD PTR [ebp+0x8]
  40356c:	add    esp,0x4
  40356f:	mov    DWORD PTR [esi+0x10],edi
  403572:	mov    DWORD PTR [esi+0x14],0xf
  403579:	xor    ecx,ecx
  40357b:	mov    BYTE PTR [edi+esi*1],0x0
  40357f:	cmp    ecx,ebx
  403581:	pop    edi
  403582:	sbb    eax,eax
  403584:	pop    esi
  403585:	neg    eax
  403587:	pop    ebx
  403588:	pop    ebp
  403589:	ret    0x8
  40358c:	test   ebx,ebx
  40358e:	jne    0x40359d
  403590:	mov    DWORD PTR [esi+0x10],ebx
  403593:	cmp    eax,0x10
  403596:	jb     0x40359a
  403598:	mov    esi,DWORD PTR [esi]
  40359a:	mov    BYTE PTR [esi],0x0
  40359d:	xor    ecx,ecx
  40359f:	cmp    ecx,ebx
  4035a1:	sbb    eax,eax
  4035a3:	pop    esi
  4035a4:	neg    eax
  4035a6:	pop    ebx
  4035a7:	pop    ebp
  4035a8:	ret    0x8
  4035ab:	int3   
  4035ac:	int3   
  4035ad:	int3   
  4035ae:	int3   
  4035af:	int3   
  4035b0:	push   edi
  4035b1:	mov    edi,eax
  4035b3:	mov    eax,DWORD PTR [esi+0x10]
  4035b6:	cmp    eax,ecx
  4035b8:	jae    0x4035c4
  4035ba:	push   0x447978
  4035bf:	call   0x403d60
  4035c4:	sub    eax,ecx
  4035c6:	cmp    eax,edi
  4035c8:	jae    0x4035cc
  4035ca:	mov    edi,eax
  4035cc:	test   edi,edi
  4035ce:	je     0x403625
  4035d0:	mov    edx,DWORD PTR [esi+0x14]
  4035d3:	push   ebx
  4035d4:	cmp    edx,0x8
  4035d7:	jb     0x4035dd
  4035d9:	mov    ebx,DWORD PTR [esi]
  4035db:	jmp    0x4035df
  4035dd:	mov    ebx,esi
  4035df:	cmp    edx,0x8
  4035e2:	jb     0x4035e8
  4035e4:	mov    edx,DWORD PTR [esi]
  4035e6:	jmp    0x4035ea
  4035e8:	mov    edx,esi
  4035ea:	sub    eax,edi
  4035ec:	add    eax,eax
  4035ee:	push   eax
  4035ef:	lea    eax,[ecx+edi*1]
  4035f2:	lea    eax,[ebx+eax*2]
  4035f5:	push   eax
  4035f6:	lea    ecx,[edx+ecx*2]
  4035f9:	push   ecx
  4035fa:	call   0x404030
  4035ff:	mov    eax,DWORD PTR [esi+0x10]
  403602:	add    esp,0xc
  403605:	sub    eax,edi
  403607:	cmp    DWORD PTR [esi+0x14],0x8
  40360b:	mov    DWORD PTR [esi+0x10],eax
  40360e:	pop    ebx
  40360f:	jb     0x40361d
  403611:	mov    ecx,DWORD PTR [esi]
  403613:	xor    edx,edx
  403615:	mov    WORD PTR [ecx+eax*2],dx
  403619:	mov    eax,esi
  40361b:	pop    edi
  40361c:	ret    
  40361d:	mov    ecx,esi
  40361f:	xor    edx,edx
  403621:	mov    WORD PTR [ecx+eax*2],dx
  403625:	mov    eax,esi
  403627:	pop    edi
  403628:	ret    
  403629:	int3   
  40362a:	int3   
  40362b:	int3   
  40362c:	int3   
  40362d:	int3   
  40362e:	int3   
  40362f:	int3   
  403630:	cmp    esi,0x7ffffffe
  403636:	jbe    0x403642
  403638:	push   0x447968
  40363d:	call   0x403d13
  403642:	mov    ecx,DWORD PTR [eax+0x14]
  403645:	cmp    ecx,esi
  403647:	jae    0x40365d
  403649:	mov    ecx,DWORD PTR [eax+0x10]
  40364c:	push   ecx
  40364d:	push   esi
  40364e:	push   eax
  40364f:	call   0x4037f0
  403654:	xor    eax,eax
  403656:	cmp    eax,esi
  403658:	sbb    eax,eax
  40365a:	neg    eax
  40365c:	ret    
  40365d:	test   esi,esi
  40365f:	jne    0x403670
  403661:	mov    DWORD PTR [eax+0x10],esi
  403664:	cmp    ecx,0x8
  403667:	jb     0x40366b
  403669:	mov    eax,DWORD PTR [eax]
  40366b:	xor    edx,edx
  40366d:	mov    WORD PTR [eax],dx
  403670:	xor    eax,eax
  403672:	cmp    eax,esi
  403674:	sbb    eax,eax
  403676:	neg    eax
  403678:	ret    
  403679:	int3   
  40367a:	int3   
  40367b:	int3   
  40367c:	int3   
  40367d:	int3   
  40367e:	int3   
  40367f:	int3   
  403680:	push   ebp
  403681:	mov    ebp,esp
  403683:	push   0xffffffff
  403685:	push   0x442560
  40368a:	mov    eax,fs:0x0
  403690:	push   eax
  403691:	sub    esp,0x1c
  403694:	push   ebx
  403695:	push   esi
  403696:	push   edi
  403697:	mov    eax,ds:0x44b470
  40369c:	xor    eax,ebp
  40369e:	push   eax
  40369f:	lea    eax,[ebp-0xc]
  4036a2:	mov    fs:0x0,eax
  4036a8:	mov    DWORD PTR [ebp-0x10],esp
  4036ab:	mov    edi,ecx
  4036ad:	mov    DWORD PTR [ebp-0x14],edi
  4036b0:	mov    eax,DWORD PTR [ebp+0x8]
  4036b3:	mov    esi,eax
  4036b5:	or     esi,0xf
  4036b8:	cmp    esi,0xfffffffe
  4036bb:	jbe    0x4036c1
  4036bd:	mov    esi,eax
  4036bf:	jmp    0x4036e8
  4036c1:	mov    ebx,DWORD PTR [edi+0x14]
  4036c4:	mov    eax,0xaaaaaaab
  4036c9:	mul    esi
  4036cb:	mov    ecx,ebx
  4036cd:	shr    ecx,1
  4036cf:	shr    edx,1
  4036d1:	cmp    ecx,edx
  4036d3:	jbe    0x4036e8
  4036d5:	mov    eax,0xfffffffe
  4036da:	sub    eax,ecx
  4036dc:	lea    esi,[ecx+ebx*1]
  4036df:	cmp    ebx,eax
  4036e1:	jbe    0x4036e8
  4036e3:	mov    esi,0xfffffffe
  4036e8:	xor    eax,eax
  4036ea:	lea    ecx,[esi+0x1]
  4036ed:	mov    DWORD PTR [ebp-0x4],eax
  4036f0:	cmp    ecx,eax
  4036f2:	jbe    0x403706
  4036f4:	cmp    ecx,0xffffffff
  4036f7:	ja     0x40370b
  4036f9:	push   ecx
  4036fa:	call   0x4051fc
  4036ff:	add    esp,0x4
  403702:	test   eax,eax
  403704:	je     0x40370b
  403706:	mov    DWORD PTR [ebp+0x8],eax
  403709:	jmp    0x40375c
  40370b:	lea    ecx,[ebp-0x18]
  40370e:	push   ecx
  40370f:	lea    ecx,[ebp-0x28]
  403712:	mov    DWORD PTR [ebp-0x18],0x0
  403719:	call   0x403f74
  40371e:	push   0x4495a0
  403723:	lea    edx,[ebp-0x28]
  403726:	push   edx
  403727:	mov    DWORD PTR [ebp-0x28],0x4433e0
  40372e:	call   0x405841
  403733:	mov    eax,DWORD PTR [ebp+0x8]
  403736:	mov    ecx,DWORD PTR [ebp-0x14]
  403739:	mov    DWORD PTR [ebp-0x1c],eax
  40373c:	inc    eax
  40373d:	mov    DWORD PTR [ebp-0x10],esp
  403740:	push   eax
  403741:	add    ecx,0x18
  403744:	mov    BYTE PTR [ebp-0x4],0x2
  403748:	call   0x403960
  40374d:	mov    DWORD PTR [ebp+0x8],eax
  403750:	mov    eax,0x403756
  403755:	ret    
  403756:	mov    edi,DWORD PTR [ebp-0x14]
  403759:	mov    esi,DWORD PTR [ebp-0x1c]
  40375c:	mov    ebx,DWORD PTR [ebp+0xc]
  40375f:	test   ebx,ebx
  403761:	je     0x40377d
  403763:	cmp    DWORD PTR [edi+0x14],0x10
  403767:	jb     0x40376d
  403769:	mov    eax,DWORD PTR [edi]
  40376b:	jmp    0x40376f
  40376d:	mov    eax,edi
  40376f:	push   ebx
  403770:	push   eax
  403771:	mov    eax,DWORD PTR [ebp+0x8]
  403774:	push   eax
  403775:	call   0x4054e0
  40377a:	add    esp,0xc
  40377d:	cmp    DWORD PTR [edi+0x14],0x10
  403781:	jb     0x40378e
  403783:	mov    ecx,DWORD PTR [edi]
  403785:	push   ecx
  403786:	call   0x403ed2
  40378b:	add    esp,0x4
  40378e:	mov    eax,DWORD PTR [ebp+0x8]
  403791:	mov    BYTE PTR [edi],0x0
  403794:	mov    DWORD PTR [edi],eax
  403796:	mov    DWORD PTR [edi+0x14],esi
  403799:	mov    DWORD PTR [edi+0x10],ebx
  40379c:	cmp    esi,0x10
  40379f:	jb     0x4037a3
  4037a1:	mov    edi,eax
  4037a3:	mov    BYTE PTR [edi+ebx*1],0x0
  4037a7:	mov    ecx,DWORD PTR [ebp-0xc]
  4037aa:	mov    DWORD PTR fs:0x0,ecx
  4037b1:	pop    ecx
  4037b2:	pop    edi
  4037b3:	pop    esi
  4037b4:	pop    ebx
  4037b5:	mov    esp,ebp
  4037b7:	pop    ebp
  4037b8:	ret    0x8
  4037bb:	mov    esi,DWORD PTR [ebp-0x14]
  4037be:	cmp    DWORD PTR [esi+0x14],0x10
  4037c2:	jb     0x4037cf
  4037c4:	mov    edx,DWORD PTR [esi]
  4037c6:	push   edx
  4037c7:	call   0x403ed2
  4037cc:	add    esp,0x4
  4037cf:	push   0x0
  4037d1:	mov    DWORD PTR [esi+0x14],0xf
  4037d8:	mov    DWORD PTR [esi+0x10],0x0
  4037df:	push   0x0
  4037e1:	mov    BYTE PTR [esi],0x0
  4037e4:	call   0x405841
  4037e9:	int3   
  4037ea:	int3   
  4037eb:	int3   
  4037ec:	int3   
  4037ed:	int3   
  4037ee:	int3   
  4037ef:	int3   
  4037f0:	push   ebp
  4037f1:	mov    ebp,esp
  4037f3:	push   0xffffffff
  4037f5:	push   0x442580
  4037fa:	mov    eax,fs:0x0
  403800:	push   eax
  403801:	sub    esp,0x14
  403804:	push   ebx
  403805:	push   esi
  403806:	push   edi
  403807:	mov    eax,ds:0x44b470
  40380c:	xor    eax,ebp
  40380e:	push   eax
  40380f:	lea    eax,[ebp-0xc]
  403812:	mov    fs:0x0,eax
  403818:	mov    DWORD PTR [ebp-0x10],esp
  40381b:	mov    eax,DWORD PTR [ebp+0xc]
  40381e:	mov    edi,DWORD PTR [ebp+0x8]
  403821:	mov    esi,eax
  403823:	or     esi,0x7
  403826:	cmp    esi,0x7ffffffe
  40382c:	jbe    0x403832
  40382e:	mov    esi,eax
  403830:	jmp    0x403859
  403832:	mov    ebx,DWORD PTR [edi+0x14]
  403835:	mov    eax,0xaaaaaaab
  40383a:	mul    esi
  40383c:	mov    ecx,ebx
  40383e:	shr    ecx,1
  403840:	shr    edx,1
  403842:	cmp    ecx,edx
  403844:	jbe    0x403859
  403846:	mov    eax,0x7ffffffe
  40384b:	sub    eax,ecx
  40384d:	lea    esi,[ecx+ebx*1]
  403850:	cmp    ebx,eax
  403852:	jbe    0x403859
  403854:	mov    esi,0x7ffffffe
  403859:	xor    eax,eax
  40385b:	lea    ecx,[esi+0x1]
  40385e:	mov    DWORD PTR [ebp-0x4],eax
  403861:	cmp    ecx,eax
  403863:	jbe    0x40387c
  403865:	cmp    ecx,0x7fffffff
  40386b:	ja     0x403880
  40386d:	add    ecx,ecx
  40386f:	push   ecx
  403870:	call   0x4051fc
  403875:	add    esp,0x4
  403878:	test   eax,eax
  40387a:	je     0x403880
  40387c:	mov    ebx,eax
  40387e:	jmp    0x4038cf
  403880:	lea    edx,[ebp-0x14]
  403883:	push   edx
  403884:	lea    ecx,[ebp-0x20]
  403887:	mov    DWORD PTR [ebp-0x14],0x0
  40388e:	call   0x403f74
  403893:	push   0x4495a0
  403898:	lea    eax,[ebp-0x20]
  40389b:	push   eax
  40389c:	mov    DWORD PTR [ebp-0x20],0x4433e0
  4038a3:	call   0x405841
  4038a8:	mov    eax,DWORD PTR [ebp+0xc]
  4038ab:	lea    ecx,[eax+0x1]
  4038ae:	mov    DWORD PTR [ebp-0x10],esp
  4038b1:	mov    DWORD PTR [ebp+0xc],eax
  4038b4:	mov    BYTE PTR [ebp-0x4],0x2
  4038b8:	call   0x4039b0
  4038bd:	mov    DWORD PTR [ebp-0x14],eax
  4038c0:	mov    eax,0x4038c6
  4038c5:	ret    
  4038c6:	mov    edi,DWORD PTR [ebp+0x8]
  4038c9:	mov    esi,DWORD PTR [ebp+0xc]
  4038cc:	mov    ebx,DWORD PTR [ebp-0x14]
  4038cf:	mov    ecx,DWORD PTR [ebp+0x10]
  4038d2:	test   ecx,ecx
  4038d4:	je     0x4038f2
  4038d6:	cmp    DWORD PTR [edi+0x14],0x8
  4038da:	jb     0x4038e0
  4038dc:	mov    eax,DWORD PTR [edi]
  4038de:	jmp    0x4038e2
  4038e0:	mov    eax,edi
  4038e2:	add    ecx,ecx
  4038e4:	push   ecx
  4038e5:	push   eax
  4038e6:	push   ebx
  4038e7:	call   0x4054e0
  4038ec:	mov    ecx,DWORD PTR [ebp+0x10]
  4038ef:	add    esp,0xc
  4038f2:	cmp    DWORD PTR [edi+0x14],0x8
  4038f6:	jb     0x403906
  4038f8:	mov    edx,DWORD PTR [edi]
  4038fa:	push   edx
  4038fb:	call   0x403ed2
  403900:	mov    ecx,DWORD PTR [ebp+0x10]
  403903:	add    esp,0x4
  403906:	mov    DWORD PTR [edi],ebx
  403908:	mov    DWORD PTR [edi+0x14],esi
  40390b:	mov    DWORD PTR [edi+0x10],ecx
  40390e:	cmp    esi,0x8
  403911:	jb     0x403915
  403913:	mov    edi,ebx
  403915:	xor    edx,edx
  403917:	mov    WORD PTR [edi+ecx*2],dx
  40391b:	mov    ecx,DWORD PTR [ebp-0xc]
  40391e:	mov    DWORD PTR fs:0x0,ecx
  403925:	pop    ecx
  403926:	pop    edi
  403927:	pop    esi
  403928:	pop    ebx
  403929:	mov    esp,ebp
  40392b:	pop    ebp
  40392c:	ret    0xc
  40392f:	mov    esi,DWORD PTR [ebp+0x8]
  403932:	cmp    DWORD PTR [esi+0x14],0x8
  403936:	jb     0x403943
  403938:	mov    eax,DWORD PTR [esi]
  40393a:	push   eax
  40393b:	call   0x403ed2
  403940:	add    esp,0x4
  403943:	xor    ecx,ecx
  403945:	push   ecx
  403946:	mov    DWORD PTR [esi+0x14],0x7
  40394d:	mov    DWORD PTR [esi+0x10],0x0
  403954:	push   ecx
  403955:	mov    WORD PTR [esi],cx
  403958:	call   0x405841
  40395d:	int3   
  40395e:	int3   
  40395f:	int3   
  403960:	push   ebp
  403961:	mov    ebp,esp
  403963:	mov    ecx,DWORD PTR [ebp+0x8]
  403966:	sub    esp,0xc
  403969:	xor    eax,eax
  40396b:	test   ecx,ecx
  40396d:	je     0x4039a9
  40396f:	cmp    ecx,0xffffffff
  403972:	ja     0x403981
  403974:	push   ecx
  403975:	call   0x4051fc
  40397a:	add    esp,0x4
  40397d:	test   eax,eax
  40397f:	jne    0x4039a9
  403981:	lea    eax,[ebp+0x8]
  403984:	push   eax
  403985:	lea    ecx,[ebp-0xc]
  403988:	mov    DWORD PTR [ebp+0x8],0x0
  40398f:	call   0x403f74
  403994:	push   0x4495a0
  403999:	lea    ecx,[ebp-0xc]
  40399c:	push   ecx
  40399d:	mov    DWORD PTR [ebp-0xc],0x4433e0
  4039a4:	call   0x405841
  4039a9:	mov    esp,ebp
  4039ab:	pop    ebp
  4039ac:	ret    0x4
  4039af:	int3   
  4039b0:	push   ebp
  4039b1:	mov    ebp,esp
  4039b3:	sub    esp,0x10
  4039b6:	xor    eax,eax
  4039b8:	test   ecx,ecx
  4039ba:	je     0x4039fc
  4039bc:	cmp    ecx,0x7fffffff
  4039c2:	ja     0x4039d4
  4039c4:	lea    eax,[ecx+ecx*1]
  4039c7:	push   eax
  4039c8:	call   0x4051fc
  4039cd:	add    esp,0x4
  4039d0:	test   eax,eax
  4039d2:	jne    0x4039fc
  4039d4:	lea    ecx,[ebp-0x4]
  4039d7:	push   ecx
  4039d8:	lea    ecx,[ebp-0x10]
  4039db:	mov    DWORD PTR [ebp-0x4],0x0
  4039e2:	call   0x403f74
  4039e7:	push   0x4495a0
  4039ec:	lea    edx,[ebp-0x10]
  4039ef:	push   edx
  4039f0:	mov    DWORD PTR [ebp-0x10],0x4433e0
  4039f7:	call   0x405841
  4039fc:	mov    esp,ebp
  4039fe:	pop    ebp
  4039ff:	ret    
  403a00:	push   ebp
  403a01:	mov    ebp,esp
  403a03:	mov    eax,DWORD PTR [ebp+0x8]
  403a06:	push   esi
  403a07:	push   eax
  403a08:	mov    esi,ecx
  403a0a:	call   0x404002
  403a0f:	mov    DWORD PTR [esi],0x4433e0
  403a15:	mov    eax,esi
  403a17:	pop    esi
  403a18:	pop    ebp
  403a19:	ret    0x4
  403a1c:	mov    edi,edi
  403a1e:	push   ebp
  403a1f:	mov    ebp,esp
  403a21:	test   BYTE PTR [ebp+0x8],0x1
  403a25:	push   esi
  403a26:	mov    esi,ecx
  403a28:	mov    DWORD PTR [esi],0x4433a0
  403a2e:	je     0x403a37
  403a30:	push   esi
  403a31:	call   0x403ed2
  403a36:	pop    ecx
  403a37:	mov    eax,esi
  403a39:	pop    esi
  403a3a:	pop    ebp
  403a3b:	ret    0x4
  403a3e:	mov    edi,edi
  403a40:	push   ebp
  403a41:	mov    ebp,esp
  403a43:	mov    edx,DWORD PTR [ecx+0x4]
  403a46:	mov    eax,DWORD PTR [ebp+0x8]
  403a49:	cmp    edx,DWORD PTR [eax+0x4]
  403a4c:	jne    0x403a59
  403a4e:	mov    ecx,DWORD PTR [ecx]
  403a50:	cmp    ecx,DWORD PTR [eax]
  403a52:	jne    0x403a59
  403a54:	xor    eax,eax
  403a56:	inc    eax
  403a57:	jmp    0x403a5b
  403a59:	xor    eax,eax
  403a5b:	pop    ebp
  403a5c:	ret    0x4
  403a5f:	mov    edi,edi
  403a61:	push   ebp
  403a62:	mov    ebp,esp
  403a64:	mov    eax,DWORD PTR [ebp+0x8]
  403a67:	mov    edx,DWORD PTR [ebp+0xc]
  403a6a:	mov    DWORD PTR [eax],edx
  403a6c:	mov    DWORD PTR [eax+0x4],ecx
  403a6f:	pop    ebp
  403a70:	ret    0x8
  403a73:	mov    edi,edi
  403a75:	push   ebp
  403a76:	mov    ebp,esp
  403a78:	push   ecx
  403a79:	push   ecx
  403a7a:	push   DWORD PTR [ebp+0xc]
  403a7d:	mov    eax,DWORD PTR [ecx]
  403a7f:	push   DWORD PTR [ebp+0x8]
  403a82:	lea    edx,[ebp-0x8]
  403a85:	push   edx
  403a86:	call   DWORD PTR [eax+0xc]
  403a89:	mov    ecx,eax
  403a8b:	call   0x403a3e
  403a90:	leave  
  403a91:	ret    0x8
  403a94:	mov    edi,edi
  403a96:	push   ebp
  403a97:	mov    ebp,esp
  403a99:	mov    eax,DWORD PTR [ebp+0x8]
  403a9c:	cmp    ecx,DWORD PTR [eax+0x4]
  403a9f:	jne    0x403aad
  403aa1:	mov    eax,DWORD PTR [eax]
  403aa3:	cmp    eax,DWORD PTR [ebp+0xc]
  403aa6:	jne    0x403aad
  403aa8:	xor    eax,eax
  403aaa:	inc    eax
  403aab:	jmp    0x403aaf
  403aad:	xor    eax,eax
  403aaf:	pop    ebp
  403ab0:	ret    0x8
  403ab3:	mov    eax,DWORD PTR [ecx+0x4]
  403ab6:	ret    
  403ab7:	mov    eax,DWORD PTR [ecx+0x8]
  403aba:	ret    
  403abb:	mov    edi,edi
  403abd:	push   ebp
  403abe:	mov    ebp,esp
  403ac0:	cmp    DWORD PTR [ebp+0x8],0x0
  403ac4:	je     0x403af2
  403ac6:	mov    edx,DWORD PTR [ecx+0x14]
  403ac9:	cmp    edx,0x10
  403acc:	jb     0x403ad2
  403ace:	mov    eax,DWORD PTR [ecx]
  403ad0:	jmp    0x403ad4
  403ad2:	mov    eax,ecx
  403ad4:	cmp    DWORD PTR [ebp+0x8],eax
  403ad7:	jb     0x403af2
  403ad9:	cmp    edx,0x10
  403adc:	jb     0x403ae2
  403ade:	mov    eax,DWORD PTR [ecx]
  403ae0:	jmp    0x403ae4
  403ae2:	mov    eax,ecx
  403ae4:	mov    ecx,DWORD PTR [ecx+0x10]
  403ae7:	add    ecx,eax
  403ae9:	cmp    ecx,DWORD PTR [ebp+0x8]
  403aec:	jbe    0x403af2
  403aee:	mov    al,0x1
  403af0:	jmp    0x403af4
  403af2:	xor    al,al
  403af4:	pop    ebp
  403af5:	ret    0x4
  403af8:	mov    edi,edi
  403afa:	push   ebp
  403afb:	mov    ebp,esp
  403afd:	push   ebx
  403afe:	mov    ebx,DWORD PTR [ebp+0x8]
  403b01:	mov    eax,DWORD PTR [ebx+0x10]
  403b04:	push   esi
  403b05:	mov    esi,ecx
  403b07:	mov    ecx,DWORD PTR [ebp+0xc]
  403b0a:	push   edi
  403b0b:	cmp    eax,ecx
  403b0d:	jae    0x403b19
  403b0f:	push   0x447978
  403b14:	call   0x403d60
  403b19:	sub    eax,ecx
  403b1b:	mov    edi,eax
  403b1d:	cmp    DWORD PTR [ebp+0x10],edi
  403b20:	jae    0x403b25
  403b22:	mov    edi,DWORD PTR [ebp+0x10]
  403b25:	cmp    esi,ebx
  403b27:	jne    0x403b43
  403b29:	add    edi,ecx
  403b2b:	push   0xffffffff
  403b2d:	push   edi
  403b2e:	mov    ecx,esi
  403b30:	call   0x4032b0
  403b35:	push   DWORD PTR [ebp+0xc]
  403b38:	mov    ecx,esi
  403b3a:	push   0x0
  403b3c:	call   0x4032b0
  403b41:	jmp    0x403b8a
  403b43:	push   0x0
  403b45:	push   edi
  403b46:	mov    ecx,esi
  403b48:	call   0x403500
  403b4d:	test   al,al
  403b4f:	je     0x403b8a
  403b51:	cmp    DWORD PTR [ebx+0x14],0x10
  403b55:	jb     0x403b5b
  403b57:	mov    eax,DWORD PTR [ebx]
  403b59:	jmp    0x403b5d
  403b5b:	mov    eax,ebx
  403b5d:	cmp    DWORD PTR [esi+0x14],0x10
  403b61:	jb     0x403b67
  403b63:	mov    ecx,DWORD PTR [esi]
  403b65:	jmp    0x403b69
  403b67:	mov    ecx,esi
  403b69:	add    eax,DWORD PTR [ebp+0xc]
  403b6c:	push   edi
  403b6d:	push   eax
  403b6e:	push   ecx
  403b6f:	call   0x4054e0
  403b74:	add    esp,0xc
  403b77:	cmp    DWORD PTR [esi+0x14],0x10
  403b7b:	mov    DWORD PTR [esi+0x10],edi
  403b7e:	jb     0x403b84
  403b80:	mov    eax,DWORD PTR [esi]
  403b82:	jmp    0x403b86
  403b84:	mov    eax,esi
  403b86:	mov    BYTE PTR [eax+edi*1],0x0
  403b8a:	pop    edi
  403b8b:	mov    eax,esi
  403b8d:	pop    esi
  403b8e:	pop    ebx
  403b8f:	pop    ebp
  403b90:	ret    0xc
  403b93:	mov    edi,edi
  403b95:	push   ebp
  403b96:	mov    ebp,esp
  403b98:	push   ebx
  403b99:	mov    ebx,DWORD PTR [ebp+0x8]
  403b9c:	push   esi
  403b9d:	push   ebx
  403b9e:	mov    esi,ecx
  403ba0:	call   0x403abb
  403ba5:	test   al,al
  403ba7:	je     0x403bc5
  403ba9:	cmp    DWORD PTR [esi+0x14],0x10
  403bad:	jb     0x403bb3
  403baf:	mov    eax,DWORD PTR [esi]
  403bb1:	jmp    0x403bb5
  403bb3:	mov    eax,esi
  403bb5:	push   DWORD PTR [ebp+0xc]
  403bb8:	sub    ebx,eax
  403bba:	push   ebx
  403bbb:	push   esi
  403bbc:	mov    ecx,esi
  403bbe:	call   0x403af8
  403bc3:	jmp    0x403c04
  403bc5:	push   edi
  403bc6:	mov    edi,DWORD PTR [ebp+0xc]
  403bc9:	push   0x0
  403bcb:	push   edi
  403bcc:	mov    ecx,esi
  403bce:	call   0x403500
  403bd3:	test   al,al
  403bd5:	je     0x403c01
  403bd7:	cmp    DWORD PTR [esi+0x14],0x10
  403bdb:	jb     0x403be1
  403bdd:	mov    eax,DWORD PTR [esi]
  403bdf:	jmp    0x403be3
  403be1:	mov    eax,esi
  403be3:	push   edi
  403be4:	push   ebx
  403be5:	push   eax
  403be6:	call   0x4054e0
  403beb:	add    esp,0xc
  403bee:	cmp    DWORD PTR [esi+0x14],0x10
  403bf2:	mov    DWORD PTR [esi+0x10],edi
  403bf5:	jb     0x403bfb
  403bf7:	mov    eax,DWORD PTR [esi]
  403bf9:	jmp    0x403bfd
  403bfb:	mov    eax,esi
  403bfd:	mov    BYTE PTR [eax+edi*1],0x0
  403c01:	mov    eax,esi
  403c03:	pop    edi
  403c04:	pop    esi
  403c05:	pop    ebx
  403c06:	pop    ebp
  403c07:	ret    0x8
  403c0a:	mov    edi,edi
  403c0c:	push   ebp
  403c0d:	mov    ebp,esp
  403c0f:	push   esi
  403c10:	push   DWORD PTR [ebp+0x8]
  403c13:	mov    esi,ecx
  403c15:	and    DWORD PTR [esi+0x10],0x0
  403c19:	mov    DWORD PTR [esi+0x14],0xf
  403c20:	mov    BYTE PTR [esi],0x0
  403c23:	call   0x405450
  403c28:	pop    ecx
  403c29:	push   eax
  403c2a:	push   DWORD PTR [ebp+0x8]
  403c2d:	mov    ecx,esi
  403c2f:	call   0x403b93
  403c34:	mov    eax,esi
  403c36:	pop    esi
  403c37:	pop    ebp
  403c38:	ret    0x4
  403c3b:	mov    edi,edi
  403c3d:	push   ebp
  403c3e:	mov    ebp,esp
  403c40:	push   ecx
  403c41:	push   DWORD PTR [ebp+0xc]
  403c44:	and    DWORD PTR [ebp-0x4],0x0
  403c48:	call   0x405d16
  403c4d:	pop    ecx
  403c4e:	mov    ecx,DWORD PTR [ebp+0x8]
  403c51:	push   eax
  403c52:	call   0x403c0a
  403c57:	mov    eax,DWORD PTR [ebp+0x8]
  403c5a:	leave  
  403c5b:	ret    0x8
  403c5e:	mov    edi,edi
  403c60:	push   ebp
  403c61:	mov    ebp,esp
  403c63:	push   ecx
  403c64:	and    DWORD PTR [ebp-0x4],0x0
  403c68:	cmp    DWORD PTR [ebp+0xc],0x1
  403c6c:	jne    0x403c75
  403c6e:	push   0x443434
  403c73:	jmp    0x403c7f
  403c75:	push   DWORD PTR [ebp+0xc]
  403c78:	call   0x405d16
  403c7d:	pop    ecx
  403c7e:	push   eax
  403c7f:	mov    ecx,DWORD PTR [ebp+0x8]
  403c82:	call   0x403c0a
  403c87:	mov    eax,DWORD PTR [ebp+0x8]
  403c8a:	leave  
  403c8b:	ret    0x8
  403c8e:	mov    ecx,DWORD PTR [ecx+0x4]
  403c91:	call   0x401060
  403c96:	test   eax,eax
  403c98:	je     0x403ca2
  403c9a:	mov    edx,DWORD PTR [eax]
  403c9c:	push   0x1
  403c9e:	mov    ecx,eax
  403ca0:	call   DWORD PTR [edx]
  403ca2:	ret    
  403ca3:	push   0x4
  403ca5:	mov    eax,0x442528
  403caa:	call   0x405c71
  403caf:	push   0x0
  403cb1:	lea    ecx,[ebp-0x10]
  403cb4:	call   0x403e28
  403cb9:	and    DWORD PTR [ebp-0x4],0x0
  403cbd:	jmp    0x403cd6
  403cbf:	mov    esi,eax
  403cc1:	mov    eax,DWORD PTR [eax]
  403cc3:	mov    ecx,esi
  403cc5:	mov    ds:0x44d9b8,eax
  403cca:	call   0x403c8e
  403ccf:	push   esi
  403cd0:	call   0x403ed2
  403cd5:	pop    ecx
  403cd6:	mov    eax,ds:0x44d9b8
  403cdb:	test   eax,eax
  403cdd:	jne    0x403cbf
  403cdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  403ce3:	lea    ecx,[ebp-0x10]
  403ce6:	call   0x403e50
  403ceb:	call   0x405cda
  403cf0:	ret    
  403cf1:	jmp    0x403fd0
  403cf6:	mov    edi,edi
  403cf8:	push   ebp
  403cf9:	mov    ebp,esp
  403cfb:	push   esi
  403cfc:	push   DWORD PTR [ebp+0x8]
  403cff:	mov    esi,ecx
  403d01:	call   0x404002
  403d06:	mov    DWORD PTR [esi],0x443460
  403d0c:	mov    eax,esi
  403d0e:	pop    esi
  403d0f:	pop    ebp
  403d10:	ret    0x4
  403d13:	mov    edi,edi
  403d15:	push   ebp
  403d16:	mov    ebp,esp
  403d18:	sub    esp,0xc
  403d1b:	mov    eax,DWORD PTR [ebp+0x8]
  403d1e:	mov    DWORD PTR [ebp+0x8],eax
  403d21:	lea    eax,[ebp+0x8]
  403d24:	push   eax
  403d25:	lea    ecx,[ebp-0xc]
  403d28:	call   0x403f74
  403d2d:	push   0x449010
  403d32:	lea    eax,[ebp-0xc]
  403d35:	push   eax
  403d36:	mov    DWORD PTR [ebp-0xc],0x44346c
  403d3d:	call   0x405841
  403d42:	int3   
  403d43:	mov    edi,edi
  403d45:	push   ebp
  403d46:	mov    ebp,esp
  403d48:	push   esi
  403d49:	push   DWORD PTR [ebp+0x8]
  403d4c:	mov    esi,ecx
  403d4e:	call   0x404002
  403d53:	mov    DWORD PTR [esi],0x44346c
  403d59:	mov    eax,esi
  403d5b:	pop    esi
  403d5c:	pop    ebp
  403d5d:	ret    0x4
  403d60:	mov    edi,edi
  403d62:	push   ebp
  403d63:	mov    ebp,esp
  403d65:	sub    esp,0xc
  403d68:	mov    eax,DWORD PTR [ebp+0x8]
  403d6b:	mov    DWORD PTR [ebp+0x8],eax
  403d6e:	lea    eax,[ebp+0x8]
  403d71:	push   eax
  403d72:	lea    ecx,[ebp-0xc]
  403d75:	call   0x403f74
  403d7a:	push   0x44904c
  403d7f:	lea    eax,[ebp-0xc]
  403d82:	push   eax
  403d83:	mov    DWORD PTR [ebp-0xc],0x443478
  403d8a:	call   0x405841
  403d8f:	int3   
  403d90:	mov    edi,edi
  403d92:	push   ebp
  403d93:	mov    ebp,esp
  403d95:	push   esi
  403d96:	push   DWORD PTR [ebp+0x8]
  403d99:	mov    esi,ecx
  403d9b:	call   0x404002
  403da0:	mov    DWORD PTR [esi],0x443478
  403da6:	mov    eax,esi
  403da8:	pop    esi
  403da9:	pop    ebp
  403daa:	ret    0x4
  403dad:	mov    edi,edi
  403daf:	push   ebp
  403db0:	mov    ebp,esp
  403db2:	push   esi
  403db3:	mov    esi,ecx
  403db5:	call   0x403fd0
  403dba:	test   BYTE PTR [ebp+0x8],0x1
  403dbe:	je     0x403dc7
  403dc0:	push   esi
  403dc1:	call   0x403ed2
  403dc6:	pop    ecx
  403dc7:	mov    eax,esi
  403dc9:	pop    esi
  403dca:	pop    ebp
  403dcb:	ret    0x4
  403dce:	mov    edi,edi
  403dd0:	push   edi
  403dd1:	push   0x44b128
  403dd6:	mov    edi,ecx
  403dd8:	call   DWORD PTR ds:0x4431bc
  403dde:	test   eax,eax
  403de0:	jne    0x403dfb
  403de2:	push   esi
  403de3:	mov    esi,0x44d9e8
  403de8:	push   esi
  403de9:	call   0x403e92
  403dee:	add    esi,0x18
  403df1:	pop    ecx
  403df2:	cmp    esi,0x44da48
  403df8:	jl     0x403de8
  403dfa:	pop    esi
  403dfb:	mov    eax,edi
  403dfd:	pop    edi
  403dfe:	ret    
  403dff:	push   0x44b128
  403e04:	call   DWORD PTR ds:0x4431c0
  403e0a:	test   eax,eax
  403e0c:	jns    0x403e27
  403e0e:	push   esi
  403e0f:	mov    esi,0x44d9e8
  403e14:	push   esi
  403e15:	call   0x403ea2
  403e1a:	add    esi,0x18
  403e1d:	pop    ecx
  403e1e:	cmp    esi,0x44da48
  403e24:	jl     0x403e14
  403e26:	pop    esi
  403e27:	ret    
  403e28:	mov    edi,edi
  403e2a:	push   ebp
  403e2b:	mov    ebp,esp
  403e2d:	mov    eax,DWORD PTR [ebp+0x8]
  403e30:	push   esi
  403e31:	mov    esi,ecx
  403e33:	mov    DWORD PTR [esi],eax
  403e35:	cmp    eax,0x4
  403e38:	jge    0x403e49
  403e3a:	imul   eax,eax,0x18
  403e3d:	add    eax,0x44d9e8
  403e42:	push   eax
  403e43:	call   0x403eb2
  403e48:	pop    ecx
  403e49:	mov    eax,esi
  403e4b:	pop    esi
  403e4c:	pop    ebp
  403e4d:	ret    0x4
  403e50:	mov    eax,DWORD PTR [ecx]
  403e52:	cmp    eax,0x4
  403e55:	jge    0x403e66
  403e57:	imul   eax,eax,0x18
  403e5a:	add    eax,0x44d9e8
  403e5f:	push   eax
  403e60:	call   0x403ec2
  403e65:	pop    ecx
  403e66:	ret    
  403e67:	jmp    0x403e88
  403e69:	mov    eax,ds:0x44b130
  403e6e:	mov    eax,DWORD PTR [eax*4+0x44da6c]
  403e75:	inc    DWORD PTR ds:0x44b130
  403e7b:	push   eax
  403e7c:	call   DWORD PTR ds:0x4431c8
  403e82:	test   eax,eax
  403e84:	je     0x403e88
  403e86:	call   eax
  403e88:	cmp    DWORD PTR ds:0x44b130,0xa
  403e8f:	jb     0x403e69
  403e91:	ret    
  403e92:	mov    edi,edi
  403e94:	push   ebp
  403e95:	mov    ebp,esp
  403e97:	push   DWORD PTR [ebp+0x8]
  403e9a:	call   DWORD PTR ds:0x4431d0
  403ea0:	pop    ebp
  403ea1:	ret    
  403ea2:	mov    edi,edi
  403ea4:	push   ebp
  403ea5:	mov    ebp,esp
  403ea7:	push   DWORD PTR [ebp+0x8]
  403eaa:	call   DWORD PTR ds:0x4431d4
  403eb0:	pop    ebp
  403eb1:	ret    
  403eb2:	mov    edi,edi
  403eb4:	push   ebp
  403eb5:	mov    ebp,esp
  403eb7:	push   DWORD PTR [ebp+0x8]
  403eba:	call   DWORD PTR ds:0x4431d8
  403ec0:	pop    ebp
  403ec1:	ret    
  403ec2:	mov    edi,edi
  403ec4:	push   ebp
  403ec5:	mov    ebp,esp
  403ec7:	push   DWORD PTR [ebp+0x8]
  403eca:	call   DWORD PTR ds:0x4431b8
  403ed0:	pop    ebp
  403ed1:	ret    
  403ed2:	mov    edi,edi
  403ed4:	push   ebp
  403ed5:	mov    ebp,esp
  403ed7:	pop    ebp
  403ed8:	jmp    0x404391
  403edd:	cmp    ecx,DWORD PTR ds:0x44b470
  403ee3:	jne    0x403ee7
  403ee5:	repz ret 
  403ee7:	jmp    0x406fea
  403eec:	mov    edi,edi
  403eee:	push   ebp
  403eef:	mov    ebp,esp
  403ef1:	mov    eax,ecx
  403ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  403ef6:	mov    DWORD PTR [eax],0x443484
  403efc:	mov    ecx,DWORD PTR [ecx]
  403efe:	mov    DWORD PTR [eax+0x4],ecx
  403f01:	mov    BYTE PTR [eax+0x8],0x0
  403f05:	pop    ebp
  403f06:	ret    0x8
  403f09:	mov    eax,DWORD PTR [ecx+0x4]
  403f0c:	test   eax,eax
  403f0e:	jne    0x403f15
  403f10:	mov    eax,0x44348c
  403f15:	ret    
  403f16:	mov    edi,edi
  403f18:	push   ebp
  403f19:	mov    ebp,esp
  403f1b:	cmp    DWORD PTR [ebp+0x8],0x0
  403f1f:	push   edi
  403f20:	mov    edi,ecx
  403f22:	je     0x403f51
  403f24:	push   esi
  403f25:	push   DWORD PTR [ebp+0x8]
  403f28:	call   0x405450
  403f2d:	lea    esi,[eax+0x1]
  403f30:	push   esi
  403f31:	call   0x405d80
  403f36:	pop    ecx
  403f37:	pop    ecx
  403f38:	mov    DWORD PTR [edi+0x4],eax
  403f3b:	test   eax,eax
  403f3d:	je     0x403f50
  403f3f:	push   DWORD PTR [ebp+0x8]
  403f42:	push   esi
  403f43:	push   eax
  403f44:	call   0x4078df
  403f49:	add    esp,0xc
  403f4c:	mov    BYTE PTR [edi+0x8],0x1
  403f50:	pop    esi
  403f51:	pop    edi
  403f52:	pop    ebp
  403f53:	ret    0x4
  403f56:	mov    edi,edi
  403f58:	push   esi
  403f59:	mov    esi,ecx
  403f5b:	cmp    BYTE PTR [esi+0x8],0x0
  403f5f:	je     0x403f6a
  403f61:	push   DWORD PTR [esi+0x4]
  403f64:	call   0x404391
  403f69:	pop    ecx
  403f6a:	and    DWORD PTR [esi+0x4],0x0
  403f6e:	mov    BYTE PTR [esi+0x8],0x0
  403f72:	pop    esi
  403f73:	ret    
  403f74:	mov    edi,edi
  403f76:	push   ebp
  403f77:	mov    ebp,esp
  403f79:	mov    eax,DWORD PTR [ebp+0x8]
  403f7c:	push   esi
  403f7d:	mov    esi,ecx
  403f7f:	and    DWORD PTR [esi+0x4],0x0
  403f83:	mov    DWORD PTR [esi],0x443484
  403f89:	mov    BYTE PTR [esi+0x8],0x0
  403f8d:	push   DWORD PTR [eax]
  403f8f:	call   0x403f16
  403f94:	mov    eax,esi
  403f96:	pop    esi
  403f97:	pop    ebp
  403f98:	ret    0x4
  403f9b:	mov    edi,edi
  403f9d:	push   ebp
  403f9e:	mov    ebp,esp
  403fa0:	push   esi
  403fa1:	mov    esi,DWORD PTR [ebp+0x8]
  403fa4:	push   edi
  403fa5:	mov    edi,ecx
  403fa7:	cmp    edi,esi
  403fa9:	je     0x403fc8
  403fab:	call   0x403f56
  403fb0:	cmp    BYTE PTR [esi+0x8],0x0
  403fb4:	je     0x403fc2
  403fb6:	push   DWORD PTR [esi+0x4]
  403fb9:	mov    ecx,edi
  403fbb:	call   0x403f16
  403fc0:	jmp    0x403fc8
  403fc2:	mov    eax,DWORD PTR [esi+0x4]
  403fc5:	mov    DWORD PTR [edi+0x4],eax
  403fc8:	mov    eax,edi
  403fca:	pop    edi
  403fcb:	pop    esi
  403fcc:	pop    ebp
  403fcd:	ret    0x4
  403fd0:	mov    DWORD PTR [ecx],0x443484
  403fd6:	jmp    0x403f56
  403fdb:	mov    edi,edi
  403fdd:	push   ebp
  403fde:	mov    ebp,esp
  403fe0:	push   esi
  403fe1:	mov    esi,ecx
  403fe3:	mov    DWORD PTR [esi],0x443484
  403fe9:	call   0x403f56
  403fee:	test   BYTE PTR [ebp+0x8],0x1
  403ff2:	je     0x403ffb
  403ff4:	push   esi
  403ff5:	call   0x403ed2
  403ffa:	pop    ecx
  403ffb:	mov    eax,esi
  403ffd:	pop    esi
  403ffe:	pop    ebp
  403fff:	ret    0x4
  404002:	mov    edi,edi
  404004:	push   ebp
  404005:	mov    ebp,esp
  404007:	push   esi
  404008:	push   DWORD PTR [ebp+0x8]
  40400b:	mov    esi,ecx
  40400d:	and    DWORD PTR [esi+0x4],0x0
  404011:	mov    DWORD PTR [esi],0x443484
  404017:	mov    BYTE PTR [esi+0x8],0x0
  40401b:	call   0x403f9b
  404020:	mov    eax,esi
  404022:	pop    esi
  404023:	pop    ebp
  404024:	ret    0x4
  404027:	int3   
  404028:	int3   
  404029:	int3   
  40402a:	int3   
  40402b:	int3   
  40402c:	int3   
  40402d:	int3   
  40402e:	int3   
  40402f:	int3   
  404030:	push   ebp
  404031:	mov    ebp,esp
  404033:	push   edi
  404034:	push   esi
  404035:	mov    esi,DWORD PTR [ebp+0xc]
  404038:	mov    ecx,DWORD PTR [ebp+0x10]
  40403b:	mov    edi,DWORD PTR [ebp+0x8]
  40403e:	mov    eax,ecx
  404040:	mov    edx,ecx
  404042:	add    eax,esi
  404044:	cmp    edi,esi
  404046:	jbe    0x404050
  404048:	cmp    edi,eax
  40404a:	jb     0x4041f0
  404050:	cmp    ecx,0x80
  404056:	jb     0x404074
  404058:	cmp    DWORD PTR ds:0x45077c,0x0
  40405f:	je     0x404074
  404061:	push   edi
  404062:	push   esi
  404063:	and    edi,0xf
  404066:	and    esi,0xf
  404069:	cmp    edi,esi
  40406b:	pop    esi
  40406c:	pop    edi
  40406d:	jne    0x404074
  40406f:	jmp    0x40793e
  404074:	test   edi,0x3
  40407a:	jne    0x404090
  40407c:	shr    ecx,0x2
  40407f:	and    edx,0x3
  404082:	cmp    ecx,0x8
  404085:	jb     0x4040b0
  404087:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404089:	jmp    DWORD PTR [edx*4+0x4041a0]
  404090:	mov    eax,edi
  404092:	mov    edx,0x3
  404097:	sub    ecx,0x4
  40409a:	jb     0x4040a8
  40409c:	and    eax,0x3
  40409f:	add    ecx,eax
  4040a1:	jmp    DWORD PTR [eax*4+0x4040b4]
  4040a8:	jmp    DWORD PTR [ecx*4+0x4041b0]
  4040af:	nop
  4040b0:	jmp    DWORD PTR [ecx*4+0x404134]
  4040b7:	nop
  4040b8:	les    eax,FWORD PTR [eax+0x40]
  4040bb:	add    al,dh
  4040bd:	inc    eax
  4040be:	inc    eax
  4040bf:	add    BYTE PTR [ecx+eax*2],dl
  4040c2:	inc    eax
  4040c3:	add    BYTE PTR [ebx],ah
  4040c5:	ror    DWORD PTR [edx-0x75f877fa],1
  4040cb:	inc    esi
  4040cc:	add    DWORD PTR [eax+0x468a0147],ecx
  4040d2:	add    al,cl
  4040d4:	jmp    0x287c8db
  4040d9:	add    esi,0x3
  4040dc:	add    edi,0x3
  4040df:	cmp    ecx,0x8
  4040e2:	jb     0x4040b0
  4040e4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040e6:	jmp    DWORD PTR [edx*4+0x4041a0]
  4040ed:	lea    ecx,[ecx+0x0]
  4040f0:	and    edx,ecx
  4040f2:	mov    al,BYTE PTR [esi]
  4040f4:	mov    BYTE PTR [edi],al
  4040f6:	mov    al,BYTE PTR [esi+0x1]
  4040f9:	shr    ecx,0x2
  4040fc:	mov    BYTE PTR [edi+0x1],al
  4040ff:	add    esi,0x2
  404102:	add    edi,0x2
  404105:	cmp    ecx,0x8
  404108:	jb     0x4040b0
  40410a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40410c:	jmp    DWORD PTR [edx*4+0x4041a0]
  404113:	nop
  404114:	and    edx,ecx
  404116:	mov    al,BYTE PTR [esi]
  404118:	mov    BYTE PTR [edi],al
  40411a:	add    esi,0x1
  40411d:	shr    ecx,0x2
  404120:	add    edi,0x1
  404123:	cmp    ecx,0x8
  404126:	jb     0x4040b0
  404128:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40412a:	jmp    DWORD PTR [edx*4+0x4041a0]
  404131:	lea    ecx,[ecx+0x0]
  404134:	xchg   edi,eax
  404135:	inc    ecx
  404136:	inc    eax
  404137:	add    BYTE PTR [ecx+eax*2+0x417c0040],al
  40413e:	inc    eax
  40413f:	add    BYTE PTR [ecx+eax*2+0x40],dh
  404143:	add    BYTE PTR [ecx+eax*2+0x40],ch
  404147:	add    BYTE PTR [ecx+eax*2+0x40],ah
  40414b:	add    BYTE PTR [ecx+eax*2+0x40],bl
  40414f:	add    BYTE PTR [ecx+eax*2+0x40],dl
  404153:	add    BYTE PTR [ebx-0x761b71bc],cl
  404159:	inc    esp
  40415a:	(bad)  
  40415b:	in     al,0x8b
  40415d:	inc    esp
  40415e:	mov    gs,eax
  404160:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  404164:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  404168:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  40416c:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  404170:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  404174:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  404178:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  40417c:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  404180:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  404184:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  404188:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  40418c:	lea    eax,[ecx*4+0x0]
  404193:	add    esi,eax
  404195:	add    edi,eax
  404197:	jmp    DWORD PTR [edx*4+0x4041a0]
  40419e:	mov    edi,edi
  4041a0:	mov    al,0x41
  4041a2:	inc    eax
  4041a3:	add    BYTE PTR [eax-0x3bffbfbf],bh
  4041a9:	inc    ecx
  4041aa:	inc    eax
  4041ab:	add    al,bl
  4041ad:	inc    ecx
  4041ae:	inc    eax
  4041af:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4041b5:	leave  
  4041b6:	ret    
  4041b7:	nop
  4041b8:	mov    al,BYTE PTR [esi]
  4041ba:	mov    BYTE PTR [edi],al
  4041bc:	mov    eax,DWORD PTR [ebp+0x8]
  4041bf:	pop    esi
  4041c0:	pop    edi
  4041c1:	leave  
  4041c2:	ret    
  4041c3:	nop
  4041c4:	mov    al,BYTE PTR [esi]
  4041c6:	mov    BYTE PTR [edi],al
  4041c8:	mov    al,BYTE PTR [esi+0x1]
  4041cb:	mov    BYTE PTR [edi+0x1],al
  4041ce:	mov    eax,DWORD PTR [ebp+0x8]
  4041d1:	pop    esi
  4041d2:	pop    edi
  4041d3:	leave  
  4041d4:	ret    
  4041d5:	lea    ecx,[ecx+0x0]
  4041d8:	mov    al,BYTE PTR [esi]
  4041da:	mov    BYTE PTR [edi],al
  4041dc:	mov    al,BYTE PTR [esi+0x1]
  4041df:	mov    BYTE PTR [edi+0x1],al
  4041e2:	mov    al,BYTE PTR [esi+0x2]
  4041e5:	mov    BYTE PTR [edi+0x2],al
  4041e8:	mov    eax,DWORD PTR [ebp+0x8]
  4041eb:	pop    esi
  4041ec:	pop    edi
  4041ed:	leave  
  4041ee:	ret    
  4041ef:	nop
  4041f0:	lea    esi,[ecx+esi*1-0x4]
  4041f4:	lea    edi,[ecx+edi*1-0x4]
  4041f8:	test   edi,0x3
  4041fe:	jne    0x404224
  404200:	shr    ecx,0x2
  404203:	and    edx,0x3
  404206:	cmp    ecx,0x8
  404209:	jb     0x404218
  40420b:	std    
  40420c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40420e:	cld    
  40420f:	jmp    DWORD PTR [edx*4+0x40433c]
  404216:	mov    edi,edi
  404218:	neg    ecx
  40421a:	jmp    DWORD PTR [ecx*4+0x4042ec]
  404221:	lea    ecx,[ecx+0x0]
  404224:	mov    eax,edi
  404226:	mov    edx,0x3
  40422b:	cmp    ecx,0x4
  40422e:	jb     0x40423c
  404230:	and    eax,0x3
  404233:	sub    ecx,eax
  404235:	jmp    DWORD PTR [eax*4+0x404240]
  40423c:	jmp    DWORD PTR [ecx*4+0x40433c]
  404243:	nop
  404244:	push   eax
  404245:	inc    edx
  404246:	inc    eax
  404247:	add    BYTE PTR [edx+eax*2+0x40],dh
  40424b:	add    BYTE PTR [edx+eax*2+0x468a0040],bl
  404252:	add    esp,DWORD PTR [ebx]
  404254:	ror    DWORD PTR [eax-0x117cfcb9],1
  40425a:	add    ecx,eax
  40425c:	jmp    0x22fc563
  404261:	cmp    ecx,0x8
  404264:	jb     0x404218
  404266:	std    
  404267:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404269:	cld    
  40426a:	jmp    DWORD PTR [edx*4+0x40433c]
  404271:	lea    ecx,[ecx+0x0]
  404274:	mov    al,BYTE PTR [esi+0x3]
  404277:	and    edx,ecx
  404279:	mov    BYTE PTR [edi+0x3],al
  40427c:	mov    al,BYTE PTR [esi+0x2]
  40427f:	shr    ecx,0x2
  404282:	mov    BYTE PTR [edi+0x2],al
  404285:	sub    esi,0x2
  404288:	sub    edi,0x2
  40428b:	cmp    ecx,0x8
  40428e:	jb     0x404218
  404290:	std    
  404291:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404293:	cld    
  404294:	jmp    DWORD PTR [edx*4+0x40433c]
  40429b:	nop
  40429c:	mov    al,BYTE PTR [esi+0x3]
  40429f:	and    edx,ecx
  4042a1:	mov    BYTE PTR [edi+0x3],al
  4042a4:	mov    al,BYTE PTR [esi+0x2]
  4042a7:	mov    BYTE PTR [edi+0x2],al
  4042aa:	mov    al,BYTE PTR [esi+0x1]
  4042ad:	shr    ecx,0x2
  4042b0:	mov    BYTE PTR [edi+0x1],al
  4042b3:	sub    esi,0x3
  4042b6:	sub    edi,0x3
  4042b9:	cmp    ecx,0x8
  4042bc:	jb     0x404218
  4042c2:	std    
  4042c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042c5:	cld    
  4042c6:	jmp    DWORD PTR [edx*4+0x40433c]
  4042cd:	lea    ecx,[ecx+0x0]
  4042d0:	lock inc edx
  4042d2:	inc    eax
  4042d3:	add    al,bh
  4042d5:	inc    edx
  4042d6:	inc    eax
  4042d7:	add    BYTE PTR [eax],al
  4042d9:	inc    ebx
  4042da:	inc    eax
  4042db:	add    BYTE PTR [eax],cl
  4042dd:	inc    ebx
  4042de:	inc    eax
  4042df:	add    BYTE PTR [eax],dl
  4042e1:	inc    ebx
  4042e2:	inc    eax
  4042e3:	add    BYTE PTR [eax],bl
  4042e5:	inc    ebx
  4042e6:	inc    eax
  4042e7:	add    BYTE PTR [eax],ah
  4042e9:	inc    ebx
  4042ea:	inc    eax
  4042eb:	add    BYTE PTR [ebx],dh
  4042ed:	inc    ebx
  4042ee:	inc    eax
  4042ef:	add    BYTE PTR [ebx-0x76e371bc],cl
  4042f5:	inc    esp
  4042f6:	(bad)  
  4042f7:	sbb    al,0x8b
  4042f9:	inc    esp
  4042fa:	mov    ds,WORD PTR [eax]
  4042fc:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  404300:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  404304:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  404308:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  40430c:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  404310:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  404314:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  404318:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  40431c:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  404320:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  404324:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  404328:	lea    eax,[ecx*4+0x0]
  40432f:	add    esi,eax
  404331:	add    edi,eax
  404333:	jmp    DWORD PTR [edx*4+0x40433c]
  40433a:	mov    edi,edi
  40433c:	dec    esp
  40433d:	inc    ebx
  40433e:	inc    eax
  40433f:	add    BYTE PTR [ebx+eax*2+0x40],dl
  404343:	add    BYTE PTR [ebx+eax*2+0x40],ah
  404347:	add    BYTE PTR [eax+0x43],bh
  40434a:	inc    eax
  40434b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  404351:	leave  
  404352:	ret    
  404353:	nop
  404354:	mov    al,BYTE PTR [esi+0x3]
  404357:	mov    BYTE PTR [edi+0x3],al
  40435a:	mov    eax,DWORD PTR [ebp+0x8]
  40435d:	pop    esi
  40435e:	pop    edi
  40435f:	leave  
  404360:	ret    
  404361:	lea    ecx,[ecx+0x0]
  404364:	mov    al,BYTE PTR [esi+0x3]
  404367:	mov    BYTE PTR [edi+0x3],al
  40436a:	mov    al,BYTE PTR [esi+0x2]
  40436d:	mov    BYTE PTR [edi+0x2],al
  404370:	mov    eax,DWORD PTR [ebp+0x8]
  404373:	pop    esi
  404374:	pop    edi
  404375:	leave  
  404376:	ret    
  404377:	nop
  404378:	mov    al,BYTE PTR [esi+0x3]
  40437b:	mov    BYTE PTR [edi+0x3],al
  40437e:	mov    al,BYTE PTR [esi+0x2]
  404381:	mov    BYTE PTR [edi+0x2],al
  404384:	mov    al,BYTE PTR [esi+0x1]
  404387:	mov    BYTE PTR [edi+0x1],al
  40438a:	mov    eax,DWORD PTR [ebp+0x8]
  40438d:	pop    esi
  40438e:	pop    edi
  40438f:	leave  
  404390:	ret    
  404391:	mov    edi,edi
  404393:	push   ebp
  404394:	mov    ebp,esp
  404396:	cmp    DWORD PTR [ebp+0x8],0x0
  40439a:	je     0x4043c9
  40439c:	push   DWORD PTR [ebp+0x8]
  40439f:	push   0x0
  4043a1:	push   DWORD PTR ds:0x44dde8
  4043a7:	call   DWORD PTR ds:0x4431b4
  4043ad:	test   eax,eax
  4043af:	jne    0x4043c9
  4043b1:	push   esi
  4043b2:	call   0x40769b
  4043b7:	mov    esi,eax
  4043b9:	call   DWORD PTR ds:0x443120
  4043bf:	push   eax
  4043c0:	call   0x407659
  4043c5:	pop    ecx
  4043c6:	mov    DWORD PTR [esi],eax
  4043c8:	pop    esi
  4043c9:	pop    ebp
  4043ca:	ret    
  4043cb:	mov    eax,0x44b1a0
  4043d0:	ret    
  4043d1:	mov    eax,ds:0x4518c0
  4043d6:	push   esi
  4043d7:	push   0x14
  4043d9:	pop    esi
  4043da:	test   eax,eax
  4043dc:	jne    0x4043e5
  4043de:	mov    eax,0x200
  4043e3:	jmp    0x4043eb
  4043e5:	cmp    eax,esi
  4043e7:	jge    0x4043f0
  4043e9:	mov    eax,esi
  4043eb:	mov    ds:0x4518c0,eax
  4043f0:	push   0x4
  4043f2:	push   eax
  4043f3:	call   0x406eaa
  4043f8:	pop    ecx
  4043f9:	pop    ecx
  4043fa:	mov    ds:0x4508a8,eax
  4043ff:	test   eax,eax
  404401:	jne    0x404421
  404403:	push   0x4
  404405:	push   esi
  404406:	mov    DWORD PTR ds:0x4518c0,esi
  40440c:	call   0x406eaa
  404411:	pop    ecx
  404412:	pop    ecx
  404413:	mov    ds:0x4508a8,eax
  404418:	test   eax,eax
  40441a:	jne    0x404421
  40441c:	push   0x1a
  40441e:	pop    eax
  40441f:	pop    esi
  404420:	ret    
  404421:	xor    edx,edx
  404423:	mov    ecx,0x44b1a0
  404428:	jmp    0x40442f
  40442a:	mov    eax,ds:0x4508a8
  40442f:	mov    DWORD PTR [edx+eax*1],ecx
  404432:	add    ecx,0x20
  404435:	add    edx,0x4
  404438:	cmp    ecx,0x44b420
  40443e:	jl     0x40442a
  404440:	push   0xfffffffe
  404442:	pop    esi
  404443:	xor    edx,edx
  404445:	mov    ecx,0x44b1b0
  40444a:	push   edi
  40444b:	mov    eax,edx
  40444d:	sar    eax,0x5
  404450:	mov    eax,DWORD PTR [eax*4+0x4507a0]
  404457:	mov    edi,edx
  404459:	and    edi,0x1f
  40445c:	shl    edi,0x6
  40445f:	mov    eax,DWORD PTR [edi+eax*1]
  404462:	cmp    eax,0xffffffff
  404465:	je     0x40446f
  404467:	cmp    eax,esi
  404469:	je     0x40446f
  40446b:	test   eax,eax
  40446d:	jne    0x404471
  40446f:	mov    DWORD PTR [ecx],esi
  404471:	add    ecx,0x20
  404474:	inc    edx
  404475:	cmp    ecx,0x44b210
  40447b:	jl     0x40444b
  40447d:	pop    edi
  40447e:	xor    eax,eax
  404480:	pop    esi
  404481:	ret    
  404482:	call   0x404796
  404487:	cmp    BYTE PTR ds:0x44de14,0x0
  40448e:	je     0x404495
  404490:	call   0x407a6f
  404495:	push   DWORD PTR ds:0x4508a8
  40449b:	call   0x404391
  4044a0:	pop    ecx
  4044a1:	ret    
  4044a2:	mov    edi,edi
  4044a4:	push   ebp
  4044a5:	mov    ebp,esp
  4044a7:	push   esi
  4044a8:	mov    esi,DWORD PTR [ebp+0x8]
  4044ab:	mov    eax,0x44b1a0
  4044b0:	cmp    esi,eax
  4044b2:	jb     0x4044d6
  4044b4:	cmp    esi,0x44b400
  4044ba:	ja     0x4044d6
  4044bc:	mov    ecx,esi
  4044be:	sub    ecx,eax
  4044c0:	sar    ecx,0x5
  4044c3:	add    ecx,0x10
  4044c6:	push   ecx
  4044c7:	call   0x407f70
  4044cc:	or     DWORD PTR [esi+0xc],0x8000
  4044d3:	pop    ecx
  4044d4:	jmp    0x4044e0
  4044d6:	add    esi,0x20
  4044d9:	push   esi
  4044da:	call   DWORD PTR ds:0x4431d8
  4044e0:	pop    esi
  4044e1:	pop    ebp
  4044e2:	ret    
  4044e3:	mov    edi,edi
  4044e5:	push   ebp
  4044e6:	mov    ebp,esp
  4044e8:	mov    eax,DWORD PTR [ebp+0x8]
  4044eb:	cmp    eax,0x14
  4044ee:	jge    0x404506
  4044f0:	add    eax,0x10
  4044f3:	push   eax
  4044f4:	call   0x407f70
  4044f9:	mov    eax,DWORD PTR [ebp+0xc]
  4044fc:	or     DWORD PTR [eax+0xc],0x8000
  404503:	pop    ecx
  404504:	pop    ebp
  404505:	ret    
  404506:	mov    eax,DWORD PTR [ebp+0xc]
  404509:	add    eax,0x20
  40450c:	push   eax
  40450d:	call   DWORD PTR ds:0x4431d8
  404513:	pop    ebp
  404514:	ret    
  404515:	mov    edi,edi
  404517:	push   ebp
  404518:	mov    ebp,esp
  40451a:	mov    eax,DWORD PTR [ebp+0x8]
  40451d:	mov    ecx,0x44b1a0
  404522:	cmp    eax,ecx
  404524:	jb     0x404545
  404526:	cmp    eax,0x44b400
  40452b:	ja     0x404545
  40452d:	and    DWORD PTR [eax+0xc],0xffff7fff
  404534:	sub    eax,ecx
  404536:	sar    eax,0x5
  404539:	add    eax,0x10
  40453c:	push   eax
  40453d:	call   0x407e97
  404542:	pop    ecx
  404543:	pop    ebp
  404544:	ret    
  404545:	add    eax,0x20
  404548:	push   eax
  404549:	call   DWORD PTR ds:0x4431b8
  40454f:	pop    ebp
  404550:	ret    
  404551:	mov    edi,edi
  404553:	push   ebp
  404554:	mov    ebp,esp
  404556:	mov    ecx,DWORD PTR [ebp+0x8]
  404559:	mov    eax,DWORD PTR [ebp+0xc]
  40455c:	cmp    ecx,0x14
  40455f:	jge    0x404574
  404561:	and    DWORD PTR [eax+0xc],0xffff7fff
  404568:	add    ecx,0x10
  40456b:	push   ecx
  40456c:	call   0x407e97
  404571:	pop    ecx
  404572:	pop    ebp
  404573:	ret    
  404574:	add    eax,0x20
  404577:	push   eax
  404578:	call   DWORD PTR ds:0x4431b8
  40457e:	pop    ebp
  40457f:	ret    
  404580:	mov    edi,edi
  404582:	push   ebp
  404583:	mov    ebp,esp
  404585:	push   ecx
  404586:	and    DWORD PTR [ebp-0x4],0x0
  40458a:	push   esi
  40458b:	lea    eax,[ebp-0x4]
  40458e:	push   eax
  40458f:	push   DWORD PTR [ebp+0xc]
  404592:	push   DWORD PTR [ebp+0x8]
  404595:	call   0x407fa3
  40459a:	mov    esi,eax
  40459c:	add    esp,0xc
  40459f:	test   esi,esi
  4045a1:	jne    0x4045bb
  4045a3:	cmp    DWORD PTR [ebp-0x4],eax
  4045a6:	je     0x4045bb
  4045a8:	call   0x40769b
  4045ad:	test   eax,eax
  4045af:	je     0x4045bb
  4045b1:	call   0x40769b
  4045b6:	mov    ecx,DWORD PTR [ebp-0x4]
  4045b9:	mov    DWORD PTR [eax],ecx
  4045bb:	mov    eax,esi
  4045bd:	pop    esi
  4045be:	leave  
  4045bf:	ret    
  4045c0:	mov    edi,edi
  4045c2:	push   ebp
  4045c3:	mov    ebp,esp
  4045c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4045c8:	push   esi
  4045c9:	push   edi
  4045ca:	mov    edi,DWORD PTR [ebp+0x8]
  4045cd:	mov    esi,edi
  4045cf:	test   ecx,ecx
  4045d1:	je     0x404606
  4045d3:	mov    edx,DWORD PTR [ebp+0xc]
  4045d6:	sub    edx,edi
  4045d8:	movzx  eax,WORD PTR [edx+edi*1]
  4045dc:	mov    WORD PTR [edi],ax
  4045df:	add    edi,0x2
  4045e2:	test   ax,ax
  4045e5:	je     0x4045ea
  4045e7:	dec    ecx
  4045e8:	jne    0x4045d8
  4045ea:	test   ecx,ecx
  4045ec:	je     0x404606
  4045ee:	dec    ecx
  4045ef:	je     0x404606
  4045f1:	xor    eax,eax
  4045f3:	movzx  edx,ax
  4045f6:	mov    eax,edx
  4045f8:	shl    edx,0x10
  4045fb:	or     eax,edx
  4045fd:	shr    ecx,1
  4045ff:	rep stos DWORD PTR es:[edi],eax
  404601:	adc    ecx,ecx
  404603:	rep stos WORD PTR es:[edi],ax
  404606:	pop    edi
  404607:	mov    eax,esi
  404609:	pop    esi
  40460a:	pop    ebp
  40460b:	ret    
  40460c:	mov    edi,edi
  40460e:	push   ebp
  40460f:	mov    ebp,esp
  404611:	push   ebx
  404612:	push   esi
  404613:	mov    esi,DWORD PTR [ebp+0x8]
  404616:	mov    eax,DWORD PTR [esi+0xc]
  404619:	mov    ecx,eax
  40461b:	and    cl,0x3
  40461e:	xor    ebx,ebx
  404620:	cmp    cl,0x2
  404623:	jne    0x404665
  404625:	test   eax,0x108
  40462a:	je     0x404665
  40462c:	mov    eax,DWORD PTR [esi+0x8]
  40462f:	push   edi
  404630:	mov    edi,DWORD PTR [esi]
  404632:	sub    edi,eax
  404634:	test   edi,edi
  404636:	jle    0x404664
  404638:	push   edi
  404639:	push   eax
  40463a:	push   esi
  40463b:	call   0x407499
  404640:	pop    ecx
  404641:	push   eax
  404642:	call   0x4088da
  404647:	add    esp,0xc
  40464a:	cmp    eax,edi
  40464c:	jne    0x40465d
  40464e:	mov    eax,DWORD PTR [esi+0xc]
  404651:	test   al,al
  404653:	jns    0x404664
  404655:	and    eax,0xfffffffd
  404658:	mov    DWORD PTR [esi+0xc],eax
  40465b:	jmp    0x404664
  40465d:	or     DWORD PTR [esi+0xc],0x20
  404661:	or     ebx,0xffffffff
  404664:	pop    edi
  404665:	mov    eax,DWORD PTR [esi+0x8]
  404668:	and    DWORD PTR [esi+0x4],0x0
  40466c:	mov    DWORD PTR [esi],eax
  40466e:	pop    esi
  40466f:	mov    eax,ebx
  404671:	pop    ebx
  404672:	pop    ebp
  404673:	ret    
  404674:	mov    edi,edi
  404676:	push   ebp
  404677:	mov    ebp,esp
  404679:	push   esi
  40467a:	mov    esi,DWORD PTR [ebp+0x8]
  40467d:	test   esi,esi
  40467f:	jne    0x40468a
  404681:	push   esi
  404682:	call   0x4046bc
  404687:	pop    ecx
  404688:	jmp    0x4046b9
  40468a:	push   esi
  40468b:	call   0x40460c
  404690:	pop    ecx
  404691:	test   eax,eax
  404693:	je     0x40469a
  404695:	or     eax,0xffffffff
  404698:	jmp    0x4046b9
  40469a:	test   DWORD PTR [esi+0xc],0x4000
  4046a1:	je     0x4046b7
  4046a3:	push   esi
  4046a4:	call   0x407499
  4046a9:	push   eax
  4046aa:	call   0x4089ae
  4046af:	pop    ecx
  4046b0:	neg    eax
  4046b2:	pop    ecx
  4046b3:	sbb    eax,eax
  4046b5:	jmp    0x4046b9
  4046b7:	xor    eax,eax
  4046b9:	pop    esi
  4046ba:	pop    ebp
  4046bb:	ret    
  4046bc:	push   0x14
  4046be:	push   0x449088
  4046c3:	call   0x4076f0
  4046c8:	xor    edi,edi
  4046ca:	mov    DWORD PTR [ebp-0x1c],edi
  4046cd:	mov    DWORD PTR [ebp-0x24],edi
  4046d0:	push   0x1
  4046d2:	call   0x407f70
  4046d7:	pop    ecx
  4046d8:	mov    DWORD PTR [ebp-0x4],edi
  4046db:	xor    esi,esi
  4046dd:	mov    DWORD PTR [ebp-0x20],esi
  4046e0:	cmp    esi,DWORD PTR ds:0x4518c0
  4046e6:	jge    0x40476f
  4046ec:	mov    eax,ds:0x4508a8
  4046f1:	lea    eax,[eax+esi*4]
  4046f4:	cmp    DWORD PTR [eax],edi
  4046f6:	je     0x404756
  4046f8:	mov    eax,DWORD PTR [eax]
  4046fa:	test   BYTE PTR [eax+0xc],0x83
  4046fe:	je     0x404756
  404700:	push   eax
  404701:	push   esi
  404702:	call   0x4044e3
  404707:	pop    ecx
  404708:	pop    ecx
  404709:	xor    edx,edx
  40470b:	inc    edx
  40470c:	mov    DWORD PTR [ebp-0x4],edx
  40470f:	mov    eax,ds:0x4508a8
  404714:	mov    eax,DWORD PTR [eax+esi*4]
  404717:	mov    ecx,DWORD PTR [eax+0xc]
  40471a:	test   cl,0x83
  40471d:	je     0x40474e
  40471f:	cmp    DWORD PTR [ebp+0x8],edx
  404722:	jne    0x404735
  404724:	push   eax
  404725:	call   0x404674
  40472a:	pop    ecx
  40472b:	cmp    eax,0xffffffff
  40472e:	je     0x40474e
  404730:	inc    DWORD PTR [ebp-0x1c]
  404733:	jmp    0x40474e
  404735:	cmp    DWORD PTR [ebp+0x8],edi
  404738:	jne    0x40474e
  40473a:	test   cl,0x2
  40473d:	je     0x40474e
  40473f:	push   eax
  404740:	call   0x404674
  404745:	pop    ecx
  404746:	cmp    eax,0xffffffff
  404749:	jne    0x40474e
  40474b:	or     DWORD PTR [ebp-0x24],eax
  40474e:	mov    DWORD PTR [ebp-0x4],edi
  404751:	call   0x40475e
  404756:	inc    esi
  404757:	jmp    0x4046dd
  404759:	xor    edi,edi
  40475b:	mov    esi,DWORD PTR [ebp-0x20]
  40475e:	mov    eax,ds:0x4508a8
  404763:	push   DWORD PTR [eax+esi*4]
  404766:	push   esi
  404767:	call   0x404551
  40476c:	pop    ecx
  40476d:	pop    ecx
  40476e:	ret    
  40476f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  404776:	call   0x40478d
  40477b:	cmp    DWORD PTR [ebp+0x8],0x1
  40477f:	mov    eax,DWORD PTR [ebp-0x1c]
  404782:	je     0x404787
  404784:	mov    eax,DWORD PTR [ebp-0x24]
  404787:	call   0x407735
  40478c:	ret    
  40478d:	push   0x1
  40478f:	call   0x407e97
  404794:	pop    ecx
  404795:	ret    
  404796:	push   0x1
  404798:	call   0x4046bc
  40479d:	pop    ecx
  40479e:	ret    
  40479f:	push   0xc
  4047a1:	push   0x4490b0
  4047a6:	call   0x4076f0
  4047ab:	xor    eax,eax
  4047ad:	xor    esi,esi
  4047af:	cmp    DWORD PTR [ebp+0x8],esi
  4047b2:	setne  al
  4047b5:	cmp    eax,esi
  4047b7:	jne    0x4047ce
  4047b9:	call   0x40769b
  4047be:	mov    DWORD PTR [eax],0x16
  4047c4:	call   0x407649
  4047c9:	or     eax,0xffffffff
  4047cc:	jmp    0x40482d
  4047ce:	call   0x4043cb
  4047d3:	push   0x20
  4047d5:	pop    ebx
  4047d6:	add    eax,ebx
  4047d8:	push   eax
  4047d9:	push   0x1
  4047db:	call   0x4044e3
  4047e0:	pop    ecx
  4047e1:	pop    ecx
  4047e2:	mov    DWORD PTR [ebp-0x4],esi
  4047e5:	call   0x4043cb
  4047ea:	add    eax,ebx
  4047ec:	push   eax
  4047ed:	call   0x408b1c
  4047f2:	pop    ecx
  4047f3:	mov    edi,eax
  4047f5:	lea    eax,[ebp+0xc]
  4047f8:	push   eax
  4047f9:	push   esi
  4047fa:	push   DWORD PTR [ebp+0x8]
  4047fd:	call   0x4043cb
  404802:	add    eax,ebx
  404804:	push   eax
  404805:	call   0x408c82
  40480a:	mov    DWORD PTR [ebp-0x1c],eax
  40480d:	call   0x4043cb
  404812:	add    eax,ebx
  404814:	push   eax
  404815:	push   edi
  404816:	call   0x408bb8
  40481b:	add    esp,0x18
  40481e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  404825:	call   0x404833
  40482a:	mov    eax,DWORD PTR [ebp-0x1c]
  40482d:	call   0x407735
  404832:	ret    
  404833:	call   0x4043cb
  404838:	add    eax,0x20
  40483b:	push   eax
  40483c:	push   0x1
  40483e:	call   0x404551
  404843:	pop    ecx
  404844:	pop    ecx
  404845:	ret    
  404846:	mov    edi,edi
  404848:	push   ebp
  404849:	mov    ebp,esp
  40484b:	sub    esp,0x20
  40484e:	push   ebx
  40484f:	push   edi
  404850:	xor    ebx,ebx
  404852:	push   0x7
  404854:	xor    eax,eax
  404856:	pop    ecx
  404857:	lea    edi,[ebp-0x1c]
  40485a:	mov    DWORD PTR [ebp-0x20],ebx
  40485d:	rep stos DWORD PTR es:[edi],eax
  40485f:	cmp    DWORD PTR [ebp+0xc],ebx
  404862:	jne    0x404879
  404864:	call   0x40769b
  404869:	mov    DWORD PTR [eax],0x16
  40486f:	call   0x407649
  404874:	or     eax,0xffffffff
  404877:	jmp    0x4048e2
  404879:	mov    eax,DWORD PTR [ebp+0x8]
  40487c:	cmp    eax,ebx
  40487e:	je     0x404864
  404880:	push   esi
  404881:	push   DWORD PTR [ebp+0x14]
  404884:	mov    DWORD PTR [ebp-0x18],eax
  404887:	push   DWORD PTR [ebp+0x10]
  40488a:	mov    DWORD PTR [ebp-0x20],eax
  40488d:	push   DWORD PTR [ebp+0xc]
  404890:	lea    eax,[ebp-0x20]
  404893:	push   eax
  404894:	mov    DWORD PTR [ebp-0x14],0x42
  40489b:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
  4048a2:	call   0x408c82
  4048a7:	add    esp,0x10
  4048aa:	dec    DWORD PTR [ebp-0x1c]
  4048ad:	mov    esi,eax
  4048af:	js     0x4048bb
  4048b1:	mov    eax,DWORD PTR [ebp-0x20]
  4048b4:	mov    BYTE PTR [eax],bl
  4048b6:	inc    DWORD PTR [ebp-0x20]
  4048b9:	jmp    0x4048c7
  4048bb:	lea    eax,[ebp-0x20]
  4048be:	push   eax
  4048bf:	push   ebx
  4048c0:	call   0x4070f0
  4048c5:	pop    ecx
  4048c6:	pop    ecx
  4048c7:	dec    DWORD PTR [ebp-0x1c]
  4048ca:	js     0x4048d3
  4048cc:	mov    eax,DWORD PTR [ebp-0x20]
  4048cf:	mov    BYTE PTR [eax],bl
  4048d1:	jmp    0x4048df
  4048d3:	lea    eax,[ebp-0x20]
  4048d6:	push   eax
  4048d7:	push   ebx
  4048d8:	call   0x4070f0
  4048dd:	pop    ecx
  4048de:	pop    ecx
  4048df:	mov    eax,esi
  4048e1:	pop    esi
  4048e2:	pop    edi
  4048e3:	pop    ebx
  4048e4:	leave  
  4048e5:	ret    
  4048e6:	mov    edi,edi
  4048e8:	push   ebp
  4048e9:	mov    ebp,esp
  4048eb:	push   DWORD PTR [ebp+0x10]
  4048ee:	push   0x0
  4048f0:	push   DWORD PTR [ebp+0xc]
  4048f3:	push   DWORD PTR [ebp+0x8]
  4048f6:	call   0x404846
  4048fb:	add    esp,0x10
  4048fe:	pop    ebp
  4048ff:	ret    
  404900:	mov    edi,edi
  404902:	push   ebp
  404903:	mov    ebp,esp
  404905:	push   ecx
  404906:	push   ebx
  404907:	push   esi
  404908:	mov    esi,DWORD PTR ds:0x4431c8
  40490e:	push   edi
  40490f:	push   DWORD PTR ds:0x450770
  404915:	call   esi
  404917:	push   DWORD PTR ds:0x45076c
  40491d:	mov    ebx,eax
  40491f:	mov    DWORD PTR [ebp-0x4],ebx
  404922:	call   esi
  404924:	mov    esi,eax
  404926:	cmp    esi,ebx
  404928:	jb     0x4049af
  40492e:	mov    edi,esi
  404930:	sub    edi,ebx
  404932:	lea    eax,[edi+0x4]
  404935:	cmp    eax,0x4
  404938:	jb     0x4049af
  40493a:	push   ebx
  40493b:	call   0x40984a
  404940:	mov    ebx,eax
  404942:	lea    eax,[edi+0x4]
  404945:	pop    ecx
  404946:	cmp    ebx,eax
  404948:	jae    0x404992
  40494a:	mov    eax,0x800
  40494f:	cmp    ebx,eax
  404951:	jae    0x404955
  404953:	mov    eax,ebx
  404955:	add    eax,ebx
  404957:	cmp    eax,ebx
  404959:	jb     0x40496a
  40495b:	push   eax
  40495c:	push   DWORD PTR [ebp-0x4]
  40495f:	call   0x406ef6
  404964:	pop    ecx
  404965:	pop    ecx
  404966:	test   eax,eax
  404968:	jne    0x404980
  40496a:	lea    eax,[ebx+0x10]
  40496d:	cmp    eax,ebx
  40496f:	jb     0x4049af
  404971:	push   eax
  404972:	push   DWORD PTR [ebp-0x4]
  404975:	call   0x406ef6
  40497a:	pop    ecx
  40497b:	pop    ecx
  40497c:	test   eax,eax
  40497e:	je     0x4049af
  404980:	sar    edi,0x2
  404983:	push   eax
  404984:	lea    esi,[eax+edi*4]
  404987:	call   DWORD PTR ds:0x4431c4
  40498d:	mov    ds:0x450770,eax
  404992:	push   DWORD PTR [ebp+0x8]
  404995:	mov    edi,DWORD PTR ds:0x4431c4
  40499b:	call   edi
  40499d:	mov    DWORD PTR [esi],eax
  40499f:	add    esi,0x4
  4049a2:	push   esi
  4049a3:	call   edi
  4049a5:	mov    ds:0x45076c,eax
  4049aa:	mov    eax,DWORD PTR [ebp+0x8]
  4049ad:	jmp    0x4049b1
  4049af:	xor    eax,eax
  4049b1:	pop    edi
  4049b2:	pop    esi
  4049b3:	pop    ebx
  4049b4:	leave  
  4049b5:	ret    
  4049b6:	mov    edi,edi
  4049b8:	push   esi
  4049b9:	push   0x4
  4049bb:	push   0x20
  4049bd:	call   0x406eaa
  4049c2:	pop    ecx
  4049c3:	pop    ecx
  4049c4:	mov    esi,eax
  4049c6:	push   esi
  4049c7:	call   DWORD PTR ds:0x4431c4
  4049cd:	mov    ds:0x450770,eax
  4049d2:	mov    ds:0x45076c,eax
  4049d7:	test   esi,esi
  4049d9:	jne    0x4049e0
  4049db:	push   0x18
  4049dd:	pop    eax
  4049de:	pop    esi
  4049df:	ret    
  4049e0:	and    DWORD PTR [esi],0x0
  4049e3:	xor    eax,eax
  4049e5:	pop    esi
  4049e6:	ret    
  4049e7:	push   0xc
  4049e9:	push   0x4490d0
  4049ee:	call   0x4076f0
  4049f3:	call   0x407b4e
  4049f8:	and    DWORD PTR [ebp-0x4],0x0
  4049fc:	push   DWORD PTR [ebp+0x8]
  4049ff:	call   0x404900
  404a04:	pop    ecx
  404a05:	mov    DWORD PTR [ebp-0x1c],eax
  404a08:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  404a0f:	call   0x404a1d
  404a14:	mov    eax,DWORD PTR [ebp-0x1c]
  404a17:	call   0x407735
  404a1c:	ret    
  404a1d:	call   0x407b57
  404a22:	ret    
  404a23:	mov    edi,edi
  404a25:	push   ebp
  404a26:	mov    ebp,esp
  404a28:	push   DWORD PTR [ebp+0x8]
  404a2b:	call   0x4049e7
  404a30:	neg    eax
  404a32:	sbb    eax,eax
  404a34:	neg    eax
  404a36:	pop    ecx
  404a37:	dec    eax
  404a38:	pop    ebp
  404a39:	ret    
  404a3a:	push   0xc
  404a3c:	push   0x4490f0
  404a41:	call   0x4076f0
  404a46:	xor    ebx,ebx
  404a48:	mov    DWORD PTR [ebp-0x1c],ebx
  404a4b:	xor    eax,eax
  404a4d:	mov    edi,DWORD PTR [ebp+0x8]
  404a50:	cmp    edi,ebx
  404a52:	setne  al
  404a55:	cmp    eax,ebx
  404a57:	jne    0x404a71
  404a59:	call   0x40769b
  404a5e:	mov    DWORD PTR [eax],0x16
  404a64:	call   0x407649
  404a69:	or     eax,0xffffffff
  404a6c:	jmp    0x404b36
  404a71:	xor    eax,eax
  404a73:	cmp    DWORD PTR [ebp+0xc],ebx
  404a76:	setne  al
  404a79:	cmp    eax,ebx
  404a7b:	je     0x404a59
  404a7d:	mov    DWORD PTR [ebp+0x8],edi
  404a80:	push   edi
  404a81:	call   0x4044a2
  404a86:	pop    ecx
  404a87:	mov    DWORD PTR [ebp-0x4],ebx
  404a8a:	test   BYTE PTR [edi+0xc],0x40
  404a8e:	jne    0x404aff
  404a90:	push   edi
  404a91:	call   0x407499
  404a96:	pop    ecx
  404a97:	cmp    eax,0xffffffff
  404a9a:	je     0x404ab7
  404a9c:	cmp    eax,0xfffffffe
  404a9f:	je     0x404ab7
  404aa1:	mov    edx,eax
  404aa3:	sar    edx,0x5
  404aa6:	mov    ecx,eax
  404aa8:	and    ecx,0x1f
  404aab:	shl    ecx,0x6
  404aae:	add    ecx,DWORD PTR [edx*4+0x4507a0]
  404ab5:	jmp    0x404abc
  404ab7:	mov    ecx,0x44b478
  404abc:	test   BYTE PTR [ecx+0x24],0x7f
  404ac0:	jne    0x404aeb
  404ac2:	cmp    eax,0xffffffff
  404ac5:	je     0x404ae0
  404ac7:	cmp    eax,0xfffffffe
  404aca:	je     0x404ae0
  404acc:	mov    ecx,eax
  404ace:	sar    ecx,0x5
  404ad1:	and    eax,0x1f
  404ad4:	shl    eax,0x6
  404ad7:	add    eax,DWORD PTR [ecx*4+0x4507a0]
  404ade:	jmp    0x404ae5
  404ae0:	mov    eax,0x44b478
  404ae5:	test   BYTE PTR [eax+0x24],0x80
  404ae9:	je     0x404aff
  404aeb:	call   0x40769b
  404af0:	mov    DWORD PTR [eax],0x16
  404af6:	call   0x407649
  404afb:	or     DWORD PTR [ebp-0x1c],0xffffffff
  404aff:	cmp    DWORD PTR [ebp-0x1c],ebx
  404b02:	jne    0x404b27
  404b04:	push   edi
  404b05:	call   0x408b1c
  404b0a:	mov    esi,eax
  404b0c:	lea    eax,[ebp+0x10]
  404b0f:	push   eax
  404b10:	push   ebx
  404b11:	push   DWORD PTR [ebp+0xc]
  404b14:	push   edi
  404b15:	call   0x409943
  404b1a:	mov    DWORD PTR [ebp-0x1c],eax
  404b1d:	push   edi
  404b1e:	push   esi
  404b1f:	call   0x408bb8
  404b24:	add    esp,0x1c
  404b27:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  404b2e:	call   0x404b3c
  404b33:	mov    eax,DWORD PTR [ebp-0x1c]
  404b36:	call   0x407735
  404b3b:	ret    
  404b3c:	push   DWORD PTR [ebp+0x8]
  404b3f:	call   0x404515
  404b44:	pop    ecx
  404b45:	ret    
  404b46:	mov    edi,edi
  404b48:	push   ebp
  404b49:	mov    ebp,esp
  404b4b:	sub    esp,0x18
  404b4e:	push   ebx
  404b4f:	push   esi
  404b50:	push   edi
  404b51:	mov    esi,0xffff
  404b56:	push   esi
  404b57:	push   0x133f
  404b5c:	call   0x40aedb
  404b61:	mov    dx,WORD PTR [ebp+0xe]
  404b65:	pop    ecx
  404b66:	pop    ecx
  404b67:	mov    ebx,eax
  404b69:	movzx  ecx,dx
  404b6c:	mov    eax,0x7ff0
  404b71:	and    ecx,eax
  404b73:	mov    DWORD PTR [ebp-0x4],ebx
  404b76:	cmp    cx,ax
  404b79:	je     0x404d01
  404b7f:	movzx  ecx,WORD PTR [ebp+0x16]
  404b83:	and    ecx,eax
  404b85:	cmp    cx,ax
  404b88:	je     0x404d01
  404b8e:	fldz   
  404b90:	fld    QWORD PTR [ebp+0x8]
  404b93:	fcom   st(1)
  404b95:	fnstsw ax
  404b97:	test   ah,0x5
  404b9a:	jp     0x404b9e
  404b9c:	fchs   
  404b9e:	fld    QWORD PTR [ebp+0x10]
  404ba1:	fcom   st(2)
  404ba3:	fnstsw ax
  404ba5:	test   ah,0x5
  404ba8:	jp     0x404bac
  404baa:	fchs   
  404bac:	fcom   st(1)
  404bae:	fnstsw ax
  404bb0:	test   ah,0x41
  404bb3:	jne    0x404bba
  404bb5:	fst    QWORD PTR [ebp-0x8]
  404bb8:	jmp    0x404bc1
  404bba:	fxch   st(1)
  404bbc:	fst    QWORD PTR [ebp-0x8]
  404bbf:	fxch   st(1)
  404bc1:	fld    QWORD PTR [ebp-0x8]
  404bc4:	fucomp st(3)
  404bc6:	fnstsw ax
  404bc8:	fstp   st(2)
  404bca:	test   ah,0x44
  404bcd:	jp     0x404be3
  404bcf:	push   esi
  404bd0:	fstp   st(1)
  404bd2:	push   ebx
  404bd3:	fstp   st(0)
  404bd5:	call   0x40aedb
  404bda:	fldz   
  404bdc:	pop    ecx
  404bdd:	pop    ecx
  404bde:	jmp    0x404da4
  404be3:	fdiv   QWORD PTR [ebp-0x8]
  404be6:	lea    eax,[ebp-0x10]
  404be9:	push   eax
  404bea:	push   ecx
  404beb:	push   ecx
  404bec:	fstp   QWORD PTR [ebp+0x8]
  404bef:	fdiv   QWORD PTR [ebp-0x8]
  404bf2:	fstp   QWORD PTR [ebp+0x10]
  404bf5:	fld    QWORD PTR [ebp+0x8]
  404bf8:	fmul   QWORD PTR [ebp+0x8]
  404bfb:	fld    QWORD PTR [ebp+0x10]
  404bfe:	fmul   QWORD PTR [ebp+0x10]
  404c01:	faddp  st(1),st
  404c03:	fstp   QWORD PTR [esp]
  404c06:	call   0x40ae14
  404c0b:	fstp   QWORD PTR [esp]
  404c0e:	call   0x40ad2f
  404c13:	add    esp,0xc
  404c16:	fstp   QWORD PTR [ebp-0x18]
  404c19:	fld    QWORD PTR [ebp-0x8]
  404c1c:	lea    eax,[ebp-0xc]
  404c1f:	push   eax
  404c20:	push   ecx
  404c21:	push   ecx
  404c22:	fstp   QWORD PTR [esp]
  404c25:	call   0x40ad2f
  404c2a:	fmul   QWORD PTR [ebp-0x18]
  404c2d:	add    esp,0x4
  404c30:	fstp   QWORD PTR [ebp-0x8]
  404c33:	fld    QWORD PTR [ebp-0x8]
  404c36:	fstp   QWORD PTR [esp]
  404c39:	call   0x40ad16
  404c3e:	add    eax,DWORD PTR [ebp-0xc]
  404c41:	fld    QWORD PTR [ebp-0x8]
  404c44:	pop    ecx
  404c45:	add    eax,DWORD PTR [ebp-0x10]
  404c48:	pop    ecx
  404c49:	cmp    eax,0x400
  404c4e:	jle    0x404c82
  404c50:	add    eax,0xfffffa00
  404c55:	push   eax
  404c56:	push   ecx
  404c57:	push   ecx
  404c58:	fstp   QWORD PTR [esp]
  404c5b:	call   0x40ace9
  404c60:	add    esp,0xc
  404c63:	push   ebx
  404c64:	sub    esp,0x18
  404c67:	fstp   QWORD PTR [esp+0x10]
  404c6b:	fld    QWORD PTR [ebp+0x10]
  404c6e:	fstp   QWORD PTR [esp+0x8]
  404c72:	fld    QWORD PTR [ebp+0x8]
  404c75:	fstp   QWORD PTR [esp]
  404c78:	push   DWORD PTR [ebp+0x18]
  404c7b:	push   0x11
  404c7d:	jmp    0x404d5f
  404c82:	cmp    eax,0xfffffc03
  404c87:	jge    0x404cbb
  404c89:	add    eax,0x600
  404c8e:	push   eax
  404c8f:	push   ecx
  404c90:	push   ecx
  404c91:	fstp   QWORD PTR [esp]
  404c94:	call   0x40ace9
  404c99:	add    esp,0xc
  404c9c:	push   ebx
  404c9d:	sub    esp,0x18
  404ca0:	fstp   QWORD PTR [esp+0x10]
  404ca4:	fld    QWORD PTR [ebp+0x10]
  404ca7:	fstp   QWORD PTR [esp+0x8]
  404cab:	fld    QWORD PTR [ebp+0x8]
  404cae:	fstp   QWORD PTR [esp]
  404cb1:	push   DWORD PTR [ebp+0x18]
  404cb4:	push   0x12
  404cb6:	jmp    0x404d5f
  404cbb:	push   eax
  404cbc:	push   ecx
  404cbd:	push   ecx
  404cbe:	fstp   QWORD PTR [esp]
  404cc1:	call   0x40ace9
  404cc6:	add    esp,0xc
  404cc9:	fstp   QWORD PTR [ebp-0x8]
  404ccc:	test   bl,0x20
  404ccf:	je     0x404ce2
  404cd1:	push   esi
  404cd2:	push   ebx
  404cd3:	call   0x40aedb
  404cd8:	fld    QWORD PTR [ebp-0x8]
  404cdb:	pop    ecx
  404cdc:	pop    ecx
  404cdd:	jmp    0x404da4
  404ce2:	fld    QWORD PTR [ebp-0x8]
  404ce5:	push   ebx
  404ce6:	sub    esp,0x18
  404ce9:	fstp   QWORD PTR [esp+0x10]
  404ced:	fld    QWORD PTR [ebp+0x10]
  404cf0:	fstp   QWORD PTR [esp+0x8]
  404cf4:	fld    QWORD PTR [ebp+0x8]
  404cf7:	fstp   QWORD PTR [esp]
  404cfa:	push   DWORD PTR [ebp+0x18]
  404cfd:	push   0x10
  404cff:	jmp    0x404d5f
  404d01:	mov    ecx,0x7ff8
  404d06:	and    dx,cx
  404d09:	mov    edi,eax
  404d0b:	cmp    dx,di
  404d0e:	jne    0x404d1f
  404d10:	test   DWORD PTR [ebp+0xc],0x7ffff
  404d17:	jne    0x404d3f
  404d19:	cmp    DWORD PTR [ebp+0x8],0x0
  404d1d:	jne    0x404d3f
  404d1f:	mov    di,WORD PTR [ebp+0x16]
  404d23:	mov    ebx,ecx
  404d25:	and    di,bx
  404d28:	cmp    di,ax
  404d2b:	jne    0x404d69
  404d2d:	test   DWORD PTR [ebp+0x14],0x7ffff
  404d34:	jne    0x404d3c
  404d36:	cmp    DWORD PTR [ebp+0x10],0x0
  404d3a:	je     0x404d69
  404d3c:	mov    ebx,DWORD PTR [ebp-0x4]
  404d3f:	fld    QWORD PTR [ebp+0x8]
  404d42:	push   ebx
  404d43:	fadd   QWORD PTR [ebp+0x10]
  404d46:	sub    esp,0x18
  404d49:	fstp   QWORD PTR [esp+0x10]
  404d4d:	fld    QWORD PTR [ebp+0x10]
  404d50:	fstp   QWORD PTR [esp+0x8]
  404d54:	fld    QWORD PTR [ebp+0x8]
  404d57:	fstp   QWORD PTR [esp]
  404d5a:	push   DWORD PTR [ebp+0x18]
  404d5d:	push   0x8
  404d5f:	call   0x40ac0f
  404d64:	add    esp,0x24
  404d67:	jmp    0x404da4
  404d69:	cmp    dx,cx
  404d6c:	je     0x404d86
  404d6e:	cmp    di,cx
  404d71:	je     0x404d86
  404d73:	push   esi
  404d74:	push   DWORD PTR [ebp-0x4]
  404d77:	call   0x40aedb
  404d7c:	fld    QWORD PTR ds:0x44b848
  404d82:	pop    ecx
  404d83:	pop    ecx
  404d84:	jmp    0x404da4
  404d86:	push   DWORD PTR [ebp-0x4]
  404d89:	fld    QWORD PTR [ebp+0x10]
  404d8c:	sub    esp,0x10
  404d8f:	fstp   QWORD PTR [esp+0x8]
  404d93:	fld    QWORD PTR [ebp+0x8]
  404d96:	fstp   QWORD PTR [esp]
  404d99:	push   DWORD PTR [ebp+0x18]
  404d9c:	call   0x40abae
  404da1:	add    esp,0x18
  404da4:	pop    edi
  404da5:	pop    esi
  404da6:	pop    ebx
  404da7:	leave  
  404da8:	ret    
  404da9:	mov    edi,edi
  404dab:	push   ebp
  404dac:	mov    ebp,esp
  404dae:	fld    QWORD PTR [ebp+0x10]
  404db1:	push   0x18
  404db3:	sub    esp,0x10
  404db6:	fstp   QWORD PTR [esp+0x8]
  404dba:	fld    QWORD PTR [ebp+0x8]
  404dbd:	fstp   QWORD PTR [esp]
  404dc0:	call   0x404b46
  404dc5:	add    esp,0x14
  404dc8:	pop    ebp
  404dc9:	ret    
  404dca:	mov    edi,edi
  404dcc:	push   ebp
  404dcd:	mov    ebp,esp
  404dcf:	sub    esp,0x14
  404dd2:	push   esi
  404dd3:	mov    esi,DWORD PTR [ebp+0x8]
  404dd6:	push   edi
  404dd7:	xor    edi,edi
  404dd9:	mov    DWORD PTR [ebp-0x8],edi
  404ddc:	mov    DWORD PTR [ebp-0xc],edi
  404ddf:	mov    DWORD PTR [ebp-0x4],edi
  404de2:	cmp    esi,edi
  404de4:	jne    0x404df9
  404de6:	call   0x40769b
  404deb:	push   0x16
  404ded:	pop    esi
  404dee:	mov    DWORD PTR [eax],esi
  404df0:	call   0x407649
  404df5:	mov    eax,esi
  404df7:	jmp    0x404e4d
  404df9:	push   ebx
  404dfa:	push   0x24
  404dfc:	push   0xff
  404e01:	push   esi
  404e02:	call   0x40a550
  404e07:	mov    ebx,DWORD PTR [ebp+0xc]
  404e0a:	add    esp,0xc
  404e0d:	cmp    ebx,edi
  404e0f:	jne    0x404e22
  404e11:	call   0x40769b
  404e16:	push   0x16
  404e18:	pop    esi
  404e19:	mov    DWORD PTR [eax],esi
  404e1b:	call   0x407649
  404e20:	jmp    0x404e4a
  404e22:	mov    eax,DWORD PTR [ebx+0x4]
  404e25:	mov    ecx,DWORD PTR [ebx]
  404e27:	cmp    eax,edi
  404e29:	jg     0x404e31
  404e2b:	jl     0x404e40
  404e2d:	cmp    ecx,edi
  404e2f:	jb     0x404e40
  404e31:	cmp    eax,0x7
  404e34:	jl     0x404e51
  404e36:	jg     0x404e40
  404e38:	cmp    ecx,0x93406fff
  404e3e:	jbe    0x404e51
  404e40:	call   0x40769b
  404e45:	push   0x16
  404e47:	pop    esi
  404e48:	mov    DWORD PTR [eax],esi
  404e4a:	mov    eax,esi
  404e4c:	pop    ebx
  404e4d:	pop    edi
  404e4e:	pop    esi
  404e4f:	leave  
  404e50:	ret    
  404e51:	call   0x40b72c
  404e56:	lea    eax,[ebp-0x8]
  404e59:	push   eax
  404e5a:	call   0x40b9f5
  404e5f:	pop    ecx
  404e60:	test   eax,eax
  404e62:	jne    0x405047
  404e68:	lea    eax,[ebp-0xc]
  404e6b:	push   eax
  404e6c:	call   0x40ba22
  404e71:	pop    ecx
  404e72:	test   eax,eax
  404e74:	jne    0x405047
  404e7a:	lea    eax,[ebp-0x4]
  404e7d:	push   eax
  404e7e:	call   0x40ba4f
  404e83:	pop    ecx
  404e84:	test   eax,eax
  404e86:	jne    0x405047
  404e8c:	mov    ecx,DWORD PTR [ebx+0x4]
  404e8f:	mov    edi,DWORD PTR [ebx]
  404e91:	test   ecx,ecx
  404e93:	jl     0x404eff
  404e95:	jg     0x404e9f
  404e97:	cmp    edi,0x3f480
  404e9d:	jbe    0x404eff
  404e9f:	mov    eax,DWORD PTR [ebp-0x4]
  404ea2:	cdq    
  404ea3:	sub    edi,eax
  404ea5:	lea    eax,[ebp-0x14]
  404ea8:	push   eax
  404ea9:	sbb    ecx,edx
  404eab:	push   esi
  404eac:	mov    DWORD PTR [ebp-0x14],edi
  404eaf:	mov    DWORD PTR [ebp-0x10],ecx
  404eb2:	call   0x40b7bc
  404eb7:	pop    ecx
  404eb8:	pop    ecx
  404eb9:	test   eax,eax
  404ebb:	jne    0x404e4c
  404ebd:	cmp    DWORD PTR [ebp-0x8],eax
  404ec0:	je     0x405001
  404ec6:	push   esi
  404ec7:	call   0x40b77b
  404ecc:	pop    ecx
  404ecd:	test   eax,eax
  404ecf:	je     0x405001
  404ed5:	mov    eax,DWORD PTR [ebp-0xc]
  404ed8:	cdq    
  404ed9:	sub    DWORD PTR [ebp-0x14],eax
  404edc:	lea    eax,[ebp-0x14]
  404edf:	push   eax
  404ee0:	sbb    DWORD PTR [ebp-0x10],edx
  404ee3:	push   esi
  404ee4:	call   0x40b7bc
  404ee9:	pop    ecx
  404eea:	pop    ecx
  404eeb:	test   eax,eax
  404eed:	jne    0x404e4c
  404ef3:	mov    DWORD PTR [esi+0x20],0x1
  404efa:	jmp    0x405001
  404eff:	push   ebx
  404f00:	push   esi
  404f01:	call   0x40b7bc
  404f06:	pop    ecx
  404f07:	pop    ecx
  404f08:	test   eax,eax
  404f0a:	jne    0x404e4c
  404f10:	cmp    DWORD PTR [ebp-0x8],eax
  404f13:	je     0x404f41
  404f15:	push   esi
  404f16:	call   0x40b77b
  404f1b:	pop    ecx
  404f1c:	test   eax,eax
  404f1e:	je     0x404f41
  404f20:	mov    eax,DWORD PTR [ebp-0x4]
  404f23:	add    eax,DWORD PTR [ebp-0xc]
  404f26:	mov    DWORD PTR [esi+0x20],0x1
  404f2d:	cdq    
  404f2e:	mov    ecx,eax
  404f30:	mov    eax,DWORD PTR [esi]
  404f32:	mov    DWORD PTR [ebp+0x8],edx
  404f35:	cdq    
  404f36:	mov    edi,eax
  404f38:	mov    ebx,edx
  404f3a:	sub    edi,ecx
  404f3c:	sbb    ebx,DWORD PTR [ebp+0x8]
  404f3f:	jmp    0x404f50
  404f41:	mov    eax,DWORD PTR [esi]
  404f43:	cdq    
  404f44:	mov    edi,eax
  404f46:	mov    eax,DWORD PTR [ebp-0x4]
  404f49:	mov    ebx,edx
  404f4b:	cdq    
  404f4c:	sub    edi,eax
  404f4e:	sbb    ebx,edx
  404f50:	push   0x0
  404f52:	push   0x3c
  404f54:	push   ebx
  404f55:	push   edi
  404f56:	call   0x40bb50
  404f5b:	mov    DWORD PTR [esi],eax
  404f5d:	test   eax,eax
  404f5f:	jns    0x404f6c
  404f61:	add    eax,0x3c
  404f64:	add    edi,0xffffffc4
  404f67:	mov    DWORD PTR [esi],eax
  404f69:	adc    ebx,0xffffffff
  404f6c:	push   0x0
  404f6e:	push   0x3c
  404f70:	push   ebx
  404f71:	push   edi
  404f72:	call   0x40baa0
  404f77:	mov    edi,eax
  404f79:	mov    eax,DWORD PTR [esi+0x4]
  404f7c:	mov    ebx,edx
  404f7e:	cdq    
  404f7f:	push   0x0
  404f81:	add    edi,eax
  404f83:	push   0x3c
  404f85:	adc    ebx,edx
  404f87:	push   ebx
  404f88:	push   edi
  404f89:	call   0x40bb50
  404f8e:	mov    DWORD PTR [esi+0x4],eax
  404f91:	test   eax,eax
  404f93:	jns    0x404fa1
  404f95:	add    eax,0x3c
  404f98:	add    edi,0xffffffc4
  404f9b:	mov    DWORD PTR [esi+0x4],eax
  404f9e:	adc    ebx,0xffffffff
  404fa1:	push   0x0
  404fa3:	push   0x3c
  404fa5:	push   ebx
  404fa6:	push   edi
  404fa7:	call   0x40baa0
  404fac:	mov    edi,eax
  404fae:	mov    eax,DWORD PTR [esi+0x8]
  404fb1:	mov    ebx,edx
  404fb3:	cdq    
  404fb4:	push   0x0
  404fb6:	add    edi,eax
  404fb8:	push   0x18
  404fba:	adc    ebx,edx
  404fbc:	push   ebx
  404fbd:	push   edi
  404fbe:	call   0x40bb50
  404fc3:	mov    DWORD PTR [esi+0x8],eax
  404fc6:	test   eax,eax
  404fc8:	jns    0x404fd6
  404fca:	add    eax,0x18
  404fcd:	add    edi,0xffffffe8
  404fd0:	mov    DWORD PTR [esi+0x8],eax
  404fd3:	adc    ebx,0xffffffff
  404fd6:	push   0x0
  404fd8:	push   0x18
  404fda:	push   ebx
  404fdb:	push   edi
  404fdc:	call   0x40baa0
  404fe1:	mov    ecx,eax
  404fe3:	test   edx,edx
  404fe5:	jl     0x405012
  404fe7:	jg     0x404fed
  404fe9:	test   ecx,ecx
  404feb:	je     0x405008
  404fed:	mov    eax,DWORD PTR [esi+0x18]
  404ff0:	add    eax,ecx
  404ff2:	push   0x7
  404ff4:	cdq    
  404ff5:	pop    edi
  404ff6:	idiv   edi
  404ff8:	add    DWORD PTR [esi+0xc],ecx
  404ffb:	mov    DWORD PTR [esi+0x18],edx
  404ffe:	add    DWORD PTR [esi+0x1c],ecx
  405001:	xor    eax,eax
  405003:	jmp    0x404e4c
  405008:	test   edx,edx
  40500a:	jg     0x405001
  40500c:	jl     0x405012
  40500e:	test   ecx,ecx
  405010:	jae    0x405001
  405012:	mov    eax,DWORD PTR [esi+0x18]
  405015:	lea    eax,[ecx+eax*1+0x7]
  405019:	cdq    
  40501a:	push   0x7
  40501c:	pop    edi
  40501d:	idiv   edi
  40501f:	add    DWORD PTR [esi+0xc],ecx
  405022:	mov    eax,DWORD PTR [esi+0xc]
  405025:	mov    DWORD PTR [esi+0x18],edx
  405028:	test   eax,eax
  40502a:	jg     0x404ffe
  40502c:	add    ecx,0x16d
  405032:	add    DWORD PTR [esi+0x1c],ecx
  405035:	add    eax,0x1f
  405038:	dec    DWORD PTR [esi+0x14]
  40503b:	mov    DWORD PTR [esi+0xc],eax
  40503e:	mov    DWORD PTR [esi+0x10],0xb
  405045:	jmp    0x405001
  405047:	push   edi
  405048:	push   edi
  405049:	push   edi
  40504a:	push   edi
  40504b:	push   edi
  40504c:	call   0x4075f7
  405051:	int3   
  405052:	mov    edi,edi
  405054:	push   ebp
  405055:	mov    ebp,esp
  405057:	push   esi
  405058:	call   0x40bc02
  40505d:	mov    esi,eax
  40505f:	test   esi,esi
  405061:	je     0x405076
  405063:	push   DWORD PTR [ebp+0x8]
  405066:	push   esi
  405067:	call   0x404dca
  40506c:	neg    eax
  40506e:	sbb    eax,eax
  405070:	pop    ecx
  405071:	not    eax
  405073:	pop    ecx
  405074:	and    eax,esi
  405076:	pop    esi
  405077:	pop    ebp
  405078:	ret    
  405079:	mov    edi,edi
  40507b:	push   ecx
  40507c:	mov    DWORD PTR [ecx],0x4434a4
  405082:	call   0x40bc39
  405087:	pop    ecx
  405088:	ret    
  405089:	mov    edi,edi
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	push   esi
  40508f:	mov    esi,ecx
  405091:	call   0x405079
  405096:	test   BYTE PTR [ebp+0x8],0x1
  40509a:	je     0x4050a3
  40509c:	push   esi
  40509d:	call   0x403ed2
  4050a2:	pop    ecx
  4050a3:	mov    eax,esi
  4050a5:	pop    esi
  4050a6:	pop    ebp
  4050a7:	ret    0x4
  4050aa:	mov    edi,edi
  4050ac:	push   ebp
  4050ad:	mov    ebp,esp
  4050af:	mov    eax,DWORD PTR [ebp+0x8]
  4050b2:	add    ecx,0x9
  4050b5:	push   ecx
  4050b6:	add    eax,0x9
  4050b9:	push   eax
  4050ba:	call   0x40bcb0
  4050bf:	neg    eax
  4050c1:	pop    ecx
  4050c2:	sbb    eax,eax
  4050c4:	pop    ecx
  4050c5:	inc    eax
  4050c6:	pop    ebp
  4050c7:	ret    0x4
  4050ca:	mov    edi,edi
  4050cc:	push   ebp
  4050cd:	mov    ebp,esp
  4050cf:	push   esi
  4050d0:	mov    esi,DWORD PTR [ebp+0x8]
  4050d3:	push   edi
  4050d4:	or     edi,0xffffffff
  4050d7:	test   esi,esi
  4050d9:	jne    0x4050ef
  4050db:	call   0x40769b
  4050e0:	mov    DWORD PTR [eax],0x16
  4050e6:	call   0x407649
  4050eb:	or     eax,edi
  4050ed:	jmp    0x405133
  4050ef:	test   BYTE PTR [esi+0xc],0x83
  4050f3:	je     0x40512d
  4050f5:	push   esi
  4050f6:	call   0x40460c
  4050fb:	push   esi
  4050fc:	mov    edi,eax
  4050fe:	call   0x40987d
  405103:	push   esi
  405104:	call   0x407499
  405109:	push   eax
  40510a:	call   0x40bdd4
  40510f:	add    esp,0x10
  405112:	test   eax,eax
  405114:	jns    0x40511b
  405116:	or     edi,0xffffffff
  405119:	jmp    0x40512d
  40511b:	mov    eax,DWORD PTR [esi+0x1c]
  40511e:	test   eax,eax
  405120:	je     0x40512d
  405122:	push   eax
  405123:	call   0x404391
  405128:	and    DWORD PTR [esi+0x1c],0x0
  40512c:	pop    ecx
  40512d:	and    DWORD PTR [esi+0xc],0x0
  405131:	mov    eax,edi
  405133:	pop    edi
  405134:	pop    esi
  405135:	pop    ebp
  405136:	ret    
  405137:	push   0xc
  405139:	push   0x449110
  40513e:	call   0x4076f0
  405143:	or     DWORD PTR [ebp-0x1c],0xffffffff
  405147:	xor    eax,eax
  405149:	mov    esi,DWORD PTR [ebp+0x8]
  40514c:	test   esi,esi
  40514e:	setne  al
  405151:	test   eax,eax
  405153:	jne    0x40516a
  405155:	call   0x40769b
  40515a:	mov    DWORD PTR [eax],0x16
  405160:	call   0x407649
  405165:	or     eax,0xffffffff
  405168:	jmp    0x405177
  40516a:	test   BYTE PTR [esi+0xc],0x40
  40516e:	je     0x40517d
  405170:	and    DWORD PTR [esi+0xc],0x0
  405174:	mov    eax,DWORD PTR [ebp-0x1c]
  405177:	call   0x407735
  40517c:	ret    
  40517d:	push   esi
  40517e:	call   0x4044a2
  405183:	pop    ecx
  405184:	and    DWORD PTR [ebp-0x4],0x0
  405188:	push   esi
  405189:	call   0x4050ca
  40518e:	pop    ecx
  40518f:	mov    DWORD PTR [ebp-0x1c],eax
  405192:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  405199:	call   0x4051a3
  40519e:	jmp    0x405174
  4051a0:	mov    esi,DWORD PTR [ebp+0x8]
  4051a3:	push   esi
  4051a4:	call   0x404515
  4051a9:	pop    ecx
  4051aa:	ret    
  4051ab:	mov    edi,edi
  4051ad:	push   ebp
  4051ae:	mov    ebp,esp
  4051b0:	push   ecx
  4051b1:	push   ecx
  4051b2:	lea    eax,[ebp-0x8]
  4051b5:	push   eax
  4051b6:	call   DWORD PTR ds:0x4431b0
  4051bc:	mov    eax,DWORD PTR [ebp-0x8]
  4051bf:	mov    ecx,DWORD PTR [ebp-0x4]
  4051c2:	push   0x0
  4051c4:	add    eax,0x2ac18000
  4051c9:	push   0x989680
  4051ce:	adc    ecx,0xfe624e21
  4051d4:	push   ecx
  4051d5:	push   eax
  4051d6:	call   0x40bea0
  4051db:	cmp    edx,0x7
  4051de:	jl     0x4051ee
  4051e0:	jg     0x4051e9
  4051e2:	cmp    eax,0x93406fff
  4051e7:	jbe    0x4051ee
  4051e9:	or     eax,0xffffffff
  4051ec:	mov    edx,eax
  4051ee:	mov    ecx,DWORD PTR [ebp+0x8]
  4051f1:	test   ecx,ecx
  4051f3:	je     0x4051fa
  4051f5:	mov    DWORD PTR [ecx],eax
  4051f7:	mov    DWORD PTR [ecx+0x4],edx
  4051fa:	leave  
  4051fb:	ret    
  4051fc:	mov    edi,edi
  4051fe:	push   ebp
  4051ff:	mov    ebp,esp
  405201:	sub    esp,0x10
  405204:	jmp    0x405213
  405206:	push   DWORD PTR [ebp+0x8]
  405209:	call   0x40bf17
  40520e:	pop    ecx
  40520f:	test   eax,eax
  405211:	je     0x405222
  405213:	push   DWORD PTR [ebp+0x8]
  405216:	call   0x405d80
  40521b:	pop    ecx
  40521c:	test   eax,eax
  40521e:	je     0x405206
  405220:	leave  
  405221:	ret    
  405222:	test   BYTE PTR ds:0x44daa8,0x1
  405229:	mov    edi,0x44da9c
  40522e:	mov    esi,0x4433e0
  405233:	jne    0x405261
  405235:	or     DWORD PTR ds:0x44daa8,0x1
  40523c:	push   0x1
  40523e:	lea    eax,[ebp-0x4]
  405241:	push   eax
  405242:	mov    ecx,edi
  405244:	mov    DWORD PTR [ebp-0x4],0x4434a8
  40524b:	call   0x403eec
  405250:	push   0x442718
  405255:	mov    DWORD PTR ds:0x44da9c,esi
  40525b:	call   0x404a23
  405260:	pop    ecx
  405261:	push   edi
  405262:	lea    ecx,[ebp-0x10]
  405265:	call   0x404002
  40526a:	push   0x4495a0
  40526f:	lea    eax,[ebp-0x10]
  405272:	push   eax
  405273:	mov    DWORD PTR [ebp-0x10],esi
  405276:	call   0x405841
  40527b:	int3   
  40527c:	mov    edi,edi
  40527e:	push   ebp
  40527f:	mov    ebp,esp
  405281:	cmp    DWORD PTR ds:0x44dab4,0x1
  405288:	jne    0x40528f
  40528a:	call   0x40c164
  40528f:	push   DWORD PTR [ebp+0x8]
  405292:	call   0x40bfb5
  405297:	push   0xff
  40529c:	call   0x407b36
  4052a1:	pop    ecx
  4052a2:	pop    ecx
  4052a3:	pop    ebp
  4052a4:	ret    
  4052a5:	push   0x58
  4052a7:	push   0x449130
  4052ac:	call   0x4076f0
  4052b1:	lea    eax,[ebp-0x68]
  4052b4:	push   eax
  4052b5:	call   DWORD PTR ds:0x4431a4
  4052bb:	xor    esi,esi
  4052bd:	cmp    DWORD PTR ds:0x4508a4,esi
  4052c3:	jne    0x4052d0
  4052c5:	push   esi
  4052c6:	push   esi
  4052c7:	push   0x1
  4052c9:	push   esi
  4052ca:	call   DWORD PTR ds:0x4431a8
  4052d0:	mov    eax,0x5a4d
  4052d5:	cmp    WORD PTR ds:0x400000,ax
  4052dc:	je     0x4052e3
  4052de:	mov    DWORD PTR [ebp-0x1c],esi
  4052e1:	jmp    0x405319
  4052e3:	mov    eax,ds:0x40003c
  4052e8:	cmp    DWORD PTR [eax+0x400000],0x4550
  4052f2:	jne    0x4052de
  4052f4:	mov    ecx,0x10b
  4052f9:	cmp    WORD PTR [eax+0x400018],cx
  405300:	jne    0x4052de
  405302:	cmp    DWORD PTR [eax+0x400074],0xe
  405309:	jbe    0x4052de
  40530b:	xor    ecx,ecx
  40530d:	cmp    DWORD PTR [eax+0x4000e8],esi
  405313:	setne  cl
  405316:	mov    DWORD PTR [ebp-0x1c],ecx
  405319:	call   0x407a51
  40531e:	test   eax,eax
  405320:	jne    0x40532a
  405322:	push   0x1c
  405324:	call   0x40527c
  405329:	pop    ecx
  40532a:	call   0x40ca53
  40532f:	test   eax,eax
  405331:	jne    0x40533b
  405333:	push   0x10
  405335:	call   0x40527c
  40533a:	pop    ecx
  40533b:	call   0x40c70e
  405340:	mov    DWORD PTR [ebp-0x4],esi
  405343:	call   0x407254
  405348:	test   eax,eax
  40534a:	jns    0x405354
  40534c:	push   0x1b
  40534e:	call   0x407dd8
  405353:	pop    ecx
  405354:	call   DWORD PTR ds:0x4431ac
  40535a:	mov    ds:0x4508a0,eax
  40535f:	call   0x40c677
  405364:	mov    ds:0x44daac,eax
  405369:	call   0x40c5bc
  40536e:	test   eax,eax
  405370:	jns    0x40537a
  405372:	push   0x8
  405374:	call   0x407dd8
  405379:	pop    ecx
  40537a:	call   0x40c346
  40537f:	test   eax,eax
  405381:	jns    0x40538b
  405383:	push   0x9
  405385:	call   0x407dd8
  40538a:	pop    ecx
  40538b:	push   0x1
  40538d:	call   0x407bb7
  405392:	pop    ecx
  405393:	cmp    eax,esi
  405395:	je     0x40539e
  405397:	push   eax
  405398:	call   0x407dd8
  40539d:	pop    ecx
  40539e:	call   0x40c2e7
  4053a3:	test   BYTE PTR [ebp-0x3c],0x1
  4053a7:	je     0x4053af
  4053a9:	movzx  ecx,WORD PTR [ebp-0x38]
  4053ad:	jmp    0x4053b2
  4053af:	push   0xa
  4053b1:	pop    ecx
  4053b2:	push   ecx
  4053b3:	push   eax
  4053b4:	push   esi
  4053b5:	push   0x400000
  4053ba:	call   0x401200
  4053bf:	mov    DWORD PTR [ebp-0x20],eax
  4053c2:	cmp    DWORD PTR [ebp-0x1c],esi
  4053c5:	jne    0x4053cd
  4053c7:	push   eax
  4053c8:	call   0x407d8e
  4053cd:	call   0x407dba
  4053d2:	jmp    0x405402
  4053d4:	mov    eax,DWORD PTR [ebp-0x14]
  4053d7:	mov    ecx,DWORD PTR [eax]
  4053d9:	mov    ecx,DWORD PTR [ecx]
  4053db:	mov    DWORD PTR [ebp-0x24],ecx
  4053de:	push   eax
  4053df:	push   ecx
  4053e0:	call   0x40c19d
  4053e5:	pop    ecx
  4053e6:	pop    ecx
  4053e7:	ret    
  4053e8:	mov    esp,DWORD PTR [ebp-0x18]
  4053eb:	mov    eax,DWORD PTR [ebp-0x24]
  4053ee:	mov    DWORD PTR [ebp-0x20],eax
  4053f1:	cmp    DWORD PTR [ebp-0x1c],0x0
  4053f5:	jne    0x4053fd
  4053f7:	push   eax
  4053f8:	call   0x407da4
  4053fd:	call   0x407dc9
  405402:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  405409:	mov    eax,DWORD PTR [ebp-0x20]
  40540c:	call   0x407735
  405411:	ret    
  405412:	call   0x40cbce
  405417:	jmp    0x4052a5
  40541c:	push   DWORD PTR ds:0x44e788
  405422:	call   DWORD PTR ds:0x4431c8
  405428:	test   eax,eax
  40542a:	je     0x40542e
  40542c:	call   eax
  40542e:	push   0x19
  405430:	call   0x40bfb5
  405435:	push   0x1
  405437:	push   0x0
  405439:	call   0x406fc9
  40543e:	add    esp,0xc
  405441:	jmp    0x406f96
  405446:	int3   
  405447:	int3   
  405448:	int3   
  405449:	int3   
  40544a:	int3   
  40544b:	int3   
  40544c:	int3   
  40544d:	int3   
  40544e:	int3   
  40544f:	int3   
  405450:	mov    ecx,DWORD PTR [esp+0x4]
  405454:	test   ecx,0x3
  40545a:	je     0x405480
  40545c:	mov    al,BYTE PTR [ecx]
  40545e:	add    ecx,0x1
  405461:	test   al,al
  405463:	je     0x4054b3
  405465:	test   ecx,0x3
  40546b:	jne    0x40545c
  40546d:	add    eax,0x0
  405472:	lea    esp,[esp+0x0]
  405479:	lea    esp,[esp+0x0]
  405480:	mov    eax,DWORD PTR [ecx]
  405482:	mov    edx,0x7efefeff
  405487:	add    edx,eax
  405489:	xor    eax,0xffffffff
  40548c:	xor    eax,edx
  40548e:	add    ecx,0x4
  405491:	test   eax,0x81010100
  405496:	je     0x405480
  405498:	mov    eax,DWORD PTR [ecx-0x4]
  40549b:	test   al,al
  40549d:	je     0x4054d1
  40549f:	test   ah,ah
  4054a1:	je     0x4054c7
  4054a3:	test   eax,0xff0000
  4054a8:	je     0x4054bd
  4054aa:	test   eax,0xff000000
  4054af:	je     0x4054b3
  4054b1:	jmp    0x405480
  4054b3:	lea    eax,[ecx-0x1]
  4054b6:	mov    ecx,DWORD PTR [esp+0x4]
  4054ba:	sub    eax,ecx
  4054bc:	ret    
  4054bd:	lea    eax,[ecx-0x2]
  4054c0:	mov    ecx,DWORD PTR [esp+0x4]
  4054c4:	sub    eax,ecx
  4054c6:	ret    
  4054c7:	lea    eax,[ecx-0x3]
  4054ca:	mov    ecx,DWORD PTR [esp+0x4]
  4054ce:	sub    eax,ecx
  4054d0:	ret    
  4054d1:	lea    eax,[ecx-0x4]
  4054d4:	mov    ecx,DWORD PTR [esp+0x4]
  4054d8:	sub    eax,ecx
  4054da:	ret    
  4054db:	int3   
  4054dc:	int3   
  4054dd:	int3   
  4054de:	int3   
  4054df:	int3   
  4054e0:	push   ebp
  4054e1:	mov    ebp,esp
  4054e3:	push   edi
  4054e4:	push   esi
  4054e5:	mov    esi,DWORD PTR [ebp+0xc]
  4054e8:	mov    ecx,DWORD PTR [ebp+0x10]
  4054eb:	mov    edi,DWORD PTR [ebp+0x8]
  4054ee:	mov    eax,ecx
  4054f0:	mov    edx,ecx
  4054f2:	add    eax,esi
  4054f4:	cmp    edi,esi
  4054f6:	jbe    0x405500
  4054f8:	cmp    edi,eax
  4054fa:	jb     0x4056a0
  405500:	cmp    ecx,0x80
  405506:	jb     0x405524
  405508:	cmp    DWORD PTR ds:0x45077c,0x0
  40550f:	je     0x405524
  405511:	push   edi
  405512:	push   esi
  405513:	and    edi,0xf
  405516:	and    esi,0xf
  405519:	cmp    edi,esi
  40551b:	pop    esi
  40551c:	pop    edi
  40551d:	jne    0x405524
  40551f:	jmp    0x40793e
  405524:	test   edi,0x3
  40552a:	jne    0x405540
  40552c:	shr    ecx,0x2
  40552f:	and    edx,0x3
  405532:	cmp    ecx,0x8
  405535:	jb     0x405560
  405537:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405539:	jmp    DWORD PTR [edx*4+0x405650]
  405540:	mov    eax,edi
  405542:	mov    edx,0x3
  405547:	sub    ecx,0x4
  40554a:	jb     0x405558
  40554c:	and    eax,0x3
  40554f:	add    ecx,eax
  405551:	jmp    DWORD PTR [eax*4+0x405564]
  405558:	jmp    DWORD PTR [ecx*4+0x405660]
  40555f:	nop
  405560:	jmp    DWORD PTR [ecx*4+0x4055e4]
  405567:	nop
  405568:	je     0x4055bf
  40556a:	inc    eax
  40556b:	add    BYTE PTR [eax-0x3bffbfab],ah
  405571:	push   ebp
  405572:	inc    eax
  405573:	add    BYTE PTR [ebx],ah
  405575:	ror    DWORD PTR [edx-0x75f877fa],1
  40557b:	inc    esi
  40557c:	add    DWORD PTR [eax+0x468a0147],ecx
  405582:	add    al,cl
  405584:	jmp    0x287dd8b
  405589:	add    esi,0x3
  40558c:	add    edi,0x3
  40558f:	cmp    ecx,0x8
  405592:	jb     0x405560
  405594:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405596:	jmp    DWORD PTR [edx*4+0x405650]
  40559d:	lea    ecx,[ecx+0x0]
  4055a0:	and    edx,ecx
  4055a2:	mov    al,BYTE PTR [esi]
  4055a4:	mov    BYTE PTR [edi],al
  4055a6:	mov    al,BYTE PTR [esi+0x1]
  4055a9:	shr    ecx,0x2
  4055ac:	mov    BYTE PTR [edi+0x1],al
  4055af:	add    esi,0x2
  4055b2:	add    edi,0x2
  4055b5:	cmp    ecx,0x8
  4055b8:	jb     0x405560
  4055ba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055bc:	jmp    DWORD PTR [edx*4+0x405650]
  4055c3:	nop
  4055c4:	and    edx,ecx
  4055c6:	mov    al,BYTE PTR [esi]
  4055c8:	mov    BYTE PTR [edi],al
  4055ca:	add    esi,0x1
  4055cd:	shr    ecx,0x2
  4055d0:	add    edi,0x1
  4055d3:	cmp    ecx,0x8
  4055d6:	jb     0x405560
  4055d8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055da:	jmp    DWORD PTR [edx*4+0x405650]
  4055e1:	lea    ecx,[ecx+0x0]
  4055e4:	inc    edi
  4055e5:	push   esi
  4055e6:	inc    eax
  4055e7:	add    BYTE PTR [esi+edx*2],dh
  4055ea:	inc    eax
  4055eb:	add    BYTE PTR [esi+edx*2],ch
  4055ee:	inc    eax
  4055ef:	add    BYTE PTR [esi+edx*2],ah
  4055f2:	inc    eax
  4055f3:	add    BYTE PTR [esi+edx*2],bl
  4055f6:	inc    eax
  4055f7:	add    BYTE PTR [esi+edx*2],dl
  4055fa:	inc    eax
  4055fb:	add    BYTE PTR [esi+edx*2],cl
  4055fe:	inc    eax
  4055ff:	add    BYTE PTR [esi+edx*2],al
  405602:	inc    eax
  405603:	add    BYTE PTR [ebx-0x761b71bc],cl
  405609:	inc    esp
  40560a:	(bad)  
  40560b:	in     al,0x8b
  40560d:	inc    esp
  40560e:	mov    gs,eax
  405610:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  405614:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  405618:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  40561c:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  405620:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  405624:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  405628:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  40562c:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  405630:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  405634:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  405638:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  40563c:	lea    eax,[ecx*4+0x0]
  405643:	add    esi,eax
  405645:	add    edi,eax
  405647:	jmp    DWORD PTR [edx*4+0x405650]
  40564e:	mov    edi,edi
  405650:	pusha  
  405651:	push   esi
  405652:	inc    eax
  405653:	add    BYTE PTR [eax+0x56],ch
  405656:	inc    eax
  405657:	add    BYTE PTR [esi+edx*2+0x40],dh
  40565b:	add    BYTE PTR [eax-0x74ffbfaa],cl
  405661:	inc    ebp
  405662:	or     BYTE PTR [esi+0x5f],bl
  405665:	leave  
  405666:	ret    
  405667:	nop
  405668:	mov    al,BYTE PTR [esi]
  40566a:	mov    BYTE PTR [edi],al
  40566c:	mov    eax,DWORD PTR [ebp+0x8]
  40566f:	pop    esi
  405670:	pop    edi
  405671:	leave  
  405672:	ret    
  405673:	nop
  405674:	mov    al,BYTE PTR [esi]
  405676:	mov    BYTE PTR [edi],al
  405678:	mov    al,BYTE PTR [esi+0x1]
  40567b:	mov    BYTE PTR [edi+0x1],al
  40567e:	mov    eax,DWORD PTR [ebp+0x8]
  405681:	pop    esi
  405682:	pop    edi
  405683:	leave  
  405684:	ret    
  405685:	lea    ecx,[ecx+0x0]
  405688:	mov    al,BYTE PTR [esi]
  40568a:	mov    BYTE PTR [edi],al
  40568c:	mov    al,BYTE PTR [esi+0x1]
  40568f:	mov    BYTE PTR [edi+0x1],al
  405692:	mov    al,BYTE PTR [esi+0x2]
  405695:	mov    BYTE PTR [edi+0x2],al
  405698:	mov    eax,DWORD PTR [ebp+0x8]
  40569b:	pop    esi
  40569c:	pop    edi
  40569d:	leave  
  40569e:	ret    
  40569f:	nop
  4056a0:	lea    esi,[ecx+esi*1-0x4]
  4056a4:	lea    edi,[ecx+edi*1-0x4]
  4056a8:	test   edi,0x3
  4056ae:	jne    0x4056d4
  4056b0:	shr    ecx,0x2
  4056b3:	and    edx,0x3
  4056b6:	cmp    ecx,0x8
  4056b9:	jb     0x4056c8
  4056bb:	std    
  4056bc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056be:	cld    
  4056bf:	jmp    DWORD PTR [edx*4+0x4057ec]
  4056c6:	mov    edi,edi
  4056c8:	neg    ecx
  4056ca:	jmp    DWORD PTR [ecx*4+0x40579c]
  4056d1:	lea    ecx,[ecx+0x0]
  4056d4:	mov    eax,edi
  4056d6:	mov    edx,0x3
  4056db:	cmp    ecx,0x4
  4056de:	jb     0x4056ec
  4056e0:	and    eax,0x3
  4056e3:	sub    ecx,eax
  4056e5:	jmp    DWORD PTR [eax*4+0x4056f0]
  4056ec:	jmp    DWORD PTR [ecx*4+0x4057ec]
  4056f3:	nop
  4056f4:	add    BYTE PTR [edi+0x40],dl
  4056f7:	add    BYTE PTR [edi+edx*2],ah
  4056fa:	inc    eax
  4056fb:	add    BYTE PTR [edi+edx*2+0x40],cl
  4056ff:	add    BYTE PTR [edx-0x2edcfcba],cl
  405705:	mov    BYTE PTR [edi+0x3],al
  405708:	sub    esi,0x1
  40570b:	shr    ecx,0x2
  40570e:	sub    edi,0x1
  405711:	cmp    ecx,0x8
  405714:	jb     0x4056c8
  405716:	std    
  405717:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405719:	cld    
  40571a:	jmp    DWORD PTR [edx*4+0x4057ec]
  405721:	lea    ecx,[ecx+0x0]
  405724:	mov    al,BYTE PTR [esi+0x3]
  405727:	and    edx,ecx
  405729:	mov    BYTE PTR [edi+0x3],al
  40572c:	mov    al,BYTE PTR [esi+0x2]
  40572f:	shr    ecx,0x2
  405732:	mov    BYTE PTR [edi+0x2],al
  405735:	sub    esi,0x2
  405738:	sub    edi,0x2
  40573b:	cmp    ecx,0x8
  40573e:	jb     0x4056c8
  405740:	std    
  405741:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405743:	cld    
  405744:	jmp    DWORD PTR [edx*4+0x4057ec]
  40574b:	nop
  40574c:	mov    al,BYTE PTR [esi+0x3]
  40574f:	and    edx,ecx
  405751:	mov    BYTE PTR [edi+0x3],al
  405754:	mov    al,BYTE PTR [esi+0x2]
  405757:	mov    BYTE PTR [edi+0x2],al
  40575a:	mov    al,BYTE PTR [esi+0x1]
  40575d:	shr    ecx,0x2
  405760:	mov    BYTE PTR [edi+0x1],al
  405763:	sub    esi,0x3
  405766:	sub    edi,0x3
  405769:	cmp    ecx,0x8
  40576c:	jb     0x4056c8
  405772:	std    
  405773:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405775:	cld    
  405776:	jmp    DWORD PTR [edx*4+0x4057ec]
  40577d:	lea    ecx,[ecx+0x0]
  405780:	mov    al,ds:0xa8004057
  405785:	push   edi
  405786:	inc    eax
  405787:	add    BYTE PTR [eax-0x47ffbfa9],dh
  40578d:	push   edi
  40578e:	inc    eax
  40578f:	add    al,al
  405791:	push   edi
  405792:	inc    eax
  405793:	add    al,cl
  405795:	push   edi
  405796:	inc    eax
  405797:	add    al,dl
  405799:	push   edi
  40579a:	inc    eax
  40579b:	add    bl,ah
  40579d:	push   edi
  40579e:	inc    eax
  40579f:	add    BYTE PTR [ebx-0x76e371bc],cl
  4057a5:	inc    esp
  4057a6:	(bad)  
  4057a7:	sbb    al,0x8b
  4057a9:	inc    esp
  4057aa:	mov    ds,WORD PTR [eax]
  4057ac:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  4057b0:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4057b4:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4057b8:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4057bc:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4057c0:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4057c4:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4057c8:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4057cc:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4057d0:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4057d4:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4057d8:	lea    eax,[ecx*4+0x0]
  4057df:	add    esi,eax
  4057e1:	add    edi,eax
  4057e3:	jmp    DWORD PTR [edx*4+0x4057ec]
  4057ea:	mov    edi,edi
  4057ec:	cld    
  4057ed:	push   edi
  4057ee:	inc    eax
  4057ef:	add    BYTE PTR [eax+ebx*2],al
  4057f2:	inc    eax
  4057f3:	add    BYTE PTR [eax+ebx*2],dl
  4057f6:	inc    eax
  4057f7:	add    BYTE PTR [eax],ch
  4057f9:	pop    eax
  4057fa:	inc    eax
  4057fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  405801:	leave  
  405802:	ret    
  405803:	nop
  405804:	mov    al,BYTE PTR [esi+0x3]
  405807:	mov    BYTE PTR [edi+0x3],al
  40580a:	mov    eax,DWORD PTR [ebp+0x8]
  40580d:	pop    esi
  40580e:	pop    edi
  40580f:	leave  
  405810:	ret    
  405811:	lea    ecx,[ecx+0x0]
  405814:	mov    al,BYTE PTR [esi+0x3]
  405817:	mov    BYTE PTR [edi+0x3],al
  40581a:	mov    al,BYTE PTR [esi+0x2]
  40581d:	mov    BYTE PTR [edi+0x2],al
  405820:	mov    eax,DWORD PTR [ebp+0x8]
  405823:	pop    esi
  405824:	pop    edi
  405825:	leave  
  405826:	ret    
  405827:	nop
  405828:	mov    al,BYTE PTR [esi+0x3]
  40582b:	mov    BYTE PTR [edi+0x3],al
  40582e:	mov    al,BYTE PTR [esi+0x2]
  405831:	mov    BYTE PTR [edi+0x2],al
  405834:	mov    al,BYTE PTR [esi+0x1]
  405837:	mov    BYTE PTR [edi+0x1],al
  40583a:	mov    eax,DWORD PTR [ebp+0x8]
  40583d:	pop    esi
  40583e:	pop    edi
  40583f:	leave  
  405840:	ret    
  405841:	mov    edi,edi
  405843:	push   ebp
  405844:	mov    ebp,esp
  405846:	sub    esp,0x20
  405849:	mov    eax,DWORD PTR [ebp+0x8]
  40584c:	push   esi
  40584d:	push   edi
  40584e:	push   0x8
  405850:	pop    ecx
  405851:	mov    esi,0x4434b8
  405856:	lea    edi,[ebp-0x20]
  405859:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40585b:	mov    DWORD PTR [ebp-0x8],eax
  40585e:	mov    eax,DWORD PTR [ebp+0xc]
  405861:	pop    edi
  405862:	mov    DWORD PTR [ebp-0x4],eax
  405865:	pop    esi
  405866:	test   eax,eax
  405868:	je     0x405876
  40586a:	test   BYTE PTR [eax],0x8
  40586d:	je     0x405876
  40586f:	mov    DWORD PTR [ebp-0xc],0x1994000
  405876:	lea    eax,[ebp-0xc]
  405879:	push   eax
  40587a:	push   DWORD PTR [ebp-0x10]
  40587d:	push   DWORD PTR [ebp-0x1c]
  405880:	push   DWORD PTR [ebp-0x20]
  405883:	call   DWORD PTR ds:0x4431a0
  405889:	leave  
  40588a:	ret    0x8
  40588d:	mov    edi,edi
  40588f:	push   ebp
  405890:	mov    ebp,esp
  405892:	push   ecx
  405893:	push   ebx
  405894:	mov    eax,DWORD PTR [ebp+0xc]
  405897:	add    eax,0xc
  40589a:	mov    DWORD PTR [ebp-0x4],eax
  40589d:	mov    ebx,DWORD PTR fs:0x0
  4058a4:	mov    eax,DWORD PTR [ebx]
  4058a6:	mov    fs:0x0,eax
  4058ac:	mov    eax,DWORD PTR [ebp+0x8]
  4058af:	mov    ebx,DWORD PTR [ebp+0xc]
  4058b2:	mov    ebp,DWORD PTR [ebp-0x4]
  4058b5:	mov    esp,DWORD PTR [ebx-0x4]
  4058b8:	jmp    eax
  4058ba:	pop    ebx
  4058bb:	leave  
  4058bc:	ret    0x8
  4058bf:	pop    eax
  4058c0:	pop    ecx
  4058c1:	xchg   DWORD PTR [esp],eax
  4058c4:	jmp    eax
  4058c6:	mov    edi,edi
  4058c8:	push   ebp
  4058c9:	mov    ebp,esp
  4058cb:	push   ecx
  4058cc:	push   ecx
  4058cd:	push   ebx
  4058ce:	push   esi
  4058cf:	push   edi
  4058d0:	mov    esi,DWORD PTR fs:0x0
  4058d7:	mov    DWORD PTR [ebp-0x4],esi
  4058da:	mov    DWORD PTR [ebp-0x8],0x4058f1
  4058e1:	push   0x0
  4058e3:	push   DWORD PTR [ebp+0xc]
  4058e6:	push   DWORD PTR [ebp-0x8]
  4058e9:	push   DWORD PTR [ebp+0x8]
  4058ec:	call   0x4139be
  4058f1:	mov    eax,DWORD PTR [ebp+0xc]
  4058f4:	mov    eax,DWORD PTR [eax+0x4]
  4058f7:	and    eax,0xfffffffd
  4058fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4058fd:	mov    DWORD PTR [ecx+0x4],eax
  405900:	mov    edi,DWORD PTR fs:0x0
  405907:	mov    ebx,DWORD PTR [ebp-0x4]
  40590a:	mov    DWORD PTR [ebx],edi
  40590c:	mov    DWORD PTR fs:0x0,ebx
  405913:	pop    edi
  405914:	pop    esi
  405915:	pop    ebx
  405916:	leave  
  405917:	ret    0x8
  40591a:	push   ebp
  40591b:	mov    ebp,esp
  40591d:	sub    esp,0x8
  405920:	push   ebx
  405921:	push   esi
  405922:	push   edi
  405923:	cld    
  405924:	mov    DWORD PTR [ebp-0x4],eax
  405927:	xor    eax,eax
  405929:	push   eax
  40592a:	push   eax
  40592b:	push   eax
  40592c:	push   DWORD PTR [ebp-0x4]
  40592f:	push   DWORD PTR [ebp+0x14]
  405932:	push   DWORD PTR [ebp+0x10]
  405935:	push   DWORD PTR [ebp+0xc]
  405938:	push   DWORD PTR [ebp+0x8]
  40593b:	call   0x406a06
  405940:	add    esp,0x20
  405943:	mov    DWORD PTR [ebp-0x8],eax
  405946:	pop    edi
  405947:	pop    esi
  405948:	pop    ebx
  405949:	mov    eax,DWORD PTR [ebp-0x8]
  40594c:	mov    esp,ebp
  40594e:	pop    ebp
  40594f:	ret    
  405950:	mov    edi,edi
  405952:	push   ebp
  405953:	mov    ebp,esp
  405955:	push   esi
  405956:	cld    
  405957:	mov    esi,DWORD PTR [ebp+0xc]
  40595a:	mov    ecx,DWORD PTR [esi+0x8]
  40595d:	xor    ecx,esi
  40595f:	call   0x403edd
  405964:	push   0x0
  405966:	push   esi
  405967:	push   DWORD PTR [esi+0x14]
  40596a:	push   DWORD PTR [esi+0xc]
  40596d:	push   0x0
  40596f:	push   DWORD PTR [ebp+0x10]
  405972:	push   DWORD PTR [esi+0x10]
  405975:	push   DWORD PTR [ebp+0x8]
  405978:	call   0x406a06
  40597d:	add    esp,0x20
  405980:	pop    esi
  405981:	pop    ebp
  405982:	ret    
  405983:	mov    edi,edi
  405985:	push   ebp
  405986:	mov    ebp,esp
  405988:	sub    esp,0x38
  40598b:	push   ebx
  40598c:	cmp    DWORD PTR [ebp+0x8],0x123
  405993:	jne    0x4059a7
  405995:	mov    eax,0x405a2e
  40599a:	mov    ecx,DWORD PTR [ebp+0xc]
  40599d:	mov    DWORD PTR [ecx],eax
  40599f:	xor    eax,eax
  4059a1:	inc    eax
  4059a2:	jmp    0x405a57
  4059a7:	and    DWORD PTR [ebp-0x28],0x0
  4059ab:	mov    DWORD PTR [ebp-0x24],0x405a5a
  4059b2:	mov    eax,ds:0x44b470
  4059b7:	lea    ecx,[ebp-0x28]
  4059ba:	xor    eax,ecx
  4059bc:	mov    DWORD PTR [ebp-0x20],eax
  4059bf:	mov    eax,DWORD PTR [ebp+0x18]
  4059c2:	mov    DWORD PTR [ebp-0x1c],eax
  4059c5:	mov    eax,DWORD PTR [ebp+0xc]
  4059c8:	mov    DWORD PTR [ebp-0x18],eax
  4059cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4059ce:	mov    DWORD PTR [ebp-0x14],eax
  4059d1:	mov    eax,DWORD PTR [ebp+0x20]
  4059d4:	mov    DWORD PTR [ebp-0x10],eax
  4059d7:	and    DWORD PTR [ebp-0xc],0x0
  4059db:	and    DWORD PTR [ebp-0x8],0x0
  4059df:	and    DWORD PTR [ebp-0x4],0x0
  4059e3:	mov    DWORD PTR [ebp-0xc],esp
  4059e6:	mov    DWORD PTR [ebp-0x8],ebp
  4059e9:	mov    eax,fs:0x0
  4059ef:	mov    DWORD PTR [ebp-0x28],eax
  4059f2:	lea    eax,[ebp-0x28]
  4059f5:	mov    fs:0x0,eax
  4059fb:	mov    DWORD PTR [ebp-0x38],0x1
  405a02:	mov    eax,DWORD PTR [ebp+0x8]
  405a05:	mov    DWORD PTR [ebp-0x34],eax
  405a08:	mov    eax,DWORD PTR [ebp+0x10]
  405a0b:	mov    DWORD PTR [ebp-0x30],eax
  405a0e:	call   0x40c90a
  405a13:	mov    eax,DWORD PTR [eax+0x80]
  405a19:	mov    DWORD PTR [ebp-0x2c],eax
  405a1c:	lea    eax,[ebp-0x34]
  405a1f:	push   eax
  405a20:	mov    eax,DWORD PTR [ebp+0x8]
  405a23:	push   DWORD PTR [eax]
  405a25:	call   DWORD PTR [ebp-0x2c]
  405a28:	pop    ecx
  405a29:	pop    ecx
  405a2a:	and    DWORD PTR [ebp-0x38],0x0
  405a2e:	cmp    DWORD PTR [ebp-0x4],0x0
  405a32:	je     0x405a4b
  405a34:	mov    ebx,DWORD PTR fs:0x0
  405a3b:	mov    eax,DWORD PTR [ebx]
  405a3d:	mov    ebx,DWORD PTR [ebp-0x28]
  405a40:	mov    DWORD PTR [ebx],eax
  405a42:	mov    DWORD PTR fs:0x0,ebx
  405a49:	jmp    0x405a54
  405a4b:	mov    eax,DWORD PTR [ebp-0x28]
  405a4e:	mov    fs:0x0,eax
  405a54:	mov    eax,DWORD PTR [ebp-0x38]
  405a57:	pop    ebx
  405a58:	leave  
  405a59:	ret    
  405a5a:	mov    edi,edi
  405a5c:	push   ebp
  405a5d:	mov    ebp,esp
  405a5f:	push   ecx
  405a60:	push   ebx
  405a61:	cld    
  405a62:	mov    eax,DWORD PTR [ebp+0xc]
  405a65:	mov    ecx,DWORD PTR [eax+0x8]
  405a68:	xor    ecx,DWORD PTR [ebp+0xc]
  405a6b:	call   0x403edd
  405a70:	mov    eax,DWORD PTR [ebp+0x8]
  405a73:	mov    eax,DWORD PTR [eax+0x4]
  405a76:	and    eax,0x66
  405a79:	je     0x405a8c
  405a7b:	mov    eax,DWORD PTR [ebp+0xc]
  405a7e:	mov    DWORD PTR [eax+0x24],0x1
  405a85:	xor    eax,eax
  405a87:	inc    eax
  405a88:	jmp    0x405af6
  405a8a:	jmp    0x405af6
  405a8c:	push   0x1
  405a8e:	mov    eax,DWORD PTR [ebp+0xc]
  405a91:	push   DWORD PTR [eax+0x18]
  405a94:	mov    eax,DWORD PTR [ebp+0xc]
  405a97:	push   DWORD PTR [eax+0x14]
  405a9a:	mov    eax,DWORD PTR [ebp+0xc]
  405a9d:	push   DWORD PTR [eax+0xc]
  405aa0:	push   0x0
  405aa2:	push   DWORD PTR [ebp+0x10]
  405aa5:	mov    eax,DWORD PTR [ebp+0xc]
  405aa8:	push   DWORD PTR [eax+0x10]
  405aab:	push   DWORD PTR [ebp+0x8]
  405aae:	call   0x406a06
  405ab3:	add    esp,0x20
  405ab6:	mov    eax,DWORD PTR [ebp+0xc]
  405ab9:	cmp    DWORD PTR [eax+0x24],0x0
  405abd:	jne    0x405aca
  405abf:	push   DWORD PTR [ebp+0x8]
  405ac2:	push   DWORD PTR [ebp+0xc]
  405ac5:	call   0x4058c6
  405aca:	push   0x0
  405acc:	push   0x0
  405ace:	push   0x0
  405ad0:	push   0x0
  405ad2:	push   0x0
  405ad4:	lea    eax,[ebp-0x4]
  405ad7:	push   eax
  405ad8:	push   0x123
  405add:	call   0x405983
  405ae2:	add    esp,0x1c
  405ae5:	mov    eax,DWORD PTR [ebp-0x4]
  405ae8:	mov    ebx,DWORD PTR [ebp+0xc]
  405aeb:	mov    esp,DWORD PTR [ebx+0x1c]
  405aee:	mov    ebp,DWORD PTR [ebx+0x20]
  405af1:	jmp    eax
  405af3:	xor    eax,eax
  405af5:	inc    eax
  405af6:	pop    ebx
  405af7:	leave  
  405af8:	ret    
  405af9:	mov    edi,edi
  405afb:	push   ebp
  405afc:	mov    ebp,esp
  405afe:	push   ecx
  405aff:	push   ebx
  405b00:	push   esi
  405b01:	push   edi
  405b02:	mov    edi,DWORD PTR [ebp+0x8]
  405b05:	mov    eax,DWORD PTR [edi+0x10]
  405b08:	mov    esi,DWORD PTR [edi+0xc]
  405b0b:	mov    DWORD PTR [ebp-0x4],eax
  405b0e:	mov    ebx,esi
  405b10:	jmp    0x405b3d
  405b12:	cmp    esi,0xffffffff
  405b15:	jne    0x405b1c
  405b17:	call   0x408ad3
  405b1c:	mov    ecx,DWORD PTR [ebp+0x10]
  405b1f:	dec    esi
  405b20:	mov    eax,esi
  405b22:	imul   eax,eax,0x14
  405b25:	add    eax,DWORD PTR [ebp-0x4]
  405b28:	cmp    DWORD PTR [eax+0x4],ecx
  405b2b:	jge    0x405b32
  405b2d:	cmp    ecx,DWORD PTR [eax+0x8]
  405b30:	jle    0x405b37
  405b32:	cmp    esi,0xffffffff
  405b35:	jne    0x405b40
  405b37:	dec    DWORD PTR [ebp+0xc]
  405b3a:	mov    ebx,DWORD PTR [ebp+0x8]
  405b3d:	mov    DWORD PTR [ebp+0x8],esi
  405b40:	cmp    DWORD PTR [ebp+0xc],0x0
  405b44:	jge    0x405b12
  405b46:	mov    eax,DWORD PTR [ebp+0x14]
  405b49:	inc    esi
  405b4a:	mov    DWORD PTR [eax],esi
  405b4c:	mov    eax,DWORD PTR [ebp+0x18]
  405b4f:	mov    DWORD PTR [eax],ebx
  405b51:	cmp    ebx,DWORD PTR [edi+0xc]
  405b54:	ja     0x405b5a
  405b56:	cmp    esi,ebx
  405b58:	jbe    0x405b5f
  405b5a:	call   0x408ad3
  405b5f:	mov    eax,esi
  405b61:	imul   eax,eax,0x14
  405b64:	add    eax,DWORD PTR [ebp-0x4]
  405b67:	pop    edi
  405b68:	pop    esi
  405b69:	pop    ebx
  405b6a:	leave  
  405b6b:	ret    
  405b6c:	mov    edi,edi
  405b6e:	push   ebp
  405b6f:	mov    ebp,esp
  405b71:	mov    eax,DWORD PTR [ebp+0xc]
  405b74:	push   esi
  405b75:	mov    esi,DWORD PTR [ebp+0x8]
  405b78:	mov    DWORD PTR [esi],eax
  405b7a:	call   0x40c90a
  405b7f:	mov    eax,DWORD PTR [eax+0x98]
  405b85:	mov    DWORD PTR [esi+0x4],eax
  405b88:	call   0x40c90a
  405b8d:	mov    DWORD PTR [eax+0x98],esi
  405b93:	mov    eax,esi
  405b95:	pop    esi
  405b96:	pop    ebp
  405b97:	ret    
  405b98:	mov    edi,edi
  405b9a:	push   ebp
  405b9b:	mov    ebp,esp
  405b9d:	call   0x40c90a
  405ba2:	mov    eax,DWORD PTR [eax+0x98]
  405ba8:	jmp    0x405bb4
  405baa:	mov    ecx,DWORD PTR [eax]
  405bac:	cmp    ecx,DWORD PTR [ebp+0x8]
  405baf:	je     0x405bbb
  405bb1:	mov    eax,DWORD PTR [eax+0x4]
  405bb4:	test   eax,eax
  405bb6:	jne    0x405baa
  405bb8:	inc    eax
  405bb9:	pop    ebp
  405bba:	ret    
  405bbb:	xor    eax,eax
  405bbd:	pop    ebp
  405bbe:	ret    
  405bbf:	mov    edi,edi
  405bc1:	push   ebp
  405bc2:	mov    ebp,esp
  405bc4:	push   esi
  405bc5:	call   0x40c90a
  405bca:	mov    esi,DWORD PTR [ebp+0x8]
  405bcd:	cmp    esi,DWORD PTR [eax+0x98]
  405bd3:	jne    0x405be6
  405bd5:	call   0x40c90a
  405bda:	mov    ecx,DWORD PTR [esi+0x4]
  405bdd:	mov    DWORD PTR [eax+0x98],ecx
  405be3:	pop    esi
  405be4:	pop    ebp
  405be5:	ret    
  405be6:	call   0x40c90a
  405beb:	mov    eax,DWORD PTR [eax+0x98]
  405bf1:	jmp    0x405bfc
  405bf3:	mov    ecx,DWORD PTR [eax+0x4]
  405bf6:	cmp    esi,ecx
  405bf8:	je     0x405c09
  405bfa:	mov    eax,ecx
  405bfc:	cmp    DWORD PTR [eax+0x4],0x0
  405c00:	jne    0x405bf3
  405c02:	pop    esi
  405c03:	pop    ebp
  405c04:	jmp    0x408ad3
  405c09:	mov    ecx,DWORD PTR [esi+0x4]
  405c0c:	mov    DWORD PTR [eax+0x4],ecx
  405c0f:	jmp    0x405be3
  405c11:	mov    edi,edi
  405c13:	push   ebp
  405c14:	mov    ebp,esp
  405c16:	sub    esp,0x18
  405c19:	mov    eax,ds:0x44b470
  405c1e:	and    DWORD PTR [ebp-0x18],0x0
  405c22:	lea    ecx,[ebp-0x18]
  405c25:	xor    eax,ecx
  405c27:	mov    ecx,DWORD PTR [ebp+0x8]
  405c2a:	mov    DWORD PTR [ebp-0x10],eax
  405c2d:	mov    eax,DWORD PTR [ebp+0xc]
  405c30:	mov    DWORD PTR [ebp-0xc],eax
  405c33:	mov    eax,DWORD PTR [ebp+0x14]
  405c36:	inc    eax
  405c37:	mov    DWORD PTR [ebp-0x14],0x405950
  405c3e:	mov    DWORD PTR [ebp-0x8],ecx
  405c41:	mov    DWORD PTR [ebp-0x4],eax
  405c44:	mov    eax,fs:0x0
  405c4a:	mov    DWORD PTR [ebp-0x18],eax
  405c4d:	lea    eax,[ebp-0x18]
  405c50:	mov    fs:0x0,eax
  405c56:	push   DWORD PTR [ebp+0x18]
  405c59:	push   ecx
  405c5a:	push   DWORD PTR [ebp+0x10]
  405c5d:	call   0x40cc80
  405c62:	mov    ecx,eax
  405c64:	mov    eax,DWORD PTR [ebp-0x18]
  405c67:	mov    fs:0x0,eax
  405c6d:	mov    eax,ecx
  405c6f:	leave  
  405c70:	ret    
  405c71:	push   eax
  405c72:	push   DWORD PTR fs:0x0
  405c79:	lea    eax,[esp+0xc]
  405c7d:	sub    esp,DWORD PTR [esp+0xc]
  405c81:	push   ebx
  405c82:	push   esi
  405c83:	push   edi
  405c84:	mov    DWORD PTR [eax],ebp
  405c86:	mov    ebp,eax
  405c88:	mov    eax,ds:0x44b470
  405c8d:	xor    eax,ebp
  405c8f:	push   eax
  405c90:	push   DWORD PTR [ebp-0x4]
  405c93:	mov    DWORD PTR [ebp-0x4],0xffffffff
  405c9a:	lea    eax,[ebp-0xc]
  405c9d:	mov    fs:0x0,eax
  405ca3:	ret    
  405ca4:	push   eax
  405ca5:	push   DWORD PTR fs:0x0
  405cac:	lea    eax,[esp+0xc]
  405cb0:	sub    esp,DWORD PTR [esp+0xc]
  405cb4:	push   ebx
  405cb5:	push   esi
  405cb6:	push   edi
  405cb7:	mov    DWORD PTR [eax],ebp
  405cb9:	mov    ebp,eax
  405cbb:	mov    eax,ds:0x44b470
  405cc0:	xor    eax,ebp
  405cc2:	push   eax
  405cc3:	mov    DWORD PTR [ebp-0x10],esp
  405cc6:	push   DWORD PTR [ebp-0x4]
  405cc9:	mov    DWORD PTR [ebp-0x4],0xffffffff
  405cd0:	lea    eax,[ebp-0xc]
  405cd3:	mov    fs:0x0,eax
  405cd9:	ret    
  405cda:	mov    ecx,DWORD PTR [ebp-0xc]
  405cdd:	mov    DWORD PTR fs:0x0,ecx
  405ce4:	pop    ecx
  405ce5:	pop    edi
  405ce6:	pop    edi
  405ce7:	pop    esi
  405ce8:	pop    ebx
  405ce9:	mov    esp,ebp
  405ceb:	pop    ebp
  405cec:	push   ecx
  405ced:	ret    
  405cee:	mov    edi,edi
  405cf0:	push   ebp
  405cf1:	mov    ebp,esp
  405cf3:	push   esi
  405cf4:	mov    esi,DWORD PTR [ebp+0x8]
  405cf7:	test   esi,esi
  405cf9:	js     0x405d04
  405cfb:	call   0x40cccc
  405d00:	cmp    esi,DWORD PTR [eax]
  405d02:	jl     0x405d0b
  405d04:	call   0x40cccc
  405d09:	mov    esi,DWORD PTR [eax]
  405d0b:	call   0x40ccd2
  405d10:	mov    eax,DWORD PTR [eax+esi*4]
  405d13:	pop    esi
  405d14:	pop    ebp
  405d15:	ret    
  405d16:	mov    edi,edi
  405d18:	push   ebp
  405d19:	mov    ebp,esp
  405d1b:	push   ebx
  405d1c:	push   esi
  405d1d:	call   0x40c891
  405d22:	mov    esi,eax
  405d24:	xor    ebx,ebx
  405d26:	cmp    esi,ebx
  405d28:	jne    0x405d31
  405d2a:	mov    eax,0x4434d8
  405d2f:	jmp    0x405d53
  405d31:	push   edi
  405d32:	mov    edi,0x86
  405d37:	cmp    DWORD PTR [esi+0x24],ebx
  405d3a:	jne    0x405d57
  405d3c:	push   0x1
  405d3e:	push   edi
  405d3f:	call   0x406eaa
  405d44:	pop    ecx
  405d45:	pop    ecx
  405d46:	mov    DWORD PTR [esi+0x24],eax
  405d49:	cmp    eax,ebx
  405d4b:	jne    0x405d57
  405d4d:	mov    eax,0x4434d8
  405d52:	pop    edi
  405d53:	pop    esi
  405d54:	pop    ebx
  405d55:	pop    ebp
  405d56:	ret    
  405d57:	push   DWORD PTR [ebp+0x8]
  405d5a:	mov    esi,DWORD PTR [esi+0x24]
  405d5d:	call   0x405cee
  405d62:	push   eax
  405d63:	push   edi
  405d64:	push   esi
  405d65:	call   0x4078df
  405d6a:	add    esp,0x10
  405d6d:	test   eax,eax
  405d6f:	jne    0x405d75
  405d71:	mov    eax,esi
  405d73:	jmp    0x405d52
  405d75:	push   ebx
  405d76:	push   ebx
  405d77:	push   ebx
  405d78:	push   ebx
  405d79:	push   ebx
  405d7a:	call   0x4075f7
  405d7f:	int3   
  405d80:	mov    edi,edi
  405d82:	push   ebp
  405d83:	mov    ebp,esp
  405d85:	push   ebx
  405d86:	mov    ebx,DWORD PTR [ebp+0x8]
  405d89:	cmp    ebx,0xffffffe0
  405d8c:	ja     0x405dfd
  405d8e:	push   esi
  405d8f:	push   edi
  405d90:	cmp    DWORD PTR ds:0x44dde8,0x0
  405d97:	jne    0x405db1
  405d99:	call   0x40c164
  405d9e:	push   0x1e
  405da0:	call   0x40bfb5
  405da5:	push   0xff
  405daa:	call   0x407b36
  405daf:	pop    ecx
  405db0:	pop    ecx
  405db1:	test   ebx,ebx
  405db3:	je     0x405db9
  405db5:	mov    eax,ebx
  405db7:	jmp    0x405dbc
  405db9:	xor    eax,eax
  405dbb:	inc    eax
  405dbc:	push   eax
  405dbd:	push   0x0
  405dbf:	push   DWORD PTR ds:0x44dde8
  405dc5:	call   DWORD PTR ds:0x44313c
  405dcb:	mov    edi,eax
  405dcd:	test   edi,edi
  405dcf:	jne    0x405df7
  405dd1:	push   0xc
  405dd3:	pop    esi
  405dd4:	cmp    DWORD PTR ds:0x44e7b0,eax
  405dda:	je     0x405de9
  405ddc:	push   ebx
  405ddd:	call   0x40bf17
  405de2:	pop    ecx
  405de3:	test   eax,eax
  405de5:	jne    0x405d90
  405de7:	jmp    0x405df0
  405de9:	call   0x40769b
  405dee:	mov    DWORD PTR [eax],esi
  405df0:	call   0x40769b
  405df5:	mov    DWORD PTR [eax],esi
  405df7:	mov    eax,edi
  405df9:	pop    edi
  405dfa:	pop    esi
  405dfb:	jmp    0x405e11
  405dfd:	push   ebx
  405dfe:	call   0x40bf17
  405e03:	pop    ecx
  405e04:	call   0x40769b
  405e09:	mov    DWORD PTR [eax],0xc
  405e0f:	xor    eax,eax
  405e11:	pop    ebx
  405e12:	pop    ebp
  405e13:	ret    
  405e14:	mov    DWORD PTR [ecx],0x4435a4
  405e1a:	jmp    0x403fd0
  405e1f:	mov    edi,edi
  405e21:	push   ebp
  405e22:	mov    ebp,esp
  405e24:	push   esi
  405e25:	mov    esi,ecx
  405e27:	mov    DWORD PTR [esi],0x4435a4
  405e2d:	call   0x403fd0
  405e32:	test   BYTE PTR [ebp+0x8],0x1
  405e36:	je     0x405e3f
  405e38:	push   esi
  405e39:	call   0x403ed2
  405e3e:	pop    ecx
  405e3f:	mov    eax,esi
  405e41:	pop    esi
  405e42:	pop    ebp
  405e43:	ret    0x4
  405e46:	mov    edi,edi
  405e48:	push   ebp
  405e49:	mov    ebp,esp
  405e4b:	push   esi
  405e4c:	push   edi
  405e4d:	mov    edi,DWORD PTR [ebp+0x8]
  405e50:	mov    eax,DWORD PTR [edi+0x4]
  405e53:	test   eax,eax
  405e55:	je     0x405e9e
  405e57:	lea    edx,[eax+0x8]
  405e5a:	cmp    BYTE PTR [edx],0x0
  405e5d:	je     0x405e9e
  405e5f:	mov    esi,DWORD PTR [ebp+0xc]
  405e62:	mov    ecx,DWORD PTR [esi+0x4]
  405e65:	cmp    eax,ecx
  405e67:	je     0x405e7d
  405e69:	add    ecx,0x8
  405e6c:	push   ecx
  405e6d:	push   edx
  405e6e:	call   0x40bcb0
  405e73:	pop    ecx
  405e74:	pop    ecx
  405e75:	test   eax,eax
  405e77:	je     0x405e7d
  405e79:	xor    eax,eax
  405e7b:	jmp    0x405ea1
  405e7d:	test   BYTE PTR [esi],0x2
  405e80:	je     0x405e87
  405e82:	test   BYTE PTR [edi],0x8
  405e85:	je     0x405e79
  405e87:	mov    eax,DWORD PTR [ebp+0x10]
  405e8a:	mov    eax,DWORD PTR [eax]
  405e8c:	test   al,0x1
  405e8e:	je     0x405e95
  405e90:	test   BYTE PTR [edi],0x1
  405e93:	je     0x405e79
  405e95:	test   al,0x2
  405e97:	je     0x405e9e
  405e99:	test   BYTE PTR [edi],0x2
  405e9c:	je     0x405e79
  405e9e:	xor    eax,eax
  405ea0:	inc    eax
  405ea1:	pop    edi
  405ea2:	pop    esi
  405ea3:	pop    ebp
  405ea4:	ret    
  405ea5:	mov    edi,edi
  405ea7:	push   ebp
  405ea8:	mov    ebp,esp
  405eaa:	mov    eax,DWORD PTR [ebp+0x8]
  405ead:	mov    eax,DWORD PTR [eax]
  405eaf:	mov    eax,DWORD PTR [eax]
  405eb1:	cmp    eax,0xe0434352
  405eb6:	je     0x405ed7
  405eb8:	cmp    eax,0xe0434f4d
  405ebd:	je     0x405ed7
  405ebf:	cmp    eax,0xe06d7363
  405ec4:	jne    0x405ef0
  405ec6:	call   0x40c90a
  405ecb:	and    DWORD PTR [eax+0x90],0x0
  405ed2:	jmp    0x408a87
  405ed7:	call   0x40c90a
  405edc:	cmp    DWORD PTR [eax+0x90],0x0
  405ee3:	jle    0x405ef0
  405ee5:	call   0x40c90a
  405eea:	dec    DWORD PTR [eax+0x90]
  405ef0:	xor    eax,eax
  405ef2:	pop    ebp
  405ef3:	ret    
  405ef4:	push   0x10
  405ef6:	push   0x449150
  405efb:	call   0x4076f0
  405f00:	mov    edi,DWORD PTR [ebp+0x10]
  405f03:	mov    ebx,DWORD PTR [ebp+0x8]
  405f06:	cmp    DWORD PTR [edi+0x4],0x80
  405f0d:	jg     0x405f15
  405f0f:	movsx  esi,BYTE PTR [ebx+0x8]
  405f13:	jmp    0x405f18
  405f15:	mov    esi,DWORD PTR [ebx+0x8]
  405f18:	mov    DWORD PTR [ebp-0x1c],esi
  405f1b:	call   0x40c90a
  405f20:	inc    DWORD PTR [eax+0x90]
  405f26:	and    DWORD PTR [ebp-0x4],0x0
  405f2a:	cmp    esi,DWORD PTR [ebp+0x14]
  405f2d:	je     0x405f91
  405f2f:	cmp    esi,0xffffffff
  405f32:	jle    0x405f39
  405f34:	cmp    esi,DWORD PTR [edi+0x4]
  405f37:	jl     0x405f3e
  405f39:	call   0x408ad3
  405f3e:	mov    eax,esi
  405f40:	mov    ecx,DWORD PTR [edi+0x8]
  405f43:	mov    esi,DWORD PTR [ecx+eax*8]
  405f46:	mov    DWORD PTR [ebp-0x20],esi
  405f49:	mov    DWORD PTR [ebp-0x4],0x1
  405f50:	cmp    DWORD PTR [ecx+eax*8+0x4],0x0
  405f55:	je     0x405f6c
  405f57:	mov    DWORD PTR [ebx+0x8],esi
  405f5a:	push   0x103
  405f5f:	push   ebx
  405f60:	mov    ecx,DWORD PTR [edi+0x8]
  405f63:	push   DWORD PTR [ecx+eax*8+0x4]
  405f67:	call   0x40cc80
  405f6c:	and    DWORD PTR [ebp-0x4],0x0
  405f70:	jmp    0x405f8c
  405f72:	push   DWORD PTR [ebp-0x14]
  405f75:	call   0x405ea5
  405f7a:	pop    ecx
  405f7b:	ret    
  405f7c:	mov    esp,DWORD PTR [ebp-0x18]
  405f7f:	and    DWORD PTR [ebp-0x4],0x0
  405f83:	mov    edi,DWORD PTR [ebp+0x10]
  405f86:	mov    ebx,DWORD PTR [ebp+0x8]
  405f89:	mov    esi,DWORD PTR [ebp-0x20]
  405f8c:	mov    DWORD PTR [ebp-0x1c],esi
  405f8f:	jmp    0x405f2a
  405f91:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  405f98:	call   0x405fb6
  405f9d:	cmp    esi,DWORD PTR [ebp+0x14]
  405fa0:	je     0x405fa7
  405fa2:	call   0x408ad3
  405fa7:	mov    DWORD PTR [ebx+0x8],esi
  405faa:	call   0x407735
  405faf:	ret    
  405fb0:	mov    ebx,DWORD PTR [ebp+0x8]
  405fb3:	mov    esi,DWORD PTR [ebp-0x1c]
  405fb6:	call   0x40c90a
  405fbb:	cmp    DWORD PTR [eax+0x90],0x0
  405fc2:	jle    0x405fcf
  405fc4:	call   0x40c90a
  405fc9:	dec    DWORD PTR [eax+0x90]
  405fcf:	ret    
  405fd0:	mov    eax,DWORD PTR [eax]
  405fd2:	cmp    DWORD PTR [eax],0xe06d7363
  405fd8:	jne    0x406012
  405fda:	cmp    DWORD PTR [eax+0x10],0x3
  405fde:	jne    0x406012
  405fe0:	mov    ecx,DWORD PTR [eax+0x14]
  405fe3:	cmp    ecx,0x19930520
  405fe9:	je     0x405ffb
  405feb:	cmp    ecx,0x19930521
  405ff1:	je     0x405ffb
  405ff3:	cmp    ecx,0x19930522
  405ff9:	jne    0x406012
  405ffb:	cmp    DWORD PTR [eax+0x1c],0x0
  405fff:	jne    0x406012
  406001:	call   0x40c90a
  406006:	xor    ecx,ecx
  406008:	inc    ecx
  406009:	mov    DWORD PTR [eax+0x20c],ecx
  40600f:	mov    eax,ecx
  406011:	ret    
  406012:	xor    eax,eax
  406014:	ret    
  406015:	push   0x8
  406017:	push   0x449178
  40601c:	call   0x4076f0
  406021:	mov    ecx,DWORD PTR [ebp+0x8]
  406024:	test   ecx,ecx
  406026:	je     0x406052
  406028:	cmp    DWORD PTR [ecx],0xe06d7363
  40602e:	jne    0x406052
  406030:	mov    eax,DWORD PTR [ecx+0x1c]
  406033:	test   eax,eax
  406035:	je     0x406052
  406037:	mov    eax,DWORD PTR [eax+0x4]
  40603a:	test   eax,eax
  40603c:	je     0x406052
  40603e:	and    DWORD PTR [ebp-0x4],0x0
  406042:	push   eax
  406043:	push   DWORD PTR [ecx+0x18]
  406046:	call   0x4058bf
  40604b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  406052:	call   0x407735
  406057:	ret    
  406058:	xor    eax,eax
  40605a:	cmp    BYTE PTR [ebp+0xc],al
  40605d:	setne  al
  406060:	ret    
  406061:	mov    esp,DWORD PTR [ebp-0x18]
  406064:	call   0x408a87
  406069:	int3   
  40606a:	mov    edi,edi
  40606c:	push   ebp
  40606d:	mov    ebp,esp
  40606f:	mov    ecx,DWORD PTR [ebp+0xc]
  406072:	mov    eax,DWORD PTR [ecx]
  406074:	push   esi
  406075:	mov    esi,DWORD PTR [ebp+0x8]
  406078:	add    eax,esi
  40607a:	cmp    DWORD PTR [ecx+0x4],0x0
  40607e:	jl     0x406090
  406080:	mov    edx,DWORD PTR [ecx+0x4]
  406083:	mov    ecx,DWORD PTR [ecx+0x8]
  406086:	mov    esi,DWORD PTR [edx+esi*1]
  406089:	mov    ecx,DWORD PTR [esi+ecx*1]
  40608c:	add    ecx,edx
  40608e:	add    eax,ecx
  406090:	pop    esi
  406091:	pop    ebp
  406092:	ret    
  406093:	mov    edi,edi
  406095:	push   ebp
  406096:	mov    ebp,esp
  406098:	xor    eax,eax
  40609a:	sub    esp,0xc
  40609d:	cmp    edi,eax
  40609f:	jne    0x4060ab
  4060a1:	call   0x408ad3
  4060a6:	call   0x408a87
  4060ab:	mov    BYTE PTR [ebp-0x1],al
  4060ae:	mov    DWORD PTR [ebp-0xc],eax
  4060b1:	cmp    DWORD PTR [edi],eax
  4060b3:	jle    0x406104
  4060b5:	push   ebx
  4060b6:	mov    DWORD PTR [ebp-0x8],eax
  4060b9:	push   esi
  4060ba:	mov    eax,DWORD PTR [ebp+0x8]
  4060bd:	mov    eax,DWORD PTR [eax+0x1c]
  4060c0:	mov    eax,DWORD PTR [eax+0xc]
  4060c3:	mov    ebx,DWORD PTR [eax]
  4060c5:	lea    esi,[eax+0x4]
  4060c8:	jmp    0x4060ea
  4060ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4060cd:	push   DWORD PTR [ecx+0x1c]
  4060d0:	mov    eax,DWORD PTR [esi]
  4060d2:	push   eax
  4060d3:	mov    eax,DWORD PTR [edi+0x4]
  4060d6:	add    eax,DWORD PTR [ebp-0x8]
  4060d9:	push   eax
  4060da:	call   0x405e46
  4060df:	add    esp,0xc
  4060e2:	test   eax,eax
  4060e4:	jne    0x4060f0
  4060e6:	dec    ebx
  4060e7:	add    esi,0x4
  4060ea:	test   ebx,ebx
  4060ec:	jg     0x4060ca
  4060ee:	jmp    0x4060f4
  4060f0:	mov    BYTE PTR [ebp-0x1],0x1
  4060f4:	inc    DWORD PTR [ebp-0xc]
  4060f7:	mov    eax,DWORD PTR [ebp-0xc]
  4060fa:	add    DWORD PTR [ebp-0x8],0x10
  4060fe:	cmp    eax,DWORD PTR [edi]
  406100:	jl     0x4060ba
  406102:	pop    esi
  406103:	pop    ebx
  406104:	mov    al,BYTE PTR [ebp-0x1]
  406107:	leave  
  406108:	ret    
  406109:	push   0x4
  40610b:	mov    eax,0x442543
  406110:	call   0x405ca4
  406115:	call   0x40c90a
  40611a:	cmp    DWORD PTR [eax+0x94],0x0
  406121:	je     0x406128
  406123:	call   0x408ad3
  406128:	and    DWORD PTR [ebp-0x4],0x0
  40612c:	call   0x408ac0
  406131:	or     DWORD PTR [ebp-0x4],0xffffffff
  406135:	call   0x408a87
  40613a:	call   0x40c90a
  40613f:	mov    ecx,DWORD PTR [ebp+0x8]
  406142:	push   0x0
  406144:	push   0x0
  406146:	mov    DWORD PTR [eax+0x94],ecx
  40614c:	call   0x405841
  406151:	int3   
  406152:	push   0x2c
  406154:	push   0x4491f0
  406159:	call   0x4076f0
  40615e:	mov    ebx,ecx
  406160:	mov    edi,DWORD PTR [ebp+0xc]
  406163:	mov    esi,DWORD PTR [ebp+0x8]
  406166:	mov    DWORD PTR [ebp-0x1c],ebx
  406169:	and    DWORD PTR [ebp-0x34],0x0
  40616d:	mov    eax,DWORD PTR [edi-0x4]
  406170:	mov    DWORD PTR [ebp-0x24],eax
  406173:	push   DWORD PTR [esi+0x18]
  406176:	lea    eax,[ebp-0x3c]
  406179:	push   eax
  40617a:	call   0x405b6c
  40617f:	pop    ecx
  406180:	pop    ecx
  406181:	mov    DWORD PTR [ebp-0x28],eax
  406184:	call   0x40c90a
  406189:	mov    eax,DWORD PTR [eax+0x88]
  40618f:	mov    DWORD PTR [ebp-0x2c],eax
  406192:	call   0x40c90a
  406197:	mov    eax,DWORD PTR [eax+0x8c]
  40619d:	mov    DWORD PTR [ebp-0x30],eax
  4061a0:	call   0x40c90a
  4061a5:	mov    DWORD PTR [eax+0x88],esi
  4061ab:	call   0x40c90a
  4061b0:	mov    ecx,DWORD PTR [ebp+0x10]
  4061b3:	mov    DWORD PTR [eax+0x8c],ecx
  4061b9:	and    DWORD PTR [ebp-0x4],0x0
  4061bd:	xor    eax,eax
  4061bf:	inc    eax
  4061c0:	mov    DWORD PTR [ebp+0x10],eax
  4061c3:	mov    DWORD PTR [ebp-0x4],eax
  4061c6:	push   DWORD PTR [ebp+0x1c]
  4061c9:	push   DWORD PTR [ebp+0x18]
  4061cc:	push   ebx
  4061cd:	push   DWORD PTR [ebp+0x14]
  4061d0:	push   edi
  4061d1:	call   0x405c11
  4061d6:	add    esp,0x14
  4061d9:	mov    DWORD PTR [ebp-0x1c],eax
  4061dc:	and    DWORD PTR [ebp-0x4],0x0
  4061e0:	jmp    0x406251
  4061e2:	mov    eax,DWORD PTR [ebp-0x14]
  4061e5:	call   0x405fd0
  4061ea:	ret    
  4061eb:	mov    esp,DWORD PTR [ebp-0x18]
  4061ee:	call   0x40c90a
  4061f3:	and    DWORD PTR [eax+0x20c],0x0
  4061fa:	mov    esi,DWORD PTR [ebp+0x14]
  4061fd:	mov    edi,DWORD PTR [ebp+0xc]
  406200:	cmp    DWORD PTR [esi+0x4],0x80
  406207:	jg     0x40620f
  406209:	movsx  ecx,BYTE PTR [edi+0x8]
  40620d:	jmp    0x406212
  40620f:	mov    ecx,DWORD PTR [edi+0x8]
  406212:	mov    ebx,DWORD PTR [esi+0x10]
  406215:	and    DWORD PTR [ebp-0x20],0x0
  406219:	mov    eax,DWORD PTR [ebp-0x20]
  40621c:	cmp    eax,DWORD PTR [esi+0xc]
  40621f:	jae    0x406239
  406221:	imul   eax,eax,0x14
  406224:	mov    edx,DWORD PTR [eax+ebx*1+0x4]
  406228:	cmp    ecx,edx
  40622a:	jle    0x40626d
  40622c:	cmp    ecx,DWORD PTR [eax+ebx*1+0x8]
  406230:	jg     0x40626d
  406232:	mov    eax,DWORD PTR [esi+0x8]
  406235:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
  406239:	push   ecx
  40623a:	push   esi
  40623b:	push   0x0
  40623d:	push   edi
  40623e:	call   0x405ef4
  406243:	add    esp,0x10
  406246:	and    DWORD PTR [ebp-0x1c],0x0
  40624a:	and    DWORD PTR [ebp-0x4],0x0
  40624e:	mov    esi,DWORD PTR [ebp+0x8]
  406251:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  406258:	mov    DWORD PTR [ebp+0x10],0x0
  40625f:	call   0x406278
  406264:	mov    eax,DWORD PTR [ebp-0x1c]
  406267:	call   0x407735
  40626c:	ret    
  40626d:	inc    DWORD PTR [ebp-0x20]
  406270:	jmp    0x406219
  406272:	mov    edi,DWORD PTR [ebp+0xc]
  406275:	mov    esi,DWORD PTR [ebp+0x8]
  406278:	mov    eax,DWORD PTR [ebp-0x24]
  40627b:	mov    DWORD PTR [edi-0x4],eax
  40627e:	push   DWORD PTR [ebp-0x28]
  406281:	call   0x405bbf
  406286:	pop    ecx
  406287:	call   0x40c90a
  40628c:	mov    ecx,DWORD PTR [ebp-0x2c]
  40628f:	mov    DWORD PTR [eax+0x88],ecx
  406295:	call   0x40c90a
  40629a:	mov    ecx,DWORD PTR [ebp-0x30]
  40629d:	mov    DWORD PTR [eax+0x8c],ecx
  4062a3:	cmp    DWORD PTR [esi],0xe06d7363
  4062a9:	jne    0x4062ed
  4062ab:	cmp    DWORD PTR [esi+0x10],0x3
  4062af:	jne    0x4062ed
  4062b1:	mov    eax,DWORD PTR [esi+0x14]
  4062b4:	cmp    eax,0x19930520
  4062b9:	je     0x4062c9
  4062bb:	cmp    eax,0x19930521
  4062c0:	je     0x4062c9
  4062c2:	cmp    eax,0x19930522
  4062c7:	jne    0x4062ed
  4062c9:	cmp    DWORD PTR [ebp-0x34],0x0
  4062cd:	jne    0x4062ed
  4062cf:	cmp    DWORD PTR [ebp-0x1c],0x0
  4062d3:	je     0x4062ed
  4062d5:	push   DWORD PTR [esi+0x18]
  4062d8:	call   0x405b98
  4062dd:	pop    ecx
  4062de:	test   eax,eax
  4062e0:	je     0x4062ed
  4062e2:	push   DWORD PTR [ebp+0x10]
  4062e5:	push   esi
  4062e6:	call   0x406015
  4062eb:	pop    ecx
  4062ec:	pop    ecx
  4062ed:	ret    
  4062ee:	push   0xc
  4062f0:	push   0x449218
  4062f5:	call   0x4076f0
  4062fa:	xor    edx,edx
  4062fc:	mov    DWORD PTR [ebp-0x1c],edx
  4062ff:	mov    eax,DWORD PTR [ebp+0x10]
  406302:	mov    ecx,DWORD PTR [eax+0x4]
  406305:	cmp    ecx,edx
  406307:	je     0x406465
  40630d:	cmp    BYTE PTR [ecx+0x8],dl
  406310:	je     0x406465
  406316:	mov    ecx,DWORD PTR [eax+0x8]
  406319:	cmp    ecx,edx
  40631b:	jne    0x406329
  40631d:	test   DWORD PTR [eax],0x80000000
  406323:	je     0x406465
  406329:	mov    eax,DWORD PTR [eax]
  40632b:	mov    esi,DWORD PTR [ebp+0xc]
  40632e:	test   eax,eax
  406330:	js     0x406336
  406332:	lea    esi,[ecx+esi*1+0xc]
  406336:	mov    DWORD PTR [ebp-0x4],edx
  406339:	xor    ebx,ebx
  40633b:	inc    ebx
  40633c:	push   ebx
  40633d:	test   al,0x8
  40633f:	je     0x406382
  406341:	mov    edi,DWORD PTR [ebp+0x8]
  406344:	push   DWORD PTR [edi+0x18]
  406347:	call   0x40de40
  40634c:	pop    ecx
  40634d:	pop    ecx
  40634e:	test   eax,eax
  406350:	je     0x406448
  406356:	push   ebx
  406357:	push   esi
  406358:	call   0x40de40
  40635d:	pop    ecx
  40635e:	pop    ecx
  40635f:	test   eax,eax
  406361:	je     0x406448
  406367:	mov    eax,DWORD PTR [edi+0x18]
  40636a:	mov    DWORD PTR [esi],eax
  40636c:	mov    ecx,DWORD PTR [ebp+0x14]
  40636f:	add    ecx,0x8
  406372:	push   ecx
  406373:	push   eax
  406374:	call   0x40606a
  406379:	pop    ecx
  40637a:	pop    ecx
  40637b:	mov    DWORD PTR [esi],eax
  40637d:	jmp    0x40644d
  406382:	mov    edi,DWORD PTR [ebp+0x14]
  406385:	mov    eax,DWORD PTR [ebp+0x8]
  406388:	push   DWORD PTR [eax+0x18]
  40638b:	test   BYTE PTR [edi],bl
  40638d:	je     0x4063d7
  40638f:	call   0x40de40
  406394:	pop    ecx
  406395:	pop    ecx
  406396:	test   eax,eax
  406398:	je     0x406448
  40639e:	push   ebx
  40639f:	push   esi
  4063a0:	call   0x40de40
  4063a5:	pop    ecx
  4063a6:	pop    ecx
  4063a7:	test   eax,eax
  4063a9:	je     0x406448
  4063af:	push   DWORD PTR [edi+0x14]
  4063b2:	mov    eax,DWORD PTR [ebp+0x8]
  4063b5:	push   DWORD PTR [eax+0x18]
  4063b8:	push   esi
  4063b9:	call   0x404030
  4063be:	add    esp,0xc
  4063c1:	cmp    DWORD PTR [edi+0x14],0x4
  4063c5:	jne    0x40644d
  4063cb:	mov    eax,DWORD PTR [esi]
  4063cd:	test   eax,eax
  4063cf:	je     0x40644d
  4063d1:	add    edi,0x8
  4063d4:	push   edi
  4063d5:	jmp    0x406373
  4063d7:	cmp    DWORD PTR [edi+0x18],edx
  4063da:	jne    0x406414
  4063dc:	call   0x40de40
  4063e1:	pop    ecx
  4063e2:	pop    ecx
  4063e3:	test   eax,eax
  4063e5:	je     0x406448
  4063e7:	push   ebx
  4063e8:	push   esi
  4063e9:	call   0x40de40
  4063ee:	pop    ecx
  4063ef:	pop    ecx
  4063f0:	test   eax,eax
  4063f2:	je     0x406448
  4063f4:	push   DWORD PTR [edi+0x14]
  4063f7:	add    edi,0x8
  4063fa:	push   edi
  4063fb:	mov    eax,DWORD PTR [ebp+0x8]
  4063fe:	push   DWORD PTR [eax+0x18]
  406401:	call   0x40606a
  406406:	pop    ecx
  406407:	pop    ecx
  406408:	push   eax
  406409:	push   esi
  40640a:	call   0x404030
  40640f:	add    esp,0xc
  406412:	jmp    0x40644d
  406414:	call   0x40de40
  406419:	pop    ecx
  40641a:	pop    ecx
  40641b:	test   eax,eax
  40641d:	je     0x406448
  40641f:	push   ebx
  406420:	push   esi
  406421:	call   0x40de40
  406426:	pop    ecx
  406427:	pop    ecx
  406428:	test   eax,eax
  40642a:	je     0x406448
  40642c:	push   DWORD PTR [edi+0x18]
  40642f:	call   0x40de40
  406434:	pop    ecx
  406435:	test   eax,eax
  406437:	je     0x406448
  406439:	test   BYTE PTR [edi],0x4
  40643c:	push   0x0
  40643e:	pop    eax
  40643f:	setne  al
  406442:	inc    eax
  406443:	mov    DWORD PTR [ebp-0x1c],eax
  406446:	jmp    0x40644d
  406448:	call   0x408ad3
  40644d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  406454:	mov    eax,DWORD PTR [ebp-0x1c]
  406457:	jmp    0x406467
  406459:	xor    eax,eax
  40645b:	inc    eax
  40645c:	ret    
  40645d:	mov    esp,DWORD PTR [ebp-0x18]
  406460:	call   0x408a87
  406465:	xor    eax,eax
  406467:	call   0x407735
  40646c:	ret    
  40646d:	push   0x8
  40646f:	push   0x449238
  406474:	call   0x4076f0
  406479:	mov    eax,DWORD PTR [ebp+0x10]
  40647c:	test   DWORD PTR [eax],0x80000000
  406482:	je     0x406489
  406484:	mov    ebx,DWORD PTR [ebp+0xc]
  406487:	jmp    0x406493
  406489:	mov    ecx,DWORD PTR [eax+0x8]
  40648c:	mov    edx,DWORD PTR [ebp+0xc]
  40648f:	lea    ebx,[ecx+edx*1+0xc]
  406493:	and    DWORD PTR [ebp-0x4],0x0
  406497:	mov    esi,DWORD PTR [ebp+0x14]
  40649a:	push   esi
  40649b:	push   eax
  40649c:	push   DWORD PTR [ebp+0xc]
  40649f:	mov    edi,DWORD PTR [ebp+0x8]
  4064a2:	push   edi
  4064a3:	call   0x4062ee
  4064a8:	add    esp,0x10
  4064ab:	dec    eax
  4064ac:	je     0x4064cd
  4064ae:	dec    eax
  4064af:	jne    0x4064e5
  4064b1:	push   0x1
  4064b3:	lea    eax,[esi+0x8]
  4064b6:	push   eax
  4064b7:	push   DWORD PTR [edi+0x18]
  4064ba:	call   0x40606a
  4064bf:	pop    ecx
  4064c0:	pop    ecx
  4064c1:	push   eax
  4064c2:	push   DWORD PTR [esi+0x18]
  4064c5:	push   ebx
  4064c6:	call   0x4058bf
  4064cb:	jmp    0x4064e5
  4064cd:	lea    eax,[esi+0x8]
  4064d0:	push   eax
  4064d1:	push   DWORD PTR [edi+0x18]
  4064d4:	call   0x40606a
  4064d9:	pop    ecx
  4064da:	pop    ecx
  4064db:	push   eax
  4064dc:	push   DWORD PTR [esi+0x18]
  4064df:	push   ebx
  4064e0:	call   0x4058bf
  4064e5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4064ec:	call   0x407735
  4064f1:	ret    
  4064f2:	xor    eax,eax
  4064f4:	inc    eax
  4064f5:	ret    
  4064f6:	mov    esp,DWORD PTR [ebp-0x18]
  4064f9:	call   0x408a87
  4064fe:	int3   
  4064ff:	mov    edi,edi
  406501:	push   ebp
  406502:	mov    ebp,esp
  406504:	cmp    DWORD PTR [ebp+0x18],0x0
  406508:	je     0x40651a
  40650a:	push   DWORD PTR [ebp+0x18]
  40650d:	push   ebx
  40650e:	push   esi
  40650f:	push   DWORD PTR [ebp+0x8]
  406512:	call   0x40646d
  406517:	add    esp,0x10
  40651a:	cmp    DWORD PTR [ebp+0x20],0x0
  40651e:	push   DWORD PTR [ebp+0x8]
  406521:	jne    0x406526
  406523:	push   esi
  406524:	jmp    0x406529
  406526:	push   DWORD PTR [ebp+0x20]
  406529:	call   0x4058c6
  40652e:	push   DWORD PTR [edi]
  406530:	push   DWORD PTR [ebp+0x14]
  406533:	push   DWORD PTR [ebp+0x10]
  406536:	push   esi
  406537:	call   0x405ef4
  40653c:	mov    eax,DWORD PTR [edi+0x4]
  40653f:	push   0x100
  406544:	push   DWORD PTR [ebp+0x1c]
  406547:	inc    eax
  406548:	push   DWORD PTR [ebp+0x14]
  40654b:	mov    DWORD PTR [esi+0x8],eax
  40654e:	push   DWORD PTR [ebp+0xc]
  406551:	mov    ecx,DWORD PTR [ebx+0xc]
  406554:	push   esi
  406555:	push   DWORD PTR [ebp+0x8]
  406558:	call   0x406152
  40655d:	add    esp,0x28
  406560:	test   eax,eax
  406562:	je     0x40656b
  406564:	push   esi
  406565:	push   eax
  406566:	call   0x40588d
  40656b:	pop    ebp
  40656c:	ret    
  40656d:	mov    edi,edi
  40656f:	push   ebp
  406570:	mov    ebp,esp
  406572:	sub    esp,0xc
  406575:	push   esi
  406576:	mov    esi,DWORD PTR [ebp+0x8]
  406579:	cmp    DWORD PTR [esi],0x80000003
  40657f:	je     0x406671
  406585:	push   edi
  406586:	call   0x40c90a
  40658b:	cmp    DWORD PTR [eax+0x80],0x0
  406592:	je     0x4065db
  406594:	call   0x40c90a
  406599:	lea    edi,[eax+0x80]
  40659f:	call   0x40c75a
  4065a4:	cmp    DWORD PTR [edi],eax
  4065a6:	je     0x4065db
  4065a8:	mov    eax,DWORD PTR [esi]
  4065aa:	cmp    eax,0xe0434f4d
  4065af:	je     0x4065db
  4065b1:	cmp    eax,0xe0434352
  4065b6:	je     0x4065db
  4065b8:	push   DWORD PTR [ebp+0x24]
  4065bb:	push   DWORD PTR [ebp+0x20]
  4065be:	push   DWORD PTR [ebp+0x18]
  4065c1:	push   DWORD PTR [ebp+0x14]
  4065c4:	push   DWORD PTR [ebp+0x10]
  4065c7:	push   DWORD PTR [ebp+0xc]
  4065ca:	push   esi
  4065cb:	call   0x405983
  4065d0:	add    esp,0x1c
  4065d3:	test   eax,eax
  4065d5:	jne    0x406670
  4065db:	mov    edi,DWORD PTR [ebp+0x18]
  4065de:	cmp    DWORD PTR [edi+0xc],0x0
  4065e2:	jne    0x4065e9
  4065e4:	call   0x408ad3
  4065e9:	mov    esi,DWORD PTR [ebp+0x1c]
  4065ec:	lea    eax,[ebp-0xc]
  4065ef:	push   eax
  4065f0:	lea    eax,[ebp-0x4]
  4065f3:	push   eax
  4065f4:	push   esi
  4065f5:	push   DWORD PTR [ebp+0x20]
  4065f8:	push   edi
  4065f9:	call   0x405af9
  4065fe:	mov    ecx,DWORD PTR [ebp-0x4]
  406601:	add    esp,0x14
  406604:	cmp    ecx,DWORD PTR [ebp-0xc]
  406607:	jae    0x406670
  406609:	add    eax,0xc
  40660c:	mov    DWORD PTR [ebp-0x8],eax
  40660f:	push   ebx
  406610:	lea    edi,[eax-0xc]
  406613:	cmp    esi,DWORD PTR [edi]
  406615:	jl     0x40665e
  406617:	cmp    esi,DWORD PTR [eax-0x8]
  40661a:	jg     0x40665e
  40661c:	mov    ecx,DWORD PTR [eax]
  40661e:	shl    ecx,0x4
  406621:	add    ecx,DWORD PTR [eax+0x4]
  406624:	mov    edx,DWORD PTR [ecx-0xc]
  406627:	test   edx,edx
  406629:	je     0x406631
  40662b:	cmp    BYTE PTR [edx+0x8],0x0
  40662f:	jne    0x40665e
  406631:	lea    ebx,[ecx-0x10]
  406634:	test   BYTE PTR [ebx],0x40
  406637:	jne    0x40665e
  406639:	push   DWORD PTR [ebp+0x24]
  40663c:	mov    esi,DWORD PTR [ebp+0xc]
  40663f:	push   DWORD PTR [ebp+0x20]
  406642:	push   0x0
  406644:	push   DWORD PTR [ebp+0x18]
  406647:	push   DWORD PTR [ebp+0x14]
  40664a:	push   DWORD PTR [ebp+0x10]
  40664d:	push   DWORD PTR [ebp+0x8]
  406650:	call   0x4064ff
  406655:	mov    esi,DWORD PTR [ebp+0x1c]
  406658:	mov    eax,DWORD PTR [ebp-0x8]
  40665b:	add    esp,0x1c
  40665e:	inc    DWORD PTR [ebp-0x4]
  406661:	mov    ecx,DWORD PTR [ebp-0x4]
  406664:	add    eax,0x14
  406667:	mov    DWORD PTR [ebp-0x8],eax
  40666a:	cmp    ecx,DWORD PTR [ebp-0xc]
  40666d:	jb     0x406610
  40666f:	pop    ebx
  406670:	pop    edi
  406671:	pop    esi
  406672:	leave  
  406673:	ret    
  406674:	mov    edi,edi
  406676:	push   ebp
  406677:	mov    ebp,esp
  406679:	sub    esp,0x34
  40667c:	mov    ecx,DWORD PTR [ebp+0xc]
  40667f:	push   ebx
  406680:	mov    ebx,DWORD PTR [ebp+0x18]
  406683:	mov    eax,DWORD PTR [ebx+0x4]
  406686:	push   esi
  406687:	push   edi
  406688:	mov    BYTE PTR [ebp-0x1],0x0
  40668c:	cmp    eax,0x80
  406691:	jg     0x406699
  406693:	movsx  ecx,BYTE PTR [ecx+0x8]
  406697:	jmp    0x40669c
  406699:	mov    ecx,DWORD PTR [ecx+0x8]
  40669c:	mov    DWORD PTR [ebp-0x8],ecx
  40669f:	cmp    ecx,0xffffffff
  4066a2:	jl     0x4066a8
  4066a4:	cmp    ecx,eax
  4066a6:	jl     0x4066ad
  4066a8:	call   0x408ad3
  4066ad:	mov    esi,DWORD PTR [ebp+0x8]
  4066b0:	mov    edi,0xe06d7363
  4066b5:	cmp    DWORD PTR [esi],edi
  4066b7:	jne    0x4069a5
  4066bd:	cmp    DWORD PTR [esi+0x10],0x3
  4066c1:	mov    ebx,0x19930520
  4066c6:	jne    0x4067f5
  4066cc:	mov    eax,DWORD PTR [esi+0x14]
  4066cf:	cmp    eax,ebx
  4066d1:	je     0x4066e5
  4066d3:	cmp    eax,0x19930521
  4066d8:	je     0x4066e5
  4066da:	cmp    eax,0x19930522
  4066df:	jne    0x4067f5
  4066e5:	cmp    DWORD PTR [esi+0x1c],0x0
  4066e9:	jne    0x4067f5
  4066ef:	call   0x40c90a
  4066f4:	cmp    DWORD PTR [eax+0x88],0x0
  4066fb:	je     0x4069e4
  406701:	call   0x40c90a
  406706:	mov    esi,DWORD PTR [eax+0x88]
  40670c:	mov    DWORD PTR [ebp+0x8],esi
  40670f:	call   0x40c90a
  406714:	mov    eax,DWORD PTR [eax+0x8c]
  40671a:	push   0x1
  40671c:	push   esi
  40671d:	mov    DWORD PTR [ebp+0x10],eax
  406720:	call   0x40de40
  406725:	pop    ecx
  406726:	pop    ecx
  406727:	test   eax,eax
  406729:	jne    0x406730
  40672b:	call   0x408ad3
  406730:	cmp    DWORD PTR [esi],edi
  406732:	jne    0x40675a
  406734:	cmp    DWORD PTR [esi+0x10],0x3
  406738:	jne    0x40675a
  40673a:	mov    eax,DWORD PTR [esi+0x14]
  40673d:	cmp    eax,ebx
  40673f:	je     0x40674f
  406741:	cmp    eax,0x19930521
  406746:	je     0x40674f
  406748:	cmp    eax,0x19930522
  40674d:	jne    0x40675a
  40674f:	cmp    DWORD PTR [esi+0x1c],0x0
  406753:	jne    0x40675a
  406755:	call   0x408ad3
  40675a:	call   0x40c90a
  40675f:	cmp    DWORD PTR [eax+0x94],0x0
  406766:	je     0x4067f5
  40676c:	call   0x40c90a
  406771:	mov    edi,DWORD PTR [eax+0x94]
  406777:	call   0x40c90a
  40677c:	push   DWORD PTR [ebp+0x8]
  40677f:	xor    esi,esi
  406781:	mov    DWORD PTR [eax+0x94],esi
  406787:	call   0x406093
  40678c:	pop    ecx
  40678d:	test   al,al
  40678f:	jne    0x4067ed
  406791:	xor    ebx,ebx
  406793:	cmp    DWORD PTR [edi],ebx
  406795:	jle    0x4067b4
  406797:	mov    eax,DWORD PTR [edi+0x4]
  40679a:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
  40679e:	push   0x44b444
  4067a3:	call   0x4050aa
  4067a8:	test   al,al
  4067aa:	jne    0x4067b9
  4067ac:	inc    esi
  4067ad:	add    ebx,0x10
  4067b0:	cmp    esi,DWORD PTR [edi]
  4067b2:	jl     0x406797
  4067b4:	call   0x408a87
  4067b9:	push   0x1
  4067bb:	push   DWORD PTR [ebp+0x8]
  4067be:	call   0x406015
  4067c3:	pop    ecx
  4067c4:	pop    ecx
  4067c5:	lea    eax,[ebp+0x8]
  4067c8:	push   eax
  4067c9:	lea    ecx,[ebp-0x34]
  4067cc:	mov    DWORD PTR [ebp+0x8],0x4435ac
  4067d3:	call   0x403f74
  4067d8:	push   0x449254
  4067dd:	lea    eax,[ebp-0x34]
  4067e0:	push   eax
  4067e1:	mov    DWORD PTR [ebp-0x34],0x4435a4
  4067e8:	call   0x405841
  4067ed:	mov    esi,DWORD PTR [ebp+0x8]
  4067f0:	mov    edi,0xe06d7363
  4067f5:	cmp    DWORD PTR [esi],edi
  4067f7:	jne    0x4069a2
  4067fd:	cmp    DWORD PTR [esi+0x10],0x3
  406801:	jne    0x4069a2
  406807:	mov    eax,DWORD PTR [esi+0x14]
  40680a:	cmp    eax,ebx
  40680c:	je     0x406820
  40680e:	cmp    eax,0x19930521
  406813:	je     0x406820
  406815:	cmp    eax,0x19930522
  40681a:	jne    0x4069a2
  406820:	mov    edi,DWORD PTR [ebp+0x18]
  406823:	cmp    DWORD PTR [edi+0xc],0x0
  406827:	jbe    0x406909
  40682d:	lea    eax,[ebp-0x20]
  406830:	push   eax
  406831:	lea    eax,[ebp-0x10]
  406834:	push   eax
  406835:	push   DWORD PTR [ebp-0x8]
  406838:	push   DWORD PTR [ebp+0x20]
  40683b:	push   edi
  40683c:	call   0x405af9
  406841:	mov    ecx,DWORD PTR [ebp-0x10]
  406844:	add    esp,0x14
  406847:	cmp    ecx,DWORD PTR [ebp-0x20]
  40684a:	jae    0x406909
  406850:	lea    edi,[eax+0x10]
  406853:	mov    DWORD PTR [ebp-0x1c],edi
  406856:	mov    ecx,DWORD PTR [ebp-0x8]
  406859:	lea    eax,[edi-0x10]
  40685c:	mov    DWORD PTR [ebp-0x28],eax
  40685f:	cmp    DWORD PTR [eax],ecx
  406861:	jg     0x4068f1
  406867:	cmp    ecx,DWORD PTR [edi-0xc]
  40686a:	jg     0x4068f1
  406870:	mov    eax,DWORD PTR [edi]
  406872:	mov    DWORD PTR [ebp-0xc],eax
  406875:	mov    eax,DWORD PTR [edi-0x4]
  406878:	mov    DWORD PTR [ebp-0x18],eax
  40687b:	test   eax,eax
  40687d:	jle    0x4068f1
  40687f:	mov    eax,DWORD PTR [esi+0x1c]
  406882:	mov    eax,DWORD PTR [eax+0xc]
  406885:	lea    ebx,[eax+0x4]
  406888:	mov    eax,DWORD PTR [eax]
  40688a:	mov    DWORD PTR [ebp-0x14],eax
  40688d:	test   eax,eax
  40688f:	jle    0x4068b4
  406891:	push   DWORD PTR [esi+0x1c]
  406894:	mov    eax,DWORD PTR [ebx]
  406896:	push   eax
  406897:	push   DWORD PTR [ebp-0xc]
  40689a:	mov    DWORD PTR [ebp-0x24],eax
  40689d:	call   0x405e46
  4068a2:	add    esp,0xc
  4068a5:	test   eax,eax
  4068a7:	jne    0x4068c3
  4068a9:	dec    DWORD PTR [ebp-0x14]
  4068ac:	add    ebx,0x4
  4068af:	cmp    DWORD PTR [ebp-0x14],eax
  4068b2:	jg     0x406891
  4068b4:	dec    DWORD PTR [ebp-0x18]
  4068b7:	add    DWORD PTR [ebp-0xc],0x10
  4068bb:	cmp    DWORD PTR [ebp-0x18],0x0
  4068bf:	jg     0x40687f
  4068c1:	jmp    0x4068f1
  4068c3:	push   DWORD PTR [ebp+0x24]
  4068c6:	mov    edi,DWORD PTR [ebp-0x28]
  4068c9:	push   DWORD PTR [ebp+0x20]
  4068cc:	mov    ebx,DWORD PTR [ebp-0xc]
  4068cf:	push   DWORD PTR [ebp-0x24]
  4068d2:	mov    BYTE PTR [ebp-0x1],0x1
  4068d6:	push   DWORD PTR [ebp+0x18]
  4068d9:	push   DWORD PTR [ebp+0x14]
  4068dc:	push   DWORD PTR [ebp+0x10]
  4068df:	push   esi
  4068e0:	mov    esi,DWORD PTR [ebp+0xc]
  4068e3:	call   0x4064ff
  4068e8:	mov    esi,DWORD PTR [ebp+0x8]
  4068eb:	mov    edi,DWORD PTR [ebp-0x1c]
  4068ee:	add    esp,0x1c
  4068f1:	inc    DWORD PTR [ebp-0x10]
  4068f4:	mov    eax,DWORD PTR [ebp-0x10]
  4068f7:	add    edi,0x14
  4068fa:	mov    DWORD PTR [ebp-0x1c],edi
  4068fd:	cmp    eax,DWORD PTR [ebp-0x20]
  406900:	jb     0x406856
  406906:	mov    edi,DWORD PTR [ebp+0x18]
  406909:	cmp    BYTE PTR [ebp+0x1c],0x0
  40690d:	je     0x406919
  40690f:	push   0x1
  406911:	push   esi
  406912:	call   0x406015
  406917:	pop    ecx
  406918:	pop    ecx
  406919:	cmp    BYTE PTR [ebp-0x1],0x0
  40691d:	jne    0x4069d1
  406923:	mov    eax,DWORD PTR [edi]
  406925:	and    eax,0x1fffffff
  40692a:	cmp    eax,0x19930521
  40692f:	jb     0x4069d1
  406935:	mov    edi,DWORD PTR [edi+0x1c]
  406938:	test   edi,edi
  40693a:	je     0x4069d1
  406940:	push   esi
  406941:	call   0x406093
  406946:	pop    ecx
  406947:	test   al,al
  406949:	jne    0x4069d1
  40694f:	call   0x40c90a
  406954:	call   0x40c90a
  406959:	call   0x40c90a
  40695e:	mov    DWORD PTR [eax+0x88],esi
  406964:	call   0x40c90a
  406969:	cmp    DWORD PTR [ebp+0x24],0x0
  40696d:	mov    ecx,DWORD PTR [ebp+0x10]
  406970:	mov    DWORD PTR [eax+0x8c],ecx
  406976:	push   esi
  406977:	jne    0x40697e
  406979:	push   DWORD PTR [ebp+0xc]
  40697c:	jmp    0x406981
  40697e:	push   DWORD PTR [ebp+0x24]
  406981:	call   0x4058c6
  406986:	mov    esi,DWORD PTR [ebp+0x18]
  406989:	push   0xffffffff
  40698b:	push   esi
  40698c:	push   DWORD PTR [ebp+0x14]
  40698f:	push   DWORD PTR [ebp+0xc]
  406992:	call   0x405ef4
  406997:	add    esp,0x10
  40699a:	push   DWORD PTR [esi+0x1c]
  40699d:	call   0x406109
  4069a2:	mov    ebx,DWORD PTR [ebp+0x18]
  4069a5:	cmp    DWORD PTR [ebx+0xc],0x0
  4069a9:	jbe    0x4069d1
  4069ab:	cmp    BYTE PTR [ebp+0x1c],0x0
  4069af:	jne    0x4067b4
  4069b5:	push   DWORD PTR [ebp+0x24]
  4069b8:	push   DWORD PTR [ebp+0x20]
  4069bb:	push   DWORD PTR [ebp-0x8]
  4069be:	push   ebx
  4069bf:	push   DWORD PTR [ebp+0x14]
  4069c2:	push   DWORD PTR [ebp+0x10]
  4069c5:	push   DWORD PTR [ebp+0xc]
  4069c8:	push   esi
  4069c9:	call   0x40656d
  4069ce:	add    esp,0x20
  4069d1:	call   0x40c90a
  4069d6:	cmp    DWORD PTR [eax+0x94],0x0
  4069dd:	je     0x4069e4
  4069df:	call   0x408ad3
  4069e4:	pop    edi
  4069e5:	pop    esi
  4069e6:	pop    ebx
  4069e7:	leave  
  4069e8:	ret    
  4069e9:	mov    edi,edi
  4069eb:	push   ebp
  4069ec:	mov    ebp,esp
  4069ee:	push   esi
  4069ef:	push   DWORD PTR [ebp+0x8]
  4069f2:	mov    esi,ecx
  4069f4:	call   0x404002
  4069f9:	mov    DWORD PTR [esi],0x4435a4
  4069ff:	mov    eax,esi
  406a01:	pop    esi
  406a02:	pop    ebp
  406a03:	ret    0x4
  406a06:	mov    edi,edi
  406a08:	push   ebp
  406a09:	mov    ebp,esp
  406a0b:	push   ebx
  406a0c:	push   esi
  406a0d:	push   edi
  406a0e:	call   0x40c90a
  406a13:	cmp    DWORD PTR [eax+0x20c],0x0
  406a1a:	mov    eax,DWORD PTR [ebp+0x18]
  406a1d:	mov    ecx,DWORD PTR [ebp+0x8]
  406a20:	mov    edi,0xe06d7363
  406a25:	mov    esi,0x1fffffff
  406a2a:	mov    ebx,0x19930522
  406a2f:	jne    0x406a51
  406a31:	mov    edx,DWORD PTR [ecx]
  406a33:	cmp    edx,edi
  406a35:	je     0x406a51
  406a37:	cmp    edx,0x80000026
  406a3d:	je     0x406a51
  406a3f:	mov    edx,DWORD PTR [eax]
  406a41:	and    edx,esi
  406a43:	cmp    edx,ebx
  406a45:	jb     0x406a51
  406a47:	test   BYTE PTR [eax+0x20],0x1
  406a4b:	jne    0x406ae4
  406a51:	test   BYTE PTR [ecx+0x4],0x66
  406a55:	je     0x406a7a
  406a57:	cmp    DWORD PTR [eax+0x4],0x0
  406a5b:	je     0x406ae4
  406a61:	cmp    DWORD PTR [ebp+0x1c],0x0
  406a65:	jne    0x406ae4
  406a67:	push   0xffffffff
  406a69:	push   eax
  406a6a:	push   DWORD PTR [ebp+0x14]
  406a6d:	push   DWORD PTR [ebp+0xc]
  406a70:	call   0x405ef4
  406a75:	add    esp,0x10
  406a78:	jmp    0x406ae4
  406a7a:	cmp    DWORD PTR [eax+0xc],0x0
  406a7e:	jne    0x406a92
  406a80:	mov    edx,DWORD PTR [eax]
  406a82:	and    edx,esi
  406a84:	cmp    edx,0x19930521
  406a8a:	jb     0x406ae4
  406a8c:	cmp    DWORD PTR [eax+0x1c],0x0
  406a90:	je     0x406ae4
  406a92:	cmp    DWORD PTR [ecx],edi
  406a94:	jne    0x406ac8
  406a96:	cmp    DWORD PTR [ecx+0x10],0x3
  406a9a:	jb     0x406ac8
  406a9c:	cmp    DWORD PTR [ecx+0x14],ebx
  406a9f:	jbe    0x406ac8
  406aa1:	mov    edx,DWORD PTR [ecx+0x1c]
  406aa4:	mov    edx,DWORD PTR [edx+0x8]
  406aa7:	test   edx,edx
  406aa9:	je     0x406ac8
  406aab:	movzx  esi,BYTE PTR [ebp+0x24]
  406aaf:	push   esi
  406ab0:	push   DWORD PTR [ebp+0x20]
  406ab3:	push   DWORD PTR [ebp+0x1c]
  406ab6:	push   eax
  406ab7:	push   DWORD PTR [ebp+0x14]
  406aba:	push   DWORD PTR [ebp+0x10]
  406abd:	push   DWORD PTR [ebp+0xc]
  406ac0:	push   ecx
  406ac1:	call   edx
  406ac3:	add    esp,0x20
  406ac6:	jmp    0x406ae7
  406ac8:	push   DWORD PTR [ebp+0x20]
  406acb:	push   DWORD PTR [ebp+0x1c]
  406ace:	push   DWORD PTR [ebp+0x24]
  406ad1:	push   eax
  406ad2:	push   DWORD PTR [ebp+0x14]
  406ad5:	push   DWORD PTR [ebp+0x10]
  406ad8:	push   DWORD PTR [ebp+0xc]
  406adb:	push   ecx
  406adc:	call   0x406674
  406ae1:	add    esp,0x20
  406ae4:	xor    eax,eax
  406ae6:	inc    eax
  406ae7:	pop    edi
  406ae8:	pop    esi
  406ae9:	pop    ebx
  406aea:	pop    ebp
  406aeb:	ret    
  406aec:	mov    edi,edi
  406aee:	push   ebp
  406aef:	mov    ebp,esp
  406af1:	mov    eax,DWORD PTR [ebp+0x8]
  406af4:	test   eax,eax
  406af6:	je     0x406b0a
  406af8:	sub    eax,0x8
  406afb:	cmp    DWORD PTR [eax],0xdddd
  406b01:	jne    0x406b0a
  406b03:	push   eax
  406b04:	call   0x404391
  406b09:	pop    ecx
  406b0a:	pop    ebp
  406b0b:	ret    
  406b0c:	mov    edi,edi
  406b0e:	push   ebp
  406b0f:	mov    ebp,esp
  406b11:	mov    eax,DWORD PTR [ebp+0x8]
  406b14:	push   esi
  406b15:	mov    esi,ecx
  406b17:	mov    BYTE PTR [esi+0xc],0x0
  406b1b:	test   eax,eax
  406b1d:	jne    0x406b82
  406b1f:	call   0x40c90a
  406b24:	mov    DWORD PTR [esi+0x8],eax
  406b27:	mov    ecx,DWORD PTR [eax+0x6c]
  406b2a:	mov    DWORD PTR [esi],ecx
  406b2c:	mov    ecx,DWORD PTR [eax+0x68]
  406b2f:	mov    DWORD PTR [esi+0x4],ecx
  406b32:	mov    ecx,DWORD PTR [esi]
  406b34:	cmp    ecx,DWORD PTR ds:0x44bc58
  406b3a:	je     0x406b4e
  406b3c:	mov    ecx,DWORD PTR ds:0x44bc64
  406b42:	test   DWORD PTR [eax+0x70],ecx
  406b45:	jne    0x406b4e
  406b47:	call   0x40d52b
  406b4c:	mov    DWORD PTR [esi],eax
  406b4e:	mov    eax,DWORD PTR [esi+0x4]
  406b51:	cmp    eax,DWORD PTR ds:0x44c100
  406b57:	je     0x406b6f
  406b59:	mov    eax,DWORD PTR [esi+0x8]
  406b5c:	mov    ecx,DWORD PTR ds:0x44bc64
  406b62:	test   DWORD PTR [eax+0x70],ecx
  406b65:	jne    0x406b6f
  406b67:	call   0x40d7c7
  406b6c:	mov    DWORD PTR [esi+0x4],eax
  406b6f:	mov    eax,DWORD PTR [esi+0x8]
  406b72:	test   BYTE PTR [eax+0x70],0x2
  406b76:	jne    0x406b8c
  406b78:	or     DWORD PTR [eax+0x70],0x2
  406b7c:	mov    BYTE PTR [esi+0xc],0x1
  406b80:	jmp    0x406b8c
  406b82:	mov    ecx,DWORD PTR [eax]
  406b84:	mov    DWORD PTR [esi],ecx
  406b86:	mov    eax,DWORD PTR [eax+0x4]
  406b89:	mov    DWORD PTR [esi+0x4],eax
  406b8c:	mov    eax,esi
  406b8e:	pop    esi
  406b8f:	pop    ebp
  406b90:	ret    0x4
  406b93:	mov    edi,edi
  406b95:	push   ebp
  406b96:	mov    ebp,esp
  406b98:	sub    esp,0x10
  406b9b:	mov    eax,ds:0x44b470
  406ba0:	xor    eax,ebp
  406ba2:	mov    DWORD PTR [ebp-0x4],eax
  406ba5:	mov    edx,DWORD PTR [ebp+0x18]
  406ba8:	push   ebx
  406ba9:	xor    ebx,ebx
  406bab:	push   esi
  406bac:	push   edi
  406bad:	cmp    edx,ebx
  406baf:	jle    0x406bd0
  406bb1:	mov    eax,DWORD PTR [ebp+0x14]
  406bb4:	mov    ecx,edx
  406bb6:	dec    ecx
  406bb7:	cmp    BYTE PTR [eax],bl
  406bb9:	je     0x406bc3
  406bbb:	inc    eax
  406bbc:	cmp    ecx,ebx
  406bbe:	jne    0x406bb6
  406bc0:	or     ecx,0xffffffff
  406bc3:	mov    eax,edx
  406bc5:	sub    eax,ecx
  406bc7:	dec    eax
  406bc8:	cmp    eax,edx
  406bca:	jge    0x406bcd
  406bcc:	inc    eax
  406bcd:	mov    DWORD PTR [ebp+0x18],eax
  406bd0:	mov    DWORD PTR [ebp-0x8],ebx
  406bd3:	cmp    DWORD PTR [ebp+0x24],ebx
  406bd6:	jne    0x406be3
  406bd8:	mov    eax,DWORD PTR [ebp+0x8]
  406bdb:	mov    eax,DWORD PTR [eax]
  406bdd:	mov    eax,DWORD PTR [eax+0x4]
  406be0:	mov    DWORD PTR [ebp+0x24],eax
  406be3:	mov    esi,DWORD PTR ds:0x443190
  406be9:	xor    eax,eax
  406beb:	cmp    DWORD PTR [ebp+0x28],ebx
  406bee:	push   ebx
  406bef:	push   ebx
  406bf0:	push   DWORD PTR [ebp+0x18]
  406bf3:	setne  al
  406bf6:	push   DWORD PTR [ebp+0x14]
  406bf9:	lea    eax,[eax*8+0x1]
  406c00:	push   eax
  406c01:	push   DWORD PTR [ebp+0x24]
  406c04:	call   esi
  406c06:	mov    edi,eax
  406c08:	mov    DWORD PTR [ebp-0x10],edi
  406c0b:	cmp    edi,ebx
  406c0d:	jne    0x406c16
  406c0f:	xor    eax,eax
  406c11:	jmp    0x406d68
  406c16:	jle    0x406c5b
  406c18:	push   0xffffffe0
  406c1a:	xor    edx,edx
  406c1c:	pop    eax
  406c1d:	div    edi
  406c1f:	cmp    eax,0x2
  406c22:	jb     0x406c5b
  406c24:	lea    eax,[edi+edi*1+0x8]
  406c28:	cmp    eax,0x400
  406c2d:	ja     0x406c42
  406c2f:	call   0x40dfc0
  406c34:	mov    eax,esp
  406c36:	cmp    eax,ebx
  406c38:	je     0x406c56
  406c3a:	mov    DWORD PTR [eax],0xcccc
  406c40:	jmp    0x406c53
  406c42:	push   eax
  406c43:	call   0x405d80
  406c48:	pop    ecx
  406c49:	cmp    eax,ebx
  406c4b:	je     0x406c56
  406c4d:	mov    DWORD PTR [eax],0xdddd
  406c53:	add    eax,0x8
  406c56:	mov    DWORD PTR [ebp-0xc],eax
  406c59:	jmp    0x406c5e
  406c5b:	mov    DWORD PTR [ebp-0xc],ebx
  406c5e:	cmp    DWORD PTR [ebp-0xc],ebx
  406c61:	je     0x406c0f
  406c63:	push   edi
  406c64:	push   DWORD PTR [ebp-0xc]
  406c67:	push   DWORD PTR [ebp+0x18]
  406c6a:	push   DWORD PTR [ebp+0x14]
  406c6d:	push   0x1
  406c6f:	push   DWORD PTR [ebp+0x24]
  406c72:	call   esi
  406c74:	test   eax,eax
  406c76:	je     0x406d5c
  406c7c:	mov    esi,DWORD PTR ds:0x443194
  406c82:	push   ebx
  406c83:	push   ebx
  406c84:	push   edi
  406c85:	push   DWORD PTR [ebp-0xc]
  406c88:	push   DWORD PTR [ebp+0x10]
  406c8b:	push   DWORD PTR [ebp+0xc]
  406c8e:	call   esi
  406c90:	mov    DWORD PTR [ebp-0x8],eax
  406c93:	cmp    eax,ebx
  406c95:	je     0x406d5c
  406c9b:	mov    ecx,0x400
  406ca0:	test   DWORD PTR [ebp+0x10],ecx
  406ca3:	je     0x406cce
  406ca5:	mov    eax,DWORD PTR [ebp+0x20]
  406ca8:	cmp    eax,ebx
  406caa:	je     0x406d5c
  406cb0:	cmp    DWORD PTR [ebp-0x8],eax
  406cb3:	jg     0x406d5c
  406cb9:	push   eax
  406cba:	push   DWORD PTR [ebp+0x1c]
  406cbd:	push   edi
  406cbe:	push   DWORD PTR [ebp-0xc]
  406cc1:	push   DWORD PTR [ebp+0x10]
  406cc4:	push   DWORD PTR [ebp+0xc]
  406cc7:	call   esi
  406cc9:	jmp    0x406d5c
  406cce:	mov    edi,DWORD PTR [ebp-0x8]
  406cd1:	cmp    edi,ebx
  406cd3:	jle    0x406d17
  406cd5:	push   0xffffffe0
  406cd7:	xor    edx,edx
  406cd9:	pop    eax
  406cda:	div    edi
  406cdc:	cmp    eax,0x2
  406cdf:	jb     0x406d17
  406ce1:	lea    eax,[edi+edi*1+0x8]
  406ce5:	cmp    eax,ecx
  406ce7:	ja     0x406cff
  406ce9:	call   0x40dfc0
  406cee:	mov    edi,esp
  406cf0:	cmp    edi,ebx
  406cf2:	je     0x406d5c
  406cf4:	mov    DWORD PTR [edi],0xcccc
  406cfa:	add    edi,0x8
  406cfd:	jmp    0x406d19
  406cff:	push   eax
  406d00:	call   0x405d80
  406d05:	pop    ecx
  406d06:	cmp    eax,ebx
  406d08:	je     0x406d13
  406d0a:	mov    DWORD PTR [eax],0xdddd
  406d10:	add    eax,0x8
  406d13:	mov    edi,eax
  406d15:	jmp    0x406d19
  406d17:	xor    edi,edi
  406d19:	cmp    edi,ebx
  406d1b:	je     0x406d5c
  406d1d:	push   DWORD PTR [ebp-0x8]
  406d20:	push   edi
  406d21:	push   DWORD PTR [ebp-0x10]
  406d24:	push   DWORD PTR [ebp-0xc]
  406d27:	push   DWORD PTR [ebp+0x10]
  406d2a:	push   DWORD PTR [ebp+0xc]
  406d2d:	call   esi
  406d2f:	test   eax,eax
  406d31:	je     0x406d55
  406d33:	push   ebx
  406d34:	push   ebx
  406d35:	cmp    DWORD PTR [ebp+0x20],ebx
  406d38:	jne    0x406d3e
  406d3a:	push   ebx
  406d3b:	push   ebx
  406d3c:	jmp    0x406d44
  406d3e:	push   DWORD PTR [ebp+0x20]
  406d41:	push   DWORD PTR [ebp+0x1c]
  406d44:	push   DWORD PTR [ebp-0x8]
  406d47:	push   edi
  406d48:	push   ebx
  406d49:	push   DWORD PTR [ebp+0x24]
  406d4c:	call   DWORD PTR ds:0x443198
  406d52:	mov    DWORD PTR [ebp-0x8],eax
  406d55:	push   edi
  406d56:	call   0x406aec
  406d5b:	pop    ecx
  406d5c:	push   DWORD PTR [ebp-0xc]
  406d5f:	call   0x406aec
  406d64:	mov    eax,DWORD PTR [ebp-0x8]
  406d67:	pop    ecx
  406d68:	lea    esp,[ebp-0x1c]
  406d6b:	pop    edi
  406d6c:	pop    esi
  406d6d:	pop    ebx
  406d6e:	mov    ecx,DWORD PTR [ebp-0x4]
  406d71:	xor    ecx,ebp
  406d73:	call   0x403edd
  406d78:	leave  
  406d79:	ret    
  406d7a:	mov    edi,edi
  406d7c:	push   ebp
  406d7d:	mov    ebp,esp
  406d7f:	sub    esp,0x10
  406d82:	push   DWORD PTR [ebp+0x8]
  406d85:	lea    ecx,[ebp-0x10]
  406d88:	call   0x406b0c
  406d8d:	push   DWORD PTR [ebp+0x28]
  406d90:	lea    eax,[ebp-0x10]
  406d93:	push   DWORD PTR [ebp+0x24]
  406d96:	push   DWORD PTR [ebp+0x20]
  406d99:	push   DWORD PTR [ebp+0x1c]
  406d9c:	push   DWORD PTR [ebp+0x18]
  406d9f:	push   DWORD PTR [ebp+0x14]
  406da2:	push   DWORD PTR [ebp+0x10]
  406da5:	push   DWORD PTR [ebp+0xc]
  406da8:	push   eax
  406da9:	call   0x406b93
  406dae:	add    esp,0x24
  406db1:	cmp    BYTE PTR [ebp-0x4],0x0
  406db5:	je     0x406dbe
  406db7:	mov    ecx,DWORD PTR [ebp-0x8]
  406dba:	and    DWORD PTR [ecx+0x70],0xfffffffd
  406dbe:	leave  
  406dbf:	ret    
  406dc0:	mov    edi,edi
  406dc2:	push   ebp
  406dc3:	mov    ebp,esp
  406dc5:	sub    esp,0x10
  406dc8:	push   DWORD PTR [ebp+0xc]
  406dcb:	lea    ecx,[ebp-0x10]
  406dce:	call   0x406b0c
  406dd3:	mov    eax,DWORD PTR [ebp-0x10]
  406dd6:	cmp    DWORD PTR [eax+0xac],0x1
  406ddd:	jle    0x406df2
  406ddf:	lea    eax,[ebp-0x10]
  406de2:	push   eax
  406de3:	push   0x4
  406de5:	push   DWORD PTR [ebp+0x8]
  406de8:	call   0x40dfec
  406ded:	add    esp,0xc
  406df0:	jmp    0x406e02
  406df2:	mov    eax,DWORD PTR [eax+0xc8]
  406df8:	mov    ecx,DWORD PTR [ebp+0x8]
  406dfb:	movzx  eax,WORD PTR [eax+ecx*2]
  406dff:	and    eax,0x4
  406e02:	cmp    BYTE PTR [ebp-0x4],0x0
  406e06:	je     0x406e0f
  406e08:	mov    ecx,DWORD PTR [ebp-0x8]
  406e0b:	and    DWORD PTR [ecx+0x70],0xfffffffd
  406e0f:	leave  
  406e10:	ret    
  406e11:	mov    edi,edi
  406e13:	push   ebp
  406e14:	mov    ebp,esp
  406e16:	cmp    DWORD PTR ds:0x44dab8,0x0
  406e1d:	jne    0x406e31
  406e1f:	mov    eax,DWORD PTR [ebp+0x8]
  406e22:	mov    ecx,DWORD PTR ds:0x44bc48
  406e28:	movzx  eax,WORD PTR [ecx+eax*2]
  406e2c:	and    eax,0x4
  406e2f:	pop    ebp
  406e30:	ret    
  406e31:	push   0x0
  406e33:	push   DWORD PTR [ebp+0x8]
  406e36:	call   0x406dc0
  406e3b:	pop    ecx
  406e3c:	pop    ecx
  406e3d:	pop    ebp
  406e3e:	ret    
  406e3f:	call   0x40c90a
  406e44:	mov    ecx,eax
  406e46:	mov    eax,DWORD PTR [ecx+0x6c]
  406e49:	cmp    eax,DWORD PTR ds:0x44bc58
  406e4f:	je     0x406e61
  406e51:	mov    edx,DWORD PTR ds:0x44bc64
  406e57:	test   DWORD PTR [ecx+0x70],edx
  406e5a:	jne    0x406e61
  406e5c:	call   0x40d52b
  406e61:	mov    eax,DWORD PTR [eax+0x4]
  406e64:	ret    
  406e65:	mov    edi,edi
  406e67:	push   ebp
  406e68:	mov    ebp,esp
  406e6a:	push   esi
  406e6b:	push   edi
  406e6c:	xor    esi,esi
  406e6e:	push   DWORD PTR [ebp+0x8]
  406e71:	call   0x405d80
  406e76:	mov    edi,eax
  406e78:	pop    ecx
  406e79:	test   edi,edi
  406e7b:	jne    0x406ea4
  406e7d:	cmp    DWORD PTR ds:0x44dabc,eax
  406e83:	jbe    0x406ea4
  406e85:	push   esi
  406e86:	call   DWORD PTR ds:0x4431cc
  406e8c:	lea    eax,[esi+0x3e8]
  406e92:	cmp    eax,DWORD PTR ds:0x44dabc
  406e98:	jbe    0x406e9d
  406e9a:	or     eax,0xffffffff
  406e9d:	mov    esi,eax
  406e9f:	cmp    eax,0xffffffff
  406ea2:	jne    0x406e6e
  406ea4:	mov    eax,edi
  406ea6:	pop    edi
  406ea7:	pop    esi
  406ea8:	pop    ebp
  406ea9:	ret    
  406eaa:	mov    edi,edi
  406eac:	push   ebp
  406ead:	mov    ebp,esp
  406eaf:	push   esi
  406eb0:	push   edi
  406eb1:	xor    esi,esi
  406eb3:	push   0x0
  406eb5:	push   DWORD PTR [ebp+0xc]
  406eb8:	push   DWORD PTR [ebp+0x8]
  406ebb:	call   0x407fa3
  406ec0:	mov    edi,eax
  406ec2:	add    esp,0xc
  406ec5:	test   edi,edi
  406ec7:	jne    0x406ef0
  406ec9:	cmp    DWORD PTR ds:0x44dabc,eax
  406ecf:	jbe    0x406ef0
  406ed1:	push   esi
  406ed2:	call   DWORD PTR ds:0x4431cc
  406ed8:	lea    eax,[esi+0x3e8]
  406ede:	cmp    eax,DWORD PTR ds:0x44dabc
  406ee4:	jbe    0x406ee9
  406ee6:	or     eax,0xffffffff
  406ee9:	mov    esi,eax
  406eeb:	cmp    eax,0xffffffff
  406eee:	jne    0x406eb3
  406ef0:	mov    eax,edi
  406ef2:	pop    edi
  406ef3:	pop    esi
  406ef4:	pop    ebp
  406ef5:	ret    
  406ef6:	mov    edi,edi
  406ef8:	push   ebp
  406ef9:	mov    ebp,esp
  406efb:	push   esi
  406efc:	push   edi
  406efd:	xor    esi,esi
  406eff:	push   DWORD PTR [ebp+0xc]
  406f02:	push   DWORD PTR [ebp+0x8]
  406f05:	call   0x40e0a4
  406f0a:	mov    edi,eax
  406f0c:	pop    ecx
  406f0d:	pop    ecx
  406f0e:	test   edi,edi
  406f10:	jne    0x406f3e
  406f12:	cmp    DWORD PTR [ebp+0xc],eax
  406f15:	je     0x406f3e
  406f17:	cmp    DWORD PTR ds:0x44dabc,eax
  406f1d:	jbe    0x406f3e
  406f1f:	push   esi
  406f20:	call   DWORD PTR ds:0x4431cc
  406f26:	lea    eax,[esi+0x3e8]
  406f2c:	cmp    eax,DWORD PTR ds:0x44dabc
  406f32:	jbe    0x406f37
  406f34:	or     eax,0xffffffff
  406f37:	mov    esi,eax
  406f39:	cmp    eax,0xffffffff
  406f3c:	jne    0x406eff
  406f3e:	mov    eax,edi
  406f40:	pop    edi
  406f41:	pop    esi
  406f42:	pop    ebp
  406f43:	ret    
  406f44:	mov    edi,edi
  406f46:	push   ebp
  406f47:	mov    ebp,esp
  406f49:	push   esi
  406f4a:	push   edi
  406f4b:	xor    esi,esi
  406f4d:	push   DWORD PTR [ebp+0x10]
  406f50:	push   DWORD PTR [ebp+0xc]
  406f53:	push   DWORD PTR [ebp+0x8]
  406f56:	call   0x40e151
  406f5b:	mov    edi,eax
  406f5d:	add    esp,0xc
  406f60:	test   edi,edi
  406f62:	jne    0x406f90
  406f64:	cmp    DWORD PTR [ebp+0x10],eax
  406f67:	je     0x406f90
  406f69:	cmp    DWORD PTR ds:0x44dabc,eax
  406f6f:	jbe    0x406f90
  406f71:	push   esi
  406f72:	call   DWORD PTR ds:0x4431cc
  406f78:	lea    eax,[esi+0x3e8]
  406f7e:	cmp    eax,DWORD PTR ds:0x44dabc
  406f84:	jbe    0x406f89
  406f86:	or     eax,0xffffffff
  406f89:	mov    esi,eax
  406f8b:	cmp    eax,0xffffffff
  406f8e:	jne    0x406f4d
  406f90:	mov    eax,edi
  406f92:	pop    edi
  406f93:	pop    esi
  406f94:	pop    ebp
  406f95:	ret    
  406f96:	call   0x40e214
  406f9b:	test   eax,eax
  406f9d:	je     0x406fa7
  406f9f:	push   0x16
  406fa1:	call   0x40e221
  406fa6:	pop    ecx
  406fa7:	test   BYTE PTR ds:0x44b46c,0x2
  406fae:	je     0x406fc1
  406fb0:	push   0x1
  406fb2:	push   0x40000015
  406fb7:	push   0x3
  406fb9:	call   0x4074ce
  406fbe:	add    esp,0xc
  406fc1:	push   0x3
  406fc3:	call   0x407da4
  406fc8:	int3   
  406fc9:	mov    edi,edi
  406fcb:	push   ebp
  406fcc:	mov    ebp,esp
  406fce:	mov    ecx,DWORD PTR [ebp+0xc]
  406fd1:	mov    eax,ds:0x44b46c
  406fd6:	mov    edx,DWORD PTR [ebp+0x8]
  406fd9:	and    edx,DWORD PTR [ebp+0xc]
  406fdc:	not    ecx
  406fde:	and    ecx,eax
  406fe0:	or     ecx,edx
  406fe2:	mov    DWORD PTR ds:0x44b46c,ecx
  406fe8:	pop    ebp
  406fe9:	ret    
  406fea:	mov    edi,edi
  406fec:	push   ebp
  406fed:	mov    ebp,esp
  406fef:	sub    esp,0x328
  406ff5:	mov    ds:0x44dbc8,eax
  406ffa:	mov    DWORD PTR ds:0x44dbc4,ecx
  407000:	mov    DWORD PTR ds:0x44dbc0,edx
  407006:	mov    DWORD PTR ds:0x44dbbc,ebx
  40700c:	mov    DWORD PTR ds:0x44dbb8,esi
  407012:	mov    DWORD PTR ds:0x44dbb4,edi
  407018:	data16 mov WORD PTR ds:0x44dbe0,ss
  40701f:	data16 mov WORD PTR ds:0x44dbd4,cs
  407026:	data16 mov WORD PTR ds:0x44dbb0,ds
  40702d:	data16 mov WORD PTR ds:0x44dbac,es
  407034:	data16 mov WORD PTR ds:0x44dba8,fs
  40703b:	data16 mov WORD PTR ds:0x44dba4,gs
  407042:	pushf  
  407043:	pop    DWORD PTR ds:0x44dbd8
  407049:	mov    eax,DWORD PTR [ebp+0x0]
  40704c:	mov    ds:0x44dbcc,eax
  407051:	mov    eax,DWORD PTR [ebp+0x4]
  407054:	mov    ds:0x44dbd0,eax
  407059:	lea    eax,[ebp+0x8]
  40705c:	mov    ds:0x44dbdc,eax
  407061:	mov    eax,DWORD PTR [ebp-0x320]
  407067:	mov    DWORD PTR ds:0x44db18,0x10001
  407071:	mov    eax,ds:0x44dbd0
  407076:	mov    ds:0x44dacc,eax
  40707b:	mov    DWORD PTR ds:0x44dac0,0xc0000409
  407085:	mov    DWORD PTR ds:0x44dac4,0x1
  40708f:	mov    eax,ds:0x44b470
  407094:	mov    DWORD PTR [ebp-0x328],eax
  40709a:	mov    eax,ds:0x44b474
  40709f:	mov    DWORD PTR [ebp-0x324],eax
  4070a5:	call   DWORD PTR ds:0x443178
  4070ab:	mov    ds:0x44db10,eax
  4070b0:	push   0x1
  4070b2:	call   0x40e3c4
  4070b7:	pop    ecx
  4070b8:	push   0x0
  4070ba:	call   DWORD PTR ds:0x44317c
  4070c0:	push   0x443dc8
  4070c5:	call   DWORD PTR ds:0x443180
  4070cb:	cmp    DWORD PTR ds:0x44db10,0x0
  4070d2:	jne    0x4070dc
  4070d4:	push   0x1
  4070d6:	call   0x40e3c4
  4070db:	pop    ecx
  4070dc:	push   0xc0000409
  4070e1:	call   DWORD PTR ds:0x443184
  4070e7:	push   eax
  4070e8:	call   DWORD PTR ds:0x443188
  4070ee:	leave  
  4070ef:	ret    
  4070f0:	mov    edi,edi
  4070f2:	push   ebp
  4070f3:	mov    ebp,esp
  4070f5:	push   ecx
  4070f6:	push   esi
  4070f7:	mov    esi,DWORD PTR [ebp+0xc]
  4070fa:	push   esi
  4070fb:	call   0x407499
  407100:	mov    DWORD PTR [ebp+0xc],eax
  407103:	mov    eax,DWORD PTR [esi+0xc]
  407106:	pop    ecx
  407107:	test   al,0x82
  407109:	jne    0x407122
  40710b:	call   0x40769b
  407110:	mov    DWORD PTR [eax],0x9
  407116:	or     DWORD PTR [esi+0xc],0x20
  40711a:	or     eax,0xffffffff
  40711d:	jmp    0x407251
  407122:	test   al,0x40
  407124:	je     0x407133
  407126:	call   0x40769b
  40712b:	mov    DWORD PTR [eax],0x22
  407131:	jmp    0x407116
  407133:	push   ebx
  407134:	xor    ebx,ebx
  407136:	test   al,0x1
  407138:	je     0x407150
  40713a:	mov    DWORD PTR [esi+0x4],ebx
  40713d:	test   al,0x10
  40713f:	je     0x4071cc
  407145:	mov    ecx,DWORD PTR [esi+0x8]
  407148:	and    eax,0xfffffffe
  40714b:	mov    DWORD PTR [esi],ecx
  40714d:	mov    DWORD PTR [esi+0xc],eax
  407150:	mov    eax,DWORD PTR [esi+0xc]
  407153:	and    eax,0xffffffef
  407156:	or     eax,0x2
  407159:	mov    DWORD PTR [esi+0xc],eax
  40715c:	mov    DWORD PTR [esi+0x4],ebx
  40715f:	mov    DWORD PTR [ebp-0x4],ebx
  407162:	test   eax,0x10c
  407167:	jne    0x407195
  407169:	call   0x4043cb
  40716e:	add    eax,0x20
  407171:	cmp    esi,eax
  407173:	je     0x407181
  407175:	call   0x4043cb
  40717a:	add    eax,0x40
  40717d:	cmp    esi,eax
  40717f:	jne    0x40718e
  407181:	push   DWORD PTR [ebp+0xc]
  407184:	call   0x40e3cc
  407189:	pop    ecx
  40718a:	test   eax,eax
  40718c:	jne    0x407195
  40718e:	push   esi
  40718f:	call   0x408025
  407194:	pop    ecx
  407195:	test   DWORD PTR [esi+0xc],0x108
  40719c:	push   edi
  40719d:	je     0x407223
  4071a3:	mov    eax,DWORD PTR [esi+0x8]
  4071a6:	mov    edi,DWORD PTR [esi]
  4071a8:	lea    ecx,[eax+0x1]
  4071ab:	mov    DWORD PTR [esi],ecx
  4071ad:	mov    ecx,DWORD PTR [esi+0x18]
  4071b0:	sub    edi,eax
  4071b2:	dec    ecx
  4071b3:	mov    DWORD PTR [esi+0x4],ecx
  4071b6:	cmp    edi,ebx
  4071b8:	jle    0x4071d7
  4071ba:	push   edi
  4071bb:	push   eax
  4071bc:	push   DWORD PTR [ebp+0xc]
  4071bf:	call   0x4088da
  4071c4:	add    esp,0xc
  4071c7:	mov    DWORD PTR [ebp-0x4],eax
  4071ca:	jmp    0x407219
  4071cc:	or     eax,0x20
  4071cf:	mov    DWORD PTR [esi+0xc],eax
  4071d2:	or     eax,0xffffffff
  4071d5:	jmp    0x407250
  4071d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4071da:	cmp    ecx,0xffffffff
  4071dd:	je     0x4071fa
  4071df:	cmp    ecx,0xfffffffe
  4071e2:	je     0x4071fa
  4071e4:	mov    eax,ecx
  4071e6:	and    eax,0x1f
  4071e9:	mov    edx,ecx
  4071eb:	sar    edx,0x5
  4071ee:	shl    eax,0x6
  4071f1:	add    eax,DWORD PTR [edx*4+0x4507a0]
  4071f8:	jmp    0x4071ff
  4071fa:	mov    eax,0x44b478
  4071ff:	test   BYTE PTR [eax+0x4],0x20
  407203:	je     0x407219
  407205:	push   0x2
  407207:	push   ebx
  407208:	push   ebx
  407209:	push   ecx
  40720a:	call   0x4080f3
  40720f:	and    eax,edx
  407211:	add    esp,0x10
  407214:	cmp    eax,0xffffffff
  407217:	je     0x40723e
  407219:	mov    eax,DWORD PTR [esi+0x8]
  40721c:	mov    cl,BYTE PTR [ebp+0x8]
  40721f:	mov    BYTE PTR [eax],cl
  407221:	jmp    0x407239
  407223:	xor    edi,edi
  407225:	inc    edi
  407226:	push   edi
  407227:	lea    eax,[ebp+0x8]
  40722a:	push   eax
  40722b:	push   DWORD PTR [ebp+0xc]
  40722e:	call   0x4088da
  407233:	add    esp,0xc
  407236:	mov    DWORD PTR [ebp-0x4],eax
  407239:	cmp    DWORD PTR [ebp-0x4],edi
  40723c:	je     0x407247
  40723e:	or     DWORD PTR [esi+0xc],0x20
  407242:	or     eax,0xffffffff
  407245:	jmp    0x40724f
  407247:	mov    eax,DWORD PTR [ebp+0x8]
  40724a:	and    eax,0xff
  40724f:	pop    edi
  407250:	pop    ebx
  407251:	pop    esi
  407252:	leave  
  407253:	ret    
  407254:	mov    edi,edi
  407256:	push   ebp
  407257:	mov    ebp,esp
  407259:	sub    esp,0x4c
  40725c:	push   esi
  40725d:	lea    eax,[ebp-0x4c]
  407260:	push   eax
  407261:	call   DWORD PTR ds:0x4431a4
  407267:	push   0x40
  407269:	push   0x20
  40726b:	pop    esi
  40726c:	push   esi
  40726d:	call   0x406eaa
  407272:	pop    ecx
  407273:	pop    ecx
  407274:	xor    ecx,ecx
  407276:	cmp    eax,ecx
  407278:	jne    0x407282
  40727a:	or     eax,0xffffffff
  40727d:	jmp    0x407491
  407282:	lea    edx,[eax+0x800]
  407288:	mov    ds:0x4507a0,eax
  40728d:	mov    DWORD PTR ds:0x450780,esi
  407293:	cmp    eax,edx
  407295:	jae    0x4072cd
  407297:	add    eax,0x5
  40729a:	or     DWORD PTR [eax-0x5],0xffffffff
  40729e:	mov    WORD PTR [eax-0x1],0xa00
  4072a4:	mov    DWORD PTR [eax+0x3],ecx
  4072a7:	mov    WORD PTR [eax+0x1f],0xa00
  4072ad:	mov    BYTE PTR [eax+0x21],0xa
  4072b1:	mov    DWORD PTR [eax+0x33],ecx
  4072b4:	mov    BYTE PTR [eax+0x2f],cl
  4072b7:	mov    esi,DWORD PTR ds:0x4507a0
  4072bd:	add    eax,0x40
  4072c0:	lea    edx,[eax-0x5]
  4072c3:	add    esi,0x800
  4072c9:	cmp    edx,esi
  4072cb:	jb     0x40729a
  4072cd:	push   ebx
  4072ce:	push   edi
  4072cf:	cmp    WORD PTR [ebp-0x1a],cx
  4072d3:	je     0x4073e7
  4072d9:	mov    eax,DWORD PTR [ebp-0x18]
  4072dc:	cmp    eax,ecx
  4072de:	je     0x4073e7
  4072e4:	mov    ebx,DWORD PTR [eax]
  4072e6:	add    eax,0x4
  4072e9:	mov    DWORD PTR [ebp-0x4],eax
  4072ec:	add    eax,ebx
  4072ee:	mov    esi,0x800
  4072f3:	mov    DWORD PTR [ebp-0x8],eax
  4072f6:	cmp    ebx,esi
  4072f8:	jl     0x4072fc
  4072fa:	mov    ebx,esi
  4072fc:	cmp    DWORD PTR ds:0x450780,ebx
  407302:	jge    0x40736f
  407304:	mov    edi,0x4507a4
  407309:	push   0x40
  40730b:	push   0x20
  40730d:	call   0x406eaa
  407312:	pop    ecx
  407313:	pop    ecx
  407314:	test   eax,eax
  407316:	je     0x407369
  407318:	add    DWORD PTR ds:0x450780,0x20
  40731f:	lea    ecx,[eax+0x800]
  407325:	mov    DWORD PTR [edi],eax
  407327:	cmp    eax,ecx
  407329:	jae    0x40735c
  40732b:	add    eax,0x5
  40732e:	or     DWORD PTR [eax-0x5],0xffffffff
  407332:	and    DWORD PTR [eax+0x3],0x0
  407336:	and    BYTE PTR [eax+0x1f],0x80
  40733a:	and    DWORD PTR [eax+0x33],0x0
  40733e:	mov    WORD PTR [eax-0x1],0xa00
  407344:	mov    WORD PTR [eax+0x20],0xa0a
  40734a:	mov    BYTE PTR [eax+0x2f],0x0
  40734e:	mov    ecx,DWORD PTR [edi]
  407350:	add    eax,0x40
  407353:	add    ecx,esi
  407355:	lea    edx,[eax-0x5]
  407358:	cmp    edx,ecx
  40735a:	jb     0x40732e
  40735c:	add    edi,0x4
  40735f:	cmp    DWORD PTR ds:0x450780,ebx
  407365:	jl     0x407309
  407367:	jmp    0x40736f
  407369:	mov    ebx,DWORD PTR ds:0x450780
  40736f:	xor    edi,edi
  407371:	test   ebx,ebx
  407373:	jle    0x4073e7
  407375:	mov    eax,DWORD PTR [ebp-0x8]
  407378:	mov    eax,DWORD PTR [eax]
  40737a:	cmp    eax,0xffffffff
  40737d:	je     0x4073db
  40737f:	cmp    eax,0xfffffffe
  407382:	je     0x4073db
  407384:	mov    ecx,DWORD PTR [ebp-0x4]
  407387:	mov    cl,BYTE PTR [ecx]
  407389:	test   cl,0x1
  40738c:	je     0x4073db
  40738e:	test   cl,0x8
  407391:	jne    0x40739e
  407393:	push   eax
  407394:	call   DWORD PTR ds:0x443160
  40739a:	test   eax,eax
  40739c:	je     0x4073db
  40739e:	mov    esi,edi
  4073a0:	and    esi,0x1f
  4073a3:	mov    eax,edi
  4073a5:	sar    eax,0x5
  4073a8:	shl    esi,0x6
  4073ab:	add    esi,DWORD PTR [eax*4+0x4507a0]
  4073b2:	mov    eax,DWORD PTR [ebp-0x8]
  4073b5:	mov    eax,DWORD PTR [eax]
  4073b7:	mov    DWORD PTR [esi],eax
  4073b9:	mov    eax,DWORD PTR [ebp-0x4]
  4073bc:	mov    al,BYTE PTR [eax]
  4073be:	mov    BYTE PTR [esi+0x4],al
  4073c1:	push   0xfa0
  4073c6:	lea    eax,[esi+0xc]
  4073c9:	push   eax
  4073ca:	call   DWORD PTR ds:0x44316c
  4073d0:	test   eax,eax
  4073d2:	je     0x407494
  4073d8:	inc    DWORD PTR [esi+0x8]
  4073db:	add    DWORD PTR [ebp-0x8],0x4
  4073df:	inc    edi
  4073e0:	inc    DWORD PTR [ebp-0x4]
  4073e3:	cmp    edi,ebx
  4073e5:	jl     0x407375
  4073e7:	xor    ebx,ebx
  4073e9:	mov    esi,ebx
  4073eb:	shl    esi,0x6
  4073ee:	add    esi,DWORD PTR ds:0x4507a0
  4073f4:	mov    eax,DWORD PTR [esi]
  4073f6:	cmp    eax,0xffffffff
  4073f9:	je     0x407406
  4073fb:	cmp    eax,0xfffffffe
  4073fe:	je     0x407406
  407400:	or     BYTE PTR [esi+0x4],0x80
  407404:	jmp    0x407477
  407406:	mov    BYTE PTR [esi+0x4],0x81
  40740a:	test   ebx,ebx
  40740c:	jne    0x407413
  40740e:	push   0xfffffff6
  407410:	pop    eax
  407411:	jmp    0x40741d
  407413:	lea    eax,[ebx-0x1]
  407416:	neg    eax
  407418:	sbb    eax,eax
  40741a:	add    eax,0xfffffff5
  40741d:	push   eax
  40741e:	call   DWORD PTR ds:0x443170
  407424:	mov    edi,eax
  407426:	cmp    edi,0xffffffff
  407429:	je     0x40746d
  40742b:	test   edi,edi
  40742d:	je     0x40746d
  40742f:	push   edi
  407430:	call   DWORD PTR ds:0x443160
  407436:	test   eax,eax
  407438:	je     0x40746d
  40743a:	and    eax,0xff
  40743f:	mov    DWORD PTR [esi],edi
  407441:	cmp    eax,0x2
  407444:	jne    0x40744c
  407446:	or     BYTE PTR [esi+0x4],0x40
  40744a:	jmp    0x407455
  40744c:	cmp    eax,0x3
  40744f:	jne    0x407455
  407451:	or     BYTE PTR [esi+0x4],0x8
  407455:	push   0xfa0
  40745a:	lea    eax,[esi+0xc]
  40745d:	push   eax
  40745e:	call   DWORD PTR ds:0x44316c
  407464:	test   eax,eax
  407466:	je     0x407494
  407468:	inc    DWORD PTR [esi+0x8]
  40746b:	jmp    0x407477
  40746d:	or     BYTE PTR [esi+0x4],0x40
  407471:	mov    DWORD PTR [esi],0xfffffffe
  407477:	inc    ebx
  407478:	cmp    ebx,0x3
  40747b:	jl     0x4073e9
  407481:	push   DWORD PTR ds:0x450780
  407487:	call   DWORD PTR ds:0x443174
  40748d:	xor    eax,eax
  40748f:	pop    edi
  407490:	pop    ebx
  407491:	pop    esi
  407492:	leave  
  407493:	ret    
  407494:	or     eax,0xffffffff
  407497:	jmp    0x40748f
  407499:	mov    edi,edi
  40749b:	push   ebp
  40749c:	mov    ebp,esp
  40749e:	mov    eax,DWORD PTR [ebp+0x8]
  4074a1:	test   eax,eax
  4074a3:	jne    0x4074ba
  4074a5:	call   0x40769b
  4074aa:	mov    DWORD PTR [eax],0x16
  4074b0:	call   0x407649
  4074b5:	or     eax,0xffffffff
  4074b8:	pop    ebp
  4074b9:	ret    
  4074ba:	mov    eax,DWORD PTR [eax+0x10]
  4074bd:	pop    ebp
  4074be:	ret    
  4074bf:	mov    edi,edi
  4074c1:	push   ebp
  4074c2:	mov    ebp,esp
  4074c4:	mov    eax,DWORD PTR [ebp+0x8]
  4074c7:	mov    ds:0x44dde4,eax
  4074cc:	pop    ebp
  4074cd:	ret    
  4074ce:	mov    edi,edi
  4074d0:	push   ebp
  4074d1:	mov    ebp,esp
  4074d3:	sub    esp,0x328
  4074d9:	mov    eax,ds:0x44b470
  4074de:	xor    eax,ebp
  4074e0:	mov    DWORD PTR [ebp-0x4],eax
  4074e3:	push   ebx
  4074e4:	mov    ebx,DWORD PTR [ebp+0x8]
  4074e7:	push   edi
  4074e8:	cmp    ebx,0xffffffff
  4074eb:	je     0x4074f4
  4074ed:	push   ebx
  4074ee:	call   0x40e3c4
  4074f3:	pop    ecx
  4074f4:	and    DWORD PTR [ebp-0x320],0x0
  4074fb:	push   0x4c
  4074fd:	lea    eax,[ebp-0x31c]
  407503:	push   0x0
  407505:	push   eax
  407506:	call   0x40a550
  40750b:	lea    eax,[ebp-0x320]
  407511:	mov    DWORD PTR [ebp-0x328],eax
  407517:	lea    eax,[ebp-0x2d0]
  40751d:	add    esp,0xc
  407520:	mov    DWORD PTR [ebp-0x324],eax
  407526:	mov    DWORD PTR [ebp-0x220],eax
  40752c:	mov    DWORD PTR [ebp-0x224],ecx
  407532:	mov    DWORD PTR [ebp-0x228],edx
  407538:	mov    DWORD PTR [ebp-0x22c],ebx
  40753e:	mov    DWORD PTR [ebp-0x230],esi
  407544:	mov    DWORD PTR [ebp-0x234],edi
  40754a:	data16 mov WORD PTR [ebp-0x208],ss
  407551:	data16 mov WORD PTR [ebp-0x214],cs
  407558:	data16 mov WORD PTR [ebp-0x238],ds
  40755f:	data16 mov WORD PTR [ebp-0x23c],es
  407566:	data16 mov WORD PTR [ebp-0x240],fs
  40756d:	data16 mov WORD PTR [ebp-0x244],gs
  407574:	pushf  
  407575:	pop    DWORD PTR [ebp-0x210]
  40757b:	mov    eax,DWORD PTR [ebp+0x4]
  40757e:	lea    ecx,[ebp+0x4]
  407581:	mov    DWORD PTR [ebp-0x20c],ecx
  407587:	mov    DWORD PTR [ebp-0x2d0],0x10001
  407591:	mov    DWORD PTR [ebp-0x218],eax
  407597:	mov    ecx,DWORD PTR [ecx-0x4]
  40759a:	mov    DWORD PTR [ebp-0x21c],ecx
  4075a0:	mov    ecx,DWORD PTR [ebp+0xc]
  4075a3:	mov    DWORD PTR [ebp-0x320],ecx
  4075a9:	mov    ecx,DWORD PTR [ebp+0x10]
  4075ac:	mov    DWORD PTR [ebp-0x31c],ecx
  4075b2:	mov    DWORD PTR [ebp-0x314],eax
  4075b8:	call   DWORD PTR ds:0x443178
  4075be:	push   0x0
  4075c0:	mov    edi,eax
  4075c2:	call   DWORD PTR ds:0x44317c
  4075c8:	lea    eax,[ebp-0x328]
  4075ce:	push   eax
  4075cf:	call   DWORD PTR ds:0x443180
  4075d5:	test   eax,eax
  4075d7:	jne    0x4075e9
  4075d9:	test   edi,edi
  4075db:	jne    0x4075e9
  4075dd:	cmp    ebx,0xffffffff
  4075e0:	je     0x4075e9
  4075e2:	push   ebx
  4075e3:	call   0x40e3c4
  4075e8:	pop    ecx
  4075e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ec:	pop    edi
  4075ed:	xor    ecx,ebp
  4075ef:	pop    ebx
  4075f0:	call   0x403edd
  4075f5:	leave  
  4075f6:	ret    
  4075f7:	mov    edi,edi
  4075f9:	push   esi
  4075fa:	push   0x1
  4075fc:	mov    esi,0xc0000417
  407601:	push   esi
  407602:	push   0x2
  407604:	call   0x4074ce
  407609:	add    esp,0xc
  40760c:	push   esi
  40760d:	call   DWORD PTR ds:0x443184
  407613:	push   eax
  407614:	call   DWORD PTR ds:0x443188
  40761a:	pop    esi
  40761b:	ret    
  40761c:	mov    edi,edi
  40761e:	push   ebp
  40761f:	mov    ebp,esp
  407621:	push   DWORD PTR ds:0x44dde4
  407627:	call   DWORD PTR ds:0x4431c8
  40762d:	test   eax,eax
  40762f:	je     0x407634
  407631:	pop    ebp
  407632:	jmp    eax
  407634:	push   DWORD PTR [ebp+0x18]
  407637:	push   DWORD PTR [ebp+0x14]
  40763a:	push   DWORD PTR [ebp+0x10]
  40763d:	push   DWORD PTR [ebp+0xc]
  407640:	push   DWORD PTR [ebp+0x8]
  407643:	call   0x4075f7
  407648:	int3   
  407649:	xor    eax,eax
  40764b:	push   eax
  40764c:	push   eax
  40764d:	push   eax
  40764e:	push   eax
  40764f:	push   eax
  407650:	call   0x40761c
  407655:	add    esp,0x14
  407658:	ret    
  407659:	mov    edi,edi
  40765b:	push   ebp
  40765c:	mov    ebp,esp
  40765e:	mov    eax,DWORD PTR [ebp+0x8]
  407661:	xor    ecx,ecx
  407663:	cmp    eax,DWORD PTR [ecx*8+0x44b4b8]
  40766a:	je     0x40767f
  40766c:	inc    ecx
  40766d:	cmp    ecx,0x2d
  407670:	jb     0x407663
  407672:	lea    ecx,[eax-0x13]
  407675:	cmp    ecx,0x11
  407678:	ja     0x407688
  40767a:	push   0xd
  40767c:	pop    eax
  40767d:	pop    ebp
  40767e:	ret    
  40767f:	mov    eax,DWORD PTR [ecx*8+0x44b4bc]
  407686:	pop    ebp
  407687:	ret    
  407688:	add    eax,0xffffff44
  40768d:	push   0xe
  40768f:	pop    ecx
  407690:	cmp    ecx,eax
  407692:	sbb    eax,eax
  407694:	and    eax,ecx
  407696:	add    eax,0x8
  407699:	pop    ebp
  40769a:	ret    
  40769b:	call   0x40c891
  4076a0:	test   eax,eax
  4076a2:	jne    0x4076aa
  4076a4:	mov    eax,0x44b620
  4076a9:	ret    
  4076aa:	add    eax,0x8
  4076ad:	ret    
  4076ae:	call   0x40c891
  4076b3:	test   eax,eax
  4076b5:	jne    0x4076bd
  4076b7:	mov    eax,0x44b624
  4076bc:	ret    
  4076bd:	add    eax,0xc
  4076c0:	ret    
  4076c1:	mov    edi,edi
  4076c3:	push   ebp
  4076c4:	mov    ebp,esp
  4076c6:	push   esi
  4076c7:	call   0x4076ae
  4076cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4076cf:	push   ecx
  4076d0:	mov    DWORD PTR [eax],ecx
  4076d2:	call   0x407659
  4076d7:	pop    ecx
  4076d8:	mov    esi,eax
  4076da:	call   0x40769b
  4076df:	mov    DWORD PTR [eax],esi
  4076e1:	pop    esi
  4076e2:	pop    ebp
  4076e3:	ret    
  4076e4:	int3   
  4076e5:	int3   
  4076e6:	int3   
  4076e7:	int3   
  4076e8:	int3   
  4076e9:	int3   
  4076ea:	int3   
  4076eb:	int3   
  4076ec:	int3   
  4076ed:	int3   
  4076ee:	int3   
  4076ef:	int3   
  4076f0:	push   0x407750
  4076f5:	push   DWORD PTR fs:0x0
  4076fc:	mov    eax,DWORD PTR [esp+0x10]
  407700:	mov    DWORD PTR [esp+0x10],ebp
  407704:	lea    ebp,[esp+0x10]
  407708:	sub    esp,eax
  40770a:	push   ebx
  40770b:	push   esi
  40770c:	push   edi
  40770d:	mov    eax,ds:0x44b470
  407712:	xor    DWORD PTR [ebp-0x4],eax
  407715:	xor    eax,ebp
  407717:	push   eax
  407718:	mov    DWORD PTR [ebp-0x18],esp
  40771b:	push   DWORD PTR [ebp-0x8]
  40771e:	mov    eax,DWORD PTR [ebp-0x4]
  407721:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  407728:	mov    DWORD PTR [ebp-0x8],eax
  40772b:	lea    eax,[ebp-0x10]
  40772e:	mov    fs:0x0,eax
  407734:	ret    
  407735:	mov    ecx,DWORD PTR [ebp-0x10]
  407738:	mov    DWORD PTR fs:0x0,ecx
  40773f:	pop    ecx
  407740:	pop    edi
  407741:	pop    edi
  407742:	pop    esi
  407743:	pop    ebx
  407744:	mov    esp,ebp
  407746:	pop    ebp
  407747:	push   ecx
  407748:	ret    
  407749:	int3   
  40774a:	int3   
  40774b:	int3   
  40774c:	int3   
  40774d:	int3   
  40774e:	int3   
  40774f:	int3   
  407750:	mov    edi,edi
  407752:	push   ebp
  407753:	mov    ebp,esp
  407755:	sub    esp,0x18
  407758:	push   ebx
  407759:	mov    ebx,DWORD PTR [ebp+0xc]
  40775c:	push   esi
  40775d:	mov    esi,DWORD PTR [ebx+0x8]
  407760:	xor    esi,DWORD PTR ds:0x44b470
  407766:	push   edi
  407767:	mov    eax,DWORD PTR [esi]
  407769:	mov    BYTE PTR [ebp-0x1],0x0
  40776d:	mov    DWORD PTR [ebp-0xc],0x1
  407774:	lea    edi,[ebx+0x10]
  407777:	cmp    eax,0xfffffffe
  40777a:	je     0x407789
  40777c:	mov    ecx,DWORD PTR [esi+0x4]
  40777f:	add    ecx,edi
  407781:	xor    ecx,DWORD PTR [eax+edi*1]
  407784:	call   0x403edd
  407789:	mov    ecx,DWORD PTR [esi+0xc]
  40778c:	mov    eax,DWORD PTR [esi+0x8]
  40778f:	add    ecx,edi
  407791:	xor    ecx,DWORD PTR [eax+edi*1]
  407794:	call   0x403edd
  407799:	mov    eax,DWORD PTR [ebp+0x8]
  40779c:	test   BYTE PTR [eax+0x4],0x66
  4077a0:	jne    0x4078bf
  4077a6:	mov    ecx,DWORD PTR [ebp+0x10]
  4077a9:	lea    edx,[ebp-0x18]
  4077ac:	mov    DWORD PTR [ebx-0x4],edx
  4077af:	mov    ebx,DWORD PTR [ebx+0xc]
  4077b2:	mov    DWORD PTR [ebp-0x18],eax
  4077b5:	mov    DWORD PTR [ebp-0x14],ecx
  4077b8:	cmp    ebx,0xfffffffe
  4077bb:	je     0x40781c
  4077bd:	lea    ecx,[ecx+0x0]
  4077c0:	lea    eax,[ebx+ebx*2]
  4077c3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
  4077c7:	lea    eax,[esi+eax*4+0x10]
  4077cb:	mov    DWORD PTR [ebp-0x10],eax
  4077ce:	mov    eax,DWORD PTR [eax]
  4077d0:	mov    DWORD PTR [ebp-0x8],eax
  4077d3:	test   ecx,ecx
  4077d5:	je     0x4077eb
  4077d7:	mov    edx,edi
  4077d9:	call   0x40df52
  4077de:	mov    BYTE PTR [ebp-0x1],0x1
  4077e2:	test   eax,eax
  4077e4:	js     0x407826
  4077e6:	jg     0x40782f
  4077e8:	mov    eax,DWORD PTR [ebp-0x8]
  4077eb:	mov    ebx,eax
  4077ed:	cmp    eax,0xfffffffe
  4077f0:	jne    0x4077c0
  4077f2:	cmp    BYTE PTR [ebp-0x1],0x0
  4077f6:	je     0x40781c
  4077f8:	mov    eax,DWORD PTR [esi]
  4077fa:	cmp    eax,0xfffffffe
  4077fd:	je     0x40780c
  4077ff:	mov    ecx,DWORD PTR [esi+0x4]
  407802:	add    ecx,edi
  407804:	xor    ecx,DWORD PTR [eax+edi*1]
  407807:	call   0x403edd
  40780c:	mov    ecx,DWORD PTR [esi+0xc]
  40780f:	mov    edx,DWORD PTR [esi+0x8]
  407812:	add    ecx,edi
  407814:	xor    ecx,DWORD PTR [edx+edi*1]
  407817:	call   0x403edd
  40781c:	mov    eax,DWORD PTR [ebp-0xc]
  40781f:	pop    edi
  407820:	pop    esi
  407821:	pop    ebx
  407822:	mov    esp,ebp
  407824:	pop    ebp
  407825:	ret    
  407826:	mov    DWORD PTR [ebp-0xc],0x0
  40782d:	jmp    0x4077f8
  40782f:	mov    ecx,DWORD PTR [ebp+0x8]
  407832:	cmp    DWORD PTR [ecx],0xe06d7363
  407838:	jne    0x407863
  40783a:	cmp    DWORD PTR ds:0x44359c,0x0
  407841:	je     0x407863
  407843:	push   0x44359c
  407848:	call   0x40e4c0
  40784d:	add    esp,0x4
  407850:	test   eax,eax
  407852:	je     0x407863
  407854:	mov    edx,DWORD PTR [ebp+0x8]
  407857:	push   0x1
  407859:	push   edx
  40785a:	call   DWORD PTR ds:0x44359c
  407860:	add    esp,0x8
  407863:	mov    ecx,DWORD PTR [ebp+0xc]
  407866:	mov    edx,DWORD PTR [ebp+0x8]
  407869:	call   0x40df82
  40786e:	mov    eax,DWORD PTR [ebp+0xc]
  407871:	cmp    DWORD PTR [eax+0xc],ebx
  407874:	je     0x407888
  407876:	push   0x44b470
  40787b:	push   edi
  40787c:	mov    edx,ebx
  40787e:	mov    ecx,eax
  407880:	call   0x40df9b
  407885:	mov    eax,DWORD PTR [ebp+0xc]
  407888:	mov    ecx,DWORD PTR [ebp-0x8]
  40788b:	mov    DWORD PTR [eax+0xc],ecx
  40788e:	mov    eax,DWORD PTR [esi]
  407890:	cmp    eax,0xfffffffe
  407893:	je     0x4078a2
  407895:	mov    ecx,DWORD PTR [esi+0x4]
  407898:	add    ecx,edi
  40789a:	xor    ecx,DWORD PTR [eax+edi*1]
  40789d:	call   0x403edd
  4078a2:	mov    ecx,DWORD PTR [esi+0xc]
  4078a5:	mov    edx,DWORD PTR [esi+0x8]
  4078a8:	add    ecx,edi
  4078aa:	xor    ecx,DWORD PTR [edx+edi*1]
  4078ad:	call   0x403edd
  4078b2:	mov    eax,DWORD PTR [ebp-0x10]
  4078b5:	mov    ecx,DWORD PTR [eax+0x8]
  4078b8:	mov    edx,edi
  4078ba:	call   0x40df69
  4078bf:	mov    edx,0xfffffffe
  4078c4:	cmp    DWORD PTR [ebx+0xc],edx
  4078c7:	je     0x40781c
  4078cd:	push   0x44b470
  4078d2:	push   edi
  4078d3:	mov    ecx,ebx
  4078d5:	call   0x40df9b
  4078da:	jmp    0x4077f8
  4078df:	mov    edi,edi
  4078e1:	push   ebp
  4078e2:	mov    ebp,esp
  4078e4:	mov    edx,DWORD PTR [ebp+0x8]
  4078e7:	push   esi
  4078e8:	push   edi
  4078e9:	test   edx,edx
  4078eb:	je     0x4078f4
  4078ed:	mov    edi,DWORD PTR [ebp+0xc]
  4078f0:	test   edi,edi
  4078f2:	jne    0x407907
  4078f4:	call   0x40769b
  4078f9:	push   0x16
  4078fb:	pop    esi
  4078fc:	mov    DWORD PTR [eax],esi
  4078fe:	call   0x407649
  407903:	mov    eax,esi
  407905:	jmp    0x40793a
  407907:	mov    eax,DWORD PTR [ebp+0x10]
  40790a:	test   eax,eax
  40790c:	jne    0x407912
  40790e:	mov    BYTE PTR [edx],al
  407910:	jmp    0x4078f4
  407912:	mov    esi,edx
  407914:	sub    esi,eax
  407916:	mov    cl,BYTE PTR [eax]
  407918:	mov    BYTE PTR [esi+eax*1],cl
  40791b:	inc    eax
  40791c:	test   cl,cl
  40791e:	je     0x407923
  407920:	dec    edi
  407921:	jne    0x407916
  407923:	test   edi,edi
  407925:	jne    0x407938
  407927:	mov    BYTE PTR [edx],0x0
  40792a:	call   0x40769b
  40792f:	push   0x22
  407931:	pop    ecx
  407932:	mov    DWORD PTR [eax],ecx
  407934:	mov    esi,ecx
  407936:	jmp    0x4078fe
  407938:	xor    eax,eax
  40793a:	pop    edi
  40793b:	pop    esi
  40793c:	pop    ebp
  40793d:	ret    
  40793e:	push   edi
  40793f:	mov    eax,esi
  407941:	and    eax,0xf
  407944:	test   eax,eax
  407946:	jne    0x407a0d
  40794c:	mov    edx,ecx
  40794e:	and    ecx,0x7f
  407951:	shr    edx,0x7
  407954:	je     0x4079bb
  407956:	jmp    0x40795e
  407958:	lea    ebx,[ebx+0x0]
  40795e:	movdqa xmm0,XMMWORD PTR [esi]
  407962:	movdqa xmm1,XMMWORD PTR [esi+0x10]
  407967:	movdqa xmm2,XMMWORD PTR [esi+0x20]
  40796c:	movdqa xmm3,XMMWORD PTR [esi+0x30]
  407971:	movdqa XMMWORD PTR [edi],xmm0
  407975:	movdqa XMMWORD PTR [edi+0x10],xmm1
  40797a:	movdqa XMMWORD PTR [edi+0x20],xmm2
  40797f:	movdqa XMMWORD PTR [edi+0x30],xmm3
  407984:	movdqa xmm4,XMMWORD PTR [esi+0x40]
  407989:	movdqa xmm5,XMMWORD PTR [esi+0x50]
  40798e:	movdqa xmm6,XMMWORD PTR [esi+0x60]
  407993:	movdqa xmm7,XMMWORD PTR [esi+0x70]
  407998:	movdqa XMMWORD PTR [edi+0x40],xmm4
  40799d:	movdqa XMMWORD PTR [edi+0x50],xmm5
  4079a2:	movdqa XMMWORD PTR [edi+0x60],xmm6
  4079a7:	movdqa XMMWORD PTR [edi+0x70],xmm7
  4079ac:	lea    esi,[esi+0x80]
  4079b2:	lea    edi,[edi+0x80]
  4079b8:	dec    edx
  4079b9:	jne    0x40795e
  4079bb:	test   ecx,ecx
  4079bd:	je     0x407a08
  4079bf:	mov    edx,ecx
  4079c1:	shr    edx,0x4
  4079c4:	test   edx,edx
  4079c6:	je     0x4079df
  4079c8:	lea    ebx,[ebx+0x0]
  4079ce:	movdqa xmm0,XMMWORD PTR [esi]
  4079d2:	movdqa XMMWORD PTR [edi],xmm0
  4079d6:	lea    esi,[esi+0x10]
  4079d9:	lea    edi,[edi+0x10]
  4079dc:	dec    edx
  4079dd:	jne    0x4079ce
  4079df:	and    ecx,0xf
  4079e2:	je     0x407a08
  4079e4:	mov    eax,ecx
  4079e6:	shr    ecx,0x2
  4079e9:	je     0x4079f8
  4079eb:	mov    edx,DWORD PTR [esi]
  4079ed:	mov    DWORD PTR [edi],edx
  4079ef:	lea    esi,[esi+0x4]
  4079f2:	lea    edi,[edi+0x4]
  4079f5:	dec    ecx
  4079f6:	jne    0x4079eb
  4079f8:	mov    ecx,eax
  4079fa:	and    ecx,0x3
  4079fd:	je     0x407a08
  4079ff:	mov    al,BYTE PTR [esi]
  407a01:	mov    BYTE PTR [edi],al
  407a03:	inc    esi
  407a04:	inc    edi
  407a05:	dec    ecx
  407a06:	jne    0x4079ff
  407a08:	pop    eax
  407a09:	pop    esi
  407a0a:	pop    edi
  407a0b:	pop    ebp
  407a0c:	ret    
  407a0d:	mov    edx,0x10
  407a12:	sub    edx,eax
  407a14:	sub    ecx,edx
  407a16:	push   ecx
  407a17:	mov    eax,edx
  407a19:	mov    ecx,eax
  407a1b:	and    ecx,0x3
  407a1e:	je     0x407a29
  407a20:	mov    dl,BYTE PTR [esi]
  407a22:	mov    BYTE PTR [edi],dl
  407a24:	inc    esi
  407a25:	inc    edi
  407a26:	dec    ecx
  407a27:	jne    0x407a20
  407a29:	shr    eax,0x2
  407a2c:	je     0x407a3b
  407a2e:	mov    edx,DWORD PTR [esi]
  407a30:	mov    DWORD PTR [edi],edx
  407a32:	lea    esi,[esi+0x4]
  407a35:	lea    edi,[edi+0x4]
  407a38:	dec    eax
  407a39:	jne    0x407a2e
  407a3b:	pop    ecx
  407a3c:	jmp    0x40794c
  407a41:	push   0xa
  407a43:	call   DWORD PTR ds:0x443158
  407a49:	mov    ds:0x45077c,eax
  407a4e:	xor    eax,eax
  407a50:	ret    
  407a51:	push   0x0
  407a53:	push   0x1000
  407a58:	push   0x0
  407a5a:	call   DWORD PTR ds:0x443138
  407a60:	xor    ecx,ecx
  407a62:	test   eax,eax
  407a64:	setne  cl
  407a67:	mov    ds:0x44dde8,eax
  407a6c:	mov    eax,ecx
  407a6e:	ret    
  407a6f:	push   0x10
  407a71:	push   0x449290
  407a76:	call   0x4076f0
  407a7b:	xor    ebx,ebx
  407a7d:	mov    DWORD PTR [ebp-0x1c],ebx
  407a80:	push   0x1
  407a82:	call   0x407f70
  407a87:	pop    ecx
  407a88:	mov    DWORD PTR [ebp-0x4],ebx
  407a8b:	push   0x3
  407a8d:	pop    edi
  407a8e:	mov    DWORD PTR [ebp-0x20],edi
  407a91:	cmp    edi,DWORD PTR ds:0x4518c0
  407a97:	jge    0x407aed
  407a99:	mov    esi,edi
  407a9b:	mov    eax,ds:0x4508a8
  407aa0:	cmp    DWORD PTR [eax+esi*4],ebx
  407aa3:	je     0x407aea
  407aa5:	mov    eax,DWORD PTR [eax+esi*4]
  407aa8:	test   BYTE PTR [eax+0xc],0x83
  407aac:	je     0x407abd
  407aae:	push   eax
  407aaf:	call   0x405137
  407ab4:	pop    ecx
  407ab5:	cmp    eax,0xffffffff
  407ab8:	je     0x407abd
  407aba:	inc    DWORD PTR [ebp-0x1c]
  407abd:	cmp    edi,0x14
  407ac0:	jl     0x407aea
  407ac2:	mov    eax,ds:0x4508a8
  407ac7:	mov    eax,DWORD PTR [eax+esi*4]
  407aca:	add    eax,0x20
  407acd:	push   eax
  407ace:	call   DWORD PTR ds:0x4431d4
  407ad4:	mov    eax,ds:0x4508a8
  407ad9:	push   DWORD PTR [eax+esi*4]
  407adc:	call   0x404391
  407ae1:	pop    ecx
  407ae2:	mov    eax,ds:0x4508a8
  407ae7:	mov    DWORD PTR [eax+esi*4],ebx
  407aea:	inc    edi
  407aeb:	jmp    0x407a8e
  407aed:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  407af4:	call   0x407b02
  407af9:	mov    eax,DWORD PTR [ebp-0x1c]
  407afc:	call   0x407735
  407b01:	ret    
  407b02:	push   0x1
  407b04:	call   0x407e97
  407b09:	pop    ecx
  407b0a:	ret    
  407b0b:	mov    edi,edi
  407b0d:	push   ebp
  407b0e:	mov    ebp,esp
  407b10:	push   0x443de0
  407b15:	call   DWORD PTR ds:0x443150
  407b1b:	test   eax,eax
  407b1d:	je     0x407b34
  407b1f:	push   0x443dd0
  407b24:	push   eax
  407b25:	call   DWORD PTR ds:0x443154
  407b2b:	test   eax,eax
  407b2d:	je     0x407b34
  407b2f:	push   DWORD PTR [ebp+0x8]
  407b32:	call   eax
  407b34:	pop    ebp
  407b35:	ret    
  407b36:	mov    edi,edi
  407b38:	push   ebp
  407b39:	mov    ebp,esp
  407b3b:	push   DWORD PTR [ebp+0x8]
  407b3e:	call   0x407b0b
  407b43:	pop    ecx
  407b44:	push   DWORD PTR [ebp+0x8]
  407b47:	call   DWORD PTR ds:0x44314c
  407b4d:	int3   
  407b4e:	push   0x8
  407b50:	call   0x407f70
  407b55:	pop    ecx
  407b56:	ret    
  407b57:	push   0x8
  407b59:	call   0x407e97
  407b5e:	pop    ecx
  407b5f:	ret    
  407b60:	mov    edi,edi
  407b62:	push   esi
  407b63:	call   0x40c75a
  407b68:	mov    esi,eax
  407b6a:	push   esi
  407b6b:	call   0x40bf08
  407b70:	push   esi
  407b71:	call   0x4074bf
  407b76:	push   esi
  407b77:	call   0x40cc69
  407b7c:	push   esi
  407b7d:	call   0x40e57c
  407b82:	push   esi
  407b83:	call   0x40e1bf
  407b88:	push   esi
  407b89:	call   0x408b0b
  407b8e:	add    esp,0x18
  407b91:	pop    esi
  407b92:	ret    
  407b93:	mov    edi,edi
  407b95:	push   ebp
  407b96:	mov    ebp,esp
  407b98:	push   esi
  407b99:	mov    esi,DWORD PTR [ebp+0x8]
  407b9c:	xor    eax,eax
  407b9e:	jmp    0x407baf
  407ba0:	test   eax,eax
  407ba2:	jne    0x407bb4
  407ba4:	mov    ecx,DWORD PTR [esi]
  407ba6:	test   ecx,ecx
  407ba8:	je     0x407bac
  407baa:	call   ecx
  407bac:	add    esi,0x4
  407baf:	cmp    esi,DWORD PTR [ebp+0xc]
  407bb2:	jb     0x407ba0
  407bb4:	pop    esi
  407bb5:	pop    ebp
  407bb6:	ret    
  407bb7:	mov    edi,edi
  407bb9:	push   ebp
  407bba:	mov    ebp,esp
  407bbc:	cmp    DWORD PTR ds:0x443f34,0x0
  407bc3:	je     0x407bde
  407bc5:	push   0x443f34
  407bca:	call   0x40e4c0
  407bcf:	pop    ecx
  407bd0:	test   eax,eax
  407bd2:	je     0x407bde
  407bd4:	push   DWORD PTR [ebp+0x8]
  407bd7:	call   DWORD PTR ds:0x443f34
  407bdd:	pop    ecx
  407bde:	call   0x40e58b
  407be3:	push   0x443328
  407be8:	push   0x44330c
  407bed:	call   0x407b93
  407bf2:	pop    ecx
  407bf3:	pop    ecx
  407bf4:	test   eax,eax
  407bf6:	jne    0x407c4c
  407bf8:	push   esi
  407bf9:	push   edi
  407bfa:	push   0x40c734
  407bff:	call   0x404a23
  407c04:	mov    eax,0x4432e4
  407c09:	mov    esi,0x443308
  407c0e:	pop    ecx
  407c0f:	mov    edi,eax
  407c11:	cmp    eax,esi
  407c13:	jae    0x407c24
  407c15:	mov    eax,DWORD PTR [edi]
  407c17:	test   eax,eax
  407c19:	je     0x407c1d
  407c1b:	call   eax
  407c1d:	add    edi,0x4
  407c20:	cmp    edi,esi
  407c22:	jb     0x407c15
  407c24:	cmp    DWORD PTR ds:0x450778,0x0
  407c2b:	pop    edi
  407c2c:	pop    esi
  407c2d:	je     0x407c4a
  407c2f:	push   0x450778
  407c34:	call   0x40e4c0
  407c39:	pop    ecx
  407c3a:	test   eax,eax
  407c3c:	je     0x407c4a
  407c3e:	push   0x0
  407c40:	push   0x2
  407c42:	push   0x0
  407c44:	call   DWORD PTR ds:0x450778
  407c4a:	xor    eax,eax
  407c4c:	pop    ebp
  407c4d:	ret    
  407c4e:	push   0x20
  407c50:	push   0x4492b0
  407c55:	call   0x4076f0
  407c5a:	push   0x8
  407c5c:	call   0x407f70
  407c61:	pop    ecx
  407c62:	and    DWORD PTR [ebp-0x4],0x0
  407c66:	xor    eax,eax
  407c68:	inc    eax
  407c69:	cmp    DWORD PTR ds:0x44de1c,eax
  407c6f:	je     0x407d4d
  407c75:	mov    ds:0x44de18,eax
  407c7a:	mov    al,BYTE PTR [ebp+0x10]
  407c7d:	mov    ds:0x44de14,al
  407c82:	cmp    DWORD PTR [ebp+0xc],0x0
  407c86:	jne    0x407d2c
  407c8c:	push   DWORD PTR ds:0x450770
  407c92:	mov    esi,DWORD PTR ds:0x4431c8
  407c98:	call   esi
  407c9a:	mov    ebx,eax
  407c9c:	mov    DWORD PTR [ebp-0x30],ebx
  407c9f:	test   ebx,ebx
  407ca1:	je     0x407d0b
  407ca3:	push   DWORD PTR ds:0x45076c
  407ca9:	call   esi
  407cab:	mov    edi,eax
  407cad:	mov    DWORD PTR [ebp-0x2c],edi
  407cb0:	mov    DWORD PTR [ebp-0x24],ebx
  407cb3:	mov    DWORD PTR [ebp-0x28],edi
  407cb6:	sub    edi,0x4
  407cb9:	mov    DWORD PTR [ebp-0x2c],edi
  407cbc:	cmp    edi,ebx
  407cbe:	jb     0x407d0b
  407cc0:	call   0x40c75a
  407cc5:	cmp    DWORD PTR [edi],eax
  407cc7:	je     0x407cb6
  407cc9:	cmp    edi,ebx
  407ccb:	jb     0x407d0b
  407ccd:	push   DWORD PTR [edi]
  407ccf:	call   esi
  407cd1:	mov    ebx,eax
  407cd3:	call   0x40c75a
  407cd8:	mov    DWORD PTR [edi],eax
  407cda:	call   ebx
  407cdc:	push   DWORD PTR ds:0x450770
  407ce2:	call   esi
  407ce4:	mov    ebx,eax
  407ce6:	push   DWORD PTR ds:0x45076c
  407cec:	call   esi
  407cee:	cmp    DWORD PTR [ebp-0x24],ebx
  407cf1:	jne    0x407cf8
  407cf3:	cmp    DWORD PTR [ebp-0x28],eax
  407cf6:	je     0x407d06
  407cf8:	mov    DWORD PTR [ebp-0x24],ebx
  407cfb:	mov    DWORD PTR [ebp-0x30],ebx
  407cfe:	mov    DWORD PTR [ebp-0x28],eax
  407d01:	mov    edi,eax
  407d03:	mov    DWORD PTR [ebp-0x2c],edi
  407d06:	mov    ebx,DWORD PTR [ebp-0x30]
  407d09:	jmp    0x407cb6
  407d0b:	mov    DWORD PTR [ebp-0x1c],0x44332c
  407d12:	cmp    DWORD PTR [ebp-0x1c],0x443338
  407d19:	jae    0x407d2c
  407d1b:	mov    eax,DWORD PTR [ebp-0x1c]
  407d1e:	mov    eax,DWORD PTR [eax]
  407d20:	test   eax,eax
  407d22:	je     0x407d26
  407d24:	call   eax
  407d26:	add    DWORD PTR [ebp-0x1c],0x4
  407d2a:	jmp    0x407d12
  407d2c:	mov    DWORD PTR [ebp-0x20],0x44333c
  407d33:	cmp    DWORD PTR [ebp-0x20],0x443340
  407d3a:	jae    0x407d4d
  407d3c:	mov    eax,DWORD PTR [ebp-0x20]
  407d3f:	mov    eax,DWORD PTR [eax]
  407d41:	test   eax,eax
  407d43:	je     0x407d47
  407d45:	call   eax
  407d47:	add    DWORD PTR [ebp-0x20],0x4
  407d4b:	jmp    0x407d33
  407d4d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  407d54:	call   0x407d79
  407d59:	cmp    DWORD PTR [ebp+0x10],0x0
  407d5d:	jne    0x407d88
  407d5f:	mov    DWORD PTR ds:0x44de1c,0x1
  407d69:	push   0x8
  407d6b:	call   0x407e97
  407d70:	pop    ecx
  407d71:	push   DWORD PTR [ebp+0x8]
  407d74:	call   0x407b36
  407d79:	cmp    DWORD PTR [ebp+0x10],0x0
  407d7d:	je     0x407d87
  407d7f:	push   0x8
  407d81:	call   0x407e97
  407d86:	pop    ecx
  407d87:	ret    
  407d88:	call   0x407735
  407d8d:	ret    
  407d8e:	mov    edi,edi
  407d90:	push   ebp
  407d91:	mov    ebp,esp
  407d93:	push   0x0
  407d95:	push   0x0
  407d97:	push   DWORD PTR [ebp+0x8]
  407d9a:	call   0x407c4e
  407d9f:	add    esp,0xc
  407da2:	pop    ebp
  407da3:	ret    
  407da4:	mov    edi,edi
  407da6:	push   ebp
  407da7:	mov    ebp,esp
  407da9:	push   0x0
  407dab:	push   0x1
  407dad:	push   DWORD PTR [ebp+0x8]
  407db0:	call   0x407c4e
  407db5:	add    esp,0xc
  407db8:	pop    ebp
  407db9:	ret    
  407dba:	push   0x1
  407dbc:	push   0x0
  407dbe:	push   0x0
  407dc0:	call   0x407c4e
  407dc5:	add    esp,0xc
  407dc8:	ret    
  407dc9:	push   0x1
  407dcb:	push   0x1
  407dcd:	push   0x0
  407dcf:	call   0x407c4e
  407dd4:	add    esp,0xc
  407dd7:	ret    
  407dd8:	mov    edi,edi
  407dda:	push   ebp
  407ddb:	mov    ebp,esp
  407ddd:	call   0x40c164
  407de2:	push   DWORD PTR [ebp+0x8]
  407de5:	call   0x40bfb5
  407dea:	pop    ecx
  407deb:	push   0xff
  407df0:	call   0x407da4
  407df5:	int3   
  407df6:	mov    edi,edi
  407df8:	push   esi
  407df9:	push   edi
  407dfa:	xor    esi,esi
  407dfc:	mov    edi,0x44de20
  407e01:	cmp    DWORD PTR [esi*8+0x44b634],0x1
  407e09:	jne    0x407e28
  407e0b:	lea    eax,[esi*8+0x44b630]
  407e12:	mov    DWORD PTR [eax],edi
  407e14:	push   0xfa0
  407e19:	push   DWORD PTR [eax]
  407e1b:	add    edi,0x18
  407e1e:	call   DWORD PTR ds:0x44316c
  407e24:	test   eax,eax
  407e26:	je     0x407e34
  407e28:	inc    esi
  407e29:	cmp    esi,0x24
  407e2c:	jl     0x407e01
  407e2e:	xor    eax,eax
  407e30:	inc    eax
  407e31:	pop    edi
  407e32:	pop    esi
  407e33:	ret    
  407e34:	and    DWORD PTR [esi*8+0x44b630],0x0
  407e3c:	xor    eax,eax
  407e3e:	jmp    0x407e31
  407e40:	mov    edi,edi
  407e42:	push   ebx
  407e43:	mov    ebx,DWORD PTR ds:0x4431d4
  407e49:	push   esi
  407e4a:	mov    esi,0x44b630
  407e4f:	push   edi
  407e50:	mov    edi,DWORD PTR [esi]
  407e52:	test   edi,edi
  407e54:	je     0x407e69
  407e56:	cmp    DWORD PTR [esi+0x4],0x1
  407e5a:	je     0x407e69
  407e5c:	push   edi
  407e5d:	call   ebx
  407e5f:	push   edi
  407e60:	call   0x404391
  407e65:	and    DWORD PTR [esi],0x0
  407e68:	pop    ecx
  407e69:	add    esi,0x8
  407e6c:	cmp    esi,0x44b750
  407e72:	jl     0x407e50
  407e74:	mov    esi,0x44b630
  407e79:	pop    edi
  407e7a:	mov    eax,DWORD PTR [esi]
  407e7c:	test   eax,eax
  407e7e:	je     0x407e89
  407e80:	cmp    DWORD PTR [esi+0x4],0x1
  407e84:	jne    0x407e89
  407e86:	push   eax
  407e87:	call   ebx
  407e89:	add    esi,0x8
  407e8c:	cmp    esi,0x44b750
  407e92:	jl     0x407e7a
  407e94:	pop    esi
  407e95:	pop    ebx
  407e96:	ret    
  407e97:	mov    edi,edi
  407e99:	push   ebp
  407e9a:	mov    ebp,esp
  407e9c:	mov    eax,DWORD PTR [ebp+0x8]
  407e9f:	push   DWORD PTR [eax*8+0x44b630]
  407ea6:	call   DWORD PTR ds:0x4431b8
  407eac:	pop    ebp
  407ead:	ret    
  407eae:	push   0xc
  407eb0:	push   0x4492d0
  407eb5:	call   0x4076f0
  407eba:	xor    edi,edi
  407ebc:	inc    edi
  407ebd:	mov    DWORD PTR [ebp-0x1c],edi
  407ec0:	xor    ebx,ebx
  407ec2:	cmp    DWORD PTR ds:0x44dde8,ebx
  407ec8:	jne    0x407ee2
  407eca:	call   0x40c164
  407ecf:	push   0x1e
  407ed1:	call   0x40bfb5
  407ed6:	push   0xff
  407edb:	call   0x407b36
  407ee0:	pop    ecx
  407ee1:	pop    ecx
  407ee2:	mov    esi,DWORD PTR [ebp+0x8]
  407ee5:	lea    esi,[esi*8+0x44b630]
  407eec:	cmp    DWORD PTR [esi],ebx
  407eee:	je     0x407ef4
  407ef0:	mov    eax,edi
  407ef2:	jmp    0x407f61
  407ef4:	push   0x18
  407ef6:	call   0x406e65
  407efb:	pop    ecx
  407efc:	mov    edi,eax
  407efe:	cmp    edi,ebx
  407f00:	jne    0x407f11
  407f02:	call   0x40769b
  407f07:	mov    DWORD PTR [eax],0xc
  407f0d:	xor    eax,eax
  407f0f:	jmp    0x407f61
  407f11:	push   0xa
  407f13:	call   0x407f70
  407f18:	pop    ecx
  407f19:	mov    DWORD PTR [ebp-0x4],ebx
  407f1c:	cmp    DWORD PTR [esi],ebx
  407f1e:	jne    0x407f4b
  407f20:	push   0xfa0
  407f25:	push   edi
  407f26:	call   DWORD PTR ds:0x44316c
  407f2c:	test   eax,eax
  407f2e:	jne    0x407f47
  407f30:	push   edi
  407f31:	call   0x404391
  407f36:	pop    ecx
  407f37:	call   0x40769b
  407f3c:	mov    DWORD PTR [eax],0xc
  407f42:	mov    DWORD PTR [ebp-0x1c],ebx
  407f45:	jmp    0x407f52
  407f47:	mov    DWORD PTR [esi],edi
  407f49:	jmp    0x407f52
  407f4b:	push   edi
  407f4c:	call   0x404391
  407f51:	pop    ecx
  407f52:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  407f59:	call   0x407f67
  407f5e:	mov    eax,DWORD PTR [ebp-0x1c]
  407f61:	call   0x407735
  407f66:	ret    
  407f67:	push   0xa
  407f69:	call   0x407e97
  407f6e:	pop    ecx
  407f6f:	ret    
  407f70:	mov    edi,edi
  407f72:	push   ebp
  407f73:	mov    ebp,esp
  407f75:	mov    eax,DWORD PTR [ebp+0x8]
  407f78:	push   esi
  407f79:	lea    esi,[eax*8+0x44b630]
  407f80:	cmp    DWORD PTR [esi],0x0
  407f83:	jne    0x407f98
  407f85:	push   eax
  407f86:	call   0x407eae
  407f8b:	pop    ecx
  407f8c:	test   eax,eax
  407f8e:	jne    0x407f98
  407f90:	push   0x11
  407f92:	call   0x407dd8
  407f97:	pop    ecx
  407f98:	push   DWORD PTR [esi]
  407f9a:	call   DWORD PTR ds:0x4431d8
  407fa0:	pop    esi
  407fa1:	pop    ebp
  407fa2:	ret    
  407fa3:	mov    edi,edi
  407fa5:	push   ebp
  407fa6:	mov    ebp,esp
  407fa8:	mov    ecx,DWORD PTR [ebp+0x8]
  407fab:	test   ecx,ecx
  407fad:	je     0x407fca
  407faf:	push   0xffffffe0
  407fb1:	xor    edx,edx
  407fb3:	pop    eax
  407fb4:	div    ecx
  407fb6:	cmp    eax,DWORD PTR [ebp+0xc]
  407fb9:	jae    0x407fca
  407fbb:	call   0x40769b
  407fc0:	mov    DWORD PTR [eax],0xc
  407fc6:	xor    eax,eax
  407fc8:	pop    ebp
  407fc9:	ret    
  407fca:	imul   ecx,DWORD PTR [ebp+0xc]
  407fce:	push   esi
  407fcf:	mov    esi,ecx
  407fd1:	test   esi,esi
  407fd3:	jne    0x407fd6
  407fd5:	inc    esi
  407fd6:	xor    eax,eax
  407fd8:	cmp    esi,0xffffffe0
  407fdb:	ja     0x407ff0
  407fdd:	push   esi
  407fde:	push   0x8
  407fe0:	push   DWORD PTR ds:0x44dde8
  407fe6:	call   DWORD PTR ds:0x44313c
  407fec:	test   eax,eax
  407fee:	jne    0x408022
  407ff0:	cmp    DWORD PTR ds:0x44e7b0,0x0
  407ff7:	je     0x408015
  407ff9:	push   esi
  407ffa:	call   0x40bf17
  407fff:	pop    ecx
  408000:	test   eax,eax
  408002:	jne    0x407fd6
  408004:	mov    eax,DWORD PTR [ebp+0x10]
  408007:	test   eax,eax
  408009:	je     0x408011
  40800b:	mov    DWORD PTR [eax],0xc
  408011:	xor    eax,eax
  408013:	jmp    0x408022
  408015:	mov    ecx,DWORD PTR [ebp+0x10]
  408018:	test   ecx,ecx
  40801a:	je     0x408022
  40801c:	mov    DWORD PTR [ecx],0xc
  408022:	pop    esi
  408023:	pop    ebp
  408024:	ret    
  408025:	mov    edi,edi
  408027:	push   ebp
  408028:	mov    ebp,esp
  40802a:	inc    DWORD PTR ds:0x44da98
  408030:	push   0x1000
  408035:	call   0x406e65
  40803a:	pop    ecx
  40803b:	mov    ecx,DWORD PTR [ebp+0x8]
  40803e:	mov    DWORD PTR [ecx+0x8],eax
  408041:	test   eax,eax
  408043:	je     0x408052
  408045:	or     DWORD PTR [ecx+0xc],0x8
  408049:	mov    DWORD PTR [ecx+0x18],0x1000
  408050:	jmp    0x408063
  408052:	or     DWORD PTR [ecx+0xc],0x4
  408056:	lea    eax,[ecx+0x14]
  408059:	mov    DWORD PTR [ecx+0x8],eax
  40805c:	mov    DWORD PTR [ecx+0x18],0x2
  408063:	mov    eax,DWORD PTR [ecx+0x8]
  408066:	and    DWORD PTR [ecx+0x4],0x0
  40806a:	mov    DWORD PTR [ecx],eax
  40806c:	pop    ebp
  40806d:	ret    
  40806e:	mov    edi,edi
  408070:	push   ebp
  408071:	mov    ebp,esp
  408073:	push   ecx
  408074:	push   ecx
  408075:	mov    eax,DWORD PTR [ebp+0xc]
  408078:	push   esi
  408079:	mov    esi,DWORD PTR [ebp+0x8]
  40807c:	mov    DWORD PTR [ebp-0x8],eax
  40807f:	mov    eax,DWORD PTR [ebp+0x10]
  408082:	push   edi
  408083:	push   esi
  408084:	mov    DWORD PTR [ebp-0x4],eax
  408087:	call   0x40e661
  40808c:	or     edi,0xffffffff
  40808f:	pop    ecx
  408090:	cmp    eax,edi
  408092:	jne    0x4080a5
  408094:	call   0x40769b
  408099:	mov    DWORD PTR [eax],0x9
  40809f:	mov    eax,edi
  4080a1:	mov    edx,edi
  4080a3:	jmp    0x4080ef
  4080a5:	push   DWORD PTR [ebp+0x14]
  4080a8:	lea    ecx,[ebp-0x4]
  4080ab:	push   ecx
  4080ac:	push   DWORD PTR [ebp-0x8]
  4080af:	push   eax
  4080b0:	call   DWORD PTR ds:0x443148
  4080b6:	mov    DWORD PTR [ebp-0x8],eax
  4080b9:	cmp    eax,edi
  4080bb:	jne    0x4080d0
  4080bd:	call   DWORD PTR ds:0x443120
  4080c3:	test   eax,eax
  4080c5:	je     0x4080d0
  4080c7:	push   eax
  4080c8:	call   0x4076c1
  4080cd:	pop    ecx
  4080ce:	jmp    0x40809f
  4080d0:	mov    eax,esi
  4080d2:	sar    eax,0x5
  4080d5:	mov    eax,DWORD PTR [eax*4+0x4507a0]
  4080dc:	and    esi,0x1f
  4080df:	shl    esi,0x6
  4080e2:	lea    eax,[eax+esi*1+0x4]
  4080e6:	and    BYTE PTR [eax],0xfd
  4080e9:	mov    eax,DWORD PTR [ebp-0x8]
  4080ec:	mov    edx,DWORD PTR [ebp-0x4]
  4080ef:	pop    edi
  4080f0:	pop    esi
  4080f1:	leave  
  4080f2:	ret    
  4080f3:	push   0x14
  4080f5:	push   0x4492f0
  4080fa:	call   0x4076f0
  4080ff:	or     ebx,0xffffffff
  408102:	mov    DWORD PTR [ebp-0x24],ebx
  408105:	mov    DWORD PTR [ebp-0x20],ebx
  408108:	mov    eax,DWORD PTR [ebp+0x8]
  40810b:	cmp    eax,0xfffffffe
  40810e:	jne    0x40812c
  408110:	call   0x4076ae
  408115:	and    DWORD PTR [eax],0x0
  408118:	call   0x40769b
  40811d:	mov    DWORD PTR [eax],0x9
  408123:	mov    eax,ebx
  408125:	mov    edx,ebx
  408127:	jmp    0x4081cd
  40812c:	test   eax,eax
  40812e:	js     0x408138
  408130:	cmp    eax,DWORD PTR ds:0x450780
  408136:	jb     0x408152
  408138:	call   0x4076ae
  40813d:	and    DWORD PTR [eax],0x0
  408140:	call   0x40769b
  408145:	mov    DWORD PTR [eax],0x9
  40814b:	call   0x407649
  408150:	jmp    0x408123
  408152:	mov    ecx,eax
  408154:	sar    ecx,0x5
  408157:	lea    edi,[ecx*4+0x4507a0]
  40815e:	mov    esi,eax
  408160:	and    esi,0x1f
  408163:	shl    esi,0x6
  408166:	mov    ecx,DWORD PTR [edi]
  408168:	movsx  ecx,BYTE PTR [ecx+esi*1+0x4]
  40816d:	and    ecx,0x1
  408170:	je     0x408138
  408172:	push   eax
  408173:	call   0x40e6ca
  408178:	pop    ecx
  408179:	and    DWORD PTR [ebp-0x4],0x0
  40817d:	mov    eax,DWORD PTR [edi]
  40817f:	test   BYTE PTR [eax+esi*1+0x4],0x1
  408184:	je     0x4081a2
  408186:	push   DWORD PTR [ebp+0x14]
  408189:	push   DWORD PTR [ebp+0x10]
  40818c:	push   DWORD PTR [ebp+0xc]
  40818f:	push   DWORD PTR [ebp+0x8]
  408192:	call   0x40806e
  408197:	add    esp,0x10
  40819a:	mov    DWORD PTR [ebp-0x24],eax
  40819d:	mov    DWORD PTR [ebp-0x20],edx
  4081a0:	jmp    0x4081bb
  4081a2:	call   0x40769b
  4081a7:	mov    DWORD PTR [eax],0x9
  4081ad:	call   0x4076ae
  4081b2:	and    DWORD PTR [eax],0x0
  4081b5:	mov    DWORD PTR [ebp-0x24],ebx
  4081b8:	mov    DWORD PTR [ebp-0x20],ebx
  4081bb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4081c2:	call   0x4081d3
  4081c7:	mov    eax,DWORD PTR [ebp-0x24]
  4081ca:	mov    edx,DWORD PTR [ebp-0x20]
  4081cd:	call   0x407735
  4081d2:	ret    
  4081d3:	push   DWORD PTR [ebp+0x8]
  4081d6:	call   0x40e769
  4081db:	pop    ecx
  4081dc:	ret    
  4081dd:	mov    edi,edi
  4081df:	push   ebp
  4081e0:	mov    ebp,esp
  4081e2:	mov    eax,0x1ae4
  4081e7:	call   0x40e5b0
  4081ec:	mov    eax,ds:0x44b470
  4081f1:	xor    eax,ebp
  4081f3:	mov    DWORD PTR [ebp-0x4],eax
  4081f6:	mov    eax,DWORD PTR [ebp+0xc]
  4081f9:	push   esi
  4081fa:	mov    esi,DWORD PTR [ebp+0x8]
  4081fd:	push   edi
  4081fe:	xor    edi,edi
  408200:	mov    DWORD PTR [ebp-0x1acc],eax
  408206:	mov    DWORD PTR [ebp-0x1ac8],edi
  40820c:	mov    DWORD PTR [ebp-0x1ad0],edi
  408212:	cmp    DWORD PTR [ebp+0x10],edi
  408215:	jne    0x40821e
  408217:	xor    eax,eax
  408219:	jmp    0x4088cc
  40821e:	cmp    eax,edi
  408220:	jne    0x408241
  408222:	call   0x4076ae
  408227:	mov    DWORD PTR [eax],edi
  408229:	call   0x40769b
  40822e:	mov    DWORD PTR [eax],0x16
  408234:	call   0x407649
  408239:	or     eax,0xffffffff
  40823c:	jmp    0x4088cc
  408241:	mov    eax,esi
  408243:	sar    eax,0x5
  408246:	mov    edi,esi
  408248:	push   ebx
  408249:	lea    ebx,[eax*4+0x4507a0]
  408250:	mov    eax,DWORD PTR [ebx]
  408252:	and    edi,0x1f
  408255:	shl    edi,0x6
  408258:	mov    cl,BYTE PTR [eax+edi*1+0x24]
  40825c:	add    cl,cl
  40825e:	sar    cl,1
  408260:	mov    DWORD PTR [ebp-0x1adc],ebx
  408266:	mov    BYTE PTR [ebp-0x1ac1],cl
  40826c:	cmp    cl,0x2
  40826f:	je     0x408276
  408271:	cmp    cl,0x1
  408274:	jne    0x40829d
  408276:	mov    ecx,DWORD PTR [ebp+0x10]
  408279:	not    ecx
  40827b:	test   cl,0x1
  40827e:	jne    0x40829d
  408280:	call   0x4076ae
  408285:	and    DWORD PTR [eax],0x0
  408288:	call   0x40769b
  40828d:	mov    DWORD PTR [eax],0x16
  408293:	call   0x407649
  408298:	jmp    0x4088ba
  40829d:	test   BYTE PTR [eax+edi*1+0x4],0x20
  4082a2:	je     0x4082b3
  4082a4:	push   0x2
  4082a6:	push   0x0
  4082a8:	push   0x0
  4082aa:	push   esi
  4082ab:	call   0x40806e
  4082b0:	add    esp,0x10
  4082b3:	push   esi
  4082b4:	call   0x40e3cc
  4082b9:	pop    ecx
  4082ba:	test   eax,eax
  4082bc:	je     0x40855b
  4082c2:	mov    eax,DWORD PTR [ebx]
  4082c4:	test   BYTE PTR [edi+eax*1+0x4],0x80
  4082c9:	je     0x40855b
  4082cf:	call   0x40c90a
  4082d4:	mov    eax,DWORD PTR [eax+0x6c]
  4082d7:	xor    ecx,ecx
  4082d9:	cmp    DWORD PTR [eax+0x14],ecx
  4082dc:	lea    eax,[ebp-0x1ae0]
  4082e2:	sete   cl
  4082e5:	push   eax
  4082e6:	mov    eax,DWORD PTR [ebx]
  4082e8:	push   DWORD PTR [edi+eax*1]
  4082eb:	mov    esi,ecx
  4082ed:	call   DWORD PTR ds:0x44310c
  4082f3:	xor    ecx,ecx
  4082f5:	cmp    eax,ecx
  4082f7:	je     0x40855d
  4082fd:	cmp    esi,ecx
  4082ff:	je     0x40830d
  408301:	cmp    BYTE PTR [ebp-0x1ac1],cl
  408307:	je     0x40855d
  40830d:	call   DWORD PTR ds:0x443140
  408313:	mov    ebx,DWORD PTR [ebp-0x1acc]
  408319:	mov    DWORD PTR [ebp-0x1ae0],eax
  40831f:	xor    eax,eax
  408321:	mov    DWORD PTR [ebp-0x1ad4],eax
  408327:	cmp    DWORD PTR [ebp+0x10],eax
  40832a:	jbe    0x408853
  408330:	mov    DWORD PTR [ebp-0x1ac0],eax
  408336:	mov    al,BYTE PTR [ebp-0x1ac1]
  40833c:	test   al,al
  40833e:	jne    0x4084ab
  408344:	mov    cl,BYTE PTR [ebx]
  408346:	mov    esi,DWORD PTR [ebp-0x1adc]
  40834c:	xor    eax,eax
  40834e:	cmp    cl,0xa
  408351:	sete   al
  408354:	mov    DWORD PTR [ebp-0x1ae4],eax
  40835a:	mov    eax,DWORD PTR [esi]
  40835c:	add    eax,edi
  40835e:	cmp    DWORD PTR [eax+0x38],0x0
  408362:	je     0x408379
  408364:	mov    dl,BYTE PTR [eax+0x34]
  408367:	mov    BYTE PTR [ebp-0xc],dl
  40836a:	mov    BYTE PTR [ebp-0xb],cl
  40836d:	and    DWORD PTR [eax+0x38],0x0
  408371:	push   0x2
  408373:	lea    eax,[ebp-0xc]
  408376:	push   eax
  408377:	jmp    0x4083c4
  408379:	movsx  eax,cl
  40837c:	push   eax
  40837d:	call   0x40e93a
  408382:	pop    ecx
  408383:	test   eax,eax
  408385:	je     0x4083c1
  408387:	mov    ecx,DWORD PTR [ebp-0x1acc]
  40838d:	sub    ecx,ebx
  40838f:	add    ecx,DWORD PTR [ebp+0x10]
  408392:	xor    eax,eax
  408394:	inc    eax
  408395:	cmp    ecx,eax
  408397:	jbe    0x408542
  40839d:	push   0x2
  40839f:	lea    eax,[ebp-0x1abc]
  4083a5:	push   ebx
  4083a6:	push   eax
  4083a7:	call   0x40e8e8
  4083ac:	add    esp,0xc
  4083af:	cmp    eax,0xffffffff
  4083b2:	je     0x40884a
  4083b8:	inc    ebx
  4083b9:	inc    DWORD PTR [ebp-0x1ac0]
  4083bf:	jmp    0x4083dc
  4083c1:	push   0x1
  4083c3:	push   ebx
  4083c4:	lea    eax,[ebp-0x1abc]
  4083ca:	push   eax
  4083cb:	call   0x40e8e8
  4083d0:	add    esp,0xc
  4083d3:	cmp    eax,0xffffffff
  4083d6:	je     0x40884a
  4083dc:	xor    eax,eax
  4083de:	push   eax
  4083df:	push   eax
  4083e0:	push   0x5
  4083e2:	lea    ecx,[ebp-0xc]
  4083e5:	push   ecx
  4083e6:	push   0x1
  4083e8:	lea    ecx,[ebp-0x1abc]
  4083ee:	push   ecx
  4083ef:	push   eax
  4083f0:	push   DWORD PTR [ebp-0x1ae0]
  4083f6:	inc    ebx
  4083f7:	inc    DWORD PTR [ebp-0x1ac0]
  4083fd:	call   DWORD PTR ds:0x443198
  408403:	mov    esi,eax
  408405:	test   esi,esi
  408407:	je     0x40884a
  40840d:	push   0x0
  40840f:	lea    eax,[ebp-0x1ad4]
  408415:	push   eax
  408416:	push   esi
  408417:	lea    eax,[ebp-0xc]
  40841a:	push   eax
  40841b:	mov    eax,DWORD PTR [ebp-0x1adc]
  408421:	mov    eax,DWORD PTR [eax]
  408423:	push   DWORD PTR [edi+eax*1]
  408426:	call   DWORD PTR ds:0x443144
  40842c:	test   eax,eax
  40842e:	je     0x40883e
  408434:	mov    eax,DWORD PTR [ebp-0x1ac0]
  40843a:	mov    ecx,DWORD PTR [ebp-0x1ad0]
  408440:	add    eax,ecx
  408442:	mov    DWORD PTR [ebp-0x1ac8],eax
  408448:	cmp    DWORD PTR [ebp-0x1ad4],esi
  40844e:	jl     0x40884a
  408454:	cmp    DWORD PTR [ebp-0x1ae4],0x0
  40845b:	je     0x40852e
  408461:	push   0x0
  408463:	lea    eax,[ebp-0x1ad4]
  408469:	push   eax
  40846a:	push   0x1
  40846c:	lea    eax,[ebp-0xc]
  40846f:	push   eax
  408470:	mov    eax,DWORD PTR [ebp-0x1adc]
  408476:	mov    eax,DWORD PTR [eax]
  408478:	mov    BYTE PTR [ebp-0xc],0xd
  40847c:	push   DWORD PTR [edi+eax*1]
  40847f:	call   DWORD PTR ds:0x443144
  408485:	test   eax,eax
  408487:	je     0x40883e
  40848d:	cmp    DWORD PTR [ebp-0x1ad4],0x1
  408494:	jl     0x40884a
  40849a:	inc    DWORD PTR [ebp-0x1ad0]
  4084a0:	inc    DWORD PTR [ebp-0x1ac8]
  4084a6:	jmp    0x40852e
  4084ab:	cmp    al,0x1
  4084ad:	je     0x4084b3
  4084af:	cmp    al,0x2
  4084b1:	jne    0x4084d4
  4084b3:	movzx  esi,WORD PTR [ebx]
  4084b6:	xor    ecx,ecx
  4084b8:	cmp    esi,0xa
  4084bb:	sete   cl
  4084be:	add    ebx,0x2
  4084c1:	add    DWORD PTR [ebp-0x1ac0],0x2
  4084c8:	mov    DWORD PTR [ebp-0x1abc],esi
  4084ce:	mov    DWORD PTR [ebp-0x1ae4],ecx
  4084d4:	cmp    al,0x1
  4084d6:	je     0x4084dc
  4084d8:	cmp    al,0x2
  4084da:	jne    0x40852e
  4084dc:	push   DWORD PTR [ebp-0x1abc]
  4084e2:	call   0x40e790
  4084e7:	pop    ecx
  4084e8:	cmp    ax,WORD PTR [ebp-0x1abc]
  4084ef:	jne    0x40883e
  4084f5:	add    DWORD PTR [ebp-0x1ac8],0x2
  4084fc:	cmp    DWORD PTR [ebp-0x1ae4],0x0
  408503:	je     0x40852e
  408505:	push   0xd
  408507:	pop    eax
  408508:	push   eax
  408509:	mov    DWORD PTR [ebp-0x1abc],eax
  40850f:	call   0x40e790
  408514:	pop    ecx
  408515:	cmp    ax,WORD PTR [ebp-0x1abc]
  40851c:	jne    0x40883e
  408522:	inc    DWORD PTR [ebp-0x1ac8]
  408528:	inc    DWORD PTR [ebp-0x1ad0]
  40852e:	mov    eax,DWORD PTR [ebp+0x10]
  408531:	cmp    DWORD PTR [ebp-0x1ac0],eax
  408537:	jb     0x408336
  40853d:	jmp    0x40884a
  408542:	mov    ecx,DWORD PTR [esi]
  408544:	mov    dl,BYTE PTR [ebx]
  408546:	inc    DWORD PTR [ebp-0x1ac8]
  40854c:	mov    BYTE PTR [edi+ecx*1+0x34],dl
  408550:	mov    ecx,DWORD PTR [esi]
  408552:	mov    DWORD PTR [edi+ecx*1+0x38],eax
  408556:	jmp    0x40884a
  40855b:	xor    ecx,ecx
  40855d:	mov    eax,DWORD PTR [ebx]
  40855f:	test   BYTE PTR [eax+edi*1+0x4],0x80
  408564:	je     0x40880b
  40856a:	cmp    BYTE PTR [ebp-0x1ac1],0x0
  408571:	mov    DWORD PTR [ebp-0x1abc],ecx
  408577:	jne    0x408625
  40857d:	mov    ebx,DWORD PTR [ebp-0x1acc]
  408583:	cmp    DWORD PTR [ebp+0x10],ecx
  408586:	jbe    0x408889
  40858c:	mov    ecx,ebx
  40858e:	xor    esi,esi
  408590:	sub    ecx,DWORD PTR [ebp-0x1acc]
  408596:	lea    eax,[ebp-0x1ab8]
  40859c:	cmp    ecx,DWORD PTR [ebp+0x10]
  40859f:	jae    0x4085c7
  4085a1:	mov    dl,BYTE PTR [ebx]
  4085a3:	inc    ebx
  4085a4:	inc    ecx
  4085a5:	mov    DWORD PTR [ebp-0x1ae0],ebx
  4085ab:	cmp    dl,0xa
  4085ae:	jne    0x4085bb
  4085b0:	inc    DWORD PTR [ebp-0x1ad0]
  4085b6:	mov    BYTE PTR [eax],0xd
  4085b9:	inc    eax
  4085ba:	inc    esi
  4085bb:	mov    BYTE PTR [eax],dl
  4085bd:	inc    eax
  4085be:	inc    esi
  4085bf:	cmp    esi,0x13ff
  4085c5:	jb     0x40859c
  4085c7:	mov    esi,eax
  4085c9:	lea    eax,[ebp-0x1ab8]
  4085cf:	sub    esi,eax
  4085d1:	push   0x0
  4085d3:	lea    eax,[ebp-0x1ad8]
  4085d9:	push   eax
  4085da:	push   esi
  4085db:	lea    eax,[ebp-0x1ab8]
  4085e1:	push   eax
  4085e2:	mov    eax,DWORD PTR [ebp-0x1adc]
  4085e8:	mov    eax,DWORD PTR [eax]
  4085ea:	push   DWORD PTR [edi+eax*1]
  4085ed:	call   DWORD PTR ds:0x443144
  4085f3:	test   eax,eax
  4085f5:	je     0x40883e
  4085fb:	mov    eax,DWORD PTR [ebp-0x1ad8]
  408601:	add    DWORD PTR [ebp-0x1ac8],eax
  408607:	cmp    eax,esi
  408609:	jl     0x40884a
  40860f:	mov    eax,ebx
  408611:	sub    eax,DWORD PTR [ebp-0x1acc]
  408617:	cmp    eax,DWORD PTR [ebp+0x10]
  40861a:	jb     0x40858c
  408620:	jmp    0x40884a
  408625:	cmp    BYTE PTR [ebp-0x1ac1],0x2
  40862c:	jne    0x4086ff
  408632:	mov    ebx,DWORD PTR [ebp-0x1acc]
  408638:	cmp    DWORD PTR [ebp+0x10],ecx
  40863b:	jbe    0x408889
  408641:	and    DWORD PTR [ebp-0x1ac0],0x0
  408648:	mov    ecx,ebx
  40864a:	sub    ecx,DWORD PTR [ebp-0x1acc]
  408650:	push   0x2
  408652:	lea    eax,[ebp-0x1ab8]
  408658:	pop    esi
  408659:	cmp    ecx,DWORD PTR [ebp+0x10]
  40865c:	jae    0x4086a1
  40865e:	movzx  edx,WORD PTR [ebx]
  408661:	add    ebx,esi
  408663:	add    ecx,esi
  408665:	mov    DWORD PTR [ebp-0x1ae0],ebx
  40866b:	cmp    edx,0xa
  40866e:	jne    0x40868a
  408670:	add    DWORD PTR [ebp-0x1ad0],esi
  408676:	push   0xd
  408678:	pop    ebx
  408679:	mov    WORD PTR [eax],bx
  40867c:	mov    ebx,DWORD PTR [ebp-0x1ae0]
  408682:	add    eax,esi
  408684:	add    DWORD PTR [ebp-0x1ac0],esi
  40868a:	add    DWORD PTR [ebp-0x1ac0],esi
  408690:	mov    WORD PTR [eax],dx
  408693:	add    eax,esi
  408695:	cmp    DWORD PTR [ebp-0x1ac0],0x13fe
  40869f:	jb     0x408659
  4086a1:	mov    esi,eax
  4086a3:	lea    eax,[ebp-0x1ab8]
  4086a9:	sub    esi,eax
  4086ab:	push   0x0
  4086ad:	lea    eax,[ebp-0x1ad8]
  4086b3:	push   eax
  4086b4:	push   esi
  4086b5:	lea    eax,[ebp-0x1ab8]
  4086bb:	push   eax
  4086bc:	mov    eax,DWORD PTR [ebp-0x1adc]
  4086c2:	mov    eax,DWORD PTR [eax]
  4086c4:	push   DWORD PTR [edi+eax*1]
  4086c7:	call   DWORD PTR ds:0x443144
  4086cd:	test   eax,eax
  4086cf:	je     0x40883e
  4086d5:	mov    eax,DWORD PTR [ebp-0x1ad8]
  4086db:	add    DWORD PTR [ebp-0x1ac8],eax
  4086e1:	cmp    eax,esi
  4086e3:	jl     0x40884a
  4086e9:	mov    eax,ebx
  4086eb:	sub    eax,DWORD PTR [ebp-0x1acc]
  4086f1:	cmp    eax,DWORD PTR [ebp+0x10]
  4086f4:	jb     0x408641
  4086fa:	jmp    0x40884a
  4086ff:	mov    eax,DWORD PTR [ebp-0x1acc]
  408705:	mov    DWORD PTR [ebp-0x1ad4],eax
  40870b:	cmp    DWORD PTR [ebp+0x10],ecx
  40870e:	jbe    0x408889
  408714:	mov    ecx,DWORD PTR [ebp-0x1ad4]
  40871a:	and    DWORD PTR [ebp-0x1ac0],0x0
  408721:	sub    ecx,DWORD PTR [ebp-0x1acc]
  408727:	push   0x2
  408729:	lea    eax,[ebp-0x6b8]
  40872f:	pop    esi
  408730:	cmp    ecx,DWORD PTR [ebp+0x10]
  408733:	jae    0x408770
  408735:	mov    edx,DWORD PTR [ebp-0x1ad4]
  40873b:	movzx  edx,WORD PTR [edx]
  40873e:	add    DWORD PTR [ebp-0x1ad4],esi
  408744:	add    ecx,esi
  408746:	cmp    edx,0xa
  408749:	jne    0x408759
  40874b:	push   0xd
  40874d:	pop    ebx
  40874e:	mov    WORD PTR [eax],bx
  408751:	add    eax,esi
  408753:	add    DWORD PTR [ebp-0x1ac0],esi
  408759:	add    DWORD PTR [ebp-0x1ac0],esi
  40875f:	mov    WORD PTR [eax],dx
  408762:	add    eax,esi
  408764:	cmp    DWORD PTR [ebp-0x1ac0],0x6a8
  40876e:	jb     0x408730
  408770:	xor    esi,esi
  408772:	push   esi
  408773:	push   esi
  408774:	push   0xd55
  408779:	lea    ecx,[ebp-0x1410]
  40877f:	push   ecx
  408780:	lea    ecx,[ebp-0x6b8]
  408786:	sub    eax,ecx
  408788:	cdq    
  408789:	sub    eax,edx
  40878b:	sar    eax,1
  40878d:	push   eax
  40878e:	mov    eax,ecx
  408790:	push   eax
  408791:	push   esi
  408792:	push   0xfde9
  408797:	call   DWORD PTR ds:0x443198
  40879d:	mov    ebx,eax
  40879f:	cmp    ebx,esi
  4087a1:	je     0x40883e
  4087a7:	push   0x0
  4087a9:	lea    eax,[ebp-0x1ad8]
  4087af:	push   eax
  4087b0:	mov    eax,ebx
  4087b2:	sub    eax,esi
  4087b4:	push   eax
  4087b5:	lea    eax,[ebp+esi*1-0x1410]
  4087bc:	push   eax
  4087bd:	mov    eax,DWORD PTR [ebp-0x1adc]
  4087c3:	mov    eax,DWORD PTR [eax]
  4087c5:	push   DWORD PTR [edi+eax*1]
  4087c8:	call   DWORD PTR ds:0x443144
  4087ce:	test   eax,eax
  4087d0:	je     0x4087de
  4087d2:	add    esi,DWORD PTR [ebp-0x1ad8]
  4087d8:	cmp    ebx,esi
  4087da:	jg     0x4087a7
  4087dc:	jmp    0x4087ea
  4087de:	call   DWORD PTR ds:0x443120
  4087e4:	mov    DWORD PTR [ebp-0x1abc],eax
  4087ea:	cmp    ebx,esi
  4087ec:	jg     0x40884a
  4087ee:	mov    eax,DWORD PTR [ebp-0x1ad4]
  4087f4:	sub    eax,DWORD PTR [ebp-0x1acc]
  4087fa:	mov    DWORD PTR [ebp-0x1ac8],eax
  408800:	cmp    eax,DWORD PTR [ebp+0x10]
  408803:	jb     0x408714
  408809:	jmp    0x40884a
  40880b:	push   ecx
  40880c:	lea    ecx,[ebp-0x1ad8]
  408812:	push   ecx
  408813:	push   DWORD PTR [ebp+0x10]
  408816:	push   DWORD PTR [ebp-0x1acc]
  40881c:	push   DWORD PTR [eax+edi*1]
  40881f:	call   DWORD PTR ds:0x443144
  408825:	test   eax,eax
  408827:	je     0x40883e
  408829:	mov    eax,DWORD PTR [ebp-0x1ad8]
  40882f:	and    DWORD PTR [ebp-0x1abc],0x0
  408836:	mov    DWORD PTR [ebp-0x1ac8],eax
  40883c:	jmp    0x40884a
  40883e:	call   DWORD PTR ds:0x443120
  408844:	mov    DWORD PTR [ebp-0x1abc],eax
  40884a:	cmp    DWORD PTR [ebp-0x1ac8],0x0
  408851:	jne    0x4088bf
  408853:	cmp    DWORD PTR [ebp-0x1abc],0x0
  40885a:	je     0x408889
  40885c:	push   0x5
  40885e:	pop    esi
  40885f:	cmp    DWORD PTR [ebp-0x1abc],esi
  408865:	jne    0x40887b
  408867:	call   0x40769b
  40886c:	mov    DWORD PTR [eax],0x9
  408872:	call   0x4076ae
  408877:	mov    DWORD PTR [eax],esi
  408879:	jmp    0x4088ba
  40887b:	push   DWORD PTR [ebp-0x1abc]
  408881:	call   0x4076c1
  408886:	pop    ecx
  408887:	jmp    0x4088ba
  408889:	mov    eax,DWORD PTR [ebp-0x1adc]
  40888f:	mov    eax,DWORD PTR [eax]
  408891:	test   BYTE PTR [edi+eax*1+0x4],0x40
  408896:	je     0x4088a7
  408898:	mov    eax,DWORD PTR [ebp-0x1acc]
  40889e:	cmp    BYTE PTR [eax],0x1a
  4088a1:	jne    0x4088a7
  4088a3:	xor    eax,eax
  4088a5:	jmp    0x4088cb
  4088a7:	call   0x40769b
  4088ac:	mov    DWORD PTR [eax],0x1c
  4088b2:	call   0x4076ae
  4088b7:	and    DWORD PTR [eax],0x0
  4088ba:	or     eax,0xffffffff
  4088bd:	jmp    0x4088cb
  4088bf:	mov    eax,DWORD PTR [ebp-0x1ac8]
  4088c5:	sub    eax,DWORD PTR [ebp-0x1ad0]
  4088cb:	pop    ebx
  4088cc:	mov    ecx,DWORD PTR [ebp-0x4]
  4088cf:	pop    edi
  4088d0:	xor    ecx,ebp
  4088d2:	pop    esi
  4088d3:	call   0x403edd
  4088d8:	leave  
  4088d9:	ret    
  4088da:	push   0x10
  4088dc:	push   0x449310
  4088e1:	call   0x4076f0
  4088e6:	mov    ebx,DWORD PTR [ebp+0x8]
  4088e9:	cmp    ebx,0xfffffffe
  4088ec:	jne    0x408909
  4088ee:	call   0x4076ae
  4088f3:	and    DWORD PTR [eax],0x0
  4088f6:	call   0x40769b
  4088fb:	mov    DWORD PTR [eax],0x9
  408901:	or     eax,0xffffffff
  408904:	jmp    0x40899d
  408909:	test   ebx,ebx
  40890b:	js     0x408915
  40890d:	cmp    ebx,DWORD PTR ds:0x450780
  408913:	jb     0x40892f
  408915:	call   0x4076ae
  40891a:	and    DWORD PTR [eax],0x0
  40891d:	call   0x40769b
  408922:	mov    DWORD PTR [eax],0x9
  408928:	call   0x407649
  40892d:	jmp    0x408901
  40892f:	mov    eax,ebx
  408931:	sar    eax,0x5
  408934:	lea    edi,[eax*4+0x4507a0]
  40893b:	mov    esi,ebx
  40893d:	and    esi,0x1f
  408940:	shl    esi,0x6
  408943:	mov    eax,DWORD PTR [edi]
  408945:	movsx  eax,BYTE PTR [eax+esi*1+0x4]
  40894a:	and    eax,0x1
  40894d:	je     0x408915
  40894f:	push   ebx
  408950:	call   0x40e6ca
  408955:	pop    ecx
  408956:	and    DWORD PTR [ebp-0x4],0x0
  40895a:	mov    eax,DWORD PTR [edi]
  40895c:	test   BYTE PTR [eax+esi*1+0x4],0x1
  408961:	je     0x408977
  408963:	push   DWORD PTR [ebp+0x10]
  408966:	push   DWORD PTR [ebp+0xc]
  408969:	push   ebx
  40896a:	call   0x4081dd
  40896f:	add    esp,0xc
  408972:	mov    DWORD PTR [ebp-0x1c],eax
  408975:	jmp    0x40898e
  408977:	call   0x40769b
  40897c:	mov    DWORD PTR [eax],0x9
  408982:	call   0x4076ae
  408987:	and    DWORD PTR [eax],0x0
  40898a:	or     DWORD PTR [ebp-0x1c],0xffffffff
  40898e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  408995:	call   0x4089a6
  40899a:	mov    eax,DWORD PTR [ebp-0x1c]
  40899d:	call   0x407735
  4089a2:	ret    
  4089a3:	mov    ebx,DWORD PTR [ebp+0x8]
  4089a6:	push   ebx
  4089a7:	call   0x40e769
  4089ac:	pop    ecx
  4089ad:	ret    
  4089ae:	push   0x10
  4089b0:	push   0x449330
  4089b5:	call   0x4076f0
  4089ba:	mov    ebx,DWORD PTR [ebp+0x8]
  4089bd:	cmp    ebx,0xfffffffe
  4089c0:	jne    0x4089d5
  4089c2:	call   0x40769b
  4089c7:	mov    DWORD PTR [eax],0x9
  4089cd:	or     eax,0xffffffff
  4089d0:	jmp    0x408a76
  4089d5:	test   ebx,ebx
  4089d7:	js     0x4089e1
  4089d9:	cmp    ebx,DWORD PTR ds:0x450780
  4089df:	jb     0x4089f3
  4089e1:	call   0x40769b
  4089e6:	mov    DWORD PTR [eax],0x9
  4089ec:	call   0x407649
  4089f1:	jmp    0x4089cd
  4089f3:	mov    eax,ebx
  4089f5:	sar    eax,0x5
  4089f8:	lea    edi,[eax*4+0x4507a0]
  4089ff:	mov    esi,ebx
  408a01:	and    esi,0x1f
  408a04:	shl    esi,0x6
  408a07:	mov    eax,DWORD PTR [edi]
  408a09:	movsx  eax,BYTE PTR [esi+eax*1+0x4]
  408a0e:	and    eax,0x1
  408a11:	je     0x4089e1
  408a13:	push   ebx
  408a14:	call   0x40e6ca
  408a19:	pop    ecx
  408a1a:	and    DWORD PTR [ebp-0x4],0x0
  408a1e:	mov    eax,DWORD PTR [edi]
  408a20:	test   BYTE PTR [esi+eax*1+0x4],0x1
  408a25:	je     0x408a58
  408a27:	push   ebx
  408a28:	call   0x40e661
  408a2d:	pop    ecx
  408a2e:	push   eax
  408a2f:	call   DWORD PTR ds:0x443108
  408a35:	test   eax,eax
  408a37:	jne    0x408a44
  408a39:	call   DWORD PTR ds:0x443120
  408a3f:	mov    DWORD PTR [ebp-0x1c],eax
  408a42:	jmp    0x408a48
  408a44:	and    DWORD PTR [ebp-0x1c],0x0
  408a48:	cmp    DWORD PTR [ebp-0x1c],0x0
  408a4c:	je     0x408a67
  408a4e:	call   0x4076ae
  408a53:	mov    ecx,DWORD PTR [ebp-0x1c]
  408a56:	mov    DWORD PTR [eax],ecx
  408a58:	call   0x40769b
  408a5d:	mov    DWORD PTR [eax],0x9
  408a63:	or     DWORD PTR [ebp-0x1c],0xffffffff
  408a67:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  408a6e:	call   0x408a7f
  408a73:	mov    eax,DWORD PTR [ebp-0x1c]
  408a76:	call   0x407735
  408a7b:	ret    
  408a7c:	mov    ebx,DWORD PTR [ebp+0x8]
  408a7f:	push   ebx
  408a80:	call   0x40e769
  408a85:	pop    ecx
  408a86:	ret    
  408a87:	push   0x8
  408a89:	push   0x449350
  408a8e:	call   0x4076f0
  408a93:	call   0x40c90a
  408a98:	mov    eax,DWORD PTR [eax+0x78]
  408a9b:	test   eax,eax
  408a9d:	je     0x408ab5
  408a9f:	and    DWORD PTR [ebp-0x4],0x0
  408aa3:	call   eax
  408aa5:	jmp    0x408aae
  408aa7:	xor    eax,eax
  408aa9:	inc    eax
  408aaa:	ret    
  408aab:	mov    esp,DWORD PTR [ebp-0x18]
  408aae:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  408ab5:	call   0x406f96
  408aba:	call   0x407735
  408abf:	ret    
  408ac0:	call   0x40c90a
  408ac5:	mov    eax,DWORD PTR [eax+0x7c]
  408ac8:	test   eax,eax
  408aca:	je     0x408ace
  408acc:	call   eax
  408ace:	jmp    0x408a87
  408ad3:	push   0x8
  408ad5:	push   0x449370
  408ada:	call   0x4076f0
  408adf:	push   DWORD PTR ds:0x44df70
  408ae5:	call   DWORD PTR ds:0x4431c8
  408aeb:	test   eax,eax
  408aed:	je     0x408b05
  408aef:	and    DWORD PTR [ebp-0x4],0x0
  408af3:	call   eax
  408af5:	jmp    0x408afe
  408af7:	xor    eax,eax
  408af9:	inc    eax
  408afa:	ret    
  408afb:	mov    esp,DWORD PTR [ebp-0x18]
  408afe:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  408b05:	call   0x408a87
  408b0a:	int3   
  408b0b:	push   0x408a87
  408b10:	call   DWORD PTR ds:0x4431c4
  408b16:	mov    ds:0x44df70,eax
  408b1b:	ret    
  408b1c:	mov    edi,edi
  408b1e:	push   ebp
  408b1f:	mov    ebp,esp
  408b21:	push   esi
  408b22:	mov    esi,DWORD PTR [ebp+0x8]
  408b25:	push   esi
  408b26:	call   0x407499
  408b2b:	push   eax
  408b2c:	call   0x40e3cc
  408b31:	pop    ecx
  408b32:	pop    ecx
  408b33:	test   eax,eax
  408b35:	je     0x408bb3
  408b37:	call   0x4043cb
  408b3c:	add    eax,0x20
  408b3f:	cmp    esi,eax
  408b41:	jne    0x408b47
  408b43:	xor    eax,eax
  408b45:	jmp    0x408b56
  408b47:	call   0x4043cb
  408b4c:	add    eax,0x40
  408b4f:	cmp    esi,eax
  408b51:	jne    0x408bb3
  408b53:	xor    eax,eax
  408b55:	inc    eax
  408b56:	inc    DWORD PTR ds:0x44da98
  408b5c:	test   DWORD PTR [esi+0xc],0x10c
  408b63:	jne    0x408bb3
  408b65:	push   ebx
  408b66:	push   edi
  408b67:	lea    edi,[eax*4+0x44df74]
  408b6e:	cmp    DWORD PTR [edi],0x0
  408b71:	mov    ebx,0x1000
  408b76:	jne    0x408b98
  408b78:	push   ebx
  408b79:	call   0x406e65
  408b7e:	pop    ecx
  408b7f:	mov    DWORD PTR [edi],eax
  408b81:	test   eax,eax
  408b83:	jne    0x408b98
  408b85:	lea    eax,[esi+0x14]
  408b88:	push   0x2
  408b8a:	mov    DWORD PTR [esi+0x8],eax
  408b8d:	mov    DWORD PTR [esi],eax
  408b8f:	pop    eax
  408b90:	mov    DWORD PTR [esi+0x18],eax
  408b93:	mov    DWORD PTR [esi+0x4],eax
  408b96:	jmp    0x408ba5
  408b98:	mov    edi,DWORD PTR [edi]
  408b9a:	mov    DWORD PTR [esi+0x8],edi
  408b9d:	mov    DWORD PTR [esi],edi
  408b9f:	mov    DWORD PTR [esi+0x18],ebx
  408ba2:	mov    DWORD PTR [esi+0x4],ebx
  408ba5:	or     DWORD PTR [esi+0xc],0x1102
  408bac:	xor    eax,eax
  408bae:	pop    edi
  408baf:	inc    eax
  408bb0:	pop    ebx
  408bb1:	jmp    0x408bb5
  408bb3:	xor    eax,eax
  408bb5:	pop    esi
  408bb6:	pop    ebp
  408bb7:	ret    
  408bb8:	mov    edi,edi
  408bba:	push   ebp
  408bbb:	mov    ebp,esp
  408bbd:	cmp    DWORD PTR [ebp+0x8],0x0
  408bc1:	je     0x408bea
  408bc3:	push   esi
  408bc4:	mov    esi,DWORD PTR [ebp+0xc]
  408bc7:	test   DWORD PTR [esi+0xc],0x1000
  408bce:	je     0x408be9
  408bd0:	push   esi
  408bd1:	call   0x40460c
  408bd6:	and    DWORD PTR [esi+0xc],0xffffeeff
  408bdd:	and    DWORD PTR [esi+0x18],0x0
  408be1:	and    DWORD PTR [esi],0x0
  408be4:	and    DWORD PTR [esi+0x8],0x0
  408be8:	pop    ecx
  408be9:	pop    esi
  408bea:	pop    ebp
  408beb:	ret    
  408bec:	mov    edi,edi
  408bee:	push   ebp
  408bef:	mov    ebp,esp
  408bf1:	test   BYTE PTR [eax+0xc],0x40
  408bf5:	je     0x408bfd
  408bf7:	cmp    DWORD PTR [eax+0x8],0x0
  408bfb:	je     0x408c17
  408bfd:	push   eax
  408bfe:	push   DWORD PTR [ebp+0x8]
  408c01:	call   0x40e94d
  408c06:	pop    ecx
  408c07:	pop    ecx
  408c08:	mov    ecx,0xffff
  408c0d:	cmp    ax,cx
  408c10:	jne    0x408c17
  408c12:	or     DWORD PTR [esi],0xffffffff
  408c15:	pop    ebp
  408c16:	ret    
  408c17:	inc    DWORD PTR [esi]
  408c19:	pop    ebp
  408c1a:	ret    
  408c1b:	mov    edi,edi
  408c1d:	push   ebp
  408c1e:	mov    ebp,esp
  408c20:	push   ecx
  408c21:	test   BYTE PTR [ebx+0xc],0x40
  408c25:	push   esi
  408c26:	mov    esi,eax
  408c28:	mov    eax,DWORD PTR [edi]
  408c2a:	mov    DWORD PTR [ebp-0x4],eax
  408c2d:	je     0x408c3c
  408c2f:	cmp    DWORD PTR [ebx+0x8],0x0
  408c33:	jne    0x408c3c
  408c35:	mov    eax,DWORD PTR [ebp+0xc]
  408c38:	add    DWORD PTR [esi],eax
  408c3a:	jmp    0x408c7f
  408c3c:	and    DWORD PTR [edi],0x0
  408c3f:	cmp    DWORD PTR [ebp+0xc],0x0
  408c43:	jle    0x408c7a
  408c45:	mov    eax,DWORD PTR [ebp+0x8]
  408c48:	movzx  eax,WORD PTR [eax]
  408c4b:	dec    DWORD PTR [ebp+0xc]
  408c4e:	push   eax
  408c4f:	mov    eax,ebx
  408c51:	call   0x408bec
  408c56:	add    DWORD PTR [ebp+0x8],0x2
  408c5a:	cmp    DWORD PTR [esi],0xffffffff
  408c5d:	pop    ecx
  408c5e:	jne    0x408c6f
  408c60:	cmp    DWORD PTR [edi],0x2a
  408c63:	jne    0x408c75
  408c65:	push   0x3f
  408c67:	mov    eax,ebx
  408c69:	call   0x408bec
  408c6e:	pop    ecx
  408c6f:	cmp    DWORD PTR [ebp+0xc],0x0
  408c73:	jg     0x408c45
  408c75:	cmp    DWORD PTR [edi],0x0
  408c78:	jne    0x408c7f
  408c7a:	mov    eax,DWORD PTR [ebp-0x4]
  408c7d:	mov    DWORD PTR [edi],eax
  408c7f:	pop    esi
  408c80:	leave  
  408c81:	ret    
  408c82:	mov    edi,edi
  408c84:	push   ebp
  408c85:	mov    ebp,esp
  408c87:	sub    esp,0x478
  408c8d:	mov    eax,ds:0x44b470
  408c92:	xor    eax,ebp
  408c94:	mov    DWORD PTR [ebp-0x4],eax
  408c97:	mov    eax,DWORD PTR [ebp+0x8]
  408c9a:	push   ebx
  408c9b:	push   esi
  408c9c:	mov    esi,DWORD PTR [ebp+0xc]
  408c9f:	xor    ebx,ebx
  408ca1:	push   edi
  408ca2:	mov    edi,DWORD PTR [ebp+0x14]
  408ca5:	push   DWORD PTR [ebp+0x10]
  408ca8:	lea    ecx,[ebp-0x458]
  408cae:	mov    DWORD PTR [ebp-0x424],eax
  408cb4:	mov    DWORD PTR [ebp-0x420],edi
  408cba:	mov    DWORD PTR [ebp-0x444],ebx
  408cc0:	mov    DWORD PTR [ebp-0x408],ebx
  408cc6:	mov    DWORD PTR [ebp-0x430],ebx
  408ccc:	mov    DWORD PTR [ebp-0x40c],ebx
  408cd2:	mov    DWORD PTR [ebp-0x428],ebx
  408cd8:	mov    DWORD PTR [ebp-0x448],ebx
  408cde:	mov    DWORD PTR [ebp-0x42c],ebx
  408ce4:	call   0x406b0c
  408ce9:	call   0x40769b
  408cee:	mov    DWORD PTR [ebp-0x464],eax
  408cf4:	cmp    DWORD PTR [ebp-0x424],ebx
  408cfa:	jne    0x408d26
  408cfc:	call   0x40769b
  408d01:	mov    DWORD PTR [eax],0x16
  408d07:	call   0x407649
  408d0c:	cmp    BYTE PTR [ebp-0x44c],bl
  408d12:	je     0x408d1e
  408d14:	mov    eax,DWORD PTR [ebp-0x450]
  408d1a:	and    DWORD PTR [eax+0x70],0xfffffffd
  408d1e:	or     eax,0xffffffff
  408d21:	jmp    0x40981a
  408d26:	cmp    esi,ebx
  408d28:	je     0x408cfc
  408d2a:	movzx  ecx,WORD PTR [esi]
  408d2d:	xor    edx,edx
  408d2f:	mov    DWORD PTR [ebp-0x418],ebx
  408d35:	mov    DWORD PTR [ebp-0x414],ebx
  408d3b:	mov    DWORD PTR [ebp-0x43c],ebx
  408d41:	mov    DWORD PTR [ebp-0x41c],ecx
  408d47:	cmp    cx,bx
  408d4a:	je     0x409801
  408d50:	push   0x2
  408d52:	pop    ebx
  408d53:	add    esi,ebx
  408d55:	cmp    DWORD PTR [ebp-0x418],0x0
  408d5c:	mov    DWORD PTR [ebp-0x440],esi
  408d62:	jl     0x409801
  408d68:	lea    eax,[ecx-0x20]
  408d6b:	cmp    ax,0x58
  408d6f:	ja     0x408d80
  408d71:	movzx  eax,cx
  408d74:	movsx  eax,BYTE PTR [eax+0x443df0]
  408d7b:	and    eax,0xf
  408d7e:	jmp    0x408d82
  408d80:	xor    eax,eax
  408d82:	movsx  eax,BYTE PTR [edx+eax*8+0x443e10]
  408d8a:	push   0x7
  408d8c:	sar    eax,0x4
  408d8f:	pop    edx
  408d90:	mov    DWORD PTR [ebp-0x460],eax
  408d96:	cmp    eax,edx
  408d98:	ja     0x4097be
  408d9e:	jmp    DWORD PTR [eax*4+0x40982a]
  408da5:	xor    eax,eax
  408da7:	or     DWORD PTR [ebp-0x40c],0xffffffff
  408dae:	mov    DWORD PTR [ebp-0x468],eax
  408db4:	mov    DWORD PTR [ebp-0x448],eax
  408dba:	mov    DWORD PTR [ebp-0x430],eax
  408dc0:	mov    DWORD PTR [ebp-0x428],eax
  408dc6:	mov    DWORD PTR [ebp-0x408],eax
  408dcc:	mov    DWORD PTR [ebp-0x42c],eax
  408dd2:	jmp    0x4097be
  408dd7:	movzx  eax,cx
  408dda:	sub    eax,0x20
  408ddd:	je     0x408e29
  408ddf:	sub    eax,0x3
  408de2:	je     0x408e1a
  408de4:	sub    eax,0x8
  408de7:	je     0x408e0e
  408de9:	sub    eax,ebx
  408deb:	je     0x408e02
  408ded:	sub    eax,0x3
  408df0:	jne    0x4097be
  408df6:	or     DWORD PTR [ebp-0x408],0x8
  408dfd:	jmp    0x4097be
  408e02:	or     DWORD PTR [ebp-0x408],0x4
  408e09:	jmp    0x4097be
  408e0e:	or     DWORD PTR [ebp-0x408],0x1
  408e15:	jmp    0x4097be
  408e1a:	or     DWORD PTR [ebp-0x408],0x80
  408e24:	jmp    0x4097be
  408e29:	or     DWORD PTR [ebp-0x408],ebx
  408e2f:	jmp    0x4097be
  408e34:	cmp    cx,0x2a
  408e38:	jne    0x408e66
  408e3a:	add    edi,0x4
  408e3d:	mov    DWORD PTR [ebp-0x420],edi
  408e43:	mov    edi,DWORD PTR [edi-0x4]
  408e46:	mov    DWORD PTR [ebp-0x430],edi
  408e4c:	test   edi,edi
  408e4e:	jns    0x4097be
  408e54:	or     DWORD PTR [ebp-0x408],0x4
  408e5b:	neg    DWORD PTR [ebp-0x430]
  408e61:	jmp    0x4097be
  408e66:	mov    eax,DWORD PTR [ebp-0x430]
  408e6c:	imul   eax,eax,0xa
  408e6f:	movzx  ecx,cx
  408e72:	lea    eax,[eax+ecx*1-0x30]
  408e76:	mov    DWORD PTR [ebp-0x430],eax
  408e7c:	jmp    0x4097be
  408e81:	and    DWORD PTR [ebp-0x40c],0x0
  408e88:	jmp    0x4097be
  408e8d:	cmp    cx,0x2a
  408e91:	jne    0x408eb9
  408e93:	add    edi,0x4
  408e96:	mov    DWORD PTR [ebp-0x420],edi
  408e9c:	mov    edi,DWORD PTR [edi-0x4]
  408e9f:	mov    DWORD PTR [ebp-0x40c],edi
  408ea5:	test   edi,edi
  408ea7:	jns    0x4097be
  408ead:	or     DWORD PTR [ebp-0x40c],0xffffffff
  408eb4:	jmp    0x4097be
  408eb9:	mov    eax,DWORD PTR [ebp-0x40c]
  408ebf:	imul   eax,eax,0xa
  408ec2:	movzx  ecx,cx
  408ec5:	lea    eax,[eax+ecx*1-0x30]
  408ec9:	mov    DWORD PTR [ebp-0x40c],eax
  408ecf:	jmp    0x4097be
  408ed4:	movzx  eax,cx
  408ed7:	cmp    eax,0x49
  408eda:	je     0x408f33
  408edc:	cmp    eax,0x68
  408edf:	je     0x408f27
  408ee1:	cmp    eax,0x6c
  408ee4:	je     0x408efe
  408ee6:	cmp    eax,0x77
  408ee9:	jne    0x4097be
  408eef:	or     DWORD PTR [ebp-0x408],0x800
  408ef9:	jmp    0x4097be
  408efe:	cmp    WORD PTR [esi],0x6c
  408f02:	jne    0x408f1b
  408f04:	add    esi,ebx
  408f06:	or     DWORD PTR [ebp-0x408],0x1000
  408f10:	mov    DWORD PTR [ebp-0x440],esi
  408f16:	jmp    0x4097be
  408f1b:	or     DWORD PTR [ebp-0x408],0x10
  408f22:	jmp    0x4097be
  408f27:	or     DWORD PTR [ebp-0x408],0x20
  408f2e:	jmp    0x4097be
  408f33:	movzx  eax,WORD PTR [esi]
  408f36:	cmp    eax,0x36
  408f39:	jne    0x408f5a
  408f3b:	cmp    WORD PTR [esi+0x2],0x34
  408f40:	jne    0x408f5a
  408f42:	add    esi,0x4
  408f45:	or     DWORD PTR [ebp-0x408],0x8000
  408f4f:	mov    DWORD PTR [ebp-0x440],esi
  408f55:	jmp    0x4097be
  408f5a:	cmp    eax,0x33
  408f5d:	jne    0x408f7e
  408f5f:	cmp    WORD PTR [esi+0x2],0x32
  408f64:	jne    0x408f7e
  408f66:	add    esi,0x4
  408f69:	and    DWORD PTR [ebp-0x408],0xffff7fff
  408f73:	mov    DWORD PTR [ebp-0x440],esi
  408f79:	jmp    0x4097be
  408f7e:	cmp    eax,0x64
  408f81:	je     0x4097be
  408f87:	cmp    eax,0x69
  408f8a:	je     0x4097be
  408f90:	cmp    eax,0x6f
  408f93:	je     0x4097be
  408f99:	cmp    eax,0x75
  408f9c:	je     0x4097be
  408fa2:	cmp    eax,0x78
  408fa5:	je     0x4097be
  408fab:	cmp    eax,0x58
  408fae:	je     0x4097be
  408fb4:	and    DWORD PTR [ebp-0x460],0x0
  408fbb:	mov    eax,DWORD PTR [ebp-0x424]
  408fc1:	push   ecx
  408fc2:	lea    esi,[ebp-0x418]
  408fc8:	mov    DWORD PTR [ebp-0x42c],0x1
  408fd2:	call   0x408bec
  408fd7:	jmp    0x4097bd
  408fdc:	movzx  eax,cx
  408fdf:	cmp    eax,0x64
  408fe2:	jg     0x409217
  408fe8:	je     0x4092ae
  408fee:	cmp    eax,0x53
  408ff1:	jg     0x409112
  408ff7:	je     0x409077
  408ff9:	sub    eax,0x41
  408ffc:	je     0x40900e
  408ffe:	sub    eax,ebx
  409000:	je     0x40905b
  409002:	sub    eax,ebx
  409004:	je     0x40900e
  409006:	sub    eax,ebx
  409008:	jne    0x4095ed
  40900e:	add    ecx,0x20
  409011:	mov    DWORD PTR [ebp-0x468],0x1
  40901b:	mov    DWORD PTR [ebp-0x41c],ecx
  409021:	or     DWORD PTR [ebp-0x408],0x40
  409028:	cmp    DWORD PTR [ebp-0x40c],0x0
  40902f:	lea    ebx,[ebp-0x404]
  409035:	mov    eax,0x200
  40903a:	mov    DWORD PTR [ebp-0x410],ebx
  409040:	mov    DWORD PTR [ebp-0x414],eax
  409046:	jge    0x4092de
  40904c:	mov    DWORD PTR [ebp-0x40c],0x6
  409056:	jmp    0x409347
  40905b:	test   DWORD PTR [ebp-0x408],0x830
  409065:	jne    0x409133
  40906b:	or     DWORD PTR [ebp-0x408],0x20
  409072:	jmp    0x409133
  409077:	test   DWORD PTR [ebp-0x408],0x830
  409081:	jne    0x40908a
  409083:	or     DWORD PTR [ebp-0x408],0x20
  40908a:	mov    ebx,DWORD PTR [ebp-0x40c]
  409090:	cmp    ebx,0xffffffff
  409093:	jne    0x40909a
  409095:	mov    ebx,0x7fffffff
  40909a:	add    edi,0x4
  40909d:	test   BYTE PTR [ebp-0x408],0x20
  4090a4:	mov    DWORD PTR [ebp-0x420],edi
  4090aa:	mov    edi,DWORD PTR [edi-0x4]
  4090ad:	mov    DWORD PTR [ebp-0x410],edi
  4090b3:	je     0x4095b0
  4090b9:	test   edi,edi
  4090bb:	jne    0x4090c8
  4090bd:	mov    eax,ds:0x44b750
  4090c2:	mov    DWORD PTR [ebp-0x410],eax
  4090c8:	and    DWORD PTR [ebp-0x414],0x0
  4090cf:	mov    esi,DWORD PTR [ebp-0x410]
  4090d5:	test   ebx,ebx
  4090d7:	jle    0x4095ed
  4090dd:	mov    al,BYTE PTR [esi]
  4090df:	test   al,al
  4090e1:	je     0x4095ed
  4090e7:	lea    ecx,[ebp-0x458]
  4090ed:	movzx  eax,al
  4090f0:	push   ecx
  4090f1:	push   eax
  4090f2:	call   0x40e902
  4090f7:	pop    ecx
  4090f8:	pop    ecx
  4090f9:	test   eax,eax
  4090fb:	je     0x4090fe
  4090fd:	inc    esi
  4090fe:	inc    esi
  4090ff:	inc    DWORD PTR [ebp-0x414]
  409105:	cmp    DWORD PTR [ebp-0x414],ebx
  40910b:	jl     0x4090dd
  40910d:	jmp    0x4095ed
  409112:	sub    eax,0x58
  409115:	je     0x409410
  40911b:	sub    eax,ebx
  40911d:	je     0x4091b7
  409123:	sub    eax,edx
  409125:	je     0x409021
  40912b:	sub    eax,ebx
  40912d:	jne    0x4095ed
  409133:	movzx  eax,WORD PTR [edi]
  409136:	add    edi,0x4
  409139:	xor    esi,esi
  40913b:	inc    esi
  40913c:	test   BYTE PTR [ebp-0x408],0x20
  409143:	mov    DWORD PTR [ebp-0x42c],esi
  409149:	mov    DWORD PTR [ebp-0x420],edi
  40914f:	mov    DWORD PTR [ebp-0x45c],eax
  409155:	je     0x409199
  409157:	mov    BYTE PTR [ebp-0x438],al
  40915d:	lea    eax,[ebp-0x458]
  409163:	push   eax
  409164:	mov    eax,DWORD PTR [ebp-0x458]
  40916a:	mov    BYTE PTR [ebp-0x437],0x0
  409171:	push   DWORD PTR [eax+0xac]
  409177:	lea    eax,[ebp-0x438]
  40917d:	push   eax
  40917e:	lea    eax,[ebp-0x404]
  409184:	push   eax
  409185:	call   0x40e7d2
  40918a:	add    esp,0x10
  40918d:	test   eax,eax
  40918f:	jns    0x4091a0
  409191:	mov    DWORD PTR [ebp-0x448],esi
  409197:	jmp    0x4091a0
  409199:	mov    WORD PTR [ebp-0x404],ax
  4091a0:	lea    eax,[ebp-0x404]
  4091a6:	mov    DWORD PTR [ebp-0x410],eax
  4091ac:	mov    DWORD PTR [ebp-0x414],esi
  4091b2:	jmp    0x4095ed
  4091b7:	mov    eax,DWORD PTR [edi]
  4091b9:	add    edi,0x4
  4091bc:	mov    DWORD PTR [ebp-0x420],edi
  4091c2:	test   eax,eax
  4091c4:	je     0x409200
  4091c6:	mov    ecx,DWORD PTR [eax+0x4]
  4091c9:	test   ecx,ecx
  4091cb:	je     0x409200
  4091cd:	test   DWORD PTR [ebp-0x408],0x800
  4091d7:	movsx  eax,WORD PTR [eax]
  4091da:	mov    DWORD PTR [ebp-0x410],ecx
  4091e0:	je     0x4091f4
  4091e2:	cdq    
  4091e3:	sub    eax,edx
  4091e5:	mov    DWORD PTR [ebp-0x42c],0x1
  4091ef:	jmp    0x4095e5
  4091f4:	and    DWORD PTR [ebp-0x42c],0x0
  4091fb:	jmp    0x4095e7
  409200:	mov    eax,ds:0x44b750
  409205:	mov    DWORD PTR [ebp-0x410],eax
  40920b:	push   eax
  40920c:	call   0x405450
  409211:	pop    ecx
  409212:	jmp    0x4095e7
  409217:	cmp    eax,0x70
  40921a:	jg     0x409418
  409220:	je     0x409406
  409226:	cmp    eax,0x65
  409229:	jl     0x4095ed
  40922f:	cmp    eax,0x67
  409232:	jle    0x409021
  409238:	cmp    eax,0x69
  40923b:	je     0x4092ae
  40923d:	cmp    eax,0x6e
  409240:	je     0x40926a
  409242:	cmp    eax,0x6f
  409245:	jne    0x4095ed
  40924b:	test   BYTE PTR [ebp-0x408],0x80
  409252:	mov    DWORD PTR [ebp-0x41c],0x8
  40925c:	je     0x4092bf
  40925e:	or     DWORD PTR [ebp-0x408],0x200
  409268:	jmp    0x4092bf
  40926a:	mov    esi,DWORD PTR [edi]
  40926c:	add    edi,0x4
  40926f:	mov    DWORD PTR [ebp-0x420],edi
  409275:	call   0x40ead4
  40927a:	test   eax,eax
  40927c:	je     0x4097e5
  409282:	test   BYTE PTR [ebp-0x408],0x20
  409289:	je     0x409297
  40928b:	mov    ax,WORD PTR [ebp-0x418]
  409292:	mov    WORD PTR [esi],ax
  409295:	jmp    0x40929f
  409297:	mov    eax,DWORD PTR [ebp-0x418]
  40929d:	mov    DWORD PTR [esi],eax
  40929f:	mov    DWORD PTR [ebp-0x448],0x1
  4092a9:	jmp    0x4097a2
  4092ae:	or     DWORD PTR [ebp-0x408],0x40
  4092b5:	mov    DWORD PTR [ebp-0x41c],0xa
  4092bf:	mov    ecx,DWORD PTR [ebp-0x408]
  4092c5:	test   ecx,0x8000
  4092cb:	je     0x409478
  4092d1:	mov    eax,DWORD PTR [edi]
  4092d3:	mov    edx,DWORD PTR [edi+0x4]
  4092d6:	add    edi,0x8
  4092d9:	jmp    0x4094b1
  4092de:	jne    0x4092f6
  4092e0:	cmp    WORD PTR [ebp-0x41c],0x67
  4092e8:	jne    0x409347
  4092ea:	mov    DWORD PTR [ebp-0x40c],0x1
  4092f4:	jmp    0x409347
  4092f6:	cmp    DWORD PTR [ebp-0x40c],eax
  4092fc:	jle    0x409304
  4092fe:	mov    DWORD PTR [ebp-0x40c],eax
  409304:	cmp    DWORD PTR [ebp-0x40c],0xa3
  40930e:	jle    0x409347
  409310:	mov    esi,DWORD PTR [ebp-0x40c]
  409316:	add    esi,0x15d
  40931c:	push   esi
  40931d:	call   0x406e65
  409322:	pop    ecx
  409323:	mov    DWORD PTR [ebp-0x43c],eax
  409329:	test   eax,eax
  40932b:	je     0x40933d
  40932d:	mov    DWORD PTR [ebp-0x410],eax
  409333:	mov    DWORD PTR [ebp-0x414],esi
  409339:	mov    ebx,eax
  40933b:	jmp    0x409347
  40933d:	mov    DWORD PTR [ebp-0x40c],0xa3
  409347:	mov    eax,DWORD PTR [edi]
  409349:	mov    esi,DWORD PTR ds:0x4431c8
  40934f:	add    edi,0x8
  409352:	mov    DWORD PTR [ebp-0x470],eax
  409358:	mov    eax,DWORD PTR [edi-0x4]
  40935b:	mov    DWORD PTR [ebp-0x46c],eax
  409361:	lea    eax,[ebp-0x458]
  409367:	push   eax
  409368:	push   DWORD PTR [ebp-0x468]
  40936e:	movsx  eax,BYTE PTR [ebp-0x41c]
  409375:	push   DWORD PTR [ebp-0x40c]
  40937b:	mov    DWORD PTR [ebp-0x420],edi
  409381:	push   eax
  409382:	push   DWORD PTR [ebp-0x414]
  409388:	lea    eax,[ebp-0x470]
  40938e:	push   ebx
  40938f:	push   eax
  409390:	push   DWORD PTR ds:0x44c218
  409396:	call   esi
  409398:	call   eax
  40939a:	mov    edi,DWORD PTR [ebp-0x408]
  4093a0:	add    esp,0x1c
  4093a3:	and    edi,0x80
  4093a9:	je     0x4093c8
  4093ab:	cmp    DWORD PTR [ebp-0x40c],0x0
  4093b2:	jne    0x4093c8
  4093b4:	lea    eax,[ebp-0x458]
  4093ba:	push   eax
  4093bb:	push   ebx
  4093bc:	push   DWORD PTR ds:0x44c224
  4093c2:	call   esi
  4093c4:	call   eax
  4093c6:	pop    ecx
  4093c7:	pop    ecx
  4093c8:	cmp    WORD PTR [ebp-0x41c],0x67
  4093d0:	jne    0x4093ea
  4093d2:	test   edi,edi
  4093d4:	jne    0x4093ea
  4093d6:	lea    eax,[ebp-0x458]
  4093dc:	push   eax
  4093dd:	push   ebx
  4093de:	push   DWORD PTR ds:0x44c220
  4093e4:	call   esi
  4093e6:	call   eax
  4093e8:	pop    ecx
  4093e9:	pop    ecx
  4093ea:	cmp    BYTE PTR [ebx],0x2d
  4093ed:	jne    0x409400
  4093ef:	or     DWORD PTR [ebp-0x408],0x100
  4093f9:	inc    ebx
  4093fa:	mov    DWORD PTR [ebp-0x410],ebx
  409400:	push   ebx
  409401:	jmp    0x40920c
  409406:	mov    DWORD PTR [ebp-0x40c],0x8
  409410:	mov    DWORD PTR [ebp-0x444],edx
  409416:	jmp    0x40943c
  409418:	sub    eax,0x73
  40941b:	je     0x40908a
  409421:	sub    eax,ebx
  409423:	je     0x4092b5
  409429:	sub    eax,0x3
  40942c:	jne    0x4095ed
  409432:	mov    DWORD PTR [ebp-0x444],0x27
  40943c:	test   BYTE PTR [ebp-0x408],0x80
  409443:	mov    DWORD PTR [ebp-0x41c],0x10
  40944d:	je     0x4092bf
  409453:	push   0x30
  409455:	pop    eax
  409456:	mov    WORD PTR [ebp-0x434],ax
  40945d:	mov    eax,DWORD PTR [ebp-0x444]
  409463:	add    eax,0x51
  409466:	mov    WORD PTR [ebp-0x432],ax
  40946d:	mov    DWORD PTR [ebp-0x428],ebx
  409473:	jmp    0x4092bf
  409478:	test   ecx,0x1000
  40947e:	jne    0x4092d1
  409484:	add    edi,0x4
  409487:	test   cl,0x20
  40948a:	je     0x4094a4
  40948c:	mov    DWORD PTR [ebp-0x420],edi
  409492:	test   cl,0x40
  409495:	je     0x40949d
  409497:	movsx  eax,WORD PTR [edi-0x4]
  40949b:	jmp    0x4094a1
  40949d:	movzx  eax,WORD PTR [edi-0x4]
  4094a1:	cdq    
  4094a2:	jmp    0x4094b7
  4094a4:	mov    eax,DWORD PTR [edi-0x4]
  4094a7:	test   cl,0x40
  4094aa:	je     0x4094af
  4094ac:	cdq    
  4094ad:	jmp    0x4094b1
  4094af:	xor    edx,edx
  4094b1:	mov    DWORD PTR [ebp-0x420],edi
  4094b7:	test   cl,0x40
  4094ba:	je     0x4094d7
  4094bc:	test   edx,edx
  4094be:	jg     0x4094d7
  4094c0:	jl     0x4094c6
  4094c2:	test   eax,eax
  4094c4:	jae    0x4094d7
  4094c6:	neg    eax
  4094c8:	adc    edx,0x0
  4094cb:	neg    edx
  4094cd:	or     DWORD PTR [ebp-0x408],0x100
  4094d7:	test   DWORD PTR [ebp-0x408],0x9000
  4094e1:	mov    edi,edx
  4094e3:	mov    ebx,eax
  4094e5:	jne    0x4094e9
  4094e7:	xor    edi,edi
  4094e9:	cmp    DWORD PTR [ebp-0x40c],0x0
  4094f0:	jge    0x4094fe
  4094f2:	mov    DWORD PTR [ebp-0x40c],0x1
  4094fc:	jmp    0x409518
  4094fe:	and    DWORD PTR [ebp-0x408],0xfffffff7
  409505:	mov    eax,0x200
  40950a:	cmp    DWORD PTR [ebp-0x40c],eax
  409510:	jle    0x409518
  409512:	mov    DWORD PTR [ebp-0x40c],eax
  409518:	mov    eax,ebx
  40951a:	or     eax,edi
  40951c:	jne    0x409524
  40951e:	and    DWORD PTR [ebp-0x428],eax
  409524:	lea    esi,[ebp-0x205]
  40952a:	mov    eax,DWORD PTR [ebp-0x40c]
  409530:	dec    DWORD PTR [ebp-0x40c]
  409536:	test   eax,eax
  409538:	jg     0x409540
  40953a:	mov    eax,ebx
  40953c:	or     eax,edi
  40953e:	je     0x40956d
  409540:	mov    eax,DWORD PTR [ebp-0x41c]
  409546:	cdq    
  409547:	push   edx
  409548:	push   eax
  409549:	push   edi
  40954a:	push   ebx
  40954b:	call   0x40eaf0
  409550:	add    ecx,0x30
  409553:	mov    DWORD PTR [ebp-0x474],ebx
  409559:	mov    ebx,eax
  40955b:	mov    edi,edx
  40955d:	cmp    ecx,0x39
  409560:	jle    0x409568
  409562:	add    ecx,DWORD PTR [ebp-0x444]
  409568:	mov    BYTE PTR [esi],cl
  40956a:	dec    esi
  40956b:	jmp    0x40952a
  40956d:	lea    eax,[ebp-0x205]
  409573:	sub    eax,esi
  409575:	inc    esi
  409576:	test   DWORD PTR [ebp-0x408],0x200
  409580:	mov    DWORD PTR [ebp-0x414],eax
  409586:	mov    DWORD PTR [ebp-0x410],esi
  40958c:	je     0x4095ed
  40958e:	test   eax,eax
  409590:	je     0x409599
  409592:	mov    eax,esi
  409594:	cmp    BYTE PTR [eax],0x30
  409597:	je     0x4095ed
  409599:	dec    DWORD PTR [ebp-0x410]
  40959f:	mov    eax,DWORD PTR [ebp-0x410]
  4095a5:	inc    DWORD PTR [ebp-0x414]
  4095ab:	mov    BYTE PTR [eax],0x30
  4095ae:	jmp    0x4095ed
  4095b0:	test   edi,edi
  4095b2:	jne    0x4095bf
  4095b4:	mov    eax,ds:0x44b754
  4095b9:	mov    DWORD PTR [ebp-0x410],eax
  4095bf:	mov    eax,DWORD PTR [ebp-0x410]
  4095c5:	mov    DWORD PTR [ebp-0x42c],0x1
  4095cf:	jmp    0x4095db
  4095d1:	dec    ebx
  4095d2:	cmp    WORD PTR [eax],0x0
  4095d6:	je     0x4095df
  4095d8:	add    eax,0x2
  4095db:	test   ebx,ebx
  4095dd:	jne    0x4095d1
  4095df:	sub    eax,DWORD PTR [ebp-0x410]
  4095e5:	sar    eax,1
  4095e7:	mov    DWORD PTR [ebp-0x414],eax
  4095ed:	cmp    DWORD PTR [ebp-0x448],0x0
  4095f4:	jne    0x4097a2
  4095fa:	mov    eax,DWORD PTR [ebp-0x408]
  409600:	test   al,0x40
  409602:	je     0x40962f
  409604:	test   eax,0x100
  409609:	je     0x40960f
  40960b:	push   0x2d
  40960d:	jmp    0x40961d
  40960f:	test   al,0x1
  409611:	je     0x409617
  409613:	push   0x2b
  409615:	jmp    0x40961d
  409617:	test   al,0x2
  409619:	je     0x40962f
  40961b:	push   0x20
  40961d:	pop    ecx
  40961e:	mov    WORD PTR [ebp-0x434],cx
  409625:	mov    DWORD PTR [ebp-0x428],0x1
  40962f:	mov    edi,DWORD PTR [ebp-0x430]
  409635:	sub    edi,DWORD PTR [ebp-0x414]
  40963b:	sub    edi,DWORD PTR [ebp-0x428]
  409641:	mov    DWORD PTR [ebp-0x41c],edi
  409647:	test   al,0xc
  409649:	jne    0x40966f
  40964b:	jmp    0x40966b
  40964d:	mov    eax,DWORD PTR [ebp-0x424]
  409653:	push   0x20
  409655:	lea    esi,[ebp-0x418]
  40965b:	dec    edi
  40965c:	call   0x408bec
  409661:	cmp    DWORD PTR [ebp-0x418],0xffffffff
  409668:	pop    ecx
  409669:	je     0x40966f
  40966b:	test   edi,edi
  40966d:	jg     0x40964d
  40966f:	push   DWORD PTR [ebp-0x428]
  409675:	mov    edi,DWORD PTR [ebp-0x464]
  40967b:	mov    ebx,DWORD PTR [ebp-0x424]
  409681:	lea    eax,[ebp-0x434]
  409687:	push   eax
  409688:	lea    eax,[ebp-0x418]
  40968e:	call   0x408c1b
  409693:	test   BYTE PTR [ebp-0x408],0x8
  40969a:	pop    ecx
  40969b:	pop    ecx
  40969c:	je     0x4096cd
  40969e:	test   BYTE PTR [ebp-0x408],0x4
  4096a5:	jne    0x4096cd
  4096a7:	mov    edi,DWORD PTR [ebp-0x41c]
  4096ad:	jmp    0x4096c9
  4096af:	push   0x30
  4096b1:	lea    esi,[ebp-0x418]
  4096b7:	mov    eax,ebx
  4096b9:	dec    edi
  4096ba:	call   0x408bec
  4096bf:	cmp    DWORD PTR [ebp-0x418],0xffffffff
  4096c6:	pop    ecx
  4096c7:	je     0x4096cd
  4096c9:	test   edi,edi
  4096cb:	jg     0x4096af
  4096cd:	cmp    DWORD PTR [ebp-0x42c],0x0
  4096d4:	jne    0x409741
  4096d6:	mov    ebx,DWORD PTR [ebp-0x414]
  4096dc:	test   ebx,ebx
  4096de:	jle    0x409741
  4096e0:	mov    edi,DWORD PTR [ebp-0x410]
  4096e6:	lea    eax,[ebp-0x458]
  4096ec:	push   eax
  4096ed:	mov    eax,DWORD PTR [ebp-0x458]
  4096f3:	push   DWORD PTR [eax+0xac]
  4096f9:	lea    eax,[ebp-0x45c]
  4096ff:	push   edi
  409700:	push   eax
  409701:	dec    ebx
  409702:	call   0x40e7d2
  409707:	add    esp,0x10
  40970a:	mov    DWORD PTR [ebp-0x474],eax
  409710:	test   eax,eax
  409712:	jle    0x409738
  409714:	push   DWORD PTR [ebp-0x45c]
  40971a:	mov    eax,DWORD PTR [ebp-0x424]
  409720:	lea    esi,[ebp-0x418]
  409726:	call   0x408bec
  40972b:	add    edi,DWORD PTR [ebp-0x474]
  409731:	pop    ecx
  409732:	test   ebx,ebx
  409734:	jg     0x4096e6
  409736:	jmp    0x409766
  409738:	or     DWORD PTR [ebp-0x418],0xffffffff
  40973f:	jmp    0x409766
  409741:	push   DWORD PTR [ebp-0x414]
  409747:	mov    edi,DWORD PTR [ebp-0x464]
  40974d:	push   DWORD PTR [ebp-0x410]
  409753:	mov    ebx,DWORD PTR [ebp-0x424]
  409759:	lea    eax,[ebp-0x418]
  40975f:	call   0x408c1b
  409764:	pop    ecx
  409765:	pop    ecx
  409766:	cmp    DWORD PTR [ebp-0x418],0x0
  40976d:	jl     0x4097a2
  40976f:	test   BYTE PTR [ebp-0x408],0x4
  409776:	je     0x4097a2
  409778:	mov    edi,DWORD PTR [ebp-0x41c]
  40977e:	jmp    0x40979e
  409780:	mov    eax,DWORD PTR [ebp-0x424]
  409786:	push   0x20
  409788:	lea    esi,[ebp-0x418]
  40978e:	dec    edi
  40978f:	call   0x408bec
  409794:	cmp    DWORD PTR [ebp-0x418],0xffffffff
  40979b:	pop    ecx
  40979c:	je     0x4097a2
  40979e:	test   edi,edi
  4097a0:	jg     0x409780
  4097a2:	cmp    DWORD PTR [ebp-0x43c],0x0
  4097a9:	je     0x4097be
  4097ab:	push   DWORD PTR [ebp-0x43c]
  4097b1:	call   0x404391
  4097b6:	and    DWORD PTR [ebp-0x43c],0x0
  4097bd:	pop    ecx
  4097be:	mov    esi,DWORD PTR [ebp-0x440]
  4097c4:	movzx  eax,WORD PTR [esi]
  4097c7:	mov    DWORD PTR [ebp-0x41c],eax
  4097cd:	test   ax,ax
  4097d0:	je     0x409801
  4097d2:	mov    edx,DWORD PTR [ebp-0x460]
  4097d8:	mov    edi,DWORD PTR [ebp-0x420]
  4097de:	mov    ecx,eax
  4097e0:	jmp    0x408d50
  4097e5:	call   0x40769b
  4097ea:	mov    DWORD PTR [eax],0x16
  4097f0:	call   0x407649
  4097f5:	cmp    BYTE PTR [ebp-0x44c],0x0
  4097fc:	jmp    0x408d12
  409801:	cmp    BYTE PTR [ebp-0x44c],0x0
  409808:	je     0x409814
  40980a:	mov    eax,DWORD PTR [ebp-0x450]
  409810:	and    DWORD PTR [eax+0x70],0xfffffffd
  409814:	mov    eax,DWORD PTR [ebp-0x418]
  40981a:	mov    ecx,DWORD PTR [ebp-0x4]
  40981d:	pop    edi
  40981e:	pop    esi
  40981f:	xor    ecx,ebp
  409821:	pop    ebx
  409822:	call   0x403edd
  409827:	leave  
  409828:	ret    
  409829:	nop
  40982a:	mov    ebx,0xa500408f
  40982f:	lea    eax,[eax+0x0]
  409832:	xlat   BYTE PTR ds:[ebx]
  409833:	lea    eax,[eax+0x0]
  409836:	xor    al,0x8e
  409838:	inc    eax
  409839:	add    BYTE PTR [ecx-0x72ffbf72],al
  40983f:	mov    es,WORD PTR [eax+0x0]
  409842:	aam    0x8e
  409844:	inc    eax
  409845:	add    ah,bl
  409847:	pop    DWORD PTR [eax+0x0]
  40984a:	mov    edi,edi
  40984c:	push   ebp
  40984d:	mov    ebp,esp
  40984f:	cmp    DWORD PTR [ebp+0x8],0x0
  409853:	jne    0x40986a
  409855:	call   0x40769b
  40985a:	mov    DWORD PTR [eax],0x16
  409860:	call   0x407649
  409865:	or     eax,0xffffffff
  409868:	pop    ebp
  409869:	ret    
  40986a:	push   DWORD PTR [ebp+0x8]
  40986d:	push   0x0
  40986f:	push   DWORD PTR ds:0x44dde8
  409875:	call   DWORD PTR ds:0x4430d0
  40987b:	pop    ebp
  40987c:	ret    
  40987d:	mov    edi,edi
  40987f:	push   ebp
  409880:	mov    ebp,esp
  409882:	push   esi
  409883:	mov    esi,DWORD PTR [ebp+0x8]
  409886:	mov    eax,DWORD PTR [esi+0xc]
  409889:	test   al,0x83
  40988b:	je     0x4098ab
  40988d:	test   al,0x8
  40988f:	je     0x4098ab
  409891:	push   DWORD PTR [esi+0x8]
  409894:	call   0x404391
  409899:	and    DWORD PTR [esi+0xc],0xfffffbf7
  4098a0:	xor    eax,eax
  4098a2:	pop    ecx
  4098a3:	mov    DWORD PTR [esi],eax
  4098a5:	mov    DWORD PTR [esi+0x8],eax
  4098a8:	mov    DWORD PTR [esi+0x4],eax
  4098ab:	pop    esi
  4098ac:	pop    ebp
  4098ad:	ret    
  4098ae:	test   BYTE PTR [ecx+0xc],0x40
  4098b2:	je     0x4098ba
  4098b4:	cmp    DWORD PTR [ecx+0x8],0x0
  4098b8:	je     0x4098de
  4098ba:	dec    DWORD PTR [ecx+0x4]
  4098bd:	js     0x4098ca
  4098bf:	mov    edx,DWORD PTR [ecx]
  4098c1:	mov    BYTE PTR [edx],al
  4098c3:	inc    DWORD PTR [ecx]
  4098c5:	movzx  eax,al
  4098c8:	jmp    0x4098d6
  4098ca:	movsx  eax,al
  4098cd:	push   ecx
  4098ce:	push   eax
  4098cf:	call   0x4070f0
  4098d4:	pop    ecx
  4098d5:	pop    ecx
  4098d6:	cmp    eax,0xffffffff
  4098d9:	jne    0x4098de
  4098db:	or     DWORD PTR [esi],eax
  4098dd:	ret    
  4098de:	inc    DWORD PTR [esi]
  4098e0:	ret    
  4098e1:	mov    edi,edi
  4098e3:	push   ebp
  4098e4:	mov    ebp,esp
  4098e6:	push   ecx
  4098e7:	test   BYTE PTR [ebx+0xc],0x40
  4098eb:	push   esi
  4098ec:	mov    esi,eax
  4098ee:	mov    eax,DWORD PTR [edi]
  4098f0:	mov    DWORD PTR [ebp-0x4],eax
  4098f3:	je     0x409902
  4098f5:	cmp    DWORD PTR [ebx+0x8],0x0
  4098f9:	jne    0x409902
  4098fb:	mov    eax,DWORD PTR [ebp+0xc]
  4098fe:	add    DWORD PTR [esi],eax
  409900:	jmp    0x409940
  409902:	and    DWORD PTR [edi],0x0
  409905:	cmp    DWORD PTR [ebp+0xc],0x0
  409909:	jle    0x40993b
  40990b:	mov    eax,DWORD PTR [ebp+0x8]
  40990e:	mov    al,BYTE PTR [eax]
  409910:	dec    DWORD PTR [ebp+0xc]
  409913:	mov    ecx,ebx
  409915:	call   0x4098ae
  40991a:	inc    DWORD PTR [ebp+0x8]
  40991d:	cmp    DWORD PTR [esi],0xffffffff
  409920:	jne    0x409930
  409922:	cmp    DWORD PTR [edi],0x2a
  409925:	jne    0x409936
  409927:	mov    ecx,ebx
  409929:	mov    al,0x3f
  40992b:	call   0x4098ae
  409930:	cmp    DWORD PTR [ebp+0xc],0x0
  409934:	jg     0x40990b
  409936:	cmp    DWORD PTR [edi],0x0
  409939:	jne    0x409940
  40993b:	mov    eax,DWORD PTR [ebp-0x4]
  40993e:	mov    DWORD PTR [edi],eax
  409940:	pop    esi
  409941:	leave  
  409942:	ret    
  409943:	mov    edi,edi
  409945:	push   ebp
  409946:	mov    ebp,esp
  409948:	sub    esp,0x280
  40994e:	mov    eax,ds:0x44b470
  409953:	xor    eax,ebp
  409955:	mov    DWORD PTR [ebp-0x4],eax
  409958:	push   ebx
  409959:	mov    ebx,DWORD PTR [ebp+0xc]
  40995c:	push   esi
  40995d:	mov    esi,DWORD PTR [ebp+0x8]
  409960:	xor    eax,eax
  409962:	push   edi
  409963:	mov    edi,DWORD PTR [ebp+0x14]
  409966:	push   DWORD PTR [ebp+0x10]
  409969:	lea    ecx,[ebp-0x25c]
  40996f:	mov    DWORD PTR [ebp-0x230],esi
  409975:	mov    DWORD PTR [ebp-0x21c],edi
  40997b:	mov    DWORD PTR [ebp-0x24c],eax
  409981:	mov    DWORD PTR [ebp-0x210],eax
  409987:	mov    DWORD PTR [ebp-0x238],eax
  40998d:	mov    DWORD PTR [ebp-0x218],eax
  409993:	mov    DWORD PTR [ebp-0x234],eax
  409999:	mov    DWORD PTR [ebp-0x244],eax
  40999f:	mov    DWORD PTR [ebp-0x23c],eax
  4099a5:	call   0x406b0c
  4099aa:	call   0x40769b
  4099af:	mov    DWORD PTR [ebp-0x26c],eax
  4099b5:	test   esi,esi
  4099b7:	jne    0x4099e4
  4099b9:	call   0x40769b
  4099be:	mov    DWORD PTR [eax],0x16
  4099c4:	call   0x407649
  4099c9:	cmp    BYTE PTR [ebp-0x250],0x0
  4099d0:	je     0x4099dc
  4099d2:	mov    eax,DWORD PTR [ebp-0x254]
  4099d8:	and    DWORD PTR [eax+0x70],0xfffffffd
  4099dc:	or     eax,0xffffffff
  4099df:	jmp    0x40a51b
  4099e4:	test   BYTE PTR [esi+0xc],0x40
  4099e8:	jne    0x409a48
  4099ea:	push   esi
  4099eb:	call   0x407499
  4099f0:	pop    ecx
  4099f1:	mov    edx,0x44b478
  4099f6:	cmp    eax,0xffffffff
  4099f9:	je     0x409a16
  4099fb:	cmp    eax,0xfffffffe
  4099fe:	je     0x409a16
  409a00:	mov    ecx,eax
  409a02:	and    ecx,0x1f
  409a05:	mov    esi,eax
  409a07:	sar    esi,0x5
  409a0a:	shl    ecx,0x6
  409a0d:	add    ecx,DWORD PTR [esi*4+0x4507a0]
  409a14:	jmp    0x409a18
  409a16:	mov    ecx,edx
  409a18:	test   BYTE PTR [ecx+0x24],0x7f
  409a1c:	jne    0x4099b9
  409a1e:	cmp    eax,0xffffffff
  409a21:	je     0x409a3c
  409a23:	cmp    eax,0xfffffffe
  409a26:	je     0x409a3c
  409a28:	mov    ecx,eax
  409a2a:	and    eax,0x1f
  409a2d:	sar    ecx,0x5
  409a30:	shl    eax,0x6
  409a33:	add    eax,DWORD PTR [ecx*4+0x4507a0]
  409a3a:	jmp    0x409a3e
  409a3c:	mov    eax,edx
  409a3e:	test   BYTE PTR [eax+0x24],0x80
  409a42:	jne    0x4099b9
  409a48:	xor    ecx,ecx
  409a4a:	cmp    ebx,ecx
  409a4c:	je     0x4099b9
  409a52:	mov    dl,BYTE PTR [ebx]
  409a54:	mov    DWORD PTR [ebp-0x224],ecx
  409a5a:	mov    DWORD PTR [ebp-0x228],ecx
  409a60:	mov    DWORD PTR [ebp-0x248],ecx
  409a66:	mov    BYTE PTR [ebp-0x211],dl
  409a6c:	test   dl,dl
  409a6e:	je     0x40a502
  409a74:	inc    ebx
  409a75:	xor    esi,esi
  409a77:	mov    DWORD PTR [ebp-0x240],ebx
  409a7d:	cmp    DWORD PTR [ebp-0x224],esi
  409a83:	jl     0x40a502
  409a89:	lea    eax,[edx-0x20]
  409a8c:	cmp    al,0x58
  409a8e:	ja     0x409a9f
  409a90:	movsx  eax,dl
  409a93:	movsx  eax,BYTE PTR [eax+0x443df0]
  409a9a:	and    eax,0xf
  409a9d:	jmp    0x409aa1
  409a9f:	xor    eax,eax
  409aa1:	movsx  eax,BYTE PTR [ecx+eax*8+0x443e10]
  409aa9:	push   0x7
  409aab:	sar    eax,0x4
  409aae:	pop    ecx
  409aaf:	mov    DWORD PTR [ebp-0x274],eax
  409ab5:	cmp    eax,ecx
  409ab7:	ja     0x40a4dd
  409abd:	jmp    DWORD PTR [eax*4+0x40a52b]
  409ac4:	or     DWORD PTR [ebp-0x218],0xffffffff
  409acb:	mov    DWORD PTR [ebp-0x278],esi
  409ad1:	mov    DWORD PTR [ebp-0x244],esi
  409ad7:	mov    DWORD PTR [ebp-0x238],esi
  409add:	mov    DWORD PTR [ebp-0x234],esi
  409ae3:	mov    DWORD PTR [ebp-0x210],esi
  409ae9:	mov    DWORD PTR [ebp-0x23c],esi
  409aef:	jmp    0x40a4dd
  409af4:	movsx  eax,dl
  409af7:	sub    eax,0x20
  409afa:	je     0x409b46
  409afc:	sub    eax,0x3
  409aff:	je     0x409b37
  409b01:	sub    eax,0x8
  409b04:	je     0x409b2b
  409b06:	dec    eax
  409b07:	dec    eax
  409b08:	je     0x409b1f
  409b0a:	sub    eax,0x3
  409b0d:	jne    0x40a4dd
  409b13:	or     DWORD PTR [ebp-0x210],0x8
  409b1a:	jmp    0x40a4dd
  409b1f:	or     DWORD PTR [ebp-0x210],0x4
  409b26:	jmp    0x40a4dd
  409b2b:	or     DWORD PTR [ebp-0x210],0x1
  409b32:	jmp    0x40a4dd
  409b37:	or     DWORD PTR [ebp-0x210],0x80
  409b41:	jmp    0x40a4dd
  409b46:	or     DWORD PTR [ebp-0x210],0x2
  409b4d:	jmp    0x40a4dd
  409b52:	cmp    dl,0x2a
  409b55:	jne    0x409b83
  409b57:	add    edi,0x4
  409b5a:	mov    DWORD PTR [ebp-0x21c],edi
  409b60:	mov    edi,DWORD PTR [edi-0x4]
  409b63:	mov    DWORD PTR [ebp-0x238],edi
  409b69:	cmp    edi,esi
  409b6b:	jge    0x40a4dd
  409b71:	or     DWORD PTR [ebp-0x210],0x4
  409b78:	neg    DWORD PTR [ebp-0x238]
  409b7e:	jmp    0x40a4dd
  409b83:	mov    eax,DWORD PTR [ebp-0x238]
  409b89:	imul   eax,eax,0xa
  409b8c:	movsx  ecx,dl
  409b8f:	lea    eax,[eax+ecx*1-0x30]
  409b93:	mov    DWORD PTR [ebp-0x238],eax
  409b99:	jmp    0x40a4dd
  409b9e:	mov    DWORD PTR [ebp-0x218],esi
  409ba4:	jmp    0x40a4dd
  409ba9:	cmp    dl,0x2a
  409bac:	jne    0x409bd4
  409bae:	add    edi,0x4
  409bb1:	mov    DWORD PTR [ebp-0x21c],edi
  409bb7:	mov    edi,DWORD PTR [edi-0x4]
  409bba:	mov    DWORD PTR [ebp-0x218],edi
  409bc0:	cmp    edi,esi
  409bc2:	jge    0x40a4dd
  409bc8:	or     DWORD PTR [ebp-0x218],0xffffffff
  409bcf:	jmp    0x40a4dd
  409bd4:	mov    eax,DWORD PTR [ebp-0x218]
  409bda:	imul   eax,eax,0xa
  409bdd:	movsx  ecx,dl
  409be0:	lea    eax,[eax+ecx*1-0x30]
  409be4:	mov    DWORD PTR [ebp-0x218],eax
  409bea:	jmp    0x40a4dd
  409bef:	cmp    dl,0x49
  409bf2:	je     0x409c49
  409bf4:	cmp    dl,0x68
  409bf7:	je     0x409c3d
  409bf9:	cmp    dl,0x6c
  409bfc:	je     0x409c16
  409bfe:	cmp    dl,0x77
  409c01:	jne    0x40a4dd
  409c07:	or     DWORD PTR [ebp-0x210],0x800
  409c11:	jmp    0x40a4dd
  409c16:	cmp    BYTE PTR [ebx],0x6c
  409c19:	jne    0x409c31
  409c1b:	inc    ebx
  409c1c:	or     DWORD PTR [ebp-0x210],0x1000
  409c26:	mov    DWORD PTR [ebp-0x240],ebx
  409c2c:	jmp    0x40a4dd
  409c31:	or     DWORD PTR [ebp-0x210],0x10
  409c38:	jmp    0x40a4dd
  409c3d:	or     DWORD PTR [ebp-0x210],0x20
  409c44:	jmp    0x40a4dd
  409c49:	mov    al,BYTE PTR [ebx]
  409c4b:	cmp    al,0x36
  409c4d:	jne    0x409c6d
  409c4f:	cmp    BYTE PTR [ebx+0x1],0x34
  409c53:	jne    0x409c6d
  409c55:	add    ebx,0x2
  409c58:	or     DWORD PTR [ebp-0x210],0x8000
  409c62:	mov    DWORD PTR [ebp-0x240],ebx
  409c68:	jmp    0x40a4dd
  409c6d:	cmp    al,0x33
  409c6f:	jne    0x409c8f
  409c71:	cmp    BYTE PTR [ebx+0x1],0x32
  409c75:	jne    0x409c8f
  409c77:	add    ebx,0x2
  409c7a:	and    DWORD PTR [ebp-0x210],0xffff7fff
  409c84:	mov    DWORD PTR [ebp-0x240],ebx
  409c8a:	jmp    0x40a4dd
  409c8f:	cmp    al,0x64
  409c91:	je     0x40a4dd
  409c97:	cmp    al,0x69
  409c99:	je     0x40a4dd
  409c9f:	cmp    al,0x6f
  409ca1:	je     0x40a4dd
  409ca7:	cmp    al,0x75
  409ca9:	je     0x40a4dd
  409caf:	cmp    al,0x78
  409cb1:	je     0x40a4dd
  409cb7:	cmp    al,0x58
  409cb9:	je     0x40a4dd
  409cbf:	mov    DWORD PTR [ebp-0x274],esi
  409cc5:	and    DWORD PTR [ebp-0x23c],esi
  409ccb:	lea    eax,[ebp-0x25c]
  409cd1:	push   eax
  409cd2:	movzx  eax,dl
  409cd5:	push   eax
  409cd6:	call   0x40e902
  409cdb:	pop    ecx
  409cdc:	test   eax,eax
  409cde:	mov    al,BYTE PTR [ebp-0x211]
  409ce4:	pop    ecx
  409ce5:	je     0x409d09
  409ce7:	mov    ecx,DWORD PTR [ebp-0x230]
  409ced:	lea    esi,[ebp-0x224]
  409cf3:	call   0x4098ae
  409cf8:	mov    al,BYTE PTR [ebx]
  409cfa:	inc    ebx
  409cfb:	mov    DWORD PTR [ebp-0x240],ebx
  409d01:	test   al,al
  409d03:	je     0x4099b9
  409d09:	mov    ecx,DWORD PTR [ebp-0x230]
  409d0f:	lea    esi,[ebp-0x224]
  409d15:	call   0x4098ae
  409d1a:	jmp    0x40a4dd
  409d1f:	movsx  eax,dl
  409d22:	cmp    eax,0x64
  409d25:	jg     0x409ee1
  409d2b:	je     0x409f89
  409d31:	cmp    eax,0x53
  409d34:	jg     0x409df4
  409d3a:	je     0x409d88
  409d3c:	sub    eax,0x41
  409d3f:	je     0x409d51
  409d41:	dec    eax
  409d42:	dec    eax
  409d43:	je     0x409d69
  409d45:	dec    eax
  409d46:	dec    eax
  409d47:	je     0x409d51
  409d49:	dec    eax
  409d4a:	dec    eax
  409d4b:	jne    0x40a2fc
  409d51:	add    dl,0x20
  409d54:	mov    DWORD PTR [ebp-0x278],0x1
  409d5e:	mov    BYTE PTR [ebp-0x211],dl
  409d64:	jmp    0x409fbf
  409d69:	test   DWORD PTR [ebp-0x210],0x830
  409d73:	jne    0x409e17
  409d79:	or     DWORD PTR [ebp-0x210],0x800
  409d83:	jmp    0x409e17
  409d88:	test   DWORD PTR [ebp-0x210],0x830
  409d92:	jne    0x409d9e
  409d94:	or     DWORD PTR [ebp-0x210],0x800
  409d9e:	mov    ecx,DWORD PTR [ebp-0x218]
  409da4:	cmp    ecx,0xffffffff
  409da7:	jne    0x409dae
  409da9:	mov    ecx,0x7fffffff
  409dae:	add    edi,0x4
  409db1:	test   DWORD PTR [ebp-0x210],0x810
  409dbb:	mov    DWORD PTR [ebp-0x21c],edi
  409dc1:	mov    edi,DWORD PTR [edi-0x4]
  409dc4:	mov    DWORD PTR [ebp-0x220],edi
  409dca:	je     0x40a2ce
  409dd0:	test   edi,edi
  409dd2:	jne    0x409ddf
  409dd4:	mov    eax,ds:0x44b754
  409dd9:	mov    DWORD PTR [ebp-0x220],eax
  409ddf:	mov    eax,DWORD PTR [ebp-0x220]
  409de5:	mov    DWORD PTR [ebp-0x23c],0x1
  409def:	jmp    0x40a2c0
  409df4:	sub    eax,0x58
  409df7:	je     0x40a11f
  409dfd:	dec    eax
  409dfe:	dec    eax
  409dff:	je     0x409e80
  409e01:	sub    eax,ecx
  409e03:	je     0x409fbf
  409e09:	dec    eax
  409e0a:	dec    eax
  409e0b:	jne    0x40a2fc
  409e11:	mov    edi,DWORD PTR [ebp-0x21c]
  409e17:	add    edi,0x4
  409e1a:	test   DWORD PTR [ebp-0x210],0x810
  409e24:	mov    DWORD PTR [ebp-0x21c],edi
  409e2a:	je     0x409e5c
  409e2c:	movzx  eax,WORD PTR [edi-0x4]
  409e30:	push   eax
  409e31:	push   0x200
  409e36:	lea    eax,[ebp-0x20c]
  409e3c:	push   eax
  409e3d:	lea    eax,[ebp-0x228]
  409e43:	push   eax
  409e44:	call   0x40ecda
  409e49:	add    esp,0x10
  409e4c:	test   eax,eax
  409e4e:	je     0x409e6f
  409e50:	mov    DWORD PTR [ebp-0x244],0x1
  409e5a:	jmp    0x409e6f
  409e5c:	mov    al,BYTE PTR [edi-0x4]
  409e5f:	mov    BYTE PTR [ebp-0x20c],al
  409e65:	mov    DWORD PTR [ebp-0x228],0x1
  409e6f:	lea    eax,[ebp-0x20c]
  409e75:	mov    DWORD PTR [ebp-0x220],eax
  409e7b:	jmp    0x40a2fc
  409e80:	mov    eax,DWORD PTR [edi]
  409e82:	add    edi,0x4
  409e85:	mov    DWORD PTR [ebp-0x21c],edi
  409e8b:	test   eax,eax
  409e8d:	je     0x409eca
  409e8f:	mov    ecx,DWORD PTR [eax+0x4]
  409e92:	test   ecx,ecx
  409e94:	je     0x409eca
  409e96:	test   DWORD PTR [ebp-0x210],0x800
  409ea0:	movsx  eax,WORD PTR [eax]
  409ea3:	mov    DWORD PTR [ebp-0x220],ecx
  409ea9:	je     0x409ebf
  409eab:	cdq    
  409eac:	sub    eax,edx
  409eae:	sar    eax,1
  409eb0:	mov    DWORD PTR [ebp-0x23c],0x1
  409eba:	jmp    0x40a2f6
  409ebf:	and    DWORD PTR [ebp-0x23c],esi
  409ec5:	jmp    0x40a2f6
  409eca:	mov    eax,ds:0x44b750
  409ecf:	mov    DWORD PTR [ebp-0x220],eax
  409ed5:	push   eax
  409ed6:	call   0x405450
  409edb:	pop    ecx
  409edc:	jmp    0x40a2f6
  409ee1:	cmp    eax,0x70
  409ee4:	jg     0x40a127
  409eea:	je     0x40a115
  409ef0:	cmp    eax,0x65
  409ef3:	jl     0x40a2fc
  409ef9:	cmp    eax,0x67
  409efc:	jle    0x409fb9
  409f02:	cmp    eax,0x69
  409f05:	je     0x409f83
  409f07:	cmp    eax,0x6e
  409f0a:	je     0x409f3a
  409f0c:	cmp    eax,0x6f
  409f0f:	jne    0x40a2fc
  409f15:	test   BYTE PTR [ebp-0x210],0x80
  409f1c:	mov    edi,DWORD PTR [ebp-0x21c]
  409f22:	mov    DWORD PTR [ebp-0x228],0x8
  409f2c:	je     0x409f9a
  409f2e:	or     DWORD PTR [ebp-0x210],0x200
  409f38:	jmp    0x409f9a
  409f3a:	add    DWORD PTR [ebp-0x21c],0x4
  409f41:	mov    eax,DWORD PTR [ebp-0x21c]
  409f47:	mov    esi,DWORD PTR [eax-0x4]
  409f4a:	call   0x40ead4
  409f4f:	test   eax,eax
  409f51:	je     0x4099b9
  409f57:	test   BYTE PTR [ebp-0x210],0x20
  409f5e:	je     0x409f6c
  409f60:	mov    ax,WORD PTR [ebp-0x224]
  409f67:	mov    WORD PTR [esi],ax
  409f6a:	jmp    0x409f74
  409f6c:	mov    eax,DWORD PTR [ebp-0x224]
  409f72:	mov    DWORD PTR [esi],eax
  409f74:	mov    DWORD PTR [ebp-0x244],0x1
  409f7e:	jmp    0x40a4c1
  409f83:	mov    edi,DWORD PTR [ebp-0x21c]
  409f89:	or     DWORD PTR [ebp-0x210],0x40
  409f90:	mov    DWORD PTR [ebp-0x228],0xa
  409f9a:	mov    ecx,DWORD PTR [ebp-0x210]
  409fa0:	test   ecx,0x8000
  409fa6:	je     0x40a18c
  409fac:	mov    eax,DWORD PTR [edi]
  409fae:	mov    edx,DWORD PTR [edi+0x4]
  409fb1:	add    edi,0x8
  409fb4:	jmp    0x40a1c5
  409fb9:	mov    edi,DWORD PTR [ebp-0x21c]
  409fbf:	or     DWORD PTR [ebp-0x210],0x40
  409fc6:	lea    ebx,[ebp-0x20c]
  409fcc:	mov    eax,0x200
  409fd1:	mov    DWORD PTR [ebp-0x220],ebx
  409fd7:	mov    DWORD PTR [ebp-0x260],eax
  409fdd:	cmp    DWORD PTR [ebp-0x218],esi
  409fe3:	jge    0x409ff1
  409fe5:	mov    DWORD PTR [ebp-0x218],0x6
  409fef:	jmp    0x40a05b
  409ff1:	jne    0x40a004
  409ff3:	cmp    dl,0x67
  409ff6:	jne    0x40a05b
  409ff8:	mov    DWORD PTR [ebp-0x218],0x1
  40a002:	jmp    0x40a05b
  40a004:	cmp    DWORD PTR [ebp-0x218],eax
  40a00a:	jle    0x40a012
  40a00c:	mov    DWORD PTR [ebp-0x218],eax
  40a012:	cmp    DWORD PTR [ebp-0x218],0xa3
  40a01c:	jle    0x40a05b
  40a01e:	mov    esi,DWORD PTR [ebp-0x218]
  40a024:	add    esi,0x15d
  40a02a:	push   esi
  40a02b:	call   0x406e65
  40a030:	mov    dl,BYTE PTR [ebp-0x211]
  40a036:	pop    ecx
  40a037:	mov    DWORD PTR [ebp-0x248],eax
  40a03d:	test   eax,eax
  40a03f:	je     0x40a051
  40a041:	mov    DWORD PTR [ebp-0x220],eax
  40a047:	mov    DWORD PTR [ebp-0x260],esi
  40a04d:	mov    ebx,eax
  40a04f:	jmp    0x40a05b
  40a051:	mov    DWORD PTR [ebp-0x218],0xa3
  40a05b:	mov    eax,DWORD PTR [edi]
  40a05d:	mov    esi,DWORD PTR ds:0x4431c8
  40a063:	add    edi,0x8
  40a066:	mov    DWORD PTR [ebp-0x280],eax
  40a06c:	mov    eax,DWORD PTR [edi-0x4]
  40a06f:	mov    DWORD PTR [ebp-0x27c],eax
  40a075:	lea    eax,[ebp-0x25c]
  40a07b:	push   eax
  40a07c:	push   DWORD PTR [ebp-0x278]
  40a082:	movsx  eax,dl
  40a085:	push   DWORD PTR [ebp-0x218]
  40a08b:	mov    DWORD PTR [ebp-0x21c],edi
  40a091:	push   eax
  40a092:	push   DWORD PTR [ebp-0x260]
  40a098:	lea    eax,[ebp-0x280]
  40a09e:	push   ebx
  40a09f:	push   eax
  40a0a0:	push   DWORD PTR ds:0x44c218
  40a0a6:	call   esi
  40a0a8:	call   eax
  40a0aa:	mov    edi,DWORD PTR [ebp-0x210]
  40a0b0:	add    esp,0x1c
  40a0b3:	and    edi,0x80
  40a0b9:	je     0x40a0d8
  40a0bb:	cmp    DWORD PTR [ebp-0x218],0x0
  40a0c2:	jne    0x40a0d8
  40a0c4:	lea    eax,[ebp-0x25c]
  40a0ca:	push   eax
  40a0cb:	push   ebx
  40a0cc:	push   DWORD PTR ds:0x44c224
  40a0d2:	call   esi
  40a0d4:	call   eax
  40a0d6:	pop    ecx
  40a0d7:	pop    ecx
  40a0d8:	cmp    BYTE PTR [ebp-0x211],0x67
  40a0df:	jne    0x40a0f9
  40a0e1:	test   edi,edi
  40a0e3:	jne    0x40a0f9
  40a0e5:	lea    eax,[ebp-0x25c]
  40a0eb:	push   eax
  40a0ec:	push   ebx
  40a0ed:	push   DWORD PTR ds:0x44c220
  40a0f3:	call   esi
  40a0f5:	call   eax
  40a0f7:	pop    ecx
  40a0f8:	pop    ecx
  40a0f9:	cmp    BYTE PTR [ebx],0x2d
  40a0fc:	jne    0x40a10f
  40a0fe:	or     DWORD PTR [ebp-0x210],0x100
  40a108:	inc    ebx
  40a109:	mov    DWORD PTR [ebp-0x220],ebx
  40a10f:	push   ebx
  40a110:	jmp    0x409ed6
  40a115:	mov    DWORD PTR [ebp-0x218],0x8
  40a11f:	mov    DWORD PTR [ebp-0x24c],ecx
  40a125:	jmp    0x40a151
  40a127:	sub    eax,0x73
  40a12a:	je     0x409d9e
  40a130:	dec    eax
  40a131:	dec    eax
  40a132:	je     0x409f90
  40a138:	sub    eax,0x3
  40a13b:	jne    0x40a2fc
  40a141:	mov    edi,DWORD PTR [ebp-0x21c]
  40a147:	mov    DWORD PTR [ebp-0x24c],0x27
  40a151:	test   BYTE PTR [ebp-0x210],0x80
  40a158:	mov    DWORD PTR [ebp-0x228],0x10
  40a162:	je     0x409f9a
  40a168:	mov    al,BYTE PTR [ebp-0x24c]
  40a16e:	add    al,0x51
  40a170:	mov    BYTE PTR [ebp-0x22c],0x30
  40a177:	mov    BYTE PTR [ebp-0x22b],al
  40a17d:	mov    DWORD PTR [ebp-0x234],0x2
  40a187:	jmp    0x409f9a
  40a18c:	test   ecx,0x1000
  40a192:	jne    0x409fac
  40a198:	add    edi,0x4
  40a19b:	test   cl,0x20
  40a19e:	je     0x40a1b8
  40a1a0:	mov    DWORD PTR [ebp-0x21c],edi
  40a1a6:	test   cl,0x40
  40a1a9:	je     0x40a1b1
  40a1ab:	movsx  eax,WORD PTR [edi-0x4]
  40a1af:	jmp    0x40a1b5
  40a1b1:	movzx  eax,WORD PTR [edi-0x4]
  40a1b5:	cdq    
  40a1b6:	jmp    0x40a1cb
  40a1b8:	mov    eax,DWORD PTR [edi-0x4]
  40a1bb:	test   cl,0x40
  40a1be:	je     0x40a1c3
  40a1c0:	cdq    
  40a1c1:	jmp    0x40a1c5
  40a1c3:	xor    edx,edx
  40a1c5:	mov    DWORD PTR [ebp-0x21c],edi
  40a1cb:	test   cl,0x40
  40a1ce:	je     0x40a1ea
  40a1d0:	test   edx,edx
  40a1d2:	jg     0x40a1ea
  40a1d4:	jl     0x40a1da
  40a1d6:	test   eax,eax
  40a1d8:	jae    0x40a1ea
  40a1da:	neg    eax
  40a1dc:	adc    edx,esi
  40a1de:	neg    edx
  40a1e0:	or     DWORD PTR [ebp-0x210],0x100
  40a1ea:	test   DWORD PTR [ebp-0x210],0x9000
  40a1f4:	mov    edi,edx
  40a1f6:	mov    ebx,eax
  40a1f8:	jne    0x40a1fc
  40a1fa:	xor    edi,edi
  40a1fc:	cmp    DWORD PTR [ebp-0x218],esi
  40a202:	jge    0x40a210
  40a204:	mov    DWORD PTR [ebp-0x218],0x1
  40a20e:	jmp    0x40a22a
  40a210:	and    DWORD PTR [ebp-0x210],0xfffffff7
  40a217:	mov    eax,0x200
  40a21c:	cmp    DWORD PTR [ebp-0x218],eax
  40a222:	jle    0x40a22a
  40a224:	mov    DWORD PTR [ebp-0x218],eax
  40a22a:	mov    eax,ebx
  40a22c:	or     eax,edi
  40a22e:	jne    0x40a236
  40a230:	and    DWORD PTR [ebp-0x234],esi
  40a236:	lea    esi,[ebp-0xd]
  40a239:	mov    eax,DWORD PTR [ebp-0x218]
  40a23f:	dec    DWORD PTR [ebp-0x218]
  40a245:	test   eax,eax
  40a247:	jg     0x40a24f
  40a249:	mov    eax,ebx
  40a24b:	or     eax,edi
  40a24d:	je     0x40a27c
  40a24f:	mov    eax,DWORD PTR [ebp-0x228]
  40a255:	cdq    
  40a256:	push   edx
  40a257:	push   eax
  40a258:	push   edi
  40a259:	push   ebx
  40a25a:	call   0x40eaf0
  40a25f:	add    ecx,0x30
  40a262:	mov    DWORD PTR [ebp-0x260],ebx
  40a268:	mov    ebx,eax
  40a26a:	mov    edi,edx
  40a26c:	cmp    ecx,0x39
  40a26f:	jle    0x40a277
  40a271:	add    ecx,DWORD PTR [ebp-0x24c]
  40a277:	mov    BYTE PTR [esi],cl
  40a279:	dec    esi
  40a27a:	jmp    0x40a239
  40a27c:	lea    eax,[ebp-0xd]
  40a27f:	sub    eax,esi
  40a281:	inc    esi
  40a282:	test   DWORD PTR [ebp-0x210],0x200
  40a28c:	mov    DWORD PTR [ebp-0x228],eax
  40a292:	mov    DWORD PTR [ebp-0x220],esi
  40a298:	je     0x40a2fc
  40a29a:	test   eax,eax
  40a29c:	je     0x40a2a5
  40a29e:	mov    ecx,esi
  40a2a0:	cmp    BYTE PTR [ecx],0x30
  40a2a3:	je     0x40a2fc
  40a2a5:	dec    DWORD PTR [ebp-0x220]
  40a2ab:	mov    ecx,DWORD PTR [ebp-0x220]
  40a2b1:	mov    BYTE PTR [ecx],0x30
  40a2b4:	inc    eax
  40a2b5:	jmp    0x40a2f6
  40a2b7:	dec    ecx
  40a2b8:	cmp    WORD PTR [eax],si
  40a2bb:	je     0x40a2c4
  40a2bd:	add    eax,0x2
  40a2c0:	test   ecx,ecx
  40a2c2:	jne    0x40a2b7
  40a2c4:	sub    eax,DWORD PTR [ebp-0x220]
  40a2ca:	sar    eax,1
  40a2cc:	jmp    0x40a2f6
  40a2ce:	test   edi,edi
  40a2d0:	jne    0x40a2dd
  40a2d2:	mov    eax,ds:0x44b750
  40a2d7:	mov    DWORD PTR [ebp-0x220],eax
  40a2dd:	mov    eax,DWORD PTR [ebp-0x220]
  40a2e3:	jmp    0x40a2ec
  40a2e5:	dec    ecx
  40a2e6:	cmp    BYTE PTR [eax],0x0
  40a2e9:	je     0x40a2f0
  40a2eb:	inc    eax
  40a2ec:	test   ecx,ecx
  40a2ee:	jne    0x40a2e5
  40a2f0:	sub    eax,DWORD PTR [ebp-0x220]
  40a2f6:	mov    DWORD PTR [ebp-0x228],eax
  40a2fc:	cmp    DWORD PTR [ebp-0x244],0x0
  40a303:	jne    0x40a4c1
  40a309:	mov    ecx,DWORD PTR [ebp-0x210]
  40a30f:	test   cl,0x40
  40a312:	je     0x40a349
  40a314:	test   ecx,0x100
  40a31a:	je     0x40a325
  40a31c:	mov    BYTE PTR [ebp-0x22c],0x2d
  40a323:	jmp    0x40a33f
  40a325:	test   cl,0x1
  40a328:	je     0x40a333
  40a32a:	mov    BYTE PTR [ebp-0x22c],0x2b
  40a331:	jmp    0x40a33f
  40a333:	test   cl,0x2
  40a336:	je     0x40a349
  40a338:	mov    BYTE PTR [ebp-0x22c],0x20
  40a33f:	mov    DWORD PTR [ebp-0x234],0x1
  40a349:	mov    eax,DWORD PTR [ebp-0x238]
  40a34f:	sub    eax,DWORD PTR [ebp-0x228]
  40a355:	sub    eax,DWORD PTR [ebp-0x234]
  40a35b:	mov    DWORD PTR [ebp-0x260],eax
  40a361:	test   cl,0xc
  40a364:	jne    0x40a38b
  40a366:	mov    edi,eax
  40a368:	jmp    0x40a387
  40a36a:	mov    ecx,DWORD PTR [ebp-0x230]
  40a370:	lea    esi,[ebp-0x224]
  40a376:	mov    al,0x20
  40a378:	dec    edi
  40a379:	call   0x4098ae
  40a37e:	cmp    DWORD PTR [ebp-0x224],0xffffffff
  40a385:	je     0x40a38b
  40a387:	test   edi,edi
  40a389:	jg     0x40a36a
  40a38b:	push   DWORD PTR [ebp-0x234]
  40a391:	mov    edi,DWORD PTR [ebp-0x26c]
  40a397:	mov    ebx,DWORD PTR [ebp-0x230]
  40a39d:	lea    eax,[ebp-0x22c]
  40a3a3:	push   eax
  40a3a4:	lea    eax,[ebp-0x224]
  40a3aa:	call   0x4098e1
  40a3af:	test   BYTE PTR [ebp-0x210],0x8
  40a3b6:	pop    ecx
  40a3b7:	pop    ecx
  40a3b8:	je     0x40a3e8
  40a3ba:	test   BYTE PTR [ebp-0x210],0x4
  40a3c1:	jne    0x40a3e8
  40a3c3:	mov    edi,DWORD PTR [ebp-0x260]
  40a3c9:	jmp    0x40a3e4
  40a3cb:	lea    esi,[ebp-0x224]
  40a3d1:	mov    ecx,ebx
  40a3d3:	mov    al,0x30
  40a3d5:	dec    edi
  40a3d6:	call   0x4098ae
  40a3db:	cmp    DWORD PTR [ebp-0x224],0xffffffff
  40a3e2:	je     0x40a3e8
  40a3e4:	test   edi,edi
  40a3e6:	jg     0x40a3cb
  40a3e8:	cmp    DWORD PTR [ebp-0x23c],0x0
  40a3ef:	mov    eax,DWORD PTR [ebp-0x228]
  40a3f5:	je     0x40a46c
  40a3f7:	test   eax,eax
  40a3f9:	jle    0x40a46c
  40a3fb:	mov    esi,DWORD PTR [ebp-0x220]
  40a401:	mov    DWORD PTR [ebp-0x268],eax
  40a407:	movzx  eax,WORD PTR [esi]
  40a40a:	dec    DWORD PTR [ebp-0x268]
  40a410:	push   eax
  40a411:	push   0x6
  40a413:	lea    eax,[ebp-0xc]
  40a416:	push   eax
  40a417:	lea    eax,[ebp-0x270]
  40a41d:	push   eax
  40a41e:	add    esi,0x2
  40a421:	call   0x40ecda
  40a426:	add    esp,0x10
  40a429:	test   eax,eax
  40a42b:	jne    0x40a463
  40a42d:	cmp    DWORD PTR [ebp-0x270],eax
  40a433:	je     0x40a463
  40a435:	push   DWORD PTR [ebp-0x270]
  40a43b:	mov    edi,DWORD PTR [ebp-0x26c]
  40a441:	mov    ebx,DWORD PTR [ebp-0x230]
  40a447:	lea    eax,[ebp-0xc]
  40a44a:	push   eax
  40a44b:	lea    eax,[ebp-0x224]
  40a451:	call   0x4098e1
  40a456:	cmp    DWORD PTR [ebp-0x268],0x0
  40a45d:	pop    ecx
  40a45e:	pop    ecx
  40a45f:	jne    0x40a407
  40a461:	jmp    0x40a486
  40a463:	or     DWORD PTR [ebp-0x224],0xffffffff
  40a46a:	jmp    0x40a486
  40a46c:	mov    edi,DWORD PTR [ebp-0x26c]
  40a472:	push   eax
  40a473:	push   DWORD PTR [ebp-0x220]
  40a479:	lea    eax,[ebp-0x224]
  40a47f:	call   0x4098e1
  40a484:	pop    ecx
  40a485:	pop    ecx
  40a486:	cmp    DWORD PTR [ebp-0x224],0x0
  40a48d:	jl     0x40a4c1
  40a48f:	test   BYTE PTR [ebp-0x210],0x4
  40a496:	je     0x40a4c1
  40a498:	mov    edi,DWORD PTR [ebp-0x260]
  40a49e:	jmp    0x40a4bd
  40a4a0:	mov    ecx,DWORD PTR [ebp-0x230]
  40a4a6:	lea    esi,[ebp-0x224]
  40a4ac:	mov    al,0x20
  40a4ae:	dec    edi
  40a4af:	call   0x4098ae
  40a4b4:	cmp    DWORD PTR [ebp-0x224],0xffffffff
  40a4bb:	je     0x40a4c1
  40a4bd:	test   edi,edi
  40a4bf:	jg     0x40a4a0
  40a4c1:	cmp    DWORD PTR [ebp-0x248],0x0
  40a4c8:	je     0x40a4dd
  40a4ca:	push   DWORD PTR [ebp-0x248]
  40a4d0:	call   0x404391
  40a4d5:	and    DWORD PTR [ebp-0x248],0x0
  40a4dc:	pop    ecx
  40a4dd:	mov    ebx,DWORD PTR [ebp-0x240]
  40a4e3:	mov    al,BYTE PTR [ebx]
  40a4e5:	mov    BYTE PTR [ebp-0x211],al
  40a4eb:	test   al,al
  40a4ed:	je     0x40a502
  40a4ef:	mov    ecx,DWORD PTR [ebp-0x274]
  40a4f5:	mov    edi,DWORD PTR [ebp-0x21c]
  40a4fb:	mov    dl,al
  40a4fd:	jmp    0x409a74
  40a502:	cmp    BYTE PTR [ebp-0x250],0x0
  40a509:	je     0x40a515
  40a50b:	mov    eax,DWORD PTR [ebp-0x254]
  40a511:	and    DWORD PTR [eax+0x70],0xfffffffd
  40a515:	mov    eax,DWORD PTR [ebp-0x224]
  40a51b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a51e:	pop    edi
  40a51f:	pop    esi
  40a520:	xor    ecx,ebp
  40a522:	pop    ebx
  40a523:	call   0x403edd
  40a528:	leave  
  40a529:	ret    
  40a52a:	nop
  40a52b:	lds    ebx,FWORD PTR [eax+eax*2+0x409ac400]
  40a532:	add    ah,dh
  40a534:	call   0x40:0x9b520040
  40a53b:	sahf   
  40a53c:	fwait
  40a53d:	inc    eax
  40a53e:	add    BYTE PTR [ecx-0x10ffbf65],ch
  40a544:	fwait
  40a545:	inc    eax
  40a546:	add    BYTE PTR [edi],bl
  40a548:	popf   
  40a549:	inc    eax
  40a54a:	add    ah,cl
  40a54c:	int3   
  40a54d:	int3   
  40a54e:	int3   
  40a54f:	int3   
  40a550:	mov    edx,DWORD PTR [esp+0xc]
  40a554:	mov    ecx,DWORD PTR [esp+0x4]
  40a558:	test   edx,edx
  40a55a:	je     0x40a5c5
  40a55c:	xor    eax,eax
  40a55e:	mov    al,BYTE PTR [esp+0x8]
  40a562:	test   al,al
  40a564:	jne    0x40a57c
  40a566:	cmp    edx,0x80
  40a56c:	jb     0x40a57c
  40a56e:	cmp    DWORD PTR ds:0x45077c,0x0
  40a575:	je     0x40a57c
  40a577:	jmp    0x40ecf7
  40a57c:	push   edi
  40a57d:	mov    edi,ecx
  40a57f:	cmp    edx,0x4
  40a582:	jb     0x40a5b5
  40a584:	neg    ecx
  40a586:	and    ecx,0x3
  40a589:	je     0x40a597
  40a58b:	sub    edx,ecx
  40a58d:	mov    BYTE PTR [edi],al
  40a58f:	add    edi,0x1
  40a592:	sub    ecx,0x1
  40a595:	jne    0x40a58d
  40a597:	mov    ecx,eax
  40a599:	shl    eax,0x8
  40a59c:	add    eax,ecx
  40a59e:	mov    ecx,eax
  40a5a0:	shl    eax,0x10
  40a5a3:	add    eax,ecx
  40a5a5:	mov    ecx,edx
  40a5a7:	and    edx,0x3
  40a5aa:	shr    ecx,0x2
  40a5ad:	je     0x40a5b5
  40a5af:	rep stos DWORD PTR es:[edi],eax
  40a5b1:	test   edx,edx
  40a5b3:	je     0x40a5bf
  40a5b5:	mov    BYTE PTR [edi],al
  40a5b7:	add    edi,0x1
  40a5ba:	sub    edx,0x1
  40a5bd:	jne    0x40a5b5
  40a5bf:	mov    eax,DWORD PTR [esp+0x8]
  40a5c3:	pop    edi
  40a5c4:	ret    
  40a5c5:	mov    eax,DWORD PTR [esp+0x4]
  40a5c9:	ret    
  40a5ca:	mov    edi,edi
  40a5cc:	push   ebp
  40a5cd:	mov    ebp,esp
  40a5cf:	mov    eax,DWORD PTR [ebp+0x8]
  40a5d2:	mov    cl,BYTE PTR [ebp+0x10]
  40a5d5:	push   ebx
  40a5d6:	push   esi
  40a5d7:	push   edi
  40a5d8:	xor    edi,edi
  40a5da:	mov    DWORD PTR [eax+0x4],edi
  40a5dd:	mov    eax,DWORD PTR [ebp+0x8]
  40a5e0:	xor    ebx,ebx
  40a5e2:	mov    DWORD PTR [eax+0x8],edi
  40a5e5:	mov    eax,DWORD PTR [ebp+0x8]
  40a5e8:	inc    ebx
  40a5e9:	mov    DWORD PTR [eax+0xc],edi
  40a5ec:	test   cl,0x10
  40a5ef:	je     0x40a5fe
  40a5f1:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f4:	or     DWORD PTR [eax+0x4],ebx
  40a5f7:	mov    DWORD PTR [ebp+0x10],0xc000008f
  40a5fe:	test   cl,0x2
  40a601:	je     0x40a611
  40a603:	mov    eax,DWORD PTR [ebp+0x8]
  40a606:	or     DWORD PTR [eax+0x4],0x2
  40a60a:	mov    DWORD PTR [ebp+0x10],0xc0000093
  40a611:	test   bl,cl
  40a613:	je     0x40a623
  40a615:	mov    eax,DWORD PTR [ebp+0x8]
  40a618:	or     DWORD PTR [eax+0x4],0x4
  40a61c:	mov    DWORD PTR [ebp+0x10],0xc0000091
  40a623:	test   cl,0x4
  40a626:	je     0x40a636
  40a628:	mov    eax,DWORD PTR [ebp+0x8]
  40a62b:	or     DWORD PTR [eax+0x4],0x8
  40a62f:	mov    DWORD PTR [ebp+0x10],0xc000008e
  40a636:	test   cl,0x8
  40a639:	je     0x40a649
  40a63b:	mov    eax,DWORD PTR [ebp+0x8]
  40a63e:	or     DWORD PTR [eax+0x4],0x10
  40a642:	mov    DWORD PTR [ebp+0x10],0xc0000090
  40a649:	mov    esi,DWORD PTR [ebp+0xc]
  40a64c:	mov    ecx,DWORD PTR [esi]
  40a64e:	mov    eax,DWORD PTR [ebp+0x8]
  40a651:	shl    ecx,0x4
  40a654:	not    ecx
  40a656:	xor    ecx,DWORD PTR [eax+0x8]
  40a659:	and    ecx,0x10
  40a65c:	xor    DWORD PTR [eax+0x8],ecx
  40a65f:	mov    ecx,DWORD PTR [esi]
  40a661:	mov    eax,DWORD PTR [ebp+0x8]
  40a664:	add    ecx,ecx
  40a666:	not    ecx
  40a668:	xor    ecx,DWORD PTR [eax+0x8]
  40a66b:	and    ecx,0x8
  40a66e:	xor    DWORD PTR [eax+0x8],ecx
  40a671:	mov    ecx,DWORD PTR [esi]
  40a673:	mov    eax,DWORD PTR [ebp+0x8]
  40a676:	shr    ecx,1
  40a678:	not    ecx
  40a67a:	xor    ecx,DWORD PTR [eax+0x8]
  40a67d:	and    ecx,0x4
  40a680:	xor    DWORD PTR [eax+0x8],ecx
  40a683:	mov    ecx,DWORD PTR [esi]
  40a685:	mov    eax,DWORD PTR [ebp+0x8]
  40a688:	shr    ecx,0x3
  40a68b:	not    ecx
  40a68d:	xor    ecx,DWORD PTR [eax+0x8]
  40a690:	and    ecx,0x2
  40a693:	xor    DWORD PTR [eax+0x8],ecx
  40a696:	mov    ecx,DWORD PTR [esi]
  40a698:	mov    eax,DWORD PTR [ebp+0x8]
  40a69b:	shr    ecx,0x5
  40a69e:	not    ecx
  40a6a0:	xor    ecx,DWORD PTR [eax+0x8]
  40a6a3:	and    ecx,ebx
  40a6a5:	xor    DWORD PTR [eax+0x8],ecx
  40a6a8:	call   0x40aeba
  40a6ad:	test   bl,al
  40a6af:	je     0x40a6b8
  40a6b1:	mov    ecx,DWORD PTR [ebp+0x8]
  40a6b4:	or     DWORD PTR [ecx+0xc],0x10
  40a6b8:	test   al,0x4
  40a6ba:	je     0x40a6c3
  40a6bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40a6bf:	or     DWORD PTR [ecx+0xc],0x8
  40a6c3:	test   al,0x8
  40a6c5:	je     0x40a6ce
  40a6c7:	mov    ecx,DWORD PTR [ebp+0x8]
  40a6ca:	or     DWORD PTR [ecx+0xc],0x4
  40a6ce:	test   al,0x10
  40a6d0:	je     0x40a6d9
  40a6d2:	mov    ecx,DWORD PTR [ebp+0x8]
  40a6d5:	or     DWORD PTR [ecx+0xc],0x2
  40a6d9:	test   al,0x20
  40a6db:	je     0x40a6e3
  40a6dd:	mov    eax,DWORD PTR [ebp+0x8]
  40a6e0:	or     DWORD PTR [eax+0xc],ebx
  40a6e3:	mov    eax,DWORD PTR [esi]
  40a6e5:	mov    ecx,0xc00
  40a6ea:	and    eax,ecx
  40a6ec:	je     0x40a723
  40a6ee:	cmp    eax,0x400
  40a6f3:	je     0x40a717
  40a6f5:	cmp    eax,0x800
  40a6fa:	je     0x40a708
  40a6fc:	cmp    eax,ecx
  40a6fe:	jne    0x40a729
  40a700:	mov    eax,DWORD PTR [ebp+0x8]
  40a703:	or     DWORD PTR [eax],0x3
  40a706:	jmp    0x40a729
  40a708:	mov    eax,DWORD PTR [ebp+0x8]
  40a70b:	mov    ecx,DWORD PTR [eax]
  40a70d:	and    ecx,0xfffffffe
  40a710:	or     ecx,0x2
  40a713:	mov    DWORD PTR [eax],ecx
  40a715:	jmp    0x40a729
  40a717:	mov    eax,DWORD PTR [ebp+0x8]
  40a71a:	mov    ecx,DWORD PTR [eax]
  40a71c:	and    ecx,0xfffffffd
  40a71f:	or     ecx,ebx
  40a721:	jmp    0x40a713
  40a723:	mov    eax,DWORD PTR [ebp+0x8]
  40a726:	and    DWORD PTR [eax],0xfffffffc
  40a729:	mov    eax,DWORD PTR [esi]
  40a72b:	mov    ecx,0x300
  40a730:	and    eax,ecx
  40a732:	je     0x40a754
  40a734:	cmp    eax,0x200
  40a739:	je     0x40a747
  40a73b:	cmp    eax,ecx
  40a73d:	jne    0x40a761
  40a73f:	mov    eax,DWORD PTR [ebp+0x8]
  40a742:	and    DWORD PTR [eax],0xffffffe3
  40a745:	jmp    0x40a761
  40a747:	mov    eax,DWORD PTR [ebp+0x8]
  40a74a:	mov    ecx,DWORD PTR [eax]
  40a74c:	and    ecx,0xffffffe7
  40a74f:	or     ecx,0x4
  40a752:	jmp    0x40a75f
  40a754:	mov    eax,DWORD PTR [ebp+0x8]
  40a757:	mov    ecx,DWORD PTR [eax]
  40a759:	and    ecx,0xffffffeb
  40a75c:	or     ecx,0x8
  40a75f:	mov    DWORD PTR [eax],ecx
  40a761:	mov    eax,DWORD PTR [ebp+0x8]
  40a764:	mov    ecx,DWORD PTR [ebp+0x14]
  40a767:	shl    ecx,0x5
  40a76a:	xor    ecx,DWORD PTR [eax]
  40a76c:	and    ecx,0x1ffe0
  40a772:	xor    DWORD PTR [eax],ecx
  40a774:	mov    eax,DWORD PTR [ebp+0x8]
  40a777:	or     DWORD PTR [eax+0x20],ebx
  40a77a:	cmp    DWORD PTR [ebp+0x20],edi
  40a77d:	mov    eax,DWORD PTR [ebp+0x8]
  40a780:	mov    edi,DWORD PTR [ebp+0x1c]
  40a783:	je     0x40a7ab
  40a785:	and    DWORD PTR [eax+0x20],0xffffffe1
  40a789:	mov    eax,DWORD PTR [ebp+0x18]
  40a78c:	fld    DWORD PTR [eax]
  40a78e:	mov    eax,DWORD PTR [ebp+0x8]
  40a791:	fstp   DWORD PTR [eax+0x10]
  40a794:	mov    eax,DWORD PTR [ebp+0x8]
  40a797:	or     DWORD PTR [eax+0x60],ebx
  40a79a:	mov    eax,DWORD PTR [ebp+0x8]
  40a79d:	and    DWORD PTR [eax+0x60],0xffffffe1
  40a7a1:	fld    DWORD PTR [edi]
  40a7a3:	mov    eax,DWORD PTR [ebp+0x8]
  40a7a6:	fstp   DWORD PTR [eax+0x50]
  40a7a9:	jmp    0x40a7df
  40a7ab:	mov    ecx,DWORD PTR [eax+0x20]
  40a7ae:	and    ecx,0xffffffe3
  40a7b1:	or     ecx,0x2
  40a7b4:	mov    DWORD PTR [eax+0x20],ecx
  40a7b7:	mov    eax,DWORD PTR [ebp+0x18]
  40a7ba:	fld    QWORD PTR [eax]
  40a7bc:	mov    eax,DWORD PTR [ebp+0x8]
  40a7bf:	fstp   QWORD PTR [eax+0x10]
  40a7c2:	mov    eax,DWORD PTR [ebp+0x8]
  40a7c5:	or     DWORD PTR [eax+0x60],ebx
  40a7c8:	mov    eax,DWORD PTR [ebp+0x8]
  40a7cb:	mov    ecx,DWORD PTR [eax+0x60]
  40a7ce:	and    ecx,0xffffffe3
  40a7d1:	or     ecx,0x2
  40a7d4:	mov    DWORD PTR [eax+0x60],ecx
  40a7d7:	fld    QWORD PTR [edi]
  40a7d9:	mov    eax,DWORD PTR [ebp+0x8]
  40a7dc:	fstp   QWORD PTR [eax+0x50]
  40a7df:	call   0x40aeca
  40a7e4:	lea    eax,[ebp+0x8]
  40a7e7:	push   eax
  40a7e8:	push   ebx
  40a7e9:	push   0x0
  40a7eb:	push   DWORD PTR [ebp+0x10]
  40a7ee:	call   DWORD PTR ds:0x4431a0
  40a7f4:	mov    ecx,DWORD PTR [ebp+0x8]
  40a7f7:	test   BYTE PTR [ecx+0x8],0x10
  40a7fb:	je     0x40a800
  40a7fd:	and    DWORD PTR [esi],0xfffffffe
  40a800:	test   BYTE PTR [ecx+0x8],0x8
  40a804:	je     0x40a809
  40a806:	and    DWORD PTR [esi],0xfffffffb
  40a809:	test   BYTE PTR [ecx+0x8],0x4
  40a80d:	je     0x40a812
  40a80f:	and    DWORD PTR [esi],0xfffffff7
  40a812:	test   BYTE PTR [ecx+0x8],0x2
  40a816:	je     0x40a81b
  40a818:	and    DWORD PTR [esi],0xffffffef
  40a81b:	test   BYTE PTR [ecx+0x8],bl
  40a81e:	je     0x40a823
  40a820:	and    DWORD PTR [esi],0xffffffdf
  40a823:	mov    eax,DWORD PTR [ecx]
  40a825:	and    eax,0x3
  40a828:	xor    ebx,ebx
  40a82a:	sub    eax,ebx
  40a82c:	mov    edx,0xfffff3ff
  40a831:	je     0x40a862
  40a833:	dec    eax
  40a834:	je     0x40a854
  40a836:	dec    eax
  40a837:	je     0x40a844
  40a839:	dec    eax
  40a83a:	jne    0x40a864
  40a83c:	or     DWORD PTR [esi],0xc00
  40a842:	jmp    0x40a864
  40a844:	mov    eax,DWORD PTR [esi]
  40a846:	and    eax,0xfffffbff
  40a84b:	or     eax,0x800
  40a850:	mov    DWORD PTR [esi],eax
  40a852:	jmp    0x40a864
  40a854:	mov    eax,DWORD PTR [esi]
  40a856:	and    eax,0xfffff7ff
  40a85b:	or     eax,0x400
  40a860:	jmp    0x40a850
  40a862:	and    DWORD PTR [esi],edx
  40a864:	mov    eax,DWORD PTR [ecx]
  40a866:	shr    eax,0x2
  40a869:	and    eax,0x7
  40a86c:	sub    eax,ebx
  40a86e:	je     0x40a885
  40a870:	dec    eax
  40a871:	je     0x40a87a
  40a873:	dec    eax
  40a874:	jne    0x40a890
  40a876:	and    DWORD PTR [esi],edx
  40a878:	jmp    0x40a890
  40a87a:	mov    eax,DWORD PTR [esi]
  40a87c:	and    eax,edx
  40a87e:	or     eax,0x200
  40a883:	jmp    0x40a88e
  40a885:	mov    eax,DWORD PTR [esi]
  40a887:	and    eax,edx
  40a889:	or     eax,0x300
  40a88e:	mov    DWORD PTR [esi],eax
  40a890:	cmp    DWORD PTR [ebp+0x20],ebx
  40a893:	je     0x40a89c
  40a895:	fld    DWORD PTR [ecx+0x50]
  40a898:	fstp   DWORD PTR [edi]
  40a89a:	jmp    0x40a8a1
  40a89c:	fld    QWORD PTR [ecx+0x50]
  40a89f:	fstp   QWORD PTR [edi]
  40a8a1:	pop    edi
  40a8a2:	pop    esi
  40a8a3:	pop    ebx
  40a8a4:	pop    ebp
  40a8a5:	ret    
  40a8a6:	mov    edi,edi
  40a8a8:	push   ebp
  40a8a9:	mov    ebp,esp
  40a8ab:	push   0x0
  40a8ad:	push   DWORD PTR [ebp+0x1c]
  40a8b0:	push   DWORD PTR [ebp+0x18]
  40a8b3:	push   DWORD PTR [ebp+0x14]
  40a8b6:	push   DWORD PTR [ebp+0x10]
  40a8b9:	push   DWORD PTR [ebp+0xc]
  40a8bc:	push   DWORD PTR [ebp+0x8]
  40a8bf:	call   0x40a5ca
  40a8c4:	add    esp,0x1c
  40a8c7:	pop    ebp
  40a8c8:	ret    
  40a8c9:	mov    edi,edi
  40a8cb:	push   ebp
  40a8cc:	mov    ebp,esp
  40a8ce:	sub    esp,0x14
  40a8d1:	mov    eax,DWORD PTR [ebp+0x8]
  40a8d4:	push   ebx
  40a8d5:	push   esi
  40a8d6:	xor    ebx,ebx
  40a8d8:	mov    esi,eax
  40a8da:	and    esi,0x1f
  40a8dd:	inc    ebx
  40a8de:	mov    DWORD PTR [ebp-0x4],esi
  40a8e1:	test   al,0x8
  40a8e3:	je     0x40a8f9
  40a8e5:	test   BYTE PTR [ebp+0x10],bl
  40a8e8:	je     0x40a8f9
  40a8ea:	push   ebx
  40a8eb:	call   0x40af06
  40a8f0:	pop    ecx
  40a8f1:	and    esi,0xfffffff7
  40a8f4:	jmp    0x40aa8b
  40a8f9:	test   al,0x4
  40a8fb:	je     0x40a913
  40a8fd:	test   BYTE PTR [ebp+0x10],0x4
  40a901:	je     0x40a913
  40a903:	push   0x4
  40a905:	call   0x40af06
  40a90a:	pop    ecx
  40a90b:	and    esi,0xfffffffb
  40a90e:	jmp    0x40aa8b
  40a913:	test   bl,al
  40a915:	je     0x40a9b5
  40a91b:	test   BYTE PTR [ebp+0x10],0x8
  40a91f:	je     0x40a9b5
  40a925:	push   0x8
  40a927:	call   0x40af06
  40a92c:	mov    eax,DWORD PTR [ebp+0x10]
  40a92f:	pop    ecx
  40a930:	mov    ecx,0xc00
  40a935:	and    eax,ecx
  40a937:	je     0x40a98d
  40a939:	cmp    eax,0x400
  40a93e:	je     0x40a977
  40a940:	cmp    eax,0x800
  40a945:	je     0x40a961
  40a947:	cmp    eax,ecx
  40a949:	jne    0x40a9ad
  40a94b:	fldz   
  40a94d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a950:	fcomp  QWORD PTR [ecx]
  40a952:	fnstsw ax
  40a954:	fld    QWORD PTR ds:0x44b858
  40a95a:	test   ah,0x5
  40a95d:	jnp    0x40a9ab
  40a95f:	jmp    0x40a9a9
  40a961:	fldz   
  40a963:	mov    ecx,DWORD PTR [ebp+0xc]
  40a966:	fcomp  QWORD PTR [ecx]
  40a968:	fnstsw ax
  40a96a:	test   ah,0x5
  40a96d:	jnp    0x40a99b
  40a96f:	fld    QWORD PTR ds:0x44b858
  40a975:	jmp    0x40a9a9
  40a977:	fldz   
  40a979:	mov    ecx,DWORD PTR [ebp+0xc]
  40a97c:	fcomp  QWORD PTR [ecx]
  40a97e:	fnstsw ax
  40a980:	test   ah,0x5
  40a983:	jp     0x40a9a3
  40a985:	fld    QWORD PTR ds:0x44b858
  40a98b:	jmp    0x40a9ab
  40a98d:	fldz   
  40a98f:	mov    ecx,DWORD PTR [ebp+0xc]
  40a992:	fcomp  QWORD PTR [ecx]
  40a994:	fnstsw ax
  40a996:	test   ah,0x5
  40a999:	jp     0x40a9a3
  40a99b:	fld    QWORD PTR ds:0x44b848
  40a9a1:	jmp    0x40a9ab
  40a9a3:	fld    QWORD PTR ds:0x44b848
  40a9a9:	fchs   
  40a9ab:	fstp   QWORD PTR [ecx]
  40a9ad:	and    esi,0xfffffffe
  40a9b0:	jmp    0x40aa8b
  40a9b5:	test   al,0x2
  40a9b7:	je     0x40aa8b
  40a9bd:	test   BYTE PTR [ebp+0x10],0x10
  40a9c1:	je     0x40aa8b
  40a9c7:	xor    esi,esi
  40a9c9:	test   al,0x10
  40a9cb:	je     0x40a9cf
  40a9cd:	mov    esi,ebx
  40a9cf:	push   edi
  40a9d0:	mov    edi,DWORD PTR [ebp+0xc]
  40a9d3:	fld    QWORD PTR [edi]
  40a9d5:	fldz   
  40a9d7:	fucompp 
  40a9d9:	fnstsw ax
  40a9db:	test   ah,0x44
  40a9de:	jnp    0x40aa75
  40a9e4:	fld    QWORD PTR [edi]
  40a9e6:	lea    eax,[ebp-0x8]
  40a9e9:	push   eax
  40a9ea:	push   ecx
  40a9eb:	push   ecx
  40a9ec:	fstp   QWORD PTR [esp]
  40a9ef:	call   0x40ad2f
  40a9f4:	mov    ecx,DWORD PTR [ebp-0x8]
  40a9f7:	fstp   QWORD PTR [ebp-0x14]
  40a9fa:	add    ecx,0xfffffa00
  40aa00:	add    esp,0xc
  40aa03:	cmp    ecx,0xfffffbce
  40aa09:	jge    0x40aa18
  40aa0b:	fld    QWORD PTR [ebp-0x14]
  40aa0e:	mov    esi,ebx
  40aa10:	fmul   QWORD PTR ds:0x4479c0
  40aa16:	jmp    0x40aa6b
  40aa18:	fldz   
  40aa1a:	fcomp  QWORD PTR [ebp-0x14]
  40aa1d:	fnstsw ax
  40aa1f:	test   ah,0x41
  40aa22:	jne    0x40aa28
  40aa24:	mov    edx,ebx
  40aa26:	jmp    0x40aa2a
  40aa28:	xor    edx,edx
  40aa2a:	mov    eax,DWORD PTR [ebp-0xe]
  40aa2d:	and    eax,0xf
  40aa30:	or     eax,0x10
  40aa33:	mov    WORD PTR [ebp-0xe],ax
  40aa37:	mov    eax,0xfffffc03
  40aa3c:	cmp    ecx,eax
  40aa3e:	jge    0x40aa62
  40aa40:	sub    eax,ecx
  40aa42:	test   BYTE PTR [ebp-0x14],bl
  40aa45:	je     0x40aa4d
  40aa47:	test   esi,esi
  40aa49:	jne    0x40aa4d
  40aa4b:	mov    esi,ebx
  40aa4d:	shr    DWORD PTR [ebp-0x14],1
  40aa50:	test   BYTE PTR [ebp-0x10],bl
  40aa53:	je     0x40aa5c
  40aa55:	or     DWORD PTR [ebp-0x14],0x80000000
  40aa5c:	shr    DWORD PTR [ebp-0x10],1
  40aa5f:	dec    eax
  40aa60:	jne    0x40aa42
  40aa62:	test   edx,edx
  40aa64:	je     0x40aa6e
  40aa66:	fld    QWORD PTR [ebp-0x14]
  40aa69:	fchs   
  40aa6b:	fstp   QWORD PTR [ebp-0x14]
  40aa6e:	fld    QWORD PTR [ebp-0x14]
  40aa71:	fstp   QWORD PTR [edi]
  40aa73:	jmp    0x40aa77
  40aa75:	mov    esi,ebx
  40aa77:	pop    edi
  40aa78:	test   esi,esi
  40aa7a:	je     0x40aa84
  40aa7c:	push   0x10
  40aa7e:	call   0x40af06
  40aa83:	pop    ecx
  40aa84:	and    DWORD PTR [ebp-0x4],0xfffffffd
  40aa88:	mov    esi,DWORD PTR [ebp-0x4]
  40aa8b:	test   BYTE PTR [ebp+0x8],0x10
  40aa8f:	je     0x40aaa2
  40aa91:	test   BYTE PTR [ebp+0x10],0x20
  40aa95:	je     0x40aaa2
  40aa97:	push   0x20
  40aa99:	call   0x40af06
  40aa9e:	pop    ecx
  40aa9f:	and    esi,0xffffffef
  40aaa2:	xor    eax,eax
  40aaa4:	test   esi,esi
  40aaa6:	pop    esi
  40aaa7:	sete   al
  40aaaa:	pop    ebx
  40aaab:	leave  
  40aaac:	ret    
  40aaad:	mov    edi,edi
  40aaaf:	push   ebp
  40aab0:	mov    ebp,esp
  40aab2:	cmp    DWORD PTR [ebp+0x8],0x1
  40aab6:	je     0x40aacd
  40aab8:	jle    0x40aad8
  40aaba:	cmp    DWORD PTR [ebp+0x8],0x3
  40aabe:	jg     0x40aad8
  40aac0:	call   0x40769b
  40aac5:	mov    DWORD PTR [eax],0x22
  40aacb:	pop    ebp
  40aacc:	ret    
  40aacd:	call   0x40769b
  40aad2:	mov    DWORD PTR [eax],0x21
  40aad8:	pop    ebp
  40aad9:	ret    
  40aada:	mov    edi,edi
  40aadc:	push   ebp
  40aadd:	mov    ebp,esp
  40aadf:	mov    al,BYTE PTR [ebp+0x8]
  40aae2:	test   al,0x20
  40aae4:	je     0x40aaea
  40aae6:	push   0x5
  40aae8:	jmp    0x40ab01
  40aaea:	test   al,0x8
  40aaec:	je     0x40aaf3
  40aaee:	xor    eax,eax
  40aaf0:	inc    eax
  40aaf1:	pop    ebp
  40aaf2:	ret    
  40aaf3:	test   al,0x4
  40aaf5:	je     0x40aafb
  40aaf7:	push   0x2
  40aaf9:	jmp    0x40ab01
  40aafb:	test   al,0x1
  40aafd:	je     0x40ab04
  40aaff:	push   0x3
  40ab01:	pop    eax
  40ab02:	pop    ebp
  40ab03:	ret    
  40ab04:	movzx  eax,al
  40ab07:	and    eax,0x2
  40ab0a:	add    eax,eax
  40ab0c:	pop    ebp
  40ab0d:	ret    
  40ab0e:	mov    edi,edi
  40ab10:	push   ebp
  40ab11:	mov    ebp,esp
  40ab13:	sub    esp,0x20
  40ab16:	xor    eax,eax
  40ab18:	mov    ecx,DWORD PTR [eax*8+0x44b760]
  40ab1f:	cmp    ecx,DWORD PTR [ebp+0xc]
  40ab22:	je     0x40ab88
  40ab24:	inc    eax
  40ab25:	cmp    eax,0x1d
  40ab28:	jl     0x40ab18
  40ab2a:	xor    eax,eax
  40ab2c:	mov    DWORD PTR [ebp-0x1c],eax
  40ab2f:	test   eax,eax
  40ab31:	je     0x40ab91
  40ab33:	mov    eax,DWORD PTR [ebp+0x10]
  40ab36:	mov    DWORD PTR [ebp-0x18],eax
  40ab39:	mov    eax,DWORD PTR [ebp+0x14]
  40ab3c:	mov    DWORD PTR [ebp-0x14],eax
  40ab3f:	mov    eax,DWORD PTR [ebp+0x18]
  40ab42:	mov    DWORD PTR [ebp-0x10],eax
  40ab45:	mov    eax,DWORD PTR [ebp+0x1c]
  40ab48:	push   esi
  40ab49:	mov    esi,DWORD PTR [ebp+0x8]
  40ab4c:	mov    DWORD PTR [ebp-0xc],eax
  40ab4f:	mov    eax,DWORD PTR [ebp+0x20]
  40ab52:	mov    DWORD PTR [ebp-0x8],eax
  40ab55:	mov    eax,DWORD PTR [ebp+0x24]
  40ab58:	push   0xffff
  40ab5d:	push   DWORD PTR [ebp+0x28]
  40ab60:	mov    DWORD PTR [ebp-0x20],esi
  40ab63:	mov    DWORD PTR [ebp-0x4],eax
  40ab66:	call   0x40aedb
  40ab6b:	lea    eax,[ebp-0x20]
  40ab6e:	push   eax
  40ab6f:	call   0x40edb1
  40ab74:	add    esp,0xc
  40ab77:	test   eax,eax
  40ab79:	jne    0x40ab82
  40ab7b:	push   esi
  40ab7c:	call   0x40aaad
  40ab81:	pop    ecx
  40ab82:	fld    QWORD PTR [ebp-0x8]
  40ab85:	pop    esi
  40ab86:	leave  
  40ab87:	ret    
  40ab88:	mov    eax,DWORD PTR [eax*8+0x44b764]
  40ab8f:	jmp    0x40ab2c
  40ab91:	push   0xffff
  40ab96:	push   DWORD PTR [ebp+0x28]
  40ab99:	call   0x40aedb
  40ab9e:	push   DWORD PTR [ebp+0x8]
  40aba1:	call   0x40aaad
  40aba6:	fld    QWORD PTR [ebp+0x20]
  40aba9:	add    esp,0xc
  40abac:	leave  
  40abad:	ret    
  40abae:	mov    edi,edi
  40abb0:	push   ebp
  40abb1:	mov    ebp,esp
  40abb3:	push   ecx
  40abb4:	push   ecx
  40abb5:	cmp    DWORD PTR ds:0x44c330,0x0
  40abbc:	fld    QWORD PTR [ebp+0xc]
  40abbf:	fadd   QWORD PTR [ebp+0x14]
  40abc2:	fstp   QWORD PTR [ebp-0x8]
  40abc5:	jne    0x40abf0
  40abc7:	push   DWORD PTR [ebp+0x1c]
  40abca:	fld    QWORD PTR [ebp-0x8]
  40abcd:	sub    esp,0x18
  40abd0:	fstp   QWORD PTR [esp+0x10]
  40abd4:	fld    QWORD PTR [ebp+0x14]
  40abd7:	fstp   QWORD PTR [esp+0x8]
  40abdb:	fld    QWORD PTR [ebp+0xc]
  40abde:	fstp   QWORD PTR [esp]
  40abe1:	push   DWORD PTR [ebp+0x8]
  40abe4:	push   0x1
  40abe6:	call   0x40ab0e
  40abeb:	add    esp,0x24
  40abee:	leave  
  40abef:	ret    
  40abf0:	call   0x40769b
  40abf5:	push   0xffff
  40abfa:	push   DWORD PTR [ebp+0x1c]
  40abfd:	mov    DWORD PTR [eax],0x21
  40ac03:	call   0x40aedb
  40ac08:	fld    QWORD PTR [ebp-0x8]
  40ac0b:	pop    ecx
  40ac0c:	pop    ecx
  40ac0d:	leave  
  40ac0e:	ret    
  40ac0f:	mov    edi,edi
  40ac11:	push   ebx
  40ac12:	mov    ebx,esp
  40ac14:	push   ecx
  40ac15:	push   ecx
  40ac16:	and    esp,0xfffffff0
  40ac19:	add    esp,0x4
  40ac1c:	push   ebp
  40ac1d:	mov    ebp,DWORD PTR [ebx+0x4]
  40ac20:	mov    DWORD PTR [esp+0x4],ebp
  40ac24:	mov    ebp,esp
  40ac26:	sub    esp,0x80
  40ac2c:	mov    eax,ds:0x44b470
  40ac31:	xor    eax,ebp
  40ac33:	mov    DWORD PTR [ebp-0x4],eax
  40ac36:	push   DWORD PTR [ebx+0x28]
  40ac39:	lea    eax,[ebx+0x20]
  40ac3c:	push   eax
  40ac3d:	push   DWORD PTR [ebx+0x8]
  40ac40:	call   0x40a8c9
  40ac45:	add    esp,0xc
  40ac48:	test   eax,eax
  40ac4a:	jne    0x40ac7e
  40ac4c:	mov    eax,DWORD PTR [ebp-0x40]
  40ac4f:	fld    QWORD PTR [ebx+0x18]
  40ac52:	and    eax,0xffffffe3
  40ac55:	fstp   QWORD PTR [ebp-0x50]
  40ac58:	or     eax,0x3
  40ac5b:	mov    DWORD PTR [ebp-0x40],eax
  40ac5e:	push   0x0
  40ac60:	lea    eax,[ebx+0x20]
  40ac63:	push   eax
  40ac64:	lea    eax,[ebx+0x10]
  40ac67:	push   eax
  40ac68:	push   DWORD PTR [ebx+0xc]
  40ac6b:	lea    eax,[ebx+0x28]
  40ac6e:	push   DWORD PTR [ebx+0x8]
  40ac71:	push   eax
  40ac72:	lea    eax,[ebp-0x80]
  40ac75:	push   eax
  40ac76:	call   0x40a5ca
  40ac7b:	add    esp,0x1c
  40ac7e:	push   DWORD PTR [ebx+0x8]
  40ac81:	call   0x40aada
  40ac86:	add    esp,0x4
  40ac89:	cmp    DWORD PTR ds:0x44c330,0x0
  40ac90:	jne    0x40acbe
  40ac92:	test   eax,eax
  40ac94:	je     0x40acbe
  40ac96:	push   DWORD PTR [ebx+0x28]
  40ac99:	fld    QWORD PTR [ebx+0x20]
  40ac9c:	sub    esp,0x18
  40ac9f:	fstp   QWORD PTR [esp+0x10]
  40aca3:	fld    QWORD PTR [ebx+0x18]
  40aca6:	fstp   QWORD PTR [esp+0x8]
  40acaa:	fld    QWORD PTR [ebx+0x10]
  40acad:	fstp   QWORD PTR [esp]
  40acb0:	push   DWORD PTR [ebx+0xc]
  40acb3:	push   eax
  40acb4:	call   0x40ab0e
  40acb9:	add    esp,0x24
  40acbc:	jmp    0x40acd8
  40acbe:	push   eax
  40acbf:	call   0x40aaad
  40acc4:	mov    DWORD PTR [esp],0xffff
  40accb:	push   DWORD PTR [ebx+0x28]
  40acce:	call   0x40aedb
  40acd3:	fld    QWORD PTR [ebx+0x20]
  40acd6:	pop    ecx
  40acd7:	pop    ecx
  40acd8:	mov    ecx,DWORD PTR [ebp-0x4]
  40acdb:	xor    ecx,ebp
  40acdd:	call   0x403edd
  40ace2:	mov    esp,ebp
  40ace4:	pop    ebp
  40ace5:	mov    esp,ebx
  40ace7:	pop    ebx
  40ace8:	ret    
  40ace9:	mov    edi,edi
  40aceb:	push   ebp
  40acec:	mov    ebp,esp
  40acee:	push   ecx
  40acef:	push   ecx
  40acf0:	mov    eax,DWORD PTR [ebp+0x10]
  40acf3:	fld    QWORD PTR [ebp+0x8]
  40acf6:	movzx  ecx,WORD PTR [ebp+0xe]
  40acfa:	fstp   QWORD PTR [ebp-0x8]
  40acfd:	add    eax,0x3fe
  40ad02:	shl    eax,0x4
  40ad05:	and    ecx,0x800f
  40ad0b:	or     eax,ecx
  40ad0d:	mov    WORD PTR [ebp-0x2],ax
  40ad11:	fld    QWORD PTR [ebp-0x8]
  40ad14:	leave  
  40ad15:	ret    
  40ad16:	mov    edi,edi
  40ad18:	push   ebp
  40ad19:	mov    ebp,esp
  40ad1b:	movzx  eax,WORD PTR [ebp+0xe]
  40ad1f:	shr    eax,0x4
  40ad22:	and    eax,0x7ff
  40ad27:	sub    eax,0x3fe
  40ad2c:	cwde   
  40ad2d:	pop    ebp
  40ad2e:	ret    
  40ad2f:	mov    edi,edi
  40ad31:	push   ebp
  40ad32:	mov    ebp,esp
  40ad34:	fld    QWORD PTR [ebp+0x8]
  40ad37:	fldz   
  40ad39:	fld    st(0)
  40ad3b:	fucomp st(2)
  40ad3d:	fnstsw ax
  40ad3f:	fstp   st(1)
  40ad41:	test   ah,0x44
  40ad44:	jp     0x40ad4d
  40ad46:	xor    edx,edx
  40ad48:	jmp    0x40adeb
  40ad4d:	movzx  eax,WORD PTR [ebp+0xe]
  40ad51:	xor    ecx,ecx
  40ad53:	test   eax,0x7ff0
  40ad58:	jne    0x40adc5
  40ad5a:	test   DWORD PTR [ebp+0xc],0xfffff
  40ad61:	jne    0x40ad68
  40ad63:	cmp    DWORD PTR [ebp+0x8],ecx
  40ad66:	je     0x40adc5
  40ad68:	fcomp  QWORD PTR [ebp+0x8]
  40ad6b:	mov    edx,0xfffffc03
  40ad70:	fnstsw ax
  40ad72:	test   ah,0x41
  40ad75:	jne    0x40ad7c
  40ad77:	xor    eax,eax
  40ad79:	inc    eax
  40ad7a:	jmp    0x40ad94
  40ad7c:	xor    eax,eax
  40ad7e:	jmp    0x40ad94
  40ad80:	shl    DWORD PTR [ebp+0xc],1
  40ad83:	test   DWORD PTR [ebp+0x8],0x80000000
  40ad8a:	je     0x40ad90
  40ad8c:	or     DWORD PTR [ebp+0xc],0x1
  40ad90:	shl    DWORD PTR [ebp+0x8],1
  40ad93:	dec    edx
  40ad94:	test   BYTE PTR [ebp+0xe],0x10
  40ad98:	je     0x40ad80
  40ad9a:	push   esi
  40ad9b:	mov    esi,0xffef
  40ada0:	and    WORD PTR [ebp+0xe],si
  40ada4:	pop    esi
  40ada5:	cmp    eax,ecx
  40ada7:	je     0x40adb2
  40ada9:	mov    eax,0x8000
  40adae:	or     WORD PTR [ebp+0xe],ax
  40adb2:	fld    QWORD PTR [ebp+0x8]
  40adb5:	push   ecx
  40adb6:	push   ecx
  40adb7:	push   ecx
  40adb8:	fstp   QWORD PTR [esp]
  40adbb:	call   0x40ace9
  40adc0:	add    esp,0xc
  40adc3:	jmp    0x40adeb
  40adc5:	push   ecx
  40adc6:	fstp   st(0)
  40adc8:	fld    QWORD PTR [ebp+0x8]
  40adcb:	push   ecx
  40adcc:	push   ecx
  40adcd:	fstp   QWORD PTR [esp]
  40add0:	call   0x40ace9
  40add5:	movzx  edx,WORD PTR [ebp+0xe]
  40add9:	shr    edx,0x4
  40addc:	and    edx,0x7ff
  40ade2:	add    esp,0xc
  40ade5:	sub    edx,0x3fe
  40adeb:	mov    eax,DWORD PTR [ebp+0x10]
  40adee:	mov    DWORD PTR [eax],edx
  40adf0:	pop    ebp
  40adf1:	ret    
  40adf2:	int3   
  40adf3:	int3   
  40adf4:	int3   
  40adf5:	int3   
  40adf6:	int3   
  40adf7:	int3   
  40adf8:	int3   
  40adf9:	int3   
  40adfa:	int3   
  40adfb:	int3   
  40adfc:	int3   
  40adfd:	int3   
  40adfe:	int3   
  40adff:	int3   
  40ae00:	sub    esp,0xc
  40ae03:	fst    QWORD PTR [esp]
  40ae06:	call   0x40f078
  40ae0b:	call   0x40ae1d
  40ae10:	add    esp,0xc
  40ae13:	ret    
  40ae14:	lea    edx,[esp+0x4]
  40ae18:	call   0x40f035
  40ae1d:	push   edx
  40ae1e:	fstcw  WORD PTR [esp]
  40ae22:	mov    eax,DWORD PTR [esp+0xc]
  40ae26:	je     0x40ae79
  40ae28:	cmp    WORD PTR [esp],0x27f
  40ae2e:	je     0x40ae35
  40ae30:	call   0x40f005
  40ae35:	test   eax,0x80000000
  40ae3a:	jne    0x40ae5b
  40ae3c:	fsqrt  
  40ae3e:	cmp    DWORD PTR ds:0x44df7c,0x0
  40ae45:	jne    0x40f08e
  40ae4b:	mov    edx,0x5
  40ae50:	lea    ecx,ds:0x44b870
  40ae56:	jmp    0x40f09b
  40ae5b:	test   eax,0x7ff00000
  40ae60:	jne    0x40ae8e
  40ae62:	test   eax,0xfffff
  40ae67:	jne    0x40ae8e
  40ae69:	cmp    DWORD PTR [esp+0x8],0x0
  40ae6e:	jne    0x40ae8e
  40ae70:	jmp    0x40ae3e
  40ae72:	call   0x40f01c
  40ae77:	jmp    0x40ae9b
  40ae79:	test   eax,0xfffff
  40ae7e:	jne    0x40ae72
  40ae80:	cmp    DWORD PTR [esp+0x8],0x0
  40ae85:	jne    0x40ae72
  40ae87:	and    eax,0x80000000
  40ae8c:	je     0x40ae3e
  40ae8e:	fstp   st(0)
  40ae90:	fld    TBYTE PTR ds:0x4451a0
  40ae96:	mov    eax,0x1
  40ae9b:	cmp    DWORD PTR ds:0x44df7c,0x0
  40aea2:	jne    0x40f08e
  40aea8:	mov    edx,0x5
  40aead:	lea    ecx,ds:0x44b870
  40aeb3:	call   0x40efa7
  40aeb8:	pop    edx
  40aeb9:	ret    
  40aeba:	mov    edi,edi
  40aebc:	push   ebp
  40aebd:	mov    ebp,esp
  40aebf:	push   ecx
  40aec0:	fstsw  WORD PTR [ebp-0x4]
  40aec4:	movsx  eax,WORD PTR [ebp-0x4]
  40aec8:	leave  
  40aec9:	ret    
  40aeca:	mov    edi,edi
  40aecc:	push   ebp
  40aecd:	mov    ebp,esp
  40aecf:	push   ecx
  40aed0:	fnstsw WORD PTR [ebp-0x4]
  40aed3:	fnclex 
  40aed5:	movsx  eax,WORD PTR [ebp-0x4]
  40aed9:	leave  
  40aeda:	ret    
  40aedb:	mov    edi,edi
  40aedd:	push   ebp
  40aede:	mov    ebp,esp
  40aee0:	push   ecx
  40aee1:	fstcw  WORD PTR [ebp-0x4]
  40aee5:	mov    eax,DWORD PTR [ebp+0xc]
  40aee8:	mov    ecx,DWORD PTR [ebp+0x8]
  40aeeb:	and    ecx,DWORD PTR [ebp+0xc]
  40aeee:	not    eax
  40aef0:	and    ax,WORD PTR [ebp-0x4]
  40aef4:	or     ax,cx
  40aef7:	movzx  eax,ax
  40aefa:	mov    DWORD PTR [ebp+0xc],eax
  40aefd:	fldcw  WORD PTR [ebp+0xc]
  40af00:	movsx  eax,WORD PTR [ebp-0x4]
  40af04:	leave  
  40af05:	ret    
  40af06:	mov    edi,edi
  40af08:	push   ebp
  40af09:	mov    ebp,esp
  40af0b:	push   ecx
  40af0c:	push   ecx
  40af0d:	mov    cl,BYTE PTR [ebp+0x8]
  40af10:	test   cl,0x1
  40af13:	je     0x40af1f
  40af15:	fld    TBYTE PTR ds:0x44b878
  40af1b:	fistp  DWORD PTR [ebp+0x8]
  40af1e:	fwait
  40af1f:	test   cl,0x8
  40af22:	je     0x40af34
  40af24:	fstsw  ax
  40af27:	fld    TBYTE PTR ds:0x44b878
  40af2d:	fstp   QWORD PTR [ebp-0x8]
  40af30:	fstsw  ax
  40af34:	test   cl,0x10
  40af37:	je     0x40af43
  40af39:	fld    TBYTE PTR ds:0x44b884
  40af3f:	fstp   QWORD PTR [ebp-0x8]
  40af42:	fwait
  40af43:	test   cl,0x4
  40af46:	je     0x40af51
  40af48:	fldz   
  40af4a:	fld1   
  40af4c:	fdivrp st(1),st
  40af4e:	fstp   st(0)
  40af50:	fwait
  40af51:	test   cl,0x20
  40af54:	je     0x40af5c
  40af56:	fldpi  
  40af58:	fstp   QWORD PTR [ebp-0x8]
  40af5b:	fwait
  40af5c:	leave  
  40af5d:	ret    
  40af5e:	push   0x8
  40af60:	push   0x449390
  40af65:	call   0x4076f0
  40af6a:	xor    eax,eax
  40af6c:	cmp    DWORD PTR ds:0x45077c,eax
  40af72:	je     0x40afca
  40af74:	test   BYTE PTR [ebp+0x8],0x40
  40af78:	je     0x40afc2
  40af7a:	cmp    DWORD PTR ds:0x44b890,eax
  40af80:	je     0x40afc2
  40af82:	mov    DWORD PTR [ebp-0x4],eax
  40af85:	ldmxcsr DWORD PTR [ebp+0x8]
  40af89:	jmp    0x40afb9
  40af8b:	mov    eax,DWORD PTR [ebp-0x14]
  40af8e:	mov    eax,DWORD PTR [eax]
  40af90:	mov    eax,DWORD PTR [eax]
  40af92:	cmp    eax,0xc0000005
  40af97:	je     0x40afa3
  40af99:	cmp    eax,0xc000001d
  40af9e:	je     0x40afa3
  40afa0:	xor    eax,eax
  40afa2:	ret    
  40afa3:	xor    eax,eax
  40afa5:	inc    eax
  40afa6:	ret    
  40afa7:	mov    esp,DWORD PTR [ebp-0x18]
  40afaa:	and    DWORD PTR ds:0x44b890,0x0
  40afb1:	and    DWORD PTR [ebp+0x8],0xffffffbf
  40afb5:	ldmxcsr DWORD PTR [ebp+0x8]
  40afb9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40afc0:	jmp    0x40afca
  40afc2:	and    DWORD PTR [ebp+0x8],0xffffffbf
  40afc6:	ldmxcsr DWORD PTR [ebp+0x8]
  40afca:	call   0x407735
  40afcf:	ret    
  40afd0:	int3   
  40afd1:	int3   
  40afd2:	mov    eax,0x40fc26
  40afd7:	mov    ds:0x44c200,eax
  40afdc:	mov    DWORD PTR ds:0x44c204,0x40f31c
  40afe6:	mov    DWORD PTR ds:0x44c208,0x40f2d0
  40aff0:	mov    DWORD PTR ds:0x44c20c,0x40f309
  40affa:	mov    DWORD PTR ds:0x44c210,0x40f272
  40b004:	mov    ds:0x44c214,eax
  40b009:	mov    DWORD PTR ds:0x44c218,0x40fb9e
  40b013:	mov    DWORD PTR ds:0x44c21c,0x40f28e
  40b01d:	mov    DWORD PTR ds:0x44c220,0x40f1f0
  40b027:	mov    DWORD PTR ds:0x44c224,0x40f17c
  40b031:	ret    
  40b032:	mov    edi,edi
  40b034:	push   ebp
  40b035:	mov    ebp,esp
  40b037:	call   0x40afd2
  40b03c:	cmp    DWORD PTR [ebp+0x8],0x0
  40b040:	je     0x40b047
  40b042:	call   0x40fc49
  40b047:	fnclex 
  40b049:	pop    ebp
  40b04a:	ret    
  40b04b:	push   0x2c
  40b04d:	push   0x4493b0
  40b052:	call   0x4076f0
  40b057:	xor    ebx,ebx
  40b059:	mov    DWORD PTR [ebp-0x38],ebx
  40b05c:	mov    DWORD PTR [ebp-0x2c],ebx
  40b05f:	mov    DWORD PTR [ebp-0x1c],ebx
  40b062:	mov    DWORD PTR [ebp-0x24],ebx
  40b065:	mov    DWORD PTR [ebp-0x28],ebx
  40b068:	mov    DWORD PTR [ebp-0x20],ebx
  40b06b:	push   0x7
  40b06d:	call   0x407f70
  40b072:	pop    ecx
  40b073:	mov    DWORD PTR [ebp-0x4],ebx
  40b076:	call   0x40ba8e
  40b07b:	mov    DWORD PTR [ebp-0x20],eax
  40b07e:	lea    eax,[ebp-0x1c]
  40b081:	push   eax
  40b082:	call   0x40ba4f
  40b087:	pop    ecx
  40b088:	cmp    eax,ebx
  40b08a:	jne    0x40b14f
  40b090:	lea    eax,[ebp-0x24]
  40b093:	push   eax
  40b094:	call   0x40b9f5
  40b099:	pop    ecx
  40b09a:	cmp    eax,ebx
  40b09c:	jne    0x40b14f
  40b0a2:	lea    eax,[ebp-0x28]
  40b0a5:	push   eax
  40b0a6:	call   0x40ba22
  40b0ab:	pop    ecx
  40b0ac:	cmp    eax,ebx
  40b0ae:	jne    0x40b14f
  40b0b4:	call   0x406e3f
  40b0b9:	mov    DWORD PTR [ebp-0x34],eax
  40b0bc:	mov    DWORD PTR ds:0x44e02c,ebx
  40b0c2:	or     edi,0xffffffff
  40b0c5:	mov    DWORD PTR ds:0x44b8a8,edi
  40b0cb:	mov    DWORD PTR ds:0x44b89c,edi
  40b0d1:	push   0x443f38
  40b0d6:	call   0x40fc87
  40b0db:	pop    ecx
  40b0dc:	mov    esi,eax
  40b0de:	mov    DWORD PTR [ebp-0x3c],esi
  40b0e1:	cmp    esi,ebx
  40b0e3:	je     0x40b159
  40b0e5:	cmp    BYTE PTR [esi],bl
  40b0e7:	je     0x40b159
  40b0e9:	mov    eax,ds:0x44e030
  40b0ee:	cmp    eax,ebx
  40b0f0:	je     0x40b113
  40b0f2:	push   eax
  40b0f3:	push   esi
  40b0f4:	call   0x40bcb0
  40b0f9:	pop    ecx
  40b0fa:	pop    ecx
  40b0fb:	test   eax,eax
  40b0fd:	je     0x40b244
  40b103:	mov    eax,ds:0x44e030
  40b108:	cmp    eax,ebx
  40b10a:	je     0x40b113
  40b10c:	push   eax
  40b10d:	call   0x404391
  40b112:	pop    ecx
  40b113:	push   esi
  40b114:	call   0x405450
  40b119:	inc    eax
  40b11a:	push   eax
  40b11b:	call   0x406e65
  40b120:	pop    ecx
  40b121:	pop    ecx
  40b122:	mov    ds:0x44e030,eax
  40b127:	cmp    eax,ebx
  40b129:	je     0x40b244
  40b12f:	push   esi
  40b130:	push   esi
  40b131:	call   0x405450
  40b136:	pop    ecx
  40b137:	inc    eax
  40b138:	push   eax
  40b139:	push   DWORD PTR ds:0x44e030
  40b13f:	call   0x4078df
  40b144:	add    esp,0xc
  40b147:	cmp    eax,ebx
  40b149:	je     0x40b24b
  40b14f:	push   ebx
  40b150:	push   ebx
  40b151:	push   ebx
  40b152:	push   ebx
  40b153:	push   ebx
  40b154:	call   0x4075f7
  40b159:	mov    eax,ds:0x44e030
  40b15e:	cmp    eax,ebx
  40b160:	je     0x40b16f
  40b162:	push   eax
  40b163:	call   0x404391
  40b168:	pop    ecx
  40b169:	mov    DWORD PTR ds:0x44e030,ebx
  40b16f:	push   0x44df80
  40b174:	call   DWORD PTR ds:0x443134
  40b17a:	cmp    eax,edi
  40b17c:	je     0x40b244
  40b182:	xor    ecx,ecx
  40b184:	inc    ecx
  40b185:	mov    DWORD PTR ds:0x44e02c,ecx
  40b18b:	mov    eax,ds:0x44df80
  40b190:	imul   eax,eax,0x3c
  40b193:	mov    DWORD PTR [ebp-0x1c],eax
  40b196:	cmp    WORD PTR ds:0x44dfc6,bx
  40b19d:	je     0x40b1ad
  40b19f:	mov    edx,DWORD PTR ds:0x44dfd4
  40b1a5:	imul   edx,edx,0x3c
  40b1a8:	add    eax,edx
  40b1aa:	mov    DWORD PTR [ebp-0x1c],eax
  40b1ad:	cmp    WORD PTR ds:0x44e01a,bx
  40b1b4:	je     0x40b1d0
  40b1b6:	mov    eax,ds:0x44e028
  40b1bb:	cmp    eax,ebx
  40b1bd:	je     0x40b1d0
  40b1bf:	mov    DWORD PTR [ebp-0x24],ecx
  40b1c2:	sub    eax,DWORD PTR ds:0x44dfd4
  40b1c8:	imul   eax,eax,0x3c
  40b1cb:	mov    DWORD PTR [ebp-0x28],eax
  40b1ce:	jmp    0x40b1d6
  40b1d0:	mov    DWORD PTR [ebp-0x24],ebx
  40b1d3:	mov    DWORD PTR [ebp-0x28],ebx
  40b1d6:	lea    eax,[ebp-0x30]
  40b1d9:	push   eax
  40b1da:	push   ebx
  40b1db:	push   0x3f
  40b1dd:	mov    eax,DWORD PTR [ebp-0x20]
  40b1e0:	push   DWORD PTR [eax]
  40b1e2:	push   edi
  40b1e3:	push   0x44df84
  40b1e8:	push   ebx
  40b1e9:	push   DWORD PTR [ebp-0x34]
  40b1ec:	mov    edi,DWORD PTR ds:0x443198
  40b1f2:	call   edi
  40b1f4:	test   eax,eax
  40b1f6:	je     0x40b207
  40b1f8:	cmp    DWORD PTR [ebp-0x30],ebx
  40b1fb:	jne    0x40b207
  40b1fd:	mov    eax,DWORD PTR [ebp-0x20]
  40b200:	mov    eax,DWORD PTR [eax]
  40b202:	mov    BYTE PTR [eax+0x3f],bl
  40b205:	jmp    0x40b20e
  40b207:	mov    eax,DWORD PTR [ebp-0x20]
  40b20a:	mov    eax,DWORD PTR [eax]
  40b20c:	mov    BYTE PTR [eax],bl
  40b20e:	lea    eax,[ebp-0x30]
  40b211:	push   eax
  40b212:	push   ebx
  40b213:	push   0x3f
  40b215:	mov    eax,DWORD PTR [ebp-0x20]
  40b218:	push   DWORD PTR [eax+0x4]
  40b21b:	push   0xffffffff
  40b21d:	push   0x44dfd8
  40b222:	push   ebx
  40b223:	push   DWORD PTR [ebp-0x34]
  40b226:	call   edi
  40b228:	test   eax,eax
  40b22a:	je     0x40b23c
  40b22c:	cmp    DWORD PTR [ebp-0x30],ebx
  40b22f:	jne    0x40b23c
  40b231:	mov    eax,DWORD PTR [ebp-0x20]
  40b234:	mov    eax,DWORD PTR [eax+0x4]
  40b237:	mov    BYTE PTR [eax+0x3f],bl
  40b23a:	jmp    0x40b244
  40b23c:	mov    eax,DWORD PTR [ebp-0x20]
  40b23f:	mov    eax,DWORD PTR [eax+0x4]
  40b242:	mov    BYTE PTR [eax],bl
  40b244:	mov    DWORD PTR [ebp-0x2c],0x1
  40b24b:	mov    edi,DWORD PTR [ebp-0x1c]
  40b24e:	call   0x40ba88
  40b253:	mov    DWORD PTR [eax],edi
  40b255:	mov    edi,DWORD PTR [ebp-0x24]
  40b258:	call   0x40ba7c
  40b25d:	mov    DWORD PTR [eax],edi
  40b25f:	mov    edi,DWORD PTR [ebp-0x28]
  40b262:	call   0x40ba82
  40b267:	mov    DWORD PTR [eax],edi
  40b269:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40b270:	call   0x40b2ce
  40b275:	cmp    DWORD PTR [ebp-0x2c],ebx
  40b278:	jne    0x40b358
  40b27e:	push   0x3
  40b280:	push   esi
  40b281:	push   0x40
  40b283:	mov    edi,DWORD PTR [ebp-0x20]
  40b286:	push   DWORD PTR [edi]
  40b288:	call   0x40ccd8
  40b28d:	add    esp,0x10
  40b290:	test   eax,eax
  40b292:	jne    0x40b14f
  40b298:	add    esi,0x3
  40b29b:	cmp    BYTE PTR [esi],0x2d
  40b29e:	jne    0x40b2a8
  40b2a0:	mov    DWORD PTR [ebp-0x38],0x1
  40b2a7:	inc    esi
  40b2a8:	push   esi
  40b2a9:	call   0x40fc71
  40b2ae:	pop    ecx
  40b2af:	imul   eax,eax,0xe10
  40b2b5:	mov    DWORD PTR [ebp-0x1c],eax
  40b2b8:	mov    al,BYTE PTR [esi]
  40b2ba:	cmp    al,0x2b
  40b2bc:	je     0x40b2c6
  40b2be:	cmp    al,0x30
  40b2c0:	jl     0x40b2d7
  40b2c2:	cmp    al,0x39
  40b2c4:	jg     0x40b2d7
  40b2c6:	inc    esi
  40b2c7:	jmp    0x40b2b8
  40b2c9:	xor    ebx,ebx
  40b2cb:	mov    esi,DWORD PTR [ebp-0x3c]
  40b2ce:	push   0x7
  40b2d0:	call   0x407e97
  40b2d5:	pop    ecx
  40b2d6:	ret    
  40b2d7:	cmp    BYTE PTR [esi],0x3a
  40b2da:	jne    0x40b314
  40b2dc:	inc    esi
  40b2dd:	push   esi
  40b2de:	call   0x40fc71
  40b2e3:	pop    ecx
  40b2e4:	imul   eax,eax,0x3c
  40b2e7:	add    DWORD PTR [ebp-0x1c],eax
  40b2ea:	jmp    0x40b2f1
  40b2ec:	cmp    al,0x39
  40b2ee:	jg     0x40b2f7
  40b2f0:	inc    esi
  40b2f1:	mov    al,BYTE PTR [esi]
  40b2f3:	cmp    al,0x30
  40b2f5:	jge    0x40b2ec
  40b2f7:	cmp    BYTE PTR [esi],0x3a
  40b2fa:	jne    0x40b314
  40b2fc:	inc    esi
  40b2fd:	push   esi
  40b2fe:	call   0x40fc71
  40b303:	pop    ecx
  40b304:	add    DWORD PTR [ebp-0x1c],eax
  40b307:	jmp    0x40b30e
  40b309:	cmp    al,0x39
  40b30b:	jg     0x40b314
  40b30d:	inc    esi
  40b30e:	mov    al,BYTE PTR [esi]
  40b310:	cmp    al,0x30
  40b312:	jge    0x40b309
  40b314:	cmp    DWORD PTR [ebp-0x38],ebx
  40b317:	je     0x40b31c
  40b319:	neg    DWORD PTR [ebp-0x1c]
  40b31c:	movsx  eax,BYTE PTR [esi]
  40b31f:	mov    DWORD PTR [ebp-0x24],eax
  40b322:	cmp    eax,ebx
  40b324:	je     0x40b33f
  40b326:	push   0x3
  40b328:	push   esi
  40b329:	push   0x40
  40b32b:	push   DWORD PTR [edi+0x4]
  40b32e:	call   0x40ccd8
  40b333:	add    esp,0x10
  40b336:	test   eax,eax
  40b338:	je     0x40b344
  40b33a:	jmp    0x40b14f
  40b33f:	mov    eax,DWORD PTR [edi+0x4]
  40b342:	mov    BYTE PTR [eax],bl
  40b344:	mov    esi,DWORD PTR [ebp-0x1c]
  40b347:	call   0x40ba88
  40b34c:	mov    DWORD PTR [eax],esi
  40b34e:	mov    esi,DWORD PTR [ebp-0x24]
  40b351:	call   0x40ba7c
  40b356:	mov    DWORD PTR [eax],esi
  40b358:	call   0x407735
  40b35d:	ret    
  40b35e:	mov    edi,edi
  40b360:	push   ebp
  40b361:	mov    ebp,esp
  40b363:	sub    esp,0xc
  40b366:	and    DWORD PTR [ebp-0x4],0x0
  40b36a:	cmp    DWORD PTR [ebp+0xc],0x1
  40b36e:	push   ebx
  40b36f:	push   esi
  40b370:	push   edi
  40b371:	mov    edi,DWORD PTR [ebp+0x10]
  40b374:	mov    esi,eax
  40b376:	mov    eax,edi
  40b378:	jne    0x40b479
  40b37e:	and    eax,0x80000003
  40b383:	jns    0x40b38a
  40b385:	dec    eax
  40b386:	or     eax,0xfffffffc
  40b389:	inc    eax
  40b38a:	mov    DWORD PTR [ebp-0xc],eax
  40b38d:	jne    0x40b39b
  40b38f:	mov    eax,edi
  40b391:	push   0x64
  40b393:	cdq    
  40b394:	pop    ebx
  40b395:	idiv   ebx
  40b397:	test   edx,edx
  40b399:	jne    0x40b3ba
  40b39b:	lea    eax,[edi+0x76c]
  40b3a1:	cdq    
  40b3a2:	mov    ebx,0x190
  40b3a7:	idiv   ebx
  40b3a9:	test   edx,edx
  40b3ab:	je     0x40b3ba
  40b3ad:	mov    eax,esi
  40b3af:	shl    eax,0x2
  40b3b2:	mov    esi,DWORD PTR [eax+0x44c370]
  40b3b8:	jmp    0x40b3c5
  40b3ba:	mov    eax,esi
  40b3bc:	shl    eax,0x2
  40b3bf:	mov    esi,DWORD PTR [eax+0x44c33c]
  40b3c5:	mov    DWORD PTR [ebp+0xc],eax
  40b3c8:	lea    eax,[edi+0x12b]
  40b3ce:	cdq    
  40b3cf:	lea    ebx,[edi-0x1]
  40b3d2:	mov    edi,0x190
  40b3d7:	idiv   edi
  40b3d9:	push   0x64
  40b3db:	pop    edi
  40b3dc:	inc    esi
  40b3dd:	push   0x7
  40b3df:	mov    DWORD PTR [ebp-0x8],eax
  40b3e2:	mov    eax,ebx
  40b3e4:	cdq    
  40b3e5:	idiv   edi
  40b3e7:	mov    edx,DWORD PTR [ebp-0x8]
  40b3ea:	mov    edi,DWORD PTR [ebp+0x10]
  40b3ed:	pop    ebx
  40b3ee:	sub    edx,eax
  40b3f0:	mov    DWORD PTR [ebp-0x8],edx
  40b3f3:	lea    eax,[edi-0x1]
  40b3f6:	cdq    
  40b3f7:	and    edx,0x3
  40b3fa:	add    eax,edx
  40b3fc:	sar    eax,0x2
  40b3ff:	add    eax,esi
  40b401:	add    eax,DWORD PTR [ebp-0x8]
  40b404:	mov    edx,edi
  40b406:	imul   edx,edx,0x16d
  40b40c:	lea    eax,[edx+eax*1-0x63db]
  40b413:	cdq    
  40b414:	idiv   ebx
  40b416:	mov    eax,DWORD PTR [ebp+0x14]
  40b419:	imul   eax,eax,0x7
  40b41c:	sub    eax,edx
  40b41e:	add    eax,DWORD PTR [ebp+0x18]
  40b421:	cmp    edx,DWORD PTR [ebp+0x18]
  40b424:	jg     0x40b42c
  40b426:	lea    esi,[esi+eax*1-0x7]
  40b42a:	jmp    0x40b42e
  40b42c:	add    esi,eax
  40b42e:	cmp    DWORD PTR [ebp+0x14],0x5
  40b432:	jne    0x40b4b8
  40b438:	cmp    DWORD PTR [ebp-0xc],0x0
  40b43c:	jne    0x40b44a
  40b43e:	mov    eax,edi
  40b440:	push   0x64
  40b442:	cdq    
  40b443:	pop    ebx
  40b444:	idiv   ebx
  40b446:	test   edx,edx
  40b448:	jne    0x40b467
  40b44a:	lea    eax,[edi+0x76c]
  40b450:	cdq    
  40b451:	mov    ebx,0x190
  40b456:	idiv   ebx
  40b458:	test   edx,edx
  40b45a:	je     0x40b467
  40b45c:	mov    eax,DWORD PTR [ebp+0xc]
  40b45f:	mov    eax,DWORD PTR [eax+0x44c374]
  40b465:	jmp    0x40b470
  40b467:	mov    eax,DWORD PTR [ebp+0xc]
  40b46a:	mov    eax,DWORD PTR [eax+0x44c340]
  40b470:	cmp    esi,eax
  40b472:	jle    0x40b4b8
  40b474:	sub    esi,0x7
  40b477:	jmp    0x40b4b8
  40b479:	and    eax,0x80000003
  40b47e:	jns    0x40b485
  40b480:	dec    eax
  40b481:	or     eax,0xfffffffc
  40b484:	inc    eax
  40b485:	jne    0x40b493
  40b487:	mov    eax,edi
  40b489:	push   0x64
  40b48b:	cdq    
  40b48c:	pop    ebx
  40b48d:	idiv   ebx
  40b48f:	test   edx,edx
  40b491:	jne    0x40b4ae
  40b493:	lea    eax,[edi+0x76c]
  40b499:	cdq    
  40b49a:	mov    ebx,0x190
  40b49f:	idiv   ebx
  40b4a1:	test   edx,edx
  40b4a3:	je     0x40b4ae
  40b4a5:	mov    esi,DWORD PTR [esi*4+0x44c370]
  40b4ac:	jmp    0x40b4b5
  40b4ae:	mov    esi,DWORD PTR [esi*4+0x44c33c]
  40b4b5:	add    esi,DWORD PTR [ebp+0x1c]
  40b4b8:	imul   ecx,ecx,0x3c
  40b4bb:	add    ecx,DWORD PTR [ebp+0x20]
  40b4be:	imul   ecx,ecx,0x3c
  40b4c1:	add    ecx,DWORD PTR [ebp+0x24]
  40b4c4:	imul   ecx,ecx,0x3e8
  40b4ca:	add    ecx,DWORD PTR [ebp+0x28]
  40b4cd:	cmp    DWORD PTR [ebp+0x8],0x1
  40b4d1:	jne    0x40b4ea
  40b4d3:	mov    DWORD PTR ds:0x44b8a0,esi
  40b4d9:	mov    DWORD PTR ds:0x44b8a4,ecx
  40b4df:	mov    DWORD PTR ds:0x44b89c,edi
  40b4e5:	pop    edi
  40b4e6:	pop    esi
  40b4e7:	pop    ebx
  40b4e8:	leave  
  40b4e9:	ret    
  40b4ea:	lea    eax,[ebp-0x4]
  40b4ed:	push   eax
  40b4ee:	mov    DWORD PTR ds:0x44b8ac,esi
  40b4f4:	mov    DWORD PTR ds:0x44b8b0,ecx
  40b4fa:	call   0x40ba22
  40b4ff:	pop    ecx
  40b500:	test   eax,eax
  40b502:	jne    0x40b548
  40b504:	mov    eax,DWORD PTR [ebp-0x4]
  40b507:	imul   eax,eax,0x3e8
  40b50d:	add    DWORD PTR ds:0x44b8b0,eax
  40b513:	jns    0x40b527
  40b515:	add    DWORD PTR ds:0x44b8b0,0x5265c00
  40b51f:	dec    DWORD PTR ds:0x44b8ac
  40b525:	jmp    0x40b540
  40b527:	mov    eax,0x5265c00
  40b52c:	cmp    DWORD PTR ds:0x44b8b0,eax
  40b532:	jl     0x40b540
  40b534:	sub    DWORD PTR ds:0x44b8b0,eax
  40b53a:	inc    DWORD PTR ds:0x44b8ac
  40b540:	mov    DWORD PTR ds:0x44b8a8,edi
  40b546:	jmp    0x40b4e5
  40b548:	xor    eax,eax
  40b54a:	push   eax
  40b54b:	push   eax
  40b54c:	push   eax
  40b54d:	push   eax
  40b54e:	push   eax
  40b54f:	call   0x4075f7
  40b554:	int3   
  40b555:	mov    edi,edi
  40b557:	push   ebp
  40b558:	mov    ebp,esp
  40b55a:	sub    esp,0xc
  40b55d:	push   esi
  40b55e:	lea    eax,[ebp-0x4]
  40b561:	xor    esi,esi
  40b563:	push   eax
  40b564:	mov    DWORD PTR [ebp-0x4],esi
  40b567:	call   0x40b9f5
  40b56c:	pop    ecx
  40b56d:	test   eax,eax
  40b56f:	jne    0x40b721
  40b575:	cmp    DWORD PTR [ebp-0x4],esi
  40b578:	je     0x40b6d6
  40b57e:	mov    edx,DWORD PTR [edi+0x14]
  40b581:	push   ebx
  40b582:	xor    ebx,ebx
  40b584:	inc    ebx
  40b585:	cmp    edx,DWORD PTR ds:0x44b89c
  40b58b:	jne    0x40b599
  40b58d:	cmp    edx,DWORD PTR ds:0x44b8a8
  40b593:	je     0x40b6b1
  40b599:	cmp    DWORD PTR ds:0x44e02c,esi
  40b59f:	je     0x40b65d
  40b5a5:	movzx  eax,WORD PTR ds:0x44e026
  40b5ac:	movzx  ecx,WORD PTR ds:0x44e020
  40b5b3:	push   eax
  40b5b4:	movzx  eax,WORD PTR ds:0x44e024
  40b5bb:	push   eax
  40b5bc:	movzx  eax,WORD PTR ds:0x44e022
  40b5c3:	push   eax
  40b5c4:	cmp    WORD PTR ds:0x44e018,si
  40b5cb:	jne    0x40b5e2
  40b5cd:	movzx  eax,WORD PTR ds:0x44e01c
  40b5d4:	push   esi
  40b5d5:	push   eax
  40b5d6:	movzx  eax,WORD PTR ds:0x44e01e
  40b5dd:	push   eax
  40b5de:	push   edx
  40b5df:	push   ebx
  40b5e0:	jmp    0x40b5ee
  40b5e2:	movzx  eax,WORD PTR ds:0x44e01e
  40b5e9:	push   eax
  40b5ea:	push   esi
  40b5eb:	push   esi
  40b5ec:	push   edx
  40b5ed:	push   esi
  40b5ee:	movzx  eax,WORD PTR ds:0x44e01a
  40b5f5:	push   ebx
  40b5f6:	call   0x40b35e
  40b5fb:	movzx  eax,WORD PTR ds:0x44dfd2
  40b602:	movzx  ecx,WORD PTR ds:0x44dfcc
  40b609:	add    esp,0x24
  40b60c:	push   eax
  40b60d:	movzx  eax,WORD PTR ds:0x44dfd0
  40b614:	push   eax
  40b615:	movzx  eax,WORD PTR ds:0x44dfce
  40b61c:	push   eax
  40b61d:	cmp    WORD PTR ds:0x44dfc4,si
  40b624:	jne    0x40b63d
  40b626:	movzx  eax,WORD PTR ds:0x44dfc8
  40b62d:	push   esi
  40b62e:	push   eax
  40b62f:	movzx  eax,WORD PTR ds:0x44dfca
  40b636:	push   eax
  40b637:	push   DWORD PTR [edi+0x14]
  40b63a:	push   ebx
  40b63b:	jmp    0x40b64b
  40b63d:	movzx  eax,WORD PTR ds:0x44dfca
  40b644:	push   eax
  40b645:	push   esi
  40b646:	push   esi
  40b647:	push   DWORD PTR [edi+0x14]
  40b64a:	push   esi
  40b64b:	movzx  eax,WORD PTR ds:0x44dfc6
  40b652:	push   esi
  40b653:	call   0x40b35e
  40b658:	add    esp,0x24
  40b65b:	jmp    0x40b6b1
  40b65d:	push   0x3
  40b65f:	pop    eax
  40b660:	push   0x2
  40b662:	pop    ecx
  40b663:	mov    DWORD PTR [ebp-0xc],0xb
  40b66a:	mov    DWORD PTR [ebp-0x8],ebx
  40b66d:	cmp    edx,0x6b
  40b670:	jge    0x40b685
  40b672:	push   0x4
  40b674:	pop    eax
  40b675:	mov    ecx,ebx
  40b677:	mov    DWORD PTR [ebp-0xc],0xa
  40b67e:	mov    DWORD PTR [ebp-0x8],0x5
  40b685:	push   esi
  40b686:	push   esi
  40b687:	push   esi
  40b688:	push   esi
  40b689:	push   esi
  40b68a:	push   ecx
  40b68b:	push   edx
  40b68c:	push   ebx
  40b68d:	push   ebx
  40b68e:	push   0x2
  40b690:	pop    ecx
  40b691:	call   0x40b35e
  40b696:	mov    eax,DWORD PTR [ebp-0xc]
  40b699:	push   esi
  40b69a:	push   esi
  40b69b:	push   esi
  40b69c:	push   esi
  40b69d:	push   esi
  40b69e:	push   DWORD PTR [ebp-0x8]
  40b6a1:	push   DWORD PTR [edi+0x14]
  40b6a4:	push   ebx
  40b6a5:	push   esi
  40b6a6:	push   0x2
  40b6a8:	pop    ecx
  40b6a9:	call   0x40b35e
  40b6ae:	add    esp,0x48
  40b6b1:	mov    ecx,DWORD PTR ds:0x44b8a0
  40b6b7:	mov    eax,ds:0x44b8ac
  40b6bc:	mov    edx,DWORD PTR [edi+0x1c]
  40b6bf:	cmp    ecx,eax
  40b6c1:	jge    0x40b6d9
  40b6c3:	cmp    edx,ecx
  40b6c5:	jl     0x40b6e9
  40b6c7:	cmp    edx,eax
  40b6c9:	jg     0x40b6e9
  40b6cb:	cmp    edx,ecx
  40b6cd:	jle    0x40b6ed
  40b6cf:	cmp    edx,eax
  40b6d1:	jge    0x40b6ed
  40b6d3:	mov    eax,ebx
  40b6d5:	pop    ebx
  40b6d6:	pop    esi
  40b6d7:	leave  
  40b6d8:	ret    
  40b6d9:	cmp    edx,eax
  40b6db:	jl     0x40b6d3
  40b6dd:	cmp    edx,ecx
  40b6df:	jg     0x40b6d3
  40b6e1:	cmp    edx,eax
  40b6e3:	jle    0x40b6ed
  40b6e5:	cmp    edx,ecx
  40b6e7:	jge    0x40b6ed
  40b6e9:	xor    eax,eax
  40b6eb:	jmp    0x40b6d5
  40b6ed:	mov    eax,DWORD PTR [edi+0x8]
  40b6f0:	imul   eax,eax,0x3c
  40b6f3:	add    eax,DWORD PTR [edi+0x4]
  40b6f6:	imul   eax,eax,0x3c
  40b6f9:	add    eax,DWORD PTR [edi]
  40b6fb:	imul   eax,eax,0x3e8
  40b701:	cmp    edx,ecx
  40b703:	jne    0x40b712
  40b705:	xor    ecx,ecx
  40b707:	cmp    eax,DWORD PTR ds:0x44b8a4
  40b70d:	setge  cl
  40b710:	jmp    0x40b71d
  40b712:	xor    ecx,ecx
  40b714:	cmp    eax,DWORD PTR ds:0x44b8b0
  40b71a:	setl   cl
  40b71d:	mov    eax,ecx
  40b71f:	jmp    0x40b6d5
  40b721:	push   esi
  40b722:	push   esi
  40b723:	push   esi
  40b724:	push   esi
  40b725:	push   esi
  40b726:	call   0x4075f7
  40b72b:	int3   
  40b72c:	push   0x8
  40b72e:	push   0x4493d0
  40b733:	call   0x4076f0
  40b738:	xor    esi,esi
  40b73a:	cmp    DWORD PTR ds:0x44e034,esi
  40b740:	jne    0x40b76c
  40b742:	push   0x6
  40b744:	call   0x407f70
  40b749:	pop    ecx
  40b74a:	mov    DWORD PTR [ebp-0x4],esi
  40b74d:	cmp    DWORD PTR ds:0x44e034,esi
  40b753:	jne    0x40b760
  40b755:	call   0x40b04b
  40b75a:	inc    DWORD PTR ds:0x44e034
  40b760:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40b767:	call   0x40b772
  40b76c:	call   0x407735
  40b771:	ret    
  40b772:	push   0x6
  40b774:	call   0x407e97
  40b779:	pop    ecx
  40b77a:	ret    
  40b77b:	push   0xc
  40b77d:	push   0x4493f0
  40b782:	call   0x4076f0
  40b787:	push   0x6
  40b789:	call   0x407f70
  40b78e:	pop    ecx
  40b78f:	and    DWORD PTR [ebp-0x4],0x0
  40b793:	mov    edi,DWORD PTR [ebp+0x8]
  40b796:	call   0x40b555
  40b79b:	mov    DWORD PTR [ebp-0x1c],eax
  40b79e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40b7a5:	call   0x40b7b3
  40b7aa:	mov    eax,DWORD PTR [ebp-0x1c]
  40b7ad:	call   0x407735
  40b7b2:	ret    
  40b7b3:	push   0x6
  40b7b5:	call   0x407e97
  40b7ba:	pop    ecx
  40b7bb:	ret    
  40b7bc:	mov    edi,edi
  40b7be:	push   ebp
  40b7bf:	mov    ebp,esp
  40b7c1:	sub    esp,0x10
  40b7c4:	and    DWORD PTR [ebp-0x4],0x0
  40b7c8:	push   esi
  40b7c9:	mov    esi,DWORD PTR [ebp+0x8]
  40b7cc:	test   esi,esi
  40b7ce:	jne    0x40b7e6
  40b7d0:	call   0x40769b
  40b7d5:	push   0x16
  40b7d7:	pop    esi
  40b7d8:	mov    DWORD PTR [eax],esi
  40b7da:	call   0x407649
  40b7df:	mov    eax,esi
  40b7e1:	jmp    0x40b9f2
  40b7e6:	push   0x24
  40b7e8:	push   0xff
  40b7ed:	push   esi
  40b7ee:	call   0x40a550
  40b7f3:	mov    eax,DWORD PTR [ebp+0xc]
  40b7f6:	add    esp,0xc
  40b7f9:	test   eax,eax
  40b7fb:	je     0x40b7d0
  40b7fd:	mov    ecx,DWORD PTR [eax]
  40b7ff:	mov    eax,DWORD PTR [eax+0x4]
  40b802:	mov    DWORD PTR [ebp-0x10],ecx
  40b805:	mov    DWORD PTR [ebp-0xc],eax
  40b808:	cmp    eax,0xffffffff
  40b80b:	jg     0x40b823
  40b80d:	jl     0x40b817
  40b80f:	cmp    ecx,0xffff5740
  40b815:	jae    0x40b823
  40b817:	call   0x40769b
  40b81c:	push   0x16
  40b81e:	pop    esi
  40b81f:	mov    DWORD PTR [eax],esi
  40b821:	jmp    0x40b7df
  40b823:	cmp    eax,0x7
  40b826:	jl     0x40b832
  40b828:	jg     0x40b817
  40b82a:	cmp    ecx,0x934126cf
  40b830:	ja     0x40b817
  40b832:	push   ebx
  40b833:	push   edi
  40b834:	push   0x0
  40b836:	push   0x1e13380
  40b83b:	push   eax
  40b83c:	push   ecx
  40b83d:	call   0x40baa0
  40b842:	lea    ecx,[eax+0x46]
  40b845:	lea    eax,[ecx+0x12b]
  40b84b:	cdq    
  40b84c:	mov    ebx,0x190
  40b851:	idiv   ebx
  40b853:	lea    edi,[ecx-0x1]
  40b856:	push   0x64
  40b858:	mov    DWORD PTR [ebp-0x8],edi
  40b85b:	mov    DWORD PTR [ebp+0x8],ecx
  40b85e:	mov    ebx,eax
  40b860:	mov    eax,edi
  40b862:	cdq    
  40b863:	pop    edi
  40b864:	idiv   edi
  40b866:	push   0xffffffff
  40b868:	push   0xfffffe93
  40b86d:	sub    ebx,eax
  40b86f:	mov    eax,DWORD PTR [ebp-0x8]
  40b872:	cdq    
  40b873:	and    edx,0x3
  40b876:	add    eax,edx
  40b878:	sar    eax,0x2
  40b87b:	lea    eax,[ebx+eax*1-0x11]
  40b87f:	cdq    
  40b880:	mov    edi,eax
  40b882:	lea    eax,[ecx-0x46]
  40b885:	mov    ebx,edx
  40b887:	cdq    
  40b888:	push   edx
  40b889:	push   eax
  40b88a:	call   0x40fd10
  40b88f:	sub    eax,edi
  40b891:	sbb    edx,ebx
  40b893:	push   0x0
  40b895:	mov    ebx,0x15180
  40b89a:	push   ebx
  40b89b:	push   edx
  40b89c:	push   eax
  40b89d:	call   0x40fd10
  40b8a2:	mov    edi,DWORD PTR [ebp-0x10]
  40b8a5:	add    edi,eax
  40b8a7:	adc    DWORD PTR [ebp-0xc],edx
  40b8aa:	cmp    DWORD PTR [ebp-0xc],0x0
  40b8ae:	jg     0x40b8fd
  40b8b0:	jl     0x40b8b6
  40b8b2:	test   edi,edi
  40b8b4:	jae    0x40b8fd
  40b8b6:	mov    eax,DWORD PTR [ebp-0x8]
  40b8b9:	add    edi,0x1e13380
  40b8bf:	adc    DWORD PTR [ebp-0xc],0x0
  40b8c3:	mov    ecx,eax
  40b8c5:	and    ecx,0x80000003
  40b8cb:	mov    DWORD PTR [ebp+0x8],eax
  40b8ce:	jns    0x40b8d5
  40b8d0:	dec    ecx
  40b8d1:	or     ecx,0xfffffffc
  40b8d4:	inc    ecx
  40b8d5:	jne    0x40b8e4
  40b8d7:	push   0x64
  40b8d9:	cdq    
  40b8da:	pop    ecx
  40b8db:	idiv   ecx
  40b8dd:	test   edx,edx
  40b8df:	jne    0x40b8f5
  40b8e1:	mov    eax,DWORD PTR [ebp+0x8]
  40b8e4:	add    eax,0x76c
  40b8e9:	cdq    
  40b8ea:	mov    ecx,0x190
  40b8ef:	idiv   ecx
  40b8f1:	test   edx,edx
  40b8f3:	jne    0x40b936
  40b8f5:	add    edi,ebx
  40b8f7:	adc    DWORD PTR [ebp-0xc],0x0
  40b8fb:	jmp    0x40b92f
  40b8fd:	mov    eax,DWORD PTR [ebp+0x8]
  40b900:	mov    ecx,eax
  40b902:	and    ecx,0x80000003
  40b908:	jns    0x40b90f
  40b90a:	dec    ecx
  40b90b:	or     ecx,0xfffffffc
  40b90e:	inc    ecx
  40b90f:	jne    0x40b91b
  40b911:	push   0x64
  40b913:	cdq    
  40b914:	pop    ecx
  40b915:	idiv   ecx
  40b917:	test   edx,edx
  40b919:	jne    0x40b92f
  40b91b:	mov    eax,DWORD PTR [ebp+0x8]
  40b91e:	add    eax,0x76c
  40b923:	cdq    
  40b924:	mov    ecx,0x190
  40b929:	idiv   ecx
  40b92b:	test   edx,edx
  40b92d:	jne    0x40b936
  40b92f:	mov    DWORD PTR [ebp-0x4],0x1
  40b936:	mov    eax,DWORD PTR [ebp+0x8]
  40b939:	push   0x0
  40b93b:	push   ebx
  40b93c:	push   DWORD PTR [ebp-0xc]
  40b93f:	mov    DWORD PTR [esi+0x14],eax
  40b942:	push   edi
  40b943:	call   0x40baa0
  40b948:	push   0xffffffff
  40b94a:	mov    DWORD PTR [esi+0x1c],eax
  40b94d:	cdq    
  40b94e:	push   0xfffeae80
  40b953:	push   edx
  40b954:	push   eax
  40b955:	call   0x40fd10
  40b95a:	add    edi,eax
  40b95c:	adc    DWORD PTR [ebp-0xc],edx
  40b95f:	cmp    DWORD PTR [ebp-0x4],0x0
  40b963:	mov    edx,0x44c340
  40b968:	jne    0x40b96f
  40b96a:	mov    edx,0x44c374
  40b96f:	mov    eax,DWORD PTR [esi+0x1c]
  40b972:	xor    ecx,ecx
  40b974:	inc    ecx
  40b975:	cmp    DWORD PTR [edx+0x4],eax
  40b978:	jge    0x40b987
  40b97a:	mov    ebx,eax
  40b97c:	inc    ecx
  40b97d:	cmp    DWORD PTR [edx+ecx*4],ebx
  40b980:	jl     0x40b97c
  40b982:	mov    ebx,0x15180
  40b987:	dec    ecx
  40b988:	mov    DWORD PTR [esi+0x10],ecx
  40b98b:	sub    eax,DWORD PTR [edx+ecx*4]
  40b98e:	push   0x0
  40b990:	mov    DWORD PTR [esi+0xc],eax
  40b993:	mov    eax,DWORD PTR [ebp+0xc]
  40b996:	push   ebx
  40b997:	push   DWORD PTR [eax+0x4]
  40b99a:	push   DWORD PTR [eax]
  40b99c:	call   0x40baa0
  40b9a1:	push   0x7
  40b9a3:	add    eax,0x4
  40b9a6:	pop    ecx
  40b9a7:	cdq    
  40b9a8:	idiv   ecx
  40b9aa:	xor    ebx,ebx
  40b9ac:	push   ebx
  40b9ad:	push   0xe10
  40b9b2:	push   DWORD PTR [ebp-0xc]
  40b9b5:	push   edi
  40b9b6:	mov    DWORD PTR [esi+0x18],edx
  40b9b9:	call   0x40baa0
  40b9be:	push   0xffffffff
  40b9c0:	mov    DWORD PTR [esi+0x8],eax
  40b9c3:	cdq    
  40b9c4:	push   0xfffff1f0
  40b9c9:	push   edx
  40b9ca:	push   eax
  40b9cb:	call   0x40fd10
  40b9d0:	push   ebx
  40b9d1:	add    edi,eax
  40b9d3:	adc    DWORD PTR [ebp-0xc],edx
  40b9d6:	push   0x3c
  40b9d8:	push   DWORD PTR [ebp-0xc]
  40b9db:	push   edi
  40b9dc:	call   0x40baa0
  40b9e1:	mov    DWORD PTR [esi+0x4],eax
  40b9e4:	imul   eax,eax,0x3c
  40b9e7:	sub    edi,eax
  40b9e9:	mov    DWORD PTR [esi],edi
  40b9eb:	pop    edi
  40b9ec:	mov    DWORD PTR [esi+0x20],ebx
  40b9ef:	xor    eax,eax
  40b9f1:	pop    ebx
  40b9f2:	pop    esi
  40b9f3:	leave  
  40b9f4:	ret    
  40b9f5:	mov    edi,edi
  40b9f7:	push   ebp
  40b9f8:	mov    ebp,esp
  40b9fa:	mov    eax,DWORD PTR [ebp+0x8]
  40b9fd:	test   eax,eax
  40b9ff:	jne    0x40ba16
  40ba01:	call   0x40769b
  40ba06:	mov    DWORD PTR [eax],0x16
  40ba0c:	call   0x407649
  40ba11:	push   0x16
  40ba13:	pop    eax
  40ba14:	pop    ebp
  40ba15:	ret    
  40ba16:	mov    ecx,DWORD PTR ds:0x44b8bc
  40ba1c:	mov    DWORD PTR [eax],ecx
  40ba1e:	xor    eax,eax
  40ba20:	pop    ebp
  40ba21:	ret    
  40ba22:	mov    edi,edi
  40ba24:	push   ebp
  40ba25:	mov    ebp,esp
  40ba27:	mov    eax,DWORD PTR [ebp+0x8]
  40ba2a:	test   eax,eax
  40ba2c:	jne    0x40ba43
  40ba2e:	call   0x40769b
  40ba33:	mov    DWORD PTR [eax],0x16
  40ba39:	call   0x407649
  40ba3e:	push   0x16
  40ba40:	pop    eax
  40ba41:	pop    ebp
  40ba42:	ret    
  40ba43:	mov    ecx,DWORD PTR ds:0x44b8c0
  40ba49:	mov    DWORD PTR [eax],ecx
  40ba4b:	xor    eax,eax
  40ba4d:	pop    ebp
  40ba4e:	ret    
  40ba4f:	mov    edi,edi
  40ba51:	push   ebp
  40ba52:	mov    ebp,esp
  40ba54:	mov    eax,DWORD PTR [ebp+0x8]
  40ba57:	test   eax,eax
  40ba59:	jne    0x40ba70
  40ba5b:	call   0x40769b
  40ba60:	mov    DWORD PTR [eax],0x16
  40ba66:	call   0x407649
  40ba6b:	push   0x16
  40ba6d:	pop    eax
  40ba6e:	pop    ebp
  40ba6f:	ret    
  40ba70:	mov    ecx,DWORD PTR ds:0x44b8b8
  40ba76:	mov    DWORD PTR [eax],ecx
  40ba78:	xor    eax,eax
  40ba7a:	pop    ebp
  40ba7b:	ret    
  40ba7c:	mov    eax,0x44b8bc
  40ba81:	ret    
  40ba82:	mov    eax,0x44b8c0
  40ba87:	ret    
  40ba88:	mov    eax,0x44b8b8
  40ba8d:	ret    
  40ba8e:	mov    eax,0x44b948
  40ba93:	ret    
  40ba94:	int3   
  40ba95:	int3   
  40ba96:	int3   
  40ba97:	int3   
  40ba98:	int3   
  40ba99:	int3   
  40ba9a:	int3   
  40ba9b:	int3   
  40ba9c:	int3   
  40ba9d:	int3   
  40ba9e:	int3   
  40ba9f:	int3   
  40baa0:	push   edi
  40baa1:	push   esi
  40baa2:	push   ebx
  40baa3:	xor    edi,edi
  40baa5:	mov    eax,DWORD PTR [esp+0x14]
  40baa9:	or     eax,eax
  40baab:	jge    0x40bac1
  40baad:	inc    edi
  40baae:	mov    edx,DWORD PTR [esp+0x10]
  40bab2:	neg    eax
  40bab4:	neg    edx
  40bab6:	sbb    eax,0x0
  40bab9:	mov    DWORD PTR [esp+0x14],eax
  40babd:	mov    DWORD PTR [esp+0x10],edx
  40bac1:	mov    eax,DWORD PTR [esp+0x1c]
  40bac5:	or     eax,eax
  40bac7:	jge    0x40badd
  40bac9:	inc    edi
  40baca:	mov    edx,DWORD PTR [esp+0x18]
  40bace:	neg    eax
  40bad0:	neg    edx
  40bad2:	sbb    eax,0x0
  40bad5:	mov    DWORD PTR [esp+0x1c],eax
  40bad9:	mov    DWORD PTR [esp+0x18],edx
  40badd:	or     eax,eax
  40badf:	jne    0x40baf9
  40bae1:	mov    ecx,DWORD PTR [esp+0x18]
  40bae5:	mov    eax,DWORD PTR [esp+0x14]
  40bae9:	xor    edx,edx
  40baeb:	div    ecx
  40baed:	mov    ebx,eax
  40baef:	mov    eax,DWORD PTR [esp+0x10]
  40baf3:	div    ecx
  40baf5:	mov    edx,ebx
  40baf7:	jmp    0x40bb3a
  40baf9:	mov    ebx,eax
  40bafb:	mov    ecx,DWORD PTR [esp+0x18]
  40baff:	mov    edx,DWORD PTR [esp+0x14]
  40bb03:	mov    eax,DWORD PTR [esp+0x10]
  40bb07:	shr    ebx,1
  40bb09:	rcr    ecx,1
  40bb0b:	shr    edx,1
  40bb0d:	rcr    eax,1
  40bb0f:	or     ebx,ebx
  40bb11:	jne    0x40bb07
  40bb13:	div    ecx
  40bb15:	mov    esi,eax
  40bb17:	mul    DWORD PTR [esp+0x1c]
  40bb1b:	mov    ecx,eax
  40bb1d:	mov    eax,DWORD PTR [esp+0x18]
  40bb21:	mul    esi
  40bb23:	add    edx,ecx
  40bb25:	jb     0x40bb35
  40bb27:	cmp    edx,DWORD PTR [esp+0x14]
  40bb2b:	ja     0x40bb35
  40bb2d:	jb     0x40bb36
  40bb2f:	cmp    eax,DWORD PTR [esp+0x10]
  40bb33:	jbe    0x40bb36
  40bb35:	dec    esi
  40bb36:	xor    edx,edx
  40bb38:	mov    eax,esi
  40bb3a:	dec    edi
  40bb3b:	jne    0x40bb44
  40bb3d:	neg    edx
  40bb3f:	neg    eax
  40bb41:	sbb    edx,0x0
  40bb44:	pop    ebx
  40bb45:	pop    esi
  40bb46:	pop    edi
  40bb47:	ret    0x10
  40bb4a:	int3   
  40bb4b:	int3   
  40bb4c:	int3   
  40bb4d:	int3   
  40bb4e:	int3   
  40bb4f:	int3   
  40bb50:	push   ebx
  40bb51:	push   edi
  40bb52:	xor    edi,edi
  40bb54:	mov    eax,DWORD PTR [esp+0x10]
  40bb58:	or     eax,eax
  40bb5a:	jge    0x40bb70
  40bb5c:	inc    edi
  40bb5d:	mov    edx,DWORD PTR [esp+0xc]
  40bb61:	neg    eax
  40bb63:	neg    edx
  40bb65:	sbb    eax,0x0
  40bb68:	mov    DWORD PTR [esp+0x10],eax
  40bb6c:	mov    DWORD PTR [esp+0xc],edx
  40bb70:	mov    eax,DWORD PTR [esp+0x18]
  40bb74:	or     eax,eax
  40bb76:	jge    0x40bb8b
  40bb78:	mov    edx,DWORD PTR [esp+0x14]
  40bb7c:	neg    eax
  40bb7e:	neg    edx
  40bb80:	sbb    eax,0x0
  40bb83:	mov    DWORD PTR [esp+0x18],eax
  40bb87:	mov    DWORD PTR [esp+0x14],edx
  40bb8b:	or     eax,eax
  40bb8d:	jne    0x40bbaa
  40bb8f:	mov    ecx,DWORD PTR [esp+0x14]
  40bb93:	mov    eax,DWORD PTR [esp+0x10]
  40bb97:	xor    edx,edx
  40bb99:	div    ecx
  40bb9b:	mov    eax,DWORD PTR [esp+0xc]
  40bb9f:	div    ecx
  40bba1:	mov    eax,edx
  40bba3:	xor    edx,edx
  40bba5:	dec    edi
  40bba6:	jns    0x40bbf6
  40bba8:	jmp    0x40bbfd
  40bbaa:	mov    ebx,eax
  40bbac:	mov    ecx,DWORD PTR [esp+0x14]
  40bbb0:	mov    edx,DWORD PTR [esp+0x10]
  40bbb4:	mov    eax,DWORD PTR [esp+0xc]
  40bbb8:	shr    ebx,1
  40bbba:	rcr    ecx,1
  40bbbc:	shr    edx,1
  40bbbe:	rcr    eax,1
  40bbc0:	or     ebx,ebx
  40bbc2:	jne    0x40bbb8
  40bbc4:	div    ecx
  40bbc6:	mov    ecx,eax
  40bbc8:	mul    DWORD PTR [esp+0x18]
  40bbcc:	xchg   ecx,eax
  40bbcd:	mul    DWORD PTR [esp+0x14]
  40bbd1:	add    edx,ecx
  40bbd3:	jb     0x40bbe3
  40bbd5:	cmp    edx,DWORD PTR [esp+0x10]
  40bbd9:	ja     0x40bbe3
  40bbdb:	jb     0x40bbeb
  40bbdd:	cmp    eax,DWORD PTR [esp+0xc]
  40bbe1:	jbe    0x40bbeb
  40bbe3:	sub    eax,DWORD PTR [esp+0x14]
  40bbe7:	sbb    edx,DWORD PTR [esp+0x18]
  40bbeb:	sub    eax,DWORD PTR [esp+0xc]
  40bbef:	sbb    edx,DWORD PTR [esp+0x10]
  40bbf3:	dec    edi
  40bbf4:	jns    0x40bbfd
  40bbf6:	neg    edx
  40bbf8:	neg    eax
  40bbfa:	sbb    edx,0x0
  40bbfd:	pop    edi
  40bbfe:	pop    ebx
  40bbff:	ret    0x10
  40bc02:	mov    edi,edi
  40bc04:	push   esi
  40bc05:	call   0x40c891
  40bc0a:	mov    esi,eax
  40bc0c:	test   esi,esi
  40bc0e:	jne    0x40bc1f
  40bc10:	call   0x40769b
  40bc15:	mov    DWORD PTR [eax],0xc
  40bc1b:	xor    eax,eax
  40bc1d:	pop    esi
  40bc1e:	ret    
  40bc1f:	cmp    DWORD PTR [esi+0x44],0x0
  40bc23:	jne    0x40bc34
  40bc25:	push   0x24
  40bc27:	call   0x406e65
  40bc2c:	pop    ecx
  40bc2d:	mov    DWORD PTR [esi+0x44],eax
  40bc30:	test   eax,eax
  40bc32:	je     0x40bc10
  40bc34:	mov    eax,DWORD PTR [esi+0x44]
  40bc37:	pop    esi
  40bc38:	ret    
  40bc39:	push   0xc
  40bc3b:	push   0x449410
  40bc40:	call   0x4076f0
  40bc45:	push   0xe
  40bc47:	call   0x407f70
  40bc4c:	pop    ecx
  40bc4d:	and    DWORD PTR [ebp-0x4],0x0
  40bc51:	mov    esi,DWORD PTR [ebp+0x8]
  40bc54:	mov    ecx,DWORD PTR [esi+0x4]
  40bc57:	test   ecx,ecx
  40bc59:	je     0x40bc8a
  40bc5b:	mov    eax,ds:0x44e03c
  40bc60:	mov    edx,0x44e038
  40bc65:	mov    DWORD PTR [ebp-0x1c],eax
  40bc68:	test   eax,eax
  40bc6a:	je     0x40bc7d
  40bc6c:	cmp    DWORD PTR [eax],ecx
  40bc6e:	jne    0x40bc9c
  40bc70:	mov    ecx,DWORD PTR [eax+0x4]
  40bc73:	mov    DWORD PTR [edx+0x4],ecx
  40bc76:	push   eax
  40bc77:	call   0x404391
  40bc7c:	pop    ecx
  40bc7d:	push   DWORD PTR [esi+0x4]
  40bc80:	call   0x404391
  40bc85:	pop    ecx
  40bc86:	and    DWORD PTR [esi+0x4],0x0
  40bc8a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40bc91:	call   0x40bca0
  40bc96:	call   0x407735
  40bc9b:	ret    
  40bc9c:	mov    edx,eax
  40bc9e:	jmp    0x40bc65
  40bca0:	push   0xe
  40bca2:	call   0x407e97
  40bca7:	pop    ecx
  40bca8:	ret    
  40bca9:	int3   
  40bcaa:	int3   
  40bcab:	int3   
  40bcac:	int3   
  40bcad:	int3   
  40bcae:	int3   
  40bcaf:	int3   
  40bcb0:	mov    edx,DWORD PTR [esp+0x4]
  40bcb4:	mov    ecx,DWORD PTR [esp+0x8]
  40bcb8:	test   edx,0x3
  40bcbe:	jne    0x40bcfc
  40bcc0:	mov    eax,DWORD PTR [edx]
  40bcc2:	cmp    al,BYTE PTR [ecx]
  40bcc4:	jne    0x40bcf4
  40bcc6:	or     al,al
  40bcc8:	je     0x40bcf0
  40bcca:	cmp    ah,BYTE PTR [ecx+0x1]
  40bccd:	jne    0x40bcf4
  40bccf:	or     ah,ah
  40bcd1:	je     0x40bcf0
  40bcd3:	shr    eax,0x10
  40bcd6:	cmp    al,BYTE PTR [ecx+0x2]
  40bcd9:	jne    0x40bcf4
  40bcdb:	or     al,al
  40bcdd:	je     0x40bcf0
  40bcdf:	cmp    ah,BYTE PTR [ecx+0x3]
  40bce2:	jne    0x40bcf4
  40bce4:	add    ecx,0x4
  40bce7:	add    edx,0x4
  40bcea:	or     ah,ah
  40bcec:	jne    0x40bcc0
  40bcee:	mov    edi,edi
  40bcf0:	xor    eax,eax
  40bcf2:	ret    
  40bcf3:	nop
  40bcf4:	sbb    eax,eax
  40bcf6:	shl    eax,1
  40bcf8:	add    eax,0x1
  40bcfb:	ret    
  40bcfc:	test   edx,0x1
  40bd02:	je     0x40bd1c
  40bd04:	mov    al,BYTE PTR [edx]
  40bd06:	add    edx,0x1
  40bd09:	cmp    al,BYTE PTR [ecx]
  40bd0b:	jne    0x40bcf4
  40bd0d:	add    ecx,0x1
  40bd10:	or     al,al
  40bd12:	je     0x40bcf0
  40bd14:	test   edx,0x2
  40bd1a:	je     0x40bcc0
  40bd1c:	mov    ax,WORD PTR [edx]
  40bd1f:	add    edx,0x2
  40bd22:	cmp    al,BYTE PTR [ecx]
  40bd24:	jne    0x40bcf4
  40bd26:	or     al,al
  40bd28:	je     0x40bcf0
  40bd2a:	cmp    ah,BYTE PTR [ecx+0x1]
  40bd2d:	jne    0x40bcf4
  40bd2f:	or     ah,ah
  40bd31:	je     0x40bcf0
  40bd33:	add    ecx,0x2
  40bd36:	jmp    0x40bcc0
  40bd38:	mov    edi,edi
  40bd3a:	push   ebp
  40bd3b:	mov    ebp,esp
  40bd3d:	push   esi
  40bd3e:	mov    esi,DWORD PTR [ebp+0x8]
  40bd41:	push   edi
  40bd42:	push   esi
  40bd43:	call   0x40e661
  40bd48:	pop    ecx
  40bd49:	cmp    eax,0xffffffff
  40bd4c:	je     0x40bd9e
  40bd4e:	mov    eax,ds:0x4507a0
  40bd53:	cmp    esi,0x1
  40bd56:	jne    0x40bd61
  40bd58:	test   BYTE PTR [eax+0x84],0x1
  40bd5f:	jne    0x40bd6c
  40bd61:	cmp    esi,0x2
  40bd64:	jne    0x40bd82
  40bd66:	test   BYTE PTR [eax+0x44],0x1
  40bd6a:	je     0x40bd82
  40bd6c:	push   0x2
  40bd6e:	call   0x40e661
  40bd73:	push   0x1
  40bd75:	mov    edi,eax
  40bd77:	call   0x40e661
  40bd7c:	pop    ecx
  40bd7d:	pop    ecx
  40bd7e:	cmp    eax,edi
  40bd80:	je     0x40bd9e
  40bd82:	push   esi
  40bd83:	call   0x40e661
  40bd88:	pop    ecx
  40bd89:	push   eax
  40bd8a:	call   DWORD PTR ds:0x4430cc
  40bd90:	test   eax,eax
  40bd92:	jne    0x40bd9e
  40bd94:	call   DWORD PTR ds:0x443120
  40bd9a:	mov    edi,eax
  40bd9c:	jmp    0x40bda0
  40bd9e:	xor    edi,edi
  40bda0:	push   esi
  40bda1:	call   0x40e5db
  40bda6:	mov    eax,esi
  40bda8:	sar    eax,0x5
  40bdab:	mov    eax,DWORD PTR [eax*4+0x4507a0]
  40bdb2:	and    esi,0x1f
  40bdb5:	shl    esi,0x6
  40bdb8:	pop    ecx
  40bdb9:	mov    BYTE PTR [eax+esi*1+0x4],0x0
  40bdbe:	test   edi,edi
  40bdc0:	je     0x40bdce
  40bdc2:	push   edi
  40bdc3:	call   0x4076c1
  40bdc8:	pop    ecx
  40bdc9:	or     eax,0xffffffff
  40bdcc:	jmp    0x40bdd0
  40bdce:	xor    eax,eax
  40bdd0:	pop    edi
  40bdd1:	pop    esi
  40bdd2:	pop    ebp
  40bdd3:	ret    
  40bdd4:	push   0x10
  40bdd6:	push   0x449430
  40bddb:	call   0x4076f0
  40bde0:	mov    ebx,DWORD PTR [ebp+0x8]
  40bde3:	cmp    ebx,0xfffffffe
  40bde6:	jne    0x40be03
  40bde8:	call   0x4076ae
  40bded:	and    DWORD PTR [eax],0x0
  40bdf0:	call   0x40769b
  40bdf5:	mov    DWORD PTR [eax],0x9
  40bdfb:	or     eax,0xffffffff
  40bdfe:	jmp    0x40be87
  40be03:	test   ebx,ebx
  40be05:	js     0x40be0f
  40be07:	cmp    ebx,DWORD PTR ds:0x450780
  40be0d:	jb     0x40be29
  40be0f:	call   0x4076ae
  40be14:	and    DWORD PTR [eax],0x0
  40be17:	call   0x40769b
  40be1c:	mov    DWORD PTR [eax],0x9
  40be22:	call   0x407649
  40be27:	jmp    0x40bdfb
  40be29:	mov    eax,ebx
  40be2b:	sar    eax,0x5
  40be2e:	lea    edi,[eax*4+0x4507a0]
  40be35:	mov    esi,ebx
  40be37:	and    esi,0x1f
  40be3a:	shl    esi,0x6
  40be3d:	mov    eax,DWORD PTR [edi]
  40be3f:	movsx  eax,BYTE PTR [eax+esi*1+0x4]
  40be44:	and    eax,0x1
  40be47:	je     0x40be0f
  40be49:	push   ebx
  40be4a:	call   0x40e6ca
  40be4f:	pop    ecx
  40be50:	and    DWORD PTR [ebp-0x4],0x0
  40be54:	mov    eax,DWORD PTR [edi]
  40be56:	test   BYTE PTR [eax+esi*1+0x4],0x1
  40be5b:	je     0x40be69
  40be5d:	push   ebx
  40be5e:	call   0x40bd38
  40be63:	pop    ecx
  40be64:	mov    DWORD PTR [ebp-0x1c],eax
  40be67:	jmp    0x40be78
  40be69:	call   0x40769b
  40be6e:	mov    DWORD PTR [eax],0x9
  40be74:	or     DWORD PTR [ebp-0x1c],0xffffffff
  40be78:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40be7f:	call   0x40be90
  40be84:	mov    eax,DWORD PTR [ebp-0x1c]
  40be87:	call   0x407735
  40be8c:	ret    
  40be8d:	mov    ebx,DWORD PTR [ebp+0x8]
  40be90:	push   ebx
  40be91:	call   0x40e769
  40be96:	pop    ecx
  40be97:	ret    
  40be98:	int3   
  40be99:	int3   
  40be9a:	int3   
  40be9b:	int3   
  40be9c:	int3   
  40be9d:	int3   
  40be9e:	int3   
  40be9f:	int3   
  40bea0:	push   ebx
  40bea1:	push   esi
  40bea2:	mov    eax,DWORD PTR [esp+0x18]
  40bea6:	or     eax,eax
  40bea8:	jne    0x40bec2
  40beaa:	mov    ecx,DWORD PTR [esp+0x14]
  40beae:	mov    eax,DWORD PTR [esp+0x10]
  40beb2:	xor    edx,edx
  40beb4:	div    ecx
  40beb6:	mov    ebx,eax
  40beb8:	mov    eax,DWORD PTR [esp+0xc]
  40bebc:	div    ecx
  40bebe:	mov    edx,ebx
  40bec0:	jmp    0x40bf03
  40bec2:	mov    ecx,eax
  40bec4:	mov    ebx,DWORD PTR [esp+0x14]
  40bec8:	mov    edx,DWORD PTR [esp+0x10]
  40becc:	mov    eax,DWORD PTR [esp+0xc]
  40bed0:	shr    ecx,1
  40bed2:	rcr    ebx,1
  40bed4:	shr    edx,1
  40bed6:	rcr    eax,1
  40bed8:	or     ecx,ecx
  40beda:	jne    0x40bed0
  40bedc:	div    ebx
  40bede:	mov    esi,eax
  40bee0:	mul    DWORD PTR [esp+0x18]
  40bee4:	mov    ecx,eax
  40bee6:	mov    eax,DWORD PTR [esp+0x14]
  40beea:	mul    esi
  40beec:	add    edx,ecx
  40beee:	jb     0x40befe
  40bef0:	cmp    edx,DWORD PTR [esp+0x10]
  40bef4:	ja     0x40befe
  40bef6:	jb     0x40beff
  40bef8:	cmp    eax,DWORD PTR [esp+0xc]
  40befc:	jbe    0x40beff
  40befe:	dec    esi
  40beff:	xor    edx,edx
  40bf01:	mov    eax,esi
  40bf03:	pop    esi
  40bf04:	pop    ebx
  40bf05:	ret    0x10
  40bf08:	mov    edi,edi
  40bf0a:	push   ebp
  40bf0b:	mov    ebp,esp
  40bf0d:	mov    eax,DWORD PTR [ebp+0x8]
  40bf10:	mov    ds:0x44e040,eax
  40bf15:	pop    ebp
  40bf16:	ret    
  40bf17:	mov    edi,edi
  40bf19:	push   ebp
  40bf1a:	mov    ebp,esp
  40bf1c:	push   DWORD PTR ds:0x44e040
  40bf22:	call   DWORD PTR ds:0x4431c8
  40bf28:	test   eax,eax
  40bf2a:	je     0x40bf3b
  40bf2c:	push   DWORD PTR [ebp+0x8]
  40bf2f:	call   eax
  40bf31:	pop    ecx
  40bf32:	test   eax,eax
  40bf34:	je     0x40bf3b
  40bf36:	xor    eax,eax
  40bf38:	inc    eax
  40bf39:	pop    ebp
  40bf3a:	ret    
  40bf3b:	xor    eax,eax
  40bf3d:	pop    ebp
  40bf3e:	ret    
  40bf3f:	mov    edi,edi
  40bf41:	push   ebp
  40bf42:	mov    ebp,esp
  40bf44:	mov    eax,DWORD PTR [ebp+0x8]
  40bf47:	mov    eax,DWORD PTR [eax]
  40bf49:	cmp    DWORD PTR [eax],0xe06d7363
  40bf4f:	jne    0x40bf7b
  40bf51:	cmp    DWORD PTR [eax+0x10],0x3
  40bf55:	jne    0x40bf7b
  40bf57:	mov    eax,DWORD PTR [eax+0x14]
  40bf5a:	cmp    eax,0x19930520
  40bf5f:	je     0x40bf76
  40bf61:	cmp    eax,0x19930521
  40bf66:	je     0x40bf76
  40bf68:	cmp    eax,0x19930522
  40bf6d:	je     0x40bf76
  40bf6f:	cmp    eax,0x1994000
  40bf74:	jne    0x40bf7b
  40bf76:	call   0x408a87
  40bf7b:	xor    eax,eax
  40bf7d:	pop    ebp
  40bf7e:	ret    0x4
  40bf81:	push   0x40bf3f
  40bf86:	call   DWORD PTR ds:0x44317c
  40bf8c:	xor    eax,eax
  40bf8e:	ret    
  40bf8f:	mov    edi,edi
  40bf91:	push   ebp
  40bf92:	mov    ebp,esp
  40bf94:	xor    eax,eax
  40bf96:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf99:	cmp    ecx,DWORD PTR [eax*8+0x444800]
  40bfa0:	je     0x40bfac
  40bfa2:	inc    eax
  40bfa3:	cmp    eax,0x16
  40bfa6:	jb     0x40bf96
  40bfa8:	xor    eax,eax
  40bfaa:	pop    ebp
  40bfab:	ret    
  40bfac:	mov    eax,DWORD PTR [eax*8+0x444804]
  40bfb3:	pop    ebp
  40bfb4:	ret    
  40bfb5:	mov    edi,edi
  40bfb7:	push   ebp
  40bfb8:	mov    ebp,esp
  40bfba:	sub    esp,0x1fc
  40bfc0:	mov    eax,ds:0x44b470
  40bfc5:	xor    eax,ebp
  40bfc7:	mov    DWORD PTR [ebp-0x4],eax
  40bfca:	push   ebx
  40bfcb:	push   esi
  40bfcc:	mov    esi,DWORD PTR [ebp+0x8]
  40bfcf:	push   edi
  40bfd0:	push   esi
  40bfd1:	call   0x40bf8f
  40bfd6:	mov    edi,eax
  40bfd8:	xor    ebx,ebx
  40bfda:	pop    ecx
  40bfdb:	mov    DWORD PTR [ebp-0x1fc],edi
  40bfe1:	cmp    edi,ebx
  40bfe3:	je     0x40c155
  40bfe9:	push   0x3
  40bfeb:	call   0x410070
  40bff0:	pop    ecx
  40bff1:	cmp    eax,0x1
  40bff4:	je     0x40c101
  40bffa:	push   0x3
  40bffc:	call   0x410070
  40c001:	pop    ecx
  40c002:	test   eax,eax
  40c004:	jne    0x40c013
  40c006:	cmp    DWORD PTR ds:0x44b438,0x1
  40c00d:	je     0x40c101
  40c013:	cmp    esi,0xfc
  40c019:	je     0x40c155
  40c01f:	push   0x44493c
  40c024:	push   0x314
  40c029:	mov    edi,0x44e048
  40c02e:	push   edi
  40c02f:	call   0x41000d
  40c034:	add    esp,0xc
  40c037:	test   eax,eax
  40c039:	jne    0x40c0f7
  40c03f:	push   0x104
  40c044:	mov    esi,0x44e07a
  40c049:	push   esi
  40c04a:	push   ebx
  40c04b:	mov    ds:0x44e282,ax
  40c051:	call   DWORD PTR ds:0x4430c8
  40c057:	mov    ebx,0x2fb
  40c05c:	test   eax,eax
  40c05e:	jne    0x40c07f
  40c060:	push   0x44490c
  40c065:	push   ebx
  40c066:	push   esi
  40c067:	call   0x41000d
  40c06c:	add    esp,0xc
  40c06f:	test   eax,eax
  40c071:	je     0x40c07f
  40c073:	xor    eax,eax
  40c075:	push   eax
  40c076:	push   eax
  40c077:	push   eax
  40c078:	push   eax
  40c079:	push   eax
  40c07a:	call   0x4075f7
  40c07f:	push   esi
  40c080:	call   0x40fff2
  40c085:	inc    eax
  40c086:	pop    ecx
  40c087:	cmp    eax,0x3c
  40c08a:	jbe    0x40c0b6
  40c08c:	push   esi
  40c08d:	call   0x40fff2
  40c092:	lea    eax,[eax*2+0x44e004]
  40c099:	mov    ecx,eax
  40c09b:	sub    ecx,esi
  40c09d:	push   0x3
  40c09f:	sar    ecx,1
  40c0a1:	push   0x444904
  40c0a6:	sub    ebx,ecx
  40c0a8:	push   ebx
  40c0a9:	push   eax
  40c0aa:	call   0x40ff25
  40c0af:	add    esp,0x14
  40c0b2:	test   eax,eax
  40c0b4:	jne    0x40c073
  40c0b6:	push   0x4448fc
  40c0bb:	mov    esi,0x314
  40c0c0:	push   esi
  40c0c1:	push   edi
  40c0c2:	call   0x40feb0
  40c0c7:	add    esp,0xc
  40c0ca:	test   eax,eax
  40c0cc:	jne    0x40c073
  40c0ce:	push   DWORD PTR [ebp-0x1fc]
  40c0d4:	push   esi
  40c0d5:	push   edi
  40c0d6:	call   0x40feb0
  40c0db:	add    esp,0xc
  40c0de:	test   eax,eax
  40c0e0:	jne    0x40c073
  40c0e2:	push   0x12010
  40c0e7:	push   0x4448b0
  40c0ec:	push   edi
  40c0ed:	call   0x40fd44
  40c0f2:	add    esp,0xc
  40c0f5:	jmp    0x40c155
  40c0f7:	push   ebx
  40c0f8:	push   ebx
  40c0f9:	push   ebx
  40c0fa:	push   ebx
  40c0fb:	push   ebx
  40c0fc:	jmp    0x40c07a
  40c101:	push   0xfffffff4
  40c103:	call   DWORD PTR ds:0x443170
  40c109:	mov    esi,eax
  40c10b:	cmp    esi,ebx
  40c10d:	je     0x40c155
  40c10f:	cmp    esi,0xffffffff
  40c112:	je     0x40c155
  40c114:	xor    eax,eax
  40c116:	mov    cl,BYTE PTR [edi+eax*2]
  40c119:	mov    BYTE PTR [ebp+eax*1-0x1f8],cl
  40c120:	cmp    WORD PTR [edi+eax*2],bx
  40c124:	je     0x40c12e
  40c126:	inc    eax
  40c127:	cmp    eax,0x1f4
  40c12c:	jb     0x40c116
  40c12e:	push   ebx
  40c12f:	lea    eax,[ebp-0x1fc]
  40c135:	push   eax
  40c136:	lea    eax,[ebp-0x1f8]
  40c13c:	push   eax
  40c13d:	mov    BYTE PTR [ebp-0x5],bl
  40c140:	call   0x405450
  40c145:	pop    ecx
  40c146:	push   eax
  40c147:	lea    eax,[ebp-0x1f8]
  40c14d:	push   eax
  40c14e:	push   esi
  40c14f:	call   DWORD PTR ds:0x443144
  40c155:	mov    ecx,DWORD PTR [ebp-0x4]
  40c158:	pop    edi
  40c159:	pop    esi
  40c15a:	xor    ecx,ebp
  40c15c:	pop    ebx
  40c15d:	call   0x403edd
  40c162:	leave  
  40c163:	ret    
  40c164:	push   0x3
  40c166:	call   0x410070
  40c16b:	pop    ecx
  40c16c:	cmp    eax,0x1
  40c16f:	je     0x40c186
  40c171:	push   0x3
  40c173:	call   0x410070
  40c178:	pop    ecx
  40c179:	test   eax,eax
  40c17b:	jne    0x40c19c
  40c17d:	cmp    DWORD PTR ds:0x44b438,0x1
  40c184:	jne    0x40c19c
  40c186:	push   0xfc
  40c18b:	call   0x40bfb5
  40c190:	push   0xff
  40c195:	call   0x40bfb5
  40c19a:	pop    ecx
  40c19b:	pop    ecx
  40c19c:	ret    
  40c19d:	mov    edi,edi
  40c19f:	push   ebp
  40c1a0:	mov    ebp,esp
  40c1a2:	push   esi
  40c1a3:	call   0x40c891
  40c1a8:	mov    esi,eax
  40c1aa:	test   esi,esi
  40c1ac:	je     0x40c2e4
  40c1b2:	mov    ecx,DWORD PTR [esi+0x5c]
  40c1b5:	mov    edx,DWORD PTR [ebp+0x8]
  40c1b8:	mov    eax,ecx
  40c1ba:	push   edi
  40c1bb:	cmp    DWORD PTR [eax],edx
  40c1bd:	je     0x40c1cc
  40c1bf:	add    eax,0xc
  40c1c2:	lea    edi,[ecx+0x90]
  40c1c8:	cmp    eax,edi
  40c1ca:	jb     0x40c1bb
  40c1cc:	add    ecx,0x90
  40c1d2:	cmp    eax,ecx
  40c1d4:	jae    0x40c1da
  40c1d6:	cmp    DWORD PTR [eax],edx
  40c1d8:	je     0x40c1dc
  40c1da:	xor    eax,eax
  40c1dc:	test   eax,eax
  40c1de:	je     0x40c1e7
  40c1e0:	mov    edx,DWORD PTR [eax+0x8]
  40c1e3:	test   edx,edx
  40c1e5:	jne    0x40c1ee
  40c1e7:	xor    eax,eax
  40c1e9:	jmp    0x40c2e3
  40c1ee:	cmp    edx,0x5
  40c1f1:	jne    0x40c1ff
  40c1f3:	and    DWORD PTR [eax+0x8],0x0
  40c1f7:	xor    eax,eax
  40c1f9:	inc    eax
  40c1fa:	jmp    0x40c2e3
  40c1ff:	cmp    edx,0x1
  40c202:	je     0x40c2e0
  40c208:	mov    ecx,DWORD PTR [ebp+0xc]
  40c20b:	push   ebx
  40c20c:	mov    ebx,DWORD PTR [esi+0x60]
  40c20f:	mov    DWORD PTR [esi+0x60],ecx
  40c212:	mov    ecx,DWORD PTR [eax+0x4]
  40c215:	cmp    ecx,0x8
  40c218:	jne    0x40c2d4
  40c21e:	push   0x24
  40c220:	pop    ecx
  40c221:	mov    edi,DWORD PTR [esi+0x5c]
  40c224:	and    DWORD PTR [ecx+edi*1+0x8],0x0
  40c229:	add    ecx,0xc
  40c22c:	cmp    ecx,0x90
  40c232:	jl     0x40c221
  40c234:	mov    eax,DWORD PTR [eax]
  40c236:	mov    edi,DWORD PTR [esi+0x64]
  40c239:	cmp    eax,0xc000008e
  40c23e:	jne    0x40c249
  40c240:	mov    DWORD PTR [esi+0x64],0x83
  40c247:	jmp    0x40c2c7
  40c249:	cmp    eax,0xc0000090
  40c24e:	jne    0x40c259
  40c250:	mov    DWORD PTR [esi+0x64],0x81
  40c257:	jmp    0x40c2c7
  40c259:	cmp    eax,0xc0000091
  40c25e:	jne    0x40c269
  40c260:	mov    DWORD PTR [esi+0x64],0x84
  40c267:	jmp    0x40c2c7
  40c269:	cmp    eax,0xc0000093
  40c26e:	jne    0x40c279
  40c270:	mov    DWORD PTR [esi+0x64],0x85
  40c277:	jmp    0x40c2c7
  40c279:	cmp    eax,0xc000008d
  40c27e:	jne    0x40c289
  40c280:	mov    DWORD PTR [esi+0x64],0x82
  40c287:	jmp    0x40c2c7
  40c289:	cmp    eax,0xc000008f
  40c28e:	jne    0x40c299
  40c290:	mov    DWORD PTR [esi+0x64],0x86
  40c297:	jmp    0x40c2c7
  40c299:	cmp    eax,0xc0000092
  40c29e:	jne    0x40c2a9
  40c2a0:	mov    DWORD PTR [esi+0x64],0x8a
  40c2a7:	jmp    0x40c2c7
  40c2a9:	cmp    eax,0xc00002b5
  40c2ae:	jne    0x40c2b9
  40c2b0:	mov    DWORD PTR [esi+0x64],0x8d
  40c2b7:	jmp    0x40c2c7
  40c2b9:	cmp    eax,0xc00002b4
  40c2be:	jne    0x40c2c7
  40c2c0:	mov    DWORD PTR [esi+0x64],0x8e
  40c2c7:	push   DWORD PTR [esi+0x64]
  40c2ca:	push   0x8
  40c2cc:	call   edx
  40c2ce:	pop    ecx
  40c2cf:	mov    DWORD PTR [esi+0x64],edi
  40c2d2:	jmp    0x40c2db
  40c2d4:	and    DWORD PTR [eax+0x8],0x0
  40c2d8:	push   ecx
  40c2d9:	call   edx
  40c2db:	pop    ecx
  40c2dc:	mov    DWORD PTR [esi+0x60],ebx
  40c2df:	pop    ebx
  40c2e0:	or     eax,0xffffffff
  40c2e3:	pop    edi
  40c2e4:	pop    esi
  40c2e5:	pop    ebp
  40c2e6:	ret    
  40c2e7:	mov    edi,edi
  40c2e9:	push   esi
  40c2ea:	push   edi
  40c2eb:	xor    edi,edi
  40c2ed:	cmp    DWORD PTR ds:0x450774,edi
  40c2f3:	jne    0x40c2fa
  40c2f5:	call   0x40dc6a
  40c2fa:	mov    esi,DWORD PTR ds:0x4508a0
  40c300:	test   esi,esi
  40c302:	jne    0x40c309
  40c304:	mov    esi,0x44345a
  40c309:	mov    al,BYTE PTR [esi]
  40c30b:	cmp    al,0x20
  40c30d:	ja     0x40c317
  40c30f:	test   al,al
  40c311:	je     0x40c341
  40c313:	test   edi,edi
  40c315:	je     0x40c33b
  40c317:	cmp    al,0x22
  40c319:	jne    0x40c324
  40c31b:	xor    ecx,ecx
  40c31d:	test   edi,edi
  40c31f:	sete   cl
  40c322:	mov    edi,ecx
  40c324:	movzx  eax,al
  40c327:	push   eax
  40c328:	call   0x410102
  40c32d:	pop    ecx
  40c32e:	test   eax,eax
  40c330:	je     0x40c333
  40c332:	inc    esi
  40c333:	inc    esi
  40c334:	jmp    0x40c309
  40c336:	cmp    al,0x20
  40c338:	ja     0x40c341
  40c33a:	inc    esi
  40c33b:	mov    al,BYTE PTR [esi]
  40c33d:	test   al,al
  40c33f:	jne    0x40c336
  40c341:	pop    edi
  40c342:	mov    eax,esi
  40c344:	pop    esi
  40c345:	ret    
  40c346:	cmp    DWORD PTR ds:0x450774,0x0
  40c34d:	jne    0x40c354
  40c34f:	call   0x40dc6a
  40c354:	push   esi
  40c355:	mov    esi,DWORD PTR ds:0x44daac
  40c35b:	push   edi
  40c35c:	xor    edi,edi
  40c35e:	test   esi,esi
  40c360:	jne    0x40c37a
  40c362:	or     eax,0xffffffff
  40c365:	jmp    0x40c3fb
  40c36a:	cmp    al,0x3d
  40c36c:	je     0x40c36f
  40c36e:	inc    edi
  40c36f:	push   esi
  40c370:	call   0x405450
  40c375:	pop    ecx
  40c376:	lea    esi,[esi+eax*1+0x1]
  40c37a:	mov    al,BYTE PTR [esi]
  40c37c:	test   al,al
  40c37e:	jne    0x40c36a
  40c380:	push   0x4
  40c382:	inc    edi
  40c383:	push   edi
  40c384:	call   0x406eaa
  40c389:	mov    edi,eax
  40c38b:	pop    ecx
  40c38c:	pop    ecx
  40c38d:	mov    DWORD PTR ds:0x44ddfc,edi
  40c393:	test   edi,edi
  40c395:	je     0x40c362
  40c397:	mov    esi,DWORD PTR ds:0x44daac
  40c39d:	push   ebx
  40c39e:	jmp    0x40c3d3
  40c3a0:	push   esi
  40c3a1:	call   0x405450
  40c3a6:	cmp    BYTE PTR [esi],0x3d
  40c3a9:	pop    ecx
  40c3aa:	lea    ebx,[eax+0x1]
  40c3ad:	je     0x40c3d1
  40c3af:	push   0x1
  40c3b1:	push   ebx
  40c3b2:	call   0x406eaa
  40c3b7:	pop    ecx
  40c3b8:	pop    ecx
  40c3b9:	mov    DWORD PTR [edi],eax
  40c3bb:	test   eax,eax
  40c3bd:	je     0x40c3fe
  40c3bf:	push   esi
  40c3c0:	push   ebx
  40c3c1:	push   eax
  40c3c2:	call   0x4078df
  40c3c7:	add    esp,0xc
  40c3ca:	test   eax,eax
  40c3cc:	jne    0x40c415
  40c3ce:	add    edi,0x4
  40c3d1:	add    esi,ebx
  40c3d3:	cmp    BYTE PTR [esi],0x0
  40c3d6:	jne    0x40c3a0
  40c3d8:	push   DWORD PTR ds:0x44daac
  40c3de:	call   0x404391
  40c3e3:	and    DWORD PTR ds:0x44daac,0x0
  40c3ea:	and    DWORD PTR [edi],0x0
  40c3ed:	mov    DWORD PTR ds:0x450768,0x1
  40c3f7:	xor    eax,eax
  40c3f9:	pop    ecx
  40c3fa:	pop    ebx
  40c3fb:	pop    edi
  40c3fc:	pop    esi
  40c3fd:	ret    
  40c3fe:	push   DWORD PTR ds:0x44ddfc
  40c404:	call   0x404391
  40c409:	and    DWORD PTR ds:0x44ddfc,0x0
  40c410:	or     eax,0xffffffff
  40c413:	jmp    0x40c3f9
  40c415:	xor    eax,eax
  40c417:	push   eax
  40c418:	push   eax
  40c419:	push   eax
  40c41a:	push   eax
  40c41b:	push   eax
  40c41c:	call   0x4075f7
  40c421:	int3   
  40c422:	mov    edi,edi
  40c424:	push   ebp
  40c425:	mov    ebp,esp
  40c427:	push   ecx
  40c428:	mov    ecx,DWORD PTR [ebp+0x10]
  40c42b:	push   ebx
  40c42c:	xor    eax,eax
  40c42e:	push   esi
  40c42f:	mov    DWORD PTR [edi],eax
  40c431:	mov    esi,edx
  40c433:	mov    edx,DWORD PTR [ebp+0xc]
  40c436:	mov    DWORD PTR [ecx],0x1
  40c43c:	cmp    DWORD PTR [ebp+0x8],eax
  40c43f:	je     0x40c44a
  40c441:	mov    ebx,DWORD PTR [ebp+0x8]
  40c444:	add    DWORD PTR [ebp+0x8],0x4
  40c448:	mov    DWORD PTR [ebx],edx
  40c44a:	mov    DWORD PTR [ebp-0x4],eax
  40c44d:	cmp    BYTE PTR [esi],0x22
  40c450:	jne    0x40c462
  40c452:	xor    eax,eax
  40c454:	cmp    DWORD PTR [ebp-0x4],eax
  40c457:	mov    bl,0x22
  40c459:	sete   al
  40c45c:	inc    esi
  40c45d:	mov    DWORD PTR [ebp-0x4],eax
  40c460:	jmp    0x40c49e
  40c462:	inc    DWORD PTR [edi]
  40c464:	test   edx,edx
  40c466:	je     0x40c470
  40c468:	mov    al,BYTE PTR [esi]
  40c46a:	mov    BYTE PTR [edx],al
  40c46c:	inc    edx
  40c46d:	mov    DWORD PTR [ebp+0xc],edx
  40c470:	mov    bl,BYTE PTR [esi]
  40c472:	movzx  eax,bl
  40c475:	push   eax
  40c476:	inc    esi
  40c477:	call   0x410102
  40c47c:	pop    ecx
  40c47d:	test   eax,eax
  40c47f:	je     0x40c494
  40c481:	inc    DWORD PTR [edi]
  40c483:	cmp    DWORD PTR [ebp+0xc],0x0
  40c487:	je     0x40c493
  40c489:	mov    ecx,DWORD PTR [ebp+0xc]
  40c48c:	mov    al,BYTE PTR [esi]
  40c48e:	inc    DWORD PTR [ebp+0xc]
  40c491:	mov    BYTE PTR [ecx],al
  40c493:	inc    esi
  40c494:	mov    edx,DWORD PTR [ebp+0xc]
  40c497:	mov    ecx,DWORD PTR [ebp+0x10]
  40c49a:	test   bl,bl
  40c49c:	je     0x40c4d0
  40c49e:	cmp    DWORD PTR [ebp-0x4],0x0
  40c4a2:	jne    0x40c44d
  40c4a4:	cmp    bl,0x20
  40c4a7:	je     0x40c4ae
  40c4a9:	cmp    bl,0x9
  40c4ac:	jne    0x40c44d
  40c4ae:	test   edx,edx
  40c4b0:	je     0x40c4b6
  40c4b2:	mov    BYTE PTR [edx-0x1],0x0
  40c4b6:	and    DWORD PTR [ebp-0x4],0x0
  40c4ba:	cmp    BYTE PTR [esi],0x0
  40c4bd:	je     0x40c5ac
  40c4c3:	mov    al,BYTE PTR [esi]
  40c4c5:	cmp    al,0x20
  40c4c7:	je     0x40c4cd
  40c4c9:	cmp    al,0x9
  40c4cb:	jne    0x40c4d3
  40c4cd:	inc    esi
  40c4ce:	jmp    0x40c4c3
  40c4d0:	dec    esi
  40c4d1:	jmp    0x40c4b6
  40c4d3:	cmp    BYTE PTR [esi],0x0
  40c4d6:	je     0x40c5ac
  40c4dc:	cmp    DWORD PTR [ebp+0x8],0x0
  40c4e0:	je     0x40c4eb
  40c4e2:	mov    eax,DWORD PTR [ebp+0x8]
  40c4e5:	add    DWORD PTR [ebp+0x8],0x4
  40c4e9:	mov    DWORD PTR [eax],edx
  40c4eb:	inc    DWORD PTR [ecx]
  40c4ed:	xor    ebx,ebx
  40c4ef:	inc    ebx
  40c4f0:	xor    ecx,ecx
  40c4f2:	jmp    0x40c4f6
  40c4f4:	inc    esi
  40c4f5:	inc    ecx
  40c4f6:	cmp    BYTE PTR [esi],0x5c
  40c4f9:	je     0x40c4f4
  40c4fb:	cmp    BYTE PTR [esi],0x22
  40c4fe:	jne    0x40c526
  40c500:	test   cl,0x1
  40c503:	jne    0x40c524
  40c505:	cmp    DWORD PTR [ebp-0x4],0x0
  40c509:	je     0x40c517
  40c50b:	lea    eax,[esi+0x1]
  40c50e:	cmp    BYTE PTR [eax],0x22
  40c511:	jne    0x40c517
  40c513:	mov    esi,eax
  40c515:	jmp    0x40c524
  40c517:	xor    eax,eax
  40c519:	xor    ebx,ebx
  40c51b:	cmp    DWORD PTR [ebp-0x4],eax
  40c51e:	sete   al
  40c521:	mov    DWORD PTR [ebp-0x4],eax
  40c524:	shr    ecx,1
  40c526:	test   ecx,ecx
  40c528:	je     0x40c53c
  40c52a:	dec    ecx
  40c52b:	test   edx,edx
  40c52d:	je     0x40c533
  40c52f:	mov    BYTE PTR [edx],0x5c
  40c532:	inc    edx
  40c533:	inc    DWORD PTR [edi]
  40c535:	test   ecx,ecx
  40c537:	jne    0x40c52a
  40c539:	mov    DWORD PTR [ebp+0xc],edx
  40c53c:	mov    al,BYTE PTR [esi]
  40c53e:	test   al,al
  40c540:	je     0x40c597
  40c542:	cmp    DWORD PTR [ebp-0x4],0x0
  40c546:	jne    0x40c550
  40c548:	cmp    al,0x20
  40c54a:	je     0x40c597
  40c54c:	cmp    al,0x9
  40c54e:	je     0x40c597
  40c550:	test   ebx,ebx
  40c552:	je     0x40c591
  40c554:	movsx  eax,al
  40c557:	push   eax
  40c558:	test   edx,edx
  40c55a:	je     0x40c57f
  40c55c:	call   0x410102
  40c561:	pop    ecx
  40c562:	test   eax,eax
  40c564:	je     0x40c573
  40c566:	mov    al,BYTE PTR [esi]
  40c568:	mov    ecx,DWORD PTR [ebp+0xc]
  40c56b:	inc    DWORD PTR [ebp+0xc]
  40c56e:	mov    BYTE PTR [ecx],al
  40c570:	inc    esi
  40c571:	inc    DWORD PTR [edi]
  40c573:	mov    ecx,DWORD PTR [ebp+0xc]
  40c576:	mov    al,BYTE PTR [esi]
  40c578:	inc    DWORD PTR [ebp+0xc]
  40c57b:	mov    BYTE PTR [ecx],al
  40c57d:	jmp    0x40c58c
  40c57f:	call   0x410102
  40c584:	pop    ecx
  40c585:	test   eax,eax
  40c587:	je     0x40c58c
  40c589:	inc    esi
  40c58a:	inc    DWORD PTR [edi]
  40c58c:	inc    DWORD PTR [edi]
  40c58e:	mov    edx,DWORD PTR [ebp+0xc]
  40c591:	inc    esi
  40c592:	jmp    0x40c4ed
  40c597:	test   edx,edx
  40c599:	je     0x40c5a2
  40c59b:	mov    BYTE PTR [edx],0x0
  40c59e:	inc    edx
  40c59f:	mov    DWORD PTR [ebp+0xc],edx
  40c5a2:	inc    DWORD PTR [edi]
  40c5a4:	mov    ecx,DWORD PTR [ebp+0x10]
  40c5a7:	jmp    0x40c4ba
  40c5ac:	mov    eax,DWORD PTR [ebp+0x8]
  40c5af:	pop    esi
  40c5b0:	pop    ebx
  40c5b1:	test   eax,eax
  40c5b3:	je     0x40c5b8
  40c5b5:	and    DWORD PTR [eax],0x0
  40c5b8:	inc    DWORD PTR [ecx]
  40c5ba:	leave  
  40c5bb:	ret    
  40c5bc:	mov    edi,edi
  40c5be:	push   ebp
  40c5bf:	mov    ebp,esp
  40c5c1:	sub    esp,0xc
  40c5c4:	push   ebx
  40c5c5:	xor    ebx,ebx
  40c5c7:	push   esi
  40c5c8:	push   edi
  40c5c9:	cmp    DWORD PTR ds:0x450774,ebx
  40c5cf:	jne    0x40c5d6
  40c5d1:	call   0x40dc6a
  40c5d6:	push   0x104
  40c5db:	mov    esi,0x44e670
  40c5e0:	push   esi
  40c5e1:	push   ebx
  40c5e2:	mov    BYTE PTR ds:0x44e774,bl
  40c5e8:	call   DWORD PTR ds:0x443164
  40c5ee:	mov    eax,ds:0x4508a0
  40c5f3:	mov    DWORD PTR ds:0x44de0c,esi
  40c5f9:	cmp    eax,ebx
  40c5fb:	je     0x40c604
  40c5fd:	mov    DWORD PTR [ebp-0x4],eax
  40c600:	cmp    BYTE PTR [eax],bl
  40c602:	jne    0x40c607
  40c604:	mov    DWORD PTR [ebp-0x4],esi
  40c607:	mov    edx,DWORD PTR [ebp-0x4]
  40c60a:	lea    eax,[ebp-0x8]
  40c60d:	push   eax
  40c60e:	push   ebx
  40c60f:	push   ebx
  40c610:	lea    edi,[ebp-0xc]
  40c613:	call   0x40c422
  40c618:	mov    eax,DWORD PTR [ebp-0x8]
  40c61b:	add    esp,0xc
  40c61e:	cmp    eax,0x3fffffff
  40c623:	jae    0x40c66f
  40c625:	mov    ecx,DWORD PTR [ebp-0xc]
  40c628:	cmp    ecx,0xffffffff
  40c62b:	jae    0x40c66f
  40c62d:	mov    edi,eax
  40c62f:	shl    edi,0x2
  40c632:	lea    eax,[edi+ecx*1]
  40c635:	cmp    eax,ecx
  40c637:	jb     0x40c66f
  40c639:	push   eax
  40c63a:	call   0x406e65
  40c63f:	mov    esi,eax
  40c641:	pop    ecx
  40c642:	cmp    esi,ebx
  40c644:	je     0x40c66f
  40c646:	mov    edx,DWORD PTR [ebp-0x4]
  40c649:	lea    eax,[ebp-0x8]
  40c64c:	push   eax
  40c64d:	add    edi,esi
  40c64f:	push   edi
  40c650:	push   esi
  40c651:	lea    edi,[ebp-0xc]
  40c654:	call   0x40c422
  40c659:	mov    eax,DWORD PTR [ebp-0x8]
  40c65c:	add    esp,0xc
  40c65f:	dec    eax
  40c660:	mov    ds:0x44ddf0,eax
  40c665:	mov    DWORD PTR ds:0x44ddf4,esi
  40c66b:	xor    eax,eax
  40c66d:	jmp    0x40c672
  40c66f:	or     eax,0xffffffff
  40c672:	pop    edi
  40c673:	pop    esi
  40c674:	pop    ebx
  40c675:	leave  
  40c676:	ret    
  40c677:	mov    edi,edi
  40c679:	push   ebp
  40c67a:	mov    ebp,esp
  40c67c:	sub    esp,0xc
  40c67f:	push   ebx
  40c680:	push   esi
  40c681:	call   DWORD PTR ds:0x4430bc
  40c687:	mov    ebx,eax
  40c689:	xor    esi,esi
  40c68b:	cmp    ebx,esi
  40c68d:	jne    0x40c693
  40c68f:	xor    eax,eax
  40c691:	jmp    0x40c70a
  40c693:	cmp    WORD PTR [ebx],si
  40c696:	je     0x40c6a8
  40c698:	add    eax,0x2
  40c69b:	cmp    WORD PTR [eax],si
  40c69e:	jne    0x40c698
  40c6a0:	add    eax,0x2
  40c6a3:	cmp    WORD PTR [eax],si
  40c6a6:	jne    0x40c698
  40c6a8:	push   edi
  40c6a9:	mov    edi,DWORD PTR ds:0x443198
  40c6af:	push   esi
  40c6b0:	push   esi
  40c6b1:	push   esi
  40c6b2:	sub    eax,ebx
  40c6b4:	push   esi
  40c6b5:	sar    eax,1
  40c6b7:	inc    eax
  40c6b8:	push   eax
  40c6b9:	push   ebx
  40c6ba:	push   esi
  40c6bb:	push   esi
  40c6bc:	mov    DWORD PTR [ebp-0xc],eax
  40c6bf:	call   edi
  40c6c1:	mov    DWORD PTR [ebp-0x8],eax
  40c6c4:	cmp    eax,esi
  40c6c6:	je     0x40c700
  40c6c8:	push   eax
  40c6c9:	call   0x406e65
  40c6ce:	pop    ecx
  40c6cf:	mov    DWORD PTR [ebp-0x4],eax
  40c6d2:	cmp    eax,esi
  40c6d4:	je     0x40c700
  40c6d6:	push   esi
  40c6d7:	push   esi
  40c6d8:	push   DWORD PTR [ebp-0x8]
  40c6db:	push   eax
  40c6dc:	push   DWORD PTR [ebp-0xc]
  40c6df:	push   ebx
  40c6e0:	push   esi
  40c6e1:	push   esi
  40c6e2:	call   edi
  40c6e4:	test   eax,eax
  40c6e6:	jne    0x40c6f4
  40c6e8:	push   DWORD PTR [ebp-0x4]
  40c6eb:	call   0x404391
  40c6f0:	pop    ecx
  40c6f1:	mov    DWORD PTR [ebp-0x4],esi
  40c6f4:	push   ebx
  40c6f5:	call   DWORD PTR ds:0x4430c0
  40c6fb:	mov    eax,DWORD PTR [ebp-0x4]
  40c6fe:	jmp    0x40c709
  40c700:	push   ebx
  40c701:	call   DWORD PTR ds:0x4430c0
  40c707:	xor    eax,eax
  40c709:	pop    edi
  40c70a:	pop    esi
  40c70b:	pop    ebx
  40c70c:	leave  
  40c70d:	ret    
  40c70e:	mov    edi,edi
  40c710:	push   esi
  40c711:	mov    eax,0x448fb8
  40c716:	mov    esi,0x448fb8
  40c71b:	push   edi
  40c71c:	mov    edi,eax
  40c71e:	cmp    eax,esi
  40c720:	jae    0x40c731
  40c722:	mov    eax,DWORD PTR [edi]
  40c724:	test   eax,eax
  40c726:	je     0x40c72a
  40c728:	call   eax
  40c72a:	add    edi,0x4
  40c72d:	cmp    edi,esi
  40c72f:	jb     0x40c722
  40c731:	pop    edi
  40c732:	pop    esi
  40c733:	ret    
  40c734:	mov    edi,edi
  40c736:	push   esi
  40c737:	mov    eax,0x448fc0
  40c73c:	mov    esi,0x448fc0
  40c741:	push   edi
  40c742:	mov    edi,eax
  40c744:	cmp    eax,esi
  40c746:	jae    0x40c757
  40c748:	mov    eax,DWORD PTR [edi]
  40c74a:	test   eax,eax
  40c74c:	je     0x40c750
  40c74e:	call   eax
  40c750:	add    edi,0x4
  40c753:	cmp    edi,esi
  40c755:	jb     0x40c748
  40c757:	pop    edi
  40c758:	pop    esi
  40c759:	ret    
  40c75a:	push   0x0
  40c75c:	call   DWORD PTR ds:0x4431c4
  40c762:	ret    
  40c763:	call   DWORD PTR ds:0x4430b8
  40c769:	ret    0x4
  40c76c:	mov    edi,edi
  40c76e:	push   esi
  40c76f:	push   DWORD PTR ds:0x44b954
  40c775:	call   DWORD PTR ds:0x4430b4
  40c77b:	mov    esi,eax
  40c77d:	test   esi,esi
  40c77f:	jne    0x40c79c
  40c781:	push   DWORD PTR ds:0x44e77c
  40c787:	call   DWORD PTR ds:0x4431c8
  40c78d:	mov    esi,eax
  40c78f:	push   esi
  40c790:	push   DWORD PTR ds:0x44b954
  40c796:	call   DWORD PTR ds:0x44311c
  40c79c:	mov    eax,esi
  40c79e:	pop    esi
  40c79f:	ret    
  40c7a0:	mov    eax,ds:0x44b950
  40c7a5:	cmp    eax,0xffffffff
  40c7a8:	je     0x40c7c0
  40c7aa:	push   eax
  40c7ab:	push   DWORD PTR ds:0x44e784
  40c7b1:	call   DWORD PTR ds:0x4431c8
  40c7b7:	call   eax
  40c7b9:	or     DWORD PTR ds:0x44b950,0xffffffff
  40c7c0:	mov    eax,ds:0x44b954
  40c7c5:	cmp    eax,0xffffffff
  40c7c8:	je     0x40c7d8
  40c7ca:	push   eax
  40c7cb:	call   DWORD PTR ds:0x4430b0
  40c7d1:	or     DWORD PTR ds:0x44b954,0xffffffff
  40c7d8:	jmp    0x407e40
  40c7dd:	push   0x8
  40c7df:	push   0x449450
  40c7e4:	call   0x4076f0
  40c7e9:	push   0x444a10
  40c7ee:	call   DWORD PTR ds:0x443150
  40c7f4:	mov    esi,DWORD PTR [ebp+0x8]
  40c7f7:	mov    DWORD PTR [esi+0x5c],0x444970
  40c7fe:	and    DWORD PTR [esi+0x8],0x0
  40c802:	xor    edi,edi
  40c804:	inc    edi
  40c805:	mov    DWORD PTR [esi+0x14],edi
  40c808:	mov    DWORD PTR [esi+0x70],edi
  40c80b:	mov    BYTE PTR [esi+0xc8],0x43
  40c812:	mov    BYTE PTR [esi+0x14b],0x43
  40c819:	mov    DWORD PTR [esi+0x68],0x44bcd8
  40c820:	push   0xd
  40c822:	call   0x407f70
  40c827:	pop    ecx
  40c828:	and    DWORD PTR [ebp-0x4],0x0
  40c82c:	push   DWORD PTR [esi+0x68]
  40c82f:	call   DWORD PTR ds:0x4431bc
  40c835:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40c83c:	call   0x40c87f
  40c841:	push   0xc
  40c843:	call   0x407f70
  40c848:	pop    ecx
  40c849:	mov    DWORD PTR [ebp-0x4],edi
  40c84c:	mov    eax,DWORD PTR [ebp+0xc]
  40c84f:	mov    DWORD PTR [esi+0x6c],eax
  40c852:	test   eax,eax
  40c854:	jne    0x40c85e
  40c856:	mov    eax,ds:0x44bc58
  40c85b:	mov    DWORD PTR [esi+0x6c],eax
  40c85e:	push   DWORD PTR [esi+0x6c]
  40c861:	call   0x40d26b
  40c866:	pop    ecx
  40c867:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40c86e:	call   0x40c888
  40c873:	call   0x407735
  40c878:	ret    
  40c879:	xor    edi,edi
  40c87b:	inc    edi
  40c87c:	mov    esi,DWORD PTR [ebp+0x8]
  40c87f:	push   0xd
  40c881:	call   0x407e97
  40c886:	pop    ecx
  40c887:	ret    
  40c888:	push   0xc
  40c88a:	call   0x407e97
  40c88f:	pop    ecx
  40c890:	ret    
  40c891:	mov    edi,edi
  40c893:	push   esi
  40c894:	push   edi
  40c895:	call   DWORD PTR ds:0x443120
  40c89b:	push   DWORD PTR ds:0x44b950
  40c8a1:	mov    edi,eax
  40c8a3:	call   0x40c76c
  40c8a8:	call   eax
  40c8aa:	mov    esi,eax
  40c8ac:	test   esi,esi
  40c8ae:	jne    0x40c8fe
  40c8b0:	push   0x214
  40c8b5:	push   0x1
  40c8b7:	call   0x406eaa
  40c8bc:	mov    esi,eax
  40c8be:	pop    ecx
  40c8bf:	pop    ecx
  40c8c0:	test   esi,esi
  40c8c2:	je     0x40c8fe
  40c8c4:	push   esi
  40c8c5:	push   DWORD PTR ds:0x44b950
  40c8cb:	push   DWORD PTR ds:0x44e780
  40c8d1:	call   DWORD PTR ds:0x4431c8
  40c8d7:	call   eax
  40c8d9:	test   eax,eax
  40c8db:	je     0x40c8f5
  40c8dd:	push   0x0
  40c8df:	push   esi
  40c8e0:	call   0x40c7dd
  40c8e5:	pop    ecx
  40c8e6:	pop    ecx
  40c8e7:	call   DWORD PTR ds:0x4430a8
  40c8ed:	or     DWORD PTR [esi+0x4],0xffffffff
  40c8f1:	mov    DWORD PTR [esi],eax
  40c8f3:	jmp    0x40c8fe
  40c8f5:	push   esi
  40c8f6:	call   0x404391
  40c8fb:	pop    ecx
  40c8fc:	xor    esi,esi
  40c8fe:	push   edi
  40c8ff:	call   DWORD PTR ds:0x4430ac
  40c905:	pop    edi
  40c906:	mov    eax,esi
  40c908:	pop    esi
  40c909:	ret    
  40c90a:	mov    edi,edi
  40c90c:	push   esi
  40c90d:	call   0x40c891
  40c912:	mov    esi,eax
  40c914:	test   esi,esi
  40c916:	jne    0x40c920
  40c918:	push   0x10
  40c91a:	call   0x407dd8
  40c91f:	pop    ecx
  40c920:	mov    eax,esi
  40c922:	pop    esi
  40c923:	ret    
  40c924:	push   0x8
  40c926:	push   0x449478
  40c92b:	call   0x4076f0
  40c930:	mov    esi,DWORD PTR [ebp+0x8]
  40c933:	test   esi,esi
  40c935:	je     0x40ca33
  40c93b:	mov    eax,DWORD PTR [esi+0x24]
  40c93e:	test   eax,eax
  40c940:	je     0x40c949
  40c942:	push   eax
  40c943:	call   0x404391
  40c948:	pop    ecx
  40c949:	mov    eax,DWORD PTR [esi+0x2c]
  40c94c:	test   eax,eax
  40c94e:	je     0x40c957
  40c950:	push   eax
  40c951:	call   0x404391
  40c956:	pop    ecx
  40c957:	mov    eax,DWORD PTR [esi+0x34]
  40c95a:	test   eax,eax
  40c95c:	je     0x40c965
  40c95e:	push   eax
  40c95f:	call   0x404391
  40c964:	pop    ecx
  40c965:	mov    eax,DWORD PTR [esi+0x3c]
  40c968:	test   eax,eax
  40c96a:	je     0x40c973
  40c96c:	push   eax
  40c96d:	call   0x404391
  40c972:	pop    ecx
  40c973:	mov    eax,DWORD PTR [esi+0x40]
  40c976:	test   eax,eax
  40c978:	je     0x40c981
  40c97a:	push   eax
  40c97b:	call   0x404391
  40c980:	pop    ecx
  40c981:	mov    eax,DWORD PTR [esi+0x44]
  40c984:	test   eax,eax
  40c986:	je     0x40c98f
  40c988:	push   eax
  40c989:	call   0x404391
  40c98e:	pop    ecx
  40c98f:	mov    eax,DWORD PTR [esi+0x48]
  40c992:	test   eax,eax
  40c994:	je     0x40c99d
  40c996:	push   eax
  40c997:	call   0x404391
  40c99c:	pop    ecx
  40c99d:	mov    eax,DWORD PTR [esi+0x5c]
  40c9a0:	cmp    eax,0x444970
  40c9a5:	je     0x40c9ae
  40c9a7:	push   eax
  40c9a8:	call   0x404391
  40c9ad:	pop    ecx
  40c9ae:	push   0xd
  40c9b0:	call   0x407f70
  40c9b5:	pop    ecx
  40c9b6:	and    DWORD PTR [ebp-0x4],0x0
  40c9ba:	mov    edi,DWORD PTR [esi+0x68]
  40c9bd:	test   edi,edi
  40c9bf:	je     0x40c9db
  40c9c1:	push   edi
  40c9c2:	call   DWORD PTR ds:0x4431c0
  40c9c8:	test   eax,eax
  40c9ca:	jne    0x40c9db
  40c9cc:	cmp    edi,0x44bcd8
  40c9d2:	je     0x40c9db
  40c9d4:	push   edi
  40c9d5:	call   0x404391
  40c9da:	pop    ecx
  40c9db:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40c9e2:	call   0x40ca3e
  40c9e7:	push   0xc
  40c9e9:	call   0x407f70
  40c9ee:	pop    ecx
  40c9ef:	mov    DWORD PTR [ebp-0x4],0x1
  40c9f6:	mov    edi,DWORD PTR [esi+0x6c]
  40c9f9:	test   edi,edi
  40c9fb:	je     0x40ca20
  40c9fd:	push   edi
  40c9fe:	call   0x40d2fa
  40ca03:	pop    ecx
  40ca04:	cmp    edi,DWORD PTR ds:0x44bc58
  40ca0a:	je     0x40ca20
  40ca0c:	cmp    edi,0x44bb80
  40ca12:	je     0x40ca20
  40ca14:	cmp    DWORD PTR [edi],0x0
  40ca17:	jne    0x40ca20
  40ca19:	push   edi
  40ca1a:	call   0x40d393
  40ca1f:	pop    ecx
  40ca20:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40ca27:	call   0x40ca4a
  40ca2c:	push   esi
  40ca2d:	call   0x404391
  40ca32:	pop    ecx
  40ca33:	call   0x407735
  40ca38:	ret    0x4
  40ca3b:	mov    esi,DWORD PTR [ebp+0x8]
  40ca3e:	push   0xd
  40ca40:	call   0x407e97
  40ca45:	pop    ecx
  40ca46:	ret    
  40ca47:	mov    esi,DWORD PTR [ebp+0x8]
  40ca4a:	push   0xc
  40ca4c:	call   0x407e97
  40ca51:	pop    ecx
  40ca52:	ret    
  40ca53:	mov    edi,edi
  40ca55:	push   edi
  40ca56:	push   0x444a10
  40ca5b:	call   DWORD PTR ds:0x443150
  40ca61:	mov    edi,eax
  40ca63:	test   edi,edi
  40ca65:	jne    0x40ca70
  40ca67:	call   0x40c7a0
  40ca6c:	xor    eax,eax
  40ca6e:	pop    edi
  40ca6f:	ret    
  40ca70:	push   esi
  40ca71:	mov    esi,DWORD PTR ds:0x443154
  40ca77:	push   0x444a4c
  40ca7c:	push   edi
  40ca7d:	call   esi
  40ca7f:	push   0x444a40
  40ca84:	push   edi
  40ca85:	mov    ds:0x44e778,eax
  40ca8a:	call   esi
  40ca8c:	push   0x444a34
  40ca91:	push   edi
  40ca92:	mov    ds:0x44e77c,eax
  40ca97:	call   esi
  40ca99:	push   0x444a2c
  40ca9e:	push   edi
  40ca9f:	mov    ds:0x44e780,eax
  40caa4:	call   esi
  40caa6:	cmp    DWORD PTR ds:0x44e778,0x0
  40caad:	mov    esi,DWORD PTR ds:0x44311c
  40cab3:	mov    ds:0x44e784,eax
  40cab8:	je     0x40cad0
  40caba:	cmp    DWORD PTR ds:0x44e77c,0x0
  40cac1:	je     0x40cad0
  40cac3:	cmp    DWORD PTR ds:0x44e780,0x0
  40caca:	je     0x40cad0
  40cacc:	test   eax,eax
  40cace:	jne    0x40caf4
  40cad0:	mov    eax,ds:0x4430b4
  40cad5:	mov    ds:0x44e77c,eax
  40cada:	mov    eax,ds:0x4430b0
  40cadf:	mov    DWORD PTR ds:0x44e778,0x40c763
  40cae9:	mov    DWORD PTR ds:0x44e780,esi
  40caef:	mov    ds:0x44e784,eax
  40caf4:	call   DWORD PTR ds:0x4430b8
  40cafa:	mov    ds:0x44b954,eax
  40caff:	cmp    eax,0xffffffff
  40cb02:	je     0x40cbc9
  40cb08:	push   DWORD PTR ds:0x44e77c
  40cb0e:	push   eax
  40cb0f:	call   esi
  40cb11:	test   eax,eax
  40cb13:	je     0x40cbc9
  40cb19:	call   0x407b60
  40cb1e:	push   DWORD PTR ds:0x44e778
  40cb24:	mov    esi,DWORD PTR ds:0x4431c4
  40cb2a:	call   esi
  40cb2c:	push   DWORD PTR ds:0x44e77c
  40cb32:	mov    ds:0x44e778,eax
  40cb37:	call   esi
  40cb39:	push   DWORD PTR ds:0x44e780
  40cb3f:	mov    ds:0x44e77c,eax
  40cb44:	call   esi
  40cb46:	push   DWORD PTR ds:0x44e784
  40cb4c:	mov    ds:0x44e780,eax
  40cb51:	call   esi
  40cb53:	mov    ds:0x44e784,eax
  40cb58:	call   0x407df6
  40cb5d:	test   eax,eax
  40cb5f:	je     0x40cbc4
  40cb61:	mov    edi,DWORD PTR ds:0x4431c8
  40cb67:	push   0x40c924
  40cb6c:	push   DWORD PTR ds:0x44e778
  40cb72:	call   edi
  40cb74:	call   eax
  40cb76:	mov    ds:0x44b950,eax
  40cb7b:	cmp    eax,0xffffffff
  40cb7e:	je     0x40cbc4
  40cb80:	push   0x214
  40cb85:	push   0x1
  40cb87:	call   0x406eaa
  40cb8c:	mov    esi,eax
  40cb8e:	pop    ecx
  40cb8f:	pop    ecx
  40cb90:	test   esi,esi
  40cb92:	je     0x40cbc4
  40cb94:	push   esi
  40cb95:	push   DWORD PTR ds:0x44b950
  40cb9b:	push   DWORD PTR ds:0x44e780
  40cba1:	call   edi
  40cba3:	call   eax
  40cba5:	test   eax,eax
  40cba7:	je     0x40cbc4
  40cba9:	push   0x0
  40cbab:	push   esi
  40cbac:	call   0x40c7dd
  40cbb1:	pop    ecx
  40cbb2:	pop    ecx
  40cbb3:	call   DWORD PTR ds:0x4430a8
  40cbb9:	or     DWORD PTR [esi+0x4],0xffffffff
  40cbbd:	mov    DWORD PTR [esi],eax
  40cbbf:	xor    eax,eax
  40cbc1:	inc    eax
  40cbc2:	jmp    0x40cbcb
  40cbc4:	call   0x40c7a0
  40cbc9:	xor    eax,eax
  40cbcb:	pop    esi
  40cbcc:	pop    edi
  40cbcd:	ret    
  40cbce:	mov    edi,edi
  40cbd0:	push   ebp
  40cbd1:	mov    ebp,esp
  40cbd3:	sub    esp,0x10
  40cbd6:	mov    eax,ds:0x44b470
  40cbdb:	and    DWORD PTR [ebp-0x8],0x0
  40cbdf:	and    DWORD PTR [ebp-0x4],0x0
  40cbe3:	push   ebx
  40cbe4:	push   edi
  40cbe5:	mov    edi,0xbb40e64e
  40cbea:	mov    ebx,0xffff0000
  40cbef:	cmp    eax,edi
  40cbf1:	je     0x40cc00
  40cbf3:	test   ebx,eax
  40cbf5:	je     0x40cc00
  40cbf7:	not    eax
  40cbf9:	mov    ds:0x44b474,eax
  40cbfe:	jmp    0x40cc65
  40cc00:	push   esi
  40cc01:	lea    eax,[ebp-0x8]
  40cc04:	push   eax
  40cc05:	call   DWORD PTR ds:0x4431b0
  40cc0b:	mov    esi,DWORD PTR [ebp-0x4]
  40cc0e:	xor    esi,DWORD PTR [ebp-0x8]
  40cc11:	call   DWORD PTR ds:0x44309c
  40cc17:	xor    esi,eax
  40cc19:	call   DWORD PTR ds:0x4430a8
  40cc1f:	xor    esi,eax
  40cc21:	call   DWORD PTR ds:0x4430a0
  40cc27:	xor    esi,eax
  40cc29:	lea    eax,[ebp-0x10]
  40cc2c:	push   eax
  40cc2d:	call   DWORD PTR ds:0x4430a4
  40cc33:	mov    eax,DWORD PTR [ebp-0xc]
  40cc36:	xor    eax,DWORD PTR [ebp-0x10]
  40cc39:	xor    esi,eax
  40cc3b:	cmp    esi,edi
  40cc3d:	jne    0x40cc46
  40cc3f:	mov    esi,0xbb40e64f
  40cc44:	jmp    0x40cc56
  40cc46:	test   ebx,esi
  40cc48:	jne    0x40cc56
  40cc4a:	mov    eax,esi
  40cc4c:	or     eax,0x4711
  40cc51:	shl    eax,0x10
  40cc54:	or     esi,eax
  40cc56:	mov    DWORD PTR ds:0x44b470,esi
  40cc5c:	not    esi
  40cc5e:	mov    DWORD PTR ds:0x44b474,esi
  40cc64:	pop    esi
  40cc65:	pop    edi
  40cc66:	pop    ebx
  40cc67:	leave  
  40cc68:	ret    
  40cc69:	mov    edi,edi
  40cc6b:	push   ebp
  40cc6c:	mov    ebp,esp
  40cc6e:	mov    eax,DWORD PTR [ebp+0x8]
  40cc71:	mov    ds:0x44e788,eax
  40cc76:	pop    ebp
  40cc77:	ret    
  40cc78:	int3   
  40cc79:	int3   
  40cc7a:	int3   
  40cc7b:	int3   
  40cc7c:	int3   
  40cc7d:	int3   
  40cc7e:	int3   
  40cc7f:	int3   
  40cc80:	push   ebp
  40cc81:	mov    ebp,esp
  40cc83:	sub    esp,0x4
  40cc86:	push   ebx
  40cc87:	push   ecx
  40cc88:	mov    eax,DWORD PTR [ebp+0xc]
  40cc8b:	add    eax,0xc
  40cc8e:	mov    DWORD PTR [ebp-0x4],eax
  40cc91:	mov    eax,DWORD PTR [ebp+0x8]
  40cc94:	push   ebp
  40cc95:	push   DWORD PTR [ebp+0x10]
  40cc98:	mov    ecx,DWORD PTR [ebp+0x10]
  40cc9b:	mov    ebp,DWORD PTR [ebp-0x4]
  40cc9e:	call   0x41022c
  40cca3:	push   esi
  40cca4:	push   edi
  40cca5:	call   eax
  40cca7:	pop    edi
  40cca8:	pop    esi
  40cca9:	mov    ebx,ebp
  40ccab:	pop    ebp
  40ccac:	mov    ecx,DWORD PTR [ebp+0x10]
  40ccaf:	push   ebp
  40ccb0:	mov    ebp,ebx
  40ccb2:	cmp    ecx,0x100
  40ccb8:	jne    0x40ccbf
  40ccba:	mov    ecx,0x2
  40ccbf:	push   ecx
  40ccc0:	call   0x41022c
  40ccc5:	pop    ebp
  40ccc6:	pop    ecx
  40ccc7:	pop    ebx
  40ccc8:	leave  
  40ccc9:	ret    0xc
  40cccc:	mov    eax,0x44ba10
  40ccd1:	ret    
  40ccd2:	mov    eax,0x44b960
  40ccd7:	ret    
  40ccd8:	mov    edi,edi
  40ccda:	push   ebp
  40ccdb:	mov    ebp,esp
  40ccdd:	mov    eax,DWORD PTR [ebp+0x8]
  40cce0:	push   ebx
  40cce1:	xor    ebx,ebx
  40cce3:	push   esi
  40cce4:	push   edi
  40cce5:	cmp    DWORD PTR [ebp+0x14],ebx
  40cce8:	jne    0x40ccfa
  40ccea:	cmp    eax,ebx
  40ccec:	jne    0x40ccfe
  40ccee:	cmp    DWORD PTR [ebp+0xc],ebx
  40ccf1:	jne    0x40cd05
  40ccf3:	xor    eax,eax
  40ccf5:	pop    edi
  40ccf6:	pop    esi
  40ccf7:	pop    ebx
  40ccf8:	pop    ebp
  40ccf9:	ret    
  40ccfa:	cmp    eax,ebx
  40ccfc:	je     0x40cd05
  40ccfe:	mov    edi,DWORD PTR [ebp+0xc]
  40cd01:	cmp    edi,ebx
  40cd03:	ja     0x40cd18
  40cd05:	call   0x40769b
  40cd0a:	push   0x16
  40cd0c:	pop    esi
  40cd0d:	mov    DWORD PTR [eax],esi
  40cd0f:	call   0x407649
  40cd14:	mov    eax,esi
  40cd16:	jmp    0x40ccf5
  40cd18:	cmp    DWORD PTR [ebp+0x14],ebx
  40cd1b:	jne    0x40cd21
  40cd1d:	mov    BYTE PTR [eax],bl
  40cd1f:	jmp    0x40ccf3
  40cd21:	mov    edx,DWORD PTR [ebp+0x10]
  40cd24:	cmp    edx,ebx
  40cd26:	jne    0x40cd2c
  40cd28:	mov    BYTE PTR [eax],bl
  40cd2a:	jmp    0x40cd05
  40cd2c:	cmp    DWORD PTR [ebp+0x14],0xffffffff
  40cd30:	mov    ecx,eax
  40cd32:	jne    0x40cd47
  40cd34:	mov    esi,eax
  40cd36:	sub    esi,edx
  40cd38:	mov    cl,BYTE PTR [edx]
  40cd3a:	mov    BYTE PTR [esi+edx*1],cl
  40cd3d:	inc    edx
  40cd3e:	cmp    cl,bl
  40cd40:	je     0x40cd64
  40cd42:	dec    edi
  40cd43:	jne    0x40cd38
  40cd45:	jmp    0x40cd64
  40cd47:	mov    esi,edx
  40cd49:	sub    esi,eax
  40cd4b:	mov    dl,BYTE PTR [esi+ecx*1]
  40cd4e:	mov    BYTE PTR [ecx],dl
  40cd50:	inc    ecx
  40cd51:	cmp    dl,bl
  40cd53:	je     0x40cd5d
  40cd55:	dec    edi
  40cd56:	je     0x40cd5d
  40cd58:	dec    DWORD PTR [ebp+0x14]
  40cd5b:	jne    0x40cd4b
  40cd5d:	cmp    DWORD PTR [ebp+0x14],ebx
  40cd60:	jne    0x40cd64
  40cd62:	mov    BYTE PTR [ecx],bl
  40cd64:	cmp    edi,ebx
  40cd66:	jne    0x40ccf3
  40cd68:	cmp    DWORD PTR [ebp+0x14],0xffffffff
  40cd6c:	jne    0x40cd7d
  40cd6e:	mov    ecx,DWORD PTR [ebp+0xc]
  40cd71:	push   0x50
  40cd73:	mov    BYTE PTR [eax+ecx*1-0x1],bl
  40cd77:	pop    eax
  40cd78:	jmp    0x40ccf5
  40cd7d:	mov    BYTE PTR [eax],bl
  40cd7f:	call   0x40769b
  40cd84:	push   0x22
  40cd86:	pop    ecx
  40cd87:	mov    DWORD PTR [eax],ecx
  40cd89:	mov    esi,ecx
  40cd8b:	jmp    0x40cd0f
  40cd8d:	mov    edi,edi
  40cd8f:	push   ebp
  40cd90:	mov    ebp,esp
  40cd92:	push   esi
  40cd93:	mov    esi,DWORD PTR [ebp+0x8]
  40cd96:	test   esi,esi
  40cd98:	je     0x40d101
  40cd9e:	push   DWORD PTR [esi+0x4]
  40cda1:	call   0x404391
  40cda6:	push   DWORD PTR [esi+0x8]
  40cda9:	call   0x404391
  40cdae:	push   DWORD PTR [esi+0xc]
  40cdb1:	call   0x404391
  40cdb6:	push   DWORD PTR [esi+0x10]
  40cdb9:	call   0x404391
  40cdbe:	push   DWORD PTR [esi+0x14]
  40cdc1:	call   0x404391
  40cdc6:	push   DWORD PTR [esi+0x18]
  40cdc9:	call   0x404391
  40cdce:	push   DWORD PTR [esi]
  40cdd0:	call   0x404391
  40cdd5:	push   DWORD PTR [esi+0x20]
  40cdd8:	call   0x404391
  40cddd:	push   DWORD PTR [esi+0x24]
  40cde0:	call   0x404391
  40cde5:	push   DWORD PTR [esi+0x28]
  40cde8:	call   0x404391
  40cded:	push   DWORD PTR [esi+0x2c]
  40cdf0:	call   0x404391
  40cdf5:	push   DWORD PTR [esi+0x30]
  40cdf8:	call   0x404391
  40cdfd:	push   DWORD PTR [esi+0x34]
  40ce00:	call   0x404391
  40ce05:	push   DWORD PTR [esi+0x1c]
  40ce08:	call   0x404391
  40ce0d:	push   DWORD PTR [esi+0x38]
  40ce10:	call   0x404391
  40ce15:	push   DWORD PTR [esi+0x3c]
  40ce18:	call   0x404391
  40ce1d:	add    esp,0x40
  40ce20:	push   DWORD PTR [esi+0x40]
  40ce23:	call   0x404391
  40ce28:	push   DWORD PTR [esi+0x44]
  40ce2b:	call   0x404391
  40ce30:	push   DWORD PTR [esi+0x48]
  40ce33:	call   0x404391
  40ce38:	push   DWORD PTR [esi+0x4c]
  40ce3b:	call   0x404391
  40ce40:	push   DWORD PTR [esi+0x50]
  40ce43:	call   0x404391
  40ce48:	push   DWORD PTR [esi+0x54]
  40ce4b:	call   0x404391
  40ce50:	push   DWORD PTR [esi+0x58]
  40ce53:	call   0x404391
  40ce58:	push   DWORD PTR [esi+0x5c]
  40ce5b:	call   0x404391
  40ce60:	push   DWORD PTR [esi+0x60]
  40ce63:	call   0x404391
  40ce68:	push   DWORD PTR [esi+0x64]
  40ce6b:	call   0x404391
  40ce70:	push   DWORD PTR [esi+0x68]
  40ce73:	call   0x404391
  40ce78:	push   DWORD PTR [esi+0x6c]
  40ce7b:	call   0x404391
  40ce80:	push   DWORD PTR [esi+0x70]
  40ce83:	call   0x404391
  40ce88:	push   DWORD PTR [esi+0x74]
  40ce8b:	call   0x404391
  40ce90:	push   DWORD PTR [esi+0x78]
  40ce93:	call   0x404391
  40ce98:	push   DWORD PTR [esi+0x7c]
  40ce9b:	call   0x404391
  40cea0:	add    esp,0x40
  40cea3:	push   DWORD PTR [esi+0x80]
  40cea9:	call   0x404391
  40ceae:	push   DWORD PTR [esi+0x84]
  40ceb4:	call   0x404391
  40ceb9:	push   DWORD PTR [esi+0x88]
  40cebf:	call   0x404391
  40cec4:	push   DWORD PTR [esi+0x8c]
  40ceca:	call   0x404391
  40cecf:	push   DWORD PTR [esi+0x90]
  40ced5:	call   0x404391
  40ceda:	push   DWORD PTR [esi+0x94]
  40cee0:	call   0x404391
  40cee5:	push   DWORD PTR [esi+0x98]
  40ceeb:	call   0x404391
  40cef0:	push   DWORD PTR [esi+0x9c]
  40cef6:	call   0x404391
  40cefb:	push   DWORD PTR [esi+0xa0]
  40cf01:	call   0x404391
  40cf06:	push   DWORD PTR [esi+0xa4]
  40cf0c:	call   0x404391
  40cf11:	push   DWORD PTR [esi+0xa8]
  40cf17:	call   0x404391
  40cf1c:	push   DWORD PTR [esi+0xbc]
  40cf22:	call   0x404391
  40cf27:	push   DWORD PTR [esi+0xc0]
  40cf2d:	call   0x404391
  40cf32:	push   DWORD PTR [esi+0xc4]
  40cf38:	call   0x404391
  40cf3d:	push   DWORD PTR [esi+0xc8]
  40cf43:	call   0x404391
  40cf48:	push   DWORD PTR [esi+0xcc]
  40cf4e:	call   0x404391
  40cf53:	add    esp,0x40
  40cf56:	push   DWORD PTR [esi+0xd0]
  40cf5c:	call   0x404391
  40cf61:	push   DWORD PTR [esi+0xb8]
  40cf67:	call   0x404391
  40cf6c:	push   DWORD PTR [esi+0xd8]
  40cf72:	call   0x404391
  40cf77:	push   DWORD PTR [esi+0xdc]
  40cf7d:	call   0x404391
  40cf82:	push   DWORD PTR [esi+0xe0]
  40cf88:	call   0x404391
  40cf8d:	push   DWORD PTR [esi+0xe4]
  40cf93:	call   0x404391
  40cf98:	push   DWORD PTR [esi+0xe8]
  40cf9e:	call   0x404391
  40cfa3:	push   DWORD PTR [esi+0xec]
  40cfa9:	call   0x404391
  40cfae:	push   DWORD PTR [esi+0xd4]
  40cfb4:	call   0x404391
  40cfb9:	push   DWORD PTR [esi+0xf0]
  40cfbf:	call   0x404391
  40cfc4:	push   DWORD PTR [esi+0xf4]
  40cfca:	call   0x404391
  40cfcf:	push   DWORD PTR [esi+0xf8]
  40cfd5:	call   0x404391
  40cfda:	push   DWORD PTR [esi+0xfc]
  40cfe0:	call   0x404391
  40cfe5:	push   DWORD PTR [esi+0x100]
  40cfeb:	call   0x404391
  40cff0:	push   DWORD PTR [esi+0x104]
  40cff6:	call   0x404391
  40cffb:	push   DWORD PTR [esi+0x108]
  40d001:	call   0x404391
  40d006:	add    esp,0x40
  40d009:	push   DWORD PTR [esi+0x10c]
  40d00f:	call   0x404391
  40d014:	push   DWORD PTR [esi+0x110]
  40d01a:	call   0x404391
  40d01f:	push   DWORD PTR [esi+0x114]
  40d025:	call   0x404391
  40d02a:	push   DWORD PTR [esi+0x118]
  40d030:	call   0x404391
  40d035:	push   DWORD PTR [esi+0x11c]
  40d03b:	call   0x404391
  40d040:	push   DWORD PTR [esi+0x120]
  40d046:	call   0x404391
  40d04b:	push   DWORD PTR [esi+0x124]
  40d051:	call   0x404391
  40d056:	push   DWORD PTR [esi+0x128]
  40d05c:	call   0x404391
  40d061:	push   DWORD PTR [esi+0x12c]
  40d067:	call   0x404391
  40d06c:	push   DWORD PTR [esi+0x130]
  40d072:	call   0x404391
  40d077:	push   DWORD PTR [esi+0x134]
  40d07d:	call   0x404391
  40d082:	push   DWORD PTR [esi+0x138]
  40d088:	call   0x404391
  40d08d:	push   DWORD PTR [esi+0x13c]
  40d093:	call   0x404391
  40d098:	push   DWORD PTR [esi+0x140]
  40d09e:	call   0x404391
  40d0a3:	push   DWORD PTR [esi+0x144]
  40d0a9:	call   0x404391
  40d0ae:	push   DWORD PTR [esi+0x148]
  40d0b4:	call   0x404391
  40d0b9:	add    esp,0x40
  40d0bc:	push   DWORD PTR [esi+0x14c]
  40d0c2:	call   0x404391
  40d0c7:	push   DWORD PTR [esi+0x150]
  40d0cd:	call   0x404391
  40d0d2:	push   DWORD PTR [esi+0x154]
  40d0d8:	call   0x404391
  40d0dd:	push   DWORD PTR [esi+0x158]
  40d0e3:	call   0x404391
  40d0e8:	push   DWORD PTR [esi+0x15c]
  40d0ee:	call   0x404391
  40d0f3:	push   DWORD PTR [esi+0x160]
  40d0f9:	call   0x404391
  40d0fe:	add    esp,0x18
  40d101:	pop    esi
  40d102:	pop    ebp
  40d103:	ret    
  40d104:	mov    edi,edi
  40d106:	push   ebp
  40d107:	mov    ebp,esp
  40d109:	push   esi
  40d10a:	mov    esi,DWORD PTR [ebp+0x8]
  40d10d:	test   esi,esi
  40d10f:	je     0x40d16a
  40d111:	mov    eax,DWORD PTR [esi]
  40d113:	cmp    eax,DWORD PTR ds:0x44bc80
  40d119:	je     0x40d122
  40d11b:	push   eax
  40d11c:	call   0x404391
  40d121:	pop    ecx
  40d122:	mov    eax,DWORD PTR [esi+0x4]
  40d125:	cmp    eax,DWORD PTR ds:0x44bc84
  40d12b:	je     0x40d134
  40d12d:	push   eax
  40d12e:	call   0x404391
  40d133:	pop    ecx
  40d134:	mov    eax,DWORD PTR [esi+0x8]
  40d137:	cmp    eax,DWORD PTR ds:0x44bc88
  40d13d:	je     0x40d146
  40d13f:	push   eax
  40d140:	call   0x404391
  40d145:	pop    ecx
  40d146:	mov    eax,DWORD PTR [esi+0x30]
  40d149:	cmp    eax,DWORD PTR ds:0x44bcb0
  40d14f:	je     0x40d158
  40d151:	push   eax
  40d152:	call   0x404391
  40d157:	pop    ecx
  40d158:	mov    esi,DWORD PTR [esi+0x34]
  40d15b:	cmp    esi,DWORD PTR ds:0x44bcb4
  40d161:	je     0x40d16a
  40d163:	push   esi
  40d164:	call   0x404391
  40d169:	pop    ecx
  40d16a:	pop    esi
  40d16b:	pop    ebp
  40d16c:	ret    
  40d16d:	mov    edi,edi
  40d16f:	push   ebp
  40d170:	mov    ebp,esp
  40d172:	push   esi
  40d173:	mov    esi,DWORD PTR [ebp+0x8]
  40d176:	test   esi,esi
  40d178:	je     0x40d268
  40d17e:	mov    eax,DWORD PTR [esi+0xc]
  40d181:	cmp    eax,DWORD PTR ds:0x44bc8c
  40d187:	je     0x40d190
  40d189:	push   eax
  40d18a:	call   0x404391
  40d18f:	pop    ecx
  40d190:	mov    eax,DWORD PTR [esi+0x10]
  40d193:	cmp    eax,DWORD PTR ds:0x44bc90
  40d199:	je     0x40d1a2
  40d19b:	push   eax
  40d19c:	call   0x404391
  40d1a1:	pop    ecx
  40d1a2:	mov    eax,DWORD PTR [esi+0x14]
  40d1a5:	cmp    eax,DWORD PTR ds:0x44bc94
  40d1ab:	je     0x40d1b4
  40d1ad:	push   eax
  40d1ae:	call   0x404391
  40d1b3:	pop    ecx
  40d1b4:	mov    eax,DWORD PTR [esi+0x18]
  40d1b7:	cmp    eax,DWORD PTR ds:0x44bc98
  40d1bd:	je     0x40d1c6
  40d1bf:	push   eax
  40d1c0:	call   0x404391
  40d1c5:	pop    ecx
  40d1c6:	mov    eax,DWORD PTR [esi+0x1c]
  40d1c9:	cmp    eax,DWORD PTR ds:0x44bc9c
  40d1cf:	je     0x40d1d8
  40d1d1:	push   eax
  40d1d2:	call   0x404391
  40d1d7:	pop    ecx
  40d1d8:	mov    eax,DWORD PTR [esi+0x20]
  40d1db:	cmp    eax,DWORD PTR ds:0x44bca0
  40d1e1:	je     0x40d1ea
  40d1e3:	push   eax
  40d1e4:	call   0x404391
  40d1e9:	pop    ecx
  40d1ea:	mov    eax,DWORD PTR [esi+0x24]
  40d1ed:	cmp    eax,DWORD PTR ds:0x44bca4
  40d1f3:	je     0x40d1fc
  40d1f5:	push   eax
  40d1f6:	call   0x404391
  40d1fb:	pop    ecx
  40d1fc:	mov    eax,DWORD PTR [esi+0x38]
  40d1ff:	cmp    eax,DWORD PTR ds:0x44bcb8
  40d205:	je     0x40d20e
  40d207:	push   eax
  40d208:	call   0x404391
  40d20d:	pop    ecx
  40d20e:	mov    eax,DWORD PTR [esi+0x3c]
  40d211:	cmp    eax,DWORD PTR ds:0x44bcbc
  40d217:	je     0x40d220
  40d219:	push   eax
  40d21a:	call   0x404391
  40d21f:	pop    ecx
  40d220:	mov    eax,DWORD PTR [esi+0x40]
  40d223:	cmp    eax,DWORD PTR ds:0x44bcc0
  40d229:	je     0x40d232
  40d22b:	push   eax
  40d22c:	call   0x404391
  40d231:	pop    ecx
  40d232:	mov    eax,DWORD PTR [esi+0x44]
  40d235:	cmp    eax,DWORD PTR ds:0x44bcc4
  40d23b:	je     0x40d244
  40d23d:	push   eax
  40d23e:	call   0x404391
  40d243:	pop    ecx
  40d244:	mov    eax,DWORD PTR [esi+0x48]
  40d247:	cmp    eax,DWORD PTR ds:0x44bcc8
  40d24d:	je     0x40d256
  40d24f:	push   eax
  40d250:	call   0x404391
  40d255:	pop    ecx
  40d256:	mov    esi,DWORD PTR [esi+0x4c]
  40d259:	cmp    esi,DWORD PTR ds:0x44bccc
  40d25f:	je     0x40d268
  40d261:	push   esi
  40d262:	call   0x404391
  40d267:	pop    ecx
  40d268:	pop    esi
  40d269:	pop    ebp
  40d26a:	ret    
  40d26b:	mov    edi,edi
  40d26d:	push   ebp
  40d26e:	mov    ebp,esp
  40d270:	push   ebx
  40d271:	push   esi
  40d272:	mov    esi,DWORD PTR ds:0x4431bc
  40d278:	push   edi
  40d279:	mov    edi,DWORD PTR [ebp+0x8]
  40d27c:	push   edi
  40d27d:	call   esi
  40d27f:	mov    eax,DWORD PTR [edi+0xb0]
  40d285:	test   eax,eax
  40d287:	je     0x40d28c
  40d289:	push   eax
  40d28a:	call   esi
  40d28c:	mov    eax,DWORD PTR [edi+0xb8]
  40d292:	test   eax,eax
  40d294:	je     0x40d299
  40d296:	push   eax
  40d297:	call   esi
  40d299:	mov    eax,DWORD PTR [edi+0xb4]
  40d29f:	test   eax,eax
  40d2a1:	je     0x40d2a6
  40d2a3:	push   eax
  40d2a4:	call   esi
  40d2a6:	mov    eax,DWORD PTR [edi+0xc0]
  40d2ac:	test   eax,eax
  40d2ae:	je     0x40d2b3
  40d2b0:	push   eax
  40d2b1:	call   esi
  40d2b3:	lea    ebx,[edi+0x50]
  40d2b6:	mov    DWORD PTR [ebp+0x8],0x6
  40d2bd:	cmp    DWORD PTR [ebx-0x8],0x44ba14
  40d2c4:	je     0x40d2cf
  40d2c6:	mov    eax,DWORD PTR [ebx]
  40d2c8:	test   eax,eax
  40d2ca:	je     0x40d2cf
  40d2cc:	push   eax
  40d2cd:	call   esi
  40d2cf:	cmp    DWORD PTR [ebx-0x4],0x0
  40d2d3:	je     0x40d2df
  40d2d5:	mov    eax,DWORD PTR [ebx+0x4]
  40d2d8:	test   eax,eax
  40d2da:	je     0x40d2df
  40d2dc:	push   eax
  40d2dd:	call   esi
  40d2df:	add    ebx,0x10
  40d2e2:	dec    DWORD PTR [ebp+0x8]
  40d2e5:	jne    0x40d2bd
  40d2e7:	mov    eax,DWORD PTR [edi+0xd4]
  40d2ed:	add    eax,0xb4
  40d2f2:	push   eax
  40d2f3:	call   esi
  40d2f5:	pop    edi
  40d2f6:	pop    esi
  40d2f7:	pop    ebx
  40d2f8:	pop    ebp
  40d2f9:	ret    
  40d2fa:	mov    edi,edi
  40d2fc:	push   ebp
  40d2fd:	mov    ebp,esp
  40d2ff:	push   edi
  40d300:	mov    edi,DWORD PTR [ebp+0x8]
  40d303:	test   edi,edi
  40d305:	je     0x40d38e
  40d30b:	push   ebx
  40d30c:	push   esi
  40d30d:	mov    esi,DWORD PTR ds:0x4431c0
  40d313:	push   edi
  40d314:	call   esi
  40d316:	mov    eax,DWORD PTR [edi+0xb0]
  40d31c:	test   eax,eax
  40d31e:	je     0x40d323
  40d320:	push   eax
  40d321:	call   esi
  40d323:	mov    eax,DWORD PTR [edi+0xb8]
  40d329:	test   eax,eax
  40d32b:	je     0x40d330
  40d32d:	push   eax
  40d32e:	call   esi
  40d330:	mov    eax,DWORD PTR [edi+0xb4]
  40d336:	test   eax,eax
  40d338:	je     0x40d33d
  40d33a:	push   eax
  40d33b:	call   esi
  40d33d:	mov    eax,DWORD PTR [edi+0xc0]
  40d343:	test   eax,eax
  40d345:	je     0x40d34a
  40d347:	push   eax
  40d348:	call   esi
  40d34a:	lea    ebx,[edi+0x50]
  40d34d:	mov    DWORD PTR [ebp+0x8],0x6
  40d354:	cmp    DWORD PTR [ebx-0x8],0x44ba14
  40d35b:	je     0x40d366
  40d35d:	mov    eax,DWORD PTR [ebx]
  40d35f:	test   eax,eax
  40d361:	je     0x40d366
  40d363:	push   eax
  40d364:	call   esi
  40d366:	cmp    DWORD PTR [ebx-0x4],0x0
  40d36a:	je     0x40d376
  40d36c:	mov    eax,DWORD PTR [ebx+0x4]
  40d36f:	test   eax,eax
  40d371:	je     0x40d376
  40d373:	push   eax
  40d374:	call   esi
  40d376:	add    ebx,0x10
  40d379:	dec    DWORD PTR [ebp+0x8]
  40d37c:	jne    0x40d354
  40d37e:	mov    eax,DWORD PTR [edi+0xd4]
  40d384:	add    eax,0xb4
  40d389:	push   eax
  40d38a:	call   esi
  40d38c:	pop    esi
  40d38d:	pop    ebx
  40d38e:	mov    eax,edi
  40d390:	pop    edi
  40d391:	pop    ebp
  40d392:	ret    
  40d393:	mov    edi,edi
  40d395:	push   ebp
  40d396:	mov    ebp,esp
  40d398:	push   ebx
  40d399:	push   esi
  40d39a:	mov    esi,DWORD PTR [ebp+0x8]
  40d39d:	mov    eax,DWORD PTR [esi+0xbc]
  40d3a3:	xor    ebx,ebx
  40d3a5:	push   edi
  40d3a6:	cmp    eax,ebx
  40d3a8:	je     0x40d419
  40d3aa:	cmp    eax,0x44bc80
  40d3af:	je     0x40d419
  40d3b1:	mov    eax,DWORD PTR [esi+0xb0]
  40d3b7:	cmp    eax,ebx
  40d3b9:	je     0x40d419
  40d3bb:	cmp    DWORD PTR [eax],ebx
  40d3bd:	jne    0x40d419
  40d3bf:	mov    eax,DWORD PTR [esi+0xb8]
  40d3c5:	cmp    eax,ebx
  40d3c7:	je     0x40d3e0
  40d3c9:	cmp    DWORD PTR [eax],ebx
  40d3cb:	jne    0x40d3e0
  40d3cd:	push   eax
  40d3ce:	call   0x404391
  40d3d3:	push   DWORD PTR [esi+0xbc]
  40d3d9:	call   0x40d16d
  40d3de:	pop    ecx
  40d3df:	pop    ecx
  40d3e0:	mov    eax,DWORD PTR [esi+0xb4]
  40d3e6:	cmp    eax,ebx
  40d3e8:	je     0x40d401
  40d3ea:	cmp    DWORD PTR [eax],ebx
  40d3ec:	jne    0x40d401
  40d3ee:	push   eax
  40d3ef:	call   0x404391
  40d3f4:	push   DWORD PTR [esi+0xbc]
  40d3fa:	call   0x40d104
  40d3ff:	pop    ecx
  40d400:	pop    ecx
  40d401:	push   DWORD PTR [esi+0xb0]
  40d407:	call   0x404391
  40d40c:	push   DWORD PTR [esi+0xbc]
  40d412:	call   0x404391
  40d417:	pop    ecx
  40d418:	pop    ecx
  40d419:	mov    eax,DWORD PTR [esi+0xc0]
  40d41f:	cmp    eax,ebx
  40d421:	je     0x40d467
  40d423:	cmp    DWORD PTR [eax],ebx
  40d425:	jne    0x40d467
  40d427:	mov    eax,DWORD PTR [esi+0xc4]
  40d42d:	sub    eax,0xfe
  40d432:	push   eax
  40d433:	call   0x404391
  40d438:	mov    eax,DWORD PTR [esi+0xcc]
  40d43e:	mov    edi,0x80
  40d443:	sub    eax,edi
  40d445:	push   eax
  40d446:	call   0x404391
  40d44b:	mov    eax,DWORD PTR [esi+0xd0]
  40d451:	sub    eax,edi
  40d453:	push   eax
  40d454:	call   0x404391
  40d459:	push   DWORD PTR [esi+0xc0]
  40d45f:	call   0x404391
  40d464:	add    esp,0x10
  40d467:	mov    eax,DWORD PTR [esi+0xd4]
  40d46d:	cmp    eax,0x44ba18
  40d472:	je     0x40d48f
  40d474:	cmp    DWORD PTR [eax+0xb4],ebx
  40d47a:	jne    0x40d48f
  40d47c:	push   eax
  40d47d:	call   0x40cd8d
  40d482:	push   DWORD PTR [esi+0xd4]
  40d488:	call   0x404391
  40d48d:	pop    ecx
  40d48e:	pop    ecx
  40d48f:	lea    edi,[esi+0x50]
  40d492:	mov    DWORD PTR [ebp+0x8],0x6
  40d499:	cmp    DWORD PTR [edi-0x8],0x44ba14
  40d4a0:	je     0x40d4b3
  40d4a2:	mov    eax,DWORD PTR [edi]
  40d4a4:	cmp    eax,ebx
  40d4a6:	je     0x40d4b3
  40d4a8:	cmp    DWORD PTR [eax],ebx
  40d4aa:	jne    0x40d4b3
  40d4ac:	push   eax
  40d4ad:	call   0x404391
  40d4b2:	pop    ecx
  40d4b3:	cmp    DWORD PTR [edi-0x4],ebx
  40d4b6:	je     0x40d4ca
  40d4b8:	mov    eax,DWORD PTR [edi+0x4]
  40d4bb:	cmp    eax,ebx
  40d4bd:	je     0x40d4ca
  40d4bf:	cmp    DWORD PTR [eax],ebx
  40d4c1:	jne    0x40d4ca
  40d4c3:	push   eax
  40d4c4:	call   0x404391
  40d4c9:	pop    ecx
  40d4ca:	add    edi,0x10
  40d4cd:	dec    DWORD PTR [ebp+0x8]
  40d4d0:	jne    0x40d499
  40d4d2:	push   esi
  40d4d3:	call   0x404391
  40d4d8:	pop    ecx
  40d4d9:	pop    edi
  40d4da:	pop    esi
  40d4db:	pop    ebx
  40d4dc:	pop    ebp
  40d4dd:	ret    
  40d4de:	mov    edi,edi
  40d4e0:	push   ebp
  40d4e1:	mov    ebp,esp
  40d4e3:	push   edi
  40d4e4:	mov    edi,DWORD PTR [ebp+0xc]
  40d4e7:	test   edi,edi
  40d4e9:	je     0x40d526
  40d4eb:	mov    eax,DWORD PTR [ebp+0x8]
  40d4ee:	test   eax,eax
  40d4f0:	je     0x40d526
  40d4f2:	push   esi
  40d4f3:	mov    esi,DWORD PTR [eax]
  40d4f5:	cmp    esi,edi
  40d4f7:	je     0x40d521
  40d4f9:	push   edi
  40d4fa:	mov    DWORD PTR [eax],edi
  40d4fc:	call   0x40d26b
  40d501:	pop    ecx
  40d502:	test   esi,esi
  40d504:	je     0x40d521
  40d506:	push   esi
  40d507:	call   0x40d2fa
  40d50c:	cmp    DWORD PTR [esi],0x0
  40d50f:	pop    ecx
  40d510:	jne    0x40d521
  40d512:	cmp    esi,0x44bb80
  40d518:	je     0x40d521
  40d51a:	push   esi
  40d51b:	call   0x40d393
  40d520:	pop    ecx
  40d521:	mov    eax,edi
  40d523:	pop    esi
  40d524:	jmp    0x40d528
  40d526:	xor    eax,eax
  40d528:	pop    edi
  40d529:	pop    ebp
  40d52a:	ret    
  40d52b:	push   0xc
  40d52d:	push   0x4494a0
  40d532:	call   0x4076f0
  40d537:	call   0x40c90a
  40d53c:	mov    esi,eax
  40d53e:	mov    eax,ds:0x44bc64
  40d543:	test   DWORD PTR [esi+0x70],eax
  40d546:	je     0x40d56a
  40d548:	cmp    DWORD PTR [esi+0x6c],0x0
  40d54c:	je     0x40d56a
  40d54e:	call   0x40c90a
  40d553:	mov    esi,DWORD PTR [eax+0x6c]
  40d556:	test   esi,esi
  40d558:	jne    0x40d562
  40d55a:	push   0x20
  40d55c:	call   0x407dd8
  40d561:	pop    ecx
  40d562:	mov    eax,esi
  40d564:	call   0x407735
  40d569:	ret    
  40d56a:	push   0xc
  40d56c:	call   0x407f70
  40d571:	pop    ecx
  40d572:	and    DWORD PTR [ebp-0x4],0x0
  40d576:	push   DWORD PTR ds:0x44bc58
  40d57c:	add    esi,0x6c
  40d57f:	push   esi
  40d580:	call   0x40d4de
  40d585:	pop    ecx
  40d586:	pop    ecx
  40d587:	mov    DWORD PTR [ebp-0x1c],eax
  40d58a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40d591:	call   0x40d598
  40d596:	jmp    0x40d556
  40d598:	push   0xc
  40d59a:	call   0x407e97
  40d59f:	pop    ecx
  40d5a0:	mov    esi,DWORD PTR [ebp-0x1c]
  40d5a3:	ret    
  40d5a4:	sub    eax,0x3a4
  40d5a9:	je     0x40d5cd
  40d5ab:	sub    eax,0x4
  40d5ae:	je     0x40d5c7
  40d5b0:	sub    eax,0xd
  40d5b3:	je     0x40d5c1
  40d5b5:	dec    eax
  40d5b6:	je     0x40d5bb
  40d5b8:	xor    eax,eax
  40d5ba:	ret    
  40d5bb:	mov    eax,0x404
  40d5c0:	ret    
  40d5c1:	mov    eax,0x412
  40d5c6:	ret    
  40d5c7:	mov    eax,0x804
  40d5cc:	ret    
  40d5cd:	mov    eax,0x411
  40d5d2:	ret    
  40d5d3:	mov    edi,edi
  40d5d5:	push   esi
  40d5d6:	push   edi
  40d5d7:	mov    esi,eax
  40d5d9:	push   0x101
  40d5de:	xor    edi,edi
  40d5e0:	lea    eax,[esi+0x1c]
  40d5e3:	push   edi
  40d5e4:	push   eax
  40d5e5:	call   0x40a550
  40d5ea:	xor    eax,eax
  40d5ec:	movzx  ecx,ax
  40d5ef:	mov    eax,ecx
  40d5f1:	mov    DWORD PTR [esi+0x4],edi
  40d5f4:	mov    DWORD PTR [esi+0x8],edi
  40d5f7:	mov    DWORD PTR [esi+0xc],edi
  40d5fa:	shl    ecx,0x10
  40d5fd:	or     eax,ecx
  40d5ff:	lea    edi,[esi+0x10]
  40d602:	stos   DWORD PTR es:[edi],eax
  40d603:	stos   DWORD PTR es:[edi],eax
  40d604:	stos   DWORD PTR es:[edi],eax
  40d605:	mov    ecx,0x44bcd8
  40d60a:	add    esp,0xc
  40d60d:	lea    eax,[esi+0x1c]
  40d610:	sub    ecx,esi
  40d612:	mov    edi,0x101
  40d617:	mov    dl,BYTE PTR [ecx+eax*1]
  40d61a:	mov    BYTE PTR [eax],dl
  40d61c:	inc    eax
  40d61d:	dec    edi
  40d61e:	jne    0x40d617
  40d620:	lea    eax,[esi+0x11d]
  40d626:	mov    esi,0x100
  40d62b:	mov    dl,BYTE PTR [eax+ecx*1]
  40d62e:	mov    BYTE PTR [eax],dl
  40d630:	inc    eax
  40d631:	dec    esi
  40d632:	jne    0x40d62b
  40d634:	pop    edi
  40d635:	pop    esi
  40d636:	ret    
  40d637:	mov    edi,edi
  40d639:	push   ebp
  40d63a:	mov    ebp,esp
  40d63c:	sub    esp,0x51c
  40d642:	mov    eax,ds:0x44b470
  40d647:	xor    eax,ebp
  40d649:	mov    DWORD PTR [ebp-0x4],eax
  40d64c:	push   ebx
  40d64d:	push   edi
  40d64e:	lea    eax,[ebp-0x518]
  40d654:	push   eax
  40d655:	push   DWORD PTR [esi+0x4]
  40d658:	call   DWORD PTR ds:0x44318c
  40d65e:	mov    edi,0x100
  40d663:	test   eax,eax
  40d665:	je     0x40d767
  40d66b:	xor    eax,eax
  40d66d:	mov    BYTE PTR [ebp+eax*1-0x104],al
  40d674:	inc    eax
  40d675:	cmp    eax,edi
  40d677:	jb     0x40d66d
  40d679:	mov    al,BYTE PTR [ebp-0x512]
  40d67f:	mov    BYTE PTR [ebp-0x104],0x20
  40d686:	test   al,al
  40d688:	je     0x40d6ba
  40d68a:	lea    ebx,[ebp-0x511]
  40d690:	movzx  ecx,al
  40d693:	movzx  eax,BYTE PTR [ebx]
  40d696:	cmp    ecx,eax
  40d698:	ja     0x40d6b0
  40d69a:	sub    eax,ecx
  40d69c:	inc    eax
  40d69d:	push   eax
  40d69e:	lea    edx,[ebp+ecx*1-0x104]
  40d6a5:	push   0x20
  40d6a7:	push   edx
  40d6a8:	call   0x40a550
  40d6ad:	add    esp,0xc
  40d6b0:	mov    al,BYTE PTR [ebx+0x1]
  40d6b3:	add    ebx,0x2
  40d6b6:	test   al,al
  40d6b8:	jne    0x40d690
  40d6ba:	push   0x0
  40d6bc:	push   DWORD PTR [esi+0xc]
  40d6bf:	lea    eax,[ebp-0x504]
  40d6c5:	push   DWORD PTR [esi+0x4]
  40d6c8:	push   eax
  40d6c9:	push   edi
  40d6ca:	lea    eax,[ebp-0x104]
  40d6d0:	push   eax
  40d6d1:	push   0x1
  40d6d3:	push   0x0
  40d6d5:	call   0x40ddbd
  40d6da:	xor    ebx,ebx
  40d6dc:	push   ebx
  40d6dd:	push   DWORD PTR [esi+0x4]
  40d6e0:	lea    eax,[ebp-0x204]
  40d6e6:	push   edi
  40d6e7:	push   eax
  40d6e8:	push   edi
  40d6e9:	lea    eax,[ebp-0x104]
  40d6ef:	push   eax
  40d6f0:	push   edi
  40d6f1:	push   DWORD PTR [esi+0xc]
  40d6f4:	push   ebx
  40d6f5:	call   0x406d7a
  40d6fa:	add    esp,0x44
  40d6fd:	push   ebx
  40d6fe:	push   DWORD PTR [esi+0x4]
  40d701:	lea    eax,[ebp-0x304]
  40d707:	push   edi
  40d708:	push   eax
  40d709:	push   edi
  40d70a:	lea    eax,[ebp-0x104]
  40d710:	push   eax
  40d711:	push   0x200
  40d716:	push   DWORD PTR [esi+0xc]
  40d719:	push   ebx
  40d71a:	call   0x406d7a
  40d71f:	add    esp,0x24
  40d722:	xor    eax,eax
  40d724:	movzx  ecx,WORD PTR [ebp+eax*2-0x504]
  40d72c:	test   cl,0x1
  40d72f:	je     0x40d73f
  40d731:	or     BYTE PTR [esi+eax*1+0x1d],0x10
  40d736:	mov    cl,BYTE PTR [ebp+eax*1-0x204]
  40d73d:	jmp    0x40d750
  40d73f:	test   cl,0x2
  40d742:	je     0x40d759
  40d744:	or     BYTE PTR [esi+eax*1+0x1d],0x20
  40d749:	mov    cl,BYTE PTR [ebp+eax*1-0x304]
  40d750:	mov    BYTE PTR [esi+eax*1+0x11d],cl
  40d757:	jmp    0x40d760
  40d759:	mov    BYTE PTR [esi+eax*1+0x11d],bl
  40d760:	inc    eax
  40d761:	cmp    eax,edi
  40d763:	jb     0x40d724
  40d765:	jmp    0x40d7b9
  40d767:	lea    eax,[esi+0x11d]
  40d76d:	mov    DWORD PTR [ebp-0x51c],0xffffff9f
  40d777:	xor    ecx,ecx
  40d779:	sub    DWORD PTR [ebp-0x51c],eax
  40d77f:	mov    edx,DWORD PTR [ebp-0x51c]
  40d785:	lea    eax,[esi+ecx*1+0x11d]
  40d78c:	add    edx,eax
  40d78e:	lea    ebx,[edx+0x20]
  40d791:	cmp    ebx,0x19
  40d794:	ja     0x40d7a0
  40d796:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
  40d79b:	lea    edx,[ecx+0x20]
  40d79e:	jmp    0x40d7ad
  40d7a0:	cmp    edx,0x19
  40d7a3:	ja     0x40d7b1
  40d7a5:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
  40d7aa:	lea    edx,[ecx-0x20]
  40d7ad:	mov    BYTE PTR [eax],dl
  40d7af:	jmp    0x40d7b4
  40d7b1:	mov    BYTE PTR [eax],0x0
  40d7b4:	inc    ecx
  40d7b5:	cmp    ecx,edi
  40d7b7:	jb     0x40d77f
  40d7b9:	mov    ecx,DWORD PTR [ebp-0x4]
  40d7bc:	pop    edi
  40d7bd:	xor    ecx,ebp
  40d7bf:	pop    ebx
  40d7c0:	call   0x403edd
  40d7c5:	leave  
  40d7c6:	ret    
  40d7c7:	push   0xc
  40d7c9:	push   0x4494c0
  40d7ce:	call   0x4076f0
  40d7d3:	call   0x40c90a
  40d7d8:	mov    edi,eax
  40d7da:	mov    eax,ds:0x44bc64
  40d7df:	test   DWORD PTR [edi+0x70],eax
  40d7e2:	je     0x40d801
  40d7e4:	cmp    DWORD PTR [edi+0x6c],0x0
  40d7e8:	je     0x40d801
  40d7ea:	mov    esi,DWORD PTR [edi+0x68]
  40d7ed:	test   esi,esi
  40d7ef:	jne    0x40d7f9
  40d7f1:	push   0x20
  40d7f3:	call   0x407dd8
  40d7f8:	pop    ecx
  40d7f9:	mov    eax,esi
  40d7fb:	call   0x407735
  40d800:	ret    
  40d801:	push   0xd
  40d803:	call   0x407f70
  40d808:	pop    ecx
  40d809:	and    DWORD PTR [ebp-0x4],0x0
  40d80d:	mov    esi,DWORD PTR [edi+0x68]
  40d810:	mov    DWORD PTR [ebp-0x1c],esi
  40d813:	cmp    esi,DWORD PTR ds:0x44c100
  40d819:	je     0x40d851
  40d81b:	test   esi,esi
  40d81d:	je     0x40d839
  40d81f:	push   esi
  40d820:	call   DWORD PTR ds:0x4431c0
  40d826:	test   eax,eax
  40d828:	jne    0x40d839
  40d82a:	cmp    esi,0x44bcd8
  40d830:	je     0x40d839
  40d832:	push   esi
  40d833:	call   0x404391
  40d838:	pop    ecx
  40d839:	mov    eax,ds:0x44c100
  40d83e:	mov    DWORD PTR [edi+0x68],eax
  40d841:	mov    esi,DWORD PTR ds:0x44c100
  40d847:	mov    DWORD PTR [ebp-0x1c],esi
  40d84a:	push   esi
  40d84b:	call   DWORD PTR ds:0x4431bc
  40d851:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40d858:	call   0x40d862
  40d85d:	jmp    0x40d7ed
  40d85f:	mov    esi,DWORD PTR [ebp-0x1c]
  40d862:	push   0xd
  40d864:	call   0x407e97
  40d869:	pop    ecx
  40d86a:	ret    
  40d86b:	mov    edi,edi
  40d86d:	push   ebp
  40d86e:	mov    ebp,esp
  40d870:	sub    esp,0x10
  40d873:	push   ebx
  40d874:	xor    ebx,ebx
  40d876:	push   ebx
  40d877:	lea    ecx,[ebp-0x10]
  40d87a:	call   0x406b0c
  40d87f:	mov    DWORD PTR ds:0x44e794,ebx
  40d885:	cmp    esi,0xfffffffe
  40d888:	jne    0x40d8a8
  40d88a:	mov    DWORD PTR ds:0x44e794,0x1
  40d894:	call   DWORD PTR ds:0x443094
  40d89a:	cmp    BYTE PTR [ebp-0x4],bl
  40d89d:	je     0x40d8e4
  40d89f:	mov    ecx,DWORD PTR [ebp-0x8]
  40d8a2:	and    DWORD PTR [ecx+0x70],0xfffffffd
  40d8a6:	jmp    0x40d8e4
  40d8a8:	cmp    esi,0xfffffffd
  40d8ab:	jne    0x40d8bf
  40d8ad:	mov    DWORD PTR ds:0x44e794,0x1
  40d8b7:	call   DWORD PTR ds:0x443098
  40d8bd:	jmp    0x40d89a
  40d8bf:	cmp    esi,0xfffffffc
  40d8c2:	jne    0x40d8d6
  40d8c4:	mov    eax,DWORD PTR [ebp-0x10]
  40d8c7:	mov    eax,DWORD PTR [eax+0x4]
  40d8ca:	mov    DWORD PTR ds:0x44e794,0x1
  40d8d4:	jmp    0x40d89a
  40d8d6:	cmp    BYTE PTR [ebp-0x4],bl
  40d8d9:	je     0x40d8e2
  40d8db:	mov    eax,DWORD PTR [ebp-0x8]
  40d8de:	and    DWORD PTR [eax+0x70],0xfffffffd
  40d8e2:	mov    eax,esi
  40d8e4:	pop    ebx
  40d8e5:	leave  
  40d8e6:	ret    
  40d8e7:	mov    edi,edi
  40d8e9:	push   ebp
  40d8ea:	mov    ebp,esp
  40d8ec:	sub    esp,0x20
  40d8ef:	mov    eax,ds:0x44b470
  40d8f4:	xor    eax,ebp
  40d8f6:	mov    DWORD PTR [ebp-0x4],eax
  40d8f9:	push   ebx
  40d8fa:	mov    ebx,DWORD PTR [ebp+0xc]
  40d8fd:	push   esi
  40d8fe:	mov    esi,DWORD PTR [ebp+0x8]
  40d901:	push   edi
  40d902:	call   0x40d86b
  40d907:	mov    edi,eax
  40d909:	xor    esi,esi
  40d90b:	mov    DWORD PTR [ebp+0x8],edi
  40d90e:	cmp    edi,esi
  40d910:	jne    0x40d920
  40d912:	mov    eax,ebx
  40d914:	call   0x40d5d3
  40d919:	xor    eax,eax
  40d91b:	jmp    0x40dac1
  40d920:	mov    DWORD PTR [ebp-0x1c],esi
  40d923:	xor    eax,eax
  40d925:	cmp    DWORD PTR [eax+0x44c108],edi
  40d92b:	je     0x40d9c2
  40d931:	inc    DWORD PTR [ebp-0x1c]
  40d934:	add    eax,0x30
  40d937:	cmp    eax,0xf0
  40d93c:	jb     0x40d925
  40d93e:	cmp    edi,0xfde8
  40d944:	je     0x40dabe
  40d94a:	cmp    edi,0xfde9
  40d950:	je     0x40dabe
  40d956:	movzx  eax,di
  40d959:	push   eax
  40d95a:	call   DWORD PTR ds:0x443090
  40d960:	test   eax,eax
  40d962:	je     0x40dabe
  40d968:	lea    eax,[ebp-0x18]
  40d96b:	push   eax
  40d96c:	push   edi
  40d96d:	call   DWORD PTR ds:0x44318c
  40d973:	test   eax,eax
  40d975:	je     0x40dab2
  40d97b:	push   0x101
  40d980:	lea    eax,[ebx+0x1c]
  40d983:	push   esi
  40d984:	push   eax
  40d985:	call   0x40a550
  40d98a:	xor    edx,edx
  40d98c:	inc    edx
  40d98d:	add    esp,0xc
  40d990:	mov    DWORD PTR [ebx+0x4],edi
  40d993:	mov    DWORD PTR [ebx+0xc],esi
  40d996:	cmp    DWORD PTR [ebp-0x18],edx
  40d999:	jbe    0x40da9b
  40d99f:	cmp    BYTE PTR [ebp-0x12],0x0
  40d9a3:	je     0x40da7c
  40d9a9:	lea    esi,[ebp-0x11]
  40d9ac:	mov    cl,BYTE PTR [esi]
  40d9ae:	test   cl,cl
  40d9b0:	je     0x40da7c
  40d9b6:	movzx  eax,BYTE PTR [esi-0x1]
  40d9ba:	movzx  ecx,cl
  40d9bd:	jmp    0x40da6b
  40d9c2:	push   0x101
  40d9c7:	lea    eax,[ebx+0x1c]
  40d9ca:	push   esi
  40d9cb:	push   eax
  40d9cc:	call   0x40a550
  40d9d1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d9d4:	add    esp,0xc
  40d9d7:	imul   ecx,ecx,0x30
  40d9da:	mov    DWORD PTR [ebp-0x20],esi
  40d9dd:	lea    esi,[ecx+0x44c118]
  40d9e3:	mov    DWORD PTR [ebp-0x1c],esi
  40d9e6:	jmp    0x40da13
  40d9e8:	mov    al,BYTE PTR [esi+0x1]
  40d9eb:	test   al,al
  40d9ed:	je     0x40da18
  40d9ef:	movzx  edi,BYTE PTR [esi]
  40d9f2:	movzx  eax,al
  40d9f5:	jmp    0x40da09
  40d9f7:	mov    eax,DWORD PTR [ebp-0x20]
  40d9fa:	mov    al,BYTE PTR [eax+0x44c104]
  40da00:	or     BYTE PTR [ebx+edi*1+0x1d],al
  40da04:	movzx  eax,BYTE PTR [esi+0x1]
  40da08:	inc    edi
  40da09:	cmp    edi,eax
  40da0b:	jbe    0x40d9f7
  40da0d:	mov    edi,DWORD PTR [ebp+0x8]
  40da10:	add    esi,0x2
  40da13:	cmp    BYTE PTR [esi],0x0
  40da16:	jne    0x40d9e8
  40da18:	mov    esi,DWORD PTR [ebp-0x1c]
  40da1b:	inc    DWORD PTR [ebp-0x20]
  40da1e:	add    esi,0x8
  40da21:	cmp    DWORD PTR [ebp-0x20],0x4
  40da25:	mov    DWORD PTR [ebp-0x1c],esi
  40da28:	jb     0x40da13
  40da2a:	mov    eax,edi
  40da2c:	mov    DWORD PTR [ebx+0x4],edi
  40da2f:	mov    DWORD PTR [ebx+0x8],0x1
  40da36:	call   0x40d5a4
  40da3b:	push   0x6
  40da3d:	mov    DWORD PTR [ebx+0xc],eax
  40da40:	lea    eax,[ebx+0x10]
  40da43:	lea    ecx,[ecx+0x44c10c]
  40da49:	pop    edx
  40da4a:	mov    si,WORD PTR [ecx]
  40da4d:	mov    WORD PTR [eax],si
  40da50:	add    ecx,0x2
  40da53:	add    eax,0x2
  40da56:	dec    edx
  40da57:	jne    0x40da4a
  40da59:	mov    esi,ebx
  40da5b:	call   0x40d637
  40da60:	jmp    0x40d919
  40da65:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
  40da6a:	inc    eax
  40da6b:	cmp    eax,ecx
  40da6d:	jbe    0x40da65
  40da6f:	add    esi,0x2
  40da72:	cmp    BYTE PTR [esi-0x1],0x0
  40da76:	jne    0x40d9ac
  40da7c:	lea    eax,[ebx+0x1e]
  40da7f:	mov    ecx,0xfe
  40da84:	or     BYTE PTR [eax],0x8
  40da87:	inc    eax
  40da88:	dec    ecx
  40da89:	jne    0x40da84
  40da8b:	mov    eax,DWORD PTR [ebx+0x4]
  40da8e:	call   0x40d5a4
  40da93:	mov    DWORD PTR [ebx+0xc],eax
  40da96:	mov    DWORD PTR [ebx+0x8],edx
  40da99:	jmp    0x40da9e
  40da9b:	mov    DWORD PTR [ebx+0x8],esi
  40da9e:	xor    eax,eax
  40daa0:	movzx  ecx,ax
  40daa3:	mov    eax,ecx
  40daa5:	shl    ecx,0x10
  40daa8:	or     eax,ecx
  40daaa:	lea    edi,[ebx+0x10]
  40daad:	stos   DWORD PTR es:[edi],eax
  40daae:	stos   DWORD PTR es:[edi],eax
  40daaf:	stos   DWORD PTR es:[edi],eax
  40dab0:	jmp    0x40da59
  40dab2:	cmp    DWORD PTR ds:0x44e794,esi
  40dab8:	jne    0x40d912
  40dabe:	or     eax,0xffffffff
  40dac1:	mov    ecx,DWORD PTR [ebp-0x4]
  40dac4:	pop    edi
  40dac5:	pop    esi
  40dac6:	xor    ecx,ebp
  40dac8:	pop    ebx
  40dac9:	call   0x403edd
  40dace:	leave  
  40dacf:	ret    
  40dad0:	push   0x14
  40dad2:	push   0x4494e0
  40dad7:	call   0x4076f0
  40dadc:	or     DWORD PTR [ebp-0x20],0xffffffff
  40dae0:	call   0x40c90a
  40dae5:	mov    edi,eax
  40dae7:	mov    DWORD PTR [ebp-0x24],edi
  40daea:	call   0x40d7c7
  40daef:	mov    ebx,DWORD PTR [edi+0x68]
  40daf2:	mov    esi,DWORD PTR [ebp+0x8]
  40daf5:	call   0x40d86b
  40dafa:	mov    DWORD PTR [ebp+0x8],eax
  40dafd:	cmp    eax,DWORD PTR [ebx+0x4]
  40db00:	je     0x40dc5d
  40db06:	push   0x220
  40db0b:	call   0x406e65
  40db10:	pop    ecx
  40db11:	mov    ebx,eax
  40db13:	test   ebx,ebx
  40db15:	je     0x40dc61
  40db1b:	mov    ecx,0x88
  40db20:	mov    esi,DWORD PTR [edi+0x68]
  40db23:	mov    edi,ebx
  40db25:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db27:	and    DWORD PTR [ebx],0x0
  40db2a:	push   ebx
  40db2b:	push   DWORD PTR [ebp+0x8]
  40db2e:	call   0x40d8e7
  40db33:	pop    ecx
  40db34:	pop    ecx
  40db35:	mov    DWORD PTR [ebp-0x20],eax
  40db38:	test   eax,eax
  40db3a:	jne    0x40dc3c
  40db40:	mov    esi,DWORD PTR [ebp-0x24]
  40db43:	push   DWORD PTR [esi+0x68]
  40db46:	call   DWORD PTR ds:0x4431c0
  40db4c:	test   eax,eax
  40db4e:	jne    0x40db61
  40db50:	mov    eax,DWORD PTR [esi+0x68]
  40db53:	cmp    eax,0x44bcd8
  40db58:	je     0x40db61
  40db5a:	push   eax
  40db5b:	call   0x404391
  40db60:	pop    ecx
  40db61:	mov    DWORD PTR [esi+0x68],ebx
  40db64:	push   ebx
  40db65:	mov    edi,DWORD PTR ds:0x4431bc
  40db6b:	call   edi
  40db6d:	test   BYTE PTR [esi+0x70],0x2
  40db71:	jne    0x40dc61
  40db77:	test   BYTE PTR ds:0x44bc64,0x1
  40db7e:	jne    0x40dc61
  40db84:	push   0xd
  40db86:	call   0x407f70
  40db8b:	pop    ecx
  40db8c:	and    DWORD PTR [ebp-0x4],0x0
  40db90:	mov    eax,DWORD PTR [ebx+0x4]
  40db93:	mov    ds:0x44e7a4,eax
  40db98:	mov    eax,DWORD PTR [ebx+0x8]
  40db9b:	mov    ds:0x44e7a8,eax
  40dba0:	mov    eax,DWORD PTR [ebx+0xc]
  40dba3:	mov    ds:0x44e7ac,eax
  40dba8:	xor    eax,eax
  40dbaa:	mov    DWORD PTR [ebp-0x1c],eax
  40dbad:	cmp    eax,0x5
  40dbb0:	jge    0x40dbc2
  40dbb2:	mov    cx,WORD PTR [ebx+eax*2+0x10]
  40dbb7:	mov    WORD PTR [eax*2+0x44e798],cx
  40dbbf:	inc    eax
  40dbc0:	jmp    0x40dbaa
  40dbc2:	xor    eax,eax
  40dbc4:	mov    DWORD PTR [ebp-0x1c],eax
  40dbc7:	cmp    eax,0x101
  40dbcc:	jge    0x40dbdb
  40dbce:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
  40dbd2:	mov    BYTE PTR [eax+0x44bef8],cl
  40dbd8:	inc    eax
  40dbd9:	jmp    0x40dbc4
  40dbdb:	xor    eax,eax
  40dbdd:	mov    DWORD PTR [ebp-0x1c],eax
  40dbe0:	cmp    eax,0x100
  40dbe5:	jge    0x40dbf7
  40dbe7:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
  40dbee:	mov    BYTE PTR [eax+0x44c000],cl
  40dbf4:	inc    eax
  40dbf5:	jmp    0x40dbdd
  40dbf7:	push   DWORD PTR ds:0x44c100
  40dbfd:	call   DWORD PTR ds:0x4431c0
  40dc03:	test   eax,eax
  40dc05:	jne    0x40dc1a
  40dc07:	mov    eax,ds:0x44c100
  40dc0c:	cmp    eax,0x44bcd8
  40dc11:	je     0x40dc1a
  40dc13:	push   eax
  40dc14:	call   0x404391
  40dc19:	pop    ecx
  40dc1a:	mov    DWORD PTR ds:0x44c100,ebx
  40dc20:	push   ebx
  40dc21:	call   edi
  40dc23:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40dc2a:	call   0x40dc31
  40dc2f:	jmp    0x40dc61
  40dc31:	push   0xd
  40dc33:	call   0x407e97
  40dc38:	pop    ecx
  40dc39:	ret    
  40dc3a:	jmp    0x40dc61
  40dc3c:	cmp    eax,0xffffffff
  40dc3f:	jne    0x40dc61
  40dc41:	cmp    ebx,0x44bcd8
  40dc47:	je     0x40dc50
  40dc49:	push   ebx
  40dc4a:	call   0x404391
  40dc4f:	pop    ecx
  40dc50:	call   0x40769b
  40dc55:	mov    DWORD PTR [eax],0x16
  40dc5b:	jmp    0x40dc61
  40dc5d:	and    DWORD PTR [ebp-0x20],0x0
  40dc61:	mov    eax,DWORD PTR [ebp-0x20]
  40dc64:	call   0x407735
  40dc69:	ret    
  40dc6a:	cmp    DWORD PTR ds:0x450774,0x0
  40dc71:	jne    0x40dc85
  40dc73:	push   0xfffffffd
  40dc75:	call   0x40dad0
  40dc7a:	pop    ecx
  40dc7b:	mov    DWORD PTR ds:0x450774,0x1
  40dc85:	xor    eax,eax
  40dc87:	ret    
  40dc88:	int3   
  40dc89:	int3   
  40dc8a:	int3   
  40dc8b:	int3   
  40dc8c:	int3   
  40dc8d:	int3   
  40dc8e:	int3   
  40dc8f:	int3   
  40dc90:	push   ebp
  40dc91:	mov    ebp,esp
  40dc93:	push   esi
  40dc94:	xor    eax,eax
  40dc96:	push   eax
  40dc97:	push   eax
  40dc98:	push   eax
  40dc99:	push   eax
  40dc9a:	push   eax
  40dc9b:	push   eax
  40dc9c:	push   eax
  40dc9d:	push   eax
  40dc9e:	mov    edx,DWORD PTR [ebp+0xc]
  40dca1:	lea    ecx,[ecx+0x0]
  40dca4:	mov    al,BYTE PTR [edx]
  40dca6:	or     al,al
  40dca8:	je     0x40dcb3
  40dcaa:	add    edx,0x1
  40dcad:	bts    DWORD PTR [esp],eax
  40dcb1:	jmp    0x40dca4
  40dcb3:	mov    esi,DWORD PTR [ebp+0x8]
  40dcb6:	or     ecx,0xffffffff
  40dcb9:	lea    ecx,[ecx+0x0]
  40dcbc:	add    ecx,0x1
  40dcbf:	mov    al,BYTE PTR [esi]
  40dcc1:	or     al,al
  40dcc3:	je     0x40dcce
  40dcc5:	add    esi,0x1
  40dcc8:	bt     DWORD PTR [esp],eax
  40dccc:	jae    0x40dcbc
  40dcce:	mov    eax,ecx
  40dcd0:	add    esp,0x20
  40dcd3:	pop    esi
  40dcd4:	leave  
  40dcd5:	ret    
  40dcd6:	mov    edi,edi
  40dcd8:	push   ebp
  40dcd9:	mov    ebp,esp
  40dcdb:	push   ecx
  40dcdc:	push   ecx
  40dcdd:	mov    eax,ds:0x44b470
  40dce2:	xor    eax,ebp
  40dce4:	mov    DWORD PTR [ebp-0x4],eax
  40dce7:	push   ebx
  40dce8:	xor    ebx,ebx
  40dcea:	push   esi
  40dceb:	push   edi
  40dcec:	mov    DWORD PTR [ebp-0x8],ebx
  40dcef:	cmp    DWORD PTR [ebp+0x1c],ebx
  40dcf2:	jne    0x40dcff
  40dcf4:	mov    eax,DWORD PTR [ebp+0x8]
  40dcf7:	mov    eax,DWORD PTR [eax]
  40dcf9:	mov    eax,DWORD PTR [eax+0x4]
  40dcfc:	mov    DWORD PTR [ebp+0x1c],eax
  40dcff:	mov    esi,DWORD PTR ds:0x443190
  40dd05:	xor    eax,eax
  40dd07:	cmp    DWORD PTR [ebp+0x20],ebx
  40dd0a:	push   ebx
  40dd0b:	push   ebx
  40dd0c:	push   DWORD PTR [ebp+0x14]
  40dd0f:	setne  al
  40dd12:	push   DWORD PTR [ebp+0x10]
  40dd15:	lea    eax,[eax*8+0x1]
  40dd1c:	push   eax
  40dd1d:	push   DWORD PTR [ebp+0x1c]
  40dd20:	call   esi
  40dd22:	mov    edi,eax
  40dd24:	cmp    edi,ebx
  40dd26:	jne    0x40dd2c
  40dd28:	xor    eax,eax
  40dd2a:	jmp    0x40ddab
  40dd2c:	jle    0x40dd6a
  40dd2e:	cmp    edi,0x7ffffff0
  40dd34:	ja     0x40dd6a
  40dd36:	lea    eax,[edi+edi*1+0x8]
  40dd3a:	cmp    eax,0x400
  40dd3f:	ja     0x40dd54
  40dd41:	call   0x40dfc0
  40dd46:	mov    eax,esp
  40dd48:	cmp    eax,ebx
  40dd4a:	je     0x40dd68
  40dd4c:	mov    DWORD PTR [eax],0xcccc
  40dd52:	jmp    0x40dd65
  40dd54:	push   eax
  40dd55:	call   0x405d80
  40dd5a:	pop    ecx
  40dd5b:	cmp    eax,ebx
  40dd5d:	je     0x40dd68
  40dd5f:	mov    DWORD PTR [eax],0xdddd
  40dd65:	add    eax,0x8
  40dd68:	mov    ebx,eax
  40dd6a:	test   ebx,ebx
  40dd6c:	je     0x40dd28
  40dd6e:	lea    eax,[edi+edi*1]
  40dd71:	push   eax
  40dd72:	push   0x0
  40dd74:	push   ebx
  40dd75:	call   0x40a550
  40dd7a:	add    esp,0xc
  40dd7d:	push   edi
  40dd7e:	push   ebx
  40dd7f:	push   DWORD PTR [ebp+0x14]
  40dd82:	push   DWORD PTR [ebp+0x10]
  40dd85:	push   0x1
  40dd87:	push   DWORD PTR [ebp+0x1c]
  40dd8a:	call   esi
  40dd8c:	test   eax,eax
  40dd8e:	je     0x40dda1
  40dd90:	push   DWORD PTR [ebp+0x18]
  40dd93:	push   eax
  40dd94:	push   ebx
  40dd95:	push   DWORD PTR [ebp+0xc]
  40dd98:	call   DWORD PTR ds:0x4430d8
  40dd9e:	mov    DWORD PTR [ebp-0x8],eax
  40dda1:	push   ebx
  40dda2:	call   0x406aec
  40dda7:	mov    eax,DWORD PTR [ebp-0x8]
  40ddaa:	pop    ecx
  40ddab:	lea    esp,[ebp-0x14]
  40ddae:	pop    edi
  40ddaf:	pop    esi
  40ddb0:	pop    ebx
  40ddb1:	mov    ecx,DWORD PTR [ebp-0x4]
  40ddb4:	xor    ecx,ebp
  40ddb6:	call   0x403edd
  40ddbb:	leave  
  40ddbc:	ret    
  40ddbd:	mov    edi,edi
  40ddbf:	push   ebp
  40ddc0:	mov    ebp,esp
  40ddc2:	sub    esp,0x10
  40ddc5:	push   DWORD PTR [ebp+0x8]
  40ddc8:	lea    ecx,[ebp-0x10]
  40ddcb:	call   0x406b0c
  40ddd0:	push   DWORD PTR [ebp+0x24]
  40ddd3:	lea    eax,[ebp-0x10]
  40ddd6:	push   DWORD PTR [ebp+0x1c]
  40ddd9:	push   DWORD PTR [ebp+0x18]
  40dddc:	push   DWORD PTR [ebp+0x14]
  40dddf:	push   DWORD PTR [ebp+0x10]
  40dde2:	push   DWORD PTR [ebp+0xc]
  40dde5:	push   eax
  40dde6:	call   0x40dcd6
  40ddeb:	add    esp,0x1c
  40ddee:	cmp    BYTE PTR [ebp-0x4],0x0
  40ddf2:	je     0x40ddfb
  40ddf4:	mov    ecx,DWORD PTR [ebp-0x8]
  40ddf7:	and    DWORD PTR [ecx+0x70],0xfffffffd
  40ddfb:	leave  
  40ddfc:	ret    
  40ddfd:	int3   
  40ddfe:	int3   
  40ddff:	int3   
  40de00:	push   ebp
  40de01:	mov    ebp,esp
  40de03:	push   esi
  40de04:	xor    eax,eax
  40de06:	push   eax
  40de07:	push   eax
  40de08:	push   eax
  40de09:	push   eax
  40de0a:	push   eax
  40de0b:	push   eax
  40de0c:	push   eax
  40de0d:	push   eax
  40de0e:	mov    edx,DWORD PTR [ebp+0xc]
  40de11:	lea    ecx,[ecx+0x0]
  40de14:	mov    al,BYTE PTR [edx]
  40de16:	or     al,al
  40de18:	je     0x40de23
  40de1a:	add    edx,0x1
  40de1d:	bts    DWORD PTR [esp],eax
  40de21:	jmp    0x40de14
  40de23:	mov    esi,DWORD PTR [ebp+0x8]
  40de26:	mov    edi,edi
  40de28:	mov    al,BYTE PTR [esi]
  40de2a:	or     al,al
  40de2c:	je     0x40de3a
  40de2e:	add    esi,0x1
  40de31:	bt     DWORD PTR [esp],eax
  40de35:	jae    0x40de28
  40de37:	lea    eax,[esi-0x1]
  40de3a:	add    esp,0x20
  40de3d:	pop    esi
  40de3e:	leave  
  40de3f:	ret    
  40de40:	mov    edi,edi
  40de42:	push   ebp
  40de43:	mov    ebp,esp
  40de45:	xor    eax,eax
  40de47:	inc    eax
  40de48:	cmp    DWORD PTR [ebp+0x8],0x0
  40de4c:	jne    0x40de50
  40de4e:	xor    eax,eax
  40de50:	pop    ebp
  40de51:	ret    
  40de52:	int3   
  40de53:	int3   
  40de54:	int3   
  40de55:	int3   
  40de56:	int3   
  40de57:	int3   
  40de58:	int3   
  40de59:	int3   
  40de5a:	int3   
  40de5b:	int3   
  40de5c:	int3   
  40de5d:	int3   
  40de5e:	int3   
  40de5f:	int3   
  40de60:	push   ebx
  40de61:	push   esi
  40de62:	push   edi
  40de63:	mov    edx,DWORD PTR [esp+0x10]
  40de67:	mov    eax,DWORD PTR [esp+0x14]
  40de6b:	mov    ecx,DWORD PTR [esp+0x18]
  40de6f:	push   ebp
  40de70:	push   edx
  40de71:	push   eax
  40de72:	push   ecx
  40de73:	push   ecx
  40de74:	push   0x40def0
  40de79:	push   DWORD PTR fs:0x0
  40de80:	mov    eax,ds:0x44b470
  40de85:	xor    eax,esp
  40de87:	mov    DWORD PTR [esp+0x8],eax
  40de8b:	mov    DWORD PTR fs:0x0,esp
  40de92:	mov    eax,DWORD PTR [esp+0x30]
  40de96:	mov    ebx,DWORD PTR [eax+0x8]
  40de99:	mov    ecx,DWORD PTR [esp+0x2c]
  40de9d:	xor    ebx,DWORD PTR [ecx]
  40de9f:	mov    esi,DWORD PTR [eax+0xc]
  40dea2:	cmp    esi,0xfffffffe
  40dea5:	je     0x40dee2
  40dea7:	mov    edx,DWORD PTR [esp+0x34]
  40deab:	cmp    edx,0xfffffffe
  40deae:	je     0x40deb4
  40deb0:	cmp    esi,edx
  40deb2:	jbe    0x40dee2
  40deb4:	lea    esi,[esi+esi*2]
  40deb7:	lea    ebx,[ebx+esi*4+0x10]
  40debb:	mov    ecx,DWORD PTR [ebx]
  40debd:	mov    DWORD PTR [eax+0xc],ecx
  40dec0:	cmp    DWORD PTR [ebx+0x4],0x0
  40dec4:	jne    0x40de92
  40dec6:	push   0x101
  40decb:	mov    eax,DWORD PTR [ebx+0x8]
  40dece:	call   0x410235
  40ded3:	mov    ecx,0x1
  40ded8:	mov    eax,DWORD PTR [ebx+0x8]
  40dedb:	call   0x410254
  40dee0:	jmp    0x40de92
  40dee2:	pop    DWORD PTR fs:0x0
  40dee9:	add    esp,0x18
  40deec:	pop    edi
  40deed:	pop    esi
  40deee:	pop    ebx
  40deef:	ret    
  40def0:	mov    ecx,DWORD PTR [esp+0x4]
  40def4:	test   DWORD PTR [ecx+0x4],0x6
  40defb:	mov    eax,0x1
  40df00:	je     0x40df35
  40df02:	mov    eax,DWORD PTR [esp+0x8]
  40df06:	mov    ecx,DWORD PTR [eax+0x8]
  40df09:	xor    ecx,eax
  40df0b:	call   0x403edd
  40df10:	push   ebp
  40df11:	mov    ebp,DWORD PTR [eax+0x18]
  40df14:	push   DWORD PTR [eax+0xc]
  40df17:	push   DWORD PTR [eax+0x10]
  40df1a:	push   DWORD PTR [eax+0x14]
  40df1d:	call   0x40de60
  40df22:	add    esp,0xc
  40df25:	pop    ebp
  40df26:	mov    eax,DWORD PTR [esp+0x8]
  40df2a:	mov    edx,DWORD PTR [esp+0x10]
  40df2e:	mov    DWORD PTR [edx],eax
  40df30:	mov    eax,0x3
  40df35:	ret    
  40df36:	push   ebp
  40df37:	mov    ecx,DWORD PTR [esp+0x8]
  40df3b:	mov    ebp,DWORD PTR [ecx]
  40df3d:	push   DWORD PTR [ecx+0x1c]
  40df40:	push   DWORD PTR [ecx+0x18]
  40df43:	push   DWORD PTR [ecx+0x28]
  40df46:	call   0x40de60
  40df4b:	add    esp,0xc
  40df4e:	pop    ebp
  40df4f:	ret    0x4
  40df52:	push   ebp
  40df53:	push   esi
  40df54:	push   edi
  40df55:	push   ebx
  40df56:	mov    ebp,edx
  40df58:	xor    eax,eax
  40df5a:	xor    ebx,ebx
  40df5c:	xor    edx,edx
  40df5e:	xor    esi,esi
  40df60:	xor    edi,edi
  40df62:	call   ecx
  40df64:	pop    ebx
  40df65:	pop    edi
  40df66:	pop    esi
  40df67:	pop    ebp
  40df68:	ret    
  40df69:	mov    ebp,edx
  40df6b:	mov    esi,ecx
  40df6d:	mov    eax,ecx
  40df6f:	push   0x1
  40df71:	call   0x410235
  40df76:	xor    eax,eax
  40df78:	xor    ebx,ebx
  40df7a:	xor    ecx,ecx
  40df7c:	xor    edx,edx
  40df7e:	xor    edi,edi
  40df80:	jmp    esi
  40df82:	push   ebp
  40df83:	mov    ebp,esp
  40df85:	push   ebx
  40df86:	push   esi
  40df87:	push   edi
  40df88:	push   0x0
  40df8a:	push   edx
  40df8b:	push   0x40df96
  40df90:	push   ecx
  40df91:	call   0x4139be
  40df96:	pop    edi
  40df97:	pop    esi
  40df98:	pop    ebx
  40df99:	pop    ebp
  40df9a:	ret    
  40df9b:	push   ebp
  40df9c:	mov    ebp,DWORD PTR [esp+0x8]
  40dfa0:	push   edx
  40dfa1:	push   ecx
  40dfa2:	push   DWORD PTR [esp+0x14]
  40dfa6:	call   0x40de60
  40dfab:	add    esp,0xc
  40dfae:	pop    ebp
  40dfaf:	ret    0x8
  40dfb2:	int3   
  40dfb3:	int3   
  40dfb4:	int3   
  40dfb5:	int3   
  40dfb6:	int3   
  40dfb7:	int3   
  40dfb8:	int3   
  40dfb9:	int3   
  40dfba:	int3   
  40dfbb:	int3   
  40dfbc:	int3   
  40dfbd:	int3   
  40dfbe:	int3   
  40dfbf:	int3   
  40dfc0:	push   ecx
  40dfc1:	lea    ecx,[esp+0x8]
  40dfc5:	sub    ecx,eax
  40dfc7:	and    ecx,0xf
  40dfca:	add    eax,ecx
  40dfcc:	sbb    ecx,ecx
  40dfce:	or     eax,ecx
  40dfd0:	pop    ecx
  40dfd1:	jmp    0x40e5b0
  40dfd6:	push   ecx
  40dfd7:	lea    ecx,[esp+0x8]
  40dfdb:	sub    ecx,eax
  40dfdd:	and    ecx,0x7
  40dfe0:	add    eax,ecx
  40dfe2:	sbb    ecx,ecx
  40dfe4:	or     eax,ecx
  40dfe6:	pop    ecx
  40dfe7:	jmp    0x40e5b0
  40dfec:	mov    edi,edi
  40dfee:	push   ebp
  40dfef:	mov    ebp,esp
  40dff1:	sub    esp,0x18
  40dff4:	push   ebx
  40dff5:	push   DWORD PTR [ebp+0x10]
  40dff8:	lea    ecx,[ebp-0x18]
  40dffb:	call   0x406b0c
  40e000:	mov    ebx,DWORD PTR [ebp+0x8]
  40e003:	lea    eax,[ebx+0x1]
  40e006:	cmp    eax,0x100
  40e00b:	ja     0x40e01c
  40e00d:	mov    eax,DWORD PTR [ebp-0x18]
  40e010:	mov    eax,DWORD PTR [eax+0xc8]
  40e016:	movzx  eax,WORD PTR [eax+ebx*2]
  40e01a:	jmp    0x40e091
  40e01c:	mov    DWORD PTR [ebp+0x8],ebx
  40e01f:	sar    DWORD PTR [ebp+0x8],0x8
  40e023:	lea    eax,[ebp-0x18]
  40e026:	push   eax
  40e027:	mov    eax,DWORD PTR [ebp+0x8]
  40e02a:	and    eax,0xff
  40e02f:	push   eax
  40e030:	call   0x40e902
  40e035:	pop    ecx
  40e036:	pop    ecx
  40e037:	test   eax,eax
  40e039:	je     0x40e04d
  40e03b:	mov    al,BYTE PTR [ebp+0x8]
  40e03e:	push   0x2
  40e040:	mov    BYTE PTR [ebp-0x8],al
  40e043:	mov    BYTE PTR [ebp-0x7],bl
  40e046:	mov    BYTE PTR [ebp-0x6],0x0
  40e04a:	pop    ecx
  40e04b:	jmp    0x40e057
  40e04d:	xor    ecx,ecx
  40e04f:	mov    BYTE PTR [ebp-0x8],bl
  40e052:	mov    BYTE PTR [ebp-0x7],0x0
  40e056:	inc    ecx
  40e057:	mov    eax,DWORD PTR [ebp-0x18]
  40e05a:	push   0x1
  40e05c:	push   DWORD PTR [eax+0x14]
  40e05f:	push   DWORD PTR [eax+0x4]
  40e062:	lea    eax,[ebp-0x4]
  40e065:	push   eax
  40e066:	push   ecx
  40e067:	lea    eax,[ebp-0x8]
  40e06a:	push   eax
  40e06b:	lea    eax,[ebp-0x18]
  40e06e:	push   0x1
  40e070:	push   eax
  40e071:	call   0x40ddbd
  40e076:	add    esp,0x20
  40e079:	test   eax,eax
  40e07b:	jne    0x40e08d
  40e07d:	cmp    BYTE PTR [ebp-0xc],al
  40e080:	je     0x40e089
  40e082:	mov    eax,DWORD PTR [ebp-0x10]
  40e085:	and    DWORD PTR [eax+0x70],0xfffffffd
  40e089:	xor    eax,eax
  40e08b:	jmp    0x40e0a1
  40e08d:	movzx  eax,WORD PTR [ebp-0x4]
  40e091:	and    eax,DWORD PTR [ebp+0xc]
  40e094:	cmp    BYTE PTR [ebp-0xc],0x0
  40e098:	je     0x40e0a1
  40e09a:	mov    ecx,DWORD PTR [ebp-0x10]
  40e09d:	and    DWORD PTR [ecx+0x70],0xfffffffd
  40e0a1:	pop    ebx
  40e0a2:	leave  
  40e0a3:	ret    
  40e0a4:	mov    edi,edi
  40e0a6:	push   ebp
  40e0a7:	mov    ebp,esp
  40e0a9:	cmp    DWORD PTR [ebp+0x8],0x0
  40e0ad:	jne    0x40e0ba
  40e0af:	push   DWORD PTR [ebp+0xc]
  40e0b2:	call   0x405d80
  40e0b7:	pop    ecx
  40e0b8:	pop    ebp
  40e0b9:	ret    
  40e0ba:	push   esi
  40e0bb:	mov    esi,DWORD PTR [ebp+0xc]
  40e0be:	test   esi,esi
  40e0c0:	jne    0x40e0cf
  40e0c2:	push   DWORD PTR [ebp+0x8]
  40e0c5:	call   0x404391
  40e0ca:	pop    ecx
  40e0cb:	xor    eax,eax
  40e0cd:	jmp    0x40e11c
  40e0cf:	push   edi
  40e0d0:	jmp    0x40e102
  40e0d2:	test   esi,esi
  40e0d4:	jne    0x40e0d7
  40e0d6:	inc    esi
  40e0d7:	push   esi
  40e0d8:	push   DWORD PTR [ebp+0x8]
  40e0db:	push   0x0
  40e0dd:	push   DWORD PTR ds:0x44dde8
  40e0e3:	call   DWORD PTR ds:0x4430dc
  40e0e9:	mov    edi,eax
  40e0eb:	test   edi,edi
  40e0ed:	jne    0x40e14d
  40e0ef:	cmp    DWORD PTR ds:0x44e7b0,eax
  40e0f5:	je     0x40e137
  40e0f7:	push   esi
  40e0f8:	call   0x40bf17
  40e0fd:	pop    ecx
  40e0fe:	test   eax,eax
  40e100:	je     0x40e11f
  40e102:	cmp    esi,0xffffffe0
  40e105:	jbe    0x40e0d2
  40e107:	push   esi
  40e108:	call   0x40bf17
  40e10d:	pop    ecx
  40e10e:	call   0x40769b
  40e113:	mov    DWORD PTR [eax],0xc
  40e119:	xor    eax,eax
  40e11b:	pop    edi
  40e11c:	pop    esi
  40e11d:	pop    ebp
  40e11e:	ret    
  40e11f:	call   0x40769b
  40e124:	mov    esi,eax
  40e126:	call   DWORD PTR ds:0x443120
  40e12c:	push   eax
  40e12d:	call   0x407659
  40e132:	pop    ecx
  40e133:	mov    DWORD PTR [esi],eax
  40e135:	jmp    0x40e119
  40e137:	call   0x40769b
  40e13c:	mov    esi,eax
  40e13e:	call   DWORD PTR ds:0x443120
  40e144:	push   eax
  40e145:	call   0x407659
  40e14a:	pop    ecx
  40e14b:	mov    DWORD PTR [esi],eax
  40e14d:	mov    eax,edi
  40e14f:	jmp    0x40e11b
  40e151:	mov    edi,edi
  40e153:	push   ebp
  40e154:	mov    ebp,esp
  40e156:	mov    ecx,DWORD PTR [ebp+0xc]
  40e159:	push   ebx
  40e15a:	xor    ebx,ebx
  40e15c:	cmp    ecx,ebx
  40e15e:	jbe    0x40e17b
  40e160:	push   0xffffffe0
  40e162:	xor    edx,edx
  40e164:	pop    eax
  40e165:	div    ecx
  40e167:	cmp    eax,DWORD PTR [ebp+0x10]
  40e16a:	jae    0x40e17b
  40e16c:	call   0x40769b
  40e171:	mov    DWORD PTR [eax],0xc
  40e177:	xor    eax,eax
  40e179:	jmp    0x40e1bc
  40e17b:	imul   ecx,DWORD PTR [ebp+0x10]
  40e17f:	push   esi
  40e180:	push   edi
  40e181:	mov    esi,ecx
  40e183:	cmp    DWORD PTR [ebp+0x8],ebx
  40e186:	je     0x40e193
  40e188:	push   DWORD PTR [ebp+0x8]
  40e18b:	call   0x40984a
  40e190:	pop    ecx
  40e191:	mov    ebx,eax
  40e193:	push   esi
  40e194:	push   DWORD PTR [ebp+0x8]
  40e197:	call   0x40e0a4
  40e19c:	mov    edi,eax
  40e19e:	pop    ecx
  40e19f:	pop    ecx
  40e1a0:	test   edi,edi
  40e1a2:	je     0x40e1b8
  40e1a4:	cmp    ebx,esi
  40e1a6:	jae    0x40e1b8
  40e1a8:	sub    esi,ebx
  40e1aa:	push   esi
  40e1ab:	push   0x0
  40e1ad:	add    ebx,edi
  40e1af:	push   ebx
  40e1b0:	call   0x40a550
  40e1b5:	add    esp,0xc
  40e1b8:	mov    eax,edi
  40e1ba:	pop    edi
  40e1bb:	pop    esi
  40e1bc:	pop    ebx
  40e1bd:	pop    ebp
  40e1be:	ret    
  40e1bf:	mov    edi,edi
  40e1c1:	push   ebp
  40e1c2:	mov    ebp,esp
  40e1c4:	mov    eax,DWORD PTR [ebp+0x8]
  40e1c7:	mov    ds:0x44e7b4,eax
  40e1cc:	mov    ds:0x44e7b8,eax
  40e1d1:	mov    ds:0x44e7bc,eax
  40e1d6:	mov    ds:0x44e7c0,eax
  40e1db:	pop    ebp
  40e1dc:	ret    
  40e1dd:	mov    edi,edi
  40e1df:	push   ebp
  40e1e0:	mov    ebp,esp
  40e1e2:	mov    eax,DWORD PTR [ebp+0x8]
  40e1e5:	mov    ecx,DWORD PTR ds:0x444a0c
  40e1eb:	push   esi
  40e1ec:	cmp    DWORD PTR [eax+0x4],edx
  40e1ef:	je     0x40e200
  40e1f1:	mov    esi,ecx
  40e1f3:	imul   esi,esi,0xc
  40e1f6:	add    esi,DWORD PTR [ebp+0x8]
  40e1f9:	add    eax,0xc
  40e1fc:	cmp    eax,esi
  40e1fe:	jb     0x40e1ec
  40e200:	imul   ecx,ecx,0xc
  40e203:	add    ecx,DWORD PTR [ebp+0x8]
  40e206:	pop    esi
  40e207:	cmp    eax,ecx
  40e209:	jae    0x40e210
  40e20b:	cmp    DWORD PTR [eax+0x4],edx
  40e20e:	je     0x40e212
  40e210:	xor    eax,eax
  40e212:	pop    ebp
  40e213:	ret    
  40e214:	push   DWORD PTR ds:0x44e7bc
  40e21a:	call   DWORD PTR ds:0x4431c8
  40e220:	ret    
  40e221:	push   0x20
  40e223:	push   0x449500
  40e228:	call   0x4076f0
  40e22d:	xor    edi,edi
  40e22f:	mov    DWORD PTR [ebp-0x1c],edi
  40e232:	mov    DWORD PTR [ebp-0x28],edi
  40e235:	mov    ebx,DWORD PTR [ebp+0x8]
  40e238:	cmp    ebx,0xb
  40e23b:	jg     0x40e288
  40e23d:	je     0x40e254
  40e23f:	mov    eax,ebx
  40e241:	push   0x2
  40e243:	pop    ecx
  40e244:	sub    eax,ecx
  40e246:	je     0x40e26a
  40e248:	sub    eax,ecx
  40e24a:	je     0x40e254
  40e24c:	sub    eax,ecx
  40e24e:	je     0x40e2a9
  40e250:	sub    eax,ecx
  40e252:	jne    0x40e297
  40e254:	call   0x40c891
  40e259:	mov    edi,eax
  40e25b:	mov    DWORD PTR [ebp-0x28],edi
  40e25e:	test   edi,edi
  40e260:	jne    0x40e276
  40e262:	or     eax,0xffffffff
  40e265:	jmp    0x40e3be
  40e26a:	mov    esi,0x44e7b4
  40e26f:	mov    eax,ds:0x44e7b4
  40e274:	jmp    0x40e2cb
  40e276:	push   DWORD PTR [edi+0x5c]
  40e279:	mov    edx,ebx
  40e27b:	call   0x40e1dd
  40e280:	pop    ecx
  40e281:	lea    esi,[eax+0x8]
  40e284:	mov    eax,DWORD PTR [esi]
  40e286:	jmp    0x40e2d9
  40e288:	mov    eax,ebx
  40e28a:	sub    eax,0xf
  40e28d:	je     0x40e2c1
  40e28f:	sub    eax,0x6
  40e292:	je     0x40e2b5
  40e294:	dec    eax
  40e295:	je     0x40e2a9
  40e297:	call   0x40769b
  40e29c:	mov    DWORD PTR [eax],0x16
  40e2a2:	call   0x407649
  40e2a7:	jmp    0x40e262
  40e2a9:	mov    esi,0x44e7bc
  40e2ae:	mov    eax,ds:0x44e7bc
  40e2b3:	jmp    0x40e2cb
  40e2b5:	mov    esi,0x44e7b8
  40e2ba:	mov    eax,ds:0x44e7b8
  40e2bf:	jmp    0x40e2cb
  40e2c1:	mov    esi,0x44e7c0
  40e2c6:	mov    eax,ds:0x44e7c0
  40e2cb:	mov    DWORD PTR [ebp-0x1c],0x1
  40e2d2:	push   eax
  40e2d3:	call   DWORD PTR ds:0x4431c8
  40e2d9:	mov    DWORD PTR [ebp-0x20],eax
  40e2dc:	xor    eax,eax
  40e2de:	cmp    DWORD PTR [ebp-0x20],0x1
  40e2e2:	je     0x40e3be
  40e2e8:	cmp    DWORD PTR [ebp-0x20],eax
  40e2eb:	jne    0x40e2f4
  40e2ed:	push   0x3
  40e2ef:	call   0x407da4
  40e2f4:	cmp    DWORD PTR [ebp-0x1c],eax
  40e2f7:	je     0x40e300
  40e2f9:	push   eax
  40e2fa:	call   0x407f70
  40e2ff:	pop    ecx
  40e300:	xor    eax,eax
  40e302:	mov    DWORD PTR [ebp-0x4],eax
  40e305:	cmp    ebx,0x8
  40e308:	je     0x40e314
  40e30a:	cmp    ebx,0xb
  40e30d:	je     0x40e314
  40e30f:	cmp    ebx,0x4
  40e312:	jne    0x40e32f
  40e314:	mov    ecx,DWORD PTR [edi+0x60]
  40e317:	mov    DWORD PTR [ebp-0x2c],ecx
  40e31a:	mov    DWORD PTR [edi+0x60],eax
  40e31d:	cmp    ebx,0x8
  40e320:	jne    0x40e360
  40e322:	mov    ecx,DWORD PTR [edi+0x64]
  40e325:	mov    DWORD PTR [ebp-0x30],ecx
  40e328:	mov    DWORD PTR [edi+0x64],0x8c
  40e32f:	cmp    ebx,0x8
  40e332:	jne    0x40e360
  40e334:	mov    ecx,DWORD PTR ds:0x444a00
  40e33a:	mov    DWORD PTR [ebp-0x24],ecx
  40e33d:	mov    ecx,DWORD PTR ds:0x444a04
  40e343:	add    ecx,DWORD PTR ds:0x444a00
  40e349:	cmp    DWORD PTR [ebp-0x24],ecx
  40e34c:	jge    0x40e367
  40e34e:	mov    ecx,DWORD PTR [ebp-0x24]
  40e351:	imul   ecx,ecx,0xc
  40e354:	mov    edx,DWORD PTR [edi+0x5c]
  40e357:	mov    DWORD PTR [ecx+edx*1+0x8],eax
  40e35b:	inc    DWORD PTR [ebp-0x24]
  40e35e:	jmp    0x40e33d
  40e360:	call   0x40c75a
  40e365:	mov    DWORD PTR [esi],eax
  40e367:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40e36e:	call   0x40e388
  40e373:	cmp    ebx,0x8
  40e376:	jne    0x40e397
  40e378:	push   DWORD PTR [edi+0x64]
  40e37b:	push   ebx
  40e37c:	call   DWORD PTR [ebp-0x20]
  40e37f:	pop    ecx
  40e380:	jmp    0x40e39b
  40e382:	mov    ebx,DWORD PTR [ebp+0x8]
  40e385:	mov    edi,DWORD PTR [ebp-0x28]
  40e388:	cmp    DWORD PTR [ebp-0x1c],0x0
  40e38c:	je     0x40e396
  40e38e:	push   0x0
  40e390:	call   0x407e97
  40e395:	pop    ecx
  40e396:	ret    
  40e397:	push   ebx
  40e398:	call   DWORD PTR [ebp-0x20]
  40e39b:	pop    ecx
  40e39c:	cmp    ebx,0x8
  40e39f:	je     0x40e3ab
  40e3a1:	cmp    ebx,0xb
  40e3a4:	je     0x40e3ab
  40e3a6:	cmp    ebx,0x4
  40e3a9:	jne    0x40e3bc
  40e3ab:	mov    eax,DWORD PTR [ebp-0x2c]
  40e3ae:	mov    DWORD PTR [edi+0x60],eax
  40e3b1:	cmp    ebx,0x8
  40e3b4:	jne    0x40e3bc
  40e3b6:	mov    eax,DWORD PTR [ebp-0x30]
  40e3b9:	mov    DWORD PTR [edi+0x64],eax
  40e3bc:	xor    eax,eax
  40e3be:	call   0x407735
  40e3c3:	ret    
  40e3c4:	and    DWORD PTR ds:0x450764,0x0
  40e3cb:	ret    
  40e3cc:	mov    edi,edi
  40e3ce:	push   ebp
  40e3cf:	mov    ebp,esp
  40e3d1:	mov    eax,DWORD PTR [ebp+0x8]
  40e3d4:	cmp    eax,0xfffffffe
  40e3d7:	jne    0x40e3e8
  40e3d9:	call   0x40769b
  40e3de:	mov    DWORD PTR [eax],0x9
  40e3e4:	xor    eax,eax
  40e3e6:	pop    ebp
  40e3e7:	ret    
  40e3e8:	test   eax,eax
  40e3ea:	js     0x40e3f4
  40e3ec:	cmp    eax,DWORD PTR ds:0x450780
  40e3f2:	jb     0x40e406
  40e3f4:	call   0x40769b
  40e3f9:	mov    DWORD PTR [eax],0x9
  40e3ff:	call   0x407649
  40e404:	jmp    0x40e3e4
  40e406:	mov    ecx,eax
  40e408:	and    eax,0x1f
  40e40b:	sar    ecx,0x5
  40e40e:	mov    ecx,DWORD PTR [ecx*4+0x4507a0]
  40e415:	shl    eax,0x6
  40e418:	movsx  eax,BYTE PTR [ecx+eax*1+0x4]
  40e41d:	and    eax,0x40
  40e420:	pop    ebp
  40e421:	ret    
  40e422:	int3   
  40e423:	int3   
  40e424:	int3   
  40e425:	int3   
  40e426:	int3   
  40e427:	int3   
  40e428:	int3   
  40e429:	int3   
  40e42a:	int3   
  40e42b:	int3   
  40e42c:	int3   
  40e42d:	int3   
  40e42e:	int3   
  40e42f:	int3   
  40e430:	mov    edi,edi
  40e432:	push   ebp
  40e433:	mov    ebp,esp
  40e435:	mov    ecx,DWORD PTR [ebp+0x8]
  40e438:	mov    eax,0x5a4d
  40e43d:	cmp    WORD PTR [ecx],ax
  40e440:	je     0x40e446
  40e442:	xor    eax,eax
  40e444:	pop    ebp
  40e445:	ret    
  40e446:	mov    eax,DWORD PTR [ecx+0x3c]
  40e449:	add    eax,ecx
  40e44b:	cmp    DWORD PTR [eax],0x4550
  40e451:	jne    0x40e442
  40e453:	xor    edx,edx
  40e455:	mov    ecx,0x10b
  40e45a:	cmp    WORD PTR [eax+0x18],cx
  40e45e:	sete   dl
  40e461:	mov    eax,edx
  40e463:	pop    ebp
  40e464:	ret    
  40e465:	int3   
  40e466:	int3   
  40e467:	int3   
  40e468:	int3   
  40e469:	int3   
  40e46a:	int3   
  40e46b:	int3   
  40e46c:	int3   
  40e46d:	int3   
  40e46e:	int3   
  40e46f:	int3   
  40e470:	mov    edi,edi
  40e472:	push   ebp
  40e473:	mov    ebp,esp
  40e475:	mov    eax,DWORD PTR [ebp+0x8]
  40e478:	mov    ecx,DWORD PTR [eax+0x3c]
  40e47b:	add    ecx,eax
  40e47d:	movzx  eax,WORD PTR [ecx+0x14]
  40e481:	push   ebx
  40e482:	push   esi
  40e483:	movzx  esi,WORD PTR [ecx+0x6]
  40e487:	xor    edx,edx
  40e489:	push   edi
  40e48a:	lea    eax,[eax+ecx*1+0x18]
  40e48e:	test   esi,esi
  40e490:	je     0x40e4ad
  40e492:	mov    edi,DWORD PTR [ebp+0xc]
  40e495:	mov    ecx,DWORD PTR [eax+0xc]
  40e498:	cmp    edi,ecx
  40e49a:	jb     0x40e4a5
  40e49c:	mov    ebx,DWORD PTR [eax+0x8]
  40e49f:	add    ebx,ecx
  40e4a1:	cmp    edi,ebx
  40e4a3:	jb     0x40e4af
  40e4a5:	inc    edx
  40e4a6:	add    eax,0x28
  40e4a9:	cmp    edx,esi
  40e4ab:	jb     0x40e495
  40e4ad:	xor    eax,eax
  40e4af:	pop    edi
  40e4b0:	pop    esi
  40e4b1:	pop    ebx
  40e4b2:	pop    ebp
  40e4b3:	ret    
  40e4b4:	int3   
  40e4b5:	int3   
  40e4b6:	int3   
  40e4b7:	int3   
  40e4b8:	int3   
  40e4b9:	int3   
  40e4ba:	int3   
  40e4bb:	int3   
  40e4bc:	int3   
  40e4bd:	int3   
  40e4be:	int3   
  40e4bf:	int3   
  40e4c0:	mov    edi,edi
  40e4c2:	push   ebp
  40e4c3:	mov    ebp,esp
  40e4c5:	push   0xfffffffe
  40e4c7:	push   0x449520
  40e4cc:	push   0x407750
  40e4d1:	mov    eax,fs:0x0
  40e4d7:	push   eax
  40e4d8:	sub    esp,0x8
  40e4db:	push   ebx
  40e4dc:	push   esi
  40e4dd:	push   edi
  40e4de:	mov    eax,ds:0x44b470
  40e4e3:	xor    DWORD PTR [ebp-0x8],eax
  40e4e6:	xor    eax,ebp
  40e4e8:	push   eax
  40e4e9:	lea    eax,[ebp-0x10]
  40e4ec:	mov    fs:0x0,eax
  40e4f2:	mov    DWORD PTR [ebp-0x18],esp
  40e4f5:	mov    DWORD PTR [ebp-0x4],0x0
  40e4fc:	push   0x400000
  40e501:	call   0x40e430
  40e506:	add    esp,0x4
  40e509:	test   eax,eax
  40e50b:	je     0x40e561
  40e50d:	mov    eax,DWORD PTR [ebp+0x8]
  40e510:	sub    eax,0x400000
  40e515:	push   eax
  40e516:	push   0x400000
  40e51b:	call   0x40e470
  40e520:	add    esp,0x8
  40e523:	test   eax,eax
  40e525:	je     0x40e561
  40e527:	mov    eax,DWORD PTR [eax+0x24]
  40e52a:	shr    eax,0x1f
  40e52d:	not    eax
  40e52f:	and    eax,0x1
  40e532:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40e539:	mov    ecx,DWORD PTR [ebp-0x10]
  40e53c:	mov    DWORD PTR fs:0x0,ecx
  40e543:	pop    ecx
  40e544:	pop    edi
  40e545:	pop    esi
  40e546:	pop    ebx
  40e547:	mov    esp,ebp
  40e549:	pop    ebp
  40e54a:	ret    
  40e54b:	mov    eax,DWORD PTR [ebp-0x14]
  40e54e:	mov    ecx,DWORD PTR [eax]
  40e550:	xor    edx,edx
  40e552:	cmp    DWORD PTR [ecx],0xc0000005
  40e558:	sete   dl
  40e55b:	mov    eax,edx
  40e55d:	ret    
  40e55e:	mov    esp,DWORD PTR [ebp-0x18]
  40e561:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40e568:	xor    eax,eax
  40e56a:	mov    ecx,DWORD PTR [ebp-0x10]
  40e56d:	mov    DWORD PTR fs:0x0,ecx
  40e574:	pop    ecx
  40e575:	pop    edi
  40e576:	pop    esi
  40e577:	pop    ebx
  40e578:	mov    esp,ebp
  40e57a:	pop    ebp
  40e57b:	ret    
  40e57c:	mov    edi,edi
  40e57e:	push   ebp
  40e57f:	mov    ebp,esp
  40e581:	mov    eax,DWORD PTR [ebp+0x8]
  40e584:	mov    ds:0x44e7c8,eax
  40e589:	pop    ebp
  40e58a:	ret    
  40e58b:	mov    edi,edi
  40e58d:	push   esi
  40e58e:	push   edi
  40e58f:	xor    edi,edi
  40e591:	push   DWORD PTR [edi+0x44c200]
  40e597:	call   DWORD PTR ds:0x4431c4
  40e59d:	mov    DWORD PTR [edi+0x44c200],eax
  40e5a3:	add    edi,0x4
  40e5a6:	cmp    edi,0x28
  40e5a9:	jb     0x40e591
  40e5ab:	pop    edi
  40e5ac:	pop    esi
  40e5ad:	ret    
  40e5ae:	int3   
  40e5af:	int3   
  40e5b0:	push   ecx
  40e5b1:	lea    ecx,[esp+0x4]
  40e5b5:	sub    ecx,eax
  40e5b7:	sbb    eax,eax
  40e5b9:	not    eax
  40e5bb:	and    ecx,eax
  40e5bd:	mov    eax,esp
  40e5bf:	and    eax,0xfffff000
  40e5c4:	cmp    ecx,eax
  40e5c6:	jb     0x40e5d2
  40e5c8:	mov    eax,ecx
  40e5ca:	pop    ecx
  40e5cb:	xchg   esp,eax
  40e5cc:	mov    eax,DWORD PTR [eax]
  40e5ce:	mov    DWORD PTR [esp],eax
  40e5d1:	ret    
  40e5d2:	sub    eax,0x1000
  40e5d7:	test   DWORD PTR [eax],eax
  40e5d9:	jmp    0x40e5c4
  40e5db:	mov    edi,edi
  40e5dd:	push   ebp
  40e5de:	mov    ebp,esp
  40e5e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40e5e3:	push   ebx
  40e5e4:	xor    ebx,ebx
  40e5e6:	push   esi
  40e5e7:	push   edi
  40e5e8:	cmp    ecx,ebx
  40e5ea:	jl     0x40e647
  40e5ec:	cmp    ecx,DWORD PTR ds:0x450780
  40e5f2:	jae    0x40e647
  40e5f4:	mov    eax,ecx
  40e5f6:	sar    eax,0x5
  40e5f9:	mov    esi,ecx
  40e5fb:	and    esi,0x1f
  40e5fe:	lea    edi,[eax*4+0x4507a0]
  40e605:	mov    eax,DWORD PTR [edi]
  40e607:	shl    esi,0x6
  40e60a:	test   BYTE PTR [eax+esi*1+0x4],0x1
  40e60f:	je     0x40e647
  40e611:	cmp    DWORD PTR [eax+esi*1],0xffffffff
  40e615:	je     0x40e647
  40e617:	cmp    DWORD PTR ds:0x44b438,0x1
  40e61e:	jne    0x40e63d
  40e620:	sub    ecx,ebx
  40e622:	je     0x40e634
  40e624:	dec    ecx
  40e625:	je     0x40e62f
  40e627:	dec    ecx
  40e628:	jne    0x40e63d
  40e62a:	push   ebx
  40e62b:	push   0xfffffff4
  40e62d:	jmp    0x40e637
  40e62f:	push   ebx
  40e630:	push   0xfffffff5
  40e632:	jmp    0x40e637
  40e634:	push   ebx
  40e635:	push   0xfffffff6
  40e637:	call   DWORD PTR ds:0x4430e4
  40e63d:	mov    eax,DWORD PTR [edi]
  40e63f:	or     DWORD PTR [esi+eax*1],0xffffffff
  40e643:	xor    eax,eax
  40e645:	jmp    0x40e65c
  40e647:	call   0x40769b
  40e64c:	mov    DWORD PTR [eax],0x9
  40e652:	call   0x4076ae
  40e657:	mov    DWORD PTR [eax],ebx
  40e659:	or     eax,0xffffffff
  40e65c:	pop    edi
  40e65d:	pop    esi
  40e65e:	pop    ebx
  40e65f:	pop    ebp
  40e660:	ret    
  40e661:	mov    edi,edi
  40e663:	push   ebp
  40e664:	mov    ebp,esp
  40e666:	mov    eax,DWORD PTR [ebp+0x8]
  40e669:	cmp    eax,0xfffffffe
  40e66c:	jne    0x40e686
  40e66e:	call   0x4076ae
  40e673:	and    DWORD PTR [eax],0x0
  40e676:	call   0x40769b
  40e67b:	mov    DWORD PTR [eax],0x9
  40e681:	or     eax,0xffffffff
  40e684:	pop    ebp
  40e685:	ret    
  40e686:	test   eax,eax
  40e688:	js     0x40e692
  40e68a:	cmp    eax,DWORD PTR ds:0x450780
  40e690:	jb     0x40e6ac
  40e692:	call   0x4076ae
  40e697:	and    DWORD PTR [eax],0x0
  40e69a:	call   0x40769b
  40e69f:	mov    DWORD PTR [eax],0x9
  40e6a5:	call   0x407649
  40e6aa:	jmp    0x40e681
  40e6ac:	mov    ecx,eax
  40e6ae:	sar    ecx,0x5
  40e6b1:	mov    ecx,DWORD PTR [ecx*4+0x4507a0]
  40e6b8:	and    eax,0x1f
  40e6bb:	shl    eax,0x6
  40e6be:	test   BYTE PTR [eax+ecx*1+0x4],0x1
  40e6c3:	je     0x40e692
  40e6c5:	mov    eax,DWORD PTR [eax+ecx*1]
  40e6c8:	pop    ebp
  40e6c9:	ret    
  40e6ca:	push   0xc
  40e6cc:	push   0x449540
  40e6d1:	call   0x4076f0
  40e6d6:	mov    edi,DWORD PTR [ebp+0x8]
  40e6d9:	mov    eax,edi
  40e6db:	sar    eax,0x5
  40e6de:	mov    esi,edi
  40e6e0:	and    esi,0x1f
  40e6e3:	shl    esi,0x6
  40e6e6:	add    esi,DWORD PTR [eax*4+0x4507a0]
  40e6ed:	mov    DWORD PTR [ebp-0x1c],0x1
  40e6f4:	xor    ebx,ebx
  40e6f6:	cmp    DWORD PTR [esi+0x8],ebx
  40e6f9:	jne    0x40e730
  40e6fb:	push   0xa
  40e6fd:	call   0x407f70
  40e702:	pop    ecx
  40e703:	mov    DWORD PTR [ebp-0x4],ebx
  40e706:	cmp    DWORD PTR [esi+0x8],ebx
  40e709:	jne    0x40e724
  40e70b:	push   0xfa0
  40e710:	lea    eax,[esi+0xc]
  40e713:	push   eax
  40e714:	call   DWORD PTR ds:0x44316c
  40e71a:	test   eax,eax
  40e71c:	jne    0x40e721
  40e71e:	mov    DWORD PTR [ebp-0x1c],ebx
  40e721:	inc    DWORD PTR [esi+0x8]
  40e724:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40e72b:	call   0x40e760
  40e730:	cmp    DWORD PTR [ebp-0x1c],ebx
  40e733:	je     0x40e752
  40e735:	mov    eax,edi
  40e737:	sar    eax,0x5
  40e73a:	and    edi,0x1f
  40e73d:	shl    edi,0x6
  40e740:	mov    eax,DWORD PTR [eax*4+0x4507a0]
  40e747:	lea    eax,[eax+edi*1+0xc]
  40e74b:	push   eax
  40e74c:	call   DWORD PTR ds:0x4431d8
  40e752:	mov    eax,DWORD PTR [ebp-0x1c]
  40e755:	call   0x407735
  40e75a:	ret    
  40e75b:	xor    ebx,ebx
  40e75d:	mov    edi,DWORD PTR [ebp+0x8]
  40e760:	push   0xa
  40e762:	call   0x407e97
  40e767:	pop    ecx
  40e768:	ret    
  40e769:	mov    edi,edi
  40e76b:	push   ebp
  40e76c:	mov    ebp,esp
  40e76e:	mov    eax,DWORD PTR [ebp+0x8]
  40e771:	mov    ecx,eax
  40e773:	and    eax,0x1f
  40e776:	sar    ecx,0x5
  40e779:	mov    ecx,DWORD PTR [ecx*4+0x4507a0]
  40e780:	shl    eax,0x6
  40e783:	lea    eax,[ecx+eax*1+0xc]
  40e787:	push   eax
  40e788:	call   DWORD PTR ds:0x4431b8
  40e78e:	pop    ebp
  40e78f:	ret    
  40e790:	mov    edi,edi
  40e792:	push   ebp
  40e793:	mov    ebp,esp
  40e795:	push   ecx
  40e796:	cmp    DWORD PTR ds:0x44c3c0,0xfffffffe
  40e79d:	jne    0x40e7a4
  40e79f:	call   0x410342
  40e7a4:	mov    eax,ds:0x44c3c0
  40e7a9:	cmp    eax,0xffffffff
  40e7ac:	jne    0x40e7b5
  40e7ae:	mov    eax,0xffff
  40e7b3:	leave  
  40e7b4:	ret    
  40e7b5:	push   0x0
  40e7b7:	lea    ecx,[ebp-0x4]
  40e7ba:	push   ecx
  40e7bb:	push   0x1
  40e7bd:	lea    ecx,[ebp+0x8]
  40e7c0:	push   ecx
  40e7c1:	push   eax
  40e7c2:	call   DWORD PTR ds:0x4430e8
  40e7c8:	test   eax,eax
  40e7ca:	je     0x40e7ae
  40e7cc:	mov    ax,WORD PTR [ebp+0x8]
  40e7d0:	leave  
  40e7d1:	ret    
  40e7d2:	mov    edi,edi
  40e7d4:	push   ebp
  40e7d5:	mov    ebp,esp
  40e7d7:	sub    esp,0x10
  40e7da:	push   ebx
  40e7db:	push   esi
  40e7dc:	mov    esi,DWORD PTR [ebp+0xc]
  40e7df:	xor    ebx,ebx
  40e7e1:	cmp    esi,ebx
  40e7e3:	je     0x40e7fa
  40e7e5:	cmp    DWORD PTR [ebp+0x10],ebx
  40e7e8:	je     0x40e7fa
  40e7ea:	cmp    BYTE PTR [esi],bl
  40e7ec:	jne    0x40e800
  40e7ee:	mov    eax,DWORD PTR [ebp+0x8]
  40e7f1:	cmp    eax,ebx
  40e7f3:	je     0x40e7fa
  40e7f5:	xor    ecx,ecx
  40e7f7:	mov    WORD PTR [eax],cx
  40e7fa:	xor    eax,eax
  40e7fc:	pop    esi
  40e7fd:	pop    ebx
  40e7fe:	leave  
  40e7ff:	ret    
  40e800:	push   DWORD PTR [ebp+0x14]
  40e803:	lea    ecx,[ebp-0x10]
  40e806:	call   0x406b0c
  40e80b:	mov    eax,DWORD PTR [ebp-0x10]
  40e80e:	cmp    DWORD PTR [eax+0x14],ebx
  40e811:	jne    0x40e831
  40e813:	mov    eax,DWORD PTR [ebp+0x8]
  40e816:	cmp    eax,ebx
  40e818:	je     0x40e820
  40e81a:	movzx  ecx,BYTE PTR [esi]
  40e81d:	mov    WORD PTR [eax],cx
  40e820:	cmp    BYTE PTR [ebp-0x4],bl
  40e823:	je     0x40e82c
  40e825:	mov    eax,DWORD PTR [ebp-0x8]
  40e828:	and    DWORD PTR [eax+0x70],0xfffffffd
  40e82c:	xor    eax,eax
  40e82e:	inc    eax
  40e82f:	jmp    0x40e7fc
  40e831:	lea    eax,[ebp-0x10]
  40e834:	push   eax
  40e835:	movzx  eax,BYTE PTR [esi]
  40e838:	push   eax
  40e839:	call   0x40e902
  40e83e:	pop    ecx
  40e83f:	pop    ecx
  40e840:	test   eax,eax
  40e842:	je     0x40e8c1
  40e844:	mov    eax,DWORD PTR [ebp-0x10]
  40e847:	mov    ecx,DWORD PTR [eax+0xac]
  40e84d:	cmp    ecx,0x1
  40e850:	jle    0x40e877
  40e852:	cmp    DWORD PTR [ebp+0x10],ecx
  40e855:	jl     0x40e877
  40e857:	xor    edx,edx
  40e859:	cmp    DWORD PTR [ebp+0x8],ebx
  40e85c:	setne  dl
  40e85f:	push   edx
  40e860:	push   DWORD PTR [ebp+0x8]
  40e863:	push   ecx
  40e864:	push   esi
  40e865:	push   0x9
  40e867:	push   DWORD PTR [eax+0x4]
  40e86a:	call   DWORD PTR ds:0x443190
  40e870:	test   eax,eax
  40e872:	mov    eax,DWORD PTR [ebp-0x10]
  40e875:	jne    0x40e887
  40e877:	mov    ecx,DWORD PTR [ebp+0x10]
  40e87a:	cmp    ecx,DWORD PTR [eax+0xac]
  40e880:	jb     0x40e8a2
  40e882:	cmp    BYTE PTR [esi+0x1],bl
  40e885:	je     0x40e8a2
  40e887:	mov    eax,DWORD PTR [eax+0xac]
  40e88d:	cmp    BYTE PTR [ebp-0x4],bl
  40e890:	je     0x40e7fc
  40e896:	mov    ecx,DWORD PTR [ebp-0x8]
  40e899:	and    DWORD PTR [ecx+0x70],0xfffffffd
  40e89d:	jmp    0x40e7fc
  40e8a2:	call   0x40769b
  40e8a7:	mov    DWORD PTR [eax],0x2a
  40e8ad:	cmp    BYTE PTR [ebp-0x4],bl
  40e8b0:	je     0x40e8b9
  40e8b2:	mov    eax,DWORD PTR [ebp-0x8]
  40e8b5:	and    DWORD PTR [eax+0x70],0xfffffffd
  40e8b9:	or     eax,0xffffffff
  40e8bc:	jmp    0x40e7fc
  40e8c1:	xor    eax,eax
  40e8c3:	cmp    DWORD PTR [ebp+0x8],ebx
  40e8c6:	setne  al
  40e8c9:	push   eax
  40e8ca:	push   DWORD PTR [ebp+0x8]
  40e8cd:	mov    eax,DWORD PTR [ebp-0x10]
  40e8d0:	push   0x1
  40e8d2:	push   esi
  40e8d3:	push   0x9
  40e8d5:	push   DWORD PTR [eax+0x4]
  40e8d8:	call   DWORD PTR ds:0x443190
  40e8de:	test   eax,eax
  40e8e0:	jne    0x40e820
  40e8e6:	jmp    0x40e8a2
  40e8e8:	mov    edi,edi
  40e8ea:	push   ebp
  40e8eb:	mov    ebp,esp
  40e8ed:	push   0x0
  40e8ef:	push   DWORD PTR [ebp+0x10]
  40e8f2:	push   DWORD PTR [ebp+0xc]
  40e8f5:	push   DWORD PTR [ebp+0x8]
  40e8f8:	call   0x40e7d2
  40e8fd:	add    esp,0x10
  40e900:	pop    ebp
  40e901:	ret    
  40e902:	mov    edi,edi
  40e904:	push   ebp
  40e905:	mov    ebp,esp
  40e907:	sub    esp,0x10
  40e90a:	push   DWORD PTR [ebp+0xc]
  40e90d:	lea    ecx,[ebp-0x10]
  40e910:	call   0x406b0c
  40e915:	movzx  eax,BYTE PTR [ebp+0x8]
  40e919:	mov    ecx,DWORD PTR [ebp-0x10]
  40e91c:	mov    ecx,DWORD PTR [ecx+0xc8]
  40e922:	movzx  eax,WORD PTR [ecx+eax*2]
  40e926:	and    eax,0x8000
  40e92b:	cmp    BYTE PTR [ebp-0x4],0x0
  40e92f:	je     0x40e938
  40e931:	mov    ecx,DWORD PTR [ebp-0x8]
  40e934:	and    DWORD PTR [ecx+0x70],0xfffffffd
  40e938:	leave  
  40e939:	ret    
  40e93a:	mov    edi,edi
  40e93c:	push   ebp
  40e93d:	mov    ebp,esp
  40e93f:	push   0x0
  40e941:	push   DWORD PTR [ebp+0x8]
  40e944:	call   0x40e902
  40e949:	pop    ecx
  40e94a:	pop    ecx
  40e94b:	pop    ebp
  40e94c:	ret    
  40e94d:	mov    edi,edi
  40e94f:	push   ebp
  40e950:	mov    ebp,esp
  40e952:	sub    esp,0x10
  40e955:	mov    eax,ds:0x44b470
  40e95a:	xor    eax,ebp
  40e95c:	mov    DWORD PTR [ebp-0x4],eax
  40e95f:	push   ebx
  40e960:	push   esi
  40e961:	mov    esi,DWORD PTR [ebp+0xc]
  40e964:	test   BYTE PTR [esi+0xc],0x40
  40e968:	push   edi
  40e969:	jne    0x40eaa5
  40e96f:	push   esi
  40e970:	call   0x407499
  40e975:	pop    ecx
  40e976:	mov    ebx,0x44b478
  40e97b:	cmp    eax,0xffffffff
  40e97e:	je     0x40e9ae
  40e980:	push   esi
  40e981:	call   0x407499
  40e986:	pop    ecx
  40e987:	cmp    eax,0xfffffffe
  40e98a:	je     0x40e9ae
  40e98c:	push   esi
  40e98d:	call   0x407499
  40e992:	sar    eax,0x5
  40e995:	push   esi
  40e996:	lea    edi,[eax*4+0x4507a0]
  40e99d:	call   0x407499
  40e9a2:	and    eax,0x1f
  40e9a5:	pop    ecx
  40e9a6:	shl    eax,0x6
  40e9a9:	add    eax,DWORD PTR [edi]
  40e9ab:	pop    ecx
  40e9ac:	jmp    0x40e9b0
  40e9ae:	mov    eax,ebx
  40e9b0:	mov    al,BYTE PTR [eax+0x24]
  40e9b3:	and    al,0x7f
  40e9b5:	cmp    al,0x2
  40e9b7:	je     0x40eaa5
  40e9bd:	push   esi
  40e9be:	call   0x407499
  40e9c3:	pop    ecx
  40e9c4:	cmp    eax,0xffffffff
  40e9c7:	je     0x40e9f7
  40e9c9:	push   esi
  40e9ca:	call   0x407499
  40e9cf:	pop    ecx
  40e9d0:	cmp    eax,0xfffffffe
  40e9d3:	je     0x40e9f7
  40e9d5:	push   esi
  40e9d6:	call   0x407499
  40e9db:	sar    eax,0x5
  40e9de:	push   esi
  40e9df:	lea    edi,[eax*4+0x4507a0]
  40e9e6:	call   0x407499
  40e9eb:	and    eax,0x1f
  40e9ee:	pop    ecx
  40e9ef:	shl    eax,0x6
  40e9f2:	add    eax,DWORD PTR [edi]
  40e9f4:	pop    ecx
  40e9f5:	jmp    0x40e9f9
  40e9f7:	mov    eax,ebx
  40e9f9:	mov    al,BYTE PTR [eax+0x24]
  40e9fc:	and    al,0x7f
  40e9fe:	cmp    al,0x1
  40ea00:	je     0x40eaa5
  40ea06:	push   esi
  40ea07:	call   0x407499
  40ea0c:	pop    ecx
  40ea0d:	cmp    eax,0xffffffff
  40ea10:	je     0x40ea40
  40ea12:	push   esi
  40ea13:	call   0x407499
  40ea18:	pop    ecx
  40ea19:	cmp    eax,0xfffffffe
  40ea1c:	je     0x40ea40
  40ea1e:	push   esi
  40ea1f:	call   0x407499
  40ea24:	sar    eax,0x5
  40ea27:	push   esi
  40ea28:	lea    edi,[eax*4+0x4507a0]
  40ea2f:	call   0x407499
  40ea34:	and    eax,0x1f
  40ea37:	pop    ecx
  40ea38:	shl    eax,0x6
  40ea3b:	add    eax,DWORD PTR [edi]
  40ea3d:	pop    ecx
  40ea3e:	jmp    0x40ea42
  40ea40:	mov    eax,ebx
  40ea42:	test   BYTE PTR [eax+0x4],0x80
  40ea46:	je     0x40eaa5
  40ea48:	push   DWORD PTR [ebp+0x8]
  40ea4b:	lea    eax,[ebp-0xc]
  40ea4e:	push   0x5
  40ea50:	push   eax
  40ea51:	lea    eax,[ebp-0x10]
  40ea54:	push   eax
  40ea55:	call   0x40ecda
  40ea5a:	add    esp,0x10
  40ea5d:	test   eax,eax
  40ea5f:	je     0x40ea68
  40ea61:	mov    eax,0xffff
  40ea66:	jmp    0x40eac5
  40ea68:	xor    edi,edi
  40ea6a:	cmp    DWORD PTR [ebp-0x10],edi
  40ea6d:	jle    0x40ea9f
  40ea6f:	dec    DWORD PTR [esi+0x4]
  40ea72:	js     0x40ea86
  40ea74:	mov    eax,DWORD PTR [esi]
  40ea76:	mov    cl,BYTE PTR [ebp+edi*1-0xc]
  40ea7a:	mov    BYTE PTR [eax],cl
  40ea7c:	mov    ecx,DWORD PTR [esi]
  40ea7e:	movzx  eax,BYTE PTR [ecx]
  40ea81:	inc    ecx
  40ea82:	mov    DWORD PTR [esi],ecx
  40ea84:	jmp    0x40ea94
  40ea86:	movsx  eax,BYTE PTR [ebp+edi*1-0xc]
  40ea8b:	push   esi
  40ea8c:	push   eax
  40ea8d:	call   0x4070f0
  40ea92:	pop    ecx
  40ea93:	pop    ecx
  40ea94:	cmp    eax,0xffffffff
  40ea97:	je     0x40ea61
  40ea99:	inc    edi
  40ea9a:	cmp    edi,DWORD PTR [ebp-0x10]
  40ea9d:	jl     0x40ea6f
  40ea9f:	mov    ax,WORD PTR [ebp+0x8]
  40eaa3:	jmp    0x40eac5
  40eaa5:	add    DWORD PTR [esi+0x4],0xfffffffe
  40eaa9:	js     0x40eab8
  40eaab:	mov    ecx,DWORD PTR [esi]
  40eaad:	mov    eax,DWORD PTR [ebp+0x8]
  40eab0:	mov    WORD PTR [ecx],ax
  40eab3:	add    DWORD PTR [esi],0x2
  40eab6:	jmp    0x40eac5
  40eab8:	movzx  eax,WORD PTR [ebp+0x8]
  40eabc:	push   esi
  40eabd:	push   eax
  40eabe:	call   0x410378
  40eac3:	pop    ecx
  40eac4:	pop    ecx
  40eac5:	mov    ecx,DWORD PTR [ebp-0x4]
  40eac8:	pop    edi
  40eac9:	pop    esi
  40eaca:	xor    ecx,ebp
  40eacc:	pop    ebx
  40eacd:	call   0x403edd
  40ead2:	leave  
  40ead3:	ret    
  40ead4:	mov    eax,ds:0x44b470
  40ead9:	or     eax,0x1
  40eadc:	xor    ecx,ecx
  40eade:	cmp    DWORD PTR ds:0x44e7cc,eax
  40eae4:	sete   cl
  40eae7:	mov    eax,ecx
  40eae9:	ret    
  40eaea:	int3   
  40eaeb:	int3   
  40eaec:	int3   
  40eaed:	int3   
  40eaee:	int3   
  40eaef:	int3   
  40eaf0:	push   esi
  40eaf1:	mov    eax,DWORD PTR [esp+0x14]
  40eaf5:	or     eax,eax
  40eaf7:	jne    0x40eb21
  40eaf9:	mov    ecx,DWORD PTR [esp+0x10]
  40eafd:	mov    eax,DWORD PTR [esp+0xc]
  40eb01:	xor    edx,edx
  40eb03:	div    ecx
  40eb05:	mov    ebx,eax
  40eb07:	mov    eax,DWORD PTR [esp+0x8]
  40eb0b:	div    ecx
  40eb0d:	mov    esi,eax
  40eb0f:	mov    eax,ebx
  40eb11:	mul    DWORD PTR [esp+0x10]
  40eb15:	mov    ecx,eax
  40eb17:	mov    eax,esi
  40eb19:	mul    DWORD PTR [esp+0x10]
  40eb1d:	add    edx,ecx
  40eb1f:	jmp    0x40eb68
  40eb21:	mov    ecx,eax
  40eb23:	mov    ebx,DWORD PTR [esp+0x10]
  40eb27:	mov    edx,DWORD PTR [esp+0xc]
  40eb2b:	mov    eax,DWORD PTR [esp+0x8]
  40eb2f:	shr    ecx,1
  40eb31:	rcr    ebx,1
  40eb33:	shr    edx,1
  40eb35:	rcr    eax,1
  40eb37:	or     ecx,ecx
  40eb39:	jne    0x40eb2f
  40eb3b:	div    ebx
  40eb3d:	mov    esi,eax
  40eb3f:	mul    DWORD PTR [esp+0x14]
  40eb43:	mov    ecx,eax
  40eb45:	mov    eax,DWORD PTR [esp+0x10]
  40eb49:	mul    esi
  40eb4b:	add    edx,ecx
  40eb4d:	jb     0x40eb5d
  40eb4f:	cmp    edx,DWORD PTR [esp+0xc]
  40eb53:	ja     0x40eb5d
  40eb55:	jb     0x40eb66
  40eb57:	cmp    eax,DWORD PTR [esp+0x8]
  40eb5b:	jbe    0x40eb66
  40eb5d:	dec    esi
  40eb5e:	sub    eax,DWORD PTR [esp+0x10]
  40eb62:	sbb    edx,DWORD PTR [esp+0x14]
  40eb66:	xor    ebx,ebx
  40eb68:	sub    eax,DWORD PTR [esp+0x8]
  40eb6c:	sbb    edx,DWORD PTR [esp+0xc]
  40eb70:	neg    edx
  40eb72:	neg    eax
  40eb74:	sbb    edx,0x0
  40eb77:	mov    ecx,edx
  40eb79:	mov    edx,ebx
  40eb7b:	mov    ebx,ecx
  40eb7d:	mov    ecx,eax
  40eb7f:	mov    eax,esi
  40eb81:	pop    esi
  40eb82:	ret    0x10
  40eb85:	mov    edi,edi
  40eb87:	push   ebp
  40eb88:	mov    ebp,esp
  40eb8a:	sub    esp,0x10
  40eb8d:	push   ebx
  40eb8e:	push   esi
  40eb8f:	mov    esi,DWORD PTR [ebp+0xc]
  40eb92:	xor    ebx,ebx
  40eb94:	push   edi
  40eb95:	mov    edi,DWORD PTR [ebp+0x10]
  40eb98:	cmp    esi,ebx
  40eb9a:	jne    0x40ebad
  40eb9c:	cmp    edi,ebx
  40eb9e:	jbe    0x40ebad
  40eba0:	mov    eax,DWORD PTR [ebp+0x8]
  40eba3:	cmp    eax,ebx
  40eba5:	je     0x40eba9
  40eba7:	mov    DWORD PTR [eax],ebx
  40eba9:	xor    eax,eax
  40ebab:	jmp    0x40ec28
  40ebad:	mov    eax,DWORD PTR [ebp+0x8]
  40ebb0:	cmp    eax,ebx
  40ebb2:	je     0x40ebb7
  40ebb4:	or     DWORD PTR [eax],0xffffffff
  40ebb7:	cmp    edi,0x7fffffff
  40ebbd:	jbe    0x40ebd2
  40ebbf:	call   0x40769b
  40ebc4:	push   0x16
  40ebc6:	pop    esi
  40ebc7:	mov    DWORD PTR [eax],esi
  40ebc9:	call   0x407649
  40ebce:	mov    eax,esi
  40ebd0:	jmp    0x40ec28
  40ebd2:	push   DWORD PTR [ebp+0x18]
  40ebd5:	lea    ecx,[ebp-0x10]
  40ebd8:	call   0x406b0c
  40ebdd:	mov    eax,DWORD PTR [ebp-0x10]
  40ebe0:	cmp    DWORD PTR [eax+0x14],ebx
  40ebe3:	jne    0x40ec79
  40ebe9:	mov    ax,WORD PTR [ebp+0x14]
  40ebed:	mov    ecx,0xff
  40ebf2:	cmp    ax,cx
  40ebf5:	jbe    0x40ec2d
  40ebf7:	cmp    esi,ebx
  40ebf9:	je     0x40ec0a
  40ebfb:	cmp    edi,ebx
  40ebfd:	jbe    0x40ec0a
  40ebff:	push   edi
  40ec00:	push   ebx
  40ec01:	push   esi
  40ec02:	call   0x40a550
  40ec07:	add    esp,0xc
  40ec0a:	call   0x40769b
  40ec0f:	mov    DWORD PTR [eax],0x2a
  40ec15:	call   0x40769b
  40ec1a:	mov    eax,DWORD PTR [eax]
  40ec1c:	cmp    BYTE PTR [ebp-0x4],bl
  40ec1f:	je     0x40ec28
  40ec21:	mov    ecx,DWORD PTR [ebp-0x8]
  40ec24:	and    DWORD PTR [ecx+0x70],0xfffffffd
  40ec28:	pop    edi
  40ec29:	pop    esi
  40ec2a:	pop    ebx
  40ec2b:	leave  
  40ec2c:	ret    
  40ec2d:	cmp    esi,ebx
  40ec2f:	je     0x40ec57
  40ec31:	cmp    edi,ebx
  40ec33:	ja     0x40ec55
  40ec35:	call   0x40769b
  40ec3a:	push   0x22
  40ec3c:	pop    esi
  40ec3d:	mov    DWORD PTR [eax],esi
  40ec3f:	call   0x407649
  40ec44:	cmp    BYTE PTR [ebp-0x4],bl
  40ec47:	je     0x40ebce
  40ec49:	mov    eax,DWORD PTR [ebp-0x8]
  40ec4c:	and    DWORD PTR [eax+0x70],0xfffffffd
  40ec50:	jmp    0x40ebce
  40ec55:	mov    BYTE PTR [esi],al
  40ec57:	mov    eax,DWORD PTR [ebp+0x8]
  40ec5a:	cmp    eax,ebx
  40ec5c:	je     0x40ec64
  40ec5e:	mov    DWORD PTR [eax],0x1
  40ec64:	cmp    BYTE PTR [ebp-0x4],bl
  40ec67:	je     0x40eba9
  40ec6d:	mov    eax,DWORD PTR [ebp-0x8]
  40ec70:	and    DWORD PTR [eax+0x70],0xfffffffd
  40ec74:	jmp    0x40eba9
  40ec79:	lea    ecx,[ebp+0xc]
  40ec7c:	push   ecx
  40ec7d:	push   ebx
  40ec7e:	push   edi
  40ec7f:	push   esi
  40ec80:	push   0x1
  40ec82:	lea    ecx,[ebp+0x14]
  40ec85:	push   ecx
  40ec86:	push   ebx
  40ec87:	mov    DWORD PTR [ebp+0xc],ebx
  40ec8a:	push   DWORD PTR [eax+0x4]
  40ec8d:	call   DWORD PTR ds:0x443198
  40ec93:	cmp    eax,ebx
  40ec95:	je     0x40ecab
  40ec97:	cmp    DWORD PTR [ebp+0xc],ebx
  40ec9a:	jne    0x40ec0a
  40eca0:	mov    ecx,DWORD PTR [ebp+0x8]
  40eca3:	cmp    ecx,ebx
  40eca5:	je     0x40ec64
  40eca7:	mov    DWORD PTR [ecx],eax
  40eca9:	jmp    0x40ec64
  40ecab:	call   DWORD PTR ds:0x443120
  40ecb1:	cmp    eax,0x7a
  40ecb4:	jne    0x40ec0a
  40ecba:	cmp    esi,ebx
  40ecbc:	je     0x40ec35
  40ecc2:	cmp    edi,ebx
  40ecc4:	jbe    0x40ec35
  40ecca:	push   edi
  40eccb:	push   ebx
  40eccc:	push   esi
  40eccd:	call   0x40a550
  40ecd2:	add    esp,0xc
  40ecd5:	jmp    0x40ec35
  40ecda:	mov    edi,edi
  40ecdc:	push   ebp
  40ecdd:	mov    ebp,esp
  40ecdf:	push   0x0
  40ece1:	push   DWORD PTR [ebp+0x14]
  40ece4:	push   DWORD PTR [ebp+0x10]
  40ece7:	push   DWORD PTR [ebp+0xc]
  40ecea:	push   DWORD PTR [ebp+0x8]
  40eced:	call   0x40eb85
  40ecf2:	add    esp,0x14
  40ecf5:	pop    ebp
  40ecf6:	ret    
  40ecf7:	pxor   xmm0,xmm0
  40ecfb:	push   ecx
  40ecfc:	push   ebx
  40ecfd:	mov    eax,ecx
  40ecff:	and    eax,0xf
  40ed02:	test   eax,eax
  40ed04:	jne    0x40ed85
  40ed06:	mov    eax,edx
  40ed08:	and    edx,0x7f
  40ed0b:	shr    eax,0x7
  40ed0e:	je     0x40ed47
  40ed10:	lea    esp,[esp+0x0]
  40ed17:	movdqa XMMWORD PTR [ecx],xmm0
  40ed1b:	movdqa XMMWORD PTR [ecx+0x10],xmm0
  40ed20:	movdqa XMMWORD PTR [ecx+0x20],xmm0
  40ed25:	movdqa XMMWORD PTR [ecx+0x30],xmm0
  40ed2a:	movdqa XMMWORD PTR [ecx+0x40],xmm0
  40ed2f:	movdqa XMMWORD PTR [ecx+0x50],xmm0
  40ed34:	movdqa XMMWORD PTR [ecx+0x60],xmm0
  40ed39:	movdqa XMMWORD PTR [ecx+0x70],xmm0
  40ed3e:	lea    ecx,[ecx+0x80]
  40ed44:	dec    eax
  40ed45:	jne    0x40ed17
  40ed47:	test   edx,edx
  40ed49:	je     0x40ed82
  40ed4b:	mov    eax,edx
  40ed4d:	shr    eax,0x4
  40ed50:	je     0x40ed61
  40ed52:	jmp    0x40ed57
  40ed54:	lea    ecx,[ecx+0x0]
  40ed57:	movdqa XMMWORD PTR [ecx],xmm0
  40ed5b:	lea    ecx,[ecx+0x10]
  40ed5e:	dec    eax
  40ed5f:	jne    0x40ed57
  40ed61:	and    edx,0xf
  40ed64:	je     0x40ed82
  40ed66:	mov    eax,edx
  40ed68:	xor    ebx,ebx
  40ed6a:	shr    edx,0x2
  40ed6d:	je     0x40ed77
  40ed6f:	mov    DWORD PTR [ecx],ebx
  40ed71:	lea    ecx,[ecx+0x4]
  40ed74:	dec    edx
  40ed75:	jne    0x40ed6f
  40ed77:	and    eax,0x3
  40ed7a:	je     0x40ed82
  40ed7c:	mov    BYTE PTR [ecx],bl
  40ed7e:	inc    ecx
  40ed7f:	dec    eax
  40ed80:	jne    0x40ed7c
  40ed82:	pop    ebx
  40ed83:	pop    eax
  40ed84:	ret    
  40ed85:	mov    ebx,eax
  40ed87:	neg    ebx
  40ed89:	add    ebx,0x10
  40ed8c:	sub    edx,ebx
  40ed8e:	xor    eax,eax
  40ed90:	push   edx
  40ed91:	mov    edx,ebx
  40ed93:	and    edx,0x3
  40ed96:	je     0x40ed9e
  40ed98:	mov    BYTE PTR [ecx],al
  40ed9a:	inc    ecx
  40ed9b:	dec    edx
  40ed9c:	jne    0x40ed98
  40ed9e:	shr    ebx,0x2
  40eda1:	je     0x40edab
  40eda3:	mov    DWORD PTR [ecx],eax
  40eda5:	lea    ecx,[ecx+0x4]
  40eda8:	dec    ebx
  40eda9:	jne    0x40eda3
  40edab:	pop    edx
  40edac:	jmp    0x40ed06
  40edb1:	xor    eax,eax
  40edb3:	ret    
  40edb4:	int3   
  40edb5:	int3   
  40edb6:	int3   
  40edb7:	int3   
  40edb8:	int3   
  40edb9:	int3   
  40edba:	int3   
  40edbb:	int3   
  40edbc:	int3   
  40edbd:	int3   
  40edbe:	int3   
  40edbf:	int3   
  40edc0:	cmp    BYTE PTR [edx+0xe],0x5
  40edc4:	jne    0x40edd7
  40edc6:	mov    bx,WORD PTR [ebp-0xa4]
  40edcd:	or     bh,0x2
  40edd0:	and    bh,0xfe
  40edd3:	mov    bl,0x3f
  40edd5:	jmp    0x40eddb
  40edd7:	mov    bx,0x133f
  40eddb:	mov    WORD PTR [ebp-0xa2],bx
  40ede2:	fldcw  WORD PTR [ebp-0xa2]
  40ede8:	mov    ebx,0x4451bc
  40eded:	fxam   
  40edef:	mov    DWORD PTR [ebp-0x94],edx
  40edf5:	fstsw  WORD PTR [ebp-0xa0]
  40edfc:	mov    BYTE PTR [ebp-0x90],0x0
  40ee03:	fwait
  40ee04:	mov    cl,BYTE PTR [ebp-0x9f]
  40ee0a:	shl    cl,1
  40ee0c:	sar    cl,1
  40ee0e:	rol    cl,1
  40ee10:	mov    al,cl
  40ee12:	and    al,0xf
  40ee14:	xlat   BYTE PTR ds:[ebx]
  40ee15:	movsx  eax,al
  40ee18:	and    ecx,0x404
  40ee1e:	mov    ebx,edx
  40ee20:	add    ebx,eax
  40ee22:	add    ebx,0x10
  40ee25:	jmp    DWORD PTR [ebx]
  40ee27:	cmp    BYTE PTR [edx+0xe],0x5
  40ee2b:	jne    0x40ee3e
  40ee2d:	mov    bx,WORD PTR [ebp-0xa4]
  40ee34:	or     bh,0x2
  40ee37:	and    bh,0xfe
  40ee3a:	mov    bl,0x3f
  40ee3c:	jmp    0x40ee42
  40ee3e:	mov    bx,0x133f
  40ee42:	mov    WORD PTR [ebp-0xa2],bx
  40ee49:	fldcw  WORD PTR [ebp-0xa2]
  40ee4f:	mov    ebx,0x4451bc
  40ee54:	fxam   
  40ee56:	mov    DWORD PTR [ebp-0x94],edx
  40ee5c:	fstsw  WORD PTR [ebp-0xa0]
  40ee63:	mov    BYTE PTR [ebp-0x90],0x0
  40ee6a:	fxch   st(1)
  40ee6c:	mov    cl,BYTE PTR [ebp-0x9f]
  40ee72:	fxam   
  40ee74:	fstsw  WORD PTR [ebp-0xa0]
  40ee7b:	fxch   st(1)
  40ee7d:	mov    ch,BYTE PTR [ebp-0x9f]
  40ee83:	shl    ch,1
  40ee85:	sar    ch,1
  40ee87:	rol    ch,1
  40ee89:	mov    al,ch
  40ee8b:	and    al,0xf
  40ee8d:	xlat   BYTE PTR ds:[ebx]
  40ee8e:	mov    ah,al
  40ee90:	shl    cl,1
  40ee92:	sar    cl,1
  40ee94:	rol    cl,1
  40ee96:	mov    al,cl
  40ee98:	and    al,0xf
  40ee9a:	xlat   BYTE PTR ds:[ebx]
  40ee9b:	shl    ah,1
  40ee9d:	shl    ah,1
  40ee9f:	or     al,ah
  40eea1:	movsx  eax,al
  40eea4:	and    ecx,0x404
  40eeaa:	mov    ebx,edx
  40eeac:	add    ebx,eax
  40eeae:	add    ebx,0x10
  40eeb1:	jmp    DWORD PTR [ebx]
  40eeb3:	call   0x40ef79
  40eeb8:	fxch   st(1)
  40eeba:	fstp   st(0)
  40eebc:	ret    
  40eebd:	call   0x40ef79
  40eec2:	jmp    0x40eeba
  40eec4:	fstp   st(0)
  40eec6:	fstp   st(0)
  40eec8:	fldz   
  40eeca:	ret    
  40eecb:	fstp   st(0)
  40eecd:	fstp   st(0)
  40eecf:	fld1   
  40eed1:	ret    
  40eed2:	fstp   TBYTE PTR [ebp-0x9e]
  40eed8:	fld    TBYTE PTR [ebp-0x9e]
  40eede:	test   BYTE PTR [ebp-0x97],0x40
  40eee5:	je     0x40eeef
  40eee7:	mov    BYTE PTR [ebp-0x90],0x7
  40eeee:	ret    
  40eeef:	mov    BYTE PTR [ebp-0x90],0x1
  40eef6:	fadd   QWORD PTR ds:0x4451b4
  40eefc:	ret    
  40eefd:	fxch   st(1)
  40eeff:	fstp   TBYTE PTR [ebp-0x9e]
  40ef05:	fld    TBYTE PTR [ebp-0x9e]
  40ef0b:	test   BYTE PTR [ebp-0x97],0x40
  40ef12:	je     0x40ef1d
  40ef14:	mov    BYTE PTR [ebp-0x90],0x7
  40ef1b:	jmp    0x40ef24
  40ef1d:	mov    BYTE PTR [ebp-0x90],0x1
  40ef24:	faddp  st(1),st
  40ef26:	ret    
  40ef27:	fstp   TBYTE PTR [ebp-0x9e]
  40ef2d:	fld    TBYTE PTR [ebp-0x9e]
  40ef33:	test   BYTE PTR [ebp-0x97],0x40
  40ef3a:	je     0x40ef5c
  40ef3c:	fxch   st(1)
  40ef3e:	fstp   TBYTE PTR [ebp-0x9e]
  40ef44:	fld    TBYTE PTR [ebp-0x9e]
  40ef4a:	test   BYTE PTR [ebp-0x97],0x40
  40ef51:	je     0x40ef5c
  40ef53:	mov    BYTE PTR [ebp-0x90],0x7
  40ef5a:	jmp    0x40ef63
  40ef5c:	mov    BYTE PTR [ebp-0x90],0x1
  40ef63:	faddp  st(1),st
  40ef65:	ret    
  40ef66:	fstp   st(0)
  40ef68:	fstp   st(0)
  40ef6a:	fld    TBYTE PTR ds:0x4451a0
  40ef70:	cmp    BYTE PTR [ebp-0x90],0x0
  40ef77:	jg     0x40ef80
  40ef79:	mov    BYTE PTR [ebp-0x90],0x1
  40ef80:	or     cl,cl
  40ef82:	ret    
  40ef83:	or     cl,cl
  40ef85:	je     0x40ef89
  40ef87:	fchs   
  40ef89:	ret    
  40ef8a:	int3   
  40ef8b:	int3   
  40ef8c:	int3   
  40ef8d:	int3   
  40ef8e:	int3   
  40ef8f:	int3   
  40ef90:	push   ebp
  40ef91:	mov    ebp,esp
  40ef93:	add    esp,0xffffffe0
  40ef96:	mov    DWORD PTR [ebp-0x20],eax
  40ef99:	mov    eax,DWORD PTR [ebp+0x18]
  40ef9c:	mov    DWORD PTR [ebp-0x10],eax
  40ef9f:	mov    eax,DWORD PTR [ebp+0x1c]
  40efa2:	mov    DWORD PTR [ebp-0xc],eax
  40efa5:	jmp    0x40efb0
  40efa7:	push   ebp
  40efa8:	mov    ebp,esp
  40efaa:	add    esp,0xffffffe0
  40efad:	mov    DWORD PTR [ebp-0x20],eax
  40efb0:	fstp   QWORD PTR [ebp-0x8]
  40efb3:	mov    DWORD PTR [ebp-0x1c],ecx
  40efb6:	mov    eax,DWORD PTR [ebp+0x10]
  40efb9:	mov    ecx,DWORD PTR [ebp+0x14]
  40efbc:	mov    DWORD PTR [ebp-0x18],eax
  40efbf:	mov    DWORD PTR [ebp-0x14],ecx
  40efc2:	lea    eax,[ebp+0x8]
  40efc5:	lea    ecx,[ebp-0x20]
  40efc8:	push   eax
  40efc9:	push   ecx
  40efca:	push   edx
  40efcb:	call   0x410742
  40efd0:	add    esp,0xc
  40efd3:	fld    QWORD PTR [ebp-0x8]
  40efd6:	cmp    WORD PTR [ebp+0x8],0x27f
  40efdc:	je     0x40efe1
  40efde:	fldcw  WORD PTR [ebp+0x8]
  40efe1:	leave  
  40efe2:	ret    
  40efe3:	int3   
  40efe4:	int3   
  40efe5:	int3   
  40efe6:	int3   
  40efe7:	int3   
  40efe8:	int3   
  40efe9:	int3   
  40efea:	int3   
  40efeb:	int3   
  40efec:	int3   
  40efed:	int3   
  40efee:	int3   
  40efef:	int3   
  40eff0:	fld    st(0)
  40eff2:	frndint 
  40eff4:	fsubr  st(1),st
  40eff6:	fxch   st(1)
  40eff8:	fchs   
  40effa:	f2xm1  
  40effc:	fld1   
  40effe:	faddp  st(1),st
  40f000:	fscale 
  40f002:	fstp   st(1)
  40f004:	ret    
  40f005:	mov    edx,DWORD PTR [esp+0x4]
  40f009:	and    edx,0x300
  40f00f:	or     edx,0x7f
  40f012:	mov    WORD PTR [esp+0x6],dx
  40f017:	fldcw  WORD PTR [esp+0x6]
  40f01b:	ret    
  40f01c:	test   eax,0x80000
  40f021:	je     0x40f029
  40f023:	mov    eax,0x7
  40f028:	ret    
  40f029:	fadd   QWORD PTR ds:0x4451d0
  40f02f:	mov    eax,0x1
  40f034:	ret    
  40f035:	mov    eax,DWORD PTR [edx+0x4]
  40f038:	and    eax,0x7ff00000
  40f03d:	cmp    eax,0x7ff00000
  40f042:	je     0x40f047
  40f044:	fld    QWORD PTR [edx]
  40f046:	ret    
  40f047:	mov    eax,DWORD PTR [edx+0x4]
  40f04a:	sub    esp,0xa
  40f04d:	or     eax,0x7fff0000
  40f052:	mov    DWORD PTR [esp+0x6],eax
  40f056:	mov    eax,DWORD PTR [edx+0x4]
  40f059:	mov    ecx,DWORD PTR [edx]
  40f05b:	shld   eax,ecx,0xb
  40f05f:	shl    ecx,0xb
  40f062:	mov    DWORD PTR [esp+0x4],eax
  40f066:	mov    DWORD PTR [esp],ecx
  40f069:	fld    TBYTE PTR [esp]
  40f06c:	add    esp,0xa
  40f06f:	test   eax,0x0
  40f074:	mov    eax,DWORD PTR [edx+0x4]
  40f077:	ret    
  40f078:	mov    eax,DWORD PTR [esp+0x8]
  40f07c:	and    eax,0x7ff00000
  40f081:	cmp    eax,0x7ff00000
  40f086:	je     0x40f089
  40f088:	ret    
  40f089:	mov    eax,DWORD PTR [esp+0x8]
  40f08d:	ret    
  40f08e:	cmp    WORD PTR [esp],0x27f
  40f094:	je     0x40f099
  40f096:	fldcw  WORD PTR [esp]
  40f099:	pop    edx
  40f09a:	ret    
  40f09b:	mov    ax,WORD PTR [esp]
  40f09f:	cmp    ax,0x27f
  40f0a3:	je     0x40f0c3
  40f0a5:	and    ax,0x20
  40f0a9:	je     0x40f0c0
  40f0ab:	fstsw  ax
  40f0ae:	and    ax,0x20
  40f0b2:	je     0x40f0c0
  40f0b4:	mov    eax,0x8
  40f0b9:	call   0x40efa7
  40f0be:	pop    edx
  40f0bf:	ret    
  40f0c0:	fldcw  WORD PTR [esp]
  40f0c3:	pop    edx
  40f0c4:	ret    
  40f0c5:	sub    esp,0x8
  40f0c8:	fst    QWORD PTR [esp]
  40f0cb:	mov    eax,DWORD PTR [esp+0x4]
  40f0cf:	add    esp,0x8
  40f0d2:	and    eax,0x7ff00000
  40f0d7:	jmp    0x40f0ed
  40f0d9:	sub    esp,0x8
  40f0dc:	fst    QWORD PTR [esp]
  40f0df:	mov    eax,DWORD PTR [esp+0x4]
  40f0e3:	add    esp,0x8
  40f0e6:	and    eax,0x7ff00000
  40f0eb:	je     0x40f12a
  40f0ed:	cmp    eax,0x7ff00000
  40f0f2:	je     0x40f153
  40f0f4:	mov    ax,WORD PTR [esp]
  40f0f8:	cmp    ax,0x27f
  40f0fc:	je     0x40f128
  40f0fe:	and    ax,0x20
  40f102:	jne    0x40f125
  40f104:	fstsw  ax
  40f107:	and    ax,0x20
  40f10b:	je     0x40f125
  40f10d:	mov    eax,0x8
  40f112:	cmp    edx,0x1d
  40f115:	je     0x40f11e
  40f117:	call   0x40efa7
  40f11c:	pop    edx
  40f11d:	ret    
  40f11e:	call   0x40ef90
  40f123:	pop    edx
  40f124:	ret    
  40f125:	fldcw  WORD PTR [esp]
  40f128:	pop    edx
  40f129:	ret    
  40f12a:	fld    QWORD PTR ds:0x4451fc
  40f130:	fxch   st(1)
  40f132:	fscale 
  40f134:	fstp   st(1)
  40f136:	fld    st(0)
  40f138:	fabs   
  40f13a:	fcomp  QWORD PTR ds:0x4451ec
  40f140:	fstsw  ax
  40f143:	sahf   
  40f144:	mov    eax,0x4
  40f149:	jae    0x40f112
  40f14b:	fmul   QWORD PTR ds:0x44520c
  40f151:	jmp    0x40f112
  40f153:	fld    QWORD PTR ds:0x4451f4
  40f159:	fxch   st(1)
  40f15b:	fscale 
  40f15d:	fstp   st(1)
  40f15f:	fld    st(0)
  40f161:	fabs   
  40f163:	fcomp  QWORD PTR ds:0x4451e4
  40f169:	fstsw  ax
  40f16c:	sahf   
  40f16d:	mov    eax,0x3
  40f172:	jbe    0x40f112
  40f174:	fmul   QWORD PTR ds:0x445204
  40f17a:	jmp    0x40f112
  40f17c:	mov    edi,edi
  40f17e:	push   ebp
  40f17f:	mov    ebp,esp
  40f181:	sub    esp,0x10
  40f184:	push   esi
  40f185:	push   DWORD PTR [ebp+0xc]
  40f188:	lea    ecx,[ebp-0x10]
  40f18b:	call   0x406b0c
  40f190:	mov    esi,DWORD PTR [ebp+0x8]
  40f193:	movsx  eax,BYTE PTR [esi]
  40f196:	push   eax
  40f197:	call   0x4109d2
  40f19c:	cmp    eax,0x65
  40f19f:	jmp    0x40f1ad
  40f1a1:	inc    esi
  40f1a2:	movzx  eax,BYTE PTR [esi]
  40f1a5:	push   eax
  40f1a6:	call   0x406e11
  40f1ab:	test   eax,eax
  40f1ad:	pop    ecx
  40f1ae:	jne    0x40f1a1
  40f1b0:	movsx  eax,BYTE PTR [esi]
  40f1b3:	push   eax
  40f1b4:	call   0x4109d2
  40f1b9:	pop    ecx
  40f1ba:	cmp    eax,0x78
  40f1bd:	jne    0x40f1c2
  40f1bf:	add    esi,0x2
  40f1c2:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1c5:	mov    ecx,DWORD PTR [ecx+0xbc]
  40f1cb:	mov    ecx,DWORD PTR [ecx]
  40f1cd:	mov    al,BYTE PTR [esi]
  40f1cf:	mov    cl,BYTE PTR [ecx]
  40f1d1:	mov    BYTE PTR [esi],cl
  40f1d3:	inc    esi
  40f1d4:	mov    cl,BYTE PTR [esi]
  40f1d6:	mov    BYTE PTR [esi],al
  40f1d8:	mov    al,cl
  40f1da:	mov    cl,BYTE PTR [esi]
  40f1dc:	inc    esi
  40f1dd:	test   cl,cl
  40f1df:	jne    0x40f1d4
  40f1e1:	pop    esi
  40f1e2:	cmp    BYTE PTR [ebp-0x4],cl
  40f1e5:	je     0x40f1ee
  40f1e7:	mov    eax,DWORD PTR [ebp-0x8]
  40f1ea:	and    DWORD PTR [eax+0x70],0xfffffffd
  40f1ee:	leave  
  40f1ef:	ret    
  40f1f0:	mov    edi,edi
  40f1f2:	push   ebp
  40f1f3:	mov    ebp,esp
  40f1f5:	sub    esp,0x10
  40f1f8:	push   esi
  40f1f9:	push   DWORD PTR [ebp+0xc]
  40f1fc:	lea    ecx,[ebp-0x10]
  40f1ff:	call   0x406b0c
  40f204:	mov    eax,DWORD PTR [ebp+0x8]
  40f207:	mov    cl,BYTE PTR [eax]
  40f209:	mov    esi,DWORD PTR [ebp-0x10]
  40f20c:	test   cl,cl
  40f20e:	je     0x40f225
  40f210:	mov    edx,DWORD PTR [esi+0xbc]
  40f216:	mov    edx,DWORD PTR [edx]
  40f218:	mov    dl,BYTE PTR [edx]
  40f21a:	cmp    cl,dl
  40f21c:	je     0x40f225
  40f21e:	inc    eax
  40f21f:	mov    cl,BYTE PTR [eax]
  40f221:	test   cl,cl
  40f223:	jne    0x40f21a
  40f225:	mov    cl,BYTE PTR [eax]
  40f227:	inc    eax
  40f228:	test   cl,cl
  40f22a:	je     0x40f262
  40f22c:	jmp    0x40f239
  40f22e:	cmp    cl,0x65
  40f231:	je     0x40f23f
  40f233:	cmp    cl,0x45
  40f236:	je     0x40f23f
  40f238:	inc    eax
  40f239:	mov    cl,BYTE PTR [eax]
  40f23b:	test   cl,cl
  40f23d:	jne    0x40f22e
  40f23f:	mov    edx,eax
  40f241:	dec    eax
  40f242:	cmp    BYTE PTR [eax],0x30
  40f245:	je     0x40f241
  40f247:	mov    ecx,DWORD PTR [esi+0xbc]
  40f24d:	mov    ecx,DWORD PTR [ecx]
  40f24f:	push   ebx
  40f250:	mov    bl,BYTE PTR [eax]
  40f252:	cmp    bl,BYTE PTR [ecx]
  40f254:	pop    ebx
  40f255:	jne    0x40f258
  40f257:	dec    eax
  40f258:	mov    cl,BYTE PTR [edx]
  40f25a:	inc    eax
  40f25b:	inc    edx
  40f25c:	mov    BYTE PTR [eax],cl
  40f25e:	test   cl,cl
  40f260:	jne    0x40f258
  40f262:	cmp    BYTE PTR [ebp-0x4],0x0
  40f266:	pop    esi
  40f267:	je     0x40f270
  40f269:	mov    eax,DWORD PTR [ebp-0x8]
  40f26c:	and    DWORD PTR [eax+0x70],0xfffffffd
  40f270:	leave  
  40f271:	ret    
  40f272:	mov    edi,edi
  40f274:	push   ebp
  40f275:	mov    ebp,esp
  40f277:	fldz   
  40f279:	mov    eax,DWORD PTR [ebp+0x8]
  40f27c:	fcomp  QWORD PTR [eax]
  40f27e:	fnstsw ax
  40f280:	test   ah,0x41
  40f283:	jp     0x40f28a
  40f285:	xor    eax,eax
  40f287:	inc    eax
  40f288:	pop    ebp
  40f289:	ret    
  40f28a:	xor    eax,eax
  40f28c:	pop    ebp
  40f28d:	ret    
  40f28e:	mov    edi,edi
  40f290:	push   ebp
  40f291:	mov    ebp,esp
  40f293:	push   ecx
  40f294:	push   ecx
  40f295:	cmp    DWORD PTR [ebp+0x8],0x0
  40f299:	push   DWORD PTR [ebp+0x14]
  40f29c:	push   DWORD PTR [ebp+0x10]
  40f29f:	je     0x40f2ba
  40f2a1:	lea    eax,[ebp-0x8]
  40f2a4:	push   eax
  40f2a5:	call   0x4109fe
  40f2aa:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f2b0:	mov    DWORD PTR [eax],ecx
  40f2b2:	mov    ecx,DWORD PTR [ebp-0x4]
  40f2b5:	mov    DWORD PTR [eax+0x4],ecx
  40f2b8:	jmp    0x40f2cb
  40f2ba:	lea    eax,[ebp+0x8]
  40f2bd:	push   eax
  40f2be:	call   0x410aa6
  40f2c3:	mov    eax,DWORD PTR [ebp+0xc]
  40f2c6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f2c9:	mov    DWORD PTR [eax],ecx
  40f2cb:	add    esp,0xc
  40f2ce:	leave  
  40f2cf:	ret    
  40f2d0:	mov    edi,edi
  40f2d2:	push   ebp
  40f2d3:	mov    ebp,esp
  40f2d5:	push   0x0
  40f2d7:	push   DWORD PTR [ebp+0x10]
  40f2da:	push   DWORD PTR [ebp+0xc]
  40f2dd:	push   DWORD PTR [ebp+0x8]
  40f2e0:	call   0x40f28e
  40f2e5:	add    esp,0x10
  40f2e8:	pop    ebp
  40f2e9:	ret    
  40f2ea:	mov    edi,edi
  40f2ec:	push   esi
  40f2ed:	mov    esi,eax
  40f2ef:	test   edi,edi
  40f2f1:	je     0x40f307
  40f2f3:	push   esi
  40f2f4:	call   0x405450
  40f2f9:	inc    eax
  40f2fa:	push   eax
  40f2fb:	push   esi
  40f2fc:	add    esi,edi
  40f2fe:	push   esi
  40f2ff:	call   0x404030
  40f304:	add    esp,0x10
  40f307:	pop    esi
  40f308:	ret    
  40f309:	mov    edi,edi
  40f30b:	push   ebp
  40f30c:	mov    ebp,esp
  40f30e:	push   0x0
  40f310:	push   DWORD PTR [ebp+0x8]
  40f313:	call   0x40f17c
  40f318:	pop    ecx
  40f319:	pop    ecx
  40f31a:	pop    ebp
  40f31b:	ret    
  40f31c:	mov    edi,edi
  40f31e:	push   ebp
  40f31f:	mov    ebp,esp
  40f321:	push   0x0
  40f323:	push   DWORD PTR [ebp+0x8]
  40f326:	call   0x40f1f0
  40f32b:	pop    ecx
  40f32c:	pop    ecx
  40f32d:	pop    ebp
  40f32e:	ret    
  40f32f:	mov    edi,edi
  40f331:	push   ebp
  40f332:	mov    ebp,esp
  40f334:	sub    esp,0x10
  40f337:	push   ebx
  40f338:	push   esi
  40f339:	push   DWORD PTR [ebp+0x1c]
  40f33c:	lea    ecx,[ebp-0x10]
  40f33f:	mov    ebx,eax
  40f341:	call   0x406b0c
  40f346:	xor    ecx,ecx
  40f348:	cmp    ebx,ecx
  40f34a:	jne    0x40f36e
  40f34c:	call   0x40769b
  40f351:	push   0x16
  40f353:	pop    esi
  40f354:	mov    DWORD PTR [eax],esi
  40f356:	call   0x407649
  40f35b:	cmp    BYTE PTR [ebp-0x4],0x0
  40f35f:	je     0x40f368
  40f361:	mov    eax,DWORD PTR [ebp-0x8]
  40f364:	and    DWORD PTR [eax+0x70],0xfffffffd
  40f368:	mov    eax,esi
  40f36a:	pop    esi
  40f36b:	pop    ebx
  40f36c:	leave  
  40f36d:	ret    
  40f36e:	cmp    DWORD PTR [ebp+0x8],ecx
  40f371:	jbe    0x40f34c
  40f373:	cmp    DWORD PTR [ebp+0xc],ecx
  40f376:	jle    0x40f37d
  40f378:	mov    eax,DWORD PTR [ebp+0xc]
  40f37b:	jmp    0x40f37f
  40f37d:	xor    eax,eax
  40f37f:	add    eax,0x9
  40f382:	cmp    DWORD PTR [ebp+0x8],eax
  40f385:	ja     0x40f390
  40f387:	call   0x40769b
  40f38c:	push   0x22
  40f38e:	jmp    0x40f353
  40f390:	push   edi
  40f391:	cmp    BYTE PTR [ebp+0x18],cl
  40f394:	je     0x40f3b4
  40f396:	mov    edx,DWORD PTR [ebp+0x14]
  40f399:	xor    eax,eax
  40f39b:	cmp    DWORD PTR [ebp+0xc],ecx
  40f39e:	setg   al
  40f3a1:	xor    ecx,ecx
  40f3a3:	cmp    DWORD PTR [edx],0x2d
  40f3a6:	sete   cl
  40f3a9:	mov    edi,eax
  40f3ab:	add    ecx,ebx
  40f3ad:	mov    eax,ecx
  40f3af:	call   0x40f2ea
  40f3b4:	mov    edi,DWORD PTR [ebp+0x14]
  40f3b7:	cmp    DWORD PTR [edi],0x2d
  40f3ba:	mov    esi,ebx
  40f3bc:	jne    0x40f3c4
  40f3be:	mov    BYTE PTR [ebx],0x2d
  40f3c1:	lea    esi,[ebx+0x1]
  40f3c4:	cmp    DWORD PTR [ebp+0xc],0x0
  40f3c8:	jle    0x40f3df
  40f3ca:	mov    cl,BYTE PTR [esi+0x1]
  40f3cd:	mov    eax,DWORD PTR [ebp-0x10]
  40f3d0:	mov    BYTE PTR [esi],cl
  40f3d2:	mov    eax,DWORD PTR [eax+0xbc]
  40f3d8:	mov    eax,DWORD PTR [eax]
  40f3da:	mov    al,BYTE PTR [eax]
  40f3dc:	inc    esi
  40f3dd:	mov    BYTE PTR [esi],al
  40f3df:	xor    eax,eax
  40f3e1:	cmp    BYTE PTR [ebp+0x18],al
  40f3e4:	sete   al
  40f3e7:	add    eax,DWORD PTR [ebp+0xc]
  40f3ea:	add    esi,eax
  40f3ec:	cmp    DWORD PTR [ebp+0x8],0xffffffff
  40f3f0:	jne    0x40f3f7
  40f3f2:	or     ebx,0xffffffff
  40f3f5:	jmp    0x40f3fc
  40f3f7:	sub    ebx,esi
  40f3f9:	add    ebx,DWORD PTR [ebp+0x8]
  40f3fc:	push   0x445214
  40f401:	push   ebx
  40f402:	push   esi
  40f403:	call   0x4078df
  40f408:	add    esp,0xc
  40f40b:	test   eax,eax
  40f40d:	jne    0x40f483
  40f40f:	lea    ecx,[esi+0x2]
  40f412:	cmp    DWORD PTR [ebp+0x10],eax
  40f415:	je     0x40f41a
  40f417:	mov    BYTE PTR [esi],0x45
  40f41a:	mov    eax,DWORD PTR [edi+0xc]
  40f41d:	cmp    BYTE PTR [eax],0x30
  40f420:	je     0x40f451
  40f422:	mov    eax,DWORD PTR [edi+0x4]
  40f425:	dec    eax
  40f426:	jns    0x40f42e
  40f428:	neg    eax
  40f42a:	mov    BYTE PTR [esi+0x1],0x2d
  40f42e:	cmp    eax,0x64
  40f431:	jl     0x40f43e
  40f433:	cdq    
  40f434:	push   0x64
  40f436:	pop    edi
  40f437:	idiv   edi
  40f439:	add    BYTE PTR [esi+0x2],al
  40f43c:	mov    eax,edx
  40f43e:	cmp    eax,0xa
  40f441:	jl     0x40f44e
  40f443:	cdq    
  40f444:	push   0xa
  40f446:	pop    edi
  40f447:	idiv   edi
  40f449:	add    BYTE PTR [esi+0x3],al
  40f44c:	mov    eax,edx
  40f44e:	add    BYTE PTR [esi+0x4],al
  40f451:	test   BYTE PTR ds:0x44e824,0x1
  40f458:	pop    edi
  40f459:	je     0x40f46f
  40f45b:	cmp    BYTE PTR [ecx],0x30
  40f45e:	jne    0x40f46f
  40f460:	push   0x3
  40f462:	lea    eax,[ecx+0x1]
  40f465:	push   eax
  40f466:	push   ecx
  40f467:	call   0x404030
  40f46c:	add    esp,0xc
  40f46f:	cmp    BYTE PTR [ebp-0x4],0x0
  40f473:	je     0x40f47c
  40f475:	mov    eax,DWORD PTR [ebp-0x8]
  40f478:	and    DWORD PTR [eax+0x70],0xfffffffd
  40f47c:	xor    eax,eax
  40f47e:	jmp    0x40f36a
  40f483:	xor    eax,eax
  40f485:	push   eax
  40f486:	push   eax
  40f487:	push   eax
  40f488:	push   eax
  40f489:	push   eax
  40f48a:	call   0x4075f7
  40f48f:	int3   
  40f490:	mov    edi,edi
  40f492:	push   ebp
  40f493:	mov    ebp,esp
  40f495:	sub    esp,0x2c
  40f498:	mov    eax,ds:0x44b470
  40f49d:	xor    eax,ebp
  40f49f:	mov    DWORD PTR [ebp-0x4],eax
  40f4a2:	mov    eax,DWORD PTR [ebp+0x8]
  40f4a5:	push   ebx
  40f4a6:	push   esi
  40f4a7:	mov    esi,DWORD PTR [ebp+0x14]
  40f4aa:	push   edi
  40f4ab:	mov    edi,DWORD PTR [ebp+0xc]
  40f4ae:	push   0x16
  40f4b0:	pop    ebx
  40f4b1:	push   ebx
  40f4b2:	lea    ecx,[ebp-0x1c]
  40f4b5:	push   ecx
  40f4b6:	lea    ecx,[ebp-0x2c]
  40f4b9:	push   ecx
  40f4ba:	push   DWORD PTR [eax+0x4]
  40f4bd:	push   DWORD PTR [eax]
  40f4bf:	call   0x410cb4
  40f4c4:	add    esp,0x14
  40f4c7:	test   edi,edi
  40f4c9:	jne    0x40f4db
  40f4cb:	call   0x40769b
  40f4d0:	mov    DWORD PTR [eax],ebx
  40f4d2:	call   0x407649
  40f4d7:	mov    eax,ebx
  40f4d9:	jmp    0x40f548
  40f4db:	mov    eax,DWORD PTR [ebp+0x10]
  40f4de:	test   eax,eax
  40f4e0:	je     0x40f4cb
  40f4e2:	cmp    eax,0xffffffff
  40f4e5:	jne    0x40f4eb
  40f4e7:	or     eax,eax
  40f4e9:	jmp    0x40f4ff
  40f4eb:	xor    ecx,ecx
  40f4ed:	cmp    DWORD PTR [ebp-0x2c],0x2d
  40f4f1:	sete   cl
  40f4f4:	sub    eax,ecx
  40f4f6:	xor    ecx,ecx
  40f4f8:	test   esi,esi
  40f4fa:	setg   cl
  40f4fd:	sub    eax,ecx
  40f4ff:	lea    ecx,[ebp-0x2c]
  40f502:	push   ecx
  40f503:	lea    ecx,[esi+0x1]
  40f506:	push   ecx
  40f507:	push   eax
  40f508:	xor    eax,eax
  40f50a:	cmp    DWORD PTR [ebp-0x2c],0x2d
  40f50e:	sete   al
  40f511:	xor    ecx,ecx
  40f513:	test   esi,esi
  40f515:	setg   cl
  40f518:	add    eax,edi
  40f51a:	add    ecx,eax
  40f51c:	push   ecx
  40f51d:	call   0x410b4e
  40f522:	add    esp,0x10
  40f525:	test   eax,eax
  40f527:	je     0x40f52e
  40f529:	mov    BYTE PTR [edi],0x0
  40f52c:	jmp    0x40f548
  40f52e:	push   DWORD PTR [ebp+0x1c]
  40f531:	lea    eax,[ebp-0x2c]
  40f534:	push   0x0
  40f536:	push   eax
  40f537:	push   DWORD PTR [ebp+0x18]
  40f53a:	mov    eax,edi
  40f53c:	push   esi
  40f53d:	push   DWORD PTR [ebp+0x10]
  40f540:	call   0x40f32f
  40f545:	add    esp,0x18
  40f548:	mov    ecx,DWORD PTR [ebp-0x4]
  40f54b:	pop    edi
  40f54c:	pop    esi
  40f54d:	xor    ecx,ebp
  40f54f:	pop    ebx
  40f550:	call   0x403edd
  40f555:	leave  
  40f556:	ret    
  40f557:	mov    edi,edi
  40f559:	push   ebp
  40f55a:	mov    ebp,esp
  40f55c:	push   0x0
  40f55e:	push   DWORD PTR [ebp+0x18]
  40f561:	push   DWORD PTR [ebp+0x14]
  40f564:	push   DWORD PTR [ebp+0x10]
  40f567:	push   DWORD PTR [ebp+0xc]
  40f56a:	push   DWORD PTR [ebp+0x8]
  40f56d:	call   0x40f490
  40f572:	add    esp,0x18
  40f575:	pop    ebp
  40f576:	ret    
  40f577:	mov    edi,edi
  40f579:	push   ebp
  40f57a:	mov    ebp,esp
  40f57c:	sub    esp,0x24
  40f57f:	push   esi
  40f580:	push   edi
  40f581:	push   DWORD PTR [ebp+0x1c]
  40f584:	lea    ecx,[ebp-0x24]
  40f587:	mov    DWORD PTR [ebp-0x14],0x3ff
  40f58e:	xor    edi,edi
  40f590:	mov    DWORD PTR [ebp-0x4],0x30
  40f597:	call   0x406b0c
  40f59c:	cmp    DWORD PTR [ebp+0x14],edi
  40f59f:	jge    0x40f5a4
  40f5a1:	mov    DWORD PTR [ebp+0x14],edi
  40f5a4:	mov    esi,DWORD PTR [ebp+0xc]
  40f5a7:	cmp    esi,edi
  40f5a9:	jne    0x40f5ce
  40f5ab:	call   0x40769b
  40f5b0:	push   0x16
  40f5b2:	pop    esi
  40f5b3:	mov    DWORD PTR [eax],esi
  40f5b5:	call   0x407649
  40f5ba:	cmp    BYTE PTR [ebp-0x18],0x0
  40f5be:	je     0x40f5c7
  40f5c0:	mov    eax,DWORD PTR [ebp-0x1c]
  40f5c3:	and    DWORD PTR [eax+0x70],0xfffffffd
  40f5c7:	mov    eax,esi
  40f5c9:	jmp    0x40f8e9
  40f5ce:	cmp    DWORD PTR [ebp+0x10],edi
  40f5d1:	jbe    0x40f5ab
  40f5d3:	mov    eax,DWORD PTR [ebp+0x14]
  40f5d6:	add    eax,0xb
  40f5d9:	mov    BYTE PTR [esi],0x0
  40f5dc:	cmp    DWORD PTR [ebp+0x10],eax
  40f5df:	ja     0x40f5ea
  40f5e1:	call   0x40769b
  40f5e6:	push   0x22
  40f5e8:	jmp    0x40f5b2
  40f5ea:	mov    edi,DWORD PTR [ebp+0x8]
  40f5ed:	mov    eax,DWORD PTR [edi]
  40f5ef:	mov    DWORD PTR [ebp-0xc],eax
  40f5f2:	mov    eax,DWORD PTR [edi+0x4]
  40f5f5:	mov    ecx,eax
  40f5f7:	shr    ecx,0x14
  40f5fa:	mov    edx,0x7ff
  40f5ff:	push   ebx
  40f600:	and    ecx,edx
  40f602:	xor    ebx,ebx
  40f604:	cmp    ecx,edx
  40f606:	jne    0x40f69e
  40f60c:	test   ebx,ebx
  40f60e:	jne    0x40f69e
  40f614:	mov    eax,DWORD PTR [ebp+0x10]
  40f617:	cmp    eax,0xffffffff
  40f61a:	jne    0x40f620
  40f61c:	or     eax,eax
  40f61e:	jmp    0x40f623
  40f620:	add    eax,0xfffffffe
  40f623:	push   0x0
  40f625:	push   DWORD PTR [ebp+0x14]
  40f628:	lea    ebx,[esi+0x2]
  40f62b:	push   eax
  40f62c:	push   ebx
  40f62d:	push   edi
  40f62e:	call   0x40f557
  40f633:	add    esp,0x14
  40f636:	test   eax,eax
  40f638:	je     0x40f653
  40f63a:	cmp    BYTE PTR [ebp-0x18],0x0
  40f63e:	mov    BYTE PTR [esi],0x0
  40f641:	je     0x40f8e8
  40f647:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f64a:	and    DWORD PTR [ecx+0x70],0xfffffffd
  40f64e:	jmp    0x40f8e8
  40f653:	cmp    BYTE PTR [ebx],0x2d
  40f656:	jne    0x40f65c
  40f658:	mov    BYTE PTR [esi],0x2d
  40f65b:	inc    esi
  40f65c:	cmp    DWORD PTR [ebp+0x18],0x0
  40f660:	mov    BYTE PTR [esi],0x30
  40f663:	sete   al
  40f666:	dec    al
  40f668:	and    al,0xe0
  40f66a:	add    al,0x78
  40f66c:	mov    BYTE PTR [esi+0x1],al
  40f66f:	push   0x65
  40f671:	add    esi,0x2
  40f674:	push   esi
  40f675:	call   0x410890
  40f67a:	pop    ecx
  40f67b:	pop    ecx
  40f67c:	test   eax,eax
  40f67e:	je     0x40f8d9
  40f684:	cmp    DWORD PTR [ebp+0x18],0x0
  40f688:	sete   cl
  40f68b:	dec    cl
  40f68d:	and    cl,0xe0
  40f690:	add    cl,0x70
  40f693:	mov    BYTE PTR [eax],cl
  40f695:	mov    BYTE PTR [eax+0x3],0x0
  40f699:	jmp    0x40f8d9
  40f69e:	and    eax,0x80000000
  40f6a3:	xor    ecx,ecx
  40f6a5:	or     ecx,eax
  40f6a7:	je     0x40f6ad
  40f6a9:	mov    BYTE PTR [esi],0x2d
  40f6ac:	inc    esi
  40f6ad:	mov    ebx,DWORD PTR [ebp+0x18]
  40f6b0:	test   ebx,ebx
  40f6b2:	sete   al
  40f6b5:	dec    al
  40f6b7:	and    al,0xe0
  40f6b9:	add    al,0x78
  40f6bb:	neg    ebx
  40f6bd:	sbb    ebx,ebx
  40f6bf:	mov    BYTE PTR [esi],0x30
  40f6c2:	mov    BYTE PTR [esi+0x1],al
  40f6c5:	mov    ecx,DWORD PTR [edi+0x4]
  40f6c8:	and    ebx,0xffffffe0
  40f6cb:	and    ecx,0x7ff00000
  40f6d1:	xor    eax,eax
  40f6d3:	add    ebx,0x27
  40f6d6:	xor    edx,edx
  40f6d8:	or     eax,ecx
  40f6da:	jne    0x40f700
  40f6dc:	mov    BYTE PTR [esi+0x2],0x30
  40f6e0:	mov    ecx,DWORD PTR [edi+0x4]
  40f6e3:	mov    eax,DWORD PTR [edi]
  40f6e5:	and    ecx,0xfffff
  40f6eb:	add    esi,0x3
  40f6ee:	or     eax,ecx
  40f6f0:	jne    0x40f6f7
  40f6f2:	mov    DWORD PTR [ebp-0x14],edx
  40f6f5:	jmp    0x40f707
  40f6f7:	mov    DWORD PTR [ebp-0x14],0x3fe
  40f6fe:	jmp    0x40f707
  40f700:	mov    BYTE PTR [esi+0x2],0x31
  40f704:	add    esi,0x3
  40f707:	mov    eax,esi
  40f709:	inc    esi
  40f70a:	mov    DWORD PTR [ebp+0xc],eax
  40f70d:	cmp    DWORD PTR [ebp+0x14],edx
  40f710:	jne    0x40f716
  40f712:	mov    BYTE PTR [eax],dl
  40f714:	jmp    0x40f725
  40f716:	mov    ecx,DWORD PTR [ebp-0x24]
  40f719:	mov    ecx,DWORD PTR [ecx+0xbc]
  40f71f:	mov    ecx,DWORD PTR [ecx]
  40f721:	mov    cl,BYTE PTR [ecx]
  40f723:	mov    BYTE PTR [eax],cl
  40f725:	mov    ecx,DWORD PTR [edi+0x4]
  40f728:	mov    eax,DWORD PTR [edi]
  40f72a:	and    ecx,0xfffff
  40f730:	mov    DWORD PTR [ebp-0x8],ecx
  40f733:	ja     0x40f73d
  40f735:	cmp    eax,edx
  40f737:	jbe    0x40f7f1
  40f73d:	mov    DWORD PTR [ebp-0xc],edx
  40f740:	mov    DWORD PTR [ebp-0x8],0xf0000
  40f747:	cmp    DWORD PTR [ebp+0x14],0x0
  40f74b:	jle    0x40f799
  40f74d:	mov    edx,DWORD PTR [edi+0x4]
  40f750:	and    edx,DWORD PTR [ebp-0x8]
  40f753:	mov    eax,DWORD PTR [edi]
  40f755:	movsx  ecx,WORD PTR [ebp-0x4]
  40f759:	and    eax,DWORD PTR [ebp-0xc]
  40f75c:	and    edx,0xfffff
  40f762:	call   0x410e30
  40f767:	add    ax,0x30
  40f76b:	movzx  eax,ax
  40f76e:	cmp    eax,0x39
  40f771:	jbe    0x40f775
  40f773:	add    eax,ebx
  40f775:	mov    ecx,DWORD PTR [ebp-0x8]
  40f778:	sub    DWORD PTR [ebp-0x4],0x4
  40f77c:	mov    BYTE PTR [esi],al
  40f77e:	mov    eax,DWORD PTR [ebp-0xc]
  40f781:	shrd   eax,ecx,0x4
  40f785:	shr    ecx,0x4
  40f788:	inc    esi
  40f789:	dec    DWORD PTR [ebp+0x14]
  40f78c:	cmp    WORD PTR [ebp-0x4],0x0
  40f791:	mov    DWORD PTR [ebp-0xc],eax
  40f794:	mov    DWORD PTR [ebp-0x8],ecx
  40f797:	jge    0x40f747
  40f799:	cmp    WORD PTR [ebp-0x4],0x0
  40f79e:	jl     0x40f7f1
  40f7a0:	mov    edx,DWORD PTR [edi+0x4]
  40f7a3:	and    edx,DWORD PTR [ebp-0x8]
  40f7a6:	mov    eax,DWORD PTR [edi]
  40f7a8:	movsx  ecx,WORD PTR [ebp-0x4]
  40f7ac:	and    eax,DWORD PTR [ebp-0xc]
  40f7af:	and    edx,0xfffff
  40f7b5:	call   0x410e30
  40f7ba:	cmp    ax,0x8
  40f7be:	jbe    0x40f7f1
  40f7c0:	lea    eax,[esi-0x1]
  40f7c3:	mov    cl,BYTE PTR [eax]
  40f7c5:	cmp    cl,0x66
  40f7c8:	je     0x40f7cf
  40f7ca:	cmp    cl,0x46
  40f7cd:	jne    0x40f7d5
  40f7cf:	mov    BYTE PTR [eax],0x30
  40f7d2:	dec    eax
  40f7d3:	jmp    0x40f7c3
  40f7d5:	cmp    eax,DWORD PTR [ebp+0xc]
  40f7d8:	je     0x40f7ee
  40f7da:	mov    cl,BYTE PTR [eax]
  40f7dc:	cmp    cl,0x39
  40f7df:	jne    0x40f7e8
  40f7e1:	add    bl,0x3a
  40f7e4:	mov    BYTE PTR [eax],bl
  40f7e6:	jmp    0x40f7f1
  40f7e8:	inc    cl
  40f7ea:	mov    BYTE PTR [eax],cl
  40f7ec:	jmp    0x40f7f1
  40f7ee:	inc    BYTE PTR [eax-0x1]
  40f7f1:	cmp    DWORD PTR [ebp+0x14],0x0
  40f7f5:	jle    0x40f808
  40f7f7:	push   DWORD PTR [ebp+0x14]
  40f7fa:	push   0x30
  40f7fc:	push   esi
  40f7fd:	call   0x40a550
  40f802:	add    esp,0xc
  40f805:	add    esi,DWORD PTR [ebp+0x14]
  40f808:	mov    eax,DWORD PTR [ebp+0xc]
  40f80b:	cmp    BYTE PTR [eax],0x0
  40f80e:	jne    0x40f812
  40f810:	mov    esi,eax
  40f812:	cmp    DWORD PTR [ebp+0x18],0x0
  40f816:	mov    cl,0x34
  40f818:	sete   al
  40f81b:	dec    al
  40f81d:	and    al,0xe0
  40f81f:	add    al,0x70
  40f821:	mov    BYTE PTR [esi],al
  40f823:	mov    eax,DWORD PTR [edi]
  40f825:	mov    edx,DWORD PTR [edi+0x4]
  40f828:	call   0x410e30
  40f82d:	xor    ebx,ebx
  40f82f:	and    eax,0x7ff
  40f834:	and    edx,ebx
  40f836:	sub    eax,DWORD PTR [ebp-0x14]
  40f839:	push   ebx
  40f83a:	pop    ecx
  40f83b:	sbb    edx,ecx
  40f83d:	js     0x40f84e
  40f83f:	jg     0x40f845
  40f841:	cmp    eax,ebx
  40f843:	jb     0x40f84e
  40f845:	mov    BYTE PTR [esi+0x1],0x2b
  40f849:	add    esi,0x2
  40f84c:	jmp    0x40f85b
  40f84e:	mov    BYTE PTR [esi+0x1],0x2d
  40f852:	add    esi,0x2
  40f855:	neg    eax
  40f857:	adc    edx,ebx
  40f859:	neg    edx
  40f85b:	mov    edi,esi
  40f85d:	mov    BYTE PTR [esi],0x30
  40f860:	cmp    edx,ebx
  40f862:	jl     0x40f888
  40f864:	mov    ecx,0x3e8
  40f869:	jg     0x40f86f
  40f86b:	cmp    eax,ecx
  40f86d:	jb     0x40f888
  40f86f:	push   ebx
  40f870:	push   ecx
  40f871:	push   edx
  40f872:	push   eax
  40f873:	call   0x410d50
  40f878:	add    al,0x30
  40f87a:	mov    BYTE PTR [esi],al
  40f87c:	inc    esi
  40f87d:	mov    DWORD PTR [ebp-0x10],edx
  40f880:	mov    eax,ecx
  40f882:	mov    edx,ebx
  40f884:	cmp    esi,edi
  40f886:	jne    0x40f893
  40f888:	test   edx,edx
  40f88a:	jl     0x40f8aa
  40f88c:	jg     0x40f893
  40f88e:	cmp    eax,0x64
  40f891:	jb     0x40f8aa
  40f893:	push   0x0
  40f895:	push   0x64
  40f897:	push   edx
  40f898:	push   eax
  40f899:	call   0x410d50
  40f89e:	add    al,0x30
  40f8a0:	mov    BYTE PTR [esi],al
  40f8a2:	mov    DWORD PTR [ebp-0x10],edx
  40f8a5:	inc    esi
  40f8a6:	mov    eax,ecx
  40f8a8:	mov    edx,ebx
  40f8aa:	cmp    esi,edi
  40f8ac:	jne    0x40f8b9
  40f8ae:	test   edx,edx
  40f8b0:	jl     0x40f8d1
  40f8b2:	jg     0x40f8b9
  40f8b4:	cmp    eax,0xa
  40f8b7:	jb     0x40f8d1
  40f8b9:	push   0x0
  40f8bb:	push   0xa
  40f8bd:	push   edx
  40f8be:	push   eax
  40f8bf:	call   0x410d50
  40f8c4:	add    al,0x30
  40f8c6:	mov    BYTE PTR [esi],al
  40f8c8:	mov    DWORD PTR [ebp-0x10],edx
  40f8cb:	inc    esi
  40f8cc:	mov    eax,ecx
  40f8ce:	mov    DWORD PTR [ebp-0x10],ebx
  40f8d1:	add    al,0x30
  40f8d3:	mov    BYTE PTR [esi],al
  40f8d5:	mov    BYTE PTR [esi+0x1],0x0
  40f8d9:	cmp    BYTE PTR [ebp-0x18],0x0
  40f8dd:	je     0x40f8e6
  40f8df:	mov    eax,DWORD PTR [ebp-0x1c]
  40f8e2:	and    DWORD PTR [eax+0x70],0xfffffffd
  40f8e6:	xor    eax,eax
  40f8e8:	pop    ebx
  40f8e9:	pop    edi
  40f8ea:	pop    esi
  40f8eb:	leave  
  40f8ec:	ret    
  40f8ed:	mov    edi,edi
  40f8ef:	push   ebp
  40f8f0:	mov    ebp,esp
  40f8f2:	sub    esp,0x10
  40f8f5:	push   ebx
  40f8f6:	push   esi
  40f8f7:	push   edi
  40f8f8:	push   DWORD PTR [ebp+0x14]
  40f8fb:	mov    edi,eax
  40f8fd:	mov    esi,DWORD PTR [edi+0x4]
  40f900:	mov    ebx,ecx
  40f902:	lea    ecx,[ebp-0x10]
  40f905:	dec    esi
  40f906:	call   0x406b0c
  40f90b:	test   ebx,ebx
  40f90d:	jne    0x40f932
  40f90f:	call   0x40769b
  40f914:	push   0x16
  40f916:	pop    esi
  40f917:	mov    DWORD PTR [eax],esi
  40f919:	call   0x407649
  40f91e:	cmp    BYTE PTR [ebp-0x4],0x0
  40f922:	je     0x40f92b
  40f924:	mov    eax,DWORD PTR [ebp-0x8]
  40f927:	and    DWORD PTR [eax+0x70],0xfffffffd
  40f92b:	mov    eax,esi
  40f92d:	jmp    0x40f9eb
  40f932:	cmp    DWORD PTR [ebp+0x8],0x0
  40f936:	jbe    0x40f90f
  40f938:	cmp    BYTE PTR [ebp+0x10],0x0
  40f93c:	je     0x40f953
  40f93e:	cmp    esi,DWORD PTR [ebp+0xc]
  40f941:	jne    0x40f953
  40f943:	xor    eax,eax
  40f945:	cmp    DWORD PTR [edi],0x2d
  40f948:	sete   al
  40f94b:	add    eax,esi
  40f94d:	mov    WORD PTR [eax+ebx*1],0x30
  40f953:	cmp    DWORD PTR [edi],0x2d
  40f956:	mov    esi,ebx
  40f958:	jne    0x40f960
  40f95a:	mov    BYTE PTR [ebx],0x2d
  40f95d:	lea    esi,[ebx+0x1]
  40f960:	mov    eax,DWORD PTR [edi+0x4]
  40f963:	test   eax,eax
  40f965:	jg     0x40f983
  40f967:	push   esi
  40f968:	lea    ebx,[esi+0x1]
  40f96b:	call   0x405450
  40f970:	inc    eax
  40f971:	push   eax
  40f972:	push   esi
  40f973:	push   ebx
  40f974:	call   0x404030
  40f979:	mov    BYTE PTR [esi],0x30
  40f97c:	add    esp,0x10
  40f97f:	mov    esi,ebx
  40f981:	jmp    0x40f985
  40f983:	add    esi,eax
  40f985:	cmp    DWORD PTR [ebp+0xc],0x0
  40f989:	jle    0x40f9dc
  40f98b:	push   esi
  40f98c:	lea    ebx,[esi+0x1]
  40f98f:	call   0x405450
  40f994:	inc    eax
  40f995:	push   eax
  40f996:	push   esi
  40f997:	push   ebx
  40f998:	call   0x404030
  40f99d:	mov    eax,DWORD PTR [ebp-0x10]
  40f9a0:	mov    eax,DWORD PTR [eax+0xbc]
  40f9a6:	mov    eax,DWORD PTR [eax]
  40f9a8:	mov    al,BYTE PTR [eax]
  40f9aa:	mov    BYTE PTR [esi],al
  40f9ac:	mov    edi,DWORD PTR [edi+0x4]
  40f9af:	add    esp,0x10
  40f9b2:	test   edi,edi
  40f9b4:	jns    0x40f9dc
  40f9b6:	neg    edi
  40f9b8:	cmp    BYTE PTR [ebp+0x10],0x0
  40f9bc:	jne    0x40f9c3
  40f9be:	cmp    DWORD PTR [ebp+0xc],edi
  40f9c1:	jl     0x40f9c6
  40f9c3:	mov    DWORD PTR [ebp+0xc],edi
  40f9c6:	mov    edi,DWORD PTR [ebp+0xc]
  40f9c9:	mov    eax,ebx
  40f9cb:	call   0x40f2ea
  40f9d0:	push   edi
  40f9d1:	push   0x30
  40f9d3:	push   ebx
  40f9d4:	call   0x40a550
  40f9d9:	add    esp,0xc
  40f9dc:	cmp    BYTE PTR [ebp-0x4],0x0
  40f9e0:	je     0x40f9e9
  40f9e2:	mov    eax,DWORD PTR [ebp-0x8]
  40f9e5:	and    DWORD PTR [eax+0x70],0xfffffffd
  40f9e9:	xor    eax,eax
  40f9eb:	pop    edi
  40f9ec:	pop    esi
  40f9ed:	pop    ebx
  40f9ee:	leave  
  40f9ef:	ret    
  40f9f0:	mov    edi,edi
  40f9f2:	push   ebp
  40f9f3:	mov    ebp,esp
  40f9f5:	sub    esp,0x2c
  40f9f8:	mov    eax,ds:0x44b470
  40f9fd:	xor    eax,ebp
  40f9ff:	mov    DWORD PTR [ebp-0x4],eax
  40fa02:	mov    eax,DWORD PTR [ebp+0x8]
  40fa05:	push   esi
  40fa06:	push   edi
  40fa07:	mov    edi,DWORD PTR [ebp+0xc]
  40fa0a:	push   0x16
  40fa0c:	pop    esi
  40fa0d:	push   esi
  40fa0e:	lea    ecx,[ebp-0x1c]
  40fa11:	push   ecx
  40fa12:	lea    ecx,[ebp-0x2c]
  40fa15:	push   ecx
  40fa16:	push   DWORD PTR [eax+0x4]
  40fa19:	push   DWORD PTR [eax]
  40fa1b:	call   0x410cb4
  40fa20:	add    esp,0x14
  40fa23:	test   edi,edi
  40fa25:	jne    0x40fa37
  40fa27:	call   0x40769b
  40fa2c:	mov    DWORD PTR [eax],esi
  40fa2e:	call   0x407649
  40fa33:	mov    eax,esi
  40fa35:	jmp    0x40faa3
  40fa37:	push   ebx
  40fa38:	mov    ebx,DWORD PTR [ebp+0x10]
  40fa3b:	test   ebx,ebx
  40fa3d:	jne    0x40fa4f
  40fa3f:	call   0x40769b
  40fa44:	mov    DWORD PTR [eax],esi
  40fa46:	call   0x407649
  40fa4b:	mov    eax,esi
  40fa4d:	jmp    0x40faa2
  40fa4f:	or     eax,0xffffffff
  40fa52:	cmp    ebx,eax
  40fa54:	je     0x40fa63
  40fa56:	xor    ecx,ecx
  40fa58:	cmp    DWORD PTR [ebp-0x2c],0x2d
  40fa5c:	mov    eax,ebx
  40fa5e:	sete   cl
  40fa61:	sub    eax,ecx
  40fa63:	mov    esi,DWORD PTR [ebp+0x14]
  40fa66:	lea    ecx,[ebp-0x2c]
  40fa69:	push   ecx
  40fa6a:	mov    ecx,DWORD PTR [ebp-0x28]
  40fa6d:	add    ecx,esi
  40fa6f:	push   ecx
  40fa70:	push   eax
  40fa71:	xor    eax,eax
  40fa73:	cmp    DWORD PTR [ebp-0x2c],0x2d
  40fa77:	sete   al
  40fa7a:	add    eax,edi
  40fa7c:	push   eax
  40fa7d:	call   0x410b4e
  40fa82:	add    esp,0x10
  40fa85:	test   eax,eax
  40fa87:	je     0x40fa8e
  40fa89:	mov    BYTE PTR [edi],0x0
  40fa8c:	jmp    0x40faa2
  40fa8e:	push   DWORD PTR [ebp+0x18]
  40fa91:	lea    eax,[ebp-0x2c]
  40fa94:	push   0x0
  40fa96:	push   esi
  40fa97:	push   ebx
  40fa98:	mov    ecx,edi
  40fa9a:	call   0x40f8ed
  40fa9f:	add    esp,0x10
  40faa2:	pop    ebx
  40faa3:	mov    ecx,DWORD PTR [ebp-0x4]
  40faa6:	pop    edi
  40faa7:	xor    ecx,ebp
  40faa9:	pop    esi
  40faaa:	call   0x403edd
  40faaf:	leave  
  40fab0:	ret    
  40fab1:	mov    edi,edi
  40fab3:	push   ebp
  40fab4:	mov    ebp,esp
  40fab6:	sub    esp,0x2c
  40fab9:	mov    eax,ds:0x44b470
  40fabe:	xor    eax,ebp
  40fac0:	mov    DWORD PTR [ebp-0x4],eax
  40fac3:	mov    eax,DWORD PTR [ebp+0x8]
  40fac6:	push   esi
  40fac7:	mov    esi,DWORD PTR [ebp+0xc]
  40faca:	push   edi
  40facb:	push   0x16
  40facd:	pop    edi
  40face:	push   edi
  40facf:	lea    ecx,[ebp-0x1c]
  40fad2:	push   ecx
  40fad3:	lea    ecx,[ebp-0x2c]
  40fad6:	push   ecx
  40fad7:	push   DWORD PTR [eax+0x4]
  40fada:	push   DWORD PTR [eax]
  40fadc:	call   0x410cb4
  40fae1:	add    esp,0x14
  40fae4:	test   esi,esi
  40fae6:	jne    0x40fafb
  40fae8:	call   0x40769b
  40faed:	mov    DWORD PTR [eax],edi
  40faef:	call   0x407649
  40faf4:	mov    eax,edi
  40faf6:	jmp    0x40fb90
  40fafb:	mov    ecx,DWORD PTR [ebp+0x10]
  40fafe:	test   ecx,ecx
  40fb00:	je     0x40fae8
  40fb02:	push   ebx
  40fb03:	mov    ebx,DWORD PTR [ebp-0x28]
  40fb06:	xor    eax,eax
  40fb08:	dec    ebx
  40fb09:	cmp    DWORD PTR [ebp-0x2c],0x2d
  40fb0d:	sete   al
  40fb10:	lea    edi,[eax+esi*1]
  40fb13:	cmp    ecx,0xffffffff
  40fb16:	jne    0x40fb1c
  40fb18:	or     ecx,ecx
  40fb1a:	jmp    0x40fb1e
  40fb1c:	sub    ecx,eax
  40fb1e:	lea    eax,[ebp-0x2c]
  40fb21:	push   eax
  40fb22:	push   DWORD PTR [ebp+0x14]
  40fb25:	push   ecx
  40fb26:	push   edi
  40fb27:	call   0x410b4e
  40fb2c:	add    esp,0x10
  40fb2f:	test   eax,eax
  40fb31:	je     0x40fb38
  40fb33:	mov    BYTE PTR [esi],0x0
  40fb36:	jmp    0x40fb8f
  40fb38:	mov    eax,DWORD PTR [ebp-0x28]
  40fb3b:	dec    eax
  40fb3c:	cmp    ebx,eax
  40fb3e:	setl   cl
  40fb41:	cmp    eax,0xfffffffc
  40fb44:	jl     0x40fb73
  40fb46:	cmp    eax,DWORD PTR [ebp+0x14]
  40fb49:	jge    0x40fb73
  40fb4b:	test   cl,cl
  40fb4d:	je     0x40fb59
  40fb4f:	mov    al,BYTE PTR [edi]
  40fb51:	inc    edi
  40fb52:	test   al,al
  40fb54:	jne    0x40fb4f
  40fb56:	mov    BYTE PTR [edi-0x2],al
  40fb59:	push   DWORD PTR [ebp+0x1c]
  40fb5c:	lea    eax,[ebp-0x2c]
  40fb5f:	push   0x1
  40fb61:	push   DWORD PTR [ebp+0x14]
  40fb64:	mov    ecx,esi
  40fb66:	push   DWORD PTR [ebp+0x10]
  40fb69:	call   0x40f8ed
  40fb6e:	add    esp,0x10
  40fb71:	jmp    0x40fb8f
  40fb73:	push   DWORD PTR [ebp+0x1c]
  40fb76:	lea    eax,[ebp-0x2c]
  40fb79:	push   0x1
  40fb7b:	push   eax
  40fb7c:	push   DWORD PTR [ebp+0x18]
  40fb7f:	mov    eax,esi
  40fb81:	push   DWORD PTR [ebp+0x14]
  40fb84:	push   DWORD PTR [ebp+0x10]
  40fb87:	call   0x40f32f
  40fb8c:	add    esp,0x18
  40fb8f:	pop    ebx
  40fb90:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb93:	pop    edi
  40fb94:	xor    ecx,ebp
  40fb96:	pop    esi
  40fb97:	call   0x403edd
  40fb9c:	leave  
  40fb9d:	ret    
  40fb9e:	mov    edi,edi
  40fba0:	push   ebp
  40fba1:	mov    ebp,esp
  40fba3:	mov    eax,DWORD PTR [ebp+0x14]
  40fba6:	cmp    eax,0x65
  40fba9:	je     0x40fc0a
  40fbab:	cmp    eax,0x45
  40fbae:	je     0x40fc0a
  40fbb0:	cmp    eax,0x66
  40fbb3:	jne    0x40fbce
  40fbb5:	push   DWORD PTR [ebp+0x20]
  40fbb8:	push   DWORD PTR [ebp+0x18]
  40fbbb:	push   DWORD PTR [ebp+0x10]
  40fbbe:	push   DWORD PTR [ebp+0xc]
  40fbc1:	push   DWORD PTR [ebp+0x8]
  40fbc4:	call   0x40f9f0
  40fbc9:	add    esp,0x14
  40fbcc:	pop    ebp
  40fbcd:	ret    
  40fbce:	cmp    eax,0x61
  40fbd1:	je     0x40fbf1
  40fbd3:	cmp    eax,0x41
  40fbd6:	je     0x40fbf1
  40fbd8:	push   DWORD PTR [ebp+0x20]
  40fbdb:	push   DWORD PTR [ebp+0x1c]
  40fbde:	push   DWORD PTR [ebp+0x18]
  40fbe1:	push   DWORD PTR [ebp+0x10]
  40fbe4:	push   DWORD PTR [ebp+0xc]
  40fbe7:	push   DWORD PTR [ebp+0x8]
  40fbea:	call   0x40fab1
  40fbef:	jmp    0x40fc21
  40fbf1:	push   DWORD PTR [ebp+0x20]
  40fbf4:	push   DWORD PTR [ebp+0x1c]
  40fbf7:	push   DWORD PTR [ebp+0x18]
  40fbfa:	push   DWORD PTR [ebp+0x10]
  40fbfd:	push   DWORD PTR [ebp+0xc]
  40fc00:	push   DWORD PTR [ebp+0x8]
  40fc03:	call   0x40f577
  40fc08:	jmp    0x40fc21
  40fc0a:	push   DWORD PTR [ebp+0x20]
  40fc0d:	push   DWORD PTR [ebp+0x1c]
  40fc10:	push   DWORD PTR [ebp+0x18]
  40fc13:	push   DWORD PTR [ebp+0x10]
  40fc16:	push   DWORD PTR [ebp+0xc]
  40fc19:	push   DWORD PTR [ebp+0x8]
  40fc1c:	call   0x40f490
  40fc21:	add    esp,0x18
  40fc24:	pop    ebp
  40fc25:	ret    
  40fc26:	mov    edi,edi
  40fc28:	push   ebp
  40fc29:	mov    ebp,esp
  40fc2b:	push   0x0
  40fc2d:	push   DWORD PTR [ebp+0x1c]
  40fc30:	push   DWORD PTR [ebp+0x18]
  40fc33:	push   DWORD PTR [ebp+0x14]
  40fc36:	push   DWORD PTR [ebp+0x10]
  40fc39:	push   DWORD PTR [ebp+0xc]
  40fc3c:	push   DWORD PTR [ebp+0x8]
  40fc3f:	call   0x40fb9e
  40fc44:	add    esp,0x1c
  40fc47:	pop    ebp
  40fc48:	ret    
  40fc49:	mov    edi,edi
  40fc4b:	push   esi
  40fc4c:	push   0x30000
  40fc51:	push   0x10000
  40fc56:	xor    esi,esi
  40fc58:	push   esi
  40fc59:	call   0x410e4f
  40fc5e:	add    esp,0xc
  40fc61:	test   eax,eax
  40fc63:	je     0x40fc6f
  40fc65:	push   esi
  40fc66:	push   esi
  40fc67:	push   esi
  40fc68:	push   esi
  40fc69:	push   esi
  40fc6a:	call   0x4075f7
  40fc6f:	pop    esi
  40fc70:	ret    
  40fc71:	mov    edi,edi
  40fc73:	push   ebp
  40fc74:	mov    ebp,esp
  40fc76:	push   0xa
  40fc78:	push   0x0
  40fc7a:	push   DWORD PTR [ebp+0x8]
  40fc7d:	call   0x410717
  40fc82:	add    esp,0xc
  40fc85:	pop    ebp
  40fc86:	ret    
  40fc87:	mov    edi,edi
  40fc89:	push   ebp
  40fc8a:	mov    ebp,esp
  40fc8c:	cmp    DWORD PTR ds:0x450768,0x0
  40fc93:	push   esi
  40fc94:	mov    esi,DWORD PTR ds:0x44ddfc
  40fc9a:	jne    0x40fca0
  40fc9c:	xor    eax,eax
  40fc9e:	jmp    0x40fd03
  40fca0:	push   edi
  40fca1:	test   esi,esi
  40fca3:	jne    0x40fcc0
  40fca5:	cmp    DWORD PTR ds:0x44de04,esi
  40fcab:	je     0x40fd00
  40fcad:	call   0x410fa6
  40fcb2:	test   eax,eax
  40fcb4:	jne    0x40fd00
  40fcb6:	mov    esi,DWORD PTR ds:0x44ddfc
  40fcbc:	test   esi,esi
  40fcbe:	je     0x40fd00
  40fcc0:	cmp    DWORD PTR [ebp+0x8],0x0
  40fcc4:	je     0x40fd00
  40fcc6:	push   DWORD PTR [ebp+0x8]
  40fcc9:	call   0x405450
  40fcce:	pop    ecx
  40fccf:	mov    edi,eax
  40fcd1:	jmp    0x40fcfa
  40fcd3:	push   eax
  40fcd4:	call   0x405450
  40fcd9:	pop    ecx
  40fcda:	cmp    eax,edi
  40fcdc:	jbe    0x40fcf7
  40fcde:	mov    eax,DWORD PTR [esi]
  40fce0:	cmp    BYTE PTR [eax+edi*1],0x3d
  40fce4:	jne    0x40fcf7
  40fce6:	push   edi
  40fce7:	push   DWORD PTR [ebp+0x8]
  40fcea:	push   eax
  40fceb:	call   0x410f8c
  40fcf0:	add    esp,0xc
  40fcf3:	test   eax,eax
  40fcf5:	je     0x40fd06
  40fcf7:	add    esi,0x4
  40fcfa:	mov    eax,DWORD PTR [esi]
  40fcfc:	test   eax,eax
  40fcfe:	jne    0x40fcd3
  40fd00:	xor    eax,eax
  40fd02:	pop    edi
  40fd03:	pop    esi
  40fd04:	pop    ebp
  40fd05:	ret    
  40fd06:	mov    eax,DWORD PTR [esi]
  40fd08:	lea    eax,[eax+edi*1+0x1]
  40fd0c:	jmp    0x40fd02
  40fd0e:	int3   
  40fd0f:	int3   
  40fd10:	mov    eax,DWORD PTR [esp+0x8]
  40fd14:	mov    ecx,DWORD PTR [esp+0x10]
  40fd18:	or     ecx,eax
  40fd1a:	mov    ecx,DWORD PTR [esp+0xc]
  40fd1e:	jne    0x40fd29
  40fd20:	mov    eax,DWORD PTR [esp+0x4]
  40fd24:	mul    ecx
  40fd26:	ret    0x10
  40fd29:	push   ebx
  40fd2a:	mul    ecx
  40fd2c:	mov    ebx,eax
  40fd2e:	mov    eax,DWORD PTR [esp+0x8]
  40fd32:	mul    DWORD PTR [esp+0x14]
  40fd36:	add    ebx,eax
  40fd38:	mov    eax,DWORD PTR [esp+0x8]
  40fd3c:	mul    ecx
  40fd3e:	add    edx,ebx
  40fd40:	pop    ebx
  40fd41:	ret    0x10
  40fd44:	mov    edi,edi
  40fd46:	push   ebp
  40fd47:	mov    ebp,esp
  40fd49:	sub    esp,0x24
  40fd4c:	mov    eax,ds:0x44b470
  40fd51:	xor    eax,ebp
  40fd53:	mov    DWORD PTR [ebp-0x4],eax
  40fd56:	mov    eax,DWORD PTR [ebp+0x8]
  40fd59:	push   ebx
  40fd5a:	mov    DWORD PTR [ebp-0x20],eax
  40fd5d:	mov    eax,DWORD PTR [ebp+0xc]
  40fd60:	push   esi
  40fd61:	push   edi
  40fd62:	mov    DWORD PTR [ebp-0x1c],eax
  40fd65:	call   0x40c75a
  40fd6a:	and    DWORD PTR [ebp-0x14],0x0
  40fd6e:	cmp    DWORD PTR ds:0x44e80c,0x0
  40fd75:	mov    DWORD PTR [ebp-0x18],eax
  40fd78:	jne    0x40fdf7
  40fd7a:	push   0x4459a0
  40fd7f:	call   DWORD PTR ds:0x4430e0
  40fd85:	mov    ebx,eax
  40fd87:	test   ebx,ebx
  40fd89:	je     0x40fe9f
  40fd8f:	mov    edi,DWORD PTR ds:0x443154
  40fd95:	push   0x445994
  40fd9a:	push   ebx
  40fd9b:	call   edi
  40fd9d:	test   eax,eax
  40fd9f:	je     0x40fe9f
  40fda5:	mov    esi,DWORD PTR ds:0x4431c4
  40fdab:	push   eax
  40fdac:	call   esi
  40fdae:	push   0x445984
  40fdb3:	push   ebx
  40fdb4:	mov    ds:0x44e80c,eax
  40fdb9:	call   edi
  40fdbb:	push   eax
  40fdbc:	call   esi
  40fdbe:	push   0x445970
  40fdc3:	push   ebx
  40fdc4:	mov    ds:0x44e810,eax
  40fdc9:	call   edi
  40fdcb:	push   eax
  40fdcc:	call   esi
  40fdce:	push   0x445954
  40fdd3:	push   ebx
  40fdd4:	mov    ds:0x44e814,eax
  40fdd9:	call   edi
  40fddb:	push   eax
  40fddc:	call   esi
  40fdde:	mov    ds:0x44e81c,eax
  40fde3:	test   eax,eax
  40fde5:	je     0x40fdf7
  40fde7:	push   0x44593c
  40fdec:	push   ebx
  40fded:	call   edi
  40fdef:	push   eax
  40fdf0:	call   esi
  40fdf2:	mov    ds:0x44e818,eax
  40fdf7:	mov    eax,ds:0x44e818
  40fdfc:	mov    ecx,DWORD PTR [ebp-0x18]
  40fdff:	mov    esi,DWORD PTR ds:0x4431c8
  40fe05:	cmp    eax,ecx
  40fe07:	je     0x40fe50
  40fe09:	cmp    DWORD PTR ds:0x44e81c,ecx
  40fe0f:	je     0x40fe50
  40fe11:	push   eax
  40fe12:	call   esi
  40fe14:	push   DWORD PTR ds:0x44e81c
  40fe1a:	mov    edi,eax
  40fe1c:	call   esi
  40fe1e:	mov    ebx,eax
  40fe20:	test   edi,edi
  40fe22:	je     0x40fe50
  40fe24:	test   ebx,ebx
  40fe26:	je     0x40fe50
  40fe28:	call   edi
  40fe2a:	test   eax,eax
  40fe2c:	je     0x40fe47
  40fe2e:	lea    ecx,[ebp-0x24]
  40fe31:	push   ecx
  40fe32:	push   0xc
  40fe34:	lea    ecx,[ebp-0x10]
  40fe37:	push   ecx
  40fe38:	push   0x1
  40fe3a:	push   eax
  40fe3b:	call   ebx
  40fe3d:	test   eax,eax
  40fe3f:	je     0x40fe47
  40fe41:	test   BYTE PTR [ebp-0x8],0x1
  40fe45:	jne    0x40fe50
  40fe47:	or     DWORD PTR [ebp+0x10],0x200000
  40fe4e:	jmp    0x40fe83
  40fe50:	mov    eax,ds:0x44e810
  40fe55:	cmp    eax,DWORD PTR [ebp-0x18]
  40fe58:	je     0x40fe83
  40fe5a:	push   eax
  40fe5b:	call   esi
  40fe5d:	test   eax,eax
  40fe5f:	je     0x40fe83
  40fe61:	call   eax
  40fe63:	mov    DWORD PTR [ebp-0x14],eax
  40fe66:	test   eax,eax
  40fe68:	je     0x40fe83
  40fe6a:	mov    eax,ds:0x44e814
  40fe6f:	cmp    eax,DWORD PTR [ebp-0x18]
  40fe72:	je     0x40fe83
  40fe74:	push   eax
  40fe75:	call   esi
  40fe77:	test   eax,eax
  40fe79:	je     0x40fe83
  40fe7b:	push   DWORD PTR [ebp-0x14]
  40fe7e:	call   eax
  40fe80:	mov    DWORD PTR [ebp-0x14],eax
  40fe83:	push   DWORD PTR ds:0x44e80c
  40fe89:	call   esi
  40fe8b:	test   eax,eax
  40fe8d:	je     0x40fe9f
  40fe8f:	push   DWORD PTR [ebp+0x10]
  40fe92:	push   DWORD PTR [ebp-0x1c]
  40fe95:	push   DWORD PTR [ebp-0x20]
  40fe98:	push   DWORD PTR [ebp-0x14]
  40fe9b:	call   eax
  40fe9d:	jmp    0x40fea1
  40fe9f:	xor    eax,eax
  40fea1:	mov    ecx,DWORD PTR [ebp-0x4]
  40fea4:	pop    edi
  40fea5:	pop    esi
  40fea6:	xor    ecx,ebp
  40fea8:	pop    ebx
  40fea9:	call   0x403edd
  40feae:	leave  
  40feaf:	ret    
  40feb0:	mov    edi,edi
  40feb2:	push   ebp
  40feb3:	mov    ebp,esp
  40feb5:	push   esi
  40feb6:	mov    esi,DWORD PTR [ebp+0x8]
  40feb9:	push   edi
  40feba:	test   esi,esi
  40febc:	je     0x40fec5
  40febe:	mov    edi,DWORD PTR [ebp+0xc]
  40fec1:	test   edi,edi
  40fec3:	jne    0x40feda
  40fec5:	call   0x40769b
  40feca:	push   0x16
  40fecc:	pop    esi
  40fecd:	mov    DWORD PTR [eax],esi
  40fecf:	call   0x407649
  40fed4:	mov    eax,esi
  40fed6:	pop    edi
  40fed7:	pop    esi
  40fed8:	pop    ebp
  40fed9:	ret    
  40feda:	mov    ecx,DWORD PTR [ebp+0x10]
  40fedd:	test   ecx,ecx
  40fedf:	jne    0x40fee8
  40fee1:	xor    eax,eax
  40fee3:	mov    WORD PTR [esi],ax
  40fee6:	jmp    0x40fec5
  40fee8:	mov    edx,esi
  40feea:	cmp    WORD PTR [edx],0x0
  40feee:	je     0x40fef6
  40fef0:	add    edx,0x2
  40fef3:	dec    edi
  40fef4:	jne    0x40feea
  40fef6:	test   edi,edi
  40fef8:	je     0x40fee1
  40fefa:	sub    edx,ecx
  40fefc:	movzx  eax,WORD PTR [ecx]
  40feff:	mov    WORD PTR [edx+ecx*1],ax
  40ff03:	add    ecx,0x2
  40ff06:	test   ax,ax
  40ff09:	je     0x40ff0e
  40ff0b:	dec    edi
  40ff0c:	jne    0x40fefc
  40ff0e:	xor    eax,eax
  40ff10:	test   edi,edi
  40ff12:	jne    0x40fed6
  40ff14:	mov    WORD PTR [esi],ax
  40ff17:	call   0x40769b
  40ff1c:	push   0x22
  40ff1e:	pop    ecx
  40ff1f:	mov    DWORD PTR [eax],ecx
  40ff21:	mov    esi,ecx
  40ff23:	jmp    0x40fecf
  40ff25:	mov    edi,edi
  40ff27:	push   ebp
  40ff28:	mov    ebp,esp
  40ff2a:	mov    edx,DWORD PTR [ebp+0x8]
  40ff2d:	push   ebx
  40ff2e:	mov    ebx,DWORD PTR [ebp+0x14]
  40ff31:	push   esi
  40ff32:	push   edi
  40ff33:	test   ebx,ebx
  40ff35:	jne    0x40ff47
  40ff37:	test   edx,edx
  40ff39:	jne    0x40ff4b
  40ff3b:	cmp    DWORD PTR [ebp+0xc],edx
  40ff3e:	jne    0x40ff52
  40ff40:	xor    eax,eax
  40ff42:	pop    edi
  40ff43:	pop    esi
  40ff44:	pop    ebx
  40ff45:	pop    ebp
  40ff46:	ret    
  40ff47:	test   edx,edx
  40ff49:	je     0x40ff52
  40ff4b:	mov    edi,DWORD PTR [ebp+0xc]
  40ff4e:	test   edi,edi
  40ff50:	jne    0x40ff65
  40ff52:	call   0x40769b
  40ff57:	push   0x16
  40ff59:	pop    esi
  40ff5a:	mov    DWORD PTR [eax],esi
  40ff5c:	call   0x407649
  40ff61:	mov    eax,esi
  40ff63:	jmp    0x40ff42
  40ff65:	test   ebx,ebx
  40ff67:	jne    0x40ff70
  40ff69:	xor    eax,eax
  40ff6b:	mov    WORD PTR [edx],ax
  40ff6e:	jmp    0x40ff40
  40ff70:	mov    ecx,DWORD PTR [ebp+0x10]
  40ff73:	test   ecx,ecx
  40ff75:	jne    0x40ff7e
  40ff77:	xor    eax,eax
  40ff79:	mov    WORD PTR [edx],ax
  40ff7c:	jmp    0x40ff52
  40ff7e:	mov    eax,edx
  40ff80:	cmp    ebx,0xffffffff
  40ff83:	jne    0x40ff9d
  40ff85:	mov    esi,edx
  40ff87:	sub    esi,ecx
  40ff89:	movzx  eax,WORD PTR [ecx]
  40ff8c:	mov    WORD PTR [esi+ecx*1],ax
  40ff90:	add    ecx,0x2
  40ff93:	test   ax,ax
  40ff96:	je     0x40ffbf
  40ff98:	dec    edi
  40ff99:	jne    0x40ff89
  40ff9b:	jmp    0x40ffbf
  40ff9d:	mov    esi,ecx
  40ff9f:	sub    esi,edx
  40ffa1:	movzx  ecx,WORD PTR [esi+eax*1]
  40ffa5:	mov    WORD PTR [eax],cx
  40ffa8:	add    eax,0x2
  40ffab:	test   cx,cx
  40ffae:	je     0x40ffb6
  40ffb0:	dec    edi
  40ffb1:	je     0x40ffb6
  40ffb3:	dec    ebx
  40ffb4:	jne    0x40ffa1
  40ffb6:	test   ebx,ebx
  40ffb8:	jne    0x40ffbf
  40ffba:	xor    ecx,ecx
  40ffbc:	mov    WORD PTR [eax],cx
  40ffbf:	test   edi,edi
  40ffc1:	jne    0x40ff40
  40ffc7:	xor    eax,eax
  40ffc9:	cmp    ebx,0xffffffff
  40ffcc:	jne    0x40ffde
  40ffce:	mov    ecx,DWORD PTR [ebp+0xc]
  40ffd1:	push   0x50
  40ffd3:	mov    WORD PTR [edx+ecx*2-0x2],ax
  40ffd8:	pop    eax
  40ffd9:	jmp    0x40ff42
  40ffde:	mov    WORD PTR [edx],ax
  40ffe1:	call   0x40769b
  40ffe6:	push   0x22
  40ffe8:	pop    ecx
  40ffe9:	mov    DWORD PTR [eax],ecx
  40ffeb:	mov    esi,ecx
  40ffed:	jmp    0x40ff5c
  40fff2:	mov    edi,edi
  40fff4:	push   ebp
  40fff5:	mov    ebp,esp
  40fff7:	mov    eax,DWORD PTR [ebp+0x8]
  40fffa:	mov    cx,WORD PTR [eax]
  40fffd:	add    eax,0x2
  410000:	test   cx,cx
  410003:	jne    0x40fffa
  410005:	sub    eax,DWORD PTR [ebp+0x8]
  410008:	sar    eax,1
  41000a:	dec    eax
  41000b:	pop    ebp
  41000c:	ret    
  41000d:	mov    edi,edi
  41000f:	push   ebp
  410010:	mov    ebp,esp
  410012:	push   esi
  410013:	mov    esi,DWORD PTR [ebp+0x8]
  410016:	push   edi
  410017:	test   esi,esi
  410019:	je     0x410022
  41001b:	mov    edi,DWORD PTR [ebp+0xc]
  41001e:	test   edi,edi
  410020:	jne    0x410037
  410022:	call   0x40769b
  410027:	push   0x16
  410029:	pop    esi
  41002a:	mov    DWORD PTR [eax],esi
  41002c:	call   0x407649
  410031:	mov    eax,esi
  410033:	pop    edi
  410034:	pop    esi
  410035:	pop    ebp
  410036:	ret    
  410037:	mov    eax,DWORD PTR [ebp+0x10]
  41003a:	test   eax,eax
  41003c:	jne    0x410043
  41003e:	mov    WORD PTR [esi],ax
  410041:	jmp    0x410022
  410043:	mov    edx,esi
  410045:	sub    edx,eax
  410047:	movzx  ecx,WORD PTR [eax]
  41004a:	mov    WORD PTR [edx+eax*1],cx
  41004e:	add    eax,0x2
  410051:	test   cx,cx
  410054:	je     0x410059
  410056:	dec    edi
  410057:	jne    0x410047
  410059:	xor    eax,eax
  41005b:	test   edi,edi
  41005d:	jne    0x410033
  41005f:	mov    WORD PTR [esi],ax
  410062:	call   0x40769b
  410067:	push   0x22
  410069:	pop    ecx
  41006a:	mov    DWORD PTR [eax],ecx
  41006c:	mov    esi,ecx
  41006e:	jmp    0x41002c
  410070:	mov    edi,edi
  410072:	push   ebp
  410073:	mov    ebp,esp
  410075:	mov    ecx,DWORD PTR [ebp+0x8]
  410078:	test   ecx,ecx
  41007a:	js     0x41009a
  41007c:	cmp    ecx,0x2
  41007f:	jle    0x41008d
  410081:	cmp    ecx,0x3
  410084:	jne    0x41009a
  410086:	mov    eax,ds:0x44dab4
  41008b:	pop    ebp
  41008c:	ret    
  41008d:	mov    eax,ds:0x44dab4
  410092:	mov    DWORD PTR ds:0x44dab4,ecx
  410098:	pop    ebp
  410099:	ret    
  41009a:	call   0x40769b
  41009f:	mov    DWORD PTR [eax],0x16
  4100a5:	call   0x407649
  4100aa:	or     eax,0xffffffff
  4100ad:	pop    ebp
  4100ae:	ret    
  4100af:	mov    edi,edi
  4100b1:	push   ebp
  4100b2:	mov    ebp,esp
  4100b4:	sub    esp,0x10
  4100b7:	push   DWORD PTR [ebp+0x8]
  4100ba:	lea    ecx,[ebp-0x10]
  4100bd:	call   0x406b0c
  4100c2:	movzx  eax,BYTE PTR [ebp+0xc]
  4100c6:	mov    ecx,DWORD PTR [ebp-0xc]
  4100c9:	mov    dl,BYTE PTR [ebp+0x14]
  4100cc:	test   BYTE PTR [ecx+eax*1+0x1d],dl
  4100d0:	jne    0x4100f0
  4100d2:	cmp    DWORD PTR [ebp+0x10],0x0
  4100d6:	je     0x4100ea
  4100d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4100db:	mov    ecx,DWORD PTR [ecx+0xc8]
  4100e1:	movzx  eax,WORD PTR [ecx+eax*2]
  4100e5:	and    eax,DWORD PTR [ebp+0x10]
  4100e8:	jmp    0x4100ec
  4100ea:	xor    eax,eax
  4100ec:	test   eax,eax
  4100ee:	je     0x4100f3
  4100f0:	xor    eax,eax
  4100f2:	inc    eax
  4100f3:	cmp    BYTE PTR [ebp-0x4],0x0
  4100f7:	je     0x410100
  4100f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4100fc:	and    DWORD PTR [ecx+0x70],0xfffffffd
  410100:	leave  
  410101:	ret    
  410102:	mov    edi,edi
  410104:	push   ebp
  410105:	mov    ebp,esp
  410107:	push   0x4
  410109:	push   0x0
  41010b:	push   DWORD PTR [ebp+0x8]
  41010e:	push   0x0
  410110:	call   0x4100af
  410115:	add    esp,0x10
  410118:	pop    ebp
  410119:	ret    
  41011a:	int3   
  41011b:	int3   
  41011c:	int3   
  41011d:	int3   
  41011e:	int3   
  41011f:	int3   
  410120:	push   ebp
  410121:	mov    ebp,esp
  410123:	push   ebx
  410124:	push   esi
  410125:	push   edi
  410126:	push   ebp
  410127:	push   0x0
  410129:	push   0x0
  41012b:	push   0x410138
  410130:	push   DWORD PTR [ebp+0x8]
  410133:	call   0x4139be
  410138:	pop    ebp
  410139:	pop    edi
  41013a:	pop    esi
  41013b:	pop    ebx
  41013c:	mov    esp,ebp
  41013e:	pop    ebp
  41013f:	ret    
  410140:	mov    ecx,DWORD PTR [esp+0x4]
  410144:	test   DWORD PTR [ecx+0x4],0x6
  41014b:	mov    eax,0x1
  410150:	je     0x410184
  410152:	mov    eax,DWORD PTR [esp+0x14]
  410156:	mov    ecx,DWORD PTR [eax-0x4]
  410159:	xor    ecx,eax
  41015b:	call   0x403edd
  410160:	push   ebp
  410161:	mov    ebp,DWORD PTR [eax+0x10]
  410164:	mov    edx,DWORD PTR [eax+0x28]
  410167:	push   edx
  410168:	mov    edx,DWORD PTR [eax+0x24]
  41016b:	push   edx
  41016c:	call   0x410185
  410171:	add    esp,0x8
  410174:	pop    ebp
  410175:	mov    eax,DWORD PTR [esp+0x8]
  410179:	mov    edx,DWORD PTR [esp+0x10]
  41017d:	mov    DWORD PTR [edx],eax
  41017f:	mov    eax,0x3
  410184:	ret    
  410185:	push   ebx
  410186:	push   esi
  410187:	push   edi
  410188:	mov    eax,DWORD PTR [esp+0x10]
  41018c:	push   ebp
  41018d:	push   eax
  41018e:	push   0xfffffffe
  410190:	push   0x410140
  410195:	push   DWORD PTR fs:0x0
  41019c:	mov    eax,ds:0x44b470
  4101a1:	xor    eax,esp
  4101a3:	push   eax
  4101a4:	lea    eax,[esp+0x4]
  4101a8:	mov    fs:0x0,eax
  4101ae:	mov    eax,DWORD PTR [esp+0x28]
  4101b2:	mov    ebx,DWORD PTR [eax+0x8]
  4101b5:	mov    esi,DWORD PTR [eax+0xc]
  4101b8:	cmp    esi,0xffffffff
  4101bb:	je     0x4101f7
  4101bd:	cmp    DWORD PTR [esp+0x2c],0xffffffff
  4101c2:	je     0x4101ca
  4101c4:	cmp    esi,DWORD PTR [esp+0x2c]
  4101c8:	jbe    0x4101f7
  4101ca:	lea    esi,[esi+esi*2]
  4101cd:	mov    ecx,DWORD PTR [ebx+esi*4]
  4101d0:	mov    DWORD PTR [esp+0xc],ecx
  4101d4:	mov    DWORD PTR [eax+0xc],ecx
  4101d7:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  4101dc:	jne    0x4101f5
  4101de:	push   0x101
  4101e3:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  4101e7:	call   0x410235
  4101ec:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  4101f0:	call   0x410254
  4101f5:	jmp    0x4101ae
  4101f7:	mov    ecx,DWORD PTR [esp+0x4]
  4101fb:	mov    DWORD PTR fs:0x0,ecx
  410202:	add    esp,0x18
  410205:	pop    edi
  410206:	pop    esi
  410207:	pop    ebx
  410208:	ret    
  410209:	xor    eax,eax
  41020b:	mov    ecx,DWORD PTR fs:0x0
  410212:	cmp    DWORD PTR [ecx+0x4],0x410140
  410219:	jne    0x41022b
  41021b:	mov    edx,DWORD PTR [ecx+0xc]
  41021e:	mov    edx,DWORD PTR [edx+0xc]
  410221:	cmp    DWORD PTR [ecx+0x8],edx
  410224:	jne    0x41022b
  410226:	mov    eax,0x1
  41022b:	ret    
  41022c:	push   ebx
  41022d:	push   ecx
  41022e:	mov    ebx,0x44c3b0
  410233:	jmp    0x410240
  410235:	push   ebx
  410236:	push   ecx
  410237:	mov    ebx,0x44c3b0
  41023c:	mov    ecx,DWORD PTR [esp+0xc]
  410240:	mov    DWORD PTR [ebx+0x8],ecx
  410243:	mov    DWORD PTR [ebx+0x4],eax
  410246:	mov    DWORD PTR [ebx+0xc],ebp
  410249:	push   ebp
  41024a:	push   ecx
  41024b:	push   eax
  41024c:	pop    eax
  41024d:	pop    ecx
  41024e:	pop    ebp
  41024f:	pop    ecx
  410250:	pop    ebx
  410251:	ret    0x4
  410254:	call   eax
  410256:	ret    
  410257:	mov    edi,edi
  410259:	push   ebp
  41025a:	mov    ebp,esp
  41025c:	sub    esp,0x10
  41025f:	cmp    DWORD PTR [ebp+0x10],0x0
  410263:	push   ebx
  410264:	push   esi
  410265:	push   edi
  410266:	je     0x410332
  41026c:	push   DWORD PTR [ebp+0x14]
  41026f:	lea    ecx,[ebp-0x10]
  410272:	call   0x406b0c
  410277:	mov    ebx,DWORD PTR [ebp+0x8]
  41027a:	test   ebx,ebx
  41027c:	jne    0x4102a5
  41027e:	call   0x40769b
  410283:	mov    DWORD PTR [eax],0x16
  410289:	call   0x407649
  41028e:	cmp    BYTE PTR [ebp-0x4],0x0
  410292:	je     0x41029b
  410294:	mov    eax,DWORD PTR [ebp-0x8]
  410297:	and    DWORD PTR [eax+0x70],0xfffffffd
  41029b:	mov    eax,0x7fffffff
  4102a0:	jmp    0x410334
  4102a5:	mov    esi,DWORD PTR [ebp+0xc]
  4102a8:	test   esi,esi
  4102aa:	je     0x41027e
  4102ac:	mov    edi,0x7fffffff
  4102b1:	cmp    DWORD PTR [ebp+0x10],edi
  4102b4:	jbe    0x4102d7
  4102b6:	call   0x40769b
  4102bb:	mov    DWORD PTR [eax],0x16
  4102c1:	call   0x407649
  4102c6:	cmp    BYTE PTR [ebp-0x4],0x0
  4102ca:	je     0x4102d3
  4102cc:	mov    eax,DWORD PTR [ebp-0x8]
  4102cf:	and    DWORD PTR [eax+0x70],0xfffffffd
  4102d3:	mov    eax,edi
  4102d5:	jmp    0x410334
  4102d7:	mov    eax,DWORD PTR [ebp-0x10]
  4102da:	cmp    DWORD PTR [eax+0x14],0x0
  4102de:	jne    0x4102fc
  4102e0:	push   DWORD PTR [ebp+0x10]
  4102e3:	push   esi
  4102e4:	push   ebx
  4102e5:	call   0x411040
  4102ea:	add    esp,0xc
  4102ed:	cmp    BYTE PTR [ebp-0x4],0x0
  4102f1:	je     0x410334
  4102f3:	mov    ecx,DWORD PTR [ebp-0x8]
  4102f6:	and    DWORD PTR [ecx+0x70],0xfffffffd
  4102fa:	jmp    0x410334
  4102fc:	sub    ebx,esi
  4102fe:	movzx  eax,BYTE PTR [ebx+esi*1]
  410302:	lea    ecx,[ebp-0x10]
  410305:	push   ecx
  410306:	push   eax
  410307:	call   0x4108bd
  41030c:	mov    edi,eax
  41030e:	movzx  eax,BYTE PTR [esi]
  410311:	lea    ecx,[ebp-0x10]
  410314:	push   ecx
  410315:	push   eax
  410316:	call   0x4108bd
  41031b:	add    esp,0x10
  41031e:	inc    esi
  41031f:	dec    DWORD PTR [ebp+0x10]
  410322:	je     0x41032c
  410324:	test   edi,edi
  410326:	je     0x41032c
  410328:	cmp    edi,eax
  41032a:	je     0x4102fe
  41032c:	sub    edi,eax
  41032e:	mov    eax,edi
  410330:	jmp    0x4102ed
  410332:	xor    eax,eax
  410334:	pop    edi
  410335:	pop    esi
  410336:	pop    ebx
  410337:	leave  
  410338:	ret    
  410339:	push   0x2
  41033b:	call   0x407dd8
  410340:	pop    ecx
  410341:	ret    
  410342:	xor    eax,eax
  410344:	push   eax
  410345:	push   eax
  410346:	push   0x3
  410348:	push   eax
  410349:	push   0x3
  41034b:	push   0x40000000
  410350:	push   0x4459b8
  410355:	call   DWORD PTR ds:0x4430ec
  41035b:	mov    ds:0x44c3c0,eax
  410360:	ret    
  410361:	mov    eax,ds:0x44c3c0
  410366:	cmp    eax,0xffffffff
  410369:	je     0x410377
  41036b:	cmp    eax,0xfffffffe
  41036e:	je     0x410377
  410370:	push   eax
  410371:	call   DWORD PTR ds:0x4430cc
  410377:	ret    
  410378:	mov    edi,edi
  41037a:	push   ebp
  41037b:	mov    ebp,esp
  41037d:	push   ecx
  41037e:	push   esi
  41037f:	mov    esi,DWORD PTR [ebp+0xc]
  410382:	push   esi
  410383:	call   0x407499
  410388:	mov    DWORD PTR [ebp+0xc],eax
  41038b:	mov    eax,DWORD PTR [esi+0xc]
  41038e:	pop    ecx
  41038f:	test   al,0x82
  410391:	jne    0x4103ac
  410393:	call   0x40769b
  410398:	mov    DWORD PTR [eax],0x9
  41039e:	or     DWORD PTR [esi+0xc],0x20
  4103a2:	mov    eax,0xffff
  4103a7:	jmp    0x4104e9
  4103ac:	test   al,0x40
  4103ae:	je     0x4103bd
  4103b0:	call   0x40769b
  4103b5:	mov    DWORD PTR [eax],0x22
  4103bb:	jmp    0x41039e
  4103bd:	test   al,0x1
  4103bf:	je     0x4103d8
  4103c1:	and    DWORD PTR [esi+0x4],0x0
  4103c5:	test   al,0x10
  4103c7:	je     0x41045a
  4103cd:	mov    ecx,DWORD PTR [esi+0x8]
  4103d0:	and    eax,0xfffffffe
  4103d3:	mov    DWORD PTR [esi],ecx
  4103d5:	mov    DWORD PTR [esi+0xc],eax
  4103d8:	mov    eax,DWORD PTR [esi+0xc]
  4103db:	and    DWORD PTR [esi+0x4],0x0
  4103df:	and    DWORD PTR [ebp-0x4],0x0
  4103e3:	push   ebx
  4103e4:	push   0x2
  4103e6:	and    eax,0xffffffef
  4103e9:	pop    ebx
  4103ea:	or     eax,ebx
  4103ec:	mov    DWORD PTR [esi+0xc],eax
  4103ef:	test   eax,0x10c
  4103f4:	jne    0x410422
  4103f6:	call   0x4043cb
  4103fb:	add    eax,0x20
  4103fe:	cmp    esi,eax
  410400:	je     0x41040e
  410402:	call   0x4043cb
  410407:	add    eax,0x40
  41040a:	cmp    esi,eax
  41040c:	jne    0x41041b
  41040e:	push   DWORD PTR [ebp+0xc]
  410411:	call   0x40e3cc
  410416:	pop    ecx
  410417:	test   eax,eax
  410419:	jne    0x410422
  41041b:	push   esi
  41041c:	call   0x408025
  410421:	pop    ecx
  410422:	test   DWORD PTR [esi+0xc],0x108
  410429:	push   edi
  41042a:	je     0x4104b3
  410430:	mov    eax,DWORD PTR [esi+0x8]
  410433:	mov    edi,DWORD PTR [esi]
  410435:	lea    ecx,[eax+0x2]
  410438:	mov    DWORD PTR [esi],ecx
  41043a:	mov    ecx,DWORD PTR [esi+0x18]
  41043d:	sub    edi,eax
  41043f:	sub    ecx,ebx
  410441:	mov    DWORD PTR [esi+0x4],ecx
  410444:	test   edi,edi
  410446:	jle    0x410465
  410448:	push   edi
  410449:	push   eax
  41044a:	push   DWORD PTR [ebp+0xc]
  41044d:	call   0x4088da
  410452:	add    esp,0xc
  410455:	mov    DWORD PTR [ebp-0x4],eax
  410458:	jmp    0x4104a8
  41045a:	or     eax,0x20
  41045d:	mov    DWORD PTR [esi+0xc],eax
  410460:	jmp    0x4103a2
  410465:	mov    ecx,DWORD PTR [ebp+0xc]
  410468:	cmp    ecx,0xffffffff
  41046b:	je     0x410488
  41046d:	cmp    ecx,0xfffffffe
  410470:	je     0x410488
  410472:	mov    eax,ecx
  410474:	and    eax,0x1f
  410477:	mov    edx,ecx
  410479:	sar    edx,0x5
  41047c:	shl    eax,0x6
  41047f:	add    eax,DWORD PTR [edx*4+0x4507a0]
  410486:	jmp    0x41048d
  410488:	mov    eax,0x44b478
  41048d:	test   BYTE PTR [eax+0x4],0x20
  410491:	je     0x4104a8
  410493:	push   ebx
  410494:	push   0x0
  410496:	push   0x0
  410498:	push   ecx
  410499:	call   0x4080f3
  41049e:	and    eax,edx
  4104a0:	add    esp,0x10
  4104a3:	cmp    eax,0xffffffff
  4104a6:	je     0x4104d5
  4104a8:	mov    eax,DWORD PTR [esi+0x8]
  4104ab:	mov    ebx,DWORD PTR [ebp+0x8]
  4104ae:	mov    WORD PTR [eax],bx
  4104b1:	jmp    0x4104d0
  4104b3:	push   0x2
  4104b5:	lea    eax,[ebp-0x4]
  4104b8:	push   eax
  4104b9:	push   DWORD PTR [ebp+0xc]
  4104bc:	mov    edi,ebx
  4104be:	mov    ebx,DWORD PTR [ebp+0x8]
  4104c1:	mov    WORD PTR [ebp-0x4],bx
  4104c5:	call   0x4088da
  4104ca:	add    esp,0xc
  4104cd:	mov    DWORD PTR [ebp-0x4],eax
  4104d0:	cmp    DWORD PTR [ebp-0x4],edi
  4104d3:	je     0x4104e0
  4104d5:	or     DWORD PTR [esi+0xc],0x20
  4104d9:	mov    eax,0xffff
  4104de:	jmp    0x4104e7
  4104e0:	mov    eax,ebx
  4104e2:	and    eax,0xffff
  4104e7:	pop    edi
  4104e8:	pop    ebx
  4104e9:	pop    esi
  4104ea:	leave  
  4104eb:	ret    
  4104ec:	mov    edi,edi
  4104ee:	push   ebp
  4104ef:	mov    ebp,esp
  4104f1:	sub    esp,0x1c
  4104f4:	push   esi
  4104f5:	push   DWORD PTR [ebp+0x8]
  4104f8:	lea    ecx,[ebp-0x1c]
  4104fb:	call   0x406b0c
  410500:	mov    eax,DWORD PTR [ebp+0x10]
  410503:	mov    esi,DWORD PTR [ebp+0xc]
  410506:	test   eax,eax
  410508:	je     0x41050c
  41050a:	mov    DWORD PTR [eax],esi
  41050c:	test   esi,esi
  41050e:	jne    0x410534
  410510:	call   0x40769b
  410515:	mov    DWORD PTR [eax],0x16
  41051b:	call   0x407649
  410520:	cmp    BYTE PTR [ebp-0x10],0x0
  410524:	je     0x41052d
  410526:	mov    eax,DWORD PTR [ebp-0x14]
  410529:	and    DWORD PTR [eax+0x70],0xfffffffd
  41052d:	xor    eax,eax
  41052f:	jmp    0x410714
  410534:	cmp    DWORD PTR [ebp+0x14],0x0
  410538:	je     0x410546
  41053a:	cmp    DWORD PTR [ebp+0x14],0x2
  41053e:	jl     0x410510
  410540:	cmp    DWORD PTR [ebp+0x14],0x24
  410544:	jg     0x410510
  410546:	and    DWORD PTR [ebp-0x4],0x0
  41054a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41054d:	push   ebx
  41054e:	mov    bl,BYTE PTR [esi]
  410550:	push   edi
  410551:	lea    edi,[esi+0x1]
  410554:	cmp    DWORD PTR [ecx+0xac],0x1
  41055b:	jle    0x410574
  41055d:	lea    eax,[ebp-0x1c]
  410560:	push   eax
  410561:	movzx  eax,bl
  410564:	push   0x8
  410566:	push   eax
  410567:	call   0x40dfec
  41056c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41056f:	add    esp,0xc
  410572:	jmp    0x410584
  410574:	mov    edx,DWORD PTR [ecx+0xc8]
  41057a:	movzx  eax,bl
  41057d:	movzx  eax,WORD PTR [edx+eax*2]
  410581:	and    eax,0x8
  410584:	test   eax,eax
  410586:	je     0x41058d
  410588:	mov    bl,BYTE PTR [edi]
  41058a:	inc    edi
  41058b:	jmp    0x410554
  41058d:	cmp    bl,0x2d
  410590:	jne    0x410598
  410592:	or     DWORD PTR [ebp+0x18],0x2
  410596:	jmp    0x41059d
  410598:	cmp    bl,0x2b
  41059b:	jne    0x4105a0
  41059d:	mov    bl,BYTE PTR [edi]
  41059f:	inc    edi
  4105a0:	mov    eax,DWORD PTR [ebp+0x14]
  4105a3:	test   eax,eax
  4105a5:	js     0x4106fa
  4105ab:	cmp    eax,0x1
  4105ae:	je     0x4106fa
  4105b4:	cmp    eax,0x24
  4105b7:	jg     0x4106fa
  4105bd:	test   eax,eax
  4105bf:	jne    0x4105eb
  4105c1:	cmp    bl,0x30
  4105c4:	je     0x4105cf
  4105c6:	mov    DWORD PTR [ebp+0x14],0xa
  4105cd:	jmp    0x410605
  4105cf:	mov    al,BYTE PTR [edi]
  4105d1:	cmp    al,0x78
  4105d3:	je     0x4105e2
  4105d5:	cmp    al,0x58
  4105d7:	je     0x4105e2
  4105d9:	mov    DWORD PTR [ebp+0x14],0x8
  4105e0:	jmp    0x410605
  4105e2:	mov    DWORD PTR [ebp+0x14],0x10
  4105e9:	jmp    0x4105f5
  4105eb:	cmp    eax,0x10
  4105ee:	jne    0x410605
  4105f0:	cmp    bl,0x30
  4105f3:	jne    0x410605
  4105f5:	mov    al,BYTE PTR [edi]
  4105f7:	cmp    al,0x78
  4105f9:	je     0x4105ff
  4105fb:	cmp    al,0x58
  4105fd:	jne    0x410605
  4105ff:	mov    bl,BYTE PTR [edi+0x1]
  410602:	add    edi,0x2
  410605:	or     eax,0xffffffff
  410608:	xor    edx,edx
  41060a:	div    DWORD PTR [ebp+0x14]
  41060d:	mov    esi,DWORD PTR [ecx+0xc8]
  410613:	mov    DWORD PTR [ebp-0x8],edx
  410616:	movzx  ecx,bl
  410619:	movzx  ecx,WORD PTR [esi+ecx*2]
  41061d:	mov    edx,ecx
  41061f:	and    edx,0x4
  410622:	je     0x41062c
  410624:	movsx  ecx,bl
  410627:	sub    ecx,0x30
  41062a:	jmp    0x410645
  41062c:	and    ecx,0x103
  410632:	je     0x410664
  410634:	lea    ecx,[ebx-0x61]
  410637:	cmp    cl,0x19
  41063a:	movsx  ecx,bl
  41063d:	ja     0x410642
  41063f:	sub    ecx,0x20
  410642:	add    ecx,0xffffffc9
  410645:	cmp    ecx,DWORD PTR [ebp+0x14]
  410648:	jae    0x410664
  41064a:	or     DWORD PTR [ebp+0x18],0x8
  41064e:	cmp    DWORD PTR [ebp-0x4],eax
  410651:	jb     0x41067b
  410653:	jne    0x41065a
  410655:	cmp    ecx,DWORD PTR [ebp-0x8]
  410658:	jbe    0x41067b
  41065a:	or     DWORD PTR [ebp+0x18],0x4
  41065e:	cmp    DWORD PTR [ebp+0x10],0x0
  410662:	jne    0x410687
  410664:	mov    eax,DWORD PTR [ebp+0x18]
  410667:	dec    edi
  410668:	test   al,0x8
  41066a:	jne    0x41068c
  41066c:	cmp    DWORD PTR [ebp+0x10],0x0
  410670:	je     0x410675
  410672:	mov    edi,DWORD PTR [ebp+0xc]
  410675:	and    DWORD PTR [ebp-0x4],0x0
  410679:	jmp    0x4106d6
  41067b:	mov    edx,DWORD PTR [ebp-0x4]
  41067e:	imul   edx,DWORD PTR [ebp+0x14]
  410682:	add    edx,ecx
  410684:	mov    DWORD PTR [ebp-0x4],edx
  410687:	mov    bl,BYTE PTR [edi]
  410689:	inc    edi
  41068a:	jmp    0x410616
  41068c:	mov    esi,0x7fffffff
  410691:	test   al,0x4
  410693:	jne    0x4106b0
  410695:	test   al,0x1
  410697:	jne    0x4106d6
  410699:	and    eax,0x2
  41069c:	je     0x4106a7
  41069e:	cmp    DWORD PTR [ebp-0x4],0x80000000
  4106a5:	ja     0x4106b0
  4106a7:	test   eax,eax
  4106a9:	jne    0x4106d6
  4106ab:	cmp    DWORD PTR [ebp-0x4],esi
  4106ae:	jbe    0x4106d6
  4106b0:	call   0x40769b
  4106b5:	test   BYTE PTR [ebp+0x18],0x1
  4106b9:	mov    DWORD PTR [eax],0x22
  4106bf:	je     0x4106c7
  4106c1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4106c5:	jmp    0x4106d6
  4106c7:	test   BYTE PTR [ebp+0x18],0x2
  4106cb:	push   0x0
  4106cd:	pop    eax
  4106ce:	setne  al
  4106d1:	add    eax,esi
  4106d3:	mov    DWORD PTR [ebp-0x4],eax
  4106d6:	mov    eax,DWORD PTR [ebp+0x10]
  4106d9:	test   eax,eax
  4106db:	je     0x4106df
  4106dd:	mov    DWORD PTR [eax],edi
  4106df:	test   BYTE PTR [ebp+0x18],0x2
  4106e3:	je     0x4106e8
  4106e5:	neg    DWORD PTR [ebp-0x4]
  4106e8:	cmp    BYTE PTR [ebp-0x10],0x0
  4106ec:	je     0x4106f5
  4106ee:	mov    eax,DWORD PTR [ebp-0x14]
  4106f1:	and    DWORD PTR [eax+0x70],0xfffffffd
  4106f5:	mov    eax,DWORD PTR [ebp-0x4]
  4106f8:	jmp    0x410712
  4106fa:	mov    eax,DWORD PTR [ebp+0x10]
  4106fd:	test   eax,eax
  4106ff:	je     0x410703
  410701:	mov    DWORD PTR [eax],esi
  410703:	cmp    BYTE PTR [ebp-0x10],0x0
  410707:	je     0x410710
  410709:	mov    eax,DWORD PTR [ebp-0x14]
  41070c:	and    DWORD PTR [eax+0x70],0xfffffffd
  410710:	xor    eax,eax
  410712:	pop    edi
  410713:	pop    ebx
  410714:	pop    esi
  410715:	leave  
  410716:	ret    
  410717:	mov    edi,edi
  410719:	push   ebp
  41071a:	mov    ebp,esp
  41071c:	xor    eax,eax
  41071e:	push   eax
  41071f:	push   DWORD PTR [ebp+0x10]
  410722:	push   DWORD PTR [ebp+0xc]
  410725:	push   DWORD PTR [ebp+0x8]
  410728:	cmp    DWORD PTR ds:0x44dab8,eax
  41072e:	jne    0x410737
  410730:	push   0x44bc5c
  410735:	jmp    0x410738
  410737:	push   eax
  410738:	call   0x4104ec
  41073d:	add    esp,0x14
  410740:	pop    ebp
  410741:	ret    
  410742:	mov    edi,edi
  410744:	push   ebx
  410745:	mov    ebx,esp
  410747:	push   ecx
  410748:	push   ecx
  410749:	and    esp,0xfffffff0
  41074c:	add    esp,0x4
  41074f:	push   ebp
  410750:	mov    ebp,DWORD PTR [ebx+0x4]
  410753:	mov    DWORD PTR [esp+0x4],ebp
  410757:	mov    ebp,esp
  410759:	sub    esp,0x88
  41075f:	mov    eax,ds:0x44b470
  410764:	xor    eax,ebp
  410766:	mov    DWORD PTR [ebp-0x4],eax
  410769:	mov    eax,DWORD PTR [ebx+0x10]
  41076c:	movzx  ecx,WORD PTR [eax]
  41076f:	push   esi
  410770:	mov    esi,DWORD PTR [ebx+0xc]
  410773:	mov    eax,DWORD PTR [esi]
  410775:	dec    eax
  410776:	push   edi
  410777:	mov    DWORD PTR [ebp-0x88],ecx
  41077d:	je     0x4107d1
  41077f:	dec    eax
  410780:	je     0x4107c5
  410782:	dec    eax
  410783:	je     0x4107b9
  410785:	dec    eax
  410786:	je     0x4107ad
  410788:	dec    eax
  410789:	je     0x4107d1
  41078b:	dec    eax
  41078c:	dec    eax
  41078d:	je     0x4107a2
  41078f:	dec    eax
  410790:	jne    0x41083b
  410796:	mov    DWORD PTR [ebp-0x84],0x10
  4107a0:	jmp    0x4107db
  4107a2:	mov    DWORD PTR [esi],0x1
  4107a8:	jmp    0x41083b
  4107ad:	mov    DWORD PTR [ebp-0x84],0x12
  4107b7:	jmp    0x4107db
  4107b9:	mov    DWORD PTR [ebp-0x84],0x11
  4107c3:	jmp    0x4107db
  4107c5:	mov    DWORD PTR [ebp-0x84],0x4
  4107cf:	jmp    0x4107db
  4107d1:	mov    DWORD PTR [ebp-0x84],0x8
  4107db:	push   ecx
  4107dc:	lea    edi,[esi+0x18]
  4107df:	push   edi
  4107e0:	push   DWORD PTR [ebp-0x84]
  4107e6:	call   0x40a8c9
  4107eb:	add    esp,0xc
  4107ee:	test   eax,eax
  4107f0:	jne    0x41083b
  4107f2:	mov    eax,DWORD PTR [ebx+0x8]
  4107f5:	cmp    eax,0x10
  4107f8:	je     0x41080a
  4107fa:	cmp    eax,0x16
  4107fd:	je     0x41080a
  4107ff:	cmp    eax,0x1d
  410802:	je     0x41080a
  410804:	and    DWORD PTR [ebp-0x40],0xfffffffe
  410808:	jmp    0x41081c
  41080a:	mov    ecx,DWORD PTR [ebp-0x40]
  41080d:	fld    QWORD PTR [esi+0x10]
  410810:	and    ecx,0xffffffe3
  410813:	fstp   QWORD PTR [ebp-0x50]
  410816:	or     ecx,0x3
  410819:	mov    DWORD PTR [ebp-0x40],ecx
  41081c:	push   edi
  41081d:	lea    ecx,[esi+0x8]
  410820:	push   ecx
  410821:	push   eax
  410822:	push   DWORD PTR [ebp-0x84]
  410828:	lea    eax,[ebp-0x88]
  41082e:	push   eax
  41082f:	lea    eax,[ebp-0x80]
  410832:	push   eax
  410833:	call   0x40a8a6
  410838:	add    esp,0x18
  41083b:	push   0xffff
  410840:	push   DWORD PTR [ebp-0x88]
  410846:	call   0x40aedb
  41084b:	cmp    DWORD PTR [esi],0x8
  41084e:	pop    ecx
  41084f:	pop    ecx
  410850:	je     0x410866
  410852:	cmp    DWORD PTR ds:0x44c330,0x0
  410859:	jne    0x410866
  41085b:	push   esi
  41085c:	call   0x40edb1
  410861:	pop    ecx
  410862:	test   eax,eax
  410864:	jne    0x41086e
  410866:	push   DWORD PTR [esi]
  410868:	call   0x40aaad
  41086d:	pop    ecx
  41086e:	mov    ecx,DWORD PTR [ebp-0x4]
  410871:	pop    edi
  410872:	xor    ecx,ebp
  410874:	pop    esi
  410875:	call   0x403edd
  41087a:	mov    esp,ebp
  41087c:	pop    ebp
  41087d:	mov    esp,ebx
  41087f:	pop    ebx
  410880:	ret    
  410881:	int3   
  410882:	int3   
  410883:	int3   
  410884:	int3   
  410885:	int3   
  410886:	int3   
  410887:	int3   
  410888:	int3   
  410889:	int3   
  41088a:	int3   
  41088b:	int3   
  41088c:	int3   
  41088d:	int3   
  41088e:	int3   
  41088f:	int3   
  410890:	push   ebp
  410891:	mov    ebp,esp
  410893:	push   edi
  410894:	mov    edi,DWORD PTR [ebp+0x8]
  410897:	xor    eax,eax
  410899:	or     ecx,0xffffffff
  41089c:	repnz scas al,BYTE PTR es:[edi]
  41089e:	add    ecx,0x1
  4108a1:	neg    ecx
  4108a3:	sub    edi,0x1
  4108a6:	mov    al,BYTE PTR [ebp+0xc]
  4108a9:	std    
  4108aa:	repnz scas al,BYTE PTR es:[edi]
  4108ac:	add    edi,0x1
  4108af:	cmp    BYTE PTR [edi],al
  4108b1:	je     0x4108b7
  4108b3:	xor    eax,eax
  4108b5:	jmp    0x4108b9
  4108b7:	mov    eax,edi
  4108b9:	cld    
  4108ba:	pop    edi
  4108bb:	leave  
  4108bc:	ret    
  4108bd:	mov    edi,edi
  4108bf:	push   ebp
  4108c0:	mov    ebp,esp
  4108c2:	sub    esp,0x18
  4108c5:	push   ebx
  4108c6:	push   esi
  4108c7:	push   DWORD PTR [ebp+0xc]
  4108ca:	lea    ecx,[ebp-0x18]
  4108cd:	call   0x406b0c
  4108d2:	mov    ebx,DWORD PTR [ebp+0x8]
  4108d5:	mov    esi,0x100
  4108da:	cmp    ebx,esi
  4108dc:	jae    0x410932
  4108de:	mov    ecx,DWORD PTR [ebp-0x18]
  4108e1:	cmp    DWORD PTR [ecx+0xac],0x1
  4108e8:	jle    0x4108fe
  4108ea:	lea    eax,[ebp-0x18]
  4108ed:	push   eax
  4108ee:	push   0x1
  4108f0:	push   ebx
  4108f1:	call   0x40dfec
  4108f6:	mov    ecx,DWORD PTR [ebp-0x18]
  4108f9:	add    esp,0xc
  4108fc:	jmp    0x41090b
  4108fe:	mov    eax,DWORD PTR [ecx+0xc8]
  410904:	movzx  eax,WORD PTR [eax+ebx*2]
  410908:	and    eax,0x1
  41090b:	test   eax,eax
  41090d:	je     0x41091e
  41090f:	mov    eax,DWORD PTR [ecx+0xcc]
  410915:	movzx  eax,BYTE PTR [eax+ebx*1]
  410919:	jmp    0x4109c1
  41091e:	cmp    BYTE PTR [ebp-0xc],0x0
  410922:	je     0x41092b
  410924:	mov    eax,DWORD PTR [ebp-0x10]
  410927:	and    DWORD PTR [eax+0x70],0xfffffffd
  41092b:	mov    eax,ebx
  41092d:	jmp    0x4109ce
  410932:	mov    eax,DWORD PTR [ebp-0x18]
  410935:	cmp    DWORD PTR [eax+0xac],0x1
  41093c:	jle    0x41096f
  41093e:	mov    DWORD PTR [ebp+0x8],ebx
  410941:	sar    DWORD PTR [ebp+0x8],0x8
  410945:	lea    eax,[ebp-0x18]
  410948:	push   eax
  410949:	mov    eax,DWORD PTR [ebp+0x8]
  41094c:	and    eax,0xff
  410951:	push   eax
  410952:	call   0x40e902
  410957:	pop    ecx
  410958:	pop    ecx
  410959:	test   eax,eax
  41095b:	je     0x41096f
  41095d:	mov    al,BYTE PTR [ebp+0x8]
  410960:	push   0x2
  410962:	mov    BYTE PTR [ebp-0x4],al
  410965:	mov    BYTE PTR [ebp-0x3],bl
  410968:	mov    BYTE PTR [ebp-0x2],0x0
  41096c:	pop    ecx
  41096d:	jmp    0x410984
  41096f:	call   0x40769b
  410974:	mov    DWORD PTR [eax],0x2a
  41097a:	xor    ecx,ecx
  41097c:	mov    BYTE PTR [ebp-0x4],bl
  41097f:	mov    BYTE PTR [ebp-0x3],0x0
  410983:	inc    ecx
  410984:	mov    eax,DWORD PTR [ebp-0x18]
  410987:	push   0x1
  410989:	push   DWORD PTR [eax+0x4]
  41098c:	lea    edx,[ebp-0x8]
  41098f:	push   0x3
  410991:	push   edx
  410992:	push   ecx
  410993:	lea    ecx,[ebp-0x4]
  410996:	push   ecx
  410997:	push   esi
  410998:	push   DWORD PTR [eax+0x14]
  41099b:	lea    eax,[ebp-0x18]
  41099e:	push   eax
  41099f:	call   0x406d7a
  4109a4:	add    esp,0x24
  4109a7:	test   eax,eax
  4109a9:	je     0x41091e
  4109af:	cmp    eax,0x1
  4109b2:	movzx  eax,BYTE PTR [ebp-0x8]
  4109b6:	je     0x4109c1
  4109b8:	movzx  ecx,BYTE PTR [ebp-0x7]
  4109bc:	shl    eax,0x8
  4109bf:	or     eax,ecx
  4109c1:	cmp    BYTE PTR [ebp-0xc],0x0
  4109c5:	je     0x4109ce
  4109c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4109ca:	and    DWORD PTR [ecx+0x70],0xfffffffd
  4109ce:	pop    esi
  4109cf:	pop    ebx
  4109d0:	leave  
  4109d1:	ret    
  4109d2:	mov    edi,edi
  4109d4:	push   ebp
  4109d5:	mov    ebp,esp
  4109d7:	cmp    DWORD PTR ds:0x44dab8,0x0
  4109de:	jne    0x4109f0
  4109e0:	mov    eax,DWORD PTR [ebp+0x8]
  4109e3:	lea    ecx,[eax-0x41]
  4109e6:	cmp    ecx,0x19
  4109e9:	ja     0x4109fc
  4109eb:	add    eax,0x20
  4109ee:	pop    ebp
  4109ef:	ret    
  4109f0:	push   0x0
  4109f2:	push   DWORD PTR [ebp+0x8]
  4109f5:	call   0x4108bd
  4109fa:	pop    ecx
  4109fb:	pop    ecx
  4109fc:	pop    ebp
  4109fd:	ret    
  4109fe:	mov    edi,edi
  410a00:	push   ebp
  410a01:	mov    ebp,esp
  410a03:	sub    esp,0x28
  410a06:	mov    eax,ds:0x44b470
  410a0b:	xor    eax,ebp
  410a0d:	mov    DWORD PTR [ebp-0x4],eax
  410a10:	push   ebx
  410a11:	push   esi
  410a12:	mov    esi,DWORD PTR [ebp+0x8]
  410a15:	push   edi
  410a16:	push   DWORD PTR [ebp+0x10]
  410a19:	mov    edi,DWORD PTR [ebp+0xc]
  410a1c:	lea    ecx,[ebp-0x24]
  410a1f:	call   0x406b0c
  410a24:	lea    eax,[ebp-0x24]
  410a27:	push   eax
  410a28:	xor    ebx,ebx
  410a2a:	push   ebx
  410a2b:	push   ebx
  410a2c:	push   ebx
  410a2d:	push   ebx
  410a2e:	push   edi
  410a2f:	lea    eax,[ebp-0x28]
  410a32:	push   eax
  410a33:	lea    eax,[ebp-0x10]
  410a36:	push   eax
  410a37:	call   0x411b43
  410a3c:	mov    DWORD PTR [ebp-0x14],eax
  410a3f:	lea    eax,[ebp-0x10]
  410a42:	push   esi
  410a43:	push   eax
  410a44:	call   0x4110a1
  410a49:	add    esp,0x28
  410a4c:	test   BYTE PTR [ebp-0x14],0x3
  410a50:	jne    0x410a7d
  410a52:	cmp    eax,0x1
  410a55:	jne    0x410a68
  410a57:	cmp    BYTE PTR [ebp-0x18],bl
  410a5a:	je     0x410a63
  410a5c:	mov    eax,DWORD PTR [ebp-0x1c]
  410a5f:	and    DWORD PTR [eax+0x70],0xfffffffd
  410a63:	push   0x3
  410a65:	pop    eax
  410a66:	jmp    0x410a97
  410a68:	cmp    eax,0x2
  410a6b:	jne    0x410a89
  410a6d:	cmp    BYTE PTR [ebp-0x18],bl
  410a70:	je     0x410a79
  410a72:	mov    eax,DWORD PTR [ebp-0x1c]
  410a75:	and    DWORD PTR [eax+0x70],0xfffffffd
  410a79:	push   0x4
  410a7b:	jmp    0x410a65
  410a7d:	test   BYTE PTR [ebp-0x14],0x1
  410a81:	jne    0x410a6d
  410a83:	test   BYTE PTR [ebp-0x14],0x2
  410a87:	jne    0x410a57
  410a89:	cmp    BYTE PTR [ebp-0x18],bl
  410a8c:	je     0x410a95
  410a8e:	mov    eax,DWORD PTR [ebp-0x1c]
  410a91:	and    DWORD PTR [eax+0x70],0xfffffffd
  410a95:	xor    eax,eax
  410a97:	mov    ecx,DWORD PTR [ebp-0x4]
  410a9a:	pop    edi
  410a9b:	pop    esi
  410a9c:	xor    ecx,ebp
  410a9e:	pop    ebx
  410a9f:	call   0x403edd
  410aa4:	leave  
  410aa5:	ret    
  410aa6:	mov    edi,edi
  410aa8:	push   ebp
  410aa9:	mov    ebp,esp
  410aab:	sub    esp,0x28
  410aae:	mov    eax,ds:0x44b470
  410ab3:	xor    eax,ebp
  410ab5:	mov    DWORD PTR [ebp-0x4],eax
  410ab8:	push   ebx
  410ab9:	push   esi
  410aba:	mov    esi,DWORD PTR [ebp+0x8]
  410abd:	push   edi
  410abe:	push   DWORD PTR [ebp+0x10]
  410ac1:	mov    edi,DWORD PTR [ebp+0xc]
  410ac4:	lea    ecx,[ebp-0x24]
  410ac7:	call   0x406b0c
  410acc:	lea    eax,[ebp-0x24]
  410acf:	push   eax
  410ad0:	xor    ebx,ebx
  410ad2:	push   ebx
  410ad3:	push   ebx
  410ad4:	push   ebx
  410ad5:	push   ebx
  410ad6:	push   edi
  410ad7:	lea    eax,[ebp-0x28]
  410ada:	push   eax
  410adb:	lea    eax,[ebp-0x10]
  410ade:	push   eax
  410adf:	call   0x411b43
  410ae4:	mov    DWORD PTR [ebp-0x14],eax
  410ae7:	lea    eax,[ebp-0x10]
  410aea:	push   esi
  410aeb:	push   eax
  410aec:	call   0x4115f2
  410af1:	add    esp,0x28
  410af4:	test   BYTE PTR [ebp-0x14],0x3
  410af8:	jne    0x410b25
  410afa:	cmp    eax,0x1
  410afd:	jne    0x410b10
  410aff:	cmp    BYTE PTR [ebp-0x18],bl
  410b02:	je     0x410b0b
  410b04:	mov    eax,DWORD PTR [ebp-0x1c]
  410b07:	and    DWORD PTR [eax+0x70],0xfffffffd
  410b0b:	push   0x3
  410b0d:	pop    eax
  410b0e:	jmp    0x410b3f
  410b10:	cmp    eax,0x2
  410b13:	jne    0x410b31
  410b15:	cmp    BYTE PTR [ebp-0x18],bl
  410b18:	je     0x410b21
  410b1a:	mov    eax,DWORD PTR [ebp-0x1c]
  410b1d:	and    DWORD PTR [eax+0x70],0xfffffffd
  410b21:	push   0x4
  410b23:	jmp    0x410b0d
  410b25:	test   BYTE PTR [ebp-0x14],0x1
  410b29:	jne    0x410b15
  410b2b:	test   BYTE PTR [ebp-0x14],0x2
  410b2f:	jne    0x410aff
  410b31:	cmp    BYTE PTR [ebp-0x18],bl
  410b34:	je     0x410b3d
  410b36:	mov    eax,DWORD PTR [ebp-0x1c]
  410b39:	and    DWORD PTR [eax+0x70],0xfffffffd
  410b3d:	xor    eax,eax
  410b3f:	mov    ecx,DWORD PTR [ebp-0x4]
  410b42:	pop    edi
  410b43:	pop    esi
  410b44:	xor    ecx,ebp
  410b46:	pop    ebx
  410b47:	call   0x403edd
  410b4c:	leave  
  410b4d:	ret    
  410b4e:	mov    edi,edi
  410b50:	push   ebp
  410b51:	mov    ebp,esp
  410b53:	mov    ecx,DWORD PTR [ebp+0x14]
  410b56:	push   ebx
  410b57:	mov    ebx,DWORD PTR [ecx+0xc]
  410b5a:	push   esi
  410b5b:	mov    esi,DWORD PTR [ebp+0x8]
  410b5e:	xor    eax,eax
  410b60:	cmp    esi,eax
  410b62:	jne    0x410b7a
  410b64:	call   0x40769b
  410b69:	push   0x16
  410b6b:	pop    esi
  410b6c:	mov    DWORD PTR [eax],esi
  410b6e:	call   0x407649
  410b73:	mov    eax,esi
  410b75:	jmp    0x410bfd
  410b7a:	cmp    DWORD PTR [ebp+0xc],eax
  410b7d:	jbe    0x410b64
  410b7f:	mov    edx,DWORD PTR [ebp+0x10]
  410b82:	mov    BYTE PTR [esi],al
  410b84:	cmp    edx,eax
  410b86:	jle    0x410b8a
  410b88:	mov    eax,edx
  410b8a:	inc    eax
  410b8b:	cmp    DWORD PTR [ebp+0xc],eax
  410b8e:	ja     0x410b9e
  410b90:	call   0x40769b
  410b95:	push   0x22
  410b97:	pop    ecx
  410b98:	mov    DWORD PTR [eax],ecx
  410b9a:	mov    esi,ecx
  410b9c:	jmp    0x410b6e
  410b9e:	push   edi
  410b9f:	lea    edi,[esi+0x1]
  410ba2:	mov    BYTE PTR [esi],0x30
  410ba5:	mov    eax,edi
  410ba7:	test   edx,edx
  410ba9:	jle    0x410bc5
  410bab:	mov    cl,BYTE PTR [ebx]
  410bad:	test   cl,cl
  410baf:	je     0x410bb7
  410bb1:	movsx  ecx,cl
  410bb4:	inc    ebx
  410bb5:	jmp    0x410bba
  410bb7:	push   0x30
  410bb9:	pop    ecx
  410bba:	mov    BYTE PTR [eax],cl
  410bbc:	inc    eax
  410bbd:	dec    edx
  410bbe:	test   edx,edx
  410bc0:	jg     0x410bab
  410bc2:	mov    ecx,DWORD PTR [ebp+0x14]
  410bc5:	mov    BYTE PTR [eax],0x0
  410bc8:	test   edx,edx
  410bca:	js     0x410bde
  410bcc:	cmp    BYTE PTR [ebx],0x35
  410bcf:	jl     0x410bde
  410bd1:	jmp    0x410bd6
  410bd3:	mov    BYTE PTR [eax],0x30
  410bd6:	dec    eax
  410bd7:	cmp    BYTE PTR [eax],0x39
  410bda:	je     0x410bd3
  410bdc:	inc    BYTE PTR [eax]
  410bde:	cmp    BYTE PTR [esi],0x31
  410be1:	jne    0x410be8
  410be3:	inc    DWORD PTR [ecx+0x4]
  410be6:	jmp    0x410bfa
  410be8:	push   edi
  410be9:	call   0x405450
  410bee:	inc    eax
  410bef:	push   eax
  410bf0:	push   edi
  410bf1:	push   esi
  410bf2:	call   0x404030
  410bf7:	add    esp,0x10
  410bfa:	xor    eax,eax
  410bfc:	pop    edi
  410bfd:	pop    esi
  410bfe:	pop    ebx
  410bff:	pop    ebp
  410c00:	ret    
  410c01:	mov    edi,edi
  410c03:	push   ebp
  410c04:	mov    ebp,esp
  410c06:	push   ecx
  410c07:	mov    ecx,DWORD PTR [ebp+0xc]
  410c0a:	movzx  eax,WORD PTR [ecx+0x6]
  410c0e:	push   ebx
  410c0f:	mov    ebx,eax
  410c11:	shr    ebx,0x4
  410c14:	and    eax,0x8000
  410c19:	push   esi
  410c1a:	mov    edx,0x7ff
  410c1f:	and    ebx,edx
  410c21:	push   edi
  410c22:	mov    DWORD PTR [ebp+0xc],eax
  410c25:	mov    eax,DWORD PTR [ecx+0x4]
  410c28:	mov    ecx,DWORD PTR [ecx]
  410c2a:	movzx  edi,bx
  410c2d:	mov    esi,0x80000000
  410c32:	and    eax,0xfffff
  410c37:	mov    DWORD PTR [ebp-0x4],esi
  410c3a:	test   edi,edi
  410c3c:	je     0x410c51
  410c3e:	cmp    edi,edx
  410c40:	je     0x410c4a
  410c42:	add    ebx,0x3c00
  410c48:	jmp    0x410c72
  410c4a:	mov    edi,0x7fff
  410c4f:	jmp    0x410c75
  410c51:	xor    edx,edx
  410c53:	cmp    eax,edx
  410c55:	jne    0x410c69
  410c57:	cmp    ecx,edx
  410c59:	jne    0x410c69
  410c5b:	mov    eax,DWORD PTR [ebp+0x8]
  410c5e:	mov    cx,WORD PTR [ebp+0xc]
  410c62:	mov    DWORD PTR [eax+0x4],edx
  410c65:	mov    DWORD PTR [eax],edx
  410c67:	jmp    0x410cab
  410c69:	add    ebx,0x3c01
  410c6f:	mov    DWORD PTR [ebp-0x4],edx
  410c72:	movzx  edi,bx
  410c75:	mov    edx,ecx
  410c77:	shr    edx,0x15
  410c7a:	shl    eax,0xb
  410c7d:	or     edx,eax
  410c7f:	or     edx,DWORD PTR [ebp-0x4]
  410c82:	mov    eax,DWORD PTR [ebp+0x8]
  410c85:	shl    ecx,0xb
  410c88:	jmp    0x410c9d
  410c8a:	mov    ecx,DWORD PTR [eax]
  410c8c:	mov    ebx,ecx
  410c8e:	shr    ebx,0x1f
  410c91:	add    edx,edx
  410c93:	or     edx,ebx
  410c95:	add    ecx,ecx
  410c97:	add    edi,0xffff
  410c9d:	mov    DWORD PTR [eax],ecx
  410c9f:	mov    DWORD PTR [eax+0x4],edx
  410ca2:	test   esi,edx
  410ca4:	je     0x410c8a
  410ca6:	mov    ecx,DWORD PTR [ebp+0xc]
  410ca9:	or     ecx,edi
  410cab:	pop    edi
  410cac:	pop    esi
  410cad:	mov    WORD PTR [eax+0x8],cx
  410cb1:	pop    ebx
  410cb2:	leave  
  410cb3:	ret    
  410cb4:	mov    edi,edi
  410cb6:	push   ebp
  410cb7:	mov    ebp,esp
  410cb9:	sub    esp,0x30
  410cbc:	mov    eax,ds:0x44b470
  410cc1:	xor    eax,ebp
  410cc3:	mov    DWORD PTR [ebp-0x4],eax
  410cc6:	mov    eax,DWORD PTR [ebp+0x14]
  410cc9:	push   ebx
  410cca:	mov    ebx,DWORD PTR [ebp+0x10]
  410ccd:	push   esi
  410cce:	mov    DWORD PTR [ebp-0x24],eax
  410cd1:	push   edi
  410cd2:	lea    eax,[ebp+0x8]
  410cd5:	push   eax
  410cd6:	lea    eax,[ebp-0x30]
  410cd9:	push   eax
  410cda:	call   0x410c01
  410cdf:	pop    ecx
  410ce0:	pop    ecx
  410ce1:	lea    eax,[ebp-0x20]
  410ce4:	push   eax
  410ce5:	push   0x0
  410ce7:	push   0x11
  410ce9:	sub    esp,0xc
  410cec:	lea    esi,[ebp-0x30]
  410cef:	mov    edi,esp
  410cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  410cf5:	call   0x41221f
  410cfa:	mov    esi,DWORD PTR [ebp-0x24]
  410cfd:	mov    DWORD PTR [ebx+0x8],eax
  410d00:	movsx  eax,BYTE PTR [ebp-0x1e]
  410d04:	mov    DWORD PTR [ebx],eax
  410d06:	movsx  eax,WORD PTR [ebp-0x20]
  410d0a:	mov    DWORD PTR [ebx+0x4],eax
  410d0d:	lea    eax,[ebp-0x1c]
  410d10:	push   eax
  410d11:	push   DWORD PTR [ebp+0x18]
  410d14:	push   esi
  410d15:	call   0x4078df
  410d1a:	add    esp,0x24
  410d1d:	test   eax,eax
  410d1f:	jne    0x410d35
  410d21:	mov    ecx,DWORD PTR [ebp-0x4]
  410d24:	pop    edi
  410d25:	mov    DWORD PTR [ebx+0xc],esi
  410d28:	pop    esi
  410d29:	mov    eax,ebx
  410d2b:	xor    ecx,ebp
  410d2d:	pop    ebx
  410d2e:	call   0x403edd
  410d33:	leave  
  410d34:	ret    
  410d35:	xor    eax,eax
  410d37:	push   eax
  410d38:	push   eax
  410d39:	push   eax
  410d3a:	push   eax
  410d3b:	push   eax
  410d3c:	call   0x4075f7
  410d41:	int3   
  410d42:	int3   
  410d43:	int3   
  410d44:	int3   
  410d45:	int3   
  410d46:	int3   
  410d47:	int3   
  410d48:	int3   
  410d49:	int3   
  410d4a:	int3   
  410d4b:	int3   
  410d4c:	int3   
  410d4d:	int3   
  410d4e:	int3   
  410d4f:	int3   
  410d50:	push   edi
  410d51:	push   esi
  410d52:	push   ebp
  410d53:	xor    edi,edi
  410d55:	xor    ebp,ebp
  410d57:	mov    eax,DWORD PTR [esp+0x14]
  410d5b:	or     eax,eax
  410d5d:	jge    0x410d74
  410d5f:	inc    edi
  410d60:	inc    ebp
  410d61:	mov    edx,DWORD PTR [esp+0x10]
  410d65:	neg    eax
  410d67:	neg    edx
  410d69:	sbb    eax,0x0
  410d6c:	mov    DWORD PTR [esp+0x14],eax
  410d70:	mov    DWORD PTR [esp+0x10],edx
  410d74:	mov    eax,DWORD PTR [esp+0x1c]
  410d78:	or     eax,eax
  410d7a:	jge    0x410d90
  410d7c:	inc    edi
  410d7d:	mov    edx,DWORD PTR [esp+0x18]
  410d81:	neg    eax
  410d83:	neg    edx
  410d85:	sbb    eax,0x0
  410d88:	mov    DWORD PTR [esp+0x1c],eax
  410d8c:	mov    DWORD PTR [esp+0x18],edx
  410d90:	or     eax,eax
  410d92:	jne    0x410dbc
  410d94:	mov    ecx,DWORD PTR [esp+0x18]
  410d98:	mov    eax,DWORD PTR [esp+0x14]
  410d9c:	xor    edx,edx
  410d9e:	div    ecx
  410da0:	mov    ebx,eax
  410da2:	mov    eax,DWORD PTR [esp+0x10]
  410da6:	div    ecx
  410da8:	mov    esi,eax
  410daa:	mov    eax,ebx
  410dac:	mul    DWORD PTR [esp+0x18]
  410db0:	mov    ecx,eax
  410db2:	mov    eax,esi
  410db4:	mul    DWORD PTR [esp+0x18]
  410db8:	add    edx,ecx
  410dba:	jmp    0x410e03
  410dbc:	mov    ebx,eax
  410dbe:	mov    ecx,DWORD PTR [esp+0x18]
  410dc2:	mov    edx,DWORD PTR [esp+0x14]
  410dc6:	mov    eax,DWORD PTR [esp+0x10]
  410dca:	shr    ebx,1
  410dcc:	rcr    ecx,1
  410dce:	shr    edx,1
  410dd0:	rcr    eax,1
  410dd2:	or     ebx,ebx
  410dd4:	jne    0x410dca
  410dd6:	div    ecx
  410dd8:	mov    esi,eax
  410dda:	mul    DWORD PTR [esp+0x1c]
  410dde:	mov    ecx,eax
  410de0:	mov    eax,DWORD PTR [esp+0x18]
  410de4:	mul    esi
  410de6:	add    edx,ecx
  410de8:	jb     0x410df8
  410dea:	cmp    edx,DWORD PTR [esp+0x14]
  410dee:	ja     0x410df8
  410df0:	jb     0x410e01
  410df2:	cmp    eax,DWORD PTR [esp+0x10]
  410df6:	jbe    0x410e01
  410df8:	dec    esi
  410df9:	sub    eax,DWORD PTR [esp+0x18]
  410dfd:	sbb    edx,DWORD PTR [esp+0x1c]
  410e01:	xor    ebx,ebx
  410e03:	sub    eax,DWORD PTR [esp+0x10]
  410e07:	sbb    edx,DWORD PTR [esp+0x14]
  410e0b:	dec    ebp
  410e0c:	jns    0x410e15
  410e0e:	neg    edx
  410e10:	neg    eax
  410e12:	sbb    edx,0x0
  410e15:	mov    ecx,edx
  410e17:	mov    edx,ebx
  410e19:	mov    ebx,ecx
  410e1b:	mov    ecx,eax
  410e1d:	mov    eax,esi
  410e1f:	dec    edi
  410e20:	jne    0x410e29
  410e22:	neg    edx
  410e24:	neg    eax
  410e26:	sbb    edx,0x0
  410e29:	pop    ebp
  410e2a:	pop    esi
  410e2b:	pop    edi
  410e2c:	ret    0x10
  410e2f:	int3   
  410e30:	cmp    cl,0x40
  410e33:	jae    0x410e4a
  410e35:	cmp    cl,0x20
  410e38:	jae    0x410e40
  410e3a:	shrd   eax,edx,cl
  410e3d:	shr    edx,cl
  410e3f:	ret    
  410e40:	mov    eax,edx
  410e42:	xor    edx,edx
  410e44:	and    cl,0x1f
  410e47:	shr    eax,cl
  410e49:	ret    
  410e4a:	xor    eax,eax
  410e4c:	xor    edx,edx
  410e4e:	ret    
  410e4f:	mov    edi,edi
  410e51:	push   ebp
  410e52:	mov    ebp,esp
  410e54:	mov    eax,DWORD PTR [ebp+0x10]
  410e57:	mov    ecx,DWORD PTR [ebp+0xc]
  410e5a:	and    eax,0xfff7ffff
  410e5f:	and    ecx,eax
  410e61:	push   esi
  410e62:	mov    esi,DWORD PTR [ebp+0x8]
  410e65:	test   ecx,0xfcf0fce0
  410e6b:	je     0x410e91
  410e6d:	test   esi,esi
  410e6f:	je     0x410e7e
  410e71:	push   0x0
  410e73:	push   0x0
  410e75:	call   0x412c45
  410e7a:	pop    ecx
  410e7b:	pop    ecx
  410e7c:	mov    DWORD PTR [esi],eax
  410e7e:	call   0x40769b
  410e83:	push   0x16
  410e85:	pop    esi
  410e86:	mov    DWORD PTR [eax],esi
  410e88:	call   0x407649
  410e8d:	mov    eax,esi
  410e8f:	jmp    0x410eab
  410e91:	push   eax
  410e92:	push   DWORD PTR [ebp+0xc]
  410e95:	test   esi,esi
  410e97:	je     0x410ea2
  410e99:	call   0x412c45
  410e9e:	mov    DWORD PTR [esi],eax
  410ea0:	jmp    0x410ea7
  410ea2:	call   0x412c45
  410ea7:	pop    ecx
  410ea8:	pop    ecx
  410ea9:	xor    eax,eax
  410eab:	pop    esi
  410eac:	pop    ebp
  410ead:	ret    
  410eae:	mov    edi,edi
  410eb0:	push   ebp
  410eb1:	mov    ebp,esp
  410eb3:	sub    esp,0x10
  410eb6:	push   ebx
  410eb7:	push   DWORD PTR [ebp+0x14]
  410eba:	lea    ecx,[ebp-0x10]
  410ebd:	call   0x406b0c
  410ec2:	mov    ecx,DWORD PTR [ebp+0x10]
  410ec5:	xor    ebx,ebx
  410ec7:	cmp    ecx,ebx
  410ec9:	jne    0x410ede
  410ecb:	cmp    BYTE PTR [ebp-0x4],bl
  410ece:	je     0x410ed7
  410ed0:	mov    eax,DWORD PTR [ebp-0x8]
  410ed3:	and    DWORD PTR [eax+0x70],0xfffffffd
  410ed7:	xor    eax,eax
  410ed9:	jmp    0x410f89
  410ede:	cmp    DWORD PTR [ebp+0x8],ebx
  410ee1:	jne    0x410f09
  410ee3:	call   0x40769b
  410ee8:	mov    DWORD PTR [eax],0x16
  410eee:	call   0x407649
  410ef3:	cmp    BYTE PTR [ebp-0x4],bl
  410ef6:	je     0x410eff
  410ef8:	mov    eax,DWORD PTR [ebp-0x8]
  410efb:	and    DWORD PTR [eax+0x70],0xfffffffd
  410eff:	mov    eax,0x7fffffff
  410f04:	jmp    0x410f89
  410f09:	cmp    DWORD PTR [ebp+0xc],ebx
  410f0c:	je     0x410ee3
  410f0e:	push   esi
  410f0f:	mov    esi,0x7fffffff
  410f14:	cmp    ecx,esi
  410f16:	jbe    0x410f2a
  410f18:	call   0x40769b
  410f1d:	mov    DWORD PTR [eax],0x16
  410f23:	call   0x407649
  410f28:	jmp    0x410f69
  410f2a:	mov    eax,DWORD PTR [ebp-0xc]
  410f2d:	cmp    DWORD PTR [eax+0x8],ebx
  410f30:	jne    0x410f46
  410f32:	push   DWORD PTR [ebp+0x14]
  410f35:	push   ecx
  410f36:	push   DWORD PTR [ebp+0xc]
  410f39:	push   DWORD PTR [ebp+0x8]
  410f3c:	call   0x413207
  410f41:	add    esp,0x10
  410f44:	jmp    0x410f7c
  410f46:	push   DWORD PTR [eax+0x4]
  410f49:	push   ecx
  410f4a:	push   DWORD PTR [ebp+0xc]
  410f4d:	push   ecx
  410f4e:	push   DWORD PTR [ebp+0x8]
  410f51:	push   0x1001
  410f56:	push   DWORD PTR [eax+0xc]
  410f59:	lea    eax,[ebp-0x10]
  410f5c:	push   eax
  410f5d:	call   0x4131c5
  410f62:	add    esp,0x20
  410f65:	cmp    eax,ebx
  410f67:	jne    0x410f79
  410f69:	cmp    BYTE PTR [ebp-0x4],bl
  410f6c:	je     0x410f75
  410f6e:	mov    eax,DWORD PTR [ebp-0x8]
  410f71:	and    DWORD PTR [eax+0x70],0xfffffffd
  410f75:	mov    eax,esi
  410f77:	jmp    0x410f88
  410f79:	add    eax,0xfffffffe
  410f7c:	cmp    BYTE PTR [ebp-0x4],bl
  410f7f:	je     0x410f88
  410f81:	mov    ecx,DWORD PTR [ebp-0x8]
  410f84:	and    DWORD PTR [ecx+0x70],0xfffffffd
  410f88:	pop    esi
  410f89:	pop    ebx
  410f8a:	leave  
  410f8b:	ret    
  410f8c:	mov    edi,edi
  410f8e:	push   ebp
  410f8f:	mov    ebp,esp
  410f91:	push   0x0
  410f93:	push   DWORD PTR [ebp+0x10]
  410f96:	push   DWORD PTR [ebp+0xc]
  410f99:	push   DWORD PTR [ebp+0x8]
  410f9c:	call   0x410eae
  410fa1:	add    esp,0x10
  410fa4:	pop    ebp
  410fa5:	ret    
  410fa6:	mov    edi,edi
  410fa8:	push   ebp
  410fa9:	mov    ebp,esp
  410fab:	push   ecx
  410fac:	push   ecx
  410fad:	push   ebx
  410fae:	push   esi
  410faf:	xor    esi,esi
  410fb1:	push   edi
  410fb2:	mov    edi,DWORD PTR ds:0x44de04
  410fb8:	mov    DWORD PTR [ebp-0x4],esi
  410fbb:	mov    eax,DWORD PTR [edi]
  410fbd:	cmp    eax,esi
  410fbf:	je     0x411026
  410fc1:	mov    ebx,DWORD PTR ds:0x443198
  410fc7:	push   esi
  410fc8:	push   esi
  410fc9:	push   esi
  410fca:	push   esi
  410fcb:	push   0xffffffff
  410fcd:	push   eax
  410fce:	push   esi
  410fcf:	push   esi
  410fd0:	call   ebx
  410fd2:	mov    DWORD PTR [ebp-0x8],eax
  410fd5:	cmp    eax,esi
  410fd7:	je     0x41102d
  410fd9:	push   0x1
  410fdb:	push   eax
  410fdc:	call   0x406eaa
  410fe1:	pop    ecx
  410fe2:	pop    ecx
  410fe3:	mov    DWORD PTR [ebp-0x4],eax
  410fe6:	cmp    eax,esi
  410fe8:	je     0x41102d
  410fea:	push   esi
  410feb:	push   esi
  410fec:	push   DWORD PTR [ebp-0x8]
  410fef:	push   eax
  410ff0:	push   0xffffffff
  410ff2:	push   DWORD PTR [edi]
  410ff4:	push   esi
  410ff5:	push   esi
  410ff6:	call   ebx
  410ff8:	test   eax,eax
  410ffa:	je     0x411032
  410ffc:	lea    eax,[ebp-0x4]
  410fff:	push   esi
  411000:	push   eax
  411001:	call   0x4133a3
  411006:	pop    ecx
  411007:	pop    ecx
  411008:	test   eax,eax
  41100a:	jns    0x41101d
  41100c:	cmp    DWORD PTR [ebp-0x4],esi
  41100f:	je     0x41101d
  411011:	push   DWORD PTR [ebp-0x4]
  411014:	call   0x404391
  411019:	pop    ecx
  41101a:	mov    DWORD PTR [ebp-0x4],esi
  41101d:	add    edi,0x4
  411020:	mov    eax,DWORD PTR [edi]
  411022:	cmp    eax,esi
  411024:	jne    0x410fc7
  411026:	xor    eax,eax
  411028:	pop    edi
  411029:	pop    esi
  41102a:	pop    ebx
  41102b:	leave  
  41102c:	ret    
  41102d:	or     eax,0xffffffff
  411030:	jmp    0x411028
  411032:	push   DWORD PTR [ebp-0x4]
  411035:	call   0x404391
  41103a:	pop    ecx
  41103b:	jmp    0x41102d
  41103d:	int3   
  41103e:	int3   
  41103f:	int3   
  411040:	push   ebp
  411041:	mov    ebp,esp
  411043:	push   edi
  411044:	push   esi
  411045:	push   ebx
  411046:	mov    ecx,DWORD PTR [ebp+0x10]
  411049:	or     ecx,ecx
  41104b:	je     0x41109a
  41104d:	mov    esi,DWORD PTR [ebp+0x8]
  411050:	mov    edi,DWORD PTR [ebp+0xc]
  411053:	mov    bh,0x41
  411055:	mov    bl,0x5a
  411057:	mov    dh,0x20
  411059:	lea    ecx,[ecx+0x0]
  41105c:	mov    ah,BYTE PTR [esi]
  41105e:	or     ah,ah
  411060:	mov    al,BYTE PTR [edi]
  411062:	je     0x41108b
  411064:	or     al,al
  411066:	je     0x41108b
  411068:	add    esi,0x1
  41106b:	add    edi,0x1
  41106e:	cmp    ah,bh
  411070:	jb     0x411078
  411072:	cmp    ah,bl
  411074:	ja     0x411078
  411076:	add    ah,dh
  411078:	cmp    al,bh
  41107a:	jb     0x411082
  41107c:	cmp    al,bl
  41107e:	ja     0x411082
  411080:	add    al,dh
  411082:	cmp    ah,al
  411084:	jne    0x411091
  411086:	sub    ecx,0x1
  411089:	jne    0x41105c
  41108b:	xor    ecx,ecx
  41108d:	cmp    ah,al
  41108f:	je     0x41109a
  411091:	mov    ecx,0xffffffff
  411096:	jb     0x41109a
  411098:	neg    ecx
  41109a:	mov    eax,ecx
  41109c:	pop    ebx
  41109d:	pop    esi
  41109e:	pop    edi
  41109f:	leave  
  4110a0:	ret    
  4110a1:	mov    edi,edi
  4110a3:	push   ebp
  4110a4:	mov    ebp,esp
  4110a6:	sub    esp,0x38
  4110a9:	mov    eax,ds:0x44b470
  4110ae:	xor    eax,ebp
  4110b0:	mov    DWORD PTR [ebp-0x4],eax
  4110b3:	mov    eax,DWORD PTR [ebp+0x8]
  4110b6:	mov    ecx,DWORD PTR [ebp+0xc]
  4110b9:	mov    DWORD PTR [ebp-0x34],ecx
  4110bc:	movzx  ecx,WORD PTR [eax+0xa]
  4110c0:	push   ebx
  4110c1:	mov    ebx,ecx
  4110c3:	and    ecx,0x8000
  4110c9:	mov    DWORD PTR [ebp-0x38],ecx
  4110cc:	mov    ecx,DWORD PTR [eax+0x6]
  4110cf:	mov    DWORD PTR [ebp-0x10],ecx
  4110d2:	mov    ecx,DWORD PTR [eax+0x2]
  4110d5:	movzx  eax,WORD PTR [eax]
  4110d8:	and    ebx,0x7fff
  4110de:	sub    ebx,0x3fff
  4110e4:	shl    eax,0x10
  4110e7:	push   edi
  4110e8:	mov    DWORD PTR [ebp-0xc],ecx
  4110eb:	mov    DWORD PTR [ebp-0x8],eax
  4110ee:	cmp    ebx,0xffffc001
  4110f4:	jne    0x41111d
  4110f6:	xor    ebx,ebx
  4110f8:	xor    eax,eax
  4110fa:	cmp    DWORD PTR [ebp+eax*4-0x10],ebx
  4110fe:	jne    0x41110d
  411100:	inc    eax
  411101:	cmp    eax,0x3
  411104:	jl     0x4110fa
  411106:	xor    eax,eax
  411108:	jmp    0x4115a5
  41110d:	xor    eax,eax
  41110f:	lea    edi,[ebp-0x10]
  411112:	stos   DWORD PTR es:[edi],eax
  411113:	stos   DWORD PTR es:[edi],eax
  411114:	push   0x2
  411116:	stos   DWORD PTR es:[edi],eax
  411117:	pop    eax
  411118:	jmp    0x4115a5
  41111d:	and    DWORD PTR [ebp-0x24],0x0
  411121:	push   esi
  411122:	lea    esi,[ebp-0x10]
  411125:	lea    edi,[ebp-0x1c]
  411128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41112a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41112b:	mov    edi,DWORD PTR ds:0x44c3d8
  411131:	dec    edi
  411132:	lea    eax,[edi+0x1]
  411135:	cdq    
  411136:	and    edx,0x1f
  411139:	add    eax,edx
  41113b:	sar    eax,0x5
  41113e:	lea    edx,[edi+0x1]
  411141:	and    edx,0x8000001f
  411147:	mov    DWORD PTR [ebp-0x2c],ebx
  41114a:	mov    DWORD PTR [ebp-0x28],eax
  41114d:	jns    0x411154
  41114f:	dec    edx
  411150:	or     edx,0xffffffe0
  411153:	inc    edx
  411154:	lea    esi,[ebp+eax*4-0x10]
  411158:	push   0x1f
  41115a:	xor    eax,eax
  41115c:	pop    ecx
  41115d:	sub    ecx,edx
  41115f:	inc    eax
  411160:	shl    eax,cl
  411162:	mov    DWORD PTR [ebp-0x30],ecx
  411165:	test   DWORD PTR [esi],eax
  411167:	je     0x4111fa
  41116d:	mov    eax,DWORD PTR [ebp-0x28]
  411170:	or     edx,0xffffffff
  411173:	shl    edx,cl
  411175:	not    edx
  411177:	test   DWORD PTR [ebp+eax*4-0x10],edx
  41117b:	jmp    0x411182
  41117d:	cmp    DWORD PTR [ebp+eax*4-0x10],0x0
  411182:	jne    0x41118c
  411184:	inc    eax
  411185:	cmp    eax,0x3
  411188:	jl     0x41117d
  41118a:	jmp    0x4111fa
  41118c:	mov    eax,edi
  41118e:	cdq    
  41118f:	push   0x1f
  411191:	pop    ecx
  411192:	and    edx,ecx
  411194:	add    eax,edx
  411196:	sar    eax,0x5
  411199:	and    edi,0x8000001f
  41119f:	jns    0x4111a6
  4111a1:	dec    edi
  4111a2:	or     edi,0xffffffe0
  4111a5:	inc    edi
  4111a6:	and    DWORD PTR [ebp-0x24],0x0
  4111aa:	sub    ecx,edi
  4111ac:	xor    edx,edx
  4111ae:	inc    edx
  4111af:	shl    edx,cl
  4111b1:	lea    ecx,[ebp+eax*4-0x10]
  4111b5:	mov    edi,DWORD PTR [ecx]
  4111b7:	add    edi,edx
  4111b9:	mov    DWORD PTR [ebp-0x20],edi
  4111bc:	mov    edi,DWORD PTR [ecx]
  4111be:	cmp    DWORD PTR [ebp-0x20],edi
  4111c1:	jb     0x4111e5
  4111c3:	cmp    DWORD PTR [ebp-0x20],edx
  4111c6:	jmp    0x4111e3
  4111c8:	test   ecx,ecx
  4111ca:	je     0x4111f7
  4111cc:	and    DWORD PTR [ebp-0x24],0x0
  4111d0:	lea    ecx,[ebp+eax*4-0x10]
  4111d4:	mov    edx,DWORD PTR [ecx]
  4111d6:	lea    edi,[edx+0x1]
  4111d9:	mov    DWORD PTR [ebp-0x20],edi
  4111dc:	cmp    edi,edx
  4111de:	jb     0x4111e5
  4111e0:	cmp    edi,0x1
  4111e3:	jae    0x4111ec
  4111e5:	mov    DWORD PTR [ebp-0x24],0x1
  4111ec:	dec    eax
  4111ed:	mov    edx,DWORD PTR [ebp-0x20]
  4111f0:	mov    DWORD PTR [ecx],edx
  4111f2:	mov    ecx,DWORD PTR [ebp-0x24]
  4111f5:	jns    0x4111c8
  4111f7:	mov    DWORD PTR [ebp-0x24],ecx
  4111fa:	mov    ecx,DWORD PTR [ebp-0x30]
  4111fd:	or     eax,0xffffffff
  411200:	shl    eax,cl
  411202:	push   0x3
  411204:	pop    ecx
  411205:	and    DWORD PTR [esi],eax
  411207:	mov    eax,DWORD PTR [ebp-0x28]
  41120a:	inc    eax
  41120b:	cmp    eax,ecx
  41120d:	jge    0x411219
  41120f:	lea    edi,[ebp+eax*4-0x10]
  411213:	sub    ecx,eax
  411215:	xor    eax,eax
  411217:	rep stos DWORD PTR es:[edi],eax
  411219:	cmp    DWORD PTR [ebp-0x24],0x0
  41121d:	je     0x411220
  41121f:	inc    ebx
  411220:	mov    eax,ds:0x44c3d4
  411225:	mov    ecx,eax
  411227:	sub    ecx,DWORD PTR ds:0x44c3d8
  41122d:	cmp    ebx,ecx
  41122f:	jge    0x41123e
  411231:	xor    eax,eax
  411233:	lea    edi,[ebp-0x10]
  411236:	stos   DWORD PTR es:[edi],eax
  411237:	stos   DWORD PTR es:[edi],eax
  411238:	stos   DWORD PTR es:[edi],eax
  411239:	jmp    0x411447
  41123e:	cmp    ebx,eax
  411240:	jg     0x411451
  411246:	sub    eax,DWORD PTR [ebp-0x2c]
  411249:	lea    esi,[ebp-0x1c]
  41124c:	mov    ecx,eax
  41124e:	lea    edi,[ebp-0x10]
  411251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411252:	cdq    
  411253:	and    edx,0x1f
  411256:	add    eax,edx
  411258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411259:	mov    edx,ecx
  41125b:	sar    eax,0x5
  41125e:	and    edx,0x8000001f
  411264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411265:	jns    0x41126c
  411267:	dec    edx
  411268:	or     edx,0xffffffe0
  41126b:	inc    edx
  41126c:	and    DWORD PTR [ebp-0x28],0x0
  411270:	and    DWORD PTR [ebp-0x20],0x0
  411274:	or     edi,0xffffffff
  411277:	mov    ecx,edx
  411279:	shl    edi,cl
  41127b:	mov    DWORD PTR [ebp-0x24],0x20
  411282:	sub    DWORD PTR [ebp-0x24],edx
  411285:	not    edi
  411287:	mov    ebx,DWORD PTR [ebp-0x20]
  41128a:	lea    ebx,[ebp+ebx*4-0x10]
  41128e:	mov    esi,DWORD PTR [ebx]
  411290:	mov    ecx,esi
  411292:	and    ecx,edi
  411294:	mov    DWORD PTR [ebp-0x2c],ecx
  411297:	mov    ecx,edx
  411299:	shr    esi,cl
  41129b:	mov    ecx,DWORD PTR [ebp-0x24]
  41129e:	or     esi,DWORD PTR [ebp-0x28]
  4112a1:	mov    DWORD PTR [ebx],esi
  4112a3:	mov    esi,DWORD PTR [ebp-0x2c]
  4112a6:	shl    esi,cl
  4112a8:	inc    DWORD PTR [ebp-0x20]
  4112ab:	cmp    DWORD PTR [ebp-0x20],0x3
  4112af:	mov    DWORD PTR [ebp-0x28],esi
  4112b2:	jl     0x411287
  4112b4:	mov    esi,eax
  4112b6:	push   0x2
  4112b8:	shl    esi,0x2
  4112bb:	lea    ecx,[ebp-0x8]
  4112be:	pop    edx
  4112bf:	sub    ecx,esi
  4112c1:	cmp    edx,eax
  4112c3:	jl     0x4112cd
  4112c5:	mov    esi,DWORD PTR [ecx]
  4112c7:	mov    DWORD PTR [ebp+edx*4-0x10],esi
  4112cb:	jmp    0x4112d2
  4112cd:	and    DWORD PTR [ebp+edx*4-0x10],0x0
  4112d2:	sub    ecx,0x4
  4112d5:	dec    edx
  4112d6:	jns    0x4112c1
  4112d8:	mov    esi,DWORD PTR ds:0x44c3d8
  4112de:	dec    esi
  4112df:	lea    eax,[esi+0x1]
  4112e2:	cdq    
  4112e3:	and    edx,0x1f
  4112e6:	add    eax,edx
  4112e8:	sar    eax,0x5
  4112eb:	lea    edx,[esi+0x1]
  4112ee:	and    edx,0x8000001f
  4112f4:	mov    DWORD PTR [ebp-0x30],eax
  4112f7:	jns    0x4112fe
  4112f9:	dec    edx
  4112fa:	or     edx,0xffffffe0
  4112fd:	inc    edx
  4112fe:	push   0x1f
  411300:	pop    ecx
  411301:	sub    ecx,edx
  411303:	xor    edx,edx
  411305:	inc    edx
  411306:	shl    edx,cl
  411308:	lea    ebx,[ebp+eax*4-0x10]
  41130c:	mov    DWORD PTR [ebp-0x2c],ecx
  41130f:	test   DWORD PTR [ebx],edx
  411311:	je     0x411399
  411317:	or     edx,0xffffffff
  41131a:	shl    edx,cl
  41131c:	not    edx
  41131e:	test   DWORD PTR [ebp+eax*4-0x10],edx
  411322:	jmp    0x411329
  411324:	cmp    DWORD PTR [ebp+eax*4-0x10],0x0
  411329:	jne    0x411333
  41132b:	inc    eax
  41132c:	cmp    eax,0x3
  41132f:	jl     0x411324
  411331:	jmp    0x411399
  411333:	mov    eax,esi
  411335:	cdq    
  411336:	push   0x1f
  411338:	pop    ecx
  411339:	and    edx,ecx
  41133b:	add    eax,edx
  41133d:	sar    eax,0x5
  411340:	and    esi,0x8000001f
  411346:	jns    0x41134d
  411348:	dec    esi
  411349:	or     esi,0xffffffe0
  41134c:	inc    esi
  41134d:	and    DWORD PTR [ebp-0x28],0x0
  411351:	xor    edx,edx
  411353:	sub    ecx,esi
  411355:	inc    edx
  411356:	shl    edx,cl
  411358:	lea    ecx,[ebp+eax*4-0x10]
  41135c:	mov    esi,DWORD PTR [ecx]
  41135e:	lea    edi,[esi+edx*1]
  411361:	cmp    edi,esi
  411363:	jb     0x411369
  411365:	cmp    edi,edx
  411367:	jae    0x411370
  411369:	mov    DWORD PTR [ebp-0x28],0x1
  411370:	mov    DWORD PTR [ecx],edi
  411372:	mov    ecx,DWORD PTR [ebp-0x28]
  411375:	jmp    0x411396
  411377:	test   ecx,ecx
  411379:	je     0x411399
  41137b:	lea    ecx,[ebp+eax*4-0x10]
  41137f:	mov    edx,DWORD PTR [ecx]
  411381:	lea    esi,[edx+0x1]
  411384:	xor    edi,edi
  411386:	cmp    esi,edx
  411388:	jb     0x41138f
  41138a:	cmp    esi,0x1
  41138d:	jae    0x411392
  41138f:	xor    edi,edi
  411391:	inc    edi
  411392:	mov    DWORD PTR [ecx],esi
  411394:	mov    ecx,edi
  411396:	dec    eax
  411397:	jns    0x411377
  411399:	mov    ecx,DWORD PTR [ebp-0x2c]
  41139c:	or     eax,0xffffffff
  41139f:	shl    eax,cl
  4113a1:	and    DWORD PTR [ebx],eax
  4113a3:	mov    eax,DWORD PTR [ebp-0x30]
  4113a6:	inc    eax
  4113a7:	cmp    eax,0x3
  4113aa:	jge    0x4113b9
  4113ac:	push   0x3
  4113ae:	pop    ecx
  4113af:	lea    edi,[ebp+eax*4-0x10]
  4113b3:	sub    ecx,eax
  4113b5:	xor    eax,eax
  4113b7:	rep stos DWORD PTR es:[edi],eax
  4113b9:	mov    ecx,DWORD PTR ds:0x44c3dc
  4113bf:	lea    eax,[ecx+0x1]
  4113c2:	cdq    
  4113c3:	and    edx,0x1f
  4113c6:	add    eax,edx
  4113c8:	lea    edx,[ecx+0x1]
  4113cb:	sar    eax,0x5
  4113ce:	and    edx,0x8000001f
  4113d4:	jns    0x4113db
  4113d6:	dec    edx
  4113d7:	or     edx,0xffffffe0
  4113da:	inc    edx
  4113db:	and    DWORD PTR [ebp-0x28],0x0
  4113df:	and    DWORD PTR [ebp-0x20],0x0
  4113e3:	or     edi,0xffffffff
  4113e6:	mov    ecx,edx
  4113e8:	shl    edi,cl
  4113ea:	mov    DWORD PTR [ebp-0x24],0x20
  4113f1:	sub    DWORD PTR [ebp-0x24],edx
  4113f4:	not    edi
  4113f6:	mov    ebx,DWORD PTR [ebp-0x20]
  4113f9:	lea    ebx,[ebp+ebx*4-0x10]
  4113fd:	mov    esi,DWORD PTR [ebx]
  4113ff:	mov    ecx,esi
  411401:	and    ecx,edi
  411403:	mov    DWORD PTR [ebp-0x2c],ecx
  411406:	mov    ecx,edx
  411408:	shr    esi,cl
  41140a:	mov    ecx,DWORD PTR [ebp-0x24]
  41140d:	or     esi,DWORD PTR [ebp-0x28]
  411410:	mov    DWORD PTR [ebx],esi
  411412:	mov    esi,DWORD PTR [ebp-0x2c]
  411415:	shl    esi,cl
  411417:	inc    DWORD PTR [ebp-0x20]
  41141a:	cmp    DWORD PTR [ebp-0x20],0x3
  41141e:	mov    DWORD PTR [ebp-0x28],esi
  411421:	jl     0x4113f6
  411423:	mov    esi,eax
  411425:	push   0x2
  411427:	shl    esi,0x2
  41142a:	lea    ecx,[ebp-0x8]
  41142d:	pop    edx
  41142e:	sub    ecx,esi
  411430:	cmp    edx,eax
  411432:	jl     0x41143c
  411434:	mov    esi,DWORD PTR [ecx]
  411436:	mov    DWORD PTR [ebp+edx*4-0x10],esi
  41143a:	jmp    0x411441
  41143c:	and    DWORD PTR [ebp+edx*4-0x10],0x0
  411441:	sub    ecx,0x4
  411444:	dec    edx
  411445:	jns    0x411430
  411447:	push   0x2
  411449:	xor    ebx,ebx
  41144b:	pop    eax
  41144c:	jmp    0x4115a4
  411451:	mov    ecx,DWORD PTR ds:0x44c3dc
  411457:	cmp    ebx,DWORD PTR ds:0x44c3d0
  41145d:	jl     0x41150c
  411463:	xor    eax,eax
  411465:	lea    edi,[ebp-0x10]
  411468:	stos   DWORD PTR es:[edi],eax
  411469:	stos   DWORD PTR es:[edi],eax
  41146a:	stos   DWORD PTR es:[edi],eax
  41146b:	or     DWORD PTR [ebp-0x10],0x80000000
  411472:	mov    eax,ecx
  411474:	cdq    
  411475:	and    edx,0x1f
  411478:	add    eax,edx
  41147a:	mov    edx,ecx
  41147c:	sar    eax,0x5
  41147f:	and    edx,0x8000001f
  411485:	jns    0x41148c
  411487:	dec    edx
  411488:	or     edx,0xffffffe0
  41148b:	inc    edx
  41148c:	and    DWORD PTR [ebp-0x28],0x0
  411490:	and    DWORD PTR [ebp-0x20],0x0
  411494:	or     edi,0xffffffff
  411497:	mov    ecx,edx
  411499:	shl    edi,cl
  41149b:	mov    DWORD PTR [ebp-0x24],0x20
  4114a2:	sub    DWORD PTR [ebp-0x24],edx
  4114a5:	not    edi
  4114a7:	mov    ebx,DWORD PTR [ebp-0x20]
  4114aa:	lea    ebx,[ebp+ebx*4-0x10]
  4114ae:	mov    esi,DWORD PTR [ebx]
  4114b0:	mov    ecx,esi
  4114b2:	and    ecx,edi
  4114b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4114b7:	mov    ecx,edx
  4114b9:	shr    esi,cl
  4114bb:	mov    ecx,DWORD PTR [ebp-0x24]
  4114be:	or     esi,DWORD PTR [ebp-0x28]
  4114c1:	mov    DWORD PTR [ebx],esi
  4114c3:	mov    esi,DWORD PTR [ebp-0x2c]
  4114c6:	shl    esi,cl
  4114c8:	inc    DWORD PTR [ebp-0x20]
  4114cb:	cmp    DWORD PTR [ebp-0x20],0x3
  4114cf:	mov    DWORD PTR [ebp-0x28],esi
  4114d2:	jl     0x4114a7
  4114d4:	mov    esi,eax
  4114d6:	push   0x2
  4114d8:	shl    esi,0x2
  4114db:	lea    ecx,[ebp-0x8]
  4114de:	pop    edx
  4114df:	sub    ecx,esi
  4114e1:	cmp    edx,eax
  4114e3:	jl     0x4114ed
  4114e5:	mov    esi,DWORD PTR [ecx]
  4114e7:	mov    DWORD PTR [ebp+edx*4-0x10],esi
  4114eb:	jmp    0x4114f2
  4114ed:	and    DWORD PTR [ebp+edx*4-0x10],0x0
  4114f2:	sub    ecx,0x4
  4114f5:	dec    edx
  4114f6:	jns    0x4114e1
  4114f8:	mov    ebx,DWORD PTR ds:0x44c3e4
  4114fe:	add    ebx,DWORD PTR ds:0x44c3d0
  411504:	xor    eax,eax
  411506:	inc    eax
  411507:	jmp    0x4115a4
  41150c:	add    ebx,DWORD PTR ds:0x44c3e4
  411512:	and    DWORD PTR [ebp-0x10],0x7fffffff
  411519:	mov    eax,ecx
  41151b:	cdq    
  41151c:	and    edx,0x1f
  41151f:	add    eax,edx
  411521:	mov    edx,ecx
  411523:	sar    eax,0x5
  411526:	and    edx,0x8000001f
  41152c:	jns    0x411533
  41152e:	dec    edx
  41152f:	or     edx,0xffffffe0
  411532:	inc    edx
  411533:	and    DWORD PTR [ebp-0x28],0x0
  411537:	and    DWORD PTR [ebp-0x20],0x0
  41153b:	or     esi,0xffffffff
  41153e:	mov    ecx,edx
  411540:	shl    esi,cl
  411542:	mov    DWORD PTR [ebp-0x24],0x20
  411549:	sub    DWORD PTR [ebp-0x24],edx
  41154c:	not    esi
  41154e:	mov    ecx,DWORD PTR [ebp-0x20]
  411551:	mov    edi,DWORD PTR [ebp+ecx*4-0x10]
  411555:	mov    ecx,edi
  411557:	and    ecx,esi
  411559:	mov    DWORD PTR [ebp-0x2c],ecx
  41155c:	mov    ecx,edx
  41155e:	shr    edi,cl
  411560:	mov    ecx,DWORD PTR [ebp-0x20]
  411563:	or     edi,DWORD PTR [ebp-0x28]
  411566:	mov    DWORD PTR [ebp+ecx*4-0x10],edi
  41156a:	mov    edi,DWORD PTR [ebp-0x2c]
  41156d:	mov    ecx,DWORD PTR [ebp-0x24]
  411570:	shl    edi,cl
  411572:	inc    DWORD PTR [ebp-0x20]
  411575:	cmp    DWORD PTR [ebp-0x20],0x3
  411579:	mov    DWORD PTR [ebp-0x28],edi
  41157c:	jl     0x41154e
  41157e:	mov    esi,eax
  411580:	push   0x2
  411582:	shl    esi,0x2
  411585:	lea    ecx,[ebp-0x8]
  411588:	pop    edx
  411589:	sub    ecx,esi
  41158b:	cmp    edx,eax
  41158d:	jl     0x411597
  41158f:	mov    esi,DWORD PTR [ecx]
  411591:	mov    DWORD PTR [ebp+edx*4-0x10],esi
  411595:	jmp    0x41159c
  411597:	and    DWORD PTR [ebp+edx*4-0x10],0x0
  41159c:	sub    ecx,0x4
  41159f:	dec    edx
  4115a0:	jns    0x41158b
  4115a2:	xor    eax,eax
  4115a4:	pop    esi
  4115a5:	push   0x1f
  4115a7:	pop    ecx
  4115a8:	sub    ecx,DWORD PTR ds:0x44c3dc
  4115ae:	shl    ebx,cl
  4115b0:	mov    ecx,DWORD PTR [ebp-0x38]
  4115b3:	neg    ecx
  4115b5:	sbb    ecx,ecx
  4115b7:	and    ecx,0x80000000
  4115bd:	or     ebx,ecx
  4115bf:	mov    ecx,DWORD PTR ds:0x44c3e0
  4115c5:	or     ebx,DWORD PTR [ebp-0x10]
  4115c8:	cmp    ecx,0x40
  4115cb:	jne    0x4115da
  4115cd:	mov    ecx,DWORD PTR [ebp-0x34]
  4115d0:	mov    edx,DWORD PTR [ebp-0xc]
  4115d3:	mov    DWORD PTR [ecx+0x4],ebx
  4115d6:	mov    DWORD PTR [ecx],edx
  4115d8:	jmp    0x4115e4
  4115da:	cmp    ecx,0x20
  4115dd:	jne    0x4115e4
  4115df:	mov    ecx,DWORD PTR [ebp-0x34]
  4115e2:	mov    DWORD PTR [ecx],ebx
  4115e4:	mov    ecx,DWORD PTR [ebp-0x4]
  4115e7:	pop    edi
  4115e8:	xor    ecx,ebp
  4115ea:	pop    ebx
  4115eb:	call   0x403edd
  4115f0:	leave  
  4115f1:	ret    
  4115f2:	mov    edi,edi
  4115f4:	push   ebp
  4115f5:	mov    ebp,esp
  4115f7:	sub    esp,0x38
  4115fa:	mov    eax,ds:0x44b470
  4115ff:	xor    eax,ebp
  411601:	mov    DWORD PTR [ebp-0x4],eax
  411604:	mov    eax,DWORD PTR [ebp+0x8]
  411607:	mov    ecx,DWORD PTR [ebp+0xc]
  41160a:	mov    DWORD PTR [ebp-0x34],ecx
  41160d:	movzx  ecx,WORD PTR [eax+0xa]
  411611:	push   ebx
  411612:	mov    ebx,ecx
  411614:	and    ecx,0x8000
  41161a:	mov    DWORD PTR [ebp-0x38],ecx
  41161d:	mov    ecx,DWORD PTR [eax+0x6]
  411620:	mov    DWORD PTR [ebp-0x10],ecx
  411623:	mov    ecx,DWORD PTR [eax+0x2]
  411626:	movzx  eax,WORD PTR [eax]
  411629:	and    ebx,0x7fff
  41162f:	sub    ebx,0x3fff
  411635:	shl    eax,0x10
  411638:	push   edi
  411639:	mov    DWORD PTR [ebp-0xc],ecx
  41163c:	mov    DWORD PTR [ebp-0x8],eax
  41163f:	cmp    ebx,0xffffc001
  411645:	jne    0x41166e
  411647:	xor    ebx,ebx
  411649:	xor    eax,eax
  41164b:	cmp    DWORD PTR [ebp+eax*4-0x10],ebx
  41164f:	jne    0x41165e
  411651:	inc    eax
  411652:	cmp    eax,0x3
  411655:	jl     0x41164b
  411657:	xor    eax,eax
  411659:	jmp    0x411af6
  41165e:	xor    eax,eax
  411660:	lea    edi,[ebp-0x10]
  411663:	stos   DWORD PTR es:[edi],eax
  411664:	stos   DWORD PTR es:[edi],eax
  411665:	push   0x2
  411667:	stos   DWORD PTR es:[edi],eax
  411668:	pop    eax
  411669:	jmp    0x411af6
  41166e:	and    DWORD PTR [ebp-0x24],0x0
  411672:	push   esi
  411673:	lea    esi,[ebp-0x10]
  411676:	lea    edi,[ebp-0x1c]
  411679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41167a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41167b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41167c:	mov    edi,DWORD PTR ds:0x44c3f0
  411682:	dec    edi
  411683:	lea    eax,[edi+0x1]
  411686:	cdq    
  411687:	and    edx,0x1f
  41168a:	add    eax,edx
  41168c:	sar    eax,0x5
  41168f:	lea    edx,[edi+0x1]
  411692:	and    edx,0x8000001f
  411698:	mov    DWORD PTR [ebp-0x2c],ebx
  41169b:	mov    DWORD PTR [ebp-0x28],eax
  41169e:	jns    0x4116a5
  4116a0:	dec    edx
  4116a1:	or     edx,0xffffffe0
  4116a4:	inc    edx
  4116a5:	lea    esi,[ebp+eax*4-0x10]
  4116a9:	push   0x1f
  4116ab:	xor    eax,eax
  4116ad:	pop    ecx
  4116ae:	sub    ecx,edx
  4116b0:	inc    eax
  4116b1:	shl    eax,cl
  4116b3:	mov    DWORD PTR [ebp-0x30],ecx
  4116b6:	test   DWORD PTR [esi],eax
  4116b8:	je     0x41174b
  4116be:	mov    eax,DWORD PTR [ebp-0x28]
  4116c1:	or     edx,0xffffffff
  4116c4:	shl    edx,cl
  4116c6:	not    edx
  4116c8:	test   DWORD PTR [ebp+eax*4-0x10],edx
  4116cc:	jmp    0x4116d3
  4116ce:	cmp    DWORD PTR [ebp+eax*4-0x10],0x0
  4116d3:	jne    0x4116dd
  4116d5:	inc    eax
  4116d6:	cmp    eax,0x3
  4116d9:	jl     0x4116ce
  4116db:	jmp    0x41174b
  4116dd:	mov    eax,edi
  4116df:	cdq    
  4116e0:	push   0x1f
  4116e2:	pop    ecx
  4116e3:	and    edx,ecx
  4116e5:	add    eax,edx
  4116e7:	sar    eax,0x5
  4116ea:	and    edi,0x8000001f
  4116f0:	jns    0x4116f7
  4116f2:	dec    edi
  4116f3:	or     edi,0xffffffe0
  4116f6:	inc    edi
  4116f7:	and    DWORD PTR [ebp-0x24],0x0
  4116fb:	sub    ecx,edi
  4116fd:	xor    edx,edx
  4116ff:	inc    edx
  411700:	shl    edx,cl
  411702:	lea    ecx,[ebp+eax*4-0x10]
  411706:	mov    edi,DWORD PTR [ecx]
  411708:	add    edi,edx
  41170a:	mov    DWORD PTR [ebp-0x20],edi
  41170d:	mov    edi,DWORD PTR [ecx]
  41170f:	cmp    DWORD PTR [ebp-0x20],edi
  411712:	jb     0x411736
  411714:	cmp    DWORD PTR [ebp-0x20],edx
  411717:	jmp    0x411734
  411719:	test   ecx,ecx
  41171b:	je     0x411748
  41171d:	and    DWORD PTR [ebp-0x24],0x0
  411721:	lea    ecx,[ebp+eax*4-0x10]
  411725:	mov    edx,DWORD PTR [ecx]
  411727:	lea    edi,[edx+0x1]
  41172a:	mov    DWORD PTR [ebp-0x20],edi
  41172d:	cmp    edi,edx
  41172f:	jb     0x411736
  411731:	cmp    edi,0x1
  411734:	jae    0x41173d
  411736:	mov    DWORD PTR [ebp-0x24],0x1
  41173d:	dec    eax
  41173e:	mov    edx,DWORD PTR [ebp-0x20]
  411741:	mov    DWORD PTR [ecx],edx
  411743:	mov    ecx,DWORD PTR [ebp-0x24]
  411746:	jns    0x411719
  411748:	mov    DWORD PTR [ebp-0x24],ecx
  41174b:	mov    ecx,DWORD PTR [ebp-0x30]
  41174e:	or     eax,0xffffffff
  411751:	shl    eax,cl
  411753:	push   0x3
  411755:	pop    ecx
  411756:	and    DWORD PTR [esi],eax
  411758:	mov    eax,DWORD PTR [ebp-0x28]
  41175b:	inc    eax
  41175c:	cmp    eax,ecx
  41175e:	jge    0x41176a
  411760:	lea    edi,[ebp+eax*4-0x10]
  411764:	sub    ecx,eax
  411766:	xor    eax,eax
  411768:	rep stos DWORD PTR es:[edi],eax
  41176a:	cmp    DWORD PTR [ebp-0x24],0x0
  41176e:	je     0x411771
  411770:	inc    ebx
  411771:	mov    eax,ds:0x44c3ec
  411776:	mov    ecx,eax
  411778:	sub    ecx,DWORD PTR ds:0x44c3f0
  41177e:	cmp    ebx,ecx
  411780:	jge    0x41178f
  411782:	xor    eax,eax
  411784:	lea    edi,[ebp-0x10]
  411787:	stos   DWORD PTR es:[edi],eax
  411788:	stos   DWORD PTR es:[edi],eax
  411789:	stos   DWORD PTR es:[edi],eax
  41178a:	jmp    0x411998
  41178f:	cmp    ebx,eax
  411791:	jg     0x4119a2
  411797:	sub    eax,DWORD PTR [ebp-0x2c]
  41179a:	lea    esi,[ebp-0x1c]
  41179d:	mov    ecx,eax
  41179f:	lea    edi,[ebp-0x10]
  4117a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117a3:	cdq    
  4117a4:	and    edx,0x1f
  4117a7:	add    eax,edx
  4117a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117aa:	mov    edx,ecx
  4117ac:	sar    eax,0x5
  4117af:	and    edx,0x8000001f
  4117b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117b6:	jns    0x4117bd
  4117b8:	dec    edx
  4117b9:	or     edx,0xffffffe0
  4117bc:	inc    edx
  4117bd:	and    DWORD PTR [ebp-0x28],0x0
  4117c1:	and    DWORD PTR [ebp-0x20],0x0
  4117c5:	or     edi,0xffffffff
  4117c8:	mov    ecx,edx
  4117ca:	shl    edi,cl
  4117cc:	mov    DWORD PTR [ebp-0x24],0x20
  4117d3:	sub    DWORD PTR [ebp-0x24],edx
  4117d6:	not    edi
  4117d8:	mov    ebx,DWORD PTR [ebp-0x20]
  4117db:	lea    ebx,[ebp+ebx*4-0x10]
  4117df:	mov    esi,DWORD PTR [ebx]
  4117e1:	mov    ecx,esi
  4117e3:	and    ecx,edi
  4117e5:	mov    DWORD PTR [ebp-0x2c],ecx
  4117e8:	mov    ecx,edx
  4117ea:	shr    esi,cl
  4117ec:	mov    ecx,DWORD PTR [ebp-0x24]
  4117ef:	or     esi,DWORD PTR [ebp-0x28]
  4117f2:	mov    DWORD PTR [ebx],esi
  4117f4:	mov    esi,DWORD PTR [ebp-0x2c]
  4117f7:	shl    esi,cl
  4117f9:	inc    DWORD PTR [ebp-0x20]
  4117fc:	cmp    DWORD PTR [ebp-0x20],0x3
  411800:	mov    DWORD PTR [ebp-0x28],esi
  411803:	jl     0x4117d8
  411805:	mov    esi,eax
  411807:	push   0x2
  411809:	shl    esi,0x2
  41180c:	lea    ecx,[ebp-0x8]
  41180f:	pop    edx
  411810:	sub    ecx,esi
  411812:	cmp    edx,eax
  411814:	jl     0x41181e
  411816:	mov    esi,DWORD PTR [ecx]
  411818:	mov    DWORD PTR [ebp+edx*4-0x10],esi
  41181c:	jmp    0x411823
  41181e:	and    DWORD PTR [ebp+edx*4-0x10],0x0
  411823:	sub    ecx,0x4
  411826:	dec    edx
  411827:	jns    0x411812
  411829:	mov    esi,DWORD PTR ds:0x44c3f0
  41182f:	dec    esi
  411830:	lea    eax,[esi+0x1]
  411833:	cdq    
  411834:	and    edx,0x1f
  411837:	add    eax,edx
  411839:	sar    eax,0x5
  41183c:	lea    edx,[esi+0x1]
  41183f:	and    edx,0x8000001f
  411845:	mov    DWORD PTR [ebp-0x30],eax
  411848:	jns    0x41184f
  41184a:	dec    edx
  41184b:	or     edx,0xffffffe0
  41184e:	inc    edx
  41184f:	push   0x1f
  411851:	pop    ecx
  411852:	sub    ecx,edx
  411854:	xor    edx,edx
  411856:	inc    edx
  411857:	shl    edx,cl
  411859:	lea    ebx,[ebp+eax*4-0x10]
  41185d:	mov    DWORD PTR [ebp-0x2c],ecx
  411860:	test   DWORD PTR [ebx],edx
  411862:	je     0x4118ea
  411868:	or     edx,0xffffffff
  41186b:	shl    edx,cl
  41186d:	not    edx
  41186f:	test   DWORD PTR [ebp+eax*4-0x10],edx
  411873:	jmp    0x41187a
  411875:	cmp    DWORD PTR [ebp+eax*4-0x10],0x0
  41187a:	jne    0x411884
  41187c:	inc    eax
  41187d:	cmp    eax,0x3
  411880:	jl     0x411875
  411882:	jmp    0x4118ea
  411884:	mov    eax,esi
  411886:	cdq    
  411887:	push   0x1f
  411889:	pop    ecx
  41188a:	and    edx,ecx
  41188c:	add    eax,edx
  41188e:	sar    eax,0x5
  411891:	and    esi,0x8000001f
  411897:	jns    0x41189e
  411899:	dec    esi
  41189a:	or     esi,0xffffffe0
  41189d:	inc    esi
  41189e:	and    DWORD PTR [ebp-0x28],0x0
  4118a2:	xor    edx,edx
  4118a4:	sub    ecx,esi
  4118a6:	inc    edx
  4118a7:	shl    edx,cl
  4118a9:	lea    ecx,[ebp+eax*4-0x10]
  4118ad:	mov    esi,DWORD PTR [ecx]
  4118af:	lea    edi,[esi+edx*1]
  4118b2:	cmp    edi,esi
  4118b4:	jb     0x4118ba
  4118b6:	cmp    edi,edx
  4118b8:	jae    0x4118c1
  4118ba:	mov    DWORD PTR [ebp-0x28],0x1
  4118c1:	mov    DWORD PTR [ecx],edi
  4118c3:	mov    ecx,DWORD PTR [ebp-0x28]
  4118c6:	jmp    0x4118e7
  4118c8:	test   ecx,ecx
  4118ca:	je     0x4118ea
  4118cc:	lea    ecx,[ebp+eax*4-0x10]
  4118d0:	mov    edx,DWORD PTR [ecx]
  4118d2:	lea    esi,[edx+0x1]
  4118d5:	xor    edi,edi
  4118d7:	cmp    esi,edx
  4118d9:	jb     0x4118e0
  4118db:	cmp    esi,0x1
  4118de:	jae    0x4118e3
  4118e0:	xor    edi,edi
  4118e2:	inc    edi
  4118e3:	mov    DWORD PTR [ecx],esi
  4118e5:	mov    ecx,edi
  4118e7:	dec    eax
  4118e8:	jns    0x4118c8
  4118ea:	mov    ecx,DWORD PTR [ebp-0x2c]
  4118ed:	or     eax,0xffffffff
  4118f0:	shl    eax,cl
  4118f2:	and    DWORD PTR [ebx],eax
  4118f4:	mov    eax,DWORD PTR [ebp-0x30]
  4118f7:	inc    eax
  4118f8:	cmp    eax,0x3
  4118fb:	jge    0x41190a
  4118fd:	push   0x3
  4118ff:	pop    ecx
  411900:	lea    edi,[ebp+eax*4-0x10]
  411904:	sub    ecx,eax
  411906:	xor    eax,eax
  411908:	rep stos DWORD PTR es:[edi],eax
  41190a:	mov    ecx,DWORD PTR ds:0x44c3f4
  411910:	lea    eax,[ecx+0x1]
  411913:	cdq    
  411914:	and    edx,0x1f
  411917:	add    eax,edx
  411919:	lea    edx,[ecx+0x1]
  41191c:	sar    eax,0x5
  41191f:	and    edx,0x8000001f
  411925:	jns    0x41192c
  411927:	dec    edx
  411928:	or     edx,0xffffffe0
  41192b:	inc    edx
  41192c:	and    DWORD PTR [ebp-0x28],0x0
  411930:	and    DWORD PTR [ebp-0x20],0x0
  411934:	or     edi,0xffffffff
  411937:	mov    ecx,edx
  411939:	shl    edi,cl
  41193b:	mov    DWORD PTR [ebp-0x24],0x20
  411942:	sub    DWORD PTR [ebp-0x24],edx
  411945:	not    edi
  411947:	mov    ebx,DWORD PTR [ebp-0x20]
  41194a:	lea    ebx,[ebp+ebx*4-0x10]
  41194e:	mov    esi,DWORD PTR [ebx]
  411950:	mov    ecx,esi
  411952:	and    ecx,edi
  411954:	mov    DWORD PTR [ebp-0x2c],ecx
  411957:	mov    ecx,edx
  411959:	shr    esi,cl
  41195b:	mov    ecx,DWORD PTR [ebp-0x24]
  41195e:	or     esi,DWORD PTR [ebp-0x28]
  411961:	mov    DWORD PTR [ebx],esi
  411963:	mov    esi,DWORD PTR [ebp-0x2c]
  411966:	shl    esi,cl
  411968:	inc    DWORD PTR [ebp-0x20]
  41196b:	cmp    DWORD PTR [ebp-0x20],0x3
  41196f:	mov    DWORD PTR [ebp-0x28],esi
  411972:	jl     0x411947
  411974:	mov    esi,eax
  411976:	push   0x2
  411978:	shl    esi,0x2
  41197b:	lea    ecx,[ebp-0x8]
  41197e:	pop    edx
  41197f:	sub    ecx,esi
  411981:	cmp    edx,eax
  411983:	jl     0x41198d
  411985:	mov    esi,DWORD PTR [ecx]
  411987:	mov    DWORD PTR [ebp+edx*4-0x10],esi
  41198b:	jmp    0x411992
  41198d:	and    DWORD PTR [ebp+edx*4-0x10],0x0
  411992:	sub    ecx,0x4
  411995:	dec    edx
  411996:	jns    0x411981
  411998:	push   0x2
  41199a:	xor    ebx,ebx
  41199c:	pop    eax
  41199d:	jmp    0x411af5
  4119a2:	mov    ecx,DWORD PTR ds:0x44c3f4
  4119a8:	cmp    ebx,DWORD PTR ds:0x44c3e8
  4119ae:	jl     0x411a5d
  4119b4:	xor    eax,eax
  4119b6:	lea    edi,[ebp-0x10]
  4119b9:	stos   DWORD PTR es:[edi],eax
  4119ba:	stos   DWORD PTR es:[edi],eax
  4119bb:	stos   DWORD PTR es:[edi],eax
  4119bc:	or     DWORD PTR [ebp-0x10],0x80000000
  4119c3:	mov    eax,ecx
  4119c5:	cdq    
  4119c6:	and    edx,0x1f
  4119c9:	add    eax,edx
  4119cb:	mov    edx,ecx
  4119cd:	sar    eax,0x5
  4119d0:	and    edx,0x8000001f
  4119d6:	jns    0x4119dd
  4119d8:	dec    edx
  4119d9:	or     edx,0xffffffe0
  4119dc:	inc    edx
  4119dd:	and    DWORD PTR [ebp-0x28],0x0
  4119e1:	and    DWORD PTR [ebp-0x20],0x0
  4119e5:	or     edi,0xffffffff
  4119e8:	mov    ecx,edx
  4119ea:	shl    edi,cl
  4119ec:	mov    DWORD PTR [ebp-0x24],0x20
  4119f3:	sub    DWORD PTR [ebp-0x24],edx
  4119f6:	not    edi
  4119f8:	mov    ebx,DWORD PTR [ebp-0x20]
  4119fb:	lea    ebx,[ebp+ebx*4-0x10]
  4119ff:	mov    esi,DWORD PTR [ebx]
  411a01:	mov    ecx,esi
  411a03:	and    ecx,edi
  411a05:	mov    DWORD PTR [ebp-0x2c],ecx
  411a08:	mov    ecx,edx
  411a0a:	shr    esi,cl
  411a0c:	mov    ecx,DWORD PTR [ebp-0x24]
  411a0f:	or     esi,DWORD PTR [ebp-0x28]
  411a12:	mov    DWORD PTR [ebx],esi
  411a14:	mov    esi,DWORD PTR [ebp-0x2c]
  411a17:	shl    esi,cl
  411a19:	inc    DWORD PTR [ebp-0x20]
  411a1c:	cmp    DWORD PTR [ebp-0x20],0x3
  411a20:	mov    DWORD PTR [ebp-0x28],esi
  411a23:	jl     0x4119f8
  411a25:	mov    esi,eax
  411a27:	push   0x2
  411a29:	shl    esi,0x2
  411a2c:	lea    ecx,[ebp-0x8]
  411a2f:	pop    edx
  411a30:	sub    ecx,esi
  411a32:	cmp    edx,eax
  411a34:	jl     0x411a3e
  411a36:	mov    esi,DWORD PTR [ecx]
  411a38:	mov    DWORD PTR [ebp+edx*4-0x10],esi
  411a3c:	jmp    0x411a43
  411a3e:	and    DWORD PTR [ebp+edx*4-0x10],0x0
  411a43:	sub    ecx,0x4
  411a46:	dec    edx
  411a47:	jns    0x411a32
  411a49:	mov    ebx,DWORD PTR ds:0x44c3fc
  411a4f:	add    ebx,DWORD PTR ds:0x44c3e8
  411a55:	xor    eax,eax
  411a57:	inc    eax
  411a58:	jmp    0x411af5
  411a5d:	add    ebx,DWORD PTR ds:0x44c3fc
  411a63:	and    DWORD PTR [ebp-0x10],0x7fffffff
  411a6a:	mov    eax,ecx
  411a6c:	cdq    
  411a6d:	and    edx,0x1f
  411a70:	add    eax,edx
  411a72:	mov    edx,ecx
  411a74:	sar    eax,0x5
  411a77:	and    edx,0x8000001f
  411a7d:	jns    0x411a84
  411a7f:	dec    edx
  411a80:	or     edx,0xffffffe0
  411a83:	inc    edx
  411a84:	and    DWORD PTR [ebp-0x28],0x0
  411a88:	and    DWORD PTR [ebp-0x20],0x0
  411a8c:	or     esi,0xffffffff
  411a8f:	mov    ecx,edx
  411a91:	shl    esi,cl
  411a93:	mov    DWORD PTR [ebp-0x24],0x20
  411a9a:	sub    DWORD PTR [ebp-0x24],edx
  411a9d:	not    esi
  411a9f:	mov    ecx,DWORD PTR [ebp-0x20]
  411aa2:	mov    edi,DWORD PTR [ebp+ecx*4-0x10]
  411aa6:	mov    ecx,edi
  411aa8:	and    ecx,esi
  411aaa:	mov    DWORD PTR [ebp-0x2c],ecx
  411aad:	mov    ecx,edx
  411aaf:	shr    edi,cl
  411ab1:	mov    ecx,DWORD PTR [ebp-0x20]
  411ab4:	or     edi,DWORD PTR [ebp-0x28]
  411ab7:	mov    DWORD PTR [ebp+ecx*4-0x10],edi
  411abb:	mov    edi,DWORD PTR [ebp-0x2c]
  411abe:	mov    ecx,DWORD PTR [ebp-0x24]
  411ac1:	shl    edi,cl
  411ac3:	inc    DWORD PTR [ebp-0x20]
  411ac6:	cmp    DWORD PTR [ebp-0x20],0x3
  411aca:	mov    DWORD PTR [ebp-0x28],edi
  411acd:	jl     0x411a9f
  411acf:	mov    esi,eax
  411ad1:	push   0x2
  411ad3:	shl    esi,0x2
  411ad6:	lea    ecx,[ebp-0x8]
  411ad9:	pop    edx
  411ada:	sub    ecx,esi
  411adc:	cmp    edx,eax
  411ade:	jl     0x411ae8
  411ae0:	mov    esi,DWORD PTR [ecx]
  411ae2:	mov    DWORD PTR [ebp+edx*4-0x10],esi
  411ae6:	jmp    0x411aed
  411ae8:	and    DWORD PTR [ebp+edx*4-0x10],0x0
  411aed:	sub    ecx,0x4
  411af0:	dec    edx
  411af1:	jns    0x411adc
  411af3:	xor    eax,eax
  411af5:	pop    esi
  411af6:	push   0x1f
  411af8:	pop    ecx
  411af9:	sub    ecx,DWORD PTR ds:0x44c3f4
  411aff:	shl    ebx,cl
  411b01:	mov    ecx,DWORD PTR [ebp-0x38]
  411b04:	neg    ecx
  411b06:	sbb    ecx,ecx
  411b08:	and    ecx,0x80000000
  411b0e:	or     ebx,ecx
  411b10:	mov    ecx,DWORD PTR ds:0x44c3f8
  411b16:	or     ebx,DWORD PTR [ebp-0x10]
  411b19:	cmp    ecx,0x40
  411b1c:	jne    0x411b2b
  411b1e:	mov    ecx,DWORD PTR [ebp-0x34]
  411b21:	mov    edx,DWORD PTR [ebp-0xc]
  411b24:	mov    DWORD PTR [ecx+0x4],ebx
  411b27:	mov    DWORD PTR [ecx],edx
  411b29:	jmp    0x411b35
  411b2b:	cmp    ecx,0x20
  411b2e:	jne    0x411b35
  411b30:	mov    ecx,DWORD PTR [ebp-0x34]
  411b33:	mov    DWORD PTR [ecx],ebx
  411b35:	mov    ecx,DWORD PTR [ebp-0x4]
  411b38:	pop    edi
  411b39:	xor    ecx,ebp
  411b3b:	pop    ebx
  411b3c:	call   0x403edd
  411b41:	leave  
  411b42:	ret    
  411b43:	mov    edi,edi
  411b45:	push   ebp
  411b46:	mov    ebp,esp
  411b48:	sub    esp,0x7c
  411b4b:	mov    eax,ds:0x44b470
  411b50:	xor    eax,ebp
  411b52:	mov    DWORD PTR [ebp-0x4],eax
  411b55:	mov    eax,DWORD PTR [ebp+0x8]
  411b58:	xor    ecx,ecx
  411b5a:	push   esi
  411b5b:	xor    esi,esi
  411b5d:	mov    DWORD PTR [ebp-0x78],eax
  411b60:	mov    eax,DWORD PTR [ebp+0xc]
  411b63:	inc    esi
  411b64:	push   edi
  411b65:	mov    DWORD PTR [ebp-0x70],eax
  411b68:	lea    edi,[ebp-0x20]
  411b6b:	mov    DWORD PTR [ebp-0x74],ecx
  411b6e:	mov    DWORD PTR [ebp-0x68],esi
  411b71:	mov    DWORD PTR [ebp-0x4c],ecx
  411b74:	mov    DWORD PTR [ebp-0x58],ecx
  411b77:	mov    DWORD PTR [ebp-0x5c],ecx
  411b7a:	mov    DWORD PTR [ebp-0x60],ecx
  411b7d:	mov    DWORD PTR [ebp-0x64],ecx
  411b80:	mov    DWORD PTR [ebp-0x50],ecx
  411b83:	mov    DWORD PTR [ebp-0x6c],ecx
  411b86:	cmp    DWORD PTR [ebp+0x24],ecx
  411b89:	jne    0x411ba2
  411b8b:	call   0x40769b
  411b90:	mov    DWORD PTR [eax],0x16
  411b96:	call   0x407649
  411b9b:	xor    eax,eax
  411b9d:	jmp    0x4121de
  411ba2:	mov    edx,DWORD PTR [ebp+0x10]
  411ba5:	mov    DWORD PTR [ebp-0x54],edx
  411ba8:	mov    al,BYTE PTR [edx]
  411baa:	cmp    al,0x20
  411bac:	je     0x411bba
  411bae:	cmp    al,0x9
  411bb0:	je     0x411bba
  411bb2:	cmp    al,0xa
  411bb4:	je     0x411bba
  411bb6:	cmp    al,0xd
  411bb8:	jne    0x411bbd
  411bba:	inc    edx
  411bbb:	jmp    0x411ba8
  411bbd:	push   ebx
  411bbe:	mov    bl,0x30
  411bc0:	mov    al,BYTE PTR [edx]
  411bc2:	inc    edx
  411bc3:	cmp    ecx,0xb
  411bc6:	ja     0x411de8
  411bcc:	jmp    DWORD PTR [ecx*4+0x4121ef]
  411bd3:	lea    ecx,[eax-0x31]
  411bd6:	cmp    cl,0x8
  411bd9:	ja     0x411be1
  411bdb:	push   0x3
  411bdd:	pop    ecx
  411bde:	dec    edx
  411bdf:	jmp    0x411bc0
  411be1:	mov    ecx,DWORD PTR [ebp+0x24]
  411be4:	mov    ecx,DWORD PTR [ecx]
  411be6:	mov    ecx,DWORD PTR [ecx+0xbc]
  411bec:	mov    ecx,DWORD PTR [ecx]
  411bee:	cmp    al,BYTE PTR [ecx]
  411bf0:	jne    0x411bf7
  411bf2:	push   0x5
  411bf4:	pop    ecx
  411bf5:	jmp    0x411bc0
  411bf7:	movsx  eax,al
  411bfa:	sub    eax,0x2b
  411bfd:	je     0x411c1c
  411bff:	dec    eax
  411c00:	dec    eax
  411c01:	je     0x411c10
  411c03:	sub    eax,0x3
  411c06:	jne    0x411d88
  411c0c:	mov    ecx,esi
  411c0e:	jmp    0x411bc0
  411c10:	push   0x2
  411c12:	pop    ecx
  411c13:	mov    DWORD PTR [ebp-0x74],0x8000
  411c1a:	jmp    0x411bc0
  411c1c:	and    DWORD PTR [ebp-0x74],0x0
  411c20:	push   0x2
  411c22:	pop    ecx
  411c23:	jmp    0x411bc0
  411c25:	lea    ecx,[eax-0x31]
  411c28:	mov    DWORD PTR [ebp-0x58],esi
  411c2b:	cmp    cl,0x8
  411c2e:	jbe    0x411bdb
  411c30:	mov    ecx,DWORD PTR [ebp+0x24]
  411c33:	mov    ecx,DWORD PTR [ecx]
  411c35:	mov    ecx,DWORD PTR [ecx+0xbc]
  411c3b:	mov    ecx,DWORD PTR [ecx]
  411c3d:	cmp    al,BYTE PTR [ecx]
  411c3f:	jne    0x411c45
  411c41:	push   0x4
  411c43:	jmp    0x411bf4
  411c45:	cmp    al,0x2b
  411c47:	je     0x411c6b
  411c49:	cmp    al,0x2d
  411c4b:	je     0x411c6b
  411c4d:	cmp    al,bl
  411c4f:	je     0x411c0c
  411c51:	cmp    al,0x43
  411c53:	jle    0x411d88
  411c59:	cmp    al,0x45
  411c5b:	jle    0x411c67
  411c5d:	sub    al,0x64
  411c5f:	cmp    al,0x1
  411c61:	ja     0x411d88
  411c67:	push   0x6
  411c69:	jmp    0x411bf4
  411c6b:	dec    edx
  411c6c:	push   0xb
  411c6e:	jmp    0x411bf4
  411c70:	lea    ecx,[eax-0x31]
  411c73:	cmp    cl,0x8
  411c76:	jbe    0x411bdb
  411c7c:	mov    ecx,DWORD PTR [ebp+0x24]
  411c7f:	mov    ecx,DWORD PTR [ecx]
  411c81:	mov    ecx,DWORD PTR [ecx+0xbc]
  411c87:	mov    ecx,DWORD PTR [ecx]
  411c89:	cmp    al,BYTE PTR [ecx]
  411c8b:	je     0x411bf2
  411c91:	cmp    al,bl
  411c93:	je     0x411c0c
  411c99:	mov    edx,DWORD PTR [ebp-0x54]
  411c9c:	jmp    0x411db1
  411ca1:	mov    DWORD PTR [ebp-0x58],esi
  411ca4:	jmp    0x411cc0
  411ca6:	cmp    al,0x39
  411ca8:	jg     0x411cc4
  411caa:	cmp    DWORD PTR [ebp-0x4c],0x19
  411cae:	jae    0x411cba
  411cb0:	inc    DWORD PTR [ebp-0x4c]
  411cb3:	sub    al,bl
  411cb5:	mov    BYTE PTR [edi],al
  411cb7:	inc    edi
  411cb8:	jmp    0x411cbd
  411cba:	inc    DWORD PTR [ebp-0x50]
  411cbd:	mov    al,BYTE PTR [edx]
  411cbf:	inc    edx
  411cc0:	cmp    al,bl
  411cc2:	jge    0x411ca6
  411cc4:	mov    ecx,DWORD PTR [ebp+0x24]
  411cc7:	mov    ecx,DWORD PTR [ecx]
  411cc9:	mov    ecx,DWORD PTR [ecx+0xbc]
  411ccf:	mov    ecx,DWORD PTR [ecx]
  411cd1:	cmp    al,BYTE PTR [ecx]
  411cd3:	je     0x411c41
  411cd9:	cmp    al,0x2b
  411cdb:	je     0x411c6b
  411cdd:	cmp    al,0x2d
  411cdf:	je     0x411c6b
  411ce1:	jmp    0x411c51
  411ce6:	cmp    DWORD PTR [ebp-0x4c],0x0
  411cea:	mov    DWORD PTR [ebp-0x58],esi
  411ced:	mov    DWORD PTR [ebp-0x5c],esi
  411cf0:	jne    0x411d18
  411cf2:	jmp    0x411cfa
  411cf4:	dec    DWORD PTR [ebp-0x50]
  411cf7:	mov    al,BYTE PTR [edx]
  411cf9:	inc    edx
  411cfa:	cmp    al,bl
  411cfc:	je     0x411cf4
  411cfe:	jmp    0x411d18
  411d00:	cmp    al,0x39
  411d02:	jg     0x411cd9
  411d04:	cmp    DWORD PTR [ebp-0x4c],0x19
  411d08:	jae    0x411d15
  411d0a:	inc    DWORD PTR [ebp-0x4c]
  411d0d:	sub    al,bl
  411d0f:	mov    BYTE PTR [edi],al
  411d11:	inc    edi
  411d12:	dec    DWORD PTR [ebp-0x50]
  411d15:	mov    al,BYTE PTR [edx]
  411d17:	inc    edx
  411d18:	cmp    al,bl
  411d1a:	jge    0x411d00
  411d1c:	jmp    0x411cd9
  411d1e:	sub    al,bl
  411d20:	mov    DWORD PTR [ebp-0x5c],esi
  411d23:	cmp    al,0x9
  411d25:	ja     0x411c99
  411d2b:	push   0x4
  411d2d:	jmp    0x411bdd
  411d32:	lea    ecx,[edx-0x2]
  411d35:	mov    DWORD PTR [ebp-0x54],ecx
  411d38:	lea    ecx,[eax-0x31]
  411d3b:	cmp    cl,0x8
  411d3e:	ja     0x411d47
  411d40:	push   0x9
  411d42:	jmp    0x411bdd
  411d47:	movsx  eax,al
  411d4a:	sub    eax,0x2b
  411d4d:	je     0x411d6f
  411d4f:	dec    eax
  411d50:	dec    eax
  411d51:	je     0x411d63
  411d53:	sub    eax,0x3
  411d56:	jne    0x411c99
  411d5c:	push   0x8
  411d5e:	jmp    0x411bf4
  411d63:	or     DWORD PTR [ebp-0x68],0xffffffff
  411d67:	push   0x7
  411d69:	pop    ecx
  411d6a:	jmp    0x411bc0
  411d6f:	push   0x7
  411d71:	jmp    0x411bf4
  411d76:	mov    DWORD PTR [ebp-0x60],esi
  411d79:	jmp    0x411d7e
  411d7b:	mov    al,BYTE PTR [edx]
  411d7d:	inc    edx
  411d7e:	cmp    al,bl
  411d80:	je     0x411d7b
  411d82:	sub    al,0x31
  411d84:	cmp    al,0x8
  411d86:	jbe    0x411d40
  411d88:	dec    edx
  411d89:	jmp    0x411db1
  411d8b:	lea    ecx,[eax-0x31]
  411d8e:	cmp    cl,0x8
  411d91:	jbe    0x411d40
  411d93:	cmp    al,bl
  411d95:	jmp    0x411d56
  411d97:	cmp    DWORD PTR [ebp+0x20],0x0
  411d9b:	je     0x411de4
  411d9d:	movsx  eax,al
  411da0:	sub    eax,0x2b
  411da3:	lea    ecx,[edx-0x1]
  411da6:	mov    DWORD PTR [ebp-0x54],ecx
  411da9:	je     0x411d6f
  411dab:	dec    eax
  411dac:	dec    eax
  411dad:	je     0x411d63
  411daf:	mov    edx,ecx
  411db1:	cmp    DWORD PTR [ebp-0x58],0x0
  411db5:	mov    eax,DWORD PTR [ebp-0x70]
  411db8:	mov    DWORD PTR [eax],edx
  411dba:	je     0x412198
  411dc0:	push   0x18
  411dc2:	pop    eax
  411dc3:	cmp    DWORD PTR [ebp-0x4c],eax
  411dc6:	jbe    0x411dd8
  411dc8:	cmp    BYTE PTR [ebp-0x9],0x5
  411dcc:	jl     0x411dd1
  411dce:	inc    BYTE PTR [ebp-0x9]
  411dd1:	dec    edi
  411dd2:	inc    DWORD PTR [ebp-0x50]
  411dd5:	mov    DWORD PTR [ebp-0x4c],eax
  411dd8:	cmp    DWORD PTR [ebp-0x4c],0x0
  411ddc:	jbe    0x4121bf
  411de2:	jmp    0x411e3d
  411de4:	push   0xa
  411de6:	pop    ecx
  411de7:	dec    edx
  411de8:	cmp    ecx,0xa
  411deb:	jne    0x411bc0
  411df1:	jmp    0x411db1
  411df3:	mov    DWORD PTR [ebp-0x60],esi
  411df6:	xor    ecx,ecx
  411df8:	jmp    0x411e13
  411dfa:	cmp    al,0x39
  411dfc:	jg     0x411e1e
  411dfe:	imul   ecx,ecx,0xa
  411e01:	movsx  esi,al
  411e04:	lea    ecx,[ecx+esi*1-0x30]
  411e08:	cmp    ecx,0x1450
  411e0e:	jg     0x411e19
  411e10:	mov    al,BYTE PTR [edx]
  411e12:	inc    edx
  411e13:	cmp    al,bl
  411e15:	jge    0x411dfa
  411e17:	jmp    0x411e1e
  411e19:	mov    ecx,0x1451
  411e1e:	mov    DWORD PTR [ebp-0x64],ecx
  411e21:	jmp    0x411e2e
  411e23:	cmp    al,0x39
  411e25:	jg     0x411d88
  411e2b:	mov    al,BYTE PTR [edx]
  411e2d:	inc    edx
  411e2e:	cmp    al,bl
  411e30:	jge    0x411e23
  411e32:	jmp    0x411d88
  411e37:	dec    DWORD PTR [ebp-0x4c]
  411e3a:	inc    DWORD PTR [ebp-0x50]
  411e3d:	dec    edi
  411e3e:	cmp    BYTE PTR [edi],0x0
  411e41:	je     0x411e37
  411e43:	lea    eax,[ebp-0x3c]
  411e46:	push   eax
  411e47:	push   DWORD PTR [ebp-0x4c]
  411e4a:	lea    eax,[ebp-0x20]
  411e4d:	push   eax
  411e4e:	call   0x4135e5
  411e53:	mov    eax,DWORD PTR [ebp-0x64]
  411e56:	xor    edx,edx
  411e58:	add    esp,0xc
  411e5b:	cmp    DWORD PTR [ebp-0x68],edx
  411e5e:	jge    0x411e62
  411e60:	neg    eax
  411e62:	add    eax,DWORD PTR [ebp-0x50]
  411e65:	cmp    DWORD PTR [ebp-0x60],edx
  411e68:	jne    0x411e6d
  411e6a:	add    eax,DWORD PTR [ebp+0x18]
  411e6d:	cmp    DWORD PTR [ebp-0x5c],edx
  411e70:	jne    0x411e75
  411e72:	sub    eax,DWORD PTR [ebp+0x1c]
  411e75:	cmp    eax,0x1450
  411e7a:	jg     0x4121a1
  411e80:	cmp    eax,0xffffebb0
  411e85:	jl     0x4121b8
  411e8b:	mov    ecx,0x44c400
  411e90:	sub    ecx,0x60
  411e93:	mov    DWORD PTR [ebp-0x54],eax
  411e96:	cmp    eax,edx
  411e98:	je     0x412186
  411e9e:	jge    0x411ead
  411ea0:	neg    eax
  411ea2:	mov    ecx,0x44c560
  411ea7:	mov    DWORD PTR [ebp-0x54],eax
  411eaa:	sub    ecx,0x60
  411ead:	cmp    DWORD PTR [ebp+0x14],edx
  411eb0:	jne    0x411eb8
  411eb2:	xor    eax,eax
  411eb4:	mov    WORD PTR [ebp-0x3c],ax
  411eb8:	cmp    DWORD PTR [ebp-0x54],edx
  411ebb:	je     0x412186
  411ec1:	jmp    0x411ec8
  411ec3:	mov    ecx,DWORD PTR [ebp-0x7c]
  411ec6:	xor    edx,edx
  411ec8:	mov    eax,DWORD PTR [ebp-0x54]
  411ecb:	sar    DWORD PTR [ebp-0x54],0x3
  411ecf:	add    ecx,0x54
  411ed2:	and    eax,0x7
  411ed5:	mov    DWORD PTR [ebp-0x7c],ecx
  411ed8:	cmp    eax,edx
  411eda:	je     0x41217c
  411ee0:	imul   eax,eax,0xc
  411ee3:	lea    ebx,[ecx+eax*1]
  411ee6:	mov    eax,0x8000
  411eeb:	cmp    WORD PTR [ebx],ax
  411eee:	jb     0x411efe
  411ef0:	mov    esi,ebx
  411ef2:	lea    edi,[ebp-0x48]
  411ef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ef8:	dec    DWORD PTR [ebp-0x46]
  411efb:	lea    ebx,[ebp-0x48]
  411efe:	mov    edx,DWORD PTR [ebp-0x32]
  411f01:	xor    eax,eax
  411f03:	mov    DWORD PTR [ebp-0x50],eax
  411f06:	mov    DWORD PTR [ebp-0x2c],eax
  411f09:	mov    DWORD PTR [ebp-0x28],eax
  411f0c:	mov    DWORD PTR [ebp-0x24],eax
  411f0f:	movzx  eax,WORD PTR [ebx+0xa]
  411f13:	mov    esi,eax
  411f15:	xor    esi,DWORD PTR [ebp-0x32]
  411f18:	mov    ecx,0x7fff
  411f1d:	and    edx,ecx
  411f1f:	and    eax,ecx
  411f21:	and    esi,0x8000
  411f27:	mov    edi,0x7fff
  411f2c:	lea    ecx,[eax+edx*1]
  411f2f:	mov    DWORD PTR [ebp-0x70],esi
  411f32:	movzx  ecx,cx
  411f35:	cmp    dx,di
  411f38:	jae    0x41215e
  411f3e:	cmp    ax,di
  411f41:	jae    0x41215e
  411f47:	mov    edi,0xbffd
  411f4c:	cmp    cx,di
  411f4f:	ja     0x41215e
  411f55:	mov    esi,0x3fbf
  411f5a:	cmp    cx,si
  411f5d:	ja     0x411f6c
  411f5f:	xor    eax,eax
  411f61:	mov    DWORD PTR [ebp-0x38],eax
  411f64:	mov    DWORD PTR [ebp-0x3c],eax
  411f67:	jmp    0x412179
  411f6c:	xor    esi,esi
  411f6e:	cmp    dx,si
  411f71:	jne    0x411f92
  411f73:	inc    ecx
  411f74:	test   DWORD PTR [ebp-0x34],0x7fffffff
  411f7b:	jne    0x411f92
  411f7d:	cmp    DWORD PTR [ebp-0x38],esi
  411f80:	jne    0x411f92
  411f82:	cmp    DWORD PTR [ebp-0x3c],esi
  411f85:	jne    0x411f92
  411f87:	xor    eax,eax
  411f89:	mov    WORD PTR [ebp-0x32],ax
  411f8d:	jmp    0x41217c
  411f92:	cmp    ax,si
  411f95:	jne    0x411fb8
  411f97:	inc    ecx
  411f98:	test   DWORD PTR [ebx+0x8],0x7fffffff
  411f9f:	jne    0x411fb8
  411fa1:	cmp    DWORD PTR [ebx+0x4],esi
  411fa4:	jne    0x411fb8
  411fa6:	cmp    DWORD PTR [ebx],esi
  411fa8:	jne    0x411fb8
  411faa:	mov    DWORD PTR [ebp-0x34],esi
  411fad:	mov    DWORD PTR [ebp-0x38],esi
  411fb0:	mov    DWORD PTR [ebp-0x3c],esi
  411fb3:	jmp    0x41217c
  411fb8:	mov    DWORD PTR [ebp-0x68],esi
  411fbb:	lea    edi,[ebp-0x28]
  411fbe:	mov    DWORD PTR [ebp-0x58],0x5
  411fc5:	mov    eax,DWORD PTR [ebp-0x68]
  411fc8:	mov    edx,DWORD PTR [ebp-0x58]
  411fcb:	add    eax,eax
  411fcd:	mov    DWORD PTR [ebp-0x64],edx
  411fd0:	test   edx,edx
  411fd2:	jle    0x412026
  411fd4:	lea    eax,[ebp+eax*1-0x3c]
  411fd8:	mov    DWORD PTR [ebp-0x5c],eax
  411fdb:	lea    eax,[ebx+0x8]
  411fde:	mov    DWORD PTR [ebp-0x60],eax
  411fe1:	mov    eax,DWORD PTR [ebp-0x60]
  411fe4:	mov    edx,DWORD PTR [ebp-0x5c]
  411fe7:	movzx  edx,WORD PTR [edx]
  411fea:	movzx  eax,WORD PTR [eax]
  411fed:	and    DWORD PTR [ebp-0x4c],0x0
  411ff1:	imul   eax,edx
  411ff4:	mov    edx,DWORD PTR [edi-0x4]
  411ff7:	lea    esi,[edx+eax*1]
  411ffa:	cmp    esi,edx
  411ffc:	jb     0x412002
  411ffe:	cmp    esi,eax
  412000:	jae    0x412009
  412002:	mov    DWORD PTR [ebp-0x4c],0x1
  412009:	cmp    DWORD PTR [ebp-0x4c],0x0
  41200d:	mov    DWORD PTR [edi-0x4],esi
  412010:	je     0x412015
  412012:	inc    WORD PTR [edi]
  412015:	add    DWORD PTR [ebp-0x5c],0x2
  412019:	sub    DWORD PTR [ebp-0x60],0x2
  41201d:	dec    DWORD PTR [ebp-0x64]
  412020:	cmp    DWORD PTR [ebp-0x64],0x0
  412024:	jg     0x411fe1
  412026:	add    edi,0x2
  412029:	inc    DWORD PTR [ebp-0x68]
  41202c:	dec    DWORD PTR [ebp-0x58]
  41202f:	cmp    DWORD PTR [ebp-0x58],0x0
  412033:	jg     0x411fc5
  412035:	add    ecx,0xc002
  41203b:	test   cx,cx
  41203e:	jle    0x412077
  412040:	mov    edi,DWORD PTR [ebp-0x24]
  412043:	test   edi,edi
  412045:	js     0x412072
  412047:	mov    esi,DWORD PTR [ebp-0x28]
  41204a:	mov    eax,DWORD PTR [ebp-0x2c]
  41204d:	shl    DWORD PTR [ebp-0x2c],1
  412050:	shr    eax,0x1f
  412053:	mov    edx,esi
  412055:	add    esi,esi
  412057:	or     esi,eax
  412059:	shr    edx,0x1f
  41205c:	lea    eax,[edi+edi*1]
  41205f:	or     eax,edx
  412061:	add    ecx,0xffff
  412067:	mov    DWORD PTR [ebp-0x28],esi
  41206a:	mov    DWORD PTR [ebp-0x24],eax
  41206d:	test   cx,cx
  412070:	jg     0x412040
  412072:	test   cx,cx
  412075:	jg     0x4120c4
  412077:	add    ecx,0xffff
  41207d:	test   cx,cx
  412080:	jns    0x4120c4
  412082:	mov    eax,ecx
  412084:	neg    eax
  412086:	movzx  esi,ax
  412089:	add    ecx,esi
  41208b:	test   BYTE PTR [ebp-0x2c],0x1
  41208f:	je     0x412094
  412091:	inc    DWORD PTR [ebp-0x50]
  412094:	mov    eax,DWORD PTR [ebp-0x24]
  412097:	mov    edi,DWORD PTR [ebp-0x28]
  41209a:	mov    edx,DWORD PTR [ebp-0x28]
  41209d:	shr    DWORD PTR [ebp-0x24],1
  4120a0:	shl    eax,0x1f
  4120a3:	shr    edi,1
  4120a5:	or     edi,eax
  4120a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4120aa:	shl    edx,0x1f
  4120ad:	shr    eax,1
  4120af:	or     eax,edx
  4120b1:	dec    esi
  4120b2:	mov    DWORD PTR [ebp-0x28],edi
  4120b5:	mov    DWORD PTR [ebp-0x2c],eax
  4120b8:	jne    0x41208b
  4120ba:	cmp    DWORD PTR [ebp-0x50],esi
  4120bd:	je     0x4120c4
  4120bf:	or     WORD PTR [ebp-0x2c],0x1
  4120c4:	mov    eax,0x8000
  4120c9:	cmp    WORD PTR [ebp-0x2c],ax
  4120cd:	ja     0x4120e0
  4120cf:	mov    edx,DWORD PTR [ebp-0x2c]
  4120d2:	and    edx,0x1ffff
  4120d8:	cmp    edx,0x18000
  4120de:	jne    0x412114
  4120e0:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
  4120e4:	jne    0x412111
  4120e6:	and    DWORD PTR [ebp-0x2a],0x0
  4120ea:	cmp    DWORD PTR [ebp-0x26],0xffffffff
  4120ee:	jne    0x41210c
  4120f0:	and    DWORD PTR [ebp-0x26],0x0
  4120f4:	mov    edx,0xffff
  4120f9:	cmp    WORD PTR [ebp-0x22],dx
  4120fd:	jne    0x412106
  4120ff:	mov    WORD PTR [ebp-0x22],ax
  412103:	inc    ecx
  412104:	jmp    0x412114
  412106:	inc    WORD PTR [ebp-0x22]
  41210a:	jmp    0x412114
  41210c:	inc    DWORD PTR [ebp-0x26]
  41210f:	jmp    0x412114
  412111:	inc    DWORD PTR [ebp-0x2a]
  412114:	mov    eax,0x7fff
  412119:	cmp    cx,ax
  41211c:	jb     0x412141
  41211e:	xor    eax,eax
  412120:	xor    ecx,ecx
  412122:	cmp    WORD PTR [ebp-0x70],ax
  412126:	mov    DWORD PTR [ebp-0x38],eax
  412129:	sete   cl
  41212c:	mov    DWORD PTR [ebp-0x3c],eax
  41212f:	dec    ecx
  412130:	and    ecx,0x80000000
  412136:	add    ecx,0x7fff8000
  41213c:	mov    DWORD PTR [ebp-0x34],ecx
  41213f:	jmp    0x41217c
  412141:	mov    ax,WORD PTR [ebp-0x2a]
  412145:	or     ecx,DWORD PTR [ebp-0x70]
  412148:	mov    WORD PTR [ebp-0x3c],ax
  41214c:	mov    eax,DWORD PTR [ebp-0x28]
  41214f:	mov    DWORD PTR [ebp-0x3a],eax
  412152:	mov    eax,DWORD PTR [ebp-0x24]
  412155:	mov    DWORD PTR [ebp-0x36],eax
  412158:	mov    WORD PTR [ebp-0x32],cx
  41215c:	jmp    0x41217c
  41215e:	xor    eax,eax
  412160:	test   si,si
  412163:	sete   al
  412166:	and    DWORD PTR [ebp-0x38],0x0
  41216a:	dec    eax
  41216b:	and    eax,0x80000000
  412170:	add    eax,0x7fff8000
  412175:	and    DWORD PTR [ebp-0x3c],0x0
  412179:	mov    DWORD PTR [ebp-0x34],eax
  41217c:	cmp    DWORD PTR [ebp-0x54],0x0
  412180:	jne    0x411ec3
  412186:	mov    eax,DWORD PTR [ebp-0x34]
  412189:	movzx  ecx,WORD PTR [ebp-0x3c]
  41218d:	mov    esi,DWORD PTR [ebp-0x3a]
  412190:	mov    edx,DWORD PTR [ebp-0x36]
  412193:	shr    eax,0x10
  412196:	jmp    0x4121c7
  412198:	mov    DWORD PTR [ebp-0x6c],0x4
  41219f:	jmp    0x4121bf
  4121a1:	xor    esi,esi
  4121a3:	mov    eax,0x7fff
  4121a8:	mov    edx,0x80000000
  4121ad:	xor    ecx,ecx
  4121af:	mov    DWORD PTR [ebp-0x6c],0x2
  4121b6:	jmp    0x4121c7
  4121b8:	mov    DWORD PTR [ebp-0x6c],0x1
  4121bf:	xor    ecx,ecx
  4121c1:	xor    eax,eax
  4121c3:	xor    edx,edx
  4121c5:	xor    esi,esi
  4121c7:	mov    edi,DWORD PTR [ebp-0x78]
  4121ca:	or     eax,DWORD PTR [ebp-0x74]
  4121cd:	mov    WORD PTR [edi],cx
  4121d0:	mov    WORD PTR [edi+0xa],ax
  4121d4:	mov    eax,DWORD PTR [ebp-0x6c]
  4121d7:	mov    DWORD PTR [edi+0x2],esi
  4121da:	mov    DWORD PTR [edi+0x6],edx
  4121dd:	pop    ebx
  4121de:	mov    ecx,DWORD PTR [ebp-0x4]
  4121e1:	pop    edi
  4121e2:	xor    ecx,ebp
  4121e4:	pop    esi
  4121e5:	call   0x403edd
  4121ea:	leave  
  4121eb:	ret    
  4121ec:	lea    ecx,[ecx+0x0]
  4121ef:	rcr    DWORD PTR [ebx],cl
  4121f1:	inc    ecx
  4121f2:	add    BYTE PTR ds:0x7000411c,ah
  4121f8:	sbb    al,0x41
  4121fa:	add    BYTE PTR [ecx-0x19ffbee4],ah
  412200:	sbb    al,0x41
  412202:	add    BYTE PTR [esi],bl
  412204:	sbb    eax,0x1d320041
  412209:	inc    ecx
  41220a:	add    BYTE PTR [ebx+0x7600411d],cl
  412210:	sbb    eax,0x1df30041
  412215:	inc    ecx
  412216:	add    al,ch
  412218:	sbb    eax,0x1d970041
  41221d:	inc    ecx
  41221e:	add    BYTE PTR [ebx-0x1374aa01],cl
  412224:	sub    esp,0x74
  412227:	mov    eax,ds:0x44b470
  41222c:	xor    eax,ebp
  41222e:	mov    DWORD PTR [ebp-0x4],eax
  412231:	movzx  eax,WORD PTR [ebp+0x10]
  412235:	movzx  edx,WORD PTR [ebp+0x10]
  412239:	mov    ecx,0x8000
  41223e:	and    eax,ecx
  412240:	push   ebx
  412241:	mov    ebx,DWORD PTR [ebp+0x1c]
  412244:	mov    DWORD PTR [ebp-0x60],eax
  412247:	lea    eax,[ecx-0x1]
  41224a:	push   esi
  41224b:	and    edx,eax
  41224d:	cmp    WORD PTR [ebp-0x60],0x0
  412252:	push   edi
  412253:	mov    DWORD PTR [ebp-0x64],ebx
  412256:	mov    DWORD PTR [ebp-0x30],0xcccccccc
  41225d:	mov    DWORD PTR [ebp-0x2c],0xcccccccc
  412264:	mov    DWORD PTR [ebp-0x28],0x3ffbcccc
  41226b:	mov    DWORD PTR [ebp-0x74],0x1
  412272:	je     0x41227a
  412274:	mov    BYTE PTR [ebx+0x2],0x2d
  412278:	jmp    0x41227e
  41227a:	mov    BYTE PTR [ebx+0x2],0x20
  41227e:	mov    esi,DWORD PTR [ebp+0xc]
  412281:	mov    edi,DWORD PTR [ebp+0x8]
  412284:	test   dx,dx
  412287:	jne    0x4122c0
  412289:	test   esi,esi
  41228b:	jne    0x412360
  412291:	test   edi,edi
  412293:	jne    0x412360
  412299:	xor    eax,eax
  41229b:	cmp    WORD PTR [ebp-0x60],cx
  41229f:	mov    WORD PTR [ebx],ax
  4122a2:	setne  al
  4122a5:	dec    al
  4122a7:	and    al,0xd
  4122a9:	add    al,0x20
  4122ab:	mov    BYTE PTR [ebx+0x2],al
  4122ae:	mov    WORD PTR [ebx+0x3],0x3001
  4122b4:	mov    BYTE PTR [ebx+0x5],0x0
  4122b8:	xor    eax,eax
  4122ba:	inc    eax
  4122bb:	jmp    0x412acb
  4122c0:	cmp    dx,ax
  4122c3:	jne    0x412360
  4122c9:	mov    ecx,DWORD PTR [ebp+0xc]
  4122cc:	xor    eax,eax
  4122ce:	inc    eax
  4122cf:	mov    WORD PTR [ebx],ax
  4122d2:	mov    eax,0x80000000
  4122d7:	cmp    ecx,eax
  4122d9:	jne    0x4122e1
  4122db:	cmp    DWORD PTR [ebp+0x8],0x0
  4122df:	je     0x4122fc
  4122e1:	test   ecx,0x40000000
  4122e7:	jne    0x4122fc
  4122e9:	push   0x4459e0
  4122ee:	jmp    0x412343
  4122f0:	xor    eax,eax
  4122f2:	push   eax
  4122f3:	push   eax
  4122f4:	push   eax
  4122f5:	push   eax
  4122f6:	push   eax
  4122f7:	call   0x4075f7
  4122fc:	xor    edx,edx
  4122fe:	cmp    WORD PTR [ebp-0x60],dx
  412302:	je     0x412318
  412304:	cmp    ecx,0xc0000000
  41230a:	jne    0x412318
  41230c:	cmp    DWORD PTR [ebp+0x8],edx
  41230f:	jne    0x41233e
  412311:	push   0x4459d8
  412316:	jmp    0x412326
  412318:	cmp    ecx,eax
  41231a:	jne    0x41233e
  41231c:	cmp    DWORD PTR [ebp+0x8],edx
  41231f:	jne    0x41233e
  412321:	push   0x4459d0
  412326:	lea    eax,[ebx+0x4]
  412329:	push   0x16
  41232b:	push   eax
  41232c:	call   0x4078df
  412331:	add    esp,0xc
  412334:	test   eax,eax
  412336:	jne    0x4122f0
  412338:	mov    BYTE PTR [ebx+0x3],0x5
  41233c:	jmp    0x412359
  41233e:	push   0x4459c8
  412343:	lea    eax,[ebx+0x4]
  412346:	push   0x16
  412348:	push   eax
  412349:	call   0x4078df
  41234e:	add    esp,0xc
  412351:	test   eax,eax
  412353:	jne    0x4122f0
  412355:	mov    BYTE PTR [ebx+0x3],0x6
  412359:	xor    eax,eax
  41235b:	jmp    0x412acb
  412360:	movzx  ecx,dx
  412363:	mov    ebx,ecx
  412365:	imul   ecx,ecx,0x4d10
  41236b:	mov    eax,esi
  41236d:	shr    eax,0x18
  412370:	shr    ebx,0x8
  412373:	lea    eax,[ebx+eax*2]
  412376:	imul   eax,eax,0x4d
  412379:	lea    eax,[eax+ecx*1-0x134312f4]
  412380:	sar    eax,0x10
  412383:	movzx  eax,ax
  412386:	xor    ecx,ecx
  412388:	mov    WORD PTR [ebp-0x20],cx
  41238c:	movsx  ebx,ax
  41238f:	mov    ecx,0x44c400
  412394:	sub    ecx,0x60
  412397:	neg    ebx
  412399:	mov    DWORD PTR [ebp-0x4c],eax
  41239c:	mov    WORD PTR [ebp-0x16],dx
  4123a0:	mov    DWORD PTR [ebp-0x1a],esi
  4123a3:	mov    DWORD PTR [ebp-0x1e],edi
  4123a6:	mov    DWORD PTR [ebp-0x68],ecx
  4123a9:	je     0x41264b
  4123af:	test   ebx,ebx
  4123b1:	jns    0x4123c2
  4123b3:	mov    eax,0x44c560
  4123b8:	sub    eax,0x60
  4123bb:	neg    ebx
  4123bd:	mov    DWORD PTR [ebp-0x68],eax
  4123c0:	test   ebx,ebx
  4123c2:	je     0x41264b
  4123c8:	add    DWORD PTR [ebp-0x68],0x54
  4123cc:	mov    ecx,ebx
  4123ce:	sar    ebx,0x3
  4123d1:	and    ecx,0x7
  4123d4:	je     0x412641
  4123da:	imul   ecx,ecx,0xc
  4123dd:	add    ecx,DWORD PTR [ebp-0x68]
  4123e0:	mov    eax,ecx
  4123e2:	mov    DWORD PTR [ebp-0x44],ecx
  4123e5:	mov    ecx,0x8000
  4123ea:	cmp    WORD PTR [eax],cx
  4123ed:	jb     0x412400
  4123ef:	mov    esi,eax
  4123f1:	lea    edi,[ebp-0x3c]
  4123f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123f6:	lea    eax,[ebp-0x3c]
  4123f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123fa:	dec    DWORD PTR [ebp-0x3a]
  4123fd:	mov    DWORD PTR [ebp-0x44],eax
  412400:	xor    ecx,ecx
  412402:	mov    DWORD PTR [ebp-0x48],ecx
  412405:	mov    DWORD PTR [ebp-0x10],ecx
  412408:	mov    DWORD PTR [ebp-0xc],ecx
  41240b:	mov    DWORD PTR [ebp-0x8],ecx
  41240e:	movzx  ecx,WORD PTR [eax+0xa]
  412412:	mov    edx,ecx
  412414:	xor    edx,DWORD PTR [ebp-0x16]
  412417:	mov    esi,0x7fff
  41241c:	and    edx,0x8000
  412422:	mov    DWORD PTR [ebp-0x58],edx
  412425:	mov    edx,DWORD PTR [ebp-0x16]
  412428:	and    edx,esi
  41242a:	and    ecx,esi
  41242c:	lea    esi,[ecx+edx*1]
  41242f:	movzx  edi,si
  412432:	mov    esi,0x7fff
  412437:	cmp    dx,si
  41243a:	jae    0x4126e7
  412440:	cmp    cx,si
  412443:	jae    0x4126e7
  412449:	mov    esi,0xbffd
  41244e:	cmp    di,si
  412451:	ja     0x4126e7
  412457:	mov    esi,0x3fbf
  41245c:	cmp    di,si
  41245f:	ja     0x412471
  412461:	xor    esi,esi
  412463:	mov    DWORD PTR [ebp-0x18],esi
  412466:	mov    DWORD PTR [ebp-0x1c],esi
  412469:	mov    DWORD PTR [ebp-0x20],esi
  41246c:	jmp    0x412643
  412471:	xor    esi,esi
  412473:	cmp    dx,si
  412476:	jne    0x412497
  412478:	inc    edi
  412479:	test   DWORD PTR [ebp-0x18],0x7fffffff
  412480:	jne    0x412497
  412482:	cmp    DWORD PTR [ebp-0x1c],esi
  412485:	jne    0x412497
  412487:	cmp    DWORD PTR [ebp-0x20],esi
  41248a:	jne    0x412497
  41248c:	xor    eax,eax
  41248e:	mov    WORD PTR [ebp-0x16],ax
  412492:	jmp    0x412643
  412497:	cmp    cx,si
  41249a:	jne    0x4124af
  41249c:	inc    edi
  41249d:	test   DWORD PTR [eax+0x8],0x7fffffff
  4124a4:	jne    0x4124af
  4124a6:	cmp    DWORD PTR [eax+0x4],esi
  4124a9:	jne    0x4124af
  4124ab:	cmp    DWORD PTR [eax],esi
  4124ad:	je     0x412463
  4124af:	and    DWORD PTR [ebp-0x54],esi
  4124b2:	lea    esi,[ebp-0xc]
  4124b5:	mov    DWORD PTR [ebp-0x40],0x5
  4124bc:	mov    ecx,DWORD PTR [ebp-0x54]
  4124bf:	mov    edx,DWORD PTR [ebp-0x40]
  4124c2:	add    ecx,ecx
  4124c4:	mov    DWORD PTR [ebp-0x50],edx
  4124c7:	test   edx,edx
  4124c9:	jle    0x412520
  4124cb:	lea    ecx,[ebp+ecx*1-0x20]
  4124cf:	add    eax,0x8
  4124d2:	mov    DWORD PTR [ebp-0x70],ecx
  4124d5:	mov    DWORD PTR [ebp-0x6c],eax
  4124d8:	mov    eax,DWORD PTR [ebp-0x70]
  4124db:	movzx  ecx,WORD PTR [eax]
  4124de:	mov    eax,DWORD PTR [ebp-0x6c]
  4124e1:	movzx  eax,WORD PTR [eax]
  4124e4:	mov    edx,DWORD PTR [esi-0x4]
  4124e7:	imul   ecx,eax
  4124ea:	and    DWORD PTR [ebp-0x5c],0x0
  4124ee:	lea    eax,[edx+ecx*1]
  4124f1:	cmp    eax,edx
  4124f3:	jb     0x4124f9
  4124f5:	cmp    eax,ecx
  4124f7:	jae    0x412500
  4124f9:	mov    DWORD PTR [ebp-0x5c],0x1
  412500:	cmp    DWORD PTR [ebp-0x5c],0x0
  412504:	mov    DWORD PTR [esi-0x4],eax
  412507:	je     0x41250c
  412509:	inc    WORD PTR [esi]
  41250c:	add    DWORD PTR [ebp-0x70],0x2
  412510:	sub    DWORD PTR [ebp-0x6c],0x2
  412514:	dec    DWORD PTR [ebp-0x50]
  412517:	cmp    DWORD PTR [ebp-0x50],0x0
  41251b:	jg     0x4124d8
  41251d:	mov    eax,DWORD PTR [ebp-0x44]
  412520:	add    esi,0x2
  412523:	inc    DWORD PTR [ebp-0x54]
  412526:	dec    DWORD PTR [ebp-0x40]
  412529:	cmp    DWORD PTR [ebp-0x40],0x0
  41252d:	jg     0x4124bc
  41252f:	add    edi,0xc002
  412535:	test   di,di
  412538:	jle    0x412575
  41253a:	test   DWORD PTR [ebp-0x8],0x80000000
  412541:	jne    0x412570
  412543:	mov    eax,DWORD PTR [ebp-0xc]
  412546:	mov    ecx,DWORD PTR [ebp-0x10]
  412549:	shl    DWORD PTR [ebp-0x10],1
  41254c:	mov    edx,eax
  41254e:	add    eax,eax
  412550:	shr    ecx,0x1f
  412553:	or     eax,ecx
  412555:	mov    DWORD PTR [ebp-0xc],eax
  412558:	mov    eax,DWORD PTR [ebp-0x8]
  41255b:	shr    edx,0x1f
  41255e:	add    eax,eax
  412560:	or     eax,edx
  412562:	add    edi,0xffff
  412568:	mov    DWORD PTR [ebp-0x8],eax
  41256b:	test   di,di
  41256e:	jg     0x41253a
  412570:	test   di,di
  412573:	jg     0x4125c2
  412575:	add    edi,0xffff
  41257b:	test   di,di
  41257e:	jns    0x4125c2
  412580:	mov    eax,edi
  412582:	neg    eax
  412584:	movzx  eax,ax
  412587:	add    edi,eax
  412589:	test   BYTE PTR [ebp-0x10],0x1
  41258d:	je     0x412592
  41258f:	inc    DWORD PTR [ebp-0x48]
  412592:	mov    ecx,DWORD PTR [ebp-0x8]
  412595:	mov    esi,DWORD PTR [ebp-0xc]
  412598:	mov    edx,DWORD PTR [ebp-0xc]
  41259b:	shr    DWORD PTR [ebp-0x8],1
  41259e:	shl    ecx,0x1f
  4125a1:	shr    esi,1
  4125a3:	or     esi,ecx
  4125a5:	mov    ecx,DWORD PTR [ebp-0x10]
  4125a8:	shl    edx,0x1f
  4125ab:	shr    ecx,1
  4125ad:	or     ecx,edx
  4125af:	dec    eax
  4125b0:	mov    DWORD PTR [ebp-0xc],esi
  4125b3:	mov    DWORD PTR [ebp-0x10],ecx
  4125b6:	jne    0x412589
  4125b8:	cmp    DWORD PTR [ebp-0x48],eax
  4125bb:	je     0x4125c2
  4125bd:	or     WORD PTR [ebp-0x10],0x1
  4125c2:	mov    eax,0x8000
  4125c7:	cmp    WORD PTR [ebp-0x10],ax
  4125cb:	ja     0x4125de
  4125cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4125d0:	and    ecx,0x1ffff
  4125d6:	cmp    ecx,0x18000
  4125dc:	jne    0x412612
  4125de:	cmp    DWORD PTR [ebp-0xe],0xffffffff
  4125e2:	jne    0x41260f
  4125e4:	and    DWORD PTR [ebp-0xe],0x0
  4125e8:	cmp    DWORD PTR [ebp-0xa],0xffffffff
  4125ec:	jne    0x41260a
  4125ee:	and    DWORD PTR [ebp-0xa],0x0
  4125f2:	mov    ecx,0xffff
  4125f7:	cmp    WORD PTR [ebp-0x6],cx
  4125fb:	jne    0x412604
  4125fd:	mov    WORD PTR [ebp-0x6],ax
  412601:	inc    edi
  412602:	jmp    0x412612
  412604:	inc    WORD PTR [ebp-0x6]
  412608:	jmp    0x412612
  41260a:	inc    DWORD PTR [ebp-0xa]
  41260d:	jmp    0x412612
  41260f:	inc    DWORD PTR [ebp-0xe]
  412612:	mov    eax,0x7fff
  412617:	cmp    di,ax
  41261a:	jb     0x4126c7
  412620:	xor    eax,eax
  412622:	xor    ecx,ecx
  412624:	cmp    WORD PTR [ebp-0x58],ax
  412628:	mov    DWORD PTR [ebp-0x1c],eax
  41262b:	sete   cl
  41262e:	mov    DWORD PTR [ebp-0x20],eax
  412631:	dec    ecx
  412632:	and    ecx,0x80000000
  412638:	add    ecx,0x7fff8000
  41263e:	mov    DWORD PTR [ebp-0x18],ecx
  412641:	xor    esi,esi
  412643:	cmp    ebx,esi
  412645:	jne    0x4123c8
  41264b:	mov    ecx,DWORD PTR [ebp-0x18]
  41264e:	shr    ecx,0x10
  412651:	mov    edx,0x3fff
  412656:	mov    eax,0x7fff
  41265b:	cmp    cx,dx
  41265e:	jb     0x412903
  412664:	mov    ebx,DWORD PTR [ebp-0x26]
  412667:	inc    DWORD PTR [ebp-0x4c]
  41266a:	xor    edx,edx
  41266c:	mov    DWORD PTR [ebp-0x50],edx
  41266f:	mov    DWORD PTR [ebp-0x10],edx
  412672:	mov    DWORD PTR [ebp-0xc],edx
  412675:	mov    DWORD PTR [ebp-0x8],edx
  412678:	mov    edx,DWORD PTR [ebp-0x26]
  41267b:	xor    ebx,ecx
  41267d:	and    ecx,eax
  41267f:	and    edx,eax
  412681:	and    ebx,0x8000
  412687:	lea    esi,[edx+ecx*1]
  41268a:	mov    DWORD PTR [ebp-0x5c],ebx
  41268d:	movzx  esi,si
  412690:	cmp    cx,ax
  412693:	jae    0x4128e5
  412699:	cmp    dx,ax
  41269c:	jae    0x4128e5
  4126a2:	mov    eax,0xbffd
  4126a7:	cmp    si,ax
  4126aa:	ja     0x4128e5
  4126b0:	mov    eax,0x3fbf
  4126b5:	cmp    si,ax
  4126b8:	ja     0x412705
  4126ba:	xor    eax,eax
  4126bc:	mov    DWORD PTR [ebp-0x1c],eax
  4126bf:	mov    DWORD PTR [ebp-0x20],eax
  4126c2:	jmp    0x412900
  4126c7:	mov    ax,WORD PTR [ebp-0xe]
  4126cb:	or     edi,DWORD PTR [ebp-0x58]
  4126ce:	mov    WORD PTR [ebp-0x20],ax
  4126d2:	mov    eax,DWORD PTR [ebp-0xc]
  4126d5:	mov    DWORD PTR [ebp-0x1e],eax
  4126d8:	mov    eax,DWORD PTR [ebp-0x8]
  4126db:	mov    DWORD PTR [ebp-0x1a],eax
  4126de:	mov    WORD PTR [ebp-0x16],di
  4126e2:	jmp    0x412641
  4126e7:	xor    eax,eax
  4126e9:	xor    esi,esi
  4126eb:	cmp    WORD PTR [ebp-0x58],si
  4126ef:	sete   al
  4126f2:	dec    eax
  4126f3:	and    eax,0x80000000
  4126f8:	add    eax,0x7fff8000
  4126fd:	mov    DWORD PTR [ebp-0x18],eax
  412700:	jmp    0x412466
  412705:	xor    eax,eax
  412707:	cmp    cx,ax
  41270a:	jne    0x412729
  41270c:	inc    esi
  41270d:	test   DWORD PTR [ebp-0x18],0x7fffffff
  412714:	jne    0x412729
  412716:	cmp    DWORD PTR [ebp-0x1c],eax
  412719:	jne    0x412729
  41271b:	cmp    DWORD PTR [ebp-0x20],eax
  41271e:	jne    0x412729
  412720:	mov    WORD PTR [ebp-0x16],ax
  412724:	jmp    0x412903
  412729:	cmp    dx,ax
  41272c:	jne    0x412746
  41272e:	inc    esi
  41272f:	test   DWORD PTR [ebp-0x28],0x7fffffff
  412736:	jne    0x412746
  412738:	cmp    DWORD PTR [ebp-0x2c],eax
  41273b:	jne    0x412746
  41273d:	cmp    DWORD PTR [ebp-0x30],eax
  412740:	je     0x4126bc
  412746:	mov    DWORD PTR [ebp-0x54],eax
  412749:	lea    edi,[ebp-0xc]
  41274c:	mov    DWORD PTR [ebp-0x40],0x5
  412753:	mov    eax,DWORD PTR [ebp-0x54]
  412756:	mov    ecx,DWORD PTR [ebp-0x40]
  412759:	add    eax,eax
  41275b:	mov    DWORD PTR [ebp-0x48],ecx
  41275e:	test   ecx,ecx
  412760:	jle    0x4127ad
  412762:	lea    ecx,[ebp-0x28]
  412765:	mov    DWORD PTR [ebp-0x58],ecx
  412768:	lea    eax,[ebp+eax*1-0x20]
  41276c:	mov    ecx,DWORD PTR [ebp-0x58]
  41276f:	movzx  edx,WORD PTR [eax]
  412772:	movzx  ecx,WORD PTR [ecx]
  412775:	and    DWORD PTR [ebp-0x44],0x0
  412779:	imul   ecx,edx
  41277c:	mov    edx,DWORD PTR [edi-0x4]
  41277f:	lea    ebx,[edx+ecx*1]
  412782:	cmp    ebx,edx
  412784:	jb     0x41278a
  412786:	cmp    ebx,ecx
  412788:	jae    0x412791
  41278a:	mov    DWORD PTR [ebp-0x44],0x1
  412791:	cmp    DWORD PTR [ebp-0x44],0x0
  412795:	mov    DWORD PTR [edi-0x4],ebx
  412798:	je     0x41279d
  41279a:	inc    WORD PTR [edi]
  41279d:	sub    DWORD PTR [ebp-0x58],0x2
  4127a1:	add    eax,0x2
  4127a4:	dec    DWORD PTR [ebp-0x48]
  4127a7:	cmp    DWORD PTR [ebp-0x48],0x0
  4127ab:	jg     0x41276c
  4127ad:	add    edi,0x2
  4127b0:	inc    DWORD PTR [ebp-0x54]
  4127b3:	dec    DWORD PTR [ebp-0x40]
  4127b6:	cmp    DWORD PTR [ebp-0x40],0x0
  4127ba:	jg     0x412753
  4127bc:	add    esi,0xc002
  4127c2:	test   si,si
  4127c5:	jle    0x4127fe
  4127c7:	mov    edi,DWORD PTR [ebp-0x8]
  4127ca:	test   edi,edi
  4127cc:	js     0x4127f9
  4127ce:	mov    eax,DWORD PTR [ebp-0xc]
  4127d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4127d4:	shl    DWORD PTR [ebp-0x10],1
  4127d7:	mov    edx,eax
  4127d9:	add    eax,eax
  4127db:	shr    ecx,0x1f
  4127de:	or     eax,ecx
  4127e0:	mov    DWORD PTR [ebp-0xc],eax
  4127e3:	shr    edx,0x1f
  4127e6:	lea    eax,[edi+edi*1]
  4127e9:	or     eax,edx
  4127eb:	add    esi,0xffff
  4127f1:	mov    DWORD PTR [ebp-0x8],eax
  4127f4:	test   si,si
  4127f7:	jg     0x4127c7
  4127f9:	test   si,si
  4127fc:	jg     0x41284b
  4127fe:	add    esi,0xffff
  412804:	test   si,si
  412807:	jns    0x41284b
  412809:	mov    eax,esi
  41280b:	neg    eax
  41280d:	movzx  eax,ax
  412810:	add    esi,eax
  412812:	test   BYTE PTR [ebp-0x10],0x1
  412816:	je     0x41281b
  412818:	inc    DWORD PTR [ebp-0x50]
  41281b:	mov    ecx,DWORD PTR [ebp-0x8]
  41281e:	mov    edi,DWORD PTR [ebp-0xc]
  412821:	mov    edx,DWORD PTR [ebp-0xc]
  412824:	shr    DWORD PTR [ebp-0x8],1
  412827:	shl    ecx,0x1f
  41282a:	shr    edi,1
  41282c:	or     edi,ecx
  41282e:	mov    ecx,DWORD PTR [ebp-0x10]
  412831:	shl    edx,0x1f
  412834:	shr    ecx,1
  412836:	or     ecx,edx
  412838:	dec    eax
  412839:	mov    DWORD PTR [ebp-0xc],edi
  41283c:	mov    DWORD PTR [ebp-0x10],ecx
  41283f:	jne    0x412812
  412841:	cmp    DWORD PTR [ebp-0x50],eax
  412844:	je     0x41284b
  412846:	or     WORD PTR [ebp-0x10],0x1
  41284b:	mov    eax,0x8000
  412850:	cmp    WORD PTR [ebp-0x10],ax
  412854:	ja     0x412867
  412856:	mov    ecx,DWORD PTR [ebp-0x10]
  412859:	and    ecx,0x1ffff
  41285f:	cmp    ecx,0x18000
  412865:	jne    0x41289b
  412867:	cmp    DWORD PTR [ebp-0xe],0xffffffff
  41286b:	jne    0x412898
  41286d:	and    DWORD PTR [ebp-0xe],0x0
  412871:	cmp    DWORD PTR [ebp-0xa],0xffffffff
  412875:	jne    0x412893
  412877:	and    DWORD PTR [ebp-0xa],0x0
  41287b:	mov    ecx,0xffff
  412880:	cmp    WORD PTR [ebp-0x6],cx
  412884:	jne    0x41288d
  412886:	mov    WORD PTR [ebp-0x6],ax
  41288a:	inc    esi
  41288b:	jmp    0x41289b
  41288d:	inc    WORD PTR [ebp-0x6]
  412891:	jmp    0x41289b
  412893:	inc    DWORD PTR [ebp-0xa]
  412896:	jmp    0x41289b
  412898:	inc    DWORD PTR [ebp-0xe]
  41289b:	mov    eax,0x7fff
  4128a0:	cmp    si,ax
  4128a3:	jb     0x4128c8
  4128a5:	xor    eax,eax
  4128a7:	xor    ecx,ecx
  4128a9:	cmp    WORD PTR [ebp-0x5c],ax
  4128ad:	mov    DWORD PTR [ebp-0x1c],eax
  4128b0:	sete   cl
  4128b3:	mov    DWORD PTR [ebp-0x20],eax
  4128b6:	dec    ecx
  4128b7:	and    ecx,0x80000000
  4128bd:	add    ecx,0x7fff8000
  4128c3:	mov    DWORD PTR [ebp-0x18],ecx
  4128c6:	jmp    0x412903
  4128c8:	mov    ax,WORD PTR [ebp-0xe]
  4128cc:	or     esi,DWORD PTR [ebp-0x5c]
  4128cf:	mov    WORD PTR [ebp-0x20],ax
  4128d3:	mov    eax,DWORD PTR [ebp-0xc]
  4128d6:	mov    DWORD PTR [ebp-0x1e],eax
  4128d9:	mov    eax,DWORD PTR [ebp-0x8]
  4128dc:	mov    DWORD PTR [ebp-0x1a],eax
  4128df:	mov    WORD PTR [ebp-0x16],si
  4128e3:	jmp    0x412903
  4128e5:	xor    eax,eax
  4128e7:	test   bx,bx
  4128ea:	sete   al
  4128ed:	and    DWORD PTR [ebp-0x1c],0x0
  4128f1:	dec    eax
  4128f2:	and    eax,0x80000000
  4128f7:	add    eax,0x7fff8000
  4128fc:	and    DWORD PTR [ebp-0x20],0x0
  412900:	mov    DWORD PTR [ebp-0x18],eax
  412903:	test   BYTE PTR [ebp+0x18],0x1
  412907:	mov    edx,DWORD PTR [ebp-0x64]
  41290a:	mov    eax,DWORD PTR [ebp-0x4c]
  41290d:	mov    edi,DWORD PTR [ebp+0x14]
  412910:	mov    WORD PTR [edx],ax
  412913:	je     0x412945
  412915:	cwde   
  412916:	add    edi,eax
  412918:	test   edi,edi
  41291a:	jg     0x412945
  41291c:	xor    eax,eax
  41291e:	mov    WORD PTR [edx],ax
  412921:	mov    eax,0x8000
  412926:	cmp    WORD PTR [ebp-0x60],ax
  41292a:	mov    WORD PTR [edx+0x3],0x3001
  412930:	setne  al
  412933:	dec    al
  412935:	and    al,0xd
  412937:	add    al,0x20
  412939:	mov    BYTE PTR [edx+0x2],al
  41293c:	mov    BYTE PTR [edx+0x5],0x0
  412940:	jmp    0x4122b8
  412945:	cmp    edi,0x15
  412948:	jle    0x41294d
  41294a:	push   0x15
  41294c:	pop    edi
  41294d:	mov    esi,DWORD PTR [ebp-0x18]
  412950:	shr    esi,0x10
  412953:	sub    esi,0x3ffe
  412959:	xor    eax,eax
  41295b:	mov    WORD PTR [ebp-0x16],ax
  41295f:	mov    DWORD PTR [ebp-0x44],0x8
  412966:	mov    eax,DWORD PTR [ebp-0x20]
  412969:	mov    ebx,DWORD PTR [ebp-0x1c]
  41296c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41296f:	shl    DWORD PTR [ebp-0x20],1
  412972:	shr    eax,0x1f
  412975:	add    ebx,ebx
  412977:	or     ebx,eax
  412979:	mov    eax,DWORD PTR [ebp-0x18]
  41297c:	shr    ecx,0x1f
  41297f:	add    eax,eax
  412981:	or     eax,ecx
  412983:	dec    DWORD PTR [ebp-0x44]
  412986:	mov    DWORD PTR [ebp-0x1c],ebx
  412989:	mov    DWORD PTR [ebp-0x18],eax
  41298c:	jne    0x412966
  41298e:	test   esi,esi
  412990:	jns    0x4129c4
  412992:	neg    esi
  412994:	and    esi,0xff
  41299a:	jle    0x4129c4
  41299c:	mov    eax,DWORD PTR [ebp-0x18]
  41299f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4129a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4129a5:	shr    DWORD PTR [ebp-0x18],1
  4129a8:	shl    eax,0x1f
  4129ab:	shr    ebx,1
  4129ad:	or     ebx,eax
  4129af:	mov    eax,DWORD PTR [ebp-0x20]
  4129b2:	shl    ecx,0x1f
  4129b5:	shr    eax,1
  4129b7:	or     eax,ecx
  4129b9:	dec    esi
  4129ba:	mov    DWORD PTR [ebp-0x1c],ebx
  4129bd:	mov    DWORD PTR [ebp-0x20],eax
  4129c0:	test   esi,esi
  4129c2:	jg     0x41299c
  4129c4:	lea    eax,[edi+0x1]
  4129c7:	lea    ebx,[edx+0x4]
  4129ca:	mov    DWORD PTR [ebp-0x40],ebx
  4129cd:	mov    DWORD PTR [ebp-0x4c],eax
  4129d0:	test   eax,eax
  4129d2:	jle    0x412a8d
  4129d8:	mov    edx,DWORD PTR [ebp-0x20]
  4129db:	mov    eax,DWORD PTR [ebp-0x1c]
  4129de:	lea    esi,[ebp-0x20]
  4129e1:	lea    edi,[ebp-0x3c]
  4129e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129e7:	shl    DWORD PTR [ebp-0x20],1
  4129ea:	mov    edi,DWORD PTR [ebp-0x20]
  4129ed:	shl    DWORD PTR [ebp-0x20],1
  4129f0:	shr    edx,0x1f
  4129f3:	lea    ecx,[eax+eax*1]
  4129f6:	or     ecx,edx
  4129f8:	mov    edx,DWORD PTR [ebp-0x18]
  4129fb:	mov    esi,eax
  4129fd:	shr    esi,0x1f
  412a00:	add    edx,edx
  412a02:	or     edx,esi
  412a04:	mov    eax,ecx
  412a06:	lea    esi,[ecx+ecx*1]
  412a09:	shr    eax,0x1f
  412a0c:	lea    ecx,[edx+edx*1]
  412a0f:	mov    edx,DWORD PTR [ebp-0x3c]
  412a12:	shr    edi,0x1f
  412a15:	or     ecx,eax
  412a17:	mov    eax,DWORD PTR [ebp-0x20]
  412a1a:	or     esi,edi
  412a1c:	lea    edi,[edx+eax*1]
  412a1f:	cmp    edi,eax
  412a21:	jb     0x412a27
  412a23:	cmp    edi,edx
  412a25:	jae    0x412a3f
  412a27:	lea    eax,[esi+0x1]
  412a2a:	xor    edx,edx
  412a2c:	cmp    eax,esi
  412a2e:	jb     0x412a35
  412a30:	cmp    eax,0x1
  412a33:	jae    0x412a38
  412a35:	xor    edx,edx
  412a37:	inc    edx
  412a38:	mov    esi,eax
  412a3a:	test   edx,edx
  412a3c:	je     0x412a3f
  412a3e:	inc    ecx
  412a3f:	mov    eax,DWORD PTR [ebp-0x38]
  412a42:	lea    edx,[eax+esi*1]
  412a45:	mov    DWORD PTR [ebp-0x44],edx
  412a48:	cmp    edx,esi
  412a4a:	jb     0x412a50
  412a4c:	cmp    edx,eax
  412a4e:	jae    0x412a51
  412a50:	inc    ecx
  412a51:	add    ecx,DWORD PTR [ebp-0x34]
  412a54:	shr    edx,0x1f
  412a57:	add    ecx,ecx
  412a59:	or     ecx,edx
  412a5b:	lea    esi,[edi+edi*1]
  412a5e:	mov    DWORD PTR [ebp-0x20],esi
  412a61:	mov    esi,DWORD PTR [ebp-0x44]
  412a64:	mov    DWORD PTR [ebp-0x18],ecx
  412a67:	shr    ecx,0x18
  412a6a:	add    esi,esi
  412a6c:	add    cl,0x30
  412a6f:	mov    eax,edi
  412a71:	shr    eax,0x1f
  412a74:	or     esi,eax
  412a76:	mov    BYTE PTR [ebx],cl
  412a78:	inc    ebx
  412a79:	dec    DWORD PTR [ebp-0x4c]
  412a7c:	cmp    DWORD PTR [ebp-0x4c],0x0
  412a80:	mov    DWORD PTR [ebp-0x1c],esi
  412a83:	mov    BYTE PTR [ebp-0x15],0x0
  412a87:	jg     0x4129d8
  412a8d:	mov    al,BYTE PTR [ebx-0x1]
  412a90:	sub    ebx,0x2
  412a93:	cmp    al,0x35
  412a95:	jge    0x412aa5
  412a97:	mov    ecx,DWORD PTR [ebp-0x40]
  412a9a:	jmp    0x412ae0
  412a9c:	cmp    BYTE PTR [ebx],0x39
  412a9f:	jne    0x412aaa
  412aa1:	mov    BYTE PTR [ebx],0x30
  412aa4:	dec    ebx
  412aa5:	cmp    ebx,DWORD PTR [ebp-0x40]
  412aa8:	jae    0x412a9c
  412aaa:	mov    eax,DWORD PTR [ebp-0x64]
  412aad:	cmp    ebx,DWORD PTR [ebp-0x40]
  412ab0:	jae    0x412ab6
  412ab2:	inc    ebx
  412ab3:	inc    WORD PTR [eax]
  412ab6:	inc    BYTE PTR [ebx]
  412ab8:	sub    bl,al
  412aba:	sub    bl,0x3
  412abd:	movsx  ecx,bl
  412ac0:	mov    BYTE PTR [eax+0x3],bl
  412ac3:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
  412ac8:	mov    eax,DWORD PTR [ebp-0x74]
  412acb:	mov    ecx,DWORD PTR [ebp-0x4]
  412ace:	pop    edi
  412acf:	pop    esi
  412ad0:	xor    ecx,ebp
  412ad2:	pop    ebx
  412ad3:	call   0x403edd
  412ad8:	leave  
  412ad9:	ret    
  412ada:	cmp    BYTE PTR [ebx],0x30
  412add:	jne    0x412ae4
  412adf:	dec    ebx
  412ae0:	cmp    ebx,ecx
  412ae2:	jae    0x412ada
  412ae4:	mov    eax,DWORD PTR [ebp-0x64]
  412ae7:	cmp    ebx,ecx
  412ae9:	jae    0x412ab8
  412aeb:	xor    edx,edx
  412aed:	mov    WORD PTR [eax],dx
  412af0:	mov    edx,0x8000
  412af5:	cmp    WORD PTR [ebp-0x60],dx
  412af9:	mov    BYTE PTR [eax+0x3],0x1
  412afd:	setne  dl
  412b00:	dec    dl
  412b02:	and    dl,0xd
  412b05:	add    dl,0x20
  412b08:	mov    BYTE PTR [eax+0x2],dl
  412b0b:	mov    BYTE PTR [ecx],0x30
  412b0e:	mov    BYTE PTR [eax+0x5],0x0
  412b12:	jmp    0x4122b8
  412b17:	xor    eax,eax
  412b19:	test   bl,0x10
  412b1c:	je     0x412b1f
  412b1e:	inc    eax
  412b1f:	test   bl,0x8
  412b22:	je     0x412b27
  412b24:	or     eax,0x4
  412b27:	test   bl,0x4
  412b2a:	je     0x412b2f
  412b2c:	or     eax,0x8
  412b2f:	test   bl,0x2
  412b32:	je     0x412b37
  412b34:	or     eax,0x10
  412b37:	test   bl,0x1
  412b3a:	je     0x412b3f
  412b3c:	or     eax,0x20
  412b3f:	test   ebx,0x80000
  412b45:	je     0x412b4a
  412b47:	or     eax,0x2
  412b4a:	mov    ecx,ebx
  412b4c:	mov    edx,0x300
  412b51:	and    ecx,edx
  412b53:	push   esi
  412b54:	mov    esi,0x200
  412b59:	je     0x412b7e
  412b5b:	cmp    ecx,0x100
  412b61:	je     0x412b79
  412b63:	cmp    ecx,esi
  412b65:	je     0x412b72
  412b67:	cmp    ecx,edx
  412b69:	jne    0x412b7e
  412b6b:	or     eax,0xc00
  412b70:	jmp    0x412b7e
  412b72:	or     eax,0x800
  412b77:	jmp    0x412b7e
  412b79:	or     eax,0x400
  412b7e:	mov    ecx,ebx
  412b80:	and    ecx,0x30000
  412b86:	je     0x412b94
  412b88:	cmp    ecx,0x10000
  412b8e:	jne    0x412b96
  412b90:	or     eax,esi
  412b92:	jmp    0x412b96
  412b94:	or     eax,edx
  412b96:	pop    esi
  412b97:	test   ebx,0x40000
  412b9d:	je     0x412ba4
  412b9f:	or     eax,0x1000
  412ba4:	ret    
  412ba5:	xor    eax,eax
  412ba7:	test   dl,0x10
  412baa:	je     0x412bb1
  412bac:	mov    eax,0x80
  412bb1:	push   ebx
  412bb2:	push   esi
  412bb3:	push   edi
  412bb4:	mov    ebx,0x200
  412bb9:	test   dl,0x8
  412bbc:	je     0x412bc0
  412bbe:	or     eax,ebx
  412bc0:	test   dl,0x4
  412bc3:	je     0x412bca
  412bc5:	or     eax,0x400
  412bca:	test   dl,0x2
  412bcd:	je     0x412bd4
  412bcf:	or     eax,0x800
  412bd4:	test   dl,0x1
  412bd7:	je     0x412bde
  412bd9:	or     eax,0x1000
  412bde:	mov    edi,0x100
  412be3:	test   edx,0x80000
  412be9:	je     0x412bed
  412beb:	or     eax,edi
  412bed:	mov    ecx,edx
  412bef:	mov    esi,0x300
  412bf4:	and    ecx,esi
  412bf6:	je     0x412c17
  412bf8:	cmp    ecx,edi
  412bfa:	je     0x412c12
  412bfc:	cmp    ecx,ebx
  412bfe:	je     0x412c0b
  412c00:	cmp    ecx,esi
  412c02:	jne    0x412c17
  412c04:	or     eax,0x6000
  412c09:	jmp    0x412c17
  412c0b:	or     eax,0x4000
  412c10:	jmp    0x412c17
  412c12:	or     eax,0x2000
  412c17:	mov    ecx,0x3000000
  412c1c:	pop    edi
  412c1d:	and    edx,ecx
  412c1f:	pop    esi
  412c20:	pop    ebx
  412c21:	cmp    edx,0x1000000
  412c27:	je     0x412c3f
  412c29:	cmp    edx,0x2000000
  412c2f:	je     0x412c3b
  412c31:	cmp    edx,ecx
  412c33:	jne    0x412c44
  412c35:	or     eax,0x8000
  412c3a:	ret    
  412c3b:	or     eax,0x40
  412c3e:	ret    
  412c3f:	or     eax,0x8040
  412c44:	ret    
  412c45:	mov    edi,edi
  412c47:	push   ebp
  412c48:	mov    ebp,esp
  412c4a:	sub    esp,0x14
  412c4d:	push   ebx
  412c4e:	push   esi
  412c4f:	push   edi
  412c50:	fstcw  WORD PTR [ebp-0x4]
  412c54:	mov    bx,WORD PTR [ebp-0x4]
  412c58:	xor    edx,edx
  412c5a:	test   bl,0x1
  412c5d:	je     0x412c62
  412c5f:	push   0x10
  412c61:	pop    edx
  412c62:	test   bl,0x4
  412c65:	je     0x412c6a
  412c67:	or     edx,0x8
  412c6a:	test   bl,0x8
  412c6d:	je     0x412c72
  412c6f:	or     edx,0x4
  412c72:	test   bl,0x10
  412c75:	je     0x412c7a
  412c77:	or     edx,0x2
  412c7a:	test   bl,0x20
  412c7d:	je     0x412c82
  412c7f:	or     edx,0x1
  412c82:	test   bl,0x2
  412c85:	je     0x412c8d
  412c87:	or     edx,0x80000
  412c8d:	movzx  ecx,bx
  412c90:	mov    eax,ecx
  412c92:	mov    esi,0xc00
  412c97:	and    eax,esi
  412c99:	mov    edi,0x300
  412c9e:	je     0x412cc4
  412ca0:	cmp    eax,0x400
  412ca5:	je     0x412cbe
  412ca7:	cmp    eax,0x800
  412cac:	je     0x412cb6
  412cae:	cmp    eax,esi
  412cb0:	jne    0x412cc4
  412cb2:	or     edx,edi
  412cb4:	jmp    0x412cc4
  412cb6:	or     edx,0x200
  412cbc:	jmp    0x412cc4
  412cbe:	or     edx,0x100
  412cc4:	and    ecx,edi
  412cc6:	je     0x412cd8
  412cc8:	cmp    ecx,0x200
  412cce:	jne    0x412cde
  412cd0:	or     edx,0x10000
  412cd6:	jmp    0x412cde
  412cd8:	or     edx,0x20000
  412cde:	movzx  eax,bx
  412ce1:	test   eax,0x1000
  412ce6:	je     0x412cee
  412ce8:	or     edx,0x40000
  412cee:	mov    edi,DWORD PTR [ebp+0xc]
  412cf1:	mov    ecx,DWORD PTR [ebp+0x8]
  412cf4:	mov    eax,edi
  412cf6:	not    eax
  412cf8:	and    eax,edx
  412cfa:	and    ecx,edi
  412cfc:	or     eax,ecx
  412cfe:	mov    DWORD PTR [ebp+0xc],eax
  412d01:	cmp    eax,edx
  412d03:	je     0x412db7
  412d09:	mov    ebx,eax
  412d0b:	call   0x412b17
  412d10:	movzx  eax,ax
  412d13:	mov    DWORD PTR [ebp-0x8],eax
  412d16:	fldcw  WORD PTR [ebp-0x8]
  412d19:	fstcw  WORD PTR [ebp-0x8]
  412d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  412d20:	xor    edx,edx
  412d22:	test   bl,0x1
  412d25:	je     0x412d2a
  412d27:	push   0x10
  412d29:	pop    edx
  412d2a:	test   bl,0x4
  412d2d:	je     0x412d32
  412d2f:	or     edx,0x8
  412d32:	test   bl,0x8
  412d35:	je     0x412d3a
  412d37:	or     edx,0x4
  412d3a:	test   bl,0x10
  412d3d:	je     0x412d42
  412d3f:	or     edx,0x2
  412d42:	test   bl,0x20
  412d45:	je     0x412d4a
  412d47:	or     edx,0x1
  412d4a:	test   bl,0x2
  412d4d:	je     0x412d55
  412d4f:	or     edx,0x80000
  412d55:	movzx  ecx,bx
  412d58:	mov    eax,ecx
  412d5a:	and    eax,esi
  412d5c:	je     0x412d86
  412d5e:	cmp    eax,0x400
  412d63:	je     0x412d80
  412d65:	cmp    eax,0x800
  412d6a:	je     0x412d78
  412d6c:	cmp    eax,esi
  412d6e:	jne    0x412d86
  412d70:	or     edx,0x300
  412d76:	jmp    0x412d86
  412d78:	or     edx,0x200
  412d7e:	jmp    0x412d86
  412d80:	or     edx,0x100
  412d86:	and    ecx,0x300
  412d8c:	je     0x412d9e
  412d8e:	cmp    ecx,0x200
  412d94:	jne    0x412da4
  412d96:	or     edx,0x10000
  412d9c:	jmp    0x412da4
  412d9e:	or     edx,0x20000
  412da4:	test   ebx,0x1000
  412daa:	je     0x412db2
  412dac:	or     edx,0x40000
  412db2:	mov    DWORD PTR [ebp+0xc],edx
  412db5:	mov    eax,edx
  412db7:	xor    esi,esi
  412db9:	cmp    DWORD PTR ds:0x45077c,esi
  412dbf:	je     0x412f52
  412dc5:	and    edi,0x308031f
  412dcb:	mov    DWORD PTR [ebp-0x14],edi
  412dce:	stmxcsr DWORD PTR [ebp-0x10]
  412dd2:	mov    eax,DWORD PTR [ebp-0x10]
  412dd5:	test   al,al
  412dd7:	jns    0x412ddc
  412dd9:	push   0x10
  412ddb:	pop    esi
  412ddc:	test   eax,0x200
  412de1:	je     0x412de6
  412de3:	or     esi,0x8
  412de6:	test   eax,0x400
  412deb:	je     0x412df0
  412ded:	or     esi,0x4
  412df0:	test   eax,0x800
  412df5:	je     0x412dfa
  412df7:	or     esi,0x2
  412dfa:	test   eax,0x1000
  412dff:	je     0x412e04
  412e01:	or     esi,0x1
  412e04:	test   eax,0x100
  412e09:	je     0x412e11
  412e0b:	or     esi,0x80000
  412e11:	mov    ecx,eax
  412e13:	mov    ebx,0x6000
  412e18:	and    ecx,ebx
  412e1a:	je     0x412e46
  412e1c:	cmp    ecx,0x2000
  412e22:	je     0x412e40
  412e24:	cmp    ecx,0x4000
  412e2a:	je     0x412e38
  412e2c:	cmp    ecx,ebx
  412e2e:	jne    0x412e46
  412e30:	or     esi,0x300
  412e36:	jmp    0x412e46
  412e38:	or     esi,0x200
  412e3e:	jmp    0x412e46
  412e40:	or     esi,0x100
  412e46:	mov    edi,0x8040
  412e4b:	and    eax,edi
  412e4d:	sub    eax,0x40
  412e50:	je     0x412e6e
  412e52:	sub    eax,0x7fc0
  412e57:	je     0x412e66
  412e59:	sub    eax,0x40
  412e5c:	jne    0x412e74
  412e5e:	or     esi,0x1000000
  412e64:	jmp    0x412e74
  412e66:	or     esi,0x3000000
  412e6c:	jmp    0x412e74
  412e6e:	or     esi,0x2000000
  412e74:	mov    eax,DWORD PTR [ebp-0x14]
  412e77:	mov    edx,eax
  412e79:	and    eax,DWORD PTR [ebp+0x8]
  412e7c:	not    edx
  412e7e:	and    edx,esi
  412e80:	or     edx,eax
  412e82:	cmp    edx,esi
  412e84:	jne    0x412e8d
  412e86:	mov    eax,esi
  412e88:	jmp    0x412f3d
  412e8d:	call   0x412ba5
  412e92:	push   eax
  412e93:	mov    DWORD PTR [ebp-0xc],eax
  412e96:	call   0x40af5e
  412e9b:	pop    ecx
  412e9c:	stmxcsr DWORD PTR [ebp-0xc]
  412ea0:	mov    ecx,DWORD PTR [ebp-0xc]
  412ea3:	xor    edx,edx
  412ea5:	test   cl,cl
  412ea7:	jns    0x412eac
  412ea9:	push   0x10
  412eab:	pop    edx
  412eac:	test   ecx,0x200
  412eb2:	je     0x412eb7
  412eb4:	or     edx,0x8
  412eb7:	test   ecx,0x400
  412ebd:	je     0x412ec2
  412ebf:	or     edx,0x4
  412ec2:	test   ecx,0x800
  412ec8:	je     0x412ecd
  412eca:	or     edx,0x2
  412ecd:	test   ecx,0x1000
  412ed3:	je     0x412ed8
  412ed5:	or     edx,0x1
  412ed8:	mov    esi,0x100
  412edd:	test   esi,ecx
  412edf:	je     0x412ee7
  412ee1:	or     edx,0x80000
  412ee7:	mov    eax,ecx
  412ee9:	and    eax,ebx
  412eeb:	je     0x412f11
  412eed:	cmp    eax,0x2000
  412ef2:	je     0x412f0f
  412ef4:	cmp    eax,0x4000
  412ef9:	je     0x412f07
  412efb:	cmp    eax,ebx
  412efd:	jne    0x412f11
  412eff:	or     edx,0x300
  412f05:	jmp    0x412f11
  412f07:	or     edx,0x200
  412f0d:	jmp    0x412f11
  412f0f:	or     edx,esi
  412f11:	and    ecx,edi
  412f13:	sub    ecx,0x40
  412f16:	je     0x412f35
  412f18:	sub    ecx,0x7fc0
  412f1e:	je     0x412f2d
  412f20:	sub    ecx,0x40
  412f23:	jne    0x412f3b
  412f25:	or     edx,0x1000000
  412f2b:	jmp    0x412f3b
  412f2d:	or     edx,0x3000000
  412f33:	jmp    0x412f3b
  412f35:	or     edx,0x2000000
  412f3b:	mov    eax,edx
  412f3d:	mov    ecx,eax
  412f3f:	xor    ecx,DWORD PTR [ebp+0xc]
  412f42:	or     eax,DWORD PTR [ebp+0xc]
  412f45:	test   ecx,0x8031f
  412f4b:	je     0x412f52
  412f4d:	or     eax,0x80000000
  412f52:	pop    edi
  412f53:	pop    esi
  412f54:	pop    ebx
  412f55:	leave  
  412f56:	ret    
  412f57:	mov    edi,edi
  412f59:	push   ebp
  412f5a:	mov    ebp,esp
  412f5c:	sub    esp,0x2c
  412f5f:	mov    eax,ds:0x44b470
  412f64:	xor    eax,ebp
  412f66:	mov    DWORD PTR [ebp-0x4],eax
  412f69:	mov    eax,DWORD PTR [ebp+0x10]
  412f6c:	push   ebx
  412f6d:	push   esi
  412f6e:	push   edi
  412f6f:	mov    edi,DWORD PTR [ebp+0x14]
  412f72:	mov    ebx,ecx
  412f74:	mov    DWORD PTR [ebp-0x24],eax
  412f77:	mov    DWORD PTR [ebp-0x20],edx
  412f7a:	test   edi,edi
  412f7c:	jle    0x412fbd
  412f7e:	mov    ecx,edi
  412f80:	dec    ecx
  412f81:	cmp    BYTE PTR [eax],0x0
  412f84:	je     0x412f8e
  412f86:	inc    eax
  412f87:	test   ecx,ecx
  412f89:	jne    0x412f80
  412f8b:	or     ecx,0xffffffff
  412f8e:	or     eax,0xffffffff
  412f91:	sub    eax,ecx
  412f93:	add    edi,eax
  412f95:	mov    DWORD PTR [ebp+0x14],edi
  412f98:	mov    esi,DWORD PTR [ebp+0x18]
  412f9b:	test   esi,esi
  412f9d:	jle    0x412fc9
  412f9f:	mov    ecx,esi
  412fa1:	mov    eax,edx
  412fa3:	dec    ecx
  412fa4:	cmp    BYTE PTR [eax],0x0
  412fa7:	je     0x412fb1
  412fa9:	inc    eax
  412faa:	test   ecx,ecx
  412fac:	jne    0x412fa3
  412fae:	or     ecx,0xffffffff
  412fb1:	or     eax,0xffffffff
  412fb4:	sub    eax,ecx
  412fb6:	add    esi,eax
  412fb8:	mov    DWORD PTR [ebp+0x18],esi
  412fbb:	jmp    0x412fce
  412fbd:	cmp    edi,0xffffffff
  412fc0:	jge    0x412f98
  412fc2:	xor    eax,eax
  412fc4:	jmp    0x4131b3
  412fc9:	cmp    esi,0xffffffff
  412fcc:	jl     0x412fc2
  412fce:	and    DWORD PTR [ebp-0x28],0x0
  412fd2:	cmp    DWORD PTR [ebp+0x1c],0x0
  412fd6:	jne    0x412fe0
  412fd8:	mov    eax,DWORD PTR [ebx]
  412fda:	mov    eax,DWORD PTR [eax+0x4]
  412fdd:	mov    DWORD PTR [ebp+0x1c],eax
  412fe0:	test   edi,edi
  412fe2:	je     0x412fec
  412fe4:	test   esi,esi
  412fe6:	jne    0x413088
  412fec:	cmp    edi,esi
  412fee:	jne    0x412ff8
  412ff0:	push   0x2
  412ff2:	pop    eax
  412ff3:	jmp    0x4131b3
  412ff8:	xor    ebx,ebx
  412ffa:	inc    ebx
  412ffb:	cmp    esi,ebx
  412ffd:	jle    0x413006
  412fff:	mov    eax,ebx
  413001:	jmp    0x4131b3
  413006:	cmp    edi,ebx
  413008:	jle    0x41300e
  41300a:	push   0x3
  41300c:	jmp    0x412ff2
  41300e:	lea    eax,[ebp-0x18]
  413011:	push   eax
  413012:	push   DWORD PTR [ebp+0x1c]
  413015:	call   DWORD PTR ds:0x44318c
  41301b:	test   eax,eax
  41301d:	je     0x412fc2
  41301f:	test   edi,edi
  413021:	jle    0x413050
  413023:	cmp    DWORD PTR [ebp-0x18],0x2
  413027:	jb     0x41300a
  413029:	cmp    BYTE PTR [ebp-0x12],0x0
  41302d:	lea    eax,[ebp-0x12]
  413030:	je     0x41300a
  413032:	mov    dl,BYTE PTR [eax+0x1]
  413035:	test   dl,dl
  413037:	je     0x41300a
  413039:	mov    ecx,DWORD PTR [ebp-0x24]
  41303c:	mov    cl,BYTE PTR [ecx]
  41303e:	cmp    cl,BYTE PTR [eax]
  413040:	jb     0x413046
  413042:	cmp    cl,dl
  413044:	jbe    0x412ff0
  413046:	add    eax,0x2
  413049:	cmp    BYTE PTR [eax],0x0
  41304c:	jne    0x413032
  41304e:	jmp    0x41300a
  413050:	test   esi,esi
  413052:	jle    0x413088
  413054:	cmp    DWORD PTR [ebp-0x18],0x2
  413058:	jb     0x412fff
  41305a:	cmp    BYTE PTR [ebp-0x12],0x0
  41305e:	lea    eax,[ebp-0x12]
  413061:	je     0x412fff
  413063:	mov    dl,BYTE PTR [eax+0x1]
  413066:	test   dl,dl
  413068:	je     0x412fff
  41306a:	mov    ecx,DWORD PTR [ebp-0x20]
  41306d:	mov    cl,BYTE PTR [ecx]
  41306f:	cmp    cl,BYTE PTR [eax]
  413071:	jb     0x41307b
  413073:	cmp    cl,dl
  413075:	jbe    0x412ff0
  41307b:	add    eax,0x2
  41307e:	cmp    BYTE PTR [eax],0x0
  413081:	jne    0x413063
  413083:	jmp    0x412fff
  413088:	mov    esi,DWORD PTR ds:0x443190
  41308e:	push   0x0
  413090:	push   0x0
  413092:	push   edi
  413093:	push   DWORD PTR [ebp-0x24]
  413096:	push   0x9
  413098:	push   DWORD PTR [ebp+0x1c]
  41309b:	call   esi
  41309d:	mov    ebx,eax
  41309f:	mov    DWORD PTR [ebp-0x2c],ebx
  4130a2:	test   ebx,ebx
  4130a4:	je     0x412fc2
  4130aa:	mov    edi,0x400
  4130af:	jle    0x4130f1
  4130b1:	push   0xffffffe0
  4130b3:	xor    edx,edx
  4130b5:	pop    eax
  4130b6:	div    ebx
  4130b8:	cmp    eax,0x2
  4130bb:	jb     0x4130f1
  4130bd:	lea    eax,[ebx+ebx*1+0x8]
  4130c1:	cmp    eax,edi
  4130c3:	ja     0x4130d8
  4130c5:	call   0x40dfc0
  4130ca:	mov    eax,esp
  4130cc:	test   eax,eax
  4130ce:	je     0x4130ec
  4130d0:	mov    DWORD PTR [eax],0xcccc
  4130d6:	jmp    0x4130e9
  4130d8:	push   eax
  4130d9:	call   0x405d80
  4130de:	pop    ecx
  4130df:	test   eax,eax
  4130e1:	je     0x4130ec
  4130e3:	mov    DWORD PTR [eax],0xdddd
  4130e9:	add    eax,0x8
  4130ec:	mov    DWORD PTR [ebp-0x1c],eax
  4130ef:	jmp    0x4130f5
  4130f1:	and    DWORD PTR [ebp-0x1c],0x0
  4130f5:	cmp    DWORD PTR [ebp-0x1c],0x0
  4130f9:	je     0x412fc2
  4130ff:	push   ebx
  413100:	push   DWORD PTR [ebp-0x1c]
  413103:	push   DWORD PTR [ebp+0x14]
  413106:	push   DWORD PTR [ebp-0x24]
  413109:	push   0x1
  41310b:	push   DWORD PTR [ebp+0x1c]
  41310e:	call   esi
  413110:	test   eax,eax
  413112:	je     0x4131a7
  413118:	push   0x0
  41311a:	push   0x0
  41311c:	push   DWORD PTR [ebp+0x18]
  41311f:	push   DWORD PTR [ebp-0x20]
  413122:	push   0x9
  413124:	push   DWORD PTR [ebp+0x1c]
  413127:	call   esi
  413129:	mov    ebx,eax
  41312b:	test   ebx,ebx
  41312d:	je     0x4131a7
  41312f:	jle    0x413170
  413131:	push   0xffffffe0
  413133:	xor    edx,edx
  413135:	pop    eax
  413136:	div    ebx
  413138:	cmp    eax,0x2
  41313b:	jb     0x413170
  41313d:	lea    eax,[ebx+ebx*1+0x8]
  413141:	cmp    eax,edi
  413143:	ja     0x413158
  413145:	call   0x40dfc0
  41314a:	mov    eax,esp
  41314c:	test   eax,eax
  41314e:	je     0x41316c
  413150:	mov    DWORD PTR [eax],0xcccc
  413156:	jmp    0x413169
  413158:	push   eax
  413159:	call   0x405d80
  41315e:	pop    ecx
  41315f:	test   eax,eax
  413161:	je     0x41316c
  413163:	mov    DWORD PTR [eax],0xdddd
  413169:	add    eax,0x8
  41316c:	mov    edi,eax
  41316e:	jmp    0x413172
  413170:	xor    edi,edi
  413172:	test   edi,edi
  413174:	je     0x4131a7
  413176:	push   ebx
  413177:	push   edi
  413178:	push   DWORD PTR [ebp+0x18]
  41317b:	push   DWORD PTR [ebp-0x20]
  41317e:	push   0x1
  413180:	push   DWORD PTR [ebp+0x1c]
  413183:	call   esi
  413185:	test   eax,eax
  413187:	je     0x4131a0
  413189:	push   ebx
  41318a:	push   edi
  41318b:	push   DWORD PTR [ebp-0x2c]
  41318e:	push   DWORD PTR [ebp-0x1c]
  413191:	push   DWORD PTR [ebp+0xc]
  413194:	push   DWORD PTR [ebp+0x8]
  413197:	call   DWORD PTR ds:0x4430f0
  41319d:	mov    DWORD PTR [ebp-0x28],eax
  4131a0:	push   edi
  4131a1:	call   0x406aec
  4131a6:	pop    ecx
  4131a7:	push   DWORD PTR [ebp-0x1c]
  4131aa:	call   0x406aec
  4131af:	mov    eax,DWORD PTR [ebp-0x28]
  4131b2:	pop    ecx
  4131b3:	lea    esp,[ebp-0x38]
  4131b6:	pop    edi
  4131b7:	pop    esi
  4131b8:	pop    ebx
  4131b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4131bc:	xor    ecx,ebp
  4131be:	call   0x403edd
  4131c3:	leave  
  4131c4:	ret    
  4131c5:	mov    edi,edi
  4131c7:	push   ebp
  4131c8:	mov    ebp,esp
  4131ca:	sub    esp,0x10
  4131cd:	push   DWORD PTR [ebp+0x8]
  4131d0:	lea    ecx,[ebp-0x10]
  4131d3:	call   0x406b0c
  4131d8:	push   DWORD PTR [ebp+0x24]
  4131db:	mov    edx,DWORD PTR [ebp+0x1c]
  4131de:	push   DWORD PTR [ebp+0x20]
  4131e1:	lea    ecx,[ebp-0x10]
  4131e4:	push   DWORD PTR [ebp+0x18]
  4131e7:	push   DWORD PTR [ebp+0x14]
  4131ea:	push   DWORD PTR [ebp+0x10]
  4131ed:	push   DWORD PTR [ebp+0xc]
  4131f0:	call   0x412f57
  4131f5:	add    esp,0x18
  4131f8:	cmp    BYTE PTR [ebp-0x4],0x0
  4131fc:	je     0x413205
  4131fe:	mov    ecx,DWORD PTR [ebp-0x8]
  413201:	and    DWORD PTR [ecx+0x70],0xfffffffd
  413205:	leave  
  413206:	ret    
  413207:	mov    edi,edi
  413209:	push   ebp
  41320a:	mov    ebp,esp
  41320c:	sub    esp,0x10
  41320f:	push   ebx
  413210:	push   DWORD PTR [ebp+0x14]
  413213:	lea    ecx,[ebp-0x10]
  413216:	call   0x406b0c
  41321b:	mov    edx,DWORD PTR [ebp+0x10]
  41321e:	xor    ebx,ebx
  413220:	cmp    edx,ebx
  413222:	jne    0x413237
  413224:	cmp    BYTE PTR [ebp-0x4],bl
  413227:	je     0x413230
  413229:	mov    eax,DWORD PTR [ebp-0x8]
  41322c:	and    DWORD PTR [eax+0x70],0xfffffffd
  413230:	xor    eax,eax
  413232:	jmp    0x4132ee
  413237:	cmp    DWORD PTR [ebp+0x8],ebx
  41323a:	jne    0x413262
  41323c:	call   0x40769b
  413241:	mov    DWORD PTR [eax],0x16
  413247:	call   0x407649
  41324c:	cmp    BYTE PTR [ebp-0x4],bl
  41324f:	je     0x413258
  413251:	mov    eax,DWORD PTR [ebp-0x8]
  413254:	and    DWORD PTR [eax+0x70],0xfffffffd
  413258:	mov    eax,0x7fffffff
  41325d:	jmp    0x4132ee
  413262:	cmp    DWORD PTR [ebp+0xc],ebx
  413265:	je     0x41323c
  413267:	push   esi
  413268:	mov    esi,0x7fffffff
  41326d:	cmp    edx,esi
  41326f:	jbe    0x413283
  413271:	call   0x40769b
  413276:	mov    DWORD PTR [eax],0x16
  41327c:	call   0x407649
  413281:	jmp    0x4132ce
  413283:	mov    eax,DWORD PTR [ebp-0x10]
  413286:	mov    ecx,DWORD PTR [eax+0x10]
  413289:	cmp    ecx,ebx
  41328b:	jne    0x4132a2
  41328d:	lea    eax,[ebp-0x10]
  413290:	push   eax
  413291:	push   edx
  413292:	push   DWORD PTR [ebp+0xc]
  413295:	push   DWORD PTR [ebp+0x8]
  413298:	call   0x410257
  41329d:	add    esp,0x10
  4132a0:	jmp    0x4132e1
  4132a2:	push   DWORD PTR [eax+0x8]
  4132a5:	lea    eax,[ebp-0x10]
  4132a8:	push   edx
  4132a9:	push   DWORD PTR [ebp+0xc]
  4132ac:	push   edx
  4132ad:	push   DWORD PTR [ebp+0x8]
  4132b0:	push   0x1001
  4132b5:	push   ecx
  4132b6:	push   eax
  4132b7:	call   0x4131c5
  4132bc:	add    esp,0x20
  4132bf:	cmp    eax,ebx
  4132c1:	jne    0x4132de
  4132c3:	call   0x40769b
  4132c8:	mov    DWORD PTR [eax],0x16
  4132ce:	cmp    BYTE PTR [ebp-0x4],bl
  4132d1:	je     0x4132da
  4132d3:	mov    eax,DWORD PTR [ebp-0x8]
  4132d6:	and    DWORD PTR [eax+0x70],0xfffffffd
  4132da:	mov    eax,esi
  4132dc:	jmp    0x4132ed
  4132de:	add    eax,0xfffffffe
  4132e1:	cmp    BYTE PTR [ebp-0x4],bl
  4132e4:	je     0x4132ed
  4132e6:	mov    ecx,DWORD PTR [ebp-0x8]
  4132e9:	and    DWORD PTR [ecx+0x70],0xfffffffd
  4132ed:	pop    esi
  4132ee:	pop    ebx
  4132ef:	leave  
  4132f0:	ret    
  4132f1:	mov    edi,edi
  4132f3:	push   ebp
  4132f4:	mov    ebp,esp
  4132f6:	push   esi
  4132f7:	mov    esi,DWORD PTR ds:0x44ddfc
  4132fd:	jmp    0x413320
  4132ff:	push   edi
  413300:	push   eax
  413301:	push   DWORD PTR [ebp+0x8]
  413304:	call   0x410f8c
  413309:	add    esp,0xc
  41330c:	test   eax,eax
  41330e:	jne    0x41331d
  413310:	mov    eax,DWORD PTR [esi]
  413312:	mov    al,BYTE PTR [edi+eax*1]
  413315:	cmp    al,0x3d
  413317:	je     0x413336
  413319:	test   al,al
  41331b:	je     0x413336
  41331d:	add    esi,0x4
  413320:	mov    eax,DWORD PTR [esi]
  413322:	test   eax,eax
  413324:	jne    0x4132ff
  413326:	mov    eax,esi
  413328:	sub    eax,DWORD PTR ds:0x44ddfc
  41332e:	sar    eax,0x2
  413331:	neg    eax
  413333:	pop    esi
  413334:	pop    ebp
  413335:	ret    
  413336:	mov    eax,esi
  413338:	sub    eax,DWORD PTR ds:0x44ddfc
  41333e:	sar    eax,0x2
  413341:	jmp    0x413333
  413343:	mov    edi,edi
  413345:	push   ebp
  413346:	mov    ebp,esp
  413348:	push   ecx
  413349:	push   edi
  41334a:	mov    edi,eax
  41334c:	xor    eax,eax
  41334e:	mov    ecx,edi
  413350:	test   edi,edi
  413352:	je     0x4133a0
  413354:	cmp    DWORD PTR [edi],eax
  413356:	je     0x413361
  413358:	add    ecx,0x4
  41335b:	inc    eax
  41335c:	cmp    DWORD PTR [ecx],0x0
  41335f:	jne    0x413358
  413361:	push   esi
  413362:	inc    eax
  413363:	push   0x4
  413365:	push   eax
  413366:	call   0x406eaa
  41336b:	mov    esi,eax
  41336d:	pop    ecx
  41336e:	pop    ecx
  41336f:	mov    DWORD PTR [ebp-0x4],esi
  413372:	test   esi,esi
  413374:	jne    0x41337e
  413376:	push   0x9
  413378:	call   0x407dd8
  41337d:	pop    ecx
  41337e:	mov    eax,DWORD PTR [edi]
  413380:	test   eax,eax
  413382:	je     0x413399
  413384:	sub    edi,esi
  413386:	push   eax
  413387:	call   0x4137c9
  41338c:	mov    DWORD PTR [esi],eax
  41338e:	add    esi,0x4
  413391:	mov    eax,DWORD PTR [edi+esi*1]
  413394:	pop    ecx
  413395:	test   eax,eax
  413397:	jne    0x413386
  413399:	and    DWORD PTR [esi],0x0
  41339c:	mov    eax,DWORD PTR [ebp-0x4]
  41339f:	pop    esi
  4133a0:	pop    edi
  4133a1:	leave  
  4133a2:	ret    
  4133a3:	mov    edi,edi
  4133a5:	push   ebp
  4133a6:	mov    ebp,esp
  4133a8:	sub    esp,0x14
  4133ab:	mov    eax,DWORD PTR [ebp+0x8]
  4133ae:	push   ebx
  4133af:	xor    ebx,ebx
  4133b1:	mov    DWORD PTR [ebp-0xc],ebx
  4133b4:	cmp    eax,ebx
  4133b6:	jne    0x4133cd
  4133b8:	call   0x40769b
  4133bd:	mov    DWORD PTR [eax],0x16
  4133c3:	call   0x407649
  4133c8:	or     eax,0xffffffff
  4133cb:	jmp    0x41343b
  4133cd:	push   esi
  4133ce:	mov    esi,DWORD PTR [eax]
  4133d0:	push   edi
  4133d1:	mov    DWORD PTR [ebp-0x4],esi
  4133d4:	cmp    esi,ebx
  4133d6:	je     0x41342b
  4133d8:	push   0x3d
  4133da:	push   esi
  4133db:	call   0x4138cb
  4133e0:	mov    edi,eax
  4133e2:	pop    ecx
  4133e3:	pop    ecx
  4133e4:	mov    DWORD PTR [ebp-0x14],edi
  4133e7:	cmp    edi,ebx
  4133e9:	je     0x41342b
  4133eb:	cmp    esi,edi
  4133ed:	je     0x41342b
  4133ef:	xor    eax,eax
  4133f1:	cmp    BYTE PTR [edi+0x1],bl
  4133f4:	sete   al
  4133f7:	mov    DWORD PTR [ebp-0x8],eax
  4133fa:	mov    eax,ds:0x44ddfc
  4133ff:	cmp    eax,DWORD PTR ds:0x44de00
  413405:	jne    0x413411
  413407:	call   0x413343
  41340c:	mov    ds:0x44ddfc,eax
  413411:	cmp    eax,ebx
  413413:	jne    0x413475
  413415:	cmp    DWORD PTR [ebp+0xc],ebx
  413418:	je     0x41343e
  41341a:	cmp    DWORD PTR ds:0x44de04,ebx
  413420:	je     0x41343e
  413422:	call   0x410fa6
  413427:	test   eax,eax
  413429:	je     0x413475
  41342b:	call   0x40769b
  413430:	mov    DWORD PTR [eax],0x16
  413436:	or     eax,0xffffffff
  413439:	pop    edi
  41343a:	pop    esi
  41343b:	pop    ebx
  41343c:	leave  
  41343d:	ret    
  41343e:	cmp    DWORD PTR [ebp-0x8],ebx
  413441:	jne    0x4135de
  413447:	push   0x4
  413449:	call   0x406e65
  41344e:	pop    ecx
  41344f:	mov    ds:0x44ddfc,eax
  413454:	cmp    eax,ebx
  413456:	je     0x413436
  413458:	mov    DWORD PTR [eax],ebx
  41345a:	cmp    DWORD PTR ds:0x44de04,ebx
  413460:	jne    0x413475
  413462:	push   0x4
  413464:	call   0x406e65
  413469:	pop    ecx
  41346a:	mov    ds:0x44de04,eax
  41346f:	cmp    eax,ebx
  413471:	je     0x413436
  413473:	mov    DWORD PTR [eax],ebx
  413475:	mov    esi,DWORD PTR ds:0x44ddfc
  41347b:	mov    DWORD PTR [ebp-0x10],esi
  41347e:	cmp    esi,ebx
  413480:	je     0x413436
  413482:	sub    edi,DWORD PTR [ebp-0x4]
  413485:	push   DWORD PTR [ebp-0x4]
  413488:	call   0x4132f1
  41348d:	mov    edi,eax
  41348f:	pop    ecx
  413490:	cmp    edi,ebx
  413492:	jl     0x4134e6
  413494:	cmp    DWORD PTR [esi],ebx
  413496:	je     0x4134e6
  413498:	lea    esi,[esi+edi*4]
  41349b:	push   DWORD PTR [esi]
  41349d:	call   0x404391
  4134a2:	pop    ecx
  4134a3:	cmp    DWORD PTR [ebp-0x8],ebx
  4134a6:	jne    0x4134c3
  4134a8:	mov    eax,DWORD PTR [ebp-0x4]
  4134ab:	mov    DWORD PTR [esi],eax
  4134ad:	mov    eax,DWORD PTR [ebp+0x8]
  4134b0:	mov    DWORD PTR [eax],ebx
  4134b2:	jmp    0x413539
  4134b7:	mov    eax,DWORD PTR [esi+0x4]
  4134ba:	mov    DWORD PTR [esi],eax
  4134bc:	mov    eax,DWORD PTR [ebp-0x10]
  4134bf:	inc    edi
  4134c0:	lea    esi,[eax+edi*4]
  4134c3:	cmp    DWORD PTR [esi],ebx
  4134c5:	jne    0x4134b7
  4134c7:	cmp    edi,0x3fffffff
  4134cd:	jae    0x413539
  4134cf:	push   0x4
  4134d1:	push   edi
  4134d2:	push   DWORD PTR ds:0x44ddfc
  4134d8:	call   0x406f44
  4134dd:	add    esp,0xc
  4134e0:	cmp    eax,ebx
  4134e2:	je     0x413539
  4134e4:	jmp    0x413534
  4134e6:	cmp    DWORD PTR [ebp-0x8],ebx
  4134e9:	jne    0x4135d0
  4134ef:	cmp    edi,ebx
  4134f1:	jge    0x4134f5
  4134f3:	neg    edi
  4134f5:	lea    eax,[edi+0x2]
  4134f8:	cmp    eax,edi
  4134fa:	jl     0x413436
  413500:	cmp    eax,0x3fffffff
  413505:	jae    0x413436
  41350b:	push   eax
  41350c:	push   0x4
  41350e:	push   DWORD PTR ds:0x44ddfc
  413514:	call   0x406f44
  413519:	add    esp,0xc
  41351c:	cmp    eax,ebx
  41351e:	je     0x413436
  413524:	mov    edx,DWORD PTR [ebp-0x4]
  413527:	lea    ecx,[eax+edi*4]
  41352a:	mov    DWORD PTR [ecx],edx
  41352c:	mov    DWORD PTR [ecx+0x4],ebx
  41352f:	mov    ecx,DWORD PTR [ebp+0x8]
  413532:	mov    DWORD PTR [ecx],ebx
  413534:	mov    ds:0x44ddfc,eax
  413539:	cmp    DWORD PTR [ebp+0xc],ebx
  41353c:	je     0x4135ab
  41353e:	mov    esi,DWORD PTR [ebp-0x4]
  413541:	push   0x1
  413543:	push   esi
  413544:	call   0x405450
  413549:	pop    ecx
  41354a:	add    eax,0x2
  41354d:	push   eax
  41354e:	call   0x406eaa
  413553:	mov    edi,eax
  413555:	pop    ecx
  413556:	pop    ecx
  413557:	cmp    edi,ebx
  413559:	je     0x4135ab
  41355b:	push   esi
  41355c:	push   esi
  41355d:	call   0x405450
  413562:	pop    ecx
  413563:	add    eax,0x2
  413566:	push   eax
  413567:	push   edi
  413568:	call   0x4078df
  41356d:	add    esp,0xc
  413570:	test   eax,eax
  413572:	jne    0x4135c6
  413574:	mov    ecx,DWORD PTR [ebp-0x8]
  413577:	mov    eax,edi
  413579:	sub    eax,esi
  41357b:	add    eax,DWORD PTR [ebp-0x14]
  41357e:	mov    BYTE PTR [eax],bl
  413580:	inc    eax
  413581:	neg    ecx
  413583:	sbb    ecx,ecx
  413585:	not    ecx
  413587:	and    ecx,eax
  413589:	push   ecx
  41358a:	push   edi
  41358b:	call   DWORD PTR ds:0x44315c
  413591:	test   eax,eax
  413593:	jne    0x4135a4
  413595:	or     DWORD PTR [ebp-0xc],0xffffffff
  413599:	call   0x40769b
  41359e:	mov    DWORD PTR [eax],0x2a
  4135a4:	push   edi
  4135a5:	call   0x404391
  4135aa:	pop    ecx
  4135ab:	cmp    DWORD PTR [ebp-0x8],ebx
  4135ae:	je     0x4135be
  4135b0:	push   DWORD PTR [ebp-0x4]
  4135b3:	call   0x404391
  4135b8:	mov    eax,DWORD PTR [ebp+0x8]
  4135bb:	pop    ecx
  4135bc:	mov    DWORD PTR [eax],ebx
  4135be:	mov    eax,DWORD PTR [ebp-0xc]
  4135c1:	jmp    0x413439
  4135c6:	push   ebx
  4135c7:	push   ebx
  4135c8:	push   ebx
  4135c9:	push   ebx
  4135ca:	push   ebx
  4135cb:	call   0x4075f7
  4135d0:	push   DWORD PTR [ebp-0x4]
  4135d3:	call   0x404391
  4135d8:	mov    eax,DWORD PTR [ebp+0x8]
  4135db:	pop    ecx
  4135dc:	mov    DWORD PTR [eax],ebx
  4135de:	xor    eax,eax
  4135e0:	jmp    0x413439
  4135e5:	mov    edi,edi
  4135e7:	push   ebp
  4135e8:	mov    ebp,esp
  4135ea:	sub    esp,0x18
  4135ed:	mov    eax,DWORD PTR [ebp+0x10]
  4135f0:	push   ebx
  4135f1:	xor    ebx,ebx
  4135f3:	push   esi
  4135f4:	push   edi
  4135f5:	mov    DWORD PTR [ebp-0x4],0x404e
  4135fc:	mov    DWORD PTR [eax],ebx
  4135fe:	mov    DWORD PTR [eax+0x4],ebx
  413601:	mov    DWORD PTR [eax+0x8],ebx
  413604:	cmp    DWORD PTR [ebp+0xc],ebx
  413607:	jbe    0x413752
  41360d:	xor    ecx,ecx
  41360f:	mov    DWORD PTR [ebp+0x10],ebx
  413612:	mov    esi,eax
  413614:	lea    edi,[ebp-0x18]
  413617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41361a:	mov    edx,ecx
  41361c:	lea    edi,[ecx+ecx*1]
  41361f:	shr    edx,0x1f
  413622:	lea    ecx,[ebx+ebx*1]
  413625:	or     ecx,edx
  413627:	mov    edx,DWORD PTR [ebp+0x10]
  41362a:	and    DWORD PTR [ebp+0x10],0x0
  41362e:	mov    esi,ebx
  413630:	mov    ebx,ecx
  413632:	mov    DWORD PTR [ebp-0x8],edi
  413635:	shr    esi,0x1f
  413638:	add    edx,edx
  41363a:	or     edx,esi
  41363c:	mov    esi,DWORD PTR [ebp-0x8]
  41363f:	add    ecx,ecx
  413641:	shr    edi,0x1f
  413644:	or     ecx,edi
  413646:	mov    edi,ecx
  413648:	mov    DWORD PTR [ebp-0x8],ecx
  41364b:	lea    ecx,[edx+edx*1]
  41364e:	mov    edx,DWORD PTR [ebp-0x18]
  413651:	add    esi,esi
  413653:	shr    ebx,0x1f
  413656:	or     ecx,ebx
  413658:	add    edx,esi
  41365a:	mov    DWORD PTR [eax],esi
  41365c:	mov    DWORD PTR [eax+0x4],edi
  41365f:	mov    DWORD PTR [eax+0x8],ecx
  413662:	cmp    edx,esi
  413664:	jb     0x41366b
  413666:	cmp    edx,DWORD PTR [ebp-0x18]
  413669:	jae    0x413672
  41366b:	mov    DWORD PTR [ebp+0x10],0x1
  413672:	cmp    DWORD PTR [ebp+0x10],0x0
  413676:	mov    DWORD PTR [eax],edx
  413678:	je     0x4136a1
  41367a:	mov    esi,DWORD PTR [ebp-0x8]
  41367d:	and    DWORD PTR [ebp+0x10],0x0
  413681:	lea    edi,[esi+0x1]
  413684:	cmp    edi,esi
  413686:	jb     0x41368d
  413688:	cmp    edi,0x1
  41368b:	jae    0x413694
  41368d:	mov    DWORD PTR [ebp+0x10],0x1
  413694:	cmp    DWORD PTR [ebp+0x10],0x0
  413698:	mov    DWORD PTR [eax+0x4],edi
  41369b:	je     0x4136a1
  41369d:	inc    ecx
  41369e:	mov    DWORD PTR [eax+0x8],ecx
  4136a1:	mov    esi,DWORD PTR [ebp-0x14]
  4136a4:	and    DWORD PTR [ebp+0x10],0x0
  4136a8:	lea    ebx,[edi+esi*1]
  4136ab:	cmp    ebx,edi
  4136ad:	jb     0x4136b3
  4136af:	cmp    ebx,esi
  4136b1:	jae    0x4136ba
  4136b3:	mov    DWORD PTR [ebp+0x10],0x1
  4136ba:	cmp    DWORD PTR [ebp+0x10],0x0
  4136be:	mov    DWORD PTR [eax+0x4],ebx
  4136c1:	je     0x4136c7
  4136c3:	inc    ecx
  4136c4:	mov    DWORD PTR [eax+0x8],ecx
  4136c7:	add    ecx,DWORD PTR [ebp-0x10]
  4136ca:	and    DWORD PTR [ebp-0x8],0x0
  4136ce:	mov    edi,ebx
  4136d0:	add    ecx,ecx
  4136d2:	mov    esi,edx
  4136d4:	shr    edi,0x1f
  4136d7:	or     ecx,edi
  4136d9:	shr    esi,0x1f
  4136dc:	add    ebx,ebx
  4136de:	add    edx,edx
  4136e0:	or     ebx,esi
  4136e2:	mov    DWORD PTR [eax+0x8],ecx
  4136e5:	mov    DWORD PTR [ebp-0xc],ecx
  4136e8:	mov    DWORD PTR [ebp+0x10],ecx
  4136eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4136ee:	mov    DWORD PTR [eax],edx
  4136f0:	mov    DWORD PTR [eax+0x4],ebx
  4136f3:	movsx  esi,BYTE PTR [ecx]
  4136f6:	lea    ecx,[edx+esi*1]
  4136f9:	mov    DWORD PTR [ebp-0x18],esi
  4136fc:	cmp    ecx,edx
  4136fe:	jb     0x413704
  413700:	cmp    ecx,esi
  413702:	jae    0x41370b
  413704:	mov    DWORD PTR [ebp-0x8],0x1
  41370b:	cmp    DWORD PTR [ebp-0x8],0x0
  41370f:	mov    DWORD PTR [eax],ecx
  413711:	je     0x413737
  413713:	lea    edx,[ebx+0x1]
  413716:	xor    esi,esi
  413718:	cmp    edx,ebx
  41371a:	jb     0x413721
  41371c:	cmp    edx,0x1
  41371f:	jae    0x413724
  413721:	xor    esi,esi
  413723:	inc    esi
  413724:	mov    ebx,edx
  413726:	mov    DWORD PTR [eax+0x4],edx
  413729:	test   esi,esi
  41372b:	je     0x413737
  41372d:	mov    edx,DWORD PTR [ebp-0xc]
  413730:	inc    edx
  413731:	mov    DWORD PTR [ebp+0x10],edx
  413734:	mov    DWORD PTR [eax+0x8],edx
  413737:	dec    DWORD PTR [ebp+0xc]
  41373a:	mov    edx,DWORD PTR [ebp+0x10]
  41373d:	inc    DWORD PTR [ebp+0x8]
  413740:	cmp    DWORD PTR [ebp+0xc],0x0
  413744:	mov    DWORD PTR [eax+0x4],ebx
  413747:	mov    DWORD PTR [eax+0x8],edx
  41374a:	ja     0x413612
  413750:	xor    ebx,ebx
  413752:	cmp    DWORD PTR [eax+0x8],ebx
  413755:	jne    0x413781
  413757:	mov    edx,DWORD PTR [eax+0x4]
  41375a:	mov    ecx,DWORD PTR [eax]
  41375c:	add    DWORD PTR [ebp-0x4],0xfff0
  413763:	mov    edi,edx
  413765:	mov    esi,ecx
  413767:	shr    esi,0x10
  41376a:	shl    edx,0x10
  41376d:	shr    edi,0x10
  413770:	or     edx,esi
  413772:	shl    ecx,0x10
  413775:	mov    DWORD PTR [eax+0x4],edx
  413778:	mov    DWORD PTR [eax],ecx
  41377a:	cmp    edi,ebx
  41377c:	je     0x41375a
  41377e:	mov    DWORD PTR [eax+0x8],edi
  413781:	mov    edi,DWORD PTR [eax+0x8]
  413784:	test   edi,0x8000
  41378a:	jne    0x4137bc
  41378c:	mov    ecx,DWORD PTR [eax+0x4]
  41378f:	mov    ebx,DWORD PTR [eax]
  413791:	add    DWORD PTR [ebp-0x4],0xffff
  413798:	mov    esi,ecx
  41379a:	mov    edx,ebx
  41379c:	shr    esi,0x1f
  41379f:	add    edi,edi
  4137a1:	shr    edx,0x1f
  4137a4:	add    ecx,ecx
  4137a6:	or     edi,esi
  4137a8:	add    ebx,ebx
  4137aa:	or     ecx,edx
  4137ac:	mov    DWORD PTR [eax],ebx
  4137ae:	mov    DWORD PTR [eax+0x4],ecx
  4137b1:	mov    DWORD PTR [eax+0x8],edi
  4137b4:	test   edi,0x8000
  4137ba:	je     0x41378f
  4137bc:	mov    cx,WORD PTR [ebp-0x4]
  4137c0:	pop    edi
  4137c1:	pop    esi
  4137c2:	mov    WORD PTR [eax+0xa],cx
  4137c6:	pop    ebx
  4137c7:	leave  
  4137c8:	ret    
  4137c9:	mov    edi,edi
  4137cb:	push   ebp
  4137cc:	mov    ebp,esp
  4137ce:	push   ebx
  4137cf:	xor    ebx,ebx
  4137d1:	cmp    DWORD PTR [ebp+0x8],ebx
  4137d4:	jne    0x4137da
  4137d6:	xor    eax,eax
  4137d8:	jmp    0x413818
  4137da:	push   esi
  4137db:	push   edi
  4137dc:	push   DWORD PTR [ebp+0x8]
  4137df:	call   0x405450
  4137e4:	lea    esi,[eax+0x1]
  4137e7:	push   esi
  4137e8:	call   0x405d80
  4137ed:	mov    edi,eax
  4137ef:	pop    ecx
  4137f0:	pop    ecx
  4137f1:	cmp    edi,ebx
  4137f3:	je     0x413814
  4137f5:	push   DWORD PTR [ebp+0x8]
  4137f8:	push   esi
  4137f9:	push   edi
  4137fa:	call   0x4078df
  4137ff:	add    esp,0xc
  413802:	test   eax,eax
  413804:	jne    0x41380a
  413806:	mov    eax,edi
  413808:	jmp    0x413816
  41380a:	push   ebx
  41380b:	push   ebx
  41380c:	push   ebx
  41380d:	push   ebx
  41380e:	push   ebx
  41380f:	call   0x4075f7
  413814:	xor    eax,eax
  413816:	pop    edi
  413817:	pop    esi
  413818:	pop    ebx
  413819:	pop    ebp
  41381a:	ret    
  41381b:	mov    edi,edi
  41381d:	push   ebp
  41381e:	mov    ebp,esp
  413820:	sub    esp,0x10
  413823:	push   ebx
  413824:	push   DWORD PTR [ebp+0x10]
  413827:	lea    ecx,[ebp-0x10]
  41382a:	call   0x406b0c
  41382f:	mov    eax,DWORD PTR [ebp+0x8]
  413832:	xor    ebx,ebx
  413834:	cmp    eax,ebx
  413836:	jne    0x413858
  413838:	call   0x40769b
  41383d:	mov    DWORD PTR [eax],0x16
  413843:	call   0x407649
  413848:	cmp    BYTE PTR [ebp-0x4],bl
  41384b:	je     0x413854
  41384d:	mov    eax,DWORD PTR [ebp-0x8]
  413850:	and    DWORD PTR [eax+0x70],0xfffffffd
  413854:	xor    eax,eax
  413856:	jmp    0x4138c8
  413858:	push   esi
  413859:	mov    esi,DWORD PTR [ebp-0xc]
  41385c:	cmp    DWORD PTR [esi+0x8],ebx
  41385f:	jne    0x41389b
  413861:	push   DWORD PTR [ebp+0xc]
  413864:	push   eax
  413865:	call   0x413900
  41386a:	pop    ecx
  41386b:	pop    ecx
  41386c:	jmp    0x4138ab
  41386e:	movzx  edx,cl
  413871:	test   BYTE PTR [edx+esi*1+0x1d],0x4
  413876:	je     0x413892
  413878:	inc    eax
  413879:	mov    dl,BYTE PTR [eax]
  41387b:	cmp    dl,bl
  41387d:	je     0x4138b9
  41387f:	movzx  ecx,cx
  413882:	movzx  edx,dl
  413885:	shl    ecx,0x8
  413888:	or     ecx,edx
  41388a:	cmp    DWORD PTR [ebp+0xc],ecx
  41388d:	jne    0x41389a
  41388f:	dec    eax
  413890:	jmp    0x4138ab
  413892:	movzx  edx,cx
  413895:	cmp    DWORD PTR [ebp+0xc],edx
  413898:	je     0x4138a3
  41389a:	inc    eax
  41389b:	movzx  ecx,BYTE PTR [eax]
  41389e:	cmp    cx,bx
  4138a1:	jne    0x41386e
  4138a3:	movzx  ecx,cx
  4138a6:	cmp    DWORD PTR [ebp+0xc],ecx
  4138a9:	jne    0x4138b9
  4138ab:	cmp    BYTE PTR [ebp-0x4],bl
  4138ae:	je     0x4138c7
  4138b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138b3:	and    DWORD PTR [ecx+0x70],0xfffffffd
  4138b7:	jmp    0x4138c7
  4138b9:	cmp    BYTE PTR [ebp-0x4],bl
  4138bc:	je     0x4138c5
  4138be:	mov    eax,DWORD PTR [ebp-0x8]
  4138c1:	and    DWORD PTR [eax+0x70],0xfffffffd
  4138c5:	xor    eax,eax
  4138c7:	pop    esi
  4138c8:	pop    ebx
  4138c9:	leave  
  4138ca:	ret    
  4138cb:	mov    edi,edi
  4138cd:	push   ebp
  4138ce:	mov    ebp,esp
  4138d0:	push   0x0
  4138d2:	push   DWORD PTR [ebp+0xc]
  4138d5:	push   DWORD PTR [ebp+0x8]
  4138d8:	call   0x41381b
  4138dd:	add    esp,0xc
  4138e0:	pop    ebp
  4138e1:	ret    
  4138e2:	int3   
  4138e3:	int3   
  4138e4:	int3   
  4138e5:	int3   
  4138e6:	int3   
  4138e7:	int3   
  4138e8:	int3   
  4138e9:	int3   
  4138ea:	int3   
  4138eb:	int3   
  4138ec:	int3   
  4138ed:	int3   
  4138ee:	int3   
  4138ef:	int3   
  4138f0:	lea    eax,[edx-0x1]
  4138f3:	pop    ebx
  4138f4:	ret    
  4138f5:	lea    esp,[esp+0x0]
  4138fc:	lea    esp,[esp+0x0]
  413900:	xor    eax,eax
  413902:	mov    al,BYTE PTR [esp+0x8]
  413906:	push   ebx
  413907:	mov    ebx,eax
  413909:	shl    eax,0x8
  41390c:	mov    edx,DWORD PTR [esp+0x8]
  413910:	test   edx,0x3
  413916:	je     0x41392d
  413918:	mov    cl,BYTE PTR [edx]
  41391a:	add    edx,0x1
  41391d:	cmp    cl,bl
  41391f:	je     0x4138f0
  413921:	test   cl,cl
  413923:	je     0x413976
  413925:	test   edx,0x3
  41392b:	jne    0x413918
  41392d:	or     ebx,eax
  41392f:	push   edi
  413930:	mov    eax,ebx
  413932:	shl    ebx,0x10
  413935:	push   esi
  413936:	or     ebx,eax
  413938:	mov    ecx,DWORD PTR [edx]
  41393a:	mov    edi,0x7efefeff
  41393f:	mov    eax,ecx
  413941:	mov    esi,edi
  413943:	xor    ecx,ebx
  413945:	add    esi,eax
  413947:	add    edi,ecx
  413949:	xor    ecx,0xffffffff
  41394c:	xor    eax,0xffffffff
  41394f:	xor    ecx,edi
  413951:	xor    eax,esi
  413953:	add    edx,0x4
  413956:	and    ecx,0x81010100
  41395c:	jne    0x41397a
  41395e:	and    eax,0x81010100
  413963:	je     0x413938
  413965:	and    eax,0x1010100
  41396a:	jne    0x413974
  41396c:	and    esi,0x80000000
  413972:	jne    0x413938
  413974:	pop    esi
  413975:	pop    edi
  413976:	pop    ebx
  413977:	xor    eax,eax
  413979:	ret    
  41397a:	mov    eax,DWORD PTR [edx-0x4]
  41397d:	cmp    al,bl
  41397f:	je     0x4139b7
  413981:	test   al,al
  413983:	je     0x413974
  413985:	cmp    ah,bl
  413987:	je     0x4139b0
  413989:	test   ah,ah
  41398b:	je     0x413974
  41398d:	shr    eax,0x10
  413990:	cmp    al,bl
  413992:	je     0x4139a9
  413994:	test   al,al
  413996:	je     0x413974
  413998:	cmp    ah,bl
  41399a:	je     0x4139a2
  41399c:	test   ah,ah
  41399e:	je     0x413974
  4139a0:	jmp    0x413938
  4139a2:	pop    esi
  4139a3:	pop    edi
  4139a4:	lea    eax,[edx-0x1]
  4139a7:	pop    ebx
  4139a8:	ret    
  4139a9:	lea    eax,[edx-0x2]
  4139ac:	pop    esi
  4139ad:	pop    edi
  4139ae:	pop    ebx
  4139af:	ret    
  4139b0:	lea    eax,[edx-0x3]
  4139b3:	pop    esi
  4139b4:	pop    edi
  4139b5:	pop    ebx
  4139b6:	ret    
  4139b7:	lea    eax,[edx-0x4]
  4139ba:	pop    esi
  4139bb:	pop    edi
  4139bc:	pop    ebx
  4139bd:	ret    
  4139be:	jmp    DWORD PTR ds:0x44319c
  4139c4:	int3   
  4139c5:	int3   
  4139c6:	int3   
  4139c7:	int3   
  4139c8:	int3   
  4139c9:	int3   
  4139ca:	int3   
  4139cb:	int3   
  4139cc:	int3   
  4139cd:	int3   
  4139ce:	int3   
  4139cf:	int3   
  4139d0:	add    eax,0x435d681f
  4139d5:	add    al,0x0
  4139d7:	add    BYTE PTR [eax],al
  4139d9:	add    BYTE PTR [eax],al
  4139db:	add    BYTE PTR [ebx+0x4],al
  4139de:	add    BYTE PTR [eax],al
  4139e0:	add    DWORD PTR [eax],eax
  4139e2:	es jl  0x4139e5
  4139e5:	add    dh,BYTE PTR [esi]
  4139e7:	or     BYTE PTR [eax],al
  4139e9:	add    dh,dl
  4139eb:	dec    eax
  4139ec:	add    BYTE PTR [ecx+0x52],cl
  4139ef:	pushf  
  4139f0:	adc    BYTE PTR [edi],dl
  4139f2:	sbb    BYTE PTR [eax+eiz*1],bl
  4139f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139f6:	sub    al,0x2c
  4139f8:	add    bl,cl
  4139fa:	(bad)  
  4139fb:	cmp    al,0x40
  4139fd:	cld    
  4139fe:	dec    eax
  4139ff:	je     0x413a7e
  413a01:	push   ebp
  413a02:	pop    eax
  413a03:	sbb    al,0x64
  413a05:	pop    esp
  413a06:	jno    0x413a74
  413a08:	mov    BYTE PTR [esp+esi*2+0x72],dh
  413a0c:	lahf   
  413a0d:	test   BYTE PTR [edx],dh
  413a0f:	adc    BYTE PTR [eax+0x5519120],0x90
  413a16:	sub    al,0x31
  413a18:	js     0x413a0f
  413a1a:	sbb    eax,0x3f212c14
  413a1f:	push   eax
  413a20:	je     0x413a4a
  413a22:	lsl    ebx,WORD PTR cs:[edx]
  413a26:	or     eax,0x1f58741d
  413a2b:	loope  0x413a17
  413a2d:	out    0xe3,al
  413a2f:	in     al,0xb4
  413a31:	cwde   
  413a32:	inc    ch
  413a34:	test   dl,bl
  413a36:	(bad)  
  413a38:	xchg   esp,eax
  413a39:	sar    DWORD PTR [esi+ebp*4+0x71f08e4],1
  413a40:	js     0x413a73
  413a42:	pmulhuw mm1,QWORD PTR [ecx+ecx*1]
  413a46:	pop    esi
  413a47:	jns    0x413abe
  413a49:	jbe    0x4139ef
  413a4b:	or     BYTE PTR [esi],0x8c
  413a4e:	jg     0x413ac2
  413a50:	and    BYTE PTR [edx-0x3681dcf5],ch
  413a56:	icebp  
  413a57:	mov    cl,0xbb
  413a59:	or     al,0xda
  413a5b:	mov    ecx,0xd3d272ad
  413a60:	nop
  413a61:	cwde   
  413a62:	test   DWORD PTR [ecx-0x16],eax
  413a65:	jmp    0x413a6f
  413a67:	sbb    eax,0x279f8493
  413a6c:	popf   
  413a6d:	nop
  413a6e:	xchg   edi,eax
  413a6f:	cmp    ah,BYTE PTR [ebx-0x1b]
  413a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a73:	mov    edi,0xfc19f120
  413a78:	fldcw  WORD PTR [eax-0x3a]
  413a7b:	fistp  WORD PTR [ebx]
  413a7d:	mov    ch,0xd4
  413a7f:	(bad)  
  413a81:	cwde   
  413a82:	mov    al,ds:0xf3f2178d
  413a87:	mov    bl,0x99
  413a89:	stos   BYTE PTR es:[edi],al
  413a8a:	add    al,0xf
  413a8c:	pop    esi
  413a8d:	or     BYTE PTR [ebp+0x7b],bh
  413a90:	enter  0x9ba5,0xb9
  413a94:	or     esp,esp
  413a96:	std    
  413a97:	mov    esp,0xcd84c4c0
  413a9c:	aad    0xd4
  413a9e:	lahf   
  413a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aa0:	pushf  
  413aa1:	out    0xbc,al
  413aa3:	imul   edi,ecx,0x1fef814
  413aa9:	wbinvd 
  413aab:	pushf  
  413aac:	sbb    dl,BYTE PTR [eax+ebx*1]
  413aaf:	shl    BYTE PTR [eax],0x22
  413ab2:	or     al,0x2e
  413ab4:	mov    dl,0x3d
  413ab6:	in     al,dx
  413ab7:	and    bh,0xc8
  413aba:	into   
  413abb:	rcl    BYTE PTR [ecx+ebx*8+0x2c],0x64
  413ac0:	outs   dx,BYTE PTR ds:[esi]
  413ac1:	imul   ebp,ecx,0xf9f5f4c1
  413ac7:	add    BYTE PTR ds:0x1795038a,al
  413acd:	sbb    BYTE PTR [ebx+eax*1-0x6dd3755c],cl
  413ad4:	xor    DWORD PTR [edi+edi*1],0xcd084b40
  413adb:	dec    edi
  413adc:	push   esi
  413add:	dec    esp
  413ade:	fnsave [ebp-0x1e]
  413ae1:	imul   esi,esi,0xfffffff7
  413ae4:	cli    
  413ae5:	cld    
  413ae6:	jl     0x413acf
  413ae8:	or     cl,BYTE PTR [eax+0x1819b410]
  413aee:	inc    eax
  413aef:	daa    
  413af0:	sub    BYTE PTR [eax+0x36f91534],bl
  413af6:	inc    eax
  413af7:	xor    al,0x4b
  413af9:	dec    esp
  413afa:	pushf  
  413afb:	pop    ecx
  413afc:	js     0x413a9c
  413afe:	ins    DWORD PTR es:[edi],dx
  413aff:	fs gs in al,dx
  413b02:	and    esp,DWORD PTR [ecx+ebp*8-0x597b7ba5]
  413b09:	clc    
  413b0a:	cmc    
  413b0b:	in     al,dx
  413b0c:	out    dx,al
  413b0d:	push   esp
  413b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b0f:	sub    eax,esi
  413b11:	jmp    0x413b43
  413b13:	jo     0x413b12
  413b15:	jp     0x413b5c
  413b17:	aaa    
  413b18:	inc    esp
  413b19:	push   eax
  413b1a:	push   esi
  413b1b:	js     0x413b39
  413b1d:	inc    ebp
  413b1e:	dec    edx
  413b1f:	sbb    cl,BYTE PTR [eax]
  413b21:	adc    DWORD PTR [eax],eax
  413b23:	sbb    DWORD PTR [eax+eax*4],ecx
  413b26:	test   ah,ah
  413b28:	jb     0x413aba
  413b2a:	xchg   DWORD PTR [edx-0x5e],ebx
  413b2d:	mov    al,ds:0x7bbf4899
  413b32:	mov    ebp,0x6604fff8
  413b37:	iret   
  413b38:	pop    ecx
  413b39:	push   esp
  413b3a:	inc    esp
  413b3b:	xor    BYTE PTR [ebx-0x5b],bl
  413b3e:	jbe    0x413aec
  413b40:	js     0x413bba
  413b42:	jns    0x413b72
  413b44:	inc    ebx
  413b45:	retf   0x8540
  413b48:	push   eax
  413b49:	mov    edx,0xd6d3ee68
  413b4e:	retf   
  413b4f:	ins    BYTE PTR es:[edi],dx
  413b50:	mov    dl,0x76
  413b52:	cmp    BYTE PTR [esp+edi*8+0x45],0xdb
  413b57:	enter  0x38d0,0x16
  413b5b:	aad    0xa0
  413b5d:	retf   0x151e
  413b60:	sbb    dl,ch
  413b62:	adc    eax,DWORD PTR [eax+0x53991c8e]
  413b68:	aam    0x98
  413b6a:	mov    ah,BYTE PTR [eax-0x5b]
  413b6d:	push   edx
  413b6e:	inc    edx
  413b6f:	jle    0x413b2e
  413b71:	cli    
  413b72:	int3   
  413b73:	xchg   bl,bh
  413b75:	enter  0xd0f3,0xeb
  413b79:	fsub   st,st(3)
  413b7b:	loopne 0x413b62
  413b7d:	loop   0x413b6b
  413b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b80:	jg     0x413b96
  413b82:	lods   eax,DWORD PTR ds:[esi]
  413b83:	push   edi
  413b84:	(bad)  
  413b85:	jne    0x413b93
  413b87:	sbb    al,0x1b
  413b89:	arpl   WORD PTR [eax+0x4f2fbcd0],si
  413b8f:	mov    ah,0xa0
  413b91:	enter  0x47cf,0x37
  413b95:	in     al,dx
  413b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b97:	(bad)  
  413b99:	and    DWORD PTR fs:[esi-0x49],0x3ba91567
  413ba1:	ja     0x413ba3
  413ba3:	dec    ecx
  413ba4:	sbb    BYTE PTR [ecx-0x68fa9f27],cl
  413baa:	out    0x24,eax
  413bac:	mov    cl,0xaf
  413bae:	shl    BYTE PTR [ebx],cl
  413bb0:	cmp    eax,DWORD PTR [edx]
  413bb2:	add    eax,0x59d34c30
  413bb7:	pushf  
  413bb8:	fsubr  st(6),st
  413bba:	fbld   TBYTE PTR [eax]
  413bbc:	mov    esp,?
  413bbe:	fistp  QWORD PTR [ecx]
  413bc0:	mov    edx,0xe91c0064
  413bc5:	adc    eax,DWORD PTR [edi+0x19]
  413bc8:	sbb    BYTE PTR [esp-0x58],dh
  413bcc:	sub    bh,BYTE PTR [ebx-0x2e4acf8f]
  413bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bd3:	enter  0x5071,0x5b
  413bd7:	out    dx,al
  413bd8:	dec    esp
  413bd9:	mov    eax,ds:0xfba6e40a
  413bde:	pop    eax
  413bdf:	dec    edx
  413be0:	jo     0x413be7
  413be2:	add    ebx,edx
  413be4:	mov    al,0x14
  413be6:	sbb    bh,BYTE PTR [ecx+eiz*1+0x332d2a21]
  413bed:	cmp    DWORD PTR ss:[ebp+0x1cfe4b51],esi
  413bf4:	lock push eax
  413bf6:	push   edi
  413bf7:	jmp    0x74a3:0x6da96138
  413bfe:	jns    0x413c36
  413c00:	xchg   BYTE PTR [ecx+0x19168b89],al
  413c06:	xchg   ebp,eax
  413c07:	jno    0x413b8d
  413c09:	sub    edi,DWORD PTR [edx+edi*1+0x3c]
  413c0d:	fdivr  DWORD PTR ds:0x464b4149
  413c13:	frstor ds:0x6505115c
  413c19:	arpl   ax,bp
  413c1b:	je     0x413c91
  413c1d:	jl     0x413c4b
  413c1f:	mov    WORD PTR [ecx+ecx*4-0x7f],fs
  413c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c24:	xchg   ecx,eax
  413c25:	fwait
  413c26:	xchg   edx,eax
  413c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c2a:	mov    BYTE PTR [ebp+esi*8+0x4ac14f20],dh
  413c31:	test   BYTE PTR [eax],dh
  413c33:	inc    edx
  413c34:	rol    DWORD PTR [esi+0x63788fa1],cl
  413c3a:	jo     0x413bfe
  413c3c:	xor    edi,0x42
  413c3f:	inc    ebp
  413c40:	pusha  
  413c41:	xchg   esp,eax
  413c42:	sbb    edx,DWORD PTR [esp+ebx*4-0x15e8efe7]
  413c49:	lods   al,BYTE PTR ds:[esi]
  413c4a:	xor    DWORD PTR [eax+0x7b700108],0xffffff8a
  413c51:	mov    ss,ebx
  413c53:	xchg   esp,eax
  413c54:	shl    DWORD PTR [edi],1
  413c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c57:	imul   edi,DWORD PTR [eax],0x6bf836cb
  413c5d:	jp     0x413c04
  413c5f:	mov    DWORD PTR [ebx],edi
  413c61:	nop
  413c62:	xchg   edi,eax
  413c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c64:	fcom   QWORD PTR [ebx-0x4316905b]
  413c6a:	cwde   
  413c6b:	js     0x413c28
  413c6d:	cmc    
  413c6e:	lds    ebp,FWORD PTR [eax+0x20e7d1cc]
  413c74:	push   ebp
  413c75:	mov    eax,ds:0xb1ec63f4
  413c7a:	cld    
  413c7b:	retf   
  413c7c:	cmp    ecx,DWORD PTR [ecx-0x6b5cefbb]
  413c82:	pop    edx
  413c83:	adc    eax,0xed21b0d9
  413c88:	lods   al,BYTE PTR ds:[esi]
  413c89:	or     edi,DWORD PTR [eax+ecx*1-0x65321be1]
  413c90:	enter  0x1e57,0xcc
  413c94:	in     al,dx
  413c95:	outs   dx,DWORD PTR ds:[esi]
  413c96:	xor    al,BYTE PTR [ebp-0x5]
  413c99:	push   ss
  413c9a:	cmc    
  413c9b:	daa    
  413c9c:	xor    eax,DWORD PTR [eax]
  413c9e:	xchg   ebp,eax
  413c9f:	add    DWORD PTR [eax+0x18],edi
  413ca2:	retf   0x2238
  413ca5:	in     al,0x24
  413ca7:	scas   eax,DWORD PTR es:[edi]
  413ca8:	idiv   DWORD PTR [edi+ecx*4+0xd5dc0c4]
  413caf:	fsubr  st(7),st
  413cb1:	sahf   
  413cb2:	and    bl,dl
  413cb4:	mov    ds:0xb27910e8,eax
  413cb9:	hlt    
  413cba:	ja     0x413cd2
  413cbc:	aaa    
  413cbd:	fmul   DWORD PTR [ecx+ebx*4+0x42]
  413cc1:	or     BYTE PTR [edi+0x27a82066],dl
  413cc7:	jbe    0x413ced
  413cc9:	sub    al,0xb7
  413ccb:	push   ss
  413ccc:	dec    esp
  413ccd:	test   eax,0xa7d5484d
  413cd2:	and    bh,BYTE PTR [eax+ebp*4]
  413cd5:	loopne 0x413c5c
  413cd7:	outs   dx,DWORD PTR ds:[esi]
  413cd8:	adc    edi,ebp
  413cda:	add    BYTE PTR [eax],dh
  413cdc:	enter  0x3839,0x1b
  413ce0:	popf   
  413ce1:	pop    esp
  413ce2:	inc    edx
  413ce3:	or     BYTE PTR [eax-0x34],bh
  413ce6:	cmp    ecx,DWORD PTR [ecx+ebp*1+0x69]
  413cea:	popa   
  413ceb:	pop    ecx
  413cec:	lahf   
  413ced:	dec    esp
  413cee:	push   ecx
  413cef:	inc    esi
  413cf0:	pop    ebp
  413cf1:	pop    ebp
  413cf2:	jae    0x413d5a
  413cf4:	imul   esp,ebp,0x7fd82522
  413cfa:	rcl    BYTE PTR [eax+0x1d0111ec],1
  413d00:	pop    ds
  413d01:	ss adc al,0x27
  413d04:	call   0x44c1:0x3dba2370
  413d0b:	cwde   
  413d0c:	lds    esp,FWORD PTR [eax]
  413d0e:	add    eax,0x3456d74c
  413d13:	jle    0x413ca3
  413d15:	push   eax
  413d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d17:	pop    edx
  413d18:	scas   al,BYTE PTR es:[edi]
  413d19:	shl    DWORD PTR [eax-0x63],1
  413d1c:	pop    es
  413d1d:	rcr    DWORD PTR [eax+0x4294be7a],0x8a
  413d24:	pop    esp
  413d25:	aaa    
  413d26:	fcomp  DWORD PTR ds:0xc58e66a1
  413d2c:	and    DWORD PTR [eax+0x6b],ecx
  413d2f:	mov    WORD PTR [eax-0x26],fs
  413d32:	mov    al,0x93
  413d34:	(bad)  
  413d35:	mov    edx,DWORD PTR [ebx-0x73]
  413d38:	or     DWORD PTR [ecx+ecx*8-0x433ae654],eax
  413d3f:	adc    ecx,esp
  413d41:	mov    WORD PTR [ecx-0x32c26b72],gs
  413d47:	inc    eax
  413d48:	sub    ecx,esi
  413d4a:	inc    ebp
  413d4b:	push   0xeb9c96d1
  413d50:	adc    DWORD PTR [edi+eiz*8+0x7c4b9c20],edx
  413d57:	sar    BYTE PTR [eax+0x3],1
  413d5a:	aam    0x7c
  413d5c:	sbb    eax,0x7ea0af88
  413d61:	and    esp,esi
  413d63:	mov    ah,0x37
  413d65:	js     0x413d0b
  413d67:	dec    ebp
  413d68:	(bad)  
  413d69:	fdiv   st(4),st
  413d6b:	adc    DWORD PTR [esi],ebp
  413d6d:	ficom  DWORD PTR [edi-0x4c]
  413d70:	jne    0x413d5c
  413d72:	clc    
  413d73:	jo     0x413d5b
  413d75:	or     bh,BYTE PTR ds:0xa40790ee
  413d7b:	cs sub eax,0x46908874
  413d81:	test   BYTE PTR [eax-0xb6ba34a],dl
  413d87:	daa    
  413d88:	loopne 0x413d56
  413d8a:	mov    al,ds:0x1cabeb0c
  413d8f:	ins    DWORD PTR es:[edi],dx
  413d90:	cwde   
  413d91:	sbb    al,0xf0
  413d93:	jg     0x413d3d
  413d95:	and    BYTE PTR [ebx],dh
  413d97:	rol    BYTE PTR [ecx-0x6ceb1ba4],cl
  413d9d:	ins    BYTE PTR es:[edi],dx
  413d9e:	rcl    BYTE PTR [edi],0xda
  413da1:	cmp    esp,eax
  413da3:	inc    eax
  413da4:	mov    ah,0x4b
  413da6:	xchg   esp,eax
  413da7:	sub    al,0x2d
  413da9:	shr    DWORD PTR [eax],1
  413dab:	pop    ecx
  413dac:	and    esi,DWORD PTR [eax]
  413dae:	aad    0xe9
  413db0:	lds    esi,FWORD PTR [eax+0x1d]
  413db3:	xor    bl,BYTE PTR [edi+eiz*1]
  413db6:	inc    esp
  413db7:	push   esi
  413db8:	add    edx,DWORD PTR [ebp+0xa3c3bea]
  413dbe:	cmp    eax,DWORD PTR [ecx]
  413dc0:	and    bl,BYTE PTR [ecx]
  413dc2:	xor    DWORD PTR [ecx],edi
  413dc4:	lahf   
  413dc5:	imul   eax,DWORD PTR [ecx+eiz*2+0x6c],0xc47254
  413dcd:	in     eax,0xf1
  413dcf:	jmp    0xfe3f2cc7
  413dd4:	sbb    esp,DWORD PTR [eax]
  413dd6:	or     al,0xa5
  413dd8:	mov    al,0x17
  413dda:	dec    eax
  413ddb:	add    al,al
  413ddd:	and    eax,0x2a332935
  413de2:	mov    eax,0xc15b1a0d
  413de7:	jge    0x413e35
  413de9:	retf   
  413dea:	imul   eax,ebp,0x5de15851
  413df0:	push   eax
  413df1:	aaa    
  413df2:	cli    
  413df3:	dec    ebp
  413df4:	test   BYTE PTR [edi+0x5d],cl
  413df7:	cmp    al,0xae
  413df9:	enter  0x119d,0xf5
  413dfd:	mov    BYTE PTR [ebp+0x4db11c71],ah
  413e03:	shl    BYTE PTR [ebp+0x78],0xcf
  413e07:	popa   
  413e08:	xchg   esi,eax
  413e09:	or     eax,0xa998785c
  413e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e0f:	js     0x413dfc
  413e11:	outs   dx,BYTE PTR ds:[esi]
  413e12:	in     al,0x96
  413e14:	or     eax,0xffffff8a
  413e17:	rcl    BYTE PTR [ebx+0x42a68a0c],cl
  413e1d:	add    BYTE PTR [eax],al
  413e1f:	add    BYTE PTR ds:0x6a42e016,ch
  413e25:	add    eax,0x0
  413e2a:	add    BYTE PTR [eax],al
  413e2c:	push   0x5
  413e2e:	add    BYTE PTR [eax],al
  413e30:	add    al,BYTE PTR [eax]
  413e32:	es jl  0x413e35
  413e35:	add    dh,BYTE PTR [esi]
  413e37:	or     BYTE PTR [eax],al
  413e39:	add    BYTE PTR [ebp-0x74fbffb7],ch
  413e3f:	int3   
  413e40:	xor    BYTE PTR [edi],ah
  413e42:	sub    al,0x89
  413e44:	nop
  413e45:	and    al,0x9f
  413e47:	outs   dx,BYTE PTR ds:[esi]
  413e48:	xor    BYTE PTR [edi+0x3473f868],bh
  413e4e:	dec    eax
  413e4f:	mov    ebx,ss
  413e51:	xchg   ebx,eax
  413e52:	pop    esp
  413e53:	outs   dx,DWORD PTR ds:[esi]
  413e54:	mov    dh,0xed
  413e56:	sbb    BYTE PTR [eax+edx*4-0x1],ch
  413e5a:	or     BYTE PTR [ecx+ecx*1-0x7f40932c],dh
  413e61:	adc    cx,sp
  413e64:	call   0xd8a14e91
  413e69:	mov    bl,0x3c
  413e6b:	adc    eax,0xb83cc1b8
  413e70:	push   edi
  413e71:	mov    BYTE PTR [ebp-0x189561a0],bl
  413e77:	and    al,0xe5
  413e79:	neg    DWORD PTR fs:[edx-0x7c]
  413e7d:	add    edi,DWORD PTR [esi+0x51]
  413e80:	jp     0x413e02
  413e82:	pop    ss
  413e83:	xchg   esp,eax
  413e84:	adc    DWORD PTR [eax-0x4709fce4],ebp
  413e8a:	jge    0x413eb7
  413e8c:	aam    0x43
  413e8e:	shl    dl,1
  413e90:	sub    DWORD PTR [edi+0x54],0xfffffff9
  413e94:	fcom   st(3)
  413e96:	jo     0x413e92
  413e98:	clc    
  413e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9a:	inc    ecx
  413e9b:	outs   dx,DWORD PTR ds:[esi]
  413e9c:	add    BYTE PTR [ebx-0x4163b9da],0xa8
  413ea3:	pop    ds
  413ea4:	jmp    0x10cc:0x8b74b4ac
  413eab:	test   DWORD PTR [edx+0x285ed0bb],0xe930b057
  413eb5:	dec    edx
  413eb6:	cmp    BYTE PTR [eax-0x9],0xf0
  413eba:	pop    esp
  413ebb:	mov    ebx,0x60e4197e
  413ec0:	xchg   esp,eax
  413ec1:	sub    esi,esp
  413ec3:	je     0x413e72
  413ec5:	mov    edi,0xc433948
  413eca:	les    edx,FWORD PTR [edi]
  413ecc:	mov    ss,eax
  413ece:	fistp  DWORD PTR [ebp-0x17]
  413ed1:	pop    ds
  413ed2:	sbb    ebp,eax
  413ed4:	adc    edi,DWORD PTR [ebx-0x4f]
  413ed7:	hlt    
  413ed8:	ja     0x413f2e
  413eda:	test   eax,edi
  413edc:	or     al,0x9d
  413ede:	push   eax
  413edf:	cdq    
  413ee0:	push   eax
  413ee1:	sub    eax,0x96b05c39
  413ee6:	mov    eax,0x45c05ebc
  413eeb:	jge    0x413ebe
  413eed:	fcom   QWORD PTR [ecx-0x76]
  413ef0:	loopne 0x413ed2
  413ef2:	arpl   WORD PTR [eax+edi*8-0x740b5183],di
  413ef9:	test   BYTE PTR [eax+0x0],bl
  413efc:	cdq    
  413efd:	inc    edx
  413efe:	adc    al,0xa6
  413f00:	and    DWORD PTR ds:0x38650c3b,esp
  413f06:	add    DWORD PTR [ebp-0x203a3760],ebp
  413f0c:	pop    edx
  413f0d:	jp     0x413ee7
  413f0f:	loopne 0x413ef2
  413f11:	gs mov ah,dl
  413f14:	hlt    
  413f15:	xlat   BYTE PTR ds:[ebx]
  413f16:	or     al,0x1
  413f18:	lea    ecx,[ecx]
  413f1a:	or     eax,0xcf09788
  413f1f:	stos   DWORD PTR es:[edi],eax
  413f20:	fsubp  st(1),st
  413f22:	ret    
  413f23:	jo     0x413f51
  413f25:	mov    bl,0x0
  413f27:	std    
  413f28:	hlt    
  413f29:	xchg   DWORD PTR [edi+edx*8+0x68],ecx
  413f2d:	lock rcl eax,0xb7
  413f31:	outs   dx,BYTE PTR ds:[esi]
  413f32:	push   edi
  413f33:	das    
  413f34:	stc    
  413f35:	sti    
  413f36:	xlat   BYTE PTR ds:[ebx]
  413f37:	add    al,0x33
  413f39:	or     al,0xa6
  413f3b:	(bad)  
  413f3c:	sub    esp,DWORD PTR [eax]
  413f3e:	mov    ch,0x94
  413f40:	rep outs dx,BYTE PTR ds:[esi]
  413f42:	lock xor al,0xbb
  413f45:	cli    
  413f46:	push   eax
  413f47:	int    0x76
  413f49:	dec    esp
  413f4a:	addr16 push ecx
  413f4c:	inc    edi
  413f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f4e:	leave  
  413f4f:	jns    0x413f32
  413f51:	adc    dh,BYTE PTR [ecx+0x3a]
  413f54:	retf   
  413f55:	pusha  
  413f56:	sub    esp,0x8f99900a
  413f5c:	pop    ds
  413f5d:	and    al,0x31
  413f5f:	mov    cl,0x30
  413f61:	mov    ebx,0xc97e3461
  413f66:	cmp    al,BYTE PTR [edx]
  413f68:	inc    eax
  413f69:	rcl    ch,1
  413f6b:	arpl   di,bx
  413f6d:	loope  0x413f57
  413f6f:	push   0x783cd06d
  413f74:	mov    WORD PTR [ecx],cs
  413f76:	retf   0x798
  413f79:	shl    BYTE PTR [eax+0x11],0x9c
  413f7d:	div    BYTE PTR [eax+0x3d48e423]
  413f83:	mul    BYTE PTR [esp+eax*2-0x2253e33d]
  413f8a:	push   cs
  413f8b:	inc    eax
  413f8c:	ds aas 
  413f8e:	push   0xf32bb05f
  413f93:	cdq    
  413f94:	fld    QWORD PTR [edi-0x2a]
  413f97:	or     bl,0x2c
  413f9a:	cdq    
  413f9b:	add    DWORD PTR [edx-0x5a],esp
  413f9e:	fs pusha 
  413fa0:	jl     0x413f83
  413fa2:	mov    eax,0x24472c37
  413fa7:	fadd   QWORD PTR [ebx+0x6bd08f82]
  413fad:	mov    eax,ds:0x78f4692c
  413fb2:	sub    al,0x81
  413fb4:	inc    ebp
  413fb5:	imul   eax,DWORD PTR [eax+ebx*4-0x5d63ad61],0xe81aa7a6
  413fc0:	ss mov cl,0xb9
  413fc3:	ret    
  413fc4:	mov    edi,0xddd1a07a
  413fca:	fbld   TBYTE PTR [eax-0x7f1d620]
  413fd0:	jmp    FWORD PTR [esi]
  413fd2:	mov    esp,0x90d0204
  413fd7:	adc    bl,BYTE PTR [edi+0x69aca299]
  413fdd:	dec    edx
  413fde:	mov    eax,0x804fbabf
  413fe3:	retf   0x47c2
  413fe6:	lods   eax,DWORD PTR ds:[esi]
  413fe7:	(bad)  
  413fe8:	jmp    0x413f75
  413fea:	enter  0xdbe0,0xe3
  413fee:	cmc    
  413fef:	lock repz stc 
  413ff2:	add    cl,BYTE PTR [eax]
  413ff4:	cmp    ecx,DWORD PTR [esi]
  413ff6:	addr16 aam 0x1
  413ff9:	fs sub eax,0x3b24cbe5
  413fff:	mov    dh,0xe7
  414001:	rol    dh,0xc6
  414004:	ret    
  414005:	xchg   sp,ax
  414007:	xlat   BYTE PTR ds:[ebx]
  414008:	fsubrp st(3),st
  41400a:	in     eax,0xe9
  41400c:	in     eax,dx
  41400d:	sub    BYTE PTR [edi-0x43],bh
  414010:	in     al,dx
  414011:	xor    ebx,DWORD PTR [esp+eax*1+0x1c]
  414015:	fwait
  414016:	rcr    cl,cl
  414018:	hlt    
  414019:	pusha  
  41401a:	sub    eax,0x3c34a7e8
  41401f:	mov    ebp,0x1c4eb8c
  414024:	sbb    DWORD PTR [ebp+edx*4-0x415f224e],esp
  41402b:	push   ss
  41402c:	ret    
  41402d:	lock inc ebp
  41402f:	dec    esp
  414030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414031:	add    al,0x37
  414033:	pop    edx
  414034:	jmp    0x231e930d
  414039:	mov    bl,0xa9
  41403b:	push   0x933a75cb
  414040:	inc    ebx
  414041:	add    al,0x4d
  414043:	int3   
  414044:	dec    esp
  414045:	adc    ecx,DWORD PTR [eax-0x29]
  414048:	mov    dh,0xed
  41404a:	sub    eax,0xbbff78f4
  41404f:	mov    dh,0x8f
  414051:	pop    DWORD PTR [edi+0x46dae0d9]
  414057:	and    eax,esp
  414059:	daa    
  41405a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41405b:	inc    ebp
  41405c:	enter  0x61b1,0xb0
  414060:	dec    ebx
  414061:	fdiv   st(2),st
  414063:	test   eax,0x6048491d
  414068:	add    cl,ah
  41406a:	sub    DWORD PTR [eax+0x79],esi
  41406d:	test   al,0xbf
  41406f:	or     ebx,DWORD PTR [eax+0x559d8e0d]
  414075:	cwde   
  414076:	mov    BYTE PTR [eax+0x1a],ah
  414079:	loopne 0x41401a
  41407b:	lods   al,BYTE PTR ds:[esi]
  41407c:	add    DWORD PTR ds:0xc3dcf4d,edi
  414082:	pop    esp
  414083:	xchg   esp,eax
  414084:	sahf   
  414085:	outs   dx,DWORD PTR ds:[esi]
  414086:	mov    al,ds:0x7f7b2862
  41408b:	ret    0x3dba
  41408e:	add    BYTE PTR [esi+eax*4+0x4c],0x51
  414093:	jle    0x414025
  414095:	scas   eax,DWORD PTR es:[edi]
  414096:	(bad)  
  414097:	mov    esp,0x7df1af68
  41409c:	stos   BYTE PTR es:[edi],al
  41409d:	test   al,0x82
  41409f:	into   
  4140a0:	sti    
  4140a1:	fcom   DWORD PTR [esp+ebx*8]
  4140a4:	popf   
  4140a5:	and    BYTE PTR [ebp+0x6070852a],ah
  4140ab:	mov    cl,0x4f
  4140ad:	xchg   esp,eax
  4140ae:	or     DWORD PTR [ecx-0x1067e268],ecx
  4140b4:	mov    esp,0xa1a8a221
  4140b9:	cmp    ecx,ebp
  4140bb:	inc    eax
  4140bc:	(bad)  
  4140bd:	rcl    BYTE PTR [ebx-0x6a90b82c],1
  4140c3:	test   eax,0xa8ab1f0d
  4140c8:	lea    eax,gs:[eax]
  4140cb:	idiv   DWORD PTR [eax-0x27]
  4140ce:	sar    DWORD PTR [ebx+0x7559105b],0x60
  4140d5:	xchg   ebp,eax
  4140d6:	imul   esp,DWORD PTR [edi],0x8e3da4fd
  4140dc:	test   edi,eax
  4140de:	fxch   st(0)
  4140e0:	rol    ch,cl
  4140e2:	push   ebx
  4140e3:	xchg   ecx,eax
  4140e4:	call   0x2458b50f
  4140e9:	xor    eax,0x89337c11
  4140ee:	mov    ecx,DWORD PTR [edi-0x26]
  4140f1:	push   ebp
  4140f2:	sbb    bl,BYTE PTR ds:0xeee26612
  4140f8:	ds jno 0x414132
  4140fb:	int3   
  4140fc:	dec    ecx
  4140fd:	leave  
  4140fe:	ret    0xa6e3
  414101:	aam    0x9f
  414103:	fistp  WORD PTR [ecx+0x74ce2df8]
  414109:	stc    
  41410a:	jle    0x414111
  41410c:	jns    0x414174
  41410e:	add    al,0x51
  414110:	adc    eax,0x738319b9
  414115:	ror    DWORD PTR ds:0x613cf560,cl
  41411b:	lock mov esp,0xf548a789
  414121:	push   ss
  414122:	inc    ecx
  414123:	stc    
  414124:	mov    ch,0x2c
  414126:	cld    
  414127:	xchg   DWORD PTR [ebp-0x54],ebx
  41412a:	sbb    BYTE PTR ds:0x15511c55,0xd9
  414131:	sbb    al,BYTE PTR [eax]
  414133:	and    eax,0x7383c56
  414138:	jbe    0x414172
  41413a:	inc    eax
  41413b:	inc    eax
  41413c:	shl    DWORD PTR [ecx],0xac
  41413f:	xlat   BYTE PTR ds:[ebx]
  414140:	pop    ecx
  414141:	push   esp
  414142:	loope  0x4141a5
  414144:	js     0x4141a5
  414146:	jbe    0x4140fd
  414148:	xchg   edx,eax
  414149:	cmp    al,0xa0
  41414b:	outs   dx,BYTE PTR ds:[esi]
  41414c:	cdq    
  41414d:	push   ebx
  41414e:	xor    al,0xa5
  414150:	mov    edi,0x2d09df26
  414155:	mov    al,0x3f
  414157:	clc    
  414158:	xor    al,dh
  41415a:	mov    esp,0x53b24d09
  41415f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414160:	outs   dx,DWORD PTR ds:[esi]
  414161:	ss push 0x360367ca
  414167:	ja     0x414105
  414169:	test   BYTE PTR [edi],cl
  41416b:	push   ecx
  41416c:	test   al,0x1b
  41416e:	mov    ah,0x94
  414170:	mov    ebp,0xabb97cb1
  414175:	and    eax,0xa19a8a37
  41417a:	inc    esi
  41417b:	xchg   esi,eax
  41417c:	arpl   WORD PTR [edx],bp
  41417e:	mov    esi,0x4a6a024c
  414183:	imul   ebp,DWORD PTR ds:0xcb7bfc88,0xffffff83
  41418a:	test   al,0x85
  41418c:	cmp    eax,0xe8449fd3
  414191:	mov    ds:0x5ecd974a,eax
  414196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414197:	inc    eax
  414198:	sub    cl,bl
  41419a:	push   ebx
  41419b:	mov    esi,ds
  41419d:	push   ds
  41419e:	inc    ecx
  41419f:	mov    ecx,0x6a046f20
  4141a4:	or     ah,BYTE PTR [eax-0x21]
  4141a7:	stos   DWORD PTR es:[edi],eax
  4141a8:	(bad)  
  4141a9:	dec    ecx
  4141aa:	mov    ch,0xf2
  4141ac:	nop
  4141ad:	aad    0x60
  4141af:	popa   
  4141b0:	dec    esp
  4141b1:	test   al,0xa6
  4141b3:	jo     0x414164
  4141b5:	sbb    DWORD PTR [esi-0x12e8313f],eax
  4141bb:	shl    DWORD PTR [esi+ebx*8-0x573bd9a1],cl
  4141c2:	fbld   TBYTE PTR [esi-0xb4ef8f8]
  4141c8:	push   0x1d4c9fb0
  4141cd:	mov    bh,0x5e
  4141cf:	and    al,0xdc
  4141d1:	das    
  4141d2:	jecxz  0x414250
  4141d4:	clc    
  4141d5:	loope  0x414159
  4141d7:	ret    0x3434
  4141da:	pop    ebx
  4141db:	aam    0xee
  4141dd:	popf   
  4141de:	inc    ebp
  4141df:	in     al,0xb8
  4141e1:	in     al,dx
  4141e2:	push   edi
  4141e3:	jne    0x4141a7
  4141e5:	aas    
  4141e6:	cmp    DWORD PTR ds:0x186da6e9,ebx
  4141ec:	cmp    al,0x26
  4141ee:	add    BYTE PTR [edx-0x55c049e5],cl
  4141f4:	je     0x414176
  4141f6:	mov    DWORD PTR [eax-0x3d],0x54c8d411
  4141fd:	scas   eax,DWORD PTR es:[edi]
  4141fe:	out    0xe9,al
  414200:	or     eax,0xb370fcf0
  414205:	add    cl,BYTE PTR [edi+ecx*2-0x2560ec4c]
  41420c:	cwde   
  41420d:	sub    ah,BYTE PTR [ebx+eiz*1+0x78bd20ed]
  414214:	xchg   ebp,eax
  414215:	icebp  
  414216:	xchg   DWORD PTR [edx-0x39],eax
  414219:	sbb    eax,0xc6e73dd4
  41421e:	jecxz  0x41421c
  414220:	xlat   BYTE PTR ds:[ebx]
  414221:	call   FWORD PTR [ebp-0x24]
  414224:	push   ss
  414225:	or     al,0xed
  414227:	push   es
  414228:	push   esi
  414229:	adc    BYTE PTR [ebx],bl
  41422b:	pop    ss
  41422c:	outs   dx,DWORD PTR ds:[esi]
  41422d:	(bad)  
  41422e:	sub    BYTE PTR [ecx+0x183d3f10],ch
  414234:	dec    ebx
  414235:	inc    edx
  414236:	ror    BYTE PTR [ebx],0x57
  414239:	jne    0x41428e
  41423b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41423c:	inc    eax
  41423d:	outs   dx,BYTE PTR ds:[esi]
  41423e:	dec    edx
  41423f:	addr16 push 0xdfe72b0
  414245:	retf   0x7106
  414248:	add    BYTE PTR [ecx],bl
  41424a:	or     dl,BYTE PTR [edi]
  41424c:	inc    esi
  41424d:	or     DWORD PTR [edi],ebp
  41424f:	ds adc al,0x33
  414252:	sub    al,0x64
  414254:	dec    edi
  414255:	dec    eax
  414256:	push   0x63
  414258:	adc    dl,BYTE PTR [esi+0x54]
  41425b:	in     al,0x6f
  41425d:	mov    ch,BYTE PTR [eax+esi*8+0x7f]
  414261:	jno    0x41425a
  414263:	dec    eax
  414264:	or     al,0xac
  414266:	retf   
  414267:	fwait
  414268:	xor    eax,0x24a87587
  41426d:	cmp    bh,BYTE PTR [eax+0x6136867b]
  414273:	xor    DWORD PTR [eax-0x6a2cf9a],ebp
  414279:	jnp    0x41427c
  41427b:	jb     0x4142aa
  41427d:	dec    esp
  41427e:	jae    0x4142cb
  414280:	stc    
  414281:	jb     0x414284
  414283:	lods   al,BYTE PTR ds:[esi]
  414284:	or     BYTE PTR [ecx-0x60461a70],al
  41428a:	shl    DWORD PTR [ecx-0x4aec5f02],0xe3
  414291:	jl     0x41425c
  414293:	enter  0xe43,0x74
  414297:	pop    ecx
  414298:	mov    ah,0xc1
  41429a:	ins    BYTE PTR es:[edi],dx
  41429b:	push   0xf07937e4
  4142a0:	xor    ecx,DWORD PTR [esi-0x60b320f4]
  4142a6:	retf   
  4142a7:	(bad)  
  4142a8:	scas   eax,DWORD PTR es:[edi]
  4142a9:	pusha  
  4142aa:	dec    esp
  4142ac:	aaa    
  4142ad:	mov    cl,0xb4
  4142af:	mov    ebp,0xc8dc5b5e
  4142b4:	fcomp  st(7)
  4142b6:	bound  ecx,QWORD PTR [ecx-0x181b4c23]
  4142bc:	pop    edx
  4142bd:	test   eax,0x328faef0
  4142c2:	stc    
  4142c3:	mov    WORD PTR [eax-0x66d5683d],ds
  4142c9:	gs dec edi
  4142cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142cc:	fs mov edi,0xc6c27c42
  4142d2:	int    0xcd
  4142d4:	shl    ebp,cl
  4142d6:	retf   0xe1b8
  4142d9:	mov    gs,ebp
  4142db:	lea    esp,[ecx+0x2e]
  4142de:	clc    
  4142df:	std    
  4142e0:	push   es
  4142e1:	les    ebx,FWORD PTR [esi-0x36ecee97]
  4142e7:	sbb    DWORD PTR [ecx],esp
  4142e9:	mov    eax,ds:0xb81442a7
  4142ee:	mov    dh,0xe1
  4142f0:	pop    esi
  4142f1:	leave  
  4142f2:	int    0xb1
  4142f4:	xchg   esi,eax
  4142f5:	inc    ebx
  4142f6:	rcl    DWORD PTR cs:[eax+edx*1-0x14],cl
  4142fb:	pop    ebx
  4142fc:	xor    al,0xf9
  4142fe:	icebp  
  4142ff:	mov    BYTE PTR [ebp+0x1890f87d],cl
  414305:	adc    al,0x2f
  414307:	cwde   
  414308:	and    eax,0x30b5afff
  41430d:	clc    
  41430e:	mov    al,ds:0x487b4b09
  414313:	and    BYTE PTR [ebp-0x179a3e22],bl
  414319:	sbb    eax,0x1d0444c3
  41431e:	fdivr  DWORD PTR [ecx+0x0]
  414321:	fcomp  DWORD PTR [ebx-0x1577a53e]
  414327:	inc    ebp
  414328:	pop    ebp
  414329:	out    dx,eax
  41432a:	jb     0x4142cc
  41432c:	js     0x4142e3
  41432e:	loope  0x4142f5
  414330:	cmc    
  414331:	inc    eax
  414332:	(bad)
  414335:	mov    esp,0x4569b361
  41433a:	and    eax,0x459ffd14
  41433f:	sub    edi,ebx
  414341:	xor    DWORD PTR ds:0xd4b73dd3,edx
  414347:	and    BYTE PTR [edi],bl
  414349:	mov    eax,0xc9b91834
  41434e:	or     DWORD PTR [edi+eax*8+0x6c1a9aea],esi
  414355:	mov    cl,0xa5
  414357:	inc    eax
  414358:	ins    DWORD PTR es:[edi],dx
  414359:	jbe    0x4142ef
  41435b:	(bad)  
  41435c:	fs loope 0x414302
  41435f:	ror    DWORD PTR [esi+edx*4-0x5464a8e1],1
  414366:	dec    ecx
  414367:	daa    
  414368:	jge    0x4142fe
  41436a:	sub    ecx,ebp
  41436c:	es ja  0x414307
  41436f:	add    eax,0xcc6b5070
  414374:	icebp  
  414375:	pop    ss
  414376:	fsubr  DWORD PTR [esi-0x5]
  414379:	jbe    0x4143c7
  41437b:	into   
  41437c:	or     BYTE PTR ds:0xc11960dd,0x70
  414383:	shr    BYTE PTR [ebx],0x77
  414386:	cdq    
  414387:	scas   eax,DWORD PTR es:[edi]
  414388:	mov    eax,ds:0x12b5eaa9
  41438d:	xor    BYTE PTR gs:[ebx+0x321d1a54],dl
  414394:	add    BYTE PTR [eax],al
  414396:	add    BYTE PTR [eax],al
  414398:	jnp    0x4143b5
  41439a:	retf   0x9952
  41439d:	add    eax,0x0
  4143a2:	add    BYTE PTR [eax],al
  4143a4:	cdq    
  4143a5:	add    eax,0x30000
  4143aa:	es jl  0x4143ad
  4143ad:	add    dh,BYTE PTR [esi]
  4143af:	or     BYTE PTR [eax],al
  4143b1:	add    BYTE PTR [ecx+ecx*2+0x0],bh
  4143b5:	add    al,0x83
  4143b7:	pop    ecx
  4143b8:	clc    
  4143b9:	daa    
  4143ba:	sub    al,0x91
  4143bc:	nop
  4143bd:	and    al,0xef
  4143bf:	outs   dx,BYTE PTR ds:[esi]
  4143c0:	xor    BYTE PTR [edi-0xdb0338b],bh
  4143c6:	dec    eax
  4143c7:	mov    ch,0x63
  4143c9:	pusha  
  4143ca:	in     eax,0xec
  4143cc:	stos   DWORD PTR es:[edi],eax
  4143cd:	es push 0x609db16c
  4143d3:	dec    edi
  4143d4:	xor    BYTE PTR [ecx+ecx*4+0x1194908c],cl
  4143db:	rcl    esp,1
  4143dd:	mov    ds:0x38f5c461,eax
  4143e2:	aad    0x50
  4143e4:	int    0x3d
  4143e6:	mov    ah,0x5f
  4143e8:	loop   0x414393
  4143ea:	pop    ebp
  4143eb:	pusha  
  4143ec:	hlt    
  4143ed:	jecxz  0x41444f
  4143ef:	std    
  4143f0:	(bad)  
  4143f1:	out    0x3e,eax
  4143f3:	and    BYTE PTR [ebx+edi*4+0x5b242580],0x9c
  4143fb:	add    BYTE PTR [edi-0x60],cl
  4143fe:	mov    ah,0xbf
  414400:	add    cl,BYTE PTR [ebx-0x43]
  414403:	fadd   st,st(4)
  414405:	enter  0xe25f,0x2d
  414409:	pop    edx
  41440a:	push   0xf06c7c65
  41440f:	dec    DWORD PTR ds:0xaa0cb36c
  414415:	adc    BYTE PTR [eax+0x40221314],0xa4
  41441c:	mov    ds:0xbda04f7d,al
  414421:	lods   al,BYTE PTR ds:[esi]
  414422:	ror    al,0x87
  414425:	int3   
  414426:	dec    esp
  414427:	fistp  DWORD PTR [ebx+esi*1-0x3f]
  41442b:	in     eax,0xc4
  41442d:	xor    eax,0x806c93b5
  414432:	test   BYTE PTR [ebx],0xb8
  414435:	adc    DWORD PTR [esi+0x5cfd17de],0x876be5aa
  41443f:	mov    WORD PTR [esi],?
  414441:	pop    ebp
  414442:	mov    BYTE PTR [ecx+edx*4+0x2c],0x15
  414447:	xor    eax,esp
  414449:	loope  0x414433
  41444b:	fldlg2 
  41444d:	call   0x90d:0x1264efb
  414454:	pop    ecx
  414455:	dec    ebp
  414456:	call   0xa8d5d777
  41445b:	xchg   esp,eax
  41445c:	cmp    ecx,eax
  41445e:	mov    al,0x7d
  414460:	sub    ecx,ecx
  414462:	enter  0x19e2,0xd5
  414466:	push   esp
  414467:	(bad)  
  414469:	push   ss
  41446a:	sub    DWORD PTR [edx],eax
  41446c:	call   0x2c73dfc
  414471:	sub    DWORD PTR [edx],ecx
  414473:	adc    BYTE PTR [ebx],0x40
  414476:	sbb    al,0x10
  414478:	and    ebp,esi
  41447a:	sub    BYTE PTR [edx+0x78],ah
  41447d:	mov    esp,0xc8aafd3c
  414482:	mov    eax,0xdecc5f22
  414487:	mov    bh,0x18
  414489:	(bad)  
  41448b:	hlt    
  41448c:	sar    BYTE PTR [eax-0x37],cl
  41448f:	and    BYTE PTR [esi-0x78],0xb
  414493:	xchg   edx,eax
  414494:	sub    DWORD PTR [eax],ebx
  414496:	cwde   
  414497:	sub    esp,DWORD PTR [esi]
  414499:	cs das 
  41449b:	sub    edi,DWORD PTR [edi+0x19cb7ebb]
  4144a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144a2:	lds    edx,FWORD PTR [eax+0x19]
  4144a5:	mov    al,0xd7
  4144a7:	sub    eax,0xfca05b9c
  4144ac:	out    0x7c,eax
  4144ae:	pop    ss
  4144af:	add    al,0x81
  4144b1:	mov    WORD PTR [edi],gs
  4144b3:	xchg   ebp,eax
  4144b4:	test   DWORD PTR ds:0xa5c06901,ebx
  4144ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144bb:	inc    ecx
  4144bc:	cmp    eax,0x7965405b
  4144c1:	dec    ebp
  4144c2:	push   esi
  4144c3:	or     DWORD PTR [ebp+ebx*2+0x306ba5e2],esp
  4144ca:	inc    ebx
  4144cb:	add    al,0x74
  4144cd:	neg    DWORD PTR [esi-0x7a]
  4144d0:	aam    0xd
  4144d2:	mov    ebp,0xfe5a19c9
  4144d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144d8:	push   ebp
  4144d9:	mov    al,0x1f
  4144db:	mov    edi,0x31c29945
  4144e0:	mov    esp,0x4c2867d8
  4144e5:	loopne 0x414557
  4144e7:	loope  0x414502
  4144e9:	mov    ebp,?
  4144eb:	add    DWORD PTR gs:[eax-0x6d3a77e8],0xffffffa7
  4144f3:	sbb    al,0x89
  4144f5:	mov    ds:0xb294a8b8,al
  4144fa:	nop
  4144fb:	cmp    BYTE PTR [edi-0x76243f1b],dl
  414501:	sub    BYTE PTR [bx+si+0x62],cl
  414505:	pop    edi
  414506:	test   BYTE PTR [esi-0x1f],ch
  414509:	retf   
  41450a:	stc    
  41450b:	sub    BYTE PTR [bp+si-0x6673],0x92
  414511:	mov    DWORD PTR [eax-0x44],edx
  414514:	loopne 0x41449f
  414516:	pop    eax
  414517:	push   0xf63835be
  41451c:	repz mov ah,0xd0
  41451f:	ret    
  414520:	pushw  es
  414522:	cwde   
  414523:	mov    ds:0x80196f68,al
  414528:	xor    esi,DWORD PTR [edi+0x4f]
  41452b:	mov    ah,0x11
  41452d:	retf   
  41452e:	xchg   ebp,eax
  41452f:	push   esi
  414530:	rcr    DWORD PTR [ebp+edi*8+0x6c2b34a4],0x90
  414538:	xor    eax,0xc4dd3dbe
  41453d:	popf   
  41453e:	and    bl,ah
  414540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414541:	and    al,0x93
  414543:	imul   ebp,DWORD PTR [edx],0xffffffa9
  414546:	ins    DWORD PTR es:[edi],dx
  414547:	mov    esi,DWORD PTR [ecx-0x17]
  41454a:	add    bh,bh
  41454c:	sti    
  41454d:	xor    DWORD PTR [edi-0x4d],0x25c6de19
  414554:	dec    esi
  414555:	lods   al,BYTE PTR ds:[esi]
  414556:	mov    al,0x4b
  414558:	mov    eax,0xbe38dfc
  41455d:	xchg   edx,eax
  41455e:	aam    0xd2
  414560:	cwde   
  414561:	fstp   DWORD PTR [edi]
  414563:	in     al,0x69
  414565:	mov    ds:0xf2817b,eax
  41456a:	inc    ecx
  41456b:	sbb    BYTE PTR [edi+ecx*4],dh
  41456e:	sbb    esp,DWORD PTR [ecx+0x8]
  414571:	popf   
  414572:	(bad)  
  414573:	es sub ah,ch
  414576:	cmp    eax,DWORD PTR [edi]
  414578:	iret   
  414579:	iret   
  41457a:	jb     0x4145ae
  41457c:	ret    
  41457d:	fsub   DWORD PTR [edx-0x1c]
  414580:	popa   
  414581:	mov    eax,ds:0xc31bdbe1
  414586:	les    edi,FWORD PTR [ecx-0x29707d04]
  41458c:	xchg   DWORD PTR [ebp+0x18],esp
  41458f:	fcomp  DWORD PTR [eax-0x58]
  414592:	push   es
  414593:	ss out dx,eax
  414595:	jno    0x414553
  414597:	cmp    ax,0x7103
  41459b:	rcl    BYTE PTR [edx],0xa6
  41459e:	push   esi
  41459f:	fsubr  DWORD PTR [edi-0x20]
  4145a2:	jmp    0x70cdf896
  4145a7:	jecxz  0x41456f
  4145a9:	sbb    cl,BYTE PTR [ecx+0x7561729]
  4145af:	aad    0x39
  4145b1:	and    al,0x8
  4145b3:	pop    ds
  4145b4:	(bad)  
  4145b5:	mov    edi,0xabbefdc2
  4145ba:	enter  0x5253,0x4e
  4145be:	popf   
  4145bf:	inc    edx
  4145c0:	loop   0x4145de
  4145c2:	jmp    0xf8c07c74
  4145c7:	pop    esp
  4145c8:	mov    esp,?
  4145ca:	mov    WORD PTR [ebp+0x5],cs
  4145cd:	fnstsw WORD PTR [esi+edi*2]
  4145d0:	and    BYTE PTR [ebx+0xc74eb71],ah
  4145d6:	cmp    al,0x61
  4145d8:	inc    ecx
  4145d9:	dec    edx
  4145da:	dec    esi
  4145db:	adc    BYTE PTR [ebx+0x5e],cl
  4145de:	pop    esp
  4145df:	inc    ecx
  4145e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145e1:	imul   ecx,DWORD PTR [edx-0x51fcca89],0xffffffa0
  4145e8:	icebp  
  4145e9:	jo     0x414633
  4145eb:	(bad)  
  4145ec:	xchg   esi,eax
  4145ed:	ficomp WORD PTR [ebp+0x2]
  4145f0:	(bad)  [ecx-0x56]
  4145f3:	mov    al,0x4b
  4145f5:	ds rcl esp,1
  4145f8:	outs   dx,BYTE PTR ds:[esi]
  4145f9:	or     al,0xb9
  4145fb:	fcomp  QWORD PTR [eax]
  4145fd:	sub    al,0x41
  4145ff:	or     DWORD PTR fs:[ecx+edi*8+0x1],esi
  414604:	mov    ebx,?
  414606:	mov    al,ds:0xcd38038c
  41460b:	pusha  
  41460c:	sbb    bh,BYTE PTR [ecx+ebp*4-0x6fd3555a]
  414613:	mov    esi,0x30b09c38
  414618:	inc    eax
  414619:	xchg   edx,eax
  41461a:	fist   DWORD PTR [ebp-0x13c460ed]
  414620:	dec    esi
  414621:	ins    BYTE PTR es:[edi],dx
  414622:	mov    ch,0xba
  414624:	push   0x41
  414626:	outs   dx,BYTE PTR ds:[esi]
  414627:	or     BYTE PTR ds:0x1c96b571,0x9d
  41462e:	mov    al,ds:0xa6714f29
  414633:	mov    esp,DWORD PTR [ebp+0x4b]
  414636:	enter  0xd75d,0x91
  41463a:	xlat   BYTE PTR ds:[ebx]
  41463b:	pop    eax
  41463c:	loopne 0x41465a
  41463e:	test   bl,ch
  414640:	or     eax,0x4af72dfe
  414645:	add    DWORD PTR [edi+0xa],esp
  414648:	mov    ds:0xacc4ab4d,eax
  41464d:	das    
  41464e:	in     eax,dx
  41464f:	lods   al,BYTE PTR ds:[esi]
  414650:	mov    esp,0x2a7d6b3f
  414655:	fadd   QWORD PTR [eax-0x64]
  414658:	adc    al,bl
  41465a:	push   ebx
  41465b:	pop    ss
  41465c:	imul   esi,DWORD PTR [edi],0xffffffb7
  41465f:	sub    al,0x91
  414661:	xor    al,0xf0
  414663:	cld    
  414664:	mov    BYTE PTR [edi+eax*1+0x52],bl
  414668:	cwde   
  414669:	pop    esp
  41466a:	adc    eax,0x26742094
  41466f:	pop    ds
  414670:	lock jecxz 0x4146aa
  414673:	and    eax,0x1c0f2c99
  414678:	aam    0xd8
  41467a:	fs loop 0x414601
  41467d:	jecxz  0x41464d
  41467f:	icebp  
  414680:	idiv   eax
  414682:	dec    DWORD PTR [eax+0x5]
  414685:	or     cl,BYTE PTR [eax*2+0x6d97f49f]
  41468c:	sub    al,0x28
  41468e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41468f:	xor    DWORD PTR [edi+0x433d2cc0],esi
  414695:	lock dec esi
  414697:	push   ebx
  414698:	aam    0x5d
  41469a:	mov    ebp,0xe8146b27
  41469f:	mov    DWORD PTR [eax-0xa],ebp
  4146a2:	mov    DWORD PTR ds:0x27118c18,0xae21ddd8
  4146ac:	or     ch,ch
  4146ae:	xor    DWORD PTR [esp+edi*8],ebp
  4146b1:	cmp    eax,0x68684587
  4146b6:	push   ecx
  4146b7:	push   ebp
  4146b8:	mov    esp,0x98ef365b
  4146bd:	test   BYTE PTR ds:0x803c784d,ah
  4146c3:	add    esp,ecx
  4146c5:	pop    ds
  4146c6:	xchg   ecx,eax
  4146c7:	(bad)  
  4146c8:	pop    esp
  4146c9:	and    ebp,DWORD PTR [edi+0x5f206128]
  4146cf:	into   
  4146d0:	push   esp
  4146d1:	retf   
  4146d2:	ret    0x4c70
  4146d5:	sbb    BYTE PTR [edi],dl
  4146d7:	pop    eax
  4146d8:	gs popa 
  4146da:	pop    ss
  4146db:	(bad)  
  4146dc:	in     eax,0x78
  4146de:	jne    0x4146a0
  4146e0:	jp     0x414722
  4146e2:	xchg   dh,dl
  4146e4:	rcl    DWORD PTR [ebx+0x35],1
  4146e7:	fsubr  DWORD PTR [eax-0x571806]
  4146ed:	pop    esp
  4146ee:	mov    ecx,0x48442aad
  4146f3:	sbb    al,0xaf
  4146f5:	inc    ecx
  4146f6:	and    BYTE PTR [eax+eiz*1-0x5718979c],ch
  4146fd:	icebp  
  4146fe:	mov    ds:0xcb098709,eax
  414703:	enter  0xcf9d,0x98
  414707:	cwde   
  414708:	sub    ebp,DWORD PTR [edx]
  41470a:	sub    al,0x2c
  41470c:	mov    dh,0xe3
  41470e:	mov    eax,0x43153fef
  414713:	xor    al,0x53
  414715:	adc    BYTE PTR [eax+0x60],bl
  414718:	loope  0x4146b1
  41471a:	sbb    DWORD PTR [ebp-0x1],eax
  41471d:	sub    eax,0xe800b74
  414722:	add    al,0x30
  414724:	xchg   esi,eax
  414725:	repnz xchg esp,eax
  414727:	repnz not DWORD PTR [edi-0x5a]
  41472b:	pusha  
  41472c:	push   ebp
  41472d:	mov    edx,0xd5c620b0
  414732:	inc    edi
  414733:	popf   
  414734:	fcom   st(0)
  414736:	push   edi
  414737:	jbe    0x4147a1
  414739:	or     dh,ch
  41473b:	mov    eax,ds:0x92e07a7
  414740:	enter  0x1b82,0x6c
  414744:	mov    ebx,0xa0602392
  414749:	and    eax,0xa933b5b8
  41474e:	loop   0x414719
  414750:	mov    ds:0xbc2b82cc,al
  414755:	leave  
  414756:	fs gs in al,0x2b
  41475a:	scas   eax,DWORD PTR es:[edi]
  41475b:	xor    eax,0x85151ff3
  414760:	dec    esp
  414761:	loopne 0x41478f
  414763:	adc    al,0x8
  414765:	mov    ebp,0x9988d424
  41476a:	jno    0x414724
  41476c:	xor    eax,0x8e433885
  414771:	fadd   QWORD PTR [edi-0x69942372]
  414777:	clc    
  414778:	mov    ebx,0xb6730d7b
  41477d:	adc    BYTE PTR [eax*4+0x7e54ce91],cl
  414784:	aaa    
  414785:	jmp    FWORD PTR [ebp-0x402f96d8]
  41478b:	jp     0x4147b5
  41478d:	leave  
  41478e:	fld    DWORD PTR [eax+0x55d9f04d]
  414794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414795:	or     al,0x63
  414797:	scas   al,BYTE PTR es:[edi]
  414798:	in     al,dx
  414799:	jns    0x414777
  41479b:	popa   
  41479c:	loop   0x4147c5
  41479e:	or     edx,DWORD PTR [ecx-0x76e58a24]
  4147a4:	in     al,0x25
  4147a6:	or     ch,BYTE PTR [edi]
  4147a8:	sar    BYTE PTR [edi+0x16cb1c7a],0x6c
  4147af:	inc    esp
  4147b0:	(bad)  
  4147b2:	mov    esi,0x903163df
  4147b7:	in     eax,0x3d
  4147b9:	hlt    
  4147ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147bb:	cmc    
  4147bc:	inc    ecx
  4147bd:	cld    
  4147be:	retf   
  4147bf:	xchg   ebp,eax
  4147c0:	int3   
  4147c1:	sbb    BYTE PTR [esi],bl
  4147c3:	and    esp,eax
  4147c5:	ss sub al,0xbd
  4147c8:	arpl   WORD PTR [edx],di
  4147ca:	mov    ch,0xdd
  4147cc:	xchg   esp,eax
  4147cd:	pop    ecx
  4147ce:	int3   
  4147cf:	push   ecx
  4147d0:	fnstcw WORD PTR [eax+edi*2]
  4147d3:	add    BYTE PTR [esi+0x12],bl
  4147d6:	xchg   edx,eax
  4147d7:	jg     0x41484d
  4147d9:	into   
  4147da:	es jg  0x414822
  4147dd:	outs   dx,DWORD PTR ds:[esi]
  4147de:	test   BYTE PTR [ebx+0x1693d06f],bl
  4147e4:	mov    esi,0x396e30c8
  4147e9:	ds inc ecx
  4147eb:	iret   
  4147ec:	mov    dl,cl
  4147ee:	rcl    DWORD PTR [edx-0x2f],1
  4147f1:	loopne 0x4147f0
  4147f3:	mov    eax,0x71306ca8
  4147f8:	rcr    DWORD PTR [eax+ebp*8],1
  4147fb:	fimul  WORD PTR [ebx-0x626f6b37]
  414801:	popf   
  414802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414803:	shr    BYTE PTR [ebp-0x7b580dcb],0xa6
  41480a:	and    al,al
  41480c:	or     BYTE PTR [eax+0x63995f0e],dl
  414812:	push   ds
  414813:	pusha  
  414814:	imul   esi,DWORD PTR [ecx+0x7d],0x9142789c
  41481b:	push   0xffffff88
  41481d:	(bad)
  414821:	stos   DWORD PTR es:[edi],eax
  414822:	popa   
  414823:	stos   DWORD PTR es:[edi],eax
  414824:	mov    al,ds:0x58b5b5b5
  414829:	les    esp,FWORD PTR [ebp-0x2f2bd324]
  41482f:	push   ebx
  414830:	popa   
  414831:	popa   
  414832:	hlt    
  414833:	imul   ebp,DWORD PTR [ebx],0xfffffff4
  414836:	ja     0x414872
  414838:	test   BYTE PTR [ecx+eax*1-0x77946e11],dl
  41483f:	xchg   ebx,eax
  414840:	sub    al,0xe6
  414842:	cmp    dl,BYTE PTR [ebx-0x70]
  414845:	lods   al,BYTE PTR ds:[esi]
  414846:	sub    eax,0x41c460a8
  41484b:	pop    ecx
  41484c:	push   ecx
  41484d:	(bad)  
  41484e:	int3   
  41484f:	sbb    esp,DWORD PTR [ebp+0x5]
  414852:	out    0xe0,eax
  414854:	icebp  
  414855:	retf   0x3082
  414858:	mov    esp,DWORD PTR [edx+ebx*1]
  41485b:	xchg   edx,ecx
  41485d:	popf   
  41485e:	lea    ebx,ds:0x30676928
  414864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414865:	jns    0x4148dd
  414867:	shl    edi,1
  414869:	adc    al,BYTE PTR [edi+0x73]
  41486c:	aad    0xdc
  41486e:	ss jmp 0xea3e:0x313be9a4
  414876:	cmp    eax,0x3f0fcb10
  41487b:	(bad)  
  41487c:	push   edi
  41487d:	adc    edx,DWORD PTR [edi-0x121717a1]
  414883:	fbstp  TBYTE PTR [edi]
  414885:	or     ebp,ebx
  414887:	inc    ebx
  414888:	les    ecx,FWORD PTR [ecx+esi*1-0x2b]
  41488c:	fcomp  st(7)
  41488e:	mov    edx,0x1c96632c
  414893:	test   DWORD PTR [ebx],0x7e89dc
  414899:	test   DWORD PTR [ebp+0x5a970d95],ebp
  41489f:	xchg   esp,eax
  4148a0:	clc    
  4148a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a2:	bound  esi,QWORD PTR [eax]
  4148a4:	pop    es
  4148a5:	ss push 0x5a60984e
  4148ab:	shr    BYTE PTR [eax+0x624572dc],cl
  4148b1:	pusha  
  4148b2:	sti    
  4148b3:	es sub bl,al
  4148b6:	or     al,0x2c
  4148b8:	xchg   DWORD PTR [ebp-0xb5ec70a],eax
  4148be:	inc    ebp
  4148bf:	sub    esi,edx
  4148c1:	icebp  
  4148c2:	xor    bh,dh
  4148c4:	das    
  4148c5:	and    dh,al
  4148c7:	mov    ds:0x499f9146,al
  4148cc:	ins    BYTE PTR es:[edi],dx
  4148cd:	push   ebx
  4148ce:	lahf   
  4148cf:	pop    ebx
  4148d0:	xchg   esi,eax
  4148d1:	adc    edi,DWORD PTR [edi+0x58]
  4148d4:	jle    0x414921
  4148d6:	xchg   esi,eax
  4148d7:	nop
  4148d8:	dec    ebp
  4148d9:	pop    edx
  4148da:	xchg   ebx,eax
  4148db:	stc    
  4148dc:	xchg   ecx,eax
  4148dd:	out    0x22,al
  4148df:	jle    0x4148c5
  4148e1:	cmc    
  4148e2:	cmp    al,0xd6
  4148e4:	inc    ebx
  4148e5:	loope  0x414930
  4148e7:	dec    edi
  4148e8:	stos   DWORD PTR es:[edi],eax
  4148e9:	push   edi
  4148ea:	and    ch,BYTE PTR [eax-0x43ed98a0]
  4148f0:	stc    
  4148f1:	push   cs
  4148f2:	push   0x50e0d2f7
  4148f7:	add    eax,0x9139d52
  4148fc:	arpl   WORD PTR [ebp+0x4a7fab88],bp
  414902:	stos   DWORD PTR es:[edi],eax
  414903:	fmulp  st(1),st
  414905:	and    eax,0xda5d905f
  41490a:	pop    edi
  41490b:	test   al,0x6d
  41490d:	mov    DWORD PTR [ebp+0x1c],ebp
  414910:	jge    0x41490c
  414912:	test   BYTE PTR [eax-0x51],ah
  414915:	mov    esi,esi
  414917:	push   esp
  414918:	imul   edx,DWORD PTR ds:0xd260bcee,0xffffffa8
  41491f:	shl    DWORD PTR [ecx-0x4992c649],cl
  414925:	int    0x1d
  414927:	cmc    
  414928:	cld    
  414929:	push   ebx
  41492a:	mov    ?,eax
  41492c:	jne    0x414910
  41492e:	cmc    
  41492f:	jno    0x4149ad
  414931:	ja     0x4148e6
  414933:	xchg   BYTE PTR [ebx-0x13],dh
  414936:	nop
  414937:	xchg   edx,eax
  414938:	stos   DWORD PTR es:[edi],eax
  414939:	call   0x41497a
  41493e:	add    BYTE PTR [eax],al
  414940:	pop    ecx
  414941:	sbb    esp,DWORD PTR [edx+edx*2+0x64]
  414945:	add    eax,0x0
  41494a:	add    BYTE PTR [eax],al
  41494c:	fs add eax,0x40000
  414952:	es jl  0x414955
  414955:	add    dh,BYTE PTR [esi]
  414957:	or     BYTE PTR [eax],al
  414959:	add    BYTE PTR [edi+0xbff0049],dh
  41495f:	mov    cl,0xcc
  414961:	jmp    0xdc75:0x24abe3e7
  414968:	add    ebp,esp
  41496a:	sbb    esp,esi
  41496c:	jae    0x41490a
  41496e:	dec    eax
  41496f:	dec    edi
  414970:	(bad)  
  414971:	fistp  WORD PTR ds:0x6be0eda4
  414977:	ins    BYTE PTR es:[edi],dx
  414978:	call   0x81803bd8
  41497d:	shl    DWORD PTR [eax+0x7],0x90
  414981:	jmp    0xea3e60fe
  414986:	out    0x26,eax
  414988:	mov    ebp,0x4598b93c
  41498d:	fmul   QWORD PTR [ebp+0x6f559c91]
  414993:	dec    edx
  414994:	mov    esp,0x74727469
  414999:	shl    cl,1
  41499b:	or     al,0x4f
  41499e:	scas   eax,DWORD PTR es:[edi]
  41499f:	nop
  4149a0:	ins    DWORD PTR es:[edi],dx
  4149a1:	xchg   ebx,eax
  4149a2:	pop    ebp
  4149a3:	sub    ebp,ecx
  4149a5:	inc    eax
  4149a6:	(bad)  
  4149a7:	jbe    0x41495d
  4149a9:	mov    bl,0x7b
  4149ab:	ret    
  4149ac:	pop    es
  4149ad:	(bad)  
  4149ae:	test   eax,0x797e9795
  4149b3:	gs or  al,0x67
  4149b6:	inc    ebx
  4149b7:	(bad)  
  4149b8:	jns    0x414a2a
  4149ba:	xchg   BYTE PTR [edi+0x74528c8d],dh
  4149c0:	pushf  
  4149c1:	pop    esi
  4149c2:	jp     0x41494b
  4149c4:	jno    0x414965
  4149c6:	in     eax,dx
  4149c7:	mov    ah,0x48
  4149c9:	aaa    
  4149ca:	lea    esi,[eax]
  4149cc:	retf   
  4149cd:	adc    ebx,DWORD PTR [ebp+0x58]
  4149d0:	fcom   st(7)
  4149d2:	jno    0x414974
  4149d4:	fistp  WORD PTR [ebp-0x6f5fda01]
  4149da:	xchg   DWORD PTR [ecx+0x5],edi
  4149dd:	sbb    eax,0x6164d096
  4149e2:	imul   ebp,DWORD PTR [eax+0x797c3bba],0x75
  4149e9:	int    0xf7
  4149eb:	xor    DWORD PTR [ebp-0x10252d2f],ecx
  4149f1:	sbb    edi,esp
  4149f3:	push   ebp
  4149f4:	out    dx,al
  4149f5:	call   0xb6242b3
  4149fa:	int3   
  4149fb:	sub    eax,DWORD PTR [ecx-0x10]
  4149fe:	aaa    
  4149ff:	shl    al,0xaf
  414a02:	arpl   WORD PTR [edi-0x42b9c081],bp
  414a08:	mov    al,ds:0xb0ccc91a
  414a0d:	pop    ebp
  414a0e:	lods   eax,DWORD PTR ds:[esi]
  414a0f:	cmp    bl,dl
  414a11:	pop    ds
  414a12:	sub    DWORD PTR [edx],esp
  414a14:	lock repnz retf 
  414a17:	add    cl,BYTE PTR [ebx-0x1dc01f8f]
  414a1d:	push   esp
  414a1e:	cmp    ebp,DWORD PTR [ecx-0x3c]
  414a21:	daa    
  414a22:	xchg   ebp,eax
  414a23:	enter  0x1b30,0xb
  414a27:	cmp    al,0xb2
  414a29:	retf   
  414a2a:	cmp    ebx,DWORD PTR [ebx-0x7f]
  414a2d:	sub    BYTE PTR [ecx+0x74],dl
  414a30:	in     al,0xfe
  414a32:	and    ecx,DWORD PTR [ebx]
  414a34:	xor    al,0x4d
  414a36:	ja     0x414aad
  414a38:	in     al,0x38
  414a3a:	psrad  mm3,QWORD PTR [ebp+0x24681e8d]
  414a41:	mov    bl,0x3a
  414a43:	mov    ebx,0x8afde974
  414a48:	dec    ecx
  414a49:	jnp    0x414a01
  414a4b:	push   ecx
  414a4c:	push   edx
  414a4d:	pop    edx
  414a4e:	pop    eax
  414a4f:	push   ebx
  414a50:	sahf   
  414a51:	imul   edx,DWORD PTR [ecx-0x74e37283],0xffffffd5
  414a58:	mov    BYTE PTR [edi],al
  414a5a:	shl    BYTE PTR [edi],0x4d
  414a5d:	shr    BYTE PTR [ebx+0x101ea8fd],0xe7
  414a64:	cmp    ebp,ebx
  414a66:	retf   
  414a67:	mov    edx,0x4d9f7d48
  414a6c:	sbb    DWORD PTR [edi+0x3],ebx
  414a6f:	cmp    DWORD PTR [eax+0x78902d5f],eax
  414a75:	dec    eax
  414a76:	mov    ds:0xa36cd504,eax
  414a7b:	push   0x1f
  414a7d:	popf   
  414a7e:	int3   
  414a7f:	test   eax,0xd069101d
  414a84:	mov    bh,0xf5
  414a86:	or     cl,0x65
  414a89:	es dec esp
  414a8b:	pop    ecx
  414a8c:	pop    esp
  414a8d:	push   es
  414a8e:	rcr    BYTE PTR [ebx-0x37],1
  414a91:	stos   DWORD PTR es:[edi],eax
  414a92:	rcl    DWORD PTR [ecx+0x54f1d07d],0x5
  414a99:	and    eax,0xa166ac96
  414a9e:	nop
  414a9f:	pop    edx
  414aa0:	je     0x414b13
  414aa2:	jp     0x414a59
  414aa4:	cmp    al,0x9
  414aa6:	dec    eax
  414aa7:	dec    edi
  414aa8:	push   edx
  414aa9:	push   ebp
  414aaa:	inc    ebx
  414aab:	pop    esi
  414aac:	ins    BYTE PTR es:[edi],dx
  414aad:	and    al,0x9a
  414aaf:	adc    DWORD PTR [bx-0x78],0x830700f7
  414ab7:	mov    WORD PTR [ebx-0x69],fs
  414aba:	outs   dx,DWORD PTR ds:[esi]
  414abb:	adc    eax,0xd92348d5
  414ac0:	xchg   esi,eax
  414ac1:	push   0xa24489b1
  414ac6:	sub    al,0xff
  414ac8:	ror    BYTE PTR [esi-0x1b3ecf9b],1
  414ace:	je     0x414b23
  414ad0:	add    DWORD PTR [edi+ecx*2+0x77fef00],esp
  414ad7:	nop
  414ad8:	jmp    0x9a555c4d
  414add:	rep outs dx,BYTE PTR ds:[esi]
  414adf:	out    0x16,al
  414ae1:	cmp    DWORD PTR [edi],0x470ec7f0
  414ae7:	ror    dl,1
  414ae9:	push   es
  414aea:	fsub   QWORD PTR [esi+0x64]
  414aed:	and    edi,edx
  414aef:	xor    DWORD PTR [ebx],edi
  414af1:	cmc    
  414af2:	iret   
  414af3:	fild   WORD PTR ds:0xab120483
  414af9:	inc    ebx
  414afa:	and    al,0x6d
  414afc:	push   edx
  414afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414afe:	dec    esi
  414aff:	xchg   edi,eax
  414b00:	test   al,0x45
  414b02:	dec    ecx
  414b03:	jns    0x414b21
  414b05:	dec    esi
  414b06:	aad    0xf7
  414b08:	es push edi
  414b0a:	loop   0x414b5d
  414b0c:	imul   ebp,eax,0xffb03fb
  414b12:	mov    DWORD PTR [ecx+0x48],esi
  414b15:	in     al,0x9b
  414b17:	in     al,0xd9
  414b19:	sar    BYTE PTR [ecx],cl
  414b1b:	and    eax,0x734279e
  414b20:	iret   
  414b21:	rol    edi,0xce
  414b24:	jmp    DWORD PTR [edi]
  414b26:	xlat   BYTE PTR ds:[ebx]
  414b27:	ins    DWORD PTR es:[edi],dx
  414b28:	ficom  WORD PTR [eax]
  414b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b2b:	loop   0x414abe
  414b2d:	adc    bh,al
  414b2f:	test   DWORD PTR [eax],esp
  414b31:	and    esp,DWORD PTR [eax+esi*8]
  414b34:	aas    
  414b35:	ins    DWORD PTR es:[edi],dx
  414b36:	hlt    
  414b37:	sbb    ebx,DWORD PTR ds:0xac9ca901
  414b3d:	pop    es
  414b3e:	lds    ebp,FWORD PTR [ecx]
  414b40:	int    0x19
  414b42:	inc    edi
  414b43:	xchg   BYTE PTR [eax+0x65],cl
  414b46:	ja     0x414b20
  414b48:	push   edx
  414b49:	outs   dx,DWORD PTR ds:[esi]
  414b4a:	hlt    
  414b4b:	lea    ebx,[bx+si]
  414b4e:	cmp    esp,eax
  414b50:	or     esi,ebx
  414b52:	adc    BYTE PTR [edi],ch
  414b54:	loop   0x414af3
  414b56:	fiadd  DWORD PTR ds:0xdb0b2e20
  414b5c:	mov    ecx,0xc1ec8d68
  414b61:	inc    esi
  414b62:	dec    ebx
  414b63:	push   edx
  414b64:	xchg   ebx,eax
  414b65:	push   esi
  414b66:	mov    eax,ds:0x89807fdd
  414b6b:	sub    eax,0xb2b9851f
  414b70:	mov    eax,DWORD PTR [ecx+esi*4+0xc]
  414b74:	adc    eax,0xf870279a
  414b79:	sub    edx,DWORD PTR [ecx-0x1dcfca3c]
  414b7f:	shl    ah,0x91
  414b82:	inc    eax
  414b83:	arpl   WORD PTR [edx+0x30e13019],cx
  414b89:	int3   
  414b8a:	out    dx,al
  414b8b:	dec    edi
  414b8c:	out    0xec,al
  414b8e:	jg     0x414be6
  414b90:	adc    DWORD PTR [edi-0x1a503898],0xcc9f2074
  414b9a:	rcr    DWORD PTR [eax+esi*2+0x7],1
  414b9e:	cmp    eax,0xd17041ac
  414ba3:	ss inc ecx
  414ba5:	add    bl,ch
  414ba7:	mov    esi,0x75f01e6b
  414bac:	mov    edx,0x814578df
  414bb1:	push   ebp
  414bb2:	xchg   ecx,eax
  414bb3:	xchg   edx,eax
  414bb4:	and    al,0xe1
  414bb6:	jl     0x414be1
  414bb8:	adc    al,0x97
  414bba:	gs jmp 0xddc9:0xc56ba000
  414bc2:	push   edx
  414bc3:	rcr    BYTE PTR [eax],0x4b
  414bc6:	jb     0x414c31
  414bc8:	jne    0x414b8f
  414bca:	mov    ebx,0x9e419862
  414bcf:	pusha  
  414bd0:	int3   
  414bd1:	sbb    al,0x11
  414bd3:	cmp    DWORD PTR [eax+0x6b],0xfffffff3
  414bd7:	push   ss
  414bd8:	jo     0x414b8b
  414bda:	sar    BYTE PTR [esi+0x14],cl
  414bdd:	rcr    cl,0x48
  414be0:	int    0xd2
  414be2:	leave  
  414be3:	and    al,0x9d
  414be5:	jmp    0x414c4b
  414be7:	xor    bl,bh
  414be9:	sub    edi,edx
  414beb:	es iret 
  414bed:	fld    DWORD PTR ds:0xd974f215
  414bf3:	inc    ebp
  414bf4:	or     ah,BYTE PTR [ebx-0xf961390]
  414bfa:	outs   dx,DWORD PTR ds:[esi]
  414bfb:	stc    
  414bfc:	sbb    BYTE PTR [eax],bl
  414bfe:	inc    ebx
  414bff:	adc    al,0x11
  414c01:	leave  
  414c02:	fdiv   DWORD PTR [ebp+ebp*8-0xe93569c]
  414c09:	(bad)  
  414c0a:	cli    
  414c0b:	jl     0x414c0e
  414c0d:	repz dec ebx
  414c0f:	adc    dh,BYTE PTR [ebx]
  414c11:	in     al,dx
  414c12:	adc    ebp,esp
  414c14:	xchg   ecx,eax
  414c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c16:	nop
  414c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c18:	jne    0x414c6a
  414c1a:	ds cmc 
  414c1c:	les    esp,FWORD PTR [esi-0x26206e2b]
  414c22:	(bad)  [ebp+0x2c]
  414c25:	out    dx,al
  414c26:	fisttp WORD PTR [eax]
  414c28:	test   DWORD PTR [ebp-0x4],0x1c88fb22
  414c2f:	shl    BYTE PTR [edi],cl
  414c31:	pop    ebp
  414c32:	pushf  
  414c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c34:	pop    es
  414c35:	ins    DWORD PTR es:[edi],dx
  414c36:	or     al,0xd8
  414c38:	pop    es
  414c39:	cli    
  414c3a:	aas    
  414c3b:	xchg   DWORD PTR [esi+ebp*2+0x50d4dcc1],eax
  414c42:	loope  0x414c03
  414c44:	imul   edi,esi,0xfffffff3
  414c47:	or     eax,0x4595243b
  414c4c:	pop    ds
  414c4d:	ret    0xcc51
  414c50:	rcr    DWORD PTR [esi*8-0x3e5a1151],0x34
  414c58:	stc    
  414c59:	pop    ds
  414c5a:	mov    cs,WORD PTR [edi-0x72]
  414c5d:	outs   dx,DWORD PTR ds:[esi]
  414c5e:	adc    eax,0x40d552b4
  414c63:	js     0x414c0e
  414c65:	mov    WORD PTR [eax],cs
  414c67:	mov    ebx,0x9099b5b9
  414c6c:	xchg   edi,ecx
  414c6e:	adc    eax,0x6041d714
  414c73:	out    0x2f,eax
  414c75:	mov    ebp,0x4c3d3c36
  414c7a:	cmp    DWORD PTR [eax-0x2c47d281],esp
  414c80:	dec    eax
  414c81:	mov    eax,0xae72a847
  414c86:	push   esp
  414c87:	jns    0x414d08
  414c89:	jns    0x414c94
  414c8b:	enter  0x8718,0x2a
  414c8f:	sbb    eax,0xb14484ad
  414c94:	scas   eax,DWORD PTR es:[edi]
  414c95:	xchg   esi,eax
  414c96:	ret    0x2cf8
  414c99:	xchg   esp,eax
  414c9a:	mov    DWORD PTR [esi+0x5f892d54],eax
  414ca0:	sbb    DWORD PTR [eax-0x47],esp
  414ca3:	outs   dx,DWORD PTR ds:[esi]
  414ca4:	jae    0x414d1d
  414ca6:	mov    al,0x77
  414ca8:	dec    esi
  414ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414caa:	lds    ebx,FWORD PTR [esp+ecx*2-0x5f831ae3]
  414cb1:	frstor [edx+0x27]
  414cb4:	addr16 mov al,ds:0x7679
  414cb8:	in     al,0xc8
  414cba:	sbb    ebp,ebp
  414cbc:	fadd   QWORD PTR [ebx]
  414cbe:	pop    edi
  414cbf:	cmc    
  414cc0:	dec    esi
  414cc1:	pusha  
  414cc2:	dec    ecx
  414cc3:	jl     0x414c55
  414cc5:	cwde   
  414cc6:	or     al,0xfd
  414cc8:	test   dh,dh
  414cca:	mov    edi,0x9f70d4ed
  414ccf:	pop    edx
  414cd0:	das    
  414cd1:	std    
  414cd2:	inc    eax
  414cd3:	xor    BYTE PTR [eax-0x37428385],bh
  414cd9:	popf   
  414cda:	int    0x85
  414cdc:	or     ah,ah
  414cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cdf:	and    bl,BYTE PTR [edx+ebp*1+0x718cd13a]
  414ce6:	test   eax,0xe96c03ec
  414ceb:	pop    esp
  414cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ced:	mov    ah,0x61
  414cef:	outs   dx,BYTE PTR ds:[esi]
  414cf0:	scas   al,BYTE PTR es:[edi]
  414cf1:	ins    DWORD PTR es:[edi],dx
  414cf2:	mov    ah,0xb8
  414cf4:	cmp    DWORD PTR [eax-0xbfdf6b],esi
  414cfa:	test   DWORD PTR [eax+edi*1],esi
  414cfd:	mov    eax,ds:0x6c0cb1d3
  414d02:	lea    esi,[ebp+0x78]
  414d05:	xchg   edi,eax
  414d06:	xchg   esp,eax
  414d07:	ds jl  0x414d5b
  414d0a:	scas   al,BYTE PTR es:[edi]
  414d0b:	ds cwd 
  414d0e:	sbb    eax,0xd46a2fa4
  414d13:	mov    edi,0xc0648d79
  414d18:	mov    edx,DWORD PTR [eax+0x1ad4d32d]
  414d1e:	(bad)  
  414d1f:	adc    BYTE PTR [eax-0x31],cl
  414d22:	or     eax,0x68b06db
  414d27:	popf   
  414d28:	mov    gs,WORD PTR [edi]
  414d2a:	ret    
  414d2b:	sbb    ecx,edi
  414d2d:	test   eax,0xbbe0c071
  414d32:	loop   0x414ced
  414d34:	cmp    BYTE PTR es:[ebx+0x43],0x7f
  414d39:	xor    BYTE PTR [eax+0x1e],dl
  414d3c:	cli    
  414d3d:	jne    0x414d6a
  414d3f:	xchg   bl,dh
  414d41:	popa   
  414d42:	call   0xf6685b63
  414d47:	lea    edi,[ebx+0x11]
  414d4a:	cmp    BYTE PTR [esi],al
  414d4c:	les    eax,FWORD PTR [edx+esi*1]
  414d4f:	rol    BYTE PTR [ecx+0x2a3fb8ea],cl
  414d55:	xchg   BYTE PTR [ebp+0x42],cl
  414d58:	mov    eax,0x414a4cf5
  414d5d:	imul   esp,DWORD PTR [esi+0x62],0x7794b40d
  414d64:	shr    DWORD PTR [ebx],cl
  414d66:	fstp   QWORD PTR [ecx+0x251c14f6]
  414d6c:	push   esp
  414d6d:	or     edi,ebx
  414d6f:	mov    ecx,0x43563aa1
  414d74:	dec    ebx
  414d75:	sub    ecx,DWORD PTR [ebp-0x58]
  414d78:	push   ss
  414d79:	pop    ebx
  414d7a:	fmul   QWORD PTR [eax+0x7d]
  414d7d:	loope  0x414db8
  414d7f:	xchg   esp,eax
  414d80:	aad    0x57
  414d82:	ja     0x414d5b
  414d84:	and    al,0xaa
  414d86:	dec    esp
  414d87:	nop
  414d88:	push   esi
  414d89:	test   DWORD PTR [eax+0x10f0b962],ecx
  414d8f:	jnp    0x414d77
  414d91:	sub    eax,0xc7926da0
  414d96:	add    eax,0x73c833d5
  414d9b:	ret    
  414d9c:	enter  0xac6a,0xef
  414da0:	jnp    0x414d58
  414da2:	add    eax,0x9f1c6c8b
  414da7:	das    
  414da8:	cmp    BYTE PTR [esi+0x2652df84],bh
  414dae:	fstp   TBYTE PTR [esi+eiz*4-0x362382d2]
  414db5:	ret    0x805a
  414db8:	cld    
  414db9:	ins    DWORD PTR es:[edi],dx
  414dba:	and    al,0x11
  414dbc:	jmp    0xe7ca4ddc
  414dc1:	inc    ecx
  414dc2:	(bad)  [ecx]
  414dc4:	out    0xc5,eax
  414dc6:	xor    al,0xfe
  414dc8:	mov    esi,0x48b5d3ae
  414dcd:	jno    0x414d88
  414dcf:	push   eax
  414dd0:	addr16 inc edi
  414dd2:	scas   eax,DWORD PTR es:[edi]
  414dd3:	and    ah,bh
  414dd5:	or     al,0xd5
  414dd7:	jmp    0x414dc6
  414dd9:	call   0xb98e:0xd6e269f8
  414de0:	add    BYTE PTR [ebx],al
  414de2:	dec    ecx
  414de3:	in     eax,0xb
  414de5:	jo     0x414d80
  414de7:	mov    esp,0x4c72d936
  414dec:	mov    ch,0x3c
  414dee:	fs aas 
  414df0:	mov    edx,0x10c1fcc4
  414df5:	hlt    
  414df6:	sbb    ah,bl
  414df8:	call   0x747829e3
  414dfd:	cli    
  414dfe:	das    
  414dff:	(bad)  
  414e01:	paddsb mm3,mm2
  414e04:	xor    esi,DWORD PTR [eax+edi*1-0x49953797]
  414e0b:	js     0x414dd0
  414e0d:	cli    
  414e0e:	sub    BYTE PTR [eax+0x31ec75c7],cl
  414e14:	fild   QWORD PTR [ecx]
  414e16:	out    dx,eax
  414e17:	mov    al,ds:0xd3e6329f
  414e1c:	je     0x414e53
  414e1e:	or     eax,0x81ecb621
  414e23:	xchg   esp,eax
  414e24:	adc    bl,al
  414e26:	call   0xd7c8:0x2fc79a67
  414e2d:	dec    edi
  414e2e:	popf   
  414e2f:	dec    ebx
  414e30:	xor    cl,BYTE PTR [edx-0x23e7cf2d]
  414e36:	loop   0x414e1c
  414e38:	sub    DWORD PTR [edx-0x65],0x880c83d4
  414e3f:	daa    
  414e40:	retf   0x7007
  414e43:	sar    al,0x17
  414e46:	rol    BYTE PTR [edi+ebx*2-0xf0a08fc],1
  414e4d:	js     0x414e6e
  414e4f:	xchg   DWORD PTR [ecx],ebp
  414e51:	or     BYTE PTR [edi+0x44d90c57],dl
  414e57:	jecxz  0x414e5c
  414e59:	mov    dl,0xf1
  414e5b:	pop    ds
  414e5c:	sub    DWORD PTR es:[edi-0x10],0x17989d8c
  414e64:	fidivr DWORD PTR [ebp+0x5bad27e5]
  414e6a:	mov    edi,0x3381441c
  414e6f:	pop    esi
  414e70:	ins    DWORD PTR es:[edi],dx
  414e71:	daa    
  414e72:	pop    ecx
  414e73:	imul   edx,DWORD PTR [ebx+eiz*2+0x73a46c1c],0x77
  414e7b:	jnp    0x414e37
  414e7d:	mov    eax,DWORD PTR [esi-0x55]
  414e80:	leave  
  414e81:	inc    ecx
  414e82:	push   ss
  414e83:	repz pop edi
  414e85:	daa    
  414e86:	jmp    0xbf5d9687
  414e8b:	push   edi
  414e8c:	xor    BYTE PTR [ebx],0x4a
  414e8f:	lods   al,BYTE PTR ds:[esi]
  414e90:	xchg   ecx,eax
  414e91:	and    esi,DWORD PTR [eax+0x25ef995f]
  414e97:	xor    BYTE PTR [ecx+0x21b07e34],0x88
  414e9e:	lods   al,BYTE PTR ds:[esi]
  414e9f:	lea    eax,[eax]
  414ea1:	lods   eax,DWORD PTR ds:[esi]
  414ea2:	pop    ss
  414ea3:	in     al,0xab
  414ea5:	rcr    BYTE PTR cs:[ebp-0x75],1
  414ea9:	jle    0x414ea4
  414eab:	les    ebp,FWORD PTR [edi+0x3c]
	...
  414eb6:	add    BYTE PTR [eax],al
  414eb8:	aaa    
  414eb9:	sbb    edi,esi
  414ebb:	push   ecx
  414ebc:	push   ebx
  414ebd:	add    eax,0x0
  414ec2:	add    BYTE PTR [eax],al
  414ec4:	push   ebx
  414ec5:	add    eax,0x50000
  414eca:	es jl  0x414ecd
  414ecd:	add    dh,BYTE PTR [esi]
  414ecf:	or     BYTE PTR [eax],al
  414ed1:	add    dh,al
  414ed3:	dec    ecx
  414ed4:	add    BYTE PTR [ebp+0x599be045],cl
  414eda:	les    edx,FWORD PTR [edi-0xa5cdb27]
  414ee0:	icebp  
  414ee1:	sti    
  414ee2:	and    ebp,edi
  414ee4:	mov    ecx,DWORD PTR [edi+0x48]
  414ee7:	jg     0x414e94
  414ee9:	xchg   ebp,eax
  414eea:	xchg   ecx,eax
  414eeb:	pop    edx
  414eec:	push   ebx
  414eed:	popf   
  414eee:	imul   ebp,DWORD PTR [ebp+ecx*8+0x58],0xffffff87
  414ef3:	cmp    DWORD PTR [edi+0xf],0xffffffc5
  414ef7:	push   0x7cd5a790
  414efc:	pop    es
  414efd:	lock add edi,DWORD PTR gs:[ecx+0x38]
  414f02:	fadd   DWORD PTR [ebx-0x75]
  414f05:	ret    
  414f06:	xor    DWORD PTR [eax+0x595cd4d9],edi
  414f0c:	or     eax,DWORD PTR [ebp+eax*4+0x5d]
  414f10:	ja     0x414ebb
  414f12:	cmc    
  414f13:	mov    BYTE PTR [ecx],cl
  414f15:	push   eax
  414f16:	jb     0x414ea9
  414f18:	call   0x2fba6691
  414f1d:	test   al,0x55
  414f1f:	jno    0x414fa0
  414f21:	scas   al,BYTE PTR es:[edi]
  414f22:	jge    0x414f33
  414f24:	leave  
  414f25:	jg     0x414f79
  414f27:	mov    ebx,DWORD PTR [eax+0x4e]
  414f2a:	scas   eax,DWORD PTR es:[edi]
  414f2b:	pop    bx
  414f2d:	mov    bl,0x73
  414f2f:	jmp    0x7cf7cdad
  414f34:	xor    DWORD PTR [ebp-0x4d],0x6a
  414f38:	adc    DWORD PTR [ecx],esp
  414f3a:	loop   0x414fac
  414f3c:	stos   BYTE PTR es:[edi],al
  414f3d:	mov    edx,0x31334d93
  414f42:	rcl    esi,0xc3
  414f45:	int3   
  414f46:	pop    ds
  414f47:	xlat   BYTE PTR ds:[ebx]
  414f48:	adc    edx,DWORD PTR [ebp-0x53]
  414f4b:	or     al,0x63
  414f4d:	es je  0x414f09
  414f50:	mov    ch,0x99
  414f52:	(bad)  
  414f54:	dec    ebp
  414f55:	pop    edi
  414f56:	lahf   
  414f57:	pushf  
  414f58:	scas   eax,DWORD PTR es:[edi]
  414f59:	outs   dx,DWORD PTR ds:[esi]
  414f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f5b:	scas   al,BYTE PTR es:[edi]
  414f5c:	stos   BYTE PTR es:[edi],al
  414f5d:	cmp    DWORD PTR [ebx-0x45],0x31
  414f61:	ret    0xc9f4
  414f64:	mov    ebp,0xa1eb34ad
  414f69:	cmp    al,0xc7
  414f6b:	test   al,0x16
  414f6d:	ret    
  414f6e:	mov    DWORD PTR [eax],ebx
  414f70:	(bad)  
  414f71:	stc    
  414f72:	add    al,0x76
  414f74:	adc    DWORD PTR [eax],0x200a1798
  414f7a:	fsubr  st(6),st
  414f7c:	mov    bl,0x45
  414f7e:	std    
  414f7f:	mov    ecx,0xbcd82cb0
  414f84:	pop    ebx
  414f85:	test   eax,0xef93df34
  414f8a:	fsub   DWORD PTR [ebx]
  414f8c:	sar    DWORD PTR [ecx+esi*2],cl
  414f8f:	(bad)  
  414f90:	addr16 add al,0x20
  414f93:	das    
  414f94:	fild   QWORD PTR [ecx+edx*4+0x2225f091]
  414f9b:	das    
  414f9c:	dec    eax
  414f9d:	aaa    
  414f9e:	xor    eax,edx
  414fa0:	inc    ecx
  414fa1:	mov    dh,0xce
  414fa3:	xor    al,0xd4
  414fa5:	xor    dl,BYTE PTR [edi+0x2e]
  414fa8:	and    eax,0x7ac3e721
  414fad:	add    ebp,edi
  414faf:	push   es
  414fb0:	add    al,0x7f
  414fb2:	or     al,0x91
  414fb4:	pop    ss
  414fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb6:	sub    BYTE PTR [ecx+0x3f5281b],ah
  414fbc:	out    dx,al
  414fbd:	sbb    esp,edx
  414fbf:	jae    0x414f5e
  414fc1:	dec    ebx
  414fc2:	dec    esp
  414fc3:	(bad)  
  414fc4:	fist   WORD PTR ds:0x63e8edbc
  414fca:	sub    al,0x54
  414fcc:	push   ecx
  414fcd:	dec    esp
  414fce:	pop    esp
  414fcf:	pop    es
  414fd0:	leave  
  414fd1:	or     DWORD PTR [esi],ebp
  414fd3:	lock cwde 
  414fd5:	mov    gs,WORD PTR [edi+ebp*8+0x3e]
  414fd9:	lods   eax,DWORD PTR ds:[esi]
  414fda:	or     bh,BYTE PTR [edx+0x44a8414e]
  414fe0:	aas    
  414fe1:	xor    edx,eax
  414fe3:	mov    eax,0x8c1d2bdc
  414fe8:	popa   
  414fe9:	adc    al,0xfb
  414feb:	mov    WORD PTR [ecx+0x44],?
  414fee:	xchg   BYTE PTR [edx+ecx*1+0x22],bl
  414ff2:	xchg   ecx,eax
  414ff3:	xchg   edi,eax
  414ff4:	sbb    dl,BYTE PTR [ebx]
  414ff6:	fild   QWORD PTR [ebx]
  414ff8:	xchg   ecx,eax
  414ff9:	mov    edx,0x9e0ab90c
  414ffe:	les    edi,FWORD PTR [esi-0x6c]
  415001:	arpl   WORD PTR [esi+0x19606ad8],cx
  415007:	mov    ah,0xe1
  415009:	int3   
  41500a:	dec    edi
  41500b:	mov    ds:0xfe9879f4,al
  415010:	lea    edx,[ecx+0x2fb59ab6]
  415016:	xchg   ecx,eax
  415017:	and    edx,ecx
  415019:	push   esp
  41501a:	idiv   DWORD PTR [eax+ecx*8-0x265b823c]
  415021:	sbb    DWORD PTR [eax-0x7a7fa8a7],edi
  415027:	out    0xdf,eax
  415029:	test   al,0x79
  41502b:	mov    al,0x80
  41502d:	popf   
  41502e:	xchg   ecx,eax
  41502f:	or     eax,0x9ca295b1
  415034:	mov    ds:0x3b96a8a5,eax
  415039:	ins    BYTE PTR es:[edi],dx
  41503a:	mov    esp,DWORD PTR [edx-0x1d]
  41503d:	sbb    eax,0xd70efcfb
  415042:	gs loopne 0x415025
  415045:	fisubr DWORD PTR [ebp+0x1]
  415048:	test   al,0xf5
  41504a:	jl     0x415060
  41504c:	xchg   edi,eax
  41504d:	fcmovu st,st(5)
  41504f:	scas   al,BYTE PTR es:[edi]
  415050:	or     al,0x99
  415052:	leave  
  415053:	pusha  
  415054:	dec    esp
  415055:	and    esi,ecx
  415057:	push   eax
  415058:	cmp    eax,0xc4dd7e2d
  41505d:	(bad)  
  41505e:	int3   
  41505f:	(bad)  
  415060:	test   DWORD PTR [ecx],0x22253157
  415066:	loope  0x4150dc
  415068:	mov    DWORD PTR [edx],0x3b06017d
  41506e:	not    BYTE PTR [ebx]
  415070:	sbb    edi,DWORD PTR [eax-0x58b70e60]
  415076:	popa   
  415077:	xchg   edi,eax
  415078:	in     eax,dx
  415079:	pop    eax
  41507a:	retf   
  41507b:	inc    esp
  41507c:	sbb    ecx,edi
  41507e:	pop    es
  41507f:	pop    ebp
  415080:	lea    esp,[ebx+ebp*2]
  415083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415084:	in     eax,0x7d
  415086:	lock fwait
  415088:	loope  0x415101
  41508a:	fiadd  DWORD PTR [edi]
  41508c:	xchg   dh,al
  41508e:	push   ss
  41508f:	adc    eax,0x25603e12
  415094:	push   ds
  415095:	cld    
  415096:	add    esp,DWORD PTR [ecx-0x48]
  415099:	inc    esi
  41509a:	out    0x9d,eax
  41509c:	int3   
  41509d:	cmp    bh,ah
  41509f:	or     bh,bl
  4150a1:	aaa    
  4150a2:	imul   ebx,DWORD PTR [esi+ebx*8-0x10],0xa8cd3e99
  4150aa:	add    eax,0x249be87d
  4150af:	dec    ebp
  4150b0:	in     al,0xa9
  4150b2:	xchg   ecx,eax
  4150b3:	push   0x3e
  4150b5:	lock cmp DWORD PTR [esi],ebp
  4150b8:	mov    bh,0x0
  4150ba:	mov    dh,0x89
  4150bc:	sbb    BYTE PTR [ebp+0x67],0xa6
  4150c0:	frstor [ecx-0x16]
  4150c3:	call   0xe4bc5b8b
  4150c8:	and    ebx,esi
  4150ca:	cmp    ebp,0x1b
  4150cd:	adc    al,0xea
  4150cf:	aas    
  4150d0:	push   ebp
  4150d1:	les    esp,FWORD PTR [ebx]
  4150d3:	fbstp  TBYTE PTR [ebx]
  4150d5:	ret    
  4150d6:	push   0xc3b035b5
  4150db:	dec    esp
  4150dc:	pop    ebp
  4150dd:	stos   BYTE PTR es:[edi],al
  4150de:	cdq    
  4150df:	inc    esp
  4150e0:	mov    esi,0xbe74ab6d
  4150e5:	jb     0x41515f
  4150e7:	jo     0x4150de
  4150e9:	ins    BYTE PTR es:[edi],dx
  4150ea:	mov    ebx,0x1ff404f9
  4150ef:	popf   
  4150f0:	pusha  
  4150f1:	push   0xdc411336
  4150f6:	cmp    eax,0xc1bf4681
  4150fb:	aam    0x52
  4150fd:	nop
  4150fe:	jnp    0x415163
  415100:	fsubr  DWORD PTR fs:[ebp+0x35]
  415104:	xchg   esp,eax
  415105:	repz or DWORD PTR [ebp+ecx*1-0x72],esi
  41510a:	or     DWORD PTR [edx-0x74],edx
  41510d:	pop    eax
  41510e:	xchg   ecx,eax
  41510f:	mov    dh,0x2f
  415111:	outs   dx,BYTE PTR ds:[esi]
  415112:	ins    DWORD PTR es:[edi],dx
  415113:	js     0x415151
  415115:	xor    DWORD PTR [ebx-0x44],esi
  415118:	leave  
  415119:	dec    ebp
  41511a:	push   edx
  41511b:	addr16 mov al,ds:0x51d8
  41511f:	fs scas al,BYTE PTR es:[edi]
  415121:	addr16 mov dl,0x57
  415124:	mov    ecx,0x88a75ef7
  415129:	push   esi
  41512a:	fwait
  41512b:	push   edi
  41512c:	fwait
  41512d:	pop    ebx
  41512e:	sub    ecx,esp
  415130:	pop    eax
  415131:	jmp    0x5a8:0x74b5f43b
  415138:	add    dl,cl
  41513a:	push   ecx
  41513b:	ficom  WORD PTR [eax+0x295a65dd]
  415141:	cwde   
  415142:	inc    edi
  415143:	cmp    eax,0xc8c1a398
  415148:	ins    BYTE PTR es:[edi],dx
  415149:	mov    ds:0x679f70d1,eax
  41514e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41514f:	xor    ah,BYTE PTR [ecx]
  415151:	mov    al,0x30
  415153:	cmp    BYTE PTR [ebx-0x41],0x9d
  415157:	ja     0x4151a0
  415159:	lods   eax,DWORD PTR ds:[esi]
  41515a:	pop    esp
  41515b:	sub    bh,bl
  41515d:	sub    BYTE PTR [eax-0xf],ah
  415160:	xor    edi,DWORD PTR [ebx+0x33]
  415163:	stc    
  415164:	pop    eax
  415165:	sub    eax,0xd4481184
  41516a:	call   0x7728:0x6c7cb91c
  415171:	xchg   edi,eax
  415172:	mov    eax,0xeb02cb42
  415177:	push   cs
  415178:	fist   DWORD PTR [ebx]
  41517a:	fcmovnu st,st(4)
  41517c:	and    ebp,DWORD PTR [ebp-0x53]
  41517f:	add    BYTE PTR [ebx+0x35],bh
  415182:	cmp    DWORD PTR [edx+eiz*1],esi
  415185:	sbb    eax,0x271b5b09
  41518a:	fistp  WORD PTR [ebp+0x7c1b2221]
  415190:	idiv   DWORD PTR [ebx+0x74068c39]
  415196:	sub    BYTE PTR [eax+0x6f],dl
  415199:	sti    
  41519a:	enter  0xd719,0xa8
  41519e:	fwait
  41519f:	or     ah,dh
  4151a1:	in     al,0x71
  4151a3:	test   BYTE PTR [ebx],al
  4151a5:	enter  0x1bff,0xf4
  4151a9:	ficomp WORD PTR [edi]
  4151ab:	lock loopne 0x4151ed
  4151ae:	lods   al,BYTE PTR ds:[esi]
  4151af:	ds or  eax,edi
  4151b2:	sbb    DWORD PTR [esi+0x5],edx
  4151b5:	pusha  
  4151b6:	int    0xd2
  4151b8:	aam    0x59
  4151ba:	bound  esp,QWORD PTR [esi+0x18]
  4151bd:	out    0xf2,eax
  4151bf:	or     al,0x3e
  4151c1:	sub    edi,DWORD PTR [ebp-0xc]
  4151c4:	sub    esi,esp
  4151c6:	fwait
  4151c7:	xchg   ecx,eax
  4151c8:	pop    ebp
  4151c9:	push   ds
  4151ca:	mov    al,ds:0xca332ce3
  4151cf:	aaa    
  4151d0:	sti    
  4151d1:	jl     0x415247
  4151d3:	int    0xc8
  4151d5:	or     DWORD PTR [eax-0x57626521],edi
  4151db:	outs   dx,DWORD PTR ds:[esi]
  4151dc:	sub    BYTE PTR [ebx+ebx*2],ch
  4151df:	hlt    
  4151e0:	jns    0x4151e0
  4151e2:	mov    ch,0xd4
  4151e4:	mov    fs,WORD PTR ds:0xf99f18f4
  4151ea:	pop    es
  4151eb:	sub    dh,dh
  4151ed:	lock push ds
  4151ef:	out    0xb7,eax
  4151f1:	add    eax,0xd0c8c5a0
  4151f6:	push   edi
  4151f7:	pop    ds
  4151f8:	int    0xc7
  4151fa:	mov    cl,0x6b
  4151fc:	pushf  
  4151fd:	xor    eax,0x4194527a
  415202:	mov    BYTE PTR [esi+0x79999e6d],bl
  415208:	fisubr DWORD PTR [ebx-0xabfd71f]
  41520e:	repz arpl WORD PTR ds:[ecx],ax
  415212:	mov    eax,0x7a95076d
  415217:	pop    eax
  415218:	cmp    eax,0x9c314b8c
  41521d:	mov    ch,0x5f
  41521f:	aad    0xb3
  415221:	iret   
  415222:	dec    ecx
  415223:	mov    WORD PTR [edx],ss
  415225:	iret   
  415226:	int3   
  415227:	xlat   BYTE PTR ds:[ebx]
  415228:	leave  
  415229:	(bad)  [eax+0x2c]
  41522c:	jmp    0x415213
  41522e:	js     0x41520f
  415230:	or     al,dl
  415232:	leave  
  415233:	mov    cl,0x20
  415235:	push   eax
  415236:	pop    es
  415237:	push   ecx
  415238:	jle    0x4151dc
  41523a:	test   ah,dh
  41523c:	das    
  41523d:	cmp    BYTE PTR [ebp-0x17],0xc1
  415241:	ins    BYTE PTR es:[edi],dx
  415242:	jmp    0x41523d
  415244:	repz xor DWORD PTR [ebp-0x60],0xffffff8d
  415249:	dec    eax
  41524a:	daa    
  41524b:	mov    al,0x82
  41524d:	inc    eax
  41524e:	mov    esp,0xea5d20c8
  415253:	mov    edx,0x8af780de
  415258:	mov    eax,ds:0xdd979b09
  41525d:	shr    eax,1
  41525f:	xchg   edx,eax
  415260:	mov    DWORD PTR [ecx+esi*8],ecx
  415263:	leave  
  415264:	jl     0x415265
  415266:	fadd   DWORD PTR [edi+0x4abaf70]
  41526c:	jo     0x4152eb
  41526e:	or     ecx,ecx
  415270:	or     BYTE PTR [edx+0x5ddad410],dh
  415276:	jge    0x41525d
  415278:	sub    al,0x97
  41527a:	sti    
  41527b:	cmp    al,0xdb
  41527d:	mov    cl,0xe8
  41527f:	movnti DWORD PTR [eax+0x13],ecx
  415283:	fisttp DWORD PTR [esi+0x74]
  415286:	and    ebx,DWORD PTR [ecx-0x1a47ee8c]
  41528c:	xchg   edx,eax
  41528d:	xor    ch,ah
  41528f:	mov    eax,ds:0xb154b72c
  415294:	add    eax,DWORD PTR [eax-0x53199274]
  41529a:	inc    ebx
  41529b:	fistp  WORD PTR [eax+ebp*2+0x77de600c]
  4152a2:	les    edi,FWORD PTR [edx-0xfa35485]
  4152a8:	psubsw mm3,QWORD PTR ds:0x127fc50
  4152af:	out    0x6d,eax
  4152b1:	cmp    BYTE PTR [ebx+0x18],dl
  4152b4:	mov    ch,0x14
  4152b6:	push   0x9849f38b
  4152bb:	pop    ebp
  4152bc:	pop    ebx
  4152bd:	add    al,0x60
  4152bf:	mov    BYTE PTR [ebp-0x1c],al
  4152c2:	cmp    dh,BYTE PTR [eax+ebx*1+0x5]
  4152c6:	xor    eax,DWORD PTR [edx]
  4152c8:	subps  xmm2,XMMWORD PTR [ebx]
  4152cb:	cmp    eax,0xbc2fa543
  4152d0:	sar    BYTE PTR [ebx],1
  4152d2:	add    BYTE PTR [eax+ecx*1],0x67
  4152d6:	aad    0x72
  4152d8:	adc    al,0x95
  4152da:	pusha  
  4152db:	jle    0x41534a
  4152dd:	dec    ebp
  4152de:	fs mov al,0x5c
  4152e1:	xchg   ebp,eax
  4152e2:	test   al,0x1e
  4152e4:	and    al,0xd4
  4152e6:	inc    ecx
  4152e7:	sbb    al,0x79
  4152e9:	mov    bl,0x41
  4152eb:	mov    ah,0x47
  4152ed:	sub    cl,BYTE PTR [edx-0x2878a76c]
  4152f3:	xchg   edi,eax
  4152f4:	lds    esi,FWORD PTR [ebx]
  4152f6:	lods   al,BYTE PTR ds:[esi]
  4152f7:	jl     0x4152a3
  4152f9:	push   ebx
  4152fa:	pop    esp
  4152fb:	add    DWORD PTR [esp+eax*4+0x52],0x5c6fd894
  415303:	lods   al,BYTE PTR ds:[esi]
  415304:	push   ebp
  415305:	wrmsr  
  415307:	into   
  415308:	xor    ecx,ebx
  41530a:	inc    ebx
  41530b:	mov    bh,0xc1
  41530d:	cmp    DWORD PTR [eax-0x5e532c8c],esp
  415313:	stos   BYTE PTR es:[edi],al
  415314:	jno    0x415323
  415316:	pop    ebx
  415317:	jg     0x415364
  415319:	ss ja  0x415361
  41531c:	mov    BYTE PTR [edx+0x74e59450],cl
  415322:	loope  0x415322
  415324:	sbb    eax,0xa1b5d89e
  415329:	inc    esp
  41532a:	repz add al,0xf3
  41532d:	in     al,dx
  41532e:	and    esi,DWORD PTR [ecx+edx*8+0x7f5fd060]
  415335:	jge    0x415383
  415337:	sub    edi,DWORD PTR [edi+0x4e]
  41533a:	jae    0x4153a8
  41533c:	xchg   eax,edx
  41533e:	xchg   ebx,eax
  41533f:	js     0x4152cf
  415341:	mov    dh,0x85
  415343:	mov    esp,0xb874f1cd
  415348:	xor    al,0x6a
  41534a:	inc    esp
  41534b:	cmp    al,0xc7
  41534d:	daa    
  41534e:	imul   DWORD PTR [edx]
  415350:	push   ebp
  415351:	push   ebp
  415352:	push   es
  415353:	test   al,0x2c
  415355:	test   DWORD PTR [ebx+ebx*8],eax
  415358:	ja     0x415367
  41535a:	cmp    eax,0x9a96282e
  41535f:	mov    esi,0x55a9c7ab
  415364:	mov    bl,0x47
  415366:	pop    ecx
  415367:	loopne 0x41531e
  415369:	sub    BYTE PTR [eax],ch
  41536b:	inc    edi
  41536c:	and    DWORD PTR ds:0xc580d716,edx
  415372:	sub    ah,ch
  415374:	bnd call 0x1843e3fc
  41537a:	in     al,dx
  41537b:	sub    al,0x52
  41537d:	hlt    
  41537e:	xor    eax,0xb10814fd
  415383:	cmp    eax,0x948f0cb4
  415388:	mov    bh,0xc2
  41538a:	test   eax,0x59dd02d3
  41538f:	out    dx,eax
  415390:	or     BYTE PTR [eax-0x1d],dh
  415393:	add    bh,bh
  415395:	push   es
  415396:	fistp  QWORD PTR [ebp-0x2]
  415399:	cld    
  41539a:	sub    edi,DWORD PTR [edx+ebp*8-0x4]
  41539e:	adc    ah,BYTE PTR [eax]
  4153a0:	cmp    ah,cl
  4153a2:	mov    dl,0xf1
  4153a4:	xor    al,0x1a
  4153a6:	jg     0x41540e
  4153a8:	xor    al,0x49
  4153aa:	fidiv  WORD PTR [ebx-0x4e]
  4153ad:	mov    eax,ds:0x57b66404
  4153b2:	cli    
  4153b3:	retf   0xdc92
  4153b6:	mov    edx,0x820b0084
  4153bb:	adc    al,0x16
  4153bd:	jge    0x415409
  4153bf:	cli    
  4153c0:	mov    eax,ds:0x33dc453c
  4153c5:	dec    ecx
  4153c6:	sub    DWORD PTR [esi],0x3873b77b
  4153cc:	sub    eax,0x8a0eaaac
  4153d1:	pop    edx
  4153d2:	xchg   esp,eax
  4153d3:	je     0x41543a
  4153d5:	xchg   edx,eax
  4153d6:	outs   dx,DWORD PTR ds:[esi]
  4153d7:	jl     0x4153dc
  4153d9:	xchg   esi,eax
  4153da:	jg     0x4153b4
  4153dc:	pop    es
  4153dd:	ror    DWORD PTR [edi-0x78],0x5b
  4153e1:	push   ds
  4153e2:	std    
  4153e3:	cli    
  4153e4:	mov    ebp,0x2ea84532
  4153e9:	or     eax,0x60c330bc
  4153ee:	pusha  
  4153ef:	fpatan 
  4153f1:	xor    eax,0x12dc904e
  4153f6:	ror    DWORD PTR [edx],0xfb
  4153f9:	xor    eax,0x99f567fd
  4153fe:	push   eax
  4153ff:	adc    DWORD PTR [edx+0x1a],eax
  415402:	int3   
  415403:	fnsave [esp+eiz*8+0x7c]
  415407:	pop    ebp
  415408:	gs mov ah,0x6c
  41540b:	(bad)  [eax+eiz*2+0x1a]
  41540f:	(bad)  
  415410:	nop
  415411:	inc    eax
  415412:	icebp  
  415413:	sbb    bh,BYTE PTR [eax+eax*1]
  415416:	add    BYTE PTR [eax],al
  415418:	adc    ebx,DWORD PTR [esi]
  41541a:	xchg   edx,eax
  41541b:	pop    edx
  41541c:	cli    
  41541d:	add    al,0x0
  41541f:	add    BYTE PTR [eax],al
  415421:	add    BYTE PTR [eax],al
  415423:	add    dl,bh
  415425:	add    al,0x0
  415427:	add    BYTE PTR [esi],al
  415429:	add    BYTE PTR [esi],ah
  41542b:	jl     0x41542d
  41542d:	add    dh,BYTE PTR [esi]
  41542f:	or     BYTE PTR [eax],al
  415431:	add    BYTE PTR ds:0xd0890048,bl
  415437:	repnz out dx,eax
  415439:	jmp    0x4153ce
  41543b:	in     al,0xe1
  41543d:	and    al,0xe7
  41543f:	cmp    bh,BYTE PTR [ebx+0x4df5f9fc]
  415445:	ja     0x415411
  415447:	mov    ch,0x51
  415449:	fs pop edx
  41544b:	outs   dx,DWORD PTR ds:[esi]
  41544c:	cdq    
  41544d:	addr16 aad 0x6e
  415450:	mov    al,0x74
  415452:	mov    dh,0x77
  415454:	dec    eax
  415455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415456:	lds    esp,FWORD PTR [ebx+ebx*1+0x4a]
  41545a:	cwde   
  41545b:	mov    edi,0x33e723fc
  415460:	sti    
  415461:	mov    cl,0x71
  415463:	inc    eax
  415464:	cwde   
  415465:	ret    
  415466:	add    DWORD PTR [edi+ebx*8+0x64af9da1],edi
  41546d:	jno    0x415456
  41546f:	test   eax,0xb377b3b5
  415474:	jg     0x415436
  415476:	dec    ebp
  415477:	pop    ecx
  415478:	xchg   edx,eax
  415479:	cdq    
  41547a:	retf   0x5bdc
  41547d:	test   al,0xfa
  41547f:	std    
  415480:	mov    ah,0x48
  415482:	(bad)  
  415483:	lea    esi,[eax]
  415485:	(bad)  
  415486:	mov    BYTE PTR [edi+0x15],dh
  415489:	pop    esi
  41548a:	mov    WORD PTR [esi+eiz*2+0x6f],fs
  41548e:	mov    edi,0x216decf9
  415493:	test   BYTE PTR [eax+0x33],ah
  415496:	xor    dl,BYTE PTR [ebp-0x16d48b33]
  41549c:	loopne 0x41550e
  41549e:	cmp    DWORD PTR [ecx],esp
  4154a0:	mov    ecx,0xc91de320
  4154a5:	mov    edx,0xd5354c6
  4154aa:	and    DWORD PTR [esi],ebp
  4154ac:	in     eax,0xdf
  4154ae:	mov    ?,WORD PTR [ecx+0x70]
  4154b1:	mov    BYTE PTR [esi-0x26b8945],al
  4154b7:	dec    eax
  4154b8:	xchg   edi,eax
  4154b9:	jno    0x415442
  4154bb:	test   al,0x7a
  4154bd:	mov    ebx,0x496bbb67
  4154c2:	xchg   ecx,eax
  4154c3:	xor    dh,ah
  4154c5:	pop    ebx
  4154c6:	aam    0xeb
  4154c8:	es loope 0x41544b
  4154cb:	xor    ch,bh
  4154cd:	xchg   esp,eax
  4154ce:	ds (bad) 
  4154d0:	std    
  4154d1:	add    BYTE PTR [edx],ah
  4154d3:	jne    0x415461
  4154d5:	fwait
  4154d6:	inc    ecx
  4154d7:	call   0x40ea466f
  4154dc:	xchg   ebx,eax
  4154dd:	loope  0x41552f
  4154df:	(bad)  
  4154e0:	xchg   ebp,eax
  4154e1:	xor    al,0xcb
  4154e3:	int3   
  4154e4:	pop    es
  4154e5:	pop    edi
  4154e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154e7:	sub    BYTE PTR [ebp+0x70],ch
  4154ea:	shl    BYTE PTR [edi+0x54e29250],cl
  4154f0:	add    esi,esi
  4154f2:	or     edx,DWORD PTR [edx-0x65]
  4154f5:	adc    al,0x21
  4154f7:	pop    ecx
  4154f8:	and    BYTE PTR ds:0x390b2d3e,dl
  4154fe:	or     esp,ebx
  415500:	inc    ecx
  415501:	into   
  415502:	into   
  415503:	shl    bh,0x7
  415506:	fistp  QWORD PTR [ebp-0x1a]
  415509:	repz adc eax,0xdfd80efb
  41550f:	clc    
  415510:	lea    esi,[ebp+0x3b1f12d8]
  415516:	out    0x24,al
  415518:	scas   eax,DWORD PTR es:[edi]
  415519:	mov    ebp,0xef3f392d
  41551e:	aas    
  41551f:	xchg   ebx,eax
  415520:	iret   
  415521:	enter  0xb811,0xdd
  415525:	or     eax,0xe99aeba8
  41552a:	mov    DWORD PTR [esi+ebp*1+0x80fca3d],0x98171040
  415535:	and    al,0xab
  415537:	and    al,0x7d
  415539:	rol    BYTE PTR [ebx],0xee
  41553c:	cmp    eax,DWORD PTR [ecx-0x3c]
  41553f:	addr16 inc edx
  415541:	xchg   edx,eax
  415542:	push   eax
  415543:	push   edi
  415544:	xchg   DWORD PTR [esi+ebx*2-0x17],ebx
  415548:	cld    
  415549:	jg     0x41554b
  41554b:	aam    0xf3
  41554d:	aaa    
  41554e:	inc    edx
  41554f:	xchg   DWORD PTR [edx-0x77],ecx
  415552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415553:	pusha  
  415554:	or     edx,DWORD PTR [edi]
  415556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415557:	push   ebp
  415558:	aam    0x3b
  41555a:	jecxz  0x415577
  41555c:	in     eax,dx
  41555d:	leave  
  41555e:	(bad)  
  41555f:	jp     0x4154ee
  415561:	push   eax
  415562:	inc    eax
  415563:	jnp    0x4154f0
  415565:	jmp    0x75af0e5b
  41556a:	ja     0x4155af
  41556c:	ins    DWORD PTR es:[edi],dx
  41556d:	add    eax,DWORD PTR [ecx-0x6bbc7090]
  415573:	mov    ds:0xf454f515,al
  415578:	daa    
  415579:	pusha  
  41557a:	aaa    
  41557b:	cmp    DWORD PTR [edi+eax*2+0x55d838ca],0xffffffd8
  415583:	xchg   dl,dh
  415585:	push   edi
  415586:	call   0xf8ef9961
  41558b:	sbb    DWORD PTR ds:[ebx+0x8],0xffffffb0
  415590:	shl    BYTE PTR [edi],1
  415592:	leave  
  415593:	lock cmps DWORD PTR ds:[si],DWORD PTR es:[di]
  415596:	bound  ebp,QWORD PTR [ecx]
  415598:	mov    WORD PTR [ebp+edi*4+0x3d],es
  41559c:	not    dl
  41559e:	leave  
  41559f:	repz fucom st(7)
  4155a2:	and    edx,DWORD PTR [edi+0x3a]
  4155a5:	in     al,0x67
  4155a7:	and    eax,0x82b7b980
  4155ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ad:	fld    QWORD PTR [eax+ebp*2+0x79863a7]
  4155b4:	stc    
  4155b5:	pop    eax
  4155b6:	(bad)  
  4155b7:	in     eax,dx
  4155b8:	call   0xcd1e:0x4d67bd4c
  4155bf:	rcl    edx,cl
  4155c1:	fmul   st,st(5)
  4155c3:	popf   
  4155c4:	push   0xc72e67e8
  4155c9:	and    bh,bl
  4155cb:	fnstenv [edi]
  4155cd:	(bad)  
  4155ce:	or     DWORD PTR [eax-0x64df1e0d],edx
  4155d4:	inc    esp
  4155d5:	and    DWORD PTR [edi+ecx*4],ecx
  4155d8:	mov    eax,ds:0x1956285c
  4155dd:	int    0xad
  4155df:	push   esp
  4155e0:	nop
  4155e1:	push   ds
  4155e2:	out    dx,eax
  4155e3:	repz fidivr WORD PTR [esi+0x0]
  4155e7:	hlt    
  4155e8:	stos   BYTE PTR es:[edi],al
  4155e9:	xor    esp,0xe0715a40
  4155ef:	popf   
  4155f0:	dec    edx
  4155f1:	and    ch,BYTE PTR [ecx+0x50ec05a4]
  4155f7:	mov    esp,0x8ac54156
  4155fc:	rol    BYTE PTR [eax+0x5f],1
  4155ff:	enter  0xd304,0x3d
  415603:	retf   
  415604:	lods   al,BYTE PTR ds:[esi]
  415605:	ret    
  415606:	sbb    al,0xcb
  415608:	and    al,0x1
  41560a:	les    edi,FWORD PTR [ebx]
  41560c:	mov    eax,0x851e3023
  415611:	mul    BYTE PTR ds:0xbdc45918
  415617:	lea    edi,[esi+0x55]
  41561a:	push   es
  41561b:	jnp    0x4155db
  41561d:	xchg   ecx,eax
  41561e:	inc    esp
  41561f:	xchg   esi,eax
  415620:	push   ecx
  415621:	push   ebx
  415622:	push   ss
  415623:	ins    DWORD PTR es:[edi],dx
  415624:	icebp  
  415625:	test   bl,0x2
  415628:	add    eax,eax
  41562a:	cmp    esi,edi
  41562c:	sbb    esp,DWORD PTR [ecx-0xc]
  41562f:	xchg   edi,eax
  415630:	cli    
  415631:	pop    es
  415632:	sub    bl,BYTE PTR [ecx-0x50]
  415635:	pop    es
  415636:	aam    0x37
  415638:	mov    bl,0x47
  41563a:	mov    edi,0xbc2100c5
  41563f:	xlat   BYTE PTR ds:[ebx]
  415640:	adc    eax,0x33b20320
  415645:	repz mov dh,0x7e
  415648:	xchg   ah,al
  41564a:	xor    ecx,0xffffff80
  41564d:	xchg   ebx,eax
  41564e:	in     eax,dx
  41564f:	adc    edx,DWORD PTR [ecx+0x28]
  415652:	aam    0x13
  415654:	inc    ecx
  415655:	int3   
  415656:	cmpxchg DWORD PTR [edi-0x41],eax
  41565a:	dec    esp
  41565b:	fst    st(0)
  41565d:	pop    esi
  41565e:	fst    DWORD PTR [ebp+0x6a]
  415661:	pushf  
  415662:	ins    DWORD PTR es:[edi],dx
  415663:	lock xor DWORD PTR [eax+0x160f5f7],ecx
  41566a:	or     edx,edx
  41566c:	xchg   BYTE PTR [ecx+0x23b2ac1c],bl
  415672:	push   0x71
  415674:	jl     0x4156a7
  415676:	jae    0x4156de
  415678:	mov    al,0xcd
  41567a:	push   ecx
  41567b:	push   esi
  41567c:	imul   esp,DWORD PTR [esp+eiz*8+0x7867aa7c],0xffffffb2
  415684:	pop    ebx
  415685:	cmp    DWORD PTR [ecx+0x5387569d],eax
  41568b:	xchg   edi,eax
  41568c:	clc    
  41568d:	pop    ebx
  41568e:	sub    ecx,esp
  415690:	dec    eax
  415691:	daa    
  415692:	xor    BYTE PTR [ecx-0x1f268708],bh
  415698:	inc    ebx
  415699:	adc    al,0xd3
  41569b:	int3   
  41569c:	adc    dl,bl
  41569e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41569f:	bound  edx,QWORD PTR [ecx]
  4156a1:	call   0x747b49da
  4156a6:	mov    bh,0xcd
  4156a8:	je     0x4156fa
  4156aa:	push   esi
  4156ab:	fstp   QWORD PTR [esi-0x50569bb0]
  4156b1:	ja     0x4156ec
  4156b3:	xor    al,0xb4
  4156b5:	mov    al,0xd4
  4156b7:	push   0x98d5c0a6
  4156bc:	sbb    BYTE PTR [ebp-0x13a9efc],ah
  4156c2:	(bad)  es:[edi+ecx*4]
  4156c6:	(bad)  
  4156c7:	ret    0x45c9
  4156ca:	in     eax,0x0
  4156cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156cd:	daa    
  4156ce:	js     0x415679
  4156d0:	pusha  
  4156d1:	je     0x4156fb
  4156d3:	xor    DWORD PTR [ebp+edi*8-0x22],ecx
  4156d7:	or     eax,0xdfc170a0
  4156dc:	xor    DWORD PTR [eax-0x1],esp
  4156df:	lods   al,BYTE PTR ds:[esi]
  4156e0:	(bad)  
  4156e1:	mov    ah,0xf4
  4156e3:	jmp    0x9476:0xd06c50f
  4156ea:	sbb    DWORD PTR [esi+eax*2],ebx
  4156ed:	scas   eax,DWORD PTR es:[edi]
  4156ee:	shl    BYTE PTR [edi],1
  4156f0:	leave  
  4156f1:	mov    esp,0xacc03e9f
  4156f6:	xor    al,0xf3
  4156f8:	sub    eax,0x26e55153
  4156fd:	mov    esp,DWORD PTR [ebx]
  4156ff:	hlt    
  415700:	cwde   
  415701:	add    bh,bh
  415703:	retf   
  415704:	lea    eax,[ebp+0xc]
  415707:	call   0xea1f29ab
  41570c:	cmp    eax,0x3f38e3e9
  415711:	or     esi,ebx
  415713:	sbb    DWORD PTR [esi],0x579f7f4e
  415719:	pop    esp
  41571a:	lods   eax,DWORD PTR ds:[esi]
  41571b:	inc    esp
  41571c:	test   al,0x83
  41571e:	ret    
  41571f:	mov    DWORD PTR [edi+ebx*8],edx
  415722:	cli    
  415723:	add    al,0x3b
  415725:	jno    0x415707
  415727:	pop    ss
  415728:	loope  0x4156c1
  41572a:	ins    DWORD PTR es:[edi],dx
  41572b:	shr    BYTE PTR [eax],1
  41572d:	mov    eax,ds:0x50303bbc
  415732:	ja     0x41578e
  415734:	dec    ebx
  415735:	xchg   esi,eax
  415736:	mov    eax,ds:0xd0a455f1
  41573b:	imul   ebp,DWORD PTR [ebp+0x76f4ac2c],0x7198e999
  415745:	int3   
  415746:	mov    esp,0xc02dbc16
  41574b:	sbb    esp,edx
  41574d:	icebp  
  41574e:	std    
  41574f:	xchg   esi,eax
  415750:	aaa    
  415751:	inc    eax
  415752:	into   
  415753:	mov    BYTE PTR [edx+edx*4+0x4f],cl
  415757:	cld    
  415758:	std    
  415759:	jle    0x415719
  41575b:	enter  0x682c,0xaa
  41575f:	dec    ebx
  415760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415761:	mov    al,ds:0x1ccc2899
  415766:	lahf   
  415767:	aam    0x3c
  415769:	xlat   BYTE PTR ds:[ebx]
  41576a:	in     al,dx
  41576b:	(bad)  
  41576c:	scas   eax,DWORD PTR es:[edi]
  41576d:	cmc    
  41576e:	fnsave [ecx]
  415770:	mov    ah,0x87
  415772:	retf   
  415773:	(bad)  
  415775:	pop    edx
  415776:	stc    
  415777:	push   es
  415778:	mov    ecx,0xd194256f
  41577d:	cs xor eax,0x89045cbe
  415783:	shl    DWORD PTR [edi+esi*4-0x3b],1
  415787:	cwde   
  415788:	xchg   esi,eax
  415789:	lds    eax,FWORD PTR [eax+0x384c3b60]
  41578f:	(bad)  
  415790:	mov    al,ds:0x133c85a3
  415795:	cwde   
  415796:	jl     0x4157ed
  415798:	jns    0x415744
  41579a:	and    al,bl
  41579c:	mov    cl,0x1e
  41579e:	jge    0x41577b
  4157a0:	and    eax,0x242c39d2
  4157a5:	call   0x751af952
  4157aa:	or     dl,ch
  4157ac:	js     0x415761
  4157ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157b0:	mov    DWORD PTR [ebx],edx
  4157b2:	inc    ecx
  4157b3:	mov    dh,0x96
  4157b5:	in     al,dx
  4157b6:	xor    BYTE PTR [ecx+0x5c8bb9c9],al
  4157bc:	mov    bh,0x9f
  4157be:	pushf  
  4157bf:	sbb    DWORD PTR [ebx],ecx
  4157c1:	sub    eax,0x2feb94f7
  4157c6:	lods   al,BYTE PTR ds:[esi]
  4157c7:	mov    eax,0xea10ad91
  4157cc:	je     0x4157af
  4157ce:	xor    BYTE PTR [eax-0x45],al
  4157d1:	call   0x847c:0xbc28814c
  4157d8:	imul   esp,DWORD PTR [edx-0x609bc8d7],0xc36c2465
  4157e2:	or     ebp,ebx
  4157e4:	test   BYTE PTR [eax+eax*1-0x1e7c0751],ch
  4157eb:	fnstsw WORD PTR fs:[ecx+0x7cccb14]
  4157f2:	pop    ecx
  4157f3:	ins    BYTE PTR es:[edi],dx
  4157f4:	out    dx,al
  4157f5:	stos   BYTE PTR es:[edi],al
  4157f6:	dec    esi
  4157f7:	xor    BYTE PTR [edx-0x23620bb9],ah
  4157fd:	addr16 jnp 0x41586d
  415800:	std    
  415801:	adc    BYTE PTR [ecx+0x18],dh
  415804:	inc    ebp
  415805:	stc    
  415806:	push   ds
  415807:	dec    ebp
  415808:	sbb    al,0x84
  41580a:	mov    edi,0x2100e04d
  41580f:	jmp    0x592cfc3a
  415814:	xchg   ebp,eax
  415815:	cmp    BYTE PTR [edx-0x77],cl
  415818:	mov    edi,0xbfa7643e
  41581d:	popa   
  41581e:	cmp    eax,0xfacaa84d
  415823:	jns    0x415806
  415825:	jl     0x415874
  415827:	iret   
  415828:	push   esp
  415829:	aaa    
  41582a:	inc    ebp
  41582b:	cmp    bh,al
  41582d:	inc    ecx
  41582e:	sub    eax,0xdcd913ac
  415833:	fs xchg ebx,eax
  415835:	or     ebx,DWORD PTR [eax]
  415837:	inc    edx
  415838:	sbb    BYTE PTR [edi-0x50],dh
  41583b:	mov    eax,0x300b280f
  415840:	adc    cl,BYTE PTR [esi]
  415842:	adc    eax,DWORD PTR [ecx+0x23]
  415845:	imul   esp,DWORD PTR [edi-0x10],0xbe777f34
  41584c:	dec    edi
  41584d:	mov    al,0x6f
  41584f:	shr    BYTE PTR [esi+0x479e177c],cl
  415855:	nop
  415856:	out    0xf5,eax
  415858:	jbe    0x41588d
  41585a:	push   esp
  41585b:	inc    edi
  41585c:	xchg   DWORD PTR [ebx-0x33],ecx
  41585f:	mov    esp,0x61ae3cd1
  415864:	gs lock clc 
  415867:	aas    
  415868:	js     0x41589b
  41586a:	add    BYTE PTR [edx+ecx*8+0x3f],0xec
  41586f:	aad    0x56
  415871:	jge    0x41586d
  415873:	gs call 0x80735460
  415879:	icebp  
  41587a:	add    al,0x87
  41587c:	data16 sub al,0x12
  41587f:	sbb    ebp,esp
  415881:	lahf   
  415882:	jo     0x4158e5
  415884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415885:	jo     0x4158ee
  415887:	mov    ecx,0x2420c1f4
  41588c:	lds    ecx,FWORD PTR [ecx]
  41588e:	xor    esp,DWORD PTR ds:0xe16a69bc
  415894:	push   edi
  415895:	mov    al,0x9
  415897:	cli    
  415898:	in     eax,0x42
  41589a:	daa    
  41589b:	test   DWORD PTR [eax+edx*4+0x76],ecx
  41589f:	sub    DWORD PTR [ebx+eiz*4-0x40],0xffffffd5
  4158a4:	ins    BYTE PTR es:[edi],dx
  4158a5:	push   ebx
  4158a6:	sub    eax,0xcbc0648b
  4158ab:	or     BYTE PTR [esp+edx*2-0x7c4c24ac],cl
  4158b2:	inc    ecx
  4158b3:	nop
  4158b4:	out    dx,eax
  4158b5:	add    BYTE PTR [ecx],dl
  4158b7:	cmc    
  4158b8:	pop    es
  4158b9:	inc    ebp
  4158ba:	(bad)  [ecx-0x63]
  4158bd:	cmc    
  4158be:	(bad)  
  4158bf:	fs sbb ecx,0x48
  4158c3:	dec    edi
  4158c4:	mov    esi,0xe9dbff6b
  4158c9:	fsub   DWORD PTR [eax-0x7]
  4158cc:	adc    esp,edx
  4158ce:	cli    
  4158cf:	xchg   edx,eax
  4158d0:	and    al,0x61
  4158d2:	mov    cs,WORD PTR [ebp-0x63f70956]
  4158d8:	pop    edx
  4158d9:	adc    BYTE PTR [eax-0x3c],dh
  4158dc:	xchg   esp,eax
  4158dd:	adc    eax,0xccc0a265
  4158e2:	div    dl
  4158e4:	cmp    bl,BYTE PTR [eax]
  4158e6:	mov    cl,0xa1
  4158e8:	sahf   
  4158e9:	or     ah,cl
  4158eb:	shl    BYTE PTR [ecx-0x7f],cl
  4158ee:	in     al,dx
  4158ef:	imul   esp,DWORD PTR [ecx-0x1bef18e4],0x41239bfa
  4158f9:	mov    dl,0xd0
  4158fb:	adc    esp,DWORD PTR [edx]
  4158fd:	call   0x1e6d683f
  415902:	sub    dl,BYTE PTR [edi-0x4]
  415905:	mov    ebx,0x45f4470f
  41590a:	popa   
  41590b:	out    0x48,eax
  41590d:	in     eax,0xe8
  41590f:	out    0x2f,al
  415911:	pusha  
  415912:	icebp  
  415913:	repz js 0x41589d
  415916:	jbe    0x41ba6584
  41591c:	add    BYTE PTR [eax],al
  41591e:	add    BYTE PTR [eax],al
  415920:	pop    esi
  415921:	sbb    al,0x73
  415923:	push   ebp
  415924:	jns    0x41592c
  415926:	add    BYTE PTR [eax],al
  415928:	add    BYTE PTR [eax],al
  41592a:	add    BYTE PTR [eax],al
  41592c:	jns    0x415934
  41592e:	add    BYTE PTR [eax],al
  415930:	pop    es
  415931:	add    BYTE PTR [esi],ah
  415933:	jl     0x415935
  415935:	add    dh,BYTE PTR [esi]
  415937:	or     BYTE PTR [eax],al
  415939:	add    BYTE PTR [edx+ecx*2-0xac4fa00],bl
  415940:	adc    ebp,DWORD PTR [ecx+0x24dfe2c0]
  415946:	xlat   BYTE PTR ds:[ebx]
  415947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415948:	clc    
  415949:	aas    
  41594a:	jne    0x415914
  41594c:	retf   
  41594d:	pushf  
  41594e:	dec    eax
  41594f:	outs   dx,DWORD PTR ds:[esi]
  415950:	sbb    eax,0x94017bac
  415955:	outs   dx,DWORD PTR ds:[esi]
  415956:	mov    ds:0xf1bb736c,eax
  41595b:	xor    DWORD PTR [edi+ecx*1-0x3b],ebp
  41595f:	push   eax
  415960:	nop
  415961:	pop    ds
  415962:	popa   
  415963:	pop    ebp
  415964:	jmp    0x415997
  415966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415967:	jmp    0x4c391261
  41596c:	ja     0x415921
  41596e:	lea    ebx,[ecx-0x1f17a7ae]
  415974:	sbb    DWORD PTR [edi+eiz*8-0x63cab842],esp
  41597b:	sub    DWORD PTR [eax+ecx*4],0x9b5aa350
  415982:	push   ebx
  415983:	sub    eax,0x4aacb930
  415988:	dec    ebx
  415989:	push   es
  41598a:	sub    al,0xc1
  41598c:	xchg   ecx,eax
  41598d:	mov    ah,0xdb
  41598f:	fs adc eax,0x6af1e9b0
  415995:	cli    
  415996:	jo     0x4159b4
  415998:	outs   dx,BYTE PTR ds:[esi]
  415999:	test   DWORD PTR [eax-0x62b9b6ab],0x79bf62a7
  4159a3:	mov    ch,0xa9
  4159a5:	mov    esp,0xb84287b2
  4159aa:	or     al,0x14
  4159ac:	ret    
  4159ad:	sbb    eax,0x288df7d0
  4159b2:	jmp    0x4159eb
  4159b4:	jmp    0x4159f1
  4159b6:	std    
  4159b7:	shr    BYTE PTR [ecx],1
  4159b9:	push   0x6ae4880f
  4159be:	xchg   ebp,eax
  4159bf:	clc    
  4159c0:	inc    esi
  4159c1:	mov    ds:0xb666acc4,eax
  4159c6:	mov    ah,0x9f
  4159c8:	rcl    DWORD PTR [eax],0x4f
  4159cb:	popf   
  4159cc:	sub    al,0xd0
  4159ce:	out    0x8d,eax
  4159d0:	add    bl,al
  4159d2:	mov    cl,0x10
  4159d4:	fbld   TBYTE PTR [ebp-0x2800e70c]
  4159da:	mov    DWORD PTR [esi+edi*1-0xfe78705],edi
  4159e1:	add    BYTE PTR [ecx-0x12c0bb27],ch
  4159e7:	push   esp
  4159e8:	int3   
  4159e9:	dec    ebp
  4159ea:	jge    0x4159ba
  4159ec:	xchg   ebp,eax
  4159ed:	aam    0xec
  4159ef:	retf   0x166b
  4159f2:	sub    esp,edi
  4159f4:	ds stc 
  4159f6:	retf   
  4159f7:	add    al,BYTE PTR [ecx]
  4159f9:	add    cl,BYTE PTR [edx]
  4159fb:	aas    
  4159fc:	out    dx,al
  4159fd:	adc    eax,0x2fd2421c
  415a02:	(bad)  [edi]
  415a04:	sar    BYTE PTR [edi+0x11633ce2],0xc7
  415a0b:	and    edx,edi
  415a0d:	das    
  415a0e:	push   ebp
  415a0f:	xchg   ebp,eax
  415a10:	and    BYTE PTR [edi+eiz*2],cl
  415a13:	lock rol DWORD PTR [esi],0x77
  415a17:	fiadd  WORD PTR [ebx+ebp*2]
  415a1a:	(bad)  
  415a1c:	adc    dh,dl
  415a1e:	sbb    ah,BYTE PTR [eax]
  415a20:	adc    eax,0x4103f05d
  415a25:	sar    BYTE PTR [ebx+eiz*2],0x31
  415a29:	mov    esp,0x5b88257f
  415a2e:	and    DWORD PTR [eax-0x50],esp
  415a31:	imul   eax,DWORD PTR [edi],0x7f
  415a34:	test   DWORD PTR [ecx*4-0x18cd7750],ebx
  415a3b:	mov    bh,0xe1
  415a3d:	mov    ds:0x1c2ce223,al
  415a42:	xor    DWORD PTR [esp+0x5e8f81e2],esi
  415a49:	(bad)  
  415a4a:	scas   al,BYTE PTR es:[edi]
  415a4b:	xchg   ebp,eax
  415a4c:	dec    eax
  415a4d:	xchg   ebx,eax
  415a4e:	ins    DWORD PTR es:[edi],dx
  415a4f:	push   edi
  415a50:	mov    bh,0x6d
  415a52:	jae    0x415aca
  415a54:	dec    ebx
  415a55:	mov    ds:0x8f158784,eax
  415a5a:	scas   al,BYTE PTR es:[edi]
  415a5b:	lahf   
  415a5c:	loop   0x415a61
  415a5e:	frstor [ecx-0x451f7258]
  415a64:	cmp    DWORD PTR [ebx-0x46],esp
  415a67:	ret    
  415a68:	stc    
  415a69:	rcl    DWORD PTR [eax+0x58],1
  415a6c:	push   edi
  415a6d:	xchg   edi,eax
  415a6e:	addr16 fwait
  415a70:	out    0x2d,eax
  415a72:	xor    cl,0x6c
  415a75:	cmc    
  415a76:	add    esi,DWORD PTR fs:[ecx+edx*1-0x4]
  415a7b:	push   0xa3aa6e5d
  415a80:	lods   al,BYTE PTR ds:[esi]
  415a81:	test   DWORD PTR [ebx+edi*4+0x314b7c3c],esi
  415a88:	mov    bh,bl
  415a8a:	pop    eax
  415a8b:	sub    DWORD PTR [eax-0x57b049a9],ebx
  415a91:	inc    edi
  415a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a93:	jge    0x415a95
  415a95:	mov    edx,0x201d538b
  415a9a:	stos   DWORD PTR es:[edi],eax
  415a9b:	outs   dx,BYTE PTR ds:[esi]
  415a9c:	fdiv   st,st(4)
  415a9e:	fldcw  WORD PTR [edx-0x4d]
  415aa1:	jp     0x415a60
  415aa3:	mov    esp,DWORD PTR [eax]
  415aa5:	aam    0xff
  415aa7:	inc    edi
  415aa8:	cld    
  415aa9:	test   eax,0x64d85f3c
  415aae:	pop    ebx
  415aaf:	mov    dh,al
  415ab1:	dec    edi
  415ab2:	add    DWORD PTR [ecx+eax*4-0x77],esp
  415ab6:	mov    ah,0x54
  415ab8:	xchg   esp,eax
  415ab9:	popf   
  415aba:	popf   
  415abb:	out    dx,al
  415abc:	mov    esp,0xa8b0eaa9
  415ac1:	xor    edi,ecx
  415ac3:	xor    al,0x4f
  415ac5:	test   DWORD PTR [ecx+edx*8],esi
  415ac8:	aam    0x8e
  415aca:	enter  0xa2e1,0xc8
  415ace:	in     eax,dx
  415acf:	mov    esi,0xbd75a0d0
  415ad4:	aam    0x89
  415ad6:	push   ds
  415ad7:	xchg   edx,eax
  415ad8:	lea    edx,[edi-0x43545ede]
  415ade:	dec    ebx
  415adf:	mov    ch,0xc6
  415ae1:	mov    ah,0xc0
  415ae3:	mov    ah,0xc9
  415ae5:	mov    dl,0xdc
  415ae7:	aad    0xd8
  415ae9:	ret    0x9ae1
  415aec:	clc    
  415aed:	mov    bl,0xae
  415aef:	(bad)  
  415af0:	cmp    ah,bh
  415af2:	pop    ebx
  415af3:	pop    DWORD PTR [ebp-0x10]
  415af6:	and    ebx,ecx
  415af8:	lock push ecx
  415afa:	and    BYTE PTR [edx+0x28],al
  415afd:	sub    al,0xbb
  415aff:	shl    DWORD PTR [ebp+0x3],1
  415b02:	or     cl,cl
  415b04:	iret   
  415b05:	rol    BYTE PTR [ecx-0x5e94cfad],1
  415b0b:	loopne 0x415aec
  415b0d:	lock cmp eax,0x8d28b471
  415b13:	add    BYTE PTR [ebp-0x24e3eba8],al
  415b19:	pusha  
  415b1a:	sub    al,0x4f
  415b1c:	retf   0x5e39
  415b1f:	cmp    bl,bh
  415b21:	add    BYTE PTR [eax-0x33],cl
  415b24:	loop   0x415b5d
  415b26:	out    dx,eax
  415b27:	lahf   
  415b28:	pop    esp
  415b29:	and    al,bh
  415b2b:	sahf   
  415b2c:	add    ebx,DWORD PTR [edx+0x4403bc4]
  415b32:	sbb    al,0x36
  415b34:	in     eax,0x5b
  415b36:	mov    ebp,0x283c60db
  415b3b:	push   ebx
  415b3c:	bound  edi,QWORD PTR [edx]
  415b3e:	imul   edi,ebx,0x4cc45800
  415b44:	cmp    BYTE PTR [ecx-0x3d],dl
  415b47:	fwait
  415b48:	and    BYTE PTR [ebx+eax*8-0x4b],al
  415b4c:	jo     0x415b45
  415b4e:	addr16 mov ebx,0x4191a0c0
  415b54:	hlt    
  415b55:	add    BYTE PTR [edi+0x13],al
  415b58:	in     al,0xab
  415b5a:	cmp    al,dh
  415b5c:	daa    
  415b5d:	outs   dx,BYTE PTR ds:[esi]
  415b5e:	mov    bh,0x35
  415b60:	inc    esp
  415b61:	inc    eax
  415b62:	iret   
  415b63:	cs jl  0x415b7e
  415b66:	sub    ch,BYTE PTR [eax-0x24]
  415b69:	push   0x7874707c
  415b6e:	and    bl,ch
  415b70:	inc    edi
  415b71:	fisttp DWORD PTR [ebx+ebx*1+0x25cb88c9]
  415b78:	jg     0x415b56
  415b7a:	shl    BYTE PTR [eax+0x2cbc33f],cl
  415b80:	pusha  
  415b81:	leave  
  415b82:	nop
  415b83:	and    DWORD PTR [eax+0x79],ebx
  415b86:	jecxz  0x415b27
  415b88:	sub    BYTE PTR [esi],bl
  415b8a:	push   eax
  415b8b:	push   DWORD PTR ds:0x5e0f8c7c
  415b91:	fs call 0xac24:0xa1636776
  415b99:	enter  0xb231,0xb8
  415b9d:	mov    esi,0xddc8c4c0
  415ba2:	xchg   esi,eax
  415ba3:	rcr    BYTE PTR [ebx-0x67],1
  415ba6:	push   0x9f30ef28
  415bab:	cmp    BYTE PTR [edi+0xcc83bcc],dl
  415bb1:	lahf   
  415bb2:	mov    edi,0x7b9b6498
  415bb7:	fld    TBYTE PTR [esi-0x43ccb0c5]
  415bbd:	test   eax,ecx
  415bbf:	inc    ebx
  415bc0:	cmp    al,0x83
  415bc3:	mov    BYTE PTR [ecx-0x20],dl
  415bc6:	mov    al,0xe6
  415bc8:	shl    BYTE PTR [edx+0x6a3d1c],0x4
  415bcf:	or     BYTE PTR [ecx-0x22624f16],dl
  415bd5:	test   al,0x2b
  415bd7:	mov    esp,0x6393b874
  415bdc:	inc    ecx
  415bdd:	fistp  QWORD PTR [ebp-0x692fa230]
  415be3:	lock and bh,dh
  415be6:	push   edx
  415be7:	or     eax,0xdccb0b0f
  415bec:	leave  
  415bed:	aas    
  415bee:	leave  
  415bef:	jns    0x415bf3
  415bf1:	push   edi
  415bf2:	or     al,0x95
  415bf4:	outs   dx,BYTE PTR ds:[esi]
  415bf5:	and    al,0x0
  415bf7:	cmp    eax,0x1b39bc7e
  415bfc:	mov    cl,0x4c
  415bfe:	cmp    al,0xe3
  415c00:	adc    al,0x87
  415c02:	xchg   DWORD PTR [eax+0x36d2acc7],esp
  415c08:	retf   
  415c09:	cmp    edi,edx
  415c0b:	add    eax,0x51b62d84
  415c10:	mov    db3,esi
  415c13:	push   edx
  415c14:	and    ah,BYTE PTR [ebp+0x78e47268]
  415c1a:	xor    eax,0x8c8d48cd
  415c1f:	push   ebx
  415c20:	push   esp
  415c21:	dec    eax
  415c22:	loope  0x415c0e
  415c24:	mov    ebx,0xe9f53157
  415c29:	mov    ds:0xca5f0404,al
  415c2e:	push   esp
  415c2f:	and    al,0x34
  415c31:	pushf  
  415c32:	lahf   
  415c33:	and    eax,0x4a356d61
  415c38:	adc    BYTE PTR [esp+ecx*2-0x3],bh
  415c3c:	jo     0x415c4b
  415c3e:	pop    esp
  415c3f:	xchg   ebp,eax
  415c40:	pop    eax
  415c41:	sub    cl,BYTE PTR [ebx+0x5f]
  415c44:	stos   BYTE PTR es:[edi],al
  415c45:	pop    ds
  415c46:	gs stc 
  415c48:	fdivr  QWORD PTR [esi-0x67faba5c]
  415c4e:	dec    eax
  415c4f:	sub    BYTE PTR [eax],dh
  415c51:	arpl   WORD PTR [ebx],sp
  415c53:	test   al,0x3e
  415c55:	jp     0x415c1d
  415c57:	jnp    0x415c71
  415c59:	push   0xec56c04
  415c5e:	xlat   BYTE PTR ds:[ebx]
  415c5f:	push   ebx
  415c60:	gs pusha 
  415c62:	sub    al,BYTE PTR [eax+0x1f]
  415c65:	jg     0x415c66
  415c67:	cs push esp
  415c69:	or     BYTE PTR [eax-0x62ae652c],cl
  415c6f:	sbb    BYTE PTR [edi+0x1aa755d2],bl
  415c75:	xor    al,0x76
  415c77:	cmp    cl,BYTE PTR [edi-0xe]
  415c7a:	push   cs
  415c7b:	dec    ebx
  415c7c:	pop    edi
  415c7d:	loop   0x415cf7
  415c7f:	or     ah,BYTE PTR [ebp-0x14]
  415c82:	es or  eax,esi
  415c85:	ja     0x415d02
  415c87:	hlt    
  415c88:	add    al,0xc2
  415c8a:	in     al,dx
  415c8b:	int3   
  415c8c:	xchg   esp,eax
  415c8d:	nop
  415c8e:	adc    dl,cl
  415c90:	(bad)  
  415c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c92:	lods   eax,DWORD PTR ds:[esi]
  415c93:	lods   al,BYTE PTR ds:[esi]
  415c94:	mov    dl,0x3c
  415c96:	not    ah
  415c98:	iret   
  415c99:	jb     0x415c61
  415c9b:	inc    esp
  415c9c:	aam    0x92
  415c9e:	cmp    esp,DWORD PTR [eax+0x26e46960]
  415ca4:	sbb    eax,0xefce78f0
  415ca9:	retf   0x189a
  415cac:	shl    dl,cl
  415cae:	je     0x415d1b
  415cb0:	mov    WORD PTR [eax+0x53],cs
  415cb3:	dec    edi
  415cb4:	je     0x415c66
  415cb6:	mov    bh,0x0
  415cb8:	add    DWORD PTR [eax-0x24],0xfffffff1
  415cbc:	push   esp
  415cbd:	(bad)  
  415cbe:	(bad)  
  415cbf:	push   0xf32ce9ac
  415cc4:	std    
  415cc5:	jo     0x415d3f
  415cc7:	push   eax
  415cc8:	mov    cl,ah
  415cca:	xchg   ebx,eax
  415ccb:	pushf  
  415ccc:	adc    ah,dl
  415cce:	mov    ds:0xbfbcabe4,eax
  415cd3:	cmp    al,0xe8
  415cd5:	mov    eax,0x44c6c780
  415cda:	cwde   
  415cdb:	neg    ch
  415cdd:	pushf  
  415cde:	jecxz  0x415cc9
  415ce0:	pusha  
  415ce1:	mov    esp,0xf0b6f910
  415ce6:	test   BYTE PTR [eax+eax*2-0x6ff8e1b3],cl
  415ced:	dec    esp
  415cee:	sub    BYTE PTR [ecx+ebp*1-0xbcf5960],al
  415cf5:	leave  
  415cf6:	fs leave 
  415cf8:	fstp   QWORD PTR [eax-0x7c]
  415cfb:	call   0xb864:0xf8e540d6
  415d02:	call   FWORD PTR [eax-0x3]
  415d05:	pop    ss
  415d06:	or     al,0x80
  415d08:	pop    esp
  415d09:	sbb    al,0xb4
  415d0b:	sbb    DWORD PTR [edx],ecx
  415d0d:	test   al,0x6c
  415d0f:	and    eax,0x2d35900d
  415d14:	mov    ah,0x10
  415d16:	dec    edx
  415d17:	call   0x9891a169
  415d1c:	test   al,0xeb
  415d1e:	dec    eax
  415d1f:	in     eax,dx
  415d20:	jmp    0x415d9e
  415d22:	test   al,0x1d
  415d24:	or     eax,0x5884001e
  415d29:	add    eax,0xac391db8
  415d2e:	js     0x415d6e
  415d30:	adc    DWORD PTR [ecx+edi*1+0x5b0cc824],edx
  415d37:	in     al,dx
  415d38:	push   ecx
  415d39:	dec    ebx
  415d3a:	rcr    al,1
  415d3c:	xor    BYTE PTR [eax-0x38],dh
  415d3f:	ins    DWORD PTR es:[edi],dx
  415d40:	outs   dx,BYTE PTR ds:[esi]
  415d41:	cld    
  415d42:	xor    BYTE PTR [ecx-0x5c],ch
  415d45:	or     DWORD PTR [ecx*1-0x7ff5b764],ebx
  415d4c:	and    eax,0x7678a434
  415d51:	das    
  415d52:	pushf  
  415d53:	inc    ecx
  415d54:	rcr    BYTE PTR [si],0x48
  415d58:	hlt    
  415d59:	pop    ecx
  415d5a:	jle    0x415dc4
  415d5c:	in     al,dx
  415d5d:	and    BYTE PTR [ebp-0x30],dh
  415d60:	jne    0x415dbb
  415d62:	hlt    
  415d63:	rcr    BYTE PTR [esi-0x4b6ed357],1
  415d69:	adc    ah,dl
  415d6b:	mov    ebx,0xbc172d04
  415d70:	mov    esp,0x49e45c6c
  415d75:	push   0xffffffd8
  415d77:	sbb    al,0x45
  415d79:	cld    
  415d7a:	popa   
  415d7b:	je     0x415dca
  415d7d:	in     al,0x20
  415d7f:	push   0xffffffd8
  415d81:	jge    0x415d27
  415d83:	fcmovnbe st,st(3)
  415d85:	in     al,dx
  415d86:	sbb    ah,bl
  415d88:	xchg   DWORD PTR [edi+0x4c9fe660],ebp
  415d8e:	test   DWORD PTR ds:0xc7f050b8,esi
  415d94:	enter  0xf5cc,0x5c
  415d98:	lods   al,BYTE PTR ds:[esi]
  415d99:	pusha  
  415d9a:	es push 0x3dfdb55f
  415da0:	test   bl,dl
  415da2:	sbb    dh,0xdb
  415da5:	ror    ah,1
  415da7:	adc    edx,esp
  415da9:	test   al,0x2d
  415dab:	in     eax,0xac
  415dad:	add    al,0x3f
  415daf:	lock mov al,0x49
  415db2:	mov    DWORD PTR [eax+0x47],esi
  415db5:	rcr    BYTE PTR [eax+ecx*8+0x6358ad55],1
  415dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dbd:	in     al,0xf4
  415dbf:	jno    0x415d8e
  415dc1:	inc    esp
  415dc2:	add    eax,esp
  415dc4:	mov    BYTE PTR ds:0x2f649cd5,bl
  415dca:	loopne 0x415d7c
  415dcc:	cmp    ecx,edi
  415dce:	jo     0x415e07
  415dd0:	ror    BYTE PTR [eax+ebp*8+0x53189d45],0x94
  415dd8:	(bad)  
  415dd9:	hlt    
  415dda:	popa   
  415ddb:	mov    eax,ds:0xa2f87f20
  415de0:	dec    ebp
  415de1:	rol    BYTE PTR [ebx-0x6ec7a7f4],1
  415de7:	push   ecx
  415de8:	clc    
  415de9:	and    esp,esp
  415deb:	adc    BYTE PTR [esi-0x73a183cf],0xfc
  415df2:	inc    ebp
  415df3:	mov    al,0x48
  415df5:	nop
  415df6:	in     al,0xf0
  415df8:	ins    DWORD PTR es:[edi],dx
  415df9:	ins    DWORD PTR es:[edi],dx
  415dfa:	add    al,0xc
  415dfc:	aam    0xce
  415dfe:	mov    cl,0xe4
  415e00:	(bad)
  415e04:	popf   
  415e05:	push   ebp
  415e06:	hlt    
  415e07:	stos   DWORD PTR es:[edi],eax
  415e08:	ins    BYTE PTR es:[edi],dx
  415e09:	push   0x7c74bb2c
  415e0e:	mov    ch,0x5
  415e10:	mov    ah,0xc5
  415e12:	push   ebp
  415e13:	aam    0xe2
  415e15:	and    DWORD PTR [edi],ebx
  415e17:	sbb    eax,ebx
  415e19:	cs jns 0x415e8d
  415e1c:	pop    edx
  415e1d:	loopne 0x415dff
  415e1f:	add    al,0x85
  415e21:	mov    DWORD PTR [edx-0x50],edx
  415e24:	sbb    DWORD PTR [edx+eax*4],edi
  415e27:	and    eax,0x3490663a
  415e2c:	or     ecx,edx
  415e2e:	mov    al,ds:0xdda00545
  415e33:	hlt    
  415e34:	adc    bl,BYTE PTR [esi-0x17]
  415e37:	loope  0x415e79
  415e39:	mov    WORD PTR [ecx-0x1],?
  415e3c:	mov    esp,0xf2490433
  415e41:	mov    DWORD PTR [ebx],ebx
  415e43:	mov    esp,0x38e528de
  415e48:	int3   
  415e49:	cmp    BYTE PTR [edi-0x44be6340],bh
  415e4f:	ret    
  415e50:	xchg   esi,eax
  415e51:	push   eax
  415e52:	int    0x53
  415e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e55:	imul   edi,DWORD PTR [esi-0x2a743799],0xffffffb8
  415e5c:	push   edx
  415e5d:	add    DWORD PTR [ebp+0x6f],0xd9955884
  415e64:	js     0x415e8b
  415e66:	test   DWORD PTR [ecx+esi*1],ecx
  415e69:	ss pop ebx
  415e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e6d:	inc    ebp
  415e6e:	dec    ebx
  415e6f:	mov    al,ds:0x5dbb5051
  415e74:	jbe    0x415e73
  415e76:	push   0x7d75926e
  415e7b:	nop
  415e7c:	add    DWORD PTR [edx+0x76f15683],0x511c1596
  415e86:	pushf  
  415e87:	mov    WORD PTR [ecx-0x4f44488f],fs
  415e8d:	dec    ebp
  415e8e:	shl    BYTE PTR [ebp-0x3eb08694],1
  415e94:	je     0x415e1e
  415e96:	ins    DWORD PTR es:[edi],dx
  415e97:	js     0x415e3a
  415e99:	mov    ah,0x76
  415e9b:	mov    DWORD PTR [eax-0x77],ebp
  415e9e:	xchg   BYTE PTR [esi+ebx*4-0x6d],bl
  415ea2:	jne    0x415e45
  415ea4:	bound  edi,QWORD PTR [esi-0x4cd243e4]
  415eaa:	data16 jecxz 0x415e6d
  415ead:	sub    ecx,ebp
  415eaf:	fnsave [ecx]
  415eb1:	(bad)  
  415eb3:	imul   esp,DWORD PTR [esi+0x79cc65cd],0xfffffff5
  415eba:	fadd   QWORD PTR [ebp-0x2a3f53df]
  415ec0:	xchg   esi,eax
  415ec1:	test   BYTE PTR [ecx-0x5f43f255],0x18
  415ec8:	mov    dh,0x16
  415eca:	shr    DWORD PTR [eax-0x3a],1
  415ecd:	fidivr WORD PTR [edx*8-0xf1ecf35]
  415ed4:	add    al,0xed
  415ed6:	push   0xffffffe1
  415ed8:	adc    ebp,edi
  415eda:	mov    eax,DWORD PTR [esi]
  415edc:	cmp    al,0x6c
  415ede:	add    BYTE PTR [edi],bl
  415ee0:	ret    0xb404
  415ee3:	cmp    BYTE PTR [edx+0x19afa41a],0xd0
  415eea:	fsub   QWORD PTR [edi+edx*8-0x3a8d6a9a]
  415ef1:	dec    edx
  415ef2:	div    dl
  415ef4:	inc    eax
  415ef5:	in     al,0xef
  415ef7:	adc    al,0xfd
  415ef9:	sbb    al,0xa8
  415efb:	sbb    BYTE PTR [edx],dl
  415efd:	or     eax,0x621d08bf
  415f02:	cmp    BYTE PTR fs:[edi+0x11],cl
  415f06:	mov    bh,0xfe
  415f08:	cmp    BYTE PTR [eax+0x4b],al
  415f0b:	or     eax,0xcc2657f0
  415f10:	out    dx,eax
  415f11:	push   0xb3323532
  415f16:	pop    esp
  415f17:	popf   
  415f18:	adc    al,0x26
  415f1a:	sbb    eax,0x593272cb
  415f1f:	mov    ebx,0x2c61a920
  415f24:	mov    ebx,0x10b7a07c
  415f29:	push   esp
  415f2a:	aam    0xc5
  415f2c:	fstp   QWORD PTR [eax+0x39]
  415f2f:	push   0x68
  415f31:	out    dx,eax
  415f32:	sub    BYTE PTR [eax+esi*8+0x73],ch
  415f36:	add    eax,0xd483f233
  415f3b:	pop    ds
  415f3c:	adc    al,0xb4
  415f3e:	ret    
  415f3f:	xor    ebp,DWORD PTR [edi]
  415f41:	fbld   TBYTE PTR [ebp+0x3d31e0bd]
  415f47:	adc    eax,0x53cd58d1
  415f4c:	test   ebx,edx
  415f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f4f:	jmp    0x90f64cb4
  415f54:	jne    0x415fcd
  415f56:	fmul   DWORD PTR [eax-0x79]
  415f59:	mov    ecx,DWORD PTR [ecx+ebx*2-0x391e2a69]
  415f60:	and    eax,0x2b36dbed
  415f65:	pushf  
  415f66:	scas   al,BYTE PTR es:[edi]
  415f67:	lea    ecx,[ecx-0x5ea0b25d]
  415f6d:	fsubp  st(3),st
  415f6f:	out    0x6d,al
  415f71:	pop    edi
  415f72:	stos   DWORD PTR es:[edi],eax
  415f73:	jg     0x415f15
  415f75:	mul    ebx
  415f77:	xchg   BYTE PTR [eax-0x546daee0],cl
  415f7d:	imul   edx,DWORD PTR [ebx+0x3dae2355],0x55
  415f84:	mov    ebx,0xa489978f
  415f89:	push   esi
  415f8a:	ror    BYTE PTR [si-0x1e15],1
  415f8f:	jmp    0x8aad:0xcdfda96a
  415f96:	xchg   ecx,eax
  415f97:	sbb    BYTE PTR [edx-0x6b61fb98],cl
  415f9d:	xor    BYTE PTR [edx+0x3f8e9c3d],ah
  415fa3:	add    BYTE PTR [eax],al
  415fa5:	add    BYTE PTR [eax],al
  415fa7:	add    bh,ch
  415fa9:	sbb    eax,0x57a5a26
  415fae:	add    BYTE PTR [eax],al
  415fb0:	add    BYTE PTR [eax],al
  415fb2:	add    BYTE PTR [eax],al
  415fb4:	jp     0x415fbb
  415fb6:	add    BYTE PTR [eax],al
  415fb8:	or     BYTE PTR [eax],al
  415fba:	es jl  0x415fbd
  415fbd:	add    dh,BYTE PTR [esi]
  415fbf:	or     BYTE PTR [eax],al
  415fc1:	add    BYTE PTR [ebp-0x806ffb7],bl
  415fc7:	repz fwait
  415fc9:	les    edx,FWORD PTR [ebx-0x7bdbd01c]
  415fcf:	in     al,0x31
  415fd1:	cmc    
  415fd2:	fisub  DWORD PTR [ecx+eax*4]
  415fd5:	scas   eax,DWORD PTR es:[edi]
  415fd6:	dec    eax
  415fd7:	inc    esp
  415fd8:	pop    ebx
  415fd9:	xchg   DWORD PTR [ecx+0x63bf53b5],ecx
  415fdf:	jl     0x415f89
  415fe1:	(bad)  
  415fe2:	std    
  415fe3:	jo     0x415f65
  415fe5:	pop    esp
  415fe6:	dec    ecx
  415fe7:	imul   ecx,DWORD PTR [edi-0x509a6c0c],0xffffffa5
  415fee:	cmp    al,0x30
  415ff0:	sbb    al,0x38
  415ff2:	mov    ah,0x47
  415ff4:	inc    esp
  415ff5:	jnp    0x415fb6
  415ff7:	xchg   ecx,eax
  415ff8:	mov    ebp,0xef906f5f
  415ffd:	ins    BYTE PTR es:[edi],dx
  415ffe:	jmp    0x4f79d453
  416003:	push   edi
  416004:	mov    bh,0x59
  416006:	pop    es
  416007:	xchg   esp,eax
  416008:	sbb    DWORD PTR [eax+0x66a7b29c],esi
  41600e:	daa    
  41600f:	add    eax,0xcebcb984
  416014:	xlat   BYTE PTR ds:[ebx]
  416015:	mov    esi,0xd7c81c53
  41601a:	xor    BYTE PTR [esp+ecx*8+0x7f],ah
  41601e:	add    al,ah
  416020:	jnp    0x416056
  416022:	pop    eax
  416023:	or     eax,0x9590198c
  416028:	mov    esi,0xe02d7cec
  41602d:	mov    esp,0x1cf03fb0
  416032:	dec    ecx
  416033:	mov    ah,0xdc
  416035:	inc    edi
  416036:	mov    al,ds:0xa057d0d4
  41603b:	call   0x84c9c1a1
  416040:	pop    esp
  416041:	jg     0x4160be
  416043:	add    DWORD PTR [ecx],edi
  416045:	xchg   esp,eax
  416046:	xchg   esp,eax
  416047:	mov    ds:0xa0a62515,al
  41604c:	lods   eax,DWORD PTR ds:[esi]
  41604d:	xor    DWORD PTR [ebp+0x33],ecx
  416050:	iretw  
  416052:	push   0xe7d8cc17
  416057:	xlat   BYTE PTR cs:[ebx]
  416059:	pop    ss
  41605a:	outs   dx,DWORD PTR ds:[esi]
  41605b:	sub    DWORD PTR [edi+0x70],esp
  41605e:	or     eax,0x5d150f7
  416063:	leave  
  416064:	in     al,dx
  416065:	adc    bl,BYTE PTR [ecx+0x427563d0]
  41606b:	lods   al,BYTE PTR ds:[esi]
  41606c:	cmp    eax,0xf3be336d
  416071:	lds    eax,FWORD PTR [ebp-0x40]
  416074:	sub    bl,BYTE PTR [edi-0x26]
  416077:	mov    ah,al
  416079:	(bad)  
  41607a:	out    dx,eax
  41607b:	fbstp  TBYTE PTR [edi]
  41607d:	(bad)  
  41607e:	fmul   DWORD PTR [edi]
  416080:	xor    esi,ebp
  416082:	add    DWORD PTR [ecx-0x926a9ef],0x0
  416089:	and    ebx,DWORD PTR [ebx]
  41608b:	out    dx,al
  41608c:	mov    ecx,0xcbb139b1
  416091:	dec    ebp
  416092:	inc    ebp
  416093:	ror    DWORD PTR [ebp+0x31e10553],1
  416099:	aaa    
  41609a:	(bad)  
  41609b:	jns    0x416093
  41609d:	popa   
  41609e:	std    
  41609f:	add    bl,BYTE PTR [ebp-0xf]
  4160a2:	xchg   eax,eax
  4160a4:	sbb    edi,DWORD PTR [ebp+ebx*8-0x13d4dbdd]
  4160ab:	icebp  
  4160ac:	(bad)  
  4160ad:	xor    eax,0x8857abfd
  4160b2:	inc    edi
  4160b3:	adc    DWORD PTR [edi-0x68],0x5f
  4160b7:	mov    al,ds:0xec7146e7
  4160bc:	mov    eax,0x319ef3d
  4160c1:	hlt    
  4160c2:	fwait
  4160c3:	push   ss
  4160c4:	push   eax
  4160c5:	adc    eax,DWORD PTR [eax-0x78]
  4160c8:	jmp    0xba0463f7
  4160cd:	adc    DWORD PTR [edx+0x5a],eax
  4160d0:	fwait
  4160d1:	lods   al,BYTE PTR ds:[esi]
  4160d2:	xchg   ecx,eax
  4160d3:	mov    esp,0xe7b06f5e
  4160d8:	adc    ch,ch
  4160da:	add    eax,0x17d4af5
  4160df:	icebp  
  4160e0:	push   0xf3cc007
  4160e5:	push   eax
  4160e6:	shr    BYTE PTR [edi+ebp*1-0x43],0x35
  4160eb:	lods   eax,DWORD PTR ds:[esi]
  4160ec:	mov    ch,0xd5
  4160ee:	push   eax
  4160ef:	dec    ecx
  4160f0:	inc    edi
  4160f1:	in     eax,0x55
  4160f3:	fxch   st(1)
  4160f5:	jmp    0x3928d126
  4160fa:	fdiv   st,st(1)
  4160fc:	sbb    al,0xf0
  4160fe:	cwde   
  4160ff:	add    DWORD PTR [ecx],eax
  416101:	mov    BYTE PTR ds:0xe4209cdd,dl
  416107:	mov    ds:0x608b30b8,al
  41610c:	cmp    eax,0x639dc30c
  416111:	mov    ds:0xed20dfc9,al
  416116:	in     eax,0x80
  416118:	icebp  
  416119:	lock std 
  41611b:	mov    WORD PTR [eax],es
  41611d:	xchg   BYTE PTR [eax+0x4b9f6787],bl
  416123:	sbb    al,0xf8
  416125:	add    BYTE PTR [eax-0x51],ah
  416128:	dec    esp
  416129:	mov    bh,0x71
  41612b:	cmp    eax,0x4c8e45c0
  416130:	ins    BYTE PTR es:[edi],dx
  416131:	aad    0xc8
  416133:	pop    esp
  416134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416135:	out    0xa4,al
  416137:	dec    edi
  416138:	jne    0x4161a5
  41613a:	dec    ah
  41613c:	add    al,0xc3
  41613e:	lea    edi,[ebx-0x63622cee]
  416144:	das    
  416145:	jno    0x416176
  416147:	xor    eax,0xc8c73ac0
  41614c:	iret   
  41614d:	aas    
  41614e:	inc    ebp
  41614f:	inc    ebp
  416150:	push   ebp
  416151:	mov    esp,DWORD PTR ds:0x3c6346e0
  416157:	lock sbb DWORD PTR [edx-0x2e],edi
  41615b:	xor    dh,0x8d
  41615e:	loop   0x4160f1
  416160:	cmp    DWORD PTR [ebx+0x24],0xf3be694a
  416167:	ret    
  416168:	mov    ebp,DWORD PTR [ebx+0x1]
  41616b:	mov    bl,0x88
  41616d:	mov    ecx,0x18dbc692
  416172:	cdq    
  416173:	lods   eax,DWORD PTR ds:[esi]
  416174:	aam    0x4
  416176:	jnp    0x41611c
  416178:	dec    eax
  416179:	out    dx,eax
  41617a:	jo     0x41619c
  41617c:	in     al,0xf
  41617e:	xchg   ebx,eax
  41617f:	fs (bad) 
  416181:	call   0x997c86e6
  416186:	xor    ebp,esi
  416188:	pop    ebx
  416189:	dec    ecx
  41618a:	mov    eax,gs
  41618c:	inc    edi
  41618d:	cwde   
  41618e:	pusha  
  41618f:	push   ecx
  416190:	fsubr  DWORD PTR [ebp+0x1c]
  416193:	test   al,0xe8
  416195:	jnp    0x416153
  416197:	loopne 0x41620e
  416199:	jo     0x4161af
  41619b:	sub    al,0x87
  41619d:	push   eax
  41619e:	or     BYTE PTR [ecx+0x20],dl
  4161a1:	test   eax,0x72edf4a9
  4161a6:	or     eax,0xc1c9c4b3
  4161ab:	test   al,0x4d
  4161ad:	bound  edx,QWORD PTR [edx+eiz*2]
  4161b0:	outs   dx,DWORD PTR ds:[esi]
  4161b1:	loopne 0x41615b
  4161b3:	in     al,dx
  4161b4:	mov    dl,0xf7
  4161b6:	xor    DWORD PTR [edx+eiz*2-0x34c0cc3b],edi
  4161bd:	jmp    0x416157
  4161bf:	push   ds
  4161c0:	loopne 0x4161c9
  4161c2:	sub    ah,BYTE PTR [esi]
  4161c4:	mov    al,0x1c
  4161c6:	mov    edx,0x9260635
  4161cb:	pop    edx
  4161cc:	push   ss
  4161cd:	push   0x207e5da3
  4161d2:	adc    BYTE PTR [edi+esi*1+0xc],ah
  4161d6:	cmp    eax,DWORD PTR [eax+0x55]
  4161d9:	aaa    
  4161da:	mov    DWORD PTR [eax+edx*2+0x2ba19324],ebx
  4161e1:	push   0xfc08713a
  4161e6:	inc    esp
  4161e7:	sub    DWORD PTR [edi+ecx*2-0x772a1c74],0x18779024
  4161f2:	cwde   
  4161f3:	jae    0x4161ee
  4161f5:	sti    
  4161f6:	or     al,BYTE PTR [ecx-0x27fa3d7b]
  4161fc:	mov    esp,0x278cec11
  416201:	enter  0x906c,0x4b
  416205:	mov    cl,0x5c
  416207:	inc    esi
  416208:	clc    
  416209:	dec    ebp
  41620a:	pop    esp
  41620b:	pop    ebx
  41620c:	or     al,0xd9
  41620e:	dec    edx
  41620f:	and    al,0x7c
  416211:	stos   DWORD PTR es:[edi],eax
  416212:	mov    dl,0x76
  416214:	js     0x416292
  416216:	or     BYTE PTR [edi],0x88
  416219:	stc    
  41621a:	dec    eax
  41621b:	pop    ds
  41621c:	int    0x48
  41621e:	sub    ebx,DWORD PTR [esi+0x23]
  416221:	lods   al,BYTE PTR ds:[esi]
  416222:	outs   dx,BYTE PTR ds:[esi]
  416223:	mov    ebx,0x5d7471c
  416228:	das    
  416229:	fcmovnbe st,st(0)
  41622b:	out    0x11,eax
  41622d:	xlat   BYTE PTR ds:[ebx]
  41622e:	scas   eax,DWORD PTR es:[edi]
  41622f:	pop    ebx
  416230:	mov    bh,0xfb
  416232:	mov    dl,0x78
  416234:	mov    ebp,0x4b838d68
  416239:	sbb    ebp,DWORD PTR [esi-0x69]
  41623c:	mov    esp,0xa7ba560c
  416241:	push   0x34
  416243:	mov    al,0x8f
  416245:	add    eax,esp
  416247:	inc    ebx
  416248:	xchg   ecx,eax
  416249:	or     BYTE PTR ds:0xa21d23f,dl
  41624f:	call   0xcb4c5e52
  416254:	xor    esi,DWORD PTR [ebx]
  416256:	sti    
  416257:	xor    DWORD PTR [eax+0x7a309766],0xffffffaa
  41625e:	call   0xb8924778
  416263:	jge    0x416290
  416265:	retf   0xbfb
  416268:	pop    ebx
  416269:	test   eax,0x1ed3dc04
  41626e:	retf   
  41626f:	xchg   ecx,eax
  416270:	and    al,0x35
  416272:	push   ds
  416273:	out    dx,al
  416274:	add    BYTE PTR [edi],cl
  416276:	sti    
  416277:	xchg   DWORD PTR [ebp-0xc],ecx
  41627a:	sub    edx,edx
  41627c:	stos   DWORD PTR es:[edi],eax
  41627d:	and    al,0x5d
  41627f:	les    eax,FWORD PTR [ebx]
  416281:	data16 lahf 
  416283:	popf   
  416284:	sbb    al,0xfb
  416286:	iret   
  416287:	nop
  416288:	push   ss
  416289:	pop    edx
  41628a:	cmp    eax,0xff2fe73e
  41628f:	cmp    esi,edi
  416291:	clc    
  416292:	jle    0x4162fc
  416294:	nop
  416295:	dec    edx
  416296:	or     al,0x3
  416298:	sahf   
  416299:	je     0x4162d8
  41629b:	pusha  
  41629c:	and    eax,0x25a82b
  4162a1:	stc    
  4162a2:	pop    ss
  4162a3:	int3   
  4162a4:	push   ecx
  4162a5:	dec    edx
  4162a6:	je     0x4162f9
  4162a8:	addr16 sbb eax,0x1ca5f70c
  4162ae:	icebp  
  4162af:	aam    0xbd
  4162b1:	xor    BYTE PTR [ecx+0x574d2c81],cl
  4162b7:	push   ecx
  4162b8:	lods   al,BYTE PTR ds:[esi]
  4162b9:	or     al,0x31
  4162bb:	imul   edi,eax,0xb3d9f2a5
  4162c1:	jno    0x4162bb
  4162c3:	adc    al,0xc3
  4162c5:	mov    ah,0xdb
  4162c7:	(bad)  
  4162c8:	fdiv   DWORD PTR [esp+edi*2+0x66]
  4162cc:	or     al,0xbc
  4162ce:	jl     0x416285
  4162d0:	xchg   ebx,eax
  4162d1:	sbb    al,0xb6
  4162d3:	in     al,0x68
  4162d5:	push   cs
  4162d6:	aad    0xfa
  4162d8:	sbb    BYTE PTR [edi+ebp*1],ah
  4162db:	sti    
  4162dc:	ins    DWORD PTR es:[edi],dx
  4162dd:	push   ebx
  4162de:	cmc    
  4162df:	fsub   DWORD PTR [edx]
  4162e1:	sub    DWORD PTR [ebx+0x36b04e4a],0xb753e41d
  4162eb:	jecxz  0x41631e
  4162ed:	jo     0x4162af
  4162ef:	repz mov ah,0x8f
  4162f2:	and    BYTE PTR [eax-0x6b],dl
  4162f5:	mov    ds:0xe47d6fd6,eax
  4162fa:	pop    ebx
  4162fb:	imul   ecx,DWORD PTR [edi+0x2d],0xc5fc3f19
  416302:	sub    BYTE PTR [edi-0x5f],dl
  416305:	fist   WORD PTR ds:0x2bb3539c
  41630b:	pop    ebp
  41630c:	jo     0x41630d
  41630e:	mov    BYTE PTR [edi-0xb],dh
  416311:	xor    BYTE PTR [ebx-0x446bdb37],ch
  416317:	jmp    0xa7929280
  41631c:	int    0xc
  41631e:	cmp    BYTE PTR [edi-0x4e148373],bl
  416324:	sbb    bh,bl
  416326:	pushf  
  416327:	sub    DWORD PTR [ebp-0x37],esp
  41632a:	outs   dx,DWORD PTR ds:[esi]
  41632b:	jnp    0x4162ba
  41632d:	jnp    0x4162e9
  41632f:	xchg   ebx,eax
  416330:	push   ebx
  416331:	mov    ebx,DWORD PTR [ebp+0x4ced8513]
  416337:	mov    bl,0xc7
  416339:	sahf   
  41633a:	jb     0x416375
  41633c:	loope  0x4162c6
  41633e:	dec    esp
  41633f:	dec    ebx
  416340:	xchg   ecx,eax
  416341:	add    al,0x8c
  416343:	repz xlat BYTE PTR ds:[ebx]
  416345:	(bad)  
  416346:	push   ebp
  416347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416348:	dec    edx
  416349:	add    al,0x48
  41634b:	aad    0xb0
  41634d:	fistp  WORD PTR [edx-0x4912bbda]
  416353:	inc    esp
  416354:	(bad)  
  416355:	mov    edx,0x2d8e87cb
  41635a:	xchg   ebp,eax
  41635b:	dec    ebx
  41635c:	jns    0x4162f8
  41635e:	sbb    al,0xe6
  416360:	in     eax,dx
  416361:	or     eax,0x7cd934f4
  416366:	(bad)  
  416367:	push   ds
  416368:	fist   DWORD PTR [ecx-0x30d980dc]
  41636e:	add    BYTE PTR [ecx-0x30],bl
  416371:	das    
  416372:	ins    DWORD PTR es:[edi],dx
  416373:	fdivr  DWORD PTR [ebx]
  416375:	inc    ecx
  416376:	lock jno 0x4163be
  416379:	xchg   esi,eax
  41637a:	(bad)  
  41637b:	ficomp DWORD PTR [edx-0xf11584c]
  416381:	mov    bl,0xf2
  416383:	cwde   
  416384:	fld    QWORD PTR [edx-0x4200f33e]
  41638a:	sbb    al,0xf9
  41638c:	mov    ecx,0x2a6d25c4
  416391:	cld    
  416392:	add    eax,0x244d455
  416397:	fcomp  DWORD PTR [edi]
  416399:	mov    al,ds:0xb071b3e6
  41639e:	mov    eax,ds:0xbf87476e
  4163a3:	cli    
  4163a4:	dec    esp
  4163a5:	add    ch,ah
  4163a7:	in     al,dx
  4163a8:	call   DWORD PTR [esi+ebx*8-0x1bceff31]
  4163af:	lods   al,BYTE PTR ds:[esi]
  4163b0:	idiv   DWORD PTR ss:[eax+0x3b]
  4163b4:	loope  0x4163bd
  4163b6:	fcomp  DWORD PTR [edi]
  4163b8:	out    0x97,eax
  4163ba:	push   ds
  4163bb:	cld    
  4163bc:	gs and al,0x5c
  4163bf:	dec    ecx
  4163c0:	jo     0x416418
  4163c2:	mov    ah,0xbe
  4163c4:	inc    edi
  4163c5:	outs   dx,DWORD PTR ds:[esi]
  4163c6:	mov    ds:0x79cc2de7,eax
  4163cb:	cld    
  4163cc:	imul   eax,DWORD PTR [ebp-0x4],0x413bcd1b
  4163d3:	loopne 0x4163f5
  4163d5:	mov    eax,ds:0x6d1352b9
  4163da:	mov    bl,cl
  4163dc:	mov    esi,0x77a88c43
  4163e1:	and    eax,0x8b443e0
  4163e6:	inc    edx
  4163e7:	push   ecx
  4163e8:	outs   dx,BYTE PTR ds:[esi]
  4163e9:	jo     0x4163a3
  4163eb:	mov    ds:0x9bd8eb45,eax
  4163f0:	dec    esp
  4163f1:	fwait
  4163f2:	push   ebx
  4163f3:	xor    BYTE PTR [edi+0x7ab933df],dh
  4163f9:	cs mov edx,0x50180a57
  4163ff:	fst    QWORD PTR ds:0x8011e9b8
  416405:	out    0x5,eax
  416407:	xchg   edx,eax
  416408:	mov    al,0x3f
  41640a:	int    0xe4
  41640c:	scas   al,BYTE PTR es:[edi]
  41640d:	imul   eax,DWORD PTR [edi-0x78e02be4],0x65
  416414:	mov    ?,WORD PTR [edx+0x74]
  416417:	je     0x4163b6
  416419:	cmp    al,0xe6
  41641b:	in     al,0xee
  41641d:	or     al,0x73
  41641f:	nop
  416420:	fild   WORD PTR [esi+0x65]
  416423:	es mov edi,0x5b1851b0
  416429:	mov    edi,DWORD PTR [esi-0x38]
  41642c:	fwait
  41642d:	push   edi
  41642e:	xor    al,0xbe
  416430:	cmp    al,0xf6
  416432:	std    
  416433:	enter  0xcdfb,0x78
  416437:	clc    
  416438:	nop
  416439:	and    DWORD PTR [edx+0x1c9d8d0c],ecx
  41643f:	lea    edx,[ecx]
  416441:	(bad)  
  416442:	pushf  
  416443:	sub    cl,dl
  416445:	mov    WORD PTR [edi],?
  416447:	faddp  st(4),st
  416449:	inc    edi
  41644a:	scas   al,BYTE PTR es:[edi]
  41644b:	les    edx,FWORD PTR [ecx-0x4cbf41aa]
  416451:	jmp    0x937119e
  416456:	sbb    DWORD PTR [ecx-0x1a],edi
  416459:	and    cl,bl
  41645b:	adc    DWORD PTR [eax],0xa6349591
  416461:	test   eax,0xd2733e52
  416466:	or     BYTE PTR [eax],dh
  416468:	les    ebp,FWORD PTR es:0xfcf0372d
  41646f:	push   ecx
  416470:	cli    
  416471:	inc    eax
  416472:	call   0x9ab9c874
  416477:	fs loope 0x41649a
  41647a:	outs   dx,BYTE PTR ds:[esi]
  41647b:	cmc    
  41647c:	mov    dl,0xf0
  41647e:	mov    ebp,eax
  416480:	ret    0xcf0c
  416483:	(bad)  
  416484:	inc    eax
  416485:	(bad)  
  416487:	call   0xbf585f1
  41648c:	xor    edi,DWORD PTR [esi]
  41648e:	sbb    eax,0xaef9808
  416493:	mov    ch,0x12
  416495:	in     al,0xb5
  416497:	xor    eax,0xa15ba854
  41649c:	sbb    BYTE PTR [esi+0x6721d7ac],bl
  4164a2:	sub    BYTE PTR [edx],0x1b
  4164a5:	mov    dl,0xb
  4164a7:	iret   
  4164a8:	test   al,0x2b
  4164aa:	xor    BYTE PTR [edx-0x50],bl
  4164ad:	push   ecx
  4164ae:	pushf  
  4164af:	xchg   ecx,eax
  4164b0:	jmp    0x4c4954be
  4164b5:	lock bound esi,QWORD PTR [eax]
  4164b8:	scas   al,BYTE PTR es:[edi]
  4164b9:	add    DWORD PTR [eax-0x5be9ea0b],eax
  4164bf:	lds    esp,FWORD PTR ds:0xa143b1a4
  4164c5:	ror    cl,0x2e
  4164c8:	mov    WORD PTR [ebp-0x2a],es
  4164cb:	ds cwde 
  4164cd:	jecxz  0x4164d1
  4164cf:	fs out dx,eax
  4164d1:	push   ss
  4164d2:	fs cli 
  4164d4:	sbb    dl,BYTE PTR [esp+eax*1+0x5588015b]
  4164db:	sbb    eax,0xb442a5e8
  4164e0:	inc    esp
  4164e1:	popa   
  4164e2:	cmp    eax,eax
  4164e4:	mov    ecx,0xaa4164a6
  4164e9:	sbb    esp,DWORD PTR [ebx+esi*4+0x33]
  4164ed:	imul   ebp,DWORD PTR [edi],0x1ff5d061
  4164f3:	loopne 0x41647b
  4164f5:	bound  esp,QWORD PTR [ecx+0x1657114b]
  4164fb:	xchg   edi,eax
  4164fc:	push   ebx
  4164fd:	mov    ch,0x63
  4164ff:	xchg   esp,eax
  416500:	adc    edx,DWORD PTR [ecx+0x4b]
  416503:	xor    dh,BYTE PTR [edi-0x7c]
  416506:	in     al,dx
  416507:	dec    esp
  416508:	mov    ds:0x40c1a935,al
  41650d:	in     eax,0x8d
  41650f:	pop    esp
  416510:	jne    0x416519
  416512:	stos   DWORD PTR es:[edi],eax
  416513:	push   eax
  416514:	jno    0x4164ed
  416516:	lods   al,BYTE PTR ds:[esi]
  416517:	pop    ebx
  416518:	scas   al,BYTE PTR es:[edi]
  416519:	idiv   DWORD PTR [edx+0x42]
  41651c:	dec    ebp
  41651d:	jns    0x41652e
  41651f:	arpl   di,di
  416521:	xor    ch,0x30
  416524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416525:	std    
  416526:	xor    al,0x1b
  416528:	xchg   esp,eax
  416529:	inc    esi
  41652a:	mov    cl,0x41
  41652c:	add    BYTE PTR [eax],al
  41652e:	add    BYTE PTR [eax],al
  416530:	sbb    BYTE PTR [edx],0xdf
  416533:	dec    edi
  416534:	dec    ebx
  416535:	push   es
  416536:	add    BYTE PTR [eax],al
  416538:	add    BYTE PTR [eax],al
  41653a:	add    BYTE PTR [eax],al
  41653c:	dec    ebx
  41653d:	push   es
  41653e:	add    BYTE PTR [eax],al
  416540:	or     DWORD PTR [eax],eax
  416542:	es jl  0x416545
  416545:	add    dh,BYTE PTR [esi]
  416547:	or     BYTE PTR [eax],al
  416549:	add    dh,cl
  41654b:	dec    edx
  41654c:	add    BYTE PTR [ebx],cl
  41654e:	lods   al,BYTE PTR ds:[esi]
  41654f:	test   DWORD PTR [edi],0xab0bffd5
  416555:	and    al,0xee
  416557:	in     eax,dx
  416558:	fdivr  DWORD PTR ds:0x9c9fb33
  41655e:	dec    eax
  41655f:	cwde   
  416560:	arpl   WORD PTR [ebp-0x40ac68ad],bx
  416566:	jecxz  0x4165d4
  416568:	mov    bh,BYTE PTR [ebx-0x2c]
  41656b:	mov    ss,WORD PTR [edx-0x6ff8ad71]
  416571:	shr    DWORD PTR [ebx*2-0xce0d93d],0xbf
  416579:	cmp    BYTE PTR [ecx-0x8],ah
  41657c:	test   DWORD PTR [esi+0x6baa5b5e],esp
  416582:	pop    esp
  416583:	scas   eax,DWORD PTR es:[edi]
  416584:	out    dx,eax
  416585:	call   0x804f:0x76aedc63
  41658c:	jnp    0x416511
  41658e:	jbe    0x4165ab
  416590:	rcr    DWORD PTR [ebp+ebx*2+0x4b],0xa4
  416595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416596:	ins    DWORD PTR es:[edi],dx
  416597:	push   esi
  416598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416599:	mov    bl,0x4f
  41659b:	repz or cl,BYTE PTR [ebx+ebx*8+0x21]
  4165a0:	nop
  4165a1:	outs   dx,DWORD PTR ds:[esi]
  4165a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a3:	out    dx,eax
  4165a4:	xchg   edx,eax
  4165a5:	pop    edi
  4165a6:	jo     0x4165b1
  4165a8:	(bad)  
  4165a9:	neg    DWORD PTR [esi-0x49]
  4165ac:	aad    0x4c
  4165ae:	mov    bl,0x94
  4165b0:	in     eax,0x28
  4165b2:	cmp    ecx,0x10
  4165b5:	lahf   
  4165b6:	dec    edx
  4165b7:	aas    
  4165b8:	mov    eax,0x3739e029
  4165bd:	xor    esp,ebx
  4165bf:	or     bl,bl
  4165c1:	fsub   QWORD PTR [edi]
  4165c3:	mul    DWORD PTR [ebx]
  4165c5:	out    dx,eax
  4165c6:	div    al
  4165c8:	call   0x9fc9fa8f
  4165cd:	sbb    bl,BYTE PTR [eax]
  4165cf:	cwde   
  4165d0:	xchg   esi,eax
  4165d1:	mov    ds:0xe4eebd20,eax
  4165d6:	mov    ah,0x88
  4165d8:	scas   eax,DWORD PTR es:[edi]
  4165d9:	dec    esp
  4165da:	rcl    DWORD PTR [eax-0x27282934],1
  4165e0:	cdq    
  4165e1:	sub    al,0xf7
  4165e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e4:	cmp    al,0xf1
  4165e6:	mov    cl,0x14
  4165e8:	hlt    
  4165e9:	mov    DWORD PTR [ecx-0x60e1f3d4],eax
  4165ef:	pop    ebp
  4165f0:	je     0x4165a7
  4165f2:	sub    cl,ah
  4165f4:	inc    eax
  4165f5:	aas    
  4165f6:	push   0xc9ec4d35
  4165fb:	rcl    eax,0x99
  4165fe:	add    bh,ch
  416600:	push   ss
  416601:	and    eax,0xf47be80a
  416606:	add    BYTE PTR [edi-0x27],dh
  416609:	or     esp,DWORD PTR [ebx+edx*8-0x14e7e0f4]
  416610:	loope  0x4165e1
  416612:	xor    al,0x27
  416614:	jecxz  0x4165d5
  416616:	sar    DWORD PTR [edi+ecx*2],0x6c
  41661a:	or     eax,0xde3715ce
  41661f:	shl    esp,cl
  416621:	xor    esp,edi
  416623:	sub    edi,eax
  416625:	sub    esi,DWORD PTR [edi+0x5d]
  416628:	ror    BYTE PTR [eax],1
  41662a:	int    0xf0
  41662c:	or     dl,BYTE PTR [ebx]
  41662e:	in     al,0xab
  416630:	popa   
  416631:	lock sub al,0x3
  416634:	ret    
  416635:	mov    bl,0xf4
  416637:	dec    edi
  416638:	loopne 0x4165ca
  41663a:	push   ebp
  41663b:	push   ebx
  41663c:	push   esp
  41663d:	sti    
  41663e:	pop    esp
  41663f:	outs   dx,BYTE PTR ds:[esi]
  416640:	mov    eax,0x1b35275b
  416645:	in     eax,0x8
  416647:	(bad)
  41664a:	adc    dl,al
  41664c:	jmp    0x2105d3e8
  416651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416652:	test   DWORD PTR [ecx+edi*1],eax
  416655:	push   0x983d4fb0
  41665a:	push   eax
  41665b:	ja     0x41667a
  41665d:	mov    BYTE PTR [ebx+0x11],al
  416660:	mov    edi,fs
  416662:	mov    DWORD PTR [ebx+esi*2+0x1],esi
  416666:	pop    eax
  416667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416668:	lds    edx,FWORD PTR [ebx+esi*4-0x17]
  41666c:	cmp    al,0xc8
  41666e:	das    
  41666f:	fsub   DWORD PTR [edi+0x3736b5b5]
  416675:	mov    ecx,0x438a4b64
  41667a:	sbb    DWORD PTR [ebx+0x5f],0x26
  41667e:	adc    DWORD PTR [eax-0x51e9c98],ebx
  416684:	aas    
  416685:	pop    esi
  416686:	or     eax,0x181b5cdd
  41668b:	int    0x70
  41668d:	mov    al,ds:0x39352829
  416692:	icebp  
  416693:	je     0x4166d1
  416695:	(bad)  
  416697:	stos   DWORD PTR es:[edi],eax
  416698:	inc    edi
  416699:	push   esi
  41669a:	ret    
  41669b:	fcomip st,st(6)
  41669d:	out    0xf4,eax
  41669f:	in     eax,dx
  4166a0:	jmp    0x982b5f3d
  4166a5:	test   BYTE PTR [ebx],dl
  4166a7:	mov    WORD PTR [edi],es
  4166a9:	xchg   esp,eax
  4166aa:	add    al,0x6c
  4166ac:	and    al,0x3c
  4166ae:	addr16 lahf 
  4166b0:	dec    edi
  4166b1:	jecxz  0x4166eb
  4166b3:	sub    DWORD PTR [eax+0x5c],eax
  4166b6:	dec    ecx
  4166b7:	push   eax
  4166b8:	ins    BYTE PTR es:[edi],dx
  4166b9:	push   esp
  4166ba:	inc    ecx
  4166bb:	sbb    esp,DWORD PTR [ecx+0x7e]
  4166be:	lods   al,BYTE PTR ds:[esi]
  4166bf:	jno    0x4166b6
  4166c1:	loope  0x41668b
  4166c3:	or     ebx,DWORD PTR [edx-0x55]
  4166c6:	icebp  
  4166c7:	jl     0x416670
  4166c9:	xor    eax,0x2887389d
  4166ce:	mov    ebx,0x3e282d3a
  4166d3:	pop    ecx
  4166d4:	push   eax
  4166d5:	dec    ebx
  4166d6:	push   ebp
  4166d7:	fimul  DWORD PTR [eax+0x6680455b]
  4166dd:	jno    0x416707
  4166df:	jecxz  0x41669a
  4166e1:	xor    ah,dh
  4166e3:	add    DWORD PTR [ecx-0x14],eax
  4166e6:	mov    DWORD PTR [ecx+0x4ced8d54],ecx
  4166ec:	lods   eax,DWORD PTR ds:[esi]
  4166ed:	sub    DWORD PTR [eax],ebp
  4166ef:	fs mov ebp,0xc332f32a
  4166f5:	cmp    ebx,DWORD PTR [ebx-0x66]
  4166f8:	or     ah,bl
  4166fa:	js     0x4166de
  4166fc:	jg     0x41676a
  4166fe:	push   esp
  4166ff:	jmp    FWORD PTR [ebx]
  416701:	clc    
  416702:	xchg   ebp,eax
  416703:	aam    0x7d
  416705:	mov    DWORD PTR [ebp-0x13af2c28],ecx
  41670b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41670c:	arpl   WORD PTR [edi*2-0x6fef8b89],bp
  416713:	sti    
  416714:	sbb    ebx,DWORD PTR ds:0xac1b0498
  41671a:	add    al,0x21
  41671c:	mov    al,ds:0x148de07b
  416721:	xchg   BYTE PTR [ecx-0x2a],cl
  416724:	dec    edi
  416725:	pop    ebp
  416726:	popf   
  416727:	pop    ebp
  416728:	fsub   st,st(0)
  41672a:	lods   eax,DWORD PTR ds:[esi]
  41672b:	jge    0x416711
  41672d:	mov    ebx,0xdbfdc61
  416732:	add    DWORD PTR [edi*8+0x579f1e90],0x32a12cab
  41673d:	mov    eax,0x624a3d1c
  416742:	loopne 0x416790
  416744:	pop    ebp
  416745:	rol    BYTE PTR [ecx+0x65e7df2f],1
  41674b:	ins    DWORD PTR es:[edi],dx
  41674c:	jnp    0x4166ce
  41674e:	ins    BYTE PTR es:[edi],dx
  41674f:	ja     0x92363962
  416755:	sbb    BYTE PTR [ebp+ebx*4+0x4f2894f9],dh
  41675c:	or     eax,0x68215b90
  416761:	dec    ecx
  416762:	adc    DWORD PTR [ecx+eax*2],edx
  416765:	ficom  DWORD PTR [eax-0x44]
  416768:	out    0x64,eax
  41676a:	dec    eax
  41676b:	repz js 0x4167be
  41676e:	dec    BYTE PTR [eax+edi*8]
  416771:	or     BYTE PTR [edi+0x1d],bl
  416774:	xchg   esp,eax
  416775:	pop    ecx
  416776:	sbb    DWORD PTR [ecx+eiz*4+0x6546a824],edi
  41677d:	js     0x416777
  41677f:	inc    esp
  416780:	enter  0x4740,0xdc
  416784:	nop
  416785:	aam    0x77
  416787:	mov    esp,0x73e0abf3
  41678c:	sub    eax,0x898c0df8
  416791:	add    BYTE PTR [eax+edx*1+0x645fab14],dl
  416798:	and    ebp,esp
  41679a:	push   es
  41679b:	cmc    
  41679c:	xor    edi,DWORD PTR [esi-0x303bb932]
  4167a2:	fsub   QWORD PTR [edi-0x179e06b1]
  4167a8:	ins    BYTE PTR es:[edi],dx
  4167a9:	in     eax,dx
  4167aa:	sti    
  4167ab:	jl     0x416748
  4167ad:	jl     0x41673d
  4167af:	add    al,0x84
  4167b1:	mov    eax,edx
  4167b3:	adc    bl,bh
  4167b5:	xchg   ecx,eax
  4167b6:	lods   al,BYTE PTR ds:[esi]
  4167b7:	arpl   WORD PTR [ebx+edi*2-0x32c08c73],bx
  4167be:	dec    ebp
  4167bf:	adc    DWORD PTR [edi+edx*2+0xd],ebp
  4167c3:	pop    eax
  4167c4:	pop    ss
  4167c5:	cmc    
  4167c6:	js     0x416793
  4167c8:	scas   eax,DWORD PTR es:[edi]
  4167c9:	cld    
  4167ca:	xor    al,0xf3
  4167cc:	xor    eax,0x2b4c7885
  4167d1:	sbb    eax,0x21e90432
  4167d6:	test   al,0x8
  4167d8:	aas    
  4167d9:	mov    esp,0x40b0b818
  4167de:	loopne 0x416855
  4167e0:	je     0x416765
  4167e2:	sbb    dl,cl
  4167e4:	and    dl,dh
  4167e6:	jmp    0x20f5a8cd
  4167eb:	rcr    DWORD PTR [edi+esi*8],0x98
  4167ef:	adc    dh,bl
  4167f1:	mov    DWORD PTR [eax],edi
  4167f3:	adc    DWORD PTR [esp+eax*2-0x1eab3576],ebp
  4167fa:	fisubr DWORD PTR [edi+eiz*2+0x2e]
  4167ff:	jl     0x416873
  416801:	xor    ch,BYTE PTR [edi+ecx*1+0x2d90346d]
  416808:	jne    0x416876
  41680a:	(bad)  
  41680c:	js     0x4167e7
  41680e:	sbb    DWORD PTR [edx],0x20fabd0c
  416814:	or     esi,0x8c942067
  41681a:	cmp    al,0x72
  41681c:	mov    esi,0xed650dff
  416821:	cld    
  416822:	cmp    DWORD PTR [ecx],esp
  416824:	or     al,0x4e
  416826:	or     dh,al
  416828:	push   ebp
  416829:	push   ds
  41682a:	xchg   edx,eax
  41682b:	cld    
  41682c:	mov    eax,ds:0x95762e04
  416831:	pop    edx
  416832:	and    al,0x2
  416834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416835:	and    al,0x16
  416837:	mov    eax,0xc4253ca9
  41683c:	sub    eax,DWORD PTR [ecx+0x70]
  41683f:	pushf  
  416840:	enter  0x7dd,0x98
  416844:	push   0x1b88750f
  416849:	dec    ecx
  41684a:	mov    WORD PTR [esi+ebp*2-0x3f],fs
  41684e:	div    DWORD PTR [esi-0x7ad243ec]
  416854:	jle    0x4168c5
  416856:	mov    esi,0xc1f15f54
  41685b:	xchg   esi,eax
  41685c:	or     eax,0xdc9b32d3
  416861:	pusha  
  416862:	lods   eax,DWORD PTR ds:[esi]
  416863:	gs cwde 
  416865:	mov    ecx,0xc9846d3c
  41686a:	xchg   BYTE PTR [ebx+0x71],cl
  41686d:	rcl    BYTE PTR [esi+0x58],1
  416870:	jl     0x4168d2
  416872:	imul   esp,esp,0x51
  416875:	xchg   BYTE PTR [ecx+esi*2+0x74c468f9],dl
  41687c:	jae    0x4168ed
  41687e:	xchg   ebp,eax
  41687f:	rcl    BYTE PTR [eax+eax*2+0x2524f7b1],1
  416886:	push   0x492be030
  41688b:	sbb    al,0x40
  41688d:	hlt    
  41688e:	iret   
  41688f:	fdivr  QWORD PTR [esi]
  416891:	jne    0x4168b3
  416893:	js     0x416906
  416895:	and    al,0x60
  416897:	cmp    eax,0x40dd84bf
  41689c:	sbb    esp,0x84f09d84
  4168a2:	test   eax,0x6ce1d7ed
  4168a7:	lods   eax,DWORD PTR ds:[esi]
  4168a8:	mov    al,ah
  4168aa:	leave  
  4168ab:	pushf  
  4168ac:	(bad)  
  4168ad:	cld    
  4168ae:	pop    esp
  4168af:	out    dx,eax
  4168b0:	and    al,0x44
  4168b2:	jge    0x4168ec
  4168b4:	pop    eax
  4168b5:	jns    0x4168e3
  4168b7:	xchg   BYTE PTR [eax+ecx*4-0x763f2ff5],dh
  4168be:	aam    0x94
  4168c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168c1:	clc    
  4168c2:	mov    esp,0x54f53f88
  4168c7:	add    bh,ch
  4168c9:	fld    DWORD PTR [esp+ebp*8-0x5f73262c]
  4168d0:	outs   dx,DWORD PTR ds:[esi]
  4168d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168d2:	sbb    al,0xab
  4168d4:	in     eax,0xf8
  4168d6:	mov    ah,0x44
  4168d8:	add    eax,ecx
  4168da:	push   0xa0af55a7
  4168df:	fs inc eax
  4168e1:	cmp    al,0xe2
  4168e3:	mov    ah,0xb8
  4168e5:	aaa    
  4168e6:	and    eax,0x1c0f95cc
  4168eb:	rcr    al,cl
  4168ed:	mov    DWORD PTR [ebx+0x8],ebp
  4168f0:	arpl   sp,bp
  4168f2:	mov    ch,0xfc
  4168f4:	retf   
  4168f5:	xor    eax,0x85404c89
  4168fa:	adc    BYTE PTR [ecx+edx*4],bl
  4168fd:	push   esp
  4168fe:	and    al,0xe3
  416900:	push   0x75b8bcb8
  416905:	jl     0x41693e
  416907:	jl     0xdc801ce9
  41690d:	jmp    0xe0ed98a0
  416912:	iret   
  416913:	pop    edi
  416914:	add    BYTE PTR ss:[eax-0x6efbb331],al
  41691b:	mov    dh,0x7b
  41691d:	fwait
  41691e:	and    al,0xef
  416920:	ins    BYTE PTR es:[edi],dx
  416921:	sub    BYTE PTR [edi],bl
  416923:	shr    BYTE PTR [eax+0xc4883be],0x4c
  41692a:	stos   BYTE PTR es:[edi],al
  41692b:	das    
  41692c:	mov    ds,eax
  41692e:	das    
  41692f:	lods   al,BYTE PTR ds:[esi]
  416930:	lock aam 0x9
  416933:	retf   0x5b1d
  416936:	iret   
  416937:	dec    esp
  416938:	xor    al,0x14
  41693a:	and    ch,cl
  41693c:	outs   dx,DWORD PTR ds:[esi]
  41693d:	sub    edi,0x38e5186c
  416943:	mov    esi,0xc8fe9a6
  416948:	jl     0x416975
  41694a:	or     bl,BYTE PTR [esi+ebp*2+0x35]
  41694e:	scas   eax,DWORD PTR es:[edi]
  41694f:	sub    al,0x40
  416951:	imul   edx,DWORD PTR [edx+eax*2],0x4
  416955:	and    ecx,ebx
  416957:	push   eax
  416958:	and    BYTE PTR [esp+esi*2-0x14d740db],dl
  41695f:	jo     0x41696d
  416961:	push   ebx
  416962:	add    DWORD PTR [ecx],0x104c8fbf
  416968:	push   0x7be385f3
  41696d:	scas   eax,DWORD PTR es:[edi]
  41696e:	sub    al,0x70
  416970:	xor    al,0x1
  416972:	pop    ebp
  416973:	(bad)  
  416974:	xchg   edi,eax
  416975:	dec    edi
  416976:	int3   
  416977:	aam    0x54
  416979:	adc    DWORD PTR [ecx+0x40],0x9df01fff
  416980:	sub    esi,ebx
  416982:	push   ecx
  416983:	inc    esp
  416984:	retf   
  416985:	test   al,0xa8
  416987:	add    eax,0x11eb0a0b
  41698c:	push   0x300af164
  416991:	cld    
  416992:	add    BYTE PTR [eax+ecx*4-0x6b1d3854],0x24
  41699a:	mov    al,0x44
  41699c:	test   al,0xf3
  41699e:	out    dx,al
  41699f:	mov    dh,0xe3
  4169a1:	fst    st(7)
  4169a3:	dec    edi
  4169a4:	xchg   ebp,eax
  4169a5:	(bad)  
  4169a7:	adc    DWORD PTR [ebx+0x64],0xffffffe0
  4169ab:	loop   0x4169f9
  4169ad:	jb     0x4169ae
  4169af:	ds xor al,0x5
  4169b2:	inc    esp
  4169b3:	cwde   
  4169b4:	stc    
  4169b5:	mov    edx,0xa45d6315
  4169ba:	(bad)  
  4169bb:	mov    ah,BYTE PTR [edi]
  4169bd:	lock loope 0x416974
  4169c0:	jmp    0x10fd:0xac26df28
  4169c7:	fcmovu st,st(0)
  4169c9:	add    dh,ah
  4169cb:	test   DWORD PTR [ebp-0xa],ebp
  4169ce:	hlt    
  4169cf:	cld    
  4169d0:	add    BYTE PTR [eax+ecx*4+0x1b90d69d],0xf1
  4169d8:	lods   al,BYTE PTR ds:[esi]
  4169d9:	and    al,0xe8
  4169db:	das    
  4169dc:	jae    0x416a12
  4169de:	push   ebx
  4169df:	in     eax,dx
  4169e0:	jg     0x4169a7
  4169e2:	int    0xe7
  4169e4:	shr    BYTE PTR [ebx+eiz*8],1
  4169e7:	add    edx,DWORD PTR [ebx+0x7b1763e6]
  4169ed:	hlt    
  4169ee:	mov    ebp,0x404a8bf0
  4169f3:	pop    ebx
  4169f4:	inc    eax
  4169f5:	cdq    
  4169f6:	sbb    BYTE PTR [eax+0x2e],cl
  4169f9:	in     al,0xfe
  4169fb:	pop    eax
  4169fc:	pop    es
  4169fd:	cmp    bh,BYTE PTR [eax+eax*8-0x674d363c]
  416a04:	aad    0xa5
  416a06:	shl    BYTE PTR [ebx-0xc],1
  416a09:	sub    al,0xe0
  416a0b:	fld    TBYTE PTR [ebx]
  416a0d:	pushf  
  416a0e:	repz jne 0x416a2b
  416a11:	test   DWORD PTR [esi+eax*2+0x58],ecx
  416a15:	dec    esi
  416a16:	hlt    
  416a17:	out    0xc9,al
  416a19:	sub    BYTE PTR [ebp-0x7],bh
  416a1c:	adc    eax,0x857b36f8
  416a21:	cmp    eax,0x55d217c6
  416a26:	scas   al,BYTE PTR es:[edi]
  416a27:	hlt    
  416a28:	mov    al,ds:0xd8f0befd
  416a2d:	in     eax,dx
  416a2e:	test   DWORD PTR [edx-0x9],esi
  416a31:	push   ecx
  416a32:	nop
  416a33:	pop    ss
  416a34:	fdivr  DWORD PTR [eax-0x13c032cd]
  416a3a:	and    ecx,DWORD PTR [ebp-0x7b84dbc6]
  416a40:	mov    DWORD PTR [esi],edi
  416a42:	pop    edx
  416a43:	fstp   DWORD PTR [ecx]
  416a45:	int3   
  416a46:	and    al,0x60
  416a48:	enter  0xf00c,0xa4
  416a4c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a4e:	ror    DWORD PTR [ebx],cl
  416a50:	cmpps  xmm6,XMMWORD PTR ds:0x32211c18,0x39
  416a58:	push   edx
  416a59:	xor    al,0xbc
  416a5b:	je     0x416a69
  416a5d:	js     0x416a67
  416a5f:	test   DWORD PTR [ebp+0x10],0xc04c7851
  416a66:	bound  ebx,QWORD PTR [ebx-0x49]
  416a69:	jo     0x416a62
  416a6b:	or     BYTE PTR [esi+esi*8],0xa5
  416a6f:	mov    bl,0x4d
  416a71:	jecxz  0x416a67
  416a73:	xchg   esi,eax
  416a74:	adc    al,0x78
  416a76:	sbb    BYTE PTR [eax-0x4d],ah
  416a79:	ss mov eax,0xca49b234
  416a7f:	pop    ebp
  416a80:	imul   edx,esp,0xed711c49
  416a86:	ss and al,0xc8
  416a89:	jbe    0x416a8b
  416a8b:	cmp    al,0x86
  416a8d:	mov    ebp,0x8ce3c4ce
  416a92:	jae    0x416a60
  416a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a95:	sub    DWORD PTR [eax+ecx*4],ecx
  416a98:	xor    BYTE PTR [ebp+0x4cda9cb8],dh
  416a9e:	inc    eax
  416a9f:	or     al,0x5a
  416aa1:	sbb    DWORD PTR [edx-0x80],ebx
  416aa4:	data16 sbb bl,BYTE PTR [ebp+0x2a78c27f]
  416aab:	xchg   DWORD PTR [ebx-0x646935c2],ecx
  416ab1:	cs cld 
  416ab3:	out    dx,al
  416ab4:	mov    eax,ds:0xb4743a20
  416ab9:	mov    esp,0xc0c0c29c
  416abe:	inc    esp
  416abf:	push   esi
  416ac0:	adc    edx,edi
  416ac2:	frstor [esi-0x4d859f19]
  416ac8:	mov    edi,0x85821f
  416acd:	add    dl,BYTE PTR [esi-0x4a]
  416ad0:	cdq    
  416ad1:	shl    BYTE PTR [eax+0x782a20a6],cl
  416ad7:	xchg   esi,eax
  416ad8:	mov    ecx,0x8e5248ba
  416add:	push   es
  416ade:	rcl    ch,1
  416ae0:	mov    ecx,0x216a68d2
  416ae5:	int3   
  416ae6:	icebp  
  416ae7:	jl     0x416b25
  416ae9:	jp     0x416ab6
  416aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aec:	or     ah,ah
  416aee:	test   eax,0x64cb59f8
  416af3:	mov    WORD PTR [esp+esi*4+0x43b2fe39],gs
  416afa:	add    eax,0xdc9272ca
  416aff:	js     0x416adf
  416b01:	or     esp,edx
  416b03:	gs ja  0x416b17
  416b06:	sti    
  416b07:	idiv   esp
  416b09:	mov    dh,0x54
  416b0b:	or     DWORD PTR [ecx+eax*2+0x30aa17ea],eax
  416b12:	xor    al,0xa0
  416b14:	jge    0x416ae5
  416b16:	mov    ah,0x39
  416b18:	ret    
  416b19:	enter  0xedd9,0x70
  416b1d:	aam    0x26
  416b1f:	push   esp
  416b20:	mov    cl,0xe5
  416b22:	sub    ah,ch
  416b24:	or     eax,0x2ad7c7c
  416b29:	les    ecx,FWORD PTR [eax]
  416b2b:	lock cwde 
  416b2d:	inc    ebp
  416b2e:	sbb    ebx,esp
  416b30:	and    BYTE PTR [ebx+edx*8],dh
  416b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b34:	popa   
  416b35:	xor    al,bh
  416b37:	cmp    al,0xba
  416b39:	int3   
  416b3a:	sbb    DWORD PTR [ebp+edx*2-0x29],ecx
  416b3e:	cwde   
  416b3f:	push   esp
  416b40:	jecxz  0x416ae7
  416b42:	pusha  
  416b43:	inc    edi
  416b44:	nop
  416b45:	jns    0xcc7c980b
  416b4b:	mov    dl,0x30
  416b4d:	lock pop ebp
  416b4f:	int3   
  416b50:	and    al,0x24
  416b52:	jg     0x416b0f
  416b54:	in     al,dx
  416b55:	outs   dx,BYTE PTR ds:[esi]
  416b56:	mov    bh,0xf3
  416b58:	push   esp
  416b59:	imul   ebx,DWORD PTR [edx+eax*2-0x21],0xb4a9b49e
  416b61:	jg     0x416b4c
  416b63:	mov    al,0x7c
  416b65:	ja     0x416b60
  416b67:	sbb    al,0x64
  416b69:	mov    bh,ah
  416b6b:	data16 cld 
  416b6d:	xchg   edi,eax
  416b6e:	and    BYTE PTR [edx+0x34736414],ah
  416b74:	outs   dx,DWORD PTR ds:[esi]
  416b75:	mov    bh,0xfe
  416b77:	inc    esi
  416b78:	jo     0x416ba6
  416b7a:	push   eax
  416b7b:	frstor ds:0x9421a7a8
  416b81:	ins    BYTE PTR es:[edi],dx
  416b82:	jo     0x416b2c
  416b84:	cmp    eax,DWORD PTR [eax]
  416b86:	add    BYTE PTR [eax],al
  416b88:	pop    edi
  416b89:	sbb    DWORD PTR [esi+0x4c],esi
  416b8c:	add    al,BYTE PTR ds:0x0
  416b92:	add    BYTE PTR [eax],al
  416b94:	add    al,BYTE PTR ds:0xa0000
  416b9a:	es jl  0x416b9d
  416b9d:	add    dh,BYTE PTR [esi]
  416b9f:	or     BYTE PTR [eax],al
  416ba1:	add    BYTE PTR ds:0x8040048,dl
  416ba7:	or     al,0x95
  416ba9:	aam    0x6c
  416bab:	push   cs
  416bac:	jo     0x416bd2
  416bae:	mov    DWORD PTR [eax],ebx
  416bb0:	push   0x77
  416bb2:	cmp    BYTE PTR [esi+0x40],dl
  416bb5:	adc    al,0x48
  416bb7:	mov    bl,0x45
  416bb9:	sub    al,0xa8
  416bbb:	sbb    al,0x60
  416bbd:	in     eax,dx
  416bbe:	sub    eax,0xb8478c6c
  416bc3:	cmc    
  416bc4:	lds    edi,FWORD PTR [ebp+ecx*1+0x73]
  416bc8:	and    al,0x8a
  416bcb:	pop    ss
  416bcc:	sub    DWORD PTR [ecx],ebp
  416bce:	inc    esp
  416bcf:	imul   edi,DWORD PTR fs:[di],0xc7b02c45
  416bd7:	sbb    eax,0x6f95dda8
  416bdc:	in     al,dx
  416bdd:	in     al,dx
  416bde:	inc    eax
  416bdf:	jno    0x416c56
  416be1:	xchg   esp,eax
  416be2:	jae    0x416be8
  416be4:	mov    WORD PTR [eax+0xe1f9082],cs
  416bea:	adc    al,ch
  416bec:	out    0xa8,eax
  416bee:	cld    
  416bef:	jecxz  0x416ba5
  416bf1:	inc    edi
  416bf2:	outs   dx,BYTE PTR ds:[esi]
  416bf3:	dec    ebx
  416bf4:	cmp    al,0xcf
  416bf6:	xchg   esp,eax
  416bf7:	pop    esp
  416bf8:	fisttp QWORD PTR [edi+ebx*4+0x6b]
  416bfc:	in     eax,dx
  416bfd:	ret    
  416bfe:	jo     0x416bc0
  416c00:	inc    ecx
  416c01:	cli    
  416c02:	mov    esp,0xe6a08885
  416c07:	mov    edx,DWORD PTR ds:0x23a484f8
  416c0d:	lods   al,BYTE PTR ds:[esi]
  416c0e:	cmp    ebx,DWORD PTR [edx+edi*4-0x23b13f44]
  416c15:	(bad)  
  416c16:	rcl    esp,1
  416c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c19:	pop    esp
  416c1a:	adc    bh,BYTE PTR [eax+0x3875f860]
  416c20:	(bad)  
  416c21:	mov    ebx,0x75feb486
  416c26:	pop    ds
  416c27:	push   cs
  416c28:	sbb    BYTE PTR [eax-0x7357d65d],ah
  416c2e:	mov    al,0x3d
  416c30:	inc    ebx
  416c31:	mov    ch,0xb2
  416c33:	inc    ebx
  416c34:	into   
  416c35:	leave  
  416c36:	test   eax,ebx
  416c38:	cmc    
  416c39:	imul   esi,DWORD PTR [edx+0x60],0xffffffed
  416c3d:	test   al,0xa5
  416c3f:	cld    
  416c40:	loopne 0x416c4e
  416c42:	add    eax,0x9f491008
  416c47:	pop    ebp
  416c48:	push   esp
  416c49:	das    
  416c4a:	in     eax,0x54
  416c4c:	xor    DWORD PTR [ecx+eiz*4+0x34814b83],esp
  416c53:	inc    edi
  416c54:	pop    esi
  416c55:	rcl    BYTE PTR [ecx-0x22],1
  416c58:	xor    eax,esp
  416c5a:	popa   
  416c5b:	cdq    
  416c5c:	fxch   st(5)
  416c5e:	mov    ebp,0x15047608
  416c63:	xchg   DWORD PTR [ebp-0x18],esp
  416c66:	xor    ebp,DWORD PTR [ecx+0x28]
  416c69:	scas   eax,DWORD PTR es:[edi]
  416c6a:	sub    BYTE PTR [ecx+0x3c],bh
  416c6d:	(bad)  
  416c70:	push   eax
  416c71:	inc    ebx
  416c72:	adc    eax,0x6a14dbdc
  416c78:	lock out 0xac,al
  416c7b:	js     0x416c71
  416c7d:	jmp    0x7b31b249
  416c82:	in     eax,0x9b
  416c84:	pop    ecx
  416c85:	cwde   
  416c86:	adc    BYTE PTR [ecx-0x442ce4db],ch
  416c8c:	scas   eax,DWORD PTR es:[edi]
  416c8d:	cmp    DWORD PTR [ebp+0x48],ebp
  416c90:	iret   
  416c91:	jge    0x416c5b
  416c93:	shl    BYTE PTR [edi],1
  416c95:	fld    QWORD PTR [edi+0x7b6c6814]
  416c9b:	loope  0x416c96
  416c9d:	adc    DWORD PTR [ebx+0x6e],0x18ef5e08
  416ca4:	into   
  416ca5:	xchg   edi,eax
  416ca6:	mov    al,ds:0x60a8aa5f
  416cab:	pop    esi
  416cac:	cmp    BYTE PTR [ebp+0x69],ch
  416caf:	inc    esp
  416cb0:	dec    edi
  416cb1:	sbb    DWORD PTR [esi+edx*2-0x21ef13f],ebp
  416cb8:	mov    esi,0x27b370e7
  416cbd:	and    bl,bl
  416cbf:	(bad)  
  416cc1:	rcl    DWORD PTR [ebx-0x7e],1
  416cc4:	dec    ebp
  416cc5:	mov    ds:0x253d2935,eax
  416cca:	mov    ch,0x1a
  416ccc:	arpl   WORD PTR [esi],bx
  416cce:	cld    
  416ccf:	es inc ecx
  416cd1:	rcl    bh,1
  416cd3:	ficom  DWORD PTR [ecx-0x20]
  416cd6:	xlat   BYTE PTR ds:[ebx]
  416cd7:	js     0x416cc8
  416cd9:	pop    eax
  416cda:	je     0x416d35
  416cdc:	cs xchg edi,eax
  416cde:	pop    es
  416cdf:	xchg   DWORD PTR [esi],ecx
  416ce1:	sahf   
  416ce2:	adc    BYTE PTR [ebp-0x25b54b0],al
  416ce8:	daa    
  416ce9:	pop    esp
  416cea:	mov    ah,0x3b
  416cec:	push   eax
  416ced:	dec    eax
  416cee:	sbb    ebx,DWORD PTR [ebx]
  416cf0:	fld    TBYTE PTR [ebx+edx*8-0x6873463c]
  416cf7:	in     al,dx
  416cf8:	cmp    esi,esp
  416cfa:	int    0xf9
  416cfc:	std    
  416cfd:	add    al,0x3d
  416cff:	mov    esi,es
  416d01:	pop    ds
  416d02:	outs   dx,DWORD PTR ds:[esi]
  416d03:	not    DWORD PTR [esi-0x34]
  416d06:	and    DWORD PTR [edi],edx
  416d08:	bound  esp,QWORD PTR [ecx+edi*1+0x48fc4607]
  416d0f:	mov    edx,0xde50d459
  416d14:	js     0x416d0f
  416d16:	ins    BYTE PTR es:[edi],dx
  416d17:	inc    ecx
  416d18:	cmp    esi,eax
  416d1a:	cs add eax,0xa8878861
  416d20:	pop    ds
  416d21:	push   ss
  416d22:	sbb    eax,0x6c9bb4a1
  416d27:	xor    eax,0x43b3cc7d
  416d2c:	xchg   ah,ah
  416d2e:	popf   
  416d2f:	adc    ah,0x9a
  416d32:	pop    esi
  416d33:	lock addr16 imul edx,ecx,0x89643475
  416d3b:	pop    ds
  416d3c:	lds    eax,FWORD PTR [edi-0x7c]
  416d3f:	pop    ds
  416d40:	fnstenv [esi+edi*8-0x4e631005]
  416d47:	ja     0x416cf1
  416d49:	aas    
  416d4a:	cmp    esp,ecx
  416d4c:	mov    ebx,0xd8815df2
  416d51:	and    al,0xb2
  416d53:	mov    ah,0x63
  416d55:	test   eax,0xfc73a4f8
  416d5a:	(bad)  
  416d5b:	lea    eax,[ebp-0xc]
  416d5e:	clc    
  416d5f:	jmp    0x416d31
  416d61:	jecxz  0x416da5
  416d63:	fld    TBYTE PTR [ebp+ecx*2+0x3f]
  416d67:	mov    cl,0x91
  416d69:	add    bh,cl
  416d6b:	int3   
  416d6c:	mov    esp,0xe72cf485
  416d71:	xor    BYTE PTR [edi-0x8719053],dl
  416d77:	xor    bh,ah
  416d79:	sub    eax,esi
  416d7b:	jl     0x416db2
  416d7d:	inc    eax
  416d7e:	inc    ebx
  416d7f:	dec    ecx
  416d80:	mul    DWORD PTR [edx]
  416d82:	or     al,ch
  416d84:	jae    0x416d41
  416d86:	and    eax,0xdcb2cb1
  416d8b:	pop    eax
  416d8c:	dec    eax
  416d8d:	fstp   DWORD PTR [esp+ebx*2]
  416d90:	fild   QWORD PTR [edx+0x6b]
  416d93:	adc    al,0xf8
  416d95:	mov    ah,0x8e
  416d97:	loopne 0x416d26
  416d99:	dec    esp
  416d9a:	lock xchg DWORD PTR [edx],edx
  416d9d:	aaa    
  416d9e:	fwait
  416d9f:	cmp    al,ah
  416da1:	sub    al,0x28
  416da3:	push   es
  416da4:	cmp    al,0x65
  416da6:	js     0x416e13
  416da8:	test   al,0x27
  416daa:	or     bh,BYTE PTR ds:0x509c5790
  416db0:	push   ebx
  416db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416db2:	sub    al,0xff
  416db4:	outs   dx,BYTE PTR ds:[esi]
  416db5:	je     0x416daa
  416db7:	add    DWORD PTR [ecx+ecx*1-0x3f],edi
  416dbb:	mov    WORD PTR [edi-0x481de275],ds
  416dc1:	and    al,0x2e
  416dc3:	mov    al,0xc5
  416dc5:	push   cs
  416dc6:	mov    ah,0x4c
  416dc8:	outs   dx,BYTE PTR ds:[esi]
  416dc9:	dec    edi
  416dca:	dec    ecx
  416dcb:	ret    
  416dcc:	mov    esp,0x7c7dcf56
  416dd1:	sti    
  416dd2:	sbb    BYTE PTR [ecx-0x71],ch
  416dd5:	mov    ebx,0x87ffc000
  416dda:	dec    esi
  416ddb:	jecxz  0x416d71
  416ddd:	jecxz  0x416e3b
  416ddf:	pusha  
  416de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416de1:	xchg   esi,eax
  416de2:	ins    DWORD PTR es:[edi],dx
  416de3:	mov    ebx,0x209ff77
  416de8:	and    eax,edi
  416dea:	xchg   edi,eax
  416deb:	or     al,BYTE PTR [edi]
  416ded:	fimul  DWORD PTR [edx]
  416def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416df0:	(bad)  
  416df2:	mov    al,0x12
  416df4:	nop
  416df5:	sbb    ebx,eax
  416df7:	inc    ebp
  416df8:	or     eax,0x5fa99113
  416dfd:	fmul   st(3),st
  416dff:	shl    BYTE PTR fs:[edi],0x30
  416e03:	and    bl,bh
  416e05:	(bad)  
  416e07:	inc    esp
  416e08:	inc    ebx
  416e09:	add    esp,0x35cc8d5f
  416e0f:	push   0xf32670fb
  416e14:	sub    DWORD PTR [eax-0x6719252b],ecx
  416e1a:	xchg   esp,eax
  416e1b:	retf   
  416e1c:	arpl   WORD PTR [eax+0x27],si
  416e1f:	ins    BYTE PTR es:[edi],dx
  416e20:	mov    ah,0xef
  416e22:	jmp    0xde43ee01
  416e27:	sahf   
  416e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e29:	loopne 0x416e7f
  416e2b:	(bad)  
  416e2c:	fidivr DWORD PTR ds:0x751ce86f
  416e32:	add    cl,BYTE PTR [ebp+0x5428dfb]
  416e38:	xchg   edx,eax
  416e39:	retf   0x9498
  416e3c:	repz das 
  416e3e:	outs   dx,DWORD PTR ds:[esi]
  416e3f:	daa    
  416e40:	jle    0x416e9e
  416e42:	aam    0x44
  416e44:	cmp    eax,0xe14d9d47
  416e49:	cli    
  416e4a:	sbb    ch,cl
  416e4c:	(bad)  
  416e4d:	cmc    
  416e4e:	add    dl,ch
  416e50:	mov    dl,0x75
  416e52:	loop   0x416e4c
  416e54:	mov    bh,0x1c
  416e56:	or     DWORD PTR [ecx+0x4],0xffffff9f
  416e5a:	sbb    BYTE PTR [ecx+0x30],dl
  416e5d:	je     0x416ed8
  416e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e60:	not    BYTE PTR [eax+0x46]
  416e63:	push   ss
  416e64:	aas    
  416e65:	mov    eax,edi
  416e67:	adc    ecx,edx
  416e69:	fcomp  DWORD PTR [edi]
  416e6b:	into   
  416e6c:	mov    dl,0x22
  416e6e:	ret    0x6c3a
  416e71:	xor    DWORD PTR [edi+ebp*1],edi
  416e74:	(bad)  
  416e75:	mov    cs,ebp
  416e77:	cmp    ah,0xba
  416e7a:	sahf   
  416e7b:	mov    al,ds:0x72250cc5
  416e80:	jle    0x416ef7
  416e82:	xor    cl,ah
  416e84:	pop    esp
  416e85:	sbb    eax,0x9d4db44
  416e8a:	inc    ecx
  416e8b:	sar    DWORD PTR [ecx-0x118a5942],0xf0
  416e92:	out    dx,al
  416e93:	push   edi
  416e94:	pop    edi
  416e95:	or     al,0xaf
  416e97:	xchg   ebx,eax
  416e98:	dec    esi
  416e99:	pop    edi
  416e9a:	xor    bl,BYTE PTR ds:0x68b02c15
  416ea0:	jnp    0x416ede
  416ea2:	xor    al,0x55
  416ea4:	and    BYTE PTR [eax-0x70],cl
  416ea7:	push   esp
  416ea8:	sub    BYTE PTR [ebx-0x53669b8b],ah
  416eae:	cmp    DWORD PTR [esi],esi
  416eb0:	jp     0x416f2a
  416eb2:	adc    BYTE PTR [ebp+ecx*1-0x1d64e9f0],0x3f
  416eba:	push   ebx
  416ebb:	push   cs
  416ebc:	mov    eax,ds:0xfd4e3434
  416ec1:	mov    al,ds:0x60f4cb41
  416ec6:	push   0x64601f78
  416ecb:	sbb    al,0x7b
  416ecd:	xchg   ebx,eax
  416ece:	jb     0x416edd
  416ed0:	ja     0x416ed7
  416ed2:	inc    eax
  416ed3:	mov    WORD PTR [eax+edx*2-0xa35470],es
  416eda:	addr16 js 0x416e8b
  416edd:	jo     0x416e5f
  416edf:	add    DWORD PTR ss:[eax],esp
  416ee2:	mov    eax,DWORD PTR [eax-0x28a9a8fa]
  416ee8:	rcl    BYTE PTR [ecx+edx*2+0x3a2f9051],0x72
  416ef0:	fs inc esp
  416ef2:	mov    BYTE PTR [ebx-0x6126652b],ah
  416ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416efa:	in     eax,dx
  416efb:	mov    ds:0x3fdc1494,al
  416f00:	jle    0x416f28
  416f02:	clc    
  416f03:	lods   al,BYTE PTR ds:[esi]
  416f04:	enter  0x28d4,0x78
  416f08:	out    0x6e,eax
  416f0a:	ins    BYTE PTR es:[edi],dx
  416f0b:	jnp    0x416f24
  416f0d:	jl     0x416f2c
  416f0f:	or     DWORD PTR [edi-0x35af4029],0xa64f9298
  416f19:	adc    dh,dl
  416f1b:	mov    ebx,0x2de2b694
  416f20:	fldcw  WORD PTR [ebx+eax*8]
  416f23:	iret   
  416f24:	retf   0xc5f8
  416f27:	push   ss
  416f28:	loopne 0x416f7a
  416f2a:	fdiv   DWORD PTR [eax]
  416f2c:	call   0x893df3ac
  416f31:	clc    
  416f32:	nop
  416f33:	xchg   ecx,eax
  416f34:	sbb    BYTE PTR [esi+eiz*4+0x702f95d0],ah
  416f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f3c:	fdivr  st,st(2)
  416f3e:	std    
  416f3f:	lock mov ch,bl
  416f42:	lods   al,BYTE PTR ds:[esi]
  416f43:	mov    ebx,DWORD PTR ds:[eax-0x3395c02d]
  416f4a:	jae    0x416f18
  416f4c:	clc    
  416f4d:	push   ds
  416f4e:	add    al,BYTE PTR [edi+0x12]
  416f51:	xor    DWORD PTR [ecx+0x0],edx
  416f54:	fdivr  QWORD PTR fs:[edx]
  416f57:	push   0x37
  416f59:	jmp    0x416f46
  416f5b:	cmp    esi,DWORD PTR [eax-0x2756c4f8]
  416f61:	(bad)  
  416f62:	xlat   BYTE PTR ds:[ebx]
  416f63:	xchg   DWORD PTR [edi+0x26],edx
  416f66:	mov    edx,0xc87d2fe8
  416f6b:	mov    ds:0x8901e73d,eax
  416f70:	xchg   esi,eax
  416f71:	xlat   BYTE PTR ds:[ebx]
  416f72:	mov    ch,0x11
  416f74:	popf   
  416f75:	inc    edx
  416f76:	and    BYTE PTR [ecx],ch
  416f78:	cmp    BYTE PTR [ecx-0x3fd467d4],cl
  416f7e:	cli    
  416f7f:	sbb    bl,bl
  416f81:	adc    bl,al
  416f83:	das    
  416f84:	inc    ebp
  416f85:	mov    gs,esi
  416f87:	cmp    al,0x7b
  416f89:	aaa    
  416f8a:	mov    ds:0x5b1ea8a3,eax
  416f8f:	adc    edi,DWORD PTR [edx]
  416f91:	sbb    al,0x32
  416f93:	push   ds
  416f94:	call   0xee1f:0xcf1f3ca5
  416f9b:	xlat   BYTE PTR ds:[ebx]
  416f9c:	inc    edi
  416f9d:	int3   
  416f9e:	(bad)
  416fa1:	je     0x416ff7
  416fa3:	pop    esp
  416fa4:	(bad)  [ecx+ebp*4]
  416fa7:	cmp    al,0x70
  416fa9:	mov    dl,0xfb
  416fab:	test   DWORD PTR [eax],eax
  416fad:	jp     0x41700d
  416faf:	fwait
  416fb0:	or     BYTE PTR [eax],bl
  416fb2:	push   ds
  416fb3:	sbb    edi,DWORD PTR [ebx*2+0x3cddb324]
  416fba:	cmp    al,0xc3
  416fbc:	test   BYTE PTR [edi+eiz*4-0x44],cl
  416fc0:	adc    ebx,ebx
  416fc2:	sahf   
  416fc3:	mov    al,ds:0x5093eb0c
  416fc8:	or     BYTE PTR [ebp+edi*1-0x7f719b63],ah
  416fcf:	jnp    0x416f68
  416fd1:	js     0x416fbc
  416fd3:	inc    ecx
  416fd4:	mov    ecx,0x50f4b36a
  416fd9:	dec    ecx
  416fda:	mov    al,ds:0x4dad1d59
  416fdf:	aad    0x1a
  416fe1:	push   eax
  416fe2:	inc    ecx
  416fe3:	je     0x416fa8
  416fe5:	inc    ebx
  416fe6:	cs ins DWORD PTR es:[edi],dx
  416fe8:	sbb    BYTE PTR [edx-0x25],ah
  416feb:	inc    edi
  416fec:	cmp    al,0x8f
  416fee:	xchg   edx,eax
  416fef:	cmp    DWORD PTR [ebx+0x17],ebx
  416ff2:	pop    ebx
  416ff3:	pushf  
  416ff4:	ret    
  416ff5:	push   ebx
  416ff6:	fcom   DWORD PTR [esi+eiz*4-0x4]
  416ffa:	retf   
  416ffb:	and    ecx,esp
  416ffd:	jne    0x41704d
  416fff:	addr16 mov esp,0xe5762671
  417005:	jns    0x416ffb
  417007:	data16 cmp BYTE PTR [esi-0x524a6a9f],bl
  41700e:	outs   dx,BYTE PTR ds:[esi]
  41700f:	pop    eax
  417010:	aas    
  417011:	mov    ebp,0xf1b10060
  417016:	mov    dh,0xbc
  417018:	mov    esi,0xd888d963
  41701d:	shl    bh,1
  41701f:	cs pop ebp
  417021:	or     bh,BYTE PTR [ebx+edi*2]
  417024:	scas   al,BYTE PTR es:[edi]
  417025:	lock and DWORD PTR ds:0x8c08ac9d,ebx
  41702c:	sub    BYTE PTR [esi-0x5abef866],dl
  417032:	test   eax,0xb4fdb2b3
  417037:	mov    ds:0xe40a4786,eax
  41703c:	push   ebx
  41703d:	sub    ah,al
  41703f:	cld    
  417040:	pushf  
  417041:	aaa    
  417042:	jmp    0x9a3e213a
  417047:	loop   0x417087
  417049:	xchg   esp,esi
  41704b:	int3   
  41704c:	cmp    BYTE PTR [esi+eax*1-0x64],dh
  417050:	push   ecx
  417051:	leave  
  417052:	nop
  417053:	mov    cl,0xb9
  417055:	clc    
  417056:	test   al,0x83
  417058:	leave  
  417059:	mul    DWORD PTR [ecx*8-0x2343241b]
  417060:	in     eax,0xc9
  417062:	in     eax,dx
  417063:	repz cmc 
  417065:	out    dx,eax
  417066:	jno    0x4170a4
  417068:	push   esp
  417069:	xchg   ebx,eax
  41706a:	sub    DWORD PTR [ecx+ebp*8],0x659916d9
  417071:	dec    edx
  417072:	xchg   edx,eax
  417073:	out    dx,eax
  417074:	jne    0x41709f
  417076:	ficomp WORD PTR [ebp-0x33]
  417079:	inc    ecx
  41707a:	and    ecx,ecx
  41707c:	(bad)  
  41707d:	mov    bl,BYTE PTR [edx-0x3b]
  417080:	int3   
  417081:	sbb    eax,0xdf994ffe
  417086:	cmc    
  417087:	or     ch,BYTE PTR [eax-0x3]
  41708a:	push   ds
  41708b:	push   ss
  41708c:	sbb    edx,ebp
  41708e:	cs adc ah,bl
  417091:	and    bl,BYTE PTR [ecx]
  417093:	cmp    BYTE PTR [eax],al
  417095:	add    BYTE PTR [eax],al
  417097:	add    dh,al
  417099:	adc    al,0xab
  41709b:	ds jnp 0x4170a4
  41709e:	add    BYTE PTR [eax],al
  4170a0:	add    BYTE PTR [eax],al
  4170a2:	add    BYTE PTR [eax],al
  4170a4:	jnp    0x4170ac
  4170a6:	add    BYTE PTR [eax],al
  4170a8:	or     eax,DWORD PTR [eax]
  4170aa:	es jl  0x4170ad
  4170ad:	add    dh,BYTE PTR [esi]
  4170af:	or     BYTE PTR [eax],al
  4170b1:	add    BYTE PTR [esi-0x1e78ffb6],bl
  4170b7:	or     BYTE PTR [ebx-0x3308e32c],dl
  4170bd:	and    al,0x6e
  4170bf:	scas   eax,DWORD PTR es:[edi]
  4170c0:	repnz push esp
  4170c2:	mov    ebx,0x483860c2
  4170c7:	lahf   
  4170c8:	imul   ebp,DWORD PTR [ecx+0x58],0x1d642300
  4170cf:	fs jnp 0x4170ee
  4170d2:	jl     0x417150
  4170d4:	mov    al,0x7b
  4170d6:	popf   
  4170d7:	test   BYTE PTR [ecx-0x6c],ah
  4170da:	fcomp  DWORD PTR [ebx+edi*2+0x34319476]
  4170e1:	cmp    BYTE PTR [eax+eax*2],bh
  4170e4:	pop    ds
  4170e5:	mov    eax,ecx
  4170e7:	push   esp
  4170e8:	and    bl,BYTE PTR [ecx-0x509edf44]
  4170ee:	in     al,dx
  4170ef:	inc    eax
  4170f0:	dec    eax
  4170f1:	cmp    edi,DWORD PTR [esp+edi*4-0x7c]
  4170f5:	fmul   DWORD PTR [esi+edx*2-0x7b6353ec]
  4170fc:	pop    ebx
  4170fd:	mov    edx,0x78a483c8
  417102:	out    0x3,eax
  417104:	or     BYTE PTR [edi+0x50],cl
  417107:	pop    es
  417108:	push   cs
  417109:	or     esp,DWORD PTR [eax-0x25]
  41710c:	out    dx,eax
  41710d:	cmp    dh,BYTE PTR [ebx]
  41710f:	inc    cx
  417111:	inc    ecx
  417112:	pusha  
  417113:	add    al,0xd3
  417115:	iret   
  417116:	nop
  417117:	loopne 0x4170a2
  417119:	hlt    
  41711a:	inc    esp
  41711b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41711c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41711d:	les    ecx,FWORD PTR [edi-0x5f]
  417120:	mov    eax,0xca4d8ebc
  417125:	call   0xde0a35fe
  41712a:	loopne 0x417120
  41712c:	push   edx
  41712d:	fdivr  QWORD PTR [ebx+edi*1]
  417130:	jl     0x4170e5
  417132:	jb     0x4170bc
  417134:	or     eax,0xde0c947a
  417139:	mov    al,ds:0x94fe0c29
  41713e:	mov    ch,0xde
  417140:	add    eax,0x74ccc4a8
  417145:	rol    ah,cl
  417147:	inc    ebx
  417148:	fucom  st(1)
  41714a:	jmp    0x4171b7
  41714c:	adc    eax,0x77cc86f4
  417151:	sbb    al,0xa4
  417153:	or     dh,BYTE PTR [edi]
  417155:	or     BYTE PTR [ecx+0x10],ah
  417158:	test   al,0x1b
  41715a:	shr    BYTE PTR [eax-0x124644f1],0xc0
  417161:	dec    eax
  417162:	retf   
  417163:	lahf   
  417164:	fisubr DWORD PTR [ebx-0x4d]
  417167:	sub    cl,BYTE PTR [eax-0xe9509dd]
  41716d:	xchg   esp,eax
  41716e:	stc    
  41716f:	cld    
  417170:	adc    ch,BYTE PTR [edx+ecx*4]
  417173:	push   esi
  417174:	inc    ebp
  417175:	lahf   
  417176:	hlt    
  417177:	sbb    al,0xab
  417179:	popa   
  41717a:	cmp    BYTE PTR [edi+0x6ed014dc],ch
  417180:	inc    eax
  417181:	xor    esi,DWORD PTR [ebx]
  417183:	das    
  417184:	push   ecx
  417185:	sbb    bl,dl
  417187:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  417189:	call   0xaf36627c
  41718e:	stos   DWORD PTR es:[edi],eax
  41718f:	mov    edi,DWORD PTR [ecx]
  417191:	jo     0x4171bf
  417193:	loopne 0x4171e9
  417195:	sbb    BYTE PTR [eax+eiz*1+0x24],dh
  417199:	push   cs
  41719a:	jl     0x41712d
  41719c:	xor    al,0xc
  41719e:	add    ax,WORD PTR [eax+ebx*1-0x4d]
  4171a3:	xchg   edi,ebx
  4171a5:	dec    edx
  4171a6:	push   ecx
  4171a7:	popa   
  4171a8:	pusha  
  4171a9:	add    al,al
  4171ab:	hlt    
  4171ac:	call   0x8d07247
  4171b1:	cld    
  4171b2:	inc    ecx
  4171b3:	popf   
  4171b4:	ins    DWORD PTR es:[edi],dx
  4171b5:	cld    
  4171b6:	fcomip st,st(3)
  4171b8:	mov    eax,ds:0xb8c07508
  4171bd:	les    esi,FWORD PTR es:[eax+ecx*2+0x50a2d558]
  4171c5:	push   ebx
  4171c6:	in     al,0xa9
  4171c8:	call   0x60636d3c
  4171cd:	mul    DWORD PTR [eax+0x2e01db86]
  4171d3:	adc    al,0x9c
  4171d5:	sbb    al,0xad
  4171d7:	ins    DWORD PTR es:[edi],dx
  4171d8:	call   0x747b01a5
  4171dd:	xchg   DWORD PTR [ecx],eax
  4171df:	mov    eax,0x4d55144d
  4171e4:	dec    esi
  4171e5:	adc    al,0xe4
  4171e7:	outs   dx,DWORD PTR ds:[esi]
  4171e8:	xchg   DWORD PTR [ebp-0x10],edi
  4171eb:	maskmovq mm3,mm5
  4171ee:	ins    BYTE PTR es:[edi],dx
  4171ef:	add    BYTE PTR [edi],0xe5
  4171f2:	je     0x41720e
  4171f4:	scas   eax,DWORD PTR es:[edi]
  4171f5:	retf   0xfea4
  4171f8:	inc    esp
  4171f9:	mov    ah,0x99
  4171fb:	sar    BYTE PTR [ebp+ecx*2+0x4cb88d8b],cl
  417202:	rcr    BYTE PTR [edi+eiz*2-0x11],1
  417206:	sub    eax,0xb9bffb64
  41720b:	xchg   ebp,eax
  41720c:	adc    BYTE PTR [ebx+eax*1-0x6434e7a1],0x14
  417214:	out    dx,eax
  417215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417216:	test   eax,0x7940fd27
  41721b:	push   esi
  41721c:	enter  0xc994,0x4c
  417220:	xchg   BYTE PTR [edi+0x6de28b50],dl
  417226:	xor    DWORD PTR [eax+0x77ec9074],ebx
  41722c:	jnp    0x4172a5
  41722e:	pop    es
  41722f:	pusha  
  417230:	pop    ss
  417231:	mov    esp,0x94a4b058
  417236:	sub    DWORD PTR [eax+0x34e184b5],ebx
  41723c:	dec    esp
  41723d:	inc    ebx
  41723e:	dec    edi
  41723f:	rcl    ah,0xdc
  417242:	xor    al,0x65
  417244:	push   ds
  417245:	jmp    0xe3c352d4
  41724a:	ja     0x4171d7
  41724c:	add    eax,0x9445870f
  417251:	fmul   st(3),st
  417253:	ins    DWORD PTR es:[edi],dx
  417254:	shl    BYTE PTR [edi],0x31
  417257:	cmp    al,0x38
  417259:	jmp    FWORD PTR [edx-0x7c61333c]
  41725f:	sub    ecx,DWORD PTR [eax]
  417261:	pop    edi
  417262:	and    al,0xe8
  417264:	pop    esp
  417265:	add    BYTE PTR [di-0xb],dh
  417269:	or     eax,0xcb24c1
  41726e:	inc    ecx
  41726f:	xlat   BYTE PTR ds:[ebx]
  417270:	adc    al,0xa
  417272:	cmp    bh,ah
  417274:	and    al,0x2d
  417276:	cmp    al,0xa5
  417278:	cmp    ecx,esp
  41727a:	xchg   ebx,eax
  41727b:	fwait
  41727c:	xor    ebx,edx
  41727e:	push   es
  41727f:	(bad)  
  417281:	and    dh,ah
  417283:	lds    ecx,FWORD PTR [edi*2-0x7f42fb4f]
  41728a:	es cld 
  41728c:	pop    edi
  41728d:	xlat   BYTE PTR ds:[ebx]
  41728e:	push   ecx
  41728f:	in     al,0x9d
  417291:	sbb    esp,ecx
  417293:	jl     0x4172ad
  417295:	(bad)
  417298:	xor    al,0x81
  41729a:	dec    esp
  41729b:	xlat   BYTE PTR ds:[ebx]
  41729c:	lea    ebx,[eax+0x19]
  41729f:	fsub   DWORD PTR [eax+0x18bbbb31]
  4172a5:	enter  0x7e8e,0x2
  4172a9:	xchg   ebp,eax
  4172aa:	mov    BYTE PTR [ebx],al
  4172ac:	xlat   BYTE PTR ds:[ebx]
  4172ad:	push   ecx
  4172ae:	hlt    
  4172af:	sbb    eax,0x6c2bcf62
  4172b4:	aas    
  4172b5:	xor    eax,0x11cd0d38
  4172ba:	mov    ah,0x1e
  4172bc:	add    eax,DWORD PTR ds:0x39eb1c0b
  4172c2:	pusha  
  4172c3:	test   BYTE PTR [eax],bl
  4172c5:	mov    WORD PTR [esi-0x13790ab3],?
  4172cb:	mov    WORD PTR [edi],ds
  4172cd:	sub    ecx,esi
  4172cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172d0:	in     eax,dx
  4172d1:	pop    esp
  4172d2:	cmp    DWORD PTR [ecx],esi
  4172d4:	mov    ah,0x7d
  4172d6:	mov    bh,0x87
  4172d8:	outs   dx,DWORD PTR ds:[esi]
  4172d9:	mov    edi,0x5c525cc6
  4172de:	ins    BYTE PTR es:[edi],dx
  4172df:	push   0x302e6d64
  4172e4:	dec    edi
  4172e5:	test   eax,0x376800e
  4172ea:	leave  
  4172eb:	jl     0x4172c1
  4172ed:	adc    ecx,ebx
  4172ef:	dec    esp
  4172f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172f1:	xchg   ebp,eax
  4172f2:	lods   al,BYTE PTR ds:[esi]
  4172f3:	mov    ah,0xb4
  4172f5:	cmp    al,0x3c
  4172f7:	bnd jnp 0x417348
  4172fa:	nop
  4172fb:	push   esp
  4172fc:	push   edx
  4172fd:	inc    edx
  4172fe:	jecxz  0x417319
  417300:	nop
  417301:	ins    BYTE PTR es:[edi],dx
  417302:	add    al,0x74
  417304:	pop    edx
  417305:	div    ebp
  417307:	je     0x41730b
  417309:	cwde   
  41730a:	test   al,0x1f
  41730c:	cwde   
  41730d:	shl    DWORD PTR [ebx+ebx*2-0x5fc7ab1b],0xa6
  417315:	mov    esp,0xb9418486
  41731a:	and    bh,ch
  41731c:	sbb    DWORD PTR [esi+0x772d8a26],ebp
  417322:	jnp    0x417321
  417324:	jmp    0xc9d177a7
  417329:	nop
  41732a:	fs adc edx,ecx
  41732d:	mov    eax,0x469fa92d
  417332:	cmp    eax,0x30959cf9
  417337:	dec    edx
  417338:	mov    ecx,0x1c5ce95b
  41733d:	cdq    
  41733e:	loopne 0x4172fa
  417340:	xchg   BYTE PTR [edi],dh
  417342:	sub    DWORD PTR [ebx-0x8aaff6a],0xffffff90
  417349:	inc    ebx
  41734a:	ret    
  41734b:	ret    
  41734c:	sub    esp,DWORD PTR [edx-0xa]
  41734f:	daa    
  417350:	push   ebp
  417351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417352:	in     eax,0x7f
  417354:	dec    ebx
  417355:	ror    DWORD PTR [edx-0x752b454d],1
  41735b:	sbb    BYTE PTR [edi],bl
  41735d:	icebp  
  41735e:	imul   esp,esi,0xbcf54caf
  417364:	xor    DWORD PTR [esi-0x1d6a23f2],eax
  41736a:	ins    BYTE PTR es:[edi],dx
  41736b:	adc    esp,DWORD PTR [edx]
  41736d:	xor    eax,0xf53fad7e
  417372:	mov    ebx,0xc0b07c3
  417377:	inc    edi
  417378:	push   edi
  417379:	xor    al,0xf8
  41737b:	inc    ecx
  41737c:	loopne 0x417396
  41737e:	ins    BYTE PTR es:[edi],dx
  41737f:	mov    dl,0xf4
  417381:	retf   
  417382:	cmp    DWORD PTR [ecx+0x654cf441],ecx
  417388:	adc    eax,0xdeabd498
  41738d:	mov    ds:0xb1edbb1b,eax
  417392:	mov    esp,0x9c1a01d
  417397:	mov    eax,0xdb6031bc
  41739c:	in     eax,dx
  41739d:	in     eax,dx
  41739e:	outs   dx,BYTE PTR ds:[esi]
  41739f:	or     edi,DWORD PTR [ecx-0x74ffb04f]
  4173a5:	cmc    
  4173a6:	adc    DWORD PTR [edi+edx*1-0x70],ebx
  4173aa:	into   
  4173ab:	in     al,0x2a
  4173ad:	lods   eax,DWORD PTR ds:[esi]
  4173ae:	leave  
  4173af:	jne    0x41741f
  4173b1:	xor    eax,DWORD PTR [ebx+ecx*8-0x56]
  4173b5:	lea    edx,[ebp+0x11]
  4173b8:	push   esp
  4173b9:	outs   dx,DWORD PTR ds:[esi]
  4173ba:	mov    dl,0x93
  4173bc:	sub    BYTE PTR [ebp-0x688590b],bl
  4173c2:	push   ebx
  4173c3:	add    al,0xf
  4173c5:	out    0x34,al
  4173c7:	fstp   DWORD PTR [edi]
  4173c9:	das    
  4173ca:	mov    eax,ds:0x3b35ede2
  4173cf:	mov    ch,0x3c
  4173d1:	dec    esp
  4173d2:	or     eax,0xdf55ad89
  4173d7:	shl    DWORD PTR [eax],1
  4173d9:	and    esp,DWORD PTR [edi+ecx*4]
  4173dc:	sub    al,0x33
  4173de:	push   ebx
  4173df:	cmc    
  4173e0:	jmp    0x4173ea
  4173e2:	inc    esp
  4173e3:	(bad)  
  4173e4:	fiadd  WORD PTR [eax-0x86ba0e9]
  4173ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173eb:	rol    BYTE PTR [esp+eiz*2+0x6b],0x3c
  4173f0:	mov    edi,0x4488cb95
  4173f5:	or     eax,DWORD PTR [esi]
  4173f7:	pop    es
  4173f8:	push   ecx
  4173f9:	gs mov eax,ds:0x1e781a98
  417400:	and    DWORD PTR [edi-0x676f0ef5],edx
  417406:	cwde   
  417407:	call   0x2798a3e4
  41740c:	mov    bh,0x94
  41740e:	xor    eax,0x4f4980b0
  417413:	lods   eax,DWORD PTR ds:[esi]
  417414:	(bad)  
  417415:	test   cl,dl
  417417:	test   BYTE PTR [ecx],dh
  417419:	test   BYTE PTR ds:0x3c28f579,ch
  41741f:	mov    DWORD PTR [eax],eax
  417421:	int3   
  417422:	ins    BYTE PTR es:[edi],dx
  417423:	rcl    DWORD PTR [ebx+esi*8-0x295f185b],1
  41742a:	xchg   edx,eax
  41742b:	cmp    esp,ecx
  41742d:	mov    eax,0x4117eb54
  417432:	cdq    
  417433:	xor    BYTE PTR [ecx-0x53],bl
  417436:	fmul   DWORD PTR [esi+ebx*2]
  417439:	or     cl,bh
  41743b:	pandn  mm1,QWORD PTR [ebx]
  41743e:	xlat   BYTE PTR ds:[ebx]
  41743f:	xlat   BYTE PTR ds:[ebx]
  417440:	mov    BYTE PTR [ecx],al
  417442:	fistp  WORD PTR [ebx+edx*1+0x74f1295f]
  417449:	lods   al,BYTE PTR ds:[esi]
  41744a:	cmp    esp,DWORD PTR [eax+0x4fd18fbe]
  417450:	rol    BYTE PTR [ebp-0x2e],1
  417453:	int    0x38
  417455:	imul   BYTE PTR [ecx-0x10]
  417458:	jmp    0x4174c1
  41745a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41745b:	sub    al,bl
  41745d:	jg     0x417420
  41745f:	add    BYTE PTR [ebx],cl
  417461:	fnsave [eax+0x61]
  417464:	and    ecx,DWORD PTR [ebx+0x20]
  417467:	and    BYTE PTR [ecx+edx*2+0x3f],dl
  41746b:	in     eax,0x58
  41746d:	dec    ebx
  41746e:	or     eax,0xffffffc8
  417471:	rcl    DWORD PTR [ecx-0x32c720d0],1
  417477:	lods   eax,DWORD PTR ds:[esi]
  417478:	fdivp  st(4),st
  41747a:	je     0x417462
  41747c:	mov    DWORD PTR [edx+0x20f6786],ecx
  417482:	leave  
  417483:	pop    edx
  417484:	add    eax,0x3c903623
  417489:	mov    bl,0x72
  41748b:	js     0x4174cc
  41748d:	lea    ebx,[edi]
  41748f:	mov    al,ds:0xde7c9762
  417494:	add    ebx,eax
  417496:	or     ecx,ecx
  417498:	or     BYTE PTR ds:0xaf3f14dd,dl
  41749e:	or     BYTE PTR [edx+0x31],dl
  4174a1:	xor    eax,ecx
  4174a3:	xor    al,0x5
  4174a5:	fwait
  4174a6:	add    BYTE PTR [ecx],cl
  4174a8:	adc    ebp,0x3a
  4174ab:	outs   dx,BYTE PTR ds:[esi]
  4174ac:	xor    eax,0x96c76d64
  4174b1:	aaa    
  4174b2:	jge    0x4174b2
  4174b4:	add    eax,0x516df141
  4174b9:	ja     0x41752a
  4174bb:	icebp  
  4174bc:	adc    BYTE PTR [edx-0x33],bl
  4174bf:	repnz adc DWORD PTR [eax],edx
  4174c2:	xchg   edi,eax
  4174c3:	mov    dl,0x4c
  4174c5:	dec    ecx
  4174c6:	or     edx,esp
  4174c8:	inc    eax
  4174c9:	and    esi,DWORD PTR [ecx+0x52a9cbca]
  4174cf:	add    DWORD PTR [eax],esi
  4174d1:	jge    0x417527
  4174d3:	xor    esi,DWORD PTR [ecx+ecx*4]
  4174d6:	xor    bl,dh
  4174d8:	adc    eax,0xe5bb1e5d
  4174dd:	add    eax,0xd90498fb
  4174e2:	shl    BYTE PTR [eax+0x79bb3dda],1
  4174e8:	xor    BYTE PTR [edi+0x7d404c54],dh
  4174ee:	inc    esp
  4174ef:	push   edx
  4174f0:	cmp    DWORD PTR [esi+0x27],eax
  4174f3:	pusha  
  4174f4:	adc    al,0x83
  4174f6:	jecxz  0x4174b5
  4174f8:	pop    esi
  4174f9:	sbb    eax,0xccc415a6
  4174fe:	call   0xc8a1:0xc47ecec7
  417505:	mov    al,BYTE PTR [edx+0x4dae9ed5]
  41750b:	mov    al,ds:0xd3f4ccec
  417510:	push   eax
  417511:	js     0x417500
  417513:	fs test eax,0x5c9a8676
  417519:	mov    BYTE PTR [ebx+eax*1-0x2a4a4fbc],cl
  417520:	nop
  417521:	aad    0x7
  417523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417524:	outs   dx,BYTE PTR ds:[esi]
  417525:	nop
  417526:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417528:	push   ds
  417529:	into   
  41752a:	lea    ebx,es:[ebp-0x121c6b8f]
  417531:	popa   
  417532:	in     eax,dx
  417533:	arpl   cx,bx
  417535:	mov    ah,0x14
  417537:	clc    
  417538:	loope  0x4174fc
  41753a:	push   esi
  41753b:	fs adc al,0xd1
  41753e:	outs   dx,BYTE PTR ds:[esi]
  41753f:	(bad)  
  417540:	shl    edx,cl
  417542:	and    edi,ecx
  417544:	dec    esp
  417545:	xor    BYTE PTR [esi+0x45d2c1bd],ch
  41754b:	clc    
  41754c:	mov    eax,DWORD PTR [esi+0x4ce53a19]
  417552:	arpl   WORD PTR [edx-0x48],sp
  417555:	push   esp
  417556:	imul   DWORD PTR [ecx+eax*1+0x148c1839]
  41755d:	add    al,0x39
  41755f:	xchg   edi,eax
  417560:	mov    dh,0xe8
  417562:	dec    esp
  417563:	mov    cl,0x3d
  417565:	out    dx,eax
  417566:	mov    eax,0xf7d74dc0
  41756b:	add    BYTE PTR [edx-0x1b97a938],ch
  417571:	and    BYTE PTR [edi-0x4e],bh
  417574:	hlt    
  417575:	jo     0x417527
  417577:	pop    es
  417578:	or     al,0xea
  41757a:	dec    esp
  41757b:	xchg   ecx,eax
  41757c:	add    al,0xe8
  41757e:	das    
  41757f:	loopne 0x417525
  417581:	imul   ebp,DWORD PTR [ecx],0x8d13d664
  417587:	shr    BYTE PTR [edi-0x70],0x38
  41758b:	ss clc 
  41758d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41758e:	popa   
  41758f:	iret   
  417590:	xchg   edx,eax
  417591:	in     eax,dx
  417592:	jbe    0x41756d
  417594:	jl     0x41756d
  417596:	imul   esp,DWORD PTR [ecx+ecx*1-0x77],0x1ef9493b
  41759e:	addr16 sub al,0x81
  4175a1:	ins    BYTE PTR es:[edi],dx
  4175a2:	xor    al,0xbc
  4175a4:	push   0x7c
  4175a6:	inc    ecx
  4175a7:	jns    0x417594
  4175a9:	dec    esi
  4175aa:	pop    ss
  4175ab:	adc    al,0x59
  4175ad:	fld    DWORD PTR [edx+0x48]
  4175b0:	push   esi
  4175b1:	ins    BYTE PTR es:[edi],dx
  4175b2:	jno    0x417603
  4175b4:	cmp    eax,0x2f284e75
  4175b9:	push   esp
  4175ba:	adc    BYTE PTR [eax+0x3c],bl
  4175bd:	out    0xaf,eax
  4175bf:	cwde   
  4175c0:	pop    esp
  4175c1:	xchg   ecx,eax
  4175c2:	sbb    dh,cl
  4175c4:	xor    BYTE PTR [esp+edi*2],dh
  4175c7:	sub    BYTE PTR [ebx],bl
  4175c9:	push   eax
  4175ca:	and    eax,0x7cf7d169
  4175cf:	imul   ebp,DWORD PTR [esp+esi*2],0x8c2bf326
  4175d6:	(bad)  
  4175d7:	add    eax,0xca809cdb
  4175dc:	pop    ebp
  4175dd:	jge    0x41758b
  4175df:	add    ah,dh
  4175e1:	mov    bh,0xfc
  4175e3:	and    al,0x47
  4175e5:	gs inc edi
  4175e7:	int    0xf0
  4175e9:	push   edi
  4175ea:	add    eax,0x3ded642b
  4175ef:	pusha  
  4175f0:	loope  0x417627
  4175f2:	sub    al,0x73
  4175f4:	add    al,0x64
  4175f6:	test   eax,0xb89cd7bb
  4175fb:	mov    fs,WORD PTR [ecx+0x33c7a304]
  417601:	retf   
  417602:	mov    ah,0xbc
  417604:	mov    ch,0xdb
  417606:	dec    esp
  417607:	shr    DWORD PTR [ebx],cl
  417609:	dec    eax
  41760a:	pop    esp
  41760b:	push   ds
  41760c:	push   ebp
  41760d:	rol    DWORD PTR [eax-0xed76b8f],1
  417613:	(bad)  
  417614:	nop
  417615:	mov    ds:0x98946e43,eax
  41761a:	jmp    0xb8675aa2
  41761f:	mov    cl,0x8f
  417621:	out    dx,eax
  417622:	mov    esp,0x273bb8d0
  417627:	enter  0x9959,0x23
  41762b:	rcr    bh,0xaf
  41762e:	cld    
  41762f:	mov    WORD PTR [eax-0x63],gs
  417632:	scas   eax,DWORD PTR es:[edi]
  417633:	jp     0x417601
  417635:	lods   al,BYTE PTR ds:[esi]
  417636:	xchg   edi,eax
  417637:	sub    ch,0x9a
  41763a:	call   0x45131f83
  41763f:	mov    eax,ds:0xa54faff8
  417644:	fcomp  DWORD PTR [ebp+0x4b55c0f0]
  41764a:	je     0x41763b
  41764c:	sub    DWORD PTR [eax-0x62971e0f],ecx
  417652:	aaa    
  417653:	mov    DWORD PTR [edi+0x18],eax
  417656:	inc    ecx
  417657:	xchg   ebp,eax
  417658:	mov    ebp,0xeb21df97
  41765d:	mov    eax,0xc1bcbc5f
  417662:	inc    esi
  417663:	repnz ins BYTE PTR es:[edi],dx
  417665:	fsubp  st(5),st
  417667:	xchg   ebp,eax
  417668:	rcl    BYTE PTR [edx-0xf53b52a],1
  41766e:	call   0x2f4a1fe6
  417673:	fild   DWORD PTR [edi+0x3d1f16a4]
  417679:	daa    
  41767a:	test   eax,0x33424
  41767f:	xor    dl,ch
  417681:	mov    al,ds:0x55e145f2
  417686:	repnz xor eax,0xb0cbdfc3
  41768c:	push   eax
  41768d:	repz retf 0x40df
  417691:	adc    al,BYTE PTR [edx+0x78113280]
  417697:	add    BYTE PTR [edx],dl
  417699:	sub    al,0x20
  41769b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41769c:	cmp    ecx,DWORD PTR [ebp+0xb41a3b9]
  4176a2:	inc    eax
  4176a3:	dec    edi
  4176a4:	fcom   DWORD PTR [ebp+0x5be0855b]
  4176aa:	loope  0x4176d5
  4176ac:	cld    
  4176ad:	sbb    ah,bh
  4176af:	cld    
  4176b0:	sub    DWORD PTR [eax],0x58dc088c
  4176b6:	mov    edi,0xcc282360
  4176bb:	add    esi,esp
  4176bd:	addr16 jl 0x417673
  4176c0:	iret   
  4176c1:	mov    al,0xa4
  4176c3:	adc    ah,BYTE PTR [eax+0x4def6fbb]
  4176c9:	leave  
  4176ca:	arpl   WORD PTR [edi+ebp*1-0x67],ax
  4176ce:	inc    edx
  4176cf:	push   es
  4176d0:	data16 mov ah,0xcb
  4176d3:	xor    dh,0x27
  4176d6:	and    ah,BYTE PTR ds:0x776f2556
  4176dc:	xor    BYTE PTR [esi+edx*8-0x24bf7ff7],bh
  4176e3:	ret    0x1ed9
  4176e6:	in     eax,dx
  4176e7:	jecxz  0x417752
  4176e9:	jb     0x4176dc
  4176eb:	mov    dl,0xcb
  4176ed:	cmp    al,0x14
  4176ef:	test   BYTE PTR [edi+edi*4+0x1cbaa459],dl
  4176f6:	mov    ah,0xe9
  4176f8:	sbb    eax,0x8bb0b0af
  4176fd:	jl     0x4176cc
  4176ff:	push   edi
  417700:	lds    ebx,FWORD PTR [edi]
  417702:	pop    esp
  417703:	pop    eax
  417704:	aad    0x2f
  417706:	push   0xa742351
  41770b:	push   0x2aa107d
  417710:	cwde   
  417711:	cwde   
  417712:	sbb    al,0xcc
  417714:	fwait
  417715:	mov    ah,0xa5
  417717:	imul   ecx,DWORD PTR [esi+0x3060b33b],0x0
  41771e:	add    BYTE PTR [eax],al
  417720:	adc    DWORD PTR [edi],0x50f46dc
  417726:	add    BYTE PTR [eax],al
  417728:	add    BYTE PTR [eax],al
  41772a:	add    BYTE PTR [eax],al
  41772c:	syscall 
  41772e:	add    BYTE PTR [eax],al
  417730:	or     al,0x0
  417732:	es jl  0x417735
  417735:	add    dh,BYTE PTR [esi]
  417737:	or     BYTE PTR [eax],al
  417739:	add    BYTE PTR [edx],al
  41773b:	dec    eax
  41773c:	add    BYTE PTR [ecx-0x6c62b3fc],cl
  417742:	add    BYTE PTR ds:0x7c282420,bl
  417748:	mov    ebp,0x403caca3
  41774d:	inc    esp
  41774e:	dec    eax
  41774f:	lea    esi,[ecx+0x2cddd351]
  417755:	pop    eax
  417756:	sub    ebp,DWORD PTR [eax+esi*2+0x26]
  41775a:	sti    
  41775b:	mov    ebx,0x5c77d394
  417760:	nop
  417761:	pop    ss
  417762:	pop    esp
  417763:	nop
  417764:	jnp    0x4177dc
  417766:	jno    0x41775b
  417768:	clc    
  417769:	cmp    DWORD PTR [edi],edi
  41776b:	inc    eax
  41776c:	adc    ebx,eax
  41776e:	mov    al,ds:0xdab00306
  417773:	pusha  
  417774:	nop
  417775:	xchg   edi,eax
  417776:	xchg   ebx,eax
  417777:	sti    
  417778:	or     DWORD PTR [eax-0x9],esi
  41777b:	jo     0x417701
  41777d:	add    DWORD PTR [ebx+0x636b1e78],ecx
  417783:	pop    edi
  417784:	and    DWORD PTR [eax+0xf6c56c],ebp
  41778a:	push   esp
  41778b:	push   esi
  41778c:	xchg   BYTE PTR [eax+edx*2-0x44],cl
  417790:	fs test eax,0x2be19b9f
  417796:	je     0x4177c8
  417798:	nop
  417799:	cwde   
  41779a:	sub    DWORD PTR [esi-0x6bef1b5c],0x3c
  4177a1:	adc    DWORD PTR [eax-0x4f395f1d],esp
  4177a7:	in     al,0x50
  4177a9:	mov    WORD PTR [ebx-0x2f3337c0],fs
  4177af:	dec    esi
  4177b0:	push   ebp
  4177b1:	pop    ebx
  4177b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177b3:	imul   al
  4177b5:	ss je  0x41773f
  4177b8:	imul   eax,DWORD PTR [eax+0x578cc875],0xa0dc9a13
  4177c2:	test   al,0x2f
  4177c4:	cli    
  4177c5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c7:	mov    edi,DWORD PTR [ebx+eax*8-0x3b]
  4177cb:	scas   al,BYTE PTR es:[edi]
  4177cc:	int3   
  4177cd:	(bad)  
  4177ce:	push   edi
  4177cf:	cmp    al,0x24
  4177d1:	popa   
  4177d2:	or     ah,cl
  4177d4:	in     eax,dx
  4177d5:	lock fs pop ecx
  4177d8:	clc    
  4177d9:	lock inc esi
  4177db:	or     BYTE PTR [edi],bh
  4177dd:	aam    0x4
  4177df:	xchg   ecx,eax
  4177e0:	and    al,0x80
  4177e2:	mov    BYTE PTR [ebp+edi*4+0x40b4fd3f],ch
  4177e9:	xchg   edi,eax
  4177ea:	sahf   
  4177eb:	inc    edi
  4177ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ed:	les    ecx,FWORD PTR [edi-0x57361e9d]
  4177f3:	gs mov ah,0xd0
  4177f6:	in     al,dx
  4177f7:	lds    edi,FWORD PTR [esi-0x4787ccfb]
  4177fd:	pop    es
  4177fe:	xchg   ebp,eax
  4177ff:	xchg   edx,eax
  417800:	and    DWORD PTR [ecx+edi*2+0x2f],esi
  417804:	pusha  
  417805:	mov    ebp,0x4544283a
  41780a:	push   edx
  41780b:	rol    esi,1
  41780d:	mov    edx,DWORD PTR [ebp-0x44]
  417810:	sar    ah,0xe4
  417813:	psraw  mm5,mm0
  417816:	cld    
  417817:	push   ss
  417818:	(bad)  
  417819:	dec    esi
  41781a:	or     al,bh
  41781c:	push   ss
  41781d:	dec    eax
  41781e:	sbb    al,0xb3
  417820:	scas   eax,DWORD PTR es:[edi]
  417821:	shr    BYTE PTR [ecx+0x3a1240cf],1
  417827:	rol    DWORD PTR [esi+0x6c],0x4d
  41782b:	pop    ss
  41782c:	and    DWORD PTR [edi+0xf],ebx
  41782f:	lahf   
  417830:	jno    0x41789c
  417832:	clc    
  417833:	cmc    
  417834:	call   0x539bd774
  417839:	xchg   DWORD PTR [ebp+edx*2-0x17ecd6e6],ebx
  417840:	ror    BYTE PTR [edx],0xe
  417843:	mov    ah,0x0
  417845:	fld    DWORD PTR [eax+0x19]
  417848:	mov    eax,edi
  41784a:	push   es
  41784b:	push   eax
  41784c:	xor    ecx,DWORD PTR [esi-0x191c9bf8]
  417852:	hlt    
  417853:	cmp    al,0x3b
  417855:	jl     0x417864
  417857:	ror    BYTE PTR [eax-0x1c3b7758],0xf1
  41785e:	scas   eax,DWORD PTR es:[edi]
  41785f:	shr    BYTE PTR [edi-0x46c30f90],1
  417865:	mov    edi,0x79ccf231
  41786a:	aas    
  41786b:	js     0x417809
  41786d:	or     bh,ch
  41786f:	clc    
  417870:	push   esp
  417871:	lock jns 0x41789e
  417874:	test   DWORD PTR [esp+edx*1-0x157e7300],0x80ec1190
  41787f:	sub    BYTE PTR [eax+0x6e47e5e7],dh
  417885:	iret   
  417886:	nop
  417887:	int3   
  417888:	and    eax,0x1487dd44
  41788d:	dec    edx
  41788e:	pusha  
  41788f:	pop    edx
  417890:	jnp    0x417891
  417892:	cmp    al,0x50
  417894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417895:	xchg   esp,eax
  417896:	or     al,dh
  417898:	xchg   edx,eax
  417899:	lods   al,BYTE PTR ds:[esi]
  41789a:	pop    ebx
  41789b:	xchg   esi,eax
  41789c:	cwde   
  41789d:	adc    DWORD PTR [ebp-0x9734b53],edx
  4178a3:	mov    eax,0xa7c4914b
  4178a8:	sbb    DWORD PTR [esi-0x50],edx
  4178ab:	fdivr  st(5),st
  4178ad:	lock ds and bh,bh
  4178b1:	stc    
  4178b2:	jle    0x41785f
  4178b4:	(bad)  
  4178b5:	fsubr  QWORD PTR [eax+0x4c67c6b0]
  4178bb:	mov    bl,0x8d
  4178bd:	in     al,0xc0
  4178bf:	xchg   esp,eax
  4178c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178c1:	cmp    cl,al
  4178c3:	shr    ch,1
  4178c5:	stos   BYTE PTR es:[edi],al
  4178c6:	leave  
  4178c7:	stc    
  4178c8:	push   eax
  4178c9:	mov    ecx,0x8960d550
  4178ce:	mov    ebx,0xfcf096f4
  4178d3:	test   DWORD PTR [edi],ecx
  4178d5:	sub    eax,0x8cac3458
  4178da:	bnd ss jmp 0x417899
  4178de:	xor    al,0xa6
  4178e0:	ins    DWORD PTR es:[edi],dx
  4178e1:	mov    cs,WORD PTR [eax+eiz*8-0x32]
  4178e5:	loopne 0x4178b7
  4178e7:	ficomp WORD PTR [eax-0x30]
  4178ea:	shr    DWORD PTR [eax],cl
  4178ec:	fld    TBYTE PTR [eax+ebx*1]
  4178ef:	clc    
  4178f0:	adc    eax,eax
  4178f2:	inc    ebx
  4178f3:	bswap  ebx
  4178f5:	xchg   DWORD PTR [ecx+0x47],eax
  4178f8:	dec    esi
  4178f9:	dec    ebx
  4178fa:	inc    ebp
  4178fb:	and    al,0xa3
  4178fd:	xchg   edx,eax
  4178fe:	jno    0x417939
  417900:	add    DWORD PTR [edi+0x40],esi
  417903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417904:	add    eax,0xde115d50
  417909:	in     eax,0x69
  41790b:	ja     0x41797c
  41790d:	pushf  
  41790e:	test   eax,0x446cb804
  417913:	cdq    
  417914:	or     BYTE PTR [esi-0x2f8fa71b],cl
  41791a:	mov    eax,ds:0xf02c58de
  41791f:	mov    ecx,0x17280e83
  417924:	(bad)  
  417925:	xchg   esi,eax
  417926:	aam    0x70
  417928:	popf   
  417929:	push   edi
  41792a:	loopne 0x417907
  41792c:	sbb    cl,dh
  41792e:	cld    
  41792f:	div    BYTE PTR [ebp-0x2d]
  417932:	add    DWORD PTR [ebx+0x38],0x10
  417936:	xchg   ebx,eax
  417937:	sbb    esp,DWORD PTR [ecx+0x55adb96b]
  41793d:	mov    ecx,0x85003c3c
  417942:	test   al,0x49
  417944:	fstp   QWORD PTR [ecx]
  417946:	push   eax
  417947:	aad    0x0
  417949:	xor    DWORD PTR [eax-0x19],esp
  41794c:	loopne 0x417976
  41794e:	cmp    cl,cl
  417950:	shl    edx,0x78
  417953:	lods   eax,DWORD PTR ds:[esi]
  417954:	adc    eax,0x8f55ea68
  417959:	mov    ds:0xb52b352c,eax
  41795e:	mov    esp,0x1d1a4c0f
  417963:	fst    st(3)
  417965:	rcr    BYTE PTR [ecx+ecx*8+0x1d843954],1
  41796c:	mov    BYTE PTR [ecx+0x7eddc16d],bh
  417972:	clc    
  417973:	push   edx
  417974:	mov    edx,DWORD PTR [eax-0x80]
  417977:	stos   BYTE PTR es:[edi],al
  417978:	das    
  417979:	in     eax,dx
  41797a:	push   eax
  41797b:	je     0x41790b
  41797d:	mov    edx,0x4bc24d5d
  417982:	sbb    eax,0x3f3c9ca8
  417987:	cmp    bl,BYTE PTR [ebx-0x54]
  41798a:	lahf   
  41798b:	idiv   BYTE PTR [edi-0x46]
  41798e:	dec    ebx
  41798f:	int3   
  417990:	and    eax,0x11123cca
  417995:	mov    ds:0xa82b08e3,eax
  41799a:	cwde   
  41799b:	cmp    eax,0xfb44acfd
  4179a0:	xchg   ebp,eax
  4179a1:	lea    ebp,[edx+0x294c53db]
  4179a7:	pusha  
  4179a8:	aas    
  4179a9:	sbb    dh,BYTE PTR [esi+ebx*2-0x78]
  4179ad:	fild   WORD PTR [esi+0x46]
  4179b0:	test   DWORD PTR [ecx+0x61221555],edx
  4179b6:	mov    ?,eax
  4179b8:	inc    esp
  4179b9:	xchg   ecx,eax
  4179ba:	dec    esi
  4179bb:	cld    
  4179bc:	inc    ebx
  4179bd:	aas    
  4179be:	lds    edi,FWORD PTR [ecx+0x50c9a40c]
  4179c4:	mov    ecx,0xb96398ea
  4179c9:	xor    eax,0xcade7a84
  4179ce:	push   0xf411a188
  4179d3:	ret    
  4179d4:	pop    eax
  4179d5:	cli    
  4179d6:	and    ebp,DWORD PTR [edi-0x50]
  4179d9:	mov    bl,0x7a
  4179db:	fwait
  4179dc:	pop    ds
  4179dd:	test   DWORD PTR [esi],0xfac754ff
  4179e3:	imul   esp,DWORD PTR [ecx+0x1f6300f4],0x75
  4179ea:	test   BYTE PTR [eax-0x37c1bfc],cl
  4179f0:	sti    
  4179f1:	xor    al,0x93
  4179f3:	or     BYTE PTR ds:[ecx+eiz*4-0x1ba54832],ah
  4179fb:	loopne 0x4179e6
  4179fd:	inc    ebp
  4179fe:	pop    ebx
  4179ff:	jo     0x4179b5
  417a01:	call   0xc350:0xc544b61c
  417a08:	add    ch,ch
  417a0a:	les    esp,FWORD PTR [esi]
  417a0c:	(bad)  
  417a0d:	imul   DWORD PTR [ecx]
  417a0f:	sti    
  417a10:	xor    DWORD PTR [esi+0x7fa6225d],esp
  417a16:	stos   BYTE PTR es:[edi],al
  417a17:	adc    eax,0x337c03b7
  417a1c:	addr16 mov eax,ds:0x7336
  417a20:	adc    al,0x5b
  417a22:	add    edi,eax
  417a24:	das    
  417a25:	out    dx,eax
  417a26:	mov    al,0xd4
  417a28:	jmp    0x417a6e
  417a2a:	push   es
  417a2b:	add    ecx,DWORD PTR [eax+0x1819b00c]
  417a31:	ss jbe 0x417a82
  417a34:	push   0x5bb0d87d
  417a39:	ret    0x63e1
  417a3c:	inc    esp
  417a3d:	iret   
  417a3e:	test   al,0x14
  417a40:	xchg   edx,eax
  417a41:	jnp    0x4179dc
  417a43:	mov    ds:0x7779d46e,eax
  417a48:	jle    0x417ac3
  417a4a:	mov    dh,ah
  417a4c:	and    eax,0x8c3407ef
  417a51:	mov    eax,ds:0x4daf3bc7
  417a56:	cmp    BYTE PTR [eax+0x48],bh
  417a59:	pop    ecx
  417a5a:	out    0x4d,eax
  417a5c:	pop    ebp
  417a5d:	xchg   edi,eax
  417a5e:	dec    ebx
  417a5f:	push   es
  417a60:	in     al,0x70
  417a62:	daa    
  417a63:	cmp    bl,BYTE PTR fs:[eax-0x46e3ac2f]
  417a6a:	popa   
  417a6b:	add    bl,BYTE PTR [ebp-0x61977f2b]
  417a71:	pushf  
  417a72:	test   al,0x23
  417a74:	retf   0xedcc
  417a77:	test   eax,0x27a055a0
  417a7c:	xor    BYTE PTR [eax+0x38],bh
  417a7f:	ins    BYTE PTR es:[edi],dx
  417a80:	add    eax,0xe46cd04c
  417a85:	mov    ah,0xd7
  417a87:	shl    DWORD PTR [eax+0x343c2bb6],0x93
  417a8e:	fcmovnu st,st(4)
  417a90:	mov    ds:0x232deddc,al
  417a95:	xor    al,0x19
  417a97:	fadd   QWORD PTR [edi+eiz*2+0x3cd2ec7c]
  417a9e:	lea    ecx,[esi-0x5d794fc]
  417aa4:	dec    edi
  417aa5:	sbb    bh,BYTE PTR [edi-0x5c]
  417aa8:	xchg   ebx,ebp
  417aaa:	pop    es
  417aab:	sbb    BYTE PTR [eax+0x2f28a998],ch
  417ab1:	cmp    ah,ch
  417ab3:	adc    BYTE PTR [ecx+esi*1-0x345b7f4f],dh
  417aba:	in     al,0x59
  417abc:	shl    esp,0x7c
  417abf:	loopne 0x417b1d
  417ac1:	push   0xf837f0e6
  417ac6:	adc    al,0xf
  417ac8:	jp     0x417b3d
  417aca:	outs   dx,DWORD PTR ds:[esi]
  417acb:	cld    
  417acc:	test   al,0x94
  417ace:	sub    esp,eax
  417ad0:	scas   eax,DWORD PTR es:[edi]
  417ad1:	jns    0x417b20
  417ad3:	cmc    
  417ad4:	test   eax,0x6304f3b8
  417ad9:	stc    
  417ada:	rcr    BYTE PTR [eax],1
  417adc:	adc    al,0x8a
  417ade:	pop    ds
  417adf:	icebp  
  417ae0:	mov    al,0x1c
  417ae2:	mov    al,0xe4
  417ae4:	clc    
  417ae5:	std    
  417ae6:	add    eax,0xef0048bc
  417aeb:	add    DWORD PTR [ecx+ecx*2+0x42],esi
  417aef:	and    eax,0xd0b5d294
  417af4:	faddp  st(1),st
  417af6:	add    al,0xaa
  417af8:	int    0x48
  417afa:	test   DWORD PTR [eax+0x2ce1e1ca],ebx
  417b00:	mov    ?,ecx
  417b02:	pusha  
  417b03:	call   0xb00d:0x6a51c8fd
  417b0a:	jbe    0x417b25
  417b0c:	rol    BYTE PTR [edx+0x25],1
  417b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b10:	dec    esi
  417b11:	xor    esp,esp
  417b13:	ins    DWORD PTR es:[edi],dx
  417b14:	pop    esi
  417b15:	inc    ecx
  417b16:	in     al,dx
  417b17:	sub    cl,BYTE PTR [ebp-0x7c]
  417b1a:	mov    edx,0xe98644dd
  417b1f:	xor    al,0xa5
  417b21:	xchg   esi,eax
  417b22:	stc    
  417b23:	je     0x417b87
  417b25:	add    eax,0x88116ed4
  417b2a:	jp     0x417b49
  417b2c:	rol    BYTE PTR [ecx+0x75a02d4a],0x1a
  417b33:	or     DWORD PTR [eax],esp
  417b35:	inc    si
  417b37:	test   al,0x71
  417b39:	push   esi
  417b3a:	or     BYTE PTR [edx-0x777f9e9f],cl
  417b40:	jo     0x417ada
  417b42:	cwde   
  417b43:	jl     0x417bb1
  417b45:	pop    edx
  417b46:	add    al,0xb0
  417b48:	or     al,0x70
  417b4a:	sbb    al,0xa1
  417b4c:	and    al,0xd0
  417b4e:	in     eax,dx
  417b4f:	xor    esp,eax
  417b51:	adc    eax,0xa818469e
  417b56:	dec    ecx
  417b57:	shl    BYTE PTR [edx+0x28],1
  417b5a:	pushf  
  417b5b:	pusha  
  417b5c:	or     al,0x40
  417b5e:	cmp    DWORD PTR [ecx],edx
  417b60:	ja     0x417bba
  417b62:	std    
  417b63:	sbb    BYTE PTR [ecx+ecx*1-0x67eb7f74],0x63
  417b6b:	hlt    
  417b6c:	mov    cl,0x78
  417b6e:	xor    esi,DWORD PTR [eax]
  417b70:	pop    esp
  417b71:	cld    
  417b72:	inc    eax
  417b73:	sbb    ch,BYTE PTR [ebx+0x53]
  417b76:	mov    eax,0x4c7d13de
  417b7b:	pop    esp
  417b7c:	retf   0x7f44
  417b7f:	cld    
  417b80:	in     al,0xbc
  417b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b83:	aam    0xde
  417b85:	fs call 0x35b9504
  417b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b8c:	(bad)  
  417b8d:	shl    BYTE PTR [eax],1
  417b8f:	pop    eax
  417b90:	inc    edi
  417b91:	inc    ebx
  417b92:	sahf   
  417b93:	test   bl,cl
  417b95:	dec    ecx
  417b96:	aad    0x39
  417b98:	adc    dh,BYTE PTR [ebp-0x6eba75da]
  417b9e:	pop    edx
  417b9f:	dec    esp
  417ba0:	std    
  417ba1:	or     DWORD PTR [ebx+0x8],0xffffff8f
  417ba5:	adc    BYTE PTR [esi-0x46],dh
  417ba8:	cmc    
  417ba9:	and    al,BYTE PTR [esi-0x8]
  417bac:	les    ecx,FWORD PTR [eax-0x6358452b]
  417bb2:	cmc    
  417bb3:	retf   0xb8b7
  417bb6:	mov    al,ds:0xa6eeddc2
  417bbb:	or     ch,cl
  417bbd:	add    bh,0x98
  417bc0:	and    DWORD PTR ds:0x140e64b5,0xce909ecc
  417bca:	ror    dh,1
  417bcc:	fdiv   DWORD PTR [ebp+0x3c1d5494]
  417bd2:	mov    cl,BYTE PTR [esi+0x9cfdc50]
  417bd8:	jecxz  0x417bb1
  417bda:	je     0x417b6a
  417bdc:	mov    ah,0xf0
  417bde:	clc    
  417bdf:	inc    BYTE PTR [esi]
  417be1:	xchg   DWORD PTR [esi],edi
  417be3:	iret   
  417be4:	adc    bl,BYTE PTR [edx+0x3d]
  417be7:	cld    
  417be8:	mov    eax,0x5f51995a
  417bed:	push   esp
  417bee:	test   al,0x80
  417bf0:	pushf  
  417bf1:	adc    esp,ecx
  417bf3:	xchg   DWORD PTR [edi+0x2a],ebx
  417bf6:	gs popa 
  417bf8:	out    0xa1,eax
  417bfa:	pop    esp
  417bfb:	lock dec esi
  417bfd:	add    DWORD PTR [edx+eiz*8+0x50],esi
  417c01:	mov    bh,0x70
  417c03:	js     0x417c39
  417c05:	sub    DWORD PTR [edx],ebx
  417c07:	test   eax,0x770cd061
  417c0c:	popa   
  417c0d:	sar    DWORD PTR [esi+eax*2],cl
  417c10:	iret   
  417c11:	add    eax,0x2c8d5f24
  417c16:	imul   esp,esp,0x2e
  417c19:	sub    eax,0x3acbff10
  417c1e:	mov    esi,ebp
  417c20:	or     BYTE PTR [edi+0x17f1d5df],al
  417c26:	adc    ebp,esp
  417c28:	jmp    0xb7e5559
  417c2d:	hlt    
  417c2e:	leave  
  417c2f:	cmp    DWORD PTR [eax-0x2e52af81],edi
  417c35:	or     DWORD PTR [edx+ebp*2+0x34],edx
  417c3c:	add    BYTE PTR [eax],al
  417c3e:	add    BYTE PTR [eax],al
  417c40:	call   0x5:0xb14a2718
  417c47:	add    BYTE PTR [eax],al
  417c49:	add    BYTE PTR [eax],al
  417c4b:	add    BYTE PTR [ecx+0xd000005],dh
  417c51:	add    BYTE PTR [esi],ah
  417c53:	jl     0x417c55
  417c55:	add    dh,BYTE PTR [esi]
  417c57:	or     BYTE PTR [eax],al
  417c59:	add    BYTE PTR [ecx+ecx*2+0x0],ah
  417c5d:	lea    esi,[ebp-0x20]
  417c60:	cdq    
  417c61:	dec    ecx
  417c62:	in     al,0x9f
  417c64:	(bad)  [esp+ebp*1]
  417c67:	pop    esi
  417c68:	aaa    
  417c69:	repz jge 0x417c2c
  417c6c:	inc    esp
  417c6d:	inc    esp
  417c6e:	dec    eax
  417c6f:	dec    esp
  417c70:	push   eax
  417c71:	fisttp WORD PTR ds:0x9029eba0
  417c77:	ins    BYTE PTR es:[edi],dx
  417c78:	and    bh,cl
  417c7a:	cmp    eax,0x60d5d090
  417c7f:	test   eax,0xdc98fc92
  417c84:	popa   
  417c85:	aam    0x2d
  417c87:	jne    0x417c55
  417c89:	mov    ebx,0x6348843c
  417c8e:	xchg   esp,eax
  417c8f:	and    eax,0x600207f9
  417c94:	aas    
  417c95:	jecxz  0x417c20
  417c97:	sub    eax,0xb2ab4b7
  417c9c:	test   BYTE PTR [edi+0x677fc864],bh
  417ca2:	arpl   si,di
  417ca4:	and    DWORD PTR [eax+0x33aec56c],ebp
  417caa:	mov    ebx,0x500cc04d
  417caf:	xchg   ebp,eax
  417cb0:	mov    eax,0x30f4eb59
  417cb5:	push   eax
  417cb6:	xor    esp,DWORD PTR [eax+edi*2-0xf]
  417cba:	(bad)  
  417cbc:	mov    BYTE PTR [eax],al
  417cbe:	shr    DWORD PTR [ebx+0x4a],0x9c
  417cc2:	and    esp,DWORD PTR [eax-0x54]
  417cc5:	or     eax,0xbcfbee84
  417cca:	rcl    BYTE PTR [ebx+0x2b80cca2],0xcd
  417cd1:	dec    eax
  417cd2:	adc    ah,ah
  417cd4:	test   al,0xec
  417cd6:	and    al,0x12
  417cd8:	jl     0x417cb1
  417cda:	ins    BYTE PTR es:[edi],dx
  417cdb:	jns    0x417c93
  417cdd:	retf   0x3e94
  417ce0:	xchg   ecx,eax
  417ce1:	mov    eax,ds:0xb00aa894
  417ce6:	sub    cl,0x43
  417ce9:	in     al,0xd1
  417ceb:	dec    esp
  417cec:	int3   
  417ced:	retf   
  417cee:	pop    ss
  417cef:	adc    al,0xd5
  417cf1:	loopne 0x417d62
  417cf3:	das    
  417cf4:	in     al,dx
  417cf5:	jge    0x417c9b
  417cf7:	cli    
  417cf8:	call   0x1610:0xcc8b0c8b
  417cff:	jle    0x417d26
  417d01:	ins    DWORD PTR es:[edi],dx
  417d02:	fstp   QWORD PTR [ecx-0x65]
  417d05:	jbe    0x417cbf
  417d07:	ins    DWORD PTR es:[edi],dx
  417d08:	cmp    BYTE PTR [ecx-0x74],cl
  417d0b:	int3   
  417d0c:	int3   
  417d0d:	sbb    BYTE PTR [ebp+0x6c],0x20
  417d11:	nop
  417d12:	mov    bh,0xbc
  417d14:	repnz mov ds:0x478a9fa,al
  417d1a:	xor    DWORD PTR [ebx+ebx*4],ecx
  417d1d:	in     al,0x9d
  417d1f:	jmp    0xbf30:0xfaa36e54
  417d26:	call   DWORD PTR [edi]
  417d28:	xchg   edi,eax
  417d29:	and    ecx,edx
  417d2b:	pop    ebp
  417d2c:	dec    edi
  417d2d:	(bad)  
  417d2f:	popf   
  417d30:	in     al,0xe7
  417d32:	pop    ebx
  417d33:	clc    
  417d34:	xchg   edx,eax
  417d35:	jno    0x417d27
  417d37:	add    al,BYTE PTR [esi]
  417d39:	or     al,0x32
  417d3b:	loope  0x417db9
  417d3d:	call   0x2865e005
  417d42:	jp     0x417daa
  417d44:	retf   
  417d45:	sub    eax,0x4804b1bc
  417d4a:	dec    ecx
  417d4b:	push   eax
  417d4c:	push   edx
  417d4d:	cld    
  417d4e:	pop    esp
  417d4f:	push   esi
  417d50:	out    0x90,eax
  417d52:	jo     0xc2cd2a54
  417d58:	push   esi
  417d59:	iret   
  417d5a:	adc    edx,DWORD PTR [edx+0x4e]
  417d5d:	call   0xf76e:0xec281764
  417d64:	ins    DWORD PTR es:[edi],dx
  417d65:	mov    bh,0xac
  417d67:	lds    esp,FWORD PTR [esp+ecx*2+0x5c58565c]
  417d6e:	shl    DWORD PTR [eax-0x68],0x2e
  417d72:	jo     0x417de8
  417d74:	dec    ebx
  417d75:	mov    ecx,0xda74c109
  417d7a:	sbb    edx,DWORD PTR [eax+0x36a45029]
  417d80:	jnp    0x417d3f
  417d82:	mov    cl,0xcc
  417d84:	rol    DWORD PTR [eax-0x45],0xb7
  417d88:	sbb    al,0x3a
  417d8a:	push   ebp
  417d8b:	xor    bl,BYTE PTR [eax+ecx*1+0x6c]
  417d8f:	dec    ebp
  417d90:	in     al,dx
  417d91:	jo     0x417d87
  417d93:	cmp    eax,DWORD PTR [ebx-0x532046aa]
  417d99:	nop
  417d9a:	xchg   ebx,eax
  417d9b:	sbb    al,ch
  417d9d:	mov    bl,0xa4
  417d9f:	mov    cs:0xbd05363d,eax
  417da5:	dec    ebx
  417da6:	mov    al,ds:0xa7abaf77
  417dab:	pop    esp
  417dac:	addr16 int3 
  417dae:	push   esp
  417daf:	loope  0x417dae
  417db1:	jne    0x417e32
  417db3:	sub    eax,0x6ac9202
  417db8:	xchg   BYTE PTR [esi-0x40506379],bh
  417dbe:	sub    al,0xba
  417dc0:	mov    ebp,0x9ee3ae34
  417dc5:	les    eax,FWORD PTR [ebx-0x7f]
  417dc8:	sub    al,0xe7
  417dca:	adc    eax,0x7fd19334
  417dcf:	lock sti 
  417dd1:	clc    
  417dd2:	int    0xb3
  417dd4:	inc    esp
  417dd5:	or     BYTE PTR [ebx-0x1baa5831],cl
  417ddb:	dec    BYTE PTR [ecx+ecx*8+0x28]
  417ddf:	mov    eax,0x8f2d373c
  417de4:	aam    0x84
  417de6:	fpatan 
  417de8:	push   ebp
  417de9:	sbb    dh,0xd7
  417dec:	jmp    0x417e5a
  417dee:	dec    esi
  417def:	lock jg 0x417e6f
  417df2:	cmp    al,0xf8
  417df4:	or     ecx,DWORD PTR [ebp-0x60646f6a]
  417dfa:	mov    ch,0xa4
  417dfc:	sbb    DWORD PTR [ecx],ebp
  417dfe:	daa    
  417dff:	cmp    esp,edx
  417e01:	(bad)  
  417e02:	fiadd  DWORD PTR [edx+edx*4+0x589253be]
  417e09:	mov    cl,0x60
  417e0b:	mov    ds:0xf7acb66e,al
  417e10:	mov    ebx,0xc05800f3
  417e15:	daa    
  417e16:	rcr    DWORD PTR [ecx-0xab6c744],0x73
  417e1d:	and    al,dl
  417e1f:	out    0x63,al
  417e21:	rol    DWORD PTR [ebx+edx*4],1
  417e24:	(bad)
  417e28:	call   0xf9a54e50
  417e2d:	hlt    
  417e2e:	stos   DWORD PTR es:[edi],eax
  417e2f:	stos   BYTE PTR es:[edi],al
  417e30:	call   FWORD PTR [edi+0x46]
  417e33:	unpckhps xmm2,XMMWORD PTR [eax+0x74]
  417e37:	lock jo 0x417e5e
  417e3a:	sub    al,0xee
  417e3c:	pop    ss
  417e3d:	popa   
  417e3e:	mov    edi,0xc948bc6d
  417e43:	or     eax,0xe10407b0
  417e48:	fmulp  st(1),st
  417e4a:	dec    eax
  417e4b:	das    
  417e4c:	sbb    BYTE PTR [edi+eiz*8-0x4],ch
  417e50:	adc    BYTE PTR [esp+ecx*1+0x5314418c],0x97
  417e58:	pop    ebp
  417e59:	fsub   DWORD PTR [ebx-0x67995615]
  417e5f:	ins    BYTE PTR es:[edi],dx
  417e60:	push   ss
  417e61:	lods   al,BYTE PTR ds:[esi]
  417e62:	cmp    ecx,DWORD PTR [ecx+0x51]
  417e65:	push   ecx
  417e66:	push   esp
  417e67:	ffree  st(5)
  417e69:	fs in  eax,0x3f
  417e6c:	mov    WORD PTR [edi-0x4f],es
  417e6f:	test   DWORD PTR [esi+0x1],0x17605e88
  417e76:	mov    WORD PTR [ecx+0x3092c91c],fs
  417e7c:	cdq    
  417e7d:	out    0x48,al
  417e7f:	imul   eax,DWORD PTR ds:0xd49a7708,0x21ebae2a
  417e89:	pusha  
  417e8a:	add    al,0x70
  417e8c:	xor    BYTE PTR ss:[esi-0x29],ah
  417e90:	inc    esp
  417e91:	sbb    BYTE PTR [eax+edx*1-0x77],dl
  417e95:	pop    eax
  417e96:	xchg   edi,eax
  417e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e98:	pop    ebx
  417e99:	mov    ebp,0x43f61cb6
  417e9e:	pop    ds
  417e9f:	xchg   BYTE PTR [ebp+0x4c],ch
  417ea2:	dec    ebx
  417ea3:	sbb    DWORD PTR [ebp+ecx*1+0x3b3e3760],esp
  417eaa:	and    bh,ch
  417eac:	inc    eax
  417ead:	adc    DWORD PTR [ebp-0x67b09b3a],0xffffff9d
  417eb4:	jo     0x417e55
  417eb6:	and    ebp,0x9a8d9f9
  417ebc:	xor    edi,DWORD PTR [ebx+0x42]
  417ebf:	int    0x0
  417ec1:	scas   eax,DWORD PTR es:[edi]
  417ec2:	add    DWORD PTR [edi-0x4f102371],0xa3f18f5f
  417ecc:	or     bh,ch
  417ece:	add    al,0x3
  417ed0:	iret   
  417ed1:	lods   al,BYTE PTR ds:[esi]
  417ed2:	pop    ds
  417ed3:	fadd   QWORD PTR [eax+esi*8-0x4f76325c]
  417eda:	in     eax,0xd9
  417edc:	js     0x417f35
  417ede:	xchg   esp,eax
  417edf:	lahf   
  417ee0:	lds    eax,FWORD PTR [ecx-0x4a63aa6a]
  417ee6:	sbb    BYTE PTR [edx+0x38f018ba],bh
  417eec:	into   
  417eed:	adc    DWORD PTR [eax],0xffffffcc
  417ef0:	cwde   
  417ef1:	aam    0x8c
  417ef3:	mov    esi,0xf12381a0
  417ef8:	dec    esp
  417ef9:	lods   al,BYTE PTR ds:[esi]
  417efa:	call   0x4a465053
  417eff:	dec    esi
  417f00:	in     eax,0xa0
  417f02:	xlat   BYTE PTR ds:[ebx]
  417f03:	push   edi
  417f04:	loopne 0x417eaf
  417f06:	in     al,0x67
  417f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f09:	in     al,0x71
  417f0b:	std    
  417f0c:	mov    esp,edi
  417f0e:	adc    dh,BYTE PTR [ebx-0x61db2bef]
  417f14:	popf   
  417f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f16:	(bad)  
  417f17:	in     al,dx
  417f18:	sbb    al,0x39
  417f1a:	neg    BYTE PTR [esi]
  417f1c:	call   0xdd1d:0x3792ec08
  417f23:	sub    eax,0x77260863
  417f28:	xor    al,0xef
  417f2a:	cld    
  417f2b:	push   ebx
  417f2c:	push   edx
  417f2d:	cmp    ebp,0x47
  417f30:	cdq    
  417f31:	xchg   ebp,eax
  417f32:	xor    BYTE PTR [ecx],dh
  417f34:	mov    WORD PTR gs:[ecx+0x4d3910ad],fs
  417f3b:	mov    edx,0x780acd83
  417f40:	mov    ah,0x58
  417f42:	sbb    esp,0xf0d00b00
  417f48:	shl    bl,cl
  417f4a:	and    al,0x81
  417f4c:	or     ebp,esp
  417f4e:	sbb    eax,0x251d859f
  417f53:	test   eax,0x94100ebd
  417f58:	cmp    BYTE PTR [esi-0x33],ch
  417f5b:	ror    ecx,0x4d
  417f5e:	add    BYTE PTR [edi],al
  417f60:	enter  0xa6d7,0x8c
  417f64:	js     0x417fd2
  417f66:	fs dec ebp
  417f69:	fld    QWORD PTR [edi+0x1b3d0e15]
  417f6f:	pushf  
  417f70:	(bad)  
  417f71:	mov    al,ds:0xb0e04023
  417f76:	cmp    DWORD PTR [eax],esp
  417f78:	mov    cl,0xcd
  417f7a:	je     0x417f64
  417f7c:	dec    esi
  417f7d:	lock adc DWORD PTR [eax-0x5592c8b0],esi
  417f84:	pop    esp
  417f85:	std    
  417f86:	loope  0x418001
  417f88:	jle    0x417f5c
  417f8a:	ror    BYTE PTR [edi+0x9],cl
  417f8d:	shl    DWORD PTR [ebp-0x68],0x9f
  417f91:	mov    al,ds:0xf8fee8a5
  417f96:	jnp    0x417fad
  417f98:	pop    ecx
  417f99:	inc    ebp
  417f9a:	mov    esp,DWORD PTR [ecx-0x2d]
  417f9d:	lods   al,BYTE PTR ds:[esi]
  417f9e:	movntps XMMWORD PTR [edi],xmm1
  417fa1:	imul   ebx,esi,0x6c
  417fa4:	lock mov eax,0x7b803c0b
  417faa:	lods   al,BYTE PTR ds:[esi]
  417fab:	or     DWORD PTR [edx-0x5c63a7ac],esp
  417fb1:	sbb    DWORD PTR [ebx-0x5e],ecx
  417fb4:	repz mov bl,0x31
  417fb7:	add    DWORD PTR [edx+0x24],esp
  417fba:	sub    ah,cl
  417fbc:	das    
  417fbd:	ror    DWORD PTR [ebp+eax*2+0x4eace954],0xe5
  417fc5:	js     0x418044
  417fc7:	mov    edx,0x838d050f
  417fcc:	pop    ds
  417fcd:	or     eax,0xfbf4a51d
  417fd2:	inc    esp
  417fd3:	retf   
  417fd4:	stos   BYTE PTR es:[edi],al
  417fd5:	cmp    eax,0x8524e1fd
  417fda:	cmp    al,0xbb
  417fdc:	aaa    
  417fdd:	xchg   ebp,eax
  417fde:	jl     0x417fc5
  417fe0:	mov    bh,0x4b
  417fe2:	jmp    0x5e25b7e3
  417fe7:	sub    BYTE PTR [ebx-0x40],ah
  417fea:	mov    ds,WORD PTR [edi]
  417fec:	cli    
  417fed:	test   DWORD PTR [esp+eiz*8-0xb690008],eax
  417ff4:	mov    ebp,0x68e12890
  417ff9:	leave  
  417ffa:	xor    BYTE PTR [eax+0x1bb67c60],ch
  418000:	les    esp,FWORD PTR ds:[ebx+0x515c2e0b]
  418007:	(bad)
  41800b:	dec    edx
  41800c:	pop    eax
  41800d:	das    
  41800e:	in     eax,dx
  41800f:	jg     0x417fd1
  418011:	push   0x3fea3c85
  418016:	into   
  418017:	aam    0x2c
  418019:	les    ebp,FWORD PTR [ecx-0x191f2344]
  41801f:	jmp    0xfa380911
  418024:	inc    BYTE PTR [ecx+0x4]
  418027:	pop    ss
  418028:	or     al,0xf
  41802a:	adc    al,0x1d
  41802c:	sbb    al,0x21
  41802e:	jne    0x417ff1
  418030:	lea    esp,[esi+0x7]
  418033:	into   
  418034:	cmp    al,0x2
  418036:	push   ecx
  418037:	imul   edx,ebx,0x6
  41803a:	(bad)  
  41803c:	mov    al,ds:0xb6612861
  418041:	cmc    
  418042:	(bad)  
  418043:	inc    BYTE PTR [ecx]
  418045:	gs nop
  418047:	xchg   BYTE PTR [esi],bl
  418049:	sahf   
  41804a:	leave  
  41804b:	fmul   st(2),st
  41804d:	and    BYTE PTR [eax],ch
  41804f:	and    eax,DWORD PTR [esi+0x4fddb8e6]
  418055:	dec    ebx
  418056:	(bad)  
  418057:	pop    esp
  418058:	cdq    
  418059:	add    esp,edi
  41805b:	push   ebp
  41805c:	rcr    DWORD PTR [esi],0x53
  41805f:	xchg   esi,eax
  418060:	imul   esi,DWORD PTR [edi+eax*4-0x1],0xffffffe3
  418065:	jg     0x5cbfa542
  41806b:	and    ebx,esi
  41806d:	dec    esi
  41806e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41806f:	or     BYTE PTR [esi-0x3b6ec165],cl
  418075:	push   ebx
  418076:	sahf   
  418077:	shl    DWORD PTR [esi-0x3b5d20a1],cl
  41807d:	push   0x6c
  41807f:	mov    eax,ds:0x822cf112
  418084:	push   cs
  418085:	(bad)  
  418086:	lea    ebx,[ebx-0x5ea360af]
  41808c:	mov    al,ds:0xb152386f
  418091:	je     0x4180d9
  418093:	adc    al,0x47
  418095:	sti    
  418096:	sbb    BYTE PTR [eax+0x2b],dl
  418099:	pop    edx
  41809a:	fs and al,0x6b
  41809d:	push   0xffffffd1
  41809f:	daa    
  4180a0:	jnp    0x41811c
  4180a2:	or     cl,dl
  4180a4:	mov    al,BYTE PTR [ecx+ebx*4-0x64]
  4180a8:	pop    esi
  4180a9:	xchg   ebp,eax
  4180aa:	or     ch,BYTE PTR [esi-0x38475538]
  4180b0:	mov    esi,0xc2c780b4
  4180b5:	lahf   
  4180b6:	push   edi
  4180b7:	call   0x6b6c6b12
  4180bc:	scas   al,BYTE PTR es:[edi]
  4180bd:	jns    0x418055
  4180bf:	jo     0x41806f
  4180c1:	ret    0xdc8d
  4180c4:	fcomp  QWORD PTR [esp+edx*2-0x5d3f6d6f]
  4180cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180cc:	fbstp  TBYTE PTR [esi-0x3c031248]
  4180d2:	retf   0xcf98
  4180d5:	jecxz  0x41808c
  4180d7:	(bad)  
  4180d9:	and    bl,0xf8
  4180dc:	jmp    0xd90f:0x62351faf
  4180e3:	mov    al,0x93
  4180e5:	inc    ebp
  4180e6:	xchg   edi,eax
  4180e7:	pushf  
  4180e8:	pop    ss
  4180e9:	out    dx,al
  4180ea:	mov    esp,0xb0e93bff
  4180ef:	jmp    0xd2aa:0x7bc793c0
  4180f6:	push   ebp
  4180f7:	test   al,0xf1
  4180f9:	in     al,0xc8
  4180fb:	outs   dx,DWORD PTR ds:[esi]
  4180fc:	cmp    BYTE PTR [ebx],cl
  4180fe:	retf   
  4180ff:	xor    eax,0x7208fb85
  418104:	inc    ecx
  418105:	lahf   
  418106:	pop    esi
  418107:	sbb    BYTE PTR [ebx],bl
  418109:	jo     0x4180e9
  41810b:	sar    BYTE PTR [ebx+0x1cc3a233],1
  418111:	test   al,0x2a
  418113:	mov    al,0xd0
  418115:	jecxz  0x4180f3
  418117:	mov    ebp,0xb1fe9e18
  41811c:	ja     0x41815c
  41811e:	aam    0xc0
  418120:	aas    
  418121:	(bad)  
  418122:	jo     0x418116
  418124:	dec    ebx
  418125:	inc    esi
  418126:	sbb    al,0x25
  418128:	out    0x58,al
  41812a:	sub    al,0xb3
  41812c:	int    0xc7
  41812e:	dec    eax
  41812f:	popa   
  418130:	dec    ebx
  418131:	call   DWORD PTR [edx+0x22dfccd4]
  418137:	imul   esp,esp,0xf8a07b65
  41813d:	xor    al,0x2c
  41813f:	mov    DWORD PTR [esp+eax*8+0x8],eax
  418143:	lahf   
  418144:	ficomp DWORD PTR [ebx+ecx*1]
  418147:	gs and al,0xa7
  41814a:	jns    0x418170
  41814c:	cmp    edi,edi
  41814e:	add    BYTE PTR [edi-0x7e],0x77
  418152:	xchg   ecx,eax
  418153:	and    bl,BYTE PTR [ebx-0x4]
  418156:	gs loope 0x4180da
  418159:	ins    DWORD PTR es:[edi],dx
  41815a:	xchg   ebx,eax
  41815b:	jnp    0x4181dc
  41815d:	in     al,dx
  41815e:	or     al,0x8d
  418160:	xlat   BYTE PTR ds:[ebx]
  418161:	pop    ds
  418162:	nop
  418163:	xchg   edx,eax
  418164:	mov    ah,0xa1
  418166:	mov    edi,0x3bb20c6d
  41816b:	mov    esp,0xc84501a1
  418170:	add    DWORD PTR [ecx+edx*8-0x6f],ebx
  418174:	push   ebx
  418175:	in     al,0xf6
  418177:	sub    DWORD PTR [ebp+0x70],ebp
  41817a:	daa    
  41817b:	inc    esp
  41817c:	sub    ecx,DWORD PTR [ebx]
  41817e:	clc    
  41817f:	fcomp  QWORD PTR [ecx]
  418182:	adc    al,0xe5
  418184:	fs sbb eax,0x62475b11
  41818a:	(bad)  
  41818c:	push   0x501febac
  418191:	push   edi
  418192:	sub    ebx,DWORD PTR [ebp+ebp*8-0x493c386]
  418199:	cmp    DWORD PTR [eax+0x7f],esi
  41819c:	jae    0x418172
  41819e:	fcmovnu st,st(5)
  4181a0:	cwde   
  4181a1:	jl     0x41819a
  4181a3:	cld    
  4181a4:	mov    eax,ds:0x83b8fe16
  4181a9:	jge    0x4181e3
  4181ab:	aas    
  4181ac:	add    al,0xdc
  4181ae:	rcl    DWORD PTR [esi+eiz*2],0x40
  4181b2:	sbb    al,0x9b
  4181b4:	gs jmp 0xb20f:0x7e3a4bd0
  4181bc:	or     eax,esi
  4181be:	mov    WORD PTR [edi+ebx*1+0x58f71767],es
  4181c5:	and    ebp,DWORD PTR [ebx+0x44f73fb0]
  4181cb:	ret    
  4181cc:	mov    eax,eax
  4181ce:	sahf   
  4181cf:	shr    esi,cl
  4181d1:	sbb    ecx,DWORD PTR [esi+ebx*4-0x21]
  4181d5:	fsubr  st,st(7)
  4181d7:	pusha  
  4181d8:	push   es
  4181d9:	sbb    al,0x83
  4181db:	or     al,0x9d
  4181de:	adc    BYTE PTR [edi-0x7b77a4e5],ch
  4181e4:	jmp    0x41817d
  4181e6:	jb     0x4181b0
  4181e8:	test   al,0x6a
  4181ea:	dec    ebx
  4181eb:	mov    ecx,0x8ad8fc30
  4181f0:	push   ecx
  4181f1:	in     eax,0xe1
  4181f3:	pusha  
  4181f4:	mov    ecx,0xfc4cc965
  4181f9:	ds aaa 
  4181fb:	add    BYTE PTR [eax],al
  4181fd:	add    BYTE PTR [eax],al
  4181ff:	add    BYTE PTR [ebx],ah
  418201:	sbb    edx,eax
  418203:	dec    ebx
  418204:	aas    
  418205:	push   es
  418206:	add    BYTE PTR [eax],al
  418208:	add    BYTE PTR [eax],al
  41820a:	add    BYTE PTR [eax],al
  41820c:	aas    
  41820d:	push   es
  41820e:	add    BYTE PTR [eax],al
  418210:	push   cs
  418211:	add    BYTE PTR [esi],ah
  418213:	jl     0x418215
  418215:	add    dh,BYTE PTR [esi]
  418217:	or     BYTE PTR [eax],al
  418219:	add    dl,dl
  41821b:	dec    edx
  41821c:	add    BYTE PTR [eax+ecx*1],al
  41821f:	or     al,0x4f
  418221:	lahf   
  418222:	std    
  418223:	inc    ecx
  418224:	jecxz  0x41824e
  418226:	nop
  418227:	xor    BYTE PTR cs:[ecx+edi*1-0x3cee7344],ah
  41822f:	mov    al,ds:0x4cb4d750
  418234:	aaa    
  418235:	out    dx,eax
  418236:	adc    eax,0x8764f564
  41823b:	jae    0x418241
  41823d:	inc    edx
  41823e:	mov    esp,edx
  418240:	xlat   BYTE PTR ds:[ebx]
  418241:	test   al,0x13
  418243:	pushf  
  418244:	imul   esp,DWORD PTR [edi+edi*2],0x44cbf66
  41824b:	je     0x418291
  41824d:	jnp    0x4181ed
  41824f:	arpl   WORD PTR [edi+0x5f9c09d1],cx
  418255:	push   0x437d059d
  41825a:	and    DWORD PTR [eax+0xdae0c8b],edx
  418260:	xchg   ebp,eax
  418261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418262:	add    BYTE PTR [eax+0x39a0a800],bl
  418268:	jmp    0x1f86cf65
  41826d:	inc    ebx
  41826e:	aam    0x2b
  418270:	pop    eax
  418271:	dec    eax
  418272:	dec    ebx
  418273:	inc    esp
  418274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418275:	out    0xc4,eax
  418277:	dec    esp
  418278:	fdivr  DWORD PTR [eax+edx*4-0x79]
  41827c:	jg     0x41820a
  41827e:	sbb    ecx,ebx
  418280:	ins    BYTE PTR es:[edi],dx
  418281:	adc    eax,0x772d5cf5
  418286:	nop
  418287:	rcr    cl,0x31
  41828a:	fs loopne 0x418255
  41828d:	out    dx,al
  41828e:	rcl    BYTE PTR [ecx-0x28],1
  418291:	push   cs
  418292:	xchg   ebp,eax
  418293:	mov    dl,0x63
  418295:	mov    dl,0x70
  418297:	sti    
  418298:	xchg   edi,eax
  418299:	or     BYTE PTR [ecx+ebx*2-0x6f15e299],0x17
  4182a1:	bound  esp,QWORD PTR [esp+ebx*8-0x50fc4067]
  4182a8:	aaa    
  4182a9:	or     al,BYTE PTR [ebp-0x40]
  4182ac:	sub    eax,0xecd8db2f
  4182b1:	lods   eax,DWORD PTR ds:[esi]
  4182b2:	in     al,dx
  4182b3:	sub    DWORD PTR [esi],eax
  4182b5:	lock clc 
  4182b7:	sti    
  4182b8:	repnz test esi,edx
  4182bb:	jl     0x4182c3
  4182bd:	xchg   ebx,eax
  4182be:	adc    al,0xe2
  4182c0:	mov    ds:0xe527a7d1,eax
  4182c5:	inc    eax
  4182c6:	mov    ecx,0x4b84d1bc
  4182cb:	or     edx,edx
  4182cd:	out    dx,eax
  4182ce:	sbb    ebp,DWORD PTR [esi-0x14fccca0]
  4182d4:	aaa    
  4182d5:	mov    cl,0x4
  4182d7:	std    
  4182d8:	add    DWORD PTR [esi+0x8],esi
  4182db:	pop    ecx
  4182dc:	in     al,dx
  4182dd:	lahf   
  4182de:	pop    esi
  4182df:	sbb    BYTE PTR [ebx+0x332cd069],ch
  4182e5:	cld    
  4182e6:	cmp    ecx,esp
  4182e8:	leave  
  4182e9:	test   DWORD PTR [ebx+ebp*8],esi
  4182ec:	aam    0x95
  4182ee:	sub    al,0x92
  4182f0:	inc    edx
  4182f1:	mov    dh,0xb7
  4182f3:	jnp    0x41832b
  4182f5:	fsin   
  4182f7:	int3   
  4182f8:	pop    edx
  4182f9:	push   ebx
  4182fa:	mov    ah,0x16
  4182fc:	adc    eax,eax
  4182fe:	inc    edx
  4182ff:	jnp    0x418349
  418301:	sbb    ebp,esp
  418303:	aaa    
  418304:	aad    0x3a
  418306:	xor    eax,0xcc484e8c
  41830b:	daa    
  41830c:	add    eax,0x6b96d978
  418311:	in     al,dx
  418312:	dec    esp
  418313:	hlt    
  418314:	idiv   DWORD PTR [edi+0x7d]
  418317:	and    al,0x0
  418319:	or     al,0x1f
  41831b:	nop
  41831c:	stos   BYTE PTR es:[edi],al
  41831d:	sbb    eax,0x2c146210
  418322:	addr16 pop es
  418324:	mov    DWORD PTR ds:0xc134743c,0x24681050
  41832e:	adc    al,0x60
  418330:	jecxz  0x418386
  418332:	jae    0x41838c
  418334:	xchg   ch,al
  418336:	sub    DWORD PTR [esi-0x69f5f977],0x48270096
  418340:	jmp    0xcc0:0x3c204bb3
  418347:	dec    ecx
  418348:	daa    
  418349:	pop    edi
  41834a:	push   eax
  41834b:	(bad)  
  41834d:	loopne 0x4183b5
  41834f:	cmp    esp,edi
  418351:	(bad)  
  418352:	push   DWORD PTR [eax-0x4]
  418355:	cmp    al,BYTE PTR [ecx+ebp*2-0x32]
  418359:	nop
  41835a:	xchg   edi,eax
  41835b:	push   esi
  41835c:	sbb    bh,dl
  41835e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41835f:	and    dh,BYTE PTR [ebp-0x59325176]
  418365:	rcl    BYTE PTR [ebx-0x2db9dbb4],0x5
  41836c:	popa   
  41836d:	pop    esi
  41836e:	xor    ch,BYTE PTR [ebp+0x70]
  418371:	add    DWORD PTR [esi-0x1],esi
  418374:	inc    ecx
  418375:	xchg   BYTE PTR [ebx],cl
  418377:	dec    esi
  418378:	xchg   edx,eax
  418379:	xchg   esp,eax
  41837a:	sbb    al,0x47
  41837c:	aad    0x40
  41837e:	fwait
  41837f:	gs pop ebx
  418381:	mov    cl,0xb8
  418383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418384:	or     DWORD PTR [edi+0x11],eax
  418387:	xor    edx,DWORD PTR [ebp+0x1d]
  41838a:	lods   al,BYTE PTR ds:[esi]
  41838b:	fdiv   st(2),st
  41838d:	outs   dx,DWORD PTR ds:[esi]
  41838e:	and    DWORD PTR [ebp+esi*1-0x7b7b4305],ecx
  418395:	add    ecx,eax
  418397:	ins    BYTE PTR es:[edi],dx
  418398:	scas   eax,DWORD PTR es:[edi]
  418399:	xlat   BYTE PTR ds:[ebx]
  41839a:	test   dl,dl
  41839c:	sbb    al,0xb9
  41839e:	and    al,0xd1
  4183a0:	aas    
  4183a1:	neg    DWORD PTR [eax-0x37ba4340]
  4183a7:	adc    esp,0xd4ec6bd7
  4183ad:	arpl   WORD PTR [ebx-0x70f8614],di
  4183b3:	mov    cl,BYTE PTR [edi-0x6fbaf7f8]
  4183b9:	lahf   
  4183ba:	outs   dx,BYTE PTR ds:[esi]
  4183bb:	jl     0x4183b0
  4183bd:	and    eax,0x3ed73dba
  4183c2:	(bad)  
  4183c3:	add    eax,0x3352be42
  4183c8:	repnz shl cl,1
  4183cb:	mov    edi,0x12806a18
  4183d0:	jnp    0x4183e8
  4183d2:	push   esi
  4183d3:	aaa    
  4183d4:	or     dl,bh
  4183d6:	popf   
  4183d7:	push   eax
  4183d8:	and    BYTE PTR [ecx+ebp*4+0x51],ah
  4183dc:	aam    0x2c
  4183de:	or     DWORD PTR [esp+edi*1-0x4c],eax
  4183e2:	rol    BYTE PTR [ebx-0x3c],1
  4183e5:	adc    esp,0x58081353
  4183eb:	adc    al,0x13
  4183ed:	emms   
  4183ef:	clc    
  4183f0:	cmp    BYTE PTR [edi+eax*1],al
  4183f3:	iret   
  4183f4:	test   DWORD PTR [ebp-0x18],edx
  4183f7:	xchg   ebx,eax
  4183f8:	push   ds
  4183f9:	shl    BYTE PTR [esi],1
  4183fb:	or     DWORD PTR [ecx-0x48bcbf3a],ebp
  418401:	push   ss
  418402:	ins    BYTE PTR es:[edi],dx
  418403:	push   0x5fd4021f
  418408:	shl    eax,0xef
  41840b:	xchg   BYTE PTR [bp-0x4320],ah
  418410:	or     BYTE PTR [ecx-0x138cb3ec],cl
  418416:	cdq    
  418417:	and    al,0xa9
  418419:	pusha  
  41841a:	pop    ebp
  41841b:	fdiv   DWORD PTR [eax-0x244e95c4]
  418421:	inc    ebp
  418422:	dec    ebx
  418423:	(bad)  
  418424:	adc    BYTE PTR [edi+0x8],dl
  418427:	xlat   BYTE PTR ds:[ebx]
  418428:	scas   eax,DWORD PTR es:[edi]
  418429:	fcmovb st,st(4)
  41842b:	in     al,dx
  41842c:	xor    BYTE PTR [edx+edi*1+0x296050d],bl
  418433:	test   BYTE PTR [esi],ch
  418435:	push   ss
  418436:	fsub   QWORD PTR [eax-0x13]
  418439:	or     esp,ebp
  41843b:	jo     0x4184b9
  41843d:	cmp    DWORD PTR [esi],eax
  41843f:	push   cs
  418440:	test   DWORD PTR [eax],ecx
  418442:	mov    WORD PTR [edx-0xc],ss
  418445:	fistp  DWORD PTR [edx-0x535e1f9e]
  41844b:	xor    BYTE PTR [eax+edi*4+0xb44c03c],dh
  418452:	push   esp
  418453:	outs   dx,DWORD PTR ds:[esi]
  418454:	adc    DWORD PTR [eax+0x5c],ebx
  418457:	loopne 0x41843a
  418459:	test   al,0x54
  41845b:	lock aaa 
  41845d:	inc    DWORD PTR [ebp+ecx*8+0xd]
  418461:	mov    ah,0x70
  418463:	outs   dx,DWORD PTR ds:[esi]
  418464:	sbb    eax,0x2ad012a8
  418469:	jae    0x418496
  41846b:	sub    bh,BYTE PTR [ecx]
  41846d:	ds mov ch,0xf1
  418470:	je     0x418479
  418472:	fidiv  WORD PTR [eax-0x5a444b67]
  418478:	jmp    0xbb8e6a09
  41847d:	jnp    0x41844e
  41847f:	jae    0x418455
  418481:	inc    esp
  418482:	sbb    BYTE PTR [edi-0x62],0x1c
  418486:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  418488:	test   BYTE PTR [edi-0x4a],dh
  41848b:	jl     0x418509
  41848d:	mov    BYTE PTR [edi],al
  41848f:	dec    esp
  418490:	test   BYTE PTR [ebx-0x416fecad],dl
  418496:	cmp    al,0xea
  418498:	jmp    0x9c13dcf
  41849d:	(bad)
  4184a0:	and    al,0x9a
  4184a2:	push   esi
  4184a3:	rcr    BYTE PTR [esp+edx*8+0x24],1
  4184a7:	pushf  
  4184a8:	fstp   DWORD PTR [eax]
  4184aa:	jne    0x418524
  4184ac:	outs   dx,BYTE PTR ds:[esi]
  4184ad:	or     BYTE PTR [edi-0x475ee608],0xa0
  4184b4:	jecxz  0x41851b
  4184b6:	nop
  4184b7:	xor    al,0xaf
  4184b9:	pop    esp
  4184ba:	mov    BYTE PTR [esp+eax*8+0x68cbce84],bh
  4184c1:	adc    eax,0x27bedc40
  4184c6:	dec    ecx
  4184c7:	fsubr  DWORD PTR [edx+0xaaf8b7]
  4184cd:	outs   dx,BYTE PTR ds:[esi]
  4184ce:	or     BYTE PTR [edi+ebp*8+0x1],bl
  4184d2:	pushf  
  4184d3:	in     al,dx
  4184d4:	pusha  
  4184d5:	pop    esp
  4184d6:	sub    ah,al
  4184d8:	icebp  
  4184d9:	mov    eax,0xc3d100b2
  4184de:	pop    esp
  4184df:	adc    al,BYTE PTR [ebx-0x1fbea36c]
  4184e5:	sbb    BYTE PTR [esi+0x3c3dc7f0],ch
  4184eb:	dec    esp
  4184ec:	add    al,0x5b
  4184ee:	and    BYTE PTR fs:[eax+0x49868e8],0xa9
  4184f6:	ins    BYTE PTR es:[edi],dx
  4184f7:	and    BYTE PTR [ecx-0x56577f9b],bh
  4184fd:	inc    edx
  4184fe:	mov    WORD PTR [ecx+0x54],ss
  418501:	sbb    eax,0xb165b454
  418506:	dec    eax
  418507:	jns    0x4184c6
  418509:	in     al,dx
  41850a:	mov    esp,0xd01016ec
  41850f:	je     0x4184ed
  418511:	adc    al,0x7b
  418513:	and    al,0xad
  418515:	in     al,dx
  418516:	inc    ebp
  418517:	pop    ss
  418518:	mov    bl,0x71
  41851a:	hlt    
  41851b:	adc    eax,0xec45b368
  418520:	test   eax,0xd001201c
  418525:	ins    BYTE PTR es:[edi],dx
  418526:	jl     0x418529
  418528:	imul   edi,DWORD PTR [esi],0xffffff9d
  41852b:	les    ecx,FWORD PTR [ebp+0x25f0d923]
  418531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418532:	paddsb mm3,QWORD PTR [esi+0x71]
  418536:	aaa    
  418537:	or     edi,esp
  418539:	test   al,0x6d
  41853b:	mov    WORD PTR [edi+0x55],cs
  41853e:	xchg   ecx,eax
  41853f:	inc    ebx
  418540:	pusha  
  418541:	test   al,0x7f
  418543:	cmp    ebx,DWORD PTR ds:[eax]
  418546:	xor    edi,0x6c
  418549:	iret   
  41854a:	shl    BYTE PTR [eax],1
  41854c:	xchg   ebp,eax
  41854d:	ror    BYTE PTR [eax-0x5c248bb0],cl
  418553:	call   0xfca6fa08
  418558:	jno    0x4185ad
  41855a:	lds    ecx,FWORD PTR [ecx]
  41855c:	xchg   esp,eax
  41855d:	add    al,0x78
  41855f:	xlat   BYTE PTR ds:[ebx]
  418560:	mov    ds:0x3476c18c,eax
  418565:	jo     0x418574
  418567:	jns    0x4184e9
  418569:	paddw  mm1,QWORD PTR [eax+0x7b]
  41856d:	xchg   esi,eax
  41856e:	stos   DWORD PTR es:[edi],eax
  41856f:	push   0xffffff93
  418571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418572:	push   edi
  418573:	ins    BYTE PTR es:[edi],dx
  418574:	mov    ebx,DWORD PTR [ecx-0x3bd52330]
  41857a:	enter  0x86dc,0x2b
  41857e:	dec    ecx
  41857f:	add    BYTE PTR [eax+edi*2],ah
  418582:	loope  0x4185bc
  418584:	hlt    
  418585:	js     0x418586
  418587:	jns    0x41854d
  418589:	dec    BYTE PTR [ecx+0x1cd86c13]
  41858f:	xlat   BYTE PTR ds:[ebx]
  418590:	test   eax,0x8930442b
  418595:	cmp    BYTE PTR [ecx+ecx*8+0x24],bh
  418599:	mov    ebp,0x59ac5dcf
  41859e:	fsubr  st(4),st
  4185a0:	test   esp,edi
  4185a2:	lods   al,BYTE PTR ds:[esi]
  4185a3:	loope  0x418599
  4185a5:	jae    0x4185e2
  4185a7:	pop    edi
  4185a8:	(bad)  
  4185a9:	mov    edi,0xb870cf5d
  4185ae:	cmp    ecx,DWORD PTR [esi+0x24d886c0]
  4185b4:	mov    eax,0xc8c4aab9
  4185b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ba:	inc    eax
  4185bb:	out    dx,eax
  4185bc:	fmul   QWORD PTR [eax]
  4185bf:	cmp    esp,DWORD PTR [esi-0xb062e07]
  4185c5:	pushf  
  4185c6:	cmp    cl,BYTE PTR [esp+ecx*8]
  4185c9:	push   ebx
  4185ca:	sbb    BYTE PTR [ebx],0xaf
  4185cd:	sbb    al,0xa8
  4185cf:	or     al,cl
  4185d1:	repnz mov ah,0xde
  4185d4:	xor    eax,0xc8e94748
  4185d9:	xor    dl,ch
  4185db:	mov    esi,0x2912959
  4185e0:	mov    gs,ebp
  4185e2:	outs   dx,DWORD PTR ds:[esi]
  4185e3:	cli    
  4185e4:	hlt    
  4185e5:	loop   0x418604
  4185e7:	and    bl,ch
  4185e9:	or     DWORD PTR [edi+0x240c7436],edx
  4185ef:	pop    ds
  4185f0:	or     DWORD PTR [edx],edx
  4185f2:	sbb    eax,DWORD PTR [eax+0x1c]
  4185f5:	outs   dx,DWORD PTR ds:[esi]
  4185f6:	iret   
  4185f7:	mov    eax,0x8abd458c
  4185fc:	hlt    
  4185fd:	mov    gs,ecx
  4185ff:	or     al,0xfc
  418601:	xlat   BYTE PTR ds:[ebx]
  418602:	clc    
  418603:	out    dx,eax
  418604:	push   0x4
  418606:	test   DWORD PTR [eax],0xe786405
  41860c:	sbb    eax,0xb02b2873
  418611:	xor    BYTE PTR [eax+eax*1+0x40],cl
  418615:	pop    edi
  418616:	jo     0x418637
  418618:	cmp    BYTE PTR [ebx+0xf],bl
  41861b:	dec    esp
  41861c:	ret    
  41861d:	imul   edx,eax,0x7d
  418620:	repnz push esp
  418622:	mov    al,ds:0x50e7294
  418627:	push   edx
  418628:	or     bh,al
  41862a:	xor    BYTE PTR [ecx+edi*1-0x5b],dl
  41862e:	popa   
  41862f:	call   0xe0abefd4
  418634:	pop    esp
  418635:	enter  0x48ed,0x92
  418639:	push   es
  41863a:	jg     0x418688
  41863c:	mov    al,0xbf
  41863e:	inc    ebp
  41863f:	push   esp
  418640:	pop    eax
  418641:	ins    DWORD PTR es:[edi],dx
  418642:	clc    
  418643:	mov    esp,0xb4b00bd6
  418648:	mov    edx,0x1248c240
  41864d:	sub    BYTE PTR [esi+edx*8],dh
  418650:	sub    esp,DWORD PTR [eax+ebp*4]
  418653:	push   edi
  418654:	jmp    0x91af662
  418659:	pop    esi
  41865a:	mov    esp,DWORD PTR [edx-0x75]
  41865d:	xor    DWORD PTR [esi],edx
  41865f:	(bad)  
  418660:	jp     0x4186d6
  418662:	add    al,0x9e
  418664:	jge    0x41860d
  418666:	push   edx
  418667:	inc    ebp
  418668:	pusha  
  418669:	adc    DWORD PTR [eax],esi
  41866b:	loopne 0x418615
  41866d:	mov    eax,0xeab614e7
  418672:	nop
  418673:	(bad)  
  418674:	ror    DWORD PTR [ebp-0x1a5bbfed],1
  41867a:	fwait
  41867b:	sbb    al,0x2d
  41867d:	bnd jae 0x418673
  418680:	jl     0x4186d9
  418682:	scas   eax,DWORD PTR es:[edi]
  418683:	pop    eax
  418684:	and    DWORD PTR [edi],0xffffff9c
  418687:	(bad)  
  418688:	adc    eax,0x88aaa8a4
  41868d:	mov    bh,0x45
  41868f:	out    dx,al
  418690:	xor    DWORD PTR [ebp-0x5abe77d4],eax
  418696:	fdiv   QWORD PTR [eax]
  418698:	and    edx,DWORD PTR [edi]
  41869a:	add    al,0xb0
  41869c:	and    al,0x98
  41869e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41869f:	scas   eax,DWORD PTR es:[edi]
  4186a0:	xlat   BYTE PTR ds:[ebx]
  4186a1:	daa    
  4186a2:	popf   
  4186a3:	shl    BYTE PTR [eax-0x7776a446],cl
  4186a9:	(bad)  
  4186aa:	ins    DWORD PTR es:[edi],dx
  4186ab:	mov    ecx,0x54e7a773
  4186b0:	xlat   BYTE PTR ds:[ebx]
  4186b1:	ror    dl,0x2d
  4186b4:	neg    DWORD PTR [edi-0x24]
  4186b7:	rcr    esp,1
  4186b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186ba:	ret    
  4186bb:	fbld   TBYTE PTR [edx]
  4186bd:	jns    0x41867b
  4186bf:	in     eax,0x10
  4186c1:	pop    es
  4186c2:	(bad)  
  4186c3:	std    
  4186c4:	inc    esi
  4186c5:	adc    al,0x8f
  4186c7:	xchg   edi,eax
  4186c8:	shl    BYTE PTR [edi-0x27bae008],1
  4186ce:	call   0xc459:0x9be1679c
  4186d5:	call   0xa1bf:0xe0a96bdc
  4186dc:	jns    0x41868d
  4186de:	clc    
  4186df:	inc    eax
  4186e0:	push   esi
  4186e1:	adc    DWORD PTR [ebx],0x3c421af8
  4186e7:	pusha  
  4186e8:	scas   eax,DWORD PTR es:[edi]
  4186e9:	mov    al,ds:0x1892d8eb
  4186ee:	push   ecx
  4186ef:	ret    
  4186f0:	sbb    BYTE PTR [eax-0x30],0xc3
  4186f4:	fmul   st,st(7)
  4186f6:	imul   esp,DWORD PTR [ecx-0x1b42981c],0x71
  4186fd:	dec    esp
  4186fe:	cmp    BYTE PTR [ebx-0x7f],bl
  418701:	cmp    eax,0x389d74f3
  418706:	ja     0x4186aa
  418708:	or     al,0x32
  41870a:	outs   dx,DWORD PTR ds:[esi]
  41870b:	xor    al,0x1c
  41870d:	pushf  
  41870e:	inc    edx
  41870f:	test   BYTE PTR [ecx],cl
  418711:	scas   al,BYTE PTR es:[edi]
  418712:	jae    0x418719
  418714:	or     edx,edi
  418716:	bound  edi,QWORD PTR [ecx-0x57]
  418719:	and    esi,DWORD PTR es:[bx-0x8]
  41871e:	aaa    
  41871f:	dec    BYTE PTR [ecx]
  418721:	push   eax
  418722:	sbb    BYTE PTR [esi+ebx*8],dl
  418725:	cs jae 0x4187a6
  418728:	jl     0x4186f9
  41872a:	out    0x88,eax
  41872c:	mov    bh,0xb0
  41872e:	ja     0x4186b8
  418730:	in     al,dx
  418731:	jbe    0x418767
  418733:	dec    ecx
  418734:	aas    
  418735:	sub    BYTE PTR [edx+0x68],0x3b
  418739:	and    DWORD PTR [edx],esp
  41873b:	nop
  41873c:	out    0xd9,eax
  41873e:	test   BYTE PTR [eax+0x5e1fc7cc],cl
  418744:	je     0x41876d
  418746:	das    
  418747:	imul   edi,DWORD PTR [esi],0x7eb72c03
  41874d:	les    ecx,FWORD PTR [esi+0x7d]
  418750:	clc    
  418751:	pop    eax
  418752:	mov    edx,edi
  418754:	mov    eax,0x6faa2865
  418759:	and    esi,ebp
  41875b:	cmp    al,BYTE PTR [esp+edx*8-0x287ff25]
  418762:	mov    eax,0x2374809a
  418767:	stc    
  418768:	mov    al,ds:0x498cf3d4
  41876d:	ffree  st(5)
  41876f:	push   0xfffffff0
  418771:	cwde   
  418772:	mov    al,0x13
  418774:	out    dx,eax
  418775:	sub    eax,0x182b8c70
  41877a:	mov    esp,0x136b38ac
  41877f:	mov    bl,0xf2
  418782:	or     al,0xa1
  418784:	dec    esp
  418785:	cdq    
  418786:	push   edx
  418787:	adc    BYTE PTR [edi+0x56a18f48],bl
  41878d:	or     al,0x45
  41878f:	lods   eax,DWORD PTR ds:[esi]
  418790:	xchg   esp,eax
  418791:	retf   0x64d3
  418794:	sub    DWORD PTR [ecx-0x1c],ecx
  418797:	xor    al,BYTE PTR [edi]
  418799:	push   esp
  41879a:	inc    eax
  41879b:	lock cwde 
  41879d:	dec    esp
  41879e:	cwde   
  41879f:	xor    BYTE PTR [eax-0x6c],bl
  4187a2:	and    ebx,DWORD PTR [eax+ebp*4+0x53]
  4187a6:	les    esi,FWORD PTR [eax-0x3e4a53f0]
  4187ac:	and    BYTE PTR [esi-0x4b5acb5f],dl
  4187b2:	add    DWORD PTR [eax+ebp*2-0x42bbf55],eax
  4187b9:	pop    ebp
  4187ba:	es inc eax
  4187bc:	sub    dh,BYTE PTR [esi]
  4187be:	xor    BYTE PTR [edx+ebx*1],dl
  4187c1:	lock test cl,bh
  4187c4:	lods   al,BYTE PTR ds:[esi]
  4187c5:	mov    al,0xa0
  4187c7:	mov    ecx,0x60c7e0fc
  4187cc:	test   eax,0x37205fd6
  4187d1:	lock clc 
  4187d3:	pop    ss
  4187d4:	stc    
  4187d5:	pop    esp
  4187d6:	ss stc 
  4187d8:	stos   DWORD PTR es:[edi],eax
  4187d9:	ja     0x41883d
  4187db:	or     BYTE PTR [ebx],al
  4187dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187de:	pushf  
  4187df:	mov    esp,0xd7246062
  4187e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187e5:	adc    al,0xb9
  4187e7:	mov    al,ds:0xb14340fc
  4187ec:	and    al,0x35
  4187ee:	neg    ah
  4187f0:	imul   edi,DWORD PTR [ecx+0xca561e4],0xffffffaa
  4187f7:	jno    0x4187b9
  4187f9:	inc    ecx
  4187fa:	cld    
  4187fb:	pop    esp
  4187fc:	inc    ecx
  4187fd:	cld    
  4187fe:	pop    ecx
  4187ff:	cld    
  418800:	xor    DWORD PTR [edx+esi*1],eax
  418803:	cmp    eax,0xb7163b50
  418808:	sbb    eax,0xdbb44b84
  41880d:	xchg   ebp,esp
  41880f:	sbb    al,0x51
  418811:	mov    edi,0xa2d43b28
  418816:	mov    ecx,0x1c28e4dd
  41881b:	xor    esi,DWORD PTR [edi]
  41881d:	xchg   esi,eax
  41881e:	dec    edi
  41881f:	(bad)  
  418820:	or     ebp,eax
  418822:	outs   dx,DWORD PTR ds:[esi]
  418823:	jb     0x41886b
  418825:	inc    ebp
  418826:	rcr    BYTE PTR [ebx],0x29
  418829:	push   0xba66301f
  41882e:	sbb    BYTE PTR [edi+0xf62e843],bl
  418834:	adc    BYTE PTR [eax+0x7c],bh
  418837:	inc    eax
  418838:	xchg   BYTE PTR [ecx+0x1e95928d],cl
  41883e:	popa   
  41883f:	and    al,0x37
  418841:	sub    al,0x33
  418843:	cmp    edi,DWORD PTR [eax]
  418845:	xor    al,BYTE PTR [eax-0x22]
  418848:	cmp    BYTE PTR [eax],al
  41884a:	add    BYTE PTR [eax],al
  41884c:	add    BYTE PTR [eax],al
  41884e:	add    BYTE PTR [eax],al
  418850:	test   DWORD PTR [edx],ebx
  418852:	call   0x46d5a6
  418857:	add    BYTE PTR [eax],al
  418859:	add    BYTE PTR [eax],al
  41885b:	add    BYTE PTR [ebp+0x5],cl
  41885e:	add    BYTE PTR [eax],al
  418860:	verr   WORD PTR [esi]
  418863:	jl     0x418865
  418865:	add    dh,BYTE PTR [esi]
  418867:	or     BYTE PTR [eax],al
  418869:	add    al,al
  41886b:	dec    ecx
  41886c:	adc    al,BYTE PTR [esi]
  41886e:	or     ecx,DWORD PTR [ecx+edx*1]
  418871:	fcomp  DWORD PTR [eax]
  418873:	sbb    al,0x75
  418875:	scas   eax,DWORD PTR es:[edi]
  418876:	les    ebp,FWORD PTR [ebx+esi*4]
  418879:	fsubr  DWORD PTR [eax]
  41887b:	outs   dx,DWORD PTR ds:[esi]
  41887c:	push   ss
  41887d:	adc    al,0xa0
  41887f:	sahf   
  418880:	push   eax
  418881:	test   al,0xa7
  418883:	mov    ds:0x9a5bbceb,eax
  418888:	repz je 0x418847
  41888b:	js     0x418896
  41888d:	icebp  
  41888e:	js     0x418899
  418890:	dec    ebx
  418891:	fwait
  418892:	cwde   
  418893:	sbb    BYTE PTR [edx+0x62302c28],al
  418899:	outs   dx,BYTE PTR ds:[esi]
  41889a:	push   esi
  41889b:	pusha  
  41889c:	inc    edi
  41889d:	push   ds
  41889e:	es push ecx
  4188a0:	cmp    al,0x58
  4188a2:	je     0x418884
  4188a4:	aaa    
  4188a5:	push   0x88dc6593
  4188aa:	cmp    al,0x80
  4188ac:	pop    es
  4188ad:	jo     0x41884b
  4188af:	outs   dx,DWORD PTR ds:[esi]
  4188b0:	fwait
  4188b1:	sbb    al,0xe
  4188b3:	mov    al,ds:0x4ce92184
  4188b8:	mov    ah,0x33
  4188ba:	jmp    0x26031efb
  4188bf:	mov    al,ds:0x63954cb0
  4188c4:	push   0xfd04706c
  4188c9:	mov    esp,0x7df84f5
  4188ce:	in     eax,0x60
  4188d0:	sbb    eax,0xa8f4d46a
  4188d5:	sti    
  4188d6:	out    0xe4,al
  4188d8:	sbb    DWORD PTR [eax-0x23377866],ecx
  4188de:	sub    BYTE PTR [ebx],0xcd
  4188e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188e2:	loopne 0x418870
  4188e4:	arpl   WORD PTR [ecx+esi*8],dx
  4188e7:	js     0x41886c
  4188e9:	hlt    
  4188ea:	mov    esi,0x1d6cc103
  4188ef:	in     eax,dx
  4188f0:	pushf  
  4188f1:	pop    eax
  4188f2:	sub    ebp,ebx
  4188f4:	push   esp
  4188f5:	cmp    esp,DWORD PTR [ebx+0x50]
  4188f8:	out    dx,al
  4188f9:	enter  0xc8cc,0xcc
  4188fd:	sar    bl,1
  4188ff:	iret   
  418900:	push   edi
  418901:	lods   eax,DWORD PTR ds:[esi]
  418902:	call   0xfce6f0ef
  418907:	jae    0x4188c2
  418909:	clc    
  41890a:	push   ebp
  41890b:	pop    edx
  41890c:	or     al,0x47
  41890e:	cld    
  41890f:	jne    0x41896e
  418911:	pop    ebx
  418912:	push   edi
  418913:	das    
  418914:	je     0x41893a
  418916:	mov    ah,0x35
  418918:	test   DWORD PTR [edx+ecx*8],esi
  41891b:	lock xchg DWORD PTR [esi+0x60eae3d9],edi
  418922:	call   0xc33638fa
  418927:	lods   eax,DWORD PTR ds:[esi]
  418928:	call   DWORD PTR [ecx]
  41892a:	mov    al,0x4e
  41892c:	loope  0x418942
  41892e:	push   edx
  41892f:	imul   edx,eax,0x2d2d3daf
  418935:	xor    BYTE PTR [bp+0x40],dl
  418939:	call   0xbb82:0x1e5fcdcf
  418940:	arpl   WORD PTR fs:[ecx],cx
  418943:	lods   eax,DWORD PTR ds:[esi]
  418944:	aaa    
  418945:	pop    es
  418946:	jmp    0xce98ff7
  41894b:	inc    edi
  41894c:	arpl   bp,ax
  41894e:	adc    edx,DWORD PTR [esi+0x7053dcac]
  418954:	je     0x41898e
  418956:	ret    
  418957:	fs leave 
  418959:	mov    al,ds:0x52c4564c
  41895e:	arpl   WORD PTR [eax+0x60],sp
  418961:	fdivrp st(4),st
  418963:	idiv   eax
  418965:	inc    BYTE PTR [ecx]
  418967:	add    eax,0x14110e34
  41896c:	cwde   
  41896d:	sbb    BYTE PTR [eax+eiz*2+0x3c97ab28],ah
  418974:	outs   dx,BYTE PTR ds:[esi]
  418975:	sbb    al,0xcd
  418977:	add    DWORD PTR [eax+0xd4dd1c],esi
  41897d:	in     al,0x61
  41897f:	jne    0x418969
  418981:	call   FWORD PTR [eax-0x1502791d]
  418987:	mov    WORD PTR ds:0x42e0b04c,cs
  41898d:	stos   DWORD PTR es:[edi],eax
  41898e:	popa   
  41898f:	aam    0x2c
  418991:	xor    esp,DWORD PTR [ebx-0x4d]
  418994:	cmp    al,0x15
  418996:	mov    esp,0x14249ecd
  41899b:	loope  0x4189ae
  41899d:	pusha  
  41899e:	ds push 0x704d166c
  4189a4:	or     DWORD PTR [esi-0x533bfc3c],esi
  4189aa:	sbb    DWORD PTR [ecx],ebp
  4189ac:	mov    al,fs:0x42ac93b2
  4189b2:	(bad)  
  4189b3:	xchg   ecx,eax
  4189b4:	cmp    eax,0x151c4978
  4189b9:	adc    al,0x58
  4189bb:	pop    esp
  4189bc:	adc    eax,0xf067d644
  4189c1:	imul   ebx,DWORD PTR [esi],0x7c
  4189c4:	mov    ecx,0xe59489f0
  4189c9:	adc    BYTE PTR [ebx],0xd1
  4189cc:	mov    al,ds:0x3bad21ac
  4189d1:	icebp  
  4189d2:	mov    ah,0x35
  4189d4:	shl    cl,1
  4189d6:	retf   0x8ee6
  4189d9:	push   ebp
  4189da:	scas   eax,DWORD PTR es:[edi]
  4189db:	push   edi
  4189dc:	in     eax,dx
  4189dd:	out    0xdd,al
  4189df:	sbb    dh,BYTE PTR [ebx+ecx*4+0x7c]
  4189e3:	or     eax,0x50bf0b05
  4189e8:	xchg   esi,eax
  4189e9:	xchg   ebx,eax
  4189ea:	popf   
  4189eb:	in     al,0xa0
  4189ed:	test   al,0x28
  4189ef:	mul    DWORD PTR [eax+0x2540bcd2]
  4189f5:	mov    al,ds:0xcd2bc54c
  4189fa:	push   esp
  4189fb:	and    DWORD PTR [ebx+edi*8+0x2c],0xffffffad
  418a00:	mov    ah,0x90
  418a02:	nop
  418a03:	add    BYTE PTR [edi],0xc9
  418a06:	and    eax,0x41b8d878
  418a0b:	out    0xa8,al
  418a0d:	adc    dh,BYTE PTR [esp+esi*2-0x3a7f2954]
  418a14:	inc    ebp
  418a15:	mov    DWORD PTR [esi+ebp*2],ebp
  418a18:	cwde   
  418a19:	pop    esp
  418a1a:	jecxz  0x418a89
  418a1c:	enter  0xc99,0x1c
  418a20:	cdq    
  418a21:	test   cl,0x70
  418a24:	sbb    BYTE PTR ds:0x69e06110,dh
  418a2a:	sub    DWORD PTR ds:0x9545d05d,ebx
  418a30:	js     0x4189e9
  418a32:	mov    al,0xc2
  418a34:	or     edx,ebp
  418a36:	push   ebp
  418a37:	aad    0x23
  418a39:	loopne 0x418a1f
  418a3b:	in     al,dx
  418a3c:	addr16 std 
  418a3e:	mov    ch,0xfa
  418a40:	jne    0x418a51
  418a42:	in     al,dx
  418a43:	and    DWORD PTR [ecx],eax
  418a45:	adc    BYTE PTR [eax+ebx*1],dl
  418a48:	xchg   edi,eax
  418a49:	ror    ah,1
  418a4b:	sub    ah,BYTE PTR [ebx]
  418a4d:	xor    ah,dh
  418a4f:	cmp    BYTE PTR [edi],dh
  418a51:	mov    al,0xcd
  418a53:	aas    
  418a54:	dec    eax
  418a55:	fidiv  DWORD PTR [edx+ebx*4+0x43]
  418a59:	pusha  
  418a5a:	cld    
  418a5b:	dec    ebp
  418a5c:	hlt    
  418a5d:	add    al,0xba
  418a5f:	cld    
  418a60:	xor    eax,ecx
  418a62:	or     DWORD PTR [esp+ebx*4],ecx
  418a65:	mov    ch,0x58
  418a67:	daa    
  418a68:	arpl   WORD PTR [esi+edi*2],sp
  418a6b:	jnp    0x418aae
  418a6d:	mov    ah,0xbb
  418a6f:	cld    
  418a70:	xor    al,0x2c
  418a72:	or     eax,esp
  418a74:	xchg   edx,eax
  418a75:	sub    al,0x9a
  418a77:	aam    0x90
  418a79:	gs push 0x5fd23e2
  418a7f:	nop
  418a80:	or     eax,0xd38c7cf9
  418a85:	pop    ebp
  418a86:	in     al,dx
  418a87:	add    DWORD PTR [edi+0x4d],esp
  418a8a:	stos   DWORD PTR es:[edi],eax
  418a8b:	fcom   DWORD PTR [esi]
  418a8d:	add    al,0x7d
  418a8f:	pop    edx
  418a90:	push   ecx
  418a91:	clc    
  418a92:	dec    ebx
  418a93:	sar    BYTE PTR [esi+0x15],1
  418a96:	mov    al,0x60
  418a98:	xor    eax,0x31fd3e3e
  418a9d:	mov    BYTE PTR [ebx+ecx*1],ch
  418aa0:	and    al,0x47
  418aa2:	fnstsw WORD PTR [eax-0x20]
  418aa5:	inc    ebp
  418aa6:	sbb    eax,0x9ea8b0f4
  418aab:	mov    esp,0x3b0063a6
  418ab0:	or     bl,cl
  418ab2:	arpl   WORD PTR [ecx+0x475e9db0],bx
  418ab8:	sub    BYTE PTR [esi-0xf],cl
  418abb:	xor    edx,edi
  418abd:	sti    
  418abe:	cmp    BYTE PTR [ecx+0x68dd0b0d],0x50
  418ac5:	ret    
  418ac6:	xchg   ebx,eax
  418ac7:	imul   ebp,DWORD PTR [eax-0x3d4a715],0xd88309b4
  418ad1:	popf   
  418ad2:	cmp    DWORD PTR [esi+ecx*4],0xffffff9d
  418ad6:	jge    0x418a88
  418ad8:	pop    edi
  418ad9:	mov    al,0xfb
  418adb:	js     0x418b31
  418add:	cmp    DWORD PTR [edx],0xb2123b89
  418ae3:	into   
  418ae4:	pop    ss
  418ae5:	xchg   ebp,eax
  418ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ae7:	mov    ?,WORD PTR [edi+eiz*8-0x7f526f24]
  418aee:	add    eax,0xffffff9c
  418af1:	das    
  418af2:	push   esi
  418af3:	push   cs
  418af4:	push   ds
  418af5:	push   ecx
  418af6:	jmp    0x15b58fb6
  418afb:	cmp    ebx,esp
  418afd:	add    DWORD PTR [ebp+0x67a7924c],eax
  418b03:	adc    eax,0x1894809d
  418b08:	repz mov ah,0xb8
  418b0b:	mov    edx,0x48acc787
  418b10:	fild   DWORD PTR [ebp-0xa1f28a4]
  418b16:	add    BYTE PTR [ebx+eiz*2-0x4a],0xf8
  418b1b:	adc    al,0x51
  418b1d:	add    DWORD PTR [ebx+0x14973800],0xd461e715
  418b27:	in     eax,dx
  418b28:	inc    ebx
  418b29:	xor    BYTE PTR [edi-0x35],dl
  418b2c:	dec    edi
  418b2d:	mov    bl,ch
  418b2f:	cmp    dh,bh
  418b31:	xor    al,0x9d
  418b33:	fdiv   QWORD PTR ds:0x8b55b24
  418b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b3a:	mov    edi,0x42c857b8
  418b3f:	xchg   edx,eax
  418b40:	sbb    bl,BYTE PTR [eax+0x48cc1797]
  418b46:	sti    
  418b47:	iret   
  418b48:	retf   
  418b49:	cmp    BYTE PTR [eax+eax*2+0x5e],bh
  418b4d:	ret    
  418b4e:	dec    ebx
  418b4f:	fst    QWORD PTR [eax+0x18]
  418b52:	and    DWORD PTR [eax+edi*8],eax
  418b55:	jmp    0xfce1efd5
  418b5a:	push   es
  418b5b:	mov    DWORD PTR [edi+0xb942184],eax
  418b61:	dec    ebp
  418b62:	fcomip st,st(6)
  418b64:	call   0xb346bd9f
  418b69:	and    DWORD PTR [esi-0x30],edx
  418b6c:	mov    DWORD PTR [ecx+edx*8+0xd],edi
  418b70:	mov    ebx,esp
  418b72:	jmp    0xf832:0x8e948033
  418b79:	pop    esp
  418b7a:	adc    BYTE PTR [ecx+0x1af47d4c],0x98
  418b81:	addr16 (bad) 
  418b83:	daa    
  418b84:	int3   
  418b85:	cmp    dh,BYTE PTR [esi]
  418b87:	xor    bl,bl
  418b89:	dec    edx
  418b8a:	push   eax
  418b8b:	or     BYTE PTR [ebp-0x292cae4e],cl
  418b91:	jmp    0x287e:0x91eb6286
  418b98:	adc    DWORD PTR [ecx+0x64],0xffffff82
  418b9c:	addr16 jae 0x418b26
  418b9f:	fcomp  DWORD PTR [ebx+0x9a2e0f2]
  418ba5:	je     0x418bd9
  418ba7:	mov    esi,0x5542674d
  418bac:	aad    0x22
  418bae:	push   es
  418baf:	pop    es
  418bb0:	or     DWORD PTR ds:0xff23418c,esi
  418bb6:	or     DWORD PTR gs:[ecx-0x45d02164],eax
  418bbd:	pop    ds
  418bbe:	mov    ebx,0x89e427e1
  418bc3:	mov    bh,BYTE PTR [edi-0x6c40050b]
  418bc9:	xchg   ebx,eax
  418bca:	and    cl,ah
  418bcc:	xor    DWORD PTR [ebp+0x5b4c6c0c],0xffffffac
  418bd3:	cmc    
  418bd4:	adc    al,0xf6
  418bd6:	jmp    DWORD PTR [eax-0x75]
  418bd9:	mov    ebx,0xdcf49557
  418bde:	mov    dh,0xc0
  418be0:	lds    ebp,FWORD PTR ds:0x8b97c465
  418be6:	cld    
  418be7:	adc    cl,BYTE PTR [edi+0x9]
  418bea:	cmp    esp,ebp
  418bec:	call   0xe4a722e9
  418bf1:	cmp    bl,BYTE PTR [ecx+0x77aea5e5]
  418bf7:	mov    DWORD PTR [ebx],0x627c5e9c
  418bfd:	inc    edx
  418bfe:	and    cl,cl
  418c00:	and    esi,DWORD PTR [edi+eax*2+0x24]
  418c04:	arpl   WORD PTR [edi-0x2af778e5],sp
  418c0a:	jmp    0x6106aa11
  418c0f:	call   0xf152b9bc
  418c14:	jae    0x418c93
  418c16:	ret    0xea1d
  418c19:	fwait
  418c1a:	ror    DWORD PTR ds:0xe5f0e34a,1
  418c20:	xor    DWORD PTR [edx],esi
  418c22:	xchg   ebp,eax
  418c23:	fwait
  418c24:	popf   
  418c25:	mov    ebx,0xca8eeda5
  418c2a:	push   es
  418c2b:	clc    
  418c2c:	lods   al,BYTE PTR ds:[esi]
  418c2d:	add    edi,eax
  418c2f:	mov    esi,esi
  418c31:	mov    ch,0xc5
  418c33:	cmp    esi,DWORD PTR [ebx]
  418c35:	mov    al,ds:0xef57e21e
  418c3a:	or     eax,0x767d05ff
  418c3f:	xlat   BYTE PTR ds:[ebx]
  418c40:	xor    eax,0xebaa2dd8
  418c45:	mov    al,ds:0xbc90a25d
  418c4a:	shl    DWORD PTR [ebp+0x61f11b35],0x0
  418c51:	in     eax,dx
  418c52:	cli    
  418c53:	add    ebx,DWORD PTR [ecx]
  418c55:	loopne 0x418cc0
  418c57:	pop    edx
  418c58:	fwait
  418c59:	in     al,0x18
  418c5b:	or     BYTE PTR [eax-0x4357d82e],dl
  418c61:	adc    al,0x32
  418c63:	int    0xf8
  418c65:	xor    BYTE PTR [eax-0x6],cl
  418c68:	adc    ch,dl
  418c6a:	call   0x5d8d:0xb52bea14
  418c71:	pushf  
  418c72:	pop    eax
  418c73:	cmp    ebx,0x3b
  418c76:	lds    ebx,FWORD PTR [esi+0x34]
  418c79:	sahf   
  418c7a:	push   0xd3a3241d
  418c7f:	mov    edx,0x920f3730
  418c84:	dec    ebx
  418c85:	dec    eax
  418c86:	cli    
  418c87:	nop
  418c88:	mov    ds:0x71155d99,al
  418c8d:	(bad)  
  418c8e:	outs   dx,BYTE PTR ds:[esi]
  418c8f:	jbe    0x418d05
  418c91:	jo     0x418c1e
  418c93:	jbe    0x418c77
  418c95:	xchg   DWORD PTR [edx],esi
  418c97:	add    dl,BYTE PTR [eax+ecx*8+0x4aa4e27c]
  418c9e:	mov    ecx,0xabac7320
  418ca3:	push   edi
  418ca4:	neg    BYTE PTR [eax-0x2b]
  418ca7:	push   esi
  418ca8:	fiadd  DWORD PTR [edx+eiz*8]
  418cab:	pushw  0x3b68
  418caf:	xor    eax,0xf67c3143
  418cb4:	dec    ebp
  418cb5:	int    0x52
  418cb7:	cwde   
  418cb8:	stos   DWORD PTR es:[edi],eax
  418cb9:	dec    esi
  418cba:	div    esi
  418cbc:	clc    
  418cbd:	lods   eax,DWORD PTR ds:[esi]
  418cbe:	mov    ch,0x39
  418cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cc1:	into   
  418cc2:	shl    ecx,0x77
  418cc5:	or     al,0x2f
  418cc7:	js     0x418ccc
  418cc9:	push   ebx
  418cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ccb:	aaa    
  418ccc:	pop    ds
  418ccd:	std    
  418cce:	out    dx,eax
  418ccf:	js     0x418d4d
  418cd1:	and    eax,eax
  418cd3:	dec    ebx
  418cd4:	clc    
  418cd5:	mov    cl,0x91
  418cd7:	mov    eax,0xef35abf7
  418cdc:	es adc ax,0x9cf8
  418ce1:	rol    DWORD PTR [ebx],0xcd
  418ce4:	int    0xd4
  418ce6:	(bad)  
  418ce8:	fadd   QWORD PTR [eax-0x19]
  418ceb:	in     al,0x4
  418ced:	push   ebp
  418cee:	and    dh,BYTE PTR [ebx-0x6b]
  418cf1:	int3   
  418cf2:	mov    ecx,0x5fc691ec
  418cf7:	cdq    
  418cf8:	popa   
  418cf9:	mov    al,ds:0xa14faca9
  418cfe:	retf   0x4000
  418d01:	int3   
  418d02:	bswap  ecx
  418d04:	adc    esi,edx
  418d06:	(bad)  
  418d08:	add    BYTE PTR [ecx+0x2b],ah
  418d0b:	out    dx,al
  418d0c:	cmp    al,0x96
  418d0e:	push   ebp
  418d0f:	jge    0x418d0a
  418d11:	adc    ecx,DWORD PTR [eax]
  418d13:	or     al,0xd0
  418d15:	xor    al,0x6c
  418d17:	or     DWORD PTR [ecx-0x4bae67af],esp
  418d1d:	mov    edi,0xbd0d4039
  418d22:	ret    0x14e3
  418d25:	sbb    esp,DWORD PTR [ecx+eiz*1-0x1]
  418d29:	lock das 
  418d2b:	dec    eax
  418d2c:	neg    DWORD PTR [ecx-0x4]
  418d2f:	jmp    0x383d:0x30018315
  418d36:	cs ja  0x418dad
  418d39:	call   0x95d91d41
  418d3e:	gs retf 
  418d40:	push   es
  418d41:	jne    0x418d34
  418d43:	pop    es
  418d44:	daa    
  418d45:	or     ebx,ebp
  418d47:	push   ebx
  418d48:	dec    eax
  418d49:	jmp    0xaaf449d2
  418d4e:	mov    esi,0xc7f302e5
  418d53:	push   ebp
  418d54:	int    0x24
  418d56:	add    BYTE PTR [ebx],ch
  418d58:	sahf   
  418d59:	mov    esp,0xe979b2d0
  418d5e:	aad    0x8c
  418d60:	or     DWORD PTR [eax+edx*2+0x7e5cae67],0x570eab3b
  418d6b:	push   edi
  418d6c:	std    
  418d6d:	outs   dx,DWORD PTR ds:[esi]
  418d6e:	inc    ebp
  418d6f:	mov    ebx,0x1555112f
  418d74:	aas    
  418d75:	and    DWORD PTR [esi],esp
  418d77:	or     eax,0xfb16f02d
  418d7c:	ins    BYTE PTR es:[edi],dx
  418d7d:	int    0xd
  418d7f:	dec    eax
  418d80:	fidiv  WORD PTR [eax+0x53]
  418d83:	sar    DWORD PTR [eax+eiz*2],0xc7
  418d87:	cmp    eax,0x18d9700c
  418d8c:	jl     0x418dc5
  418d8e:	in     al,0x88
  418d90:	xor    al,dh
  418d92:	xchg   esp,eax
  418d93:	cwde   
  418d94:	pushf  
  418d95:	and    DWORD PTR [ecx],ebp
  418d97:	sub    eax,0x393d3635
  418d9c:	inc    ebx
  418d9d:	dec    edx
  418d9e:	dec    ebp
  418d9f:	push   ebx
  418da0:	push   eax
  418da1:	pop    ebx
  418da2:	pop    eax
  418da3:	push   ebp
  418da4:	pusha  
  418da5:	mov    al,0x3a
	...
  418daf:	add    BYTE PTR [edx-0x1eb908e9],cl
  418db5:	add    al,0x0
  418db7:	add    BYTE PTR [eax],al
  418db9:	add    BYTE PTR [eax],al
  418dbb:	add    cl,ah
  418dbd:	add    al,0x0
  418dbf:	add    BYTE PTR [eax],dl
  418dc1:	add    BYTE PTR [esi],ah
  418dc3:	jl     0x418dc5
  418dc5:	add    dh,BYTE PTR [esi]
  418dc7:	or     BYTE PTR [eax],al
  418dc9:	add    BYTE PTR [eax+ecx*2],dh
  418dcc:	adc    al,BYTE PTR [ecx]
  418dce:	add    DWORD PTR [esp+edx*1],ecx
  418dd1:	fcomp  DWORD PTR [esp+ebx*1]
  418dd4:	jne    0x418d85
  418dd6:	les    ebp,FWORD PTR [ebx+esi*4]
  418dd9:	fcomp  DWORD PTR [ebx*4+0x4c0ab444]
  418de0:	push   eax
  418de1:	addr16 popf 
  418de3:	aad    0x25
  418de5:	cwde   
  418de6:	jecxz  0x418e11
  418de8:	js     0x418e5e
  418dea:	adc    bh,BYTE PTR [ecx-0x16]
  418ded:	pushf  
  418dee:	add    eax,0x98c574c1
  418df3:	adc    DWORD PTR [ecx-0xc],esi
  418df6:	jle    0x418e58
  418df8:	retf   
  418df9:	sub    eax,0x8b54088
  418dfe:	dec    esp
  418dff:	aad    0x94
  418e01:	and    BYTE PTR [edi-0x15],al
  418e04:	fs sub eax,0x8839fb80
  418e0a:	cmc    
  418e0b:	xchg   BYTE PTR ds:0xa794c288,cl
  418e11:	pop    eax
  418e12:	pop    ss
  418e13:	in     eax,dx
  418e14:	pop    eax
  418e15:	fwait
  418e16:	lods   al,BYTE PTR ds:[esi]
  418e17:	jge    0x418e75
  418e19:	test   eax,0xc7c4c0a2
  418e1e:	mov    ch,0x74
  418e20:	add    eax,0x6862a79f
  418e25:	ins    BYTE PTR es:[edi],dx
  418e26:	jo     0x418ddb
  418e28:	outs   dx,BYTE PTR ds:[esi]
  418e2a:	test   BYTE PTR [ebp-0x6b6eca7c],al
  418e30:	nop
  418e31:	mov    eax,ds:0xace8a4b7
  418e36:	jo     0x418df8
  418e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e39:	xor    esp,0xf4b9c4c4
  418e3f:	into   
  418e40:	popa   
  418e41:	fstp   st(6)
  418e43:	outs   dx,DWORD PTR ds:[esi]
  418e44:	sub    edi,ebp
  418e46:	inc    eax
  418e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e48:	popa   
  418e49:	jmp    0x93774ad5
  418e4e:	pushf  
  418e4f:	mov    WORD PTR [ebx-0x5c],ds
  418e52:	mov    al,0xab
  418e54:	and    edi,DWORD PTR [eax-0x4b8ac24c]
  418e5a:	sti    
  418e5b:	dec    ebp
  418e5c:	push   ds
  418e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e5e:	out    dx,eax
  418e5f:	fcomp  DWORD PTR [ecx+0x16]
  418e62:	nop
  418e63:	fbld   TBYTE PTR [edi-0xa]
  418e66:	jno    0x418ea0
  418e68:	cld    
  418e69:	je     0x418ea0
  418e6b:	bound  ecx,QWORD PTR [edx+edi*2]
  418e6e:	adc    al,0x48
  418e70:	repnz mov ah,0x25
  418e73:	jmp    0xb5fb72c0
  418e78:	stos   BYTE PTR es:[edi],al
  418e79:	les    ebx,FWORD PTR [ecx+0x64c12fe4]
  418e7f:	fistp  QWORD PTR [eax-0x11]
  418e82:	call   0xfc3c0834
  418e87:	cld    
  418e88:	xchg   edx,eax
  418e89:	add    al,0x36
  418e8b:	xchg   eax,ebx
  418e8d:	cld    
  418e8e:	adc    esp,edx
  418e90:	(bad)  
  418e92:	xlat   BYTE PTR ds:[ebx]
  418e93:	sub    eax,0x3d3a8c3a
  418e98:	push   ds
  418e99:	leave  
  418e9a:	sahf   
  418e9b:	fcmovbe st,st(4)
  418e9d:	pop    esp
  418e9e:	repz enter 0x9c24,0xb4
  418ea3:	jo     0x418e80
  418ea5:	lods   al,BYTE PTR ds:[esi]
  418ea6:	jl     0x418edb
  418ea8:	push   esp
  418ea9:	pop    esi
  418eaa:	dec    ebp
  418eab:	adc    dh,BYTE PTR [ebx]
  418ead:	dec    edx
  418eae:	xchg   ecx,eax
  418eaf:	ins    DWORD PTR es:[edi],dx
  418eb0:	fdivr  QWORD PTR [ecx+0x2f]
  418eb3:	sbb    eax,0xc1825a64
  418eb8:	and    al,0xb7
  418eba:	pop    ecx
  418ebb:	nop
  418ebc:	aam    0x77
  418ebe:	fild   WORD PTR [ebx]
  418ec0:	inc    esp
  418ec1:	jns    0x418f35
  418ec3:	xchg   edi,eax
  418ec4:	mov    ecx,?
  418ec6:	test   DWORD PTR [ebp+ebp*2-0x136019c1],eax
  418ecd:	fidivr DWORD PTR [esi-0x5b]
  418ed0:	add    edx,DWORD PTR [edx+0x39bc5e32]
  418ed6:	ret    0xcb21
  418ed9:	dec    ecx
  418eda:	add    ebx,DWORD PTR [edi+0x64]
  418edd:	ficom  WORD PTR [edi+0x68]
  418ee0:	ds ins BYTE PTR es:[edi],dx
  418ee2:	dec    eax
  418ee3:	push   ds
  418ee4:	cli    
  418ee5:	push   edx
  418ee6:	sub    DWORD PTR [ebp-0x36872f8],0xffffff9c
  418eed:	xor    BYTE PTR [eax+ebp*1-0x473b677f],ah
  418ef4:	jl     0x418f36
  418ef6:	(bad)  
  418ef7:	mov    al,0xb3
  418ef9:	and    al,0x53
  418efb:	pop    eax
  418efc:	loopne 0x418f2e
  418efe:	push   edi
  418eff:	test   al,0x87
  418f01:	cmp    eax,0x82d04470
  418f06:	(bad)  
  418f07:	fisttp WORD PTR [edi+eiz*8+0x202a97a0]
  418f0e:	dec    esp
  418f0f:	and    esp,ebp
  418f11:	shl    BYTE PTR [edi+eax*2+0x4c98c198],1
  418f18:	push   ebx
  418f19:	aad    0x64
  418f1b:	mov    bh,0x2
  418f1d:	dec    ebp
  418f1e:	ins    BYTE PTR es:[edi],dx
  418f1f:	push   edi
  418f20:	fwait
  418f21:	push   esp
  418f22:	(bad)  
  418f23:	std    
  418f24:	test   BYTE PTR ss:[ebx+ebx*4+0x77a69081],cl
  418f2c:	scas   al,BYTE PTR es:[edi]
  418f2d:	sbb    ch,BYTE PTR [edx]
  418f2f:	nop
  418f30:	jbe    0x418f91
  418f32:	mov    ebp,0x4d85c2fd
  418f37:	or     al,0xdf
  418f39:	push   ecx
  418f3a:	jno    0x418f19
  418f3c:	call   0x25ce7bea
  418f41:	cmc    
  418f42:	or     DWORD PTR [esp+ebp*2-0x66],esi
  418f46:	(bad)  
  418f47:	(bad)  
  418f48:	xchg   esp,eax
  418f49:	push   0x2da0641f
  418f4e:	pop    edx
  418f4f:	mov    edi,0xc038ba31
  418f54:	ret    0x479b
  418f57:	lea    esp,[eax]
  418f59:	push   ebp
  418f5a:	lahf   
  418f5b:	in     al,0xe6
  418f5d:	mov    edi,0x7385d62c
  418f62:	jmp    0x4f49ed9b
  418f67:	adc    al,cl
  418f69:	retf   0x5bf2
  418f6c:	mov    ebp,0xa7f431d4
  418f71:	aaa    
  418f72:	cmp    BYTE PTR [ecx+0x37],al
  418f75:	mov    eax,0xdcd6948c
  418f7a:	ins    DWORD PTR es:[edi],dx
  418f7b:	xchg   ecx,eax
  418f7c:	adc    BYTE PTR [edi+0x27],ah
  418f7f:	jge    0x418f26
  418f81:	add    al,0x4
  418f83:	in     al,dx
  418f84:	ins    BYTE PTR es:[edi],dx
  418f85:	dec    esi
  418f86:	pop    ds
  418f87:	xchg   ecx,eax
  418f88:	out    dx,al
  418f89:	imul   eax,DWORD PTR [edi+ebp*4],0xbfc86128
  418f90:	ins    DWORD PTR es:[edi],dx
  418f91:	int3   
  418f92:	mov    ds:0xef52c841,al
  418f97:	sbb    BYTE PTR [esi+0x69],dl
  418f9a:	fdiv   QWORD PTR [edi-0xecb059b]
  418fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fa1:	pop    ebx
  418fa2:	les    ebp,FWORD PTR [ebx-0x4c]
  418fa5:	rcr    BYTE PTR [edi-0x24],1
  418fa8:	pop    esp
  418fa9:	and    DWORD PTR [ebp+0x3b],0x6ab4217b
  418fb0:	ret    
  418fb1:	push   ebp
  418fb2:	ror    cl,0x5f
  418fb5:	sbb    eax,0x2c6907a8
  418fba:	loopne 0x418f6f
  418fbc:	mov    dl,0xd9
  418fbe:	mov    ds:0xdce27fd,eax
  418fc3:	out    0x98,eax
  418fc5:	mov    esp,0xe4d11c58
  418fca:	sub    dh,dl
  418fcc:	lock xor al,0x3b
  418fcf:	cmp    al,0x7d
  418fd1:	dec    esi
  418fd2:	inc    esp
  418fd3:	mov    WORD PTR [eax+0x45],ss
  418fd6:	cwde   
  418fd7:	pop    esp
  418fd8:	pusha  
  418fd9:	popa   
  418fda:	imul   ebp,DWORD PTR [ebp+0x10],0x85797a71
  418fe1:	xchg   DWORD PTR [edx],eax
  418fe3:	cmp    eax,0x718182a
  418fe8:	in     al,0x4f
  418fea:	sbb    esi,DWORD PTR cs:0x8575b751
  418ff1:	jbe    0x41900e
  418ff3:	cmp    dh,BYTE PTR [esp+ecx*2+0x36]
  418ff7:	push   0x12eed734
  418ffc:	mov    ds:0x44c05adb,al
  419001:	mov    cs,esp
  419003:	ret    0x6010
  419006:	sbb    al,0xa3
  419008:	repz clc 
  41900a:	sub    al,0x76
  41900c:	hlt    
  41900d:	cmp    eax,0x545dbb54
  419012:	adc    BYTE PTR [ebp-0x13],bl
  419015:	popf   
  419016:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  419018:	sub    DWORD PTR [ebx],edi
  41901a:	jge    0x419051
  41901c:	jo     0x41901b
  41901e:	not    bl
  419020:	mov    BYTE PTR [esi-0x65237fea],bh
  419026:	popa   
  419027:	stc    
  419028:	ret    0xd8ac
  41902b:	cld    
  41902c:	stc    
  41902d:	std    
  41902e:	nop
  41902f:	lods   al,BYTE PTR ds:[esi]
  419030:	mov    eax,0xadd4922c
  419035:	int3   
  419036:	out    0x6e,al
  419038:	sbb    al,dh
  41903a:	sub    eax,0xd67829f5
  41903f:	add    ebx,DWORD PTR [ecx+0x119892d1]
  419045:	in     eax,0x58
  419047:	clc    
  419048:	and    ebp,edi
  41904a:	inc    eax
  41904b:	jmp    0x8d4522fc
  419050:	xor    cl,dl
  419052:	sbb    ah,BYTE PTR [edi]
  419054:	leave  
  419055:	call   0xed25bc1f
  41905a:	jg     0x419019
  41905c:	add    al,0x0
  41905e:	inc    edx
  41905f:	add    ebp,0x3c
  419062:	ins    BYTE PTR es:[edi],dx
  419063:	int3   
  419064:	add    ebp,esp
  419066:	mov    edi,0xbc5531fd
  41906b:	jle    0x419033
  41906d:	mov    ah,0xbd
  41906f:	aad    0x5b
  419071:	fstp   DWORD PTR [ecx]
  419073:	shl    BYTE PTR [ecx+0x5b],cl
  419076:	call   0xfe13c863
  41907b:	std    
  41907c:	add    eax,DWORD PTR ds:0x9729e708
  419082:	push   0x420c2c76
  419087:	sub    al,0x62
  419089:	js     0x41901c
  41908b:	test   BYTE PTR [esi],al
  41908d:	in     eax,0xb8
  41908f:	into   
  419090:	cmc    
  419091:	sbb    edi,ebx
  419093:	mov    edi,0xf0e0e823
  419098:	std    
  419099:	jno    0x41904f
  41909b:	nop
  41909c:	add    bh,cl
  41909e:	dec    esp
  41909f:	sbb    ch,dl
  4190a1:	sbb    eax,0x586e02f
  4190a6:	ret    0xb58f
  4190a9:	or     BYTE PTR [esi+0x4c],bl
  4190ac:	and    al,0x4d
  4190ae:	push   ecx
  4190af:	aam    0x14
  4190b1:	pop    ecx
  4190b2:	call   0x38126ede
  4190b7:	stos   DWORD PTR es:[edi],eax
  4190b8:	pop    edi
  4190b9:	clc    
  4190ba:	test   DWORD PTR ds:0x4ff165c3,eax
  4190c0:	dec    ecx
  4190c1:	dec    edx
  4190c2:	sbb    BYTE PTR [edi+0x11f194d8],ch
  4190c8:	fsub   DWORD PTR [eax+eax*2]
  4190cb:	or     ecx,eax
  4190cd:	enter  0x1110,0x50
  4190d1:	sub    BYTE PTR [ebp-0x24],ah
  4190d4:	imul   ecx,DWORD PTR [edx+esi*2-0x7],0x45bbdcf3
  4190dc:	add    eax,0xe31ad578
  4190e1:	xor    eax,0x340f8b28
  4190e6:	mov    cl,0xf2
  4190e8:	std    
  4190e9:	dec    ecx
  4190ea:	inc    edx
  4190eb:	ret    
  4190ec:	sbb    DWORD PTR [ecx+ebx*8+0x58],eax
  4190f0:	adc    DWORD PTR [eax+0x35],ebp
  4190f3:	jecxz  0x419116
  4190f5:	jl     0x41911d
  4190f7:	repz jl 0x4190cf
  4190fa:	js     0x4190fd
  4190fc:	leave  
  4190fd:	cwde   
  4190fe:	pop    ds
  4190ff:	fisttp QWORD PTR [ebp+esi*8-0x4b0252dc]
  419106:	aaa    
  419107:	and    BYTE PTR [ebx],ah
  419109:	pop    ecx
  41910a:	push   eax
  41910b:	dec    ebp
  41910c:	sbb    al,0x52
  41910e:	fcmovbe st,st(7)
  419110:	mov    al,ds:0x8f9a5b40
  419115:	popa   
  419116:	js     0x419175
  419118:	xchg   edx,eax
  419119:	or     DWORD PTR [ebx],0xffffffc8
  41911c:	rcr    BYTE PTR [eax],cl
  41911e:	mov    ecx,0x1eabd0f8
  419123:	cmp    al,0x5c
  419125:	xchg   BYTE PTR [ebx*4+0xc1c51a4],dh
  41912c:	rcl    BYTE PTR [ecx+ebx*2+0x3c90ad53],1
  419133:	sti    
  419134:	test   edx,esi
  419136:	jns    0x419138
  419138:	xchg   BYTE PTR [edx+0x3],ch
  41913b:	popa   
  41913c:	xchg   esi,eax
  41913d:	fxtract 
  41913f:	push   edi
  419140:	push   ebp
  419141:	stos   BYTE PTR es:[edi],al
  419142:	lods   eax,DWORD PTR ds:[esi]
  419143:	scas   al,BYTE PTR es:[edi]
  419144:	pop    ecx
  419145:	mov    edx,0x48af6205
  41914a:	fnstsw WORD PTR ds:0xb2cd5dd6
  419150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419151:	push   0x7a79acfd
  419156:	in     eax,dx
  419157:	inc    esp
  419158:	dec    eax
  419159:	mov    WORD PTR [ebx+0x6117516c],fs
  41915f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419160:	lods   al,BYTE PTR ds:[esi]
  419161:	comiss xmm2,xmm7
  419164:	mov    ecx,0xc9a0b63e
  419169:	imul   edx,ebx,0x74
  41916c:	push   eax
  41916d:	xlat   BYTE PTR ds:[ebx]
  41916e:	and    ebp,0x78
  419171:	loope  0x419123
  419173:	in     eax,dx
  419174:	ficomp DWORD PTR [eax+eax*1+0x106c32ae]
  41917b:	inc    esi
  41917c:	js     0x41919a
  41917e:	dec    edx
  41917f:	inc    esp
  419180:	sub    bh,bl
  419182:	aam    0xb8
  419184:	jmp    0x419145
  419186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419187:	xlat   BYTE PTR ds:[ebx]
  419188:	int3   
  419189:	mov    eax,ds:0xebbc42b4
  41918e:	inc    edi
  41918f:	mov    ah,ch
  419191:	pop    edi
  419192:	and    DWORD PTR [eax+0x864bbfc],ebx
  419198:	retf   
  419199:	jo     0x4191af
  41919b:	aam    0xe3
  41919d:	sub    eax,0xc42f283b
  4191a2:	cmp    esi,edx
  4191a4:	jnp    0x4191a4
  4191a6:	ret    
  4191a7:	push   ds
  4191a8:	cmovb  esp,ecx
  4191ab:	(bad)  
  4191ad:	xchg   esp,eax
  4191ae:	repnz scas eax,DWORD PTR es:[edi]
  4191b0:	lock sub cl,0x94
  4191b4:	scas   al,BYTE PTR es:[edi]
  4191b5:	jo     0x41917f
  4191b7:	or     al,0x30
  4191b9:	cmp    BYTE PTR [eax-0x62],bh
  4191bc:	test   eax,0x147b2a66
  4191c1:	ss ds sub al,0x60
  4191c5:	inc    esi
  4191c6:	sub    BYTE PTR [edx],ch
  4191c8:	cmp    dl,BYTE PTR [eax+0x8]
  4191cb:	jecxz  0x4191a5
  4191cd:	push   0x39d12f60
  4191d2:	pop    ecx
  4191d3:	and    eax,0xefda22ec
  4191d8:	mov    ah,0xe7
  4191da:	lahf   
  4191db:	in     al,0x2c
  4191dd:	ja     0x4191eb
  4191df:	push   0x74345b17
  4191e4:	xor    DWORD PTR [ebx+0x68],eax
  4191e7:	push   esi
  4191e8:	pop    esp
  4191e9:	mov    ecx,0x65a7c0d6
  4191ee:	cmp    bh,al
  4191f0:	xchg   esp,eax
  4191f1:	and    bh,BYTE PTR [eax]
  4191f3:	faddp  st(0),st
  4191f5:	mov    WORD PTR [edi-0x2ca76f27],ss
  4191fb:	mov    ch,0xec
  4191fd:	sub    BYTE PTR [ebp-0x7760fb4c],bh
  419203:	inc    ebp
  419204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419205:	adc    ecx,edx
  419207:	mov    eax,0x475e1c78
  41920c:	das    
  41920d:	mov    dh,al
  41920f:	or     edi,DWORD PTR [ecx+0x14]
  419212:	fsub   DWORD PTR [ebp+ecx*4+0x73]
  419216:	test   esi,ebx
  419218:	adc    BYTE PTR [eax-0xcd6c004],bh
  41921e:	xor    eax,0x901ad854
  419223:	dec    esi
  419224:	femms  
  419226:	push   esp
  419227:	inc    esp
  419228:	pop    esp
  419229:	bound  ebx,QWORD PTR [ebx-0x84b5b83]
  41922f:	jp     0x419231
  419231:	and    BYTE PTR [ebp-0x579536fe],al
  419237:	cdq    
  419238:	xchg   ebx,eax
  419239:	in     al,0x20
  41923b:	adc    ebp,esp
  41923d:	test   al,0xbb
  41923f:	xlat   BYTE PTR ds:[ebx]
  419241:	rol    dh,0xf4
  419244:	(bad)  
  419246:	fistp  DWORD PTR [edi-0x41]
  419249:	add    ah,ah
  41924b:	arpl   WORD PTR [ecx+0x14],bp
  41924e:	cmc    
  41924f:	clc    
  419250:	xchg   BYTE PTR [edi],al
  419252:	jo     0x4191dd
  419254:	in     eax,0xbe
  419256:	sbb    esp,DWORD PTR [ecx]
  419258:	loop   0x4192a6
  41925a:	call   0x3dfd450c
  41925f:	mul    DWORD PTR [eax]
  419261:	(bad)  
  419262:	invd   
  419264:	aad    0x88
  419266:	mov    edx,0x49e4e3a1
  41926b:	in     eax,dx
  41926c:	icebp  
  41926d:	pop    ss
  41926e:	push   ds
  41926f:	clc    
  419270:	(bad)  
  419271:	adc    ch,BYTE PTR [ebx-0x3f]
  419274:	xchg   ebx,eax
  419275:	in     al,dx
  419276:	push   ds
  419277:	adc    esp,DWORD PTR [ebp-0x4ced76fa]
  41927d:	stc    
  41927e:	mov    edx,0x29d5a340
  419283:	aad    0xd1
  419285:	xor    ecx,ebx
  419287:	dec    edx
  419288:	mov    ebx,0xe3f1ee1e
  41928d:	cli    
  41928e:	sti    
  41928f:	sbb    DWORD PTR [esi],eax
  419291:	xor    eax,0x6815121a
  419296:	sbb    esi,ebx
  419298:	and    al,0x4e
  41929a:	xor    al,0x0
  41929c:	add    BYTE PTR [eax],al
  41929e:	add    BYTE PTR [eax],al
  4192a0:	sbb    DWORD PTR [ecx],0x41e4cdc
  4192a6:	add    BYTE PTR [eax],al
  4192a8:	add    BYTE PTR [eax],al
  4192aa:	add    BYTE PTR [eax],al
  4192ac:	push   ds
  4192ad:	add    al,0x0
  4192af:	add    BYTE PTR [ecx],dl
  4192b1:	add    BYTE PTR [esi],ah
  4192b3:	jl     0x4192b5
  4192b5:	add    dh,BYTE PTR [esi]
  4192b7:	or     BYTE PTR [eax],al
  4192b9:	add    cl,dh
  4192bb:	dec    eax
  4192bc:	add    BYTE PTR [eax+ecx*1],al
  4192bf:	retf   
  4192c0:	adc    eax,0x205f4248
  4192c5:	add    al,0x28
  4192c7:	sub    al,0x39
  4192c9:	xor    al,0x99
  4192cb:	cmp    eax,0x4c05cfc0
  4192d0:	lods   al,BYTE PTR ds:[esi]
  4192d1:	addr16 xchg ebp,eax
  4192d3:	mov    ah,0x77
  4192d5:	jb     0x41933f
  4192d7:	ins    BYTE PTR es:[edi],dx
  4192d8:	jo     0x4192d9
  4192da:	popf   
  4192db:	and    DWORD PTR [ebx+0xf],eax
  4192de:	or     eax,0x67946e68
  4192e3:	arpl   WORD PTR [edi+0x7a4529d0],sp
  4192e9:	mov    bl,0xb8
  4192eb:	lds    ebp,FWORD PTR [eax+ecx*2+0x2d94d564]
  4192f2:	inc    ecx
  4192f3:	mov    al,gs:0xb0796d7a
  4192f9:	popf   
  4192fa:	imul   eax,DWORD PTR [ebx-0x6e8bf41a],0x2399ec14
  419304:	pop    esp
  419305:	stos   BYTE PTR es:[edi],al
  419306:	fxch   st(2)
  419308:	mov    cl,0xf4
  41930a:	ss ret 0xcd
  41930e:	out    dx,al
  41930f:	push   edx
  419310:	adc    al,0x5a
  419312:	adc    eax,0x2ac8673c
  419317:	jo     0x41938a
  419319:	push   edi
  41931a:	adc    al,BYTE PTR [ebx-0x6d4e7426]
  419320:	xchg   ecx,eax
  419321:	mov    ebp,0x8dae75d0
  419326:	mov    dl,0xc1
  419328:	mov    dl,0xb9
  41932a:	loope  0x4192f8
  41932c:	leave  
  41932d:	rcl    dl,1
  41932f:	lock int 0xdc
  419332:	shr    DWORD PTR [edx+0x7cb8cdec],0x7c
  419339:	aad    0xf
  41933b:	mov    WORD PTR fs:[ebx],ss
  41933e:	js     0x4192fc
  419340:	mul    BYTE PTR [eax-0x4d3b5632]
  419346:	aam    0xb8
  419348:	popf   
  419349:	aas    
  41934a:	rol    DWORD PTR [eax+0x3c],1
  41934d:	nop
  41934e:	aam    0xd9
  419350:	pop    esp
  419351:	mov    al,ds:0x2ca965b5
  419356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419357:	pop    es
  419358:	jmp    0x4d3aeb5d
  41935d:	adc    BYTE PTR [ebx],bl
  41935f:	scas   eax,DWORD PTR es:[edi]
  419360:	in     eax,0x78
  419362:	test   al,0x2f
  419364:	dec    eax
  419365:	mov    esi,0x72cf82cf
  41936a:	inc    eax
  41936b:	int3   
  41936c:	add    al,0x44
  41936e:	cwde   
  41936f:	fcomp  QWORD PTR [edi]
  419371:	shl    BYTE PTR [ebp+0x28],0xe1
  419375:	hlt    
  419376:	sti    
  419377:	cmp    eax,DWORD PTR ds:0x10230a60
  41937d:	adc    eax,0x20214bb9
  419382:	sub    DWORD PTR [esi],eax
  419384:	ss cmp eax,0xcb49333a
  41938a:	retf   0x44d9
  41938d:	jb     0x4193e5
  41938f:	pusha  
  419390:	cli    
  419391:	pop    eax
  419392:	ins    BYTE PTR es:[edi],dx
  419393:	icebp  
  419394:	imul   edi,DWORD PTR [eax-0x3],0x80984ba
  41939b:	adc    BYTE PTR [edi],dl
  41939d:	sbb    DWORD PTR [ecx+eiz*1],ebx
  4193a0:	daa    
  4193a1:	sub    ebp,DWORD PTR [esi]
  4193a3:	xor    BYTE PTR ds:0xcf167bb9,dh
  4193a9:	cmp    eax,0x2c94d544
  4193ae:	pop    esp
  4193af:	or     al,0xe1
  4193b1:	sahf   
  4193b2:	test   BYTE PTR [ecx+ebp*4+0x38040094],bl
  4193b9:	or     al,0x10
  4193bb:	inc    esp
  4193bc:	jb     0x4193da
  4193be:	jb     0x41939b
  4193c0:	sub    al,0x39
  4193c2:	fdiv   DWORD PTR [esi-0x32b8b78c]
  4193c8:	dec    esi
  4193c9:	jg     0x4193db
  4193cb:	xchg   esp,eax
  4193cc:	push   es
  4193cd:	add    DWORD PTR [ebx+0x5aec69da],esp
  4193d3:	mov    edi,DWORD PTR [ecx+ebp*2+0x2c]
  4193d7:	add    al,0x82
  4193d9:	punpckhbw mm0,mm3
  4193dc:	imul   ebx,DWORD PTR [eax],0x4
  4193df:	daa    
  4193e0:	call   0xc10e:0xbda94cb0
  4193e7:	sub    ch,ch
  4193e9:	push   eax
  4193ea:	push   edi
  4193eb:	imul   ebp,DWORD PTR [edx+0x7e69a2eb],0x76
  4193f2:	je     0x41945e
  4193f4:	sub    DWORD PTR [ebx],eax
  4193f6:	or     BYTE PTR [edx+ecx*1-0x67e1686c],0xa2
  4193fe:	and    DWORD PTR [esp+edx*1+0x3cbc35e3],ebp
  419405:	inc    edi
  419406:	fsub   DWORD PTR [eax+edx*4+0x5a]
  41940a:	ja     0x4193a8
  41940c:	pusha  
  41940d:	pop    ebp
  41940e:	cmp    eax,0xb83770ac
  419413:	jl     0x4193e2
  419415:	inc    esp
  419416:	mov    dh,bl
  419418:	push   eax
  419419:	xchg   esp,eax
  41941a:	cwde   
  41941b:	pushf  
  41941c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41941d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41941e:	test   eax,0xbdb1b2a9
  419423:	mov    edi,0xccf7c1f6
  419428:	fcom   st(4)
  41942a:	fcomp  QWORD PTR [ebx+ebx*8]
  41942d:	fs mov WORD PTR ss:[eax+edi*8],fs
  419432:	test   ebp,0xc1cce28c
  419438:	(bad)  
  419439:	sbb    al,al
  41943b:	push   cs
  41943c:	inc    eax
  41943d:	sub    edx,DWORD PTR [ebp-0x8467250]
  419443:	xchg   esi,eax
  419444:	dec    eax
  419445:	icebp  
  419446:	mov    eax,ss
  419448:	mov    ch,0x2c
  41944a:	mov    esp,0xa489e672
  41944f:	jo     0x419446
  419451:	jp     0x419418
  419453:	ror    DWORD PTR ds:0x5a6f360d,0x9e
  41945a:	and    al,0x9e
  41945c:	push   0xffffffae
  41945e:	mov    ah,0x8f
  419460:	jp     0x419420
  419462:	inc    esp
  419463:	dec    DWORD PTR [ecx]
  419465:	into   
  419466:	fild   WORD PTR [ecx+0x24f8d3d8]
  41946c:	call   0xc935c539
  419471:	cmp    al,0x0
  419473:	cmp    BYTE PTR [ebp-0x34],dh
  419476:	adc    BYTE PTR [ebp-0x28],dl
  419479:	sbb    al,0xdf
  41947b:	sbb    eax,0xaff515fb
  419480:	cmc    
  419481:	xrelease lock and DWORD PTR [ebp+edi*4-0x10],ecx
  419487:	dec    ebx
  419488:	pop    esi
  419489:	(bad)  
  41948a:	call   0xc77481f7
  41948f:	dec    bh
  419491:	pop    es
  419492:	inc    edx
  419493:	cmp    cl,BYTE PTR [edx-0x20d72ddf]
  419499:	lods   eax,DWORD PTR ds:[esi]
  41949a:	ins    DWORD PTR es:[edi],dx
  41949b:	sub    bl,dh
  41949d:	in     eax,0xf4
  41949f:	adc    ebx,ecx
  4194a1:	add    BYTE PTR [esi+eiz*4-0x74],0x50
  4194a6:	mov    ds:0xf8607299,eax
  4194ab:	repnz cmc 
  4194ad:	xor    al,0xf8
  4194af:	add    esi,DWORD PTR [eax]
  4194b1:	jae    0x4194c3
  4194b3:	out    dx,al
  4194b4:	jne    0x4194f6
  4194b6:	dec    esi
  4194b7:	xchg   edi,eax
  4194b8:	and    ah,dl
  4194ba:	lods   eax,DWORD PTR ds:[esi]
  4194bb:	fiadd  DWORD PTR [ebp+0x3c]
  4194be:	mov    ch,0x7a
  4194c0:	inc    edx
  4194c1:	inc    ebp
  4194c2:	retf   0x765
  4194c5:	ds sbb al,0x6f
  4194c8:	lahf   
  4194c9:	jmp    0x241e00fb
  4194ce:	sub    BYTE PTR [esp+ecx*8+0x148c88b2],dl
  4194d5:	fsubr  DWORD PTR [ecx+ebp*4]
  4194d9:	fsub   QWORD PTR gs:[ecx-0x47]
  4194dd:	cmp    BYTE PTR [ecx-0x14],ch
  4194e0:	push   ss
  4194e1:	pop    ds
  4194e2:	sbb    edi,DWORD PTR [edx]
  4194e4:	push   eax
  4194e5:	nop    DWORD PTR [eax+0x64]
  4194e9:	ds stos DWORD PTR es:[edi],eax
  4194eb:	xor    eax,0x9f7e3cd8
  4194f0:	push   eax
  4194f1:	mov    DWORD PTR [edi-0x55],ecx
  4194f4:	mov    DWORD PTR ds:0x23a1d447,ebx
  4194fa:	jmp    0x43f6d5a7
  4194ff:	fs ja  0x4194ae
  419502:	push   ecx
  419503:	push   ecx
  419504:	rcl    DWORD PTR [ecx],cl
  419506:	mov    al,ds:0xfb64e194
  41950b:	mov    bl,0x27
  41950d:	pop    edi
  41950e:	mov    ch,0xf
  419510:	lods   al,BYTE PTR ds:[esi]
  419511:	int3   
  419512:	aam    0x9b
  419514:	cs or  al,0xfc
  419517:	xor    BYTE PTR [ecx],ch
  419519:	mov    BYTE PTR ds:0xc07cfc56,ah
  41951f:	idiv   DWORD PTR [esi]
  419521:	xchg   ebx,eax
  419522:	jns    0x41950e
  419524:	pop    esi
  419525:	fucom  st(5)
  419527:	dec    ebp
  419528:	jae    0x419520
  41952a:	jne    0x4195a5
  41952c:	pop    edx
  41952d:	push   es
  41952e:	test   DWORD PTR [ecx],ecx
  419530:	stos   BYTE PTR es:[edi],al
  419531:	adc    eax,0xa4631395
  419536:	icebp  
  419537:	enter  0xbea4,0xd4
  41953b:	mov    eax,0xe0c4a0a7
  419540:	lods   al,BYTE PTR ds:[esi]
  419541:	shl    cl,1
  419543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419544:	mov    esp,0xec88dee0
  419549:	psrld  mm4,mm7
  41954c:	cld    
  41954d:	jns    0x41958a
  41954f:	or     DWORD PTR [eax+0x581798c3],edx
  419555:	sub    eax,edi
  419557:	scas   al,BYTE PTR es:[edi]
  419558:	(bad)  
  419559:	aas    
  41955a:	mov    al,0xbc
  41955c:	inc    ebx
  41955d:	add    al,0xca
  41955f:	stos   BYTE PTR es:[edi],al
  419560:	push   ebp
  419561:	sbb    eax,0xcfe029ad
  419566:	sub    bh,BYTE PTR ds:0xfcb47908
  41956c:	adc    BYTE PTR [ebx+edi*1],al
  41956f:	int3   
  419570:	xchg   ebp,eax
  419571:	(bad)  [ebp+edi*2+0x71]
  419575:	je     0x41957b
  419577:	lea    eax,[eax+edi*2]
  41957a:	cmp    BYTE PTR [eax],al
  41957c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41957d:	mov    al,0x2f
  41957f:	hlt    
  419580:	fwait
  419581:	mov    ds,esp
  419583:	pop    ecx
  419584:	js     0x41958f
  419586:	scas   al,BYTE PTR es:[edi]
  419587:	lock jg 0x419592
  41958a:	xlat   BYTE PTR ds:[ebx]
  41958b:	or     ch,dh
  41958d:	jecxz  0x41959e
  41958f:	jo     0x4195bb
  419591:	pop    ss
  419592:	stos   DWORD PTR es:[edi],eax
  419593:	xor    DWORD PTR [edx+0x8],eax
  419596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419597:	and    al,0x3a
  419599:	mov    ebx,0x9a43e0fd
  41959e:	cmp    DWORD PTR [eax-0x5b],edx
  4195a1:	shr    DWORD PTR [edi],cl
  4195a3:	outs   dx,DWORD PTR ds:[esi]
  4195a4:	pop    ds
  4195a5:	mov    bh,BYTE PTR [ebx-0x1b]
  4195a8:	stc    
  4195a9:	cmp    BYTE PTR [ecx],al
  4195ab:	icebp  
  4195ac:	and    eax,edx
  4195ae:	fwait
  4195af:	lds    edx,FWORD PTR [ebp+0x4edaa064]
  4195b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195b6:	jg     0x4195ee
  4195b8:	mov    ebx,0x484fa2fb
  4195bd:	mov    eax,0xb5999edb
  4195c2:	bound  edx,QWORD PTR [edi-0x41049333]
  4195c8:	sti    
  4195c9:	popf   
  4195ca:	xor    DWORD PTR [edi-0x58],0x4e
  4195ce:	adc    al,BYTE PTR [edi+0x3a]
  4195d1:	mov    edi,0xd87bb7c2
  4195d6:	push   ebx
  4195d7:	mov    ebx,0xb4c3bb40
  4195dd:	aad    0xab
  4195df:	sub    al,0x2c
  4195e1:	rcl    esi,0x2c
  4195e4:	int3   
  4195e5:	jg     0x419609
  4195e7:	das    
  4195e8:	pushf  
  4195e9:	and    ebp,esp
  4195eb:	cwde   
  4195ec:	cwde   
  4195ed:	xor    BYTE PTR [ebx],cl
  4195ef:	cdq    
  4195f0:	cld    
  4195f1:	mov    al,0xad
  4195f3:	and    esp,ecx
  4195f5:	cmp    al,0xb1
  4195f7:	cmp    eax,0xa7be6c73
  4195fc:	ins    BYTE PTR es:[edi],dx
  4195fd:	mov    eax,0x5680706a
  419602:	cwde   
  419603:	stc    
  419604:	pop    ebp
  419605:	xchg   esi,eax
  419606:	dec    edx
  419607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419608:	inc    eax
  419609:	test   BYTE PTR [eax-0x55497578],ch
  41960f:	ja     0x4195c4
  419611:	ins    DWORD PTR es:[edi],dx
  419612:	retf   0x5b9d
  419615:	mov    eax,0xc12b8c1a
  41961a:	sub    ah,bl
  41961c:	ror    bh,cl
  41961e:	xchg   DWORD PTR [eax+0x6f],eax
  419621:	mov    BYTE PTR [esi-0xc],ah
  419624:	xchg   esp,eax
  419625:	jg     0x419603
  419627:	mov    cl,0xdb
  419629:	push   0xcda05202
  41962e:	jl     0x41965e
  419630:	cmp    BYTE PTR [eax-0x55],cl
  419633:	adc    ah,dl
  419635:	mov    eax,0x66c4a01b
  41963a:	cmp    DWORD PTR [eax-0x1f43922c],esi
  419640:	pop    esi
  419641:	mov    ah,ch
  419643:	pop    esi
  419645:	out    0xfc,eax
  419647:	jns    0x419603
  419649:	dec    ebx
  41964a:	jae    0x4195d7
  41964c:	cmp    BYTE PTR [edx+0x41],dl
  41964f:	mov    ebx,0xb53728a7
  419654:	lods   eax,DWORD PTR ds:[esi]
  419655:	fchs   
  419657:	mov    eax,ebp
  419659:	fldcw  WORD PTR [eax]
  41965b:	cmc    
  41965c:	int    0xbc
  41965e:	mov    ebp,0xa50cf790
  419663:	out    0xd9,al
  419665:	fistp  WORD PTR [edi]
  419667:	aaa    
  419668:	shl    DWORD PTR [ecx],0xa7
  41966b:	aam    0x1c
  41966d:	adc    esi,DWORD PTR [esp+0x33bf39e9]
  419674:	jmp    0x5e3be441
  419679:	jecxz  0x419672
  41967b:	pop    eax
  41967c:	shl    BYTE PTR [edi+0x26],1
  41967f:	xchg   edx,eax
  419680:	sbb    BYTE PTR [esi-0x37],ah
  419683:	fucomi st,st(0)
  419685:	mov    ecx,DWORD PTR [ecx]
  419687:	dec    esp
  419688:	das    
  419689:	inc    ecx
  41968a:	inc    ebp
  41968b:	cmp    edx,DWORD PTR [edi+0xc7d92df]
  419691:	cmp    BYTE PTR [esi+0x24813c58],cl
  419697:	dec    eax
  419698:	test   BYTE PTR [eax],dh
  41969a:	fcom   DWORD PTR [ebx]
  41969c:	popf   
  41969d:	test   al,ch
  41969f:	cmp    BYTE PTR [eax+0x1fdf87f4],dl
  4196a5:	add    al,0xf5
  4196a7:	pop    ecx
  4196a8:	loop   0x4196d4
  4196aa:	adc    BYTE PTR [ebp-0x6e],bl
  4196ad:	aas    
  4196ae:	jnp    0x41972a
  4196b0:	addr16 mov edi,0x2c695d05
  4196b6:	inc    eax
  4196b7:	imul   edx,esi,0x55
  4196ba:	pop    edx
  4196bb:	jle    0x419674
  4196bd:	out    dx,eax
  4196be:	mov    al,0x5f
  4196c0:	jo     0x419644
  4196c2:	icebp  
  4196c3:	or     esp,edi
  4196c5:	lea    edi,[ecx+0x37]
	...
  4196d0:	mov    esp,0x44a8d18
  4196d5:	push   es
  4196d6:	add    BYTE PTR [eax],al
  4196d8:	add    BYTE PTR [eax],al
  4196da:	add    BYTE PTR [eax],al
  4196dc:	add    al,0x6
  4196de:	add    BYTE PTR [eax],al
  4196e0:	adc    al,BYTE PTR [eax]
  4196e2:	es jl  0x4196e5
  4196e5:	add    dh,BYTE PTR [esi]
  4196e7:	or     BYTE PTR [eax],al
  4196e9:	add    BYTE PTR [edi],dl
  4196eb:	dec    ecx
  4196ec:	add    bh,bl
  4196ee:	pop    es
  4196ef:	mov    bl,ch
  4196f1:	adc    al,0x18
  4196f3:	sbb    al,0xab
  4196f5:	and    al,0x25
  4196f7:	sbb    BYTE PTR [edx+0x77],ch
  4196fa:	cmp    BYTE PTR [eax+ebp*2+0x55],dl
  4196fe:	dec    eax
  4196ff:	dec    esp
  419700:	push   eax
  419701:	ds push eax
  419703:	or     eax,0xece1b39f
  419708:	xor    eax,0x8fbcfd88
  41970d:	add    BYTE PTR [ecx-0x74],bl
  419710:	inc    eax
  419711:	xchg   esp,eax
  419712:	lock cld 
  419714:	sub    DWORD PTR [ecx+0x2c],ebp
  419717:	mov    ebx,0xbcbcd0cc
  41971c:	(bad)  
  41971d:	mov    bh,0xb3
  41971f:	rcl    DWORD PTR [eax+0x60385c5c],cl
  419725:	in     eax,dx
  419726:	(bad)  
  419727:	jno    0x4196d9
  419729:	inc    ebp
  41972a:	inc    eax
  41972b:	mov    ebx,0xa38c88c7
  419730:	inc    esi
  419731:	and    BYTE PTR [ebx+0x5ba8a526],bh
  419737:	mov    ah,0x43
  419739:	add    bh,BYTE PTR [ebp+0x5fbc4fcc]
  41973f:	sti    
  419740:	scas   eax,DWORD PTR es:[edi]
  419741:	sbb    al,0x4b
  419743:	mov    dl,0x3a
  419745:	loope  0x41973d
  419747:	hlt    
  419748:	js     0x419764
  41974a:	rol    BYTE PTR [ebp+eax*1+0x70c58e80],1
  419751:	dec    ecx
  419752:	sahf   
  419753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419754:	test   al,0xac
  419756:	xor    esi,DWORD PTR [eax-0x4c]
  419759:	cmp    DWORD PTR [esi],esi
  41975b:	mov    al,0xb4
  41975d:	int3   
  41975e:	jecxz  0x419766
  419760:	push   ebx
  419761:	sbb    dl,BYTE PTR [edi]
  419763:	adc    ebp,DWORD PTR [ebp+0x3e]
  419766:	je     0x419775
  419768:	push   cs
  419769:	or     edx,ecx
  41976b:	je     0x419747
  41976d:	ret    
  41976e:	sub    eax,0x4ce89d89
  419773:	frstor [ebp-0x4f]
  419776:	loop   0x419728
  419778:	dec    ebx
  419779:	sbb    ah,al
  41977b:	ror    DWORD PTR [eax+edx*4],cl
  41977e:	mov    al,ds:0x41088f81
  419783:	loop   0x41976a
  419785:	lock scas eax,DWORD PTR es:[edi]
  419787:	add    ah,bh
  419789:	push   0x64f3f787
  41978e:	xchg   esp,eax
  41978f:	push   ecx
  419790:	and    eax,0x3be9dc5b
  419795:	mov    eax,ds:0x93c027b9
  41979a:	mov    ds:0xcd2b82cc,al
  41979f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197a0:	adc    BYTE PTR [edx-0x58],ah
  4197a3:	in     al,dx
  4197a4:	xchg   ebp,eax
  4197a5:	hlt    
  4197a6:	mov    ah,0xd3
  4197a8:	push   edi
  4197a9:	push   edx
  4197aa:	pusha  
  4197ab:	or     eax,0xf44b0462
  4197b0:	aam    0x2c
  4197b2:	sub    BYTE PTR [edi*2-0x7bc344c8],bl
  4197b9:	fadd   DWORD PTR [ebp-0x2f]
  4197bc:	push   edi
  4197bd:	and    BYTE PTR [ebx],ah
  4197bf:	xchg   esp,eax
  4197c0:	in     al,0xe6
  4197c2:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4197c4:	cld    
  4197c5:	jno    0x419795
  4197c7:	mov    DWORD PTR [ecx+0xc],0xbd1411f4
  4197ce:	mul    DWORD PTR [edi]
  4197d0:	scas   eax,DWORD PTR es:[edi]
  4197d1:	out    dx,al
  4197d2:	les    esi,FWORD PTR [eax]
  4197d4:	xchg   bl,ah
  4197d6:	ret    
  4197d7:	mov    edi,0xb8b035cf
  4197dc:	adc    BYTE PTR [edx-0x76],ah
  4197df:	pusha  
  4197e0:	arpl   WORD PTR ds:0xb2f95508,bx
  4197e6:	push   ebx
  4197e7:	inc    esp
  4197e8:	bound  ecx,QWORD PTR [eax+eax*2]
  4197eb:	jmp    0x4197fa
  4197ed:	cwde   
  4197ee:	and    BYTE PTR [edx+0x77],ch
  4197f1:	sub    al,0xbb
  4197f3:	repnz addr16 retfw 
  4197f7:	mov    eax,ds:0x98528f15
  4197fc:	push   ebx
  4197fd:	pop    esp
  4197fe:	xor    eax,0x9ced84ef
  419803:	push   0x84807e78
  419808:	sub    DWORD PTR [eax+0x641cd660],ecx
  41980e:	pop    ss
  41980f:	in     eax,dx
  419810:	sub    al,0xb9
  419812:	bound  edx,QWORD PTR [eax+0x38]
  419815:	inc    eax
  419816:	outs   dx,BYTE PTR ds:[esi]
  419817:	lds    ecx,FWORD PTR [ebp+edx*8-0x60]
  41981b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41981c:	mov    ds:0x9a5b349f,eax
  419821:	pusha  
  419822:	and    al,BYTE PTR [edi-0x577b9f97]
  419828:	mov    bh,0x56
  41982a:	fwait
  41982b:	mov    WORD PTR [eax],ds
  41982d:	lods   eax,DWORD PTR ds:[esi]
  41982e:	and    al,0xa3
  419830:	xchg   ecx,eax
  419831:	mov    cl,0xba
  419833:	mov    bh,0x38
  419835:	inc    esi
  419836:	pop    ecx
  419837:	int3   
  419838:	push   edx
  419839:	stos   DWORD PTR es:[edi],eax
  41983a:	dec    ebp
  41983b:	lock pusha 
  41983d:	push   0xfc0a94eb
  419842:	ja     0x41983c
  419844:	jae    0x41984a
  419846:	retf   0x1d01
  419849:	jo     0x419863
  41984b:	test   al,dh
  41984d:	cmc    
  41984e:	and    eax,0xbbb45c39
  419853:	out    dx,al
  419854:	inc    ebx
  419855:	(bad)  [eax]
  419857:	loopne 0x4198b5
  419859:	cmp    ebx,edx
  41985b:	mov    al,ds:0xf0a34361
  419860:	sub    ebp,DWORD PTR gs:[ebx]
  419863:	or     BYTE PTR [ecx],cl
  419865:	or     eax,0x15bf1164
  41986a:	adc    DWORD PTR [eax-0x5b],edx
  41986d:	mov    esi,0xb90139e8
  419872:	mov    edi,0x4c2fd228
  419877:	mov    DWORD PTR [ecx-0x3f],ebp
  41987a:	(bad)  
  41987c:	outs   dx,DWORD PTR ds:[esi]
  41987d:	jne    0x4198ec
  41987f:	out    dx,al
  419880:	jbe    0x419862
  419882:	mov    BYTE PTR [esi-0x71],dl
  419885:	dec    ecx
  419886:	mov    es,WORD PTR ds:0xe8d55ba3
  41988c:	and    ebp,DWORD PTR [esi]
  41988e:	mov    ds:0x4377b83f,eax
  419893:	cmp    al,0xcc
  419895:	mov    esi,0xdcce5fc4
  41989a:	fcomi  st,st(5)
  41989c:	popf   
  41989d:	aad    0x73
  41989f:	sbb    al,0xfc
  4198a1:	jg     0x4198c3
  4198a3:	lds    ecx,FWORD PTR [edi+ecx*4]
  4198a6:	(bad)  
  4198a7:	adc    BYTE PTR [eax+0x29c85315],bl
  4198ad:	sub    al,0x27
  4198af:	adc    al,0xb2
  4198b1:	sar    esi,1
  4198b3:	fidivr WORD PTR [ecx+0x245bd4f1]
  4198b9:	loope  0x41984d
  4198bb:	std    
  4198bc:	mov    ax,ds:0x56c6f8f5
  4198c2:	add    eax,0xec93187d
  4198c7:	sbb    bl,BYTE PTR [esi+edx*2]
  4198ca:	sub    al,0xa2
  4198cc:	ins    DWORD PTR es:[edi],dx
  4198cd:	xor    cl,BYTE PTR [esi]
  4198cf:	jle    0x41990f
  4198d1:	dec    eax
  4198d2:	xor    DWORD PTR [edi-0xd],ecx
  4198d5:	xchg   edx,eax
  4198d6:	push   ds
  4198d7:	push   esp
  4198d8:	or     esi,DWORD PTR [ebx]
  4198da:	add    BYTE PTR [eax+0x6],ch
  4198dd:	pop    ss
  4198de:	cmp    ah,ah
  4198e0:	mov    edi,esp
  4198e2:	or     DWORD PTR [ecx+0x290e01d2],0xffffffa1
  4198e9:	ins    BYTE PTR es:[edi],dx
  4198ea:	test   al,0x3c
  4198ec:	cmp    al,0x77
  4198ee:	mov    al,0x6c
  4198f0:	sub    al,BYTE PTR [eax+ebp*4+0x1d]
  4198f4:	scas   eax,DWORD PTR es:[edi]
  4198f5:	sbb    ch,0x87
  4198f8:	mov    al,ds:0xf0092a67
  4198fd:	and    eax,0x527f2e78
  419902:	add    ecx,DWORD PTR [ebx+0x4b]
  419905:	inc    ebx
  419906:	inc    edx
  419907:	and    BYTE PTR [edi-0x6fc2f9b],ch
  41990d:	rcl    BYTE PTR [ebx+ecx*2+0x502f0843],1
  419914:	pop    es
  419915:	sbb    BYTE PTR [edi-0x15],bl
  419918:	mov    ds:0x782ea15b,al
  41991d:	nop
  41991e:	jmp    0x4198a4
  419920:	or     BYTE PTR [ecx-0x21],0xc1
  419924:	ret    0x11cf
  419927:	mov    al,ds:0x3bfc54e1
  41992c:	dec    edi
  41992d:	movzx  ebp,BYTE PTR [esp+ecx*2-0x342f713f]
  419935:	sub    DWORD PTR [edx],edx
  419937:	mov    ecx,gs
  419939:	mov    ecx,0x3d62347b
  41993e:	cmc    
  41993f:	mov    al,ds:0x5f1b0a89
  419944:	jo     0x4198f2
  419946:	mov    ?,WORD PTR [eax+ebp*4-0x58]
  41994a:	mov    dl,0xa8
  41994c:	cmp    BYTE PTR [esi+edx*4+0x2847d404],dh
  419953:	push   ebp
  419954:	(bad)  [edi+0x5f1997e1]
  41995a:	pushf  
  41995b:	mov    bh,cl
  41995d:	mov    edi,DWORD PTR [esi]
  41995f:	enter  0x9b08,0x95
  419963:	sbb    DWORD PTR [edi-0x58d4789e],edx
  419969:	loop   0x41999e
  41996b:	mov    bl,0x3c
  41996d:	mov    ah,0xd8
  41996f:	and    BYTE PTR [edi],bh
  419971:	movntps XMMWORD PTR [edi],xmm4
  419974:	pushf  
  419975:	ror    BYTE PTR [ebx+edi*8],1
  419978:	mov    bl,0x48
  41997a:	mov    ch,0xc1
  41997c:	mov    ds:0xecc92701,al
  419981:	push   esi
  419982:	cdq    
  419983:	nop
  419984:	xchg   ebx,eax
  419985:	fs push 0xffffffad
  419988:	je     0x419959
  41998a:	cmp    edx,DWORD PTR [eax-0x38]
  41998d:	xchg   edi,eax
  41998e:	push   0x8f820847
  419993:	pop    ecx
  419994:	mov    al,ds:0x482d6321
  419999:	hlt    
  41999a:	mov    ebx,0x10708bc0
  41999f:	pop    esp
  4199a0:	fwait
  4199a1:	sub    DWORD PTR [edx],ebx
  4199a3:	dec    eax
  4199a4:	loopne 0x4199dc
  4199a6:	mov    eax,ds:0x6b47cc59
  4199ab:	dec    ebp
  4199ac:	inc    esp
  4199ad:	test   DWORD PTR [ebx+ebx*2],esi
  4199b0:	add    al,0x89
  4199b2:	mov    al,gs:0x36bcefe5
  4199b8:	sbb    al,0xf1
  4199ba:	or     al,ch
  4199bc:	xor    al,0x68
  4199be:	int3   
  4199bf:	test   DWORD PTR [ecx+0x76dc49d8],ebx
  4199c5:	jle    0x41998b
  4199c7:	adc    eax,0x293ea334
  4199cc:	inc    esp
  4199cd:	cmp    eax,0xc192db7e
  4199d2:	mov    dl,0xb4
  4199d4:	mov    esi,0xba2718f8
  4199d9:	clc    
  4199da:	or     al,0x44
  4199dc:	or     al,0x2c
  4199de:	popf   
  4199df:	push   ecx
  4199e0:	cmp    ah,ah
  4199e2:	jo     0x4199b0
  4199e4:	fwait
  4199e5:	lock jne 0x419a21
  4199e8:	sub    BYTE PTR [edx+0x20],ch
  4199eb:	mov    ebx,0xa0fb41d
  4199f0:	call   0xa7fc:0x97c4e279
  4199f7:	sbb    al,0x78
  4199f9:	cld    
  4199fa:	add    BYTE PTR [esp+ecx*1+0x46],ah
  4199fe:	adc    al,0xbf
  419a00:	push   ds
  419a01:	clc    
  419a02:	data16 jbe 0x419a5e
  419a05:	xor    eax,0xbfcbbadc
  419a0a:	and    al,0xb7
  419a0c:	adc    ecx,DWORD PTR [esi]
  419a0e:	addr16 cwde 
  419a10:	pop    ss
  419a11:	leave  
  419a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a13:	inc    ebx
  419a14:	cmp    dl,BYTE PTR [ecx-0xb]
  419a17:	ins    BYTE PTR es:[edi],dx
  419a18:	icebp  
  419a19:	int    0x78
  419a1b:	(bad)  [esp+eax*8]
  419a1e:	sahf   
  419a1f:	fs popf 
  419a21:	gs and ebp,edx
  419a24:	(bad)  
  419a25:	mov    edi,0xcea8c065
  419a2a:	dec    edx
  419a2b:	mov    dl,0x93
  419a2d:	sbb    eax,0xa7eb4e2d
  419a32:	xor    BYTE PTR [ecx+0x62],0x8b
  419a36:	cmp    bh,BYTE PTR ds:0x38c83a8c
  419a3c:	nop
  419a3d:	jg     0x4199dc
  419a3f:	sub    bl,BYTE PTR [esi]
  419a41:	gs mov ah,0x6c
  419a44:	shl    DWORD PTR [eax+edx*2-0x6c1d7d7c],0x88
  419a4c:	repz xchg edi,eax
  419a4e:	cwde   
  419a4f:	pusha  
  419a50:	mov    cs,WORD PTR [ecx]
  419a52:	out    dx,eax
  419a53:	pushf  
  419a54:	js     0x419a84
  419a56:	jle    0x4199df
  419a58:	ins    BYTE PTR es:[edi],dx
  419a59:	mov    BYTE PTR [ebx],dl
  419a5b:	bound  ebp,QWORD PTR [ebx+0x67]
  419a5e:	mov    eax,ds:0xecaca4a0
  419a63:	mov    al,0xc6
  419a65:	repnz xor DWORD PTR [ebp+0x28dcc830],eax
  419a6c:	mov    ah,0x89
  419a6e:	mov    ah,0x78
  419a70:	add    al,0xaa
  419a72:	int3   
  419a73:	out    0xf4,eax
  419a75:	les    eax,FWORD PTR [esi+0x42]
  419a78:	cmp    BYTE PTR [ecx+edx*4-0x5b9f22ad],ch
  419a7f:	test   DWORD PTR [ebp-0x1b894ed7],ebp
  419a85:	lods   al,BYTE PTR ds:[esi]
  419a86:	inc    ebx
  419a87:	mov    ecx,0xcaa5c830
  419a8c:	cwde   
  419a8d:	pop    edi
  419a8e:	popf   
  419a8f:	sbb    ah,ch
  419a91:	cdq    
  419a92:	call   0xa12a7d0b
  419a97:	cmp    eax,0x1b64f84d
  419a9c:	clc    
  419a9d:	rol    DWORD PTR gs:[edi+0x34],1
  419aa1:	mov    ebx,0xaf5eb6e4
  419aa6:	inc    esp
  419aa7:	and    ah,BYTE PTR [ebx-0x492f6ea5]
  419aad:	mov    al,ds:0x79ec82e2
  419ab2:	jno    0x419af8
  419ab4:	mov    esp,0xac53c353
  419ab9:	sbb    esi,DWORD PTR ds:0x2c60d475
  419abf:	int3   
  419ac0:	pop    esi
  419ac1:	hlt    
  419ac2:	aad    0x5f
  419ac4:	push   esi
  419ac5:	pop    ss
  419ac6:	and    al,0x4a
  419ac8:	lea    esp,[edx]
  419aca:	cmp    DWORD PTR [ebx-0x70],ecx
  419acd:	and    ebx,DWORD PTR [edx-0x5179c477]
  419ad3:	std    
  419ad4:	rol    BYTE PTR ds:0x1efb5a5b,0x95
  419adb:	mov    eax,0x24e92504
  419ae0:	mov    ebp,0x4754387d
  419ae5:	aas    
  419ae6:	mov    bl,0x44
  419ae8:	jp     0x419ad6
  419aea:	inc    eax
  419aeb:	frstor [ecx+0x39]
  419aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aef:	test   BYTE PTR [esi],ch
  419af1:	rcl    BYTE PTR [eax+0x2b0830fe],cl
  419af7:	adc    al,0xec
  419af9:	mov    eax,0xd64f834
  419afe:	outs   dx,BYTE PTR ds:[esi]
  419aff:	inc    eax
  419b00:	mov    ah,0x1c
  419b02:	push   esp
  419b03:	inc    eax
  419b04:	inc    esp
  419b05:	pop    eax
  419b06:	mov    WORD PTR [eax+0x58],ds
  419b09:	sbb    DWORD PTR [esi-0x1a9def8a],ebx
  419b0f:	cmc    
  419b10:	mov    ah,0x38
  419b12:	jb     0x419ac7
  419b14:	pushf  
  419b15:	jle    0x419b7e
  419b17:	lods   al,BYTE PTR ds:[esi]
  419b18:	push   esi
  419b19:	mov    edx,0x5bf3ab79
  419b1e:	sbb    al,0x34
  419b20:	aaa    
  419b21:	mov    cl,al
  419b23:	push   eax
  419b24:	(bad)  
  419b25:	or     al,0x50
  419b27:	stos   DWORD PTR es:[edi],eax
  419b28:	sbb    BYTE PTR [eax-0x13],bh
  419b2b:	cwde   
  419b2c:	cmc    
  419b2d:	sub    al,0x70
  419b2f:	push   esp
  419b30:	jl     0x419b98
  419b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b33:	cmp    cl,BYTE PTR [esi+0x2687bf8d]
  419b39:	cmp    eax,0xb0a44f82
  419b3e:	push   cs
  419b3f:	mov    bh,0x7b
  419b41:	mov    WORD PTR [ecx-0xb],fs
  419b44:	test   esp,edi
  419b46:	shr    DWORD PTR [esi-0x101f9bad],1
  419b4c:	mov    WORD PTR [edx+0x1e],?
  419b4f:	inc    esp
  419b50:	icebp  
  419b51:	add    eax,0x9b6cab04
  419b56:	aam    0xd
  419b58:	je     0x419b68
  419b5a:	mov    BYTE PTR [edx+0x4],ch
  419b5d:	cmp    eax,0xc2bdf121
  419b62:	dec    ecx
  419b63:	inc    ebp
  419b64:	in     eax,dx
  419b65:	int    0x86
  419b67:	pop    ds
  419b68:	jle    0x419b4d
  419b6a:	fcomp  st(1)
  419b6c:	int3   
  419b6d:	cmc    
  419b6e:	xor    edi,DWORD PTR [ebp+0x8]
  419b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b72:	mov    DWORD PTR [ebp-0x25e2ac77],ecx
  419b78:	and    al,0x85
  419b7a:	test   eax,0x3d73a10c
  419b7f:	xor    al,ah
  419b81:	lds    ebx,FWORD PTR [eax]
  419b83:	mov    WORD PTR [ecx],?
  419b85:	xchg   esi,eax
  419b86:	fcom   DWORD PTR [ebp+0x6d]
  419b89:	je     0x419b94
  419b8b:	leave  
  419b8c:	jne    0x419b30
  419b8e:	fs pop esp
  419b90:	add    bh,al
  419b92:	sbb    al,0x78
  419b94:	sar    DWORD PTR [edx],cl
  419b96:	pop    esi
  419b97:	pop    ds
  419b98:	ss xchg ebp,eax
  419b9a:	mov    ds:0x5caad477,al
  419b9f:	add    BYTE PTR [ecx*4+0x18e78b92],al
  419ba6:	aad    0xe3
  419ba8:	popf   
  419ba9:	aaa    
  419baa:	jmp    0x419bbe
  419bac:	cmp    BYTE PTR [edx],0xf8
  419baf:	add    BYTE PTR [edi+0x140c8e53],cl
  419bb5:	dec    edx
  419bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb7:	and    BYTE PTR [edx],0x2f
  419bba:	sub    BYTE PTR [esi+0x71b13c33],cl
  419bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bc1:	jns    0x419b51
  419bc3:	adc    ebx,ecx
  419bc5:	aas    
  419bc6:	mov    eax,0x30dfeb45
  419bcb:	xor    BYTE PTR [eax],dl
  419bcd:	(bad)  
  419bce:	out    0x7,eax
  419bd0:	div    eax
  419bd2:	mov    WORD PTR [esi+edi*2],?
  419bd5:	cld    
  419bd6:	add    BYTE PTR [esi+0x3a304c2f],cl
  419bdc:	pop    eax
  419bdd:	cmp    al,0x55
  419bdf:	and    al,0x48
  419be1:	push   esi
  419be2:	xor    BYTE PTR [eax+ebx*2+0x5c],dl
  419be6:	gs imul ebp,DWORD PTR gs:[ecx+0x72],0x7dcf971
  419bef:	or     eax,0x180b1013
  419bf4:	sbb    ah,BYTE PTR [eax]
  419bf6:	and    ah,cl
  419bf8:	imul   edx,eax,0xffffffb9
  419bfb:	jo     0x419c0c
  419bfd:	mov    edi,0x38c22a13
  419c02:	sbb    BYTE PTR fs:[edi+esi*1+0x74],cl
  419c07:	aas    
  419c08:	xchg   ebx,eax
  419c09:	sbb    BYTE PTR gs:[ebp-0x4c],0xb2
  419c0e:	in     al,dx
  419c0f:	test   al,0xa4
  419c11:	ficom  WORD PTR [eax+ebx*4-0x13b76304]
  419c18:	sub    bh,BYTE PTR [ecx-0x383fc390]
  419c1e:	mov    cl,0xc
  419c20:	es push ecx
  419c22:	(bad)  [eax+eiz*8-0xc81e0dc]
  419c29:	pushf  
  419c2a:	clc    
  419c2b:	inc    ecx
  419c2c:	and    ah,dh
  419c2e:	mov    BYTE PTR [ebp+eiz*8+0x5ce1a19c],cl
  419c35:	shr    BYTE PTR [ebx+0x39cc3d54],1
  419c3b:	sbb    al,0xc4
  419c3d:	inc    ebp
  419c3e:	push   ebx
  419c3f:	mov    al,0xc8
  419c41:	jg     0x419c4b
  419c43:	loop   0x419c6a
  419c45:	or     ch,ah
  419c47:	push   eax
  419c48:	sub    bh,BYTE PTR [edi-0x40bb4f87]
  419c4e:	(bad)  
  419c4f:	mov    ebx,0xab3c7504
  419c54:	pop    es
  419c55:	or     DWORD PTR [ebp+0x5d1be8d1],edx
  419c5b:	ret    0xc324
  419c5e:	stos   DWORD PTR es:[edi],eax
  419c5f:	shl    ah,cl
  419c61:	lods   al,BYTE PTR ds:[esi]
  419c62:	mov    edx,0xe25e108
  419c67:	cmp    BYTE PTR [esp+edx*4],0x84
  419c6b:	test   al,0x63
  419c6d:	lea    edx,[ecx+0x374bce1]
  419c73:	dec    edx
  419c74:	test   eax,0x50b3b28e
  419c79:	es cmp esi,DWORD PTR es:[edi]
  419c7d:	daa    
  419c7e:	add    al,0x30
  419c81:	pop    edi
  419c82:	cmp    al,BYTE PTR [esi]
  419c84:	jmp    0x3bb7cf73
  419c89:	mov    eax,0xea880e8
  419c8e:	clc    
  419c8f:	imul   esp,DWORD PTR [esi-0x536d5be0],0xf
  419c96:	dec    ebx
  419c97:	inc    edi
  419c98:	aam    0xf0
  419c9a:	int3   
  419c9b:	mov    ecx,esp
  419c9d:	hlt    
  419c9e:	cmp    al,0xd8
  419ca0:	mov    edi,0xcdd56711
  419ca5:	cld    
  419ca6:	hlt    
  419ca7:	mov    edx,ss
  419ca9:	adc    BYTE PTR [esi-0x2e],al
  419cac:	ins    DWORD PTR es:[edi],dx
  419cad:	sbb    BYTE PTR [esp+ebp*1+0x1b29e090],dh
  419cb4:	in     al,dx
  419cb5:	xor    ebx,DWORD PTR [ecx+0x694033e1]
  419cbb:	in     al,dx
  419cbc:	in     al,dx
  419cbd:	xchg   edi,eax
  419cbe:	fmul   DWORD PTR [edx-0x18ab1d07]
  419cc4:	mov    al,ds:0x719dfcb6
  419cc9:	shl    al,cl
  419ccb:	or     al,0x89
  419ccd:	inc    esp
  419cce:	js     0x419c8d
  419cd0:	fs pop ss
  419cd2:	sub    eax,0x78956fb6
  419cd7:	pushf  
  419cd8:	inc    eax
  419cd9:	inc    esp
  419cda:	(bad)
	...
  419ce6:	add    BYTE PTR [eax],al
  419ce8:	sti    
  419ce9:	adc    al,0x4a
  419ceb:	aas    
  419cec:	es push es
  419cee:	add    BYTE PTR [eax],al
  419cf0:	add    BYTE PTR [eax],al
  419cf2:	add    BYTE PTR [eax],al
  419cf4:	es push es
  419cf6:	add    BYTE PTR [eax],al
  419cf8:	adc    eax,DWORD PTR [eax]
  419cfa:	es jl  0x419cfd
  419cfd:	add    dh,BYTE PTR [esi]
  419cff:	or     BYTE PTR [eax],al
  419d01:	add    cl,ch
  419d03:	dec    edx
  419d04:	adc    BYTE PTR [eax+0x52],al
  419d07:	dec    edi
  419d08:	adc    BYTE PTR ds:0x50e09918,dl
  419d0e:	cmp    BYTE PTR [eax],ah
  419d10:	mov    ebx,0x903c0c21
  419d15:	adc    al,0x22
  419d17:	dec    esp
  419d18:	jo     0x419d20
  419d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d1b:	mov    al,cl
  419d1d:	sub    al,0x69
  419d1f:	cmp    al,0xb7
  419d21:	jno    0x419d9d
  419d23:	cmp    al,0x84
  419d25:	clc    
  419d26:	ja     0x419cc1
  419d28:	sub    al,0x64
  419d2a:	fcomp  DWORD PTR [eax+ebp*1+0x6c3129ef]
  419d31:	cmp    DWORD PTR [eax+ebp*4],edi
  419d34:	repz cmc 
  419d36:	mov    bl,0x50
  419d38:	stos   DWORD PTR es:[edi],eax
  419d39:	mov    al,0x2e
  419d3b:	ficomp WORD PTR [ebx+0x74400497]
  419d41:	jo     0x419d82
  419d43:	sub    BYTE PTR [eax+esi*4+0x46],0x6f
  419d48:	imul   ebx,eax,0x1f
  419d4b:	mov    al,fs:0xb580912b
  419d51:	clc    
  419d52:	loop   0x419d2c
  419d54:	mov    al,0x5c
  419d56:	icebp  
  419d57:	push   ebp
  419d58:	into   
  419d59:	pop    esp
  419d5a:	retf   0x3863
  419d5d:	xchg   ebx,eax
  419d5e:	push   esp
  419d5f:	popa   
  419d60:	hlt    
  419d61:	jl     0x419d57
  419d63:	inc    edi
  419d64:	inc    esp
  419d65:	mov    dl,BYTE PTR [eax+0x4c9c13c1]
  419d6b:	daa    
  419d6c:	inc    esp
  419d6d:	nop
  419d6e:	adc    DWORD PTR [eax-0x3b3f01b8],esi
  419d74:	sti    
  419d75:	or     DWORD PTR [ecx-0x6f],ebx
  419d78:	and    al,0x8f
  419d7a:	imul   esp,esp,0xfffffff5
  419d7d:	lock test DWORD PTR [eax],edi
  419d80:	jl     0x419d58
  419d82:	rol    DWORD PTR [ebx],cl
  419d84:	mov    BYTE PTR [ebp-0x6c646770],ch
  419d8a:	push   edx
  419d8b:	push   edi
  419d8c:	jg     0x419dc1
  419d8e:	mov    ah,0x40
  419d90:	inc    ebx
  419d91:	mov    ch,0xce
  419d93:	mov    ds:0xd8032fa8,al
  419d98:	call   0x1c1f:0x908c1a63
  419d9f:	mov    eax,ds:0xf7fbfefc
  419da4:	mov    eax,edx
  419da6:	sbb    ebx,DWORD PTR [ecx+ebx*1+0x3dd6a8a5]
  419dad:	icebp  
  419dae:	jl     0x419d9c
  419db0:	dec    ebp
  419db1:	mov    DWORD PTR [eax],eax
  419db3:	int3   
  419db4:	and    edi,0xc3bef18
  419dba:	cwde   
  419dbb:	xor    dh,ch
  419dbd:	cmc    
  419dbe:	(bad)  
  419dbf:	hlt    
  419dc0:	add    BYTE PTR [edx+eiz*1-0x71],ch
  419dc4:	ins    DWORD PTR es:[edi],dx
  419dc5:	rcr    BYTE PTR [esp+ebx*1],1
  419dc8:	stos   DWORD PTR es:[edi],eax
  419dc9:	imul   esp,eax,0x39bf3959
  419dcf:	mov    edi,0xa3ca3040
  419dd4:	(bad)  
  419dd5:	push   ebx
  419dd6:	add    al,0x65
  419dd8:	sub    eax,0xf7e0987c
  419ddd:	sub    al,0xad
  419ddf:	add    eax,edx
  419de1:	sbb    eax,0x98931088
  419de6:	cwde   
  419de7:	sti    
  419de8:	push   ecx
  419de9:	xor    esp,eax
  419deb:	retf   0x39ce
  419dee:	jb     0x419e50
  419df0:	xor    DWORD PTR [eax-0x5c],ebx
  419df3:	icebp  
  419df4:	test   eax,0x63145859
  419df9:	pusha  
  419dfa:	cwde   
  419dfb:	ins    BYTE PTR es:[edi],dx
  419dfc:	ret    0x717c
  419dff:	shl    DWORD PTR [eax+0xb],cl
  419e02:	imul   eax,DWORD PTR [ebx+eiz*8],0x36
  419e06:	cwde   
  419e07:	cmp    al,0x29
  419e09:	push   ds
  419e0a:	ins    DWORD PTR es:[edi],dx
  419e0b:	clc    
  419e0c:	shr    BYTE PTR [esp+eiz*2],1
  419e0f:	mov    al,ds:0x6252b3b7
  419e14:	add    eax,0x2d44ed94
  419e19:	mov    al,ds:0x788d2198
  419e1e:	mov    ch,0xf1
  419e20:	mov    ecx,0xd4d1a984
  419e25:	and    BYTE PTR [ebx-0x349e179b],dh
  419e2b:	cmp    al,0x29
  419e2d:	clc    
  419e2e:	les    edx,FWORD PTR [eax]
  419e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e31:	jo     0x419def
  419e33:	mov    al,0x84
  419e35:	inc    ecx
  419e36:	dec    sp
  419e38:	jnp    0x419dd2
  419e3a:	sti    
  419e3b:	(bad)  
  419e3c:	jle    0x419dc2
  419e3e:	mov    ah,BYTE PTR [eax-0x72]
  419e41:	mov    dh,0x14
  419e43:	test   eax,0xdda6481f
  419e48:	test   al,0xda
  419e4a:	xchg   esp,eax
  419e4b:	inc    edi
  419e4c:	inc    ebx
  419e4d:	xchg   ebx,eax
  419e4e:	mov    al,ds:0xd3345014
  419e53:	adc    DWORD PTR [eax-0x68],esp
  419e56:	aaa    
  419e57:	xor    al,BYTE PTR [ebx-0x47]
  419e5a:	dec    ebx
  419e5b:	mov    esp,0xc76084db
  419e60:	xchg   esp,eax
  419e61:	xchg   esp,eax
  419e62:	cwde   
  419e63:	pop    ss
  419e64:	inc    ebp
  419e65:	stc    
  419e66:	mov    al,ds:0x38b4a06e
  419e6b:	cmp    esp,DWORD PTR [eax-0x2f1743b1]
  419e71:	lock push ebx
  419e73:	nop
  419e74:	(bad)  
  419e75:	int3   
  419e76:	out    0xc,eax
  419e78:	push   eax
  419e79:	js     0x419ecb
  419e7b:	add    eax,0x15eafc72
  419e80:	imul   ebp,esp,0xffffff9c
  419e83:	ret    0x5127
  419e86:	mov    ah,0xc2
  419e88:	jmp    0x460240c0
  419e8d:	xor    ecx,DWORD PTR [ebp-0x56151880]
  419e93:	mov    bl,0xe4
  419e95:	arpl   WORD PTR [edx-0x1bfc880c],si
  419e9b:	jb     0x419eec
  419e9d:	or     BYTE PTR ds:0x99dbeac9,ah
  419ea3:	jmp    0x4fb9:0xf6b0dba0
  419eaa:	aas    
  419eab:	mov    dl,0xc0
  419ead:	lahf   
  419eae:	cmp    ah,al
  419eb0:	cld    
  419eb1:	fnstsw ax
  419eb3:	in     al,0xe8
  419eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eb6:	retf   
  419eb7:	mov    dl,0xf4
  419eb9:	clc    
  419eba:	jne    0x419ee7
  419ebc:	or     BYTE PTR ds:0xc562d20,ch
  419ec2:	push   edi
  419ec3:	or     al,0xe
  419ec5:	jge    0x419f2e
  419ec7:	mov    dh,0x35
  419ec9:	mov    BYTE PTR [ebx+ebp*4+0x4f],al
  419ecd:	adc    al,0xd4
  419ecf:	enter  0xa6e7,0xf4
  419ed3:	popf   
  419ed4:	(bad)  
  419ed5:	jns    0x419f0e
  419ed7:	fsubr  DWORD PTR [edi+edx*2+0x140effec]
  419ede:	add    cl,BYTE PTR [edx*4+0x2f5cfc20]
  419ee5:	mov    bl,0xfc
  419ee7:	(bad)  
  419ee8:	mov    ch,0x4
  419eea:	xchg   esp,eax
  419eeb:	ins    BYTE PTR es:[edi],dx
  419eec:	push   eax
  419eed:	xor    DWORD PTR [edi+0x287e439b],edx
  419ef3:	out    dx,eax
  419ef4:	mov    ah,0xef
  419ef6:	cmp    dh,bh
  419ef8:	inc    esp
  419ef9:	pop    ds
  419efa:	or     eax,DWORD PTR [edi+0x149b0456]
  419f00:	in     al,0xc
  419f02:	cs push 0x26391cf3
  419f08:	adc    BYTE PTR ds:0x505fbacd,dl
  419f0e:	(bad)  
  419f10:	and    BYTE PTR [eax-0x13],dh
  419f13:	xchg   ebx,eax
  419f14:	jg     0x419f06
  419f16:	(bad)  
  419f17:	jge    0x419eda
  419f19:	xchg   edx,eax
  419f1a:	inc    ebp
  419f1b:	jae    0x419f05
  419f1d:	sub    esi,ecx
  419f1f:	mov    ds:0x34086848,eax
  419f24:	xor    eax,0x4435be37
  419f29:	dec    esp
  419f2a:	(bad)  
  419f2b:	rcl    BYTE PTR [edx-0x25],1
  419f2e:	call   0x77f0:0x4844e761
  419f35:	jp     0x419f51
  419f37:	add    BYTE PTR [edi+0x53138b00],al
  419f3d:	cdq    
  419f3e:	daa    
  419f3f:	loope  0x419ee5
  419f41:	stos   BYTE PTR es:[edi],al
  419f42:	lods   al,BYTE PTR ds:[esi]
  419f43:	mov    al,0x66
  419f45:	dec    ecx
  419f46:	push   edx
  419f47:	add    BYTE PTR [ecx+0x1],0x51
  419f4b:	xchg   ebp,eax
  419f4c:	push   ecx
  419f4d:	dec    edx
  419f4e:	es fs mov edx,0xf207b292
  419f55:	mov    eax,0x4bbd8148
  419f5a:	xchg   ebp,eax
  419f5b:	fwait
  419f5c:	sbb    esi,DWORD PTR [eax]
  419f5e:	and    BYTE PTR [eax-0x38f62c4],ch
  419f64:	mov    edi,0x7c389ab
  419f69:	int    0x9a
  419f6b:	ror    BYTE PTR [esi-0x57941bd9],0x76
  419f72:	gs mov cl,0x70
  419f75:	arpl   WORD PTR [eax-0x73],dx
  419f78:	inc    edi
  419f79:	xchg   ebp,eax
  419f7a:	inc    eax
  419f7b:	popf   
  419f7c:	das    
  419f7d:	imul   esp,DWORD PTR [ecx-0x17c44624],0xeff8bc9c
  419f87:	aam    0xe8
  419f89:	jmp    0xe29d769a
  419f8e:	jge    0x419f38
  419f90:	jmp    0x78a:0x3fd10f79
  419f97:	dec    ebp
  419f98:	xchg   ebx,eax
  419f99:	mov    ds:0x2ca35c11,eax
  419f9e:	scas   eax,DWORD PTR es:[edi]
  419f9f:	jmp    0x419fd3
  419fa1:	adc    BYTE PTR [ecx-0x24],0xe0
  419fa5:	cmp    esi,DWORD PTR [edi]
  419fa7:	xor    ebp,DWORD PTR [eax-0x6b]
  419faa:	cld    
  419fab:	push   esp
  419fac:	repnz mov WORD PTR [ecx+0x7afbe265],?
  419fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fb4:	or     ebp,DWORD PTR [eax]
  419fb6:	inc    edx
  419fb7:	dec    ebx
  419fb8:	pop    ss
  419fb9:	data16 or dh,dl
  419fbc:	or     esp,edi
  419fbe:	xchg   ebx,eax
  419fbf:	ins    DWORD PTR es:[edi],dx
  419fc0:	aaa    
  419fc1:	int    0xdf
  419fc3:	jns    0x41a006
  419fc5:	add    al,0xdc
  419fc7:	hlt    
  419fc8:	sbb    al,0xc8
  419fca:	adc    eax,0x27fd66ef
  419fcf:	loopne 0x419fcf
  419fd1:	(bad)  
  419fd2:	xor    eax,0x6bc85510
  419fd7:	sub    al,0x3f
  419fd9:	push   esp
  419fda:	cmp    BYTE PTR [eax+0x69e11120],ah
  419fe0:	cmp    edi,DWORD PTR [edi+0x84e40d7]
  419fe6:	gs pop esp
  419fe8:	jo     0x41a041
  419fea:	bound  eax,QWORD PTR [esi]
  419fec:	call   0x723646df
  419ff1:	add    ch,BYTE PTR [ecx]
  419ff3:	jmp    0x650a:0xfd4ea8fb
  419ffa:	loopne 0x419f83
  419ffc:	pusha  
  419ffd:	test   DWORD PTR [ecx],esi
  419fff:	ret    0xb937
  41a002:	mov    DWORD PTR ds:0xb4914c88,edx
  41a008:	push   eax
  41a009:	sbb    BYTE PTR [ecx-0x21],ch
  41a00c:	enter  0xfa6d,0xa4
  41a010:	jle    0x41a04c
  41a012:	or     DWORD PTR [ecx+0x21],eax
  41a015:	add    BYTE PTR [esi+0x34071f19],dh
  41a01b:	and    bh,BYTE PTR [edi-0x6443c865]
  41a021:	inc    ebx
  41a022:	xor    BYTE PTR ss:[ecx+0x50],0xd6
  41a027:	and    eax,0x97bd21bc
  41a02c:	push   ecx
  41a02d:	jo     0x41a0a0
  41a02f:	fwait
  41a030:	jl     0x419fe4
  41a032:	add    al,0xc9
  41a034:	fld    QWORD PTR [ecx-0x6c]
  41a037:	jge    0x419fd5
  41a039:	xchg   DWORD PTR [eax+0x4f90f560],esi
  41a03f:	jno    0x41a021
  41a041:	push   edi
  41a042:	cmp    al,BYTE PTR [ecx+esi*2]
  41a045:	inc    edi
  41a046:	sahf   
  41a047:	jge    0x41a0bc
  41a049:	inc    edx
  41a04a:	mov    bh,0x2c
  41a04c:	add    dl,BYTE PTR [esi]
  41a04e:	jb     0x41a05e
  41a050:	mov    ah,0x44
  41a052:	cwde   
  41a053:	mov    ebp,0x74589459
  41a058:	mov    eax,ds:0x612f9ad0
  41a05d:	mov    dh,0x6c
  41a05f:	xor    eax,0xdbce6e05
  41a064:	jno    0x41a038
  41a066:	dec    esi
  41a067:	lds    esp,FWORD PTR [edx-0x16]
  41a06a:	dec    edx
  41a06b:	xor    al,0x9d
  41a06d:	fdivr  QWORD PTR ds:0xed804087
  41a073:	mov    al,0xcd
  41a075:	pop    ebx
  41a076:	stc    
  41a077:	inc    eax
  41a078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a079:	sub    esp,0xffffffe5
  41a07c:	cmp    eax,0xa3977ec4
  41a081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a082:	jae    0x41a014
  41a084:	aam    0x2a
  41a086:	pushf  
  41a087:	loopne 0x41a056
  41a089:	sub    BYTE PTR [ebp-0x59],ch
  41a08c:	xor    al,0xf9
  41a08e:	jge    0x41a0a1
  41a090:	pusha  
  41a091:	lea    edx,ds:0x1318975d
  41a097:	lods   eax,DWORD PTR ds:[esi]
  41a098:	call   0xd8b3e84a
  41a09d:	aad    0xc0
  41a09f:	mov    al,0xdb
  41a0a1:	inc    al
  41a0a3:	rcr    BYTE PTR [esi-0x163be099],cl
  41a0a9:	int    0x33
  41a0ab:	xor    eax,0x370814f8
  41a0b0:	or     al,0x93
  41a0b2:	pop    ecx
  41a0b3:	popa   
  41a0b4:	std    
  41a0b5:	sbb    al,0xa9
  41a0b7:	out    dx,al
  41a0b8:	stos   DWORD PTR es:[edi],eax
  41a0b9:	push   edx
  41a0ba:	mov    bl,0x79
  41a0bc:	push   ebp
  41a0bd:	ret    
  41a0be:	sub    al,0xbc
  41a0c0:	mov    ecx,0xd882b4e3
  41a0c5:	sub    ah,bh
  41a0c7:	ja     0x41a0b6
  41a0c9:	jb     0x41a0c0
  41a0cb:	jnp    0x41a0b0
  41a0cd:	pop    es
  41a0ce:	nop
  41a0cf:	or     DWORD PTR [ebp+0x65],eax
  41a0d2:	lahf   
  41a0d3:	xchg   ecx,eax
  41a0d4:	int    0x0
  41a0d6:	mov    ebp,0xd922dcb9
  41a0db:	iret   
  41a0dc:	in     al,dx
  41a0dd:	xor    DWORD PTR [edi],0x73
  41a0e0:	inc    ecx
  41a0e1:	shl    DWORD PTR [ecx-0x64],1
  41a0e4:	xchg   ebp,eax
  41a0e5:	out    0x1b,al
  41a0e7:	das    
  41a0e8:	sbb    ebx,edx
  41a0ea:	pop    eax
  41a0eb:	lods   al,BYTE PTR ds:[esi]
  41a0ec:	mov    eax,DWORD PTR [esi]
  41a0ee:	test   DWORD PTR [esp+edi*4-0x61],0xaf76145d
  41a0f6:	fldenv [esi+esi*8]
  41a0f9:	jb     0x41a12f
  41a0fb:	pushf  
  41a0fc:	lock xor DWORD PTR [ebx],ebp
  41a0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a100:	sub    DWORD PTR [esi+0x57],edx
  41a103:	fdiv   QWORD PTR [esi]
  41a105:	and    ah,BYTE PTR [eax-0x19]
  41a108:	cmp    BYTE PTR [eax],bl
  41a10a:	icebp  
  41a10b:	jl     0x41a117
  41a10d:	add    DWORD PTR [eax+edi*2-0x63],0x56
  41a112:	sbb    BYTE PTR [ebx+0x3d172624],ch
  41a118:	dec    esp
  41a119:	iret   
  41a11a:	jle    0x41a15c
  41a11c:	xor    BYTE PTR [eax+0x5e],cl
  41a11f:	fistp  DWORD PTR [ecx+0x68]
  41a122:	test   eax,0xeced6422
  41a127:	cmp    BYTE PTR [ecx*1-0x7a539785],al
  41a12e:	ins    BYTE PTR es:[edi],dx
  41a12f:	xchg   esp,eax
  41a130:	xchg   esp,eax
  41a131:	sahf   
  41a132:	pop    ss
  41a133:	out    0xa0,al
  41a135:	pop    ss
  41a136:	xor    eax,0xc025cc0c
  41a13b:	inc    edi
  41a13c:	pop    esi
  41a13d:	(bad)  
  41a13e:	rcl    BYTE PTR [edx-0x42],1
  41a141:	pop    edi
  41a142:	push   0x507def8c
  41a147:	dec    esi
  41a148:	icebp  
  41a149:	cmp    al,BYTE PTR [esp-0x1b2f8576]
  41a150:	sbb    BYTE PTR [esi-0x1bd44f2b],bl
  41a156:	shl    BYTE PTR [esi-0x3a1f4fc8],0x23
  41a15d:	(bad)  
  41a15e:	fist   WORD PTR [eax+0x7c]
  41a161:	imul   esp,DWORD PTR [esp+ebp*2],0x2d
  41a165:	icebp  
  41a166:	ja     0x41a126
  41a168:	and    bl,ch
  41a16a:	inc    esi
  41a16b:	mov    WORD PTR [edi-0x80],cs
  41a16e:	pop    ss
  41a16f:	cwde   
  41a170:	mov    eax,ds:0xacea5fe8
  41a175:	mov    cl,0xc1
  41a177:	mov    ebp,0x287e28a8
  41a17c:	data16 das 
  41a17e:	hlt    
  41a17f:	rcr    bh,1
  41a181:	mul    esp
  41a183:	in     al,dx
  41a184:	in     al,dx
  41a185:	cwde   
  41a186:	cmc    
  41a187:	loope  0x41a1f1
  41a189:	xchg   edi,eax
  41a18a:	pushf  
  41a18b:	mov    WORD PTR [eax-0x23a3e6c],ss
  41a191:	addr16 ret 0xd8f4
  41a195:	inc    esp
  41a196:	clc    
  41a197:	pop    ebp
  41a198:	add    ah,0x20
  41a19b:	aas    
  41a19c:	lock jne 0x41a202
  41a19f:	inc    esp
  41a1a0:	in     eax,0xc4
  41a1a2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41a1a4:	adc    dh,BYTE PTR [ecx+eax*8]
  41a1a7:	leave  
  41a1a8:	mov    esp,0x100c4b5f
  41a1ad:	popa   
  41a1ae:	adc    ecx,DWORD PTR [edx+0x76]
  41a1b1:	ret    0xe6ad
  41a1b4:	mov    esp,0x44a4a947
  41a1b9:	retf   0x9d74
  41a1bc:	mov    ds,eax
  41a1be:	aam    0xe0
  41a1c0:	adc    cl,0x6c
  41a1c3:	loopne 0x41a179
  41a1c5:	clc    
  41a1c6:	mov    BYTE PTR ds:0xf4798184,al
  41a1cc:	jmp    FWORD PTR [esi]
  41a1ce:	mov    ebp,0x829441c
  41a1d3:	mov    cl,0x8c
  41a1d5:	sbb    DWORD PTR [esi],edi
  41a1d7:	adc    BYTE PTR [ecx],al
  41a1d9:	or     BYTE PTR [edi-0x14619ec2],dh
  41a1df:	inc    esp
  41a1e0:	test   eax,0xe07cc98a
  41a1e5:	fadd   QWORD PTR [edx]
  41a1e7:	jno    0x41a201
  41a1e9:	rcl    BYTE PTR [ebx+0x20fc6cac],1
  41a1ef:	sub    bl,BYTE PTR [esi-0x1]
  41a1f2:	adc    BYTE PTR [edi],al
  41a1f4:	icebp  
  41a1f5:	add    eax,0x4d08acf0
  41a1fa:	pop    edi
  41a1fb:	rcr    DWORD PTR [eax-0x73d61663],0x84
  41a202:	push   ss
  41a203:	hlt    
  41a204:	icebp  
  41a205:	and    BYTE PTR [edi],ah
  41a207:	sub    BYTE PTR [edx+edi*2],al
  41a20a:	or     al,dh
  41a20c:	dec    edi
  41a20d:	inc    eax
  41a20e:	push   edx
  41a20f:	jno    0x41a1d5
  41a211:	jbe    0x41a1a7
  41a213:	sbb    BYTE PTR [eax],bl
  41a215:	inc    edx
  41a216:	inc    esi
  41a217:	pop    eax
  41a218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a219:	adc    dl,BYTE PTR [esi+0x5a]
  41a21c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a21d:	loop   0x41a29a
  41a21f:	sub    BYTE PTR [ecx+0x5],dh
  41a222:	mov    BYTE PTR [eax-0x747a6229],dl
  41a228:	or     al,0xe9
  41a22a:	pushf  
  41a22b:	repnz xchg esp,ecx
  41a22e:	sub    edi,DWORD PTR [edx]
  41a230:	adc    BYTE PTR [edx],ah
  41a232:	jo     0x41a1f7
  41a234:	push   ebp
  41a235:	sub    al,0x68
  41a237:	pop    ebp
  41a238:	repz in al,dx
  41a23a:	cmp    BYTE PTR [edi-0x78],cl
  41a23d:	and    al,0x90
  41a23f:	jo     0x41a2b1
  41a241:	je     0x41a21e
  41a243:	cmp    al,0xa0
  41a245:	cwde   
  41a246:	pusha  
  41a247:	or     ah,BYTE PTR [ebx-0x5bc1664c]
  41a24d:	lods   al,BYTE PTR ds:[esi]
  41a24e:	inc    eax
  41a24f:	jno    0x41a1f6
  41a251:	adc    al,0xbc
  41a253:	xor    al,0x28
  41a255:	push   0x51565455
  41a25a:	mov    ah,0xac
  41a25c:	gs push 0x4c
  41a25f:	sbb    dh,BYTE PTR [ebp-0x70]
  41a262:	fist   WORD PTR [ebx+0x56b78864]
  41a268:	mov    ebp,0x1d487e18
  41a26d:	retf   0x99a8
  41a270:	aam    0xbc
  41a272:	dec    edx
  41a273:	test   esp,eax
  41a275:	or     al,0xcd
  41a277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a278:	rcl    bh,cl
  41a27a:	imul   ebp,DWORD PTR [ebp-0xcf817d4],0x12
  41a281:	jbe    0x41a25c
  41a283:	aad    0xd8
  41a285:	ficom  DWORD PTR [edx+0x4885f9fc]
  41a28b:	jno    0x41a2dd
  41a28d:	push   ebx
  41a28e:	dec    edi
  41a28f:	cmp    eax,0xfd20f9b8
  41a294:	mov    ebp,0x88d2a528
  41a299:	clc    
  41a29a:	or     bl,bl
  41a29c:	or     cl,ch
  41a29e:	sbb    BYTE PTR [edx+0x2aebfc78],dl
  41a2a4:	or     BYTE PTR [edi-0x576c07ab],al
  41a2aa:	das    
  41a2ab:	mov    eax,ds:0x64f9f025
  41a2b0:	in     al,dx
  41a2b1:	xchg   ecx,eax
  41a2b2:	sub    al,0x55
  41a2b4:	ins    BYTE PTR es:[edi],dx
  41a2b5:	stc    
  41a2b6:	(bad)  
  41a2b7:	fadd   DWORD PTR [ebp+0x48d6f23]
  41a2bd:	jnp    0x41a270
  41a2bf:	and    al,0x5d
  41a2c1:	rol    BYTE PTR [ecx],0x8b
  41a2c4:	jno    0x41a2ba
  41a2c6:	adc    al,0xf9
  41a2c8:	sbb    DWORD PTR ds:0x750e2dc5,eax
  41a2ce:	mov    ah,0x38
  41a2d0:	sti    
  41a2d1:	add    eax,0x2badac34
  41a2d6:	push   ebx
  41a2d7:	int3   
  41a2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d9:	add    al,0x0
  41a2db:	xor    al,0xf0
  41a2dd:	out    dx,al
  41a2de:	cmp    edx,DWORD PTR [esp+edi*2]
  41a2e1:	push   ds
  41a2e2:	sub    DWORD PTR [ebp+esi*2-0x63],ecx
  41a2e6:	stc    
  41a2e7:	int    0xc1
  41a2e9:	pop    ss
  41a2ea:	test   eax,0x583518c0
  41a2ef:	adc    esp,ebx
  41a2f1:	sbb    al,0xb4
  41a2f3:	push   cs
  41a2f4:	push   eax
  41a2f5:	fst    QWORD PTR [ebp-0x32]
  41a2f8:	xor    al,0x35
  41a2fa:	push   0xfca9a479
  41a2ff:	sbb    eax,0x340c5948
  41a304:	and    DWORD PTR [eax+0x4d],edx
  41a307:	and    BYTE PTR [ecx],bl
  41a309:	ins    BYTE PTR es:[edi],dx
  41a30a:	jl     0x41a33c
  41a30c:	push   edx
  41a30d:	mov    ah,0x38
  41a30f:	push   ebp
  41a310:	xor    al,0x2a
  41a312:	dec    esp
  41a313:	pop    ebp
  41a314:	xor    BYTE PTR [ebp+esi*2+0x30],ah
  41a31b:	add    BYTE PTR [eax],al
  41a31d:	add    BYTE PTR [eax],al
  41a31f:	add    BYTE PTR ds:0x3e55101c,bh
  41a325:	pop    es
  41a326:	add    BYTE PTR [eax],al
  41a328:	add    BYTE PTR [eax],al
  41a32a:	add    BYTE PTR [eax],al
  41a32c:	ds pop es
  41a32e:	add    BYTE PTR [eax],al
  41a330:	adc    al,0x0
  41a332:	es jl  0x41a335
  41a335:	add    dh,BYTE PTR [esi]
  41a337:	or     BYTE PTR [eax],al
  41a339:	add    cl,dl
  41a33b:	dec    ebx
  41a33c:	add    BYTE PTR [esi+0x8],0x6a
  41a340:	pushf  
  41a341:	or     DWORD PTR [eax-0x20],ebx
  41a344:	and    DWORD PTR [esp+ecx*1+0x29],eax
  41a348:	or     al,0x36
  41a34a:	pop    eax
  41a34b:	sbb    DWORD PTR [eax+0x46],edi
  41a34e:	js     0x41a3b1
  41a350:	fs jne 0x41a3ab
  41a353:	ins    BYTE PTR es:[edi],dx
  41a354:	cld    
  41a355:	jmp    0x41a3c4
  41a357:	add    al,0x70
  41a359:	ins    BYTE PTR es:[edi],dx
  41a35a:	repz cmp DWORD PTR [eax],ecx
  41a35d:	test   BYTE PTR [ebx],ch
  41a35f:	rcl    BYTE PTR [edx+0x443f9c88],1
  41a365:	sub    BYTE PTR [eax],dh
  41a367:	adc    BYTE PTR [ecx+0x28e3347d],bh
  41a36d:	dec    ecx
  41a36e:	jo     0x41a345
  41a370:	mov    ah,0x58
  41a372:	mov    al,ds:0x69af9b9f
  41a377:	fmul   DWORD PTR [edi-0x7a7f17c6]
  41a37d:	mov    BYTE PTR [esi+0x3fa09531],cl
  41a383:	cld    
  41a384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a385:	mov    dl,0xa4
  41a387:	ja     0x41a33a
  41a389:	call   0x490f6e4a
  41a38e:	push   eax
  41a38f:	xchg   esp,eax
  41a390:	push   eax
  41a391:	fwait
  41a392:	xor    BYTE PTR gs:[edx+0x56],ch
  41a396:	jo     0x41a40c
  41a398:	fnstcw WORD PTR [eax-0x40]
  41a39b:	je     0x41a367
  41a39d:	mov    WORD PTR [ecx],ds
  41a39f:	adc    DWORD PTR [eax-0x64],eax
  41a3a2:	les    eax,FWORD PTR ds:0xa0b2a4a2
  41a3a8:	fs mov esp,0x8cdd3bd4
  41a3ae:	and    esp,eax
  41a3b0:	cwde   
  41a3b1:	fadd   QWORD PTR [ebx+0x44]
  41a3b4:	call   0x94bac281
  41a3b9:	add    cl,0xa9
  41a3bc:	mov    WORD PTR [eax+0x5f9cf2cd],ss
  41a3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3c3:	mov    ebp,0xb8f44030
  41a3c8:	aam    0xc0
  41a3ca:	xor    al,BYTE PTR [edx-0x63212f74]
  41a3d0:	fdiv   st(7),st
  41a3d2:	addr16 aad 0xed
  41a3d5:	shl    ah,1
  41a3d7:	lods   al,BYTE PTR ds:[esi]
  41a3d8:	mov    DWORD PTR [eax],ecx
  41a3da:	add    al,0x2b
  41a3dc:	sub    eax,0xa1703711
  41a3e1:	call   DWORD PTR [edi+0x28]
  41a3e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e5:	loopne 0x41a39f
  41a3e7:	call   0xd2d0:0x10dd3b90
  41a3ee:	fcom   DWORD PTR ds:0xba242823
  41a3f4:	jnp    0x41a3a6
  41a3f6:	fdiv   st(4),st
  41a3f8:	adc    al,0xf
  41a3fa:	enter  0x3879,0x9f
  41a3fe:	push   esp
  41a3ff:	cmp    BYTE PTR [edx],ah
  41a401:	xor    al,0x28
  41a403:	daa    
  41a404:	cmp    al,0x7
  41a406:	jmp    0xd408:0xc643b1cb
  41a40d:	rcl    esp,1
  41a40f:	loopne 0x41a3f4
  41a411:	sbb    BYTE PTR [edi+0x33],ah
  41a414:	add    ebx,edx
  41a416:	cwde   
  41a417:	add    BYTE PTR [ebx],dl
  41a419:	rol    BYTE PTR [edi+0x1f1f15d6],0xf1
  41a420:	xor    bl,al
  41a422:	imul   esi,DWORD PTR [eax],0x3f
  41a425:	fs mov esp,0x406c1048
  41a42b:	push   ecx
  41a42c:	aad    0x49
  41a42e:	lea    ecx,[ecx+0x1e21b3b5]
  41a434:	sub    esp,edi
  41a436:	fmul   DWORD PTR [edi]
  41a438:	sar    DWORD PTR [ecx-0x1c],0xe3
  41a43c:	jmp    0x41a3d5
  41a43e:	sub    dl,ah
  41a440:	test   al,0x3e
  41a442:	and    al,0xb4
  41a444:	sub    BYTE PTR [eax+0x64],bh
  41a447:	push   esp
  41a448:	mov    edi,0x8957b60c
  41a44d:	outs   dx,BYTE PTR cs:[esi]
  41a44f:	pop    edi
  41a450:	call   0x70a5abd4
  41a455:	push   cs
  41a456:	(bad)  
  41a457:	mov    edi,0x9de69908
  41a45c:	push   edx
  41a45d:	and    cl,BYTE PTR [edi]
  41a45f:	sub    BYTE PTR [eax],ah
  41a461:	sub    esp,DWORD PTR [eax+0x1c]
  41a464:	sub    BYTE PTR [ebx-0x61],dh
  41a467:	dec    ebp
  41a468:	int3   
  41a469:	push   esp
  41a46a:	pop    esp
  41a46b:	fcomp  DWORD PTR [eax+0x6c]
  41a46e:	xchg   ebx,eax
  41a46f:	mov    dl,0x9b
  41a471:	test   al,0x74
  41a473:	sti    
  41a474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a475:	or     BYTE PTR [edi],0x42
  41a478:	pop    es
  41a479:	inc    ebx
  41a47a:	pop    ds
  41a47b:	call   0xa06e:0xf6972145
  41a482:	mov    ah,0x95
  41a484:	sbb    BYTE PTR [ebx+ecx*2+0x4c],al
  41a488:	push   eax
  41a489:	and    BYTE PTR [edx-0x21],bh
  41a48c:	mov    BYTE PTR [eax+0x68],ah
  41a48f:	sbb    BYTE PTR [edi-0x9],ah
  41a492:	nop
  41a493:	jno    0x41a489
  41a495:	mov    al,al
  41a497:	mov    esp,fs
  41a499:	xchg   edi,eax
  41a49a:	stos   DWORD PTR es:[edi],eax
  41a49b:	pop    esp
  41a49c:	arpl   WORD PTR [esp+ebp*4],bx
  41a49f:	test   al,0x90
  41a4a1:	mov    ah,0xb8
  41a4a3:	jg     0x41a51d
  41a4a5:	(bad)  
  41a4a6:	dec    edx
  41a4a7:	into   
  41a4a8:	aam    0xdc
  41a4aa:	fstp   QWORD PTR [ebp-0x1e]
  41a4ad:	cmc    
  41a4ae:	in     eax,dx
  41a4af:	jne    0x41a4b0
  41a4b1:	xchg   DWORD PTR [edx],ebp
  41a4b3:	xlat   BYTE PTR ds:[ebx]
  41a4b4:	jo     0x98d79d36
  41a4ba:	add    eax,0xea255b93
  41a4bf:	lock test al,0xef
  41a4c2:	in     al,dx
  41a4c3:	sub    BYTE PTR [ecx+0x14d54ce8],al
  41a4c9:	fcom   st(3)
  41a4cb:	push   edi
  41a4cc:	sub    al,0x63
  41a4ce:	sub    eax,0xfcfc8a79
  41a4d3:	mov    DWORD PTR [edx+0x0],edi
  41a4d6:	test   DWORD PTR [esi-0x6c],ebp
  41a4d9:	pop    ebp
  41a4da:	inc    ecx
  41a4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4dc:	mov    eax,0xc63971a7
  41a4e1:	lods   al,BYTE PTR ds:[esi]
  41a4e2:	imul   ebp,DWORD PTR [edi+0x40],0x67
  41a4e6:	imul   eax,esp,0x20637a58
  41a4ec:	in     al,0xec
  41a4ee:	out    0xfc,al
  41a4f0:	shl    DWORD PTR [edx],cl
  41a4f2:	mov    edi,0x4861405
  41a4f7:	adc    eax,0x64301c90
  41a4fc:	addr16 pop ecx
  41a4fe:	(bad)  
  41a4ff:	mov    ecx,0xc881ddbe
  41a504:	retf   
  41a505:	outs   dx,BYTE PTR ds:[esi]
  41a506:	push   ebp
  41a507:	addr16 push esi
  41a509:	hlt    
  41a50a:	in     al,dx
  41a50b:	push   0x8de4bee5
  41a510:	or     ebx,DWORD PTR [edi+0x5a]
  41a513:	mov    BYTE PTR ds:0xcf49f45,bh
  41a519:	mov    eax,ds:0xb42934c8
  41a51e:	dec    BYTE PTR [ebx]
  41a520:	stc    
  41a521:	leave  
  41a522:	inc    esp
  41a523:	or     eax,0xd50303b0
  41a528:	(bad)  [eax+0xb0fec12]
  41a52e:	test   al,0x3
  41a530:	jbe    0x41a532
  41a532:	neg    DWORD PTR [ecx]
  41a534:	sbb    ch,BYTE PTR [eax]
  41a536:	pop    eax
  41a537:	inc    ecx
  41a538:	lahf   
  41a539:	in     eax,0x25
  41a53b:	test   eax,0x3ebc3bf0
  41a540:	mov    esp,0x907f27c4
  41a545:	(bad)  
  41a547:	pop    ecx
  41a548:	pushf  
  41a549:	fs xchg esi,eax
  41a54b:	xchg   ebx,eax
  41a54c:	(bad)  
  41a54d:	xor    al,0x43
  41a54f:	mov    ebx,0x6c070f2
  41a554:	xchg   ecx,eax
  41a555:	neg    BYTE PTR [edx+ebp*1+0x342dade2]
  41a55c:	adc    al,0xb8
  41a55e:	mov    eax,0xc1783080
  41a563:	int    0xbb
  41a565:	pop    eax
  41a566:	pop    eax
  41a567:	pusha  
  41a568:	imul   ebx,esi,0xffffffa4
  41a56b:	jg     0x41a52f
  41a56d:	jnp    0x41a5b6
  41a56f:	dec    eax
  41a570:	test   bh,bh
  41a572:	call   0x302d:0xccd855bb
  41a579:	stos   BYTE PTR es:[edi],al
  41a57a:	mov    eax,ds:0x6056b371
  41a57f:	push   ss
  41a580:	mov    al,ds:0x58564fce
  41a585:	fisttp QWORD PTR [eax-0x12]
  41a588:	sub    ebp,DWORD PTR [ebp-0xd]
  41a58b:	mov    bh,0x7a
  41a58d:	ins    BYTE PTR es:[edi],dx
  41a58e:	add    al,0x44
  41a590:	std    
  41a591:	pop    edx
  41a592:	nop
  41a593:	in     eax,dx
  41a594:	out    dx,al
  41a595:	nop
  41a596:	sub    eax,0xb0502dc8
  41a59b:	mov    ecx,0x490a778
  41a5a0:	(bad)  
  41a5a1:	dec    ebp
  41a5a2:	fiadd  DWORD PTR [eax+ebx*2+0x6c0265b6]
  41a5a9:	cwde   
  41a5aa:	ja     0x41a607
  41a5ac:	cld    
  41a5ad:	fwait
  41a5ae:	mov    BYTE PTR [ebx-0x21],dl
  41a5b1:	push   eax
  41a5b2:	xchg   ecx,eax
  41a5b3:	fcomp  DWORD PTR [ecx-0x4a8a4a3]
  41a5b9:	cmc    
  41a5ba:	xor    bh,BYTE PTR [edi-0x64363f15]
  41a5c0:	and    al,0x66
  41a5c2:	xchg   esp,eax
  41a5c3:	pop    eax
  41a5c4:	pop    edi
  41a5c5:	cld    
  41a5c6:	and    BYTE PTR [eax+ebp*8-0x4960b08],ch
  41a5cd:	or     BYTE PTR [eax+ecx*1-0x6e],ch
  41a5d1:	ss cwde 
  41a5d3:	fnsave [esi-0x4dc2bf09]
  41a5d9:	mov    ebp,0xc08d7d9c
  41a5de:	inc    esp
  41a5df:	mov    DWORD PTR [ecx-0x33],edx
  41a5e2:	cs sbb eax,0xece690e1
  41a5e8:	jo     0x41a5a2
  41a5ea:	(bad)  
  41a5eb:	loope  0x41a5fd
  41a5ed:	mov    es,WORD PTR [ecx+ecx*1-0x8f26aef]
  41a5f4:	xor    edx,edx
  41a5f6:	jmp    0x31eeea29
  41a5fb:	inc    ecx
  41a5fc:	shr    al,0x4d
  41a5ff:	aam    0xd4
  41a601:	retf   0x6c54
  41a604:	loop   0x41a5ef
  41a606:	mov    al,ds:0x74ff1fc0
  41a60b:	pushf  
  41a60c:	push   es
  41a60d:	or     cl,ch
  41a60f:	sub    ch,BYTE PTR [ebx-0x588d410d]
  41a615:	jns    0x41a602
  41a617:	mov    ch,0xd0
  41a619:	mov    eax,0x6444df2d
  41a61e:	add    al,0x63
  41a620:	popf   
  41a621:	jno    0x41a645
  41a623:	out    0x63,al
  41a625:	jns    0x41a5d8
  41a627:	cmc    
  41a628:	jne    0x41a622
  41a62a:	test   BYTE PTR [edx],cl
  41a62c:	mov    DWORD PTR [ebx],ecx
  41a62e:	adc    eax,esp
  41a630:	xchg   ebp,eax
  41a631:	inc    esi
  41a632:	add    BYTE PTR [ebx+ebp*4],ah
  41a635:	xlat   BYTE PTR ds:[ebx]
  41a636:	sub    DWORD PTR [ebx+0x32],eax
  41a639:	mov    esp,0x51484a0c
  41a63e:	inc    eax
  41a63f:	(bad)  [ecx]
  41a641:	jl     0x41a5ce
  41a643:	imul   ebp,ebx,0xf6d8a7c
  41a649:	jo     0x41a64c
  41a64b:	xchg   DWORD PTR [ebx*4-0x5703e7bb],ebp
  41a652:	xor    al,0xc3
  41a654:	das    
  41a655:	div    BYTE PTR [eax+edi*1]
  41a658:	cmp    al,0x1
  41a65a:	jg     0x41a5e3
  41a65c:	ds xchg esi,eax
  41a65e:	fist   WORD PTR ds:0x5b3b20a0
  41a664:	mov    eax,ds:0xbc749c2b
  41a669:	(bad)  
  41a66a:	dec    ebp
  41a66b:	mov    BYTE PTR [edi-0x6],cl
  41a66e:	cwde   
  41a66f:	lock mov WORD PTR [edx-0x1a],es
  41a673:	test   al,0xac
  41a675:	fadd   QWORD PTR [edi+eiz*1-0x2a5fbbc0]
  41a67c:	pop    ecx
  41a67d:	push   esp
  41a67e:	pop    eax
  41a67f:	pop    esp
  41a680:	jmp    0x41a61e
  41a682:	leave  
  41a683:	pop    esp
  41a684:	test   DWORD PTR [esi],esi
  41a686:	js     0x41a704
  41a688:	add    eax,0x8df8f8c3
  41a68d:	pop    ss
  41a68e:	out    0x9c,eax
  41a690:	int3   
  41a691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a692:	fdivr  QWORD PTR [ebx+0x39d0c33b]
  41a698:	xor    BYTE PTR [edx],0x8
  41a69b:	jae    0x41a68d
  41a69d:	cmp    al,0x15
  41a69f:	jno    0x41a645
  41a6a1:	xlat   BYTE PTR ds:[ebx]
  41a6a2:	out    0x78,eax
  41a6a4:	mov    dl,0x90
  41a6a6:	test   al,0x80
  41a6a8:	(bad)  
  41a6a9:	dec    ebx
  41a6aa:	out    0x9d,al
  41a6ac:	jl     0x41a6c8
  41a6ae:	adc    esp,eax
  41a6b0:	out    dx,eax
  41a6b1:	icebp  
  41a6b2:	das    
  41a6b3:	aad    0x48
  41a6b5:	mov    eax,0x41c4c83c
  41a6ba:	mov    ecx,0xe4edef34
  41a6bf:	adc    al,0xa6
  41a6c1:	call   0x7e042bb2
  41a6c6:	or     dh,BYTE PTR [edx+edx*4-0x26]
  41a6ca:	cwde   
  41a6cb:	imul   ecx,DWORD PTR [ebp+0x2d62201c],0x6c
  41a6d2:	lds    edi,FWORD PTR [ebx-0x7ac1c244]
  41a6d8:	inc    ecx
  41a6d9:	mov    eax,0x4e3082d7
  41a6de:	gs and eax,0xfdf14de3
  41a6e4:	jno    0x41a6a1
  41a6e6:	push   0x5b09aa8f
  41a6eb:	aam    0x1e
  41a6ed:	pop    esp
  41a6ee:	and    eax,0x73b56858
  41a6f3:	std    
  41a6f4:	jge    0x41a6de
  41a6f6:	cmp    ecx,edx
  41a6f8:	and    al,0xf0
  41a6fa:	xchg   edi,eax
  41a6fb:	fdiv   DWORD PTR [edi]
  41a6fd:	outs   dx,BYTE PTR ds:[esi]
  41a6fe:	outs   dx,DWORD PTR ds:[esi]
  41a6ff:	popf   
  41a700:	or     cl,ch
  41a702:	hlt    
  41a703:	hlt    
  41a704:	test   eax,0x6f0e0422
  41a709:	push   esi
  41a70a:	xchg   edi,eax
  41a70b:	hlt    
  41a70c:	or     al,0x22
  41a70e:	ja     0x41a718
  41a710:	pop    ds
  41a711:	mov    ebp,0x21d4c879
  41a716:	mov    ebp,0x51afb308
  41a71b:	rcl    DWORD PTR [edx+ebx*1-0x6bf15c58],0x6
  41a723:	mov    DWORD PTR [esi],ebx
  41a725:	ret    
  41a726:	or     eax,0x64f5114d
  41a72b:	jecxz  0x41a751
  41a72d:	xor    DWORD PTR [esp+ecx*2],ebx
  41a730:	ja     0x41a73e
  41a732:	shl    BYTE PTR gs:[ecx+eax*1],0x48
  41a737:	(bad)  
  41a738:	sbb    eax,0x103ddbac
  41a73d:	cdq    
  41a73e:	sub    DWORD PTR [esp+ecx*2],0xfffffff7
  41a742:	xchg   BYTE PTR [ecx+0x14451a71],al
  41a748:	sub    al,0x19
  41a74a:	pop    esp
  41a74b:	and    al,0xcf
  41a74d:	repz scas eax,DWORD PTR es:[edi]
  41a74f:	into   
  41a750:	enter  0x2e4d,0x0
  41a754:	iret   
  41a755:	or     eax,0x5c14dbbc
  41a75a:	(bad)  [ebx-0x71]
  41a75d:	push   0xffffffa8
  41a75f:	adc    DWORD PTR [ebx+0x7f],esi
  41a762:	test   ebp,0xd0ec0b7c
  41a768:	in     al,0x65
  41a76a:	pop    ss
  41a76b:	jmp    bp
  41a76e:	push   ebp
  41a76f:	cmp    ebx,DWORD PTR [eax]
  41a771:	cmp    eax,0x11c311c8
  41a776:	pop    esp
  41a777:	add    dl,bl
  41a779:	sub    DWORD PTR [eax+0x6c],ebp
  41a77c:	aas    
  41a77d:	test   BYTE PTR [esp+esi*4],dl
  41a780:	ins    DWORD PTR es:[edi],dx
  41a781:	idiv   DWORD PTR [eax-0x49]
  41a784:	jle    0x41a712
  41a786:	sbb    ecx,ebp
  41a788:	nop
  41a789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a78a:	pop    esi
  41a78b:	shl    DWORD PTR [esi+0x5077b827],1
  41a791:	push   es
  41a792:	sar    ch,0xfb
  41a795:	or     al,0xbd
  41a797:	stc    
  41a798:	fnstsw ax
  41a79a:	ins    DWORD PTR es:[edi],dx
  41a79b:	push   0x41b44377
  41a7a0:	(bad)  
  41a7a1:	shl    ah,0x94
  41a7a4:	test   BYTE PTR [edi-0x5042f6f0],bl
  41a7aa:	loope  0x41a7f8
  41a7ac:	das    
  41a7ad:	jo     0x41a76b
  41a7af:	mov    BYTE PTR [ecx-0x41367bd0],al
  41a7b5:	aaa    
  41a7b6:	push   ebp
  41a7b7:	daa    
  41a7b8:	hlt    
  41a7b9:	or     BYTE PTR [ecx],bl
  41a7bb:	call   0xd8c29bac
  41a7c0:	test   DWORD PTR ds:0xf6790677,eax
  41a7c6:	cdq    
  41a7c7:	hlt    
  41a7c8:	shl    BYTE PTR [ebp+0x34771ba7],0x32
  41a7cf:	stos   BYTE PTR es:[edi],al
  41a7d0:	lock test ah,bl
  41a7d3:	dec    ebp
  41a7d4:	pop    DWORD PTR [edx-0x5e922108]
  41a7da:	add    bl,bl
  41a7dc:	nop
  41a7dd:	mov    ebx,0x6419e7a
  41a7e2:	aas    
  41a7e3:	dec    esp
  41a7e4:	adc    dh,BYTE PTR [esi]
  41a7e6:	ins    BYTE PTR es:[edi],dx
  41a7e7:	xchg   ecx,eax
  41a7e8:	arpl   ax,bp
  41a7ea:	mov    al,0xe6
  41a7ec:	in     al,0x50
  41a7ee:	sbb    esp,ebx
  41a7f0:	and    al,0x9d
  41a7f2:	push   ds
  41a7f3:	rcl    BYTE PTR [esi-0x609678c8],cl
  41a7f9:	in     al,dx
  41a7fa:	gs cmp eax,0xffffffd8
  41a7fe:	lds    edx,FWORD PTR [ebp-0x14]
  41a801:	pop    es
  41a802:	mov    dh,BYTE PTR [ecx+0x72]
  41a805:	cwde   
  41a806:	popa   
  41a807:	sub    cl,dl
  41a809:	push   0x3914e326
  41a80e:	mov    cl,0x35
  41a810:	stos   DWORD PTR es:[edi],eax
  41a811:	ret    0xdaf0
  41a814:	pop    esp
  41a815:	adc    eax,0xace860ef
  41a81a:	lock sti 
  41a81c:	cmp    al,0x4a
  41a81e:	inc    esi
  41a81f:	and    al,0x6d
  41a821:	(bad)  
  41a824:	js     0x41a843
  41a826:	call   0xf0b3b257
  41a82b:	cmp    al,0xb3
  41a82d:	jno    0x41a7d3
  41a82f:	test   BYTE PTR [eax+0x27],al
  41a832:	cdq    
  41a833:	aam    0x68
  41a835:	aad    0x15
  41a837:	test   ch,ah
  41a839:	frstor [eax]
  41a83b:	pop    ss
  41a83c:	iret   
  41a83d:	and    bh,ch
  41a83f:	and    eax,DWORD PTR [esi+0x70981556]
  41a845:	or     DWORD PTR [ebx],ebp
  41a847:	push   0x8e3b0e9a
  41a84c:	cld    
  41a84d:	stos   DWORD PTR es:[edi],eax
  41a84e:	add    al,0x6e
  41a850:	lods   al,BYTE PTR ds:[esi]
  41a851:	pop    eax
  41a852:	(bad)  
  41a854:	pusha  
  41a855:	loopne 0x41a8be
  41a857:	pusha  
  41a858:	sub    BYTE PTR [ebx+0x69],cl
  41a85b:	jns    0x41a839
  41a85d:	mov    DWORD PTR [ebp-0x1d974831],eax
  41a863:	jb     0x41a87c
  41a865:	and    al,0x55
  41a867:	and    al,0xb3
  41a869:	repnz cmp bh,BYTE PTR [esi+edi*2-0x7fc6b3bc]
  41a871:	push   esp
  41a872:	outs   dx,DWORD PTR ds:[esi]
  41a873:	mov    ds:0xaaeb8425,eax
  41a878:	push   eax
  41a879:	jl     0x41a876
  41a87b:	add    DWORD PTR [eax-0x80],esp
  41a87e:	test   al,0x84
  41a880:	loop   0x41a8ff
  41a882:	fcom   QWORD PTR [edi]
  41a884:	les    edi,FWORD PTR [bp+di-0xc95]
  41a889:	mov    esp,0xc0289099
  41a88e:	and    eax,0x5a2af4ab
  41a893:	jmp    0x51230cbf
  41a898:	aaa    
  41a899:	push   0x88c009f1
  41a89e:	test   edx,ecx
  41a8a0:	repnz cwde 
  41a8a2:	pop    ss
  41a8a3:	xchg   ecx,eax
  41a8a4:	ret    0x9c21
  41a8a7:	xor    esi,DWORD PTR [ebp-0x46]
  41a8aa:	mov    esp,0x86ca0443
  41a8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8b0:	and    eax,0xcc42f53
  41a8b5:	aas    
  41a8b6:	ins    BYTE PTR es:[edi],dx
  41a8b7:	hlt    
  41a8b8:	xchg   ecx,eax
  41a8b9:	enter  0xc520,0x8
  41a8bd:	rcl    BYTE PTR [eax-0x1f677a69],0x9f
  41a8c4:	imul   ebx,edx,0xb7793546
  41a8ca:	mov    esi,0x55c3c83b
  41a8cf:	in     al,0x58
  41a8d1:	repnz shr BYTE PTR [ecx-0x55],0xf2
  41a8d6:	dec    ecx
  41a8d7:	or     bh,BYTE PTR [ecx-0x20]
  41a8da:	or     BYTE PTR [eax+ecx*1],cl
  41a8dd:	dec    esp
  41a8de:	pop    ecx
  41a8df:	popa   
  41a8e0:	loope  0x41a90d
  41a8e2:	out    0xac,eax
  41a8e4:	inc    esp
  41a8e5:	mov    dh,0xa5
  41a8e7:	clc    
  41a8e8:	mov    edx,0x9f41ce60
  41a8ed:	fdivr  DWORD PTR [edi]
  41a8ef:	fild   DWORD PTR [ecx+ebp*2+0x6688e097]
  41a8f6:	mov    bh,0x6d
  41a8f8:	xchg   DWORD PTR [ecx-0x6f],eax
  41a8fb:	jecxz  0x41a881
  41a8fd:	mov    bh,0x2d
  41a8ff:	sub    eax,0xad2b1cfd
  41a904:	js     0x41a936
  41a906:	aas    
  41a907:	adc    BYTE PTR [edi-0x4fd2c878],bh
  41a90d:	mov    bl,cl
  41a90f:	mov    ebp,0xee7913e3
  41a914:	xchg   ecx,eax
  41a915:	loopne 0x41a8a7
  41a917:	int3   
  41a918:	add    DWORD PTR [ebp-0x45],esp
  41a91b:	adc    al,0x90
  41a91d:	arpl   WORD PTR [eax+0x51],bx
  41a920:	rcr    bl,0xc0
  41a923:	mov    al,ds:0xb559b536
  41a928:	enter  0x9439,0xa4
  41a92c:	mov    cl,0x92
  41a92e:	rol    DWORD PTR [ebx],cl
  41a930:	or     BYTE PTR [esi+edx*2],al
  41a933:	push   0x777c891c
  41a938:	lea    ecx,[ebp+0x4]
  41a93b:	sub    edx,DWORD PTR [edi+0x48]
  41a93e:	sbb    BYTE PTR [edi],ch
  41a940:	mov    al,ds:0x14016d7f
  41a945:	mov    eax,0xbc46a842
  41a94a:	in     al,dx
  41a94b:	hlt    
  41a94c:	or     eax,0xbfe584d3
  41a951:	addr16 or ah,dh
  41a954:	xor    bh,al
  41a956:	jle    0x41a991
  41a958:	or     al,0xe8
  41a95a:	lahf   
  41a95b:	shl    dh,1
  41a95d:	xchg   edi,eax
  41a95e:	and    bh,bl
  41a960:	fisttp DWORD PTR [ecx+0x6f3817b3]
  41a966:	mov    edi,0xe44b4841
  41a96b:	push   esp
  41a96c:	pop    edi
  41a96d:	add    eax,0x8c2ded39
  41a972:	jne    0x41a968
  41a974:	inc    eax
  41a975:	stc    
  41a976:	xor    DWORD PTR [eax+0x6b4cf903],0x2c81eee
  41a980:	int3   
  41a981:	mov    ebp,0x81d0f23b
  41a986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a987:	sub    al,0x44
  41a989:	add    BYTE PTR [edx+esi*1+0x36ed69bd],bh
  41a990:	add    al,0x23
  41a992:	jo     0x41a987
  41a994:	inc    ecx
  41a995:	mov    eax,ds:0x665b77e7
  41a99a:	shr    al,cl
  41a99c:	or     al,0xa2
  41a99e:	stos   DWORD PTR es:[edi],eax
  41a99f:	sub    eax,0x4eb27046
  41a9a4:	mov    ecx,0xcd78b761
  41a9a9:	fist   WORD PTR [ecx+0x5]
  41a9ac:	pop    esp
  41a9ad:	loope  0x41a973
  41a9af:	mov    WORD PTR [ebp+esi*1+0x7d],?
  41a9b3:	pop    ebp
  41a9b4:	ret    0xcbf4
  41a9b7:	mov    BYTE PTR [ebx],dh
  41a9b9:	adc    BYTE PTR [eax-0x79],bh
  41a9bc:	sub    esp,edi
  41a9be:	and    BYTE PTR [ebx+edx*1-0x3343a5c4],ah
  41a9c5:	addr16 inc esp
  41a9c7:	sub    al,0xd0
  41a9c9:	fsub   st(3),st
  41a9cb:	sbb    al,0x69
  41a9cd:	in     al,0xa7
  41a9cf:	adc    al,0xf5
  41a9d1:	mov    eax,ebp
  41a9d3:	cld    
  41a9d4:	pop    WORD PTR [edi+ecx*2+0x0]
  41a9d9:	(bad)  
  41a9da:	adc    eax,0xd4ede0ac
  41a9df:	jo     0x41a997
  41a9e1:	clc    
  41a9e2:	push   edi
  41a9e3:	sub    dh,ah
  41a9e5:	retf   
  41a9e6:	icebp  
  41a9e7:	rcl    DWORD PTR [ebp-0x68],1
  41a9ea:	mov    eax,ds:0xf4a46eed
  41a9ef:	in     al,dx
  41a9f0:	jl     0x41a982
  41a9f2:	je     0x41aa24
  41a9f4:	test   BYTE PTR [ecx],0xf
  41a9f7:	stc    
  41a9f8:	pop    ss
  41a9f9:	sbb    edi,DWORD PTR ds:0x2cad5942
  41a9ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa00:	sub    al,0x19
  41aa02:	dec    esp
  41aa03:	dec    esp
  41aa04:	inc    eax
  41aa05:	hlt    
  41aa06:	and    esi,DWORD PTR [ebp+0x1b06b0db]
  41aa0c:	dec    edx
  41aa0d:	call   0x279:0x5eebe236
  41aa14:	pop    ds
  41aa15:	mov    ebp,0x45b57401
  41aa1a:	test   eax,0x632e4939
  41aa1f:	retf   
  41aa20:	out    dx,eax
  41aa21:	pop    ds
  41aa22:	gs or  BYTE PTR ds:[eax+0x50],ch
  41aa27:	mov    edi,0xe275dc68
  41aa2c:	repnz icebp 
  41aa2e:	xor    eax,0x87251781
  41aa33:	lock repz gs xor al,0x5c
  41aa38:	popf   
  41aa39:	(bad)  [edi+0x2b]
  41aa3c:	jg     0x41aa16
  41aa3e:	dec    edi
  41aa3f:	imul   edi,DWORD PTR [edi],0x8cf466a8
  41aa45:	pop    ss
  41aa46:	xchg   ebx,eax
  41aa47:	pop    eax
  41aa48:	dec    edx
  41aa49:	shl    DWORD PTR [esi+0x6c],1
  41aa4c:	out    dx,eax
  41aa4d:	hlt    
  41aa4e:	adc    DWORD PTR [eax+0x6064ff5c],ebx
  41aa54:	out    0x3,eax
  41aa56:	cwde   
  41aa57:	pop    edx
  41aa58:	add    BYTE PTR [edi+0x776b8015],ah
  41aa5e:	sub    BYTE PTR [edx+edx*2+0x2e],al
  41aa62:	dec    eax
  41aa63:	mov    cl,0xb8
  41aa65:	add    dl,BYTE PTR [ecx]
  41aa67:	inc    eax
	...
  41aa70:	jno    0x41aa87
  41aa72:	lods   al,BYTE PTR ds:[esi]
  41aa73:	inc    eax
  41aa74:	mov    edx,0x5
  41aa79:	add    BYTE PTR [eax],al
  41aa7b:	add    BYTE PTR [edx+0x15000005],bh
  41aa81:	add    BYTE PTR [esi],ah
  41aa83:	jl     0x41aa85
  41aa85:	add    dh,BYTE PTR [esi]
  41aa87:	or     BYTE PTR [eax],al
  41aa89:	add    BYTE PTR [ebp+0x49],bl
  41aa8c:	add    dl,bh
  41aa8e:	div    ebx
  41aa90:	dec    ecx
  41aa91:	rcr    DWORD PTR ds:0x6b247bb0,cl
  41aa97:	sub    al,0x31
  41aa99:	xor    al,0x38
  41aa9b:	cmp    al,0x73
  41aa9d:	test   BYTE PTR [eax-0x71],cl
  41aaa0:	fld    TBYTE PTR [ebx+0x378cd70d]
  41aaa6:	ds ins BYTE PTR es:[edi],dx
  41aaa8:	sti    
  41aaa9:	inc    ecx
  41aaaa:	add    al,0x8c
  41aaac:	rol    BYTE PTR [edi+ebx*8-0x6f166ff9],0xcb
  41aab4:	(bad)  
  41aab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aab7:	mov    bh,0x84
  41aab9:	jns    0x41aaf7
  41aabb:	xor    cl,al
  41aabd:	mov    BYTE PTR [eax],bh
  41aabf:	push   ebx
  41aac0:	add    al,0x59
  41aac2:	ins    BYTE PTR es:[edi],dx
  41aac3:	fdiv   DWORD PTR [ecx+0x61]
  41aac6:	pop    esp
  41aac7:	les    edi,FWORD PTR [ebp+0x60]
  41aaca:	mov    esp,0xd3059c87
  41aacf:	rol    BYTE PTR [edi+ebx*2-0x575d5727],0x8c
  41aad7:	xor    edi,ecx
  41aad9:	inc    eax
  41aada:	mov    esp,0x500e31f4
  41aadf:	and    BYTE PTR [ecx-0x29],dl
  41aae2:	arpl   WORD PTR [ebp+0x6c],sp
  41aae5:	pop    edx
  41aae6:	repz je 0x3d09f69
  41aaed:	mov    bl,dl
  41aaef:	nop
  41aaf0:	popf   
  41aaf1:	and    BYTE PTR [ebx-0x4c],0x57
  41aaf5:	loope  0x41aaaf
  41aaf7:	fmulp  st(5),st
  41aaf9:	mov    esp,0xe3c81080
  41aafe:	aad    0xd5
  41ab00:	mov    bl,ah
  41ab02:	cmc    
  41ab03:	mov    ebx,0x252fb2f0
  41ab08:	jg     0x41ab18
  41ab0a:	test   DWORD PTR [esi],ecx
  41ab0c:	or     DWORD PTR [edi-0x65],ebp
  41ab0f:	hlt    
  41ab10:	sbb    BYTE PTR [ebx],ah
  41ab12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab13:	mov    al,0xad
  41ab15:	sub    dh,BYTE PTR [ecx+edi*4]
  41ab18:	es mov ch,0x52
  41ab1b:	xchg   esi,eax
  41ab1c:	cld    
  41ab1d:	mov    ebx,DWORD PTR [edi+0x1f]
  41ab20:	and    esp,0xffffffa8
  41ab23:	call   0xf13e30d2
  41ab28:	ja     0x41aab0
  41ab2a:	mov    eax,0x43cb9109
  41ab2f:	and    esp,DWORD PTR [ebx-0x7c]
  41ab32:	fadd   st(3),st
  41ab34:	(bad)  
  41ab35:	fadd   QWORD PTR [edx+0x3c]
  41ab38:	jmp    0x570beee9
  41ab3d:	aad    0x95
  41ab3f:	fsub   st(0),st
  41ab41:	mov    edx,0xae85f4d1
  41ab46:	aam    0x77
  41ab48:	xchg   BYTE PTR [ebp+0x3168c45],al
  41ab4e:	cwde   
  41ab4f:	sbb    dh,BYTE PTR [ebx]
  41ab51:	je     0x41aafb
  41ab53:	(bad)  
  41ab54:	jmp    0x4d7e:0xbf3c3829
  41ab5b:	retf   0x30d4
  41ab5e:	adc    al,0xc2
  41ab60:	in     al,0xe8
  41ab62:	mov    ch,0xa9
  41ab64:	jg     0x41ab14
  41ab66:	jp     0x41ab69
  41ab68:	sub    cl,BYTE PTR [edi]
  41ab6a:	sbb    al,0xa9
  41ab6c:	adc    ecx,DWORD PTR [eax]
  41ab6e:	and    ah,BYTE PTR [edx]
  41ab70:	xor    al,0xd7
  41ab72:	inc    BYTE PTR [esi-0x1e2be04b]
  41ab78:	ret    
  41ab79:	inc    ebx
  41ab7a:	ficom  DWORD PTR [eax+0x51]
  41ab7d:	pop    ecx
  41ab7e:	inc    eax
  41ab7f:	imul   esp,ebp,0x5
  41ab82:	lock call 0x445ea844
  41ab88:	or     DWORD PTR [edx+0x1a985dd4],0xd
  41ab8f:	fisubr DWORD PTR [ecx]
  41ab91:	js     0x41ab6b
  41ab93:	inc    ecx
  41ab94:	cmp    BYTE PTR [ebx+ecx*8],ch
  41ab97:	pusha  
  41ab98:	into   
  41ab99:	adc    al,0x51
  41ab9c:	out    0xdc,eax
  41ab9e:	pusha  
  41ab9f:	inc    bx
  41aba1:	stos   DWORD PTR es:[edi],eax
  41aba2:	fsub   DWORD PTR [eax+edx*4]
  41aba5:	push   ds
  41aba6:	or     BYTE PTR [ebp-0x3f69f7a8],0x1e
  41abad:	push   es
  41abae:	sub    eax,0x7dd823e9
  41abb3:	mov    eax,0x5880c33e
  41abb8:	mov    DWORD PTR [edx-0x2e],0x5c5d6659
  41abbf:	jmp    0xe08f16ed
  41abc4:	dec    edi
  41abc5:	inc    ecx
  41abc6:	mov    al,ds:0x8ad4afc9
  41abcb:	cdq    
  41abcc:	xchg   esi,eax
  41abcd:	and    DWORD PTR [edx-0x96673c0],esp
  41abd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abd4:	xor    DWORD PTR [edx],edi
  41abd6:	dec    esi
  41abd7:	sbb    eax,0x4d09572f
  41abdc:	jmp    0x41ac4c
  41abde:	outs   dx,DWORD PTR ds:[esi]
  41abdf:	ins    BYTE PTR es:[edi],dx
  41abe0:	push   ecx
  41abe1:	jg     0x41ac5b
  41abe3:	pop    ebp
  41abe4:	xchg   esp,edx
  41abe6:	pusha  
  41abe7:	ja     0x41ab7b
  41abe9:	mov    BYTE PTR [eax+0x54fb9995],bl
  41abef:	fsub   DWORD PTR [edx-0x3b04d3c1]
  41abf5:	inc    ebx
  41abf6:	int    0x28
  41abf8:	push   ecx
  41abf9:	rcr    DWORD PTR [ebx+0x1b],1
  41abfc:	and    dh,BYTE PTR [eax-0x6fdd48a4]
  41ac02:	test   eax,0xf4428701
  41ac07:	pushf  
  41ac08:	adc    eax,ebx
  41ac0a:	arpl   sp,dx
  41ac0c:	lahf   
  41ac0d:	and    ebp,ecx
  41ac0f:	mov    eax,0xc088e734
  41ac14:	xchg   edx,eax
  41ac15:	inc    ebx
  41ac16:	cld    
  41ac17:	jmp    0x41ac3c
  41ac19:	lods   al,BYTE PTR ds:[esi]
  41ac1a:	hlt    
  41ac1b:	mov    bh,0xc4
  41ac1d:	popa   
  41ac1e:	aam    0x18
  41ac20:	sahf   
  41ac21:	add    eax,0xfe81a83c
  41ac26:	sub    al,0x64
  41ac28:	or     edx,0x48
  41ac2b:	dec    edx
  41ac2c:	sub    BYTE PTR [esi-0x434775cd],ch
  41ac32:	cdq    
  41ac33:	mov    cl,0xc7
  41ac35:	dec    ebp
  41ac36:	cs je  0x41ac67
  41ac39:	std    
  41ac3a:	and    cl,bh
  41ac3c:	out    dx,eax
  41ac3d:	mov    edx,0x4c798718
  41ac42:	mov    eax,ebx
  41ac44:	sub    BYTE PTR [edx-0x5],dl
  41ac47:	push   ss
  41ac48:	sub    ebx,esp
  41ac4a:	loopne 0x41ac8d
  41ac4c:	inc    edx
  41ac4d:	and    BYTE PTR [eax],dh
  41ac4f:	pop    esp
  41ac50:	push   0x24c88622
  41ac55:	jmp    0x41ac17
  41ac57:	push   ecx
  41ac58:	pop    esp
  41ac59:	retf   
  41ac5a:	cld    
  41ac5b:	jmp    0x80cc:0x5904ccec
  41ac62:	sub    al,0x8
  41ac64:	mov    DWORD PTR [esi+0x64],edx
  41ac67:	ins    BYTE PTR es:[edi],dx
  41ac68:	mov    ds:0x300c445a,eax
  41ac6e:	inc    eax
  41ac6f:	and    al,0xd4
  41ac71:	inc    ecx
  41ac72:	lds    ecx,FWORD PTR [ebp+0x3c]
  41ac75:	cmp    al,0x54
  41ac77:	(bad)  [edx-0x2f791feb]
  41ac7d:	sbb    al,0x3b
  41ac7f:	or     DWORD PTR ds:[edx+ebp*1],eax
  41ac83:	xchg   esi,edx
  41ac85:	cld    
  41ac86:	push   esi
  41ac87:	pop    esp
  41ac88:	sub    al,0xa4
  41ac8a:	daa    
  41ac8b:	sub    al,bl
  41ac8d:	cmp    eax,0xb82515fa
  41ac92:	dec    eax
  41ac93:	mov    bl,0x65
  41ac95:	push   esp
  41ac96:	and    BYTE PTR [ebx-0x55149bde],ch
  41ac9c:	sbb    al,0x22
  41ac9e:	jo     0x41ac34
  41aca0:	fnstcw WORD PTR [ebx-0x78]
  41aca3:	xchg   ebp,eax
  41aca4:	dec    ebp
  41aca5:	xchg   ecx,eax
  41aca6:	pop    ecx
  41aca7:	les    ebp,FWORD PTR [edi+ebp*8+0x69]
  41acab:	int3   
  41acac:	hlt    
  41acad:	and    eax,ebx
  41acaf:	test   al,0x4
  41acb1:	pop    eax
  41acb2:	dec    esp
  41acb3:	je     0x41ac74
  41acb5:	out    0x1c,al
  41acb7:	imul   esp,DWORD PTR [esi+0x73],0x2d
  41acbb:	jg     0x41acbe
  41acbd:	pushf  
  41acbe:	jl     0x41ad03
  41acc0:	out    dx,al
  41acc1:	mov    BYTE PTR [ebx-0x7b],dh
  41acc4:	mov    eax,0xa480dc69
  41acc9:	imul   edx,DWORD PTR [ebx-0x5b],0xffffff9c
  41accd:	mov    esp,0xcc4c8641
  41acd2:	push   eax
  41acd3:	fbld   TBYTE PTR [edi-0x17ae60f6]
  41acd9:	in     al,dx
  41acda:	pusha  
  41acdb:	cmp    al,0x87
  41acdd:	imul   esp,DWORD PTR [esp+eax*8-0x6b9ff874],0x5bf08784
  41ace8:	popf   
  41ace9:	cmp    BYTE PTR [esi-0xb],cl
  41acec:	mov    esp,0x437400ec
  41acf1:	(bad)  
  41acf2:	and    dl,dl
  41acf4:	sar    ah,1
  41acf6:	gs pusha 
  41acf8:	stos   BYTE PTR es:[edi],al
  41acf9:	cs mov bh,0xd9
  41acfc:	jle    0x41acfa
  41acfe:	add    eax,0xe06f7494
  41ad03:	mov    cs,esp
  41ad05:	pop    edi
  41ad06:	and    BYTE PTR [ebp+0x47bef630],bl
  41ad0c:	ins    BYTE PTR es:[edi],dx
  41ad0d:	inc    ebx
  41ad0e:	leave  
  41ad0f:	mov    edx,ecx
  41ad11:	fsubr  QWORD PTR [ebx]
  41ad13:	jns    0x41ad72
  41ad15:	jmp    0x41ad3c
  41ad17:	out    dx,eax
  41ad18:	loop   0x41acba
  41ad1a:	or     ebp,ebp
  41ad1c:	out    dx,al
  41ad1d:	dec    esp
  41ad1e:	inc    esp
  41ad1f:	push   cs
  41ad20:	adc    ebx,DWORD PTR [ecx-0x78b67366]
  41ad26:	mov    dl,0xec
  41ad28:	mov    al,0xb4
  41ad2a:	shl    BYTE PTR [eax+ebp*4-0x100df64c],cl
  41ad31:	xchg   esp,eax
  41ad32:	retf   
  41ad33:	fsubr  st(0),st
  41ad35:	mov    WORD PTR [eax-0x12068feb],?
  41ad3b:	(bad)  
  41ad3c:	mov    ah,0x85
  41ad3e:	adc    DWORD PTR [ecx+0x18],edi
  41ad41:	rcr    DWORD PTR [esi+0x40],cl
  41ad44:	sbb    BYTE PTR [esp+ebp*1],ah
  41ad47:	ins    DWORD PTR es:[edi],dx
  41ad48:	xor    BYTE PTR [ebx],bh
  41ad4a:	fcmove st,st(0)
  41ad4c:	(bad)  
  41ad4d:	sti    
  41ad4e:	int3   
  41ad4f:	das    
  41ad50:	xchg   ebx,eax
  41ad51:	push   ecx
  41ad52:	mov    ds:0x9c966df4,al
  41ad57:	clc    
  41ad58:	xor    bh,BYTE PTR [esi+0x34]
  41ad5b:	add    BYTE PTR ds:0x5f96ca4b,dh
  41ad61:	sbb    DWORD PTR [edi+ebx*2+0x67],ebx
  41ad65:	out    dx,eax
  41ad66:	push   0x58
  41ad68:	and    al,0xc8
  41ad6a:	jle    0x41ad8c
  41ad6c:	inc    esp
  41ad6d:	and    al,BYTE PTR [ecx-0x48]
  41ad70:	pop    ebp
  41ad71:	jns    0x41ad6d
  41ad73:	push   es
  41ad74:	neg    DWORD PTR [edx-0x16f863d8]
  41ad7a:	rol    DWORD PTR [ebp+ecx*4+0x1df42e12],0x5c
  41ad82:	ds shr BYTE PTR es:[ebp+edi*1+0x6d],0xb1
  41ad89:	inc    ecx
  41ad8a:	mov    esp,0x5c4c0dcf
  41ad8f:	fstp   QWORD PTR [esi]
  41ad91:	xor    ch,ah
  41ad93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad94:	sbb    eax,0x79d57664
  41ad99:	pop    ecx
  41ad9a:	loopne 0x41ad21
  41ad9c:	repz data16 js 0x41ad90
  41ada0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ada1:	mov    dh,0xdf
  41ada3:	imul   esp,DWORD PTR [esi-0x42d2cdec],0x4c5ab106
  41adad:	jnp    0x41ade2
  41adaf:	cwde   
  41adb0:	push   edx
  41adb1:	xor    BYTE PTR [eax+ebp*4+0x67],0xa1
  41adb6:	ins    DWORD PTR es:[edi],dx
  41adb7:	fdivr  DWORD PTR [ebx+0x61]
  41adba:	test   al,0x40
  41adbc:	iret   
  41adbd:	xchg   edx,eax
  41adbe:	xchg   ebp,eax
  41adbf:	sbb    BYTE PTR [eax+0xbd5bf7],bh
  41adc5:	push   ebp
  41adc6:	and    al,0x9
  41adc8:	loope  0x41ae2f
  41adca:	push   esp
  41adcb:	(bad)  
  41adcc:	test   al,0xbc
  41adce:	pushf  
  41adcf:	sbb    eax,0x49aab467
  41add4:	js     0x41ae10
  41add6:	adc    BYTE PTR [eax-0x60],ch
  41add9:	test   eax,0xb2788de2
  41adde:	dec    ecx
  41addf:	sbb    al,0xb2
  41ade1:	das    
  41ade2:	pop    eax
  41ade3:	cmc    
  41ade4:	push   ecx
  41ade5:	hlt    
  41ade6:	cmp    BYTE PTR [esi+eiz*8],0xa6
  41adea:	jmp    0xb48e93af
  41adef:	inc    ebx
  41adf0:	in     al,0x2e
  41adf2:	je     0x41ae0e
  41adf4:	je     0x41ae24
  41adf6:	clc    
  41adf7:	push   0xc9cd497c
  41adfc:	imul   ecx,DWORD PTR [ebp-0x57783e0c],0xffffffe2
  41ae03:	mov    ah,0x4b
  41ae05:	xor    DWORD PTR [edx+0x689ecd2b],edi
  41ae0b:	cmp    BYTE PTR [ecx+ebx*4-0x37ed2c36],bh
  41ae12:	loope  0x41adcc
  41ae14:	adc    al,0xfa
  41ae16:	call   0x709b:0x90a1a95f
  41ae1d:	jecxz  0x41adbf
  41ae1f:	test   eax,0x94b8a04a
  41ae24:	shr    BYTE PTR [eax+ebp*1-0x6fd13081],cl
  41ae2b:	mov    bl,BYTE PTR [ebx]
  41ae2d:	stc    
  41ae2e:	and    ah,cl
  41ae30:	jo     0x41ae5f
  41ae32:	fmul   DWORD PTR [ecx+ebp*8]
  41ae35:	pushf  
  41ae36:	push   cs
  41ae37:	jno    0x41ae39
  41ae39:	sub    al,0x95
  41ae3b:	loop   0x41ae54
  41ae3d:	cwde   
  41ae3e:	fadd   st,st(4)
  41ae40:	xor    BYTE PTR [ebx],bh
  41ae42:	repnz scas al,BYTE PTR es:[edi]
  41ae44:	cwde   
  41ae45:	inc    eax
  41ae46:	enter  0x95c8,0xcb
  41ae4a:	push   ebp
  41ae4b:	rcl    DWORD PTR [edi-0x5a],1
  41ae4e:	enter  0x4fbd,0xf1
  41ae52:	stc    
  41ae53:	pop    ebx
  41ae54:	std    
  41ae55:	xor    al,0xa7
  41ae57:	or     ebx,esi
  41ae59:	xchg   ecx,eax
  41ae5a:	push   cs
  41ae5b:	xchg   ebx,eax
  41ae5c:	dec    eax
  41ae5d:	data16 sbb BYTE PTR [ebx+0x3997c12d],cl
  41ae64:	jl     0x41ae49
  41ae66:	inc    ebp
  41ae67:	stos   DWORD PTR es:[edi],eax
  41ae68:	sbb    ebx,esi
  41ae6a:	fstp   DWORD PTR [eax+0x4f3de543]
  41ae70:	icebp  
  41ae71:	mov    esp,0xddc7fd5b
  41ae76:	stos   DWORD PTR es:[edi],eax
  41ae77:	or     eax,0x28d9294c
  41ae7c:	and    DWORD PTR [esi],esp
  41ae7e:	sahf   
  41ae7f:	sub    eax,0x7a1df432
  41ae84:	cmp    esp,DWORD PTR [ebp-0x209e12b8]
  41ae8a:	es xor al,0x80
  41ae8d:	pop    es
  41ae8e:	jb     0x41aebb
  41ae90:	xor    BYTE PTR [ecx+edi*4-0x1d],ch
  41ae94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae95:	add    edx,DWORD PTR es:[ecx+0x542a39eb]
  41ae9c:	xchg   esp,eax
  41ae9d:	das    
  41ae9e:	jnp    0x41ae78
  41aea0:	mov    ebp,0x6a2538b9
  41aea5:	pop    ds
  41aea6:	out    dx,eax
  41aea7:	adc    bl,BYTE PTR fs:[edx]
  41aeaa:	cmp    BYTE PTR [edx-0x7b],ah
  41aead:	shl    bh,cl
  41aeaf:	push   cs
  41aeb0:	sbb    BYTE PTR [eax],bl
  41aeb2:	jnp    0x41ae57
  41aeb4:	adc    al,0xdf
  41aeb6:	fs cmp eax,0x9bbf386e
  41aebc:	cdq    
  41aebd:	in     eax,dx
  41aebe:	add    eax,0xc1284c24
  41aec3:	mov    ebx,0xd75c242a
  41aec8:	sub    BYTE PTR [bx+si+0x11],ah
  41aecc:	call   0x4fbf0935
  41aed1:	cmp    al,0xfe
  41aed3:	add    al,0xa1
  41aed5:	mov    ebp,0x7490f5a9
  41aeda:	xchg   ebp,eax
  41aedb:	inc    esp
  41aedc:	mov    BYTE PTR [ebp-0x17],ch
  41aedf:	jbe    0x41ae70
  41aee1:	scas   al,BYTE PTR es:[edi]
  41aee2:	fsub   st,st(7)
  41aee4:	push   0xfffffffa
  41aee6:	xor    al,0x59
  41aee8:	push   eax
  41aee9:	mov    BYTE PTR [edx+0xb],ah
  41aeec:	ins    DWORD PTR es:[edi],dx
  41aeed:	(bad)  
  41aeee:	and    edi,DWORD PTR [ecx-0xb]
  41aef1:	int    0x7c
  41aef3:	or     eax,0x709de573
  41aef8:	test   al,0x8b
  41aefa:	test   ch,bl
  41aefc:	dec    esp
  41aefd:	shl    DWORD PTR [edi+0x18],0x9
  41af01:	js     0x41af67
  41af03:	retf   0x44a4
  41af06:	inc    edi
  41af07:	fcomp  st(0)
  41af09:	mov    al,ds:0x11648052
  41af0e:	hlt    
  41af0f:	pop    ebx
  41af10:	adc    BYTE PTR [ebp-0x3b96b41],al
  41af16:	in     al,0x1e
  41af18:	mov    eax,ds:0xd87ac946
  41af1d:	rcr    BYTE PTR [ebx-0xd793ec2],0x1a
  41af24:	push   ebx
  41af25:	jmp    0x70228823
  41af2a:	loop   0x41af05
  41af2c:	xor    DWORD PTR [esi+0x70603d5b],edx
  41af32:	push   ds
  41af33:	(bad)  
  41af34:	sub    eax,0x20191955
  41af39:	fsub   QWORD PTR [ecx-0x47c676cd]
  41af3f:	shl    BYTE PTR [esi-0x5e9bf344],0xfc
  41af46:	jge    0x41af09
  41af48:	(bad)
  41af4c:	std    
  41af4d:	pop    ecx
  41af4e:	popf   
  41af4f:	mov    DWORD PTR [ecx],0xa79b0b09
  41af55:	pop    eax
  41af56:	sbb    al,0xe
  41af58:	lods   eax,DWORD PTR ds:[esi]
  41af59:	mov    ch,BYTE PTR [edi+0x52]
  41af5c:	xor    edi,DWORD PTR [ebx]
  41af5e:	dec    esi
  41af5f:	jecxz  0x41afc1
  41af61:	das    
  41af62:	fist   WORD PTR [eax-0x2a]
  41af65:	sbb    eax,0x9c2bff80
  41af6a:	xor    BYTE PTR [ebp+0x7d],cl
  41af6d:	cmp    al,0xf
  41af6f:	adc    BYTE PTR [ecx+0x6e],0xbb
  41af73:	push   eax
  41af74:	sbb    edi,DWORD PTR [ebp+0x192fe622]
  41af7a:	ror    DWORD PTR [edi+eax*8-0x3e],1
  41af7e:	xchg   esi,eax
  41af7f:	daa    
  41af80:	dec    esp
  41af81:	enter  0xf745,0x15
  41af85:	fdiv   DWORD PTR [ebp+0x27]
  41af88:	sbb    ebp,eax
  41af8a:	gs push ss
  41af8c:	lock mov ah,ch
  41af8f:	push   ecx
  41af90:	sbb    dh,BYTE PTR [edx-0x28]
  41af93:	jnp    0x41af2c
  41af95:	sbb    eax,0x583479c5
  41af9a:	js     0x41af29
  41af9c:	cmp    eax,0x9b4f061a
  41afa1:	scas   eax,DWORD PTR es:[edi]
  41afa2:	test   BYTE PTR [edx],dh
  41afa4:	inc    ebp
  41afa6:	push   ds
  41afa7:	sub    al,0x89
  41afa9:	sub    DWORD PTR [edx],esp
  41afab:	cmp    BYTE PTR [ebx+0x64],bl
  41afae:	fnstsw WORD PTR [eax+0x58cd7b1b]
  41afb4:	cdq    
  41afb5:	les    esp,FWORD PTR [eax]
  41afb7:	aaa    
  41afb8:	push   ecx
  41afb9:	ins    DWORD PTR es:[edi],dx
  41afba:	adc    al,0xc0
  41afbc:	sub    eax,0x907fc81d
  41afc1:	adc    al,0xb3
  41afc3:	pop    ebx
  41afc4:	mov    BYTE PTR [ebx+0x47405948],dh
  41afca:	mov    eax,0x2fa7df22
  41afcf:	lods   al,BYTE PTR ds:[esi]
  41afd0:	ss aaa 
  41afd2:	cmp    BYTE PTR [edi+0x5aca380],bh
  41afd8:	xor    DWORD PTR [eax-0x70],ebx
  41afdb:	pushf  
  41afdc:	fldenv [ebp+0x48]
  41afdf:	push   ecx
  41afe0:	adc    al,0x1b
  41afe2:	outs   dx,DWORD PTR ds:[esi]
  41afe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afe4:	in     eax,dx
  41afe5:	sub    eax,0x78ff2390
  41afea:	and    DWORD PTR [eax+0x6f770bd3],ecx
  41aff0:	loopne 0x41af91
  41aff2:	xchg   esp,eax
  41aff3:	repz dec esp
  41aff5:	sbb    BYTE PTR [ecx+ecx*4+0x20193bed],cl
  41affc:	inc    ebp
  41affd:	sub    dh,al
  41afff:	sar    BYTE PTR [esi+0x655194],1
  41b005:	call   0xcc546af7
  41b00a:	loop   0x41b036
  41b00c:	clc    
  41b00d:	lea    ebx,ds:0x299df911
  41b013:	loopne 0x41b042
  41b015:	je     0x41aff7
  41b017:	mov    ah,0x35
  41b019:	cmp    eax,esi
  41b01b:	push   ebp
  41b01c:	sahf   
  41b01d:	or     BYTE PTR [eax+0x3c5951d8],al
  41b023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b024:	jmp    0x7235c035
  41b029:	clc    
  41b02a:	(bad)  
  41b02b:	fcomp  DWORD PTR [ecx+0xc]
  41b02e:	test   esp,ecx
  41b030:	in     eax,0x5f
  41b032:	cmc    
  41b033:	xor    BYTE PTR [eax],al
  41b035:	add    BYTE PTR [eax],al
  41b037:	add    BYTE PTR [edi-0xac4e1ed],dl
  41b03d:	push   es
  41b03e:	add    BYTE PTR [eax],al
  41b040:	add    BYTE PTR [eax],al
  41b042:	add    BYTE PTR [eax],al
  41b044:	cmc    
  41b045:	push   es
  41b046:	add    BYTE PTR [eax],al
  41b048:	push   ss
  41b049:	add    BYTE PTR [esi],ah
  41b04b:	jl     0x41b04d
  41b04d:	add    dh,BYTE PTR [esi]
  41b04f:	or     BYTE PTR [eax],al
  41b051:	add    BYTE PTR [eax],bl
  41b053:	dec    edx
  41b054:	add    bl,bh
  41b056:	adc    DWORD PTR [ecx-0x1c18163c],0xfc9d00a9
  41b060:	xor    DWORD PTR [ebp+eax*4-0x10],esp
  41b064:	inc    eax
  41b065:	adc    al,0x2e
  41b067:	shl    BYTE PTR [ecx+eax*8-0x60],0x5e
  41b06c:	push   eax
  41b06d:	jmp    0xe9821ef6
  41b072:	mov    al,0x35
  41b074:	sbb    BYTE PTR [ebp+ecx*1+0x3d8c9248],0x5c
  41b07c:	xor    BYTE PTR es:[ecx+0x24388872],al
  41b083:	fmul   st(3),st
  41b085:	int    0xbc
  41b087:	push   eax
  41b088:	pop    eax
  41b089:	rcr    DWORD PTR [ebp+eiz*1+0x60],cl
  41b08d:	in     eax,0x21
  41b08f:	je     0x41b08e
  41b091:	cmc    
  41b092:	mov    BYTE PTR [ecx+0x154b9e84],dl
  41b098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b099:	cwde   
  41b09a:	xchg   esi,eax
  41b09b:	mov    eax,ds:0xb0bca9a4
  41b0a0:	cmp    eax,0xf2c1543d
  41b0a5:	add    eax,0xd15cddac
  41b0aa:	test   BYTE PTR [ebp+0x78],ah
  41b0ad:	and    DWORD PTR [ebp+edi*8-0xb],edi
  41b0b1:	pushf  
  41b0b2:	call   0xba94:0x809c8978
  41b0b9:	pushf  
  41b0ba:	mov    al,0x2d
  41b0bc:	sub    eax,0xb2b4b140
  41b0c1:	inc    ebx
  41b0c2:	aad    0x84
  41b0c4:	cmp    DWORD PTR [eax+edx*8+0x6bdcd8be],ecx
  41b0cb:	sbb    al,0x17
  41b0cd:	stc    
  41b0ce:	call   0x84d1ed5b
  41b0d3:	add    eax,0x8d944809
  41b0d8:	int3   
  41b0d9:	pop    edi
  41b0da:	mov    cl,0xaa
  41b0dc:	call   0x7c7f5391
  41b0e1:	mov    ch,0xd4
  41b0e3:	dec    ebp
  41b0e4:	xor    edx,eax
  41b0e6:	mov    eax,ds:0x1b1b5fd4
  41b0eb:	pushf  
  41b0ec:	jmp    0x41b091
  41b0ee:	hlt    
  41b0ef:	adc    BYTE PTR [edi+0x10],al
  41b0f2:	add    al,0x8
  41b0f4:	push   ebp
  41b0f5:	fwait
  41b0f6:	pop    ecx
  41b0f7:	sbb    BYTE PTR [ebx+edi*8-0x65],bl
  41b0fb:	popa   
  41b0fc:	jmp    0x41b15a
  41b0fe:	ficom  WORD PTR [eax-0x40]
  41b101:	cmp    esi,DWORD PTR [edi]
  41b103:	add    eax,0x8a275f13
  41b108:	mov    ah,ah
  41b10a:	jmp    0xf9329861
  41b10f:	cmp    al,0x56
  41b111:	outs   dx,BYTE PTR ds:[esi]
  41b112:	or     BYTE PTR [esi],cl
  41b114:	clc    
  41b115:	shl    esi,1
  41b117:	jecxz  0x41b0f8
  41b119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b11a:	in     al,dx
  41b11b:	dec    esp
  41b11c:	cmp    al,0x62
  41b11e:	(bad)  
  41b11f:	sub    DWORD PTR [eax+ecx*8],edx
  41b122:	xchg   al,dl
  41b124:	nop
  41b125:	add    al,0xd9
  41b127:	loopne 0x41b10b
  41b129:	mov    dh,0xec
  41b12b:	aam    0xa1
  41b12d:	jae    0x41b13f
  41b12f:	push   DWORD PTR [ecx]
  41b131:	mov    BYTE PTR [esi+ebp*8+0x35e31856],ch
  41b138:	je     0x41b162
  41b13a:	xor    BYTE PTR ds:[ecx+0x194348f8],dh
  41b141:	mov    bh,0xac
  41b143:	scas   eax,DWORD PTR es:[edi]
  41b144:	push   esp
  41b145:	sub    eax,0x7c119f44
  41b14a:	jno    0x35426f38
  41b150:	idiv   DWORD PTR [ecx+0x18]
  41b153:	cld    
  41b154:	mov    bh,0x1c
  41b156:	addr16 call 0x6531d0bc
  41b15c:	cmp    DWORD PTR [eax+ebp*4],edi
  41b15f:	or     DWORD PTR [eax+0x4a],0xffffffd3
  41b163:	push   eax
  41b164:	pushf  
  41b165:	dec    eax
  41b166:	arpl   WORD PTR [edx-0x1d],di
  41b169:	sub    DWORD PTR [eax+0x47],edi
  41b16c:	mov    cl,0x7c
  41b16e:	mov    ebx,0x67044580
  41b173:	(bad)  
  41b174:	sbb    al,0x54
  41b176:	and    al,0x3b
  41b178:	ins    DWORD PTR es:[edi],dx
  41b179:	mov    bl,0xcd
  41b17b:	adc    eax,0x48c9b14e
  41b180:	add    al,0xbd
  41b182:	xlat   BYTE PTR ds:[ebx]
  41b183:	mov    eax,ds:0x26a174d
  41b188:	ins    BYTE PTR es:[edi],dx
  41b189:	jge    0x41b1b7
  41b18b:	and    eax,0x45800bbf
  41b190:	add    BYTE PTR [ecx+0x63c19514],dh
  41b196:	mov    eax,ds:0xdeab2cec
  41b19b:	mov    dh,0xbc
  41b19d:	sbb    eax,0x944b8473
  41b1a2:	jnp    0x41b141
  41b1a4:	jecxz  0x41b20a
  41b1a6:	test   al,0x64
  41b1a8:	sub    eax,0x7a9e90b7
  41b1ad:	jnp    0x41b139
  41b1af:	jae    0x41b141
  41b1b1:	icebp  
  41b1b2:	sahf   
  41b1b3:	and    al,0x50
  41b1b5:	pop    esp
  41b1b6:	jmp    0xc6b5:0x3877b6ac
  41b1bd:	out    dx,al
  41b1be:	inc    ebx
  41b1bf:	int3   
  41b1c0:	push   ecx
  41b1c1:	in     al,dx
  41b1c2:	mov    ebx,0x8c8993dc
  41b1c7:	add    eax,0x9004fb5e
  41b1cc:	test   BYTE PTR [ebx-0x27e04b07],cl
  41b1d2:	mov    BYTE PTR [ebp+0x23a92884],bl
  41b1d8:	lods   eax,DWORD PTR ds:[esi]
  41b1d9:	int3   
  41b1da:	test   eax,0xcfc9e5fd
  41b1df:	fcomp  st(2)
  41b1e1:	in     eax,0xfe
  41b1e3:	loope  0x41b1cc
  41b1e5:	out    dx,eax
  41b1e6:	shl    eax,1
  41b1e8:	mov    ah,0xf8
  41b1ea:	add    DWORD PTR gs:[ecx+0xd],esi
  41b1ee:	in     al,0xff
  41b1f0:	mov    eax,0x9ba4a09c
  41b1f5:	ins    BYTE PTR es:[edi],dx
  41b1f6:	in     eax,dx
  41b1f7:	jbe    0x41b1b5
  41b1f9:	mov    esp,0x752d5ca8
  41b1fe:	nop
  41b1ff:	push   esp
  41b200:	mov    esi,0x28d779dd
  41b205:	outs   dx,DWORD PTR ds:[esi]
  41b206:	xlat   BYTE PTR ds:[ebx]
  41b207:	fcom   QWORD PTR [eax+0x105facc]
  41b20d:	mov    eax,0x740d6413
  41b212:	jbe    0x41b218
  41b214:	sub    BYTE PTR [ebx],ch
  41b216:	mov    al,0xb5
  41b218:	add    BYTE PTR [ebx-0x3d],0xcd
  41b21c:	dec    esp
  41b21d:	mov    al,ds:0x600c762b
  41b222:	mov    al,0xea
  41b224:	push   0x70
  41b226:	xor    BYTE PTR [eax],0xfc
  41b229:	push   esp
  41b22a:	pop    ebp
  41b22b:	or     DWORD PTR [esi],eax
  41b22d:	adc    al,0x1
  41b22f:	pop    esp
  41b230:	pop    esp
  41b231:	sub    al,ch
  41b233:	inc    edx
  41b234:	and    al,0xd8
  41b236:	in     eax,dx
  41b237:	repnz sub BYTE PTR [eax+0x524c8b13],al
  41b23e:	mov    ds:0x28625d4b,eax
  41b243:	mov    edx,0x4081cf8
  41b248:	inc    eax
  41b249:	push   0xf7f85af8
  41b24e:	pop    eax
  41b24f:	and    BYTE PTR ds:[esi+edi*2],ah
  41b253:	les    esp,FWORD PTR [esi+0x34]
  41b256:	dec    edx
  41b257:	push   0x14
  41b259:	lods   al,BYTE PTR ds:[esi]
  41b25a:	or     BYTE PTR [esi+0x5d1ae752],0xc8
  41b261:	fs dec esp
  41b263:	cmp    dh,BYTE PTR [esp+ebx*4]
  41b266:	jmp    0x4c4933a7
  41b26b:	xchg   esp,eax
  41b26c:	push   eax
  41b26d:	inc    edx
  41b26e:	dec    edx
  41b26f:	mov    al,ds:0x3245daf
  41b274:	hlt    
  41b275:	shl    DWORD PTR [ebx],cl
  41b277:	add    DWORD PTR [ebx],ebp
  41b279:	dec    eax
  41b27a:	(bad)  
  41b27b:	pop    esi
  41b27c:	rcl    DWORD PTR [ecx-0x46649dd8],1
  41b282:	ins    BYTE PTR es:[edi],dx
  41b283:	repz mov dl,0x7c
  41b286:	inc    edi
  41b287:	cmc    
  41b288:	mov    dl,bh
  41b28a:	pusha  
  41b28b:	xchg   edx,eax
  41b28c:	retf   0xbc9c
  41b28f:	and    ebx,DWORD PTR [ecx-0x4b0c08e8]
  41b295:	sub    al,0x40
  41b297:	xor    BYTE PTR [ecx+0x24],dl
  41b29a:	xchg   ecx,eax
  41b29b:	push   ebp
  41b29c:	mov    al,0xeb
  41b29e:	inc    esp
  41b29f:	jg     0x41b309
  41b2a1:	jo     0x41b313
  41b2a3:	pop    ebp
  41b2a4:	jb     0x41b264
  41b2a6:	mov    ds:0x78d58c05,eax
  41b2ab:	jne    0x41b265
  41b2ad:	mov    edi,0x40c0a4a0
  41b2b2:	lock xor eax,0xc4d964d0
  41b2b8:	leave  
  41b2b9:	and    al,0x71
  41b2bb:	push   ebp
  41b2bc:	repz sbb al,0x6c
  41b2bf:	sbb    eax,0x2f242638
  41b2c4:	adc    al,0x8a
  41b2c6:	inc    ebx
  41b2c7:	enter  0x3988,0x94
  41b2cb:	nop
  41b2cc:	and    al,0xb2
  41b2ce:	je     0x41b338
  41b2d0:	stos   BYTE PTR es:[edi],al
  41b2d1:	push   cs
  41b2d2:	pusha  
  41b2d3:	mov    eax,0x304f99bd
  41b2d8:	mov    ebx,gs
  41b2da:	adc    ch,BYTE PTR [ebx+0x68e36bd3]
  41b2e0:	std    
  41b2e1:	repnz hlt 
  41b2e3:	pop    es
  41b2e4:	sub    al,0x83
  41b2e6:	ret    
  41b2e7:	or     al,0xab
  41b2e9:	push   0xffffffea
  41b2eb:	mov    WORD PTR [ecx+0x27],ss
  41b2ee:	xchg   ebp,eax
  41b2ef:	sbb    BYTE PTR [ecx-0x53],dh
  41b2f2:	out    0xe2,eax
  41b2f4:	mov    ah,0xe0
  41b2f6:	shl    DWORD PTR [ecx+edx*4-0x5b6ecf2a],cl
  41b2fd:	(bad)  
  41b2fe:	in     al,0x86
  41b300:	xor    ah,0x92
  41b303:	(bad)  
  41b304:	push   0xffffff85
  41b306:	inc    ebx
  41b307:	dec    esp
  41b308:	adc    eax,0x20df4c94
  41b30d:	dec    esi
  41b30e:	or     BYTE PTR [eax+esi*8+0x5a],al
  41b312:	inc    al
  41b314:	sub    al,0x98
  41b316:	add    bl,bl
  41b318:	aam    0xd8
  41b31a:	pop    esp
  41b31b:	mov    al,ds:0x73ac6929
  41b320:	jo     0x41b2bf
  41b322:	add    al,al
  41b324:	add    cl,BYTE PTR [eax+0x35]
  41b327:	adc    eax,0x209298cc
  41b32c:	sub    ebp,DWORD PTR [esp+esi*8-0x60c7cbd0]
  41b333:	xchg   esp,eax
  41b334:	add    eax,0x11da4ec8
  41b339:	dec    eax
  41b33a:	inc    edx
  41b33b:	xor    al,0x28
  41b33d:	in     eax,dx
  41b33e:	jae    0x41b2f4
  41b340:	test   eax,esi
  41b342:	add    BYTE PTR [ebx],cl
  41b344:	lea    ebp,[eax+edx*4+0x1538e711]
  41b34b:	mov    eax,gs
  41b34d:	cmp    eax,0xab7901bb
  41b352:	mov    edi,0x88c74892
  41b357:	fld    QWORD PTR ds:0x1cbfe58c
  41b35d:	pop    esp
  41b35e:	sbb    BYTE PTR [ebx-0x7eff27b3],cl
  41b364:	or     al,0x14
  41b366:	in     al,dx
  41b367:	xchg   ecx,eax
  41b368:	sbb    al,0x5d
  41b36a:	lock mov eax,ds:0x45bdec71
  41b370:	in     al,0x48
  41b372:	(bad)  
  41b373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b374:	dec    eax
  41b375:	nop
  41b376:	push   esi
  41b377:	arpl   WORD PTR [edi-0x7b97d0ee],sp
  41b37d:	jecxz  0x41b302
  41b37f:	xchg   DWORD PTR [ebx-0x51037c47],eax
  41b385:	jge    0x41b31b
  41b387:	fwait
  41b388:	mov    ds:0xa129935f,al
  41b38d:	fdivr  QWORD PTR [eax-0x3ebf3f23]
  41b393:	dec    ebx
  41b394:	scas   eax,DWORD PTR es:[edi]
  41b395:	xchg   DWORD PTR [ebx-0x129f1eb1],ebx
  41b39b:	jl     0x41b40d
  41b39d:	dec    ebp
  41b39e:	and    eax,0xb181f5a0
  41b3a3:	leave  
  41b3a4:	dec    eax
  41b3a5:	nop
  41b3a6:	in     al,dx
  41b3a7:	xchg   edx,eax
  41b3a8:	popa   
  41b3a9:	mov    ch,0xf5
  41b3ab:	jl     0x41b3e6
  41b3ad:	icebp  
  41b3ae:	pusha  
  41b3af:	mov    ebp,0x9143d182
  41b3b4:	add    BYTE PTR [edi],bh
  41b3b6:	mul    DWORD PTR [edi-0x7f7713df]
  41b3bc:	mov    ah,0x38
  41b3be:	std    
  41b3bf:	std    
  41b3c0:	pusha  
  41b3c1:	jl     0x41b3cf
  41b3c3:	xchg   ecx,eax
  41b3c4:	push   esp
  41b3c5:	jmp    0x41b354
  41b3c7:	sub    esp,ecx
  41b3c9:	dec    esp
  41b3ca:	daa    
  41b3cb:	mov    cl,0xc9
  41b3cd:	mov    ecx,0x2c81c0fe
  41b3d2:	enter  0x323b,0x1f
  41b3d6:	cdq    
  41b3d7:	add    BYTE PTR [esi+0x14f8ee10],dh
  41b3dd:	add    al,0xf8
  41b3df:	or     BYTE PTR [eax-0x75],ch
  41b3e2:	cwde   
  41b3e3:	je     0x41b3e2
  41b3e5:	sahf   
  41b3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3e7:	pop    eax
  41b3e8:	sub    bl,cl
  41b3ea:	dec    edi
  41b3eb:	pop    esp
  41b3ec:	cwde   
  41b3ed:	test   DWORD PTR [eax],eax
  41b3ef:	(bad)  
  41b3f1:	sbb    al,0xd0
  41b3f3:	mov    eax,ds:0xfa421bf1
  41b3f8:	jmp    0xd976a509
  41b3fd:	nop
  41b3fe:	in     eax,0x15
  41b400:	enter  0xb12d,0x52
  41b404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b405:	pop    esp
  41b406:	pusha  
  41b407:	lds    ebp,FWORD PTR [ebx]
  41b409:	les    edi,FWORD PTR [esi+0xbc21cb0]
  41b40f:	imul   ecx,esi,0xd6063c13
  41b415:	or     al,0xe4
  41b417:	call   0xd2b67e4b
  41b41c:	cld    
  41b41d:	and    ch,BYTE PTR [ebp+0xb]
  41b420:	jge    0x41b3b6
  41b422:	sub    DWORD PTR [ebp-0x76dadd44],ecx
  41b428:	cs test eax,0x41563a91
  41b42e:	inc    ebp
  41b42f:	dec    ebp
  41b430:	sar    BYTE PTR [eax+0x25e13f51],1
  41b436:	jmp    0x825ea727
  41b43b:	cmp    BYTE PTR [ecx],al
  41b43d:	pop    ebp
  41b43e:	push   0xa
  41b440:	clc    
  41b441:	std    
  41b442:	cmp    BYTE PTR [ebx],dl
  41b444:	mov    eax,ds:0x202c1a22
  41b449:	ins    DWORD PTR es:[edi],dx
  41b44a:	and    al,0x54
  41b44c:	mov    edi,0x23af48e4
  41b451:	neg    BYTE PTR [ebx+0x6f]
  41b454:	mov    al,ds:0x782168ef
  41b459:	dec    edi
  41b45a:	je     0x41b415
  41b45c:	int3   
  41b45d:	or     cl,BYTE PTR [ebp+0x10]
  41b460:	adc    al,0x6c
  41b462:	push   ss
  41b463:	pusha  
  41b464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b465:	sar    BYTE PTR [edx],1
  41b467:	inc    edx
  41b468:	not    dh
  41b46a:	mov    ebp,0x894ccf78
  41b46f:	pushf  
  41b470:	adc    al,0x5a
  41b472:	mov    eax,0x80e96c6e
  41b477:	mov    esp,?
  41b479:	jo     0x41b458
  41b47b:	test   BYTE PTR [edx+ecx*8+0xc],dh
  41b47f:	nop
  41b480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b481:	pop    ebp
  41b482:	adc    eax,0x117f58e5
  41b487:	sub    BYTE PTR [bp+di+0x16],ch
  41b48b:	lods   al,BYTE PTR ds:[esi]
  41b48c:	icebp  
  41b48d:	lods   al,BYTE PTR ds:[esi]
  41b48e:	pop    eax
  41b48f:	fbld   TBYTE PTR [eax+0x31bf406f]
  41b495:	in     eax,0xcd
  41b497:	jo     0x41b4b1
  41b499:	jb     0x41b456
  41b49b:	jg     0x41b41d
  41b49d:	adc    DWORD PTR [eax+edi*8],0xffffff98
  41b4a1:	cdq    
  41b4a2:	retf   0x40a7
  41b4a5:	mov    ebx,0x82199232
  41b4aa:	cmp    ch,al
  41b4ac:	(bad)  
  41b4ad:	dec    eax
  41b4ae:	push   ebx
  41b4af:	pop    ebx
  41b4b0:	pop    esi
  41b4b1:	out    0x62,al
  41b4b3:	imul   ebp,DWORD PTR [esi-0x10],0xbdff753a
  41b4ba:	test   BYTE PTR [eax-0x7c],cl
  41b4bd:	aad    0x94
  41b4bf:	fwait
  41b4c0:	jb     0x41b442
  41b4c2:	mov    ch,0x29
  41b4c4:	push   edx
  41b4c5:	dec    esp
  41b4c6:	adc    al,0xb8
  41b4c8:	mov    bl,0xc4
  41b4ca:	inc    eax
  41b4cb:	dec    BYTE PTR [esp+edx*8-0x44]
  41b4cf:	(bad)  
  41b4d1:	mov    eax,ds:0xe48468e4
  41b4d6:	idiv   eax
  41b4d8:	cmp    BYTE PTR [ebx],0x68
  41b4db:	ins    BYTE PTR es:[edi],dx
  41b4dc:	mov    ch,0x84
  41b4de:	iret   
  41b4df:	je     0x41b4b1
  41b4e1:	sub    DWORD PTR [ecx],0x7831bccd
  41b4e7:	hlt    
  41b4e8:	iret   
  41b4e9:	inc    ecx
  41b4ea:	jo     0x41b558
  41b4ec:	aam    0xbc
  41b4ee:	fcomp  QWORD PTR [esp+eiz*8+0x5a]
  41b4f2:	call   0xf8f7c4f5
  41b4f7:	stos   BYTE PTR es:[edi],al
  41b4f8:	push   ebx
  41b4f9:	bound  ebp,QWORD PTR [ebx+0x78150a28]
  41b4ff:	and    eax,0xf40c4835
  41b504:	cmovae edi,DWORD PTR [eax+0x50c9c4c2]
  41b50b:	iret   
  41b50c:	mov    esp,0xc4a1df0c
  41b511:	call   0xc05e5bd5
  41b516:	sbb    DWORD PTR [esi],eax
  41b518:	jo     0x41b51e
  41b51a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b51b:	jne    0x41b4a1
  41b51d:	push   es
  41b51e:	out    0xc1,eax
  41b520:	dec    ecx
  41b521:	sub    al,0x2c
  41b523:	xor    esi,DWORD PTR [eax+ebx*4+0x2e]
  41b527:	add    BYTE PTR [eax+0x3e],bh
  41b52a:	cli    
  41b52b:	xor    BYTE PTR [eax],0x2b
  41b52e:	add    BYTE PTR [ebx-0x4e0b1b9b],dh
  41b534:	fs mov esp,0x27c08f0d
  41b53a:	ficom  WORD PTR [edx+esi*2+0x1f]
  41b53e:	icebp  
  41b53f:	fld    QWORD PTR [eax-0x20]
  41b542:	xor    BYTE PTR [ebx+edx*1],bh
  41b545:	fcomp  QWORD PTR [ecx+0x5da41817]
  41b54b:	aam    0x5b
  41b54d:	cmp    al,0xf6
  41b54f:	les    esp,FWORD PTR [edx+0x44]
  41b552:	int    0x1c
  41b554:	cmp    BYTE PTR [eax+0x2cdb606],al
  41b55a:	inc    edx
  41b55b:	dec    edi
  41b55c:	adc    al,cl
  41b55e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b55f:	or     BYTE PTR [ecx+0x72],cl
  41b562:	aas    
  41b563:	dec    ebp
  41b564:	cdq    
  41b565:	mov    edi,0x4e0d43f1
  41b56a:	xor    al,0x5a
  41b56c:	xor    BYTE PTR [esi],al
  41b56e:	data16 stc 
  41b570:	add    al,0x60
  41b572:	push   esp
  41b573:	push   0xf0ec807d
  41b578:	mov    WORD PTR [esi+0x67570c3],ss
  41b57e:	or     esi,ebp
  41b580:	xor    bl,bh
  41b582:	outs   dx,WORD PTR ds:[esi]
  41b584:	inc    ecx
  41b585:	inc    esp
  41b586:	mov    eax,ds:0xc1f57135
  41b58b:	test   al,0x9f
  41b58d:	jno    0x41b5e3
  41b58f:	dec    esp
  41b590:	dec    WORD PTR [eax-0x3884484]
  41b597:	retf   0x6a13
  41b59a:	addr16 call 0x6cdd9b40
  41b5a0:	cmp    bh,BYTE PTR [eax-0x3fb3cb01]
  41b5a6:	dec    ecx
  41b5a7:	pop    eax
  41b5a8:	xor    al,0x51
  41b5aa:	cmp    bl,BYTE PTR [ecx+0x78]
  41b5ad:	das    
  41b5ae:	sbb    BYTE PTR [eax+0x7c],ah
  41b5b1:	cmp    BYTE PTR [ecx+0x74],al
  41b5b4:	fs xchg esp,eax
  41b5b6:	(bad)  
  41b5b7:	js     0x41b580
  41b5b9:	fcom   QWORD PTR [ecx]
  41b5bb:	and    eax,0x3dfca4a5
  41b5c0:	xor    ecx,ebx
  41b5c2:	mov    edi,0x91400490
  41b5c7:	sub    edi,DWORD PTR [edx+esi*4]
  41b5ca:	mov    DWORD PTR [eax-0x22111234],0xe5c0cf18
  41b5d4:	sub    DWORD PTR [eax+ebp*1],0x3f2459ca
  41b5db:	inc    edx
  41b5dc:	xor    ebp,DWORD PTR [ebp+0x8]
  41b5df:	xchg   esp,eax
  41b5e0:	xchg   ebp,eax
  41b5e1:	and    cl,al
  41b5e3:	mov    bh,0x88
  41b5e5:	jecxz  0x41b58b
  41b5e7:	rcr    DWORD PTR [eax-0x23],0xf2
  41b5eb:	imul   ecx,DWORD PTR [ebx-0x68],0xffffff85
  41b5ef:	jmp    0x41b62d
  41b5f1:	shl    BYTE PTR [ebp+0x12],cl
  41b5f4:	pusha  
  41b5f5:	push   ebp
  41b5f6:	xor    DWORD PTR [edx],edi
  41b5f8:	lock test esp,esp
  41b5fb:	mov    al,ds:0x98aff1cf
  41b600:	mov    ebp,0x58a9e799
  41b605:	rcr    DWORD PTR [edx+0x30],1
  41b608:	pop    esp
  41b609:	adc    eax,0x6697c25
  41b60e:	cld    
  41b60f:	idiv   DWORD PTR [eax+0x32]
  41b612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b613:	sbb    BYTE PTR [edi+0x1c93485e],al
  41b619:	jne    0x41b647
  41b61b:	mov    ds:0x280d67ed,eax
  41b620:	dec    eax
  41b621:	rol    ch,0x4f
  41b624:	adc    al,bl
  41b626:	push   ebp
  41b627:	gs jo  0x41b5ce
  41b62a:	out    dx,al
  41b62b:	lods   al,BYTE PTR ds:[esi]
  41b62c:	retf   
  41b62d:	xor    ecx,DWORD PTR [edx+0x2ac58113]
  41b633:	or     eax,0x186b50d1
  41b638:	pusha  
  41b639:	daa    
  41b63a:	sub    bl,BYTE PTR [edi]
  41b63c:	lock mov ah,0x15
  41b63f:	cmp    eax,DWORD PTR [eax-0x31]
  41b642:	sbb    BYTE PTR [ebp+edx*8-0x7a],al
  41b646:	sub    eax,0xa82c535b
  41b64b:	test   DWORD PTR [ecx],eax
  41b64d:	cdq    
  41b64e:	mov    ds:0xc1e801fa,eax
  41b653:	jo     0x41b63b
  41b655:	adc    ch,bh
  41b657:	pop    esi
  41b658:	int    0xcc
  41b65a:	xor    dh,BYTE PTR cs:[esi+eax*1-0x6f9bc0e3]
  41b662:	dec    esp
  41b663:	add    ebx,edi
  41b665:	push   es
  41b666:	cmp    al,0xe9
  41b668:	sub    cl,BYTE PTR [eax]
  41b66a:	out    0x70,eax
  41b66c:	cmp    al,0x7c
  41b66e:	(bad)  
  41b66f:	jns    0x41b5fd
  41b671:	xchg   DWORD PTR [ecx],ecx
  41b673:	es xchg ebp,eax
  41b675:	jge    0x41b6ba
  41b677:	add    BYTE PTR [ecx-0x59],dh
  41b67a:	dec    esi
  41b67b:	push   0x7d4058bb
  41b680:	inc    eax
  41b681:	dec    esp
  41b682:	rcl    DWORD PTR [ebp+0x6599dd54],cl
  41b688:	mov    DWORD PTR [edi+0xc],esp
  41b68b:	cdq    
  41b68c:	repz jl 0x41b69a
  41b68f:	cli    
  41b690:	in     al,dx
  41b691:	mov    WORD PTR [ebp+0x609c981a],gs
  41b697:	shl    DWORD PTR [ecx-0x230dc795],1
  41b69d:	aas    
  41b69e:	les    ecx,FWORD PTR [edx-0x59]
  41b6a1:	imul   edi,DWORD PTR cs:[eax],0x6987255f
  41b6a8:	in     eax,dx
  41b6a9:	xchg   ecx,eax
  41b6aa:	jne    0x41b6c2
  41b6ac:	inc    ecx
  41b6ad:	adc    DWORD PTR [ecx-0x77],esp
  41b6b0:	or     cl,al
  41b6b2:	jne    0x41b64d
  41b6b4:	ret    0x379d
  41b6b7:	dec    ebp
  41b6b8:	lods   eax,DWORD PTR ds:[esi]
  41b6b9:	xor    eax,0xd4f2b955
  41b6be:	stc    
  41b6bf:	inc    ebp
  41b6c0:	sub    ecx,edx
  41b6c2:	push   esi
  41b6c3:	cmp    ebp,ebx
  41b6c5:	fcompp 
  41b6c7:	addr16 xor eax,0x61fa7991
  41b6cd:	test   DWORD PTR [esi-0x668efd4f],esp
  41b6d3:	push   ss
  41b6d4:	rol    DWORD PTR [ebp-0x57],0xb2
  41b6d8:	lea    eax,[ecx]
  41b6da:	mov    edx,0xcfc4c158
  41b6df:	int3   
  41b6e0:	add    BYTE PTR [edi],bh
  41b6e2:	(bad)  
  41b6e3:	loope  0x41b739
  41b6e5:	add    eax,0xf510ebe9
  41b6ea:	clc    
  41b6eb:	in     eax,dx
  41b6ec:	add    BYTE PTR [edi+esi*8],al
  41b6ef:	jp     0x41b765
  41b6f1:	repnz xchg esp,eax
  41b6f3:	pop    edi
  41b6f4:	jbe    0x41b6de
  41b6f6:	cmc    
  41b6f7:	cmp    edx,ecx
  41b6f9:	fcom   QWORD PTR [edi-0x39]
  41b6fc:	(bad)
  41b6ff:	rcl    DWORD PTR [ebp-0x27],1
  41b702:	add    BYTE PTR [eax+0xf246bbf],0xab
  41b709:	stc    
  41b70a:	sahf   
  41b70b:	pop    ecx
  41b70c:	push   edx
  41b70d:	pop    edi
  41b70e:	aas    
  41b70f:	out    dx,eax
  41b710:	sub    eax,0xf4b3b025
  41b715:	outs   dx,BYTE PTR ds:[esi]
  41b716:	mov    esp,0xd0d79456
  41b71b:	sar    ebp,1
  41b71d:	je     0x41b72f
  41b71f:	aam    0x98
  41b721:	pop    ecx
  41b722:	push   ss
  41b723:	xchg   ecx,eax
  41b724:	in     eax,dx
  41b725:	push   edx
  41b726:	out    dx,eax
  41b727:	inc    esp
  41b728:	pushf  
  41b729:	jbe    0x41b72b
  41b72b:	add    dh,BYTE PTR [esp+ebp*1]
  41b72e:	addr16 sbb al,0x9c
  41b731:	fcom   QWORD PTR [esp+0x6]
  41b735:	jl     0x41b765
	...
  41b73f:	add    BYTE PTR [edi],bh
  41b741:	sbb    BYTE PTR [esi],dl
  41b743:	dec    ecx
  41b744:	push   ebx
  41b745:	pop    es
  41b746:	add    BYTE PTR [eax],al
  41b748:	add    BYTE PTR [eax],al
  41b74a:	add    BYTE PTR [eax],al
  41b74c:	push   ebx
  41b74d:	pop    es
  41b74e:	add    BYTE PTR [eax],al
  41b750:	pop    ss
  41b751:	add    BYTE PTR [esi],ah
  41b753:	jl     0x41b755
  41b755:	add    dh,BYTE PTR [esi]
  41b757:	or     BYTE PTR [eax],al
  41b759:	add    dh,al
  41b75b:	dec    ebx
  41b75c:	add    BYTE PTR [ecx+0x283478f7],al
  41b762:	cmp    ch,BYTE PTR [ecx+0x29]
  41b765:	and    al,0x1b
  41b767:	in     eax,0xb5
  41b769:	retf   
  41b76a:	aaa    
  41b76b:	test   al,0x81
  41b76d:	iret   
  41b76e:	dec    eax
  41b76f:	mov    ch,0x5f
  41b771:	loop   0x41b70b
  41b773:	or     al,0x88
  41b775:	or     BYTE PTR [ebx+0x6c],cl
  41b778:	jo     0x41b7ee
  41b77a:	and    ecx,edi
  41b77c:	inc    eax
  41b77d:	lock mov edx,ecx
  41b780:	nop
  41b781:	shl    BYTE PTR [ebx+0x4f],cl
  41b784:	sbb    BYTE PTR [eax],cl
  41b786:	pop    ebx
  41b787:	aaa    
  41b788:	jb     0x41b7c2
  41b78a:	mov    dh,0x46
  41b78c:	ror    BYTE PTR [eax-0x2cf45ac7],0x5c
  41b793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b794:	cmp    ch,BYTE PTR [ebx+0x23d84def]
  41b79a:	aas    
  41b79b:	add    BYTE PTR [eax+ecx*4-0x21836a07],0x73
  41b7a3:	pop    edi
  41b7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7a5:	push   edi
  41b7a6:	cli    
  41b7a7:	cmp    eax,DWORD PTR [ecx-0x3b7db808]
  41b7ad:	dec    esp
  41b7ae:	pop    es
  41b7af:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41b7b1:	fst    DWORD PTR [esi+0x70ef7011]
  41b7b7:	mov    esp,0x84119587
  41b7bc:	mov    BYTE PTR [esp+ebp*4-0x5e175a6c],cl
  41b7c3:	jecxz  0x41b7c3
  41b7c5:	inc    esp
  41b7c6:	mov    ch,BYTE PTR [ebp+0x494ebc99]
  41b7cc:	mov    esp,0xa4d6d1ca
  41b7d1:	ss mov ah,ah
  41b7d4:	in     al,dx
  41b7d5:	stos   DWORD PTR es:[edi],eax
  41b7d6:	and    edx,DWORD PTR [eax-0x777b7174]
  41b7dc:	mov    WORD PTR [ebx],ds
  41b7de:	ins    BYTE PTR es:[edi],dx
  41b7df:	rol    ebp,0x29
  41b7e2:	cdq    
  41b7e3:	adc    BYTE PTR [edx-0x5c],dl
  41b7e6:	idiv   BYTE PTR [eax-0x34f0c144]
  41b7ec:	lea    eax,[ebx-0x492b14c1]
  41b7f2:	or     al,0xe1
  41b7f4:	in     al,dx
  41b7f5:	shl    BYTE PTR [esi+eax*8-0x3f],0x59
  41b7fa:	add    al,0x85
  41b7fc:	push   esp
  41b7fd:	adc    DWORD PTR [eax+0x3a],esp
  41b800:	retf   0xfba5
  41b803:	sbb    BYTE PTR [eax+0x76],0xb8
  41b807:	xchg   ecx,eax
  41b808:	shr    bh,0xcf
  41b80b:	int3   
  41b80c:	pop    esp
  41b80d:	jmp    0x41b79d
  41b80f:	fdiv   QWORD PTR [ebx-0x1b6dff4c]
  41b815:	hlt    
  41b816:	clc    
  41b817:	jg     0x41b819
  41b819:	rol    BYTE PTR [ecx+ecx*4],0xd0
  41b81d:	popa   
  41b81e:	pop    edi
  41b81f:	lahf   
  41b820:	out    0x24,eax
  41b822:	sub    al,0x2f
  41b824:	ret    
  41b825:	mov    ah,0x6
  41b827:	cmp    al,0x35
  41b829:	add    BYTE PTR [esi+0x2f],bl
  41b82c:	(bad)  
  41b82d:	cwde   
  41b82e:	xor    al,0xf7
  41b830:	in     al,0xc3
  41b832:	outs   dx,DWORD PTR ds:[esi]
  41b833:	aad    0xf5
  41b835:	bnd jl 0x41b838
  41b838:	xchg   DWORD PTR [edi],ebp
  41b83a:	or     al,0xd7
  41b83c:	adc    DWORD PTR [eax+0x2926861c],edi
  41b842:	sub    al,0xbc
  41b844:	pop    es
  41b845:	clc    
  41b846:	sbb    ebx,DWORD PTR gs:[ebx]
  41b849:	push   ss
  41b84a:	les    edx,FWORD PTR [ebx+0x105d6dab]
  41b850:	mov    WORD PTR [ecx-0x6220a03],ds
  41b856:	add    DWORD PTR [esi],ecx
  41b858:	or     BYTE PTR [edi*4-0x1fd00301],cl
  41b85f:	je     0x41b88a
  41b861:	sub    eax,0xcb44dc30
  41b866:	mov    edi,0x50c784bb
  41b86b:	stos   DWORD PTR es:[edi],eax
  41b86c:	or     eax,0xe3358cd7
  41b871:	and    DWORD PTR [eax+0x74],esp
  41b874:	sub    ecx,DWORD PTR [edi+0x40]
  41b877:	rol    BYTE PTR [ecx],cl
  41b879:	mov    ebx,DWORD PTR [ebx]
  41b87b:	data16 cmp al,0xab
  41b87e:	jno    0x41b8a4
  41b880:	jmp    0x41b8b3
  41b882:	xor    eax,0x4405051a
  41b887:	inc    eax
  41b888:	cmp    BYTE PTR [ecx-0x21],bl
  41b88b:	add    eax,0x6821e354
  41b890:	fs je  0x41b890
  41b893:	imul   esi,ebp,0xffffffc5
  41b896:	js     0x41b8a0
  41b898:	mov    WORD PTR [esi-0x6c73124a],gs
  41b89e:	fs xchg ecx,eax
  41b8a0:	jmp    0x9e4d00d5
  41b8a5:	dec    ebx
  41b8a6:	fmul   QWORD PTR [esi+edx*1-0x74a3aeac]
  41b8ad:	pop    eax
  41b8ae:	xchg   edi,eax
  41b8af:	imul   esi,ebp,0xffffffa6
  41b8b2:	or     al,0x74
  41b8b4:	or     BYTE PTR [esi],0x8e
  41b8b7:	add    al,0x92
  41b8b9:	(bad)  
  41b8ba:	adc    ecx,ecx
  41b8bc:	lods   al,BYTE PTR ds:[esi]
  41b8bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8be:	and    dh,BYTE PTR [edx-0x1384fd41]
  41b8c4:	xchg   BYTE PTR [esp+ecx*8],ch
  41b8c7:	shl    edx,1
  41b8c9:	xlat   BYTE PTR ds:[ebx]
  41b8ca:	jg     0x41b89b
  41b8cc:	pop    ds
  41b8cd:	jecxz  0x41b8be
  41b8cf:	or     eax,0xf47c7474
  41b8d4:	mov    es,WORD PTR [ebx]
  41b8d6:	rcr    DWORD PTR [esi+ebx*1-0x1ea065e8],0xa4
  41b8de:	and    al,0xb1
  41b8e0:	repnz mov eax,0xffc4c18c
  41b8e6:	dec    eax
  41b8e7:	or     esp,DWORD PTR [eax+0x189d5fea]
  41b8ed:	call   0x789f3ede
  41b8f2:	pop    es
  41b8f3:	and    BYTE PTR [eax+0xd],dh
  41b8f6:	sub    al,0x90
  41b8f8:	arpl   WORD PTR [ebp-0x77d7c42b],dx
  41b8fe:	mov    ah,0x72
  41b900:	clc    
  41b901:	(bad)  
  41b902:	aas    
  41b903:	les    ecx,FWORD PTR [ebx-0x57]
  41b906:	sub    al,0x54
  41b908:	push   ecx
  41b909:	fsub   st(0),st
  41b90b:	jmp    0x41b979
  41b90d:	add    eax,0xfa72b7f0
  41b912:	cmp    al,0x24
  41b914:	or     BYTE PTR [eax+0x14],bh
  41b917:	sub    BYTE PTR [ecx],dl
  41b919:	imul   esp,DWORD PTR [esi],0xc37cc362
  41b91f:	jp     0x41b8f4
  41b921:	and    eax,esi
  41b923:	les    ebx,FWORD PTR [eax+edx*8]
  41b926:	fcomp  DWORD PTR [ebx-0xc]
  41b929:	popf   
  41b92a:	in     al,dx
  41b92b:	call   0xfbf35a1c
  41b930:	lods   al,BYTE PTR ds:[esi]
  41b931:	adc    bl,bh
  41b933:	or     BYTE PTR ds:0x2f5bcf23,cl
  41b939:	jmp    0x76ede40d
  41b93e:	jne    0x41b8f8
  41b940:	add    bl,BYTE PTR [eax+esi*1]
  41b943:	mov    cl,0xcd
  41b945:	push   es
  41b946:	adc    al,0x7e
  41b948:	stos   BYTE PTR es:[edi],al
  41b949:	mov    eax,ds:0xf5ef99e9
  41b94e:	retf   
  41b94f:	mov    BYTE PTR [eax],al
  41b951:	or     BYTE PTR [ebp+0x2094114a],al
  41b957:	ds push ebp
  41b959:	and    al,0x2c
  41b95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b95c:	rcr    bh,0x35
  41b95f:	jo     0xd0d8ffdc
  41b965:	gs pop eax
  41b967:	ins    DWORD PTR es:[edi],dx
  41b968:	mov    al,ds:0xf585b954
  41b96d:	mov    ebp,0xcd9208f0
  41b972:	mov    dl,BYTE PTR [ebx+0x205e4416]
  41b978:	adc    BYTE PTR [eax-0x63aba1b],dh
  41b97e:	push   cs
  41b97f:	add    BYTE PTR [esp+edi*1],dh
  41b982:	sbb    DWORD PTR [edx-0x1faba584],edx
  41b988:	inc    esp
  41b989:	and    edx,DWORD PTR [eax+0x79]
  41b98c:	add    BYTE PTR [edi],bh
  41b98e:	stc    
  41b98f:	add    BYTE PTR [edi-0x4],bl
  41b992:	mov    cl,0x9f
  41b994:	sub    bl,BYTE PTR [eax-0x34]
  41b997:	mov    al,ds:0x588fb8af
  41b99c:	mov    WORD PTR ds:0xc6457d43,ds
  41b9a2:	push   esi
  41b9a3:	inc    edi
  41b9a4:	fsubr  DWORD PTR [ebx+0x63]
  41b9a7:	push   ebx
  41b9a8:	xchg   edi,eax
  41b9a9:	imul   esi,DWORD PTR [edi],0x4e
  41b9ac:	xchg   ebx,eax
  41b9ad:	jno    0x41ba17
  41b9af:	sahf   
  41b9b0:	popf   
  41b9b1:	or     BYTE PTR [eax+0x209a9897],bl
  41b9b7:	mov    ds:0x94f6a0fd,al
  41b9bc:	push   ecx
  41b9bd:	jmp    0xd3df:0x4c373b3f
  41b9c4:	push   ds
  41b9c5:	push   eax
  41b9c6:	pushw  0x3c2d
  41b9ca:	jne    0x41ba40
  41b9cc:	ins    BYTE PTR es:[edi],dx
  41b9cd:	imul   ecx,DWORD PTR [edx-0x2b667678],0x65fbc2aa
  41b9d7:	mov    ds:0x47b4902f,al
  41b9dc:	mov    ah,0xc1
  41b9de:	or     eax,0x57b68e0b
  41b9e3:	xor    al,0xd0
  41b9e5:	mov    bl,0x24
  41b9e7:	(bad)  [edi]
  41b9e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9ea:	mov    ds:0xa481e1c1,eax
  41b9ef:	dec    eax
  41b9f0:	xor    ah,dl
  41b9f2:	pop    esp
  41b9f3:	jo     0x41ba54
  41b9f5:	pop    ebx
  41b9f6:	shr    BYTE PTR [eax-0x43f92c90],0xc8
  41b9fd:	ror    DWORD PTR [ebx+0x508786cc],0xc1
  41ba04:	loopne 0x41b9ee
  41ba06:	out    dx,al
  41ba07:	scas   eax,DWORD PTR es:[edi]
  41ba08:	lock or ebp,ebp
  41ba0b:	(bad)  
  41ba0c:	lock adc al,0x48
  41ba0f:	or     al,0xb1
  41ba11:	lods   al,BYTE PTR ds:[esi]
  41ba12:	fcom   DWORD PTR [ecx+ebp*4]
  41ba15:	adc    eax,esp
  41ba17:	or     eax,0x387c270
  41ba1c:	mov    al,0xcf
  41ba1e:	or     al,0xe6
  41ba20:	in     al,dx
  41ba21:	rcr    ah,0x95
  41ba24:	out    0x61,eax
  41ba26:	cdq    
  41ba27:	or     al,0x7f
  41ba29:	lods   eax,DWORD PTR ds:[esi]
  41ba2a:	add    BYTE PTR [eax],al
  41ba2c:	mov    DWORD PTR [ebp-0xc],ecx
  41ba2f:	inc    eax
  41ba30:	inc    edi
  41ba31:	dec    ebx
  41ba32:	xchg   ecx,eax
  41ba33:	pop    ebp
  41ba34:	je     0x41ba12
  41ba36:	les    edi,FWORD PTR [edx]
  41ba38:	retf   0x26f9
  41ba3b:	mov    eax,0x5171dc84
  41ba40:	adc    al,0x45
  41ba42:	fist   WORD PTR [edi+0xbd67a2]
  41ba48:	jnp    0x41ba46
  41ba4a:	stc    
  41ba4b:	sti    
  41ba4c:	jnp    0x41ba9c
  41ba4e:	fwait
  41ba4f:	in     al,dx
  41ba50:	fsincos 
  41ba52:	and    BYTE PTR [esi],ah
  41ba54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba55:	sub    BYTE PTR [edi],bh
  41ba57:	psubw  mm1,QWORD PTR [esi+0x76]
  41ba5b:	push   esp
  41ba5c:	sbb    BYTE PTR [ebp+eiz*4-0x6f0ee7a1],ah
  41ba63:	cmp    eax,0x836453
  41ba68:	push   ecx
  41ba69:	clc    
  41ba6a:	pop    DWORD PTR [edi-0x6ebdb80e]
  41ba70:	sbb    eax,0x29d5ed30
  41ba75:	and    BYTE PTR [ebx+ebx*4-0x70],bh
  41ba79:	sbb    BYTE PTR [esi+0x40],0xc5
  41ba7d:	gs in  al,0x18
  41ba80:	pop    ebp
  41ba81:	push   ebx
  41ba82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba83:	sub    DWORD PTR [edi+0x61],0xfffffff4
  41ba87:	out    dx,eax
  41ba88:	and    ebx,esi
  41ba8a:	fild   WORD PTR [eax]
  41ba8c:	mov    ds:0x9e8d6bc6,al
  41ba91:	mov    WORD PTR [esi+ecx*4-0x35f413d9],fs
  41ba98:	jnp    0x41ba34
  41ba9a:	dec    esp
  41ba9b:	cmp    DWORD PTR [esp+edx*4+0x50],edx
  41ba9f:	sub    eax,DWORD PTR [esi]
  41baa1:	pop    ebp
  41baa2:	pop    ebx
  41baa3:	sbb    BYTE PTR [eax+0x64],dh
  41baa6:	sti    
  41baa7:	mov    esp,0xbcb1e282
  41baac:	in     eax,0x16
  41baae:	pusha  
  41baaf:	pop    eax
  41bab0:	mov    eax,ds:0x8d27ff54
  41bab5:	test   BYTE PTR [eax-0x4b],bh
  41bab8:	rcl    BYTE PTR [edx+0x17fb9a9e],0xa
  41babf:	mov    cl,0x9c
  41bac1:	push   0x2e27202c
  41bac6:	sub    cl,BYTE PTR [ecx]
  41bac8:	sar    DWORD PTR [esp+ecx*4+0x6f],0x43
  41bacd:	adc    ecx,ebx
  41bacf:	pop    eax
  41bad0:	lahf   
  41bad1:	outs   dx,BYTE PTR ds:[esi]
  41bad2:	fsub   DWORD PTR [eax-0x74]
  41bad5:	call   0xeb86612e
  41bada:	xchg   ebp,eax
  41badb:	nop
  41badc:	loopne 0x41ba76
  41bade:	fnstsw ax
  41bae0:	into   
  41bae1:	mov    esi,0x810fba
  41bae6:	lods   al,BYTE PTR ds:[esi]
  41bae7:	jmp    FWORD PTR [ecx+edi*8+0x6391d464]
  41baee:	ja     0x41bad4
  41baf0:	outs   dx,BYTE PTR ds:[esi]
  41baf1:	mov    al,ds:0x40cda44f
  41baf6:	sub    dh,cl
  41baf8:	mov    al,ah
  41bafa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bafb:	sub    BYTE PTR [ebx-0x230ee07c],cl
  41bb01:	sub    eax,0xf55fb4ec
  41bb06:	les    eax,FWORD PTR [esi]
  41bb08:	cmp    ecx,DWORD PTR [esi]
  41bb0a:	rcr    BYTE PTR [ebp-0x5689afc3],1
  41bb10:	ins    DWORD PTR es:[edi],dx
  41bb11:	add    al,0xe4
  41bb13:	mov    eax,0x398cd543
  41bb18:	mov    eax,ss
  41bb1a:	mov    esi,0xc48a9c98
  41bb1f:	mov    dh,0xba
  41bb21:	sbb    BYTE PTR [ecx+0x4459fb99],bh
  41bb27:	cmp    eax,ebp
  41bb29:	sub    edx,ebp
  41bb2b:	ins    DWORD PTR es:[edi],dx
  41bb2c:	adc    al,0x1
  41bb2e:	pop    esi
  41bb2f:	daa    
  41bb30:	sub    al,0x32
  41bb32:	xor    al,0x38
  41bb34:	mov    cl,0xd0
  41bb36:	inc    esp
  41bb37:	inc    eax
  41bb38:	dec    esp
  41bb39:	add    al,bl
  41bb3b:	jg     0x41bb7d
  41bb3d:	mov    esi,0x547cc689
  41bb42:	clc    
  41bb43:	mov    DWORD PTR [eax],0x933a7bc6
  41bb49:	aam    0x1d
  41bb4b:	lahf   
  41bb4c:	push   0x56d3d324
  41bb51:	repz js 0x41bb17
  41bb54:	inc    eax
  41bb55:	dec    esi
  41bb56:	inc    eax
  41bb57:	lds    ebx,FWORD PTR [eax]
  41bb59:	push   edi
  41bb5a:	pop    eax
  41bb5b:	pop    ebp
  41bb5c:	jg     0x41bbc2
  41bb5e:	bound  ebp,QWORD PTR [edx-0x3a6cb8c]
  41bb64:	add    eax,0x3b58843b
  41bb69:	xchg   ebx,eax
  41bb6a:	push   ds
  41bb6b:	adc    eax,0xf0af2dc5
  41bb70:	je     0x41bb27
  41bb72:	ins    BYTE PTR es:[edi],dx
  41bb73:	mov    ebx,0x518ac940
  41bb78:	pop    esp
  41bb79:	arpl   WORD PTR [edx+0x6c3ba912],cx
  41bb7f:	daa    
  41bb80:	adc    al,BYTE PTR [ecx+0x31]
  41bb83:	mov    cx,WORD PTR [edx+eax*4]
  41bb87:	xchg   ecx,eax
  41bb88:	je     0x41bb38
  41bb8a:	pop    ss
  41bb8b:	in     eax,0x4c
  41bb8d:	pop    ss
  41bb8e:	icebp  
  41bb8f:	cmp    edi,DWORD PTR [esi+edi*2+0x54490543]
  41bb96:	rcl    DWORD PTR [esp+ebx*2+0x64677a3c],cl
  41bb9d:	scas   eax,DWORD PTR es:[edi]
  41bb9e:	into   
  41bb9f:	push   ebp
  41bba0:	jge    0x41bbbf
  41bba2:	popf   
  41bba3:	pop    edx
  41bba4:	hlt    
  41bba5:	mov    ds,WORD PTR [ebx]
  41bba7:	pushf  
  41bba8:	inc    esi
  41bba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbaa:	mov    ebp,0xdbd1a565
  41bbaf:	or     ebx,DWORD PTR [edi+ebx*8]
  41bbb2:	add    ah,al
  41bbb4:	jmp    0x57377891
  41bbb9:	xor    DWORD PTR [edi-0x18],0xfb30212f
  41bbc0:	jns    0x41bba3
  41bbc2:	xchg   DWORD PTR [eax-0x6149e7ff],ebp
  41bbc8:	fwait
  41bbc9:	mov    al,0x9f
  41bbcb:	imul   ebx,edi,0x3faad081
  41bbd1:	mov    al,ds:0x50ccc8c7
  41bbd6:	mov    ah,0xc7
  41bbd8:	pop    esp
  41bbd9:	arpl   WORD PTR [ebx+ebx*8-0x14e80f36],ax
  41bbe0:	and    BYTE PTR [eax+ebp*4-0x4878ef7a],al
  41bbe7:	pushf  
  41bbe8:	test   BYTE PTR [edi],ch
  41bbea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbeb:	in     al,dx
  41bbec:	mov    ds:0xd23c76b7,al
  41bbf1:	call   FWORD PTR [ecx]
  41bbf3:	shl    BYTE PTR [edx-0x5cabc7fa],0xe8
  41bbfa:	xchg   esp,eax
  41bbfb:	dec    esi
  41bbfc:	sbb    esi,edx
  41bbfe:	mov    esi,0x88052277
  41bc03:	xchg   ebp,eax
  41bc04:	retf   
  41bc05:	push   0x6a
  41bc07:	mov    esp,0xb0ac231a
  41bc0c:	aaa    
  41bc0d:	inc    eax
  41bc0e:	inc    ebx
  41bc0f:	mov    ah,0x98
  41bc11:	dec    ebx
  41bc12:	xor    al,0xd0
  41bc14:	sub    ch,BYTE PTR [ebx+ecx*4+0x6614a96b]
  41bc1b:	stc    
  41bc1c:	cmc    
  41bc1d:	mov    eax,0xfe497494
  41bc22:	int    0x18
  41bc24:	popa   
  41bc25:	adc    edx,DWORD PTR [ecx]
  41bc27:	pusha  
  41bc28:	add    ch,al
  41bc2a:	lods   al,BYTE PTR ds:[esi]
  41bc2b:	sbb    DWORD PTR [eax+ebp*1-0x344c34ff],edx
  41bc32:	shl    BYTE PTR [edx],1
  41bc34:	(bad)  
  41bc35:	push   edi
  41bc36:	daa    
  41bc37:	and    eax,0x9431e910
  41bc3c:	push   ds
  41bc3d:	cli    
  41bc3e:	add    esi,DWORD PTR [eax]
  41bc40:	lea    ecx,[ebp-0x6ae069f2]
  41bc46:	and    ah,BYTE PTR [edx]
  41bc48:	enter  0xba02,0x34
  41bc4c:	mov    al,0x7a
  41bc4e:	inc    esp
  41bc4f:	sub    al,0xec
  41bc51:	in     al,dx
  41bc52:	pop    edi
  41bc53:	xor    al,0x70
  41bc55:	sbb    ch,BYTE PTR [esp+eax*8+0x6e]
  41bc59:	dec    eax
  41bc5a:	shl    BYTE PTR [edx-0x4c],cl
  41bc5d:	jo     0xeba86917
  41bc63:	pop    esi
  41bc64:	cld    
  41bc65:	push   ebp
  41bc66:	fsub   QWORD PTR [eax]
  41bc68:	sub    BYTE PTR [edi-0x35],dh
  41bc6b:	js     0x41bc72
  41bc6d:	mov    ebx,0xc87fc638
  41bc72:	(bad)  
  41bc73:	shr    DWORD PTR [edi+0x4aaa6c21],cl
  41bc79:	sti    
  41bc7a:	jb     0x41bc95
  41bc7c:	jae    0x41bc00
  41bc7e:	vpshld xmm2,xmm7,[esi+edx*8]
  41bc84:	cwde   
  41bc85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc86:	ret    
  41bc87:	sub    al,0x41
  41bc89:	bnd jle 0x41bcc4
  41bc8c:	rol    ecx,0x93
  41bc8f:	cmp    DWORD PTR [eax+0x51],edx
  41bc92:	xor    ch,BYTE PTR [edx-0x1e9d70c8]
  41bc98:	xor    esi,DWORD PTR [edi+eax*4-0x75]
  41bc9c:	pop    eax
  41bc9d:	lahf   
  41bc9e:	dec    eax
  41bc9f:	(bad)  
  41bca1:	popa   
  41bca2:	popf   
  41bca3:	cld    
  41bca4:	stos   BYTE PTR es:[edi],al
  41bca5:	cwde   
  41bca6:	jmp    0x4779053b
  41bcab:	inc    ebx
  41bcac:	mov    ah,0xd6
  41bcae:	push   cs
  41bcaf:	jo     0x41bcaf
  41bcb1:	or     ax,WORD PTR [esi]
  41bcb4:	ja     0x41bd11
  41bcb6:	dec    ecx
  41bcb7:	(bad)  
  41bcb8:	cmc    
  41bcb9:	mov    eax,0xbba0970
  41bcbe:	je     0x41bc52
  41bcc0:	loope  0x41bcfb
  41bcc2:	xchg   esp,eax
  41bcc3:	mov    al,ds:0x33a543e4
  41bcc8:	dec    esp
  41bcc9:	mov    ebx,0x88e1c4c9
  41bcce:	int    0xd8
  41bcd0:	mov    edx,0x4cca8ca
  41bcd5:	stc    
  41bcd6:	pop    es
  41bcd7:	cli    
  41bcd8:	jno    0x41bc97
  41bcda:	test   BYTE PTR [ebx-0x72],al
  41bcdd:	ins    BYTE PTR es:[edi],dx
  41bcde:	repnz imul ebx,ebx,0x1f
  41bce2:	pop    ebx
  41bce3:	hlt    
  41bce4:	stos   DWORD PTR es:[edi],eax
  41bce5:	mov    ds:0xbd98dc3c,eax
  41bcea:	aas    
  41bceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcec:	div    BYTE PTR [ebx]
  41bcee:	push   esp
  41bcef:	shl    eax,0x3f
  41bcf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcf3:	mov    edi,0x553325b6
  41bcf8:	pop    edi
  41bcf9:	cld    
  41bcfa:	test   BYTE PTR [edi-0xb57a509],0xf9
  41bd01:	loop   0x41bc83
  41bd03:	test   al,0x12
  41bd05:	xor    DWORD PTR [edi+ebp*8-0x4468ffc9],esi
  41bd0c:	ret    
  41bd0d:	repnz pop edi
  41bd0f:	jns    0x41bd7a
  41bd11:	loop   0x41bd2e
  41bd13:	cmp    ah,ch
  41bd15:	fcmovne st,st(7)
  41bd17:	push   es
  41bd18:	adc    BYTE PTR [edx-0xb],dh
  41bd1b:	dec    eax
  41bd1c:	mov    ds:0xbdf010b1,eax
  41bd21:	and    al,0xa5
  41bd23:	sub    BYTE PTR [edx+0x3c523434],bl
  41bd29:	sub    al,cl
  41bd2b:	(bad)  
  41bd2d:	aam    0xb2
  41bd2f:	leave  
  41bd30:	and    al,ch
  41bd32:	js     0x41bd61
  41bd34:	cld    
  41bd35:	cmp    eax,0xc595d858
  41bd3a:	stos   DWORD PTR es:[edi],eax
  41bd3b:	push   cs
  41bd3c:	add    BYTE PTR [edx+eiz*2],dh
  41bd3f:	xchg   edi,eax
  41bd40:	loope  0x41bd29
  41bd42:	in     al,0xe0
  41bd44:	pop    eax
  41bd45:	mov    ah,0x88
  41bd47:	sti    
  41bd48:	add    BYTE PTR [esp+ebp*1-0x4d],al
  41bd4c:	gs push esp
  41bd4e:	inc    edx
  41bd4f:	pop    esp
  41bd50:	pusha  
  41bd51:	out    dx,eax
  41bd52:	sub    al,0x48
  41bd54:	in     al,0x71
  41bd56:	nop
  41bd57:	and    al,0x0
  41bd59:	sbb    BYTE PTR [ecx-0x3cceb90],al
  41bd5f:	jae    0x41bdd3
  41bd61:	jg     0x41bd8f
  41bd63:	xchg   ecx,eax
  41bd64:	xor    al,cl
  41bd66:	jle    0x41bda8
  41bd68:	jne    0x41bd77
  41bd6a:	mov    al,0x90
  41bd6c:	addr16 popf 
  41bd6e:	or     al,0xe9
  41bd70:	add    DWORD PTR [eax+0x5754124c],eax
  41bd76:	fs inc edi
  41bd78:	shl    DWORD PTR [ebp+ebp*1-0x78],0xb4
  41bd7d:	push   ebp
  41bd7e:	lods   eax,DWORD PTR ds:[esi]
  41bd7f:	popa   
  41bd80:	fsubr  DWORD PTR [eax]
  41bd82:	push   esp
  41bd83:	xchg   edi,eax
  41bd84:	fnstcw WORD PTR [edx]
  41bd86:	or     edi,0x5
  41bd89:	mov    esp,0x1cd14234
  41bd8e:	mov    al,ds:0xb0332044
  41bd93:	adc    al,0xf3
  41bd95:	cdq    
  41bd96:	fisttp QWORD PTR [edx-0x69643327]
  41bd9c:	cwde   
  41bd9d:	cwde   
  41bd9e:	ret    0xfbbc
  41bda1:	daa    
  41bda2:	in     eax,dx
  41bda3:	xor    al,0xb4
  41bda5:	jmp    0x3961:0x63443bcf
  41bdac:	push   esi
  41bdad:	pusha  
  41bdae:	xor    esp,ebx
  41bdb0:	push   0xffffffb6
  41bdb2:	xor    DWORD PTR [edi-0x323fb884],eax
  41bdb8:	js     0x41be0b
  41bdba:	push   esp
  41bdbb:	adc    eax,0x9aa5b0e7
  41bdc0:	mov    eax,ds:0xb8f63fb0
  41bdc5:	ret    
  41bdc6:	or     edi,ebx
  41bdc8:	shr    al,0xdc
  41bdcb:	xor    BYTE PTR [ebp+0x3d],dh
  41bdce:	and    al,0x97
  41bdd0:	ds js  0x41bdc6
  41bdd3:	cmp    cl,BYTE PTR [edx+0x98d6b8c]
  41bdd9:	jne    0x41bd74
  41bddb:	fldcw  WORD PTR [eax-0x4b7317ae]
  41bde1:	shl    BYTE PTR [edi-0x6dfa26c7],cl
  41bde7:	add    eax,0x88955d4
  41bded:	ins    DWORD PTR es:[edi],dx
  41bdee:	mov    ebx,0xf8af7b10
  41bdf3:	lock mov DWORD PTR [ecx-0x20],eax
  41bdf7:	test   DWORD PTR [ebp+0x74],ebx
  41bdfa:	pop    ds
  41bdfb:	mov    al,ds:0xefd8565f
  41be00:	cmp    ecx,esi
  41be02:	mov    esp,0x97ccc44d
  41be07:	pop    ebx
  41be08:	cwde   
  41be09:	pop    esi
  41be0a:	enter  0xa06d,0xc8
  41be0e:	push   0xffffffe0
  41be10:	jge    0x41bdcf
  41be12:	or     al,0xa0
  41be14:	inc    ecx
  41be15:	dec    ebp
  41be16:	hlt    
  41be17:	adc    DWORD PTR [edi+esi*4+0x8],esi
  41be1b:	stos   DWORD PTR es:[edi],eax
  41be1c:	repz shr BYTE PTR [eax],0x2d
  41be20:	xor    al,0x3a
  41be22:	rol    BYTE PTR [esi+eax*8-0x33],0x55
  41be27:	adc    al,0xa0
  41be29:	pushf  
  41be2a:	lahf   
  41be2b:	out    dx,al
  41be2c:	scas   eax,DWORD PTR es:[edi]
  41be2d:	lods   eax,DWORD PTR ds:[esi]
  41be2e:	mov    ecx,0x75f2582c
  41be33:	retf   0x7188
  41be36:	mov    al,ds:0x46818eb
  41be3b:	and    eax,0x1220656b
  41be40:	jl     0x41be6e
  41be42:	loop   0x41be56
  41be44:	or     bl,BYTE PTR [edx+ebp*2-0x44]
  41be48:	dec    esi
  41be49:	push   ds
  41be4a:	jo     0x41bddc
  41be4c:	dec    edi
  41be4d:	jmp    0x41be41
  41be4f:	cmp    edi,esp
  41be51:	pop    ss
  41be52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be53:	adc    eax,0x559fd9e7
  41be58:	adc    al,0x20
  41be5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be5b:	adc    DWORD PTR [edi+0x43],ecx
  41be5e:	pop    ecx
  41be5f:	fmul   DWORD PTR [ecx+0x69]
  41be62:	dec    esp
  41be63:	retf   
  41be64:	jno    0x41be3e
  41be66:	hlt    
  41be67:	popa   
  41be68:	pop    esp
  41be69:	adc    al,0x44
  41be6b:	add    BYTE PTR ds:0x7f907491,bh
  41be71:	xchg   edi,eax
  41be72:	(bad)  
  41be75:	in     al,0x0
  41be77:	adc    esp,DWORD PTR [eax]
  41be79:	scas   eax,DWORD PTR es:[edi]
  41be7a:	jge    0x41bea0
  41be7c:	pop    edx
  41be7d:	xor    eax,0x7555c36a
  41be82:	cmp    DWORD PTR [ebp-0x2d],ecx
  41be85:	nop
  41be86:	push   eax
  41be87:	mov    esp,0x8469743b
  41be8c:	aam    0x76
  41be8e:	fs in  eax,dx
  41be90:	mov    edx,0x9cd4b188
  41be95:	loopne 0x41be21
  41be97:	sahf   
  41be98:	enter  0xb9e4,0x2a
  41be9c:	cmp    BYTE PTR [eax],al
  41be9e:	add    BYTE PTR [eax],al
  41bea0:	adc    al,0x18
  41bea2:	xchg   ebp,eax
  41bea3:	dec    eax
  41bea4:	imul   eax,DWORD PTR [esi],0x0
  41beaa:	add    BYTE PTR [eax],al
  41beac:	imul   eax,DWORD PTR [esi],0x180000
  41beb2:	es jl  0x41beb5
  41beb5:	add    dh,BYTE PTR [esi]
  41beb7:	or     BYTE PTR [eax],al
  41beb9:	add    BYTE PTR [edx+ecx*2-0x78a0fc00],ch
  41bec0:	ret    
  41bec1:	lahf   
  41bec2:	shl    ah,1
  41bec4:	xchg   BYTE PTR [esp+esi*1],ah
  41bec7:	sub    al,0x30
  41bec9:	mov    edi,0x9cb307d
  41bece:	dec    eax
  41becf:	mov    ah,0xd9
  41bed1:	sbb    al,0x54
  41bed3:	xlat   BYTE PTR ds:[ebx]
  41bed4:	out    0x90,ax
  41bed7:	ins    BYTE PTR es:[edi],dx
  41bed8:	mov    es,WORD PTR [eax]
  41beda:	jne    0x41bed3
  41bedc:	into   
  41bedd:	or     BYTE PTR [ebx-0x6b586fbd],0xa4
  41bee4:	int3   
  41bee5:	mov    eax,0x78cbcff0
  41beea:	mov    bh,0xe
  41beec:	dec    eax
  41beed:	ret    
  41beee:	sbb    bl,BYTE PTR [eax+0x55]
  41bef1:	fs fs mov ax,gs
  41bef6:	ins    DWORD PTR es:[edi],dx
  41bef7:	dec    esp
  41bef8:	xor    DWORD PTR [eax-0x67733709],ecx
  41befe:	pop    es
  41beff:	inc    edi
  41bf00:	jl     0x41bea4
  41bf02:	pushf  
  41bf03:	rcr    BYTE PTR [esi],cl
  41bf05:	push   esi
  41bf06:	push   ebx
  41bf07:	mov    al,0x4b
  41bf09:	inc    edi
  41bf0a:	test   DWORD PTR [ebx+0x1bd443c8],edx
  41bf10:	jns    0x41bf6e
  41bf12:	jo     0x41bf20
  41bf14:	ins    BYTE PTR es:[edi],dx
  41bf15:	pushf  
  41bf16:	xor    dh,BYTE PTR [esp+edx*8-0x49]
  41bf1a:	push   0xa48cd996
  41bf1f:	jge    0x41bea2
  41bf21:	pushf  
  41bf22:	sub    BYTE PTR [edi],0x57
  41bf25:	stc    
  41bf26:	lock aas 
  41bf28:	push   esp
  41bf29:	aas    
  41bf2a:	sub    al,0xd4
  41bf2c:	imul   ecx,ebp,0xb9dc57e2
  41bf32:	sbb    ah,ah
  41bf34:	out    dx,al
  41bf35:	adc    BYTE PTR [ebx+ebp*1+0x2b],dh
  41bf39:	aas    
  41bf3a:	test   dh,al
  41bf3c:	push   0xffffffd0
  41bf3e:	das    
  41bf3f:	and    ebx,DWORD PTR [eax+eiz*4-0x74ac57a5]
  41bf46:	jae    0x41bf14
  41bf48:	mov    cl,0x45
  41bf4a:	pop    es
  41bf4b:	mov    esp,0x823d9ec
  41bf50:	jg     0x41bf3a
  41bf52:	in     al,0xca
  41bf54:	pop    es
  41bf55:	xchg   ebp,eax
  41bf56:	hlt    
  41bf57:	scas   al,BYTE PTR es:[edi]
  41bf58:	jno    0x41bf9f
  41bf5a:	cld    
  41bf5b:	pop    eax
  41bf5c:	repz add eax,0xe45018d0
  41bf62:	test   al,0x27
  41bf64:	lds    ecx,FWORD PTR [eax-0x75]
  41bf67:	leave  
  41bf68:	sar    BYTE PTR [edi+esi*1],1
  41bf6b:	fnstcw WORD PTR [esp+edx*8+0x1b10efd3]
  41bf72:	cld    
  41bf73:	stc    
  41bf74:	cwde   
  41bf75:	lock jmp DWORD PTR [edx+eax*1-0x1fb67afd]
  41bf7d:	sbb    eax,0xd56c3b18
  41bf82:	sub    BYTE PTR [ebx],cl
  41bf84:	jne    0x41bf46
  41bf86:	or     edi,DWORD PTR [ecx+0x40]
  41bf89:	cmp    bh,bh
  41bf8b:	and    bh,ch
  41bf8d:	das    
  41bf8e:	test   eax,0xa3ea5ae7
  41bf93:	lock lods eax,DWORD PTR ds:[esi]
  41bf95:	adc    ebp,esp
  41bf97:	test   edi,esi
  41bf99:	jge    0x41bf9b
  41bf9b:	adc    BYTE PTR [edi+0x633111de],bl
  41bfa1:	sub    BYTE PTR [ecx+esi*8],ch
  41bfa4:	je     0x41bf7e
  41bfa6:	sub    al,0x4b
  41bfa8:	mov    ah,0xc1
  41bfaa:	jns    0x41bffd
  41bfac:	aam    0xaf
  41bfae:	push   esp
  41bfaf:	mov    dh,0xed
  41bfb1:	pop    ebp
  41bfb2:	icebp  
  41bfb3:	xchg   ecx,eax
  41bfb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfb5:	mov    ds:0xcf08cd5b,eax
  41bfba:	xchg   ebx,eax
  41bfbb:	xor    DWORD PTR [esi+eax*2+0x28282463],ebx
  41bfc2:	repz clc 
  41bfc4:	xor    bh,BYTE PTR [ebx+ecx*8]
  41bfc7:	adc    BYTE PTR [eax+eax*2-0x25],ch
  41bfcb:	push   esp
  41bfcc:	adc    al,0x78
  41bfce:	fs loope 0x41bf8b
  41bfd1:	sbb    BYTE PTR [ecx],bl
  41bfd3:	inc    edi
  41bfd4:	js     0x41bf92
  41bfd6:	or     al,al
  41bfd8:	lods   al,BYTE PTR ds:[esi]
  41bfd9:	test   BYTE PTR [esp+edx*2],dl
  41bfdc:	imul   esp,DWORD PTR [eax],0xb0d6a932
  41bfe2:	xor    al,0x38
  41bfe4:	cmp    al,0x32
  41bfe6:	push   esp
  41bfe7:	inc    esi
  41bfe8:	iret   
  41bfe9:	ins    DWORD PTR es:[edi],dx
  41bfea:	aam    0xd9
  41bfec:	inc    ebp
  41bfed:	adc    al,0x61
  41bfef:	and    DWORD PTR [esi+esi*8+0x6f],0x7df4fc78
  41bff7:	or     esi,DWORD PTR [esi-0x6c]
  41bffa:	xchg   esp,eax
  41bffb:	jmp    0xb34d:0x2b7d57ad
  41c002:	sar    BYTE PTR [eax-0x3b669050],0x57
  41c009:	xlat   BYTE PTR ds:[ebx]
  41c00a:	lahf   
  41c00b:	pop    ebp
  41c00c:	pusha  
  41c00d:	out    0x81,eax
  41c00f:	ins    DWORD PTR es:[edi],dx
  41c010:	add    eax,0x41b4f382
  41c015:	aam    0x68
  41c017:	test   BYTE PTR [ebx-0x4f6066ab],dl
  41c01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c01e:	stos   DWORD PTR es:[edi],eax
  41c01f:	data16 mov al,0x37
  41c022:	pop    edx
  41c023:	mov    edi,0xb8ca2d01
  41c028:	(bad)  
  41c029:	add    BYTE PTR [ebx],ch
  41c02b:	ja     0x41c00d
  41c02d:	enter  0xf366,0x67
  41c031:	xchg   edx,eax
  41c032:	std    
  41c033:	xchg   ebx,eax
  41c034:	test   BYTE PTR [eax+0x1857cfa8],bh
  41c03a:	sahf   
  41c03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c03c:	stos   BYTE PTR es:[di],al
  41c03e:	cmp    DWORD PTR [ebx],edi
  41c040:	icebp  
  41c041:	mov    eax,0xbc0445b4
  41c046:	ficom  WORD PTR [ebx+0x3c]
  41c049:	rcr    ah,1
  41c04b:	popa   
  41c04c:	fdiv   QWORD PTR ds:0x8df4f031
  41c052:	sti    
  41c053:	add    BYTE PTR [eax+eiz*8+0x8],dl
  41c057:	adc    eax,0xf9f99c98
  41c05c:	stos   DWORD PTR es:[edi],eax
  41c05d:	das    
  41c05e:	mov    edi,0x58f1db1
  41c063:	dec    ebp
  41c064:	lea    esi,[eax]
  41c066:	pop    ebx
  41c067:	aam    0x8d
  41c069:	les    esi,FWORD PTR [ebx-0x5845cc29]
  41c06f:	iret   
  41c070:	clc    
  41c071:	das    
  41c072:	jle    0x41c08f
  41c074:	or     DWORD PTR [ecx+0x4],0xffffff9f
  41c078:	rcr    BYTE PTR [ecx+ebp*2],cl
  41c07b:	sbb    al,0x30
  41c07d:	pop    eax
  41c07e:	cmp    BYTE PTR [ebx+eax*1+0xb],dh
  41c082:	les    edi,FWORD PTR [ebp+0x271d533a]
  41c088:	push   edi
  41c089:	and    cl,bh
  41c08b:	call   0x3b1178bd
  41c090:	add    DWORD PTR [ecx],0x550c8144
  41c096:	or     al,0x91
  41c098:	inc    ecx
  41c099:	fcomp  DWORD PTR ds:0x41340875
  41c09f:	xor    edi,DWORD PTR [edi+ebp*2+0x10c748cf]
  41c0a6:	push   eax
  41c0a7:	sbb    ch,dl
  41c0a9:	and    eax,0x6cc567cc
  41c0ae:	cmp    DWORD PTR [ebp+0x513104c0],ebp
  41c0b4:	cmp    BYTE PTR [edi+0x4b],al
  41c0b7:	jecxz  0x41c10e
  41c0b9:	cmp    al,0x28
  41c0bb:	and    esp,DWORD PTR [ebp+0x5449c7f4]
  41c0c1:	leave  
  41c0c2:	dec    esp
  41c0c3:	dec    eax
  41c0c4:	xchg   ebp,eax
  41c0c5:	push   ebp
  41c0c6:	fsub   DWORD PTR [esi+0x30]
  41c0c9:	fwait
  41c0ca:	sbb    eax,0xae748f48
  41c0cf:	idiv   DWORD PTR [eax+0xd]
  41c0d2:	cmc    
  41c0d3:	jl     0x41c104
  41c0d5:	jecxz  0x41c133
  41c0d7:	push   ebp
  41c0d8:	and    ebx,DWORD PTR [ebx]
  41c0da:	in     al,dx
  41c0db:	fldenv [esi-0x48]
  41c0de:	cmp    DWORD PTR [esi],edi
  41c0e0:	inc    esp
  41c0e1:	or     esp,DWORD PTR [esi]
  41c0e3:	mov    al,0x67
  41c0e5:	mov    al,BYTE PTR [edi+edx*4]
  41c0e8:	xchg   ebx,eax
  41c0e9:	push   0xa7688ef
  41c0ee:	dec    ebx
  41c0ef:	or     eax,0x988cb7c0
  41c0f4:	test   eax,0xa4a09898
  41c0f9:	fistp  QWORD PTR [edi-0x3f16a34c]
  41c0ff:	pop    es
  41c100:	ret    
  41c101:	mov    BYTE PTR [ebx-0x69],ch
  41c104:	sub    al,0x5c
  41c106:	jl     0x41c0ab
  41c108:	push   0x7874bca0
  41c10d:	xchg   edi,eax
  41c10e:	rcl    BYTE PTR [ebp+0x54bd64d8],1
  41c114:	pushf  
  41c115:	lds    esp,FWORD PTR [eax]
  41c117:	mov    al,ds:0xb477a8a1
  41c11c:	cmp    DWORD PTR [esi+0x45c00443],ecx
  41c122:	xchg   ebp,eax
  41c123:	aam    0x2c
  41c125:	aaa    
  41c126:	addr16 loope 0x41c15a
  41c129:	test   BYTE PTR [ebp+0x25],cl
  41c12c:	cld    
  41c12d:	je     0x41c11f
  41c12f:	and    al,0xdb
  41c131:	outs   dx,DWORD PTR ds:[esi]
  41c132:	loope  0x41c1a0
  41c134:	sbb    al,0xbd
  41c136:	lods   eax,DWORD PTR ds:[esi]
  41c137:	push   0xfab5dab0
  41c13c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c13d:	inc    ebp
  41c13e:	add    al,0xc7
  41c140:	dec    eax
  41c141:	repnz xor al,0x18
  41c144:	ret    0xd16b
  41c147:	mov    eax,0xaba785ec
  41c14c:	std    
  41c14d:	add    ecx,DWORD PTR [eax+ebx*1]
  41c150:	outs   dx,DWORD PTR ds:[esi]
  41c151:	loope  0x41c0e7
  41c153:	arpl   WORD PTR [esi+0x2d],si
  41c156:	sub    cl,ch
  41c158:	dec    eax
  41c159:	(bad)  
  41c15a:	jnp    0x41c10f
  41c15c:	inc    esp
  41c15d:	add    eax,0x6dd2cb48
  41c162:	pop    ecx
  41c163:	shl    BYTE PTR [ebp-0x57],0xf8
  41c167:	cwde   
  41c168:	fnstcw WORD PTR [edi-0x14]
  41c16b:	mov    ecx,0xa00d0520
  41c170:	adc    BYTE PTR [ecx],dl
  41c172:	and    DWORD PTR [ecx-0x28],ebx
  41c175:	or     al,0x27
  41c177:	mov    ds:0xdc92bb93,eax
  41c17c:	int    0xc6
  41c17e:	and    eax,0xc899555e
  41c183:	popf   
  41c184:	sbb    al,0xd3
  41c186:	pop    ss
  41c187:	mov    ?,WORD PTR [esi+0x3202d3f0]
  41c18d:	or     DWORD PTR [ebx],esp
  41c18f:	sub    edx,ebp
  41c191:	outs   dx,DWORD PTR ds:[esi]
  41c192:	or     cl,al
  41c194:	aas    
  41c195:	sub    DWORD PTR [ebp+0x1e],ebp
  41c198:	enter  0xc703,0x34
  41c19c:	sub    al,0x8f
  41c19e:	dec    ebx
  41c19f:	push   ecx
  41c1a0:	adc    eax,0xe0236376
  41c1a5:	pop    es
  41c1a6:	jmp    0x51e:0x70f810a4
  41c1ad:	and    ebx,DWORD PTR [ebx+0x131ef3ec]
  41c1b3:	data16 xlat BYTE PTR ds:[ebx]
  41c1b5:	sub    al,0x3a
  41c1b7:	or     eax,edi
  41c1b9:	dec    ecx
  41c1ba:	mov    eax,0x53bc50c4
  41c1bf:	sbb    al,0x41
  41c1c1:	pushf  
  41c1c2:	or     al,0x46
  41c1c4:	cmp    edi,DWORD PTR [edi]
  41c1c6:	dec    ecx
  41c1c7:	sub    DWORD PTR [eax+0x7c],ebx
  41c1ca:	cmc    
  41c1cb:	sbb    BYTE PTR [edi+0x43],0xff
  41c1cf:	push   ds
  41c1d0:	jecxz  0x41c227
  41c1d2:	sub    cl,BYTE PTR [eax]
  41c1d4:	lods   al,BYTE PTR ds:[esi]
  41c1d5:	adc    DWORD PTR [ebp+0x60163c31],esi
  41c1db:	mov    bh,0x59
  41c1dd:	pusha  
  41c1de:	neg    DWORD PTR [eax+0x6]
  41c1e1:	and    BYTE PTR [edi+edi*1-0x7c],dl
  41c1e5:	push   0x4025b3f4
  41c1ea:	mov    DWORD PTR [esp+eiz*2+0x179a949f],ecx
  41c1f1:	in     eax,0x5c
  41c1f3:	icebp  
  41c1f4:	and    DWORD PTR [ebx*2+0x131a1fd8],esi
  41c1fb:	(bad)  
  41c1fc:	sbb    eax,0xad6f58a8
  41c201:	mov    WORD PTR [ebx-0x4b],cs
  41c204:	(bad)  
  41c205:	mov    esi,DWORD PTR [ecx+0x77fd067d]
  41c20b:	stc    
  41c20c:	cwde   
  41c20d:	sbb    ebp,edx
  41c20f:	ins    BYTE PTR es:[edi],dx
  41c210:	dec    eax
  41c211:	inc    esi
  41c212:	mov    ch,0xac
  41c214:	mov    ch,0x4b
  41c216:	int    0x94
  41c218:	sar    BYTE PTR [edi-0x77],0xde
  41c21c:	adc    al,0xc1
  41c21e:	pop    edi
  41c21f:	popa   
  41c220:	sub    ebx,ebp
  41c222:	jb     0x41c244
  41c224:	pushf  
  41c225:	popf   
  41c226:	cmp    DWORD PTR [edi+0x7b],0xb0540f88
  41c22d:	sbb    cl,ah
  41c22f:	pop    esp
  41c230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c231:	fsub   st(6),st
  41c233:	mov    bh,0xf4
  41c235:	dec    ecx
  41c236:	aas    
  41c237:	mov    eax,ds:0xc18835b4
  41c23c:	test   DWORD PTR [esi-0x73],esi
  41c23f:	daa    
  41c240:	outs   dx,BYTE PTR ds:[esi]
  41c241:	jmp    0x81b5:0xe475b266
  41c248:	xchg   esp,eax
  41c249:	sub    edx,eax
  41c24b:	ds mov eax,0xab0e03d
  41c251:	in     al,dx
  41c252:	mov    al,ds:0x61a0f813
  41c257:	test   cl,cl
  41c259:	mov    WORD PTR [eax+0xb1cebd0],ss
  41c25f:	fwait
  41c260:	xchg   esi,eax
  41c261:	shl    al,1
  41c263:	jne    0x41c26c
  41c265:	or     al,0xff
  41c267:	sti    
  41c268:	ja     0x41c2e5
  41c26a:	and    al,0x7d
  41c26c:	jno    0x41c291
  41c26e:	stc    
  41c26f:	cmp    eax,0xd8858f47
  41c274:	mov    esi,0xcc10e30c
  41c279:	push   ebp
  41c27a:	shrd   DWORD PTR [esi+0x6d],esp,0xe0
  41c27f:	xlat   BYTE PTR ds:[ebx]
  41c280:	mov    esp,0xaff89eb0
  41c285:	call   0x6efb71b
  41c28a:	sbb    BYTE PTR [edi-0x3],al
  41c28d:	add    eax,DWORD PTR ds:0x14700d31
  41c293:	xor    eax,0xe85568fc
  41c298:	push   edi
  41c299:	add    BYTE PTR [ecx+0x17e8e27c],bh
  41c29f:	stc    
  41c2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2a1:	push   esp
  41c2a2:	mov    eax,0x2457265c
  41c2a7:	in     al,0xf2
  41c2a9:	xchg   esp,eax
  41c2aa:	sbb    eax,0xaec8059f
  41c2af:	or     esi,eax
  41c2b1:	jecxz  0x41c238
  41c2b3:	lods   al,BYTE PTR ds:[esi]
  41c2b4:	gs mov ah,0xc8
  41c2b7:	dec    esi
  41c2b8:	nop
  41c2b9:	jo     0x41c295
  41c2bb:	jns    0x41c269
  41c2bd:	inc    eax
  41c2be:	sub    DWORD PTR [esi+ebx*2+0x7c],0xfffffffb
  41c2c3:	mov    eax,0x4628c618
  41c2c8:	inc    ebx
  41c2c9:	sub    ebp,edx
  41c2cb:	and    BYTE PTR [ebx+0x34732a30],bl
  41c2d1:	mov    ebx,0xc44b500
  41c2d6:	mov    ch,0x12
  41c2d8:	push   esp
  41c2d9:	pop    ecx
  41c2da:	sub    DWORD PTR [ebp-0x17],edi
  41c2dd:	pusha  
  41c2de:	push   0x7d583485
  41c2e3:	or     DWORD PTR [eax+eiz*8-0x27646dd4],edi
  41c2ea:	or     BYTE PTR [eax-0x34d714d9],dl
  41c2f0:	sub    eax,0x6ce4643a
  41c2f5:	mov    WORD PTR [ebx+0x58],es
  41c2f8:	push   ds
  41c2f9:	fistp  WORD PTR [esi-0x5cef97c0]
  41c2ff:	inc    edi
  41c300:	mov    eax,0x4bdadf3c
  41c305:	adc    BYTE PTR [ebx],0xb0
  41c308:	call   0x3b5d:0x43830099
  41c30f:	dec    ebx
  41c310:	sub    bh,ch
  41c312:	dec    ebx
  41c313:	fnop   
  41c315:	in     al,dx
  41c316:	inc    edx
  41c317:	push   cs
  41c318:	loop   0x41c31b
  41c31a:	pushw  0xfb3b
  41c31e:	dec    edx
  41c31f:	std    
  41c320:	xor    esp,0xffffff97
  41c323:	or     ecx,DWORD PTR [esi+ebp*8-0x52176670]
  41c32a:	repz push edi
  41c32c:	jg     0x41c2e6
  41c32e:	jecxz  0x41c380
  41c330:	add    al,0xee
  41c333:	dec    ebx
  41c334:	jmp    0xec26:0x5fd88dd0
  41c33b:	imul   edx,DWORD PTR [edx],0x8ba0e90
  41c341:	test   ah,dh
  41c343:	push   eax
  41c344:	mov    dl,0x91
  41c346:	(bad)  
  41c347:	pop    ss
  41c348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c349:	inc    esp
  41c34a:	mov    ds:0xbd95b92e,al
  41c34f:	leave  
  41c350:	ret    
  41c351:	xchg   esp,eax
  41c352:	aaa    
  41c353:	pop    ds
  41c354:	aaa    
  41c355:	xlat   BYTE PTR ds:[ebx]
  41c356:	push   eax
  41c357:	cmp    bh,BYTE PTR [esi+0xf6e6ebf]
  41c35d:	sar    BYTE PTR ds:0xf70c057d,0x19
  41c364:	sbb    BYTE PTR [esp+edx*1+0x41],dl
  41c368:	jecxz  0x41c32c
  41c36a:	mov    al,ds:0x5e58dcb0
  41c36f:	add    ah,0x20
  41c372:	bound  ebp,QWORD PTR [eax]
  41c374:	aam    0x27
  41c376:	and    edx,ebx
  41c378:	sbb    ebp,DWORD PTR [edi-0x27ef729b]
  41c37e:	iret   
  41c37f:	fstp   TBYTE PTR ds:0xcd01c15
  41c385:	ins    DWORD PTR es:[edi],dx
  41c386:	add    al,0x24
  41c388:	int3   
  41c389:	push   ss
  41c38a:	ins    BYTE PTR es:[edi],dx
  41c38b:	add    al,0x5e
  41c38d:	es aam 0xc8
  41c390:	stos   BYTE PTR es:[edi],al
  41c391:	or     eax,0x7c2766d0
  41c396:	fmul   DWORD PTR [eax+esi*2]
  41c399:	pop    es
  41c39a:	push   eax
  41c39b:	mov    edx,0x648bf6a1
  41c3a0:	sub    al,0x38
  41c3a2:	adc    al,BYTE PTR [edx]
  41c3a4:	and    DWORD PTR [edx],eax
  41c3a6:	push   esp
  41c3a7:	and    BYTE PTR [eax],ch
  41c3a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3aa:	neg    edi
  41c3ac:	push   ebp
  41c3ad:	push   esi
  41c3ae:	pop    eax
  41c3af:	lods   al,BYTE PTR ds:[esi]
  41c3b0:	stos   BYTE PTR es:[edi],al
  41c3b1:	dec    ecx
  41c3b2:	mov    al,0x57
  41c3b4:	add    DWORD PTR [esi+0x5c],ebx
  41c3b7:	imul   eax,DWORD PTR [eax-0x33746571],0xffffffff
  41c3be:	ret    
  41c3bf:	or     BYTE PTR [eax],al
  41c3c1:	xor    BYTE PTR [esi],dl
  41c3c3:	sbb    BYTE PTR [esi],al
  41c3c5:	jo     0x41c415
  41c3c7:	and    BYTE PTR [esi],ah
  41c3c9:	fsubr  DWORD PTR [ecx+edi*4+0x3f]
  41c3cd:	leave  
  41c3ce:	sbb    DWORD PTR [ebp+esi*2+0x772d4a78],esi
  41c3d5:	add    al,BYTE PTR [ebp+0x3f]
  41c3d8:	mov    DWORD PTR [eax+0x1],edx
  41c3db:	outs   dx,DWORD PTR ds:[esi]
  41c3dc:	xor    al,0xd7
  41c3de:	ins    BYTE PTR es:[edi],dx
  41c3df:	in     eax,0x2d
  41c3e1:	xchg   ebx,eax
  41c3e2:	jl     0x41c41a
  41c3e4:	sbb    ah,BYTE PTR [edx]
  41c3e6:	mov    eax,ds:0xd3d06d2c
  41c3eb:	aaa    
  41c3ec:	leave  
  41c3ed:	jp     0x41c392
  41c3ef:	dec    ebx
  41c3f0:	fadd   DWORD PTR [ebx]
  41c3f2:	mov    al,0xe
  41c3f4:	and    DWORD PTR [edi-0x51],esp
  41c3f7:	sub    DWORD PTR [ebp+esi*8-0x72970745],ecx
  41c3fe:	mov    esp,edi
  41c400:	aad    0x70
  41c402:	jo     0x41c3df
  41c404:	shl    BYTE PTR [ecx-0x41ef907e],0x91
  41c40b:	cmp    al,0xc2
  41c40d:	popf   
  41c40e:	dec    edx
  41c40f:	dec    ebx
  41c410:	add    dl,ch
  41c412:	pop    ebp
  41c413:	inc    ebx
  41c414:	jg     0x41c401
  41c416:	push   edx
  41c417:	jo     0x41c41a
  41c419:	imul   ebp,DWORD PTR [eax+ebp*2],0xffffff82
  41c41d:	stos   DWORD PTR es:[edi],eax
  41c41e:	or     eax,0x94937493
  41c423:	retf   0x40b5
  41c426:	das    
  41c427:	repnz pop ecx
  41c429:	cmp    ecx,ebx
  41c42b:	idiv   BYTE PTR [ebx]
  41c42d:	fstp   st(4)
  41c42f:	mov    al,0xca
  41c431:	xchg   BYTE PTR [ebp-0x1b6abb1b],bl
  41c437:	lock or al,0x51
  41c43a:	pusha  
  41c43b:	mov    ecx,0x6b9004e2
  41c440:	lods   eax,DWORD PTR ds:[esi]
  41c441:	popf   
  41c442:	mov    esi,0xf328bd5b
  41c447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c448:	call   0xe96e5af1
  41c44d:	dec    esp
  41c44e:	rcr    DWORD PTR [edi-0x28],0x18
  41c452:	dec    esp
  41c453:	(bad)
  41c456:	mov    al,ds:0xe015291c
  41c45b:	add    eax,DWORD PTR [ecx+0x1f31570a]
  41c461:	sbb    DWORD PTR [ecx+0x2258aa48],0x3cd15cae
  41c46b:	enter  0x5595,0x2b
  41c46f:	lods   eax,DWORD PTR ds:[esi]
  41c470:	sti    
  41c471:	fabs   
  41c473:	sub    ah,0xf7
  41c476:	mov    bh,0xf8
  41c478:	mov    bl,BYTE PTR [edi]
  41c47a:	push   edx
  41c47b:	neg    DWORD PTR [ecx]
  41c47d:	adc    dl,BYTE PTR [eax]
  41c47f:	js     0x41c491
  41c481:	lods   eax,DWORD PTR ds:[esi]
  41c482:	mov    ds:0x34302fc0,al
  41c487:	sbb    al,BYTE PTR [edi]
  41c489:	ret    
  41c48a:	retf   0x53cf
  41c48d:	sbb    al,0xb8
  41c48f:	aad    0x63
  41c491:	sbb    al,0x28
  41c493:	adc    eax,DWORD PTR [ebp+0x5f3b733e]
  41c499:	lea    eax,[eax]
  41c49b:	sub    al,0x1f
  41c49d:	out    0xd8,eax
  41c49f:	dec    edi
  41c4a0:	add    BYTE PTR ds:0x3d113b24,ch
  41c4a6:	clc    
  41c4a7:	fs aas 
  41c4a9:	dec    ebp
  41c4aa:	sub    eax,0x34970645
  41c4af:	push   ebp
  41c4b0:	inc    esp
  41c4b1:	ins    DWORD PTR es:[edi],dx
  41c4b2:	sub    al,0x4e
  41c4b4:	std    
  41c4b5:	mov    eax,ds:0xb828127d
  41c4ba:	xor    eax,0xa36c1855
  41c4bf:	sub    DWORD PTR [esi+0x3d99ed21],eax
  41c4c5:	jns    0x41c4a3
  41c4c7:	jnp    0x41c48a
  41c4c9:	mov    esi,0x5837d443
  41c4ce:	pop    ecx
  41c4cf:	lahf   
  41c4d0:	je     0x41c4f0
  41c4d2:	push   0x53f9ba98
  41c4d7:	test   BYTE PTR [eax+eiz*2+0x1c7656ae],0x2c
  41c4df:	int3   
  41c4e0:	xchg   esi,eax
  41c4e1:	into   
  41c4e2:	xor    BYTE PTR [eax+edx*8],ah
  41c4e5:	push   ds
  41c4e6:	mul    BYTE PTR [esi-0x547a7b8]
  41c4ec:	mov    edx,0x4a8c785c
  41c4f1:	retf   0x7401
  41c4f4:	dec    esi
  41c4f5:	xchg   esp,eax
  41c4f6:	pop    ds
  41c4f7:	data16 mov BYTE PTR [eax+edi*2-0x5f11f04a],ch
  41c4ff:	add    BYTE PTR [eax+0x23],0xc2
  41c503:	mov    ah,0x90
  41c505:	push   esp
  41c506:	iretw  
  41c508:	ds push eax
  41c50a:	js     0x41c4bc
  41c50c:	and    edx,DWORD PTR [edx]
  41c50e:	fs pop eax
  41c510:	test   dl,ch
  41c512:	add    BYTE PTR ss:[eax],al
  41c515:	add    BYTE PTR [eax],al
  41c517:	add    ch,dh
  41c519:	sbb    bh,BYTE PTR [eax]
  41c51b:	push   ecx
  41c51c:	mov    ah,0x5
  41c51e:	add    BYTE PTR [eax],al
  41c520:	add    BYTE PTR [eax],al
  41c522:	add    BYTE PTR [eax],al
  41c524:	mov    ah,0x5
  41c526:	add    BYTE PTR [eax],al
  41c528:	sbb    DWORD PTR [eax],eax
  41c52a:	es jl  0x41c52d
  41c52d:	add    dh,BYTE PTR [esi]
  41c52f:	or     BYTE PTR [eax],al
  41c531:	add    BYTE PTR [edi+0x49],ah
  41c534:	add    BYTE PTR [ebx-0xa],dh
  41c537:	repz out dx,eax
  41c539:	jmp    0x41c5a9
  41c53b:	sub    al,cl
  41c53d:	push   es
  41c53e:	inc    edi
  41c53f:	cs inc eax
  41c541:	sub    al,dl
  41c543:	pop    ebx
  41c544:	inc    edx
  41c545:	jl     0x41c5b7
  41c547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c548:	jb     0x41c555
  41c54a:	pop    edx
  41c54b:	fs pop esp
  41c54d:	mov    WORD PTR [edi],?
  41c54f:	ins    BYTE PTR es:[edi],dx
  41c550:	ins    BYTE PTR es:[edi],dx
  41c551:	idiv   DWORD PTR [esp+edi*1-0x33018440]
  41c558:	js     0x41c532
  41c55a:	call   0x3674:0xc46c60d4
  41c561:	and    al,0x74
  41c563:	test   al,0x78
  41c565:	dec    edx
  41c566:	push   eax
  41c567:	sbb    al,0x10
  41c569:	mov    al,0x68
  41c56b:	bound  ebp,QWORD PTR [edx+0x38]
  41c56e:	test   BYTE PTR [esi+esi*2+0x76],bl
  41c572:	sub    ah,al
  41c574:	ins    BYTE PTR es:[edi],dx
  41c575:	lods   al,BYTE PTR ds:[esi]
  41c576:	mov    ds,WORD PTR [esi-0x5d7f8f34]
  41c57c:	stos   BYTE PTR es:[edi],al
  41c57d:	hlt    
  41c57e:	call   0xb2fc65db
  41c583:	mov    al,ds:0x5a52402c
  41c588:	cmp    al,0xd8
  41c58a:	mov    BYTE PTR [eax+0x6a],ah
  41c58d:	bound  ebx,QWORD PTR [eax]
  41c58f:	pushf  
  41c590:	test   BYTE PTR [ecx-0x1fff757f],al
  41c596:	js     0x41c5f8
  41c598:	call   0xb7ae:0x444cd09b
  41c59f:	cmp    al,0xcc
  41c5a1:	push   esp
  41c5a2:	and    al,0xc6
  41c5a4:	iret   
  41c5a5:	mov    ah,0x38
  41c5a7:	or     dl,bl
  41c5a9:	(bad)  
  41c5ab:	cwde   
  41c5ac:	add    BYTE PTR [eax],bh
  41c5ae:	je     0x41c62f
  41c5b0:	jge    0x41c5b4
  41c5b2:	xor    cl,BYTE PTR [eax]
  41c5b4:	mov    WORD PTR [eax],es
  41c5b6:	xchg   esp,eax
  41c5b7:	cwde   
  41c5b8:	je     0x41c620
  41c5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5bb:	mov    ebp,0xb2b5341a
  41c5c0:	push   ss
  41c5c1:	jnp    0x41c589
  41c5c3:	ret    0xd144
  41c5c6:	fisubr WORD PTR [eax-0x22]
  41c5c9:	jmp    0xfa51:0x5ae6e968
  41c5d0:	not    BYTE PTR [eax+0x12960205]
  41c5d6:	push   ds
  41c5d7:	mov    WORD PTR [ecx-0x4ddcfd52],fs
  41c5dd:	mov    esi,0x40cabd20
  41c5e2:	retf   0x4cc6
  41c5e5:	aad    0xd2
  41c5e7:	jbe    0x41c582
  41c5e9:	out    0xe2,al
  41c5eb:	dec    esp
  41c5ec:	icebp  
  41c5ed:	icebp  
  41c5ee:	xchg   esi,eax
  41c5ef:	inc    BYTE PTR ds:0xba0909a0
  41c5f5:	ja     0x41c611
  41c5f7:	sbb    DWORD PTR [eax+0x32742d25],ecx
  41c5fd:	xor    DWORD PTR [ebp+edi*1-0x2d7e9dbb],eax
  41c604:	rcr    DWORD PTR [eax],1
  41c606:	fucom  st(5)
  41c608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c609:	jmp    0x3756:0xfdf534e9
  41c610:	push   es
  41c611:	or     eax,0x341111c4
  41c616:	push   ds
  41c617:	and    eax,0x9a2929e8
  41c61c:	adc    eax,0xc590653d
  41c621:	dec    esi
  41c622:	pop    edi
  41c623:	push   edx
  41c624:	pop    eax
  41c625:	loopne 0x41c684
  41c627:	gs cs pusha 
  41c62a:	repnz icebp 
  41c62c:	and    ch,bh
  41c62e:	add    eax,0x150df4f9
  41c633:	enter  0x1d4d,0x25
  41c637:	(bad)  
  41c638:	sub    ch,BYTE PTR [ecx]
  41c63a:	shl    BYTE PTR ds:0x4142db3d,1
  41c640:	lods   al,BYTE PTR ds:[esi]
  41c641:	sbb    DWORD PTR [ecx+0x51],edx
  41c644:	test   BYTE PTR [esi+0x65],bl
  41c647:	mov    WORD PTR [ecx+0x69],gs
  41c64a:	mov    eax,ds:0x5b907d76
  41c64f:	push   es
  41c650:	test   DWORD PTR [esi+0x5f9e4095],0xb2dc2d26
  41c65a:	dec    ebx
  41c65b:	cmp    bh,BYTE PTR [ecx]
  41c65d:	div    BYTE PTR [eax+0x515233ca]
  41c663:	mov    al,ds:0x6d661fde
  41c668:	nop
  41c669:	repnz or esp,DWORD PTR [ecx]
  41c66c:	jle    0x41c5f3
  41c66e:	test   BYTE PTR [ecx-0x626910f3],cl
  41c674:	cwde   
  41c675:	mov    eax,ds:0xb219d1a1
  41c67a:	mov    cl,0xb0
  41c67c:	cmp    eax,0x52cc2646
  41c681:	(bad)  
  41c682:	je     0x41c6d4
  41c684:	and    DWORD PTR [edi-0x3e],esp
  41c687:	or     al,0x72
  41c689:	jb     0x41c6f3
  41c68b:	std    
  41c68c:	adc    cl,0xa
  41c68f:	mov    es,WORD PTR [ebp+edx*1+0x26ea369a]
  41c696:	stos   BYTE PTR es:[edi],al
  41c697:	mov    ah,0x31
  41c699:	mov    dh,0x87
  41c69b:	ds ret 0x49d8
  41c69f:	into   
  41c6a0:	jp     0x41c682
  41c6a2:	pop    edx
  41c6a3:	faddp  st(0),st
  41c6a5:	outs   dx,BYTE PTR gs:[esi]
  41c6a7:	pop    ecx
  41c6a8:	idiv   BYTE PTR [edx+0x58]
  41c6ab:	add    DWORD PTR [esi-0x69ed6dde],eax
  41c6b1:	mov    al,0x1d
  41c6b3:	mov    ds:0x9cae2ab7,al
  41c6b8:	xor    eax,0x46c8f6ba
  41c6bd:	retf   0x51fc
  41c6c0:	(bad)  
  41c6c1:	and    eax,0xdce66127
  41c6c6:	mov    ecx,0x7e0af671
  41c6cb:	add    bh,BYTE PTR [ecx+ecx*4]
  41c6ce:	push   cs
  41c6cf:	neg    DWORD PTR [edx]
  41c6d1:	sahf   
  41c6d2:	pushf  
  41c6d3:	icebp  
  41c6d4:	sub    DWORD PTR [esi-0x345c994],ebp
  41c6da:	inc    ecx
  41c6db:	(bad)  
  41c6dc:	sbb    DWORD PTR [esi-0x2e],ecx
  41c6df:	nop
  41c6e0:	or     eax,0x6a22e25d
  41c6e5:	out    dx,al
  41c6e6:	mov    eax,0x8047fa75
  41c6eb:	push   es
  41c6ec:	mov    ah,BYTE PTR [eax]
  41c6ee:	mov    edx,0x8d1f5958
  41c6f3:	es cs jl 0x41c6a8
  41c6f7:	ss call 0xd651:0x9862c642
  41c6ff:	dec    edi
  41c700:	pop    esi
  41c701:	loop   0x41c6bf
  41c703:	imul   ebp,esi,0x56fa767c
  41c709:	pop    esp
  41c70a:	test   DWORD PTR [edx],ecx
  41c70c:	lea    edx,[edx+0x229d7816]
  41c712:	push   edx
  41c713:	sub    bh,BYTE PTR ds:0x61662c30
  41c719:	or     edi,0xffffffb7
  41c71c:	sbb    ebx,ebx
  41c71e:	push   esp
  41c71f:	mov    ah,0xa
  41c721:	jmp    0x41c6c0
  41c723:	in     al,0x75
  41c725:	add    cl,BYTE PTR [esp+edi*8+0x370e8f59]
  41c72c:	adc    eax,0x605ee27c
  41c731:	and    al,0x5c
  41c733:	sub    esp,DWORD PTR [eax-0x24]
  41c736:	imul   edi,DWORD PTR [eax+ecx*2+0x16c7081d],0x50
  41c73e:	arpl   WORD PTR [ecx+0xc],bx
  41c741:	and    BYTE PTR [ebp+ebp*1-0x2f],ch
  41c745:	aaa    
  41c746:	jl     0x41c7bc
  41c748:	mov    ebx,0x10c8f881
  41c74d:	aaa    
  41c74e:	pop    edi
  41c74f:	and    al,0x74
  41c751:	sbb    BYTE PTR [edi],dl
  41c753:	xor    eax,0x5d387cac
  41c758:	push   es
  41c759:	dec    esp
  41c75a:	cmp    al,BYTE PTR [eax+0x60]
  41c75d:	arpl   WORD PTR [ecx-0x4],bp
  41c760:	es ins BYTE PTR es:[edi],dx
  41c762:	cmp    bl,BYTE PTR [eax-0x7bc2a481]
  41c768:	(bad)  
  41c769:	xchg   edx,eax
  41c76a:	adc    DWORD PTR [esi+edi*2],0xffffffd8
  41c76e:	sti    
  41c76f:	sub    esp,edx
  41c771:	cmp    BYTE PTR [eax-0x7bb74e75],ah
  41c777:	dec    ecx
  41c778:	lods   eax,DWORD PTR ds:[esi]
  41c779:	mov    dh,0x12
  41c77b:	inc    esi
  41c77c:	or     BYTE PTR [ebx+ebx*2+0x61],cl
  41c780:	adc    BYTE PTR [eax],ch
  41c782:	je     0x41c72b
  41c784:	cmp    edi,DWORD PTR [eax-0x6c]
  41c787:	lods   al,BYTE PTR ds:[esi]
  41c788:	mov    bl,0x89
  41c78a:	in     al,dx
  41c78b:	rcr    BYTE PTR [ebp+ebx*2-0x684f5f1d],1
  41c792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c793:	mov    cl,0x38
  41c795:	clc    
  41c796:	les    ebp,FWORD PTR [ebx-0x75]
  41c799:	enter  0xefcc,0xdd
  41c79d:	(bad)  
  41c79e:	loopne 0x41c7cc
  41c7a0:	push   0x5c7c37ed
  41c7a5:	mov    ebx,0xd4090081
  41c7aa:	nop
  41c7ab:	adc    ebx,edi
  41c7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7ae:	adc    BYTE PTR [ebx-0x430fc357],0xfe
  41c7b5:	mov    ecx,0xebf4cc87
  41c7ba:	sar    DWORD PTR [eax-0x8],1
  41c7bd:	loop   0x41c742
  41c7bf:	dec    ecx
  41c7c0:	iret   
  41c7c1:	repnz enter 0xf9c3,0xa4
  41c7c6:	and    BYTE PTR [edx],cl
  41c7c8:	lds    esi,FWORD PTR [edi-0x601f3366]
  41c7ce:	lods   eax,DWORD PTR ds:[esi]
  41c7cf:	add    al,0x94
  41c7d1:	mov    dh,0xfb
  41c7d3:	lahf   
  41c7d4:	ret    0xe080
  41c7d7:	not    ebp
  41c7d9:	js     0x41c7d7
  41c7db:	(bad)  
  41c7dd:	(bad)  
  41c7de:	jmp    0x244c:0xfde0cba4
  41c7e5:	push   es
  41c7e6:	pop    ss
  41c7e7:	adc    ah,BYTE PTR cs:[edx+0x54]
  41c7eb:	daa    
  41c7ec:	xchg   esp,eax
  41c7ed:	adc    DWORD PTR [eax+ecx*4-0x3d624ad1],ebx
  41c7f4:	xlat   BYTE PTR fs:[ebx]
  41c7f6:	add    dl,bl
  41c7f8:	aam    0xc9
  41c7fa:	std    
  41c7fb:	rcl    edi,0x28
  41c7fe:	mov    esp,0xa973f4f4
  41c803:	or     al,0x4
  41c805:	test   DWORD PTR [ebp+0x10],eax
  41c808:	sahf   
  41c809:	sbb    dl,BYTE PTR [esi]
  41c80b:	loopne 0x41c85d
  41c80d:	sub    BYTE PTR ds:0x3339f6b3,ah
  41c813:	jmp    0x41c855
  41c815:	ins    BYTE PTR es:[edi],dx
  41c816:	or     BYTE PTR [ebx+0x67c558a5],bh
  41c81c:	and    DWORD PTR [ebx],edx
  41c81e:	adc    dh,dh
  41c820:	jnp    0x41c80e
  41c822:	rol    DWORD PTR ds:0x17520a82,0xde
  41c829:	sbb    eax,0x288b242f
  41c82e:	adc    al,0x47
  41c830:	(bad)  
  41c831:	mov    bh,0x81
  41c833:	(bad)  
  41c834:	pop    eax
  41c835:	mov    BYTE PTR [eax+0xa],dh
  41c838:	xchg   ecx,eax
  41c839:	jg     0x41c885
  41c83b:	out    dx,eax
  41c83c:	cmp    eax,0x2f227064
  41c841:	stc    
  41c842:	push   edx
  41c843:	lock or ebx,DWORD PTR [ebx-0x5aefe797]
  41c84a:	fistp  DWORD PTR [ebp+0x3f]
  41c84d:	fcom   st(6)
  41c84f:	fstp   TBYTE PTR [edi+edi*4]
  41c852:	mov    ebx,0xdd0e5a22
  41c857:	push   0x48e262b4
  41c85c:	ins    DWORD PTR es:[edi],dx
  41c85d:	sti    
  41c85e:	mov    dl,0x93
  41c860:	dec    edi
  41c861:	or     eax,ecx
  41c863:	mov    BYTE PTR [ebp+edx*1+0x2898ed54],bl
  41c86a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c86b:	inc    ebx
  41c86c:	lods   al,BYTE PTR ds:[esi]
  41c86d:	(bad)  
  41c86e:	mov    bl,0xce
  41c870:	imul   esi,DWORD PTR [edx+eax*8+0x5454d844],0x5a
  41c878:	and    al,ah
  41c87a:	mov    eax,ds:0x7c3b7318
  41c87f:	or     DWORD PTR [ebx-0x3c],esi
  41c882:	mov    ds,WORD PTR [ebp+0x74989656]
  41c888:	mov    ds:0x92aa0908,al
  41c88d:	in     eax,dx
  41c88e:	xor    DWORD PTR [ebx+ecx*2+0x1627e835],esi
  41c895:	out    0x9c,eax
  41c897:	aas    
  41c898:	das    
  41c899:	jle    0x41c882
  41c89b:	and    al,0x74
  41c89d:	pop    esp
  41c89e:	js     0x41c8ab
  41c8a0:	enter  0x84ac,0x67
  41c8a4:	push   esi
  41c8a5:	call   0x3b90:0xdd93a09f
  41c8ac:	mov    dh,0x82
  41c8ae:	mov    ebp,0x4ce6b1c4
  41c8b3:	ret    0xe2f2
  41c8b6:	mov    ebp,0xc9e891e1
  41c8bb:	cli    
  41c8bc:	adc    BYTE PTR [ecx+eiz*8-0x4f639f3f],cl
  41c8c3:	scas   al,BYTE PTR es:[edi]
  41c8c4:	fstp   DWORD PTR [esi-0x51d7422b]
  41c8ca:	mov    eax,ds:0xc3ddb88e
  41c8cf:	mov    cl,0xd8
  41c8d1:	dec    edi
  41c8d2:	adc    eax,edx
  41c8d4:	pop    ebx
  41c8d5:	fsub   QWORD PTR [edx]
  41c8d7:	loopne 0x41c8bb
  41c8d9:	or     BYTE PTR [ebp+0x37326],al
  41c8df:	aaa    
  41c8e0:	enter  0x80cf,0xf
  41c8e4:	fmul   st,st(5)
  41c8e6:	shl    BYTE PTR [ebx+ebp*4+0x70],0xb5
  41c8eb:	jnp    0x41c938
  41c8ed:	add    al,ah
  41c8ef:	cwde   
  41c8f0:	int3   
  41c8f1:	pusha  
  41c8f2:	mov    al,ds:0x84e256c0
  41c8f7:	cmc    
  41c8f8:	sub    al,0xf8
  41c8fa:	adc    edi,eax
  41c8fc:	loopne 0x41c91f
  41c8fe:	test   BYTE PTR [esi],cl
  41c900:	shl    bh,1
  41c902:	(bad)  
  41c903:	sbb    bh,ch
  41c905:	and    al,BYTE PTR [eax+0x34bb7a4e]
  41c90b:	cmp    ebx,ebp
  41c90d:	dec    ebx
  41c90e:	mov    ch,al
  41c910:	dec    esi
  41c911:	xchg   esi,eax
  41c912:	cmp    edi,edx
  41c914:	and    eax,0x4de70865
  41c919:	ja     0x41c954
  41c91b:	(bad)  
  41c91c:	jmp    0x41c8aa
  41c91e:	loopne 0x41c94b
  41c920:	adc    al,BYTE PTR [ebx+0x58]
  41c923:	push   ebp
  41c924:	sub    al,0xaf
  41c926:	gs cmp al,0xbb
  41c929:	dec    ecx
  41c92a:	cmp    BYTE PTR [ebx+ecx*8],dh
  41c92d:	test   ebx,eax
  41c92f:	popf   
  41c930:	push   ebx
  41c931:	xchg   edx,eax
  41c932:	arpl   WORD PTR [esi+ebx*4+0x12],bx
  41c936:	pusha  
  41c937:	push   edi
  41c938:	mov    BYTE PTR [ebx-0x6],bh
  41c93b:	fmul   QWORD PTR ds:0xed9107c8
  41c941:	mov    ecx,0xab3852ba
  41c946:	adc    DWORD PTR [eax],edi
  41c948:	mov    ah,0x62
  41c94a:	jg     0x41c90c
  41c94c:	dec    esi
  41c94d:	pop    ebx
  41c94e:	sbb    eax,DWORD PTR [esi]
  41c950:	xlat   BYTE PTR ds:[ebx]
  41c951:	pop    eax
  41c952:	mov    ebx,0x638ee76f
  41c957:	dec    ebx
  41c958:	mov    ah,BYTE PTR [esi]
  41c95a:	jl     0x41c93b
  41c95c:	icebp  
  41c95d:	lea    esp,[ebp-0x29]
  41c960:	test   DWORD PTR [eax-0x14ac5b64],ebx
  41c966:	push   edx
  41c967:	sub    eax,0x46a9fd2c
  41c96c:	retf   
  41c96d:	dec    esp
  41c96e:	mov    dl,0x57
  41c970:	(bad)  [ebp-0x60bee998]
  41c976:	jo     0x41c949
  41c978:	xchg   DWORD PTR [eax+0x15],ebx
  41c97b:	les    edx,FWORD PTR [eax-0x34]
  41c97e:	nop
  41c97f:	pushf  
  41c980:	adc    ebx,DWORD PTR [ebx+0x1a]
  41c983:	and    eax,0xb0592fab
  41c988:	retf   0xccbc
  41c98b:	inc    edi
  41c98c:	sub    bh,cl
  41c98e:	push   edi
  41c98f:	nop
  41c990:	mov    ds:0x38ed6444,eax
  41c995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c996:	xor    al,0x78
  41c998:	and    DWORD PTR [ecx+ecx*1-0x68af235e],0x8
  41c9a0:	jl     0x41c942
  41c9a2:	jo     0x41ca0c
  41c9a4:	lods   eax,DWORD PTR ds:[esi]
  41c9a5:	and    al,dl
  41c9a7:	mov    bl,0x3d
  41c9a9:	shl    BYTE PTR [eax+ecx*8-0x42b4f88],0xd
  41c9b1:	push   0xffffffe2
  41c9b3:	call   0xbec0c11c
  41c9b8:	or     DWORD PTR [edi+ecx*8],0xde1e988d
  41c9bf:	sahf   
  41c9c0:	pusha  
  41c9c1:	scas   al,BYTE PTR es:[edi]
  41c9c2:	and    bl,ch
  41c9c4:	mov    dl,0x37
  41c9c6:	push   0xf47c37a
  41c9cb:	dec    esi
  41c9cc:	fistp  DWORD PTR [eax]
  41c9ce:	pop    esi
  41c9cf:	xlat   BYTE PTR ds:[ebx]
  41c9d0:	sbb    dh,0xeb
  41c9d3:	mov    dh,ch
  41c9d5:	push   esi
  41c9d6:	cld    
  41c9d7:	std    
  41c9d8:	add    edx,0xa
  41c9db:	(bad)  
  41c9dc:	xlat   BYTE PTR ds:[ebx]
  41c9dd:	(bad)  
  41c9de:	sbb    bh,BYTE PTR [ebp-0x4bf5f1dc]
  41c9e4:	and    al,0xdb
  41c9e6:	mov    eax,0xd8c9fa40
  41c9eb:	test   BYTE PTR [ebx],dl
  41c9ed:	fnstcw WORD PTR [ebp-0x1d]
  41c9f0:	ins    BYTE PTR es:[edi],dx
  41c9f1:	and    esp,0xd8f834c7
  41c9f7:	push   ebp
  41c9f8:	or     BYTE PTR fs:[eax],dl
  41c9fb:	jo     0x41ca11
  41c9fd:	or     al,0x7c
  41c9ff:	and    BYTE PTR [eax],ch
  41ca01:	dec    eax
  41ca02:	sub    al,0x34
  41ca04:	and    DWORD PTR [eax+0x3c],ebx
  41ca07:	mov    esp,0xb4245924
  41ca0c:	fcom   DWORD PTR [edi-0x5c]
  41ca0f:	push   0x48
  41ca11:	or     BYTE PTR [ecx-0x50],bh
  41ca14:	ja     0x41ca2e
  41ca16:	loopne 0x41ca1c
  41ca18:	loopne 0x41ca06
  41ca1a:	adc    BYTE PTR [esi-0x37df0310],bh
  41ca20:	enter  0xdc2c,0xd4
  41ca24:	cmp    ah,cl
  41ca26:	mov    al,ds:0xb0bce244
  41ca2b:	push   esp
  41ca2c:	lods   al,BYTE PTR ds:[esi]
  41ca2d:	mov    esp,0x6c889060
  41ca32:	mov    BYTE PTR [esp+edi*8+0xce8fc0a],dl
  41ca39:	in     al,dx
  41ca3a:	hlt    
  41ca3b:	sbb    al,ah
  41ca3d:	lods   eax,DWORD PTR ds:[esi]
  41ca3e:	and    BYTE PTR [ebp+0x382b706d],ah
  41ca44:	aas    
  41ca45:	mov    al,0x47
  41ca47:	mov    al,0xe9
  41ca49:	jno    0x41c9f6
  41ca4b:	or     eax,0x83c7edd
  41ca50:	ins    BYTE PTR es:[edi],dx
  41ca51:	adc    al,0x14
  41ca53:	js     0x41ca59
  41ca55:	mov    eax,ds:0x984ccd86
  41ca5a:	retf   0x55c7
  41ca5d:	out    0xb8,eax
  41ca5f:	or     eax,0x3395d24
  41ca64:	jecxz  0x41cac1
  41ca66:	ins    BYTE PTR es:[edi],dx
  41ca67:	dec    esi
  41ca68:	xor    DWORD PTR [esi],ecx
  41ca6a:	jno    0x41caea
  41ca6c:	mov    al,ds:0xfd690d45
  41ca71:	add    BYTE PTR [eax],bh
  41ca73:	dec    ebp
  41ca74:	jl     0x41ca7f
  41ca76:	hlt    
  41ca77:	mov    ch,0x6c
  41ca79:	lock test al,0xb8
  41ca7c:	mov    cl,0xc3
  41ca7e:	cwde   
  41ca7f:	mov    eax,ds:0x5f8474d
  41ca84:	in     al,0x51
  41ca86:	nop
  41ca87:	or     BYTE PTR [ebp-0x4268ad47],0x48
  41ca8e:	inc    ecx
  41ca8f:	cld    
  41ca90:	xor    al,0x79
  41ca92:	sbb    al,0x89
  41ca94:	push   ecx
  41ca95:	in     eax,dx
  41ca96:	mov    esi,0xb7aaf769
  41ca9b:	rcl    DWORD PTR [esi-0x6b5e33b8],0xbc
  41caa2:	in     eax,0x41
  41caa4:	rcr    DWORD PTR [eax+0x3c],0x31
  41caa8:	hlt    
  41caa9:	fcomp  st(5)
  41caab:	fadd   QWORD PTR [eax+ebp*8+0x7f3ef066]
  41cab2:	mov    ds:0x93cb0055,eax
  41cab7:	pop    ss
  41cab8:	jb     0x41cb2c
  41caba:	add    al,BYTE PTR [ebx+0x6970e47]
  41cac0:	lock mov bh,0x71
  41cac3:	int    0xfc
  41cac5:	into   
  41cac6:	jge    0x41cb2b
  41cac8:	ret    0x7032
  41cacb:	out    0xba,al
  41cacd:	hlt    
  41cace:	js     0x41cb3c
  41cad0:	cli    
  41cad1:	ins    BYTE PTR es:[edi],dx
  41cad2:	ja     0x41cada
  41cad4:	idiv   DWORD PTR [ebx]
	...
  41cade:	add    BYTE PTR [eax],al
  41cae0:	gs sbb al,0x88
  41cae3:	push   ebp
  41cae4:	ret    0x6
  41cae7:	add    BYTE PTR [eax],al
  41cae9:	add    BYTE PTR [eax],al
  41caeb:	add    dl,al
  41caed:	push   es
  41caee:	add    BYTE PTR [eax],al
  41caf0:	sbb    al,BYTE PTR [eax]
  41caf2:	es jl  0x41caf5
  41caf5:	add    dh,BYTE PTR [esi]
  41caf7:	or     BYTE PTR [eax],al
  41caf9:	add    BYTE PTR [ebp+0x4a],dl
  41cafc:	add    BYTE PTR [esi],al
  41cafe:	or     BYTE PTR [ebx+0x12],0x9e
  41cb02:	pop    esi
  41cb03:	sbb    eax,0x2cc126e1
  41cb08:	mov    al,0x35
  41cb0a:	mov    ebx,0xa7c743d2
  41cb0f:	dec    esp
  41cb10:	push   ebx
  41cb11:	xlat   BYTE PTR ds:[ebx]
  41cb12:	mov    eax,ds:0x3ee66f54
  41cb17:	xchg   ebx,eax
  41cb18:	jo     0x41caa5
  41cb1a:	xchg   DWORD PTR [ecx+0x73742173],eax
  41cb20:	mov    ah,0x94
  41cb22:	or     eax,0x2c68fd40
  41cb27:	mov    ebp,0xd096387d
  41cb2c:	inc    esp
  41cb2d:	push   eax
  41cb2e:	aam    0x50
  41cb30:	pop    eax
  41cb31:	clc    
  41cb32:	pop    esp
  41cb33:	ins    BYTE PTR es:[edi],dx
  41cb34:	int3   
  41cb35:	push   0x78c4da60
  41cb3a:	jo     0x41cb74
  41cb3c:	test   BYTE PTR [esp+ecx*2-0x63b46d70],al
  41cb43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb45:	and    ebp,eax
  41cb47:	ds test al,0x31
  41cb4a:	clc    
  41cb4b:	dec    edi
  41cb4c:	fcomp  DWORD PTR [ecx]
  41cb4e:	push   eax
  41cb4f:	pop    edx
  41cb50:	inc    eax
  41cb51:	pop    esp
  41cb52:	outs   dx,BYTE PTR ds:[esi]
  41cb53:	jl     0x41cbbd
  41cb55:	bound  esp,QWORD PTR [esp+esi*2+0x76]
  41cb59:	push   0x9c8684d5
  41cb5e:	nop
  41cb5f:	call   0xa2a8:0xa8ae9c88
  41cb66:	mov    esp,0xc8b2b8e1
  41cb6b:	(bad)  
  41cb6c:	mov    ah,0xd0
  41cb6f:	fcmovu st,st(4)
  41cb71:	fsub   st(6),st
  41cb73:	loopne 0x41cb6d
  41cb75:	popa   
  41cb76:	jo     0x41cb6d
  41cb78:	jl     0x41cafa
  41cb7a:	test   BYTE PTR [ebx+0x6036937c],cl
  41cb80:	cwde   
  41cb81:	int3   
  41cb82:	das    
  41cb83:	push   edi
  41cb84:	inc    eax
  41cb85:	mov    al,0xb1
  41cb87:	dec    esp
  41cb88:	mov    esp,0x16cce4c3
  41cb8d:	nop
  41cb8e:	aam    0xc0
  41cb90:	fsubr  st(3),st
  41cb92:	outs   dx,DWORD PTR ds:[esi]
  41cb93:	lods   eax,DWORD PTR ds:[esi]
  41cb94:	in     al,dx
  41cb95:	clc    
  41cb96:	stos   BYTE PTR es:[edi],al
  41cb97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb98:	xor    eax,0x4a8294c3
  41cb9d:	pusha  
  41cb9e:	pop    ss
  41cb9f:	nop
  41cba0:	out    0xa7,eax
  41cba2:	lods   al,BYTE PTR ds:[esi]
  41cba3:	mov    eax,ds:0xb3bb27b0
  41cba8:	dec    edx
  41cba9:	mov    edx,0xdf15cd8e
  41cbae:	sti    
  41cbaf:	fcomip st,st(3)
  41cbb1:	in     al,0x31
  41cbb3:	in     al,dx
  41cbb4:	es lock loope 0x41cbe8
  41cbb8:	add    DWORD PTR [edi],ecx
  41cbba:	or     BYTE PTR [edi-0x14e3cfa4],al
  41cbc0:	loope  0x41cbe9
  41cbc2:	sub    DWORD PTR [ecx*1+0x41b61c40],ebp
  41cbc9:	dec    ebx
  41cbca:	or     eax,0x1c5cc4d1
  41cbcf:	xchg   esp,eax
  41cbd0:	stos   BYTE PTR es:[edi],al
  41cbd1:	jmp    0x41cbb7
  41cbd3:	test   DWORD PTR [ebx],ebx
  41cbd5:	std    
  41cbd6:	in     eax,dx
  41cbd7:	add    DWORD PTR [ebp-0x7b],ecx
  41cbda:	test   al,0x34
  41cbdc:	sbb    al,0x1b
  41cbde:	xchg   edi,eax
  41cbdf:	and    DWORD PTR [esi-0x35312cd8],ebx
  41cbe5:	inc    esi
  41cbe6:	aas    
  41cbe7:	nop
  41cbe8:	(bad)  
  41cbe9:	mov    eax,0x9a67af4c
  41cbee:	fbld   TBYTE PTR [ecx-0xb0f3ea0]
  41cbf4:	stc    
  41cbf5:	std    
  41cbf6:	xor    DWORD PTR [eax-0x20],0x19e85187
  41cbfd:	pushf  
  41cbfe:	cmp    al,0x16
  41cc00:	lods   al,BYTE PTR ds:[esi]
  41cc01:	enter  0x1044,0x91
  41cc05:	cmp    al,0x60
  41cc07:	inc    esp
  41cc08:	mov    bh,0x4c
  41cc0a:	and    al,0x47
  41cc0c:	pop    eax
  41cc0d:	pop    edi
  41cc0e:	pusha  
  41cc0f:	fwait
  41cc10:	call   0xb5e13e2d
  41cc15:	icebp  
  41cc16:	sar    DWORD PTR [ebx+0x9],0xbe
  41cc1a:	sar    BYTE PTR [edi+0x69a9e3dd],1
  41cc20:	shl    BYTE PTR [esi-0x39ce3ad0],cl
  41cc26:	inc    eax
  41cc27:	mov    ah,0xc8
  41cc29:	push   esp
  41cc2a:	(bad)  
  41cc2b:	pop    ds
  41cc2c:	or     ebx,ebp
  41cc2e:	mov    BYTE PTR [esi],bh
  41cc30:	in     al,0x43
  41cc32:	mov    ah,0x28
  41cc34:	js     0x41cbb6
  41cc36:	paddusw mm0,QWORD PTR [eax-0x616704ef]
  41cc3d:	stos   BYTE PTR es:[edi],al
  41cc3e:	fsub   QWORD PTR fs:[ebp-0x434689cd]
  41cc45:	dec    ebx
  41cc46:	jecxz  0x41cc90
  41cc48:	je     0x41cc09
  41cc4a:	test   eax,0x604415d7
  41cc4f:	out    0x8f,eax
  41cc51:	(bad)  
  41cc52:	jle    0x41cc50
  41cc54:	mov    DWORD PTR [eax-0x6aa973f5],ecx
  41cc5a:	xchg   edi,eax
  41cc5b:	aas    
  41cc5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc5d:	sbb    bl,0x5d
  41cc60:	mov    al,0x39
  41cc62:	inc    BYTE PTR [ebx+0x43]
  41cc65:	add    al,ch
  41cc67:	xchg   edx,eax
  41cc68:	sbb    esp,edx
  41cc6a:	sbb    esi,DWORD PTR [esi-0x6c937318]
  41cc70:	ss js  0x41ccef
  41cc73:	push   0x6f7364b0
  41cc78:	jl     0x41cc03
  41cc7a:	inc    esi
  41cc7b:	mov    al,ds:0xf027575b
  41cc80:	int3   
  41cc81:	cmp    eax,0xdec4b47c
  41cc86:	dec    edi
  41cc87:	mov    ch,0x28
  41cc89:	fsub   DWORD PTR [ebx]
  41cc8b:	xor    BYTE PTR [edi],cl
  41cc8d:	call   0xb876907d
  41cc92:	aas    
  41cc93:	mov    esp,DWORD PTR [ecx-0x20]
  41cc96:	sbb    al,0xd7
  41cc98:	frstor [eax+0x5e]
  41cc9b:	and    al,0x45
  41cc9d:	inc    esp
  41cc9e:	stos   DWORD PTR es:[edi],eax
  41cc9f:	mov    edx,0x2cc0bca8
  41cca4:	test   DWORD PTR [ebp+eax*8+0x17],ecx
  41cca8:	mov    al,0xcc
  41ccaa:	loopne 0x41cceb
  41ccac:	test   al,0xec
  41ccae:	psraw  mm2,mm4
  41ccb1:	or     eax,0xaf080440
  41ccb6:	adc    ebx,DWORD PTR fs:[ebx+0x1c]
  41ccba:	jecxz  0x41cc6b
  41ccbc:	push   cs
  41ccbd:	shl    eax,cl
  41ccbf:	push   ss
  41ccc0:	cmp    BYTE PTR [ebp-0x2c734f99],cl
  41ccc6:	ja     0x41cc6c
  41ccc8:	mov    ecx,esp
  41ccca:	in     eax,0x68
  41cccc:	in     eax,dx
  41cccd:	icebp  
  41ccce:	jo     0x41ccc8
  41ccd0:	std    
  41ccd1:	pop    ebp
  41ccd2:	inc    edx
  41ccd3:	ja     0x190de5e9
  41ccd9:	popa   
  41ccda:	and    al,0x7e
  41ccdc:	adc    eax,0x483c3460
  41cce1:	dec    edi
  41cce2:	iret   
  41cce3:	mov    ecx,0x5858a627
  41cce8:	pop    edi
  41cce9:	adc    eax,0xf8306fe0
  41ccee:	ret    
  41ccef:	cmp    al,BYTE PTR [eax]
  41ccf1:	jbe    0x41ccd7
  41ccf3:	fstp   DWORD PTR [bx+si]
  41ccf6:	sbb    edx,DWORD PTR [ecx+0x28]
  41ccf9:	add    al,0x76
  41ccfb:	pop    ss
  41ccfc:	icebp  
  41ccfd:	inc    edi
  41ccfe:	cmp    eax,0x7b4647bd
  41cd03:	ins    BYTE PTR es:[edi],dx
  41cd04:	nop
  41cd05:	or     DWORD PTR [ebx+0x78a555a3],ebx
  41cd0b:	xchg   ebx,eax
  41cd0c:	gs je  0x41cd37
  41cd0f:	mov    eax,es
  41cd11:	test   BYTE PTR [ebx-0x1a],cl
  41cd14:	xor    al,0x70
  41cd16:	push   ds
  41cd17:	add    ch,ah
  41cd19:	add    ah,BYTE PTR [ebx+ebx*8-0x40f03835]
  41cd20:	inc    esp
  41cd21:	shl    DWORD PTR [ecx],0xb4
  41cd24:	frstor ds:0x6839eb84
  41cd2a:	fs repz (bad) 
  41cd2d:	jae    0x41cd32
  41cd2f:	retf   
  41cd30:	lock popf 
  41cd32:	mov    WORD PTR [ebx],ds
  41cd34:	push   edi
  41cd35:	repnz sahf 
  41cd37:	stc    
  41cd38:	(bad)
  41cd3c:	xchg   esi,eax
  41cd3d:	cld    
  41cd3e:	inc    eax
  41cd3f:	dec    esp
  41cd40:	mov    BYTE PTR [eax+edx*4+0x56],cl
  41cd44:	sub    eax,0xad70881f
  41cd49:	mov    ah,0xf0
  41cd4b:	inc    eax
  41cd4c:	cmp    BYTE PTR [edx+ecx*4+0x1],0x77
  41cd51:	stc    
  41cd52:	nop
  41cd53:	sbb    BYTE PTR [ebx],0x54
  41cd56:	pop    edi
  41cd57:	dec    ebp
  41cd58:	cld    
  41cd59:	lods   eax,DWORD PTR ds:[esi]
  41cd5a:	mov    al,0xa0
  41cd5c:	mov    eax,0x69ec4102
  41cd61:	int    0xd1
  41cd63:	aas    
  41cd64:	lea    esp,[ebx]
  41cd66:	and    al,0x1f
  41cd68:	xor    bl,bh
  41cd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd6b:	nop
  41cd6c:	and    DWORD PTR [eax+0x1d8cd1b3],eax
  41cd72:	in     al,0x90
  41cd74:	pop    ss
  41cd75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd76:	dec    edi
  41cd77:	stc    
  41cd78:	daa    
  41cd79:	mov    al,0x77
  41cd7b:	cmp    edx,DWORD PTR [edi+ecx*8-0x50]
  41cd7f:	cli    
  41cd80:	dec    edi
  41cd81:	cmp    ah,dl
  41cd83:	fisubr WORD PTR [eax-0x163533f]
  41cd89:	sbb    BYTE PTR [edi-0x48],ch
  41cd8c:	and    edi,edi
  41cd8e:	sti    
  41cd8f:	iret   
  41cd90:	nop
  41cd91:	sbb    BYTE PTR [eax],0xfb
  41cd94:	dec    eax
  41cd95:	push   es
  41cd96:	xchg   esi,eax
  41cd97:	sub    al,0xb2
  41cd99:	pop    edi
  41cd9a:	add    DWORD PTR [edx],eax
  41cd9c:	add    eax,esp
  41cd9e:	imul   ecx,ebp,0xca33fcd1
  41cda4:	pop    esi
  41cda5:	in     eax,0xd2
  41cda7:	dec    ebp
  41cda8:	icebp  
  41cda9:	cmc    
  41cdaa:	adc    esi,esi
  41cdac:	mov    bh,BYTE PTR [edx+0x15b13689]
  41cdb2:	sbb    ebx,ebx
  41cdb4:	shr    BYTE PTR gs:[eax-0x1347cbcb],0xc3
  41cdbc:	jmp    0x5c18:0xe7308941
  41cdc3:	arpl   WORD PTR [ecx+0x70ffed08],bx
  41cdc9:	cs mov esp,0x49310405
  41cdcf:	lock popa 
  41cdd1:	pop    ds
  41cdd2:	jbe    0x41cdf7
  41cdd4:	int3   
  41cdd5:	sub    BYTE PTR [ebx],dl
  41cdd7:	ror    bl,1
  41cdd9:	mov    DWORD PTR ds:0x6c3ca005,0x5eb00457
  41cde3:	push   ss
  41cde4:	push   0xf834c3f3
  41cde9:	jne    0x41ce30
  41cdeb:	clc    
  41cdec:	mov    esi,edi
  41cdee:	sbb    BYTE PTR [eax+0x12],ah
  41cdf1:	sbb    eax,0x295c1060
  41cdf6:	mov    bl,0xcf
  41cdf8:	cmp    al,0x49
  41cdfa:	pop    ebx
  41cdfb:	inc    esp
  41cdfc:	ret    
  41cdfd:	add    esi,DWORD PTR [eax]
  41cdff:	fst    QWORD PTR ds:0x6a23e988
  41ce05:	or     al,0xb0
  41ce07:	jno    0x41ce16
  41ce09:	inc    edx
  41ce0a:	or     ecx,ebx
  41ce0c:	push   0xcc55d499
  41ce11:	out    0x63,eax
  41ce13:	dec    esp
  41ce14:	mov    al,ds:0x387925b0
  41ce19:	push   eax
  41ce1a:	push   0xd49841c3
  41ce1f:	or     edx,ebp
  41ce21:	sub    eax,0x7de740b8
  41ce26:	mov    eax,0x6837e78
  41ce2b:	mov    esi,DWORD PTR [ebp-0x1ebb2b23]
  41ce31:	mov    ecx,0x3470e52f
  41ce36:	ins    BYTE PTR es:[edi],dx
  41ce37:	mov    bh,0x40
  41ce39:	adc    edx,DWORD PTR [eax*8-0x5cafbaec]
  41ce40:	and    eax,0xad87b464
  41ce45:	pushf  
  41ce46:	cli    
  41ce47:	stos   BYTE PTR es:[edi],al
  41ce48:	jg     0x41cec5
  41ce4a:	pushf  
  41ce4b:	add    eax,0x89ea1196
  41ce50:	fs mov ah,0xb7
  41ce53:	push   ebx
  41ce54:	(bad)  
  41ce55:	mov    ah,0xdc
  41ce57:	out    dx,eax
  41ce58:	aas    
  41ce59:	xchg   ecx,eax
  41ce5a:	sub    BYTE PTR [ebp+0x605dcd3b],dl
  41ce60:	aaa    
  41ce61:	jecxz  0x41ce74
  41ce63:	test   al,0xf7
  41ce65:	add    eax,0xfc048098
  41ce6a:	test   dl,bh
  41ce6c:	xchg   esp,eax
  41ce6d:	jo     0x41ce42
  41ce6f:	push   ecx
  41ce70:	in     al,0x8d
  41ce72:	jmp    0xd5e5:0x37be7673
  41ce79:	inc    ebx
  41ce7a:	mov    DWORD PTR [ebp+0x6bdcdec6],esi
  41ce80:	mov    eax,ds:0x90b76538
  41ce85:	retf   
  41ce86:	cmp    al,0x58
  41ce88:	pusha  
  41ce89:	mov    ebx,0x1ada347a
  41ce8e:	loopne 0x41ceb8
  41ce90:	add    dl,BYTE PTR [edx+0x77287e13]
  41ce96:	rcl    DWORD PTR [eax+0xf],0xcd
  41ce9a:	das    
  41ce9b:	loope  0x41cef6
  41ce9d:	fucom  st(3)
  41ce9f:	shr    ecx,0xec
  41cea2:	mov    edi,0x88907fb
  41cea7:	sti    
  41cea8:	fcom   DWORD PTR [ebp+0x75]
  41ceab:	xor    al,0x19
  41cead:	sbb    DWORD PTR [eax+0x6b],esp
  41ceb0:	jne    0x41cf25
  41ceb2:	xor    eax,0x95c45ef8
  41ceb7:	fcomp  DWORD PTR [edi+0x5ded5f86]
  41cebd:	in     al,0xb3
  41cebf:	pop    ss
  41cec0:	fnstenv [esp+ebx*2-0x5d]
  41cec4:	fadd   QWORD PTR [esi]
  41cec6:	shl    bh,cl
  41cec8:	cmp    DWORD PTR [esp+esi*8-0x354e3e8],esi
  41cecf:	mov    eax,ds:0xeecbcc71
  41ced4:	mov    bh,0x0
  41ced6:	mov    ah,0x73
  41ced8:	mov    edi,0xc15d5a5f
  41cedd:	mov    dl,BYTE PTR [esi]
  41cedf:	in     al,dx
  41cee0:	fisttp DWORD PTR [edi]
  41cee2:	jne    0x41ce9f
  41cee4:	add    al,0x87
  41cee6:	lock or BYTE PTR [eax+0x66],dl
  41ceea:	ins    DWORD PTR es:[edi],dx
  41ceeb:	dec    edi
  41ceec:	enter  0x23b9,0xc
  41cef0:	xor    ch,ah
  41cef2:	cmp    esp,ebx
  41cef4:	inc    ecx
  41cef5:	sbb    eax,0x1c239473
  41cefa:	loopne 0x41cf58
  41cefc:	push   0x706c686c
  41cf01:	jne    0x41cf7d
  41cf03:	test   edi,0x2fd30c0b
  41cf09:	fld    TBYTE PTR [esi+0x2f]
  41cf0c:	je     0x41cee5
  41cf0e:	pop    ecx
  41cf0f:	sub    al,cl
  41cf11:	rol    BYTE PTR [edx],1
  41cf13:	loope  0x41cf80
  41cf15:	or     BYTE PTR [edx+0x25],al
  41cf18:	inc    edx
  41cf19:	aad    0x8
  41cf1b:	and    esi,DWORD PTR [eax+ecx*8+0x6e]
  41cf1f:	dec    esi
  41cf20:	(bad)  
  41cf21:	jp     0x41cf77
  41cf23:	and    al,0x86
  41cf25:	cld    
  41cf26:	mov    WORD PTR [edi-0xf6198ab],?
  41cf2c:	sub    DWORD PTR [eax],ebx
  41cf2e:	mov    BYTE PTR [ebx],ah
  41cf30:	mov    esp,0x84bc261
  41cf35:	es ins DWORD PTR es:[edi],dx
  41cf37:	cmc    
  41cf38:	pop    ecx
  41cf39:	mov    ds:0x6a68edb7,eax
  41cf3e:	repz mov dl,0x7c
  41cf41:	sub    bh,BYTE PTR [edi+0x53]
  41cf44:	sub    ebx,DWORD PTR [ebp-0x6b227aee]
  41cf4a:	dec    ebx
  41cf4b:	inc    esp
  41cf4c:	(bad)  
  41cf4d:	repz out dx,al
  41cf4f:	out    dx,eax
  41cf50:	mov    edx,0x9ed26075
  41cf55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf56:	push   eax
  41cf57:	xor    bh,BYTE PTR [eax+ecx*4-0x5a]
  41cf5b:	cld    
  41cf5c:	int    0x58
  41cf5e:	sub    eax,0x6cd68cf3
  41cf63:	(bad)  
  41cf64:	push   cs
  41cf65:	xchg   ebp,eax
  41cf66:	xchg   esp,eax
  41cf67:	sbb    eax,0xc2a1d56a
  41cf6c:	mov    ah,0xe8
  41cf6e:	jmp    0xffc8:0xe2437fb8
  41cf75:	adc    BYTE PTR [edx-0x1775b3e5],cl
  41cf7b:	sub    BYTE PTR [ecx+esi*1+0x246851af],0xbb
  41cf83:	pushf  
  41cf84:	pop    esp
  41cf85:	dec    edi
  41cf86:	addr16 arpl dx,ax
  41cf89:	aam    0xdd
  41cf8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf8c:	pop    eax
  41cf8d:	adc    eax,0x4d998959
  41cf92:	lea    ebp,[eax]
  41cf94:	cmc    
  41cf95:	jecxz  0x41cf68
  41cf97:	jge    0x41cf95
  41cf99:	hlt    
  41cf9a:	lods   eax,DWORD PTR ds:[esi]
  41cf9b:	or     BYTE PTR [eax],bl
  41cf9d:	xor    eax,edi
  41cf9f:	stc    
  41cfa0:	ret    
  41cfa1:	in     al,dx
  41cfa2:	mov    ds:0x5c11301b,eax
  41cfa7:	xor    eax,0xb01bad40
  41cfac:	mov    al,0x4f
  41cfae:	fs fnsetpm(287 only) 
  41cfb1:	or     BYTE PTR [ebx],bh
  41cfb3:	or     BYTE PTR [ebp-0x4d380270],cl
  41cfb9:	mov    edi,0x70bc36c
  41cfbe:	dec    ebx
  41cfbf:	sar    dh,1
  41cfc1:	dec    edx
  41cfc2:	push   0x9b911065
  41cfc7:	inc    ecx
  41cfc8:	and    eax,0xb734ebab
  41cfcd:	(bad)  
  41cfce:	pop    esp
  41cfcf:	push   0x8a8fae36
  41cfd4:	ss inc edi
  41cfd6:	mov    ds:0xf8eca5d0,al
  41cfdb:	dec    esp
  41cfdc:	mov    ch,0xa6
  41cfde:	add    BYTE PTR [esi+ebp*2],al
  41cfe1:	xor    eax,0x186c1518
  41cfe6:	add    dl,BYTE PTR [ecx+ebp*2]
  41cfe9:	adc    BYTE PTR [ebx],dh
  41cfeb:	cmc    
  41cfec:	sub    BYTE PTR [ebp-0x12f2eb88],bh
  41cff2:	int3   
  41cff3:	addr16 mov ah,ch
  41cff6:	bound  ebp,QWORD PTR [edi-0x38]
  41cff9:	aaa    
  41cffa:	push   ss
  41cffb:	dec    ebp
  41cffc:	mov    ah,0x18
  41cffe:	or     ebx,DWORD PTR [esp+edi*1+0x41da9fd2]
  41d005:	dec    ecx
  41d006:	sub    al,0xce
  41d008:	push   eax
  41d009:	js     0x41d013
  41d00b:	cmp    BYTE PTR [edi],bh
  41d00d:	mov    BYTE PTR [ebx-0x1],cl
  41d010:	or     eax,0x5c0e0744
  41d015:	outs   dx,DWORD PTR ds:[esi]
  41d016:	rcr    DWORD PTR [ecx],cl
  41d018:	push   0x43
  41d01a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d01b:	das    
  41d01c:	icebp  
  41d01d:	add    al,0x80
  41d020:	xchg   esp,eax
  41d021:	adc    eax,0xaf87ec62
  41d026:	sub    BYTE PTR [ecx+0x3c],dl
  41d029:	mov    edi,0xbd7b3070
  41d02e:	cmp    cl,BYTE PTR [ecx+ebx*2-0x21]
  41d032:	add    BYTE PTR [ebx+eiz*2-0x43],dl
  41d036:	push   ebx
  41d037:	xchg   edi,eax
  41d038:	jo     0x41d040
  41d03a:	jb     0x41d07a
  41d03c:	add    eax,DWORD PTR [eax+eiz*4-0x49]
  41d040:	inc    esi
  41d041:	mov    dl,ch
  41d043:	je     0x41cfc7
  41d045:	and    DWORD PTR [edx-0x5b],0x53
  41d049:	mov    ebp,0xc6a842d2
  41d04e:	sub    al,0x70
  41d050:	ja     0x41d082
  41d052:	in     al,dx
  41d053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d054:	and    al,0x68
  41d056:	or     BYTE PTR [edx-0x2b],dh
  41d059:	mov    ecx,0x6407d0d6
  41d05e:	test   bl,al
  41d060:	ret    0xcb98
  41d063:	add    DWORD PTR [eax-0x7a4f11a8],esp
  41d069:	std    
  41d06a:	mov    esp,0x9c0df738
  41d06f:	pop    ebp
  41d070:	xchg   ecx,eax
  41d071:	sub    BYTE PTR [eax-0x1056b806],bh
  41d077:	jns    0x41d053
  41d079:	jmp    0x8d22561f
  41d07e:	nop
  41d07f:	test   al,bl
  41d081:	pushf  
  41d082:	dec    eax
  41d083:	mov    cs,WORD PTR [eax-0x438fcc72]
  41d089:	jmp    0x2cdece4e
  41d08e:	ret    0xb9f9
  41d091:	fidiv  WORD PTR [eax-0xa431439]
  41d097:	(bad)  
  41d098:	sti    
  41d099:	hlt    
  41d09a:	and    BYTE PTR [edi],al
  41d09c:	xor    al,BYTE PTR [edi+0x20d93050]
  41d0a2:	dec    esp
  41d0a3:	mov    bh,0x5b
  41d0a5:	pusha  
  41d0a6:	aaa    
  41d0a7:	pop    eax
  41d0a8:	mov    ebp,0x4788e864
  41d0ad:	popf   
  41d0ae:	and    al,0xbc
  41d0b0:	push   ebp
  41d0b1:	in     eax,dx
  41d0b2:	and    eax,0x74f9b5e0
  41d0b7:	jmp    0xfc49:0x2884e577
  41d0be:	lahf   
  41d0bf:	adc    ah,cl
  41d0c1:	adc    esi,esi
  41d0c3:	test   eax,0xf888f015
  41d0c8:	push   ds
  41d0c9:	pop    edi
  41d0ca:	loopne 0x41d13b
  41d0cc:	pop    esp
  41d0cd:	out    0x18,eax
  41d0cf:	int3   
  41d0d0:	out    0x85,al
  41d0d2:	jmp    FWORD PTR [edi+0x1c]
  41d0d5:	rcr    BYTE PTR [edx-0x18],1
  41d0d8:	sub    al,0x37
  41d0da:	int    0xac
  41d0dc:	imul   edx,DWORD PTR [eax+ecx*1],0x4f
  41d0e0:	and    BYTE PTR [ebp+0x38b869a3],0x6e
  41d0e7:	imul   eax,DWORD PTR [eax+0x7e],0xffffffa0
  41d0eb:	mov    esp,0x3c64f582
  41d0f0:	mov    WORD PTR [ebx+ebp*8+0x51],fs
  41d0f4:	ins    BYTE PTR es:[edi],dx
  41d0f5:	js     0x41d093
  41d0f7:	add    BYTE PTR [ecx+0x69654ce0],al
  41d0fd:	jo     0x41d157
  41d0ff:	sub    eax,0x6819a865
  41d104:	xor    eax,0x9ccb09b8
  41d109:	int    0x97
  41d10b:	pop    edi
  41d10c:	ror    BYTE PTR [eax-0x33],1
  41d10f:	loopne 0x41d15a
  41d111:	jecxz  0x41d164
  41d113:	enter  0x2734,0x14
  41d117:	mov    eax,0xc38c8bc4
  41d11c:	imul   ecx,ebx,0xffffffa5
  41d11f:	in     al,0x27
  41d121:	test   al,0xca
  41d123:	xor    DWORD PTR [ecx+0x7205757c],edi
  41d129:	sbb    al,0xaf
  41d12b:	xor    BYTE PTR [eax],0x74
  41d12e:	lds    esp,FWORD PTR [ebp+0x6b]
  41d131:	iret   
  41d132:	icebp  
  41d133:	jl     0x41d0bc
  41d135:	stos   DWORD PTR es:[edi],eax
  41d136:	popa   
  41d137:	test   DWORD PTR [esi+ebp*2+0x7a04c691],ebx
  41d13e:	mov    eax,ds:0xb14da45c
  41d143:	adc    al,0x5d
  41d145:	mov    ebp,0x70e48ee7
  41d14a:	push   ebp
  41d14b:	mov    eax,0x880c7042
  41d150:	ins    DWORD PTR es:[edi],dx
  41d151:	jae    0x41d16a
  41d153:	jp     0x41d18f
  41d155:	and    al,0x25
  41d157:	pop    ds
  41d158:	or     eax,0x74d51f90
  41d15d:	jecxz  0x41d128
  41d15f:	xchg   ebx,eax
  41d160:	mov    WORD PTR [ecx-0x40],?
  41d163:	inc    DWORD PTR [ebp-0x47325a33]
  41d169:	out    dx,eax
  41d16a:	jecxz  0x41d164
  41d16c:	fsub   st,st(0)
  41d16e:	mov    ecx,DWORD PTR [ecx+0x73]
  41d171:	mov    eax,ds
  41d173:	adc    DWORD PTR [eax-0x30],esp
  41d176:	cld    
  41d177:	mov    al,ds:0xe8431180
  41d17c:	mov    BYTE PTR [ebp-0x60],ah
  41d17f:	fsubr  DWORD PTR [ecx+0x1cf1b839]
  41d185:	xchg   ebp,eax
  41d186:	mov    ds:0x28995dc0,al
  41d18b:	pushf  
  41d18c:	mov    cl,0x8e
  41d18e:	jmp    0xd868e14f
  41d193:	std    
  41d194:	push   es
  41d195:	add    al,0xfe
  41d197:	dec    ecx
  41d198:	call   0x25ebbb36
  41d19d:	in     eax,0xac
  41d19f:	mov    al,ds:0xc09cb8b4
  41d1a4:	das    
  41d1a5:	sti    
  41d1a6:	ins    DWORD PTR es:[edi],dx
  41d1a7:	shl    DWORD PTR [eax+edx*8-0x1b],1
  41d1ab:	aas    
  41d1ac:	add    BYTE PTR [eax],al
  41d1ae:	add    BYTE PTR [eax],al
  41d1b0:	adc    DWORD PTR [edi],0xffffffe2
  41d1b3:	inc    esi
  41d1b4:	loopne 0x41d1bc
  41d1b6:	add    BYTE PTR [eax],al
  41d1b8:	add    BYTE PTR [eax],al
  41d1ba:	add    BYTE PTR [eax],al
  41d1bc:	loopne 0x41d1c4
  41d1be:	add    BYTE PTR [eax],al
  41d1c0:	sbb    eax,DWORD PTR [eax]
  41d1c2:	es jl  0x41d1c5
  41d1c5:	add    dh,BYTE PTR [esi]
  41d1c7:	or     BYTE PTR [eax],al
  41d1c9:	add    BYTE PTR [ebx],dh
  41d1cb:	dec    edx
  41d1cc:	add    BYTE PTR [ebx+esi*1],al
  41d1cf:	dec    ecx
  41d1d0:	clc    
  41d1d1:	pusha  
  41d1d2:	xor    DWORD PTR [edi+ebx*8+0x24],ecx
  41d1d6:	(bad)  
  41d1d7:	test   eax,0xc31a40f0
  41d1dc:	nop
  41d1dd:	int    0x4c
  41d1df:	or     DWORD PTR [esp+edx*2-0x3b3ebae8],edi
  41d1e6:	outs   dx,DWORD PTR ds:[esi]
  41d1e7:	das    
  41d1e8:	cmc    
  41d1e9:	jbe    0x41d19b
  41d1eb:	jae    0x41d170
  41d1ed:	dec    esp
  41d1ee:	xor    BYTE PTR [ebx-0x1b],0x78
  41d1f2:	call   0x34a8:0x19d73cec
  41d1f9:	pop    esp
  41d1fa:	ds or  al,0x54
  41d1fd:	mov    bh,0x39
  41d1ff:	jno    0x41d255
  41d201:	push   eax
  41d202:	mov    eax,0x6e88119f
  41d207:	dec    eax
  41d208:	lahf   
  41d209:	jp     0x41d287
  41d20b:	mov    bl,0x44
  41d20d:	add    eax,ecx
  41d20f:	ins    BYTE PTR es:[edi],dx
  41d210:	retf   
  41d211:	(bad)  
  41d212:	scas   eax,DWORD PTR es:[edi]
  41d213:	mov    al,ds:0xc44f369
  41d218:	ja     0x41d261
  41d21a:	inc    ebx
  41d21b:	or     esp,eax
  41d21d:	(bad)  
  41d21e:	fld    TBYTE PTR [ebx+0x328cd70d]
  41d224:	jecxz  0x41d292
  41d226:	add    eax,0x76f92f7c
  41d22b:	lock pop DWORD PTR [edi]
  41d22e:	nop
  41d22f:	jmp    0xd1a0ebc8
  41d234:	mov    ebp,0x6fb45044
  41d239:	inc    ebx
  41d23a:	aas    
  41d23b:	scas   al,BYTE PTR es:[edi]
  41d23c:	ficom  WORD PTR [edx+0x34dce459]
  41d242:	fs in  al,0xfa
  41d245:	addr16 mov dl,0x27
  41d248:	and    bl,ch
  41d24a:	test   BYTE PTR [ebx+0x7],cl
  41d24d:	fld    QWORD PTR [ebp+ebx*1-0x575c2aab]
  41d254:	lahf   
  41d255:	jo     0x41d229
  41d257:	xor    DWORD PTR [edx-0x33bce6d5],edi
  41d25d:	push   es
  41d25e:	mov    dl,0x5b
  41d260:	out    0xe0,al
  41d262:	nop
  41d263:	out    dx,al
  41d264:	outs   dx,DWORD PTR ds:[esi]
  41d265:	lock ss cli 
  41d268:	mov    bl,0x75
  41d26a:	lock (bad) 
  41d26c:	repz fs adc al,0xff
  41d270:	mov    esi,DWORD PTR [ebp-0x59]
  41d273:	sbb    esi,DWORD PTR [ecx-0x3b03ce2e]
  41d279:	into   
  41d27a:	dec    ebx
  41d27b:	or     eax,0xa7d8b2d2
  41d280:	jecxz  0x41d2c6
  41d282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d283:	cdq    
  41d284:	push   ds
  41d285:	(bad)  
  41d286:	cmp    ah,bh
  41d288:	dec    esi
  41d289:	(bad)  
  41d28a:	or     BYTE PTR [esp+edx*1],bh
  41d28d:	cld    
  41d28e:	xchg   esi,eax
  41d28f:	sbb    eax,0xa5710671
  41d294:	cmp    BYTE PTR [edi+0x62abcd30],bh
  41d29a:	into   
  41d29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d29c:	pop    edi
  41d29d:	(bad)  
  41d29e:	aam    0xb3
  41d2a0:	in     al,0x63
  41d2a2:	mov    cl,0xe4
  41d2a4:	mov    ds:0x71db79af,al
  41d2a9:	or     BYTE PTR [edx*4+0x190c6dc6],bl
  41d2b0:	jno    0x41d2d6
  41d2b2:	sub    al,0x45
  41d2b4:	es or  edi,esp
  41d2b7:	pop    ds
  41d2b8:	sbb    dl,BYTE PTR [ebx]
  41d2ba:	adc    eax,ebx
  41d2bc:	xchg   edi,eax
  41d2bd:	fisttp QWORD PTR [esi+0x187be865]
  41d2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2c4:	(bad)  
  41d2c5:	jo     0x41d32b
  41d2c7:	repz fimul WORD PTR ds:0x9cc5ff56
  41d2ce:	cmp    BYTE PTR [esi-0x20cbd195],ah
  41d2d4:	call   0xa387dd8d
  41d2d9:	cwde   
  41d2da:	fist   DWORD PTR [esi-0x646420a8]
  41d2e0:	sbb    eax,0x5386fb74
  41d2e5:	push   esi
  41d2e6:	jno    0x41d26f
  41d2e8:	into   
  41d2e9:	adc    BYTE PTR [edx+edx*8-0x3c9ddfc5],0xe
  41d2f1:	xor    BYTE PTR [edi+0x4bb217c9],bh
  41d2f7:	inc    DWORD PTR [eax+0x56]
  41d2fa:	je     0x41d33a
  41d2fc:	aad    0x68
  41d2fe:	out    0xa8,eax
  41d300:	in     al,dx
  41d301:	jnp    0x41d2c0
  41d303:	or     al,0xfc
  41d305:	xchg   bl,cl
  41d307:	cld    
  41d308:	(bad)  
  41d309:	fndisi(8087 only) 
  41d30b:	jae    0x41d2a9
  41d30d:	mov    BYTE PTR [ebp+ebp*4-0x4c4b8661],ch
  41d314:	cmp    DWORD PTR [ebx+0x2d10c947],edi
  41d31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d31b:	mov    ds:0x6da8579f,eax
  41d320:	push   esp
  41d321:	fs js  0x41d31b
  41d324:	int    0x88
  41d326:	loop   0x41d304
  41d328:	neg    BYTE PTR ds:0x5aeafcdc
  41d32e:	lock inc ebp
  41d330:	aam    0xb4
  41d332:	mov    bl,0xbc
  41d334:	repnz sub al,0xae
  41d337:	or     al,dl
  41d339:	xchg   esi,eax
  41d33a:	pop    esp
  41d33b:	mov    eax,0x79ec8e09
  41d340:	ja     0x41d360
  41d342:	cmp    DWORD PTR [eax-0x6bf81174],ecx
  41d348:	mov    esi,0xe18b69ed
  41d34d:	sbb    BYTE PTR [ecx+eiz*2+0x59bcf04c],ah
  41d354:	(bad)  
  41d355:	dec    di
  41d357:	shl    esp,1
  41d359:	aad    0x5e
  41d35b:	xchg   ebx,eax
  41d35d:	push   0xffffff8b
  41d35f:	repnz pop edx
  41d361:	mov    ebp,0xcc485ec
  41d366:	jns    0x41d37d
  41d368:	cdq    
  41d369:	xor    DWORD PTR [edi+0x2f],edi
  41d36c:	jle    0x41d2f5
  41d36e:	pusha  
  41d36f:	xor    al,0xb7
  41d371:	or     ecx,eax
  41d373:	mov    ds:0x50d2c041,al
  41d378:	mov    cl,BYTE PTR [ecx+0x66]
  41d37b:	mov    dh,0x3c
  41d37d:	ins    DWORD PTR es:[edi],dx
  41d37e:	mov    ds:0xebdcffb7,al
  41d383:	mov    eax,0x5910134b
  41d388:	adc    BYTE PTR [ecx-0x50c9a317],bl
  41d38e:	leave  
  41d38f:	xor    al,0x3a
  41d391:	mov    esi,0xd3354bc8
  41d396:	mov    eax,ds:0xac415ccc
  41d39b:	adc    ebp,DWORD PTR [esi+0x7e3ba9f0]
  41d3a1:	add    DWORD PTR [eax],esp
  41d3a3:	add    DWORD PTR [ecx],0x17f01713
  41d3a9:	loopne 0x41d3d4
  41d3ab:	out    dx,eax
  41d3ac:	sub    al,0x30
  41d3ae:	and    bh,BYTE PTR [eax]
  41d3b0:	cmp    al,0x40
  41d3b2:	lods   al,BYTE PTR ds:[esi]
  41d3b3:	out    0x99,al
  41d3b5:	scas   eax,DWORD PTR es:[edi]
  41d3b6:	les    esp,FWORD PTR [edi-0x57e85721]
  41d3bc:	fdiv   DWORD PTR [edi+0x14]
  41d3bf:	cld    
  41d3c0:	mov    DWORD PTR [eax+eax*1],eax
  41d3c3:	sbb    DWORD PTR [ebp-0x1c],0xdbe1abf0
  41d3ca:	sub    bl,dl
  41d3cc:	aas    
  41d3cd:	cmp    BYTE PTR [ebp+0x30],0xcb
  41d3d1:	or     DWORD PTR [esp+ecx*2-0x27b3fe26],edi
  41d3d8:	xor    al,0x65
  41d3da:	jne    0x41d3f5
  41d3dc:	jo     0x41d448
  41d3de:	sti    
  41d3df:	add    DWORD PTR [eax-0x6061037c],edx
  41d3e5:	cmp    BYTE PTR [ecx-0x30],dl
  41d3e8:	scas   eax,DWORD PTR es:[edi]
  41d3e9:	mov    eax,ds:0x373af0e4
  41d3ee:	mov    esp,DWORD PTR [eax]
  41d3f0:	inc    eax
  41d3f1:	or     DWORD PTR [edi+0x15],ebp
  41d3f4:	inc    esp
  41d3f5:	fxch   st(6)
  41d3f7:	popa   
  41d3f8:	sbb    eax,0x34b02c5b
  41d3fd:	clc    
  41d3fe:	add    DWORD PTR [esp+eax*4-0x38],edi
  41d402:	mov    ebx,0x1f60b4dd
  41d407:	rcl    esp,0x55
  41d40a:	call   0xc47ab233
  41d40f:	cs dec eax
  41d411:	mov    WORD PTR [esi+edi*1+0x58],es
  41d415:	mov    ah,0xfa
  41d417:	in     al,0x20
  41d419:	sub    al,0xf3
  41d41b:	mov    al,0x68
  41d41d:	and    DWORD PTR [ebx+0x48],eax
  41d420:	or     BYTE PTR [ebx+eax*8+0x2bcbce94],0xf0
  41d428:	mov    WORD PTR [ebx+edi*1-0x2b674710],?
  41d42f:	dec    edi
  41d430:	test   al,ch
  41d432:	enter  0x8a81,0xdc
  41d436:	xor    al,0x39
  41d438:	cmp    eax,0x3c9c9418
  41d43d:	or     BYTE PTR [esp+ebp*8-0x7e2b5a8d],0x9c
  41d445:	add    DWORD PTR [eax-0x4b0d53a8],esp
  41d44b:	mov    edi,DWORD PTR [eax+0x49]
  41d44e:	sub    ah,0xc4
  41d451:	enter  0x51b0,0xf9
  41d455:	mov    eax,ds:0xc0e668e0
  41d45a:	jg     0x41d3fc
  41d45c:	dec    BYTE PTR [eax]
  41d45e:	inc    esp
  41d45f:	add    edi,DWORD PTR [edi+eiz*4-0x572fe87f]
  41d466:	mov    BYTE PTR [edi],ch
  41d468:	dec    esi
  41d469:	dec    edx
  41d46a:	int3   
  41d46b:	xchg   DWORD PTR [eax],eax
  41d46d:	aam    0xfc
  41d46f:	dec    edi
  41d470:	shr    BYTE PTR [esi],1
  41d472:	es test al,0xe4
  41d475:	fistp  WORD PTR [edx]
  41d477:	call   0x8976:0xc875f4de
  41d47e:	push   esp
  41d47f:	mov    edi,0x17189f00
  41d484:	test   eax,0x4baf246c
  41d489:	mov    esp,0x4b1e0bc
  41d48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d48f:	rcl    ebp,1
  41d491:	fcom   st(2)
  41d493:	mov    ds:0xd20428ec,eax
  41d498:	repnz clc 
  41d49a:	cld    
  41d49b:	mov    ecx,0x130e0ac4
  41d4a0:	xchg   esi,eax
  41d4a1:	sub    al,0x1c
  41d4a3:	and    ecx,edi
  41d4a5:	cwde   
  41d4a6:	dec    eax
  41d4a7:	mov    edi,0x6829b931
  41d4ac:	(bad)  
  41d4ad:	mov    WORD PTR [eax+edx*1-0x38],ss
  41d4b1:	fwait
  41d4b2:	pusha  
  41d4b3:	icebp  
  41d4b4:	in     al,dx
  41d4b5:	sbb    edx,esp
  41d4b7:	mov    ch,0xfc
  41d4b9:	mov    esp,0xcdb00406
  41d4be:	sbb    DWORD PTR [eax+0x2b],esp
  41d4c1:	sbb    eax,0xa7203fe0
  41d4c6:	js     0x41d504
  41d4c8:	or     esi,esp
  41d4ca:	test   al,0x4c
  41d4cc:	fimul  DWORD PTR [edi+ebp*4+0x78346c94]
  41d4d3:	fwait
  41d4d4:	sbb    BYTE PTR [esp+edi*2-0x75],ch
  41d4d8:	or     BYTE PTR [edi+edi*2-0xc],ch
  41d4dc:	sbb    al,bh
  41d4de:	es es push ds
  41d4e1:	adc    eax,0x38ee7528
  41d4e6:	mov    ah,0x9
  41d4e8:	mov    ch,0x42
  41d4ea:	pusha  
  41d4eb:	lock dec edi
  41d4ed:	push   eax
  41d4ee:	pop    ecx
  41d4ef:	fwait
  41d4f0:	or     eax,esp
  41d4f2:	jne    0x41d554
  41d4f4:	out    0x70,eax
  41d4f6:	pop    ebp
  41d4f7:	xchg   DWORD PTR ds:0x94f97b9c,ecx
  41d4fd:	outs   dx,DWORD PTR ds:[esi]
  41d4fe:	test   cl,ch
  41d500:	mov    ah,0x48
  41d502:	mov    cl,0xac
  41d504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d505:	idiv   BYTE PTR [esp+edi*1]
  41d508:	inc    eax
  41d509:	adc    DWORD PTR [esi],ebx
  41d50b:	sbb    eax,DWORD PTR [ebx]
  41d50d:	fbstp  TBYTE PTR [edx+0x5b64a06f]
  41d513:	mov    bh,0x43
  41d515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d516:	dec    ebx
  41d517:	mov    dh,BYTE PTR [ebx+0x4173807b]
  41d51d:	iret   
  41d51e:	(bad)  
  41d520:	dec    edx
  41d521:	das    
  41d522:	pop    ecx
  41d523:	daa    
  41d524:	shl    BYTE PTR [ebp-0x2e],1
  41d527:	mov    ebp,0xef48bb28
  41d52c:	xchg   edx,eax
  41d52d:	rcl    DWORD PTR [ebp-0x6c905baf],cl
  41d533:	(bad)  
  41d534:	xchg   edx,eax
  41d535:	cmp    BYTE PTR ds:0x8ce2cd80,ch
  41d53b:	nop
  41d53c:	(bad)  
  41d53d:	lock sbb al,BYTE PTR [ebp-0x1c]
  41d541:	test   al,0xfd
  41d543:	pop    eax
  41d544:	mov    dl,0xe6
  41d546:	(bad)  
  41d548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d549:	stos   DWORD PTR es:[edi],eax
  41d54a:	cdq    
  41d54b:	pop    ebx
  41d54c:	mov    eax,0xb6e0d4fc
  41d551:	mov    ecx,0xecd08413
  41d556:	adc    al,0xb5
  41d558:	mov    dh,BYTE PTR [edx+0x74]
  41d55b:	lahf   
  41d55c:	nop
  41d55d:	pushf  
  41d55e:	(bad)  
  41d55f:	stos   DWORD PTR es:[edi],eax
  41d560:	inc    edi
  41d561:	ins    BYTE PTR es:[edi],dx
  41d562:	xor    ch,ah
  41d564:	jmp    0x41d59d
  41d566:	add    DWORD PTR [edi+0x28],eax
  41d569:	ret    
  41d56a:	nop
  41d56b:	popf   
  41d56c:	fisub  DWORD PTR [ebx-0x6cf57a60]
  41d572:	xor    DWORD PTR [edi+edi*8],ebx
  41d575:	mov    BYTE PTR [eax],dl
  41d577:	xor    eax,DWORD PTR [ebp+0x51534a8]
  41d57d:	jp     0x41d5ae
  41d57f:	pop    ebx
  41d580:	jp     0x41d533
  41d582:	aam    0xb8
  41d584:	std    
  41d585:	rol    BYTE PTR [ebp-0x38],1
  41d588:	in     al,dx
  41d589:	push   ecx
  41d58a:	aam    0xe8
  41d58c:	mov    DWORD PTR [ecx-0x1c],esp
  41d58f:	test   al,0x6d
  41d591:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d593:	jns    0x41d591
  41d595:	pusha  
  41d596:	test   DWORD PTR [eax],ecx
  41d598:	jl     0x41d532
  41d59a:	cdq    
  41d59b:	xchg   ecx,eax
  41d59c:	pushf  
  41d59d:	mov    al,ds:0xe0596021
  41d5a2:	je     0x41d5ec
  41d5a4:	cmp    al,0x77
  41d5a6:	iret   
  41d5a7:	mov    cl,BYTE PTR [ebp-0x10572348]
  41d5ad:	hlt    
  41d5ae:	add    ebp,edi
  41d5b0:	jge    0x41d56f
  41d5b2:	sbb    bh,bl
  41d5b4:	lea    ecx,[ebp+0x18]
  41d5b7:	or     al,0x58
  41d5b9:	popa   
  41d5ba:	out    dx,al
  41d5bb:	lahf   
  41d5bc:	ret    0x5c2b
  41d5bf:	xor    BYTE PTR [eax],dh
  41d5c1:	mov    edi,0x859b0ffa
  41d5c6:	mov    ds:0x5054244e,al
  41d5cb:	aad    0x79
  41d5cd:	jmp    0x17c3df3
  41d5d2:	js     0x41d558
  41d5d4:	xchg   eax,ebp
  41d5d6:	pcmpgtb mm2,QWORD PTR [edx]
  41d5d9:	nop
  41d5da:	add    eax,0x59606520
  41d5df:	retf   0x606f
  41d5e2:	dec    ebx
  41d5e4:	inc    esp
  41d5e5:	nop
  41d5e6:	mov    ebx,0x4c9bd78b
  41d5eb:	dec    ebx
  41d5ec:	mov    bh,0xe8
  41d5ee:	pop    edi
  41d5ef:	mov    al,0x26
  41d5f1:	repz scas eax,DWORD PTR es:[edi]
  41d5f3:	add    esp,DWORD PTR [esi-0x17]
  41d5f6:	(bad)  
  41d5f7:	adc    BYTE PTR [ebp+0x5ed5d6d9],dl
  41d5fd:	in     eax,dx
  41d5fe:	fist   DWORD PTR [ebp+0x3e]
  41d601:	cmp    eax,0x74c4d60
  41d606:	and    eax,0x35b502ac
  41d60b:	gs push 0x877e1a48
  41d611:	imul   edi,DWORD PTR [esp+esi*2-0x38],0x1837906c
  41d619:	(bad)  
  41d61a:	jecxz  0x41d600
  41d61c:	mov    BYTE PTR [edi-0x43c42b08],cl
  41d622:	enter  0x3347,0x2c
  41d626:	and    esi,DWORD PTR [edi]
  41d628:	or     dh,BYTE PTR [edi]
  41d62a:	fs jmp 0x41d67e
  41d62d:	pusha  
  41d62e:	jb     0x41d66b
  41d630:	jl     0x41d5b2
  41d632:	icebp  
  41d633:	cwde   
  41d634:	xchg   esp,eax
  41d635:	js     0x41d636
  41d637:	inc    eax
  41d638:	cmp    al,0xa5
  41d63a:	mov    edx,0x94b91940
  41d63f:	loope  0x41d615
  41d641:	aas    
  41d642:	lds    edx,FWORD PTR [ecx+0x272b0309]
  41d648:	fdivr  QWORD PTR [ecx-0x7bc89243]
  41d64e:	lock jae 0x41d694
  41d651:	scas   al,BYTE PTR es:[edi]
  41d652:	arpl   WORD PTR ds:0xd278c4c1,cx
  41d658:	xchg   ebp,eax
  41d659:	lods   eax,DWORD PTR gs:[esi]
  41d65b:	push   ebx
  41d65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d65e:	sar    ah,0xca
  41d661:	dec    edi
  41d662:	xor    BYTE PTR [esi+esi*4-0xe],ch
  41d666:	mov    dl,0xd0
  41d668:	lock mov edx,0x745ce9d1
  41d66e:	pop    edx
  41d66f:	mov    BYTE PTR ds:0xaee41057,cl
  41d675:	loop   0x41d6cf
  41d677:	sbb    al,BYTE PTR [eax]
  41d679:	mov    WORD PTR ds:0x5418b35b,es
  41d67f:	cmp    BYTE PTR [esi],dl
  41d681:	aaa    
  41d682:	xor    esi,DWORD PTR [eax]
  41d684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d685:	sub    DWORD PTR [esi],ebx
  41d687:	loopne 0x41d66d
  41d689:	arpl   WORD PTR [ebx],bp
  41d68b:	scas   eax,DWORD PTR es:[edi]
  41d68c:	stos   BYTE PTR es:[edi],al
  41d68d:	adc    ebp,eax
  41d68f:	push   ebx
  41d690:	in     al,dx
  41d691:	sbb    dl,BYTE PTR [ecx-0x3e0fefef]
  41d697:	inc    eax
  41d698:	es out dx,eax
  41d69a:	sub    al,0x3c
  41d69c:	jge    0x41d656
  41d69e:	xor    BYTE PTR [ebx-0x7c],dh
  41d6a1:	enter  0x85fe,0x55
  41d6a5:	cld    
  41d6a6:	fcmovne st,st(7)
  41d6a8:	call   0xf75749d1
  41d6ad:	inc    ecx
  41d6af:	pop    ds
  41d6b0:	shr    DWORD PTR [ebx+ebx*1-0x2b],0x41
  41d6b5:	cmc    
  41d6b6:	fiadd  DWORD PTR [esi+edx*1]
  41d6b9:	mov    dh,BYTE PTR [edx]
  41d6bb:	xor    esi,DWORD PTR ds:0xe8a04299
  41d6c1:	dec    esi
  41d6c2:	aaa    
  41d6c3:	es sub al,0x47
  41d6c6:	or     al,BYTE PTR [eax+ebp*2+0xb2ca25f]
  41d6cd:	icebp  
  41d6ce:	aas    
  41d6cf:	dec    ebp
  41d6d0:	add    BYTE PTR [eax],al
  41d6d2:	addr16 pop ss
  41d6d4:	hlt    
  41d6d5:	test   eax,0xf371224c
  41d6da:	cmp    edi,DWORD PTR [eax]
  41d6dc:	xchg   ebx,eax
  41d6dd:	or     eax,0xa1c71e48
  41d6e2:	shr    DWORD PTR [esi+0x2e651554],1
  41d6e8:	mov    ebp,?
  41d6ea:	mov    bl,BYTE PTR [eax-0x21636cf5]
  41d6f0:	out    0x98,al
  41d6f2:	cmp    eax,0x1a303c8f
  41d6f7:	scas   eax,DWORD PTR es:[edi]
  41d6f8:	or     eax,0x402b39b5
  41d6fd:	xor    BYTE PTR [edx+ebx*1-0x48],dl
  41d701:	push   eax
  41d702:	jl     0x41d74f
  41d704:	repnz mov dh,0xca
  41d707:	jmp    0x757f4910
  41d70c:	imul   ecx,DWORD PTR [ecx-0x6b72d3d6],0xffffff9a
  41d713:	popf   
  41d714:	mov    eax,ds:0x72e629a6
  41d719:	into   
  41d71a:	lds    esi,FWORD PTR [eax+eax*8-0x54a4c6bc]
  41d721:	sub    eax,0xc8cf8850
  41d726:	sub    al,bl
  41d728:	sub    eax,0x15a0bf25
  41d72d:	test   BYTE PTR [ebx*4-0x47106767],ch
  41d734:	dec    esp
  41d735:	pop    ds
  41d736:	dec    ebx
  41d737:	lock mov dh,0xf8
  41d73a:	mov    ebx,0x1623938d
  41d73f:	loopne 0x41d737
  41d741:	enter  0x228a,0x91
  41d745:	dec    ebp
  41d746:	jecxz  0x41d6cc
  41d748:	sbb    eax,0xa8a3855b
  41d74d:	int3   
  41d74e:	(bad)  
  41d74f:	jl     0x41d76e
  41d751:	imul   esp,DWORD PTR [edx-0x55],0xf4f1b1dc
  41d758:	lods   eax,DWORD PTR ds:[esi]
  41d759:	retf   0x920b
  41d75c:	and    BYTE PTR [ecx-0x6fcf2acf],bh
  41d762:	push   ebp
  41d763:	xor    eax,0xad11f68f
  41d768:	adc    BYTE PTR [eax+0x0],bl
  41d76b:	push   es
  41d76c:	sbb    DWORD PTR [eax+eiz*8],0xffffffeb
  41d770:	or     eax,0xfca0e40c
  41d775:	pop    eax
  41d776:	loopne 0x41d775
  41d778:	sbb    al,0xc1
  41d77a:	popf   
  41d77b:	push   0x543c3256
  41d780:	ss loop 0x41d75b
  41d783:	jmp    0x3fc1c997
  41d788:	pop    ss
  41d789:	retf   0x8353
  41d78c:	retf   0x7601
  41d78f:	dec    esi
  41d790:	adc    esp,DWORD PTR [ebp-0x1ea7d61b]
  41d796:	mov    bh,0xd9
  41d798:	cmp    al,0x3f
  41d79a:	or     DWORD PTR [esi],esp
  41d79c:	xlat   BYTE PTR ds:[ebx]
  41d79d:	mov    al,ds:0x40e637bd
  41d7a2:	gs ja  0x41d798
  41d7a5:	mov    ds:0x460fa97,eax
  41d7aa:	inc    esi
  41d7ab:	or     al,0x47
  41d7ad:	mov    al,0x77
  41d7af:	dec    edx
  41d7b0:	and    BYTE PTR [ebx+0x47],dh
  41d7b3:	jb     0x41d7e6
  41d7b5:	arpl   WORD PTR [edi],di
  41d7b7:	pop    esp
  41d7b8:	inc    eax
  41d7b9:	outs   dx,BYTE PTR ds:[esi]
  41d7ba:	pop    es
  41d7bb:	sub    eax,0x5390309
  41d7c0:	aas    
  41d7c1:	and    al,0x6a
  41d7c3:	add    edx,DWORD PTR [edx+0x6b599cb1]
  41d7c9:	data16 ins BYTE PTR es:[edi],dx
  41d7cb:	dec    ecx
  41d7cc:	jnp    0x41d83c
  41d7ce:	jl     0x41d849
  41d7d0:	dec    ebx
  41d7d1:	jl     0x41d825
  41d7d3:	inc    eax
  41d7d4:	xor    al,0x3b
  41d7d6:	pop    ebx
  41d7d7:	mov    eax,ds:0xbad271f
  41d7dc:	and    edi,DWORD PTR [ecx-0x43]
  41d7df:	cmp    ebx,DWORD PTR [ebx]
  41d7e1:	sbb    cl,ah
  41d7e3:	(bad)  
  41d7e4:	xchg   ebp,eax
  41d7e5:	and    esi,ecx
  41d7e7:	aas    
  41d7e8:	xchg   ebp,eax
  41d7e9:	sub    DWORD PTR [edx+ebx*8+0x2e0bfe1],ecx
  41d7f0:	popa   
  41d7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7f2:	loope  0x41d810
  41d7f4:	stc    
  41d7f5:	(bad)  
  41d7f6:	inc    esp
  41d7f7:	test   BYTE PTR ds:0x2759b95b,dl
  41d7fd:	pop    ebx
  41d7fe:	pusha  
  41d7ff:	jmp    0xc3f5422
  41d804:	push   0x6786f536
  41d809:	or     al,0xae
  41d80b:	loopne 0x41d7c9
  41d80d:	pop    ss
  41d80e:	popa   
  41d80f:	gs inc ecx
  41d811:	lods   al,BYTE PTR ds:[esi]
  41d812:	mov    dl,0xc0
  41d814:	mov    ch,0x37
  41d816:	push   edx
  41d817:	rcr    DWORD PTR [ebx-0x23],0x54
  41d81b:	cs pop eax
  41d81d:	in     eax,dx
  41d81e:	sbb    ebp,DWORD PTR [ebp+eiz*1+0x5]
  41d822:	xchg   DWORD PTR [edx-0x9],edi
  41d825:	mov    al,ds:0x99f88bbb
  41d82a:	push   ds
  41d82b:	sahf   
  41d82c:	adc    al,0xa0
  41d82e:	mov    ds:0xc1f9ebee,eax
  41d833:	dec    edi
  41d834:	in     al,0x9e
  41d836:	in     al,0x97
  41d838:	xchg   ecx,eax
  41d839:	adc    ebp,DWORD PTR [esi-0x38]
  41d83c:	mov    esp,0x5038cfe8
  41d841:	pop    edi
  41d842:	mov    dl,0x2d
  41d844:	or     eax,DWORD PTR [esi-0x73]
  41d847:	mov    BYTE PTR [esi-0x5d7475e4],al
  41d84d:	mov    al,ds:0xbcfa4469
  41d852:	lock leave 
  41d854:	xor    ecx,esp
  41d856:	xchg   ecx,eax
  41d857:	and    eax,0x34b8f4db
  41d85c:	lods   al,BYTE PTR ds:[esi]
  41d85d:	push   ss
  41d85e:	pop    ss
  41d85f:	scas   al,BYTE PTR es:[edi]
  41d860:	setne  BYTE PTR [eax]
  41d863:	xchg   esi,eax
  41d864:	push   ss
  41d865:	in     al,dx
  41d866:	inc    esi
  41d867:	dec    esp
  41d868:	adc    ecx,eax
  41d86a:	xchg   esp,eax
  41d86b:	push   esi
  41d86c:	mov    eax,ds:0xb6062ca8
  41d871:	int3   
  41d872:	lods   eax,DWORD PTR ds:[esi]
  41d873:	stos   BYTE PTR es:[edi],al
  41d874:	(bad)  
  41d875:	leave  
  41d876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d877:	(bad)
  41d87a:	pushf  
  41d87b:	mov    ah,bh
  41d87d:	mov    al,0x4
  41d87f:	(bad)  
  41d880:	cmp    bl,BYTE PTR [edx-0x3e]
  41d883:	nop
  41d884:	add    al,0x36
  41d886:	dec    esp
  41d887:	aas    
  41d888:	fdivr  DWORD PTR [ecx]
  41d88a:	cmp    edi,DWORD PTR [esi]
  41d88c:	xor    eax,eax
  41d88e:	sbb    eax,0x1465a2e0
  41d893:	or     ecx,ecx
  41d895:	pop    eax
  41d896:	lea    ebp,[ebx]
  41d898:	aas    
  41d899:	add    BYTE PTR ss:[eax],al
  41d89c:	add    BYTE PTR [eax],al
  41d89e:	add    BYTE PTR [eax],al
  41d8a0:	test   al,0x19
  41d8a2:	push   ecx
  41d8a3:	dec    ebp
  41d8a4:	sub    cl,BYTE PTR [eax]
  41d8a6:	add    BYTE PTR [eax],al
  41d8a8:	add    BYTE PTR [eax],al
  41d8aa:	add    BYTE PTR [eax],al
  41d8ac:	sub    cl,BYTE PTR [eax]
  41d8ae:	add    BYTE PTR [eax],al
  41d8b0:	sbb    al,0x0
  41d8b2:	es jl  0x41d8b5
  41d8b5:	add    dh,BYTE PTR [esi]
  41d8b7:	or     BYTE PTR [eax],al
  41d8b9:	add    ch,ch
  41d8bb:	inc    esp
  41d8bc:	add    BYTE PTR [ecx+0x0],dh
  41d8bf:	data16 adc bl,ch
  41d8c2:	sub    eax,0x6b24260c
  41d8c7:	sub    al,0xcf
  41d8c9:	and    DWORD PTR [esp+ecx*8+0x11484400],ebp
  41d8d0:	xchg   ebx,eax
  41d8d1:	ds pop edx
  41d8d3:	mov    ah,0x57
  41d8d5:	mov    bh,0x97
  41d8d7:	ins    BYTE PTR es:[edi],dx
  41d8d8:	(bad)  
  41d8d9:	sub    eax,0x484cb0bb
  41d8de:	fld    QWORD PTR [edi]
  41d8e0:	nop
  41d8e1:	js     0x41d8ae
  41d8e3:	retf   0x7d73
  41d8e6:	inc    esi
  41d8e7:	xor    BYTE PTR [esi+0x38],bl
  41d8ea:	cmp    al,0x28
  41d8ec:	lods   al,BYTE PTR ds:[esi]
  41d8ed:	mov    eax,ds:0x2dab500c
  41d8f2:	pop    esp
  41d8f3:	push   0x706d948c
  41d8f8:	je     0x41d91f
  41d8fa:	and    eax,DWORD PTR [eax+0x7507d3da]
  41d900:	leave  
  41d901:	pop    ebx
  41d902:	pop    ss
  41d903:	in     al,dx
  41d904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d905:	mov    WORD PTR [eax-0x45430ab9],gs
  41d90b:	rol    ah,0x48
  41d90e:	push   eax
  41d90f:	in     al,dx
  41d910:	pop    eax
  41d911:	jo     0x41d973
  41d913:	adc    BYTE PTR [edx-0x19],bl
  41d916:	xor    al,0x74
  41d918:	pop    esp
  41d919:	push   0xbf74cc0b
  41d91e:	pop    eax
  41d91f:	jl     0x41d8b9
  41d921:	push   ds
  41d922:	sbb    ebx,DWORD PTR [ebx+0x57]
  41d925:	stc    
  41d926:	cmp    ebx,esp
  41d928:	test   al,0xbc
  41d92a:	dec    ebx
  41d92b:	xchg   esp,eax
  41d92c:	loopne 0x41d8cc
  41d92e:	pop    ebx
  41d92f:	test   ah,bh
  41d931:	mov    fs,WORD PTR [esp+ecx*1-0x4]
  41d935:	in     al,dx
  41d936:	xor    al,0xfb
  41d938:	mov    eax,0xc888d988
  41d93d:	nop
  41d93e:	pushf  
  41d93f:	adc    ecx,eax
  41d941:	test   BYTE PTR [ecx+eiz*1-0x4451f752],dh
  41d948:	mov    esp,0xadc807e4
  41d94d:	rol    dh,1
  41d94f:	enter  0xb089,0xf4
  41d953:	adc    BYTE PTR [edx],0x98
  41d956:	add    al,0xf8
  41d958:	cwde   
  41d959:	fs sti 
  41d95b:	cmp    eax,0x1802100d
  41d960:	add    DWORD PTR [eax-0x784f11a8],esp
  41d966:	mov    eax,0x8c499078
  41d96b:	call   0xdfbd8a44
  41d970:	loope  0x41d967
  41d972:	call   0xa0c1b240
  41d977:	hlt    
  41d978:	mov    esi,DWORD PTR [eax+ecx*1+0x0]
  41d97c:	xchg   ebx,eax
  41d97d:	jmp    0x2c54:0xa71a68e7
  41d984:	adc    al,0x18
  41d986:	(bad)  
  41d987:	dec    eax
  41d988:	inc    esi
  41d989:	repz mov eax,0xaaf4d4f4
  41d98f:	int    0x69
  41d991:	fcomp  QWORD PTR [edx+0x4ff8f87b]
  41d997:	mov    DWORD PTR [eax+0x2c],ecx
  41d99a:	add    BYTE PTR [ecx-0x5ce3eba4],bl
  41d9a0:	pop    eax
  41d9a1:	fwait
  41d9a2:	sub    BYTE PTR [eax],dh
  41d9a4:	inc    ecx
  41d9a5:	das    
  41d9a6:	push   esp
  41d9a7:	inc    edx
  41d9a8:	inc    ebp
  41d9a9:	dec    eax
  41d9aa:	(bad)  
  41d9ac:	adc    bl,ch
  41d9ae:	push   esp
  41d9af:	mov    BYTE PTR ds:0xf8c9f223,ch
  41d9b5:	hlt    
  41d9b6:	pop    edi
  41d9b7:	add    al,0x0
  41d9b9:	out    0xa7,eax
  41d9bb:	adc    eax,0xad6478ae
  41d9c0:	and    eax,0xfcb7632d
  41d9c5:	and    al,0xc0
  41d9c7:	and    DWORD PTR [ebx+0x3c94635c],ecx
  41d9cd:	xlat   BYTE PTR ds:[ebx]
  41d9ce:	loop   0x41da33
  41d9d0:	jmp    0xf9b74dea
  41d9d5:	cmp    eax,0xdd0394f5
  41d9da:	pushf  
  41d9db:	pop    ds
  41d9dc:	dec    esi
  41d9dd:	pusha  
  41d9de:	sub    BYTE PTR [ecx],dl
  41d9e0:	jge    0x41da1a
  41d9e2:	inc    ecx
  41d9e3:	cmp    eax,0x48872d3e
  41d9e8:	pop    ds
  41d9e9:	add    edi,ebp
  41d9eb:	dec    eax
  41d9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ed:	and    ah,BYTE PTR [ebx+eax*4+0x6a]
  41d9f1:	jnp    0x41da63
  41d9f3:	jl     0x41da71
  41d9f5:	mov    ds:0x98c70188,al
  41d9fa:	sbb    eax,0x2da4df98
  41d9ff:	ret    
  41da00:	mov    al,ds:0xbce8e5e5
  41da05:	sbb    al,0x11
  41da07:	adc    DWORD PTR [ecx],ecx
  41da09:	setp   BYTE PTR [eax+0x60]
  41da0d:	sub    BYTE PTR [edi+0x7be8f1bc],dl
  41da13:	jl     0x41d9e6
  41da15:	or     DWORD PTR [eax],ecx
  41da17:	mov    eax,0x875094bb
  41da1c:	pusha  
  41da1d:	push   ebx
  41da1e:	js     0x41d9af
  41da20:	js     0x41da61
  41da22:	mov    eax,0x38c4e578
  41da27:	xor    ebp,DWORD PTR [edi]
  41da29:	out    dx,eax
  41da2a:	adc    ah,bl
  41da2c:	xchg   edx,eax
  41da2d:	out    dx,al
  41da2e:	out    0xb1,eax
  41da30:	sub    eax,0x8480f7ec
  41da35:	add    DWORD PTR [eax-0x634aa84c],ecx
  41da3b:	mov    al,0xa4
  41da3d:	enter  0x35ac,0xb4
  41da41:	push   ebx
  41da42:	push   ebp
  41da43:	inc    edx
  41da44:	ror    DWORD PTR [eax+0x7b],cl
  41da47:	xchg   esp,edx
  41da49:	mov    cs,WORD PTR [edi-0x18075695]
  41da4f:	cmp    DWORD PTR [eax+0x718bb1f8],eax
  41da55:	add    BYTE PTR [edi-0x5fd46b93],al
  41da5b:	in     eax,0x1b
  41da5d:	test   BYTE PTR [esi],0x94
  41da60:	xor    eax,0x42c4c0f5
  41da65:	jmp    0xc394:0xdb5230da
  41da6c:	call   0xdbc20b57
  41da71:	jg     0x41da39
  41da73:	add    eax,0x15d70c8b
  41da78:	and    bh,bl
  41da7a:	push   edx
  41da7b:	and    dl,BYTE PTR [edx]
  41da7d:	iret   
  41da7e:	jo     0x41dac3
  41da80:	cmp    al,dl
  41da82:	and    dh,dl
  41da84:	or     edx,DWORD PTR [eax-0x30]
  41da87:	sbb    ebx,ebp
  41da89:	pusha  
  41da8a:	loopne 0x41daba
  41da8c:	(bad)  
  41da8d:	adc    BYTE PTR [ecx+0x4e97ff3],al
  41da93:	or     DWORD PTR [ecx-0x3f],edi
  41da96:	daa    
  41da97:	shl    DWORD PTR [esi],1
  41da99:	rcl    BYTE PTR [eax+0x20],0x25
  41da9d:	mov    ebx,ecx
  41da9f:	cmp    BYTE PTR [edx+esi*1],bh
  41daa2:	inc    esi
  41daa3:	mov    edi,0x99df9095
  41daa8:	pop    es
  41daa9:	ds mov bh,0x25
  41daac:	ja     0x41da66
  41daae:	sti    
  41daaf:	cld    
  41dab0:	inc    ecx
  41dab1:	push   es
  41dab2:	int    0x40
  41dab4:	xor    al,0x4
  41dab6:	adc    edx,esp
  41dab8:	popa   
  41dab9:	pop    ss
  41daba:	pop    ebp
  41dabb:	cs cmp esp,esi
  41dabe:	cmp    edi,DWORD PTR [eax]
  41dac0:	mov    bh,0xa5
  41dac2:	mov    bl,BYTE PTR [eax+edx*2+0x74]
  41dac6:	or     ebp,DWORD PTR [ebx+0x2db0ef81]
  41dacc:	ja     0x41da51
  41dace:	sbb    al,0x74
  41dad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dad1:	nop
  41dad2:	mov    ecx,edi
  41dad4:	push   ss
  41dad5:	stc    
  41dad6:	pop    ds
  41dad7:	repz jg 0x41dac3
  41dada:	lods   al,BYTE PTR ds:[esi]
  41dadb:	ss retf 
  41dadd:	sbb    eax,0xc904b18c
  41dae2:	push   es
  41dae3:	inc    eax
  41dae4:	push   esp
  41dae5:	clc    
  41dae6:	loopne 0x41da73
  41dae8:	pushw  0xb0cc
  41daec:	je     0x41daea
  41daee:	mov    esp,0x4cfc2e80
  41daf3:	nop
  41daf4:	test   al,0x58
  41daf6:	pushf  
  41daf7:	and    BYTE PTR [eax+ebp*4-0x54],0x70
  41dafc:	mov    ah,0x30
  41dafe:	lods   al,BYTE PTR ds:[esi]
  41daff:	scas   al,BYTE PTR es:[edi]
  41db00:	mov    BYTE PTR [ebp+0x50],cl
  41db03:	push   esp
  41db04:	xchg   esi,eax
  41db05:	mov    cl,0x62
  41db07:	fs ret 0xb0d0
  41db0b:	je     0x41dae7
  41db0d:	mov    esp,0x8c480880
  41db12:	loop   0x41db68
  41db14:	cwde   
  41db15:	ss cld 
  41db17:	fs test al,0xe0
  41db1a:	jo     0x41dad0
  41db1c:	clc    
  41db1d:	jl     0x41dadf
  41db1f:	test   BYTE PTR [eax],0xcc
  41db22:	cli    
  41db23:	neg    BYTE PTR [eax]
  41db25:	fdivr  QWORD PTR [eax+ebp*4+0x6c]
  41db29:	js     0x41dadf
  41db2b:	js     0x41db5b
  41db2d:	data16 sub al,0x8a
  41db30:	mov    esi,?
  41db32:	push   esp
  41db33:	cwde   
  41db34:	jmp    0x1eb0:0x6c22a460
  41db3b:	and    al,0x7c
  41db3d:	shr    BYTE PTR [edx+0x8],0xcc
  41db41:	adc    al,0x14
  41db43:	fadd   DWORD PTR [esi]
  41db45:	and    ah,ah
  41db47:	loop   0x41db49
  41db49:	xor    ah,dh
  41db4b:	add    bh,BYTE PTR [eax+eax*1]
  41db4e:	add    ch,bh
  41db50:	xchg   edx,eax
  41db51:	xchg   esp,eax
  41db52:	xor    al,BYTE PTR [edx+0x6c9ea460]
  41db58:	mov    al,0xf6
  41db5a:	js     0x41db18
  41db5c:	mov    al,ds:0xbe66c804
  41db61:	adc    al,0xd8
  41db63:	mov    al,ds:0x2c60e420
  41db68:	lock push 0x38
  41db6b:	cld    
  41db6c:	stos   BYTE PTR es:[edi],al
  41db6d:	mov    eax,0xd4c00cc8
  41db72:	sbb    dl,bh
  41db74:	loopne 0x41db9a
  41db76:	fsub   st(4),st
  41db78:	xor    BYTE PTR [eax],bl
  41db7a:	mov    eax,0xd6c8c628
  41db7f:	adc    ah,dl
  41db81:	neg    BYTE PTR [eax+eiz*8]
  41db84:	dec    esi
  41db85:	test   al,0x2c
  41db87:	lock add bh,BYTE PTR [eax]
  41db8a:	out    0x62,eax
  41db8c:	les    ecx,FWORD PTR [ecx]
  41db8e:	jo     0x41db60
  41db90:	adc    al,0xb2
  41db92:	nop
  41db93:	loopne 0x41dbb9
  41db95:	mov    ah,ch
  41db97:	xor    BYTE PTR [eax-0x7b79c308],al
  41db9d:	dec    eax
  41db9e:	inc    esi
  41db9f:	xchg   BYTE PTR [eax+ebx*2-0x1317dbf6],dl
  41dba6:	sbb    esi,esi
  41dba8:	clc    
  41dba9:	push   esi
  41dbaa:	adc    al,0xc4
  41dbac:	or     BYTE PTR [edx],ch
  41dbae:	rcl    BYTE PTR [esp],1
  41dbb1:	fsub   QWORD PTR [eax]
  41dbb3:	push   0x68b22ce8
  41dbb8:	clc    
  41dbb9:	cmp    al,0x10
  41dbbb:	stos   BYTE PTR es:[edi],al
  41dbbc:	dec    edx
  41dbbd:	dec    esp
  41dbbe:	rcl    BYTE PTR [ecx+ebx*2+0x68a4fef6],cl
  41dbc5:	retf   0x74b0
  41dbc8:	(bad)  
  41dbc9:	mov    esp,0x10cc4880
  41dbce:	ds cld 
  41dbd0:	fsub   QWORD PTR [eax]
  41dbd2:	shr    al,1
  41dbd4:	sub    al,0x3c
  41dbd6:	hlt    
  41dbd7:	pop    es
  41dbd8:	(bad)  
  41dbd9:	lods   al,BYTE PTR ds:[esi]
  41dbda:	out    dx,eax
  41dbdb:	mov    BYTE PTR [edi-0x70],ah
  41dbde:	push   esp
  41dbdf:	mov    eax,0xa8b4609c
  41dbe4:	ins    BYTE PTR es:[edi],dx
  41dbe5:	into   
  41dbe6:	mov    ah,0x78
  41dbe8:	(bad)  
  41dbe9:	xor    al,BYTE PTR [eax+ecx*4+0x24]
  41dbed:	push   eax
  41dbee:	xchg   esp,eax
  41dbef:	add    al,0x5c
  41dbf1:	mov    al,ds:0x9eac682c
  41dbf6:	push   esp
  41dbf7:	cld    
  41dbf8:	inc    eax
  41dbf9:	push   ds
  41dbfa:	mov    BYTE PTR [esp+edx*2-0x6c],cl
  41dbfe:	dec    ebx
  41dbff:	inc    edx
  41dc00:	mov    al,ds:0xb042c264
  41dc05:	je     0x41dc3f
  41dc07:	mov    esp,0x9248c880
  41dc0c:	cld    
  41dc0d:	push   esp
  41dc0e:	mov    DWORD PTR [esi-0x1c],eax
  41dc11:	fs scas al,BYTE PTR es:[edi]
  41dc13:	sahf   
  41dc14:	jo     0x41dbca
  41dc16:	mov    ecx,0x9d0518bc
  41dc1b:	or     al,0xd0
  41dc1d:	add    al,0xf4
  41dc1f:	bound  esp,QWORD PTR [eax+ebp*8-0x53]
  41dc23:	jae    0x41dc67
  41dc25:	mov    eax,0x2284813d
  41dc2a:	pop    eax
  41dc2b:	push   eax
  41dc2c:	mov    ds,WORD PTR [esi+0x5c]
  41dc2f:	mov    al,ds:0x10ac6812
  41dc34:	je     0x41dbee
  41dc36:	push   ss
  41dc37:	dec    esp
  41dc38:	add    al,0xc8
  41dc3a:	mov    dh,0x10
  41dc3c:	aam    0x8c
  41dc3e:	sbb    al,0xe0
  41dc40:	fisubr WORD PTR [eax]
  41dc42:	in     al,dx
  41dc43:	cmp    dl,BYTE PTR [edx+0x48269e3c]
  41dc49:	popf   
  41dc4a:	push   0x71
  41dc4c:	js     0x41dbff
  41dc4e:	inc    eax
  41dc4f:	mov    ds:0x9dd1b8c6,al
  41dc54:	fdivr  DWORD PTR [ebp+0x28c2c4c1]
  41dc5a:	fcmovnu st,st(5)
  41dc5c:	fdiv   st,st(7)
  41dc5e:	loopne 0x41dcb4
  41dc60:	test   al,0xec
  41dc62:	call   0xee24:0x5cfcb82a
  41dc69:	dec    esp
  41dc6a:	adc    BYTE PTR [ebx],dh
  41dc6c:	mov    ds:0x28246029,al
  41dc71:	mov    al,0x22
  41dc73:	mov    BYTE PTR [ebx-0x3d561749],bh
  41dc79:	ds aam 0x62
  41dc7c:	(bad)  
  41dc7d:	jmp    0x9d6acdff
  41dc82:	repz clc 
  41dc84:	jae    0x41dc7a
  41dc86:	outs   dx,BYTE PTR ds:[esi]
  41dc87:	js     0x41dcc2
  41dc89:	mov    ch,0x77
  41dc8b:	icebp  
  41dc8c:	sbb    al,0x83
  41dc8e:	mov    cl,0x4c
  41dc90:	mov    dl,0x2
  41dc92:	mov    esp,0xe04032e3
  41dc97:	lock nop
  41dc99:	sub    esi,eax
  41dc9b:	xor    eax,0x64e80435
  41dca0:	sub    DWORD PTR [esi],esp
  41dca2:	outs   dx,DWORD PTR ds:[esi]
  41dca3:	xlat   BYTE PTR ds:[ebx]
  41dca4:	dec    esp
  41dca5:	mov    dl,0x1
  41dca7:	or     al,0xad
  41dca9:	push   0x92762a9
  41dcae:	nop
  41dcaf:	retf   
  41dcb0:	xor    BYTE PTR [ebp+0x20d08325],ah
  41dcb6:	pop    eax
  41dcb7:	sti    
  41dcb8:	dec    ebp
  41dcb9:	push   esp
  41dcba:	stos   BYTE PTR es:[edi],al
  41dcbb:	jl     0x41dc8d
  41dcbd:	push   cs
  41dcbe:	and    BYTE PTR ds:0xa27887c9,bl
  41dcc4:	inc    ebp
  41dcc5:	mov    dh,0x88
  41dcc7:	ins    DWORD PTR es:[edi],dx
  41dcc8:	rol    dl,0x6
  41dccb:	and    bh,cl
  41dccd:	int3   
  41dcce:	icebp  
  41dccf:	pop    ebp
  41dcd0:	gs (bad) 
  41dcd2:	call   0xc9d1218b
  41dcd7:	adc    edi,0xe
  41dcda:	les    ecx,FWORD PTR [edi+esi*2]
  41dcdd:	push   0x1c1fd8ac
  41dce2:	push   es
  41dce3:	jns    0x41dccb
  41dce5:	jne    0x41dc73
  41dce7:	jl     0x41dd46
  41dce9:	std    
  41dcea:	push   ss
  41dceb:	out    dx,eax
  41dcec:	clc    
  41dced:	sub    eax,0x50e13424
  41dcf2:	inc    esi
  41dcf3:	daa    
  41dcf4:	sub    esi,DWORD PTR [ecx+0x5f]
  41dcf7:	scas   al,BYTE PTR es:[edi]
  41dcf8:	pop    eax
  41dcf9:	test   eax,0xa4e56c6d
  41dcfe:	push   eax
  41dcff:	sbb    al,BYTE PTR [ebx+0x7c]
  41dd02:	ficom  WORD PTR [ecx+eiz*8-0x72a8b40]
  41dd09:	dec    ecx
  41dd0a:	mov    al,ds:0x12cbd9d6
  41dd0f:	gs pop esp
  41dd11:	mov    edi,0x188fc4fc
  41dd16:	push   eax
  41dd17:	adc    esp,DWORD PTR [ecx+0x6cba69e5]
  41dd1d:	sbb    eax,ecx
  41dd1f:	jb     0x41dcfa
  41dd21:	jp     0x41dd4f
  41dd23:	cmp    eax,0xf890b9
  41dd28:	cs loop 0x41dd9d
  41dd2b:	popa   
  41dd2c:	pop    ss
  41dd2d:	imul   esi,DWORD PTR [eax+edi*8+0x2b687c45],0xffffffa0
  41dd35:	or     dh,ah
  41dd37:	fsubr  DWORD PTR [ecx+0x23ad3bbc]
  41dd3d:	std    
  41dd3e:	and    ah,BYTE PTR [eax+eax*4]
  41dd41:	fnsave [ebp-0x57c7c4a3]
  41dd47:	inc    ebp
  41dd48:	xchg   BYTE PTR [edx+edx*4+0x38e56eac],ah
  41dd4f:	in     eax,dx
  41dd50:	pop    ss
  41dd51:	or     al,0xc8
  41dd53:	fidiv  DWORD PTR [ecx+0x14696704]
  41dd59:	push   eax
  41dd5a:	leave  
  41dd5b:	in     al,dx
  41dd5c:	shl    DWORD PTR [eax],cl
  41dd5e:	dec    ebx
  41dd5f:	stos   BYTE PTR es:[edi],al
  41dd60:	cdq    
  41dd61:	xchg   ecx,eax
  41dd62:	mov    dl,0xc3
  41dd64:	adc    BYTE PTR [ebx],bl
  41dd66:	mov    ebp,0x143698a1
  41dd6b:	mov    dl,0x9c
  41dd6d:	mov    eax,0x97c148b4
  41dd72:	jle    0x41dd7d
  41dd74:	fcomp  DWORD PTR [esi]
  41dd76:	fadd   st(4),st
  41dd78:	or     eax,0x88775de3
  41dd7d:	xchg   edi,eax
  41dd7e:	rol    DWORD PTR [eax],cl
  41dd80:	adc    eax,0xbf486444
  41dd85:	add    eax,0x1524e17d
  41dd8a:	add    DWORD PTR [esi-0x7e],edx
  41dd8d:	test   al,0x7d
  41dd8f:	pushf  
  41dd90:	xor    cl,BYTE PTR [eax-0x2a]
  41dd93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd94:	add    ebx,ebp
  41dd96:	pop    esp
  41dd97:	les    edi,FWORD PTR [edx]
  41dd99:	je     0x41dd8b
  41dd9b:	fsubp  st(0),st
  41dd9d:	sub    edi,ebp
  41dd9f:	lea    ecx,[ebp+0x71461bd]
  41dda5:	test   eax,0xc88d2296
  41ddaa:	(bad)  
  41ddab:	stos   DWORD PTR es:[edi],eax
  41ddac:	cmp    BYTE PTR [edi],cl
  41ddae:	xchg   esp,eax
  41ddaf:	cld    
  41ddb0:	mov    al,ds:0x205399ee
  41ddb5:	pop    esp
  41ddb6:	push   esp
  41ddb7:	popf   
  41ddb8:	push   0xf5dcfe63
  41ddbd:	xchg   esi,eax
  41ddbe:	add    al,0x10
  41ddc0:	xchg   esp,eax
  41ddc1:	push   ds
  41ddc2:	cmc    
  41ddc3:	mov    ds:0x285b4a11,eax
  41ddc8:	add    DWORD PTR ds:0x2cab3059,ecx
  41ddce:	and    cl,bl
  41ddd0:	dec    esp
  41ddd1:	push   ecx
  41ddd2:	or     BYTE PTR [ebx],bh
  41ddd4:	mov    edx,0x7033594
  41ddd9:	jo     0x41ddf1
  41dddb:	sbb    DWORD PTR [eax],edx
  41dddd:	pushf  
  41ddde:	pop    esp
  41dddf:	mov    eax,0xd69415e9
  41dde4:	pushf  
  41dde5:	inc    esi
  41dde6:	fcmovb st,st(1)
  41dde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dde9:	xor    dl,BYTE PTR [esp+edi*1+0x3b]
  41dded:	loope  0x41de38
  41ddef:	push   edi
  41ddf0:	xchg   ecx,eax
  41ddf1:	mov    al,ds:0x3360de50
  41ddf6:	lods   al,BYTE PTR ds:[esi]
  41ddf7:	arpl   WORD PTR [ebp-0x1a335e4e],ax
  41ddfd:	test   al,bl
  41ddff:	gs daa 
  41de01:	xchg   BYTE PTR [edx+0x24],dh
  41de04:	push   ds
  41de05:	das    
  41de06:	test   al,0xd0
  41de08:	cmp    BYTE PTR ds:0x19dd6344,cl
  41de0e:	cs push eax
  41de10:	sbb    eax,0x97758675
  41de15:	adc    al,0xbf
  41de17:	cld    
  41de18:	je     0x41de37
  41de1a:	xor    BYTE PTR [edi+edi*2-0x30],dl
  41de1e:	in     eax,dx
  41de1f:	and    bl,cl
  41de21:	cwde   
  41de22:	push   edx
  41de23:	icebp  
  41de24:	adc    DWORD PTR [edx+0x1b08b0d8],edx
  41de2a:	mov    esp,0x1873f422
  41de2f:	xchg   ecx,eax
  41de30:	jno    0x41de39
  41de32:	xchg   esi,eax
  41de33:	loopne 0x41de68
  41de35:	jge    0x41de6b
  41de37:	int    0x15
  41de39:	mov    eax,0x77882051
  41de3e:	fs inc edx
  41de40:	dec    ebx
  41de41:	test   BYTE PTR [ecx-0x33],0xeb
  41de45:	lods   al,BYTE PTR ds:[esi]
  41de46:	dec    esp
  41de47:	ins    DWORD PTR es:[edi],dx
  41de48:	(bad)  
  41de49:	mov    BYTE PTR [esi-0x2f9e50b4],al
  41de4f:	add    al,0x60
  41de51:	mov    esp,0xe8c5973a
  41de56:	mov    ah,0xf4
  41de58:	sbb    eax,0x573703e1
  41de5d:	inc    eax
  41de5e:	sbb    bh,BYTE PTR [esi-0x5a2796e8]
  41de64:	jno    0x41ddf2
  41de66:	lds    edi,FWORD PTR [ebp-0x76913f14]
  41de6c:	into   
  41de6d:	test   esp,0xe45ed7c8
  41de73:	outs   dx,BYTE PTR ds:[esi]
  41de74:	int3   
  41de75:	cld    
  41de76:	cmp    eax,0x536849dd
  41de7b:	or     BYTE PTR [edi+0x15387b95],bh
  41de81:	hlt    
  41de82:	inc    edx
  41de83:	xchg   ecx,eax
  41de84:	sub    al,0xaf
  41de86:	rcr    BYTE PTR [ecx-0xe],1
  41de89:	dec    esi
  41de8a:	xor    DWORD PTR [edx],edx
  41de8c:	mov    ss,esp
  41de8e:	inc    eax
  41de8f:	adc    eax,0x74cacd39
  41de94:	and    BYTE PTR [eax+edi*8+0x48],al
  41de98:	test   al,0xd3
  41de9a:	iret   
  41de9b:	sbb    ebp,DWORD PTR ds:0xa11c41a7
  41dea1:	sub    DWORD PTR [edx+eax*1-0x747a97f5],ebx
  41dea8:	inc    eax
  41dea9:	jmp    0x74d2d4d2
  41deae:	fnsetpm(287 only) 
  41deb0:	lea    esp,[esi+ebx*8-0x21]
  41deb4:	dec    ebx
  41deb5:	(bad)  
  41deb6:	lock loop 0x41de6b
  41deb9:	or     ecx,DWORD PTR [edx+ecx*4]
  41debc:	(bad)  
  41debd:	test   eax,0xfd631968
  41dec2:	(bad)  
  41dec3:	xor    BYTE PTR [ebx+0x51ddee4f],bl
  41dec9:	outs   dx,BYTE PTR ds:[esi]
  41deca:	xchg   edi,eax
  41decb:	push   esp
  41decc:	push   esp
  41decd:	fisttp DWORD PTR [edx-0x44]
  41ded0:	pop    ss
  41ded1:	jp     0x41df3a
  41ded3:	adc    edx,DWORD PTR [edi-0x1f440788]
  41ded9:	sbb    al,0xb2
  41dedb:	cli    
  41dedc:	stc    
  41dedd:	adc    DWORD PTR [eax],esp
  41dedf:	mov    WORD PTR [edx+0x46],?
  41dee2:	dec    edx
  41dee3:	aas    
  41dee4:	div    DWORD PTR [edx]
  41dee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee7:	inc    esp
  41dee8:	aad    0xb3
  41deea:	pop    ecx
  41deeb:	(bad)  
  41deec:	jg     0x41dee0
  41deee:	pusha  
  41deef:	outs   dx,BYTE PTR ds:[esi]
  41def0:	push   0x573eedd
  41def5:	cmp    BYTE PTR [ebx],dl
  41def7:	mov    edi,DWORD PTR [eax-0x74]
  41defa:	inc    edx
  41defb:	aaa    
  41defc:	nop
  41defd:	sbb    ecx,eax
  41deff:	push   esi
  41df00:	test   eax,0x7a4ab0b2
  41df05:	mov    edx,0x321b152d
  41df0a:	mov    ds:0x1079758,eax
  41df0f:	call   0x615a2531
  41df14:	jl     0x41df7d
  41df16:	and    bl,0xe2
  41df19:	out    0x8f,al
  41df1b:	dec    esp
  41df1c:	bound  esp,QWORD PTR [eax+0x397f8344]
  41df22:	out    dx,al
  41df23:	ret    0xd066
  41df26:	les    eax,FWORD PTR [esi+eax*4]
  41df29:	or     eax,0x5903b7b3
  41df2e:	sbb    eax,0xc69b89e8
  41df33:	bnd ret 
  41df35:	cmp    bh,BYTE PTR [edi]
  41df37:	fwait
  41df38:	nop
  41df39:	inc    ecx
  41df3a:	push   ss
  41df3b:	sub    al,0xc0
  41df3d:	dec    esp
  41df3e:	or     edi,DWORD PTR [edx+0x66]
  41df41:	mov    ah,0xc6
  41df43:	das    
  41df44:	adc    DWORD PTR [ebp+0xc],esp
  41df47:	push   cs
  41df48:	or     ah,ch
  41df4a:	fmul   DWORD PTR [esi+0x1da73b12]
  41df50:	xchg   edi,eax
  41df51:	dec    edi
  41df52:	sub    esp,edi
  41df54:	addr16 push ebx
  41df56:	mov    ah,0xaa
  41df58:	int    0x9e
  41df5a:	sub    DWORD PTR [edi+0x29ae3a4],ebx
  41df60:	cld    
  41df61:	bound  edx,QWORD PTR [edi-0x7f37e333]
  41df67:	retf   
  41df68:	fidiv  WORD PTR [edi+0x2a]
  41df6b:	stos   BYTE PTR es:[edi],al
  41df6c:	out    0xde,eax
  41df6e:	in     al,dx
  41df6f:	nop
  41df70:	mov    ?,esp
  41df72:	mov    ebp,0xd368ebc3
  41df77:	adc    BYTE PTR [ecx-0x39],al
  41df7a:	jnp    0x41df04
  41df7c:	retf   
  41df7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df7e:	inc    edx
  41df7f:	add    DWORD PTR [ecx+eax*2],esi
  41df82:	jle    0x41df31
  41df84:	mov    es,WORD PTR [eax+0x63]
  41df87:	mov    ch,0x13
  41df89:	fdiv   st(2),st
  41df8b:	mov    ss,WORD PTR [bx+si+0x50]
  41df8f:	es xchg edi,eax
  41df91:	fld    DWORD PTR [eax]
  41df93:	xor    ch,dl
  41df95:	fs inc edx
  41df97:	sub    DWORD PTR [edi+0x10],0x6b2b24ec
  41df9e:	cmp    ecx,DWORD PTR [edi+0x66422a81]
  41dfa4:	dec    eax
  41dfa5:	arpl   WORD PTR [esi+0x51],si
  41dfa8:	or     eax,0x29de5be2
  41dfad:	lock fdivr st(3),st
  41dfb0:	inc    ecx
  41dfb1:	mov    dl,0x96
  41dfb3:	push   edx
  41dfb4:	mov    eax,0x761c143b
  41dfb9:	xchg   ebx,eax
  41dfba:	js     0x41df4b
  41dfbc:	shl    edi,cl
  41dfbe:	idiv   BYTE PTR [eax]
  41dfc0:	or     eax,0xc7fd948f
  41dfc5:	into   
  41dfc6:	lea    esi,[esp+ebx*2+0x7d]
  41dfca:	retf   0x37b6
  41dfcd:	shl    BYTE PTR [esi-0x5d7f18e4],0x7a
  41dfd4:	out    dx,eax
  41dfd5:	clc    
  41dfd6:	test   BYTE PTR [edi+0x2628514a],bh
  41dfdc:	mov    ds:0x46953a59,eax
  41dfe1:	dec    ebp
  41dfe2:	aam    0x4c
  41dfe4:	outs   dx,DWORD PTR ds:[esi]
  41dfe5:	bound  edx,QWORD PTR [esi-0x49]
  41dfe8:	in     eax,0x3
  41dfea:	outs   dx,DWORD PTR ds:[esi]
  41dfeb:	push   ds
  41dfec:	jo     0x41e055
  41dfee:	das    
  41dfef:	jl     0x41df76
  41dff1:	push   es
  41dff2:	ret    0x533
  41dff5:	xchg   esp,eax
  41dff6:	mov    esi,fs
  41dff8:	sbb    BYTE PTR [esi+0x6],al
  41dffb:	xchg   DWORD PTR [ecx],eax
  41dffd:	iret   
  41dffe:	cmp    al,0x78
  41e000:	pop    edi
  41e001:	inc    BYTE PTR [eax-0x35]
  41e004:	fimul  DWORD PTR [edx-0x29969f32]
  41e00a:	mov    ecx,0xa097c395
  41e00f:	cld    
  41e010:	test   BYTE PTR [ecx+0x4c9f4b53],ch
  41e016:	dec    esi
  41e017:	jae    0x41e03b
  41e019:	test   al,0xee
  41e01b:	push   edx
  41e01c:	pusha  
  41e01d:	dec    ecx
  41e01e:	inc    esp
  41e01f:	jae    0x41e03a
  41e021:	mov    al,ds:0x257becc
  41e026:	ret    
  41e027:	sub    eax,0x74f1d27e
  41e02c:	and    ebx,DWORD PTR [edx+0x39]
  41e02f:	jb     0x41e09a
  41e031:	sti    
  41e032:	and    bl,bh
  41e034:	cwde   
  41e035:	jmp    0x41e01e
  41e037:	adc    esi,DWORD PTR [eax+0x30bcea4a]
  41e03d:	mov    esp,0x33c7aeb0
  41e042:	sbb    ch,bh
  41e044:	fidivr WORD PTR [edx-0x121c4720]
  41e04a:	loope  0x41e057
  41e04c:	cwd    
  41e04e:	pop    DWORD PTR [ecx+eiz*2]
  41e051:	mul    BYTE PTR ds:[eax+0x4f]
  41e055:	pop    edi
  41e056:	iret   
  41e057:	leave  
  41e058:	lods   al,BYTE PTR ds:[esi]
  41e059:	cmc    
  41e05a:	jnp    0x41e030
  41e05c:	stos   BYTE PTR es:[edi],al
  41e05d:	mov    eax,0xd06cc226
  41e062:	cmp    cl,BYTE PTR [edx]
  41e064:	shl    DWORD PTR [edi],1
  41e066:	mov    al,0x6b
  41e068:	call   0x4f7cd52b
  41e06d:	add    edi,DWORD PTR ds:0xb3772a69
  41e073:	sbb    bl,ch
  41e075:	ss inc esp
  41e077:	clc    
  41e078:	popa   
  41e079:	ja     0x41e04c
  41e07b:	cmc    
  41e07c:	rcr    BYTE PTR [edi],0xbf
  41e07f:	mov    ds:0xdb29eee,al
  41e084:	dec    esi
  41e085:	in     al,0x34
  41e087:	mov    dh,0x26
  41e089:	sub    eax,0x44dff79e
  41e08e:	or     ah,bh
  41e090:	sub    ecx,esp
  41e092:	das    
  41e093:	dec    edi
  41e094:	mov    ds,WORD PTR [eax-0x550ad37f]
  41e09a:	and    edx,0x3f
  41e09d:	mov    edi,edx
  41e09f:	or     edx,DWORD PTR [eax-0x43]
  41e0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a3:	jmp    0x4d60d57c
  41e0a8:	dec    ecx
  41e0a9:	clc    
  41e0aa:	jbe    0x41e06e
  41e0ac:	mov    esi,0xa7833cc2
  41e0b1:	dec    ebx
  41e0b2:	sbb    al,0x86
  41e0b4:	xchg   DWORD PTR [eax+ecx*1-0x7917fdcb],ebx
  41e0bb:	inc    eax
  41e0bc:	xlat   BYTE PTR ds:[ebx]
  41e0bd:	dec    esi
  41e0be:	fwait
  41e0bf:	popf   
  41e0c0:	jge    0x41e0d1
  41e0c2:	xor    BYTE PTR [esp+eiz*2],0xd7
  41e0c6:	or     ebp,DWORD PTR [ecx-0x19f9a9a9]
  41e0cc:	aaa    
  41e0cd:	or     al,0xa8
  41e0cf:	pop    esi
  41e0d0:	jns    0x41e0aa
  41e0d2:	sar    DWORD PTR [ebx],cl
  41e0d4:	add    BYTE PTR [eax],al
  41e0d6:	add    BYTE PTR [eax],al
  41e0d8:	mov    al,ds:0x7e473917
  41e0dd:	add    al,0x0
  41e0df:	add    BYTE PTR [eax],al
  41e0e1:	add    BYTE PTR [eax],al
  41e0e3:	add    BYTE PTR [esi+0x4],bh
  41e0e6:	add    BYTE PTR [eax],al
  41e0e8:	sbb    eax,0x7c2600
  41e0ed:	add    dh,BYTE PTR [esi]
  41e0ef:	or     BYTE PTR [eax],al
  41e0f1:	add    BYTE PTR [ecx+0x13060048],dl
  41e0f7:	fs dec ebp
  41e0f9:	xor    BYTE PTR [ebx],0x73
  41e0fc:	or     ah,BYTE PTR [edi+ebx*1]
  41e0ff:	xchg   edx,eax
  41e100:	cmp    eax,DWORD PTR [eax-0x78b34d67]
  41e106:	dec    eax
  41e107:	push   edi
  41e108:	(bad)  
  41e109:	push   ecx
  41e10a:	add    dl,cl
  41e10c:	(bad)  
  41e10d:	inc    bp
  41e10f:	int3   
  41e110:	and    BYTE PTR [edi-0x7bd783c6],cl
  41e116:	nop
  41e117:	les    edx,FWORD PTR [eax+0x24a61090]
  41e11d:	inc    ebp
  41e11e:	sub    al,0x34
  41e120:	push   cs
  41e121:	cmp    BYTE PTR [edi+0x40],cl
  41e124:	inc    eax
  41e125:	dec    ebp
  41e126:	dec    ebp
  41e127:	push   eax
  41e128:	xor    BYTE PTR [eax+ebx*2+0x4c],bl
  41e12c:	fs dec eax
  41e12e:	ins    BYTE PTR es:[edi],dx
  41e12f:	cmp    eax,0xa07e7c21
  41e134:	sub    BYTE PTR [edx-0x67696b0b],0x9e
  41e13b:	mov    cs,WORD PTR [ebx-0x64615193]
  41e141:	mov    esp,0x1cc4c09e
  41e146:	push   eax
  41e147:	jb     0x41e1a2
  41e149:	pop    esp
  41e14a:	loop   0x41e171
  41e14c:	ins    BYTE PTR es:[edi],dx
  41e14d:	bound  esi,QWORD PTR [esp+esi*2]
  41e150:	sbb    eax,0x8b84e37c
  41e155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e156:	std    
  41e157:	xchg   esp,eax
  41e158:	cli    
  41e159:	pushf  
  41e15a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e15b:	(bad)  
  41e15c:	stos   BYTE PTR es:[edi],al
  41e15d:	mov    edi,0xd310b4fe
  41e162:	shl    BYTE PTR [edx-0x2b60203c],0xfd
  41e169:	test   al,0xe0
  41e16b:	repz fucomp st(1)
  41e16e:	sub    edi,DWORD PTR gs:[edi+eax*4-0xc]
  41e173:	mov    BYTE PTR [ebp-0x63264e67],bl
  41e179:	enter  0xa8d1,0xcb
  41e17d:	mov    al,0xb7
  41e17f:	retf   
  41e180:	mov    esp,0x86c8c5d7
  41e185:	mov    ebp,0xe4b0d3d4
  41e18a:	xchg   ebx,eax
  41e18b:	jmp    0xe0368077
  41e190:	(bad)  
  41e191:	jnp    0x41e207
  41e193:	and    eax,0x187d3f0c
  41e198:	mov    ebx,0x30cd0ba5
  41e19d:	mov    cl,0xdb
  41e19f:	mov    esp,0xc948ac6a
  41e1a4:	xchg   esi,eax
  41e1a5:	push   esp
  41e1a6:	xlat   BYTE PTR ds:[ebx]
  41e1a7:	mov    esi,0x6e9de260
  41e1ac:	stc    
  41e1ad:	or     DWORD PTR [ebp-0x19],edi
  41e1b0:	popa   
  41e1b1:	test   BYTE PTR [ebx],dl
  41e1b3:	mov    ebx,DWORD PTR [eax]
  41e1b5:	xchg   edi,eax
  41e1b6:	dec    edi
  41e1b7:	cdq    
  41e1b8:	jno    0x41e15b
  41e1ba:	arpl   WORD PTR [ecx+0x7dbdcb77],bp
  41e1c0:	(bad)
  41e1c3:	jmp    0x41e21c
  41e1c5:	jmp    0x41e224
  41e1c7:	jmp    DWORD PTR [edi-0x2b]
  41e1ca:	imul   ecx,ebx,0x8557c171
  41e1d0:	aaa    
  41e1d1:	mov    DWORD PTR [edi],ebp
  41e1d3:	jno    0x41e169
  41e1d5:	aas    
  41e1d6:	imul   esp,DWORD PTR [eax+0x28a84c29],0xc12db983
  41e1e0:	adc    cl,bh
  41e1e2:	dec    ebx
  41e1e3:	add    al,0xd4
  41e1e5:	push   cs
  41e1e6:	fnsave [eax+0x17]
  41e1e9:	loopne 0x41e1e4
  41e1eb:	cs scas eax,DWORD PTR es:[edi]
  41e1ed:	jl     0x41e212
  41e1ef:	pusha  
  41e1f0:	mov    bh,BYTE PTR [edi+edx*4+0x1e]
  41e1f4:	dec    esp
  41e1f5:	pushf  
  41e1f6:	xor    ch,BYTE PTR [ebp-0x4b8239d1]
  41e1fc:	popa   
  41e1fd:	push   edx
  41e1fe:	enter  0x1b5d,0xce
  41e202:	sbb    eax,0x7e9d5b9d
  41e207:	pop    ebx
  41e208:	lods   eax,DWORD PTR ds:[esi]
  41e209:	ja     0x41e1c0
  41e20b:	ins    DWORD PTR es:[edi],dx
  41e20c:	mov    ebp,0x4d97456a
  41e211:	popf   
  41e212:	push   ebp
  41e213:	fwait
  41e214:	sbb    al,0x20
  41e216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e217:	pusha  
  41e218:	or     bl,BYTE PTR fs:[ecx+0x55]
  41e21c:	push   es
  41e21d:	xor    eax,DWORD PTR [esi-0x31]
  41e220:	out    dx,al
  41e221:	xor    al,0x54
  41e223:	pop    eax
  41e224:	jo     0x41e266
  41e226:	sub    DWORD PTR [eax+0x6c],ebp
  41e229:	push   eax
  41e22a:	jne    0x41e2a6
  41e22c:	jle    0x41e227
  41e22e:	test   BYTE PTR [eax-0x48262274],cl
  41e234:	clc    
  41e235:	les    ecx,FWORD PTR [edx+0x75b2ac87]
  41e23b:	(bad)  
  41e23c:	cmp    al,0x39
  41e23e:	or     DWORD PTR [eax+edx*2+0x37c3d10],ecx
  41e245:	add    DWORD PTR ds:0xf76150e,eax
  41e24b:	xor    ch,bh
  41e24d:	(bad)  
  41e24e:	dec    BYTE PTR [edx-0x6e]
  41e251:	(bad)  
  41e253:	call   0xffec0827
  41e258:	mov    eax,0xc5c8c8d1
  41e25d:	ror    DWORD PTR [ecx-0x55e4847],0xaf
  41e264:	loopne 0x41e228
  41e266:	es add eax,0xca6cba18
  41e26c:	icebp  
  41e26d:	retf   0x92e2
  41e270:	out    0xd9,al
  41e272:	in     al,dx
  41e273:	ror    ch,cl
  41e275:	push   0xffffffdc
  41e277:	shl    DWORD PTR [eax-0x54fd2036],1
  41e27d:	lods   eax,DWORD PTR ds:[esi]
  41e27e:	scas   al,BYTE PTR es:[edi]
  41e27f:	mov    ds:0x922eb9a1,al
  41e284:	daa    
  41e285:	loopne 0x41e214
  41e287:	sahf   
  41e288:	jbe    0x41e284
  41e28a:	cmp    al,0x19
  41e28c:	lds    ebx,FWORD PTR [edi]
  41e28e:	int    0x5
  41e290:	inc    edi
  41e291:	pop    ebp
  41e292:	mov    ah,0x65
  41e294:	mov    edx,0xa875a16d
  41e299:	jl     0x41e268
  41e29b:	mov    ebp,0xdb11dc09
  41e2a0:	fistp  DWORD PTR ds:0xece425ee
  41e2a6:	mov    ds:0x72898c95,eax
  41e2ab:	and    ch,BYTE PTR [esp+ecx*1+0x16]
  41e2af:	aad    0xb
  41e2b1:	outs   dx,BYTE PTR ds:[esi]
  41e2b2:	dec    ecx
  41e2b3:	data16 sub bh,BYTE PTR [eax+0x58]
  41e2b7:	cmp    al,0x4d
  41e2b9:	mov    dl,0xb7
  41e2bb:	or     al,0xc8
  41e2bd:	xchg   DWORD PTR [ecx-0x7e0d4d44],esi
  41e2c3:	in     al,dx
  41e2c4:	out    dx,eax
  41e2c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2c6:	cmp    DWORD PTR [ebx+0x666b4dfe],0x4b1012c5
  41e2d0:	imul   esp,esp,0xf1584925
  41e2d6:	cmp    bh,cl
  41e2d8:	xor    DWORD PTR [edi-0x7b],ecx
  41e2db:	inc    ebx
  41e2dc:	lea    ebx,[ecx-0x6b]
  41e2df:	push   eax
  41e2e0:	popf   
  41e2e1:	addr16 call 0xfcf3d38e
  41e2e7:	cld    
  41e2e8:	push   edx
  41e2e9:	inc    esp
  41e2ea:	xchg   DWORD PTR [ecx+0x10],ecx
  41e2ed:	pop    eax
  41e2ee:	sbb    BYTE PTR [edi],ch
  41e2f0:	lock and al,0x1a
  41e2f3:	sub    al,0x1e
  41e2f5:	je     0x41e2a3
  41e2f7:	jo     0x41e2f9
  41e2f9:	inc    esp
  41e2fa:	mov    dl,BYTE PTR [edi+0x10]
  41e2fd:	cmp    BYTE PTR [ebx],ch
  41e2ff:	sbb    dl,BYTE PTR [edx]
  41e301:	add    DWORD PTR ds:0x182771ad,ecx
  41e307:	sbb    esp,esi
  41e309:	shr    cl,cl
  41e30b:	loopne 0x41e2e1
  41e30d:	adc    eax,0x96322dc
  41e312:	in     al,0x32
  41e314:	jne    0x41e36a
  41e316:	push   eax
  41e317:	das    
  41e318:	(bad)
  41e31b:	push   ecx
  41e31c:	push   esp
  41e31d:	pop    edx
  41e31e:	pop    edi
  41e31f:	fs popa 
  41e321:	outs   dx,BYTE PTR ds:[esi]
  41e322:	imul   edi,DWORD PTR [eax+0x7d],0x78
  41e326:	jbe    0x41e2b3
  41e328:	mov    BYTE PTR [ebp-0x767b607e],al
  41e32e:	pushf  
  41e32f:	mov    dl,0xb7
  41e331:	mov    esp,0x24a3a6b9
  41e336:	pop    ecx
  41e337:	inc    esp
  41e338:	push   edx
  41e339:	push   edi
  41e33a:	dec    esp
  41e33b:	dec    ecx
  41e33c:	inc    esi
  41e33d:	inc    ebx
  41e33e:	inc    eax
  41e33f:	inc    ebp
  41e340:	push   0x5d50534e
  41e345:	pop    edx
  41e346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e347:	lods   al,BYTE PTR ds:[esi]
  41e348:	mov    eax,ds:0xb4bfba8c
  41e34d:	mov    cl,0x8e
  41e34f:	mov    ebx,DWORD PTR [eax-0x74794f63]
  41e355:	mov    ch,dh
  41e357:	repnz push esp
  41e35a:	jmp    0x5929c633
  41e35f:	push   ebp
  41e360:	push   edx
  41e361:	dec    edi
  41e362:	xor    al,0x39
  41e364:	jl     0x41e328
  41e366:	(bad)  
  41e367:	int3   
  41e368:	leave  
  41e369:	(bad)  
  41e36a:	rcl    eax,cl
  41e36c:	aad    0xa0
  41e36e:	out    dx,al
  41e36f:	jecxz  0x41e351
  41e371:	std    
  41e372:	cli    
  41e373:	imul   esp
  41e375:	xchg   ecx,eax
  41e376:	les    ebx,FWORD PTR [edx-0x717e7b61]
  41e37c:	mov    edi,DWORD PTR [eax-0x54491743]
  41e382:	test   al,0xa5
  41e384:	mov    ds:0x9069645f,al
  41e389:	idiv   bl
  41e38b:	clc    
  41e38c:	(bad)
  41e38f:	(bad)  
  41e390:	fnstenv [edx+edx*8-0x59565329]
  41e397:	mov    ds:0xaed8a5a0,eax
  41e39c:	xchg   ebx,eax
  41e39d:	nop
  41e39e:	popf   
  41e39f:	call   0x7f7a:0xfc818c87
  41e3a6:	je     0x41e419
  41e3a8:	outs   dx,BYTE PTR ds:[esi]
  41e3a9:	imul   ebx,DWORD PTR [eax],0x5f
  41e3ac:	and    BYTE PTR [ebx+0x5a],cl
  41e3af:	imul   ecx,DWORD PTR [eax-0x2f],0x60b690c8
  41e3b6:	mov    ds:0xe3f9b1b3,eax
  41e3bb:	lea    eax,[esp+eiz*4]
  41e3be:	(bad)  
  41e3bf:	adc    BYTE PTR [esi+0x40208e12],dh
  41e3c5:	ins    DWORD PTR es:[edi],dx
  41e3c6:	lods   al,BYTE PTR ds:[esi]
  41e3c7:	or     dh,BYTE PTR [eax-0x48]
  41e3ca:	inc    ebx
  41e3cb:	inc    ecx
  41e3cc:	pop    ss
  41e3cd:	mov    DWORD PTR [ebp+0x5a],eax
  41e3d0:	pop    edx
  41e3d1:	cwde   
  41e3d2:	jbe    0x41e3fd
  41e3d4:	fs dec esp
  41e3d6:	sub    eax,esi
  41e3d8:	xlat   BYTE PTR ds:[ebx]
  41e3d9:	jns    0x41e370
  41e3db:	xchg   esi,eax
  41e3dc:	lods   eax,DWORD PTR ds:[esi]
  41e3dd:	push   cs
  41e3de:	hlt    
  41e3df:	aam    0x9a
  41e3e1:	loop   0x41e3f0
  41e3e3:	add    al,0x2
  41e3e5:	push   0x7c05584a
  41e3ea:	dec    ecx
  41e3eb:	ja     0x41e3f5
  41e3ed:	sub    al,0x59
  41e3ef:	xor    BYTE PTR [ebx+0x144133f],bl
  41e3f5:	loope  0x41e467
  41e3f7:	jb     0x41e418
  41e3f9:	ins    BYTE PTR es:[edi],dx
  41e3fa:	arpl   WORD PTR [ebp+0x25902319],ax
  41e400:	cmp    DWORD PTR [esi-0x7c],ebx
  41e403:	(bad)  
  41e406:	inc    esi
  41e407:	sbb    BYTE PTR [edx],ch
  41e409:	and    BYTE PTR [eax+ecx*1],dl
  41e40c:	add    DWORD PTR [ebx],eax
  41e40e:	inc    ecx
  41e40f:	sbb    bh,BYTE PTR [esi]
  41e411:	ins    DWORD PTR es:[edi],dx
  41e412:	and    al,0x4c
  41e414:	or     eax,0xdabb45f0
  41e419:	and    ebx,0xfed2c148
  41e41f:	pop    eax
  41e420:	fiadd  WORD PTR [esi]
  41e422:	gs fwait
  41e424:	shl    DWORD PTR [edx],0x99
  41e427:	aam    0xbc
  41e429:	mov    eax,ds:0x50b509f1
  41e42e:	pop    edx
  41e42f:	ds es es inc edx
  41e433:	and    DWORD PTR [edx],esi
  41e435:	push   ecx
  41e436:	xor    BYTE PTR [ecx+0x4c1b7d40],ch
  41e43c:	jno    0x41e453
  41e43e:	fcmovu st,st(5)
  41e440:	and    ecx,DWORD PTR [ebx]
  41e442:	jmp    0xcd4d5547
  41e447:	std    
  41e448:	ror    ch,cl
  41e44a:	or     BYTE PTR [ecx-0x2d46eb29],dh
  41e450:	mov    ds:0x329ba1ad,al
  41e455:	dec    esp
  41e456:	xor    eax,0x56b8569
  41e45b:	push   edx
  41e45c:	ja     0x41e477
  41e45e:	pushf  
  41e45f:	xchg   ch,ch
  41e461:	fs mov edx,gs
  41e464:	jo     0x41e402
  41e466:	mov    ebp,0xc28aaeca
  41e46b:	push   ebx
  41e46c:	mov    edi,0xa07ab859
  41e471:	push   0xdb36b3cc
  41e476:	jge    0x41e410
  41e478:	test   esi,esp
  41e47a:	int3   
  41e47b:	push   eax
  41e47c:	stc    
  41e47d:	dec    edi
  41e47e:	sbb    eax,0xf18f6b8b
  41e483:	cmp    edi,esi
  41e485:	ds scas al,BYTE PTR es:[edi]
  41e487:	lds    ebp,FWORD PTR [ebx+0x6fb490dc]
  41e48d:	popf   
  41e48e:	retf   0xcee7
  41e491:	out    dx,eax
  41e492:	(bad)  
  41e494:	clc    
  41e495:	fild   QWORD PTR [ecx-0x5b00bba]
  41e49b:	and    dl,BYTE PTR [ebp-0x545afda4]
  41e4a1:	sub    al,0x32
  41e4a3:	adc    DWORD PTR [ebx-0x4],esi
  41e4a6:	sub    al,BYTE PTR [edi+0x3f]
  41e4a9:	pop    es
  41e4aa:	push   ebp
  41e4ab:	mov    ds:0xff65d31d,al
  41e4b0:	mov    edi,0xd8b943f2
  41e4b5:	pop    esp
  41e4b7:	not    DWORD PTR [ebx-0x6f]
  41e4ba:	jecxz  0x41e495
  41e4bc:	jmp    0x176ce6a2
  41e4c1:	icebp  
  41e4c2:	cmp    bh,0x38
  41e4c5:	or     eax,0x516b3346
  41e4ca:	sbb    eax,0xc0a195d9
  41e4cf:	push   0x6138784c
  41e4d4:	adc    DWORD PTR ds:0xf482ed48,0xffffffd1
  41e4db:	pop    esi
  41e4dc:	daa    
  41e4dd:	and    eax,0x77b4ad48
  41e4e2:	or     ch,bl
  41e4e4:	leave  
  41e4e5:	or     eax,0x111f3609
  41e4ea:	push   esi
  41e4eb:	pop    esi
  41e4ec:	push   esp
  41e4ed:	gs comiss xmm5,xmm6
  41e4f1:	mov    ch,0x43
  41e4f3:	out    0xc3,eax
  41e4f5:	fs dec edi
  41e4f7:	imul   esi,DWORD PTR [esi+edx*1],0x6a
  41e4fb:	(bad)  [ecx+ebp*8+0x25fa3e1e]
  41e502:	(bad)  
  41e503:	adc    al,dl
  41e505:	adc    eax,0x99321042
  41e50a:	and    eax,0xed496625
  41e50f:	ja     0x41e4cf
  41e511:	xor    ah,bh
  41e513:	popa   
  41e514:	pop    ss
  41e515:	dec    eax
  41e516:	jp     0x41e529
  41e518:	push   esi
  41e519:	mov    bh,0xdd
  41e51b:	mov    ah,BYTE PTR [edi]
  41e51d:	adc    DWORD PTR [edx-0x4],0x74
  41e521:	cwde   
  41e522:	aas    
  41e523:	mov    ebp,0x37131981
  41e528:	push   ebp
  41e529:	adc    al,0x6a
  41e52b:	test   eax,0xa8611244
  41e530:	adc    dh,BYTE PTR [ebx-0x769cfaa3]
  41e536:	pop    ebp
  41e537:	aaa    
  41e538:	cwde   
  41e539:	je     0x41e50f
  41e53b:	cmp    ebp,DWORD PTR [esi+edi*4-0xf]
  41e53f:	mov    ebx,0x88839fbb
  41e544:	or     DWORD PTR [ecx+0x4396a751],esp
  41e54a:	xor    BYTE PTR [ebx],0x37
  41e54d:	mov    ?,WORD PTR [edx+0x5478b11a]
  41e553:	push   ds
  41e554:	pusha  
  41e555:	inc    ebp
  41e556:	jge    0x41e565
  41e558:	outs   dx,DWORD PTR ds:[esi]
  41e559:	lahf   
  41e55a:	mov    BYTE PTR [eax+0x341790e9],cl
	...
  41e568:	mov    esp,0xfc5c8d1e
  41e56d:	add    al,BYTE PTR [eax]
  41e56f:	add    BYTE PTR [eax],al
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    ah,bh
  41e575:	add    al,BYTE PTR [eax]
  41e577:	add    BYTE PTR [esi],bl
  41e579:	add    BYTE PTR [esi],ah
  41e57b:	jl     0x41e57d
  41e57d:	add    dh,BYTE PTR [esi]
  41e57f:	or     BYTE PTR [eax],al
  41e581:	add    BYTE PTR [edi],bl
  41e583:	dec    esi
  41e584:	inc    eax
  41e585:	pusha  
  41e586:	or     BYTE PTR [ecx],al
  41e588:	adc    BYTE PTR [esi],bl
  41e58a:	sbb    BYTE PTR ds:0x2c287620,bl
  41e590:	push   es
  41e591:	xor    al,0x8
  41e593:	cmp    al,0x72
  41e595:	inc    esp
  41e596:	jo     0x41e5e5
  41e598:	push   edx
  41e599:	fdiv   QWORD PTR [ebp+0x5c]
  41e59c:	inc    eax
  41e59d:	fs sbb eax,0x78741e6c
  41e5a3:	sbb    eax,0xe088e680
  41e5a8:	nop
  41e5a9:	icebp  
  41e5aa:	leave  
  41e5ab:	pushf  
  41e5ac:	adc    BYTE PTR [esp+ebp*1+0x5f],bl
  41e5b0:	xor    al,0x2c
  41e5b2:	push   ebp
  41e5b3:	inc    eax
  41e5b4:	or     BYTE PTR [ecx],ah
  41e5b6:	sbb    DWORD PTR [eax+0x78],edx
  41e5b9:	xor    DWORD PTR [esp+eax*1+0x8],ebx
  41e5bd:	push   0x4e760a78
  41e5c2:	adc    al,0x31
  41e5c4:	test   BYTE PTR [edx-0x611b6f13],al
  41e5ca:	or     ch,BYTE PTR [ecx+0x2eaa9f3a]
  41e5d0:	sahf   
  41e5d1:	(bad)  
  41e5d2:	mov    esp,0x5e4cb042
  41e5d7:	xor    DWORD PTR [edx+0x4e],ebx
  41e5da:	adc    eax,0x700b4a64
  41e5df:	sbb    bl,BYTE PTR [eax+0x7c]
  41e5e2:	repz test BYTE PTR [edi-0x4c16f13],bh
  41e5e9:	sahf   
  41e5ea:	out    0xc2,eax
  41e5ec:	test   al,0xbb
  41e5ee:	ret    0xbfb4
  41e5f1:	rol    al,1
  41e5f3:	ret    
  41e5f4:	push   ds
  41e5f5:	mov    ebx,0xadcb89d0
  41e5fa:	and    esi,0x6f7483e5
  41e600:	ins    DWORD PTR es:[edi],dx
  41e601:	out    dx,eax
  41e602:	cs mov esi,0x18e7ffbc
  41e608:	pop    esp
  41e60a:	adc    BYTE PTR [edi+0x12833699],bl
  41e610:	int3   
  41e611:	inc    eax
  41e612:	cmc    
  41e613:	mov    edx,0x58a2fb4e
  41e618:	retf   
  41e619:	xchg   edx,eax
  41e61a:	fs repnz inc edx
  41e61d:	test   DWORD PTR [esi-0x27],esi
  41e620:	jge    0x41e655
  41e622:	test   DWORD PTR [ebp+0x3837966f],ebp
  41e628:	and    BYTE PTR [ecx-0x2743d2fb],ah
  41e62e:	xor    BYTE PTR [ebp+eax*2-0x7083031d],dl
  41e635:	mov    ebx,DWORD PTR [edx-0xa]
  41e638:	or     BYTE PTR [ecx-0x578d6b18],al
  41e63e:	xlat   BYTE PTR ds:[ebx]
  41e63f:	jle    0x41e699
  41e641:	or     DWORD PTR [esi],0x9db7cc8d
  41e647:	(bad)  
  41e648:	scas   eax,DWORD PTR es:[edi]
  41e649:	jnp    0x41e664
  41e64b:	sub    al,0x9
  41e64d:	out    dx,al
  41e64e:	inc    ebx
  41e64f:	push   ebx
  41e650:	add    bl,dl
  41e652:	jnp    0x41e665
  41e654:	retf   
  41e655:	cdq    
  41e656:	lock and esp,edi
  41e659:	fwait
  41e65a:	lods   al,BYTE PTR ds:[esi]
  41e65b:	icebp  
  41e65c:	aaa    
  41e65d:	call   FWORD PTR [eax-0x3288fac0]
  41e663:	sub    DWORD PTR [ebp+0x3a],edx
  41e666:	int    0x35
  41e668:	out    dx,eax
  41e669:	mov    ecx,0x2a75136d
  41e66e:	std    
  41e66f:	add    BYTE PTR [ecx],ah
  41e671:	mov    edi,0xd4935e8c
  41e676:	popf   
  41e677:	push   edi
  41e678:	push   ss
  41e679:	sub    al,dh
  41e67b:	mov    ch,0xca
  41e67d:	sub    eax,0xd987c311
  41e682:	ret    
  41e683:	add    eax,0x4825dc75
  41e688:	push   0x7a
  41e68a:	inc    esp
  41e68b:	hlt    
  41e68c:	sub    al,0xfd
  41e68e:	pop    ds
  41e68f:	sub    BYTE PTR [ecx],0x8e
  41e692:	push   ebp
  41e693:	xchg   ebp,eax
  41e694:	enter  0x603f,0xf
  41e698:	mov    dh,0x7b
  41e69a:	cmp    edi,0xe09a37cd
  41e6a0:	dec    edx
  41e6a1:	xlat   BYTE PTR ds:[ebx]
  41e6a2:	icebp  
  41e6a3:	ror    BYTE PTR [ebx],1
  41e6a5:	in     eax,0x31
  41e6a7:	sbb    dl,ch
  41e6a9:	and    eax,0x8168f9b7
  41e6ae:	dec    ecx
  41e6af:	cmp    al,0x4c
  41e6b1:	js     0x41e707
  41e6b3:	jno    0x41e6d3
  41e6b5:	pop    esi
  41e6b6:	mov    cs,WORD PTR [ecx]
  41e6b8:	sub    al,0x65
  41e6ba:	push   esp
  41e6bb:	cmp    BYTE PTR [ecx-0x1b],bh
  41e6be:	inc    edx
  41e6bf:	fmulp  st(7),st
  41e6c1:	adc    edx,ebp
  41e6c3:	lods   al,BYTE PTR ds:[esi]
  41e6c4:	loope  0x41e731
  41e6c6:	inc    edi
  41e6c7:	cwde   
  41e6c8:	xlat   BYTE PTR fs:[ebx]
  41e6ca:	push   ebx
  41e6cb:	lahf   
  41e6cc:	std    
  41e6cd:	dec    esp
  41e6ce:	mov    ebp,esp
  41e6d0:	xchg   ecx,eax
  41e6d1:	cmp    BYTE PTR ds:0x1c67a229,dh
  41e6d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6d8:	push   edi
  41e6d9:	inc    esp
  41e6da:	mov    al,0x1b
  41e6dc:	jg     0x41e66c
  41e6de:	ins    DWORD PTR es:[edi],dx
  41e6df:	xchg   cl,dh
  41e6e1:	jns    0x41e71b
  41e6e3:	pushf  
  41e6e4:	mov    DWORD PTR [esp+ebp*4+0x56c7ba89],0x2d9ce1eb
  41e6ef:	(bad)  
  41e6f0:	data16 mov dl,0xba
  41e6f3:	in     al,dx
  41e6f4:	inc    ebx
  41e6f5:	add    DWORD PTR [edx],0xffffff90
  41e6f8:	jb     0x41e753
  41e6fa:	sbb    bh,ch
  41e6fc:	out    0x89,al
  41e6fe:	jns    0x41e731
  41e700:	cdq    
  41e701:	jmp    0x41e77f
  41e703:	test   al,0xd4
  41e705:	mov    ch,BYTE PTR [esi-0x53e0686f]
  41e70b:	mov    ds:0x9b6ddfc2,eax
  41e710:	mov    bl,0xf9
  41e712:	fucom  st(0)
  41e714:	out    0x88,al
  41e716:	in     al,dx
  41e717:	cwde   
  41e718:	idiv   BYTE PTR [ecx-0x17f3ff58]
  41e71e:	or     al,0x0
  41e720:	js     0x41e6be
  41e722:	test   eax,0xe414a844
  41e727:	mov    ch,0xf9
  41e729:	sahf   
  41e72a:	les    esi,FWORD PTR [eax+ebp*1-0x27cb3f34]
  41e731:	les    esp,FWORD PTR [ebp+0x4]
  41e734:	call   0xf937f936
  41e739:	mov    ebp,0xee91600
  41e73e:	cmp    eax,0xc10f18f4
  41e743:	es enter 0x282c,0xd4
  41e748:	cmp    BYTE PTR [eax+0x3b],ch
  41e74b:	pusha  
  41e74c:	mov    eax,ss
  41e74e:	int    0x38
  41e750:	fdivr  QWORD PTR [eax+0x10f6e804]
  41e756:	hlt    
  41e757:	pop    eax
  41e758:	adc    al,0xfe
  41e75a:	inc    esp
  41e75b:	or     BYTE PTR [edi],dl
  41e75d:	lock adc al,0x60
  41e760:	cld    
  41e761:	and    BYTE PTR [esi],cl
  41e763:	xor    al,0xcc
  41e765:	xor    BYTE PTR [eax+ebx*8],bl
  41e768:	cmp    al,0x5e
  41e76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e76b:	dec    edx
  41e76c:	mov    cl,0x10
  41e76e:	add    BYTE PTR [eax+0x43],bl
  41e771:	sub    al,0xcc
  41e774:	adc    ah,dh
  41e776:	fcomp  DWORD PTR ds:0x4c80f809
  41e77c:	adc    BYTE PTR ds:0xdee81cf8,dh
  41e782:	push   0xd89f7fcc
  41e787:	xor    al,0xa0
  41e789:	inc    esp
  41e78a:	xor    DWORD PTR [eax+edx*2+0x1a5cb8d8],ebp
  41e791:	test   DWORD PTR [ecx+eax*8-0x70],esp
  41e795:	je     0x41e71b
  41e797:	popf   
  41e798:	xchg   ebx,eax
  41e799:	mov    BYTE PTR fs:[ebx-0xc],dh
  41e79d:	sbb    BYTE PTR [eax+eax*8+0x24],dl
  41e7a1:	xchg   BYTE PTR [ecx+0x52],ah
  41e7a4:	push   edi
  41e7a5:	sbb    DWORD PTR [ecx+eiz*1],ecx
  41e7a8:	and    ch,BYTE PTR [esi]
  41e7aa:	cs dec ebx
  41e7ac:	add    bh,BYTE PTR [eax]
  41e7ae:	pop    esi
  41e7af:	ret    
  41e7b0:	test   DWORD PTR [esi-0x31],esi
  41e7b3:	repnz aaa 
  41e7b5:	js     0x41e80e
  41e7b7:	mov    al,ds:0xb7aca884
  41e7bc:	sar    DWORD PTR [ecx+0x498001c7],cl
  41e7c2:	xchg   BYTE PTR [eax+0x456070b4],dl
  41e7c8:	sub    bh,bl
  41e7ca:	jo     0x41e81f
  41e7cc:	stc    
  41e7cd:	jno    0x41e790
  41e7cf:	push   0x976c0c68
  41e7d4:	pop    eax
  41e7d5:	push   edx
  41e7d6:	mov    ds:0x908cd084,al
  41e7db:	test   al,0xb8
  41e7dd:	xchg   DWORD PTR [ecx-0x4bf13051],eax
  41e7e3:	fst    DWORD PTR [edi]
  41e7e5:	push   ds
  41e7e6:	out    0x25,eax
  41e7e8:	enter  0xd76d,0xb5
  41e7ec:	shl    DWORD PTR [edi-0x2fe4be3a],1
  41e7f2:	je     0x41e822
  41e7f4:	inc    edx
  41e7f5:	in     al,0xb7
  41e7f7:	mov    ds:0xfab2d580,eax
  41e7fc:	mov    ebp,0xa9f8afc2
  41e801:	sbb    bh,BYTE PTR [ebp-0x3e21217e]
  41e807:	enter  0x10cc,0xdf
  41e80b:	lea    edi,[eax-0x12770631]
  41e811:	hlt    
  41e812:	nop
  41e813:	stc    
  41e814:	push   0x68
  41e816:	add    eax,0x99f4c785
  41e81b:	jge    0x41e7ae
  41e81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e81e:	test   al,0x22
  41e820:	fdiv   DWORD PTR [ebp+0x54c1d437]
  41e826:	popf   
  41e827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e828:	rol    DWORD PTR [ebp-0x50],1
  41e82b:	fnsave [edx-0x74]
  41e82e:	jmp    0x4d3780b2
  41e833:	push   ss
  41e834:	add    ah,BYTE PTR [ebx+0x9]
  41e837:	mov    ecx,0x7c1b1578
  41e83c:	and    BYTE PTR [ebp+0x16],al
  41e83f:	int3   
  41e840:	cmp    DWORD PTR [esp+edi*4-0x34],eax
  41e844:	bound  ecx,QWORD PTR [edx-0x27342f2d]
  41e84a:	ret    
  41e84b:	loopne 0x41e848
  41e84d:	call   0xe765d945
  41e852:	cld    
  41e853:	pop    ds
  41e854:	add    al,0x1
  41e856:	or     al,0x30
  41e858:	cmp    bl,BYTE PTR [eax]
  41e85a:	xor    al,0x6
  41e85c:	and    al,0x47
  41e85e:	das    
  41e85f:	pop    ebp
  41e860:	sbb    edi,DWORD PTR [eax]
  41e862:	je     0x41e8c4
  41e864:	and    dh,BYTE PTR [ecx+0x4c]
  41e867:	aam    0x4b
  41e869:	pop    eax
  41e86a:	push   esi
  41e86b:	in     eax,0xcd
  41e86d:	inc    eax
	...
  41e876:	add    BYTE PTR [eax],al
  41e878:	test   eax,0x824d5419
  41e87d:	add    eax,DWORD PTR [eax]
  41e87f:	add    BYTE PTR [eax],al
  41e881:	add    BYTE PTR [eax],al
  41e883:	add    BYTE PTR [edx+0x1f000003],al
  41e889:	add    BYTE PTR [esi],ah
  41e88b:	jl     0x41e88d
  41e88d:	add    dh,BYTE PTR [esi]
  41e88f:	or     BYTE PTR [eax],al
  41e891:	add    BYTE PTR [ebp+0x814d44f],dl
  41e897:	or     eax,0xc109500
  41e89c:	and    DWORD PTR [eax],eax
  41e89e:	and    BYTE PTR [edi],ch
  41e8a0:	aam    0x1
  41e8a2:	cmp    edi,DWORD PTR [eax]
  41e8a4:	ret    0x4a4c
  41e8a7:	dec    esi
  41e8a8:	je     0x41e900
  41e8aa:	pop    ebp
  41e8ab:	sub    al,BYTE PTR [eax+0x64]
  41e8ae:	lods   eax,DWORD PTR ds:[esi]
  41e8af:	xchg   ebx,eax
  41e8b0:	jo     0x41e906
  41e8b2:	idiv   BYTE PTR [eax+ebp*8-0x7c]
  41e8b6:	mov    al,ds:0x951b9008
  41e8bb:	icebp  
  41e8bc:	stos   DWORD PTR es:[edi],eax
  41e8bd:	sub    BYTE PTR [edx+edi*4-0xe],ah
  41e8c1:	mov    bh,0x3c
  41e8c3:	(bad)  
  41e8c4:	aam    0x48
  41e8c6:	mov    DWORD PTR [eax-0x2b],0x64275df6
  41e8cd:	dec    ebp
  41e8ce:	ins    BYTE PTR es:[edi],dx
  41e8cf:	cmp    dh,ah
  41e8d1:	jns    0x41e90e
  41e8d3:	add    BYTE PTR [esi-0x2c807314],0x18
  41e8da:	loope  0x41e87c
  41e8dc:	jns    0x41e875
  41e8de:	in     eax,dx
  41e8df:	mov    al,0xa0
  41e8e1:	clc    
  41e8e2:	mov    esp,0x5685c789
  41e8e7:	imul   edi,esi,0x60
  41e8ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8eb:	pop    ecx
  41e8ec:	mov    ds:0xbf4f956f,eax
  41e8f1:	inc    ecx
  41e8f2:	int    0x80
  41e8f4:	mov    DWORD PTR [ebp+0x1c19d591],ecx
  41e8fa:	and    DWORD PTR [esi],esp
  41e8fc:	sub    ebp,DWORD PTR [eax]
  41e8fe:	xor    eax,0x483bb832
  41e903:	dec    ebp
  41e904:	inc    edx
  41e905:	inc    edi
  41e906:	pop    esp
  41e907:	pop    ecx
  41e908:	push   esi
  41e909:	fsubr  QWORD PTR [edi+0x74]
  41e90c:	jns    0x41e98c
  41e90e:	out    0xec,eax
  41e910:	jmp    0x14616d2b
  41e915:	or     DWORD PTR [esi],ecx
  41e917:	add    eax,DWORD PTR [eax]
  41e919:	cmp    eax,0x1033a83a
  41e91e:	adc    eax,0x61641f1a
  41e923:	outs   dx,BYTE PTR ds:[esi]
  41e924:	int3   
  41e925:	ja     0x41e9a3
  41e927:	jno    0x41e99f
  41e929:	dec    ebx
  41e92a:	dec    eax
  41e92b:	inc    ebp
  41e92c:	inc    edx
  41e92d:	lock pop ebx
  41e92f:	dec    eax
  41e930:	dec    ebp
  41e931:	mov    dl,0xb7
  41e933:	mov    esp,0xaf14a6b9
  41e938:	sbb    BYTE PTR ds:0x90c1712,bl
  41e93e:	push   es
  41e93f:	mov    esp,0xe09047f
  41e944:	adc    edx,DWORD PTR [eax]
  41e946:	sbb    eax,0x2023e01a
  41e94b:	and    eax,0x31343f3a
  41e950:	into   
  41e951:	add    al,0xc7
  41e953:	fadd   st(1),st
  41e955:	(bad)  
  41e956:	retf   
  41e957:	enter  0xf2f5,0x28
  41e95b:	sti    
  41e95c:	call   0x9d29cc4e
  41e961:	adc    eax,0x380bd012
  41e966:	cmp    eax,0x90c0702
  41e96b:	push   ss
  41e96c:	hlt    
  41e96d:	pop    ds
  41e96e:	adc    al,0xe9
  41e970:	out    dx,al
  41e971:	jecxz  0x41e953
  41e973:	std    
  41e974:	cli    
  41e975:	sbb    bl,dh
  41e977:	rcl    ch,1
  41e979:	fcmovu st,st(7)
  41e97b:	(bad)
  41e97f:	mov    bh,0xbc
  41e981:	mov    cl,0xb6
  41e983:	stos   DWORD PTR es:[edi],eax
  41e984:	test   al,0xa5
  41e986:	mov    ds:0xf1689b60,al
  41e98b:	idiv   bl
  41e98d:	clc    
  41e98e:	add    eax,0x180b0802
  41e993:	sbb    eax,0x292c1712
  41e998:	es sub al,0x3f
  41e99b:	and    al,0x29
  41e99d:	cs push ebx
  41e99f:	push   eax
  41e9a0:	pop    ebp
  41e9a1:	pop    edx
  41e9a2:	push   eax
  41e9a3:	inc    ebx
  41e9a4:	inc    eax
  41e9a5:	inc    ebp
  41e9a6:	jp     0x41ea27
  41e9a8:	je     0x41ea1b
  41e9aa:	outs   dx,BYTE PTR ds:[esi]
  41e9ab:	je     0x41ea14
  41e9ad:	pop    esp
  41e9ae:	mov    eax,ds:0xb5a8aba6
  41e9b3:	mov    dl,0x1c
  41e9b5:	pop    es
  41e9b6:	or     al,0x1
  41e9b8:	push   es
  41e9b9:	sbb    ebx,DWORD PTR [eax]
  41e9bb:	adc    eax,0x786b4012
  41e9c0:	jge    0x41ea24
  41e9c2:	ins    BYTE PTR es:[di],dx
  41e9c4:	imul   edx,DWORD PTR [esi+0x64],0x4e49545f
  41e9cb:	inc    ebx
  41e9cc:	inc    eax
  41e9cd:	mov    ebp,0xd0b388ba
  41e9d2:	cmc    
  41e9d3:	cli    
  41e9d4:	inc    esp
  41e9d6:	ror    esi,0xac
  41e9d9:	xlat   BYTE PTR ds:[ebx]
  41e9da:	(bad)  
  41e9dc:	(bad)  
  41e9dd:	das    
  41e9de:	and    al,0x21
  41e9e0:	ds push esp
  41e9e2:	aaa    
  41e9e3:	sub    al,0x11
  41e9e5:	push   ss
  41e9e6:	sbb    ebx,DWORD PTR [eax]
  41e9e8:	add    eax,0xf80b7802
  41e9ed:	std    
  41e9ee:	repnz xlat BYTE PTR ds:[ebx]
  41e9f0:	int3   
  41e9f1:	leave  
  41e9f2:	(bad)  
  41e9f3:	cwde   
  41e9f4:	inc    esp
  41e9f6:	pop    edi
  41e9f7:	scas   eax,DWORD PTR es:[edi]
  41e9f8:	retf   
  41e9f9:	enter  0xc2c5,0xbf
  41e9fd:	cmp    esi,DWORD PTR [edi]
  41e9ff:	shr    DWORD PTR [edi],cl
  41ea01:	retf   
  41ea02:	daa    
  41ea03:	ret    
  41ea04:	pop    ss
  41ea05:	sti    
  41ea06:	xchg   ebx,eax
  41ea07:	jg     0x41e994
  41ea09:	ja     0x41e98e
  41ea0b:	(bad)  
  41ea0c:	jnp    0x41e9b5
  41ea0e:	(bad)  
  41ea0f:	outs   dx,DWORD PTR ds:[esi]
  41ea10:	mov    ebx,0xe6e1b36c
  41ea15:	jmp    0x41e9ff
  41ea17:	cmc    
  41ea18:	repnz mov eax,0x828d88fb
  41ea1e:	xchg   DWORD PTR [ecx+ebx*4-0x4b50236a],ebx
  41ea25:	mov    ecx,0xada0a3be
  41ea2a:	stos   BYTE PTR es:[edi],al
  41ea2b:	lock push ebx
  41ea2d:	push   eax
  41ea2e:	push   ebp
  41ea2f:	dec    edx
  41ea30:	jnp    0x41e9e5
  41ea32:	push   edi
  41ea33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea34:	push   edi
  41ea35:	or     DWORD PTR [edi-0x55],0xffffffbb
  41ea39:	inc    ebx
  41ea3a:	fistp  QWORD PTR [eax]
  41ea3c:	xlat   BYTE PTR ds:[ebx]
  41ea3d:	mov    esi,DWORD PTR [ebp-0x70517760]
  41ea43:	in     al,0x8b
  41ea45:	mov    DWORD PTR [ebx+0x6e95af87],eax
  41ea4b:	pusha  
  41ea4c:	or     BYTE PTR [ebx+0x67],ah
  41ea4f:	inc    edi
  41ea50:	ins    BYTE PTR es:[edi],dx
  41ea51:	jge    0x41eaa7
  41ea53:	dec    ebp
  41ea54:	inc    edi
  41ea55:	sub    BYTE PTR [esi+0x34],bl
  41ea58:	fadd   st,st(2)
  41ea5a:	xchg   ecx,eax
  41ea5b:	mov    ebx,0xd89ba2a9
  41ea60:	mov    esi,0x988b818a
  41ea65:	mov    ecx,0x6f949e9a
  41ea6a:	jbe    0x41ead1
  41ea6c:	push   cs
  41ea6d:	adc    eax,DWORD PTR [ebx+0x78]
  41ea70:	jp     0x41eab2
  41ea72:	daa    
  41ea73:	fs sub al,0x51
  41ea76:	inc    edi
  41ea77:	dec    esp
  41ea78:	jge    0x41ea9d
  41ea7a:	xor    BYTE PTR [ecx],ah
  41ea7c:	cmp    dl,BYTE PTR [eax+0x10330831]
  41ea82:	popf   
  41ea83:	pushf  
  41ea84:	xchg   edx,eax
  41ea85:	neg    BYTE PTR [ebx]
  41ea87:	std    
  41ea88:	or     edi,eax
  41ea8a:	add    BYTE PTR [ebx*2+0x477d1234],cl
  41ea91:	inc    ecx
  41ea92:	push   0x2c
  41ea94:	pop    edi
  41ea95:	dec    esp
  41ea96:	outs   dx,DWORD PTR ds:[esi]
  41ea97:	cmp    al,0x15
  41ea99:	inc    esp
  41ea9a:	sbb    ecx,DWORD PTR [eax+edx*2+0x11]
  41ea9e:	pop    eax
  41ea9f:	push   cs
  41eaa0:	pusha  
  41eaa1:	push   edi
  41eaa2:	push   0x5614705e
  41eaa7:	jl     0x41ea6d
  41eaa9:	test   ah,al
  41eaab:	lods   al,BYTE PTR ds:[esi]
  41eaac:	adc    al,0x19
  41eaae:	sbb    al,0x41
  41eab0:	and    al,0x4d
  41eab2:	pop    edi
  41eab3:	xor    al,bh
  41eab5:	adc    DWORD PTR [ebx+0xb],esi
  41eab8:	je     0x41eb02
  41eaba:	add    eax,0x7aa1fb75
  41eabf:	jge    0x41ea67
  41eac1:	mov    esi,0x8900a56c
  41eac6:	inc    ebp
  41eac7:	and    ah,BYTE PTR [edx*4-0xf106f46]
  41eace:	inc    esi
  41eacf:	inc    ebx
  41ead0:	retf   
  41ead1:	jns    0x41eaf1
  41ead3:	pop    ss
  41ead4:	mov    ah,0xb5
  41ead6:	push   0x3e
  41ead8:	scas   al,BYTE PTR es:[edi]
  41ead9:	jbe    0x41ea5b
  41eadb:	jae    0x41eb18
  41eadd:	pop    esp
  41eade:	mul    DWORD PTR [ecx+0x7411040d]
  41eae4:	out    0xe1,eax
  41eae6:	xor    bl,0xb4
  41eae9:	jp     0x41eaec
  41eaeb:	dec    ebp
  41eaec:	push   ebx
  41eaed:	imul   esi,DWORD PTR [ecx-0x5c],0x1bb5036e
  41eaf4:	fwait
  41eaf5:	stos   DWORD PTR es:[edi],eax
  41eaf6:	adc    ch,BYTE PTR [eax]
  41eaf8:	enter  0x74a6,0x91
  41eafc:	std    
  41eafd:	cld    
  41eafe:	hlt    
  41eaff:	cwde   
  41eb00:	and    dl,BYTE PTR [eax+0x5d]
  41eb03:	push   edi
  41eb04:	add    edx,edx
  41eb06:	pop    es
  41eb07:	push   0x987dbed6
  41eb0c:	aaa    
  41eb0d:	mov    ch,0x8d
  41eb0f:	jl     0x41eb1a
  41eb11:	adc    bl,bh
  41eb13:	pusha  
  41eb14:	mov    esp,0x3d91cc62
  41eb19:	rcr    al,0xdd
  41eb1c:	xor    ah,al
  41eb1e:	bound  edi,QWORD PTR [edi-0x524c69db]
  41eb24:	push   esi
  41eb25:	jmp    0xce7dad2e
  41eb2a:	mov    esi,0xbbe29366
  41eb2f:	lods   al,BYTE PTR ds:[esi]
  41eb30:	cmp    bh,BYTE PTR [esi]
  41eb32:	std    
  41eb33:	inc    eax
  41eb34:	(bad)  
  41eb35:	pushf  
  41eb36:	bound  esi,QWORD PTR [edi]
  41eb38:	shl    BYTE PTR [ecx+0x57a0961d],1
  41eb3e:	xchg   ebx,eax
  41eb3f:	es dec eax
  41eb41:	hlt    
  41eb42:	loope  0x41eb7b
  41eb44:	inc    edx
  41eb45:	dec    ebp
  41eb46:	mov    ds:0x18d11435,eax
  41eb4b:	fs pop edx
  41eb4d:	push   edx
  41eb4e:	mov    bh,0x21
  41eb50:	mov    BYTE PTR [edi+0xd9dc01a],al
  41eb56:	mov    esi,0x522d7162
  41eb5b:	sbb    al,0xe4
  41eb5d:	fisttp QWORD PTR [ecx+eiz*1]
  41eb60:	mov    dl,0xf9
  41eb62:	cmp    ebp,esp
  41eb64:	add    BYTE PTR [eax],cl
  41eb66:	pop    ss
  41eb67:	xor    al,0x96
  41eb69:	cli    
  41eb6a:	sub    DWORD PTR [ebx],0x46
  41eb6d:	push   ecx
  41eb6e:	sub    al,0x33
  41eb70:	popf   
  41eb71:	inc    esp
  41eb72:	dec    ebx
  41eb73:	fwait
  41eb74:	dec    ebp
  41eb75:	out    dx,eax
  41eb76:	ficom  DWORD PTR [eax-0x70]
  41eb79:	mov    dh,0xa5
  41eb7b:	sub    cl,0xe2
  41eb7e:	retf   
  41eb7f:	and    edi,eax
  41eb81:	or     dl,BYTE PTR [eax-0x6c]
  41eb84:	mov    cl,0x9c
  41eb86:	loop   0x41eb73
  41eb88:	jae    0x41eba6
  41eb8a:	cdq    
  41eb8b:	(bad)  
  41eb8c:	fwait
  41eb8d:	push   0x1b
  41eb8f:	daa    
  41eb90:	dec    ebp
  41eb91:	(bad)  
  41eb92:	inc    eax
  41eb93:	sbb    al,0xc5
  41eb95:	fimul  DWORD PTR [ebp-0x12]
  41eb98:	hlt    
  41eb99:	(bad)  
  41eb9b:	fs xchg ebp,eax
  41eb9d:	adc    edx,0x3f
  41eba0:	push   eax
  41eba1:	je     0x41eb95
  41eba3:	jne    0x41ebb1
  41eba5:	int3   
  41eba6:	jno    0x41ebd4
  41eba8:	add    BYTE PTR [ecx+0x3094b9e5],dl
  41ebae:	add    bl,ch
  41ebb0:	lahf   
  41ebb1:	test   al,0xed
  41ebb3:	dec    edx
  41ebb4:	das    
  41ebb5:	xchg   ebx,eax
  41ebb6:	push   esp
  41ebb7:	daa    
  41ebb8:	xchg   esi,eax
  41ebb9:	int    0x15
  41ebbb:	push   cs
  41ebbc:	pop    edi
  41ebbd:	cdq    
  41ebbe:	mov    bh,BYTE PTR [eax-0x51]
  41ebc1:	leave  
  41ebc2:	add    bl,ah
  41ebc4:	and    cl,BYTE PTR ds:0x1b9c582f
  41ebca:	call   0xe4ce:0x8d1a4a19
  41ebd1:	inc    esp
  41ebd2:	lahf   
  41ebd3:	dec    edi
  41ebd4:	lea    edx,[edx-0x5561bfbf]
  41ebda:	push   0x79266942
  41ebdf:	sahf   
  41ebe0:	jmp    0x41ebc6
  41ebe2:	fmul   DWORD PTR [ebp+ebp*1+0x4f8bab70]
  41ebe9:	mov    eax,0xa8b0f7d9
  41ebee:	sti    
  41ebef:	icebp  
  41ebf0:	push   ecx
  41ebf1:	xchg   ebx,eax
  41ebf2:	test   BYTE PTR [ebp+0x36],0xd4
  41ebf6:	adc    al,0xea
  41ebf8:	cs out dx,al
  41ebfa:	mov    ch,0xc6
  41ebfc:	push   DWORD PTR [ecx-0x41ffb584]
  41ec02:	sub    eax,0x37
  41ec07:	add    BYTE PTR [ecx+0x17],bl
  41ec0a:	fs inc esi
  41ec0c:	push   ecx
  41ec0d:	or     DWORD PTR [eax],eax
  41ec0f:	add    BYTE PTR [eax],al
  41ec11:	add    BYTE PTR [eax],al
  41ec13:	add    BYTE PTR [ecx+0x9],dl
  41ec16:	add    BYTE PTR [eax],al
  41ec18:	and    BYTE PTR [eax],al
  41ec1a:	es jl  0x41ec1d
  41ec1d:	add    dh,BYTE PTR [esi]
  41ec1f:	or     BYTE PTR [eax],al
  41ec21:	add    ah,al
  41ec23:	inc    ebp
  41ec24:	add    BYTE PTR [ebp-0x15],dh
  41ec27:	jp     0x41ec01
  41ec29:	out    0x5c,al
  41ec2b:	js     0x41ecaa
  41ec2d:	and    al,0xd8
  41ec2f:	iret   
  41ec30:	leave  
  41ec31:	xor    esp,edx
  41ec33:	and    al,0xfd
  41ec35:	jge    0x41ec7f
  41ec37:	test   DWORD PTR [esp+ebx*8+0x4b602861],eax
  41ec3e:	test   DWORD PTR [edx+esi*1+0x3f],ebp
  41ec42:	fsubr  DWORD PTR [eax+0x18]
  41ec45:	jnp    0x41ec82
  41ec47:	pusha  
  41ec48:	nop
  41ec49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec4a:	dec    edx
  41ec4b:	leave  
  41ec4c:	je     0x41ec4e
  41ec4e:	inc    ebp
  41ec4f:	fucomp st(1)
  41ec51:	cmp    BYTE PTR [edx+0x1e3da87c],dh
  41ec57:	popa   
  41ec58:	fucompp 
  41ec5a:	pop    esp
  41ec5b:	and    al,0xe0
  41ec5d:	inc    edx
  41ec5e:	xchg   ebp,eax
  41ec5f:	lods   al,BYTE PTR ds:[esi]
  41ec60:	pop    eax
  41ec61:	jg     0x41ec57
  41ec63:	sub    BYTE PTR [esi-0x56],0x3b
  41ec67:	in     eax,0xee
  41ec69:	jl     0x41ec68
  41ec6b:	mov    WORD PTR [edi+edi*1+0x5eafbf0],fs
  41ec72:	pop    edx
  41ec73:	(bad)  
  41ec75:	dec    esp
  41ec76:	push   ebx
  41ec77:	loop   0x41ec1d
  41ec79:	leave  
  41ec7a:	loopne 0x41ec01
  41ec7c:	mov    eax,0x7eaa70f3
  41ec81:	sbb    BYTE PTR [esi],ch
  41ec83:	call   0x949a7056
  41ec88:	outs   dx,DWORD PTR ds:[esi]
  41ec89:	mov    dh,0xd7
  41ec8b:	jae    0x41eca2
  41ec8d:	lea    edi,[ecx+0x435fb8f6]
  41ec93:	dec    ebx
  41ec94:	adc    ebp,edx
  41ec96:	adc    ecx,DWORD PTR [ecx]
  41ec98:	jo     0x41ec76
  41ec9a:	or     cl,BYTE PTR [eax-0x175cae17]
  41eca0:	cld    
  41eca1:	test   BYTE PTR fs:[ecx+eiz*1+0x1e],ch
  41eca6:	test   DWORD PTR [ebx],ebx
  41eca8:	dec    edx
  41eca9:	push   cs
  41ecaa:	xor    DWORD PTR [eax+0x15ce6a0a],ebp
  41ecb0:	adc    BYTE PTR [ebx],dh
  41ecb2:	jg     0x41ec4d
  41ecb4:	int3   
  41ecb5:	(bad)  
  41ecb6:	ins    DWORD PTR es:[edi],dx
  41ecb7:	push   ebp
  41ecb8:	fsub   QWORD PTR [edi-0xf5178d5]
  41ecbe:	jmp    0xc02c882f
  41ecc3:	jmp    0x63561262
  41ecc8:	mov    cl,0xc
  41ecca:	in     eax,0xe2
  41eccc:	cmp    DWORD PTR [eax],eax
  41ecce:	xchg   DWORD PTR [edx+eax*2-0x77118bae],edi
  41ecd5:	push   edx
  41ecd6:	popa   
  41ecd7:	shl    eax,1
  41ecd9:	or     al,0xf1
  41ecdb:	mov    ds:0xcce14083,eax
  41ece0:	mov    WORD PTR [esp+ebp*2],es
  41ece3:	daa    
  41ece4:	ror    edi,1
  41ece6:	ins    DWORD PTR es:[edi],dx
  41ece7:	(bad)
  41ecec:	push   ecx
  41eced:	add    DWORD PTR [edx+0x68d95a56],edx
  41ecf3:	shl    BYTE PTR [esi+0x13],1
  41ecf6:	ins    BYTE PTR es:[edi],dx
  41ecf7:	cmc    
  41ecf8:	movaps xmm4,XMMWORD PTR [eax+0x3]
  41ecfc:	hlt    
  41ecfd:	or     BYTE PTR [esi+0x21],bl
  41ed00:	inc    ebx
  41ed01:	nop
  41ed02:	cmp    eax,0x2218d259
  41ed07:	cdq    
  41ed08:	outs   dx,BYTE PTR ds:[esi]
  41ed09:	push   esi
  41ed0a:	xor    edx,esi
  41ed0c:	loop   0x41ed23
  41ed0e:	cmp    al,0x25
  41ed10:	frstor [esi+0x58d73abb]
  41ed16:	popf   
  41ed17:	pusha  
  41ed18:	xchg   DWORD PTR [ebp+0x5908d7ec],ecx
  41ed1e:	mov    ds:0x44a20896,al
  41ed23:	ins    DWORD PTR es:[edi],dx
  41ed24:	mov    ecx,0x9516253b
  41ed29:	sub    al,0xe8
  41ed2b:	xchg   edx,eax
  41ed2c:	out    0x92,al
  41ed2e:	mov    al,0x1
  41ed30:	sub    al,0xc8
  41ed32:	push   eax
  41ed33:	jbe    0x41ecda
  41ed35:	in     al,dx
  41ed36:	(bad)  
  41ed37:	jne    0x41ed9f
  41ed39:	pop    es
  41ed3a:	mov    ah,0x74
  41ed3c:	js     0x41ed6e
  41ed3e:	cmovo  esp,DWORD PTR gs:[eax-0x68]
  41ed43:	inc    eax
  41ed44:	sbb    al,0x21
  41ed46:	mov    ch,0xe
  41ed48:	(bad)  
  41ed49:	in     al,dx
  41ed4a:	out    0x55,eax
  41ed4c:	sub    al,0x40
  41ed4e:	jmp    0x41edb4
  41ed50:	pop    edx
  41ed51:	xor    DWORD PTR ds:0x6442c3ca,ebx
  41ed57:	imul   esp,eax,0x3f
  41ed5a:	test   al,0x15
  41ed5c:	mov    dl,0x99
  41ed5e:	mov    BYTE PTR cs:[edx+0x33],dl
  41ed62:	mov    cl,0xc6
  41ed64:	mov    DWORD PTR [esi],esi
  41ed66:	or     DWORD PTR [ecx-0x787b454],ebp
  41ed6c:	jne    0x41ed8c
  41ed6e:	(bad)  
  41ed6f:	push   ebp
  41ed70:	jae    0x41edc6
  41ed72:	pop    eax
  41ed73:	ror    BYTE PTR [ebp-0x3bafcd05],cl
  41ed79:	mov    dl,0x78
  41ed7b:	pushf  
  41ed7c:	xchg   ebp,eax
  41ed7d:	mov    al,0x1f
  41ed7f:	imul   esp,DWORD PTR [eax+eiz*2+0x4b],0xffffff9c
  41ed84:	int    0xa0
  41ed86:	or     al,0xcb
  41ed88:	rcr    dl,cl
  41ed8a:	std    
  41ed8b:	adc    eax,eax
  41ed8d:	dec    edx
  41ed8e:	repz push eax
  41ed90:	loope  0x41eda8
  41ed92:	ret    0x2951
  41ed95:	in     al,0x73
  41ed97:	cli    
  41ed98:	sti    
  41ed99:	or     DWORD PTR [edx-0x738169e9],ebp
  41ed9f:	mov    BYTE PTR [ebx-0x58],bl
  41eda2:	xor    al,0x7b
  41eda4:	mov    esi,0x2eb08e26
  41eda9:	add    dh,0x1c
  41edac:	jmp    0x41ed70
  41edae:	shl    esi,0xd4
  41edb1:	cmp    al,0x7a
  41edb3:	inc    esi
  41edb4:	and    eax,edi
  41edb6:	leave  
  41edb7:	push   0xffffff82
  41edb9:	clc    
  41edba:	sti    
  41edbb:	mov    dl,0x9d
  41edbd:	retf   
  41edbe:	mov    ds:0xa0035d07,al
  41edc3:	test   BYTE PTR [esi+0x615dd921],ch
  41edc9:	pop    ebp
  41edca:	cmp    al,0xc4
  41edcc:	and    DWORD PTR [edx+0x407cb088],edi
  41edd2:	shl    DWORD PTR [edx-0x18],cl
  41edd5:	lods   eax,DWORD PTR ds:[esi]
  41edd6:	(bad)  
  41edd7:	mov    al,cs:0xe5ef3a2a
  41eddd:	or     al,0xaa
  41eddf:	push   ss
  41ede0:	aas    
  41ede1:	jno    0x41ed71
  41ede3:	out    dx,eax
  41ede4:	xchg   ebp,eax
  41ede5:	xor    dh,BYTE PTR [eax]
  41ede7:	cmp    BYTE PTR [eax-0x7c],dl
  41edea:	adc    eax,0xdf6e2736
  41edef:	fadd   DWORD PTR [eax-0x30247a6d]
  41edf5:	mov    ds:0x84fc4528,al
  41edfa:	pop    edx
  41edfb:	add    dh,al
  41edfd:	dec    eax
  41edfe:	ficomp WORD PTR [edi+0x1a]
  41ee01:	and    BYTE PTR [edx],al
  41ee03:	pop    esp
  41ee04:	dec    edi
  41ee05:	lods   al,BYTE PTR ds:[esi]
  41ee06:	enter  0xd5cc,0x4f
  41ee0a:	inc    esp
  41ee0b:	or     BYTE PTR es:[esi-0x58a2dee2],ah
  41ee12:	mov    ebx,0x715a82ec
  41ee17:	out    dx,al
  41ee18:	call   0x10f2de7b
  41ee1d:	pop    ds
  41ee1e:	and    DWORD PTR [edi],ebx
  41ee20:	xlat   BYTE PTR ds:[ebx]
  41ee21:	rcr    BYTE PTR [esi],1
  41ee23:	add    DWORD PTR [ebx+0x34],esp
  41ee26:	mov    ebp,0x451bfc98
  41ee2b:	cs ins DWORD PTR es:[edi],dx
  41ee2d:	adc    bl,BYTE PTR [eax-0x5d]
  41ee30:	popa   
  41ee31:	mov    al,0xbc
  41ee33:	dec    esi
  41ee34:	fild   WORD PTR ds:0x2bb7c7f
  41ee3a:	paddsb mm3,QWORD PTR [eax]
  41ee3d:	pop    es
  41ee3e:	pop    es
  41ee3f:	and    DWORD PTR [ebx+edi*1],esp
  41ee42:	fcom   QWORD PTR [ebp-0x43a3de41]
  41ee48:	mov    ch,0x48
  41ee4a:	jl     0x41ee0a
  41ee4c:	scas   eax,DWORD PTR es:[edi]
  41ee4d:	inc    ebx
  41ee4e:	aas    
  41ee4f:	jecxz  0x41ee8b
  41ee51:	push   0x2ad0226c
  41ee56:	test   al,0xa7
  41ee58:	push   eax
  41ee59:	inc    ecx
  41ee5a:	lods   al,BYTE PTR ds:[esi]
  41ee5b:	nop
  41ee5c:	fcomp  QWORD PTR [esi-0x572f1513]
  41ee62:	mov    eax,ds:0xc489b41d
  41ee67:	pop    ecx
  41ee68:	popf   
  41ee69:	lods   eax,DWORD PTR ds:[esi]
  41ee6a:	ins    BYTE PTR es:[edi],dx
  41ee6b:	sbb    DWORD PTR [edi],edx
  41ee6d:	pop    esp
  41ee6e:	les    edx,FWORD PTR [eax]
  41ee70:	test   ecx,esp
  41ee72:	lea    esi,[esi+0x73]
  41ee75:	mov    eax,DWORD PTR [eax+0x6b3d1988]
  41ee7b:	test   BYTE PTR [edx+esi*4],ah
  41ee7e:	xchg   BYTE PTR [esi+ebx*8-0x663b8b54],ah
  41ee85:	pop    edx
  41ee86:	mov    ds:0x7946c851,al
  41ee8b:	les    ecx,FWORD PTR [edx]
  41ee8d:	ds test al,0x40
  41ee90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee91:	jo     0x41ee48
  41ee93:	daa    
  41ee94:	sub    BYTE PTR [esi+0x22],dh
  41ee97:	xlat   BYTE PTR ds:[ebx]
  41ee98:	test   al,0xa2
  41ee9a:	xchg   esp,eax
  41ee9b:	xchg   esi,eax
  41ee9c:	and    dh,BYTE PTR [ecx-0x4a]
  41ee9f:	jae    0x41eecd
  41eea1:	aam    0xc4
  41eea3:	mov    eax,0x283d75c6
  41eea8:	ins    BYTE PTR es:[edi],dx
  41eea9:	rcr    DWORD PTR [ecx],cl
  41eeab:	sbb    esp,0xffffffda
  41eeae:	popf   
  41eeaf:	mov    esi,0x4a953183
  41eeb4:	push   0xa1a6d700
  41eeb9:	fisubr DWORD PTR [edx]
  41eebb:	and    DWORD PTR [edx-0x24],edx
  41eebe:	test   al,0x2e
  41eec0:	mov    eax,DWORD PTR [edx+0x6a49028a]
  41eec6:	scas   eax,DWORD PTR es:[edi]
  41eec7:	int3   
  41eec8:	push   0x6f
  41eeca:	lea    ebp,[ebp+0x69]
  41eecd:	jne    0x41ee63
  41eecf:	in     al,dx
  41eed0:	lock fs int 0x44
  41eed4:	or     al,0xfc
  41eed6:	mov    ds:0x1f14c023,eax
  41eedb:	add    eax,0xfb1820c1
  41eee0:	jle    0x41ee71
  41eee2:	mov    esp,0x163d3225
  41eee7:	sbb    BYTE PTR [eax+0xa],dl
  41eeea:	repz loopne 0x41ee99
  41eeed:	(bad)  
  41eeee:	lahf   
  41eeef:	cmp    eax,0x60efecb9
  41eef4:	add    al,0x64
  41eef6:	add    edx,DWORD PTR [ecx]
  41eef8:	push   ss
  41eef9:	out    0x17,al
  41eefb:	daa    
  41eefc:	sub    BYTE PTR [eax],ch
  41eefe:	call   0xc73b:0x217c0046
  41ef05:	dec    ebp
  41ef06:	dec    esp
  41ef07:	dec    edx
  41ef08:	jle    0x41ef76
  41ef0a:	(bad)
  41ef0d:	sbb    eax,0xa7a1f4d4
  41ef12:	stos   BYTE PTR es:[edi],al
  41ef13:	cwde   
  41ef14:	mov    esi,0x18e14485
  41ef19:	or     dl,cl
  41ef1b:	push   ax
  41ef1d:	addr16 (bad) 
  41ef1f:	out    dx,al
  41ef20:	scas   eax,DWORD PTR es:[edi]
  41ef21:	cmp    al,0xfa
  41ef23:	adc    edx,edx
  41ef25:	(bad)  
  41ef26:	jle    0x41ef2f
  41ef28:	out    dx,eax
  41ef29:	push   edi
  41ef2a:	pusha  
  41ef2b:	fwait
  41ef2c:	dec    edx
  41ef2d:	cmp    al,0x65
  41ef2f:	xor    esi,DWORD PTR [eax+0x4f84d781]
  41ef35:	sti    
  41ef36:	dec    ecx
  41ef37:	scas   eax,DWORD PTR es:[edi]
  41ef38:	jl     0x41ef59
  41ef3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef3b:	sub    BYTE PTR [ebx+esi*2],0x42
  41ef3f:	cs sbb ebp,ebx
  41ef42:	cmp    BYTE PTR [ecx-0x7],0x50
  41ef46:	enter  0x38d5,0xd0
  41ef4a:	push   ecx
  41ef4b:	xor    DWORD PTR [ebx],edi
  41ef4d:	mov    DWORD PTR [ebx+edx*8-0x66],esi
  41ef51:	jns    0x41ef56
  41ef53:	ss call 0x44dac779
  41ef59:	(bad)  
  41ef5a:	js     0x41ef73
  41ef5c:	lds    edx,FWORD PTR [edx]
  41ef5e:	js     0x41ef54
  41ef60:	inc    eax
  41ef61:	push   esp
  41ef62:	mov    ah,0xf7
  41ef64:	in     eax,0x43
  41ef66:	jg     0x41ef91
  41ef68:	and    DWORD PTR [esp+edi*4+0x55],0x70
  41ef6d:	jnp    0x41efc2
  41ef6f:	and    al,0xd7
  41ef71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef72:	mov    bh,ch
  41ef74:	dec    eax
  41ef75:	fist   DWORD PTR [edx+0x74]
  41ef78:	mov    cl,bl
  41ef7a:	fisubr WORD PTR [ecx+ecx*8-0x4f77ee1c]
  41ef81:	ss mov ecx,0xe40bd08e
  41ef87:	ds inc edx
  41ef89:	add    edi,esi
  41ef8b:	data16 lock js 0x41ef97
  41ef8f:	leave  
  41ef90:	repz (bad) 
  41ef92:	sub    al,0xd
  41ef94:	or     al,0xfd
  41ef96:	pushf  
  41ef97:	clc    
  41ef98:	mov    bh,0xaa
  41ef9a:	mov    ah,0x7a
  41ef9c:	sar    ah,1
  41ef9e:	sub    eax,0xa74aebc0
  41efa3:	jmp    0xde21da57
  41efa8:	in     al,0x6b
  41efaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efab:	fisub  WORD PTR [eax-0x5fe7d511]
  41efb1:	mov    WORD PTR [edx-0x5d],?
  41efb4:	adc    DWORD PTR [edi-0x28723bad],0x35f75ab0
  41efbe:	or     bh,BYTE PTR [ecx+0x45]
  41efc1:	jae    0x41eff3
  41efc3:	aam    0xf8
  41efc5:	sahf   
  41efc6:	popf   
  41efc7:	into   
  41efc8:	or     DWORD PTR [ebx+0x7bf801bc],edx
  41efce:	cmp    edx,ebx
  41efd0:	push   ss
  41efd1:	add    al,0x34
  41efd3:	add    al,0x6f
  41efd5:	sbb    al,0xa7
  41efd7:	fnstcw WORD PTR [ebx-0x7a]
  41efda:	loop   0x41efad
  41efdc:	fs hlt 
  41efde:	les    edi,FWORD PTR [edx+0x4e44380c]
  41efe4:	jb     0x41effb
  41efe6:	xor    eax,0xf67eeee8
  41efeb:	lock sub DWORD PTR [ebx-0x3b],0xb5210cd9
  41eff3:	inc    ebx
  41eff4:	jge    0x41eff4
  41eff6:	js     0x41efac
  41eff8:	pop    esp
  41eff9:	xor    BYTE PTR [ecx+edx*2-0x74],al
  41effd:	je     0x41f013
  41efff:	push   esp
  41f000:	ror    BYTE PTR [edx-0x28],cl
  41f003:	js     0x41f03e
  41f005:	xchg   BYTE PTR [ebx+0x4a],ch
  41f008:	mov    ch,0xf6
  41f00a:	push   ebp
  41f00b:	cld    
  41f00c:	push   ecx
  41f00d:	add    BYTE PTR [ebx],ch
  41f00f:	dec    ebp
  41f010:	mov    bh,0x89
  41f012:	cdq    
  41f013:	mov    ds:0x331a9920,al
  41f018:	push   edx
  41f019:	cmp    edi,DWORD PTR [ecx]
  41f01b:	push   0xe17544e3
  41f020:	in     al,dx
  41f021:	ja     0x41f077
  41f023:	jle    0x41f026
  41f025:	loope  0x41f08f
  41f027:	and    edi,DWORD PTR [esi-0x4185cedc]
  41f02d:	pop    es
  41f02e:	popa   
  41f02f:	adc    dh,dl
  41f031:	fild   WORD PTR [edi+ecx*1+0x54fe8059]
  41f038:	xor    al,0x2d
  41f03a:	leave  
  41f03b:	cmc    
  41f03c:	jmp    0x3758:0xebb9e01c
  41f043:	sub    eax,0x7831fb71
  41f048:	sbb    ah,al
  41f04a:	jl     0x41f060
  41f04c:	lahf   
  41f04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f04e:	jg     0x41f0cb
  41f050:	sahf   
  41f051:	sbb    al,0x15
  41f053:	mov    al,ds:0xc91a48c6
  41f058:	and    al,0x50
  41f05a:	les    eax,FWORD PTR [esi+0x48]
  41f05d:	stos   DWORD PTR es:[edi],eax
  41f05e:	sbb    al,0x86
  41f060:	mov    WORD PTR [esi-0x55],?
  41f063:	inc    ebp
  41f064:	shr    BYTE PTR [ebx+eiz*1+0x2a],cl
  41f068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f069:	inc    esp
  41f06a:	mov    ?,edi
  41f06c:	mov    al,ds:0xd577902d
  41f071:	daa    
  41f072:	lahf   
  41f073:	lds    esp,FWORD PTR [ecx+0x45b48569]
  41f079:	push   esi
  41f07a:	sub    ah,cl
  41f07c:	inc    ebp
  41f07d:	xor    ecx,DWORD PTR [esi]
  41f07f:	mov    esp,0xacd9d85c
  41f084:	inc    ecx
  41f085:	dec    ecx
  41f086:	mov    WORD PTR [ebx],ss
  41f088:	hlt    
  41f089:	sbb    bh,0xc4
  41f08c:	push   cs
  41f08d:	mov    dh,0x7d
  41f08f:	xchg   DWORD PTR [ebp+0x791fa4dd],ebp
  41f095:	push   0xf03cb88b
  41f09a:	enter  0xb3c8,0x70
  41f09e:	lods   eax,DWORD PTR fs:[esi]
  41f0a0:	sbb    BYTE PTR [edx],0x89
  41f0a3:	aas    
  41f0a4:	in     al,dx
  41f0a5:	fistp  WORD PTR ds:0xd9dbf2e7
  41f0ab:	cmp    ebx,DWORD PTR [eax-0x6c]
  41f0ae:	outs   dx,DWORD PTR ds:[esi]
  41f0af:	test   DWORD PTR [esi-0x76c5eaa9],esp
  41f0b5:	aam    0xb8
  41f0b7:	jnp    0x41f135
  41f0b9:	push   ss
  41f0ba:	cmp    esp,DWORD PTR [esi]
  41f0bc:	loope  0x41f0b2
  41f0be:	sub    bl,ah
  41f0c0:	iret   
  41f0c1:	mov    al,0xc
  41f0c3:	dec    eax
  41f0c4:	xchg   esi,eax
  41f0c5:	inc    BYTE PTR [ebp+0x57]
  41f0c8:	add    BYTE PTR [esp+ebx*1-0x7229ca9d],dl
  41f0cf:	pop    edx
  41f0d0:	aad    0xa8
  41f0d2:	xor    DWORD PTR [edx+0x4328b47b],0xeccc7661
  41f0dc:	(bad)  
  41f0dd:	outs   dx,BYTE PTR ds:[esi]
  41f0de:	lods   al,BYTE PTR ds:[esi]
  41f0df:	xor    al,BYTE PTR [ecx]
  41f0e1:	pop    ebp
  41f0e2:	out    dx,eax
  41f0e3:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0e5:	addr16 xchg edi,eax
  41f0e7:	mov    edx,0x407f511b
  41f0ec:	adc    al,0x7b
  41f0ee:	(bad)  
  41f0ef:	in     al,dx
  41f0f0:	stos   BYTE PTR es:[edi],al
  41f0f1:	or     BYTE PTR [esi+0x44],ch
  41f0f4:	xchg   edx,eax
  41f0f5:	cmp    BYTE PTR [ebx-0xc9addd8],cl
  41f0fb:	push   edi
  41f0fc:	jne    0x41f168
  41f0fe:	loopne 0x41f0ba
  41f100:	fild   DWORD PTR ds:0xe1b150f7
  41f106:	mov    ecx,0xb9444c04
  41f10b:	cmp    ebp,DWORD PTR [ebx+0x28bf9a31]
  41f111:	es add eax,0xcb965933
  41f117:	sub    ch,BYTE PTR [edi-0x25fde9b4]
  41f11d:	mov    ah,BYTE PTR [edx+0x708f5f40]
  41f123:	and    BYTE PTR [edx-0x473af52b],dh
  41f129:	dec    ebp
  41f12a:	or     ebx,DWORD PTR [eax]
  41f12c:	lock mov ebx,eax
  41f12f:	add    DWORD PTR [ecx+0x1f],ebx
  41f132:	jns    0x41f136
  41f134:	cmp    al,0xa0
  41f136:	sub    BYTE PTR [ebp+0x7ea62b1d],al
  41f13c:	cmp    DWORD PTR [eax-0x32],esp
  41f13f:	ins    DWORD PTR es:[edi],dx
  41f140:	sahf   
  41f141:	(bad)  
  41f142:	in     eax,dx
  41f143:	lods   eax,DWORD PTR ds:[esi]
  41f144:	cmp    edi,DWORD PTR [esi-0x7c]
  41f147:	ret    
  41f148:	xor    DWORD PTR [esi],esp
  41f14a:	sbb    dh,BYTE PTR [edx+edi*8]
  41f14d:	inc    edi
  41f14e:	jnp    0x41f17c
  41f150:	mov    al,0x6e
  41f153:	dec    edx
  41f154:	lahf   
  41f155:	or     edi,ebx
  41f157:	adc    edx,DWORD PTR [eax-0x9]
  41f15a:	sbb    DWORD PTR [edi-0x65],edi
  41f15d:	and    BYTE PTR [esp+ebp*1],0xb2
  41f161:	je     0x41f10b
  41f163:	mov    BYTE PTR [esi],bl
  41f165:	or     eax,0xfb2a3907
  41f16a:	cwde   
  41f16b:	dec    eax
  41f16c:	mov    eax,0x73dd6271
  41f171:	cs inc ebp
  41f173:	mov    esp,0x6dafe352
  41f178:	inc    eax
  41f179:	sbb    BYTE PTR [edx+0x11d864ad],ah
  41f17f:	cmc    
  41f180:	mov    dh,0x73
  41f182:	pop    edi
  41f183:	push   eax
  41f184:	push   ebp
  41f185:	mov    BYTE PTR [ebx+0xc],ah
  41f188:	test   al,0x51
  41f18a:	xor    esi,DWORD PTR [eax]
  41f18c:	or     ebp,DWORD PTR [edx]
  41f18e:	lods   al,BYTE PTR ds:[esi]
  41f18f:	fdiv   DWORD PTR [ebp+eax*1-0x31]
  41f194:	jecxz  0x41f14b
  41f196:	mov    dl,0xd0
  41f198:	mov    dl,0x56
  41f19a:	scas   al,BYTE PTR es:[edi]
  41f19b:	shl    DWORD PTR [esi+0x7852058f],1
  41f1a1:	test   eax,0xf430018c
  41f1a6:	shl    BYTE PTR [edx+0x19a79c0a],0x52
  41f1ad:	xor    al,0xc8
  41f1af:	ja     0x41f229
  41f1b1:	pop    esp
  41f1b2:	rol    bl,0xe7
  41f1b5:	gs xchg ebp,eax
  41f1b7:	jno    0x41f211
  41f1b9:	lds    ebp,FWORD PTR [edx-0x1c]
  41f1bc:	fisub  DWORD PTR [esi+eax*4-0x2814f6d1]
  41f1c3:	aam    0x8
  41f1c5:	xchg   esi,eax
  41f1c6:	inc    BYTE PTR [edx+0x47fc0d2f]
  41f1cc:	pusha  
  41f1cd:	mov    al,0x7
  41f1cf:	adc    al,0x29
  41f1d1:	mov    esp,eax
  41f1d3:	add    al,al
  41f1d5:	ins    BYTE PTR es:[edi],dx
  41f1d6:	aam    0x69
  41f1d8:	xchg   esi,eax
  41f1d9:	xchg   edi,eax
  41f1da:	or     ebp,esi
  41f1dc:	shl    ecx,0x28
  41f1df:	clc    
  41f1e0:	cmp    eax,0x73013d43
  41f1e5:	out    0x91,al
  41f1e7:	xchg   BYTE PTR [esp+edi*1],bl
  41f1ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1eb:	pushf  
  41f1ec:	mov    edi,0xe0924a01
  41f1f1:	inc    eax
  41f1f2:	out    dx,eax
  41f1f3:	stc    
  41f1f4:	clc    
  41f1f5:	into   
  41f1f6:	das    
  41f1f7:	mov    ebp,0xce83990
  41f1fc:	retf   
  41f1fd:	push   ecx
  41f1fe:	aas    
  41f1ff:	(bad)  
  41f200:	pop    DWORD PTR [eax-0x78]
  41f203:	or     al,0x21
  41f205:	popa   
  41f206:	inc    ecx
  41f207:	lea    ebx,[edi+0x306001e2]
  41f20d:	(bad)  
  41f20e:	sub    eax,0x62af99f3
  41f213:	push   0xee32542e
  41f218:	mov    ecx,esi
  41f21a:	popa   
  41f21b:	sbb    al,0x87
  41f21d:	cld    
  41f21e:	cld    
  41f21f:	xor    BYTE PTR ds:0x7f57f0e8,bl
  41f225:	jmp    0x4f8f1244
  41f22a:	or     DWORD PTR [esi],edx
  41f22c:	jge    0x41f276
  41f22e:	ja     0x41f1e1
  41f230:	inc    esp
  41f231:	add    al,0x37
  41f233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f234:	mov    bl,0x35
  41f236:	mov    eax,0xa689740
  41f23b:	push   0x4f
  41f23d:	ret    0x6636
  41f240:	mov    cl,0xae
  41f242:	mov    WORD PTR [ecx+0x8978c67],fs
  41f248:	sbb    ebx,DWORD PTR [ebp+0x54]
  41f24b:	xor    al,0x2a
  41f24d:	dec    eax
  41f24e:	or     DWORD PTR [edx],0xfae16d67
  41f254:	pop    eax
  41f255:	fwait
  41f256:	mul    DWORD PTR [edx]
  41f258:	jbe    0x41f23e
  41f25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f25b:	ret    
  41f25c:	lea    edi,[ebp+esi*2+0x6]
  41f260:	push   0xa753fbf5
  41f265:	add    BYTE PTR [eax+0x328c713a],ah
  41f26b:	mov    ecx,0x4860b28f
  41f270:	jnp    0x41f200
  41f272:	int3   
  41f273:	push   ebx
  41f274:	or     eax,0x6c44696a
  41f279:	pop    edx
  41f27a:	dec    eax
  41f27b:	retf   
  41f27c:	xlat   BYTE PTR ds:[ebx]
  41f27d:	mov    esp,0x90cee121
  41f282:	fbld   TBYTE PTR [ebx+ebp*2-0x20]
  41f286:	mov    ah,0x62
  41f288:	sbb    BYTE PTR [esp+esi*4-0x43],bl
  41f28c:	and    ecx,ecx
  41f28e:	add    DWORD PTR [esi],0xd83a1e56
  41f294:	jae    0x41f264
  41f296:	adc    eax,0x61c9df94
  41f29b:	cwde   
  41f29c:	or     BYTE PTR [esi-0x4a46f65],0x1c
  41f2a3:	mov    cl,0x13
  41f2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a6:	iret   
  41f2a7:	imul   esp,DWORD PTR [edi+0x62],0xffffffb4
  41f2ab:	adc    ebp,DWORD PTR [edx+0x9]
  41f2ae:	enter  0x1675,0x36
  41f2b2:	push   0xd5296e49
  41f2b7:	in     al,dx
  41f2b8:	and    edx,eax
  41f2ba:	add    bl,ch
  41f2bc:	dec    eax
  41f2bd:	icebp  
  41f2be:	xchg   esi,eax
  41f2bf:	sub    eax,0x3d1f3b10
  41f2c4:	mov    eax,ds:0x84b75191
  41f2c9:	mov    eax,0x98b3e753
  41f2ce:	cli    
  41f2cf:	pop    ebp
  41f2d0:	hlt    
  41f2d1:	xchg   ah,bl
  41f2d3:	lock mov BYTE PTR [ecx],al
  41f2d6:	int    0x2b
  41f2d8:	mov    ebx,0x5c00e3d1
  41f2dd:	cmp    DWORD PTR [ecx+0x2bd99168],0x83512485
  41f2e7:	retf   0x435c
  41f2ea:	pop    esp
  41f2eb:	mov    dh,0xf
  41f2ed:	int3   
  41f2ee:	push   cs
  41f2ef:	out    0xb3,eax
  41f2f1:	ja     0x41f35e
  41f2f3:	ror    BYTE PTR [ecx],1
  41f2f5:	xor    al,0x85
  41f2f8:	dec    edi
  41f2f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2fa:	adc    ebp,DWORD PTR [esi+0x5c]
  41f2fd:	cmp    BYTE PTR [esp+edx*1+0x11],dl
  41f301:	aaa    
  41f302:	xor    eax,0xbdb32133
  41f307:	or     bh,BYTE PTR [eax]
  41f309:	es jmp 0xfae60556
  41f30f:	mov    dh,ch
  41f311:	pop    esp
  41f312:	es fs outs dx,BYTE PTR ds:[esi]
  41f316:	add    eax,0x4485183
  41f31b:	retf   0x12b6
  41f31e:	or     eax,0xf3853abc
  41f323:	sub    BYTE PTR [edx],bh
  41f325:	(bad)  
  41f326:	cld    
  41f327:	mov    ecx,0xe8f8c37d
  41f32c:	dec    esp
  41f32d:	imul   ebp,DWORD PTR [ebp+0x1ff30305],0x3f
  41f334:	sub    dh,BYTE PTR [eax-0xc]
  41f337:	(bad)  
  41f338:	ror    BYTE PTR [edi+0x4c],0xee
  41f33c:	sbb    BYTE PTR [edx],dl
  41f33e:	sbb    BYTE PTR [ecx],al
  41f340:	sub    eax,0x84c2045a
  41f345:	aad    0x76
  41f347:	cmp    al,0x7d
  41f349:	mov    dh,0x80
  41f34b:	mov    al,0x3a
  41f34d:	inc    esi
  41f34e:	push   cs
  41f34f:	push   esp
  41f350:	pusha  
  41f351:	sbb    bh,BYTE PTR [ecx+0x39]
  41f354:	inc    edx
  41f355:	or     al,0xde
  41f357:	sub    al,0x73
  41f359:	test   ah,ah
  41f35b:	mul    DWORD PTR [eax+edx*4-0x1eed9e94]
  41f362:	test   al,0x7
  41f364:	xor    esp,0x2480a224
  41f36a:	scas   eax,DWORD PTR es:[edi]
  41f36b:	push   eax
  41f36c:	scas   al,BYTE PTR es:[edi]
  41f36d:	lods   eax,DWORD PTR ds:[esi]
  41f36e:	call   0x747e:0xb5dd9049
  41f375:	pop    esi
  41f376:	scas   al,BYTE PTR es:[edi]
  41f377:	mov    cl,0x2b
  41f379:	(bad)  
  41f37a:	sti    
  41f37b:	test   BYTE PTR [edx+0x19acc098],dh
  41f381:	mov    ds:0x191ceb52,al
  41f386:	mov    esp,0x2912ad2d
  41f38b:	and    DWORD PTR [ecx-0x201fa893],0xffffffb3
  41f392:	mov    ebx,0xae45ae9b
  41f397:	push   cs
  41f398:	mov    BYTE PTR [esi-0x5f8ce2b9],dh
  41f39e:	mov    ah,BYTE PTR ds:0xdc55acae
  41f3a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3a5:	test   al,0x7a
  41f3a7:	mov    gs,WORD PTR [edi+ebp*8]
  41f3aa:	rcl    BYTE PTR [esi+0x4ee1647f],1
  41f3b0:	pop    ss
  41f3b1:	cmp    ecx,ebp
  41f3b3:	hlt    
  41f3b4:	sahf   
  41f3b5:	dec    edx
  41f3b6:	aas    
  41f3b7:	dec    eax
  41f3b8:	pop    ss
  41f3b9:	es addr16 call 0xdffd:0xdc8abe9c
  41f3c2:	lock inc edx
  41f3c4:	inc    al
  41f3c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3c7:	pop    ss
  41f3c8:	jl     0x41f38b
  41f3ca:	push   ebp
  41f3cb:	lahf   
  41f3cc:	retf   0xe4cb
  41f3cf:	je     0x41f39c
  41f3d1:	loop   0x41f38a
  41f3d3:	pop    ds
  41f3d4:	xchg   esp,eax
  41f3d5:	cwde   
  41f3d6:	hlt    
  41f3d7:	or     BYTE PTR [ecx+0x2650189b],bl
  41f3dd:	(bad)  
  41f3de:	enter  0x2c8a,0x85
  41f3e2:	mov    ch,0x2a
  41f3e4:	and    edi,DWORD PTR [ecx-0x29]
  41f3e7:	pop    ss
  41f3e8:	dec    esi
  41f3e9:	aam    0xa9
  41f3eb:	xor    dl,dl
  41f3ed:	fsub   st(4),st
  41f3ef:	(bad)  
  41f3f0:	ja     0x41f397
  41f3f2:	clc    
  41f3f3:	xchg   ebp,eax
  41f3f4:	rcl    ch,cl
  41f3f6:	dec    eax
  41f3f7:	outs   dx,DWORD PTR ds:[esi]
  41f3f8:	outs   dx,BYTE PTR ds:[esi]
  41f3f9:	jg     0x41f467
  41f3fb:	sbb    al,0xb4
  41f3fd:	pop    ecx
  41f3fe:	push   esp
  41f3ff:	loope  0x41f3a8
  41f401:	inc    esp
  41f402:	mov    edi,0xde6f4046
  41f407:	idiv   BYTE PTR [esp+eax*4]
  41f40a:	and    esi,DWORD PTR [ebp-0x40a117e1]
  41f410:	pop    ss
  41f411:	push   esi
  41f412:	cmp    eax,0xc09c097
  41f417:	sub    eax,0x6b2a037d
  41f41c:	shr    edx,0x13
  41f41f:	xor    ch,cl
  41f421:	mov    ds:0x5dde2abc,eax
  41f426:	fnstcw WORD PTR [eax]
  41f428:	push   esp
  41f429:	out    dx,al
  41f42a:	repz jb 0x41f3d2
  41f42d:	push   edi
  41f42e:	cmp    DWORD PTR [edi+ebp*1-0x2e44fb88],esp
  41f435:	ss into 
  41f437:	mov    ecx,0x7d206600
  41f43c:	retf   0xfccd
  41f43f:	sub    cl,0x64
  41f442:	mov    ebp,0x20363e44
  41f447:	into   
  41f448:	mov    dl,0xcb
  41f44a:	pavgb  mm5,QWORD PTR [eax-0x64]
  41f44e:	pop    edx
  41f44f:	loope  0x41f405
  41f451:	cmp    BYTE PTR [eax],al
  41f453:	add    esp,DWORD PTR [eax-0x74]
  41f456:	adc    BYTE PTR [ebx],dh
  41f458:	and    DWORD PTR [esi-0x321dd98e],eax
  41f45e:	xor    al,0x75
  41f460:	add    DWORD PTR [eax],ecx
  41f462:	adc    bh,ah
  41f464:	test   BYTE PTR [ebp+ebx*4+0x7dfb9858],ah
  41f46b:	xchg   ebx,eax
  41f46c:	jmp    0x7ccbd3f1
  41f471:	xor    al,ch
  41f473:	mov    ebx,0x5ee0f30c
  41f478:	and    DWORD PTR [eax-0x15d39539],0x6de1ae3c
  41f482:	les    eax,FWORD PTR [edi-0x30ff68a3]
  41f488:	cmp    eax,0x216ce796
  41f48d:	outs   dx,DWORD PTR ds:[esi]
  41f48e:	xchg   DWORD PTR ds:0x75a5954a,edi
  41f494:	nop
  41f495:	loope  0x41f4eb
  41f497:	(bad)  
  41f499:	ror    BYTE PTR [eax-0x72],0x40
  41f49d:	mov    ah,0xa5
  41f49f:	jle    0x41f47c
  41f4a1:	pop    ds
  41f4a2:	dec    esi
  41f4a3:	push   edi
  41f4a4:	jge    0x41f450
  41f4a6:	fdiv   st,st(6)
  41f4a8:	outs   dx,DWORD PTR ds:[esi]
  41f4a9:	jno    0x41f4ac
  41f4ab:	ins    BYTE PTR es:[edi],dx
  41f4ac:	cs sbb al,0x78
  41f4af:	cld    
  41f4b0:	sbb    BYTE PTR [ebx-0x7f505f1b],0x13
  41f4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4b9:	pop    edx
  41f4ba:	mov    bl,0x47
  41f4bc:	icebp  
  41f4bd:	pop    edx
  41f4be:	xor    DWORD PTR [ebx],ecx
  41f4c0:	or     eax,0xd0a254c8
  41f4c5:	sbb    BYTE PTR [bx+di+0x71],dh
  41f4c9:	out    0xec,eax
  41f4cb:	push   cs
  41f4cc:	dec    esp
  41f4cd:	mov    dl,0xf0
  41f4cf:	adc    DWORD PTR [ebx+0x7a],edi
  41f4d2:	cmp    DWORD PTR [eax],edx
  41f4d4:	adc    eax,0xf26026b1
  41f4d9:	xchg   ecx,eax
  41f4da:	popa   
  41f4db:	inc    edi
  41f4dc:	mov    eax,0xdd2d57a8
  41f4e1:	dec    ebp
  41f4e2:	sbb    DWORD PTR [eax-0x37],eax
  41f4e5:	fadd   QWORD PTR [ecx]
  41f4e7:	jne    0x41f51b
  41f4e9:	push   ecx
  41f4ea:	and    ecx,DWORD PTR [ecx-0x35]
  41f4ed:	push   edi
  41f4ee:	add    BYTE PTR [ebp-0xd],al
  41f4f1:	loop   0x41f4fd
  41f4f3:	add    al,0x73
  41f4f5:	sub    ebx,DWORD PTR [eax]
  41f4f7:	and    al,0xc5
  41f4f9:	cmp    al,0x48
  41f4fb:	pushf  
  41f4fc:	or     al,0x9a
  41f4fe:	mov    al,ds:0x25924846
  41f503:	pop    ds
  41f504:	jno    0x41f4b7
  41f506:	rol    dh,1
  41f508:	(bad)  
  41f509:	lock cmp al,0x8c
  41f50c:	push   eax
  41f50d:	hlt    
  41f50e:	xor    cl,dl
  41f510:	xor    eax,ebx
  41f512:	adc    al,0xe7
  41f514:	ja     0x41f58e
  41f516:	sbb    ax,0x57bc
  41f51a:	adc    eax,0x3d4b1d38
  41f51f:	lea    esp,[ecx+0x0]
  41f522:	mov    cl,0xe7
  41f524:	pop    esp
  41f525:	mov    BYTE PTR [ecx],dl
  41f527:	pop    edx
  41f528:	clc    
  41f529:	sbb    eax,0x4cefeef
  41f52e:	mov    ds:0x4f90a76e,al
  41f533:	xor    cl,0x50
  41f536:	sub    BYTE PTR [ebp+0x6a],al
  41f539:	call   0x4c78:0x9f84367
  41f540:	pop    edi
  41f541:	data16 mov cl,0x42
  41f544:	sbb    edx,DWORD PTR [ecx-0x6]
  41f547:	jo     0x41f5b9
  41f549:	aad    0x39
  41f54b:	das    
  41f54c:	frndint 
  41f54e:	popa   
  41f54f:	push   edi
  41f550:	push   ebx
  41f551:	xchg   esp,eax
  41f552:	xchg   edi,eax
  41f553:	jne    0x41f510
  41f555:	push   esp
  41f556:	mov    ebp,0x3cd36652
  41f55b:	pop    esi
  41f55c:	fwait
  41f55d:	inc    ebx
  41f55e:	shr    DWORD PTR [ecx-0x25],cl
  41f561:	pop    esp
  41f562:	cmp    BYTE PTR [eax],al
  41f564:	add    BYTE PTR [eax],al
  41f566:	add    BYTE PTR [eax],al
  41f568:	xor    BYTE PTR [ecx+ebp*8],dl
  41f56b:	cmp    al,0x51
  41f56d:	or     DWORD PTR [eax],eax
  41f56f:	add    BYTE PTR [eax],al
  41f571:	add    BYTE PTR [eax],al
  41f573:	add    BYTE PTR [ecx+0x9],dl
  41f576:	add    BYTE PTR [eax],al
  41f578:	and    DWORD PTR [eax],eax
  41f57a:	es jl  0x41f57d
  41f57d:	add    dh,BYTE PTR [esi]
  41f57f:	or     BYTE PTR [eax],al
  41f581:	add    ah,al
  41f583:	inc    ebp
  41f584:	add    BYTE PTR ds:0xd15a00db,dh
  41f58a:	jmp    0x4a20:0xc24cad9
  41f591:	rcl    BYTE PTR [esi],cl
  41f593:	retf   
  41f594:	cmc    
  41f595:	test   BYTE PTR [eax+0x62],cl
  41f598:	pop    esi
  41f599:	aas    
  41f59a:	add    al,0xae
  41f59c:	pop    ebx
  41f59d:	or     DWORD PTR [ebp-0x71c7894],0x6e6d64d0
  41f5a7:	in     al,0x90
  41f5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5aa:	pop    esi
  41f5ab:	cdq    
  41f5ac:	pop    ecx
  41f5ad:	push   0x28
  41f5af:	xchg   ebx,eax
  41f5b0:	dec    ebx
  41f5b1:	cmp    dh,ah
  41f5b3:	daa    
  41f5b4:	or     BYTE PTR [esi-0xb],ch
  41f5b7:	arpl   ax,dx
  41f5b9:	mov    ch,0x5c
  41f5bb:	lea    edi,[esi+0x46f02bd4]
  41f5c1:	sub    al,0x6c
  41f5c3:	sbb    BYTE PTR ds:0x38560241,0x14
  41f5ca:	imul   ebx,DWORD PTR [ecx],0xc2ce9ba4
  41f5d0:	inc    edi
  41f5d1:	lds    edx,FWORD PTR [ebp+0x234c67f2]
  41f5d7:	dec    esi
  41f5d8:	pusha  
  41f5d9:	outs   dx,DWORD PTR ds:[esi]
  41f5da:	fisttp WORD PTR [eax]
  41f5dc:	int3   
  41f5dd:	ja     0x41f64f
  41f5df:	xor    BYTE PTR [eax-0x7d],cl
  41f5e2:	sbb    BYTE PTR [edi-0x6b],bh
  41f5e5:	lods   al,BYTE PTR ds:[esi]
  41f5e6:	daa    
  41f5e7:	xchg   esp,eax
  41f5e8:	xchg   ebp,eax
  41f5e9:	jo     0x41f5f5
  41f5eb:	and    al,0x1b
  41f5ed:	inc    ebp
  41f5ee:	mov    esp,esi
  41f5f0:	mov    eax,0x53f9ad9f
  41f5f5:	int3   
  41f5f6:	sub    eax,0x34dcf35b
  41f5fb:	loope  0x41f60f
  41f5fd:	sbb    DWORD PTR [eax-0x7b8b3908],edx
  41f603:	pop    edx
  41f604:	xchg   BYTE PTR [edx+0x65],al
  41f607:	leave  
  41f608:	or     dl,ah
  41f60a:	sbb    eax,0x594f23a8
  41f60f:	fnstcw WORD PTR [ecx-0x33733aee]
  41f615:	pop    ecx
  41f616:	aaa    
  41f617:	mov    BYTE PTR [edx+0x6a],bh
  41f61a:	(bad)  
  41f61b:	jecxz  0x41f65c
  41f61d:	lock cmp BYTE PTR [ebp+ebp*8+0x669c6076],dh
  41f625:	enter  0x7814,0x44
  41f629:	dec    esp
  41f62a:	or     al,0x5a
  41f62c:	fild   QWORD PTR [edx]
  41f62e:	(bad)  
  41f62f:	mov    esp,0xdb52c582
  41f634:	leave  
  41f635:	pop    es
  41f636:	mov    ebx,0x956ae098
  41f63b:	(bad)  
  41f63c:	cmc    
  41f63d:	xchg   esp,eax
  41f63e:	mov    esi,DWORD PTR ds:0x7f3c0430
  41f644:	les    edi,FWORD PTR [esi]
  41f646:	adc    eax,0x28ccd7b8
  41f64b:	aas    
  41f64c:	push   eax
  41f64d:	mov    esi,0x3de46f70
  41f652:	jge    0x41f624
  41f654:	mov    bl,0x88
  41f656:	push   0x429373f
  41f65b:	adc    esp,esi
  41f65d:	and    bl,ch
  41f65f:	and    BYTE PTR [edi],dh
  41f661:	psubusb mm4,QWORD PTR [ecx-0x4a2ce7b9]
  41f668:	retf   0xce8
  41f66b:	fidivr DWORD PTR [eax]
  41f66d:	and    bh,BYTE PTR [eax*8-0x4aaae38b]
  41f674:	or     eax,0x5a608a65
  41f679:	adc    DWORD PTR [edx+edx*8+0x1b],ebx
  41f67d:	sub    ebx,DWORD PTR ds:0xe51d084e
  41f683:	and    al,BYTE PTR [ebx-0x3c]
  41f686:	daa    
  41f687:	mov    esp,0x704a2c9d
  41f68c:	rcl    ch,1
  41f68e:	hlt    
  41f68f:	xchg   edx,eax
  41f690:	push   ebx
  41f691:	sahf   
  41f692:	push   eax
  41f693:	mov    gs,WORD PTR [ebx+0x3a1ea2f6]
  41f699:	je     0x41f66e
  41f69b:	je     0x41f71a
  41f69d:	cmp    edi,DWORD PTR [ebp-0x3d39a332]
  41f6a3:	pop    ebx
  41f6a4:	sbb    al,0x0
  41f6a6:	push   edi
  41f6a7:	call   0x16e2900b
  41f6ac:	iret   
  41f6ad:	inc    eax
  41f6ae:	push   ebp
  41f6af:	scas   eax,DWORD PTR es:[edi]
  41f6b0:	sbb    al,0xfb
  41f6b2:	xor    ebp,DWORD PTR [ebx+ebp*1]
  41f6b5:	stos   BYTE PTR es:[edi],al
  41f6b6:	fs mov ch,0x8c
  41f6b9:	mov    eax,0x5b9c105e
  41f6be:	push   ecx
  41f6bf:	mov    BYTE PTR [edi+0x7],cl
  41f6c2:	push   ecx
  41f6c3:	pop    es
  41f6c4:	stos   DWORD PTR es:[edi],eax
  41f6c5:	in     al,0xb0
  41f6c7:	mov    ah,0xac
  41f6c9:	call   0x3d9238ee
  41f6ce:	pop    edi
  41f6cf:	out    0x7f,eax
  41f6d1:	push   esp
  41f6d2:	neg    BYTE PTR [eax+0x4342e470]
  41f6d8:	lods   eax,DWORD PTR ds:[esi]
  41f6d9:	stos   DWORD PTR es:[edi],eax
  41f6da:	js     0x41f690
  41f6dc:	les    esi,FWORD PTR [ebx]
  41f6de:	rcr    BYTE PTR [ebp-0x63f8bd0e],cl
  41f6e4:	and    eax,0xddea14d1
  41f6e9:	(bad)  
  41f6eb:	cli    
  41f6ec:	sar    ch,0x2a
  41f6ef:	fdiv   DWORD PTR [eax]
  41f6f1:	inc    ebx
  41f6f2:	fild   DWORD PTR [ebx+0x1d]
  41f6f5:	in     al,0x97
  41f6f7:	dec    eax
  41f6f8:	push   ebp
  41f6f9:	sbb    eax,0x8eb82d8
  41f6fe:	mov    esp,ds
  41f700:	outs   dx,DWORD PTR ds:[esi]
  41f701:	mov    eax,ds:0xd639780d
  41f706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f707:	mov    al,0x63
  41f709:	mov    ebp,0x7e094c57
  41f70e:	pop    edi
  41f70f:	fst    st(4)
  41f711:	push   cs
  41f712:	loope  0x41f6b6
  41f714:	fs and dl,al
  41f717:	repnz ss clc 
  41f71a:	inc    esp
  41f71b:	lods   eax,DWORD PTR ds:[esi]
  41f71c:	pop    ecx
  41f71d:	mov    bl,0x4a
  41f71f:	mov    ebx,0xeca048af
  41f724:	nop
  41f725:	imul   BYTE PTR [edi+0x1d]
  41f728:	push   ds
  41f729:	test   eax,0x381bc4f7
  41f72e:	sub    al,0x7e
  41f730:	push   edx
  41f731:	popa   
  41f732:	or     ecx,DWORD PTR [ecx-0x18]
  41f735:	mov    eax,0x1b61ef80
  41f73a:	push   esp
  41f73b:	ja     0x41f6f2
  41f73d:	or     al,0x77
  41f73f:	in     al,0x4b
  41f741:	mov    BYTE PTR [edx+esi*1],cl
  41f744:	or     ecx,DWORD PTR [eax+esi*1]
  41f747:	xor    al,0x42
  41f749:	int    0x80
  41f74b:	and    DWORD PTR [esi+0x30d855f9],edi
  41f751:	xchg   edi,eax
  41f752:	mov    eax,ds:0x7dbcbe96
  41f757:	sbb    esp,edi
  41f759:	pop    ebp
  41f75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f75b:	or     DWORD PTR [ecx-0x70],edx
  41f75e:	mov    cl,0xd2
  41f760:	stc    
  41f761:	and    BYTE PTR [ebx-0x6f],dl
  41f764:	jge    0x41f76d
  41f766:	mov    esi,0x44a026f5
  41f76b:	repnz cld 
  41f76d:	jns    0x41f749
  41f76f:	mov    ah,0x4
  41f771:	outs   dx,BYTE PTR ds:[esi]
  41f772:	nop
  41f773:	in     al,dx
  41f774:	ror    BYTE PTR [esi],0x17
  41f777:	addr16 addr16 stc 
  41f77a:	mov    bl,0x3d
  41f77c:	adc    BYTE PTR [esi+edi*8],cl
  41f77f:	sub    al,0x92
  41f781:	imul   DWORD PTR ds:0x9834662f
  41f787:	dec    eax
  41f788:	or     DWORD PTR [edi-0x7d8ba714],ebp
  41f78e:	pop    eax
  41f78f:	and    bl,BYTE PTR [ecx+0x38c8da58]
  41f795:	adc    edi,edi
  41f797:	jl     0x41f7f4
  41f799:	mov    ebp,0x97c3458
  41f79e:	xor    eax,0xd5e224a5
  41f7a3:	adc    BYTE PTR [ebx+0x15b2d80],ch
  41f7a9:	dec    eax
  41f7aa:	fwait
  41f7ab:	sub    al,0x9b
  41f7ad:	jno    0x41f7e4
  41f7af:	and    dl,al
  41f7b1:	push   esi
  41f7b2:	ins    BYTE PTR es:[edi],dx
  41f7b3:	cdq    
  41f7b4:	inc    ebp
  41f7b5:	inc    ecx
  41f7b6:	add    ch,bl
  41f7b8:	rcl    DWORD PTR [ebx+0x3fb590fa],0xa0
  41f7bf:	jae    0x41f835
  41f7c1:	addr16 push edi
  41f7c3:	xor    BYTE PTR [ebx+ecx*1+0x34ad8057],0xb8
  41f7cb:	add    al,0x59
  41f7cd:	pop    esp
  41f7ce:	sub    dl,cl
  41f7d0:	add    al,0xf6
  41f7d2:	arpl   WORD PTR [ebp+0x7f],cx
  41f7d5:	in     eax,0x80
  41f7d7:	sub    al,BYTE PTR [esi+0x69]
  41f7da:	add    DWORD PTR [edx-0x5c],ebx
  41f7dd:	retf   
  41f7de:	in     al,dx
  41f7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7e0:	outs   dx,DWORD PTR ds:[esi]
  41f7e1:	add    dl,BYTE PTR [eax]
  41f7e3:	cmp    DWORD PTR [ebp-0x2c],0x2c80e85
  41f7ea:	out    0x77,al
  41f7ec:	rol    DWORD PTR [eax+0x70821f25],cl
  41f7f2:	pop    esp
  41f7f3:	aaa    
  41f7f4:	and    DWORD PTR [esi+0x3afe6619],0xffffff94
  41f7fb:	add    cl,BYTE PTR [eax]
  41f7fd:	inc    edi
  41f7fe:	icebp  
  41f7ff:	add    DWORD PTR [eax],0x51b8bfef
  41f805:	icebp  
  41f806:	dec    ebp
  41f807:	imul   ebp,DWORD PTR [ecx+0x2a],0x7a
  41f80b:	(bad)  
  41f80c:	fsub   st(0),st
  41f80e:	leave  
  41f80f:	sub    BYTE PTR [edi+0x36],0x4
  41f813:	adc    DWORD PTR [eax+0x0],edi
  41f816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f817:	jo     0x41f841
  41f819:	aas    
  41f81a:	mov    eax,ds:0xa8541489
  41f81f:	pop    esi
  41f820:	lahf   
  41f821:	sbb    BYTE PTR [eax+0x520144f3],ch
  41f827:	int3   
  41f828:	inc    edi
  41f829:	push   esp
  41f82a:	push   0x1830eba4
  41f82f:	or     eax,esi
  41f831:	mov    al,0xfd
  41f833:	call   0x14f1:0xe50d17aa
  41f83a:	loopne 0x41f8b2
  41f83c:	sbb    esi,DWORD PTR [edi-0x75]
  41f83f:	push   es
  41f840:	ss in  eax,dx
  41f842:	mov    esp,0xd3afbd92
  41f847:	ret    
  41f848:	push   0xffffffdc
  41f84a:	add    eax,0x876bdbe0
  41f84f:	pop    es
  41f850:	and    ch,dl
  41f852:	por    mm0,QWORD PTR [ebx+edx*4]
  41f856:	xor    BYTE PTR [ecx-0x51],dh
  41f859:	xchg   DWORD PTR [edx],ecx
  41f85b:	dec    ebp
  41f85c:	cdq    
  41f85d:	sub    BYTE PTR [eax-0x25],cl
  41f860:	dec    edi
  41f861:	push   esp
  41f862:	mov    al,0x40
  41f864:	cmp    al,0xb7
  41f866:	dec    esp
  41f867:	xchg   esp,eax
  41f868:	adc    bh,dh
  41f86a:	dec    ebx
  41f86b:	(bad)  
  41f86c:	ins    BYTE PTR es:[edi],dx
  41f86d:	mov    ecx,ds
  41f86f:	hlt    
  41f870:	push   eax
  41f871:	es xor eax,0xfd40b9c8
  41f877:	dec    edx
  41f878:	sbb    BYTE PTR [edx+0x68],ch
  41f87b:	loop   0x41f8f9
  41f87d:	push   0xffffffb4
  41f87f:	sar    BYTE PTR ss:[edx+ecx*4],0xd
  41f884:	inc    ebp
  41f885:	retf   0xd38c
  41f888:	xchg   ecx,eax
  41f889:	sub    DWORD PTR [eax+0x7],esp
  41f88c:	fs or  al,0xc8
  41f88f:	and    DWORD PTR ds:[eax-0x67fc7bc9],0x197322cd
  41f89a:	and    eax,0x7cc72cb6
  41f89f:	jnp    0x41f85c
  41f8a1:	pop    ecx
  41f8a2:	es repnz mov edi,0xdf3fe50
  41f8a9:	daa    
  41f8aa:	shl    DWORD PTR [ebp+0x5b],1
  41f8ad:	xchg   edx,eax
  41f8ae:	je     0x41f8e1
  41f8b0:	aaa    
  41f8b1:	mov    esi,DWORD PTR [ebx]
  41f8b3:	fs pause 
  41f8b6:	rcr    BYTE PTR [eax+0xef37780],1
  41f8bc:	ins    DWORD PTR es:[edi],dx
  41f8bd:	or     ch,BYTE PTR [ebp+0x17]
  41f8c0:	inc    eax
  41f8c1:	mov    edx,0x7397382f
  41f8c6:	push   esp
  41f8c7:	pusha  
  41f8c8:	xchg   esi,eax
  41f8c9:	fs popf 
  41f8cb:	jle    0x41f8a0
  41f8cd:	xor    eax,ecx
  41f8cf:	aaa    
  41f8d0:	sbb    al,0xaf
  41f8d2:	mov    ah,bh
  41f8d4:	enter  0x8218,0xdf
  41f8d8:	mov    ecx,0xf8ac63d5
  41f8dd:	mov    eax,ds:0xda191421
  41f8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8e3:	mov    esp,0xa33395d0
  41f8e8:	jb     0x41f8f3
  41f8ea:	add    DWORD PTR [ecx+0x6e6b7864],ecx
  41f8f0:	faddp  st(0),st
  41f8f2:	stos   BYTE PTR es:[edi],al
  41f8f3:	fimul  DWORD PTR [edi+ebx*1+0x2588bc9c]
  41f8fa:	repnz imul edx,DWORD PTR [edi-0x2d3f6c03],0x5cdec601
  41f905:	ds ins DWORD PTR es:[edi],dx
  41f907:	lods   eax,DWORD PTR ds:[esi]
  41f908:	in     al,0x38
  41f90a:	jb     0x41f896
  41f90c:	cli    
  41f90d:	shr    ecx,1
  41f90f:	lock sub cl,BYTE PTR [ecx+edx*1+0x31e4c03c]
  41f917:	retf   
  41f918:	dec    ebp
  41f919:	xchg   ebx,eax
  41f91a:	mov    al,0xde
  41f91c:	out    dx,eax
  41f91d:	push   edx
  41f91e:	test   al,0xd9
  41f920:	ja     0x41f946
  41f922:	(bad)  
  41f923:	aam    0x9c
  41f925:	mov    DWORD PTR [eax],ecx
  41f927:	inc    edi
  41f928:	cmp    BYTE PTR [ebp+0x7e],dh
  41f92b:	push   edx
  41f92c:	clc    
  41f92d:	(bad)  
  41f92e:	jp     0x41f922
  41f930:	xchg   edx,eax
  41f931:	xor    al,0xf0
  41f933:	fsubr  DWORD PTR ds:0xe4c6731c
  41f939:	jbe    0x41f99a
  41f93b:	test   cl,ah
  41f93d:	add    ah,0xab
  41f940:	test   bl,cl
  41f942:	dec    ecx
  41f943:	mov    esi,0xe8361e70
  41f948:	sbb    BYTE PTR [edi-0x6bb2486e],bh
  41f94e:	or     al,0x4b
  41f950:	or     al,0x94
  41f952:	inc    esi
  41f953:	cmc    
  41f954:	leave  
  41f955:	or     ecx,DWORD PTR [ebp+0x28]
  41f958:	loop   0x41f98a
  41f95a:	jno    0x41f8f2
  41f95c:	cdq    
  41f95d:	jg     0x41f9c3
  41f95f:	retf   0xd5db
  41f962:	fdivr  DWORD PTR [edi-0x16edd478]
  41f968:	ret    0x4b3f
  41f96b:	cld    
  41f96c:	adc    eax,0x7228d111
  41f971:	push   edi
  41f972:	cli    
  41f973:	dec    edi
  41f974:	and    ch,cl
  41f976:	inc    esi
  41f977:	or     DWORD PTR cs:[ebx+eax*2-0x15bb344e],eax
  41f97f:	mul    BYTE PTR [ebx]
  41f981:	and    edx,DWORD PTR [eax+0x4e]
  41f984:	dec    eax
  41f985:	es push 0x5a2ad230
  41f98b:	sbb    BYTE PTR [edx],0xd1
  41f98e:	ficom  WORD PTR [eax]
  41f990:	mov    dl,0xcf
  41f992:	jge    0x41f9e6
  41f994:	mov    esp,0x34dba1e3
  41f999:	stos   DWORD PTR es:[edi],eax
  41f99a:	dec    esi
  41f99b:	jno    0x41fa1a
  41f99d:	inc    ebp
  41f99e:	xchg   esp,eax
  41f99f:	mov    cl,0x87
  41f9a1:	pop    eax
  41f9a2:	push   0x5003d6be
  41f9a7:	mov    al,0x1
  41f9a9:	mov    esi,0xbf388c7c
  41f9ae:	lods   eax,DWORD PTR ds:[esi]
  41f9af:	hlt    
  41f9b0:	xchg   esp,eax
  41f9b1:	add    al,0xcd
  41f9b3:	mov    al,ds:0x849ede1d
  41f9b8:	cmp    dh,BYTE PTR [esi+0x1348a6be]
  41f9be:	lea    edi,[edi+0x2582d506]
  41f9c4:	mov    esp,0xa7feed6c
  41f9c9:	xlat   BYTE PTR ds:[ebx]
  41f9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9cb:	adc    BYTE PTR [edx+0x1280903d],dh
  41f9d1:	mov    dh,0x62
  41f9d3:	dec    ecx
  41f9d4:	sub    al,0xa0
  41f9d6:	jecxz  0x41f98c
  41f9d8:	pop    ds
  41f9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9da:	dec    eax
  41f9db:	sbb    eax,0x8e27c7d1
  41f9e0:	pop    esp
  41f9e1:	or     ebp,ebp
  41f9e3:	out    0xf1,eax
  41f9e5:	leave  
  41f9e6:	je     0x41f9ca
  41f9e8:	lock and BYTE PTR ds:0xd60cdbfe,0xe5
  41f9f0:	pop    ecx
  41f9f1:	shld   DWORD PTR [edx-0x2c],eax,0xe3
  41f9f6:	cmp    eax,0x3ccdf3b3
  41f9fb:	enter  0x42ad,0x62
  41f9ff:	nop
  41fa00:	adc    BYTE PTR [esi+0x7bec8e11],cl
  41fa06:	sub    bh,dh
  41fa08:	xchg   edi,eax
  41fa09:	and    al,0x1d
  41fa0b:	mov    al,0x73
  41fa0d:	xchg   esp,eax
  41fa0e:	into   
  41fa0f:	mov    eax,0xfebcfd09
  41fa14:	jle    0x41fa05
  41fa16:	mov    eax,0x39aff73a
  41fa1b:	hlt    
  41fa1c:	inc    edi
  41fa1d:	cmp    BYTE PTR [ebx-0x24],bh
  41fa20:	retf   
  41fa21:	fstp   QWORD PTR [esi+0x6a]
  41fa24:	mov    esp,esp
  41fa26:	std    
  41fa27:	inc    edx
  41fa28:	add    BYTE PTR [ebx+ebp*2+0x52c8f54c],ch
  41fa2f:	cdq    
  41fa30:	add    al,0xa8
  41fa32:	cmp    eax,DWORD PTR [ebp+0x750a7072]
  41fa38:	retf   
  41fa39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa3a:	int3   
  41fa3b:	aam    0x93
  41fa3d:	jns    0x41fa27
  41fa3f:	or     al,0x85
  41fa41:	xchg   ecx,eax
  41fa42:	cmp    eax,esi
  41fa44:	mov    edi,0x492cd200
  41fa49:	mov    ah,0xb5
  41fa4b:	and    dl,BYTE PTR [eax*4+0x263c45ea]
  41fa52:	and    bl,BYTE PTR [esi]
  41fa54:	clc    
  41fa55:	cmp    BYTE PTR [edx+esi*2],ch
  41fa58:	ja     0x41faa5
  41fa5a:	test   eax,0xe060ccaa
  41fa5f:	cdq    
  41fa60:	out    0x61,eax
  41fa62:	lods   al,BYTE PTR ds:[esi]
  41fa63:	jno    0x41fa54
  41fa65:	lds    esp,FWORD PTR [esi+0x7bbce04]
  41fa6b:	ja     0x41fa3f
  41fa6d:	sahf   
  41fa6e:	xor    eax,0xa3512894
  41fa73:	and    edi,esp
  41fa75:	push   0xffffffa0
  41fa77:	adc    DWORD PTR [esi],0xa17c024c
  41fa7d:	mov    BYTE PTR [esi+ebp*1],ch
  41fa80:	add    DWORD PTR [edx-0x4378e190],esp
  41fa86:	mov    ebx,0xe2fe9227
  41fa8b:	sbb    dl,dl
  41fa8d:	push   esp
  41fa8e:	std    
  41fa8f:	xor    BYTE PTR [edi+0x3c6157b6],dh
  41fa95:	(bad)  
  41fa96:	pop    ebp
  41fa97:	inc    eax
  41fa98:	xor    BYTE PTR [edi],al
  41fa9a:	mov    ebx,0x306016c1
  41fa9f:	inc    ecx
  41faa0:	inc    eax
  41faa1:	push   esi
  41faa2:	(bad)  
  41faa4:	dec    ebp
  41faa5:	iret   
  41faa6:	test   BYTE PTR [edi+0x7f],al
  41faa9:	jp     0x41fa77
  41faab:	or     DWORD PTR [eax],esp
  41faad:	mov    ebx,0xe0222c0e
  41fab2:	xchg   edi,eax
  41fab3:	cmc    
  41fab4:	jno    0x41fa3e
  41fab6:	inc    esi
  41fab7:	repnz push eax
  41fab9:	int3   
  41faba:	sbb    DWORD PTR [esi],0x5f
  41fabd:	jo     0x41fadb
  41fabf:	xor    ebx,esp
  41fac1:	je     0x41fad4
  41fac3:	dec    esp
  41fac4:	lock lahf 
  41fac6:	and    ecx,ebp
  41fac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fac9:	jge    0x41fa63
  41facb:	xor    BYTE PTR [ebp-0x1747bd76],dh
  41fad1:	aam    0x67
  41fad3:	mov    esp,0xd234d5d
  41fad8:	xchg   esp,eax
  41fad9:	aad    0xf3
  41fadb:	or     eax,0x97e2fa64
  41fae0:	or     eax,0x8054439
  41fae5:	mov    BYTE PTR [ecx-0x573f6eda],dh
  41faeb:	enter  0xe1f2,0xac
  41faef:	icebp  
  41faf0:	hlt    
  41faf1:	push   eax
  41faf2:	mov    bh,BYTE PTR [ebx-0x77]
  41faf5:	dec    esp
  41faf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faf7:	rcl    al,1
  41faf9:	and    bl,BYTE PTR [edi]
  41fafb:	stos   BYTE PTR es:[edi],al
  41fafc:	out    dx,eax
  41fafd:	mov    ebx,0x1578111b
  41fb02:	pop    esi
  41fb03:	dec    edx
  41fb04:	int    0x7a
  41fb06:	int3   
  41fb07:	ins    BYTE PTR es:[edi],dx
  41fb08:	mov    edx,0x71075a9c
  41fb0d:	ficomp DWORD PTR [esi-0x6c]
  41fb10:	test   eax,0xfd84c0d4
  41fb15:	and    DWORD PTR [edx+0x5f4db533],0x81e55fe4
  41fb1f:	jecxz  0x41fae4
  41fb21:	ret    0x3e34
  41fb24:	or     BYTE PTR [ebx-0xe04e86b],cl
  41fb2a:	or     al,cl
  41fb2c:	retf   0x16b0
  41fb2f:	ret    
  41fb30:	scas   al,BYTE PTR es:[edi]
  41fb31:	pop    edx
  41fb32:	inc    esi
  41fb33:	fdivr  QWORD PTR [ecx]
  41fb35:	call   0xeefa:0x1ec4c7d4
  41fb3c:	ss mov ebp,0xc020f825
  41fb42:	cmp    DWORD PTR [ebx+ecx*8],edi
  41fb45:	mov    eax,DWORD PTR ds:0xc1011c9e
  41fb4b:	adc    ebx,DWORD PTR [edi+0x3cd52f29]
  41fb51:	inc    eax
  41fb52:	cwde   
  41fb53:	push   edx
  41fb54:	in     al,0x96
  41fb56:	fcom   st(7)
  41fb58:	jne    0x41fb5d
  41fb5a:	call   0x4a369362
  41fb5f:	pop    ds
  41fb60:	and    al,0x57
  41fb62:	jecxz  0x41fb70
  41fb64:	push   cs
  41fb65:	and    BYTE PTR [eax+0x7e],bl
  41fb68:	pop    ecx
  41fb69:	lods   al,BYTE PTR ds:[esi]
  41fb6a:	cmp    BYTE PTR [edx],al
  41fb6c:	xor    BYTE PTR [eax],dl
  41fb6e:	mov    ds:0x563fae6f,al
  41fb73:	inc    ebp
  41fb74:	mov    esi,0x9df8f954
  41fb79:	inc    ebx
  41fb7a:	mov    esi,0xfce9df37
  41fb7f:	popf   
  41fb80:	fwait
  41fb81:	jns    0x41fbc4
  41fb83:	xor    edx,edi
  41fb85:	jo     0x41fbd7
  41fb87:	and    BYTE PTR [ecx+0x52],bh
  41fb8a:	in     al,0xea
  41fb8c:	jnp    0x41fb55
  41fb8e:	(bad)  
  41fb8f:	jns    0x41fbd5
  41fb91:	or     al,0xbe
  41fb93:	lock sahf 
  41fb95:	test   BYTE PTR [ebx+0x4f68020a],0x6a
  41fb9c:	mov    ebx,0xe798753e
  41fba1:	pushf  
  41fba2:	mov    ebx,gs
  41fba4:	test   al,0x3c
  41fba6:	push   es
  41fba7:	outs   dx,DWORD PTR ds:[esi]
  41fba8:	outs   dx,DWORD PTR ds:[esi]
  41fba9:	imul   eax,DWORD PTR [edi-0x54c190cc],0x41
  41fbb0:	adc    al,0xcd
  41fbb2:	or     eax,0x370a5834
  41fbb7:	mov    ds:0x319edd84,al
  41fbbc:	outs   dx,BYTE PTR ds:[esi]
  41fbbd:	jl     0x41fb5a
  41fbbf:	es or  eax,0x1743d416
  41fbc5:	mov    al,es:0x2a37b58a
  41fbcb:	lock sub eax,0xc48c418
  41fbd1:	dec    eax
  41fbd2:	mov    eax,ds:0xc6ad5ead
  41fbd7:	lahf   
  41fbd8:	ins    BYTE PTR es:[edi],dx
  41fbd9:	in     al,0x54
  41fbdb:	inc    edx
  41fbdc:	adc    DWORD PTR [esi-0x64],0x590afba
  41fbe3:	mov    edi,0x6ddb96a2
  41fbe8:	push   eax
  41fbe9:	call   0xac5408a2
  41fbee:	mov    esi,ecx
  41fbf0:	mov    bh,0x90
  41fbf2:	(bad)  
  41fbf3:	fcom   DWORD PTR [eax]
  41fbf5:	cdq    
  41fbf6:	xor    eax,0x58b1d73
  41fbfb:	lock or BYTE PTR [esi],0x3c
  41fbff:	aam    0x53
  41fc01:	xchg   DWORD PTR [edx-0x6a5b05e6],ecx
  41fc07:	dec    eax
  41fc08:	loop   0x41fc85
  41fc0a:	imul   eax,DWORD PTR [edi],0xffffff9c
  41fc0d:	stos   BYTE PTR es:[edi],al
  41fc0e:	enter  0xbedc,0xd2
  41fc12:	iret   
  41fc13:	or     dl,BYTE PTR [ecx]
  41fc15:	retf   
  41fc16:	(bad)
  41fc19:	sbb    esi,DWORD PTR [edx+esi*1+0x20]
  41fc1d:	(bad)
  41fc20:	adc    BYTE PTR [ecx+0x23796057],bl
  41fc26:	xchg   ecx,eax
  41fc27:	aaa    
  41fc28:	adc    eax,0x92d83db8
  41fc2d:	icebp  
  41fc2e:	in     eax,dx
  41fc2f:	jle    0x41fc32
  41fc31:	mov    al,0xdc
  41fc33:	imul   eax,DWORD PTR [ecx-0xd3f559b],0x60
  41fc3a:	nop
  41fc3b:	add    dh,dh
  41fc3d:	dec    edx
  41fc3e:	dec    esp
  41fc3f:	push   ds
  41fc40:	push   ebp
  41fc41:	pop    ds
  41fc42:	test   DWORD PTR [esi+0x3a7e3624],0xdd79af35
  41fc4c:	test   eax,0xe04697cc
  41fc51:	ja     0x41fca4
  41fc53:	dec    ebx
  41fc54:	gs push esi
  41fc56:	lock mov cl,0x60
  41fc59:	sbb    eax,0xb836c4b1
  41fc5e:	mov    eax,0xa0f74614
  41fc63:	sti    
  41fc64:	mov    WORD PTR [ecx+eiz*1],?
  41fc67:	jno    0x41fca1
  41fc69:	sub    ebp,esi
  41fc6b:	jbe    0x41fca1
  41fc6d:	xchg   edx,eax
  41fc6e:	popf   
  41fc6f:	push   esi
  41fc70:	call   FWORD PTR [esp+eax*2-0x5a]
  41fc74:	(bad)  
  41fc75:	test   BYTE PTR [eax+0x407bf9c],0x3b
  41fc7c:	or     ebp,esi
  41fc7e:	call   0x2628:0x42df577
  41fc85:	popf   
  41fc86:	mov    ds:0x3c5e1daf,eax
  41fc8b:	inc    ebp
  41fc8c:	dec    esp
  41fc8d:	loop   0x41fc50
  41fc8f:	leave  
  41fc90:	pop    ds
  41fc91:	sbb    ecx,0xffffff87
  41fc94:	or     dh,BYTE PTR [eax-0x10]
  41fc97:	xor    ch,dh
  41fc99:	mov    ebx,0x8eab8a63
  41fc9e:	sbb    BYTE PTR [ebx-0x5b695af2],bl
  41fca4:	mov    al,0x1
  41fca6:	xor    bh,BYTE PTR [esi+ecx*2]
  41fca9:	fstp   QWORD PTR [ecx-0x1add75a4]
  41fcaf:	add    BYTE PTR [eax-0x67],ah
  41fcb2:	test   al,0xaf
  41fcb4:	dec    ebx
  41fcb5:	jmp    FWORD PTR [ecx+0x51841528]
  41fcbb:	mov    ch,bl
  41fcbd:	lods   eax,DWORD PTR gs:[esi]
  41fcbf:	mov    ah,0x26
  41fcc1:	jno    0x41fc6b
  41fcc3:	mov    eax,ds:0x2365ad4f
  41fcc8:	(bad)  
  41fcc9:	outs   dx,DWORD PTR ds:[esi]
  41fcca:	xor    al,0x50
  41fccc:	mov    BYTE PTR [ebp-0x1b],dl
  41fccf:	jg     0x41fc55
  41fcd1:	jle    0x41fc9c
  41fcd3:	bound  esi,QWORD PTR [esi+edi*8-0x51]
  41fcd7:	loopne 0x41fc69
  41fcd9:	push   es
  41fcda:	or     eax,0x2a988c97
  41fcdf:	xor    ebx,DWORD PTR [edi]
  41fce1:	mov    al,0x88
  41fce3:	popf   
  41fce4:	push   ss
  41fce5:	add    DWORD PTR [eax+ecx*2-0x2a30d223],edi
  41fcec:	rcr    BYTE PTR ds:0xb2ede091,1
  41fcf2:	popa   
  41fcf3:	bound  esi,QWORD PTR [edi-0x77934183]
  41fcf9:	mov    esp,0x4c2f5fcd
  41fcfe:	inc    ecx
  41fcff:	adc    DWORD PTR [ebx-0x54],edx
  41fd02:	stos   BYTE PTR es:[edi],al
  41fd03:	lods   eax,DWORD PTR ds:[esi]
  41fd04:	shl    DWORD PTR [edx],cl
  41fd06:	jbe    0x41fcd9
  41fd08:	into   
  41fd09:	push   ds
  41fd0a:	ror    BYTE PTR [eax],1
  41fd0c:	sub    al,0x8c
  41fd0e:	mov    bl,0x3e
  41fd10:	mov    al,bh
  41fd12:	or     ah,dh
  41fd14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd15:	cmp    DWORD PTR [eax+edx*2-0x96b48a6],edx
  41fd1c:	pushf  
  41fd1d:	inc    edi
  41fd1e:	cdq    
  41fd1f:	out    dx,eax
  41fd20:	mov    ebx,0x6b00b884
  41fd25:	rol    BYTE PTR [eax],0x3a
  41fd28:	outs   dx,BYTE PTR ds:[esi]
  41fd29:	and    ah,BYTE PTR [ecx]
  41fd2b:	pop    esi
  41fd2c:	popf   
  41fd2d:	dec    esp
  41fd2e:	in     al,0x9c
  41fd30:	pop    ecx
  41fd31:	adc    BYTE PTR [ecx-0x5a],0x31
  41fd35:	mov    al,ds:0x2127085a
  41fd3a:	push   edx
  41fd3b:	mov    edx,0xce123ccb
  41fd40:	sub    al,0x84
  41fd42:	pop    edi
  41fd43:	pop    ebx
  41fd44:	pushf  
  41fd45:	ss popf 
  41fd47:	or     DWORD PTR [ecx-0x4895862c],eax
  41fd4d:	jno    0x41fdbd
  41fd4f:	mov    ds:0x5ff8c0bc,eax
  41fd54:	jge    0x41fdc7
  41fd56:	mov    BYTE PTR [ebx+0x1c383e47],ah
  41fd5c:	loope  0x41fce9
  41fd5e:	hlt    
  41fd5f:	and    eax,0x6ec5befe
  41fd64:	inc    eax
  41fd65:	jb     0x41fd42
  41fd67:	or     al,0x17
  41fd69:	retf   
  41fd6a:	mul    BYTE PTR [eax-0x345217f8]
  41fd70:	sbb    BYTE PTR [ebp-0x6711508d],al
  41fd76:	or     al,0x19
  41fd78:	add    DWORD PTR [ebx],esp
  41fd7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd7b:	mov    cl,0x4
  41fd7d:	ja     0x41fd78
  41fd7f:	xor    BYTE PTR [ebx+0x1],ch
  41fd82:	dec    ebx
  41fd83:	add    dh,BYTE PTR [edx+0x541977c9]
  41fd89:	fdiv   QWORD PTR [ecx+edi*1-0x7c]
  41fd8d:	jle    0x41fded
  41fd8f:	test   DWORD PTR [esi+0x23f31678],0xfce1edcd
  41fd99:	mov    ebp,0x572dcd20
  41fd9e:	scas   eax,DWORD PTR es:[edi]
  41fd9f:	jp     0x41fd25
  41fda1:	sub    BYTE PTR ds:0xfebee744,dh
  41fda7:	aad    0x4c
  41fda9:	pop    ebp
  41fdaa:	icebp  
  41fdab:	in     al,0x68
  41fdad:	cdq    
  41fdae:	push   ss
  41fdaf:	and    edi,DWORD PTR [esp+ecx*1-0x3f]
  41fdb3:	inc    eax
  41fdb4:	push   0xffffff8c
  41fdb6:	test   al,0x7f
  41fdb8:	mov    al,0x8f
  41fdba:	or     esi,DWORD PTR [edi]
  41fdbc:	(bad)  
  41fdbd:	xor    dh,BYTE PTR [ecx+esi*8]
  41fdc0:	sbb    eax,0xe24a5c6f
  41fdc5:	hlt    
  41fdc6:	inc    ebp
  41fdc7:	pop    eax
  41fdc8:	enter  0x679e,0xf5
  41fdcc:	cld    
  41fdcd:	clc    
  41fdce:	out    dx,al
  41fdcf:	cmp    DWORD PTR [esp+eax*4-0x15],edi
  41fdd3:	jle    0x41fdac
  41fdd5:	daa    
  41fdd6:	inc    ebx
  41fdd7:	inc    esp
  41fdd8:	jg     0x41fd7a
  41fdda:	jne    0x41fe32
  41fddc:	and    al,0xa3
  41fdde:	jmp    0xb22e:0xc4dce48b
  41fde5:	push   edx
  41fde6:	pop    ds
  41fde7:	imul   ebp,DWORD PTR [ebp-0x33],0xffffffae
  41fdeb:	ins    BYTE PTR es:[edi],dx
  41fdec:	sbb    BYTE PTR [ecx+0x4fa2dba8],cl
  41fdf2:	or     BYTE PTR [ecx+0x5d56b790],ch
  41fdf8:	scas   eax,DWORD PTR es:[edi]
  41fdf9:	repnz sbb edx,ebp
  41fdfc:	xor    DWORD PTR [esi+ebp*2+0x329251e3],0x3a
  41fe04:	dec    esi
  41fe05:	call   0xc11c11e2
  41fe0a:	and    eax,0x8c1cc3b8
  41fe0f:	cld    
  41fe10:	shl    DWORD PTR [eax],1
  41fe12:	push   edx
  41fe13:	(bad)  
  41fe14:	out    0x21,al
  41fe16:	loopne 0x41fdff
  41fe18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe19:	xor    al,dh
  41fe1b:	mov    ecx,0x2655763e
  41fe20:	sub    eax,ecx
  41fe22:	add    bl,BYTE PTR [ebp+0x3a]
  41fe25:	cmc    
  41fe26:	in     al,dx
  41fe27:	jae    0x41fdfe
  41fe29:	or     ch,ah
  41fe2b:	xor    al,0x4a
  41fe2d:	es test al,0x21
  41fe30:	(bad)  [ecx]
  41fe32:	in     eax,0x10
  41fe34:	(bad)  
  41fe35:	push   ds
  41fe36:	pop    ecx
  41fe37:	cs xchg edx,eax
  41fe39:	call   0xb159:0x75b8b265
  41fe40:	xchg   DWORD PTR [eax+ecx*2],ebp
  41fe43:	sub    DWORD PTR [eax+0xd48b4dc],ecx
  41fe49:	and    BYTE PTR [edi+ebx*2],cl
  41fe4c:	dec    eax
  41fe4d:	mov    eax,ds:0x70e5000
  41fe52:	call   0x1675a5c2
  41fe57:	and    al,0xbb
  41fe59:	dec    esp
  41fe5a:	in     eax,0x5e
  41fe5c:	fisttp WORD PTR [esi]
  41fe5e:	xor    ah,BYTE PTR [ebp-0x3457fbb8]
  41fe64:	test   edi,eax
  41fe66:	dec    DWORD PTR ds:0x6742f04f
  41fe6c:	repnz mov al,ds:0x346d559c
  41fe72:	adc    al,0xad
  41fe74:	enter  0xe12a,0xc3
  41fe78:	in     eax,dx
  41fe79:	xor    ebp,eax
  41fe7b:	cmp    BYTE PTR [ecx-0x1d],bh
  41fe7e:	jne    0x41fed2
  41fe80:	and    ebp,DWORD PTR [ecx-0x47a35898]
  41fe86:	mov    ah,0x26
  41fe88:	push   ss
  41fe89:	adc    al,0xe0
  41fe8b:	or     edx,DWORD PTR ds:0x97f58104
  41fe91:	fwait
  41fe92:	cli    
  41fe93:	xor    al,0xe9
  41fe95:	adc    BYTE PTR [eax],ch
  41fe97:	test   al,0x9f
  41fe99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe9a:	add    ecx,ecx
  41fe9c:	leave  
  41fe9d:	les    ecx,FWORD PTR [eax]
  41fe9f:	dec    esp
  41fea0:	push   edi
  41fea1:	aad    0x8e
  41fea3:	icebp  
  41fea4:	pop    ss
  41fea5:	(bad)  
  41fea6:	dec    ebx
  41fea7:	and    al,0x70
  41fea9:	jge    0x41ff09
  41feab:	sub    BYTE PTR [esi],ah
  41fead:	mov    DWORD PTR [ebx-0x116b3ca7],eax
  41feb3:	adc    eax,ecx
  41feb5:	sar    BYTE PTR [eax+0x3ce21a10],cl
  41febb:	cmp    DWORD PTR [esi],ecx
  41febd:	ja     0x41fee6
  41febf:	ins    BYTE PTR es:[edi],dx
  41fec0:	ja     0x41fecc
  41fec2:	xor    al,BYTE PTR [eax]
  41fec4:	add    BYTE PTR [eax],al
  41fec6:	add    BYTE PTR [eax],al
  41fec8:	(bad)  
  41fec9:	sbb    eax,DWORD PTR [esi]
  41fecb:	push   ebx
  41fecc:	push   ecx
  41fecd:	or     DWORD PTR [eax],eax
  41fecf:	add    BYTE PTR [eax],al
  41fed1:	add    BYTE PTR [eax],al
  41fed3:	add    BYTE PTR [ecx+0x9],dl
  41fed6:	add    BYTE PTR [eax],al
  41fed8:	and    al,BYTE PTR [eax]
  41feda:	es jl  0x41fedd
  41fedd:	add    dh,BYTE PTR [esi]
  41fedf:	or     BYTE PTR [eax],al
  41fee1:	add    ah,al
  41fee3:	inc    ebp
  41fee4:	add    BYTE PTR [ecx+ebx*2-0x25],bh
  41fee8:	sub    BYTE PTR [edi],dh
  41feea:	mov    dh,0x33
  41feec:	or     BYTE PTR [edx*4-0x103e68e0],ah
  41fef3:	pop    edi
  41fef4:	cli    
  41fef5:	mov    dh,0x48
  41fef7:	pushf  
  41fef8:	rcr    bl,1
  41fefa:	lahf   
  41fefb:	sub    eax,0x6c4250af
  41ff00:	popa   
  41ff01:	push   edx
  41ff02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff03:	jnp    0x41ff53
  41ff05:	jb     0x41ff34
  41ff07:	xchg   edi,eax
  41ff08:	nop
  41ff09:	sub    BYTE PTR [esi-0x3b],dl
  41ff0c:	das    
  41ff0d:	mov    al,0x7a
  41ff0f:	aam    0xef
  41ff11:	cmp    BYTE PTR [ebx+0x60],bh
  41ff14:	fnstcw WORD PTR [edx]
  41ff16:	add    edi,DWORD PTR [eax+ecx*2-0x79]
  41ff1a:	pop    esp
  41ff1b:	xor    ch,BYTE PTR ds:0x882809f2
  41ff21:	iret   
  41ff22:	rol    DWORD PTR [eax+0x161163cd],cl
  41ff28:	mov    bh,0x6e
  41ff2a:	sbb    eax,0xcb88a44d
  41ff2f:	mov    dh,0xc
  41ff31:	cmp    bh,BYTE PTR [edx]
  41ff33:	dec    ebx
  41ff34:	sbb    ecx,DWORD PTR [esi+ecx*1+0x73]
  41ff38:	je     0x41ff5c
  41ff3a:	xchg   edx,eax
  41ff3b:	ins    DWORD PTR es:[edi],dx
  41ff3c:	lmsw   WORD PTR [eax-0x1d]
  41ff40:	lahf   
  41ff41:	outs   dx,BYTE PTR ds:[esi]
  41ff42:	and    ecx,DWORD PTR [edi-0x6b4bf900]
  41ff48:	or     DWORD PTR [edi+esi*4+0x2a1e189f],0xfffffff9
  41ff50:	mov    eax,0x65dfe29f
  41ff55:	hlt    
  41ff56:	push   ebp
  41ff57:	pop    es
  41ff58:	add    al,0xdc
  41ff5a:	fmul   QWORD PTR [eax]
  41ff5c:	(bad)  
  41ff5d:	out    0x6,al
  41ff5f:	fistp  QWORD PTR [edi]
  41ff61:	jae    0x41fee7
  41ff63:	and    ah,BYTE PTR [ebx+0x29a81864]
  41ff69:	(bad)  
  41ff6a:	ja     0x41ff14
  41ff6c:	or     eax,0x66e5d214
  41ff71:	dec    esi
  41ff72:	jp     0x41ff52
  41ff74:	int3   
  41ff75:	pusha  
  41ff76:	leave  
  41ff77:	lds    edi,FWORD PTR [edi]
  41ff79:	nop
  41ff7a:	push   edx
  41ff7b:	push   ss
  41ff7c:	or     esi,eax
  41ff7e:	stos   BYTE PTR es:[edi],al
  41ff7f:	push   ebp
  41ff80:	lods   al,BYTE PTR ds:[esi]
  41ff81:	inc    ecx
  41ff82:	mov    esp,?
  41ff84:	sbb    esi,edx
  41ff86:	adc    al,0x66
  41ff88:	iret   
  41ff89:	mov    esi,ebx
  41ff8b:	jbe    0x41ff33
  41ff8d:	outs   dx,DWORD PTR ds:[esi]
  41ff8e:	cmp    al,0xbc
  41ff90:	push   ecx
  41ff91:	cmp    ebp,DWORD PTR [esi+0x1]
  41ff94:	pop    ebx
  41ff95:	add    cl,dh
  41ff97:	or     al,0xe0
  41ff99:	jle    0x41ff86
  41ff9b:	mov    bl,0xa7
  41ff9d:	loopne 0x41ffab
  41ff9f:	push   ss
  41ffa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffa1:	add    al,0xce
  41ffa3:	gs xchg esp,eax
  41ffa5:	iret   
  41ffa6:	mov    bl,0x3d
  41ffa8:	inc    edi
  41ffa9:	push   edx
  41ffaa:	sub    BYTE PTR [esi-0x6e],ch
  41ffad:	and    edx,DWORD PTR [ebp+esi*2-0x2f797712]
  41ffb4:	shr    BYTE PTR [ecx+0x2d04b6ae],cl
  41ffba:	push   esi
  41ffbb:	pop    edi
  41ffbc:	hlt    
  41ffbd:	jo     0x420011
  41ffbf:	mov    edx,0xdc0c33b4
  41ffc4:	push   0xf1315418
  41ffc9:	jns    0x41ffec
  41ffcb:	ret    0x18cd
  41ffce:	cmp    al,0x73
  41ffd0:	jmp    0x180a:0xbf9502bc
  41ffd7:	pusha  
  41ffd8:	cmp    eax,0x32b24ab7
  41ffdd:	mov    edx,0xd0084554
  41ffe2:	popa   
  41ffe3:	sbb    DWORD PTR [edi+0x54c4794f],edi
  41ffe9:	sub    al,0x26
  41ffeb:	mov    ch,0x74
  41ffed:	jle    0x42005a
  41ffef:	pushf  
  41fff0:	xor    DWORD PTR [edx+0x50],ebp
  41fff3:	sbb    al,ah
  41fff5:	enter  0x4509,0x6a
  41fff9:	lods   al,BYTE PTR ds:[esi]
  41fffa:	xor    BYTE PTR [esp+edi*1-0x15],dh
  41fffe:	shl    BYTE PTR [ebp-0x6a812bd3],1
  420004:	sbb    al,0xf4
  420006:	inc    esi
  420007:	xchg   ecx,eax
  420008:	repz jne 0x41ffb8
  42000b:	dec    ebp
  42000c:	pop    ebp
  42000d:	inc    eax
  42000e:	hlt    
  42000f:	jmp    0xd7cc:0xe3f3446f
  420016:	fs add dl,al
  420019:	mov    esi,0x4cbadf23
  42001e:	pushf  
  42001f:	mov    al,al
  420021:	xchg   ebx,eax
  420022:	mov    ah,0xb3
  420024:	xchg   esi,eax
  420025:	cmp    bl,bh
  420027:	mov    edi,0xdc69eeac
  42002c:	ss int3 
  42002e:	fisttp DWORD PTR [ebx]
  420030:	call   0x5269:0x648d754
  420037:	leave  
  420038:	push   es
  420039:	add    al,0x78
  42003b:	xor    BYTE PTR [ebx-0x7e],0x5d
  42003f:	enter  0xbc88,0xe6
  420043:	pushf  
  420044:	sbb    DWORD PTR [ebp+0x9f06ddf],eax
  42004a:	lods   eax,DWORD PTR ds:[esi]
  42004b:	cmp    eax,eax
  42004d:	ins    DWORD PTR es:[edi],dx
  42004e:	cmp    BYTE PTR [edx-0x1e750c3d],bl
  420054:	dec    ebp
  420055:	in     al,0xb7
  420057:	push   esp
  420058:	mov    al,ds:0x9ceb0fdb
  42005d:	xchg   edi,eax
  42005e:	mov    esi,gs
  420060:	cmp    edx,DWORD PTR [ecx+0x2592cd36]
  420066:	push   cs
  420067:	mov    al,0x8b
  420069:	or     DWORD PTR [ebx],ebp
  42006b:	mov    al,0x5
  42006d:	sar    esp,cl
  42006f:	ss aam 0xc
  420072:	inc    eax
  420073:	jecxz  0x420064
  420075:	dec    ebx
  420076:	lods   eax,DWORD PTR ds:[esi]
  420077:	dec    ecx
  420078:	xchg   ebx,eax
  420079:	clc    
  42007a:	scas   eax,DWORD PTR es:[edi]
  42007b:	jmp    0x99ed0a4a
  420080:	mov    ds:0xb25aa073,eax
  420085:	jg     0x42005e
  420087:	addr16 xchg edi,eax
  420089:	(bad)  
  42008a:	rol    esp,cl
  42008c:	jbe    0x420039
  42008e:	icebp  
  42008f:	dec    edi
  420090:	imul   edi,DWORD PTR [eax+0x48],0xa08ce827
  420097:	push   DWORD PTR [ebp-0x3c]
  42009a:	jo     0x420082
  42009c:	mov    WORD PTR [esp+ebx*1],cs
  42009f:	mov    dh,0x8c
  4200a1:	aas    
  4200a2:	scas   al,BYTE PTR es:[edi]
  4200a3:	sbb    al,0xde
  4200a5:	fnsave [eax]
  4200a7:	enter  0x1968,0x82
  4200ab:	test   dl,dl
  4200ad:	dec    edx
  4200ae:	repnz fdivr st,st(1)
  4200b1:	push   ebx
  4200b2:	dec    edx
  4200b3:	aam    0x80
  4200b5:	adc    ebx,DWORD PTR [edi-0x68fe03ec]
  4200bb:	dec    ebp
  4200bc:	xchg   BYTE PTR [edx+0x209911ca],dh
  4200c2:	push   edx
  4200c3:	ficom  DWORD PTR [ebx]
  4200c5:	ror    BYTE PTR [eax+0x44bf3c86],cl
  4200cb:	aas    
  4200cc:	xor    edx,esp
  4200ce:	jl     0x4200bf
  4200d0:	jo     0x4200c0
  4200d2:	pop    ebx
  4200d3:	in     al,dx
  4200d4:	mov    al,ds:0xe823f84d
  4200d9:	push   ebp
  4200da:	cli    
  4200db:	sub    DWORD PTR [eax],edx
  4200dd:	(bad)  
  4200de:	dec    edx
  4200df:	retf   0xcaa
  4200e2:	ret    
  4200e3:	and    cl,al
  4200e5:	xor    al,0x72
  4200e7:	dec    edx
  4200e8:	rcr    BYTE PTR [edi+0x24],cl
  4200eb:	sti    
  4200ec:	loopne 0x42014a
  4200ee:	pop    eax
  4200ef:	sub    eax,0xf4502e20
  4200f4:	into   
  4200f5:	stos   BYTE PTR es:[edi],al
  4200f6:	lods   al,BYTE PTR ds:[esi]
  4200f7:	jl     0x420092
  4200f9:	aam    0xf8
  4200fb:	jb     0x4200a3
  4200fd:	pop    ebx
  4200fe:	cdq    
  4200ff:	or     BYTE PTR [esi*2-0x3ff00f94],ah
  420106:	imul   edx,ecx,0x4
  420109:	dec    eax
  42010a:	std    
  42010b:	pop    ds
  42010c:	in     al,dx
  42010d:	inc    esp
  42010e:	div    DWORD PTR [ebx+0x76]
  420111:	lds    ebp,FWORD PTR [edi+ebx*2+0x30]
  420115:	pop    ss
  420116:	loope  0x42016a
  420118:	mov    eax,ds:0x589075f2
  42011d:	sahf   
  42011e:	or     eax,0x108dc324
  420123:	pop    ebx
  420124:	mov    ah,0x45
  420126:	inc    ecx
  420127:	lods   al,BYTE PTR ds:[esi]
  420128:	pop    ebp
  420129:	mov    dh,0x55
  42012b:	cmp    ebp,ecx
  42012d:	pop    esp
  42012e:	fidivr WORD PTR ds:0x5b4cbccb
  420134:	dec    esi
  420135:	xor    BYTE PTR fs:[esi-0x5a8bd297],0xb1
  42013d:	sub    BYTE PTR gs:[ecx+esi*1+0xc96bcc8],ah
  420145:	xchg   DWORD PTR [eax+0x6f],eax
  420148:	enter  0x5a9c,0x71
  42014c:	sbb    al,ah
  42014e:	loopne 0x4200f0
  420150:	pop    ebp
  420151:	jo     0x42015f
  420153:	and    bl,dl
  420155:	fsub   DWORD PTR [esi]
  420157:	lods   al,BYTE PTR ds:[esi]
  420158:	popa   
  420159:	in     eax,0x94
  42015b:	mov    dl,BYTE PTR [edi]
  42015d:	stos   BYTE PTR es:[edi],al
  42015e:	inc    ebx
  42015f:	and    eax,0xb8a9495b
  420164:	fadd   DWORD PTR [ebx-0x7c]
  420167:	ins    BYTE PTR es:[edi],dx
  420168:	cld    
  420169:	xchg   ecx,eax
  42016a:	jle    0x4201b3
  42016c:	fdiv   QWORD PTR [edx]
  42016e:	mov    bl,0x2d
  420170:	pop    eax
  420171:	ret    0xb2d
  420174:	mov    edi,0xfa293900
  420179:	je     0x420106
  42017b:	ja     0x42012a
  42017d:	call   0x2e2852a
  420182:	jge    0x4201af
  420184:	xor    cl,BYTE PTR [ecx]
  420186:	sti    
  420187:	int3   
  420188:	push   esi
  420189:	cmp    cl,al
  42018b:	idiv   BYTE PTR [esi+0x6d]
  42018e:	and    al,0xb2
  420190:	lock jge 0x420131
  420193:	in     al,dx
  420194:	mov    ?,WORD PTR [eax+0x14592401]
  42019a:	inc    edi
  42019b:	std    
  42019c:	cmp    DWORD PTR ds:0xf254e83,ebx
  4201a2:	mov    esp,0xd7303541
  4201a7:	sbb    eax,0xe08b21c5
  4201ac:	mov    esi,ss
  4201ae:	sub    al,0xb1
  4201b0:	jmp    0xca62:0x41520ff
  4201b7:	das    
  4201b8:	mov    bl,0x4b
  4201ba:	mov    cl,0x7f
  4201bc:	xchg   BYTE PTR [eax],ch
  4201be:	sub    al,0x1f
  4201c0:	xchg   ah,bl
  4201c2:	in     eax,dx
  4201c3:	add    BYTE PTR [esi+ecx*2+0x4c],0x10
  4201c8:	xchg   ebp,eax
  4201c9:	sub    DWORD PTR [esi-0x147da028],eax
  4201cf:	hlt    
  4201d0:	push   ebp
  4201d1:	jns    0x420189
  4201d3:	push   ebx
  4201d4:	pop    edx
  4201d5:	arpl   bx,ax
  4201d7:	loopne 0x4201f1
  4201d9:	sbb    DWORD PTR [ebx],ebx
  4201db:	adc    eax,0x3a189fed
  4201e0:	test   DWORD PTR [edi+eax*1],edi
  4201e3:	mov    eax,0xff4a4d0f
  4201e8:	(bad)  
  4201e9:	adc    DWORD PTR [eax+0x18],esp
  4201ec:	jbe    0x420189
  4201ee:	dec    ecx
  4201ef:	dec    esi
  4201f0:	test   bh,bl
  4201f2:	or     eax,DWORD PTR [ebp+ebp*2+0x6a55435a]
  4201f9:	mov    cl,bh
  4201fb:	jo     0x420229
  4201fd:	and    al,0x91
  4201ff:	nop
  420200:	inc    ebp
  420201:	test   eax,0x50eec3d9
  420206:	sbb    esi,ecx
  420208:	inc    esi
  420209:	mov    ds:0xd56c41f1,al
  42020e:	je     0x42020a
  420210:	pop    ebp
  420211:	pushf  
  420212:	and    DWORD PTR [eax-0x6773c1d6],edx
  420218:	retf   
  420219:	pop    ecx
  42021a:	or     eax,0x10dfb58b
  42021f:	lea    eax,[eax+0x8]
  420222:	aad    0x22
  420224:	inc    edx
  420225:	push   eax
  420226:	mov    dh,0x7
  420228:	inc    ebx
  420229:	fs je  0x4201b8
  42022c:	(bad)  
  42022d:	mov    esi,0x1cc55a63
  420232:	mov    BYTE PTR [edi+eiz*2+0x6d],bl
  420236:	jl     0x420291
  420238:	je     0x420229
  42023a:	inc    edx
  42023b:	lods   al,BYTE PTR ds:[esi]
  42023c:	loope  0x420287
  42023e:	cli    
  42023f:	(bad)  
  420240:	cli    
  420241:	jnp    0x4202b1
  420243:	rcl    al,0x75
  420246:	jle    0x4201ee
  420248:	or     edx,DWORD PTR [edx]
  42024a:	test   edi,0xd8578f3
  420250:	addr16 fcmovb st,st(6)
  420253:	xor    BYTE PTR [ebx+edx*2+0x7ea88e9c],ch
  42025a:	cs test al,0xe7
  42025d:	popf   
  42025e:	push   ebp
  42025f:	shr    BYTE PTR [ebx+0x3a1c65cc],0x54
  420266:	push   eax
  420267:	fsub   st,st(4)
  420269:	rcl    BYTE PTR [edx+ebp*1],cl
  42026c:	cwde   
  42026d:	xor    DWORD PTR [ecx+0x54],0x3f958c81
  420274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420275:	and    BYTE PTR [eax],cl
  420277:	mov    ebp,0x3eb074c0
  42027c:	mov    bl,0xb0
  42027e:	lods   eax,DWORD PTR ds:[esi]
  42027f:	fs mov ch,0x28
  420282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420283:	aam    0xc6
  420285:	je     0x420249
  420287:	and    DWORD PTR [ecx-0x7838f0d],eax
  42028d:	std    
  42028e:	lods   al,BYTE PTR ds:[esi]
  42028f:	pop    ds
  420290:	repnz out 0x49,al
  420293:	push   ebx
  420294:	sbb    ebx,DWORD PTR [edx+esi*1]
  420297:	mov    esp,0xc3d3c6b5
  42029c:	aaa    
  42029d:	(bad)  
  42029e:	les    esp,FWORD PTR [ecx+0x24]
  4202a1:	scas   al,BYTE PTR es:[edi]
  4202a2:	stc    
  4202a3:	(bad)  
  4202a4:	clc    
  4202a5:	ret    
  4202a6:	addr16 call 0x313bf5e7
  4202ac:	sub    al,0x53
  4202ae:	out    dx,al
  4202af:	jp     0x4202bd
  4202b1:	jo     0x4202b6
  4202b3:	push   0x343ad5e6
  4202b8:	scas   eax,DWORD PTR es:[edi]
  4202b9:	xor    bh,ch
  4202bb:	les    eax,FWORD PTR [esi+0x561bec6d]
  4202c1:	leave  
  4202c2:	fmul   DWORD PTR [ebx]
  4202c4:	push   eax
  4202c5:	push   edi
  4202c6:	sahf   
  4202c7:	out    0x97,al
  4202c9:	shl    BYTE PTR [ebx+0x74f583fc],1
  4202cf:	les    ebp,FWORD PTR [edi+0x2b]
  4202d2:	stos   BYTE PTR es:[edi],al
  4202d3:	mov    esp,DWORD PTR [eax]
  4202d5:	addr16 repnz int3 
  4202d8:	inc    ebp
  4202d9:	clc    
  4202da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202db:	ret    
  4202dc:	xor    eax,0x195e6144
  4202e1:	into   
  4202e2:	push   ebp
  4202e3:	mov    ah,0xa5
  4202e5:	ins    DWORD PTR es:[edi],dx
  4202e6:	push   0xdeb241d4
  4202eb:	into   
  4202ec:	inc    edi
  4202ed:	neg    BYTE PTR [ecx+0x10]
  4202f0:	or     eax,DWORD PTR [esi+0x5526a5e9]
  4202f6:	push   ss
  4202f7:	cmp    eax,0xc6cdc234
  4202fc:	mov    bh,0xa6
  4202fe:	xlat   BYTE PTR ds:[ebx]
  4202ff:	jae    0x420372
  420301:	pop    eax
  420302:	jne    0x42033b
  420304:	(bad)  
  420305:	jb     0x4202a3
  420307:	cdq    
  420308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420309:	popf   
  42030a:	jl     0x42034e
  42030c:	jg     0x4202bb
  42030e:	call   DWORD PTR [eax-0x5f7fe2b2]
  420314:	test   BYTE PTR [ebx-0x46],al
  420317:	jmp    0xde6f3041
  42031c:	dec    eax
  42031d:	adc    al,0x52
  42031f:	pop    ecx
  420320:	(bad)  
  420321:	cmp    DWORD PTR [edi+0x45],esi
  420324:	jp     0x420392
  420326:	mov    cl,0xa6
  420328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420329:	pop    edx
  42032a:	or     DWORD PTR [ebp+ecx*2+0x347690b8],edi
  420331:	push   ebx
  420332:	or     al,0xb4
  420334:	xchg   esi,eax
  420335:	(bad)  [eax]
  420337:	mov    ah,0x83
  420339:	jne    0x420369
  42033b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42033d:	fwait
  42033e:	ss fs pop esp
  420341:	imul   edi,edi,0xd932ac81
  420347:	or     bh,cl
  420349:	sbb    BYTE PTR [ecx],0xc6
  42034c:	jne    0x420397
  42034e:	std    
  42034f:	in     eax,0x7
  420351:	mov    WORD PTR [edx+ecx*4+0x17ad196b],fs
  420358:	lods   al,BYTE PTR ds:[esi]
  420359:	into   
  42035a:	adc    ecx,eax
  42035c:	pop    ds
  42035d:	gs cwde 
  42035f:	mov    ecx,0x3ade65ab
  420364:	in     al,dx
  420365:	sbb    bl,BYTE PTR [edi-0xd0e832c]
  42036b:	and    al,0x56
  42036d:	xchg   esp,eax
  42036e:	popf   
  42036f:	pop    es
  420370:	pop    ebp
  420371:	jmp    0x273df039
  420376:	mov    eax,0xe08804ac
  42037b:	xor    DWORD PTR [ebp+0x43],esp
  42037e:	jecxz  0x42035c
  420380:	push   0x7fd81f9a
  420385:	(bad)  
  420386:	and    BYTE PTR [esi+0x6a6c1800],al
  42038c:	je     0x420404
  42038e:	jns    0x42033c
  420390:	pop    ss
  420391:	test   al,0xda
  420393:	test   al,0xd0
  420395:	inc    eax
  420396:	push   DWORD PTR [eax+0x38]
  420399:	aam    0xcc
  42039b:	enter  0xacf5,0x98
  42039f:	mov    dl,0xaf
  4203a1:	leave  
  4203a2:	or     eax,esi
  4203a4:	push   es
  4203a5:	test   bh,cl
  4203a7:	and    edx,ecx
  4203a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203aa:	outs   dx,DWORD PTR ds:[esi]
  4203ab:	xchg   esp,eax
  4203ac:	adc    al,0x53
  4203ae:	cmovno eax,DWORD PTR [edi+0x4b48e20e]
  4203b5:	cmp    BYTE PTR [esi+0x4f],cl
  4203b8:	or     eax,0x71c34fc5
  4203bd:	mov    edx,0x91d3e4e0
  4203c2:	outs   dx,BYTE PTR ds:[esi]
  4203c3:	dec    esp
  4203c4:	dec    esp
  4203c5:	add    al,0x74
  4203c7:	add    al,0x3d
  4203c9:	call   0x9aed8efd
  4203ce:	inc    edx
  4203cf:	cmp    DWORD PTR [eax],ebp
  4203d1:	push   0x5be93ab0
  4203d6:	or     bh,0x21
  4203d9:	dec    esp
  4203da:	xor    bl,BYTE PTR [edx+0x44e1a788]
  4203e0:	add    eax,0x9847056
  4203e5:	push   ecx
  4203e6:	xor    eax,0xf674c272
  4203eb:	sbb    BYTE PTR [esi+0x5ff2b5f3],dl
  4203f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f3:	scas   eax,DWORD PTR es:[edi]
  4203f4:	cmp    al,0xe3
  4203f6:	in     eax,dx
  4203f7:	mov    al,ds:0x8c91abee
  4203fc:	test   DWORD PTR [eax-0x79],esp
  4203ff:	in     eax,dx
  420400:	retf   0xcc54
  420403:	out    dx,eax
  420404:	adc    DWORD PTR [edi-0x7c],esp
  420407:	(bad)  
  420408:	loopne 0x420453
  42040a:	daa    
  42040b:	hlt    
  42040c:	(bad)  
  42040d:	adc    dh,BYTE PTR [ebx-0x1f5308d4]
  420413:	xor    eax,0xd920a92b
  420418:	push   eax
  420419:	push   0xd7a0a677
  42041e:	pop    ecx
  42041f:	das    
  420420:	stos   BYTE PTR es:[edi],al
  420421:	je     0x4203be
  420423:	in     al,dx
  420424:	mov    esp,0x9e5d069e
  420429:	call   0xc42e:0xa13a9098
  420430:	jae    0x42040e
  420432:	int3   
  420433:	mov    esp,0x285001bb
  420438:	fs call 0x606e:0x7d640b56
  420440:	and    bh,bh
  420442:	jbe    0x42042e
  420444:	pusha  
  420445:	mov    BYTE PTR [ebx],al
  420447:	retf   0x9b7d
  42044a:	es js  0x4204b4
  42044d:	shr    BYTE PTR [edi+ecx*8-0xec7bb54],0xcb
  420455:	shl    DWORD PTR [edx+0x86042d0],1
  42045b:	into   
  42045c:	imul   esp,DWORD PTR ds:0x43786949,0x12
  420463:	arpl   WORD PTR [ecx+0x7],di
  420466:	clc    
  420467:	ja     0x420438
  420469:	pushf  
  42046a:	lods   al,BYTE PTR ds:[esi]
  42046b:	leave  
  42046c:	fnstsw WORD PTR [edx+0x4217d848]
  420472:	rcr    dh,0x30
  420475:	inc    BYTE PTR gs:[ebp-0x70]
  420479:	test   al,0xb4
  42047b:	in     al,0xfa
  42047d:	test   BYTE PTR [eax+0x50],bh
  420480:	je     0x4204d0
  420482:	jnp    0x420490
  420484:	or     BYTE PTR ds:0xfbf6ba71,ch
  42048a:	jb     0x42046b
  42048c:	dec    ebp
  42048d:	mov    al,0x76
  42048f:	inc    ecx
  420490:	sub    esp,DWORD PTR [esi+esi*1-0x2ba46672]
  420497:	and    DWORD PTR [ebp+0x48facac9],esp
  42049d:	sti    
  42049e:	or     al,bh
  4204a0:	fnstcw WORD PTR [edx-0x34dddf59]
  4204a6:	jb     0x420459
  4204a8:	sbb    al,0xf1
  4204aa:	adc    al,0x55
  4204ac:	mov    eax,0x4bf8fe77
  4204b1:	inc    eax
  4204b2:	push   0x5d
  4204b4:	mov    cl,0x99
  4204b6:	cwde   
  4204b7:	in     al,0x32
  4204b9:	jbe    0x4204a3
  4204bb:	test   al,0x1b
  4204bd:	inc    edx
  4204be:	cmc    
  4204bf:	sbb    DWORD PTR [ebx+0x1],0xffffff8c
  4204c3:	or     al,0x43
  4204c5:	add    ebp,DWORD PTR [edi]
  4204c7:	push   ecx
  4204c8:	jne    0x420506
  4204ca:	add    cl,dl
  4204cc:	xor    BYTE PTR [ebx+0x6f],cl
  4204cf:	and    al,0x6a
  4204d1:	scas   al,BYTE PTR es:[edi]
  4204d2:	sub    eax,0x16545df5
  4204d7:	sahf   
  4204d8:	cmp    eax,0x149bf88b
  4204dd:	inc    edi
  4204de:	cld    
  4204df:	vmwrite edx,DWORD PTR cs:[esi-0x6a96d7be]
  4204e7:	and    ah,al
  4204e9:	outs   dx,BYTE PTR ds:[esi]
  4204ea:	add    ebp,DWORD PTR [ebx+0x4f]
  4204ed:	push   ebx
  4204ee:	push   ebp
  4204ef:	lahf   
  4204f0:	inc    esp
  4204f1:	add    dh,dl
  4204f3:	pop    ebp
  4204f4:	push   esi
  4204f5:	add    edi,esi
  4204f7:	es dec ebx
  4204f9:	push   0x1c9f7cc
  4204fe:	inc    edi
  4204ff:	int3   
  420500:	adc    cl,BYTE PTR [esp+ecx*4-0x795180ce]
  420507:	jle    0x42052a
  420509:	(bad)  
  42050b:	xor    al,0x5
  42050d:	fist   WORD PTR [edi]
  42050f:	sbb    ah,dh
  420511:	(bad)  
  420512:	int    0x0
  420514:	pop    eax
  420515:	sbb    BYTE PTR [eax+0x4e],ah
  420518:	push   eax
  420519:	mov    ebx,0x7cc298fc
  42051e:	lods   al,BYTE PTR ds:[esi]
  42051f:	bound  esi,QWORD PTR [ecx+eiz*8-0x76]
  420523:	pop    esp
  420524:	lea    edx,[ecx]
  420526:	mov    al,ds:0xa137148c
  42052b:	sbb    BYTE PTR [ebp-0x1bb77f08],ch
  420531:	pop    edx
  420532:	aad    0xc0
  420534:	inc    eax
  420535:	ins    DWORD PTR es:[edi],dx
  420536:	pop    ds
  420537:	push   0x6c
  420539:	xor    dl,ch
  42053b:	sbb    DWORD PTR [esi+0x56856a39],ebp
  420541:	nop
  420542:	adc    edx,DWORD PTR [esi+0x2a]
  420545:	and    DWORD PTR [esi-0x9],eax
  420548:	js     0x42054d
  42054a:	mov    ah,0xcc
  42054c:	stos   DWORD PTR es:[edi],eax
  42054d:	inc    edi
  42054e:	ss sbb eax,0xd8f07402
  420554:	lea    eax,[esi-0x6]
  420557:	push   ds
  420558:	push   ss
  420559:	jl     0x42051e
  42055b:	aad    0x80
  42055d:	call   0x31e58577
  420562:	sub    edx,DWORD PTR [ecx-0x2]
  420565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420566:	mov    BYTE PTR [ebx+edi*2-0x79],ah
  42056a:	push   edx
  42056b:	or     al,0xbb
  42056d:	mov    dh,0xc8
  42056f:	xchg   esi,eax
  420570:	out    0x7c,al
  420572:	mov    al,ds:0x20b99e8a
  420577:	in     al,dx
  420578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420579:	rol    esp,1
  42057b:	jle    0x4205ef
  42057d:	ror    DWORD PTR [edi+eiz*1+0x10],0x3e
  420582:	xor    al,0x1c
  420584:	and    eax,0xbc955803
  420589:	mov    eax,0x401ff540
  42058e:	mov    edi,0xdcfb3a11
  420593:	push   edi
  420594:	and    edi,DWORD PTR [eax-0x2daff281]
  42059a:	mov    dh,0x0
  42059c:	ins    BYTE PTR es:[edi],dx
  42059d:	mov    ds,WORD PTR [ebp-0x3d535ea4]
  4205a3:	xor    DWORD PTR [esi*8+0x5f74176b],esp
  4205aa:	and    DWORD PTR [ebx+0x7620cc6f],ecx
  4205b0:	test   DWORD PTR [eax],ebx
  4205b2:	jo     0x4205ae
  4205b4:	mov    ds:0x8f63f085,eax
  4205b9:	das    
  4205ba:	(bad)  
  4205bc:	sub    bh,BYTE PTR [esi]
  4205be:	mov    edi,0x917d4c14
  4205c3:	push   es
  4205c4:	add    eax,0x388fdbdc
  4205c9:	and    BYTE PTR [ebp-0x69811b6a],0xb2
  4205d0:	xor    DWORD PTR [edi+ecx*4-0x7c],ebx
  4205d4:	pop    es
  4205d5:	push   ss
  4205d6:	pop    edi
  4205d7:	mov    bh,0xe9
  4205d9:	(bad)  
  4205db:	ins    DWORD PTR es:[edi],dx
  4205dc:	(bad)  
  4205dd:	mov    eax,0xc86e0c72
  4205e2:	ins    BYTE PTR es:[edi],dx
  4205e3:	sub    BYTE PTR [ebp+edi*8+0x1f],cl
  4205e7:	xchg   ecx,eax
  4205e8:	arpl   WORD PTR [eax],sp
  4205ea:	out    0xff,al
  4205ec:	dec    esp
  4205ed:	xchg   edx,eax
  4205ee:	adc    DWORD PTR [edx+0x5c87e490],esp
  4205f4:	into   
  4205f5:	jo     0x420599
  4205f7:	repnz jecxz 0x4205c7
  4205fa:	jmp    0x4205b0
  4205fc:	aas    
  4205fd:	call   FWORD PTR [eax]
  4205ff:	ror    DWORD PTR [ebx-0x3e],1
  420602:	xor    DWORD PTR [ecx-0x19],ecx
  420605:	dec    ebx
  420606:	inc    edi
  420607:	cmp    al,0x46
  420609:	(bad)  
  42060a:	adc    al,0x2a
  42060c:	or     eax,0x6057f58b
  420611:	aaa    
  420612:	cmp    al,0x61
  420614:	cmp    eax,0xa33d172c
  420619:	test   BYTE PTR [eax-0x1c9fccfe],ah
  42061f:	aaa    
  420620:	pop    ecx
  420621:	leave  
  420622:	test   al,0x28
  420624:	adc    DWORD PTR [esi-0x57014f6e],edi
  42062a:	pop    esi
  42062b:	push   eax
  42062c:	ret    0x524b
  42062f:	cli    
  420630:	ret    0xbde8
  420633:	mov    cl,0x74
  420635:	cs and eax,0x9c30a03e
  42063b:	push   ebp
  42063c:	cmp    bl,BYTE PTR [eax-0x1c2cfbc6]
  420642:	jb     0x420658
  420644:	add    esi,DWORD PTR [edi-0x44]
  420647:	repnz xchg ebx,eax
  420649:	pop    edx
  42064a:	into   
  42064b:	xchg   edi,eax
  42064c:	jns    0x4205d7
  42064e:	lock loopne 0x4206c0
  420651:	cmp    DWORD PTR [edi-0x2a],ebx
  420654:	out    dx,eax
  420655:	mov    fs,WORD PTR [edi]
  420657:	xor    DWORD PTR [eax-0x3cd0e0cc],ecx
  42065d:	and    BYTE PTR [edi+0x31],bl
  420660:	sbb    eax,0x9d1df8ac
  420665:	fild   DWORD PTR [esi+0x29]
  420668:	int    0x3
  42066a:	rcl    BYTE PTR [eax+0x15],1
  42066d:	not    dl
  42066f:	inc    ebx
  420670:	sbb    BYTE PTR [eax+0x63fef4d3],bl
  420676:	pop    ss
  420677:	int    0x0
  420679:	aaa    
  42067a:	sub    DWORD PTR [edx-0x64],ecx
  42067d:	mov    cl,0xc2
  42067f:	or     dl,dl
  420681:	test   BYTE PTR [esp+edx*2-0x4f493f4d],dl
  420688:	ins    DWORD PTR es:[edi],dx
  420689:	addr16 pop ecx
  42068b:	retf   0xf3d3
  42068e:	in     al,0xc4
  420690:	dec    DWORD PTR [esi-0x74]
  420693:	adc    dl,BYTE PTR [ebx+0x6b08bcb2]
  420699:	lea    ebp,[esi]
  42069b:	test   bh,ch
  42069d:	pop    ebp
  42069e:	retf   0x2cb4
  4206a1:	ins    BYTE PTR es:[edi],dx
  4206a2:	push   esp
  4206a3:	fsubr  DWORD PTR [edi-0x4a]
  4206a6:	daa    
  4206a7:	xor    eax,0x32e8d4fa
  4206ac:	dec    ecx
  4206ad:	outs   dx,BYTE PTR ds:[esi]
  4206ae:	adc    eax,0xf850e4f8
  4206b3:	and    al,0x5b
  4206b5:	and    BYTE PTR ds:0x7be4e465,dh
  4206bb:	sbb    al,0x6d
  4206bd:	mov    esi,0x9535b006
  4206c2:	push   cs
  4206c3:	imul   eax,DWORD PTR [eax-0x46],0x3
  4206c7:	ja     0x4206f6
  4206c9:	adc    al,0x77
  4206cb:	into   
  4206cc:	in     al,0xe8
  4206ce:	lock or dl,0xd4
  4206d2:	mov    cl,0x2f
  4206d4:	add    al,0x92
  4206d6:	or     al,0x74
  4206d8:	jne    0x4206ab
  4206da:	fcmovu st,st(3)
  4206dc:	jp     0x42070d
  4206de:	xor    eax,0x35a91a30
  4206e3:	mov    ah,0x22
  4206e5:	jae    0x42075d
  4206e7:	lock push esp
  4206e9:	cmp    ch,cl
  4206eb:	inc    esp
  4206ec:	nop
  4206ed:	or     ecx,DWORD PTR ds:0x4e78dfdf
  4206f3:	sbb    dl,ch
  4206f5:	loope  0x420693
  4206f7:	mov    esi,0x3020a2d4
  4206fc:	cld    
  4206fd:	pop    ecx
  4206fe:	jno    0x42073c
  420700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420701:	sub    edx,ecx
  420703:	inc    esp
  420704:	call   0xde4516c9
  420709:	adc    edi,DWORD PTR [esi-0x5088974d]
  42070f:	jae    0x4206b4
  420711:	push   esp
  420712:	mov    esp,0x9e8c4a9e
  420717:	ds jp  0x4206ee
  42071a:	inc    edx
  42071b:	pop    ebp
  42071c:	xchg   edx,ecx
  42071e:	xor    al,0x40
  420720:	enter  0x6e2e,0xb9
  420724:	adc    ebp,DWORD PTR [eax-0x2d]
  420727:	pop    eax
  420728:	cmp    eax,0x1e0ba56a
  42072d:	stc    
  42072e:	fwait
  42072f:	dec    esi
  420730:	jl     0x4206b8
  420732:	xchg   ebx,eax
  420733:	mov    bh,0xa1
  420735:	lods   al,BYTE PTR ds:[esi]
  420736:	jmp    0xa1ff:0x4a03576
  42073d:	xor    DWORD PTR es:[ecx-0x23b0720],esp
  420744:	pushf  
  420745:	adc    al,cl
  420747:	push   ds
  420748:	retf   
  420749:	add    bh,dh
  42074b:	ins    BYTE PTR es:[edi],dx
  42074c:	xor    al,0xb
  42074e:	sub    al,0x23
  420750:	or     bh,BYTE PTR [esi-0x21]
  420753:	push   eax
  420754:	nop
  420755:	and    DWORD PTR [ecx-0x487e7ce6],ebx
  42075b:	mov    cl,BYTE PTR [eax-0x4c]
  42075e:	push   ebp
  42075f:	sar    DWORD PTR [edx],1
  420761:	adc    BYTE PTR [edi-0x27d77696],ah
  420767:	aad    0x2f
  420769:	xor    DWORD PTR ds:0xe7ffab90,0x7cbfe7fc
  420773:	sub    al,0x52
  420775:	sbb    edx,DWORD PTR [ecx]
  420777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420779:	xor    dl,BYTE PTR [ebp-0x18]
  42077c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42077d:	div    eax
  42077f:	pop    eax
  420780:	out    dx,eax
  420781:	enter  0x2fa5,0x98
  420785:	xor    eax,0xefb8ff54
  42078a:	in     al,dx
  42078b:	dec    ebp
  42078c:	push   ecx
  42078d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42078e:	(bad)  
  420790:	xchg   edx,eax
  420791:	push   esp
  420792:	scas   al,BYTE PTR es:[edi]
  420793:	adc    BYTE PTR [esi+edi*1-0x2f],bh
  420797:	cdq    
  420798:	aas    
  420799:	pop    edx
  42079a:	imul   ecx,DWORD PTR [ebx],0x7b36e0b8
  4207a0:	pushf  
  4207a1:	mul    edi
  4207a3:	fbstp  TBYTE PTR [ecx]
  4207a5:	fdiv   QWORD PTR [edi+eiz*4]
  4207a8:	frstor [esi]
  4207aa:	inc    ebp
  4207ab:	stos   BYTE PTR es:[edi],al
  4207ac:	out    dx,al
  4207ad:	mov    BYTE PTR [eax],al
  4207af:	xchg   ebx,eax
  4207b0:	mov    eax,0xa794b069
  4207b5:	mov    dh,BYTE PTR [esp+0x6b]
  4207b9:	repnz test BYTE PTR ds:0xdc712065,cl
  4207c0:	dec    eax
  4207c1:	fld    QWORD PTR [eax-0x25]
  4207c4:	sub    ebp,DWORD PTR [ebx-0xf1f612d]
  4207ca:	jmp    0x4207f6
  4207cc:	test   BYTE PTR ds:0x9a4c1abc,ch
  4207d2:	adc    al,0x46
  4207d4:	fisubr WORD PTR [edi+0x57]
  4207d7:	xor    al,0x8b
  4207d9:	push   esi
  4207da:	push   ecx
  4207db:	cmp    BYTE PTR [ecx],ch
  4207dd:	fstp   QWORD PTR [esi-0x2a]
  4207e0:	push   ss
  4207e1:	sahf   
  4207e2:	or     DWORD PTR [ebp+0x73ce325c],esi
  4207e8:	bound  ebx,QWORD PTR [ebp+0x42b7b52]
  4207ee:	jmp    FWORD PTR [eax]
  4207f0:	cmc    
  4207f1:	enter  0x1ec2,0xf9
  4207f5:	mov    esi,0x5c4e6728
  4207fa:	stos   BYTE PTR es:[edi],al
  4207fb:	push   0x4c3b19bb
  420800:	jle    0x42080b
  420802:	js     0x420795
  420804:	mov    cs,esi
  420806:	mov    eax,0x5619705a
  42080b:	pop    edi
  42080c:	adc    bl,BYTE PTR [esi]
  42080e:	sbb    bl,BYTE PTR [esi+0x6e]
  420811:	xchg   esp,eax
  420812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420813:	xchg   esp,eax
  420814:	retf   0x3787
  420817:	sbb    DWORD PTR [esi-0x33],edi
  42081a:	cmp    al,0x87
  42081c:	sub    edx,DWORD PTR ds:0xc84fd7be
  420822:	inc    eax
  420823:	add    BYTE PTR [eax],al
  420825:	add    BYTE PTR [eax],al
  420827:	add    dl,dl
  420829:	sbb    edi,ecx
  42082b:	dec    ebp
  42082c:	push   ecx
  42082d:	or     DWORD PTR [eax],eax
  42082f:	add    BYTE PTR [eax],al
  420831:	add    BYTE PTR [eax],al
  420833:	add    BYTE PTR [ecx+0x9],dl
  420836:	add    BYTE PTR [eax],al
  420838:	and    eax,DWORD PTR [eax]
  42083a:	es jl  0x42083d
  42083d:	add    dh,BYTE PTR [esi]
  42083f:	or     BYTE PTR [eax],al
  420841:	add    ah,al
  420843:	inc    ebp
  420844:	add    BYTE PTR [edx],ch
  420846:	retf   
  420847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420848:	test   BYTE PTR [ecx-0x69],al
  42084b:	cli    
  42084c:	mov    bh,0x24
  42084e:	inc    esi
  42084f:	cli    
  420850:	aad    0x98
  420852:	shl    ebx,cl
  420854:	(bad)  
  420855:	jmp    0x42089f
  420857:	xor    DWORD PTR [esi-0x149a9ff],0xa76cfabb
  420861:	jbe    0x4208a1
  420863:	into   
  420864:	pop    esi
  420865:	repz pop ecx
  420867:	push   ecx
  420868:	nop
  420869:	in     eax,0x7d
  42086b:	jg     0x420888
  42086d:	fld    QWORD PTR [eax]
  42086f:	xchg   ecx,eax
  420870:	pop    esp
  420871:	cmp    BYTE PTR [ebx+0x59],al
  420874:	loopne 0x4208f2
  420876:	cmp    eax,0x5cd732c1
  42087b:	jb     0x420885
  42087d:	inc    ecx
  42087e:	add    BYTE PTR [edi-0x60],0xfe
  420882:	pop    edx
  420883:	and    BYTE PTR ds:0xd724957a,0xea
  42088a:	mov    ebp,edi
  42088c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42088d:	jle    0x420826
  42088f:	cwde   
  420890:	adc    ebp,DWORD PTR [esp+ebp*2]
  420893:	idiv   BYTE PTR [edi+0x3e687e4c]
  420899:	cdq    
  42089a:	in     al,0x80
  42089c:	xor    cl,bl
  42089e:	jo     0x420903
  4208a0:	push   esi
  4208a1:	rcr    BYTE PTR [ecx],cl
  4208a3:	mov    ah,0x36
  4208a5:	mov    ebp,0xbecd9497
  4208aa:	retf   
  4208ab:	or     ebp,DWORD PTR gs:[edi+eiz*4+0x277db85e]
  4208b3:	and    DWORD PTR [ebx],ecx
  4208b5:	adc    BYTE PTR [edx],dh
  4208b7:	pushf  
  4208b8:	ret    
  4208b9:	fmul   QWORD PTR ds:0x3473b0ba
  4208bf:	popa   
  4208c0:	push   ebx
  4208c1:	xchg   edi,eax
  4208c2:	test   bh,dh
  4208c4:	pop    edx
  4208c5:	les    ebp,FWORD PTR [ebx+0x2d8f9898]
  4208cb:	test   al,0x3a
  4208cd:	mov    eax,ds:0xe11470a8
  4208d2:	jae    0x4208cf
  4208d4:	int3   
  4208d5:	test   al,0x84
  4208d7:	mov    ebx,0x991703f8
  4208dc:	(bad)  
  4208dd:	lock mov eax,ds:0xe993f4e3
  4208e3:	mov    es:0xfaa91427,al
  4208e9:	ds sahf 
  4208eb:	retf   0xb457
  4208ee:	inc    edx
  4208ef:	mov    esp,0xc09f3f1b
  4208f4:	pop    esp
  4208f5:	dec    ecx
  4208f6:	gs pop ss
  4208f8:	loopne 0x4208c9
  4208fa:	add    esp,ecx
  4208fc:	test   BYTE PTR [edi+0x22],cl
  4208ff:	ja     0x42097e
  420901:	add    al,0x93
  420903:	ins    DWORD PTR es:[edi],dx
  420904:	jnp    0x4208ca
  420906:	cld    
  420907:	into   
  420908:	enter  0x28d0,0xbd
  42090c:	jmp    0x4208bc
  42090e:	push   ss
  42090f:	dec    edx
  420910:	(bad)  
  420911:	cld    
  420912:	jns    0x4208e4
  420914:	mov    ss,WORD PTR [ebx+0x38]
  420917:	mov    dl,0x4d
  420919:	pop    ecx
  42091a:	push   edx
  42091b:	xchg   ebp,eax
  42091c:	hlt    
  42091d:	retf   
  42091e:	adc    ebp,esp
  420920:	scas   al,BYTE PTR es:[edi]
  420921:	inc    edx
  420922:	jnp    0x42094d
  420924:	(bad)  
  420925:	sbb    BYTE PTR [esi-0x29],al
  420928:	icebp  
  420929:	std    
  42092a:	sub    bh,dh
  42092c:	(bad)  
  42092d:	push   edi
  42092e:	cmp    al,0x1f
  420930:	mov    esi,0xe0b165e7
  420935:	and    DWORD PTR [ebp+0x60],esp
  420938:	sar    DWORD PTR [edx],cl
  42093a:	loop   0x4208c8
  42093c:	sar    edx,1
  42093e:	pop    es
  42093f:	cdq    
  420940:	or     BYTE PTR [edi+0xf070125],dl
  420946:	xor    cl,ch
  420948:	out    dx,eax
  420949:	sub    al,0xb0
  42094b:	sub    sp,si
  42094e:	mov    es,WORD PTR [eax-0x63af8a98]
  420954:	mov    ch,BYTE PTR [ebx+0x72]
  420957:	int3   
  420958:	lahf   
  420959:	mov    al,0xa7
  42095b:	je     0x4208ec
  42095d:	std    
  42095e:	scas   eax,DWORD PTR es:[edi]
  42095f:	std    
  420960:	inc    esi
  420961:	pop    ds
  420962:	sbb    BYTE PTR [ecx+0x72c31d1c],al
  420968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420969:	sbb    al,0x99
  42096b:	xor    al,BYTE PTR [eax]
  42096d:	inc    eax
  42096e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42096f:	mov    edx,0x2d4821ec
  420974:	inc    ebx
  420975:	(bad)  
  420976:	fs iret 
  420978:	add    edi,DWORD PTR [ecx]
  42097a:	test   BYTE PTR [ecx],bl
  42097c:	push   ss
  42097d:	mov    esp,0x719b88b4
  420982:	inc    eax
  420983:	inc    ebx
  420984:	(bad)  
  420985:	in     eax,0x54
  420987:	in     al,0xac
  420989:	mov    dl,0x79
  42098b:	sub    al,0xc4
  42098d:	mov    cl,0x56
  42098f:	and    DWORD PTR [edx],esi
  420991:	push   esp
  420992:	popf   
  420993:	imul   eax,DWORD PTR [esi-0x28],0x64
  420997:	iret   
  420998:	outs   dx,DWORD PTR ds:[esi]
  420999:	lds    edi,FWORD PTR [eax-0x62]
  42099c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42099d:	mov    DWORD PTR [edi-0x20],ebx
  4209a0:	pop    esi
  4209a1:	mov    al,ds:0x47c99c98
  4209a6:	retf   
  4209a7:	addr16 mov edx,0xc0cac152
  4209ad:	sahf   
  4209ae:	jnp    0x42099a
  4209b0:	xor    DWORD PTR [esi-0x1b68bc43],edi
  4209b6:	add    DWORD PTR [eax+ecx*4],0xffffffa6
  4209ba:	mov    al,0x4
  4209bc:	xor    eax,0x62698c4d
  4209c1:	stos   DWORD PTR es:[edi],eax
  4209c2:	pop    DWORD PTR [esi+0x4e]
  4209c5:	dec    esi
  4209c6:	lds    esi,FWORD PTR [eax-0x242f1287]
  4209cc:	dec    edx
  4209cd:	clc    
  4209ce:	ds rcl ah,cl
  4209d1:	pop    ds
  4209d2:	mov    esp,0x15a37406
  4209d7:	push   ds
  4209d8:	adc    eax,edi
  4209da:	mov    al,0x9c
  4209dc:	sub    bl,al
  4209de:	sti    
  4209df:	sbb    ebp,ebp
  4209e1:	pop    ds
  4209e2:	mov    al,ds:0xa2be034
  4209e7:	cmp    bh,BYTE PTR [edx+0xa]
  4209ea:	pop    ds
  4209eb:	les    ebp,FWORD PTR [ebx-0x721f6396]
  4209f1:	int3   
  4209f2:	je     0x4209e1
  4209f4:	call   0xc25ca378
  4209f9:	or     al,0x5c
  4209fb:	les    edi,FWORD PTR [edx+0xc]
  4209fe:	mov    edx,0x3e2f6ba3
  420a03:	push   ds
  420a04:	iret   
  420a05:	es xor dl,bl
  420a08:	lods   al,BYTE PTR ds:[esi]
  420a09:	push   ebp
  420a0a:	inc    ebx
  420a0b:	dec    esi
  420a0c:	repnz xor bx,ax
  420a10:	inc    esi
  420a11:	data16 or cl,BYTE PTR [ecx-0xfc7b4a0]
  420a18:	cld    
  420a19:	js     0x420a2d
  420a1b:	retf   0x4d8f
  420a1e:	sub    dh,BYTE PTR [edi-0x4]
  420a21:	and    BYTE PTR ds:0xaf35c7ea,dl
  420a27:	mov    cl,0xd1
  420a29:	rol    BYTE PTR [ebx+edx*2-0x13],0xd7
  420a2e:	cld    
  420a2f:	jae    0x420a0d
  420a31:	xor    eax,0xee72ecff
  420a36:	arpl   WORD PTR [edx+0xd],di
  420a39:	ror    DWORD PTR [esi-0x37dfef22],1
  420a3f:	fistp  WORD PTR [esi]
  420a42:	xor    eax,0xf834ebe5
  420a47:	jg     0x4209da
  420a49:	push   cs
  420a4a:	jbe    0x420a2d
  420a4c:	pop    ecx
  420a4d:	inc    ecx
  420a4e:	pop    eax
  420a4f:	arpl   WORD PTR [ebx],di
  420a51:	inc    esi
  420a52:	mov    esp,0xbce56ee2
  420a57:	jl     0x420a10
  420a59:	push   esp
  420a5a:	jp     0x420a3c
  420a5c:	or     eax,0x24a5396b
  420a61:	fbstp  TBYTE PTR [edx-0x80]
  420a64:	in     al,dx
  420a65:	xor    eax,0x48917207
  420a6a:	push   0xffffffa4
  420a6c:	cmp    dh,dh
  420a6e:	add    ebx,edi
  420a70:	push   esp
  420a71:	in     al,0x6c
  420a73:	pop    esp
  420a74:	ja     0x420a19
  420a76:	mov    esp,0xbb08aebe
  420a7b:	nop
  420a7c:	fisttp DWORD PTR [edx+0x872dd5d]
  420a82:	sbb    BYTE PTR [ebp-0x6845a74c],bh
  420a88:	frstor [esi-0x75]
  420a8b:	xchg   ebx,eax
  420a8c:	or     al,0x5c
  420a8e:	daa    
  420a8f:	sbb    ah,BYTE PTR [ebp-0x42063379]
  420a95:	add    al,0x80
  420a97:	mov    dh,ch
  420a99:	mov    gs,eax
  420a9b:	loopne 0x420b1a
  420a9d:	push   edx
  420a9e:	retf   
  420a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aa0:	idiv   DWORD PTR [ebp-0x49dba3ec]
  420aa6:	mov    DWORD PTR [ebp-0x344dad38],0xaff46193
  420ab0:	retf   
  420ab1:	jo     0x420afa
  420ab3:	jl     0x420b0d
  420ab5:	enter  0x502d,0x71
  420ab9:	push   esp
  420aba:	xchg   esp,eax
  420abb:	or     bh,BYTE PTR [edx]
  420abd:	and    al,0x3f
  420abf:	push   eax
  420ac0:	adc    bh,BYTE PTR [edi-0x448b47b6]
  420ac6:	mov    fs,ebp
  420ac8:	ja     0x420ae2
  420aca:	popa   
  420acb:	(bad)  
  420acc:	fdivr  QWORD PTR ds:0x6193cdb4
  420ad2:	out    dx,al
  420ad3:	jo     0x420a9b
  420ad5:	add    BYTE PTR [edx*4+0x4a250268],dl
  420adc:	ja     0x420afc
  420ade:	test   al,0x87
  420ae0:	jl     0x420b43
  420ae2:	mov    dl,0xd4
  420ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ae5:	xchg   DWORD PTR [ecx-0x34],ebx
  420ae8:	pop    ds
  420ae9:	jno    0x420b68
  420aeb:	iret   
  420aec:	cmp    ebx,ebx
  420aee:	push   ss
  420aef:	into   
  420af0:	lock (bad) [esi+0x4c7a6305]
  420af7:	mov    eax,0x5fac14d7
  420afc:	pusha  
  420afd:	bound  edx,QWORD PTR [edi+0x17]
  420b00:	pop    ds
  420b01:	mov    edx,0x975e91bc
  420b06:	sbb    edi,DWORD PTR [ecx-0x1fd880f5]
  420b0c:	sub    cl,BYTE PTR [eax]
  420b0e:	dec    ecx
  420b0f:	(bad)  
  420b11:	mov    edi,0xbe0406ca
  420b16:	ds ins DWORD PTR es:[edi],dx
  420b18:	adc    BYTE PTR [esi+0x62],cl
  420b1b:	test   al,0x9e
  420b1d:	sub    BYTE PTR [ebp+0x797269b8],bh
  420b23:	lgs    edi,FWORD PTR [edi]
  420b26:	dec    esp
  420b27:	add    BYTE PTR [ebx-0x110fb979],ah
  420b2d:	mov    cl,0xe0
  420b2f:	hlt    
  420b30:	fild   QWORD PTR [esi-0x10]
  420b33:	loopne 0x420ba8
  420b35:	ficomp WORD PTR [eax]
  420b37:	jmp    0xc72:0x38aa9b18
  420b3e:	(bad)  
  420b3f:	test   eax,0x5ad23c0a
  420b44:	jge    0x420b9b
  420b46:	mov    ebp,0x606f34e4
  420b4b:	iret   
  420b4c:	inc    esi
  420b4d:	cli    
  420b4e:	adc    eax,0xdf74119d
  420b53:	test   bh,dl
  420b55:	sbb    DWORD PTR [eax+0xd],ebp
  420b58:	jae    0x420b49
  420b5a:	shl    DWORD PTR [esi],cl
  420b5c:	sub    al,0x59
  420b5e:	pop    ds
  420b5f:	mov    esi,DWORD PTR [ebp+0x7d]
  420b62:	cmp    esi,ebx
  420b64:	pop    ds
  420b65:	push   eax
  420b66:	jae    0x420b72
  420b68:	cld    
  420b69:	call   0x8a74:0x997c2eca
  420b70:	lds    eax,FWORD PTR [edi+0x1664671d]
  420b76:	xchg   BYTE PTR [eax-0x28007391],bl
  420b7c:	push   ecx
  420b7d:	rcr    ebx,cl
  420b7f:	int3   
  420b80:	inc    eax
  420b81:	es sbb ebp,edi
  420b84:	push   edi
  420b85:	out    dx,eax
  420b86:	xor    esi,DWORD PTR [eax+0x788264bf]
  420b8c:	fs add eax,0x2d8f60de
  420b92:	mov    BYTE PTR [edx],dl
  420b94:	test   eax,0x812f03b7
  420b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b9a:	test   al,0xac
  420b9c:	and    al,0xb2
  420b9e:	fwait
  420b9f:	or     eax,0x2778284
  420ba4:	ror    BYTE PTR [edi+0x3e],1
  420ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ba8:	int    0xc2
  420baa:	sbb    esp,DWORD PTR [eax-0x2fc8735]
  420bb0:	fnstcw WORD PTR [edi]
  420bb2:	loope  0x420bf8
  420bb4:	cmp    cl,BYTE PTR [edx-0x64]
  420bb7:	and    ch,ch
  420bb9:	stos   BYTE PTR es:[edi],al
  420bba:	or     ah,cl
  420bbc:	sub    dh,BYTE PTR [ebx-0x30063f97]
  420bc2:	adc    BYTE PTR [edi],dh
  420bc4:	mov    esi,0xe4530f78
  420bc9:	sti    
  420bca:	xlat   BYTE PTR ds:[ebx]
  420bcb:	adc    bh,BYTE PTR [eax+0x4d]
  420bce:	fwait
  420bcf:	mov    al,0xc0
  420bd1:	mov    WORD PTR [edi],?
  420bd3:	dec    edx
  420bd4:	fdiv   QWORD PTR [eax-0x21]
  420bd7:	fldenv [esi]
  420bd9:	popa   
  420bda:	mov    al,0x6d
  420bdc:	in     eax,dx
  420bdd:	xchg   ebx,eax
  420bde:	dec    esp
  420bdf:	icebp  
  420be0:	sbb    eax,0xa7d42fa3
  420be5:	mov    dl,0xb0
  420be7:	cmp    esi,DWORD PTR [esi-0x7b86ebb]
  420bed:	(bad)  
  420bee:	pusha  
  420bef:	icebp  
  420bf0:	mov    edx,0x68aaf226
  420bf5:	sbb    al,0x90
  420bf7:	add    al,0x0
  420bf9:	dec    ebx
  420bfa:	and    ch,ch
  420bfc:	adc    DWORD PTR [ebx],esi
  420bfe:	(bad)  
  420bff:	into   
  420c00:	enter  0x47b3,0x31
  420c04:	mov    ecx,0x76e87581
  420c09:	cmp    dh,0x4f
  420c0c:	pop    es
  420c0d:	xor    DWORD PTR [edx],0xbb1d0c8a
  420c13:	nop
  420c14:	lods   al,BYTE PTR ds:[esi]
  420c15:	add    eax,0x30ffb0d5
  420c1a:	mov    BYTE PTR [eax+0x65e20184],0xa9
  420c21:	jns    0x420bfb
  420c23:	sub    al,0x3e
  420c26:	pop    edx
  420c27:	jl     0x420c13
  420c29:	hlt    
  420c2a:	mov    bh,0xfc
  420c2c:	push   eax
  420c2d:	mov    DWORD PTR [ebx+ebx*4+0x44],eax
  420c31:	in     al,dx
  420c32:	push   es
  420c33:	(bad)  
  420c34:	and    BYTE PTR [edi+0x63],cl
  420c37:	loopne 0x420c93
  420c39:	(bad)  [ecx+0x4]
  420c3c:	cwde   
  420c3d:	inc    esp
  420c3e:	cwde   
  420c3f:	add    eax,0x64fe6b9
  420c44:	bound  ecx,QWORD PTR [ecx-0x77e54898]
  420c4a:	xor    ch,BYTE PTR [ebx-0x25]
  420c4d:	mov    bl,0xe7
  420c4f:	adc    BYTE PTR [esi+0x2],bl
  420c52:	ja     0x420c8b
  420c54:	repz addr16 js 0x420ca2
  420c58:	xor    al,0x86
  420c5a:	jmp    0xa2a4:0xcf8c457d
  420c61:	pop    eax
  420c62:	retf   
  420c63:	jp     0x420c9a
  420c65:	mov    ?,WORD PTR [eax+0x30]
  420c68:	aad    0xff
  420c6a:	jl     0x420c97
  420c6c:	sub    ebx,DWORD PTR [ebx]
  420c6e:	jp     0x420c78
  420c70:	mov    WORD PTR gs:[ebx-0x60],es
  420c74:	fisub  DWORD PTR [ecx-0xd]
  420c77:	pop    edx
  420c78:	xlat   BYTE PTR ds:[ebx]
  420c79:	sbb    BYTE PTR [ebx+0x378148d7],0xb9
  420c80:	push   0x2f
  420c82:	mov    edx,0x686ce920
  420c87:	mov    al,ds:0xbf2117ab
  420c8c:	rcl    DWORD PTR [ecx-0x1190d70],0xc5
  420c93:	sbb    DWORD PTR [ebx-0x48],edi
  420c96:	inc    esp
  420c97:	mov    ah,0x6c
  420c99:	repz test al,0xfc
  420c9c:	mov    dh,BYTE PTR [edx+0x0]
  420c9f:	jle    0x420cfd
  420ca1:	adc    DWORD PTR [ebp-0x5d],eax
  420ca4:	mov    DWORD PTR [eax],edx
  420ca6:	xchg   edx,eax
  420ca7:	sub    esi,DWORD PTR [edi-0x80]
  420caa:	into   
  420cab:	les    esi,FWORD PTR [edi+0x3b]
  420cae:	jmp    0xa5244ccd
  420cb3:	pop    edx
  420cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cb5:	or     dl,al
  420cb7:	push   0xffffff94
  420cb9:	hlt    
  420cba:	ror    al,cl
  420cbc:	das    
  420cbd:	adc    cl,BYTE PTR [edi]
  420cbf:	or     eax,0x32df4054
  420cc4:	in     al,dx
  420cc5:	jmp    0x1099c42b
  420cca:	inc    ebx
  420ccb:	sbb    BYTE PTR [esi],ah
  420ccd:	xchg   esp,eax
  420cce:	fstp   TBYTE PTR [ebp-0x7f]
  420cd1:	dec    eax
  420cd2:	pusha  
  420cd3:	dec    edi
  420cd4:	pop    ebp
  420cd5:	cmp    edi,DWORD PTR [eax+0x353d07f5]
  420cdb:	aad    0xd7
  420cdd:	push   cs
  420cde:	sbb    ah,0x99
  420ce1:	imul   edx,eax,0x4f
  420ce4:	xchg   ecx,eax
  420ce5:	fbstp  TBYTE PTR [edx]
  420ce7:	test   BYTE PTR [eax],al
  420ce9:	adc    dh,BYTE PTR [ebx-0x39b99e4a]
  420cef:	pop    esi
  420cf0:	inc    ebx
  420cf1:	test   al,0x4f
  420cf3:	inc    ebp
  420cf4:	pop    eax
  420cf6:	jns    0x420d2f
  420cf8:	in     eax,dx
  420cf9:	(bad)  
  420cfb:	cmp    ebx,0xffffffd8
  420cfe:	push   esi
  420cff:	inc    esi
  420d00:	sbb    edi,DWORD PTR [eax+0xc69f06e]
  420d06:	xor    BYTE PTR [ebp-0x31fb7b47],ah
  420d0c:	adc    al,0x36
  420d0e:	mov    ebp,0xc9b9f122
  420d13:	aad    0x87
  420d15:	cmp    BYTE PTR [ebx+0x5b],bh
  420d18:	loopne 0x420d0e
  420d1a:	adc    esi,esi
  420d1c:	cmc    
  420d1d:	dec    ecx
  420d1e:	loopne 0x420d6f
  420d20:	cdq    
  420d21:	(bad)  [edi-0x483e3bca]
  420d27:	add    al,0xc5
  420d29:	(bad)  
  420d2a:	fsubrp st(5),st
  420d2c:	jb     0x420d17
  420d2e:	pop    ecx
  420d2f:	xor    BYTE PTR [eax],ch
  420d31:	out    dx,al
  420d32:	retf   
  420d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d34:	or     eax,0x6689ddcf
  420d39:	dec    esp
  420d3a:	aad    0xc3
  420d3c:	int    0xa7
  420d3e:	push   ecx
  420d3f:	test   BYTE PTR [esp+eiz*4],dh
  420d42:	jo     0x420d2f
  420d44:	push   edx
  420d45:	adc    dl,BYTE PTR [eax-0x23]
  420d48:	mov    al,0x80
  420d4a:	data16 sbb BYTE PTR [eax],al
  420d4d:	dec    ebp
  420d4e:	jne    0x420d52
  420d50:	add    eax,0x3ce4f9cc
  420d55:	or     eax,0x34993f96
  420d5a:	mov    eax,ds:0xe5607748
  420d5f:	dec    eax
  420d60:	clc    
  420d61:	sbb    DWORD PTR [edi+0x28],0xffffff9b
  420d65:	out    0x84,eax
  420d67:	jnp    0x420d51
  420d69:	push   ds
  420d6a:	ror    edx,1
  420d6c:	sub    al,al
  420d6e:	loopne 0x420d9c
  420d70:	mov    edi,0xf83b19b
  420d75:	call   0x5b1c:0xd650ef32
  420d7c:	(bad)  
  420d7d:	test   al,0xf1
  420d7f:	pushf  
  420d80:	mov    esi,DWORD PTR [ebp+edi*4-0x78]
  420d84:	pop    es
  420d85:	mov    edi,0x6b3af3ed
  420d8a:	cwde   
  420d8b:	mov    WORD PTR [edi+edx*2],es
  420d8e:	xchg   BYTE PTR [ecx-0x43649cf0],dl
  420d94:	loope  0x420dc0
  420d96:	leave  
  420d97:	ja     0x420d4c
  420d99:	inc    esi
  420d9a:	cdq    
  420d9b:	adc    ah,BYTE PTR [esp+eax*8-0x1f]
  420d9f:	sahf   
  420da0:	mov    bh,0xaa
  420da2:	add    ebp,DWORD PTR [eax+0x35]
  420da5:	mov    ch,ch
  420da7:	sub    al,0x99
  420da9:	sub    DWORD PTR ss:[ebx],0x54
  420dad:	mov    ds:0x9705a9ac,eax
  420db2:	xlat   BYTE PTR ds:[ebx]
  420db3:	pop    edi
  420db4:	push   ebx
  420db5:	mov    ebx,0x5fecd0a2
  420dba:	out    dx,al
  420dbb:	retf   0x21a6
  420dbe:	pop    esp
  420dbf:	data16 js 0x420dd6
  420dc2:	and    al,0xa2
  420dc4:	adc    eax,0x1cd2088d
  420dc9:	pushf  
  420dca:	ficomp DWORD PTR [edi+0x6e2c5a71]
  420dd0:	sti    
  420dd1:	xchg   ecx,eax
  420dd2:	shl    BYTE PTR [edi],0x11
  420dd5:	mov    edx,0x687e4222
  420dda:	sbb    esp,esp
  420ddc:	iret   
  420ddd:	orps   xmm3,XMMWORD PTR [ebp+0x4a2bf6df]
  420de4:	or     BYTE PTR [edx],ch
  420de6:	out    dx,eax
  420de7:	adc    ch,bl
  420de9:	pop    ds
  420dea:	pop    ebx
  420deb:	xor    al,0x9a
  420ded:	mov    al,0xd3
  420def:	(bad)
  420df4:	mov    bh,0x83
  420df6:	aam    0xe9
  420df8:	loopne 0x420e58
  420dfa:	dec    esi
  420dfb:	js     0x420d97
  420dfd:	jl     0x420dfc
  420dff:	clc    
  420e00:	mov    ebx,0x112b5764
  420e05:	add    esi,esp
  420e07:	mov    BYTE PTR [eax+edx*4],bl
  420e0a:	out    0xe7,eax
  420e0c:	aas    
  420e0d:	and    BYTE PTR [ebx],dh
  420e0f:	mov    ebp,0x7cde40dd
  420e14:	(bad)  
  420e15:	lods   eax,DWORD PTR ds:[esi]
  420e16:	and    DWORD PTR [esi-0x2117c9d6],ebx
  420e1c:	lock adc al,0x24
  420e1f:	pop    esi
  420e20:	ja     0x420daf
  420e22:	call   0x64360233
  420e27:	or     BYTE PTR [esi+0x308f96e8],al
  420e2d:	fcom   QWORD PTR [eax-0x53]
  420e30:	out    0xaf,eax
  420e32:	out    0xb5,eax
  420e34:	jmp    0x42ceb88d
  420e39:	push   0x54
  420e3b:	xor    DWORD PTR [ebx-0x65],edx
  420e3e:	cld    
  420e3f:	inc    edi
  420e40:	push   ecx
  420e41:	xchg   DWORD PTR [ebp+0x73],edx
  420e44:	icebp  
  420e45:	sbb    eax,0x4b6820b1
  420e4a:	div    dh
  420e4c:	xor    al,0xf8
  420e4e:	jmp    0x420df3
  420e50:	inc    esp
  420e51:	mov    al,0x55
  420e53:	or     cl,BYTE PTR [ecx]
  420e55:	fs xchg edx,eax
  420e57:	xlat   BYTE PTR ds:[ebx]
  420e58:	xchg   ebx,eax
  420e59:	push   0x8e024a9
  420e5e:	fnstenv [ebx-0x3]
  420e61:	scas   eax,DWORD PTR es:[edi]
  420e62:	mov    WORD PTR [esi],fs
  420e64:	fidiv  DWORD PTR [ebx-0xd]
  420e67:	push   ss
  420e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e69:	ror    DWORD PTR ds:0xd8715234,1
  420e6f:	mov    eax,ds:0x93acca2d
  420e74:	pop    eax
  420e75:	fbstp  TBYTE PTR [ebp-0x4d39257c]
  420e7b:	lds    ebp,FWORD PTR [eax]
  420e7d:	jl     0x420e5b
  420e7f:	mov    eax,ds:0x80bb1246
  420e84:	and    al,0xf3
  420e86:	mov    al,ds:0x834ccb1c
  420e8b:	popf   
  420e8c:	rol    WORD PTR ds:0xd67b5048,0x20
  420e94:	add    ecx,DWORD PTR [eax-0x1a]
  420e97:	fwait
  420e98:	ins    BYTE PTR es:[edi],dx
  420e99:	cmp    DWORD PTR [edx],0x2fe558f7
  420e9f:	cmc    
  420ea0:	iret   
  420ea1:	nop
  420ea2:	and    ebp,DWORD PTR [ebx]
  420ea4:	dec    ebx
  420ea5:	inc    esp
  420ea6:	sbb    esp,DWORD PTR [ebx-0x6b]
  420ea9:	or     eax,0x2b8f4fb4
  420eae:	push   esp
  420eaf:	not    BYTE PTR [esi+eiz*1-0x3]
  420eb3:	fsubr  DWORD PTR [ebx+0x5663abd8]
  420eb9:	inc    ecx
  420eba:	mov    ah,0xc1
  420ebc:	and    bl,0x4f
  420ebf:	add    cl,BYTE PTR [edx-0x2692822d]
  420ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ec6:	cmp    ebx,esi
  420ec8:	adc    DWORD PTR [edi+0x1c],eax
  420ecb:	dec    eax
  420ecc:	cdq    
  420ecd:	out    0xc8,al
  420ecf:	fs inc eax
  420ed1:	test   eax,0x922fdb48
  420ed6:	xchg   ebx,eax
  420ed7:	in     al,dx
  420ed8:	inc    eax
  420ed9:	and    ah,dl
  420edb:	lds    esi,FWORD PTR [ecx+0xe]
  420ede:	adc    dl,BYTE PTR [eax+edx*1+0xf88a13e]
  420ee5:	gs sub eax,0x6fb8b390
  420eeb:	mov    ecx,eax
  420eed:	cwde   
  420eee:	add    edx,DWORD PTR [ebx-0x24236ec1]
  420ef4:	or     al,0xab
  420ef6:	dec    edx
  420ef7:	rcr    esi,cl
  420ef9:	push   esi
  420efa:	rol    BYTE PTR [eax],1
  420efc:	(bad)  
  420efd:	lock inc edi
  420eff:	jecxz  0x420f59
  420f01:	jg     0x420ee1
  420f03:	(bad)  
  420f04:	and    al,0xda
  420f06:	pop    edx
  420f07:	ss fcomi st,st(4)
  420f0a:	push   esp
  420f0b:	in     al,0xd7
  420f0d:	int3   
  420f0e:	or     ah,BYTE PTR [ecx+0x71]
  420f11:	push   ss
  420f12:	leave  
  420f13:	adc    ebx,esi
  420f15:	mov    ch,0xf0
  420f17:	dec    esp
  420f18:	lods   al,BYTE PTR ds:[esi]
  420f19:	dec    ecx
  420f1a:	push   cs
  420f1b:	fbstp  TBYTE PTR [eax+0x12]
  420f1e:	jnp    0x420f34
  420f20:	pop    ss
  420f21:	mov    eax,0xb02d4981
  420f26:	leave  
  420f27:	mov    ds:0xd01fca38,eax
  420f2c:	fisubr WORD PTR [esi+0x5c1035a3]
  420f32:	adc    dl,BYTE PTR [edx]
  420f34:	sar    eax,0x1e
  420f37:	out    dx,al
  420f38:	add    DWORD PTR ds:0x4942ec04,ebx
  420f3e:	mov    ah,0x8a
  420f40:	push   ds
  420f41:	cmc    
  420f42:	mov    ebp,DWORD PTR [eax]
  420f44:	dec    esi
  420f45:	in     eax,0x7
  420f47:	inc    ebp
  420f48:	nop
  420f49:	xchg   esi,eax
  420f4a:	fdiv   QWORD PTR [edi+0x4c]
  420f4d:	fisub  DWORD PTR [ecx-0x2d]
  420f50:	xchg   edi,eax
  420f51:	cmp    al,BYTE PTR [ebp-0x5b]
  420f54:	or     eax,0xb3568b70
  420f59:	inc    edi
  420f5a:	je     0x420f1e
  420f5c:	push   eax
  420f5d:	test   al,0x18
  420f5f:	push   esi
  420f60:	repz sbb eax,0x4c680705
  420f66:	cli    
  420f67:	cmp    al,0xcd
  420f69:	and    bh,BYTE PTR [ebx*1+0x412cbaf6]
  420f70:	pusha  
  420f71:	popa   
  420f72:	xor    ebp,ebp
  420f74:	xor    al,bl
  420f76:	adc    bl,BYTE PTR [edx+ebx*1]
  420f79:	test   BYTE PTR [ebx],bh
  420f7b:	inc    ebp
  420f7c:	outs   dx,BYTE PTR ds:[esi]
  420f7d:	jne    0x420f7b
  420f7f:	shl    BYTE PTR [ecx],cl
  420f81:	push   ebp
  420f82:	test   al,0xb2
  420f84:	fwait
  420f85:	jbe    0x420f67
  420f87:	jecxz  0x420f41
  420f89:	aaa    
  420f8a:	push   ds
  420f8b:	push   eax
  420f8c:	sub    DWORD PTR [edi-0x1],esi
  420f8f:	cld    
  420f90:	sbb    BYTE PTR [esp+ecx*1-0x38],ch
  420f94:	je     0x420fd6
  420f96:	add    ch,BYTE PTR [ebx+0x7ca3d5aa]
  420f9c:	or     ebx,DWORD PTR [eax+0x399d5613]
  420fa2:	imul   esi,DWORD PTR [ebp*2+0x5a8dbca8],0x12
  420faa:	fwait
  420fab:	jo     0x420fa6
  420fad:	jno    0x420f61
  420faf:	loopne 0x420f6b
  420fb1:	push   edi
  420fb2:	add    BYTE PTR [ebx+0xef957d0],ah
  420fb8:	mov    BYTE PTR [ecx+0x40],dh
  420fbb:	mov    esp,DWORD PTR [ebp+0x25]
  420fbe:	fiadd  WORD PTR [esi+0x46b7acb2]
  420fc4:	mov    ebx,0x3141d06d
  420fc9:	jmp    0xa8a6:0x2fe808d0
  420fd0:	test   al,0x5d
  420fd2:	mov    dl,0xf4
  420fd4:	sbb    BYTE PTR [ebp-0x6f],bl
  420fd7:	pop    esi
  420fd8:	test   eax,0x9c14811d
  420fdd:	xlat   BYTE PTR ds:[ebx]
  420fde:	fsubp  st(3),st
  420fe0:	cmp    eax,0xf36dd4e4
  420fe5:	sar    BYTE PTR [edi+ebp*4],0xda
  420fe9:	ja     0x420fd9
  420feb:	shr    BYTE PTR [ebx],0xa2
  420fee:	in     al,0x4f
  420ff0:	je     0x420f77
  420ff2:	pop    ds
  420ff3:	sbb    al,dh
  420ff5:	aas    
  420ff6:	mov    bh,0x8
  420ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ff9:	jnp    0x420fad
  420ffb:	mov    ebx,0x820b3801
  421000:	sub    al,0x8
  421002:	ss aam 0x75
  421005:	mul    eax
  421007:	sub    BYTE PTR [esp+edx*8-0x17062fa6],0x1c
  42100f:	aas    
  421010:	jge    0x42107d
  421012:	clc    
  421013:	dec    ecx
  421014:	les    eax,FWORD PTR [edx]
  421016:	xchg   edi,eax
  421017:	es call 0xad5ed5f8
  42101d:	dec    ecx
  42101e:	fdiv   st(5),st
  421020:	and    al,0x26
  421022:	adc    edi,DWORD PTR [edi]
  421024:	inc    eax
  421025:	shl    BYTE PTR [edi+edi*4-0x17],0x17
  42102a:	mov    BYTE PTR [edi],ah
  42102c:	and    ch,al
  42102e:	inc    esi
  42102f:	cmp    eax,0xa66e3ee0
  421034:	mul    BYTE PTR [edx+0xc]
  421037:	int    0x65
  421039:	jge    0x4210b4
  42103b:	or     eax,0x30101f6c
  421040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421041:	mov    dl,BYTE PTR [eax]
  421043:	inc    ebx
  421044:	lods   al,BYTE PTR ds:[esi]
  421045:	push   ecx
  421046:	(bad)  
  421047:	mov    ebp,0x15330a54
  42104c:	(bad)  
  42104d:	xchg   edx,eax
  42104e:	sbb    DWORD PTR [ebp-0x2512879c],edx
  421054:	lods   eax,DWORD PTR ds:[esi]
  421055:	mov    edi,ebp
  421057:	loopne 0x421075
  421059:	or     BYTE PTR [eax],ah
  42105b:	test   BYTE PTR [ebp+0x6b7bd1c6],0x4c
  421062:	and    al,0x44
  421064:	mov    eax,0x5e0a4bdc
  421069:	fimul  WORD PTR [eax*1+0x60386d68]
  421070:	and    eax,ebx
  421072:	mov    cl,0x88
  421074:	pusha  
  421075:	mov    WORD PTR [edx],es
  421077:	push   ebp
  421078:	int    0x17
  42107a:	dec    esp
  42107b:	aad    0x8d
  42107d:	(bad)  
  42107e:	xor    al,0x2f
  421080:	fs pop ebx
  421082:	loopne 0x42102a
  421084:	cli    
  421085:	icebp  
  421086:	mov    dl,0x58
  421088:	pushf  
  421089:	imul   ebx,DWORD PTR [ecx-0x45d6e9c9],0xa96b7ccb
  421093:	inc    ebx
  421094:	and    al,cl
  421096:	xchg   esp,eax
  421097:	mov    ebp,ebp
  421099:	mov    al,ds:0xb695f738
  42109e:	cwde   
  42109f:	scas   eax,DWORD PTR es:[edi]
  4210a0:	jle    0x4210c8
  4210a2:	les    eax,FWORD PTR [edi]
  4210a4:	fisub  DWORD PTR [edi]
  4210a6:	(bad)  
  4210a7:	scas   eax,DWORD PTR es:[edi]
  4210a8:	or     BYTE PTR [esi+eiz*4+0x6c],ch
  4210ac:	or     ah,bl
  4210ae:	sub    al,BYTE PTR [esi-0x63]
  4210b1:	and    eax,0x990f13c
  4210b6:	in     al,dx
  4210b7:	mov    DWORD PTR [eax],esp
  4210b9:	and    DWORD PTR [esi],edx
  4210bb:	jle    0x4210eb
  4210bd:	mov    ah,0xad
  4210bf:	jo     0x421101
  4210c1:	jns    0x4210e8
  4210c3:	scas   eax,DWORD PTR es:[edi]
  4210c4:	pop    esp
  4210c5:	add    ebx,eax
  4210c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210c8:	std    
  4210c9:	xlat   BYTE PTR ds:[ebx]
  4210ca:	mov    ebp,0xa1bbe5aa
  4210cf:	cld    
  4210d0:	sbb    BYTE PTR [ecx],bl
  4210d2:	fs inc ebx
  4210d4:	test   al,0xa5
  4210d6:	xchg   ecx,eax
  4210d7:	(bad)  
  4210d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210d9:	js     0x421124
  4210db:	mov    ebp,0x72f4640
  4210e0:	mov    ds:0x3172cc8,eax
  4210e5:	inc    eax
  4210e6:	pushf  
  4210e7:	xchg   esp,eax
  4210e8:	mov    cl,0x8e
  4210ea:	in     al,dx
  4210eb:	sti    
  4210ec:	cmp    eax,0x866e57c6
  4210f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210f2:	xchg   edi,eax
  4210f3:	adc    BYTE PTR [edx-0x18],cl
  4210f6:	push   ebp
  4210f7:	mov    ch,0xd6
  4210f9:	push   cs
  4210fa:	dec    ecx
  4210fb:	mov    DWORD PTR [eax-0x5d2f9868],edi
  421101:	sub    DWORD PTR [ecx+ebx*8+0x6967dc21],ecx
  421108:	(bad)  
  421109:	aam    0xd1
  42110b:	mov    esp,0x47002f41
  421110:	jp     0x421177
  421112:	xchg   ebp,edi
  421114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421115:	pop    ebp
  421116:	adc    BYTE PTR [eax+eiz*1],ah
  421119:	ss cld 
  42111b:	cmp    ecx,DWORD PTR gs:[edi+0x40]
  42111f:	pop    edi
  421120:	dec    eax
  421121:	in     eax,dx
  421122:	cmp    ax,0x4bd0
  421126:	xchg   DWORD PTR [edi+0x39b9f095],ebx
  42112c:	cwde   
  42112d:	and    BYTE PTR [esi+ebx*8+0x5b143caa],cl
  421134:	es aam 0xb
  421137:	fiadd  DWORD PTR [edx+0x1b]
  42113a:	ins    BYTE PTR es:[edi],dx
  42113b:	cmp    bl,cl
  42113d:	xor    dl,bh
  42113f:	mov    al,0x87
  421141:	xor    DWORD PTR [ebx-0x5270a362],esp
  421147:	jae    0x4210c9
  421149:	mov    dl,0xcc
  42114b:	mov    ds,WORD PTR [ecx+0x4]
  42114e:	pop    esp
  42114f:	and    ah,BYTE PTR [ebx]
  421151:	in     eax,0x2
  421153:	stos   DWORD PTR es:[edi],eax
  421154:	je     0x4210eb
  421156:	sub    cl,dl
  421158:	xchg   ebx,eax
  421159:	mov    al,ds:0xbda707ea
  42115e:	mov    ebx,0x4d40504c
  421163:	sub    al,0x73
  421165:	lods   eax,DWORD PTR ds:[esi]
  421166:	ins    BYTE PTR es:[edi],dx
  421167:	cmp    esi,DWORD PTR [eax+0x42]
  42116a:	cmp    bh,BYTE PTR [eax]
  42116c:	pop    es
  42116d:	adc    BYTE PTR [ebx],dh
  42116f:	xchg   esp,eax
  421170:	inc    esp
  421171:	xchg   esp,eax
  421172:	addr16 mov esi,0x9f644053
  421178:	adc    al,0xbc
  42117a:	cmp    al,0xe3
  42117c:	dec    ebp
  42117d:	push   0xffffffe7
  42117f:	stos   BYTE PTR es:[edi],al
  421180:	mov    BYTE PTR [esi+0x3d],cl
  421183:	add    BYTE PTR [eax],al
  421185:	add    BYTE PTR [eax],al
  421187:	add    BYTE PTR [eax+0x504d8119],bh
  42118d:	or     DWORD PTR [eax],eax
  42118f:	add    BYTE PTR [eax],al
  421191:	add    BYTE PTR [eax],al
  421193:	add    BYTE PTR [eax+0x9],dl
  421196:	add    BYTE PTR [eax],al
  421198:	and    al,0x0
  42119a:	es jl  0x42119d
  42119d:	add    dh,BYTE PTR [esi]
  42119f:	or     BYTE PTR [eax],al
  4211a1:	add    bl,al
  4211a3:	inc    ebp
  4211a4:	add    BYTE PTR [ecx],ch
  4211a6:	lea    ebp,[edi]
  4211a8:	repz (bad) 
  4211aa:	out    0xb1,al
  4211ac:	enter  0xf924,0x7f
  4211b0:	jno    0x421162
  4211b2:	adc    bl,BYTE PTR [edx-0x2eb7461f]
  4211b8:	into   
  4211b9:	mov    al,0x14
  4211bb:	xchg   edi,eax
  4211bc:	and    BYTE PTR [eax-0x21],ah
  4211bf:	ins    BYTE PTR es:[edi],dx
  4211c0:	mov    edi,0xd7221c91
  4211c5:	sbb    edx,DWORD PTR [edi-0x50]
  4211c8:	nop
  4211c9:	mov    BYTE PTR [edx-0x32453da7],0xa0
  4211d0:	out    dx,eax
  4211d1:	cmp    BYTE PTR [ecx+0x38],bh
  4211d4:	setnp  BYTE PTR [eax+ebp*1+0x5c]
  4211d9:	popa   
  4211da:	pop    esp
  4211db:	clc    
  4211dc:	pop    es
  4211dd:	jge    0x4211ec
  4211df:	cmc    
  4211e0:	fld    TBYTE PTR [ecx-0x69]
  4211e3:	or     bh,0x1a
  4211e6:	inc    ebx
  4211e7:	cmp    BYTE PTR [ecx-0x5b03b23f],al
  4211ed:	scas   al,BYTE PTR es:[edi]
  4211ee:	fdivr  DWORD PTR [esi]
  4211f0:	stc    
  4211f1:	sbb    esi,DWORD PTR [esi-0x70b3e5c2]
  4211f7:	fidiv  DWORD PTR [eax]
  4211f9:	jge    0x42121f
  4211fb:	scas   al,BYTE PTR es:[edi]
  4211fc:	jmp    0x20a282db
  421201:	sub    cl,BYTE PTR [esi-0x6e8a10c4]
  421207:	xchg   esp,eax
  421208:	cmp    DWORD PTR [ecx],esi
  42120a:	jle    0x42121e
  42120c:	xchg   esi,eax
  42120d:	scas   eax,DWORD PTR es:[edi]
  42120e:	loope  0x4211ee
  421210:	mov    eax,0x990125ff
  421215:	iret   
  421216:	adc    BYTE PTR [eax-0x8822387],ah
  42121c:	mov    ch,0x4
  42121e:	push   edx
  42121f:	mov    edi,0xdc844d3b
  421224:	out    0x24,eax
  421226:	sub    esi,DWORD PTR [edx+ecx*2+0xfa824bf]
  42122d:	sbb    eax,0x18810fc0
  421232:	and    edx,ebx
  421234:	int3   
  421235:	sete   BYTE PTR [ebx+0x64c349d5]
  42123c:	mov    eax,?
  42123e:	dec    eax
  42123f:	push   ebx
  421240:	mov    DWORD PTR [esi-0x3d],edx
  421243:	mov    al,ds:0xbe1435d6
  421248:	sbb    ebp,eax
  42124a:	pusha  
  42124b:	sub    eax,0xbc1e0d9c
  421250:	pusha  
  421251:	test   bh,bl
  421253:	out    dx,eax
  421254:	hlt    
  421255:	jle    0x4212c6
  421257:	jge    0x421239
  421259:	jmp    0xa4001485
  42125e:	(bad)  
  42125f:	mov    ah,0xe9
  421261:	add    al,0x85
  421263:	nop
  421264:	sti    
  421265:	jo     0x421280
  421267:	lods   al,BYTE PTR ds:[esi]
  421268:	mov    edi,0x54bd287c
  42126d:	outs   dx,DWORD PTR ds:[esi]
  42126e:	push   0x3a
  421270:	loope  0x42124e
  421272:	fwait
  421273:	rol    BYTE PTR [esp+edi*1+0x638594a3],1
  42127a:	rol    DWORD PTR [eax-0x1640a30c],cl
  421280:	(bad)
  421283:	bound  ecx,QWORD PTR [eax+0x18]
  421286:	adc    DWORD PTR [ebx-0x67],edx
  421289:	and    ah,BYTE PTR [esi+0x7b]
  42128c:	inc    eax
  42128d:	ss cmp al,0x79
  421290:	mov    ah,0xd3
  421292:	add    al,BYTE PTR [ebx+0x36]
  421295:	popa   
  421296:	push   0x7d73c760
  42129b:	int3   
  42129c:	cld    
  42129d:	adc    bl,BYTE PTR ds:0x8294082b
  4212a3:	jg     0x4212a5
  4212a5:	scas   al,BYTE PTR es:[edi]
  4212a6:	cmp    eax,0x552c03fd
  4212ab:	shr    BYTE PTR [ebx-0x7b],0x3e
  4212af:	mov    al,BYTE PTR [ebp-0x677eaf22]
  4212b5:	pop    edi
  4212b6:	clc    
  4212b7:	(bad)  
  4212b8:	cdq    
  4212b9:	out    0xd6,eax
  4212bb:	je     0x42123e
  4212bd:	retf   
  4212be:	sub    dh,BYTE PTR [ecx]
  4212c0:	aaa    
  4212c1:	je     0x421260
  4212c3:	push   ss
  4212c4:	sbb    al,0xd5
  4212c6:	dec    esi
  4212c7:	adc    dl,BYTE PTR [esi+eax*2]
  4212ca:	sbb    DWORD PTR [ebx],ebx
  4212cc:	test   DWORD PTR [eax+0x1e],0xca7f0100
  4212d3:	call   0x4da67f37
  4212d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212d9:	cdq    
  4212da:	or     ebp,ebx
  4212dc:	add    dh,ch
  4212de:	adc    DWORD PTR [eax-0x610f1b78],ecx
  4212e4:	sub    esi,DWORD PTR [ebp-0x3153ddf3]
  4212ea:	rol    DWORD PTR [eax+0x49a1313b],1
  4212f0:	fst    DWORD PTR [ebp+eax*8-0x45]
  4212f4:	push   ds
  4212f5:	into   
  4212f6:	jl     0x4212e7
  4212f8:	inc    esi
  4212f9:	ja     0x421373
  4212fb:	inc    ebx
  4212fc:	and    dl,BYTE PTR [edx]
  4212fe:	ds (bad) 
  421300:	jo     0x421354
  421302:	test   al,0x9c
  421304:	lock xor ecx,0x7d16e07b
  42130b:	sti    
  42130c:	sar    BYTE PTR [eax-0x77c0d8de],0x57
  421313:	call   0x9ceef7e7
  421318:	pop    edi
  421319:	gs jb  0x42130e
  42131c:	mov    edx,0x5f188ced
  421321:	pop    edx
  421322:	sti    
  421323:	ror    ebx,cl
  421325:	hlt    
  421326:	in     eax,0xb0
  421328:	pop    ebp
  421329:	sub    ah,BYTE PTR [ecx+0x74]
  42132c:	shl    edi,0xcd
  42132f:	das    
  421330:	aam    0xca
  421332:	pop    edi
  421333:	mov    dh,0x46
  421335:	nop
  421336:	out    0xc8,ax
  421339:	clc    
  42133a:	sbb    ebp,DWORD PTR [esi-0x14]
  42133d:	(bad)  
  42133e:	mov    eax,ds:0xa03fca48
  421343:	mov    esi,0xcab5436a
  421348:	dec    eax
  421349:	dec    ebp
  42134a:	pop    esi
  42134b:	les    esi,FWORD PTR [eax]
  42134d:	test   eax,0xa917a90c
  421352:	mov    ?,WORD PTR [esi-0x18]
  421355:	outs   dx,DWORD PTR ds:[esi]
  421356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421357:	push   edx
  421358:	inc    esp
  421359:	dec    ecx
  42135a:	ja     0x4213d7
  42135c:	fmul   DWORD PTR [eax+eiz*2]
  42135f:	sbb    BYTE PTR [esp+ecx*8-0x4e68eac2],al
  421366:	xor    BYTE PTR [edi+0x65],dh
  421369:	aaa    
  42136a:	cmp    edx,DWORD PTR [esi-0x27ce4884]
  421370:	repz inc cl
  421373:	mov    WORD PTR [ebx+eax*8],cs
  421376:	sbb    edi,0xfffffffc
  421379:	or     DWORD PTR [eax],edx
  42137b:	into   
  42137c:	ins    BYTE PTR es:[edi],dx
  42137d:	jge    0x4213f1
  42137f:	inc    esi
  421380:	lock and BYTE PTR [eax+0x17],ch
  421384:	lock and ecx,edx
  421387:	pop    ds
  421388:	into   
  421389:	lods   al,BYTE PTR ds:[esi]
  42138a:	inc    esp
  42138b:	adc    BYTE PTR [eax+0xb1ba960],0x6d
  421392:	xchg   esp,eax
  421393:	in     al,dx
  421394:	jb     0x42133f
  421396:	scas   eax,DWORD PTR es:[edi]
  421397:	retf   
  421398:	pop    edx
  421399:	push   ecx
  42139a:	pop    edx
  42139b:	call   DWORD PTR [eax]
  42139d:	xchg   ebp,eax
  42139e:	jmp    0xf7ac3caa
  4213a3:	mov    esp,ds
  4213a5:	xor    al,0x68
  4213a7:	xor    al,0x3e
  4213a9:	cmp    ah,BYTE PTR [esi+0x58cf62d7]
  4213af:	add    al,0x37
  4213b1:	mov    al,0x34
  4213b3:	mov    BYTE PTR [edi],bh
  4213b5:	ret    
  4213b6:	mov    ah,0x7c
  4213b8:	repz je 0x4213f0
  4213bb:	int    0x24
  4213bd:	int    0x1f
  4213bf:	sub    ah,BYTE PTR [eax+edx*8]
  4213c2:	dec    eax
  4213c3:	pop    ebx
  4213c4:	jnp    0x4213ec
  4213c6:	lahf   
  4213c7:	sbb    DWORD PTR [ebp+0x48],esp
  4213ca:	push   eax
  4213cb:	lea    esp,[edx-0x76a81524]
  4213d1:	(bad)  
  4213d2:	ins    BYTE PTR es:[edi],dx
  4213d3:	imul   eax,DWORD PTR [ecx+0x5d],0xf2bd5f22
  4213da:	adc    DWORD PTR [eax+0x3e59ec4],edx
  4213e0:	ins    BYTE PTR es:[edi],dx
  4213e1:	imul   esi,DWORD PTR [ebx+0x11d7b4d9],0xfffffff2
  4213e8:	and    DWORD PTR [ebp+0x5cc6fd72],ebp
  4213ee:	iret   
  4213ef:	dec    esi
  4213f0:	or     ah,BYTE PTR [eax]
  4213f2:	mov    DWORD PTR cs:[edx],ecx
  4213f5:	sahf   
  4213f6:	or     BYTE PTR [eax-0x20],0x5
  4213fa:	stos   BYTE PTR es:[edi],al
  4213fb:	pop    edx
  4213fc:	lods   al,BYTE PTR ds:[esi]
  4213fd:	leave  
  4213fe:	cmp    BYTE PTR [edi+eiz*1+0x5b3e5b8e],ah
  421405:	fist   WORD PTR [esi-0x7cf137f6]
  42140b:	jmp    0x7097:0x76872897
  421412:	lock shl BYTE PTR [ecx+0x10d9b62e],0x9
  42141a:	xchg   esp,eax
  42141b:	aaa    
  42141c:	fdiv   DWORD PTR [ebx]
  42141e:	mov    eax,0xca577fdf
  421423:	mov    eax,0xc41f98cf
  421428:	adc    DWORD PTR [edi-0xa],0x2353dc77
  42142f:	stos   DWORD PTR es:[edi],eax
  421430:	or     BYTE PTR [eax-0xd],0xfa
  421434:	stc    
  421435:	add    BYTE PTR [ecx],al
  421437:	pop    ss
  421438:	shl    BYTE PTR [ebp+0x0],0x54
  42143c:	std    
  42143d:	jmp    FWORD PTR [eax+0x225a436a]
  421443:	or     DWORD PTR [eax-0x423383eb],edx
  421449:	cmp    dh,ah
  42144b:	ds mov bh,0x3d
  42144e:	jmp    0x4213ee
  421450:	lock mov BYTE PTR [esi+0x6a],cl
  421454:	or     ah,ah
  421456:	je     0x4213d9
  421458:	loopne 0x42146e
  42145a:	fnstsw WORD PTR [ebx]
  42145c:	dec    esi
  42145d:	arpl   WORD PTR [ebp-0x434555ae],cx
  421463:	cmp    BYTE PTR [esp+eiz*8-0x26],bl
  421467:	add    al,0x4f
  421469:	ss add ah,al
  42146c:	or     ah,BYTE PTR es:[edi+edi*4-0x425049e8]
  421474:	add    al,0x3
  421476:	into   
  421477:	cmp    DWORD PTR [ebp-0x34],esp
  42147a:	adc    ecx,esi
  42147c:	lds    ebp,FWORD PTR [eax]
  42147e:	mov    bh,0xf9
  421480:	dec    si
  421482:	jb     0x421445
  421484:	ds pop es
  421486:	dec    esp
  421487:	jle    0x42140e
  421489:	jg     0x42148b
  42148b:	push   es
  42148c:	in     al,dx
  42148d:	and    ebp,DWORD PTR [edx-0xe3bbe0c]
  421493:	mov    al,0x82
  421495:	dec    esi
  421496:	mov    WORD PTR [eax+ebx*1+0x13],es
  42149a:	cld    
  42149b:	mov    bh,0xa7
  42149d:	lea    esi,[ebx-0x39c34e8e]
  4214a3:	sbb    ah,al
  4214a5:	adc    BYTE PTR [edi+0x50],dl
  4214a8:	fisub  DWORD PTR [ecx]
  4214aa:	pusha  
  4214ab:	push   edx
  4214ac:	or     eax,0xcce55925
  4214b1:	gs push ss
  4214b3:	test   BYTE PTR [edi+0x39],bl
  4214b6:	out    0x96,al
  4214b8:	cli    
  4214b9:	out    dx,al
  4214ba:	mov    al,0x71
  4214bc:	sub    al,0x5c
  4214be:	adc    dh,bl
  4214c0:	loope  0x42149b
  4214c2:	add    DWORD PTR [edi-0x1e],esi
  4214c5:	push   eax
  4214c6:	adc    al,0xab
  4214c8:	mov    ch,0x43
  4214ca:	ds repnz pop eax
  4214cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214ce:	je     0x421500
  4214d0:	push   eax
  4214d1:	into   
  4214d2:	fs andnps xmm5,xmm5
  4214d6:	int3   
  4214d7:	cwde   
  4214d8:	test   esi,0x72c88186
  4214de:	sub    edx,DWORD PTR [ebx+0x40]
  4214e1:	hlt    
  4214e2:	and    al,0x31
  4214e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214e5:	xchg   esi,eax
  4214e6:	jo     0x421542
  4214e8:	daa    
  4214e9:	fs in  eax,0x26
  4214ec:	xchg   esi,eax
  4214ed:	out    dx,eax
  4214ee:	popf   
  4214ef:	push   ecx
  4214f0:	xchg   ecx,eax
  4214f1:	ror    DWORD PTR [eax-0x1e11c97f],cl
  4214f7:	ds xchg esi,eax
  4214f9:	ret    0xac37
  4214fc:	add    eax,0x5063b9e3
  421501:	test   BYTE PTR ds:0xf4ddd0be,bl
  421507:	int    0xd
  421509:	inc    eax
  42150a:	mov    esi,edx
  42150c:	test   DWORD PTR [eax+0x12],edi
  42150f:	add    dl,BYTE PTR [esi+0x7d]
  421512:	aad    0x6a
  421514:	int    0x76
  421516:	pushf  
  421517:	or     bh,BYTE PTR [edi+eax*8]
  42151a:	jp     0x4214fa
  42151c:	xor    BYTE PTR [edi+edx*4+0x637d06c0],bh
  421523:	push   ebx
  421524:	inc    ebp
  421525:	xchg   esi,eax
  421526:	jle    0x4215a4
  421528:	in     al,0xe
  42152a:	add    esp,0x14f9a991
  421530:	sbb    ecx,DWORD PTR [edi+eiz*8-0x4f579c54]
  421537:	pop    ebp
  421538:	repz xor dh,BYTE PTR [eax+0x6386fd5d]
  42153f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421540:	rol    BYTE PTR [ebx-0x54bb2bbe],0xd3
  421547:	(bad)  
  421548:	cmp    eax,0xf810722e
  42154d:	sbb    DWORD PTR [eax*2-0x293bd5a9],eax
  421554:	xor    al,0x1c
  421556:	xchg   esi,eax
  421557:	lock and DWORD PTR [edi],ecx
  42155a:	or     al,0xb5
  42155c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42155d:	pop    esp
  42155f:	push   cs
  421560:	inc    ebp
  421561:	xor    BYTE PTR [edx+0x79b6dad1],bl
  421567:	call   0x8c2d9f33
  42156c:	cli    
  42156d:	pop    edx
  42156e:	adc    BYTE PTR [eax],ah
  421570:	or     al,0x5b
  421572:	imul   esp,ecx,0x744688b7
  421578:	pop    esp
  421579:	xor    BYTE PTR [ebx],bl
  42157b:	ins    BYTE PTR es:[edi],dx
  42157c:	das    
  42157d:	push   ebp
  42157e:	std    
  42157f:	pop    ebp
  421580:	sbb    eax,0x81b1d8c8
  421585:	sahf   
  421586:	leave  
  421587:	push   edi
  421588:	inc    ebp
  421589:	pop    es
  42158a:	(bad)  
  42158b:	cld    
  42158c:	sub    eax,0xdf08ad47
  421591:	xor    DWORD PTR [ecx+0x9a62087],0x36e1cd8b
  42159b:	out    dx,eax
  42159c:	mov    DWORD PTR [ecx+edi*4-0x42],0x5ca0a0c5
  4215a4:	inc    ebx
  4215a5:	lea    ebp,[eax+0x27]
  4215a8:	lds    ecx,FWORD PTR [esp+ecx*4]
  4215ab:	jae    0x421582
  4215ad:	dec    edi
  4215ae:	jmp    0x887c1ec3
  4215b3:	aam    0x6e
  4215b5:	outs   dx,DWORD PTR ds:[esi]
  4215b6:	sub    dh,BYTE PTR [ebx]
  4215b8:	xor    al,0x6b
  4215ba:	aas    
  4215bb:	es jecxz 0x42160c
  4215be:	push   0x5d58faaf
  4215c3:	cli    
  4215c4:	pop    ss
  4215c5:	je     0x421646
  4215c7:	and    ch,ch
  4215c9:	adc    eax,0xaa7c3d7c
  4215ce:	pop    ebx
  4215cf:	(bad)  
  4215d0:	sub    al,0x3f
  4215d2:	and    al,0xa0
  4215d4:	mov    bl,0xe5
  4215d6:	sub    DWORD PTR [edx-0x53],eax
  4215d9:	jecxz  0x4215e8
  4215db:	aas    
  4215dc:	dec    eax
  4215dd:	and    al,0xdc
  4215df:	jmp    0x87aa578d
  4215e4:	pop    eax
  4215e5:	ins    BYTE PTR es:[edi],dx
  4215e6:	dec    ecx
  4215e7:	push   ecx
  4215e8:	test   eax,0x56691be5
  4215ed:	mov    esp,0xc3cfbc90
  4215f2:	mov    DWORD PTR [edi],ebx
  4215f4:	jge    0x4215e6
  4215f6:	shl    BYTE PTR [edx+eax*1-0x3bab1a0a],0xe2
  4215fe:	int    0x7
  421600:	pop    esp
  421601:	out    dx,al
  421602:	fs xor dl,0xf3
  421606:	mov    bh,0xe8
  421608:	hlt    
  421609:	cmp    ch,0xfb
  42160c:	outs   dx,DWORD PTR ds:[esi]
  42160d:	push   ss
  42160e:	shl    BYTE PTR [eax-0x74],1
  421611:	and    BYTE PTR [esp+ebx*1+0x62982d1],ah
  421618:	sub    eax,0xa4c84081
  42161d:	(bad)  
  42161e:	retf   0x693
  421621:	daa    
  421622:	or     eax,0xdc26ec6c
  421627:	mov    ds:0x405f6b74,eax
  42162c:	push   ecx
  42162d:	xchg   esp,eax
  42162e:	jge    0x421656
  421630:	sbb    al,0xea
  421632:	xlat   BYTE PTR ds:[ebx]
  421633:	xor    eax,0x9b808d7
  421638:	stos   DWORD PTR es:[edi],eax
  421639:	cld    
  42163a:	cmc    
  42163b:	pop    edx
  42163c:	pop    esp
  42163d:	dec    ebp
  42163e:	pop    edx
  42163f:	(bad)  
  421641:	jmp    0x7054:0x21e45957
  421648:	add    BYTE PTR [ebp-0x3c],dh
  42164b:	minps  xmm3,xmm4
  42164e:	lea    edi,[ecx-0x6fb5578f]
  421654:	jo     0x421663
  421656:	mov    edi,0xcc155c59
  42165b:	inc    ebp
  42165c:	rcr    DWORD PTR [edx+0x3f],0xf
  421660:	mov    al,0x12
  421662:	jmp    0x458c4f57
  421667:	das    
  421668:	ror    BYTE PTR [eax],1
  42166a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42166b:	loop   0x421681
  42166d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42166e:	push   ss
  42166f:	cmp    eax,DWORD PTR ds:0x3dc88beb
  421675:	cmp    BYTE PTR [edi+0x207cc431],cl
  42167b:	mov    esi,0x39e07ae8
  421680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421681:	inc    eax
  421682:	mov    edi,0x1001fe04
  421687:	add    al,0x1f
  421689:	mov    ecx,0xeba52b47
  42168e:	jae    0x42169b
  421690:	sub    BYTE PTR [edx],al
  421692:	jno    0x4216c4
  421694:	add    ebx,eax
  421696:	in     al,0x94
  421698:	xor    cl,BYTE PTR [ebp+eax*4-0x5b]
  42169c:	mov    ds:0x58175872,eax
  4216a1:	or     al,0x70
  4216a3:	idiv   DWORD PTR [ebx-0x76]
  4216a6:	out    dx,eax
  4216a7:	fdivr  DWORD PTR [eax-0x2ae73519]
  4216ad:	icebp  
  4216ae:	inc    esi
  4216af:	add    al,0xb0
  4216b1:	pop    eax
  4216b2:	xchg   DWORD PTR [ecx],esi
  4216b4:	cmp    al,0xd5
  4216b6:	add    DWORD PTR [ebx*4-0x98b22f],edi
  4216bd:	pusha  
  4216be:	add    al,BYTE PTR [esi+ecx*4]
  4216c1:	scas   al,BYTE PTR es:[edi]
  4216c2:	imul   BYTE PTR [edx-0x21]
  4216c5:	xor    DWORD PTR [esp+ebx*2-0x60937282],eax
  4216cc:	xchg   BYTE PTR [edi-0x1135d3ac],dl
  4216d2:	shr    DWORD PTR [edi-0x6c],cl
  4216d5:	sub    bh,BYTE PTR [edi+0x42aa50c3]
  4216db:	xor    al,BYTE PTR [ebx+0x16]
  4216de:	gs ins DWORD PTR es:[edi],dx
  4216e0:	shl    DWORD PTR [eax+ecx*2-0x7f],cl
  4216e4:	add    eax,0xcefd0230
  4216e9:	popf   
  4216ea:	cwde   
  4216eb:	loopne 0x42167d
  4216ed:	push   ds
  4216ee:	fstp   DWORD PTR [ebp-0x16]
  4216f1:	mov    eax,ds:0x1d69bc10
  4216f6:	adc    ebp,DWORD PTR [esi-0x5c]
  4216f9:	xor    ch,BYTE PTR [edi+0x4d9d643b]
  4216ff:	jl     0x4216dc
  421701:	push   esi
  421702:	loope  0x4216bb
  421704:	iret   
  421705:	mov    dh,al
  421707:	ins    DWORD PTR es:[edi],dx
  421708:	jne    0x421758
  42170a:	sbb    eax,0xac2c362d
  42170f:	cwde   
  421710:	jmp    0x421763
  421712:	xchg   ebx,eax
  421713:	push   es
  421714:	pop    ds
  421715:	call   0x7a60e756
  42171a:	or     bl,BYTE PTR ds:0x76083fc4
  421720:	js     0x4216ee
  421722:	sub    BYTE PTR [eax],al
  421724:	push   edx
  421725:	inc    esi
  421726:	inc    eax
  421727:	push   ecx
  421728:	(bad)  
  421729:	pushf  
  42172a:	jp     0x4216ff
  42172c:	lods   al,BYTE PTR ds:[esi]
  42172d:	or     esi,DWORD PTR ds:0xc06db574
  421733:	mov    ds:0x28923e39,al
  421738:	call   0x8077:0x3fe495ec
  42173f:	(bad)  
  421740:	mov    esi,0x874f80e
  421745:	pop    esp
  421746:	cmc    
  421747:	pop    esi
  421748:	stos   BYTE PTR es:[edi],al
  421749:	xchg   ebp,eax
  42174a:	sub    DWORD PTR [esi-0x2d],ecx
  42174d:	mov    al,0x41
  42174f:	mov    es,WORD PTR [edi]
  421751:	imul   ecx,DWORD PTR [ecx],0x2d
  421754:	jae    0x421748
  421756:	aam    0x40
  421758:	or     al,0x6d
  42175a:	mov    ebx,0x66302135
  42175f:	clc    
  421760:	cmp    eax,0xf7902a38
  421765:	test   BYTE PTR [edx+0x1d651c89],0xbf
  42176c:	(bad)  
  42176d:	xor    eax,0x400135d0
  421772:	ja     0x4216fb
  421774:	fidiv  WORD PTR [esi]
  421776:	and    al,0x83
  421778:	syscall 
  42177a:	call   0x9c2cc20d
  42177f:	imul   ebx,DWORD PTR [esi+0x21],0x73350cbb
  421786:	push   eax
  421787:	jno    0x42176e
  421789:	jmp    0x1b18:0x30fb
  42178f:	mov    ebp,0x961493d2
  421794:	add    eax,0x7c5d6654
  421799:	add    BYTE PTR [esi-0x304ad66],bl
  42179f:	(bad)  
  4217a0:	mov    al,ds:0x314c8507
  4217a5:	dec    ecx
  4217a6:	outs   dx,BYTE PTR ds:[esi]
  4217a7:	and    BYTE PTR ds:0xc68d5274,dl
  4217ad:	pop    esi
  4217ae:	call   0xb0715c98
  4217b3:	in     eax,dx
  4217b4:	sub    esp,edx
  4217b6:	push   ss
  4217b7:	sbb    eax,0xee3c6885
  4217bc:	sbb    DWORD PTR [ebx-0x51a1bccd],0xffffff8c
  4217c3:	call   0xc8867ba7
  4217c8:	popa   
  4217c9:	pop    ecx
  4217ca:	enter  0xee34,0xcb
  4217ce:	clc    
  4217cf:	test   DWORD PTR [edx],ecx
  4217d1:	call   0xdd9abf7b
  4217d6:	shl    BYTE PTR [edx],0x8c
  4217d9:	pop    ebx
  4217da:	sub    DWORD PTR [ecx-0x68],ebx
  4217dd:	jl     0x4217be
  4217df:	xchg   esp,eax
  4217e0:	mov    dl,0x9c
  4217e2:	repnz imul edi,DWORD PTR [esi+0x7b21a095],0x684b80e2
  4217ed:	loope  0x4217b4
  4217ef:	dec    eax
  4217f0:	jb     0x421808
  4217f2:	jno    0x4217af
  4217f4:	xchg   ebx,eax
  4217f5:	lods   eax,DWORD PTR ds:[esi]
  4217f6:	sbb    ecx,DWORD PTR [edx-0x242f0c94]
  4217fc:	data16 int3 
  4217fe:	call   0x7366:0xe9025d7
  421805:	imul   ecx,edi,0xffffffc2
  421808:	test   eax,0x8e0bb4df
  42180d:	fidiv  WORD PTR [esi-0xa]
  421810:	in     al,dx
  421811:	inc    ecx
  421812:	rcr    al,0xb3
  421815:	pop    esp
  421816:	and    eax,0x2c825c7
  42181b:	loop   0x42179d
  42181d:	xchg   ecx,ecx
  42181f:	aas    
  421820:	add    ebx,DWORD PTR [edi-0x5bc6785e]
  421826:	add    BYTE PTR [ecx+0x4],al
  421829:	lds    edi,FWORD PTR [esi]
  42182b:	pop    edi
  42182c:	ja     0x42184d
  42182e:	enter  0x9038,0x3
  421832:	aaa    
  421833:	pop    eax
  421834:	ds cld 
  421836:	imul   ah
  421838:	adc    DWORD PTR [ebx-0x37d35489],0xffffffe8
  42183f:	lods   eax,DWORD PTR ds:[esi]
  421840:	adc    cl,bl
  421842:	add    DWORD PTR [eax+0x3],0xffffffa1
  421846:	sub    ah,0x5a
  421849:	mov    eax,0xf5aca3cb
  42184e:	jecxz  0x421805
  421850:	ss dec esp
  421852:	fcom   QWORD PTR [edi-0x64e07213]
  421858:	jmp    0x6411:0xcd009cf1
  42185f:	mov    WORD PTR [ecx+0x2490e11e],ds
  421865:	xchg   ebp,eax
  421866:	pop    ds
  421867:	cmp    al,0x36
  421869:	bnd ret 0xc358
  42186d:	int3   
  42186e:	jno    0x421878
  421870:	imul   ebp,DWORD PTR [edx+0x3d],0xf06dcfc5
  421877:	(bad)  
  421878:	push   ss
  421879:	fild   DWORD PTR [edx-0x33e9dd53]
  42187f:	adc    al,0x4a
  421881:	push   ecx
  421882:	mov    bl,0x24
  421884:	dec    ecx
  421885:	xchg   esp,eax
  421886:	aam    0xfb
  421888:	cmp    ah,bh
  42188a:	mov    bh,0x77
  42188c:	push   ebx
  42188d:	push   eax
  42188e:	sub    al,0x1c
  421890:	add    DWORD PTR [ebp+ebp*2+0x40],ebx
  421894:	in     eax,dx
  421895:	popa   
  421896:	dec    esi
  421897:	aad    0xed
  421899:	cmp    eax,0xb1b19e04
  42189e:	call   0x736a1f83
  4218a3:	sub    cl,dh
  4218a5:	mov    al,ds:0x5d859eeb
  4218aa:	rcr    BYTE PTR [ebx],cl
  4218ac:	dec    esp
  4218ad:	aad    0x84
  4218af:	imul   esi,DWORD PTR [esi+0x31c7fad6],0xf2816370
  4218b9:	scas   eax,DWORD PTR es:[edi]
  4218ba:	arpl   WORD PTR [ebx-0x4ce7ba41],sp
  4218c0:	fs dec ebx
  4218c2:	xor    dh,dl
  4218c4:	mov    ebp,0x913c4767
  4218c9:	je     0x421910
  4218cb:	mov    ebx,0xfed6d812
  4218d0:	pusha  
  4218d1:	cld    
  4218d2:	add    edi,DWORD PTR [ebp-0xf]
  4218d5:	leave  
  4218d6:	leave  
  4218d7:	dec    eax
  4218d8:	push   0x1f5db484
  4218dd:	adc    eax,edi
  4218df:	cmp    dh,BYTE PTR [ebx-0x80]
  4218e2:	test   al,0xdf
  4218e4:	push   ds
  4218e5:	mov    ebp,0xcfe8b498
  4218ea:	out    0x50,eax
  4218ec:	in     al,dx
  4218ed:	dec    ebx
  4218ee:	push   ebx
  4218ef:	(bad)  
  4218f0:	cli    
  4218f1:	jnp    0x4218a8
  4218f3:	push   0x74
  4218f5:	rcl    bh,0x3f
  4218f8:	int3   
  4218f9:	clc    
  4218fa:	sbb    ebp,DWORD PTR [edi]
  4218fc:	(bad)  
  4218fd:	cwde   
  4218fe:	hlt    
  4218ff:	ret    
  421900:	pop    edx
  421902:	sar    BYTE PTR [edx+0x3cbcc12f],cl
  421908:	sub    DWORD PTR [ebx+0x35],ebp
  42190b:	outs   dx,DWORD PTR ds:[esi]
  42190c:	js     0x421946
  42190e:	or     al,0xe0
  421910:	push   0x19d46164
  421915:	scas   al,BYTE PTR es:[edi]
  421916:	add    al,BYTE PTR [edi]
  421918:	mov    BYTE PTR [eax],ch
  42191a:	lods   al,BYTE PTR ds:[esi]
  42191b:	retf   0xe7f1
  42191e:	retf   
  42191f:	xor    eax,0xee32aca9
  421924:	jmp    0x4218e4
  421926:	xchg   DWORD PTR [edi-0x592fc627],ebx
  42192c:	scas   eax,DWORD PTR es:[edi]
  42192d:	dec    esp
  42192e:	arpl   WORD PTR [ebx],si
  421930:	sti    
  421931:	sub    al,0x7f
  421933:	hlt    
  421934:	add    eax,0x7f414e00
  421939:	adc    eax,0x6f9ceec3
  42193e:	jmp    FWORD PTR [ebx-0x2dd5396]
  421944:	inc    esi
  421945:	sar    BYTE PTR [ebp-0xc],0xc1
  421949:	push   cs
  42194a:	cli    
  42194b:	outs   dx,BYTE PTR ds:[esi]
  42194c:	inc    edx
  42194d:	test   ah,ah
  42194f:	xor    bl,cl
  421951:	cmp    bl,BYTE PTR [eax-0x51aadd20]
  421957:	or     BYTE PTR [esi+eiz*2-0x20070ca8],dl
  42195e:	rep ins DWORD PTR es:[edi],dx
  421960:	sub    al,0x1a
  421962:	les    esp,FWORD PTR [ebx+0x333fb2ca]
  421968:	mov    ebp,0xbd2e6ed4
  42196d:	xchg   BYTE PTR [eax],cl
  42196f:	sbb    al,0x55
  421971:	cmc    
  421972:	clc    
  421973:	mov    dl,0xf
  421975:	cmp    DWORD PTR [ecx-0x39],esp
  421978:	adc    BYTE PTR [ebp+0x37921ccc],dh
  42197e:	shl    BYTE PTR [ecx],cl
  421980:	cdq    
  421981:	enter  0x5921,0x40
  421985:	xor    al,0xf7
  421987:	lods   al,BYTE PTR ds:[esi]
  421988:	sti    
  421989:	pop    ebp
  42198a:	test   DWORD PTR [eax+esi*8],esi
  42198d:	call   0x6864ee8f
  421992:	push   esi
  421993:	push   ecx
  421994:	arpl   WORD PTR [esi+ecx*1],ax
  421997:	test   BYTE PTR [ebx+eax*4+0x17],dl
  42199b:	inc    esp
  42199c:	push   ds
  42199d:	pusha  
  42199e:	and    DWORD PTR [esi+0x34],edx
  4219a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219a2:	stos   DWORD PTR es:[edi],eax
  4219a3:	jno    0x421954
  4219a5:	mov    dl,0x2d
  4219a7:	sub    eax,0x320058a1
  4219ac:	xlat   BYTE PTR ds:[ebx]
  4219ad:	retf   
  4219ae:	in     eax,0x8e
  4219b0:	sbb    ebp,DWORD PTR [esp+edi*2-0x27]
  4219b4:	in     al,dx
  4219b5:	fsubp  st(4),st
  4219b7:	dec    edi
  4219b8:	pop    eax
  4219b9:	adc    al,0xaf
  4219bb:	and    al,0xb6
  4219bd:	and    al,0xa3
  4219bf:	int    0x87
  4219c1:	push   esp
  4219c2:	jae    0x4219e6
  4219c4:	dec    eax
  4219c5:	pop    eax
  4219c6:	xor    al,0x73
  4219c8:	push   esp
  4219c9:	mov    BYTE PTR [edi],bh
  4219cb:	hlt    
  4219cc:	or     ebp,DWORD PTR [eax+esi*1-0x2f]
  4219d0:	sbb    eax,0xaaaf83a8
  4219d5:	call   0x7913:0x210b7590
  4219dc:	cmp    dh,BYTE PTR [esi+esi*2+0x38]
  4219e0:	fnstenv [eax]
  4219e2:	pop    eax
  4219e3:	out    dx,al
  4219e4:	mov    eax,ds:0x5c338af9
  4219e9:	or     DWORD PTR [edi],eax
  4219eb:	add    BYTE PTR [ebx],0x3c
  4219ee:	imul   edx,edi,0x683680dd
  4219f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219f5:	jb     0x421a75
  4219f7:	stos   DWORD PTR es:[edi],eax
  4219f8:	jecxz  0x4219dc
  4219fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219fb:	call   0x15d149ff
  421a00:	push   ss
  421a01:	fs (bad) 
  421a03:	enter  0x5251,0x28
  421a07:	dec    ebp
  421a08:	lods   al,BYTE PTR ds:[esi]
  421a09:	out    dx,al
  421a0a:	ds jns 0x421a7d
  421a0d:	inc    ebx
  421a0e:	push   ebp
  421a0f:	das    
  421a10:	std    
  421a11:	or     BYTE PTR [esi],ch
  421a13:	sub    ecx,DWORD PTR [eax-0x6c]
  421a16:	pop    es
  421a17:	and    eax,0xd4c9f54d
  421a1c:	stos   BYTE PTR es:[edi],al
  421a1d:	scas   eax,DWORD PTR es:[edi]
  421a1e:	mov    eax,0x6c393d7e
  421a23:	pop    edi
  421a24:	xchg   edi,eax
  421a25:	jo     0x421a97
  421a27:	fsub   QWORD PTR [edi-0x1b64ae72]
  421a2d:	lods   eax,DWORD PTR ds:[esi]
  421a2e:	shl    BYTE PTR [ecx-0x62570100],1
  421a34:	retf   
  421a35:	fldcw  WORD PTR [edx+0x34]
  421a38:	cs test al,0x21
  421a3b:	pop    edx
  421a3c:	push   ecx
  421a3d:	fdivr  QWORD PTR [ebp+ebx*8+0x9ccef7c]
  421a44:	cmp    DWORD PTR [edx],eax
  421a46:	mov    esp,DWORD PTR [edi+0x69]
  421a49:	pop    ss
  421a4a:	iret   
  421a4b:	lock cmp DWORD PTR [edx],ebp
  421a4e:	addr16 repz sti 
  421a51:	mov    bl,0x38
  421a53:	out    0x14,eax
  421a55:	dec    edx
  421a56:	test   eax,0x2a2a29a6
  421a5b:	(bad)  
  421a5c:	jmp    0xa2abb11d
  421a61:	push   0x201b5fd
  421a66:	loopne 0x421abd
  421a68:	push   0x5b807ec7
  421a6d:	ret    
  421a6e:	push   esp
  421a6f:	add    al,0x11
  421a71:	ror    BYTE PTR [eax+0x2ceb2346],1
  421a77:	retf   
  421a78:	sub    bl,bh
  421a7a:	loope  0x421a53
  421a7c:	add    al,0x78
  421a7e:	mov    cl,0x46
  421a80:	clc    
  421a81:	dec    esp
  421a82:	and    al,0x5f
  421a84:	stos   DWORD PTR es:[edi],eax
  421a85:	sahf   
  421a86:	pop    ds
  421a87:	cmp    ch,bh
  421a89:	push   edx
  421a8a:	hlt    
  421a8b:	mov    BYTE PTR [esi+0x6fdc39d3],0x7d
  421a92:	icebp  
  421a93:	sbb    BYTE PTR [edx+0x60],ah
  421a96:	nop
  421a97:	push   ebp
  421a98:	mov    DWORD PTR fs:[ecx],edx
  421a9b:	adc    BYTE PTR [edi+ebp*4],bh
  421a9e:	(bad)  
  421a9f:	sbb    ch,dl
  421aa1:	mov    cl,0xbe
  421aa3:	dec    edx
  421aa4:	fldenv [eax-0x56]
  421aa7:	sub    eax,0xd86795ee
  421aac:	rol    BYTE PTR [edi],0x8
  421aaf:	cmp    DWORD PTR [ebx],ecx
  421ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ab2:	xor    DWORD PTR [esi-0x1e],edi
  421ab5:	pop    ebx
  421ab6:	in     eax,dx
  421ab7:	sub    al,0xfe
  421ab9:	jne    0x421aaa
  421abb:	or     eax,DWORD PTR [ebx]
  421abd:	pop    esp
  421abe:	jecxz  0x421b2e
  421ac0:	push   eax
  421ac1:	mov    edi,0xa0a6f68d
  421ac6:	ficom  DWORD PTR [ebx+0x56d740e]
  421acc:	ret    
  421acd:	or     BYTE PTR [ebx-0x672e7be2],dh
  421ad3:	bound  ebp,QWORD PTR [ebx-0x2a]
  421ad6:	retf   0x5a30
  421ad9:	(bad)  
  421ada:	xor    al,BYTE PTR [eax+0x3]
  421add:	loopne 0x421b3c
  421adf:	inc    edx
  421ae0:	sbb    DWORD PTR ds:0x0,edi
  421ae6:	add    BYTE PTR [eax],al
  421ae8:	or     BYTE PTR [esi],dl
  421aea:	jno    0x421b2e
  421aec:	push   eax
  421aed:	or     DWORD PTR [eax],eax
  421aef:	add    BYTE PTR [eax],al
  421af1:	add    BYTE PTR [eax],al
  421af3:	add    BYTE PTR [eax+0x9],dl
  421af6:	add    BYTE PTR [eax],al
  421af8:	and    eax,0x7c2600
  421afd:	add    dh,BYTE PTR [esi]
  421aff:	or     BYTE PTR [eax],al
  421b01:	add    bl,al
  421b03:	inc    ebp
  421b04:	add    cl,bl
  421b06:	in     al,0xd9
  421b08:	or     bl,BYTE PTR [ebx+edx*2]
  421b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b0c:	xchg   esp,eax
  421b0d:	and    al,0x67
  421b0f:	dec    ebp
  421b10:	pop    edx
  421b11:	ins    BYTE PTR es:[edi],dx
  421b12:	mov    ebp,esi
  421b14:	push   es
  421b15:	fisttp WORD PTR [eax+0x75]
  421b18:	inc    ebx
  421b19:	lods   al,BYTE PTR ds:[esi]
  421b1a:	mov    ds,WORD PTR [eax-0x1a]
  421b1d:	ficomp WORD PTR [edx-0x68d54294]
  421b23:	dec    ecx
  421b24:	rcr    bh,1
  421b26:	adc    bh,dl
  421b28:	nop
  421b29:	test   BYTE PTR [ebx],0x6b
  421b2c:	sbb    al,0x63
  421b2e:	fidivr DWORD PTR [ecx+0x6b]
  421b31:	cmp    BYTE PTR [edi*2+0x11c2ef4c],ch
  421b38:	stos   BYTE PTR es:[edi],al
  421b39:	fcomp  DWORD PTR [edi+eiz*8+0x20]
  421b3d:	dec    eax
  421b3e:	sub    BYTE PTR [edi-0x7f20357c],dh
  421b44:	adc    al,0x2b
  421b46:	adc    BYTE PTR [ecx+0x788bc4a7],0xa4
  421b4d:	call   0xc08b43c4
  421b52:	clc    
  421b53:	cwde   
  421b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b55:	dec    esp
  421b56:	mov    al,0x27
  421b58:	adc    eax,0x316ea687
  421b5d:	cmp    dh,BYTE PTR [eax-0x29]
  421b60:	dec    eax
  421b61:	call   0x94d9:0x9b78e396
  421b68:	mov    eax,ds:0x98176c00
  421b6d:	mov    al,ds:0xecb813be
  421b72:	cmp    BYTE PTR [edi+0x30],cl
  421b75:	(bad)  
  421b76:	mov    eax,0xf4dc4047
  421b7b:	stc    
  421b7c:	sbb    DWORD PTR [eax+edx*1-0x7b70484a],edx
  421b83:	dec    edx
  421b84:	retf   
  421b85:	fstp   TBYTE PTR [esi+0x7f]
  421b88:	adc    edi,ecx
  421b8a:	mov    eax,ds:0xe9ebd8a8
  421b8f:	pop    ecx
  421b90:	ins    BYTE PTR es:[edi],dx
  421b91:	dec    edi
  421b92:	mov    bl,0x7b
  421b94:	int3   
  421b95:	dec    esi
  421b96:	push   ecx
  421b97:	cmp    dh,0x4d
  421b9a:	enter  0x10bc,0xf0
  421b9e:	or     dh,BYTE PTR [ebx-0x7b67dc6b]
  421ba4:	xchg   ebp,eax
  421ba5:	mov    eax,0x19206f14
  421baa:	call   0xe8bc:0xfc455fab
  421bb1:	popa   
  421bb2:	jns    0x421b8e
  421bb4:	inc    eax
  421bb5:	mov    al,0xa0
  421bb7:	adc    eax,esp
  421bb9:	add    esp,ebp
  421bbb:	stos   BYTE PTR es:[edi],al
  421bbc:	mov    ecx,edi
  421bbe:	outs   dx,BYTE PTR ds:[esi]
  421bbf:	mov    dl,ah
  421bc1:	add    al,0xf0
  421bc3:	xchg   BYTE PTR ds:0x64c148b,cl
  421bc9:	sbb    ch,BYTE PTR [eax]
  421bcb:	inc    ecx
  421bcc:	hlt    
  421bcd:	icebp  
  421bce:	xchg   esi,eax
  421bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bd0:	addps  xmm5,XMMWORD PTR [ecx-0x30]
  421bd4:	addr16 mov ebx,0xc3fc51f0
  421bda:	fs int3 
  421bdc:	hlt    
  421bdd:	and    DWORD PTR [ebp-0x4c],ebx
  421be0:	loope  0x421b69
  421be2:	pop    ecx
  421be3:	or     eax,0x17018e0
  421be8:	pop    edx
  421be9:	sahf   
  421bea:	jmp    0x421bf9
  421bec:	ja     0x421be3
  421bee:	cmp    al,0xb5
  421bf0:	pop    ds
  421bf1:	and    edx,DWORD PTR [esi]
  421bf3:	mov    ecx,0x604fde50
  421bf8:	popa   
  421bf9:	sar    DWORD PTR ds:0xc598a6d5,0x56
  421c00:	or     BYTE PTR [ebx+0x5d1a3c42],ch
  421c06:	sti    
  421c07:	lods   al,BYTE PTR ds:[esi]
  421c08:	lea    ebp,[eax+edx*2]
  421c0b:	mov    ds:0x6303ae73,eax
  421c10:	lea    edx,ds:[eax-0x4b]
  421c14:	inc    esp
  421c15:	in     eax,0x1e
  421c17:	stos   DWORD PTR es:[edi],eax
  421c18:	rcl    BYTE PTR [edi-0x57648b4e],0x32
  421c1f:	push   0xffffffa1
  421c21:	sbb    BYTE PTR cs:[esp+ebx*1-0x8],ah
  421c26:	jmp    0x9875:0x35bdeac
  421c2d:	inc    eax
  421c2e:	xor    bl,BYTE PTR [ecx]
  421c30:	jge    0x421c16
  421c32:	and    BYTE PTR [edi],al
  421c34:	dec    ebx
  421c35:	pop    ds
  421c36:	fs jno 0x421ca0
  421c39:	repz xchg esi,eax
  421c3b:	mov    esp,0x88d70782
  421c40:	cmp    dh,ah
  421c42:	dec    ebx
  421c43:	sbb    bl,cl
  421c45:	ins    DWORD PTR es:[edi],dx
  421c46:	pop    esp
  421c47:	jne    0x421bf5
  421c49:	pop    edi
  421c4a:	ss scas al,BYTE PTR es:[edi]
  421c4c:	sub    ebx,DWORD PTR [ecx+0x39]
  421c4f:	cmp    DWORD PTR ds:0xade40d54,esi
  421c55:	pusha  
  421c56:	mov    ds:0x7891ce9a,al
  421c5b:	cmc    
  421c5c:	cwde   
  421c5d:	out    0x6c,al
  421c5f:	cs leave 
  421c61:	fcomp  DWORD PTR [eax-0x4bbe0264]
  421c67:	or     eax,0x8c0fb7aa
  421c6c:	rol    al,0x4
  421c6f:	cmp    DWORD PTR [ecx+ecx*4],esi
  421c72:	sbb    DWORD PTR [eax-0x4e191bdc],edi
  421c78:	adc    cl,BYTE PTR ds:0x1f101f0c
  421c7e:	mov    WORD PTR [ebp+0x4c],es
  421c81:	push   ebp
  421c82:	repz repnz sub BYTE PTR [esi],bl
  421c86:	sbb    dh,BYTE PTR [eax-0x2dc92a59]
  421c8c:	rol    DWORD PTR [ebx-0x552bbe6b],0xf6
  421c93:	repz pop ebp
  421c95:	shr    BYTE PTR [ebx],0x61
  421c98:	mov    ?,eax
  421c9a:	gs retf 
  421c9c:	push   es
  421c9d:	xor    ah,BYTE PTR [edx-0x28]
  421ca0:	sti    
  421ca1:	and    DWORD PTR [eax-0x35383452],0xf8864117
  421cab:	les    ecx,FWORD PTR [ebx-0x42]
  421cae:	shl    BYTE PTR [ebp+0x5],1
  421cb1:	or     al,0x69
  421cb3:	inc    esi
  421cb4:	call   0xb927c409
  421cb9:	sub    eax,0xc511c25
  421cbe:	jo     0x421cd7
  421cc0:	out    dx,eax
  421cc1:	mov    esi,0x9c28cdea
  421cc6:	xor    BYTE PTR [ecx+0x19cb40ec],dl
  421ccc:	inc    edi
  421ccd:	adc    esp,esi
  421ccf:	fsub   st,st(2)
  421cd1:	icebp  
  421cd2:	xchg   edi,eax
  421cd3:	fist   WORD PTR [esp+ebp*8]
  421cd6:	jmp    0xd:0x96bffcf7
  421cdd:	or     eax,0x20627050
  421ce2:	mov    esi,0x585beb53
  421ce7:	in     al,0x3
  421ce9:	test   al,0x44
  421ceb:	fwait
  421cec:	pop    ss
  421ced:	sub    esi,DWORD PTR [eax-0x56]
  421cf0:	xchg   esi,eax
  421cf1:	mov    BYTE PTR ds:0xf9bd5fec,cl
  421cf7:	jmp    0xf1f56e47
  421cfc:	adc    BYTE PTR [edx+0x4ae64d11],bl
  421d02:	lods   al,BYTE PTR ss:[esi]
  421d04:	dec    esp
  421d05:	xor    al,0xb7
  421d07:	mov    DWORD PTR [ecx+0x5cc1f560],esi
  421d0d:	stos   BYTE PTR es:[edi],al
  421d0e:	pop    eax
  421d0f:	and    ebx,DWORD PTR [ebx+ebx*4]
  421d12:	mov    WORD PTR [ebp-0x18],ds
  421d15:	jnp    0x421d22
  421d17:	jl     0x421cf6
  421d19:	cmp    eax,DWORD PTR [ebx-0x40]
  421d1c:	test   eax,0x24c1fdcf
  421d21:	aaa    
  421d22:	pop    ebp
  421d23:	mov    esi,0xd3f1203b
  421d28:	lea    ecx,[eax+0x7e]
  421d2b:	mov    dh,0xce
  421d2d:	mov    esi,0x433e526f
  421d32:	ins    BYTE PTR es:[edi],dx
  421d33:	inc    ecx
  421d34:	or     eax,0xa6878892
  421d39:	dec    esi
  421d3a:	adc    edx,DWORD PTR [eax-0x40202d30]
  421d40:	pop    eax
  421d41:	or     al,0x72
  421d43:	dec    esi
  421d44:	mov    ah,0x1a
  421d46:	test   BYTE PTR [esi+0x9ccf68b],al
  421d4c:	dec    eax
  421d4d:	pop    esp
  421d4e:	jnp    0x421cdd
  421d50:	sbb    BYTE PTR [esi-0x4a],ch
  421d53:	enter  0xf1d7,0x80
  421d57:	mov    esi,0x69381257
  421d5c:	or     al,0x4c
  421d5e:	lahf   
  421d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d60:	imul   ebx
  421d62:	cli    
  421d63:	mov    ebp,0x9e818556
  421d68:	enter  0x2ba1,0xe5
  421d6c:	sub    DWORD PTR [esi],edx
  421d6e:	push   esi
  421d6f:	es jo  0x421de2
  421d72:	pop    ds
  421d73:	push   ebx
  421d74:	in     eax,dx
  421d75:	push   ds
  421d76:	ins    DWORD PTR es:[edi],dx
  421d77:	scas   al,BYTE PTR es:[edi]
  421d78:	jmp    0x421df8
  421d7a:	xchg   esp,eax
  421d7b:	das    
  421d7c:	and    eax,0xf8b2f69a
  421d81:	jnp    0x421d1b
  421d83:	mov    eax,0x5c0c1124
  421d88:	add    dh,bl
  421d8a:	int    0x84
  421d8c:	fcomp  QWORD PTR [ecx-0x63]
  421d8f:	jle    0x421de7
  421d91:	das    
  421d92:	jg     0x421de1
  421d94:	sahf   
  421d95:	add    BYTE PTR [esi-0x63],ah
  421d98:	stc    
  421d99:	popa   
  421d9a:	sbb    eax,0xa8e2f082
  421d9f:	lods   al,BYTE PTR ds:[esi]
  421da0:	jno    0x421d77
  421da2:	stos   BYTE PTR es:[edi],al
  421da3:	(bad)  
  421da4:	and    esi,DWORD PTR [ecx+ebx*8]
  421da7:	int3   
  421da8:	xchg   edx,eax
  421da9:	sbb    ah,BYTE PTR [edi+0x24]
  421dac:	add    eax,0xf0f3412b
  421db1:	lock icebp 
  421db3:	adc    DWORD PTR [edi],0x1347407
  421db9:	adc    al,0x16
  421dbb:	push   0xbaa1ebea
  421dc0:	fdiv   QWORD PTR [ebx]
  421dc2:	mov    esp,0x6125fe9f
  421dc7:	mov    ecx,0xe0ac06e4
  421dcc:	or     al,0x1b
  421dce:	pop    ebx
  421dcf:	(bad)  
  421dd0:	neg    BYTE PTR [ebp-0x4ffbdf3b]
  421dd6:	ds cmp eax,0xba226466
  421ddc:	sub    al,0x28
  421dde:	cmp    ecx,DWORD PTR [edi]
  421de0:	daa    
  421de1:	cs std 
  421de3:	lock loopne 0x421db2
  421de6:	dec    esp
  421de7:	loop   0x421d9f
  421de9:	cld    
  421dea:	pop    edi
  421deb:	idiv   BYTE PTR gs:[edi+ecx*4+0x3e2ec9f4]
  421df3:	je     0x421de9
  421df5:	adc    BYTE PTR [ebx],cl
  421df7:	xor    al,0x18
  421df9:	jge    0x421dfe
  421dfb:	jg     0x421dd6
  421dfd:	es pop ebp
  421dff:	icebp  
  421e00:	nop
  421e01:	cmp    al,0xec
  421e03:	into   
  421e04:	jae    0x421e44
  421e06:	lock test eax,0x4560b34b
  421e0c:	cs clc 
  421e0e:	mov    ch,0x5a
  421e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e11:	stc    
  421e12:	inc    BYTE PTR [esp+edx*4+0x514fc359]
  421e19:	test   DWORD PTR [ebp+0x77],0xd9b8f82c
  421e20:	cwde   
  421e21:	aad    0x6a
  421e23:	inc    edx
  421e24:	fcom   QWORD PTR [eax+0x35]
  421e27:	leave  
  421e28:	fistp  WORD PTR [edx-0x50c27db0]
  421e2e:	je     0x421dc3
  421e30:	fimul  WORD PTR gs:[ecx]
  421e33:	push   ds
  421e34:	stos   BYTE PTR es:[edi],al
  421e35:	inc    eax
  421e36:	rcr    BYTE PTR [eax-0x71311d5b],1
  421e3c:	mov    esi,0x40d96140
  421e41:	dec    ebp
  421e42:	add    ebp,DWORD PTR [ebp+0xd19c35c]
  421e48:	int3   
  421e49:	fs scas al,BYTE PTR es:[edi]
  421e4b:	adc    DWORD PTR [edi],ecx
  421e4d:	out    dx,al
  421e4e:	stos   DWORD PTR es:[edi],eax
  421e4f:	inc    edi
  421e50:	repz sbb DWORD PTR [eax-0x3b40d98e],ecx
  421e57:	and    edi,edi
  421e59:	add    al,0xb9
  421e5b:	lods   al,BYTE PTR ds:[esi]
  421e5c:	iret   
  421e5d:	(bad)  
  421e5e:	stos   DWORD PTR es:[edi],eax
  421e5f:	mov    al,ds:0xd78079b4
  421e64:	rcl    BYTE PTR [eax+0x56],1
  421e67:	mov    eax,ds:0x5f393461
  421e6c:	idiv   DWORD PTR [eax+0x3a]
  421e6f:	mov    edx,0xa42e3294
  421e74:	sub    ecx,DWORD PTR [eax-0x2ccf8564]
  421e7a:	mov    al,0x4c
  421e7c:	mov    DWORD PTR [eax],esp
  421e7e:	or     eax,0x1b6061c0
  421e83:	jns    0x421e12
  421e85:	test   bl,dh
  421e87:	clc    
  421e88:	in     al,0x6a
  421e8a:	data16 add cl,BYTE PTR [edx+0x42]
  421e8e:	push   cs
  421e8f:	jae    0x421e70
  421e91:	mov    WORD PTR [esp+ebx*1],ds
  421e94:	adc    edx,DWORD PTR [ebx]
  421e96:	and    dl,BYTE PTR [edx+0x37]
  421e99:	fs mov al,0x3b
  421e9c:	mov    bl,0xe5
  421e9e:	es int3 
  421ea0:	(bad)  
  421ea3:	aam    0xa5
  421ea5:	and    DWORD PTR [eax-0xd37c115],edi
  421eab:	sbb    edi,eax
  421ead:	arpl   di,ax
  421eaf:	cmc    
  421eb0:	add    al,0x74
  421eb2:	cmp    eax,0x6f1cfb39
  421eb7:	in     al,0xdc
  421eb9:	mov    dl,BYTE PTR [ecx+0x5]
  421ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ebd:	jp     0x421e83
  421ebf:	aad    0x49
  421ec1:	or     al,0xb0
  421ec3:	sbb    dh,BYTE PTR [ebp+0x48]
  421ec6:	mov    dh,0xe8
  421ec8:	(bad)  
  421ec9:	popa   
  421eca:	jns    0x421f15
  421ecc:	stos   DWORD PTR es:[edi],eax
  421ecd:	arpl   bx,bp
  421ecf:	xchg   esi,eax
  421ed0:	or     al,0x19
  421ed2:	bound  esp,QWORD PTR [ebx+0x23]
  421ed5:	or     ch,BYTE PTR [eax+ecx*8+0x50aa309e]
  421edc:	rcl    BYTE PTR [ecx+eax*2-0x7a],cl
  421ee0:	and    BYTE PTR [edx+0x5fc32bd8],0x17
  421ee7:	push   ds
  421ee8:	lea    edx,fs:[ebx-0x4]
  421eec:	pop    esi
  421eed:	inc    esp
  421eee:	je     0x421f1e
  421ef0:	retf   0x5034
  421ef3:	xlat   BYTE PTR ds:[ebx]
  421ef4:	and    BYTE PTR [ecx+0x34],ch
  421ef7:	or     eax,0x5930eedb
  421efc:	sub    eax,0x28fb0044
  421f01:	stc    
  421f02:	push   ebx
  421f03:	ret    0x51bf
  421f06:	push   0x8c57b62c
  421f0b:	imul   esp,DWORD PTR [esi+ebx*1-0x16],0x10
  421f10:	lods   eax,DWORD PTR ds:[esi]
  421f11:	(bad)  
  421f12:	jmp    0x348d:0x661ef280
  421f19:	jae    0x421f78
  421f1b:	sbb    eax,0x7ec917c
  421f20:	popa   
  421f21:	pop    eax
  421f22:	popf   
  421f23:	pushf  
  421f24:	jl     0x421f2c
  421f26:	xor    esi,DWORD PTR [ebp+ebx*1+0x1e537c7c]
  421f2d:	mov    edx,0x24a1fc53
  421f32:	inc    eax
  421f33:	mov    al,ds:0xabf4c5ac
  421f38:	mov    ?,WORD PTR [ebp+0x56]
  421f3b:	or     al,0x48
  421f3d:	addr16 xchg ebp,eax
  421f3f:	lock adc bh,BYTE PTR [edi+0x6cc71f2d]
  421f46:	adc    eax,esi
  421f48:	mov    ch,0x7e
  421f4a:	mov    ebp,eax
  421f4c:	pusha  
  421f4d:	bound  edx,QWORD PTR [eax+0x4122dcf4]
  421f53:	adc    cl,ch
  421f55:	rol    BYTE PTR [ecx-0xafca4c],cl
  421f5b:	xchg   esp,eax
  421f5c:	lea    esp,[edi-0x3ca368d9]
  421f62:	lods   eax,DWORD PTR ds:[esi]
  421f63:	jecxz  0x421f87
  421f65:	jo     0x421f09
  421f67:	inc    ebx
  421f68:	mov    bh,0x80
  421f6a:	pop    eax
  421f6b:	sbb    DWORD PTR [ebp+eiz*2-0x14],esp
  421f6f:	call   0x54e6b34d
  421f74:	push   cs
  421f75:	fwait
  421f76:	cmp    al,0x5e
  421f78:	(bad)  
  421f79:	setl   al
  421f7c:	aad    0xc0
  421f7e:	dec    DWORD PTR fs:[esi-0x13af1dbd]
  421f85:	adc    esi,DWORD PTR [eax+0x5a]
  421f88:	xor    DWORD PTR [eax],eax
  421f8a:	shr    ch,1
  421f8c:	cmp    DWORD PTR [edi+eax*8-0x4a450a6a],edx
  421f93:	hlt    
  421f94:	sbb    ecx,edx
  421f96:	mov    eax,0xa4399913
  421f9b:	dec    esp
  421f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f9d:	dec    edx
  421f9e:	mov    al,0xdc
  421fa0:	jmp    0x421fd0
  421fa2:	dec    ebp
  421fa3:	or     eax,0xcde91e1c
  421fa8:	add    BYTE PTR [edx+ebx*1-0x20],dl
  421fac:	add    BYTE PTR [esi+0x2a],al
  421faf:	imul   esp,DWORD PTR [edi-0x60a11658],0x74836e86
  421fb9:	cld    
  421fba:	int3   
  421fbb:	ror    DWORD PTR [edi+0x3b],0xc4
  421fbf:	jmp    0x3cc:0xf0f4a569
  421fc6:	in     al,0x6b
  421fc8:	mov    ecx,0x14628c67
  421fcd:	ficom  WORD PTR [esi-0x62]
  421fd0:	sbb    DWORD PTR [eax+0x385d5a37],edi
  421fd6:	outs   dx,DWORD PTR ds:[esi]
  421fd7:	jb     0x42204c
  421fd9:	retf   0x6d0a
  421fdc:	inc    esp
  421fdd:	add    eax,0x5ca52e0
  421fe2:	aad    0xfa
  421fe4:	bound  ebx,QWORD PTR [edx-0x77]
  421fe7:	add    al,0x83
  421fe9:	jl     0x42205a
  421feb:	fidivr DWORD PTR [edi]
  421fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fee:	dec    ecx
  421fef:	add    eax,0xc4c3c828
  421ff4:	fs mov eax,0x4c5bd97c
  421ffa:	push   eax
  421ffb:	loop   0x422005
  421ffd:	dec    ebx
  421ffe:	sbb    al,0x2d
  422000:	loop   0x421fef
  422002:	jo     0x421ffa
  422004:	or     eax,0xab085f45
  422009:	xchg   ecx,eax
  42200a:	loop   0x422024
  42200c:	inc    ebp
  42200d:	and    DWORD PTR [ebx+0x393372a7],edx
  422013:	mov    WORD PTR [ebx+eax*4],?
  422016:	mov    gs,edi
  422018:	mov    cl,0x5d
  42201a:	mov    eax,0xfa60b097
  42201f:	xor    eax,0x866119fa
  422024:	sbb    cl,ah
  422026:	test   ah,ch
  422028:	xor    al,0x3a
  42202a:	pop    esp
  42202b:	or     esp,0xffffff9d
  42202e:	push   es
  42202f:	sub    al,0xd5
  422031:	bound  esp,QWORD PTR [ebx]
  422033:	inc    edi
  422034:	aam    0x7b
  422036:	sbb    ebx,DWORD PTR [eax+edx*2+0x43]
  42203a:	idiv   BYTE PTR [edx+eax*2-0x4ec4402b]
  422041:	je     0x42207a
  422043:	jmp    0x4d0c8183
  422048:	es popa 
  42204a:	cwde   
  42204b:	fisttp DWORD PTR [eax+0x18455482]
  422051:	fst    DWORD PTR [esi]
  422053:	mov    esp,0x42d8e0b6
  422058:	xchg   edi,eax
  422059:	sbb    esi,DWORD PTR [eax]
  42205b:	call   0x73d96fc4
  422060:	sbb    ecx,DWORD PTR [ebx]
  422062:	mov    bl,0x63
  422064:	mov    ebp,0x23261688
  422069:	sar    DWORD PTR ds:0xacfe335c,cl
  42206f:	ja     0x422046
  422071:	push   esp
  422072:	push   ss
  422073:	push   0xffffff9b
  422075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422076:	inc    esp
  422077:	ror    ah,1
  422079:	dec    esp
  42207a:	xchg   edi,eax
  42207b:	cdq    
  42207c:	cdq    
  42207d:	in     al,0x99
  42207f:	loop   0x4220f9
  422081:	(bad)  
  422082:	jl     0x422026
  422084:	mov    ebp,0xd81a5b8f
  422089:	pushf  
  42208a:	sub    dl,BYTE PTR [edi+ebp*4]
  42208d:	pop    ds
  42208e:	lds    esi,FWORD PTR [ebp-0x6a]
  422091:	inc    ecx
  422092:	rcl    BYTE PTR [eax+0x1d],0x7e
  422096:	and    al,0x7f
  422098:	pop    ss
  422099:	(bad)  
  42209a:	loope  0x422080
  42209c:	mov    BYTE PTR [ecx-0x60],ch
  42209f:	mov    esp,DWORD PTR [ebp+0x841ba3c]
  4220a5:	and    eax,DWORD PTR [ebp-0x4e0062c0]
  4220ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220ac:	(bad)  
  4220ad:	mov    al,0xcb
  4220af:	call   0x89d7:0x621be86f
  4220b6:	aam    0x82
  4220b8:	mov    dl,0x28
  4220ba:	add    eax,0x46744a39
  4220bf:	clc    
  4220c0:	jnp    0x422074
  4220c2:	out    0x81,eax
  4220c4:	add    al,0x21
  4220c6:	xor    edi,edi
  4220c8:	sbb    al,0xcf
  4220ca:	xor    eax,0xf79a1596
  4220cf:	jg     0x422144
  4220d1:	inc    eax
  4220d2:	ins    BYTE PTR es:[edi],dx
  4220d3:	ins    BYTE PTR es:[edi],dx
  4220d4:	jecxz  0x422099
  4220d6:	fcom   QWORD PTR [ecx+0x5e8f1c3]
  4220dc:	out    dx,eax
  4220dd:	add    BYTE PTR [ebx],dl
  4220df:	cmp    BYTE PTR [ebx+0x7e],0x7f
  4220e3:	or     al,0x66
  4220e5:	push   ebp
  4220e6:	mov    ch,0xb8
  4220e8:	add    BYTE PTR [eax-0x56],cl
  4220eb:	jecxz  0x42211d
  4220ed:	dec    edi
  4220ee:	and    DWORD PTR [edi],ebp
  4220f0:	inc    esi
  4220f1:	out    dx,al
  4220f2:	xchg   eax,esi
  4220f4:	xchg   edi,eax
  4220f5:	push   esp
  4220f6:	push   esp
  4220f7:	jmp    0x422102
  4220f9:	xchg   esi,eax
  4220fa:	scas   al,BYTE PTR es:[edi]
  4220fb:	dec    ecx
  4220fc:	xchg   ecx,eax
  4220fd:	and    eax,0xdb51f7fc
  422102:	icebp  
  422103:	mov    ch,0x26
  422105:	or     al,0x90
  422107:	and    BYTE PTR [eax+0x396d7166],cl
  42210d:	xchg   ch,ah
  42210f:	xlat   BYTE PTR ds:[ebx]
  422110:	inc    esp
  422111:	adc    BYTE PTR [ebp+0x37],cl
  422114:	dec    esp
  422115:	loopne 0x422138
  422117:	inc    ebx
  422118:	jmp    0x422182
  42211a:	call   0xaa58:0x3a7fa44a
  422121:	(bad)  [ebx+edi*4+0x5388763d]
  422128:	add    DWORD PTR [edi-0x39a9cb73],0xffffffed
  42212f:	xchg   edi,eax
  422130:	pushf  
  422131:	in     eax,dx
  422132:	out    0x15,al
  422134:	pop    eax
  422135:	add    esi,DWORD PTR [ebp+esi*4-0x6b]
  422139:	dec    ebx
  42213a:	push   edi
  42213b:	mov    eax,0x18277c7a
  422140:	pop    ss
  422141:	nop
  422142:	push   0xa0132378
  422147:	repz enter 0x83c5,0xd0
  42214c:	lahf   
  42214d:	inc    ebp
  42214e:	in     eax,dx
  42214f:	dec    eax
  422150:	jmp    0x7e0f80de
  422155:	sbb    ebx,DWORD PTR [esi+0x24f86cfb]
  42215b:	dec    edi
  42215c:	retf   
  42215d:	mov    ebx,0x908337af
  422162:	mov    esp,0x9ca91524
  422167:	out    0xf2,al
  422169:	mov    esi,0x2e9ed1b4
  42216e:	fcomp  DWORD PTR [eax-0x276bfd31]
  422174:	xor    bh,0x5e
  422177:	push   ds
  422178:	jmp    0x422161
  42217a:	leave  
  42217b:	mov    BYTE PTR [eax-0x441d2d46],0x8c
  422182:	jecxz  0x422122
  422184:	jmp    0x8442:0x905be8a4
  42218b:	aam    0xaa
  42218d:	jge    0x422157
  42218f:	xor    DWORD PTR [edi+edx*1+0x10],esp
  422193:	rcr    DWORD PTR [esi-0x7a],cl
  422196:	icebp  
  422197:	in     al,dx
  422198:	dec    edx
  422199:	inc    esp
  42219a:	sub    edx,DWORD PTR [eax-0x50c622b2]
  4221a0:	adc    BYTE PTR [edx-0x16],dh
  4221a3:	jnp    0x4221fb
  4221a5:	shl    dh,1
  4221a7:	jle    0x4221cb
  4221a9:	mov    eax,0xb57aa686
  4221ae:	xchg   BYTE PTR [eax],dl
  4221b0:	add    eax,0x74d2dc90
  4221b5:	mov    al,0x70
  4221b7:	jno    0x4221e6
  4221b9:	jle    0x422170
  4221bb:	add    BYTE PTR [ebx+0x71],dl
  4221be:	or     BYTE PTR [esi+0xf],bh
  4221c1:	or     ch,BYTE PTR [ebx-0x5b]
  4221c4:	and    al,0x41
  4221c6:	ret    0xe1de
  4221c9:	lds    ebp,FWORD PTR [esi+ecx*4-0x8]
  4221cd:	int3   
  4221ce:	pop    ebp
  4221cf:	mov    eax,0x3c6bad3
  4221d4:	xor    eax,0x4dc6f06c
  4221d9:	scas   al,BYTE PTR es:[edi]
  4221da:	dec    esi
  4221db:	xchg   esi,eax
  4221dc:	clc    
  4221dd:	nop
  4221de:	stos   DWORD PTR es:[edi],eax
  4221df:	adc    al,0xa8
  4221e1:	inc    ecx
  4221e2:	mov    bh,0xe0
  4221e4:	test   bh,0xcc
  4221e7:	add    bh,BYTE PTR [eax]
  4221e9:	aas    
  4221ea:	idiv   DWORD PTR [esi+0x3542e15d]
  4221f0:	jo     0x42224e
  4221f2:	mov    edi,0xc6ae975a
  4221f7:	jmp    0xd946af15
  4221fc:	dec    edx
  4221fd:	fstp   QWORD PTR [eax+eax*8+0x22]
  422201:	or     esi,DWORD PTR [edi-0x172700d8]
  422207:	and    BYTE PTR [edi],0xbc
  42220a:	mov    dh,0x5c
  42220c:	dec    esp
  42220d:	push   edx
  42220e:	or     BYTE PTR [ecx],bl
  422210:	call   0x5a70:0x33249b36
  422217:	adc    DWORD PTR [edx],eax
  422219:	sbb    DWORD PTR [esi+ebx*1-0x4be775d5],esi
  422220:	sub    BYTE PTR ds:0xb8a3ffef,dl
  422226:	jmp    0x422264
  422228:	fdivp  st(3),st
  42222a:	jnp    0x4221c9
  42222c:	pop    edi
  42222d:	pop    edx
  42222e:	add    eax,0x362a60c9
  422233:	add    eax,0x28d64a79
  422238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422239:	test   BYTE PTR [edi+0x2],al
  42223c:	int    0xc6
  42223e:	mov    edx,0xa85f24d7
  422243:	inc    esp
  422244:	pop    eax
  422245:	into   
  422246:	div    DWORD PTR [ebx+0x502ab84f]
  42224c:	clc    
  42224d:	loopne 0x4221f0
  42224f:	aaa    
  422250:	sahf   
  422251:	ins    DWORD PTR es:[edi],dx
  422252:	fdiv   QWORD PTR [ecx+0x74]
  422255:	lods   al,BYTE PTR ds:[esi]
  422256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422257:	test   BYTE PTR [eax],ah
  422259:	(bad)  
  42225a:	iret   
  42225b:	pop    ebp
  42225c:	pop    es
  42225d:	cwde   
  42225e:	mov    DWORD PTR [eax-0x1aaccb51],esi
  422264:	dec    esp
  422265:	call   0xc0d51326
  42226a:	xor    DWORD PTR [eax-0x1f2809ca],ecx
  422270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422271:	jbe    0x42227c
  422273:	jb     0x422202
  422275:	je     0x4222a6
  422277:	cmp    al,0x88
  422279:	test   BYTE PTR [esi+ebx*1+0x9537b82],cl
  422280:	push   edi
  422281:	lods   al,BYTE PTR ds:[esi]
  422282:	(bad)  
  422283:	ror    BYTE PTR [ebx],0x31
  422286:	sbb    ecx,DWORD PTR [eax+ecx*4+0x524d080]
  42228d:	push   ecx
  42228e:	jecxz  0x42230d
  422290:	push   eax
  422291:	push   eax
  422292:	aas    
  422293:	hlt    
  422294:	fnstenv [esi]
  422296:	jb     0x4222e5
  422298:	in     al,dx
  422299:	test   DWORD PTR [edx+0x6e9d9c03],ebx
  42229f:	sub    DWORD PTR [edx+0x58],edx
  4222a2:	lea    eax,[esi+0x6d]
  4222a5:	ror    BYTE PTR [edx-0x73a6862e],0x84
  4222ac:	cmc    
  4222ad:	dec    esi
  4222ae:	in     al,0x56
  4222b0:	mov    ds:0x42dc1605,al
  4222b5:	dec    esp
  4222b6:	aad    0x18
  4222b8:	mov    edx,0x5c0da2c6
  4222bd:	push   cs
  4222be:	jmp    0x422331
  4222c0:	(bad)  
  4222c1:	xor    BYTE PTR [edi-0x4c],dh
  4222c4:	pusha  
  4222c5:	mov    eax,ds:0x4912eaeb
  4222ca:	fdiv   DWORD PTR [ebx-0x77b90a80]
  4222d0:	cmp    al,0x32
  4222d2:	push   ecx
  4222d3:	cld    
  4222d4:	push   es
  4222d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222d6:	pop    ebx
  4222d7:	icebp  
  4222d8:	jecxz  0x422286
  4222da:	in     al,0xfa
  4222dc:	and    BYTE PTR [edx-0x245a5cce],dl
  4222e2:	arpl   ax,si
  4222e4:	sbb    eax,DWORD PTR [esi+ecx*4+0x2c]
  4222e8:	popa   
  4222e9:	ret    
  4222ea:	jnp    0x42231a
  4222ec:	jmp    0xdb090fbb
  4222f1:	mov    al,0x0
  4222f3:	push   cs
  4222f4:	int3   
  4222f5:	mov    al,0xe7
  4222f7:	adc    BYTE PTR [ebp+0x26fbd5b6],cl
  4222fd:	mov    BYTE PTR [ebx-0x16],dh
  422300:	xor    al,0x3a
  422302:	mov    ebp,DWORD PTR [ebp+0x6f679902]
  422308:	jo     0x422362
  42230a:	mov    dh,0xc5
  42230c:	jl     0x4222eb
  42230e:	jmp    0x4222b4
  422310:	sub    DWORD PTR [edx+0x7c],0x96ccdde4
  422317:	push   0x24025053
  42231c:	xchg   edx,edx
  42231e:	add    al,0x6e
  422320:	and    ch,BYTE PTR [eax-0x66b7e313]
  422326:	inc    edi
  422327:	in     al,dx
  422328:	dec    esi
  422329:	sbb    ecx,DWORD PTR [esi]
  42232b:	int3   
  42232c:	jmp    0xa61dca9d
  422331:	mov    edi,0x54351b26
  422336:	nop
  422337:	mov    ecx,0x867ae55
  42233c:	push   esp
  42233d:	mov    bl,0x13
  42233f:	cmp    BYTE PTR [edx+0x312600c8],bh
  422345:	push   0xc85c1edb
  42234a:	adc    DWORD PTR [ebx],0x34
  42234d:	fidivr DWORD PTR [eax+ecx*4+0x4a]
  422351:	adc    bh,0xb6
  422354:	popf   
  422355:	jmp    0x51a4:0xa0531dcc
  42235c:	sub    ah,bl
  42235e:	dec    edi
  42235f:	jae    0x42230d
  422361:	test   al,0x7b
  422363:	enter  0x34ee,0x25
  422367:	mov    al,BYTE PTR [esi+0x70821720]
  42236d:	push   esi
  42236e:	sbb    al,BYTE PTR [eax+0x5b0e9bb4]
  422374:	retf   0x4894
  422377:	sub    ah,bh
  422379:	clc    
  42237a:	aas    
  42237b:	push   cs
  42237c:	(bad)  
  42237d:	js     0x422337
  42237f:	jne    0x422393
  422381:	repnz sbb dl,BYTE PTR [eax+eax*8]
  422385:	cdq    
  422386:	das    
  422387:	fmul   QWORD PTR [eax+0x420e47ab]
  42238d:	sub    ecx,esp
  42238f:	inc    edx
  422390:	add    BYTE PTR [ebx],cl
  422392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422393:	pop    edx
  422394:	or     al,ah
  422396:	cmp    BYTE PTR [ebp+0x24],ah
  422399:	test   al,0xb7
  42239b:	sahf   
  42239c:	and    dl,BYTE PTR ss:[ebx-0x29]
  4223a0:	xor    eax,0x94faccdd
  4223a5:	aas    
  4223a6:	xchg   BYTE PTR [ecx+esi*1+0x75f0695c],bl
  4223ad:	push   esi
  4223ae:	(bad)  
  4223af:	popa   
  4223b0:	mov    dl,0xcb
  4223b2:	xlat   BYTE PTR ds:[ebx]
  4223b3:	pop    ss
  4223b4:	adc    al,0x62
  4223b6:	aaa    
  4223b7:	ss push ss
  4223b9:	ret    
  4223ba:	loopne 0x422377
  4223bc:	out    dx,eax
  4223bd:	mov    esp,0xe7680c66
  4223c2:	xchg   edi,eax
  4223c3:	(bad)
  4223c6:	loopne 0x4223b8
  4223c8:	hlt    
  4223c9:	push   esp
  4223ca:	jl     0x422374
  4223cc:	leave  
  4223cd:	ficom  DWORD PTR [eax+0x733d1204]
  4223d3:	inc    esp
  4223d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223d5:	fnsave [ebp-0x60]
  4223d8:	sub    BYTE PTR [ecx],al
  4223da:	pop    eax
  4223db:	icebp  
  4223dc:	gs in  eax,dx
  4223de:	out    dx,al
  4223df:	sub    BYTE PTR [ebp-0x3cf175b4],cl
  4223e5:	ja     0x422372
  4223e7:	clc    
  4223e8:	adc    DWORD PTR [ebp-0xc],ebx
  4223eb:	std    
  4223ec:	dec    eax
  4223ed:	and    bl,BYTE PTR [esi-0x45dbc0e2]
  4223f3:	sbb    BYTE PTR [ebp+0x337ba3c9],cl
  4223f9:	je     0x422381
  4223fb:	stc    
  4223fc:	cmp    al,0x50
  4223fe:	mov    al,BYTE PTR [edx+0x6b474b4d]
  422404:	adc    eax,0xcb200560
  422409:	lds    esi,FWORD PTR [ebx+0x23]
  42240c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42240d:	mov    WORD PTR [eax],cs
  42240f:	call   0xa65f:0xaf7d0b8a
  422416:	inc    eax
  422417:	sub    al,0x66
  422419:	dec    ebx
  42241a:	adc    DWORD PTR [eax+0x17d35c39],esi
  422420:	push   eax
  422421:	(bad)  
  422422:	in     eax,dx
  422423:	mov    esi,0x1eb963f8
  422428:	xor    BYTE PTR [esi+edi*8-0x71],dh
  42242c:	xchg   ebx,eax
  42242d:	(bad)  
  42242e:	lahf   
  42242f:	nop
  422430:	xor    ebx,DWORD PTR [ecx-0x68]
  422433:	fdiv   st,st(1)
  422435:	call   0x7a24beb
  42243a:	out    dx,eax
  42243b:	inc    eax
  42243c:	jmp    0xba12c401
  422441:	xor    eax,0x0
  422446:	add    BYTE PTR [eax],al
  422448:	fist   WORD PTR [esi+esi*8]
  42244b:	ds push ecx
  42244d:	or     DWORD PTR [eax],eax
  42244f:	add    BYTE PTR [eax],al
  422451:	add    BYTE PTR [eax],al
  422453:	add    BYTE PTR [ecx+0x9],dl
  422456:	add    BYTE PTR [eax],al
  422458:	add    BYTE PTR es:[esi],ah
  42245b:	jl     0x42245d
  42245d:	add    dh,BYTE PTR [esi]
  42245f:	or     BYTE PTR [eax],al
  422461:	add    ah,al
  422463:	inc    ebp
  422464:	add    BYTE PTR [esi-0x7f],bl
  422467:	mov    eax,ds:0xdb1b9d50
  42246c:	cwde   
  42246d:	and    al,0xda
  42246f:	iret   
  422470:	(bad)  
  422471:	nop
  422472:	sbb    al,0xcb
  422474:	or     esi,DWORD PTR [eax]
  422476:	dec    eax
  422477:	mov    edx,0x73a97819
  42247c:	ret    
  42247d:	dec    ecx
  42247e:	sub    ebp,DWORD PTR [edx+esi*1-0x5f]
  422482:	push   edx
  422483:	or     bh,bh
  422485:	popf   
  422486:	push   ebx
  422487:	adc    DWORD PTR [eax-0xd364d28],edx
  42248d:	iret   
  42248e:	into   
  42248f:	inc    ebx
  422490:	xor    DWORD PTR [eax],edi
  422492:	mov    dh,0x42
  422494:	rol    DWORD PTR [ecx+eax*1+0x5c5138aa],0xe0
  42249c:	cmp    al,0x5b
  42249e:	mov    DWORD PTR [esi-0x7f59d233],0x4a531a70
  4224a8:	push   ebp
  4224a9:	add    BYTE PTR [esi+0x71],al
  4224ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ad:	sub    al,0x2a
  4224af:	bound  ebx,QWORD PTR [edi-0x1a1c85c1]
  4224b5:	dec    esp
  4224b6:	jmp    FWORD PTR [eax+0x28]
  4224b9:	inc    ecx
  4224ba:	xchg   ecx,eax
  4224bb:	sti    
  4224bc:	sbb    DWORD PTR [ebp+0x53738370],ecx
  4224c2:	outs   dx,BYTE PTR ds:[esi]
  4224c3:	or     al,BYTE PTR [ebx-0x4f6bfd23]
  4224c9:	ror    BYTE PTR [eax+0x6326aff4],0x2c
  4224d0:	mov    eax,0xfe42ded8
  4224d5:	mov    dh,0x40
  4224d7:	sbb    ah,ah
  4224d9:	fsub   QWORD PTR [edi+0x59]
  4224dc:	mov    dl,0x87
  4224de:	stos   BYTE PTR es:[edi],al
  4224df:	repz ror DWORD PTR ds:0x6c93fe84,cl
  4224e6:	pop    ebp
  4224e7:	cmp    al,0xc2
  4224e9:	and    bl,BYTE PTR [ecx]
  4224eb:	test   al,0xa0
  4224ed:	outs   dx,BYTE PTR ds:[esi]
  4224ee:	cs push ebx
  4224f0:	xchg   edi,eax
  4224f1:	jecxz  0x4224a8
  4224f3:	clc    
  4224f4:	int3   
  4224f5:	imul   esp,esi,0xffffffec
  4224f8:	imul   esi,DWORD PTR [ecx+ebx*4-0x360f8b62],0xffffffce
  422500:	clc    
  422501:	dec    esi
  422502:	shr    BYTE PTR [edi+0x6c],0xaf
  422506:	adc    al,0xc5
  422508:	jo     0x422578
  42250a:	fwait
  42250b:	xchg   DWORD PTR [ecx+0x34],edi
  42250e:	pop    edi
  42250f:	mov    esp,0xe98df383
  422514:	int3   
  422515:	jmp    0xf42311f1
  42251a:	xor    eax,0x5f99cf41
  42251f:	xor    eax,0x267a04ae
  422524:	mov    bh,0x25
  422526:	int3   
  422527:	in     al,dx
  422528:	dec    edi
  422529:	pop    edi
  42252a:	sub    BYTE PTR [ebp-0x67f13dbb],dh
  422530:	xor    al,0x93
  422532:	arpl   ax,dx
  422534:	shl    DWORD PTR [edi-0x12],0xf8
  422538:	or     eax,0xf4c53d8e
  42253d:	dec    eax
  42253e:	jo     0x422552
  422540:	pop    eax
  422541:	imul   ebx,DWORD PTR [ecx-0x2e],0xffffffd1
  422545:	sbb    BYTE PTR [ecx],dl
  422547:	ja     0x4225a7
  422549:	xor    DWORD PTR [edx-0x22],edi
  42254c:	jmp    0x4225b6
  42254e:	cmp    al,0xa4
  422550:	jnp    0x42257c
  422552:	push   ds
  422553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422554:	mov    ebx,0xfb60ea9a
  422559:	xor    ebx,edx
  42255b:	adc    DWORD PTR [ebp-0x44],edx
  42255e:	sub    ebx,0xfaab0a08
  422564:	jmp    0xee0186e
  422569:	sub    al,0x93
  42256b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42256c:	fcmovne st,st(1)
  42256e:	rol    dh,1
  422570:	or     al,0x91
  422572:	push   eax
  422573:	jg     0x422570
  422575:	je     0x422543
  422577:	das    
  422578:	dec    ebx
  422579:	xor    eax,0xea674df
  42257e:	(bad)  
  42257f:	xchg   cx,ax
  422581:	stc    
  422582:	sub    eax,0x85901ce5
  422587:	bound  esp,QWORD PTR [ecx-0x7b3da1cf]
  42258d:	inc    eax
  42258e:	sub    DWORD PTR [ebp-0x14],ebx
  422591:	fistp  WORD PTR ds:0x64c80606
  422597:	xor    al,0xd
  422599:	sub    al,dh
  42259b:	ret    0xf03f
  42259e:	sub    cl,BYTE PTR [eax-0x438c80c5]
  4225a4:	cdq    
  4225a5:	inc    ebx
  4225a6:	sahf   
  4225a7:	retf   0xb5ac
  4225aa:	jg     0x4225cd
  4225ac:	mov    esi,0xe65dc2f6
  4225b1:	push   esp
  4225b2:	je     0x42261a
  4225b4:	fcmovu st,st(2)
  4225b6:	ret    
  4225b7:	aaa    
  4225b8:	xchg   ebp,eax
  4225b9:	sub    al,0x78
  4225bb:	add    eax,0xafd6f850
  4225c0:	adc    al,0x61
  4225c2:	fwait
  4225c3:	pushf  
  4225c4:	arpl   WORD PTR [ecx+0x58],di
  4225c7:	mov    esi,DWORD PTR [esi+eiz*4]
  4225ca:	push   ds
  4225cb:	pop    ebp
  4225cc:	shl    bh,0xc4
  4225cf:	push   cs
  4225d0:	jae    0x422575
  4225d2:	outs   dx,DWORD PTR ds:[esi]
  4225d3:	outs   dx,DWORD PTR ds:[esi]
  4225d4:	(bad)  
  4225d5:	in     al,0x37
  4225d7:	jae    0x4225ac
  4225d9:	add    ecx,DWORD PTR [ebx]
  4225db:	sub    edi,DWORD PTR [eax+0x3c]
  4225de:	mov    WORD PTR [edi-0x58],gs
  4225e1:	sbb    ah,BYTE PTR [ebp+0x22]
  4225e4:	ror    BYTE PTR [edx+0x22],cl
  4225e7:	mov    al,0x14
  4225e9:	scas   al,BYTE PTR es:[edi]
  4225ea:	lahf   
  4225eb:	loopne 0x4225a9
  4225ed:	jg     0x4225e4
  4225ef:	enter  0x42d4,0x85
  4225f3:	fwait
  4225f4:	stos   DWORD PTR es:[edi],eax
  4225f5:	fwait
  4225f6:	mov    ds:0xdcf8e36b,eax
  4225fb:	test   eax,0x9cd9ffd8
  422600:	pop    edx
  422601:	mov    ch,0xa0
  422603:	imul   esi,DWORD PTR [esi+0x12],0xe858e213
  42260a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42260b:	les    esi,FWORD PTR [esi+0x65]
  42260e:	loopne 0x4225e1
  422610:	push   edx
  422611:	jle    0x422597
  422613:	test   al,ch
  422615:	mov    ?,WORD PTR [eax-0x4a954e59]
  42261b:	pop    ds
  42261c:	sbb    eax,0xca84f60c
  422621:	xor    bl,dh
  422623:	and    al,0x99
  422625:	sub    eax,0x6b973230
  42262a:	imul   edi,DWORD PTR [edi-0x27b73a7a],0x6b
  422631:	aam    0xe4
  422633:	dec    esi
  422634:	mov    al,0xe0
  422636:	mov    eax,0x66d5fc89
  42263b:	pop    eax
  42263c:	shl    DWORD PTR [ebp+0x20d48906],1
  422642:	jmp    0x4225fa
  422644:	pop    eax
  422645:	mov    BYTE PTR [ebp+0x51],ah
  422648:	push   es
  422649:	fs inc esp
  42264b:	cmp    al,0x6b
  42264d:	inc    eax
  42264e:	add    DWORD PTR [edi-0x1322c64c],eax
  422654:	call   0xee92:0xf013a927
  42265b:	and    dl,BYTE PTR [eax]
  42265d:	pop    esi
  42265e:	fnstsw WORD PTR ds:0x2901f116
  422664:	sti    
  422665:	xor    al,0x4c
  422667:	jg     0x42263b
  422669:	add    cl,al
  42266b:	inc    ecx
  42266c:	imul   ebx,DWORD PTR [ebx],0xaddd9a58
  422672:	jp     0x422660
  422674:	fs test eax,0xfc5e7c0e
  42267a:	or     al,BYTE PTR [esi-0x2bc79d77]
  422680:	and    al,0x91
  422682:	scas   eax,DWORD PTR es:[edi]
  422683:	(bad)  
  422684:	dec    esi
  422685:	clc    
  422686:	sub    DWORD PTR [esi],edx
  422688:	sti    
  422689:	dec    eax
  42268a:	push   ds
  42268b:	push   esi
  42268c:	ja     0x42265f
  42268e:	test   DWORD PTR [edi],eax
  422690:	cmp    DWORD PTR [edx],esp
  422692:	ins    BYTE PTR es:[edi],dx
  422693:	sbb    al,0x2
  422695:	inc    edi
  422696:	jb     0x422663
  422698:	adc    BYTE PTR [edi],cl
  42269a:	hlt    
  42269b:	nop
  42269c:	mov    ecx,0xfbc822b9
  4226a1:	mov    DWORD PTR [ebp+0x1b],ebp
  4226a4:	mov    ah,0xbb
  4226a6:	cmc    
  4226a7:	ins    BYTE PTR es:[edi],dx
  4226a8:	ins    DWORD PTR es:[edi],dx
  4226a9:	arpl   WORD PTR [edx],si
  4226ab:	retf   0x5c81
  4226ae:	pop    ebx
  4226af:	mov    DWORD PTR [esi-0x8],ebp
  4226b2:	or     DWORD PTR [edx-0x567fa304],edi
  4226b8:	(bad)  
  4226b9:	ja     0x42265a
  4226bb:	mov    WORD PTR [ecx+0xea4c957],ss
  4226c1:	jp     0x4226f4
  4226c3:	push   ds
  4226c4:	adc    ebx,0xbec80171
  4226ca:	out    0xd3,eax
  4226cc:	pop    eax
  4226cd:	xor    BYTE PTR [edi],al
  4226cf:	popa   
  4226d0:	mov    esp,0xf1367570
  4226d5:	push   0x86390e60
  4226da:	xchg   esp,eax
  4226db:	pop    esi
  4226dc:	mov    cl,0x6c
  4226de:	xor    eax,0xb5b27aa4
  4226e3:	mov    eax,0xfc38ee3
  4226e8:	shr    BYTE PTR [ebx-0x223b877],0xe8
  4226ef:	xor    cl,BYTE PTR [edi]
  4226f1:	repz add ah,BYTE PTR [ebx-0x6d]
  4226f5:	add    BYTE PTR [esi+0x48],bh
  4226f8:	cdq    
  4226f9:	mov    esi,0xf54969af
  4226fe:	test   al,0xe6
  422700:	shr    BYTE PTR gs:0xa19c59de,0xcc
  422708:	(bad)  
  422709:	into   
  42270a:	lock bound ecx,QWORD PTR [eax-0x3b]
  42270e:	adc    al,0x93
  422710:	lock mov edi,0x92252f20
  422716:	lods   al,BYTE PTR ds:[esi]
  422717:	sbb    DWORD PTR [esp+edx*1],ebp
  42271a:	les    edx,FWORD PTR [ebp-0x603e7a99]
  422720:	imul   ebp,DWORD PTR ds:0x49f4b0bc,0xfd5386c
  42272a:	aas    
  42272b:	loopne 0x42275e
  42272d:	push   0xffffffc5
  42272f:	adc    DWORD PTR [esi],eax
  422731:	cdq    
  422732:	stos   BYTE PTR es:[edi],al
  422733:	pop    esi
  422734:	add    al,0xeb
  422736:	leave  
  422737:	int    0x1f
  422739:	sahf   
  42273a:	test   al,0xf2
  42273c:	lock sub BYTE PTR [ebp-0x3d882d0e],ch
  422743:	xchg   esp,eax
  422744:	(bad)  
  422745:	mov    dl,0x4c
  422747:	ja     0x422728
  422749:	mov    edx,0x131781a8
  42274e:	jno    0x422744
  422750:	xchg   ecx,esi
  422752:	inc    esp
  422753:	xchg   edi,eax
  422754:	push   edi
  422755:	pushf  
  422756:	mov    BYTE PTR [eax],0x18
  422759:	inc    eax
  42275a:	xchg   DWORD PTR [eax+ebp*1],ebp
  42275d:	fwait
  42275e:	fwait
  42275f:	ins    DWORD PTR es:[edi],dx
  422760:	sub    eax,0x18b18b3c
  422765:	shl    BYTE PTR [esi+0x601d5dba],1
  42276b:	mov    esi,0x4d1e9d6c
  422770:	ucomiss xmm2,xmm2
  422773:	test   BYTE PTR [ebx],ah
  422775:	or     edx,DWORD PTR [eax-0x7c]
  422778:	cmp    BYTE PTR ds:[ebx-0x33],ah
  42277c:	sub    al,0x81
  42277e:	pusha  
  42277f:	sub    al,0xcc
  422781:	xor    al,0x77
  422783:	scas   eax,DWORD PTR es:[edi]
  422784:	jecxz  0x4227d6
  422786:	aaa    
  422787:	aad    0xa1
  422789:	sub    DWORD PTR [eax+0x748eed33],ebp
  42278f:	cmp    al,0x97
  422791:	in     al,0x3e
  422793:	adc    esi,DWORD PTR [esi+ecx*2-0x3b1667ac]
  42279a:	ss mov esi,0x7e41d91b
  4227a0:	inc    eax
  4227a1:	cmp    edi,0xc0d572c8
  4227a7:	aaa    
  4227a8:	fsub   QWORD PTR [edi+ebp*1+0x77]
  4227ac:	mov    esi,0x5f6fa6a9
  4227b1:	adc    cl,BYTE PTR [eax+0x61688fdb]
  4227b7:	enter  0x9407,0x43
  4227bb:	lods   al,BYTE PTR ds:[esi]
  4227bc:	outs   dx,BYTE PTR ds:[esi]
  4227bd:	push   ecx
  4227be:	ds fs mov edi,0xd015199d
  4227c5:	jne    0x422829
  4227c7:	shr    ebx,1
  4227c9:	int    0x85
  4227cb:	inc    edi
  4227cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227cd:	js     0x4227b9
  4227cf:	sar    BYTE PTR [eax],1
  4227d1:	push   es
  4227d2:	sub    BYTE PTR [esi-0x18638a4b],cl
  4227d8:	cwde   
  4227d9:	sahf   
  4227da:	clc    
  4227db:	xor    ecx,ebx
  4227dd:	jecxz  0x42284a
  4227df:	shl    BYTE PTR [ebx],0x7d
  4227e2:	rcr    BYTE PTR [ebx],0x21
  4227e5:	test   bl,bl
  4227e7:	push   cs
  4227e8:	in     al,0x3
  4227ea:	xlat   BYTE PTR ds:[ebx]
  4227eb:	ins    BYTE PTR es:[edi],dx
  4227ec:	pop    esi
  4227ed:	out    0xcd,al
  4227ef:	pop    esi
  4227f0:	lock mov esp,ds
  4227f3:	sub    bl,BYTE PTR [edx]
  4227f5:	push   ecx
  4227f6:	xchg   esi,edi
  4227f8:	test   ebx,ebp
  4227fa:	mov    al,0x91
  4227fc:	imul   ebx,DWORD PTR [edx+0x76],0xfffffff5
  422800:	fxch   st(6)
  422802:	fcmovbe st,st(4)
  422804:	pusha  
  422805:	or     al,0x35
  422807:	push   edi
  422808:	jp     0x422795
  42280a:	pop    DWORD PTR [eax+edi*8]
  42280d:	into   
  42280e:	fsubr  st,st(2)
  422810:	add    BYTE PTR [ecx],dh
  422812:	xchg   esp,eax
  422813:	inc    ebp
  422814:	jnp    0x422832
  422816:	inc    ebp
  422817:	sahf   
  422818:	push   esp
  422819:	inc    ebp
  42281a:	test   al,0xa9
  42281c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42281d:	js     0x4227e3
  42281f:	push   0x994268c3
  422824:	mov    bh,0xa4
  422826:	mov    ecx,0x40c021e8
  42282b:	aas    
  42282c:	mov    edx,0xcb8d6da
  422831:	pop    ebp
  422832:	dec    esp
  422833:	push   0xffffff88
  422835:	jle    0x42289a
  422837:	dec    edi
  422838:	mov    DWORD PTR [eax],esi
  42283a:	hlt    
  42283b:	repz ror DWORD PTR [ecx+0x34],cl
  42283f:	pusha  
  422840:	mov    dh,0xf9
  422842:	fadd   DWORD PTR [edx]
  422844:	rol    bl,cl
  422846:	jmp    DWORD PTR [ebp-0x54]
  422849:	(bad)  
  42284a:	sti    
  42284b:	cld    
  42284c:	pop    edx
  42284d:	add    BYTE PTR [ecx-0x15d8e890],0x5e
  422854:	and    BYTE PTR [esi+edx*1+0x482f06f0],dh
  42285b:	aaa    
  42285c:	aas    
  42285d:	inc    esp
  42285e:	mov    eax,ds:0xda0747ff
  422863:	cmp    eax,0x7668e8b8
  422868:	sub    DWORD PTR ds:0x85b22ffe,ecx
  42286e:	xchg   ebx,eax
  42286f:	adc    BYTE PTR [edi],bl
  422871:	or     al,0xb1
  422873:	jp     0x42285e
  422875:	mov    cl,0x3c
  422877:	jae    0x4228ad
  422879:	loope  0x422827
  42287b:	adc    BYTE PTR [esi+esi*8+0x58f973c7],ah
  422882:	xchg   edx,eax
  422883:	ror    BYTE PTR [eax-0x605138d9],0x70
  42288a:	jl     0x4228c1
  42288c:	xchg   ebx,eax
  42288d:	scas   al,BYTE PTR es:[edi]
  42288e:	fsub   QWORD PTR ds:0xa07aae4f
  422894:	sbb    bh,BYTE PTR [ebx+0x57d432ef]
  42289a:	inc    ecx
  42289b:	pop    ds
  42289c:	dec    eax
  42289d:	inc    edi
  42289e:	cmp    ecx,esp
  4228a0:	mov    dh,0x37
  4228a2:	xor    BYTE PTR [ebx],cl
  4228a4:	imul   ebp,DWORD PTR [eax+eiz*8-0x12],0xffffffbc
  4228a9:	push   ebx
  4228aa:	mov    dh,0x95
  4228ac:	xchg   esi,eax
  4228ad:	xchg   esi,eax
  4228ae:	nop
  4228af:	push   eax
  4228b0:	cmc    
  4228b1:	adc    al,al
  4228b3:	inc    eax
  4228b4:	ror    BYTE PTR [edi],0xd8
  4228b7:	mov    ah,0x3d
  4228b9:	cmc    
  4228ba:	jnp    0x4228de
  4228bc:	sub    bl,BYTE PTR [ebx]
  4228be:	jl     0x42285c
  4228c0:	pop    esp
  4228c1:	rcl    BYTE PTR ds:0x1f00bb73,cl
  4228c7:	stos   DWORD PTR es:[edi],eax
  4228c8:	scas   al,BYTE PTR es:[edi]
  4228c9:	or     BYTE PTR [esi+0x2a],0xc
  4228cd:	adc    al,0xdf
  4228d0:	into   
  4228d1:	pop    edi
  4228d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228d3:	or     eax,0x1375eb28
  4228d8:	popa   
  4228d9:	or     al,0xbe
  4228db:	enter  0xf928,0xbd
  4228df:	repz cwde 
  4228e1:	mov    ch,BYTE PTR [esi-0x2d8e1356]
  4228e7:	rcl    dh,cl
  4228e9:	adc    DWORD PTR [ebp-0x3],ebp
  4228ec:	rcl    BYTE PTR [edx+esi*2+0x3adea9e0],0x98
  4228f4:	pop    edi
  4228f5:	ja     0x4228af
  4228f7:	adc    edx,0xffffff9c
  4228fa:	adc    BYTE PTR ds:0xdc47fb2f,ah
  422900:	mov    es,WORD PTR [edi+0x2e]
  422903:	cs inc ebp
  422905:	fiadd  DWORD PTR [edx-0x23bbfff5]
  42290b:	xchg   ebp,eax
  42290c:	and    DWORD PTR [edi],eax
  42290e:	ss add eax,0x15caa86b
  422914:	mov    ebx,0xbfdc82f9
  422919:	stc    
  42291a:	int3   
  42291b:	mov    ebx,0x860f41f7
  422920:	fwait
  422921:	pop    ebp
  422922:	push   eax
  422924:	adc    esp,esp
  422926:	xlat   BYTE PTR ds:[ebx]
  422927:	test   eax,0x96f3b993
  42292c:	adc    al,0x58
  42292e:	jmp    0xe6e18a40
  422933:	mov    ?,ecx
  422935:	cmp    BYTE PTR [eax+0x5cfa03dd],cl
  42293b:	fcmovu st,st(3)
  42293d:	pop    ecx
  42293e:	loopne 0x422971
  422940:	xor    al,0x60
  422942:	shr    DWORD PTR [esi],0xc0
  422945:	je     0x4228f7
  422947:	add    al,0x40
  422949:	xor    DWORD PTR [ebp+ecx*4+0x22],ebp
  42294d:	outs   dx,DWORD PTR ds:[esi]
  42294e:	clc    
  42294f:	mov    ebp,0xa519de28
  422954:	mov    ah,0xaf
  422956:	(bad)  
  422957:	cmp    BYTE PTR [esi],dl
  422959:	dec    esp
  42295a:	gs (bad) 
  42295c:	test   DWORD PTR [edx-0x5c492a99],0x6fa24570
  422966:	or     ah,ah
  422968:	adc    eax,0xdf180104
  42296d:	popa   
  42296e:	dec    edi
  42296f:	ss ret 
  422971:	or     DWORD PTR [eax+eiz*1],eax
  422974:	cmp    al,0x2b
  422976:	jg     0x422969
  422978:	push   es
  422979:	add    DWORD PTR [edx+0x35607c85],0x86dd24c5
  422983:	xor    ah,cl
  422985:	mov    edi,0x6f11f784
  42298a:	cmp    eax,0x122956c1
  42298f:	sub    al,0x1f
  422991:	inc    edi
  422992:	xor    bl,BYTE PTR [ebp-0x5f025844]
  422998:	push   eax
  422999:	aas    
  42299a:	adc    BYTE PTR [edi-0x48],al
  42299d:	adc    BYTE PTR [ecx+0x1c74c579],al
  4229a3:	add    al,0x2
  4229a5:	jb     0x4229bd
  4229a7:	and    ecx,esp
  4229a9:	inc    ebx
  4229aa:	cwde   
  4229ab:	dec    ecx
  4229ac:	add    DWORD PTR [edi-0x74],ecx
  4229af:	lahf   
  4229b0:	mov    esi,es
  4229b2:	mov    cl,0xbc
  4229b4:	adc    al,0xff
  4229b6:	inc    DWORD PTR [ecx]
  4229b8:	push   esi
  4229b9:	adc    DWORD PTR [eax],0x7e2e64b7
  4229bf:	inc    ebx
  4229c0:	sbb    DWORD PTR [esi-0x6b],esi
  4229c3:	repnz into 
  4229c5:	mov    ah,al
  4229c7:	jecxz  0x4229f0
  4229c9:	add    BYTE PTR [eax],0x35
  4229cc:	xchg   edx,eax
  4229cd:	aam    0xac
  4229cf:	outs   dx,DWORD PTR ds:[esi]
  4229d0:	clc    
  4229d1:	test   BYTE PTR [edx+0x47],cl
  4229d4:	push   ss
  4229d5:	lods   al,BYTE PTR ds:[esi]
  4229d6:	in     eax,0xd0
  4229d8:	sbb    DWORD PTR [esi],edx
  4229da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229db:	setg   dl
  4229de:	dec    ecx
  4229df:	nop
  4229e0:	js     0x4229f9
  4229e2:	bound  esp,QWORD PTR [eax+0x26c9c06d]
  4229e8:	dec    edi
  4229e9:	pushf  
  4229ea:	add    BYTE PTR [eax],al
  4229ec:	push   cs
  4229ed:	test   eax,0xf2539779
  4229f2:	shl    BYTE PTR [edi-0x68224215],0x2a
  4229f9:	mov    al,0x36
  4229fb:	in     al,0xd3
  4229fd:	adc    eax,0x2cfb05c8
  422a02:	neg    DWORD PTR [ebx]
  422a04:	or     dh,cl
  422a06:	out    0x3f,eax
  422a08:	ret    
  422a09:	iret   
  422a0a:	inc    edx
  422a0b:	(bad)  
  422a0c:	cmc    
  422a0d:	mov    al,0x20
  422a0f:	fild   QWORD PTR [ecx+0x7c]
  422a12:	repz mov bh,0xc6
  422a15:	and    edx,esp
  422a17:	pop    es
  422a18:	stc    
  422a19:	out    dx,al
  422a1a:	jle    0x4229e0
  422a1c:	xchg   DWORD PTR [edx+eax*2-0x8],esp
  422a20:	and    dl,BYTE PTR [ebx]
  422a22:	add    al,0x7d
  422a24:	adc    al,0xaf
  422a26:	jp     0x422a6b
  422a28:	sbb    al,0xdc
  422a2a:	ins    BYTE PTR es:[edi],dx
  422a2b:	addr16 sahf 
  422a2d:	scas   eax,DWORD PTR es:[edi]
  422a2e:	cmp    DWORD PTR [edx],0xffffff94
  422a31:	inc    eax
  422a32:	cmp    bh,BYTE PTR [esi+0x3b]
  422a35:	inc    esp
  422a36:	pop    esp
  422a37:	xchg   edx,eax
  422a38:	push   0x44d5e84f
  422a3d:	icebp  
  422a3e:	sahf   
  422a3f:	rol    BYTE PTR [ebp-0x6cf395b4],cl
  422a45:	sub    dl,BYTE PTR [eax+0x2bda6c1a]
  422a4b:	pop    esp
  422a4c:	xor    BYTE PTR [ecx+0x68943535],bh
  422a52:	je     0x422aa4
  422a54:	dec    ebp
  422a55:	push   esp
  422a56:	jae    0x422aa5
  422a58:	imul   edx,DWORD PTR [esi-0x4f],0xfcdbfefc
  422a5f:	hlt    
  422a60:	hlt    
  422a61:	and    BYTE PTR [eax+0xd],bh
  422a64:	std    
  422a65:	cdq    
  422a66:	jecxz  0x422a88
  422a68:	pop    es
  422a69:	sub    BYTE PTR [eax-0x69],bl
  422a6c:	sbb    edx,ecx
  422a6e:	push   ecx
  422a6f:	nop
  422a70:	inc    esp
  422a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a72:	ror    DWORD PTR [ebx],cl
  422a74:	push   0xffffffea
  422a76:	jnp    0x422a44
  422a78:	xor    eax,0xdbc6f268
  422a7d:	xlat   BYTE PTR ds:[ebx]
  422a7e:	jge    0x422a51
  422a80:	mov    ebp,0xc8378c1b
  422a85:	aas    
  422a86:	in     eax,0xb5
  422a88:	aad    0x8f
  422a8a:	sub    esi,DWORD PTR [eiz*2+0x4c835ddd]
  422a91:	mov    edx,0xe58c053
  422a96:	sahf   
  422a97:	and    esp,0xffffffca
  422a9a:	push   ecx
  422a9b:	mov    ds:0xc1277cb1,al
  422aa0:	test   eax,0x727f4942
  422aa5:	test   BYTE PTR [eax+0x3f0d30d8],ah
  422aab:	ins    BYTE PTR es:[edi],dx
  422aac:	push   0xeb4874e1
  422ab1:	sub    dl,dh
  422ab3:	mov    edx,0x46743f7b
  422ab8:	ins    BYTE PTR es:[edi],dx
  422ab9:	je     0x422ac8
  422abb:	jo     0x422ac9
  422abd:	ins    BYTE PTR es:[edi],dx
  422abe:	inc    ecx
  422abf:	push   ecx
  422ac0:	int    0x90
  422ac2:	pop    edi
  422ac3:	sbb    DWORD PTR [eax],ebp
  422ac5:	in     eax,0xd3
  422ac7:	pop    edx
  422ac8:	or     DWORD PTR [ebx],0xce51c4b4
  422ace:	mov    edi,0x5887998a
  422ad3:	fcomp  DWORD PTR [edi+0x6d788334]
  422ad9:	xchg   esp,eax
  422ada:	lods   eax,DWORD PTR ds:[esi]
  422adb:	push   eax
  422adc:	or     BYTE PTR [edx+0x63],0xde
  422ae0:	mov    edx,0x60b7b952
  422ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae6:	adc    al,0xac
  422ae8:	jecxz  0x422abf
  422aea:	ins    DWORD PTR es:[edi],dx
  422aeb:	mov    edx,0xf6c8d339
  422af0:	sbb    eax,0x435c4d0a
  422af5:	inc    edi
  422af6:	test   eax,0x17433dec
  422afb:	bnd jo 0x422ab1
  422afe:	jl     0x422abf
  422b00:	adc    BYTE PTR [ebx+0x3e],al
  422b03:	retf   0xd656
  422b06:	inc    ebp
  422b07:	fidiv  WORD PTR [ebx-0x48]
  422b0a:	push   ecx
  422b0b:	js     0x422b70
  422b0d:	aad    0x6e
  422b0f:	mov    esp,ebp
  422b11:	rcr    ah,0x6f
  422b14:	push   eax
  422b15:	into   
  422b16:	cld    
  422b17:	fmul   DWORD PTR [eax+0x3a008d5e]
  422b1d:	sub    esi,DWORD PTR [ebp+ecx*1-0x2dd0904a]
  422b24:	and    al,0x7c
  422b26:	lahf   
  422b27:	cld    
  422b28:	outs   dx,DWORD PTR ds:[esi]
  422b29:	jae    0x422b2c
  422b2b:	adc    edi,0xffffffcc
  422b2e:	push   es
  422b2f:	aaa    
  422b30:	jp     0x422b76
  422b32:	push   cs
  422b33:	add    ah,BYTE PTR [esi-0x5e5e0f82]
  422b39:	adc    esp,DWORD PTR ds:0xe50d360c
  422b3f:	adc    al,0x80
  422b41:	cmp    DWORD PTR [ecx-0x3],esp
  422b44:	in     eax,dx
  422b45:	pop    ecx
  422b46:	or     ch,al
  422b48:	cmp    al,cl
  422b4a:	adc    eax,0x68ad3f1b
  422b4f:	in     eax,0xe2
  422b51:	pop    esp
  422b52:	mov    ecx,0xd8bd8e2e
  422b57:	outs   dx,BYTE PTR ds:[esi]
  422b58:	mov    edi,0x85f4048c
  422b5d:	add    al,0x8f
  422b5f:	xor    eax,0x28b27f3a
  422b64:	call   0xf182:0xfe4aec4d
  422b6b:	cmp    BYTE PTR [eax+edi*8-0x7],cl
  422b6f:	imul   edi,DWORD PTR [esi+0x30fb046d],0x3f0fe670
  422b79:	out    dx,al
  422b7a:	fs cmp al,0xd7
  422b7d:	les    ebx,FWORD PTR [eax]
  422b7f:	inc    esp
  422b80:	push   0x76881096
  422b85:	(bad)  [ebp+0x7870943c]
  422b8b:	push   es
  422b8c:	ss add bl,0x53
  422b90:	pusha  
  422b91:	push   ecx
  422b92:	in     eax,dx
  422b93:	(bad)  
  422b94:	xor    ah,bl
  422b96:	xchg   esi,eax
  422b97:	dec    esp
  422b98:	push   ebx
  422b99:	test   ah,al
  422b9b:	ds xchg edx,eax
  422b9d:	push   ss
  422b9e:	mov    bh,dl
  422ba0:	mul    BYTE PTR [esi+0x598e50a8]
  422ba6:	dec    ebp
  422ba7:	neg    al
  422ba9:	pop    es
  422baa:	addr16 push eax
  422bac:	repz aad 0x1b
  422baf:	adc    DWORD PTR [ebx],0x74fdb4fe
  422bb5:	popa   
  422bb6:	dec    eax
  422bb7:	gs add bl,bh
  422bba:	enter  0x521c,0x98
  422bbe:	aaa    
  422bbf:	fprem1 
  422bc1:	add    eax,0x2f345a52
  422bc6:	mov    esp,0xd29e187f
  422bcb:	add    BYTE PTR [edi+0x52e0ac9d],dh
  422bd1:	add    ah,BYTE PTR [edx+0x35]
  422bd4:	xor    ecx,DWORD PTR [esi]
  422bd6:	add    eax,0x89df88f3
  422bdb:	adc    al,bh
  422bdd:	adc    BYTE PTR [edi+0x5dacccb8],0xf0
  422be4:	sbb    al,0x88
  422be6:	test   eax,0xd019713a
  422beb:	data16 and ch,0x1c
  422bef:	jno    0x422bd6
  422bf1:	(bad)  
  422bf2:	lock hlt 
  422bf4:	stos   BYTE PTR es:[edi],al
  422bf5:	das    
  422bf6:	pop    esi
  422bf7:	adc    eax,0xc5c38973
  422bfc:	pushf  
  422bfd:	into   
  422bfe:	(bad)  
  422bff:	adc    ebp,ebp
  422c01:	mov    eax,0xc0c17fb3
  422c06:	std    
  422c07:	dec    esi
  422c08:	sbb    DWORD PTR [ecx],ecx
  422c0a:	push   cs
  422c0b:	push   edi
  422c0c:	push   ecx
  422c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c0e:	in     al,0x60
  422c10:	shl    esp,0x12
  422c13:	inc    esp
  422c14:	pop    eax
  422c15:	mov    esi,0xb7c80841
  422c1a:	rcr    DWORD PTR [eax-0x44],cl
  422c1d:	icebp  
  422c1e:	arpl   WORD PTR [edi+0x4013242c],bx
  422c24:	mov    edi,0xe09b1fc5
  422c29:	aam    0x55
  422c2b:	lods   eax,DWORD PTR ds:[esi]
  422c2c:	mov    ch,0xac
  422c2e:	call   0x8691:0xf8884821
  422c35:	fisubr DWORD PTR [eax+0x6f654bc]
  422c3b:	sbb    al,0x20
  422c3d:	rsqrtps xmm6,XMMWORD PTR [ecx-0x31]
  422c41:	mov    ch,0xe0
  422c43:	call   0x2ecf:0x5bd23540
  422c4a:	lods   al,BYTE PTR ds:[esi]
  422c4b:	into   
  422c4c:	and    eax,0x698f98e8
  422c51:	add    eax,0x4166015b
  422c56:	or     al,0xe8
  422c58:	ja     0x422c56
  422c5a:	fs jle 0x422c24
  422c5d:	in     al,0xd0
  422c5f:	xor    BYTE PTR [esi+0x71],dh
  422c62:	cld    
  422c63:	dec    ecx
  422c64:	inc    ebp
  422c65:	add    esi,DWORD PTR [edi+0x62]
  422c68:	push   esp
  422c69:	or     eax,0xb5dea1a6
  422c6e:	adc    DWORD PTR ds:0x7b4789e,eax
  422c74:	stos   BYTE PTR es:[edi],al
  422c75:	(bad)  
  422c76:	popa   
  422c77:	jge    0x422cdf
  422c79:	pop    ss
  422c7a:	and    cl,bl
  422c7c:	push   edi
  422c7d:	xchg   BYTE PTR [ebx+0x2868f6ae],dh
  422c83:	inc    esp
  422c84:	ds ins DWORD PTR es:[edi],dx
  422c86:	mov    ds:0xac15385a,al
  422c8b:	mov    gs,WORD PTR [eax-0x46]
  422c8e:	adc    ebx,DWORD PTR [ecx-0x15d3185e]
  422c94:	test   BYTE PTR [ecx+ebx*8-0x7501c070],cl
  422c9b:	cmp    dh,BYTE PTR [edx]
  422c9d:	mov    ch,0x34
  422c9f:	pop    eax
  422ca0:	inc    ebx
  422ca1:	int    0x79
  422ca3:	mov    eax,ds:0x584aec9a
  422ca8:	xchg   edx,eax
  422ca9:	ss fs call 0x95f468f0
  422cb0:	jl     0x422cbe
  422cb2:	sbb    dl,BYTE PTR [edx]
  422cb4:	dec    esi
  422cb5:	pop    edi
  422cb6:	push   esi
  422cb7:	sbb    DWORD PTR [edx],0x8881ada0
  422cbd:	cmp    eax,0xe127dcb5
  422cc2:	les    ecx,FWORD PTR [esi+edx*4]
  422cc5:	test   DWORD PTR [esi],ebx
  422cc7:	test   al,0x75
  422cc9:	or     BYTE PTR [edi+0x6c],ch
  422ccc:	push   ss
  422ccd:	xchg   edx,eax
  422cce:	adc    ebp,DWORD PTR [ecx+ebp*8-0x7]
  422cd2:	aaa    
  422cd3:	push   0x4510bc90
  422cd8:	mov    ah,0xe0
  422cda:	sub    eax,0x60b49cb8
  422cdf:	loope  0x422d5d
  422ce1:	fistp  DWORD PTR [ebx+ecx*8]
  422ce4:	or     eax,0x7176d8c4
  422ce9:	int    0xe3
  422ceb:	dec    esp
  422cec:	mov    dh,0xeb
  422cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cef:	cld    
  422cf0:	and    bh,dl
  422cf2:	js     0x422c87
  422cf4:	sub    dl,dl
  422cf6:	fs enter 0x52a4,0x6f
  422cfb:	sbb    cl,BYTE PTR [esi+ebx*4+0x2e]
  422cff:	xor    DWORD PTR [eax+ecx*8],edi
  422d02:	xchg   edi,eax
  422d03:	sbb    edi,eax
  422d05:	or     DWORD PTR [eax-0x6c],ebx
  422d08:	das    
  422d09:	adc    ebp,esp
  422d0b:	jno    0x422d4e
  422d0d:	cld    
  422d0e:	loopne 0x422cc1
  422d10:	mov    cs,WORD PTR [ecx-0x3808efac]
  422d16:	dec    esp
  422d17:	sub    DWORD PTR [edi],esp
  422d19:	mov    edx,0xb4b80ca0
  422d1e:	shr    DWORD PTR [ebx+0x6b],cl
  422d21:	mov    ch,0x67
  422d23:	mov    edi,0xf8e9dca3
  422d28:	ins    DWORD PTR es:[edi],dx
  422d29:	mov    dl,0x1c
  422d2b:	pusha  
  422d2c:	neg    BYTE PTR [ecx]
  422d2e:	add    bl,cl
  422d30:	ds (bad) 
  422d32:	pop    ds
  422d33:	ret    
  422d34:	(bad)  
  422d35:	cli    
  422d36:	jmp    0x422d5c
  422d38:	inc    esp
  422d39:	inc    edi
  422d3a:	hlt    
  422d3b:	sub    esi,DWORD PTR [ecx]
  422d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d3e:	pop    edi
  422d3f:	inc    ebp
  422d40:	dec    eax
  422d41:	test   eax,0xe1a1d28c
  422d46:	outs   dx,DWORD PTR ds:[esi]
  422d47:	leave  
  422d48:	push   0x17da24f0
  422d4d:	pop    ebx
  422d4e:	ficomp WORD PTR [edx-0x4eb9ebf]
  422d54:	mov    ebx,DWORD PTR [ebp+0x2aa85263]
  422d5a:	loope  0x422d94
  422d5c:	inc    ebp
  422d5d:	push   esp
  422d5e:	scas   eax,DWORD PTR es:[edi]
  422d5f:	push   ebp
  422d60:	leave  
  422d61:	pop    ds
  422d62:	lsl    ebx,WORD PTR [ebx+ebx*8-0x3c]
  422d67:	outs   dx,DWORD PTR ds:[esi]
  422d69:	dec    edi
  422d6a:	pop    edi
  422d6b:	mov    BYTE PTR ss:[ecx+eiz*1],0xe0
  422d70:	les    eax,FWORD PTR [edi]
  422d72:	mov    dh,0x62
  422d74:	sbb    BYTE PTR [ebp-0x1bab58d8],bl
  422d7a:	mov    ch,BYTE PTR [edi+0x4cf670cd]
  422d80:	pop    eax
  422d81:	test   al,0x6
  422d83:	out    dx,eax
  422d84:	lea    ebx,[esi+0x5770848d]
  422d8a:	mov    ds:0x30bfdf1d,eax
  422d8f:	dec    edi
  422d90:	in     eax,0x94
  422d92:	sub    dl,al
  422d94:	fbld   TBYTE PTR [eax-0x43fe806e]
  422d9a:	cmp    al,0xa7
  422d9c:	xor    ebx,eax
  422d9e:	adc    al,0x6c
  422da0:	xchg   esp,eax
  422da1:	push   0x33
  422da6:	add    BYTE PTR [eax],al
  422da8:	in     al,0x13
  422daa:	add    eax,0x9513c
  422daf:	add    BYTE PTR [eax],al
  422db1:	add    BYTE PTR [eax],al
  422db3:	add    BYTE PTR [ecx+0x9],dl
  422db6:	add    BYTE PTR [eax],al
  422db8:	daa    
  422db9:	add    BYTE PTR [esi],ah
  422dbb:	jl     0x422dbd
  422dbd:	add    dh,BYTE PTR [esi]
  422dbf:	or     BYTE PTR [eax],al
  422dc1:	add    ah,al
  422dc3:	inc    ebp
  422dc4:	add    BYTE PTR [ecx+0x7c39f9be],dl
  422dca:	jmp    0x25664ff2
  422dcf:	mov    al,ds:0x4465e1ac
  422dd4:	js     0x422d8f
  422dd6:	dec    eax
  422dd7:	sbb    eax,0xbe612930
  422ddc:	mov    ecx,0x616cb431
  422de1:	ds sub al,0x66
  422de4:	xor    al,0x1f
  422de6:	and    al,bh
  422de8:	nop
  422de9:	sbb    bh,BYTE PTR [ecx-0x2afb1372]
  422def:	jmp    0x26db6686
  422df4:	cmc    
  422df5:	jns    0x422e0e
  422df7:	adc    bl,BYTE PTR [esp+ebx*4+0x46e38a5c]
  422dfe:	and    DWORD PTR [ebp-0x7f409bf3],ecx
  422e04:	push   0x8258b78d
  422e09:	push   ds
  422e0a:	adc    BYTE PTR ds:0xca5ff2a4,al
  422e10:	fisttp DWORD PTR [esi]
  422e12:	mov    edx,0xad4c0189
  422e17:	xchg   dh,al
  422e19:	leave  
  422e1a:	sahf   
  422e1b:	sbb    eax,0xe27089ca
  422e20:	fldenv [eax-0x5c33f03]
  422e26:	add    DWORD PTR [ebp+ebp*4-0x711a83f6],edx
  422e2d:	lods   al,BYTE PTR ds:[esi]
  422e2e:	dec    edi
  422e2f:	cmp    edi,DWORD PTR [eax-0x4cc48390]
  422e35:	mov    ch,0x8b
  422e37:	cmp    al,0x17
  422e39:	fadd   st(2),st
  422e3b:	push   0xffffffd6
  422e3d:	mov    bh,0x51
  422e3f:	xchg   DWORD PTR [ebx+0x725b8443],eax
  422e45:	pushf  
  422e46:	xchg   ecx,eax
  422e47:	enter  0xb9db,0xa1
  422e4b:	test   al,0x39
  422e4d:	sbb    BYTE PTR [esi-0xaead577],dl
  422e53:	add    esp,ecx
  422e55:	push   cs
  422e56:	rcl    ah,1
  422e58:	call   0x96f0:0xb1b98988
  422e5f:	jb     0x422df4
  422e61:	shl    BYTE PTR [ebp+0x14024c9b],0x9c
  422e68:	jg     0x422e51
  422e6a:	sbb    al,BYTE PTR [edx+esi*8+0x5c]
  422e6e:	ss mov esp,0x18efa0f5
  422e74:	fbstp  TBYTE PTR [esp+eax*2-0x25]
  422e78:	loopne 0x422ee6
  422e7a:	or     cl,BYTE PTR [ebx+0x2fd87066]
  422e80:	cwde   
  422e81:	add    al,0xd7
  422e83:	or     BYTE PTR [ebx+0x59],bl
  422e86:	xor    edi,eax
  422e88:	popf   
  422e89:	pop    esp
  422e8a:	sub    BYTE PTR [eax],dl
  422e8c:	pop    esp
  422e8d:	out    dx,eax
  422e8e:	adc    al,0x13
  422e90:	push   edi
  422e91:	inc    ecx
  422e92:	inc    esp
  422e93:	rcl    BYTE PTR [edx+edi*4],1
  422e96:	add    BYTE PTR [eax-0x2b],dh
  422e99:	into   
  422e9a:	push   0x4c
  422e9c:	hlt    
  422e9d:	sub    bh,BYTE PTR [ecx-0x57250d11]
  422ea3:	or     eax,0xc44d1869
  422ea8:	jnp    0x422efe
  422eaa:	pop    es
  422eab:	lods   eax,DWORD PTR cs:[esi]
  422ead:	or     edi,DWORD PTR [edi*8+0x36875281]
  422eb4:	jns    0x422e3c
  422eb6:	push   ebp
  422eb7:	pusha  
  422eb8:	pop    ds
  422eb9:	and    eax,DWORD PTR [esi+0x29]
  422ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ebd:	repz sub eax,0xf408083d
  422ec3:	dec    ecx
  422ec4:	jg     0x422ed2
  422ec6:	or     BYTE PTR [edi],cl
  422ec8:	int3   
  422ec9:	sub    al,0x95
  422ecb:	cmc    
  422ecc:	call   0x5022:0x19e31c42
  422ed3:	xor    eax,0x18cde95f
  422ed8:	push   esp
  422ed9:	push   0x4
  422edb:	je     0x422ed6
  422edd:	(bad)  
  422ede:	add    esi,DWORD PTR [ecx-0x6]
  422ee1:	jecxz  0x422e91
  422ee3:	out    0x1c,eax
  422ee5:	inc    ecx
  422ee6:	je     0x422f30
  422ee8:	cld    
  422ee9:	sub    BYTE PTR [edx],ah
  422eeb:	push   ebp
  422eec:	les    eax,FWORD PTR [eax-0x40]
  422eef:	or     esi,DWORD PTR cs:[ebx]
  422ef2:	push   ds
  422ef3:	mov    al,ds:0x5c6428ad
  422ef8:	cmp    eax,0x1d501038
  422efd:	inc    ecx
  422efe:	icebp  
  422eff:	mov    dh,cl
  422f01:	mov    BYTE PTR ds:0xdc90209,cl
  422f07:	pop    ebp
  422f08:	lods   al,BYTE PTR ds:[esi]
  422f09:	nop
  422f0a:	hlt    
  422f0b:	ret    
  422f0c:	pop    esp
  422f0d:	cmp    ebp,edx
  422f0f:	add    eax,esp
  422f11:	push   esp
  422f12:	mov    DWORD PTR [esi+0xf],eax
  422f15:	xlat   BYTE PTR ds:[ebx]
  422f16:	or     ah,BYTE PTR [ecx+esi*1]
  422f19:	das    
  422f1a:	js     0x422f17
  422f1c:	das    
  422f1d:	mov    ds:0x8571cc0c,eax
  422f22:	test   DWORD PTR [ecx+esi*2-0x6425c501],ebx
  422f29:	adc    edx,DWORD PTR [edx+0x6d2c075]
  422f2f:	lock cld 
  422f31:	push   esp
  422f32:	std    
  422f33:	into   
  422f34:	xchg   esp,eax
  422f35:	in     al,0x83
  422f37:	cdq    
  422f38:	and    bl,dh
  422f3a:	mov    ah,0x37
  422f3c:	xchg   esp,eax
  422f3d:	leave  
  422f3e:	mov    WORD PTR [edx],?
  422f40:	sub    ch,bl
  422f42:	fcom   QWORD PTR [ebx-0x4f0667f1]
  422f48:	add    edi,DWORD PTR [ecx]
  422f4a:	and    ah,BYTE PTR [esi-0x1b086348]
  422f50:	aam    0x84
  422f52:	inc    edi
  422f53:	sub    eax,0x9d29f990
  422f58:	mov    edx,0xbeb527f8
  422f5d:	hlt    
  422f5e:	mov    ah,0x4a
  422f60:	pop    ds
  422f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f62:	mov    al,ds:0x9e06af0b
  422f67:	sub    BYTE PTR [ecx+0x3bc42ae4],dh
  422f6d:	fs out 0x37,eax
  422f70:	add    al,0x96
  422f72:	daa    
  422f73:	loopne 0x422f5d
  422f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f76:	sub    bh,BYTE PTR [eax+0x48d14169]
  422f7c:	push   es
  422f7d:	or     al,0xa1
  422f7f:	mov    ebx,0x5c1eefaf
  422f84:	loope  0x422f11
  422f86:	xor    BYTE PTR [eax+esi*8-0x5104e449],dh
  422f8d:	ja     0x422f1c
  422f8f:	fadd   st,st(6)
  422f91:	push   es
  422f92:	dec    edx
  422f93:	or     al,0xad
  422f95:	or     al,dh
  422f97:	(bad)  
  422f99:	scas   al,BYTE PTR es:[edi]
  422f9a:	loop   0x422f9c
  422f9c:	push   eax
  422f9d:	(bad)  
  422f9e:	retf   
  422f9f:	(bad)  
  422fa0:	push   0xf9a75520
  422fa5:	cmp    BYTE PTR [eax+0x4494e302],dl
  422fab:	jg     0x422f87
  422fad:	repz mov edi,0x96e0b883
  422fb3:	in     al,dx
  422fb4:	ret    0x618e
  422fb7:	pop    esp
  422fb8:	arpl   WORD PTR [ebx],sp
  422fba:	call   0x145c404c
  422fbf:	jo     0x423023
  422fc1:	nop
  422fc2:	push   ss
  422fc3:	adc    eax,0xda8d3441
  422fc8:	mov    dl,0x8
  422fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fcb:	push   ebx
  422fcc:	lods   al,BYTE PTR ds:[esi]
  422fcd:	xchg   edx,eax
  422fce:	pop    eax
  422fcf:	jmp    0x422ff1
  422fd1:	cmp    al,0xa8
  422fd3:	inc    eax
  422fd4:	mov    DWORD PTR [edi-0x1d],esp
  422fd7:	jl     0x422f63
  422fd9:	or     DWORD PTR [esi-0x49],eax
  422fdc:	rcl    BYTE PTR [edx+0x50245ce7],0xf3
  422fe3:	rcr    DWORD PTR [esi+esi*8+0x48757652],1
  422fea:	adc    al,0x2e
  422fec:	or     BYTE PTR [eax],0x4d
  422fef:	add    DWORD PTR [ebx],esp
  422ff1:	mov    dl,0x6c
  422ff3:	enter  0x4434,0x51
  422ff7:	ins    DWORD PTR es:[edi],dx
  422ff8:	adc    dl,bl
  422ffa:	cmp    dl,BYTE PTR [eax+0x1fb06f6e]
  423000:	pop    edx
  423001:	dec    ebp
  423002:	jbe    0x423066
  423004:	mov    ah,0xa8
  423006:	sub    al,BYTE PTR [edx+0x8]
  423009:	retf   0x6f55
  42300c:	pop    esp
  42300d:	pop    esp
  42300e:	mov    ebx,?
  423010:	mov    DWORD PTR [esi],edi
  423012:	pop    edx
  423013:	mov    BYTE PTR [ebx+0x2f],dh
  423016:	sub    dh,0x74
  423019:	or     dh,al
  42301b:	hlt    
  42301c:	jne    0x422fd7
  42301e:	int    0xa4
  423020:	popa   
  423021:	jno    0x422fba
  423023:	xchg   edx,eax
  423024:	or     ah,BYTE PTR [edx+0x67c8e2de]
  42302a:	cmp    bh,BYTE PTR [ecx+0x6979e3a0]
  423030:	sbb    al,0x70
  423032:	js     0x422fe9
  423034:	add    WORD PTR [ecx],si
  423037:	mov    al,fs:0xa57594f1
  42303d:	test   al,0x7
  42303f:	mov    eax,0xb82c56ef
  423044:	mov    DWORD PTR [edx+0x6d755814],esp
  42304a:	fmul   QWORD PTR [ebx-0x24]
  42304d:	cs into 
  42304f:	cmp    esp,DWORD PTR [eax]
  423051:	js     0x422fe7
  423053:	inc    edi
  423054:	stc    
  423055:	add    BYTE PTR [eax-0x7365a739],cl
  42305b:	adc    ecx,DWORD PTR ds:0x9d3fa8b7
  423061:	dec    eax
  423062:	or     al,0xbe
  423064:	ins    BYTE PTR es:[edi],dx
  423065:	push   ebx
  423066:	popf   
  423067:	int3   
  423068:	inc    ebp
  423069:	xor    al,0x84
  42306b:	add    bh,BYTE PTR ds:0xf0f2bab0
  423071:	dec    esi
  423072:	repz call 0x7110fbf1
  423078:	adc    BYTE PTR [edi+edx*8],dl
  42307b:	cs pop ss
  42307d:	push   esi
  42307e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42307f:	(bad)  
  423080:	out    0x8a,eax
  423082:	mov    esp,0xe30c5f0
  423087:	(bad)  
  423088:	cmp    eax,0x8ce0f41e
  42308d:	test   DWORD PTR [ebp+0x3e],edx
  423090:	dec    edi
  423091:	leave  
  423092:	mov    ah,0x57
  423094:	add    al,0x74
  423096:	sbb    DWORD PTR [ebp+0x79cca823],ebx
  42309c:	push   eax
  42309d:	sub    BYTE PTR [ecx],bh
  42309f:	inc    esi
  4230a0:	fsub   DWORD PTR [ecx+0x31]
  4230a3:	add    eax,DWORD PTR [edx+0x0]
  4230a6:	dec    esp
  4230a7:	xor    al,0x24
  4230a9:	call   0xf409:0x758b4c0
  4230b0:	lods   al,BYTE PTR ds:[esi]
  4230b1:	js     0x42308b
  4230b3:	mov    WORD PTR [eax+0x1886735f],es
  4230b9:	ja     0x4230d8
  4230bb:	jmp    DWORD PTR [ebx+0x65b46db4]
  4230c1:	cmp    al,0xa1
  4230c3:	cmp    eax,0xcbceb051
  4230c8:	test   eax,eax
  4230ca:	pusha  
  4230cb:	arpl   WORD PTR ds:0x2c5dc2c1,di
  4230d1:	(bad)  
  4230d2:	add    BYTE PTR [edx+ebp*8+0x7c7c1b77],0x65
  4230da:	leave  
  4230db:	scas   eax,DWORD PTR es:[edi]
  4230dc:	sub    al,0xe0
  4230de:	add    eax,0xecd4ef8b
  4230e3:	jbe    0x423078
  4230e5:	push   eax
  4230e6:	ret    
  4230e7:	pop    edi
  4230e8:	inc    ecx
  4230e9:	sahf   
  4230ea:	ins    BYTE PTR es:[edi],dx
  4230eb:	or     ebx,DWORD PTR [ecx+0x3f]
  4230ee:	je     0x4230d1
  4230f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f1:	pextrw edx,mm0,0x2d
  4230f5:	or     DWORD PTR [eax+ebx*4+0xdfe4460],esi
  4230fc:	inc    ebx
  4230fd:	rcl    al,1
  4230ff:	stos   BYTE PTR es:[edi],al
  423100:	inc    eax
  423101:	jns    0x4230b4
  423103:	outs   dx,DWORD PTR ds:[esi]
  423104:	pop    esi
  423105:	sahf   
  423106:	jmp    0x15a6c417
  42310b:	cmp    DWORD PTR ds:0xc8e0d06c,0x1d
  423112:	mov    BYTE PTR [esi-0x8807a5f],al
  423118:	outs   dx,BYTE PTR ds:[esi]
  423119:	fst    QWORD PTR [ecx+0x4c9129ac]
  42311f:	dec    ecx
  423120:	inc    esi
  423121:	cmp    bl,0xde
  423124:	rol    BYTE PTR [ebp-0x563631f2],1
  42312a:	test   DWORD PTR [ebp+0x65],edx
  42312d:	js     0x423112
  42312f:	push   ecx
  423130:	or     bh,dl
  423132:	pop    es
  423133:	sbb    al,0x61
  423135:	sub    bl,BYTE PTR [ebx+esi*4-0x43971ca4]
  42313c:	mov    dh,BYTE PTR [edi+0x7f]
  42313f:	shr    BYTE PTR [eax+esi*2+0x63105f1a],0xec
  423147:	scas   al,BYTE PTR es:[edi]
  423148:	in     al,0x71
  42314a:	inc    esi
  42314b:	stos   DWORD PTR es:[edi],eax
  42314c:	xor    eax,0x923ea0e2
  423151:	mov    eax,cs
  423153:	xlat   BYTE PTR ds:[ebx]
  423154:	(bad)  
  423156:	inc    ecx
  423157:	in     al,dx
  423158:	sbb    ebx,edx
  42315a:	mov    al,0x51
  42315c:	pusha  
  42315d:	add    DWORD PTR [eax],ebp
  42315f:	out    dx,eax
  423160:	cmc    
  423161:	mov    ebx,0xdabbd416
  423166:	mov    WORD PTR [eax],cs
  423168:	mov    BYTE PTR [edx+edx*4+0x1a25f8eb],cl
  42316f:	lods   al,BYTE PTR ds:[esi]
  423170:	popf   
  423171:	push   cs
  423172:	cmp    al,0x8b
  423174:	jp     0x423192
  423176:	cmp    eax,0x792fe2eb
  42317b:	mov    esi,0x5c4e4ea
  423180:	jecxz  0x42316f
  423182:	jle    0x423118
  423184:	dec    edx
  423185:	jae    0x423193
  423187:	call   0xe2091fd9
  42318c:	jne    0x42310e
  42318e:	jno    0x4231d0
  423190:	or     al,0xef
  423192:	inc    ecx
  423193:	and    DWORD PTR [esi],0x4d617d92
  423199:	xor    BYTE PTR [ebx-0x43],dl
  42319c:	test   BYTE PTR [edx],al
  42319e:	mov    bl,0x8d
  4231a0:	or     esi,DWORD PTR [ebx+0x7c3f06d8]
  4231a6:	(bad)  
  4231a7:	dec    ebx
  4231a8:	aas    
  4231a9:	mov    bl,BYTE PTR [edx+0x36d8a3fc]
  4231af:	push   edx
  4231b0:	jge    0x4231f4
  4231b2:	push   ebx
  4231b3:	adc    ah,BYTE PTR [eax]
  4231b5:	outs   dx,DWORD PTR ds:[esi]
  4231b6:	mov    ebp,ds
  4231b8:	adc    al,0x74
  4231ba:	adc    bh,BYTE PTR [esi-0x13bbc1]
  4231c0:	inc    ebp
  4231c1:	scas   eax,DWORD PTR es:[edi]
  4231c2:	jg     0x4231e3
  4231c4:	retf   
  4231c5:	into   
  4231c6:	push   0x991156ad
  4231cb:	pop    edi
  4231cc:	jae    0x42314f
  4231ce:	fst    QWORD PTR [eax]
  4231d0:	aad    0x3e
  4231d2:	in     al,0x6b
  4231d4:	rol    DWORD PTR [edx+0x68],0xd3
  4231d8:	xor    al,0x7e
  4231da:	aad    0xed
  4231dc:	fwait
  4231dd:	and    eax,0x5878211c
  4231e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231e3:	sar    DWORD PTR [eax],cl
  4231e5:	sar    DWORD PTR [edi],cl
  4231e7:	and    dl,BYTE PTR [eax-0x25dc83c3]
  4231ed:	add    dl,BYTE PTR [edi-0x39]
  4231f0:	cmp    BYTE PTR [ebp+0x69],0xa0
  4231f4:	and    dl,al
  4231f6:	icebp  
  4231f7:	mov    dh,0x34
  4231f9:	fdivr  DWORD PTR [eax+eax*1]
  4231fc:	dec    eax
  4231fd:	add    dl,BYTE PTR [esi+0x935687]
  423203:	stos   DWORD PTR es:[edi],eax
  423204:	inc    ebp
  423205:	ins    BYTE PTR es:[edi],dx
  423206:	std    
  423207:	out    dx,al
  423208:	fiadd  WORD PTR [ecx+0x24fc04fd]
  42320e:	nop
  42320f:	loop   0x4231d5
  423211:	mov    cl,0xe3
  423213:	xchg   DWORD PTR [eax],ebx
  423215:	mov    eax,ebp
  423217:	mov    ah,0xd4
  423219:	mul    BYTE PTR [eax]
  42321b:	outs   dx,DWORD PTR ds:[esi]
  42321c:	icebp  
  42321d:	xchg   edi,eax
  42321e:	test   eax,0x14a85c3b
  423223:	jecxz  0x4231d6
  423225:	jns    0x423274
  423227:	test   BYTE PTR [edx-0x80],0x54
  42322b:	jne    0x4231c4
  42322d:	push   edx
  42322e:	and    DWORD PTR [edi-0x3],0xf
  423232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423233:	in     al,0xfc
  423235:	jns    0x4231c2
  423237:	push   ebx
  423238:	in     al,dx
  423239:	or     al,BYTE PTR [ebx]
  42323b:	enter  0x8a8d,0x45
  42323f:	lods   eax,DWORD PTR ds:[esi]
  423240:	cmp    BYTE PTR [ebp+esi*1+0x64],0xec
  423245:	mov    ss,WORD PTR [esi+0x79a9b45d]
  42324b:	sub    eax,0xe22794ef
  423250:	(bad)  
  423251:	mov    fs,WORD PTR [edx+eiz*8-0x7947be9a]
  423258:	lds    esp,FWORD PTR [ecx+0x2b0daed5]
  42325e:	sub    eax,0x213235dc
  423263:	xchg   esi,eax
  423264:	add    eax,0xd559db
  423269:	mov    DWORD PTR [ebp-0x23ceaef1],ebx
  42326f:	cwde   
  423270:	sbb    DWORD PTR [eax+0x3cd0acdb],ebp
  423276:	and    al,0x38
  423278:	push   ss
  423279:	or     cl,ah
  42327b:	je     0x4232c3
  42327d:	(bad)
  423280:	and    al,0xe8
  423282:	pop    edi
  423283:	lock mov al,BYTE PTR [ebp+0x614c5978]
  42328a:	xchg   ebx,eax
  42328b:	data16 adc al,0x7e
  42328e:	lahf   
  42328f:	or     dh,bh
  423291:	pop    esi
  423292:	cmp    BYTE PTR [ebx-0x687dc7ab],0x9c
  423299:	pop    ebp
  42329a:	mov    al,0x7b
  42329c:	or     al,0x60
  42329e:	loopne 0x42322d
  4232a0:	dec    edi
  4232a1:	push   ecx
  4232a2:	jb     0x4232a4
  4232a4:	int    0x55
  4232a6:	mov    cl,0x4
  4232a8:	pop    edx
  4232a9:	test   eax,0x41787988
  4232ae:	inc    esp
  4232af:	repz sub BYTE PTR [ebx],al
  4232b2:	cmp    dl,dl
  4232b4:	inc    edi
  4232b5:	sbb    al,0xfa
  4232b7:	cmp    DWORD PTR [ecx+0x4c],edi
  4232ba:	sbb    ebx,DWORD PTR [edi]
  4232bc:	xchg   esp,eax
  4232bd:	pushf  
  4232be:	fidiv  WORD PTR [edi]
  4232c0:	or     esp,DWORD PTR [eax+esi*2-0x3a09e45]
  4232c7:	fst    DWORD PTR [ebp-0x27e7a633]
  4232cd:	mov    ds:0xd9421870,al
  4232d2:	pop    ss
  4232d3:	and    edi,DWORD PTR [edx+edi*2]
  4232d6:	sbb    DWORD PTR [esi-0x35],ecx
  4232d9:	jae    0x4232f6
  4232db:	xchg   edx,ecx
  4232dd:	pusha  
  4232de:	lds    ebx,FWORD PTR [ebx+0x371c4d3e]
  4232e4:	xlat   BYTE PTR ds:[ebx]
  4232e5:	popa   
  4232e6:	test   BYTE PTR [edi],al
  4232e8:	pop    edi
  4232e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ea:	jbe    0x4232c0
  4232ec:	(bad)  
  4232ed:	xchg   ebp,eax
  4232ee:	inc    edi
  4232ef:	sub    al,0x22
  4232f1:	sbb    BYTE PTR [esi-0x4b],ch
  4232f4:	cmp    DWORD PTR [esi+edx*1-0x2ecaaf42],edi
  4232fb:	mov    dl,BYTE PTR [ebx+0x54]
  4232fe:	inc    ebp
  4232ff:	mov    WORD PTR [esi],es
  423301:	je     0x4232d2
  423303:	jl     0x42329c
  423305:	pop    esp
  423306:	jmp    0x70f1:0x9879a5c6
  42330d:	ret    0x9f8a
  423310:	mov    cl,0x60
  423312:	bound  edi,QWORD PTR [ebp+ebx*1+0x670b4a19]
  423319:	cmp    al,0xca
  42331b:	mov    eax,0xd500a364
  423320:	inc    BYTE PTR [eax-0x77193ced]
  423326:	mov    ah,0xe4
  423328:	and    eax,0xa485fd86
  42332d:	and    al,0xac
  42332f:	push   ebp
  423330:	sti    
  423331:	gs mov dl,0x49
  423334:	sub    bh,BYTE PTR [edi]
  423336:	xor    al,0xd0
  423338:	icebp  
  423339:	aad    0x9a
  42333b:	add    dh,ch
  42333d:	xor    DWORD PTR [ebx],edx
  42333f:	js     0x4233b9
  423341:	sub    al,0xba
  423343:	mov    ds:0x6cfa1863,eax
  423348:	xchg   DWORD PTR [ebp+eiz*4+0x14267bcf],ebx
  42334f:	lock and DWORD PTR [eax+eax*8+0xf3cec88],edi
  423357:	mov    bl,0x8d
  423359:	jmp    0x4232e7
  42335b:	in     al,0xd0
  42335d:	sahf   
  42335e:	xchg   ebx,eax
  42335f:	xchg   ebx,eax
  423360:	xchg   edi,eax
  423361:	retf   
  423362:	sti    
  423363:	fmul   DWORD PTR [eax]
  423365:	das    
  423366:	push   ebx
  423367:	sbb    DWORD PTR [ebp+0x5f2c3606],0xffffffb0
  42336e:	nop
  42336f:	test   eax,0x2af178cb
  423374:	lea    edi,[ebp-0x2c]
  423377:	icebp  
  423378:	pop    ecx
  423379:	inc    esi
  42337a:	inc    edx
  42337b:	or     DWORD PTR [esi+0xcf85cb4],edi
  423381:	sub    bh,dh
  423383:	shl    DWORD PTR [ecx+0x1c9c5d76],0x63
  42338a:	lock mov esp,0x6846d207
  423390:	out    dx,eax
  423391:	inc    eax
  423392:	sub    edx,edi
  423394:	xor    esi,DWORD PTR [ecx]
  423396:	push   0xffffff9d
  423398:	xchg   DWORD PTR [esi],ebx
  42339a:	call   0xba7aa791
  42339f:	iret   
  4233a0:	xchg   BYTE PTR [edi+0x32140cc1],cl
  4233a6:	out    0xc8,al
  4233a8:	pop    cx
  4233aa:	inc    eax
  4233ab:	inc    edi
  4233ac:	xor    BYTE PTR [eax+0x1934b633],dh
  4233b2:	in     eax,dx
  4233b3:	inc    esi
  4233b4:	aas    
  4233b5:	push   esp
  4233b6:	cld    
  4233b7:	xchg   esp,eax
  4233b8:	xchg   ebx,eax
  4233b9:	mov    BYTE PTR [edx+0x3],al
  4233bc:	icebp  
  4233bd:	jecxz  0x4233bb
  4233bf:	jnp    0x423428
  4233c1:	push   ecx
  4233c2:	fcos   
  4233c4:	xchg   edi,eax
  4233c5:	fsubr  DWORD PTR [eax+eiz*1-0x46430c80]
  4233cc:	sahf   
  4233cd:	lahf   
  4233ce:	cmp    al,0x42
  4233d0:	inc    esp
  4233d1:	(bad)  
  4233d2:	(bad)  
  4233d3:	fidiv  DWORD PTR [ecx-0x7c798d6]
  4233d9:	push   0xc9a52ec9
  4233de:	push   es
  4233df:	cdq    
  4233e0:	adc    ebp,DWORD PTR [ebx-0x74]
  4233e3:	pop    eax
  4233e4:	xor    DWORD PTR [ebp-0x3d23b562],edx
  4233ea:	push   ds
  4233eb:	xor    al,0x53
  4233ed:	jno    0x423378
  4233ef:	das    
  4233f0:	fild   DWORD PTR [ebx-0x6]
  4233f3:	push   edi
  4233f4:	pop    eax
  4233f5:	mov    edi,0x486ba9cc
  4233fa:	in     eax,0xd1
  4233fc:	cmp    BYTE PTR [esi+ebp*4-0x7b],0x7e
  423401:	lods   al,BYTE PTR ds:[esi]
  423402:	jecxz  0x4233a7
  423404:	in     eax,dx
  423405:	data16 mov al,ds:0xb963eae3
  42340b:	es dec edi
  42340d:	pusha  
  42340e:	pop    edi
  42340f:	dec    eax
  423410:	(bad)  
  423411:	jle    0x42347e
  423413:	or     esi,ecx
  423415:	sub    esp,edx
  423417:	dec    edx
  423418:	ins    BYTE PTR es:[edi],dx
  423419:	jns    0x4233e1
  42341b:	push   eax
  42341c:	pop    edi
  42341d:	push   0x3d
  42341f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423420:	cmp    BYTE PTR [eax-0x5f000608],dl
  423426:	aas    
  423427:	sti    
  423428:	mov    ds:0x973eb47a,eax
  42342d:	shl    DWORD PTR [eax-0x29],1
  423430:	bound  ecx,QWORD PTR [edx+0xb]
  423433:	fcom   DWORD PTR [ecx+0x40]
  423436:	add    al,0xbd
  423438:	pop    es
  423439:	ins    BYTE PTR es:[edi],dx
  42343a:	dec    ebp
  42343b:	jle    0x4233bd
  42343d:	and    DWORD PTR [ecx],ecx
  42343f:	mov    dh,0x7c
  423441:	mov    ds:0xa47c949d,eax
  423446:	lods   eax,DWORD PTR ds:[esi]
  423447:	mov    dh,bl
  423449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42344a:	add    al,0x18
  42344c:	sub    al,0xfd
  42344e:	enter  0x5e9a,0xe9
  423452:	dec    esp
  423453:	xlat   BYTE PTR ds:[ebx]
  423454:	push   esp
  423455:	in     al,dx
  423456:	shr    ah,0x16
  423459:	adc    BYTE PTR [ebx-0xa],0x98
  42345d:	test   edi,ecx
  42345f:	repnz adc BYTE PTR [esi+0x43d05904],al
  423466:	cdq    
  423467:	pop    ecx
  423468:	(bad)  
  423469:	mov    eax,0xe4da2bb6
  42346e:	sub    eax,0xdcebc6b6
  423473:	js     0x4234aa
  423475:	rcr    edi,1
  423477:	js     0x42341c
  423479:	out    0xda,eax
  42347b:	add    BYTE PTR [esi+0xff5307b],cl
  423481:	sbb    edx,ecx
  423483:	mov    esp,0x6d31d424
  423488:	fwait
  423489:	test   DWORD PTR [ebx*4+0x6a55cc98],esi
  423490:	les    ebp,FWORD PTR [ebx+0x164bd888]
  423496:	lock jmp 0x46fe:0xea51c5eb
  42349e:	inc    ebp
  42349f:	adc    al,0xe0
  4234a1:	div    dh
  4234a3:	cmp    ecx,esi
  4234a5:	dec    ebx
  4234a6:	mov    edi,0x98e63872
  4234ab:	loop   0x423478
  4234ad:	xlat   BYTE PTR ds:[ebx]
  4234ae:	(bad)  
  4234af:	mov    BYTE PTR [edx+0x5c],0xf5
  4234b3:	adc    DWORD PTR [edx],ebp
  4234b5:	(bad)  
  4234b6:	fcmovnu st,st(2)
  4234b8:	pop    es
  4234b9:	add    DWORD PTR [eax*1-0x5bf071e3],0x281feecb
  4234c4:	mov    bh,0x94
  4234c6:	repnz push esp
  4234c8:	ror    BYTE PTR [ebx-0x58b30c25],cl
  4234ce:	pop    es
  4234cf:	in     al,0xa0
  4234d1:	rol    BYTE PTR [ebp+0x627091ed],1
  4234d7:	mov    esp,0xc1dc7e2d
  4234dc:	push   ecx
  4234dd:	popf   
  4234de:	sbb    BYTE PTR [edi+0x2cf371b1],dh
  4234e4:	test   DWORD PTR [edx+esi*2],esi
  4234e7:	cmp    al,0x1e
  4234e9:	sbb    ch,BYTE PTR [edi+0x0]
  4234ec:	in     eax,dx
  4234ed:	xlat   BYTE PTR ds:[ebx]
  4234ee:	(bad)  
  4234f0:	pusha  
  4234f1:	xlat   BYTE PTR ds:[ebx]
  4234f2:	cli    
  4234f3:	cmp    esp,0xa4cda030
  4234f9:	test   BYTE PTR ds:0x72def6fb,ch
  4234ff:	in     al,0x87
  423501:	call   0x96ec:0x80943da8
  423508:	test   eax,0xc950e74d
  42350d:	jbe    0x4234f1
  42350f:	fdiv   st,st(5)
  423511:	dec    edx
  423512:	inc    ebx
  423513:	xor    al,0x74
  423515:	lea    edx,[esi-0x3a22e2b4]
  42351b:	neg    DWORD PTR fs:[eax+0x117a0686]
  423522:	es sub DWORD PTR es:[esp+edi*4],edi
  423527:	js     0x423511
  423529:	ret    
  42352a:	and    BYTE PTR [edx-0x6f],bh
  42352d:	xor    eax,0xba3ce0be
  423532:	and    edx,DWORD PTR [ebx-0x38688e03]
  423538:	mov    BYTE PTR [ecx],dl
  42353a:	ror    BYTE PTR [ecx+0x46],cl
  42353d:	push   ebp
  42353e:	imul   ecx,edx,0xdd32ac43
  423544:	or     eax,0xe00aceca
  423549:	sbb    eax,0x3879b1d0
  42354e:	sbb    DWORD PTR [edx],0xf48765eb
  423554:	rcr    BYTE PTR [ecx+edi*4-0x24],0xc1
  423559:	pop    esp
  42355a:	xor    edx,esp
  42355c:	pushf  
  42355d:	outs   dx,DWORD PTR ds:[esi]
  42355e:	in     al,dx
  42355f:	stc    
  423560:	jno    0x4234e6
  423562:	jecxz  0x4235b4
  423564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423565:	ror    BYTE PTR [edi],0xb7
  423568:	mov    eax,ds:0x55e0724c
  42356d:	cmp    ah,ah
  42356f:	pusha  
  423570:	dec    edi
  423571:	pop    esi
  423572:	mov    eax,gs
  423574:	inc    ebx
  423575:	xchg   BYTE PTR [edx+0x8],bl
  423578:	push   edi
  423579:	sub    bl,0x98
  42357c:	jge    0x4235bc
  42357e:	xchg   ebx,eax
  42357f:	dec    esp
  423580:	sub    al,0x18
  423582:	sbb    bh,BYTE PTR [ecx-0x79be5142]
  423588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423589:	aam    0x23
  42358b:	adc    al,0x17
  42358d:	push   DWORD PTR [eax]
  42358f:	repnz sbb bl,bh
  423592:	clc    
  423593:	cmp    al,0x6c
  423595:	xor    eax,0xfcf65225
  42359a:	dec    ebp
  42359b:	sbb    al,0x16
  42359d:	loopne 0x42352a
  42359f:	push   es
  4235a0:	loope  0x4235b9
  4235a2:	repz inc BYTE PTR [eax-0x18]
  4235a6:	ror    BYTE PTR [eax*8+0x72c627d8],cl
  4235ad:	call   0x9355d4a7
  4235b2:	sub    al,0x97
  4235b4:	nop
  4235b5:	dec    ebx
  4235b6:	or     al,0xeb
  4235b8:	retf   0x8c0b
  4235bb:	in     al,0xba
  4235bd:	xor    eax,0x3d3430e3
  4235c2:	and    ebp,DWORD PTR [eax+0x38]
  4235c5:	je     0x42356c
  4235c7:	cmp    dl,BYTE PTR [ecx+ecx*1+0x2b]
  4235cb:	mov    ecx,0x716eb866
  4235d0:	(bad)  
  4235d1:	js     0x4235a4
  4235d3:	cmp    ah,BYTE PTR [eax]
  4235d5:	test   al,0xf7
  4235d7:	xchg   esi,eax
  4235d8:	lock jmp 0xd362:0x7777f320
  4235e0:	ja     0x423566
  4235e2:	xor    DWORD PTR [edi+eiz*4+0x61],eax
  4235e6:	cdq    
  4235e7:	inc    edx
  4235e8:	add    eax,0x6868eeac
  4235ed:	imul   ecx,esi,0x1
  4235f0:	shr    DWORD PTR [edx+esi*8],1
  4235f3:	mov    ah,0xfa
  4235f5:	mov    WORD PTR [edi+0x261d4b13],gs
  4235fb:	cs hlt 
  4235fd:	xor    BYTE PTR [eax+ecx*8],0x6
  423601:	mov    ebx,0xb75a9989
  423606:	inc    ebx
  423607:	pop    eax
  423608:	and    BYTE PTR [ebp+edx*1+0xc103614],dl
  42360f:	ret    
  423610:	jl     0x4235c8
  423612:	mov    bl,0x53
  423614:	adc    bl,BYTE PTR [edx-0x5f349e64]
  42361a:	retf   0xb390
  42361d:	in     al,0xe9
  42361f:	clc    
  423620:	sti    
  423621:	sbb    eax,esp
  423623:	inc    ecx
  423624:	jnp    0x423657
  423626:	jl     0x42363f
  423628:	mov    ah,bl
  42362a:	and    al,0x6c
  42362c:	push   ebx
  42362d:	mov    ch,0x52
  42362f:	rcl    edi,1
  423631:	add    al,0xa8
  423633:	and    dl,BYTE PTR [eax-0x73de2601]
  423639:	and    edi,edx
  42363b:	mov    edi,0xd71db4c8
  423640:	fdivr  st(7),st
  423642:	adc    edx,DWORD PTR [ecx+0x55d8a5b7]
  423648:	lock xlat BYTE PTR ds:[ebx]
  42364a:	data16 jo 0x4235f0
  42364d:	dec    eax
  42364e:	jecxz  0x42364c
  423650:	and    DWORD PTR [ebp+0x48],edi
  423653:	mov    ds:0x8bb38f6,al
  423658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423659:	xor    BYTE PTR [esi+0x4f],al
  42365c:	into   
  42365d:	aad    0x5a
  42365f:	xlat   BYTE PTR ds:[ebx]
  423660:	enterw 0xf0cb,0x9d
  423665:	enter  0xbfde,0xa0
  423669:	repz in al,dx
  42366b:	js     0x4236de
  42366d:	ds jmp 0xd645f133
  423673:	adc    BYTE PTR [edx+0x19],ch
  423676:	mov    bh,0x12
  423678:	xchg   BYTE PTR [eax+esi*2+0x3d],dl
  42367c:	mov    eax,0x5f435a15
  423681:	or     eax,0xdcc4bcaa
  423686:	push   ebx
  423687:	inc    ebx
  423688:	mov    ?,ebx
  42368a:	mov    ebp,0x40366d
  42368f:	sub    eax,0x6da4bd96
  423694:	(bad)  
  423695:	mov    eax,0x72af245f
  42369a:	push   ecx
  42369b:	mov    bl,0xa6
  42369d:	xor    esi,ebp
  42369f:	in     eax,0x48
  4236a1:	pextrw ecx,(bad),0xc5
  4236a3:	cvtdq2ps xmm6,XMMWORD PTR [ebx-0x70]
  4236a7:	xlat   BYTE PTR ds:[ebx]
  4236a8:	or     al,dh
  4236aa:	test   dl,al
  4236ac:	or     ch,0x3f
  4236af:	jmp    0x2f1a:0x84145217
  4236b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236b7:	inc    edx
  4236b8:	(bad)  
  4236ba:	sbb    BYTE PTR [eax],bh
  4236bc:	sahf   
  4236bd:	and    bl,BYTE PTR [ebp-0x66]
  4236c0:	int3   
  4236c1:	into   
  4236c2:	scas   al,BYTE PTR es:[edi]
  4236c3:	xor    bl,BYTE PTR [edi+ebx*4-0x1c]
  4236c7:	xchg   BYTE PTR [ecx-0x5],ah
  4236ca:	(bad)  
  4236cb:	jmp    0x4236e4
  4236cd:	add    al,0x8d
  4236cf:	or     DWORD PTR [edi],esi
  4236d1:	mov    al,ds:0x26d793a8
  4236d6:	sub    dl,cl
  4236d8:	out    dx,al
  4236d9:	int    0xca
  4236db:	sub    eax,DWORD PTR [ebx+0x574c2e2c]
  4236e1:	pop    eax
  4236e2:	pop    ebp
  4236e3:	sub    al,0xb
  4236e5:	(bad)  
  4236e6:	and    dh,BYTE PTR es:[eax+0x75]
  4236ea:	iret   
  4236eb:	mov    ?,WORD PTR [ebp-0xc2a6be7]
  4236f1:	xchg   esp,eax
  4236f2:	in     al,0x74
  4236f4:	test   al,0x39
  4236f6:	leave  
  4236f7:	test   al,0xd1
  4236f9:	je     0x423737
  4236fb:	cmp    eax,0x5c3289c3
  423700:	js     0x423774
  423702:	xor    DWORD PTR [eax],eax
  423704:	add    BYTE PTR [eax],al
  423706:	add    BYTE PTR [eax],al
  423708:	jbe    0x423726
  42370a:	mov    ebx,0x95155
  42370f:	add    BYTE PTR [eax],al
  423711:	add    BYTE PTR [eax],al
  423713:	add    BYTE PTR [ecx+0x9],dl
  423716:	add    BYTE PTR [eax],al
  423718:	sub    BYTE PTR [eax],al
  42371a:	es jl  0x42371d
  42371d:	add    dh,BYTE PTR [esi]
  42371f:	or     BYTE PTR [eax],al
  423721:	add    ah,al
  423723:	inc    ebp
  423724:	add    BYTE PTR [edx-0x1c7c3f91],ah
  42372a:	mov    eax,0x3d244161
  42372f:	add    eax,0xe75deb44
  423734:	or     al,0x59
  423736:	dec    eax
  423737:	mov    edx,0x2debea0a
  42373c:	test   BYTE PTR [ebx],al
  42373e:	jg     0x4237ac
  423740:	mov    esp,0xeca344e5
  423745:	dec    ebx
  423746:	std    
  423747:	pop    edi
  423748:	nop
  423749:	mov    cl,0x43
  42374b:	shl    BYTE PTR [esp+ecx*8],cl
  42374e:	push   ecx
  42374f:	test   ebx,ecx
  423751:	cmp    BYTE PTR [ecx+0x61],dh
  423754:	xchg   esi,eax
  423755:	dec    esi
  423756:	cli    
  423757:	aam    0xf6
  423759:	stos   BYTE PTR es:[edi],al
  42375a:	pop    esp
  42375b:	and    eax,0x6adb7a6b
  423760:	stos   DWORD PTR es:[edi],eax
  423761:	outs   dx,BYTE PTR ds:[esi]
  423762:	ret    
  423763:	and    dl,0xf1
  423766:	mov    bl,0x20
  423768:	cmc    
  423769:	mov    ebp,0x1a47fd4
  42376e:	add    al,0x6c
  423770:	or     eax,0xd59bbe7a
  423775:	dec    esp
  423776:	in     al,0x63
  423778:	ds mov edx,0x456b722
  42377e:	jo     0x4237d0
  423780:	dec    edx
  423781:	fnstcw WORD PTR ds:0x95110282
  423787:	xchg   esp,eax
  423788:	adc    eax,0xe3e5b3c2
  42378d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42378e:	frstor [esi]
  423790:	mov    eax,0x74746c7b
  423795:	je     0x4237a1
  423797:	dec    edi
  423798:	xchg   esp,ebx
  42379a:	stos   BYTE PTR es:[edi],al
  42379b:	xor    ah,0x6
  42379e:	shr    al,1
  4237a0:	mov    cl,0x13
  4237a2:	test   BYTE PTR [ebx+0x5667fc6d],cl
  4237a8:	loop   0x4237d2
  4237aa:	addr16 test al,0x6d
  4237ad:	pop    ecx
  4237ae:	cld    
  4237af:	loopne 0x423817
  4237b1:	push   ebx
  4237b2:	jno    0x42380e
  4237b4:	int3   
  4237b5:	jmp    0x43d52d11
  4237ba:	loopne 0x423811
  4237bc:	outs   dx,BYTE PTR ds:[esi]
  4237bd:	lock mov ah,0xf1
  4237c0:	sar    dh,1
  4237c2:	into   
  4237c3:	lods   al,BYTE PTR ds:[esi]
  4237c4:	iret   
  4237c5:	fist   WORD PTR [ebx+edi*4]
  4237c8:	push   edi
  4237c9:	aaa    
  4237ca:	sub    eax,0xa8d50de3
  4237cf:	mov    esp,0x89be7b43
  4237d4:	cld    
  4237d5:	lahf   
  4237d6:	lods   eax,DWORD PTR ds:[esi]
  4237d7:	ret    
  4237d8:	loopne 0x4237ef
  4237da:	jmp    0x42379f
  4237dc:	pusha  
  4237dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237de:	xchg   esp,eax
  4237df:	aad    0x97
  4237e1:	add    al,0x6f
  4237e3:	sub    al,0xd3
  4237e5:	add    BYTE PTR [ecx],ch
  4237e7:	dec    esp
  4237e8:	fwait
  4237e9:	addr16 sub ah,bl
  4237ec:	or     eax,0x4e8e7853
  4237f1:	arpl   WORD PTR [eax],ax
  4237f3:	rol    BYTE PTR [eax-0xa],1
  4237f6:	adc    BYTE PTR [edi-0x312789f4],bh
  4237fc:	hlt    
  4237fd:	lock sbb bh,BYTE PTR [eax]
  423800:	mov    bh,0x78
  423802:	pop    ss
  423803:	imul   ebx,DWORD PTR [edx-0x41dc0ce8],0xffffffee
  42380a:	pop    ds
  42380b:	scas   al,BYTE PTR es:[edi]
  42380c:	inc    ebp
  42380d:	pop    edi
  42380e:	cmp    al,0xbe
  423810:	sub    eax,0xa7a18b6a
  423815:	aas    
  423816:	mov    ecx,0x9d0ee460
  42381b:	dec    ebp
  42381c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42381d:	loopne 0x4237c6
  42381f:	loope  0x423829
  423821:	sbb    esp,esi
  423823:	mov    ecx,DWORD PTR [esi+0x5704bf8b]
  423829:	sub    al,0x37
  42382b:	xor    bl,BYTE PTR [ebp+ebx*1+0x4a1b324a]
  423832:	push   eax
  423833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423834:	aad    0x84
  423836:	cmp    edi,0xffffffca
  423839:	pop    eax
  42383a:	mov    dh,BYTE PTR [ecx+ebp*4-0xb]
  42383e:	shl    esi,0x7
  423841:	das    
  423842:	sahf   
  423843:	in     eax,0x1c
  423845:	aam    0x46
  423847:	push   edx
  423848:	(bad)  [ebx]
  42384a:	mov    ah,0x19
  42384c:	mov    DWORD PTR [eax-0xd],eax
  42384f:	iret   
  423850:	jno    0x4238aa
  423852:	adc    DWORD PTR ss:[edi],0x65c56491
  423859:	aas    
  42385a:	jle    0x42387b
  42385c:	paddw  mm4,mm2
  42385f:	mov    BYTE PTR [edx-0x2cd52a63],dl
  423865:	(bad)  
  423866:	iret   
  423867:	jecxz  0x423815
  423869:	jmp    0xb7aa5907
  42386e:	es out dx,al
  423870:	mov    edx,0xd6e59254
  423875:	jne    0x423840
  423877:	jmp    0x4238b0
  423879:	mov    eax,0xb8d65e78
  42387e:	adc    eax,0x60b14880
  423883:	pushf  
  423884:	mov    WORD PTR [eax],?
  423886:	or     ebx,DWORD PTR [ebx-0x4a8d1ba4]
  42388c:	shl    BYTE PTR [eax],0xcb
  42388f:	leave  
  423890:	(bad)
  423895:	in     al,0xf6
  423897:	imul   ebx,DWORD PTR [edx+eax*1-0x55eb20f0],0xffffff8c
  42389f:	mov    ds:0x9db7a431,eax
  4238a4:	pop    ecx
  4238a5:	outs   dx,DWORD PTR ds:[esi]
  4238a6:	xlat   BYTE PTR ds:[ebx]
  4238a7:	mov    al,0x50
  4238a9:	and    edx,DWORD PTR [edi]
  4238ab:	push   eax
  4238ac:	mov    ebp,0xd40850cc
  4238b1:	fnstsw WORD PTR [ebx+0x7c21fbf3]
  4238b7:	dec    ecx
  4238b8:	jnp    0x4238b2
  4238ba:	mov    dh,0xb5
  4238bc:	mov    cl,ch
  4238be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238bf:	xchg   esp,eax
  4238c0:	mov    cs,esi
  4238c2:	mov    al,ds:0x24ae4911
  4238c7:	pop    ss
  4238c8:	sbb    BYTE PTR [ecx],bh
  4238ca:	push   0x96e9adc4
  4238cf:	jmp    0x79e6a162
  4238d4:	call   0xfea633fb
  4238d9:	cmp    eax,0xc1e7813
  4238de:	outs   dx,DWORD PTR ds:[esi]
  4238df:	out    0x82,eax
  4238e1:	clc    
  4238e2:	scas   al,BYTE PTR es:[edi]
  4238e3:	and    ah,BYTE PTR [ebx+0x671e3096]
  4238e9:	mov    ch,0xd1
  4238eb:	js     0x42389c
  4238ed:	and    ch,dl
  4238ef:	fcom   st(7)
  4238f1:	push   ds
  4238f2:	hlt    
  4238f3:	xor    ch,ah
  4238f5:	lss    eax,FWORD PTR [eax-0x4]
  4238f9:	ja     0x42396c
  4238fb:	mov    eax,ds:0x413101b1
  423900:	and    BYTE PTR ss:[ebx],dl
  423903:	inc    ebp
  423904:	retf   0x4076
  423907:	test   BYTE PTR [edi+0x60de4455],dl
  42390d:	jge    0x42393c
  42390f:	ins    BYTE PTR es:[edi],dx
  423910:	adc    edi,DWORD PTR [esi]
  423912:	popf   
  423913:	in     al,dx
  423914:	and    DWORD PTR gs:[ebp-0x597af7c],0xfffffffc
  42391c:	adc    ch,al
  42391e:	mov    edx,0x40dfbe87
  423923:	mov    ah,0xa2
  423925:	xor    al,0xd6
  423927:	mov    bl,0x53
  423929:	xor    sp,WORD PTR [ebx-0x20]
  42392d:	sub    DWORD PTR [eax+0x3d],ebx
  423930:	ror    DWORD PTR [edi+0x3],1
  423933:	xchg   ebx,eax
  423934:	sub    dh,BYTE PTR [eax*2+0x951a47c]
  42393b:	mov    ds:0xfd49fb6a,al
  423940:	and    al,0x84
  423942:	add    bl,BYTE PTR [edi+0x62]
  423945:	pop    es
  423946:	xchg   ebp,eax
  423947:	jno    0x42396f
  423949:	dec    eax
  42394a:	pmulhuw mm0,QWORD PTR [edx+ebp*1+0x25]
  42394f:	add    BYTE PTR [esi+0x39],bh
  423952:	ins    BYTE PTR es:[edi],dx
  423953:	push   edi
  423954:	jb     0x4239b5
  423956:	add    DWORD PTR [esi],eax
  423958:	cmp    cl,BYTE PTR [ecx+0x62e99045]
  42395e:	add    eax,0x2802c5a4
  423963:	div    BYTE PTR [ebp+ecx*2+0x77fc487b]
  42396a:	repz aaa 
  42396c:	out    dx,al
  42396d:	pop    esp
  42396e:	les    esi,FWORD PTR [ecx+0x45fee759]
  423974:	in     eax,0x85
  423976:	sub    BYTE PTR [ebx-0x48],0x25
  42397a:	loop   0x42395e
  42397c:	enter  0x74d2,0xa4
  423980:	xor    ah,BYTE PTR [edx]
  423982:	stos   BYTE PTR es:[edi],al
  423983:	mov    al,ds:0xc5ab0c7a
  423988:	enter  0xb785,0xc3
  42398c:	pusha  
  42398d:	pop    ecx
  42398e:	test   eax,0x96700207
  423993:	inc    ecx
  423994:	cs mov ecx,0xef939591
  42399a:	xchg   esp,eax
  42399b:	inc    ebp
  42399c:	out    0xd3,eax
  42399e:	scas   eax,DWORD PTR es:[edi]
  42399f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239a0:	adc    al,BYTE PTR [ebp+0x69c0b8fc]
  4239a6:	leave  
  4239a7:	mov    al,ds:0x12778085
  4239ac:	fsubr  QWORD PTR [ecx-0x2165f765]
  4239b2:	mov    esi,0x1a000d91
  4239b7:	retf   0x464d
  4239ba:	scas   al,BYTE PTR es:[edi]
  4239bb:	aaa    
  4239bc:	lea    eax,[ebx]
  4239be:	test   al,0xd
  4239c0:	push   edi
  4239c1:	or     eax,DWORD PTR [ecx+0x15]
  4239c4:	aas    
  4239c5:	mov    edi,0x177cccfa
  4239ca:	fcmovne st,st(0)
  4239cc:	sub    ebx,ecx
  4239ce:	cmp    esi,DWORD PTR [edx]
  4239d0:	lock add BYTE PTR [esi+0x6a],ah
  4239d4:	sbb    BYTE PTR [eax+0x7f],0x59
  4239d8:	addr16 adc al,0x4f
  4239db:	loopne 0x4239c1
  4239dd:	push   eax
  4239de:	(bad)  
  4239df:	mov    ch,0x79
  4239e1:	imul   edi,DWORD PTR [ecx+edi*8-0x61e018cb],0xffffffd4
  4239e9:	xor    esi,DWORD PTR [edx]
  4239eb:	loopne 0x423a43
  4239ed:	repz pusha 
  4239ef:	inc    edi
  4239f0:	dec    edx
  4239f1:	sbb    dl,BYTE PTR [edx]
  4239f3:	repz add al,0x6e
  4239f6:	jecxz  0x4239d9
  4239f8:	scas   eax,DWORD PTR es:[edi]
  4239f9:	loop   0x4239f0
  4239fb:	mov    ?,WORD PTR [ebp-0x78ac5ed8]
  423a01:	lea    ebp,[edx-0xf]
  423a04:	inc    esp
  423a05:	in     eax,dx
  423a06:	dec    esp
  423a07:	dec    ebp
  423a08:	fidiv  WORD PTR [eax+0x41]
  423a0b:	stc    
  423a0c:	dec    edi
  423a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a0e:	mov    cl,0xf4
  423a10:	test   al,0x23
  423a12:	jno    0x4239ce
  423a14:	cdq    
  423a15:	stos   BYTE PTR es:[edi],al
  423a16:	mov    bh,0x12
  423a18:	sbb    BYTE PTR [esp+eax*1+0x58],bl
  423a1c:	pop    ebx
  423a1d:	mov    bh,0xbf
  423a1f:	mov    esi,0xb7bf3c10
  423a24:	(bad)  
  423a26:	or     bx,WORD PTR [ebp+0x2a]
  423a2a:	pusha  
  423a2b:	ja     0x4239fd
  423a2d:	enter  0x472f,0x33
  423a31:	inc    eax
  423a32:	hlt    
  423a33:	test   BYTE PTR [ecx+ecx*8],ch
  423a36:	int    0xac
  423a38:	jle    0x423a65
  423a3a:	jp     0x4239c1
  423a3c:	sub    al,0x15
  423a3e:	sub    eax,0x73708e8b
  423a43:	pop    es
  423a44:	xor    dl,BYTE PTR [eax+0x26]
  423a47:	enter  0xcfa2,0x2a
  423a4b:	mov    dl,0xc8
  423a4d:	shl    BYTE PTR [edi+esi*8+0x1a],1
  423a51:	cli    
  423a52:	into   
  423a53:	cmc    
  423a54:	add    DWORD PTR [esp+edi*1-0x68],edx
  423a58:	scas   al,BYTE PTR es:[edi]
  423a59:	mov    ds:0x9a6cb25c,eax
  423a5e:	jg     0x423ab2
  423a60:	inc    eax
  423a61:	std    
  423a62:	dec    esp
  423a63:	or     BYTE PTR [eax-0x2c],bh
  423a66:	enter  0x5910,0x64
  423a6a:	lods   al,BYTE PTR ds:[esi]
  423a6b:	or     BYTE PTR [esi-0x18],dl
  423a6e:	dec    edi
  423a6f:	mov    WORD PTR ds:0x1a388863,ss
  423a75:	pop    esp
  423a76:	into   
  423a77:	fsubrp st(4),st
  423a79:	dec    edx
  423a7a:	imul   BYTE PTR [ebx+edi*4+0x5bf4f4ba]
  423a81:	es and eax,0x9b25d07c
  423a87:	test   al,0x37
  423a89:	jmp    0x78593036
  423a8e:	aas    
  423a8f:	add    al,0x7d
  423a91:	inc    ebx
  423a92:	xor    BYTE PTR [ecx+0x239c89a9],al
  423a98:	repnz or BYTE PTR [edx-0x52750e2],al
  423a9f:	rcl    BYTE PTR [edx-0x6e],0xea
  423aa3:	xadd   BYTE PTR [ecx],cl
  423aa6:	pop    edi
  423aa7:	es in  al,0xee
  423aaa:	fldenv [ebp+0x1e0379bd]
  423ab0:	ret    
  423ab1:	mov    WORD PTR [ebx+eiz*8-0x43e37440],es
  423ab8:	xor    ah,BYTE PTR [eax]
  423aba:	mov    al,0xde
  423abc:	outs   dx,DWORD PTR ds:[esi]
  423abd:	out    0x88,al
  423abf:	cwde   
  423ac0:	ins    DWORD PTR es:[edi],dx
  423ac1:	push   edi
  423ac2:	rcl    esp,1
  423ac4:	dec    esp
  423ac5:	jmp    0x92880364
  423aca:	mov    ds:0x27d4f810,eax
  423acf:	fstp   TBYTE PTR [edi]
  423ad1:	or     ah,BYTE PTR [ebp+0x1e]
  423ad4:	dec    edx
  423ad5:	sbb    al,0xb6
  423ad7:	or     eax,0xa6e307a5
  423adc:	sub    dl,BYTE PTR [edx-0x2c2a3b3c]
  423ae2:	loope  0x423b49
  423ae4:	inc    edx
  423ae5:	mov    bl,0x0
  423ae7:	call   0xfeab9474
  423aec:	mov    ds:0xc9a761c,eax
  423af1:	jg     0x423af0
  423af3:	pusha  
  423af4:	push   ecx
  423af5:	gs xchg esi,eax
  423af7:	(bad)  
  423af8:	jns    0x423b2a
  423afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423afb:	outs   dx,DWORD PTR es:[esi]
  423afd:	add    BYTE PTR ds:[edx-0x6627db7a],0x7b
  423b05:	add    eax,0xc5847637
  423b0a:	int    0xfc
  423b0c:	or     BYTE PTR [eax+eax*2],0xea
  423b10:	cmp    bh,BYTE PTR [edx+0x5420d949]
  423b16:	sbb    edi,edx
  423b18:	clc    
  423b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b1a:	daa    
  423b1b:	call   0xd305:0x7029448e
  423b22:	stc    
  423b23:	add    eax,0xa968882d
  423b28:	nop
  423b29:	inc    esp
  423b2a:	je     0x423ab2
  423b2c:	mov    ds:0x4c10f2fb,al
  423b31:	mov    eax,ds:0xf5762ca3
  423b36:	cmp    al,0xa4
  423b38:	xor    al,0x87
  423b3a:	loope  0x423adc
  423b3c:	repnz aam 0x8c
  423b3f:	adc    DWORD PTR [edi],ebp
  423b41:	pop    eax
  423b42:	and    bl,dl
  423b44:	ret    
  423b45:	lds    esi,FWORD PTR fs:[ebp-0x54838123]
  423b4c:	xchg   ebp,eax
  423b4d:	test   BYTE PTR [ebx+esi*4-0x5f4fdc2f],dh
  423b54:	or     eax,0x6146478e
  423b59:	cld    
  423b5a:	sbb    ebp,DWORD PTR [ecx]
  423b5c:	dec    eax
  423b5d:	push   cs
  423b5e:	cmp    BYTE PTR [ecx],dh
  423b60:	sbb    eax,0xfc374ab1
  423b65:	ins    BYTE PTR es:[edi],dx
  423b66:	dec    esp
  423b67:	pop    edx
  423b68:	scas   eax,DWORD PTR es:[edi]
  423b69:	fstp   DWORD PTR [ebx+0x63]
  423b6c:	mov    bh,0x96
  423b6e:	nop
  423b6f:	mov    ds:0xaff3486f,eax
  423b74:	pop    esp
  423b75:	mov    al,ds:0x2f93b431
  423b7a:	cmp    edx,DWORD PTR ds:0x5090e649
  423b80:	pop    esp
  423b81:	in     al,0x1f
  423b83:	push   esp
  423b84:	stos   DWORD PTR es:[edi],eax
  423b85:	push   edx
  423b86:	fnstenv [ebx]
  423b88:	adc    BYTE PTR gs:[edi],0xbf
  423b8c:	cmp    DWORD PTR [eax-0x5],esi
  423b8f:	jne    0x423b41
  423b91:	jl     0x423b37
  423b93:	icebp  
  423b94:	xchg   ebx,eax
  423b95:	and    DWORD PTR [ecx],0x46
  423b98:	scas   eax,DWORD PTR es:[edi]
  423b99:	idiv   ah
  423b9b:	enter  0x391f,0x5f
  423b9f:	nop
  423ba0:	and    eax,0xec43dff6
  423ba5:	jp     0x423c14
  423ba7:	retf   0x2af3
  423baa:	jp     0x423b7c
  423bac:	push   0x760ba694
  423bb1:	dec    ecx
  423bb2:	cdq    
  423bb3:	vpunpckldq ymm7,ymm6,YMMWORD PTR [eax-0x77ff518c]
  423bbb:	and    ecx,ebx
  423bbd:	test   BYTE PTR [ebx-0x24],dl
  423bc0:	jns    0x423c14
  423bc2:	fsub   QWORD PTR [edx]
  423bc4:	ins    BYTE PTR es:[edi],dx
  423bc5:	adc    al,0x1
  423bc7:	fild   DWORD PTR [eax]
  423bc9:	sbb    eax,0x50f2f940
  423bce:	sub    ebx,0xffffffb8
  423bd1:	test   al,0x90
  423bd3:	mov    ebp,0x8e2d504d
  423bd8:	(bad)
  423bdc:	mov    edi,0xa149e4bf
  423be1:	mov    fs,WORD PTR [edi+0x63b5d2f0]
  423be7:	mov    esi,0xfdd0aec9
  423bec:	adc    al,0x58
  423bee:	jmp    0x65a06ded
  423bf3:	(bad)
  423bf6:	xchg   esp,eax
  423bf7:	and    al,0xc7
  423bf9:	stos   BYTE PTR es:[edi],al
  423bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bfb:	add    BYTE PTR [eax-0x7d0d1fe1],0x32
  423c02:	or     ah,ah
  423c04:	add    al,0x23
  423c06:	push   esp
  423c07:	add    al,0xd0
  423c09:	daa    
  423c0a:	inc    eax
  423c0b:	add    edx,esi
  423c0d:	dec    edx
  423c0e:	mov    esi,ss
  423c10:	sub    BYTE PTR [esi-0x59],dl
  423c13:	mov    WORD PTR [eax-0x774198a9],?
  423c19:	dec    esp
  423c1a:	push   edi
  423c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c1c:	push   edi
  423c1d:	retf   0xa258
  423c20:	jno    0x762e8a96
  423c26:	(bad)  
  423c27:	scas   eax,DWORD PTR es:[edi]
  423c28:	je     0x423c26
  423c2a:	mov    ebx,0xa6afc18
  423c2f:	add    DWORD PTR [esi+0x3c7ff6ef],ecx
  423c35:	(bad)  [ecx]
  423c37:	scas   al,BYTE PTR es:[edi]
  423c38:	lea    esp,[eax+0x36]
  423c3b:	mov    ch,0x37
  423c3d:	pusha  
  423c3e:	lock addr16 dec edx
  423c41:	mov    DWORD PTR [esi-0x7b2e22b7],0xd89a2e0
  423c4b:	loopne 0x423c96
  423c4d:	addr16 cmc 
  423c4f:	sub    al,0xda
  423c51:	daa    
  423c52:	in     eax,dx
  423c53:	fcmovb st,st(1)
  423c55:	jno    0x423cd1
  423c57:	or     dl,BYTE PTR [eax-0x45]
  423c5a:	popf   
  423c5b:	leave  
  423c5c:	fimul  WORD PTR [esi-0x6]
  423c5f:	fstp   st(6)
  423c61:	je     0x423cb2
  423c63:	inc    esp
  423c64:	pop    es
  423c65:	jge    0x423c43
  423c67:	mov    DWORD PTR [ebx],esi
  423c69:	pusha  
  423c6a:	cwde   
  423c6b:	or     eax,0x79982823
  423c70:	leave  
  423c71:	jge    0x423c30
  423c73:	mov    esp,0xd488945e
  423c78:	and    eax,0x64c5b046
  423c7d:	mov    BYTE PTR [ebp+ebx*8-0x6ef99fd9],ch
  423c84:	stc    
  423c85:	mov    BYTE PTR [edi+edi*1-0x5f],ah
  423c89:	sbb    BYTE PTR [edi+ebp*2],cl
  423c8c:	lods   eax,DWORD PTR ds:[esi]
  423c8d:	sbb    ebp,DWORD PTR [eax+eiz*1+0x91aa40c]
  423c94:	aaa    
  423c95:	mov    ds,WORD PTR [edx-0x30]
  423c98:	pop    esp
  423c99:	mov    edx,0x20896af4
  423c9e:	gs cmp eax,0xf9ca5778
  423ca4:	cmp    al,BYTE PTR [eax]
  423ca6:	mov    al,0x20
  423ca8:	pusha  
  423ca9:	pushf  
  423caa:	xchg   DWORD PTR [edi],edx
  423cac:	cmp    DWORD PTR [eax],edx
  423cae:	xchg   DWORD PTR [eax+eiz*2+0xa],edi
  423cb2:	shl    BYTE PTR [edi-0x657c4ffe],0xb5
  423cb9:	fs pop ebx
  423cbb:	in     al,0x5e
  423cbd:	push   edi
  423cbe:	xchg   edx,eax
  423cbf:	fcomi  st,st(4)
  423cc1:	jmp    0xe74aec1f
  423cc6:	inc    edx
  423cc7:	inc    ebx
  423cc8:	add    edi,DWORD PTR [eax]
  423cca:	cli    
  423ccb:	fisttp QWORD PTR [esi-0x50]
  423cce:	aas    
  423ccf:	jbe    0x423cb0
  423cd1:	mov    ebp,0x6e7ffc77
  423cd6:	aam    0x9a
  423cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cd9:	loope  0x423caf
  423cdb:	mov    ds:0xf8f606e5,eax
  423ce0:	adc    ebp,DWORD PTR [ebp+0x7adf371a]
  423ce6:	out    0x1f,eax
  423ce8:	sbb    al,0x54
  423cea:	and    al,al
  423cec:	xor    al,0x3c
  423cee:	(bad)  
  423cef:	in     al,0xc8
  423cf1:	inc    eax
  423cf2:	jmp    FWORD PTR [ebp-0x41]
  423cf5:	sbb    al,0xa7
  423cf7:	data16 jl 0x423d52
  423cfa:	call   0xd9dcd6c4
  423cff:	xchg   ebp,eax
  423d00:	neg    DWORD PTR [ecx+0x2b210c59]
  423d06:	icebp  
  423d07:	mov    edi,eax
  423d09:	jnp    0x423ca3
  423d0b:	in     al,0x30
  423d0d:	xor    eax,0x683d3110
  423d12:	cmp    eax,0x3b54f58a
  423d17:	outs   dx,DWORD PTR ds:[esi]
  423d18:	cdq    
  423d19:	or     eax,0x75958a37
  423d1e:	cld    
  423d1f:	pop    DWORD PTR [esi]
  423d21:	ret    0x133a
  423d24:	cmp    DWORD PTR [ebp+0x6],ebx
  423d27:	and    BYTE PTR [eax+0x29193678],al
  423d2d:	inc    ebx
  423d2e:	xor    al,0xbe
  423d30:	inc    esp
  423d31:	ins    BYTE PTR es:[edi],dx
  423d32:	in     eax,0x54
  423d34:	int3   
  423d35:	loopne 0x423d1e
  423d37:	dec    esi
  423d38:	fwait
  423d39:	push   0xc7ea1ab9
  423d3e:	call   0x4a0f:0x8c682d1a
  423d45:	leave  
  423d46:	cld    
  423d47:	adc    BYTE PTR [esi],cl
  423d49:	(bad)  
  423d4a:	ins    BYTE PTR es:[edi],dx
  423d4b:	xor    al,0x77
  423d4d:	pop    edi
  423d4e:	inc    BYTE PTR [edi-0x37]
  423d51:	and    DWORD PTR [ebp+0x12f8584c],esp
  423d57:	mov    al,ds:0x1a82a70f
  423d5c:	push   edx
  423d5d:	jl     0x423d2a
  423d5f:	and    esp,eax
  423d61:	lods   eax,DWORD PTR ds:[esi]
  423d62:	add    DWORD PTR [esi],ebp
  423d64:	aaa    
  423d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d66:	mov    al,ds:0x3dba984
  423d6b:	rcr    BYTE PTR [ecx+0x7948706b],0xcb
  423d72:	jae    0x423d25
  423d74:	mov    ch,0x6f
  423d76:	idiv   BYTE PTR [esp+ebp*2]
  423d79:	cld    
  423d7a:	fs jae 0x423d85
  423d7d:	jle    0x423d1f
  423d7f:	add    DWORD PTR [edi+0x39d72590],edi
  423d85:	or     DWORD PTR [esi+esi*8-0x784bc296],esp
  423d8c:	or     eax,ecx
  423d8e:	mov    BYTE PTR [edi+0x74],0x2d
  423d92:	out    dx,eax
  423d93:	fsubr  DWORD PTR [edi]
  423d95:	push   esi
  423d96:	or     al,0x73
  423d98:	pop    ss
  423d99:	push   edi
  423d9a:	ss xor eax,0x1b8b080
  423da0:	enter  0x129e,0xe2
  423da4:	imul   esp,DWORD PTR [edi+eax*2-0x370b3034],0xffffffc3
  423dac:	cmc    
  423dad:	es enter 0xa2f,0x6a
  423db2:	cwde   
  423db3:	inc    esi
  423db4:	fimul  WORD PTR [eax-0x28]
  423db7:	in     al,dx
  423db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423db9:	sub    bl,BYTE PTR [ebp+0x6ed5e38c]
  423dbf:	xchg   BYTE PTR [eax],dl
  423dc1:	shl    DWORD PTR ds:0xe2b2a2d,1
  423dc7:	xlat   BYTE PTR ds:[ebx]
  423dc8:	pushf  
  423dc9:	mov    eax,0x8fe4318a
  423dce:	fimul  WORD PTR [bp+si-0x23c4]
  423dd3:	stc    
  423dd4:	and    eax,0x45e52f91
  423dd9:	inc    eax
  423dda:	(bad)  
  423ddb:	add    BYTE PTR [eax],ch
  423ddd:	mov    edx,0x61c989d4
  423de2:	leave  
  423de3:	sahf   
  423de4:	and    al,0xe9
  423de6:	test   al,0x31
  423de9:	sbb    dl,ch
  423deb:	sahf   
  423dec:	sti    
  423ded:	int3   
  423dee:	push   ecx
  423def:	not    DWORD PTR [ecx-0x30]
  423df2:	xchg   DWORD PTR [ecx+0x35],esp
  423df5:	ds lock (bad) 
  423df8:	lahf   
  423df9:	cld    
  423dfa:	mov    esp,0xba2330b8
  423dff:	adc    al,0xd9
  423e01:	fs sbb al,0x79
  423e04:	add    al,0x5d
  423e06:	push   ebp
  423e07:	jge    0x423e41
  423e09:	push   es
  423e0a:	or     eax,0xbe71dec3
  423e0f:	mov    ecx,0x9d675cc8
  423e14:	pop    ds
  423e15:	mov    esi,DWORD PTR [eax]
  423e17:	push   ds
  423e18:	fiadd  DWORD PTR [esp+eiz*8]
  423e1c:	jmp    0xdbc9:0x27b7d97a
  423e23:	sub    al,dl
  423e25:	sbb    eax,0x86ded27e
  423e2a:	or     eax,0x43344cc4
  423e2f:	pop    eax
  423e30:	call   DWORD PTR [eax-0x69]
  423e33:	mov    ch,0x9f
  423e35:	jo     0x423e06
  423e37:	sbb    dl,ah
  423e39:	push   ds
  423e3a:	and    eax,DWORD PTR [eax]
  423e3c:	add    BYTE PTR [eax+ebx*1],0x2d
  423e40:	shl    BYTE PTR [esi+0x1fb0867],cl
  423e46:	adc    bh,BYTE PTR [ebx+eiz*1]
  423e49:	test   al,0x50
  423e4b:	push   cs
  423e4c:	and    al,0xcd
  423e4e:	mov    bl,BYTE PTR [esi+0x327ad760]
  423e54:	mov    cl,0x40
  423e56:	jns    0x423e5c
  423e58:	bound  eax,QWORD PTR [eax+esi*4-0x66c45c48]
  423e5f:	xchg   BYTE PTR [ebp-0x5d1457a9],al
  423e65:	push   esp
  423e66:	mov    ebx,0xcb16d38e
  423e6b:	push   eax
  423e6c:	int3   
  423e6d:	cld    
  423e6e:	push   ebx
  423e6f:	test   DWORD PTR [esi],0x7425aafc
  423e75:	pop    ebx
  423e76:	(bad)  
  423e77:	pop    ecx
  423e78:	sti    
  423e79:	pop    esi
  423e7a:	add    cl,al
  423e7c:	xor    eax,0xc6be6a98
  423e81:	dec    eax
  423e82:	sbb    eax,0xbc05a251
  423e87:	sbb    ebx,DWORD PTR [ebx-0x3861670f]
  423e8d:	inc    eax
  423e8e:	shl    al,cl
  423e90:	into   
  423e91:	iret   
  423e92:	ins    BYTE PTR es:[edi],dx
  423e93:	dec    esi
  423e94:	cmp    eax,0x88408551
  423e99:	and    DWORD PTR [ebx-0x49],0x142db3b4
  423ea0:	imul   BYTE PTR [edx+eax*1-0xe06e9e1]
  423ea7:	gs mov ebp,0x53e8d0f1
  423ead:	xor    eax,0x1442834f
  423eb2:	(bad)  
  423eb3:	hlt    
  423eb4:	cmc    
  423eb5:	sbb    edi,eax
  423eb7:	or     bl,BYTE PTR [ecx-0x6399223d]
  423ebd:	mov    esp,0xdebdb36
  423ec2:	cmp    eax,0x8c00c9c
  423ec7:	mov    fs,ebp
  423ec9:	nop
  423eca:	fisub  WORD PTR [ebx]
  423ecc:	call   0x332e:0xbec5e493
  423ed3:	add    bl,al
  423ed5:	ret    0x83c
  423ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ed9:	fcmovne st,st(3)
  423edb:	pop    ss
  423edc:	test   DWORD PTR [ebx],ebp
  423ede:	div    BYTE PTR [edi+0x2c]
  423ee1:	in     eax,dx
  423ee2:	mov    ds:0x783a2f69,eax
  423ee7:	mov    ah,0xe7
  423ee9:	aam    0x39
  423eeb:	pop    edx
  423eec:	das    
  423eed:	psllw  mm7,QWORD PTR [ebx]
  423ef0:	dec    ebp
  423ef1:	push   cs
  423ef2:	clc    
  423ef3:	shl    DWORD PTR [edi+0x57e71e44],0x30
  423efa:	stos   DWORD PTR es:[edi],eax
  423efb:	sbb    al,0x43
  423efd:	xchg   DWORD PTR [edx-0x303c9d10],edi
  423f03:	sub    eax,DWORD PTR [eax-0x1e]
  423f06:	repnz mov bl,0xf1
  423f09:	stos   BYTE PTR es:[edi],al
  423f0a:	frstor [edi-0x61ad17ee]
  423f10:	imul   edx,DWORD PTR [eax+0x2e],0x6b
  423f14:	xchg   esi,eax
  423f15:	scas   al,BYTE PTR es:[edi]
  423f16:	or     al,0xa
  423f18:	sti    
  423f19:	push   0xc831014c
  423f1e:	repz xor BYTE PTR [ebx+ebx*8+0x4],dl
  423f23:	xchg   esp,eax
  423f24:	sub    DWORD PTR [edi-0x4d],edx
  423f27:	cmp    DWORD PTR [edi+ecx*1+0x51],edx
  423f2b:	cs adc eax,0xb58489b
  423f31:	js     0x423ee0
  423f33:	xor    al,0xf8
  423f35:	cmp    bl,dh
  423f37:	or     DWORD PTR [edx+0x7ae62096],eax
  423f3d:	push   esi
  423f3e:	rol    BYTE PTR [esi-0x13],1
  423f41:	cmp    al,BYTE PTR [si+0x6a]
  423f45:	sbb    eax,0x8b218b6f
  423f4a:	or     al,0x50
  423f4c:	push   0x106f8d14
  423f51:	adc    DWORD PTR [esp+ebp*2+0x9],esp
  423f55:	mov    WORD PTR [ebx+0x55e3772f],es
  423f5b:	mov    eax,0x3e348bd6
  423f60:	cmp    ecx,DWORD PTR [esi-0x79498273]
  423f66:	lock pop eax
  423f68:	ins    BYTE PTR es:[edi],dx
  423f69:	pop    eax
  423f6a:	adc    edi,ebx
  423f6c:	pop    eax
  423f6d:	push   cs
  423f6e:	xchg   esi,eax
  423f6f:	lahf   
  423f70:	jl     0x423f04
  423f72:	jg     0x423fab
  423f74:	inc    ecx
  423f75:	push   ds
  423f76:	cmc    
  423f77:	xor    eax,0xcc68a0ad
  423f7c:	mov    fs,ebx
  423f7e:	aad    0xdf
  423f80:	out    dx,al
  423f81:	les    esi,FWORD PTR ds:[ebx-0x12]
  423f85:	bound  esi,QWORD PTR [eax+ebp*4+0x62]
  423f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f8a:	and    DWORD PTR [esi+ebp*8-0x53],ebp
  423f8e:	cli    
  423f8f:	mov    WORD PTR [esi+ebp*1-0x3f6fa063],cs
  423f96:	push   eax
  423f97:	adc    dl,BYTE PTR [edi-0x77]
  423f9a:	scas   eax,DWORD PTR es:[edi]
  423f9b:	(bad)  
  423f9c:	daa    
  423f9d:	mov    ah,0x59
  423f9f:	cli    
  423fa0:	add    al,ch
  423fa2:	scas   al,BYTE PTR es:[edi]
  423fa3:	lods   eax,DWORD PTR ds:[esi]
  423fa4:	inc    esi
  423fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fa6:	fcomp  st(7)
  423fa8:	sub    BYTE PTR [esi+0x75],cl
  423fab:	cmp    bh,BYTE PTR [ecx]
  423fad:	call   0xce9c:0xe811fc27
  423fb4:	mov    eax,0xa47d33df
  423fb9:	xchg   edx,eax
  423fba:	addr16 push 0xc
  423fbd:	jb     0x423f99
  423fbf:	sub    BYTE PTR [eax+ecx*8+0x115377a0],cl
  423fc6:	mov    cl,ah
  423fc8:	imul   ebp,DWORD PTR [edx-0x69504f14],0xffffffbf
  423fcf:	imul   ebx,DWORD PTR [edx],0x6010cd26
  423fd5:	repnz lods eax,DWORD PTR ds:[esi]
  423fd7:	rol    eax,cl
  423fd9:	fbld   TBYTE PTR [edi+0x6233b801]
  423fdf:	das    
  423fe0:	int    0x3
  423fe2:	cs pop ebp
  423fe4:	dec    esi
  423fe5:	fcom   QWORD PTR [edx+edx*4-0x1432197e]
  423fec:	and    DWORD PTR [esi+0x0],0x4e
  423ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ff1:	inc    edi
  423ff2:	ja     0x423f96
  423ff4:	ret    0x709f
  423ff7:	and    al,0x6e
  423ff9:	xchg   esi,eax
  423ffa:	ds ja  0x424019
  423ffd:	push   0x7b
  423fff:	loopne 0x424049
  424001:	dec    edx
  424002:	icebp  
  424003:	push   ecx
  424004:	ret    0x9f02
  424007:	or     bl,dl
  424009:	lock adc al,0xa6
  42400c:	sub    ebx,0xba3aa6ab
  424012:	adc    al,0x8a
  424014:	pop    esi
  424015:	xchg   DWORD PTR [ebx-0x6bea9a39],eax
  42401b:	cmp    BYTE PTR [ebp+0x12],bh
  42401e:	mov    ds:0xb06d11da,al
  424023:	jae    0x424081
  424025:	jmp    0x423fd7
  424027:	mov    ah,0x30
  424029:	add    DWORD PTR [edi+0x71],ecx
  42402c:	mov    es,WORD PTR [edx+ecx*4]
  42402f:	imul   esi,DWORD PTR [ebx],0xe7d0ad40
  424035:	jno    0x42405f
  424037:	jns    0x4240aa
  424039:	sbb    ch,BYTE PTR [ebx-0x53]
  42403c:	inc    ebp
  42403d:	pop    ebx
  42403e:	jmp    0xf363:0xbf587f4c
  424045:	mov    cl,0x47
  424047:	fs jo  0x423fe2
  42404a:	jbe    0x42405c
  42404c:	fwait
  42404d:	adc    DWORD PTR [edi],ecx
  42404f:	dec    ecx
  424050:	stos   DWORD PTR es:[edi],eax
  424051:	xchg   esp,eax
  424052:	lock sub eax,ecx
  424055:	mov    eax,ds:0xd499764f
  42405a:	cmp    al,0xf7
  42405c:	shl    DWORD PTR [ecx+edx*4+0x429683a1],1
  424063:	add    BYTE PTR [eax],al
  424065:	add    BYTE PTR [eax],al
  424067:	add    cl,bh
  424069:	push   ds
  42406a:	inc    esp
  42406b:	pop    ebp
  42406c:	push   ecx
  42406d:	or     DWORD PTR [eax],eax
  42406f:	add    BYTE PTR [eax],al
  424071:	add    BYTE PTR [eax],al
  424073:	add    BYTE PTR [ecx+0x9],dl
  424076:	add    BYTE PTR [eax],al
  424078:	sub    DWORD PTR [eax],eax
  42407a:	es jl  0x42407d
  42407d:	add    dh,BYTE PTR [esi]
  42407f:	or     BYTE PTR [eax],al
  424081:	add    ah,al
  424083:	inc    ebp
  424084:	add    BYTE PTR [ebx],ah
  424086:	add    bh,BYTE PTR [edx-0x19df5ae9]
  42408c:	dec    esp
  42408d:	and    al,0x4a
  42408f:	push   ds
  424090:	mov    edi,DWORD PTR [ebx+edi*8]
  424093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424094:	outs   dx,DWORD PTR ds:[esi]
  424095:	pusha  
  424096:	dec    eax
  424097:	mov    dh,ch
  424099:	out    dx,eax
  42409a:	jl     0x424119
  42409c:	jl     0x424025
  42409e:	out    dx,al
  42409f:	ins    BYTE PTR es:[edi],dx
  4240a0:	mov    eax,0x4de9a5ad
  4240a5:	cmp    edx,DWORD PTR [edx*2-0x6223c370]
  4240ac:	dec    esi
  4240ad:	xlat   BYTE PTR ds:[ebx]
  4240ae:	or     ecx,edi
  4240b0:	js     0x4240ea
  4240b2:	jnp    0x424042
  4240b4:	push   ss
  4240b5:	xor    DWORD PTR [esi],edx
  4240b7:	imul   ecx,eax,0x44485ce4
  4240bd:	xlat   BYTE PTR ds:[ebx]
  4240be:	mov    ch,0xc8
  4240c0:	mov    ecx,0xc88059b0
  4240c5:	jmp    0x424116
  4240c7:	js     0x424124
  4240c9:	push   ebp
  4240ca:	into   
  4240cb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4240cd:	inc    eax
  4240ce:	push   es
  4240cf:	fild   WORD PTR [edx-0x6a]
  4240d2:	repz inc esi
  4240d4:	cli    
  4240d5:	dec    esp
  4240d6:	hlt    
  4240d7:	int    0xb7
  4240d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240da:	ficom  DWORD PTR [eax-0x1a]
  4240dd:	mov    eax,ds:0x95151170
  4240e2:	jg     0x424107
  4240e4:	inc    edx
  4240e5:	mov    esp,0xfb78948b
  4240ea:	outs   dx,DWORD PTR ds:[esi]
  4240eb:	cwde   
  4240ec:	sub    eax,0xb8557edf
  4240f1:	or     ch,BYTE PTR [esi+eiz*8-0x4bb2002f]
  4240f8:	sbb    ah,bl
  4240fa:	mov    cl,0xe6
  4240fc:	inc    esp
  4240fd:	mov    esi,0x7da4f1af
  424102:	test   BYTE PTR [edi-0x40f9bf1b],dl
  424108:	sub    al,0xa9
  42410b:	test   al,0xb8
  42410d:	outs   dx,BYTE PTR ds:[esi]
  42410e:	mov    ebp,0xbe7c1fc8
  424113:	ror    esp,cl
  424115:	scas   eax,DWORD PTR es:[edi]
  424116:	and    bl,cl
  424118:	add    DWORD PTR [ebp-0xf9eb3f1],ecx
  42411e:	add    eax,0x3481fd53
  424123:	mov    edi,0x711415fa
  424128:	sbb    DWORD PTR [edi-0x23f68a2d],esi
  42412e:	bound  edi,QWORD PTR [eax+ebx*8-0x6376aae6]
  424135:	xchg   ebx,eax
  424136:	ins    DWORD PTR es:[edi],dx
  424137:	fchs   
  424139:	(bad)  
  42413b:	jmp    0x42418e
  42413d:	or     dl,ah
  42413f:	loop   0x42412f
  424141:	add    al,0xcc
  424143:	into   
  424144:	(bad)  
  424146:	stc    
  424147:	test   al,ch
  424149:	mov    eax,ds:0xcf357a28
  42414e:	or     eax,0xc555d5f
  424153:	rcl    BYTE PTR [ebx+0x6af0ab46],1
  424159:	dec    BYTE PTR [eax]
  42415b:	dec    edi
  42415c:	hlt    
  42415d:	data16 jo 0x424163
  424160:	std    
  424161:	cmp    bh,0x3b
  424164:	fwait
  424165:	sbb    bl,cl
  424167:	jmp    0x1b961dce
  42416c:	mov    BYTE PTR [edx+0x3c],ch
  42416f:	push   ss
  424170:	push   ds
  424171:	cmp    eax,edx
  424173:	sub    DWORD PTR [eax+0x36],edx
  424176:	mov    esp,DWORD PTR [eax+0x2a]
  424179:	je     0x42410f
  42417b:	xchg   DWORD PTR [eax],ecx
  42417d:	sti    
  42417e:	shl    DWORD PTR [eax+ecx*1+0x63],cl
  424182:	rcr    BYTE PTR [ebp-0x2f],0xd3
  424186:	and    DWORD PTR [edi+0x5df52c11],0xffffff9e
  42418d:	pop    esi
  42418e:	mov    esi,edi
  424190:	jae    0x4241fb
  424192:	push   eax
  424193:	lea    ecx,[eax+0x147a6f44]
  424199:	sub    eax,0x3fb07432
  42419e:	or     eax,0x692c810d
  4241a3:	adc    eax,0xb610651c
  4241a8:	test   eax,0x49685abf
  4241ad:	inc    eax
  4241ae:	sub    eax,0x472b26fc
  4241b3:	mov    edx,0xcb64c1e5
  4241b8:	jle    0x424183
  4241ba:	call   0x4a88:0x4870786
  4241c1:	dec    edi
  4241c2:	jmp    0x424177
  4241c4:	test   al,0x1c
  4241c6:	xor    al,0x5
  4241c8:	lods   al,BYTE PTR ds:[esi]
  4241c9:	aad    0x71
  4241cb:	into   
  4241cc:	add    DWORD PTR [edi-0x7f],0xffffff85
  4241d0:	sbb    edx,DWORD PTR [edx+eax*1+0x45]
  4241d4:	xchg   ebx,eax
  4241d5:	cwde   
  4241d6:	clc    
  4241d7:	into   
  4241d8:	cmp    eax,0xa7ec789d
  4241dd:	mov    ebx,0x65d91b2
  4241e2:	pusha  
  4241e3:	pushf  
  4241e4:	call   0x44dc:0x10a385f2
  4241eb:	test   al,0xc0
  4241ed:	cli    
  4241ee:	bound  ecx,QWORD PTR [edi+0x56]
  4241f1:	ins    BYTE PTR es:[edi],dx
  4241f2:	jbe    0x4241da
  4241f4:	(bad)  
  4241f5:	in     al,0x10
  4241f7:	push   edx
  4241f8:	or     DWORD PTR [edx+0x7c],edx
  4241fb:	xchg   DWORD PTR [esi+0x380f8c2e],ebx
  424201:	fwait
  424202:	inc    ebp
  424203:	or     BYTE PTR [ecx+0xd],dl
  424206:	es mov al,0x29
  424209:	adc    eax,DWORD PTR [edx]
  42420b:	cmp    eax,0xd48ce0f5
  424210:	aam    0xb7
  424212:	and    eax,0xb545f183
  424217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424218:	lock clc 
  42421a:	push   esp
  42421b:	(bad)  
  42421c:	pop    esi
  42421d:	push   edx
  42421e:	dec    ebp
  42421f:	ret    
  424220:	push   eax
  424221:	dec    esp
  424222:	mov    al,ds:0xdbd5db62
  424227:	shr    ah,cl
  424229:	stos   BYTE PTR es:[edi],al
  42422a:	fadd   st(4),st
  42422c:	lods   eax,DWORD PTR ds:[esi]
  42422d:	sub    al,0x22
  42422f:	pop    esp
  424230:	fcom   st(2)
  424232:	es cs call 0x3a4762f1
  424239:	push   0x54
  42423b:	xchg   DWORD PTR [edi],ebx
  42423d:	or     al,0x12
  42423f:	into   
  424240:	ins    BYTE PTR es:[edi],dx
  424241:	pop    es
  424242:	mov    ebp,esi
  424244:	out    0x1e,al
  424246:	xor    BYTE PTR [eax],dh
  424248:	int3   
  424249:	mov    ch,0x16
  42424b:	js     0x424226
  42424d:	cs fsub DWORD PTR es:[edx]
  424251:	cmp    DWORD PTR ds:0xc2d64b52,ebx
  424257:	adc    bh,ah
  424259:	pop    edx
  42425a:	shl    BYTE PTR [ebp+0x4b],cl
  42425d:	inc    eax
  42425e:	shr    DWORD PTR [ebx+0x42762015],cl
  424264:	pop    eax
  424265:	mov    BYTE PTR [esi],bl
  424267:	mov    al,ds:0xbc441770
  42426c:	xor    eax,0x2299d62
  424271:	mov    eax,ds:0x576becb3
  424276:	sub    ebx,DWORD PTR [esi+edi*8+0x105d5c4f]
  42427d:	jecxz  0x4242c4
  42427f:	cmc    
  424280:	cs nop
  424282:	pop    ebp
  424283:	xchg   edx,eax
  424284:	sbb    eax,0x8d750134
  424289:	xor    eax,0xebba7ef7
  42428e:	pop    eax
  42428f:	imul   edi,edx,0x33307c62
  424295:	sbb    dl,al
  424297:	jl     0x424260
  424299:	lds    eax,FWORD PTR [edi-0x7e]
  42429c:	lods   eax,DWORD PTR ds:[esi]
  42429d:	pop    edx
  42429e:	xor    ebp,DWORD PTR [edx+0x24]
  4242a1:	fwait
  4242a2:	cmp    al,0xe6
  4242a4:	push   eax
  4242a5:	inc    esp
  4242a6:	dec    esi
  4242a7:	loop   0x424258
  4242a9:	dec    eax
  4242aa:	add    ch,BYTE PTR [eax-0x72]
  4242ad:	les    ebx,FWORD PTR [esi-0x37]
  4242b0:	inc    eax
  4242b1:	jmp    0x9367fa22
  4242b6:	rol    BYTE PTR [edi+0x1d],cl
  4242b9:	mov    dh,0x13
  4242bb:	nop
  4242bc:	jp     0x42426b
  4242be:	dec    edx
  4242bf:	pop    esp
  4242c0:	and    DWORD PTR [ebp-0x70],esi
  4242c3:	xor    BYTE PTR [edi+eiz*2+0x26478d81],0x7f
  4242cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242cc:	cmc    
  4242cd:	pop    esp
  4242ce:	enter  0x9231,0x65
  4242d2:	call   0x80d566eb
  4242d7:	mov    eax,0x3a4572ce
  4242dc:	into   
  4242dd:	mov    edx,0xba71a48f
  4242e2:	dec    eax
  4242e3:	in     eax,0xf1
  4242e5:	pop    ebp
  4242e6:	cld    
  4242e7:	(bad)
  4242ea:	stos   BYTE PTR es:[edi],al
  4242eb:	jmp    0x35876a5
  4242f0:	and    eax,0xd95c9e70
  4242f5:	out    0x83,al
  4242f7:	and    BYTE PTR [ebp+0x2f2894b8],0x14
  4242fe:	scas   eax,DWORD PTR es:[edi]
  4242ff:	call   DWORD PTR [edx]
  424301:	fidivr WORD PTR [eax+edi*4]
  424304:	das    
  424305:	lahf   
  424306:	mov    cs,WORD PTR [ecx+0x8286700]
  42430c:	fcom   QWORD PTR [esi-0x15]
  42430f:	dec    edx
  424310:	aad    0xe4
  424312:	push   cs
  424313:	out    dx,al
  424314:	and    al,BYTE PTR [eax]
  424316:	and    DWORD PTR [ecx+0x12],esi
  424319:	test   DWORD PTR [eax-0x57cfff51],esp
  42431f:	dec    eax
  424320:	xchg   edx,eax
  424321:	pop    es
  424322:	fsubr  DWORD PTR [ebp+0x25]
  424325:	sbb    bl,BYTE PTR [edi]
  424327:	int3   
  424328:	push   ss
  424329:	cmp    dh,cl
  42432b:	jne    0x42437e
  42432d:	ret    
  42432e:	or     DWORD PTR [ecx],esp
  424330:	lock or eax,0xc6d3e0be
  424336:	inc    eax
  424337:	icebp  
  424338:	sub    edx,DWORD PTR [esp+ebp*4]
  42433b:	aam    0xfb
  42433d:	sub    DWORD PTR [ebx],edx
  42433f:	dec    edi
  424340:	ficom  DWORD PTR [eax-0x44]
  424343:	cmc    
  424344:	stos   DWORD PTR es:[edi],eax
  424345:	sub    esi,DWORD PTR [eax]
  424347:	fwait
  424348:	inc    esp
  424349:	ret    0xe01b
  42434c:	add    al,0xf1
  42434e:	xor    eax,0xdb5764
  424353:	push   edi
  424354:	add    al,0x44
  424356:	shl    BYTE PTR [edi],0x33
  424359:	push   0x28a60f55
  42435e:	loope  0x424322
  424360:	sbb    edi,ecx
  424362:	jecxz  0x42439d
  424364:	sub    BYTE PTR [edi],cl
  424366:	dec    esp
  424367:	adc    al,0x49
  424369:	push   0x52405a
  42436e:	(bad)  
  42436f:	hlt    
  424370:	and    al,0x57
  424372:	js     0x4243de
  424374:	xor    DWORD PTR ds:0xde18857a,0xffffff85
  42437b:	fistp  WORD PTR [ebx+edx*1+0x3c86d061]
  424382:	clc    
  424383:	lods   eax,DWORD PTR ds:[esi]
  424384:	sub    bh,bl
  424386:	aam    0x5
  424388:	adc    eax,0xa3196027
  42438d:	xchg   edx,eax
  42438e:	scas   eax,DWORD PTR es:[edi]
  42438f:	outs   dx,BYTE PTR ds:[esi]
  424390:	in     al,dx
  424391:	pop    ecx
  424392:	mov    BYTE PTR [esi+eiz*1+0x45c310a],0xc3
  42439a:	jae    0x4243d5
  42439c:	sub    al,0xc1
  42439e:	cld    
  42439f:	xor    BYTE PTR [edi],dl
  4243a1:	jo     0x424392
  4243a3:	sbb    BYTE PTR [ecx+0x50],dl
  4243a6:	jo     0x42439a
  4243a8:	popa   
  4243a9:	sbb    BYTE PTR [esi-0x36],bh
  4243ac:	call   0x116:0x26b6748d
  4243b3:	or     ecx,DWORD PTR [edi]
  4243b5:	iret   
  4243b6:	inc    ecx
  4243b7:	cwde   
  4243b8:	dec    BYTE PTR [esi]
  4243ba:	int    0xc9
  4243bc:	ror    DWORD PTR [edx+0x6440c9ac],1
  4243c2:	cmc    
  4243c3:	xor    DWORD PTR [eax],ecx
  4243c5:	stos   DWORD PTR es:[edi],eax
  4243c6:	push   edi
  4243c7:	out    dx,eax
  4243c8:	and    ah,BYTE PTR [esp+eiz*4+0x1]
  4243cc:	mov    edi,0xaf355b55
  4243d1:	test   BYTE PTR [eax-0x2b9ca3cd],cl
  4243d7:	scas   al,BYTE PTR es:[edi]
  4243d8:	push   cs
  4243d9:	fist   DWORD PTR [edi-0x54]
  4243dc:	test   al,0xca
  4243de:	xor    al,0x66
  4243e0:	mov    esi,0xd0fcdba8
  4243e5:	outs   dx,BYTE PTR ds:[esi]
  4243e6:	sub    cl,bl
  4243e8:	std    
  4243e9:	sti    
  4243ea:	ror    DWORD PTR [edi-0x56c7878e],cl
  4243f0:	and    al,0x61
  4243f2:	jg     0x424396
  4243f4:	xchg   ebx,eax
  4243f5:	addr16 pushf 
  4243f7:	ss pop eax
  4243f9:	mov    al,0xd0
  4243fb:	fisttp DWORD PTR [ecx-0xd3f69ed]
  424401:	out    dx,eax
  424402:	cld    
  424403:	mov    ebx,0x5652a492
  424408:	in     al,0x38
  42440a:	xor    al,0xba
  42440c:	aaa    
  42440d:	push   edx
  42440e:	push   ecx
  42440f:	aam    0xa7
  424411:	mov    ebx,ds
  424413:	and    DWORD PTR [ecx],esi
  424415:	mov    dl,0x53
  424417:	mov    esi,0x6db00ea9
  42441c:	xor    BYTE PTR [ebp+0x7ce35e59],dh
  424422:	(bad)
  424425:	add    al,0xe4
  424427:	push   es
  424428:	test   DWORD PTR [esi+0x76f8a3b5],esp
  42442e:	(bad)  
  42442f:	mov    dl,0x5
  424431:	jnp    0x42440a
  424433:	dec    esp
  424434:	arpl   WORD PTR [ecx+eiz*8],bx
  424437:	mov    bl,0xeb
  424439:	fcomp  QWORD PTR [ebx-0x3bf5038e]
  42443f:	out    0x7,al
  424441:	mov    bl,0xe5
  424443:	jle    0x424403
  424445:	inc    ebp
  424446:	jns    0x424430
  424448:	loopne 0x424422
  42444a:	fisubr DWORD PTR [edi]
  42444c:	mov    ch,0x53
  42444e:	call   0x16e550c4
  424453:	daa    
  424454:	xor    DWORD PTR [esi],0x30d7cf63
  42445a:	ins    BYTE PTR es:[edi],dx
  42445b:	adc    al,0x70
  42445d:	cmp    bl,ch
  42445f:	aas    
  424460:	xor    dh,BYTE PTR [eax+ebx*8-0x78db0584]
  424467:	cmp    edi,DWORD PTR [eax-0x14]
  42446a:	sub    al,0xfc
  42446c:	dec    eax
  42446d:	das    
  42446e:	loope  0x424429
  424470:	pop    ss
  424471:	dec    eax
  424472:	inc    BYTE PTR [ebp-0x49935de0]
  424478:	inc    eax
  424479:	xchg   ebx,eax
  42447a:	and    eax,0x92447174
  42447f:	enter  0xa4ad,0xa8
  424483:	into   
  424484:	mov    cs,esi
  424486:	push   0x102d6d7e
  42448b:	jecxz  0x4244b4
  42448d:	test   BYTE PTR [edx+0x10],bh
  424490:	mov    bl,BYTE PTR [ecx-0x51fd614c]
  424496:	lods   al,BYTE PTR ds:[esi]
  424497:	pop    esp
  424498:	xor    al,0xc3
  42449a:	mov    DWORD PTR [edx-0x201f14c3],edx
  4244a0:	popa   
  4244a1:	pop    eax
  4244a2:	fcomp  DWORD PTR [edi-0xb]
  4244a5:	inc    esi
  4244a6:	fidivr WORD PTR [edx+edi*8+0x4b327c13]
  4244ad:	das    
  4244ae:	mov    ch,0x5e
  4244b0:	and    BYTE PTR [eax+0x6],ch
  4244b3:	mov    al,ds:0x75401a7
  4244b8:	mov    edx,0x48f8ddde
  4244bd:	pop    ebp
  4244be:	aam    0x18
  4244c0:	or     eax,0xc075a0e1
  4244c5:	ins    BYTE PTR es:[edi],dx
  4244c6:	into   
  4244c7:	jle    0x42445e
  4244c9:	cmc    
  4244ca:	pop    ebp
  4244cb:	mov    eax,ds:0xfc90385a
  4244d0:	mov    ah,0xf6
  4244d2:	mov    ebx,0x3a130a54
  4244d7:	mov    ah,0xc9
  4244d9:	aas    
  4244da:	jns    0x42451a
  4244dc:	jp     0x42447c
  4244de:	mov    bl,BYTE PTR [ebp+0x5c]
  4244e1:	jbe    0x424553
  4244e3:	sub    eax,0xc65d0768
  4244e8:	xor    al,BYTE PTR [eax-0x40ec6a62]
  4244ee:	mov    ss,WORD PTR [eax-0x19]
  4244f1:	push   eax
  4244f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244f3:	sahf   
  4244f4:	gs jae 0x424550
  4244f7:	dec    eax
  4244f8:	jg     0x424532
  4244fa:	loopne 0x4244c4
  4244fc:	inc    edx
  4244fd:	rcr    ecx,1
  4244ff:	ret    0xdeaf
  424502:	mov    dh,0xdc
  424504:	in     al,dx
  424505:	sti    
  424506:	pop    es
  424507:	das    
  424508:	cwde   
  424509:	cmp    ecx,DWORD PTR [ebx+ecx*8+0x587694bc]
  424510:	sbb    BYTE PTR [ecx-0x1d677277],cl
  424516:	mov    eax,0xa8fc2933
  42451b:	push   edi
  42451c:	dec    esp
  42451d:	sub    BYTE PTR [edx],bh
  42451f:	fadd   st(6),st
  424521:	mov    ds:0x4dd1739f,al
  424526:	xchg   edi,eax
  424527:	popf   
  424528:	add    BYTE PTR [edi-0x3f],bh
  42452b:	icebp  
  42452c:	stos   DWORD PTR es:[edi],eax
  42452d:	sub    eax,0xa89d5f40
  424532:	nop
  424533:	inc    esi
  424534:	fst    st(3)
  424536:	adc    DWORD PTR [ecx+0x23],ebx
  424539:	sub    cl,ah
  42453b:	cmc    
  42453c:	mov    edi,0xdccbd96e
  424541:	and    esp,DWORD PTR [ecx-0x22646610]
  424547:	mov    ah,0xe9
  424549:	add    dh,BYTE PTR fs:[ebx]
  42454c:	adc    al,0x52
  42454e:	aam    0x8a
  424550:	adc    ebp,DWORD PTR [esi+0x389464aa]
  424556:	scas   al,BYTE PTR es:[edi]
  424557:	aas    
  424558:	sub    al,BYTE PTR [eax+0x64c5d98]
  42455e:	loopne 0x4244e8
  424560:	(bad)  
  424561:	ja     0x424569
  424563:	xchg   esi,eax
  424564:	push   esi
  424565:	xor    DWORD PTR [ecx+0x51067a04],edi
  42456b:	jge    0x424570
  42456d:	(bad)  
  42456e:	sub    ebx,ebp
  424570:	sub    BYTE PTR [edi],ch
  424572:	loopne 0x424566
  424574:	inc    edx
  424575:	cmp    eax,0x4c661620
  42457a:	jmp    0xf286f7f
  42457f:	fisttp DWORD PTR [eax]
  424581:	scas   al,BYTE PTR es:[edi]
  424582:	jo     0x42458f
  424584:	scas   eax,DWORD PTR es:[edi]
  424585:	or     edi,DWORD PTR [esi]
  424587:	fisub  DWORD PTR ds:0x56186d63
  42458d:	pop    ds
  42458e:	gs pop ebx
  424590:	mov    DWORD PTR [eax+eiz*2+0x6cd93cfe],ebx
  424597:	mov    BYTE PTR [eax+ebx*1-0x32],bl
  42459b:	pop    esp
  42459c:	mov    dl,0x60
  42459e:	inc    esp
  42459f:	sbb    DWORD PTR [esi],edx
  4245a1:	sbb    BYTE PTR [ecx-0x7b7bf93e],ah
  4245a7:	pop    eax
  4245a8:	xchg   edi,eax
  4245a9:	mov    BYTE PTR [edi+0x29b59f79],bl
  4245af:	sub    al,0xb8
  4245b1:	and    ebp,DWORD PTR [ecx+0x2c3167ff]
  4245b7:	inc    ecx
  4245b8:	push   eax
  4245b9:	hlt    
  4245ba:	add    bl,bh
  4245bc:	fistp  QWORD PTR [esi]
  4245be:	arpl   WORD PTR [edx-0x53],bx
  4245c1:	je     0x424613
  4245c3:	cmp    edi,edi
  4245c5:	add    ah,BYTE PTR [ebp-0x679a0a0a]
  4245cb:	pop    eax
  4245cc:	push   eax
  4245cd:	ficomp DWORD PTR [eax]
  4245cf:	rcr    edx,0x1a
  4245d2:	and    bh,BYTE PTR [ebx+ecx*4-0x47632132]
  4245d9:	xlat   BYTE PTR ds:[ebx]
  4245da:	push   ss
  4245db:	sub    eax,0xaf3e1e64
  4245e0:	push   ebp
  4245e1:	jecxz  0x42457b
  4245e3:	hlt    
  4245e4:	lahf   
  4245e5:	mov    BYTE PTR [ebp+0x2cfe2e9e],bh
  4245eb:	mov    edx,0x37acafe8
  4245f0:	dec    eax
  4245f1:	iret   
  4245f2:	fstp   QWORD PTR [edx]
  4245f4:	lods   eax,DWORD PTR ds:[esi]
  4245f5:	repnz cmc 
  4245f7:	sar    BYTE PTR [esi-0x74111c38],1
  4245fd:	mov    ds:0x497808e4,eax
  424602:	repnz mov ebx,DWORD PTR [ecx]
  424605:	aaa    
  424606:	repz or BYTE PTR [esi-0x64],ah
  42460a:	xchg   ebp,eax
  42460b:	xor    al,0x93
  42460d:	inc    eax
  42460e:	fistp  WORD PTR [edx]
  424610:	loope  0x424605
  424612:	shl    al,0xb
  424615:	jle    0x424669
  424617:	push   ebx
  424618:	cmp    ecx,DWORD PTR [esi+0x76]
  42461b:	in     al,0x8d
  42461d:	sbb    BYTE PTR [edx],ah
  42461f:	sahf   
  424620:	pop    ecx
  424621:	jns    0x4245ee
  424623:	xchg   BYTE PTR [eax],cl
  424625:	sbb    eax,DWORD PTR [edx+0x5a]
  424628:	push   ds
  424629:	jae    0x4246a5
  42462b:	ror    ecx,0xb0
  42462e:	mov    ah,0xcc
  424630:	xchg   ecx,eax
  424631:	dec    ebx
  424632:	or     al,0x48
  424634:	ret    0xd441
  424637:	push   ebp
  424638:	mov    WORD PTR [eax],?
  42463a:	ror    DWORD PTR [esi],1
  42463c:	xchg   ebx,eax
  42463d:	es aad 0xf8
  424640:	data16 (bad) 
  424642:	adc    ebp,DWORD PTR [edx]
  424644:	sar    BYTE PTR [edx+0x301caf20],1
  42464a:	test   eax,0x30f346b5
  424650:	cmp    eax,DWORD PTR [eax-0x4e]
  424653:	(bad)
  424657:	or     dh,BYTE PTR [ecx]
  424659:	out    dx,al
  42465a:	call   0xd8773269
  42465f:	pop    ebp
  424660:	jbe    0x424606
  424662:	cmp    DWORD PTR [ecx+eiz*2],ecx
  424665:	add    eax,DWORD PTR [eax]
  424667:	out    0xaa,al
  424669:	lods   al,BYTE PTR ds:[esi]
  42466a:	xor    eax,0xfa69c130
  424670:	inc    ebp
  424671:	mov    ecx,0x549d4f77
  424676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424677:	and    eax,0xe722eff6
  42467c:	fisttp QWORD PTR [ecx-0x4]
  42467f:	ins    BYTE PTR es:[edi],dx
  424680:	cs ins BYTE PTR es:[edi],dx
  424682:	push   ebp
  424683:	jecxz  0x424702
  424685:	shl    BYTE PTR cs:[eax],cl
  424688:	xor    BYTE PTR [eax+ebx*4+0x5b387c9d],0xfa
  424690:	inc    esp
  424691:	aam    0xa1
  424693:	xlat   BYTE PTR ds:[ebx]
  424694:	add    DWORD PTR [ebx+edx*4],esp
  424697:	(bad)  
  424698:	dec    eax
  424699:	push   0x319aa9c0
  42469e:	mov    esp,0x8c6a20c7
  4246a3:	cmp    BYTE PTR ds:0x2ed3bfbf,0x7f
  4246aa:	xchg   edi,eax
  4246ab:	xor    al,0xc7
  4246ad:	loop   0x424655
  4246af:	inc    edi
  4246b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246b1:	aad    0x8f
  4246b3:	xchg   edx,eax
  4246b4:	pop    eax
  4246b5:	push   ss
  4246b6:	retf   
  4246b7:	sub    esi,DWORD PTR [esi-0x35]
  4246ba:	jp     0x4246d3
  4246bc:	and    BYTE PTR [ebp+ecx*4+0x6f],bh
  4246c0:	jge    0x4246c2
  4246c2:	test   al,0xe4
  4246c4:	mul    ebx
  4246c6:	mov    al,ds:0xd30513b4
  4246cb:	mov    ebx,0x48fd068d
  4246d0:	xchg   esi,eax
  4246d1:	fsubr  DWORD PTR [esp+ebp*2-0x12fadd9d]
  4246d8:	ins    BYTE PTR es:[edi],dx
  4246d9:	loopne 0x424722
  4246db:	(bad)  
  4246dc:	jne    0x4246bb
  4246de:	xor    BYTE PTR [ecx-0x25916fde],ah
  4246e4:	jmp    0xad6d7bc1
  4246e9:	xchg   ebx,eax
  4246ea:	mov    ah,0x98
  4246ec:	mov    ebp,0x35fd5b14
  4246f1:	add    ebx,ebp
  4246f3:	fadd   st,st(2)
  4246f5:	sbb    eax,0xc7d2e9d2
  4246fa:	and    DWORD PTR [ebx],eax
  4246fc:	add    BYTE PTR [ebp+eiz*1-0x21],0xda
  424701:	test   DWORD PTR [ebx+0x1a47672],edi
  424707:	(bad)  
  424708:	icebp  
  424709:	jmp    0x42476c
  42470b:	scas   al,BYTE PTR es:[edi]
  42470c:	xor    BYTE PTR [eax],0xc8
  42470f:	or     ah,bh
  424711:	or     eax,0x2bc61931
  424716:	test   eax,0x93f5b1ec
  42471b:	and    al,0x6f
  42471d:	sbb    al,0x2
  42471f:	xor    DWORD PTR [eax],edx
  424721:	push   ss
  424722:	xchg   ecx,eax
  424723:	out    0x9b,al
  424725:	mov    ds:0xb84e5906,al
  42472a:	in     eax,dx
  42472b:	mov    ah,0x81
  42472d:	call   0x16dc:0x8dc601d7
  424734:	add    al,0xfe
  424736:	add    eax,0x4fb913d6
  42473b:	add    dh,ch
  42473d:	add    BYTE PTR ds:0x5476064d,al
  424743:	lds    esp,FWORD PTR [ecx+eax*8]
  424746:	aas    
  424747:	and    ebx,esi
  424749:	push   esp
  42474a:	sbb    BYTE PTR [ebp-0x22],dh
  42474d:	int3   
  42474e:	int3   
  42474f:	int3   
  424750:	or     cl,BYTE PTR [ebp-0x1fa8dc6f]
  424756:	lock dec edi
  424758:	xor    al,0x5a
  42475a:	sub    eax,0x88d8671b
  42475f:	adc    al,0x29
  424761:	sub    ebx,DWORD PTR [edx+0x71]
  424764:	xchg   ebp,eax
  424765:	lock dec ecx
  424767:	push   edx
  424768:	cmp    BYTE PTR [edi-0x7d],ch
  42476b:	mov    ecx,DWORD PTR [edx]
  42476d:	popa   
  42476e:	lods   eax,DWORD PTR ds:[esi]
  42476f:	aaa    
  424770:	rcr    BYTE PTR [ebx+eax*2-0x1c],cl
  424774:	aam    0x5f
  424776:	mov    ds:0x4769379,eax
  42477b:	and    al,0x43
  42477d:	retf   
  42477e:	aas    
  42477f:	and    bh,BYTE PTR [esi-0xbd7450d]
  424785:	(bad)  
  424786:	cmp    eax,ecx
  424788:	(bad)  
  424789:	sub    DWORD PTR [edx+0x7b],esi
  42478c:	dec    esp
  42478d:	add    DWORD PTR [esi],ebx
  42478f:	or     esi,ecx
  424791:	inc    ebx
  424792:	lock sbb BYTE PTR [edi],dl
  424795:	jo     0x42478a
  424797:	arpl   WORD PTR ds:0x8fecdcf9,dx
  42479d:	mov    ebx,0x6e110c18
  4247a2:	push   ss
  4247a3:	in     al,dx
  4247a4:	sbb    eax,0x303c3eb9
  4247a9:	inc    esp
  4247aa:	cmp    ebp,DWORD PTR [ebx-0x56c1604c]
  4247b0:	pusha  
  4247b1:	cli    
  4247b2:	sub    eax,0xbab1a2a
  4247b7:	adc    ebp,0x7899f284
  4247bd:	xor    BYTE PTR [edi-0x57eaab1b],al
  4247c3:	sub    BYTE PTR [edi+0x3],dh
  4247c6:	sahf   
  4247c7:	retf   0xdf98
  4247ca:	mov    edi,0x57c12450
  4247cf:	cli    
  4247d0:	xor    esi,ecx
  4247d2:	mov    edx,0x9b2174ea
  4247d7:	mov    al,0x8f
  4247d9:	ja     0x4247be
  4247db:	push   0x987598c5
  4247e0:	inc    edx
  4247e1:	dec    ecx
  4247e2:	mov    ds:0xbcf5f226,al
  4247e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247e8:	ins    DWORD PTR es:[edi],dx
  4247e9:	inc    edi
  4247ea:	popa   
  4247eb:	imul   DWORD PTR [esi-0x321f48e8]
  4247f1:	out    0xe6,al
  4247f3:	mov    ah,0x75
  4247f5:	xchg   ecx,eax
  4247f6:	aad    0x72
  4247f8:	mov    BYTE PTR [edx+eiz*2],dh
  4247fb:	push   esp
  4247fc:	sbb    DWORD PTR [ebx-0x538e6717],0x44
  424803:	call   0x20d7:0xfdb26a8d
  42480a:	ror    BYTE PTR [edx],1
  42480c:	cmc    
  42480d:	retf   0xbfa2
  424810:	in     eax,dx
  424811:	test   eax,0xd607f484
  424816:	loope  0x4247c8
  424818:	imul   ebx,DWORD PTR [eax+0x5e],0xa17b9c4b
  42481f:	das    
  424820:	push   ss
  424821:	push   es
  424822:	xchg   edx,eax
  424823:	and    DWORD PTR ds:0x732d0bc0,eax
  424829:	sti    
  42482a:	sbb    ebp,eax
  42482c:	sub    DWORD PTR [edx-0x1c],edi
  42482f:	je     0x4247b3
  424831:	pop    edx
  424832:	push   0xe585bf40
  424837:	or     BYTE PTR [ecx-0x4af9029c],bl
  42483d:	mov    bl,0x37
  42483f:	xchg   ebx,eax
  424840:	sub    al,0x46
  424842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424843:	mov    cl,0x6d
  424845:	(bad)  
  424846:	int    0x45
  424848:	aaa    
  424849:	aam    0x68
  42484b:	inc    ebp
  42484c:	adc    al,0x36
  42484e:	push   edi
  42484f:	cdq    
  424850:	fwait
  424851:	jnp    0x42484b
  424853:	xchg   edi,eax
  424854:	gs inc ebp
  424856:	mov    ecx,ebx
  424858:	arpl   WORD PTR ds:0x25b51c29,bx
  42485e:	ins    DWORD PTR es:[edi],dx
  42485f:	in     eax,0xd0
  424861:	mov    ah,0xb5
  424863:	dec    ebp
  424864:	inc    eax
  424865:	jmp    0x4248d0
  424867:	inc    eax
  424868:	clc    
  424869:	xchg   ebx,eax
  42486a:	ror    BYTE PTR [ebp-0x7131715],0x84
  424871:	push   edi
  424872:	or     al,0xf8
  424874:	xchg   edx,eax
  424875:	ss or  al,0x5a
  424878:	out    0x51,al
  42487a:	bound  eax,QWORD PTR [ebx-0x3b]
  42487d:	das    
  42487e:	ja     0x4248b0
  424880:	xchg   edi,eax
  424881:	hlt    
  424882:	xchg   ebp,eax
  424883:	pusha  
  424884:	out    dx,eax
  424885:	rcr    DWORD PTR [edi+0x31],cl
  424888:	push   esp
  424889:	repnz inc esi
  42488b:	test   BYTE PTR [ebp-0x5e43b5e3],bh
  424891:	js     0x42488f
  424893:	mov    dl,0xdd
  424895:	adc    DWORD PTR [eax+0x53],esp
  424898:	jmp    0x4248af
  42489a:	and    ch,bh
  42489c:	loope  0x4248f7
  42489e:	add    al,BYTE PTR [esi]
  4248a0:	adc    ebp,DWORD PTR [eax]
  4248a2:	or     eax,DWORD PTR [ebx+eiz*4+0x5a]
  4248a6:	mov    BYTE PTR [edx-0x5a],bl
  4248a9:	popf   
  4248aa:	pop    ds
  4248ab:	ss push 0x27950d79
  4248b1:	or     BYTE PTR [ecx+eax*4],ch
  4248b4:	nop
  4248b5:	mov    WORD PTR [eax+0x7f],ds
  4248b8:	and    al,0x4a
  4248ba:	pop    es
  4248bb:	es in  al,0x25
  4248be:	xor    al,0xa9
  4248c0:	push   ecx
  4248c1:	jmp    0x42488b
  4248c3:	gs call 0xd49a9dfa
  4248c9:	pop    esp
  4248ca:	das    
  4248cb:	aas    
  4248cc:	add    al,ch
  4248ce:	sbb    eax,0x3bf77cfe
  4248d3:	push   edi
  4248d4:	and    al,0xb0
  4248d6:	push   es
  4248d7:	mov    cl,0xf9
  4248d9:	mov    al,ds:0x2d3e6aaa
  4248de:	in     eax,dx
  4248df:	cli    
  4248e0:	fcom   st(1)
  4248e2:	les    ecx,FWORD PTR [edi+eax*4-0x60]
  4248e6:	or     al,BYTE PTR [eax]
  4248e8:	xor    dh,dh
  4248ea:	(bad)  [ebp+ebp*4+0x47]
  4248ee:	jb     0x42491e
  4248f0:	pop    edx
  4248f1:	rsm    
  4248f3:	daa    
  4248f4:	nop
  4248f5:	jno    0x4248c7
  4248f7:	test   BYTE PTR [ecx+0x32],0x2b
  4248fb:	sub    eax,0xae24b4c0
  424900:	mov    al,ds:0xcaccda92
  424905:	adc    bl,al
  424907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424908:	imul   esi,DWORD PTR [edx+0x30d51c51],0x26
  42490f:	cld    
  424910:	mov    esi,0x94466f76
  424915:	push   eax
  424916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424917:	mov    ebx,0x3f9a12a4
  42491c:	cmp    al,0xbc
  42491e:	js     0x4248da
  424920:	sbb    ecx,eax
  424922:	push   cs
  424923:	xor    eax,0x596ec32
  424928:	enter  0xec93,0x35
  42492c:	xchg   ebx,eax
  42492d:	push   esp
  42492e:	dec    edx
  42492f:	mov    BYTE PTR [ebp-0x5a],dh
  424932:	imul   edx,DWORD PTR [eax],0x8
  424935:	cmc    
  424936:	sbb    esp,DWORD PTR [ebp+0x7814acf0]
  42493c:	mov    eax,0xe365fc17
  424941:	pop    es
  424942:	cmp    ch,BYTE PTR [eax]
  424944:	push   ebx
  424945:	fcomp  QWORD PTR [edx]
  424947:	push   eax
  424948:	arpl   si,ax
  42494a:	pop    edx
  42494b:	shl    bl,0x9
  42494e:	add    BYTE PTR [ecx-0x3ba3334f],ch
  424954:	or     BYTE PTR [eax-0x788ddb01],al
  42495a:	les    eax,FWORD PTR [edx]
  42495c:	sub    BYTE PTR [esi],cl
  42495e:	dec    edx
  42495f:	fisttp WORD PTR [eax-0x44]
  424962:	call   0x2a1a635d
  424967:	push   ss
  424968:	pop    eax
  424969:	lock dec esp
  42496b:	mov    edi,0x6924756c
  424970:	jg     0x4248f3
  424972:	adc    al,0x82
  424974:	adc    al,0xdd
  424976:	cmp    DWORD PTR [edx],0x38fc191c
  42497c:	cmp    eax,0xfa829d5
  424981:	jae    0x424909
  424983:	repz pop esp
  424985:	dec    edi
  424986:	adc    al,0x83
  424988:	inc    esi
  424989:	ins    DWORD PTR es:[edi],dx
  42498a:	and    ch,BYTE PTR [ecx-0x3f1afb7e]
  424990:	jb     0x42497f
  424992:	jnp    0x42495c
  424994:	std    
  424995:	es sub bl,ah
  424998:	xchg   ecx,eax
  424999:	stos   BYTE PTR es:[edi],al
  42499a:	inc    ebp
  42499b:	xor    DWORD PTR [eax],0x48
  42499e:	or     BYTE PTR [edx+eiz*1-0x47],0xdc
  4249a3:	int3   
  4249a4:	sar    DWORD PTR [edi-0x5f],cl
  4249a7:	retf   0x2870
  4249aa:	dec    ebp
  4249ab:	mov    al,0xf0
  4249ad:	and    al,BYTE PTR [ebp-0x6a6b8029]
  4249b3:	int3   
  4249b4:	inc    edi
  4249b5:	sub    ah,dl
  4249b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249b8:	jmp    0x424a29
  4249ba:	cmp    al,0x32
  4249bc:	jmp    0x424961
  4249be:	leave  
  4249bf:	mov    esi,DWORD PTR [esp+ebx*4+0x47]
  4249c6:	add    BYTE PTR [eax],al
  4249c8:	cs sbb ah,bl
  4249cb:	dec    esi
  4249cc:	push   ecx
  4249cd:	or     DWORD PTR [eax],eax
  4249cf:	add    BYTE PTR [eax],al
  4249d1:	add    BYTE PTR [eax],al
  4249d3:	add    BYTE PTR [ecx+0x9],dl
  4249d6:	add    BYTE PTR [eax],al
  4249d8:	sub    al,BYTE PTR [eax]
  4249da:	es jl  0x4249dd
  4249dd:	add    dh,BYTE PTR [esi]
  4249df:	or     BYTE PTR [eax],al
  4249e1:	add    ah,al
  4249e3:	inc    ebp
  4249e4:	add    BYTE PTR [edi],ch
  4249e6:	push   ebp
  4249e7:	jno    0x424975
  4249e9:	mov    ebx,0x24fdf996
  4249ee:	mov    al,ds:0x97b779f4
  4249f3:	and    DWORD PTR [esi-0x31],esi
  4249f6:	dec    eax
  4249f7:	outs   dx,DWORD PTR ds:[esi]
  4249f8:	sahf   
  4249f9:	fdiv   QWORD PTR [esi-0x4a5fa535]
  4249ff:	ins    BYTE PTR es:[edi],dx
  424a00:	add    bh,BYTE PTR [eax-0x406766c8]
  424a06:	sti    
  424a07:	stos   BYTE PTR es:[edi],al
  424a08:	nop
  424a09:	rol    BYTE PTR [eax+eiz*1+0x5f],cl
  424a0d:	sub    edx,ebp
  424a0f:	cwde   
  424a10:	scas   eax,DWORD PTR es:[edi]
  424a11:	cmp    dh,cl
  424a13:	ins    DWORD PTR es:[edi],dx
  424a14:	inc    edi
  424a15:	push   0xc92bd2c8
  424a1a:	pop    esp
  424a1b:	inc    ebx
  424a1c:	xchg   ebp,eax
  424a1d:	jns    0x4249fd
  424a1f:	dec    esp
  424a20:	push   ecx
  424a21:	adc    DWORD PTR [ecx],edi
  424a23:	adc    bl,0x2a
  424a26:	mov    BYTE PTR [ebp-0x2f],ah
  424a29:	xor    al,0x9
  424a2b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  424a2d:	icebp  
  424a2e:	adc    ebx,esp
  424a30:	add    al,0xea
  424a32:	sbb    BYTE PTR [esi-0x37],ch
  424a35:	dec    esp
  424a36:	mov    dl,0x41
  424a38:	pusha  
  424a39:	test   eax,esp
  424a3b:	sbb    BYTE PTR [ebp+0x23],dh
  424a3e:	jo     0x424a7d
  424a40:	sbb    edx,edi
  424a42:	clc    
  424a43:	mov    esp,0x94972398
  424a48:	fistp  DWORD PTR [edi+0x4f]
  424a4b:	xor    ebx,ecx
  424a4d:	push   edi
  424a4e:	test   eax,ecx
  424a50:	mov    eax,0xca1263a
  424a55:	or     ch,BYTE PTR [ecx]
  424a57:	cmp    al,0x48
  424a59:	fsub   QWORD PTR [eax+0x53e1d4c0]
  424a5f:	mov    ebx,0xb58416e3
  424a64:	int    0xde
  424a66:	leave  
  424a67:	repz popa 
  424a69:	loopne 0x424a6b
  424a6b:	test   al,0x91
  424a6d:	push   esi
  424a6e:	aad    0x34
  424a70:	xchg   ebp,eax
  424a71:	pop    DWORD PTR [ebx+0x6d96cc41]
  424a77:	jno    0x424ad0
  424a79:	and    DWORD PTR [edi+eax*4],edi
  424a7c:	mov    al,ds:0x84a12df0
  424a81:	push   cs
  424a82:	stos   BYTE PTR es:[edi],al
  424a83:	cwde   
  424a84:	popa   
  424a85:	cmp    eax,0x8ae1d914
  424a8a:	xor    ch,BYTE PTR [edx-0x4320497e]
  424a90:	shl    DWORD PTR [ecx-0x1a2f3ec3],1
  424a96:	xchg   BYTE PTR [edi+0x2010cae0],dl
  424a9c:	out    0x1f,al
  424a9e:	xchg   esp,eax
  424a9f:	jmp    0x9b48:0x252204a3
  424aa6:	arpl   WORD PTR [ebx+ebp*2-0x75],sp
  424aaa:	sub    BYTE PTR [eax-0x222f3eef],bl
  424ab0:	cmp    al,0x8
  424ab2:	cdq    
  424ab3:	rcl    BYTE PTR [edx],1
  424ab5:	arpl   WORD PTR [edx-0x21c17063],sp
  424abb:	lock hlt 
  424abd:	and    al,0xf9
  424abf:	int3   
  424ac0:	dec    ebx
  424ac1:	mov    al,0x7
  424ac3:	fst    QWORD PTR [ecx+0x18]
  424ac6:	add    al,0x21
  424ac8:	and    edx,DWORD PTR [ecx+0x1c]
  424acb:	stos   DWORD PTR es:[edi],eax
  424acc:	je     0x424b2d
  424ace:	cmp    al,0xd4
  424ad0:	out    dx,eax
  424ad1:	out    0xbf,al
  424ad3:	jne    0x424a87
  424ad5:	sbb    eax,0x21f96097
  424ada:	pop    ebx
  424adb:	jmp    0x424b3f
  424add:	jmp    0xf20f:0x3608e5ad
  424ae4:	add    al,bh
  424ae6:	call   0x3852:0x62c7eae
  424aed:	mov    al,dl
  424aef:	imul   esp,esi,0x1a
  424af2:	push   eax
  424af3:	adc    al,BYTE PTR [ebx-0x410bd0a4]
  424af9:	int    0x34
  424afb:	je     0x424a81
  424afd:	xchg   esi,eax
  424afe:	ret    
  424aff:	adc    bh,BYTE PTR [edi+0xc]
  424b02:	sub    edi,esi
  424b04:	sbb    al,0x53
  424b06:	mov    ds:0x74ddc148,eax
  424b0b:	mov    dl,0xbf
  424b0d:	inc    eax
  424b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b0f:	add    BYTE PTR [esp+ebx*1+0x6e2d1b32],bh
  424b16:	adc    BYTE PTR fs:0x8aad150,ch
  424b1d:	pop    esp
  424b1e:	int3   
  424b1f:	mov    BYTE PTR [edx],ah
  424b21:	push   edx
  424b22:	lea    edi,ds:0x5c98678c
  424b28:	lods   al,BYTE PTR ds:[esi]
  424b29:	es into 
  424b2b:	ret    0x4386
  424b2e:	push   ebx
  424b2f:	jno    0x424ade
  424b31:	push   esp
  424b32:	(bad)
  424b35:	jmp    DWORD PTR [ecx+0x56]
  424b38:	aaa    
  424b39:	in     eax,dx
  424b3a:	js     0x424b12
  424b3c:	cwde   
  424b3d:	xchg   ebx,eax
  424b3e:	xchg   edx,eax
  424b3f:	loope  0x424b8b
  424b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b42:	sbb    ebx,DWORD PTR [esi+eiz*2+0x41f538ec]
  424b49:	xchg   ecx,eax
  424b4a:	in     al,dx
  424b4b:	cdq    
  424b4c:	ror    BYTE PTR [edx],0x87
  424b4f:	stos   DWORD PTR es:[edi],eax
  424b50:	mov    ds:0x766a5b9d,al
  424b55:	in     al,0x30
  424b57:	aaa    
  424b58:	into   
  424b59:	mov    esi,0x9e2a983c
  424b5e:	mov    WORD PTR [ecx-0x7d],?
  424b61:	ficomp DWORD PTR [esi-0x6b6391fb]
  424b67:	mov    al,0xf9
  424b69:	(bad)  
  424b6a:	dec    edx
  424b6b:	jg     0x424ba2
  424b6d:	test   al,0x91
  424b6f:	pusha  
  424b70:	aam    0x63
  424b72:	or     esi,DWORD PTR [edi+0x16]
  424b75:	cdq    
  424b76:	inc    edi
  424b77:	iret   
  424b78:	and    bh,al
  424b7a:	mov    ebp,DWORD PTR [esi+ecx*4]
  424b7d:	out    dx,al
  424b7e:	push   ecx
  424b7f:	jae    0x424b42
  424b81:	stos   DWORD PTR es:[edi],eax
  424b82:	mov    al,ds:0xf37c8c58
  424b87:	mov    al,ds:0xc406f546
  424b8c:	xor    eax,0xf598d710
  424b91:	and    bl,ch
  424b93:	shr    eax,cl
  424b95:	cli    
  424b96:	arpl   di,dx
  424b98:	scas   al,BYTE PTR es:[edi]
  424b99:	retf   
  424b9a:	scas   eax,DWORD PTR es:[edi]
  424b9b:	sbb    ebx,ecx
  424b9d:	or     al,0x96
  424b9f:	push   ebx
  424ba0:	jns    0x424b83
  424ba2:	or     ch,BYTE PTR [esi+eax*2-0x5a10cff1]
  424ba9:	xchg   edi,eax
  424baa:	add    al,0x2b
  424bac:	cmp    al,0xd5
  424bae:	mov    bh,0xd8
  424bb0:	out    dx,al
  424bb1:	(bad)  
  424bb2:	pop    ss
  424bb3:	ss cli 
  424bb5:	push   esi
  424bb6:	fiadd  DWORD PTR [ebx-0x4]
  424bb9:	inc    eax
  424bba:	pop    ss
  424bbb:	sbb    esi,DWORD PTR [ebx]
  424bbd:	xor    eax,0x20e6ee62
  424bc2:	or     al,0x3f
  424bc4:	xor    dh,dl
  424bc6:	or     eax,0x4422b9fb
  424bcb:	lods   eax,DWORD PTR ds:[esi]
  424bcc:	stc    
  424bcd:	cmp    esi,esp
  424bcf:	xchg   edi,eax
  424bd0:	fistp  QWORD PTR [edx+0x64]
  424bd3:	in     al,dx
  424bd4:	and    ebx,DWORD PTR cs:[ebp+0x39e8847]
  424bdb:	lea    edx,[eax]
  424bdd:	xor    ch,BYTE PTR [esp+esi*4-0x60]
  424be1:	ret    0x6454
  424be4:	inc    edi
  424be5:	xor    al,0xce
  424be7:	push   ebx
  424be8:	xor    al,0x19
  424bea:	gs jle 0x424b83
  424bed:	xchg   edx,eax
  424bee:	pop    eax
  424bef:	ret    
  424bf0:	pop    DWORD PTR [ebx]
  424bf2:	outs   dx,BYTE PTR ds:[esi]
  424bf3:	int3   
  424bf4:	lods   al,BYTE PTR ds:[esi]
  424bf5:	inc    edx
  424bf6:	pop    edx
  424bf7:	jl     0x424c1c
  424bf9:	hlt    
  424bfa:	pushw  cs
  424bfc:	add    DWORD PTR [esi+ebx*4-0x706adb53],esp
  424c03:	mov    DWORD PTR [esi+esi*8+0x480f9356],ebp
  424c0a:	add    eax,0xe4a27185
  424c0f:	stos   BYTE PTR es:[edi],al
  424c10:	into   
  424c11:	mov    ah,0x6c
  424c13:	jbe    0x424c84
  424c15:	dec    ebp
  424c16:	and    dl,BYTE PTR [ecx+eax*4+0x25]
  424c1a:	daa    
  424c1b:	nop
  424c1c:	add    DWORD PTR ds:0x9a12bbe6,0x6db46fd8
  424c26:	push   esi
  424c27:	imul   esi,ebp,0x4e2f4037
  424c2d:	pop    esp
  424c2e:	or     al,0xb3
  424c30:	retf   
  424c31:	in     eax,0x5a
  424c33:	in     al,0x59
  424c35:	inc    ebp
  424c36:	cmp    dh,0x6c
  424c39:	js     0x424c4f
  424c3b:	cmp    al,0x2e
  424c3d:	sbb    DWORD PTR [esi-0x5c],0xb233a857
  424c44:	push   0xffffffff
  424c46:	adc    ebx,ebx
  424c48:	enter  0x5e5d,0x2d
  424c4c:	test   eax,0x739fa876
  424c51:	jo     0x424c5e
  424c53:	dec    esp
  424c54:	mov    ss,WORD PTR [eax-0x6496a40d]
  424c5a:	xchg   esp,eax
  424c5b:	push   esp
  424c5c:	xchg   ebp,eax
  424c5d:	xchg   edi,eax
  424c5e:	mov    edx,DWORD PTR [ebp-0x47314871]
  424c64:	scas   eax,DWORD PTR es:[edi]
  424c65:	out    0xe8,al
  424c67:	ret    
  424c68:	aas    
  424c69:	push   esi
  424c6a:	cmp    esp,eax
  424c6c:	fsubr  st(7),st
  424c6e:	shl    DWORD PTR [ebp-0x63],0x67
  424c72:	mov    al,0x10
  424c74:	xor    eax,0x47c6ed00
  424c79:	push   ebx
  424c7a:	sbb    BYTE PTR [esi],dl
  424c7c:	ret    
  424c7d:	add    eax,0x311198a8
  424c82:	xchg   bh,bl
  424c84:	cli    
  424c85:	mov    al,0xe9
  424c87:	int3   
  424c88:	daa    
  424c89:	fwait
  424c8a:	jnp    0x424cb6
  424c8c:	adc    al,0x2c
  424c8e:	fisttp QWORD PTR [esi]
  424c90:	lock jmp 0xea17137
  424c96:	sbb    eax,DWORD PTR [edx-0x15]
  424c99:	adc    al,0x79
  424c9b:	mov    ah,0xde
  424c9d:	dec    edi
  424c9e:	pop    ss
  424c9f:	push   ebp
  424ca0:	lods   eax,DWORD PTR ds:[esi]
  424ca1:	das    
  424ca2:	mov    esp,0xe0bebbc0
  424ca7:	mov    dh,BYTE PTR [edx-0x421fb8a6]
  424cad:	sub    al,BYTE PTR [eax-0x44]
  424cb0:	loopne 0x424c6d
  424cb2:	aaa    
  424cb3:	xor    BYTE PTR [esi+ebp*1],al
  424cb6:	sahf   
  424cb7:	mov    dh,0x86
  424cb9:	lods   al,BYTE PTR ds:[esi]
  424cba:	jg     0x424cca
  424cbc:	xor    eax,0x8a65f28
  424cc1:	test   al,0x62
  424cc3:	cs jnp 0x424cff
  424cc6:	dec    esp
  424cc7:	and    dl,BYTE PTR [edi-0x2d851e77]
  424ccd:	inc    ebx
  424cce:	jmp    0xda37:0xbba0cff4
  424cd5:	and    DWORD PTR [ebx+0x199118e3],ebp
  424cdb:	sub    DWORD PTR [edi-0x39973cdc],edi
  424ce1:	cmp    al,0x45
  424ce3:	mov    ds:0x918324d6,al
  424ce8:	pop    eax
  424ce9:	loope  0x424d4b
  424ceb:	inc    esp
  424cec:	out    dx,eax
  424ced:	ror    BYTE PTR [eax-0x287a6a21],1
  424cf3:	test   BYTE PTR [ecx+edi*4-0xa0aad50],ch
  424cfa:	jno    0x424d3e
  424cfc:	sub    al,0xe8
  424cfe:	popf   
  424cff:	lahf   
  424d00:	xor    al,0x67
  424d02:	push   ecx
  424d03:	mov    al,cs:0x6d0fab50
  424d09:	push   cs
  424d0a:	xchg   edi,eax
  424d0b:	cs icebp 
  424d0d:	mov    DWORD PTR [esp+eax*8+0x70],esi
  424d11:	aaa    
  424d12:	out    dx,al
  424d13:	dec    edi
  424d14:	mov    edx,0xa09896f0
  424d19:	add    DWORD PTR [ebx-0x64],0xaaa12908
  424d20:	inc    eax
  424d21:	jle    0x424cb8
  424d23:	or     ebx,DWORD PTR [esi+0x64905573]
  424d29:	fs ret 0x50bc
  424d2d:	pop    ds
  424d2e:	jle    0x424dae
  424d30:	push   esi
  424d31:	lods   eax,DWORD PTR ds:[esi]
  424d32:	mov    dl,cl
  424d34:	das    
  424d35:	and    al,0xd7
  424d37:	sub    eax,DWORD PTR [ebx+ebx*1]
  424d3a:	lock lods al,BYTE PTR ds:[esi]
  424d3c:	mov    eax,0xee1bcc40
  424d41:	jnp    0x424d24
  424d43:	and    edx,eax
  424d45:	int3   
  424d46:	mov    ebp,0x1aa0c7b9
  424d4b:	sub    al,0x34
  424d4d:	js     0x424db9
  424d4f:	jmp    0x424ce8
  424d51:	icebp  
  424d52:	push   esp
  424d53:	xor    esi,DWORD PTR [esi]
  424d55:	cdq    
  424d56:	pushf  
  424d57:	imul   esi,DWORD PTR [ecx+0x2f],0x759930f8
  424d5e:	dec    eax
  424d5f:	sar    BYTE PTR [edi-0x57],0xd1
  424d63:	sub    ebp,DWORD PTR fs:[edi+0x18]
  424d67:	or     eax,0xea209ae4
  424d6c:	(bad)  
  424d6d:	stos   DWORD PTR es:[edi],eax
  424d6e:	rol    bh,0x8f
  424d71:	mov    WORD PTR [edx+0x2a75bc1],ss
  424d77:	mov    ebp,0x99b09d0e
  424d7c:	ficom  DWORD PTR [ebp-0x35]
  424d7f:	push   si
  424d81:	inc    ebx
  424d82:	cld    
  424d83:	aam    0x4e
  424d85:	dec    ebx
  424d86:	xchg   edx,eax
  424d87:	mov    bl,0xb1
  424d89:	adc    BYTE PTR [edx-0x44],cl
  424d8c:	clc    
  424d8d:	inc    eax
  424d8e:	sahf   
  424d8f:	call   0x1c1a:0x85ff2307
  424d96:	sti    
  424d97:	ret    0x655e
  424d9a:	mov    ds:0xc4d2fff2,al
  424d9f:	mov    ah,0xc5
  424da1:	into   
  424da2:	xchg   edx,eax
  424da3:	cli    
  424da4:	iret   
  424da5:	xchg   esp,eax
  424da6:	outs   dx,BYTE PTR ds:[esi]
  424da7:	call   0x10f483c1
  424dac:	dec    ecx
  424dad:	mov    edi,0x260ce572
  424db2:	and    eax,0x8189d741
  424db7:	call   0x21aa7e83
  424dbc:	fimul  DWORD PTR [ebp-0x69]
  424dbf:	fsub   QWORD PTR ds:0x7047d805
  424dc5:	mov    gs,esp
  424dc7:	mov    edi,0xfc3a9f5f
  424dcc:	add    eax,0xc76c5210
  424dd1:	mov    ebp,0xbb20a707
  424dd6:	dec    ebx
  424dd7:	cdq    
  424dd8:	pop    ebp
  424dd9:	sbb    eax,0x447ea231
  424dde:	xor    DWORD PTR [esi+edi*4],edi
  424de1:	pop    ebp
  424de2:	frndint 
  424de4:	mov    eax,ds:0x671f68b1
  424de9:	dec    ecx
  424dea:	arpl   WORD PTR [eax],ax
  424dec:	adc    al,0xc4
  424dee:	push   0x10
  424df0:	shl    BYTE PTR [edx-0x12eb585b],0xcb
  424df7:	jg     0x424e2d
  424df9:	out    0xb,eax
  424dfb:	cmp    bh,dl
  424dfd:	inc    eax
  424dfe:	(bad)  
  424dff:	ins    DWORD PTR es:[edi],dx
  424e00:	cmp    BYTE PTR [eax+0x42],bl
  424e03:	xchg   esi,eax
  424e04:	xlat   BYTE PTR ds:[ebx]
  424e05:	jmp    0xc41a8865
  424e0a:	jl     0x424da9
  424e0c:	stos   DWORD PTR es:[edi],eax
  424e0d:	mov    edi,0xf3a28efe
  424e12:	and    DWORD PTR [eax-0x59b534],esp
  424e18:	cmp    esi,DWORD PTR [esi-0xcb799fe]
  424e1e:	mov    edx,0xc67a1297
  424e23:	scas   al,BYTE PTR es:[edi]
  424e24:	das    
  424e25:	ins    BYTE PTR es:[edi],dx
  424e26:	xlat   BYTE PTR ds:[ebx]
  424e27:	cmp    dh,BYTE PTR [eax+edx*4]
  424e2a:	ficom  DWORD PTR [ecx+0x2b904158]
  424e30:	gs push ebx
  424e32:	test   al,0x3e
  424e34:	mov    ebp,0x15b47444
  424e39:	and    eax,0xf0a35de1
  424e3e:	fcom   QWORD PTR [edi]
  424e40:	pop    esp
  424e41:	call   0xe421:0xdca95e91
  424e48:	pop    ecx
  424e49:	sbb    BYTE PTR [ebx],0xa2
  424e4c:	sub    bh,BYTE PTR [ebx-0x23]
  424e4f:	jle    0x424ec3
  424e51:	mov    BYTE PTR [edx+esi*2+0x4af849a0],ah
  424e58:	ins    DWORD PTR es:[edi],dx
  424e59:	mov    dh,0x1d
  424e5b:	enter  0x4fa7,0x11
  424e5f:	mov    eax,ds:0x7df93bab
  424e64:	in     al,dx
  424e65:	dec    ecx
  424e66:	mov    cl,0x46
  424e68:	fild   QWORD PTR [esp+edi*2]
  424e6b:	ror    BYTE PTR ds:0xf909194,0x42
  424e72:	lds    ebp,FWORD PTR ss:[edx-0x57704781]
  424e79:	lock inc edi
  424e7b:	cli    
  424e7c:	and    al,0x86
  424e7e:	push   0xbd51c0dc
  424e83:	or     eax,0x8a9527ec
  424e88:	add    BYTE PTR [esp+edx*1+0x2e673fd4],cl
  424e8f:	inc    esp
  424e90:	inc    edx
  424e91:	test   al,0x68
  424e93:	adc    BYTE PTR [edi],dh
  424e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e96:	loop   0x424ebd
  424e98:	out    dx,al
  424e99:	xchg   ecx,eax
  424e9a:	int3   
  424e9b:	mov    dl,0xe7
  424e9d:	fstp   DWORD PTR [eax-0x69]
  424ea0:	nop
  424ea1:	das    
  424ea2:	jbe    0x424e94
  424ea4:	xchg   ebx,eax
  424ea5:	jno    0x424e2c
  424ea7:	cs jl  0x424e41
  424eaa:	outs   dx,DWORD PTR ds:[esi]
  424eab:	popf   
  424eac:	adc    al,0x7d
  424eae:	retf   
  424eaf:	mov    dl,0x34
  424eb1:	dec    ecx
  424eb2:	push   edx
  424eb3:	bound  ecx,QWORD PTR [ebx+0x78a0a38]
  424eb9:	jmp    0xa1655c50
  424ebe:	loopne 0x424ee2
  424ec0:	sub    edi,DWORD PTR [ecx]
  424ec2:	mov    al,0x46
  424ec4:	sub    ebx,0x93cb0444
  424eca:	in     al,0xca
  424ecc:	popw   ss
  424ece:	cdq    
  424ecf:	cmp    BYTE PTR [eax],ch
  424ed1:	cli    
  424ed2:	cwde   
  424ed3:	jg     0x424e9f
  424ed5:	add    al,0xcf
  424ed7:	out    dx,al
  424ed8:	ds dec esp
  424eda:	bound  edx,QWORD PTR [eax+0x2c]
  424edd:	mov    edi,0x8fae9112
  424ee2:	jo     0x424f1d
  424ee4:	retf   
  424ee5:	push   edi
  424ee6:	jne    0x424f00
  424ee8:	and    bl,al
  424eea:	xchg   edi,eax
  424eeb:	sbb    ch,ch
  424eed:	push   esp
  424eee:	or     al,0x2e
  424ef0:	fcomp  DWORD PTR [ebx+0x6f]
  424ef3:	arpl   WORD PTR [esi+edi*4],di
  424ef6:	add    eax,0x10098965
  424efb:	js     0x424e86
  424efd:	pusha  
  424efe:	sbb    BYTE PTR [eax],dl
  424f00:	jo     0x424f08
  424f02:	fimul  WORD PTR [eax-0xd7bc824]
  424f08:	icebp  
  424f09:	and    eax,0xa4861d78
  424f0e:	pop    ebp
  424f0f:	sub    al,0xf6
  424f11:	mov    ebp,0x28f015f0
  424f16:	and    DWORD PTR [ebx+0x50],eax
  424f19:	fsubr  QWORD PTR [edx]
  424f1b:	and    ecx,edx
  424f1d:	mov    ds:0x74c02abc,eax
  424f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f23:	js     0x424f7c
  424f25:	push   ebp
  424f26:	sti    
  424f27:	mov    eax,0xc098d5f2
  424f2c:	push   ecx
  424f2d:	mov    dl,0x30
  424f2f:	and    DWORD PTR [eax+0x39],ecx
  424f32:	(bad)  
  424f33:	mov    esp,0x5f80b6c4
  424f38:	push   0x64e19ac1
  424f3d:	jp     0x424f91
  424f3f:	mov    eax,0x733415db
  424f44:	cmp    eax,0xd9bea288
  424f49:	out    0x71,eax
  424f4b:	loopne 0x424f1f
  424f4d:	shr    DWORD PTR [ebx+ecx*4+0x52dfbfa8],cl
  424f54:	inc    ebp
  424f55:	dec    edi
  424f56:	inc    ecx
  424f57:	rcl    BYTE PTR [edx+0xc],1
  424f5a:	add    edx,DWORD PTR [ebp+0x4a775da9]
  424f60:	js     0x424f46
  424f62:	aas    
  424f63:	adc    DWORD PTR [ebp+0x5853dee5],0xffffff9c
  424f6a:	int    0xb4
  424f6c:	or     DWORD PTR [ebx],0xffffffdd
  424f6f:	scas   eax,DWORD PTR es:[edi]
  424f70:	sbb    ebx,DWORD PTR [eax+0x533d38c0]
  424f76:	xchg   ebp,eax
  424f77:	test   al,0xf8
  424f79:	ror    BYTE PTR [edx+0x3b4a20e4],0x59
  424f80:	leave  
  424f81:	int    0x5
  424f83:	(bad)  [eax]
  424f85:	dec    ecx
  424f86:	cmp    DWORD PTR [esi-0x63],eax
  424f89:	int3   
  424f8a:	add    BYTE PTR gs:[eax],bl
  424f8d:	mov    al,0x41
  424f8f:	jo     0x424fac
  424f91:	int3   
  424f92:	xchg   DWORD PTR [edi-0x34],ebx
  424f95:	in     eax,dx
  424f96:	aam    0xa8
  424f98:	mov    al,ds:0xa6f9500d
  424f9d:	dec    edi
  424f9e:	inc    ecx
  424f9f:	clc    
  424fa0:	shl    BYTE PTR [ebp+ecx*1-0x1c42aaec],cl
  424fa7:	ja     0x424fc5
  424fa9:	mov    eax,ds:0xb2a7573d
  424fae:	xchg   esp,eax
  424faf:	jne    0x424f5f
  424fb1:	inc    eax
  424fb2:	aam    0x46
  424fb4:	aam    0xa5
  424fb6:	ret    0x6634
  424fb9:	fsubr  st,st(0)
  424fbb:	mov    al,ds:0x1b1a1f92
  424fc0:	xor    eax,0x780ceeb7
  424fc5:	mov    al,ds:0x12a46073
  424fca:	call   0x30d2:0xfc5430a8
  424fd1:	ror    ch,0x87
  424fd4:	repz push esp
  424fd6:	scas   al,BYTE PTR es:[edi]
  424fd7:	pop    edx
  424fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fd9:	dec    ebx
  424fda:	cmp    eax,0xfc6fa42f
  424fdf:	and    dl,cl
  424fe1:	out    0xae,al
  424fe3:	push   0x20d210fc
  424fe8:	pop    esi
  424fe9:	jle    0x424fc4
  424feb:	or     BYTE PTR [ebp+0x44ddd158],bh
  424ff1:	test   eax,0xf9eb3053
  424ff6:	call   0xf67c:0x54686de8
  424ffd:	loopne 0x424fce
  424fff:	and    DWORD PTR [ecx+0x2bfe8cc4],ecx
  425005:	adc    al,0x2
  425007:	inc    esi
  425008:	mov    cl,0x85
  42500a:	sub    BYTE PTR [ecx+edx*2],dh
  42500d:	or     DWORD PTR [ebp+0x2],0x6c
  425011:	fsub   DWORD PTR [edi+0x365a5872]
  425017:	fsubr  st(0),st
  425019:	adc    al,0xbd
  42501b:	pusha  
  42501c:	cld    
  42501d:	jl     0x425090
  42501f:	ins    BYTE PTR es:[edi],dx
  425020:	(bad)  
  425021:	push   esp
  425022:	clc    
  425023:	push   ss
  425024:	ret    
  425025:	call   0xe783:0x1e42a9a0
  42502c:	push   edx
  42502d:	or     BYTE PTR [eax],0x48
  425030:	verw   WORD PTR [esi+0x6c7dc708]
  425037:	imul   BYTE PTR [edx+eiz*4-0x32]
  42503b:	pusha  
  42503c:	in     al,dx
  42503d:	fsub   st,st(5)
  42503f:	pop    eax
  425040:	push   esp
  425041:	nop
  425042:	cmp    dh,BYTE PTR [ebx-0x2618b03e]
  425048:	or     BYTE PTR [esp+esi*4+0x6f78b482],bh
  42504f:	ins    DWORD PTR es:[edi],dx
  425050:	and    bh,BYTE PTR [ebp+0x6f48d8f4]
  425056:	bound  edi,QWORD PTR [ebp-0x68]
  425059:	adc    DWORD PTR [ecx-0xb7f7f36],esp
  42505f:	mov    bl,0x1e
  425061:	xchg   edi,eax
  425062:	sub    ah,BYTE PTR [edx+0x1844a459]
  425068:	jae    0x4250cd
  42506a:	loop   0x4250e9
  42506c:	jne    0x4250eb
  42506e:	enter  0x87f7,0x4
  425072:	push   edi
  425073:	ds dec esi
  425075:	push   ecx
  425076:	dec    edx
  425077:	in     al,dx
  425078:	xor    eax,0x302897f
  42507d:	mov    esi,0x9f108e36
  425082:	loope  0x425045
  425084:	outs   dx,DWORD PTR ds:[esi]
  425085:	sbb    esp,DWORD PTR [eax-0x78]
  425088:	inc    edx
  425089:	mov    eax,0xf4b1edd7
  42508e:	fidivr WORD PTR [esi+0x40dc8f4d]
  425094:	jmp    0x7f45:0xa128cc19
  42509b:	add    BYTE PTR [esi],bl
  42509d:	stos   DWORD PTR es:[edi],eax
  42509e:	xor    DWORD PTR fs:[ecx+0x6c],edi
  4250a2:	daa    
  4250a3:	inc    edi
  4250a4:	and    al,0xe
  4250a6:	dec    ecx
  4250a7:	jno    0x4250e3
  4250a9:	xchg   edi,eax
  4250aa:	repz adc DWORD PTR [eax-0x34],edx
  4250ae:	add    eax,DWORD PTR [ebp-0x3b4615b]
  4250b4:	mov    al,ds:0xe626f0dc
  4250b9:	xor    dl,BYTE PTR [ecx]
  4250bb:	mov    al,al
  4250bd:	mov    ebp,0x9d8a1458
  4250c2:	or     dl,BYTE PTR [esi-0x40]
  4250c5:	enter  0x869a,0x38
  4250c9:	jmp    0x425114
  4250cb:	sub    eax,0x85c6aa2
  4250d0:	je     0x42512e
  4250d2:	sub    ebp,DWORD PTR [edx]
  4250d4:	dec    ebp
  4250d5:	jns    0x4250cd
  4250d7:	fnstcw WORD PTR [ecx-0x26]
  4250da:	add    al,0xa
  4250dc:	fldenv [ecx+0x75]
  4250df:	sbb    eax,0x2819170c
  4250e4:	enter  0x337d,0x8
  4250e8:	push   ebp
  4250e9:	clc    
  4250ea:	push   ss
  4250eb:	jge    0x425139
  4250ed:	dec    esi
  4250ee:	fiadd  WORD PTR [eax+0x5fa00fc2]
  4250f4:	data16 jo 0x425119
  4250f7:	mov    DWORD PTR [ebx-0x28],edi
  4250fa:	adc    esp,edx
  4250fc:	mov    ds:0x9ba918ca,al
  425101:	xor    BYTE PTR [ecx+edi*4+0x3c494adc],bl
  425108:	or     edi,ebp
  42510a:	gs nop
  42510c:	mov    al,ds:0x600fe926
  425111:	aam    0x69
  425113:	adc    al,0xb5
  425115:	iret   
  425116:	std    
  425117:	pop    edi
  425118:	push   ebp
  425119:	test   BYTE PTR [edx+0x4e332618],bl
  42511f:	retf   0xaa0b
  425122:	test   al,0x34
  425124:	add    dl,BYTE PTR [ebp-0x3c]
  425127:	inc    ch
  425129:	iret   
  42512a:	out    dx,eax
  42512b:	push   eax
  42512c:	aaa    
  42512d:	add    eax,0x6227adbc
  425132:	div    eax
  425134:	je     0x42513e
  425136:	sub    eax,0xc707fd1d
  42513b:	leave  
  42513c:	sbb    al,0x98
  42513e:	mov    ss,WORD PTR [esp+esi*4-0x8c1d0d8]
  425145:	or     BYTE PTR [esi+eiz*4-0x7fd54efa],bh
  42514c:	pop    es
  42514d:	loop   0x42517d
  42514f:	loopne 0x42518d
  425151:	rcl    BYTE PTR [ecx-0x1b],cl
  425154:	cld    
  425155:	jno    0x425108
  425157:	dec    edi
  425158:	mov    bh,bl
  42515a:	call   0xdee2eef0
  42515f:	mov    edi,0x9777aca9
  425164:	loope  0x4251ca
  425166:	xor    DWORD PTR es:[ebp-0x55],esp
  42516a:	shl    BYTE PTR [eax],1
  42516c:	loop   0x42510e
  42516e:	sbb    al,0x37
  425170:	rcl    BYTE PTR [edx+0x5e],1
  425173:	hlt    
  425174:	out    0xb0,eax
  425176:	push   eax
  425177:	add    ecx,edx
  425179:	mov    al,0xa
  42517b:	js     0x425119
  42517d:	jnp    0x425129
  42517f:	lds    ebp,FWORD PTR [esi+edx*4+0x1b]
  425183:	jmp    0x4251f5
  425185:	sar    BYTE PTR [edx+0x10a91bcb],0x1
  42518c:	int    0x33
  42518e:	in     al,0xd4
  425190:	push   edi
  425191:	push   0x34
  425193:	pushf  
  425194:	sti    
  425195:	jge    0x42511e
  425197:	or     BYTE PTR [ebx+0x33],cl
  42519a:	push   ebx
  42519b:	inc    edx
  42519c:	sahf   
  42519d:	lea    edi,[edx]
  42519f:	ja     0x4251cd
  4251a1:	pop    edx
  4251a2:	sti    
  4251a3:	js     0x42515a
  4251a5:	(bad)  
  4251a6:	(bad)  
  4251a7:	repz jbe 0x42517e
  4251aa:	xor    al,0x9
  4251ac:	cdq    
  4251ad:	loope  0x425152
  4251af:	lea    esp,[eax+0x5a46f8dd]
  4251b5:	cmp    al,0x81
  4251b7:	and    bh,BYTE PTR [eax-0xf]
  4251ba:	call   0x13edffdb
  4251bf:	jle    0x425145
  4251c1:	mov    bl,0xaa
  4251c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251c4:	inc    eax
  4251c5:	in     eax,0x21
  4251c7:	jae    0x4251c2
  4251c9:	jbe    0x4251f4
  4251cb:	xchg   bl,dh
  4251cd:	call   0x62fe79b1
  4251d2:	inc    edi
  4251d3:	into   
  4251d4:	xchg   ebp,eax
  4251d5:	or     ecx,DWORD PTR [eax+eax*1]
  4251d8:	bound  ecx,QWORD PTR [ecx+0x25]
  4251db:	cs es add bh,dh
  4251df:	xor    bl,dh
  4251e1:	push   es
  4251e2:	into   
  4251e3:	cdq    
  4251e4:	test   eax,0x54905be5
  4251e9:	mov    ds:0x101f3313,eax
  4251ee:	and    bl,al
  4251f0:	xchg   DWORD PTR [eax-0x2a],edi
  4251f3:	add    DWORD PTR [eax],esp
  4251f5:	dec    esi
  4251f6:	leave  
  4251f7:	mov    esi,0x9b2033e1
  4251fc:	sar    DWORD PTR [ecx],1
  4251fe:	cmp    ah,BYTE PTR [ebx+0x44c86f0a]
  425204:	call   0x78ee6a3f
  425209:	fs ret 0x68ce
  42520d:	mov    dh,0x91
  42520f:	cmp    eax,0xdc62033a
  425214:	sbb    al,0x8c
  425216:	inc    edx
  425217:	cwde   
  425218:	es mov ah,0xb
  42521b:	xor    BYTE PTR [ecx+0x785f345e],bh
  425221:	js     0x4251bb
  425223:	mov    WORD PTR fs:[eax+0x63],gs
  425227:	pop    eax
  425228:	jmp    0x425221
  42522a:	outs   dx,DWORD PTR ds:[esi]
  42522b:	stc    
  42522c:	es iret 
  42522e:	sbb    eax,0xf4f57ce4
  425233:	call   0x386c3769
  425238:	fbld   TBYTE PTR [eax+0x50764561]
  42523e:	add    eax,0xc4b47274
  425243:	jl     0x42528a
  425245:	loop   0x42523c
  425247:	sub    eax,0x6cc04a5a
  42524c:	sbb    BYTE PTR [eax-0x8],cl
  42524f:	jmp    0xc790:0x1f4816be
  425256:	iret   
  425257:	pop    ss
  425258:	pop    esp
  425259:	push   es
  42525a:	mov    bl,0x76
  42525c:	xchg   ecx,eax
  42525d:	mov    ah,0xa5
  42525f:	inc    eax
  425260:	pop    eax
  425261:	in     al,dx
  425262:	sub    BYTE PTR [eax+0x4],cl
  425265:	adc    eax,ebx
  425267:	inc    ebp
  425268:	(bad)  
  425269:	jmp    0x77d32d94
  42526e:	out    dx,eax
  42526f:	cld    
  425270:	pop    ecx
  425271:	(bad)  
  425272:	fwait
  425273:	push   es
  425274:	(bad)  
  425275:	aam    0xf3
  425277:	dec    ebx
  425278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425279:	or     al,0x2f
  42527b:	mov    al,ds:0x42780ac7
  425280:	cmp    ecx,eax
  425282:	lds    ecx,FWORD PTR [ecx-0x31]
  425285:	rcr    BYTE PTR [edi],1
  425287:	dec    ecx
  425288:	pop    edi
  425289:	mov    esi,0xae74cdec
  42528e:	fnstenv [ebp+0x104021e9]
  425294:	or     ebx,DWORD PTR [esi]
  425296:	lock mov ebx,0xd8839146
  42529c:	mov    eax,0x22bd3e73
  4252a1:	mov    edi,0xdc58b977
  4252a6:	lea    eax,[edx+eiz*8]
  4252a9:	call   0xd000:0xaad3a45a
  4252b0:	mov    ebx,0x7474a830
  4252b5:	adc    eax,0xb3a52438
  4252ba:	xor    DWORD PTR [edx+ebp*2+0x61],0xffffff97
  4252bf:	dec    esp
  4252c0:	dec    eax
  4252c1:	and    edx,DWORD PTR [ecx]
  4252c3:	mov    edx,0xd4efe758
  4252c8:	cmp    dh,al
  4252ca:	sub    BYTE PTR [ebp+0x50],bh
  4252cd:	(bad)  
  4252ce:	jb     0x4252d1
  4252d0:	(bad)  
  4252d1:	fcom   QWORD PTR [ecx+ecx*1]
  4252d4:	cmp    esi,ecx
  4252d6:	aad    0x90
  4252d8:	mov    ds:0x7511387a,eax
  4252de:	xchg   DWORD PTR [edx+0xf2ae86b],ebx
  4252e4:	pop    esp
  4252e5:	data16 adc al,0x18
  4252e8:	arpl   WORD PTR [ecx+0x4d1a28c],di
  4252ee:	ss ss out dx,eax
  4252f1:	test   eax,0xedb18463
  4252f6:	sub    BYTE PTR [eax-0x5f],cl
  4252f9:	xor    BYTE PTR [ecx],bh
  4252fb:	call   0x9afa:0x4ca029a1
  425302:	dec    eax
  425303:	push   0x8df59661
  425308:	jo     0x425361
  42530a:	dec    ebp
  42530b:	push   ebp
  42530c:	push   ebx
  42530d:	scas   al,BYTE PTR es:[edi]
  42530e:	enter  0xcd15,0x94
  425312:	adc    DWORD PTR [eax+0xcb472dd],edx
  425318:	leave  
  425319:	cmp    BYTE PTR [ecx+eax*4],0xea
  42531d:	test   DWORD PTR [esi],edx
  42531f:	ins    BYTE PTR es:[edi],dx
  425320:	pop    edx
  425321:	push   es
  425322:	add    BYTE PTR ds:[eax],al
  425325:	add    BYTE PTR [eax],al
  425327:	add    BYTE PTR [ebx+0x14],ch
  42532a:	call   0x0:0x9513d
  425331:	add    BYTE PTR [eax],al
  425333:	add    BYTE PTR [ecx+0x9],dl
  425336:	add    BYTE PTR [eax],al
  425338:	sub    eax,DWORD PTR [eax]
  42533a:	es jl  0x42533d
  42533d:	add    dh,BYTE PTR [esi]
  42533f:	or     BYTE PTR [eax],al
  425341:	add    ah,al
  425343:	inc    ebp
  425344:	add    BYTE PTR [ecx],al
  425346:	xor    bl,BYTE PTR [esi]
  425348:	pushf  
  425349:	push   bp
  42534b:	leave  
  42534c:	and    DWORD PTR [edx+edx*4],0xffffffaa
  425350:	sbb    bh,BYTE PTR [edx]
  425352:	mov    ebx,0x488418f7
  425357:	das    
  425358:	sahf   
  425359:	fstp   DWORD PTR [eax+0x76129d9c]
  42535f:	ins    BYTE PTR es:[edi],dx
  425360:	jl     0x425346
  425362:	sub    bl,ah
  425364:	repnz fimul DWORD PTR [ebp+0x8]
  425368:	nop
  425369:	stc    
  42536a:	xor    ch,BYTE PTR [eax+0x1684234e]
  425370:	popf   
  425371:	cmp    dl,ah
  425373:	(bad)  
  425374:	adc    eax,0x964e4f67
  425379:	pop    esi
  42537a:	pop    esp
  42537b:	cli    
  42537c:	or     eax,0x5b06d66c
  425381:	popf   
  425382:	xor    al,BYTE PTR [eax-0x54a10907]
  425388:	push   edi
  425389:	push   0x16a4d44d
  42538e:	test   DWORD PTR [ebp+ebx*8+0x79],edi
  425392:	xchg   esi,eax
  425393:	xor    al,0x8a
  425395:	dec    esp
  425396:	push   edi
  425397:	mov    DWORD PTR [ebx+ebp*4],esp
  42539a:	or     bh,BYTE PTR [ebx+0x1f708d05]
  4253a0:	jg     0x4253d0
  4253a2:	cmc    
  4253a3:	mov    ecx,0x9445a337
  4253a8:	fwait
  4253a9:	rol    DWORD PTR [eax],cl
  4253ab:	icebp  
  4253ac:	ins    BYTE PTR es:[edi],dx
  4253ad:	(bad)  [eax]
  4253af:	cmp    BYTE PTR [eax+0x6d361720],0x75
  4253b6:	das    
  4253b7:	jne    0x4253c6
  4253b9:	fdiv   QWORD PTR [ecx-0x601ed829]
  4253bf:	jecxz  0x4253a3
  4253c1:	xor    al,BYTE PTR [edi+edx*4-0x1d2b02da]
  4253c8:	push   ds
  4253c9:	aaa    
  4253ca:	sub    ch,BYTE PTR [eax+0x6f393261]
  4253d0:	clc    
  4253d1:	es pop ds
  4253d3:	icebp  
  4253d4:	int3   
  4253d5:	cmp    eax,0x1444973e
  4253da:	and    al,ah
  4253dc:	mov    ecx,0x9ed6baf0
  4253e1:	in     al,0xcb
  4253e3:	call   FWORD PTR [edi+0x35]
  4253e6:	adc    al,0x7f
  4253e8:	sub    DWORD PTR [esi+0xb],edx
  4253eb:	rcl    DWORD PTR [eax+0x66],0xbf
  4253ef:	mov    esp,0xe28e60bb
  4253f4:	fist   WORD PTR [ebp+0x4ae0ffdb]
  4253fa:	dec    ebp
  4253fb:	add    esi,DWORD PTR [ecx]
  4253fd:	retf   
  4253fe:	pushf  
  4253ff:	mov    DWORD PTR [eax],eax
  425401:	add    al,0xa5
  425403:	cs mov ds,ecx
  425406:	dec    esi
  425407:	adc    al,BYTE PTR [ecx-0x37c7d7f0]
  42540d:	mov    al,0xda
  42540f:	pop    eax
  425410:	ficom  DWORD PTR [ecx]
  425412:	icebp  
  425413:	shr    BYTE PTR [esi+eax*4-0x60],1
  425417:	data16 mov dl,0x99
  42541a:	pop    ecx
  42541b:	mov    eax,0xf69e68f4
  425420:	mov    WORD PTR [eax],fs
  425422:	push   ds
  425423:	rol    DWORD PTR [eax+0xaa6b818],1
  425429:	test   al,0x5e
  42542b:	aaa    
  42542c:	ret    0x3c0d
  42542f:	mov    ecx,0xb5152f74
  425434:	cmp    edx,DWORD PTR [edi+0x36]
  425437:	pusha  
  425438:	mov    al,ds:0xa058aa82
  42543d:	jnp    0x425494
  42543f:	dec    DWORD PTR [eax]
  425441:	add    BYTE PTR [ebx-0x5],dh
  425444:	xor    eax,0xbbf5bc2a
  425449:	sub    al,0xaf
  42544b:	jns    0x42548a
  42544d:	inc    ebp
  42544e:	fdivr  QWORD PTR [edi+esi*8+0x4e0f50e2]
  425455:	mov    ebx,0xb94a738d
  42545a:	push   ds
  42545b:	je     0x425441
  42545d:	mov    ah,0x8d
  42545f:	jg     0x42548d
  425461:	(bad)  
  425462:	std    
  425463:	les    ebx,FWORD PTR [ecx+eiz*1]
  425466:	sbb    edi,DWORD PTR [edx+0xe]
  425469:	enter  0xd492,0x95
  42546d:	inc    eax
  42546e:	inc    edx
  42546f:	push   cs
  425470:	jp     0x4254ae
  425472:	dec    ecx
  425473:	enter  0xd6ff,0x64
  425477:	xchg   esi,eax
  425478:	push   0x9
  42547a:	inc    ecx
  42547b:	inc    eax
  42547c:	dec    ecx
  42547d:	xchg   dh,bl
  42547f:	mov    al,ah
  425481:	mov    ecx,0x1d2dd17b
  425486:	test   DWORD PTR [esp+ebp*4],edx
  425489:	pushf  
  42548a:	fsub   DWORD PTR [ebp+0x4a99a777]
  425490:	test   eax,0xda7d9e54
  425495:	sbb    eax,0x1b04875f
  42549a:	js     0x4254d0
  42549c:	lahf   
  42549d:	retf   0xd080
  4254a0:	icebp  
  4254a1:	lea    eax,[eax-0x64]
  4254a4:	in     al,dx
  4254a5:	push   edi
  4254a6:	jnp    0x4254a5
  4254a8:	push   ecx
  4254a9:	lods   al,BYTE PTR gs:[esi]
  4254ab:	lahf   
  4254ac:	shl    BYTE PTR [esi+0x22],0xdd
  4254b0:	ret    0x9587
  4254b3:	mov    esi,0x2f29e40f
  4254b8:	lock jb 0x42550a
  4254bb:	in     eax,dx
  4254bc:	in     al,0xa5
  4254be:	mov    ecx,ss
  4254c0:	hlt    
  4254c1:	mov    al,ds:0xfb815616
  4254c6:	mov    dh,BYTE PTR [eax-0x441bb6f4]
  4254cc:	and    al,0xc6
  4254ce:	shl    edi,0xd4
  4254d1:	xchg   DWORD PTR [eax],esp
  4254d3:	jne    0x4254e4
  4254d5:	adc    DWORD PTR [esp+eax*4-0x696a0761],0x74492227
  4254e0:	adc    eax,0xfce8a0ce
  4254e5:	inc    ebx
  4254e6:	mov    ebx,0xdcd64400
  4254eb:	les    eax,FWORD PTR [esi+0x567cdac]
  4254f1:	cli    
  4254f2:	or     eax,0x3d1ce8b1
  4254f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254f8:	adc    eax,0x31ae9246
  4254fd:	or     al,0xe7
  4254ff:	mov    ecx,0xd8c28cd9
  425504:	outs   dx,DWORD PTR ds:[esi]
  425505:	wrmsr  
  425507:	cmc    
  425508:	inc    esp
  425509:	(bad)  
  42550a:	js     0x42556d
  42550c:	push   ds
  42550d:	xchg   esp,eax
  42550e:	push   eax
  42550f:	fmul   DWORD PTR [edi-0x3c944c40]
  425515:	push   es
  425516:	adc    al,0xfd
  425518:	cld    
  425519:	nop
  42551a:	outs   dx,BYTE PTR ds:[esi]
  42551b:	dec    ebp
  42551c:	mov    eax,0x45a65132
  425521:	and    BYTE PTR [edi],bh
  425523:	inc    ebp
  425524:	push   0x74e51de4
  425529:	imul   eax,DWORD PTR [edx+edi*8-0x2c],0x2b
  42552e:	enter  0xd6ae,0x56
  425532:	jo     0x425520
  425534:	xchg   esp,eax
  425535:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  425537:	mov    edi,0xe552b2a2
  42553c:	adc    BYTE PTR [ebp+edx*1-0x494c80],bh
  425543:	mov    ah,0xbb
  425545:	xor    al,0x57
  425547:	daa    
  425548:	ficom  WORD PTR [ebp-0x95dc599]
  42554e:	pop    eax
  42554f:	pushf  
  425550:	and    ch,cl
  425552:	jg     0x425508
  425554:	mov    eax,0xde7c5512
  425559:	xchg   ebp,eax
  42555a:	cmc    
  42555b:	call   0xb24:0x9882082a
  425562:	aad    0xd0
  425564:	and    esp,DWORD PTR [ecx+0x4822bc60]
  42556a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42556b:	test   al,0xe
  42556d:	sbb    ebp,DWORD PTR [ebx+0x32]
  425570:	and    cl,BYTE PTR ds:0x3fdb506c
  425576:	add    al,0xd5
  425578:	mov    BYTE PTR [ebx+0x7e4a90eb],ah
  42557e:	std    
  42557f:	bound  esi,QWORD PTR [ebx]
  425581:	push   ebp
  425582:	mov    ebp,0x7127b4aa
  425587:	inc    eax
  425588:	pop    esp
  425589:	mov    dh,0xcf
  42558b:	xchg   esp,eax
  42558c:	inc    edx
  42558d:	pop    esp
  42558e:	inc    edi
  42558f:	(bad)  
  425590:	mov    ch,0x41
  425592:	jmp    FWORD PTR [esi+0x108052fc]
  425598:	sub    ch,BYTE PTR [edx]
  42559a:	jg     0x4255d6
  42559c:	outs   dx,DWORD PTR ds:[esi]
  42559d:	mov    edi,DWORD PTR [eax+0x1e5727a4]
  4255a3:	loope  0x425555
  4255a5:	mov    ds:0xdec8544b,eax
  4255aa:	jmp    0x203e:0xc2993e0b
  4255b1:	jo     0x42553a
  4255b3:	inc    esp
  4255b4:	push   ss
  4255b5:	xchg   edi,eax
  4255b6:	pop    ebp
  4255b7:	dec    edi
  4255b8:	call   0x281d:0xf1d794b6
  4255bf:	add    ah,bl
  4255c1:	sbb    al,0x92
  4255c3:	mov    eax,0x5d642ac2
  4255c8:	sub    ch,cl
  4255ca:	das    
  4255cb:	lahf   
  4255cc:	fdivr  st(1),st
  4255ce:	mov    edi,0xd2283dc2
  4255d3:	xor    ebp,DWORD PTR [edx+0x16d1b000]
  4255d9:	(bad)  
  4255da:	dec    ebx
  4255db:	es xor ah,dl
  4255de:	test   al,0x43
  4255e0:	(bad)  
  4255e1:	sub    BYTE PTR [ecx+0x52],cl
  4255e4:	mov    ecx,0x43cc2c15
  4255e9:	mov    ds:0xd94ad911,al
  4255ee:	enter  0xf027,0x71
  4255f2:	add    eax,DWORD PTR [eax]
  4255f4:	pop    ds
  4255f5:	push   ss
  4255f6:	int3   
  4255f7:	neg    DWORD PTR ds:0x920b7114
  4255fd:	lods   eax,DWORD PTR ds:[esi]
  4255fe:	or     cl,ch
  425600:	in     eax,dx
  425601:	nop
  425602:	mov    esp,0xb854cfba
  425607:	and    eax,0xe08f9836
  42560c:	fmul   QWORD PTR [ecx+eiz*1+0x46]
  425610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425611:	rcr    eax,1
  425613:	add    eax,DWORD PTR [edi+ebx*1]
  425616:	les    edx,FWORD PTR [esi+ebp*8+0x44]
  42561a:	push   ds
  42561b:	fst    QWORD PTR [eax+0x28]
  42561e:	or     dh,BYTE PTR [esi+0x28]
  425621:	dec    esi
  425622:	dec    esp
  425623:	jmp    0x4255d5
  425625:	iret   
  425626:	dec    esp
  425627:	sbb    edx,DWORD PTR [ebx]
  425629:	adc    bl,BYTE PTR [esi+0x46]
  42562c:	aam    0x8f
  42562e:	push   ebp
  42562f:	hlt    
  425630:	mov    bh,0xb3
  425632:	scas   al,BYTE PTR es:[edi]
  425633:	jns    0x42560e
  425635:	sub    eax,0x1818de50
  42563a:	adc    ecx,DWORD PTR [ecx-0x9]
  42563d:	mov    edx,0x3c37f521
  425642:	cld    
  425643:	adc    DWORD PTR [ecx+esi*4],ebx
  425646:	push   esi
  425647:	scas   al,BYTE PTR es:[edi]
  425648:	inc    ebp
  425649:	outs   dx,DWORD PTR ds:[esi]
  42564a:	pusha  
  42564b:	push   ebp
  42564c:	scas   al,BYTE PTR es:[edi]
  42564d:	cmp    DWORD PTR [esi],ecx
  42564f:	inc    edi
  425650:	imul   esi,DWORD PTR [esi+edx*4],0xffffff84
  425654:	pushf  
  425655:	pop    eax
  425656:	repz fild DWORD PTR [edx-0x26]
  42565a:	mov    DWORD PTR [edx],ecx
  42565c:	sub    al,0x57
  42565e:	sbb    al,0x53
  425660:	mov    ah,0xb9
  425662:	xor    dl,BYTE PTR [eax-0x37]
  425665:	push   eax
  425666:	call   0xd554:0x270766fc
  42566d:	nop
  42566e:	je     0x4256e7
  425670:	sub    al,0x34
  425672:	cli    
  425673:	xchg   DWORD PTR [edi+ebx*8+0x12],esp
  425677:	cwde   
  425678:	push   ds
  425679:	and    al,0x99
  42567b:	outs   dx,DWORD PTR ds:[esi]
  42567c:	popa   
  42567d:	sbb    ah,dl
  42567f:	out    dx,eax
  425680:	inc    eax
  425681:	pop    eax
  425682:	js     0x42563d
  425684:	das    
  425685:	push   cs
  425686:	ins    BYTE PTR es:[edi],dx
  425687:	mov    ecx,0x177d6438
  42568c:	es xchg esi,eax
  42568e:	ror    bh,cl
  425690:	jmp    0xe7f7ded6
  425695:	mov    bh,0xa9
  425697:	scas   eax,DWORD PTR es:[edi]
  425698:	xchg   DWORD PTR [esp+ebx*8],esp
  42569b:	lods   al,BYTE PTR ds:[esi]
  42569c:	mov    ah,0x54
  42569e:	mov    esi,0x578f42e8
  4256a3:	adc    edx,eax
  4256a5:	adc    BYTE PTR [ebx-0x58],bl
  4256a8:	add    DWORD PTR [ecx+0x78f093c7],esi
  4256ae:	mov    edx,0xed54836f
  4256b3:	cli    
  4256b4:	std    
  4256b5:	rcr    BYTE PTR [ebx+edi*1-0x5dec9447],cl
  4256bc:	ds hlt 
  4256be:	icebp  
  4256bf:	sar    ch,0x5
  4256c2:	int    0xea
  4256c4:	pop    ebp
  4256c5:	lds    edx,FWORD PTR [edi]
  4256c7:	pusha  
  4256c8:	in     al,0x6e
  4256ca:	mov    BYTE PTR [edi],ah
  4256cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256cd:	stos   DWORD PTR es:[edi],eax
  4256ce:	cs jno 0x4256fb
  4256d1:	mov    WORD PTR [ecx+0x0],?
  4256d4:	popf   
  4256d5:	retf   0x7bba
  4256d8:	mov    eax,0x10fb0c5
  4256dd:	int    0x1
  4256df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256e0:	sbb    eax,0x88d41330
  4256e5:	enter  0xa46c,0x78
  4256e9:	and    esi,ebx
  4256eb:	dec    edi
  4256ec:	clc    
  4256ed:	sti    
  4256ee:	mov    ds:0x4e000ba9,eax
  4256f3:	enter  0x1c7d,0x8e
  4256f7:	or     ebp,DWORD PTR [ebp+0x2b]
  4256fa:	sbb    eax,0xc4c34dc2
  4256ff:	out    0x33,eax
  425701:	(bad)  
  425703:	xchg   ebp,eax
  425704:	js     0x425706
  425706:	pop    esi
  425707:	call   0x782bb201
  42570c:	dec    ebp
  42570d:	sub    dl,ah
  42570f:	sbb    BYTE PTR [edi+eiz*8],cl
  425712:	inc    ebx
  425713:	test   BYTE PTR [esi+0xd],ch
  425716:	xor    al,0x84
  425718:	mov    WORD PTR [eax],?
  42571a:	jge    0x425721
  42571c:	lock (bad) 
  42571e:	ror    DWORD PTR [ebx+0x34d80265],cl
  425724:	call   0x5e0e5407
  425729:	jbe    0x4256ff
  42572b:	cld    
  42572c:	das    
  42572d:	aas    
  42572e:	dec    esi
  42572f:	imul   ebp,eax,0xffffffc1
  425732:	jnp    0x4256c5
  425734:	and    BYTE PTR [esi],bh
  425736:	sbb    bh,BYTE PTR [eax+0x4ee79d44]
  42573c:	popf   
  42573d:	inc    esp
  42573e:	retf   
  42573f:	lahf   
  425740:	and    al,bh
  425742:	xchg   ebp,eax
  425743:	(bad)  
  425744:	(bad)  
  425746:	push   0x2322be3b
  42574b:	out    dx,eax
  42574c:	loope  0x42576e
  42574e:	lock adc BYTE PTR [eax-0x26],al
  425752:	pop    ecx
  425753:	int    0x1b
  425755:	sets   BYTE PTR [ebp+0x34]
  425759:	addr16 dec ecx
  42575b:	nop
  42575c:	pop    ss
  42575d:	call   0x3514:0x58721f06
  425764:	jecxz  0x4257b2
  425766:	loope  0x425710
  425768:	cmp    BYTE PTR [ecx],dl
  42576a:	jl     0x425709
  42576c:	mov    esp,0x43551a5
  425771:	icebp  
  425772:	or     DWORD PTR [eax+0x60d39799],esp
  425778:	iret   
  425779:	cmc    
  42577a:	sbb    eax,0x5f6648f3
  42577f:	push   ecx
  425780:	dec    esi
  425781:	pop    edx
  425782:	cs aaa 
  425784:	arpl   WORD PTR [edx+ebx*4-0x2e],bp
  425788:	lea    ecx,[ecx]
  42578a:	mov    ebp,0x90b1e5da
  42578f:	scas   al,BYTE PTR es:[edi]
  425790:	add    dl,BYTE PTR [edx]
  425792:	shr    esp,1
  425794:	cmc    
  425795:	sbb    eax,0x9a02b495
  42579a:	ja     0x42577b
  42579c:	not    DWORD PTR [ecx]
  42579e:	pushf  
  42579f:	lds    ebx,FWORD PTR [ebx+esi*1-0x70]
  4257a3:	scas   al,BYTE PTR es:[edi]
  4257a4:	test   al,0x52
  4257a6:	call   0x84c28c9e
  4257ab:	inc    ebx
  4257ac:	pop    ecx
  4257ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257ae:	mov    ecx,0xa41e49e0
  4257b3:	icebp  
  4257b4:	add    BYTE PTR [edi],dl
  4257b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257b7:	mov    esi,0xc8612b03
  4257bc:	push   esi
  4257bd:	xor    dl,BYTE PTR [esi-0x36]
  4257c0:	aaa    
  4257c1:	lods   al,BYTE PTR ds:[esi]
  4257c2:	leave  
  4257c3:	es in  al,dx
  4257c5:	mov    cl,BYTE PTR [eax-0x42]
  4257c8:	fwait
  4257c9:	inc    eax
  4257ca:	cli    
  4257cb:	dec    edi
  4257cc:	sbb    al,0x94
  4257ce:	adc    DWORD PTR [ebx],ecx
  4257d0:	push   ecx
  4257d1:	shr    ah,cl
  4257d3:	popf   
  4257d4:	fild   DWORD PTR [eax+edi*4]
  4257d7:	dec    esi
  4257d8:	imul   edi,edi,0x74e10c8d
  4257de:	cmp    esp,ebx
  4257e0:	idiv   BYTE PTR [edx]
  4257e2:	inc    ebp
  4257e3:	and    DWORD PTR [ecx+ebp*1+0x6500973c],0x50
  4257eb:	cmp    eax,0xf0a59430
  4257f0:	inc    edx
  4257f1:	test   al,0x37
  4257f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257f4:	out    dx,eax
  4257f5:	jmp    0xd3cc:0x614fd93c
  4257fc:	(bad)  
  4257fd:	or     cl,BYTE PTR [edx]
  4257ff:	je     0x4257d0
  425801:	lahf   
  425802:	mov    esp,0xb51a0af0
  425807:	pop    esi
  425808:	repnz stos BYTE PTR es:[edi],al
  42580a:	ror    BYTE PTR [eax+0x14],cl
  42580d:	ret    
  42580e:	fstp   DWORD PTR [ecx]
  425810:	mov    ds:0xa807330d,eax
  425815:	cmp    BYTE PTR [edx-0x14b8d6c1],dh
  42581b:	loopne 0x425831
  42581d:	inc    ebp
  42581e:	loopne 0x42589f
  425820:	les    esi,FWORD PTR [edx-0x75759bb9]
  425826:	jg     0x42582c
  425828:	fdivr  st,st(0)
  42582a:	inc    ebx
  42582b:	pop    ebp
  42582c:	popa   
  42582d:	icebp  
  42582e:	xor    BYTE PTR [edi+0x7a4b5c28],bh
  425834:	inc    edi
  425835:	and    BYTE PTR [esi],bh
  425837:	inc    eax
  425838:	out    0x4c,eax
  42583a:	repz inc DWORD PTR gs:[edx-0x5a]
  42583f:	lods   eax,DWORD PTR ds:[esi]
  425840:	adc    esp,ebx
  425842:	jo     0x4257f9
  425844:	enter  0x8bca,0xe0
  425848:	push   ecx
  425849:	pop    ecx
  42584a:	or     eax,0xd8905c18
  42584f:	ds (bad) 
  425851:	call   0x1a7f4b79
  425856:	mov    dh,0xc4
  425858:	prefetch BYTE PTR [esi]
  42585b:	sti    
  42585c:	add    esp,DWORD PTR [eax-0x20]
  42585f:	in     eax,0xe2
  425861:	cmp    ah,BYTE PTR [esp+eiz*4-0x53]
  425865:	mov    eax,ds:0xb5d4a884
  42586a:	dec    ecx
  42586b:	adc    eax,0x2ce4f642
  425870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425871:	and    eax,0x69fc7d61
  425876:	pop    eax
  425877:	and    DWORD PTR [eax-0x2],edx
  42587a:	adc    eax,0x2465f3a6
  42587f:	addr16 push ecx
  425881:	je     0x425876
  425883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425884:	xor    eax,0xf1ac00d4
  425889:	xchg   edi,eax
  42588a:	cwde   
  42588b:	mov    ds:0x6d38795e,al
  425890:	mov    al,0xde
  425892:	push   edi
  425893:	mov    esp,0x44ecd004
  425898:	cs jmp 0x4258b9
  42589b:	jae    0x425901
  42589d:	jb     0x4258e9
  42589f:	mov    dh,0x71
  4258a1:	fidiv  WORD PTR [eax]
  4258a3:	inc    edi
  4258a4:	or     ecx,DWORD PTR [eax+0x5bb1d7c5]
  4258aa:	out    0xb4,al
  4258ac:	push   eax
  4258ad:	fldcw  WORD PTR [ebp+esi*4-0xee2f5]
  4258b4:	adc    DWORD PTR [ecx],ecx
  4258b6:	xchg   ecx,eax
  4258b7:	ror    BYTE PTR [esi-0x67],1
  4258ba:	fistp  QWORD PTR [ebx+0x37158b9c]
  4258c0:	js     0x4258fe
  4258c2:	test   al,0xe1
  4258c4:	jmp    0xd9be77e5
  4258c9:	pushf  
  4258ca:	dec    DWORD PTR [edx-0x62]
  4258cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258ce:	push   DWORD PTR [edi-0x313f589c]
  4258d4:	sub    al,0xbf
  4258d6:	mov    esi,0xc12ece45
  4258db:	in     al,0x1f
  4258dd:	jo     0x42592f
  4258df:	or     BYTE PTR [edx-0x64],bl
  4258e2:	aas    
  4258e3:	fimul  WORD PTR [eax]
  4258e5:	sub    al,0xc4
  4258e7:	std    
  4258e8:	jle    0x4258e0
  4258ea:	sbb    BYTE PTR [esp+ecx*4-0x50],cl
  4258ee:	pop    esp
  4258ef:	adc    ebp,DWORD PTR [esi-0x80]
  4258f2:	mov    ch,BYTE PTR [eax-0x54]
  4258f5:	xchg   esp,edx
  4258f7:	cdq    
  4258f8:	fdivp  st(6),st
  4258fa:	out    dx,eax
  4258fb:	push   cs
  4258fc:	pushf  
  4258fd:	aam    0xfe
  4258ff:	clc    
  425900:	inc    edx
  425901:	gs xchg ecx,eax
  425903:	mov    eax,0x8744d669
  425908:	sbb    al,0x9f
  42590a:	dec    edx
  42590b:	and    BYTE PTR [ecx],0x30
  42590e:	outs   dx,BYTE PTR ds:[esi]
  42590f:	scas   al,BYTE PTR es:[edi]
  425910:	mov    al,ds:0x41a8f740
  425915:	std    
  425916:	aam    0x85
  425918:	mov    esp,0x123be81e
  42591d:	dec    esi
  42591e:	fwait
  42591f:	dec    ebx
  425920:	push   esi
  425921:	mov    ah,0x10
  425923:	or     al,0xb1
  425925:	jb     0x4258fa
  425927:	mov    ecx,0x864c781f
  42592c:	xor    bl,bl
  42592e:	mov    DWORD PTR [esi+0x452ea238],esp
  425934:	dec    ebp
  425935:	push   esp
  425936:	scas   eax,DWORD PTR es:[edi]
  425937:	cmp    DWORD PTR [ecx],edx
  425939:	fadd   st,st(3)
  42593b:	outs   dx,DWORD PTR ds:[esi]
  42593c:	xor    cl,BYTE PTR [eax]
  42593e:	cld    
  42593f:	pop    eax
  425940:	in     al,dx
  425941:	fistp  WORD PTR ds:0xe55f24f1
  425947:	and    dl,al
  425949:	inc    ebp
  42594a:	cmc    
  42594b:	stc    
  42594c:	bswap  edi
  42594e:	fisttp QWORD PTR [eax+0x66b80a44]
  425954:	or     cl,dl
  425956:	je     0x4258f9
  425958:	pop    ecx
  425959:	push   0x71cebe33
  42595e:	sub    ebx,DWORD PTR [eax+0x4e]
  425961:	les    ecx,FWORD PTR [edx+esi*2+0x2b990359]
  425968:	add    al,0x1c
  42596a:	enter  0x6534,0xca
  42596e:	nop
  42596f:	lock jne 0x425909
  425972:	push   edi
  425973:	jecxz  0x4259cd
  425975:	fisttp DWORD PTR [esp+esi*2+0x19b5d207]
  42597c:	and    eax,0xcb33667c
  425981:	retf   
  425982:	rol    BYTE PTR [edx-0x1b5f52a5],1
  425988:	push   ds
  425989:	push   edx
  42598a:	(bad)  
  42598b:	mov    ebx,0x4862743a
  425990:	cli    
  425991:	and    BYTE PTR [eax],0xfd
  425994:	out    0x8e,eax
  425996:	pop    eax
  425997:	push   0x6c
  425999:	dec    eax
  42599a:	and    al,0xf
  42599c:	pop    es
  42599d:	ins    DWORD PTR es:[edi],dx
  42599e:	fucomi st,st(6)
  4259a0:	jle    0x425932
  4259a2:	dec    eax
  4259a3:	sub    BYTE PTR [edi+0x48572db],bl
  4259a9:	or     BYTE PTR [edi+ebx*1+0x2970e3a3],dh
  4259b0:	(bad)  
  4259b2:	rcr    al,cl
  4259b4:	jmp    0x8d9d006d
  4259b9:	sbb    al,0x8d
  4259bb:	mov    edi,0x89beb680
  4259c0:	mov    al,0x17
  4259c2:	(bad)  
  4259c3:	mov    esi,0xea2fa41b
  4259c8:	xor    DWORD PTR [ecx-0x20b07ba5],eax
  4259ce:	enter  0x2616,0xee
  4259d2:	sahf   
  4259d3:	sti    
  4259d4:	jb     0x42595e
  4259d6:	enter  0x49ec,0x4d
  4259da:	inc    esi
  4259db:	into   
  4259dc:	jmp    0x6626:0x10b4d00b
  4259e3:	xchg   esi,eax
  4259e4:	popa   
  4259e5:	inc    edx
  4259e6:	adc    cl,dl
  4259e8:	lahf   
  4259e9:	mov    eax,0xb677a6be
  4259ee:	jp     0x4259fc
  4259f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f1:	lods   al,BYTE PTR ds:[esi]
  4259f2:	fsub   QWORD PTR [esi-0x67]
  4259f5:	mov    cl,0x3d
  4259f7:	sbb    ch,BYTE PTR [ebx+eiz*4-0x11]
  4259fb:	add    BYTE PTR [esi-0x9],ch
  4259fe:	leave  
  4259ff:	aam    0x7f
  425a01:	jmp    0x4f670b30
  425a06:	and    DWORD PTR [eax-0x1fa3a394],esp
  425a0c:	pop    edi
  425a0d:	int3   
  425a0e:	add    DWORD PTR [edi-0x44ce9638],eax
  425a14:	jno    0x425a92
  425a16:	lock sub eax,0x6e76e11f
  425a1c:	cld    
  425a1d:	jge    0x425a4f
  425a1f:	adc    al,0xe
  425a21:	out    dx,al
  425a22:	pop    ds
  425a23:	mov    eax,ds:0x9ec2a074
  425a28:	cmp    BYTE PTR [edi-0x7fc68df2],bl
  425a2e:	mov    eax,ds:0x855cafeb
  425a33:	in     al,0x7e
  425a35:	pushf  
  425a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a37:	xchg   DWORD PTR [eax-0x5e47fb4d],edi
  425a3d:	pop    ebp
  425a3e:	mov    al,0x35
  425a40:	xchg   esi,eax
  425a41:	adc    ch,BYTE PTR [ebp-0x4d8f64d8]
  425a47:	jmp    0x9b4c:0x29dfa781
  425a4e:	(bad)  
  425a4f:	cld    
  425a50:	dec    edi
  425a51:	pushf  
  425a52:	dec    esi
  425a53:	inc    eax
  425a54:	pop    ebp
  425a55:	jo     0x425a35
  425a57:	lods   eax,DWORD PTR ds:[esi]
  425a58:	push   ebx
  425a59:	mov    ch,dl
  425a5b:	mov    ecx,0x9c18add0
  425a60:	dec    ebx
  425a61:	jmp    0x3cab:0x9ef96e8a
  425a68:	adc    DWORD PTR [eax],ebx
  425a6a:	push   0x7b8e456f
  425a6f:	mov    eax,ds:0x5c935260
  425a74:	inc    eax
  425a75:	hlt    
  425a76:	outs   dx,BYTE PTR ds:[esi]
  425a77:	mov    bl,0xf
  425a79:	test   BYTE PTR [ebp+edi*4-0x46],bh
  425a7d:	inc    edi
  425a7e:	sub    DWORD PTR [ebx-0x57e0d1],eax
  425a84:	sbb    esp,DWORD PTR [edx+0x1577124e]
  425a8a:	cdq    
  425a8b:	push   eax
  425a8c:	rcl    DWORD PTR [ebx],0x7b
  425a8f:	shr    DWORD PTR [edx],0x6d
  425a92:	loope  0x425b09
  425a94:	je     0x425aa3
  425a96:	adc    edx,DWORD PTR [ecx-0x14]
  425a99:	lds    esp,FWORD PTR [ebx-0x30]
  425a9c:	xor    ebx,DWORD PTR [eax+0x72562f5a]
  425aa2:	in     al,0x4e
  425aa4:	loop   0x425ace
  425aa6:	mov    esp,0xab26a4c7
  425aab:	aaa    
  425aac:	retf   0x306c
  425aaf:	loopne 0x425a88
  425ab1:	mul    bl
  425ab3:	mov    ds:0xedcfe27,eax
  425ab8:	mov    cl,al
  425aba:	xor    dh,BYTE PTR [edi]
  425abc:	and    al,ch
  425abe:	clc    
  425abf:	adc    eax,0x5a84ac76
  425ac4:	fstp   st(4)
  425ac6:	retf   
  425ac7:	or     al,0x1c
  425ac9:	mov    eax,0x2f9227d0
  425ace:	mov    al,0x2d
  425ad0:	ins    DWORD PTR es:[edi],dx
  425ad1:	test   al,0x31
  425ad3:	hlt    
  425ad4:	lds    esp,FWORD PTR ds:0x4177d276
  425ada:	icebp  
  425adb:	xlat   BYTE PTR ds:[ebx]
  425adc:	pushf  
  425add:	sub    BYTE PTR [edx-0x701ede96],0x86
  425ae4:	sub    eax,0xf64bedc0
  425ae9:	add    al,0xa1
  425aeb:	pushf  
  425aec:	fmul   QWORD PTR [ebx-0x62b1d71c]
  425af2:	outs   dx,DWORD PTR ds:[esi]
  425af3:	ja     0x425ab2
  425af5:	(bad)  
  425af6:	imul   ecx,DWORD PTR [eax],0xd02da451
  425afc:	xchg   ebx,eax
  425afd:	lahf   
  425afe:	mov    eax,DWORD PTR [ebx+0x5a18ea2c]
  425b04:	add    eax,0x1f95c709
  425b09:	aam    0xd5
  425b0b:	dec    edx
  425b0c:	and    BYTE PTR [ecx+0x42cec056],0xf8
  425b13:	push   eax
  425b14:	sbb    edi,DWORD PTR [eax*4+0x74c33df8]
  425b1b:	sbb    al,0x9f
  425b1d:	(bad)  
  425b1e:	ss jecxz 0x425abf
  425b21:	ret    0xdc8c
  425b24:	inc    eax
  425b25:	jae    0x425acb
  425b27:	mov    edx,0x934bacb2
  425b2c:	mov    esp,0x8478e5e8
  425b31:	stos   BYTE PTR es:[edi],al
  425b32:	fnsave [ebp+0x150c42ad]
  425b38:	scas   eax,DWORD PTR es:[edi]
  425b39:	retf   0x87a1
  425b3c:	mov    WORD PTR [edx-0x445dcf6c],?
  425b42:	stos   BYTE PTR es:[edi],al
  425b43:	outs   dx,BYTE PTR ds:[esi]
  425b44:	push   edx
  425b45:	jecxz  0x425bab
  425b47:	iret   
  425b48:	push   esp
  425b49:	dec    eax
  425b4a:	cmp    eax,0x14a04f57
  425b4f:	jmp    FWORD PTR [ecx+0x78]
  425b52:	pop    es
  425b53:	and    ecx,esi
  425b55:	fwait
  425b56:	jl     0x425b17
  425b58:	not    BYTE PTR [eax+0x20]
  425b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b5c:	add    BYTE PTR [esi-0x1d439488],al
  425b62:	test   BYTE PTR [esp+eiz*8-0x50],0x61
  425b67:	pop    ebp
  425b68:	xchg   eax,esi
  425b6a:	fdivr  QWORD PTR [esi+0x68]
  425b6d:	sbb    ch,dl
  425b6f:	push   cs
  425b70:	cmp    edi,DWORD PTR [eax]
  425b72:	xor    eax,0xf28ca884
  425b77:	ds std 
  425b79:	sbb    ebp,DWORD PTR [edi+0x69]
  425b7c:	push   ecx
  425b7d:	div    BYTE PTR [ecx+edx*4]
  425b80:	mov    ch,0x12
  425b82:	xor    eax,0x60489e1e
  425b87:	pop    eax
  425b88:	jno    0x425b1f
  425b8a:	test   al,0x60
  425b8c:	stos   BYTE PTR es:[edi],al
  425b8d:	lock mov ?,edx
  425b90:	jl     0x425b98
  425b92:	in     eax,0xb9
  425b94:	jmp    0xee2b29fb
  425b99:	mov    al,ds:0x41e0773c
  425b9e:	das    
  425b9f:	retf   
  425ba0:	iret   
  425ba1:	les    ebp,FWORD PTR cs:[edi+0x4a30f850]
  425ba8:	aam    0x74
  425baa:	pop    esi
  425bab:	ins    BYTE PTR es:[edi],dx
  425bac:	inc    ebp
  425bad:	shr    BYTE PTR [esi+0x46],1
  425bb0:	xchg   DWORD PTR [ebp+0x56],ecx
  425bb3:	pop    esi
  425bb4:	nop
  425bb5:	jnp    0x425ba6
  425bb7:	adc    al,0xb6
  425bb9:	ss ins DWORD PTR es:[edi],dx
  425bbb:	dec    edx
  425bbc:	xchg   DWORD PTR [ecx+eiz*4+0x62ba064a],esi
  425bc3:	gs (bad) 
  425bc5:	int3   
  425bc6:	fsubr  DWORD PTR [esi+0x63]
  425bc9:	dec    BYTE PTR [ebp+0x124a39c8]
  425bcf:	cld    
  425bd0:	and    al,0x4b
  425bd2:	mov    esp,0xaed7ee27
  425bd7:	shld   DWORD PTR [edx-0x4f],ebp,0xee
  425bdc:	pop    es
  425bdd:	lods   eax,DWORD PTR ds:[esi]
  425bde:	mov    bh,0x2f
  425be0:	lods   eax,DWORD PTR ds:[esi]
  425be1:	enter  0x19bf,0x34
  425be5:	and    esi,DWORD PTR [ebx-0x13c42f14]
  425beb:	jecxz  0x425b96
  425bed:	out    dx,eax
  425bee:	add    cl,0x97
  425bf1:	iret   
  425bf2:	adc    BYTE PTR cs:[edi+eiz*4+0x5f7fdefb],ah
  425bfa:	not    DWORD PTR [ecx]
  425bfc:	mov    eax,0x1f71baaf
  425c01:	dec    ebx
  425c02:	mov    edx,0x27dc9964
  425c07:	push   0x55
  425c09:	xchg   BYTE PTR [edx+0x64],cl
  425c0c:	adc    al,0x36
  425c0e:	add    BYTE PTR [ecx+0x2954573f],ah
  425c14:	and    esp,esi
  425c16:	inc    edx
  425c17:	and    al,0x78
  425c19:	adc    eax,0x65f13dd7
  425c1e:	out    0xfd,al
  425c20:	dec    eax
  425c21:	push   esi
  425c22:	inc    ebp
  425c23:	pusha  
  425c24:	jne    0x425bc5
  425c26:	popa   
  425c27:	push   eax
  425c28:	jae    0x425c1a
  425c2a:	push   es
  425c2b:	pop    esi
  425c2c:	sub    al,0x3a
  425c2e:	repnz ss leave 
  425c31:	mov    al,0x14
  425c33:	mov    ds:0x2974ec00,eax
  425c38:	pop    esi
  425c39:	xchg   DWORD PTR [ecx+0x38],ebp
  425c3c:	cmc    
  425c3d:	dec    ebp
  425c3e:	rcr    BYTE PTR [ecx+0x1c],1
  425c41:	sbb    eax,0xf35c0f55
  425c46:	mov    edi,DWORD PTR [ebx+eiz*2-0x51bd7f26]
  425c4d:	add    al,0xc9
  425c4f:	int3   
  425c50:	inc    ebx
  425c51:	pusha  
  425c52:	jle    0x425c74
  425c54:	pop    es
  425c55:	sub    ch,BYTE PTR [eax]
  425c57:	call   0xee8146fb
  425c5c:	mov    eax,0xd84c1ca4
  425c61:	daa    
  425c62:	out    dx,eax
  425c63:	and    al,0x20
  425c65:	imul   ebx,esp,0x6d6a7002
  425c6b:	push   es
  425c6c:	xor    BYTE PTR [ebx-0x6b728f5f],dl
  425c72:	mov    ch,0x6
  425c74:	dec    eax
  425c75:	in     al,0x9
  425c77:	icebp  
  425c78:	mov    dh,0xf4
  425c7a:	cmp    al,0xef
  425c7c:	jg     0x425c58
  425c7e:	inc    esi
  425c7f:	pop    eax
  425c80:	add    BYTE PTR [eax+0x32],0x0
  425c87:	add    BYTE PTR [edx],al
  425c89:	sbb    BYTE PTR [edi+0x48],bl
  425c8c:	push   ecx
  425c8d:	or     DWORD PTR [eax],eax
  425c8f:	add    BYTE PTR [eax],al
  425c91:	add    BYTE PTR [eax],al
  425c93:	add    BYTE PTR [ecx+0x9],dl
  425c96:	add    BYTE PTR [eax],al
  425c98:	sub    al,0x0
  425c9a:	es jl  0x425c9d
  425c9d:	add    dh,BYTE PTR [esi]
  425c9f:	or     BYTE PTR [eax],al
  425ca1:	add    ah,al
  425ca3:	inc    ebp
  425ca4:	add    BYTE PTR [ecx+0x3c],bl
  425ca7:	push   es
  425ca8:	(bad)  
  425ca9:	cld    
  425caa:	mov    ds:0x25249cf5,eax
  425caf:	fiadd  DWORD PTR [edi+ebx*1-0xa]
  425cb3:	scas   eax,DWORD PTR es:[edi]
  425cb4:	xor    ch,bh
  425cb6:	dec    eax
  425cb7:	fst    QWORD PTR [esi+0x52186686]
  425cbd:	retf   
  425cbe:	pop    es
  425cbf:	ins    BYTE PTR es:[edi],dx
  425cc0:	rol    DWORD PTR ds:0x1d6bb6a0,cl
  425cc6:	cdq    
  425cc7:	xchg   DWORD PTR [eax+0x6b76901b],edx
  425ccd:	unpcklps xmm2,XMMWORD PTR [ebp-0x80]
  425cd1:	cmp    BYTE PTR [edi],ch
  425cd3:	cmc    
  425cd4:	xchg   ebp,eax
  425cd5:	push   ds
  425cd6:	jp     0x425d32
  425cd8:	jle    0x425d19
  425cda:	pop    esp
  425cdb:	call   0x13dd6fb
  425ce0:	dec    esi
  425ce1:	nop
  425ce2:	dec    esp
  425ce3:	xor    bh,0x21
  425ce6:	ja     0x425d00
  425ce8:	cwde   
  425ce9:	mov    al,0x33
  425ceb:	loope  0x425c91
  425ced:	arpl   WORD PTR [esi-0x54],bx
  425cf0:	div    BYTE PTR [edi+0x18]
  425cf3:	xor    ah,BYTE PTR [esi]
  425cf5:	dec    esp
  425cf6:	adc    ecx,DWORD PTR [ecx]
  425cf8:	ret    
  425cf9:	xchg   BYTE PTR [ebx+0x706d76e7],ah
  425cff:	xor    esi,ebx
  425d01:	ret    
  425d02:	push   ebp
  425d03:	imul   ecx,DWORD PTR [edx-0x6],0x294794af
  425d0a:	adc    eax,0x5470742d
  425d0f:	pop    es
  425d10:	mov    eax,0xc9468378
  425d15:	loopne 0x425cbb
  425d17:	pop    edx
  425d18:	jmp    0x88ae68f9
  425d1d:	pop    es
  425d1e:	adc    al,0xc2
  425d20:	jl     0x425d95
  425d22:	test   BYTE PTR [esp+ebx*4],ch
  425d25:	xor    al,0xd8
  425d27:	mov    edi,0xa8bc0bc6
  425d2c:	test   DWORD PTR [ebx-0x70],0xcca6095f
  425d33:	leave  
  425d34:	int3   
  425d35:	fisttp DWORD PTR [ebp+0x13f14647]
  425d3b:	retf   
  425d3c:	mov    cl,0xf0
  425d3e:	retf   0x5ece
  425d41:	push   0xaf0391cc
  425d46:	adc    al,0x8d
  425d48:	sbb    DWORD PTR [edi-0x68],ebx
  425d4b:	xchg   esp,eax
  425d4c:	lods   eax,DWORD PTR ds:[esi]
  425d4d:	dec    ecx
  425d4e:	js     0x425d0c
  425d50:	sub    cl,BYTE PTR [ecx-0x4d8c6ed2]
  425d56:	push   ebp
  425d57:	(bad)  
  425d58:	loopne 0x425dbf
  425d5a:	mov    cl,0x3e
  425d5c:	cmp    BYTE PTR [esi+0x4affa2d],bl
  425d62:	xor    BYTE PTR [esi],ah
  425d64:	dec    esi
  425d65:	popa   
  425d66:	dec    edi
  425d67:	jne    0x425d8a
  425d69:	push   0x28
  425d6b:	or     edi,edx
  425d6d:	pop    ebx
  425d6e:	in     eax,dx
  425d6f:	add    eax,0xd0517ea4
  425d74:	or     esp,DWORD PTR [edi+0x302fa83f]
  425d7a:	mov    esp,0x6c9bf465
  425d7f:	imul   edx,DWORD PTR [edx],0xd77e5b2b
  425d85:	sbb    ch,bl
  425d87:	jbe    0x425dc5
  425d89:	or     al,0x6f
  425d8b:	mov    dl,0x2b
  425d8d:	push   ds
  425d8e:	cmp    al,0xb0
  425d90:	fwait
  425d91:	pop    ds
  425d92:	and    esp,0x609b62f5
  425d98:	add    DWORD PTR [edx-0x13],ecx
  425d9b:	pop    edi
  425d9c:	dec    edi
  425d9d:	bound  edx,QWORD PTR [esi-0x64]
  425da0:	or     BYTE PTR [edi-0x63],bh
  425da3:	pop    edx
  425da4:	call   FWORD PTR [ebx]
  425da6:	fld    st(2)
  425da8:	scas   eax,DWORD PTR es:[edi]
  425da9:	sub    al,0xb2
  425dab:	dec    esp
  425dac:	xor    eax,0xf84a09c2
  425db1:	push   eax
  425db2:	push   eax
  425db3:	retf   
  425db4:	ret    
  425db5:	mov    bh,0xc6
  425db7:	sahf   
  425db8:	pop    eax
  425db9:	xchg   BYTE PTR [edx+0x74],bh
  425dbc:	or     al,0x1d
  425dbe:	(bad)  
  425dbf:	retf   
  425dc0:	jmp    0x425d57
  425dc2:	pop    esi
  425dc3:	and    bl,BYTE PTR [edx+edi*8]
  425dc6:	fwait
  425dc7:	sbb    BYTE PTR [edx],bl
  425dc9:	shl    BYTE PTR [edx-0x17],1
  425dcc:	mov    ds:0x541c2940,al
  425dd1:	js     0x425e47
  425dd3:	ins    DWORD PTR es:[edi],dx
  425dd4:	xor    DWORD PTR [ebx-0x6d41a9c],edx
  425dda:	jb     0x425e0e
  425ddc:	or     BYTE PTR [edi-0x2e9e77eb],al
  425de2:	push   ebx
  425de3:	je     0x425dca
  425de5:	fs or  al,0x77
  425de8:	lods   al,BYTE PTR ds:[esi]
  425de9:	mov    ebx,0x8ba74290
  425dee:	mov    bh,0x13
  425df0:	pop    edx
  425df1:	push   esp
  425df2:	cmp    eax,0x727df4ea
  425df7:	mov    edx,0x1778849f
  425dfc:	push   edi
  425dfd:	dec    esp
  425dfe:	call   0xd89c:0x7805bb67
  425e05:	(bad)  [esi-0x5a]
  425e08:	xor    ah,BYTE PTR [eax]
  425e0a:	out    0xa,al
  425e0c:	shl    BYTE PTR [edx-0xd2ead2d],0x4a
  425e13:	(bad)  
  425e15:	in     al,0x3f
  425e17:	jp     0x425dd2
  425e19:	arpl   WORD PTR [ebp-0x73899b79],ax
  425e1f:	cmp    bh,BYTE PTR [ecx]
  425e21:	sub    al,0x93
  425e23:	(bad)  
  425e24:	popf   
  425e25:	mov    dh,0xce
  425e27:	mov    al,0x11
  425e29:	add    al,0xb9
  425e2b:	pop    esp
  425e2c:	sbb    ch,BYTE PTR [ecx]
  425e2e:	imul   edi,DWORD PTR [ecx],0x2534b7d4
  425e34:	cmp    esp,esi
  425e36:	inc    edi
  425e37:	mov    ah,0xc9
  425e39:	clc    
  425e3a:	push   0x0
  425e3c:	mov    es,WORD PTR [esi]
  425e3e:	xchg   BYTE PTR [ebx-0x325f4109],cl
  425e44:	ret    0xac62
  425e47:	or     eax,0xc40bf512
  425e4c:	bound  ebx,QWORD PTR [edi+0x1ecc29d5]
  425e52:	call   0x156b46ee
  425e57:	mov    ebx,0x6c682940
  425e5c:	popa   
  425e5d:	or     al,0xcc
  425e5f:	fisttp WORD PTR [edx-0x33df91d4]
  425e65:	pop    es
  425e66:	xor    BYTE PTR [edi],dh
  425e68:	aas    
  425e69:	aas    
  425e6a:	scas   al,BYTE PTR es:[edi]
  425e6b:	sub    ch,dl
  425e6d:	sub    DWORD PTR ds:0xd3703fd8,edi
  425e73:	mov    ds:0x93dbca7e,al
  425e78:	cld    
  425e79:	or     BYTE PTR [eax+0x229dc780],bl
  425e7f:	xchg   edi,eax
  425e80:	dec    esp
  425e81:	and    BYTE PTR [esp+ecx*4],bl
  425e84:	mov    eax,ds:0xeeaac21
  425e89:	cmp    al,BYTE PTR [eax+eiz*2+0x24]
  425e8d:	addr16 ret 
  425e8f:	and    esp,ecx
  425e91:	fdiv   QWORD PTR [ebp-0x77a03b14]
  425e97:	xchg   ecx,eax
  425e98:	pop    eax
  425e99:	mov    bh,BYTE PTR [edx-0x1e85ef41]
  425e9f:	push   cs
  425ea0:	sub    cl,BYTE PTR [eax]
  425ea2:	xlat   BYTE PTR ds:[ebx]
  425ea3:	add    esp,DWORD PTR [eax+0x1d485534]
  425ea9:	and    al,0xf1
  425eab:	xlat   BYTE PTR ds:[ebx]
  425eac:	and    al,0x7d
  425eae:	pop    eax
  425eaf:	and    al,0x3e
  425eb1:	sar    esi,0xf5
  425eb4:	cs inc ebp
  425eb6:	sub    eax,0x8ab7f27c
  425ebb:	into   
  425ebc:	jp     0x425ede
  425ebe:	retf   
  425ebf:	and    DWORD PTR [edx+ebx*8],esp
  425ec2:	lods   eax,DWORD PTR ds:[esi]
  425ec3:	test   DWORD PTR [ebp-0x41],ecx
  425ec6:	fs mov dh,0xd8
  425ec9:	dec    eax
  425eca:	cli    
  425ecb:	sahf   
  425ecc:	mov    BYTE PTR [ebx+edx*8+0x30],ch
  425ed0:	jle    0x425ede
  425ed2:	ins    BYTE PTR es:[edi],dx
  425ed3:	dec    edx
  425ed4:	inc    esp
  425ed5:	jp     0x425ea4
  425ed7:	call   0xe456:0x90872aa4
  425ede:	ficom  WORD PTR [edx-0x51]
  425ee1:	and    edi,DWORD PTR [esi+0x47]
  425ee4:	mov    ah,0xf
  425ee6:	shr    BYTE PTR [ebp+esi*1+0x6f],cl
  425eea:	lahf   
  425eeb:	jno    0x425e8d
  425eed:	pop    esp
  425eee:	aad    0xd1
  425ef0:	in     eax,dx
  425ef1:	or     ah,BYTE PTR [edx]
  425ef3:	sub    dl,al
  425ef5:	add    BYTE PTR [eax+0x121f5149],al
  425efb:	test   edx,0x3fa44db2
  425f01:	pop    ebp
  425f02:	inc    edx
  425f03:	les    edi,FWORD PTR [edi]
  425f05:	xchg   ebx,eax
  425f06:	mov    ds:0x107ac8d3,al
  425f0b:	ins    BYTE PTR es:[edi],dx
  425f0c:	dec    BYTE PTR [esi+0x1]
  425f0f:	xchg   ebp,eax
  425f10:	add    esi,DWORD PTR [eax+0x1b]
  425f13:	ja     0x425f74
  425f15:	(bad)  
  425f16:	xchg   ebp,eax
  425f17:	dec    ecx
  425f18:	jno    0x425f2a
  425f1a:	xchg   esp,eax
  425f1b:	pop    es
  425f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f1d:	pop    edi
  425f1e:	push   0x14cc8738
  425f23:	mov    eax,0x9addad27
  425f28:	pop    ecx
  425f29:	mov    esi,0x9dcf624
  425f2e:	xchg   esi,esi
  425f30:	push   eax
  425f31:	push   0xc9d974
  425f36:	push   ebp
  425f37:	pop    ds
  425f38:	aaa    
  425f39:	mov    eax,0x5ffdcd37
  425f3e:	test   al,0x86
  425f40:	mov    es,WORD PTR [ebp+0x5e]
  425f43:	popa   
  425f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f45:	mov    ebp,eax
  425f47:	int3   
  425f48:	adc    eax,0x9f41e533
  425f4d:	rcr    BYTE PTR [edx+0x49],0xf0
  425f51:	sub    BYTE PTR fs:[edi+ebp*2+0x28],bl
  425f56:	push   eax
  425f57:	dec    ebp
  425f58:	ds adc al,0x5
  425f5b:	cmp    DWORD PTR [eax+edi*8],ebp
  425f5e:	add    eax,0xbcfea75c
  425f63:	pusha  
  425f64:	aad    0x15
  425f66:	js     0x425f71
  425f68:	inc    edi
  425f69:	sub    DWORD PTR [ecx+0x25b231e0],esp
  425f6f:	mov    DWORD PTR [eax+ebx*2],esp
  425f72:	jne    0x425fd3
  425f74:	add    al,0x72
  425f76:	mov    esi,0xe852d677
  425f7b:	xchg   ebp,eax
  425f7c:	scas   eax,DWORD PTR es:[edi]
  425f7d:	sub    BYTE PTR [ecx-0x4ba4301d],cl
  425f83:	neg    DWORD PTR [edi+0x2e]
  425f86:	dec    esp
  425f87:	pop    edx
  425f88:	jb     0x425f4c
  425f8a:	inc    esp
  425f8b:	sbb    al,0x33
  425f8d:	(bad)  
  425f8e:	xor    dh,ah
  425f90:	dec    eax
  425f91:	pop    esi
  425f92:	xchg   DWORD PTR [esi-0x3fa69237],esi
  425f98:	sbb    BYTE PTR [ebx],ch
  425f9a:	cmp    cl,BYTE PTR [edi]
  425f9c:	stos   BYTE PTR es:[edi],al
  425f9d:	ss lahf 
  425f9f:	ja     0x425f72
  425fa1:	cmp    al,0xcc
  425fa3:	and    cl,BYTE PTR [eax]
  425fa5:	out    dx,eax
  425fa6:	jns    0x42600d
  425fa8:	jle    0x425f2e
  425faa:	pusha  
  425fab:	push   0xce79c1ae
  425fb0:	out    0x18,al
  425fb2:	xor    al,0x84
  425fb4:	jge    0x425f4c
  425fb6:	js     0x425fe1
  425fb8:	fisttp WORD PTR [edx-0x68]
  425fbb:	daa    
  425fbc:	sub    al,0x66
  425fbe:	mov    edi,0x89bf6014
  425fc3:	fwait
  425fc4:	sahf   
  425fc5:	push   eax
  425fc6:	jecxz  0x426016
  425fc8:	sbb    ebx,DWORD PTR [esi]
  425fca:	fisttp DWORD PTR [edx+0x5b74f0ba]
  425fd0:	sub    dl,BYTE PTR [ecx+0x7d50c2b7]
  425fd6:	dec    esp
  425fd7:	cwde   
  425fd8:	loop   0x425f61
  425fda:	push   esp
  425fdb:	adc    BYTE PTR [ebx-0xe],bh
  425fde:	adc    al,0x67
  425fe0:	inc    eax
  425fe1:	inc    ecx
  425fe2:	sub    ebx,DWORD PTR [ebx-0x2a]
  425fe5:	cdq    
  425fe6:	xor    BYTE PTR [edx-0x46bc9bc0],dh
  425fec:	ror    BYTE PTR [ecx-0x53],1
  425fef:	push   cs
  425ff0:	cs mov esi,0x43487b88
  425ff6:	outs   dx,DWORD PTR ds:[esi]
  425ff7:	popf   
  425ff8:	mov    gs,edx
  425ffa:	shr    DWORD PTR [edx+esi*4-0x32225993],cl
  426001:	and    bh,BYTE PTR [ecx+0x36]
  426004:	rcr    BYTE PTR [edx+0x60c07a24],1
  42600a:	popf   
  42600b:	lods   al,BYTE PTR ds:[esi]
  42600c:	fdivr  DWORD PTR [eax-0x6c]
  42600f:	shl    DWORD PTR [ecx],cl
  426011:	pop    esp
  426012:	or     al,0x54
  426014:	ss addr16 pushf 
  426017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426018:	clc    
  426019:	xor    dl,BYTE PTR [edi]
  42601b:	fmul   DWORD PTR [ecx+0x10c001f0]
  426021:	(bad)  
  426022:	jno    0x425fbb
  426024:	iret   
  426025:	add    BYTE PTR [esi],ah
  426027:	jle    0x42600d
  426029:	xchg   edi,eax
  42602a:	xchg   esi,eax
  42602b:	mov    eax,ds:0x565d1d20
  426030:	ror    DWORD PTR [ebx+eax*4-0x503883b3],1
  426037:	xchg   BYTE PTR ds:0x9205b097,dl
  42603d:	sbb    cl,ch
  42603f:	loope  0x42605d
  426041:	jecxz  0x425fdc
  426043:	aam    0xf9
  426045:	mov    cl,0x1b
  426047:	aam    0xcc
  426049:	cld    
  42604a:	in     eax,0x6e
  42604c:	clc    
  42604d:	loope  0x42607d
  42604f:	jp     0x426000
  426051:	pop    edi
  426052:	jae    0x42607f
  426054:	iret   
  426055:	sbb    al,0x85
  426057:	aaa    
  426058:	test   al,0x8e
  42605a:	imul   ebx,DWORD PTR [esp+ebx*8],0x69
  42605e:	les    edi,FWORD PTR [edx-0x21]
  426061:	adc    eax,0xbf2a498f
  426066:	pop    ebx
  426067:	call   0x6637edf4
  42606c:	test   eax,0xcff3c1b
  426071:	fcmovnbe st,st(0)
  426073:	mov    bh,BYTE PTR [edi]
  426075:	les    esp,FWORD PTR [eax]
  426077:	push   DWORD PTR [ecx+0x30]
  42607a:	popa   
  42607b:	icebp  
  42607c:	jb     0x42601b
  42607e:	jp     0x426080
  426080:	call   0x74dc:0x2975d827
  426087:	adc    al,0x80
  426089:	jg     0x426014
  42608b:	cld    
  42608c:	out    0xa0,eax
  42608e:	test   ebp,edi
  426090:	cmp    DWORD PTR ds:0x4a200dd0,eax
  426096:	xor    DWORD PTR [esi+0x74],0x1a
  42609a:	or     al,0x2b
  42609c:	inc    eax
  42609d:	inc    esp
  42609e:	dec    ebp
  42609f:	add    ebp,DWORD PTR [edi]
  4260a1:	das    
  4260a2:	mov    ah,0x95
  4260a4:	and    al,0x2d
  4260a6:	push   0xd84e6baa
  4260ab:	jns    0x426081
  4260ad:	dec    esi
  4260ae:	pop    ss
  4260af:	adc    BYTE PTR [ebp+0x12c81574],cl
  4260b5:	inc    esi
  4260b6:	pop    ecx
  4260b7:	push   ecx
  4260b8:	xor    al,0xcc
  4260ba:	idiv   DWORD PTR [ecx]
  4260bc:	ficomp DWORD PTR [esi-0x1c]
  4260bf:	fcmovne st,st(4)
  4260c1:	pop    eax
  4260c2:	mov    WORD PTR [edx-0x72],gs
  4260c5:	add    DWORD PTR [eax+0x7c3e8770],esi
  4260cb:	xor    DWORD PTR [esi],eax
  4260cd:	mov    al,0x6a
  4260cf:	sub    dl,BYTE PTR [edx+eiz*1]
  4260d2:	and    ah,BYTE PTR [eax-0x6f60bf92]
  4260d8:	mov    WORD PTR [edi-0x3ab76518],cs
  4260de:	fsubr  QWORD PTR [eax+eax*1]
  4260e1:	jbe    0x426069
  4260e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e4:	xchg   ecx,eax
  4260e5:	ins    BYTE PTR es:[edi],dx
  4260e6:	push   edi
  4260e7:	xchg   edi,eax
  4260e8:	pop    eax
  4260e9:	enter  0xe853,0x99
  4260ed:	jecxz  0x42607f
  4260ef:	xor    ch,cl
  4260f1:	(bad)  [edx-0x58]
  4260f4:	mov    dh,0xd3
  4260f6:	jg     0x4260ac
  4260f8:	test   DWORD PTR [ebx+esi*8-0x4b182f17],edi
  4260ff:	pop    ss
  426100:	pop    esp
  426101:	dec    edi
  426102:	jle    0x42611d
  426104:	outs   dx,BYTE PTR ds:[esi]
  426105:	xor    al,0xa8
  426107:	out    0xfa,al
  426109:	sbb    BYTE PTR [edi-0x53128ab4],0xc2
  426110:	adc    DWORD PTR [edi],0xffffffa4
  426113:	mov    cl,0xba
  426115:	mov    ah,BYTE PTR [ecx-0x14]
  426118:	push   esp
  426119:	cdq    
  42611a:	adc    ecx,eax
  42611c:	cdq    
  42611d:	push   edx
  42611e:	test   DWORD PTR [eax-0x41],0xec6f10eb
  426125:	test   BYTE PTR [edi+esi*8+0x6d],al
  426129:	outs   dx,DWORD PTR ds:[esi]
  42612a:	inc    ebp
  42612b:	adc    dh,BYTE PTR [ebx-0x6c]
  42612e:	int    0x55
  426130:	jnp    0x426137
  426132:	inc    ebx
  426133:	jl     0x42613a
  426135:	jno    0x4260ef
  426137:	int    0xfd
  426139:	pop    ebx
  42613a:	xchg   esi,eax
  42613b:	sbb    eax,0xdc1a6ac4
  426140:	test   BYTE PTR [edx],al
  426142:	xchg   esi,eax
  426143:	add    ecx,0x38
  426146:	arpl   WORD PTR [eax+eax*1-0x46d36c0a],ax
  42614d:	cwde   
  42614e:	aad    0x1e
  426150:	push   gs
  426152:	cld    
  426153:	mov    esp,gs
  426155:	dec    eax
  426156:	loop   0x42611a
  426158:	in     al,dx
  426159:	mov    dh,0xcc
  42615b:	and    BYTE PTR [edx-0x99987e8],al
  426161:	test   DWORD PTR [edx+0x44c451f0],esi
  426167:	mov    DWORD PTR gs:[edi],ecx
  42616a:	jo     0x42614e
  42616c:	adc    al,0x81
  42616e:	ins    BYTE PTR es:[edi],dx
  42616f:	outs   dx,DWORD PTR ds:[esi]
  426170:	fcmovb st,st(7)
  426172:	mov    ebx,0x338e788
  426177:	ins    DWORD PTR es:[edi],dx
  426178:	dec    ebx
  426179:	xor    bl,BYTE PTR ds:[ebp-0x61ffc2e]
  426180:	lahf   
  426181:	sub    ebp,DWORD PTR [ebx+edx*8]
  426184:	inc    edi
  426185:	into   
  426186:	mov    al,0x4
  426188:	mov    ebx,0xa0a9972d
  42618d:	cdq    
  42618e:	shr    esp,1
  426190:	sub    BYTE PTR [ecx-0x17a7484e],dh
  426196:	add    DWORD PTR [edx-0x72],0x4c
  42619a:	loope  0x4261df
  42619c:	int    0xa2
  42619e:	mov    edi,0x70331bcd
  4261a3:	test   edx,esp
  4261a5:	lods   al,BYTE PTR ds:[esi]
  4261a6:	test   al,0xac
  4261a8:	sqrtps xmm1,XMMWORD PTR [eax+ebx*1+0x4d]
  4261ad:	dec    ecx
  4261ae:	and    dh,BYTE PTR [ebp+0x744d4e17]
  4261b4:	cmp    al,0x7d
  4261b6:	add    BYTE PTR [esi+edi*2+0x2f],0x4
  4261bb:	ja     0x426168
  4261bd:	pusha  
  4261be:	push   eax
  4261bf:	adc    ch,BYTE PTR [edi+0x5fafc124]
  4261c5:	fild   DWORD PTR [edx+ebp*8-0x5cce5cc6]
  4261cc:	je     0x426151
  4261ce:	mov    ds:0xd931c82c,al
  4261d3:	push   esi
  4261d4:	(bad)  
  4261d5:	xchg   ebx,eax
  4261d6:	dec    ebx
  4261d7:	imul   edx,DWORD PTR [eax-0x57],0xd
  4261db:	sbb    bl,BYTE PTR [ebx+0x3a]
  4261de:	lds    esi,FWORD PTR [edx-0x17]
  4261e1:	je     0x426208
  4261e3:	mov    al,ds:0x747e73a5
  4261e8:	xchg   esi,eax
  4261e9:	scas   al,BYTE PTR es:[edi]
  4261ea:	cwde   
  4261eb:	and    ebx,edi
  4261ed:	inc    edx
  4261ee:	cmc    
  4261ef:	nop
  4261f0:	jmp    0xffe79a4
  4261f5:	in     eax,0x7b
  4261f7:	fsubr  QWORD PTR [ecx*8-0x479bc14a]
  4261fe:	push   cs
  4261ff:	cld    
  426200:	sub    al,0x24
  426202:	ins    DWORD PTR es:[edi],dx
  426203:	std    
  426204:	sbb    cl,BYTE PTR [eax+0x3fcf3d01]
  42620a:	out    0x1,al
  42620c:	shr    DWORD PTR [edi],0xac
  42620f:	push   eax
  426210:	pop    ss
  426211:	mov    bh,0xde
  426213:	aaa    
  426214:	lods   al,BYTE PTR ds:[esi]
  426215:	adc    eax,0x2d9bd0b5
  42621a:	test   eax,0x90ea8f98
  42621f:	adc    DWORD PTR [eax+0x5a],edi
  426222:	push   es
  426223:	jbe    0x426266
  426225:	(bad)  
  426226:	sub    BYTE PTR ds:0xfe189cc3,bh
  42622c:	mov    ecx,0x6321e6c7
  426231:	inc    eax
  426232:	shr    BYTE PTR [edx+0x77251925],0x8e
  426239:	arpl   WORD PTR [esi-0x5aeaf41c],dx
  42623f:	jae    0x426280
  426241:	push   eax
  426242:	pop    esi
  426243:	test   BYTE PTR [eax],cl
  426245:	xlat   BYTE PTR ds:[ebx]
  426246:	push   eax
  426247:	imul   edi,DWORD PTR [ecx+0x67da14bd],0xca25b0b0
  426251:	sbb    al,0x10
  426253:	in     al,dx
  426254:	std    
  426255:	mov    ebp,0xec1ad9d4
  42625a:	cs lahf 
  42625c:	jg     0x4261ef
  42625e:	out    dx,al
  42625f:	clc    
  426260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426261:	mov    ds:0x3094a740,al
  426266:	jge    0x426229
  426268:	sbb    al,0xbd
  42626a:	mov    bl,0x3d
  42626c:	xor    DWORD PTR [esi+0x7],0x9740703b
  426273:	lds    edi,FWORD PTR [edi+0x1e5d41fc]
  426279:	cmp    ebp,eax
  42627b:	scas   al,BYTE PTR es:[edi]
  42627c:	cs jle 0x426223
  42627f:	inc    ebp
  426280:	and    eax,DWORD PTR [eax+0x4b]
  426283:	or     al,0xc9
  426285:	or     al,0x6f
  426287:	xor    al,0xe5
  426289:	xchg   BYTE PTR [ebx],dh
  42628b:	cmp    esi,DWORD PTR [eax]
  42628d:	into   
  42628e:	add    al,0x86
  426290:	fdivr  DWORD PTR [ecx-0x2a]
  426293:	sahf   
  426294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426295:	push   esp
  426296:	bound  esi,QWORD PTR [edx-0x4e]
  426299:	mov    ebx,0x2c916351
  42629e:	cld    
  42629f:	ins    DWORD PTR es:[edi],dx
  4262a0:	pop    esi
  4262a1:	lahf   
  4262a2:	push   0x51184f94
  4262a7:	and    al,ah
  4262a9:	out    0xbf,eax
  4262ab:	mov    ch,0x5e
  4262ad:	aas    
  4262ae:	adc    DWORD PTR [esi+0x44],edx
  4262b1:	fnstsw WORD PTR [esi+0x61]
  4262b4:	push   es
  4262b5:	scas   al,BYTE PTR es:[edi]
  4262b6:	push   edi
  4262b7:	sub    BYTE PTR [ecx+0x68],bl
  4262ba:	pop    DWORD PTR [edx+0x4]
  4262bd:	lahf   
  4262be:	cmp    al,0xd3
  4262c0:	imul   ebp,DWORD PTR [eax+0x4fc5958c],0x6168b71e
  4262ca:	call   0x9ccd:0xc5857634
  4262d1:	jecxz  0x426313
  4262d3:	out    dx,al
  4262d4:	pop    eax
  4262d5:	pop    eax
  4262d6:	jb     0x426264
  4262d8:	adc    DWORD PTR [ebp+0x7c93959a],edi
  4262de:	cs dec eax
  4262e1:	and    eax,0xafc158d0
  4262e6:	mov    al,ds:0x905cf603
  4262eb:	and    BYTE PTR [eax+0x28],ah
  4262ee:	or     DWORD PTR [eax+0x71],ecx
  4262f1:	aaa    
  4262f2:	sahf   
  4262f3:	imul   edi,eax,0x17
  4262f6:	or     bh,ah
  4262f8:	ins    BYTE PTR es:[edi],dx
  4262f9:	int    0x53
  4262fb:	test   DWORD PTR [edx+0x66],ecx
  4262fe:	cmp    esp,esi
  426300:	jmp    0x2770f595
  426305:	ins    DWORD PTR es:[edi],dx
  426306:	stc    
  426307:	sbb    BYTE PTR [eax+0xab1b479],bh
  42630d:	leave  
  42630e:	add    al,0x6f
  426310:	mov    ebx,0x5d8d48d
  426315:	(bad)  
  426316:	jae    0x4262a6
  426318:	cld    
  426319:	enter  0xc180,0x80
  42631d:	adc    esi,DWORD PTR [esi+0x83ecca4]
  426323:	dec    esi
  426324:	dec    ebp
  426325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426326:	inc    esp
  426327:	pop    ss
  426328:	sub    al,0xae
  42632a:	cmp    al,0xb6
  42632c:	dec    edx
  42632d:	in     al,0xc8
  42632f:	pop    eax
  426330:	int    0x33
  426332:	mov    dl,0x2f
  426334:	push   esi
  426335:	adc    al,0xcf
  426337:	in     al,dx
  426338:	verr   di
  42633b:	dec    esi
  42633c:	mov    dh,0xa4
  42633e:	les    ebx,FWORD PTR [edi-0x724092f0]
  426344:	dec    ebp
  426345:	jmp    0x426380
  426347:	loop   0x42635d
  426349:	mov    eax,0x6de1e322
  42634e:	mov    esi,0xdc7c93fd
  426353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426354:	jmp    0x45a4df90
  426359:	add    DWORD PTR [edi+0x63d4900],esi
  42635f:	pop    edx
  426360:	sbb    ah,BYTE PTR [esi+0x224b8cd]
  426366:	ss fsub st(4),st
  426369:	fcmovnu st,st(5)
  42636b:	(bad)  [edi-0x34]
  42636e:	(bad)  
  42636f:	jnp    0x4263a5
  426371:	ds mov dl,0xc6
  426374:	aas    
  426375:	and    al,dh
  426377:	or     eax,0xae21d9c9
  42637c:	cmp    eax,0xaf14dbb8
  426381:	call   0xc791c5cd
  426386:	mov    edi,0x49e838c3
  42638b:	in     eax,dx
  42638c:	push   esp
  42638d:	clc    
  42638e:	inc    esp
  42638f:	outs   dx,DWORD PTR ds:[esi]
  426390:	fcomp  DWORD PTR [esp+ecx*2-0x79]
  426394:	out    dx,eax
  426395:	jmp    0x3204:0x5bd94008
  42639c:	or     eax,0x634a74d9
  4263a1:	jmp    0x426367
  4263a3:	sub    BYTE PTR [ebx-0x77],dl
  4263a6:	or     eax,0x659a4f37
  4263ab:	dec    esp
  4263ac:	dec    esp
  4263ad:	cmovo  esi,DWORD PTR [ebx+0x469b393b]
  4263b4:	jl     0x426426
  4263b6:	sahf   
  4263b7:	cmp    DWORD PTR [edi],0x7e
  4263ba:	xor    BYTE PTR [ebx],cl
  4263bc:	xchg   ebx,eax
  4263bd:	inc    edi
  4263be:	sbb    bl,dl
  4263c0:	push   cs
  4263c1:	lds    ebx,FWORD PTR [edi+eiz*1+0x3c8887d9]
  4263c8:	cmp    cl,BYTE PTR [edi-0x20]
  4263cb:	dec    ebp
  4263cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263cd:	add    DWORD PTR [edi],eax
  4263cf:	inc    edx
  4263d0:	pusha  
  4263d1:	and    al,0xab
  4263d3:	outs   dx,BYTE PTR ds:[esi]
  4263d4:	cdq    
  4263d5:	(bad)  
  4263d6:	xchg   ebx,eax
  4263d7:	fsub   DWORD PTR [ebx-0x7c]
  4263da:	stos   BYTE PTR es:[edi],al
  4263db:	(bad)  
  4263dc:	sub    eax,0x95fca775
  4263e1:	sbb    BYTE PTR [eax+0x299cb9b],ch
  4263e7:	or     DWORD PTR ds:0xef50511e,edi
  4263ed:	popf   
  4263ee:	jo     0x426402
  4263f0:	xor    ebx,DWORD PTR [eax-0x3d]
  4263f3:	mov    BYTE PTR [ebx+edx*1-0x24],dh
  4263f7:	xor    al,0x24
  4263f9:	xchg   esp,eax
  4263fa:	xchg   ecx,eax
  4263fb:	icebp  
  4263fc:	inc    ecx
  4263fd:	cwde   
  4263fe:	inc    eax
  4263ff:	or     ebx,DWORD PTR [ecx-0x4a]
  426402:	shr    BYTE PTR [edx+0x56],1
  426405:	pushf  
  426406:	mov    esp,0xdf653cc6
  42640b:	ja     0x426428
  42640d:	jae    0x426480
  42640f:	loopne 0x426462
  426411:	imul   ecx,DWORD PTR [edx-0x63650a58],0x3c9088ce
  42641b:	lock (bad) 
  42641d:	xor    DWORD PTR [ecx+0x73],esi
  426420:	ja     0x4263ce
  426422:	and    eax,0x52373408
  426427:	dec    ebx
  426428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426429:	dec    edx
  42642a:	sar    dh,1
  42642c:	jmp    0x4263cb
  42642e:	adc    BYTE PTR [edx-0xc],ch
  426431:	push   eax
  426432:	int    0xf4
  426434:	xchg   edi,eax
  426435:	in     al,0x19
  426437:	fidivr DWORD PTR [edi+eiz*2-0xd]
  42643b:	lea    ebx,[edx+eiz*4+0x2fb78b2f]
  426442:	in     eax,dx
  426443:	xchg   eax,ebx
  426445:	ror    BYTE PTR [ecx+0x6],0x55
  426449:	inc    edi
  42644a:	icebp  
  42644b:	pop    ebp
  42644c:	add    DWORD PTR [esi-0x1c],ecx
  42644f:	jecxz  0x4264a8
  426451:	(bad)  
  426453:	sti    
  426454:	mov    ebp,0xc5087767
  426459:	ror    DWORD PTR [esi+0x20],cl
  42645c:	int    0xcd
  42645e:	loop   0x426458
  426460:	sub    al,0xf
  426462:	push   ecx
  426463:	icebp  
  426464:	sub    DWORD PTR [ecx+0x48],ebp
  426467:	test   eax,0x4335d4b0
  42646c:	pop    ds
  42646d:	das    
  42646e:	add    al,0xda
  426470:	shl    DWORD PTR [ebx-0x2428e408],cl
  426476:	adc    ebp,DWORD PTR [esi+0x17]
  426479:	add    bl,bh
  42647b:	sbb    al,0x8c
  42647d:	and    eax,0x887d9453
  426482:	sbb    eax,0xb59f4045
  426487:	jp     0x42641c
  426489:	jnp    0x42642d
  42648b:	fs cmp eax,0x2dd523e8
  426491:	int3   
  426492:	(bad)  
  426493:	stos   DWORD PTR es:[edi],eax
  426494:	sti    
  426495:	and    BYTE PTR [esi*1-0x4be5f810],cl
  42649c:	xchg   esi,eax
  42649d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42649e:	lea    esi,[eax]
  4264a0:	jg     0x426484
  4264a2:	jl     0x42651d
  4264a4:	aam    0x5
  4264a6:	xchg   esp,eax
  4264a7:	leave  
  4264a8:	push   esp
  4264a9:	pop    ebp
  4264aa:	and    edx,DWORD PTR [esi+0x725fd85b]
  4264b0:	inc    ecx
  4264b1:	js     0x42647b
  4264b3:	sub    dl,ch
  4264b5:	xor    eax,DWORD PTR [ebx+0x76]
  4264b8:	fiadd  WORD PTR [ebx]
  4264ba:	and    BYTE PTR [ecx+0x32ae3175],bl
  4264c0:	ds pop ebx
  4264c2:	add    al,BYTE PTR [edi+esi*1+0x7e]
  4264c6:	pop    esi
  4264c7:	adc    al,0x36
  4264c9:	mov    esi,0xcf681ccc
  4264ce:	add    BYTE PTR [edx-0x69230ae9],cl
  4264d4:	jnp    0x426462
  4264d6:	(bad)  
  4264d8:	(bad)  
  4264d9:	test   edx,edx
  4264db:	icebp  
  4264dc:	(bad)  
  4264dd:	lock xor al,0xd6
  4264e0:	lds    ebp,FWORD PTR [esi]
  4264e2:	adc    BYTE PTR [ebp+0x58bf63bb],al
  4264e8:	mov    al,0xd1
  4264ea:	imul   eax,edx,0xffffffcd
  4264ed:	mov    edx,0x377c67b1
  4264f2:	test   DWORD PTR [ebp+0x68],esp
  4264f5:	pop    ecx
  4264f6:	clc    
  4264f7:	jecxz  0x42653f
  4264f9:	mov    al,ds:0xbc4286b9
  4264fe:	or     bh,ch
  426500:	gs sbb al,0xc4
  426503:	mov    es,WORD PTR [ebx-0x184afa14]
  426509:	push   es
  42650a:	xchg   esp,eax
  42650b:	ins    BYTE PTR es:[edi],dx
  42650c:	jne    0x4264cd
  42650e:	outs   dx,BYTE PTR ds:[esi]
  42650f:	xchg   edx,eax
  426510:	jne    0x426500
  426512:	inc    esi
  426513:	push   ecx
  426514:	nop
  426515:	sbb    al,0x1e
  426517:	adc    ecx,DWORD PTR [edi-0x4c19760]
  42651d:	mov    ah,0xfe
  42651f:	xor    ecx,edi
  426521:	loope  0x426564
  426523:	leave  
  426524:	mov    ds:0x86c1d8c5,eax
  426529:	cmc    
  42652a:	(bad)  
  42652b:	loop   0x426508
  42652d:	cwde   
  42652e:	xlat   BYTE PTR ds:[ebx]
  42652f:	cld    
  426530:	fwait
  426531:	push   ecx
  426532:	aam    0x9a
  426534:	lods   eax,DWORD PTR ds:[esi]
  426535:	scas   eax,DWORD PTR es:[edi]
  426536:	adc    al,0x91
  426538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426539:	(bad)  
  42653a:	push   ebx
  42653b:	push   ss
  42653c:	ds mov dl,0x7d
  42653f:	mov    dh,0xc9
  426541:	enter  0x74da,0xa
  426545:	enter  0x50a4,0xf7
  426549:	cwde   
  42654a:	in     al,dx
  42654b:	pushf  
  42654c:	xchg   esp,eax
  42654d:	shl    dh,0x92
  426550:	mov    ecx,DWORD PTR [ecx]
  426552:	cli    
  426553:	adc    ch,dh
  426555:	(bad)  
  426556:	mov    BYTE PTR [edi-0x66],ch
  426559:	jbe    0x42654a
  42655b:	(bad)  
  42655c:	mov    eax,0x7ea8a780
  426561:	lds    ebx,FWORD PTR [edx+0x5e]
  426564:	push   cs
  426565:	fadd   QWORD PTR [eax+0x50]
  426568:	ret    0xddb9
  42656b:	fld    st(2)
  42656d:	mov    ch,0x0
  42656f:	push   cs
  426570:	mov    edx,0x320e7942
  426575:	push   ds
  426576:	shl    DWORD PTR [esp+esi*2],1
  426579:	jg     0x4265ef
  42657b:	sub    eax,0x4a4f4f0
  426580:	dec    eax
  426581:	pop    ss
  426582:	xchg   edi,eax
  426583:	add    eax,0x6bfbae6f
  426588:	js     0x42657a
  42658a:	xchg   edx,eax
  42658b:	out    dx,al
  42658c:	adc    al,BYTE PTR [eax+0x31]
  42658f:	mov    BYTE PTR [esi+0x66],dh
  426592:	adc    al,0x9a
  426594:	pop    ebx
  426595:	sbb    ch,BYTE PTR [eax-0x4e]
  426598:	mov    es,esp
  42659a:	cwde   
  42659b:	cmp    ah,bl
  42659d:	and    DWORD PTR [ebx+0xb7637df],esi
  4265a3:	out    dx,al
  4265a4:	pop    esp
  4265a5:	lea    esp,[ebx-0x2e]
  4265a8:	jmp    0xe14dca83
  4265ad:	add    al,0x3d
  4265af:	dec    ebx
  4265b0:	and    eax,0x227589ba
  4265b5:	sub    BYTE PTR fs:[ecx-0x76967110],al
  4265bc:	aas    
  4265bd:	inc    ebx
  4265be:	mov    ah,0x4c
  4265c0:	push   ebp
  4265c1:	arpl   WORD PTR [esi],di
  4265c3:	leave  
  4265c4:	arpl   WORD PTR [esi+0x257029d0],si
  4265ca:	or     dh,0x4e
  4265cd:	adc    BYTE PTR [ecx],bl
  4265cf:	jb     0x4265fb
  4265d1:	xchg   esp,eax
  4265d2:	popa   
  4265d3:	loop   0x4265fa
  4265d5:	mov    BYTE PTR [edx+0x3ca30d0f],dl
  4265db:	sar    dh,0xdf
  4265de:	leave  
  4265df:	repnz shr BYTE PTR [esi+0x39],0x0
  4265e7:	add    dh,cl
  4265e9:	sbb    al,bl
  4265eb:	push   eax
  4265ec:	push   ecx
  4265ed:	or     DWORD PTR [eax],eax
  4265ef:	add    BYTE PTR [eax],al
  4265f1:	add    BYTE PTR [eax],al
  4265f3:	add    BYTE PTR [ecx+0x9],dl
  4265f6:	add    BYTE PTR [eax],al
  4265f8:	sub    eax,0x7c2600
  4265fd:	add    dh,BYTE PTR [esi]
  4265ff:	or     BYTE PTR [eax],al
  426601:	add    ah,al
  426603:	inc    ebp
  426604:	add    BYTE PTR [ebp+0x6e],al
  426607:	dec    edx
  426608:	mov    eax,ds:0xaaedb5a2
  42660d:	and    al,0x61
  42660f:	aaa    
  426610:	ror    eax,cl
  426612:	(bad)  
  426613:	fisubr DWORD PTR [eax]
  426615:	sti    
  426616:	dec    eax
  426617:	clc    
  426618:	push   ebp
  426619:	jo     0x426605
  42661b:	jmp    0xa815:0x6ca5a61b
  426622:	in     eax,dx
  426623:	bound  ebp,QWORD PTR [esi-0x6f112d7d]
  426629:	pushf  
  42662a:	sti    
  42662b:	in     al,0xad
  42662d:	(bad)
  426631:	cmp    BYTE PTR [edi+0x22d4347f],ch
  426637:	int3   
  426638:	cmp    eax,0x6cf15cf0
  42663d:	sub    DWORD PTR [edx+0xd],0x40
  426641:	sbb    al,0x28
  426643:	xor    BYTE PTR [ecx+0xb],0xe7
  426647:	xchg   ecx,eax
  426648:	or     edi,ecx
  42664a:	inc    ecx
  42664b:	dec    eax
  42664c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42664d:	imul   sp,WORD PTR [eax],0x91a4
  426652:	push   cs
  426653:	adc    eax,0x7deb4cc7
  426658:	push   ds
  426659:	push   eax
  42665a:	pop    esp
  42665b:	xchg   ebp,eax
  42665c:	adc    DWORD PTR [esi-0x39c97f90],edi
  426662:	sahf   
  426663:	gs push eax
  426665:	dec    ecx
  426666:	dec    esi
  426667:	xchg   esp,eax
  426668:	rcl    cl,1
  42666a:	cwde   
  42666b:	inc    ebp
  42666c:	add    al,0x29
  42666e:	xor    eax,0xdc6fb80f
  426673:	mov    ecx,0xac5e9472
  426678:	push   edi
  426679:	fsub   QWORD PTR [ebp+0x4d]
  42667c:	js     0x4266f0
  42667e:	faddp  st(1),st
  426680:	pop    ds
  426681:	mov    eax,0x7d74f384
  426686:	out    0x51,al
  426688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426689:	aam    0x4
  42668b:	test   al,0x43
  42668d:	add    dl,0x62
  426690:	in     al,0x15
  426692:	sti    
  426693:	test   ah,0x46
  426696:	loope  0x426674
  426698:	stos   BYTE PTR es:[edi],al
  426699:	or     edi,DWORD PTR [esi+ebx*2+0x3fdbf0a0]
  4266a0:	pop    ss
  4266a1:	fidivr DWORD PTR [ebx+0x146378bb]
  4266a7:	into   
  4266a8:	mov    ebp,0x104ce377
  4266ad:	scas   al,BYTE PTR es:[edi]
  4266ae:	inc    ebx
  4266af:	mov    esp,0x1edf68e
  4266b4:	not    BYTE PTR [ecx-0x7c]
  4266b7:	(bad)  
  4266b8:	loopne 0x42668f
  4266ba:	ror    dh,1
  4266bc:	xor    DWORD PTR [eax+0x48f07e6],esp
  4266c2:	sub    DWORD PTR [ecx],0xc
  4266c5:	mov    WORD PTR [edi-0x12],es
  4266c8:	cmp    al,0x91
  4266ca:	sub    BYTE PTR [edi-0x73],ch
  4266cd:	aas    
  4266ce:	pop    edi
  4266cf:	xchg   ebp,eax
  4266d0:	neg    BYTE PTR [esi]
  4266d2:	outs   dx,BYTE PTR ds:[esi]
  4266d3:	rcl    bl,1
  4266d5:	adc    eax,0x605055b5
  4266da:	xchg   ebx,eax
  4266db:	lods   eax,DWORD PTR ds:[esi]
  4266dc:	hlt    
  4266dd:	dec    esi
  4266de:	pop    edx
  4266df:	test   eax,0xa1f7b29f
  4266e4:	mov    bl,BYTE PTR [eax]
  4266e6:	add    eax,0x16f8114f
  4266eb:	hlt    
  4266ec:	inc    ecx
  4266ed:	mov    eax,0x1b486d3c
  4266f2:	mov    ebp,0xf43baa7e
  4266f7:	pusha  
  4266f8:	or     ch,BYTE PTR [edi+ebx*1]
  4266fb:	and    BYTE PTR [ecx],cl
  4266fd:	sbb    DWORD PTR [ecx+ebx*4+0x8],esp
  426701:	shl    DWORD PTR [ebp+ebx*4+0x4bedba72],cl
  426708:	cld    
  426709:	sub    al,0x66
  42670b:	xchg   ebx,eax
  42670c:	mov    WORD PTR [edi],?
  42670e:	pop    ecx
  42670f:	sub    esp,DWORD PTR [edx-0x2730af1e]
  426715:	inc    ebp
  426716:	push   es
  426717:	and    DWORD PTR [esp-0x31],edx
  42671b:	je     0x426785
  42671d:	sahf   
  42671e:	sub    eax,DWORD PTR [esi-0x3ee1bd5]
  426724:	sbb    al,0x68
  426726:	jo     0x426707
  426728:	cmp    al,0xfe
  42672a:	inc    ebx
  42672b:	pop    eax
  42672c:	add    al,BYTE PTR [eax-0x28]
  42672f:	aad    0x9
  426731:	fdivr  st,st(5)
  426733:	jmp    0x426714
  426735:	mov    esp,DWORD PTR [eax+esi*1-0x27]
  426739:	into   
  42673a:	mov    dh,0x8d
  42673c:	cs mov bl,0x4e
  42673f:	mov    BYTE PTR [ebx],bl
  426741:	loop   0x4267ab
  426743:	mov    ds:0xfe11e80,al
  426748:	lods   al,BYTE PTR ds:[esi]
  426749:	and    ch,BYTE PTR [ecx]
  42674b:	into   
  42674c:	rol    BYTE PTR ds:0x546114d7,0x13
  426753:	push   esp
  426754:	inc    esp
  426755:	xchg   edi,eax
  426756:	push   esi
  426757:	pusha  
  426758:	shl    ch,0x78
  42675b:	in     al,0x56
  42675d:	enter  0xd371,0xf
  426761:	call   0x972c:0xe96c9cf7
  426768:	jbe    0x42670b
  42676a:	ja     0x426713
  42676c:	shl    BYTE PTR [esi-0x51],0x94
  426770:	inc    edx
  426771:	iret   
  426772:	(bad)  
  426773:	mov    dl,0x1b
  426775:	in     al,0x60
  426777:	inc    edi
  426778:	xchg   ecx,eax
  426779:	xor    dh,BYTE PTR [ecx-0x73d98e7d]
  42677f:	push   edi
  426780:	and    BYTE PTR [eax-0x5f],ah
  426783:	int    0x8e
  426785:	push   0xf3d5b09e
  42678a:	inc    ebx
  42678b:	arpl   WORD PTR ds:0xd4ddb2c3,cx
  426791:	fsub   DWORD PTR [ebp+0x3f]
  426794:	scas   eax,DWORD PTR es:[edi]
  426795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426796:	and    bl,BYTE PTR [edi-0x7]
  426799:	clc    
  42679a:	sbb    edx,ecx
  42679c:	cmp    al,0x10
  42679e:	bound  eax,QWORD PTR [eax]
  4267a0:	sub    ch,ah
  4267a2:	mov    al,ds:0x38b27511
  4267a7:	fwait
  4267a8:	lahf   
  4267a9:	call   0xe5742c22
  4267ae:	xchg   edx,eax
  4267af:	mov    al,ds:0xd1de0acc
  4267b4:	call   0xb1184bdf
  4267b9:	int3   
  4267ba:	pop    es
  4267bb:	mov    cl,0x47
  4267bd:	or     al,0xde
  4267bf:	adc    eax,0xc9b779eb
  4267c4:	pop    ebp
  4267c5:	fidiv  WORD PTR [eax]
  4267c7:	or     eax,0x6712f6fa
  4267cc:	add    edx,DWORD PTR [edx-0x1abd27f3]
  4267d2:	or     ebp,ecx
  4267d4:	or     edx,ebp
  4267d6:	inc    eax
  4267d7:	je     0x4267d5
  4267d9:	xor    al,0x7
  4267db:	mov    eax,0x3c4df5fc
  4267e0:	in     eax,0x20
  4267e2:	sub    BYTE PTR [ebx-0x7def9679],0xae
  4267e9:	mov    al,ds:0xbac47744
  4267ee:	into   
  4267ef:	jmp    0xecdded9f
  4267f4:	fsub   QWORD PTR [edi+0x257825ca]
  4267fa:	mov    bl,0x6e
  4267fc:	adc    BYTE PTR [edx+0x73d440d5],dl
  426802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426803:	pop    edx
  426804:	sahf   
  426805:	xor    al,0xa5
  426807:	cmp    esp,DWORD PTR [edi-0x5e]
  42680a:	mov    esp,0x5898ae11
  42680f:	lahf   
  426810:	add    cl,dh
  426812:	aas    
  426813:	jmp    0x4267a5
  426815:	pushf  
  426816:	push   0x74c74a7c
  42681b:	push   ebp
  42681c:	jge    0x4267a4
  42681e:	aas    
  42681f:	in     eax,dx
  426820:	and    al,0xb7
  426822:	mov    edx,0xf5ff9acd
  426827:	in     al,dx
  426828:	or     al,0x48
  42682a:	pop    ds
  42682b:	(bad)  
  42682c:	xor    ah,BYTE PTR [ecx-0x51]
  42682f:	fiadd  WORD PTR [edx-0x4e]
  426832:	ins    BYTE PTR es:[edi],dx
  426833:	xor    ecx,DWORD PTR [ebx-0x6b3cd8c5]
  426839:	test   DWORD PTR [edi],ebx
  42683b:	nop
  42683c:	push   ebp
  42683d:	xor    dl,BYTE PTR [edi+eax*1-0x69]
  426841:	mov    ebp,0xcab48fe8
  426846:	cmp    DWORD PTR [edx-0x4c55bf5b],0xb1f55cf7
  426850:	or     al,0xa9
  426852:	or     BYTE PTR [ecx+ebp*1+0x42a58028],bh
  426859:	dec    esi
  42685a:	pop    edx
  42685b:	aad    0x3a
  42685d:	jmp    0x18230ce8
  426862:	sub    DWORD PTR [esi+0x6a1f704a],ebx
  426868:	enter  0xb492,0xe4
  42686c:	sbb    al,0xaf
  42686e:	jmp    0x4268ed
  426870:	push   ecx
  426871:	jo     0x42683f
  426873:	mov    BYTE PTR [ebp-0x47],cl
  426876:	jbe    0x4268d2
  426878:	lods   al,BYTE PTR ds:[esi]
  426879:	int    0x94
  42687b:	lfs    esi,FWORD PTR [ebp+0x42]
  42687f:	scas   eax,DWORD PTR es:[edi]
  426880:	test   eax,0xc2b833d7
  426885:	sahf   
  426886:	neg    BYTE PTR [edi]
  426888:	pop    ecx
  426889:	repnz daa 
  42688b:	rcr    ah,0x53
  42688e:	xchg   edx,eax
  42688f:	iret   
  426890:	push   eax
  426891:	fmul   QWORD PTR [ebx-0x3f]
  426894:	les    eax,FWORD PTR [eax]
  426896:	jecxz  0x426885
  426898:	xor    bl,ah
  42689a:	or     al,0x97
  42689c:	push   ecx
  42689d:	out    dx,al
  42689e:	test   al,0x2a
  4268a0:	ficom  DWORD PTR [eax-0x26]
  4268a3:	push   eax
  4268a4:	push   ecx
  4268a5:	dec    eax
  4268a6:	loope  0x426874
  4268a8:	sbb    eax,0xb2bbab7e
  4268ad:	and    BYTE PTR [ecx],bl
  4268af:	push   ecx
  4268b0:	lock js 0x42685d
  4268b3:	mov    cl,0x75
  4268b5:	mov    ?,WORD PTR [ebx-0x33eb56ee]
  4268bb:	cdq    
  4268bc:	fwait
  4268bd:	dec    ecx
  4268be:	sar    DWORD PTR [esi+edx*1],cl
  4268c1:	push   ebx
  4268c2:	mov    esp,0xcf81269e
  4268c7:	push   esi
  4268c8:	into   
  4268c9:	jmp    0xe93b48e3
  4268ce:	mov    dl,BYTE PTR [ebx-0x38e1d292]
  4268d4:	add    al,0x1a
  4268d6:	dec    esi
  4268d7:	mov    edx,0xbb60bd78
  4268dc:	mov    ebp,0xac558028
  4268e1:	pop    ebp
  4268e2:	cmp    al,0x19
  4268e4:	imul   edx,DWORD PTR [esi],0x16bbee4c
  4268ea:	sahf   
  4268eb:	xchg   DWORD PTR [esi+0x5e],esp
  4268ee:	pop    ds
  4268ef:	hlt    
  4268f0:	inc    ebp
  4268f1:	xchg   esi,eax
  4268f2:	add    ebp,DWORD PTR [esi-0x64]
  4268f5:	mov    esp,0x3f188beb
  4268fa:	popa   
  4268fb:	mov    eax,ds:0x7b6fbd71
  426900:	fdivr  DWORD PTR [edi+eiz*1]
  426903:	adc    eax,0x9fcb8ea4
  426908:	inc    ecx
  426909:	int    0x60
  42690b:	sahf   
  42690c:	pusha  
  42690d:	mov    al,0xcb
  42690f:	jne    0x42690a
  426911:	ret    
  426912:	cwde   
  426913:	test   al,dh
  426915:	xlat   BYTE PTR ds:[ebx]
  426916:	dec    DWORD PTR [edx]
  426918:	mov    eax,ds:0x2ccbe1d7
  42691d:	inc    esp
  42691e:	test   eax,0x6396006b
  426923:	push   edx
  426924:	cmc    
  426925:	push   eax
  426926:	call   0x1461b191
  42692b:	jge    0x426961
  42692d:	daa    
  42692e:	je     0x4268e3
  426930:	push   ss
  426931:	imul   ecx,DWORD PTR ds:0x8fac7593,0x17d81798
  42693b:	xchg   ebp,eax
  42693c:	jnp    0x42697e
  42693e:	pop    ss
  42693f:	jecxz  0x426981
  426941:	jmp    0x426915
  426943:	jmp    0x645a:0x8300d26a
  42694a:	sbb    ch,BYTE PTR [ecx+0x77]
  42694d:	iret   
  42694e:	or     DWORD PTR [esi-0x51],edx
  426951:	mov    BYTE PTR [eax-0x4f6afdc2],cl
  426957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426958:	cmp    al,0xdd
  42695a:	loope  0x426908
  42695c:	stc    
  42695d:	xchg   ecx,eax
  42695e:	inc    eax
  42695f:	dec    edx
  426960:	scas   al,BYTE PTR es:[edi]
  426961:	(bad)  
  426962:	or     eax,0x58f8d081
  426967:	sbb    BYTE PTR [eax],dh
  426969:	xchg   BYTE PTR [esi],dh
  42696b:	cmp    al,0x34
  42696d:	js     0x4269d5
  42696f:	jo     0x426901
  426971:	or     eax,0x9f0aee0e
  426976:	pushf  
  426977:	jae    0x426981
  426979:	fs fs (bad) 
  42697d:	or     al,0xeb
  42697f:	shl    bl,0x2a
  426982:	xchg   esi,eax
  426983:	sahf   
  426984:	sbb    DWORD PTR [ebx],ecx
  426986:	call   0xc9604e28
  42698b:	sub    BYTE PTR [edi+0x5e8a9a35],ah
  426991:	mov    ebx,ss
  426993:	loopne 0x426960
  426995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426996:	std    
  426997:	leave  
  426998:	sbb    eax,0x1cd1b04c
  42699d:	sbb    eax,0x9206a6c8
  4269a2:	(bad)  
  4269a3:	aam    0x57
  4269a5:	neg    esi
  4269a7:	repz dec ebp
  4269a9:	or     esp,DWORD PTR [ebx+ebx*1]
  4269ac:	clc    
  4269ad:	je     0x4269a3
  4269af:	mov    esp,0xbf41e99e
  4269b4:	ficomp WORD PTR [ebx+eax*2]
  4269b7:	repnz push edx
  4269b9:	dec    ecx
  4269ba:	xlat   BYTE PTR ds:[ebx]
  4269bb:	(bad)  
  4269bc:	xchg   edx,ecx
  4269be:	(bad)  
  4269bf:	retf   
  4269c0:	out    dx,eax
  4269c1:	or     BYTE PTR [edx+0x3da1313f],ch
  4269c7:	call   0xabe9e369
  4269cc:	std    
  4269cd:	mov    ds:0x590cb26b,al
  4269d2:	mov    ecx,0x6897b5c8
  4269d7:	xchg   edx,eax
  4269d8:	in     al,dx
  4269d9:	xor    BYTE PTR [ebx+0x53],ah
  4269dc:	dec    ecx
  4269dd:	sbb    al,0xc2
  4269df:	pop    ecx
  4269e0:	rol    BYTE PTR [edi-0x28],cl
  4269e3:	mov    eax,0xd0603538
  4269e8:	and    al,0xe9
  4269ea:	cmc    
  4269eb:	cld    
  4269ec:	loope  0x426981
  4269ee:	jp     0x4269bf
  4269f0:	add    DWORD PTR [edi-0x6],0xdb80207d
  4269f7:	adc    eax,0x56037483
  4269fc:	ds inc esp
  4269fe:	cdq    
  4269ff:	clc    
  426a00:	xor    BYTE PTR [ecx+0x460cffca],dl
  426a06:	push   0x8a207ba2
  426a0b:	lock sub DWORD PTR ds:0xe43e1014,ebp
  426a12:	lods   al,BYTE PTR ds:[esi]
  426a13:	dec    ebx
  426a14:	ret    
  426a15:	sub    eax,0xab3484b8
  426a1a:	aas    
  426a1b:	test   DWORD PTR [ebp-0x1c],ebp
  426a1e:	pop    ebx
  426a1f:	std    
  426a20:	(bad)  
  426a21:	pop    eax
  426a22:	xchg   ebp,eax
  426a23:	pop    ebp
  426a24:	jge    0x4269d7
  426a26:	mov    ch,0xaa
  426a28:	sbb    BYTE PTR [ebp+0x7c],dh
  426a2b:	mov    DWORD PTR [ecx-0x398045cc],ebp
  426a31:	dec    edi
  426a32:	push   ebx
  426a33:	mov    al,ds:0x8575695b
  426a38:	int    0x4d
  426a3a:	mov    esp,DWORD PTR [edx]
  426a3c:	dec    eax
  426a3d:	test   DWORD PTR [edi],0x2c546b14
  426a43:	sub    al,0xa1
  426a45:	ins    BYTE PTR es:[edi],dx
  426a46:	imul   esp,DWORD PTR [ebp-0x58],0xa22a1f34
  426a4d:	aaa    
  426a4e:	nop
  426a4f:	cmp    eax,0x831af4b9
  426a54:	(bad)  
  426a55:	push   esi
  426a56:	dec    edx
  426a57:	mov    ah,0x82
  426a59:	xchg   edi,eax
  426a5a:	cmp    bh,BYTE PTR [edx]
  426a5c:	shl    BYTE PTR [ebx+0x3c5cd749],1
  426a62:	call   0x780da497
  426a67:	cmp    BYTE PTR [edi+0x21a52880],0xa4
  426a6e:	inc    edi
  426a6f:	adc    BYTE PTR [ebx],0xf2
  426a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a73:	sbb    BYTE PTR [edx-0x2a],bh
  426a76:	outs   dx,BYTE PTR ds:[esi]
  426a77:	fidivr DWORD PTR ds:0x2cc875ac
  426a7d:	pop    ss
  426a7e:	xor    dl,BYTE PTR [ebx+0xe10d9f6]
  426a84:	in     al,dx
  426a85:	and    cl,BYTE PTR [ebp-0x5aaeb21c]
  426a8b:	mov    ds:0xe0e59476,eax
  426a90:	loopne 0x426a33
  426a92:	mov    ah,0x14
  426a94:	mov    ecx,0x7cb7b8fc
  426a99:	inc    eax
  426a9a:	jl     0x426a2c
  426a9c:	jno    0x426a35
  426a9e:	ins    BYTE PTR es:[edi],dx
  426a9f:	fmul   QWORD PTR [ebx]
  426aa1:	mov    ds:0x25bc9c7c,al
  426aa6:	je     0x426a52
  426aa8:	add    bh,bl
  426aaa:	dec    edx
  426aab:	xlat   BYTE PTR ds:[ebx]
  426aac:	scas   eax,DWORD PTR es:[edi]
  426aad:	aaa    
  426aae:	lahf   
  426aaf:	enter  0xa88d,0x39
  426ab3:	iret   
  426ab4:	xchg   edi,eax
  426ab5:	jns    0x426af0
  426ab7:	popa   
  426ab8:	ds test eax,0xae196cc
  426abe:	dec    esi
  426abf:	cdq    
  426ac0:	or     BYTE PTR [esi+0x49d6f07d],dh
  426ac6:	inc    esi
  426ac7:	mov    bh,0xb8
  426ac9:	test   al,0xca
  426acb:	mov    bl,0x14
  426acd:	mov    edi,0x3266c1bb
  426ad2:	outs   dx,BYTE PTR ds:[esi]
  426ad3:	(bad)  
  426ad4:	jno    0x426b0e
  426ad6:	mov    dl,0x72
  426ad8:	xchg   esp,eax
  426ad9:	nop
  426ada:	ins    BYTE PTR es:[edi],dx
  426adb:	xchg   BYTE PTR fs:[esi],bl
  426ade:	loopne 0x426b58
  426ae0:	sub    BYTE PTR [ecx-0x52f45a54],dl
  426ae6:	sbb    al,0x4
  426ae8:	leave  
  426ae9:	xchg   dl,bh
  426aeb:	adc    al,0xcd
  426aed:	loopne 0x426b39
  426aef:	shr    BYTE PTR [eax],cl
  426af1:	bound  esp,QWORD PTR [ebp+0x770817d7]
  426af7:	mov    ebx,DWORD PTR [ebp+0x4c]
  426afa:	jne    0x426ab5
  426afc:	xor    al,0xed
  426afe:	leave  
  426aff:	mov    edi,0xa8709d0a
  426b04:	ja     0x426a88
  426b06:	cld    
  426b07:	clc    
  426b08:	fs popa 
  426b0a:	sbb    ebx,DWORD PTR [eax]
  426b0c:	cmp    al,0x50
  426b0e:	add    al,0x19
  426b10:	in     al,0x61
  426b12:	cwde   
  426b13:	adc    edi,DWORD PTR [ecx+ebx*2]
  426b16:	ins    DWORD PTR es:[edi],dx
  426b17:	in     al,0x65
  426b19:	sahf   
  426b1a:	xchg   esi,eax
  426b1b:	push   ss
  426b1c:	pop    ds
  426b1d:	pusha  
  426b1e:	pushf  
  426b1f:	shl    DWORD PTR [ecx+0x54],0xc3
  426b23:	jecxz  0x426ae8
  426b25:	xchg   BYTE PTR [esi+eiz*8-0xaa5dd91],al
  426b2c:	and    dl,dl
  426b2e:	daa    
  426b2f:	sub    al,0xf5
  426b31:	js     0x426b15
  426b33:	inc    ecx
  426b34:	mov    edx,0x503104b7
  426b39:	jmp    0x89534455
  426b3e:	inc    esp
  426b3f:	xor    ebx,DWORD PTR [esp+esi*2-0x61e11cc3]
  426b46:	std    
  426b47:	push   0xdd98f33e
  426b4c:	neg    DWORD PTR [eax]
  426b4e:	fcmovne st,st(6)
  426b50:	test   BYTE PTR [ebx-0x5ae2432b],0x30
  426b57:	sub    ebp,0x649698ae
  426b5d:	retf   0x5241
  426b60:	cmp    ebx,DWORD PTR [ebp-0x3d]
  426b63:	imul   ebx,DWORD PTR [eax+ecx*4-0x2a9971fa],0xffffff82
  426b6b:	adc    DWORD PTR [esi],ecx
  426b6d:	pop    ebx
  426b6e:	lods   al,BYTE PTR ds:[esi]
  426b6f:	and    eax,0x4f887aba
  426b74:	sub    al,0x46
  426b76:	ins    BYTE PTR es:[edi],dx
  426b77:	shr    BYTE PTR [esi+edx*4],1
  426b7a:	mov    bh,0x8d
  426b7c:	in     al,dx
  426b7d:	or     edx,DWORD PTR ds:0x487078e2
  426b83:	mov    ds:0xef770ce,al
  426b88:	in     al,dx
  426b89:	pushf  
  426b8a:	ret    
  426b8b:	xor    ch,BYTE PTR [edx+0x71f2fee0]
  426b91:	fcmovb st,st(0)
  426b93:	iret   
  426b94:	leave  
  426b95:	pop    ebp
  426b96:	out    0x1f,al
  426b98:	addr16 pop esp
  426b9a:	or     esp,esp
  426b9c:	xor    esi,edi
  426b9e:	out    dx,al
  426b9f:	lods   al,BYTE PTR ds:[esi]
  426ba0:	test   eax,0x8c2daa1
  426ba5:	and    al,0xb4
  426ba7:	xor    al,0x15
  426ba9:	fidiv  DWORD PTR [edi]
  426bab:	std    
  426bac:	fnsave [eax+0x7266093c]
  426bb2:	pop    esi
  426bb3:	jle    0x426ba7
  426bb5:	sbb    esp,edx
  426bb7:	xchg   DWORD PTR [ebx+ebx*8+0x73],esi
  426bbb:	jb     0x426bf0
  426bbd:	cmp    DWORD PTR ds:0xed3a56f8,ebx
  426bc3:	xchg   ecx,eax
  426bc4:	(bad)  
  426bc6:	mov    bl,0x75
  426bc8:	sbb    al,0x64
  426bca:	test   BYTE PTR [eax+0x135a20cf],ah
  426bd0:	repnz inc eax
  426bd2:	or     ebp,ecx
  426bd4:	push   eax
  426bd5:	mov    dl,0x61
  426bd7:	pop    ebp
  426bd8:	add    al,0x45
  426bda:	call   0xaa74685
  426bdf:	cs sub al,0x6f
  426be2:	pop    es
  426be3:	or     al,0xf5
  426be5:	adc    eax,0x5dc3c64
  426bea:	adc    DWORD PTR [eax+esi*1],eax
  426bed:	int3   
  426bee:	inc    edx
  426bef:	shl    DWORD PTR [eax],cl
  426bf1:	pushf  
  426bf2:	cmp    al,0x22
  426bf4:	test   DWORD PTR [esi+ebp*8+0x43],edx
  426bf8:	pop    esp
  426bf9:	and    edi,DWORD PTR [ebp-0x3b0589c]
  426bff:	mov    bl,bl
  426c01:	inc    ebp
  426c02:	push   eax
  426c03:	nop
  426c04:	jmp    0xb362abfb
  426c09:	sub    cl,BYTE PTR [ebx-0x5ac79384]
  426c0f:	fs inc esp
  426c11:	xor    edi,ebx
  426c13:	mov    bl,0xac
  426c15:	mov    al,0x5c
  426c17:	loope  0x426c38
  426c19:	push   0xa6e233ad
  426c1e:	sub    cl,ah
  426c20:	xchg   edi,eax
  426c21:	jb     0x426baf
  426c23:	pusha  
  426c24:	mov    ecx,0xf3a0940d
  426c29:	loop   0x426c79
  426c2b:	xor    al,0xf5
  426c2d:	in     al,0x42
  426c2f:	xor    al,0xec
  426c31:	inc    ebx
  426c32:	aam    0x6f
  426c34:	pop    eax
  426c35:	(bad)  
  426c37:	test   eax,0xf340ced1
  426c3c:	sar    DWORD PTR [esp+ebx*8-0x2c],1
  426c40:	call   FWORD PTR [eax]
  426c42:	push   ebx
  426c43:	jmp    0x426c0f
  426c45:	in     eax,0xa0
  426c47:	jns    0x426ca0
  426c49:	xchg   ecx,eax
  426c4a:	(bad)
  426c4d:	xor    eax,0x4bf4825
  426c52:	jmp    0x426c96
  426c54:	push   edx
  426c55:	xchg   edx,eax
  426c56:	ins    DWORD PTR es:[edi],dx
  426c57:	hlt    
  426c58:	ins    BYTE PTR es:[edi],dx
  426c59:	aam    0xc4
  426c5b:	test   eax,0x6a07cec8
  426c60:	into   
  426c61:	nop
  426c62:	ins    BYTE PTR es:[edi],dx
  426c63:	push   ebp
  426c64:	icebp  
  426c65:	adc    al,0x35
  426c67:	jns    0x426c2f
  426c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c6a:	mov    ah,0x42
  426c6c:	outs   dx,DWORD PTR ds:[esi]
  426c6d:	outs   dx,BYTE PTR ds:[esi]
  426c6e:	(bad)  
  426c6f:	jnp    0x426c21
  426c71:	loop   0x426c3e
  426c73:	fmul   DWORD PTR [eax-0x64]
  426c76:	add    ebx,ecx
  426c78:	in     al,0xa4
  426c7a:	inc    esi
  426c7b:	stos   DWORD PTR es:[edi],eax
  426c7c:	sub    BYTE PTR [ebx],0x6
  426c7f:	das    
  426c80:	jb     0x426c82
  426c82:	mov    ch,dl
  426c84:	sub    al,0xa4
  426c86:	lock push esi
  426c88:	and    ebp,DWORD PTR [eax]
  426c8a:	cwde   
  426c8b:	add    bl,BYTE PTR [eax+edi*8-0x38]
  426c8f:	aaa    
  426c90:	cli    
  426c91:	add    al,0x82
  426c93:	shl    DWORD PTR [esi+esi*4-0x25],0xec
  426c98:	js     0x426d13
  426c9a:	xchg   dl,ah
  426c9c:	test   bl,ah
  426c9e:	pop    ebx
  426c9f:	adc    BYTE PTR [eax],dl
  426ca1:	sti    
  426ca2:	fldcw  WORD PTR [ebp+esi*2+0x65]
  426ca6:	cmp    esi,DWORD PTR [esi-0x7356474a]
  426cac:	pop    esi
  426cad:	fild   WORD PTR [edi+ebx*4+0x5fdc5c51]
  426cb4:	and    BYTE PTR es:[edi-0x5d],dh
  426cb8:	(bad)  
  426cb9:	xchg   ebx,eax
  426cba:	mov    bh,0x0
  426cbc:	jmp    0xb14e8e2c
  426cc1:	call   0xa22d:0x242a
  426cc7:	pushf  
  426cc8:	push   eax
  426cc9:	jmp    0x426c6a
  426ccb:	repnz inc ebp
  426ccd:	int3   
  426cce:	xlat   BYTE PTR ds:[ebx]
  426ccf:	add    DWORD PTR [edi],ebx
  426cd1:	inc    esi
  426cd2:	sub    eax,0xf03ed48c
  426cd7:	sbb    cl,BYTE PTR [esi]
  426cd9:	test   BYTE PTR [ebx-0x538fc91c],bl
  426cdf:	adc    al,0xb2
  426ce1:	pop    edx
  426ce2:	(bad)  
  426ce3:	iret   
  426ce4:	jbe    0x426cc5
  426ce6:	push   cs
  426ce7:	jle    0x426d21
  426ce9:	or     ch,bl
  426ceb:	dec    ebp
  426cec:	cs mov esp,edi
  426cef:	push   eax
  426cf0:	and    ebx,DWORD PTR [ebx+ebx*8-0x51]
  426cf4:	out    dx,eax
  426cf5:	push   0xffffffbc
  426cf7:	sti    
  426cf8:	sbb    ebx,DWORD PTR [ecx-0x439b76fc]
  426cfe:	inc    edi
  426cff:	sar    DWORD PTR [ecx+0x2b2869ec],0x33
  426d06:	inc    esi
  426d07:	addr16 push edx
  426d09:	push   0xb64c64b3
  426d0e:	jne    0x426cc1
  426d10:	push   ss
  426d11:	outs   dx,BYTE PTR ds:[esi]
  426d12:	dec    ecx
  426d13:	jp     0x426ce5
  426d15:	jo     0x426ccd
  426d17:	in     eax,dx
  426d18:	fwait
  426d19:	mov    cl,0x4
  426d1b:	push   0xffffff94
  426d1d:	aas    
  426d1e:	sbb    BYTE PTR [edx+0x935908f],ah
  426d24:	adc    bh,dh
  426d26:	ins    BYTE PTR es:[edi],dx
  426d27:	cmp    al,0x87
  426d29:	jo     0x426cdc
  426d2b:	or     dl,BYTE PTR [esi]
  426d2d:	loopne 0x426d9f
  426d2f:	aad    0x60
  426d31:	stos   BYTE PTR es:[edi],al
  426d32:	je     0x426cb6
  426d34:	pop    edi
  426d35:	mov    edi,0x8474833c
  426d3a:	mov    al,ds:0x931c8100
  426d3f:	dec    esp
  426d40:	or     DWORD PTR [ebp+0x125e65a8],eax
  426d46:	retf   
  426d47:	gs mov eax,0xf8509d61
  426d4d:	xor    al,0x84
  426d4f:	add    eax,0xb5f83ffc
  426d54:	je     0x426d9b
  426d56:	mov    DWORD PTR [ecx+0x4e31793a],0x6fb19832
  426d60:	ret    0xfa09
  426d63:	arpl   WORD PTR [esi-0x31174391],sp
  426d69:	xchg   esp,eax
  426d6a:	arpl   WORD PTR [ebx-0x20],ax
  426d6d:	jne    0x426d61
  426d6f:	loopne 0x426dc4
  426d71:	jno    0x426dca
  426d73:	neg    al
  426d75:	mov    al,ds:0xb7886f74
  426d7a:	(bad)  
  426d7b:	jnp    0x426d66
  426d7d:	(bad)  
  426d7e:	das    
  426d7f:	jmp    0x494219c4
  426d84:	bound  esi,QWORD PTR fs:[ebp-0x2f5fd084]
  426d8b:	je     0x426d9a
  426d8d:	or     al,0x45
  426d8f:	adc    ah,BYTE PTR [edi]
  426d91:	ror    DWORD PTR [edi],cl
  426d93:	hlt    
  426d94:	bound  edi,QWORD PTR [edx-0x72]
  426d97:	cmp    DWORD PTR [esi-0x6397d62b],ebp
  426d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d9e:	neg    DWORD PTR [ecx+0x1d34917f]
  426da4:	into   
  426da5:	shl    BYTE PTR [ebp-0x2b],0xa3
  426da9:	or     DWORD PTR [ebx],ebp
  426dab:	les    eax,FWORD PTR [esi-0x525a1ba9]
  426db1:	or     DWORD PTR [ecx],ecx
  426db3:	fwait
  426db4:	in     al,0xa3
  426db6:	invd   
  426db8:	lods   al,BYTE PTR ds:[esi]
  426db9:	outs   dx,DWORD PTR ds:[esi]
  426dba:	push   ds
  426dbb:	jno    0x426db4
  426dbd:	cmp    BYTE PTR [edx],dl
  426dbf:	or     BYTE PTR [esi+ecx*4],ch
  426dc2:	cs das 
  426dc4:	mov    ds:0x52339690,eax
  426dc9:	aam    0xeb
  426dcb:	ret    0xdf59
  426dce:	lea    ebp,[edi-0x590739e7]
  426dd4:	in     al,0xa9
  426dd6:	pop    ebp
  426dd7:	jmp    DWORD PTR [ebx]
  426dd9:	xor    eax,0x65211ce4
  426dde:	mov    eax,0x32840f5e
  426de3:	fld    QWORD PTR [eax-0x11]
  426de6:	mov    ds:0x8c871730,ax
  426dec:	fucomp st(0)
  426dee:	and    BYTE PTR [ebx],ch
  426df0:	rol    DWORD PTR [ecx-0x2c4ed43d],0xc
  426df7:	icebp  
  426df8:	out    dx,eax
  426df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dfa:	lock pop ss
  426dfc:	(bad)  
  426dfd:	pop    edi
  426dfe:	mov    cl,0x30
  426e00:	fadd   st(4),st
  426e02:	(bad)  
  426e03:	(bad)  
  426e04:	das    
  426e05:	pop    esi
  426e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e08:	push   esp
  426e09:	ins    DWORD PTR es:[edi],dx
  426e0a:	arpl   WORD PTR gs:[ebx],di
  426e0d:	xor    DWORD PTR [ecx-0x2f],edi
  426e10:	sub    edi,DWORD PTR [eax+0x73]
  426e13:	mov    ah,0xed
  426e15:	arpl   WORD PTR [esi+0x2055a971],di
  426e1b:	ja     0x426e06
  426e1d:	inc    edx
  426e1e:	mov    al,ds:0xe673991c
  426e23:	inc    esp
  426e24:	or     DWORD PTR [ebx+0x22],ecx
  426e27:	mov    edi,0x2fee3c58
  426e2c:	push   0xd208c4cb
  426e31:	mov    esi,0x8c685b41
  426e36:	pop    ss
  426e37:	sbb    bh,bh
  426e39:	shl    BYTE PTR [ecx+0x4e],0x9a
  426e3d:	nop
  426e3e:	xor    al,0x51
  426e40:	nop
  426e41:	xor    eax,0xa4fbe191
  426e46:	gs pop eax
  426e48:	fwait
  426e49:	gs add al,0xe
  426e4c:	inc    edi
  426e4d:	(bad)  
  426e4e:	pop    ss
  426e4f:	jl     0x426ecd
  426e51:	mov    cl,0xed
  426e53:	or     DWORD PTR ds:0xd91e655b,esi
  426e59:	mov    al,ds:0x4baa9f65
  426e5e:	sub    ebx,DWORD PTR [ecx]
  426e60:	shl    BYTE PTR [eax],1
  426e62:	les    edx,FWORD PTR [ecx+ebp*1+0x158b42fc]
  426e69:	add    esp,DWORD PTR [edx+0x6c]
  426e6c:	rol    BYTE PTR [esi-0x7fb897bc],1
  426e72:	ja     0x426e2d
  426e74:	nop
  426e75:	add    eax,0x682cd75b
  426e7a:	in     eax,0xaa
  426e7c:	(bad)  [eax+ebx*2-0x3db474d8]
  426e83:	push   ss
  426e84:	inc    esi
  426e85:	sub    ebx,eax
  426e87:	xchg   esp,eax
  426e88:	cwde   
  426e89:	rcl    BYTE PTR [edx-0x8],cl
  426e8c:	mov    ecx,0x5dfcb5b8
  426e91:	or     DWORD PTR [ebp-0x69],0xffffffe0
  426e95:	mov    bl,0x3
  426e97:	adc    eax,0x2ad993a4
  426e9c:	push   edi
  426e9d:	lods   al,BYTE PTR ds:[esi]
  426e9e:	in     al,dx
  426e9f:	push   esp
  426ea0:	pop    ebp
  426ea1:	enter  0x5109,0x7c
  426ea5:	imul   eax,DWORD PTR [ebx],0xec96253d
  426eab:	call   0x770304f1
  426eb0:	mov    ch,0xc0
  426eb2:	rcl    BYTE PTR [eax],0x2d
  426eb5:	sub    BYTE PTR [eax+edi*4+0x42ef4130],0xb8
  426ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ebe:	jb     0x426f05
  426ec0:	std    
  426ec1:	aad    0xc8
  426ec3:	jne    0x426e59
  426ec5:	fdiv   QWORD PTR [ebp-0x1c]
  426ec8:	sbb    BYTE PTR [ebx+0x7364822a],0x0
  426ecf:	test   BYTE PTR [edi+0x4d],ah
  426ed2:	(bad)  
  426ed3:	push   ss
  426ed4:	cmp    bh,BYTE PTR [esi+eiz*4-0x17aef1dc]
  426edb:	push   eax
  426edc:	mov    ch,0x7f
  426ede:	aam    0x61
  426ee0:	dec    eax
  426ee1:	dec    edi
  426ee2:	rcr    BYTE PTR [esi-0x11c084f0],cl
  426ee8:	lock cmp BYTE PTR gs:[ecx],0x32
  426eed:	sub    DWORD PTR [esi],ebp
  426eef:	vunpcklps ymm7,ymm7,YMMWORD PTR [edi]
  426ef4:	cmp    DWORD PTR [edi+0xa],eax
  426ef7:	push   edi
  426ef8:	mov    al,ds:0x4f38a2fd
  426efd:	xchg   ebx,eax
  426efe:	rcl    dh,1
  426f00:	jle    0x426f14
  426f02:	mov    eax,0xa6595c77
  426f07:	sbb    al,0x7
  426f09:	sbb    DWORD PTR [ebx],ebx
  426f0b:	pop    ecx
  426f0c:	nop
  426f0d:	add    al,0xfc
  426f0f:	and    eax,0x2ce64c1a
  426f14:	xor    al,0x5
  426f16:	sub    BYTE PTR [edx+0x7e],ah
  426f19:	add    bl,bh
  426f1b:	jle    0x426f2b
  426f1d:	sahf   
  426f1e:	mov    ecx,0xa516ee4c
  426f23:	and    eax,0x4811589
  426f28:	jo     0x426edc
  426f2a:	ret    
  426f2b:	mov    bl,0x7a
  426f2d:	sub    al,0x7f
  426f2f:	pusha  
  426f30:	pushf  
  426f31:	xchg   esp,eax
  426f32:	pusha  
  426f33:	lods   eax,DWORD PTR ds:[esi]
  426f34:	add    DWORD PTR [eax*1+0x3c5fec12],edx
  426f3b:	mov    ds:0x1c180697,eax
  426f40:	add    al,0x46
  426f42:	aas    
  426f43:	add    BYTE PTR [eax],al
  426f45:	add    BYTE PTR [eax],al
  426f47:	add    BYTE PTR [ebx+ebx*1+0x951535d],ch
  426f4e:	add    BYTE PTR [eax],al
  426f50:	add    BYTE PTR [eax],al
  426f52:	add    BYTE PTR [eax],al
  426f54:	push   ecx
  426f55:	or     DWORD PTR [eax],eax
  426f57:	add    BYTE PTR [esi],ch
  426f59:	add    BYTE PTR [esi],ah
  426f5b:	jl     0x426f5d
  426f5d:	add    dh,BYTE PTR [esi]
  426f5f:	or     BYTE PTR [eax],al
  426f61:	add    ah,al
  426f63:	inc    ebp
  426f64:	add    BYTE PTR [ebx-0x68d6f6a1],dl
  426f6a:	(bad)  
  426f6b:	cld    
  426f6c:	fisub  WORD PTR [edi+edx*8]
  426f6f:	jmp    0x4a89:0x1a698ff3
  426f76:	dec    eax
  426f77:	pop    es
  426f78:	ins    BYTE PTR es:[edi],dx
  426f79:	pop    edx
  426f7a:	in     eax,dx
  426f7b:	jo     0x426f16
  426f7d:	pop    ebp
  426f7e:	mov    ah,0x6c
  426f80:	or     BYTE PTR gs:[ebp+eax*4-0x7fda0d53],al
  426f88:	nop
  426f89:	mov    eax,ds:0x63f646bb
  426f8e:	push   esp
  426f8f:	retf   0x386a
  426f92:	mov    cl,0xde
  426f94:	dec    esi
  426f95:	call   0x425c:0x4780ed4f
  426f9c:	fiadd  WORD PTR ds:0xa5be7508
  426fa2:	loop   0x426f24
  426fa4:	jb     0x426ff3
  426fa6:	sbb    eax,0x5296b63b
  426fab:	enter  0xdda4,0x9a
  426faf:	add    ebp,DWORD PTR [edx-0x47]
  426fb2:	lods   al,BYTE PTR ds:[esi]
  426fb3:	mov    ebx,DWORD PTR [edx-0x4c304ab4]
  426fb9:	retf   
  426fba:	mov    ds:0x704bceba,al
  426fbf:	cmp    DWORD PTR [esi],eax
  426fc1:	inc    edi
  426fc2:	lods   al,BYTE PTR ds:[esi]
  426fc3:	pop    ebp
  426fc4:	sti    
  426fc5:	and    eax,0xe4c69475
  426fca:	sbb    ah,dh
  426fcc:	rcr    BYTE PTR [esi+0x61],cl
  426fcf:	push   es
  426fd0:	mov    eax,0x3d4b1d85
  426fd5:	pop    ecx
  426fd6:	xlat   BYTE PTR ds:[ebx]
  426fd7:	das    
  426fd8:	loope  0x426fb6
  426fda:	aad    0x3f
  426fdc:	pusha  
  426fdd:	adc    ah,BYTE PTR es:[edi]
  426fe0:	out    dx,al
  426fe1:	jge    0x426f67
  426fe3:	gs hlt 
  426fe5:	mov    eax,ds:0x329b6885
  426fea:	xchg   ebx,eax
  426feb:	test   al,0x23
  426fed:	mov    ds:0x505a484b,eax
  426ff2:	adc    ecx,DWORD PTR [edi-0x4d686834]
  426ff8:	jo     0x426f7f
  426ffa:	icebp  
  426ffb:	fsub   st,st(1)
  426ffd:	lock out dx,al
  426fff:	scas   al,BYTE PTR es:[edi]
  427000:	xchg   edi,eax
  427001:	jp     0x427075
  427003:	dec    esi
  427004:	jecxz  0x42706e
  427006:	adc    al,0x58
  427008:	dec    ecx
  427009:	dec    ebp
  42700a:	fwait
  42700b:	push   ebp
  42700c:	pop    ebp
  42700d:	imul   ebx,DWORD PTR [esi-0x44],0x20f6dad0
  427014:	in     eax,0x9d
  427016:	ja     0x426fdd
  427018:	loopne 0x426fd4
  42701a:	in     eax,dx
  42701b:	inc    esi
  42701c:	push   ebp
  42701d:	adc    eax,0x428a681
  427022:	test   DWORD PTR [ecx-0x1e5bc2de],esp
  427028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427029:	fldcw  WORD PTR [eax]
  42702b:	cld    
  42702c:	xlat   BYTE PTR ds:[ebx]
  42702d:	mov    BYTE PTR [edx+0x6d39e168],cl
  427033:	shl    BYTE PTR [ecx+0x2d],1
  427036:	das    
  427037:	adc    eax,0x3f863e88
  42703c:	hlt    
  42703d:	repnz add ch,ah
  427040:	fdivp  st(1),st
  427042:	jb     0x42704c
  427044:	mov    esi,0xd7e5ca18
  427049:	fld    TBYTE PTR [ebx+0xb]
  42704c:	mov    al,ds:0xce573c6f
  427051:	dec    esi
  427052:	je     0x427001
  427054:	mov    eax,0x3e60e042
  427059:	mov    ch,0x4c
  42705b:	cmp    BYTE PTR [eax],ah
  42705d:	daa    
  42705e:	xlat   BYTE PTR ds:[ebx]
  42705f:	mov    dh,0x8
  427061:	fld    QWORD PTR [ebx+0x506f3c8c]
  427067:	inc    ecx
  427068:	adc    al,0x2c
  42706a:	sub    ebx,DWORD PTR [eax]
  42706c:	or     DWORD PTR [eax+edx*2+0x4c],0x44
  427071:	and    eax,0xab405a50
  427076:	cld    
  427077:	imul   eax,DWORD PTR [ebx+0x5a],0x2e
  42707b:	je     0x4270c5
  42707d:	xchg   ebx,eax
  42707e:	sti    
  42707f:	gs out 0x2c,eax
  427082:	outs   dx,BYTE PTR ds:[esi]
  427083:	sbb    DWORD PTR [esi+ebx*2],0xffffffd4
  427087:	xor    eax,0x39cd7c65
  42708c:	outs   dx,BYTE PTR ds:[esi]
  42708d:	inc    eax
  42708e:	pop    es
  42708f:	xlat   BYTE PTR ds:[ebx]
  427090:	es iret 
  427092:	lahf   
  427093:	leave  
  427094:	xchg   BYTE PTR [ebx-0x7b06ea9c],cl
  42709a:	ror    esp,0x21
  42709d:	mov    ds:0xb04a88dc,eax
  4270a2:	popf   
  4270a3:	xor    eax,0x68518438
  4270a8:	lods   al,BYTE PTR ds:[esi]
  4270a9:	push   eax
  4270aa:	or     al,0xf7
  4270ac:	sbb    eax,0xfdb7c0ee
  4270b1:	push   esp
  4270b2:	icebp  
  4270b3:	(bad)  
  4270b4:	mov    ebx,0x91cb0ce8
  4270b9:	in     eax,dx
  4270ba:	js     0x427107
  4270bc:	inc    ebx
  4270bd:	pop    ds
  4270be:	mov    BYTE PTR ds:0x9ce2b4ea,ch
  4270c4:	ja     0x4270a5
  4270c6:	add    esp,DWORD PTR [edx+edx*4]
  4270c9:	pop    ebx
  4270ca:	das    
  4270cb:	push   ebp
  4270cc:	shr    BYTE PTR [edi+0x739ea7aa],0x5a
  4270d3:	jns    0x42713b
  4270d5:	in     al,0x2e
  4270d7:	or     al,0xbe
  4270d9:	fwait
  4270da:	ss ins BYTE PTR es:[edi],dx
  4270dc:	nop
  4270dd:	mov    WORD PTR [bx+0x17],ds
  4270e1:	loope  0x42706c
  4270e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270e4:	clc    
  4270e5:	mov    dl,bl
  4270e7:	mov    al,0x9a
  4270e9:	je     0x42711e
  4270eb:	xor    BYTE PTR [edi-0x2bdb0880],al
  4270f1:	fcmovnbe st,st(5)
  4270f3:	retf   0x41c1
  4270f6:	mov    BYTE PTR [edi+ebx*4-0x4b9e9708],cl
  4270fd:	inc    ecx
  4270fe:	jno    0x4270dd
  427100:	and    esp,esp
  427102:	mov    al,ds:0x4daf527
  427107:	sbb    eax,0xc48f38b0
  42710c:	and    cl,BYTE PTR [ebp-0x72]
  42710f:	xchg   ebx,eax
  427110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427111:	in     al,dx
  427112:	(bad)  
  427113:	dec    edx
  427114:	call   0x6f5adac9
  427119:	ror    dh,0x6d
  42711c:	fisttp DWORD PTR [esi+esi*2]
  42711f:	dec    ebx
  427120:	lods   al,BYTE PTR ds:[esi]
  427121:	or     BYTE PTR ds:0x30451293,dh
  427127:	pop    ds
  427128:	adc    DWORD PTR [ebx],esi
  42712a:	sbb    dl,bl
  42712c:	retf   
  42712d:	(bad)  
  42712e:	pop    ecx
  42712f:	fadd   DWORD PTR [esi]
  427131:	and    al,0xbe
  427133:	int    0x4e
  427135:	cli    
  427136:	aaa    
  427137:	(bad)  
  427139:	call   0x92709c07
  42713e:	loopne 0x427158
  427140:	mov    bh,0x20
  427142:	cli    
  427143:	dec    edi
  427144:	fidiv  DWORD PTR [eax+0x21]
  427147:	cli    
  427148:	and    cl,BYTE PTR [edx]
  42714a:	inc    esp
  42714b:	in     al,dx
  42714c:	dec    ecx
  42714d:	fimul  DWORD PTR [ecx+edx*8-0x6d]
  427151:	imul   BYTE PTR [ecx]
  427153:	in     al,dx
  427154:	fcmovnu st,st(5)
  427156:	sbb    cl,BYTE PTR [esi+0x27]
  427159:	mov    esi,0xbd1084b2
  42715e:	out    0x4,al
  427160:	and    DWORD PTR [edi+0x345afa98],ecx
  427166:	inc    ecx
  427167:	clc    
  427168:	pop    ebp
  427169:	stos   DWORD PTR es:[edi],eax
  42716a:	or     eax,0x5820a75b
  42716f:	pop    ecx
  427170:	enter  0x97c7,0x77
  427174:	push   ss
  427175:	adc    edx,DWORD PTR [edx]
  427177:	jl     0x4271c6
  427179:	cmc    
  42717a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42717b:	mul    BYTE PTR [ebp+0x246f4181]
  427181:	hlt    
  427182:	and    al,0xa6
  427184:	in     eax,dx
  427185:	dec    esp
  427186:	pcmpeqw mm3,QWORD PTR [ecx+0x48]
  42718a:	dec    edi
  42718b:	clc    
  42718c:	add    al,0x92
  42718e:	stos   BYTE PTR es:[edi],al
  42718f:	sub    eax,0xb36c222a
  427194:	push   0xffffffea
  427196:	(bad)  
  427197:	adc    BYTE PTR [edi-0x106f3e27],ah
  42719d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42719e:	mov    esp,0x83cd33b4
  4271a3:	cmp    dh,BYTE PTR [edx+ebp*2+0x61f0cb19]
  4271aa:	fdivrp st(2),st
  4271ac:	inc    edi
  4271ad:	pop    esp
  4271ae:	ss (bad) 
  4271b0:	stos   BYTE PTR es:[edi],al
  4271b1:	(bad)  
  4271b2:	sbb    eax,0x80d6fc44
  4271b7:	pop    esp
  4271b8:	inc    edx
  4271b9:	jecxz  0x4271a3
  4271bb:	mov    ds:0xa47328c2,eax
  4271c0:	dec    edx
  4271c1:	jno    0x427173
  4271c3:	stos   BYTE PTR es:[edi],al
  4271c4:	pop    esp
  4271c5:	and    edx,ebp
  4271c7:	aad    0xc8
  4271c9:	dec    ecx
  4271ca:	jnp    0x42723f
  4271cc:	or     BYTE PTR [esi+0x70b29a7a],0x17
  4271d3:	sub    al,0xd
  4271d5:	lods   al,BYTE PTR ds:[esi]
  4271d6:	stos   BYTE PTR es:[edi],al
  4271d7:	inc    eax
  4271d8:	add    eax,0xd77094fe
  4271dd:	ret    
  4271de:	adc    dh,BYTE PTR [esp+eiz*8-0x41]
  4271e2:	push   ecx
  4271e3:	mov    eax,0x30a7c5df
  4271e8:	push   eax
  4271e9:	ror    BYTE PTR [edi],1
  4271eb:	sub    ebx,esp
  4271ed:	ror    esp,cl
  4271ef:	adc    DWORD PTR [ebx],ebx
  4271f1:	mov    dl,0xef
  4271f3:	or     DWORD PTR [eax+0x14d19b00],eax
  4271f9:	mov    esi,ds
  4271fb:	in     eax,0x50
  4271fd:	ins    BYTE PTR es:[edi],dx
  4271fe:	test   al,0x73
  427200:	pushf  
  427201:	sahf   
  427202:	call   0xf2f90b5c
  427207:	int3   
  427208:	les    eax,FWORD PTR [ebx-0x23]
  42720b:	xchg   esi,eax
  42720c:	xchg   esp,eax
  42720d:	js     0x42723f
  42720f:	sub    dh,al
  427211:	bound  ebx,QWORD PTR [esi-0xf64e37f]
  427217:	push   0x8bcc1429
  42721c:	xchg   ebp,eax
  42721d:	jbe    0x42728b
  42721f:	mov    ds:0x77bc1396,al
  427224:	push   esi
  427225:	sbb    al,0x61
  427227:	fistp  WORD PTR [edi]
  427229:	add    BYTE PTR [esi-0x32616a20],bl
  42722f:	in     eax,dx
  427230:	adc    DWORD PTR [ecx],ebp
  427232:	in     eax,dx
  427233:	out    dx,eax
  427234:	add    al,0xd
  427236:	jmp    0xc3d53153
  42723b:	mov    ecx,0xc89c28d1
  427240:	mov    dh,0xc0
  427242:	lods   eax,DWORD PTR es:[esi]
  427244:	mov    edx,0xe5f14cc0
  427249:	icebp  
  42724a:	shl    DWORD PTR [ecx-0xb037bf5],1
  427250:	test   cl,bh
  427252:	scas   eax,DWORD PTR es:[edi]
  427253:	cmp    BYTE PTR [ebx+0x188f8c08],al
  427259:	sbb    cl,BYTE PTR [esi]
  42725b:	je     0x427264
  42725d:	jge    0x427253
  42725f:	inc    edi
  427260:	adc    DWORD PTR [ecx+eiz*1],edi
  427263:	lock sbb ch,BYTE PTR [esi+ecx*4-0x39]
  427268:	sbb    al,0x28
  42726a:	pusha  
  42726b:	dec    ebp
  42726c:	and    DWORD PTR [ebp+esi*4+0x70],ebp
  427270:	and    eax,0x2684b782
  427275:	dec    BYTE PTR [edx-0x11]
  427278:	mov    edi,DWORD PTR [ebx+0x69]
  42727b:	jmp    0x4b55:0x457da92c
  427282:	jno    0x4272cd
  427284:	add    eax,0xe87fd50
  427289:	xor    al,0x99
  42728b:	cld    
  42728c:	xor    ch,bl
  42728e:	je     0x427242
  427290:	(bad)  
  427292:	add    eax,0xd2f4a8bd
  427297:	cwde   
  427298:	pop    es
  427299:	scas   eax,DWORD PTR es:[edi]
  42729a:	fld    TBYTE PTR [eax-0x15]
  42729d:	push   0x5a
  42729f:	sahf   
  4272a0:	inc    eax
  4272a1:	push   edi
  4272a2:	xchg   BYTE PTR [ebp+0x69],al
  4272a5:	jne    0x4272a7
  4272a7:	leave  
  4272a8:	lea    esp,[ebp+ebp*2+0x4e]
  4272ac:	inc    DWORD PTR [ebp+edx*1-0x77835b25]
  4272b3:	bound  edx,QWORD PTR [esp+edi*4+0x2263aacb]
  4272ba:	push   esi
  4272bb:	lods   al,BYTE PTR ds:[esi]
  4272bc:	ja     0x427294
  4272be:	clc    
  4272bf:	dec    eax
  4272c0:	xchg   ecx,eax
  4272c1:	mov    cl,BYTE PTR [eax]
  4272c3:	cmp    eax,0x640fe9d0
  4272c8:	mov    bh,0x53
  4272ca:	scas   eax,DWORD PTR es:[edi]
  4272cb:	scas   eax,DWORD PTR es:[edi]
  4272cc:	push   ds
  4272cd:	js     0x4272d9
  4272cf:	inc    edi
  4272d0:	sti    
  4272d1:	lods   eax,DWORD PTR ds:[esi]
  4272d2:	add    eax,0x9c3384eb
  4272d7:	add    DWORD PTR [edi],esi
  4272d9:	dec    DWORD PTR [ebp+0x3b055f9]
  4272df:	shr    BYTE PTR [ecx],0x8a
  4272e2:	and    BYTE PTR [ebx+0x24],cl
  4272e5:	std    
  4272e6:	in     eax,0xb1
  4272e8:	in     al,0x8b
  4272ea:	in     eax,0xc0
  4272ec:	mov    dh,0x73
  4272ee:	jge    0x42733d
  4272f0:	into   
  4272f1:	mov    esi,?
  4272f3:	pop    esp
  4272f4:	inc    esi
  4272f5:	shr    BYTE PTR [ebx+0x3c],0xe
  4272f9:	lods   al,BYTE PTR ds:[esi]
  4272fa:	mov    al,0xfc
  4272fc:	fist   DWORD PTR [eax+0x6d]
  4272ff:	ror    DWORD PTR [eax-0x402b3ff5],0x15
  427306:	js     0x4272f3
  427308:	test   DWORD PTR [edx+ebx*1],ebx
  42730b:	mov    ebp,0xcf343f8
  427310:	or     DWORD PTR [edi+0x67],0xffffff97
  427314:	mov    bl,BYTE PTR [edi+ebx*1]
  427317:	xchg   ebp,eax
  427318:	out    dx,eax
  427319:	push   ecx
  42731a:	(bad)  [ebx-0x13b351f]
  427320:	sbb    bh,BYTE PTR [edi]
  427322:	xor    al,0x45
  427324:	jb     0x42739f
  427326:	jb     0x427310
  427328:	imul   ebp,DWORD PTR [ecx+0x6b],0xffffffd9
  42732c:	xchg   esi,eax
  42732d:	cmp    cl,cl
  42732f:	and    al,0xc
  427331:	dec    ecx
  427332:	jl     0x42732d
  427334:	icebp  
  427335:	push   edi
  427336:	jno    0x4272dd
  427338:	ret    
  427339:	xor    BYTE PTR ds:0xe3577bf,ch
  42733f:	ret    
  427340:	mov    esp,0x5bc8d8f3
  427345:	add    al,BYTE PTR [edx-0x5daf0ea2]
  42734b:	cld    
  42734c:	mov    edx,0xe9dbe314
  427351:	jg     0x4273c4
  427353:	repnz and BYTE PTR [eax-0x3a],ah
  427357:	pop    es
  427358:	or     DWORD PTR [eax],ebp
  42735a:	cmp    DWORD PTR [eax-0x65dbbe3],ebx
  427360:	ret    0xbfce
  427363:	hlt    
  427364:	gs dec esi
  427366:	push   0x5e5f9fea
  42736b:	push   0x10ee47a7
  427370:	inc    esi
  427371:	xchg   DWORD PTR [esi],ecx
  427373:	rcl    DWORD PTR [eax],cl
  427375:	js     0x4273d1
  427377:	iret   
  427378:	xor    al,0x70
  42737a:	js     0x427307
  42737c:	push   edx
  42737d:	jmp    0x427381
  42737f:	mov    esi,0x1ede58fa
  427384:	cmp    al,0x87
  427386:	pop    ebx
  427387:	cli    
  427388:	cdq    
  427389:	or     DWORD PTR [esi+ecx*1+0xb],edi
  42738d:	and    DWORD PTR ds:0xfba55e64,eax
  427393:	mov    al,ds:0xbcf5b89a
  427398:	cmp    BYTE PTR [edx+0x3b],bh
  42739b:	scas   al,BYTE PTR es:[edi]
  42739c:	dec    eax
  42739d:	test   DWORD PTR [esp+eiz*4-0x3f],edx
  4273a1:	jl     0x4273a0
  4273a3:	dec    cl
  4273a5:	ins    BYTE PTR es:[edi],dx
  4273a6:	sub    DWORD PTR [ebx-0x6a51d883],esi
  4273ac:	jp     0x427407
  4273ae:	nop
  4273af:	ds lahf 
  4273b1:	xor    esi,DWORD PTR [ebx+0x69]
  4273b4:	sub    DWORD PTR [ebx+ebp*1+0xb26a3b4],ebp
  4273bb:	jb     0x42733f
  4273bd:	shl    DWORD PTR [edi],1
  4273bf:	call   FWORD PTR [edx+edi*1-0x60]
  4273c3:	pop    ss
  4273c4:	pop    es
  4273c5:	xor    eax,ebx
  4273c7:	xor    DWORD PTR [ebx],ebp
  4273c9:	or     BYTE PTR [edi],0x7d
  4273cc:	outs   dx,BYTE PTR es:[esi]
  4273ce:	repnz and BYTE PTR [esi+0x1c],dh
  4273d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273d3:	sub    edi,edx
  4273d5:	cwde   
  4273d6:	or     BYTE PTR [ecx-0x37117350],dl
  4273dc:	cmc    
  4273dd:	shl    BYTE PTR [esi-0x5e0f2f37],cl
  4273e3:	mov    ecx,0x2441ec
  4273e8:	cmp    ecx,DWORD PTR [esi-0x6b5821e9]
  4273ee:	jle    0x4273f4
  4273f0:	sbb    esi,DWORD PTR [esi-0x36]
  4273f3:	mov    edx,0x59b88fe8
  4273f8:	xlat   BYTE PTR ds:[ebx]
  4273f9:	add    al,0xd1
  4273fb:	dec    ebp
  4273fc:	mov    al,0x21
  4273fe:	sahf   
  4273ff:	fsubr  QWORD PTR [esp+ebp*4+0x33]
  427403:	sbb    eax,0x7f1e3c68
  427408:	add    ah,ah
  42740a:	lds    esi,FWORD PTR [ebx-0x3c]
  42740d:	cs popf 
  42740f:	rcr    DWORD PTR [edx],cl
  427411:	test   al,0xf6
  427413:	mov    eax,0x7bad6389
  427418:	loopne 0x4273f0
  42741a:	int3   
  42741b:	mov    bl,BYTE PTR [ebx+eax*4-0x3f80c4cb]
  427422:	sub    esi,eax
  427424:	mov    ch,0xd8
  427426:	mov    ebp,0x9a76299f
  42742b:	repnz adc al,0xdd
  42742e:	jmp    0xeb7245be
  427433:	pop    ss
  427434:	fs cmp ah,bh
  427437:	push   es
  427438:	std    
  427439:	add    DWORD PTR [edi-0x1fe57b87],edx
  42743f:	clc    
  427440:	cmp    dh,BYTE PTR [eax+0x11c64de7]
  427446:	std    
  427447:	add    al,0xfe
  427449:	adc    BYTE PTR [ecx-0x6a29e283],bl
  42744f:	add    ebp,DWORD PTR [eax]
  427451:	lds    eax,FWORD PTR [esi-0xa09098b]
  427457:	leavew 
  427459:	dec    esp
  42745a:	jno    0x42748a
  42745c:	push   eax
  42745d:	adc    ecx,esp
  42745f:	jmp    0x7bb29b00
  427464:	mov    esp,0x2105e856
  427469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42746a:	and    BYTE PTR [eax],bl
  42746c:	ins    DWORD PTR es:[edi],dx
  42746d:	cmp    eax,0x60e43fae
  427472:	mov    cl,0x33
  427474:	cmp    al,0xf3
  427476:	sbb    BYTE PTR [esi+0x6b09c7ff],bl
  42747c:	sti    
  42747d:	pusha  
  42747e:	push   0xffffff87
  427480:	sahf   
  427481:	jp     0x4274e9
  427483:	or     al,0x2f
  427485:	mov    es,WORD PTR [eax+eiz*4-0x173a8632]
  42748c:	arpl   WORD PTR [eax+0x79],bx
  42748f:	sub    al,0xd7
  427491:	xor    eax,0x49e6383c
  427496:	or     ebx,esp
  427498:	push   eax
  427499:	shl    dl,0x85
  42749c:	and    al,0x2b
  42749e:	add    al,0x3f
  4274a0:	outs   dx,BYTE PTR ds:[esi]
  4274a1:	je     0x4274e2
  4274a3:	and    al,cl
  4274a5:	enter  0xe246,0x1a
  4274a9:	cmp    bl,BYTE PTR [eax+0x63328126]
  4274af:	or     al,0xd0
  4274b1:	xor    eax,0x98dabc97
  4274b6:	inc    esp
  4274b7:	sbb    dl,al
  4274b9:	adc    al,0xe6
  4274bb:	and    BYTE PTR [edx+eiz*4+0x4f],0x67
  4274c0:	xchg   esi,eax
  4274c1:	test   al,0x11
  4274c3:	std    
  4274c4:	or     BYTE PTR [eax+0x1874c7d0],cl
  4274ca:	retf   
  4274cb:	sub    eax,0x99ac1089
  4274d0:	push   edi
  4274d1:	jb     0x427550
  4274d3:	popa   
  4274d4:	mov    BYTE PTR [eax+esi*8],ch
  4274d7:	rol    BYTE PTR [ebx],1
  4274d9:	ror    DWORD PTR [ebx],1
  4274db:	sbb    DWORD PTR [edi+0x37],ebx
  4274de:	xlat   BYTE PTR ds:[ebx]
  4274df:	sbb    DWORD PTR [eax-0x3b],edi
  4274e2:	gs (bad) 
  4274e4:	lods   eax,DWORD PTR ds:[esi]
  4274e5:	xlat   BYTE PTR ds:[ebx]
  4274e6:	mov    BYTE PTR [edx],ch
  4274e8:	les    ebx,FWORD PTR [edi+edi*4-0x405a3756]
  4274ef:	stos   DWORD PTR es:[edi],eax
  4274f0:	adc    al,0xbf
  4274f2:	sar    dh,0xf7
  4274f5:	pop    ss
  4274f6:	pop    ecx
  4274f7:	jo     0x427543
  4274f9:	or     edi,DWORD PTR [ebx-0x1c]
  4274fc:	ret    0x5952
  4274ff:	in     al,0x32
  427501:	pop    eax
  427502:	pop    ax
  427504:	or     BYTE PTR [ebp+0x4fed471c],ch
  42750a:	sti    
  42750b:	dec    ebx
  42750c:	sub    DWORD PTR [eax-0x1f4e4e52],esi
  427512:	aaa    
  427513:	(bad)
  427517:	iret   
  427518:	and    edx,DWORD PTR [edx-0x23f44b83]
  42751e:	mov    ds:0xb1aed9f8,eax
  427523:	lods   al,BYTE PTR ds:[esi]
  427524:	imul   BYTE PTR [eax+0x1b1c9a9c]
  42752a:	xchg   edi,eax
  42752b:	sbb    eax,DWORD PTR [eax-0x58eee2b5]
  427531:	inc    eax
  427532:	gs pop esp
  427534:	pop    ss
  427535:	jmp    0xc642fc26
  42753a:	call   0x9f844400
  42753f:	shl    ebx,cl
  427541:	xchg   ebp,eax
  427542:	add    cl,BYTE PTR [ebp*2-0x7de0bdd7]
  427549:	inc    esi
  42754a:	imul   esi,DWORD PTR [eax]
  42754d:	mov    dl,0x2d
  42754f:	or     dl,bl
  427551:	xor    DWORD PTR [esi+ebp*2-0x2708ab75],edx
  427558:	(bad)
  42755b:	jmp    0x4275cf
  42755d:	in     al,dx
  42755e:	cld    
  42755f:	clc    
  427560:	std    
  427561:	sub    ebp,DWORD PTR [ecx]
  427563:	out    dx,al
  427564:	mov    cl,0x45
  427566:	xchg   esp,eax
  427567:	and    ch,dl
  427569:	leave  
  42756a:	jmp    0x4275a2
  42756c:	inc    edx
  42756d:	into   
  42756e:	push   ebx
  42756f:	mov    WORD PTR [ecx+ebp*2-0x5e],es
  427573:	sahf   
  427574:	cdq    
  427575:	aas    
  427576:	adc    BYTE PTR ds:0x51f36861,al
  42757c:	mov    eax,ds:0x4735a7a1
  427581:	scas   al,BYTE PTR es:[edi]
  427582:	mov    ebp,fs
  427584:	pop    edi
  427585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427586:	dec    esp
  427587:	ins    BYTE PTR es:[edi],dx
  427588:	jmp    0x42752c
  42758a:	xor    DWORD PTR [eax*1-0x23cf8187],esi
  427591:	fchs   
  427593:	inc    edi
  427594:	pop    eax
  427595:	pushf  
  427596:	jbe    0x42758e
  427598:	mov    edx,0xf2e9e65e
  42759d:	jl     0x4275ac
  42759f:	sub    cl,BYTE PTR [ebx]
  4275a1:	arpl   WORD PTR [ecx],di
  4275a3:	repnz inc eax
  4275a5:	(bad)  
  4275a6:	mov    al,ds:0x519a59c0
  4275ab:	xor    eax,0x48df95a7
  4275b0:	call   0xe9dc:0xa9ebd0eb
  4275b7:	jbe    0x427625
  4275b9:	cmp    BYTE PTR [eax+0x1cc5687],bl
  4275bf:	dec    ebx
  4275c0:	arpl   WORD PTR [eax+0x4210b31a],dx
  4275c6:	inc    BYTE PTR [ebp+0x17b45db5]
  4275cc:	lds    edi,FWORD PTR [edx-0x7fa307f1]
  4275d2:	int3   
  4275d3:	fcom   DWORD PTR [edx+edi*1-0x7b]
  4275d7:	mov    dl,0x13
  4275d9:	jmp    0x30c3672d
  4275de:	mov    ds:0x73fb4e88,al
  4275e3:	mov    ecx,DWORD PTR [edi-0x3890c45c]
  4275e9:	stos   DWORD PTR es:[edi],eax
  4275ea:	pop    ds
  4275eb:	ds xor eax,0x6532c8e6
  4275f1:	push   ebp
  4275f2:	jne    0x427632
  4275f4:	or     dh,BYTE PTR [ecx]
  4275f6:	jp     0x4275e4
  4275f8:	ds in  eax,0x56
  4275fb:	cwde   
  4275fc:	or     BYTE PTR [esi+0x34],dl
  4275ff:	adc    BYTE PTR [di],dh
  427602:	hlt    
  427603:	inc    ebx
  427604:	sbb    cl,BYTE PTR [ebx+0x18]
  427607:	shl    BYTE PTR [ecx+0x3a5cfcb8],1
  42760d:	pop    edi
  42760e:	push   ebx
  42760f:	pushf  
  427610:	mov    esp,0x6b69dc64
  427615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427616:	dec    ebx
  427617:	out    dx,al
  427618:	cmp    edx,DWORD PTR [eax+0x145600e9]
  42761e:	cs ins DWORD PTR es:[edi],dx
  427620:	loop   0x427689
  427622:	lea    esi,[ebp-0x6a17d7dc]
  427628:	lahf   
  427629:	sahf   
  42762a:	test   al,0xd1
  42762c:	add    ecx,esp
  42762e:	outs   dx,DWORD PTR ds:[esi]
  42762f:	fwait
  427630:	and    DWORD PTR [esi+0x12],esp
  427633:	fdiv   DWORD PTR [ecx]
  427635:	cmp    dh,al
  427637:	sub    al,BYTE PTR [edx+0x4a]
  42763a:	or     eax,0x999bb39f
  42763f:	adc    al,0x66
  427641:	xor    eax,0x1d6466b1
  427646:	mov    esp,0x4583838
  42764b:	jle    0x427671
  42764d:	fs sub eax,0x585c4864
  427653:	adc    al,0xea
  427655:	imul   esi,eax,0x476d54f
  42765b:	push   ecx
  42765c:	push   ds
  42765d:	mov    edx,0x75b788ac
  427662:	iret   
  427663:	sub    BYTE PTR [eax+0x445402f4],dl
  427669:	adc    eax,0x6c4c1ea7
  42766e:	pop    ebp
  42766f:	ins    DWORD PTR es:[edi],dx
  427670:	add    al,ah
  427672:	or     ebx,DWORD PTR ds:0xb98e701e
  427678:	and    BYTE PTR [eax],ah
  42767a:	leave  
  42767b:	(bad)
  42767e:	sbb    BYTE PTR [edx+ebp*1+0x54],al
  427682:	push   edi
  427683:	frstor [eax+ecx*1-0x6406c33d]
  42768a:	fdiv   QWORD PTR [edx+0x36]
  42768d:	repz push esp
  42768f:	cld    
  427690:	pusha  
  427691:	dec    ebx
  427692:	jns    0x42766a
  427694:	repnz fmul DWORD PTR [esi]
  427697:	inc    edx
  427698:	lahf   
  427699:	test   BYTE PTR [esi],bl
  42769b:	mov    ds:0xfd552f81,eax
  4276a0:	mov    ch,0xd3
  4276a2:	test   al,0xd5
  4276a4:	cdq    
  4276a5:	mov    ds:0x2660221f,eax
  4276aa:	(bad)  
  4276ac:	pusha  
  4276ad:	jo     0x427634
  4276af:	push   edi
  4276b0:	test   eax,0x741cd85e
  4276b5:	dec    esp
  4276b6:	jl     0x427672
  4276b8:	sbb    eax,0x60eba872
  4276bd:	cwde   
  4276be:	sbb    al,0xef
  4276c0:	mov    bh,bh
  4276c2:	mov    bl,0x3d
  4276c4:	por    mm7,QWORD PTR [ebp+esi*1+0x3ae00d3c]
  4276cc:	jmp    0x42765c
  4276ce:	repnz loopne 0x427711
  4276d1:	repz shl esi,1
  4276d4:	scas   eax,DWORD PTR es:[edi]
  4276d5:	xchg   esi,eax
  4276d6:	daa    
  4276d7:	mov    BYTE PTR [si-0x6f87],ah
  4276dc:	dec    ebx
  4276dd:	data16 cmp al,0xdf
  4276e0:	and    ebp,DWORD PTR [edi+eax*8-0x1b40ceb1]
  4276e7:	jo     0x427681
  4276e9:	(bad)  
  4276ea:	shr    BYTE PTR [edx-0x50],1
  4276ed:	or     ah,BYTE PTR [edi+0x77]
  4276f0:	bnd call 0x98266b87
  4276f6:	mov    dh,0x89
  4276f8:	cmp    al,0xf8
  4276fa:	jmp    0x2a09:0x7f0e9c7a
  427701:	dec    ebp
  427702:	sub    al,0xb2
  427704:	pop    edi
  427705:	shl    BYTE PTR [ebx+0x65],0x37
  427709:	add    eax,0x2fba74ac
  42770e:	in     al,0x69
  427710:	mov    ebx,ds
  427712:	iret   
  427713:	pop    ecx
  427714:	arpl   WORD PTR [ebp+0x5dc80834],cx
  42771a:	sub    dh,BYTE PTR [eax]
  42771c:	jnp    0x427765
  42771e:	mov    esi,0x26d62c3f
  427723:	dec    ecx
  427724:	enter  0x65d9,0x90
  427728:	pop    esi
  427729:	aam    0x98
  42772b:	cmp    al,0xe3
  42772d:	xchg   ebp,eax
  42772e:	ins    DWORD PTR es:[edi],dx
  42772f:	leave  
  427730:	sahf   
  427731:	mov    eax,edi
  427733:	jmp    0x4004782f
  427738:	jl     0x427724
  42773a:	das    
  42773b:	sbb    al,0x2d
  42773d:	mov    ch,0x67
  42773f:	mov    eax,ds:0x2ed39244
  427744:	inc    eax
  427745:	push   esp
  427746:	inc    esp
  427747:	pop    ebx
  427748:	hlt    
  427749:	xor    DWORD PTR [esi+eax*1-0x32],ecx
  42774d:	call   0xfbd51f12
  427752:	leave  
  427753:	shr    BYTE PTR [ebx+0x436e0c79],cl
  427759:	jne    0x427724
  42775b:	ins    DWORD PTR es:[edi],dx
  42775c:	lods   al,BYTE PTR ds:[esi]
  42775d:	shr    DWORD PTR [esi],1
  42775f:	xor    BYTE PTR [edi+0xe5fb360],dh
  427765:	push   esi
  427766:	mov    bl,0x20
  427768:	push   esp
  427769:	scas   al,BYTE PTR es:[edi]
  42776a:	out    0x60,eax
  42776c:	fwait
  42776d:	repz push ss
  42776f:	xlat   BYTE PTR ds:[ebx]
  427770:	in     al,dx
  427771:	js     0x427794
  427773:	loope  0x427797
  427775:	jmp    0x42773f
  427777:	stc    
  427778:	shr    DWORD PTR [edx],cl
  42777a:	and    BYTE PTR [ebp-0x2d92d01d],dl
  427780:	std    
  427781:	fisttp QWORD PTR [eax+0x44]
  427784:	dec    ebx
  427785:	aam    0xb6
  427787:	(bad)  
  427789:	push   0xffffffb9
  42778b:	cwde   
  42778c:	push   0x57eec62f
  427791:	xchg   ebx,eax
  427792:	loopne 0x4277a6
  427794:	sahf   
  427795:	mov    WORD PTR [edi+0x643cf568],es
  42779b:	sub    eax,0x8b347920
  4277a0:	data16 sub al,0x27
  4277a3:	cdq    
  4277a4:	(bad)  
  4277a6:	mov    al,0x58
  4277a8:	xor    al,0xf2
  4277aa:	shr    cl,1
  4277ac:	retf   0x5362
  4277af:	adc    al,0x7c
  4277b1:	jp     0x427756
  4277b3:	popa   
  4277b4:	fbld   TBYTE PTR [ebx]
  4277b6:	jbe    0x4277e5
  4277b8:	xchg   ebp,eax
  4277b9:	mov    al,ds:0x71211579
  4277be:	das    
  4277bf:	jmp    0xe006f259
  4277c4:	arpl   dx,bx
  4277c6:	xchg   ecx,eax
  4277c7:	pop    ebp
  4277c8:	pop    esi
  4277c9:	and    cl,bl
  4277cb:	ins    BYTE PTR es:[edi],dx
  4277cc:	sub    BYTE PTR ds:0x9a9d63f8,dh
  4277d2:	dec    edi
  4277d3:	out    0x90,al
  4277d5:	push   es
  4277d6:	xchg   ebp,eax
  4277d7:	jl     0x4277a2
  4277d9:	jge    0x427842
  4277db:	push   ds
  4277dc:	add    esi,DWORD PTR [eax+eax*2+0x2d245c32]
  4277e3:	dec    edi
  4277e4:	shl    DWORD PTR [ecx-0x28],1
  4277e7:	lahf   
  4277e8:	adc    eax,0x9bbc1135
  4277ed:	inc    esi
  4277ee:	int    0xfc
  4277f0:	jecxz  0x427862
  4277f2:	imul   esp,edi,0x8e39bdd8
  4277f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277f9:	fucomip st,st(1)
  4277fb:	je     0x4277c1
  4277fd:	and    eax,edi
  4277ff:	dec    edx
  427800:	mov    al,0xc8
  427802:	push   ecx
  427803:	sub    BYTE PTR [ebx-0x41e03b5c],al
  427809:	sahf   
  42780a:	in     al,dx
  42780b:	js     0x42783d
  42780d:	js     0x4277da
  42780f:	jmp    0xfd:0x1085e899
  427816:	loopne 0x427854
  427818:	leave  
  427819:	add    BYTE PTR [esi-0x49],dh
  42781c:	mov    eax,0xef5f79d9
  427821:	je     0x42783d
  427823:	ror    ch,0xdc
  427826:	cdq    
  427827:	push   di
  427829:	and    eax,0x3a131306
  42782e:	add    ah,ah
  427830:	push   ebx
  427831:	loopne 0x427875
  427833:	mov    bh,0xd2
  427835:	mov    al,ds:0xe424c0
  42783a:	into   
  42783b:	mov    ch,0x70
  42783d:	sub    ecx,ebx
  42783f:	push   0x3d7e5648
  427844:	iret   
  427845:	popf   
  427846:	mov    ah,0x24
  427848:	cwde   
  427849:	lock leave 
  42784b:	fsubp  st(1),st
  42784d:	sub    DWORD PTR [ebp+0x141012b9],edi
  427853:	daa    
  427854:	and    edx,eax
  427856:	ret    0x31b5
  427859:	cwde   
  42785a:	repnz cmp BYTE PTR [eax-0x19],bh
  42785e:	push   ebp
  42785f:	sbb    al,0x27
  427861:	(bad)  
  427862:	ja     0x4277f3
  427864:	pop    esp
  427865:	pop    ds
  427866:	adc    al,0x68
  427868:	and    BYTE PTR [eax],0x48
  42786b:	rcr    DWORD PTR [eax+0x4],0xbd
  42786f:	or     dh,ch
  427871:	add    BYTE PTR [esp+edx*2-0x26d7352b],bh
  427878:	test   esp,edi
  42787a:	xor    BYTE PTR [ecx-0x31],0x88
  42787e:	pop    edx
  42787f:	dec    esp
  427880:	pop    es
  427881:	repnz xadd DWORD PTR [esi],ebp
  427885:	push   0x5c
  427887:	xor    BYTE PTR [eax+0x25],dh
  42788a:	push   cs
  42788b:	repz adc DWORD PTR [esi],ebx
  42788e:	data16 (bad) 
  427890:	mov    dh,0x94
  427892:	dec    esp
  427893:	js     0x427894
  427895:	mov    al,0x1c
  427897:	daa    
  427898:	mov    dl,0x6b
  42789a:	cmp    al,0xd6
  42789c:	dec    ebp
  42789d:	pop    ss
  42789e:	or     eax,0x4102de6b
  4278a3:	add    BYTE PTR [eax],al
  4278a5:	add    BYTE PTR [eax],al
  4278a7:	add    bl,al
  4278a9:	sbb    eax,0x95159a2
  4278ae:	add    BYTE PTR [eax],al
  4278b0:	add    BYTE PTR [eax],al
  4278b2:	add    BYTE PTR [eax],al
  4278b4:	push   ecx
  4278b5:	or     DWORD PTR [eax],eax
  4278b7:	add    BYTE PTR [edi],ch
  4278b9:	add    BYTE PTR [esi],ah
  4278bb:	jl     0x4278bd
  4278bd:	add    dh,BYTE PTR [esi]
  4278bf:	or     BYTE PTR [eax],al
  4278c1:	add    ah,al
  4278c3:	inc    ebp
  4278c4:	add    BYTE PTR ds:0xea2d4a85,dh
  4278ca:	and    DWORD PTR [eax-0x36],esp
  4278cd:	and    al,0xfe
  4278cf:	add    al,0xd
  4278d1:	xchg   esp,eax
  4278d2:	pop    esp
  4278d3:	add    dh,BYTE PTR [edi]
  4278d5:	dec    DWORD PTR [eax-0xb]
  4278d8:	sub    al,0xa7
  4278da:	mov    esi,0xf12ab69f
  4278df:	ins    BYTE PTR es:[edi],dx
  4278e0:	push   eax
  4278e1:	fld    DWORD PTR ds:0x7237e966
  4278e7:	std    
  4278e8:	nop
  4278e9:	pop    ebx
  4278ea:	dec    edx
  4278eb:	fcom   QWORD PTR [edi+0x79]
  4278ee:	pop    ecx
  4278ef:	mov    edi,0xc9de384a
  4278f4:	or     eax,0x143ed438
  4278f9:	lods   eax,DWORD PTR ds:[esi]
  4278fa:	pop    esp
  4278fb:	clc    
  4278fc:	inc    esp
  4278fd:	fwait
  4278fe:	inc    ecx
  4278ff:	fild   QWORD PTR [eax+eiz*1]
  427902:	push   ds
  427903:	and    BYTE PTR [esi+0x6c],0x4c
  427907:	jp     0x4278c9
  427909:	push   eax
  42790a:	dec    edi
  42790b:	frstor [edx+eax*2-0x4f258968]
  427912:	scas   al,BYTE PTR es:[edi]
  427913:	jmp    0xa066c59a
  427918:	mov    ds:0xf07092ed,eax
  42791d:	lock jo 0x427994
  427920:	call   0xe7ac0c37
  427925:	xchg   esp,eax
  427926:	push   ds
  427927:	xchg   esp,eax
  427928:	push   0xffffff84
  42792a:	stos   DWORD PTR es:[edi],eax
  42792b:	push   eax
  42792c:	sub    BYTE PTR [edi],0x5d
  42792f:	pop    ebx
  427930:	mov    eax,0x288c23aa
  427935:	push   ebp
  427936:	mov    WORD PTR ds:0x5d4dc80,ss
  42793c:	fwait
  42793d:	jle    0x4278c1
  42793f:	jg     0x427987
  427941:	call   0x2b97a7ca
  427946:	push   ss
  427947:	adc    al,0xe5
  427949:	mov    ecx,0xd7c0a82d
  42794e:	dec    esp
  42794f:	hlt    
  427950:	dec    BYTE PTR [eax]
  427952:	in     eax,0x3c
  427954:	int3   
  427955:	sub    DWORD PTR [ecx-0x6],edi
  427958:	sub    DWORD PTR [edi],esp
  42795a:	pop    edi
  42795b:	jmp    0xa8c6:0xd194f082
  427962:	es hlt 
  427964:	jne    0x4279e3
  427966:	adc    al,0x1e
  427968:	jecxz  0x4279e6
  42796a:	pop    ecx
  42796b:	(bad)  
  42796c:	mov    esi,0x44bcbdb6
  427971:	jb     0x427901
  427973:	inc    ebp
  427974:	imul   edi,DWORD PTR [ebx-0x1f86cb],0x7c82001a
  42797e:	mov    dh,0xd8
  427980:	cmp    eax,DWORD PTR [eax*4-0x2543c78e]
  427987:	and    BYTE PTR ds:0xa2f82880,dh
  42798d:	iret   
  42798e:	fist   WORD PTR [edi+0x30]
  427991:	xchg   ebx,eax
  427992:	retf   
  427993:	ror    BYTE PTR [esi+0x53],1
  427996:	mov    WORD PTR ds:0xf3a6c62c,cs
  42799c:	hlt    
  42799d:	pop    ebx
  42799e:	dec    ebx
  42799f:	sub    DWORD PTR [ebx+edx*2+0x26],ebp
  4279a3:	xchg   edx,eax
  4279a4:	dec    esp
  4279a5:	sbb    BYTE PTR [edi],al
  4279a7:	jmp    0xfd0a0613
  4279ac:	rcr    DWORD PTR [edi+0x3c],cl
  4279af:	cmp    eax,0xde0da9a9
  4279b4:	pop    esp
  4279b5:	sub    esp,esp
  4279b7:	pusha  
  4279b8:	ds inc esp
  4279ba:	xchg   ebx,eax
  4279bb:	and    eax,0xc4659bd9
  4279c0:	or     ch,cl
  4279c2:	out    dx,eax
  4279c3:	push   ds
  4279c4:	fsubr  QWORD PTR [edi+0x2c2750b2]
  4279ca:	loop   0x427950
  4279cc:	addr16 cdq 
  4279ce:	mov    ch,ch
  4279d0:	nop
  4279d1:	mov    eax,ds:0x4fa43350
  4279d6:	inc    ebx
  4279d7:	int    0x90
  4279d9:	bound  edx,QWORD PTR [esi+0x70fcba74]
  4279df:	mov    dl,0x80
  4279e1:	not    BYTE PTR [esp+eax*2]
  4279e4:	sbb    al,0x59
  4279e6:	push   edx
  4279e7:	add    DWORD PTR [eax+0x71],esp
  4279ea:	aas    
  4279eb:	fstp   DWORD PTR [esi]
  4279ed:	inc    eax
  4279ee:	int3   
  4279ef:	(bad)  
  4279f1:	xchg   ebp,eax
  4279f2:	inc    esp
  4279f3:	sub    BYTE PTR [eax+ecx*8+0x7a887964],0xf9
  4279fb:	ret    
  4279fc:	imul   eax,ebp,0x547b8821
  427a02:	icebp  
  427a03:	shr    BYTE PTR [eax-0x5321c7c4],1
  427a09:	pop    edx
  427a0a:	popf   
  427a0b:	or     al,0xa1
  427a0d:	xlat   BYTE PTR ds:[ebx]
  427a0e:	cmp    eax,0xd55455ec
  427a13:	cdq    
  427a14:	jmp    0x81f5ba04
  427a19:	pop    ss
  427a1a:	js     0x427a85
  427a1c:	je     0x4279fb
  427a1e:	jmp    0xf69c:0x5f4c4b82
  427a25:	idiv   DWORD PTR [ebx]
  427a27:	mov    cl,0xec
  427a29:	rol    BYTE PTR [eax-0x666f3fcb],1
  427a2f:	cdq    
  427a30:	push   edi
  427a31:	mov    ebp,0xe4381a09
  427a36:	pop    eax
  427a37:	ins    DWORD PTR es:[edi],dx
  427a38:	push   0xffffffe9
  427a3a:	pop    esp
  427a3b:	mov    edx,0xf78c58cd
  427a40:	xchg   esi,eax
  427a41:	xor    eax,0x1fd0484f
  427a46:	adc    al,0xb0
  427a48:	aam    0xb6
  427a4a:	sti    
  427a4b:	add    BYTE PTR [ebp+0xb],bh
  427a4e:	aam    0x6f
  427a50:	aam    0x6
  427a52:	push   esi
  427a53:	cmc    
  427a54:	or     BYTE PTR [eax-0x7bc9cec],al
  427a5a:	sbb    al,0x44
  427a5c:	mov    dh,0x28
  427a5e:	sub    al,0x82
  427a60:	push   ebp
  427a61:	pop    ebp
  427a62:	mov    al,ds:0x216f2829
  427a67:	out    0x8f,al
  427a69:	sbb    esp,edx
  427a6b:	les    ebx,FWORD PTR [ebx]
  427a6d:	lds    eax,FWORD PTR [edi+ebx*2]
  427a70:	xor    al,0x3a
  427a72:	popa   
  427a73:	cli    
  427a74:	call   0xf8bfd911
  427a79:	pop    edx
  427a7a:	in     eax,dx
  427a7b:	ja     0x427a83
  427a7d:	or     al,0xfc
  427a7f:	pop    ebx
  427a80:	test   al,0x84
  427a82:	pop    esi
  427a83:	out    0x3e,al
  427a85:	jo     0x427ab7
  427a87:	nop
  427a88:	dec    DWORD PTR [edi-0x6]
  427a8b:	push   ebx
  427a8c:	shl    ebx,0x96
  427a8f:	fsub   DWORD PTR [eax+0x58]
  427a92:	add    DWORD PTR [ecx-0x105e7e46],esi
  427a98:	cld    
  427a99:	cld    
  427a9a:	mov    esp,0x628c8d13
  427a9f:	cli    
  427aa0:	cmp    esp,DWORD PTR [eax]
  427aa2:	xchg   edi,eax
  427aa3:	ror    BYTE PTR [ecx+edx*2],0x39
  427aa7:	cmp    al,0x1
  427aa9:	int    0x44
  427aab:	mov    cl,dh
  427aad:	std    
  427aae:	out    dx,al
  427aaf:	lods   eax,DWORD PTR ds:[esi]
  427ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ab1:	adc    dl,bh
  427ab3:	in     al,dx
  427ab4:	int3   
  427ab5:	push   es
  427ab6:	jmp    0x427a8b
  427ab8:	ins    DWORD PTR es:[edi],dx
  427ab9:	jmp    0xda16:0xf410fffb
  427ac0:	loopne 0x427a67
  427ac2:	(bad)  
  427ac4:	lods   eax,DWORD PTR ds:[esi]
  427ac5:	xor    al,0xec
  427ac7:	shl    DWORD PTR [eax+0x5465eee1],cl
  427acd:	ja     0x427b27
  427acf:	lea    eax,[edi]
  427ad1:	push   ebp
  427ad2:	rol    DWORD PTR [ebx+0x7cce2f8f],cl
  427ad8:	sbb    eax,0x1d89c12
  427add:	mov    ebp,0x6124c847
  427ae2:	push   ss
  427ae3:	jns    0x427b43
  427ae5:	pop    eax
  427ae6:	lock repz ss dec eax
  427aea:	sbb    eax,eax
  427aec:	ffree  st(1)
  427aee:	dec    edx
  427aef:	jne    0x427b5a
  427af1:	sahf   
  427af2:	ins    BYTE PTR es:[edi],dx
  427af3:	push   es
  427af4:	pop    edx
  427af5:	add    BYTE PTR [ecx],0xaa
  427af8:	add    BYTE PTR [esi+0x4d],dh
  427afb:	nop
  427afc:	add    ah,bh
  427afe:	dec    eax
  427aff:	shl    BYTE PTR [edi+0x53],cl
  427b02:	add    BYTE PTR [ebp-0x4c],bl
  427b05:	ret    0x394c
  427b08:	adc    cl,al
  427b0a:	and    al,0x5b
  427b0c:	add    bl,BYTE PTR [edi+ecx*1+0x5]
  427b10:	cmp    al,bl
  427b12:	mov    ebx,esp
  427b14:	outs   dx,DWORD PTR ds:[esi]
  427b15:	out    0x80,eax
  427b17:	daa    
  427b18:	mov    ds:0x6004db90,eax
  427b1d:	adc    eax,0xb105a428
  427b22:	sbb    bh,BYTE PTR [ecx+edx*8-0x75]
  427b26:	ds out dx,al
  427b28:	enter  0xf524,0x39
  427b2c:	add    ch,dl
  427b2e:	neg    esi
  427b30:	pshufw mm6,mm4,0x26
  427b34:	xchg   edi,eax
  427b35:	or     al,0xd0
  427b37:	adc    eax,0x6c94ff59
  427b3c:	xchg   DWORD PTR [ecx-0x34],eax
  427b3f:	mov    ?,WORD PTR ds:[ecx+eiz*4-0x48]
  427b44:	enter  0x2c29,0xd1
  427b48:	xor    eax,0xdc10a6c5
  427b4d:	sub    ch,dl
  427b4f:	div    edi
  427b51:	push   ebp
  427b52:	daa    
  427b53:	push   esi
  427b54:	mov    eax,0x25056300
  427b59:	aas    
  427b5a:	shl    BYTE PTR [ebp-0x76],0x2d
  427b5e:	test   al,0xef
  427b60:	xor    DWORD PTR [ecx-0x6ea9b1c2],ebp
  427b66:	xor    al,0xcc
  427b68:	add    DWORD PTR [eax],ebp
  427b6a:	outs   dx,DWORD PTR ds:[esi]
  427b6b:	and    ch,BYTE PTR [eax+0x64]
  427b6e:	xor    al,0x4
  427b70:	lock shl DWORD PTR [ebx+edx*2-0x5e9cafa6],cl
  427b78:	sub    eax,0xd1d1fc14
  427b7d:	dec    eax
  427b7e:	jl     0x427b3e
  427b80:	pop    esp
  427b81:	aad    0xbc
  427b83:	xor    al,0xd1
  427b85:	push   eax
  427b86:	imul   esi,DWORD PTR [eax-0x1fa47459],0xffffffe6
  427b8d:	mov    dh,0x8b
  427b8f:	dec    edi
  427b90:	cmp    ebp,DWORD PTR [edi]
  427b92:	mov    dl,0xbe
  427b94:	add    al,0x5f
  427b96:	aaa    
  427b97:	cld    
  427b98:	stos   BYTE PTR es:[edi],al
  427b99:	push   0xffffff8f
  427b9b:	mov    edi,0x7b3b2885
  427ba0:	loopne 0x427b2d
  427ba2:	mov    ebp,0x4c7b12dc
  427ba7:	or     DWORD PTR [ecx],ebx
  427ba9:	mov    ds:0x19cf30a6,al
  427bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427baf:	hlt    
  427bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bb1:	sbb    DWORD PTR [ebx-0x65],ebp
  427bb4:	in     eax,0x67
  427bb6:	mov    esi,0x8ad018ec
  427bbb:	hlt    
  427bbc:	ins    BYTE PTR es:[edi],dx
  427bbd:	pop    edx
  427bbe:	dec    ebp
  427bbf:	or     edx,edi
  427bc1:	cmp    al,0x9c
  427bc3:	jmp    0x6ae:0xdee750ca
  427bca:	pusha  
  427bcb:	iret   
  427bcc:	dec    BYTE PTR [ebp-0x2e56c506]
  427bd2:	loope  0x427b58
  427bd4:	inc    esp
  427bd5:	push   eax
  427bd6:	jbe    0x427c32
  427bd8:	stc    
  427bd9:	cwde   
  427bda:	ror    DWORD PTR [eax-0x6ab1ad4],cl
  427be0:	mov    ah,0x78
  427be2:	leave  
  427be3:	std    
  427be4:	out    0x50,al
  427be6:	les    edx,FWORD PTR [eax+ebp*4]
  427be9:	ja     0x427bec
  427beb:	sbb    al,0xab
  427bed:	mov    edi,0xde549374
  427bf2:	dec    ecx
  427bf3:	bound  esp,QWORD PTR [edx-0x4c67f7b8]
  427bf9:	sub    al,BYTE PTR [ecx]
  427bfb:	imul   ebx,DWORD PTR [edx+0x37],0xb3408993
  427c02:	enter  0xf653,0xfc
  427c06:	and    BYTE PTR [ebx+eax*4],0x64
  427c0a:	es loope 0x427c63
  427c0d:	call   0x643d8d60
  427c12:	mov    BYTE PTR [ebp-0x3d],dh
  427c15:	mov    al,ds:0xe34de073
  427c1a:	adc    DWORD PTR [ecx+esi*8-0x357368b9],ebp
  427c21:	stos   DWORD PTR es:[edi],eax
  427c22:	push   eax
  427c23:	cs shl dh,1
  427c26:	xor    edx,0xffffffe5
  427c29:	sub    al,0x25
  427c2b:	pop    esi
  427c2c:	dec    esi
  427c2d:	js     0x427bd1
  427c2f:	dec    ebx
  427c30:	mov    edi,0x19b4d205
  427c35:	sub    eax,0xa8d8659c
  427c3a:	sub    ah,BYTE PTR [eax]
  427c3c:	jmp    0x427c62
  427c3e:	scas   eax,DWORD PTR es:[edi]
  427c3f:	rol    BYTE PTR [eax],0x35
  427c42:	outs   dx,DWORD PTR ds:[esi]
  427c43:	xor    ch,BYTE PTR [ecx]
  427c45:	aad    0xbe
  427c47:	outs   dx,DWORD PTR ds:[esi]
  427c48:	in     al,0x48
  427c4a:	adc    ch,0xec
  427c4d:	repz cmc 
  427c4f:	sbb    bl,ch
  427c51:	mov    eax,gs
  427c53:	and    eax,0xe8982cc2
  427c58:	push   ss
  427c59:	repnz mov al,0x20
  427c5c:	rol    DWORD PTR [eax-0x215d07fe],0xe6
  427c63:	aam    0x43
  427c65:	sub    ah,bl
  427c67:	sub    BYTE PTR [edx+ebp*1],bl
  427c6a:	sub    esp,DWORD PTR [eax-0x8]
  427c6d:	fnstenv [ecx-0x48d0286]
  427c73:	or     ebx,DWORD PTR [esp+ebx*1]
  427c76:	or     esi,eax
  427c78:	cmp    bl,bh
  427c7a:	mov    dh,0x5a
  427c7c:	(bad)  
  427c7e:	les    ecx,FWORD PTR [esi+0x24]
  427c81:	in     eax,0x4a
  427c83:	inc    esi
  427c84:	sahf   
  427c85:	sbb    dl,BYTE PTR [ebp-0x44cfda18]
  427c8b:	es fwait
  427c8d:	pop    ecx
  427c8e:	inc    ebp
  427c8f:	aam    0xc
  427c91:	push   eax
  427c92:	test   ah,bh
  427c94:	test   BYTE PTR [edx+0x1a],dh
  427c97:	cmp    esi,0x30
  427c9a:	(bad)  
  427c9b:	fs ss ret 0xd874
  427ca0:	sub    BYTE PTR [ebx+0x5e6167d8],cl
  427ca6:	dec    eax
  427ca7:	dec    ebp
  427ca8:	mov    esi,0x4efc7f8b
  427cad:	inc    eax
  427cae:	ret    0x1526
  427cb1:	leave  
  427cb2:	adc    BYTE PTR [edi],ch
  427cb4:	and    bh,al
  427cb6:	xchg   ecx,eax
  427cb7:	out    dx,al
  427cb8:	mov    DWORD PTR [edx-0x54],eax
  427cbb:	cmp    DWORD PTR [ecx+0x44],ebx
  427cbe:	ret    0xe6a
  427cc1:	fldlg2 
  427cc3:	stos   DWORD PTR es:[edi],eax
  427cc4:	out    dx,eax
  427cc5:	fisubr DWORD PTR [eax+0x55]
  427cc8:	jp     0x427d24
  427cca:	inc    esp
  427ccb:	mov    BYTE PTR [ecx],bh
  427ccd:	lock adc al,0x10
  427cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cd1:	jl     0x427d12
  427cd3:	lods   al,BYTE PTR ds:[esi]
  427cd4:	add    DWORD PTR [edi-0x41cb028d],edi
  427cda:	daa    
  427cdb:	cmp    eax,0x35c58dc6
  427ce0:	pop    ax
  427ce2:	stos   BYTE PTR es:[edi],al
  427ce3:	xor    BYTE PTR [ecx-0xce4bf24],0xc3
  427cea:	jl     0x427d40
  427cec:	leave  
  427ced:	sbb    cl,BYTE PTR [ebp-0x63]
  427cf0:	jl     0x427d0c
  427cf2:	or     eax,0x909e50a0
  427cf7:	xor    ecx,ebx
  427cf9:	jl     0x427d1f
  427cfb:	enter  0xb548,0xca
  427cff:	(bad)  
  427d00:	(bad)  
  427d01:	mov    esi,0x6c3859a0
  427d06:	sub    ch,BYTE PTR [esi]
  427d08:	(bad)  
  427d09:	cld    
  427d0a:	adc    eax,0x90075e6d
  427d0f:	popa   
  427d10:	inc    edi
  427d11:	push   cs
  427d12:	pop    ds
  427d13:	jbe    0x427d08
  427d15:	xchg   esi,eax
  427d16:	je     0x427ccc
  427d18:	leave  
  427d19:	rcr    DWORD PTR gs:[edi],0x7d
  427d1d:	or     BYTE PTR [esi-0x28],0x5c
  427d21:	jg     0x427d1d
  427d23:	retf   0x2c43
  427d26:	sbb    DWORD PTR [eax+0x769980d9],esi
  427d2c:	cwde   
  427d2d:	mov    bh,0x74
  427d2f:	sbb    DWORD PTR [edx+0x160a43b],esp
  427d35:	(bad)  
  427d36:	sbb    DWORD PTR [edx-0x37d02488],esi
  427d3c:	je     0x427d78
  427d3e:	adc    DWORD PTR [edx],0xffffff9d
  427d41:	enter  0xb68d,0xec
  427d45:	in     eax,dx
  427d46:	push   eax
  427d47:	popf   
  427d48:	retf   0x55ee
  427d4b:	cmp    dl,BYTE PTR [esp+edx*4]
  427d4e:	xchg   esp,eax
  427d4f:	and    DWORD PTR [ecx-0x10],ebp
  427d52:	(bad)  
  427d54:	outs   dx,BYTE PTR ds:[esi]
  427d55:	(bad)  
  427d56:	mov    eax,0x6e9128dc
  427d5b:	loope  0x427d2d
  427d5d:	jo     0x427d2a
  427d5f:	fdiv   st(0),st
  427d61:	cdq    
  427d62:	pusha  
  427d63:	sbb    edi,DWORD PTR [eax+0x34]
  427d66:	adc    BYTE PTR [esi],al
  427d68:	add    BYTE PTR [ebx],ch
  427d6a:	sub    al,0xaf
  427d6c:	cwde   
  427d6d:	mov    edx,0xa8b71a70
  427d72:	push   eax
  427d73:	inc    ecx
  427d74:	mov    ebp,0x747051a0
  427d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d7a:	int3   
  427d7b:	and    BYTE PTR [ecx],0x71
  427d7e:	mov    BYTE PTR [ebx],ah
  427d80:	mov    ds:0x77f0ca36,eax
  427d85:	add    edi,DWORD PTR [edi-0x3fc0ad57]
  427d8b:	xor    BYTE PTR [ecx+ebp*1],dl
  427d8e:	aas    
  427d8f:	xchg   ebx,eax
  427d90:	(bad)  
  427d91:	clc    
  427d92:	(bad)  
  427d93:	and    al,0x4a
  427d95:	cmp    BYTE PTR [ecx+0x3701fce3],ah
  427d9b:	xor    DWORD PTR ds:0x7f1fe0e9,esp
  427da1:	inc    edx
  427da2:	push   0x27
  427da4:	hlt    
  427da5:	xchg   esi,eax
  427da6:	jg     0x427dac
  427da8:	mov    bl,0x76
  427daa:	jns    0x427e02
  427dac:	jb     0x427e10
  427dae:	in     al,0x7f
  427db0:	sub    BYTE PTR [ebx],ch
  427db2:	dec    esp
  427db3:	ret    0xaa9d
  427db6:	fs jge 0x427de4
  427db9:	dec    esp
  427dba:	push   ss
  427dbb:	mov    ebx,0x83f1451e
  427dc0:	pop    edx
  427dc1:	mov    BYTE PTR [eax-0x4e],dh
  427dc4:	or     DWORD PTR [edx],0x8f7dd31d
  427dca:	test   BYTE PTR [eax],bl
  427dcc:	jnp    0x427da9
  427dce:	push   esi
  427dcf:	inc    ebx
  427dd0:	call   DWORD PTR [eax]
  427dd2:	lods   eax,DWORD PTR ds:[esi]
  427dd3:	jge    0x427e11
  427dd5:	jae    0x427d5a
  427dd7:	cmp    ebp,DWORD PTR [eax+edi*8]
  427dda:	addr16 inc edi
  427ddc:	iret   
  427ddd:	pusha  
  427dde:	adc    BYTE PTR ss:[ebx+ebx*4+0x7cf2be3f],bh
  427de6:	test   BYTE PTR [edi+edx*4],ah
  427de9:	pop    esi
  427dea:	pop    ds
  427deb:	mov    eax,ds:0x2cefe392
  427df0:	call   DWORD PTR [ecx-0x56]
  427df3:	aas    
  427df4:	adc    eax,DWORD PTR [bx+di+0x50ee]
  427df9:	mov    ?,WORD PTR [ebp+0x39886961]
  427dff:	dec    ebx
  427e00:	sti    
  427e01:	je     0x427e22
  427e03:	push   ss
  427e04:	pop    ss
  427e05:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  427e07:	frstor [ecx+ebp*8-0x68]
  427e0b:	xchg   ebx,eax
  427e0c:	sub    DWORD PTR [edi+0x5b3bdf0],ebx
  427e12:	cmp    BYTE PTR [ecx+ebx*8-0x40a6efeb],bh
  427e19:	sahf   
  427e1a:	mov    ds:0x76d36416,eax
  427e1f:	das    
  427e20:	iret   
  427e21:	mov    dh,0x6b
  427e23:	jnp    0x427de4
  427e25:	mov    BYTE PTR [esi],dh
  427e27:	std    
  427e28:	mov    bl,0x72
  427e2a:	push   ss
  427e2b:	jp     0x427ea7
  427e2d:	jmp    0xafea:0xecba9ac
  427e34:	cmp    ah,0x70
  427e37:	sar    cl,1
  427e39:	pop    edi
  427e3a:	(bad)  [edx+ebx*1-0x45]
  427e3e:	sub    eax,0x5ef978e2
  427e43:	pop    es
  427e44:	rcr    BYTE PTR [eax+eax*2-0x26],0xbd
  427e49:	pushf  
  427e4a:	adc    al,0x90
  427e4c:	pop    ds
  427e4d:	and    ebp,DWORD PTR [edx-0x78]
  427e50:	pushf  
  427e51:	mov    eax,ds:0x9053c6c0
  427e56:	icebp  
  427e57:	jmp    FWORD PTR [edx]
  427e59:	jno    0x427ed1
  427e5b:	in     al,0x56
  427e5d:	xor    BYTE PTR [esi-0x5d04d31],cl
  427e63:	ret    0xc08
  427e66:	add    esp,esi
  427e68:	xor    al,0x60
  427e6a:	push   eax
  427e6b:	leave  
  427e6c:	cmp    BYTE PTR [eax-0x7a12435],dh
  427e72:	inc    eax
  427e73:	fs pushf 
  427e75:	xchg   ah,dl
  427e77:	xor    esi,esi
  427e79:	xchg   DWORD PTR [ebp+0x65],esi
  427e7c:	mov    ecx,esi
  427e7e:	int    0xf8
  427e80:	in     eax,0xa9
  427e82:	gs or  eax,0x638e861
  427e88:	sbb    al,0x18
  427e8a:	adc    ah,ch
  427e8c:	out    dx,al
  427e8d:	mov    ebx,0x404baab7
  427e92:	outs   dx,BYTE PTR ds:[esi]
  427e93:	out    0x70,eax
  427e95:	sti    
  427e96:	lods   al,BYTE PTR ds:[esi]
  427e97:	cmp    ah,al
  427e99:	pop    ebp
  427e9a:	call   0x7d0aa4d8
  427e9f:	mov    edi,0xc1656dd
  427ea4:	sbb    al,BYTE PTR [ebx]
  427ea6:	loopne 0x427e8e
  427ea8:	pop    edx
  427ea9:	pop    ebx
  427eaa:	aas    
  427eab:	xor    BYTE PTR ds:[edx-0x4dde6585],dh
  427eb2:	fisttp WORD PTR [edi]
  427eb4:	outs   dx,BYTE PTR ds:[esi]
  427eb5:	push   esp
  427eb6:	and    DWORD PTR [edi+edi*4-0x7603e039],edi
  427ebd:	aad    0xfc
  427ebf:	sub    ecx,DWORD PTR [edi+0x55c9e789]
  427ec5:	shl    BYTE PTR [bx+si],1
  427ec8:	xchg   ebp,eax
  427ec9:	ja     0x427e6b
  427ecb:	pop    esi
  427ecc:	mov    cl,0x4d
  427ece:	test   DWORD PTR [esi],eax
  427ed0:	inc    esp
  427ed1:	adc    al,BYTE PTR [ebx]
  427ed3:	ret    
  427ed4:	out    0x19,eax
  427ed6:	aaa    
  427ed7:	jp     0x427eef
  427ed9:	push   0x3954f922
  427ede:	xchg   ecx,eax
  427edf:	mov    ds:0x5c8ccc9b,eax
  427ee4:	push   esi
  427ee5:	pop    esi
  427ee6:	clc    
  427ee7:	mov    ah,0x48
  427ee9:	sub    DWORD PTR [ecx-0x74b6dacc],0x26
  427ef0:	je     0x427edc
  427ef2:	aaa    
  427ef3:	jmp    0x25e40d50
  427ef8:	sub    ebp,DWORD PTR [ecx+0x7ca4ea11]
  427efe:	xchg   ebp,eax
  427eff:	mov    eax,ds:0xd0d08fdb
  427f04:	mov    WORD PTR [edi+0x74fefa0],es
  427f0a:	mov    ah,0x24
  427f0c:	xchg   edi,eax
  427f0d:	iret   
  427f0e:	dec    ax
  427f10:	leave  
  427f11:	pop    edi
  427f12:	fdiv   DWORD PTR [esi+0x5d]
  427f15:	pop    eax
  427f16:	xchg   ecx,eax
  427f17:	xlat   BYTE PTR ds:[ebx]
  427f18:	ins    BYTE PTR es:[edi],dx
  427f19:	aad    0x48
  427f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f1c:	repnz ss icebp 
  427f1f:	rcl    BYTE PTR [esi-0x70],1
  427f22:	push   es
  427f23:	ss popa 
  427f25:	nop
  427f26:	daa    
  427f27:	push   0xfcb41106
  427f2c:	mov    al,0xfa
  427f2e:	out    dx,eax
  427f2f:	and    BYTE PTR [edx-0x7c27f63f],al
  427f35:	cwde   
  427f36:	pop    esp
  427f37:	xchg   esi,eax
  427f38:	es mov edx,0x9180454e
  427f3e:	dec    ecx
  427f3f:	fs jle 0x427ee9
  427f42:	push   ds
  427f43:	cmp    cl,BYTE PTR [edx+0x7326d4a4]
  427f49:	mov    ah,0x1c
  427f4b:	inc    esi
  427f4c:	xor    DWORD PTR [ecx+0x4277bac8],edi
  427f52:	dec    eax
  427f53:	jmp    0xec4f9eaf
  427f58:	fdivr  DWORD PTR [ebx-0x4a]
  427f5b:	dec    ecx
  427f5c:	enter  0xec8,0x4b
  427f60:	adc    BYTE PTR [ebp-0x3],dh
  427f63:	jg     0x427f41
  427f65:	fimul  WORD PTR [eax]
  427f67:	mov    ecx,0x152eb819
  427f6c:	popa   
  427f6d:	outs   dx,DWORD PTR ds:[esi]
  427f6e:	(bad)  
  427f6f:	out    dx,al
  427f70:	or     DWORD PTR [ebx],edx
  427f72:	fsub   QWORD PTR [edi+0x74]
  427f75:	dec    edx
  427f76:	ret    0x3253
  427f79:	mov    eax,ds:0xbe0b00df
  427f7e:	xchg   ebp,eax
  427f7f:	loop   0x427f7a
  427f81:	pop    ecx
  427f82:	push   cs
  427f83:	lahf   
  427f84:	and    al,0x69
  427f86:	loopne 0x427f79
  427f88:	enter  0x131d,0xa7
  427f8c:	xor    ah,cl
  427f8e:	push   0x5a4db6f7
  427f93:	pop    edx
  427f94:	stos   BYTE PTR es:[edi],al
  427f95:	jae    0x427f87
  427f97:	mov    ch,0x19
  427f99:	es lahf 
  427f9b:	add    al,0x1
  427f9d:	nop
  427f9e:	and    BYTE PTR [eax+eax*1],dl
  427fa1:	sbb    al,0x25
  427fa3:	pop    esp
  427fa4:	test   eax,0x38dfba3d
  427fa9:	add    BYTE PTR [esi-0x445e30ac],al
  427faf:	cmp    edx,0x3f11655c
  427fb5:	fldcw  WORD PTR ds:0x41e9977
  427fbb:	(bad)  
  427fbc:	ret    
  427fbd:	call   0x262941cd
  427fc2:	test   BYTE PTR [eax],ch
  427fc4:	shr    ecx,1
  427fc6:	(bad)  [edi]
  427fc8:	fistp  WORD PTR [edx-0x3bb3ebfe]
  427fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fcf:	sbb    dh,ah
  427fd1:	jo     0x427f54
  427fd3:	fsubr  DWORD PTR [edi+0xba3870]
  427fd9:	pop    ds
  427fda:	and    DWORD PTR [edi-0x64e72e07],ecx
  427fe0:	xor    BYTE PTR [ecx],dh
  427fe2:	and    ah,BYTE PTR [ebx]
  427fe4:	sar    DWORD PTR [ecx],0xca
  427fe7:	cmp    al,0x79
  427fe9:	ins    DWORD PTR es:[edi],dx
  427fea:	repnz icebp 
  427fec:	loopne 0x428013
  427fee:	es push edi
  427ff0:	pusha  
  427ff1:	cvttps2pi mm1,QWORD PTR [ebx-0x1fd8736b]
  427ff8:	dec    esp
  427ff9:	test   BYTE PTR [esp+eiz*2],ch
  427ffc:	jbe    0x427f8e
  427ffe:	lods   eax,DWORD PTR ds:[esi]
  427fff:	or     eax,edx
  428001:	dec    esp
  428002:	test   al,0x10
  428004:	stc    
  428005:	mov    esp,esi
  428007:	mov    dl,dl
  428009:	aam    0xc3
  42800b:	push   eax
  42800c:	loop   0x427fd0
  42800e:	out    dx,al
  42800f:	sar    BYTE PTR [edi+0x74989bb9],cl
  428015:	lods   al,BYTE PTR ds:[esi]
  428016:	pushaw 
  428018:	(bad)  
  428019:	popa   
  42801a:	test   DWORD PTR [eax+0x71079825],ebp
  428020:	mov    WORD PTR [esi],?
  428022:	dec    ebp
  428023:	jae    0x42807a
  428025:	retf   
  428026:	mov    esp,0xdb900f1b
  42802b:	mov    ecx,0xe090eda5
  428030:	and    al,0xf1
  428032:	repnz xor DWORD PTR es:0xb6885ea1,0xb07654ce
  42803e:	retf   0x1a06
  428041:	lods   al,BYTE PTR ds:[esi]
  428042:	cmp    BYTE PTR [edx],bl
  428044:	push   edx
  428045:	ret    
  428046:	mov    DWORD PTR [edi],ebp
  428048:	dec    edx
  428049:	mov    ebp,0x797bc3d0
  42804e:	sbb    eax,0x8bcdd50d
  428053:	hlt    
  428054:	or     al,0x5c
  428056:	push   ecx
  428057:	sub    eax,0xb77d5052
  42805c:	pushf  
  42805d:	or     dl,bl
  42805f:	pusha  
  428060:	sub    WORD PTR [edx+0x4c0577c],0xd8e9
  428069:	cmc    
  42806a:	mov    BYTE PTR [esi],cl
  42806c:	xchg   DWORD PTR [esp+eiz*8+0x74],eax
  428070:	mov    al,0x6e
  428072:	sub    eax,0x8122fad0
  428077:	or     BYTE PTR [esi-0x61],bl
  42807a:	push   0xabcad5d6
  42807f:	adc    DWORD PTR [esi+ecx*8],ebp
  428082:	hlt    
  428083:	fisttp WORD PTR ds:0x70bb92ae
  428089:	aam    0x70
  42808b:	mov    eax,0xa284b3f2
  428090:	loop   0x428048
  428092:	clc    
  428093:	popa   
  428094:	loope  0x4280da
  428096:	sar    DWORD PTR [ebx+eiz*8],cl
  428099:	and    bh,BYTE PTR [esp+ebx*1]
  42809c:	(bad)  
  42809d:	pop    edx
  42809e:	jae    0x42810d
  4280a0:	enter  0x4e18,0xb7
  4280a4:	inc    eax
  4280a5:	jecxz  0x42803d
  4280a7:	adc    ch,BYTE PTR [ebx-0x3a850bf8]
  4280ad:	call   0xdb15a87
  4280b2:	inc    edx
  4280b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280b4:	ins    DWORD PTR es:[edi],dx
  4280b5:	pop    ecx
  4280b6:	or     al,0xb4
  4280b8:	push   es
  4280b9:	and    BYTE PTR ds:0xafcf49c2,bl
  4280bf:	xor    BYTE PTR [ebx+esi*2],ch
  4280c2:	sub    BYTE PTR [ebp-0x72],bl
  4280c5:	ss sbb eax,0xc48e547c
  4280cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280cc:	push   esi
  4280cd:	(bad)  
  4280ce:	js     0x42808b
  4280d0:	mov    al,ds:0xce7caa78
  4280d5:	sbb    al,0xab
  4280d7:	inc    edi
  4280d8:	rol    dh,0x20
  4280db:	call   DWORD PTR [edx]
  4280dd:	ja     0x4280a1
  4280df:	stos   BYTE PTR es:[edi],al
  4280e0:	lock fwait
  4280e2:	stos   DWORD PTR es:[edi],eax
  4280e3:	inc    esp
  4280e4:	jmp    0x41d8:0xc302df2
  4280eb:	sub    eax,0x237cd368
  4280f0:	dec    edi
  4280f1:	adc    ebp,edi
  4280f3:	sti    
  4280f4:	jne    0x428082
  4280f6:	mov    cl,0x3f
  4280f8:	mov    edx,0x3ad0bf5e
  4280fd:	mov    dh,BYTE PTR [edi*8-0x57b68d6a]
  428104:	mov    ebp,DWORD PTR [ecx+0x277c58d0]
  42810a:	test   eax,0x1c96bfd0
  42810f:	adc    BYTE PTR [edi+ebp*8-0x6d],bh
  428113:	cmp    DWORD PTR [edi],esp
  428115:	inc    ecx
  428116:	push   edx
  428117:	in     eax,dx
  428118:	lahf   
  428119:	mov    al,ds:0x9b796fbd
  42811e:	push   ss
  42811f:	mov    ecx,0x20c4afc0
  428124:	dec    ebp
  428125:	sub    eax,0x7a9bf2c8
  42812a:	imul   ebp,DWORD PTR [eax+edx*4-0xf],0x13840ca2
  428132:	cli    
  428133:	cs nop
  428135:	sub    al,0x7b
  428137:	add    ch,BYTE PTR [ecx-0x55]
  42813a:	fld    QWORD PTR ds:0x29e4b482
  428140:	cld    
  428141:	mov    ds:0x1504703,al
  428146:	fmul   DWORD PTR ds:0x4a752d3f
  42814c:	and    BYTE PTR [edi],bl
  42814e:	fdiv   st(4),st
  428150:	mov    al,ds:0xb10cf7c8
  428155:	adc    bh,BYTE PTR [ecx-0x165d5bb4]
  42815b:	sub    ah,BYTE PTR [ecx+0x4b]
  42815e:	push   es
  42815f:	sbb    al,cl
  428161:	enter  0x1662,0x3a
  428165:	mov    eax,fs
  428167:	xor    al,0x84
  428169:	inc    eax
  42816a:	in     al,dx
  42816b:	lock push esi
  42816d:	or     eax,esp
  42816f:	add    DWORD PTR [esi],esi
  428171:	stos   DWORD PTR es:[edi],eax
  428172:	xor    dl,BYTE PTR [eax]
  428174:	sti    
  428175:	mov    esi,0xb5d0f12b
  42817a:	ror    DWORD PTR [eax-0x478f1d48],cl
  428180:	or     eax,0xb1ffd4a2
  428185:	fmul   QWORD PTR [edx]
  428187:	and    al,0x60
  428189:	xchg   ebp,eax
  42818a:	mov    edx,0x443152
  42818f:	je     0x4281b0
  428191:	bound  edx,QWORD PTR [ebp-0x6bb46f8b]
  428197:	and    al,0xdb
  428199:	cmp    ebx,esp
  42819b:	sub    ah,BYTE PTR [ebx+0x484e26ef]
  4281a1:	lods   eax,DWORD PTR ds:[esi]
  4281a2:	leave  
  4281a3:	retf   
  4281a4:	nop
  4281a5:	test   eax,0xf0248076
  4281aa:	retf   0x9793
  4281ad:	mov    esi,0x6325a889
  4281b2:	adc    al,0x91
  4281b4:	retf   
  4281b5:	bound  ecx,QWORD PTR [edx-0x7aacd63f]
  4281bb:	cmp    BYTE PTR [edi],ah
  4281bd:	sar    edi,0x4e
  4281c0:	repnz aaa 
  4281c2:	pop    edi
  4281c3:	in     al,dx
  4281c4:	pop    esp
  4281c5:	int3   
  4281c6:	nop
  4281c7:	aas    
  4281c8:	sub    BYTE PTR [eax+0x44ca6c7],bl
  4281ce:	jns    0x4281f0
  4281d0:	dec    ebp
  4281d1:	xchg   ecx,eax
  4281d2:	dec    edx
  4281d3:	call   0x376aba66
  4281d8:	cmp    cl,BYTE PTR [edx+0x28]
  4281db:	sbb    al,0x2a
  4281dd:	add    esp,DWORD PTR [esp+ecx*2-0x14]
  4281e1:	(bad)  
  4281e2:	lock add al,0xe7
  4281e5:	ficom  DWORD PTR [edi+ebp*4+0x70]
  4281e9:	jmp    0xc85a:0xc9b095dc
  4281f0:	(bad)  
  4281f1:	xchg   esp,eax
  4281f2:	nop
  4281f3:	xchg   edi,eax
  4281f4:	fsub   QWORD PTR [ebx-0x6d402c5f]
  4281fa:	cmp    al,0x77
  4281fc:	lahf   
  4281fd:	in     eax,dx
  4281fe:	push   eax
  4281ff:	mov    eax,0x4530a7
  428204:	add    BYTE PTR [eax],al
  428206:	add    BYTE PTR [eax],al
  428208:	push   es
  428209:	push   ss
  42820a:	imul   eax,DWORD PTR [edx+0x50],0x9
  42820e:	add    BYTE PTR [eax],al
  428210:	add    BYTE PTR [eax],al
  428212:	add    BYTE PTR [eax],al
  428214:	push   eax
  428215:	or     DWORD PTR [eax],eax
  428217:	add    BYTE PTR [eax],dh
  428219:	add    BYTE PTR [esi],ah
  42821b:	jl     0x42821d
  42821d:	add    dh,BYTE PTR [esi]
  42821f:	or     BYTE PTR [eax],al
  428221:	add    bl,al
  428223:	inc    ebp
  428224:	add    BYTE PTR [ebx],cl
  428226:	mov    edi,0xb8f1d7d7
  42822b:	xchg   BYTE PTR [edi],dl
  42822d:	and    al,0xad
  42822f:	and    DWORD PTR [ebx+0x31],ebp
  428232:	pop    esi
  428233:	add    al,0x5a
  428235:	mov    bh,0x48
  428237:	xchg   esp,eax
  428238:	in     al,0x65
  42823a:	jp     0x4282b8
  42823c:	sub    BYTE PTR [edi-0x372793c9],dh
  428242:	pop    ss
  428243:	inc    edi
  428244:	fwait
  428245:	nop
  428246:	lods   al,BYTE PTR ds:[esi]
  428247:	lock nop
  428249:	pop    esp
  42824a:	call   0x6337:0x739ca87e
  428251:	cmp    ah,cl
  428253:	push   edi
  428254:	mov    al,ds:0xb3f8c75a
  428259:	pop    ds
  42825a:	pop    esp
  42825b:	loope  0x4282a9
  42825d:	dec    ebx
  42825e:	fs sub al,0xa9
  428261:	mov    al,0xdc
  428263:	sub    BYTE PTR ds:0x78368b11,0x24
  42826a:	jae    0x428226
  42826c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42826d:	(bad)  
  42826e:	jmp    0x550fc395
  428273:	div    DWORD PTR ds:0x6785ba4c
  428279:	push   edi
  42827a:	lock aam 0x50
  42827d:	fdiv   DWORD PTR [eax-0x67]
  428280:	sub    esp,DWORD PTR [esp+ebp*4]
  428283:	dec    eax
  428284:	int    0xb1
  428286:	arpl   WORD PTR [ebp+esi*8+0x5c35f58b],dx
  42828d:	dec    ebx
  42828e:	les    eax,FWORD PTR [ecx]
  428290:	mov    eax,0x906a4b1b
  428295:	mov    BYTE PTR [edi+eax*2+0x7fb8dc8b],ch
  42829c:	push   esi
  42829d:	es fucomp st(0)
  4282a0:	xchg   edx,eax
  4282a1:	push   ebp
  4282a2:	test   BYTE PTR [esi+0x7db1cfe8],bl
  4282a8:	sahf   
  4282a9:	loopne 0x428305
  4282ab:	test   al,0xe3
  4282ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282ae:	repnz dec esi
  4282b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282b1:	jp     0x42823a
  4282b3:	(bad)  
  4282b4:	int3   
  4282b5:	pop    ds
  4282b6:	dec    eax
  4282b7:	js     0x428337
  4282b9:	cwde   
  4282ba:	xlat   BYTE PTR ds:[ebx]
  4282bb:	mul    DWORD PTR [edi-0x10]
  4282be:	repnz or al,0xbf
  4282c1:	repz mov dh,0xd2
  4282c4:	fmul   QWORD PTR [esi]
  4282c6:	adc    al,0x7b
  4282c8:	xchg   ebp,eax
  4282c9:	sub    eax,0xab488dbb
  4282ce:	pop    es
  4282cf:	mov    esp,0x8d97189
  4282d4:	int    0x59
  4282d6:	inc    ecx
  4282d7:	pop    eax
  4282d8:	loopne 0x42829b
  4282da:	cld    
  4282db:	jb     0x4282a4
  4282dd:	call   0x5268a37
  4282e2:	or     ch,BYTE PTR [edi+0x18]
  4282e5:	adc    al,0x37
  4282e7:	neg    BYTE PTR [esi-0x7d3ed7b1]
  4282ed:	jmp    0x7a8e796a
  4282f2:	lods   al,BYTE PTR ds:[esi]
  4282f3:	ror    BYTE PTR [ebp-0x193fa8c9],1
  4282f9:	dec    eax
  4282fa:	inc    eax
  4282fb:	outs   dx,BYTE PTR ds:[esi]
  4282fc:	hlt    
  4282fd:	es pop edi
  4282ff:	into   
  428300:	dec    edi
  428301:	sahf   
  428302:	int3   
  428303:	dec    esi
  428304:	dec    edx
  428305:	sbb    dh,al
  428307:	inc    esp
  428308:	cld    
  428309:	and    ah,BYTE PTR [edi]
  42830b:	dec    ebx
  42830d:	mov    ebx,0xc1c0e63c
  428312:	or     al,0xd0
  428314:	shr    DWORD PTR [edx+0x2c],0x60
  428318:	push   ds
  428319:	mov    al,ds:0xfbdebeb5
  42831e:	cmp    bl,ch
  428320:	or     BYTE PTR [edi+ebx*4+0x61],cl
  428324:	(bad)  
  428325:	mov    esp,0x2cf9fa19
  42832a:	out    dx,al
  42832b:	cmp    ebx,DWORD PTR [edi-0x40]
  42832e:	push   eax
  42832f:	xor    al,0xad
  428331:	ficom  DWORD PTR [eax-0x56]
  428334:	push   ss
  428335:	push   ss
  428336:	xchg   ecx,eax
  428337:	xchg   edx,eax
  428338:	jno    0x4282c0
  42833a:	dec    ebx
  42833b:	je     0x42832e
  42833d:	fldcw  WORD PTR [eax+0x7b]
  428340:	pop    ebx
  428341:	les    esp,FWORD PTR [eax+0x5]
  428344:	sbb    al,0xf7
  428346:	cmp    DWORD PTR [ecx],edi
  428348:	adc    bl,BYTE PTR [ebx]
  42834a:	lods   eax,DWORD PTR ds:[esi]
  42834b:	inc    ecx
  42834c:	jb     0x42838e
  42834e:	dec    edi
  42834f:	add    bh,BYTE PTR [esi+0x29]
  428352:	mov    ch,0x3c
  428354:	jns    0x4283a9
  428356:	fs fwait
  428358:	xor    DWORD PTR [edx],0x6d
  42835b:	pop    esp
  42835c:	cwde   
  42835d:	lods   eax,DWORD PTR ds:[esi]
  42835e:	dec    ebp
  42835f:	mov    BYTE PTR [edi+0x21],bh
  428362:	or     BYTE PTR [edi+0x214d670e],cl
  428368:	lods   al,BYTE PTR ds:[esi]
  428369:	mov    edi,ecx
  42836b:	sub    DWORD PTR [eax+0x1c],eax
  42836e:	mov    ah,0xbd
  428370:	rcl    BYTE PTR [ebp+edx*4-0x6],cl
  428374:	mov    bh,0xf9
  428376:	and    bl,ch
  428378:	add    edi,DWORD PTR [eax+edi*2-0x77]
  42837c:	mov    ds:0xbf57e2ef,al
  428381:	and    cl,BYTE PTR [ebp-0x64]
  428384:	(bad)  
  428386:	dec    edi
  428387:	and    ecx,DWORD PTR [ebp+0x40]
  42838a:	stos   DWORD PTR es:[edi],eax
  42838b:	sub    al,al
  42838d:	loop   0x428366
  42838f:	add    al,cl
  428391:	test   DWORD PTR [ecx+0x38],edi
  428394:	into   
  428395:	in     al,0x63
  428397:	jmp    0x428374
  428399:	cld    
  42839a:	aad    0x4d
  42839c:	cmp    edi,DWORD PTR [edi-0x74]
  42839f:	mov    DWORD PTR [ebx+0x4c],edi
  4283a2:	and    BYTE PTR [edi-0x4fb03f19],cl
  4283a8:	push   ecx
  4283a9:	jge    0x4283e9
  4283ab:	mov    edi,0xe0cceeb8
  4283b0:	aam    0x23
  4283b2:	scas   al,BYTE PTR es:[edi]
  4283b3:	sahf   
  4283b4:	(bad)  
  4283b5:	mov    edi,0xf8287cc0
  4283ba:	inc    edi
  4283bb:	adc    DWORD PTR [edx+0x8],edx
  4283be:	daa    
  4283bf:	pop    ds
  4283c0:	inc    esi
  4283c1:	cld    
  4283c2:	mov    al,ds:0xb81c8d3a
  4283c7:	mov    bh,ah
  4283c9:	cmp    DWORD PTR [edi-0x3c],ebx
  4283cc:	in     eax,dx
  4283cd:	jg     0x4283c5
  4283cf:	and    bh,cl
  4283d1:	sbb    ch,BYTE PTR [edi+0x77b7e893]
  4283d7:	nop
  4283d8:	fwait
  4283d9:	out    dx,al
  4283da:	inc    esp
  4283db:	jl     0x42835d
  4283dd:	or     al,0xdb
  4283df:	jle    0x42841f
  4283e1:	loopne 0x428425
  4283e3:	dec    edx
  4283e4:	sbb    BYTE PTR [edx],bl
  4283e6:	xor    al,bh
  4283e8:	pop    ebx
  4283e9:	mov    al,bh
  4283eb:	adc    eax,0xd833726d
  4283f0:	sbb    esi,DWORD PTR [eax+0x34b1a82c]
  4283f6:	mov    ebp,DWORD PTR [esp+edi*8-0x68]
  4283fa:	lahf   
  4283fb:	je     0x4283f3
  4283fd:	std    
  4283fe:	ret    0x6ad3
  428401:	and    BYTE PTR [esi-0x23],bl
  428404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428405:	fild   WORD PTR [ecx+0x44d35379]
  42840b:	sbb    dh,BYTE PTR [esi]
  42840d:	sub    edx,DWORD PTR [edx+edi*4+0x59]
  428411:	dec    eax
  428412:	out    dx,al
  428413:	in     al,dx
  428414:	sbb    eax,0x55f0f023
  428419:	in     al,dx
  42841a:	pop    esp
  42841b:	inc    ebx
  42841c:	adc    BYTE PTR [ebx+0xf],dh
  42841f:	jbe    0x4283cd
  428421:	mov    WORD PTR ds:0xa534ceef,fs
  428427:	pop    edx
  428428:	fwait
  428429:	cmp    al,0x4e
  42842b:	xchg   esp,eax
  42842c:	rol    BYTE PTR [eax+ebx*2+0x38],0xe8
  428431:	rcl    DWORD PTR [eax],1
  428433:	and    DWORD PTR [esi],edx
  428435:	and    esp,DWORD PTR [edx]
  428437:	jl     0x4284a7
  428439:	xlat   BYTE PTR ds:[ebx]
  42843a:	(bad)  
  42843c:	lea    ebx,[esi+0x43]
  42843f:	sbb    al,0x24
  428441:	ja     0x428407
  428443:	mov    ds:0x1d472395,eax
  428448:	or     DWORD PTR [eax+0x3b],ecx
  42844b:	cmp    BYTE PTR [edx-0x1ab876b3],dl
  428451:	shr    BYTE PTR [eax+ebx*8+0x73],cl
  428455:	xor    DWORD PTR [eax-0x7a],ebx
  428458:	out    0xdf,eax
  42845a:	into   
  42845b:	nop
  42845c:	icebp  
  42845d:	mov    esi,0x7a6017ee
  428462:	cld    
  428463:	jge    0x428419
  428465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428466:	imul   eax,DWORD PTR [edx],0x7c
  428469:	xchg   BYTE PTR [edx-0x17],dl
  42846c:	xchg   ecx,eax
  42846d:	pop    esp
  42846e:	das    
  42846f:	xchg   DWORD PTR [ecx],eax
  428471:	cmp    eax,0xf381273b
  428476:	cmp    BYTE PTR [ebp+ebp*4-0x1af783b6],0x4d
  42847e:	pop    ds
  42847f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428480:	cmp    ebp,DWORD PTR [edx]
  428482:	test   al,0x1c
  428484:	lea    ebp,[eax+0x76c88da1]
  42848a:	mov    bl,0x79
  42848c:	ins    BYTE PTR es:[edi],dx
  42848d:	fidiv  WORD PTR [ebx+0x7770c0eb]
  428493:	popf   
  428494:	sbb    ah,dh
  428496:	aad    0x64
  428498:	inc    ebx
  428499:	loope  0x42842f
  42849b:	test   al,0x97
  42849d:	jge    0x4284c9
  42849f:	imul   edi,DWORD PTR [eax-0x73],0xd
  4284a3:	mov    eax,0xb2563def
  4284a8:	icebp  
  4284a9:	adc    DWORD PTR [esi+0x62],esp
  4284ac:	fdivr  QWORD PTR [ebx+eiz*1]
  4284af:	sbb    eax,0x8b95caa0
  4284b4:	in     al,dx
  4284b5:	add    BYTE PTR [edx-0x3ab73429],ah
  4284bb:	add    ah,ah
  4284bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284be:	test   al,0xea
  4284c0:	mov    ecx,0xe94cef68
  4284c5:	inc    esp
  4284c6:	mov    esp,ecx
  4284c8:	fwait
  4284c9:	cli    
  4284ca:	das    
  4284cb:	add    ebx,DWORD PTR [edi-0x54]
  4284ce:	jmp    0x428461
  4284d0:	lock arpl WORD PTR [ebx+0x75],bp
  4284d4:	sub    DWORD PTR [edi],edx
  4284d6:	or     ebx,DWORD PTR [edx+0x68b3140a]
  4284dc:	scas   al,BYTE PTR es:[edi]
  4284dd:	lock pop edx
  4284df:	jne    0x428520
  4284e1:	hlt    
  4284e2:	mov    esp,0x62f6252d
  4284e7:	mov    esp,DWORD PTR [esi+0x2e00434]
  4284ed:	(bad)  
  4284ee:	pop    edx
  4284ef:	std    
  4284f0:	lods   al,BYTE PTR ds:[esi]
  4284f1:	bound  edi,QWORD PTR [ecx]
  4284f3:	mov    ah,0x4
  4284f5:	mov    dh,0xdf
  4284f7:	mov    esi,DWORD PTR [esi]
  4284f9:	clc    
  4284fa:	sub    eax,0xa42835ae
  4284ff:	xchg   esp,eax
  428500:	out    0xf9,eax
  428502:	test   al,0x27
  428504:	add    DWORD PTR [eax+0x4c],0xfffffff2
  428508:	fs jmp 0xf4a0:0x74410b58
  428510:	out    dx,eax
  428511:	push   0xffffffc3
  428513:	sbb    BYTE PTR [eax-0x7a],ah
  428516:	jns    0x42849e
  428518:	sbb    BYTE PTR [esi],dl
  42851a:	out    0x2,eax
  42851c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42851d:	fdivr  st,st(5)
  42851f:	cwde   
  428520:	sub    edi,DWORD PTR [esi+ebp*1]
  428523:	xor    esp,0x1e798bd
  428529:	ins    DWORD PTR es:[edi],dx
  42852a:	pusha  
  42852b:	sbb    esi,ebx
  42852d:	dec    ecx
  42852e:	add    ch,bl
  428530:	arpl   ax,bx
  428532:	jl     0x4284b8
  428534:	jb     0x42852f
  428536:	push   ebp
  428537:	int3   
  428538:	jb     0x428529
  42853a:	gs in  eax,dx
  42853c:	sub    al,0xf6
  42853e:	call   FWORD PTR [ebx-0x5a7e4422]
  428544:	lds    edx,FWORD PTR [eax-0x19]
  428547:	fldcw  WORD PTR [edx]
  428549:	mov    ebx,0xb654ac53
  42854e:	je     0x4285a0
  428550:	xor    DWORD PTR [ebp+esi*8+0x62],ebx
  428554:	lahf   
  428555:	inc    ebp
  428556:	fwait
  428557:	cwde   
  428558:	aas    
  428559:	mov    cl,0x19
  42855b:	ja     0x428575
  42855d:	xchg   ebp,eax
  42855e:	popf   
  42855f:	enter  0xcc40,0x52
  428563:	xor    DWORD PTR [ebx+0x6904cf28],eax
  428569:	fs push ds
  42856b:	xchg   ebx,eax
  42856c:	ins    DWORD PTR es:[edi],dx
  42856d:	std    
  42856e:	add    DWORD PTR [ecx],eax
  428570:	rcr    BYTE PTR [eax+ecx*4-0x3a],0xb2
  428575:	les    ecx,FWORD PTR [ecx]
  428577:	in     al,0xb3
  428579:	sbb    al,0x73
  42857b:	lods   al,BYTE PTR ds:[esi]
  42857c:	cmp    al,0xd6
  42857e:	inc    esp
  42857f:	ret    
  428580:	repnz pop ss
  428582:	dec    ebp
  428583:	(bad)  
  428585:	and    al,bh
  428587:	cmp    bl,BYTE PTR [esi+0x7d09ae2e]
  42858d:	js     0x428604
  42858f:	je     0x42860b
  428591:	stc    
  428592:	cmp    bh,BYTE PTR [ebp-0x80]
  428595:	das    
  428596:	pushf  
  428597:	mov    ah,BYTE PTR cs:[edi+0x43]
  42859b:	jns    0x428590
  42859d:	sahf   
  42859e:	mov    es,eax
  4285a0:	dec    edi
  4285a1:	jmp    0x42858c
  4285a3:	add    ah,BYTE PTR [edx-0x1a]
  4285a6:	fdivr  QWORD PTR [ebx+0x5c3b82e4]
  4285ac:	pop    eax
  4285ad:	ret    0xccd
  4285b0:	ror    DWORD PTR [ecx+esi*4-0x5960de6b],cl
  4285b7:	sbb    eax,0x11b03928
  4285bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285bd:	and    BYTE PTR [ecx+0x6d],bl
  4285c0:	inc    ecx
  4285c1:	push   edx
  4285c2:	rcl    ah,1
  4285c4:	push   eax
  4285c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285c6:	pop    ebx
  4285c7:	push   0x45
  4285c9:	mov    ecx,0x7bf8510d
  4285ce:	jl     0xb75292b7
  4285d4:	mov    eax,0x4e35fc1c
  4285d9:	mov    dl,0xdf
  4285db:	lea    ebp,ds:0x6523c478
  4285e1:	test   BYTE PTR [ecx],bl
  4285e3:	stos   BYTE PTR es:[edi],al
  4285e4:	sahf   
  4285e5:	fild   QWORD PTR [edi-0x18]
  4285e8:	pop    ss
  4285e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285ea:	imul   ecx,DWORD PTR [ebx],0xebc39ab9
  4285f0:	or     al,0x13
  4285f2:	push   0xdb9bb89c
  4285f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285f9:	xor    dl,dh
  4285fb:	or     edi,DWORD PTR [eax]
  4285fd:	add    eax,0x8bd5cb1f
  428602:	fcomp  st(7)
  428604:	push   0x65e7cd99
  428609:	test   eax,0x4654fc99
  42860e:	test   eax,0x9fedf4cb
  428613:	jmp    0x323a:0x8a6a7420
  42861a:	sti    
  42861b:	jg     0x428664
  42861d:	inc    esp
  42861e:	xchg   ah,ah
  428620:	add    cl,BYTE PTR [edx-0x4f]
  428623:	mov    edx,0x4268b3ff
  428628:	push   ebp
  428629:	inc    edi
  42862a:	js     0x428613
  42862c:	stos   DWORD PTR es:[edi],eax
  42862d:	jecxz  0x42868e
  42862f:	adc    BYTE PTR [ebx],bh
  428631:	push   0xceefb271
  428636:	mov    dl,0x3c
  428638:	xor    al,0xa4
  42863a:	push   ss
  42863b:	push   ds
  42863c:	mul    BYTE PTR [ebx+0x58c60e2f]
  428642:	imul   ebp,DWORD PTR [ebx-0x6829550f],0x24
  428649:	add    edi,DWORD PTR [edi+esi*8+0x7]
  42864d:	test   eax,0xbb2a16c8
  428652:	les    esp,FWORD PTR [eax+0x2e273e57]
  428658:	xor    dh,cl
  42865a:	inc    ebx
  42865b:	sub    ecx,DWORD PTR [eax-0x43]
  42865e:	pop    ds
  42865f:	pop    esp
  428660:	cli    
  428661:	lea    ebx,[ecx+0x476c17b8]
  428667:	and    cl,BYTE PTR [edi-0x33]
  42866a:	(bad)  
  42866b:	(bad)  
  42866c:	retf   
  42866d:	jo     0x4285ff
  42866f:	mov    al,ds:0xc4bab5dd
  428674:	pop    eax
  428675:	stc    
  428676:	jno    0x42862c
  428678:	and    al,0xa2
  42867a:	fcom   QWORD PTR [edx+0x5cf39aba]
  428680:	pop    esp
  428681:	sbb    al,0xd3
  428683:	imul   ecx,DWORD PTR [ebx],0xfffffff8
  428686:	test   al,0x83
  428688:	inc    ebp
  428689:	sbb    BYTE PTR [ebx],0xcf
  42868c:	xor    DWORD PTR [edi],0xffffffb6
  42868f:	pusha  
  428690:	(bad)  
  428691:	xor    ah,BYTE PTR [ebx+eax*4+0x3f972236]
  428698:	lods   al,BYTE PTR ds:[esi]
  428699:	fmul   QWORD PTR [ebx]
  42869b:	enter  0xb28d,0x9b
  42869f:	out    0x1b,eax
  4286a1:	adc    eax,0xf7ec8a91
  4286a6:	pop    eax
  4286a7:	(bad)  
  4286a8:	clc    
  4286a9:	repz add eax,0xfe943701
  4286af:	jns    0x4286d6
  4286b1:	das    
  4286b2:	or     esi,DWORD PTR [ecx-0x57470043]
  4286b8:	push   ecx
  4286b9:	and    eax,0x16c482e5
  4286be:	jg     0x42869c
  4286c0:	fisub  DWORD PTR [edx]
  4286c2:	test   BYTE PTR [eax-0x7c],bl
  4286c5:	or     DWORD PTR [esi+0x5d],ebp
  4286c8:	add    BYTE PTR [esi-0x74],al
  4286cb:	jg     0x428733
  4286cd:	sub    al,cl
  4286cf:	adc    eax,0x1f13a8b0
  4286d4:	inc    esi
  4286d5:	mov    bl,0xaa
  4286d7:	rcl    BYTE PTR [ebp-0x22],cl
  4286da:	int3   
  4286db:	dec    edi
  4286dc:	push   0x5d
  4286de:	and    eax,0x75489f17
  4286e3:	lock sbb al,0x31
  4286e6:	mov    dh,0x7d
  4286e8:	mov    esp,DWORD PTR [edi]
  4286ea:	mov    ebx,0xf41414ee
  4286ef:	popf   
  4286f0:	sar    BYTE PTR [ebx-0x1f],1
  4286f3:	push   es
  4286f4:	xor    BYTE PTR cs:0xeb08a3bf,bh
  4286fb:	imul   ebx,DWORD PTR [ecx+ecx*4],0x78
  4286ff:	in     al,0xc6
  428701:	daa    
  428702:	fwait
  428703:	loopne 0x428718
  428705:	das    
  428706:	pop    ebx
  428707:	int    0x8
  428709:	outs   dx,DWORD PTR ds:[esi]
  42870a:	pop    DWORD PTR [esi-0x7b]
  42870d:	inc    ecx
  42870e:	pop    es
  42870f:	call   0x2da3b380
  428714:	sub    al,0x5b
  428716:	jno    0x428730
  428718:	push   ds
  428719:	leave  
  42871a:	push   eax
  42871b:	iret   
  42871c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42871d:	cmc    
  42871e:	push   edx
  42871f:	popf   
  428720:	push   esp
  428721:	sub    ebp,ebx
  428723:	je     0x428719
  428725:	mov    edi,0x821c3120
  42872a:	imul   eax,DWORD PTR [ecx-0x78c7c4e4],0xa0bd8fb8
  428734:	adc    eax,DWORD PTR [eax+0x58]
  428737:	xor    BYTE PTR [esi+ebx*4-0x57],0xde
  42873c:	(bad)  
  42873d:	outs   dx,BYTE PTR ds:[esi]
  42873e:	fs out dx,eax
  428740:	jne    0x42870f
  428742:	mov    bl,0xeb
  428744:	xor    BYTE PTR [edx],0xff
  428747:	mov    ah,ah
  428749:	sbb    eax,0x17ba58ff
  42874e:	sbb    al,0x2a
  428750:	xor    BYTE PTR ds:0x593f3f3d,ch
  428756:	jae    0x42872a
  428758:	retf   0x6154
  42875b:	sub    esi,edx
  42875d:	xor    eax,0x5e93516a
  428762:	js     0x4286fa
  428764:	into   
  428765:	sub    eax,0xfea36413
  42876a:	lods   eax,DWORD PTR ds:[esi]
  42876b:	pushf  
  42876c:	jmp    0x42875e
  42876e:	or     eax,0x727dce5b
  428773:	cmp    al,al
  428775:	dec    eax
  428776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428777:	xchg   esi,eax
  428778:	lea    esi,[ebp-0x7e]
  42877b:	xchg   ecx,eax
  42877c:	pop    eax
  42877d:	push   0x228c6de5
  428782:	mov    ds:0x8c29c302,al
  428787:	sub    BYTE PTR [edx-0x48],ah
  42878a:	test   al,0xd1
  42878c:	pop    esp
  42878d:	cmp    esp,ebx
  42878f:	mov    al,0x41
  428791:	loopne 0x42873a
  428793:	jmp    0x42875f
  428795:	lea    esi,[ecx+0x15fcd44c]
  42879b:	fucomp st(6)
  42879d:	add    edi,DWORD PTR [ebx+0x267cce41]
  4287a3:	aaa    
  4287a4:	shl    BYTE PTR [esi],cl
  4287a6:	into   
  4287a7:	mov    ds:0x42a09f81,al
  4287ac:	lods   eax,DWORD PTR ds:[esi]
  4287ad:	ret    
  4287ae:	pop    ebx
  4287af:	(bad)  
  4287b0:	xor    al,BYTE PTR [eax]
  4287b2:	push   edi
  4287b3:	les    ebx,FWORD PTR [edx]
  4287b5:	fs push edx
  4287b7:	pusha  
  4287b8:	call   0xe8d28c67
  4287bd:	sub    BYTE PTR [ebx+0x61],dl
  4287c0:	cmp    eax,0xca6dfea0
  4287c5:	or     al,0x4f
  4287c7:	imul   ebx,DWORD PTR [edx+0x52],0x94ed0b9
  4287ce:	mov    ah,0x87
  4287d0:	(bad)  
  4287d1:	(bad)  
  4287d2:	dec    edx
  4287d3:	loop   0x428854
  4287d5:	pop    ss
  4287d6:	pop    edi
  4287d7:	fsubr  DWORD PTR [edx]
  4287d9:	dec    edx
  4287da:	mov    edx,0xe9d45e8e
  4287df:	mov    esp,edi
  4287e1:	mov    ch,0xec
  4287e3:	dec    edx
  4287e4:	popf   
  4287e5:	test   DWORD PTR [ebp+0x1f20af97],ebx
  4287eb:	sar    BYTE PTR [ebp+ebp*2+0x662ff97d],cl
  4287f2:	enter  0xc705,0x50
  4287f6:	push   edi
  4287f7:	cmc    
  4287f8:	push   esi
  4287f9:	jne    0x4287d0
  4287fb:	in     al,dx
  4287fc:	xchg   ecx,eax
  4287fd:	out    0xe6,eax
  4287ff:	pushf  
  428800:	inc    ecx
  428801:	ins    BYTE PTR es:[edi],dx
  428802:	mov    cl,BYTE PTR [ebx]
  428804:	adc    BYTE PTR [ebp+0x1cc6084d],ch
  42880a:	loope  0x42879a
  42880c:	adc    eax,0xb976a34
  428811:	ret    0xae14
  428814:	pop    fs
  428816:	pop    eax
  428817:	cs push ss
  428819:	cs mov dh,0xd1
  42881c:	and    al,0xee
  42881e:	add    BYTE PTR fs:[ecx+0x2ee46d79],dh
  428825:	and    esp,DWORD PTR [edi]
  428827:	test   al,0x24
  428829:	mov    eax,ds:0x1898af4
  42882e:	mov    DWORD PTR [eax+0x5a8b4836],eax
  428834:	inc    ecx
  428835:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  428837:	test   DWORD PTR gs:[esp+ebp*2],ebp
  42883b:	push   edx
  42883c:	mov    edi,cs
  42883e:	push   ebp
  42883f:	mov    esp,0x903ff96e
  428844:	sbb    BYTE PTR [esi+0x7505c3bd],0xc6
  42884b:	nop
  42884c:	cmp    BYTE PTR [ecx+ebx*8+0x58],bl
  428850:	inc    eax
  428851:	sahf   
  428852:	push   ss
  428853:	retf   0x5c61
  428856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428857:	sbb    DWORD PTR [ebx+0x66],ebx
  42885a:	or     eax,0x80d8ba3c
  42885f:	sbb    BYTE PTR [ebx+0x57],0xa9
  428863:	dec    ecx
  428864:	mov    cl,0x26
  428866:	test   DWORD PTR [ecx+ebx*4+0x381e084d],esp
  42886d:	ret    
  42886e:	push   eax
  42886f:	or     BYTE PTR [edx+ecx*2+0x26],0xa4
  428874:	fcomp  st(0)
  428876:	jb     0x42889c
  428878:	push   ss
  428879:	jo     0x428867
  42887b:	dec    ebx
  42887c:	xchg   ecx,eax
  42887d:	xor    ebp,DWORD PTR [ebp+0x28]
  428880:	inc    esi
  428881:	pop    edi
  428882:	xchg   esp,eax
  428883:	shl    BYTE PTR [edx+ecx*4],0xc0
  428887:	inc    edx
  428888:	xchg   BYTE PTR [edx+esi*1-0x49400248],al
  42888f:	into   
  428890:	mov    ds:0xdcef97ef,al
  428895:	xor    BYTE PTR [ecx-0x6c8a309a],bh
  42889b:	in     eax,0x9
  42889d:	test   BYTE PTR [esi+0x591bd471],al
  4288a3:	cmp    bl,cl
  4288a5:	clc    
  4288a6:	test   al,0x8d
  4288a8:	push   cs
  4288a9:	rcl    edx,cl
  4288ab:	mov    ebp,0xccb9b9d8
  4288b0:	jge    0x4288f5
  4288b2:	cli    
  4288b3:	ret    
  4288b4:	pushf  
  4288b5:	sub    ebx,esi
  4288b7:	out    0xf0,eax
  4288b9:	jecxz  0x4288fb
  4288bb:	dec    esi
  4288bc:	aam    0x86
  4288be:	add    eax,0x72989fdf
  4288c3:	icebp  
  4288c4:	mov    WORD PTR [edi-0x9],?
  4288c7:	rol    bl,0x81
  4288ca:	mov    esp,0xa38f5e9f
  4288cf:	(bad)  [edi+0x56e0c441]
  4288d5:	ret    
  4288d6:	xor    BYTE PTR [edx-0x1fd09d63],0x4
  4288dd:	mov    dh,0xd9
  4288df:	xor    bh,dl
  4288e1:	adc    dh,BYTE PTR [ecx-0x50]
  4288e4:	mov    esp,0xb349bf28
  4288e9:	cmp    DWORD PTR [eax-0x2f6010f3],ebx
  4288ef:	retf   0x1f76
  4288f2:	lods   eax,DWORD PTR ds:[esi]
  4288f3:	mov    dl,0xd7
  4288f5:	jno    0x428967
  4288f7:	hlt    
  4288f8:	imul   esp,ebx,0xfffffffe
  4288fb:	push   es
  4288fc:	cmp    edx,edx
  4288fe:	inc    edi
  4288ff:	pop    esi
  428900:	sbb    BYTE PTR ds:0x5617a24f,al
  428906:	clc    
  428907:	fisub  DWORD PTR [esi]
  428909:	cmp    al,0xbb
  42890b:	cmp    al,0x83
  42890d:	push   edx
  42890e:	xchg   DWORD PTR [ebp-0x53],esp
  428911:	mov    ebx,0x2a218e60
  428916:	fstp   QWORD PTR [ecx+esi*2-0x3bf737ab]
  42891d:	sbb    al,dl
  42891f:	sub    BYTE PTR [esi+0x40],dh
  428922:	hlt    
  428923:	pop    edi
  428924:	sub    al,0x93
  428926:	outs   dx,BYTE PTR ds:[esi]
  428927:	mov    ah,0x79
  428929:	cmp    DWORD PTR [ebp-0xc],0xa37050d8
  428930:	cli    
  428931:	test   DWORD PTR [edx+0x74b6d3b1],0xd5c98a59
  42893b:	jecxz  0x42895d
  42893d:	inc    ebp
  42893e:	mov    al,0x1c
  428940:	mov    edi,0xf514147f
  428945:	outs   dx,BYTE PTR ds:[esi]
  428946:	popf   
  428947:	test   DWORD PTR [eax-0x3b],eax
  42894a:	out    0x16,eax
  42894c:	cdq    
  42894d:	ret    0x1213
  428950:	repz fs mov dh,0xe
  428954:	mov    esi,0x8c0bd2db
  428959:	stos   DWORD PTR es:[edi],eax
  42895a:	mov    BYTE PTR [edi],bh
  42895c:	push   esi
  42895d:	clc    
  42895e:	fidiv  WORD PTR [ecx+0x5f]
  428961:	push   0xffffff9d
  428963:	lods   al,BYTE PTR ds:[esi]
  428964:	aaa    
  428965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428966:	adc    ebp,edx
  428968:	pop    ebp
  42896a:	shl    DWORD PTR [ebp+0x7ed15154],cl
  428970:	add    al,0xc9
  428972:	xchg   esp,eax
  428973:	(bad)  
  428974:	retf   0x9678
  428977:	sti    
  428978:	or     bl,dh
  42897a:	mov    ds:0x9cb28b05,eax
  42897f:	call   0xcefbbb45
  428984:	push   cs
  428985:	int3   
  428986:	(bad)  
  428987:	rcr    BYTE PTR [ecx-0x1a],0x80
  42898b:	inc    edi
  42898c:	mov    ebp,0x68e04ea0
  428991:	inc    edi
  428992:	add    BYTE PTR [esi+0x155818fb],ch
  428998:	fimul  DWORD PTR [esi+edx*1-0x73ef853c]
  42899f:	pop    ebp
  4289a0:	or     al,0xbb
  4289a2:	mov    al,0x73
  4289a4:	cmp    DWORD PTR [eax-0x20],esp
  4289a7:	rol    BYTE PTR [ebx+0x7b],cl
  4289aa:	in     al,0xd4
  4289ac:	inc    ebp
  4289ad:	cmp    bl,ah
  4289af:	xchg   DWORD PTR [edx+edx*2+0x37f809d0],ecx
  4289b6:	jb     0x42899b
  4289b8:	xchg   esi,eax
  4289b9:	rcl    DWORD PTR [ebp-0x585f1699],cl
  4289bf:	and    esi,DWORD PTR [edi-0x5b]
  4289c2:	mov    al,0xa5
  4289c4:	pop    ss
  4289c5:	icebp  
  4289c6:	(bad)  
  4289c7:	call   DWORD PTR [ebx+eax*8+0x55]
  4289cb:	xor    al,bh
  4289cd:	pop    esi
  4289ce:	out    0xe8,eax
  4289d0:	loop   0x428a27
  4289d2:	dec    edi
  4289d3:	iret   
  4289d4:	dec    eax
  4289d5:	sbb    esi,DWORD PTR [ebx-0x5c0df3f9]
  4289db:	sub    eax,0xe869f9f
  4289e0:	xor    BYTE PTR [eax],0xff
  4289e3:	rcl    DWORD PTR [ecx],0xca
  4289e6:	fwait
  4289e7:	out    0xb4,eax
  4289e9:	imul   ebx,eax,0xe
  4289ec:	jmp    0xc5f71025
  4289f1:	push   edx
  4289f2:	pop    ecx
  4289f3:	cld    
  4289f4:	cmp    cl,al
  4289f6:	or     al,0xc5
  4289f8:	lods   al,BYTE PTR ds:[esi]
  4289f9:	sbb    al,0xb1
  4289fb:	lahf   
  4289fc:	and    BYTE PTR [edi+0x74],cl
  4289ff:	rcr    bl,1
  428a01:	pop    ss
  428a02:	and    ebp,ecx
  428a04:	jbe    0x428a4a
  428a06:	push   ss
  428a07:	sub    ebx,ebx
  428a09:	cmp    al,0x5a
  428a0b:	repnz or bl,dh
  428a0e:	in     al,dx
  428a0f:	in     eax,0x27
  428a11:	mov    ds:0xe84d7a8,eax
  428a16:	jns    0x428a28
  428a18:	mov    eax,0xc6083c73
  428a1d:	xor    edi,edx
  428a1f:	adc    dh,BYTE PTR [ecx+esi*2]
  428a22:	push   0xffffffa9
  428a24:	lods   eax,DWORD PTR ds:[esi]
  428a25:	shr    DWORD PTR [edx+eiz*8+0x6af75882],1
  428a2c:	jo     0x428a5b
  428a2e:	lds    edx,FWORD PTR [edx+0x3b]
  428a31:	cmp    eax,0x831837c
  428a36:	sub    DWORD PTR [ecx+0x24a0e4fb],0x2d
  428a3d:	sbb    ebp,ecx
  428a3f:	dec    ebp
  428a40:	rcr    DWORD PTR [ebp+0x5b487cf6],cl
  428a46:	retf   
  428a47:	inc    edx
  428a48:	sub    eax,0xd4b45fb1
  428a4d:	ins    BYTE PTR es:[edi],dx
  428a4e:	adc    BYTE PTR [edi+0x760ee998],bh
  428a54:	ins    DWORD PTR es:[edi],dx
  428a55:	imul   edx,DWORD PTR [eax+0x50d4ecc],0xffffffcc
  428a5c:	imul   ecx,ebp,0x9
  428a5f:	cmp    al,ah
  428a61:	or     ch,bh
  428a63:	imul   dh
  428a65:	xchg   esp,eax
  428a66:	hlt    
  428a67:	repz pop esp
  428a69:	pop    ds
  428a6a:	xor    BYTE PTR [edx-0x52],bh
  428a6d:	fcmove st,st(0)
  428a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a70:	pop    DWORD PTR [eax+0x542b02f1]
  428a76:	lock pop edx
  428a78:	push   esp
  428a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a7b:	aaa    
  428a7c:	add    al,0x1e
  428a7e:	ins    BYTE PTR es:[edi],dx
  428a7f:	pop    esi
  428a80:	iret   
  428a81:	retf   0xc864
  428a84:	fyl2xp1 
  428a86:	(bad)  
  428a87:	repnz pop esi
  428a89:	mov    esp,0x467047b1
  428a8e:	jecxz  0x428a12
  428a90:	scas   eax,DWORD PTR es:[edi]
  428a91:	pop    eax
  428a92:	fwait
  428a93:	push   esi
  428a94:	loop   0x428a2a
  428a96:	inc    ecx
  428a97:	jmp    0x428a2b
  428a99:	sub    DWORD PTR [ebp-0x20],edi
  428a9c:	sub    bl,BYTE PTR [edi-0x48]
  428a9f:	push   ebp
  428aa0:	ins    DWORD PTR es:[edi],dx
  428aa1:	sbb    dh,BYTE PTR [ecx]
  428aa3:	sbb    eax,0xdca8404d
  428aa8:	or     al,0x14
  428aaa:	pop    eax
  428aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428aac:	dec    eax
  428aad:	add    esi,eax
  428aaf:	adc    eax,DWORD PTR [eax]
  428ab1:	inc    ebp
  428ab2:	xchg   dl,cl
  428ab4:	and    BYTE PTR [esi+0x70],bh
  428ab7:	mov    ds:0x6397a845,eax
  428abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428abd:	jno    0x428a48
  428abf:	lea    edx,[esi+0x4a4acc4e]
  428ac5:	addr16 jmp 0x428a7a
  428ac8:	sub    ah,0x1c
  428acb:	lock jl 0x428b38
  428ace:	imul   esp,esp,0x74f595bc
  428ad4:	adc    al,0x90
  428ad6:	(bad)  
  428ad7:	sub    WORD PTR [esi+esi*8],dx
  428adb:	(bad)  
  428adc:	idiv   DWORD PTR [ebp+ecx*1+0x61098de9]
  428ae3:	mov    esi,0x52e08196
  428ae8:	mov    bh,0x55
  428aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428aeb:	(bad)  
  428aec:	push   ds
  428aed:	dec    ebx
  428aee:	in     al,0x4
  428af0:	inc    eax
  428af1:	in     eax,0xbc
  428af3:	inc    ecx
  428af4:	and    bh,dl
  428af6:	and    ch,BYTE PTR fs:[eax]
  428af9:	mov    esp,0x146a488f
  428afe:	pop    edx
  428aff:	cmp    BYTE PTR [edi],dl
  428b01:	dec    esp
  428b02:	lods   al,BYTE PTR ds:[esi]
  428b03:	ret    
  428b04:	xor    al,0x4
  428b06:	fxam   
  428b08:	es push es
  428b0a:	hlt    
  428b0b:	jno    0x428b33
  428b0d:	or     ecx,eax
  428b0f:	mov    ds:0x18c0eceb,eax
  428b14:	pushf  
  428b15:	pop    ss
  428b16:	pop    esi
  428b17:	pop    esp
  428b18:	push   eax
  428b19:	scas   al,BYTE PTR es:[edi]
  428b1a:	add    al,ch
  428b1c:	cmp    al,0x54
  428b1e:	test   BYTE PTR [ebx+0x53],0x95
  428b22:	or     BYTE PTR [esi+0x4c],al
  428b25:	pusha  
  428b26:	das    
  428b27:	push   eax
  428b28:	sbb    esp,ebx
  428b2a:	mov    ebx,0x8114bd9
  428b2f:	or     DWORD PTR [esi+0x348faaf4],ebx
  428b35:	retf   0x2c52
  428b38:	loope  0x428b4d
  428b3a:	xchg   ebx,eax
  428b3b:	push   ss
  428b3c:	dec    edi
  428b3d:	leave  
  428b3e:	jp     0x428bb2
  428b40:	push   eax
  428b41:	sahf   
  428b42:	fwait
  428b43:	or     esi,DWORD PTR [esi+edx*8]
  428b46:	mov    ecx,0x8774662a
  428b4b:	xor    bh,BYTE PTR [ebx+0x65942d0b]
  428b51:	rcr    DWORD PTR [eax-0x987c561],0xd
  428b58:	xchg   BYTE PTR [edx-0x10],dl
  428b5b:	inc    eax
  428b5c:	xor    cl,0x8a
  428b5f:	xchg   edx,eax
  428b60:	mov    ch,0x35
  428b62:	add    BYTE PTR [eax],al
  428b64:	add    BYTE PTR [eax],al
  428b66:	add    BYTE PTR [eax],al
  428b68:	sbb    bl,BYTE PTR [esi]
  428b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b6b:	pop    edx
  428b6c:	push   ecx
  428b6d:	or     DWORD PTR [eax],eax
  428b6f:	add    BYTE PTR [eax],al
  428b71:	add    BYTE PTR [eax],al
  428b73:	add    BYTE PTR [ecx+0x9],dl
  428b76:	add    BYTE PTR [eax],al
  428b78:	xor    DWORD PTR [eax],eax
  428b7a:	es jl  0x428b7d
  428b7d:	add    dh,BYTE PTR [esi]
  428b7f:	or     BYTE PTR [eax],al
  428b81:	add    ah,al
  428b83:	inc    ebp
  428b84:	add    BYTE PTR [esi+0x1b22400a],ch
  428b8a:	pusha  
  428b8b:	in     al,0x9
  428b8d:	and    al,0xf8
  428b8f:	dec    ebx
  428b90:	adc    cl,ah
  428b92:	inc    edx
  428b93:	aad    0x7c
  428b95:	es dec eax
  428b97:	pop    esi
  428b98:	push   ss
  428b99:	fdivr  QWORD PTR [ebx+0x75e70824]
  428b9f:	ins    BYTE PTR es:[edi],dx
  428ba0:	jb     0x428b72
  428ba2:	fst    DWORD PTR [edi+0x6f]
  428ba5:	xor    esp,edx
  428ba7:	xchg   ebp,eax
  428ba8:	nop
  428ba9:	jb     0x428c1b
  428bab:	(bad)  
  428bad:	fldcw  WORD PTR [ebx+ebx*8+0x1d86380c]
  428bb4:	push   ebp
  428bb5:	adc    eax,0xb0699ea5
  428bba:	pop    esp
  428bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428bbc:	retf   0x41a2
  428bbf:	xor    al,0x48
  428bc1:	call   0xe69e0c6a
  428bc6:	xchg   ebp,eax
  428bc7:	pop    ebp
  428bc8:	into   
  428bc9:	scas   eax,DWORD PTR es:[edi]
  428bca:	mov    edx,0x204fa43d
  428bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428bd0:	fsubrp st(4),st
  428bd2:	clc    
  428bd3:	mov    eax,0x78b14cfe
  428bd8:	sub    ch,BYTE PTR [esi+0x2cae5ecd]
  428bde:	jo     0x428c5e
  428be0:	fld    DWORD PTR ds:[edi]
  428be3:	push   0x94c3faec
  428be8:	icebp  
  428be9:	scas   eax,DWORD PTR es:[edi]
  428bea:	in     al,dx
  428beb:	aam    0x9a
  428bed:	(bad)  
  428bee:	ins    BYTE PTR es:[edi],dx
  428bef:	sub    al,0xb8
  428bf1:	sbb    dl,bh
  428bf3:	lods   eax,DWORD PTR ds:[esi]
  428bf4:	push   es
  428bf5:	pop    eax
  428bf6:	nop
  428bf7:	inc    eax
  428bf8:	fstp   st(4)
  428bfa:	inc    edi
  428bfb:	or     ebx,esp
  428bfd:	imul   edi,DWORD PTR [esi-0x40],0x17844eec
  428c04:	mov    esp,DWORD PTR [edi]
  428c06:	out    dx,eax
  428c07:	aam    0x1
  428c09:	shr    DWORD PTR gs:[eax+0x347fa00a],0xf7
  428c11:	ds sti 
  428c13:	scas   al,BYTE PTR es:[edi]
  428c14:	int3   
  428c15:	jl     0x428c1a
  428c17:	jno    0x428bdb
  428c19:	int    0xa0
  428c1b:	xlat   BYTE PTR ds:[ebx]
  428c1c:	mov    esp,0xac399ef0
  428c21:	dec    edi
  428c22:	inc    edi
  428c23:	and    eax,0xd8147138
  428c28:	adc    esp,DWORD PTR [ebp+0x47570176]
  428c2e:	lds    edi,FWORD PTR [ebx+esi*1-0x21235ff]
  428c35:	push   ss
  428c36:	mov    edx,0x5277e084
  428c3b:	inc    esi
  428c3c:	(bad)  
  428c3d:	je     0x428c6b
  428c3f:	jb     0x428bc7
  428c41:	add    al,0xe1
  428c43:	mov    ecx,0x493e0c7f
  428c48:	or     al,0x33
  428c4a:	sub    BYTE PTR [eax],dh
  428c4c:	cmp    al,0x3b
  428c4e:	or     eax,0x143eec1b
  428c53:	shl    BYTE PTR [edx+0x5d],1
  428c56:	test   BYTE PTR ds:0xe72c4688,dh
  428c5c:	hlt    
  428c5d:	lods   eax,DWORD PTR ds:[esi]
  428c5e:	stos   DWORD PTR es:[edi],eax
  428c5f:	cdq    
  428c60:	hlt    
  428c61:	fdiv   st(2),st
  428c64:	or     bl,BYTE PTR [eax]
  428c66:	jp     0x428c22
  428c68:	and    al,0xcd
  428c6a:	lds    ebp,FWORD PTR [edx+ebp*2-0x2a3ac3b9]
  428c71:	inc    ecx
  428c72:	out    dx,al
  428c73:	jg     0x428cdd
  428c75:	jbe    0x428c2b
  428c77:	pusha  
  428c78:	les    ecx,FWORD PTR [ecx]
  428c7a:	pop    edi
  428c7b:	xor    al,0x7f
  428c7d:	shr    DWORD PTR [esi+0x65d7082b],0xb6
  428c84:	jmp    0xe2b4ce9b
  428c89:	sub    al,0x35
  428c8b:	push   ecx
  428c8c:	dec    ebp
  428c8d:	out    dx,al
  428c8e:	arpl   WORD PTR [eax+0x71],sp
  428c91:	loop   0x428ce3
  428c93:	das    
  428c94:	stc    
  428c95:	cmp    dl,dh
  428c97:	push   cs
  428c98:	in     al,dx
  428c99:	and    eax,0xead47430
  428c9e:	or     eax,0x46ef316
  428ca3:	fcomp  DWORD PTR [ecx+ebx*8]
  428ca6:	loop   0x428cbe
  428ca8:	js     0x428ccc
  428caa:	repnz mov edi,DWORD PTR [edi]
  428cad:	inc    eax
  428cae:	jb     0x428cd8
  428cb0:	sub    DWORD PTR [edx-0x41],ecx
  428cb3:	(bad)  
  428cb4:	and    dl,BYTE PTR [edi+0x3955d064]
  428cba:	jo     0x428cc2
  428cbc:	push   0x818882f9
  428cc1:	inc    edx
  428cc2:	(bad)  
  428cc3:	jb     0x428c67
  428cc5:	push   es
  428cc6:	jne    0x428c60
  428cc8:	lods   al,BYTE PTR ds:[esi]
  428cc9:	jmp    0x7132:0x21630b7f
  428cd0:	push   esp
  428cd1:	push   esp
  428cd2:	icebp  
  428cd3:	mov    bh,BYTE PTR [esp+ebp*4-0x1875c820]
  428cda:	js     0x428c65
  428cdc:	lock fild WORD PTR [ecx+ecx*1-0x633aaafa]
  428ce4:	add    eax,0xf985b88f
  428ce9:	and    al,0x11
  428ceb:	add    al,0x74
  428cee:	xchg   ebp,eax
  428cef:	dec    eax
  428cf0:	mov    edx,0x6e47af16
  428cf5:	in     al,0x68
  428cf7:	stos   DWORD PTR es:[edi],eax
  428cf8:	aaa    
  428cf9:	clc    
  428cfa:	lods   al,BYTE PTR ds:[esi]
  428cfb:	jbe    0x428c94
  428cfd:	cli    
  428cfe:	mov    WORD PTR [eax-0x691ec222],ss
  428d04:	sar    DWORD PTR [ebx-0x32c64fea],0xa5
  428d0b:	push   0x1eaa88ed
  428d10:	aam    0x2e
  428d12:	push   edi
  428d13:	add    ch,bl
  428d15:	out    0x5d,al
  428d17:	aas    
  428d18:	jne    0x428d12
  428d1a:	or     bh,bh
  428d1c:	not    ah
  428d1e:	mov    dh,0xeb
  428d20:	adc    DWORD PTR [eax+eiz*4-0x332d3ec9],0x8a6b344d
  428d2b:	les    ebx,FWORD PTR [esi]
  428d2d:	sub    al,0x5f
  428d2f:	outs   dx,BYTE PTR ds:[esi]
  428d30:	adc    eax,0xe8223137
  428d35:	dec    ecx
  428d36:	ins    DWORD PTR es:[edi],dx
  428d37:	jne    0x428d94
  428d39:	jge    0x428ce9
  428d3b:	cmp    eax,0x656b0cca
  428d40:	cdq    
  428d41:	push   es
  428d42:	daa    
  428d43:	stos   DWORD PTR es:[edi],eax
  428d44:	sti    
  428d45:	or     esi,DWORD PTR [eax]
  428d47:	pop    esp
  428d48:	int    0xa8
  428d4a:	test   al,0xae
  428d4c:	int3   
  428d4d:	out    0x98,al
  428d4f:	fadd   st,st(5)
  428d51:	das    
  428d52:	xchg   edx,ebx
  428d54:	add    ebx,esp
  428d56:	push   ss
  428d57:	stos   DWORD PTR es:[edi],eax
  428d58:	cld    
  428d59:	mov    edx,DWORD PTR gs:[ecx]
  428d5c:	lods   eax,DWORD PTR ds:[esi]
  428d5d:	fwait
  428d5e:	stc    
  428d5f:	arpl   ax,di
  428d61:	and    BYTE PTR [ebx],ah
  428d63:	mov    edx,0xcfe65e17
  428d68:	cmp    BYTE PTR [edx-0x1154bdbc],0x28
  428d6f:	adc    ebx,ebx
  428d71:	aaa    
  428d72:	data16 in al,dx
  428d74:	daa    
  428d75:	repnz pushf 
  428d77:	les    esi,FWORD PTR ds:0x101bbcff
  428d7d:	cmc    
  428d7e:	je     0xcdc3bfe1
  428d84:	push   ebp
  428d85:	xor    al,0x5d
  428d87:	out    0x6c,eax
  428d89:	add    DWORD PTR [eax],edi
  428d8b:	xchg   esi,eax
  428d8c:	push   0x87595898
  428d91:	cwde   
  428d92:	(bad)  
  428d93:	shl    BYTE PTR [esi+0x167ca3bd],0x4b
  428d9a:	leave  
  428d9b:	adc    ebx,DWORD PTR [ebx-0x5d]
  428d9e:	cmp    edi,0x24
  428da1:	dec    ebp
  428da2:	cli    
  428da3:	mov    fs,WORD PTR [ecx]
  428da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428da6:	add    al,0xf8
  428da8:	ds dec eax
  428daa:	mov    ebp,edx
  428dac:	xchg   bh,bh
  428dae:	rol    BYTE PTR [ecx-0x25],cl
  428db1:	pop    esp
  428db2:	ins    BYTE PTR es:[edi],dx
  428db3:	cwd    
  428db5:	in     eax,0x49
  428db7:	jle    0x428d59
  428db9:	push   ecx
  428dba:	test   DWORD PTR [eax+0x65a15fe3],edx
  428dc0:	mov    ah,0x2
  428dc2:	idiv   bh
  428dc4:	mov    ah,0xb
  428dc6:	or     al,0x2
  428dc8:	lods   al,BYTE PTR ds:[esi]
  428dc9:	inc    ebx
  428dca:	pop    ebp
  428dcb:	and    eax,0x3e675c56
  428dd0:	add    ch,BYTE PTR [ebp+0x15]
  428dd3:	push   esp
  428dd4:	xchg   ebx,eax
  428dd5:	mov    al,ds:0x8d966180
  428dda:	mov    BYTE PTR [edi-0x39],al
  428ddd:	sbb    ebp,ecx
  428ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428de0:	leave  
  428de1:	sahf   
  428de2:	or     BYTE PTR cs:[ebx+edx*4],dl
  428de6:	lahf   
  428de7:	xor    eax,0x1505d4c8
  428dec:	lods   eax,DWORD PTR ds:[esi]
  428ded:	int3   
  428dee:	imul   esi,DWORD PTR [eax+0x1b702a],0x49281d30
  428df8:	ja     0x428e72
  428dfa:	xchg   esp,eax
  428dfb:	xor    BYTE PTR [edi+0x596d853a],0x54
  428e02:	in     eax,0xb8
  428e04:	(bad)  
  428e05:	clc    
  428e06:	add    ebx,DWORD PTR [eax-0x12338a8c]
  428e0c:	fmul   QWORD PTR [edx]
  428e0e:	push   cs
  428e0f:	(bad)  
  428e10:	sub    DWORD PTR [ebx+0x2c],edx
  428e13:	xchg   ecx,eax
  428e14:	rol    BYTE PTR [eax],1
  428e16:	pushf  
  428e17:	mov    cl,0xe0
  428e19:	jl     0x428e4f
  428e1b:	mov    eax,cs:0x5f19a8b6
  428e21:	inc    edi
  428e22:	(bad)  
  428e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e25:	jp     0x428dde
  428e27:	int3   
  428e28:	pop    ss
  428e29:	pushf  
  428e2a:	push   esi
  428e2b:	aas    
  428e2c:	(bad)  
  428e2d:	or     al,0x7a
  428e2f:	pop    eax
  428e30:	lock mov ds:0x7e3ffb72,eax
  428e36:	test   esi,esp
  428e38:	mov    edi,0x4123cd14
  428e3d:	mov    esi,0x55df3962
  428e42:	mov    esp,0x69b012
  428e47:	nop
  428e48:	xor    DWORD PTR [ebx+0x2cd4e081],0xffffff8e
  428e4f:	mov    cl,0xb8
  428e51:	or     eax,0xe004ca41
  428e56:	ds call 0xc686d9ba
  428e5c:	sub    BYTE PTR [eax],ch
  428e5e:	cmp    BYTE PTR [eax+ebp*2-0x7],cl
  428e62:	or     dh,BYTE PTR [edi+0x54cf990]
  428e68:	dec    edi
  428e69:	adc    cl,al
  428e6b:	sar    ebx,1
  428e6d:	adc    eax,0x8582f4b2
  428e72:	test   dh,al
  428e74:	loopne 0x428ec8
  428e76:	inc    esi
  428e77:	jle    0x428e91
  428e79:	or     esi,esp
  428e7b:	cmp    esi,ecx
  428e7d:	daa    
  428e7e:	xchg   edx,eax
  428e7f:	bound  edx,QWORD PTR [ebx+0x5322aa3c]
  428e85:	inc    esp
  428e86:	daa    
  428e87:	xchg   ebp,eax
  428e88:	push   ebp
  428e89:	xchg   ecx,eax
  428e8a:	pusha  
  428e8b:	es mov edx,0xc8a08dca
  428e91:	cmp    eax,0x25e4841d
  428e96:	cmp    DWORD PTR [esi-0x72d71fa8],edi
  428e9c:	sub    al,0x18
  428e9e:	cwde   
  428e9f:	test   al,0xc
  428ea1:	test   dh,ah
  428ea3:	mov    dl,bl
  428ea5:	push   eax
  428ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ea7:	mov    dh,0x80
  428ea9:	rcl    DWORD PTR [esi-0x4],1
  428eac:	int3   
  428ead:	repz je 0x428f2b
  428eb0:	int3   
  428eb1:	or     eax,0xa6c6ac63
  428eb6:	call   FWORD PTR [eax-0x7b7443bd]
  428ebc:	xchg   ebx,eax
  428ebd:	imul   ebp,DWORD PTR [ebx-0x4a],0x40
  428ec1:	pop    esp
  428ec2:	test   eax,0x72be4d3c
  428ec8:	imul   esp,DWORD PTR [ebp+ebx*1-0x79],0x1669690a
  428ed0:	rcr    BYTE PTR ds:0x65089788,0xfb
  428ed7:	in     al,0x34
  428ed9:	jecxz  0x428eaf
  428edb:	lods   al,BYTE PTR ds:[esi]
  428edc:	int    0xaa
  428ede:	(bad)  
  428edf:	cmc    
  428ee0:	nop
  428ee1:	fwait
  428ee2:	pusha  
  428ee3:	or     dl,al
  428ee5:	test   eax,0xc0ec3b64
  428eea:	jecxz  0x428e9d
  428eec:	dec    eax
  428eed:	js     0x428f0a
  428eef:	xor    BYTE PTR [edi+ebp*4-0x1e527f5d],bh
  428ef6:	pushf  
  428ef7:	xor    eax,0x7b7e4ad4
  428efc:	or     al,al
  428efe:	inc    ecx
  428eff:	shl    BYTE PTR [eax+0x34c91977],0x12
  428f06:	clc    
  428f07:	fsubr  st(4),st
  428f09:	mov    al,BYTE PTR [esi+0x66]
  428f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f0d:	mov    esi,0x8c42ecad
  428f12:	lea    esp,[edx+esi*1+0x5f]
  428f16:	ins    DWORD PTR es:[edi],dx
  428f17:	and    eax,0xbb0d24d
  428f1c:	jbe    0x428f8d
  428f1e:	in     eax,0x5d
  428f20:	xor    bl,bl
  428f22:	enter  0xa9d4,0x67
  428f26:	sbb    DWORD PTR [ebx+0x28b088f5],edx
  428f2c:	clc    
  428f2d:	stc    
  428f2e:	frstor [ecx]
  428f30:	jmp    ebp
  428f32:	or     eax,0x901c4829
  428f37:	jmp    0x269e:0x6316a2c2
  428f3e:	(bad)  
  428f3f:	cli    
  428f40:	mov    ds:0x8d902e9b,al
  428f45:	stos   DWORD PTR es:[edi],eax
  428f46:	push   ds
  428f47:	call   0x2c085089
  428f4c:	sahf   
  428f4d:	int    0x92
  428f4f:	ror    BYTE PTR [esi+ecx*8],1
  428f52:	je     0x428fa2
  428f54:	jmp    0x428f76
  428f56:	into   
  428f57:	adc    DWORD PTR [edx],0x30
  428f5a:	and    DWORD PTR [ecx],esp
  428f5c:	test   al,0x3f
  428f5e:	mov    edi,0xd83d5359
  428f63:	jae    0x428f27
  428f65:	outs   dx,DWORD PTR ds:[esi]
  428f66:	cdq    
  428f67:	scas   al,BYTE PTR es:[edi]
  428f68:	pop    ebp
  428f69:	ins    DWORD PTR es:[edi],dx
  428f6a:	sbb    bh,ah
  428f6c:	repz push eax
  428f6e:	inc    esp
  428f6f:	inc    esp
  428f70:	clc    
  428f71:	call   0x962a939
  428f76:	inc    esi
  428f77:	inc    ebx
  428f78:	push   edi
  428f79:	mov    edx,0x44e724c4
  428f7e:	mov    al,0xdb
  428f80:	mov    eax,ss:0x15f8526a
  428f86:	push   0xd664aba3
  428f8b:	je     0x428f77
  428f8d:	mov    eax,0xc7f2101e
  428f92:	es jnp 0x428f61
  428f95:	cld    
  428f96:	sbb    ebp,DWORD PTR [ebx]
  428f98:	xor    al,0xbf
  428f9a:	sbb    esi,esp
  428f9c:	and    al,0xfa
  428f9e:	xor    BYTE PTR [ebp+edi*8-0x527de2a8],cl
  428fa5:	dec    edi
  428fa6:	or     eax,ebx
  428fa8:	jecxz  0x428f6b
  428faa:	jl     0x428f64
  428fac:	lds    esp,FWORD PTR [ecx+0x66]
  428faf:	push   es
  428fb0:	jae    0x428f4c
  428fb2:	inc    edx
  428fb3:	mov    al,ds:0x96aeeb98
  428fb8:	repnz sbb ch,BYTE PTR [ebx+ebx*1]
  428fbc:	dec    eax
  428fbd:	push   esp
  428fbe:	repnz imul DWORD PTR [ebx+0x5c]
  428fc2:	and    BYTE PTR [esp+edx*8+0x73ede46c],cl
  428fc9:	leave  
  428fca:	test   DWORD PTR [edi],ebp
  428fcc:	push   esp
  428fcd:	bound  edx,QWORD PTR [eax-0x31dc58e0]
  428fd3:	sti    
  428fd4:	cmp    eax,0x1db4a2f8
  428fd9:	inc    edx
  428fda:	xchg   ebx,eax
  428fdb:	sbb    BYTE PTR [eax+eiz*2-0x51],dh
  428fdf:	sbb    ebx,DWORD PTR [edx+eiz*4-0x76]
  428fe3:	jb     0x428f90
  428fe5:	jp     0x429061
  428fe7:	ss mov cl,0x80
  428fea:	mov    esi,0xcb7b1822
  428fef:	mov    ch,0x25
  428ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ff3:	cmp    DWORD PTR [eax],ebp
  428ff5:	test   DWORD PTR [edx],edi
  428ff7:	retw   
  428ff9:	cwde   
  428ffa:	arpl   ax,cx
  428ffc:	mov    DWORD PTR [edi+0x16],esp
  428fff:	loopne 0x428ff1
  429001:	and    DWORD PTR [esi+0x529decde],0x42c44988
  42900b:	push   0xffffffd2
  42900d:	xchg   esp,eax
  42900e:	icebp  
  42900f:	ins    DWORD PTR es:[edi],dx
  429010:	pop    ds
  429011:	mov    ds:0xb590b13a,al
  429016:	mov    eax,0x274abff
  42901b:	ret    
  42901c:	mov    edi,0x80dcdac1
  429021:	xchg   DWORD PTR [esi+0x37],ebx
  429024:	stc    
  429025:	pop    esp
  429026:	mov    esi,0x857100a3
  42902b:	jo     0x429031
  42902d:	pop    es
  42902e:	dec    ebx
  42902f:	jge    0x429047
  429031:	test   al,0x1
  429033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429034:	mov    BYTE PTR [eax],ah
  429036:	sbb    al,0x48
  429038:	in     al,0x95
  42903a:	int3   
  42903b:	mov    al,ds:0x93fc3e22
  429040:	jp     0x428ffe
  429042:	jno    0x429034
  429044:	mov    al,ds:0xd7216d4b
  429049:	mov    esp,0xa714f0e2
  42904e:	cli    
  42904f:	cdq    
  429050:	pop    edx
  429051:	mov    esi,0x386da7d8
  429056:	push   ds
  429057:	jp     0x429065
  429059:	repnz fcmovnu st,st(5)
  42905c:	inc    ecx
  42905d:	popa   
  42905e:	loopne 0x429058
  429060:	pop    esp
  429061:	xchg   esi,eax
  429062:	leave  
  429063:	call   0x2c3:0x4b5f4e3
  42906a:	outs   dx,BYTE PTR ds:[esi]
  42906b:	xchg   ebx,esp
  42906d:	mov    ebx,0x99280e5b
  429072:	or     BYTE PTR [eax],0x60
  429075:	(bad)  
  429077:	outs   dx,BYTE PTR ds:[esi]
  429078:	mov    dl,0x4c
  42907a:	jae    0x429083
  42907c:	(bad)  
  42907d:	frstor [eax]
  42907f:	lock cmp esp,DWORD PTR [ebp-0x40265090]
  429086:	aaa    
  429087:	popf   
  429088:	sub    esp,ebp
  42908a:	jge    0x4290a4
  42908c:	sub    BYTE PTR ds:0x4ce51a67,dh
  429092:	(bad)  
  429094:	cmp    al,0x58
  429096:	sub    BYTE PTR [ecx],al
  429098:	mov    ds:0x39cf86a7,eax
  42909d:	pusha  
  42909e:	dec    edx
  42909f:	retf   0x7bcd
  4290a2:	ficom  WORD PTR ds:0xc284f0c8
  4290a8:	mov    al,0x3f
  4290aa:	(bad)  
  4290ab:	adc    eax,0x2cd8447c
  4290b0:	cwde   
  4290b1:	sub    eax,0x99b4fcbc
  4290b6:	mov    al,ds:0xaa9e50cc
  4290bb:	cwde   
  4290bc:	sub    ecx,DWORD PTR [ebx]
  4290be:	nop
  4290bf:	push   ebp
  4290c0:	test   BYTE PTR [edx+eiz*4-0x58],dh
  4290c4:	jmp    DWORD PTR [esi+0x514f20ad]
  4290ca:	cwde   
  4290cb:	adc    BYTE PTR [ebx-0xe1ba65c],al
  4290d1:	dec    eax
  4290d2:	mov    cl,0xbc
  4290d4:	cdq    
  4290d5:	mov    bl,cl
  4290d7:	sub    BYTE PTR [esi],ah
  4290d9:	dec    eax
  4290da:	repz xor esp,DWORD PTR [ebp+edx*8-0x7]
  4290df:	adc    eax,0xef98781b
  4290e4:	sahf   
  4290e5:	mov    BYTE PTR [ebx],dl
  4290e7:	sub    ecx,DWORD PTR [esp+ecx*8+0x30]
  4290eb:	mov    al,0x63
  4290ed:	xor    DWORD PTR [edx+edx*8+0x5094e14a],ebp
  4290f4:	ds dec esp
  4290f6:	dec    ebx
  4290f7:	rcr    BYTE PTR [ebp+0x56],1
  4290fa:	and    al,0x70
  4290fc:	dec    ebx
  4290fd:	sub    eax,0xe378d041
  429102:	stos   BYTE PTR es:[edi],al
  429103:	aas    
  429104:	xor    eax,0x5e0cfe33
  429109:	pushf  
  42910a:	jg     0x4290cc
  42910c:	(bad)  
  42910e:	retf   0x1d49
  429111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429112:	shl    BYTE PTR [eax-0x75],0xd8
  429116:	arpl   bx,sp
  429118:	xor    BYTE PTR [esi],bh
  42911a:	int3   
  42911b:	in     al,0xe9
  42911d:	jl     0x42917c
  42911f:	aaa    
  429120:	shr    DWORD PTR [edx],cl
  429122:	hlt    
  429123:	(bad)  
  429124:	or     BYTE PTR [eax+esi*8],bl
  429127:	sub    eax,0xa5c626ed
  42912c:	mov    al,0xb0
  42912e:	hlt    
  42912f:	jle    0x4290cd
  429131:	jge    0x42918a
  429133:	repz sbb dl,BYTE PTR [esp+edx*8]
  429137:	cdq    
  429138:	mov    bl,0x6d
  42913a:	ret    0xd9d0
  42913d:	sub    esi,esp
  42913f:	clc    
  429140:	pop    edi
  429141:	not    DWORD PTR [edi]
  429143:	or     bh,BYTE PTR [edi+0xa]
  429146:	ja     0x429168
  429148:	sbb    al,0x12
  42914a:	dec    edi
  42914b:	and    BYTE PTR [ebp-0xd],dl
  42914e:	outs   dx,DWORD PTR ds:[esi]
  42914f:	push   eax
  429150:	imul   eax,DWORD PTR [eax+0x35],0xfffffff0
  429154:	aam    0x35
  429156:	and    al,0x90
  429158:	sbb    BYTE PTR [eax-0x18],dh
  42915b:	push   ecx
  42915c:	add    DWORD PTR [ebp-0x31],esp
  42915f:	or     al,BYTE PTR [edi-0x26]
  429162:	and    eax,0x5e54550c
  429167:	xchg   ecx,eax
  429168:	xor    dh,ch
  42916a:	jmp    0x4291df
  42916c:	xor    BYTE PTR [ebx+edi*1+0x74c53229],bh
  429173:	or     al,0x14
  429175:	push   esp
  429176:	aas    
  429177:	dec    ebx
  429178:	push   0x6c686579
  42917d:	mov    ecx,0x7f2d54fc
  429182:	fnsave [edi+ebp*2]
  429185:	mov    edx,0x9270201d
  42918a:	push   ebp
  42918b:	popa   
  42918c:	stc    
  42918d:	shl    DWORD PTR [edi+edi*2],1
  429190:	inc    esp
  429191:	mov    bl,ch
  429193:	xchg   ebx,eax
  429194:	out    dx,eax
  429195:	sbb    dh,BYTE PTR [ebx-0x64]
  429198:	bound  ebp,QWORD PTR [eax+0x7c]
  42919b:	scas   eax,DWORD PTR es:[edi]
  42919c:	pop    ecx
  42919d:	fcom   st(4)
  42919f:	std    
  4291a0:	(bad)  [esp+ecx*4+0x60fd450a]
  4291a7:	lods   al,BYTE PTR ds:[esi]
  4291a8:	xor    esi,ecx
  4291aa:	into   
  4291ab:	xor    al,0x98
  4291ad:	dec    DWORD PTR [edi-0x71]
  4291b0:	pop    es
  4291b1:	dec    eax
  4291b2:	sub    esp,0x58
  4291b5:	je     0x42917f
  4291b7:	push   ds
  4291b8:	aad    0xf6
  4291ba:	mov    cl,0x3d
  4291bc:	into   
  4291bd:	jl     0x429211
  4291bf:	aaa    
  4291c0:	xchg   edx,ebp
  4291c2:	fwait
  4291c3:	and    al,0x86
  4291c5:	and    BYTE PTR [eax+0x2af6f346],0x1b
  4291cc:	dec    esp
  4291cd:	gs inc esp
  4291cf:	dec    eax
  4291d0:	sub    eax,0x87a89b17
  4291d5:	adc    edi,ebp
  4291d7:	mov    esp,0x725d56c
  4291dc:	and    eax,0x6dd64ce4
  4291e1:	nop
  4291e2:	cli    
  4291e3:	lods   eax,DWORD PTR ds:[esi]
  4291e4:	push   ss
  4291e5:	push   edx
  4291e6:	pop    ss
  4291e7:	mov    al,0xa3
  4291e9:	xor    DWORD PTR [esp+eax*4-0x635ef372],0xd8454a09
  4291f4:	ja     0x42926b
  4291f6:	dec    BYTE PTR [ebx+0x1e]
  4291f9:	xchg   edi,eax
  4291fa:	fbstp  TBYTE PTR [eax+eax*4]
  4291fd:	mov    esi,DWORD PTR [edi-0x4e]
  429200:	sahf   
  429201:	pop    eax
  429202:	clc    
  429203:	or     DWORD PTR [ebx],0xffffffa4
  429206:	jns    0x4291da
  429208:	cs jae 0x4291c0
  42920b:	sar    DWORD PTR [edx],1
  42920d:	(bad)
  429210:	in     al,dx
  429211:	ret    0xdc59
  429214:	lea    esp,[ebp-0x1ca3131f]
  42921a:	jl     0x4291f9
  42921c:	and    ebx,DWORD PTR [esi]
  42921e:	sub    eax,0x6b8d103c
  429223:	stos   BYTE PTR es:[edi],al
  429224:	cld    
  429225:	inc    esp
  429226:	stos   BYTE PTR es:[edi],al
  429227:	in     eax,0x70
  429229:	mov    eax,0x14115ac8
  42922e:	mov    ds:0xdc70c3d2,eax
  429233:	sub    eax,0xd3b12447
  429238:	imul   edi,DWORD PTR [ebx+0x6f8000e3],0x4ed0a22b
  429242:	lds    esp,FWORD PTR [si]
  429245:	push   0x31
  429247:	fsubrp st(0),st
  429249:	(bad)  
  42924a:	arpl   bx,si
  42924c:	mov    ebp,0x28cd65cc
  429251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429252:	xchg   edi,eax
  429253:	pop    edi
  429254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429255:	cdq    
  429256:	lock int 0xc2
  429259:	loopne 0x42923f
  42925b:	(bad)  
  42925c:	fs aas 
  42925e:	mov    dl,0x14
  429260:	retf   
  429261:	mov    al,ch
  429263:	inc    ecx
  429264:	rol    BYTE PTR [esi+0x6d382b62],1
  42926a:	mov    bh,0x7
  42926c:	inc    ebx
  42926d:	mul    DWORD PTR [ebp+0x1c5cb20f]
  429273:	dec    edx
  429274:	add    eax,0x8ae690f3
  429279:	xchg   esi,eax
  42927a:	add    al,0x5d
  42927c:	scas   eax,DWORD PTR es:[edi]
  42927d:	xchg   edi,eax
  42927e:	xor    BYTE PTR [ebp+0x281c4c9f],ah
  429284:	(bad)  
  429285:	int3   
  429286:	inc    esi
  429287:	sbb    DWORD PTR [ebx+0x4c39c123],edx
  42928d:	inc    ebp
  42928e:	lea    ebx,[edi-0x3004e4d8]
  429294:	jecxz  0x429306
  429296:	cld    
  429297:	es lock cld 
  42929a:	scas   al,BYTE PTR es:[edi]
  42929b:	sbb    BYTE PTR [ebx],0xf
  42929e:	sbb    BYTE PTR [ebx],dh
  4292a0:	sub    esi,DWORD PTR [edi-0x10a93af5]
  4292a6:	sub    eax,0xdeb12d3c
  4292ab:	inc    edx
  4292ac:	or     ebp,eax
  4292ae:	loop   0x429319
  4292b0:	pusha  
  4292b1:	mov    ebx,DWORD PTR [ecx]
  4292b3:	xor    esp,edx
  4292b5:	cwde   
  4292b6:	loop   0x4292db
  4292b8:	aad    0x84
  4292ba:	add    ecx,DWORD PTR [edx+0x5c]
  4292bd:	shl    bh,0xd6
  4292c0:	fistp  WORD PTR [edi-0x58]
  4292c3:	or     BYTE PTR [edi+0x2c0e9e8b],0xa1
  4292ca:	push   edi
  4292cb:	push   eax
  4292cc:	mov    dh,0xcf
  4292ce:	jge    0x4292e1
  4292d0:	cld    
  4292d1:	adc    BYTE PTR [edi-0x11598b3d],bl
  4292d7:	push   0xffffffd8
  4292d9:	and    eax,DWORD PTR [ecx+eax*4+0x5f]
  4292dd:	cwde   
  4292de:	mov    DWORD PTR [esp+ecx*2+0x7da13469],ebp
  4292e5:	and    al,0xbc
  4292e7:	std    
  4292e8:	or     DWORD PTR [eax-0x6a],ecx
  4292eb:	xor    al,dh
  4292ed:	sub    BYTE PTR [eax-0x20],ch
  4292f0:	xchg   BYTE PTR [esi+ecx*1],ah
  4292f3:	sbb    eax,0xc2d61820
  4292f8:	mov    al,ch
  4292fa:	shr    DWORD PTR [eax+0x48e9a0cd],cl
  429300:	lods   eax,DWORD PTR ds:[esi]
  429301:	lods   al,BYTE PTR ds:[esi]
  429302:	pop    ss
  429303:	bound  eax,QWORD PTR [eax+0x76]
  429306:	outs   dx,DWORD PTR ds:[esi]
  429307:	mov    ecx,0xa2d0a6e6
  42930c:	jae    0x4292bf
  42930e:	xchg   ebx,eax
  42930f:	mov    ebp,cs
  429311:	mov    al,0x73
  429313:	hlt    
  429314:	js     0x42936a
  429316:	sub    dl,BYTE PTR [ecx]
  429318:	repnz (bad) 
  42931a:	and    eax,0x9bf39c05
  42931f:	or     eax,0x310a93cd
  429324:	dec    edx
  429325:	ror    bl,0xdc
  429328:	cmp    eax,0xb7f3e449
  42932d:	fsubrp st(4),st
  42932f:	sub    esp,DWORD PTR [ebp-0x369d999d]
  429335:	fnsave [esi-0x5380b6f8]
  42933b:	push   esp
  42933c:	jo     0x42937a
  42933e:	pop    edi
  42933f:	sub    DWORD PTR [edx+edi*2],0xffffffa4
  429343:	test   al,0xef
  429345:	xchg   ecx,eax
  429346:	adc    eax,0x4fd4d0c3
  42934b:	adc    dh,BYTE PTR [eax]
  42934d:	sti    
  42934e:	in     eax,dx
  42934f:	(bad)  
  429350:	fisub  WORD PTR [edi]
  429352:	clc    
  429353:	push   edx
  429354:	popa   
  429355:	inc    ecx
  429356:	retf   0x638
  429359:	dec    esp
  42935a:	popa   
  42935b:	sbb    al,0x9c
  42935d:	and    eax,0x7baf6fba
  429362:	shr    BYTE PTR [eax+eax*2+0x8],0x30
  429367:	fwait
  429368:	jne    0x42930f
  42936a:	xchg   BYTE PTR [ecx-0x452c17de],cl
  429370:	fld    TBYTE PTR [esi+0x50e3f8a1]
  429376:	or     al,0xb6
  429378:	test   DWORD PTR [eax-0x2664dc9d],edi
  42937e:	xor    DWORD PTR [eax],0xfffffff6
  429381:	loopne 0x4293d1
  429383:	pop    ebp
  429384:	jns    0x42934e
  429386:	xchg   edx,eax
  429387:	call   DWORD PTR [eax+ebx*8-0x6d]
  42938b:	xchg   ecx,eax
  42938c:	jl     0x4293c1
  42938e:	push   cs
  42938f:	pop    ebp
  429390:	xchg   ebp,eax
  429391:	js     0x429370
  429393:	add    dh,BYTE PTR [ecx+0x7f725395]
  429399:	sti    
  42939a:	and    BYTE PTR [esi+0x1c],dh
  42939d:	dec    esp
  42939e:	inc    ebx
  42939f:	cmp    bl,BYTE PTR [ebp+0x77]
  4293a2:	daa    
  4293a3:	inc    esp
  4293a4:	nop
  4293a5:	test   BYTE PTR [eax-0xc],bl
  4293a8:	fdiv   DWORD PTR [ebx-0x19]
  4293ab:	inc    ebp
  4293ac:	push   0x483539cb
  4293b1:	fnstcw WORD PTR [edi-0x2873b7d4]
  4293b7:	iret   
  4293b8:	mov    esp,0xe3e0d973
  4293bd:	dec    eax
  4293be:	xor    al,0x26
  4293c0:	adc    edx,DWORD PTR [edx]
  4293c2:	imul   ecx,edx
  4293c5:	jne    0x42935f
  4293c7:	pop    eax
  4293c8:	jge    0x429385
  4293ca:	mov    al,0x7a
  4293cc:	lods   eax,DWORD PTR ds:[esi]
  4293cd:	xor    ebp,edx
  4293cf:	xchg   BYTE PTR [eax+esi*8-0x71],bh
  4293d3:	jmp    0x4293b8
  4293d5:	scas   al,BYTE PTR es:[edi]
  4293d6:	dec    eax
  4293d7:	mov    ch,0x4c
  4293d9:	mov    al,ds:0x21c6f397
  4293de:	mov    ds:0xc4619702,al
  4293e3:	inc    edi
  4293e4:	xchg   esp,eax
  4293e5:	retf   0x7ebe
  4293e8:	in     al,0x52
  4293ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293eb:	ins    BYTE PTR es:[edi],dx
  4293ec:	out    dx,eax
  4293ed:	dec    esi
  4293ee:	cld    
  4293ef:	ret    
  4293f0:	or     DWORD PTR [ebx],ebp
  4293f2:	jl     0x42944b
  4293f4:	nop
  4293f5:	icebp  
  4293f6:	dec    esp
  4293f7:	mov    cl,0xa0
  4293f9:	push   ecx
  4293fa:	sub    DWORD PTR [eax+0x738fb40d],eax
  429400:	and    DWORD PTR [esi-0x5a278aec],eax
  429406:	fcomp  DWORD PTR [eax+0x5]
  429409:	mov    bl,0xc
  42940b:	jmp    0xfc5f159b
  429410:	sub    BYTE PTR [esi+0x7c28e5e3],al
  429416:	cmp    al,0x17
  429418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429419:	xor    al,0x52
  42941b:	and    BYTE PTR [esi],bl
  42941d:	and    eax,0xc86aa0f8
  429422:	dec    esp
  429423:	adc    al,0x2e
  429425:	dec    edi
  429426:	in     al,0x44
  429428:	xchg   edx,eax
  429429:	pop    edx
  42942a:	in     al,dx
  42942b:	mov    ch,0xb9
  42942d:	mov    ebx,0x286fa9fb
  429432:	daa    
  429433:	adc    BYTE PTR [edi-0x5dee5835],dh
  429439:	cmp    al,0x89
  42943b:	jl     0x4293f5
  42943d:	retf   
  42943e:	inc    edx
  42943f:	add    eax,0xa8d63f15
  429444:	and    eax,0xd9c9d6dc
  429449:	aam    0xb3
  42944b:	sti    
  42944c:	dec    esi
  42944d:	in     al,dx
  42944e:	add    bh,al
  429450:	dec    ebp
  429451:	xchg   ebx,eax
  429452:	dec    ebx
  429453:	or     BYTE PTR [ecx],dl
  429455:	mov    WORD PTR [edi+0x24],cs
  429458:	mov    edi,0xd5511b83
  42945d:	sub    BYTE PTR [esi],bh
  42945f:	adc    DWORD PTR [eax+0x4c],ecx
  429462:	push   ss
  429463:	xor    cl,dl
  429465:	sti    
  429466:	push   eax
  429467:	adc    eax,0xfffffff0
  42946a:	inc    eax
  42946b:	in     al,0xbf
  42946d:	(bad)  [esi+0x1426334c]
  429473:	ins    BYTE PTR es:[edi],dx
  429474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429475:	adc    ebx,edi
  429477:	xor    dl,BYTE PTR [ecx-0x18c7dd6a]
  42947d:	dec    edi
  42947e:	out    0x5f,eax
  429480:	xor    BYTE PTR [ebx],dh
  429482:	ficomp WORD PTR [esp+ebx*2+0x75]
  429486:	in     eax,dx
  429487:	adc    DWORD PTR [edi],esp
  429489:	ss add al,dh
  42948c:	les    eax,FWORD PTR [edi+ebp*4]
  42948f:	cmp    al,0x20
  429491:	lds    esi,FWORD PTR [esi]
  429493:	mov    eax,ds:0x64289a1e
  429498:	push   ebx
  429499:	sub    BYTE PTR [edi+ebp*1],bl
  42949c:	pushf  
  42949d:	inc    esp
  42949e:	inc    edx
  42949f:	dec    esp
  4294a0:	ins    DWORD PTR es:[edi],dx
  4294a1:	inc    ebx
  4294a2:	mov    WORD PTR [edi],?
  4294a4:	adc    bh,cl
  4294a6:	shr    BYTE PTR [edx+0x6333c270],1
  4294ac:	mov    dh,0xff
  4294ae:	xchg   BYTE PTR [ecx+0x61694f2],ch
  4294b4:	data16 jecxz 0x42946a
  4294b7:	(bad)
  4294ba:	cmp    al,0x43
  4294bc:	mov    bh,0x22
  4294be:	push   edx
  4294bf:	dec    ebp
  4294c0:	test   al,0xde
  4294c2:	inc    ebp
  4294c3:	add    BYTE PTR [eax],al
  4294c5:	add    BYTE PTR [eax],al
  4294c7:	add    BYTE PTR [esi],dh
  4294c9:	push   ds
  4294ca:	sti    
  4294cb:	pop    edx
  4294cc:	push   ecx
  4294cd:	or     DWORD PTR [eax],eax
  4294cf:	add    BYTE PTR [eax],al
  4294d1:	add    BYTE PTR [eax],al
  4294d3:	add    BYTE PTR [ecx+0x9],dl
  4294d6:	add    BYTE PTR [eax],al
  4294d8:	xor    al,BYTE PTR [eax]
  4294da:	es jl  0x4294dd
  4294dd:	add    dh,BYTE PTR [esi]
  4294df:	or     BYTE PTR [eax],al
  4294e1:	add    ah,al
  4294e3:	inc    ebp
  4294e4:	add    BYTE PTR [ecx+0x959761],ah
  4294ea:	jmp    0xe5677598
  4294ef:	popa   
  4294f0:	or     DWORD PTR [edi-0x130de2fd],ebx
  4294f6:	dec    eax
  4294f7:	in     al,0xdd
  4294f9:	dec    esi
  4294fa:	cmp    eax,0xd19512af
  4294ff:	ins    BYTE PTR es:[edi],dx
  429500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429501:	std    
  429502:	dec    esi
  429503:	call   0x4590:0x8b601c9b
  42950a:	cmp    ah,BYTE PTR [edx-0x2f]
  42950d:	fwait
  42950e:	adc    edi,esp
  429510:	(bad)  
  429513:	jne    0x42955d
  429515:	iret   
  429516:	dec    edx
  429517:	leave  
  429518:	cmp    eax,ebp
  42951a:	pop    esp
  42951b:	add    BYTE PTR [edi+0x63b4e770],bh
  429521:	ret    
  429522:	xor    BYTE PTR ds:[ebx-0x3b],0x8c
  429527:	dec    eax
  429528:	push   ss
  429529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42952a:	scas   al,BYTE PTR es:[edi]
  42952b:	arpl   WORD PTR [esi+esi*1-0x463eb24b],sp
  429532:	inc    ebx
  429533:	test   eax,0xe894c78
  429538:	xchg   bl,bh
  42953a:	add    ch,bl
  42953c:	pusha  
  42953d:	and    eax,0x97dd1c70
  429542:	lods   al,BYTE PTR ds:[esi]
  429543:	(bad)  
  429544:	adc    ah,BYTE PTR [edx-0x8]
  429547:	xchg   esp,eax
  429548:	shr    BYTE PTR [eax+0x3330d9b],1
  42954e:	out    dx,al
  42954f:	scas   eax,DWORD PTR es:[edi]
  429550:	mov    eax,0xdd474a45
  429555:	iret   
  429556:	ins    DWORD PTR es:[edi],dx
  429557:	jno    0x4295b6
  429559:	fdivr  st(3),st
  42955b:	pop    edx
  42955c:	call   0x84c9:0x74ab2a35
  429563:	add    eax,0xfce0b32c
  429568:	xor    al,BYTE PTR [ecx+0x63]
  42956b:	test   al,0xcf
  42956d:	xor    bh,BYTE PTR [esi]
  42956f:	(bad)  [ecx]
  429571:	xchg   ebx,eax
  429572:	mov    eax,0x6d66cc4f
  429577:	call   0x10868bd8
  42957c:	xlat   BYTE PTR ds:[ebx]
  42957d:	lock fist DWORD PTR [eax]
  429580:	jecxz  0x42957c
  429582:	js     0x4295f3
  429584:	in     eax,0x1
  429586:	adc    al,0xda
  429588:	fcomp  QWORD PTR [edx+0x36e66ce4]
  42958e:	mov    bh,0xbc
  429590:	daa    
  429591:	jmp    0x47fa0a43
  429596:	inc    edx
  429597:	icebp  
  429598:	loopne 0x4295cb
  42959a:	jno    0x429597
  42959c:	inc    ecx
  42959d:	outs   dx,DWORD PTR ds:[esi]
  42959e:	pop    ss
  42959f:	jbe    0x42959a
  4295a1:	add    al,0x7a
  4295a3:	(bad)  
  4295a4:	cmp    ecx,DWORD PTR [ebp+0x1]
  4295a7:	mov    ch,0xc3
  4295a9:	jp     0x4295d3
  4295ab:	inc    ebx
  4295ac:	sub    eax,0x8b54ea
  4295b1:	sar    DWORD PTR [edx-0x733aab30],1
  4295b7:	mov    ecx,0xa4904e45
  4295bc:	hlt    
  4295bd:	sbb    BYTE PTR [edi+0x2fc542aa],ch
  4295c3:	out    0xef,eax
  4295c5:	sbb    BYTE PTR [ecx-0x67],ah
  4295c8:	mov    al,ds:0xf35a2233
  4295cd:	jns    0x42960b
  4295cf:	mov    eax,ds:0x895ec86c
  4295d4:	or     bl,BYTE PTR [ebp+0x82a60ab]
  4295da:	imul   esi,ebp,0x7363046e
  4295e0:	or     BYTE PTR [ebp+0x5d729f46],dh
  4295e6:	(bad)  
  4295e7:	mov    esp,0x2b5c2c09
  4295ec:	and    DWORD PTR [ecx+edx*4],esp
  4295ef:	push   0x3c50497b
  4295f4:	dec    ebp
  4295f5:	mov    bh,0xdc
  4295f7:	jne    0x4295ad
  4295f9:	sbb    ebx,ebp
  4295fb:	je     0x429669
  4295fd:	xchg   esi,eax
  4295fe:	or     BYTE PTR [edx],0x7c
  429601:	sti    
  429602:	fsub   QWORD PTR [ecx]
  429604:	sbb    al,0xf0
  429606:	idiv   DWORD PTR [ecx-0x70abed35]
  42960c:	push   edx
  42960d:	inc    eax
  42960e:	(bad)  
  42960f:	in     eax,0xd4
  429611:	mov    edx,ebx
  429613:	sbb    DWORD PTR [ebx],esp
  429615:	jmp    0x872a:0xbbee0b64
  42961c:	cmp    ebp,DWORD PTR [esi+0x7f6e885a]
  429622:	cli    
  429623:	es mov edi,0xac33bfc9
  429629:	xor    dh,cl
  42962b:	bnd jmp 0x4295ca
  42962e:	ret    0x8fc6
  429631:	push   esp
  429632:	nop
  429633:	or     ecx,eax
  429635:	test   BYTE PTR [ecx+edi*8+0x33781bd4],al
  42963c:	mov    eax,0x78b31e81
  429641:	inc    edx
  429642:	imul   ebx,DWORD PTR [esi+eax*8-0x3efd825a],0x56
  42964a:	sbb    BYTE PTR [eax+eax*8-0x7],cl
  42964e:	dec    ebp
  42964f:	xchg   BYTE PTR [eax+0x7f8052ed],dh
  429655:	in     al,0xc6
  429657:	mov    dh,0x67
  429659:	cmp    eax,0x582aef81
  42965e:	mov    WORD PTR [edx+ecx*2],ss
  429661:	ret    0xfab6
  429664:	lods   al,BYTE PTR ds:[esi]
  429665:	fistp  WORD PTR [ebx+0x3e6c78b0]
  42966b:	push   edi
  42966c:	and    al,0x6b
  42966e:	push   edi
  42966f:	jecxz  0x429645
  429671:	cdq    
  429672:	add    ebp,DWORD PTR [edx+0xcd7b5e3]
  429678:	inc    esi
  429679:	clc    
  42967a:	xor    eax,0x1167144c
  42967f:	imul   ebx,DWORD PTR [ebx-0x7b3b5f4d],0xf8d41e7e
  429689:	retf   
  42968a:	pop    eax
  42968b:	(bad)  
  42968c:	clc    
  42968d:	dec    esi
  42968e:	push   es
  42968f:	fcom   QWORD PTR [ecx+ebx*2+0x12]
  429693:	daa    
  429694:	call   0x349b041e
  429699:	xor    al,0x49
  42969b:	mov    ebp,0xa4ec0c27
  4296a0:	jmp    0x3040:0xad9e8759
  4296a7:	out    0xa4,eax
  4296a9:	mov    dl,0xf8
  4296ab:	ds (bad) 
  4296ad:	sub    DWORD PTR [ebp-0x28],edx
  4296b0:	(bad)  
  4296b1:	fcom   st(2)
  4296b3:	arpl   WORD PTR [ecx],dx
  4296b5:	je     0x4296b0
  4296b7:	imul   edi,esp,0x58fdde05
  4296bd:	test   eax,0x206ce47d
  4296c2:	and    eax,0xcb4e7d0
  4296c7:	lods   eax,DWORD PTR ds:[esi]
  4296c8:	mov    BYTE PTR [edx],dh
  4296ca:	inc    esp
  4296cb:	mov    esi,0x7aba58e2
  4296d0:	xor    ch,BYTE PTR [ecx+0x17c9ec12]
  4296d6:	xlat   BYTE PTR ds:[ebx]
  4296d7:	mov    ecx,0x56f93bad
  4296dc:	adc    BYTE PTR [ebx],dl
  4296de:	sti    
  4296df:	popa   
  4296e0:	sahf   
  4296e1:	lods   eax,DWORD PTR ds:[esi]
  4296e2:	lods   al,BYTE PTR ds:[esi]
  4296e3:	xor    esi,DWORD PTR cs:[eax+edx*8]
  4296e7:	mov    WORD PTR [esi],?
  4296e9:	repnz and DWORD PTR [esi],0xbe58af2a
  4296f0:	add    ebx,ebx
  4296f2:	int    0x6f
  4296f4:	(bad)  
  4296f5:	jmp    0xe60d1317
  4296fa:	ins    BYTE PTR es:[edi],dx
  4296fb:	enter  0xb23f,0xb3
  4296ff:	xchg   esi,eax
  429700:	and    al,0x91
  429702:	cli    
  429703:	loopne 0x4296fa
  429705:	push   0x484b3018
  42970a:	pop    edi
  42970b:	out    0xb1,al
  42970d:	fs jge 0x4296c5
  429710:	shl    al,0x6c
  429713:	loop   0x4296f5
  429715:	pop    ss
  429716:	lds    esi,FWORD PTR [edx]
  429718:	fsubr  st,st(1)
  42971a:	sbb    edx,DWORD PTR [eax-0x79c88602]
  429720:	aad    0x9b
  429722:	aaa    
  429723:	inc    edi
  429724:	mov    ah,0x7
  429726:	clc    
  429727:	pop    ebp
  429728:	cld    
  429729:	cmc    
  42972a:	icebp  
  42972b:	push   eax
  42972c:	mov    ch,0x5c
  42972e:	push   cs
  42972f:	and    BYTE PTR [ebp-0x7f],ch
  429732:	jl     0x42972d
  429734:	add    al,0xd2
  429736:	xor    BYTE PTR [edx],0xb3
  429739:	(bad)  
  42973a:	test   bh,0x95
  42973d:	jge    0x4296c6
  42973f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429740:	icebp  
  429741:	pop    es
  429742:	push   0xffffffac
  429744:	add    ecx,DWORD PTR [ecx]
  429746:	xchg   edx,eax
  429747:	pop    ecx
  429748:	enter  0x31d6,0x61
  42974c:	mov    dl,BYTE PTR [edx+0x7015b33e]
  429752:	repnz add al,0x6
  429755:	add    BYTE PTR [esi-0x6b987a31],dh
  42975b:	call   0x35825d8c
  429760:	dec    ebx
  429761:	icebp  
  429762:	jmp    0x1507:0xabc49bb8
  429769:	mov    bh,0xe
  42976b:	fstp   st(4)
  42976d:	leave  
  42976e:	movq   mm5,QWORD PTR [eax]
  429771:	retf   0x405b
  429774:	test   BYTE PTR [eax],0x41
  429777:	fs popa 
  429779:	add    eax,0x39fc0c0b
  42977e:	test   al,0x3e
  429780:	xor    al,0x65
  429782:	inc    edi
  429783:	mov    al,0x45
  429785:	cdq    
  429786:	ror    esp,1
  429788:	aas    
  429789:	aaa    
  42978a:	in     al,dx
  42978b:	jge    0x42970f
  42978d:	out    dx,eax
  42978e:	sar    esp,0xf0
  429791:	or     ch,BYTE PTR es:[edi-0x5a]
  429795:	or     BYTE PTR [ebx],0x55
  429798:	test   DWORD PTR [esi*1+0x17ded37f],edx
  42979f:	xor    edi,DWORD PTR [edi-0x62f4318]
  4297a5:	add    al,0x75
  4297a7:	gs shl ebp,0x77
  4297ab:	loopne 0x429735
  4297ad:	mov    eax,0x5d3e38d4
  4297b2:	rol    eax,cl
  4297b4:	add    al,0x3a
  4297b6:	xor    edi,DWORD PTR [edi]
  4297b8:	int    0xa8
  4297ba:	cs aaa 
  4297bc:	adc    ebp,DWORD PTR [eax]
  4297be:	xchg   ebx,eax
  4297bf:	jg     0x42978a
  4297c1:	mov    bl,0x26
  4297c3:	int    0xe1
  4297c5:	lds    ecx,FWORD PTR [esp+eax*1-0x40]
  4297c9:	push   es
  4297ca:	jmp    0xcbf4:0xf127b6ac
  4297d1:	inc    edi
  4297d2:	into   
  4297d3:	inc    ebx
  4297d4:	or     DWORD PTR [ecx+ebx*8],esi
  4297d7:	jno    0x4297f1
  4297d9:	mov    ds:0x6a4f2c75,eax
  4297de:	mov    ah,0x74
  4297e0:	retf   0xa23c
  4297e3:	repnz adc al,0x86
  4297e6:	and    bh,BYTE PTR [esi]
  4297e8:	xor    al,0xa2
  4297ea:	pusha  
  4297eb:	(bad)  
  4297ec:	jnp    0x429805
  4297ee:	adc    al,bl
  4297f0:	and    al,0x3d
  4297f2:	leave  
  4297f3:	test   BYTE PTR [ebx+0x33],cl
  4297f6:	adc    eax,0x99682b19
  4297fb:	inc    eax
  4297fc:	sub    al,0x71
  4297fe:	mov    bl,0x7f
  429800:	mov    ebp,0x4cb60d79
  429805:	push   eax
  429806:	aam    0xd4
  429808:	loope  0x429810
  42980a:	lea    ecx,[esi]
  42980c:	sub    edx,DWORD PTR [edx]
  42980e:	je     0x429835
  429810:	ret    0x1ac0
  429813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429814:	mov    ds:0x3e982cd4,al
  429819:	imul   ebx,DWORD PTR [esp+ebp*1-0x22],0x40985f47
  429821:	mov    esi,0x560b0614
  429826:	sub    al,0x5e
  429828:	dec    edi
  429829:	lods   eax,DWORD PTR fs:[esi]
  42982b:	test   BYTE PTR [ebp+0x796958f6],bh
  429831:	inc    ecx
  429832:	mov    BYTE PTR [ebp-0x2e],dh
  429835:	jmp    0x429803
  429837:	pop    edx
  429838:	sbb    BYTE PTR [edi+0x42],al
  42983b:	lods   al,BYTE PTR ds:[esi]
  42983c:	push   ecx
  42983d:	mov    edi,DWORD PTR [ecx-0x30398075]
  429843:	push   eax
  429844:	rol    BYTE PTR [edx-0x3a],1
  429847:	mov    ebx,0x57585692
  42984c:	adc    DWORD PTR [eax-0x59],edi
  42984f:	xchg   edx,eax
  429850:	in     al,0xf1
  429852:	xor    dl,ch
  429854:	pop    edi
  429855:	scas   eax,DWORD PTR es:[edi]
  429856:	pushf  
  429857:	mov    ah,0x8f
  429859:	push   esi
  42985a:	imul   esi,eax,0xc0801c1c
  429860:	ret    
  429861:	jmp    0x42986b
  429863:	push   ecx
  429864:	mov    ebx,0xe49e590f
  429869:	xor    eax,0x1f
  42986c:	mov    dh,0x56
  42986e:	cmp    ch,BYTE PTR [ebx-0x501773bd]
  429874:	enter  0x9d94,0xf7
  429878:	aam    0x76
  42987a:	mov    al,0x8a
  42987c:	push   esp
  42987d:	add    eax,0xebe9c866
  429882:	rcl    ah,1
  429884:	and    eax,0xeeca0d41
  429889:	daa    
  42988a:	cwde   
  42988b:	stos   DWORD PTR es:[edi],eax
  42988c:	clc    
  42988d:	mov    ds:0xae09f5c0,eax
  429892:	ret    0x382d
  429895:	sbb    al,0xea
  429897:	mov    dl,0x33
  429899:	lods   al,BYTE PTR ds:[esi]
  42989a:	sti    
  42989b:	or     eax,0xd6c45d55
  4298a0:	ja     0x4298ef
  4298a2:	jmp    0xabe8:0xabb58e36
  4298a9:	mov    al,0x31
  4298ab:	mov    ?,WORD PTR [ebx+0xc579a62]
  4298b1:	mov    edx,0xe55bf888
  4298b6:	lea    edx,[esi-0x125ecf58]
  4298bc:	or     dl,al
  4298be:	cmp    eax,DWORD PTR es:[ebp+eiz*2-0x28]
  4298c3:	fnstenv [edx-0x45]
  4298c6:	xchg   ecx,eax
  4298c7:	call   0xfcf928e3
  4298cc:	sar    bl,1
  4298ce:	lea    esp,[ebp-0x76821938]
  4298d4:	and    BYTE PTR [edi+0x26],cl
  4298d7:	adc    al,0x34
  4298d9:	inc    eax
  4298da:	stos   BYTE PTR es:[edi],al
  4298db:	jnp    0x4298ed
  4298dd:	inc    esp
  4298de:	mov    edx,0x5dfb8fad
  4298e3:	sub    dl,BYTE PTR ds:0xe13b6861
  4298e9:	ficomp WORD PTR [edi-0x427b4534]
  4298ef:	adc    BYTE PTR [ebp+0x597a355a],ch
  4298f5:	nop
  4298f6:	repnz inc esi
  4298f8:	xor    al,0x45
  4298fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298fb:	aad    0x35
  4298fd:	fs pop ss
  4298ff:	mov    al,0x38
  429901:	pop    eax
  429902:	les    esi,FWORD PTR [eax]
  429904:	inc    eax
  429905:	test   al,0x45
  429907:	pop    edx
  429908:	add    al,0x13
  42990a:	jl     0x4298f9
  42990c:	cdq    
  42990d:	je     0x429970
  42990f:	jle    0x4298ca
  429911:	jmp    0xa40639b1
  429916:	arpl   WORD PTR [ecx+ecx*8-0x56],sp
  42991a:	call   0xe031e16f
  42991f:	add    eax,DWORD PTR [ecx-0x4e76e42e]
  429925:	ins    BYTE PTR es:[edi],dx
  429926:	imul   edi,ecx,0x77
  429929:	jmp    0x3d90:0xfca0823f
  429930:	rcl    DWORD PTR [eax-0x30],0x39
  429934:	sbb    dh,BYTE PTR [edi]
  429936:	xor    DWORD PTR [ecx+ecx*1-0x5dd8514d],esi
  42993d:	repz jnp 0x429960
  429940:	pop    esp
  429941:	adc    DWORD PTR [esi-0x49],0xffffffba
  429945:	cmc    
  429946:	(bad)  
  429947:	stos   DWORD PTR es:[edi],eax
  429948:	or     al,0x80
  42994a:	cmp    esi,DWORD PTR [ecx]
  42994c:	sbb    ah,al
  42994e:	add    eax,0xa49fad8a
  429953:	pusha  
  429954:	pop    ebp
  429955:	(bad)  
  429956:	shl    dl,1
  429958:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42995a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42995b:	enter  0x959a,0x7a
  42995f:	leave  
  429960:	jae    0x4299a0
  429962:	dec    ebx
  429963:	in     eax,dx
  429964:	in     al,dx
  429965:	and    al,0x52
  429967:	int3   
  429968:	(bad)  
  42996a:	cmp    ecx,edx
  42996c:	xchg   BYTE PTR [esp+edi*8-0x2849610],dl
  429973:	sbb    eax,0x39b89672
  429978:	test   eax,0x1dbe1780
  42997d:	(bad)  
  42997e:	fdiv   QWORD PTR fs:[ebp+0x5d9a5ea6]
  429985:	push   esi
  429986:	and    dh,BYTE PTR [ebx+0x173b4a00]
  42998c:	mov    eax,ds:0x8f34ab94
  429991:	test   al,0x47
  429993:	out    0x79,al
  429995:	adc    edi,DWORD PTR [ecx-0x3342b9ce]
  42999b:	or     BYTE PTR [edx],bh
  42999d:	cdq    
  42999e:	sbb    dl,al
  4299a0:	xor    esi,DWORD PTR [ebx]
  4299a2:	jle    0x429994
  4299a4:	jmp    0x74a5c8f8
  4299a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299aa:	arpl   WORD PTR [ecx+0x14],sp
  4299ad:	cld    
  4299ae:	or     esp,DWORD PTR [edx+0x21e82117]
  4299b4:	fdivr  QWORD PTR [eax]
  4299b6:	jmp    0x42999d
  4299b8:	sbb    DWORD PTR [edi-0x79],edi
  4299bb:	mov    ch,0x2f
  4299bd:	cld    
  4299be:	loopne 0x429972
  4299c0:	cmc    
  4299c1:	jecxz  0x42994b
  4299c3:	inc    eax
  4299c4:	dec    edi
  4299c5:	xchg   ebx,eax
  4299c6:	dec    esp
  4299c7:	add    al,0x1f
  4299c9:	add    al,0xa0
  4299cb:	in     eax,0x51
  4299cd:	adc    DWORD PTR [eax],eax
  4299cf:	imul   DWORD PTR [eax]
  4299d1:	in     eax,0x44
  4299d3:	ins    BYTE PTR es:[edi],dx
  4299d4:	fstp   DWORD PTR [edx+0x16]
  4299d7:	bound  esi,QWORD PTR [edx]
  4299d9:	dec    esp
  4299da:	xchg   edx,eax
  4299db:	push   ds
  4299dc:	add    al,0xf0
  4299de:	sbb    al,0xfb
  4299e0:	xchg   ebx,eax
  4299e1:	fdiv   QWORD PTR [eax+0x11]
  4299e4:	jns    0x4299ba
  4299e6:	adc    al,0x72
  4299e8:	mov    ds:0xd5184c5d,al
  4299ed:	adc    al,0x8c
  4299ef:	xchg   edi,eax
  4299f0:	fcomp  DWORD PTR [edi-0x4bc31cec]
  4299f6:	or     eax,0xdbbce7cb
  4299fb:	shl    BYTE PTR [ebp+0x3ccf9960],1
  429a01:	lahf   
  429a02:	pop    ebp
  429a03:	sbb    eax,0xa0847202
  429a08:	movlps QWORD PTR [edx],xmm6
  429a0b:	dec    eax
  429a0c:	jge    0x4299d7
  429a0e:	adc    ebp,DWORD PTR [eax+esi*1]
  429a11:	pop    esp
  429a12:	jo     0x42999f
  429a14:	mov    al,ds:0x504775ed
  429a19:	icebp  
  429a1a:	scas   eax,DWORD PTR es:[edi]
  429a1b:	xor    eax,0xee72e27d
  429a20:	lods   eax,DWORD PTR ds:[esi]
  429a21:	je     0x429a6a
  429a23:	lods   al,BYTE PTR ds:[esi]
  429a24:	cld    
  429a25:	(bad)  
  429a26:	into   
  429a27:	cmp    eax,0x15985320
  429a2c:	mov    ecx,0x16b1fde4
  429a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a32:	int    0xbc
  429a34:	popf   
  429a35:	leave  
  429a36:	xchg   edi,eax
  429a37:	adc    al,0x38
  429a39:	shl    DWORD PTR [edx-0x7e719ba9],1
  429a3f:	stos   BYTE PTR es:[edi],al
  429a40:	push   ss
  429a41:	ins    DWORD PTR es:[edi],dx
  429a42:	imul   BYTE PTR [ebx]
  429a44:	push   ecx
  429a45:	mov    bh,bh
  429a47:	pushf  
  429a48:	mov    WORD PTR [eax-0x40],cs
  429a4b:	xchg   DWORD PTR [edx],eax
  429a4d:	cdq    
  429a4e:	lods   al,BYTE PTR ds:[esi]
  429a4f:	or     al,0x10
  429a51:	icebp  
  429a52:	arpl   WORD PTR [eax-0x2f35bf3b],bp
  429a58:	and    BYTE PTR [ebx+esi*8],cl
  429a5b:	sbb    cl,bl
  429a5d:	add    DWORD PTR [ebx],ebp
  429a5f:	addr16 js 0x429ade
  429a62:	pop    ebp
  429a63:	jmp    0xf0f802c2
  429a68:	inc    ecx
  429a69:	pushf  
  429a6a:	loop   0x429a62
  429a6c:	and    DWORD PTR [edx],eax
  429a6e:	clc    
  429a6f:	pop    ecx
  429a70:	sub    BYTE PTR [eax+0x19b125c0],ah
  429a76:	jmp    0x2de4:0x22c88a3
  429a7d:	xchg   edx,eax
  429a7e:	mov    edi,0xc31d2883
  429a83:	lods   al,BYTE PTR ds:[esi]
  429a84:	or     BYTE PTR [ebx],ch
  429a86:	mov    BYTE PTR [esi],bl
  429a88:	and    ebx,DWORD PTR ds:0xb0d71609
  429a8e:	mov    edi,0x4276ec9a
  429a93:	sub    bl,BYTE PTR [ebx-0x32]
  429a96:	aam    0xd2
  429a98:	sbb    eax,0xda21322a
  429a9d:	mov    esi,0x3572f872
  429aa2:	inc    eax
  429aa3:	xchg   ecx,eax
  429aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429aa5:	jle    0x429a73
  429aa7:	lods   al,BYTE PTR ds:[esi]
  429aa8:	sbb    al,0x51
  429aaa:	pusha  
  429aab:	in     al,dx
  429aac:	jo     0x429acb
  429aae:	aaa    
  429aaf:	xor    eax,0x652d4094
  429ab4:	cmp    DWORD PTR [edx+esi*8-0x7f],0xffffffb0
  429ab9:	jo     0x429aa3
  429abb:	outs   dx,DWORD PTR ds:[esi]
  429abc:	sub    DWORD PTR [eax],0x10
  429abf:	xchg   edx,eax
  429ac0:	(bad)  
  429ac1:	ror    ebp,cl
  429ac3:	or     al,0x4e
  429ac5:	ret    
  429ac6:	fbld   TBYTE PTR [ebx-0x204dfab]
  429acc:	xor    BYTE PTR [edi+eax*8+0x55],dh
  429ad0:	test   eax,0x11582579
  429ad5:	push   esp
  429ad6:	aad    0xa7
  429ad8:	jbe    0x429a68
  429ada:	dec    edi
  429adb:	mov    WORD PTR [ecx-0x6b],?
  429ade:	cld    
  429adf:	stos   DWORD PTR es:[edi],eax
  429ae0:	scas   eax,DWORD PTR es:[edi]
  429ae1:	in     al,0xff
  429ae3:	jmp    0x429a75
  429ae5:	inc    edi
  429ae6:	xchg   edi,eax
  429ae7:	and    ah,ch
  429ae9:	jns    0x429ae6
  429aeb:	data16 sbb BYTE PTR [eax+eax*4-0x15],0x44
  429af1:	adc    ah,BYTE PTR [ebp-0x546a0616]
  429af7:	mov    ebp,eax
  429af9:	push   0xc5376787
  429afe:	cdq    
  429aff:	not    DWORD PTR [eax-0x6b]
  429b02:	mov    WORD PTR [esi+0x5c223a08],?
  429b08:	xchg   edi,eax
  429b09:	nop
  429b0a:	dec    edx
  429b0b:	xor    al,0x14
  429b0d:	jno    0x429b1c
  429b0f:	adc    DWORD PTR [ebp+0x5833d290],ebx
  429b15:	jle    0x429b16
  429b17:	add    DWORD PTR [eax-0x7a],eax
  429b1a:	adc    al,0x9
  429b1c:	xchg   ecx,eax
  429b1d:	jl     0x429ac4
  429b1f:	mov    al,ds:0xfa51e6ed
  429b24:	or     bl,cl
  429b26:	mov    al,ds:0x5ca5259e
  429b2b:	cmp    eax,0x4835b05b
  429b30:	call   0x5fe3:0xe7d077f
  429b37:	out    dx,al
  429b38:	ins    BYTE PTR es:[edi],dx
  429b39:	leave  
  429b3a:	cli    
  429b3b:	pushf  
  429b3c:	iret   
  429b3d:	xchg   ebp,eax
  429b3e:	aas    
  429b3f:	imul   edx,DWORD PTR [ebp+0x393baa90],0xffffffda
  429b46:	mov    ebx,0xb48568f9
  429b4b:	and    BYTE PTR [ecx-0x63],0x2f
  429b4f:	repz xor BYTE PTR [eax-0x341f272c],dh
  429b56:	dec    esp
  429b57:	and    eax,0x166a12d8
  429b5c:	adc    BYTE PTR [ecx-0x6e],0x59
  429b60:	adc    DWORD PTR [ebp-0x5bc3638a],ebp
  429b66:	xor    eax,0x43845da7
  429b6b:	js     0x429bbe
  429b6d:	cmp    al,0xc8
  429b6f:	(bad)  
  429b70:	mov    edi,0xbdb1dc7b
  429b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b76:	retf   0x97ec
  429b79:	js     0x429b70
  429b7b:	sbb    ebp,ebx
  429b7d:	repnz loopne 0x429bce
  429b80:	adc    ch,dh
  429b82:	sbb    al,0x76
  429b84:	js     0x429bb2
  429b86:	or     bl,BYTE PTR [ebx-0x2e]
  429b89:	mov    eax,0xea0113be
  429b8e:	dec    eax
  429b8f:	jbe    0x429b2f
  429b91:	(bad)
  429b94:	push   0xffffffe9
  429b96:	imul   ebp,DWORD PTR [ebx+0x47da97],0x44b63b
  429ba0:	lock es stos BYTE PTR es:[edi],al
  429ba3:	adc    BYTE PTR [eiz*4-0x546c98bd],ah
  429baa:	inc    ebx
  429bab:	rcr    BYTE PTR [edx-0x34],cl
  429bae:	inc    ecx
  429baf:	cmc    
  429bb0:	sbb    ah,bh
  429bb2:	xchg   ecx,eax
  429bb3:	out    0x34,al
  429bb5:	xlat   BYTE PTR ds:[ebx]
  429bb6:	lock imul ebp,edi,0x44b3ab85
  429bbd:	add    ebp,eax
  429bbf:	adc    al,0xe1
  429bc1:	fs (bad) 
  429bc3:	div    BYTE PTR [edi-0x5b]
  429bc6:	fdiv   st,st(4)
  429bc8:	cmp    BYTE PTR [edi-0x5],al
  429bcb:	clc    
  429bcc:	mov    ebx,esp
  429bce:	jno    0x429c44
  429bd0:	xor    ebx,DWORD PTR [edi+eiz*1-0x4c]
  429bd4:	add    DWORD PTR [edi+0x5c32c8a6],0x30867b04
  429bde:	jp     0x429c19
  429be0:	add    ecx,edx
  429be2:	push   cs
  429be3:	sub    BYTE PTR [eax],ch
  429be5:	or     DWORD PTR [ebx-0x1dc80573],esi
  429beb:	mov    dh,0x4c
  429bed:	es stc 
  429bef:	test   BYTE PTR [ecx],0x72
  429bf2:	or     ebp,DWORD PTR [esi+0x2df970e9]
  429bf8:	(bad)  
  429bf9:	pop    esi
  429bfa:	stc    
  429bfb:	cwde   
  429bfc:	mov    ds:0x9fb418b7,eax
  429c01:	sbb    bh,BYTE PTR [edi]
  429c03:	jbe    0x429bfa
  429c05:	push   eax
  429c06:	(bad)  
  429c07:	cmp    al,0x5c
  429c09:	cs push ebp
  429c0b:	sbb    bh,BYTE PTR [edi+0xf]
  429c0e:	dec    eax
  429c0f:	les    esp,FWORD PTR [eax-0x45]
  429c12:	cs (bad) ss:[ecx+0x61]
  429c17:	or     edx,esi
  429c19:	test   BYTE PTR [ebp+0x53],bh
  429c1c:	std    
  429c1d:	popa   
  429c1e:	xor    ecx,0x46
  429c21:	dec    eax
  429c22:	test   al,0xa4
  429c24:	fidivr DWORD PTR [esp+eiz*8]
  429c27:	std    
  429c28:	inc    edx
  429c29:	js     0x429c7d
  429c2b:	push   eax
  429c2c:	ret    0xd151
  429c2f:	loopne 0x429c86
  429c31:	sub    BYTE PTR [edi+0x461f74a4],bh
  429c37:	pop    es
  429c38:	mov    eax,0x2d28072a
  429c3d:	cwde   
  429c3e:	adc    al,0xc4
  429c40:	jl     0x429c0b
  429c42:	call   0xbc4f151c
  429c47:	push   cs
  429c48:	mov    es,WORD PTR [ecx+0x49c62b81]
  429c4e:	and    eax,0x52
  429c51:	or     ebx,DWORD PTR [esi+0x4c0b3caf]
  429c57:	sub    DWORD PTR [eax+0x6736816e],ecx
  429c5d:	jnp    0x429c8f
  429c5f:	inc    edi
  429c60:	mov    edx,0x4b2b37ac
  429c65:	mov    eax,0x7ee8ef64
  429c6a:	shl    dl,1
  429c6c:	or     BYTE PTR [esi+0x2e288eb4],al
  429c72:	out    0xf4,al
  429c74:	push   ebx
  429c75:	jbe    0x429cef
  429c77:	pop    ebx
  429c78:	and    ecx,DWORD PTR ds:0x6b9c3e36
  429c7e:	cs push ds
  429c80:	sub    al,0x51
  429c82:	or     al,0xf0
  429c84:	rol    eax,cl
  429c86:	mov    ecx,0xc9db4201
  429c8b:	dec    edx
  429c8c:	inc    ecx
  429c8d:	pmulhuw mm2,mm0
  429c90:	retf   
  429c91:	ret    0x38e6
  429c94:	ss xor eax,0xaa130833
  429c9a:	lock jns 0x429c53
  429c9d:	or     ch,BYTE PTR [eax+0x54]
  429ca0:	sub    al,0xdf
  429ca2:	inc    ebp
  429ca3:	sbb    DWORD PTR ss:[esi-0x2bce7e19],edi
  429caa:	out    dx,al
  429cab:	mov    ah,0x4b
  429cad:	dec    esi
  429cae:	cmp    BYTE PTR [esi+ecx*2],ah
  429cb1:	in     eax,0xf8
  429cb3:	scas   al,BYTE PTR es:[edi]
  429cb4:	adc    ah,BYTE PTR [esi]
  429cb6:	loop   0x429c3d
  429cb8:	call   0x123c:0x651c6180
  429cbf:	xchg   ebp,eax
  429cc0:	sub    eax,0x40e1de82
  429cc5:	popa   
  429cc6:	push   es
  429cc7:	test   al,0xf9
  429cc9:	mov    edi,0xe8e09ca8
  429cce:	xor    al,0xf3
  429cd0:	sub    BYTE PTR [edi+edx*4+0x31],bl
  429cd4:	cld    
  429cd5:	dec    esp
  429cd6:	or     al,0xc
  429cd8:	jecxz  0x429c88
  429cda:	(bad)  
  429cdb:	lods   eax,DWORD PTR ds:[esi]
  429cdc:	test   DWORD PTR [esi-0x47],esp
  429cdf:	xor    dl,bh
  429ce1:	outs   dx,DWORD PTR ds:[esi]
  429ce2:	scas   al,BYTE PTR es:[edi]
  429ce3:	add    ah,BYTE PTR [esp+ebx*8]
  429ce6:	popa   
  429ce7:	sub    al,0x54
  429ce9:	scas   eax,DWORD PTR es:[edi]
  429cea:	cli    
  429ceb:	loop   0x429cfa
  429ced:	rol    DWORD PTR ds:0x4c78c542,1
  429cf3:	addr16 pop ebp
  429cf5:	fidiv  DWORD PTR [edx+edi*8-0x62df9d94]
  429cfc:	in     eax,0x91
  429cfe:	pop    ebp
  429cff:	jl     0x429d6d
  429d01:	mov    edi,0xb7cc44cb
  429d06:	sahf   
  429d07:	fs pop ecx
  429d09:	xchg   BYTE PTR [eax-0x15],dl
  429d0c:	push   0xdcd0e539
  429d11:	or     ebx,DWORD PTR [ebx+0x308cbbc9]
  429d17:	sahf   
  429d18:	adc    eax,0xbb5e5fdc
  429d1d:	adc    dh,BYTE PTR [esi+eiz*2]
  429d20:	sub    al,0x31
  429d22:	dec    esp
  429d23:	add    BYTE PTR [edx+0x1f58dcb1],0x52
  429d2a:	mov    ah,0x54
  429d2c:	xchg   esp,eax
  429d2d:	sti    
  429d2e:	push   edx
  429d2f:	ds jl  0x429dab
  429d32:	mov    al,ds:0xd55b88c2
  429d37:	int3   
  429d38:	sub    BYTE PTR [eax+0x2866fc5c],ah
  429d3e:	fnop   
  429d40:	out    0xb3,eax
  429d42:	les    edx,FWORD PTR [esi-0x3e]
  429d45:	push   ds
  429d46:	mov    eax,ebx
  429d48:	js     0x429d1c
  429d4a:	inc    esi
  429d4b:	ins    BYTE PTR es:[edi],dx
  429d4c:	jns    0x429d6a
  429d4e:	fiadd  DWORD PTR [ebp-0x73544000]
  429d54:	nop
  429d55:	mov    dh,0x34
  429d57:	lahf   
  429d58:	push   ss
  429d59:	icebp  
  429d5a:	std    
  429d5b:	nop
  429d5c:	xor    esi,DWORD PTR [ebp+edi*1-0x68a43ee4]
  429d63:	cld    
  429d64:	inc    ebx
  429d65:	dec    eax
  429d66:	fdivr  st,st(5)
  429d68:	rcr    BYTE PTR [eax],0xc6
  429d6b:	mul    BYTE PTR [ebp-0x60]
  429d6e:	dec    esi
  429d6f:	cld    
  429d70:	adc    esi,eax
  429d72:	or     BYTE PTR [esp+ebx*8-0x51],0x57
  429d77:	pop    esp
  429d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d79:	cmp    eax,0x98f42b61
  429d7e:	jg     0x429dd7
  429d80:	xor    al,0xc8
  429d82:	dec    esi
  429d83:	pop    ebp
  429d84:	and    ecx,0xffffffb1
  429d87:	(bad)  
  429d88:	xlat   BYTE PTR ds:[ebx]
  429d89:	lods   eax,DWORD PTR ds:[esi]
  429d8a:	in     al,dx
  429d8b:	clc    
  429d8c:	xor    al,0xb9
  429d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d8f:	push   esp
  429d90:	jne    0x429d68
  429d92:	cmp    eax,0x505c7510
  429d97:	fld    TBYTE PTR [esi+0x22]
  429d9a:	(bad)  
  429d9b:	scas   al,BYTE PTR es:[edi]
  429d9c:	mov    eax,0xadd2b1cf
  429da1:	xchg   BYTE PTR [edi],bl
  429da3:	cmp    BYTE PTR [esi],0xdc
  429da6:	jecxz  0x429d75
  429da8:	dec    edi
  429da9:	xor    ebp,ecx
  429dab:	into   
  429dac:	sub    ah,BYTE PTR [eax]
  429dae:	add    BYTE PTR [edi-0x32],al
  429db1:	push   edx
  429db2:	xchg   edx,eax
  429db3:	pop    esi
  429db4:	(bad)
  429db7:	and    al,0x85
  429db9:	fidivr DWORD PTR [edx+edx*1-0x7d]
  429dbd:	enter  0xf55a,0x48
  429dc1:	test   al,0x22
  429dc3:	in     al,0xe7
  429dc5:	pop    ecx
  429dc6:	and    BYTE PTR [ebp-0x27300f63],0x12
  429dcd:	dec    edx
  429dce:	das    
  429dcf:	jno    0x429d6c
  429dd1:	jecxz  0x429de7
  429dd3:	inc    ebx
  429dd4:	jp     0x429d88
  429dd6:	in     eax,dx
  429dd7:	cmp    eax,eax
  429dd9:	inc    ebp
  429dda:	sar    DWORD PTR [eax],cl
  429ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ddd:	jbe    0x429d72
  429ddf:	sbb    DWORD PTR [ebx],eax
  429de1:	ins    DWORD PTR es:[edi],dx
  429de2:	call   0xe81e:0xe83c5c1e
  429de9:	add    BYTE PTR [eax-0x37],0xc8
  429ded:	add    al,0xda
  429def:	jb     0x429d7a
  429df1:	repz cwde 
  429df3:	add    ch,0x2b
  429df6:	sub    BYTE PTR [eax],ah
  429df8:	(bad)  
  429df9:	lea    edi,[esi]
  429dfb:	mov    eax,ds:0x4c0e6ffc
  429e00:	sbb    dl,BYTE PTR [ebp+0x53]
  429e03:	push   edi
  429e04:	es xor al,0xb7
  429e07:	pop    ebp
  429e08:	jo     0x429e54
  429e0a:	rcr    BYTE PTR [esi+0x40a793d7],cl
  429e10:	fs xchg esp,eax
  429e12:	xchg   esi,eax
  429e13:	jno    0x429e55
  429e15:	or     al,0x1b
  429e17:	dec    ecx
  429e18:	push   esp
  429e19:	mov    WORD PTR [esi+ebp*4],?
  429e1c:	xor    BYTE PTR [ecx+0x16650c6f],0x46
  429e23:	add    BYTE PTR [eax],al
  429e25:	add    BYTE PTR [eax],al
  429e27:	add    BYTE PTR [eax+0x5149d918],al
  429e2d:	or     DWORD PTR [eax],eax
  429e2f:	add    BYTE PTR [eax],al
  429e31:	add    BYTE PTR [eax],al
  429e33:	add    BYTE PTR [ecx+0x9],dl
  429e36:	add    BYTE PTR [eax],al
  429e38:	xor    eax,DWORD PTR [eax]
  429e3a:	es jl  0x429e3d
  429e3d:	add    dh,BYTE PTR [esi]
  429e3f:	or     BYTE PTR [eax],al
  429e41:	add    ah,al
  429e43:	inc    ebp
  429e44:	add    BYTE PTR [ebp+0x18],dh
  429e47:	popa   
  429e48:	xchg   ebx,eax
  429e49:	not    BYTE PTR es:[edx]
  429e4c:	aad    0x24
  429e4e:	sbb    BYTE PTR ds:0x55f26402,ah
  429e54:	add    esp,edi
  429e56:	dec    eax
  429e57:	and    eax,0xe5c9fff9
  429e5c:	out    0xd3,eax
  429e5e:	les    ebp,FWORD PTR [esi+ecx*2-0x11]
  429e62:	cmp    ebp,DWORD PTR [eax+0x13]
  429e65:	xor    cl,BYTE PTR [edx+esi*1+0x1b00f890]
  429e6c:	jbe    0x429e4e
  429e6e:	imul   esp,ebx,0xffffffb2
  429e71:	cmp    BYTE PTR [edx-0x58],bh
  429e74:	(bad)  
  429e75:	mov    edx,0xb0488a00
  429e7a:	pop    esp
  429e7b:	lahf   
  429e7c:	(bad)  
  429e7d:	adc    BYTE PTR [edi+esi*1],ch
  429e80:	xchg   ecx,eax
  429e81:	mov    esp,ebx
  429e83:	and    BYTE PTR [esi-0x2d8b5f2a],0xd3
  429e8a:	pop    ebx
  429e8b:	inc    eax
  429e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e8d:	fdiv   QWORD PTR [eax+0x4d]
  429e90:	lea    edi,[edi+0x4ce04c43]
  429e96:	and    eax,0x38361952
  429e9b:	ret    
  429e9c:	neg    edi
  429e9e:	jo     0x429e93
  429ea0:	cld    
  429ea1:	add    al,0x87
  429ea3:	xchg   ebx,eax
  429ea4:	ins    BYTE PTR es:[edi],dx
  429ea5:	push   ebp
  429ea6:	lahf   
  429ea7:	xchg   esp,eax
  429ea8:	sbb    eax,0x96977d71
  429ead:	fmul   DWORD PTR [ebp-0x166f478f]
  429eb3:	sbb    bl,al
  429eb5:	push   ecx
  429eb6:	in     al,dx
  429eb7:	not    BYTE PTR [eax]
  429eb9:	fcom   QWORD PTR [eax+0x8]
  429ebc:	xlat   BYTE PTR ds:[ebx]
  429ebd:	dec    esi
  429ebe:	or     DWORD PTR ds:0x384c6f2,edi
  429ec4:	lds    ebx,FWORD PTR [eax-0x14f2e109]
  429eca:	jne    0x429e74
  429ecc:	push   0xe
  429ece:	retf   
  429ecf:	das    
  429ed0:	scas   eax,DWORD PTR es:[edi]
  429ed1:	add    cl,bl
  429ed3:	xchg   ecx,eax
  429ed4:	int3   
  429ed5:	(bad)  
  429ed6:	cld    
  429ed7:	push   ebx
  429ed8:	push   esi
  429ed9:	inc    ebp
  429eda:	mov    ebp,0x8ff01f85
  429edf:	cmp    al,0xef
  429ee1:	adc    edi,0x142342af
  429ee7:	sub    BYTE PTR [eax-0x7f],dh
  429eea:	lock fucomp st(0)
  429eed:	sti    
  429eee:	push   ss
  429eef:	mov    esp,0x50b07b72
  429ef4:	js     0x429f14
  429ef6:	daa    
  429ef7:	data16 loopne 0x429e93
  429efa:	add    al,0xb9
  429efc:	lods   al,BYTE PTR ds:[esi]
  429efd:	bound  ebx,QWORD PTR [edx]
  429eff:	mov    esp,0xbde00441
  429f04:	(bad)  
  429f05:	cdq    
  429f06:	add    al,0xdf
  429f08:	imul   BYTE PTR ds:0x4abecc28
  429f0e:	jl     0x429f68
  429f10:	xor    al,0x15
  429f12:	pop    ecx
  429f13:	shl    BYTE PTR [ebp-0x547d8fc7],1
  429f19:	(bad)  
  429f1a:	sub    al,0xe6
  429f1c:	hlt    
  429f1d:	js     0x429eb6
  429f1f:	ds add eax,0x591841d8
  429f25:	sbb    BYTE PTR [ebx+0x2bf1ae64],cl
  429f2b:	sti    
  429f2c:	or     eax,DWORD PTR [ecx]
  429f2e:	cmp    al,0xbf
  429f30:	inc    eax
  429f31:	sub    al,0x1
  429f33:	mov    ds:0x6037a157,eax
  429f38:	sub    eax,esi
  429f3a:	jmp    0x6c2cdab1
  429f3f:	repnz or BYTE PTR [ecx-0xc],ch
  429f43:	cdq    
  429f44:	sub    DWORD PTR [ebp+0x2c67d52e],esi
  429f4a:	stos   BYTE PTR es:[edi],al
  429f4b:	jne    0x429f64
  429f4d:	(bad)  
  429f4e:	mov    ds:0x50115302,al
  429f53:	mov    esp,DWORD PTR [ebx]
  429f55:	test   al,0x61
  429f57:	push   esp
  429f58:	pushf  
  429f59:	xor    dh,BYTE PTR [edi+0x74]
  429f5c:	(bad)  
  429f5d:	(bad)  
  429f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f60:	sar    BYTE PTR [ebp+eax*4-0x4977e330],0xb8
  429f68:	icebp  
  429f69:	dec    edi
  429f6a:	or     al,0x92
  429f6c:	jl     0x429fae
  429f6e:	rcl    ecx,1
  429f70:	pop    edi
  429f71:	sub    BYTE PTR [ebp-0x39],0xd4
  429f75:	enter  0xa864,0x18
  429f79:	pop    esi
  429f7a:	xor    DWORD PTR [esi-0x1f],edi
  429f7d:	or     dh,BYTE PTR [edx]
  429f7f:	mov    dl,ah
  429f81:	rcl    DWORD PTR [esi],cl
  429f83:	in     eax,dx
  429f84:	push   ebp
  429f85:	cmp    eax,0xdcaca61d
  429f8a:	scas   eax,DWORD PTR es:[edi]
  429f8b:	sbb    ah,BYTE PTR [ebp-0xf794f8e]
  429f91:	push   esp
  429f92:	ret    0xfc8
  429f95:	jns    0x429f7c
  429f97:	dec    edi
  429f98:	adc    bh,ah
  429f9a:	js     0x429fbd
  429f9c:	iret   
  429f9d:	dec    edx
  429f9e:	mov    WORD PTR [esp+eiz*4-0x6d6346d2],fs
  429fa5:	iret   
  429fa6:	mov    ecx,0x3349bb40
  429fab:	mov    es,eax
  429fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fae:	sub    eax,0x9b12f926
  429fb3:	or     al,BYTE PTR [eax-0x22d0c1c]
  429fb9:	mov    cl,0x31
  429fbb:	inc    edi
  429fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429fbd:	ret    0x198c
  429fc0:	repz push esp
  429fc2:	dec    edx
  429fc3:	pop    ebx
  429fc5:	repz and DWORD PTR [eax+0xd0f685],esi
  429fcc:	push   0xffffffd9
  429fce:	sbb    DWORD PTR [ebx-0x6ad8182c],0x5a705f68
  429fd8:	js     0x429fd2
  429fda:	mov    ss,esi
  429fdc:	pop    DWORD PTR [ebp+0x3]
  429fdf:	jmp    0xb49e:0xd1a01bd3
  429fe6:	les    ecx,FWORD PTR [ecx]
  429fe8:	mov    ch,0x35
  429fea:	stc    
  429feb:	(bad)  
  429fec:	fst    DWORD PTR [ecx]
  429fee:	icebp  
  429fef:	int    0xc5
  429ff1:	shl    bh,1
  429ff3:	into   
  429ff4:	call   0xfc2f1d4c
  429ff9:	cwde   
  429ffa:	push   eax
  429ffb:	jle    0x429f96
  429ffd:	or     al,0x4
  429fff:	add    eax,0x13dd4275
  42a004:	adc    al,0xa2
  42a006:	xor    bl,dh
  42a008:	sbb    edx,ebx
  42a00a:	into   
  42a00b:	jp     0x42a07d
  42a00d:	arpl   WORD PTR [ecx+0x50f3ffd8],si
  42a013:	push   ss
  42a014:	imul   esp,DWORD PTR [ebp+0x20],0xffffffa8
  42a018:	cld    
  42a019:	inc    ecx
  42a01a:	test   al,0xac
  42a01c:	(bad)  
  42a01d:	xor    eax,0x20f90ca6
  42a022:	std    
  42a023:	imul   edx,DWORD PTR [ecx],0xffffff8f
  42a026:	sahf   
  42a027:	scas   eax,DWORD PTR es:[edi]
  42a028:	(bad)  
  42a02a:	inc    esp
  42a02b:	push   esp
  42a02c:	pop    edx
  42a02d:	pop    ecx
  42a02e:	mov    al,0x1b
  42a030:	xchg   esi,eax
  42a031:	pop    ebx
  42a032:	xchg   ebx,eax
  42a033:	in     al,dx
  42a034:	je     0x42a028
  42a036:	pop    esi
  42a037:	cdq    
  42a038:	adc    ah,BYTE PTR ds:0x14107918
  42a03e:	rcl    edx,cl
  42a040:	push   0x2d62efe9
  42a045:	xor    al,0xe1
  42a047:	rcr    esi,cl
  42a049:	imul   BYTE PTR [esi]
  42a04b:	scas   eax,DWORD PTR es:[edi]
  42a04c:	js     0x42a073
  42a04e:	pop    eax
  42a04f:	not    dl
  42a051:	js     0x42a0a6
  42a053:	dec    eax
  42a054:	fstp   DWORD PTR [ecx-0x4c]
  42a057:	jl     0x429fe6
  42a059:	test   BYTE PTR [edi+0x1e],ch
  42a05c:	sahf   
  42a05d:	mov    ds:0xfc24fee3,eax
  42a062:	frstor cs:[ebp+0x7f]
  42a066:	pusha  
  42a067:	pop    eax
  42a068:	aaa    
  42a069:	dec    eax
  42a06a:	xchg   esp,eax
  42a06b:	add    eax,0xbcb76507
  42a070:	jbe    0x42a077
  42a072:	ins    BYTE PTR es:[edi],dx
  42a073:	das    
  42a074:	sub    ah,BYTE PTR [eax-0x7a12b88c]
  42a07a:	pop    ds
  42a07b:	nop
  42a07c:	out    0x5b,eax
  42a07e:	add    DWORD PTR [edi-0x2a],ecx
  42a081:	outs   dx,WORD PTR ds:[esi]
  42a083:	in     al,dx
  42a084:	mov    ah,0x6e
  42a086:	lds    ebp,FWORD PTR [edx+0x34]
  42a089:	sbb    bl,BYTE PTR [ebx]
  42a08b:	or     BYTE PTR [edx+0x509c205c],ah
  42a091:	push   eax
  42a092:	or     bh,bl
  42a094:	xchg   edi,eax
  42a095:	mov    bl,0x80
  42a097:	jmp    0xc79a:0x9a0a5105
  42a09e:	and    DWORD PTR [edi+ebp*4+0x611a5bf7],0xffffffb5
  42a0a6:	adc    BYTE PTR [esi+0x41a4dec8],al
  42a0ac:	push   cs
  42a0ad:	popa   
  42a0ae:	loope  0x42a0c9
  42a0b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a0b1:	jo     0x42a0a4
  42a0b3:	mov    ds:0xfc364618,eax
  42a0b8:	push   0x2
  42a0ba:	xchg   esp,eax
  42a0bb:	jno    0x42a07f
  42a0bd:	scas   eax,DWORD PTR es:[edi]
  42a0be:	sbb    BYTE PTR [esp+ebx*4+0x49],ch
  42a0c2:	sar    BYTE PTR [eax+0x5acab62],0xed
  42a0c9:	dec    edi
  42a0ca:	dec    ebp
  42a0cb:	call   0xf73834ac
  42a0d0:	jg     0x42a059
  42a0d2:	fwait
  42a0d3:	cli    
  42a0d4:	mov    ds:0x26529d00,eax
  42a0d9:	mov    bl,0xe3
  42a0db:	and    DWORD PTR [esi],0x5d59a810
  42a0e1:	popf   
  42a0e2:	xor    BYTE PTR [eax-0x33acf838],dl
  42a0e8:	clc    
  42a0e9:	js     0x42a156
  42a0eb:	mov    WORD PTR ds:[ecx],gs
  42a0ee:	inc    edx
  42a0ef:	or     dh,al
  42a0f1:	push   cs
  42a0f2:	mov    WORD PTR [ecx-0x1c92c17e],gs
  42a0f8:	or     DWORD PTR [esp+eiz*8],edx
  42a0fb:	out    dx,al
  42a0fc:	inc    ebx
  42a0fd:	gs pop es
  42a0ff:	cmp    BYTE PTR [ecx-0x1efe43a7],dh
  42a105:	shl    DWORD PTR [eax+ecx*1-0x1fb4596d],1
  42a10c:	out    0xc,al
  42a10e:	dec    edi
  42a10f:	inc    eax
  42a110:	enter  0x314,0x43
  42a114:	add    al,0xd
  42a116:	inc    ecx
  42a117:	outs   dx,DWORD PTR ds:[esi]
  42a118:	jmp    0x9fedf0ea
  42a11d:	sub    BYTE PTR [ecx+0x6d029ac3],bh
  42a123:	adc    eax,0xd64c06ba
  42a128:	jecxz  0x42a0ba
  42a12a:	ror    DWORD PTR [esi-0xb7863e4],cl
  42a130:	add    bh,BYTE PTR [eax]
  42a132:	add    al,0x9c
  42a134:	(bad)  
  42a135:	push   ecx
  42a136:	into   
  42a137:	xlat   BYTE PTR ds:[ebx]
  42a138:	sbb    BYTE PTR [esi+edi*4],bl
  42a13b:	sti    
  42a13c:	or     DWORD PTR [edi+0x3c9ecf19],ecx
  42a142:	pusha  
  42a143:	lahf   
  42a144:	cmc    
  42a145:	cli    
  42a146:	xlat   BYTE PTR ds:[ebx]
  42a147:	rcr    ah,1
  42a149:	and    DWORD PTR [eax-0x2c],0x66d15b2
  42a150:	les    edx,FWORD PTR [edx+ebx*1-0x7c]
  42a154:	pop    eax
  42a155:	daa    
  42a156:	pop    ss
  42a157:	cli    
  42a158:	push   esp
  42a159:	mov    bh,0x1a
  42a15b:	clc    
  42a15c:	sub    al,0xf
  42a15e:	fiadd  WORD PTR [edi]
  42a160:	loop   0x42a15a
  42a162:	and    al,0xac
  42a164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a165:	push   eax
  42a166:	or     eax,0xe0d18e07
  42a16b:	mov    DWORD PTR [edi-0x7cbd8b23],esi
  42a171:	dec    edi
  42a172:	sti    
  42a173:	add    bl,BYTE PTR [edx+0x69]
  42a176:	clc    
  42a177:	cwde   
  42a178:	out    dx,al
  42a179:	or     eax,0x83d1fc35
  42a17e:	pop    eax
  42a17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a180:	inc    eax
  42a181:	dec    edx
  42a182:	jl     0x42a1e8
  42a184:	inc    esp
  42a185:	jb     0x42a1d7
  42a187:	xor    edi,edx
  42a189:	fs lahf 
  42a18b:	jge    0x42a203
  42a18d:	fwait
  42a18e:	int    0x8d
  42a190:	pop    es
  42a191:	data16 mov BYTE PTR [esi],bh
  42a194:	out    dx,al
  42a195:	lock pop edx
  42a197:	xchg   esp,eax
  42a198:	sbb    ecx,DWORD PTR [ecx]
  42a19a:	inc    edi
  42a19b:	lods   al,BYTE PTR ds:[esi]
  42a19c:	pop    es
  42a19d:	xchg   edi,eax
  42a19e:	inc    ebx
  42a19f:	add    eax,0xfcedf3bc
  42a1a4:	ror    BYTE PTR [eax+0x270f3e73],1
  42a1aa:	adc    cl,BYTE PTR [edx+eax*2]
  42a1ad:	js     0x42a1c5
  42a1af:	xchg   esi,eax
  42a1b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1b1:	cmp    eax,0xb5250f2b
  42a1b6:	pushf  
  42a1b7:	jge    0x42a18f
  42a1b9:	mov    ch,0x7a
  42a1bb:	and    al,0xbb
  42a1bd:	sub    eax,0x9966c063
  42a1c2:	aaa    
  42a1c3:	(bad)  
  42a1c5:	mov    ebp,0xc8e47a13
  42a1ca:	pop    eax
  42a1cb:	(bad)  
  42a1cc:	mov    esp,0x421a850d
  42a1d1:	mov    WORD PTR [edi+0x26],gs
  42a1d4:	xchg   ebp,eax
  42a1d5:	or     eax,DWORD PTR [ebp+eax*8-0x7f4f33ac]
  42a1dc:	jae    0x42a19e
  42a1de:	sahf   
  42a1df:	and    BYTE PTR ds:0x7dd4d71c,bl
  42a1e5:	or     eax,ecx
  42a1e7:	jg     0x42a223
  42a1e9:	jg     0x42a19c
  42a1eb:	arpl   ax,di
  42a1ed:	lea    esi,cs:[edi]
  42a1f0:	xchg   esi,eax
  42a1f1:	push   esi
  42a1f2:	cmp    DWORD PTR [edi+esi*2],ebx
  42a1f5:	sbb    al,0x1b
  42a1f7:	inc    edi
  42a1f8:	adc    eax,0xa98196c7
  42a1fd:	push   edx
  42a1fe:	les    edx,FWORD PTR [ebp+0x5409ed38]
  42a204:	jle    0x42a278
  42a206:	test   al,ch
  42a208:	adc    eax,0xb94122f6
  42a20d:	pop    es
  42a20e:	(bad)  
  42a20f:	cwde   
  42a210:	or     al,0x25
  42a212:	or     esp,ecx
  42a214:	int    0xc6
  42a216:	popa   
  42a217:	push   eax
  42a218:	xor    DWORD PTR [eax],0x8bc23e41
  42a21e:	lds    esp,FWORD PTR [ebp+ebp*1-0x40042791]
  42a225:	call   0xb9d11363
  42a22a:	jle    0x42a228
  42a22c:	sub    al,0x94
  42a22e:	mov    ch,0x1c
  42a230:	call   0x20a6db05
  42a235:	inc    esi
  42a236:	xchg   esi,eax
  42a237:	(bad)  
  42a238:	fstp   DWORD PTR [ecx]
  42a23a:	loope  0x42a1c9
  42a23c:	jmp    0x42a282
  42a23e:	mov    eax,0xc515bcea
  42a243:	mov    DWORD PTR [edx+0x2d],esi
  42a246:	push   0x94ac360d
  42a24b:	in     eax,dx
  42a24c:	add    al,0xda
  42a24e:	mov    WORD PTR [eax],ss
  42a250:	into   
  42a251:	mov    ds,WORD PTR [edx-0x3]
  42a254:	fidiv  WORD PTR [esi+0x67]
  42a257:	call   0x2fb41390
  42a25c:	cmp    eax,0xbcc736db
  42a261:	pop    eax
  42a262:	out    dx,eax
  42a263:	aam    0xeb
  42a265:	daa    
  42a266:	sti    
  42a267:	lea    ecx,ds:[esi-0x5ff23084]
  42a26e:	xchg   ebx,eax
  42a26f:	cmp    al,0x59
  42a271:	and    eax,0xb017a0ef
  42a276:	loopne 0x42a29b
  42a278:	jl     0x42a297
  42a27a:	dec    DWORD PTR [eax+ecx*2-0x605f29da]
  42a281:	xchg   ecx,eax
  42a282:	fwait
  42a283:	pop    es
  42a284:	mov    ch,BYTE PTR [ebx+ecx*4-0x14]
  42a288:	and    al,0xb3
  42a28a:	add    al,al
  42a28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a28d:	sahf   
  42a28e:	nop
  42a28f:	sbb    eax,0x308cb95
  42a294:	jno    0x42a26c
  42a296:	sub    dh,BYTE PTR [ebx+esi*8+0x3a740c60]
  42a29d:	push   ecx
  42a29e:	outs   dx,BYTE PTR ds:[esi]
  42a29f:	push   esp
  42a2a0:	pop    esp
  42a2a1:	jmp    0xd766a246
  42a2a6:	mov    ds:0xd980fd1f,eax
  42a2ab:	xchg   DWORD PTR [ecx-0x1b],ebp
  42a2ae:	inc    esi
  42a2af:	imul   eax,edi,0x6e1ea438
  42a2b5:	mov    esi,0x35444132
  42a2ba:	mov    bl,0xc8
  42a2bc:	out    dx,al
  42a2bd:	mov    ds:0x5cfd2ecd,al
  42a2c2:	dec    eax
  42a2c3:	out    dx,al
  42a2c4:	in     al,dx
  42a2c5:	mov    al,ds:0xe908632a
  42a2ca:	xchg   ecx,eax
  42a2cb:	movaps xmm2,XMMWORD PTR [edx+ecx*4-0xeff8fc0]
  42a2d3:	inc    ecx
  42a2d4:	inc    edi
  42a2d5:	push   ss
  42a2d6:	mov    eax,0x9cd5a22b
  42a2db:	(bad)  [ebx+0x50dc0cb6]
  42a2e1:	add    al,0x1
  42a2e3:	bound  esp,QWORD PTR [esi-0x26]
  42a2e6:	push   ebx
  42a2e7:	jb     0x42a2e9
  42a2e9:	or     BYTE PTR [eax+0x12f7171f],ch
  42a2ef:	scas   eax,DWORD PTR es:[edi]
  42a2f0:	sbb    ebp,DWORD PTR [eax-0x60070ed8]
  42a2f6:	das    
  42a2f7:	(bad)  
  42a2f8:	mov    ?,WORD PTR [ecx+0x21324acc]
  42a2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2ff:	loope  0x42a2e5
  42a301:	cmp    ebx,DWORD PTR [edx]
  42a303:	lock mov BYTE PTR [esi+0x15],dh
  42a307:	xor    BYTE PTR [ebp-0x51],bl
  42a30a:	add    DWORD PTR [edx],ecx
  42a30c:	adc    al,0x4
  42a30e:	cmp    al,0xcc
  42a310:	in     al,0xfe
  42a312:	mov    ah,0x79
  42a314:	lahf   
  42a315:	cmp    BYTE PTR [edx+0x23],bl
  42a318:	dec    ecx
  42a319:	mov    ecx,0xfc565ad3
  42a31e:	loopne 0x42a2b4
  42a320:	loope  0x42a369
  42a322:	loop   0x42a33c
  42a324:	jmp    0x404717b5
  42a329:	pop    ebp
  42a32a:	sahf   
  42a32b:	xchg   edi,eax
  42a32c:	push   esp
  42a32d:	hlt    
  42a32e:	fimul  DWORD PTR [ebx]
  42a330:	sub    BYTE PTR [edi+0x581ba345],dl
  42a336:	icebp  
  42a337:	mov    dh,0xa8
  42a339:	dec    esp
  42a33a:	inc    edx
  42a33b:	in     eax,0x31
  42a33d:	xor    ebp,DWORD PTR [ebp-0x64]
  42a340:	jae    0x42a305
  42a342:	jo     0x42a350
  42a344:	loope  0x42a302
  42a346:	xor    ch,BYTE PTR [edx+eiz*8]
  42a349:	call   0x30cebb88
  42a34e:	sbb    bh,BYTE PTR [ecx]
  42a350:	loop   0x42a2d7
  42a352:	cwde   
  42a353:	add    bh,BYTE PTR [ebx+edx*1]
  42a356:	ja     0x42a3a8
  42a358:	pop    edx
  42a359:	push   ds
  42a35a:	xchg   ecx,eax
  42a35b:	aas    
  42a35c:	xor    BYTE PTR [eax-0x6e],ah
  42a35f:	jnp    0x42a2fc
  42a361:	ds ins BYTE PTR es:[edi],dx
  42a363:	mov    BYTE PTR [edi],al
  42a365:	out    dx,al
  42a366:	test   BYTE PTR [ebx+edx*8],dl
  42a369:	aaa    
  42a36a:	out    0xa4,al
  42a36c:	fs push eax
  42a36e:	fsubr  QWORD PTR [edx+esi*4]
  42a371:	test   BYTE PTR [ebp-0x7c],ah
  42a374:	lods   al,BYTE PTR ds:[esi]
  42a375:	xor    BYTE PTR [ecx+0x96250ff],al
  42a37b:	pop    ss
  42a37c:	stos   BYTE PTR es:[edi],al
  42a37d:	imul   ecx,DWORD PTR [ecx-0x6a],0xa0bd740b
  42a384:	mov    ebx,0x4a22bb2b
  42a389:	call   0x58c2:0xbf485a98
  42a390:	cwde   
  42a391:	push   edx
  42a392:	cdq    
  42a393:	mov    esp,0x890927ed
  42a398:	mov    esi,0x6449ecfe
  42a39d:	or     bl,ch
  42a39f:	jge    0x42a340
  42a3a1:	loopne 0x42a35c
  42a3a3:	leave  
  42a3a4:	fisttp DWORD PTR [eax+0x579fc539]
  42a3aa:	cli    
  42a3ab:	mov    ?,WORD PTR [esi]
  42a3ad:	inc    ebx
  42a3ae:	lods   al,BYTE PTR ds:[esi]
  42a3af:	mov    BYTE PTR [eax-0x70],cl
  42a3b2:	test   DWORD PTR [edx+ebp*8],esi
  42a3b5:	pusha  
  42a3b6:	sti    
  42a3b7:	rcr    BYTE PTR [ebp+0x5],1
  42a3ba:	stos   DWORD PTR es:[edi],eax
  42a3bb:	cmp    ebx,ebx
  42a3bd:	sub    eax,DWORD PTR [edi]
  42a3bf:	in     eax,dx
  42a3c0:	js     0x42a40a
  42a3c2:	addr16 popa 
  42a3c4:	or     al,0x91
  42a3c6:	or     ebp,DWORD PTR [ebp+eax*2-0x723f4064]
  42a3cd:	adc    DWORD PTR [edx],esi
  42a3cf:	fsub   QWORD PTR [esi+eiz*4+0x6be9dac0]
  42a3d6:	jne    0x42a392
  42a3d8:	jg     0x42a3fb
  42a3da:	outs   dx,DWORD PTR ds:[esi]
  42a3db:	in     al,0x7c
  42a3dd:	mov    ds:0x1cacf8c0,eax
  42a3e2:	dec    edx
  42a3e3:	int3   
  42a3e4:	or     BYTE PTR [edx],cl
  42a3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3e7:	mov    edx,eax
  42a3e9:	jmp    0x40da:0xb0121aff
  42a3f0:	push   edx
  42a3f1:	pop    ds
  42a3f2:	addr16 aam 0x61
  42a3f5:	dec    edi
  42a3f6:	aam    0xb0
  42a3f8:	imul   DWORD PTR [esi]
  42a3fa:	(bad)  
  42a3fb:	int3   
  42a3fc:	test   eax,0x59f84912
  42a401:	outs   dx,DWORD PTR ds:[esi]
  42a402:	jmp    0x1c9b:0x44408c0
  42a409:	mov    bh,0x4a
  42a40b:	ins    BYTE PTR es:[edi],dx
  42a40c:	sub    cl,bh
  42a40e:	xchg   esi,eax
  42a40f:	int    0x1d
  42a411:	inc    eax
  42a412:	lods   eax,DWORD PTR ds:[esi]
  42a413:	add    al,0xe9
  42a415:	cmc    
  42a416:	mov    al,0xc3
  42a418:	cmp    DWORD PTR ds:0xbd57d1e8,edi
  42a41e:	enter  0xf3fa,0xb7
  42a422:	mov    ds:0x7578190c,al
  42a427:	hlt    
  42a428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a429:	out    0x35,eax
  42a42b:	adc    esi,DWORD PTR [eax]
  42a42d:	dec    esi
  42a42e:	xchg   ebx,eax
  42a42f:	stos   DWORD PTR es:[edi],eax
  42a430:	push   edi
  42a431:	adc    DWORD PTR [edi-0xb],ebp
  42a434:	in     al,dx
  42a435:	push   esp
  42a436:	loopne 0x42a4ae
  42a438:	mov    ch,0xb5
  42a43a:	mov    ds:0xfc4e438b,al
  42a43f:	xchg   esp,eax
  42a440:	je     0x42a3d9
  42a442:	jno    0x42a461
  42a444:	dec    esp
  42a445:	aaa    
  42a446:	mov    edx,0x5cd00c20
  42a44b:	aad    0xb
  42a44d:	(bad)  
  42a44e:	jmp    0x42a49e
  42a450:	inc    esp
  42a451:	sbb    ebx,DWORD PTR [esi]
  42a453:	test   BYTE PTR [ecx],dl
  42a455:	int3   
  42a456:	das    
  42a457:	test   DWORD PTR [eax+0x21e9b468],esp
  42a45d:	dec    edi
  42a45e:	add    eax,0x8ce4a4be
  42a463:	ds dec ebx
  42a465:	xchg   esi,eax
  42a466:	aaa    
  42a467:	ret    0xb528
  42a46a:	div    BYTE PTR [ecx+esi*2]
  42a46d:	stos   DWORD PTR es:[edi],eax
  42a46e:	jbe    0x42a4ee
  42a470:	fscale 
  42a472:	std    
  42a473:	fs pop eax
  42a475:	adc    cl,BYTE PTR [ebx-0x7f]
  42a478:	cmp    eax,0x909c4ac6
  42a47d:	jl     0x42a4d2
  42a47f:	xchg   ebp,eax
  42a480:	mov    WORD PTR [edi+0x26],fs
  42a483:	fisub  WORD PTR [ecx]
  42a485:	(bad)  
  42a486:	mov    al,ds:0x9ce0a945
  42a48b:	out    dx,eax
  42a48c:	xor    eax,0x41482d7e
  42a491:	loop   0x42a47f
  42a493:	mov    dh,0x7c
  42a495:	std    
  42a496:	int    0xf6
  42a498:	ins    BYTE PTR es:[edi],dx
  42a499:	inc    ecx
  42a49a:	das    
  42a49b:	and    DWORD PTR [esi],esp
  42a49d:	dec    ecx
  42a49e:	push   ss
  42a49f:	xchg   DWORD PTR [eax],eax
  42a4a1:	nop
  42a4a2:	jne    0x42a479
  42a4a4:	(bad)  
  42a4a5:	jmp    0x42a48c
  42a4a7:	jmp    0xcb04:0x82b477cf
  42a4ae:	adc    cl,BYTE PTR [edi-0x27f31704]
  42a4b4:	(bad)  
  42a4b5:	call   0x63dd:0x97de3b95
  42a4bc:	and    cl,0x1e
  42a4bf:	es jnp 0x42a48c
  42a4c2:	outs   dx,DWORD PTR ds:[esi]
  42a4c3:	dec    esp
  42a4c4:	cmp    BYTE PTR [esp+esi*8-0x71edd730],ah
  42a4cb:	icebp  
  42a4cc:	repz mov cs,eax
  42a4cf:	push   ecx
  42a4d0:	xor    DWORD PTR [ebp-0x74],ebp
  42a4d3:	mov    edx,0xec67ea20
  42a4d8:	add    ebx,DWORD PTR [ecx+0x32]
  42a4db:	pop    ecx
  42a4dc:	repz (bad) 
  42a4de:	dec    ebx
  42a4df:	mov    ecx,0xde6b0f10
  42a4e4:	sti    
  42a4e5:	lods   al,BYTE PTR ds:[esi]
  42a4e6:	or     al,0x67
  42a4e8:	jo     0x42a4a2
  42a4ea:	call   0x9ec59852
  42a4ef:	(bad)  
  42a4f1:	fmul   QWORD PTR fs:[esi-0x4a3f2480]
  42a4f8:	dec    eax
  42a4f9:	in     eax,dx
  42a4fa:	push   ebp
  42a4fb:	add    bl,dh
  42a4fd:	adc    DWORD PTR [ecx],ebp
  42a4ff:	inc    edx
  42a500:	mov    edx,esp
  42a502:	sub    cl,BYTE PTR [esi+0x62e94324]
  42a508:	out    dx,al
  42a509:	cmp    DWORD PTR [ebx+0x78ccdc00],edx
  42a50f:	pop    ebp
  42a510:	xchg   esi,eax
  42a511:	lock mov al,ds:0xf0f975ea
  42a517:	inc    ebp
  42a518:	pop    ecx
  42a519:	outs   dx,DWORD PTR ds:[esi]
  42a51a:	ror    esi,0x67
  42a51d:	daa    
  42a51e:	dec    eax
  42a51f:	adc    al,0x40
  42a521:	sub    BYTE PTR [ebp+0x3fa41a98],ch
  42a527:	sar    DWORD PTR [eax],1
  42a529:	xchg   ecx,eax
  42a52a:	out    0x54,al
  42a52c:	dec    edx
  42a52d:	and    eax,0x5cdbe18d
  42a532:	push   eax
  42a533:	and    edx,DWORD PTR [esi]
  42a535:	je     0x42a4c8
  42a537:	in     al,0x9f
  42a539:	lahf   
  42a53a:	add    al,0xa0
  42a53c:	dec    ecx
  42a53d:	js     0x42a5b1
  42a53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a540:	imul   ebx,DWORD PTR [ebp-0x6fbdd74d],0xffffffed
  42a547:	test   DWORD PTR [esi+0x4c2c0956],0xad8118e3
  42a551:	cmc    
  42a552:	mov    eax,0x1570bbc7
  42a557:	push   ebx
  42a558:	cwde   
  42a559:	inc    edx
  42a55a:	jns    0x42a530
  42a55c:	cmp    BYTE PTR [ebx+0x18],cl
  42a55f:	xchg   esi,eax
  42a560:	jle    0x42a5cb
  42a562:	push   ebp
  42a563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a564:	stos   DWORD PTR es:[edi],eax
  42a565:	mov    ebx,0x80b33c3a
  42a56a:	mov    ch,0x6d
  42a56c:	jecxz  0x42a5dd
  42a56e:	loope  0x42a4f1
  42a570:	pusha  
  42a571:	push   ebp
  42a572:	cmp    ah,al
  42a574:	push   esi
  42a575:	imul   BYTE PTR [ebp+0x15]
  42a578:	add    al,0x84
  42a57a:	xchg   bl,ah
  42a57c:	jge    0x42a5ac
  42a57e:	or     edi,DWORD PTR [esi+ebp*1]
  42a581:	pop    ebp
  42a582:	test   al,0x8a
  42a584:	mov    dl,0x9f
  42a586:	dec    edx
  42a587:	retf   
  42a588:	inc    ebx
  42a589:	mov    ch,0xff
  42a58b:	push   eax
  42a58c:	mov    ebx,0xe9df7bd5
  42a591:	fwait
  42a592:	test   eax,0x8faa742a
  42a597:	ret    0x375c
  42a59a:	xchg   eax,ebx
  42a59c:	and    al,0x98
  42a59e:	pop    ecx
  42a59f:	push   ebp
  42a5a0:	jg     0x42a5c0
  42a5a2:	cdq    
  42a5a3:	mov    bh,0x46
  42a5a5:	loop   0x42a563
  42a5a7:	ret    0x163c
  42a5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a5ac:	cmp    DWORD PTR [ebx+0x3930e0ed],edi
  42a5b2:	(bad)  
  42a5b3:	pop    edi
  42a5b4:	mov    bh,cl
  42a5b6:	xor    cl,bh
  42a5b8:	mov    BYTE PTR [eax],cl
  42a5ba:	mov    ah,BYTE PTR [ebx+edx*4-0x41abbe3]
  42a5c1:	lods   al,BYTE PTR ds:[esi]
  42a5c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5c3:	je     0x42a61d
  42a5c5:	(bad)  
  42a5c6:	repz (bad) 
  42a5c8:	cmp    al,0x25
  42a5ca:	rcl    BYTE PTR ds:0xe0a65728,1
  42a5d0:	or     al,dl
  42a5d2:	xor    esi,esp
  42a5d4:	pop    edx
  42a5d5:	(bad)  
  42a5d7:	imul   ebx,DWORD PTR [eax-0x56],0x76
  42a5db:	sub    BYTE PTR [esi+eax*8+0x240a5423],bl
  42a5e2:	add    al,0x3c
  42a5e4:	push   ebx
  42a5e5:	shr    BYTE PTR [edx-0x7c64d615],0xae
  42a5ec:	call   0x55168ac9
  42a5f1:	mov    ebx,DWORD PTR [edx-0x2330dd4d]
  42a5f7:	or     BYTE PTR [ebx-0x48],ah
  42a5fa:	stc    
  42a5fb:	cwde   
  42a5fc:	mov    DWORD PTR [edx+0x63],esp
  42a5ff:	ret    
  42a600:	sub    al,0x6f
  42a602:	cmp    DWORD PTR [eax+0x15],edx
  42a605:	xor    BYTE PTR [esi+0x70d4ddfd],ah
  42a60b:	xlat   BYTE PTR ds:[ebx]
  42a60c:	rcr    edx,cl
  42a60e:	jae    0x42a66c
  42a610:	sbb    bl,ah
  42a612:	clc    
  42a613:	and    ecx,DWORD PTR [edi]
  42a615:	and    bl,BYTE PTR [ebx-0x348826df]
  42a61b:	sbb    al,0x94
  42a61d:	or     bl,cl
  42a61f:	jae    0x42a613
  42a621:	ret    0x8091
  42a624:	inc    eax
  42a625:	in     eax,dx
  42a626:	mov    WORD PTR [eax],ss
  42a628:	push   ebx
  42a629:	mov    ds:0xe83e949e,eax
  42a62e:	jb     0x42a691
  42a630:	jne    0x42a632
  42a632:	test   BYTE PTR [edx],dh
  42a634:	inc    BYTE PTR [esp+ecx*1+0x61]
  42a638:	fisttp QWORD PTR [edi+eiz*2]
  42a63b:	xchg   ecx,eax
  42a63c:	pop    esi
  42a63d:	add    dh,BYTE PTR [eax+esi*1+0xb6ffb4d]
  42a644:	aad    0x39
  42a646:	add    dl,BYTE PTR ss:[eax+ebp*1+0x1b]
  42a64b:	lahf   
  42a64c:	mov    eax,ds:0xe20d3d27
  42a651:	js     0x42a69f
  42a653:	mov    al,es:0xe8e03839
  42a659:	dec    edi
  42a65a:	and    BYTE PTR [ebx],bh
  42a65c:	rcl    BYTE PTR [edi],cl
  42a65e:	jns    0x42a623
  42a660:	xchg   ebx,eax
  42a661:	sub    DWORD PTR [ebp+0x44],ecx
  42a664:	sub    al,0x2d
  42a666:	cmp    DWORD PTR [eax-0x44],edi
  42a669:	mov    ebp,0x78684949
  42a66e:	adc    dl,BYTE PTR [ecx]
  42a670:	mov    esi,0x50744118
  42a675:	mov    WORD PTR [edi+edx*2],?
  42a678:	mov    ecx,edi
  42a67a:	sbb    esp,DWORD PTR ds:0xcb349f75
  42a680:	lahf   
  42a681:	jne    0x42a694
  42a683:	push   ecx
  42a684:	add    ebp,DWORD PTR [eax-0x78]
  42a687:	pop    eax
  42a688:	out    dx,al
  42a689:	mov    edx,DWORD PTR [edx-0x3a]
  42a68c:	jno    0x42a676
  42a68e:	sub    ecx,ecx
  42a690:	jl     0x42a657
  42a692:	add    BYTE PTR [ecx+esi*1],al
  42a695:	call   0x7f12:0xa0d0e7ea
  42a69c:	sti    
  42a69d:	imul   ebp,eax,0xffffffd9
  42a6a0:	jmp    0x42a691
  42a6a2:	les    esi,FWORD PTR [ebx+eax*2+0x2e75963c]
  42a6a9:	out    dx,al
  42a6aa:	xchg   edi,eax
  42a6ab:	ins    BYTE PTR es:[edi],dx
  42a6ac:	aam    0x0
  42a6ae:	dec    ecx
  42a6af:	cmp    al,0xb4
  42a6b1:	push   0xfb90783a
  42a6b6:	dec    ecx
  42a6b7:	fisubr WORD PTR [ebx+0x4f0f1889]
  42a6bd:	mov    ah,0x54
  42a6bf:	aas    
  42a6c0:	xchg   esp,eax
  42a6c1:	ret    0x2d18
  42a6c4:	loopne 0x42a733
  42a6c6:	fcomp  DWORD PTR [edi-0x5ae1ed5e]
  42a6cc:	(bad)  
  42a6cd:	aam    0x2f
  42a6cf:	cld    
  42a6d0:	int3   
  42a6d1:	cmp    dh,bh
  42a6d3:	nop
  42a6d4:	sti    
  42a6d5:	add    dh,BYTE PTR [edi+eiz*1-0x5c]
  42a6d9:	dec    ebx
  42a6da:	gs xchg ebx,eax
  42a6dc:	sbb    eax,0x2a4f775b
  42a6e1:	enter  0x1473,0x74
  42a6e5:	jae    0x42a6fb
  42a6e7:	sub    bh,BYTE PTR [eax+0x11]
  42a6ea:	in     al,dx
  42a6eb:	push   0xa
  42a6ed:	dec    ecx
  42a6ee:	xchg   edi,eax
  42a6ef:	xor    esi,DWORD PTR [eax]
  42a6f1:	add    al,0x1b
  42a6f3:	adc    ch,dl
  42a6f5:	fsubr  st,st(4)
  42a6f7:	std    
  42a6f8:	sbb    DWORD PTR [ecx+edi*2-0x246d4738],eax
  42a6ff:	jl     0x42a723
  42a701:	stos   BYTE PTR es:[edi],al
  42a702:	iret   
  42a703:	adc    ebx,ebx
  42a705:	fdiv   QWORD PTR [ecx]
  42a707:	adc    esp,DWORD PTR [ecx-0x657ea152]
  42a70d:	inc    ebp
  42a70e:	add    BYTE PTR [eax-0x3ad52789],dh
  42a714:	(bad)  
  42a715:	int3   
  42a716:	pushf  
  42a717:	and    al,0xb8
  42a719:	push   esp
  42a71a:	inc    esp
  42a71b:	and    al,0xde
  42a71d:	mov    cl,BYTE PTR [edi-0x1d]
  42a720:	dec    eax
  42a721:	pop    esi
  42a722:	dec    ebx
  42a723:	fs jl  0x42a71b
  42a726:	aas    
  42a727:	inc    ebp
  42a728:	shl    eax,0x1f
  42a72b:	dec    eax
  42a72c:	sbb    DWORD PTR [ebx],eax
  42a72e:	out    dx,eax
  42a72f:	mov    dl,0x83
  42a731:	mov    eax,0x5f932914
  42a736:	imul   esi,ebp,0x46
  42a739:	jg     0x42a6ea
  42a73b:	cmp    BYTE PTR [ecx+0x1c],ah
  42a73e:	dec    esp
  42a73f:	fild   DWORD PTR [edx+0x47]
  42a742:	rcl    DWORD PTR [esp+ebx*2],1
  42a745:	aas    
  42a746:	mov    al,ds:0xc90881f9
  42a74b:	popa   
  42a74c:	dec    ebp
  42a74d:	add    al,0x69
  42a74f:	aas    
  42a750:	test   eax,0x4d081946
  42a755:	out    dx,al
  42a756:	sub    BYTE PTR [ecx],bh
  42a758:	shr    BYTE PTR [ecx+0x12],1
  42a75b:	pop    ecx
  42a75c:	add    DWORD PTR [ebp-0x16],ecx
  42a75f:	dec    esp
  42a760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a761:	cld    
  42a762:	push   edx
  42a763:	mov    edx,DWORD PTR [edx]
  42a765:	retf   
  42a766:	daa    
  42a767:	loop   0x42a7d9
  42a769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a76a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a76b:	push   ds
  42a76c:	add    ebp,DWORD PTR [ebp-0x6b540b8f]
  42a772:	add    dh,bl
  42a774:	dec    eax
  42a775:	mov    edi,0x515fbb1c
  42a77a:	cmp    al,0x7f
  42a77c:	xor    dl,BYTE PTR [edi-0x7f]
  42a77f:	pop    ds
  42a780:	js     0x42a72c
  42a782:	cmp    al,BYTE PTR [eax]
  42a784:	add    BYTE PTR [eax],al
  42a786:	add    BYTE PTR [eax],al
  42a788:	call   FWORD PTR [ebx]
  42a78a:	push   esi
  42a78b:	push   esp
  42a78c:	push   ecx
  42a78d:	or     DWORD PTR [eax],eax
  42a78f:	add    BYTE PTR [eax],al
  42a791:	add    BYTE PTR [eax],al
  42a793:	add    BYTE PTR [ecx+0x9],dl
  42a796:	add    BYTE PTR [eax],al
  42a798:	xor    al,0x0
  42a79a:	es jl  0x42a79d
  42a79d:	add    dh,BYTE PTR [esi]
  42a79f:	or     BYTE PTR [eax],al
  42a7a1:	add    ah,al
  42a7a3:	inc    ebp
  42a7a4:	add    BYTE PTR [edx+0x3b],al
  42a7a7:	idiv   al
  42a7a9:	std    
  42a7aa:	shl    DWORD PTR [edx-0x7c02dbb1],cl
  42a7b0:	and    ebx,DWORD PTR [ebp-0x42eab3ba]
  42a7b6:	dec    eax
  42a7b7:	or     edi,ecx
  42a7b9:	aam    0x9c
  42a7bb:	repz pop esp
  42a7bd:	scas   al,BYTE PTR es:[edi]
  42a7be:	sub    DWORD PTR [ebp+eax*2-0x69],ebp
  42a7c2:	push   es
  42a7c3:	mov    dh,0xb5
  42a7c5:	iret   
  42a7c6:	pop    edx
  42a7c7:	seto   BYTE PTR [esp+ecx*2+0x76]
  42a7cc:	(bad)  
  42a7cd:	loopne 0x42a752
  42a7cf:	loopne 0x42a778
  42a7d1:	cmp    BYTE PTR [edi],al
  42a7d3:	(bad)  
  42a7d4:	aad    0xd
  42a7d6:	and    ebp,DWORD PTR [eax+0x365c5f85]
  42a7dc:	cmp    BYTE PTR [esi+edi*4+0x41504f93],al
  42a7e3:	adc    BYTE PTR [edx-0x5a],0xae
  42a7e7:	int3   
  42a7e8:	ins    DWORD PTR es:[edi],dx
  42a7e9:	pop    ss
  42a7ea:	enter  0xa444,0x38
  42a7ee:	or     bl,dl
  42a7f0:	(bad)  
  42a7f1:	(bad)  
  42a7f2:	(bad)
  42a7f5:	dec    esp
  42a7f6:	jle    0x42a82f
  42a7f8:	stos   DWORD PTR es:[edi],eax
  42a7f9:	dec    ebp
  42a7fa:	xor    BYTE PTR [eax+0x3c],0x8f
  42a7fe:	jo     0x42a7db
  42a800:	pop    ebx
  42a801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a802:	mov    esi,0xff5d6925
  42a807:	xchg   esp,eax
  42a808:	mov    bl,0xc0
  42a80a:	mov    BYTE PTR [ebx-0x3d],dl
  42a80d:	(bad)  
  42a80e:	dec    ecx
  42a80f:	iret   
  42a810:	mov    eax,0x83d8696
  42a815:	mov    al,0xa
  42a817:	push   0x526bdc40
  42a81c:	out    0xc4,al
  42a81e:	mov    ebp,0x84fed661
  42a823:	mov    dh,0xcf
  42a825:	jns    0x42a80c
  42a827:	(bad)  
  42a828:	shl    ch,0x66
  42a82b:	test   al,0x65
  42a82d:	cmp    DWORD PTR [edx],ebx
  42a82f:	aam    0x70
  42a831:	pop    ebp
  42a832:	sahf   
  42a833:	ror    ah,0x77
  42a836:	lea    ebp,[edx]
  42a838:	shr    BYTE PTR [esi],0xc3
  42a83b:	or     cl,BYTE PTR [ecx-0x10]
  42a83e:	cmp    DWORD PTR [edx-0x628ba8cb],eax
  42a844:	pop    eax
  42a845:	inc    ebp
  42a846:	adc    al,0x2d
  42a848:	shl    esi,cl
  42a84a:	cmc    
  42a84b:	es jne 0x42a84e
  42a84e:	gs mov esp,0x891f2d43
  42a854:	mov    eax,ds:0xe0e2444d
  42a859:	mov    ds:0x120587a,eax
  42a85e:	mov    BYTE PTR [ecx+0x49],0x4
  42a862:	cmp    dh,BYTE PTR [eax+0x6]
  42a865:	sub    BYTE PTR [ebx],0x28
  42a868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a869:	repnz sub BYTE PTR [ebx+0x7d315ef7],ch
  42a870:	pop    ecx
  42a871:	(bad)  
  42a873:	rol    BYTE PTR [edx+0x3e],1
  42a876:	out    0x8f,eax
  42a878:	sbb    al,0xe
  42a87a:	hlt    
  42a87b:	cli    
  42a87c:	hlt    
  42a87d:	sub    edx,DWORD PTR [eax+0x7aa1070c]
  42a883:	mov    ah,0xce
  42a885:	sbb    ah,bh
  42a887:	sub    al,0x95
  42a889:	jp     0x42a86c
  42a88b:	push   edi
  42a88c:	out    dx,al
  42a88d:	jno    0x42a8cb
  42a88f:	out    0xb6,al
  42a891:	imul   eax,DWORD PTR [ebx-0x4a],0xffffffab
  42a895:	dec    ebx
  42a896:	jo     0x42a8f8
  42a898:	mov    al,ds:0xb3c5c840
  42a89d:	jecxz  0x42a8cf
  42a89f:	mov    edi,0x41e6f608
  42a8a4:	pop    esp
  42a8a5:	mov    WORD PTR [ebp+0xe],es
  42a8a8:	xor    eax,0x2332e02c
  42a8ad:	cmp    eax,0xa23c95aa
  42a8b2:	push   eax
  42a8b3:	add    edi,ebp
  42a8b5:	sbb    BYTE PTR [ecx],0xd2
  42a8b8:	sub    al,0xae
  42a8ba:	div    DWORD PTR [edx+edx*4-0x23]
  42a8be:	(bad)  
  42a8bf:	shr    ecx,1
  42a8c1:	lock push ss
  42a8c3:	neg    DWORD PTR [ebx*1+0x8838ebe]
  42a8ca:	idiv   DWORD PTR [ecx+eax*1]
  42a8cd:	inc    eax
  42a8ce:	add    ebx,edx
  42a8d0:	or     al,0x71
  42a8d2:	jge    0x42a8fc
  42a8d4:	neg    BYTE PTR [esp+eiz*2+0x2]
  42a8d8:	push   eax
  42a8d9:	cld    
  42a8da:	pop    ebx
  42a8db:	sub    ch,BYTE PTR [edi+0x21]
  42a8de:	test   DWORD PTR [eax+0x752d7464],0x53d0660d
  42a8e8:	lods   al,BYTE PTR ds:[esi]
  42a8e9:	push   edx
  42a8ea:	xchg   ebx,eax
  42a8eb:	cdq    
  42a8ec:	(bad)  
  42a8ed:	in     eax,dx
  42a8ee:	cmp    eax,0x815450c8
  42a8f3:	jge    0x42a8c8
  42a8f5:	aas    
  42a8f6:	aad    0x12
  42a8f8:	jne    0x42a96d
  42a8fa:	js     0x42a959
  42a8fc:	mov    ch,0xc4
  42a8fe:	cmp    ecx,ebp
  42a900:	mov    esp,0x69c1973
  42a905:	xchg   ecx,eax
  42a906:	loop   0x42a967
  42a908:	mov    eax,DWORD PTR [ebp+esi*4-0x6c7c3f5f]
  42a90f:	pop    ds
  42a910:	dec    edx
  42a911:	dec    esp
  42a912:	outs   dx,DWORD PTR ds:[esi]
  42a913:	sahf   
  42a914:	pop    edi
  42a915:	in     al,0x7c
  42a917:	mov    ds:0x47a005f1,al
  42a91c:	cld    
  42a91d:	pop    ebx
  42a91e:	mov    WORD PTR [esi-0x5f],es
  42a921:	add    eax,0x3e2ab1
  42a926:	jno    0x42a8d8
  42a928:	fwait
  42a929:	sbb    ch,BYTE PTR [esi-0xd]
  42a92c:	inc    esp
  42a92d:	jns    0x42a8cc
  42a92f:	cmc    
  42a930:	aam    0x24
  42a932:	sub    dl,BYTE PTR [edi]
  42a934:	jns    0x42a8ee
  42a936:	pop    ds
  42a937:	jmp    0xdaec:0xc081f891
  42a93e:	pushf  
  42a93f:	pop    ds
  42a940:	mov    al,0x81
  42a942:	mov    al,ds:0xe9e1a764
  42a947:	std    
  42a948:	sub    BYTE PTR [esi+0x0],cl
  42a94b:	les    esi,FWORD PTR [ecx+0x2a3fef06]
  42a951:	and    eax,0x80e832c9
  42a956:	xor    eax,0xedfb743e
  42a95b:	jg     0x42a929
  42a95d:	or     al,0x61
  42a95f:	pop    ss
  42a960:	clc    
  42a961:	add    al,0x7e
  42a963:	mov    ds,WORD PTR [ebx-0x3c31cfd5]
  42a969:	jmp    0xd80c:0xb26e47c8
  42a970:	or     ch,bl
  42a972:	retf   
  42a973:	inc    edi
  42a974:	add    al,0xbe
  42a976:	mov    dh,0x83
  42a978:	cld    
  42a979:	sbb    eax,0x9a75b8d7
  42a97e:	arpl   WORD PTR [eax],ax
  42a980:	sub    ah,BYTE PTR [eax]
  42a982:	(bad)  
  42a983:	lahf   
  42a984:	gs inc ebp
  42a986:	dec    edi
  42a987:	ds ret 0x4456
  42a98b:	cmp    eax,0xb6a2e3
  42a990:	jecxz  0x42a9a9
  42a992:	clc    
  42a993:	in     al,dx
  42a994:	test   eax,0x55e718
  42a999:	popf   
  42a99a:	adc    BYTE PTR [ecx+0x10],ah
  42a99d:	outs   dx,BYTE PTR ds:[esi]
  42a99e:	enter  0x2c2,0x78
  42a9a2:	jo     0x42a9b9
  42a9a4:	xchg   edi,eax
  42a9a5:	xor    al,0x21
  42a9a7:	adc    ah,BYTE PTR [ecx-0x5d069e59]
  42a9ad:	rcr    DWORD PTR [eax+0x7b],cl
  42a9b0:	std    
  42a9b1:	push   0x8c7b08ed
  42a9b6:	pop    esi
  42a9b7:	jl     0x42a9d0
  42a9b9:	add    BYTE PTR [ecx+0x7865a6d8],0xb8
  42a9c0:	and    al,0x8f
  42a9c2:	xor    al,BYTE PTR gs:[ecx+0x6e]
  42a9c6:	mov    esp,0x8a48a7e5
  42a9cb:	fwait
  42a9cc:	repnz adc al,0x7
  42a9cf:	in     eax,dx
  42a9d0:	adc    al,0x73
  42a9d2:	ins    BYTE PTR es:[edi],dx
  42a9d3:	mov    ss:0x98e457cc,al
  42a9d9:	xor    al,0xba
  42a9db:	nop
  42a9dc:	push   0x6d
  42a9de:	repnz popf 
  42a9e0:	push   ds
  42a9e1:	inc    esi
  42a9e2:	fadd   QWORD PTR [esp+esi*4]
  42a9e5:	test   al,0x8c
  42a9e7:	aas    
  42a9e8:	mov    DWORD PTR [eax+ebp*4-0x54],edi
  42a9ec:	pop    sp
  42a9ee:	jbe    0x42aa47
  42a9f0:	jnp    0x42a9f8
  42a9f2:	stos   DWORD PTR es:[edi],eax
  42a9f3:	and    DWORD PTR [edx],edi
  42a9f5:	mov    ds:0x36989a80,al
  42a9fa:	or     DWORD PTR ds:0x27f1,ecx
  42a9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa00:	push   esp
  42aa01:	hlt    
  42aa02:	sbb    eax,0xd9bf3cd7
  42aa07:	repz enter 0xbef6,0x14
  42aa0c:	sub    ah,BYTE PTR [esi-0x2b]
  42aa0f:	and    DWORD PTR [ebp+0x70],edi
  42aa12:	jmp    0x59e8:0x2fc09a50
  42aa19:	add    al,0x94
  42aa1b:	out    0xa9,al
  42aa1d:	(bad)  
  42aa1e:	dec    ebp
  42aa1f:	sbb    esp,ebp
  42aa21:	and    ecx,DWORD PTR [edx-0x48]
  42aa24:	shr    bl,1
  42aa26:	in     eax,0x9c
  42aa28:	xlat   BYTE PTR ds:[ebx]
  42aa29:	jl     0x42a9be
  42aa2b:	or     al,0xdc
  42aa2d:	adc    al,0x7b
  42aa2f:	adc    ecx,eax
  42aa31:	scas   al,BYTE PTR es:[edi]
  42aa32:	xchg   esp,eax
  42aa33:	push   ebp
  42aa34:	sub    eax,DWORD PTR [eax]
  42aa36:	inc    eax
  42aa37:	retf   0x1b48
  42aa3a:	fstp   DWORD PTR [ebp-0xc]
  42aa3d:	dec    esi
  42aa3e:	test   al,0xe2
  42aa40:	cmp    dl,ch
  42aa42:	or     al,0xf1
  42aa44:	jge    0x42a9f8
  42aa46:	push   eax
  42aa47:	int3   
  42aa48:	(bad)  
  42aa49:	mov    esi,0x2a6a2514
  42aa4e:	dec    edi
  42aa4f:	inc    esp
  42aa50:	lock and eax,DWORD PTR [esi+0x40]
  42aa54:	(bad)  
  42aa55:	push   eax
  42aa56:	sbb    al,0xc2
  42aa58:	or     BYTE PTR [esp+ebp*2],dl
  42aa5b:	mov    edx,0xc0862bca
  42aa60:	xor    esp,ecx
  42aa62:	mov    esp,0x26df793e
  42aa67:	lods   al,BYTE PTR ds:[esi]
  42aa68:	mov    dl,BYTE PTR [eax+0x76e6e041]
  42aa6e:	cmp    DWORD PTR [eax+eiz*8-0x48],0xfffffff4
  42aa73:	pop    ecx
  42aa74:	add    al,0x88
  42aa76:	pop    es
  42aa77:	cmp    ebx,edi
  42aa79:	dec    eax
  42aa7a:	gs out 0xbe,al
  42aa7d:	sub    ch,al
  42aa7f:	sbb    esp,DWORD PTR [ebx]
  42aa81:	inc    ebx
  42aa82:	loop   0x42aa37
  42aa84:	add    ebp,DWORD PTR [eax+0x4c]
  42aa87:	gs inc ebx
  42aa89:	fwait
  42aa8a:	push   cs
  42aa8b:	ins    DWORD PTR es:[edi],dx
  42aa8c:	jmp    0xa913:0x32f46bfa
  42aa93:	sub    eax,0x3bc6ed58
  42aa98:	sbb    BYTE PTR [ecx],al
  42aa9a:	inc    edi
  42aa9b:	je     0x42aa76
  42aa9d:	xchg   edx,eax
  42aa9e:	mov    bh,0x8a
  42aaa0:	jbe    0x42aade
  42aaa2:	cmp    eax,0x9cbc93ad
  42aaa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aaa8:	and    BYTE PTR ss:[eax-0x37],0x79
  42aaad:	sahf   
  42aaae:	test   al,0x88
  42aab0:	xchg   esp,eax
  42aab1:	cmp    eax,0x65497784
  42aab7:	aas    
  42aab8:	xor    al,0xfc
  42aaba:	loopne 0x42aa9b
  42aabc:	sub    al,0xd6
  42aabe:	mov    DWORD PTR [edi+0x86047b8],eax
  42aac4:	xchg   esi,eax
  42aac5:	push   eax
  42aac6:	pop    ecx
  42aac7:	pop    ecx
  42aac8:	leave  
  42aac9:	mov    ds:0x71d9b95c,eax
  42aace:	je     0x42aa93
  42aad0:	iret   
  42aad1:	dec    ecx
  42aad2:	fdivr  QWORD PTR ss:[eax-0x5d]
  42aad6:	push   ds
  42aad7:	cwde   
  42aad8:	dec    edi
  42aad9:	mov    ds:0xc6a5e4cb,al
  42aade:	jp     0x42aad3
  42aae0:	inc    eax
  42aae1:	cmp    BYTE PTR [edx+ebx*1],0x29
  42aae5:	stos   BYTE PTR es:[edi],al
  42aae6:	inc    ebx
  42aae7:	outs   dx,DWORD PTR ds:[esi]
  42aae8:	push   ecx
  42aae9:	fs dec esi
  42aaeb:	mov    dl,0xd1
  42aaed:	adc    cl,cl
  42aaef:	mov    cl,0xad
  42aaf1:	cmp    ecx,DWORD PTR [eax-0x4c2b60f0]
  42aaf7:	enter  0xec03,0x9c
  42aafb:	lods   al,BYTE PTR ds:[esi]
  42aafc:	pop    edx
  42aafd:	fild   DWORD PTR [eax]
  42aaff:	add    DWORD PTR [ecx+eiz*2-0x1b],edi
  42ab03:	push   ebx
  42ab04:	rol    BYTE PTR [edx-0x256ecf96],1
  42ab0a:	xchg   ebx,eax
  42ab0b:	ins    BYTE PTR es:[edi],dx
  42ab0c:	or     bh,BYTE PTR [eax+0xd]
  42ab0f:	fstp   TBYTE PTR [edx]
  42ab11:	dec    ebx
  42ab12:	sbb    DWORD PTR [edi+0x7c9c80e5],ebp
  42ab18:	push   esp
  42ab19:	add    al,0xbb
  42ab1b:	inc    edi
  42ab1c:	int    0x75
  42ab1e:	(bad)  
  42ab1f:	shl    BYTE PTR [ecx-0x14],0x1f
  42ab23:	mov    esi,0xa6df025e
  42ab28:	in     al,0x79
  42ab2a:	lods   al,BYTE PTR ds:[esi]
  42ab2b:	pop    edx
  42ab2c:	xlat   BYTE PTR ds:[ebx]
  42ab2d:	imul   eax,DWORD PTR ds:0xdc8c2991,0xffffff8c
  42ab34:	imul   esp,DWORD PTR fs:[ebx],0x36
  42ab38:	pop    ds
  42ab39:	stos   BYTE PTR es:[edi],al
  42ab3a:	mov    al,0xec
  42ab3c:	jne    0x42ab87
  42ab3e:	imul   edx,esp,0x2c
  42ab41:	stos   DWORD PTR es:[edi],eax
  42ab42:	mov    ecx,0x5ddb99d4
  42ab47:	fild   WORD PTR ds:0xf816fb2a
  42ab4d:	xchg   ebx,eax
  42ab4e:	adc    DWORD PTR [esi+0x2f],eax
  42ab51:	call   0x76a6:0x1c1cc3ec
  42ab58:	or     BYTE PTR [esi-0x37f98da5],dh
  42ab5e:	les    ebx,FWORD PTR [esi-0x6fe41c88]
  42ab64:	fstp   st(6)
  42ab66:	cld    
  42ab67:	call   0x90ff599d
  42ab6c:	clc    
  42ab6d:	in     al,dx
  42ab6e:	dec    eax
  42ab6f:	fmul   QWORD PTR [ebx*2-0x21ec9d80]
  42ab76:	popf   
  42ab77:	call   eax
  42ab79:	xor    BYTE PTR [edi+0x2f],dh
  42ab7c:	inc    edx
  42ab7d:	mov    eax,0xe95b064b
  42ab82:	fadd   st,st(3)
  42ab84:	adc    al,0x13
  42ab86:	inc    edx
  42ab87:	lods   eax,DWORD PTR ds:[esi]
  42ab88:	mov    BYTE PTR [edi],cl
  42ab8a:	test   esp,edi
  42ab8c:	xor    eax,0xca6db07
  42ab91:	dec    edi
  42ab92:	lock int 0x20
  42ab95:	inc    ebx
  42ab96:	bound  ebx,QWORD PTR [esi-0x3d]
  42ab99:	fdiv   st,st(3)
  42ab9b:	mov    esi,0xd6984410
  42aba0:	test   eax,0xbc51925
  42aba5:	dec    ebx
  42aba6:	push   0x90c8de78
  42abab:	enter  0x25f2,0xe2
  42abaf:	adc    BYTE PTR [edi],bh
  42abb1:	push   esi
  42abb2:	add    DWORD PTR [edx],esi
  42abb4:	rcl    ecx,cl
  42abb6:	push   es
  42abb7:	push   DWORD PTR [esi+ebp*1]
  42abba:	xchg   ebp,eax
  42abbb:	add    edx,0xcd423164
  42abc1:	pop    eax
  42abc2:	and    dl,BYTE PTR [eax+eiz*2+0x144e80c7]
  42abc9:	xchg   esp,eax
  42abca:	jl     0x42ac3b
  42abcc:	jb     0x42abeb
  42abce:	adc    edi,edx
  42abd0:	int3   
  42abd1:	imul   edi,eax,0xffffffa0
  42abd4:	test   eax,0x16f3831b
  42abd9:	mov    al,0x5c
  42abdb:	ds dec eax
  42abdd:	push   0xad5f9085
  42abe2:	or     dl,BYTE PTR [edx]
  42abe4:	sub    al,0x6c
  42abe6:	pop    ebx
  42abe7:	fsubr  DWORD PTR [ebx-0x69]
  42abea:	ret    
  42abeb:	xchg   edi,eax
  42abec:	cmp    BYTE PTR [eax+edx*4+0x257346e6],0xdb
  42abf4:	cmp    eax,0xf5b4829f
  42abf9:	jmp    0x3e0:0xb3713284
  42ac00:	pop    esp
  42ac01:	jno    0x42ab85
  42ac03:	clts   
  42ac05:	push   ebx
  42ac06:	cs xchg edi,eax
  42ac08:	je     0x42ab8a
  42ac0a:	sub    DWORD PTR [si+0x2bff],ebp
  42ac0f:	rcr    DWORD PTR [ebx],1
  42ac11:	sbb    ah,BYTE PTR [edi+ebp*1-0x55082b02]
  42ac18:	cmp    al,0x25
  42ac1a:	(bad)  
  42ac1b:	enter  0x5924,0xc5
  42ac1f:	xor    ch,BYTE PTR [eax-0x13eaab48]
  42ac25:	or     DWORD PTR [ecx+0x4519b5af],0x3e9497eb
  42ac2f:	pop    ecx
  42ac30:	jmp    0xb895:0x649d5d66
  42ac37:	test   BYTE PTR [eax+0x2863e523],cl
  42ac3d:	pushf  
  42ac3e:	pop    eax
  42ac3f:	fdivr  QWORD PTR [esi-0x36]
  42ac42:	jecxz  0x42ac8e
  42ac44:	repz jl 0x42abd2
  42ac47:	xor    al,BYTE PTR [eax]
  42ac49:	pop    edi
  42ac4a:	cmp    DWORD PTR [esi-0x7f],eax
  42ac4d:	bound  ecx,QWORD PTR [ebx-0x7757e1ba]
  42ac53:	inc    ecx
  42ac54:	pop    edx
  42ac55:	or     al,0x1c
  42ac57:	sub    ebx,ebx
  42ac59:	loopne 0x42ac27
  42ac5b:	jne    0x42acd0
  42ac5d:	adc    al,0xfb
  42ac5f:	jge    0x42ac54
  42ac61:	mov    ebp,0xa574f0ba
  42ac66:	sub    ebx,DWORD PTR [ebx]
  42ac68:	add    ch,ch
  42ac6a:	jl     0x42abf3
  42ac6c:	adc    al,0x59
  42ac6e:	arpl   WORD PTR [eax+0x33],ax
  42ac71:	outs   dx,BYTE PTR ds:[esi]
  42ac72:	dec    edi
  42ac73:	pop    edx
  42ac74:	dec    ebx
  42ac75:	cmp    BYTE PTR [esp+ebp*4+0x20],bh
  42ac79:	cmp    BYTE PTR [edx],cl
  42ac7b:	ret    
  42ac7c:	imul   ecx,DWORD PTR [ecx-0x20],0xffffffee
  42ac80:	inc    ecx
  42ac81:	out    0x3c,al
  42ac83:	jge    0x42aced
  42ac85:	jecxz  0x42ac68
  42ac87:	add    al,0x68
  42ac89:	fstp   TBYTE PTR [edi+0x10]
  42ac8c:	push   ebp
  42ac8d:	int    0xd9
  42ac8f:	pop    esp
  42ac90:	sub    al,dh
  42ac92:	push   0xffffff87
  42ac94:	jp     0x42ac7f
  42ac96:	jo     0x42ac2c
  42ac98:	xor    eax,0x74afde4c
  42ac9d:	jp     0x42aca4
  42ac9f:	xor    bh,ch
  42aca1:	(bad)  
  42aca2:	jo     0x42ac6b
  42aca4:	sub    eax,edx
  42aca6:	lea    edi,[ecx-0x18]
  42aca9:	sub    al,0xf6
  42acab:	sbb    BYTE PTR [esi+eiz*1],dh
  42acae:	jbe    0x42acce
  42acb0:	add    al,0xc7
  42acb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42acb3:	cwde   
  42acb4:	cmp    al,0x23
  42acb6:	xchg   esp,eax
  42acb7:	pop    ss
  42acb8:	push   ss
  42acb9:	loope  0x42acad
  42acbb:	cmc    
  42acbc:	xor    eax,0xac7aed60
  42acc1:	xchg   ebp,eax
  42acc2:	push   ecx
  42acc3:	jo     0x42ad05
  42acc5:	dec    ecx
  42acc6:	test   dl,ah
  42acc8:	loope  0x42acf9
  42acca:	mov    ecx,edx
  42accc:	mov    cl,0x39
  42acce:	jmp    FWORD PTR [ecx+eiz*4]
  42acd1:	das    
  42acd2:	mov    ecx,0xae2034b4
  42acd7:	mov    esi,0x8f34e950
  42acdc:	sbb    DWORD PTR [ebp+0x74e661d6],ebp
  42ace2:	jp     0x42aca4
  42ace4:	pop    ecx
  42ace5:	mov    cl,cl
  42ace7:	in     al,0xcc
  42ace9:	jge    0x42ac83
  42aceb:	adc    al,0x6
  42aced:	or     esi,DWORD PTR [ebx-0x1f557c9a]
  42acf3:	mov    esp,0xea341b49
  42acf8:	jae    0x42ad19
  42acfa:	jmp    0x42aca0
  42acfc:	xor    DWORD PTR fs:[esi+ecx*2+0x6d],ebx
  42ad01:	lods   al,BYTE PTR ds:[esi]
  42ad02:	mov    ds,WORD PTR [edi-0x3233770e]
  42ad08:	stc    
  42ad09:	add    ebp,DWORD PTR [edi-0x53419c65]
  42ad0f:	mul    DWORD PTR [ebx+0x30]
  42ad12:	outs   dx,DWORD PTR ds:[esi]
  42ad13:	pushf  
  42ad14:	fwait
  42ad15:	push   edx
  42ad16:	mov    dl,al
  42ad18:	fild   DWORD PTR [ebp-0x70]
  42ad1b:	push   esi
  42ad1c:	call   0x78bd6569
  42ad21:	fadd   QWORD PTR [eax]
  42ad23:	mov    ch,0xba
  42ad25:	sbb    eax,0x9ce5aa82
  42ad2a:	and    DWORD PTR ds:0xfea869ca,0x37
  42ad31:	push   cs
  42ad32:	shl    bl,0x9
  42ad35:	sub    BYTE PTR cs:[ebx-0x23],ch
  42ad39:	and    esi,DWORD PTR [edx]
  42ad3b:	in     al,0xa4
  42ad3d:	xchg   esi,eax
  42ad3e:	cmp    al,0x38
  42ad40:	retf   0x1d1
  42ad43:	xor    BYTE PTR [eax],cl
  42ad45:	(bad)  
  42ad46:	fld    DWORD PTR [ecx]
  42ad48:	add    eax,0x5189c0fa
  42ad4d:	mov    al,0x3
  42ad4f:	arpl   WORD PTR [esi],bx
  42ad51:	push   edx
  42ad52:	ss push edi
  42ad54:	stos   DWORD PTR es:[edi],eax
  42ad55:	loopne 0x42ad2b
  42ad57:	sar    ah,0x87
  42ad5a:	mov    esp,es
  42ad5c:	pushf  
  42ad5d:	add    ecx,edx
  42ad5f:	clc    
  42ad60:	and    al,0xc
  42ad62:	mov    cl,0xc
  42ad64:	ret    0xefc2
  42ad67:	sbb    eax,0xbd3eb11c
  42ad6c:	retf   
  42ad6d:	or     DWORD PTR fs:[eax],esi
  42ad70:	daa    
  42ad71:	inc    eax
  42ad72:	outs   dx,BYTE PTR ds:[esi]
  42ad73:	inc    edi
  42ad74:	pop    ss
  42ad75:	xor    ecx,edi
  42ad77:	mov    ds:0x71e8ee33,eax
  42ad7c:	dec    eax
  42ad7d:	sbb    DWORD PTR ds:0x4ea0554b,ebx
  42ad83:	or     al,0x73
  42ad85:	push   edx
  42ad86:	pop    ecx
  42ad87:	push   0xf3cd6a95
  42ad8c:	xor    BYTE PTR [edi],bl
  42ad8e:	pinsrw mm7,ebp,0xff
  42ad92:	enter  0x7a45,0x54
  42ad96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad97:	(bad)  
  42ad98:	add    edx,ebp
  42ad9a:	jmp    0x6d17:0xfc5cf3dc
  42ada1:	imul   esp,DWORD PTR [edi]
  42ada4:	aaa    
  42ada5:	lahf   
  42ada6:	fwait
  42ada7:	and    bl,dh
  42ada9:	add    esp,DWORD PTR [ecx+0x5f]
  42adac:	jnp    0x42adc8
  42adae:	lods   eax,DWORD PTR ds:[esi]
  42adaf:	and    al,0x44
  42adb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adb2:	inc    BYTE PTR [edx+0x68279d1c]
  42adb8:	xchg   ebx,eax
  42adb9:	push   0xf529db7
  42adbe:	je     0x42adf8
  42adc0:	outs   dx,DWORD PTR ds:[esi]
  42adc1:	xchg   esp,eax
  42adc2:	mov    WORD PTR ds:0x4e49a322,?
  42adc8:	mov    dl,0x18
  42adca:	xor    esi,DWORD PTR [edi+esi*8]
  42adcd:	out    dx,al
  42adce:	push   ss
  42adcf:	retf   0x1264
  42add2:	mov    BYTE PTR [ebp+0x58],cl
  42add5:	xor    al,0x7e
  42add7:	hlt    
  42add8:	aad    0xd2
  42adda:	mov    ebx,0xcc7c86b9
  42addf:	or     DWORD PTR ds:0x2be8466,edi
  42ade5:	and    esp,DWORD PTR [eax-0x43ed1175]
  42adeb:	adc    ebp,eax
  42aded:	adc    DWORD PTR [ebx],esi
  42adef:	dec    eax
  42adf0:	ins    BYTE PTR es:[edi],dx
  42adf1:	mov    al,ds:0x7839eb5
  42adf6:	hlt    
  42adf7:	lock ins BYTE PTR es:[edi],dx
  42adf9:	lock jnp 0x42ae5d
  42adfc:	add    ch,bh
  42adfe:	dec    ebx
  42adff:	(bad)  
  42ae00:	pop    ss
  42ae01:	nop
  42ae02:	add    DWORD PTR [eax-0x23],eax
  42ae05:	enter  0x480a,0x37
  42ae09:	(bad)  
  42ae0a:	mov    ah,0x83
  42ae0c:	out    dx,al
  42ae0d:	adc    esp,eax
  42ae0f:	mov    al,0x96
  42ae11:	jp     0x42adfc
  42ae13:	fadd   DWORD PTR [edx+0x6523994]
  42ae19:	hlt    
  42ae1a:	call   0xf771:0x4bbd801d
  42ae21:	sbb    eax,0xa47ce419
  42ae26:	mov    bh,0xb5
  42ae28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae29:	fucomi st,st(5)
  42ae2b:	data16 rcl BYTE PTR [eax+ecx*8],1
  42ae2f:	int3   
  42ae30:	adc    BYTE PTR [ecx+0x5d],al
  42ae33:	rcr    DWORD PTR [edx+esi*2+0x1d],0xec
  42ae38:	sub    DWORD PTR [ebx-0x4eb49177],ebp
  42ae3e:	loope  0x42ae2a
  42ae40:	adc    BYTE PTR [ebx*2+0x545032d8],dl
  42ae47:	mov    ebp,0x4322b85f
  42ae4c:	das    
  42ae4d:	mov    edx,0x13b9dd39
  42ae52:	fmul   QWORD PTR [ebp-0x3e]
  42ae55:	push   ds
  42ae56:	stos   DWORD PTR es:[edi],eax
  42ae57:	sti    
  42ae58:	push   esp
  42ae59:	fmul   DWORD PTR [esi+0x113c200]
  42ae5f:	mov    bh,0x41
  42ae61:	fmul   DWORD PTR [edi+0x4f0245a]
  42ae67:	nop
  42ae68:	pop    ebp
  42ae69:	mov    ecx,0xccec5d07
  42ae6e:	xlat   BYTE PTR ds:[ebx]
  42ae6f:	push   ds
  42ae70:	fnstcw WORD PTR [edx+esi*4-0xf7226db]
  42ae77:	xor    dl,cl
  42ae79:	rcl    BYTE PTR [eax],0x6b
  42ae7c:	dec    esi
  42ae7d:	aaa    
  42ae7e:	js     0x42ae94
  42ae80:	inc    ecx
  42ae81:	push   ebx
  42ae82:	cmp    DWORD PTR [ecx+edx*4+0x3836c7a2],esp
  42ae89:	fadd   QWORD PTR ds:0x45b4a0cc
  42ae8f:	arpl   WORD PTR [ecx+0x38fee5c],si
  42ae95:	cmp    al,0x65
  42ae97:	sbb    DWORD PTR [edi],0x7b
  42ae9a:	add    al,0xe8
  42ae9c:	test   al,0x23
  42ae9e:	sbb    al,0x88
  42aea0:	sti    
  42aea1:	mov    DWORD PTR [edi-0x419b7d8],ecx
  42aea7:	cmp    BYTE PTR [edx+0x4c0fe9d8],0xe2
  42aeae:	and    eax,0xd2ca2e33
  42aeb3:	ins    DWORD PTR es:[edi],dx
  42aeb4:	push   ebp
  42aeb5:	jo     0x42ae7a
  42aeb7:	jns    0x42aeff
  42aeb9:	mov    eax,0x9194ea7b
  42aebe:	sbb    BYTE PTR ds:0x46b0ba25,bl
  42aec4:	sub    al,0xa4
  42aec6:	or     BYTE PTR [ebx+eiz*1],bh
  42aec9:	daa    
  42aeca:	sbb    BYTE PTR [eax],bl
  42aecc:	sbb    al,0x9c
  42aece:	out    dx,eax
  42aecf:	mov    eax,ds:0xd3884660
  42aed4:	adc    BYTE PTR [ebx],dh
  42aed6:	or     BYTE PTR [esi],ah
  42aed8:	or     BYTE PTR [eax+ecx*1-0x9e44ccb],al
  42aedf:	gs int3 
  42aee1:	add    ch,BYTE PTR [eax+0x23989ad5]
  42aee7:	shr    edx,0xec
  42aeea:	loope  0x42af3c
  42aeec:	mov    fs,WORD PTR ds:0x27beb38
  42aef2:	adc    al,0x86
  42aef4:	je     0x42aed0
  42aef6:	jns    0x42af2d
  42aef8:	mov    esi,0x222bd4f6
  42aefd:	cwde   
  42aefe:	xor    BYTE PTR [ebx],dh
  42af00:	dec    eax
  42af01:	cwde   
  42af02:	xor    ebx,DWORD PTR [edx+0x8]
  42af05:	pop    esi
  42af06:	mov    esp,0x4ab3d7d4
  42af0b:	retf   0xa315
  42af0e:	aaa    
  42af0f:	loopne 0x42af80
  42af11:	mov    bh,0xf
  42af13:	mov    ecx,0x27bdc937
  42af18:	mov    BYTE PTR [esi+0xa],ah
  42af1b:	mov    al,0x36
  42af1d:	xchg   esi,eax
  42af1e:	sub    al,al
  42af20:	call   0xec26:0x5fdc0fac
  42af27:	and    DWORD PTR [esi-0xc],esp
  42af2a:	sar    BYTE PTR [ebx+eiz*8+0xe],1
  42af2e:	fistp  DWORD PTR [edi-0xb95dfaa]
  42af34:	mov    edi,0x3ba18c60
  42af39:	push   esp
  42af3a:	cs push esp
  42af3c:	pushf  
  42af3d:	arpl   WORD PTR [eax-0x79],si
  42af40:	mov    bh,0xc1
  42af42:	push   cs
  42af43:	call   DWORD PTR [ebx+0x1e46cfc0]
  42af49:	in     eax,dx
  42af4a:	pavgb  mm5,mm2
  42af4d:	(bad)  
  42af4e:	in     al,0xd5
  42af50:	and    al,0x58
  42af52:	imul   ebx,DWORD PTR [esi+0x64],0xf4080c88
  42af59:	add    eax,0xad98058
  42af5e:	jbe    0x42af69
  42af60:	sub    al,0xed
  42af62:	cld    
  42af63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af64:	or     bh,BYTE PTR [esi]
  42af66:	loopne 0x42af96
  42af68:	sbb    ah,dl
  42af6a:	or     al,0xbb
  42af6c:	cmp    bh,BYTE PTR [edx+0x5cf1bb70]
  42af72:	clc    
  42af73:	aas    
  42af74:	jl     0x42afdc
  42af76:	std    
  42af77:	outs   dx,BYTE PTR ds:[esi]
  42af78:	stos   BYTE PTR es:[edi],al
  42af79:	mov    ebx,0xd0e3211c
  42af7f:	jle    0x42af3d
  42af81:	push   esi
  42af82:	pop    es
  42af83:	jbe    0x42afc5
  42af85:	retf   0x971b
  42af88:	mov    esi,0xf12f7c37
  42af8d:	call   0xdbe74c9f
  42af92:	into   
  42af93:	push   ebp
  42af94:	push   esi
  42af95:	or     BYTE PTR [edx+ebp*4],0x78
  42af99:	push   0x54b3a8c9
  42af9e:	pusha  
  42af9f:	xor    BYTE PTR [ebx],al
  42afa1:	pop    eax
  42afa2:	cmp    DWORD PTR [edx],ebp
  42afa4:	loope  0x42af7f
  42afa6:	xchg   edx,eax
  42afa7:	loopne 0x42affd
  42afa9:	cmp    dl,BYTE PTR [esi+eax*1]
  42afac:	adc    ah,dh
  42afae:	add    al,0xfd
  42afb0:	push   cs
  42afb1:	js     0x42af56
  42afb3:	fs dec eax
  42afb5:	mov    ds:0xb311d46c,al
  42afba:	and    BYTE PTR [ebx-0x5cf23328],dh
  42afc0:	stos   BYTE PTR es:[edi],al
  42afc1:	loopne 0x42b022
  42afc3:	inc    esp
  42afc4:	ror    BYTE PTR [ecx],0xe6
  42afc7:	inc    esi
  42afc8:	adc    al,0xda
  42afca:	test   bh,dl
  42afcc:	push   0xaf85c1b2
  42afd1:	or     BYTE PTR [ebp+0x3b],al
  42afd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42afd5:	mov    WORD PTR [edx+0x5c],?
  42afd8:	lds    edx,FWORD PTR [ebx-0x53020594]
  42afde:	xor    al,0x97
  42afe0:	mov    BYTE PTR [ecx+0x3586d402],dl
  42afe6:	push   ebx
  42afe7:	pop    eax
  42afe8:	std    
  42afe9:	test   cl,0xb6
  42afec:	jno    0x42af80
  42afee:	popf   
  42afef:	ja     0x42b06d
  42aff1:	xlat   BYTE PTR ds:[ebx]
  42aff2:	gs mov ah,0xcc
  42aff5:	lods   eax,DWORD PTR ds:[esi]
  42aff6:	cs test eax,0x9422a05f
  42affc:	test   ebx,esi
  42affe:	rcl    DWORD PTR [eax+0x4ec4342e],0xeb
  42b005:	or     dh,BYTE PTR [ebp+esi*2-0x14]
  42b009:	or     bh,BYTE PTR [esi+0x6c]
  42b00c:	mov    dh,0xe7
  42b00e:	mov    cl,0xd
  42b010:	fs pop eax
  42b012:	mov    al,0x34
  42b014:	nop
  42b015:	mov    dl,dl
  42b017:	fdivr  DWORD PTR [ebx*8-0x4b64f094]
  42b01e:	mov    BYTE PTR [esi-0x28],bh
  42b021:	xor    ah,bh
  42b023:	ins    DWORD PTR es:[edi],dx
  42b024:	std    
  42b025:	fcmovnu st,st(0)
  42b027:	stos   BYTE PTR es:[edi],al
  42b028:	mov    eax,0x6500d854
  42b02d:	xchg   ebp,eax
  42b02e:	mov    ds:0xcc7f30fc,al
  42b033:	push   ds
  42b034:	xchg   BYTE PTR [eax+0x7ba4d7c1],dl
  42b03a:	dec    edi
  42b03b:	sub    edx,DWORD PTR [eax+0xa]
  42b03e:	adc    DWORD PTR [edi-0x4],0x34498c8
  42b045:	popf   
  42b046:	jne    0x42b029
  42b048:	dec    ecx
  42b049:	push   esi
  42b04a:	in     al,dx
  42b04b:	test   bh,bl
  42b04d:	add    al,0x86
  42b04f:	jmp    0x11416498
  42b054:	cmp    ebx,DWORD PTR [eax-0x4f]
  42b057:	fidivr DWORD PTR [eax+0x32]
  42b05a:	sub    cl,ch
  42b05c:	mov    eax,0x506ccfe8
  42b061:	ja     0x42afec
  42b063:	dec    ebx
  42b064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b065:	fdivr  QWORD PTR [edx-0x1c]
  42b068:	pop    ebx
  42b069:	out    0xd7,al
  42b06b:	mov    eax,0x41001824
  42b070:	sbb    al,0x27
  42b072:	gs dec eax
  42b074:	cmp    al,0xe2
  42b076:	push   eax
  42b077:	and    al,0x46
  42b079:	xor    DWORD PTR [edi+0x16],0x1a
  42b07d:	cmp    al,0x69
  42b07f:	outs   dx,DWORD PTR ds:[esi]
  42b080:	dec    eax
  42b081:	sti    
  42b082:	dec    edx
  42b083:	jns    0x42b08f
  42b085:	mov    ds:0xf084343c,al
  42b08a:	imul   BYTE PTR [esi]
  42b08c:	push   es
  42b08d:	xor    esp,ebx
  42b08f:	gs call 0x3a31c53f
  42b095:	scas   al,BYTE PTR es:[edi]
  42b096:	push   cs
  42b097:	mov    edi,0x383ee93f
  42b09c:	and    BYTE PTR [edx+edi*8-0x32],bh
  42b0a0:	sbb    al,BYTE PTR ds:0x465c6dc0
  42b0a6:	scas   al,BYTE PTR es:[edi]
  42b0a7:	das    
  42b0a8:	jecxz  0x42b103
  42b0aa:	xchg   DWORD PTR [edi],ebx
  42b0ac:	popf   
  42b0ad:	add    al,0xfe
  42b0af:	lds    esp,FWORD PTR [edx+0x4]
  42b0b2:	push   ecx
  42b0b3:	jmp    0xf988:0xf0284d1d
  42b0ba:	cmp    DWORD PTR [edi+0x4c1fb479],edx
  42b0c0:	cs repz cmp al,0xb3
  42b0c4:	fs ror dl,1
  42b0c7:	jnp    0x42b139
  42b0c9:	or     DWORD PTR [eax],eax
  42b0cb:	pushf  
  42b0cc:	jecxz  0x42b13a
  42b0ce:	inc    esp
  42b0cf:	loope  0x42b14d
  42b0d1:	xchg   esp,eax
  42b0d2:	fadd   QWORD PTR ds:0xd9c462e1
  42b0d8:	pop    ebp
  42b0d9:	(bad)  
  42b0da:	cmp    al,0xbd
  42b0dc:	call   0xf8066eab
  42b0e1:	test   al,0x41
  42b0e3:	add    BYTE PTR [eax],al
  42b0e5:	add    BYTE PTR [eax],al
  42b0e7:	add    al,bl
  42b0e9:	adc    al,0xe1
  42b0eb:	ds push ecx
  42b0ed:	or     DWORD PTR [eax],eax
  42b0ef:	add    BYTE PTR [eax],al
  42b0f1:	add    BYTE PTR [eax],al
  42b0f3:	add    BYTE PTR [ecx+0x9],dl
  42b0f6:	add    BYTE PTR [eax],al
  42b0f8:	xor    eax,0x7c2600
  42b0fd:	add    dh,BYTE PTR [esi]
  42b0ff:	or     BYTE PTR [eax],al
  42b101:	add    ah,al
  42b103:	inc    ebp
  42b104:	add    BYTE PTR [edi],dl
  42b106:	call   0x8eb8:0xe4c68629
  42b10d:	and    al,0xe2
  42b10f:	push   es
  42b110:	out    dx,eax
  42b111:	push   0xedc8d98d
  42b116:	dec    eax
  42b117:	sub    BYTE PTR [ebx+0x24ea372e],dh
  42b11d:	retf   0x6c27
  42b120:	mov    edx,0x3570c33e
  42b125:	outs   dx,BYTE PTR ds:[esi]
  42b126:	lea    ecx,[ebp+0xbdba90]
  42b12c:	dec    ebx
  42b12d:	or     DWORD PTR [eax+0x5e3877c2],ebx
  42b133:	adc    BYTE PTR [ebx+edi*1],0xdd
  42b137:	xchg   esi,eax
  42b138:	or     eax,0xe1a15c54
  42b13d:	mov    dh,BYTE PTR [edi+0x6]
  42b140:	push   eax
  42b141:	ret    
  42b142:	or     BYTE PTR [bp-0x4c],0x9b
  42b147:	xchg   ebx,eax
  42b148:	outs   dx,BYTE PTR ds:[esi]
  42b149:	xor    BYTE PTR [ebx],dl
  42b14b:	xchg   DWORD PTR [edi+ebx*1-0x1dd0769f],esp
  42b152:	sbb    ch,ah
  42b154:	jecxz  0x42b1a2
  42b156:	(bad)  
  42b157:	sbb    dl,bl
  42b159:	mov    ds:0xfe2a9657,al
  42b15e:	jo     0x42b183
  42b160:	mov    esp,0x76b8ced4
  42b165:	pop    ss
  42b166:	cdq    
  42b167:	xchg   esp,eax
  42b168:	push   edx
  42b169:	add    ah,BYTE PTR [ebx]
  42b16b:	into   
  42b16c:	push   cs
  42b16d:	retf   
  42b16e:	xlat   BYTE PTR ds:[ebx]
  42b16f:	add    al,0xb8
  42b171:	rol    DWORD PTR [eax+0x77],1
  42b174:	cmp    ebx,DWORD PTR cs:[edi-0x63237608]
  42b17b:	popa   
  42b17c:	or     BYTE PTR [edi],dl
  42b17e:	mov    cs,WORD PTR ds:0x40841920
  42b184:	xchg   DWORD PTR [ecx-0x4],esi
  42b187:	mov    WORD PTR [ecx+eax*1],ds
  42b18a:	stc    
  42b18b:	test   al,0x7a
  42b18d:	pop    esi
  42b18e:	pop    ds
  42b18f:	xor    eax,0x5e
  42b192:	xor    al,0xd4
  42b194:	int3   
  42b195:	sub    ecx,DWORD PTR [ecx]
  42b197:	xor    DWORD PTR [ecx-0x28],esi
  42b19a:	sbb    eax,0x13f4f074
  42b1a0:	dec    eax
  42b1a1:	call   0x1e970445
  42b1a6:	adc    al,0xfb
  42b1a8:	push   esp
  42b1aa:	pop    ebx
  42b1ab:	(bad)  
  42b1ac:	jmp    0x42b15b
  42b1ae:	or     bh,BYTE PTR [ebx+ebx*8+0x301a903d]
  42b1b5:	push   edi
  42b1b6:	stc    
  42b1b7:	xlat   BYTE PTR ds:[ebx]
  42b1b8:	loopne 0x42b206
  42b1ba:	push   ebx
  42b1bb:	in     eax,dx
  42b1bc:	xchg   esp,eax
  42b1bd:	fld    TBYTE PTR [edx]
  42b1bf:	dec    ecx
  42b1c0:	dec    esp
  42b1c1:	add    al,0xcb
  42b1c3:	push   eax
  42b1c4:	inc    eax
  42b1c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1c6:	nop
  42b1c7:	mov    eax,ds:0x8282b78
  42b1cc:	out    dx,eax
  42b1cd:	pop    edx
  42b1ce:	(bad)  
  42b1cf:	pop    ecx
  42b1d0:	pop    ebp
  42b1d1:	mov    ecx,0x3a67d0aa
  42b1d6:	lea    edx,ds:0x2369837
  42b1dc:	hlt    
  42b1dd:	mov    edi,0x6324dbea
  42b1e2:	scas   eax,DWORD PTR es:[edi]
  42b1e3:	rcl    DWORD PTR [edi+0x18],cl
  42b1e6:	repnz in eax,0xb4
  42b1e9:	out    0xc1,al
  42b1eb:	fwait
  42b1ec:	into   
  42b1ed:	cs cmp al,0x55
  42b1f0:	clc    
  42b1f1:	and    al,0x94
  42b1f3:	std    
  42b1f4:	lahf   
  42b1f5:	adc    ah,BYTE PTR [ebx]
  42b1f7:	pusha  
  42b1f8:	sub    eax,0xf12ac557
  42b1fd:	sar    BYTE PTR [ebx-0x3e73f70e],1
  42b203:	cdq    
  42b204:	push   edx
  42b205:	add    DWORD PTR [ecx-0x62],esp
  42b208:	mov    al,0x2c
  42b20a:	or     ch,BYTE PTR [edx+0x3ac434a5]
  42b210:	shr    DWORD PTR [eax+edx*2+0x73],cl
  42b214:	push   ebx
  42b215:	add    cl,BYTE PTR [edi-0x3050050d]
  42b21b:	je     0x42b241
  42b21d:	jbe    0x42b1f8
  42b21f:	adc    eax,0x156dbd0
  42b224:	sbb    al,0xd2
  42b226:	push   ecx
  42b227:	mov    bl,0x4f
  42b229:	ret    0x78ec
  42b22c:	les    eax,FWORD PTR [eax+0x2f]
  42b22f:	cwde   
  42b230:	jno    0x42b20e
  42b232:	and    BYTE PTR [ebx],dl
  42b234:	lods   al,BYTE PTR ds:[esi]
  42b235:	jmp    0x428c09e
  42b23a:	lods   eax,DWORD PTR ds:[esi]
  42b23b:	or     eax,0x886c9704
  42b240:	sub    DWORD PTR ds:0x3e70ca2f,eax
  42b246:	mov    ?,esp
  42b248:	lods   al,BYTE PTR ds:[esi]
  42b249:	push   esp
  42b24a:	neg    BYTE PTR [ebx+0x675e742c]
  42b250:	mov    edx,0xd6548254
  42b255:	retf   
  42b256:	fisub  WORD PTR [edx]
  42b258:	jle    0x42b216
  42b25a:	js     0x42b27e
  42b25c:	int    0x1f
  42b25e:	imul   edx,ebp,0x9c36c854
  42b264:	jne    0x42b294
  42b266:	loop   0x42b244
  42b268:	sub    BYTE PTR [ebx+0x2ec06c5c],ah
  42b26e:	dec    esp
  42b26f:	fiadd  WORD PTR [ecx]
  42b272:	push   edi
  42b273:	fs (bad) 
  42b275:	in     al,0x90
  42b277:	or     DWORD PTR [ecx-0x620dce4b],ebx
  42b27d:	mov    edx,0xe63d398c
  42b282:	jl     0x42b25d
  42b284:	mov    dh,0xde
  42b286:	xor    BYTE PTR [eax-0x5f5da107],0x42
  42b28d:	mov    bl,0x66
  42b28f:	jae    0x42b265
  42b291:	mov    dl,BYTE PTR [ecx+0x55]
  42b294:	mov    al,al
  42b296:	bound  edi,QWORD PTR [ebp+ebx*8-0x8]
  42b29a:	aam    0x72
  42b29c:	sub    al,BYTE PTR cs:[ebp+0x57]
  42b2a0:	sub    DWORD PTR [edi],esi
  42b2a2:	mov    al,ds:0x3e100afb
  42b2a7:	jb     0x42b24c
  42b2a9:	shr    edi,0xc4
  42b2ac:	mov    esi,0xca882b7b
  42b2b1:	aad    0xdd
  42b2b3:	adc    eax,0xb03815e8
  42b2b8:	stc    
  42b2b9:	sbb    BYTE PTR [esi+ebp*1-0xf50f38e],bl
  42b2c0:	bound  eax,QWORD PTR [edx+eax*8+0x12]
  42b2c4:	int3   
  42b2c5:	(bad)  
  42b2c6:	xor    al,dh
  42b2c8:	repnz xchg edx,eax
  42b2ca:	iret   
  42b2cb:	or     al,0xc9
  42b2cd:	inc    esp
  42b2ce:	sbb    eax,0x235bf8d8
  42b2d3:	pop    ss
  42b2d4:	adc    DWORD PTR [esi],esi
  42b2d6:	cmc    
  42b2d7:	jbe    0x42b2d5
  42b2d9:	push   es
  42b2da:	out    dx,eax
  42b2db:	sti    
  42b2dc:	xchg   BYTE PTR [ebp+0x20ac6f2d],al
  42b2e2:	cmp    ecx,DWORD PTR [edx+eiz*8-0x4c8f0057]
  42b2e9:	add    BYTE PTR [ebx+eiz*2+0x65],0x48
  42b2ee:	fidiv  WORD PTR [edx]
  42b2f0:	ret    0xb712
  42b2f3:	in     al,dx
  42b2f4:	or     eax,0x1f2e7547
  42b2f9:	retf   0xd912
  42b2fc:	adc    dh,ch
  42b2fe:	or     edi,DWORD PTR [edi+ebx*8]
  42b301:	out    dx,eax
  42b302:	jnp    0x42b326
  42b304:	leave  
  42b305:	xor    al,0x2d
  42b307:	lods   al,BYTE PTR ds:[esi]
  42b308:	dec    esi
  42b309:	mov    ?,WORD PTR [ecx+0x5875dc59]
  42b30f:	dec    edi
  42b310:	inc    esi
  42b311:	push   DWORD PTR [ebx+0x3d882d05]
  42b317:	jl     0x42b349
  42b319:	loopne 0x42b393
  42b31b:	inc    BYTE PTR [eax-0x14]
  42b31e:	data16 jo 0x42b345
  42b321:	lods   eax,DWORD PTR ds:[esi]
  42b322:	inc    DWORD PTR [eax-0x1ad0050b]
  42b328:	pop    es
  42b329:	dec    eax
  42b32a:	sub    bl,BYTE PTR [edx+0x1711779]
  42b330:	adc    dl,0x6c
  42b333:	adc    DWORD PTR [ebp-0x6d],edx
  42b336:	out    dx,eax
  42b337:	cmp    ecx,DWORD PTR [ecx+0x55]
  42b33a:	test   eax,0x98822990
  42b33f:	jb     0x42b2f1
  42b341:	stos   DWORD PTR es:[edi],eax
  42b342:	jecxz  0x42b348
  42b344:	mov    ah,0x1e
  42b346:	mov    dh,0x22
  42b348:	add    dl,ah
  42b34a:	mov    al,ds:0x5f5c2d59
  42b34f:	dec    edx
  42b350:	push   ebp
  42b351:	push   ecx
  42b352:	mov    DWORD PTR [eax-0x797fb93e],esp
  42b358:	shr    BYTE PTR [esi-0x48],0x1e
  42b35c:	in     al,0xaf
  42b35e:	xchg   edi,eax
  42b35f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b360:	std    
  42b361:	into   
  42b362:	lahf   
  42b363:	inc    edi
  42b364:	fsubr  st,st(6)
  42b366:	dec    ebx
  42b367:	stos   DWORD PTR es:[edi],eax
  42b368:	enter  0xf402,0x6d
  42b36c:	cmp    DWORD PTR [ebx],ebx
  42b36e:	rcl    BYTE PTR [ebp-0x32d58f91],cl
  42b374:	cld    
  42b375:	or     eax,0x54966838
  42b37a:	xchg   esp,eax
  42b37b:	or     BYTE PTR [edx],al
  42b37d:	scas   al,BYTE PTR es:[edi]
  42b37e:	mov    al,ds:0x956069e2
  42b383:	mov    eax,0xab0a656b
  42b388:	jecxz  0x42b35f
  42b38a:	mov    eax,ds:0x1d1adc78
  42b38f:	aaa    
  42b390:	pop    eax
  42b391:	push   ebp
  42b392:	fld    TBYTE PTR [esi+0x51d00064]
  42b398:	imul   ebx,DWORD PTR [esi],0xffffffac
  42b39b:	cmc    
  42b39c:	in     eax,dx
  42b39d:	mov    ebx,0x2bd93ea8
  42b3a2:	jae    0x42b3e6
  42b3a4:	xor    al,0x17
  42b3a6:	add    cl,ah
  42b3a8:	aam    0x32
  42b3aa:	dec    edi
  42b3ab:	or     ah,bl
  42b3ad:	jl     0x42b399
  42b3af:	or     dh,al
  42b3b1:	icebp  
  42b3b2:	xchg   ebx,eax
  42b3b3:	fsub   QWORD PTR [esi]
  42b3b5:	pop    esi
  42b3b6:	jmp    0x1adc:0x441402e8
  42b3bd:	xor    ch,0xc0
  42b3c0:	inc    edi
  42b3c1:	ja     0x42b37f
  42b3c3:	jge    0x42b40b
  42b3c5:	xlat   BYTE PTR ds:[ebx]
  42b3c6:	cmp    eax,DWORD PTR [edx+ecx*2+0x39]
  42b3ca:	jmp    0xbfb87faf
  42b3cf:	push   ebp
  42b3d0:	dec    edx
  42b3d1:	(bad)  
  42b3d2:	xchg   ebx,eax
  42b3d3:	inc    eax
  42b3d4:	add    al,0xd3
  42b3d6:	jno    0x42b3c4
  42b3d8:	mov    ebp,0xe4b01db3
  42b3dd:	sub    BYTE PTR [ebp-0xd5bd46],dh
  42b3e3:	sbb    al,0x5e
  42b3e5:	fisttp WORD PTR [eax+edi*2+0x5]
  42b3e9:	call   0x7de3ff4d
  42b3ee:	ss hlt 
  42b3f0:	mov    WORD PTR [eax-0x31],?
  42b3f3:	sbb    ecx,DWORD PTR cs:[ebp-0x57]
  42b3f7:	loop   0x42b411
  42b3f9:	jb     0x42b465
  42b3fb:	mov    DWORD PTR [edi],edi
  42b3fd:	in     eax,0x87
  42b3ff:	ss into 
  42b401:	cmp    al,0x25
  42b403:	lods   eax,DWORD PTR ds:[esi]
  42b404:	cmp    ah,dl
  42b406:	xchg   ecx,eax
  42b407:	outs   dx,DWORD PTR ds:[esi]
  42b408:	inc    ecx
  42b409:	fisub  DWORD PTR [eax+0x72]
  42b40c:	mov    al,ds:0x2d82bd05
  42b411:	fistp  WORD PTR [eax-0x7c]
  42b414:	shr    edx,1
  42b416:	test   dl,cl
  42b418:	loope  0x42b3f5
  42b41a:	adc    bl,dh
  42b41c:	sub    al,0x45
  42b41e:	xor    cl,BYTE PTR [edi-0x154c2b67]
  42b424:	sbb    DWORD PTR [eax-0x1b],edx
  42b427:	iret   
  42b428:	mov    ss,edx
  42b42a:	int    0x4d
  42b42c:	loopne 0x42b3f6
  42b42e:	je     0x42b3fe
  42b430:	xor    eax,0x9a9216bf
  42b435:	mov    bl,0x16
  42b437:	cwde   
  42b438:	inc    esi
  42b439:	cmp    eax,0xdb8fefe6
  42b43e:	jge    0x42b3ce
  42b440:	inc    eax
  42b441:	lods   al,BYTE PTR ds:[esi]
  42b442:	clc    
  42b443:	pop    eax
  42b444:	cmp    eax,ebp
  42b446:	inc    esi
  42b447:	add    al,0xb6
  42b449:	or     DWORD PTR fs:[esi],0x2f9b4a5b
  42b450:	or     ch,BYTE PTR [edi-0x56ed8d78]
  42b456:	pop    eax
  42b457:	xor    al,0x25
  42b459:	or     ch,BYTE PTR [edx+0x21866fac]
  42b45f:	push   0xffffff9d
  42b461:	call   0xda12b5c9
  42b466:	imul   esp,DWORD PTR [edi+0x3d6dd477],0x2a
  42b46d:	js     0x42b443
  42b46f:	xchg   ebx,eax
  42b470:	lods   al,BYTE PTR ds:[esi]
  42b471:	les    ebx,FWORD PTR [ebx+0x5b]
  42b474:	jge    0x42b4c5
  42b476:	pushf  
  42b477:	fimul  DWORD PTR [ecx+0x6d]
  42b47a:	or     ebx,edi
  42b47c:	mov    ebp,0x72c04a17
  42b481:	dec    ecx
  42b482:	outs   dx,BYTE PTR ds:[esi]
  42b483:	cwde   
  42b484:	mov    bl,0x4a
  42b486:	and    eax,0x33fbe40c
  42b48b:	fild   QWORD PTR [eax]
  42b48d:	push   esp
  42b48e:	test   bh,bh
  42b490:	add    ecx,DWORD PTR [esi+eax*4+0x3cbbca8c]
  42b497:	int    0x7d
  42b499:	arpl   WORD PTR [eax+0x35b59383],si
  42b49f:	jne    0x42b4f0
  42b4a1:	mov    esp,0x4392d4f6
  42b4a6:	cs data16 loop 0x42b46a
  42b4aa:	xchg   ebp,eax
  42b4ab:	sar    al,0x23
  42b4ae:	pop    ss
  42b4af:	jl     0x42b4ab
  42b4b1:	(bad)  
  42b4b2:	push   ecx
  42b4b3:	(bad)  
  42b4b4:	and    ebx,DWORD PTR [eax+ebp*2]
  42b4b7:	shl    BYTE PTR [eax+ecx*2],1
  42b4ba:	mov    eax,0xc40ccf3a
  42b4bf:	(bad)  
  42b4c0:	push   edx
  42b4c1:	mov    ecx,DWORD PTR [ebp+0x418e1fef]
  42b4c7:	call   0x1394f44f
  42b4cc:	ins    BYTE PTR es:[edi],dx
  42b4cd:	in     eax,0xd8
  42b4cf:	mov    al,ds:0xade6270c
  42b4d4:	pmaxsw mm1,mm5
  42b4d7:	loope  0x42b4d1
  42b4d9:	xor    BYTE PTR [ecx+0x73],ch
  42b4dc:	ficomp DWORD PTR [edx+edx*2]
  42b4df:	push   eax
  42b4e0:	(bad)  
  42b4e3:	xchg   esi,eax
  42b4e4:	xchg   edi,eax
  42b4e5:	sub    esp,ecx
  42b4e7:	in     al,dx
  42b4e8:	sbb    al,0x5
  42b4ea:	pop    esi
  42b4eb:	cld    
  42b4ec:	int3   
  42b4ed:	dec    ebp
  42b4ee:	fild   DWORD PTR [eax]
  42b4f0:	xchg   ebp,esp
  42b4f2:	or     ecx,esp
  42b4f4:	and    BYTE PTR [edi],bl
  42b4f6:	int    0x28
  42b4f8:	sti    
  42b4f9:	into   
  42b4fa:	pusha  
  42b4fb:	pop    eax
  42b4fc:	sahf   
  42b4fd:	inc    esp
  42b4fe:	xor    DWORD PTR [ebp+0x4b],eax
  42b501:	mov    ecx,esi
  42b503:	iret   
  42b504:	sbb    eax,0x41ec6849
  42b509:	push   esi
  42b50a:	xor    eax,0xb572b8a0
  42b50f:	adc    ch,al
  42b511:	adc    BYTE PTR [edx-0x5e],0xbb
  42b515:	jmp    DWORD PTR [ecx-0x758cb0b]
  42b51b:	loop   0x42b4ba
  42b51d:	leave  
  42b51e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b51f:	xor    al,0x5e
  42b521:	pop    eax
  42b522:	lods   eax,DWORD PTR ds:[esi]
  42b523:	cmc    
  42b524:	mov    cl,0xd8
  42b526:	in     al,0x56
  42b528:	push   ebp
  42b529:	xor    bh,BYTE PTR [ebx+edx*2-0x4b]
  42b52d:	and    al,0xe7
  42b52f:	jbe    0x42b590
  42b531:	div    BYTE PTR [edi-0x60]
  42b534:	aas    
  42b535:	loope  0x42b4cb
  42b537:	scas   eax,DWORD PTR es:[edi]
  42b538:	in     eax,dx
  42b539:	test   BYTE PTR [ebp-0x17],dh
  42b53c:	dec    eax
  42b53d:	fwait
  42b53e:	mov    ds:0x9dc4af7f,al
  42b543:	or     ah,cl
  42b545:	ins    BYTE PTR es:[edi],dx
  42b546:	mov    al,0x35
  42b548:	je     0x42b5bb
  42b54a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b54b:	not    BYTE PTR ds:0x33f09059
  42b551:	dec    edx
  42b552:	pop    ecx
  42b553:	test   eax,esp
  42b555:	sub    esp,DWORD PTR [esi]
  42b557:	mov    ah,0x7d
  42b559:	loopne 0x42b592
  42b55b:	in     eax,dx
  42b55c:	mov    ch,0x8a
  42b55e:	xor    al,0xde
  42b560:	pop    esp
  42b561:	or     BYTE PTR [edi*8-0x8a73f6e],dh
  42b568:	pop    ds
  42b569:	and    BYTE PTR [eax-0x336e906a],0x9f
  42b570:	cmc    
  42b571:	sub    esp,DWORD PTR [esi+esi*2-0x2e7bb0ce]
  42b578:	test   eax,0xcec8082c
  42b57d:	and    al,0x8e
  42b57f:	pop    edi
  42b580:	and    eax,0xec1bf702
  42b585:	test   al,0x3b
  42b587:	mov    ch,0x95
  42b589:	into   
  42b58a:	sub    ebp,ebx
  42b58c:	scas   al,BYTE PTR es:[edi]
  42b58d:	xchg   esp,eax
  42b58e:	call   0xbda03071
  42b593:	jmp    0x42b576
  42b595:	aad    0xb8
  42b597:	sahf   
  42b598:	int3   
  42b599:	push   ds
  42b59a:	sbb    ebp,DWORD PTR [ebx]
  42b59c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b59d:	jno    0x42b599
  42b59f:	fsubr  QWORD PTR [ebx-0x482a0e3a]
  42b5a5:	enter  0x207d,0x0
  42b5a9:	push   esp
  42b5aa:	cli    
  42b5ab:	call   0xa8c2:0xb43c2634
  42b5b2:	imul   ebx,esp,0xf1dc1e97
  42b5b8:	lahf   
  42b5b9:	jno    0x42b587
  42b5bb:	nop
  42b5bc:	and    ah,bh
  42b5be:	mov    ecx,0xf1a7304d
  42b5c3:	lock mov edx,0x4fdb9f25
  42b5c9:	mov    bh,0xff
  42b5cb:	xchg   DWORD PTR [edx+ebp*8],edx
  42b5ce:	mov    ds:0xcb488693,al
  42b5d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5d4:	sar    BYTE PTR [eax],1
  42b5d6:	xlat   BYTE PTR ds:[ebx]
  42b5d7:	mul    DWORD PTR [ebx-0x5abd2cb1]
  42b5dd:	out    dx,eax
  42b5de:	loopne 0x42b573
  42b5e0:	scas   eax,DWORD PTR es:[edi]
  42b5e1:	mov    edx,0x525849b6
  42b5e6:	adc    eax,0xa7683104
  42b5eb:	sub    eax,0x75c3bba5
  42b5f0:	sub    BYTE PTR [ebx],cl
  42b5f2:	adc    ecx,DWORD PTR [esi]
  42b5f4:	rol    DWORD PTR [edx],cl
  42b5f6:	adc    BYTE PTR [ebx-0x3c],al
  42b5f9:	dec    esp
  42b5fa:	shr    DWORD PTR [edi-0x6d3da84d],0xec
  42b601:	inc    esi
  42b602:	jo     0x42b646
  42b604:	out    dx,eax
  42b605:	adc    ebx,edx
  42b607:	aam    0x8e
  42b609:	mov    ecx,0xf55618ef
  42b60e:	pushf  
  42b60f:	gs stos BYTE PTR es:[edi],al
  42b611:	or     al,ah
  42b613:	iret   
  42b614:	cmp    al,0xf0
  42b616:	xchg   esi,eax
  42b617:	int3   
  42b618:	call   DWORD PTR [edi+0x35]
  42b61b:	inc    ecx
  42b61c:	lds    esp,FWORD PTR [eax-0x48]
  42b61f:	int3   
  42b620:	loop   0x42b5a9
  42b622:	imul   edi,edi,0x60843878
  42b628:	out    dx,al
  42b629:	mov    ch,0x53
  42b62b:	xchg   esi,eax
  42b62c:	jae    0x42b629
  42b62e:	daa    
  42b62f:	sub    al,0x50
  42b631:	pop    es
  42b632:	(bad)  
  42b633:	and    BYTE PTR [edi+ebp*2+0x1e],cl
  42b637:	cli    
  42b638:	push   eax
  42b639:	retf   
  42b63a:	xchg   ecx,eax
  42b63b:	clc    
  42b63c:	dec    esp
  42b63d:	xchg   esp,eax
  42b63e:	retf   0x5752
  42b641:	je     0x42b684
  42b643:	arpl   WORD PTR [ecx-0x6fb90ec7],si
  42b649:	fcomp  QWORD PTR [eax-0x2adf083e]
  42b64f:	aam    0x3e
  42b651:	mov    ds:0x9020bc79,al
  42b656:	fsub   st,st(3)
  42b658:	fsubr  DWORD PTR [ecx+edx*2-0x25bc9bd6]
  42b65f:	jne    0x42b632
  42b661:	ins    DWORD PTR es:[edi],dx
  42b662:	mov    edx,0x688c6be
  42b667:	jae    0x42b6e7
  42b669:	rcr    BYTE PTR [esi-0x53312cbc],1
  42b66f:	rcl    DWORD PTR [ecx],0x5b
  42b672:	jnp    0x42b619
  42b674:	enter  0xfa26,0xd0
  42b678:	inc    ecx
  42b679:	fwait
  42b67a:	and    al,BYTE PTR [ebx-0x5ebf9d7a]
  42b680:	js     0x42b6a4
  42b682:	cld    
  42b683:	jbe    0x42b6fd
  42b685:	scas   eax,DWORD PTR es:[edi]
  42b686:	push   ecx
  42b687:	sub    ch,ch
  42b689:	pushf  
  42b68a:	and    BYTE PTR [esp+esi*1-0x7],dl
  42b68e:	(bad)  
  42b68f:	enter  0xcf00,0xc0
  42b693:	in     al,dx
  42b694:	shl    DWORD PTR [ebx+0x557aef7b],1
  42b69a:	aas    
  42b69b:	in     al,0x5d
  42b69d:	push   ebx
  42b69e:	lahf   
  42b69f:	mov    BYTE PTR [edx],ah
  42b6a1:	lods   al,BYTE PTR ds:[esi]
  42b6a2:	cmp    edx,DWORD PTR [eax]
  42b6a4:	or     BYTE PTR [ecx-0x45],ch
  42b6a7:	xor    DWORD PTR [ecx-0x2a10d66e],0xbfcd69b0
  42b6b1:	fwait
  42b6b2:	test   ah,dh
  42b6b4:	pop    ds
  42b6b5:	add    al,0xd4
  42b6b7:	ror    ah,0xce
  42b6ba:	jg     0x42b6bf
  42b6bc:	test   BYTE PTR [edi-0x56],bl
  42b6bf:	clc    
  42b6c0:	inc    esp
  42b6c1:	test   BYTE PTR [edi+ebp*8+0x10],bh
  42b6c5:	inc    ebp
  42b6c6:	push   0xffffff94
  42b6c8:	sbb    al,0x58
  42b6ca:	fwait
  42b6cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6cc:	mov    eax,0xfc55732f
  42b6d1:	inc    eax
  42b6d2:	bound  ebx,QWORD PTR [esi-0x27d6753b]
  42b6d8:	xchg   DWORD PTR [ebp-0x18],ebx
  42b6db:	aaa    
  42b6dc:	mov    dl,0x2b
  42b6de:	aaa    
  42b6df:	xchg   BYTE PTR [edi-0x4ef3241b],bl
  42b6e5:	aam    0x9b
  42b6e7:	mov    ds:0x57b8f11c,al
  42b6ec:	xor    BYTE PTR [ecx-0x3047703f],bl
  42b6f2:	cli    
  42b6f3:	lahf   
  42b6f4:	std    
  42b6f5:	push   esp
  42b6f6:	mov    eax,0x186e4e1e
  42b6fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6fc:	leave  
  42b6fd:	popa   
  42b6fe:	cld    
  42b6ff:	jbe    0x42b74a
  42b701:	jne    0x42b6f3
  42b703:	xchg   esp,eax
  42b704:	or     ebp,ebx
  42b706:	retf   
  42b707:	and    BYTE PTR [ebx+eax*1-0x494117e6],cl
  42b70e:	sub    DWORD PTR [esp+eax*2-0x21],edx
  42b712:	sti    
  42b713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b714:	mov    ecx,0x81098a4c
  42b719:	push   0x26ea7c6d
  42b71e:	ins    DWORD PTR es:[edi],dx
  42b71f:	sbb    DWORD PTR [eax+0x6b758ca8],esi
  42b725:	add    al,0x7a
  42b727:	retf   0x2790
  42b72a:	outs   dx,BYTE PTR ds:[esi]
  42b72b:	xor    al,0x1d
  42b72d:	dec    eax
  42b72e:	sbb    dl,al
  42b730:	les    edi,FWORD PTR [ecx+0xb580ed4]
  42b736:	nop
  42b737:	xchg   ecx,eax
  42b738:	push   edi
  42b739:	nop
  42b73a:	pop    esi
  42b73b:	out    dx,eax
  42b73c:	xchg   esp,eax
  42b73d:	jl     0x42b7b4
  42b73f:	fstp   TBYTE PTR [ebx+0x7df3908e]
  42b745:	sub    eax,0x752e17a0
  42b74a:	mov    ch,0xdf
  42b74c:	and    BYTE PTR ds:0xce524813,0xcb
  42b753:	je     0x42b7cb
  42b755:	pop    ebx
  42b756:	fs in  al,dx
  42b758:	ins    BYTE PTR es:[edi],dx
  42b759:	push   0x53
  42b75b:	retf   0x3224
  42b75e:	fwait
  42b75f:	mov    al,ds:0x4f69008
  42b764:	jns    0x42b7b2
  42b766:	out    dx,eax
  42b767:	mov    fs,WORD PTR [esi-0x6d04b63]
  42b76d:	adc    dl,ch
  42b76f:	addr16 pop ds
  42b771:	inc    esi
  42b772:	jmp    0x824:0x934224d8
  42b779:	jne    0x42b79e
  42b77b:	adc    DWORD PTR [eax-0x7aba88f4],eax
  42b781:	mov    al,0x60
  42b783:	clc    
  42b784:	inc    esi
  42b785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b786:	or     al,0x7
  42b788:	and    bl,BYTE PTR [ebx+ecx*2]
  42b78b:	mov    WORD PTR [esi-0x39],fs
  42b78e:	enter  0x5207,0x66
  42b792:	dec    ebp
  42b793:	xchg   edi,eax
  42b794:	shl    BYTE PTR [ebx],0xa2
  42b797:	in     al,dx
  42b798:	jmp    0x6419:0x5f573447
  42b79f:	xchg   ebp,eax
  42b7a0:	adc    BYTE PTR [ebp+edx*8-0x2d],ch
  42b7a4:	arpl   WORD PTR [ebx+0x4f],di
  42b7a7:	mov    esp,0x4d66b8d1
  42b7ac:	jmp    0xdc0cab30
  42b7b1:	push   ecx
  42b7b2:	fmul   QWORD PTR ds:0xb0c55cb9
  42b7b8:	stos   BYTE PTR es:[edi],al
  42b7b9:	shl    ebx,cl
  42b7bb:	add    BYTE PTR [edi],cl
  42b7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7be:	iret   
  42b7bf:	loop   0x42b74e
  42b7c1:	lds    esp,FWORD PTR [ebp+0x68]
  42b7c4:	and    al,0xa2
  42b7c6:	xchg   BYTE PTR [edx+0x308abebe],al
  42b7cc:	(bad)  
  42b7cd:	int3   
  42b7ce:	outs   dx,DWORD PTR ds:[esi]
  42b7cf:	xchg   ecx,eax
  42b7d0:	jl     0x42b7f1
  42b7d2:	pop    edx
  42b7d3:	out    0xe4,eax
  42b7d5:	xlat   BYTE PTR ds:[ebx]
  42b7d6:	lock ss inc edx
  42b7d9:	inc    edx
  42b7da:	mov    ebp,0x2ffe396f
  42b7df:	adc    al,0x2
  42b7e1:	sub    BYTE PTR [edi],0x9d
  42b7e4:	or     DWORD PTR [edx-0x33c7d060],ebx
  42b7ea:	jp     0x42b7b3
  42b7ec:	cmp    DWORD PTR [eax+0x5c71990b],0x93c2fe17
  42b7f6:	xchg   DWORD PTR [ebp-0x11fb6a28],eax
  42b7fc:	or     al,0xbb
  42b7fe:	pusha  
  42b7ff:	in     al,dx
  42b800:	jne    0x42b7e8
  42b802:	shr    DWORD PTR [eax],0x8d
  42b805:	mov    ss,WORD PTR [edi-0x68]
  42b808:	int    0x8
  42b80a:	mov    ecx,esp
  42b80c:	dec    esp
  42b80d:	stc    
  42b80e:	adc    bh,BYTE PTR [ebp+0x1d]
  42b811:	xor    BYTE PTR [esi+0x30],ch
  42b814:	add    BYTE PTR [eax+0x7f],dh
  42b817:	(bad)  
  42b819:	imul   edx,esp,0x18811688
  42b81f:	clc    
  42b820:	in     al,dx
  42b821:	cmp    bh,BYTE PTR [ebp-0x1f1ca0a2]
  42b827:	cmp    al,0xb6
  42b829:	call   0xef32:0x9be796c
  42b830:	pusha  
  42b831:	stos   DWORD PTR es:[edi],eax
  42b832:	(bad)  
  42b833:	cmp    al,0x74
  42b835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b836:	neg    DWORD PTR [eax+edx*4-0x7c]
  42b83a:	imul   eax,DWORD PTR [edx],0xffffffe1
  42b83d:	(bad)  
  42b83e:	cmc    
  42b83f:	stc    
  42b840:	xor    DWORD PTR [ebx-0x58],esi
  42b843:	mov    ebx,0x6f9fed3d
  42b848:	lods   al,BYTE PTR ds:[esi]
  42b849:	push   eax
  42b84a:	or     dl,BYTE PTR [eax-0x4f]
  42b84d:	dec    eax
  42b84e:	mov    ebp,0x3c98d96f
  42b853:	jno    0x42b8c9
  42b855:	(bad)  
  42b856:	in     al,0x70
  42b858:	sub    cl,BYTE PTR [edi+0x59]
  42b85b:	and    DWORD PTR [ebx+0x145e3198],edi
  42b861:	in     eax,0xfe
  42b863:	(bad)  
  42b864:	fld    DWORD PTR [edx-0x56b45e44]
  42b86a:	adc    ch,bh
  42b86c:	stos   BYTE PTR es:[edi],al
  42b86d:	je     0x42b7fc
  42b86f:	loopne 0x42b8ad
  42b871:	fsubr  DWORD PTR [ebx]
  42b873:	dec    edx
  42b874:	inc    ebx
  42b875:	add    eax,0x5a88ebbc
  42b87a:	sahf   
  42b87b:	pop    DWORD PTR [ebx]
  42b87d:	fidiv  WORD PTR [esi-0x6d53573c]
  42b883:	push   edx
  42b884:	sti    
  42b885:	add    ah,BYTE PTR [ebx-0x13]
  42b888:	mov    es,WORD PTR [eax-0x20bb4930]
  42b88e:	daa    
  42b88f:	ins    BYTE PTR es:[edi],dx
  42b890:	jge    0x42b829
  42b892:	mov    esi,0x32693bf4
  42b897:	sub    al,0xe6
  42b899:	push   edx
  42b89a:	cs jmp 0x91d1:0x273d2d9c
  42b8a2:	inc    ebp
  42b8a3:	cwde   
  42b8a4:	pusha  
  42b8a5:	rcl    BYTE PTR [ebp+0xe],0xd8
  42b8a9:	mov    edx,0xc708ead4
  42b8ae:	in     al,0xfd
  42b8b0:	dec    ecx
  42b8b1:	shl    BYTE PTR [eax-0x3a],cl
  42b8b4:	and    DWORD PTR [eax+eax*2],eax
  42b8b7:	or     BYTE PTR [edi-0x60],al
  42b8ba:	and    al,0xb9
  42b8bc:	push   edx
  42b8bd:	(bad)  
  42b8be:	mov    dl,0xcc
  42b8c0:	sub    al,0x32
  42b8c2:	jmp    0x42b8cc
  42b8c4:	(bad)  
  42b8c5:	in     eax,0x81
  42b8c7:	in     al,0x55
  42b8c9:	aam    0xbc
  42b8cb:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42b8cd:	mov    edi,cs
  42b8cf:	nop
  42b8d0:	xlat   BYTE PTR ds:[ebx]
  42b8d1:	jp     0x42b8cb
  42b8d3:	daa    
  42b8d4:	xchg   esp,eax
  42b8d5:	mov    ebx,0xb823b72f
  42b8da:	rcr    BYTE PTR [edx+esi*2],0xe4
  42b8de:	mov    ds:0x37cca2f0,al
  42b8e3:	xchg   ecx,eax
  42b8e4:	inc    eax
  42b8e5:	std    
  42b8e6:	in     eax,dx
  42b8e7:	bound  eax,QWORD PTR [edx+0x793c05c5]
  42b8ed:	call   0xf6886877
  42b8f2:	cmp    dl,ch
  42b8f4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b8f6:	or     al,0xc1
  42b8f8:	adc    bl,BYTE PTR [ecx+0x7c]
  42b8fb:	dec    esi
  42b8fc:	stos   DWORD PTR es:[edi],eax
  42b8fd:	push   eax
  42b8fe:	lds    esi,FWORD PTR [eax]
  42b900:	jp     0x42b906
  42b902:	xchg   ah,dh
  42b904:	push   esp
  42b905:	leave  
  42b906:	cli    
  42b907:	pushf  
  42b908:	push   esp
  42b909:	stc    
  42b90a:	cwde   
  42b90b:	iret   
  42b90c:	loope  0x42b8cc
  42b90e:	(bad)  
  42b90f:	icebp  
  42b910:	imul   edi,DWORD PTR [eax-0x1],0xfffffff0
  42b914:	hlt    
  42b915:	ss out dx,al
  42b917:	fdivr  QWORD PTR [ebp+0xd482078]
  42b91d:	add    BYTE PTR ds:0x57314252,bh
  42b923:	inc    esp
  42b924:	mov    al,dh
  42b926:	sahf   
  42b927:	add    BYTE PTR [edi-0x10],0x7a
  42b92b:	loopne 0x42b995
  42b92d:	ret    0x9fb3
  42b930:	sub    eax,0xe6c28bcd
  42b935:	mov    WORD PTR [eax],fs
  42b937:	sub    eax,0x206320fb
  42b93c:	jns    0x42b96b
  42b93e:	xor    al,0x68
  42b940:	jns    0x42b923
  42b942:	cmc    
  42b943:	loopne 0x42b936
  42b945:	jb     0x42b930
  42b947:	pop    eax
  42b948:	pusha  
  42b949:	aad    0xe2
  42b94b:	ja     0x42b8cf
  42b94d:	test   eax,0x337ce96c
  42b952:	mov    eax,0xc51328e4
  42b957:	rcr    DWORD PTR ds:0x861df7a0,1
  42b95d:	mov    al,0x7e
  42b95f:	jle    0x42b9b2
  42b961:	mov    ch,0xc4
  42b963:	push   eax
  42b964:	bound  esp,QWORD PTR [eax]
  42b966:	ss popf 
  42b968:	jnp    0x42b9e1
  42b96a:	pop    edi
  42b96b:	ins    BYTE PTR es:[edi],dx
  42b96c:	js     0x42b9d7
  42b96e:	fs fcmovbe st,st(4)
  42b971:	or     dh,ah
  42b973:	xor    al,0x90
  42b975:	add    al,0xca
  42b977:	pop    eax
  42b978:	xchg   edi,eax
  42b979:	mov    ds:0xb441a48c,eax
  42b97e:	jg     0x42b9b4
  42b980:	jl     0x42b9b0
  42b982:	cli    
  42b983:	or     dh,bl
  42b985:	push   ebp
  42b986:	fcomp  st(4)
  42b988:	sbb    eax,0xda66ed9b
  42b98d:	add    DWORD PTR [esi-0x4],eax
  42b990:	xchg   ebp,eax
  42b991:	inc    edx
  42b992:	test   DWORD PTR [ebx],ebp
  42b994:	dec    ebx
  42b995:	pusha  
  42b996:	adc    DWORD PTR [edx-0x73aa8f5c],edi
  42b99c:	idiv   edx
  42b99e:	adc    edi,DWORD PTR [ebx+0x48]
  42b9a1:	enter  0x611b,0x2e
  42b9a5:	mov    ds:0x9103dd41,al
  42b9aa:	in     al,dx
  42b9ab:	mov    bh,0xd3
  42b9ad:	xchg   ebx,eax
  42b9ae:	gs xor al,ah
  42b9b1:	sahf   
  42b9b2:	add    eax,0xb27eae10
  42b9b7:	jns    0x42b94e
  42b9b9:	data16 jo 0x42ba2b
  42b9bc:	mov    eax,0x53e56974
  42b9c1:	cli    
  42b9c2:	sub    ebp,DWORD PTR [ebx-0x21]
  42b9c5:	fsubr  QWORD PTR [edx-0x7e4d8370]
  42b9cb:	in     al,0xf
  42b9cd:	loope  0x42b9cf
  42b9cf:	imul   ebx,DWORD PTR [eax-0x2c],0xffffffd6
  42b9d3:	mov    DWORD PTR [ecx+0x4],esp
  42b9d6:	out    dx,al
  42b9d7:	and    al,0x2f
  42b9d9:	and    ch,ah
  42b9db:	xor    DWORD PTR [eax+0x48ac945d],edi
  42b9e1:	inc    edi
  42b9e2:	lea    ecx,ds:0x11ac0b2e
  42b9e8:	push   esi
  42b9e9:	lock jne 0x42ba54
  42b9ec:	pop    es
  42b9ed:	enter  0x2477,0x99
  42b9f1:	stc    
  42b9f2:	adc    al,0x7f
  42b9f4:	fnstsw ax
  42b9f6:	xchg   ebx,eax
  42b9f7:	push   esi
  42b9f8:	mov    ah,0xdf
  42b9fa:	imul   edi,DWORD PTR [eax],0xffffffb9
  42b9fd:	dec    eax
  42b9fe:	cmp    dl,0xee
  42ba01:	stos   BYTE PTR es:[edi],al
  42ba02:	sbb    BYTE PTR es:[edi+edi*1+0x1],bl
  42ba07:	cli    
  42ba08:	inc    edi
  42ba09:	stos   DWORD PTR es:[edi],eax
  42ba0a:	icebp  
  42ba0b:	xchg   edx,eax
  42ba0c:	mov    ebp,0x687dbc04
  42ba11:	push   0x38
  42ba13:	add    eax,0x6328ee44
  42ba18:	xchg   DWORD PTR [edi+edx*4+0x1e],esi
  42ba1c:	jno    0x42b9f4
  42ba1e:	inc    eax
  42ba1f:	dec    esp
  42ba20:	inc    eax
  42ba21:	(bad)  [edx]
  42ba23:	dec    ecx
  42ba24:	xchg   DWORD PTR ds:0xec702c5c,edx
  42ba2a:	jl     0x42b9f7
  42ba2c:	cdq    
  42ba2d:	out    dx,eax
  42ba2e:	(bad)  
  42ba2f:	adc    ebx,DWORD PTR [edx+0x6d366794]
  42ba35:	or     eax,0xdb00fce2
  42ba3a:	cmp    al,0x55
  42ba3c:	fimul  WORD PTR [ecx+0x5ac68517]
  42ba42:	xor    eax,DWORD PTR [eax]
  42ba44:	add    BYTE PTR [eax],al
  42ba46:	add    BYTE PTR [eax],al
  42ba48:	xchg   esp,eax
  42ba49:	sbb    DWORD PTR ds:0x9514d,edx
  42ba4f:	add    BYTE PTR [eax],al
  42ba51:	add    BYTE PTR [eax],al
  42ba53:	add    BYTE PTR [ecx+0x9],dl
  42ba56:	add    BYTE PTR [eax],al
  42ba58:	add    BYTE PTR ss:[esi],ah
  42ba5b:	jl     0x42ba5d
  42ba5d:	add    dh,BYTE PTR [esi]
  42ba5f:	or     BYTE PTR [eax],al
  42ba61:	add    ah,al
  42ba63:	inc    ebp
  42ba64:	add    BYTE PTR [ecx+eiz*2+0x5a],al
  42ba68:	ret    
  42ba69:	test   BYTE PTR [edx+edi*2-0x590edb15],0xc5
  42ba71:	inc    edi
  42ba72:	push   edx
  42ba73:	call   0xe08b70ef
  42ba78:	xchg   ebp,eax
  42ba79:	push   edi
  42ba7a:	jnp    0x42ba0e
  42ba7c:	mov    ah,0x56
  42ba7e:	add    BYTE PTR [ebx+ecx*8-0x10],ch
  42ba82:	ror    DWORD PTR [ebp-0xdaca2a4],1
  42ba88:	nop
  42ba89:	or     DWORD PTR [esi+eiz*8],0xffffffe0
  42ba8d:	or     bl,BYTE PTR [edx+0x65384ba0]
  42ba93:	not    BYTE PTR [ecx+0x3a7576b4]
  42ba99:	fs pop esp
  42ba9b:	pop    ss
  42ba9c:	dec    ecx
  42ba9d:	imul   edi,DWORD PTR [ebx-0xa5a947c],0xa6518a80
  42baa7:	and    ecx,ebp
  42baa9:	stos   BYTE PTR es:[edi],al
  42baaa:	mov    edi,0xfe39a4f1
  42baaf:	dec    esp
  42bab0:	jge    0x42ba5c
  42bab2:	enter  0x4fd8,0x4c
  42bab6:	or     dl,BYTE PTR [eax+0x7d800a29]
  42babc:	outs   dx,DWORD PTR ds:[esi]
  42babd:	jbe    0x42bb2f
  42babf:	push   ebp
  42bac0:	scas   al,BYTE PTR es:[edi]
  42bac1:	mov    al,ds:0x8bfff3ed
  42bac6:	pop    ss
  42bac7:	xchg   esp,eax
  42bac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bac9:	loop   0x42ba59
  42bacb:	push   esi
  42bacc:	data16 cmp al,0x8d
  42bacf:	(bad)  
  42bad0:	mov    eax,0x3fd4072c
  42bad5:	in     eax,dx
  42bad6:	push   ss
  42bad7:	adc    DWORD PTR [ebx+0x358d4dc],esi
  42badd:	jb     0x42bab2
  42badf:	dec    esp
  42bae0:	ror    dl,0x84
  42bae3:	in     eax,0xf1
  42bae5:	jne    0x42bb5e
  42bae7:	out    dx,al
  42bae8:	xor    eax,0x79a82a7c
  42baed:	dec    esp
  42baee:	(bad)  
  42baef:	ins    BYTE PTR es:[edi],dx
  42baf0:	mov    DWORD PTR [ebx+0x1ecc85e6],0xe99867ea
  42bafa:	(bad)  
  42bafb:	mov    edx,0x8399f0e0
  42bb00:	inc    esp
  42bb01:	fistp  QWORD PTR [ebx+edi*2-0x25]
  42bb05:	inc    edi
  42bb06:	adc    al,0xb0
  42bb08:	lods   al,BYTE PTR ds:[esi]
  42bb09:	lds    ebp,FWORD PTR [ebx]
  42bb0b:	repz and eax,0x43bce13a
  42bb11:	lods   al,BYTE PTR ds:[esi]
  42bb12:	sbb    BYTE PTR [esp+edi*8+0x4],dl
  42bb16:	pop    ebx
  42bb17:	aam    0xe0
  42bb19:	add    eax,0xe55089e
  42bb1e:	fdivr  DWORD PTR [esi-0x5aadfbc7]
  42bb24:	hlt    
  42bb25:	comiss xmm3,DWORD PTR [edi]
  42bb28:	push   cs
  42bb29:	or     BYTE PTR [eax],ch
  42bb2b:	sbb    esp,DWORD PTR [ebp-0x74]
  42bb2e:	inc    ecx
  42bb2f:	cwde   
  42bb30:	(bad)  
  42bb31:	push   edi
  42bb32:	jmp    0xa4577307
  42bb37:	not    dh
  42bb39:	dec    esp
  42bb3a:	call   0x19f:0x2503f462
  42bb41:	mov    cl,0x33
  42bb43:	jl     0x42bbbe
  42bb45:	sbb    cl,cl
  42bb47:	aas    
  42bb48:	cld    
  42bb49:	xor    bl,al
  42bb4b:	dec    esi
  42bb4c:	jle    0x42bb75
  42bb4e:	cmp    al,0x97
  42bb50:	mov    dh,0x8a
  42bb52:	mov    dl,0x3b
  42bb54:	sub    ebx,esi
  42bb56:	push   ecx
  42bb57:	pusha  
  42bb58:	push   ds
  42bb59:	pop    ds
  42bb5a:	cmp    al,0x3a
  42bb5c:	ins    BYTE PTR es:[edi],dx
  42bb5d:	xchg   esp,eax
  42bb5e:	mov    ds:0x8334084a,eax
  42bb63:	inc    esp
  42bb64:	loope  0x42bb1b
  42bb66:	mov    esp,0xaa2c74e1
  42bb6b:	pop    ss
  42bb6c:	stc    
  42bb6d:	mov    edi,0x26c5b06
  42bb72:	push   eax
  42bb73:	jmp    0x42bbbc
  42bb75:	iret   
  42bb76:	jl     0x42bb3d
  42bb78:	mov    edi,0x89740974
  42bb7d:	xor    DWORD PTR ds:0x2ef8eb07,ecx
  42bb83:	push   cs
  42bb84:	sbb    al,0xa
  42bb86:	pop    ds
  42bb87:	and    ch,BYTE PTR [esp+edi*2+0x6b]
  42bb8b:	add    al,0xd5
  42bb8d:	inc    eax
  42bb8e:	mov    ebx,0xa8757ac6
  42bb93:	pop    ecx
  42bb94:	popf   
  42bb95:	mov    ah,0x64
  42bb97:	in     eax,0xa2
  42bb99:	ins    DWORD PTR es:[edi],dx
  42bb9a:	jae    0x42bbeb
  42bb9c:	xor    BYTE PTR [esi-0x32],dl
  42bb9f:	mov    BYTE PTR [eax+0x49],dl
  42bba2:	jmp    0x5d4705dd
  42bba7:	xchg   edi,eax
  42bba8:	lods   al,BYTE PTR ds:[esi]
  42bba9:	jge    0x42bb9d
  42bbab:	dec    ecx
  42bbac:	leave  
  42bbad:	lock pop ebp
  42bbaf:	mov    cl,0x74
  42bbb1:	push   esp
  42bbb2:	sti    
  42bbb3:	sub    DWORD PTR [ebp+0x25be63f3],ecx
  42bbb9:	cmc    
  42bbba:	js     0x42bbc9
  42bbbc:	push   edi
  42bbbd:	inc    eax
  42bbbe:	loope  0x42bbe5
  42bbc0:	jmp    0xc816:0x429c39ac
  42bbc7:	call   0xbbdc22f
  42bbcc:	rcl    BYTE PTR [esi+0x5349ad46],0x7c
  42bbd3:	out    0x6,eax
  42bbd5:	in     al,0xd0
  42bbd7:	sub    ecx,esp
  42bbd9:	pop    ss
  42bbda:	add    al,0x43
  42bbdc:	xchg   ebp,eax
  42bbdd:	jl     0x473febd9
  42bbe3:	nop
  42bbe4:	or     esi,DWORD PTR [esi-0x58424f86]
  42bbea:	(bad)  
  42bbeb:	pop    ds
  42bbec:	cmc    
  42bbed:	sbb    dh,dl
  42bbef:	inc    eax
  42bbf0:	aam    0x6
  42bbf2:	(bad)  
  42bbf3:	sbb    esi,esp
  42bbf5:	pop    esp
  42bbf6:	mov    edx,0x8bf82453
  42bbfb:	xor    cl,dl
  42bbfd:	push   0xf00bd858
  42bc02:	mov    al,ds:0x1dcadeca
  42bc07:	push   ebp
  42bc08:	ins    BYTE PTR es:[edi],dx
  42bc09:	das    
  42bc0a:	iret   
  42bc0b:	(bad)  
  42bc0c:	call   FWORD PTR [esp+esi*4+0x4de0f7d7]
  42bc13:	into   
  42bc14:	call   0x6bd8168d
  42bc19:	or     DWORD PTR [edx],esp
  42bc1b:	int    0xde
  42bc1d:	or     al,0xb1
  42bc1f:	fstp   DWORD PTR [edx-0x2c26b432]
  42bc25:	into   
  42bc26:	xor    ah,bl
  42bc28:	cdq    
  42bc29:	stos   DWORD PTR es:[edi],eax
  42bc2a:	sahf   
  42bc2b:	mov    esi,0xd82b11b5
  42bc30:	ins    DWORD PTR es:[edi],dx
  42bc31:	cdq    
  42bc32:	push   ebp
  42bc33:	dec    ebx
  42bc34:	pop    es
  42bc35:	call   0xb93ed128
  42bc3a:	jge    0x42bc6e
  42bc3c:	xchg   edx,eax
  42bc3d:	mov    dl,0xb5
  42bc3f:	inc    eax
  42bc40:	inc    ecx
  42bc41:	and    dh,ah
  42bc43:	push   ds
  42bc44:	fs xchg edx,eax
  42bc46:	jmp    0x44cdeaab
  42bc4b:	xchg   edx,eax
  42bc4c:	sbb    al,0xf
  42bc4e:	mov    cs,esi
  42bc50:	xchg   BYTE PTR [ebp+0x6],bl
  42bc53:	in     al,dx
  42bc54:	xor    cl,dh
  42bc56:	iret   
  42bc57:	fs clc 
  42bc59:	cli    
  42bc5a:	mov    ds:0xb0a51081,eax
  42bc5f:	lahf   
  42bc60:	fistp  DWORD PTR [ebx-0x3]
  42bc63:	pop    ebp
  42bc64:	(bad)  
  42bc65:	xor    al,0xf4
  42bc67:	ficom  WORD PTR [ecx]
  42bc69:	jl     0x42bcc9
  42bc6b:	inc    edi
  42bc6c:	ins    BYTE PTR es:[edi],dx
  42bc6d:	pop    esi
  42bc6e:	pop    eax
  42bc6f:	jg     0x42bc62
  42bc71:	es out 0xed,al
  42bc74:	pop    edi
  42bc75:	push   eax
  42bc76:	into   
  42bc77:	jl     0x42bc4c
  42bc79:	cwde   
  42bc7a:	inc    eax
  42bc7b:	push   edi
  42bc7c:	loope  0x42bc1c
  42bc7e:	fisubr DWORD PTR [eax-0x7ba9ddc]
  42bc84:	adc    ch,BYTE PTR [edx-0x5c]
  42bc87:	pop    eax
  42bc88:	jbe    0x42bcd2
  42bc8a:	xor    dh,ch
  42bc8c:	xchg   ebp,eax
  42bc8d:	add    BYTE PTR [esi+0x22],bl
  42bc90:	fcom   QWORD PTR [ebp-0x7c1e8f94]
  42bc96:	and    DWORD PTR [ebp-0x6fc21666],ebx
  42bc9c:	cmp    dl,BYTE PTR [ebp+0x5f7a8752]
  42bca2:	sub    dh,BYTE PTR es:[edi+eiz*4-0x3bda5426]
  42bcaa:	les    ebp,FWORD PTR es:[ecx]
  42bcad:	pop    esp
  42bcae:	retf   
  42bcaf:	add    al,0x76
  42bcb1:	inc    edi
  42bcb2:	add    eax,ebx
  42bcb4:	adc    DWORD PTR [ebx],0xffffff80
  42bcb7:	fiadd  WORD PTR [edx]
  42bcb9:	xchg   ecx,eax
  42bcba:	cmc    
  42bcbb:	stos   DWORD PTR es:[edi],eax
  42bcbc:	inc    ecx
  42bcbd:	fwait
  42bcbe:	inc    edi
  42bcbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcc0:	sbb    eax,0x1eb2ee5f
  42bcc5:	test   eax,0x9271c8b2
  42bccb:	(bad)  
  42bccc:	call   0x2d70:0x7dbcfc90
  42bcd3:	fcmovnb st,st(1)
  42bcd5:	aad    0x21
  42bcd7:	les    esi,FWORD PTR [esp+esi*1]
  42bcda:	xchg   esp,eax
  42bcdb:	fiadd  WORD PTR [ebp+0x61ccc9c5]
  42bce1:	xor    DWORD PTR [edx-0x48],eax
  42bce4:	lahf   
  42bce5:	retf   0xb033
  42bce8:	and    al,0x6
  42bcea:	stos   BYTE PTR es:[edi],al
  42bceb:	ja     0x42bcc9
  42bced:	mov    ch,0x11
  42bcef:	cs inc eax
  42bcf1:	es push es
  42bcf3:	cmp    DWORD PTR [eax+0x0],ebx
  42bcf6:	add    eax,0x5b23f97b
  42bcfb:	xchg   DWORD PTR [edi+0x33],ebp
  42bcfe:	test   al,0xc8
  42bd00:	pop    eax
  42bd01:	enter  0xd525,0xac
  42bd05:	or     DWORD PTR [eax+0x3d1fb1cc],ebp
  42bd0b:	mov    WORD PTR [edi-0x20],gs
  42bd0e:	or     ecx,DWORD PTR [eax+esi*8+0xd]
  42bd12:	out    0xd4,eax
  42bd14:	jecxz  0x42bd8f
  42bd16:	mov    ebx,eax
  42bd18:	outs   dx,DWORD PTR ds:[esi]
  42bd19:	adc    al,0x12
  42bd1b:	(bad)  
  42bd1c:	fs jmp 0xa4f7bf2b
  42bd22:	mov    esp,0x9a074b
  42bd27:	into   
  42bd28:	sub    eax,DWORD PTR [edi+0x76]
  42bd2b:	loopne 0x42bda6
  42bd2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd2e:	fadd   QWORD PTR [ebx-0x35]
  42bd31:	imul   edi,DWORD PTR [edx+ebp*2+0x6cfdc004],0x411edb29
  42bd3c:	pop    edi
  42bd3d:	sub    BYTE PTR [ebp+ebp*1-0x18],bl
  42bd41:	xor    al,0xf5
  42bd43:	inc    eax
  42bd44:	ins    BYTE PTR es:[edi],dx
  42bd45:	dec    ebp
  42bd46:	dec    esp
  42bd47:	dec    esp
  42bd48:	push   cs
  42bd49:	or     BYTE PTR [edx+0x78fe52d7],al
  42bd4f:	hlt    
  42bd50:	dec    esp
  42bd51:	add    eax,0x51359201
  42bd56:	jbe    0x42bdcf
  42bd58:	sbb    ah,dl
  42bd5a:	into   
  42bd5b:	(bad)  
  42bd5c:	div    DWORD PTR [ebx+0x55]
  42bd5f:	xchg   ebx,eax
  42bd60:	test   al,0x3c
  42bd62:	push   ebp
  42bd63:	test   DWORD PTR [ebx+0x1c],edx
  42bd66:	sbb    BYTE PTR [edi+0x7b],0xf8
  42bd6a:	pusha  
  42bd6b:	dec    ebx
  42bd6c:	ror    DWORD PTR [esi-0x48b00bcb],0x59
  42bd73:	test   BYTE PTR [ecx+esi*1-0x61ece226],cl
  42bd7a:	dec    edi
  42bd7b:	outs   dx,DWORD PTR ds:[esi]
  42bd7c:	sub    al,0xb
  42bd7e:	imul   esi,DWORD PTR [ebx],0x39
  42bd81:	mov    esi,0x50b30e45
  42bd86:	mov    eax,ds:0x9e5fb1f6
  42bd8b:	adc    edi,eax
  42bd8d:	dec    eax
  42bd8e:	je     0x42bddc
  42bd90:	dec    ebp
  42bd91:	cdq    
  42bd92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd93:	mov    eax,0x98199e6f
  42bd98:	out    dx,al
  42bd99:	jmp    0x42bd2b
  42bd9b:	aas    
  42bd9c:	into   
  42bd9d:	lods   al,BYTE PTR ds:[esi]
  42bd9e:	push   esi
  42bd9f:	loop   0x42bde1
  42bda1:	test   eax,0x6316379f
  42bda6:	mov    ch,0xa0
  42bda8:	loopne 0x42be0e
  42bdaa:	xchg   esi,eax
  42bdab:	rol    BYTE PTR [edi+ebp*2],1
  42bdae:	(bad)  
  42bdaf:	in     eax,dx
  42bdb0:	push   ecx
  42bdb1:	test   eax,0xaf340188
  42bdb6:	inc    ecx
  42bdb7:	mov    cl,0xcc
  42bdb9:	add    eax,ebx
  42bdbb:	lods   al,BYTE PTR ds:[esi]
  42bdbc:	adc    al,0xd9
  42bdbe:	sbb    eax,DWORD PTR [eax+esi*8]
  42bdc1:	out    dx,eax
  42bdc2:	push   0xd11dd0f3
  42bdc7:	sbb    al,0xad
  42bdc9:	loopne 0x42bde6
  42bdcb:	xchg   ebx,eax
  42bdcd:	js     0x42bdee
  42bdcf:	ja     0x42be22
  42bdd1:	ja     0x42bd68
  42bdd3:	cwde   
  42bdd4:	push   eax
  42bdd5:	out    0x9c,eax
  42bdd7:	lods   al,BYTE PTR ds:[esi]
  42bdd8:	add    eax,eax
  42bdda:	pop    esi
  42bddb:	sub    eax,DWORD PTR [edx-0x303fadd4]
  42bde1:	int3   
  42bde2:	mov    ecx,ecx
  42bde4:	pop    ecx
  42bde5:	sub    eax,0x96e419d0
  42bdea:	jbe    0x42bdda
  42bdec:	jmp    0x44ec0f97
  42bdf1:	mov    WORD PTR [esi],cs
  42bdf3:	and    al,0xdf
  42bdf5:	push   esi
  42bdf6:	dec    edi
  42bdf7:	jl     0x42bd7a
  42bdf9:	int3   
  42bdfa:	mov    al,0x77
  42bdfc:	sub    al,0x7b
  42bdfe:	or     al,0xdf
  42be00:	rol    DWORD PTR [ecx+0x236ad473],1
  42be06:	call   0x9ff8c5a1
  42be0b:	dec    esi
  42be0c:	clc    
  42be0d:	sub    eax,0x74b5bc1b
  42be12:	sub    al,0xbb
  42be14:	push   0xb78eb31c
  42be19:	pusha  
  42be1a:	push   edi
  42be1b:	or     eax,0x6ac410ba
  42be20:	add    BYTE PTR [edi],bl
  42be22:	in     al,0xc0
  42be24:	pop    esi
  42be25:	ins    DWORD PTR es:[edi],dx
  42be26:	or     ch,al
  42be28:	push   0x1b
  42be2a:	xchg   esp,eax
  42be2b:	adc    al,0xa5
  42be2d:	test   BYTE PTR [eax+0x32],0xc
  42be31:	es cmp eax,ecx
  42be34:	hlt    
  42be35:	lds    esi,FWORD PTR [ecx-0x4acfccb7]
  42be3b:	hlt    
  42be3c:	mov    ebp,0x18b77166
  42be41:	xlat   BYTE PTR ds:[ebx]
  42be42:	fdiv   DWORD PTR [edx+0x80ad871]
  42be48:	mov    ch,0xb8
  42be4a:	lock cld 
  42be4c:	push   esp
  42be4d:	ins    BYTE PTR es:[edi],dx
  42be4e:	cdq    
  42be4f:	mov    ebp,0x33e36498
  42be54:	and    BYTE PTR [esp+ebx*2],al
  42be57:	xchg   ebx,eax
  42be58:	daa    
  42be59:	dec    edi
  42be5a:	adc    DWORD PTR ds:0x38744be,ebp
  42be60:	jne    0x42be7a
  42be62:	pop    eax
  42be63:	and    DWORD PTR [edx+ebp*4],esi
  42be66:	push   0x6b5b3734
  42be6b:	inc    ebx
  42be6c:	mov    al,ds:0x6010cbff
  42be71:	ins    BYTE PTR es:[edi],dx
  42be72:	daa    
  42be73:	xlat   BYTE PTR ds:[ebx]
  42be74:	sahf   
  42be75:	xchg   DWORD PTR [edx],edx
  42be77:	jmp    0x42bead
  42be79:	adc    bh,BYTE PTR [ebx]
  42be7b:	pop    edx
  42be7c:	xchg   bh,cl
  42be7e:	xchg   ebx,eax
  42be7f:	out    dx,al
  42be80:	ja     0x42beda
  42be82:	mov    eax,ds:0x79598807
  42be87:	stos   BYTE PTR es:[edi],al
  42be88:	mov    ds:0xf00c7ccf,al
  42be8d:	pop    ds
  42be8e:	push   edi
  42be8f:	sbb    dh,dh
  42be91:	jmp    0xfb2c5f0d
  42be96:	test   al,0xca
  42be98:	addr16 (bad) 
  42be9a:	cli    
  42be9b:	or     cl,BYTE PTR [eax+0x3e]
  42be9e:	or     eax,0x53c79d95
  42bea3:	cdq    
  42bea4:	and    ebp,DWORD PTR [edi+edx*2+0x29]
  42bea8:	mov    ch,BYTE PTR [ebp-0x5d]
  42beab:	dec    ebx
  42beac:	gs retf 
  42beae:	nop
  42beaf:	retf   
  42beb0:	retf   
  42beb1:	mov    dl,0xf6
  42beb3:	test   DWORD PTR [esi],esi
  42beb5:	loopne 0x42bee4
  42beb7:	mov    ah,0xe1
  42beb9:	cmp    al,0xe4
  42bebb:	sbb    eax,0xd0f00d5c
  42bec0:	pop    esp
  42bec1:	retf   
  42bec2:	rcl    BYTE PTR [ebx-0x33],cl
  42bec5:	xchg   esi,eax
  42bec6:	push   eax
  42bec7:	inc    edx
  42bec8:	cmc    
  42bec9:	xor    BYTE PTR [eax-0x7073b67d],0xfb
  42bed0:	fld1   
  42bed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bed3:	aam    0x8
  42bed5:	or     eax,0x1288b58e
  42beda:	mov    ecx,eax
  42bedc:	pop    eax
  42bedd:	retf   
  42bede:	dec    edx
  42bedf:	push   eax
  42bee0:	outs   dx,DWORD PTR ds:[esi]
  42bee1:	and    al,0x22
  42bee3:	mov    ecx,0x3095aaec
  42bee8:	mov    ecx,0x9d7cfa0e
  42beed:	xchg   esp,eax
  42beee:	loope  0x42bf63
  42bef0:	xor    DWORD PTR ds:0x515213d0,esi
  42bef6:	mov    eax,0x1c66070a
  42befb:	dec    ecx
  42befc:	test   BYTE PTR [edx-0x7572239a],dl
  42bf02:	call   0x58e536c2
  42bf07:	fild   WORD PTR [eax]
  42bf09:	cs mov esi,0x2ef31952
  42bf0f:	ins    DWORD PTR es:[edi],dx
  42bf10:	sbb    ebp,DWORD PTR [eax+0x2fc5f725]
  42bf16:	push   edi
  42bf17:	or     esp,ebx
  42bf19:	(bad)  
  42bf1a:	int3   
  42bf1b:	push   eax
  42bf1c:	or     eax,0x286f89cb
  42bf21:	sub    esp,DWORD PTR [edi-0xf54d510]
  42bf27:	mov    DWORD PTR [esi],0x14bddd37
  42bf2d:	xchg   esp,eax
  42bf2e:	fisttp WORD PTR [eax-0x1f]
  42bf31:	cmp    BYTE PTR [edx],bl
  42bf33:	ds mov edi,0x7bfedc38
  42bf39:	jmp    0x52924f80
  42bf3e:	loopne 0x42bedc
  42bf40:	pop    esp
  42bf41:	hlt    
  42bf42:	mov    esi,0x1041f07c
  42bf47:	add    al,0x23
  42bf49:	xor    ah,BYTE PTR [ebp-0x22b533a]
  42bf4f:	mov    dh,0x28
  42bf51:	fprem1 
  42bf53:	clc    
  42bf54:	xor    cl,BYTE PTR [eax+0xc]
  42bf57:	sbb    ebp,edx
  42bf59:	dec    esp
  42bf5a:	inc    esp
  42bf5b:	stos   DWORD PTR es:[edi],eax
  42bf5c:	in     al,dx
  42bf5d:	daa    
  42bf5e:	test   edi,esi
  42bf60:	les    edi,FWORD PTR [edi]
  42bf62:	jo     0x42bfdc
  42bf64:	cmp    BYTE PTR [ebx+0x75],cl
  42bf67:	push   es
  42bf68:	repz adc DWORD PTR [esi+0x18],ecx
  42bf6c:	cmp    eax,0x115c4457
  42bf71:	call   0x557f10cf
  42bf76:	call   0xe45c:0xd1a4a4f1
  42bf7d:	pusha  
  42bf7e:	cs clc 
  42bf80:	ret    
  42bf81:	jp     0x42bf78
  42bf83:	test   BYTE PTR [edx+0x56],al
  42bf86:	test   BYTE PTR ds:0x6a884f5a,dh
  42bf8c:	gs jae 0x42bfd4
  42bf8f:	sub    al,0x5c
  42bf91:	cmp    BYTE PTR [ecx],dh
  42bf93:	das    
  42bf94:	mov    al,0x94
  42bf96:	int    0x8e
  42bf98:	push   eax
  42bf99:	pop    eax
  42bf9a:	cmp    DWORD PTR [edi+0x12],esi
  42bf9d:	sti    
  42bf9e:	xchg   edi,eax
  42bf9f:	stos   DWORD PTR es:[edi],eax
  42bfa0:	das    
  42bfa1:	je     0x42c007
  42bfa3:	popa   
  42bfa4:	add    eax,0x4a99e036
  42bfa9:	or     ebx,DWORD PTR [eax+0x29625c2f]
  42bfaf:	les    edx,FWORD PTR [ebx+ecx*2]
  42bfb2:	outs   dx,BYTE PTR ds:[esi]
  42bfb3:	mov    esp,0x473eb269
  42bfb8:	mov    al,0x6
  42bfba:	sub    ch,dh
  42bfbc:	fs dec esi
  42bfbe:	cwde   
  42bfbf:	mov    ch,0x74
  42bfc1:	stc    
  42bfc2:	aaa    
  42bfc3:	into   
  42bfc4:	add    al,0x88
  42bfc6:	xchg   al,bl
  42bfc8:	fscale 
  42bfca:	cmp    DWORD PTR [ebp+0x30acce1a],eax
  42bfd0:	arpl   dx,ax
  42bfd2:	shl    BYTE PTR [ecx-0x2fb638e4],cl
  42bfd8:	push   esi
  42bfd9:	xchg   edi,eax
  42bfda:	and    al,0xcc
  42bfdc:	jns    0x42bfa5
  42bfde:	mov    ch,0xfd
  42bfe0:	js     0x42c05d
  42bfe2:	shl    dl,cl
  42bfe4:	xchg   esi,eax
  42bfe5:	icebp  
  42bfe6:	jne    0x42c049
  42bfe8:	rcr    DWORD PTR [esp+ecx*1+0x73f0fc85],0x9a
  42bff0:	xchg   BYTE PTR [ecx],cl
  42bff2:	shl    BYTE PTR [ecx+0x395b8cfc],0x6d
  42bff9:	cmp    al,0x7b
  42bffb:	in     al,0xc4
  42bffd:	and    BYTE PTR [ebp+0x7597b1c5],al
  42c003:	xor    DWORD PTR [eax],ecx
  42c005:	add    edx,ecx
  42c007:	dec    ebx
  42c008:	std    
  42c009:	call   0x814b:0xb01fd623
  42c010:	mov    ecx,0x63567520
  42c015:	cwde   
  42c016:	aam    0x13
  42c018:	adc    esi,esp
  42c01a:	mov    esi,DWORD PTR [eax-0x7d9c987]
  42c020:	aas    
  42c021:	push   ebx
  42c022:	sbb    DWORD PTR [esp+eax*2],ecx
  42c025:	push   DWORD PTR gs:[edx+0x1c]
  42c029:	inc    ebp
  42c02a:	jo     0x42c07a
  42c02c:	retf   0x8361
  42c02f:	jbe    0x42c0a6
  42c031:	inc    eax
  42c032:	repz adc al,0xe
  42c035:	(bad)  
  42c036:	push   0xe840f9c0
  42c03b:	(bad)
  42c03f:	pop    ss
  42c040:	scas   eax,DWORD PTR es:[edi]
  42c041:	jecxz  0x42c0a4
  42c043:	or     al,0x51
  42c045:	jns    0x42c022
  42c047:	jo     0x42c02d
  42c049:	mov    edx,0xed30d69f
  42c04e:	mov    edi,0x671174c7
  42c053:	jo     0x42bfe7
  42c055:	push   esp
  42c056:	mov    eax,ds:0x866156d7
  42c05b:	rol    DWORD PTR [ebp-0x70ab03a9],cl
  42c061:	sbb    esi,DWORD PTR [eax-0x60]
  42c064:	add    esp,DWORD PTR [edx-0x2f]
  42c067:	and    BYTE PTR [edi],dl
  42c069:	jmp    FWORD PTR [edi]
  42c06b:	jmp    0x42c05b
  42c06d:	pop    edx
  42c06e:	add    BYTE PTR [esp+eax*2+0x7f],al
  42c072:	cmp    eax,0xfa0230b9
  42c077:	and    al,0x54
  42c079:	push   0x90fdff72
  42c07e:	test   al,0x54
  42c080:	les    ebp,FWORD PTR [esp+ecx*4+0x5b]
  42c084:	imul   esi,DWORD PTR [esp+edx*8],0xffffffca
  42c088:	push   edi
  42c089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c08a:	loop   0x42c0c0
  42c08c:	jns    0x42c012
  42c08e:	and    al,0xa5
  42c090:	pushf  
  42c091:	push   ebp
  42c092:	adc    BYTE PTR [edi+0x7fb37858],cl
  42c098:	xor    BYTE PTR [ecx+0x7ca257a3],ah
  42c09e:	xchg   ebp,eax
  42c09f:	xor    al,ah
  42c0a1:	cli    
  42c0a2:	std    
  42c0a3:	pop    ecx
  42c0a4:	pop    edx
  42c0a5:	mul    BYTE PTR [eax-0x42f4b408]
  42c0ab:	pop    ss
  42c0ac:	jle    0x42c11b
  42c0ae:	retf   0xfa48
  42c0b1:	call   0x2c8bdea5
  42c0b6:	jp     0x42c09d
  42c0b8:	ins    BYTE PTR es:[edi],dx
  42c0b9:	pop    ecx
  42c0ba:	lahf   
  42c0bb:	push   edi
  42c0bc:	xor    DWORD PTR [ecx-0x6f77af5a],edx
  42c0c2:	repz setne BYTE PTR [esi-0x41]
  42c0c7:	sbb    BYTE PTR ds:0x9a6eb439,bh
  42c0cd:	(bad)  
  42c0ce:	gs mov ecx,0xd84655fb
  42c0d4:	sub    al,0xc6
  42c0d6:	ins    BYTE PTR es:[edi],dx
  42c0d7:	loop   0x42c065
  42c0d9:	push   cs
  42c0da:	pushf  
  42c0db:	leave  
  42c0dc:	or     BYTE PTR [eax],0x8c
  42c0df:	aaa    
  42c0e0:	inc    edi
  42c0e1:	pop    ecx
  42c0e2:	xchg   esi,eax
  42c0e3:	pop    ebx
  42c0e4:	daa    
  42c0e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c0e6:	cmp    DWORD PTR [ebp-0x78],ecx
  42c0e9:	ror    ebp,0x1
  42c0ec:	cs enter 0x74c8,0xad
  42c0f1:	ins    DWORD PTR es:[edi],dx
  42c0f2:	fstp   DWORD PTR [ebx-0x13556736]
  42c0f8:	clc    
  42c0f9:	add    eax,0xc664e2d7
  42c0fe:	daa    
  42c0ff:	adc    BYTE PTR ss:[ebp+0x3a],ch
  42c103:	add    al,0xaf
  42c105:	push   edi
  42c106:	pop    ds
  42c107:	jl     0x42c123
  42c109:	mov    eax,0x922b4245
  42c10e:	dec    esp
  42c10f:	jl     0x42c116
  42c111:	jmp    0xbd97:0xdd783edc
  42c118:	xor    BYTE PTR [esi],bl
  42c11a:	jnp    0x42c11c
  42c11c:	push   esi
  42c11d:	push   0x60
  42c11f:	out    dx,al
  42c120:	jns    0x42c18e
  42c122:	push   ss
  42c123:	cs and al,0x5f
  42c126:	xor    eax,0xeed8d38b
  42c12b:	data16 das 
  42c12d:	int3   
  42c12e:	loopne 0x42c182
  42c130:	ins    DWORD PTR es:[edi],dx
  42c131:	div    eax
  42c133:	cs out 0x7d,eax
  42c136:	lock cmp ch,BYTE PTR ds:0x6fb41e20
  42c13d:	dec    ecx
  42c13e:	cli    
  42c13f:	adc    al,0xb7
  42c141:	cwde   
  42c142:	inc    esp
  42c143:	adc    cl,BYTE PTR [ebx+edx*4]
  42c146:	shl    DWORD PTR [eax+0x38],1
  42c149:	mov    ch,0xe
  42c14b:	xor    eax,0x8f9bcfc5
  42c150:	mov    ah,0x5c
  42c152:	ret    0x9ca5
  42c155:	pop    edi
  42c156:	aaa    
  42c157:	xchg   ebx,eax
  42c158:	push   ebx
  42c159:	xor    eax,DWORD PTR [edx+ebx*2]
  42c15c:	cmp    BYTE PTR [esi+0x2243b62d],bl
  42c162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c163:	sub    BYTE PTR [ebx+0x5f],al
  42c166:	or     bh,al
  42c168:	sub    al,0x9f
  42c16a:	ja     0x42c17e
  42c16c:	dec    esp
  42c16d:	jg     0x42c15c
  42c16f:	enter  0x58db,0x3f
  42c173:	mov    ebx,0xf79c70a6
  42c178:	mov    ds:0x7ba60b08,eax
  42c17d:	ja     0x42c197
  42c17f:	pop    ss
  42c180:	or     DWORD PTR [eax+ecx*1-0x39072a1e],edi
  42c187:	cmp    al,0x9b
  42c189:	pop    ecx
  42c18a:	cld    
  42c18b:	and    eax,0xa29b0b56
  42c190:	pusha  
  42c191:	pop    ebp
  42c192:	fisttp QWORD PTR [ebx+0x9129fae]
  42c198:	sub    DWORD PTR [ecx+eax*1+0x588ec641],eax
  42c19f:	mov    ch,0xf9
  42c1a1:	or     ch,BYTE PTR [eax-0x70646041]
  42c1a7:	sar    eax,0xe4
  42c1aa:	cwde   
  42c1ab:	push   eax
  42c1ac:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1ae:	arpl   si,ax
  42c1b0:	lea    esp,[ebx-0x7b8be8d0]
  42c1b6:	pop    eax
  42c1b7:	in     eax,0xc7
  42c1b9:	dec    ebx
  42c1ba:	jg     0x42c18b
  42c1bc:	sahf   
  42c1bd:	cwde   
  42c1be:	fcomp  QWORD PTR ds:0x87f28f2a
  42c1c4:	rol    ebp,cl
  42c1c6:	mov    esp,0xaa750fea
  42c1cb:	mov    BYTE PTR [esi+0x34],dl
  42c1ce:	jae    0x42c1b0
  42c1d0:	xchg   esp,eax
  42c1d1:	add    esi,edx
  42c1d3:	rcr    bl,0xa3
  42c1d6:	xor    al,0x5b
  42c1d8:	mov    BYTE PTR [eax],dh
  42c1da:	call   0x96f4baf9
  42c1df:	popa   
  42c1e0:	in     al,0xac
  42c1e2:	jg     0x42c174
  42c1e4:	xchg   BYTE PTR [ebx+edx*4-0x2f66646d],cl
  42c1eb:	jmp    0x42c18c
  42c1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c1ee:	add    BYTE PTR [eax],0xe6
  42c1f1:	inc    ebp
  42c1f2:	mov    edx,0x115edcf4
  42c1f7:	stc    
  42c1f8:	hlt    
  42c1f9:	xchg   esi,eax
  42c1fa:	outs   dx,DWORD PTR ds:[esi]
  42c1fb:	setl   cl
  42c1fe:	add    al,0xfb
  42c200:	test   BYTE PTR [eax-0x3fac0df1],0x4c
  42c207:	jmp    0xf543:0xd3b8e4fb
  42c20e:	in     al,0xf5
  42c210:	daa    
  42c211:	hlt    
  42c212:	je     0x42c23f
  42c214:	inc    edx
  42c215:	inc    edi
  42c216:	push   eax
  42c217:	or     BYTE PTR [ebx+ecx*2+0x21],bh
  42c21b:	adc    ecx,DWORD PTR [ebx-0x3f]
  42c21e:	clc    
  42c21f:	les    ebp,FWORD PTR [esp+eiz*2]
  42c222:	add    DWORD PTR [eax-0x78],esi
  42c225:	mov    esp,0xd407bb84
  42c22a:	lods   eax,DWORD PTR ds:[esi]
  42c22b:	adc    bh,BYTE PTR [edx]
  42c22d:	and    eax,0xe03d4ae7
  42c232:	clc    
  42c233:	inc    DWORD PTR [ebp+0x4dda1d2f]
  42c239:	cli    
  42c23a:	stos   BYTE PTR es:[edi],al
  42c23b:	sbb    al,0x48
  42c23d:	loop   0x42c206
  42c23f:	scas   eax,DWORD PTR es:[edi]
  42c240:	xchg   ebp,eax
  42c241:	sar    BYTE PTR [esi+0x2ac0404f],0xa9
  42c248:	mov    cl,0xd4
  42c24a:	inc    ebp
  42c24b:	repz callw 0x448c
  42c250:	xlat   BYTE PTR ds:[ebx]
  42c251:	mov    ebx,0xaefc653a
  42c256:	or     al,0x23
  42c258:	sahf   
  42c259:	inc    eax
  42c25a:	mov    esp,0x7917c23
  42c25f:	xor    ah,bh
  42c261:	adc    al,0xa5
  42c263:	dec    ecx
  42c264:	ror    BYTE PTR [edx],cl
  42c266:	mov    edx,DWORD PTR [edx]
  42c268:	push   esp
  42c269:	scas   al,BYTE PTR es:[edi]
  42c26a:	push   esi
  42c26b:	mov    ebx,0x6e4a4d38
  42c270:	or     BYTE PTR [eax-0x47],bh
  42c273:	fcomp  QWORD PTR [esi-0x23]
  42c276:	sbb    ah,dh
  42c278:	pop    ebp
  42c279:	and    BYTE PTR es:[esi],cl
  42c27c:	inc    esp
  42c27d:	les    ebx,FWORD PTR [esp+esi*8]
  42c280:	setl   BYTE PTR [edi+0x44]
  42c284:	mov    DWORD PTR [ecx],edi
  42c286:	add    BYTE PTR [ebx+ebp*8+0x79],bh
  42c28a:	mov    edi,DWORD PTR [ebp+0x68]
  42c28d:	pop    esi
  42c28e:	adc    al,0xa1
  42c291:	ins    BYTE PTR es:[edi],dx
  42c292:	popa   
  42c293:	add    cl,dh
  42c295:	mov    WORD PTR [eax+0x7100044e],fs
  42c29b:	loope  0x42c26e
  42c29d:	sysenter 
  42c29f:	inc    esp
  42c2a0:	dec    eax
  42c2a1:	stc    
  42c2a2:	lea    eax,[edx+0x580b1f83]
  42c2a8:	xor    DWORD PTR [esi+esi*8+0x6f8c4320],eax
  42c2af:	mov    edi,0xf15c277c
  42c2b4:	pop    esp
  42c2b5:	mov    bl,0x88
  42c2b7:	sub    esp,esi
  42c2b9:	mov    al,ds:0x86460438
  42c2be:	outs   dx,DWORD PTR ds:[esi]
  42c2bf:	faddp  st(5),st
  42c2c1:	js     0x42c287
  42c2c3:	test   eax,0x6cd346e4
  42c2c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2c9:	pop    esp
  42c2ca:	icebp  
  42c2cb:	ins    BYTE PTR es:[edi],dx
  42c2cc:	test   al,0xe
  42c2ce:	inc    edx
  42c2cf:	in     eax,dx
  42c2d0:	adc    DWORD PTR [esi],edx
  42c2d2:	dec    edi
  42c2d3:	lods   al,BYTE PTR ds:[esi]
  42c2d4:	nop
  42c2d5:	popf   
  42c2d6:	xchg   BYTE PTR [eax],bl
  42c2d8:	xor    al,0x7c
  42c2da:	xchg   ebx,eax
  42c2db:	ja     0x42c29f
  42c2dd:	mov    ah,0x59
  42c2df:	in     eax,dx
  42c2e0:	out    0xf8,al
  42c2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2e3:	rcr    ch,1
  42c2e5:	lods   eax,DWORD PTR ds:[esi]
  42c2e6:	fmul   DWORD PTR [esp]
  42c2e9:	jnp    0x42c2b6
  42c2eb:	adc    eax,0xfc35c810
  42c2f0:	rol    DWORD PTR [ebp+0x21],cl
  42c2f3:	int    0x51
  42c2f5:	ss lock xor al,0xa4
  42c2f9:	mov    ds:0x76dec65c,eax
  42c2fe:	jnp    0x42c305
  42c300:	ror    al,1
  42c302:	dec    esp
  42c303:	pop    es
  42c304:	inc    eax
  42c305:	retf   
  42c306:	dec    esp
  42c307:	cmp    ch,ch
  42c309:	in     eax,dx
  42c30a:	in     al,dx
  42c30b:	test   BYTE PTR [eax+0x101dbc8d],dh
  42c311:	out    dx,eax
  42c312:	icebp  
  42c313:	adc    BYTE PTR [esi],al
  42c315:	inc    eax
  42c316:	jmp    0xb868:0x4c0e1d5e
  42c31d:	sub    edi,DWORD PTR [ebp-0x43]
  42c320:	sahf   
  42c321:	mov    ah,0xb7
  42c323:	outs   dx,BYTE PTR ds:[esi]
  42c324:	std    
  42c325:	fsubr  QWORD PTR [ebp-0x47]
  42c328:	dec    eax
  42c329:	sti    
  42c32a:	xchg   ecx,eax
  42c32c:	sub    al,0x6
  42c32e:	add    BYTE PTR [ecx+0x65c5ef2e],ah
  42c334:	xor    BYTE PTR [ecx-0x71],cl
  42c337:	and    al,0x4c
  42c339:	lahf   
  42c33a:	inc    ebx
  42c33b:	cli    
  42c33c:	clc    
  42c33d:	dec    ebp
  42c33e:	out    dx,eax
  42c33f:	xor    ecx,DWORD PTR [eax+0x35]
  42c342:	(bad)  
  42c343:	pushf  
  42c344:	jecxz  0x42c39d
  42c346:	std    
  42c347:	pusha  
  42c348:	mov    edx,0x65e714f0
  42c34d:	out    dx,eax
  42c34e:	jns    0x42c32c
  42c350:	(bad)  
  42c351:	mov    edi,0xd484b514
  42c356:	jbe    0x42c38b
  42c358:	add    BYTE PTR [ecx],al
  42c35a:	fstp   TBYTE PTR [eax]
  42c35c:	stos   DWORD PTR es:[edi],eax
  42c35d:	mov    ds:0xbe1d43bb,al
  42c362:	sbb    DWORD PTR [ebx-0xd1f37a4],edx
  42c368:	cmp    eax,0xe5a2d880
  42c36d:	add    al,0x8a
  42c36f:	push   esi
  42c370:	(bad)  
  42c371:	(bad)  
  42c372:	sbb    al,0xca
  42c374:	jmp    0xf81d:0xc752280f
  42c37b:	dec    ebp
  42c37c:	call   0xeecd:0x8a4c0fd8
  42c383:	es adc eax,0x705f4b8c
  42c389:	sbb    eax,0x2707358b
  42c38e:	mov    eax,ds:0xf940104
  42c393:	pop    ebx
  42c394:	fs in  al,dx
  42c396:	mov    eax,0x3c0c54df
  42c39b:	daa    
  42c39c:	sbb    ebp,DWORD PTR [ebx-0x14]
  42c39f:	test   BYTE PTR [ecx],cl
  42c3a1:	sar    BYTE PTR [eax+eax*1],cl
  42c3a4:	add    BYTE PTR [eax],al
  42c3a6:	add    BYTE PTR [eax],al
  42c3a8:	and    eax,0x5154c81c
  42c3ad:	or     DWORD PTR [eax],eax
  42c3af:	add    BYTE PTR [eax],al
  42c3b1:	add    BYTE PTR [eax],al
  42c3b3:	add    BYTE PTR [ecx+0x9],dl
  42c3b6:	add    BYTE PTR [eax],al
  42c3b8:	aaa    
  42c3b9:	add    BYTE PTR [esi],ah
  42c3bb:	jl     0x42c3bd
  42c3bd:	add    dh,BYTE PTR [esi]
  42c3bf:	or     BYTE PTR [eax],al
  42c3c1:	add    ah,al
  42c3c3:	inc    ebp
  42c3c4:	add    dh,ah
  42c3c6:	fiadd  WORD PTR ds:0xde883814
  42c3cc:	jb     0x42c3f2
  42c3ce:	mov    al,0x27
  42c3d0:	jle    0x42c3a9
  42c3d2:	popa   
  42c3d3:	mov    esi,0x4548da23
  42c3d8:	or     al,ch
  42c3da:	jnp    0x42c3a4
  42c3dc:	sbb    eax,0xbd6c9433
  42c3e1:	bound  ecx,QWORD PTR [ebp-0x14f5f9d]
  42c3e7:	jbe    0x42c379
  42c3e9:	cs pop edi
  42c3eb:	(bad)  
  42c3ec:	loope  0x42c44e
  42c3ee:	jg     0x42c3e3
  42c3f0:	sar    BYTE PTR [eax],0xf
  42c3f3:	jmp    eax
  42c3f5:	mov    dl,0xcf
  42c3f7:	mov    eax,0x225c5e91
  42c3fc:	ins    DWORD PTR es:[edi],dx
  42c3fd:	lods   al,BYTE PTR ss:[esi]
  42c3ff:	das    
  42c400:	in     al,dx
  42c401:	and    eax,0x6c2f809e
  42c406:	or     dh,cl
  42c408:	rcl    DWORD PTR [ebp+0x30],0xd7
  42c40c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c40d:	jne    0x42c3a6
  42c40f:	mov    esi,0x885b5e42
  42c414:	cmp    eax,0xe11e314c
  42c419:	cmp    DWORD PTR [eax+eax*8-0x19],ebp
  42c41d:	stos   DWORD PTR es:[edi],eax
  42c41e:	jo     0x42c3e7
  42c420:	not    DWORD PTR [esi-0x77de922d]
  42c426:	dec    edi
  42c427:	xchg   esp,eax
  42c428:	push   cs
  42c429:	push   ecx
  42c42a:	dec    ebx
  42c42b:	popf   
  42c42c:	jge    0x42c3be
  42c42e:	sub    DWORD PTR [eax+edi*4+0x35],edx
  42c432:	pop    esi
  42c433:	shl    BYTE PTR [ebp+eiz*8-0x23810056],1
  42c43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c43b:	xor    al,0x36
  42c43d:	lods   al,BYTE PTR ds:[esi]
  42c43e:	into   
  42c43f:	(bad)
  42c442:	test   bh,bl
  42c444:	fst    DWORD PTR [eax-0x34cea0d5]
  42c44a:	popf   
  42c44b:	test   al,0xc1
  42c44d:	aas    
  42c44e:	mov    eax,ds:0xfa31545e
  42c453:	pop    eax
  42c454:	int3   
  42c455:	push   ecx
  42c456:	add    eax,0x5cdaa673
  42c45b:	lods   eax,DWORD PTR ds:[esi]
  42c45c:	into   
  42c45d:	lock jns 0x42c483
  42c460:	int    0x71
  42c462:	push   ecx
  42c463:	mov    ds:0x701408d1,eax
  42c468:	mov    DWORD PTR [ecx+0x73],0x5e7af464
  42c46f:	mov    esp,0x18d4b88d
  42c474:	mov    al,0xc3
  42c476:	es mov ecx,0xff7144e0
  42c47c:	cmc    
  42c47d:	inc    esp
  42c47e:	and    esp,DWORD PTR [edi+0x39]
  42c481:	add    al,0xaf
  42c483:	data16 xchg sp,ax
  42c486:	adc    eax,0x2863d9e1
  42c48b:	shl    DWORD PTR [edx-0x42],0x6f
  42c48f:	push   esi
  42c490:	push   eax
  42c491:	sub    edx,DWORD PTR [ebp-0x66711230]
  42c497:	adc    dh,BYTE PTR [esi-0xbde5d4c]
  42c49d:	dec    esi
  42c49e:	adc    BYTE PTR [eax],ah
  42c4a0:	push   0x2b
  42c4a2:	test   BYTE PTR [ebx*2-0x32acbfe8],ah
  42c4a9:	lock popa 
  42c4ab:	repz xor DWORD PTR [esi+0x3c],ebx
  42c4af:	jl     0x42c450
  42c4b1:	seta   BYTE PTR [ebp+0x15]
  42c4b5:	add    eax,0x79aa60a3
  42c4ba:	mov    ecx,0xb989fbff
  42c4bf:	and    ecx,DWORD PTR [eax]
  42c4c1:	adc    DWORD PTR [ebx-0x1b7f6ca2],ebp
  42c4c7:	jne    0x42c458
  42c4c9:	sub    al,0x73
  42c4cb:	inc    ebx
  42c4cc:	shl    DWORD PTR [eax+0x3f4a4ebc],cl
  42c4d2:	push   eax
  42c4d3:	ja     0x42c53a
  42c4d5:	sbb    cl,dh
  42c4d7:	xor    bh,BYTE PTR [edx+0xb74633b]
  42c4dd:	inc    ebx
  42c4de:	cmp    bl,ch
  42c4e0:	mov    edx,0x1c9502c4
  42c4e5:	add    eax,0xb50683a5
  42c4ea:	sub    al,BYTE PTR [edi]
  42c4ec:	inc    ecx
  42c4ed:	inc    eax
  42c4ee:	mov    eax,0xb81fd9be
  42c4f3:	inc    edi
  42c4f4:	lods   al,BYTE PTR ds:[esi]
  42c4f5:	jmp    DWORD PTR [edi+eax*8-0x3]
  42c4f9:	cld    
  42c4fa:	int    0xcc
  42c4fc:	ds hlt 
  42c4fe:	pop    ebp
  42c4ff:	mov    bl,al
  42c501:	into   
  42c502:	ins    DWORD PTR es:[edi],dx
  42c503:	and    ah,BYTE PTR [ebx*2+0x33ac6b30]
  42c50a:	push   ebp
  42c50b:	xchg   ecx,eax
  42c50c:	push   ebx
  42c50d:	ss sahf 
  42c50f:	retf   0x5410
  42c512:	clc    
  42c513:	pop    ds
  42c514:	adc    BYTE PTR [esp+ebp*4+0x78377157],0x38
  42c51c:	jb     0x42c522
  42c51e:	bound  esp,QWORD PTR [esi]
  42c520:	jbe    0x42c4f0
  42c522:	imul   ebx,DWORD PTR [eax+esi*4+0x452fdbe0],0x8
  42c52a:	daa    
  42c52b:	pop    ss
  42c52c:	ror    BYTE PTR [eax],0xf1
  42c52f:	and    edx,DWORD PTR [ecx]
  42c531:	xor    eax,DWORD PTR [ebx+eiz*8-0x55201b2f]
  42c538:	dec    edx
  42c539:	pop    edi
  42c53a:	mov    bh,0xc8
  42c53c:	aaa    
  42c53d:	std    
  42c53e:	mov    WORD PTR [ebp+edx*1+0x60bcbc8a],cs
  42c545:	cmp    eax,0xf957b0a5
  42c54a:	imul   DWORD PTR [ecx-0x6d]
  42c54d:	xchg   edi,eax
  42c54e:	adc    BYTE PTR [ecx-0x2c],ch
  42c551:	jns    0x42c5cb
  42c553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c554:	cli    
  42c555:	(bad)  
  42c556:	sti    
  42c557:	mov    ebx,0x8355f812
  42c55c:	xor    eax,0x137b4072
  42c561:	in     al,0xa0
  42c563:	dec    edx
  42c564:	out    dx,al
  42c565:	fdiv   st,st(6)
  42c567:	mov    eax,ds:0xc4feb267
  42c56c:	xchg   ch,bl
  42c56e:	and    edx,ebp
  42c570:	pushf  
  42c571:	or     eax,0x70e8e84a
  42c576:	push   cs
  42c577:	loop   0x42c503
  42c579:	pop    ds
  42c57a:	and    bl,BYTE PTR [esi]
  42c57c:	sahf   
  42c57d:	or     al,0xfd
  42c57f:	push   esi
  42c580:	stos   BYTE PTR es:[edi],al
  42c581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c582:	call   0xb95d:0x30f179d6
  42c589:	cli    
  42c58a:	mov    ds:0xb53a8f05,eax
  42c58f:	fcom   DWORD PTR [eax+0x2a5ddc21]
  42c595:	mov    dh,0x4e
  42c597:	call   0xe62b:0x220d49fc
  42c59e:	pop    ss
  42c59f:	add    BYTE PTR [eax+eiz*1+0x7b],0xf4
  42c5a4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5a6:	xor    dl,BYTE PTR [eax+eax*2]
  42c5a9:	pop    ebx
  42c5aa:	inc    esp
  42c5ab:	adc    eax,0xf75a06aa
  42c5b0:	test   al,0x51
  42c5b2:	call   0x46a9:0xa03068ec
  42c5b9:	cdq    
  42c5ba:	jmp    0x1f79d695
  42c5bf:	and    DWORD PTR [ebp+0x55f05a5a],esi
  42c5c5:	xor    al,0x5e
  42c5c7:	mov    edi,0x312b6142
  42c5cc:	popf   
  42c5cd:	pop    esi
  42c5ce:	pop    eax
  42c5cf:	imul   esi,DWORD PTR [esi-0x2c0e579a],0xb57cfdcc
  42c5d9:	jecxz  0x42c653
  42c5db:	out    dx,al
  42c5dc:	push   0xfffffff5
  42c5de:	add    BYTE PTR [ecx],0x24
  42c5e1:	lods   al,BYTE PTR ds:[esi]
  42c5e2:	pushf  
  42c5e3:	pop    ebp
  42c5e4:	sub    ebp,DWORD PTR [ecx+0x486a5c16]
  42c5ea:	pop    ss
  42c5eb:	int3   
  42c5ec:	mov    ebx,0xffe71d27
  42c5f1:	cmp    ebp,DWORD PTR [esi+eiz*1-0x40]
  42c5f5:	or     ebp,DWORD PTR [ebp-0x60b94414]
  42c5fb:	nop
  42c5fc:	jmp    0x42c679
  42c5fe:	inc    esi
  42c5ff:	icebp  
  42c600:	xchg   ebx,eax
  42c601:	fdivr  QWORD PTR [ebp-0x217d4be8]
  42c607:	mov    ebx,DWORD PTR [edi]
  42c609:	imul   eax,DWORD PTR [esi+0x785cb2eb],0x2d
  42c610:	aam    0x6b
  42c612:	jno    0x42c596
  42c614:	jnp    0x42c685
  42c616:	sub    BYTE PTR [eax],0xf0
  42c619:	sub    al,0x11
  42c61b:	and    ecx,0x77a48e6a
  42c621:	add    DWORD PTR [ebp+0x9],ebx
  42c624:	(bad)  
  42c625:	xor    ebx,DWORD PTR [eax]
  42c627:	inc    ecx
  42c628:	enter  0xc149,0x8b
  42c62c:	lods   al,BYTE PTR ds:[esi]
  42c62d:	push   es
  42c62e:	aad    0xef
  42c630:	imul   esi,DWORD PTR [eax-0x1b],0xfffffff2
  42c634:	push   esp
  42c635:	mov    BYTE PTR [ebx-0x33],dh
  42c638:	ja     0x42c634
  42c63a:	xchg   esp,eax
  42c63b:	push   esp
  42c63c:	xor    eax,0xa277e12c
  42c641:	xchg   ebp,eax
  42c642:	test   DWORD PTR [eax-0x54bf986d],edi
  42c648:	daa    
  42c649:	fwait
  42c64a:	psubw  mm3,mm4
  42c64d:	mov    esi,0x1edf0686
  42c652:	ja     0x42c67e
  42c654:	adc    eax,0x29108200
  42c659:	and    dh,ah
  42c65b:	sahf   
  42c65c:	xchg   ebx,eax
  42c65d:	push   esi
  42c65e:	test   al,0x62
  42c660:	pop    esp
  42c661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c662:	std    
  42c663:	mov    al,ds:0xccf0dd31
  42c668:	inc    eax
  42c669:	cmp    BYTE PTR ds:0xf6dc00ed,0xe4
  42c670:	lock dec ecx
  42c672:	xor    DWORD PTR [eax-0x1a],esi
  42c675:	idiv   DWORD PTR [ecx]
  42c677:	push   esp
  42c678:	mov    dh,0x14
  42c67a:	and    ebx,DWORD PTR [ebp+0x1a623e6c]
  42c680:	call   0x98f2:0x3fabbc1b
  42c687:	cli    
  42c688:	cmc    
  42c689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c68a:	mov    ch,0xe0
  42c68c:	ja     0x42c69d
  42c68e:	shr    WORD PTR [ecx-0x6e],cl
  42c692:	cmc    
  42c693:	mov    BYTE PTR [edi+eax*2],0x14
  42c697:	adc    al,BYTE PTR [edi+0x10]
  42c69a:	ficom  WORD PTR [ecx*2+0x5ebf9d28]
  42c6a1:	es hlt 
  42c6a3:	outs   dx,BYTE PTR ds:[esi]
  42c6a4:	dec    eax
  42c6a5:	cwde   
  42c6a6:	dec    esp
  42c6a7:	or     edx,eax
  42c6a9:	cwde   
  42c6aa:	sahf   
  42c6ab:	lock aas 
  42c6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c6ae:	stos   BYTE PTR es:[edi],al
  42c6af:	hlt    
  42c6b0:	ins    DWORD PTR es:[edi],dx
  42c6b1:	cli    
  42c6b2:	add    eax,0xd5645961
  42c6b7:	je     0x42c6d1
  42c6b9:	add    eax,0xc0b5cfc9
  42c6be:	cmp    eax,0x13c10fb
  42c6c3:	sti    
  42c6c4:	mov    edi,0xe3ea802b
  42c6c9:	(bad)  [eax+0x5d]
  42c6cc:	fist   DWORD PTR es:[ecx]
  42c6cf:	or     edx,ebx
  42c6d1:	or     BYTE PTR [eax],ah
  42c6d3:	test   BYTE PTR [esi],ch
  42c6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6d7:	adc    eax,0xb58555b5
  42c6dc:	sub    al,0xce
  42c6de:	cdq    
  42c6df:	ret    0x7be9
  42c6e2:	mov    ch,0xda
  42c6e4:	mov    esi,0xaccf3c50
  42c6e9:	arpl   bx,ax
  42c6eb:	icebp  
  42c6ec:	jae    0x42c71d
  42c6ee:	je     0x42c6ff
  42c6f0:	mov    ch,0xd3
  42c6f2:	xchg   ebx,eax
  42c6f3:	sar    esp,1
  42c6f5:	cmp    bh,BYTE PTR [eax+ebx*4]
  42c6f8:	ins    DWORD PTR es:[edi],dx
  42c6f9:	inc    edi
  42c6fa:	leave  
  42c6fb:	mov    dh,0x62
  42c6fd:	shl    BYTE PTR ds:0xc04046,1
  42c703:	lock xchg edx,eax
  42c705:	out    0x94,eax
  42c707:	adc    DWORD PTR [edx+0x64],0x5b496d35
  42c70e:	mov    al,0xe8
  42c710:	dec    ebp
  42c711:	in     eax,0x88
  42c713:	push   esp
  42c714:	dec    ebx
  42c715:	mov    ecx,0xf8b17a2b
  42c71a:	data16 lods al,BYTE PTR ds:[esi]
  42c71c:	mov    ds:0x6c71114f,eax
  42c721:	arpl   WORD PTR [edx],di
  42c723:	imul   edx,eax,0x44
  42c726:	cmp    esp,DWORD PTR [edi-0x5b]
  42c729:	arpl   WORD PTR [ebp+0x3e78e9a0],sp
  42c72f:	cdq    
  42c730:	adc    eax,0x5c42bcb
  42c735:	cmp    bl,BYTE PTR [ebp+edi*8-0x178342c6]
  42c73c:	jae    0x42c7ba
  42c73e:	enter  0x2ac0,0xef
  42c742:	lea    esi,[esi]
  42c744:	adc    ecx,DWORD PTR [esi-0x4b]
  42c747:	adc    eax,0x9a0abee4
  42c74c:	je     0x42c775
  42c74e:	mov    eax,0xc98c32d1
  42c753:	outs   dx,DWORD PTR ds:[esi]
  42c754:	pop    eax
  42c755:	dec    esp
  42c756:	pop    esp
  42c757:	stos   DWORD PTR es:[edi],eax
  42c758:	mov    edi,0xd6b9b026
  42c75d:	mov    ebx,0x46890db3
  42c762:	repnz aam 0x89
  42c765:	xor    al,0x97
  42c767:	fldenv [ebp-0x74fb54d]
  42c76d:	inc    ebx
  42c76e:	test   esi,0x589ef656
  42c774:	fistp  DWORD PTR [esi+esi*8]
  42c777:	sbb    al,0x7e
  42c779:	je     0x42c74f
  42c77b:	mov    eax,0xc2c48256
  42c780:	and    ebp,DWORD PTR ds:0xf23bb246
  42c786:	adc    al,0xe8
  42c788:	pushf  
  42c789:	ficom  WORD PTR ss:[esi]
  42c78c:	stos   DWORD PTR es:[edi],eax
  42c78d:	retf   0x81b7
  42c790:	or     al,0x19
  42c792:	add    bl,dl
  42c794:	rcr    DWORD PTR [ebx],cl
  42c796:	pusha  
  42c797:	js     0x42c76e
  42c799:	xor    bh,ah
  42c79b:	out    dx,eax
  42c79c:	cli    
  42c79d:	sub    BYTE PTR [ebx-0x27a6d4d3],ah
  42c7a3:	xchg   edx,eax
  42c7a4:	test   eax,0xf92884ff
  42c7a9:	stos   DWORD PTR es:[edi],eax
  42c7aa:	lock cld 
  42c7ac:	xchg   edx,eax
  42c7ad:	hlt    
  42c7ae:	mov    ebp,0x9b5d9aff
  42c7b3:	and    DWORD PTR [eax],esp
  42c7b5:	sti    
  42c7b6:	fcomp  QWORD PTR [edi]
  42c7b8:	test   DWORD PTR [eax-0x47],esp
  42c7bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c7bc:	mov    ecx,0x1372f844
  42c7c1:	sub    eax,eax
  42c7c3:	push   ss
  42c7c4:	addr16 aas 
  42c7c6:	push   0x548c3b52
  42c7cb:	or     al,0xb3
  42c7cd:	dec    ecx
  42c7ce:	hlt    
  42c7cf:	adc    BYTE PTR [edx+0x4f4471de],bl
  42c7d5:	pushf  
  42c7d6:	xchg   ch,bh
  42c7d8:	xor    al,0x91
  42c7da:	mov    dl,0xfc
  42c7dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c7dd:	nop
  42c7de:	loopne 0x42c82f
  42c7e0:	repz pop eax
  42c7e2:	jb     0x42c84c
  42c7e4:	jle    0x42c809
  42c7e6:	jno    0x42c772
  42c7e8:	out    0x4e,eax
  42c7ea:	jl     0x42c786
  42c7ec:	fst    DWORD PTR [eax]
  42c7ee:	in     eax,dx
  42c7ef:	retf   0x762e
  42c7f2:	ret    0x59a0
  42c7f5:	add    ch,ah
  42c7f7:	hlt    
  42c7f8:	shl    esp,cl
  42c7fa:	fidivr DWORD PTR [ebx+0x48]
  42c7fd:	lahf   
  42c7fe:	ins    BYTE PTR es:[edi],dx
  42c7ff:	and    eax,0x93644fe
  42c804:	jne    0x42c872
  42c806:	mov    ds:0xcd977e4d,eax
  42c80b:	mov    ds:0xa3904abe,al
  42c810:	xchg   ebp,eax
  42c811:	jbe    0x42c7c7
  42c813:	push   eax
  42c814:	pop    ds
  42c815:	xchg   ebp,eax
  42c816:	push   DWORD PTR [edx+edx*8-0x3ba16df0]
  42c81d:	(bad)  
  42c81e:	cmp    eax,0x828f5c55
  42c823:	add    ebx,ebp
  42c825:	pop    esi
  42c826:	retf   
  42c827:	and    eax,0xc81c80af
  42c82c:	sar    edx,1
  42c82e:	mov    dh,0x26
  42c830:	mov    DWORD PTR [ebp+0x1c41eba4],ebp
  42c836:	adc    BYTE PTR [edx-0x6f],dl
  42c839:	popf   
  42c83a:	stos   DWORD PTR es:[edi],eax
  42c83b:	enter  0x686,0xed
  42c83f:	dec    edi
  42c840:	mov    al,ds:0xec073017
  42c845:	out    0xbd,al
  42c847:	scas   eax,DWORD PTR es:[edi]
  42c848:	outs   dx,DWORD PTR ds:[esi]
  42c849:	and    ah,BYTE PTR [ebx-0x4c]
  42c84c:	lahf   
  42c84d:	xchg   esp,eax
  42c84e:	adc    DWORD PTR [esi-0x3db7b587],ebp
  42c854:	mov    ebp,0x53a9b80d
  42c859:	jecxz  0x42c8b9
  42c85b:	xor    bh,BYTE PTR [ecx*8+0x3109dcf9]
  42c862:	nop    DWORD PTR [edi-0x4d]
  42c866:	jae    0x42c85d
  42c868:	add    cl,al
  42c86a:	or     edi,eax
  42c86c:	jle    0x42c816
  42c86e:	into   
  42c86f:	aas    
  42c870:	es test al,0x48
  42c873:	mov    cl,0xe
  42c875:	push   ds
  42c876:	jecxz  0x42c89d
  42c878:	repnz mov edx,0xc350f8cc
  42c87e:	mov    al,0x1b
  42c880:	adc    al,0x53
  42c882:	pop    edx
  42c883:	lock and ebx,ecx
  42c886:	enter  0x3da7,0x2f
  42c88a:	cdq    
  42c88b:	rcl    BYTE PTR [ecx+edi*8],cl
  42c88e:	jb     0x42c887
  42c890:	lahf   
  42c891:	add    BYTE PTR [ecx+0x69],ah
  42c894:	jmp    0xf43e:0xcb72be38
  42c89b:	adc    cl,dl
  42c89d:	mov    esi,0x8521a9e0
  42c8a2:	(bad)  [ecx+0x9]
  42c8a5:	mov    al,ds:0xa9130434
  42c8aa:	aaa    
  42c8ab:	add    al,0xf8
  42c8ad:	xchg   ecx,eax
  42c8ae:	nop
  42c8af:	in     eax,dx
  42c8b0:	sub    ah,cl
  42c8b2:	cld    
  42c8b3:	dec    ebp
  42c8b4:	loop   0x42c84e
  42c8b6:	das    
  42c8b7:	mov    BYTE PTR [edx],ch
  42c8b9:	dec    esp
  42c8ba:	call   0x5151:0x512e93f9
  42c8c1:	sbb    BYTE PTR [eax-0x71],dh
  42c8c4:	cmp    edx,DWORD PTR [esi-0x16b1aee]
  42c8ca:	lods   al,BYTE PTR ds:[esi]
  42c8cb:	sbb    BYTE PTR [ebx+0x29],dh
  42c8ce:	inc    esp
  42c8cf:	push   es
  42c8d0:	(bad)  
  42c8d2:	(bad)  
  42c8d3:	mov    DWORD PTR [eax+eiz*4],edi
  42c8d6:	les    edi,FWORD PTR [ebx+0x9]
  42c8d9:	jb     0x42c8dc
  42c8db:	out    dx,eax
  42c8dc:	adc    esp,DWORD PTR [eax+0x50]
  42c8df:	jmp    0x45a66cad
  42c8e4:	push   edi
  42c8e5:	inc    BYTE PTR [eax+ebp*8-0x4b6c4c01]
  42c8ec:	mov    BYTE PTR [eax-0x768bd3a8],dh
  42c8f2:	xchg   esi,eax
  42c8f3:	dec    esi
  42c8f4:	enter  0xb80,0x16
  42c8f8:	push   eax
  42c8f9:	sub    esi,DWORD PTR [ebx-0x388b3e6d]
  42c8ff:	scas   al,BYTE PTR es:[edi]
  42c900:	in     eax,0x74
  42c902:	cmc    
  42c903:	or     eax,0xec8b0b59
  42c908:	daa    
  42c909:	push   0xa139398
  42c90e:	aad    0x72
  42c910:	xchg   DWORD PTR [esi-0x56],esi
  42c913:	mov    esp,0xf91d774f
  42c918:	and    DWORD PTR [ebx-0xe],eax
  42c91b:	ins    BYTE PTR es:[edi],dx
  42c91c:	fs push edx
  42c91e:	or     eax,0xa40ba203
  42c923:	test   BYTE PTR [ecx],dh
  42c925:	mov    BYTE PTR [edi-0x7400b301],bl
  42c92b:	xchg   edi,eax
  42c92c:	inc    esp
  42c92d:	scas   eax,DWORD PTR es:[edi]
  42c92e:	lods   al,BYTE PTR ds:[esi]
  42c92f:	xchg   esp,edx
  42c931:	loopne 0x42c965
  42c933:	mov    dl,0xb1
  42c935:	jg     0x42c8b8
  42c937:	rol    BYTE PTR [edi],1
  42c939:	and    al,0xd6
  42c93b:	icebp  
  42c93c:	ja     0x42c8e9
  42c93e:	mov    al,ds:0x7de8780d
  42c943:	dec    edx
  42c944:	repnz iret 
  42c946:	out    dx,eax
  42c947:	jmp    0x42c987
  42c949:	pushf  
  42c94a:	ss daa 
  42c94c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42c94e:	in     al,0x3e
  42c950:	push   0x64
  42c952:	sar    BYTE PTR [ecx+0x2d520bb5],0x25
  42c959:	jo     0x42c8e8
  42c95b:	in     al,0x7c
  42c95d:	ds pop edi
  42c95f:	call   0x90e96f07
  42c964:	or     BYTE PTR [esp+edi*4-0x5846e502],ah
  42c96b:	out    dx,al
  42c96c:	xlat   BYTE PTR ds:[ebx]
  42c96d:	mov    al,0x89
  42c96f:	in     al,dx
  42c970:	leave  
  42c971:	jmp    0x42c9ba
  42c973:	(bad)  
  42c974:	mov    ch,0x26
  42c976:	aam    0xba
  42c978:	xchg   ebp,eax
  42c979:	xchg   edx,eax
  42c97a:	adc    edi,DWORD PTR [edx-0x6d]
  42c97d:	mov    ds:0x46e6f8a5,al
  42c982:	out    dx,al
  42c983:	ret    0x40eb
  42c986:	repnz push es
  42c988:	sbb    al,0x6e
  42c98a:	arpl   WORD PTR [ebx],dx
  42c98c:	jne    0x42c92d
  42c98e:	dec    ecx
  42c98f:	or     al,BYTE PTR ss:[eax+0x56]
  42c993:	test   eax,0xfd0b008d
  42c998:	je     0x42c9b3
  42c99a:	call   0x220c4a7b
  42c99f:	jno    0x42ca15
  42c9a1:	cwde   
  42c9a2:	fimul  WORD PTR [edi+edx*4]
  42c9a5:	or     ecx,DWORD PTR [ebx+0x12]
  42c9a8:	and    BYTE PTR [esi],ah
  42c9aa:	sub    ebx,DWORD PTR [esi]
  42c9ac:	xor    BYTE PTR [eax+0x1],al
  42c9af:	fadd   DWORD PTR [esi+0x23b7e7c7]
  42c9b5:	push   esp
  42c9b6:	cmp    DWORD PTR [eax+ebx*2-0x41],ecx
  42c9ba:	mov    esp,0xfcd666af
  42c9bf:	call   0x577b:0xfd98cda
  42c9c6:	je     0x42c9e8
  42c9c8:	enter  0x76ba,0x42
  42c9cc:	pushf  
  42c9cd:	in     eax,dx
  42c9ce:	test   BYTE PTR [esp+eax*2+0x68],0x5a
  42c9d3:	mov    ds:0xd60dc059,al
  42c9d8:	or     BYTE PTR [eax+0x70],ch
  42c9db:	cmp    WORD PTR [esi+0x36],si
  42c9df:	mov    bh,0x20
  42c9e1:	fwait
  42c9e2:	mov    WORD PTR [ecx-0x497c64f3],fs
  42c9e8:	icebp  
  42c9e9:	jno    0x42c9ff
  42c9eb:	xor    al,0xbd
  42c9ed:	mov    eax,DWORD PTR [ecx]
  42c9ef:	test   al,0xcb
  42c9f1:	int3   
  42c9f2:	cmp    al,0x89
  42c9f4:	pop    eax
  42c9f5:	fist   DWORD PTR [edi+edx*4]
  42c9f9:	push   cs
  42c9fa:	or     ebp,DWORD PTR [esi+0x4ece7cc0]
  42ca00:	pushf  
  42ca01:	push   eax
  42ca02:	xlat   BYTE PTR ds:[ebx]
  42ca03:	fs lahf 
  42ca05:	and    DWORD PTR [eax-0x2b2d2a41],0xffffff99
  42ca0c:	and    BYTE PTR ds:0x5ff948e3,al
  42ca12:	lahf   
  42ca13:	fldenv [esi-0x78]
  42ca16:	daa    
  42ca17:	sub    BYTE PTR [esi+eax*8-0x12],0x75
  42ca1c:	scas   eax,DWORD PTR es:[edi]
  42ca1d:	or     esp,DWORD PTR [eax+0x2c]
  42ca20:	stos   BYTE PTR es:[edi],al
  42ca21:	nop
  42ca22:	inc    edi
  42ca23:	ficom  WORD PTR ds:0xb677002c
  42ca29:	push   esi
  42ca2a:	mov    ah,0x79
  42ca2c:	rcl    DWORD PTR [ebp+0x35],cl
  42ca2f:	or     bl,ah
  42ca31:	jne    0x42ca6e
  42ca33:	fsub   DWORD PTR [eax-0x45]
  42ca36:	jmp    0x4a4d11ba
  42ca3b:	iret   
  42ca3c:	cmp    BYTE PTR [edi-0x32],0x29
  42ca40:	inc    ecx
  42ca41:	xchg   edi,eax
  42ca42:	in     eax,0xe4
  42ca44:	mov    ds:0xf3a8a0a4,eax
  42ca49:	iret   
  42ca4a:	xchg   esi,eax
  42ca4b:	cmp    cl,BYTE PTR [ecx+0x2c90c8dc]
  42ca51:	imul   ebx,DWORD PTR [edx+0x2d],0xec36ccaf
  42ca58:	add    DWORD PTR [eax-0x196e4cd5],edx
  42ca5e:	dec    eax
  42ca5f:	loop   0x42ca71
  42ca61:	loope  0x42ca35
  42ca63:	(bad)  
  42ca64:	jmp    0xd9b8:0x4893cc7
  42ca6b:	out    0x5,al
  42ca6d:	call   0x1aea018a
  42ca72:	fadd   QWORD PTR [eax-0x68]
  42ca75:	fst    DWORD PTR [ebx+0x656900d7]
  42ca7b:	add    BYTE PTR [esi],cl
  42ca7d:	xor    ecx,DWORD PTR [ecx-0x7c44cbad]
  42ca83:	jno    0x42caa9
  42ca85:	fwait
  42ca86:	in     eax,0xfa
  42ca88:	sub    eax,0xb6f6ce9b
  42ca8d:	int3   
  42ca8e:	dec    eax
  42ca8f:	lods   al,BYTE PTR ds:[esi]
  42ca90:	dec    ebp
  42ca91:	mov    ah,0x35
  42ca93:	pop    ebp
  42ca94:	dec    esi
  42ca95:	or     eax,esi
  42ca97:	pop    ecx
  42ca98:	push   ecx
  42ca99:	mov    ebp,0xbc6c32e8
  42ca9e:	jg     0x42cab4
  42caa0:	pushf  
  42caa1:	(bad)  
  42caa2:	jp     0x42cb05
  42caa4:	and    edi,DWORD PTR [eax-0x6bc72c8a]
  42caaa:	(bad)  [edx]
  42caac:	retf   0x59bb
  42caaf:	mov    ebp,0x719c5cd9
  42cab4:	in     eax,0x27
  42cab6:	mov    edi,edx
  42cab8:	aas    
  42cab9:	ja     0x42cabf
  42cabb:	mov    ebx,ecx
  42cabd:	or     edi,0x7
  42cac0:	dec    edi
  42cac1:	ret    
  42cac2:	inc    ebp
  42cac3:	sub    BYTE PTR ds:0x91b7ede0,ah
  42cac9:	xor    al,dl
  42cacb:	fimul  WORD PTR [esp+edi*8+0x74]
  42cacf:	add    al,0xfd
  42cad1:	stos   BYTE PTR es:[edi],al
  42cad2:	xchg   edi,eax
  42cad3:	test   DWORD PTR [eax+0x70],edi
  42cad6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cad8:	jns    0x42cb2b
  42cada:	adc    dh,0x5f
  42cadd:	sub    ebx,DWORD PTR [eax]
  42cadf:	push   esi
  42cae0:	adc    DWORD PTR [eax-0x275e85fd],0x47
  42cae7:	cmp    al,0x56
  42cae9:	inc    eax
  42caea:	lea    ecx,[ebp-0x4a]
  42caed:	jl     0x42caa1
  42caef:	mov    ds:0xb2b03d60,eax
  42caf4:	and    BYTE PTR [edi-0x7b6ebaa2],0x32
  42cafb:	enter  0x5225,0xfb
  42caff:	mov    dl,0xcb
  42cb01:	jg     0x42caab
  42cb03:	mov    ebx,0x96fab292
  42cb08:	inc    eax
  42cb09:	jno    0x42caad
  42cb0b:	push   eax
  42cb0c:	dec    esp
  42cb0d:	mov    bh,0x80
  42cb0f:	repz and eax,0x74ddfab4
  42cb15:	pop    ebx
  42cb16:	fwait
  42cb17:	popf   
  42cb18:	pushf  
  42cb19:	out    0xd8,eax
  42cb1b:	daa    
  42cb1c:	pop    ebx
  42cb1d:	cwde   
  42cb1e:	xchg   edi,eax
  42cb1f:	rcr    BYTE PTR ds:0xa7105fe3,1
  42cb25:	aaa    
  42cb26:	mov    esp,0x6d787094
  42cb2b:	and    esi,0xb9e034b5
  42cb31:	sahf   
  42cb32:	cli    
  42cb33:	mov    ecx,0xdff05d87
  42cb38:	mov    BYTE PTR ds:0x4e3db7aa,bl
  42cb3e:	sar    DWORD PTR [ebx],cl
  42cb40:	jge    0x42caee
  42cb42:	add    BYTE PTR [edi+0x4b],al
  42cb45:	push   0x9679971e
  42cb4a:	rcr    BYTE PTR [edi+edx*2+0x3fecdf20],1
  42cb51:	(bad)  
  42cb52:	jg     0x42cb48
  42cb54:	fxch   st(7)
  42cb56:	mov    ebp,0xb2f91fed
  42cb5b:	push   edx
  42cb5c:	pushf  
  42cb5d:	mov    ah,0xf4
  42cb5f:	enter  0x225a,0x3a
  42cb63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb64:	jmp    0x42cb26
  42cb66:	add    bh,BYTE PTR [ebp+0x46]
  42cb69:	arpl   WORD PTR [ecx-0x1bd9c783],sp
  42cb6f:	repnz arpl cx,bp
  42cb72:	jno    0x42cb39
  42cb74:	adc    ecx,DWORD PTR [esp+edx*8+0x61356008]
  42cb7b:	sahf   
  42cb7c:	cdq    
  42cb7d:	push   ss
  42cb7e:	and    ah,BYTE PTR [esi]
  42cb80:	sub    al,0x2c
  42cb82:	jb     0x42cbb2
  42cb84:	das    
  42cb85:	mov    DWORD PTR [edx],ecx
  42cb87:	sahf   
  42cb88:	leave  
  42cb89:	aam    0x5c
  42cb8b:	or     dh,BYTE PTR [edx+0x3738741b]
  42cb91:	outs   dx,DWORD PTR ds:[esi]
  42cb92:	clc    
  42cb93:	or     DWORD PTR [eax],esp
  42cb95:	adc    DWORD PTR [ebp-0xe],ebx
  42cb98:	sbb    ebp,DWORD PTR [edx]
  42cb9a:	adc    ebx,DWORD PTR [edx+ebp*1]
  42cb9d:	push   esp
  42cb9e:	dec    esi
  42cb9f:	xchg   esp,eax
  42cba0:	inc    edx
  42cba1:	jno    0x42cbdf
  42cba3:	inc    ebp
  42cba4:	inc    eax
  42cba5:	shl    edx,1
  42cba7:	sbb    ecx,DWORD PTR [ecx]
  42cba9:	jns    0x42cb4c
  42cbab:	enter  0xe866,0xc
  42cbaf:	push   ss
  42cbb0:	stos   BYTE PTR es:[edi],al
  42cbb1:	adc    DWORD PTR [esi+0x13],0x750cb090
  42cbb8:	call   0x64de:0x756ebacb
  42cbbf:	xor    BYTE PTR [ebx+0x556007ea],dh
  42cbc5:	jb     0x42cb87
  42cbc7:	xchg   edx,eax
  42cbc8:	push   esp
  42cbc9:	pop    ds
  42cbca:	inc    esi
  42cbcb:	mov    eax,ds:0xd3557ebf
  42cbd0:	bnd js 0x42cb88
  42cbd3:	xchg   ebp,eax
  42cbd4:	jbe    0x42cc2e
  42cbd6:	gs iret 
  42cbd8:	xlat   BYTE PTR ds:[ebx]
  42cbd9:	jnp    0x42cbfb
  42cbdb:	sbb    dl,BYTE PTR [eax+edx*4-0x3d]
  42cbdf:	sub    al,0xf6
  42cbe1:	je     0x42cc45
  42cbe3:	inc    esp
  42cbe4:	jb     0x42cc3e
  42cbe6:	mov    esi,DWORD PTR [edx+0x6d]
  42cbe9:	mov    bh,0x72
  42cbeb:	call   0x561bb058
  42cbf0:	jno    0x42cb8c
  42cbf2:	mov    ah,0xc
  42cbf4:	or     BYTE PTR [ebx+ebp*1-0x6826ef91],cl
  42cbfb:	sbb    BYTE PTR [edx-0x3b],ch
  42cbfe:	xor    al,0xb4
  42cc00:	addr16 arpl bx,dx
  42cc03:	mov    ds,ebx
  42cc05:	dec    ebp
  42cc06:	rcr    BYTE PTR [eax+0x1a],1
  42cc09:	out    dx,eax
  42cc0a:	push   esp
  42cc0b:	sbb    DWORD PTR [esp+eax*1-0x51],0x3d077cb8
  42cc13:	and    ah,BYTE PTR [esi+0x1e]
  42cc16:	adc    cl,BYTE PTR [ecx+0x5695a09d]
  42cc1c:	sub    BYTE PTR [edi+edi*4],0xb8
  42cc20:	adc    ch,BYTE PTR [edx]
  42cc22:	(bad)  
  42cc23:	cmc    
  42cc24:	icebp  
  42cc25:	mov    DWORD PTR [ebx],eax
  42cc27:	jle    0x42cc64
  42cc29:	js     0x42cc5a
  42cc2b:	ins    BYTE PTR es:[edi],dx
  42cc2c:	jb     0x42cc2b
  42cc2e:	imul   cl
  42cc30:	jecxz  0x42cc10
  42cc32:	add    cl,BYTE PTR [edx]
  42cc34:	nop
  42cc35:	or     BYTE PTR [esi+0x62],dl
  42cc38:	pushf  
  42cc39:	add    ch,cl
  42cc3b:	lock scas eax,DWORD PTR es:[edi]
  42cc3d:	mov    ah,0xf7
  42cc3f:	cmp    DWORD PTR [ebx],ebp
  42cc41:	in     al,0x2f
  42cc43:	adc    esp,edi
  42cc45:	loopne 0x42cc1f
  42cc47:	inc    esi
  42cc48:	or     BYTE PTR [ecx],dh
  42cc4a:	addr16 push ss
  42cc4c:	enter  0x6158,0xfc
  42cc50:	cmp    ebp,DWORD PTR [ecx]
  42cc52:	jg     0x42cc6b
  42cc54:	icebp  
  42cc55:	icebp  
  42cc56:	ins    DWORD PTR es:[edi],dx
  42cc57:	shl    BYTE PTR [edx+ebp*4-0x6b3e01da],cl
  42cc5e:	loope  0x42cc95
  42cc60:	ss enter 0x662d,0x36
  42cc65:	add    dl,BYTE PTR [edx]
  42cc67:	gs in  al,0x2
  42cc6a:	in     al,dx
  42cc6b:	je     0x42ccbc
  42cc6d:	dec    dl
  42cc6f:	addr16 jmp 0x42cc7f
  42cc72:	or     BYTE PTR [eax],dl
  42cc74:	jge    0x42ccc5
  42cc76:	ror    DWORD PTR [edx-0x49],1
  42cc79:	pusha  
  42cc7a:	xchg   DWORD PTR [eax],ebx
  42cc7c:	mov    eax,0x89128e83
  42cc81:	xor    DWORD PTR [ebp-0x13],edi
  42cc84:	out    dx,eax
  42cc85:	fcom   QWORD PTR [edx-0x77020a7]
  42cc8b:	jl     0x42cce3
  42cc8d:	inc    esi
  42cc8e:	add    BYTE PTR [esi],cl
  42cc90:	and    esi,edx
  42cc92:	or     DWORD PTR [edi],edi
  42cc94:	sbb    al,0x1f
  42cc96:	(bad)  
  42cc98:	and    DWORD PTR [ebp+edi*8-0x3e],esi
  42cc9c:	repnz repz cwde 
  42cc9f:	adc    al,0x48
  42cca1:	popa   
  42cca2:	push   ds
  42cca3:	dec    ebp
  42cca4:	inc    esp
  42cca5:	sar    DWORD PTR [edi+0x70f0acb2],0x16
  42ccac:	or     BYTE PTR ds:0x8260a4bb,ch
  42ccb2:	adc    al,0x9
  42ccb4:	xor    BYTE PTR [ecx-0x6],ch
  42ccb7:	test   eax,0x383abb24
  42ccbc:	frstor [ebp+0xb7d52f0]
  42ccc2:	xor    bl,BYTE PTR [ecx+0x465a8f5c]
  42ccc8:	in     eax,0x52
  42ccca:	or     edx,DWORD PTR [ecx+0x74]
  42cccd:	add    al,0x87
  42cccf:	outs   dx,DWORD PTR ds:[esi]
  42ccd0:	and    BYTE PTR [ebx-0x5dc4cd67],ah
  42ccd6:	sub    BYTE PTR [edi],dl
  42ccd8:	sbb    al,0x2e
  42ccda:	xor    DWORD PTR [edx+0x3e],0xffffffc3
  42ccde:	gs dec esp
  42cce0:	lods   eax,DWORD PTR ds:[esi]
  42cce1:	mov    dl,0x10
  42cce3:	or     eax,0xe8939daa
  42cce8:	jo     0x42cc83
  42ccea:	jge    0x42cce2
  42ccec:	push   0xffffffdb
  42ccee:	jbe    0x42cd4d
  42ccf0:	pop    ss
  42ccf1:	xchg   esp,eax
  42ccf2:	push   ecx
  42ccf3:	jecxz  0x42cca4
  42ccf5:	data16 js 0x42cd2c
  42ccf8:	jge    0x42ccd8
  42ccfa:	cmp    al,0x9
  42ccfc:	js     0x42cd61
  42ccfe:	ja     0x42cd68
  42cd00:	jp     0x42ccf6
  42cd02:	inc    ecx
  42cd03:	add    BYTE PTR [eax],al
  42cd05:	add    BYTE PTR [eax],al
  42cd07:	add    BYTE PTR [ebx*1+0x95157dd],ch
  42cd0e:	add    BYTE PTR [eax],al
  42cd10:	add    BYTE PTR [eax],al
  42cd12:	add    BYTE PTR [eax],al
  42cd14:	push   ecx
  42cd15:	or     DWORD PTR [eax],eax
  42cd17:	add    BYTE PTR [eax],bh
  42cd19:	add    BYTE PTR [esi],ah
  42cd1b:	jl     0x42cd1d
  42cd1d:	add    dh,BYTE PTR [esi]
  42cd1f:	or     BYTE PTR [eax],al
  42cd21:	add    ah,al
  42cd23:	inc    ebp
  42cd24:	add    BYTE PTR [ecx+edx*1-0x18b2d1d5],cl
  42cd2b:	imul   edx,DWORD PTR [edi+0x24],0x2e
  42cd2f:	cmp    BYTE PTR [ebx+0x6ae15ac8],bl
  42cd35:	aaa    
  42cd36:	dec    eax
  42cd37:	ins    BYTE PTR es:[edi],dx
  42cd38:	out    0xa4,al
  42cd3a:	push   ds
  42cd3b:	bound  ecx,QWORD PTR [esi-0xb]
  42cd3e:	and    DWORD PTR [ebx+eax*2+0xe],ebp
  42cd42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd43:	jp     0x42cd01
  42cd45:	push   ds
  42cd46:	int    0x1c
  42cd48:	nop
  42cd49:	test   ecx,edi
  42cd4b:	sar    ecx,0xee
  42cd4e:	out    dx,al
  42cd4f:	mov    edx,0x9db538f3
  42cd54:	mov    esi,0x4325d15a
  42cd59:	and    bl,BYTE PTR [edx+eax*4-0x28]
  42cd5d:	gs dec eax
  42cd5f:	dec    esp
  42cd60:	fucomp st(1)
  42cd62:	mov    bl,0x80
  42cd64:	or     al,BYTE PTR [esi]
  42cd66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd67:	and    al,BYTE PTR [ebx-0x5bcf2f73]
  42cd6d:	inc    edx
  42cd6e:	inc    ebp
  42cd6f:	sub    ch,ch
  42cd71:	push   ebx
  42cd72:	stc    
  42cd73:	and    ah,BYTE PTR [esi-0x54cb7db4]
  42cd79:	add    eax,0x12686131
  42cd7e:	jo     0x42cdb6
  42cd80:	xchg   ebp,eax
  42cd81:	add    eax,0xf1677e45
  42cd86:	push   edi
  42cd87:	xchg   esp,eax
  42cd88:	or     BYTE PTR [esi-0x42],al
  42cd8b:	jge    0x42cd14
  42cd8d:	sub    ah,cl
  42cd8f:	xchg   edi,eax
  42cd90:	mov    eax,0x8f92afb8
  42cd95:	pop    ebp
  42cd96:	ins    BYTE PTR es:[edi],dx
  42cd97:	pop    ebx
  42cd98:	push   0xffffffdc
  42cd9a:	xor    cl,al
  42cd9c:	std    
  42cd9d:	mov    bh,0xf9
  42cd9f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42cda1:	rol    DWORD PTR [esp+esi*4-0x2986907d],cl
  42cda8:	dec    esi
  42cda9:	(bad)  
  42cdaa:	cmp    DWORD PTR [eax-0x6d1ff026],ebp
  42cdb0:	add    BYTE PTR [ebp-0x2c],dh
  42cdb3:	sbb    ah,cl
  42cdb5:	or     ebx,DWORD PTR [ebp-0x5f]
  42cdb8:	rcl    DWORD PTR [ebx],cl
  42cdba:	dec    esp
  42cdbb:	xchg   DWORD PTR [esi-0x10],esp
  42cdbe:	push   0x43f526e
  42cdc3:	cli    
  42cdc4:	xchg   ebp,edx
  42cdc6:	adc    al,0x36
  42cdc8:	adc    eax,0xb1234cd
  42cdcd:	(bad)  
  42cdce:	and    al,0xbc
  42cdd0:	test   eax,0x11d8c8e6
  42cdd5:	retf   
  42cdd6:	sti    
  42cdd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cdd8:	loopne 0x42cdcc
  42cdda:	lock add eax,0x3d9159a0
  42cde0:	in     eax,0x4
  42cde2:	dec    edx
  42cde3:	and    DWORD PTR [ebx+0x7e],0xffffffca
  42cde7:	mov    ebx,0x94286c0a
  42cdec:	mov    WORD PTR [edi-0x401eb37a],?
  42cdf2:	pop    es
  42cdf3:	ror    bl,1
  42cdf5:	push   cs
  42cdf6:	shl    DWORD PTR [edx],1
  42cdf8:	mov    bh,BYTE PTR [ebx+0x46]
  42cdfb:	adc    esp,esi
  42cdfd:	ficomp WORD PTR [esi+0x77]
  42ce00:	ds into 
  42ce02:	in     al,dx
  42ce03:	cmp    al,0x96
  42ce05:	sbb    cl,ch
  42ce07:	and    edx,DWORD PTR [edi]
  42ce09:	in     eax,dx
  42ce0a:	cmp    edi,DWORD PTR [ebp-0x48c3248d]
  42ce10:	pop    es
  42ce11:	loop   0x42ce4d
  42ce13:	(bad)  
  42ce14:	mov    edi,0xe46018ff
  42ce19:	pop    ss
  42ce1a:	add    BYTE PTR [esi+0x307d5e49],bl
  42ce20:	or     BYTE PTR [edi+0x4803a83d],dl
  42ce26:	jle    0x42cea0
  42ce28:	xchg   BYTE PTR [ebx+edi*4],ch
  42ce2b:	cdq    
  42ce2c:	outs   dx,BYTE PTR ds:[esi]
  42ce2d:	fwait
  42ce2e:	sar    DWORD PTR [edi+0x53502893],0xfb
  42ce35:	or     ah,bl
  42ce37:	xchg   esp,eax
  42ce38:	hlt    
  42ce39:	jns    0x42cdd4
  42ce3b:	je     0x42ce0e
  42ce3d:	test   BYTE PTR [ebx-0x125eb71a],dl
  42ce43:	das    
  42ce44:	sbb    al,0x48
  42ce46:	rcl    DWORD PTR [ebp-0x1bddc944],0xdc
  42ce4d:	inc    eax
  42ce4e:	xchg   BYTE PTR [ebx+ebp*1],dl
  42ce51:	jbe    0x42ce9c
  42ce53:	xchg   ebp,eax
  42ce54:	cmp    eax,0xedd76422
  42ce59:	jbe    0x42cde3
  42ce5b:	push   ecx
  42ce5c:	jb     0x42ce21
  42ce5e:	out    0x88,eax
  42ce60:	push   ss
  42ce61:	pop    ebp
  42ce62:	clc    
  42ce63:	xor    eax,DWORD PTR [ebx+0x69]
  42ce66:	call   0x85657b09
  42ce6b:	test   eax,0x43322e73
  42ce70:	xchg   DWORD PTR [esi+esi*8+0x6a],edx
  42ce74:	sub    edx,DWORD PTR [ecx]
  42ce76:	adc    eax,0x78b9e6e8
  42ce7b:	pop    ds
  42ce7c:	push   ds
  42ce7d:	mov    esp,0xf3a7ab81
  42ce82:	push   edi
  42ce83:	pushf  
  42ce84:	sbb    al,0x77
  42ce86:	xchg   ecx,eax
  42ce87:	push   ss
  42ce88:	dec    edi
  42ce89:	jo     0xadec8ecf
  42ce8f:	pusha  
  42ce90:	adc    bl,al
  42ce92:	bound  ebp,QWORD PTR [esi+0x5f]
  42ce95:	in     al,0xe7
  42ce97:	jae    0x42cef9
  42ce99:	pop    eax
  42ce9a:	lds    ebx,FWORD PTR [ebp+eax*4-0x80]
  42ce9e:	mov    ebp,ds
  42cea0:	popf   
  42cea1:	add    dl,BYTE PTR [eax]
  42cea3:	rcl    BYTE PTR [ebp-0x484ffe9c],0x96
  42ceaa:	jbe    0x42ce2c
  42ceac:	push   ebx
  42cead:	push   edx
  42ceae:	adc    al,0xec
  42ceb0:	aam    0x6e
  42ceb2:	(bad)  
  42ceb3:	jp     0x42ceac
  42ceb5:	xor    eax,0xf89b3bda
  42ceba:	test   ebx,edi
  42cebc:	or     eax,0x661ba2dc
  42cec1:	cwde   
  42cec2:	mov    al,ds:0x82023bb1
  42cec7:	cmp    ah,BYTE PTR [edi+0x21]
  42ceca:	cmc    
  42cecb:	(bad)  
  42cecc:	div    DWORD PTR [ecx-0x4ab7d541]
  42ced2:	xor    eax,0xda1be878
  42ced7:	mov    al,ds:0x7db3ffa4
  42cedc:	imul   ecx,DWORD PTR [ecx+edi*2],0xed84528c
  42cee3:	ins    DWORD PTR es:[edi],dx
  42cee4:	mov    edi,0xf67c30a2
  42cee9:	sti    
  42ceea:	pop    esi
  42ceeb:	push   edx
  42ceec:	cmp    al,0xe5
  42ceee:	rcr    eax,0xd0
  42cef1:	mov    ds:0x3171ca73,eax
  42cef6:	(bad)  
  42cef8:	cld    
  42cef9:	dec    ecx
  42cefa:	push   ebx
  42cefb:	jno    0x42ceec
  42cefd:	into   
  42cefe:	sub    DWORD PTR [ebp-0x717adff3],ebx
  42cf04:	test   DWORD PTR [ecx],edi
  42cf06:	lds    ebp,FWORD PTR [ebx+0x5]
  42cf09:	mov    BYTE PTR [edi+ebx*4-0x14],0xa6
  42cf0e:	jmp    0xe5d7049
  42cf13:	in     al,dx
  42cf14:	dec    edi
  42cf15:	das    
  42cf16:	lahf   
  42cf17:	les    eax,FWORD PTR [eax+0x10]
  42cf1a:	inc    edx
  42cf1b:	cld    
  42cf1c:	adc    ah,ch
  42cf1e:	push   0x3f
  42cf20:	pop    es
  42cf21:	mov    ah,0x56
  42cf23:	adc    ah,ch
  42cf25:	xor    al,0x68
  42cf27:	xor    eax,0x13a245da
  42cf2c:	out    dx,al
  42cf2d:	enter  0xaa58,0xa0
  42cf31:	mov    DWORD PTR [edi-0x60],0x7caa3650
  42cf38:	xlat   BYTE PTR ds:[ebx]
  42cf39:	jbe    0x42cfb8
  42cf3b:	mov    bh,0x3d
  42cf3d:	int    0x82
  42cf3f:	loopne 0x42cf65
  42cf41:	enter  0x5556,0x9f
  42cf45:	in     al,dx
  42cf46:	les    eax,FWORD PTR [ebx+0x5d]
  42cf49:	dec    eax
  42cf4a:	stos   BYTE PTR es:[edi],al
  42cf4b:	jecxz  0x42cf7d
  42cf4d:	sbb    bl,cl
  42cf4f:	mov    bl,0xbd
  42cf51:	jno    0x42cfbf
  42cf53:	sub    DWORD PTR [edx+ebx*1+0x2948753c],ecx
  42cf5a:	pop    ss
  42cf5b:	nop
  42cf5c:	test   ax,0xf58f
  42cf60:	clc    
  42cf61:	push   edx
  42cf62:	test   edi,edi
  42cf64:	mov    ah,0x5e
  42cf66:	push   ebp
  42cf67:	je     0x42cf0f
  42cf69:	fisub  DWORD PTR [esi+0x3d]
  42cf6c:	dec    esp
  42cf6d:	pop    esp
  42cf6e:	adc    al,0x6d
  42cf70:	stc    
  42cf71:	test   DWORD PTR [esi],edi
  42cf73:	gs ds mov ecx,0x819f4980
  42cf7a:	adc    ebx,eax
  42cf7c:	inc    ebx
  42cf7d:	inc    eax
  42cf7e:	xchg   esp,eax
  42cf7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf80:	push   0xffffffce
  42cf82:	rcl    DWORD PTR [eax],0xac
  42cf85:	inc    esp
  42cf86:	repz je 0x42cf51
  42cf89:	adc    bl,0xbd
  42cf8c:	jp     0x42cfb7
  42cf8e:	gs dec edi
  42cf90:	pop    eax
  42cf91:	jo     0x42cfd5
  42cf93:	fnstsw WORD PTR [eax-0x32]
  42cf96:	dec    ecx
  42cf97:	ins    BYTE PTR es:[edi],dx
  42cf98:	pop    ss
  42cf99:	cmp    edx,DWORD PTR [ecx+edi*2-0x11e226d5]
  42cfa0:	or     eax,0x76b8c80d
  42cfa5:	test   DWORD PTR [edx-0x30],0x72561427
  42cfac:	fdivr  QWORD PTR [edi+0x24]
  42cfaf:	scas   al,BYTE PTR es:[edi]
  42cfb0:	ins    BYTE PTR es:[edi],dx
  42cfb1:	fs pop ebp
  42cfb3:	mov    edi,0x1c74001d
  42cfb8:	aas    
  42cfb9:	xor    ebp,DWORD PTR [ebp-0x5762d827]
  42cfbf:	loopne 0x42d01d
  42cfc1:	add    edx,ebx
  42cfc3:	inc    ebp
  42cfc4:	or     eax,0x32cc687f
  42cfc9:	scas   eax,DWORD PTR es:[edi]
  42cfca:	(bad)  [ebp+0x54d9fd12]
  42cfd0:	lock fsub DWORD PTR [edi+0x6]
  42cfd4:	cwde   
  42cfd5:	int    0x4f
  42cfd7:	and    ah,BYTE PTR [esp+edx*1-0x54]
  42cfdb:	test   BYTE PTR [ecx*8-0x1266e314],bh
  42cfe2:	mov    esp,0x9021d14f
  42cfe7:	es push ebx
  42cfe9:	adc    dl,BYTE PTR [eax+eiz*8-0x5]
  42cfed:	icebp  
  42cfee:	jo     0x42cfa6
  42cff0:	enter  0x4921,0xbb
  42cff4:	add    al,0xd7
  42cff6:	mov    al,ds:0x88b9b78a
  42cffb:	stc    
  42cffc:	cmp    ch,BYTE PTR [eax]
  42cffe:	xchg   ebp,eax
  42cfff:	sub    ah,bl
  42d001:	or     al,0x28
  42d003:	iret   
  42d004:	cld    
  42d005:	retf   
  42d006:	dec    esp
  42d007:	sar    ah,1
  42d009:	jmp    DWORD PTR [ebp-0x75]
  42d00c:	sbb    al,0xbe
  42d00e:	or     ah,dh
  42d010:	ret    0xab51
  42d013:	addr16 xor al,0x5
  42d016:	inc    ebp
  42d017:	icebp  
  42d018:	sbb    bl,dh
  42d01a:	idiv   BYTE PTR [esi+eiz*8+0x38]
  42d01e:	retf   
  42d01f:	sbb    DWORD PTR [ecx],0x4f8f4d3c
  42d025:	xor    DWORD PTR [esi+0x60b22d8b],edx
  42d02b:	fmulp  st(0),st
  42d02d:	sbb    eax,0xa05be5c2
  42d032:	(bad)  
  42d033:	test   dh,ch
  42d035:	pop    ecx
  42d036:	and    eax,0xbd6ca890
  42d03b:	in     eax,dx
  42d03c:	sub    al,0xf1
  42d03e:	pop    esp
  42d03f:	push   ecx
  42d040:	(bad)
  42d043:	push   ss
  42d044:	push   ecx
  42d045:	push   eax
  42d046:	sahf   
  42d047:	adc    eax,DWORD PTR [ebp+0x6762082]
  42d04d:	mov    cl,0x74
  42d04f:	loop   0x42d079
  42d051:	add    DWORD PTR [eax],esi
  42d053:	mov    esi,0x98dd66bc
  42d058:	icebp  
  42d059:	pop    ebp
  42d05a:	pop    ebp
  42d05b:	sub    DWORD PTR [eax],0x4079aed6
  42d061:	xchg   ebx,eax
  42d062:	out    dx,eax
  42d063:	pop    es
  42d064:	lods   eax,DWORD PTR ds:[esi]
  42d065:	push   esi
  42d066:	xchg   esp,eax
  42d067:	pop    esp
  42d068:	pop    esp
  42d069:	fs adc bh,dh
  42d06c:	xchg   dl,ch
  42d06e:	sbb    ebx,DWORD PTR [edi+0x5a]
  42d071:	and    eax,0x6a8d2788
  42d076:	fdivr  QWORD PTR [esi+0x11]
  42d079:	push   eax
  42d07a:	(bad)  
  42d07b:	lods   al,BYTE PTR ds:[esi]
  42d07c:	imul   ebx,DWORD PTR [ecx+ebp*8+0x7dfcd49e],0x14
  42d084:	shl    dl,1
  42d086:	out    dx,al
  42d087:	lahf   
  42d088:	xor    BYTE PTR [eax+0x78fdbd87],0x39
  42d08f:	xchg   edi,eax
  42d090:	aaa    
  42d091:	pop    ecx
  42d092:	mov    bh,0x68
  42d094:	pusha  
  42d095:	aad    0x9c
  42d097:	loope  0x42d041
  42d099:	cmp    ah,BYTE PTR [ebp-0x5b]
  42d09c:	enter  0x2b6f,0xc0
  42d0a0:	cld    
  42d0a1:	or     eax,DWORD PTR ds:0x490dedac
  42d0a7:	adc    ah,ah
  42d0a9:	mov    bl,0x2e
  42d0ab:	mov    ebp,0xae4f2483
  42d0b0:	cmp    eax,0x1f9bf68c
  42d0b5:	xchg   ebp,eax
  42d0b6:	rol    DWORD PTR [edi+0x5c],cl
  42d0b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d0ba:	mov    al,0xf0
  42d0bc:	std    
  42d0bd:	sub    esi,DWORD PTR [ebp+ecx*8+0x5b]
  42d0c1:	jne    0x42d080
  42d0c3:	aam    0xcf
  42d0c5:	fisttp WORD PTR [eax-0x63fae96e]
  42d0cb:	fprem  
  42d0cd:	pop    ebp
  42d0ce:	pop    edx
  42d0d0:	(bad)  
  42d0d1:	mov    BYTE PTR [edx+0x33],dh
  42d0d4:	neg    DWORD PTR [eax+ecx*2]
  42d0d7:	jmp    0xa622a334
  42d0dc:	in     eax,0x44
  42d0de:	les    edx,FWORD PTR [edi]
  42d0e0:	icebp  
  42d0e1:	jl     0x42d0f8
  42d0e3:	stc    
  42d0e4:	adc    BYTE PTR [ebx+ebp*1-0x18],dl
  42d0e8:	repz sbb dl,BYTE PTR [esi+0x3]
  42d0ec:	xor    ebp,DWORD PTR [ebx]
  42d0ee:	test   al,0x57
  42d0f0:	or     al,0xc9
  42d0f2:	sub    al,0x46
  42d0f4:	push   0x4e
  42d0f6:	outs   dx,DWORD PTR ds:[esi]
  42d0f7:	xchg   ecx,eax
  42d0f8:	pop    eax
  42d0f9:	xor    BYTE PTR [edx],ah
  42d0fb:	push   0xff627f67
  42d100:	push   0x7408d8c0
  42d105:	jns    0x42d0b2
  42d107:	mov    bh,0x51
  42d109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d10a:	jl     0x42d108
  42d10c:	jp     0x42d105
  42d10e:	jp     0x42d174
  42d110:	cs mov ebx,0x7b2002fc
  42d116:	(bad)  
  42d117:	out    dx,al
  42d118:	or     al,0xea
  42d11a:	test   BYTE PTR [esi-0x219bbb74],cl
  42d120:	and    eax,0xbfe1a065
  42d125:	pop    esp
  42d126:	push   0xaa5691cd
  42d12b:	in     eax,0x52
  42d12d:	out    dx,al
  42d12e:	ja     0x42d140
  42d130:	sbb    edi,DWORD PTR [ecx+eiz*8-0x378d8b5e]
  42d137:	sahf   
  42d138:	xor    al,0x7f
  42d13a:	sbb    eax,0x13f284bd
  42d13f:	adc    DWORD PTR [ebp-0x472aa6a8],ecx
  42d145:	call   FWORD PTR [eax+0x7cfc768b]
  42d14b:	cmp    al,0x1f
  42d14d:	fist   DWORD PTR [ebp+0xb529e84]
  42d153:	mov    al,ds:0x358f7bf0
  42d158:	xchg   BYTE PTR [edx+eax*8-0x1d],bl
  42d15c:	dec    eax
  42d15d:	dec    ecx
  42d15e:	cmp    al,0x84
  42d160:	pop    ebx
  42d161:	loop   0x42d146
  42d163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d164:	inc    eax
  42d165:	ins    BYTE PTR es:[edi],dx
  42d166:	sbb    eax,0x4fb44191
  42d16b:	push   ecx
  42d16c:	xchg   edx,eax
  42d16d:	adc    BYTE PTR [eax+0x606ef079],dl
  42d173:	sub    eax,0xb4c734f8
  42d178:	mov    eax,0xf5b0ebf4
  42d17d:	xor    edi,DWORD PTR [ebx]
  42d17f:	push   edx
  42d180:	pop    esp
  42d181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d182:	xchg   ebp,eax
  42d183:	or     ah,ah
  42d185:	add    al,0x69
  42d187:	mov    edi,DWORD PTR [ebp+0x2f344280]
  42d18d:	pop    ds
  42d18e:	ffree  st(2)
  42d190:	hlt    
  42d191:	lods   eax,DWORD PTR ds:[esi]
  42d192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d193:	imul   edx,DWORD PTR [esi-0x3b],0xe8655d0f
  42d19a:	or     al,0xc8
  42d19c:	sar    DWORD PTR [ecx-0x77836c87],0x23
  42d1a3:	call   0x97b34394
  42d1a8:	mov    cl,0x76
  42d1aa:	dec    eax
  42d1ab:	mov    eax,0x71759427
  42d1b0:	pop    ebp
  42d1b1:	aad    0x7e
  42d1b3:	push   esi
  42d1b4:	fsubr  st,st(0)
  42d1b6:	mov    eax,0x405bbec2
  42d1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1bc:	mov    al,0xfd
  42d1be:	jmp    0xe9a1:0xa9c26fdc
  42d1c5:	xchg   edi,eax
  42d1c6:	idiv   BYTE PTR [ecx]
  42d1c8:	add    BYTE PTR [edi+ebx*8],ch
  42d1cb:	imul   ebx,DWORD PTR [bx+di],0xa88069e2
  42d1d2:	add    eax,0x82a77aaf
  42d1d7:	out    dx,eax
  42d1d8:	out    0xc0,al
  42d1da:	int3   
  42d1db:	popf   
  42d1dc:	and    bh,bl
  42d1de:	js     0x42d1a7
  42d1e0:	mov    eax,ds:0x3af0718a
  42d1e5:	pop    edx
  42d1e6:	sbb    BYTE PTR [ecx],0xea
  42d1e9:	gs mov edx,esi
  42d1ec:	adc    al,0x15
  42d1ee:	push   edi
  42d1ef:	ss enter 0xff2b,0xe4
  42d1f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1f5:	cmp    al,cl
  42d1f7:	fadd   QWORD PTR [edi]
  42d1f9:	adc    al,0x18
  42d1fb:	fisub  WORD PTR [ebp-0x7e4c1f92]
  42d201:	jge    0x42d27a
  42d203:	xor    al,0x8
  42d205:	sahf   
  42d206:	mov    DWORD PTR [eax+eiz*2],eax
  42d209:	pop    ds
  42d20a:	mov    ch,0x9f
  42d20c:	stos   DWORD PTR es:[edi],eax
  42d20d:	xchg   edi,eax
  42d20e:	leave  
  42d20f:	sbb    ch,BYTE PTR [eax]
  42d211:	mov    WORD PTR [edx-0x7c],?
  42d214:	iret   
  42d215:	inc    esi
  42d216:	xchg   DWORD PTR [esi+0x502a4c02],ecx
  42d21c:	fidivr WORD PTR ds:0xe291d64a
  42d222:	jo     0x42d1a6
  42d224:	or     ebx,DWORD PTR es:[ecx+0x1d680e5d]
  42d22b:	sbb    BYTE PTR [edi+0x3faef0ee],al
  42d231:	stc    
  42d232:	arpl   WORD PTR [eax+0x3c],dx
  42d235:	arpl   WORD PTR [ecx+0x3b],di
  42d238:	mov    esi,es
  42d23a:	sbb    ecx,eax
  42d23c:	retf   0x8660
  42d23f:	(bad)  
  42d240:	bnd jnp 0x42d22d
  42d243:	push   ss
  42d244:	xor    DWORD PTR [esi],edx
  42d246:	test   BYTE PTR ds:0xfa7ba2b3,ah
  42d24c:	xor    edi,ebx
  42d24e:	sub    eax,0x65893f2c
  42d253:	push   ss
  42d254:	dec    esp
  42d255:	mov    BYTE PTR [esi+ebx*4+0x50],bh
  42d259:	dec    edi
  42d25a:	mov    ebp,0x1b69fd7d
  42d25f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d261:	je     0x42d2cd
  42d263:	(bad)  
  42d264:	mov    eax,ebx
  42d266:	fnstenv [edx+0x4a98b356]
  42d26c:	xchg   DWORD PTR [ebp+0x72051210],ebp
  42d272:	sub    edi,DWORD PTR [esi+edx*2-0x75835a23]
  42d279:	sub    cl,0xec
  42d27c:	fs sbb ecx,ebx
  42d27f:	jmp    0x450b029c
  42d284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d285:	mov    bl,al
  42d287:	rcr    DWORD PTR [edx],1
  42d289:	mov    esp,0xe04427e1
  42d28e:	lods   al,BYTE PTR ds:[esi]
  42d28f:	loop   0x42d2f4
  42d291:	or     eax,0x9f6dc68b
  42d296:	and    al,dl
  42d298:	rol    DWORD PTR [esi+0x4a],cl
  42d29b:	in     al,0xdd
  42d29d:	(bad)  
  42d29e:	(bad)  
  42d29f:	mov    esp,0xe40b7878
  42d2a4:	stc    
  42d2a5:	push   esp
  42d2a6:	or     DWORD PTR [edx],esi
  42d2a8:	ds pushf 
  42d2aa:	cmp    BYTE PTR [edi-0x63],0x20
  42d2ae:	cwde   
  42d2af:	and    edx,DWORD PTR [edx+0x55]
  42d2b2:	sar    BYTE PTR [ebp-0x356dfaf6],0x77
  42d2b9:	pop    ebp
  42d2ba:	in     eax,dx
  42d2bb:	in     al,0xc9
  42d2bd:	fcmove st,st(5)
  42d2bf:	cmp    ch,dh
  42d2c1:	iret   
  42d2c2:	jae    0x42d272
  42d2c4:	or     BYTE PTR [edi+0x762ef6f3],dh
  42d2ca:	popa   
  42d2cb:	dec    edi
  42d2cc:	stos   DWORD PTR es:[edi],eax
  42d2cd:	mov    al,0xdd
  42d2cf:	in     eax,0x54
  42d2d1:	jnp    0x42d2b7
  42d2d3:	inc    ebx
  42d2d4:	dec    esp
  42d2d5:	xchg   edi,eax
  42d2d6:	aam    0xd0
  42d2d8:	pushf  
  42d2d9:	sub    ah,0x60
  42d2dc:	into   
  42d2dd:	inc    BYTE PTR [eax-0x8]
  42d2e0:	add    cl,ah
  42d2e2:	sbb    esi,esp
  42d2e4:	push   ecx
  42d2e5:	jl     0x42d311
  42d2e7:	push   ebp
  42d2e8:	sbb    al,0xa4
  42d2ea:	pushf  
  42d2eb:	mov    ch,dl
  42d2ed:	stos   BYTE PTR es:[edi],al
  42d2ee:	test   eax,0xee407fb0
  42d2f3:	pop    ebx
  42d2f4:	and    DWORD PTR [ebp+0x36],ebp
  42d2f7:	pop    eax
  42d2f8:	pop    ecx
  42d2f9:	out    0xe8,eax
  42d2fb:	inc    esp
  42d2fc:	in     al,dx
  42d2fd:	pop    ecx
  42d2fe:	int    0xf7
  42d300:	mov    cl,0xc6
  42d302:	sbb    eax,0x98ae0c
  42d307:	jg     0x42d341
  42d309:	push   ss
  42d30a:	sbb    esi,DWORD PTR [edi+0x30]
  42d30d:	and    DWORD PTR [edx+0x744ad520],esp
  42d313:	and    eax,0xea815433
  42d318:	sbb    eax,0x18666c7f
  42d31d:	mov    esp,?
  42d31f:	inc    ebx
  42d320:	fwait
  42d321:	dec    ebp
  42d322:	fdiv   st,st(3)
  42d324:	stc    
  42d325:	repz pop esi
  42d327:	and    BYTE PTR [edx],al
  42d329:	mov    ah,0x2d
  42d32b:	gs jnp 0x42d2e6
  42d32e:	ja     0x42d397
  42d330:	inc    esp
  42d331:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d333:	inc    edi
  42d334:	int3   
  42d335:	cmp    ecx,DWORD PTR [ecx+0x436878ab]
  42d33b:	xchg   edi,eax
  42d33c:	popa   
  42d33d:	mov    al,ds:0xc0fa3a8c
  42d342:	mov    WORD PTR [ebx+0x34],ss
  42d345:	into   
  42d346:	jo     0x42d337
  42d348:	cmp    BYTE PTR ds:0x751f3441,ah
  42d34e:	addr16 je 0x42d344
  42d351:	icebp  
  42d352:	test   BYTE PTR [eax],bl
  42d354:	pop    eax
  42d355:	inc    ecx
  42d356:	xor    eax,DWORD PTR [eax-0x340aaded]
  42d35c:	sbb    eax,0xdfdf837c
  42d361:	jo     0x42d3ca
  42d363:	loop   0x42d390
  42d365:	adc    al,0xa0
  42d367:	lods   eax,DWORD PTR ds:[esi]
  42d368:	int3   
  42d369:	stos   DWORD PTR es:[edi],eax
  42d36a:	dec    edi
  42d36b:	sbb    al,0x32
  42d36d:	cli    
  42d36e:	sub    eax,0x6a226f48
  42d373:	or     ch,0x30
  42d376:	cwde   
  42d377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d378:	ins    BYTE PTR es:[edi],dx
  42d379:	stos   DWORD PTR es:[edi],eax
  42d37a:	stos   DWORD PTR es:[edi],eax
  42d37b:	enter  0xf9dc,0x35
  42d37f:	fldenv [ebp-0x70]
  42d382:	pop    edx
  42d383:	or     al,0xc8
  42d385:	icebp  
  42d386:	in     al,dx
  42d387:	jle    0x42d37a
  42d389:	ds mov ah,0xf
  42d38c:	jne    0x42d37c
  42d38e:	popa   
  42d38f:	hlt    
  42d390:	dec    eax
  42d391:	push   edx
  42d392:	dec    edi
  42d393:	fdivr  DWORD PTR [ebp-0x20888684]
  42d399:	or     DWORD PTR [esi],eax
  42d39b:	lods   eax,DWORD PTR ds:[esi]
  42d39c:	xor    BYTE PTR [esi],0x74
  42d39f:	pop    eax
  42d3a0:	in     al,dx
  42d3a1:	in     al,dx
  42d3a2:	cmp    eax,0xa6a4fb29
  42d3a7:	cdq    
  42d3a8:	and    al,0x7a
  42d3aa:	ret    
  42d3ab:	push   esp
  42d3ac:	inc    ebp
  42d3ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3ae:	enter  0xb706,0xb4
  42d3b2:	adc    BYTE PTR [ecx],dh
  42d3b4:	int    0xf3
  42d3b6:	jne    0x42d3a4
  42d3b8:	sub    dl,bl
  42d3ba:	enter  0xc764,0xb5
  42d3be:	and    ebx,esi
  42d3c0:	adc    BYTE PTR [esi],dh
  42d3c2:	inc    ebx
  42d3c3:	ficom  WORD PTR [esi-0x3a]
  42d3c6:	mov    edx,0xbdb8f4a2
  42d3cb:	push   ds
  42d3cc:	cld    
  42d3cd:	cmp    bh,BYTE PTR [eax+0x23]
  42d3d0:	repnz dec edi
  42d3d2:	fcomp  QWORD PTR [esi]
  42d3d4:	rcl    bl,cl
  42d3d6:	retf   
  42d3d7:	shr    BYTE PTR [eax-0x77ffb0f5],0x35
  42d3de:	outs   dx,BYTE PTR ds:[esi]
  42d3df:	(bad)  
  42d3e1:	rcl    BYTE PTR [eax],0xdd
  42d3e4:	and    al,0xe1
  42d3e6:	arpl   di,dx
  42d3e8:	clc    
  42d3e9:	popa   
  42d3ea:	or     ebx,0xe592cc39
  42d3f0:	or     BYTE PTR [edi+0x13],0x50
  42d3f4:	gs push esp
  42d3f6:	lock cmp ebp,DWORD PTR [ecx+0x3e65bca8]
  42d3fd:	xchg   esp,eax
  42d3fe:	mov    DWORD PTR [edx+ebp*4],edx
  42d401:	xchg   ebx,eax
  42d402:	sub    bh,bl
  42d404:	loope  0x42d3bb
  42d406:	sbb    dl,BYTE PTR ds:0x8be8eb38
  42d40c:	(bad)  
  42d40d:	pop    edi
  42d40e:	cwde   
  42d40f:	(bad)  
  42d410:	es pop esp
  42d412:	mov    esi,gs
  42d414:	sub    bh,dh
  42d416:	cmove  edi,edx
  42d419:	add    eax,0x1295e404
  42d41e:	mov    ds:0xcc0dbbe7,eax
  42d423:	sub    BYTE PTR [eax+0x553092c6],ah
  42d429:	mov    DWORD PTR ds:0x7e3c4cd2,ebp
  42d42f:	xchg   BYTE PTR [eax+0xf184e12],ah
  42d435:	jo     0x42d441
  42d437:	or     al,0x48
  42d439:	jl     0x42d477
  42d43b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d43c:	and    al,0xd7
  42d43e:	sbb    al,ch
  42d440:	push   0x1b
  42d442:	jl     0x42d3e1
  42d444:	dec    edi
  42d445:	les    eax,FWORD PTR [ebx]
  42d447:	cmp    al,0x34
  42d449:	or     al,0xc8
  42d44b:	jp     0x42d408
  42d44d:	lds    edi,FWORD PTR [esi+0x4f]
  42d450:	pusha  
  42d451:	lock and al,0x77
  42d454:	fst    st(3)
  42d456:	or     al,0x57
  42d458:	pop    es
  42d459:	test   BYTE PTR [esi+0x30],al
  42d45c:	repz arpl WORD PTR [ebx],sp
  42d45f:	xchg   esp,eax
  42d460:	jecxz  0x42d46e
  42d462:	test   al,0x7b
  42d464:	into   
  42d465:	and    al,0x5d
  42d467:	xchg   esi,eax
  42d468:	sti    
  42d469:	cmp    eax,0x3356508a
  42d46e:	iret   
  42d46f:	repnz push esi
  42d471:	shl    esi,0x2e
  42d474:	je     0x42d450
  42d476:	pop    ebx
  42d477:	test   eax,0xf21aaf8a
  42d47c:	sti    
  42d47d:	cwde   
  42d47e:	mov    ebx,0xfbe9e3d0
  42d483:	pop    ss
  42d484:	imul   ebp,DWORD PTR [edi],0xffffffbc
  42d487:	add    dh,al
  42d489:	in     eax,0x8d
  42d48b:	retf   0x67a3
  42d48e:	imul   esp,eax,0xffffffd8
  42d491:	test   dh,0x42
  42d494:	nop/reserved BYTE PTR [edi+0x64fa887f]
  42d49b:	stc    
  42d49c:	ins    DWORD PTR es:[edi],dx
  42d49d:	rcl    ebp,0x5a
  42d4a0:	mov    BYTE PTR [edi+eiz*1+0x3d1910e0],ch
  42d4a7:	scas   eax,DWORD PTR es:[edi]
  42d4a8:	(bad)  
  42d4a9:	out    0xd0,al
  42d4ab:	ds sub esp,ebp
  42d4ae:	ret    0xf948
  42d4b1:	fnstenv [ebx-0xc]
  42d4b4:	or     ch,0x9f
  42d4b7:	pushf  
  42d4b8:	fdivr  st,st(1)
  42d4ba:	sub    eax,0x80989c43
  42d4bf:	jmp    0x3b435671
  42d4c4:	and    al,0xc0
  42d4c6:	fchs   
  42d4c8:	and    DWORD PTR [edi-0x7d],0xe4a3e54d
  42d4cf:	ja     0x42d4c5
  42d4d1:	sbb    eax,DWORD PTR [ecx+edi*1+0x897cca6]
  42d4d8:	ret    0x8dd8
  42d4db:	push   cs
  42d4dc:	and    dl,dl
  42d4de:	lods   eax,DWORD PTR ds:[esi]
  42d4df:	add    BYTE PTR [edx+edi*4],ch
  42d4e2:	imul   edi,DWORD PTR [esi-0x27e41180],0xdf6ad44f
  42d4ec:	loope  0x42d56a
  42d4ee:	out    dx,eax
  42d4ef:	pop    edx
  42d4f0:	aas    
  42d4f1:	test   al,0xf8
  42d4f3:	sbb    al,0x10
  42d4f5:	fist   WORD PTR [ebx+eax*2+0x1ca930e9]
  42d4fc:	adc    al,0x27
  42d4fe:	push   eax
  42d4ff:	pop    ebx
  42d500:	inc    edx
  42d501:	fdivrp st(0),st
  42d503:	out    0x40,al
  42d505:	add    bh,BYTE PTR [eax+0x4e6b71d]
  42d50b:	xchg   esi,eax
  42d50c:	and    eax,0x5150bbe8
  42d511:	adc    eax,0x9f6d11da
  42d516:	or     al,0xc2
  42d518:	xor    bh,BYTE PTR [eax]
  42d51a:	xchg   ebx,eax
  42d51b:	dec    edx
  42d51c:	hlt    
  42d51d:	or     eax,0xce593087
  42d522:	push   0x2b
  42d524:	out    0x69,eax
  42d526:	inc    eax
  42d527:	mov    WORD PTR [esi+ecx*4+0x28],ss
  42d52b:	mov    al,ds:0xe6ba0d92
  42d530:	cmp    BYTE PTR [eax-0x9],0xb3
  42d534:	test   eax,0x506ac1c5
  42d539:	mov    eax,ds:0x8c203a20
  42d53e:	psubd  mm5,QWORD PTR [ebp-0x79bb24c3]
  42d545:	mov    ds:0x9cb4da7c,eax
  42d54a:	xlat   BYTE PTR ds:[ebx]
  42d54b:	and    eax,0xa7b19568
  42d550:	jmp    0xa88c:0xce205803
  42d557:	les    ecx,FWORD PTR [edx+0x14]
  42d55a:	xor    DWORD PTR [eax],ebx
  42d55c:	das    
  42d55d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d55e:	xor    al,0xa3
  42d560:	sub    DWORD PTR [eax-0x68dd039b],esp
  42d566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d567:	pop    eax
  42d568:	mov    esp,?
  42d56a:	mov    eax,ds:0x6758e2e8
  42d56f:	pop    ebp
  42d570:	jl     0x42d528
  42d572:	sbb    eax,0x6520c5a1
  42d577:	inc    ecx
  42d578:	out    0xa0,eax
  42d57a:	popa   
  42d57b:	mov    edi,0x1e58563a
  42d580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d581:	or     al,ah
  42d583:	mov    esp,0x9f3dff86
  42d588:	xchg   esp,eax
  42d589:	adc    BYTE PTR [ebx],ch
  42d58b:	ins    BYTE PTR es:[edi],dx
  42d58c:	mov    bh,0x0
  42d58e:	mov    al,bl
  42d590:	call   0x90f42fbb
  42d595:	test   al,0xfe
  42d597:	fwait
  42d598:	xor    ah,bh
  42d59a:	std    
  42d59b:	push   ecx
  42d59c:	out    dx,al
  42d59d:	mov    ah,0xaf
  42d59f:	out    dx,al
  42d5a0:	(bad)  ds:0x2f8c5c37
  42d5a6:	fadd   DWORD PTR [esi]
  42d5a8:	test   DWORD PTR [esi],0x6b488035
  42d5ae:	mov    ah,0xfc
  42d5b0:	xchg   DWORD PTR [edx],eax
  42d5b2:	sub    al,ch
  42d5b4:	jae    0x42d5d5
  42d5b6:	shr    esp,1
  42d5b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5b9:	cmp    eax,0x64ab1515
  42d5be:	cli    
  42d5bf:	dec    edi
  42d5c0:	sub    eax,ecx
  42d5c2:	out    dx,al
  42d5c3:	jle    0x42d5a3
  42d5c5:	add    eax,DWORD PTR [edx-0x13b71879]
  42d5cb:	add    al,0xbb
  42d5cd:	push   ebp
  42d5ce:	sub    BYTE PTR [ebp+0x10d962bc],bh
  42d5d4:	leave  
  42d5d5:	adc    al,0x9a
  42d5d7:	(bad)  
  42d5d8:	jo     0x42d62c
  42d5da:	scas   al,BYTE PTR es:[edi]
  42d5db:	xchg   ebp,eax
  42d5dc:	mov    eax,0xce276fd1
  42d5e1:	imul   ebx,DWORD PTR [ebx+ecx*4-0x16c42332],0xc1b959e0
  42d5ec:	rep stos DWORD PTR es:[edi],eax
  42d5ee:	add    ch,bh
  42d5f0:	repnz ins DWORD PTR es:[edi],dx
  42d5f2:	inc    eax
  42d5f3:	fwait
  42d5f4:	cmc    
  42d5f5:	pop    es
  42d5f6:	pop    esp
  42d5f7:	and    al,0xaf
  42d5f9:	sub    DWORD PTR [ebx+0x7af25774],esp
  42d5ff:	scas   eax,DWORD PTR es:[edi]
  42d600:	dec    eax
  42d601:	leave  
  42d602:	sbb    al,0x8c
  42d604:	and    ebp,ebx
  42d606:	popa   
  42d607:	mov    dl,0x16
  42d609:	lock mov cl,0xd8
  42d60c:	inc    esi
  42d60d:	sahf   
  42d60e:	dec    esi
  42d60f:	push   esp
  42d610:	(bad)  
  42d611:	mov    ebp,0x45410b14
  42d616:	ret    0x19d7
  42d619:	ret    0x385b
  42d61c:	cs call 0x9fd9:0x58f3f65b
  42d624:	pop    esp
  42d625:	push   0x33
  42d627:	mov    ss,WORD PTR [ebx+0x1025272b]
  42d62d:	add    al,0x5c
  42d62f:	cmp    al,0x2b
  42d631:	cmp    DWORD PTR [esi-0x6b],eax
  42d634:	cmp    dl,BYTE PTR [edx]
  42d636:	sub    cl,cl
  42d638:	test   dl,dh
  42d63a:	mov    BYTE PTR [edx-0x43],0xb8
  42d63e:	mov    ecx,DWORD PTR [esp+ecx*1-0x29]
  42d642:	out    0x9e,eax
  42d644:	push   es
  42d645:	add    eax,0xba700c4e
  42d64a:	ror    DWORD PTR [edi],0x2e
  42d64d:	into   
  42d64e:	dec    esp
  42d64f:	sub    ebp,DWORD PTR [ebp-0x6c]
  42d652:	ror    esi,0x2d
  42d655:	test   al,0x14
  42d657:	xchg   esp,eax
  42d658:	outs   dx,BYTE PTR ds:[esi]
  42d659:	add    BYTE PTR [ecx+eax*8],bh
  42d65c:	arpl   sp,ax
  42d65e:	pop    esp
  42d65f:	jmp    0x0:0x4402cb
  42d666:	add    BYTE PTR [eax],al
  42d668:	aam    0x1a
  42d66a:	aad    0x50
  42d66c:	push   ecx
  42d66d:	or     DWORD PTR [eax],eax
  42d66f:	add    BYTE PTR [eax],al
  42d671:	add    BYTE PTR [eax],al
  42d673:	add    BYTE PTR [ecx+0x9],dl
  42d676:	add    BYTE PTR [eax],al
  42d678:	cmp    DWORD PTR [eax],eax
  42d67a:	es jl  0x42d67d
  42d67d:	add    dh,BYTE PTR [esi]
  42d67f:	or     BYTE PTR [eax],al
  42d681:	add    ah,al
  42d683:	inc    ebp
  42d684:	add    BYTE PTR [edi+0x762a346d],bl
  42d68a:	mov    ebp,DWORD PTR [eax+eax*4+0x6a41d24]
  42d691:	push   esp
  42d692:	dec    esi
  42d693:	sbb    eax,edx
  42d695:	ror    BYTE PTR [eax+0x9],0x7b
  42d699:	div    ah
  42d69b:	mov    al,ds:0x6c8c98c4
  42d6a0:	scas   eax,DWORD PTR es:[edi]
  42d6a1:	sbb    BYTE PTR [ebx+ebx*4+0xf482e66],dl
  42d6a8:	nop
  42d6a9:	jmp    FWORD PTR [edx]
  42d6ab:	jae    0xce99ac16
  42d6b1:	cmp    cl,dl
  42d6b3:	xchg   esp,eax
  42d6b4:	mov    bh,0x8a
  42d6b6:	cwde   
  42d6b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6b8:	xchg   ecx,eax
  42d6b9:	xchg   BYTE PTR [ecx+ebp*8+0x75],bl
  42d6bd:	in     eax,dx
  42d6be:	add    DWORD PTR [esi-0x7f4f6cff],0x8ccaeb66
  42d6c8:	xor    eax,0xa4ac7717
  42d6cd:	dec    di
  42d6cf:	or     al,0x17
  42d6d1:	int3   
  42d6d2:	sub    eax,DWORD PTR [edx-0x1e]
  42d6d5:	dec    esp
  42d6d6:	in     eax,0xda
  42d6d8:	dec    eax
  42d6d9:	adc    eax,0x95362a35
  42d6de:	jo     0x42d6d0
  42d6e0:	imul   ebp,DWORD PTR [esp+ecx*1+0x3d],0x74
  42d6e5:	sub    bl,BYTE PTR [esi+0x480a1994]
  42d6eb:	shl    cl,cl
  42d6ed:	lods   eax,DWORD PTR ds:[esi]
  42d6ee:	jne    0x42d6c0
  42d6f0:	mov    eax,0x5105e7ea
  42d6f5:	in     eax,dx
  42d6f6:	jecxz  0x42d774
  42d6f8:	popa   
  42d6f9:	fcomp  QWORD PTR [ebx]
  42d6fb:	mov    ebx,0x5693b99a
  42d700:	std    
  42d701:	mov    al,ds:0xd19a3784
  42d706:	loopne 0x42d768
  42d708:	jno    0x42d744
  42d70a:	ja     0x42d6b4
  42d70c:	inc    ebp
  42d70d:	psadbw mm6,QWORD PTR [edi-0x72]
  42d711:	int    0x81
  42d713:	jno    0x42d6e1
  42d715:	jge    0x42d6cb
  42d717:	xor    DWORD PTR [bp+di+0x4b03],esi
  42d71c:	int3   
  42d71d:	lock fs cmp eax,0x48bf055b
  42d724:	mov    dh,0x3d
  42d726:	adc    al,0xe8
  42d728:	scas   eax,DWORD PTR es:[edi]
  42d729:	xchg   esi,eax
  42d72a:	mov    dh,0xa9
  42d72c:	sbb    cl,al
  42d72e:	mov    ebx,0xf6f1d2bc
  42d733:	xchg   ecx,eax
  42d734:	mov    ebx,0xe06d8fbe
  42d739:	pop    ebx
  42d73a:	inc    esi
  42d73b:	mov    dl,0x61
  42d73d:	push   ss
  42d73e:	push   ebp
  42d73f:	push   ecx
  42d740:	into   
  42d741:	add    al,0xe8
  42d743:	fcomp  DWORD PTR [ebx-0x2f]
  42d746:	xor    BYTE PTR [eax-0x37],bl
  42d749:	mov    edi,0x778a3228
  42d74e:	es (bad) 
  42d750:	scas   eax,DWORD PTR es:[edi]
  42d751:	xchg   ebp,eax
  42d752:	add    edx,eax
  42d754:	nop
  42d755:	mov    eax,0xb1e6a289
  42d75a:	cmp    dl,BYTE PTR [edx-0xc]
  42d75d:	iret   
  42d75e:	arpl   si,dx
  42d760:	outs   dx,BYTE PTR ds:[esi]
  42d761:	jo     0x42d711
  42d763:	rcl    BYTE PTR [ecx],1
  42d765:	sbb    BYTE PTR [ecx],ah
  42d767:	sub    eax,0x7998a653
  42d76c:	pop    es
  42d76d:	idiv   DWORD PTR [eax+edx*2]
  42d770:	add    al,0xb9
  42d772:	rcr    ebp,0x4c
  42d775:	xchg   edi,eax
  42d776:	cmp    eax,0xff2a6e60
  42d77b:	test   BYTE PTR [edx-0x1c],ch
  42d77e:	(bad)  
  42d77f:	hlt    
  42d780:	or     BYTE PTR [eax+0x29],cl
  42d783:	pop    edx
  42d784:	aam    0x7
  42d786:	lahf   
  42d787:	xchg   esp,eax
  42d788:	(bad)  [esi+ebp*8]
  42d78b:	imul   eax,DWORD PTR [ebx-0x2b141eea],0xffffff88
  42d792:	push   eax
  42d793:	and    al,0xab
  42d795:	rcr    BYTE PTR [edx+0x588d6829],cl
  42d79b:	je     0x42d818
  42d79d:	and    BYTE PTR [ebx+ecx*2+0x77bc5de1],bh
  42d7a4:	sbb    al,0x86
  42d7a6:	jmp    0x96e27550
  42d7ab:	into   
  42d7ac:	das    
  42d7ad:	inc    eax
  42d7ae:	out    dx,eax
  42d7af:	addr16 pusha 
  42d7b1:	test   eax,0x22a101be
  42d7b6:	fs aam 0x8
  42d7b9:	repz fsubr DWORD PTR [ebx-0x77ca0173]
  42d7c0:	push   0xc75d3592
  42d7c5:	jg     0x42d7a1
  42d7c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7c8:	lods   al,BYTE PTR ds:[esi]
  42d7c9:	pusha  
  42d7ca:	pusha  
  42d7cb:	mov    esp,0xa2a2b93c
  42d7d0:	loope  0x42d826
  42d7d2:	dec    ecx
  42d7d3:	js     0x42d7d7
  42d7d5:	loope  0x42d82a
  42d7d7:	xor    cl,BYTE PTR [edx-0x217f87b1]
  42d7dd:	aaa    
  42d7de:	dec    DWORD PTR [eax-0x637d9b15]
  42d7e4:	pop    es
  42d7e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7e6:	bswap  edx
  42d7e8:	push   edi
  42d7e9:	push   ss
  42d7ea:	imul   edi,DWORD PTR ds:0xbf7548c0,0x1e
  42d7f1:	fcomp  QWORD PTR [esi]
  42d7f3:	sub    DWORD PTR [esi-0x1c],esi
  42d7f6:	mov    dl,0xb3
  42d7f8:	adc    BYTE PTR ds:0x2996d49c,dl
  42d7fe:	mov    WORD PTR [eax],gs
  42d800:	pop    edi
  42d801:	push   ds
  42d802:	test   al,0x3f
  42d804:	sub    ecx,DWORD PTR [esi]
  42d806:	push   ds
  42d807:	mov    al,0xee
  42d809:	fdivr  QWORD PTR [edi]
  42d80b:	inc    esi
  42d80c:	out    dx,eax
  42d80d:	lock xchg esi,eax
  42d80f:	imul   edx,esp,0xffffffbc
  42d812:	and    ebx,DWORD PTR [edx+0x7]
  42d815:	jge    0x42d814
  42d817:	jne    0x42d840
  42d819:	clc    
  42d81a:	ja     0x42d81e
  42d81c:	shr    DWORD PTR [eax+0x69],1
  42d81f:	inc    esi
  42d820:	mov    edx,0x86baa0d5
  42d825:	push   ecx
  42d826:	jae    0x42d7f7
  42d828:	mov    ebx,0xacc4faa1
  42d82d:	cmp    DWORD PTR [ebp-0x6cfbdf0d],esi
  42d833:	shr    al,cl
  42d835:	dec    esi
  42d836:	xchg   edi,esi
  42d838:	pop    edi
  42d839:	pushf  
  42d83a:	call   0xb6a1:0x260c0dae
  42d841:	push   cs
  42d842:	sbb    al,0xe4
  42d844:	add    DWORD PTR [esi],0x30
  42d847:	lods   eax,DWORD PTR ds:[esi]
  42d848:	sub    BYTE PTR [esi-0x7e11dc49],0x72
  42d84f:	fcomp  DWORD PTR [edx-0x1e]
  42d852:	cwde   
  42d853:	xchg   edx,eax
  42d854:	hlt    
  42d855:	inc    ebp
  42d856:	jb     0x42d87c
  42d858:	cld    
  42d859:	adc    BYTE PTR [ebx],ch
  42d85b:	retf   0xaa83
  42d85e:	inc    eax
  42d85f:	jg     0x42d843
  42d861:	and    cl,al
  42d863:	jne    0x42d8ca
  42d865:	sbb    BYTE PTR [edx-0x54],al
  42d868:	mov    edi,0x1cb24410
  42d86d:	sub    BYTE PTR [esi+0x23],dh
  42d870:	(bad)  
  42d871:	cld    
  42d872:	mov    cl,0xec
  42d874:	and    edx,ecx
  42d876:	(bad)  
  42d877:	fld    TBYTE PTR [ebx]
  42d879:	sar    DWORD PTR [esi+eax*4],cl
  42d87c:	adc    BYTE PTR [edi],dl
  42d87e:	addr16 into 
  42d880:	clc    
  42d881:	mov    ch,0x49
  42d883:	xchg   DWORD PTR [eax],ebp
  42d885:	xor    al,0xd0
  42d887:	mov    dl,0x41
  42d889:	mov    edx,0xa29d74a
  42d88e:	pop    eax
  42d88f:	dec    esi
  42d890:	mov    WORD PTR ds:0xdc80c78d,es
  42d896:	xchg   ebx,eax
  42d897:	jl     0x42d8fe
  42d899:	adc    ch,BYTE PTR [ebp+0x6f2121d]
  42d89f:	xor    ah,BYTE PTR [ecx+ebx*1]
  42d8a2:	imul   ebp,ebp,0xbbf3a73e
  42d8a8:	cmp    BYTE PTR [eax+0x57],cl
  42d8ab:	les    ecx,FWORD PTR [eax+ecx*8]
  42d8ae:	xlat   BYTE PTR ds:[ebx]
  42d8af:	add    edx,DWORD PTR [ecx+eax*8+0x6c]
  42d8b3:	mov    edx,0xc3c96525
  42d8b8:	(bad)  
  42d8b9:	fiadd  DWORD PTR [edx-0x79e3f970]
  42d8bf:	shl    bh,1
  42d8c1:	pop    ebp
  42d8c2:	ds stos BYTE PTR es:[edi],al
  42d8c4:	mov    ah,0xeb
  42d8c6:	mov    cl,0xf
  42d8c8:	ret    0x7897
  42d8cb:	push   ebp
  42d8cc:	in     eax,dx
  42d8cd:	pop    esp
  42d8ce:	sbb    BYTE PTR ds:0x27df12d9,al
  42d8d4:	ret    
  42d8d5:	push   edi
  42d8d6:	sub    dh,0xba
  42d8d9:	xchg   ebp,eax
  42d8da:	jl     0x42d90c
  42d8dc:	imul   esp,DWORD PTR [ebx-0x5e],0x69b451a4
  42d8e3:	and    ebx,DWORD PTR [ebx+eiz*8+0x33c84edd]
  42d8ea:	push   0xffffffff
  42d8ec:	rcr    bh,1
  42d8ee:	and    ebx,DWORD PTR [eax-0x80]
  42d8f1:	jo     0x42d927
  42d8f3:	inc    edx
  42d8f4:	fwait
  42d8f5:	xchg   DWORD PTR [ebx-0x8],esi
  42d8f8:	mov    ebp,0x9c3c94fb
  42d8fd:	inc    ebp
  42d8fe:	pop    edx
  42d8ff:	mov    fs,WORD PTR [esi]
  42d901:	push   ecx
  42d902:	ss mov eax,0x7979a62b
  42d908:	cld    
  42d909:	and    ebp,0xc6c4dc7a
  42d90f:	in     al,dx
  42d910:	or     eax,edi
  42d912:	fcom   QWORD PTR [ecx-0xe8ff30]
  42d918:	(bad)  
  42d919:	jp     0x42d8bd
  42d91b:	mov    ebx,DWORD PTR [edx]
  42d91d:	jl     0x42d8c7
  42d91f:	loope  0x42d99d
  42d921:	in     al,dx
  42d922:	cld    
  42d923:	and    ah,BYTE PTR [ecx+eiz*2+0x207dccb1]
  42d92a:	cmp    ch,BYTE PTR [ecx]
  42d92c:	pop    esp
  42d92d:	sbb    BYTE PTR [ebp+0x69],ah
  42d930:	lock out 0xf4,al
  42d933:	jp     0x42d989
  42d935:	mov    esp,0x14149a40
  42d93a:	adc    eax,DWORD PTR [esi]
  42d93c:	fsub   DWORD PTR [edi]
  42d93e:	lds    esi,FWORD PTR [edx]
  42d940:	pop    esp
  42d941:	jns    0x42d8ff
  42d943:	sti    
  42d944:	dec    ebp
  42d945:	bound  ecx,QWORD PTR [eax-0x6f]
  42d948:	dec    esi
  42d949:	mov    esi,0xd6e5e057
  42d94e:	xor    DWORD PTR [esi-0x7],eax
  42d951:	jmp    0x42d956
  42d953:	mov    BYTE PTR [esp+edx*8],0x5
  42d957:	fdiv   st,st(3)
  42d959:	mov    dl,0xbf
  42d95b:	and    ecx,DWORD PTR [ecx+0x28]
  42d95e:	ds ret 
  42d960:	jno    0x42d9c2
  42d962:	adc    ebp,DWORD PTR [edx-0x5b3357f]
  42d968:	push   esi
  42d969:	mov    WORD PTR [esi+0x3877fdb6],?
  42d96f:	hlt    
  42d970:	xlat   BYTE PTR ds:[ebx]
  42d971:	cli    
  42d972:	jg     0x42d9b5
  42d974:	xchg   esi,eax
  42d975:	cmc    
  42d976:	xchg   edi,esi
  42d978:	sbb    BYTE PTR [ecx-0x43],ch
  42d97b:	adc    eax,DWORD PTR [edi+edx*2+0x3cb1e21f]
  42d982:	(bad)  
  42d983:	mov    esp,0x66b9267f
  42d988:	seto   BYTE PTR [eax-0x17]
  42d98c:	add    al,0xa8
  42d98e:	sti    
  42d98f:	mov    ds:0x84490bf3,eax
  42d994:	pusha  
  42d995:	mov    ch,0x88
  42d997:	scas   al,BYTE PTR es:[edi]
  42d998:	and    ebx,DWORD PTR [ebp+ebp*4+0x65]
  42d99c:	sub    al,0xb6
  42d99e:	push   0xffffffac
  42d9a0:	in     al,0xff
  42d9a2:	lods   eax,DWORD PTR ds:[esi]
  42d9a3:	in     eax,0xe1
  42d9a5:	push   eax
  42d9a6:	mov    eax,ds:0xc2dc7ce9
  42d9ab:	inc    eax
  42d9ac:	xor    DWORD PTR [ecx-0x49e4b38c],0xb074f1a5
  42d9b6:	int3   
  42d9b7:	cwde   
  42d9b8:	out    0x50,al
  42d9ba:	test   DWORD PTR [ecx+0x4b],ebx
  42d9bd:	popf   
  42d9be:	sbb    DWORD PTR [eax+eax*2-0x159dd3a0],edx
  42d9c5:	enter  0xe574,0x1f
  42d9c9:	fs (bad) 
  42d9cb:	hlt    
  42d9cc:	xor    eax,0xd4e73806
  42d9d1:	sub    eax,0x4e69388
  42d9d6:	ret    
  42d9d7:	xchg   ecx,eax
  42d9d8:	daa    
  42d9d9:	test   DWORD PTR [eax-0x54],ebp
  42d9dc:	cmp    dl,BYTE PTR [ebx]
  42d9de:	sbb    DWORD PTR [ebx+edx*1-0x2f7fb044],edi
  42d9e5:	xchg   esp,eax
  42d9e6:	test   BYTE PTR [eax+0x7b181682],ch
  42d9ec:	mov    dh,0x78
  42d9ee:	aam    0x61
  42d9f0:	test   DWORD PTR [eax],esp
  42d9f2:	dec    ebp
  42d9f3:	push   esp
  42d9f4:	ja     0x42d9b9
  42d9f6:	pushf  
  42d9f7:	or     bh,bh
  42d9f9:	push   0x9e4ad703
  42d9fe:	test   al,0x45
  42da01:	jb     0x42d9d1
  42da03:	stos   BYTE PTR es:[edi],al
  42da04:	test   DWORD PTR [ebp*2+0x1d06e4a3],esp
  42da0b:	adc    BYTE PTR [ecx+0x4d431d53],0x8c
  42da12:	mov    esi,0xf89bd88a
  42da17:	dec    ebp
  42da18:	and    BYTE PTR [edx],cl
  42da1a:	mov    al,0x47
  42da1c:	adc    BYTE PTR ds:0xc6abdb6d,ch
  42da22:	mov    cl,0xd4
  42da24:	lahf   
  42da25:	or     BYTE PTR [esi-0x43],ah
  42da28:	jb     0x42da2b
  42da2a:	jbe    0x42d9eb
  42da2c:	clc    
  42da2d:	inc    edx
  42da2e:	loopne 0x42da3e
  42da30:	jmp    0xe41c:0xaf622362
  42da37:	push   es
  42da38:	scas   eax,DWORD PTR es:[edi]
  42da39:	or     al,0xf9
  42da3b:	adc    ah,BYTE PTR [esi-0x66f3bed]
  42da41:	(bad)  
  42da42:	sar    BYTE PTR [ebx+eiz*1-0x6b172c11],1
  42da49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da4a:	ja     0x42da28
  42da4c:	xor    dh,BYTE PTR [ebx-0x78]
  42da4f:	std    
  42da50:	or     al,0x7
  42da52:	pop    ecx
  42da53:	or     eax,0xdf613c4c
  42da58:	gs xor cl,dl
  42da5b:	out    0x0,al
  42da5d:	xchg   edi,eax
  42da5e:	mov    bl,0x1
  42da60:	pushf  
  42da61:	adc    al,bl
  42da63:	hlt    
  42da64:	jo     0x42da9e
  42da66:	retf   
  42da67:	aas    
  42da68:	sub    al,0x35
  42da6a:	addr16 cld 
  42da6c:	fsubrp st(5),st
  42da6e:	fmul   QWORD PTR [ecx-0x1c43ea9d]
  42da74:	and    BYTE PTR [eax+0xe],cl
  42da77:	xchg   ebx,eax
  42da78:	fidiv  WORD PTR [edi]
  42da7a:	fstp   QWORD PTR gs:[ebx]
  42da7d:	inc    esp
  42da7e:	cmp    DWORD PTR [ebx],ebp
  42da80:	mov    al,0x7a
  42da82:	sub    edi,ecx
  42da84:	cmp    DWORD PTR [ebp+0x32682068],edi
  42da8a:	push   0x6f
  42da8c:	leave  
  42da8d:	sar    DWORD PTR [edi+0x10],cl
  42da90:	dec    ebx
  42da91:	pop    edx
  42da92:	loope  0x42da5a
  42da94:	pop    esp
  42da95:	retf   0x2857
  42da98:	xor    al,0x4d
  42da9a:	pop    es
  42da9b:	into   
  42da9c:	xor    al,BYTE PTR [ebx]
  42da9e:	and    al,0x6f
  42daa0:	popa   
  42daa1:	pop    eax
  42daa2:	std    
  42daa3:	sti    
  42daa4:	and    BYTE PTR [edx+ecx*1],ch
  42daa7:	mov    dh,0x87
  42daa9:	pop    ebx
  42daaa:	jl     0x42da2d
  42daac:	das    
  42daad:	fistp  WORD PTR [ebx-0x2bebeeb8]
  42dab3:	mov    al,ds:0x32ff1eed
  42dab8:	xchg   ebp,eax
  42dab9:	int3   
  42daba:	scas   al,BYTE PTR es:[edi]
  42dabb:	pop    eax
  42dabc:	dec    eax
  42dabd:	fiadd  WORD PTR [eax-0x4d]
  42dac0:	pop    esi
  42dac1:	xchg   edi,eax
  42dac2:	scas   eax,DWORD PTR es:[edi]
  42dac3:	dec    ebx
  42dac4:	jl     0x42db32
  42dac6:	adc    dh,BYTE PTR ds:0x70f728a3
  42dacc:	addr16 mov al,0x90
  42dacf:	fwait
  42dad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dad1:	js     0x42daf0
  42dad3:	mov    cl,0x82
  42dad5:	push   esp
  42dad6:	fidiv  DWORD PTR [edx+ecx*2-0x459f256c]
  42dadd:	mov    ah,0x97
  42dadf:	aas    
  42dae0:	pop    esp
  42dae1:	xchg   BYTE PTR [eax-0x51bfb728],ch
  42dae7:	(bad)  
  42dae8:	pop    ds
  42dae9:	or     bh,0xa5
  42daec:	fs mov bl,0x7e
  42daef:	cmp    BYTE PTR [esi-0x34675b89],bh
  42daf5:	enter  0x37b6,0x13
  42daf9:	aam    0xa
  42dafb:	enter  0x25e2,0x0
  42daff:	xor    ebp,0xec9e102a
  42db05:	mov    ebp,DWORD PTR [esp+esi*4-0xc]
  42db09:	aaa    
  42db0a:	jmp    0x42db5f
  42db0c:	call   DWORD PTR [edi+edi*1+0x47414e93]
  42db13:	std    
  42db14:	adc    BYTE PTR [ebp-0x48],ah
  42db17:	(bad)  
  42db19:	shl    BYTE PTR [edx-0x7d],1
  42db1c:	fdiv   QWORD PTR [ecx]
  42db1e:	xchg   ecx,eax
  42db1f:	fdivr  QWORD PTR [esi-0x513cfef4]
  42db25:	mov    ecx,0x2000ac8d
  42db2a:	push   ds
  42db2b:	sub    BYTE PTR [ebx],ah
  42db2d:	or     al,0xb5
  42db2f:	xchg   BYTE PTR [eax+ebp*4],al
  42db32:	stos   BYTE PTR es:[edi],al
  42db33:	jne    0x42db5d
  42db35:	aaa    
  42db36:	inc    ebp
  42db37:	lea    ebp,[ecx-0x21cd339f]
  42db3d:	pop    edi
  42db3e:	dec    edx
  42db3f:	das    
  42db40:	inc    ecx
  42db41:	push   0x8550f003
  42db46:	mov    ebp,0x5d2a2b95
  42db4b:	fst    DWORD PTR [esi+edx*8]
  42db4e:	xor    eax,0x9feecff3
  42db53:	stc    
  42db54:	add    al,0x38
  42db56:	lods   al,BYTE PTR ds:[esi]
  42db57:	or     al,0x3d
  42db59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db5a:	cld    
  42db5b:	cmc    
  42db5c:	cmp    BYTE PTR ds:0x4a4002e0,dh
  42db62:	cdq    
  42db63:	ss push 0x21049676
  42db69:	xchg   esp,eax
  42db6a:	or     bl,BYTE PTR [esi]
  42db6c:	jno    0x42db0a
  42db6e:	outs   dx,DWORD PTR ds:[esi]
  42db6f:	out    dx,eax
  42db70:	sub    BYTE PTR [esi],dl
  42db72:	xor    eax,0x82419294
  42db77:	loop   0x42dbc2
  42db79:	dec    esp
  42db7a:	dec    edi
  42db7b:	retf   
  42db7c:	inc    ebx
  42db7d:	std    
  42db7e:	sbb    al,0xaa
  42db80:	ja     0x42dbee
  42db82:	jo     0x42dbec
  42db84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db85:	test   al,0x3a
  42db87:	pop    edi
  42db88:	push   cs
  42db89:	fidiv  DWORD PTR [esi+0x18]
  42db8c:	pop    edx
  42db8d:	loopne 0x42db22
  42db8f:	sahf   
  42db90:	outs   dx,BYTE PTR ds:[esi]
  42db91:	xchg   ebx,eax
  42db92:	into   
  42db93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db94:	cmp    al,0xfc
  42db96:	pop    ecx
  42db97:	push   es
  42db98:	mov    edi,DWORD PTR [esi+0x1a]
  42db9b:	or     DWORD PTR [ecx+0x60],ecx
  42db9e:	mov    esp,0x75319ad
  42dba3:	xor    al,0x4d
  42dba5:	retf   
  42dba6:	test   ch,ch
  42dba8:	ret    
  42dba9:	fnstcw WORD PTR [ecx+0x4056b1e8]
  42dbaf:	sub    al,0x76
  42dbb1:	ins    BYTE PTR es:[edi],dx
  42dbb2:	xor    eax,0x62281f37
  42dbb7:	xlat   BYTE PTR ds:[ebx]
  42dbb8:	push   eax
  42dbb9:	or     eax,0x4f9808de
  42dbbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbc0:	xchg   edi,eax
  42dbc1:	je     0x42dbb0
  42dbc3:	leave  
  42dbc4:	cmc    
  42dbc5:	mov    esp,0xd54b76d6
  42dbca:	cwde   
  42dbcb:	daa    
  42dbcc:	ss push ds
  42dbce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbcf:	or     ecx,DWORD PTR [edx+0x60]
  42dbd2:	lea    edi,[ebp+esi*1-0x287d5f87]
  42dbd9:	stc    
  42dbda:	xor    DWORD PTR [ebx+0x64],ebx
  42dbdd:	test   eax,0x1fe68b8
  42dbe2:	mov    ch,0x2a
  42dbe4:	mov    BYTE PTR [bp+si],dh
  42dbe7:	mov    al,ds:0xe8f9cc14
  42dbec:	mov    ecx,0x7374aced
  42dbf1:	pusha  
  42dbf2:	nop
  42dbf3:	jo     0x42dbe4
  42dbf5:	add    edi,ebp
  42dbf7:	rcr    ch,1
  42dbf9:	dec    esi
  42dbfa:	mov    dh,dh
  42dbfc:	int3   
  42dbfd:	cmp    BYTE PTR [ebp-0xa],0x78
  42dc01:	aaa    
  42dc02:	adc    edi,DWORD PTR [esi+eiz*8]
  42dc05:	ins    DWORD PTR es:[edi],dx
  42dc06:	dec    esi
  42dc07:	cdq    
  42dc08:	or     al,0x9c
  42dc0a:	(bad)  
  42dc0b:	loop   0x42dc51
  42dc0d:	jno    0x42dc39
  42dc0f:	adc    esp,DWORD PTR [ecx-0x14373f2d]
  42dc15:	pusha  
  42dc16:	cmc    
  42dc17:	in     al,0x17
  42dc19:	adc    al,0xf1
  42dc1b:	in     al,0x7d
  42dc1d:	sahf   
  42dc1e:	or     BYTE PTR [ecx-0x39e5b2b7],0x8
  42dc25:	hlt    
  42dc26:	xor    eax,0x93252955
  42dc2b:	or     ah,BYTE PTR [edx]
  42dc2d:	mov    al,0xb6
  42dc2f:	shl    BYTE PTR [edi+0x71],1
  42dc32:	daa    
  42dc33:	mov    bh,0x98
  42dc35:	int    0xd4
  42dc37:	fucomp st(2)
  42dc39:	stos   DWORD PTR es:[edi],eax
  42dc3a:	xchg   DWORD PTR [ecx+0x6d],ebp
  42dc3d:	and    dh,BYTE PTR [edx]
  42dc3f:	clc    
  42dc40:	push   edx
  42dc41:	loope  0x42dcc0
  42dc43:	sar    DWORD PTR [ecx+0x1c510a19],0x16
  42dc4a:	mov    ds:0xeaf24af7,al
  42dc4f:	hlt    
  42dc50:	push   eax
  42dc51:	inc    eax
  42dc52:	loope  0x42dbdc
  42dc54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc55:	fdivr  DWORD PTR [edx]
  42dc57:	arpl   WORD PTR [eax*2-0x47c6de18],si
  42dc5e:	rol    DWORD PTR [edx-0x72],0x9f
  42dc62:	(bad)  
  42dc64:	out    0x90,al
  42dc66:	jns    0x42dc0f
  42dc68:	das    
  42dc69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc6a:	sbb    BYTE PTR [edi+0x30],ch
  42dc6d:	imul   edx,DWORD PTR [esi+0x75],0x79
  42dc71:	test   BYTE PTR [edx+0x2b],ah
  42dc74:	addr16 push esp
  42dc76:	jmp    DWORD PTR [edi]
  42dc78:	dec    edi
  42dc79:	xchg   ebp,eax
  42dc7a:	mov    ecx,0xfc7ef714
  42dc7f:	push   ebx
  42dc80:	xor    al,0x8e
  42dc82:	push   es
  42dc83:	cmp    esi,DWORD PTR [edx+0x66]
  42dc86:	adc    eax,0xc68a0220
  42dc8b:	dec    edx
  42dc8c:	inc    ecx
  42dc8d:	fs (bad) 
  42dc8f:	test   DWORD PTR [esp+edi*8+0x44],0x70f48b79
  42dc97:	pop    eax
  42dc98:	sub    ebp,DWORD PTR [eax-0x39]
  42dc9b:	sahf   
  42dc9c:	inc    ecx
  42dc9d:	lods   al,BYTE PTR ds:[esi]
  42dc9e:	mov    ebp,0x8c781b69
  42dca3:	mov    WORD PTR ds:0x9a7ce877,ds
  42dca9:	aam    0x47
  42dcab:	xor    al,0x89
  42dcad:	lahf   
  42dcae:	xor    eax,0x2f87b19e
  42dcb3:	ss pop eax
  42dcb5:	push   ds
  42dcb6:	rol    BYTE PTR [edi+ebp*4+0x73],cl
  42dcba:	test   eax,0xa47cabd7
  42dcbf:	nop
  42dcc0:	sub    BYTE PTR [eax+eiz*4-0x5f7beb92],al
  42dcc7:	mov    bl,0x67
  42dcc9:	loop   0x42dcc2
  42dccb:	mov    ebp,0x4809993f
  42dcd0:	fisub  WORD PTR [ebp+0x14]
  42dcd3:	and    edi,DWORD PTR [ebx]
  42dcd5:	jl     0x42dd42
  42dcd7:	imul   DWORD PTR [eax+esi*8-0x1f]
  42dcdb:	idiv   cl
  42dcdd:	call   0x10ab:0x90a9818d
  42dce4:	add    BYTE PTR [esi+0x3],al
  42dce7:	xchg   ebx,eax
  42dce8:	aad    0x51
  42dcea:	mov    ah,0xc5
  42dcec:	dec    ebp
  42dced:	repnz imul ebx,DWORD PTR [edi-0x27851c63],0x27034a7a
  42dcf8:	mov    ecx,0x806b7e47
  42dcfd:	and    eax,0x3066b8ad
  42dd02:	(bad)  
  42dd03:	fsub   st(2),st
  42dd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd06:	mov    eax,0xc0b4a592
  42dd0b:	in     eax,0x4e
  42dd0d:	jecxz  0x42dcd7
  42dd0f:	push   cs
  42dd10:	xchg   edi,eax
  42dd11:	mov    dl,0x5a
  42dd13:	push   0x9
  42dd15:	xchg   esi,eax
  42dd16:	dec    edi
  42dd17:	in     al,dx
  42dd18:	and    al,0x16
  42dd1a:	jb     0x42dd57
  42dd1c:	mov    BYTE PTR [esi],al
  42dd1e:	(bad)  
  42dd1f:	mov    ebx,0xe7868a10
  42dd24:	cmc    
  42dd25:	adc    BYTE PTR [edi+eiz*2+0x2c],ch
  42dd29:	mov    eax,0x6422818c
  42dd2e:	xor    ah,BYTE PTR [edi]
  42dd30:	stos   BYTE PTR es:[edi],al
  42dd31:	es fsubr st(0),st
  42dd34:	push   eax
  42dd35:	neg    edx
  42dd37:	and    BYTE PTR [eax],dh
  42dd39:	jecxz  0x42dda5
  42dd3b:	add    BYTE PTR [edx-0x3f],dh
  42dd3e:	fndisi(8087 only) 
  42dd40:	push   cs
  42dd41:	js     0x42ddc2
  42dd43:	jecxz  0x42dd69
  42dd45:	aad    0x16
  42dd47:	or     bh,BYTE PTR [esi]
  42dd49:	imul   ecx,ebx,0xf3cc4485
  42dd4f:	push   es
  42dd50:	and    ecx,DWORD PTR [esi]
  42dd52:	outs   dx,DWORD PTR ds:[esi]
  42dd53:	into   
  42dd54:	lahf   
  42dd55:	pusha  
  42dd56:	lock inc edi
  42dd58:	dec    edi
  42dd59:	cmp    eax,0x72a1a063
  42dd5e:	push   0x14
  42dd60:	std    
  42dd61:	scas   al,BYTE PTR es:[edi]
  42dd62:	jmp    0x3812:0x7f1645dc
  42dd69:	mov    edi,0x4a889991
  42dd6e:	ins    BYTE PTR es:[edi],dx
  42dd6f:	sub    eax,0x67c95ce8
  42dd74:	mov    eax,ds:0x12625480
  42dd79:	outs   dx,BYTE PTR ds:[esi]
  42dd7a:	add    al,0xcc
  42dd7c:	cmc    
  42dd7d:	and    DWORD PTR [ebx-0x32],esi
  42dd80:	pop    esp
  42dd81:	jae    0x42dda0
  42dd83:	sub    bl,dl
  42dd85:	ds mov esp,0x29086339
  42dd8b:	sub    BYTE PTR [ecx+ebx*2-0x10],cl
  42dd8f:	push   ecx
  42dd90:	pop    esi
  42dd91:	adc    DWORD PTR [ebp+0x1f],eax
  42dd94:	mov    esi,0x838b4370
  42dd99:	cmp    edi,esi
  42dd9b:	or     eax,0x6818ea9c
  42dda0:	sbb    edi,DWORD PTR [ebp+0x18]
  42dda3:	mov    ah,0xf5
  42dda5:	push   edx
  42dda6:	imul   edi,DWORD PTR [esi+ebp*1],0xa053726
  42ddad:	dec    eax
  42ddae:	or     DWORD PTR [esi-0x37672ba0],esi
  42ddb4:	cdq    
  42ddb5:	xor    bl,BYTE PTR [eax-0x5d7b9ab9]
  42ddbb:	lea    ebx,[esi-0x124c06da]
  42ddc1:	in     eax,0xa8
  42ddc3:	dec    edi
  42ddc4:	mov    edx,0x10c515cb
  42ddc9:	call   0x7c5d:0x3c725054
  42ddd0:	push   es
  42ddd1:	push   esp
  42ddd2:	push   0x9d7774a9
  42ddd7:	and    edi,DWORD PTR [ebp*2-0x67c30904]
  42ddde:	jae    0x42dd94
  42dde0:	or     dl,BYTE PTR [edi+0x78]
  42dde3:	jmp    0x42ddb8
  42dde5:	mov    bh,BYTE PTR [esp+ecx*1+0x1010670d]
  42ddec:	xor    eax,0xd3e0e4ea
  42ddf1:	dec    ebp
  42ddf2:	popf   
  42ddf3:	inc    edx
  42ddf4:	(bad)  
  42ddf5:	in     eax,dx
  42ddf6:	dec    ebp
  42ddf7:	push   ecx
  42ddf8:	mov    BYTE PTR [ebp+0x26a18151],bh
  42ddfe:	neg    DWORD PTR [ebx+0x5a]
  42de01:	lods   al,BYTE PTR ds:[esi]
  42de02:	mov    edx,0xcc52dd5c
  42de07:	in     al,dx
  42de08:	dec    ebx
  42de09:	push   ss
  42de0a:	shl    BYTE PTR [ebx+0x3cc12f6e],1
  42de10:	push   ebp
  42de11:	dec    esp
  42de12:	xchg   ecx,eax
  42de13:	hlt    
  42de14:	repz shl DWORD PTR [eax+ebx*2-0x5c],cl
  42de19:	mov    ecx,0xfe9c623c
  42de1e:	jge    0x42ddf2
  42de20:	inc    DWORD PTR [edx-0x3f074314]
  42de26:	mov    bl,0x3f
  42de28:	add    eax,ebx
  42de2a:	jae    0x42ddce
  42de2c:	aas    
  42de2d:	adc    eax,0x1df53ce4
  42de32:	jae    0x42dead
  42de34:	xchg   esp,eax
  42de35:	jecxz  0x42de23
  42de37:	or     dh,bh
  42de39:	jnp    0x42de54
  42de3b:	stc    
  42de3c:	(bad)  
  42de3d:	rol    DWORD PTR [ebx-0x4a],0x2c
  42de41:	adc    bl,0xd7
  42de44:	cmp    DWORD PTR [edi+0x79],ebp
  42de47:	pop    es
  42de48:	sub    edx,esp
  42de4a:	jl     0x42deb6
  42de4c:	push   ebp
  42de4d:	and    al,0xd1
  42de4f:	fucom  st(6)
  42de51:	out    0xf8,al
  42de53:	dec    ecx
  42de54:	dec    esp
  42de55:	sti    
  42de56:	push   0x738c8a44
  42de5b:	sbb    al,0x12
  42de5d:	add    DWORD PTR [ebp+0x63ade24c],eax
  42de63:	in     eax,0x40
  42de65:	sub    al,0x6a
  42de67:	and    eax,0x8423818d
  42de6c:	iret   
  42de6d:	call   0x5d64f93f
  42de72:	dec    esi
  42de73:	sar    BYTE PTR [eax],1
  42de75:	and    al,0xc
  42de77:	xchg   esp,eax
  42de78:	cmp    ch,BYTE PTR [esi+0x31ab1690]
  42de7e:	inc    ebx
  42de7f:	xor    bl,ah
  42de81:	inc    ebx
  42de82:	not    BYTE PTR ds:0xb4461e0c
  42de88:	push   esp
  42de89:	sub    DWORD PTR [edx-0x4052b9bc],0xe378e75a
  42de93:	push   0x9ea9efe4
  42de98:	sbb    BYTE PTR fs:[eax],ah
  42de9b:	scas   eax,DWORD PTR es:[edi]
  42de9c:	rol    BYTE PTR [edi],1
  42de9e:	ins    DWORD PTR es:[edi],dx
  42de9f:	pusha  
  42dea0:	call   0x9387b601
  42dea5:	stos   DWORD PTR es:[edi],eax
  42dea6:	ss jg  0x42df03
  42dea9:	mov    bl,0xf4
  42deab:	or     DWORD PTR [eax-0x1c],ebp
  42deae:	cld    
  42deaf:	enterw 0x96f0,0x8c
  42deb4:	stos   BYTE PTR es:[edi],al
  42deb5:	mov    WORD PTR [ebx-0x45],es
  42deb8:	in     al,dx
  42deb9:	rcr    DWORD PTR [eax+edx*2+0x5134afbf],0x6e
  42dec1:	addr16 dec ecx
  42dec3:	jp     0x42df36
  42dec5:	push   esp
  42dec6:	(bad)  
  42dec7:	pop    eax
  42dec8:	pop    ss
  42dec9:	sbb    ecx,DWORD PTR [ebx-0x2e]
  42decc:	fiadd  DWORD PTR [eax]
  42dece:	fprem1 
  42ded0:	jl     0x42df4c
  42ded2:	aam    0xae
  42ded4:	cli    
  42ded5:	jp     0x42df3f
  42ded7:	xchg   ebx,eax
  42ded8:	(bad)  
  42ded9:	mov    al,ds:0x25d3e40e
  42dede:	aaa    
  42dedf:	rcr    DWORD PTR [edx-0x69],cl
  42dee2:	(bad)  
  42dee3:	shr    BYTE PTR [esi+eax*8],cl
  42dee6:	aam    0x6b
  42dee8:	in     al,0x6d
  42deea:	fsubr  DWORD PTR [ebp+ebx*8-0x31]
  42deee:	mov    BYTE PTR [ecx-0x61],cl
  42def1:	test   DWORD PTR [edx-0x33],esi
  42def4:	nop
  42def5:	rcl    BYTE PTR [esi+0x58],1
  42def8:	(bad)  
  42def9:	mov    bl,0xe4
  42defb:	jns    0x42de7e
  42defd:	mov    ah,0x5d
  42deff:	sbb    BYTE PTR [edx],dl
  42df01:	nop
  42df02:	dec    edx
  42df03:	mov    WORD PTR [ecx+0x484fd85b],ds
  42df09:	repnz mov ebp,0xadbb962f
  42df0f:	cld    
  42df10:	push   ss
  42df11:	xor    BYTE PTR [esi+0x4d3d88a1],cl
  42df17:	out    0xa4,eax
  42df19:	sbb    al,0x18
  42df1b:	jmp    0x42def6
  42df1d:	add    eax,DWORD PTR [edx-0x50]
  42df20:	js     0x42deea
  42df22:	sbb    bl,cl
  42df24:	push   0xffffffe1
  42df26:	ret    0x77a8
  42df29:	fsub   st(4),st
  42df2b:	push   es
  42df2c:	fdiv   DWORD PTR [ebp-0x432f30ae]
  42df32:	outs   dx,DWORD PTR ds:[esi]
  42df33:	adc    BYTE PTR [ecx-0x7d7a616b],bh
  42df39:	cmp    eax,0x1ab8f190
  42df3e:	sbb    ebx,eax
  42df40:	(bad)
  42df43:	mov    dh,0x6a
  42df45:	fsub   QWORD PTR [ebx]
  42df47:	(bad)  
  42df48:	xor    ebp,DWORD PTR [esi-0x61fb8c4d]
  42df4e:	add    BYTE PTR [eax],cl
  42df50:	cli    
  42df51:	push   esp
  42df52:	rcl    bh,1
  42df54:	cld    
  42df55:	push   ebp
  42df56:	retf   0x3724
  42df59:	xchg   edx,eax
  42df5a:	(bad)  
  42df5b:	ss popa 
  42df5d:	xchg   BYTE PTR [eax+eiz*8-0x3f65ab8],bh
  42df64:	stos   BYTE PTR es:[edi],al
  42df65:	mov    edi,0xf0faee08
  42df6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42df6b:	pop    ds
  42df6c:	je     0x42df33
  42df6e:	cld    
  42df6f:	xor    DWORD PTR [edi+0x5e891495],edx
  42df75:	cli    
  42df76:	mov    esi,0x5708cfd7
  42df7b:	cmp    ah,ah
  42df7d:	pop    DWORD PTR [ebx-0x18]
  42df80:	push   ecx
  42df81:	pusha  
  42df82:	aas    
  42df83:	xchg   esi,eax
  42df84:	pop    esp
  42df85:	scas   al,BYTE PTR es:[edi]
  42df86:	ja     0x42dffb
  42df88:	add    DWORD PTR [eax+0x460f6bd],edx
  42df8e:	add    DWORD PTR [esp+ecx*2],ebp
  42df91:	mov    esi,0xee6e0b89
  42df96:	sub    BYTE PTR [ecx+0x790dba55],dl
  42df9c:	into   
  42df9d:	ins    BYTE PTR es:[edi],dx
  42df9e:	or     al,0x4c
  42dfa0:	dec    edx
  42dfa1:	xlat   BYTE PTR ds:[ebx]
  42dfa2:	add    eax,0x51a01c3
  42dfa7:	icebp  
  42dfa8:	jo     0x42dfd1
  42dfaa:	aad    0x7b
  42dfac:	es add eax,0x943538f4
  42dfb2:	or     ch,bh
  42dfb4:	jmp    0xbd4b20ed
  42dfb9:	clc    
  42dfba:	cmp    al,0x7
  42dfbc:	ret    0xd0c0
  42dfbf:	jmp    0x0:0x3f5228
  42dfc6:	add    BYTE PTR [eax],al
  42dfc8:	rcr    DWORD PTR [ebx],1
  42dfca:	int3   
  42dfcb:	push   ebx
  42dfcc:	push   ecx
  42dfcd:	or     DWORD PTR [eax],eax
  42dfcf:	add    BYTE PTR [eax],al
  42dfd1:	add    BYTE PTR [eax],al
  42dfd3:	add    BYTE PTR [ecx+0x9],dl
  42dfd6:	add    BYTE PTR [eax],al
  42dfd8:	cmp    al,BYTE PTR [eax]
  42dfda:	es jl  0x42dfdd
  42dfdd:	add    dh,BYTE PTR [esi]
  42dfdf:	or     BYTE PTR [eax],al
  42dfe1:	add    ah,al
  42dfe3:	inc    ebp
  42dfe4:	add    BYTE PTR [ebx],bh
  42dfe6:	rcr    al,1
  42dfe8:	pop    ebx
  42dfe9:	jle    0x42e044
  42dfeb:	push   ss
  42dfec:	mul    DWORD PTR [edi+eiz*2]
  42dfef:	lods   ax,WORD PTR ds:[esi]
  42dff1:	pop    es
  42dff2:	lods   eax,DWORD PTR ds:[esi]
  42dff3:	jnp    0x42dfbe
  42dff5:	leave  
  42dff6:	dec    eax
  42dff7:	or     eax,0x9404525a
  42dffc:	hlt    
  42dffd:	push   edi
  42dffe:	xor    al,0x6c
  42e000:	xchg   esp,eax
  42e001:	clc    
  42e002:	pusha  
  42e003:	int    0x12
  42e005:	mov    BYTE PTR [eax],cl
  42e007:	sub    dl,BYTE PTR [eax+0x2556ff9f]
  42e00d:	inc    ecx
  42e00e:	cdq    
  42e00f:	inc    edx
  42e010:	int3   
  42e011:	cmp    BYTE PTR [edi+0x4d],dl
  42e014:	cmp    al,0x56
  42e016:	pop    edx
  42e017:	push   ebp
  42e018:	jp     0x42dfca
  42e01a:	pop    esp
  42e01b:	mov    esp,0x8442a4dc
  42e020:	cmc    
  42e021:	js     0x42dfdd
  42e023:	sub    ah,0x77
  42e026:	xchg   edi,eax
  42e027:	xchg   ecx,eax
  42e028:	outs   dx,DWORD PTR ds:[esi]
  42e029:	(bad)  
  42e02a:	and    eax,0x5884a4ed
  42e02f:	in     al,dx
  42e030:	sbb    edx,DWORD PTR [edx+0x4cc873d4]
  42e036:	or     al,0xc3
  42e038:	fdivr  st(3),st
  42e03a:	int    0x5e
  42e03c:	imul   si,WORD PTR [eax-0x59],0x31d1
  42e042:	cmc    
  42e043:	xor    cl,BYTE PTR [ebx]
  42e045:	cmp    al,0x9e
  42e047:	xchg   esp,eax
  42e048:	xor    DWORD PTR [edx],ebx
  42e04a:	and    bh,BYTE PTR [edi-0x21855887]
  42e050:	mov    eax,0x19a64263
  42e055:	jle    0x42e0ac
  42e057:	xchg   ebp,eax
  42e058:	out    0xdc,al
  42e05a:	retf   
  42e05b:	inc    edi
  42e05c:	sti    
  42e05d:	pop    ecx
  42e05e:	sahf   
  42e05f:	jns    0x42e010
  42e061:	popa   
  42e062:	test   bh,cl
  42e064:	jg     0x42e043
  42e066:	test   al,0xee
  42e068:	js     0x42e06b
  42e06a:	cmp    ebp,DWORD PTR [eax-0x3b17e372]
  42e070:	jae    0x42e039
  42e072:	mov    ch,0xa8
  42e074:	int3   
  42e075:	inc    esp
  42e076:	loope  0x42e072
  42e078:	std    
  42e079:	xor    eax,0xf0741f16
  42e07e:	and    BYTE PTR [edx-0x283e229d],al
  42e084:	popa   
  42e085:	ins    DWORD PTR es:[edi],dx
  42e086:	adc    al,0x4c
  42e088:	and    ebx,edx
  42e08a:	dec    eax
  42e08b:	mov    edi,0xbc10856c
  42e090:	mov    edi,DWORD PTR [edx-0x72]
  42e093:	aas    
  42e094:	mov    ecx,gs
  42e096:	cli    
  42e097:	xor    al,0xe0
  42e099:	mov    ds:0xd1a3ffb1,eax
  42e09e:	gs sub esp,eax
  42e0a1:	add    al,0x78
  42e0a3:	(bad)  
  42e0a4:	sbb    edx,ecx
  42e0a6:	jbe    0x42e0c9
  42e0a8:	repnz pop edi
  42e0aa:	sub    BYTE PTR [ebx+ebx*8],dh
  42e0ad:	inc    esp
  42e0ae:	inc    edi
  42e0af:	ficomp DWORD PTR [esi-0x3]
  42e0b2:	(bad)  
  42e0b3:	shl    ah,1
  42e0b5:	test   al,0x35
  42e0b7:	mov    ds:0xa3b9d1bd,al
  42e0bc:	hlt    
  42e0bd:	sahf   
  42e0be:	pop    ss
  42e0bf:	adc    ah,dl
  42e0c1:	test   bl,bh
  42e0c3:	nop
  42e0c4:	or     eax,0x1632c18
  42e0c9:	push   esi
  42e0ca:	cmp    al,dh
  42e0cc:	ja     0x42e11c
  42e0ce:	cmp    al,0xd4
  42e0d0:	or     al,0x0
  42e0d2:	sbb    DWORD PTR [bp+di+0x3385],edi
  42e0d7:	pusha  
  42e0d8:	ss in  eax,dx
  42e0da:	and    BYTE PTR [ebx-0x62e8d322],0x8
  42e0e1:	cmp    al,0x5c
  42e0e3:	push   0xffffff89
  42e0e5:	test   al,0x32
  42e0e7:	xor    al,0x4c
  42e0e9:	sub    al,0x74
  42e0eb:	mov    bl,0x5e
  42e0ed:	mov    ds:0x72f03b1b,al
  42e0f2:	push   eax
  42e0f3:	adc    ecx,DWORD PTR [eax+0x64ef72e]
  42e0f9:	mov    DWORD PTR [eax-0x2f04988c],eax
  42e0ff:	out    0xf2,al
  42e101:	scas   eax,DWORD PTR es:[edi]
  42e102:	push   ebp
  42e103:	dec    edx
  42e104:	sbb    al,0xdd
  42e106:	sahf   
  42e107:	inc    BYTE PTR [ebx+0x75]
  42e10a:	retf   0xf85e
  42e10d:	inc    eax
  42e10e:	xor    al,0x3b
  42e110:	and    al,0x4a
  42e112:	add    ah,dh
  42e114:	mov    WORD PTR ss:[ebp+ebx*8+0x6a],fs
  42e119:	not    DWORD PTR [esi+0x29]
  42e11c:	xchg   ebx,eax
  42e11d:	jns    0x42e0dd
  42e11f:	mov    BYTE PTR [edi],ch
  42e121:	push   es
  42e122:	into   
  42e123:	mov    BYTE PTR [ecx-0x21],ah
  42e126:	sbb    eax,0x31c4acbc
  42e12b:	jmp    0x54d8:0x8697f058
  42e132:	fstp   QWORD PTR [edx]
  42e134:	sbb    BYTE PTR [ecx+0x20],ch
  42e137:	test   DWORD PTR [edx],ebx
  42e139:	mov    ebp,0xeee51778
  42e13e:	jbe    0x42e193
  42e140:	fwait
  42e141:	or     ch,BYTE PTR [ecx-0x7d97c864]
  42e147:	sbb    DWORD PTR [ebx-0x3f2cef08],esp
  42e14d:	xchg   edi,eax
  42e14e:	fcom   QWORD PTR [eax+0x76]
  42e151:	or     ebx,DWORD PTR [ebp+0xa]
  42e154:	test   al,0xe4
  42e156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e157:	push   0x19c88b27
  42e15c:	lahf   
  42e15d:	xchg   ebx,eax
  42e15e:	mov    WORD PTR [ecx-0x57],?
  42e161:	ins    BYTE PTR es:[edi],dx
  42e162:	stc    
  42e163:	inc    esi
  42e164:	xor    al,0x10
  42e166:	pop    es
  42e167:	mov    al,0x59
  42e169:	aas    
  42e16a:	ins    BYTE PTR es:[edi],dx
  42e16b:	outs   dx,DWORD PTR ds:[esi]
  42e16c:	xor    eax,0xd4282b0a
  42e171:	sahf   
  42e172:	in     eax,dx
  42e173:	push   ss
  42e174:	sbb    dh,ah
  42e176:	aaa    
  42e177:	lods   eax,DWORD PTR ds:[esi]
  42e179:	clc    
  42e17a:	das    
  42e17b:	ficomp WORD PTR [edi-0x3d]
  42e17e:	xchg   ecx,eax
  42e17f:	call   0x7e3ae83
  42e184:	xchg   esi,eax
  42e185:	aas    
  42e186:	mov    ds:0x597297c8,al
  42e18b:	les    ebx,FWORD PTR [esi+edx*1-0x20]
  42e18f:	or     ch,BYTE PTR [edx-0x177b24d9]
  42e195:	fistp  DWORD PTR [ecx+0x13]
  42e198:	inc    eax
  42e199:	es cs popa 
  42e19c:	jae    0x42e1aa
  42e19e:	push   ecx
  42e19f:	sti    
  42e1a0:	sahf   
  42e1a1:	in     eax,0x16
  42e1a3:	sbb    BYTE PTR [edx-0x5c],ch
  42e1a6:	xor    BYTE PTR [ebx+esi*4],al
  42e1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1aa:	cli    
  42e1ab:	retf   0x2c21
  42e1ae:	adc    al,0xd8
  42e1b0:	sbb    eax,0x8c119e8c
  42e1b5:	adc    ch,BYTE PTR [esi+0x49]
  42e1b8:	cld    
  42e1b9:	lods   al,BYTE PTR ds:[esi]
  42e1bb:	pop    edi
  42e1bc:	push   ds
  42e1bd:	outs   dx,BYTE PTR ds:[esi]
  42e1be:	xor    eax,0x4420f7d9
  42e1c3:	mov    dh,0x56
  42e1c5:	mov    cl,0x8f
  42e1c7:	mov    ecx,0x1744477e
  42e1cc:	xlat   BYTE PTR ds:[ebx]
  42e1cd:	or     bl,dl
  42e1cf:	dec    esp
  42e1d0:	repnz mov ch,BYTE PTR [esp+ebp*8]
  42e1d4:	push   ds
  42e1d5:	dec    eax
  42e1d7:	inc    edx
  42e1d8:	pop    ebx
  42e1d9:	mov    ?,WORD PTR [ecx]
  42e1db:	sbb    edx,DWORD PTR [eax]
  42e1dd:	add    bl,BYTE PTR [ecx-0x6dcb87a5]
  42e1e3:	xor    ah,BYTE PTR ds:0xaef6cc34
  42e1e9:	dec    eax
  42e1ea:	in     al,0xda
  42e1ec:	aas    
  42e1ed:	mov    esp,0xe43ff458
  42e1f2:	pop    ebp
  42e1f3:	jge    0x42e1b1
  42e1f5:	and    DWORD PTR [edx-0x28392484],ebx
  42e1fb:	loopne 0x42e1a7
  42e1fd:	je     0x42e237
  42e1ff:	hlt    
  42e200:	and    al,0x28
  42e202:	and    esi,DWORD PTR [ebx+0x533f07c1]
  42e208:	pop    ebx
  42e209:	dec    eax
  42e20a:	(bad)  
  42e20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e20c:	loopne 0x42e273
  42e20e:	xchg   edx,eax
  42e20f:	and    al,0xff
  42e211:	mov    ebp,0x7c506c6c
  42e216:	xor    eax,0xcde008cb
  42e21b:	nop
  42e21c:	in     al,dx
  42e21d:	xchg   DWORD PTR [edi],ebx
  42e21f:	or     eax,0x1b5a76e6
  42e224:	mov    ah,0x8b
  42e226:	mov    cl,0xa7
  42e228:	ret    
  42e229:	sub    cl,BYTE PTR [ebx+0x29]
  42e22c:	and    ebx,DWORD PTR [ecx+eax*4-0x63]
  42e230:	rcr    DWORD PTR [edi+0x43031dbe],cl
  42e236:	sub    BYTE PTR [edx-0x80],0xb9
  42e23a:	jno    0x42e25a
  42e23c:	pop    ss
  42e23d:	adc    eax,0xa40ca4ff
  42e242:	and    eax,eax
  42e244:	nop
  42e245:	out    dx,eax
  42e246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e247:	std    
  42e248:	enter  0xd54d,0x35
  42e24c:	mov    ebp,0x8f7671ac
  42e251:	jo     0x42e25e
  42e253:	push   eax
  42e254:	inc    ebp
  42e255:	gs push ds
  42e257:	xchg   ebx,eax
  42e258:	clc    
  42e259:	ins    DWORD PTR es:[edi],dx
  42e25a:	xchg   esp,eax
  42e25b:	test   DWORD PTR [edi-0x40],ecx
  42e25e:	loop   0x42e2a2
  42e260:	fbstp  TBYTE PTR [ecx-0x616647ff]
  42e266:	inc    ebp
  42e267:	mov    dl,0xcf
  42e269:	jmp    0xdfef:0xecdc172e
  42e270:	popa   
  42e271:	mov    eax,0x6fddd8
  42e276:	lds    esp,FWORD PTR [eax-0x5b]
  42e279:	mov    ebx,0x31dc9f1c
  42e27e:	test   al,0xcb
  42e280:	adc    BYTE PTR [ebp-0x73],0x9f
  42e284:	outs   dx,BYTE PTR ds:[esi]
  42e285:	or     al,0x48
  42e287:	int3   
  42e288:	xchg   edi,eax
  42e289:	bound  edi,QWORD PTR [esi+0x0]
  42e28c:	xor    eax,0xf0d9fff8
  42e291:	lahf   
  42e292:	ins    DWORD PTR es:[edi],dx
  42e293:	and    al,0xdf
  42e295:	out    dx,eax
  42e296:	inc    edx
  42e297:	mov    DWORD PTR ds:0x4fccf314,edi
  42e29d:	iret   
  42e29e:	or     eax,0xbc0d0f05
  42e2a3:	imul   ecx,DWORD PTR ds:0x43dea578,0x6f
  42e2aa:	mov    ah,al
  42e2ac:	push   edx
  42e2ad:	ror    BYTE PTR fs:[edx+0x234aa391],1
  42e2b4:	add    al,0x53
  42e2b6:	fnstcw WORD PTR [edi]
  42e2b8:	mov    ebx,edx
  42e2ba:	mov    ebx,0xa628cb80
  42e2bf:	out    0xe,eax
  42e2c1:	loope  0x42e254
  42e2c3:	mov    edx,ebp
  42e2c5:	fisttp DWORD PTR [edi+eax*2-0x25]
  42e2c9:	jno    0x42e2ef
  42e2cb:	inc    edi
  42e2cc:	mov    es,WORD PTR ds:0xc62cf436
  42e2d2:	or     ebx,DWORD PTR [edx-0x7fc558df]
  42e2d8:	sbb    BYTE PTR [eax],bl
  42e2da:	mul    DWORD PTR [ebx+0x1bbfb012]
  42e2e0:	ss cmp al,0x99
  42e2e3:	cmp    al,0x33
  42e2e5:	ins    DWORD PTR es:[edi],dx
  42e2e6:	(bad)  
  42e2e7:	jbe    0x42e334
  42e2e9:	push   edi
  42e2ea:	pusha  
  42e2eb:	jl     0x42e2fa
  42e2ed:	and    eax,0x36bb1c90
  42e2f2:	int3   
  42e2f3:	test   BYTE PTR [eax+0x51],dh
  42e2f6:	push   edi
  42e2f7:	outs   dx,DWORD PTR ds:[esi]
  42e2f8:	daa    
  42e2f9:	into   
  42e2fa:	mov    al,ah
  42e2fc:	sub    al,0x38
  42e2fe:	add    eax,0xc00c18fd
  42e303:	sahf   
  42e304:	test   BYTE PTR [eax-0x49],dl
  42e307:	fadd   DWORD PTR [ebx+0x2eb3e6f3]
  42e30d:	inc    eax
  42e30e:	je     0x42e2e8
  42e310:	xor    eax,DWORD PTR [ebx-0x63]
  42e313:	sub    edi,ecx
  42e315:	sbb    eax,DWORD PTR [edi-0x68]
  42e318:	jp     0x42e2d9
  42e31a:	(bad)  [eax]
  42e31c:	cmp    dh,bl
  42e31e:	ja     0x42e33f
  42e320:	inc    eax
  42e321:	push   cs
  42e322:	inc    edi
  42e323:	ds mul ebx
  42e326:	add    ecx,DWORD PTR [eax-0x42549b5f]
  42e32c:	pusha  
  42e32d:	xchg   esp,eax
  42e32e:	mov    ebx,0x8856848d
  42e333:	mov    edi,0xc64a2f9e
  42e338:	mov    dh,0x2b
  42e33a:	fild   QWORD PTR [ebx+edi*2-0x1d40d3bd]
  42e341:	test   al,0x1c
  42e343:	dec    ebx
  42e344:	rcl    bl,1
  42e346:	test   al,0x78
  42e348:	ins    DWORD PTR es:[edi],dx
  42e349:	call   0x6a4f:0x78c9807c
  42e350:	xchg   DWORD PTR [ebx],esp
  42e352:	les    ebx,FWORD PTR [esi-0x62635bd9]
  42e358:	(bad)  
  42e35a:	or     bl,ch
  42e35c:	xor    bl,BYTE PTR [eax-0x6b]
  42e35f:	sar    BYTE PTR [edx-0x3],0x8b
  42e363:	inc    esi
  42e364:	ss xchg edi,eax
  42e366:	ss pop eax
  42e368:	in     al,0x7b
  42e36a:	xchg   edx,eax
  42e36b:	sub    DWORD PTR [edi+ebp*8+0xe],esi
  42e36f:	std    
  42e370:	push   esp
  42e371:	mov    WORD PTR [ecx],ds
  42e373:	push   ecx
  42e374:	fs dec edi
  42e376:	pop    ecx
  42e377:	cmp    al,0xd8
  42e379:	icebp  
  42e37a:	mov    al,0xf5
  42e37c:	nop
  42e37d:	imul   edx,DWORD PTR [ebx+0x11d71417],0xffffffd4
  42e384:	ds dec eax
  42e386:	or     BYTE PTR [eax+0x41],dh
  42e389:	inc    ecx
  42e38a:	or     BYTE PTR [eax-0x5f8d7808],0xab
  42e391:	ins    DWORD PTR es:[edi],dx
  42e392:	ins    BYTE PTR es:[edi],dx
  42e393:	cld    
  42e394:	xchg   edi,eax
  42e395:	sbb    al,0xb0
  42e397:	shl    ah,0x7c
  42e39a:	cli    
  42e39b:	pop    ebx
  42e39c:	xor    al,0x74
  42e39e:	les    ebp,FWORD PTR [ebx+esi*8+0x543b4a6c]
  42e3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3a6:	jl     0x42e390
  42e3a8:	aam    0x4b
  42e3aa:	push   edi
  42e3ab:	add    al,0x42
  42e3ad:	adc    eax,DWORD PTR [ebp+0x185e0ceb]
  42e3b3:	cli    
  42e3b4:	push   ss
  42e3b5:	cmp    ebx,DWORD PTR [edi-0x6f]
  42e3b8:	pop    ds
  42e3b9:	xor    ch,al
  42e3bb:	and    ebp,ebx
  42e3bd:	std    
  42e3be:	push   esp
  42e3bf:	bound  eax,QWORD PTR [eax-0x27]
  42e3c2:	fsubr  DWORD PTR [eax+0x74]
  42e3c5:	iret   
  42e3c6:	ret    0xe672
  42e3c9:	sti    
  42e3ca:	inc    ebp
  42e3cb:	cld    
  42e3cc:	inc    edi
  42e3cd:	pop    ebx
  42e3ce:	or     ecx,DWORD PTR [ebx]
  42e3d0:	xchg   ebp,eax
  42e3d1:	gs push ebx
  42e3d3:	scas   al,BYTE PTR es:[edi]
  42e3d4:	and    BYTE PTR [edi+eiz*8],dh
  42e3d7:	mov    ch,0xf7
  42e3d9:	xchg   esi,eax
  42e3da:	mov    bh,0xea
  42e3dc:	pop    ebx
  42e3dd:	inc    esp
  42e3de:	fstp   TBYTE PTR [ebx-0x1c380058]
  42e3e4:	int3   
  42e3e5:	mov    edi,0xf7dfc268
  42e3ea:	jae    0x42e3f1
  42e3ec:	retf   
  42e3ed:	adc    ebx,esi
  42e3ef:	adc    ah,ch
  42e3f1:	in     al,dx
  42e3f2:	cmp    al,0x1
  42e3f4:	push   0xffffffb2
  42e3f6:	and    al,0xfb
  42e3f8:	xor    al,0xa3
  42e3fa:	xchg   ebp,eax
  42e3fb:	iret   
  42e3fc:	adc    esp,esp
  42e3fe:	fldz   
  42e400:	jae    0x42e45a
  42e402:	pop    eax
  42e403:	cmp    DWORD PTR [ecx+0x1381c3c5],eax
  42e409:	xor    al,0x7c
  42e40b:	fdivrp st(7),st
  42e40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e40e:	push   edx
  42e40f:	test   esp,edx
  42e411:	and    DWORD PTR [ebx-0x448ed060],ebx
  42e417:	into   
  42e418:	xlat   BYTE PTR ds:[ebx]
  42e419:	cmp    di,WORD PTR [ecx+0x48]
  42e41d:	mov    DWORD PTR [ebp+0x7e],edi
  42e420:	mov    eax,0x6775c8f
  42e425:	ins    BYTE PTR es:[edi],dx
  42e426:	sbb    eax,0x4cf9968
  42e42b:	nop
  42e42c:	outs   dx,DWORD PTR ds:[esi]
  42e42d:	aad    0x90
  42e42f:	test   eax,0xbdad5a07
  42e434:	inc    DWORD PTR [ecx+0x15e1b43e]
  42e43a:	pop    eax
  42e43b:	mov    ecx,0x5ab455db
  42e440:	pop    esp
  42e441:	jp     0x42e445
  42e443:	xor    eax,0xd845f9bd
  42e448:	loop   0x42e3ca
  42e44a:	sbb    BYTE PTR [eax],ah
  42e44c:	fwait
  42e44d:	ins    DWORD PTR es:[edi],dx
  42e44e:	test   esi,edi
  42e450:	xor    DWORD PTR [ebx+0x36ac67a4],0x5748d2c3
  42e45a:	mov    ebx,0x751f79c8
  42e45f:	icebp  
  42e460:	and    eax,eax
  42e462:	mov    cl,0x7
  42e464:	in     al,dx
  42e465:	add    eax,0xc072c6ad
  42e46a:	shl    BYTE PTR [ebp+0x1b],1
  42e46d:	xchg   esp,eax
  42e46e:	rcl    DWORD PTR [ebp-0x5e],cl
  42e471:	div    BYTE PTR [ebp+0x26]
  42e474:	stos   DWORD PTR es:[edi],eax
  42e475:	dec    ebx
  42e476:	mov    eax,0xdac388cb
  42e47b:	pop    edx
  42e47c:	shl    DWORD PTR [esi],cl
  42e47e:	adc    eax,0x41a89ddc
  42e483:	loope  0x42e4f1
  42e485:	inc    eax
  42e486:	push   edi
  42e487:	fild   DWORD PTR [eax]
  42e489:	iret   
  42e48a:	push   cs
  42e48b:	nop
  42e48c:	stos   DWORD PTR es:[edi],eax
  42e48d:	push   ds
  42e48e:	in     al,0xf1
  42e490:	fsubr  QWORD PTR [eax+0x7f5c31d3]
  42e496:	test   ebp,0xf2cc7ead
  42e49c:	icebp  
  42e49d:	jp     0x42e4a6
  42e49f:	xchg   al,bl
  42e4a1:	pop    ebx
  42e4a2:	aam    0xf0
  42e4a4:	jno    0x42e490
  42e4a6:	mov    ds:0xa24e9959,eax
  42e4ab:	add    eax,0x56c2b14
  42e4b0:	in     eax,dx
  42e4b1:	retf   0x3af
  42e4b4:	push   ecx
  42e4b5:	cmp    BYTE PTR [eax-0x41],dl
  42e4b8:	ret    0x630a
  42e4bb:	popf   
  42e4bc:	sub    al,BYTE PTR [eax-0x20]
  42e4bf:	rcr    BYTE PTR [eiz*1+0x741acc52],1
  42e4c6:	leave  
  42e4c7:	add    al,0xab
  42e4c9:	ffree  st(4)
  42e4cb:	inc    esp
  42e4cc:	hlt    
  42e4cd:	mov    ebx,DWORD PTR [ebx+0x42]
  42e4d0:	sub    BYTE PTR [edi+0x5a],al
  42e4d3:	(bad)  
  42e4d4:	adc    al,BYTE PTR [edi]
  42e4d6:	jmp    0x398f2f29
  42e4db:	nop
  42e4dc:	fmul   QWORD PTR [esi]
  42e4de:	add    BYTE PTR [esi-0x718fc8cf],bh
  42e4e4:	in     al,0x4d
  42e4e6:	out    0xb4,al
  42e4e8:	cmc    
  42e4e9:	jbe    0x42e52b
  42e4eb:	sbb    BYTE PTR [ebp-0x4c7ad56b],dl
  42e4f1:	add    al,0x45
  42e4f3:	out    dx,al
  42e4f4:	cmp    al,0x6e
  42e4f6:	mov    ebx,0x7f7e1d3d
  42e4fb:	into   
  42e4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4fd:	pusha  
  42e4fe:	inc    ebp
  42e4ff:	xchg   ebp,eax
  42e500:	mov    ds:0x9fc9bc46,eax
  42e505:	cmp    al,BYTE PTR [eax+edi*2-0x79bdcb4c]
  42e50c:	fnstcw WORD PTR [eax-0xcb8d319]
  42e512:	int    0xcc
  42e514:	inc    edx
  42e515:	push   edi
  42e516:	pusha  
  42e517:	mov    eax,ds:0x819eef50
  42e51c:	icebp  
  42e51d:	mov    ?,ecx
  42e51f:	repnz inc edx
  42e521:	je     0x42e561
  42e523:	out    dx,eax
  42e524:	mov    cl,0x39
  42e526:	aam    0x5c
  42e528:	push   esi
  42e529:	mov    eax,0x8d3b6f98
  42e52e:	inc    edx
  42e52f:	repz sbb eax,0x47bc4d2d
  42e535:	(bad)  
  42e536:	not    DWORD PTR [edi]
  42e538:	out    dx,eax
  42e539:	ins    BYTE PTR es:[edi],dx
  42e53a:	ror    DWORD PTR [esi+0x2d418d64],0xde
  42e541:	test   DWORD PTR [ecx-0x54],ebp
  42e544:	push   0xffffff88
  42e546:	ins    DWORD PTR es:[edi],dx
  42e547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e548:	sti    
  42e549:	push   edi
  42e54a:	or     BYTE PTR [ebp+0x1fac45e5],al
  42e550:	iret   
  42e551:	jbe    0x42e5a3
  42e553:	aas    
  42e554:	jo     0x42e599
  42e556:	out    0xd0,al
  42e558:	push   esp
  42e559:	imul   edx,DWORD PTR [edi+0x35b81723],0xfffffff9
  42e560:	js     0x42e59d
  42e562:	cmp    DWORD PTR [edi],ebp
  42e564:	shl    DWORD PTR [ebx-0x6379a87d],0x4
  42e56b:	mov    BYTE PTR [ebx],dh
  42e56d:	ins    DWORD PTR es:[edi],dx
  42e56e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e56f:	mov    al,ds:0xac02372
  42e574:	push   ds
  42e575:	(bad)  
  42e576:	jnp    0x42e577
  42e578:	pop    eax
  42e579:	add    esi,DWORD PTR ds:0x6e5cbfe4
  42e57f:	push   esi
  42e580:	inc    ebp
  42e581:	pop    eax
  42e582:	mov    ebp,0x78420849
  42e587:	test   al,0x9
  42e589:	adc    DWORD PTR [ecx],edx
  42e58b:	inc    eax
  42e58c:	aas    
  42e58d:	mov    al,0xfe
  42e58f:	ja     0x42e5fd
  42e591:	ins    BYTE PTR es:[edi],dx
  42e592:	mov    ch,0x57
  42e594:	lock stos DWORD PTR es:[edi],eax
  42e596:	aam    0xeb
  42e598:	and    ecx,DWORD PTR [edx]
  42e59a:	in     al,dx
  42e59b:	cmp    dh,BYTE PTR [ecx-0x2]
  42e59e:	fwait
  42e59f:	clc    
  42e5a0:	fwait
  42e5a1:	sub    eax,DWORD PTR [ecx+0x143c20dd]
  42e5a7:	test   eax,0x5fb77d1c
  42e5ac:	bound  edi,QWORD PTR [edi-0x5d]
  42e5af:	push   ecx
  42e5b0:	push   edx
  42e5b1:	inc    eax
  42e5b2:	and    al,0xfa
  42e5b4:	mov    al,0xd9
  42e5b6:	adc    eax,0xe898c317
  42e5bb:	sbb    BYTE PTR [eax+0x1d],dh
  42e5be:	outs   dx,BYTE PTR ds:[esi]
  42e5bf:	mov    WORD PTR [eax-0x2e],ds
  42e5c2:	xor    al,0xc
  42e5c4:	adc    DWORD PTR [ecx],ebx
  42e5c6:	sahf   
  42e5c7:	xchg   esi,eax
  42e5c8:	xchg   ebp,eax
  42e5c9:	fsubr  st(5),st
  42e5cb:	ret    0x5b30
  42e5ce:	je     0x42e61f
  42e5d0:	sub    eax,DWORD PTR [ecx+0x5456ca6b]
  42e5d6:	dec    ecx
  42e5d7:	pop    eax
  42e5d8:	mov    ?,WORD PTR ds:0x8d767a7a
  42e5de:	cld    
  42e5df:	mov    eax,0xf890170e
  42e5e4:	(bad)  
  42e5e5:	mov    al,ds:0x26032007
  42e5ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e5eb:	cmp    eax,0x2400f8dd
  42e5f0:	inc    esp
  42e5f1:	inc    edi
  42e5f2:	jl     0x42e5c5
  42e5f4:	retf   
  42e5f5:	leave  
  42e5f6:	sti    
  42e5f7:	das    
  42e5f8:	mov    dh,0x68
  42e5fa:	cwde   
  42e5fb:	pop    ss
  42e5fc:	ins    BYTE PTR es:[edi],dx
  42e5fd:	dec    esp
  42e5fe:	sets   BYTE PTR [edx-0x59]
  42e602:	mov    WORD PTR [edi+0x11c8efdb],ds
  42e608:	jmp    0x81776c18
  42e60d:	xchg   DWORD PTR [edi+0x5a09a621],ecx
  42e613:	rcr    BYTE PTR [eax+0x9],0x4b
  42e617:	add    al,0x14
  42e619:	add    bl,BYTE PTR ss:[ebx+0x55]
  42e61d:	jl     0x42e5d1
  42e61f:	sbb    BYTE PTR [ebx+0xfc853ed],dh
  42e625:	mov    edi,0xafccfda0
  42e62a:	mov    es,WORD PTR [esi]
  42e62c:	pop    ss
  42e62d:	sbb    al,0x58
  42e62f:	dec    eax
  42e630:	or     cl,BYTE PTR [eax-0x60]
  42e633:	movups XMMWORD PTR [edi-0x50],xmm1
  42e637:	ja     0x42e6a5
  42e639:	jl     0x42e661
  42e63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e63c:	jecxz  0x42e688
  42e63e:	jo     0x42e5e7
  42e640:	bound  edx,QWORD PTR [eax-0x3d704a09]
  42e646:	out    dx,al
  42e647:	into   
  42e648:	lss    esi,FWORD PTR [edx+ebx*1+0x489ea9ae]
  42e650:	cwde   
  42e651:	call   0xd475be68
  42e656:	mov    edx,0x7cda1674
  42e65b:	fild   WORD PTR [eax+0x7e2d0902]
  42e661:	stc    
  42e662:	leave  
  42e663:	and    bl,BYTE PTR [eax]
  42e665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e666:	gs out dx,eax
  42e668:	jb     0x42e64e
  42e66a:	(bad)  
  42e66b:	rol    DWORD PTR [ebp-0x66],1
  42e66e:	enter  0x92c5,0xc0
  42e672:	sahf   
  42e673:	xchg   esi,eax
  42e674:	push   esi
  42e675:	inc    edx
  42e676:	inc    esp
  42e677:	in     al,dx
  42e678:	(bad)  
  42e679:	jne    0x42e6df
  42e67b:	cmc    
  42e67c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e67d:	mov    eax,ds:0x91100251
  42e682:	sbb    eax,DWORD PTR ds:0x9b425bc1
  42e688:	icebp  
  42e689:	mov    eax,0x5acdb445
  42e68e:	fld    st(0)
  42e690:	and    eax,0xbfddc87
  42e695:	cmp    ch,BYTE PTR [esi]
  42e697:	add    al,0x24
  42e699:	(bad)  [ecx+0x50fdcd00]
  42e69f:	gs hlt 
  42e6a1:	sbb    DWORD PTR [esi],edi
  42e6a3:	je     0x42e6c9
  42e6a5:	loope  0x42e713
  42e6a7:	sub    DWORD PTR [edx-0x150ba1d7],esp
  42e6ad:	int3   
  42e6ae:	lods   al,BYTE PTR ds:[esi]
  42e6af:	jg     0x42e6e7
  42e6b1:	xchg   ebp,eax
  42e6b2:	jmp    0xf137cbca
  42e6b7:	lahf   
  42e6b8:	xchg   DWORD PTR [ebp-0x19a3fbc],ebx
  42e6be:	int    0x14
  42e6c0:	pop    edx
  42e6c1:	ficom  DWORD PTR [edx-0x58]
  42e6c4:	repz and eax,0x5e383953
  42e6ca:	jecxz  0x42e6f2
  42e6cc:	call   0x95c:0xa4939bc6
  42e6d3:	ja     0x42e728
  42e6d5:	stc    
  42e6d6:	push   0x49e74f8
  42e6db:	stos   DWORD PTR es:[edi],eax
  42e6dc:	pop    edx
  42e6dd:	cmp    eax,0x6edff30e
  42e6e3:	sub    bh,al
  42e6e5:	pop    edx
  42e6e6:	jbe    0x42e6fe
  42e6e8:	add    eax,0x4c4bde08
  42e6ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6ee:	test   BYTE PTR [ecx+0x7b106c17],0x79
  42e6f5:	jo     0x42e6ec
  42e6f7:	push   eax
  42e6f8:	bsr    ebx,DWORD PTR [edx-0x26]
  42e6fc:	pusha  
  42e6fd:	out    0x18,al
  42e6ff:	pop    edi
  42e700:	test   al,0xa0
  42e702:	push   edx
  42e703:	dec    ecx
  42e704:	sti    
  42e705:	inc    ecx
  42e706:	cmc    
  42e707:	cmp    al,0x7f
  42e709:	clc    
  42e70a:	xchg   esp,eax
  42e70b:	adc    edi,ebx
  42e70d:	mov    cl,0x88
  42e70f:	xchg   edx,eax
  42e710:	pusha  
  42e711:	pop    ecx
  42e712:	and    eax,0xee1a1c7e
  42e717:	pusha  
  42e718:	mov    eax,0x98134984
  42e71d:	push   esp
  42e71e:	(bad)  
  42e71f:	fiadd  WORD PTR [edi-0x5c285720]
  42e725:	(bad)  
  42e726:	xor    DWORD PTR [edx],edi
  42e728:	dec    ecx
  42e729:	ror    BYTE PTR [ebp-0x3dfba9b0],0x77
  42e730:	xchg   esi,eax
  42e731:	pusha  
  42e732:	jae    0x42e791
  42e734:	je     0x42e72f
  42e736:	in     al,0x89
  42e738:	mov    WORD PTR [ecx+ebx*8+0x36],ss
  42e73c:	mov    bh,0x98
  42e73e:	xchg   edi,eax
  42e73f:	xor    eax,0x69c008ef
  42e744:	sub    edi,DWORD PTR ss:[edi+esi*4+0x52302d65]
  42e74c:	jmp    0x936a:0x2ee01b17
  42e753:	test   al,0xdd
  42e755:	xor    al,0xb3
  42e757:	jmp    0x8b9012e4
  42e75c:	int3   
  42e75d:	cdq    
  42e75e:	rcr    BYTE PTR [eax-0x46],0xac
  42e762:	xor    DWORD PTR [edx+eax*8+0x4d],edi
  42e766:	sbb    BYTE PTR ds:0x5dd0e015,dl
  42e76c:	xchg   ecx,eax
  42e76d:	imul   edx,DWORD PTR [esi],0xcf615f75
  42e773:	hlt    
  42e774:	mov    dh,0x14
  42e777:	sub    ebp,DWORD PTR [ebp+0x1]
  42e77a:	cld    
  42e77b:	fstp   QWORD PTR [esi+ecx*1+0x845c581]
  42e782:	mov    ah,0xb
  42e784:	add    al,0xc0
  42e786:	mov    ebx,ebx
  42e788:	xchg   ecx,eax
  42e789:	adc    dl,BYTE PTR [ecx+0x25]
  42e78c:	cmp    eax,0x2f5ae438
  42e791:	add    BYTE PTR [ebx],ah
  42e793:	loop   0x42e731
  42e795:	mov    cl,0x6e
  42e797:	or     BYTE PTR [ecx-0x3d],bh
  42e79a:	sbb    ch,BYTE PTR [edx-0x41]
  42e79d:	cld    
  42e79e:	cli    
  42e79f:	sub    DWORD PTR [edx*4-0x47e747f0],0xffffffd0
  42e7a7:	stos   BYTE PTR es:[edi],al
  42e7a8:	cmp    dl,ah
  42e7aa:	pusha  
  42e7ab:	mov    esi,0x63f65337
  42e7b0:	ror    eax,cl
  42e7b2:	clc    
  42e7b3:	xor    BYTE PTR [edx],dl
  42e7b5:	mov    esi,0xbac19f94
  42e7ba:	fstp   QWORD PTR [esi+ecx*8]
  42e7bd:	retf   
  42e7be:	icebp  
  42e7bf:	xor    al,0x86
  42e7c1:	enter  0x3f2a,0x40
  42e7c5:	cs mov edi,0x9f19bb8f
  42e7cb:	jp     0x42e7fc
  42e7cd:	call   0x232878e8
  42e7d2:	std    
  42e7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e7d4:	ss aad 0xc
  42e7d7:	jno    0x42e82e
  42e7d9:	jecxz  0x42e778
  42e7db:	(bad)  [eax+0x1a]
  42e7df:	xor    bh,dh
  42e7e1:	clc    
  42e7e2:	sub    ecx,DWORD PTR [eax-0x2a]
  42e7e5:	adc    ah,0xf
  42e7e8:	push   esp
  42e7e9:	or     ebp,ecx
  42e7eb:	nop
  42e7ec:	mov    ebp,DWORD PTR [ecx+0x784c9bfd]
  42e7f2:	gs hlt 
  42e7f4:	pop    ebp
  42e7f5:	sti    
  42e7f6:	loop   0x42e785
  42e7f8:	cmp    ecx,DWORD PTR ds:0xa5028b20
  42e7fe:	sti    
  42e7ff:	cmp    DWORD PTR [ebp+0x7d4490c3],eax
  42e805:	cmp    eax,0xc005056d
  42e80a:	adc    BYTE PTR [eax],dl
  42e80c:	push   0xd6fbafce
  42e811:	mov    ebp,0x8c2ada70
  42e816:	jb     0x42e7e0
  42e818:	or     eax,0x3682d4d1
  42e81d:	shl    BYTE PTR [ecx+ebx*2],0xc0
  42e821:	jnp    0x42e7ca
  42e823:	adc    ah,BYTE PTR [ebp+eax*2+0x7eb958f5]
  42e82a:	ds rcr esi,cl
  42e82d:	dec    esi
  42e82e:	dec    esp
  42e82f:	and    edi,DWORD PTR [esi+ecx*2+0x16]
  42e833:	clc    
  42e834:	test   DWORD PTR [edx],eax
  42e836:	add    edx,edx
  42e838:	mov    eax,ds:0xcb23e0a0
  42e83d:	cs (bad) 
  42e83f:	cmp    al,0x5a
  42e841:	ds (bad) 
  42e843:	aad    0x5c
  42e845:	shr    ebp,cl
  42e847:	es (bad) 
  42e849:	mov    dh,0x6b
  42e84b:	ins    BYTE PTR es:[edi],dx
  42e84c:	test   ecx,ecx
  42e84e:	pop    ebp
  42e84f:	cmp    ebx,edx
  42e851:	lahf   
  42e852:	dec    edi
  42e853:	pop    esi
  42e854:	nop
  42e855:	neg    DWORD PTR [ebp-0x77]
  42e858:	add    eax,0xe8bdee0b
  42e85d:	mov    ah,0xb2
  42e85f:	jb     0x42e86d
  42e861:	mov    eax,ecx
  42e863:	dec    edx
  42e864:	mov    ebp,0x97cdd898
  42e869:	adc    DWORD PTR [esi-0x28],esp
  42e86c:	adc    cl,dh
  42e86e:	or     esp,edi
  42e870:	lods   al,BYTE PTR ds:[esi]
  42e871:	push   esp
  42e872:	(bad)  [eax-0x17887f35]
  42e878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e879:	hlt    
  42e87a:	or     al,0xa8
  42e87c:	iret   
  42e87d:	mov    al,ds:0xc85a2751
  42e882:	por    mm1,QWORD PTR [eax+0x5713acbe]
  42e889:	jp     0x42e877
  42e88b:	xor    bh,dl
  42e88d:	rol    DWORD PTR [ecx+0x340af4c8],0x10
  42e894:	(bad)  
  42e896:	into   
  42e897:	jg     0x42e884
  42e899:	push   edi
  42e89a:	into   
  42e89b:	jns    0x42e855
  42e89d:	pop    eax
  42e89e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e89f:	inc    ebx
  42e8a0:	xchg   edx,eax
  42e8a1:	mov    eax,0xdcf5346c
  42e8a6:	mov    ah,0xc9
  42e8a8:	cdq    
  42e8a9:	or     al,0x43
  42e8ab:	cwde   
  42e8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e8ad:	out    dx,al
  42e8ae:	add    BYTE PTR [edi-0x1ce8f01d],ah
  42e8b4:	inc    eax
  42e8b5:	jmp    0x14840cdf
  42e8ba:	jp     0x42e92c
  42e8bc:	iret   
  42e8bd:	dec    ebp
  42e8be:	add    DWORD PTR [ebp+0x48],esp
  42e8c1:	arpl   bp,si
  42e8c3:	outs   dx,DWORD PTR ds:[esi]
  42e8c4:	mov    ebx,0x46a0791c
  42e8c9:	lock sub BYTE PTR [ebx],bl
  42e8cc:	dec    ecx
  42e8cd:	retf   0x2861
  42e8d0:	cmc    
  42e8d1:	push   eax
  42e8d2:	adc    al,0x80
  42e8d4:	out    dx,eax
  42e8d5:	xchg   esp,eax
  42e8d6:	nop
  42e8d7:	mov    fs,WORD PTR [esi-0x1fc7c195]
  42e8dd:	dec    esi
  42e8de:	adc    bl,BYTE PTR [esp+ecx*2+0x5c48bd9f]
  42e8e5:	leave  
  42e8e6:	fwait
  42e8e7:	or     ah,ch
  42e8e9:	sti    
  42e8ea:	cmc    
  42e8eb:	pop    es
  42e8ec:	mov    edx,0x6c6fd004
  42e8f1:	adc    esi,ecx
  42e8f3:	jns    0x42e8ff
  42e8f5:	mov    WORD PTR [eax],gs
  42e8f7:	jns    0x42e963
  42e8f9:	cdq    
  42e8fa:	add    BYTE PTR [ecx+ebx*4+0x54],dh
  42e8fe:	push   0x4c
  42e900:	inc    ebx
  42e901:	data16 lahf 
  42e903:	enter  0xa5dc,0x23
  42e907:	jbe    0x42e979
  42e909:	test   cl,ch
  42e90b:	(bad)
  42e90e:	add    eax,0xa29437c5
  42e913:	xchg   edi,eax
  42e914:	dec    ebp
  42e915:	in     al,dx
  42e916:	lea    esi,[ecx+0x5c]
  42e919:	pop    esi
  42e91a:	cmp    al,0xf3
  42e91c:	inc    esp
  42e91d:	xchg   ecx,eax
  42e91e:	fcom   QWORD PTR [ecx+0x414ca2]
  42e924:	add    BYTE PTR [eax],al
  42e926:	add    BYTE PTR [eax],al
  42e928:	loope  0x42e945
  42e92a:	cld    
  42e92b:	push   ebx
  42e92c:	push   ecx
  42e92d:	or     DWORD PTR [eax],eax
  42e92f:	add    BYTE PTR [eax],al
  42e931:	add    BYTE PTR [eax],al
  42e933:	add    BYTE PTR [ecx+0x9],dl
  42e936:	add    BYTE PTR [eax],al
  42e938:	cmp    eax,DWORD PTR [eax]
  42e93a:	es jl  0x42e93d
  42e93d:	add    dh,BYTE PTR [esi]
  42e93f:	or     BYTE PTR [eax],al
  42e941:	add    ah,al
  42e943:	inc    ebp
  42e944:	add    BYTE PTR [ecx-0x2e],dl
  42e947:	dec    eax
  42e948:	scas   al,BYTE PTR es:[edi]
  42e949:	fbstp  TBYTE PTR [esp+ecx*1+0x76ef2413]
  42e950:	fwait
  42e951:	inc    ecx
  42e952:	add    eax,0x48b738b5
  42e957:	cmp    ax,0xa45e
  42e95b:	push   ds
  42e95c:	out    dx,al
  42e95d:	inc    edx
  42e95e:	out    0x6c,al
  42e960:	retf   0x6cb
  42e963:	daa    
  42e964:	mov    esi,0x90005260
  42e969:	sbb    eax,0x24d1a1f5
  42e96e:	arpl   di,cx
  42e970:	xchg   edx,eax
  42e971:	cmp    bl,dl
  42e973:	xor    edi,eax
  42e975:	sar    DWORD PTR [edi+0x5c6022cb],cl
  42e97b:	les    esi,FWORD PTR [eax+0x727f9a20]
  42e981:	adc    DWORD PTR ds:0x80fd3980,esi
  42e987:	int    0xe3
  42e989:	push   edi
  42e98a:	mov    esp,0xd39a497
  42e98f:	(bad)  
  42e990:	or     eax,0x2cc8088a
  42e995:	dec    esp
  42e996:	sahf   
  42e997:	scas   eax,DWORD PTR es:[edi]
  42e998:	and    BYTE PTR [edx],ch
  42e99a:	cld    
  42e99b:	inc    eax
  42e99c:	arpl   WORD PTR [ebx-0x2ea49190],bx
  42e9a2:	(bad)  
  42e9a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9a4:	or     BYTE PTR [ebx],dl
  42e9a6:	xchg   ebx,eax
  42e9a7:	xchg   esp,eax
  42e9a8:	pop    edi
  42e9a9:	(bad)  
  42e9aa:	xor    al,0x73
  42e9ac:	mov    ah,0x53
  42e9ae:	push   0x15
  42e9b0:	mov    eax,0x58b129f4
  42e9b5:	rol    BYTE PTR [edi-0x3c],0x31
  42e9b9:	fsub   st(1),st
  42e9bb:	sbb    cl,BYTE PTR [ebx]
  42e9bd:	repnz push ecx
  42e9bf:	repz mov bl,0xf6
  42e9c2:	test   BYTE PTR [ebp-0x7],bl
  42e9c5:	lahf   
  42e9c6:	out    dx,al
  42e9c7:	stos   BYTE PTR es:[edi],al
  42e9c8:	adc    edx,ebx
  42e9ca:	sub    DWORD PTR [eax+0x1d722d89],0xd30af68f
  42e9d4:	int3   
  42e9d5:	mov    ecx,0xde8e3529
  42e9da:	stc    
  42e9db:	adc    DWORD PTR [ecx-0x10],ebx
  42e9de:	inc    esi
  42e9df:	cs aas 
  42e9e1:	out    0x21,al
  42e9e3:	js     0x42e9bc
  42e9e5:	pop    edx
  42e9e6:	adc    al,0x48
  42e9e8:	loope  0x42e9fc
  42e9ea:	jnp    0x42e998
  42e9ec:	push   ecx
  42e9ed:	lods   al,BYTE PTR ds:[esi]
  42e9ee:	sar    BYTE PTR [eax+ebp*2+0x23311703],cl
  42e9f5:	mov    ebp,0x7ae0f0c9
  42e9fa:	pusha  
  42e9fb:	jg     0x42e998
  42e9fd:	shr    DWORD PTR [esi+0x7e04d2d8],0xe6
  42ea04:	fidiv  DWORD PTR ds:0xaefeb38a
  42ea0a:	sub    BYTE PTR [edx],ch
  42ea0c:	pop    ds
  42ea0d:	add    eax,0xce9ad62b
  42ea12:	inc    ebx
  42ea13:	shl    BYTE PTR [ebp+0x3efd1613],1
  42ea19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea1a:	fsub   QWORD PTR [esi-0xc]
  42ea1d:	cdq    
  42ea1e:	jecxz  0x42e9c5
  42ea20:	int    0x5
  42ea22:	jb     0x42e9a9
  42ea24:	(bad)  
  42ea25:	sbb    BYTE PTR [eax+ebx*1],ah
  42ea28:	maskmovq mm4,mm5
  42ea2b:	in     al,0x65
  42ea2d:	cmc    
  42ea2e:	cmp    al,0x54
  42ea30:	xor    al,BYTE PTR [esp+esi*4]
  42ea33:	xchg   esi,eax
  42ea34:	lods   eax,DWORD PTR ds:[esi]
  42ea35:	out    dx,al
  42ea36:	mul    BYTE PTR [eax+0x50]
  42ea39:	and    edx,DWORD PTR [ecx+0x1c3f6dbe]
  42ea3f:	dec    esi
  42ea40:	or     BYTE PTR [ecx-0x63],ch
  42ea43:	jne    0x42ea0b
  42ea45:	aas    
  42ea46:	sub    DWORD PTR [esi-0x30],0x186df12c
  42ea4d:	sbb    DWORD PTR [esi+0x50159ab1],ecx
  42ea53:	sbb    edi,DWORD PTR [eax+0x32]
  42ea56:	(bad)  ds:0x74a41732
  42ea5c:	jmp    0x4d831ddb
  42ea61:	js     0x42ea9a
  42ea63:	std    
  42ea64:	sbb    al,0x8
  42ea66:	cli    
  42ea67:	dec    edx
  42ea68:	ror    cl,cl
  42ea6a:	or     eax,DWORD PTR [edi+0x9]
  42ea6d:	inc    eax
  42ea6e:	bound  ebx,QWORD PTR [edx-0x70]
  42ea71:	mov    bl,0xbf
  42ea73:	push   edx
  42ea74:	data16 gs fs (bad) 
  42ea78:	cmp    DWORD PTR ds:0x7fed434f,ecx
  42ea7e:	push   edi
  42ea7f:	mov    BYTE PTR [eax-0x1186bf0b],cl
  42ea85:	ins    DWORD PTR es:[edi],dx
  42ea86:	add    ah,bh
  42ea88:	lods   al,BYTE PTR ds:[esi]
  42ea89:	cdq    
  42ea8a:	shl    BYTE PTR gs:[edi+0x73],1
  42ea8e:	jo     0x42ea49
  42ea90:	jge    0x42eae6
  42ea92:	call   0x60ce:0xc1ccf664
  42ea99:	ins    BYTE PTR es:[edi],dx
  42ea9a:	js     0x42ea87
  42ea9c:	loopne 0x42ea20
  42ea9e:	pop    ds
  42ea9f:	gs dec esi
  42eaa1:	pop    esi
  42eaa2:	jnp    0x42ea40
  42eaa4:	add    al,0x33
  42eaa6:	cwde   
  42eaa7:	dec    eax
  42eaa8:	adc    al,0xc5
  42eaaa:	aad    0x64
  42eaac:	sar    ah,0x8c
  42eaaf:	sbb    esi,ebp
  42eab1:	sub    eax,0xe46271fe
  42eab6:	pop    esp
  42eab7:	inc    eax
  42eab8:	xlat   BYTE PTR ds:[ebx]
  42eab9:	repnz addr16 add ecx,ecx
  42eabd:	jb     0x42ea4b
  42eabf:	jl     0x42eb16
  42eac1:	test   al,0xc5
  42eac3:	jle    0x42ea69
  42eac5:	gs repnz mov al,0xe5
  42eac9:	pop    ds
  42eaca:	adc    esp,DWORD PTR [ecx-0x31]
  42eacd:	adc    esi,DWORD PTR [ebp-0x5862b43]
  42ead3:	lock mov esi,cs
  42ead6:	or     DWORD PTR [edx],ebp
  42ead8:	dec    esp
  42ead9:	clc    
  42eada:	(bad)  
  42eadb:	int    0xb9
  42eadd:	ins    DWORD PTR es:[edi],dx
  42eade:	mov    DWORD PTR [esi+ecx*1-0x6c395fbd],esp
  42eae5:	push   ss
  42eae6:	cmc    
  42eae7:	mov    bh,dh
  42eae9:	cli    
  42eaea:	leave  
  42eaeb:	les    ebx,FWORD PTR [eax-0xb90a7d4]
  42eaf1:	xchg   DWORD PTR [eax-0x33ce17f8],edx
  42eaf7:	dec    esi
  42eaf8:	sti    
  42eaf9:	div    BYTE PTR [eax-0x55f39952]
  42eaff:	aas    
  42eb00:	pavgw  mm7,QWORD PTR [ebp+0x30f7d754]
  42eb07:	pushf  
  42eb08:	push   edx
  42eb09:	fcomp  QWORD PTR [ecx]
  42eb0b:	retf   
  42eb0c:	inc    esp
  42eb0d:	scas   al,BYTE PTR es:[edi]
  42eb0e:	fadd   DWORD PTR gs:0x4c0ed78b
  42eb15:	shl    BYTE PTR [ecx],0x93
  42eb18:	cld    
  42eb19:	adc    DWORD PTR [edi-0x577a7ab2],edx
  42eb1f:	jne    0x42eb3d
  42eb21:	and    BYTE PTR [ebx+0x53],ah
  42eb24:	inc    ebp
  42eb25:	lock cmp eax,0x44d871fa
  42eb2b:	mov    esi,0x6ac3af31
  42eb30:	fadd   QWORD PTR [ebp-0x30121325]
  42eb36:	sbb    al,0x0
  42eb38:	mov    bl,0xb8
  42eb3a:	sub    ah,ch
  42eb3c:	adc    BYTE PTR [ebp+0x24],bh
  42eb3f:	push   0x3d
  42eb41:	mov    WORD PTR [edi],?
  42eb43:	out    dx,eax
  42eb44:	inc    ecx
  42eb45:	xor    al,0x59
  42eb47:	sbb    BYTE PTR [ebx],cl
  42eb49:	ds push ecx
  42eb4b:	adc    al,0x48
  42eb4d:	ret    0x2458
  42eb50:	add    ecx,ecx
  42eb52:	daa    
  42eb53:	ret    0xcd92
  42eb56:	loop   0x42ebd4
  42eb58:	cli    
  42eb59:	pop    esp
  42eb5a:	xor    al,0x3e
  42eb5c:	jmp    0x247462b1
  42eb61:	imul   ebx,DWORD PTR [edi],0x655972df
  42eb67:	adc    al,0x3c
  42eb69:	dec    eax
  42eb6a:	or     bl,BYTE PTR [ecx+eax*4]
  42eb6d:	sbb    ecx,DWORD PTR [ebp+0x6c1b3f3a]
  42eb73:	jmp    0x42ebc9
  42eb75:	mov    ecx,0x843a10e9
  42eb7a:	ja     0x42eb0c
  42eb7c:	jb     0x42ebe5
  42eb7e:	pop    esi
  42eb7f:	aas    
  42eb80:	push   edx
  42eb81:	fisttp DWORD PTR [eax-0x44564b32]
  42eb87:	mov    edi,0x440f4bd8
  42eb8c:	jmp    0x14dfb7ed
  42eb91:	adc    dl,BYTE PTR [eax-0x7f63ae74]
  42eb97:	push   es
  42eb98:	(bad)
  42eb9b:	jns    0x42ec0a
  42eb9d:	adc    DWORD PTR [ecx+0x1e7a00a4],ebp
  42eba3:	jecxz  0x42ebd5
  42eba5:	xor    al,0xd0
  42eba7:	dec    eax
  42eba8:	enter  0xbf7d,0x84
  42ebac:	push   esp
  42ebad:	(bad)  
  42ebae:	nop
  42ebaf:	std    
  42ebb0:	mov    bl,0x70
  42ebb2:	lods   al,BYTE PTR ds:[esi]
  42ebb3:	ret    
  42ebb4:	retf   0x1ff6
  42ebb7:	inc    esi
  42ebb8:	ins    BYTE PTR es:[edi],dx
  42ebb9:	arpl   WORD PTR [ebx+eax*1-0x1d31223a],dx
  42ebc0:	cmp    DWORD PTR [eax+0x47],ecx
  42ebc3:	mov    eax,0x22d90bc7
  42ebc8:	pusha  
  42ebc9:	xchg   ebp,eax
  42ebca:	ins    DWORD PTR es:[edi],dx
  42ebcb:	cmp    esp,ebx
  42ebcd:	jl     0x42ebac
  42ebcf:	ret    0xf2e5
  42ebd2:	xor    ecx,edx
  42ebd4:	retf   0x4d00
  42ebd7:	jns    0x42ebe4
  42ebd9:	bound  esp,QWORD PTR [edi-0x57969148]
  42ebdf:	pop    ebx
  42ebe0:	or     eax,0xd4f7c65f
  42ebe5:	ja     0x42ebca
  42ebe7:	int3   
  42ebe8:	dec    eax
  42ebe9:	or     ebx,eax
  42ebeb:	in     eax,dx
  42ebec:	std    
  42ebed:	jecxz  0x42ebed
  42ebef:	inc    esp
  42ebf0:	lock pop esp
  42ebf2:	out    dx,eax
  42ebf3:	imul   DWORD PTR [esi+0x4e]
  42ebf6:	div    BYTE PTR [ebx]
  42ebf8:	jmp    0xd82b:0xcca04614
  42ebff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec00:	xor    DWORD PTR [ebp-0x4f031644],ebx
  42ec06:	xchg   ebp,eax
  42ec07:	loop   0x42ebfd
  42ec09:	adc    dh,al
  42ec0b:	loopne 0x42ec4b
  42ec0d:	call   DWORD PTR ds:0xe6a7a4bb
  42ec13:	stc    
  42ec14:	add    al,0x56
  42ec16:	sahf   
  42ec17:	out    dx,eax
  42ec18:	push   ds
  42ec19:	mov    dl,0x55
  42ec1b:	ins    BYTE PTR es:[edi],dx
  42ec1c:	pop    eax
  42ec1d:	sub    BYTE PTR [edi],dl
  42ec1f:	jmp    0x18b3:0xc9230a7f
  42ec26:	dec    esp
  42ec27:	inc    edx
  42ec28:	hlt    
  42ec29:	mov    bl,0x36
  42ec2b:	outs   dx,BYTE PTR ds:[esi]
  42ec2c:	dec    ebp
  42ec2d:	xor    eax,0xc626f4f8
  42ec32:	loop   0x42ebd3
  42ec34:	sub    esp,0xffffffcc
  42ec37:	and    BYTE PTR [eax],bl
  42ec39:	dec    ecx
  42ec3a:	gs aam 0xbe
  42ec3d:	jns    0x42ecb7
  42ec3f:	lfs    edi,FWORD PTR [esi*1-0x2e060875]
  42ec47:	dec    ecx
  42ec48:	jecxz  0x42ec3a
  42ec4a:	pusha  
  42ec4b:	es loop 0x42ec4f
  42ec4e:	(bad)  
  42ec4f:	xor    al,0x71
  42ec51:	(bad)  
  42ec53:	test   BYTE PTR [ebp+0x2ea2c7f3],dh
  42ec59:	ficom  DWORD PTR [eax+0x319c2cd4]
  42ec5f:	jno    0x42ec87
  42ec61:	and    cl,bl
  42ec63:	and    al,0xa2
  42ec65:	push   eax
  42ec66:	add    ah,bl
  42ec68:	pop    es
  42ec69:	ds xchg edx,eax
  42ec6b:	xchg   DWORD PTR [ecx-0x3d078be7],esi
  42ec71:	sub    al,0x82
  42ec73:	shl    ah,1
  42ec75:	add    al,0xeb
  42ec77:	cwde   
  42ec78:	push   cs
  42ec79:	idiv   edx
  42ec7b:	jl     0x42ec9b
  42ec7d:	inc    eax
  42ec7e:	call   0x4cdd2d81
  42ec83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec84:	adc    ch,BYTE PTR [edi-0x67]
  42ec87:	pop    ecx
  42ec88:	and    BYTE PTR [esi+edx*8-0x2d],ah
  42ec8c:	or     DWORD PTR [eax+ebp*4],esp
  42ec8f:	fimul  WORD PTR ds:0xa84d88f8
  42ec95:	inc    edi
  42ec96:	mov    dl,0x98
  42ec98:	ffree  st(3)
  42ec9a:	dec    eax
  42ec9b:	lods   al,BYTE PTR ds:[esi]
  42ec9c:	dec    edx
  42ec9d:	gs adc esi,esi
  42eca0:	shl    DWORD PTR [edi+esi*1-0x40],cl
  42eca4:	rcl    BYTE PTR [ecx],1
  42eca6:	push   eax
  42eca7:	call   0x7823:0x2f04b5e4
  42ecae:	fsubr  st,st(2)
  42ecb0:	mov    bl,0x1b
  42ecb2:	and    eax,DWORD PTR [eax]
  42ecb4:	scas   al,BYTE PTR es:[edi]
  42ecb5:	test   eax,0xcd5ffb9c
  42ecba:	mov    eax,0x782eb9bd
  42ecbf:	shl    BYTE PTR ds:0x8be5b334,0x2d
  42ecc6:	jg     0x42ed34
  42ecc8:	in     al,0x37
  42ecca:	mov    dh,0x95
  42eccc:	clc    
  42eccd:	popf   
  42ecce:	in     eax,0x26
  42ecd0:	loop   0x42ec5e
  42ecd2:	test   ebx,eax
  42ecd4:	sub    al,0x60
  42ecd6:	call   0x7e5:0xb0c8b786
  42ecdd:	scas   eax,DWORD PTR es:[edi]
  42ecde:	nop
  42ecdf:	repz ret 0xbd2f
  42ece3:	aam    0xcf
  42ece5:	loop   0x42ec8d
  42ece7:	push   0x5b74e728
  42ecec:	clc    
  42eced:	sbb    DWORD PTR [edx-0x27],esi
  42ecf0:	into   
  42ecf1:	clc    
  42ecf2:	lock push eax
  42ecf4:	push   es
  42ecf5:	sbb    al,0x52
  42ecf7:	ret    0x43c5
  42ecfa:	imul   ebp,DWORD PTR [esi+0xb],0xffffffa2
  42ecfe:	les    edx,FWORD PTR [ecx-0x183bc016]
  42ed04:	or     edx,DWORD PTR [edx+0x1a]
  42ed07:	call   0x33bd9725
  42ed0c:	psrlw  mm2,QWORD PTR [edi-0x4763f35b]
  42ed13:	int    0xd6
  42ed15:	mov    DWORD PTR [eax-0x5f],ebp
  42ed18:	adc    al,0x30
  42ed1a:	jnp    0x42ecaa
  42ed1c:	sub    eax,0xf8d7fdb7
  42ed21:	cli    
  42ed22:	fmul   DWORD PTR [ebx+0x3aa1cc25]
  42ed28:	ret    0xb41d
  42ed2b:	cld    
  42ed2c:	lock jmp 0x42ed10
  42ed2f:	cwde   
  42ed30:	rcr    BYTE PTR [edi-0x76],cl
  42ed33:	xchg   edx,eax
  42ed34:	and    BYTE PTR ds:0x356ae106,dl
  42ed3a:	xchg   ebp,eax
  42ed3b:	add    eax,0x46f9446a
  42ed40:	cli    
  42ed41:	(bad)  
  42ed42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed43:	or     edx,DWORD PTR [esi+0x7f768f5]
  42ed49:	shl    ch,1
  42ed4b:	mov    ds:0x1041c284,al
  42ed50:	jo     0x42ed06
  42ed52:	cmp    ebx,ebp
  42ed54:	outs   dx,BYTE PTR ds:[esi]
  42ed55:	or     edi,eax
  42ed57:	mov    ebp,0x4cd2834
  42ed5c:	cmp    esp,ebp
  42ed5e:	mov    bh,0xcc
  42ed60:	mov    ds,WORD PTR [eax-0x80]
  42ed63:	out    0x3a,eax
  42ed65:	add    DWORD PTR [ebx+eax*2],ebp
  42ed68:	sub    DWORD PTR [edx-0x644e7184],ecx
  42ed6e:	call   0xb48f14d0
  42ed73:	mov    al,ds:0xf5ef034d
  42ed78:	and    eax,0x487f7fde
  42ed7d:	mov    ah,0xfd
  42ed7f:	inc    ebp
  42ed80:	xor    eax,DWORD PTR [edi+0x6cc2f467]
  42ed86:	call   0x2445:0xd8affcc7
  42ed8d:	lods   eax,DWORD PTR ds:[esi]
  42ed8e:	nop
  42ed8f:	iret   
  42ed90:	push   ecx
  42ed91:	dec    esi
  42ed92:	pop    edx
  42ed93:	xchg   DWORD PTR [eax+0x7ab4c027],eax
  42ed99:	push   esp
  42ed9a:	cmc    
  42ed9b:	and    al,0xb5
  42ed9d:	loopne 0x42edab
  42ed9f:	push   ebx
  42eda0:	pop    esp
  42eda1:	dec    edx
  42eda2:	addr16 cli 
  42eda4:	push   ebx
  42eda5:	mov    ah,0x3a
  42eda7:	xchg   edi,eax
  42eda8:	or     eax,DWORD PTR [eax+0x168d4e09]
  42edae:	test   al,0xfc
  42edb0:	mov    cl,0x6b
  42edb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42edb3:	push   esp
  42edb4:	inc    ebx
  42edb5:	sub    BYTE PTR [edx+0x3a21fc19],cl
  42edbb:	enter  0xe85d,0xc1
  42edbf:	(bad)
  42edc2:	mov    ds:0xbc09ecf9,al
  42edc7:	xchg   ebp,eax
  42edc8:	cwde   
  42edc9:	(bad)  
  42edca:	pop    ebx
  42edcb:	and    ch,BYTE PTR [eax]
  42edcd:	xchg   esp,eax
  42edce:	mov    al,0x12
  42edd0:	sbb    edx,eax
  42edd2:	inc    ecx
  42edd3:	jns    0x42ee35
  42edd5:	mov    DWORD PTR [eax+0x14d3ad54],edi
  42eddb:	dec    ebp
  42eddc:	pusha  
  42eddd:	cld    
  42edde:	(bad)  
  42eddf:	fsubr  st(7),st
  42ede1:	leave  
  42ede2:	mov    esp,0x56057cb2
  42ede7:	jle    0x42ede9
  42ede9:	test   al,0x8e
  42edeb:	push   esp
  42edec:	(bad)  
  42eded:	jg     0x42ee08
  42edef:	dec    ecx
  42edf0:	or     BYTE PTR [eax-0x65b86dac],ch
  42edf6:	xchg   ecx,ecx
  42edf8:	xor    BYTE PTR [esi+0x14d20dcc],cl
  42edfe:	pop    edi
  42edff:	push   ss
  42ee00:	push   esi
  42ee01:	mov    dh,0x38
  42ee03:	lock mov WORD PTR [edi],gs
  42ee06:	mov    cl,0xc2
  42ee08:	leave  
  42ee09:	out    0x71,eax
  42ee0b:	inc    edi
  42ee0c:	adc    al,0x45
  42ee0e:	and    DWORD PTR [ecx-0x2a],ecx
  42ee11:	(bad)  
  42ee12:	popa   
  42ee13:	in     al,dx
  42ee14:	cmp    BYTE PTR gs:[eax-0x57],cl
  42ee18:	in     eax,0x7f
  42ee1a:	loopne 0x42ede3
  42ee1c:	mov    ch,0x7c
  42ee1e:	loopne 0x42edc5
  42ee20:	pop    edi
  42ee21:	mov    eax,eax
  42ee23:	inc    eax
  42ee24:	mov    edi,ebx
  42ee26:	xchg   BYTE PTR [ebx+edx*8],al
  42ee29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee2a:	dec    edi
  42ee2b:	stos   BYTE PTR es:[edi],al
  42ee2c:	nop
  42ee2d:	inc    edx
  42ee2e:	mov    esp,0x42d928a5
  42ee33:	je     0x42ee9f
  42ee35:	cmp    eax,0x4c48adf1
  42ee3a:	(bad)  
  42ee3b:	fnstcw WORD PTR [ebp-0x5e9114d3]
  42ee41:	in     eax,0x70
  42ee43:	out    dx,al
  42ee44:	adc    BYTE PTR [esi],0xd
  42ee47:	dec    ecx
  42ee48:	shl    esi,0xc9
  42ee4b:	sbb    BYTE PTR [ebx],dh
  42ee4d:	jmp    0x8aea:0xa6bc132c
  42ee54:	cmp    al,0x5d
  42ee56:	jno    0x42ee1b
  42ee58:	jno    0x42eecb
  42ee5a:	push   eax
  42ee5b:	das    
  42ee5c:	push   ss
  42ee5d:	pusha  
  42ee5e:	mov    bl,0x69
  42ee60:	imul   ebp,ecx,0x63
  42ee63:	xor    dl,ch
  42ee65:	int3   
  42ee66:	test   BYTE PTR [ebp+esi*8+0x51],cl
  42ee6a:	cmp    DWORD PTR [ebp+ecx*1-0x48d3a8a1],ebp
  42ee71:	xchg   edi,eax
  42ee72:	cmp    al,0x5b
  42ee74:	xor    bl,BYTE PTR [edx-0x7aafa35f]
  42ee7a:	dec    edi
  42ee7b:	retf   
  42ee7c:	nop
  42ee7d:	js     0x42eec9
  42ee7f:	push   0xfffffff7
  42ee81:	je     0x42ee88
  42ee83:	pop    edi
  42ee84:	mov    ds:0xf4440aa5,al
  42ee89:	int    0x98
  42ee8b:	fidivr WORD PTR [ebp-0x4176c09a]
  42ee91:	mov    eax,0x2c8fbcbe
  42ee96:	addr16 ret 
  42ee98:	push   edx
  42ee99:	into   
  42ee9a:	retf   
  42ee9b:	(bad)  
  42ee9c:	fs ins DWORD PTR es:[edi],dx
  42ee9e:	repz je 0x42ee28
  42eea1:	std    
  42eea2:	and    al,0x1
  42eea4:	mov    esi,0x5a481988
  42eea9:	xchg   ecx,ecx
  42eeab:	mov    ebp,0x78ac51de
  42eeb0:	(bad)  
  42eeb1:	xor    al,0x6c
  42eeb3:	xor    al,0x83
  42eeb5:	mov    bl,BYTE PTR [edx-0x58bf6b30]
  42eebb:	ss into 
  42eebd:	out    0xf6,al
  42eebf:	and    BYTE PTR [eax-0x18],bh
  42eec2:	daa    
  42eec3:	rol    DWORD PTR [ebx+0x79496c6f],1
  42eec9:	pushf  
  42eeca:	retf   
  42eecb:	adc    eax,0x4303aa1c
  42eed0:	fs sub al,al
  42eed3:	out    dx,al
  42eed4:	outs   dx,DWORD PTR ds:[esi]
  42eed5:	push   0x29
  42eed7:	cmp    BYTE PTR [eax-0x52],0xd8
  42eedb:	in     al,0x95
  42eedd:	scas   eax,DWORD PTR es:[edi]
  42eede:	scas   al,BYTE PTR es:[edi]
  42eedf:	out    0x5f,eax
  42eee1:	xchg   ebp,eax
  42eee2:	es daa 
  42eee4:	or     dl,bl
  42eee6:	int3   
  42eee7:	es xchg esp,ecx
  42eeea:	pop    esi
  42eeeb:	in     eax,dx
  42eeec:	mov    esi,DWORD PTR [eax+0x6db138a6]
  42eef2:	sbb    dh,BYTE PTR [edx+0x1b]
  42eef5:	push   edi
  42eef6:	aam    0x98
  42eef8:	sub    al,0x4
  42eefa:	xchg   edi,eax
  42eefb:	cmc    
  42eefc:	jl     0x42ef48
  42eefe:	(bad)  
  42eeff:	clc    
  42ef00:	xor    bh,BYTE PTR [ebx+ecx*2-0x4935462a]
  42ef07:	sbb    bl,BYTE PTR [edx+edi*8]
  42ef0a:	std    
  42ef0b:	fisubr DWORD PTR [esi-0x341617ab]
  42ef11:	inc    eax
  42ef12:	in     eax,dx
  42ef13:	jecxz  0x42ef07
  42ef15:	push   ecx
  42ef16:	out    dx,eax
  42ef17:	fwait
  42ef18:	mov    ebx,0x713ce894
  42ef1d:	(bad)  
  42ef1e:	pop    edx
  42ef1f:	add    ecx,DWORD PTR [esi-0x2d]
  42ef22:	add    eax,0x7c39fa0c
  42ef27:	outs   dx,BYTE PTR ds:[esi]
  42ef28:	mul    esp
  42ef2a:	sbb    ebx,DWORD PTR [edx+0x30]
  42ef2d:	cdq    
  42ef2e:	ficom  WORD PTR [edx]
  42ef30:	inc    eax
  42ef31:	ds sbb al,0xc7
  42ef34:	sbb    eax,0xd789cd54
  42ef39:	push   ebp
  42ef3a:	and    BYTE PTR [edx],al
  42ef3c:	lahf   
  42ef3d:	(bad)  
  42ef3e:	cld    
  42ef3f:	addr16 inc edi
  42ef41:	ss pusha 
  42ef43:	ins    DWORD PTR es:[edi],dx
  42ef44:	call   0xf7639f5a
  42ef49:	and    bl,BYTE PTR [edi]
  42ef4b:	aad    0x40
  42ef4d:	nop/reserved BYTE PTR [edi-0x2629a5bc]
  42ef54:	xor    ch,ah
  42ef56:	xchg   edi,eax
  42ef57:	(bad)
  42ef5a:	xchg   esi,eax
  42ef5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef5c:	xor    eax,0xdfbfb375
  42ef61:	xchg   ecx,eax
  42ef62:	mov    WORD PTR [ebx],?
  42ef64:	dec    ecx
  42ef65:	(bad)  
  42ef66:	fisub  WORD PTR [edx]
  42ef68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef69:	stc    
  42ef6a:	shl    DWORD PTR [esp+esi*4],cl
  42ef6d:	mov    ds:0x90ce09ec,eax
  42ef72:	adc    edi,DWORD PTR [ebx]
  42ef74:	pop    eax
  42ef75:	inc    eax
  42ef76:	ret    
  42ef77:	(bad)  
  42ef78:	pop    ds
  42ef79:	push   ebp
  42ef7a:	xor    eax,0x3d7ce427
  42ef7f:	jns    0x42ef85
  42ef81:	dec    eax
  42ef82:	dec    esi
  42ef83:	jecxz  0x42efc2
  42ef85:	mov    bl,0xa0
  42ef87:	push   ebp
  42ef88:	adc    eax,0xbd16d700
  42ef8d:	icebp  
  42ef8e:	add    al,0x48
  42ef90:	dec    edx
  42ef91:	xor    eax,0x4af8fe25
  42ef96:	push   ecx
  42ef97:	ret    
  42ef98:	ins    BYTE PTR es:[edi],dx
  42ef99:	dec    esp
  42ef9a:	mov    esp,0x8c2340
  42ef9f:	stos   DWORD PTR es:[edi],eax
  42efa0:	call   0x618fc235
  42efa5:	adc    BYTE PTR [edx-0x4b13a505],0x17
  42efac:	mov    eax,0x7bd144a2
  42efb1:	adc    eax,0x1a2ed832
  42efb6:	mov    cl,0x62
  42efb8:	inc    ebp
  42efb9:	inc    edx
  42efba:	fbld   TBYTE PTR [esi-0x80]
  42efbd:	lahf   
  42efbe:	mov    esi,0xdb784ce2
  42efc3:	jmp    0x42ef68
  42efc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42efc6:	and    ebx,esp
  42efc8:	(bad)  
  42efc9:	sbb    al,0x80
  42efcb:	mov    BYTE PTR [ecx+0x75fc8e9],ch
  42efd1:	pop    eax
  42efd2:	jns    0x42ef9d
  42efd4:	dec    edx
  42efd5:	stos   DWORD PTR es:[edi],eax
  42efd6:	sub    al,0xec
  42efd8:	xchg   ecx,eax
  42efd9:	jge    0x42ef61
  42efdb:	mov    ah,0xdc
  42efdd:	bound  edx,QWORD PTR [ebp+0x52a91010]
  42efe3:	push   ebp
  42efe4:	idiv   esp
  42efe6:	mov    al,ds:0x3eb816e9
  42efeb:	sbb    DWORD PTR [esi+0x32],edx
  42efee:	loope  0x42efeb
  42eff0:	aam    0xd5
  42eff2:	fmul   QWORD PTR [edi]
  42eff4:	lds    esi,FWORD PTR [edx]
  42eff6:	scas   al,BYTE PTR es:[edi]
  42eff7:	(bad)  
  42eff8:	sar    BYTE PTR [ebx-0xc],1
  42effb:	add    BYTE PTR [ebp-0x5],ah
  42effe:	dec    ecx
  42efff:	out    dx,al
  42f000:	popf   
  42f001:	push   esi
  42f002:	iret   
  42f003:	frstor [esi+ecx*8]
  42f006:	xor    eax,0xd816df2c
  42f00b:	mov    al,ds:0x67f4cc4f
  42f010:	adc    cl,BYTE PTR [edi-0x1]
  42f013:	push   edx
  42f014:	sbb    al,0x61
  42f016:	lock pop ecx
  42f018:	les    ecx,FWORD PTR [eax]
  42f01a:	rcr    dh,0xc2
  42f01d:	push   ds
  42f01e:	sbb    dl,BYTE PTR [esp+edi*1]
  42f021:	jae    0x42f070
  42f023:	ret    
  42f024:	lods   al,BYTE PTR ds:[esi]
  42f025:	mov    dl,0xcb
  42f027:	jmp    0x11f27464
  42f02c:	jae    0x42efe1
  42f02e:	int3   
  42f02f:	sub    ebx,DWORD PTR [edx+0x5c]
  42f032:	cmc    
  42f033:	push   ds
  42f034:	push   ss
  42f035:	sahf   
  42f036:	and    eax,esp
  42f038:	mov    al,ds:0x1c930481
  42f03d:	push   esp
  42f03e:	rcr    BYTE PTR [edx-0x38],cl
  42f041:	xor    BYTE PTR [edx],bl
  42f043:	sub    BYTE PTR [ebx-0x39],dl
  42f046:	cld    
  42f047:	pop    es
  42f048:	std    
  42f049:	ror    BYTE PTR [esi-0x6f],0x4c
  42f04d:	pusha  
  42f04e:	loopne 0x42f090
  42f050:	push   ecx
  42f051:	mov    ds:0x705fd4fa,eax
  42f056:	adc    edx,esi
  42f058:	mov    eax,ds:0x4fcbfab7
  42f05d:	int3   
  42f05e:	sbb    BYTE PTR [ebp+0x6a6b8eff],bl
  42f064:	enter  0x3765,0x3c
  42f068:	jecxz  0x42f083
  42f06a:	(bad)  
  42f06b:	mov    al,ds:0x9ecc45fe
  42f070:	pusha  
  42f071:	cmp    eax,0xec263dc3
  42f076:	fwait
  42f077:	add    DWORD PTR [esp+eax*4],ecx
  42f07a:	and    eax,0xf95c1bfd
  42f07f:	or     al,0x27
  42f081:	pop    ss
  42f082:	test   al,0x9d
  42f084:	adc    eax,0xc7036470
  42f089:	mov    BYTE PTR [esi+0x50],0x3e
  42f08d:	jecxz  0x42f0f0
  42f08f:	lidtd  [ebx+0x4d74ab22]
  42f096:	xchg   ebp,eax
  42f097:	inc    ecx
  42f098:	cmp    DWORD PTR [edi-0x6b],ebx
  42f09b:	fisttp DWORD PTR [ecx-0x68]
  42f09e:	mov    ds,WORD PTR [ebx-0x5ff7b413]
  42f0a4:	jns    0x42f044
  42f0a6:	mov    esp,0xe918af25
  42f0ab:	push   0x63
  42f0ad:	mov    ch,0x3d
  42f0af:	loopne 0x42f0ed
  42f0b1:	adc    al,0xa5
  42f0b3:	sbb    BYTE PTR [ebp+0x52],0x1
  42f0b7:	mov    ecx,0x3aec1088
  42f0bc:	sub    dl,BYTE PTR [eax]
  42f0be:	push   0xffffffe9
  42f0c0:	xchg   DWORD PTR [eax+ebx*2+0xeccd2db],ebp
  42f0c7:	xor    eax,0xf5d0dfe9
  42f0cc:	idiv   DWORD PTR [edx]
  42f0ce:	stc    
  42f0cf:	jne    0x42f0d2
  42f0d1:	push   ss
  42f0d2:	inc    ebx
  42f0d3:	hlt    
  42f0d4:	int3   
  42f0d5:	xchg   esi,eax
  42f0d6:	es push ds
  42f0d8:	(bad)  
  42f0d9:	aam    0x1a
  42f0db:	inc    edi
  42f0dc:	pushf  
  42f0dd:	or     al,0x14
  42f0df:	add    edi,edx
  42f0e1:	inc    edi
  42f0e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0e3:	jae    0x42f069
  42f0e5:	shl    BYTE PTR [ebp+0x2a],0x51
  42f0e9:	loope  0x42f08d
  42f0eb:	es shr dh,1
  42f0ee:	in     al,0x4b
  42f0f0:	es loope 0x42f0ee
  42f0f3:	sub    eax,0x84bd35b
  42f0f8:	je     0x42f0ba
  42f0fa:	retf   
  42f0fb:	scas   eax,DWORD PTR es:[edi]
  42f0fc:	in     eax,dx
  42f0fd:	gs push ebx
  42f0ff:	pop    ebx
  42f100:	sub    al,0xe5
  42f102:	stos   DWORD PTR es:[edi],eax
  42f103:	js     0x42f0ec
  42f105:	enter  0xc5e3,0xbf
  42f109:	aam    0xfa
  42f10b:	into   
  42f10c:	push   0xffffff90
  42f10e:	mov    ch,bl
  42f110:	mov    eax,0x3a60f834
  42f115:	xlat   BYTE PTR ds:[ebx]
  42f116:	enter  0x334,0xcb
  42f11a:	rcr    BYTE PTR [edi*4-0x182ee6d1],0xea
  42f122:	(bad)  
  42f123:	sbb    DWORD PTR [eax+0x7f],eax
  42f126:	xor    al,BYTE PTR [esi-0x29]
  42f129:	jo     0x42f128
  42f12b:	mov    eax,0x9e30e8d1
  42f130:	cmc    
  42f131:	in     al,dx
  42f132:	cmp    cl,BYTE PTR [ebx-0x2f341e7]
  42f138:	inc    esp
  42f139:	and    bh,BYTE PTR ds:0xd3473543
  42f13f:	xor    BYTE PTR [ebx],ch
  42f141:	out    0xda,al
  42f143:	sub    BYTE PTR [ecx+0x5405f207],ah
  42f149:	mov    eax,ds:0xb96c2bce
  42f14e:	xchg   esi,eax
  42f14f:	or     ebx,eax
  42f151:	js     0x42f1ba
  42f153:	out    0x52,al
  42f155:	(bad)  
  42f156:	sbb    BYTE PTR ds:0x4e204cab,0x6f
  42f15d:	leave  
  42f15e:	(bad)  
  42f15f:	fisub  WORD PTR [ebx-0x28]
  42f162:	sbb    DWORD PTR [edi+edi*4-0x49],eax
  42f166:	or     eax,0x69bcaae5
  42f16b:	push   0x68
  42f16d:	adc    BYTE PTR [ebx+0xf],bl
  42f170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f171:	dec    ecx
  42f172:	sbb    dl,BYTE PTR [ecx+0x26]
  42f175:	mov    WORD PTR [edi-0x4169db33],ds
  42f17b:	pop    ds
  42f17c:	fimul  DWORD PTR [esi+0x34]
  42f17f:	shl    DWORD PTR [eax-0x3b],cl
  42f182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f183:	iret   
  42f184:	int3   
  42f185:	out    0xbd,al
  42f187:	pop    eax
  42f188:	out    0xbd,eax
  42f18a:	retf   0x9608
  42f18d:	jo     0x42f1aa
  42f18f:	cs jl  0x42f203
  42f192:	pushf  
  42f193:	retf   0x26fe
  42f196:	test   edx,edi
  42f198:	mov    al,ds:0xbbb89038
  42f19e:	adc    eax,0xc4d677bb
  42f1a3:	mov    dl,BYTE PTR [eax+0x4814725]
  42f1a9:	sub    ch,ch
  42f1ab:	ins    BYTE PTR es:[edi],dx
  42f1ac:	ss popf 
  42f1ae:	mov    bh,0x77
  42f1b0:	jmp    0x42f1d2
  42f1b2:	adc    al,0xa4
  42f1b4:	nop
  42f1b5:	mov    esi,0x7d58e4e2
  42f1ba:	retf   0xb8c
  42f1bd:	mov    ah,0xcf
  42f1bf:	pushf  
  42f1c0:	pop    eax
  42f1c1:	xor    DWORD PTR [ecx],ecx
  42f1c3:	ds or  ch,bl
  42f1c6:	fsubr  DWORD PTR [eax-0x6a]
  42f1c9:	mov    ecx,0xe29728be
  42f1ce:	ds cld 
  42f1d0:	das    
  42f1d1:	xor    ecx,DWORD PTR [ebp-0x65]
  42f1d4:	dec    ebp
  42f1d5:	adc    al,0x4
  42f1d7:	or     al,0xa4
  42f1d9:	jecxz  0x42f223
  42f1db:	loopne 0x42f1a2
  42f1dd:	out    dx,eax
  42f1de:	stos   BYTE PTR es:[edi],al
  42f1df:	test   BYTE PTR [ebx-0x7cdc4d38],ch
  42f1e5:	inc    esp
  42f1e6:	cs xchg esp,eax
  42f1e8:	cmp    cl,BYTE PTR [esi-0x14]
  42f1eb:	loope  0x42f1a5
  42f1ed:	xor    edx,esp
  42f1ef:	inc    ebx
  42f1f0:	cmp    DWORD PTR [eax+ecx*2+0x10],esi
  42f1f4:	xchg   ebp,eax
  42f1f5:	mov    es,WORD PTR [edi-0x7c]
  42f1f8:	stos   DWORD PTR es:[edi],eax
  42f1f9:	cmp    DWORD PTR [ecx],edi
  42f1fb:	mov    ax,0x3773
  42f1ff:	fwait
  42f200:	cs push esp
  42f202:	and    BYTE PTR [eax],dh
  42f204:	adc    al,0xdc
  42f206:	(bad)  
  42f207:	fcom   QWORD PTR [edi]
  42f209:	add    BYTE PTR [esi+0x15],ah
  42f20c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42f20e:	add    BYTE PTR ds:0xe76b17d5,bl
  42f214:	dec    esp
  42f215:	pushf  
  42f216:	scas   al,BYTE PTR es:[edi]
  42f217:	and    al,0xf2
  42f219:	sar    edx,cl
  42f21b:	pop    ss
  42f21c:	push   esp
  42f21d:	daa    
  42f21e:	or     edi,DWORD PTR [ebx+0xd82aa48]
  42f224:	fist   WORD PTR [ecx]
  42f226:	setle  dl
  42f229:	lock mov BYTE PTR [eax+0x76],bl
  42f22d:	jo     0x42f1e1
  42f22f:	mov    ch,0x40
  42f231:	sub    DWORD PTR [edi+edx*8],edx
  42f234:	dec    esi
  42f235:	jg     0x42f267
  42f237:	lds    edx,FWORD PTR [eax-0x7b]
  42f23a:	call   0x72cf5b77
  42f23f:	mov    dl,0x40
  42f241:	(bad)  
  42f243:	dec    ebx
  42f244:	pop    esp
  42f245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f246:	mov    ds:0xc26a56b,al
  42f24b:	leave  
  42f24c:	mov    ah,0x4
  42f24e:	and    BYTE PTR [ecx-0x6013a401],0x22
  42f255:	mov    al,0x28
  42f257:	mov    DWORD PTR [ecx+0x193cbaa6],esi
  42f25d:	ds call 0xa573ecaf
  42f263:	nop
  42f264:	add    al,0xbc
  42f266:	or     eax,0x69cc7055
  42f26b:	cmp    eax,0xacac5977
  42f270:	inc    edi
  42f271:	xchg   esp,eax
  42f272:	(bad)  
  42f274:	add    eax,0xc1d8323a
  42f279:	add    al,0x3c
  42f27b:	fwait
  42f27c:	je     0x42f2c0
  42f27e:	dec    edx
  42f27f:	in     eax,0x47
  42f281:	ins    BYTE PTR es:[edi],dx
  42f282:	inc    ecx
  42f283:	add    BYTE PTR [eax],al
  42f285:	add    BYTE PTR [eax],al
  42f287:	add    BYTE PTR [ebp+edx*1-0x7b],ah
  42f28b:	inc    eax
  42f28c:	push   ecx
  42f28d:	or     DWORD PTR [eax],eax
  42f28f:	add    BYTE PTR [eax],al
  42f291:	add    BYTE PTR [eax],al
  42f293:	add    BYTE PTR [ecx+0x9],dl
  42f296:	add    BYTE PTR [eax],al
  42f298:	cmp    al,0x0
  42f29a:	es jl  0x42f29d
  42f29d:	add    dh,BYTE PTR [esi]
  42f29f:	or     BYTE PTR [eax],al
  42f2a1:	add    ah,al
  42f2a3:	inc    ebp
  42f2a4:	add    BYTE PTR [ebx+0x53ede642],bh
  42f2aa:	ror    ebx,cl
  42f2ac:	dec    ebp
  42f2ad:	and    al,0xb6
  42f2af:	cmp    al,0xd6
  42f2b1:	push   0x1046014b
  42f2b6:	dec    eax
  42f2b7:	push   ds
  42f2b8:	lods   eax,DWORD PTR ds:[esi]
  42f2b9:	xlat   BYTE PTR ds:[ebx]
  42f2ba:	and    al,0x8
  42f2bc:	mov    eax,0x316c9664
  42f2c1:	mov    fs,WORD PTR [esi+esi*8+0x5eb3f954]
  42f2c8:	nop
  42f2c9:	jp     0x42f32c
  42f2cb:	sahf   
  42f2cc:	adc    al,0xec
  42f2ce:	shl    DWORD PTR [esi+0x57053846],1
  42f2d4:	enter  0x7928,0x1a
  42f2d8:	mov    ss,WORD PTR [ecx+0x5c]
  42f2db:	xor    ebx,ebx
  42f2dd:	jle    0x42f35d
  42f2df:	and    dh,cl
  42f2e1:	div    BYTE PTR [ecx-0x454bb880]
  42f2e7:	mov    eax,0x758771c4
  42f2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f2ed:	inc    ecx
  42f2ee:	fsubr  QWORD PTR [ecx+0x5c]
  42f2f1:	retf   
  42f2f2:	retf   
  42f2f3:	jmp    0x82f7:0x1f784ce2
  42f2fa:	adc    ah,al
  42f2fc:	ret    0x705f
  42f2ff:	add    al,0x10
  42f301:	mov    dh,BYTE PTR [eax-0x15]
  42f304:	adc    al,0xc4
  42f306:	imul   edx,DWORD PTR [ebx+ebp*2-0x422660a],0xffffffa9
  42f30e:	jbe    0x42f34d
  42f310:	mov    eax,0x97ca4df7
  42f315:	daa    
  42f316:	icebp  
  42f317:	in     al,0xbc
  42f319:	fcomp  QWORD PTR [ecx-0x5e]
  42f31c:	js     0x42f32f
  42f31e:	mov    BYTE PTR [ebp-0x7e],dh
  42f321:	adc    DWORD PTR [ebp+eax*4-0x4ccb65ea],eax
  42f328:	lea    edi,[ecx+0x5cb5a826]
  42f32e:	xchg   esi,eax
  42f32f:	push   0xffffff88
  42f331:	das    
  42f332:	les    esp,FWORD PTR [ecx-0x646cb934]
  42f338:	nop
  42f339:	dec    ebx
  42f33a:	in     al,0x22
  42f33c:	daa    
  42f33d:	lock mov BYTE PTR [esp+ebp*8-0x3d],bh
  42f342:	xchg   ebx,eax
  42f343:	idiv   BYTE PTR [ebp+0x54bf14a4]
  42f349:	pusha  
  42f34a:	int3   
  42f34b:	inc    esp
  42f34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f34d:	imul   ebp,DWORD PTR [edi-0x4de22044],0xffffff95
  42f354:	push   ss
  42f355:	imul   ebp,ebx,0x53
  42f358:	loopne 0x42f39d
  42f35a:	ins    BYTE PTR es:[edi],dx
  42f35b:	js     0x42f393
  42f35d:	pusha  
  42f35e:	push   edx
  42f35f:	pusha  
  42f360:	cs add al,0xfb
  42f363:	pushf  
  42f364:	push   eax
  42f365:	add    eax,0x68d73ec0
  42f36a:	sub    BYTE PTR [ecx],cl
  42f36c:	fisubr WORD PTR [ebx-0x5b]
  42f36f:	cmp    DWORD PTR [ebx+0x65d0d6af],edi
  42f375:	push   ss
  42f376:	mov    eax,ds:0x85701148
  42f37b:	mov    esp,?
  42f37d:	stc    
  42f37e:	je     0x42f3ba
  42f380:	xor    eax,0x5b64f5d6
  42f385:	sbb    ah,dl
  42f387:	aad    0x8e
  42f389:	xlat   BYTE PTR ds:[ebx]
  42f38a:	push   edx
  42f38b:	xchg   ecx,eax
  42f38c:	push   ebx
  42f38d:	jnp    0x42f3cb
  42f38f:	inc    eax
  42f390:	test   BYTE PTR [ecx+0x14ac746e],0xb0
  42f397:	pusha  
  42f398:	cmp    ebp,DWORD PTR [eax]
  42f39a:	mov    bh,0x9c
  42f39c:	fild   DWORD PTR cs:[edx+0x42]
  42f3a0:	or     BYTE PTR [ebp-0x3066d66e],cl
  42f3a6:	test   DWORD PTR [edi+ebx*8+0x1d148b2c],0xb905d277
  42f3b1:	fcom   QWORD PTR [eax-0x70]
  42f3b4:	fwait
  42f3b5:	imul   eax,DWORD PTR [eax-0x22],0xffffffc7
  42f3b9:	cs pop edi
  42f3bb:	je     0x42f3cd
  42f3bd:	ja     0x42f3b2
  42f3bf:	repnz or ah,BYTE PTR [edx]
  42f3c2:	(bad)  
  42f3c3:	adc    DWORD PTR [ecx*2+0x721ae109],ebx
  42f3ca:	iret   
  42f3cb:	and    eax,0x74089
  42f3d0:	sbb    bh,ch
  42f3d2:	es popa 
  42f3d4:	iret   
  42f3d5:	mov    ebp,0xb50d8664
  42f3da:	and    eax,ecx
  42f3dc:	dec    edi
  42f3dd:	ret    
  42f3de:	hlt    
  42f3df:	mov    bl,bh
  42f3e1:	outs   dx,BYTE PTR ds:[esi]
  42f3e2:	sub    al,0xba
  42f3e4:	adc    DWORD PTR [eax-0x55],ecx
  42f3e7:	sub    DWORD PTR [edi+edx*1-0x20d30b30],0x74
  42f3ef:	inc    esi
  42f3f0:	sub    dl,BYTE PTR [eax+ebp*8-0x45]
  42f3f4:	aaa    
  42f3f5:	jmp    DWORD PTR [eax]
  42f3f7:	int3   
  42f3f8:	sub    al,0x3d
  42f3fa:	js     0x42f3c3
  42f3fc:	and    DWORD PTR [edi],edi
  42f3fe:	push   0xde455e00
  42f403:	pushf  
  42f404:	mov    DWORD PTR [ebx],ecx
  42f406:	xor    BYTE PTR [edi+0x3c],ch
  42f409:	jo     0x42f440
  42f40b:	mov    ebp,0x235b9ec0
  42f410:	sub    BYTE PTR [ebx],0xf0
  42f413:	sahf   
  42f414:	and    esp,esp
  42f416:	les    ebx,FWORD PTR [ebp*8-0x394d9a2f]
  42f41d:	xchg   ecx,eax
  42f41e:	mov    edi,fs
  42f420:	loope  0x42f44e
  42f422:	dec    esi
  42f423:	daa    
  42f424:	mov    al,ds:0xddb000d4
  42f429:	and    ecx,esp
  42f42b:	cmp    eax,0xe9b0f421
  42f430:	aam    0x53
  42f432:	xlat   BYTE PTR ds:[ebx]
  42f433:	bound  eax,QWORD PTR [eax+esi*2+0x18]
  42f437:	push   edi
  42f438:	fdivr  st,st(0)
  42f43a:	ret    0x608b
  42f43d:	push   ds
  42f43e:	js     0x42f3c3
  42f440:	mov    bl,0xef
  42f442:	mov    al,ds:0xba2c6181
  42f447:	into   
  42f448:	lds    ecx,FWORD PTR [edx+0xec1c4c9]
  42f44e:	nop
  42f44f:	aaa    
  42f450:	lahf   
  42f451:	imul   esp,DWORD PTR [ecx+ebp*4-0x18],0xffffff90
  42f456:	stos   DWORD PTR es:[edi],eax
  42f457:	add    eax,0xa92f2acc
  42f45c:	lods   al,BYTE PTR ds:[esi]
  42f45d:	or     al,0x7f
  42f45f:	fsubp  st(2),st
  42f461:	xor    eax,DWORD PTR [eax]
  42f463:	lahf   
  42f464:	aaa    
  42f465:	fbstp  TBYTE PTR [eax]
  42f467:	(bad)  
  42f469:	push   es
  42f46a:	cdq    
  42f46b:	pop    ebx
  42f46c:	jle    0x42f445
  42f46e:	adc    al,0xd8
  42f470:	push   0x17b24e05
  42f475:	pop    eax
  42f476:	cli    
  42f477:	jg     0x42f475
  42f479:	xchg   edi,eax
  42f47a:	adc    bl,dl
  42f47c:	das    
  42f47d:	or     eax,DWORD PTR [ebx+0x7d207a80]
  42f483:	cmp    al,0xd2
  42f485:	mov    edx,0x8a1eba10
  42f48a:	inc    esp
  42f48b:	push   esi
  42f48c:	push   esi
  42f48d:	in     al,dx
  42f48e:	pusha  
  42f48f:	fist   WORD PTR [ecx+0x27]
  42f492:	(bad)  
  42f493:	in     al,dx
  42f494:	dec    ebp
  42f495:	jns    0x42f4c8
  42f497:	inc    ebx
  42f498:	retf   
  42f499:	div    BYTE PTR [edi-0x30b9efd5]
  42f49f:	cmp    DWORD PTR [esi+0x7c76204a],edi
  42f4a5:	xor    al,0x70
  42f4a7:	into   
  42f4a8:	inc    edi
  42f4a9:	inc    esi
  42f4aa:	clc    
  42f4ab:	sbb    eax,0x9658f07c
  42f4b0:	mov    ah,0x98
  42f4b2:	sbb    eax,0xaf512766
  42f4b7:	jl     0x42f456
  42f4b9:	bnd ja 0x42f478
  42f4bc:	cli    
  42f4bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f4be:	cwde   
  42f4bf:	loop   0x42f4e5
  42f4c1:	push   ebp
  42f4c2:	(bad)  [ebp-0x4a6bf124]
  42f4c8:	xchg   edx,eax
  42f4c9:	dec    eax
  42f4ca:	xor    ch,cl
  42f4cc:	push   ecx
  42f4cd:	jl     0x42f491
  42f4cf:	icebp  
  42f4d0:	test   BYTE PTR [ecx],cl
  42f4d2:	ins    BYTE PTR es:[edi],dx
  42f4d3:	int3   
  42f4d4:	xor    BYTE PTR [ebx+0x6329df58],ah
  42f4da:	aam    0x90
  42f4dc:	xor    ah,dl
  42f4de:	lods   eax,DWORD PTR ds:[esi]
  42f4df:	pop    esp
  42f4e0:	push   esi
  42f4e1:	sahf   
  42f4e2:	push   0x6d
  42f4e4:	mov    ah,0xc
  42f4e6:	enter  0x8eb,0xc3
  42f4ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f4eb:	imul   ecx,DWORD PTR [esi],0x5c
  42f4ee:	fld    TBYTE PTR [ebp+0x7418d71e]
  42f4f4:	in     al,dx
  42f4f5:	mov    eax,DWORD PTR [eax+0xe0241a8]
  42f4fb:	aam    0xf9
  42f4fd:	pop    es
  42f4fe:	jae    0x42f4a4
  42f500:	push   cs
  42f501:	jmp    0x25236395
  42f506:	fdivr  QWORD PTR [eax+ecx*8]
  42f509:	into   
  42f50a:	adc    BYTE PTR [edx+0x5b],ah
  42f50d:	in     eax,0x81
  42f50f:	add    al,0x9a
  42f511:	jo     0x42f545
  42f513:	jge    0x42f58e
  42f515:	retf   0x70a5
  42f518:	mov    esp,DWORD PTR [edx]
  42f51a:	xchg   esp,eax
  42f51b:	push   ebx
  42f51c:	pop    ds
  42f51d:	inc    ecx
  42f51e:	lock jb 0x42f579
  42f521:	mov    dh,0x79
  42f523:	mov    eax,0x45998fd9
  42f528:	inc    cl
  42f52a:	xchg   esp,eax
  42f52b:	adc    eax,0x1eecd4dc
  42f530:	sub    edx,esi
  42f532:	sbb    DWORD PTR [esi],edx
  42f534:	mov    bh,0x0
  42f536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f537:	xchg   ebx,eax
  42f538:	inc    edi
  42f539:	pop    ds
  42f53a:	sub    edi,esi
  42f53c:	sbb    edx,DWORD PTR [ebp-0x38e07e58]
  42f542:	pop    edx
  42f543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f544:	call   0xe462:0x4ecc8ff6
  42f54b:	(bad)  
  42f54c:	mov    bl,0x8a
  42f54e:	pop    esp
  42f54f:	pusha  
  42f550:	lock sbb DWORD PTR [ecx+0x7d],0xbcdb15e1
  42f558:	clc    
  42f559:	adc    al,0xbb
  42f55b:	dec    ebp
  42f55c:	enter  0x6a76,0x55
  42f560:	dec    edi
  42f561:	test   al,0xbc
  42f563:	ja     0x42f5d0
  42f565:	loope  0x42f59f
  42f567:	pushf  
  42f568:	aaa    
  42f569:	sub    ecx,DWORD PTR [edx-0x52f3c120]
  42f56f:	xchg   ebx,eax
  42f570:	test   al,0x9f
  42f572:	js     0x42f5bf
  42f574:	add    al,0x57
  42f576:	push   eax
  42f577:	inc    ecx
  42f578:	mov    esi,0x1cb41173
  42f57d:	sub    BYTE PTR [esi-0x4c2943c1],al
  42f583:	cmp    eax,DWORD PTR ds:0xc7fe4c99
  42f589:	mov    ds:0xcc6bc36a,al
  42f58e:	in     eax,0xf4
  42f590:	clc    
  42f591:	shl    DWORD PTR [esi],cl
  42f593:	jecxz  0x42f519
  42f595:	jbe    0x42f60a
  42f597:	inc    ebp
  42f598:	sbb    BYTE PTR [ebp+0x25c6d294],bl
  42f59e:	dec    esi
  42f59f:	dec    esp
  42f5a0:	adc    edi,DWORD PTR [esp+edi*8]
  42f5a3:	add    cl,BYTE PTR [eax+0xf]
  42f5a6:	sub    al,0x90
  42f5a8:	gs jge 0x42f60b
  42f5ab:	inc    ecx
  42f5ac:	mov    BYTE PTR [esi+0x25665eca],0xa8
  42f5b3:	test   BYTE PTR [esi],bl
  42f5b5:	loope  0x42f61e
  42f5b7:	std    
  42f5b8:	pushf  
  42f5b9:	pop    ds
  42f5ba:	out    0x52,eax
  42f5bc:	sub    al,0xa5
  42f5be:	retf   
  42f5bf:	mov    bl,0xe
  42f5c1:	or     al,0xd3
  42f5c3:	inc    ebx
  42f5c4:	xchg   esi,eax
  42f5c5:	push   eax
  42f5c6:	jbe    0x42f5ba
  42f5c8:	sbb    eax,0x7a407992
  42f5cd:	hlt    
  42f5ce:	je     0x42f593
  42f5d0:	mov    DWORD PTR [esi-0x14],ecx
  42f5d3:	ja     0x42f5f6
  42f5d5:	ror    bh,cl
  42f5d7:	cwde   
  42f5d8:	popa   
  42f5d9:	push   esi
  42f5da:	xchg   esi,eax
  42f5db:	dec    edx
  42f5dc:	cmp    ebp,DWORD PTR [ebp-0x25]
  42f5df:	inc    DWORD PTR [eax+0x7b]
  42f5e2:	inc    esp
  42f5e3:	dec    eax
  42f5e4:	add    BYTE PTR [edx+0x6468e8c4],ch
  42f5ea:	jae    0x42f60a
  42f5ec:	jbe    0x42f5b9
  42f5ee:	push   cs
  42f5ef:	je     0x42f5cf
  42f5f1:	dec    edi
  42f5f2:	mov    BYTE PTR [edi],cl
  42f5f4:	pop    edx
  42f5f5:	pop    ebx
  42f5f6:	cmp    ah,BYTE PTR [edi-0x47]
  42f5f9:	cmp    DWORD PTR [ebp-0x54],esi
  42f5fc:	jo     0x42f62f
  42f5fe:	test   al,0xc4
  42f600:	inc    ebp
  42f601:	fbstp  TBYTE PTR [edi-0x34cd2f2d]
  42f607:	enter  0x7c4c,0xd1
  42f60b:	shr    DWORD PTR [edi+0x78],1
  42f60e:	or     dl,0x8e
  42f611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f612:	adc    ecx,ebx
  42f614:	cli    
  42f615:	leave  
  42f616:	pushf  
  42f617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f618:	in     al,0xa7
  42f61a:	retf   
  42f61b:	mov    bh,BYTE PTR [ebx+0x52]
  42f61e:	jb     0x42f5e0
  42f620:	int3   
  42f621:	loopne 0x42f609
  42f623:	int3   
  42f624:	mov    ch,0x2a
  42f626:	cdq    
  42f627:	and    esp,esp
  42f629:	add    bl,dh
  42f62b:	daa    
  42f62c:	jl     0x8d19c032
  42f632:	jns    0x42f6a0
  42f634:	jnp    0x42f601
  42f636:	inc    ebp
  42f637:	stc    
  42f638:	xchg   ecx,eax
  42f639:	(bad)  
  42f63a:	mov    al,0x87
  42f63c:	lahf   
  42f63d:	test   bl,al
  42f63f:	in     al,dx
  42f640:	mov    dh,BYTE PTR [ebx]
  42f642:	mov    ecx,0x763994d4
  42f647:	ja     0x42f5d7
  42f649:	es push ebp
  42f64b:	add    al,bh
  42f64d:	rcl    DWORD PTR [edx],1
  42f64f:	xchg   esi,eax
  42f650:	fdivr  QWORD PTR [esi-0x3d]
  42f653:	or     cl,al
  42f655:	sbb    al,0xdc
  42f657:	popa   
  42f658:	(bad)  
  42f65a:	pop    ss
  42f65b:	outs   dx,BYTE PTR es:[esi]
  42f65d:	lahf   
  42f65e:	(bad)  
  42f65f:	(bad)  
  42f660:	cmp    BYTE PTR [ecx+0x1999449e],bh
  42f666:	mov    bh,0xe8
  42f668:	sub    BYTE PTR [eax+0x3d9cb148],ah
  42f66e:	pop    edx
  42f66f:	pop    esi
  42f670:	or     al,0x67
  42f672:	inc    ecx
  42f673:	xor    DWORD PTR [ebp-0x76],ecx
  42f676:	cdq    
  42f677:	fmul   DWORD PTR [esi-0x3ce3abd0]
  42f67d:	lds    ebp,FWORD PTR [ecx]
  42f67f:	add    ebx,DWORD PTR [eax+0x40]
  42f682:	fsubr  DWORD PTR [edx+0x5d3d1979]
  42f688:	ins    BYTE PTR es:[edi],dx
  42f689:	(bad)  
  42f68a:	ds cld 
  42f68c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f68d:	fstp   TBYTE PTR [edx-0x48]
  42f690:	into   
  42f691:	jmp    0x42f661
  42f693:	shl    DWORD PTR [eax],1
  42f695:	jl     0x42f64b
  42f697:	cmp    al,0xf2
  42f699:	jno    0x42f710
  42f69b:	lock test eax,0xb9d7be44
  42f6a1:	(bad)  
  42f6a2:	jle    0x42f670
  42f6a4:	mov    bl,0xd2
  42f6a6:	push   0xdb164a25
  42f6ab:	push   ds
  42f6ac:	std    
  42f6ad:	xor    bl,BYTE PTR [ebp+0x10]
  42f6b0:	dec    eax
  42f6b1:	ss retf 
  42f6b3:	mov    edi,0xf4c44f48
  42f6b8:	xor    al,0x5c
  42f6ba:	dec    ebp
  42f6bb:	out    0x3c,al
  42f6bd:	aas    
  42f6be:	stos   DWORD PTR es:[edi],eax
  42f6bf:	pop    ebx
  42f6c0:	test   al,0x58
  42f6c2:	stos   DWORD PTR es:[edi],eax
  42f6c3:	xchg   ebx,eax
  42f6c4:	cli    
  42f6c5:	or     esi,esi
  42f6c7:	inc    ecx
  42f6c8:	loope  0x42f664
  42f6ca:	jl     0x42f6f9
  42f6cc:	mov    eax,ds:0x534a4123
  42f6d1:	fld    DWORD PTR [ecx+0x773982a0]
  42f6d7:	mov    ?,WORD PTR [edx+ebp*4+0x1248048a]
  42f6de:	pushf  
  42f6df:	es je  0x42f698
  42f6e2:	mov    WORD PTR [ecx-0x99b933d],ss
  42f6e8:	xchg   ebx,eax
  42f6e9:	xchg   ecx,eax
  42f6ea:	sti    
  42f6eb:	jnp    0x42f757
  42f6ed:	rcl    DWORD PTR [eax+0x61aa32ae],0x72
  42f6f4:	shl    BYTE PTR [esi],cl
  42f6f6:	ja     0x42f6ac
  42f6f8:	call   0x91934681
  42f6fd:	dec    edx
  42f6fe:	dec    ecx
  42f6ff:	cli    
  42f700:	pop    esp
  42f701:	aam    0xf0
  42f703:	xor    esp,ebx
  42f705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f706:	xor    ah,BYTE PTR [ecx-0x5c167f57]
  42f70c:	fisubr WORD PTR [esi+edx*1-0x5b5f9001]
  42f713:	sar    edx,0xa7
  42f716:	in     eax,dx
  42f717:	mov    ebp,0xc81281fd
  42f71c:	pop    edx
  42f71d:	mov    edi,0x8b10b974
  42f722:	inc    esp
  42f723:	cdq    
  42f724:	in     al,dx
  42f725:	out    0xa3,eax
  42f727:	jb     0x42f773
  42f729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f72a:	sub    ch,BYTE PTR [ecx+0x3abf94e8]
  42f730:	jno    0x42f771
  42f732:	fwait
  42f733:	das    
  42f734:	and    eax,0x3679b8ea
  42f739:	dec    ecx
  42f73a:	gs jno 0x42f76c
  42f73d:	or     DWORD PTR [esi-0x24],ebx
  42f740:	cmc    
  42f741:	mov    eax,0x318541ff
  42f746:	pop    eax
  42f747:	mov    edi,0xd3d25100
  42f74c:	aas    
  42f74d:	mov    DWORD PTR ds:0x8ca86153,esi
  42f753:	sbb    DWORD PTR gs:[edx-0x58024d5d],ecx
  42f75a:	int3   
  42f75b:	bound  ebx,QWORD PTR [edx+0x14]
  42f75e:	or     BYTE PTR [edi],ah
  42f760:	mov    eax,eax
  42f762:	and    al,dh
  42f764:	dec    ecx
  42f765:	xchg   esi,eax
  42f766:	sbb    ch,ch
  42f768:	xchg   ebx,eax
  42f769:	or     DWORD PTR [edi+0x7e1c1488],esp
  42f76f:	and    bl,BYTE PTR [eax-0x15]
  42f772:	(bad)  
  42f773:	xchg   ebx,eax
  42f774:	add    eax,0x87f01238
  42f779:	ror    DWORD PTR [esi+0x62],0xe1
  42f77d:	jb     0x42f75f
  42f77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f780:	cwde   
  42f781:	sbb    ecx,DWORD PTR [edi+0x758ec82a]
  42f787:	add    al,0x6
  42f789:	call   0xba3ffe68
  42f78e:	pop    ss
  42f78f:	pop    esi
  42f790:	sub    bl,ch
  42f792:	stc    
  42f793:	retf   0x54e7
  42f796:	pusha  
  42f797:	icebp  
  42f798:	fmul   DWORD PTR [ecx+esi*1+0x2d]
  42f79c:	add    eax,0x8e89c673
  42f7a1:	and    dh,BYTE PTR [eax+0x3c]
  42f7a4:	jle    0x42f730
  42f7a6:	push   ecx
  42f7a7:	mov    bh,0x53
  42f7a9:	jo     0x42f800
  42f7ab:	sbb    BYTE PTR [edx-0x1a7540ef],cl
  42f7b1:	sub    ecx,ecx
  42f7b3:	iret   
  42f7b4:	cmp    al,0x2c
  42f7b6:	or     DWORD PTR ds:0x9f1b0d81,eax
  42f7bc:	mov    esp,0x139f1060
  42f7c1:	jns    0x42f842
  42f7c3:	cld    
  42f7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f7c5:	in     al,dx
  42f7c6:	test   BYTE PTR [ebx+0x12],al
  42f7c9:	ds xchg ebp,eax
  42f7cb:	gs rol DWORD PTR ds:[edi+0x11d7502c],cl
  42f7d3:	pop    edx
  42f7d4:	sub    cl,BYTE PTR [ebx-0x64aff813]
  42f7da:	sbb    esi,DWORD PTR [ebx-0x6b192bc7]
  42f7e0:	loopne 0x42f856
  42f7e2:	daa    
  42f7e3:	lds    esi,FWORD PTR [ecx+0x6d]
  42f7e6:	xor    DWORD PTR [edi+ebx*1],edi
  42f7e9:	neg    BYTE PTR [eax-0x9974f8c]
  42f7ef:	pop    esi
  42f7f0:	ret    
  42f7f1:	xchg   edx,eax
  42f7f2:	sar    BYTE PTR [edx+edi*1+0x5d01d66e],1
  42f7f9:	cmp    eax,0x71645b86
  42f7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f7ff:	mov    eax,ds:0x4076d559
  42f804:	loop   0x42f78e
  42f806:	mov    ch,0xd6
  42f808:	or     edi,DWORD PTR [edi+0x485e92af]
  42f80e:	lods   al,BYTE PTR ds:[esi]
  42f80f:	mov    DWORD PTR [esi+0x3edd3107],ecx
  42f815:	mul    DWORD PTR ds:0xc2cd38d0
  42f81b:	jmpw   0x2825
  42f81f:	sbb    eax,0xc774c378
  42f824:	bound  ebp,QWORD PTR [edx]
  42f826:	and    ebp,ecx
  42f828:	cmp    eax,0x5fc7379c
  42f82d:	jbe    0x42f88a
  42f82f:	daa    
  42f830:	(bad)  
  42f831:	icebp  
  42f832:	rol    BYTE PTR [esi-0x14],0x90
  42f836:	dec    ecx
  42f837:	jmp    FWORD PTR [edx-0x5f]
  42f83a:	in     eax,dx
  42f83b:	in     al,0x71
  42f83d:	xor    BYTE PTR [edi],0x34
  42f840:	sbb    DWORD PTR [ebx-0x1ef7d5b4],ebp
  42f846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f847:	test   BYTE PTR ds:0x1f41302,ah
  42f84d:	mov    al,0x4e
  42f84f:	retf   
  42f850:	(bad)  [edi+ebp*1-0x73]
  42f854:	mov    ebx,0xc4dad4c6
  42f859:	push   ds
  42f85a:	repnz push ebp
  42f85c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f85d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f85f:	clc    
  42f860:	retf   
  42f861:	adc    al,0xc5
  42f863:	add    dl,BYTE PTR [edi]
  42f865:	cmp    al,0x4f
  42f867:	bound  ebx,QWORD PTR [ecx+ebx*8]
  42f86a:	pop    esp
  42f86b:	hlt    
  42f86c:	push   eax
  42f86d:	xor    DWORD PTR [ebx],esi
  42f86f:	mov    ebx,0x11714006
  42f874:	mov    eax,0x2bfb8578
  42f879:	mov    ebp,eax
  42f87b:	retf   0xb80b
  42f87e:	push   esi
  42f87f:	xchg   ebp,eax
  42f880:	sub    BYTE PTR [esi+eiz*2-0x131b2ef4],cl
  42f887:	cmp    al,bh
  42f889:	mov    BYTE PTR [ecx+0x45b9304c],bl
  42f88f:	mov    ecx,0x46c8cad2
  42f894:	cmc    
  42f895:	push   esp
  42f896:	ret    
  42f897:	fld    TBYTE PTR [edx-0x4d]
  42f89a:	push   ss
  42f89b:	les    eax,FWORD PTR [edi+0x7778fc09]
  42f8a1:	(bad)  
  42f8a2:	and    bl,al
  42f8a4:	gs inc ebx
  42f8a6:	and    BYTE PTR [eax],0xe5
  42f8a9:	xchg   ecx,eax
  42f8aa:	push   es
  42f8ab:	mov    DWORD PTR [esi-0x18],ebx
  42f8ae:	mov    bh,0xfa
  42f8b0:	inc    esp
  42f8b1:	js     0x42f8cf
  42f8b3:	out    dx,eax
  42f8b4:	fwait
  42f8b5:	pushf  
  42f8b6:	daa    
  42f8b7:	push   ebp
  42f8b8:	dec    edx
  42f8b9:	push   0xe55e85a5
  42f8be:	ss into 
  42f8c0:	pop    edx
  42f8c1:	adc    DWORD PTR [ebp+ecx*1-0x542b4840],ecx
  42f8c8:	ds xor al,0xdc
  42f8cb:	xor    al,0x42
  42f8cd:	ss repz inc esi
  42f8d0:	popf   
  42f8d1:	sub    bh,BYTE PTR [eax]
  42f8d3:	rcr    DWORD PTR [eax+0x7b],cl
  42f8d6:	popf   
  42f8d7:	fwait
  42f8d8:	push   ss
  42f8d9:	jge    0x42f917
  42f8db:	sar    BYTE PTR ds:[ebx+ecx*4-0x7a],0x4b
  42f8e1:	and    al,0xbb
  42f8e3:	adc    bh,BYTE PTR [eax-0x23]
  42f8e6:	mov    al,ds:0x1438bd2
  42f8eb:	push   ss
  42f8ec:	ins    BYTE PTR es:[edi],dx
  42f8ed:	and    DWORD PTR [esi+0x48],0xb808edec
  42f8f4:	adc    cl,BYTE PTR [esi]
  42f8f6:	xchg   eax,ebx
  42f8f8:	ins    BYTE PTR es:[edi],dx
  42f8f9:	push   ecx
  42f8fa:	retf   0x4b06
  42f8fd:	sti    
  42f8fe:	push   ebp
  42f8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f900:	test   BYTE PTR [eax-0x2676a61a],dl
  42f906:	cmp    ebx,DWORD PTR [edi+esi*2-0x13]
  42f90a:	mov    ah,0x93
  42f90c:	loope  0x42f8d9
  42f90e:	in     al,0xc7
  42f910:	data16 adc BYTE PTR ds:0x8e11e1d8,dl
  42f917:	iret   
  42f918:	mov    edi,0x80ae57db
  42f91d:	sub    DWORD PTR [ebx+ecx*8],esi
  42f920:	jo     0x42f95b
  42f922:	mov    cl,0x23
  42f924:	mov    ds:0x3dcfe9a4,eax
  42f929:	cmp    esi,esp
  42f92b:	(bad)  
  42f92c:	and    al,0x58
  42f92e:	enter  0xc1b2,0x6c
  42f932:	mov    esi,0x82b40f26
  42f937:	in     al,dx
  42f938:	sahf   
  42f939:	imul   ecx,DWORD PTR [edi-0x6ed2d7d9],0xce0c105d
  42f943:	cmp    esp,DWORD PTR [ebx+eiz*8-0x4741f8c6]
  42f94a:	xor    BYTE PTR [eax],ah
  42f94c:	inc    ebp
  42f94d:	sub    al,0x53
  42f94f:	xchg   edi,eax
  42f950:	push   ecx
  42f951:	sahf   
  42f952:	fadd   QWORD PTR [ecx+0x471d9b75]
  42f958:	ins    DWORD PTR es:[edi],dx
  42f959:	fisubr DWORD PTR [eax]
  42f95b:	add    BYTE PTR [edi+0x5c],ah
  42f95e:	cmp    dl,bh
  42f960:	add    ch,ch
  42f962:	mov    ebx,0xa4a2482
  42f967:	prefetcht2 BYTE PTR [eax-0x339722a7]
  42f96e:	daa    
  42f96f:	adc    BYTE PTR [ecx-0x71675de5],bh
  42f975:	dec    ebx
  42f976:	lock adc DWORD PTR [esi],edi
  42f979:	cmc    
  42f97a:	loopne 0x42f9d0
  42f97c:	mov    WORD PTR [ebx+0x54561453],es
  42f982:	out    dx,al
  42f983:	add    eax,0x23db4a94
  42f988:	cmp    ah,dl
  42f98a:	add    ecx,DWORD PTR [esi+0x25]
  42f98d:	ds dec edi
  42f98f:	in     eax,dx
  42f990:	sub    DWORD PTR [edx+esi*1+0x1a],ebx
  42f994:	dec    edx
  42f995:	mov    esp,DWORD PTR [edx+0x40a89b2]
  42f99b:	fidivr WORD PTR [edi]
  42f99d:	jns    0x42f959
  42f99f:	enter  0xfca8,0x28
  42f9a3:	sub    ah,dh
  42f9a5:	sub    eax,0x24099e1f
  42f9aa:	add    ebp,ecx
  42f9ac:	dec    esp
  42f9ad:	xchg   edi,eax
  42f9ae:	sbb    eax,0xb0f64902
  42f9b3:	cmc    
  42f9b4:	sti    
  42f9b5:	jo     0x42f9cf
  42f9b7:	mov    eax,0xfbbbe61a
  42f9bc:	add    BYTE PTR [ecx],cl
  42f9be:	sbb    BYTE PTR [edi-0x63],al
  42f9c1:	adc    BYTE PTR [edi],dl
  42f9c3:	pop    es
  42f9c4:	adc    eax,eax
  42f9c6:	push   es
  42f9c7:	cmp    al,0x41
  42f9c9:	xor    DWORD PTR [eax],edi
  42f9cb:	js     0x42fa0b
  42f9cd:	ret    
  42f9ce:	xor    ecx,DWORD PTR [ecx-0x250062a0]
  42f9d4:	ror    BYTE PTR [ebp-0x7b348fe7],cl
  42f9da:	jge    0x42fa07
  42f9dc:	xlat   BYTE PTR ds:[ebx]
  42f9dd:	add    eax,0xc3d135ac
  42f9e2:	test   al,0x73
  42f9e4:	imul   ebx,esi,0x2f3cacd0
  42f9ea:	rcl    BYTE PTR [eax+0x6f],0x41
  42f9ee:	in     al,dx
  42f9ef:	scas   al,BYTE PTR es:[edi]
  42f9f0:	adc    cl,ch
  42f9f2:	(bad)  
  42f9f3:	sbb    DWORD PTR [edi+esi*2+0x57],esi
  42f9f7:	sbb    eax,0x1754a2f2
  42f9fc:	jb     0x42f996
  42f9fe:	jb     0x42f9a9
  42fa00:	std    
  42fa01:	test   bh,ah
  42fa03:	sbb    ecx,DWORD PTR [esi-0x37]
  42fa06:	mov    esp,0x2855fbec
  42fa0b:	int    0xd6
  42fa0d:	rep lods al,BYTE PTR ds:[esi]
  42fa0f:	loopne 0x42fa47
  42fa11:	test   al,0xf1
  42fa13:	xchg   edi,eax
  42fa14:	adc    cl,BYTE PTR [edx]
  42fa16:	inc    DWORD PTR [ecx-0x8cb0878]
  42fa1c:	mov    bh,0x73
  42fa1e:	jge    0x42f9ca
  42fa20:	fwait
  42fa21:	lods   al,BYTE PTR ds:[esi]
  42fa22:	cmc    
  42fa23:	mov    ecx,0x814d851e
  42fa28:	aam    0xcd
  42fa2a:	rcr    BYTE PTR [esi+0x2040970d],1
  42fa30:	in     eax,dx
  42fa31:	sbb    al,0xd5
  42fa33:	hlt    
  42fa34:	cmp    al,0x8f
  42fa36:	jl     0x42f9c3
  42fa38:	pop    ecx
  42fa39:	cs mov edx,0xd07a9c6f
  42fa3f:	jns    0x42fa73
  42fa41:	mov    bl,al
  42fa43:	jmp    0x42fa0f
  42fa45:	rol    al,0xe3
  42fa48:	mov    ?,esp
  42fa4a:	mov    bh,0xc5
  42fa4c:	ja     0x42fa72
  42fa4e:	in     al,0xde
  42fa50:	fmul   DWORD PTR [ecx+0x29]
  42fa53:	push   es
  42fa54:	cmp    BYTE PTR [ebx*4-0x53d3b6f8],dh
  42fa5b:	std    
  42fa5c:	xchg   esi,eax
  42fa5d:	mov    esp,0xcd2c790b
  42fa62:	dec    ebx
  42fa63:	cmp    eax,0x7ce32764
  42fa68:	test   eax,0x2e2f80d4
  42fa6d:	(bad)  
  42fa6e:	cdq    
  42fa6f:	pop    edx
  42fa70:	enter  0xf842,0xdd
  42fa74:	push   es
  42fa75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa76:	arpl   WORD PTR [esi-0x59],cx
  42fa79:	sub    eax,0xefc1c24
  42fa7e:	cmc    
  42fa7f:	icebp  
  42fa80:	jb     0x42fa70
  42fa82:	sbb    eax,0xff124075
  42fa87:	xchg   edx,eax
  42fa88:	mov    BYTE PTR [esi-0x17b212b9],al
  42fa8e:	shr    BYTE PTR [eax],0xc0
  42fa91:	jge    0x42fa9b
  42fa93:	(bad)  [esi+ebp*4+0x4d3e380c]
  42fa9a:	xchg   ebp,eax
  42fa9b:	sar    DWORD PTR [esi-0x68],0xca
  42fa9f:	xor    BYTE PTR [ebx+0x56],ch
  42faa2:	and    al,0x18
  42faa4:	dec    ebx
  42faa5:	xor    al,0x44
  42faa7:	mov    ecx,0x892c3e54
  42faac:	pop    ebp
  42faad:	inc    esp
  42faae:	stos   DWORD PTR es:[edi],eax
  42faaf:	subps  xmm7,XMMWORD PTR [eax-0x7e]
  42fab3:	mov    dl,0x56
  42fab5:	xor    DWORD PTR [esi+eiz*8],0xa620cf0f
  42fabc:	dec    eax
  42fabd:	cld    
  42fabe:	stc    
  42fabf:	ffree  st(1)
  42fac1:	mov    BYTE PTR [eax+0x44],bl
  42fac4:	xchg   esi,eax
  42fac5:	ins    DWORD PTR es:[edi],dx
  42fac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fac7:	ficom  DWORD PTR [edx+0x689e175d]
  42facd:	pushf  
  42face:	stos   DWORD PTR es:[edi],eax
  42facf:	or     eax,0x66d22de3
  42fad4:	sub    DWORD PTR [esp+ebx*1-0x66affeac],ecx
  42fadb:	inc    esi
  42fadc:	loopne 0x42fb18
  42fade:	xor    al,0xaf
  42fae0:	add    al,0xeb
  42fae2:	(bad)  
  42fae3:	or     BYTE PTR [esi],dl
  42fae5:	adc    al,0x6c
  42fae7:	pop    eax
  42fae8:	cdq    
  42fae9:	addr16 imul eax,ebx,0x1bde4652
  42faf0:	jl     0x42fa98
  42faf2:	imul   ebx,DWORD PTR [ebx-0x4973f166],0x47da0bc
  42fafc:	adc    ah,al
  42fafe:	jb     0x42fb53
  42fb00:	rcr    DWORD PTR [ecx],0xc4
  42fb03:	fcmovnb st,st(7)
  42fb05:	xchg   edx,eax
  42fb06:	popa   
  42fb07:	xchg   esi,eax
  42fb08:	popa   
  42fb09:	ins    DWORD PTR es:[edi],dx
  42fb0a:	scas   eax,DWORD PTR es:[edi]
  42fb0b:	ins    BYTE PTR es:[edi],dx
  42fb0c:	(bad)  
  42fb0d:	fs mov dh,0x48
  42fb10:	jecxz  0x42fac8
  42fb12:	scas   al,BYTE PTR es:[edi]
  42fb13:	xchg   esi,eax
  42fb14:	nop
  42fb15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb16:	pusha  
  42fb17:	sti    
  42fb18:	xor    eax,0xf4042d17
  42fb1d:	mov    ah,0x31
  42fb1f:	pop    esp
  42fb20:	stc    
  42fb21:	pop    esi
  42fb22:	sbb    BYTE PTR [ebp+ebx*4-0x36],dh
  42fb26:	fcomp  DWORD PTR [eax+esi*4+0x6f]
  42fb2a:	xor    DWORD PTR [ebp-0x13],esi
  42fb2d:	pop    ebp
  42fb2e:	mov    ah,bh
  42fb30:	jae    0x42fbab
  42fb32:	sar    ebp,cl
  42fb34:	int    0x79
  42fb36:	sbb    DWORD PTR [esi],ebp
  42fb38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb39:	out    dx,al
  42fb3a:	sti    
  42fb3b:	fadd   st(3),st
  42fb3d:	lods   eax,DWORD PTR ds:[esi]
  42fb3e:	sbb    BYTE PTR [eax+0x1c],bl
  42fb41:	enter  0xcfc5,0x19
  42fb45:	in     al,dx
  42fb46:	and    cl,bl
  42fb48:	js     0x42fb21
  42fb4a:	in     al,dx
  42fb4b:	mov    cl,0xa7
  42fb4d:	cdq    
  42fb4e:	stos   DWORD PTR es:[edi],eax
  42fb4f:	test   BYTE PTR [ecx+0xa10a282],cl
  42fb55:	cwde   
  42fb56:	mov    ds:0xd544dcb9,al
  42fb5b:	xor    BYTE PTR [eax+0x77d43452],bh
  42fb61:	adc    al,0x74
  42fb63:	mov    cl,0x43
  42fb65:	fadd   QWORD PTR [edi+0x2c]
  42fb68:	rcr    DWORD PTR [esi+esi*8+0xd2cb8a],1
  42fb6f:	sbb    ch,BYTE PTR [edx+0x1643ef3b]
  42fb75:	add    DWORD PTR [ebx+0x3da4fb24],0x18
  42fb7c:	push   esi
  42fb7d:	fldcw  WORD PTR [ecx+0x4971487e]
  42fb83:	xchg   ebx,eax
  42fb84:	cmp    eax,0x7edd96e7
  42fb89:	lock push es
  42fb8b:	pusha  
  42fb8c:	pop    es
  42fb8d:	mul    DWORD PTR ds:0x14cfd10e
  42fb93:	arpl   WORD PTR [ebp-0x6ea60de7],cx
  42fb99:	sti    
  42fb9a:	sbb    DWORD PTR [eax],edi
  42fb9c:	and    al,0xf6
  42fb9e:	jp     0x42fb93
  42fba0:	dec    esi
  42fba1:	push   edx
  42fba2:	sar    DWORD PTR [ebp+0x108f205c],cl
  42fba8:	je     0x42fb5f
  42fbaa:	imul   ecx,DWORD PTR [edi],0x7a9e048a
  42fbb0:	test   eax,0x54ff88de
  42fbb5:	sub    BYTE PTR fs:[ecx+ecx*4+0x2e3bbac6],dl
  42fbbd:	popf   
  42fbbe:	add    ecx,DWORD PTR [ecx+edx*4-0x4c]
  42fbc2:	hlt    
  42fbc3:	mov    esi,0x9d419056
  42fbc8:	jo     0x42fb65
  42fbca:	inc    edi
  42fbcb:	mov    eax,ds:0xb5480545
  42fbd0:	push   edi
  42fbd1:	xchg   esp,eax
  42fbd2:	and    dl,al
  42fbd4:	or     bh,cl
  42fbd6:	or     al,dh
  42fbd8:	fmulp  st(7),st
  42fbda:	cmp    al,0x59
  42fbdc:	pop    esp
  42fbdd:	dec    esi
  42fbde:	test   BYTE PTR [edx-0x3d],bh
  42fbe1:	jb     0x42fc17
  42fbe3:	add    BYTE PTR [eax],al
  42fbe5:	add    BYTE PTR [eax],al
  42fbe7:	add    bh,bl
  42fbe9:	adc    al,0xf6
  42fbeb:	ds push eax
  42fbed:	or     DWORD PTR [eax],eax
  42fbef:	add    BYTE PTR [eax],al
  42fbf1:	add    BYTE PTR [eax],al
  42fbf3:	add    BYTE PTR [eax+0x9],dl
  42fbf6:	add    BYTE PTR [eax],al
  42fbf8:	cmp    eax,0x7c2600
  42fbfd:	add    dh,BYTE PTR [esi]
  42fbff:	or     BYTE PTR [eax],al
  42fc01:	add    bl,al
  42fc03:	inc    ebp
  42fc04:	add    al,cl
  42fc06:	mov    bh,0xaf
  42fc08:	mov    esp,0xbecc315d
  42fc0d:	and    al,0xf9
  42fc0f:	add    al,0xa5
  42fc11:	inc    ebp
  42fc12:	ja     0x42fc92
  42fc14:	or     eax,0x372c48b3
  42fc19:	pushf  
  42fc1a:	into   
  42fc1b:	lods   eax,DWORD PTR ds:[esi]
  42fc1c:	enter  0xa641,0x6c
  42fc20:	and    BYTE PTR es:[esi],ch
  42fc23:	dec    edi
  42fc24:	loopne 0x42fbf4
  42fc26:	scas   eax,DWORD PTR es:[edi]
  42fc27:	mov    eax,0x6dc6590
  42fc2c:	mov    dl,0x5f
  42fc2e:	lock jmp 0x42fc03
  42fc31:	cmp    BYTE PTR [ebp-0xfe0b54b],dh
  42fc37:	in     eax,0x5e
  42fc39:	lock pop esp
  42fc3b:	fadd   DWORD PTR [ebx+0x79]
  42fc3e:	hlt    
  42fc3f:	arpl   WORD PTR [esi-0x337ffa15],si
  42fc45:	xchg   edi,eax
  42fc46:	xor    eax,0x70c9b429
  42fc4b:	adc    DWORD PTR [ebp+edx*8-0xf4342f1],esp
  42fc52:	js     0x42fc4a
  42fc54:	push   es
  42fc55:	dec    esp
  42fc56:	call   0xa2e6:0x837d02e6
  42fc5d:	in     al,dx
  42fc5e:	jo     0x42fc4d
  42fc60:	xchg   DWORD PTR [ecx-0x327c9ab7],edi
  42fc66:	cwde   
  42fc67:	xchg   esp,eax
  42fc68:	(bad)  
  42fc69:	xor    eax,0x7e93dc71
  42fc6e:	xor    BYTE PTR [ebp-0x48],bl
  42fc71:	ret    
  42fc72:	mov    esp,0x30aa2f2b
  42fc77:	inc    edi
  42fc78:	adc    al,0xdc
  42fc7a:	push   edi
  42fc7b:	test   DWORD PTR [edx],esi
  42fc7d:	jae    0x42fcae
  42fc7f:	lea    esi,[esi+0x413c8427]
  42fc85:	pop    eax
  42fc86:	lods   al,BYTE PTR ds:[esi]
  42fc87:	jae    0x42fc92
  42fc89:	dec    esp
  42fc8a:	cmp    ch,BYTE PTR [eax-0x2a95bc39]
  42fc90:	inc    esi
  42fc91:	sahf   
  42fc92:	jle    0x42fcbd
  42fc94:	int3   
  42fc95:	pop    edi
  42fc96:	cmp    cl,cl
  42fc98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc99:	sbb    DWORD PTR [esi+0x7df048f8],esi
  42fc9f:	test   al,al
  42fca1:	stc    
  42fca2:	lods   eax,DWORD PTR ds:[esi]
  42fca3:	fs cmp eax,0x5c9d145d
  42fca9:	and    eax,0x1675c06e
  42fcae:	adc    DWORD PTR [ebp+edx*2+0xd0ea9b4],edi
  42fcb5:	icebp  
  42fcb6:	mov    BYTE PTR [edi-0x62d35c20],ah
  42fcbc:	(bad)  
  42fcbd:	pop    edi
  42fcbe:	jae    0x42fc7d
  42fcc0:	jns    0x42fcc6
  42fcc2:	mov    DWORD PTR [ecx-0x54aeca14],ebx
  42fcc8:	mov    bl,0x75
  42fcca:	sub    BYTE PTR [edi-0x1c],bl
  42fccd:	mov    DWORD PTR [edi+ebp*8],edx
  42fcd0:	mov    bl,0xa5
  42fcd2:	mov    eax,ds:0xe4759fd0
  42fcd7:	jnp    0x42fd3f
  42fcd9:	stos   BYTE PTR es:[edi],al
  42fcda:	inc    eax
  42fcdb:	push   eax
  42fcdc:	hlt    
  42fcdd:	and    bh,BYTE PTR [eax+edx*8-0x24]
  42fce1:	das    
  42fce2:	and    esi,DWORD PTR [ebp-0x7dbbe776]
  42fce8:	scas   eax,DWORD PTR es:[edi]
  42fce9:	mov    edi,0x4fa05a7c
  42fcee:	cmp    al,0x24
  42fcf0:	int3   
  42fcf1:	sbb    eax,0xfcf62ccf
  42fcf6:	dec    ebx
  42fcf7:	pusha  
  42fcf8:	mov    ebx,0x373d0cda
  42fcfd:	pop    eax
  42fcfe:	shr    BYTE PTR [ebx-0x72cdc1f8],cl
  42fd04:	push   0x31829abf
  42fd09:	sub    al,0x73
  42fd0b:	je     0x42fd36
  42fd0d:	ja     0x42fd67
  42fd0f:	add    ebp,DWORD PTR [ebp-0x2596afe1]
  42fd15:	xchg   esp,eax
  42fd16:	stos   DWORD PTR es:[edi],eax
  42fd17:	aam    0x56
  42fd19:	jle    0x42fd8c
  42fd1b:	je     0x42fd26
  42fd1d:	jnp    0x42fd41
  42fd1f:	call   0xd9359051
  42fd24:	sbb    al,0x80
  42fd26:	aad    0x48
  42fd28:	dec    ecx
  42fd29:	ss into 
  42fd2b:	fstp   TBYTE PTR [edi+0x3a7c8240]
  42fd31:	mov    eax,0x77bb689c
  42fd36:	fs mov al,0xc8
  42fd39:	cli    
  42fd3a:	lods   eax,DWORD PTR es:[esi]
  42fd3c:	daa    
  42fd3d:	ffreep st(5)
  42fd3f:	mov    BYTE PTR [edi-0x1780fbb6],dl
  42fd45:	cmp    edx,DWORD PTR [edi+eax*8-0xd119854]
  42fd4c:	pop    eax
  42fd4d:	mov    bh,0xdf
  42fd4f:	adc    ebx,DWORD PTR [ebx]
  42fd51:	push   esp
  42fd52:	(bad)  
  42fd53:	pop    edi
  42fd54:	stos   BYTE PTR es:[edi],al
  42fd55:	adc    BYTE PTR [esi+0x78c94cf9],dl
  42fd5b:	pop    ss
  42fd5c:	jns    0x42fdd2
  42fd5e:	(bad)  
  42fd5f:	and    al,0xd1
  42fd61:	jl     0x42fd75
  42fd63:	pushf  
  42fd64:	cld    
  42fd65:	jle    0x42fcfa
  42fd67:	dec    ebp
  42fd68:	xor    cl,0xf6
  42fd6b:	jge    0x42fd2d
  42fd6d:	loop   0x42fd06
  42fd6f:	dec    edi
  42fd70:	repnz inc edx
  42fd72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd73:	cmp    BYTE PTR [edi+0x216fc3e4],ch
  42fd79:	xchg   edi,eax
  42fd7a:	les    ecx,FWORD PTR [eax+0x6b8c8f0e]
  42fd80:	xor    al,0xf3
  42fd82:	(bad)  
  42fd83:	rcl    BYTE PTR [ecx],1
  42fd85:	xor    DWORD PTR [ecx+0x736d50b0],0x7be590f4
  42fd8f:	inc    eax
  42fd90:	aam    0xaf
  42fd92:	popf   
  42fd93:	xchg   esi,eax
  42fd94:	push   ecx
  42fd95:	fsub   DWORD PTR [ebp+0x68]
  42fd98:	jbe    0x42fd92
  42fd9a:	or     ecx,esi
  42fd9c:	lods   al,BYTE PTR ds:[esi]
  42fd9d:	or     ebp,DWORD PTR [ecx*2+0x3ba0a7cb]
  42fda4:	int3   
  42fda5:	fistp  DWORD PTR [eax+edi*4]
  42fda8:	aas    
  42fda9:	cmp    DWORD PTR [edx-0x3c],0x19
  42fdad:	retf   
  42fdae:	clc    
  42fdaf:	or     BYTE PTR [esi-0x7d],ah
  42fdb2:	sub    DWORD PTR [ebx-0x18],ecx
  42fdb5:	cmc    
  42fdb6:	ss add eax,0x2b8da73f
  42fdbc:	in     eax,dx
  42fdbd:	or     al,0x2b
  42fdbf:	mov    bh,0xc0
  42fdc1:	jo     0x42fe41
  42fdc3:	into   
  42fdc4:	dec    ebp
  42fdc5:	xchg   ebx,eax
  42fdc6:	xor    BYTE PTR [edx],dh
  42fdc8:	jmp    0x42fd92
  42fdca:	int3   
  42fdcb:	mov    DWORD PTR ds:0x68d84c81,esi
  42fdd1:	sti    
  42fdd2:	mov    edx,0x2b61ebe9
  42fdd7:	inc    edx
  42fdd8:	cld    
  42fdd9:	ins    BYTE PTR es:[edi],dx
  42fdda:	test   eax,0xc8e3b98f
  42fddf:	pop    esi
  42fde0:	cdq    
  42fde1:	and    BYTE PTR [edi],ch
  42fde3:	mov    edi,0x3d418cde
  42fde8:	(bad)  
  42fde9:	fadd   QWORD PTR [esi+ebx*2+0x53]
  42fded:	into   
  42fdee:	add    BYTE PTR [ebx],0x48
  42fdf1:	ficom  DWORD PTR [esi-0x14]
  42fdf4:	call   0xdfd8:0x5b7315cf
  42fdfb:	jmp    0xa2aa:0xfbd75410
  42fe02:	cs leave 
  42fe04:	adc    eax,0x4f76e834
  42fe09:	jns    0x42fda3
  42fe0b:	(bad)  
  42fe0c:	mov    ds:0xf3e558c2,al
  42fe11:	sub    DWORD PTR [edx+0x4a],0x75
  42fe15:	inc    esp
  42fe16:	xor    DWORD PTR [ecx+edx*2-0x18],edi
  42fe1a:	popa   
  42fe1b:	push   esp
  42fe1c:	push   eax
  42fe1d:	cs js  0x42fe05
  42fe20:	and    al,0xbf
  42fe22:	push   ebx
  42fe23:	sub    DWORD PTR [edi],eax
  42fe25:	mov    cl,0x1a
  42fe27:	in     al,dx
  42fe28:	scas   al,BYTE PTR es:[edi]
  42fe29:	dec    eax
  42fe2a:	jbe    0x42fe95
  42fe2c:	xor    bl,BYTE PTR [eax+0x11cd91f2]
  42fe32:	ins    BYTE PTR es:[edi],dx
  42fe33:	xchg   ebx,eax
  42fe34:	in     al,0x7d
  42fe36:	shl    ebx,cl
  42fe38:	ja     0x42feb0
  42fe3a:	xchg   edx,eax
  42fe3b:	nop
  42fe3c:	test   bl,ah
  42fe3e:	dec    ebx
  42fe3f:	add    al,0x3a
  42fe41:	stos   DWORD PTR es:[edi],eax
  42fe42:	push   ds
  42fe43:	pop    ss
  42fe44:	mov    ah,0xa9
  42fe46:	push   cs
  42fe47:	xchg   edi,eax
  42fe48:	xor    ecx,ebx
  42fe4a:	sbb    BYTE PTR [eax-0x5ebea3e5],0x26
  42fe51:	in     eax,0xbe
  42fe53:	or     ch,dh
  42fe55:	test   DWORD PTR [eax-0x6b90e3ee],0x5bd0eab8
  42fe5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe60:	push   ebx
  42fe61:	jae    0x42fe67
  42fe63:	mov    ch,0xe6
  42fe65:	push   ebp
  42fe66:	psllw  mm1,mm0
  42fe69:	mov    eax,0x7dc346b6
  42fe6e:	out    0x49,eax
  42fe70:	sub    eax,0xd8f40770
  42fe75:	adc    DWORD PTR [ebx+edi*2-0x266ba87b],ebp
  42fe7c:	in     eax,dx
  42fe7d:	fs dec ecx
  42fe7f:	div    DWORD PTR [edx+eiz*8-0x616747aa]
  42fe86:	aaa    
  42fe87:	pop    ebx
  42fe88:	jg     0x42fe32
  42fe8a:	pop    esi
  42fe8b:	jo     0x42fe69
  42fe8d:	mov    esi,0x6ac53d9c
  42fe92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe93:	ja     0x42ff00
  42fe95:	add    ah,dh
  42fe97:	jp     0x42fecc
  42fe99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe9a:	jo     0x42fe4e
  42fe9c:	xchg   edx,eax
  42fe9d:	sub    ebp,DWORD PTR [eax+0x6a822ea2]
  42fea3:	push   cs
  42fea4:	or     bh,BYTE PTR [ecx-0x69]
  42fea7:	int3   
  42fea8:	mov    ecx,0x37382685
  42fead:	push   esp
  42feae:	push   0x7436f032
  42feb3:	mov    esi,DWORD PTR [ebx]
  42feb5:	xchg   esi,eax
  42feb6:	pop    ss
  42feb7:	imul   edi,DWORD PTR [ecx],0x14
  42feba:	mov    dl,dl
  42febc:	data16 mov fs:0xbc5443c4,al
  42fec3:	(bad)  
  42fec4:	or     al,0x54
  42fec6:	jp     0x42fed0
  42fec8:	jno    0x42ff40
  42feca:	lock loopne 0x42febe
  42fecd:	retf   
  42fece:	ficomp DWORD PTR [ecx+0x2235c08e]
  42fed4:	add    al,0xf4
  42fed6:	imul   esi,DWORD PTR [ecx],0x57
  42fed9:	push   esi
  42feda:	ret    
  42fedb:	xor    BYTE PTR [ecx+0x28],ch
  42fede:	jns    0x42fef0
  42fee0:	loopne 0x42fee7
  42fee2:	push   es
  42fee3:	sbb    ch,BYTE PTR [ebp-0x1563b379]
  42fee9:	fadd   DWORD PTR [ebp+0x42e208e8]
  42feef:	hlt    
  42fef0:	cld    
  42fef1:	imul   esi,DWORD PTR [edx+0x54bef97e],0x690e1888
  42fefb:	inc    esp
  42fefc:	nop
  42fefd:	push   es
  42fefe:	jbe    0x42ff5f
  42ff00:	lods   eax,DWORD PTR ds:[esi]
  42ff01:	cmp    al,0x1a
  42ff03:	and    BYTE PTR [ebx+edi*4+0x3e59c4c5],al
  42ff0a:	pusha  
  42ff0b:	xchg   esp,eax
  42ff0c:	dec    BYTE PTR [ebp-0x61]
  42ff0f:	add    BYTE PTR [ecx],dl
  42ff11:	ss dec ebp
  42ff13:	test   dh,ch
  42ff15:	xchg   edi,eax
  42ff16:	sbb    DWORD PTR [ebx-0x1f6e707],edi
  42ff1c:	sub    al,0x13
  42ff1e:	mov    al,ds:0x37ce680c
  42ff23:	shl    DWORD PTR [edx+0x50],1
  42ff26:	lahf   
  42ff27:	mov    ch,0xd7
  42ff29:	dec    esi
  42ff2a:	and    eax,0x74a80a2b
  42ff2f:	bound  edx,QWORD PTR [edx]
  42ff31:	mov    gs,WORD PTR [edx+0x35]
  42ff34:	mov    ch,0x9d
  42ff36:	jle    0x42fed0
  42ff38:	mov    dl,BYTE PTR [ebp+0x79d9dbcd]
  42ff3e:	fwait
  42ff3f:	inc    BYTE PTR [eax+0x37]
  42ff42:	mov    ds:0x7b8aae02,al
  42ff47:	sub    BYTE PTR [esi+0x64],ah
  42ff4a:	push   0xab53bfa3
  42ff4f:	pop    ebp
  42ff50:	mov    eax,ds:0x20a4e188
  42ff56:	sub    DWORD PTR [ecx-0x5360526c],eax
  42ff5c:	(bad)  
  42ff5e:	add    dh,BYTE PTR [ecx-0x10]
  42ff61:	jp     0x42ff1d
  42ff63:	rcl    al,1
  42ff65:	and    DWORD PTR [eax+0x2a],ebp
  42ff68:	sub    BYTE PTR [ebx],dl
  42ff6a:	jo     0x42ff07
  42ff6c:	sub    al,0x78
  42ff6e:	mov    ah,0xd
  42ff70:	inc    edi
  42ff71:	retf   
  42ff72:	sub    DWORD PTR [ebx+0xe],ecx
  42ff75:	mov    ds,WORD PTR [edi+ecx*1-0x47d07850]
  42ff7c:	in     eax,0xd6
  42ff7e:	into   
  42ff7f:	shl    BYTE PTR [ebx+0x57febc3d],0xfe
  42ff86:	mov    dh,0x6a
  42ff88:	in     al,0x84
  42ff8a:	mov    DWORD PTR [ebx+0x16],esi
  42ff8d:	shl    ebp,0x20
  42ff90:	inc    ebp
  42ff91:	mov    WORD PTR [esi-0xd],?
  42ff94:	lea    ebx,[edx-0x2973fcda]
  42ff9a:	mov    al,0x0
  42ff9c:	mov    ah,ch
  42ff9e:	mov    esp,0x66463cf0
  42ffa3:	aam    0xa9
  42ffa5:	imul   ecx,DWORD PTR [edi],0x3f
  42ffa8:	fdivr  QWORD PTR [esi+eax*1+0x20]
  42ffac:	clc    
  42ffad:	mov    gs,WORD PTR [edx]
  42ffaf:	sbb    edi,DWORD PTR [ecx+0x15]
  42ffb2:	sub    ecx,DWORD PTR [esi]
  42ffb4:	mov    dh,0x1c
  42ffb6:	jle    0x42ffaf
  42ffb8:	push   esi
  42ffb9:	xchg   esp,eax
  42ffba:	clc    
  42ffbb:	(bad)  
  42ffbc:	xchg   ebx,eax
  42ffbd:	adc    al,ah
  42ffbf:	xor    ebp,DWORD PTR ds:[esp+edx*1-0x31a89f1]
  42ffc7:	call   0xe318bc59
  42ffcc:	ss jno 0x43003f
  42ffcf:	loop   0x42ffdd
  42ffd1:	call   0xdfcd:0x98aa171c
  42ffd8:	pop    ss
  42ffd9:	xor    BYTE PTR [ebx+0x74],ah
  42ffdc:	mov    ebx,0xd3a2955b
  42ffe1:	call   0x64da4ebe
  42ffe6:	mov    eax,0x63f9bc72
  42ffeb:	cld    
  42ffec:	cli    
  42ffed:	idiv   BYTE PTR [edi-0x48aaaba2]
  42fff3:	daa    
  42fff4:	and    BYTE PTR [ebp+0x68463387],ah
  42fffa:	dec    edx
  42fffb:	repz stc 
  42fffd:	inc    esp
  42fffe:	mov    bl,0xe2
  430000:	mov    ds:0x25c1f5dd,al
  430005:	lahf   
  430006:	push   0x6ec22fad
  43000b:	sub    BYTE PTR [esi+eiz*4+0x83a101b],dh
  430012:	stos   BYTE PTR es:[edi],al
  430013:	inc    esi
  430014:	pop    ss
  430015:	push   0x14346163
  43001a:	pop    ebp
  43001b:	fbstp  TBYTE PTR [ecx+0x5d1ab27]
  430021:	pop    eax
  430022:	mov    dl,0xf0
  430024:	popf   
  430025:	cmp    BYTE PTR [edx+0x7c5651af],al
  43002b:	xor    ch,bl
  43002d:	inc    esi
  43002e:	jbe    0x42ffd7
  430030:	ret    0x7728
  430033:	mov    al,ds:0xd1b0b0e6
  430038:	sub    al,BYTE PTR [esi]
  43003a:	or     al,0xf0
  43003c:	dec    eax
  43003d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43003e:	cmp    DWORD PTR [ebx+edi*1+0x28],0x6c4132c6
  430046:	imul   edi,DWORD PTR [edi+ebx*2-0x5fe2290a],0x3c8790a6
  430051:	(bad)  
  430052:	sahf   
  430053:	pop    ecx
  430054:	scas   al,BYTE PTR es:[edi]
  430055:	pop    ebp
  430056:	cmp    dh,BYTE PTR [ebp+ebp*2+0x7fe10242]
  43005d:	add    al,0xf7
  430060:	pop    esp
  430061:	jg     0x4300ce
  430063:	leave  
  430064:	cmp    eax,0x5b2ffa86
  430069:	sub    BYTE PTR [ebp-0x806c141],0x2b
  430070:	mov    dl,0xc7
  430072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430073:	mov    ebp,0x65afbc9e
  430078:	test   al,0x24
  43007a:	mov    al,ds:0x76897bc8
  43007f:	pop    esi
  430080:	into   
  430081:	mov    bh,0x6a
  430083:	dec    esi
  430084:	in     al,dx
  430085:	test   al,0x99
  430087:	test   DWORD PTR [edx-0x64f50c9],ecx
  43008d:	xchg   esp,eax
  43008e:	xchg   DWORD PTR [edi],eax
  430090:	addr16 lock dec ecx
  430093:	stc    
  430094:	imul   esi,ecx,0xffffffb8
  430097:	inc    ebx
  430098:	mov    ds:0xd0038fb3,eax
  43009d:	jae    0x4300ec
  43009f:	fadd   QWORD PTR [edi-0x5]
  4300a2:	enter  0xc1f8,0x75
  4300a6:	mov    ds,WORD PTR [edx+0x0]
  4300a9:	pusha  
  4300aa:	or     eax,0xe46fc95d
  4300af:	xor    bh,BYTE PTR [esi]
  4300b1:	test   al,0xb6
  4300b3:	push   ebp
  4300b4:	in     al,0x37
  4300b6:	add    ah,BYTE PTR [ebx-0x5d33749a]
  4300bc:	sti    
  4300bd:	push   cs
  4300be:	push   ebp
  4300bf:	fwait
  4300c0:	repnz mov dl,0xca
  4300c3:	lock stc 
  4300c5:	int3   
  4300c6:	mov    al,0xe4
  4300c8:	dec    ecx
  4300c9:	adc    dh,dl
  4300cb:	lds    edx,FWORD PTR [edx+ebp*8]
  4300ce:	and    al,0xed
  4300d0:	(bad)  
  4300d1:	jmp    0x4300b7
  4300d3:	bound  edi,QWORD PTR cs:[eax]
  4300d6:	ret    0x1c3
  4300d9:	loope  0x430107
  4300db:	dec    ebp
  4300dc:	dec    eax
  4300dd:	xchg   esi,eax
  4300de:	loopne 0x43014e
  4300e0:	mov    ah,0xf5
  4300e2:	(bad)
  4300e5:	outs   dx,DWORD PTR ds:[esi]
  4300e6:	add    DWORD PTR [edi+eax*4],0x210a81b3
  4300ed:	xor    cl,BYTE PTR [edi+0x767a283e]
  4300f3:	aaa    
  4300f4:	in     al,0xc7
  4300f6:	cmp    eax,0x2c4cc264
  4300fb:	ret    
  4300fc:	sar    DWORD PTR [edi-0x67],0x16
  430100:	sbb    DWORD PTR [edi+0x4f9a5370],edx
  430106:	jno    0x430168
  430108:	cmp    bl,BYTE PTR [esi+ebp*2+0x18]
  43010c:	lods   al,BYTE PTR ds:[esi]
  43010d:	dec    esi
  43010e:	lods   eax,DWORD PTR ds:[esi]
  43010f:	or     ebp,DWORD PTR [edi]
  430111:	add    al,0xc5
  430113:	cmp    BYTE PTR [esp+eax*4],0xdb
  430117:	into   
  430118:	jmp    0x43010e
  43011a:	mov    ah,0x1
  43011c:	fbld   TBYTE PTR [eax-0x4e]
  43011f:	sti    
  430120:	cmp    al,0x23
  430122:	pop    ebx
  430123:	lds    edi,FWORD PTR [edx-0x55]
  430126:	test   BYTE PTR ds:0xa40a991a,bl
  43012c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43012d:	push   ss
  43012e:	mov    ebp,DWORD PTR [ecx+ebp*8]
  430131:	scas   eax,DWORD PTR es:[edi]
  430132:	test   eax,0x5341ae2
  430137:	or     dl,BYTE PTR [eax-0x3f]
  43013a:	stos   BYTE PTR es:[edi],al
  43013b:	rcl    edi,0x70
  43013e:	mov    al,ds:0xa74de0d
  430143:	xor    al,0x5c
  430145:	imul   esp,esp,0x98403d3d
  43014b:	in     al,0x2b
  43014d:	mov    DWORD PTR [ecx],ecx
  43014f:	mov    gs,WORD PTR [ecx]
  430151:	sti    
  430152:	enter  0xf5bc,0xdb
  430156:	adc    bl,BYTE PTR [ebx]
  430158:	and    DWORD PTR [ebp+0x38],ecx
  43015b:	sti    
  43015c:	fs dec ecx
  43015e:	data16 ja 0x4301ca
  430161:	pop    es
  430162:	add    eax,0x4d88d4a6
  430167:	aaa    
  430168:	int    0x80
  43016a:	mov    ?,WORD PTR [esi+eax*2+0x2f17accc]
  430171:	inc    edx
  430172:	imul   esp,eax,0xd0b3593b
  430178:	inc    edi
  430179:	mov    BYTE PTR [ecx],ah
  43017b:	push   ecx
  43017c:	add    DWORD PTR [edi],0x5a
  43017f:	jns    0x4301f9
  430181:	add    eax,0x5bff476a
  430186:	xchg   ebx,eax
  430187:	rcr    BYTE PTR [eax-0x64],cl
  43018a:	cmp    ebp,DWORD PTR [ecx]
  43018c:	rep stos BYTE PTR es:[edi],al
  43018e:	add    bh,al
  430190:	adc    al,0x74
  430192:	ror    cl,0x87
  430195:	stos   DWORD PTR es:[edi],eax
  430196:	jmp    0x4301ba
  430198:	dec    edi
  430199:	jnp    0x4301d0
  43019b:	in     al,0x53
  43019d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43019e:	data16 mov ds:0xac4a6407,al
  4301a4:	or     al,0xcb
  4301a6:	repz xchg esp,eax
  4301a8:	push   edi
  4301a9:	jb     0x4301ff
  4301ab:	xchg   ah,ch
  4301ad:	ss mov ah,0x77
  4301b0:	fwait
  4301b1:	adc    eax,0xdaf66d75
  4301b6:	xor    al,0xd8
  4301b8:	imul   esp,DWORD PTR [edx-0x39],0x64
  4301bc:	cmp    ecx,DWORD PTR [ebx-0x36]
  4301bf:	inc    eax
  4301c0:	cld    
  4301c1:	addr16 mov ah,ch
  4301c4:	outs   dx,BYTE PTR ds:[esi]
  4301c5:	sbb    DWORD PTR [ebp-0x39],edi
  4301c8:	mov    ah,0x20
  4301ca:	xchg   edx,eax
  4301cb:	xchg   esp,eax
  4301cc:	out    0x8a,eax
  4301ce:	out    0x4,al
  4301d0:	stos   BYTE PTR es:[edi],al
  4301d1:	mov    eax,ds:0x605025c8
  4301d6:	inc    ecx
  4301d7:	sbb    ah,BYTE PTR [edi+edi*2+0x32]
  4301db:	in     al,dx
  4301dc:	xor    esi,DWORD PTR [ecx+0x4b]
  4301df:	xor    eax,0xd57c968b
  4301e4:	adc    ch,ah
  4301e6:	sbb    al,0x37
  4301e8:	imul   ebp,ebx,0x348bac5f
  4301ee:	test   BYTE PTR [ebp-0x1de0f17d],ch
  4301f4:	pop    edx
  4301f5:	add    ebx,DWORD PTR [eax+0x54]
  4301f8:	xchg   esp,eax
  4301f9:	cmp    eax,eax
  4301fb:	cmp    edi,DWORD PTR [esi-0x9]
  4301fe:	in     al,0x0
  430200:	enter  0x7e01,0xc1
  430204:	dec    ebp
  430205:	adc    edi,esi
  430207:	shl    BYTE PTR [ebx+edi*2],0xd9
  43020b:	outs   dx,DWORD PTR ds:[esi]
  43020c:	adc    esp,edx
  43020e:	out    dx,al
  43020f:	js     0x430228
  430211:	dec    eax
  430212:	sub    al,BYTE PTR [edx+0x41]
  430215:	pop    esi
  430216:	pop    es
  430217:	aas    
  430218:	jge    0x43026a
  43021a:	ins    BYTE PTR es:[edi],dx
  43021b:	pop    eax
  43021c:	mov    ebp,0x1bedfc7a
  430221:	clc    
  430222:	enter  0x4290,0x1
  430226:	imul   esi,DWORD PTR [eax-0x372cbe0d],0x38
  43022d:	mov    dh,dl
  43022f:	adc    BYTE PTR [eax],bh
  430231:	xor    DWORD PTR [eax-0x6aa3c1c2],esp
  430237:	mov    BYTE PTR ds:[ecx],bh
  43023a:	lea    eax,[ebx+0x1f]
  43023d:	sbb    al,0x80
  43023f:	mov    al,bh
  430241:	sub    DWORD PTR [edx],esp
  430243:	js     0x430205
  430245:	test   al,0xbd
  430247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430248:	cmp    DWORD PTR [esi+edx*4+0x37914afd],ecx
  43024f:	push   ds
  430250:	dec    esp
  430251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430252:	pusha  
  430253:	mov    ds:0xa7ee7c02,al
  430258:	inc    eax
  430259:	jo     0x430209
  43025b:	retf   0x77c6
  43025e:	dec    ebp
  43025f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430260:	test   al,0x61
  430262:	xchg   esp,eax
  430263:	or     DWORD PTR [edx+0x4c17fd9e],0xfffffff2
  43026a:	jmp    0xd45e:0x7b4a2db8
  430271:	pop    ecx
  430272:	dec    ebp
  430273:	sbb    ah,0xff
  430276:	dec    ecx
  430277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430278:	add    DWORD PTR [edx-0x7b5f876b],ebx
  43027e:	or     BYTE PTR [ebp-0x15],0xd5
  430282:	mov    ?,ebp
  430284:	outs   dx,DWORD PTR ds:[esi]
  430285:	mov    edi,0x7eec5ca8
  43028a:	and    esp,DWORD PTR [edx-0x33a959ae]
  430290:	jb     0x43024a
  430292:	pop    esi
  430293:	jg     0x430248
  430295:	dec    ebp
  430296:	sahf   
  430297:	and    al,dh
  430299:	sub    ah,BYTE PTR [esi+0x7b]
  43029c:	sub    DWORD PTR [ebx-0x67b18214],0xc2255d89
  4302a6:	mov    edi,0xbccdf5a2
  4302ab:	pop    ecx
  4302ac:	in     al,0xca
  4302ae:	xor    ah,ch
  4302b0:	xrelease mov BYTE PTR [edi],dl
  4302b3:	loopne 0x4302cb
  4302b5:	clc    
  4302b6:	gs nop
  4302b8:	test   eax,0x446db17
  4302bd:	push   ds
  4302be:	mov    dh,0x33
  4302c0:	cld    
  4302c1:	fstp   DWORD PTR [ebp-0x20d7e6fb]
  4302c7:	mov    bh,BYTE PTR gs:[esp+edx*1-0x4d]
  4302cc:	mov    edi,0xbf97d019
  4302d1:	lods   eax,DWORD PTR ds:[esi]
  4302d2:	pop    ebx
  4302d3:	out    0x1a,al
  4302d5:	(bad)  
  4302d6:	std    
  4302d7:	hlt    
  4302d8:	call   0x5ea904f3
  4302dd:	jns    0x4302d9
  4302df:	sbb    DWORD PTR [eax],0x55ba7463
  4302e5:	aaa    
  4302e6:	mov    ss,WORD PTR [edx-0x4bfac396]
  4302ec:	mov    ebp,0x37101ee2
  4302f1:	lods   al,BYTE PTR ds:[esi]
  4302f2:	pusha  
  4302f3:	div    BYTE PTR [esi+ebp*8]
  4302f6:	or     DWORD PTR [ebx-0x4e],0xffffffbf
  4302fa:	inc    edx
  4302fb:	or     BYTE PTR [eax-0x35],bl
  4302fe:	pop    ecx
  4302ff:	lock inc ebp
  430301:	fcomp  DWORD PTR [ebx+0x2ccf2ce7]
  430307:	jnp    0x43034c
  430309:	push   edi
  43030a:	outs   dx,DWORD PTR ds:[esi]
  43030b:	ds gs push eax
  43030e:	inc    edx
  43030f:	mul    BYTE PTR [edi+0x68]
  430312:	cmp    bh,BYTE PTR [ebx]
  430314:	push   esi
  430315:	es je  0x430372
  430318:	pop    esp
  430319:	enter  0x50ea,0x59
  43031d:	sbb    esi,esi
  43031f:	sbb    al,0x46
  430321:	aas    
  430322:	mov    bh,BYTE PTR [eax-0x5b]
  430325:	ja     0x430302
  430327:	dec    ebx
  430328:	inc    eax
  430329:	icebp  
  43032a:	sub    eax,0xe07a5420
  43032f:	neg    DWORD PTR [ecx-0x4642b89c]
  430335:	not    bl
  430337:	mov    edi,0x8688faf9
  43033c:	sub    eax,0xf4e5c341
  430341:	jne    0x4302cc
  430343:	lods   al,BYTE PTR ds:[esi]
  430344:	inc    esi
  430345:	mov    esi,0xd68d64b3
  43034a:	jae    0x4302e8
  43034c:	push   esp
  43034d:	aaa    
  43034e:	(bad)  
  43034f:	mov    al,ds:0x80001a55
  430354:	pop    ds
  430355:	js     0x4303c5
  430357:	push   ss
  430358:	arpl   WORD PTR [eax],bp
  43035a:	leave  
  43035b:	inc    edx
  43035c:	mov    dh,ah
  43035e:	pushf  
  43035f:	cli    
  430360:	push   ds
  430361:	test   al,0x5e
  430363:	xchg   edx,eax
  430364:	push   esp
  430365:	inc    ebp
  430366:	sahf   
  430367:	shl    BYTE PTR [ecx],0x70
  43036a:	push   0xffffffc3
  43036c:	bound  edi,QWORD PTR [edi]
  43036e:	repz sub al,0x68
  430371:	pop    ebp
  430372:	out    dx,eax
  430373:	push   edx
  430374:	push   ss
  430375:	push   ecx
  430376:	mov    al,0xc2
  430378:	ja     0x430306
  43037a:	mov    dh,0x55
  43037c:	into   
  43037d:	mov    ds:0x156ebcd6,al
  430382:	mov    al,0x48
  430384:	aaa    
  430385:	ss call 0x7d4:0x9d594b1d
  43038d:	sub    bh,dh
  43038f:	hlt    
  430390:	daa    
  430391:	scas   eax,DWORD PTR es:[edi]
  430392:	call   0xc777fc07
  430397:	lea    ebp,[esi+0x7b]
  43039a:	sub    al,0x19
  43039c:	shl    BYTE PTR [eax-0x66332cec],cl
  4303a2:	rol    BYTE PTR [ebp-0x76],cl
  4303a5:	hlt    
  4303a6:	les    ebx,FWORD PTR [edx]
  4303a8:	loopne 0x43032d
  4303aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4303ab:	lahf   
  4303ac:	scas   eax,DWORD PTR es:[edi]
  4303ad:	jne    0x430395
  4303af:	call   0x76cdcfb2
  4303b4:	add    al,0x18
  4303b6:	scas   al,BYTE PTR es:[edi]
  4303b7:	ret    
  4303b8:	or     al,0xad
  4303ba:	loope  0x4303e2
  4303bc:	ror    esp,cl
  4303be:	xchg   ecx,eax
  4303bf:	pop    ds
  4303c0:	xchg   BYTE PTR [eax],dh
  4303c2:	mov    ah,0x35
  4303c4:	jecxz  0x430412
  4303c6:	lods   al,BYTE PTR ds:[esi]
  4303c7:	mov    ebp,0x1d8f540
  4303cc:	xor    BYTE PTR [edx+0x722e05ce],dl
  4303d2:	mov    ah,bh
  4303d4:	adc    eax,0x1b168c0b
  4303d9:	in     al,0x34
  4303db:	aad    0x20
  4303dd:	jmp    0x43036f
  4303df:	xor    DWORD PTR [bx],edx
  4303e2:	mov    esi,0x5244b6a9
  4303e7:	xor    ch,BYTE PTR [ebx]
  4303e9:	sbb    edx,edx
  4303eb:	int    0x22
  4303ed:	or     esp,ebp
  4303ef:	push   ss
  4303f0:	call   0x93722964
  4303f5:	add    eax,0x5551105e
  4303fa:	jmp    0x3409:0x5a22ef41
  430401:	lock or bh,ah
  430404:	cmp    DWORD PTR [edx+0x7f],edi
  430407:	push   edx
  430408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430409:	pop    eax
  43040a:	cs call 0xfc44:0x8cfd7c70
  430412:	jl     0x4303c7
  430414:	(bad)  
  430415:	outs   dx,BYTE PTR ds:[esi]
  430416:	mov    al,0x22
  430418:	aad    0x0
  43041a:	pushf  
  43041b:	and    al,0xf4
  43041d:	or     cl,al
  43041f:	stc    
  430420:	xor    DWORD PTR [esi+eax*8+0x2b9b4801],esi
  430427:	sahf   
  430428:	cmpxchg DWORD PTR [esi+0x116cfc94],edx
  43042f:	std    
  430430:	push   0x113d5c32
  430435:	cmc    
  430436:	nop
  430437:	mov    dh,0xd8
  430439:	popf   
  43043a:	and    al,0xfa
  43043c:	mov    dl,0xab
  43043e:	enter  0xeb38,0xf3
  430442:	mov    bh,0x22
  430444:	xor    dh,BYTE PTR [esi+0x7a]
  430447:	ins    DWORD PTR es:[edi],dx
  430448:	pop    esp
  430449:	mov    ch,0x81
  43044b:	add    BYTE PTR [esi+0xc36f490],0x80
  430452:	xlat   BYTE PTR ds:[ebx]
  430453:	repnz dec edi
  430455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430456:	pop    eax
  430457:	or     BYTE PTR [ebx-0x33c75b58],bl
  43045d:	mov    cl,cl
  43045f:	mov    ds:0xc88c87e6,eax
  430464:	cmp    ch,bh
  430466:	iret   
  430467:	push   ecx
  430468:	(bad)  
  430469:	mov    eax,0x1470c53d
  43046e:	aad    0x83
  430470:	mov    dh,0x4c
  430472:	adc    DWORD PTR [eax-0x2e5d6bb6],0xe9fe7cd4
  43047c:	or     DWORD PTR [eax+edi*4],ebp
  43047f:	sbb    bl,BYTE PTR [edx+ebx*1-0x59]
  430483:	aaa    
  430484:	xchg   ebp,eax
  430485:	fs push edi
  430487:	fcom   QWORD PTR [ecx+0x218f3bef]
  43048d:	ins    BYTE PTR es:[edi],dx
  43048e:	xchg   ebp,eax
  430490:	add    BYTE PTR [ebp+0x3b],cl
  430493:	xchg   edx,eax
  430494:	in     eax,0xa0
  430496:	ins    DWORD PTR es:[edi],dx
  430497:	pushf  
  430498:	addr16 test al,0x97
  43049b:	lea    esi,es:[ebx+0x664be8ca]
  4304a2:	int3   
  4304a3:	mov    al,0xa7
  4304a6:	push   ebx
  4304a7:	aaa    
  4304a8:	fist   DWORD PTR [edi+0x1ad6f0e0]
  4304ae:	pop    eax
  4304af:	or     BYTE PTR [eax+0x146c7b62],bh
  4304b5:	jbe    0x43043e
  4304b7:	pop    esp
  4304b8:	jmp    0x5cbc:0x25dffc0c
  4304bf:	cmp    cl,ch
  4304c1:	scas   al,BYTE PTR es:[edi]
  4304c2:	stos   BYTE PTR es:[edi],al
  4304c3:	ret    0x140b
  4304c6:	loopne 0x4304de
  4304c8:	rcl    DWORD PTR [esi],0xe5
  4304cb:	rol    dl,0x97
  4304ce:	xchg   ecx,eax
  4304cf:	add    al,0xe5
  4304d1:	unpcklps xmm4,xmm1
  4304d4:	(bad)  
  4304d5:	or     dl,BYTE PTR [ebx+eiz*4+0x2f178628]
  4304dc:	adc    dh,BYTE PTR [ebp+0x5c]
  4304df:	sbb    DWORD PTR [ebp-0xa54e6b4],esp
  4304e5:	adc    ch,BYTE PTR [ebp-0xbe67460]
  4304eb:	xor    eax,0xbc4a0312
  4304f0:	dec    eax
  4304f1:	aas    
  4304f2:	add    DWORD PTR [eax],ebx
  4304f4:	cli    
  4304f5:	scas   al,BYTE PTR es:[edi]
  4304f6:	inc    ebx
  4304f7:	mov    esi,0xfdfa7d6b
  4304fc:	cmp    al,0x86
  4304fe:	bound  ebp,QWORD PTR [edi-0x26efa269]
  430504:	jecxz  0x430566
  430506:	mov    bh,0xba
  430508:	xor    DWORD PTR [ecx-0x49f2015e],edx
  43050e:	or     BYTE PTR [ebp-0x1b],al
  430511:	scas   al,BYTE PTR es:[edi]
  430512:	dec    edi
  430513:	jb     0x430546
  430515:	fisttp QWORD PTR [ebx+0x2c]
  430518:	xor    ah,cl
  43051a:	ja     0x430521
  43051c:	data16 mov BYTE PTR [ebp-0x326faf47],cl
  430523:	xor    ebx,DWORD PTR [esi]
  430525:	dec    ebp
  430526:	xor    DWORD PTR [edx-0x754f8b57],0x29338e78
  430530:	or     DWORD PTR [eax-0x68],ecx
  430533:	sahf   
  430534:	sar    BYTE PTR [edi+0x3a],1
  430537:	in     al,dx
  430538:	jae    0x43055f
  43053a:	inc    edx
  43053b:	inc    eax
  43053c:	imul   eax,ebp,0x3367a68a
  430542:	add    BYTE PTR [eax],al
  430544:	add    BYTE PTR [eax],al
  430546:	add    BYTE PTR [eax],al
  430548:	cdq    
  430549:	push   ds
  43054a:	and    al,0x5c
  43054c:	push   ecx
  43054d:	or     DWORD PTR [eax],eax
  43054f:	add    BYTE PTR [eax],al
  430551:	add    BYTE PTR [eax],al
  430553:	add    BYTE PTR [ecx+0x9],dl
  430556:	add    BYTE PTR [eax],al
  430558:	add    BYTE PTR ds:[esi],ah
  43055b:	jl     0x43055d
  43055d:	add    dh,BYTE PTR [esi]
  43055f:	or     BYTE PTR [eax],al
  430561:	add    ah,al
  430563:	inc    ebp
  430564:	add    BYTE PTR [ebx-0x5a],ch
  430567:	mov    ecx,0xeadfe443
  43056c:	push   ebp
  43056d:	and    al,0xdf
  43056f:	ins    BYTE PTR es:[edi],dx
  430570:	mov    edi,0x69824fb1
  430575:	pop    edi
  430576:	dec    eax
  430577:	(bad)  
  430578:	stos   BYTE PTR es:[edi],al
  430579:	or     DWORD PTR [edx-0x79ecdfa9],ebp
  43057f:	ins    BYTE PTR es:[edi],dx
  430580:	popa   
  430581:	dec    ecx
  430582:	push   0x3e680494
  430587:	xor    DWORD PTR [eax+0x529224cb],edx
  43058d:	fsubr  QWORD PTR [ebp-0x5b]
  430590:	icebp  
  430591:	cmp    BYTE PTR [esi-0x7dc031f8],bh
  430597:	xchg   ebp,eax
  430598:	mov    al,0x8c
  43059a:	pop    esp
  43059b:	jmp    0x4305f2
  43059d:	mov    eax,ds:0xf1b2fdf9
  4305a2:	stc    
  4305a3:	and    cl,0x7e
  4305a6:	enter  0xa6fe,0x26
  4305aa:	popf   
  4305ab:	mov    ecx,0xa17c7ba4
  4305b0:	and    DWORD PTR [edx-0x49],eax
  4305b3:	mov    ah,0x7f
  4305b5:	dec    esp
  4305b6:	push   edi
  4305b7:	xor    eax,edi
  4305b9:	dec    edi
  4305ba:	je     0x4305ad
  4305bc:	pop    ss
  4305bd:	popa   
  4305be:	jo     0x4305ce
  4305c0:	in     eax,dx
  4305c1:	cmp    al,bh
  4305c3:	stc    
  4305c4:	call   0x59c0:0xbe94eab7
  4305cb:	jmp    DWORD PTR [edx-0x473daddd]
  4305d1:	push   ebx
  4305d2:	ins    DWORD PTR es:[edi],dx
  4305d3:	push   0x3d
  4305d5:	add    dh,BYTE PTR [eax+0x6dcab38]
  4305db:	xchg   ecx,eax
  4305dc:	pop    esi
  4305dd:	cmp    eax,0x4b2422ce
  4305e2:	test   BYTE PTR [esi],bh
  4305e4:	popf   
  4305e5:	jno    0x430652
  4305e7:	pop    edi
  4305e8:	repz dec ebp
  4305ea:	popf   
  4305eb:	test   al,0xc4
  4305ed:	or     DWORD PTR [eax-0x4c2516f3],0xffffffa4
  4305f4:	int3   
  4305f5:	arpl   WORD PTR [esi-0x9],bp
  4305f8:	cli    
  4305f9:	adc    BYTE PTR [edx],dl
  4305fb:	js     0x4305fc
  4305fd:	lock ins DWORD PTR es:[edi],dx
  4305ff:	call   0x15ae2416
  430604:	pop    es
  430605:	adc    DWORD PTR [ebp*8-0x112a2de2],0xbc16c937
  430610:	jno    0x4305ad
  430612:	call   0xe0e0:0x9b450a1d
  430619:	inc    esp
  43061a:	loope  0x43063d
  43061c:	ins    BYTE PTR es:[edi],dx
  43061d:	icebp  
  43061e:	fsub   DWORD PTR [ebp+0x48f3042b]
  430624:	inc    esp
  430625:	sbb    eax,0xc7146df4
  43062a:	sub    BYTE PTR [edi-0x7a],ah
  43062d:	jmp    0xd03a:0x4fe874f
  430634:	int3   
  430635:	cs cmc 
  430637:	add    DWORD PTR [edi-0xb1e7349],esp
  43063d:	xchg   edi,eax
  43063e:	addr16 xchg ebp,eax
  430640:	nop
  430641:	and    ah,cl
  430643:	out    0x64,al
  430645:	sbb    al,ah
  430647:	hlt    
  430648:	pop    ds
  430649:	inc    edi
  43064a:	hlt    
  43064b:	cmp    DWORD PTR [esi+0x4e4e3cd0],ebx
  430651:	push   cs
  430652:	fsub   DWORD PTR [eax+0x12]
  430655:	pop    eax
  430656:	dec    eax
  430657:	pusha  
  430658:	adc    ch,BYTE PTR [ecx+0x67d1beb9]
  43065e:	push   ds
  43065f:	retf   0x2b08
  430662:	inc    esi
  430663:	xchg   esi,eax
  430664:	pushf  
  430665:	or     BYTE PTR [edx+eax*4],ah
  430668:	sub    ebp,DWORD PTR [edi+edi*1]
  43066b:	xor    al,0xae
  43066d:	retf   
  43066e:	mov    bh,0xe6
  430670:	mov    bh,0xbf
  430672:	push   eax
  430673:	mov    edx,0xfb6417ce
  430678:	cdq    
  430679:	xchg   DWORD PTR [edi+0x16525f74],eax
  43067f:	mov    ecx,ecx
  430681:	xor    dh,bl
  430683:	rcr    DWORD PTR [esp+eax*8],0x8c
  430687:	rol    bh,1
  430689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43068a:	pusha  
  43068b:	mov    ah,0x47
  43068d:	inc    eax
  43068e:	cmc    
  43068f:	sar    DWORD PTR [ecx-0x3e2bd453],0x44
  430696:	lods   eax,DWORD PTR fs:[esi]
  430698:	xor    ch,BYTE PTR [ebx-0x71]
  43069b:	add    edi,DWORD PTR [edi+0x9889459]
  4306a1:	lds    esp,FWORD PTR [eax-0x565c8e8a]
  4306a7:	sub    ch,BYTE PTR [esp+eiz*4-0x39a6ec25]
  4306ae:	addr16 call 0xd9a5aeb
  4306b4:	inc    edx
  4306b6:	mov    al,ds:0x785858e5
  4306bb:	jp     0x43066c
  4306bd:	xchg   ecx,eax
  4306be:	jecxz  0x4306af
  4306c0:	mov    dh,0x52
  4306c2:	cli    
  4306c3:	pushf  
  4306c4:	mov    eax,ds:0x70358925
  4306c9:	xchg   ecx,eax
  4306ca:	dec    ebx
  4306cb:	mov    al,al
  4306cd:	pop    ss
  4306ce:	int    0xd3
  4306d0:	js     0x430724
  4306d2:	jmp    0xe027bdb3
  4306d7:	push   eax
  4306d8:	jbe    0x430721
  4306da:	mov    ?,eax
  4306dc:	add    BYTE PTR [ebp-0x74],0xf3
  4306e0:	jp     0x43069d
  4306e2:	jbe    0x430685
  4306e4:	xchg   ecx,eax
  4306e5:	and    esi,DWORD PTR ds:0x9af999b0
  4306eb:	xchg   esp,eax
  4306ec:	outs   dx,BYTE PTR ds:[esi]
  4306ed:	mov    ebp,0x44d40bc0
  4306f2:	icebp  
  4306f3:	pop    ebx
  4306f4:	dec    esi
  4306f5:	stos   BYTE PTR es:[edi],al
  4306f6:	addr16 sbb al,0x91
  4306f9:	clc    
  4306fa:	imul   ebx
  4306fc:	push   ebp
  4306fd:	push   0x736f4ffc
  430702:	mov    al,ds:0x354f0256
  430707:	add    al,0x15
  430709:	in     eax,0x29
  43070b:	(bad)  
  43070c:	fcmovb st,st(3)
  43070e:	push   ebp
  43070f:	mov    ch,0x8a
  430711:	xchg   edi,eax
  430712:	add    ecx,DWORD PTR [ebp-0x18]
  430715:	jp     0x430708
  430717:	lock jns 0x43073c
  43071a:	(bad)  
  43071b:	fmul   QWORD PTR [esi+0xc]
  43071e:	inc    eax
  43071f:	daa    
  430720:	in     al,0xed
  430722:	scas   al,BYTE PTR es:[edi]
  430723:	in     eax,dx
  430724:	xchg   ecx,eax
  430725:	imul   esi,DWORD PTR [eax],0x36
  430728:	(bad)  
  430729:	dec    edx
  43072a:	js     0x4306ac
  43072c:	ror    DWORD PTR [edi+0x74],0xd8
  430730:	clc    
  430731:	cmp    DWORD PTR [edi],0xefbee797
  430737:	dec    ebx
  430738:	cld    
  430739:	dec    edx
  43073a:	fiadd  DWORD PTR gs:[ebp-0x34]
  43073e:	ret    
  43073f:	in     eax,0x32
  430741:	and    BYTE PTR [esi],bh
  430743:	leave  
  430744:	jmp    0x4466:0xc90ac580
  43074b:	mov    al,0xa2
  43074d:	cmp    esi,ebx
  43074f:	and    DWORD PTR [edi],edi
  430751:	repz xchg ebp,eax
  430753:	in     al,dx
  430754:	inc    esp
  430755:	(bad)  
  430756:	push   eax
  430757:	mov    cs,WORD PTR [eax]
  430759:	or     edx,DWORD PTR [edi+0x25]
  43075c:	adc    BYTE PTR [edx],dh
  43075e:	jecxz  0x4307aa
  430760:	aam    0x76
  430762:	out    dx,al
  430763:	adc    al,0x38
  430765:	xor    al,0x51
  430767:	pop    ss
  430768:	sti    
  430769:	jbe    0x4307ad
  43076b:	aaa    
  43076c:	fcom   QWORD PTR [eax+0x58]
  43076f:	add    BYTE PTR [ebx],bh
  430771:	sbb    ah,BYTE PTR [edi+0x338fce11]
  430777:	jl     0x4307d1
  430779:	inc    edx
  43077a:	jecxz  0x43077e
  43077c:	imul   edi,DWORD PTR [edx-0x3e],0xab0d2457
  430783:	fsubr  st(3),st
  430785:	xchg   esp,eax
  430786:	push   esi
  430787:	test   DWORD PTR ds:[eax+0x69],0x68e92b29
  43078f:	lahf   
  430790:	call   0xc26f746c
  430795:	cmp    dl,BYTE PTR [eax+0x59f7df5c]
  43079b:	nop
  43079c:	lods   eax,DWORD PTR ds:[esi]
  43079d:	imul   DWORD PTR [ecx]
  43079f:	inc    edx
  4307a0:	pop    ecx
  4307a1:	mov    eax,ds:0x64b42734
  4307a6:	frstor [edx+edx*4]
  4307aa:	mov    ah,0x66
  4307ac:	lods   al,BYTE PTR ds:[esi]
  4307ad:	pop    esp
  4307ae:	dec    ecx
  4307af:	adc    BYTE PTR [esi],dh
  4307b1:	cmp    BYTE PTR [edx+esi*4+0x41804b4c],ch
  4307b8:	ins    BYTE PTR es:[edi],dx
  4307b9:	imul   edx,edi,0x6e
  4307bc:	ja     0x430792
  4307be:	aam    0xa4
  4307c0:	jle    0x430803
  4307c2:	cmp    al,0x11
  4307c4:	mov    esi,0xc88ef2a8
  4307c9:	retf   0x1512
  4307cc:	scas   eax,DWORD PTR es:[edi]
  4307cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4307ce:	inc    ecx
  4307cf:	pop    eax
  4307d0:	data16 jo 0x430768
  4307d3:	mov    cl,0x54
  4307d5:	mov    ebp,DWORD PTR [edi]
  4307d7:	loop   0x430810
  4307d9:	out    0x94,al
  4307db:	mov    ss,WORD PTR [ecx+0x22]
  4307de:	adc    edi,DWORD PTR [esi-0x47cc4d75]
  4307e4:	das    
  4307e5:	loopne 0x4307f5
  4307e7:	mov    bh,0xaf
  4307e9:	imul   edi,esp,0x28
  4307ec:	fcomp  QWORD PTR [edi]
  4307ee:	and    al,BYTE PTR es:[edx]
  4307f1:	sbb    ebx,DWORD PTR [esi-0x34]
  4307f4:	push   cs
  4307f5:	add    BYTE PTR [edi],ch
  4307f7:	or     esp,ebx
  4307f9:	add    bl,ch
  4307fb:	clc    
  4307fc:	das    
  4307fd:	fwait
  4307fe:	test   al,0xb6
  430800:	and    DWORD PTR [esi+0x7fe1c9ec],ebx
  430806:	pop    eax
  430807:	int3   
  430808:	mov    ds:0xb183889e,al
  43080d:	sbb    ebp,DWORD PTR [eax-0x3bc60f56]
  430813:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  430815:	sahf   
  430816:	ret    0x1e0f
  430819:	adc    al,0x3e
  43081b:	sbb    BYTE PTR [ebx-0x4b029274],dl
  430821:	mov    edx,0xbba4dfbc
  430826:	xor    eax,0x13d8ed91
  43082b:	loopne 0x43086a
  43082d:	adc    edx,DWORD PTR [edx]
  43082f:	arpl   WORD PTR [edx],ax
  430831:	int3   
  430832:	les    ebp,FWORD PTR [ebp+0x54ca8704]
  430838:	pop    esp
  430839:	and    eax,0x28c407fc
  43083e:	inc    eax
  43083f:	sbb    al,0x50
  430841:	neg    DWORD PTR [edi]
  430843:	les    esi,FWORD PTR [eax+0x7]
  430846:	dec    esp
  430847:	jbe    0x4308c8
  430849:	ins    DWORD PTR es:[edi],dx
  43084a:	mov    eax,ds:0x687424ae
  43084f:	hlt    
  430850:	or     al,0xf5
  430852:	int3   
  430853:	pop    edi
  430854:	mov    dl,0x8d
  430856:	neg    bh
  430858:	sbb    BYTE PTR [edx],ch
  43085a:	shr    ecx,cl
  43085c:	push   bp
  43085e:	jl     0x4308c7
  430860:	fdivr  QWORD PTR [ebx*2+0x44d05964]
  430867:	and    edi,DWORD PTR [ecx*2-0x3d403aa0]
  43086e:	pop    ss
  43086f:	lds    edi,FWORD PTR [ebx-0x727b9fb7]
  430875:	loopne 0x430803
  430877:	push   ecx
  430878:	push   edi
  430879:	fadd   QWORD PTR [ecx]
  43087b:	ins    DWORD PTR es:[edi],dx
  43087c:	sub    al,0x18
  43087e:	(bad)  
  43087f:	fwait
  430880:	mov    bh,0x26
  430882:	nop
  430883:	push   esp
  430884:	lock push eax
  430886:	stos   BYTE PTR es:[edi],al
  430887:	jge    0x430826
  430889:	mov    esp,0x620db800
  43088e:	je     0x43086e
  430890:	fist   WORD PTR [edi-0x42396eaf]
  430896:	popa   
  430897:	cwde   
  430898:	pop    ecx
  430899:	fisubr WORD PTR [ebx+0xe]
  43089c:	cmp    ebx,DWORD PTR [esi+0x674002ca]
  4308a2:	xor    BYTE PTR [edi+eiz*1+0x5adff86a],dl
  4308a9:	fisttp WORD PTR fs:0x2978091e
  4308b0:	(bad)  
  4308b1:	mov    dh,0x88
  4308b3:	jle    0x430910
  4308b5:	jmp    0x661862b7
  4308ba:	add    DWORD PTR [ebx+ebx*1-0x6fc5f539],ebp
  4308c1:	imul   ebx,DWORD PTR ss:[ecx],0xffffffd0
  4308c5:	ret    
  4308c6:	xor    cl,BYTE PTR [edi+0xc]
  4308c9:	js     0x43091b
  4308cb:	retf   
  4308cc:	push   esi
  4308cd:	js     0x4308ec
  4308cf:	inc    edx
  4308d0:	iret   
  4308d1:	pop    ebx
  4308d2:	inc    esp
  4308d3:	mov    al,ds:0x629c9b17
  4308d8:	add    edx,DWORD PTR [esp+ebp*1]
  4308db:	sub    BYTE PTR [eax+0x20],ch
  4308de:	lods   eax,DWORD PTR ds:[esi]
  4308df:	shl    BYTE PTR [edx+0x21],0xfc
  4308e3:	mov    bh,0x11
  4308e5:	jmp    0x64278547
  4308ea:	ins    DWORD PTR es:[edi],dx
  4308eb:	xchg   esp,eax
  4308ec:	or     eax,0x7ba2d58f
  4308f1:	mov    ecx,gs
  4308f3:	push   edi
  4308f4:	mov    esi,0x469a4015
  4308f9:	js     0x4308ab
  4308fb:	jmp    0x8c63:0xa9a1c66a
  430902:	je     0x4308d8
  430904:	test   al,0x21
  430906:	nop
  430907:	or     esp,ebp
  430909:	mov    ebx,0x73f8d341
  43090e:	adc    ecx,esi
  430910:	in     eax,dx
  430911:	xor    al,0x24
  430913:	mov    ebx,0x151e1c45
  430918:	mov    eax,0xdbda1367
  43091d:	cmp    al,ah
  43091f:	loopne 0x430912
  430921:	sub    eax,DWORD PTR [ebx]
  430923:	xor    cl,ch
  430925:	xchg   esi,eax
  430926:	shr    al,1
  430928:	(bad)  
  430929:	and    DWORD PTR [ebp+0x62e77283],esi
  43092f:	cwde   
  430930:	or     al,0x6b
  430932:	cmp    BYTE PTR [esp+edi*8],ah
  430935:	(bad)  
  430937:	pop    ecx
  430938:	pop    edx
  430939:	xor    BYTE PTR [ebx],bl
  43093b:	daa    
  43093c:	(bad)  
  43093d:	mov    cl,0xe0
  43093f:	call   0x701b2dbf
  430944:	or     DWORD PTR [ebx+edi*2-0x24],eax
  430948:	fcmovnb st,st(4)
  43094a:	and    eax,0x93bc6ffc
  43094f:	je     0x4308fc
  430951:	or     al,0xea
  430953:	ins    BYTE PTR es:[edi],dx
  430954:	and    BYTE PTR [eax-0x5f],dl
  430957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430958:	loop   0x43097f
  43095a:	xor    DWORD PTR [eax],ecx
  43095c:	jle    0x4309a2
  43095e:	sbb    edi,DWORD PTR [eax-0x24]
  430961:	call   0xb568:0x401d14af
  430968:	mov    al,ds:0x8955081
  43096d:	sti    
  43096e:	or     al,0x10
  430970:	out    dx,al
  430971:	std    
  430972:	and    eax,0xb772ecf7
  430977:	sub    eax,0xcfe37e34
  43097c:	ror    dl,1
  43097e:	retf   0x9e6
  430981:	pop    eax
  430982:	adc    edi,ebp
  430984:	sub    esp,DWORD PTR [eax]
  430986:	sub    eax,0x7c9d60dc
  43098b:	add    BYTE PTR [ecx],0xe6
  43098e:	mov    dl,0x1a
  430990:	mov    edx,0xaaa02dab
  430995:	div    DWORD PTR [eax+0x7125bda3]
  43099b:	imul   ecx,DWORD PTR [eax+0x2b],0x42
  43099f:	cwde   
  4309a0:	mov    eax,ds:0x4212471a
  4309a5:	ins    BYTE PTR es:[edi],dx
  4309a6:	ror    BYTE PTR [eax],0xed
  4309a9:	cli    
  4309aa:	rcl    esi,cl
  4309ac:	add    eax,0x842f90d3
  4309b1:	jp     0x430a2b
  4309b3:	push   cs
  4309b4:	add    eax,DWORD PTR [edi]
  4309b6:	aaa    
  4309b7:	mov    ah,0x42
  4309b9:	fldenv [ebp+0x15]
  4309bc:	ins    BYTE PTR es:[edi],dx
  4309bd:	adc    BYTE PTR [esi],0x97
  4309c0:	pop    esp
  4309c1:	xchg   edx,eax
  4309c2:	mov    eax,ds:0xa5a706e1
  4309c7:	xchg   ecx,eax
  4309c8:	push   edx
  4309c9:	xor    dl,0x1e
  4309cc:	xchg   edx,eax
  4309cd:	test   al,0xb0
  4309cf:	(bad)
  4309d3:	push   esi
  4309d4:	in     eax,0xc7
  4309d6:	inc    eax
  4309d7:	adc    eax,0xc848154b
  4309dc:	hlt    
  4309dd:	and    edi,DWORD PTR [esi]
  4309df:	ror    BYTE PTR [eax-0x1342a2ab],cl
  4309e5:	and    al,0x28
  4309e7:	in     eax,dx
  4309e8:	or     eax,0x84d8d025
  4309ed:	xchg   esp,eax
  4309ee:	(bad)  
  4309ef:	and    edi,edx
  4309f1:	sbb    dl,cl
  4309f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4309f4:	pop    esi
  4309f5:	sub    DWORD PTR [eax-0x5f0e6eb2],edi
  4309fb:	stc    
  4309fc:	mov    al,ds:0x95dc3b85
  430a01:	xlat   BYTE PTR ds:[ebx]
  430a02:	mov    dh,0xfa
  430a04:	mov    ds,WORD PTR [ecx+0x15]
  430a07:	jo     0x430a09
  430a09:	imul   edi,DWORD PTR [eax],0xffffffcd
  430a0c:	les    esp,FWORD PTR [eax+ecx*2]
  430a0f:	push   es
  430a10:	jno    0x4309ba
  430a12:	int    0xfc
  430a14:	mov    al,ds:0xda96560d
  430a19:	mov    ebx,0xa29f01cc
  430a1e:	mov    bh,0x46
  430a20:	out    0x49,eax
  430a22:	pop    esp
  430a23:	lock jmp 0x4309ca
  430a26:	adc    al,dh
  430a28:	adc    al,0x6d
  430a2a:	jl     0x430a8a
  430a2c:	adc    al,0xc7
  430a2e:	mov    al,ds:0x59c73b1f
  430a33:	mov    DWORD PTR [edx-0xdd8dcc8],esp
  430a39:	dec    esp
  430a3a:	cmp    BYTE PTR [ebp+0x43],bl
  430a3d:	outs   dx,BYTE PTR ds:[esi]
  430a3e:	loopne 0x4309d9
  430a40:	test   DWORD PTR [ebx+0x715b1b29],edx
  430a46:	push   es
  430a47:	add    al,0x66
  430a49:	mov    cl,0x13
  430a4b:	sar    BYTE PTR [ebx+0x28899bc1],0xd3
  430a52:	jmp    0x430a85
  430a54:	(bad)  
  430a55:	mov    ebp,0x4c7cc5a3
  430a5a:	pop    eax
  430a5b:	mov    esi,0xe531147a
  430a60:	pop    esi
  430a61:	mov    ah,0x70
  430a63:	mov    ecx,0x5bb32f8f
  430a68:	add    al,0xd3
  430a6a:	loope  0x430a84
  430a6c:	stos   DWORD PTR es:[edi],eax
  430a6d:	cli    
  430a6e:	lods   al,BYTE PTR ds:[esi]
  430a6f:	retf   0xa9e2
  430a72:	cmp    DWORD PTR [ebx+0x464c933c],edx
  430a78:	push   0x4353afc3
  430a7d:	pusha  
  430a7e:	jne    0x430a1e
  430a80:	mov    ds:0x5fdbdec8,al
  430a85:	repz test BYTE PTR [ebp+0x28b96d09],bh
  430a8c:	in     eax,0xb9
  430a8e:	xor    ch,BYTE PTR [edx+eax*8]
  430a91:	push   ecx
  430a92:	pop    es
  430a93:	xor    DWORD PTR [ebx],ebp
  430a95:	js     0x430ad5
  430a97:	jo     0x430ae9
  430a99:	fisubr DWORD PTR [eax-0x5666c713]
  430a9f:	mov    ah,0xb5
  430aa1:	je     0x430b1b
  430aa3:	aam    0x7b
  430aa5:	hlt    
  430aa6:	xor    DWORD PTR [ebx+eiz*1-0x77],0xffffff98
  430aab:	push   0x5b67096b
  430ab0:	cmc    
  430ab1:	imul   esp,eax,0xffffffbc
  430ab4:	lea    ebx,[esp+edx*8+0x68]
  430ab8:	and    bh,BYTE PTR [edi+0x6a]
  430abb:	jb     0x430b21
  430abd:	je     0x430a9b
  430abf:	out    dx,al
  430ac0:	out    dx,eax
  430ac1:	std    
  430ac2:	jnp    0x430a65
  430ac4:	mov    DWORD PTR [eax+0x1e5e4f51],ecx
  430aca:	mov    BYTE PTR [esp+ecx*8],bl
  430acd:	dec    edx
  430ace:	lods   al,BYTE PTR ds:[esi]
  430acf:	and    DWORD PTR [edx],eax
  430ad1:	out    0xe9,eax
  430ad3:	push   cs
  430ad4:	test   BYTE PTR [ebx],dh
  430ad6:	push   ebp
  430ad7:	sar    BYTE PTR [ebx],1
  430ad9:	add    BYTE PTR [ecx],ch
  430adb:	pop    edi
  430adc:	sbb    DWORD PTR [esi-0x2a],ebx
  430adf:	adc    al,0x78
  430ae1:	jno    0x430a66
  430ae3:	fst    QWORD PTR [ecx-0x23]
  430ae6:	xchg   ebx,eax
  430ae7:	mov    WORD PTR [ebx],?
  430ae9:	pushf  
  430aea:	out    dx,al
  430aeb:	sbb    DWORD PTR [edx-0xa66a114],esp
  430af1:	retf   0x19c0
  430af4:	xchg   edi,eax
  430af5:	jne    0x430b25
  430af7:	jbe    0x430b30
  430af9:	stos   BYTE PTR es:[edi],al
  430afa:	pop    ss
  430afb:	in     al,0xd1
  430afd:	pop    ds
  430afe:	pop    ebx
  430aff:	sti    
  430b00:	push   edx
  430b01:	test   DWORD PTR [ebx+ecx*8+0x8],ecx
  430b05:	adc    eax,0xbd1a7405
  430b0a:	mov    edx,0x96b0c03e
  430b0f:	xor    cl,BYTE PTR [eax]
  430b11:	mov    bl,0x0
  430b13:	xor    dl,BYTE PTR [ebx]
  430b15:	or     edx,esp
  430b17:	add    esi,ebx
  430b19:	pop    edx
  430b1a:	cmp    BYTE PTR [esi-0x7451d12],bh
  430b20:	cld    
  430b21:	xor    dl,BYTE PTR [edi+ebp*4+0x8]
  430b25:	pop    ebx
  430b26:	jle    0x430b21
  430b28:	sbb    al,0xfb
  430b2a:	jmp    0x430b3a
  430b2c:	xor    eax,0x25d9d74d
  430b31:	inc    eax
  430b32:	shr    DWORD PTR [ebx+0xd],cl
  430b35:	jnp    0x430b79
  430b37:	(bad)  
  430b38:	mov    ecx,0x2128e8e0
  430b3d:	call   0xb2868373
  430b42:	iret   
  430b43:	or     al,0xdb
  430b45:	sahf   
  430b46:	in     al,0x51
  430b48:	daa    
  430b49:	out    0x7,eax
  430b4b:	xchg   ebx,eax
  430b4c:	xor    bh,al
  430b4e:	adc    bl,BYTE PTR [esi]
  430b50:	out    0xfa,eax
  430b52:	sub    eax,0x71543b36
  430b57:	mov    edx,fs
  430b59:	scas   eax,DWORD PTR es:[edi]
  430b5a:	adc    BYTE PTR [ebx],dl
  430b5c:	rcr    dh,0xfc
  430b5f:	inc    edx
  430b60:	bound  edi,QWORD PTR [ecx+0x61a7b3f]
  430b66:	sbb    eax,0xab5bb720
  430b6b:	lods   eax,DWORD PTR ds:[esi]
  430b6c:	fstp   st(4)
  430b6e:	out    dx,al
  430b6f:	push   edi
  430b70:	inc    esp
  430b71:	and    al,0xf0
  430b73:	push   0xee36ce0a
  430b78:	jno    0x430be2
  430b7a:	in     al,dx
  430b7b:	jmp    0x430bae
  430b7d:	(bad)
  430b81:	imul   ecx,DWORD PTR [esp+edx*4+0x75b6dc5b],0x18
  430b89:	sbb    al,0xf4
  430b8b:	xor    al,0x6e
  430b8d:	jno    0x430bfe
  430b8f:	inc    esp
  430b90:	(bad)  
  430b91:	adc    DWORD PTR [esp+ebp*4],eax
  430b94:	pop    eax
  430b95:	push   es
  430b96:	out    dx,eax
  430b97:	lahf   
  430b98:	fsubr  st,st(5)
  430b9a:	in     al,0x26
  430b9c:	pushf  
  430b9d:	jl     0x430bdc
  430b9f:	fscale 
  430ba1:	stc    
  430ba2:	sbb    BYTE PTR [edx+0x6ea02af2],0xfe
  430ba9:	adc    al,0x6d
  430bab:	retf   0x89
  430bae:	xor    DWORD PTR [eax+0x5d],ecx
  430bb1:	mov    ecx,0xfb7db4f9
  430bb6:	and    al,0x45
  430bb8:	ins    BYTE PTR es:[edi],dx
  430bb9:	inc    esp
  430bba:	or     al,0xf1
  430bbc:	dec    edi
  430bbd:	(bad)  
  430bbe:	fs inc edi
  430bc0:	pop    ecx
  430bc1:	nop
  430bc2:	and    edi,esp
  430bc4:	shr    ch,0x94
  430bc7:	out    dx,al
  430bc8:	pusha  
  430bc9:	xchg   BYTE PTR [ebp+edi*4-0x7a8eb9f5],dh
  430bd0:	adc    al,0x80
  430bd2:	jmp    0x430bac
  430bd4:	(bad)  
  430bd5:	or     eax,0x8cb58f8f
  430bda:	jno    0x430b92
  430bdc:	add    BYTE PTR [ebx],0x32
  430bdf:	add    edi,edx
  430be1:	jecxz  0x430b63
  430be3:	cmp    eax,0x5e2fa4c2
  430be8:	pop    esi
  430be9:	jmp    0xa4bde4
  430bee:	enter  0x12ee,0x98
  430bf2:	arpl   WORD PTR [esp+esi*4],bp
  430bf5:	inc    ecx
  430bf6:	shr    esp,1
  430bf8:	cmp    eax,0x3303bef4
  430bfd:	lock adc BYTE PTR [ecx],ah
  430c00:	adc    BYTE PTR [edx],dh
  430c02:	mov    dh,BYTE PTR [eax-0x6dc3ff9e]
  430c08:	stos   BYTE PTR es:[edi],al
  430c09:	mov    eax,0xea1ac6c2
  430c0e:	dec    ecx
  430c0f:	in     eax,dx
  430c10:	jo     0x430bed
  430c12:	fadd   QWORD PTR [edi-0x7b]
  430c15:	push   edi
  430c16:	cdq    
  430c17:	ret    
  430c18:	ret    
  430c19:	repnz loope 0x430c1c
  430c1c:	fisub  DWORD PTR [eax]
  430c1e:	clc    
  430c1f:	out    0xf3,al
  430c21:	push   ebp
  430c22:	outs   dx,BYTE PTR ds:[esi]
  430c23:	cmc    
  430c24:	and    al,0x67
  430c26:	notrack jmp DWORD PTR [edx+ebp*4+0x1b]
  430c2b:	clc    
  430c2c:	jns    0x430bfa
  430c2e:	iret   
  430c2f:	dec    ebp
  430c30:	jns    0x430ca7
  430c32:	(bad)  
  430c33:	mov    ah,0x82
  430c35:	or     dh,al
  430c37:	inc    esi
  430c38:	imul   esp,edx,0xffffffbd
  430c3b:	dec    edi
  430c3c:	inc    esp
  430c3d:	dec    ebp
  430c3e:	jmp    0xcf966b57
  430c43:	jns    0x430c2e
  430c45:	sbb    ch,bh
  430c47:	xor    bh,BYTE PTR [eax]
  430c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430c4a:	dec    esp
  430c4b:	sbb    ebx,DWORD PTR [eax+0x5298fc14]
  430c51:	pop    esp
  430c52:	push   ds
  430c53:	je     0x430c27
  430c55:	xor    eax,0xcfc32ea
  430c5a:	add    al,0x11
  430c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430c5d:	mov    esi,0x34dfc1e8
  430c62:	jge    0x430c8c
  430c64:	or     dl,al
  430c66:	call   0xb0f6885f
  430c6b:	test   DWORD PTR [ebp+eiz*1+0x68],ecx
  430c6f:	cwde   
  430c70:	outs   dx,BYTE PTR ds:[esi]
  430c71:	dec    ecx
  430c72:	out    dx,eax
  430c73:	fsub   QWORD PTR ds:0x696bef70
  430c79:	xor    ch,BYTE PTR [ecx+0x5a]
  430c7c:	ret    
  430c7d:	in     eax,0x18
  430c7f:	test   BYTE PTR [edx],ah
  430c81:	mov    ds:0xe0b0e6bd,eax
  430c86:	hlt    
  430c87:	cmp    al,0x8b
  430c89:	fld    QWORD PTR [ecx+0x27]
  430c8c:	(bad)  
  430c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c8e:	lea    esp,[edx]
  430c90:	pusha  
  430c91:	fisttp QWORD PTR ds:0xc0bb07a8
  430c97:	sahf   
  430c98:	push   edx
  430c99:	test   ch,dh
  430c9b:	mov    ds:0x31559320,al
  430ca0:	xor    DWORD PTR [eax-0x58],ebx
  430ca3:	(bad)  [ecx+edi*8]
  430ca6:	push   0xefee62d0
  430cab:	push   eax
  430cac:	pop    ecx
  430cad:	scas   eax,DWORD PTR es:[edi]
  430cae:	cmp    al,0xe5
  430cb0:	sub    ecx,edi
  430cb2:	dec    edi
  430cb3:	loop   0x430d29
  430cb5:	xchg   ebp,eax
  430cb6:	adc    bl,dh
  430cb8:	lock inc edx
  430cba:	std    
  430cbb:	mov    esp,0xfacf98ce
  430cc0:	das    
  430cc1:	push   esp
  430cc2:	sub    eax,0xbc365be9
  430cc7:	and    ah,BYTE PTR [edx+0x3f9582ca]
  430ccd:	jmp    0x430c61
  430ccf:	loopne 0x430cdd
  430cd1:	in     eax,0x79
  430cd3:	lods   eax,DWORD PTR ds:[esi]
  430cd4:	outs   dx,DWORD PTR ds:[esi]
  430cd5:	cmc    
  430cd6:	leave  
  430cd7:	fmul   QWORD PTR [eax-0x1d7edf0]
  430cdd:	int3   
  430cde:	retf   0xb64d
  430ce1:	lods   al,BYTE PTR ds:[esi]
  430ce2:	jl     0x430d34
  430ce4:	xchg   edx,eax
  430ce5:	mov    esp,edi
  430ce7:	lock xchg ebx,eax
  430ce9:	push   ebp
  430cea:	shr    BYTE PTR [edi+0xac88274],1
  430cf0:	push   ebx
  430cf1:	das    
  430cf2:	mov    esp,?
  430cf4:	ret    0xd1cb
  430cf7:	aad    0x51
  430cf9:	jae    0x430cc0
  430cfb:	fistp  WORD PTR [esi+eax*1-0x697f6748]
  430d02:	pop    ss
  430d03:	adc    eax,0x718dc0c6
  430d08:	pop    ebx
  430d09:	push   0xffffff8c
  430d0b:	xor    al,0x94
  430d0d:	jns    0x430cf3
  430d0f:	mov    ebx,0x4806fca1
  430d14:	xor    eax,0xd3087ac9
  430d19:	fstp   QWORD PTR [eax+0x5078e506]
  430d1f:	jmp    0x753b:0xa925942c
  430d26:	outs   dx,DWORD PTR ds:[esi]
  430d27:	dec    eax
  430d28:	jl     0x430cfe
  430d2a:	out    0xc1,al
  430d2c:	int    0x4d
  430d2e:	cmp    esp,eax
  430d30:	cwde   
  430d31:	jg     0x430d2b
  430d33:	cmp    al,0xf6
  430d35:	sub    esi,DWORD PTR [eax]
  430d37:	pop    edi
  430d38:	imul   ebx,DWORD PTR [ebp+0x56],0x1c
  430d3c:	inc    esp
  430d3d:	sbb    eax,0x3dbb7b5f
  430d42:	mov    ds:0xf9de4094,al
  430d47:	jge    0x430d22
  430d49:	adc    ch,ch
  430d4b:	push   eax
  430d4c:	mov    bl,0xe8
  430d4e:	cdq    
  430d4f:	fld    TBYTE PTR [ebx]
  430d51:	aad    0xf6
  430d53:	aad    0x7a
  430d55:	pushf  
  430d56:	or     al,0x5f
  430d58:	rcl    BYTE PTR [ebx-0x5eab4c6a],0xe4
  430d5f:	xor    cl,dh
  430d61:	mov    esp,0xc0183b1a
  430d66:	out    dx,eax
  430d67:	add    eax,0xecf75e54
  430d6c:	push   ebp
  430d6d:	cmp    BYTE PTR [edi-0x41879b8e],dl
  430d73:	std    
  430d74:	sbb    eax,DWORD PTR [esi+0x45]
  430d77:	jmp    FWORD PTR [ebx+esi*8-0x45eb2fe0]
  430d7e:	icebp  
  430d7f:	mov    al,0x17
  430d81:	out    dx,al
  430d82:	inc    esi
  430d83:	inc    esp
  430d84:	xor    ch,dh
  430d86:	xchg   DWORD PTR [esi],edx
  430d88:	mov    ds:0x68d855de,al
  430d8d:	jbe    0x430d47
  430d8f:	and    BYTE PTR [ecx+0x32218ce2],0x8c
  430d96:	fstp   TBYTE PTR [ecx-0x5f]
  430d99:	xchg   DWORD PTR [ecx+ebx*8-0x54cb8113],ebx
  430da0:	push   esp
  430da1:	add    eax,0x97479b7f
  430da6:	lods   eax,DWORD PTR ds:[esi]
  430da7:	pop    eax
  430da8:	sbb    BYTE PTR [edx+0x7f],0xb6
  430dac:	shl    DWORD PTR [esi],cl
  430dae:	pop    ebx
  430daf:	repz jl 0x430de0
  430db2:	cmp    al,0xf1
  430db4:	or     ah,BYTE PTR [ebx-0x5f9474c9]
  430dba:	push   edx
  430dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430dbc:	push   edi
  430dbd:	push   cs
  430dbe:	mov    ch,0xf4
  430dc0:	jnp    0x430d6f
  430dc2:	les    ebx,FWORD PTR [eax+edx*1-0x4e1eafb1]
  430dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430dca:	int    0x6c
  430dcc:	loopne 0x430db4
  430dce:	in     eax,dx
  430dcf:	dec    esp
  430dd0:	mov    BYTE PTR [ebx+0x5c907ed0],bl
  430dd6:	mov    ecx,0x7bec856a
  430ddb:	fs out dx,al
  430ddd:	mov    ah,0xcd
  430ddf:	xor    ecx,ecx
  430de1:	out    0x5f,eax
  430de3:	out    dx,eax
  430de4:	call   0xcba2e643
  430de9:	adc    edx,DWORD PTR ds:0x63889f71
  430def:	cld    
  430df0:	mov    ch,0xbf
  430df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430df3:	test   eax,0xaf5008b7
  430df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430df9:	pop    ds
  430dfa:	loopne 0x430e05
  430dfc:	cli    
  430dfd:	mov    DWORD PTR [ecx+0x7ac8ca63],edx
  430e03:	mov    eax,DWORD PTR [ebx]
  430e05:	pusha  
  430e06:	mov    DWORD PTR [ebx-0x4f],eax
  430e09:	and    esp,ebp
  430e0b:	into   
  430e0c:	sbb    al,0xeb
  430e0e:	(bad)  
  430e0f:	xor    eax,0x108d2bcd
  430e14:	cs sub eax,0x2fd2d3e3
  430e1a:	cmc    
  430e1b:	inc    esp
  430e1c:	mov    eax,0xf18f9dff
  430e21:	jmp    0xdc71e44c
  430e26:	inc    esi
  430e27:	fldcw  WORD PTR gs:[edi]
  430e2a:	mov    ch,0xf7
  430e2c:	adc    al,0x6
  430e2e:	add    BYTE PTR [esi+0x66],ch
  430e31:	rcl    BYTE PTR [ebx+0x44bba75b],cl
  430e37:	and    al,0x53
  430e39:	xchg   edi,eax
  430e3a:	adc    DWORD PTR [edi+edi*1+0x48e9a6a1],edx
  430e41:	shr    DWORD PTR es:[ecx],1
  430e44:	jno    0x430e80
  430e46:	loop   0x430e39
  430e48:	fcomi  st,st(0)
  430e4a:	pusha  
  430e4b:	(bad)  
  430e4c:	cwde   
  430e4d:	std    
  430e4e:	push   edi
  430e4f:	lea    ebx,[ecx+edi*8]
  430e52:	adc    al,0x8c
  430e54:	sbb    esi,DWORD PTR [esi-0x6]
  430e57:	aaa    
  430e58:	mov    esp,0x71382523
  430e5d:	sub    esp,esp
  430e5f:	xor    DWORD PTR [esi],edx
  430e61:	jge    0x430eae
  430e63:	(bad)  
  430e64:	pop    esp
  430e65:	pusha  
  430e66:	loope  0x430ed7
  430e68:	xchg   ebp,eax
  430e69:	loope  0x430e81
  430e6b:	sub    eax,0xcd9e0467
  430e70:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  430e72:	enter  0x7bdd,0x91
  430e76:	sub    BYTE PTR [edx],al
  430e78:	adc    al,0x0
  430e7a:	fwait
  430e7b:	or     esi,DWORD PTR [esp+eiz*2]
  430e7e:	imul   ecx,DWORD PTR [ebp+ebp*4+0x7f],0x9b816f10
  430e86:	mov    edx,0xc5ca70b1
  430e8b:	outs   dx,DWORD PTR ds:[esi]
  430e8c:	test   BYTE PTR [edx+ebx*1],bh
  430e8f:	ds jno 0x430e26
  430e92:	and    al,0x50
  430e94:	fs daa 
  430e96:	imul   ecx,edx,0x3b
  430e99:	push   0x3c
  430e9b:	add    eax,0xc7d4d4e3
  430ea0:	(bad)  
  430ea2:	inc    esi
  430ea3:	add    BYTE PTR [eax],al
  430ea5:	add    BYTE PTR [eax],al
  430ea7:	add    BYTE PTR [esi+0x513e7b14],dh
  430ead:	or     DWORD PTR [eax],eax
  430eaf:	add    BYTE PTR [eax],al
  430eb1:	add    BYTE PTR [eax],al
  430eb3:	add    BYTE PTR [ecx+0x9],dl
  430eb6:	add    BYTE PTR [eax],al
  430eb8:	aas    
  430eb9:	add    BYTE PTR [esi],ah
  430ebb:	jl     0x430ebd
  430ebd:	add    dh,BYTE PTR [esi]
  430ebf:	or     BYTE PTR [eax],al
  430ec1:	add    ah,al
  430ec3:	inc    ebp
  430ec4:	add    dl,dl
  430ec6:	ds ins DWORD PTR es:[edi],dx
  430ec8:	ds mov esi,0x24cd31fd
  430ece:	cs jge 0x430e66
  430ed1:	mov    ebx,0xeb36a4ce
  430ed6:	dec    eax
  430ed7:	pushf  
  430ed8:	xor    ah,BYTE PTR [ebp+0x20]
  430edb:	xor    esi,edx
  430edd:	and    DWORD PTR [esp+ebp*2-0x1e],0xfe412dda
  430ee5:	aam    0x34
  430ee7:	xchg   ebx,eax
  430ee8:	nop
  430ee9:	add    BYTE PTR [edx-0x77c4cd1f],0x77
  430ef0:	mov    bh,0x38
  430ef2:	inc    esi
  430ef3:	aaa    
  430ef4:	cld    
  430ef5:	push   ecx
  430ef6:	dec    ecx
  430ef7:	pop    ebx
  430ef8:	std    
  430ef9:	and    bl,BYTE PTR [ebx+ebx*8+0x66]
  430efd:	shl    BYTE PTR [ebx+0x77668fd8],0x80
  430f04:	or     al,0x5f
  430f06:	sbb    DWORD PTR [ebp+0x43e9cb2c],edi
  430f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f0d:	cmp    DWORD PTR [esp+ebp*4-0x41ace691],eax
  430f14:	repnz dec esp
  430f16:	ins    BYTE PTR es:[edi],dx
  430f17:	pop    ecx
  430f18:	call   0xa4c22c49
  430f1d:	pop    edx
  430f1e:	jo     0x430ea9
  430f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430f21:	ret    
  430f22:	js     0x430f41
  430f24:	(bad)  
  430f25:	call   0x6c3ea373
  430f2a:	inc    eax
  430f2b:	sbb    al,0xea
  430f2d:	add    DWORD PTR [ebx+0x45],edi
  430f30:	mov    eax,0x6526a7eb
  430f35:	call   0x522b:0xdc02d41c
  430f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f3d:	out    dx,eax
  430f3e:	stc    
  430f3f:	add    DWORD PTR [ebp+0x59],ebp
  430f42:	test   BYTE PTR [edx-0x61],bh
  430f45:	add    esi,DWORD PTR [eax+ebp*4-0x57194e56]
  430f4c:	xchg   ebx,eax
  430f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f4e:	and    eax,0x238f561c
  430f53:	addr16 int3 
  430f55:	dec    edx
  430f56:	mov    dl,0x99
  430f58:	test   al,0x34
  430f5a:	push   es
  430f5b:	xor    DWORD PTR [edi+0x29de58f0],0xffffffe3
  430f62:	ins    DWORD PTR es:[edi],dx
  430f63:	push   0xa3149c2e
  430f68:	imul   ebx
  430f6a:	test   DWORD PTR [esi-0x43886bf6],edi
  430f70:	push   es
  430f71:	push   esp
  430f72:	sbb    al,0xd8
  430f74:	rcl    DWORD PTR [ebx-0x3b],0xa4
  430f78:	loopne 0x430fcb
  430f7a:	jae    0x6aa4c66a
  430f80:	xor    al,BYTE PTR [eax+edi*4]
  430f83:	mov    bh,0xca
  430f85:	push   ebp
  430f86:	sbb    edi,esi
  430f88:	jnp    0x431002
  430f8a:	sub    BYTE PTR [ebx-0x5ade40b6],ah
  430f90:	cld    
  430f91:	(bad)  
  430f92:	aam    0xd0
  430f94:	call   0x7ef634b1
  430f99:	(bad)  
  430f9a:	pop    esi
  430f9b:	(bad)  
  430f9c:	hlt    
  430f9d:	fnstenv [ebp+0x37918978]
  430fa3:	cs pop eax
  430fa5:	sbb    BYTE PTR [ebx-0x6342e190],al
  430fab:	jmp    0x70aa:0xbb3ced73
  430fb2:	js     0x431005
  430fb4:	sti    
  430fb5:	and    ebx,DWORD PTR [ecx-0x1f15dea0]
  430fbb:	mov    DWORD PTR ss:[ebp+eiz*2+0x3d],edi
  430fc0:	or     ah,dh
  430fc2:	cli    
  430fc3:	and    eax,0x390a7208
  430fc8:	push   esp
  430fc9:	sub    al,0xa1
  430fcb:	out    dx,al
  430fcc:	jmp    FWORD PTR [edx-0x71]
  430fcf:	repz push ds
  430fd1:	not    DWORD PTR [eax+0x50]
  430fd4:	inc    edi
  430fd5:	mov    bh,0xea
  430fd7:	or     DWORD PTR [edi],edx
  430fd9:	es (bad) 
  430fdb:	je     0x430fe3
  430fdd:	jle    0x431059
  430fdf:	imul   BYTE PTR [edi+0x1cb5b9e5]
  430fe5:	arpl   WORD PTR [ebp-0x63],di
  430fe8:	mov    dl,0x4d
  430fea:	mov    bh,0x1c
  430fec:	les    eax,FWORD PTR [eax-0x10]
  430fef:	and    BYTE PTR [ecx+0x2c],ch
  430ff2:	xor    al,0x26
  430ff4:	xchg   BYTE PTR [ebx-0x53869b9c],ah
  430ffa:	icebp  
  430ffb:	pushf  
  430ffc:	ins    DWORD PTR es:[edi],dx
  430ffd:	dec    esp
  430ffe:	dec    DWORD PTR [eax-0x38cde737]
  431004:	xchg   esp,eax
  431005:	js     0x43102b
  431007:	or     eax,0x42f382ac
  43100c:	mov    ebp,0xb95ac887
  431011:	push   esp
  431012:	mov    BYTE PTR [ecx-0x41],cl
  431015:	pop    eax
  431016:	enter  0xf95,0x93
  43101a:	js     0x431071
  43101c:	leave  
  43101d:	(bad)  
  43101e:	out    dx,al
  43101f:	iret   
  431020:	out    dx,eax
  431021:	icebp  
  431022:	aad    0x9c
  431024:	xchg   ebx,eax
  431025:	push   cs
  431026:	mov    dl,0x95
  431028:	stos   DWORD PTR es:[edi],eax
  431029:	pop    ebx
  43102a:	push   edi
  43102b:	sbb    al,0xc0
  43102d:	jbe    0x43105d
  43102f:	je     0x430fe8
  431031:	sbb    al,0xde
  431033:	imul   edx,DWORD PTR [ebx-0x615931c],0xffffffcd
  43103a:	not    ebx
  43103c:	in     al,dx
  43103d:	stos   DWORD PTR es:[edi],eax
  43103e:	mov    WORD PTR [edi+0x3690610c],ss
  431044:	mov    DWORD PTR [esi],ebx
  431046:	addr16 mov al,0x26
  431049:	sbb    BYTE PTR [ecx-0x7d],bl
  43104c:	cs pop esi
  43104e:	lock xchg ecx,eax
  431050:	aam    0x18
  431052:	push   ss
  431053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431054:	scas   eax,DWORD PTR es:[edi]
  431055:	addr16 into 
  431057:	xchg   esi,eax
  431058:	idiv   al
  43105a:	xchg   BYTE PTR [ebx],al
  43105c:	or     eax,0x9f515a8f
  431061:	ja     0x431003
  431063:	add    ebx,DWORD PTR ds:0xe83f1f6d
  431069:	pop    esi
  43106a:	add    eax,esp
  43106c:	dec    esi
  43106d:	iret   
  43106e:	ficomp DWORD PTR [edx]
  431070:	test   al,0x41
  431072:	cwde   
  431073:	pop    es
  431074:	call   0x2a8fc92f
  431079:	pop    esi
  43107a:	mul    BYTE PTR [ecx]
  43107c:	inc    esi
  43107d:	or     al,0x9
  43107f:	jle    0x4310f8
  431081:	mov    eax,ds:0xa6bc8077
  431086:	xor    BYTE PTR [esp+eax*4],al
  431089:	jne    0x431073
  43108b:	cdq    
  43108c:	daa    
  43108d:	xlat   BYTE PTR ds:[ebx]
  43108e:	scas   al,BYTE PTR es:[edi]
  43108f:	fsubr  DWORD PTR [edx+0x71]
  431092:	mov    WORD PTR [esi],?
  431094:	sbb    DWORD PTR [esi],esp
  431096:	and    al,0x60
  431098:	cld    
  431099:	cmc    
  43109a:	jl     0x43109d
  43109c:	(bad)  
  43109d:	sbb    dh,cl
  43109f:	jp     0x43111d
  4310a1:	and    BYTE PTR [ebx],cl
  4310a3:	or     al,0xb0
  4310a5:	shl    BYTE PTR [eax+0x442b1a48],0x2c
  4310ac:	jg     0x431077
  4310ae:	dec    ebp
  4310af:	cdq    
  4310b0:	or     al,0x2
  4310b2:	xchg   edi,eax
  4310b3:	in     al,dx
  4310b4:	scas   eax,DWORD PTR es:[edi]
  4310b5:	adc    eax,0x3fced6f5
  4310ba:	scas   al,BYTE PTR es:[edi]
  4310bb:	push   ebx
  4310bc:	adc    dl,al
  4310be:	cwde   
  4310bf:	imul   edi,eax,0xffffffd7
  4310c2:	inc    ebx
  4310c3:	fild   WORD PTR [ecx+0x34]
  4310c6:	inc    edi
  4310c7:	cs leave 
  4310c9:	jb     0x43107f
  4310cb:	test   BYTE PTR [esi-0x7],dl
  4310ce:	pop    eax
  4310cf:	shl    ch,1
  4310d1:	or     eax,ebp
  4310d3:	fcom   QWORD PTR [esi-0xd83a046]
  4310d9:	dec    esi
  4310da:	inc    sp
  4310dc:	popa   
  4310dd:	pop    ss
  4310de:	retf   0x24a1
  4310e1:	cmp    dl,ch
  4310e3:	popa   
  4310e4:	sub    al,0x20
  4310e6:	ins    DWORD PTR es:[edi],dx
  4310e7:	(bad)  
  4310e8:	adc    DWORD PTR [eax-0x65],ecx
  4310eb:	loope  0x431140
  4310ed:	xchg   esi,eax
  4310ee:	xchg   edi,eax
  4310ef:	jo     0x431072
  4310f1:	in     al,dx
  4310f2:	ins    BYTE PTR es:[edi],dx
  4310f3:	aad    0x46
  4310f5:	mov    ah,0xa9
  4310f7:	js     0x431081
  4310f9:	sahf   
  4310fa:	loope  0x43108c
  4310fc:	loope  0x431157
  4310fe:	pop    ss
  4310ff:	mov    DWORD PTR [esi+0x36],esp
  431102:	inc    edx
  431103:	(bad)  
  431104:	mov    ah,0xac
  431106:	stos   DWORD PTR es:[edi],eax
  431107:	xchg   BYTE PTR [esp+esi*1],ah
  43110a:	xchg   edx,eax
  43110b:	cmp    ebx,DWORD PTR [esp+ebx*2+0x75]
  43110f:	push   0xffffffc1
  431111:	jnp    0x43118a
  431113:	push   ebp
  431114:	outs   dx,DWORD PTR ds:[esi]
  431115:	mov    DWORD PTR [eax-0x30633059],eax
  43111b:	neg    BYTE PTR [esi-0x19]
  43111e:	xor    DWORD PTR [ecx+edi*1+0x6ef5f88],esp
  431125:	daa    
  431126:	push   cs
  431127:	pop    esp
  431128:	enter  0x214f,0x14
  43112c:	pop    ebp
  43112d:	dec    ebp
  43112e:	mov    bl,0xfe
  431130:	(bad)  
  431131:	jo     0x43113f
  431133:	inc    esi
  431134:	sbb    ecx,DWORD PTR [esi+0x5b8aa94b]
  43113a:	xchg   esp,eax
  43113b:	sbb    eax,0x44041e3e
  431140:	mov    ch,0xcf
  431142:	sub    eax,0x777e3bb8
  431147:	out    dx,eax
  431148:	icebp  
  431149:	inc    ecx
  43114a:	scas   eax,DWORD PTR es:[edi]
  43114b:	rcr    ah,cl
  43114d:	repnz sub DWORD PTR [edi],esi
  431150:	pop    ds
  431151:	adc    DWORD PTR [edx],ebx
  431153:	mov    ebx,0x72d7007c
  431158:	or     edi,DWORD PTR [edx+0x20]
  43115b:	dec    ecx
  43115c:	push   esi
  43115d:	and    ch,BYTE PTR [eax+0x794e601e]
  431163:	mov    BYTE PTR [eax+0x14],dl
  431166:	ins    DWORD PTR es:[edi],dx
  431167:	int3   
  431168:	pop    eax
  431169:	fiadd  DWORD PTR [ebx+0x5b]
  43116c:	jl     0x43111d
  43116e:	mov    dh,BYTE PTR [ebp-0x10]
  431171:	pop    edx
  431172:	aam    0xa9
  431174:	pop    edx
  431175:	jae    0x4311d2
  431177:	std    
  431178:	unpcklps xmm7,XMMWORD PTR [edx-0x20]
  43117c:	std    
  43117d:	rcl    BYTE PTR [ecx+edx*4+0x3cbc06f5],0xd7
  431185:	jae    0x43114a
  431187:	xchg   ebp,eax
  431188:	mov    gs,esi
  43118a:	(bad)  
  43118b:	loopne 0x431149
  43118d:	loopne 0x431116
  43118f:	rcl    ebx,0xde
  431192:	pop    ebp
  431193:	nop
  431194:	add    al,0x22
  431196:	loope  0x4311eb
  431198:	sub    DWORD PTR [ecx+0x16],ebx
  43119b:	fmul   st(6),st
  43119d:	sub    BYTE PTR [ecx-0x4eae4323],bl
  4311a3:	call   FWORD PTR [esp+esi*4]
  4311a6:	dec    esp
  4311a7:	imul   ecx,DWORD PTR [ebx],0x976115bf
  4311ad:	jle    0x4311a9
  4311af:	hlt    
  4311b0:	sbb    eax,0x42abf408
  4311b5:	pusha  
  4311b6:	mov    ah,0x9f
  4311b8:	sbb    ah,ch
  4311ba:	add    al,0x19
  4311bc:	ins    BYTE PTR es:[edi],dx
  4311bd:	shl    BYTE PTR [ebx+0x8],1
  4311c0:	out    dx,eax
  4311c1:	cmp    al,0xe2
  4311c3:	into   
  4311c4:	inc    esp
  4311c5:	fist   DWORD PTR [esi+0x60f52069]
  4311cb:	mov    DWORD PTR [ebp+0x29],ebp
  4311ce:	mov    eax,ds:0xd5f1388
  4311d3:	test   BYTE PTR [eax-0x36],bl
  4311d6:	sbb    DWORD PTR [ecx],ebp
  4311d8:	mov    BYTE PTR [ebx-0xdd37bda],bl
  4311de:	xchg   DWORD PTR [ebx+0xc],ebx
  4311e1:	mov    ds:0x50ce97e5,eax
  4311e6:	and    ebp,edi
  4311e8:	frstor [esi+0x156bb4b8]
  4311ee:	je     0x43117f
  4311f0:	nop
  4311f1:	(bad)  
  4311f2:	mov    ebp,0x5c3450aa
  4311f7:	cwde   
  4311f8:	or     BYTE PTR [esp+ebx*4-0x2dfdaea0],cl
  4311ff:	rol    BYTE PTR [eax-0x80],1
  431202:	push   ss
  431203:	sub    eax,0x2fd70f5d
  431208:	inc    ebx
  431209:	fs sub eax,0x72a689be
  43120f:	pop    edx
  431210:	nop
  431211:	or     ecx,DWORD PTR [eax+0x52d91187]
  431217:	cli    
  431218:	cmc    
  431219:	retf   0xacd1
  43121c:	pop    esi
  43121d:	mov    esp,DWORD PTR [edi-0x7f]
  431220:	test   eax,0xd08592d5
  431225:	aam    0xc1
  431227:	les    ecx,FWORD PTR [edi-0x6317edda]
  43122d:	js     0x43122d
  43122f:	call   0xe4090db
  431234:	mov    ah,0xd3
  431236:	pushf  
  431237:	sub    al,BYTE PTR [edi+0x32364225]
  43123d:	fs pusha 
  43123f:	rcr    BYTE PTR [edi+0x7c14a0e2],0xc8
  431246:	dec    esi
  431247:	adc    eax,0x9e1c19e4
  43124c:	inc    esp
  43124d:	or     eax,0x8c67db10
  431252:	pop    edx
  431253:	nop
  431254:	outs   dx,DWORD PTR ds:[esi]
  431255:	sbb    ebx,DWORD PTR [ebp+0x54]
  431258:	clc    
  431259:	out    0xb0,al
  43125b:	dec    ebx
  43125c:	popa   
  43125d:	or     al,0xf7
  43125f:	dec    edx
  431260:	add    BYTE PTR [ebx],cl
  431262:	lock aam 0x77
  431265:	pop    edx
  431266:	push   cs
  431267:	push   edi
  431268:	push   0xffffffc8
  43126a:	or     al,dh
  43126c:	clc    
  43126d:	test   DWORD PTR cs:[edx-0x21],ecx
  431271:	or     BYTE PTR [eax-0x5fe33abb],al
  431277:	mov    eax,ds:0xacd79283
  43127c:	push   ss
  43127d:	dec    eax
  43127e:	(bad)  
  43127f:	les    edi,FWORD PTR [edi]
  431281:	push   edx
  431282:	stos   DWORD PTR es:[edi],eax
  431283:	lods   eax,DWORD PTR ds:[esi]
  431284:	add    ah,al
  431286:	sub    al,ch
  431288:	dec    edi
  431289:	jbe    0x431295
  43128b:	loopne 0x4312ed
  43128d:	push   es
  43128e:	sub    BYTE PTR [esi+0x11fe820c],ah
  431294:	or     edx,DWORD PTR ds:0x304be566
  43129a:	inc    eax
  43129b:	push   es
  43129c:	lahf   
  43129d:	sbb    esp,esi
  43129f:	test   eax,0xe0d88d55
  4312a4:	mov    al,dl
  4312a6:	sbb    al,0x85
  4312a8:	popa   
  4312a9:	xor    al,0xe7
  4312ab:	cld    
  4312ac:	call   0x4279:0x491fcd07
  4312b3:	mov    bl,0x20
  4312b5:	std    
  4312b6:	sar    DWORD PTR [ebx],cl
  4312b8:	inc    eax
  4312b9:	adc    eax,0x44fe44b9
  4312be:	fist   WORD PTR [ebx-0x622c607]
  4312c4:	mov    al,ds:0xb462683c
  4312c9:	inc    eax
  4312ca:	std    
  4312cb:	add    al,0xb
  4312cd:	mov    dl,0x5f
  4312cf:	adc    BYTE PTR [edi+0x5d],dl
  4312d2:	inc    ebp
  4312d3:	mov    ?,eax
  4312d5:	jg     0x431325
  4312d7:	test   DWORD PTR [edx*2+0x242e5bb7],esi
  4312de:	stc    
  4312df:	xchg   edi,eax
  4312e0:	xor    bl,BYTE PTR [eax+0x3c]
  4312e3:	imul   ebx,DWORD PTR [esi-0x11f87903],0x1c827c4d
  4312ed:	lahf   
  4312ee:	xor    esp,DWORD PTR [edi+0x78]
  4312f1:	jno    0x431322
  4312f3:	mov    al,ds:0x12c1adb5
  4312f8:	lods   eax,DWORD PTR ds:[esi]
  4312f9:	jno    0x431340
  4312fb:	mov    WORD PTR [eax-0x5],cs
  4312fe:	mov    eax,ds:0x9e0c35de
  431303:	sub    cl,BYTE PTR [esi]
  431305:	ins    BYTE PTR es:[edi],dx
  431306:	setns  ah
  431309:	pop    edi
  43130a:	add    ebp,esi
  43130c:	mov    ebp,0x3833901d
  431311:	in     al,dx
  431312:	pop    eax
  431313:	jne    0x431361
  431315:	dec    esp
  431316:	sub    DWORD PTR [ebp+eax*4+0x463ff612],esi
  43131d:	in     eax,0xb8
  43131f:	outs   dx,BYTE PTR ds:[esi]
  431320:	pop    esp
  431321:	loope  0x431348
  431323:	scas   al,BYTE PTR es:[edi]
  431324:	xlat   BYTE PTR ds:[ebx]
  431325:	cdq    
  431326:	jnp    0x431387
  431328:	add    BYTE PTR [eax-0x49cf54b7],0x1a
  43132f:	mov    ebx,0x7aa40418
  431334:	mov    bh,dh
  431336:	sbb    BYTE PTR [ebx],cl
  431338:	sbb    al,0xce
  43133a:	and    eax,0x726015c8
  43133f:	popa   
  431340:	leave  
  431341:	cdq    
  431342:	inc    DWORD PTR [edx-0x14]
  431345:	mov    BYTE PTR [edi],ch
  431347:	and    dl,BYTE PTR [eax]
  431349:	dec    eax
  43134a:	jne    0x4313b5
  43134c:	gs xchg esp,eax
  43134e:	ror    bh,0x6a
  431351:	sub    eax,0x48bca5e4
  431356:	mov    eax,0x99fe26a7
  43135b:	or     ebx,DWORD PTR [ebx-0x58]
  43135e:	mov    dh,0xdc
  431360:	jg     0x431356
  431362:	and    DWORD PTR [edi-0x7e31868a],ecx
  431368:	add    BYTE PTR [eax],al
  43136a:	pop    ebx
  43136b:	xor    eax,0x417aecd5
  431370:	in     al,dx
  431371:	test   al,0x9
  431373:	add    dh,BYTE PTR [edi+0x44]
  431376:	cld    
  431377:	scas   al,BYTE PTR es:[edi]
  431378:	out    0xde,eax
  43137a:	int3   
  43137b:	rol    DWORD PTR ds:0xc9a5bf89,0xae
  431382:	(bad)  
  431384:	inc    ecx
  431385:	and    al,0x10
  431387:	mov    cl,0x81
  431389:	mov    ds:0xf3141773,eax
  43138e:	stc    
  43138f:	or     BYTE PTR [esi-0x1a03d645],cl
  431395:	cmp    BYTE PTR ds:0x1d19c888,ch
  43139b:	jle    0x431396
  43139d:	loopne 0x43137f
  43139f:	inc    esi
  4313a0:	pop    ebp
  4313a1:	mov    DWORD PTR [ebp-0x4d9a84f3],ebx
  4313a7:	add    al,0x0
  4313a9:	adc    BYTE PTR [edx-0x7a],al
  4313ac:	jns    0x4313a3
  4313ae:	jge    0x4313ef
  4313b0:	sub    BYTE PTR [eax+ebx*8],bh
  4313b3:	pop    es
  4313b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4313b5:	sub    ah,BYTE PTR [esi+0x60]
  4313b8:	cld    
  4313b9:	dec    esp
  4313ba:	inc    edi
  4313bb:	jmp    0x431375
  4313bd:	push   esi
  4313be:	add    DWORD PTR [ebx+0xf707bc5],ecx
  4313c4:	fist   WORD PTR [esi]
  4313c6:	jmp    0xc18:0x8c048e74
  4313cd:	ficomp DWORD PTR ds:0x3d7ec902
  4313d3:	inc    edi
  4313d4:	cmp    al,0x85
  4313d6:	xchg   esi,eax
  4313d7:	je     0x431378
  4313d9:	pop    esi
  4313da:	xor    bh,ah
  4313dc:	xchg   DWORD PTR [eax-0x22],esp
  4313df:	and    esi,DWORD PTR [edi-0x30]
  4313e2:	retf   
  4313e3:	call   0x6276:0x53840113
  4313ea:	stos   BYTE PTR es:[edi],al
  4313eb:	sub    ch,al
  4313ed:	out    dx,al
  4313ee:	data16 sub al,0x9a
  4313f1:	jg     0x43138c
  4313f3:	outs   dx,DWORD PTR ds:[esi]
  4313f4:	cdq    
  4313f5:	xchg   edi,eax
  4313f6:	ins    DWORD PTR es:[edi],dx
  4313f7:	gs push eax
  4313f9:	xchg   edx,eax
  4313fa:	arpl   WORD PTR [edi],si
  4313fc:	cmp    eax,0xc6649582
  431401:	je     0x431384
  431403:	mov    WORD PTR [esi+0x5ea7af3c],fs
  431409:	int3   
  43140a:	cwde   
  43140b:	jl     0x431454
  43140d:	sbb    BYTE PTR [edi-0x75cdb8b5],0xbc
  431414:	cli    
  431415:	aam    0xac
  431417:	mov    ch,0x7f
  431419:	inc    ebx
  43141a:	sub    DWORD PTR [ebx-0x3f6e6a9c],0x2a
  431421:	test   al,ch
  431423:	sbb    bl,BYTE PTR [ecx+0x1389d288]
  431429:	push   edi
  43142a:	xchg   ebp,esi
  43142c:	dec    ebp
  43142d:	imul   ebp,DWORD PTR [ecx+ebp*1+0xaf76c5d],0x7b
  431435:	fstp   DWORD PTR [ebx-0x30]
  431438:	bnd jp 0x4313fb
  43143b:	pop    ss
  43143c:	inc    esp
  43143d:	lock arpl WORD PTR [ecx],sp
  431440:	js     0x431460
  431442:	xor    BYTE PTR [ebx+edx*8],ch
  431445:	jmp    0x9ca367b8
  43144a:	jecxz  0x43148e
  43144c:	inc    edi
  43144d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43144e:	xchg   cl,dl
  431450:	mov    ?,ebx
  431452:	shl    BYTE PTR [ebp*4-0x45dcd073],0x4e
  43145a:	pop    ss
  43145b:	in     al,0x90
  43145d:	adc    DWORD PTR [edi],ebp
  43145f:	fwait
  431460:	mov    esp,0x8bee677
  431465:	adc    ch,bl
  431467:	cmp    edx,DWORD PTR [eax]
  431469:	xor    BYTE PTR [edi-0x64fb411],0x27
  431470:	das    
  431471:	xor    ebx,eax
  431473:	mul    DWORD PTR [ebx+eiz*1-0x71fb9b2c]
  43147a:	(bad)  
  43147b:	lds    ecx,FWORD PTR [eax-0x27]
  43147e:	(bad)  
  43147f:	clc    
  431480:	ret    0xfd94
  431483:	in     eax,dx
  431484:	dec    ebp
  431485:	jmp    0x431430
  431487:	out    dx,al
  431488:	sbb    al,0xd9
  43148a:	lea    ecx,[edi+0x1]
  43148d:	dec    ebx
  43148e:	jmp    0x4321:0xac40b9e4
  431495:	dec    esp
  431496:	(bad)  
  431497:	nop
  431498:	mov    ah,BYTE PTR [eax+ebp*8+0x41f5ad3f]
  43149f:	fsubrp st(7),st
  4314a1:	add    DWORD PTR [esp+ecx*1-0x71],ebp
  4314a5:	fwait
  4314a6:	lods   al,BYTE PTR ds:[esi]
  4314a7:	push   ebx
  4314a8:	pusha  
  4314a9:	and    bh,BYTE PTR [esi+ebp*8+0x1b5be330]
  4314b0:	sbb    edi,DWORD PTR [eax+0x54d0b781]
  4314b6:	data16 ja 0x4314b8
  4314b9:	ret    0x9071
  4314bc:	inc    ebx
  4314bd:	gs cld 
  4314bf:	out    dx,al
  4314c0:	jmp    0xada9:0xa0b19fad
  4314c7:	and    BYTE PTR [eax],bl
  4314c9:	or     BYTE PTR ds:0xd894ad0e,bh
  4314cf:	daa    
  4314d0:	inc    esp
  4314d1:	mov    edx,ebx
  4314d3:	xchg   ebp,eax
  4314d4:	aas    
  4314d5:	outs   dx,BYTE PTR ds:[esi]
  4314d6:	dec    ebp
  4314d7:	mov    edx,0xfa3a6808
  4314dc:	push   ecx
  4314dd:	push   ebx
  4314de:	ret    
  4314df:	pop    esp
  4314e0:	dec    ecx
  4314e1:	enter  0xb8c,0xee
  4314e5:	sbb    dl,dl
  4314e7:	pop    es
  4314e8:	jno    0x4314b4
  4314ea:	and    dh,BYTE PTR [ecx+edx*2]
  4314ed:	popf   
  4314ee:	lods   eax,DWORD PTR ds:[esi]
  4314ef:	rol    DWORD PTR [esi],cl
  4314f1:	inc    eax
  4314f2:	jl     0x431510
  4314f4:	pop    eax
  4314f5:	jbe    0x4314d1
  4314f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4314f8:	aas    
  4314f9:	xor    edi,DWORD PTR [edx+eiz*8-0x1e]
  4314fd:	jl     0x431520
  4314ff:	mov    edx,0x97e81
  431504:	ret    0xa01c
  431507:	(bad)  
  431509:	pop    ebx
  43150a:	xchg   esp,eax
  43150b:	adc    BYTE PTR [ebx],0xf8
  43150e:	(bad)  
  43150f:	dec    eax
  431510:	rcl    DWORD PTR ds:0x45eaee2b,cl
  431516:	lea    ebp,[eax]
  431518:	ins    BYTE PTR es:[edi],dx
  431519:	inc    ebp
  43151a:	fisttp DWORD PTR [esi+0x1a]
  43151d:	sub    edi,DWORD PTR [ebx+eiz*2-0x6a]
  431521:	nop
  431522:	mov    edi,0xc6e8d3ca
  431527:	ja     0x431591
  431529:	mov    dh,BYTE PTR [edx+ebp*4-0x740305cb]
  431530:	or     bl,BYTE PTR [eax]
  431532:	sbb    al,bl
  431534:	mov    dh,0x93
  431536:	aaa    
  431537:	ret    0xaa40
  43153a:	and    al,0xda
  43153c:	or     BYTE PTR [esi],0x49
  43153f:	popf   
  431540:	sbb    eax,0x47758e97
  431545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431546:	push   ss
  431547:	out    0xd3,eax
  431549:	loop   0x431508
  43154b:	lock adc al,0xc2
  43154e:	enter  0xdf5d,0x91
  431552:	sub    dl,BYTE PTR [eax-0x13133e92]
  431558:	retf   0xcfbb
  43155b:	fsub   st(6),st
  43155d:	fild   QWORD PTR [ecx-0x7117eff1]
  431563:	cmp    al,BYTE PTR [ebx-0x133fa252]
  431569:	mov    eax,0x4df78120
  43156e:	xor    DWORD PTR [ebx-0x2a],esp
  431571:	sbb    esp,0xe81505b8
  431577:	test   al,0x3b
  431579:	pop    ds
  43157a:	retf   
  43157b:	add    cl,ch
  43157d:	push   ebp
  43157e:	mov    BYTE PTR [ecx],0xa8
  431581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431582:	jne    0x4315f3
  431584:	and    al,0x2
  431586:	rol    BYTE PTR [edi-0x9f25f24],1
  43158c:	in     al,dx
  43158d:	int3   
  43158e:	repz es ds dec ecx
  431592:	and    eax,0xf0144abb
  431597:	pushf  
  431598:	test   BYTE PTR [eax],al
  43159a:	pop    ebp
  43159b:	adc    DWORD PTR [edi+edx*1-0x3e],edi
  43159f:	adc    al,0xa6
  4315a1:	dec    ebp
  4315a2:	shl    BYTE PTR [edi],1
  4315a4:	mov    ds:0x382e9608,eax
  4315a9:	push   ebx
  4315aa:	ins    DWORD PTR es:[edi],dx
  4315ab:	sahf   
  4315ac:	jmp    0x875c:0x12b0288
  4315b3:	call   FWORD PTR [ecx+0x7b]
  4315b6:	fidiv  WORD PTR [ebx]
  4315b8:	mov    edi,DWORD PTR [edx+0x4]
  4315bb:	mov    al,ds:0x53873d95
  4315c0:	pop    ecx
  4315c1:	cli    
  4315c2:	jne    0x4315ec
  4315c4:	mov    ds:0xc3f6ec62,al
  4315c9:	icebp  
  4315ca:	jp     0x4315ce
  4315cc:	dec    esp
  4315cd:	or     BYTE PTR [edi+ebp*2+0x44ab1b12],dh
  4315d4:	cmp    DWORD PTR [eax-0x2a],esi
  4315d7:	jg     0x431632
  4315d9:	cld    
  4315da:	cmp    DWORD PTR [esi],ebx
  4315dc:	push   es
  4315dd:	xchg   edi,eax
  4315de:	sbb    BYTE PTR [edx+0x3e71ae3f],dl
  4315e4:	imul   esp,ebp,0xffffffd9
  4315e7:	cmp    al,0x4e
  4315e9:	mov    al,ds:0x6463535a
  4315ee:	xchg   edx,ecx
  4315f0:	pusha  
  4315f1:	(bad)  
  4315f2:	aaa    
  4315f3:	xor    bh,BYTE PTR [edi-0x3fa4d253]
  4315f9:	test   BYTE PTR [ecx-0x66],ch
  4315fc:	inc    ecx
  4315fd:	in     eax,0x98
  4315ff:	aad    0x78
  431601:	mov    dl,0xa8
  431603:	call   0x86a0:0xdd260a9d
  43160a:	jge    0x43165c
  43160c:	mov    al,ds:0x9fda8f22
  431611:	mov    ah,0x17
  431613:	mov    eax,0x670b7474
  431618:	loop   0x431632
  43161a:	test   DWORD PTR [edx],edx
  43161c:	rcr    DWORD PTR [eax+0x7c4b8f1c],1
  431622:	in     al,0xd2
  431624:	mov    ebx,0x2cfbc69
  431629:	xchg   edi,eax
  43162a:	fnstenv [ebp-0x50]
  43162d:	fidiv  DWORD PTR [edx-0x20]
  431630:	(bad)  
  431631:	mov    WORD PTR [esi-0x17a40dbb],?
  431637:	adc    eax,0xb468ae88
  43163c:	ins    DWORD PTR es:[edi],dx
  43163d:	fld    TBYTE PTR [ebx+0x1e]
  431640:	add    ch,BYTE PTR [edx+edx*4-0x2db1931a]
  431647:	fnstenv [ebx+eax*4]
  43164a:	shl    BYTE PTR [ebx+0x61],1
  43164d:	or     ecx,ebp
  43164f:	rcr    eax,0x1c
  431652:	lahf   
  431653:	hlt    
  431654:	lock xor al,0x41
  431657:	push   edi
  431658:	xlat   BYTE PTR ds:[ebx]
  431659:	sbb    DWORD PTR [edx],edi
  43165b:	rcr    BYTE PTR [ebp+ecx*4+0x5ec63c12],cl
  431662:	or     edx,ebx
  431664:	sbb    al,al
  431666:	loopne 0x43165f
  431668:	ret    0x9181
  43166b:	sub    al,0x1a
  43166d:	cs in  al,0xf5
  431670:	ret    0x13ff
  431673:	or     BYTE PTR [ebp+0x4b087707],ah
  431679:	lods   al,BYTE PTR ds:[esi]
  43167a:	sbb    BYTE PTR [edx],bl
  43167c:	jae    0x431681
  43167e:	and    esp,DWORD PTR [ebp-0x14dc0cd4]
  431684:	jmp    0xd0ab06a9
  431689:	aam    0x5c
  43168b:	jl     0x43165f
  43168d:	repz xchg edi,eax
  43168f:	lods   eax,DWORD PTR ds:[esi]
  431690:	xchg   edi,eax
  431691:	in     al,dx
  431692:	clc    
  431693:	mov    edx,0xc100dd35
  431698:	in     eax,dx
  431699:	fisttp QWORD PTR [esp+ebx*1+0x22]
  43169d:	jb     0x4316b6
  43169f:	das    
  4316a0:	call   0x9e8f:0x40bfc513
  4316a7:	call   0x3d047600
  4316ac:	fsub   st(0),st
  4316ae:	loope  0x431710
  4316b0:	mov    BYTE PTR [edi],dh
  4316b2:	into   
  4316b3:	jge    0x4316c8
  4316b5:	jmp    0x4316c3
  4316b7:	dec    edx
  4316b8:	xor    eax,0xe18f62a2
  4316bd:	jnp    0x431707
  4316bf:	xor    BYTE PTR [edx],dl
  4316c1:	xor    eax,0x717a045f
  4316c6:	sub    ecx,DWORD PTR [edx+0x54]
  4316c9:	ror    DWORD PTR [esi+0x26e0a3f],cl
  4316cf:	sub    al,0xd9
  4316d1:	js     0x4316e6
  4316d3:	(bad)  [ebp-0x2d]
  4316d6:	dec    ebx
  4316d7:	shl    BYTE PTR [esi-0x18],cl
  4316da:	and    BYTE PTR [esi+ebp*8+0x4fd42c8],cl
  4316e1:	add    BYTE PTR [esp+eax*2+0x24],dh
  4316e5:	stos   DWORD PTR es:[edi],eax
  4316e6:	add    bl,al
  4316e8:	iret   
  4316e9:	in     al,0x9
  4316eb:	pop    eax
  4316ec:	push   0x1880e3cc
  4316f1:	call   0xb3a7:0x8cccb33f
  4316f8:	inc    edx
  4316f9:	push   es
  4316fa:	push   ecx
  4316fb:	cdq    
  4316fc:	mov    esi,0xee023465
  431701:	mov    ch,0xd6
  431703:	std    
  431704:	inc    ecx
  431705:	mov    ah,0x95
  431707:	pop    eax
  431708:	dec    esi
  431709:	jle    0x43170f
  43170b:	daa    
  43170c:	leave  
  43170d:	or     DWORD PTR [edi+0x7a],ecx
  431710:	jl     0x431769
  431712:	jno    0x431716
  431714:	cmp    DWORD PTR [ebp-0x5f216066],0xfa53a86c
  43171e:	jle    0x4316a1
  431720:	adc    BYTE PTR [ebx-0x3c],cl
  431723:	es inc esi
  431725:	fild   WORD PTR [ecx-0x239cc9c9]
  43172b:	ins    BYTE PTR es:[edi],dx
  43172c:	scas   al,BYTE PTR es:[edi]
  43172d:	xchg   edx,eax
  43172e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43172f:	push   ebx
  431730:	ins    DWORD PTR es:[edi],dx
  431731:	and    al,0x5b
  431733:	mov    bl,0x90
  431735:	pop    edx
  431736:	sub    eax,0xb300c35d
  43173b:	and    ebx,ebx
  43173d:	mov    ah,0x89
  43173f:	pop    esp
  431740:	mov    al,ds:0x27667bd9
  431745:	add    ebx,eax
  431747:	rol    ah,0xde
  43174a:	cdq    
  43174b:	xchg   ebx,eax
  43174c:	not    DWORD PTR [ebx-0x3fa90375]
  431752:	mov    bl,0xa1
  431754:	jns    0x43179a
  431756:	pop    ecx
  431757:	pop    ds
  431758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431759:	xchg   ecx,eax
  43175a:	add    ah,BYTE PTR [ebp-0x28]
  43175d:	jg     0x43179a
  43175f:	dec    eax
  431760:	sbb    al,0xc8
  431762:	inc    ebp
  431763:	cdq    
  431764:	mov    ch,0x27
  431766:	or     ebp,DWORD PTR [ebx]
  431768:	inc    esp
  431769:	scas   eax,DWORD PTR es:[edi]
  43176a:	in     al,dx
  43176b:	ss fmul st,st(3)
  43176e:	bnd je 0x4317b4
  431771:	fcmovne st,st(6)
  431773:	adc    BYTE PTR [edi],bl
  431775:	lods   eax,DWORD PTR ds:[esi]
  431776:	push   0x3077a87a
  43177b:	enter  0x7bb8,0x56
  43177f:	cmp    eax,0x36150e8
  431784:	retf   
  431785:	fdivr  QWORD PTR [ebp+0x2755164b]
  43178b:	mov    bh,0x98
  43178d:	and    al,BYTE PTR [eax]
  43178f:	es lahf 
  431791:	xchg   esi,eax
  431792:	out    dx,al
  431793:	into   
  431794:	push   eax
  431795:	out    dx,al
  431796:	hlt    
  431797:	and    al,0xc3
  431799:	jg     0x43173c
  43179b:	jle    0x43175e
  43179d:	jp     0x43180e
  43179f:	pusha  
  4317a0:	dec    eax
  4317a1:	or     al,0x49
  4317a3:	mov    ecx,0x83a11977
  4317a8:	ins    DWORD PTR es:[edi],dx
  4317a9:	lock mov eax,ds:0x398d881d
  4317af:	hlt    
  4317b0:	jbe    0x43174b
  4317b2:	adc    al,0x20
  4317b4:	int3   
  4317b5:	pop    esp
  4317b6:	fst    DWORD PTR [edi-0x5a]
  4317b9:	fxch   st(0)
  4317bb:	cmp    bl,cl
  4317bd:	(bad)  
  4317be:	in     eax,dx
  4317bf:	push   0x952fa366
  4317c4:	pop    esp
  4317c5:	xlat   BYTE PTR ds:[ebx]
  4317c6:	sti    
  4317c7:	adc    DWORD PTR [ecx-0x370289e7],edx
  4317cd:	add    al,0x71
  4317cf:	pop    ecx
  4317d0:	xchg   ebp,eax
  4317d1:	outs   dx,BYTE PTR ds:[esi]
  4317d2:	mov    ebx,0x2826724c
  4317d7:	arpl   bp,di
  4317d9:	les    ebx,FWORD PTR [esi+0x77c55c75]
  4317df:	dec    esp
  4317e0:	mov    bl,0xf
  4317e2:	rol    BYTE PTR [ebp+0x3a6fe18b],1
  4317e8:	jo     0x4317a5
  4317ea:	xlat   BYTE PTR ds:[ebx]
  4317eb:	mov    eax,0xe6dd3675
  4317f0:	repnz xchg esp,eax
  4317f2:	cs add ah,bh
  4317f5:	cmp    BYTE PTR [edi+0x3c3bbc33],bl
  4317fb:	cmp    eax,0xf4b4ca0a
  431800:	out    dx,eax
  431801:	push   ss
  431802:	xor    eax,DWORD PTR [eax]
  431804:	add    BYTE PTR [eax],al
  431806:	add    BYTE PTR [eax],al
  431808:	neg    DWORD PTR [ecx]
  43180a:	ds dec esi
  43180c:	push   ecx
  43180d:	or     DWORD PTR [eax],eax
  43180f:	add    BYTE PTR [eax],al
  431811:	add    BYTE PTR [eax],al
  431813:	add    BYTE PTR [ecx+0x9],dl
  431816:	add    BYTE PTR [eax],al
  431818:	inc    eax
  431819:	add    BYTE PTR [esi],ah
  43181b:	jl     0x43181d
  43181d:	add    dh,BYTE PTR [esi]
  43181f:	or     BYTE PTR [eax],al
  431821:	add    ah,al
  431823:	inc    ebp
  431824:	add    BYTE PTR [ecx],dl
  431826:	test   DWORD PTR [edx],edi
  431828:	sbb    ebx,ebp
  43182a:	pop    es
  43182b:	inc    ebx
  43182c:	xor    BYTE PTR [esp+edi*8],ah
  43182f:	call   0xa0e7:0x13c96d3
  431836:	dec    eax
  431837:	aaa    
  431838:	adc    ecx,DWORD PTR [edx+0x1b]
  43183b:	daa    
  43183c:	mov    ch,0xb7
  43183e:	push   ss
  43183f:	ins    BYTE PTR es:[edi],dx
  431840:	arpl   WORD PTR [ebx],dx
  431842:	or     ebp,eax
  431844:	jb     0x43180e
  431846:	sbb    eax,DWORD PTR [ebx-0x70]
  431849:	fadd   QWORD PTR [ebx+edx*4-0x1c94a407]
  431850:	cmp    BYTE PTR [eax],0xd5
  431853:	into   
  431854:	clc    
  431855:	jle    0x431872
  431857:	clc    
  431858:	and    eax,0x24905c7a
  43185d:	in     al,0x12
  43185f:	fisttp WORD PTR [ecx]
  431861:	cmp    bh,ch
  431863:	and    dl,0x72
  431866:	mov    bh,0x43
  431868:	mov    edi,0xa4aa2f7e
  43186d:	scas   al,BYTE PTR es:[edi]
  43186e:	cmp    ebp,DWORD PTR [edx+0x4b74e69b]
  431874:	or     al,0x4c
  431876:	inc    ebp
  431877:	push   ss
  431878:	or     eax,0xaa3724a3
  43187d:	mov    dl,0x70
  43187f:	push   esi
  431880:	fwait
  431881:	xor    al,0x61
  431883:	jb     0x4318eb
  431885:	lds    ebx,FWORD PTR [eax-0x6c]
  431888:	test   al,0xcb
  43188a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43188b:	sbb    BYTE PTR [ecx-0x26],dl
  43188e:	cmc    
  43188f:	fnstcw WORD PTR [eax-0x10b54f07]
  431895:	push   0x52
  431897:	jle    0x43190f
  431899:	(bad)  
  43189b:	mov    BYTE PTR [eax-0x5f4663e6],cl
  4318a1:	test   BYTE PTR es:[ebx],ah
  4318a4:	adc    eax,0xa781a9
  4318a9:	jb     0x43189c
  4318ab:	test   al,0x1e
  4318ad:	arpl   WORD PTR [ecx+0x4717320a],bp
  4318b3:	je     0x431881
  4318b5:	(bad)  
  4318b6:	xchg   ebx,eax
  4318b7:	ins    BYTE PTR es:[edi],dx
  4318b8:	repz mov cl,0x15
  4318bb:	push   ds
  4318bc:	hlt    
  4318bd:	lock or edx,DWORD PTR [edi+eiz*1]
  4318c1:	sbb    al,0x8
  4318c3:	mov    ebx,0xd614ad04
  4318c8:	mov    eax,ds:0x9a93c1a9
  4318cd:	or     eax,DWORD PTR ds:0xd8b9b4bc
  4318d3:	enter  0xe693,0xa4
  4318d7:	fwait
  4318d8:	loopne 0x4318d8
  4318da:	pop    ebp
  4318db:	jle    0x431948
  4318dd:	fcmovu st,st(7)
  4318df:	and    eax,0xd5cf04dc
  4318e4:	mov    eax,ds:0x7194d292
  4318e9:	scas   eax,DWORD PTR es:[edi]
  4318ea:	sub    bl,ah
  4318ec:	adc    DWORD PTR ds:0xca0767da,ecx
  4318f2:	rcr    BYTE PTR gs:[edx+0x41],1
  4318f6:	daa    
  4318f7:	lds    esi,FWORD PTR [esp+ecx*4+0x47]
  4318fb:	loop   0x4318f1
  4318fd:	mov    eax,ds:0x6dec8cd4
  431902:	pop    es
  431903:	pop    edi
  431904:	push   ebx
  431905:	sbb    BYTE PTR [edx-0x1a142ec3],cl
  43190b:	adc    DWORD PTR [eiz*1-0x5f3ff4c4],ecx
  431912:	push   ecx
  431913:	jl     0x4318bf
  431915:	scas   eax,DWORD PTR es:[edi]
  431916:	(bad)  
  431917:	pusha  
  431918:	and    ch,bl
  43191a:	adc    bl,BYTE PTR [esi-0x2f8ff73]
  431920:	or     BYTE PTR [ebp-0x51],cl
  431923:	xchg   ebx,eax
  431924:	add    ecx,edx
  431926:	fimul  DWORD PTR [eax+0x27232c8c]
  43192c:	jl     0x431946
  43192e:	(bad)  
  43192f:	(bad)  
  431930:	mov    edi,0xe825006
  431935:	mov    ch,0x61
  431937:	fadd   DWORD PTR [esi-0x77]
  43193a:	or     esi,DWORD PTR [ebx+ebp*4-0x70]
  43193e:	lea    esp,[ebx+0x7da32940]
  431944:	sbb    al,0xea
  431946:	(bad)  
  431947:	lods   al,BYTE PTR ds:[esi]
  431948:	int3   
  431949:	arpl   WORD PTR [edi],di
  43194b:	jno    0x4318d2
  43194d:	inc    eax
  43194e:	lahf   
  43194f:	push   ebp
  431950:	adc    al,BYTE PTR [esi-0x72]
  431953:	cmc    
  431954:	stos   DWORD PTR es:[edi],eax
  431955:	xor    eax,0xc5f4a764
  43195a:	ror    DWORD PTR [esi-0x77ad5bd8],0x8e
  431961:	shr    DWORD PTR [eax],0x47
  431964:	jae    0x43193c
  431966:	int    0x39
  431968:	lods   al,BYTE PTR ds:[esi]
  431969:	sti    
  43196a:	and    BYTE PTR [eax+0x6b],0x22
  43196e:	xchg   dl,dl
  431970:	mov    ss,WORD PTR [esp+ebp*4+0x7b]
  431974:	cwde   
  431975:	rcl    DWORD PTR [ecx],0x74
  431978:	mov    ah,0x31
  43197a:	js     0x4319ba
  43197c:	cmp    BYTE PTR [ebp+0x5a995007],0x61
  431983:	pushf  
  431984:	xor    BYTE PTR [edx],dh
  431986:	xlat   BYTE PTR ds:[ebx]
  431987:	push   ss
  431988:	xor    ch,cl
  43198a:	in     al,dx
  43198b:	xor    eax,eax
  43198d:	xchg   BYTE PTR [eax+0x7c5d7fc2],ch
  431993:	mov    al,ds:0x1b66e4a5
  431998:	or     dh,ah
  43199a:	and    al,0xc6
  43199c:	cld    
  43199d:	add    DWORD PTR [edi+ebx*1-0x2c6ebb07],ecx
  4319a4:	mov    ch,0xf3
  4319a6:	xor    DWORD PTR [eax-0x2bc8077a],esi
  4319ac:	xor    BYTE PTR [ebp+0x57d44eec],bh
  4319b2:	xchg   DWORD PTR [ebp+ebx*4+0x5da45440],esp
  4319b9:	clc    
  4319ba:	in     al,dx
  4319bb:	les    eax,FWORD PTR [eax-0x35558a19]
  4319c1:	xchg   ebp,eax
  4319c2:	mov    al,ds:0xa237bc22
  4319c7:	test   al,0x75
  4319c9:	clc    
  4319ca:	les    esi,FWORD PTR [si]
  4319cd:	es jle 0x43199f
  4319d0:	cmp    esp,DWORD PTR [ecx+0x10e853db]
  4319d6:	sub    ch,BYTE PTR ds:0xa539e504
  4319dc:	mov    al,0xc
  4319de:	mov    ch,0xe2
  4319e0:	test   DWORD PTR [edx-0x619c1030],esp
  4319e6:	xor    BYTE PTR [ecx-0x3d],bh
  4319e9:	adc    al,0x3b
  4319eb:	add    DWORD PTR [ebp-0x72],0xffffff8b
  4319ef:	fadd   DWORD PTR [ebp-0x38]
  4319f2:	repz in al,0x87
  4319f5:	fcom   DWORD PTR [eax-0x15]
  4319f8:	cld    
  4319f9:	loop   0x431998
  4319fb:	xchg   ecx,eax
  4319fc:	pop    esi
  4319fd:	out    dx,al
  4319fe:	mov    esi,0x26204198
  431a03:	adc    BYTE PTR [edx-0x5e],dl
  431a06:	mov    ecx,0x44254c03
  431a0b:	stos   DWORD PTR es:[edi],eax
  431a0c:	push   esi
  431a0d:	push   es
  431a0e:	add    edx,DWORD PTR [eax-0x13512f2d]
  431a14:	aam    0xfc
  431a16:	inc    edx
  431a17:	pop    ss
  431a18:	and    BYTE PTR [ebp+0x1f],0x2b
  431a1c:	adc    BYTE PTR [esi-0x1f2bfa57],ah
  431a22:	xchg   ebx,eax
  431a23:	pushf  
  431a24:	jmp    0x55329f5d
  431a29:	out    dx,al
  431a2a:	nop    DWORD PTR [ebp-0x31cea73a]
  431a31:	div    esp
  431a33:	imul   ebx,DWORD PTR [ecx+eiz*4],0xffffffde
  431a37:	jl     0x431a79
  431a39:	mov    ebx,0x262dbf91
  431a3e:	rol    ebx,1
  431a40:	and    al,0x84
  431a42:	test   al,0xbd
  431a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431a45:	mov    ecx,0x48e20be8
  431a4a:	inc    edi
  431a4b:	jns    0x431a96
  431a4d:	aaa    
  431a4e:	leave  
  431a4f:	push   0x796ca9c6
  431a54:	bnd jmp 0xab19b1a7
  431a5a:	pop    ss
  431a5b:	nop
  431a5c:	inc    ecx
  431a5d:	jle    0x431aad
  431a5f:	std    
  431a60:	mov    al,ds:0xb44688f9
  431a65:	cwde   
  431a66:	jle    0x431a3a
  431a68:	inc    eax
  431a69:	pop    edi
  431a6a:	mov    edx,0xc75c3323
  431a6f:	xchg   ecx,eax
  431a70:	loop   0x431a00
  431a72:	xor    al,0xef
  431a74:	in     eax,0xaf
  431a76:	sub    BYTE PTR ds:0xa8fa91e,0x59
  431a7d:	shl    DWORD PTR cs:[ecx+ebp*2+0x2df6abdf],cl
  431a85:	and    al,0x53
  431a87:	jle    0x431a51
  431a89:	mov    eax,ds:0x55c4f7a3
  431a8e:	js     0x431adb
  431a90:	mov    al,0x70
  431a92:	xchg   edx,eax
  431a93:	inc    ebx
  431a94:	and    al,BYTE PTR [esi-0x29]
  431a97:	js     0x431a8b
  431a99:	mov    dl,0x94
  431a9b:	mov    dl,0x73
  431a9d:	push   es
  431a9e:	or     BYTE PTR [eax-0x1e],bh
  431aa1:	and    al,0x5a
  431aa3:	mov    eax,0xa6499bab
  431aa8:	pop    ds
  431aa9:	or     al,0x94
  431aab:	add    ah,bl
  431aad:	pop    ss
  431aae:	out    0xdb,eax
  431ab0:	pop    ebp
  431ab1:	xor    al,0x18
  431ab3:	or     ah,BYTE PTR [ebp+0x75dfb100]
  431ab9:	inc    esi
  431aba:	lea    ecx,[ebp-0x3e]
  431abd:	mov    ds:0xf1b358a8,eax
  431ac2:	les    ebx,FWORD PTR [ebx-0x33d9c380]
  431ac8:	sub    DWORD PTR [ebx-0x4838d0db],ebp
  431ace:	sbb    bh,ah
  431ad0:	lock mov esi,0xf1a92443
  431ad6:	adc    al,0x5f
  431ad8:	lds    edx,FWORD PTR [edx+ecx*8]
  431adb:	cmp    ebx,ebp
  431add:	push   ecx
  431ade:	enter  0xba2c,0xaa
  431ae2:	mov    esp,0xd001f3dc
  431ae7:	std    
  431ae8:	(bad)  
  431ae9:	scas   eax,DWORD PTR es:[edi]
  431aea:	retf   
  431aeb:	loopne 0x431af3
  431aed:	jns    0x431ae7
  431aef:	out    0x64,al
  431af1:	pop    eax
  431af2:	push   esp
  431af3:	je     0x431af9
  431af5:	pop    edi
  431af6:	rcl    DWORD PTR [ebp+0x67ecb50e],1
  431afc:	stos   BYTE PTR es:[edi],al
  431afd:	sub    BYTE PTR [ebp+esi*1+0x69a883d5],ch
  431b04:	xor    al,0x7c
  431b06:	dec    esp
  431b07:	mov    ebp,0xd83a36b
  431b0c:	arpl   WORD PTR [ecx],bx
  431b0e:	push   ss
  431b0f:	hlt    
  431b10:	mov    al,0x53
  431b12:	lea    eax,[ebx+edi*4+0x51]
  431b16:	ins    BYTE PTR es:[edi],dx
  431b17:	dec    esp
  431b18:	sbb    BYTE PTR [ecx-0x4ee6aa36],ah
  431b1e:	jmp    0x431b6a
  431b20:	xor    eax,0x3999cc3c
  431b25:	dec    ebx
  431b26:	add    al,0xcf
  431b28:	fdivr  QWORD PTR [eax]
  431b2a:	pusha  
  431b2b:	sbb    ebp,DWORD PTR [ecx-0x4e]
  431b2e:	mov    WORD PTR [ebp-0x7b49b602],gs
  431b34:	mov    ?,WORD PTR [ebx-0xf4e0aa9]
  431b3a:	mov    esi,0x63362c79
  431b3f:	push   ss
  431b40:	mov    esi,0x3c2b7dd0
  431b45:	push   eax
  431b46:	std    
  431b47:	jns    0x431b41
  431b49:	mov    DWORD PTR [edx],eax
  431b4b:	xchg   esp,eax
  431b4c:	adc    bh,BYTE PTR ds:0xc1e6b74
  431b52:	xchg   ebp,eax
  431b53:	test   eax,0x98dcb029
  431b58:	xchg   edx,eax
  431b59:	pushf  
  431b5a:	jmp    0x97c5cb08
  431b5f:	test   DWORD PTR [eax-0x16],eax
  431b62:	jae    0x431b8d
  431b64:	mov    ecx,0x9c84c56f
  431b69:	or     BYTE PTR fs:[esi],bl
  431b6c:	xor    bl,bh
  431b6e:	mov    esp,0x88c06e9c
  431b73:	jl     0x431b3d
  431b75:	sub    eax,0x4cd73614
  431b7a:	lds    ebp,FWORD PTR [edx+edx*2+0x6b7ec1d6]
  431b81:	adc    DWORD PTR [ebx+edx*1-0x30],0xffffff86
  431b86:	addr16 sub dh,dl
  431b89:	dec    ebx
  431b8a:	xor    BYTE PTR [esi],dh
  431b8c:	push   ecx
  431b8d:	js     0x431bf0
  431b8f:	nop
  431b90:	jmp    0x431b64
  431b92:	mov    ch,0xb3
  431b94:	mov    ch,0x2e
  431b96:	pushf  
  431b97:	test   BYTE PTR [eax],dl
  431b99:	pushf  
  431b9a:	sti    
  431b9b:	(bad)  
  431b9c:	nop
  431b9d:	push   edx
  431b9e:	and    al,al
  431ba0:	mov    ds:0x64cf256,al
  431ba5:	push   ecx
  431ba6:	(bad)  
  431ba7:	mov    ebp,0x69de4fe4
  431bac:	xchg   esp,eax
  431bad:	and    ch,cl
  431baf:	lahf   
  431bb0:	pop    ebp
  431bb1:	mov    WORD PTR [eax+0x2be82b1],?
  431bb7:	pop    edx
  431bb8:	xchg   esp,eax
  431bb9:	hlt    
  431bba:	mov    al,0x41
  431bbc:	cmp    eax,0x5fd7c480
  431bc1:	mov    esp,cr2
  431bc4:	mov    eax,0x836cdc8c
  431bc9:	test   al,0xe1
  431bcb:	out    dx,al
  431bcc:	clc    
  431bcd:	pop    edi
  431bce:	aaa    
  431bcf:	retf   0xd7e2
  431bd2:	dec    ecx
  431bd3:	add    BYTE PTR fs:[edi+ebp*4],bl
  431bd7:	in     eax,0x5e
  431bd9:	jns    0x431bac
  431bdb:	pop    ds
  431bdc:	or     DWORD PTR [esi],edx
  431bde:	les    esi,FWORD PTR [ebx+esi*4]
  431be1:	jbe    0x431b9b
  431be3:	in     eax,0xea
  431be5:	xchg   edi,eax
  431be6:	popa   
  431be7:	call   0x8860def2
  431bec:	nop
  431bed:	ret    0x1b8e
  431bf0:	or     al,0xb4
  431bf2:	sbb    al,0x73
  431bf4:	inc    BYTE PTR [edx+0x30356f4b]
  431bfa:	xchg   edx,eax
  431bfb:	and    al,0x37
  431bfd:	dec    eax
  431bfe:	adc    ebx,edi
  431c00:	jb     0x431c3d
  431c02:	fmul   st,st(0)
  431c04:	cmp    bl,BYTE PTR [ebx+0x5b]
  431c07:	mov    esi,0xfc0626be
  431c0c:	sti    
  431c0d:	xchg   DWORD PTR [edx+eiz*2],esp
  431c10:	or     dh,bl
  431c12:	mul    BYTE PTR ds:[eax]
  431c15:	scas   al,BYTE PTR es:[edi]
  431c16:	fs dec eax
  431c18:	mov    ecx,0x94de5606
  431c1d:	inc    esp
  431c1e:	sub    eax,esp
  431c20:	xlat   BYTE PTR ds:[ebx]
  431c21:	mov    ds:0xe42db3ae,eax
  431c26:	push   0x6e05533a
  431c2b:	push   ecx
  431c2c:	mov    ebp,fs
  431c2e:	(bad)  
  431c2f:	adc    BYTE PTR [ecx],ch
  431c31:	sahf   
  431c32:	add    eax,0x952c621b
  431c37:	or     BYTE PTR [edi+ecx*8],dh
  431c3a:	out    0x65,al
  431c3c:	ret    0xe13b
  431c3f:	dec    ebp
  431c40:	mov    ch,0x58
  431c42:	push   ds
  431c43:	imul   ebx,DWORD PTR [esi-0x28ba3121],0x21
  431c4a:	jl     0x431c8f
  431c4c:	add    DWORD PTR [ebp+0x6d176209],ebp
  431c52:	jbe    0x431bf4
  431c54:	pushf  
  431c55:	or     ebp,DWORD PTR [edx]
  431c57:	fwait
  431c58:	ja     0x431ccf
  431c5a:	repnz sbb cl,BYTE PTR [eax+0x7d]
  431c5e:	xor    al,0x17
  431c60:	pop    esi
  431c61:	out    0xcc,eax
  431c63:	je     0x431c7e
  431c65:	ins    BYTE PTR es:[edi],dx
  431c66:	push   edi
  431c67:	in     al,dx
  431c68:	xor    ebx,esi
  431c6a:	xor    BYTE PTR [ebx+0x6890f8fe],ah
  431c70:	shl    ch,cl
  431c72:	test   al,0x20
  431c74:	test   al,0xfe
  431c76:	imul   esi,DWORD PTR [eax+ebp*4+0x22ca97cc],0x5ce283f6
  431c81:	ffree  st(2)
  431c83:	loopne 0x431cca
  431c85:	add    edi,DWORD PTR [edi]
  431c87:	mov    bh,0xed
  431c89:	xor    ah,0x6f
  431c8c:	push   es
  431c8d:	addr16 or eax,0xa4641de1
  431c93:	cdq    
  431c94:	pop    esi
  431c95:	mul    DWORD PTR [edi-0x1f]
  431c98:	sbb    eax,esi
  431c9a:	sti    
  431c9b:	enter  0x3418,0xf3
  431c9f:	(bad)  
  431ca1:	dec    esp
  431ca2:	mov    cl,0xd
  431ca4:	in     al,dx
  431ca5:	cmp    cl,BYTE PTR [eax-0x46]
  431ca8:	cmp    bl,BYTE PTR [edi]
  431caa:	or     esp,ebx
  431cac:	ins    DWORD PTR es:[edi],dx
  431cad:	xchg   esp,eax
  431cae:	ffreep st(2)
  431cb0:	retf   
  431cb1:	sar    DWORD PTR [edx-0x47585546],1
  431cb7:	into   
  431cb8:	cmp    BYTE PTR [edi+0x4151526f],dl
  431cbe:	jns    0x431c9c
  431cc0:	or     eax,0xef73c221
  431cc5:	loopne 0x431cee
  431cc7:	push   ss
  431cc8:	add    BYTE PTR [ebp+0x58921bd5],bh
  431cce:	and    al,0xc9
  431cd0:	pushf  
  431cd1:	test   al,0x13
  431cd3:	retf   0x2afd
  431cd6:	adc    BYTE PTR [ebx+0x7],bl
  431cd9:	popf   
  431cda:	int3   
  431cdb:	aad    0x62
  431cdd:	mov    cl,0xdb
  431cdf:	push   ss
  431ce0:	outs   dx,DWORD PTR ds:[esi]
  431ce1:	scas   eax,DWORD PTR es:[edi]
  431ce2:	mov    ecx,0x58904df0
  431ce7:	iret   
  431ce8:	test   ah,ah
  431cea:	push   0x4bf014b6
  431cef:	inc    edi
  431cf0:	pop    eax
  431cf1:	imul   cl
  431cf3:	adc    WORD PTR [eax],di
  431cf6:	push   edx
  431cf7:	icebp  
  431cf8:	dec    ebx
  431cf9:	xchg   BYTE PTR [esi-0x4],dl
  431cfc:	int3   
  431cfd:	pop    edi
  431cfe:	loopne 0x431d06
  431d00:	aad    0xa5
  431d02:	inc    edi
  431d03:	xchg   ecx,eax
  431d04:	dec    eax
  431d05:	jecxz  0x431cea
  431d07:	add    al,0xf5
  431d09:	xor    al,0x36
  431d0b:	xchg   ebx,eax
  431d0c:	dec    ebp
  431d0d:	popa   
  431d0e:	pop    ecx
  431d0f:	pop    es
  431d10:	sub    dl,dh
  431d12:	jmp    0xb2ed:0x4c47bef8
  431d19:	dec    esp
  431d1a:	sahf   
  431d1b:	(bad)  
  431d1c:	pop    esp
  431d1d:	push   0x297c6e7
  431d22:	jo     0x431d58
  431d24:	mov    edx,0xca38307c
  431d29:	sub    eax,DWORD PTR [ebp+0x18]
  431d2c:	inc    edi
  431d2d:	jns    0x431d11
  431d2f:	dec    edi
  431d30:	sahf   
  431d31:	or     eax,0xc23c1e4a
  431d36:	mov    ch,0x14
  431d38:	mov    DWORD PTR [esi],edi
  431d3a:	imul   BYTE PTR [edx-0x2fdc9f2f]
  431d40:	jbe    0x431db1
  431d42:	push   es
  431d43:	cmp    DWORD PTR [eax],0xd0f68408
  431d49:	xchg   esp,eax
  431d4a:	pop    ebp
  431d4b:	nop
  431d4c:	push   0xee2ca86b
  431d51:	xchg   ecx,eax
  431d52:	xchg   esp,eax
  431d53:	dec    eax
  431d54:	xchg   edx,eax
  431d55:	data16 loope 0x431ce9
  431d58:	push   eax
  431d59:	adc    BYTE PTR [edi],ah
  431d5b:	(bad)  
  431d5c:	in     al,dx
  431d5d:	fisttp WORD PTR [eax-0x568bac84]
  431d63:	pop    esp
  431d64:	mov    ebp,0x479ffec8
  431d69:	es cwde 
  431d6b:	aam    0xde
  431d6d:	add    eax,esi
  431d6f:	cwde   
  431d70:	pop    es
  431d71:	imul   BYTE PTR [ecx]
  431d73:	mov    esp,0x7606151a
  431d78:	retf   
  431d79:	retf   
  431d7a:	add    BYTE PTR [ebp+0x7bff364],bh
  431d80:	in     al,0xfc
  431d82:	jbe    0x431d53
  431d84:	sub    eax,0x8750e88
  431d89:	in     al,0x60
  431d8b:	push   esi
  431d8c:	loopne 0x431ddf
  431d8e:	lods   al,BYTE PTR ds:[esi]
  431d8f:	lea    edi,[ebx]
  431d91:	jg     0x431da5
  431d93:	movups XMMWORD PTR ds:0x9f7cd083,xmm3
  431d9a:	mov    edx,ebx
  431d9c:	cli    
  431d9d:	pop    ds
  431d9e:	sub    al,0x75
  431da0:	js     0x431dbd
  431da2:	cdq    
  431da3:	ret    
  431da4:	xchg   ecx,esp
  431da6:	jmp    0x431df5
  431da8:	clc    
  431da9:	pushf  
  431daa:	xchg   edx,eax
  431dab:	jg     0x431e06
  431dad:	ss mov ebx,ecx
  431db0:	repnz dec edi
  431db2:	ror    BYTE PTR [ebx-0x6f],0xa6
  431db6:	dec    ebp
  431db7:	inc    esi
  431db8:	fstp   DWORD PTR [eax-0x21691b55]
  431dbe:	test   DWORD PTR [edx-0x31b42d5a],0x59750608
  431dc8:	mov    dl,BYTE PTR [eax-0x4f812d9c]
  431dce:	cmp    BYTE PTR [ecx+0x13],dl
  431dd1:	ficomp WORD PTR [esi]
  431dd3:	xor    BYTE PTR [edi],ah
  431dd5:	mov    ds:0x714ccad4,al
  431dda:	cmp    DWORD PTR [edi+0x4d],eax
  431ddd:	jg     0x431e31
  431ddf:	clc    
  431de0:	out    0x70,eax
  431de2:	es pop ds
  431de4:	popf   
  431de5:	sbb    ebp,DWORD PTR [eax]
  431de7:	sti    
  431de8:	sbb    al,0xec
  431dea:	jmp    0xb23d:0x158c7383
  431df1:	inc    eax
  431df2:	jge    0x431e55
  431df4:	pop    esi
  431df5:	jae    0x431e34
  431df7:	xchg   esp,eax
  431df8:	sbb    al,0x4a
  431dfa:	call   0xe370470e
  431dff:	mov    dh,BYTE PTR [eax+ecx*2-0x39]
  431e03:	or     al,0xd9
  431e05:	je     0x431d89
  431e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431e08:	add    eax,0x304b208e
  431e0d:	lahf   
  431e0e:	pop    edi
  431e0f:	rol    BYTE PTR [eax+0x74690ed1],cl
  431e15:	push   esp
  431e16:	jo     0x431e93
  431e18:	mov    ds,edx
  431e1a:	mov    dl,0x1a
  431e1c:	aas    
  431e1d:	ret    
  431e1e:	cld    
  431e1f:	mov    eax,0x92f9d2d9
  431e24:	inc    ebp
  431e25:	fiadd  DWORD PTR [edi]
  431e27:	and    BYTE PTR [edx],al
  431e29:	(bad)  
  431e2b:	or     BYTE PTR [eax],dl
  431e2d:	mov    bh,0x67
  431e30:	inc    esp
  431e31:	push   ss
  431e32:	pop    ebp
  431e33:	test   DWORD PTR [eax-0xc268d83],0xbd67c168
  431e3d:	out    dx,eax
  431e3e:	popf   
  431e3f:	test   DWORD PTR [edi],esp
  431e41:	sbb    cl,BYTE PTR [eax+esi*2-0x64af8f27]
  431e48:	push   esp
  431e49:	les    esi,FWORD PTR [eax+0x4246bc34]
  431e4f:	inc    ebp
  431e50:	xchg   edx,eax
  431e51:	(bad)  
  431e52:	out    0x89,al
  431e54:	pop    eax
  431e55:	add    BYTE PTR [esi-0x44],ah
  431e58:	outs   dx,BYTE PTR ds:[esi]
  431e59:	retf   0xdea8
  431e5c:	mov    edi,0x5d287d7c
  431e61:	ds pop esi
  431e63:	xchg   esi,eax
  431e64:	fst    QWORD PTR [edi-0x3e582460]
  431e6a:	test   DWORD PTR [ebx-0x61],edi
  431e6d:	sub    ah,BYTE PTR [esi+0x48]
  431e70:	(bad)  
  431e71:	stos   BYTE PTR es:[edi],al
  431e72:	bound  ecx,QWORD PTR [ecx+eiz*1+0x6c4c99f8]
  431e79:	mov    dh,0x71
  431e7b:	sbb    al,0xba
  431e7d:	push   edx
  431e7e:	mov    ecx,0x1c90de63
  431e83:	scas   al,BYTE PTR es:[edi]
  431e84:	sahf   
  431e85:	push   es
  431e86:	int3   
  431e87:	int    0xd8
  431e89:	fwait
  431e8a:	mov    ah,0x3c
  431e8c:	pop    ds
  431e8d:	jmp    0x431e57
  431e8f:	bound  eax,QWORD PTR [edi]
  431e91:	addr16 add eax,ebx
  431e94:	adc    ch,BYTE PTR [esp+esi*4+0x1120b1cf]
  431e9b:	std    
  431e9c:	sbb    BYTE PTR [esi+0x4],0x8f
  431ea0:	jnp    0x431eb0
  431ea2:	sub    bh,BYTE PTR ds:[ecx]
  431ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431ea6:	mov    dh,0xc2
  431ea8:	dec    edx
  431ea9:	mov    esi,0xd43fbf8
  431eae:	enter  0xa9,0x9f
  431eb2:	fld    QWORD PTR [ebx-0x137eda19]
  431eb8:	sub    DWORD PTR [edx+0x35f77e7d],ebp
  431ebe:	mov    al,ds:0x38bf103a
  431ec3:	push   ebp
  431ec4:	fld    TBYTE PTR [esi-0x47b96546]
  431eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431ecb:	jo     0x431eaa
  431ecd:	lock xor BYTE PTR [ecx],bh
  431ed0:	mov    esp,edi
  431ed2:	fcom   QWORD PTR [ecx-0x394ec57c]
  431ed8:	sub    al,0x88
  431eda:	dec    ebp
  431edb:	add    dl,bl
  431edd:	loopne 0x431ede
  431edf:	in     al,0x42
  431ee1:	mov    ?,ecx
  431ee3:	sbb    esp,DWORD PTR [esp+ecx*8]
  431ee6:	jmp    0x18f8:0x42cac0
  431eed:	int3   
  431eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431eef:	pop    edi
  431ef0:	sub    eax,0xb71da4e0
  431ef5:	cs lock xchg edx,eax
  431ef8:	and    eax,0x504abc5a
  431efd:	sbb    BYTE PTR [edx+0x14],0xf3
  431f01:	lahf   
  431f02:	xor    eax,0x3284a6b1
  431f07:	dec    eax
  431f08:	cmp    BYTE PTR [ecx+0x42d3c76f],bl
  431f0e:	dec    eax
  431f0f:	mov    bl,0x66
  431f11:	pop    esp
  431f12:	xchg   esi,eax
  431f13:	mov    dh,0x6a
  431f15:	push   edx
  431f16:	stc    
  431f17:	dec    esi
  431f18:	(bad)  
  431f19:	rol    DWORD PTR [edi+edi*8],1
  431f1c:	xor    eax,0x61b65568
  431f21:	test   DWORD PTR [ecx+0x7cd80a28],ebp
  431f27:	adc    BYTE PTR [ebx-0xc],bl
  431f2a:	fcomp  QWORD PTR [esi+0x1b403c4c]
  431f30:	pop    ss
  431f31:	xchg   ecx,ebx
  431f33:	(bad)  
  431f34:	ss jo  0x431f3f
  431f37:	mov    al,ds:0x96c4badc
  431f3c:	pop    ecx
  431f3d:	and    DWORD PTR [eax],ebx
  431f3f:	mov    edx,DWORD PTR [esi+esi*8-0x58bcb928]
  431f46:	lods   al,BYTE PTR ds:[esi]
  431f47:	cmp    al,0xec
  431f49:	loope  0x431f34
  431f4b:	mov    esi,0xb1e933b3
  431f50:	pusha  
  431f51:	jo     0x431f7e
  431f53:	pop    ecx
  431f54:	and    ebx,DWORD PTR ds:0x84f95793
  431f5a:	clc    
  431f5b:	jno    0x431f86
  431f5d:	xchg   ebx,eax
  431f5e:	mov    ebp,0xa8c02d59
  431f63:	call   0xb805:0x5577eaa
  431f6a:	add    dl,BYTE PTR [eax+0x40]
  431f6d:	xchg   edi,eax
  431f6e:	aam    0xd4
  431f70:	ficomp DWORD PTR [edi]
  431f72:	jno    0x431f63
  431f74:	je     0x431f71
  431f76:	out    dx,eax
  431f77:	push   ds
  431f78:	sbb    eax,0x4ae1d737
  431f7d:	cwde   
  431f7e:	inc    edx
  431f7f:	das    
  431f80:	sub    bl,BYTE PTR [ecx]
  431f82:	dec    ebx
  431f83:	jecxz  0x431f9a
  431f85:	mov    ebx,0xb81cc3bc
  431f8a:	jnp    0x431f50
  431f8c:	ror    BYTE PTR [ebp+0x63],cl
  431f8f:	loopne 0x431fb6
  431f91:	xor    eax,DWORD PTR [esi+0x4d23703e]
  431f97:	add    BYTE PTR [eax-0x6ebc178e],cl
  431f9d:	push   0xffffffd3
  431f9f:	inc    eax
  431fa0:	push   esi
  431fa1:	lods   al,BYTE PTR ds:[esi]
  431fa2:	popa   
  431fa3:	cwde   
  431fa4:	sub    ecx,ecx
  431fa6:	lods   al,BYTE PTR ds:[esi]
  431fa7:	sub    DWORD PTR [edx-0x63fd2fc2],eax
  431fad:	fwait
  431fae:	sub    ch,0x31
  431fb1:	gs or  dh,ah
  431fb4:	daa    
  431fb5:	lods   eax,DWORD PTR ds:[esi]
  431fb6:	mov    cl,0xf0
  431fb8:	stc    
  431fb9:	mov    eax,ds:0xdb9cd5f2
  431fbe:	nop
  431fbf:	inc    esi
  431fc0:	in     al,0x2
  431fc2:	retf   
  431fc3:	sar    BYTE PTR [eax-0x47cb5240],0x4a
  431fca:	pushf  
  431fcb:	jmp    0x431ff5
  431fcd:	sub    eax,0x36eecde4
  431fd2:	jle    0x431ff0
  431fd4:	xlat   BYTE PTR ds:[ebx]
  431fd5:	mov    ch,0x50
  431fd7:	or     cl,dh
  431fd9:	or     ch,BYTE PTR [eax+0x7745b6a3]
  431fdf:	cld    
  431fe0:	sub    al,0xdc
  431fe2:	das    
  431fe3:	push   ss
  431fe4:	mov    ebp,0x10817542
  431fe9:	aam    0x82
  431feb:	stos   DWORD PTR es:[edi],eax
  431fec:	js     0x431f93
  431fee:	or     al,0xc8
  431ff0:	mov    al,0xc7
  431ff2:	clc    
  431ff3:	cmp    ch,ah
  431ff5:	repz mov WORD PTR [ecx+0x59],ss
  431ff9:	ret    0x1cee
  431ffc:	popf   
  431ffd:	daa    
  431ffe:	xor    bl,dl
  432000:	cmp    BYTE PTR [ebp+0x54],al
  432003:	inc    edi
  432004:	inc    eax
  432005:	jle    0x431fe2
  432007:	test   eax,0x8c07b1a9
  43200c:	lahf   
  43200d:	call   0x611454ab
  432012:	int3   
  432013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432014:	neg    BYTE PTR [edx+0xc]
  432017:	retf   0x32da
  43201a:	push   ss
  43201b:	mov    dh,0xb9
  43201d:	adc    esi,edx
  43201f:	xor    BYTE PTR [eax-0x49136be0],cl
  432025:	inc    ebp
  432026:	xchg   ebx,eax
  432027:	push   esp
  432028:	push   esp
  432029:	adc    BYTE PTR ds:[ecx+0x4f668bf1],dl
  432030:	repz js 0x43208e
  432033:	jmp    0x70b1e86e
  432038:	push   es
  432039:	shl    DWORD PTR [eax],0x92
  43203c:	fucomp st(1)
  43203e:	outs   dx,DWORD PTR ds:[esi]
  43203f:	into   
  432040:	data16 mov cl,0xed
  432043:	inc    esp
  432044:	sahf   
  432045:	xchg   edi,eax
  432046:	lods   eax,DWORD PTR ds:[esi]
  432047:	fist   DWORD PTR [ebp+0x682e9af9]
  43204d:	xor    BYTE PTR [edx],0x54
  432050:	jbe    0x432047
  432052:	push   esi
  432053:	jb     0x432010
  432055:	mov    WORD PTR [edi+0x4],cs
  432058:	mov    eax,0x9e27faf1
  43205d:	jo     0x432093
  43205f:	mov    ebx,0x1fb1dee
  432064:	and    BYTE PTR [ecx+0x15],cl
  432067:	pop    eax
  432068:	jl     0x4320c1
  43206a:	nop
  43206b:	jnp    0x4320ce
  43206d:	push   eax
  43206e:	xchg   esp,eax
  43206f:	loope  0x4320ed
  432071:	push   es
  432072:	stos   DWORD PTR es:[edi],eax
  432073:	outs   dx,DWORD PTR ds:[esi]
  432074:	sub    BYTE PTR [edi],ch
  432076:	aad    0x3a
  432078:	pop    es
  432079:	mov    al,ds:0xd797b1b0
  43207e:	mov    ds:0xc4eaefc2,al
  432083:	mov    edi,0x52898e1f
  432088:	cmc    
  432089:	sbb    BYTE PTR [esp+ebp*2+0x2c],dl
  43208d:	jae    0x43204e
  43208f:	adc    BYTE PTR [ebp-0x6f2d0d60],bh
  432095:	dec    edx
  432096:	lods   al,BYTE PTR ds:[esi]
  432097:	cmp    al,0xf7
  432099:	push   esp
  43209a:	add    DWORD PTR [edi-0x6ad54b0e],ebp
  4320a0:	clc    
  4320a1:	dec    ecx
  4320a2:	outs   dx,DWORD PTR ds:[esi]
  4320a3:	fcomp  QWORD PTR [edx+0x4a]
  4320a6:	fcomp  DWORD PTR [ecx+ecx*4+0x4367ab8f]
  4320ad:	adc    BYTE PTR [ecx],ch
  4320af:	cld    
  4320b0:	cmp    BYTE PTR [ecx],cl
  4320b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4320b3:	repz cli 
  4320b5:	enter  0xa46b,0xa4
  4320b9:	pop    edx
  4320ba:	out    0xc2,al
  4320bc:	pop    esi
  4320bd:	push   esp
  4320be:	ja     0x432131
  4320c0:	arpl   ax,cx
  4320c2:	sbb    al,0x1c
  4320c4:	test   eax,0x7d327a39
  4320c9:	and    al,0xec
  4320cb:	add    esi,DWORD PTR [ecx-0x1b315bf4]
  4320d1:	mov    dl,0xbf
  4320d3:	adc    BYTE PTR [eax+eax*2-0x5d0ad619],dh
  4320da:	bound  ebx,QWORD PTR [edx-0x115dab48]
  4320e0:	pop    ss
  4320e1:	jb     0x4320da
  4320e3:	jp     0x432148
  4320e5:	fadd   QWORD PTR [edx-0x54]
  4320e8:	das    
  4320e9:	add    esi,DWORD PTR ds:0xeccc45
  4320ef:	out    dx,al
  4320f0:	leave  
  4320f1:	jno    0x4320ae
  4320f3:	rol    BYTE PTR [ecx],cl
  4320f5:	ins    DWORD PTR es:[edi],dx
  4320f6:	jecxz  0x43211c
  4320f8:	mov    eax,0x59c2dc2e
  4320fd:	jge    0x432175
  4320ff:	ds dec eax
  432101:	stos   BYTE PTR es:[edi],al
  432102:	sbb    ecx,DWORD PTR [edi-0x2]
  432105:	shl    bh,0x48
  432108:	fwait
  432109:	lock jl 0x4320bb
  43210c:	jae    0x432159
  43210e:	in     al,dx
  43210f:	mov    esi,0xd149200
  432114:	jmp    0x432143
  432116:	dec    ecx
  432117:	dec    ebp
  432118:	sbb    ebp,0xffffff89
  43211b:	cmp    BYTE PTR [ecx+0x26],dh
  43211e:	rol    esi,1
  432120:	push   ebp
  432121:	adc    cl,BYTE PTR [ecx-0x4e3fa38c]
  432127:	in     eax,0xf8
  432129:	stos   BYTE PTR es:[edi],al
  43212a:	ins    DWORD PTR es:[edi],dx
  43212b:	mov    cl,0x41
  43212d:	add    al,0xb2
  43212f:	sub    esi,ecx
  432131:	mov    WORD PTR [edx],cs
  432133:	ret    0x9184
  432136:	sub    BYTE PTR [edx],ch
  432138:	jae    0x4320f0
  43213a:	lahf   
  43213b:	xor    DWORD PTR [esi-0x4b35fd6],eax
  432141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432142:	test   BYTE PTR [eax-0x1160c109],dl
  432148:	jo     0x4320f8
  43214a:	fistp  DWORD PTR [eax+0x5d086bea]
  432150:	outs   dx,DWORD PTR ds:[esi]
  432151:	xchg   esp,eax
  432152:	adc    ebx,DWORD PTR [ecx]
  432154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432155:	mov    eax,0x2394ef9b
  43215a:	cmp    al,0x30
  43215c:	pop    ss
  43215d:	scas   eax,DWORD PTR es:[edi]
  43215e:	mov    edi,0x3d987a62
  432163:	add    BYTE PTR [eax],al
  432165:	add    BYTE PTR [eax],al
  432167:	add    bh,dh
  432169:	push   ds
  43216a:	ds pop ebp
  43216c:	push   ecx
  43216d:	or     DWORD PTR [eax],eax
  43216f:	add    BYTE PTR [eax],al
  432171:	add    BYTE PTR [eax],al
  432173:	add    BYTE PTR [ecx+0x9],dl
  432176:	add    BYTE PTR [eax],al
  432178:	inc    ecx
  432179:	add    BYTE PTR [esi],ah
  43217b:	jl     0x43217d
  43217d:	add    dh,BYTE PTR [esi]
  43217f:	or     BYTE PTR [eax],al
  432181:	add    ah,al
  432183:	inc    ebp
  432184:	add    BYTE PTR [esi],ch
  432186:	push   esp
  432187:	sbb    esp,esp
  432189:	or     dh,0x1f
  43218c:	sub    esp,DWORD PTR [esp+edx*1]
  43218f:	lods   al,BYTE PTR ds:[esi]
  432190:	(bad)  
  432191:	scas   al,BYTE PTR es:[edi]
  432192:	jo     0x43212d
  432194:	addr16 clc 
  432196:	dec    eax
  432197:	and    eax,0xda3edf76
  43219c:	into   
  43219d:	push   esp
  43219e:	push   ss
  43219f:	ins    BYTE PTR es:[edi],dx
  4321a0:	(bad)  
  4321a1:	sbb    BYTE PTR [ebx],bh
  4321a3:	add    ch,ah
  4321a5:	pop    edi
  4321a6:	cmp    edx,edx
  4321a8:	nop
  4321a9:	mov    ds:0x4583b522,al
  4321ae:	sti    
  4321af:	add    edx,DWORD PTR [ebp+0x38]
  4321b2:	jne    0x432217
  4321b4:	mov    cl,0x94
  4321b6:	xchg   esp,eax
  4321b7:	ret    0xbc58
  4321ba:	pop    esp
  4321bb:	dec    edi
  4321bc:	xor    edi,edx
  4321be:	fst    DWORD PTR [edi]
  4321c0:	pop    edx
  4321c1:	mov    ah,0x7d
  4321c3:	adc    BYTE PTR [edx+edx*1],0x4c
  4321c7:	hlt    
  4321c8:	ret    
  4321c9:	push   esi
  4321ca:	adc    eax,0x2031a428
  4321cf:	test   eax,0xf276f24c
  4321d4:	add    DWORD PTR [ecx+esi*4-0x3a],ecx
  4321d8:	push   esi
  4321d9:	cdq    
  4321da:	jp     0x4321e9
  4321dc:	mov    ?,WORD PTR [esi+0x70]
  4321df:	cmc    
  4321e0:	retf   
  4321e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4321e3:	mov    esp,0x94635be9
  4321e8:	loop   0x4321f3
  4321ea:	mov    bh,0x4b
  4321ec:	xchg   eax,esp
  4321ee:	jg     0x4321f8
  4321f0:	mov    eax,0x9eccf621
  4321f5:	mov    eax,ds:0xdcad7c7f
  4321fa:	inc    ebx
  4321fb:	pop    esp
  4321fc:	pop    ds
  4321fd:	push   0x64
  4321ff:	pop    es
  432200:	mov    al,ds:0xfea38472
  432205:	sbb    edx,DWORD PTR [ebx+0x35a5c4a0]
  43220b:	test   al,0xaf
  43220d:	mov    esp,gs
  43220f:	mov    ebx,es
  432211:	aad    0x85
  432213:	(bad)  
  432214:	int3   
  432215:	jb     0x432289
  432217:	jecxz  0x43227c
  432219:	xor    eax,DWORD PTR [esi+0xf]
  43221c:	in     al,0xf0
  43221e:	js     0x4321b3
  432220:	push   cs
  432221:	clc    
  432222:	jno    0x43225a
  432224:	dec    eax
  432225:	mov    DWORD PTR [ecx+eax*4],edx
  432228:	(bad)  
  432229:	push   edi
  43222a:	jb     0x4321ea
  43222c:	xor    al,0x77
  43222e:	adc    bh,BYTE PTR [eax+ecx*2-0x3db580ed]
  432235:	shl    DWORD PTR [esp+edi*4],0xe0
  432239:	and    BYTE PTR [edx+0x74],bl
  43223c:	arpl   WORD PTR [ebp+0x51],si
  43223f:	pushf  
  432240:	xor    al,BYTE PTR [edi*8+0x3d5fd4c3]
  432247:	scas   al,BYTE PTR es:[edi]
  432248:	and    eax,0x271028fe
  43224d:	dec    edx
  43224e:	xchg   ecx,eax
  43224f:	(bad)  
  432251:	mov    edi,0x62f6d04d
  432256:	sub    DWORD PTR fs:0xf4312168,eax
  43225d:	jecxz  0x43224a
  43225f:	loope  0x4322ca
  432261:	jo     0x43224f
  432263:	arpl   WORD PTR [esi-0x2725d2e8],di
  432269:	pop    edi
  43226a:	xor    edi,DWORD PTR [esi]
  43226c:	jmp    0x686a5f61
  432271:	js     0x432245
  432273:	xchg   BYTE PTR ds:0x76038a9,bl
  432279:	repz and al,bl
  43227c:	mov    ebp,0x84bc900
  432281:	mov    eax,0x584672d3
  432286:	retf   0x6cc6
  432289:	sub    al,0x3f
  43228b:	xchg   ebx,eax
  43228c:	adc    DWORD PTR fs:[edi+0x30],ebx
  432290:	nop
  432291:	jecxz  0x4322e3
  432293:	push   eax
  432294:	xchg   ebp,eax
  432295:	mov    ecx,0xc0a1b318
  43229a:	aad    0x74
  43229c:	arpl   WORD PTR [esi+0x7a],cx
  43229f:	out    0x7c,al
  4322a1:	pop    ecx
  4322a2:	mov    ebx,0x1c0f1ce6
  4322a7:	jbe    0x43231a
  4322a9:	popa   
  4322aa:	into   
  4322ab:	dec    ebx
  4322ac:	add    al,0x40
  4322ae:	jbe    0x432326
  4322b0:	xchg   edi,eax
  4322b1:	mov    ebp,0x7c09c02c
  4322b6:	fs fsubp st(3),st
  4322b9:	add    BYTE PTR [ecx-0x50],0xd2
  4322bd:	xchg   esp,eax
  4322be:	lea    ecx,[eax+0x58d7b177]
  4322c4:	mov    ss,WORD PTR [esi-0x3c53de00]
  4322ca:	mov    ecx,0x25604fe0
  4322cf:	hlt    
  4322d0:	repz push esp
  4322d2:	xchg   esi,eax
  4322d3:	adc    ch,al
  4322d5:	scas   al,BYTE PTR es:[edi]
  4322d6:	test   BYTE PTR [ecx-0x6087cbb0],dh
  4322dc:	xchg   esp,eax
  4322dd:	enter  0x5d10,0x54
  4322e1:	adc    eax,0x2ccf9cae
  4322e6:	sbb    ebp,DWORD PTR [ebx+0xa]
  4322e9:	mov    dl,0xcf
  4322eb:	mov    bl,0xc0
  4322ed:	mov    ?,WORD PTR ds:0xeae77957
  4322f3:	pop    ecx
  4322f4:	ftst   
  4322f6:	or     BYTE PTR [ebx+0x1f],cl
  4322f9:	mov    bl,0xec
  4322fb:	call   0xdfcf5b41
  432300:	pop    edx
  432301:	into   
  432302:	jae    0x432294
  432304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432305:	cld    
  432306:	scas   al,BYTE PTR es:[edi]
  432307:	mov    al,0x12
  432309:	dec    ebx
  43230a:	jno    0x432293
  43230c:	or     esp,ebx
  43230e:	outs   dx,BYTE PTR ds:[esi]
  43230f:	addr16 aam 0xd8
  432312:	sbb    esp,DWORD PTR [ebx-0x4180f1b]
  432318:	sar    al,0xe8
  43231b:	retf   0x989
  43231e:	mov    bh,0x9a
  432320:	sti    
  432321:	sbb    BYTE PTR [eax+0x4c09d7a0],ah
  432327:	sub    BYTE PTR [eax+0x8],ah
  43232a:	pop    ds
  43232b:	les    esi,FWORD PTR [edi+eiz*1]
  43232e:	fldenv [ecx+0x195cba6f]
  432334:	call   0x77448e59
  432339:	or     eax,0xc90c87b
  43233e:	sar    ecx,0xe0
  432341:	loop   0x432377
  432343:	repz and al,0x78
  432346:	xor    BYTE PTR [esi-0x28],dh
  432349:	xor    DWORD PTR [esi+esi*4],edx
  43234c:	and    eax,0xa8d88469
  432351:	mov    dh,BYTE PTR [edi]
  432353:	je     0x43236e
  432355:	push   0x25
  432357:	dec    ecx
  432358:	cld    
  432359:	cmp    dl,BYTE PTR gs:[ecx]
  43235c:	out    dx,al
  43235d:	in     al,dx
  43235e:	mov    eax,ds:0x5c209e30
  432363:	cs sub eax,0x5a6f365d
  432369:	aam    0x44
  43236b:	arpl   WORD PTR [ebp+0x48],si
  43236e:	add    edi,esp
  432370:	sub    edx,DWORD PTR [ebx]
  432372:	mov    esi,0x832176ec
  432377:	retf   
  432378:	sti    
  432379:	push   es
  43237a:	inc    edx
  43237b:	retf   0x1810
  43237e:	(bad)  
  43237f:	sbb    esi,DWORD PTR [ebx+0x39a91dd4]
  432385:	xor    al,0x48
  432387:	pop    edx
  432388:	mov    DWORD PTR [edi-0x5a],ebx
  43238b:	dec    eax
  43238c:	xor    eax,0xed565890
  432391:	clc    
  432392:	jecxz  0x4323c5
  432394:	(bad)  
  432395:	mul    DWORD PTR [eax+0x7c]
  432398:	(bad)  
  432399:	pop    ecx
  43239a:	xor    esi,DWORD PTR ds:0x1c7f49ff
  4323a0:	and    al,0x84
  4323a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4323a3:	sbb    ah,BYTE PTR [ecx-0x18]
  4323a6:	rcl    ch,cl
  4323a8:	repz dec eax
  4323aa:	(bad)  
  4323ab:	cli    
  4323ac:	push   ebx
  4323ad:	fwait
  4323ae:	pusha  
  4323af:	jle    0x43239e
  4323b1:	cmp    ebp,DWORD PTR [ebx+esi*2-0x61]
  4323b5:	data16 sti 
  4323b7:	(bad)  
  4323b8:	xchg   ebx,eax
  4323b9:	int    0x98
  4323bb:	nop
  4323bc:	sub    BYTE PTR [eax],al
  4323be:	xchg   edi,eax
  4323bf:	retf   0x36e1
  4323c2:	inc    ebx
  4323c3:	push   esi
  4323c4:	mov    ah,0x3d
  4323c6:	test   al,0xec
  4323c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4323c9:	call   0x5c5c81b4
  4323ce:	in     eax,dx
  4323cf:	dec    ecx
  4323d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4323d1:	stc    
  4323d2:	push   esp
  4323d3:	stc    
  4323d4:	push   ebp
  4323d5:	adc    eax,DWORD PTR [eax-0x70050caf]
  4323db:	and    edi,DWORD PTR [esi]
  4323dd:	test   ch,bh
  4323df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4323e0:	pop    ds
  4323e1:	jb     0x432371
  4323e3:	ret    
  4323e4:	shl    BYTE PTR ds:0x9fc8465d,1
  4323ea:	rep stos BYTE PTR es:[edi],al
  4323ec:	div    BYTE PTR [ebp+eax*1+0x697030d2]
  4323f3:	fcom   QWORD PTR [ecx+edi*2]
  4323f6:	pop    eax
  4323f7:	addr16 loop 0x432416
  4323fa:	xchg   esp,eax
  4323fb:	imul   edi,esp,0xffffffee
  4323fe:	push   cs
  4323ff:	dec    edi
  432400:	shl    cl,1
  432402:	int    0xb8
  432404:	inc    edx
  432405:	sbb    eax,0xaf4c6b24
  43240a:	cmp    eax,0xbebbdc40
  43240f:	dec    ebx
  432410:	add    edx,DWORD PTR [ebp+0x49]
  432413:	scas   al,BYTE PTR es:[edi]
  432414:	std    
  432415:	add    BYTE PTR [ebx],al
  432417:	cmp    eax,0xb44d29d4
  43241c:	xor    bh,BYTE PTR [eax+ebp*4]
  43241f:	ds jae 0x43248d
  432422:	add    eax,0x8beb779e
  432427:	int3   
  432428:	in     al,dx
  432429:	leave  
  43242a:	test   BYTE PTR [esi+0xfc8b737],cl
  432430:	lock xchg ebx,eax
  432432:	push   ds
  432433:	pop    eax
  432434:	cs sbb al,0x2d
  432437:	add    al,0x4e
  432439:	adc    al,0x1e
  43243b:	pushf  
  43243c:	xchg   BYTE PTR [esi+0x7c9ee1d2],bh
  432442:	mov    esp,0xf0c19159
  432447:	jo     0x432404
  432449:	jmp    0x3286051c
  43244e:	push   ebx
  43244f:	xor    cl,BYTE PTR ds:0x4ca2125
  432455:	in     eax,dx
  432456:	dec    eax
  432457:	loope  0x432484
  432459:	clc    
  43245a:	adc    BYTE PTR [esp+esi*2],ah
  43245d:	sub    BYTE PTR [edx],bl
  43245f:	xchg   ebx,esi
  432461:	aad    0xe3
  432463:	test   BYTE PTR [ebx],bl
  432465:	pop    edx
  432466:	dec    esp
  432467:	mul    DWORD PTR [ebp+0x19a470f8]
  43246d:	retf   0xf4a3
  432470:	in     eax,0xd4
  432472:	xlat   BYTE PTR ds:[ebx]
  432473:	jbe    0x4324a3
  432475:	dec    eax
  432476:	clc    
  432477:	lock sbb cl,bh
  43247a:	fld    DWORD PTR [ebx-0x1b07478b]
  432480:	mov    dl,0x3c
  432482:	xchg   esi,eax
  432483:	(bad)  
  432484:	in     al,dx
  432485:	shl    ch,cl
  432487:	xor    bh,BYTE PTR [ebx]
  432489:	push   ecx
  43248a:	pusha  
  43248b:	imul   ebp,DWORD PTR [edi-0x49],0xffffffb2
  43248f:	loopne 0x432427
  432491:	stos   DWORD PTR es:[edi],eax
  432492:	fild   WORD PTR [ecx+esi*4+0x26c9a9e]
  432499:	or     ch,0xc9
  43249c:	sub    al,0xd
  43249e:	inc    edi
  43249f:	sub    dl,BYTE PTR [edx+0x3b]
  4324a2:	out    0xca,eax
  4324a4:	xchg   BYTE PTR [eax-0x7b],dl
  4324a7:	in     al,dx
  4324a8:	mov    edx,0xaa3e0a3a
  4324ad:	dec    ebx
  4324ae:	je     0x4324f0
  4324b0:	mov    WORD PTR [edx],cs
  4324b2:	xchg   esi,eax
  4324b3:	jne    0x43245e
  4324b5:	ins    DWORD PTR es:[edi],dx
  4324b6:	xchg   esp,eax
  4324b7:	cwde   
  4324b8:	or     al,0xf
  4324ba:	mov    ecx,cs
  4324bc:	dec    edi
  4324bd:	into   
  4324be:	push   cs
  4324bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4324c0:	inc    eax
  4324c1:	adc    al,0xc4
  4324c3:	es xchg si,ax
  4324c6:	add    al,BYTE PTR [edi-0x27f39b5e]
  4324cc:	xchg   ebx,eax
  4324cd:	retf   
  4324ce:	mov    esp,0x880cbdb3
  4324d3:	xchg   edx,eax
  4324d4:	push   ebp
  4324d5:	jmp    0xac5c:0x3601748
  4324dc:	mov    ebx,0x342d387b
  4324e1:	push   eax
  4324e2:	jg     0x4324f9
  4324e4:	shr    BYTE PTR [ecx+0x45],1
  4324e7:	out    dx,eax
  4324e8:	jl     0x432531
  4324ea:	push   es
  4324eb:	sahf   
  4324ec:	lea    edi,[eax-0x13]
  4324ef:	les    ebp,FWORD PTR [ecx-0x68]
  4324f2:	fbld   TBYTE PTR [esi]
  4324f4:	push   ds
  4324f5:	mov    ebx,DWORD PTR [edx+edx*8-0x2bb3fe89]
  4324fc:	xchg   DWORD PTR [eax+0x27d7c0c7],esp
  432502:	add    BYTE PTR [ebx-0x10],dl
  432505:	(bad)
  432509:	mov    BYTE PTR ds:0x1b4390c8,ah
  43250f:	cmp    eax,0x57168cd8
  432514:	jnp    0x43252a
  432516:	in     al,dx
  432517:	pop    ecx
  432518:	or     al,0xd3
  43251a:	mov    al,0xdb
  43251c:	icebp  
  43251d:	lock sbb al,0x87
  432520:	cwde   
  432521:	in     al,0x56
  432523:	aam    0x6a
  432525:	ror    DWORD PTR [eax],1
  432527:	sub    BYTE PTR [eax],bl
  432529:	sahf   
  43252a:	and    DWORD PTR [esi+0x1fc378f8],edx
  432530:	cmp    eax,0x39be94d9
  432535:	sbb    al,0x4b
  432537:	or     DWORD PTR [ebx+0x1cfd26ca],edx
  43253d:	mov    esp,es
  43253f:	xor    ecx,edx
  432541:	sub    BYTE PTR [edx+ebx*8],bh
  432544:	inc    edi
  432545:	sahf   
  432546:	(bad)  
  432547:	call   0xc7cf5975
  43254c:	or     dh,dl
  43254e:	int3   
  43254f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432550:	or     al,0x94
  432552:	xor    dh,BYTE PTR [edi-0x4e]
  432555:	aas    
  432556:	sub    eax,0xdf30d78f
  43255b:	pusha  
  43255c:	sub    ch,dh
  43255e:	fisttp QWORD PTR fs:[esi]
  432561:	sbb    ebx,eax
  432563:	adc    DWORD PTR [ecx],esi
  432565:	jae    0x432525
  432567:	mov    ah,0x44
  432569:	fadd   QWORD PTR [ecx-0x6c680a04]
  43256f:	loope  0x43256b
  432571:	(bad)  
  432573:	stos   BYTE PTR es:[edi],al
  432574:	and    dl,ch
  432576:	mov    esp,0x21394af7
  43257b:	push   DWORD PTR [edi+0x44]
  43257e:	popa   
  43257f:	call   0x789d5581
  432584:	push   es
  432585:	xchg   esp,eax
  432586:	push   0xa3d594cc
  43258b:	repz in eax,0x15
  43258e:	adc    BYTE PTR gs:[edi],bh
  432591:	lahf   
  432592:	das    
  432593:	repnz movs BYTE PTR es:[di],BYTE PTR ds:[si]
  432596:	push   ebx
  432597:	pusha  
  432598:	xor    al,0xf3
  43259a:	jnp    0x432522
  43259c:	add    eax,0x4dfb329e
  4325a1:	pop    eax
  4325a2:	loop   0x4325b2
  4325a4:	xor    edi,DWORD PTR [ebx-0x80]
  4325a7:	idiv   DWORD PTR [ebx-0x76]
  4325aa:	jl     0x4325b0
  4325ac:	sahf   
  4325ad:	push   eax
  4325ae:	cld    
  4325af:	shl    BYTE PTR [edx+esi*1-0x32],cl
  4325b3:	mov    al,ds:0x5ba996b2
  4325b8:	(bad)  
  4325b9:	cli    
  4325ba:	push   0x7
  4325bc:	dec    eax
  4325bd:	xor    DWORD PTR [ebp-0x21],edi
  4325c0:	rol    BYTE PTR [edi-0x47],0xb7
  4325c4:	push   ecx
  4325c5:	ins    BYTE PTR es:[edi],dx
  4325c6:	rcr    DWORD PTR [ecx-0x73],0x85
  4325ca:	mov    eax,0x90407747
  4325cf:	imul   esp,DWORD PTR [ebx-0x32],0x93d75dd8
  4325d6:	gs mov ah,0xb5
  4325d9:	into   
  4325da:	mov    esi,0x165f050
  4325df:	popf   
  4325e0:	pop    esp
  4325e1:	es js  0x4325d2
  4325e4:	retf   
  4325e5:	or     al,0x6f
  4325e7:	cs dec edx
  4325e9:	cmp    BYTE PTR [ebx-0x7cd44c9e],0x28
  4325f0:	in     al,0x93
  4325f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325f3:	mov    esp,0x57270d29
  4325f8:	and    BYTE PTR [ecx-0x24],ah
  4325fb:	enter  0xcfc8,0x4b
  4325ff:	mov    dl,0x5c
  432601:	loopne 0x4325b5
  432603:	(bad)  
  432604:	in     al,dx
  432605:	loop   0x432600
  432607:	repz xchg edx,eax
  432609:	repz rcl BYTE PTR [ebp-0x72],1
  43260d:	xchg   esp,eax
  43260e:	pushw  es
  432610:	xchg   ecx,eax
  432611:	loopne 0x432635
  432613:	(bad)  
  432614:	adc    eax,0xa090b8d4
  432619:	or     DWORD PTR ds:0x83db41c0,0xffffffdc
  432620:	fimul  DWORD PTR [eax]
  432622:	fcomi  st,st(3)
  432624:	xchg   esp,eax
  432625:	imul   esi,DWORD PTR [ebx+esi*4-0x7595c400],0xd642c335
  432630:	shr    DWORD PTR [eax+0x739331b1],1
  432636:	sbb    dh,BYTE PTR [edi]
  432638:	js     0x43265b
  43263a:	int3   
  43263b:	imul   esp,DWORD PTR [ebp+0x706a2741],0x6cf0adb7
  432645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432646:	or     BYTE PTR [ecx-0x866dacb],ch
  43264c:	adc    al,0x23
  43264e:	and    eax,0x1c25b503
  432653:	pop    esp
  432654:	add    al,0x38
  432656:	rcl    BYTE PTR [eax+0x21],1
  432659:	stc    
  43265a:	jmp    DWORD PTR ss:[eax+0x35]
  43265e:	loopne 0x432602
  432660:	cld    
  432661:	adc    DWORD PTR [esp+ebp*4-0x24],edi
  432665:	aad    0x2a
  432667:	add    al,0x81
  432669:	in     al,0x81
  43266b:	mov    ah,0x5e
  43266d:	jnp    0x4326b5
  43266f:	jl     0x432699
  432671:	sbb    BYTE PTR [ecx],ch
  432673:	stos   DWORD PTR es:[edi],eax
  432674:	xchg   ebx,eax
  432675:	into   
  432676:	in     al,0xce
  432678:	inc    edi
  432679:	dec    esp
  43267a:	call   0xad1b031d
  43267f:	nop
  432680:	jmp    DWORD PTR [eax]
  432682:	jo     0x432663
  432684:	loopne 0x432635
  432686:	xor    cl,cl
  432688:	outs   dx,DWORD PTR ds:[esi]
  432689:	mov    edx,0x7c471817
  43268e:	push   ss
  43268f:	jecxz  0x432636
  432691:	mov    al,ds:0xac3c2a32
  432696:	or     dh,BYTE PTR [edx-0x1596bdfc]
  43269c:	jge    0x4326fe
  43269e:	imul   esp,DWORD PTR [edi-0x22cd7dca],0x16
  4326a5:	and    al,BYTE PTR [ecx+eiz*2-0x5ca9ea15]
  4326ac:	call   0x16f7e3f
  4326b1:	cmc    
  4326b2:	mov    ds:0x45645925,al
  4326b7:	xor    edx,DWORD PTR [eax+0x24]
  4326ba:	or     ch,al
  4326bc:	or     edi,edi
  4326be:	aas    
  4326bf:	inc    ebx
  4326c0:	sub    eax,0xa9388174
  4326c5:	xor    eax,0xeb81b56
  4326ca:	cwde   
  4326cb:	push   es
  4326cc:	and    dh,BYTE PTR [eax+0x4bb37227]
  4326d2:	inc    edi
  4326d3:	mov    esp,0x813be5c9
  4326d8:	add    DWORD PTR [eax+0x75644e3f],ebp
  4326de:	mov    ch,BYTE PTR [esi+0x3419b2da]
  4326e4:	inc    ebp
  4326e5:	mov    BYTE PTR [esi+0x6993b1a],bh
  4326eb:	leave  
  4326ec:	sub    BYTE PTR [ecx],bl
  4326ee:	lods   al,BYTE PTR ds:[esi]
  4326ef:	push   edx
  4326f0:	mov    dl,0x53
  4326f2:	push   esp
  4326f3:	and    bh,BYTE PTR [ebx+edi*4-0x5c]
  4326f7:	shl    BYTE PTR [ebp+0x65b0a2dd],1
  4326fd:	es sbb DWORD PTR es:[eax-0x21],edi
  432702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432703:	test   al,0xb9
  432705:	arpl   WORD PTR [ebx-0x2f],bp
  432708:	addr16 pushf 
  43270a:	mov    dh,0x16
  43270c:	push   cs
  43270d:	jmp    0x7e30af79
  432712:	shl    BYTE PTR [ecx],0x1c
  432715:	rol    ecx,cl
  432717:	mov    al,ds:0xe4c4dafa
  43271c:	fcmovnu st,st(1)
  43271e:	adc    cl,0xde
  432721:	xor    DWORD PTR [ecx],edx
  432723:	cmp    eax,0xba810308
  432728:	pop    ecx
  432729:	fcomp  DWORD PTR [ebx-0x9]
  43272c:	jmp    0x96adcfe1
  432731:	pop    eax
  432732:	or     DWORD PTR [edi-0x24],0xf
  432736:	aam    0x27
  432738:	cmc    
  432739:	sbb    al,0xa2
  43273b:	sbb    eax,0xf8f15d4b
  432740:	mov    cs:0xa7839aa8,eax
  432746:	lods   eax,DWORD PTR ds:[esi]
  432747:	xchg   esi,eax
  432748:	sbb    al,0x70
  43274a:	(bad)  
  43274b:	fist   WORD PTR [esp+edi*8]
  43274e:	outs   dx,BYTE PTR ds:[esi]
  43274f:	mov    dh,BYTE PTR [eax]
  432751:	inc    eax
  432752:	and    al,0xa9
  432754:	(bad)  
  432755:	jnp    0x432720
  432757:	mov    DWORD PTR [edx+0x7],esi
  43275a:	call   0x4080cdce
  43275f:	call   0xc9ac946
  432764:	sub    al,0x48
  432766:	xchg   edx,eax
  432767:	or     bh,ah
  432769:	int    0x6e
  43276b:	mov    esi,0x2230b730
  432770:	bt     DWORD PTR [ebp-0x44],edx
  432774:	test   al,0x54
  432776:	out    0x7,eax
  432778:	icebp  
  432779:	add    eax,0xcdcb709f
  43277e:	cld    
  43277f:	xor    DWORD PTR ss:[eax+0x3a],0x5b
  432784:	mov    bh,0x6e
  432786:	and    ah,BYTE PTR [eax]
  432788:	pop    eax
  432789:	jmp    0x5d04:0x4c72c34f
  432790:	inc    esp
  432791:	mov    dh,0xc6
  432793:	aad    0xc7
  432795:	adc    eax,0x6824859f
  43279a:	scas   al,BYTE PTR es:[edi]
  43279b:	outs   dx,DWORD PTR ds:[esi]
  43279c:	push   edx
  43279d:	mov    WORD PTR [ecx-0x7],?
  4327a0:	out    0xb2,eax
  4327a2:	mov    WORD PTR ds:0x22440982,ss
  4327a8:	push   edx
  4327a9:	bnd jns 0x4327e0
  4327ac:	imul   esp,DWORD PTR [esi+0xd201e2a],0xf
  4327b3:	and    DWORD PTR [eax+0x58],ebx
  4327b6:	fucomi st,st(4)
  4327b8:	xchg   edx,eax
  4327b9:	push   ebp
  4327ba:	xlat   BYTE PTR ds:[ebx]
  4327bb:	adc    esi,DWORD PTR [edi]
  4327bd:	jl     0x43280d
  4327bf:	lds    ebx,FWORD PTR [edx+0x69]
  4327c2:	js     0x43281e
  4327c4:	sahf   
  4327c5:	inc    ebp
  4327c6:	mov    al,ds:0x9e02061e
  4327cb:	pushf  
  4327cc:	jg     0x432833
  4327ce:	xchg   edi,eax
  4327cf:	dec    eax
  4327d0:	pop    edx
  4327d1:	push   0xd0fc1b23
  4327d6:	jns    0x432791
  4327d8:	ins    BYTE PTR es:[edi],dx
  4327d9:	push   cs
  4327da:	pop    eax
  4327db:	cmp    dh,BYTE PTR [ebx+0x5237c42d]
  4327e1:	nop
  4327e2:	sub    DWORD PTR [edx+0x26],ebx
  4327e5:	add    ebp,DWORD PTR [esi-0x4beff8e8]
  4327eb:	orps   xmm4,xmm4
  4327ee:	stos   BYTE PTR es:[edi],al
  4327ef:	lods   al,BYTE PTR ds:[esi]
  4327f0:	jns    0x4327e6
  4327f2:	retf   0x2dd8
  4327f5:	xchg   DWORD PTR [edx*2+0xe15058a],esp
  4327fc:	sbb    BYTE PTR [eax+0x2940447b],0x38
  432803:	jp     0x432786
  432805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432806:	xchg   esp,eax
  432807:	retf   0x8fd5
  43280a:	into   
  43280b:	in     al,dx
  43280c:	hlt    
  43280d:	gs enter 0xe99e,0x3c
  432812:	adc    DWORD PTR [esi],edi
  432814:	jne    0x432865
  432816:	jmp    0x432804
  432818:	rcl    BYTE PTR [eax-0x3d],0xb2
  43281c:	(bad)  
  43281d:	dec    edx
  43281e:	ins    DWORD PTR es:[edi],dx
  43281f:	dec    edi
  432820:	adc    BYTE PTR [edx+0x4d9fd0fc],bl
  432826:	ins    BYTE PTR es:[edi],dx
  432827:	leave  
  432828:	xlat   BYTE PTR ds:[ebx]
  432829:	mov    eax,0x25d8d26f
  43282e:	ins    DWORD PTR es:[edi],dx
  43282f:	(bad)  
  432830:	sbb    DWORD PTR [edx-0x320f6824],eax
  432836:	lock adc eax,0x57b05d
  43283c:	les    ebp,FWORD PTR ds:0xaa02519
  432842:	pusha  
  432843:	mov    dh,0x24
  432845:	push   ebp
  432846:	dec    edx
  432847:	shr    BYTE PTR [ecx+0x70c0f908],1
  43284d:	int3   
  43284e:	mov    DWORD PTR [esi],esp
  432850:	xor    BYTE PTR [ecx-0x71],0x6d
  432854:	sub    eax,0x4492f010
  432859:	push   0x7c886c97
  43285e:	rcl    BYTE PTR [esi+ebp*8],0x68
  432862:	pop    ebx
  432863:	sub    ch,BYTE PTR [ecx-0x58]
  432866:	sub    DWORD PTR [edi+0x38],ebp
  432869:	sti    
  43286a:	popf   
  43286b:	add    DWORD PTR [edx-0x14],edx
  43286e:	sub    BYTE PTR [eax+0x6e1d5c23],ch
  432874:	sub    edx,DWORD PTR [eax-0x7]
  432877:	test   BYTE PTR [ebx],dl
  432879:	add    eax,DWORD PTR [edi+edx*4]
  43287c:	and    eax,0x1a5f8129
  432881:	mov    DWORD PTR [eax+ebp*1],esi
  432884:	daa    
  432885:	mov    esi,0xcac9e083
  43288a:	sbb    DWORD PTR [ebx],ecx
  43288c:	dec    esp
  43288d:	lods   eax,DWORD PTR ds:[esi]
  43288e:	iret   
  43288f:	and    ebp,ecx
  432891:	xor    al,0x65
  432893:	jl     0x4328d3
  432895:	jo     0x4328df
  432897:	test   eax,0xebbf1639
  43289c:	inc    ebx
  43289d:	push   ecx
  43289e:	sbb    BYTE PTR [ecx-0x5e6ec23e],al
  4328a4:	xchg   esp,eax
  4328a5:	das    
  4328a6:	cmp    DWORD PTR [eax+eiz*2],0x17
  4328aa:	or     edi,esp
  4328ac:	js     0x43289a
  4328ae:	ins    BYTE PTR es:[edi],dx
  4328af:	or     esp,DWORD PTR [eax+0x6f]
  4328b2:	std    
  4328b3:	scas   eax,DWORD PTR es:[edi]
  4328b4:	push   cs
  4328b5:	adc    dl,bl
  4328b7:	loope  0x43290b
  4328b9:	test   cl,bl
  4328bb:	inc    ebp
  4328bc:	xor    dh,al
  4328be:	gs pop ebp
  4328c0:	lods   eax,DWORD PTR ds:[esi]
  4328c1:	jl     0x43286b
  4328c3:	or     DWORD PTR [edx+0x48],esp
  4328c6:	xchg   ebp,eax
  4328c7:	lahf   
  4328c8:	arpl   WORD PTR [edi-0x7],si
  4328cb:	push   eax
  4328cc:	test   eax,0xaff1ff17
  4328d1:	xchg   ebx,eax
  4328d2:	(bad)  ds:[esi+edx*2-0x27]
  4328d7:	jo     0x4328cf
  4328d9:	mov    ds:0x98ea7075,eax
  4328de:	and    ebx,DWORD PTR [edi-0x5c]
  4328e1:	mov    al,ds:0x350fa0a6
  4328e6:	mov    esp,0xeb4b5b6e
  4328eb:	or     al,0x88
  4328ed:	add    ebx,edx
  4328ef:	loopne 0x4328c8
  4328f1:	in     eax,0x8f
  4328f3:	out    dx,eax
  4328f4:	popa   
  4328f5:	daa    
  4328f6:	loope  0x432976
  4328f8:	mov    BYTE PTR [esi],ch
  4328fa:	mov    esp,0x99a6efff
  4328ff:	lds    esp,FWORD PTR [edx-0x54]
  432902:	ss dec esi
  432904:	push   0x363c193f
  432909:	mov    ebx,0xf7f97fd0
  43290e:	dec    ecx
  43290f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432910:	sub    DWORD PTR [ebx],ebp
  432912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432913:	hlt    
  432914:	jmp    0x4328e4
  432916:	cmp    al,0x80
  432918:	cdq    
  432919:	mov    ecx,0x949c48f2
  43291e:	enter  0x25aa,0xc2
  432922:	cli    
  432923:	inc    eax
  432924:	cli    
  432925:	shl    ah,0x4b
  432928:	adc    ecx,0xdc0e9214
  43292e:	in     al,0x6
  432930:	ds jns 0x432993
  432933:	push   eax
  432934:	inc    esp
  432935:	fmul   DWORD PTR [edx]
  432937:	or     BYTE PTR [ecx+0x23],dl
  43293a:	cmp    al,0xab
  43293c:	lods   eax,DWORD PTR ds:[esi]
  43293d:	pushf  
  43293e:	dec    ebx
  43293f:	and    ebp,DWORD PTR [edi+esi*4]
  432942:	rep outs dx,BYTE PTR ds:[esi]
  432944:	daa    
  432945:	jae    0x4329ac
  432947:	stc    
  432948:	scas   eax,DWORD PTR es:[edi]
  432949:	aam    0xf1
  43294b:	mov    ds:0x7137e3e9,al
  432950:	fsub   QWORD PTR [eax+edi*8+0x6c]
  432954:	addr16 jno 0x432933
  432957:	test   DWORD PTR [ebp+0x311cb843],eax
  43295d:	sbb    ebx,0x7debe3dd
  432963:	ret    
  432964:	inc    eax
  432965:	sti    
  432966:	jp     0x4329cc
  432968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432969:	pop    esp
  43296a:	jns    0x432924
  43296c:	test   al,0xe8
  43296e:	or     al,BYTE PTR [esi+0x39]
  432971:	adc    edx,ebx
  432973:	adc    ebx,DWORD PTR [esi+ecx*8]
  432976:	or     al,0xd1
  432978:	sti    
  432979:	enter  0x95f3,0x89
  43297d:	xor    DWORD PTR [bx+si],esi
  432980:	jns    0x432905
  432982:	fisubr DWORD PTR [ebp-0x3f]
  432985:	pop    edx
  432986:	dec    DWORD PTR [ecx]
  432988:	push   esp
  432989:	aaa    
  43298a:	sbb    DWORD PTR [ebp-0x75],esp
  43298d:	xor    cl,cl
  43298f:	out    0xc0,al
  432991:	js     0x4329a1
  432993:	mov    esi,0x4487d578
  432998:	xor    edi,esi
  43299a:	and    BYTE PTR [eax-0x2a],dl
  43299d:	pop    ebx
  43299e:	imul   DWORD PTR [edi]
  4329a0:	repnz (bad) 
  4329a2:	nop
  4329a3:	inc    esp
  4329a4:	lahf   
  4329a5:	in     eax,0x5
  4329a7:	push   edx
  4329a8:	pop    ebx
  4329a9:	cwde   
  4329aa:	or     bh,BYTE PTR ds:0xdbe41c68
  4329b0:	ret    
  4329b1:	sahf   
  4329b2:	inc    ecx
  4329b3:	fst    DWORD PTR [ebx+0x951888c]
  4329b9:	popa   
  4329ba:	call   0xbd2f:0x34284af2
  4329c1:	sbb    esp,ebp
  4329c3:	pop    ebx
  4329c4:	or     esp,DWORD PTR [edx]
  4329c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4329c7:	pop    eax
  4329c8:	pop    ebx
  4329c9:	cmp    eax,0x32cee4bb
  4329ce:	out    0x90,eax
  4329d0:	jl     0x43296a
  4329d2:	rol    DWORD PTR [ecx+0x64],0x72
  4329d6:	sub    DWORD PTR [ebp+0x2e],esp
  4329d9:	mov    al,ds:0xa3fa0328
  4329de:	dec    eax
  4329df:	dec    ebp
  4329e0:	and    al,0xd3
  4329e2:	les    esp,FWORD PTR [ebx-0x4d026221]
  4329e8:	icebp  
  4329e9:	enter  0x6ced,0x57
  4329ed:	and    DWORD PTR [edi-0x40417760],ecx
  4329f3:	fst    DWORD PTR [eax+0x403eb8c8]
  4329f9:	mov    eax,ds:0xb4e4be4e
  4329fe:	cmp    al,0x65
  432a00:	push   0x46
  432a02:	fdivr  st,st(3)
  432a04:	fs adc eax,ebx
  432a07:	stos   DWORD PTR es:[edi],eax
  432a08:	or     DWORD PTR [esp+ebx*1+0x7a],eax
  432a0c:	je     0x432a7d
  432a0e:	cdq    
  432a0f:	cld    
  432a10:	jmp    0x432a8f
  432a12:	outs   dx,BYTE PTR ds:[esi]
  432a13:	fsub   st(1),st
  432a15:	mov    dl,0x37
  432a17:	stos   DWORD PTR es:[edi],eax
  432a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432a19:	out    dx,al
  432a1a:	and    al,0x3c
  432a1c:	sbb    ah,bl
  432a1e:	test   ebx,ecx
  432a20:	push   ss
  432a21:	enter  0x6d39,0xf3
  432a25:	sbb    BYTE PTR [ecx+0x59],0x71
  432a29:	call   0xd184:0xe08f74ec
  432a30:	cmc    
  432a31:	jno    0x432a4c
  432a33:	adc    cl,bl
  432a35:	adc    DWORD PTR [eax-0x47139ea],esi
  432a3b:	test   al,0xb8
  432a3d:	and    BYTE PTR [edx-0x6ff870d0],dl
  432a43:	sub    DWORD PTR [ebx],ebp
  432a45:	fmul   QWORD PTR [eax+0x71d3a026]
  432a4b:	sbb    bh,BYTE PTR [edi+0xd520083]
  432a51:	ja     0x432a44
  432a53:	int3   
  432a54:	mov    ebx,0xaf24a6fd
  432a59:	sbb    eax,0x3455b129
  432a5e:	aaa    
  432a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a60:	dec    eax
  432a61:	and    eax,0xfaf453e4
  432a66:	push   esp
  432a67:	test   al,0x2c
  432a69:	lock dec edi
  432a6b:	or     DWORD PTR [eax],edi
  432a6d:	fcom   DWORD PTR [ecx+esi*8]
  432a70:	lds    ebx,FWORD PTR [esi]
  432a72:	adc    al,0xa6
  432a74:	or     ecx,ebp
  432a76:	xor    al,0x12
  432a78:	jo     0x432a20
  432a7a:	scas   al,BYTE PTR es:[edi]
  432a7b:	cmp    BYTE PTR ds:0xcaf40e67,dh
  432a81:	mov    BYTE PTR [eax-0x6849a3a0],0x13
  432a88:	add    al,0x28
  432a8a:	push   eax
  432a8b:	and    BYTE PTR [eax],ch
  432a8d:	add    al,0xf3
  432a8f:	jg     0x432ae1
  432a91:	lods   eax,DWORD PTR ds:[esi]
  432a92:	test   eax,0x28332f96
  432a97:	jle    0x432abe
  432a99:	sbb    dl,BYTE PTR [edi]
  432a9b:	loope  0x432a56
  432a9d:	dec    edi
  432a9e:	ins    DWORD PTR es:[edi],dx
  432a9f:	dec    esp
  432aa0:	aad    0xe8
  432aa2:	(bad)  
  432aa4:	and    DWORD PTR [esi],esi
  432aa6:	jbe    0x432a81
  432aa8:	jo     0x432a52
  432aaa:	aas    
  432aab:	in     al,dx
  432aac:	sbb    ecx,esp
  432aae:	jle    0x432b0e
  432ab0:	ficom  DWORD PTR [ebx+eax*2+0xea487b5]
  432ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ab8:	test   esp,esp
  432aba:	cmp    al,0x4b
  432abc:	out    dx,al
  432abd:	sahf   
  432abe:	jl     0x432b28
  432ac0:	popa   
  432ac1:	cwde   
  432ac2:	inc    edi
  432ac3:	add    BYTE PTR [eax],al
  432ac5:	add    BYTE PTR [eax],al
  432ac7:	add    bl,dl
  432ac9:	adc    edx,edx
  432acb:	cmp    edx,DWORD PTR [ecx+0x9]
  432ace:	add    BYTE PTR [eax],al
  432ad0:	add    BYTE PTR [eax],al
  432ad2:	add    BYTE PTR [eax],al
  432ad4:	push   ecx
  432ad5:	or     DWORD PTR [eax],eax
  432ad7:	add    BYTE PTR [edx+0x0],al
  432ada:	es jl  0x432add
  432add:	add    dh,BYTE PTR [esi]
  432adf:	or     BYTE PTR [eax],al
  432ae1:	add    ah,al
  432ae3:	inc    ebp
  432ae4:	add    BYTE PTR [ecx+0x1b],dh
  432ae7:	pop    ecx
  432ae8:	and    al,0xc4
  432aea:	out    dx,eax
  432aeb:	repnz push ecx
  432aed:	and    al,0xe
  432aef:	inc    edi
  432af0:	push   0x51
  432af2:	loopne 0x432b37
  432af4:	lock dec ax
  432af7:	or     BYTE PTR [eax],ah
  432af9:	mov    DWORD PTR [ebp-0x4f],0x6c89e0e7
  432b00:	popf   
  432b01:	mov    ds:0x8fc06a97,al
  432b06:	cmp    eax,0x2d1790b2
  432b0b:	outs   dx,BYTE PTR ds:[esi]
  432b0c:	push   esi
  432b0d:	xchg   DWORD PTR [ebx+0xf],esi
  432b10:	nop
  432b11:	cmp    BYTE PTR [esi],bl
  432b13:	cmp    al,0xee
  432b15:	xchg   edx,eax
  432b16:	pop    ebx
  432b17:	or     al,0x47
  432b19:	fistp  WORD PTR [edx+edi*1+0x53]
  432b1d:	(bad)  
  432b1e:	dec    eax
  432b1f:	xor    BYTE PTR [eax+0x29809761],0x5c
  432b26:	sbb    eax,0x23ca4f5c
  432b2b:	adc    DWORD PTR [esp+ebp*2-0x4c0690f6],esp
  432b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432b33:	pop    esp
  432b34:	(bad)  [esi+eax*2+0x62]
  432b38:	xchg   esi,eax
  432b39:	or     dh,0x9e
  432b3c:	mov    DWORD PTR [eax+0x70],edi
  432b3f:	xchg   al,dh
  432b41:	push   ecx
  432b42:	mov    ds:0x44e24755,al
  432b47:	xchg   esp,eax
  432b48:	mov    esi,0x9f009e1d
  432b4d:	sbb    eax,0x88b8850a
  432b52:	mov    dh,0xab
  432b54:	ins    BYTE PTR es:[edi],dx
  432b55:	popa   
  432b56:	xchg   edi,eax
  432b57:	gs cmp bl,ah
  432b5a:	pop    esp
  432b5b:	icebp  
  432b5c:	fwait
  432b5d:	nop
  432b5e:	xor    eax,0x84956735
  432b63:	fdiv   st,st(7)
  432b65:	pusha  
  432b66:	loopne 0x432bc6
  432b68:	mov    dh,0xb5
  432b6a:	lds    ebp,FWORD PTR [eax-0x346bd30d]
  432b70:	les    ebp,FWORD PTR [ebx+0x7accf5ac]
  432b76:	dec    ecx
  432b77:	xchg   edi,eax
  432b78:	lods   eax,DWORD PTR ds:[esi]
  432b79:	mov    esi,0xf05a131b
  432b7e:	neg    DWORD PTR [esi+0x78d276b]
  432b84:	push   edi
  432b85:	scas   eax,DWORD PTR es:[edi]
  432b86:	adc    al,0x90
  432b88:	push   edi
  432b89:	outs   dx,DWORD PTR ds:[esi]
  432b8a:	out    dx,al
  432b8b:	xchg   BYTE PTR [eax+0x3dbcb967],bl
  432b91:	mov    ah,0x53
  432b93:	jl     0x432be0
  432b95:	lock rol ebp,1
  432b98:	loopne 0x432b55
  432b9a:	inc    esi
  432b9b:	inc    esi
  432b9c:	mov    BYTE PTR [edx+esi*2+0x7e],ch
  432ba0:	cli    
  432ba1:	add    al,0x86
  432ba3:	mov    esi,0x7faa0bc7
  432ba8:	ret    
  432ba9:	hlt    
  432baa:	sub    BYTE PTR [ecx-0x40],ah
  432bad:	lock adc BYTE PTR [eax],bl
  432bb0:	sub    eax,0xbdd032c2
  432bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432bb6:	pop    edx
  432bb7:	mov    DWORD PTR [eax],esi
  432bb9:	push   0x4f
  432bbb:	sub    al,0xf4
  432bbd:	pop    ds
  432bbe:	icebp  
  432bbf:	dec    ecx
  432bc0:	in     eax,dx
  432bc1:	mov    ebp,0x1853ee18
  432bc6:	aaa    
  432bc7:	sbb    DWORD PTR [edi+0x25],0xa1b8bc65
  432bce:	cmp    al,0x62
  432bd0:	or     DWORD PTR [ebx+0x34],eax
  432bd3:	or     eax,DWORD PTR [edi+0x7760b7bf]
  432bd9:	hlt    
  432bda:	cmp    eax,0x2375d755
  432bdf:	lock or BYTE PTR [ebx-0x71],dh
  432be3:	or     ah,BYTE PTR [ecx-0x2f]
  432be6:	call   0x49fc:0x232c72a7
  432bed:	inc    esp
  432bee:	mov    ebp,0x501acc92
  432bf3:	and    bh,dl
  432bf5:	test   al,0x73
  432bf7:	imul   ebp,DWORD PTR [edi],0x58742704
  432bfd:	or     eax,0xc880ce67
  432c02:	cmc    
  432c03:	in     eax,0x1c
  432c05:	mov    esp,DWORD PTR [eax+0x2b]
  432c08:	cmc    
  432c09:	jns    0x432bdd
  432c0b:	pop    ss
  432c0c:	push   ss
  432c0d:	inc    eax
  432c0e:	loop   0x432c5a
  432c10:	imul   ebp,DWORD PTR [esi+0x5e0ae584],0x64
  432c17:	adc    al,BYTE PTR ds:0x3008dc65
  432c1d:	sub    BYTE PTR [esi-0x70789f78],bh
  432c23:	or     bl,BYTE PTR [ebp-0x1e]
  432c26:	fxch   st(0)
  432c28:	lods   al,BYTE PTR ds:[esi]
  432c29:	or     BYTE PTR [edi],bh
  432c2b:	sbb    ch,bh
  432c2d:	or     al,0xa9
  432c30:	cmc    
  432c31:	push   esp
  432c32:	dec    esi
  432c33:	mov    esi,0x64b598f7
  432c38:	xor    esp,DWORD PTR [ebx]
  432c3a:	js     0x432be0
  432c3c:	mov    al,0xe2
  432c3e:	pop    edx
  432c3f:	test   eax,0x9caf3b17
  432c44:	jle    0x432c16
  432c46:	ins    DWORD PTR es:[edi],dx
  432c47:	scas   eax,DWORD PTR es:[edi]
  432c48:	out    0xc6,eax
  432c4a:	mov    bl,BYTE PTR [eax+eax*8+0x70]
  432c4e:	imul   esp,DWORD PTR [edx],0x2ddc3486
  432c54:	or     eax,0x4fb91fe4
  432c59:	cli    
  432c5a:	sbb    BYTE PTR [esi+0x428cebb7],al
  432c60:	or     al,cl
  432c62:	call   0x12b0:0x76070130
  432c69:	nop
  432c6a:	arpl   WORD PTR [esi],si
  432c6c:	jo     0x432c71
  432c6e:	mov    cl,0x87
  432c70:	aam    0xf2
  432c72:	test   al,0x15
  432c74:	adc    eax,0xa71b3d3
  432c79:	clc    
  432c7a:	ins    BYTE PTR es:[edi],dx
  432c7b:	or     al,0xe8
  432c7d:	repnz ins DWORD PTR es:[edi],dx
  432c7f:	jbe    0x432c5d
  432c81:	lods   al,BYTE PTR ds:[esi]
  432c82:	mov    al,ds:0x3e1e35bf
  432c87:	je     0x432c6e
  432c89:	cmp    cl,BYTE PTR [edi-0x3c]
  432c8c:	pop    ds
  432c8d:	pop    esp
  432c8e:	sub    ebp,ecx
  432c90:	into   
  432c91:	push   edi
  432c92:	mov    ecx,ebp
  432c94:	call   0x83b27934
  432c99:	and    DWORD PTR [edi-0x38f38805],ebx
  432c9f:	pop    esp
  432ca0:	xchg   ecx,eax
  432ca1:	xor    esi,DWORD PTR [edx+ebx*1]
  432ca4:	lahf   
  432ca5:	sub    BYTE PTR [eax],dh
  432ca7:	ret    0x82d4
  432caa:	out    0xed,al
  432cac:	sbb    al,BYTE PTR [edx-0x5cb827bc]
  432cb2:	adc    al,0xb0
  432cb4:	test   ah,ch
  432cb6:	xchg   edx,eax
  432cb7:	sub    eax,0x979b67fc
  432cbc:	adc    edi,DWORD PTR [edi+edx*1-0x67]
  432cc0:	bound  esp,QWORD PTR [eax]
  432cc2:	and    bh,bl
  432cc4:	xchg   ecx,eax
  432cc5:	pop    eax
  432cc6:	fdiv   QWORD PTR [ebp+0x29444a80]
  432ccc:	xor    BYTE PTR [ebx+0x73],dl
  432ccf:	or     dl,cl
  432cd1:	add    al,bh
  432cd3:	in     al,dx
  432cd4:	sbb    dh,BYTE PTR ds:0x5adbb796
  432cda:	mov    ebp,0xb0631070
  432cdf:	addr16 cmp eax,0x168aeb2d
  432ce5:	xor    al,0xbd
  432ce7:	outs   dx,BYTE PTR ds:[esi]
  432ce8:	in     al,0x90
  432cea:	xor    al,0x54
  432cec:	loop   0x432cf9
  432cee:	pop    eax
  432cef:	mov    cl,0xe
  432cf1:	ror    esi,1
  432cf3:	xor    eax,0x7cc3570d
  432cf8:	mov    eax,0xf0cbaba6
  432cfd:	or     esp,edx
  432cff:	aam    0x24
  432d01:	icebp  
  432d02:	xlat   BYTE PTR ds:[ebx]
  432d03:	hlt    
  432d04:	int    0x0
  432d06:	pop    edi
  432d07:	retf   
  432d08:	sub    ecx,DWORD PTR [eax-0x2]
  432d0b:	lods   al,BYTE PTR ds:[esi]
  432d0c:	out    0xc,eax
  432d0e:	out    0x29,al
  432d10:	and    DWORD PTR [edx],esi
  432d12:	ins    BYTE PTR es:[edi],dx
  432d13:	neg    BYTE PTR [edi-0x2e36cc1]
  432d19:	imul   DWORD PTR [edx]
  432d1b:	nop
  432d1c:	mov    esp,DWORD PTR [ecx]
  432d1e:	ror    DWORD PTR [ecx],0xd
  432d21:	std    
  432d22:	nop
  432d23:	sub    BYTE PTR [edi+eax*8-0x7662702],dh
  432d2a:	(bad)  
  432d2b:	icebp  
  432d2c:	loop   0x432d8a
  432d2e:	das    
  432d2f:	pop    ebx
  432d30:	je     0x432d32
  432d32:	enter  0x6fcc,0xce
  432d36:	sub    BYTE PTR [ebx],0x85
  432d39:	xlat   BYTE PTR ds:[ebx]
  432d3a:	push   ds
  432d3b:	and    BYTE PTR [eax],al
  432d3d:	mov    ebp,0xf4f3a41b
  432d42:	stc    
  432d43:	lods   al,BYTE PTR ds:[esi]
  432d44:	or     ebx,DWORD PTR [eax*8-0x755f3750]
  432d4b:	cs and eax,0xbc6b5922
  432d51:	jo     0x432d20
  432d53:	mov    cl,0xd9
  432d55:	add    ebx,DWORD PTR [ebp-0x6bc4a66c]
  432d5b:	aad    0x14
  432d5d:	pop    edx
  432d5e:	lahf   
  432d5f:	push   ss
  432d60:	mov    cl,0x80
  432d62:	jecxz  0x432d1c
  432d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432d65:	jge    0x432d9e
  432d67:	or     BYTE PTR [edx+0x75],cl
  432d6a:	retf   
  432d6b:	out    dx,al
  432d6c:	fdivr  st(6),st
  432d6e:	mov    dh,BYTE PTR ds:0x8786ac43
  432d74:	mov    ds:0x5ee9e200,al
  432d79:	add    eax,0x92c0c74e
  432d7e:	test   al,0xa4
  432d80:	dec    edx
  432d81:	pop    esp
  432d82:	or     esi,ebx
  432d84:	shl    BYTE PTR [esi],0x49
  432d87:	int3   
  432d88:	repz aam 0xca
  432d8b:	imul   esi,eax,0xffffff81
  432d8e:	and    al,0x25
  432d90:	lock in eax,dx
  432d92:	jnp    0x432dd5
  432d94:	push   es
  432d95:	and    eax,0x14256069
  432d9a:	pop    ecx
  432d9b:	test   DWORD PTR [ecx],eax
  432d9d:	cmp    DWORD PTR [esi],esp
  432d9f:	add    esp,DWORD PTR [ebx-0x1d3b436c]
  432da5:	push   esp
  432da6:	mov    fs,WORD PTR [esi-0x1fa90692]
  432dac:	xchg   edi,eax
  432dad:	(bad)  
  432dae:	stc    
  432daf:	mov    edx,0x94499d38
  432db4:	add    al,0x42
  432db6:	xor    DWORD PTR [ecx+edx*1-0x1b],ebx
  432dba:	jmp    0x432d97
  432dbc:	pop    ebx
  432dbd:	sub    dh,cl
  432dbf:	adc    ebx,DWORD PTR [ebx]
  432dc1:	sar    ecx,0x76
  432dc4:	retf   
  432dc5:	jb     0x432e13
  432dc7:	idiv   edi
  432dc9:	retfw  0x994f
  432dcd:	or     BYTE PTR [edi],bl
  432dcf:	hlt    
  432dd0:	sbb    al,0xbe
  432dd2:	iret   
  432dd3:	jp     0x432e46
  432dd5:	mov    ah,0x2e
  432dd7:	lds    ebx,FWORD PTR [eax]
  432dd9:	jge    0x432dd0
  432ddb:	je     0x432e4b
  432ddd:	(bad)  
  432dde:	ret    
  432ddf:	mov    DWORD PTR [ecx-0x2cff10c4],esp
  432de5:	xchg   DWORD PTR [ecx+0x60be093a],esp
  432deb:	outs   dx,BYTE PTR ds:[esi]
  432dec:	scas   al,BYTE PTR es:[edi]
  432ded:	add    BYTE PTR [edi+0x300dedf5],al
  432df3:	test   ch,bh
  432df5:	jne    0x432e49
  432df7:	aam    0xd3
  432df9:	test   BYTE PTR [ebx-0x5],dh
  432dfc:	sub    al,0x83
  432dfe:	aaa    
  432dff:	jecxz  0x432e7f
  432e01:	test   al,0x20
  432e03:	cmp    esi,esp
  432e05:	push   eax
  432e06:	imul   ebp,DWORD PTR [ecx+0x66],0xfffffff0
  432e0a:	xor    BYTE PTR [ecx+0x717448b6],0x4b
  432e11:	aad    0x4d
  432e13:	inc    ecx
  432e14:	xor    esi,DWORD PTR [edx]
  432e16:	inc    eax
  432e17:	cwde   
  432e18:	sbb    al,0x8
  432e1a:	xor    al,0xbd
  432e1c:	pop    edi
  432e1d:	mov    al,ds:0x16403944
  432e22:	cdq    
  432e23:	jp     0x432e53
  432e25:	int3   
  432e26:	popa   
  432e27:	mov    al,ds:0x899464de
  432e2c:	ins    BYTE PTR es:[edi],dx
  432e2d:	sub    eax,0x739529b9
  432e32:	mov    BYTE PTR [esi-0x5cb4c6aa],bh
  432e38:	xor    al,0x40
  432e3a:	pop    ds
  432e3b:	lods   al,BYTE PTR ds:[esi]
  432e3c:	jb     0x432e48
  432e3e:	xlat   BYTE PTR ds:[ebx]
  432e3f:	imul   eax,esi,0xd08a2a0e
  432e45:	inc    BYTE PTR [edi-0x35]
  432e48:	outs   dx,BYTE PTR ds:[esi]
  432e49:	dec    esp
  432e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432e4b:	retf   0x786a
  432e4e:	add    DWORD PTR [esi-0x2a],eax
  432e51:	jecxz  0x432e6e
  432e53:	nop
  432e54:	mov    edi,0x731e9c39
  432e59:	mov    eax,0x35b24379
  432e5e:	rol    eax,cl
  432e60:	jno    0x432ea6
  432e62:	ficom  WORD PTR [ebx-0x3236a1c2]
  432e68:	in     al,0xd
  432e6a:	xchg   BYTE PTR [ecx*2+0x60801055],ch
  432e71:	mov    ebp,?
  432e73:	outs   dx,BYTE PTR ds:[esi]
  432e74:	popa   
  432e75:	std    
  432e76:	pop    es
  432e77:	pop    eax
  432e78:	ret    0xb09d
  432e7b:	jne    0x432ee9
  432e7d:	xchg   esi,eax
  432e7e:	lock mov es,WORD PTR [esp+edi*2-0x4f]
  432e83:	aam    0x33
  432e85:	and    al,0x77
  432e87:	repnz mov dl,0x62
  432e8a:	div    cl
  432e8c:	clc    
  432e8d:	sub    BYTE PTR [esi],ch
  432e8f:	aad    0x5d
  432e91:	ss mov esi,0xab1c94e5
  432e97:	sahf   
  432e98:	add    ch,BYTE PTR [edx+0x3fd0f2e3]
  432e9e:	les    edx,FWORD PTR [ebp-0x4f4c43fd]
  432ea4:	or     al,0x3d
  432ea6:	push   edx
  432ea7:	call   0x3fb4ed0b
  432eac:	mov    ds:0xcf72d13,eax
  432eb1:	in     al,0xdb
  432eb3:	mov    edi,eax
  432eb5:	push   0xffffff95
  432eb7:	out    dx,eax
  432eb8:	inc    esi
  432eb9:	xor    BYTE PTR [ecx-0x40cbc9b4],bh
  432ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ec0:	jne    0x432f0a
  432ec2:	fmul   DWORD PTR [ebp+edx*1-0xb]
  432ec6:	jmp    0x4efc:0x5afad93c
  432ecd:	dec    ebx
  432ece:	aam    0xbe
  432ed0:	scas   al,BYTE PTR es:[edi]
  432ed1:	or     eax,DWORD PTR ds:0x1db02061
  432ed7:	daa    
  432ed8:	cmp    bl,ch
  432eda:	inc    edx
  432edb:	push   bx
  432edd:	inc    esp
  432ede:	jne    0x432e7a
  432ee0:	sti    
  432ee1:	in     eax,dx
  432ee2:	xchg   ebp,eax
  432ee3:	dec    eax
  432ee4:	dec    edi
  432ee5:	sbb    ch,BYTE PTR [eax-0x5b]
  432ee8:	pop    edx
  432ee9:	cmp    dh,BYTE PTR [edx+ebp*2]
  432eec:	call   0x1c44:0x1310e7c4
  432ef3:	out    dx,al
  432ef4:	cmp    bl,BYTE PTR [eax]
  432ef6:	mov    gs,ebp
  432ef8:	xor    al,0xae
  432efa:	rcl    BYTE PTR [eax+eax*8-0x61b02f1c],0x58
  432f02:	nop
  432f03:	ret    
  432f04:	jno    0x432f61
  432f06:	adc    ebp,esp
  432f08:	pop    edx
  432f09:	xchg   ecx,eax
  432f0a:	jl     0x432f56
  432f0c:	stos   BYTE PTR es:[edi],al
  432f0d:	pusha  
  432f0e:	lahf   
  432f0f:	(bad)  
  432f10:	cmc    
  432f11:	imul   esi,DWORD PTR [eax+eiz*4+0x1807e4c2],0x4c
  432f19:	inc    eax
  432f1a:	ret    
  432f1b:	mov    ch,0x48
  432f1d:	pop    esp
  432f1e:	ficomp DWORD PTR [edx+0x58a1f492]
  432f24:	or     ch,BYTE PTR [esp+edx*8-0x37]
  432f28:	stos   DWORD PTR es:[edi],eax
  432f29:	ror    DWORD PTR [ecx],cl
  432f2b:	mov    gs,WORD PTR [ebx]
  432f2d:	addr16 nop
  432f2f:	adc    edi,DWORD PTR [edi]
  432f31:	cwde   
  432f32:	or     eax,0x176cb6c2
  432f37:	mov    ah,0xc1
  432f39:	cmp    esp,DWORD PTR [ebx+0x1495b4a3]
  432f3f:	inc    edi
  432f40:	pop    esp
  432f41:	mov    DWORD PTR [eax-0x723c3ce2],edx
  432f47:	jmp    0x432ef7
  432f49:	add    ah,0x33
  432f4c:	pop    ds
  432f4d:	inc    esp
  432f4e:	xchg   ebp,eax
  432f4f:	(bad)  
  432f53:	ins    DWORD PTR es:[edi],dx
  432f54:	sub    BYTE PTR [ecx+0x46],0xe1
  432f58:	enter  0xc436,0xc8
  432f5c:	inc    DWORD PTR [ebx+0x5]
  432f5f:	and    esi,ecx
  432f61:	inc    ecx
  432f62:	lock sub ah,0x76
  432f66:	pop    ecx
  432f67:	mov    ebp,0xb394b192
  432f6c:	add    DWORD PTR [edx+eax*2+0x1669b087],edx
  432f73:	std    
  432f74:	cmp    eax,0x70b5b845
  432f79:	mov    dh,0x4f
  432f7b:	mov    ecx,0xdc83d24a
  432f80:	xchg   esp,eax
  432f81:	push   ecx
  432f82:	scas   al,BYTE PTR es:[edi]
  432f83:	fwait
  432f84:	push   ebx
  432f85:	mov    ecx,0xce006710
  432f8a:	popf   
  432f8b:	ret    
  432f8c:	aam    0x26
  432f8e:	mov    gs,esp
  432f90:	fsubr  DWORD PTR [eax-0x215a3d70]
  432f96:	jecxz  0x432f52
  432f98:	push   ebx
  432f99:	cdq    
  432f9a:	int3   
  432f9b:	iret   
  432f9c:	sbb    al,0x8d
  432f9e:	mul    DWORD PTR [edi]
  432fa0:	mov    ah,0x9
  432fa2:	sbb    eax,0xdf5aa5f0
  432fa7:	into   
  432fa8:	push   esp
  432fa9:	cdq    
  432faa:	cmp    DWORD PTR [eax+0x1cfc0414],ecx
  432fb0:	call   0x7538:0x64171e8e
  432fb7:	sub    ecx,DWORD PTR [edi]
  432fb9:	adc    eax,0xfab9da06
  432fbe:	loopne 0x432fec
  432fc0:	retf   0x8f1e
  432fc3:	sub    BYTE PTR ds:0x5f047a6d,al
  432fc9:	in     eax,0x4f
  432fcb:	pop    ss
  432fcc:	pop    ds
  432fcd:	mov    ebp,0x90283085
  432fd2:	outs   dx,DWORD PTR ds:[esi]
  432fd3:	jmp    0xa055da6c
  432fd8:	inc    esp
  432fd9:	dec    esp
  432fda:	adc    al,0x1d
  432fdc:	pop    ds
  432fdd:	in     eax,dx
  432fde:	ss js  0x433050
  432fe1:	pop    ss
  432fe2:	jo     0x432fb6
  432fe4:	jmp    0x9fbd:0x9e8b82a3
  432feb:	sbb    BYTE PTR [edx],ah
  432fed:	jle    0x433002
  432fef:	mov    ch,0xa1
  432ff1:	icebp  
  432ff2:	outs   dx,BYTE PTR ds:[esi]
  432ff3:	ins    BYTE PTR es:[edi],dx
  432ff4:	cmp    al,0x99
  432ff6:	add    eax,0xaf55c5ca
  432ffb:	xchg   ecx,eax
  432ffc:	xchg   edx,eax
  432ffd:	pusha  
  432ffe:	mov    gs,WORD PTR [edx-0x1]
  433001:	adc    bl,BYTE PTR [edi-0x7b752625]
  433007:	add    ebp,DWORD PTR [edx*2-0x7f530add]
  43300e:	clc    
  43300f:	sub    al,0xe2
  433011:	and    ebp,DWORD PTR [ebx+0x47718344]
  433017:	add    BYTE PTR [eax+0xe],dl
  43301a:	fisubr WORD PTR [ebx]
  43301c:	mov    ch,0x6e
  43301e:	lock test eax,0x393b741b
  433024:	xlat   BYTE PTR ds:[ebx]
  433025:	sub    BYTE PTR [ecx+0x38],0x76
  433029:	daa    
  43302a:	cwde   
  43302b:	xchg   BYTE PTR [ecx],dh
  43302d:	xchg   esi,eax
  43302e:	sbb    esp,edi
  433030:	mov    gs,WORD PTR [ecx+ebp*4]
  433033:	mov    esp,0xd8caf7cd
  433038:	cmp    eax,0x641b97f8
  43303d:	fld1   
  43303f:	leave  
  433040:	(bad)  
  433041:	sar    DWORD PTR [edi-0x737703b0],cl
  433047:	push   ds
  433048:	hlt    
  433049:	fwait
  43304a:	adc    DWORD PTR [edx+eax*4],0x69
  43304e:	lods   al,BYTE PTR ds:[esi]
  43304f:	dec    eax
  433050:	aaa    
  433051:	mov    ebx,0x366f9a55
  433056:	xchg   edx,eax
  433057:	shl    BYTE PTR ds:0x923cd431,1
  43305d:	mov    al,0x28
  43305f:	jb     0x4330d9
  433061:	lock push ebx
  433063:	sbb    dh,BYTE PTR [ecx*1-0x6304ba8e]
  43306a:	imul   ebx,DWORD PTR [ebx+0x750cb427],0x40
  433071:	jmp    0x433033
  433073:	stc    
  433074:	repz push eax
  433076:	xor    eax,0xb109d28e
  43307b:	in     al,0x86
  43307d:	and    BYTE PTR [ecx+ebp*8-0x38],0xdf
  433082:	addr16 xchg ecx,eax
  433084:	or     BYTE PTR [ecx-0x436664ff],cl
  43308a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43308b:	cmp    ecx,DWORD PTR [eax]
  43308d:	mov    al,0x6
  43308f:	lock xchg edx,eax
  433091:	mov    ebp,0xc9b8afdf
  433096:	aam    0x77
  433098:	push   0x893180a4
  43309d:	lahf   
  43309e:	dec    ecx
  43309f:	clc    
  4330a0:	into   
  4330a1:	ficomp WORD PTR [ecx]
  4330a3:	xchg   ebp,eax
  4330a4:	dec    eax
  4330a5:	fsubrp st(1),st
  4330a7:	(bad)  
  4330a8:	sbb    al,0xf4
  4330aa:	inc    edi
  4330ab:	test   edx,0xd058022b
  4330b1:	inc    eax
  4330b2:	sbb    DWORD PTR [esi-0x7f9019c2],eax
  4330b8:	lock mov ds:0xc7e98de8,al
  4330be:	push   ebx
  4330bf:	mov    dh,0xc3
  4330c1:	xor    dh,ah
  4330c3:	or     al,0x7
  4330c5:	push   0x7f6ab051
  4330ca:	(bad)
  4330cd:	inc    ebx
  4330ce:	js     0x4330fb
  4330d0:	mov    bl,0x1a
  4330d2:	or     DWORD PTR [edx+0x50],eax
  4330d5:	push   esp
  4330d6:	sub    al,0x86
  4330d8:	fwait
  4330d9:	jno    0x433118
  4330db:	pop    ecx
  4330dc:	sub    BYTE PTR [esi-0x2e5de904],0x84
  4330e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4330e4:	pop    si
  4330e6:	ja     0x433108
  4330e8:	xlat   BYTE PTR ds:[ebx]
  4330e9:	outs   dx,BYTE PTR ds:[esi]
  4330ea:	sar    ecx,cl
  4330ec:	and    ah,BYTE PTR [esi+0x5a4427df]
  4330f2:	test   DWORD PTR [eax+0x1e],eax
  4330f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4330f6:	repz mov eax,ds:0xc9466848
  4330fc:	jge    0x433131
  4330fe:	mov    cl,0xac
  433100:	and    DWORD PTR ds:0x1769bc8c,esp
  433106:	jae    0x4330ca
  433108:	repz les edx,FWORD PTR [ecx]
  43310b:	xor    al,0x18
  43310d:	cmp    esi,esi
  43310f:	or     ch,BYTE PTR [ecx-0x9]
  433112:	data16 fcomp QWORD PTR [eax-0x61]
  433116:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  433118:	into   
  433119:	mov    bh,0xae
  43311b:	cwde   
  43311c:	mov    edx,0xae66837c
  433121:	fild   WORD PTR [eax-0x5fb5d22e]
  433127:	cs jg  0x4330c7
  43312a:	mov    eax,ds:0x81e379b2
  43312f:	dec    eax
  433130:	mov    ebx,0x63139227
  433135:	sbb    DWORD PTR [ebp+0x66de6cd2],esp
  43313b:	pop    ebx
  43313c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43313d:	mov    BYTE PTR [ecx-0x4a],cl
  433140:	sbb    DWORD PTR [eax+0x20f4289d],edx
  433146:	jns    0x4330f1
  433148:	call   0xc314e57f
  43314d:	fimul  WORD PTR [edx-0x12f53821]
  433153:	fadd   st,st(5)
  433155:	cmp    al,dl
  433157:	sub    ch,BYTE PTR [edx-0x7f2a7190]
  43315d:	mov    ds:0xf24dbe20,eax
  433162:	js     0x433104
  433164:	mov    ebx,0xedb696a4
  433169:	jge    0x433103
  43316b:	sub    esp,DWORD PTR [edx-0x33af372e]
  433171:	mov    dl,0xc1
  433173:	cmc    
  433174:	xor    al,0x96
  433176:	pop    ebx
  433177:	in     al,dx
  433178:	neg    BYTE PTR [edx-0x1b]
  43317b:	outs   dx,BYTE PTR ds:[esi]
  43317c:	push   edi
  43317d:	jno    0x433186
  43317f:	xor    al,0x10
  433181:	jle    0x433103
  433183:	inc    ebp
  433184:	mov    al,ds:0x5db4de5a
  433189:	mov    eax,0xf3730a29
  43318e:	jbe    0x43319e
  433190:	cli    
  433191:	fcomp  st(4)
  433193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433194:	neg    BYTE PTR [esi]
  433196:	mov    esp,0x224810bf
  43319b:	add    BYTE PTR [ebx-0x3a6bdc33],bl
  4331a1:	pop    ebp
  4331a2:	data16 mov dl,0x24
  4331a5:	test   eax,0xf4c523dc
  4331aa:	push   ss
  4331ab:	xor    DWORD PTR [edi-0x41f4c234],ecx
  4331b1:	cwde   
  4331b2:	xchg   edi,esi
  4331b4:	sub    al,0x13
  4331b6:	lock (bad) 
  4331b8:	sbb    al,0x2c
  4331ba:	icebp  
  4331bb:	addr16 xchg edx,eax
  4331bd:	jb     0x43317f
  4331bf:	adc    al,0xb1
  4331c1:	mov    gs,WORD PTR ss:[ecx-0x1418c88]
  4331c8:	cmp    BYTE PTR [ebp-0x515a0faf],ch
  4331ce:	fld    QWORD PTR [edx-0x13]
  4331d1:	pop    esp
  4331d2:	fdivr  st(3),st
  4331d4:	dec    esi
  4331d5:	popf   
  4331d6:	dec    ebx
  4331d7:	pop    ss
  4331d8:	call   0xcce7:0x6bd404c4
  4331df:	jae    0x433236
  4331e1:	outs   dx,BYTE PTR ds:[esi]
  4331e2:	ins    DWORD PTR es:[edi],dx
  4331e3:	sub    BYTE PTR [ebp+0x7972f55],dh
  4331e9:	jbe    0x4331b2
  4331eb:	aam    0x4c
  4331ed:	jns    0x4331ef
  4331ef:	int    0x10
  4331f1:	outs   dx,DWORD PTR ds:[esi]
  4331f2:	jbe    0x43318a
  4331f4:	xor    DWORD PTR [eax-0x5f],esi
  4331f7:	xchg   esp,eax
  4331f8:	push   es
  4331f9:	push   esi
  4331fa:	add    al,0x49
  4331fc:	cmp    eax,0xef3518d5
  433201:	ret    
  433202:	loop   0x4331b5
  433204:	in     al,dx
  433205:	shl    BYTE PTR [ecx-0x7a3f35c4],0x46
  43320c:	hlt    
  43320d:	or     ecx,DWORD PTR [esi-0x7e529fe3]
  433213:	mov    edi,DWORD PTR [eax]
  433215:	xor    bl,BYTE PTR [ebp+edx*4-0x45c87bf7]
  43321c:	or     eax,0x6627f648
  433221:	in     eax,0xa8
  433223:	(bad)  
  433224:	lock iret 
  433226:	popf   
  433227:	mov    DWORD PTR [edi],ebx
  433229:	mov    eax,ds:0x57c35083
  43322e:	jl     0x43327f
  433230:	push   esi
  433231:	mov    dh,0x24
  433233:	inc    edx
  433234:	je     0x433230
  433236:	add    esp,DWORD PTR [eax+eiz*4-0x68]
  43323a:	sub    ah,cl
  43323c:	std    
  43323d:	cwde   
  43323e:	mov    bl,0x86
  433240:	and    DWORD PTR [esi],edi
  433242:	push   edx
  433243:	shr    BYTE PTR [ecx-0x2c92431b],cl
  433249:	push   esi
  43324a:	pop    esp
  43324b:	jo     0x4331f2
  43324d:	inc    ecx
  43324e:	dec    ecx
  43324f:	loopne 0x43329c
  433251:	adc    edi,esi
  433253:	inc    esp
  433254:	fild   WORD PTR [esi-0x6d7763ce]
  43325a:	xchg   esi,eax
  43325b:	loope  0x4331fa
  43325d:	iret   
  43325e:	sti    
  43325f:	jb     0x433285
  433261:	lods   al,BYTE PTR ds:[esi]
  433262:	rol    ah,1
  433264:	(bad)  
  433265:	mov    eax,0x52124fe7
  43326a:	sar    BYTE PTR [ecx+0x18],1
  43326d:	add    ch,BYTE PTR [eax-0x2a6c8907]
  433273:	hlt    
  433274:	out    dx,al
  433275:	(bad)  
  433276:	retf   0x33ac
  433279:	pop    eax
  43327a:	out    dx,al
  43327b:	or     al,0x9c
  43327d:	xor    al,0xdd
  43327f:	xor    eax,0xd4aa6ab5
  433284:	and    eax,eax
  433286:	jns    0x433216
  433288:	adc    esi,DWORD PTR [ebx]
  43328a:	ficomp DWORD PTR [eax-0x351b409f]
  433290:	fimul  DWORD PTR [ebp+0x2d2d48ab]
  433296:	mov    ecx,DWORD PTR [eax]
  433298:	mov    esi,0x6127fb48
  43329d:	pop    edi
  43329e:	in     al,dx
  43329f:	xor    ebp,DWORD PTR [edi+eiz*2]
  4332a2:	aam    0xc2
  4332a4:	rcr    BYTE PTR [ecx-0x2b12c4a8],0x84
  4332ab:	mov    ebx,0x2d273ac0
  4332b0:	xchg   DWORD PTR [edi+0x54f050f8],edi
  4332b6:	xor    al,0xcc
  4332b8:	sbb    al,0x86
  4332ba:	nop
  4332bb:	sbb    al,0xdb
  4332bd:	frstor [edi]
  4332bf:	test   ecx,0x40626924
  4332c5:	jmp    0xdad6:0x5bb5689e
  4332cc:	pop    ds
  4332cd:	call   0x3b93ceb7
  4332d2:	arpl   WORD PTR [eax-0x6ff396ed],di
  4332d8:	xchg   esp,eax
  4332d9:	call   esi
  4332db:	pop    ecx
  4332dc:	(bad)  
  4332dd:	xor    al,0x45
  4332df:	xor    BYTE PTR [eax],cl
  4332e1:	stc    
  4332e2:	imul   ecx,DWORD PTR [edi+eax*2+0x54c80f5d],0x5960dae9
  4332ed:	cld    
  4332ee:	dec    ecx
  4332ef:	push   edi
  4332f0:	jl     0x43336a
  4332f2:	lods   eax,DWORD PTR ds:[esi]
  4332f3:	mov    dl,0xf1
  4332f5:	mov    al,ds:0x42747a01
  4332fa:	and    BYTE PTR [eax-0x72],cl
  4332fd:	daa    
  4332fe:	mov    ds:0x12aac82,eax
  433303:	inc    esp
  433304:	daa    
  433305:	lods   al,BYTE PTR ds:[esi]
  433306:	fimul  WORD PTR [edi+0x77]
  433309:	or     bh,dl
  43330b:	sbb    ch,BYTE PTR [eax+0x4a]
  43330e:	mov    edx,cs
  433310:	sbb    eax,0x5f954682
  433315:	mov    WORD PTR [eax+0x864ab39],es
  43331b:	mov    dh,0xa1
  43331d:	mov    bh,0x34
  43331f:	fmul   DWORD PTR [ebp+0x6f0d29d6]
  433325:	push   ebp
  433326:	mov    BYTE PTR [eax-0x45],bl
  433329:	shl    BYTE PTR [eax+eiz*8-0x4ecc7516],1
  433330:	jl     0x4333a1
  433332:	addr16 adc ax,di
  433336:	sbb    al,0xcb
  433338:	push   es
  433339:	mov    al,ds:0xb23fe4ce
  43333e:	aad    0xaf
  433340:	les    ebp,FWORD PTR [esi-0x3c]
  433343:	dec    edi
  433344:	pop    edi
  433345:	jp     0x4332d5
  433347:	(bad)  
  433348:	lahf   
  433349:	mov    esp,0xbba16c95
  43334e:	push   ebx
  43334f:	pushf  
  433350:	dec    edi
  433351:	add    ch,BYTE PTR [ebx+0x29e4902c]
  433357:	pop    eax
  433358:	int3   
  433359:	push   ebx
  43335a:	adc    DWORD PTR [ebp-0x1e874b4c],0x5f9e8830
  433364:	adc    cl,ah
  433366:	fdivr  DWORD PTR [ebp+0x5c]
  433369:	rcr    BYTE PTR [eiz*8-0x3aabc33],1
  433370:	bound  edx,QWORD PTR ds:0x61d091c7
  433376:	pushf  
  433377:	sti    
  433378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433379:	cmp    DWORD PTR [ecx-0x7109b59a],ebp
  43337f:	lock jmp 0xdc33e54d
  433385:	cli    
  433386:	cli    
  433387:	add    BYTE PTR [ecx-0x66171312],bl
  43338d:	std    
  43338e:	dec    ecx
  43338f:	leave  
  433390:	inc    ebx
  433391:	rcr    dl,0x10
  433394:	pop    ebp
  433395:	push   ss
  433396:	xchg   edi,eax
  433397:	or     DWORD PTR [ecx-0x4704d846],esi
  43339d:	out    0x21,eax
  43339f:	fst    QWORD PTR [ecx-0x31]
  4333a2:	jl     0x43334c
  4333a4:	dec    edx
  4333a5:	fdiv   st(3),st
  4333a7:	outs   dx,BYTE PTR ds:[esi]
  4333a8:	xchg   esi,eax
  4333a9:	test   al,0xda
  4333ab:	in     eax,dx
  4333ac:	ds ja  0x4333af
  4333af:	push   edx
  4333b0:	cmp    ah,0x4c
  4333b3:	xor    BYTE PTR [ebx-0x76],al
  4333b6:	shl    BYTE PTR [esi*4-0x39edb297],0x81
  4333be:	call   0x56b17c5e
  4333c3:	add    ah,BYTE PTR [ebp-0x1b]
  4333c6:	frstor [bp+di-0x10]
  4333ca:	push   cs
  4333cb:	arpl   WORD PTR [esp+esi*8],si
  4333ce:	add    BYTE PTR [esi-0x29],dl
  4333d1:	ficom  WORD PTR [esi*2+0x759c1e7b]
  4333d8:	ins    BYTE PTR es:[edi],dx
  4333d9:	and    dh,BYTE PTR [eax+0x38]
  4333dc:	dec    ebp
  4333dd:	or     edx,DWORD PTR [edx+0xeac28a7]
  4333e3:	and    BYTE PTR [edx+edx*4-0x49],bl
  4333e7:	jae    0x433436
  4333e9:	or     ch,ch
  4333eb:	scas   eax,DWORD PTR es:[edi]
  4333ec:	mov    al,BYTE PTR [edi+ebx*4]
  4333ef:	push   edx
  4333f0:	jno    0x433437
  4333f2:	loop   0x433421
  4333f4:	xor    esp,esi
  4333f6:	sub    dl,dh
  4333f8:	shr    DWORD PTR [ebx],0x19
  4333fb:	cwde   
  4333fc:	ja     0x4333ca
  4333fe:	push   ebp
  4333ff:	dec    esp
  433400:	enter  0xc82,0x92
  433404:	aaa    
  433405:	push   edx
  433406:	sub    al,0xfe
  433408:	jo     0x433438
  43340a:	xor    esp,DWORD PTR [edx+0x15]
  43340d:	xor    eax,0x943f894d
  433412:	mov    bl,0x1e
  433414:	mov    eax,ds:0x76cd2cdd
  433419:	jae    0x433457
  43341b:	and    bh,ch
  43341d:	mov    ecx,0x50a41980
  433422:	xor    DWORD PTR [eax],eax
  433424:	add    BYTE PTR [eax],al
  433426:	add    BYTE PTR [eax],al
  433428:	dec    eax
  433429:	push   ss
  43342a:	xor    DWORD PTR [ebx+0x51],eax
  43342d:	or     DWORD PTR [eax],eax
  43342f:	add    BYTE PTR [eax],al
  433431:	add    BYTE PTR [eax],al
  433433:	add    BYTE PTR [ecx+0x9],dl
  433436:	add    BYTE PTR [eax],al
  433438:	inc    ebx
  433439:	add    BYTE PTR [esi],ah
  43343b:	jl     0x43343d
  43343d:	add    dh,BYTE PTR [esi]
  43343f:	or     BYTE PTR [eax],al
  433441:	add    ah,al
  433443:	inc    ebp
  433444:	add    BYTE PTR [ebp+0x57],ch
  433447:	pop    esi
  433448:	enter  0xc930,0x1e
  43344c:	repz and al,0x83
  43344f:	cmc    
  433450:	shl    esi,1
  433452:	popa   
  433453:	stos   DWORD PTR es:[edi],eax
  433454:	inc    esi
  433455:	inc    esi
  433456:	dec    eax
  433457:	ror    esi,1
  433459:	xor    esi,DWORD PTR [eax+0x59e101fb]
  43345f:	ins    BYTE PTR es:[edi],dx
  433460:	ins    BYTE PTR es:[edi],dx
  433461:	adc    ebx,DWORD PTR [edi-0x15d3ce63]
  433467:	cwde   
  433468:	nop
  433469:	cli    
  43346a:	in     al,dx
  43346b:	not    BYTE PTR [esi]
  43346d:	pop    ebp
  43346e:	push   0x8038c73b
  433473:	leave  
  433474:	or     DWORD PTR [ecx],0x36
  433477:	popa   
  433478:	mov    BYTE PTR [esi],ah
  43347a:	pop    esp
  43347b:	sbb    esp,DWORD PTR [edx-0x24]
  43347e:	and    BYTE PTR [edi-0x7f6cec07],cl
  433484:	jg     0x433468
  433486:	sub    BYTE PTR [ecx+0x5b],ah
  433489:	push   esp
  43348a:	mov    WORD PTR [ebx-0x5c],?
  43348d:	mov    eax,0xe987fbdb
  433492:	lods   eax,DWORD PTR ds:[esi]
  433493:	out    dx,al
  433494:	stos   DWORD PTR es:[edi],eax
  433495:	dec    esp
  433496:	jmp    0x4334fe
  433498:	test   al,0xb0
  43349a:	fs ret 
  43349c:	mov    es,WORD PTR [edx+0x7be02970]
  4334a2:	lahf   
  4334a3:	sub    eax,0x947d405b
  4334a8:	inc    ebx
  4334a9:	push   edx
  4334aa:	push   esi
  4334ab:	rcl    DWORD PTR [eax-0x47ef5ce7],cl
  4334b1:	add    al,0x11
  4334b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4334b4:	jae    0x4334ae
  4334b6:	stos   BYTE PTR es:[edi],al
  4334b7:	mov    ecx,0x460bdcd4
  4334bc:	xchg   ebp,eax
  4334bd:	(bad)  
  4334be:	fwait
  4334bf:	jle    0x43347c
  4334c1:	cmp    al,0x84
  4334c3:	je     0x43346e
  4334c5:	xor    BYTE PTR [eax+0x671d1c5c],bh
  4334cb:	test   al,0xb4
  4334cd:	pop    es
  4334ce:	(bad)  
  4334cf:	cmp    DWORD PTR [ecx],eax
  4334d1:	sub    al,0x0
  4334d3:	ret    0x71cc
  4334d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4334d7:	cmp    dh,0x4
  4334da:	rcr    BYTE PTR [esi+0x7d1df057],1
  4334e0:	aaa    
  4334e1:	xchg   edi,eax
  4334e2:	inc    ebx
  4334e3:	loopne 0x433496
  4334e5:	and    edx,DWORD PTR [ebx+ebp*4]
  4334e8:	ins    DWORD PTR es:[edi],dx
  4334e9:	dec    esi
  4334ea:	xor    eax,0x9247170b
  4334ef:	mov    esp,0xdf29013f
  4334f4:	aam    0x6d
  4334f6:	dec    edx
  4334f7:	imul   esp,eax,0x5ea0920
  4334fd:	enter  0xbfe8,0x80
  433501:	add    al,0x81
  433503:	sub    al,0xca
  433505:	in     eax,dx
  433506:	sbb    al,0xa1
  433508:	stc    
  433509:	pop    ss
  43350a:	sub    bl,al
  43350c:	sar    edi,0xf7
  43350f:	xchg   edx,eax
  433510:	adc    eax,0x3fd0873a
  433515:	jg     0x433595
  433517:	or     eax,0x7e932f4b
  43351c:	hlt    
  43351d:	jp     0x433537
  43351f:	mov    edi,0x53d35e38
  433524:	neg    DWORD PTR [eax]
  433526:	cmp    dl,BYTE PTR ds:0x3392d5cb
  43352c:	add    ch,al
  43352e:	cmp    al,0x69
  433530:	jno    0x4334fc
  433532:	dec    ebp
  433533:	push   cs
  433534:	clc    
  433535:	mov    esi,0x365b60c5
  43353a:	sets   BYTE PTR [esi-0x7e]
  43353e:	imul   ecx,DWORD PTR [esi],0x8
  433541:	xor    al,0xc4
  433543:	push   cs
  433544:	mov    eax,0x3840af29
  433549:	sub    al,0x2e
  43354b:	xor    esp,DWORD PTR [eax]
  43354d:	push   es
  43354e:	sbb    DWORD PTR [ecx],edx
  433550:	icebp  
  433551:	mov    ds:0x64582f50,al
  433556:	push   ecx
  433557:	(bad)  
  433558:	jno    0x433536
  43355a:	push   edx
  43355b:	je     0x4335ba
  43355d:	inc    eax
  43355e:	fnsave [edi]
  433560:	ja     0x433583
  433562:	fdiv   st(0),st
  433564:	sbb    al,0xc8
  433566:	ss loop 0x433535
  433569:	nop
  43356a:	hlt    
  43356b:	das    
  43356c:	repnz inc eax
  43356e:	sbb    BYTE PTR [ebx+ecx*8+0x46],dl
  433572:	jge    0x433548
  433574:	mov    ecx,0xe21b6488
  433579:	leave  
  43357a:	and    bh,bh
  43357c:	fmul   DWORD PTR ds:0x6e84887f
  433582:	cld    
  433583:	retf   
  433584:	and    al,0xf9
  433586:	sar    DWORD PTR [esp+ebp*4+0x4694bf2a],0x45
  43358e:	adc    BYTE PTR [eax+0x178554a5],ah
  433594:	inc    esi
  433595:	sbb    al,0xa
  433597:	dec    eax
  433598:	add    BYTE PTR [bx+si-0x33],bh
  43359c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43359d:	adc    DWORD PTR [ebp+0x54a8e232],ebp
  4335a3:	pushf  
  4335a4:	and    eax,0x6156a8d4
  4335a9:	push   0x12
  4335ab:	jne    0x43356d
  4335ad:	sbb    esi,0xb
  4335b0:	inc    ecx
  4335b1:	adc    eax,0xe4467cf7
  4335b6:	pop    ecx
  4335b7:	rcl    DWORD PTR [edx],0x50
  4335ba:	push   ecx
  4335bb:	ins    DWORD PTR es:[edi],dx
  4335bc:	enter  0x8c1f,0xf
  4335c0:	dec    edi
  4335c1:	and    esp,eax
  4335c3:	sub    cl,0xb
  4335c6:	push   ebx
  4335c7:	mov    al,0x9e
  4335c9:	pusha  
  4335ca:	dec    esp
  4335cb:	ins    DWORD PTR es:[edi],dx
  4335cc:	(bad)  
  4335cd:	jbe    0x43356a
  4335cf:	rcl    esp,1
  4335d1:	out    dx,al
  4335d2:	xor    DWORD PTR [esi+esi*8-0x6be5d96e],ebx
  4335d9:	clc    
  4335da:	push   eax
  4335db:	out    dx,eax
  4335dc:	mov    ebx,0x80c2b9f0
  4335e1:	cld    
  4335e2:	mov    al,ds:0x68cfeb9a
  4335e7:	lea    edi,[ecx]
  4335e9:	inc    esp
  4335ea:	daa    
  4335eb:	les    edi,FWORD PTR ds:0x43b1d29
  4335f1:	mov    dl,0x87
  4335f3:	jmp    0x4335dd
  4335f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4335f6:	lds    esi,FWORD PTR [edx+0x7b]
  4335f9:	mov    ah,0xe4
  4335fb:	push   esp
  4335fc:	es or  al,0xe9
  4335ff:	xchg   edx,eax
  433600:	push   0x71e737cb
  433605:	outs   dx,BYTE PTR ds:[esi]
  433606:	xor    dh,ah
  433608:	scas   al,BYTE PTR es:[edi]
  433609:	pop    ecx
  43360a:	mov    BYTE PTR [ecx+esi*4],bh
  43360d:	mov    ?,esi
  43360f:	fsubr  DWORD PTR [edi+0x38d81ace]
  433615:	mov    ecx,0x95fccfea
  43361a:	push   eax
  43361b:	nop
  43361c:	out    0x96,al
  43361e:	call   0x6d635fd5
  433623:	pop    eax
  433624:	(bad)  
  433625:	aas    
  433626:	xor    BYTE PTR [ecx-0x12],bl
  433629:	xor    BYTE PTR [esp+edx*8-0x31],al
  43362d:	inc    eax
  43362e:	adc    edx,ecx
  433630:	add    cl,BYTE PTR [ebx]
  433632:	xchg   esp,ebp
  433634:	or     DWORD PTR [eax+0x6f],ebx
  433637:	xchg   edi,eax
  433638:	jp     0x433681
  43363a:	sub    bh,BYTE PTR [edi-0x10ea28f0]
  433640:	jmp    0xe934:0x7908fb4d
  433647:	std    
  433648:	iret   
  433649:	dec    esp
  43364a:	mov    DWORD PTR [ecx-0x1a],ecx
  43364d:	jp     0x4336a7
  43364f:	imul   ebp,DWORD PTR [ecx-0x39],0xc1c1dd05
  433656:	fnstsw WORD PTR [edx+ebp*1+0x5b]
  43365a:	dec    esi
  43365b:	adc    al,0xe8
  43365d:	xchg   ecx,eax
  43365e:	inc    ebx
  43365f:	(bad)  
  433660:	and    al,0x61
  433662:	out    0xa3,eax
  433664:	xchg   al,cl
  433666:	or     BYTE PTR [eax-0x14],ah
  433669:	dec    eax
  43366a:	mov    ebp,0x1e7fb86e
  43366f:	cmp    al,0xb4
  433671:	fld    TBYTE PTR [ebp+ecx*1-0x52]
  433675:	je     0x4336dd
  433677:	inc    esp
  433678:	xchg   ebp,eax
  433679:	leave  
  43367a:	xor    edx,DWORD PTR [eax+0x6fa1b804]
  433680:	xor    al,0xe4
  433682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433683:	pop    esp
  433684:	mov    ah,0x54
  433686:	cmp    eax,0xb880e097
  43368b:	fdiv   DWORD PTR [esp+ebx*2-0x23]
  43368f:	leave  
  433690:	jb     0x43366d
  433692:	mov    ebx,0x8068e157
  433697:	inc    ecx
  433698:	test   eax,0x25629f3e
  43369d:	pop    esi
  43369e:	inc    ebx
  43369f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4336a0:	jge    0x43370c
  4336a2:	mov    dl,0x3
  4336a4:	mov    ds:0xc84afcfe,al
  4336a9:	cmp    esi,edi
  4336ab:	arpl   WORD PTR [eax+0x386b0c20],ax
  4336b1:	jo     0x43367c
  4336b3:	push   ebp
  4336b4:	push   eax
  4336b5:	sub    eax,0x21e2c7d9
  4336ba:	xchg   esp,eax
  4336bb:	jmp    0xf12fccd3
  4336c0:	push   esp
  4336c1:	rol    BYTE PTR [eax-0x48],0x21
  4336c5:	sub    edi,edi
  4336c7:	inc    ecx
  4336c8:	outs   dx,DWORD PTR ds:[esi]
  4336c9:	lock jae 0x43364c
  4336cc:	fcom   QWORD PTR [edi]
  4336ce:	(bad)  
  4336cf:	outs   dx,BYTE PTR ds:[esi]
  4336d0:	push   ds
  4336d1:	les    esi,FWORD PTR [ebx]
  4336d3:	enter  0x7b,0x71
  4336d7:	in     al,0xd1
  4336d9:	sbb    eax,eax
  4336db:	popf   
  4336dc:	iret   
  4336dd:	mov    eax,0x84af40a8
  4336e2:	cmp    ebx,ebp
  4336e4:	aam    0x5e
  4336e6:	xor    eax,0x444cddcc
  4336eb:	cdq    
  4336ec:	push   esi
  4336ed:	sub    ebx,DWORD PTR [esi-0x1f630f37]
  4336f3:	leave  
  4336f4:	(bad)  
  4336f5:	cli    
  4336f6:	push   es
  4336f7:	dec    ecx
  4336f8:	jbe    0x43370e
  4336fa:	fisubr DWORD PTR [ebx-0x2e]
  4336fd:	jbe    0x433773
  4336ff:	daa    
  433700:	stos   DWORD PTR es:[edi],eax
  433701:	and    DWORD PTR [edx+ebp*1+0x45ff6a61],edi
  433708:	push   0xc8e0b481
  43370d:	pop    ecx
  43370e:	cmp    ah,BYTE PTR [ebx]
  433710:	pop    eax
  433711:	iret   
  433712:	stos   BYTE PTR es:[edi],al
  433713:	js     0x433719
  433715:	sub    ebx,ebp
  433717:	and    cl,BYTE PTR [esi-0x1a3c8c38]
  43371d:	sub    BYTE PTR [ebp-0x5ee071b9],dl
  433723:	test   eax,0x244c69b7
  433728:	fldlg2 
  43372a:	cmp    al,0x96
  43372c:	mov    eax,cs
  43372e:	push   edx
  43372f:	hlt    
  433730:	cs daa 
  433732:	stos   DWORD PTR es:[edi],eax
  433733:	mov    ebp,0xe74b1e97
  433738:	sbb    dl,ah
  43373a:	mov    bl,0xd9
  43373c:	and    BYTE PTR [ecx],ch
  43373e:	dec    eax
  43373f:	mov    BYTE PTR [esi],dh
  433741:	cmp    al,0x0
  433743:	fdiv   st,st(1)
  433745:	call   0x25a4d253
  43374a:	pusha  
  43374b:	push   0xffffffbd
  43374d:	sub    BYTE PTR [ebx],cl
  43374f:	call   0xad49:0x84409288
  433756:	cs xchg esp,eax
  433758:	or     cl,BYTE PTR [ebp+0x1e2c194d]
  43375e:	add    dh,ch
  433760:	pop    ecx
  433761:	jecxz  0x4337c5
  433763:	int    0x83
  433765:	push   eax
  433766:	cs mov es:0x578271eb,eax
  43376d:	data16 je 0x4337c4
  433770:	cbw    
  433772:	mov    bh,0xad
  433774:	xchg   edx,eax
  433775:	hlt    
  433776:	ins    BYTE PTR es:[edi],dx
  433777:	cwde   
  433778:	out    dx,al
  433779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43377a:	out    0xd,al
  43377c:	xor    ch,cl
  43377e:	mov    ah,0x2b
  433780:	inc    eax
  433781:	call   0xdfa41fc9
  433786:	outs   dx,DWORD PTR ds:[esi]
  433788:	jp     0x4337ee
  43378a:	mov    bh,0x72
  43378c:	add    ebx,DWORD PTR [esi+0x7e]
  43378f:	dec    esp
  433790:	inc    eax
  433791:	jp     0x43371b
  433793:	xchg   ebp,eax
  433794:	les    edx,FWORD PTR [eax]
  433796:	push   cs
  433797:	or     dl,bl
  433799:	sbb    ebx,esp
  43379b:	lods   al,BYTE PTR ds:[esi]
  43379c:	retf   
  43379d:	sub    ah,BYTE PTR [esi-0x26294392]
  4337a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4337a4:	shl    ah,1
  4337a6:	test   al,0xb5
  4337a8:	sbb    eax,0x367aa6dd
  4337ad:	js     0x433766
  4337af:	push   ebx
  4337b0:	sar    ebp,0x73
  4337b3:	in     al,0xb3
  4337b5:	xchg   esp,eax
  4337b6:	pushf  
  4337b7:	jecxz  0x4337f4
  4337b9:	mov    esi,0xad9b3919
  4337be:	ins    BYTE PTR es:[edi],dx
  4337bf:	rcr    BYTE PTR [ecx-0x37],0xf5
  4337c3:	or     esi,DWORD PTR [esi+eiz*2+0x2ee429d7]
  4337ca:	stc    
  4337cb:	cmp    eax,0xb817562
  4337d0:	inc    eax
  4337d1:	mov    WORD PTR [ebp+0x65],fs
  4337d4:	mov    cl,0xbd
  4337d6:	js     0x4337b8
  4337d8:	test   BYTE PTR [eax],bl
  4337da:	mov    al,0xf5
  4337dc:	add    ebp,DWORD PTR [edx+0x76]
  4337df:	jmp    0xd47c12ca
  4337e4:	dec    edi
  4337e5:	retw   
  4337e7:	add    ebp,ebp
  4337e9:	iret   
  4337ea:	fild   QWORD PTR [eax-0x8]
  4337ed:	ins    BYTE PTR es:[edi],dx
  4337ee:	xor    esp,DWORD PTR [eax]
  4337f0:	mov    edi,0x70a808bb
  4337f5:	sbb    al,0x35
  4337f7:	mov    eax,ds:0x692a76e0
  4337fc:	jl     0x43387a
  4337fe:	les    edx,FWORD PTR [esi]
  433800:	cmp    DWORD PTR [ebx],esp
  433802:	std    
  433803:	ja     0x4337cd
  433805:	and    BYTE PTR [edi],cl
  433807:	call   0xcfd3e14c
  43380c:	add    BYTE PTR [ebx-0x22],al
  43380f:	mov    esp,0x6ad8890c
  433814:	cmp    DWORD PTR [edx],0xffffffa5
  433817:	add    ebx,DWORD PTR [eax+0x30]
  43381a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43381b:	arpl   WORD PTR [esi+0x28],dx
  43381e:	arpl   bx,cx
  433820:	out    dx,eax
  433821:	test   eax,ebx
  433823:	(bad)  
  433824:	gs xchg esi,eax
  433826:	rcl    DWORD PTR [edi],0x34
  433829:	jns    0x4337df
  43382b:	cld    
  43382c:	shr    DWORD PTR [edx-0x61dc431c],cl
  433832:	in     al,0xbc
  433834:	and    BYTE PTR [edx+edx*4-0x26],dh
  433838:	jmp    0x144:0x3837b955
  43383f:	jno    0x43387a
  433841:	xor    BYTE PTR ds:0x68e22c36,dl
  433847:	push   ds
  433848:	sub    DWORD PTR [edi+0xbbb603e],edx
  43384e:	inc    esi
  43384f:	adc    BYTE PTR [edi],bh
  433851:	inc    esp
  433852:	nop
  433853:	inc    eax
  433854:	nop
  433855:	sbb    BYTE PTR [eax-0x59],cl
  433858:	xor    al,0xb1
  43385a:	mov    esi,DWORD PTR [ebp-0x5]
  43385d:	push   cs
  43385e:	in     al,0x44
  433860:	(bad)  
  433861:	pop    eax
  433862:	neg    BYTE PTR [ebx]
  433864:	or     bh,BYTE PTR [edx+ebp*1+0x7caad33d]
  43386b:	xchg   esp,eax
  43386c:	dec    eax
  43386d:	leave  
  43386e:	es retf 
  433870:	adc    BYTE PTR [edx-0x3f],ch
  433873:	mov    al,ds:0xc595f1bc
  433878:	jbe    0x433864
  43387a:	call   0x6f37808d
  43387f:	sub    cl,BYTE PTR [ebp-0x9eca3c]
  433885:	ins    BYTE PTR es:[edi],dx
  433886:	push   edi
  433887:	mov    al,0x13
  433889:	popa   
  43388a:	dec    ebp
  43388b:	lea    eax,[ecx]
  43388d:	push   eax
  43388e:	nop
  43388f:	mov    eax,ds:0xb04abbf0
  433894:	inc    esi
  433895:	jne    0x433858
  433897:	mov    ah,0x83
  433899:	and    ebp,DWORD PTR [eiz*8+0x2ab388c2]
  4338a0:	pop    esp
  4338a1:	fsub   DWORD PTR [edi-0x7991966d]
  4338a7:	lock or eax,0xa1b7fd80
  4338ad:	push   edi
  4338ae:	push   0xa40d6fdb
  4338b3:	scas   al,BYTE PTR es:[edi]
  4338b4:	adc    eax,0x88e29ec8
  4338b9:	cli    
  4338ba:	and    cl,al
  4338bc:	cmp    edx,DWORD PTR [edx+edx*2-0x3cb438e]
  4338c3:	pop    ebx
  4338c4:	in     al,dx
  4338c5:	xchg   esp,eax
  4338c6:	pop    eax
  4338c7:	jp     0x4338b8
  4338c9:	aad    0x41
  4338cb:	pop    ss
  4338cc:	dec    ebp
  4338cd:	xchg   esp,eax
  4338ce:	ret    
  4338cf:	out    0x60,eax
  4338d1:	mov    bh,0xc9
  4338d3:	mov    ds:0x28b8907e,al
  4338d8:	cli    
  4338d9:	ficomp DWORD PTR [edx+0x54]
  4338dc:	sbb    ch,dl
  4338de:	scas   eax,DWORD PTR es:[edi]
  4338df:	fcom   QWORD PTR [eax+0x5953b348]
  4338e5:	and    ecx,ebp
  4338e7:	adc    eax,0x81191f00
  4338ec:	fsubr  st(3),st
  4338ee:	pop    es
  4338ef:	sub    ebp,ebx
  4338f1:	test   al,0xc
  4338f3:	ret    
  4338f4:	mov    ch,0x34
  4338f6:	aas    
  4338f7:	cli    
  4338f8:	pop    ss
  4338f9:	mov    ah,0xcc
  4338fb:	dec    ebx
  4338fc:	mov    cl,0xd5
  4338fe:	push   ecx
  4338ff:	fidivr DWORD PTR [ecx]
  433901:	sub    DWORD PTR [eax],ebp
  433903:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433905:	xchg   al,dl
  433907:	outs   dx,BYTE PTR ds:[esi]
  433908:	fild   QWORD PTR [edi-0x35]
  43390b:	pop    edi
  43390c:	adc    al,0x35
  43390e:	xor    al,0xd7
  433910:	mov    eax,0x55db1ba
  433915:	cmp    bl,bh
  433917:	jb     0x433979
  433919:	lea    eax,[ecx-0x77]
  43391c:	ret    0xe0fc
  43391f:	jb     0x4338f5
  433921:	(bad)  
  433922:	xor    al,0x5
  433924:	fbld   TBYTE PTR [edx]
  433926:	jle    0x43392c
  433928:	adc    edi,DWORD PTR [esi-0x19]
  43392b:	js     0x4338c4
  43392d:	xchg   ecx,eax
  43392e:	(bad)  
  43392f:	add    eax,0xa5621328
  433934:	xchg   BYTE PTR [edx+0x4c9c4bc4],bl
  43393a:	loope  0x43393a
  43393c:	cmp    al,0xb3
  43393e:	popa   
  43393f:	jbe    0x433981
  433941:	popa   
  433942:	jo     0x433921
  433944:	dec    edx
  433945:	scas   eax,DWORD PTR es:[edi]
  433946:	out    0xa9,eax
  433948:	xchg   edi,eax
  433949:	daa    
  43394a:	xchg   esi,eax
  43394b:	sbb    BYTE PTR [esi+0x6a5b67e6],al
  433951:	loope  0x433989
  433953:	icebp  
  433954:	cmp    al,0x8e
  433956:	mov    esi,0x994e3cb1
  43395b:	imul   DWORD PTR [edi]
  43395d:	pusha  
  43395e:	shl    DWORD PTR [edi],cl
  433960:	(bad)  
  433961:	call   0x6fdc7977
  433966:	test   BYTE PTR [ecx-0x10],ah
  433969:	ret    0x2edc
  43396c:	and    BYTE PTR [esi+esi*2],0x2c
  433970:	pop    ebx
  433971:	add    DWORD PTR [ebx-0x75b3799c],edi
  433977:	adc    BYTE PTR [eax-0x65],0xbb
  43397b:	xlat   BYTE PTR ds:[ebx]
  43397c:	mov    gs,eax
  43397e:	xchg   edx,eax
  43397f:	xchg   edx,eax
  433980:	div    BYTE PTR [ebp+ecx*4+0x71]
  433984:	and    edi,DWORD PTR [ebp-0x73]
  433987:	imul   ebx,esi,0x3e
  43398a:	cwde   
  43398b:	shl    DWORD PTR [esi-0x6175ad5],cl
  433991:	or     dh,BYTE PTR [edi]
  433993:	mov    esp,0x14b7c810
  433998:	test   al,0xd5
  43399a:	add    ebp,DWORD PTR [ecx+0x64]
  43399d:	outs   dx,DWORD PTR ds:[esi]
  43399e:	sub    DWORD PTR [esi],0x2701de8f
  4339a4:	leave  
  4339a5:	mov    bl,dh
  4339a7:	fld    TBYTE PTR [esi]
  4339a9:	fwait
  4339aa:	mov    eax,ss:0x25ac965e
  4339b0:	dec    ebp
  4339b1:	or     al,0xd3
  4339b3:	in     eax,0x84
  4339b5:	sar    DWORD PTR [eax+edx*8+0x7b],0xe7
  4339ba:	mov    al,ds:0xb0df8932
  4339bf:	jge    0x433a39
  4339c1:	cmp    edi,DWORD PTR [ebx+0x7df404da]
  4339c7:	jmp    0x3fcc:0xbf2a9c52
  4339ce:	inc    ecx
  4339cf:	xor    ebx,esp
  4339d1:	cmp    al,al
  4339d3:	imul   dl
  4339d5:	push   ebx
  4339d6:	out    0x80,eax
  4339d8:	cmp    edi,0x77
  4339db:	in     al,0x2f
  4339dd:	pop    ss
  4339de:	mov    bh,0xad
  4339e0:	adc    ebp,ebx
  4339e2:	cld    
  4339e3:	jmp    0x7e34:0xf3fca808
  4339ea:	xchg   ecx,eax
  4339eb:	jbe    0x4339f0
  4339ed:	mov    al,0xfb
  4339ef:	in     eax,0xb
  4339f1:	xchg   edi,eax
  4339f2:	fstp   st(2)
  4339f4:	test   BYTE PTR [eax-0x2c],ah
  4339f7:	push   ebx
  4339f8:	je     0x43397d
  4339fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4339fb:	sbb    eax,0xf80b2ba4
  433a00:	inc    ecx
  433a01:	int    0x26
  433a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433a04:	bound  ecx,QWORD PTR [eax+0x581c82de]
  433a0a:	sbb    edx,0xffffff92
  433a0d:	pop    ecx
  433a0e:	fnstcw WORD PTR [edx]
  433a10:	lods   eax,DWORD PTR ds:[esi]
  433a11:	inc    eax
  433a12:	mov    bh,0x8e
  433a14:	mov    ebp,0xe1b5a61b
  433a19:	fsubr  st,st(0)
  433a1b:	cwde   
  433a1c:	in     al,dx
  433a1d:	std    
  433a1e:	call   0xde0c:0xda249f41
  433a25:	fnstsw WORD PTR [esi*4-0x6e0b1a07]
  433a2c:	xor    BYTE PTR [ebp+esi*4-0x4a],bh
  433a30:	sbb    al,BYTE PTR [ecx+0x54b58ec6]
  433a36:	or     DWORD PTR [edx-0x2351ecc1],0x6e
  433a3d:	stos   BYTE PTR es:[edi],al
  433a3e:	cld    
  433a3f:	push   cs
  433a40:	mov    bl,0x95
  433a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433a43:	xor    eax,0x2041658b
  433a48:	out    dx,al
  433a49:	inc    edx
  433a4a:	or     BYTE PTR [edi],ah
  433a4c:	clc    
  433a4d:	out    dx,eax
  433a4e:	and    esp,DWORD PTR [esi+0x44]
  433a51:	cmp    al,0xe9
  433a53:	repz enter 0xe276,0xf5
  433a58:	sub    BYTE PTR [eax+0x55],0x33
  433a5c:	cmp    dh,BYTE PTR [ecx-0x4df02e1e]
  433a62:	mov    esi,gs
  433a64:	fild   WORD PTR [edi-0x30]
  433a67:	addr16 and eax,0x953419b9
  433a6d:	sbb    DWORD PTR [edx-0x884ba97],ebx
  433a73:	sti    
  433a74:	pop    eax
  433a75:	in     eax,0x1c
  433a77:	inc    eax
  433a78:	(bad)  ds:0x7c531fc7
  433a7e:	jmp    0x5681e927
  433a83:	adc    BYTE PTR [eax],ch
  433a85:	pop    ds
  433a86:	mov    al,ds:0xafde3907
  433a8b:	ja     0x433a8b
  433a8d:	jmp    0x677082f3
  433a92:	dec    esi
  433a93:	imul   edi,DWORD PTR [esi+0x6c7b4dfd],0x5e5bdc7
  433a9d:	sub    DWORD PTR [edi+0x49],esp
  433aa0:	jno    0x433a32
  433aa2:	fnsave [ebx]
  433aa4:	add    bl,dl
  433aa6:	xchg   ecx,eax
  433aa7:	jmp    0x76f7bf06
  433aac:	sbb    eax,0xf0d4dcd1
  433ab1:	dec    ecx
  433ab2:	sti    
  433ab3:	fsub   DWORD PTR [ebp+0x344edf26]
  433ab9:	mov    cs,WORD PTR fs:[ecx-0x80]
  433abd:	xor    ch,bh
  433abf:	add    eax,0x643d29d2
  433ac4:	cmp    BYTE PTR [ebx+edx*2+0x6770ab18],ah
  433acb:	(bad)
  433ad0:	pop    ebp
  433ad1:	pop    edx
  433ad2:	mov    al,ds:0x99d780ea
  433ad7:	in     al,dx
  433ad8:	lods   al,BYTE PTR ds:[esi]
  433ad9:	pop    ecx
  433ada:	cmp    eax,0xa053ee17
  433adf:	dec    ebx
  433ae0:	adc    BYTE PTR [eax+0x50402950],ah
  433ae6:	leave  
  433ae7:	xor    eax,0xf7c9b828
  433aec:	das    
  433aed:	and    eax,0xf3be5737
  433af2:	(bad)  
  433af4:	ins    BYTE PTR es:[edi],dx
  433af5:	sub    BYTE PTR [esi-0x7af50655],dl
  433afb:	add    BYTE PTR [edx-0x7469211b],bl
  433b01:	pop    ss
  433b02:	out    0x86,al
  433b04:	and    al,0x48
  433b06:	(bad)  
  433b07:	dec    esi
  433b08:	jnp    0x433b38
  433b0a:	dec    ebx
  433b0b:	daa    
  433b0c:	pop    esp
  433b0d:	int3   
  433b0e:	sub    ebp,DWORD PTR [ecx]
  433b10:	jmp    0xf0a7:0xa44ee629
  433b17:	add    bl,dh
  433b19:	inc    ecx
  433b1a:	call   0x8e632d24
  433b1f:	adc    al,0x43
  433b21:	pop    ds
  433b22:	sahf   
  433b23:	call   0xbb179e01
  433b28:	cmp    BYTE PTR [eax+0x3cac3c53],cl
  433b2e:	xor    al,BYTE PTR [ebx]
  433b30:	int3   
  433b31:	pop    esp
  433b32:	adc    ebx,DWORD PTR [ebx+eax*2+0x3177d41a]
  433b39:	into   
  433b3a:	add    al,0xf0
  433b3c:	lock jo 0x433ac3
  433b3f:	xchg   BYTE PTR [eax-0x48],al
  433b42:	sub    eax,0x8cb22728
  433b47:	sbb    al,0xe
  433b49:	dec    ebp
  433b4a:	loopne 0x433b60
  433b4c:	dec    esp
  433b4d:	or     eax,0xca8c988f
  433b52:	out    0xee,al
  433b54:	dec    esi
  433b55:	jo     0x433b4c
  433b57:	ja     0x433afd
  433b59:	das    
  433b5a:	lods   al,BYTE PTR ds:[esi]
  433b5b:	jge    0x433b28
  433b5d:	and    ebx,DWORD PTR [eax]
  433b5f:	cld    
  433b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433b61:	fild   QWORD PTR [edx-0x628e74dd]
  433b67:	cmp    al,0xe3
  433b69:	push   ebp
  433b6a:	rcl    DWORD PTR [edx+0x5b72313c],cl
  433b70:	pusha  
  433b71:	mov    ch,cl
  433b73:	lods   al,BYTE PTR ds:[esi]
  433b74:	(bad)  
  433b75:	xor    ah,ah
  433b77:	(bad)  
  433b78:	mov    cl,0x84
  433b7a:	arpl   bx,cx
  433b7c:	arpl   WORD PTR [edi+eiz*4-0x54],dx
  433b80:	(bad)  
  433b81:	jmp    0x433b2b
  433b83:	fwait
  433b84:	shl    BYTE PTR [ecx+0xd295d01],1
  433b8a:	mov    edx,DWORD PTR [eax+0x7e]
  433b8d:	xchg   edx,eax
  433b8e:	je     0x433b42
  433b90:	(bad)  
  433b92:	cdq    
  433b93:	ret    0x7b74
  433b96:	inc    ebx
  433b97:	and    eax,0x26eea199
  433b9c:	inc    esp
  433b9d:	cwde   
  433b9e:	icebp  
  433b9f:	jbe    0x433bc4
  433ba1:	mov    al,0x16
  433ba3:	pop    edi
  433ba4:	stos   BYTE PTR es:[edi],al
  433ba5:	push   0x8adb0dbc
  433baa:	mov    bl,0x6
  433bac:	and    BYTE PTR [esi-0x3f301fa8],dh
  433bb2:	lea    esi,[edx]
  433bb4:	out    0xfd,eax
  433bb6:	lahf   
  433bb7:	ror    DWORD PTR [eax-0x519443e9],cl
  433bbd:	dec    ebx
  433bbe:	repz dec ebx
  433bc0:	adc    ebp,DWORD PTR [ebx+edi*2-0x7ae5f51b]
  433bc7:	aaa    
  433bc8:	xor    esi,edi
  433bca:	rol    BYTE PTR [ecx+0x43],1
  433bcd:	out    0x3a,eax
  433bcf:	dec    ebx
  433bd0:	cmp    al,0x6f
  433bd2:	sbb    esi,esp
  433bd4:	mov    bl,0x18
  433bd6:	push   ds
  433bd7:	adc    al,BYTE PTR [edi]
  433bd9:	mov    ecx,0x6f9c472f
  433bde:	das    
  433bdf:	(bad)  
  433be0:	jmp    0x10e2dfcb
  433be5:	shl    ch,0x93
  433be8:	sbb    BYTE PTR [edi+eiz*1-0x1b43fac4],bh
  433bef:	or     ecx,DWORD PTR [ebp+0x58]
  433bf2:	neg    ebp
  433bf4:	icebp  
  433bf5:	xchg   edi,eax
  433bf6:	mov    ah,0x8
  433bf8:	popa   
  433bf9:	inc    ebp
  433bfa:	cmp    DWORD PTR [ecx+esi*8+0x2c20699f],esp
  433c01:	scas   eax,DWORD PTR es:[edi]
  433c02:	into   
  433c03:	ficom  DWORD PTR [edx]
  433c05:	hlt    
  433c06:	pop    eax
  433c07:	loope  0x433b98
  433c09:	aam    0x99
  433c0b:	idiv   DWORD PTR [di]
  433c0e:	lds    ebx,FWORD PTR [ebp-0x2c]
  433c11:	popa   
  433c12:	clc    
  433c13:	mov    DWORD PTR [edi+0x7f6bd2fd],esp
  433c19:	mov    al,0xd8
  433c1b:	sbb    al,0xe2
  433c1d:	and    al,0x87
  433c1f:	pop    esi
  433c20:	jbe    0x433bd4
  433c22:	cmp    al,BYTE PTR [esi-0x56d96fc0]
  433c28:	out    dx,al
  433c29:	sub    al,0xcb
  433c2b:	iret   
  433c2c:	mov    ch,0xe8
  433c2e:	enter  0xafec,0x9a
  433c32:	mov    bl,0x33
  433c34:	sbb    esi,DWORD PTR [edi]
  433c36:	or     al,0xc7
  433c38:	push   esi
  433c39:	mov    esi,0x528bd1e8
  433c3e:	mov    ch,0x30
  433c40:	and    eax,0x14
  433c43:	sbb    al,0xfc
  433c45:	mov    ebp,cs
  433c47:	push   sp
  433c49:	mov    edx,0x5f2bf314
  433c4e:	retf   0xebd0
  433c51:	js     0x433cb8
  433c53:	pop    esi
  433c54:	mov    bl,0x33
  433c56:	call   0x20c91485
  433c5b:	jmp    0x433c77
  433c5d:	daa    
  433c5e:	or     DWORD PTR [edx-0x6d],0x3c
  433c62:	xchg   ecx,eax
  433c63:	inc    esp
  433c64:	pop    es
  433c65:	inc    edi
  433c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433c67:	into   
  433c68:	jne    0x433bfb
  433c6a:	int3   
  433c6b:	stos   DWORD PTR es:[edi],eax
  433c6c:	push   0x93a61ccd
  433c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433c72:	(bad)  
  433c74:	and    cl,BYTE PTR [eax+edi*4+0x596ed379]
  433c7b:	mov    ebp,0x61340a8e
  433c80:	mov    bl,0x53
  433c82:	adc    BYTE PTR [edi-0x7d],bh
  433c85:	(bad)  
  433c86:	leave  
  433c87:	pop    eax
  433c88:	aaa    
  433c89:	mov    ah,cl
  433c8b:	sahf   
  433c8c:	mov    edx,0x7c95cc6a
  433c91:	cs jo  0x433c86
  433c94:	dec    esi
  433c95:	xor    eax,0xa064f2f6
  433c9a:	sbb    BYTE PTR [ebx-0x1],dh
  433c9d:	dec    edi
  433c9e:	or     DWORD PTR [edx+esi*2],edx
  433ca1:	inc    esp
  433ca2:	(bad)  
  433ca3:	(bad)  [edi+ecx*1+0x1bf5336c]
  433caa:	popf   
  433cab:	ins    BYTE PTR es:[edi],dx
  433cac:	dec    eax
  433cad:	in     al,dx
  433cae:	jno    0x433d09
  433cb0:	retf   
  433cb1:	sbb    bh,ah
  433cb3:	lods   eax,DWORD PTR ds:[esi]
  433cb4:	nop
  433cb5:	and    eax,0xa6ad2701
  433cba:	ins    DWORD PTR es:[edi],dx
  433cbb:	fnstcw WORD PTR [eax-0x4c]
  433cbe:	push   ecx
  433cbf:	leave  
  433cc0:	scas   al,BYTE PTR es:[edi]
  433cc1:	lods   al,BYTE PTR ds:[esi]
  433cc2:	nop
  433cc3:	rol    DWORD PTR [ecx-0x5a],cl
  433cc6:	fdivr  DWORD PTR [edx+edi*8-0x770b2ab0]
  433ccd:	loop   0x433d23
  433ccf:	cld    
  433cd0:	sahf   
  433cd1:	mov    bh,0x61
  433cd3:	xchg   edi,eax
  433cd4:	mov    ds:0xa4395dc7,eax
  433cd9:	inc    esp
  433cda:	cmovns ebx,DWORD PTR [eax]
  433cdd:	fdiv   DWORD PTR [esi+0x5c86310]
  433ce3:	jle    0x433d35
  433ce5:	push   ds
  433ce6:	push   ecx
  433ce7:	jecxz  0x433c93
  433ce9:	dec    edi
  433cea:	in     al,dx
  433ceb:	pop    esi
  433cec:	push   ebp
  433ced:	mov    WORD PTR ds:0x5c960cd6,?
  433cf3:	adc    BYTE PTR [ebp+0x45],bh
  433cf6:	scas   al,BYTE PTR es:[edi]
  433cf7:	push   cs
  433cf8:	xchg   ebx,eax
  433cf9:	jae    0x433ce5
  433cfb:	lock mov eax,0xc6ed4903
  433d01:	and    ch,BYTE PTR [edx]
  433d03:	inc    edx
  433d04:	or     esp,ebx
  433d06:	add    DWORD PTR [edx],edi
  433d08:	pop    esp
  433d09:	arpl   WORD PTR [esp+esi*8-0x2bff06dc],bp
  433d10:	inc    edx
  433d11:	or     DWORD PTR ds:0x2fa058f8,edi
  433d17:	and    al,0xf7
  433d19:	inc    eax
  433d1a:	xor    dh,0x57
  433d1d:	sub    eax,0xad48059e
  433d22:	rcl    edx,cl
  433d24:	or     al,0x35
  433d26:	xchg   esi,eax
  433d27:	mov    bh,BYTE PTR [ebp+0x6af1a5f0]
  433d2d:	ficom  WORD PTR es:[eax-0x46eb42d8]
  433d34:	into   
  433d35:	sbb    eax,0x2f6cd638
  433d3a:	adc    BYTE PTR [eax],bh
  433d3c:	xor    edx,DWORD PTR [ebx+0x3b558c94]
  433d42:	retf   0x5c97
  433d45:	inc    BYTE PTR [ebx+edx*2+0x536b9b4f]
  433d4c:	jo     0x433d52
  433d4e:	xchg   DWORD PTR [esi-0x48],edx
  433d51:	loope  0x433db4
  433d53:	mov    ds:0x1428c4fb,eax
  433d58:	dec    ebp
  433d59:	jno    0x433d35
  433d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433d5c:	loop   0x433d01
  433d5e:	add    cl,BYTE PTR [edx+esi*8+0x67]
  433d62:	jnp    0x433d1c
  433d64:	icebp  
  433d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433d66:	cmp    esi,DWORD PTR [edx+0x70]
  433d69:	or     eax,0x7b3d687a
  433d6e:	mov    ds:0xa3943142,eax
  433d73:	cmp    al,0xf2
  433d75:	mov    ch,0xe7
  433d77:	jp     0x433cfb
  433d79:	out    dx,al
  433d7a:	cmp    al,0xc1
  433d7c:	mov    dh,0x95
  433d7e:	cmp    ebx,DWORD PTR [ecx+0x363a6e]
  433d84:	add    BYTE PTR [eax],al
  433d86:	add    BYTE PTR [eax],al
  433d88:	add    eax,0x51456817
  433d8d:	or     DWORD PTR [eax],eax
  433d8f:	add    BYTE PTR [eax],al
  433d91:	add    BYTE PTR [eax],al
  433d93:	add    BYTE PTR [ecx+0x9],dl
  433d96:	add    BYTE PTR [eax],al
  433d98:	inc    esp
  433d99:	add    BYTE PTR [esi],ah
  433d9b:	jl     0x433d9d
  433d9d:	add    dh,BYTE PTR [esi]
  433d9f:	or     BYTE PTR [eax],al
  433da1:	add    ah,al
  433da3:	inc    ebp
  433da4:	add    BYTE PTR [ebp+0xa74b8ce],ah
  433daa:	sbb    al,0x7d
  433dac:	mov    ecx,0xc24ef424
  433db1:	fadd   st(5),st
  433db3:	adc    al,0x63
  433db5:	dec    ebx
  433db6:	dec    eax
  433db7:	shr    DWORD PTR [ecx+0x55],1
  433dba:	jg     0x433da4
  433dbc:	fimul  WORD PTR [ecx+0x39316c7c]
  433dc2:	mov    BYTE PTR [edx-0x47a9a5d9],ah
  433dc8:	nop
  433dc9:	out    dx,al
  433dca:	mov    dl,0xfa
  433dcc:	xchg   BYTE PTR [edx+0x384c101c],al
  433dd2:	int3   
  433dd3:	cmp    DWORD PTR [ebx-0x20],esp
  433dd6:	out    dx,eax
  433dd7:	nop
  433dd8:	add    ecx,DWORD PTR [ecx-0x2cbc69a4]
  433dde:	das    
  433ddf:	jmp    0x433e04
  433de1:	jmp    0x433de6
  433de3:	and    BYTE PTR [ecx-0x11],0x37
  433de7:	stos   DWORD PTR es:[edi],eax
  433de8:	stos   BYTE PTR es:[edi],al
  433de9:	cmp    ch,BYTE PTR [ecx+0x4]
  433dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433ded:	ss ins BYTE PTR es:[edi],dx
  433def:	push   ebx
  433df0:	mov    eax,ds:0xb8fe5856
  433df5:	dec    esp
  433df6:	and    ebx,ecx
  433df8:	call   0x70eb:0xc264ea5f
  433dff:	ret    0x1de1
  433e02:	push   cs
  433e03:	jmp    0x94cc0fc7
  433e08:	push   ss
  433e09:	sbb    BYTE PTR [eax-0x7d556125],ah
  433e0f:	and    al,0xb8
  433e11:	pop    ds
  433e12:	cmc    
  433e13:	repnz pop ds
  433e15:	pop    es
  433e16:	mov    ebx,0x9edc5819
  433e1b:	fnstsw WORD PTR [ebp+0x2f]
  433e1e:	mov    DWORD PTR [edi+0x2e],ecx
  433e21:	cmp    BYTE PTR [ebx+edi*1-0x32834884],al
  433e28:	adc    al,0x12
  433e2a:	push   edi
  433e2b:	test   al,0x17
  433e2d:	int3   
  433e2e:	std    
  433e2f:	fst    QWORD PTR [ecx+ebx*1+0x73ccd00b]
  433e36:	pop    edx
  433e37:	mov    esp,gs
  433e39:	sbb    DWORD PTR [ebp+0x30f0a9c4],esp
  433e3f:	ins    BYTE PTR es:[edi],dx
  433e40:	mov    ds:0x223780bc,eax
  433e45:	cwde   
  433e46:	adc    al,0xc4
  433e48:	cmp    eax,ebp
  433e4a:	xchg   edi,eax
  433e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433e4c:	rol    DWORD PTR [edx+0x97cbceb],0x46
  433e53:	sub    BYTE PTR [ebx-0x1f15ee46],cl
  433e59:	in     al,dx
  433e5a:	shl    cl,0x37
  433e5d:	add    al,0xb4
  433e5f:	in     al,0xa8
  433e61:	add    al,0x99
  433e63:	cmp    cl,BYTE PTR [eax-0xc]
  433e66:	jle    0x433de8
  433e68:	mov    bh,0xe0
  433e6a:	sub    BYTE PTR [esi-0x761cd109],dl
  433e70:	sbb    BYTE PTR [ecx-0x71],dh
  433e73:	shr    BYTE PTR [esi+0x3b],1
  433e76:	push   edi
  433e77:	(bad)  ds:0xf46fdfc5
  433e7d:	test   BYTE PTR [edi+0x3c6edcc4],ah
  433e83:	stc    
  433e84:	lods   eax,DWORD PTR ds:[esi]
  433e85:	sbb    dh,bl
  433e87:	cld    
  433e88:	mov    eax,0x1b30083b
  433e8d:	sar    DWORD PTR [eax+ecx*4],cl
  433e90:	xchg   edx,eax
  433e91:	iret   
  433e92:	sar    BYTE PTR [ebx+edi*2],0xc3
  433e96:	(bad)  [eax+0x49]
  433e99:	mov    edi,0x7c729e57
  433e9e:	and    BYTE PTR ds:0x635caf08,bh
  433ea4:	popa   
  433ea5:	mov    esp,0x2c7de0cd
  433eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433eab:	sbb    eax,0x43acdeea
  433eb0:	ins    BYTE PTR es:[edi],dx
  433eb1:	mov    ch,0x50
  433eb3:	ret    0xda51
  433eb6:	cmp    dl,BYTE PTR [ebx+0x30]
  433eb9:	cmp    eax,0x260e741e
  433ebe:	mov    dl,0x58
  433ec0:	push   ebx
  433ec1:	mov    edx,0x831cb390
  433ec6:	inc    ecx
  433ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433ec8:	sbb    eax,0xd4529d26
  433ecd:	inc    eax
  433ece:	pop    ds
  433ecf:	scas   eax,DWORD PTR es:[edi]
  433ed0:	sub    al,0x4
  433ed2:	or     BYTE PTR [eax+esi*8-0x42],ch
  433ed6:	fs mov dh,0x1f
  433ed9:	add    ecx,DWORD PTR [ecx]
  433edb:	out    0x62,al
  433edd:	ret    0x888a
  433ee0:	mov    bh,0x17
  433ee2:	cmp    bh,BYTE PTR [esp+ebx*2-0x39]
  433ee6:	mov    bl,0x1e
  433ee8:	lods   al,BYTE PTR ds:[esi]
  433ee9:	clc    
  433eea:	loop   0x433f0a
  433eec:	sbb    ebx,eax
  433eee:	imul   ebp,DWORD PTR [edx],0x78a454ad
  433ef4:	loope  0x433e77
  433ef6:	push   ebx
  433ef7:	lock pop esp
  433ef9:	xor    eax,0x2b9b6578
  433efe:	push   ecx
  433eff:	shl    DWORD PTR [edi-0x2163b964],cl
  433f05:	das    
  433f06:	xchg   ecx,eax
  433f07:	lods   eax,DWORD PTR ds:[esi]
  433f08:	gs pop esp
  433f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433f0b:	add    al,al
  433f0d:	popa   
  433f0e:	mov    cl,BYTE PTR [edi+edx*4+0x5fc80255]
  433f15:	in     al,0x8c
  433f17:	adc    ch,al
  433f19:	mov    ebx,0x92f089f0
  433f1e:	mov    WORD PTR [edi],fs
  433f20:	mov    ds:0xae780b2b,eax
  433f25:	lahf   
  433f26:	or     BYTE PTR [eax+0x5b452e43],dh
  433f2c:	dec    DWORD PTR [edx+0x68]
  433f2f:	mov    edi,0x9209d5d4
  433f34:	inc    esp
  433f35:	adc    DWORD PTR [esi],eax
  433f37:	das    
  433f38:	fdivp  st(0),st
  433f3a:	dec    esp
  433f3b:	nop
  433f3c:	xor    eax,0xa0334b69
  433f41:	test   al,0xa0
  433f43:	mov    al,0xfb
  433f45:	push   0x8103faf1
  433f4a:	mov    ebp,0x96d5acc4
  433f4f:	test   DWORD PTR [ebp-0x43],edi
  433f52:	push   ds
  433f53:	xchg   esi,eax
  433f54:	call   0x369f5d02
  433f59:	gs lahf 
  433f5b:	xchg   edx,eax
  433f5c:	xchg   esi,eax
  433f5d:	or     al,0x25
  433f5f:	mov    al,0x67
  433f61:	jbe    0x433f00
  433f63:	dec    ecx
  433f64:	xrelease xchg BYTE PTR [eax],dh
  433f67:	push   esi
  433f68:	enter  0xfc93,0xb8
  433f6c:	outs   dx,BYTE PTR ds:[esi]
  433f6d:	push   edi
  433f6e:	dec    esp
  433f6f:	fmul   DWORD PTR [ebx+edx*4+0xe0fa862]
  433f76:	jp     0x433f2d
  433f78:	cld    
  433f79:	std    
  433f7a:	pop    edx
  433f7b:	jo     0x433f30
  433f7d:	(bad)  
  433f7e:	addr16 pop esp
  433f80:	pop    ebp
  433f81:	and    ch,bh
  433f83:	ficomp DWORD PTR [ecx+0xc]
  433f86:	imul   ebp,DWORD PTR [edx+0x844763a],0xffffffca
  433f8d:	push   0x7578ed72
  433f92:	ret    
  433f93:	in     al,dx
  433f94:	(bad)  
  433f95:	in     eax,dx
  433f96:	neg    BYTE PTR [ebx+0x20]
  433f99:	ins    BYTE PTR es:[edi],dx
  433f9a:	std    
  433f9b:	test   al,0x10
  433f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433f9e:	adc    esp,DWORD PTR [edi+0x5d]
  433fa1:	inc    ebx
  433fa2:	test   eax,0x8f34f7fc
  433fa7:	jge    0x434017
  433fa9:	pop    esp
  433faa:	add    DWORD PTR [ecx+0x18],edx
  433fad:	jo     0x434007
  433faf:	out    0x40,eax
  433fb1:	sub    BYTE PTR [edi-0x1d],ch
  433fb4:	push   cs
  433fb5:	adc    BYTE PTR [esp+edi*2-0x55],ah
  433fb9:	sub    ch,cl
  433fbb:	push   edi
  433fbc:	ds mov ?,ebx
  433fbf:	stos   DWORD PTR es:[edi],eax
  433fc0:	and    al,0xc8
  433fc2:	xchg   ebp,eax
  433fc3:	lock iret 
  433fc5:	cmp    al,0xc1
  433fc7:	inc    ebp
  433fc8:	loope  0x434012
  433fca:	push   ecx
  433fcb:	ds pop esp
  433fcd:	fild   QWORD PTR ds:0xc36cc285
  433fd4:	pop    ebp
  433fd5:	ss sub esp,ecx
  433fd8:	jo     0x433fa4
  433fda:	arpl   WORD PTR [eax-0x289c9875],dx
  433fe0:	or     DWORD PTR [eax],edx
  433fe2:	mov    ch,0x7d
  433fe4:	mov    ah,0x97
  433fe6:	mov    esp,0x70b2e7ba
  433feb:	ret    
  433fec:	push   ds
  433fed:	pop    esp
  433fee:	mov    eax,0xbe2da3f1
  433ff3:	push   ebp
  433ff4:	js     0x434026
  433ff6:	add    BYTE PTR [ecx+ebx*1],0x94
  433ffa:	adc    al,0xb3
  433ffc:	jmp    0x82e7acea
  434001:	scas   eax,DWORD PTR es:[edi]
  434002:	adc    eax,0x8bd2b84a
  434007:	pop    esp
  434008:	enter  0x5b2d,0xf5
  43400c:	cld    
  43400d:	je     0x43408c
  43400f:	fld    QWORD PTR [esi+0x70]
  434012:	dec    ebx
  434013:	xor    edi,ecx
  434015:	mov    DWORD PTR [esi-0x6bbb2b75],ebx
  43401b:	pusha  
  43401c:	ror    BYTE PTR [ebp+0x4a],cl
  43401f:	(bad)  
  434020:	jge    0x433fb1
  434022:	hlt    
  434023:	mov    eax,0x91b33415
  434028:	leave  
  434029:	ror    DWORD PTR [edx],cl
  43402b:	popa   
  43402c:	fmul   QWORD PTR [edi+0x4890fb83]
  434032:	loop   0x434029
  434034:	xchg   esi,eax
  434035:	add    BYTE PTR [eax-0x51],ah
  434038:	mov    esi,0xc408bd7f
  43403d:	ss test al,0x76
  434040:	mov    ds:0xbb030ff6,eax
  434045:	or     BYTE PTR ds:0xc69260cc,ch
  43404b:	nop
  43404c:	dec    edx
  43404d:	ins    BYTE PTR es:[edi],dx
  43404e:	inc    edi
  43404f:	arpl   ax,si
  434051:	ds sti 
  434053:	jl     0x433ffd
  434055:	sub    BYTE PTR [esi-0x2d],cl
  434058:	sbb    eax,0xbc001014
  43405d:	jl     0x434078
  43405f:	aam    0x5d
  434061:	adc    eax,0x2ad69dbc
  434066:	dec    eax
  434067:	outs   dx,BYTE PTR ds:[esi]
  434068:	adc    esi,DWORD PTR [edx-0x17151f39]
  43406e:	enter  0x672a,0x97
  434072:	add    bh,BYTE PTR [ecx]
  434074:	add    al,0x1f
  434076:	mov    bh,bl
  434078:	rcl    BYTE PTR [esi],0x24
  43407b:	jle    0x43403b
  43407d:	sub    BYTE PTR [ecx],ah
  43407f:	push   0xffffffba
  434081:	push   ebp
  434082:	leave  
  434083:	add    ebx,DWORD PTR ds:0xce344c61
  434089:	imul   ecx,DWORD PTR [ebp-0x4f2750e8],0x4b83cff4
  434093:	cmp    al,0x4e
  434095:	cld    
  434096:	ds jmp 0x63514cb4
  43409c:	or     dl,BYTE PTR [ebx]
  43409e:	sti    
  43409f:	mov    edx,0xe0f33c10
  4340a4:	inc    edi
  4340a5:	xchg   esp,eax
  4340a6:	(bad)  
  4340a7:	push   ds
  4340a8:	sbb    esp,0x8fb2da60
  4340ae:	push   eax
  4340af:	cmc    
  4340b0:	pop    ss
  4340b1:	cmp    eax,0x5fb4848e
  4340b6:	cmc    
  4340b7:	adc    bl,ah
  4340b9:	ret    
  4340ba:	(bad)  
  4340bb:	into   
  4340bc:	sub    al,0x48
  4340be:	arpl   WORD PTR ds:0x2076207d,ax
  4340c5:	push   eax
  4340c6:	and    al,0x55
  4340c8:	or     ah,BYTE PTR [esi]
  4340ca:	xor    BYTE PTR ds:[edi-0x638f8bb5],dh
  4340d1:	(bad)
  4340d4:	dec    edx
  4340d5:	(bad)  
  4340d6:	mov    dh,0x98
  4340d8:	sbb    bl,BYTE PTR [ebx-0x58]
  4340db:	cmp    dh,BYTE PTR [eax+0x40a6e3b0]
  4340e1:	pop    ecx
  4340e2:	lock cs xchg esi,eax
  4340e5:	adc    BYTE PTR [edx+0x3e],bl
  4340e8:	call   0x278be051
  4340ed:	xor    DWORD PTR ds:0x88ed9fdc,edi
  4340f3:	push   ebp
  4340f4:	dec    edx
  4340f5:	mov    ds:0xfde93f0f,eax
  4340fa:	das    
  4340fb:	lods   al,BYTE PTR ds:[esi]
  4340fc:	push   0x3e
  4340fe:	into   
  4340ff:	ja     0x43409d
  434101:	push   esi
  434102:	jp     0x43414b
  434104:	ror    BYTE PTR [ebp-0x186eb563],1
  43410a:	cmp    al,0x45
  43410c:	xor    al,0x78
  43410e:	pushf  
  43410f:	lods   al,BYTE PTR ds:[esi]
  434110:	aas    
  434111:	jnp    0x4340f8
  434113:	lahf   
  434114:	sbb    esi,DWORD PTR [edx-0x64]
  434117:	and    al,0xeb
  434119:	cmp    ch,BYTE PTR [ecx]
  43411b:	mov    ecx,0xc0469ac7
  434120:	out    dx,eax
  434121:	cdq    
  434122:	enter  0x161f,0xba
  434126:	xchg   ecx,eax
  434127:	clc    
  434128:	in     al,0x21
  43412a:	mov    cl,0xbd
  43412c:	pop    eax
  43412d:	retf   
  43412e:	mov    dh,0x5e
  434130:	ror    DWORD PTR [eax+eax*8-0x7a5c0b54],cl
  434137:	dec    edx
  434138:	inc    ecx
  434139:	lds    esi,FWORD PTR [eax-0x3951c590]
  43413f:	sbb    eax,0xd428093d
  434144:	fdivr  QWORD PTR [edx-0x768fe916]
  43414a:	mov    edx,0x45fef804
  43414f:	cwde   
  434150:	nop
  434151:	dec    esp
  434152:	add    DWORD PTR [esp+0x1c],esp
  434156:	faddp  st(5),st
  434158:	jecxz  0x43419e
  43415a:	(bad)  
  43415b:	aad    0x49
  43415d:	repnz (bad) 
  43415f:	shl    BYTE PTR [edx],0x8c
  434162:	dec    edi
  434163:	dec    esi
  434164:	(bad)  
  434165:	xchg   esi,eax
  434166:	cs call 0xe27f25f
  43416c:	test   eax,esp
  43416e:	mov    dl,0x27
  434170:	or     al,0xcd
  434172:	sbb    BYTE PTR [eax-0x3d9ba80f],dh
  434178:	push   ecx
  434179:	xor    BYTE PTR [esi-0x42c0a608],bh
  43417f:	inc    edx
  434180:	and    DWORD PTR [ebp-0x17c4a028],eax
  434186:	inc    eax
  434187:	sub    al,0x81
  434189:	fdiv   DWORD PTR [ebx-0x4]
  43418c:	scas   eax,DWORD PTR es:[edi]
  43418d:	jbe    0x4341a9
  43418f:	cwde   
  434190:	and    edi,DWORD PTR [esi+eiz*1]
  434193:	sbb    ah,BYTE PTR [eax]
  434195:	add    BYTE PTR [edx-0x3a],0x14
  434199:	mov    ebp,DWORD PTR [esp+edx*1]
  43419c:	loope  0x4341e2
  43419e:	pop    esi
  43419f:	jns    0x43418a
  4341a1:	pop    ss
  4341a2:	dec    esi
  4341a3:	push   0x47
  4341a5:	jmp    0x43420f
  4341a7:	mov    cl,0xce
  4341a9:	js     0x434144
  4341ab:	mov    eax,ds:0x10259a77
  4341b0:	jl     0x434176
  4341b2:	stos   DWORD PTR es:[edi],eax
  4341b3:	sub    BYTE PTR [eax+0x34f3abce],0x50
  4341ba:	cmp    ebx,DWORD PTR [ebx+0x19]
  4341bd:	jg     0x4341b4
  4341bf:	mov    ecx,0x5b72585b
  4341c4:	xchg   DWORD PTR [edi],ecx
  4341c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4341c7:	and    eax,0xc17ca1ed
  4341cc:	xchg   esi,eax
  4341cd:	pop    ss
  4341ce:	popa   
  4341cf:	or     eax,DWORD PTR [esi]
  4341d1:	popa   
  4341d2:	inc    edx
  4341d3:	mov    al,ds:0x27b92a39
  4341d8:	dec    esp
  4341d9:	repnz outs dx,DWORD PTR ds:[esi]
  4341db:	dec    edx
  4341dc:	dec    eax
  4341dd:	jae    0x4341d0
  4341df:	push   esi
  4341e0:	sbb    DWORD PTR [ecx],edx
  4341e2:	pop    ss
  4341e3:	fidiv  DWORD PTR [ecx+0x6c]
  4341e6:	sbb    DWORD PTR [edi],0xffffff86
  4341e9:	sbb    al,0x4
  4341eb:	inc    esi
  4341ec:	out    0x6,eax
  4341ee:	nop
  4341ef:	(bad)  [ebp-0x77977584]
  4341f5:	out    dx,al
  4341f6:	jbe    0x4341ac
  4341f8:	clc    
  4341f9:	clc    
  4341fa:	add    ch,BYTE PTR [esi-0x6f]
  4341fd:	js     0x4341be
  4341ff:	es pop esp
  434201:	mov    ebp,0x1c69dc45
  434206:	xchg   ecx,eax
  434207:	mov    dh,BYTE PTR [ebx-0x80]
  43420a:	jno    0x434203
  43420c:	js     0x434229
  43420e:	mov    bl,0x0
  434210:	popa   
  434211:	popa   
  434212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434213:	cmp    al,0x74
  434215:	aaa    
  434216:	adc    ebp,DWORD PTR [esi-0x375b1b40]
  43421c:	aad    0x4b
  43421e:	daa    
  43421f:	(bad)  
  434220:	stos   BYTE PTR es:[edi],al
  434221:	setnp  BYTE PTR [ebp+0x465ce9ec]
  434228:	or     al,0xe4
  43422a:	scas   eax,DWORD PTR es:[edi]
  43422b:	lock repz xchg esp,eax
  43422e:	xchg   ecx,eax
  43422f:	imul   edx,DWORD PTR [edi-0x2f7efbd2],0x3c97b86b
  434239:	daa    
  43423a:	(bad)  
  43423b:	xchg   esi,eax
  43423c:	aas    
  43423d:	mov    ch,0x61
  43423f:	fmul   QWORD PTR [ebp+0x4c4794df]
  434245:	ret    0x8e86
  434248:	add    BYTE PTR [edi],ah
  43424a:	cwde   
  43424b:	cs mov dh,0x6d
  43424e:	sub    DWORD PTR [ebx-0x3f],edi
  434251:	test   al,0xe
  434253:	push   edi
  434254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434255:	cs cmp al,0x6b
  434258:	js     0x4342b1
  43425a:	int3   
  43425b:	pop    esi
  43425c:	mov    ch,0x82
  43425e:	bound  esp,QWORD PTR [ecx-0xf3b8bfa]
  434264:	pop    esp
  434265:	inc    ebx
  434266:	lock imul esi,DWORD PTR [eax+esi*2],0x56
  43426b:	dec    eax
  43426c:	adc    al,0x7e
  43426e:	das    
  43426f:	jbe    0x43425c
  434271:	test   DWORD PTR [esi+0x4b385e83],0x645056b4
  43427b:	sbb    al,0xd
  43427d:	mov    dl,0xe0
  43427f:	sbb    ecx,DWORD PTR [esi]
  434281:	shr    ecx,1
  434283:	sub    al,0xac
  434285:	ds mov cl,0x4
  434288:	dec    ebx
  434289:	or     BYTE PTR [edi+0x4d],dh
  43428c:	inc    ebp
  43428d:	dec    edi
  43428e:	lahf   
  43428f:	xlat   BYTE PTR ds:[ebx]
  434290:	sub    cl,ah
  434292:	sbb    al,0x70
  434294:	mov    ds:0x19fde481,eax
  434299:	dec    esp
  43429a:	repz fld DWORD PTR [esi+0x7bfb5907]
  4342a1:	call   0x3e92:0xf9b9b970
  4342a8:	jae    0x4342e1
  4342aa:	push   cs
  4342ab:	sbb    BYTE PTR [eax-0x5d],ah
  4342ae:	push   es
  4342af:	nop
  4342b0:	ds aad 0x6d
  4342b3:	addr16 cmp al,0x5b
  4342b6:	add    bl,BYTE PTR [edi+0x43]
  4342b9:	mov    esi,0x600406f0
  4342be:	mov    al,ds:0xc762c17e
  4342c3:	(bad)  
  4342c4:	and    ch,BYTE PTR [eax-0x7c]
  4342c7:	popf   
  4342c8:	xchg   DWORD PTR [edx+0x7b94e8b6],ecx
  4342ce:	mov    cl,0x2c
  4342d0:	adc    DWORD PTR [esi+0x15],eax
  4342d3:	aas    
  4342d4:	mov    bl,0x94
  4342d6:	cs iret 
  4342d8:	push   eax
  4342d9:	int    0xaa
  4342db:	lea    esp,[ebx]
  4342dd:	les    esp,FWORD PTR [eiz*2-0x20da8bfc]
  4342e4:	stos   DWORD PTR es:[edi],eax
  4342e5:	ret    
  4342e6:	or     eax,0x9839ffa9
  4342eb:	push   ds
  4342ec:	push   edi
  4342ed:	in     al,dx
  4342ee:	push   esi
  4342ef:	cmc    
  4342f0:	les    edx,FWORD PTR [ecx-0x22]
  4342f3:	mov    esp,0x80394027
  4342f8:	call   0xa224:0x64cc4f44
  4342ff:	iret   
  434300:	leave  
  434301:	inc    esi
  434302:	lea    esi,[edx+ebx*8]
  434305:	mov    ch,ah
  434307:	or     DWORD PTR es:[esi-0x6],edi
  43430b:	rcl    BYTE PTR [ecx],0xe8
  43430e:	lods   al,BYTE PTR ds:[esi]
  43430f:	fdiv   QWORD PTR [eax+esi*1+0x1d2ae3ea]
  434316:	dec    edx
  434317:	shl    BYTE PTR [ecx],1
  434319:	in     eax,0x3d
  43431b:	ins    BYTE PTR es:[edi],dx
  43431c:	add    BYTE PTR [eax],cl
  43431e:	out    dx,al
  43431f:	bound  edi,QWORD PTR [eax-0x2a]
  434322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434323:	jl     0x4342de
  434325:	inc    edi
  434326:	pop    ebx
  434327:	mov    edi,0xf7609c4c
  43432c:	mov    ah,BYTE PTR [ebp+0xd9d6752]
  434332:	rol    BYTE PTR [ecx+0x6e],0xb7
  434336:	sar    BYTE PTR [ebx+0x5],0x9a
  43433a:	dec    eax
  43433b:	in     al,0xf5
  43433d:	pushf  
  43433e:	mov    eax,ds:0xa956e551
  434343:	push   ecx
  434344:	or     BYTE PTR [edx],cl
  434346:	daa    
  434347:	in     al,dx
  434348:	aam    0x95
  43434a:	and    ch,ch
  43434c:	inc    ebp
  43434d:	mov    al,0xcd
  43434f:	push   ebx
  434350:	nop
  434351:	cwd    
  434353:	fidiv  DWORD PTR [ecx]
  434355:	pop    edi
  434356:	aam    0x1e
  434358:	je     0x43436c
  43435a:	int3   
  43435b:	cmp    DWORD PTR [esi+0x55],edi
  43435e:	push   eax
  43435f:	clc    
  434360:	sbb    al,0xcc
  434362:	in     eax,0x6a
  434364:	and    eax,0x1c3e60d9
  434369:	and    bl,BYTE PTR [esi]
  43436b:	and    edx,ebp
  43436d:	mov    bh,0x85
  43436f:	std    
  434370:	test   eax,0x5b5fe540
  434375:	or     eax,ecx
  434377:	xor    al,0x60
  434379:	mov    eax,ds:0x934dede8
  43437e:	retf   0x8322
  434381:	add    DWORD PTR [edx+0x3449a70c],ecx
  434387:	jge    0x4343a6
  434389:	dec    ebx
  43438a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43438b:	inc    eax
  43438c:	xor    BYTE PTR [edi-0x5d026453],cl
  434392:	push   eax
  434393:	inc    edx
  434394:	test   BYTE PTR [esp+edx*4+0x64],dl
  434398:	and    eax,edx
  43439a:	add    edx,DWORD PTR [edi+esi*1-0x61]
  43439e:	cld    
  43439f:	cdq    
  4343a0:	xchg   ebx,eax
  4343a1:	test   eax,0xe01d64bf
  4343a6:	cmp    DWORD PTR [eax],esp
  4343a8:	je     0x59acde9b
  4343ae:	xor    BYTE PTR [edi+0x2167d344],dl
  4343b4:	xchg   ecx,eax
  4343b5:	inc    ebp
  4343b6:	cs int 0x7e
  4343b9:	push   0x65f8306
  4343be:	je     0x4343a8
  4343c0:	and    BYTE PTR ds:[esi+eax*8+0x616a7d63],cl
  4343c8:	sub    eax,0xdd3c3442
  4343ce:	and    DWORD PTR [esi+0x1d248d66],0x1cd1858
  4343d8:	mov    bl,0xf0
  4343da:	sbb    eax,0xbd7ca074
  4343df:	sub    ah,BYTE PTR [esi-0x28]
  4343e2:	mov    ebp,0xa09344fe
  4343e7:	mov    ds:0x352e0c79,al
  4343ec:	ss inc ebx
  4343ee:	in     eax,dx
  4343ef:	dec    eax
  4343f0:	jno    0x434451
  4343f2:	mov    ecx,0xacf710fa
  4343f7:	and    DWORD PTR [ecx+edx*1-0x5c],ebp
  4343fb:	dec    BYTE PTR [esi]
  4343fd:	inc    ebp
  4343fe:	div    DWORD PTR ds:0x2eda9064
  434404:	adc    DWORD PTR [edi+0x17a94214],esi
  43440a:	mov    ah,0xc2
  43440c:	sub    eax,0xf9342e08
  434411:	mov    esp,0xd7c0d8c3
  434416:	push   cs
  434417:	rol    ah,cl
  434419:	fdivr  st,st(1)
  43441b:	ret    0x9d80
  43441e:	nop
  43441f:	cmp    esp,esi
  434421:	sbb    DWORD PTR [ebx],ebp
  434423:	aas    
  434424:	mul    BYTE PTR [esi+ecx*2+0x3b6e0ef0]
  43442b:	inc    esi
  43442c:	dec    eax
  43442d:	inc    edi
  43442e:	enter  0xb3a,0x7
  434432:	and    eax,0xd0542a9d
  434437:	in     al,dx
  434438:	dec    ebx
  434439:	fldenv [esi-0x55]
  43443c:	icebp  
  43443d:	mov    edi,0x431027fa
  434442:	daa    
  434443:	(bad)  
  434444:	les    esp,FWORD PTR [edx]
  434446:	mov    eax,ds:0xaab88d53
  43444b:	pop    edi
  43444c:	mov    ss,WORD PTR [ebx]
  43444e:	hlt    
  43444f:	cmc    
  434450:	lock mov ebx,0x81720dc
  434456:	xor    eax,0xc28a10df
  43445b:	add    ch,dh
  43445d:	sbb    esp,DWORD PTR [esi+esi*8+0x75]
  434461:	dec    ebp
  434462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434463:	mov    dh,0x24
  434465:	and    DWORD PTR [esi-0x48],esi
  434468:	fsub   st(2),st
  43446a:	cmc    
  43446b:	xor    DWORD PTR [esi],0x5b7f73cc
  434471:	xchg   BYTE PTR [ecx],dl
  434473:	stos   DWORD PTR es:[edi],eax
  434474:	popf   
  434475:	inc    ebp
  434476:	lock cwde 
  434478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434479:	int    0x3b
  43447b:	pop    esi
  43447c:	push   0xef14637c
  434481:	retf   
  434482:	add    al,ch
  434484:	cmp    cl,BYTE PTR [esi+0x6b]
  434487:	jg     0x4344c1
  434489:	dec    ecx
  43448a:	jge    0x43445f
  43448c:	mov    ah,0xde
  43448e:	push   ecx
  43448f:	mov    ebp,0x60d35cc0
  434494:	pop    ds
  434495:	rcl    DWORD PTR [ecx],1
  434497:	das    
  434498:	retf   
  434499:	mov    dh,0x4
  43449b:	xor    al,0xb4
  43449d:	push   0x31
  43449f:	and    al,BYTE PTR [ebp-0x71d7f44a]
  4344a5:	outs   dx,BYTE PTR ds:[esi]
  4344a6:	in     eax,0x11
  4344a8:	call   0x4d27de28
  4344ad:	loop   0x4344ad
  4344af:	xor    ch,BYTE PTR [esi+0x5f0dfbe0]
  4344b5:	jo     0x434507
  4344b7:	inc    edx
  4344b8:	xor    edi,ebx
  4344ba:	inc    esp
  4344bb:	repnz (bad) 
  4344bd:	lock sbb al,bh
  4344c0:	push   ecx
  4344c1:	aas    
  4344c2:	xor    DWORD PTR [edx+edx*4],0x283c83e0
  4344c9:	retf   0xec0b
  4344cc:	adc    al,0xc8
  4344ce:	sub    DWORD PTR [eax+0x60],esi
  4344d1:	mov    cl,0x6b
  4344d3:	xchg   ebx,eax
  4344d4:	xor    DWORD PTR ds:0x84b57757,ecx
  4344da:	jmp    0x4344cd
  4344dc:	xlat   BYTE PTR ds:[ebx]
  4344dd:	push   ds
  4344de:	jp     0x434550
  4344e0:	fwait
  4344e1:	test   BYTE PTR [eax+0x65275ce],ch
  4344e7:	mov    ebx,0x502967f8
  4344ec:	mov    WORD PTR [ebx-0x35],ds
  4344ef:	out    dx,al
  4344f0:	cs hlt 
  4344f2:	push   es
  4344f3:	push   edi
  4344f4:	je     0x434477
  4344f6:	mov    dh,0x8a
  4344f8:	adc    eax,0xa4e74350
  4344fd:	cwde   
  4344fe:	fcmovnbe st,st(1)
  434500:	icebp  
  434501:	jmp    0x4344d6
  434503:	les    eax,FWORD PTR [edx+0x220fbc51]
  434509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43450a:	es in  eax,dx
  43450c:	add    BYTE PTR [esi-0x8],al
  43450f:	loopne 0x434551
  434511:	test   esi,edx
  434513:	stos   DWORD PTR es:[edi],eax
  434514:	jne    0x434587
  434516:	outs   dx,DWORD PTR ds:[esi]
  434517:	(bad)
  43451b:	outs   dx,DWORD PTR ds:[esi]
  43451c:	fcomip st,st(4)
  43451e:	or     al,BYTE PTR [ebp-0x68175341]
  434524:	out    dx,al
  434525:	sub    eax,0xec687d02
  43452a:	rcl    al,1
  43452c:	push   ss
  43452d:	stos   BYTE PTR es:[edi],al
  43452e:	xor    DWORD PTR [eax],edx
  434530:	cs pop esp
  434532:	pop    eax
  434533:	hlt    
  434534:	xchg   edi,eax
  434535:	xchg   edi,eax
  434536:	rcl    BYTE PTR [edx+0x8],0x2d
  43453a:	mov    dl,0xb
  43453c:	pushf  
  43453d:	mov    esi,0xdd24d1bf
  434542:	lahf   
  434543:	cmp    eax,0xb3a0c064
  434548:	lahf   
  434549:	ffree  st(5)
  43454b:	clc    
  43454c:	rcr    DWORD PTR [ecx-0x1c],0xfa
  434550:	fcmove st,st(7)
  434552:	push   0x93d812e9
  434557:	or     BYTE PTR [edi+edi*4-0x2f],dl
  43455b:	fbstp  TBYTE PTR [esi+0x2c5b9b74]
  434561:	(bad)  
  434562:	mov    DWORD PTR [eax],ecx
  434564:	int    0x5f
  434566:	iret   
  434567:	jg     0x4344f5
  434569:	aam    0xd7
  43456b:	sub    BYTE PTR [ebx+0x4],0xb2
  43456f:	mov    edi,0x10f8043d
  434574:	sub    BYTE PTR [edi+0x5],bh
  434577:	out    0x63,eax
  434579:	push   ss
  43457a:	test   al,0x1c
  43457c:	sbb    al,0x68
  43457e:	push   ss
  43457f:	fild   QWORD PTR [edx+ebp*2+0x3d405d57]
  434586:	aas    
  434587:	stc    
  434588:	push   ecx
  434589:	fucom  st(1)
  43458b:	push   0xd733e8fb
  434590:	xchg   ah,al
  434592:	cmp    dh,bh
  434594:	jle    0x43454f
  434596:	or     al,0xf9
  434598:	inc    ebp
  434599:	(bad)  
  43459a:	xor    esi,DWORD PTR [edx]
  43459c:	cmp    bl,ah
  43459e:	shl    BYTE PTR [eax],1
  4345a0:	call   0x7989c7dd
  4345a5:	pop    ebx
  4345a6:	pushf  
  4345a7:	add    DWORD PTR [esp+eiz*8-0x69],edx
  4345ab:	fcmovne st,st(0)
  4345ad:	icebp  
  4345ae:	into   
  4345af:	int3   
  4345b0:	and    al,0x78
  4345b2:	adc    ah,BYTE PTR [ecx*4-0x30aa22b1]
  4345b9:	and    BYTE PTR gs:[ecx],cl
  4345bc:	test   eax,0x7e34e3d7
  4345c1:	sar    dh,cl
  4345c3:	inc    esp
  4345c4:	mov    dl,0x5
  4345c6:	mov    dh,0x7e
  4345c8:	loope  0x4345de
  4345ca:	xchg   dh,bh
  4345cc:	push   0xdfb09515
  4345d1:	push   esi
  4345d2:	in     eax,0x3a
  4345d4:	xlat   BYTE PTR ds:[ebx]
  4345d5:	mov    WORD PTR [esi+0x15],cs
  4345d8:	sbb    al,0x50
  4345da:	out    0x2b,eax
  4345dc:	xchg   ebp,eax
  4345dd:	dec    ecx
  4345de:	xor    al,0xda
  4345e0:	jns    0x434638
  4345e2:	fisubr WORD PTR [eax+0x58e3cf15]
  4345e8:	or     ecx,ebp
  4345ea:	sti    
  4345eb:	ret    
  4345ec:	nop
  4345ed:	push   ebx
  4345ee:	sbb    al,0x57
  4345f0:	jl     0x4345a4
  4345f2:	stos   DWORD PTR es:[edi],eax
  4345f3:	push   cs
  4345f4:	cmc    
  4345f5:	jg     0x4345b4
  4345f7:	sbb    bh,BYTE PTR [edx]
  4345f9:	mov    al,ds:0xe638e221
  4345fe:	div    edx
  434600:	pop    ebx
  434601:	mov    al,ds:0xc9afb9c4
  434606:	sahf   
  434607:	iret   
  434608:	test   al,0x10
  43460a:	or     DWORD PTR [ebp+edx*4-0x4a],ebp
  43460e:	addr16 push ecx
  434610:	je     0x43461f
  434612:	mov    DWORD PTR [eax+0x1db1e390],edi
  434618:	pop    esi
  434619:	mov    esp,0xb43378eb
  43461e:	and    cl,BYTE PTR [edi]
  434620:	jmp    0xde214a4a
  434625:	and    al,0xd8
  434627:	test   eax,0xfc6c9ba8
  43462c:	fs test al,0xcc
  43462f:	cld    
  434630:	(bad)  
  434631:	mov    bh,0xad
  434633:	iret   
  434634:	ins    BYTE PTR es:[edi],dx
  434635:	jb     0x434625
  434637:	pop    ebp
  434638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434639:	stos   DWORD PTR es:[edi],eax
  43463a:	retf   
  43463b:	sub    DWORD PTR [esi+0x17b510ee],0xffffffc8
  434642:	mov    bh,0xc4
  434644:	pop    esp
  434645:	jmp    0x434625
  434647:	in     eax,dx
  434648:	ficomp DWORD PTR [esp+ebp*8]
  43464b:	sub    eax,0xd6d2aa09
  434650:	pusha  
  434651:	retf   
  434652:	mov    dh,0x10
  434654:	xchg   ebp,eax
  434655:	add    eax,0x702141b4
  43465a:	pop    ebx
  43465b:	enter  0x4ab8,0x60
  43465f:	nop
  434660:	js     0x434605
  434662:	mov    edx,0x7dc28da
  434667:	fsub   DWORD PTR [eax]
  434669:	jnp    0x4346b1
  43466b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43466c:	sti    
  43466d:	xor    eax,DWORD PTR [eax]
  43466f:	xor    eax,0x8f5e883a
  434674:	sbb    eax,0xd92431c3
  434679:	(bad)  [ecx]
  43467b:	aad    0xaa
  43467d:	inc    edi
  43467e:	ja     0x4346df
  434680:	dec    eax
  434681:	in     eax,0x7b
  434683:	xlat   BYTE PTR ds:[ebx]
  434684:	je     0x4346f1
  434686:	pusha  
  434687:	rcr    BYTE PTR [ebp-0x10],cl
  43468a:	push   ss
  43468b:	sbb    al,0x70
  43468d:	int3   
  43468e:	lahf   
  43468f:	fnstenv [ebx+0x21]
  434692:	adc    al,0x94
  434694:	mov    ch,0x5f
  434696:	adc    al,0x2c
  434698:	fcmove st,st(1)
  43469a:	fidivr DWORD PTR [eax]
  43469c:	cmp    eax,0x4f07650f
  4346a1:	cs push 0x37df5cb3
  4346a7:	mov    ah,0xd2
  4346a9:	(bad)  
  4346aa:	adc    DWORD PTR [edx],edx
  4346ac:	mov    edi,0xbdf50504
  4346b1:	imul   ebp,eax,0x72
  4346b4:	lods   al,BYTE PTR ds:[esi]
  4346b5:	sub    BYTE PTR [eax],ch
  4346b7:	and    eax,0xd613a41
  4346bc:	mov    ecx,0xd94cf09d
  4346c1:	(bad)  
  4346c3:	mov    edi,0xb0bf3921
  4346c8:	jo     0x4346bd
  4346ca:	div    esp
  4346cc:	out    dx,al
  4346cd:	push   0x5
  4346cf:	in     al,0x6
  4346d1:	xchg   esp,eax
  4346d2:	or     eax,0x485167e7
  4346d7:	inc    edx
  4346d8:	push   ebp
  4346d9:	xchg   DWORD PTR [ecx+eiz*8],edi
  4346dc:	or     cl,cl
  4346de:	mov    bl,0x2a
  4346e0:	out    0xb4,al
  4346e2:	aaa    
  4346e3:	add    BYTE PTR [eax],al
  4346e5:	add    BYTE PTR [eax],al
  4346e7:	add    BYTE PTR [edx],cl
  4346e9:	sbb    eax,0x9515777
  4346ee:	add    BYTE PTR [eax],al
  4346f0:	add    BYTE PTR [eax],al
  4346f2:	add    BYTE PTR [eax],al
  4346f4:	push   ecx
  4346f5:	or     DWORD PTR [eax],eax
  4346f7:	add    BYTE PTR [ebp+0x0],al
  4346fa:	es jl  0x4346fd
  4346fd:	add    dh,BYTE PTR [esi]
  4346ff:	or     BYTE PTR [eax],al
  434701:	add    ah,al
  434703:	inc    ebp
  434704:	add    BYTE PTR [edx-0x2f2415c],dh
  43470a:	mov    ds:0xd924fb07,al
  43470f:	ret    
  434710:	stos   BYTE PTR es:[edi],al
  434711:	jl     0x43470f
  434713:	and    ebp,ecx
  434715:	inc    edi
  434716:	dec    eax
  434717:	ret    0x81a1
  43471a:	loope  0x43478b
  43471c:	in     eax,dx
  43471d:	popf   
  43471e:	mov    al,0x6c
  434720:	mov    dh,0x23
  434722:	dec    ecx
  434723:	push   ss
  434724:	mov    esp,DWORD PTR [eax]
  434726:	add    BYTE PTR [eax+edx*4-0x7a],ch
  43472a:	dec    esi
  43472b:	push   ecx
  43472c:	sbb    dh,BYTE PTR [edi]
  43472e:	out    dx,al
  43472f:	inc    eax
  434730:	adc    edi,DWORD PTR [eax]
  434732:	in     al,0xb9
  434734:	inc    esp
  434735:	mov    ecx,0x3ecaf9c
  43473a:	pop    esp
  43473b:	ds pop esp
  43473d:	xor    DWORD PTR ds:[esp+edi*1-0x6],eax
  434742:	xlat   BYTE PTR ds:[ebx]
  434743:	sub    BYTE PTR [ebp+0xbeca2a9],0xbc
  43474a:	outs   dx,BYTE PTR ds:[esi]
  43474b:	xor    ah,BYTE PTR [esp+eax*1-0x6219543b]
  434752:	adc    ebp,DWORD PTR [eax+ebx*4]
  434755:	dec    esp
  434756:	sar    BYTE PTR [ebx-0x14],cl
  434759:	pop    ss
  43475a:	pop    edi
  43475b:	repz je 0x434787
  43475e:	jo     0x4347a6
  434760:	xor    al,0x63
  434762:	(bad)  
  434763:	repz imul edi,DWORD PTR [edi+0x62194a4],0x892f588c
  43476e:	aam    0x79
  434770:	mov    eax,0xeb1f688f
  434775:	push   0xdcaadbe8
  43477a:	int3   
  43477b:	sub    BYTE PTR [edi-0x4e],dl
  43477e:	into   
  43477f:	loope  0x434728
  434781:	int3   
  434782:	test   BYTE PTR [ebp+0x3c413e10],dl
  434788:	outs   dx,BYTE PTR ds:[esi]
  434789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43478a:	ins    DWORD PTR es:[edi],dx
  43478b:	test   al,0xee
  43478d:	imul   ecx,DWORD PTR [ecx+0x74],0x8733b873
  434794:	int3   
  434795:	rcl    BYTE PTR [edx],1
  434797:	shr    BYTE PTR [ebp+0x14b86020],1
  43479d:	lock retf 0xe5ad
  4347a1:	xchg   BYTE PTR [ecx+0x14b4768a],bh
  4347a7:	pop    edi
  4347a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347a9:	adc    BYTE PTR [eax],al
  4347ab:	cmp    BYTE PTR ds:0xa1bca3eb,al
  4347b1:	push   edx
  4347b2:	into   
  4347b3:	xor    eax,0xd4d9ea53
  4347b8:	loopne 0x434750
  4347ba:	mul    esi
  4347bc:	dec    edx
  4347bd:	or     eax,0x4fc3dac
  4347c2:	mov    ds:0x70a8cdd8,al
  4347c7:	(bad)  
  4347c8:	mov    edx,0x94f7284e
  4347cd:	lahf   
  4347ce:	shl    DWORD PTR [edi+edi*4],cl
  4347d1:	int3   
  4347d2:	adc    al,0x8d
  4347d5:	iret   
  4347d6:	adc    ebp,DWORD PTR [edi+0x55]
  4347d9:	cmp    eax,0x19f41a23
  4347de:	les    edx,FWORD PTR [ecx]
  4347e0:	neg    BYTE PTR [eax+0x76]
  4347e3:	jge    0x4347bc
  4347e5:	sbb    dl,cl
  4347e7:	and    BYTE PTR [ebx-0x3d],ah
  4347ea:	mov    cl,0x87
  4347ec:	icebp  
  4347ed:	sbb    DWORD PTR [edi+ebp*4],edi
  4347f0:	test   eax,0xc4b5fa39
  4347f5:	gs ret 0xf160
  4347f9:	xchg   ebx,eax
  4347fa:	leave  
  4347fb:	push   esp
  4347fc:	mov    al,ds:0x88e9608
  434801:	mov    BYTE PTR [edi],bh
  434803:	jge    0x4347e6
  434805:	outs   dx,BYTE PTR ds:[esi]
  434806:	(bad)  
  434807:	es push cs
  434809:	sub    al,0x73
  43480b:	or     eax,0x1655ddd3
  434810:	cmp    esi,DWORD PTR [eax+edx*2]
  434813:	cwde   
  434814:	fild   WORD PTR [eax+0x49]
  434817:	scas   al,BYTE PTR es:[edi]
  434818:	cld    
  434819:	loop   0x4347ff
  43481b:	je     0x4347e2
  43481d:	dec    esp
  43481e:	nop
  43481f:	inc    esi
  434820:	xchg   DWORD PTR [ebx],esp
  434822:	inc    edx
  434823:	mov    ebp,0x7c06c81c
  434828:	(bad)
  43482d:	inc    eax
  43482e:	mov    ebx,0x20ac85fc
  434833:	xchg   ecx,eax
  434834:	push   ebp
  434835:	retf   0xa564
  434838:	push   cs
  434839:	push   ebp
  43483a:	mov    ch,0x8
  43483c:	pop    di
  43483e:	jae    0x4347c8
  434840:	neg    DWORD PTR [ecx-0x2d]
  434843:	sbb    al,BYTE PTR [ebp-0x533a9df0]
  434849:	test   DWORD PTR [eax],ebx
  43484b:	cmp    bh,0xd3
  43484e:	sbb    DWORD PTR [edi],edx
  434850:	enter  0x2154,0x39
  434854:	cli    
  434855:	sbb    al,0x93
  434857:	push   ss
  434858:	push   0xfffffff8
  43485a:	js     0x434830
  43485c:	mov    esi,DWORD PTR [ecx-0x4d1ec03b]
  434862:	(bad)  
  434863:	pushf  
  434864:	out    dx,al
  434865:	out    dx,al
  434866:	jp     0x434810
  434868:	push   esp
  434869:	shl    edx,1
  43486b:	mov    eax,0xa9944bc0
  434870:	jmp    0x92d66879
  434875:	in     al,0xb8
  434877:	ss pushf 
  434879:	outs   dx,DWORD PTR ds:[esi]
  43487a:	jmp    0xedd:0x8cd925e6
  434881:	imul   ebp,DWORD PTR [ebp+0x44],0x1
  434885:	xor    ebx,eax
  434887:	mov    al,0x66
  434889:	fstp   TBYTE PTR [ebx]
  43488b:	or     DWORD PTR [ebp+eiz*2-0x4c2b2a0c],eax
  434892:	cli    
  434893:	jl     0x434856
  434895:	sbb    eax,0xf84935e3
  43489a:	pusha  
  43489b:	xor    esi,DWORD PTR [ecx-0x4a3f5a3e]
  4348a1:	fsub   QWORD PTR [eax+0x6956d87a]
  4348a7:	pop    ecx
  4348a8:	repnz or esp,DWORD PTR [ebx+0x6b5b72c4]
  4348af:	xchg   esp,eax
  4348b0:	jmp    0xe8c8673f
  4348b5:	(bad)  
  4348b6:	mov    ecx,0xd5589323
  4348bb:	pop    ds
  4348bc:	out    0xc,al
  4348be:	outs   dx,BYTE PTR ds:[esi]
  4348bf:	gs push 0xfffffff5
  4348c2:	out    dx,al
  4348c3:	fdivr  DWORD PTR [ebp+0x72983014]
  4348c9:	out    dx,al
  4348ca:	xchg   ebx,eax
  4348cb:	dec    edi
  4348cc:	push   ecx
  4348cd:	add    BYTE PTR [eax],al
  4348cf:	fsub   st,st(4)
  4348d1:	sub    dl,BYTE PTR ds:0x45ea1e98
  4348d7:	inc    edx
  4348d8:	cld    
  4348d9:	jmp    FWORD PTR [esi+esi*8+0x5b]
  4348dd:	push   0x2090d3a5
  4348e2:	rol    DWORD PTR [edx],1
  4348e4:	xchg   ebx,eax
  4348e6:	(bad)  
  4348e7:	in     eax,0xf3
  4348e9:	push   ebp
  4348ea:	inc    esp
  4348eb:	aam    0xa8
  4348ed:	xchg   BYTE PTR [ebx+0x20],al
  4348f0:	xor    ah,BYTE PTR [edi+0xecbecec]
  4348f6:	ret    
  4348f7:	add    cl,dl
  4348f9:	pop    esp
  4348fa:	(bad)
  4348fe:	inc    ebp
  4348ff:	stos   DWORD PTR es:[edi],eax
  434900:	dec    DWORD PTR [ebp+0x34039ab1]
  434906:	sbb    esp,DWORD PTR [edx-0x6d657c17]
  43490c:	out    dx,al
  43490d:	std    
  43490e:	pop    eax
  43490f:	lods   eax,DWORD PTR ds:[esi]
  434910:	pop    ecx
  434911:	mov    al,ds:0x15910220
  434916:	adc    DWORD PTR [ecx+edx*2-0x14],edi
  43491a:	mov    edi,0x69d3c664
  43491f:	nop
  434920:	and    al,0xb0
  434922:	xor    esp,eax
  434924:	sub    al,0x81
  434926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434927:	idiv   BYTE PTR [edi+0x75cb9248]
  43492d:	pop    esp
  43492e:	lock adc al,0xe4
  434931:	imul   BYTE PTR [esp+edx*2+0x7]
  434935:	and    ebx,DWORD PTR [edi]
  434937:	adc    BYTE PTR [esi-0x59],dh
  43493a:	mov    esi,0xcba13790
  43493f:	add    eax,0x467e4517
  434944:	mov    ah,0xe9
  434946:	lahf   
  434947:	in     al,0xe3
  434949:	dec    edi
  43494a:	mov    eax,0x45cb91f
  43494f:	imul   esp,DWORD PTR [ecx-0x554e2ea1],0x815280cf
  434959:	mov    ds:0x406f6779,eax
  43495e:	shld   edi,ebx,0x18
  434962:	fs hlt 
  434964:	aad    0x47
  434966:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  434968:	enter  0xf067,0xec
  43496c:	lods   eax,DWORD PTR ds:[esi]
  43496d:	into   
  43496e:	call   0xadb3834c
  434973:	adc    esp,DWORD PTR [edi-0x639d773a]
  434979:	adc    al,0x94
  43497b:	call   0x2b435d5
  434980:	int    0xd6
  434982:	fs mov eax,0xeebd44ef
  434988:	push   0x7c
  43498a:	fistp  QWORD PTR [esi-0x24]
  43498d:	sub    eax,0xd1322b00
  434992:	(bad)  
  434995:	add    BYTE PTR [edi],bl
  434997:	sub    eax,0x62287bd4
  43499c:	and    DWORD PTR [ebx-0x58],esi
  43499f:	sbb    DWORD PTR [eax+0x64a9160f],edi
  4349a5:	fwait
  4349a6:	mov    eax,0x45eafbcc
  4349ab:	bound  ecx,QWORD PTR [ebx]
  4349ad:	add    BYTE PTR [eax+ecx*1-0x18dc5410],dl
  4349b4:	inc    edi
  4349b5:	mul    edi
  4349b7:	sbb    BYTE PTR [esp+edx*1+0x7e0e43ea],cl
  4349be:	leave  
  4349bf:	mov    al,ds:0xc7bc16fb
  4349c4:	pop    esi
  4349c5:	cmp    al,0xa5
  4349c7:	push   es
  4349c8:	adc    DWORD PTR [ebp-0x780d1f31],edi
  4349ce:	(bad)  
  4349cf:	loopne 0x4349bf
  4349d1:	out    dx,eax
  4349d2:	(bad)  
  4349d3:	fiadd  WORD PTR [ecx+ebp*8]
  4349d6:	mov    ebp,0xb25441
  4349db:	mov    esi,0x421c2821
  4349e0:	imul   esi,DWORD PTR [ebx-0x4f12323b],0x9e48e44c
  4349ea:	mov    eax,0xb308385f
  4349ef:	hlt    
  4349f0:	data16 sti 
  4349f2:	mov    dl,0xa9
  4349f4:	repnz sub bh,BYTE PTR [edi]
  4349f7:	xor    DWORD PTR [eax],ebx
  4349f9:	push   es
  4349fa:	stc    
  4349fb:	inc    esi
  4349fc:	stos   DWORD PTR es:[edi],eax
  4349fd:	fxam   
  4349ff:	call   0xf6358651
  434a04:	dec    eax
  434a05:	or     edx,DWORD PTR [ecx+0x603d3b20]
  434a0b:	jbe    0x4349b7
  434a0d:	jle    0x434a09
  434a0f:	stc    
  434a10:	jnp    0x4349f5
  434a12:	int    0x84
  434a14:	jmp    0x434a28
  434a16:	push   ds
  434a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434a18:	outs   dx,BYTE PTR ds:[esi]
  434a19:	mov    esi,0x92c5d56
  434a1e:	xchg   ecx,eax
  434a1f:	inc    eax
  434a20:	in     eax,0x10
  434a22:	pusha  
  434a23:	cmp    DWORD PTR [edx],ecx
  434a25:	push   eax
  434a26:	and    BYTE PTR gs:[edi],0xc1
  434a2a:	fcom   DWORD PTR [ecx-0xe8be428]
  434a30:	test   eax,0x88051b28
  434a35:	inc    esp
  434a36:	cld    
  434a37:	cwde   
  434a38:	adc    al,0x56
  434a3a:	mov    ecx,0xaca68546
  434a3f:	aaa    
  434a40:	inc    eax
  434a41:	adc    al,0xe9
  434a43:	jl     0x434abb
  434a45:	jns    0x434a52
  434a47:	(bad)  
  434a48:	mov    ecx,0x43fc64
  434a4d:	sbb    al,0xeb
  434a4f:	cmp    al,BYTE PTR [ebx]
  434a51:	(bad)  
  434a52:	mov    BYTE PTR [edx-0x69f76197],al
  434a58:	mov    esi,0x76ac9a1a
  434a5d:	sbb    cl,dl
  434a5f:	div    BYTE PTR [eax-0x2fed8127]
  434a65:	and    edi,DWORD PTR [eax-0x76]
  434a68:	repz enter 0xdd91,0x10
  434a6d:	js     0x434a85
  434a6f:	and    al,0xce
  434a71:	dec    edx
  434a72:	xor    BYTE PTR [esi+0x49],0x4a
  434a76:	pushf  
  434a77:	fld    st(1)
  434a79:	or     al,0x82
  434a7b:	icebp  
  434a7c:	inc    ebp
  434a7d:	adc    BYTE PTR [ebx+0x731492c0],ch
  434a83:	mov    al,ds:0x142ff36d
  434a88:	in     al,0xd2
  434a8a:	jne    0x434a1a
  434a8c:	sbb    bl,cl
  434a8e:	mov    bh,0x2
  434a90:	cmp    DWORD PTR [ecx+esi*8-0x6e1a7cb0],ecx
  434a97:	in     eax,0xc0
  434a99:	shl    DWORD PTR [eax-0x38d6d1df],0x5f
  434aa0:	pop    edi
  434aa1:	dec    ebx
  434aa2:	xlat   BYTE PTR ds:[ebx]
  434aa3:	aam    0x3f
  434aa5:	mov    ds:0x59c2176b,al
  434aaa:	adc    al,0x90
  434aac:	clc    
  434aad:	push   0xffffffc7
  434aaf:	xchg   BYTE PTR [eax-0x45],dl
  434ab2:	jo     0x434b18
  434ab4:	xchg   edx,eax
  434ab5:	sbb    al,0x5f
  434ab7:	add    ebp,ecx
  434ab9:	cld    
  434aba:	addr16 mov dl,0xed
  434abd:	je     0x434a83
  434abf:	ins    BYTE PTR es:[edi],dx
  434ac0:	outs   dx,DWORD PTR fs:[esi]
  434ac2:	into   
  434ac3:	dec    esp
  434ac4:	(bad)  
  434ac5:	push   ds
  434ac6:	inc    ebp
  434ac7:	call   0x879b0e5b
  434acc:	pop    es
  434acd:	push   ecx
  434ace:	ret    0xc05
  434ad1:	cwde   
  434ad2:	and    al,0xc2
  434ad4:	add    edi,DWORD PTR es:[edx]
  434ad7:	cmp    al,BYTE PTR [esi]
  434ad9:	xor    BYTE PTR [ebp-0x62],bl
  434adc:	lods   al,BYTE PTR ds:[esi]
  434add:	mov    eax,0xbb3ca559
  434ae2:	fdiv   DWORD PTR [eax-0x5b]
  434ae5:	adc    edx,DWORD PTR [ebp+0x1]
  434ae8:	jmp    0x434aac
  434aea:	jmp    0x8dbd7ceb
  434aef:	ret    
  434af0:	pop    ecx
  434af1:	fisubr WORD PTR [ebp-0x5b48dfae]
  434af7:	xchg   ebp,eax
  434af8:	inc    eax
  434af9:	push   0x75
  434afb:	sar    BYTE PTR [ebx-0x484938bc],1
  434b01:	pop    edx
  434b02:	sub    cl,BYTE PTR [ebx-0x4c979ea6]
  434b08:	cld    
  434b09:	mov    BYTE PTR [ecx+0x6d],0xe9
  434b0d:	cld    
  434b0e:	push   0x851ed110
  434b13:	mov    cl,0x17
  434b15:	ds jbe 0x434b63
  434b18:	xor    al,0x11
  434b1a:	das    
  434b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434b1d:	dec    esi
  434b1e:	loope  0x434af2
  434b20:	inc    ebx
  434b21:	pop    eax
  434b22:	(bad)  
  434b23:	fbstp  TBYTE PTR [esi+edx*4+0x49]
  434b27:	out    dx,eax
  434b28:	loope  0x434b8b
  434b2a:	jl     0x434aef
  434b2c:	nop
  434b2d:	mov    ebp,ss
  434b2f:	adc    eax,0xa0733901
  434b34:	fadd   st,st(2)
  434b36:	pop    ebx
  434b37:	dec    edi
  434b38:	jno    0x434b06
  434b3a:	adc    al,0x1f
  434b3c:	dec    eax
  434b3d:	inc    edx
  434b3e:	sbb    ebx,eax
  434b40:	add    eax,0x6275a82d
  434b45:	ins    BYTE PTR es:[edi],dx
  434b46:	push   esi
  434b47:	jae    0x434b92
  434b49:	push   cs
  434b4a:	in     eax,0x5f
  434b4c:	cmp    DWORD PTR ds:0x88fd7790,edi
  434b52:	jge    0x434b6e
  434b54:	sub    ebx,DWORD PTR [eax+eax*4-0x1c18954c]
  434b5b:	outs   dx,DWORD PTR ds:[esi]
  434b5c:	ja     0x434ba8
  434b5e:	das    
  434b5f:	mov    bh,0x5c
  434b61:	jle    0x434b0d
  434b63:	test   BYTE PTR [esi],ah
  434b65:	sub    dl,BYTE PTR [ebx]
  434b67:	push   ebp
  434b68:	xor    DWORD PTR [eax+0x1cd25e63],eax
  434b6e:	nop
  434b6f:	iret   
  434b70:	add    dh,BYTE PTR [edi]
  434b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434b73:	clc    
  434b74:	push   edi
  434b75:	fwait
  434b76:	mov    eax,ds:0xd9494381
  434b7b:	enter  0x7f6,0x6
  434b7f:	fld    QWORD PTR [edx+ebx*2]
  434b82:	mov    bl,0x52
  434b84:	in     al,dx
  434b85:	jo     0x434b53
  434b87:	pop    ss
  434b88:	adc    BYTE PTR [edx-0xb],cl
  434b8b:	mov    ah,0x56
  434b8d:	xchg   esp,eax
  434b8e:	dec    eax
  434b8f:	(bad)  
  434b90:	test   eax,0x9669c96c
  434b95:	add    bh,BYTE PTR [eax-0x46ccf891]
  434b9b:	mov    esp,0xdc2e3e2c
  434ba0:	ja     0x434beb
  434ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434ba3:	jb     0x434b97
  434ba5:	jp     0x434b61
  434ba7:	icebp  
  434ba8:	add    BYTE PTR [ebx],bl
  434baa:	mov    ah,0xd5
  434bac:	xchg   DWORD PTR [ebx],ebp
  434bae:	(bad)  
  434baf:	ror    BYTE PTR [eax-0x58],cl
  434bb2:	ret    0x2054
  434bb5:	jnp    0x434bbb
  434bb7:	and    edi,DWORD PTR [edi]
  434bb9:	fwait
  434bba:	int3   
  434bbb:	popa   
  434bbc:	dec    esp
  434bbe:	jne    0x434c33
  434bc0:	je     0x434bb9
  434bc2:	sub    eax,0x856c2ef0
  434bc7:	mov    BYTE PTR [esi+0x6c],bl
  434bca:	retf   
  434bcb:	mov    ds:0x9d335c14,al
  434bd0:	aas    
  434bd1:	cs dec edx
  434bd3:	mov    esi,0x15e7385f
  434bd8:	clc    
  434bd9:	sahf   
  434bda:	stc    
  434bdb:	loope  0x434b8d
  434bdd:	test   eax,esp
  434bdf:	push   ecx
  434be0:	pop    esp
  434be1:	retf   
  434be2:	xchg   esp,eax
  434be3:	shl    BYTE PTR [eax],0x90
  434be6:	pop    ecx
  434be7:	add    al,0x66
  434be9:	icebp  
  434bea:	ret    
  434beb:	jg     0x434c4c
  434bed:	jle    0x434b85
  434bef:	xor    ch,BYTE PTR [eax]
  434bf1:	mov    cl,0x4d
  434bf3:	imul   BYTE PTR [edx]
  434bf5:	jp     0x434bf7
  434bf7:	das    
  434bf8:	cmovl  eax,DWORD PTR [esi]
  434bfb:	xchg   BYTE PTR [eax],bl
  434bfd:	dec    esi
  434bfe:	cmp    bh,BYTE PTR [eax]
  434c00:	pop    ds
  434c01:	mov    bl,0x70
  434c03:	nop
  434c04:	into   
  434c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434c06:	cmc    
  434c07:	lahf   
  434c08:	jecxz  0x434bdb
  434c0a:	popa   
  434c0b:	sbb    BYTE PTR [eax-0x3b14de8b],ah
  434c11:	cmp    eax,0x763c945c
  434c16:	pop    es
  434c17:	push   eax
  434c18:	fcom   st(1)
  434c1a:	icebp  
  434c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434c1c:	lods   eax,DWORD PTR ds:[esi]
  434c1d:	pusha  
  434c1e:	mov    bh,0x34
  434c20:	ret    
  434c21:	test   eax,0x72a4b9ec
  434c26:	test   BYTE PTR [ecx+edi*2],dl
  434c29:	rep movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  434c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c2d:	xchg   DWORD PTR [esp+ebp*1],edi
  434c30:	and    al,0xa1
  434c32:	lock rcr BYTE PTR [esi+0x5093f412],0xd1
  434c3a:	cmp    ah,BYTE PTR [esi-0xb4a4697]
  434c40:	jns    0x434cb6
  434c42:	add    eax,0x392c4293
  434c47:	jmp    0xca3e:0x9886
  434c4d:	xchg   ebx,eax
  434c4e:	mov    BYTE PTR [ebp-0x43f6a28e],dl
  434c54:	out    0xbc,eax
  434c56:	and    al,bh
  434c58:	stc    
  434c59:	jo     0x434c07
  434c5b:	push   0xbdb67664
  434c60:	cli    
  434c61:	loopne 0x434c73
  434c63:	cmp    BYTE PTR [eax+ecx*4-0x20ba68da],0x34
  434c6b:	ret    
  434c6c:	sbb    eax,0xeaedac7b
  434c71:	bound  esi,QWORD PTR [ebx+esi*4-0x2fb51d34]
  434c78:	push   ebp
  434c79:	repnz test BYTE PTR [edx-0x48ed0738],bh
  434c80:	js     0x434c4e
  434c82:	or     eax,0x130e1113
  434c87:	xor    DWORD PTR [edi-0x64],ebx
  434c8a:	imul   esp,DWORD PTR [edi],0xbefcb2b2
  434c90:	(bad)  
  434c91:	xchg   esi,eax
  434c92:	shr    BYTE PTR [eax],0xda
  434c95:	lfs    esi,FWORD PTR [edi-0x1b7bd61d]
  434c9c:	fisttp DWORD PTR [edx-0x3b766d14]
  434ca2:	std    
  434ca3:	mov    ch,0x8
  434ca5:	jg     0x434ca3
  434ca7:	aaa    
  434ca8:	mov    edx,edi
  434caa:	pop    ds
  434cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434cac:	jge    0x434c5e
  434cae:	mov    ch,0xce
  434cb0:	jnp    0x434d02
  434cb2:	mov    dh,0x7d
  434cb4:	inc    ebp
  434cb5:	inc    esp
  434cb6:	aam    0xc0
  434cb8:	xchg   edx,eax
  434cb9:	arpl   WORD PTR [edx+esi*2],sp
  434cbc:	lahf   
  434cbd:	xchg   edx,eax
  434cbe:	ins    DWORD PTR es:[edi],dx
  434cbf:	clc    
  434cc0:	mov    BYTE PTR [esp+eiz*4],ah
  434cc3:	pop    edx
  434cc4:	sbb    DWORD PTR ds:0x41ca267,0x5a87e2d5
  434cce:	xchg   edx,eax
  434ccf:	add    al,0x87
  434cd1:	inc    eax
  434cd2:	popa   
  434cd3:	dec    ecx
  434cd4:	pop    edi
  434cd5:	cmc    
  434cd6:	jmp    0x434cc8
  434cd8:	mov    edx,0x97c0e8b6
  434cdd:	out    0x3c,al
  434cdf:	xchg   esi,eax
  434ce0:	(bad)  
  434ce1:	mov    esp,0xd4990c09
  434ce6:	xor    DWORD PTR [edx-0x6244018e],0x30
  434ced:	fs push ss
  434cef:	(bad)  
  434cf0:	je     0x434d43
  434cf2:	and    BYTE PTR [ebx+0x570d544a],0xa9
  434cf9:	mov    ebx,0xafb6d954
  434cfe:	cld    
  434cff:	xor    BYTE PTR [esi-0x63de18f4],0x41
  434d06:	and    BYTE PTR gs:[ebx+0x7e775d67],ah
  434d0d:	and    BYTE PTR [ebp-0xc],bl
  434d10:	inc    esp
  434d11:	sub    DWORD PTR [edi-0x3e5180b2],ebp
  434d17:	and    BYTE PTR [ecx+0x68],bh
  434d1a:	(bad)  
  434d1b:	push   edi
  434d1c:	adc    DWORD PTR [eax+eax*1-0x7356a007],ebp
  434d23:	jno    0x434cfd
  434d25:	cwde   
  434d26:	std    
  434d27:	shl    BYTE PTR [edi-0x6],cl
  434d2a:	jb     0x434d60
  434d2c:	fisttp WORD PTR [esi+0x32]
  434d2f:	jns    0x434da6
  434d31:	jge    0x434d5d
  434d33:	cmp    bl,BYTE PTR [eax+0x42]
  434d36:	test   BYTE PTR [ebx],ah
  434d38:	aam    0xa7
  434d3a:	cmp    al,0x22
  434d3c:	imul   edi,DWORD PTR [esp+eax*1-0x3b],0xffffffb8
  434d41:	sbb    ecx,DWORD PTR [edx-0x4e]
  434d44:	shl    DWORD PTR [ebp-0x60],0x36
  434d48:	adc    al,ah
  434d4a:	xlat   BYTE PTR ds:[ebx]
  434d4b:	(bad)  
  434d4c:	jnp    0x434d8f
  434d4e:	ror    BYTE PTR [eax-0x3f],cl
  434d51:	clc    
  434d52:	sbb    BYTE PTR [ebp+0x46a6b0b],bl
  434d58:	ins    BYTE PTR es:[edi],dx
  434d59:	ja     0x434cf1
  434d5b:	inc    edx
  434d5c:	dec    esi
  434d5d:	mov    bh,0x15
  434d5f:	adc    al,0x85
  434d61:	nop
  434d62:	into   
  434d63:	pop    ebx
  434d64:	cmp    BYTE PTR [ebx+0x10],0xd5
  434d68:	aam    0xeb
  434d6a:	mov    ah,0x83
  434d6c:	sub    ebx,DWORD PTR [edx+0xfb0db28]
  434d72:	xchg   edx,eax
  434d73:	fdiv   DWORD PTR [edx+0x25]
  434d76:	xchg   BYTE PTR [esi],bl
  434d78:	dec    ebp
  434d79:	xchg   ebx,eax
  434d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434d7b:	mov    DWORD PTR [eax+0x4b6dbd8],0xb396fc45
  434d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434d86:	mov    BYTE PTR [eax-0x5641a642],ch
  434d8c:	xchg   ebx,eax
  434d8d:	push   ds
  434d8e:	enter  0x31b2,0x5a
  434d92:	ret    
  434d93:	sti    
  434d94:	lea    esi,ds:0xbc17ec35
  434d9a:	out    0xca,al
  434d9c:	mov    eax,DWORD PTR [edx+0x3f10f838]
  434da2:	dec    ebp
  434da3:	mov    bl,0xf
  434da5:	aad    0xd2
  434da7:	clc    
  434da8:	push   esp
  434da9:	mov    eax,0x1cd6d05
  434dae:	sahf   
  434daf:	pavgb  mm0,QWORD PTR [ebp-0x4cbb2b24]
  434db6:	add    BYTE PTR [esi],cl
  434db8:	push   ss
  434db9:	push   ecx
  434dba:	cmp    al,BYTE PTR [eax]
  434dbc:	mov    ah,0x6e
  434dbe:	sahf   
  434dbf:	jmp    DWORD PTR [edx+0x245f9aaa]
  434dc5:	mov    ah,0xac
  434dc7:	loope  0x434d8a
  434dc9:	stos   BYTE PTR es:[edi],al
  434dca:	jo     0x434e19
  434dcc:	mov    ds:0x3fcc96cc,al
  434dd1:	stc    
  434dd2:	mov    esp,0xf05446cb
  434dd7:	mov    dh,0xba
  434dd9:	adc    esi,ebx
  434ddb:	pushf  
  434ddc:	add    cl,BYTE PTR [eax]
  434dde:	cmp    DWORD PTR [eax+esi*2],edx
  434de1:	push   esi
  434de2:	inc    ecx
  434de3:	pop    ds
  434de4:	es jne 0x434dd7
  434de7:	or     bh,BYTE PTR [eax]
  434de9:	push   ecx
  434dea:	stos   BYTE PTR es:[edi],al
  434deb:	jns    0x434d6f
  434ded:	xor    BYTE PTR [esi+0x5cff02],0x18
  434df4:	out    0x19,eax
  434df6:	out    dx,al
  434df7:	mov    dl,0x8e
  434df9:	fld    DWORD PTR [ebx*8-0x5605ee4a]
  434e00:	and    BYTE PTR [eax],0xd2
  434e03:	sub    BYTE PTR [eax+0x75],al
  434e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434e07:	test   al,0xf7
  434e09:	test   eax,0xcb4cdc84
  434e0e:	clc    
  434e0f:	push   cs
  434e10:	int3   
  434e11:	stos   BYTE PTR es:[edi],al
  434e12:	xchg   bl,dh
  434e14:	popa   
  434e15:	jo     0x434e50
  434e17:	in     eax,0x7e
  434e19:	push   0xffffff82
  434e1b:	push   edx
  434e1c:	dec    ebx
  434e1d:	clc    
  434e1e:	sbb    bh,bh
  434e20:	out    0x4f,al
  434e22:	outs   dx,DWORD PTR ds:[esi]
  434e23:	test   BYTE PTR [ecx+0x0],0xab
  434e27:	cmp    al,0xa4
  434e29:	sti    
  434e2a:	mov    al,ds:0x456353a9
  434e2f:	adc    eax,0xa6ba2860
  434e34:	sar    ebp,1
  434e36:	xor    bh,BYTE PTR [edi-0xf]
  434e39:	test   BYTE PTR [ebp+0x42],al
  434e3c:	(bad)  
  434e3d:	stc    
  434e3e:	mov    BYTE PTR [edi+eax*4],dl
  434e41:	push   ds
  434e42:	test   al,0x3
  434e44:	or     ebx,DWORD PTR [edx+0x20324121]
  434e4a:	and    DWORD PTR [eax+0x22],edx
  434e4d:	cmp    BYTE PTR [esp-0x23],dh
  434e51:	jae    0x434e31
  434e53:	loope  0x434ec9
  434e55:	outs   dx,DWORD PTR ds:[esi]
  434e56:	pop    edx
  434e57:	mov    WORD PTR ds:0xd7a0aefd,?
  434e5d:	cwde   
  434e5e:	jmp    0x3da01b08
  434e63:	popf   
  434e64:	adc    BYTE PTR [si+0x1e7d],bh
  434e69:	dec    ebx
  434e6a:	dec    ebp
  434e6b:	pushf  
  434e6c:	pushf  
  434e6d:	mov    ds:0xeca4e00a,eax
  434e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e73:	add    ecx,ebp
  434e75:	(bad)  
  434e76:	popa   
  434e77:	(bad)  
  434e78:	mov    BYTE PTR [esi+0x6330468b],cl
  434e7e:	(bad)  
  434e7f:	movaps xmm5,XMMWORD PTR [ebp+ecx*2+0x695ddcbb]
  434e87:	add    eax,0xd6d0ef02
  434e8c:	xor    eax,0x165879cb
  434e91:	mov    DWORD PTR [esi+0x77068f4],eax
  434e97:	push   esi
  434e98:	icebp  
  434e99:	pop    edx
  434e9a:	test   BYTE PTR [ebp-0x4262c64],dl
  434ea0:	jmp    0x154a4a38
  434ea5:	rcl    cl,0xb9
  434ea8:	out    dx,al
  434ea9:	lock adc esi,DWORD PTR [edi]
  434eac:	popf   
  434ead:	mov    ebx,0x5e603ae4
  434eb2:	jo     0x434f33
  434eb4:	cs mov ebx,0x3be8081f
  434eba:	jno    0x434f32
  434ebc:	xchg   dl,ch
  434ebe:	inc    esp
  434ebf:	mov    ah,0x2c
  434ec1:	in     al,0x21
  434ec3:	push   es
  434ec4:	pop    esi
  434ec5:	push   esi
  434ec6:	in     al,dx
  434ec7:	ss imul edx,esp,0xffffffa3
  434ecb:	sbb    BYTE PTR ds:0x66523ad8,dh
  434ed1:	icebp  
  434ed2:	clc    
  434ed3:	mov    edx,0x238fb0b9
  434ed8:	and    BYTE PTR [edx+0x51871cae],0xbe
  434edf:	sub    edx,ebp
  434ee1:	pop    ds
  434ee2:	dec    ebx
  434ee3:	gs inc eax
  434ee5:	mov    esi,0x9f0f4cb1
  434eea:	or     ecx,edx
  434eec:	dec    ebp
  434eed:	call   0x6ee76793
  434ef2:	adc    al,0x48
  434ef4:	ss push edx
  434ef6:	or     al,0xbe
  434ef8:	add    esi,esp
  434efa:	rcr    BYTE PTR [edi],0x75
  434efd:	adc    dh,BYTE PTR [ecx+0x30]
  434f00:	adc    BYTE PTR [ebx+edi*4],ah
  434f03:	adc    BYTE PTR [ebx+0x54b274d7],ch
  434f09:	cwde   
  434f0a:	repnz or esp,DWORD PTR [ebx]
  434f0d:	int    0xcc
  434f0f:	pop    ebp
  434f10:	ret    0xb178
  434f13:	fs ds aaa 
  434f16:	add    al,0x54
  434f18:	test   al,0x8f
  434f1a:	and    BYTE PTR [ecx-0x7],bh
  434f1d:	dec    eax
  434f1e:	mov    al,0x9f
  434f20:	jl     0x434f21
  434f22:	js     0x434f68
  434f24:	xchg   edi,eax
  434f25:	fwait
  434f26:	adc    al,0xfd
  434f28:	or     eax,0x684e293f
  434f2d:	jp     0x434f9a
  434f2f:	push   0xfffffff8
  434f31:	fwait
  434f32:	jnp    0x434fb3
  434f34:	and    BYTE PTR [esp+edx*4+0x2874e171],cl
  434f3b:	imul   edi,ecx,0x4d813402
  434f41:	push   0xffffffe4
  434f43:	jg     0x434f1b
  434f45:	cmp    eax,0x4ce1583e
  434f4a:	in     eax,0x10
  434f4c:	add    al,0xae
  434f4e:	sub    ecx,esi
  434f50:	jl     0x434f9b
  434f52:	push   ebp
  434f53:	adc    eax,0x6cff92f5
  434f58:	mov    esp,0xa607d1a0
  434f5d:	dec    edx
  434f5e:	ja     0x434f4e
  434f60:	in     al,0x96
  434f62:	les    eax,FWORD PTR [ebp+0x6a1a9e1b]
  434f68:	sbb    esi,DWORD PTR [eax+0x29e36c39]
  434f6e:	xor    al,0x97
  434f70:	lea    ecx,[eax-0x7b]
  434f73:	jb     0x434f05
  434f75:	or     DWORD PTR [ecx-0x77],edi
  434f78:	add    eax,0xe54294b0
  434f7d:	mov    ah,0x64
  434f7f:	imul   edi,esi,0xf83465f4
  434f85:	sbb    eax,ebx
  434f87:	adc    al,0xec
  434f89:	inc    eax
  434f8a:	jp     0x434f69
  434f8c:	in     al,dx
  434f8d:	adc    edi,DWORD PTR [ebp-0x4]
  434f90:	xchg   DWORD PTR [ebx-0x2f6e709e],esi
  434f96:	cld    
  434f97:	out    dx,eax
  434f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434f99:	into   
  434f9a:	push   edx
  434f9b:	jae    0x434f46
  434f9d:	xor    al,0x35
  434f9f:	push   0x2caac8cb
  434fa4:	and    cl,cl
  434fa6:	test   al,0x0
  434fa8:	lahf   
  434fa9:	fsubp  st(4),st
  434fab:	push   0xffffffdb
  434fad:	fcmovu st,st(5)
  434faf:	stc    
  434fb0:	test   eax,eax
  434fb2:	jge    0x434fc4
  434fb4:	xchg   esp,eax
  434fb5:	add    eax,0x5a8b766a
  434fba:	mov    al,ds:0x9581b897
  434fbf:	inc    ebx
  434fc0:	adc    ebp,edx
  434fc2:	inc    BYTE PTR [ecx+0x781ddc57]
  434fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434fc9:	jne    0x435027
  434fcb:	std    
  434fcc:	pop    ecx
  434fcd:	xchg   ebx,eax
  434fce:	add    dh,bh
  434fd0:	fs fprem1 
  434fd3:	dec    edi
  434fd4:	adc    eax,0x3243537
  434fd9:	cdq    
  434fda:	jg     0x434f9a
  434fdc:	inc    esi
  434fdd:	outs   dx,DWORD PTR ds:[esi]
  434fde:	cli    
  434fdf:	or     DWORD PTR [eax-0x67],ecx
  434fe2:	push   eax
  434fe3:	mov    esp,0xeb5a9f75
  434fe8:	mov    ah,0xf0
  434fea:	add    eax,0x1a8b4c47
  434fef:	pop    ds
  434ff0:	and    DWORD PTR [edi-0x47464cec],edx
  434ff6:	mov    ds:0x5a61b84a,al
  434ffb:	cmp    al,ch
  434ffd:	xor    esp,eax
  434fff:	mov    edi,0x636bb19c
  435004:	pop    esp
  435005:	xchg   edx,eax
  435006:	jle    0x435009
  435008:	shl    edi,1
  43500a:	frstor [ebx-0x3f]
  43500d:	add    al,0x1d
  43500f:	shl    BYTE PTR [eax-0x45],1
  435012:	aas    
  435013:	ins    BYTE PTR es:[edi],dx
  435014:	call   0x92da:0x17c82851
  43501b:	pop    ss
  43501c:	mul    esi
  43501e:	or     BYTE PTR [esp+eiz*4-0x64],0xe5
  435023:	jo     0x435088
  435025:	sub    eax,0x4770cbc5
  43502a:	ror    DWORD PTR [eax+ebx*1-0x58408058],cl
  435031:	xchg   esp,eax
  435032:	dec    esi
  435034:	das    
  435035:	xor    al,0x4e
  435037:	jle    0x435066
  435039:	enter  0x7c3c,0x99
  43503d:	xchg   esi,eax
  43503e:	mov    al,0xc5
  435040:	xchg   esp,eax
  435041:	mov    esi,0x43
  435046:	add    BYTE PTR [eax],al
  435048:	and    BYTE PTR [esi],bl
  43504a:	mov    ecx,0x9515a
  43504f:	add    BYTE PTR [eax],al
  435051:	add    BYTE PTR [eax],al
  435053:	add    BYTE PTR [ecx+0x9],dl
  435056:	add    BYTE PTR [eax],al
  435058:	inc    esi
  435059:	add    BYTE PTR [esi],ah
  43505b:	jl     0x43505d
  43505d:	add    dh,BYTE PTR [esi]
  43505f:	or     BYTE PTR [eax],al
  435061:	add    ah,al
  435063:	inc    ebp
  435064:	add    BYTE PTR [ebp+0x2b93c409],dh
  43506a:	(bad)  [ebx-0x4]
  43506d:	and    al,0x1d
  43506f:	inc    ebp
  435070:	push   ebp
  435071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435072:	sbb    cl,ah
  435074:	push   edx
  435075:	into   
  435076:	dec    eax
  435077:	jne    0x43508c
  435079:	mov    ecx,0xb701e67
  43507e:	imul   ebp,DWORD PTR [eax+edi*4-0x37],0xffffffaa
  435083:	dec    DWORD PTR [ebx+ebp*2-0x79]
  435087:	sbb    BYTE PTR [eax-0x68133061],dl
  43508d:	stos   DWORD PTR es:[edi],eax
  43508e:	repz push ebp
  435090:	jmp    0x44e5:0x56b15038
  435097:	sbb    esi,ecx
  435099:	or     bl,BYTE PTR [edi+ebx*8+0xf]
  43509d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43509e:	loope  0x4350dd
  4350a0:	jmp    0x435107
  4350a2:	retf   0xfe80
  4350a5:	xor    BYTE PTR [eax+0x65fbd7c0],dl
  4350ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4350ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4350ad:	add    ebp,DWORD PTR [edi]
  4350af:	jb     0x435049
  4350b1:	mov    eax,ds:0x4c0a5a99
  4350b6:	loop   0x4350e7
  4350b8:	mov    dl,0xe3
  4350ba:	fld    QWORD PTR [ecx-0x29]
  4350bd:	shl    BYTE PTR [eax+0x6f],0x65
  4350c1:	mov    esp,0xcbd266b1
  4350c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4350c7:	xchg   esp,eax
  4350c8:	dec    eax
  4350c9:	dec    esi
  4350ca:	jo     0x4350f3
  4350cc:	inc    esi
  4350cd:	arpl   WORD PTR [ecx],ax
  4350cf:	bound  edi,QWORD PTR [eax+0x1d7ec52f]
  4350d5:	clc    
  4350d6:	sbb    DWORD PTR [eax],eax
  4350d8:	ja     0x4350b6
  4350da:	(bad)  
  4350db:	cwde   
  4350dc:	push   ebp
  4350dd:	xchg   esi,eax
  4350de:	(bad)  
  4350df:	in     al,0xd5
  4350e1:	into   
  4350e2:	test   BYTE PTR [edi+0x64],bh
  4350e5:	mov    ds:0xe4ee7504,al
  4350ea:	fsubr  QWORD PTR [eax+0x6a55e456]
  4350f0:	xor    esp,DWORD PTR [ecx]
  4350f2:	fs xchg esi,eax
  4350f4:	int3   
  4350f5:	pop    eax
  4350f6:	out    dx,eax
  4350f7:	jbe    0x43511f
  4350f9:	iret   
  4350fa:	dec    esi
  4350fb:	cmp    BYTE PTR [edx-0x10],0xc1
  4350ff:	dec    BYTE PTR [esi-0x53ec4e1a]
  435105:	loopne 0x43511b
  435107:	hlt    
  435108:	dec    ebx
  435109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43510a:	and    esi,ecx
  43510c:	aas    
  43510d:	bnd ret 
  43510f:	mov    esp,0x59e0c533
  435114:	inc    esp
  435115:	jae    0x4350c4
  435117:	xor    esp,eax
  435119:	inc    edx
  43511a:	xchg   ebp,eax
  43511b:	(bad)  
  43511c:	fmulp  st(0),st
  43511e:	add    eax,0xbb04be62
  435123:	out    0xc9,al
  435125:	ret    0x42e
  435128:	ins    BYTE PTR es:[edi],dx
  435129:	mov    dh,0x28
  43512b:	nop
  43512c:	inc    edi
  43512d:	mov    edi,DWORD PTR [esi+0x5d]
  435130:	pop    esp
  435131:	mov    ebx,ss
  435133:	rcl    BYTE PTR [edi+eax*4-0x6b],1
  435137:	xchg   edi,eax
  435138:	push   0xf4a5248e
  43513d:	jp     0x435180
  43513f:	and    ebx,DWORD PTR [ecx]
  435141:	jo     0x43510b
  435143:	daa    
  435144:	es sbb dl,dh
  435147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435148:	pop    esp
  435149:	lods   al,BYTE PTR ds:[esi]
  43514a:	in     eax,dx
  43514b:	or     esi,0x53
  43514e:	cmp    al,0x6b
  435150:	shl    DWORD PTR [esi+0x198a656b],1
  435156:	push   esp
  435157:	pusha  
  435158:	dec    edi
  435159:	cmp    ebp,ebp
  43515b:	jbe    0x43518f
  43515d:	xor    edx,DWORD PTR [edx+0x2d]
  435160:	or     BYTE PTR [ebx],al
  435162:	jbe    0x4351d2
  435164:	pop    ebp
  435165:	sar    BYTE PTR [eax+0x1a],0xd2
  435169:	sub    al,0xda
  43516b:	popf   
  43516c:	cmp    eax,0x2316c29b
  435171:	out    dx,eax
  435172:	push   eax
  435173:	das    
  435174:	fcomi  st,st(4)
  435176:	fidivr DWORD PTR cs:[ebx+0x3274e6c8]
  43517d:	retf   0x4303
  435180:	shr    DWORD PTR [ebx-0x66],1
  435183:	sbb    DWORD PTR [esi+eax*8],ebx
  435186:	pusha  
  435187:	std    
  435188:	sub    DWORD PTR [ebx+0x40a68e70],0xdf1de170
  435192:	arpl   WORD PTR [ebp-0x70],cx
  435195:	adc    eax,0xbe9e0f64
  43519a:	pop    esp
  43519b:	mov    al,0xba
  43519d:	push   0x1e
  43519f:	mov    BYTE PTR [ecx+0x4d],dl
  4351a2:	push   cs
  4351a3:	(bad)  
  4351a4:	sbb    BYTE PTR [ecx],bh
  4351a6:	lock adc ebp,DWORD PTR [ecx+eiz*8-0x67bafdc9]
  4351ae:	push   ecx
  4351af:	pushf  
  4351b0:	adc    BYTE PTR [eax+esi*8+0x6],dl
  4351b4:	ret    0x7ecc
  4351b7:	sbb    al,BYTE PTR [ebp-0x6acf87c2]
  4351bd:	fild   QWORD PTR [esi+edi*8-0x6371c1d6]
  4351c4:	cwde   
  4351c5:	cmp    bl,BYTE PTR gs:[edx+edx*2-0x3fa5fac7]
  4351cd:	gs imul esi,DWORD PTR gs:[eax+0x3b],0xe4c61c86
  4351d6:	rol    BYTE PTR [esi],1
  4351d8:	dec    esp
  4351d9:	mov    eax,0xdd8537bc
  4351de:	mov    edx,?
  4351e0:	lock and DWORD PTR [eax+ecx*1-0x4fedc23c],0xffffffa1
  4351e9:	arpl   WORD PTR ds:0x3561a0d1,bp
  4351ef:	mov    cl,0xd4
  4351f1:	mov    ebx,0x6f7603bd
  4351f6:	nop
  4351f7:	out    0xfe,al
  4351f9:	clc    
  4351fa:	ins    BYTE PTR es:[edi],dx
  4351fb:	fisubr DWORD PTR [edi]
  4351fd:	popf   
  4351fe:	outs   dx,DWORD PTR ds:[esi]
  4351ff:	push   edi
  435200:	sbb    edi,DWORD PTR [ebp-0x60]
  435203:	std    
  435204:	inc    esp
  435205:	loop   0x4351ec
  435207:	test   al,0x32
  435209:	int3   
  43520a:	inc    esi
  43520b:	les    ebx,FWORD PTR [edi]
  43520d:	xchg   esi,eax
  43520e:	fwait
  43520f:	push   ss
  435210:	out    dx,al
  435211:	les    edx,FWORD PTR [esi+ecx*4-0x18]
  435215:	xor    eax,0x337cc1e4
  43521a:	fs inc eax
  43521c:	es or  al,0xf
  43521f:	jo     0x43523f
  435221:	(bad)  
  435222:	xchg   BYTE PTR [edx+edx*2],bh
  435225:	pop    edx
  435226:	xor    BYTE PTR [edi+eiz*4-0x35f34984],ch
  43522d:	in     al,0xff
  43522f:	fsub   DWORD PTR [edx-0x11]
  435232:	mov    ebx,DWORD PTR [ebx-0x7e]
  435235:	out    0x6f,al
  435237:	xor    edi,esp
  435239:	mov    ecx,ecx
  43523b:	mov    edx,0x9553ac52
  435240:	and    al,0x20
  435242:	into   
  435243:	xchg   ebp,eax
  435244:	sbb    al,0x9
  435246:	and    ebp,0x6944b078
  43524c:	adc    al,0x5c
  43524e:	pop    ecx
  43524f:	in     al,0xa3
  435251:	(bad)  
  435252:	jg     0x435240
  435254:	test   eax,0x1b77bc3
  435259:	call   0xf1543f85
  43525e:	mov    WORD PTR [edi-0x2e368c2d],?
  435264:	stos   DWORD PTR es:[edi],eax
  435265:	xor    al,0xe0
  435267:	mov    ecx,0x52aba8bb
  43526c:	test   ch,0x58
  43526f:	push   ss
  435270:	fiadd  WORD PTR [eax-0x537f5a48]
  435276:	mov    al,ds:0x18131e7c
  43527b:	cld    
  43527c:	xor    ch,BYTE PTR [ecx]
  43527e:	inc    ebx
  43527f:	inc    edi
  435280:	and    al,0x5f
  435282:	adc    eax,0xd2258a2d
  435287:	retf   0x480f
  43528a:	push   ecx
  43528b:	cmp    DWORD PTR [esp+ecx*2-0x72],ebx
  43528f:	out    0xaa,al
  435291:	push   edx
  435292:	ins    BYTE PTR es:[edi],dx
  435293:	lahf   
  435294:	or     edx,DWORD PTR [ecx-0x62f8619d]
  43529a:	add    dl,BYTE PTR [eax+0x6d950dbf]
  4352a0:	push   ss
  4352a1:	outs   dx,DWORD PTR ds:[esi]
  4352a2:	add    eax,0xe0feb498
  4352a7:	pop    ss
  4352a8:	xchg   edx,eax
  4352a9:	stc    
  4352aa:	js     0x435254
  4352ac:	loopne 0x43530a
  4352ae:	xchg   BYTE PTR [ecx+0x53],bh
  4352b1:	fist   WORD PTR [ecx]
  4352b3:	inc    edx
  4352b4:	rcl    DWORD PTR [edx-0x69867380],1
  4352ba:	retf   0x1d2b
  4352bd:	jae    0x4352c5
  4352bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4352c0:	enter  0x91f9,0x1d
  4352c4:	pop    es
  4352c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352c6:	xchg   BYTE PTR ds:0x5d2fd7c8,dl
  4352cc:	ror    DWORD PTR ds:0x70d88e56,0xf2
  4352d3:	imul   edi,DWORD PTR [eax],0x33
  4352d6:	push   0xffffff9d
  4352d8:	mov    dh,0x55
  4352da:	xchg   esp,eax
  4352db:	addr16 jge 0x4352ea
  4352de:	stos   BYTE PTR es:[edi],al
  4352df:	dec    ebp
  4352e0:	jp     0x4352fd
  4352e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4352e3:	mov    eax,0xb28d2546
  4352e8:	clc    
  4352e9:	test   al,0xbb
  4352eb:	xchg   ecx,eax
  4352ec:	fdiv   QWORD PTR [esi+0x40ed0bac]
  4352f2:	retf   
  4352f3:	jno    0x43528d
  4352f5:	add    BYTE PTR [esi+0x35c29481],al
  4352fb:	jecxz  0x4352ee
  4352fd:	aaa    
  4352fe:	test   al,0x81
  435300:	adc    eax,0xb415900c
  435305:	ins    DWORD PTR es:[edi],dx
  435306:	xor    esp,ecx
  435308:	ret    0x61e0
  43530b:	nop
  43530c:	pusha  
  43530d:	xchg   ebp,eax
  43530e:	cmp    eax,0x46aef02c
  435313:	and    BYTE PTR [esi+0x45],ah
  435316:	xor    al,bh
  435318:	pop    edi
  435319:	adc    al,0xcd
  43531b:	xor    al,0xd2
  43531d:	push   edx
  43531e:	mov    ch,BYTE PTR [esi+0x58bc298f]
  435324:	inc    edi
  435325:	cmp    DWORD PTR [eax-0x5f5170c],ebx
  43532b:	loopne 0x43539f
  43532d:	out    dx,eax
  43532e:	call   0x43a:0x2a212571
  435335:	repnz push 0x11
  435338:	pop    ecx
  435339:	mov    DWORD PTR [ebp+0x72802a1],edx
  43533f:	push   0xa2c8b6e8
  435344:	or     al,0x84
  435346:	dec    esp
  435347:	pop    ds
  435348:	jecxz  0x4352cd
  43534a:	cmc    
  43534b:	or     esi,0x94f4a8f0
  435351:	mov    edi,DWORD PTR [ebx+0x66f21e7f]
  435357:	or     al,0x18
  435359:	pushf  
  43535a:	jg     0x4353a4
  43535c:	add    DWORD PTR [edx+0x53],0xffffffd3
  435360:	pop    esp
  435361:	cmp    al,0xa
  435363:	(bad)  
  435364:	and    esp,DWORD PTR [ebx]
  435366:	jne    0x4352f3
  435368:	stos   BYTE PTR es:[edi],al
  435369:	jmp    0x590af8ce
  43536e:	lods   al,BYTE PTR ds:[esi]
  43536f:	jge    0x43538e
  435371:	mov    ds:0xfc6184a4,eax
  435376:	aaa    
  435377:	(bad)  
  435378:	jecxz  0x43530c
  43537a:	imul   eax,DWORD PTR [ecx+0x2c],0xdd0221ac
  435381:	mov    ebp,0x503ddc8d
  435386:	xchg   edx,eax
  435387:	mov    esi,0x885b1b9e
  43538c:	pop    ds
  43538d:	pop    ecx
  43538e:	je     0x4353fc
  435390:	js     0x4353c2
  435392:	ja     0x435338
  435394:	cmp    DWORD PTR [edx],eax
  435396:	mov    edx,0x856aba98
  43539b:	shl    cl,1
  43539d:	push   0xfffffff8
  43539f:	mov    WORD PTR [eax+0xe],es
  4353a2:	xor    eax,0x964894b1
  4353a7:	push   0x3a
  4353a9:	outs   dx,DWORD PTR fs:[esi]
  4353ab:	add    DWORD PTR [ebx],0xffffff8a
  4353ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4353af:	aam    0x6f
  4353b1:	mov    ecx,0x83170088
  4353b6:	mov    BYTE PTR [ebp-0x536884aa],al
  4353bc:	les    ebp,FWORD PTR [ebp-0x12aef910]
  4353c2:	push   eax
  4353c3:	(bad)  
  4353c4:	rol    BYTE PTR [ebp-0x41],1
  4353c7:	xor    esp,ebp
  4353c9:	mov    esi,0x78639968
  4353ce:	pusha  
  4353cf:	ja     0x435411
  4353d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4353d2:	jmp    0x9ce14284
  4353d7:	daa    
  4353d8:	push   ecx
  4353d9:	ins    DWORD PTR es:[edi],dx
  4353da:	(bad)  
  4353db:	rcl    BYTE PTR [ebx],cl
  4353dd:	aas    
  4353de:	adc    eax,eax
  4353e0:	addr16 aas 
  4353e2:	pop    es
  4353e3:	mov    esp,0x9339c6e7
  4353e8:	in     al,0x13
  4353ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4353eb:	mov    bh,0xb1
  4353ed:	xchg   edi,eax
  4353ee:	repnz std 
  4353f0:	pop    esp
  4353f1:	mov    WORD PTR [edx+0x2ddb96cc],ss
  4353f7:	pop    ss
  4353f8:	call   0xa5a2:0x131bb04a
  4353ff:	out    dx,al
  435400:	icebp  
  435401:	mov    al,0x2f
  435403:	aam    0x16
  435405:	push   edi
  435406:	and    ebp,DWORD PTR [esi+0x76]
  435409:	loopne 0x4353c1
  43540b:	push   0xfffffff8
  43540d:	pop    esp
  43540e:	pop    eax
  43540f:	bswap  eax
  435411:	sub    eax,0x1c3b506b
  435416:	inc    esp
  435417:	mov    ah,0x8c
  435419:	dec    ebp
  43541a:	cmp    esi,ebx
  43541c:	aam    0xb5
  43541e:	(bad)  
  43541f:	(bad)  [esi]
  435421:	pop    ecx
  435422:	fsub   st(3),st
  435424:	push   cs
  435425:	ret    0xe8bf
  435428:	shl    DWORD PTR [eax+edi*1],cl
  43542b:	or     BYTE PTR es:[ebp+0x7b],dl
  43542f:	mov    bh,0xc
  435431:	call   0x429efb57
  435436:	xor    al,0x87
  435438:	jmp    0x43546a
  43543a:	les    edi,FWORD PTR [eax+esi*8+0x14]
  43543e:	adc    eax,0xd8ee6750
  435443:	in     eax,dx
  435444:	dec    ecx
  435445:	lods   al,BYTE PTR ds:[esi]
  435446:	stos   BYTE PTR es:[edi],al
  435447:	push   0xfca4db8e
  43544c:	bound  eax,QWORD PTR [esi]
  43544e:	push   eax
  43544f:	mov    BYTE PTR [esi+0x206bc757],bh
  435455:	fidiv  WORD PTR [esi+0x11254de6]
  43545b:	rcl    ch,1
  43545d:	inc    esp
  43545e:	cs mov ecx,0x59107a4c
  435464:	aad    0xd4
  435466:	push   0x9207c6b4
  43546b:	scas   al,BYTE PTR es:[edi]
  43546c:	mov    edi,0x661003f3
  435471:	(bad)  
  435472:	stc    
  435473:	pop    ebx
  435474:	inc    esp
  435475:	iret   
  435476:	in     al,dx
  435477:	xchg   BYTE PTR [ecx+eiz*8],dh
  43547a:	lahf   
  43547b:	lock add BYTE PTR [eax-0x1],bl
  43547f:	and    BYTE PTR [ecx-0x5e1b36a8],cl
  435485:	lods   al,BYTE PTR ds:[esi]
  435486:	lods   al,BYTE PTR ds:[esi]
  435487:	jns    0x435417
  435489:	lods   al,BYTE PTR ds:[esi]
  43548a:	jl     0x435436
  43548c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43548d:	or     BYTE PTR [eax],ch
  43548f:	dec    esi
  435490:	ins    DWORD PTR es:[edi],dx
  435491:	cwde   
  435492:	pop    ds
  435493:	mov    al,ds:0xb4049d22
  435498:	mov    edi,DWORD PTR [ebx+ebp*8-0x16]
  43549c:	dec    eax
  43549d:	add    esi,DWORD PTR [ebx]
  43549f:	cs sti 
  4354a1:	push   es
  4354a2:	mov    esp,0x8f6c4da1
  4354a7:	rcl    ch,0x61
  4354aa:	cs sub ebp,0x3
  4354ae:	nop
  4354af:	and    eax,0xa6dfc56a
  4354b4:	sar    edi,cl
  4354b6:	mov    cl,0xb4
  4354b8:	inc    ebx
  4354b9:	mov    esp,0xf98c2320
  4354be:	cs into 
  4354c0:	pop    esp
  4354c1:	jmp    0x8e53e3b2
  4354c6:	ja     0x435457
  4354c8:	inc    eax
  4354c9:	cmp    BYTE PTR [edx],0x9a
  4354cc:	sbb    BYTE PTR [esi-0x419d0875],ch
  4354d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4354d3:	sub    eax,0x2ea01e31
  4354d8:	xor    DWORD PTR [esi-0x64],edi
  4354db:	enter  0x2b61,0xd0
  4354df:	xor    eax,0xa2efa085
  4354e4:	in     al,dx
  4354e5:	jle    0x4354ef
  4354e7:	xor    al,0xb9
  4354e9:	pop    edi
  4354ea:	mov    dh,0xf5
  4354ec:	test   DWORD PTR [esi+edi*1+0x6bea0834],edx
  4354f3:	and    bl,BYTE PTR [ecx-0x51]
  4354f6:	mov    eax,0x19521b80
  4354fb:	popa   
  4354fc:	out    0x8a,al
  4354fe:	pushf  
  4354ff:	fcomp  QWORD PTR [edi]
  435501:	nop
  435502:	mov    esp,0xa8a2b4db
  435507:	jmp    0x3a06:0xc9d73300
  43550e:	(bad)  
  43550f:	retf   
  435510:	and    BYTE PTR [eax-0x366b9817],ch
  435516:	jne    0x435567
  435518:	les    esp,FWORD PTR [ebx-0xb1ea934]
  43551e:	leave  
  43551f:	dec    esi
  435520:	add    eax,0xf1f0ac58
  435525:	call   0xc0b3fc23
  43552a:	out    0x60,eax
  43552c:	adc    al,0x86
  43552e:	sbb    al,0xa6
  435530:	fdivr  QWORD PTR [eax+0x38071e37]
  435536:	xor    DWORD PTR [ebp-0x3b],ebp
  435539:	out    0x60,al
  43553b:	nop
  43553c:	pushf  
  43553d:	push   esi
  43553e:	loopne 0x43552b
  435540:	or     ebx,0xffffffa5
  435543:	sbb    ch,BYTE PTR [eax]
  435545:	cwde   
  435546:	call   0xbe29:0x6984204
  43554d:	adc    al,0xa0
  43554f:	and    BYTE PTR [eax],ch
  435551:	jecxz  0x43552c
  435553:	sahf   
  435554:	push   cs
  435555:	je     0x43551c
  435557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435558:	xchg   ecx,eax
  435559:	dec    esp
  43555a:	popa   
  43555b:	and    ebp,esp
  43555d:	nop
  43555e:	jo     0x435506
  435560:	jno    0x435503
  435562:	jo     0x43555f
  435564:	mov    DWORD PTR [edx-0x5f],esi
  435567:	cmovge ecx,eax
  43556a:	addr16 sbb ch,bh
  43556d:	add    dl,BYTE PTR ds:0x1b7b8bf6
  435573:	jnp    0x4355b1
  435575:	push   ebp
  435576:	je     0x43556b
  435578:	ins    DWORD PTR es:[edi],dx
  435579:	inc    edi
  43557a:	lods   eax,DWORD PTR ds:[esi]
  43557b:	fadd   st(3),st
  43557d:	pusha  
  43557e:	xchg   BYTE PTR [ebp+0x4f],dh
  435581:	in     eax,0x5a
  435583:	xor    DWORD PTR [edx+edi*1],ebp
  435586:	test   cl,ah
  435588:	es mov bh,0xa0
  43558b:	xor    DWORD PTR [ebx+eax*1+0x17],edx
  43558f:	sub    al,0xea
  435591:	and    eax,0xb3925dee
  435596:	dec    edi
  435597:	aam    0x50
  435599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43559a:	cmp    al,0x7d
  43559c:	popf   
  43559d:	stos   BYTE PTR es:[edi],al
  43559e:	jo     0x43557b
  4355a0:	sub    dh,BYTE PTR [esp+esi*8-0x27]
  4355a4:	shl    bh,0xce
  4355a7:	xchg   esp,eax
  4355a8:	addr16 into 
  4355aa:	cwde   
  4355ab:	lock mov cl,0x74
  4355ae:	outs   dx,BYTE PTR ds:[esi]
  4355af:	popa   
  4355b0:	dec    eax
  4355b1:	mov    ds:0x3ff7bcb6,eax
  4355b6:	pop    ecx
  4355b7:	aaa    
  4355b8:	mov    BYTE PTR [edi+eiz*8],0x66
  4355bc:	fs aaa 
  4355be:	xor    eax,0x3fbf464c
  4355c3:	stos   DWORD PTR es:[edi],eax
  4355c4:	aad    0x88
  4355c6:	retf   0xe836
  4355c9:	scas   eax,DWORD PTR es:[edi]
  4355ca:	inc    edx
  4355cb:	jno    0x4355ac
  4355cd:	xchg   ecx,eax
  4355ce:	lods   al,BYTE PTR ds:[esi]
  4355cf:	and    eax,ebx
  4355d1:	mov    al,dl
  4355d3:	cmp    ecx,DWORD PTR [esp+eax*4+0x781cd054]
  4355da:	fmul   DWORD PTR [esi-0x6a]
  4355dd:	or     DWORD PTR [edi],ecx
  4355df:	add    BYTE PTR [eax-0x40],bh
  4355e2:	dec    ecx
  4355e3:	jb     0x435662
  4355e5:	cmc    
  4355e6:	push   esi
  4355e7:	rcl    bl,1
  4355e9:	pushf  
  4355ea:	cld    
  4355eb:	mov    al,0x32
  4355ed:	cli    
  4355ee:	loop   0x435627
  4355f0:	popa   
  4355f1:	adc    al,0xc0
  4355f3:	nop
  4355f4:	push   ebx
  4355f5:	aad    0xdd
  4355f7:	mov    al,ds:0xe43a553d
  4355fc:	rol    esi,0xd4
  4355ff:	repnz inc esi
  435601:	fbld   TBYTE PTR [esi]
  435603:	cmp    al,0x8
  435605:	out    dx,al
  435606:	int3   
  435607:	sbb    al,0xd3
  435609:	pop    eax
  43560a:	mov    esi,0xb3b0b603
  43560f:	push   eax
  435610:	(bad)  
  435611:	dec    ebx
  435612:	arpl   WORD PTR [edi+0x6e],di
  435615:	int    0xd4
  435617:	mov    ecx,0x1fdd7cc1
  43561c:	sbb    DWORD PTR [ebx+0x37],ebx
  43561f:	clc    
  435620:	xchg   ebp,eax
  435621:	in     al,dx
  435622:	dec    edx
  435623:	ror    BYTE PTR [eax+0x1c9c012d],cl
  435629:	inc    edi
  43562a:	fidiv  DWORD PTR [edx]
  43562c:	xor    BYTE PTR [esi],dh
  43562e:	or     BYTE PTR [ecx],al
  435630:	add    BYTE PTR [eax+0x3c],al
  435633:	push   ebx
  435634:	xchg   esi,eax
  435635:	pop    eax
  435636:	(bad)  [esi-0x4217a2cd]
  43563c:	xor    eax,0xc230090
  435641:	ret    0xceb
  435644:	mul    DWORD PTR [eax-0x4c]
  435647:	(bad)  
  435648:	pusha  
  435649:	data16 sar BYTE PTR [ecx],1
  43564c:	xor    dh,al
  43564e:	xor    eax,0x11600b71
  435653:	repnz cwde 
  435655:	push   esp
  435656:	mov    bh,0x88
  435658:	arpl   WORD PTR [ecx],ax
  43565a:	imul   edx,DWORD PTR [esi+0x60fc9895],0x1c
  435661:	paddsw mm6,mm7
  435664:	int3   
  435665:	pop    ebp
  435666:	sbb    DWORD PTR [eax],esp
  435668:	out    0x36,al
  43566a:	mov    edx,DWORD PTR [edi-0x4b]
  43566d:	mov    DWORD PTR [edx+0x14284431],edi
  435673:	ins    DWORD PTR es:[edi],dx
  435674:	(bad)  
  435675:	out    dx,al
  435676:	in     al,dx
  435677:	push   ecx
  435678:	ins    BYTE PTR es:[edi],dx
  435679:	push   0x4c167f1d
  43567e:	pop    ds
  43567f:	(bad)  [ebx]
  435681:	and    al,0x8c
  435683:	stc    
  435684:	sub    BYTE PTR [esi-0x607d8885],dl
  43568a:	jbe    0x4356c0
  43568c:	dec    ebp
  43568d:	in     eax,dx
  43568e:	ret    0xf408
  435691:	xchg   esp,eax
  435692:	push   edx
  435693:	sbb    eax,0x1d063258
  435698:	cmp    al,0x70
  43569a:	rcr    BYTE PTR [ebx],1
  43569c:	(bad)  
  43569d:	jl     0x435696
  43569f:	test   al,0xf4
  4356a1:	inc    esi
  4356a2:	cmp    al,0xe9
  4356a4:	imul   BYTE PTR [eax-0x60]
  4356a7:	pop    edi
  4356a8:	mov    ebp,0x18caf4de
  4356ad:	repnz jecxz 0x4356f8
  4356b0:	jo     0x4356b5
  4356b2:	pop    ecx
  4356b3:	aaa    
  4356b4:	xchg   ebp,eax
  4356b5:	fdivr  DWORD PTR [esi+eax*1]
  4356b8:	ins    BYTE PTR es:[edi],dx
  4356b9:	daa    
  4356ba:	push   0x3e
  4356bc:	push   eax
  4356bd:	(bad)  
  4356be:	outs   dx,BYTE PTR ds:[esi]
  4356bf:	shl    BYTE PTR [esi-0x70],cl
  4356c2:	xchg   ecx,eax
  4356c3:	dec    esp
  4356c4:	ds pop edx
  4356c6:	or     BYTE PTR [esi],bh
  4356c8:	sbb    DWORD PTR [esi-0x7edd414c],edx
  4356ce:	jno    0x435667
  4356d0:	je     0x4356ad
  4356d2:	(bad)  
  4356d3:	fadd   st,st(5)
  4356d5:	in     eax,dx
  4356d6:	aaa    
  4356d7:	mov    ds:0x8005c078,al
  4356dd:	cmp    esp,DWORD PTR [ebx]
  4356df:	imul   ebp,DWORD PTR [edi+0x3a],0xa4d45a5e
  4356e6:	sub    al,ch
  4356e8:	push   es
  4356e9:	mov    ds:0x7f9a4c39,eax
  4356ee:	enter  0x52e,0x87
  4356f2:	jg     0x43569c
  4356f4:	mov    esp,0x68ecd865
  4356f9:	pop    ecx
  4356fa:	outs   dx,DWORD PTR ds:[esi]
  4356fb:	pushf  
  4356fc:	in     eax,dx
  4356fd:	sub    esi,DWORD PTR [ecx+0x6]
  435700:	adc    dl,bl
  435702:	loope  0x435726
  435704:	std    
  435705:	lods   eax,DWORD PTR ds:[esi]
  435706:	sub    BYTE PTR ds:0xabacb858,bh
  43570c:	loopne 0x4356cc
  43570e:	xchg   ebx,eax
  43570f:	scas   eax,DWORD PTR es:[edi]
  435710:	pop    ecx
  435711:	paddusb mm5,QWORD PTR [edx]
  435714:	cmc    
  435715:	div    DWORD PTR [esi]
  435717:	jge    0x435699
  435719:	mov    dl,0xdf
  43571b:	add    BYTE PTR [ebp+0x79463d3e],bh
  435721:	dec    ebx
  435722:	or     DWORD PTR [ebx-0xeaacdc],ebp
  435728:	call   0x46cc:0x24942411
  43572f:	mov    dh,0x5b
  435731:	or     al,0xd8
  435733:	ins    BYTE PTR es:[edi],dx
  435734:	jmp    0x9905:0x441bf03b
  43573b:	mov    esp,0x143b2003
  435740:	add    DWORD PTR [edi],ecx
  435742:	mov    eax,0xd3039003
  435747:	dec    esp
  435748:	cmp    BYTE PTR [eax],dh
  43574a:	(bad)  
  43574b:	stc    
  43574c:	mov    esp,0xd69a9281
  435751:	pop    esp
  435752:	and    edx,DWORD PTR [edi]
  435754:	out    dx,al
  435755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435756:	adc    ebp,eax
  435758:	or     edx,esi
  43575a:	add    al,0xec
  43575c:	cmp    ebx,esp
  43575e:	fwait
  43575f:	data16 sti 
  435761:	inc    esi
  435762:	and    eax,0xb9993028
  435767:	repz pusha 
  435769:	mov    esi,DWORD PTR [ebx*8+0x7217f04c]
  435770:	mov    ecx,0xca414449
  435775:	jo     0x435747
  435777:	retf   
  435778:	xor    eax,0xabe8ae98
  43577d:	mov    ebp,0xa6656f18
  435782:	or     cl,BYTE PTR [ecx+ecx*4-0x71c32445]
  435789:	cmp    al,0xa4
  43578b:	pushf  
  43578c:	or     al,0xe5
  43578e:	jae    0x4357b1
  435790:	pusha  
  435791:	stc    
  435792:	mov    dl,0x9f
  435794:	push   ss
  435795:	jae    0x43571c
  435797:	pop    eax
  435798:	test   BYTE PTR es:[ebx-0x4e],dl
  43579c:	jp     0x538fff2c
  4357a2:	test   al,0xe0
  4357a4:	sar    DWORD PTR [ecx+0x7d],0xa8
  4357a8:	xchg   edi,eax
  4357a9:	fwait
  4357aa:	imul   edx,DWORD PTR [eax+0x66],0xffffff9c
  4357ae:	loopne 0x4357cb
  4357b0:	mov    ebp,0x74679241
  4357b5:	loopne 0x4357fe
  4357b7:	add    eax,0xcc25987e
  4357bc:	dec    eax
  4357bd:	cwde   
  4357be:	icebp  
  4357bf:	mov    bh,0x1c
  4357c1:	lods   al,BYTE PTR ds:[esi]
  4357c2:	in     al,0xc
  4357c4:	xchg   esi,eax
  4357c5:	or     eax,0x1bb4ebbc
  4357ca:	adc    al,0x1b
  4357cc:	in     eax,0x12
  4357ce:	jg     0x4357b0
  4357d0:	or     ebx,DWORD PTR [edi-0x6e2bf750]
  4357d6:	enter  0x88b9,0x39
  4357da:	(bad)  [ecx+0xe]
  4357dd:	jne    0x43584d
  4357df:	daa    
  4357e0:	leave  
  4357e1:	lods   al,BYTE PTR ds:[esi]
  4357e2:	dec    edi
  4357e3:	push   edi
  4357e4:	mov    al,ds:0x2e98aa9e
  4357e9:	outs   dx,DWORD PTR ds:[esi]
  4357ea:	sar    BYTE PTR [ecx-0x7d],1
  4357ed:	ret    0x92f7
  4357f0:	inc    esp
  4357f1:	dec    edi
  4357f2:	lods   al,BYTE PTR ds:[esi]
  4357f3:	hlt    
  4357f4:	ins    DWORD PTR es:[edi],dx
  4357f5:	jmp    0x4357b9
  4357f7:	ror    DWORD PTR [ebp+ecx*1+0x50],cl
  4357fb:	rcr    DWORD PTR [edx+eax*4+0x2f45a5ce],0xbf
  435803:	ss aad 0xc0
  435806:	xlat   BYTE PTR ds:[ebx]
  435807:	add    eax,0x91ec5e41
  43580c:	sub    al,0x4c
  43580e:	in     al,0x28
  435810:	pop    es
  435811:	rol    DWORD PTR [ecx+0x57fd665a],cl
  435817:	or     BYTE PTR [esi-0x6cf7e1e2],dh
  43581d:	repz out 0xb7,eax
  435820:	sub    al,0xe
  435822:	arpl   WORD PTR [ecx-0x476c9f9e],si
  435828:	aaa    
  435829:	aam    0x16
  43582b:	add    eax,0x93e3cfcf
  435830:	stc    
  435831:	mov    edi,0xb3e3f0f8
  435836:	stos   DWORD PTR es:[edi],eax
  435837:	cmc    
  435838:	rcl    BYTE PTR [ecx],0x9a
  43583b:	sbb    al,0x40
  43583d:	in     eax,0x81
  43583f:	ret    0x7862
  435842:	fs inc ebp
  435844:	inc    eax
  435845:	ror    BYTE PTR [esi-0x7b6040df],cl
  43584b:	inc    edx
  43584c:	pop    edx
  43584d:	call   0x1b92c6d3
  435852:	into   
  435853:	xor    DWORD PTR [ecx+ebx*2+0x10c4380c],ebp
  43585a:	ins    DWORD PTR es:[edi],dx
  43585b:	in     al,dx
  43585c:	xor    eax,0x5430a10d
  435861:	adc    dl,BYTE PTR [ebx+0x18]
  435864:	ds jecxz 0x435854
  435867:	in     al,dx
  435868:	push   esp
  435869:	and    ebp,DWORD PTR [edx-0x3334b4c5]
  43586f:	jecxz  0x43587b
  435871:	js     0x4357fa
  435873:	xchg   ebx,ebp
  435875:	es retf 0x2ea7
  435879:	fbld   TBYTE PTR [eax]
  43587b:	nop
  43587c:	stos   DWORD PTR es:[edi],eax
  43587d:	mov    edi,0x27af0545
  435882:	pushf  
  435883:	inc    esp
  435884:	push   ds
  435885:	icebp  
  435886:	lods   eax,DWORD PTR ds:[esi]
  435887:	xor    dh,BYTE PTR [esi]
  435889:	gs into 
  43588b:	push   0xe3efb868
  435890:	(bad)  
  435891:	inc    DWORD PTR [edx+0x3e8ce07b]
  435897:	stos   BYTE PTR es:[edi],al
  435898:	mov    al,0xd9
  43589a:	ins    DWORD PTR es:[edi],dx
  43589b:	cwde   
  43589c:	jmp    0x43589d
  43589e:	xor    al,0x1a
  4358a0:	dec    edx
  4358a1:	xchg   cl,ch
  4358a3:	xchg   esi,eax
  4358a4:	int3   
  4358a5:	test   al,0x71
  4358a7:	pop    eax
  4358a8:	and    edi,DWORD PTR ds:0xa0f23234
  4358ae:	pop    esi
  4358af:	scas   al,BYTE PTR es:[edi]
  4358b0:	jl     0x435897
  4358b2:	pop    esi
  4358b3:	ds mov ?,eax
  4358b6:	xor    DWORD PTR [edi+0x1bfa0cb],0xecd83c83
  4358c0:	inc    ebx
  4358c1:	inc    esi
  4358c2:	les    esp,FWORD PTR [ebp+0x73748192]
  4358c8:	stos   DWORD PTR es:[edi],eax
  4358c9:	mov    ebx,0x539a6c4f
  4358ce:	shl    DWORD PTR ds:0x586165d8,1
  4358d4:	nop
  4358d5:	sub    ecx,DWORD PTR [edx-0x30]
  4358d8:	mov    dh,0x1c
  4358da:	or     BYTE PTR [edi],ch
  4358dc:	dec    edx
  4358dd:	mov    ah,0x42
  4358df:	sbb    BYTE PTR [ecx],bh
  4358e1:	rcr    eax,cl
  4358e3:	mov    dl,0xaf
  4358e5:	jbe    0x4358bf
  4358e7:	or     al,0x41
  4358e9:	es jle 0x43589a
  4358ec:	imul   esi,DWORD PTR [ecx+ebp*4],0x35f449fc
  4358f3:	sub    eax,0xdd7d4780
  4358f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4358f9:	xor    ah,BYTE PTR [ebx-0x16]
  4358fc:	imul   ebp,ebx,0x1a
  4358ff:	out    0x66,al
  435901:	enter  0xd3ad,0x12
  435905:	in     eax,dx
  435906:	jg     0x43594a
  435908:	xchg   DWORD PTR [ecx-0x2c8ce14],edi
  43590e:	jge    0x43593a
  435910:	mov    al,0x6a
  435912:	loopne 0x435924
  435914:	(bad)  
  435915:	(bad)  [esi]
  435917:	int    0x68
  435919:	push   es
  43591a:	sub    esp,esp
  43591c:	mov    eax,0x7f318d65
  435921:	jmp    0xdcf9503d
  435926:	repnz and eax,0x76b403c5
  43592c:	xor    eax,0x937300bc
  435931:	sbb    eax,0x84cb2771
  435936:	clc    
  435937:	and    al,0xbf
  435939:	adc    BYTE PTR [edx+0x6d59f6df],cl
  43593f:	in     al,0x48
  435941:	(bad)  
  435942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435943:	or     BYTE PTR [edi],0xf0
  435946:	adc    edi,DWORD PTR [edx-0x33]
  435949:	lock mov eax,0xe6e4daca
  43594f:	adc    BYTE PTR [ecx+0x3680141b],cl
  435955:	cld    
  435956:	adc    cl,0x36
  435959:	addr16 xchg esi,eax
  43595b:	cmp    BYTE PTR [eax-0x9],dl
  43595e:	jmp    0x435939
  435960:	dec    eax
  435961:	sub    BYTE PTR [esi+0x60],ah
  435964:	pop    esp
  435965:	cli    
  435966:	xchg   ecx,eax
  435967:	jmp    FWORD PTR [esp+eax*8+0x4299895]
  43596e:	mov    ds:0x19f36fd9,eax
  435973:	xor    DWORD PTR [eax-0x6f],0x28
  435977:	out    dx,eax
  435978:	jg     0x43596d
  43597a:	push   edi
  43597b:	mov    cl,0xa5
  43597d:	inc    eax
  43597e:	mov    esi,0x6a39434c
  435983:	outs   dx,BYTE PTR ds:[esi]
  435984:	add    edx,ebp
  435986:	out    dx,al
  435987:	daa    
  435988:	jo     0x4359fc
  43598a:	push   es
  43598b:	adc    esp,esi
  43598d:	inc    DWORD PTR [edi-0x7a]
  435990:	ret    
  435991:	xchg   esp,eax
  435992:	add    al,0xc4
  435994:	call   0x3399d126
  435999:	mov    esi,0x55b133c
  43599e:	ficom  DWORD PTR [edx-0xb]
  4359a1:	jmp    0x0:0x45
  4359a8:	mov    al,0x1a
  4359aa:	imul   edx,DWORD PTR [eax+0x51],0x9
  4359b1:	add    BYTE PTR [eax],al
  4359b3:	add    BYTE PTR [ecx+0x9],dl
  4359b6:	add    BYTE PTR [eax],al
  4359b8:	inc    edi
  4359b9:	add    BYTE PTR [esi],ah
  4359bb:	jl     0x4359bd
  4359bd:	add    dh,BYTE PTR [esi]
  4359bf:	or     BYTE PTR [eax],al
  4359c1:	add    ah,al
  4359c3:	inc    ebp
  4359c4:	add    dh,al
  4359c6:	jae    0x4359ff
  4359c8:	daa    
  4359c9:	jb     0x4359b7
  4359cb:	cs jmp 0x9fd2a3f5
  4359d1:	jb     0x435a1f
  4359d3:	cdq    
  4359d4:	repz xchg ecx,eax
  4359d6:	dec    eax
  4359d7:	jno    0x435a4c
  4359d9:	pop    ebx
  4359da:	xchg   esp,eax
  4359db:	mov    ebx,0x6c0e9aa3
  4359e0:	mov    edi,0x64086b87
  4359e5:	hlt    
  4359e6:	pop    es
  4359e7:	pop    esi
  4359e8:	nop
  4359e9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4359eb:	sti    
  4359ec:	jae    0x435985
  4359ee:	mov    WORD PTR [ecx+0x45],ds
  4359f1:	cmp    ch,ah
  4359f3:	int    0xef
  4359f5:	js     0x435998
  4359f7:	lea    esp,[edx-0x73]
  4359fa:	pop    esp
  4359fb:	xchg   ecx,eax
  4359fc:	xor    al,0x70
  4359fe:	fucom  st(4)
  435a00:	es push ebx
  435a02:	mov    DWORD PTR [eax-0x75266a80],eax
  435a08:	xchg   esp,eax
  435a09:	scas   al,BYTE PTR es:[edi]
  435a0a:	icebp  
  435a0b:	xchg   ecx,eax
  435a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435a0d:	dec    edx
  435a0e:	mov    edi,0x147cdb0a
  435a13:	push   ds
  435a14:	pop    esi
  435a15:	dec    esp
  435a16:	mov    dl,0xa3
  435a18:	sahf   
  435a19:	pop    ds
  435a1a:	pusha  
  435a1b:	or     BYTE PTR [edi+esi*2],cl
  435a1e:	jo     0x435a7d
  435a20:	jmp    0x94e3:0xc0f4ca3
  435a27:	xchg   esp,eax
  435a28:	mov    edi,0x3cf9613a
  435a2d:	and    BYTE PTR [edi-0x788b47e9],ah
  435a33:	push   0xffffffe4
  435a35:	jmp    0x15eb:0xdc45f059
  435a3c:	jmp    0x84fe:0x57a2173b
  435a43:	clc    
  435a44:	and    DWORD PTR [ecx-0x67],esi
  435a47:	mov    ds:0xa86f487e,al
  435a4c:	mov    BYTE PTR [edi],cl
  435a4e:	pop    edx
  435a4f:	mov    eax,0x327a45b5
  435a54:	int3   
  435a55:	pushf  
  435a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a57:	and    edi,DWORD PTR [ebx-0x2b]
  435a5a:	mov    ds:0xbcf0cf01,al
  435a5f:	aaa    
  435a60:	aad    0x8a
  435a62:	inc    esi
  435a63:	pop    ebp
  435a64:	mov    al,0x70
  435a66:	adc    al,0x73
  435a68:	jg     0x435a51
  435a6a:	mul    DWORD PTR [ecx+0x51]
  435a6d:	cmp    BYTE PTR [esp+edi*4+0x67fc6333],bh
  435a74:	jbe    0x435a0c
  435a76:	test   al,0xa4
  435a78:	loopne 0x435abe
  435a7a:	pop    edx
  435a7b:	shl    al,0x7e
  435a7e:	jmp    0x435ae6
  435a80:	pop    ebp
  435a81:	add    al,0xd7
  435a83:	fmul   QWORD PTR [edx+0x51]
  435a86:	ss sbb edx,esi
  435a89:	lock sub bh,dl
  435a8c:	loop   0x435b0d
  435a8e:	add    BYTE PTR [ebx],ch
  435a90:	leave  
  435a91:	ret    0xd018
  435a94:	xor    al,0x2c
  435a96:	mov    ecx,0x82df2b77
  435a9b:	out    dx,eax
  435a9c:	hlt    
  435a9d:	sbb    edi,DWORD PTR [ebx]
  435a9f:	sar    DWORD PTR [eax+ebp*2+0x18273a4c],cl
  435aa6:	inc    edx
  435aa7:	xchg   esi,eax
  435aa8:	or     al,0x80
  435aaa:	or     al,0x19
  435aac:	xchg   ebx,eax
  435aad:	stos   BYTE PTR es:[edi],al
  435aae:	cmp    al,0x59
  435ab0:	push   cs
  435ab1:	or     dh,BYTE PTR [ecx+0x53]
  435ab4:	mov    eax,0x8e60eb6f
  435ab9:	xchg   ecx,eax
  435aba:	dec    ebp
  435abb:	dec    esp
  435abc:	dec    edx
  435abd:	enter  0x1732,0x8
  435ac1:	mov    es:0x11a58dca,al
  435ac7:	mov    ds:0x5cf72cff,eax
  435acc:	fmul   QWORD PTR [esi-0x14]
  435acf:	dec    esp
  435ad0:	(bad)  
  435ad1:	cdq    
  435ad2:	push   eax
  435ad3:	sub    eax,0x1001c0db
  435ad8:	int3   
  435ad9:	jmp    0x435b2d
  435adb:	je     0x435a79
  435add:	pop    ds
  435ade:	mov    ch,0x25
  435ae0:	push   esi
  435ae1:	cmp    al,BYTE PTR [ecx+0x5c]
  435ae4:	sbb    al,0x27
  435ae6:	test   BYTE PTR [ebx+edi*1+0xd],bl
  435aea:	and    edi,ebp
  435aec:	dec    edi
  435aed:	inc    eax
  435aee:	jp     0x435ad7
  435af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435af1:	retf   
  435af2:	push   ss
  435af3:	mov    al,0xc7
  435af5:	or     ah,BYTE PTR [esi+edi*8+0x59]
  435af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435afa:	out    dx,al
  435afb:	mov    WORD PTR [eax+eax*8-0x3ed5772e],fs
  435b02:	out    dx,al
  435b03:	mov    ch,0xd
  435b05:	xchg   esi,eax
  435b06:	or     eax,0x7239acca
  435b0b:	xchg   BYTE PTR [eax],bh
  435b0d:	fisubr DWORD PTR [ecx]
  435b0f:	out    0xd6,eax
  435b11:	push   esp
  435b12:	sub    BYTE PTR [ebx],bh
  435b14:	fst    DWORD PTR [esi]
  435b16:	nop
  435b17:	sar    BYTE PTR [ecx],0x81
  435b1a:	js     0x435b20
  435b1c:	rcr    ebx,0x18
  435b1f:	out    0x2e,al
  435b21:	dec    ecx
  435b22:	inc    edx
  435b23:	pushf  
  435b24:	xor    eax,0xec6e8b58
  435b29:	pop    esi
  435b2a:	cmp    eax,0x5b65c0d3
  435b2f:	and    esi,DWORD PTR [esi+0xd2a11d4]
  435b35:	in     al,0xe
  435b37:	push   edi
  435b38:	jnp    0x435b4a
  435b3a:	ins    BYTE PTR es:[edi],dx
  435b3b:	and    BYTE PTR [edx+ebp*2],dh
  435b3e:	mov    ebp,ss
  435b40:	and    eax,0x751abb9a
  435b45:	mov    ebx,0xcbcfb0a5
  435b4a:	xlat   BYTE PTR ds:[ebx]
  435b4b:	fstp   DWORD PTR [esi-0x7e]
  435b4e:	test   eax,0xdac7d428
  435b53:	xchg   BYTE PTR [ecx+ebx*1-0x2c],cl
  435b57:	add    esp,DWORD PTR [ebx-0x8]
  435b5a:	inc    esp
  435b5b:	xchg   edx,eax
  435b5c:	or     esp,esp
  435b5e:	xor    DWORD PTR ds:0xc6a01a92,ebp
  435b64:	jno    0x435b0e
  435b66:	sub    DWORD PTR [esp+edx*2],ebp
  435b69:	fbstp  TBYTE PTR [esi]
  435b6b:	les    eax,FWORD PTR [ebp+0x23cc7b09]
  435b71:	in     al,dx
  435b72:	jno    0x435be4
  435b74:	call   0x1cdce25d
  435b79:	add    edi,DWORD PTR ds:0x740cb735
  435b7f:	out    0xe0,eax
  435b81:	les    ebx,FWORD PTR [edx+edx*1-0x18cf3aee]
  435b88:	xor    al,0x2a
  435b8a:	mov    es,WORD PTR [eax+0x52]
  435b8d:	xchg   DWORD PTR [eax+ebx*8],edx
  435b90:	rcl    DWORD PTR [edi+0x66],0x43
  435b94:	add    ch,ch
  435b96:	cwde   
  435b97:	add    eax,0x48cb8afc
  435b9c:	retf   
  435b9d:	xor    dh,dh
  435b9f:	push   esi
  435ba0:	out    dx,eax
  435ba1:	and    BYTE PTR ds:0xfbffab51,ch
  435ba7:	sbb    DWORD PTR [ebx],ecx
  435ba9:	and    eax,0x88098544
  435bae:	or     cl,BYTE PTR [ecx-0x137d44d3]
  435bb4:	mov    ecx,0x6a34b539
  435bb9:	lea    ebx,[edx+0x37e110fb]
  435bbf:	add    eax,0xcb850434
  435bc4:	shl    DWORD PTR [ebx+esi*2],1
  435bc7:	sub    esp,DWORD PTR [ebx-0x1f]
  435bca:	push   cs
  435bcb:	mov    edi,0xcf58986a
  435bd0:	addr16 jmp 0x1c88403c
  435bd6:	push   eax
  435bd7:	jl     0x435c34
  435bd9:	cmp    dh,BYTE PTR [eax-0xa]
  435bdc:	das    
  435bdd:	out    0x84,al
  435bdf:	retf   0xa424
  435be2:	push   esi
  435be3:	xchg   esp,eax
  435be4:	dec    ecx
  435be5:	mov    ds,WORD PTR [edi+0x69]
  435be8:	mov    ah,0x48
  435bea:	mov    ebx,0xb3925920
  435bef:	cdq    
  435bf0:	imul   ebx,DWORD PTR [edx],0x6c
  435bf3:	mov    ebx,0xf1610c48
  435bf8:	cs or  eax,0x714b909c
  435bfe:	xor    eax,0xe53cf5d6
  435c03:	mov    edx,0x6bb8f5b4
  435c08:	dec    edx
  435c09:	xor    BYTE PTR [edx],0x5d
  435c0c:	adc    DWORD PTR [ebx+eiz*8-0x2c],ebx
  435c10:	aaa    
  435c11:	sub    ch,dh
  435c13:	iret   
  435c14:	jnp    0x435be8
  435c16:	sub    BYTE PTR [ecx],0xcf
  435c19:	mov    ebp,0xb9800b34
  435c1e:	jmp    0x435bc4
  435c20:	test   eax,0x90d5a2ee
  435c25:	arpl   WORD PTR [ecx*8+0x363d35c8],di
  435c2c:	call   0xa970:0xaf40e2de
  435c33:	test   eax,0x4527656d
  435c38:	cmp    BYTE PTR [edx-0x6c],ah
  435c3b:	jge    0x435ca6
  435c3d:	mov    dl,0x1d
  435c3f:	mov    edi,0xb8bb869a
  435c44:	pop    edx
  435c45:	adc    BYTE PTR [ebp+0x5e68fb78],0x13
  435c4c:	fcom   QWORD PTR [esi+0x63936ac]
  435c52:	xor    al,0x5f
  435c54:	or     al,0x0
  435c56:	iret   
  435c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c58:	daa    
  435c59:	fwait
  435c5a:	mov    bl,0x63
  435c5c:	jb     0x435c77
  435c5e:	test   al,0xcc
  435c60:	mov    WORD PTR [ecx-0x6cb59aa1],es
  435c66:	push   ecx
  435c67:	int3   
  435c68:	mov    edi,0x2a774e2d
  435c6d:	mov    BYTE PTR [esi+0x4899f0b8],ch
  435c73:	popf   
  435c74:	cmp    edi,DWORD PTR [edx]
  435c76:	add    al,0x43
  435c78:	or     eax,0xf1b46114
  435c7d:	jg     0x435c4f
  435c7f:	push   esi
  435c80:	stc    
  435c81:	addr16 mov esp,0xaadb19ea
  435c87:	das    
  435c88:	dec    ebx
  435c89:	loop   0x435ce1
  435c8b:	loopne 0x435cad
  435c8d:	xlat   BYTE PTR ds:[ebx]
  435c8e:	fninit 
  435c90:	shl    DWORD PTR [ebx-0x7d],1
  435c93:	pop    edx
  435c94:	add    al,0x54
  435c96:	push   esp
  435c97:	pusha  
  435c98:	mov    edx,0x135a19dd
  435c9d:	sub    BYTE PTR [esi+0x1c],bl
  435ca0:	dec    esp
  435ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435ca2:	xor    BYTE PTR [ebx],0x73
  435ca5:	mov    ebp,0x20a3974c
  435caa:	repz sti 
  435cac:	pop    eax
  435cad:	mov    ds:0x6021f407,al
  435cb2:	inc    ebp
  435cb3:	pop    edx
  435cb4:	xchg   edi,eax
  435cb5:	cmp    al,BYTE PTR [edi]
  435cb7:	dec    edi
  435cb8:	sbb    BYTE PTR [ebx-0x41e89ee1],bh
  435cbe:	in     al,dx
  435cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435cc0:	ins    DWORD PTR es:[edi],dx
  435cc1:	cmp    al,0x2
  435cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435cc4:	xor    al,0x69
  435cc6:	adc    dl,ch
  435cc8:	pop    ebp
  435cc9:	jno    0x435d2b
  435ccb:	pop    ds
  435ccc:	inc    edi
  435ccd:	stc    
  435cce:	sbb    esi,esp
  435cd0:	push   ss
  435cd1:	pop    esp
  435cd2:	lahf   
  435cd3:	test   BYTE PTR [edx-0x6749d4c9],dh
  435cd9:	leave  
  435cda:	outs   dx,BYTE PTR ds:[esi]
  435cdb:	cdq    
  435cdc:	sub    al,0xe
  435cde:	mov    ecx,0xaad0f313
  435ce3:	and    eax,0xd3de500f
  435ce8:	cmp    esp,ebx
  435cea:	xlat   BYTE PTR ds:[ebx]
  435ceb:	sub    DWORD PTR [ebx],edi
  435ced:	mov    DWORD PTR [ebp+edx*4-0x53],esi
  435cf1:	nop
  435cf2:	xor    edi,edi
  435cf4:	cli    
  435cf5:	jne    0x435cb9
  435cf7:	cwde   
  435cf8:	scas   al,BYTE PTR es:[edi]
  435cf9:	stos   BYTE PTR es:[edi],al
  435cfa:	jns    0x435c81
  435cfc:	retf   
  435cfd:	aam    0x11
  435cff:	sub    BYTE PTR [eax+0xb],al
  435d02:	mov    al,0x40
  435d04:	imul   edi,DWORD PTR [eax+esi*8-0x57],0x43ae6479
  435d0c:	jb     0x435d57
  435d0e:	sub    eax,0x88128ad5
  435d13:	mov    ch,0x86
  435d15:	inc    ebx
  435d16:	add    edi,DWORD PTR [ebx-0x5364fda7]
  435d1c:	into   
  435d1d:	pop    es
  435d1e:	xchg   esp,esp
  435d20:	xor    eax,0xd0b7096c
  435d25:	sbb    BYTE PTR ds:0x36586e48,0x39
  435d2c:	and    eax,0xb6efa678
  435d31:	cmc    
  435d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435d33:	jno    0x435da0
  435d35:	pop    ss
  435d36:	pushf  
  435d37:	ss inc edi
  435d39:	pop    esp
  435d3a:	jne    0x435d30
  435d3c:	xchg   DWORD PTR [ecx+ebx*2-0x40],edi
  435d40:	ret    
  435d41:	iret   
  435d42:	jge    0x435d52
  435d44:	push   esi
  435d45:	cwde   
  435d46:	jge    0x435d27
  435d48:	in     al,0xaf
  435d4a:	fwait
  435d4b:	loopne 0x435d29
  435d4d:	test   eax,0x8cc9eddf
  435d52:	xor    ebp,DWORD PTR [edx-0x44]
  435d55:	pop    edi
  435d56:	enter  0x643e,0x65
  435d5a:	mov    al,0x26
  435d5c:	clc    
  435d5d:	pop    eax
  435d5e:	aaa    
  435d5f:	push   ebx
  435d60:	nop
  435d61:	cmp    BYTE PTR [ecx-0x2c],cl
  435d64:	mov    dl,0xd6
  435d66:	fwait
  435d67:	xor    eax,0x1de3ede2
  435d6c:	clc    
  435d6d:	xor    bl,ch
  435d6f:	popa   
  435d70:	cld    
  435d71:	xor    dl,BYTE PTR [edx-0x1a]
  435d74:	neg    BYTE PTR [eax+ebp*4]
  435d77:	mov    eax,0x111f51a8
  435d7c:	dec    esp
  435d7d:	and    eax,0xe1db43c4
  435d82:	int3   
  435d83:	lods   eax,DWORD PTR ds:[esi]
  435d84:	jns    0x435dbf
  435d86:	pushf  
  435d87:	call   0xac90d9a
  435d8c:	adc    dl,BYTE PTR [edi+eiz*2-0x54]
  435d90:	or     al,0x56
  435d92:	mov    al,0xfc
  435d94:	imul   DWORD PTR [eax]
  435d96:	scas   eax,DWORD PTR es:[edi]
  435d97:	fidivr DWORD PTR [ecx+0x30]
  435d9a:	ret    
  435d9b:	push   esp
  435d9c:	xor    cl,ah
  435d9e:	loope  0x435d55
  435da0:	fld    TBYTE PTR [edi]
  435da2:	fdivr  DWORD PTR [ebx+0xd]
  435da5:	icebp  
  435da6:	xor    bl,BYTE PTR [eax-0x69]
  435da9:	jge    0x435df7
  435dab:	cld    
  435dac:	or     bl,BYTE PTR gs:[ebx+0x50893fed]
  435db3:	repz and bh,dh
  435db6:	jge    0x435d60
  435db8:	dec    ebx
  435db9:	cli    
  435dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435dbb:	out    dx,eax
  435dbc:	in     al,dx
  435dbd:	inc    esp
  435dbe:	pop    edi
  435dbf:	aam    0x3f
  435dc1:	adc    eax,DWORD PTR [eax+0x38]
  435dc4:	adc    BYTE PTR [esi],ah
  435dc6:	push   0x5a48d6bd
  435dcb:	ret    
  435dcc:	js     0x435d66
  435dce:	cmp    DWORD PTR [eax],edx
  435dd0:	jecxz  0x435e16
  435dd2:	xchg   edi,eax
  435dd3:	stc    
  435dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435dd5:	test   eax,0xe3449ad
  435dda:	dec    edx
  435ddb:	pushf  
  435ddc:	ins    DWORD PTR es:[edi],dx
  435ddd:	aas    
  435dde:	pop    edx
  435ddf:	push   eax
  435de0:	add    BYTE PTR [eax+0x41],bl
  435de3:	xor    ecx,edx
  435de5:	push   es
  435de6:	stc    
  435de7:	cmp    al,0x41
  435de9:	xchg   edx,eax
  435dea:	jl     0x435dd9
  435dec:	adc    edi,eax
  435dee:	dec    esi
  435def:	ret    0x333f
  435df2:	cmp    ah,BYTE PTR [eax-0x630bcf3a]
  435df8:	or     bl,al
  435dfa:	stos   DWORD PTR es:[edi],eax
  435dfb:	mov    dl,0x48
  435dfd:	in     eax,0x9b
  435dff:	lds    esi,FWORD PTR [eax-0x6aeb8769]
  435e05:	ins    BYTE PTR es:[edi],dx
  435e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435e07:	mov    ecx,0x2557cc50
  435e0c:	sbb    eax,0x92c0906e
  435e11:	cmp    BYTE PTR [ecx],0x9b
  435e14:	jno    0x435da5
  435e16:	xor    eax,0xf4e45cb4
  435e1b:	jmp    0xcd582c38
  435e20:	pop    esp
  435e21:	jg     0x435e2c
  435e23:	inc    edi
  435e24:	inc    edi
  435e25:	ss xchg esi,eax
  435e27:	bound  edx,QWORD PTR [ebx-0x6e34eb80]
  435e2d:	into   
  435e2e:	xchg   ebx,eax
  435e2f:	dec    ebp
  435e30:	add    eax,0x4f41a447
  435e35:	dec    edx
  435e36:	popa   
  435e37:	sub    al,0xb4
  435e39:	pop    es
  435e3a:	pop    esi
  435e3b:	enter  0xf98,0x59
  435e3f:	dec    edi
  435e40:	in     eax,dx
  435e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435e42:	mov    bh,0x52
  435e44:	in     al,dx
  435e45:	add    eax,0x953c3bed
  435e4a:	push   esi
  435e4b:	push   ss
  435e4c:	cdq    
  435e4d:	xchg   esp,eax
  435e4e:	jae    0x435dfa
  435e50:	das    
  435e51:	sub    al,0xfa
  435e53:	daa    
  435e54:	(bad)  
  435e55:	push   ss
  435e56:	mov    eax,0x7c34a99b
  435e5b:	inc    edx
  435e5c:	push   cs
  435e5d:	mov    ah,0xa2
  435e5f:	fsub   QWORD PTR [edx]
  435e61:	push   eax
  435e62:	sub    DWORD PTR [edx+0x45],ebp
  435e65:	push   ds
  435e66:	mov    dl,dl
  435e68:	add    BYTE PTR [esi],al
  435e6a:	cmp    bh,BYTE PTR [esi-0x68]
  435e6d:	cmc    
  435e6e:	scas   al,BYTE PTR es:[edi]
  435e6f:	retf   
  435e70:	loope  0x435e1a
  435e72:	xchg   esp,eax
  435e73:	push   ebp
  435e74:	pop    ecx
  435e75:	sub    al,BYTE PTR [ebx+0x1c]
  435e78:	pop    ebp
  435e79:	xchg   ebx,eax
  435e7a:	int3   
  435e7b:	cld    
  435e7c:	shl    al,0x36
  435e7f:	push   ebx
  435e80:	in     eax,dx
  435e81:	out    dx,al
  435e82:	push   0xfffffff0
  435e84:	je     0x435eac
  435e86:	scas   eax,DWORD PTR es:[edi]
  435e87:	sub    al,0x86
  435e89:	mov    al,ds:0x1486fc
  435e8e:	sub    BYTE PTR [edi],0xce
  435e91:	jle    0x435eda
  435e93:	push   ecx
  435e94:	repz cmp BYTE PTR [edi+ebx*1+0x1dde9b4c],cl
  435e9c:	pop    edx
  435e9d:	enter  0xf0e0,0x38
  435ea1:	or     al,dh
  435ea3:	push   cs
  435ea4:	outs   dx,BYTE PTR ds:[esi]
  435ea5:	pushf  
  435ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435ea7:	add    al,0xdf
  435ea9:	out    0x3e,eax
  435eab:	adc    eax,0xf05fd34d
  435eb0:	sub    BYTE PTR [edx],dl
  435eb2:	clc    
  435eb3:	mov    ebx,0x8835e8de
  435eb8:	jmp    0x78d0e709
  435ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435ebe:	sbb    BYTE PTR [esp+edx*2+0x39],ah
  435ec2:	jo     0x435f20
  435ec4:	mov    bl,0x45
  435ec6:	pop    edx
  435ec7:	or     ah,BYTE PTR [edi+0x3d184fb6]
  435ecd:	push   ss
  435ece:	les    ebp,FWORD PTR [ebx]
  435ed0:	cmp    cl,BYTE PTR [ebp+0x30]
  435ed3:	add    edi,DWORD PTR [eax*1-0x10355bda]
  435eda:	mov    dl,0x9a
  435edc:	sub    esp,DWORD PTR [eax-0x16]
  435edf:	dec    ebx
  435ee0:	mov    eax,ds:0x6b710b62
  435ee5:	loope  0x435e6b
  435ee7:	daa    
  435ee8:	cmp    al,0xe5
  435eea:	outs   dx,BYTE PTR ds:[esi]
  435eeb:	add    ch,BYTE PTR [eax+edi*8+0x18]
  435eef:	sub    al,0x6b
  435ef1:	fcmovb st,st(0)
  435ef3:	sub    ch,BYTE PTR [ecx]
  435ef5:	aas    
  435ef6:	cs aam 0x50
  435ef9:	push   cs
  435efa:	retf   0x72d7
  435efd:	mov    al,0x5f
  435eff:	sub    ebx,ebp
  435f01:	je     0x435f4c
  435f03:	cmp    bh,BYTE PTR [ebx+ebp*4-0x5de9c95d]
  435f0a:	cwde   
  435f0b:	lods   al,BYTE PTR ds:[esi]
  435f0c:	inc    eax
  435f0d:	jle    0x435f44
  435f0f:	or     bl,BYTE PTR [edx+0xf]
  435f12:	cmp    BYTE PTR [edi+edi*8-0x60ba042e],0xf7
  435f1a:	imul   edi,DWORD PTR [esp+eiz*2],0xd69cb9a2
  435f21:	pushf  
  435f22:	push   ecx
  435f23:	out    0x5f,eax
  435f25:	mov    BYTE PTR [ecx],dl
  435f27:	sbb    esi,DWORD PTR [edi]
  435f29:	sbb    ah,bl
  435f2b:	mov    ah,0x90
  435f2d:	out    0xac,al
  435f2f:	aaa    
  435f30:	pop    ss
  435f31:	scas   eax,DWORD PTR es:[edi]
  435f32:	mov    cl,0x77
  435f34:	mov    bh,0xd0
  435f36:	push   edx
  435f37:	rcl    BYTE PTR ds:0x418101ac,1
  435f3d:	inc    edx
  435f3e:	adc    edi,DWORD PTR [eax+edi*2-0x65]
  435f42:	call   0xaeddeff4
  435f47:	addr16 xchg edi,eax
  435f49:	pushf  
  435f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435f4b:	push   ds
  435f4c:	adc    eax,0x373f53ef
  435f51:	and    al,al
  435f53:	xchg   esp,eax
  435f54:	or     bl,BYTE PTR [esi+0x1c3a0676]
  435f5a:	(bad)  
  435f5b:	in     al,0xff
  435f5d:	pop    edi
  435f5e:	mov    al,ds:0x25e576cc
  435f63:	mov    eax,0x7cf86608
  435f68:	in     al,dx
  435f69:	xor    eax,DWORD PTR [ebx-0x75]
  435f6c:	jno    0x435f1e
  435f6e:	nop    DWORD PTR [edx]
  435f71:	daa    
  435f72:	jbe    0x435f7c
  435f74:	aas    
  435f75:	dec    esp
  435f76:	aam    0x23
  435f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435f79:	xor    DWORD PTR [esp+eax*4-0x7d73573],0x12
  435f81:	and    DWORD PTR [ebx-0x33c3aabb],ebx
  435f87:	imul   ebx,DWORD PTR [eax+ebp*2],0x21
  435f8b:	cmc    
  435f8c:	push   es
  435f8d:	jbe    0x435f9f
  435f8f:	push   ss
  435f90:	pop    ebx
  435f91:	inc    eax
  435f92:	push   ecx
  435f93:	sub    eax,0xda5655d8
  435f98:	mov    al,ds:0x66a9e816
  435f9d:	mov    ebx,0x8103c604
  435fa2:	adc    eax,0x6f09fc0c
  435fa7:	add    ebp,DWORD PTR [eax-0x4e]
  435faa:	leave  
  435fab:	(bad)  
  435fac:	xor    dh,bh
  435fae:	aam    0xa
  435fb0:	in     al,0xae
  435fb2:	ja     0x435f46
  435fb4:	inc    ebp
  435fb5:	push   esp
  435fb6:	inc    ecx
  435fb7:	(bad)  
  435fb8:	push   edx
  435fb9:	push   eax
  435fba:	or     al,0xeb
  435fbc:	into   
  435fbd:	mov    ah,0xfc
  435fbf:	mov    bl,0x5a
  435fc1:	ds fdiv st,st(3)
  435fc4:	cmc    
  435fc5:	or     DWORD PTR [ebx],esp
  435fc7:	and    ah,bl
  435fc9:	ins    BYTE PTR es:[edi],dx
  435fca:	xor    DWORD PTR [ebx+0x1efaa7bb],ebx
  435fd0:	inc    esp
  435fd1:	retf   
  435fd2:	xchg   edx,eax
  435fd3:	in     al,dx
  435fd4:	mov    ds:0xc3723247,eax
  435fd9:	push   0xa6d63994
  435fde:	arpl   bx,si
  435fe0:	cmp    ecx,DWORD PTR ds:[eax+eiz*8+0x438df947]
  435fe8:	popf   
  435fe9:	and    DWORD PTR [esp+esi*1+0x11],eax
  435fed:	or     dl,bh
  435fef:	shl    DWORD PTR [ebp+0x58a12faa],0x64
  435ff6:	ds pop ss
  435ff8:	push   eax
  435ff9:	popa   
  435ffa:	retf   
  435ffb:	xchg   DWORD PTR [ecx-0xdac7084],ebp
  436001:	jecxz  0x435f8e
  436003:	push   esp
  436004:	stos   BYTE PTR es:[edi],al
  436005:	ret    
  436006:	mov    al,ds:0x6b31d64a
  43600b:	mov    esi,0x48b8227c
  436010:	(bad)  [esp+edi*1]
  436013:	cmc    
  436014:	mov    ch,0xe9
  436016:	js     0x435fbb
  436018:	ins    BYTE PTR es:[edi],dx
  436019:	daa    
  43601a:	ds push eax
  43601c:	(bad)  
  43601d:	fidivr DWORD PTR [esi]
  43601f:	inc    ebx
  436020:	lods   al,BYTE PTR ds:[esi]
  436021:	nop
  436022:	xlat   BYTE PTR ds:[ebx]
  436023:	mov    ebp,ebp
  436025:	push   edx
  436026:	push   cs
  436027:	dec    eax
  436028:	and    BYTE PTR [ebx],al
  43602a:	mov    ah,0xc3
  43602c:	call   0x4206df2d
  436031:	xor    bl,al
  436033:	fadd   DWORD PTR [edi]
  436035:	rol    eax,0x40
  436038:	(bad)  
  436039:	test   al,0xa1
  43603b:	push   eax
  43603c:	sbb    dl,0xa5
  43603f:	dec    ebx
  436040:	retf   0x6ddd
  436043:	dec    ebp
  436044:	or     eax,0x960e7a4
  436049:	aam    0x45
  43604b:	cmp    ebp,DWORD PTR [ecx]
  43604d:	repnz enter 0x30ba,0x89
  436052:	mov    dl,0xc1
  436054:	scas   eax,DWORD PTR es:[edi]
  436055:	outs   dx,DWORD PTR ds:[esi]
  436056:	sbb    ch,ah
  436058:	popf   
  436059:	push   ebx
  43605a:	ins    DWORD PTR es:[edi],dx
  43605b:	cmp    ch,BYTE PTR [ebx]
  43605d:	(bad)  
  43605e:	test   DWORD PTR [ecx+0x10],ebx
  436061:	into   
  436062:	sti    
  436063:	in     eax,0x14
  436065:	sbb    eax,0xb83824fa
  43606a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43606b:	pop    ss
  43606c:	adc    BYTE PTR [eax+0x9],0xa
  436070:	jo     0x4360f0
  436072:	fcomp  QWORD PTR [esi-0x41fc279e]
  436078:	(bad)  
  43607a:	aaa    
  43607b:	add    BYTE PTR [ebx],dh
  43607d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  43607f:	push   esp
  436080:	pop    edi
  436081:	inc    esi
  436082:	ret    0x24e7
  436085:	ret    
  436086:	arpl   bp,si
  436088:	lods   al,BYTE PTR ds:[esi]
  436089:	cmc    
  43608a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43608b:	aas    
  43608c:	hlt    
  43608d:	int3   
  43608e:	ss mov ebx,0x126b03e
  436094:	mov    edx,0xf966f022
  436099:	out    dx,eax
  43609a:	add    DWORD PTR [ebx],0x30
  43609d:	ficom  WORD PTR [ecx+0x14]
  4360a0:	and    eax,0x767bcd42
  4360a5:	push   ebp
  4360a6:	nop
  4360a7:	xchg   ebp,eax
  4360a8:	cmp    BYTE PTR [esp+edi*4+0x2fb20bc7],bh
  4360af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4360b0:	lock pop esp
  4360b2:	loop   0x436088
  4360b4:	jnp    0x436090
  4360b6:	dec    esi
  4360b7:	mov    al,ds:0x2304ddbd
  4360bc:	enter  0x2bb9,0x84
  4360c0:	cli    
  4360c1:	sbb    al,0xd7
  4360c3:	sub    BYTE PTR [edi-0x52],bh
  4360c6:	lock pop esp
  4360c8:	shl    BYTE PTR [eax+0x7e4c66fd],1
  4360ce:	xchg   edi,eax
  4360cf:	pop    ebp
  4360d0:	jmp    0x43612f
  4360d2:	arpl   bx,ax
  4360d4:	sub    esi,DWORD PTR [eax+0x12]
  4360d7:	pop    esp
  4360d8:	jnp    0x4360ba
  4360da:	lahf   
  4360db:	inc    ebp
  4360dc:	sub    al,0x8
  4360de:	sbb    BYTE PTR [edi+0x3b],bh
  4360e1:	out    0xbb,al
  4360e3:	(bad)  [eax]
  4360e5:	retf   0x3c8d
  4360e8:	or     eax,0xd629f1be
  4360ed:	cmp    al,0x90
  4360ef:	out    dx,eax
  4360f0:	pusha  
  4360f1:	and    bh,bl
  4360f3:	mov    bh,0xf5
  4360f5:	scas   al,BYTE PTR es:[edi]
  4360f6:	ja     0x43613c
  4360f8:	and    BYTE PTR [esp+edx*1-0x2f9319ac],al
  4360ff:	rol    BYTE PTR [esi-0x5dd85796],1
  436105:	xchg   ecx,eax
  436106:	hlt    
  436107:	jle    0x4360ff
  436109:	cld    
  43610a:	push   0x50
  43610c:	mov    dh,dh
  43610e:	fnstsw WORD PTR [ecx]
  436110:	xor    al,0xce
  436113:	and    al,0x74
  436115:	stc    
  436116:	xchg   esi,eax
  436117:	xor    al,0xea
  436119:	idiv   BYTE PTR [ebp+0x2f9817e0]
  43611f:	out    dx,al
  436120:	mov    ebx,0xc6db073
  436125:	lds    edi,FWORD PTR [eax+ebp*1-0x57c24242]
  43612c:	in     al,0x50
  43612e:	repz loopne 0x43615a
  436131:	fmul   QWORD PTR [esi-0x14]
  436134:	lea    edi,[ecx]
  436136:	sahf   
  436137:	cmp    al,0x88
  436139:	mov    cl,0xc7
  43613b:	shl    BYTE PTR [ebp-0x1addf68],cl
  436141:	lods   al,BYTE PTR ds:[esi]
  436142:	das    
  436143:	sbb    ecx,eax
  436145:	adc    al,0x60
  436147:	adc    ebp,DWORD PTR [esi]
  436149:	adc    dl,al
  43614b:	xchg   BYTE PTR [ebx],dh
  43614d:	repnz in al,dx
  43614f:	and    edi,ecx
  436151:	mov    eax,ds:0xe70df456
  436156:	adc    ch,BYTE PTR [ebp+0x7c]
  436159:	out    dx,al
  43615a:	push   esp
  43615b:	jb     0x4360f9
  43615d:	and    eax,0xf651ec15
  436162:	pushf  
  436163:	mov    cl,0x19
  436165:	sar    BYTE PTR [esi],0xaf
  436168:	stos   BYTE PTR es:[edi],al
  436169:	jg     0x43618a
  43616b:	ins    DWORD PTR es:[edi],dx
  43616c:	pushf  
  43616d:	pop    esp
  43616e:	in     al,0x4c
  436170:	test   al,0xa9
  436172:	fst    DWORD PTR [esi+0x55]
  436175:	mov    ebp,0x9fcb08ec
  43617a:	ret    
  43617b:	jne    0x43610c
  43617d:	les    esi,FWORD PTR [edx-0x7b]
  436180:	sub    al,0x63
  436182:	xchg   edi,eax
  436183:	inc    esi
  436184:	xchg   DWORD PTR [ecx],ecx
  436186:	add    BYTE PTR [edi-0x232e2b4c],ah
  43618c:	not    DWORD PTR [eax]
  43618e:	push   ds
  43618f:	jno    0x4361cf
  436191:	aas    
  436192:	clc    
  436193:	add    al,0x91
  436195:	sbb    ch,al
  436197:	add    bl,bh
  436199:	mov    bh,0xd8
  43619b:	sbb    al,0x62
  43619d:	pop    ecx
  43619e:	fs inc edi
  4361a0:	aad    0x4c
  4361a2:	mov    esi,DWORD PTR [esi+0x6c71d840]
  4361a8:	(bad)  
  4361a9:	jne    0x4361c1
  4361ab:	jbe    0x4361cf
  4361ad:	call   0x50cceefd
  4361b2:	pop    edi
  4361b3:	pushf  
  4361b4:	outs   dx,BYTE PTR ds:[esi]
  4361b5:	xchg   ebp,eax
  4361b6:	or     al,0xac
  4361b8:	out    0x92,eax
  4361ba:	mov    edi,0x4a464938
  4361bf:	xor    BYTE PTR [esi+0x7a],cl
  4361c2:	clc    
  4361c3:	aad    0x8f
  4361c5:	or     DWORD PTR [eax],0x6d
  4361c8:	push   esp
  4361c9:	sub    al,0x67
  4361cb:	lahf   
  4361cc:	(bad)  
  4361cd:	into   
  4361ce:	aaa    
  4361cf:	xor    ah,bh
  4361d1:	js     0x4361be
  4361d3:	push   ss
  4361d4:	lahf   
  4361d5:	fistp  QWORD PTR [ebp+0x57]
  4361d8:	jge    0x43620c
  4361da:	and    cl,bl
  4361dc:	mov    edx,eax
  4361de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4361df:	aam    0xd4
  4361e1:	sbb    ch,BYTE PTR [edx]
  4361e3:	inc    esp
  4361e4:	loope  0x4361df
  4361e6:	adc    al,0x73
  4361e8:	jbe    0x436184
  4361ea:	aaa    
  4361eb:	xchg   BYTE PTR [eax-0x29],ch
  4361ee:	inc    edi
  4361ef:	and    bl,BYTE PTR [ebx]
  4361f1:	and    al,0x53
  4361f3:	mov    bh,0xac
  4361f5:	mov    esp,?
  4361f7:	scas   al,BYTE PTR es:[edi]
  4361f8:	mov    bh,0x81
  4361fa:	fcomp  DWORD PTR [eax-0x21]
  4361fd:	sbb    al,0x34
  4361ff:	pop    es
  436200:	das    
  436201:	gs mov ebp,0xaa9a4168
  436207:	pop    eax
  436208:	lods   eax,DWORD PTR ds:[esi]
  436209:	pop    edi
  43620a:	sub    eax,DWORD PTR [ebx]
  43620c:	sar    BYTE PTR [edi+0x25],1
  43620f:	into   
  436210:	jl     0x436247
  436212:	sbb    al,bh
  436214:	cmp    ch,cl
  436216:	pop    esi
  436217:	or     DWORD PTR [ebx-0x60],edx
  43621a:	lea    edi,[ecx+edx*2]
  43621d:	in     al,dx
  43621e:	jno    0x436252
  436220:	mov    dl,0x86
  436222:	(bad)  
  436223:	hlt    
  436224:	repnz pop ds
  436226:	xchg   esi,eax
  436227:	sbb    al,0xeb
  436229:	imul   eax,DWORD PTR [eax+0x6c],0x6285fa47
  436230:	(bad)  
  436231:	mov    ah,0xf6
  436233:	retf   
  436234:	nop
  436235:	mov    dl,0x6c
  436237:	lods   eax,DWORD PTR ds:[esi]
  436238:	xchg   ebp,eax
  436239:	aaa    
  43623a:	push   edi
  43623b:	mov    WORD PTR [esi-0x1e61864c],es
  436241:	pop    ebx
  436242:	add    BYTE PTR [ebx+0x51],0x99
  436246:	fsub   DWORD PTR [ebx]
  436248:	mov    edi,0x598a5ce7
  43624d:	cwde   
  43624e:	mov    esi,0x14b8fafc
  436253:	aaa    
  436254:	cwde   
  436255:	or     esi,DWORD PTR [ebp+0x4b16a435]
  43625b:	into   
  43625c:	hlt    
  43625d:	ins    WORD PTR es:[edi],dx
  43625f:	mov    ah,0x81
  436261:	enter  0x60b,0xe4
  436265:	inc    esi
  436266:	pusha  
  436267:	push   esp
  436268:	addr16 cmc 
  43626a:	in     al,dx
  43626b:	aam    0x9a
  43626d:	adc    bl,0xa9
  436270:	dec    ecx
  436271:	loop   0x436225
  436273:	adc    ch,dh
  436275:	adc    al,0x4c
  436277:	loope  0x436288
  436279:	addr16 push ebx
  43627b:	jae    0x436235
  43627d:	loop   0x43625b
  43627f:	sbb    al,0x3
  436281:	in     al,0xa
  436283:	push   eax
  436284:	sbb    ah,bl
  436286:	and    BYTE PTR [esi-0x4c],cl
  436289:	cld    
  43628a:	call   FWORD PTR [ebx*2+0x163d0008]
  436291:	aaa    
  436292:	inc    edx
  436293:	inc    BYTE PTR [ecx+edx*2]
  436296:	sub    BYTE PTR [eax+eiz*4],ah
  436299:	sub    ebp,edi
  43629b:	push   edi
  43629c:	das    
  43629d:	fimul  DWORD PTR [edi+0x48]
  4362a0:	dec    eax
  4362a1:	jne    0x436267
  4362a3:	push   edi
  4362a4:	test   DWORD PTR [edx-0xfb76751],ebp
  4362aa:	sbb    ecx,ebp
  4362ac:	mov    WORD PTR [ecx-0x4b70f295],ss
  4362b2:	adc    al,0xf1
  4362b4:	push   es
  4362b5:	adc    BYTE PTR [edi+0x4fedeba4],dh
  4362bb:	cmp    BYTE PTR [esi-0x3c],cl
  4362be:	es cmp eax,0x13b040f5
  4362c4:	pop    esp
  4362c5:	fmul   DWORD PTR [ebx]
  4362c7:	or     eax,0xefb69d5a
  4362cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4362cd:	add    al,0xb3
  4362cf:	pop    ebx
  4362d0:	inc    esp
  4362d1:	fs nop
  4362d3:	mov    ds:0xcc28356c,eax
  4362d8:	pop    esi
  4362d9:	psubsb mm4,QWORD PTR [ecx]
  4362dc:	sub    bh,bh
  4362de:	lods   al,BYTE PTR ds:[esi]
  4362df:	dec    esp
  4362e0:	out    0x2,al
  4362e2:	lock xor al,0xba
  4362e5:	loope  0x436275
  4362e7:	fidiv  WORD PTR [eax-0x15]
  4362ea:	xor    bl,BYTE PTR [edi-0x32]
  4362ed:	out    0xe5,al
  4362ef:	ja     0x868a8389
  4362f5:	in     al,dx
  4362f6:	dec    edx
  4362f7:	outs   dx,DWORD PTR ds:[esi]
  4362f8:	pop    eax
  4362f9:	inc    esi
  4362fa:	cmp    al,0x77
  4362fc:	mov    ?,ebx
  4362fe:	cmp    bl,bl
  436300:	dec    BYTE PTR [edx]
  436302:	aas    
  436303:	add    BYTE PTR [eax],al
  436305:	add    BYTE PTR [eax],al
  436307:	add    cl,ch
  436309:	sbb    eax,0x9515a14
  43630e:	add    BYTE PTR [eax],al
  436310:	add    BYTE PTR [eax],al
  436312:	add    BYTE PTR [eax],al
  436314:	push   ecx
  436315:	or     DWORD PTR [eax],eax
  436317:	add    BYTE PTR [eax+0x0],cl
  43631a:	es jl  0x43631d
  43631d:	add    dh,BYTE PTR [esi]
  43631f:	or     BYTE PTR [eax],al
  436321:	add    ah,al
  436323:	inc    ebp
  436324:	add    BYTE PTR [ecx],dh
  436326:	out    dx,al
  436327:	adc    al,0x54
  436329:	addr16 shl edi,cl
  43632c:	addr16 and al,0x29
  43632f:	pop    eax
  436330:	mov    ds:0xea7ac759,eax
  436335:	test   BYTE PTR [eax-0x20],cl
  436338:	or     eax,DWORD PTR [edi-0xa263daf]
  43633e:	xor    al,0x6c
  436340:	lods   al,BYTE PTR ds:[esi]
  436341:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  436343:	repz or al,0x80
  436346:	dec    edx
  436347:	fist   DWORD PTR [eax-0xc6babef]
  43634d:	int3   
  43634e:	mov    eax,ds:0x6838c75c
  436353:	adc    DWORD PTR [di+0x65],edi
  436357:	outs   dx,BYTE PTR ds:[esi]
  436358:	into   
  436359:	add    bl,BYTE PTR [edi+esi*2+0x67]
  43635d:	xchg   esp,eax
  43635e:	fsub   DWORD PTR [eax-0x7f5ddc03]
  436364:	pop    edx
  436365:	cmc    
  436366:	int    0x54
  436368:	jmp    0x7dc5:0xa46db1bf
  43636f:	inc    ebp
  436370:	(bad)  
  436371:	jnp    0x436332
  436373:	fwait
  436374:	cwde   
  436375:	dec    esp
  436376:	fs test eax,0xcebc0ce1
  43637c:	stos   DWORD PTR es:[edi],eax
  43637d:	ins    DWORD PTR es:[edi],dx
  43637e:	jo     0x4363a0
  436380:	das    
  436381:	jle    0x436328
  436383:	xor    ecx,DWORD PTR [esi-0x2]
  436386:	ins    DWORD PTR es:[edi],dx
  436387:	xchg   esp,eax
  436388:	rcl    BYTE PTR [ecx],0x47
  43638b:	sbb    ecx,DWORD PTR [ebx-0x476f1434]
  436391:	sar    BYTE PTR [edx+0x155c5118],1
  436397:	xchg   ecx,eax
  436398:	or     al,0xdc
  43639a:	aas    
  43639b:	leave  
  43639c:	gs mul dh
  43639f:	ret    0x9e94
  4363a2:	test   BYTE PTR [edx],ah
  4363a4:	mov    bh,BYTE PTR [edi-0x1e]
  4363a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4363a8:	or     ecx,eax
  4363aa:	shr    BYTE PTR [eax+0x40d82648],cl
  4363b0:	leave  
  4363b1:	jmp    0x6218:0x11ccf2be
  4363b8:	test   DWORD PTR [ecx+0x4e],ebx
  4363bb:	imul   DWORD PTR [ebx-0x7a51d410]
  4363c1:	push   ebp
  4363c2:	out    dx,eax
  4363c3:	push   edx
  4363c4:	mov    BYTE PTR [eax],bl
  4363c6:	adc    al,0x5
  4363c8:	add    al,0xd3
  4363ca:	imul   ecx,DWORD PTR [eax+0x4],0x47
  4363ce:	xchg   edi,eax
  4363cf:	mov    esp,0xd35ae366
  4363d4:	ja     0x4363e7
  4363d6:	xchg   edx,eax
  4363d7:	dec    eax
  4363d8:	loopne 0x436394
  4363da:	xchg   esi,eax
  4363db:	in     eax,dx
  4363dc:	mov    DWORD PTR [ebx+0x4164e15],edi
  4363e2:	icebp  
  4363e3:	call   0x78998a58
  4363e8:	lock data16 sub bl,bl
  4363ec:	mov    edi,0xc50cee34
  4363f1:	mov    DWORD PTR [edi],ebx
  4363f3:	rol    BYTE PTR [eax+0x6],1
  4363f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4363f7:	int3   
  4363f8:	test   eax,0xf4739111
  4363fd:	mov    WORD PTR [esi+0x6f],cs
  436400:	mov    al,ds:0x95911ee5
  436405:	sbb    ch,ah
  436407:	inc    edx
  436408:	xchg   edx,eax
  436409:	cmp    DWORD PTR [ecx+edx*8+0xa],edi
  43640d:	imul   edi,DWORD PTR [edx+ebx*1],0x67
  436411:	aad    0xa8
  436413:	jne    0x436476
  436415:	popf   
  436416:	dec    ebp
  436417:	pusha  
  436418:	stc    
  436419:	arpl   WORD PTR [ecx+esi*2-0x23],bp
  43641d:	xor    ebx,DWORD PTR [edi-0x45ef7ba]
  436423:	cmp    BYTE PTR [ecx+0x629e6c7f],ah
  436429:	sub    al,0x2e
  43642b:	adc    eax,0x3bf33273
  436430:	xchg   DWORD PTR [ebx+0x50],ecx
  436433:	adc    BYTE PTR [eax+eax*8-0x51],dh
  436437:	mov    bh,0x74
  436439:	dec    esi
  43643a:	inc    esi
  43643b:	je     0x43647f
  43643d:	xchg   edi,eax
  43643e:	sub    BYTE PTR [ebx-0x20],dl
  436441:	and    al,0xad
  436443:	jmp    0xf4803b64
  436448:	stos   DWORD PTR es:[edi],eax
  436449:	jae    0x4364b0
  43644b:	or     dh,BYTE PTR [ecx+0x40]
  43644e:	xor    al,bl
  436450:	sahf   
  436451:	rcl    BYTE PTR [edx+esi*2-0xb9b830e],0x36
  436459:	push   cs
  43645a:	add    DWORD PTR ds:[ebx+edx*4-0x3f5c77e0],esi
  436462:	jp     0x4364c9
  436464:	jno    0x436458
  436466:	jno    0x4363fc
  436468:	lods   al,BYTE PTR ds:[esi]
  436469:	test   eax,0x8f18d74e
  43646e:	lds    eax,FWORD PTR [ebp-0x4428ab02]
  436474:	cmp    eax,0xa70e73e6
  436479:	daa    
  43647a:	js     0x43644c
  43647c:	sub    al,0xdb
  43647e:	xchg   edx,eax
  43647f:	xchg   edi,eax
  436480:	(bad)  
  436481:	(bad)  
  436482:	aam    0x9c
  436484:	push   ebp
  436485:	ins    BYTE PTR es:[edi],dx
  436486:	sub    DWORD PTR [ecx-0x70f433ef],edx
  43648c:	rcr    BYTE PTR ds:0x38e4f3f2,0xae
  436493:	aad    0xe
  436495:	in     al,0xb1
  436497:	jge    0x4364c2
  436499:	enter  0x7f2c,0x8c
  43649d:	adc    ecx,DWORD PTR [ebp+edx*4+0x62f588bd]
  4364a4:	adc    edx,DWORD PTR [eax-0x47684f16]
  4364aa:	mov    DWORD PTR [eax+0x45],esp
  4364ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4364ae:	jmp    0x33073970
  4364b3:	fcom   DWORD PTR [esi-0x43fcec8e]
  4364b9:	clc    
  4364ba:	ja     0x436522
  4364bc:	popf   
  4364bd:	fdiv   DWORD PTR [ebp-0x5ff2b917]
  4364c3:	loope  0x436445
  4364c5:	mov    edx,edx
  4364c7:	push   ebp
  4364c8:	mul    BYTE PTR [esi]
  4364ca:	xchg   esp,eax
  4364cb:	les    ebp,FWORD PTR [esi]
  4364cd:	jbe    0x4364f1
  4364cf:	test   al,0x97
  4364d1:	retf   0x9773
  4364d4:	call   0xf70e7040
  4364d9:	sbb    al,0xf
  4364db:	sub    eax,0x46770c9c
  4364e0:	repz mov ebx,DWORD PTR [edi+0x74]
  4364e4:	and    dl,dl
  4364e6:	xor    BYTE PTR [edi+ebp*2-0x61],bl
  4364ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4364eb:	dec    esp
  4364ec:	jmp    0x43651f
  4364ee:	cli    
  4364ef:	fadd   st,st(0)
  4364f1:	jno    0x436551
  4364f3:	cli    
  4364f4:	or     ecx,esp
  4364f6:	jg     0x436515
  4364f8:	cld    
  4364f9:	xlat   BYTE PTR ds:[ebx]
  4364fa:	call   0xf623d2b3
  4364ff:	xor    ebp,ebx
  436501:	and    BYTE PTR [edx+0x75],dh
  436504:	out    0x98,eax
  436506:	ret    0xd34a
  436509:	fld    QWORD PTR [esi+ebp*1+0x7]
  43650d:	in     al,0x30
  43650f:	push   eax
  436510:	daa    
  436511:	es hlt 
  436513:	in     al,dx
  436514:	adc    eax,edx
  436516:	cmp    eax,0xd4218bde
  43651b:	in     al,0x10
  43651d:	mov    ds:0x8ca99ac8,al
  436522:	test   BYTE PTR [ecx+0x42d6341c],al
  436528:	mov    eax,0x12aa52ab
  43652d:	outs   dx,DWORD PTR ds:[esi]
  43652e:	pop    eax
  43652f:	jmp    0x4630:0x8549f1eb
  436536:	aas    
  436537:	jl     0x436505
  436539:	sar    cl,0x2d
  43653c:	pop    ebx
  43653d:	cmp    eax,0x82432ff
  436542:	push   edx
  436543:	mov    eax,0x6f0e09e7
  436548:	fisttp WORD PTR [eax-0x6c]
  43654b:	retf   
  43654c:	sub    eax,0xcc48478e
  436551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436552:	ins    BYTE PTR es:[edi],dx
  436553:	rol    BYTE PTR [edx-0x47b46923],0xf
  43655a:	int3   
  43655b:	nop
  43655c:	int    0xf1
  43655e:	and    bl,bh
  436560:	jge    0x43656d
  436562:	jne    0x4365e1
  436564:	mov    ah,0x1f
  436566:	aad    0x34
  436568:	adc    al,BYTE PTR [eax-0x52]
  43656b:	popa   
  43656c:	add    ebx,DWORD PTR [edx+eax*2-0x39]
  436570:	push   ebx
  436571:	mov    cl,0x5e
  436573:	inc    ecx
  436574:	sub    ch,BYTE PTR [edx-0x80]
  436577:	stc    
  436578:	mov    DWORD PTR [ecx],ebp
  43657a:	bound  esi,QWORD PTR [edi-0x5bab6c8c]
  436580:	popf   
  436581:	jecxz  0x436579
  436583:	sub    BYTE PTR [eax],al
  436585:	xlat   BYTE PTR ds:[ebx]
  436586:	ds ror al,0xe1
  43658a:	mov    dl,0x3
  43658c:	test   al,0x75
  43658e:	ins    DWORD PTR es:[edi],dx
  43658f:	shr    dl,1
  436591:	jo     0x4365a5
  436593:	or     BYTE PTR ds:0x4e5950b8,0x38
  43659a:	xchg   esp,eax
  43659b:	sbb    bh,BYTE PTR [edx]
  43659d:	sbb    edi,DWORD PTR [ecx+0x35c8afef]
  4365a3:	mov    eax,0xad29c59a
  4365a8:	shl    ah,cl
  4365aa:	test   eax,0x105adc5c
  4365af:	mov    esi,0x7aa7895
  4365b4:	pop    DWORD PTR [eax]
  4365b6:	imul   ecx,DWORD PTR ds:0x95a36775,0x2fa8efed
  4365c0:	jb     0x436631
  4365c2:	aam    0x18
  4365c4:	jle    0x43663a
  4365c6:	jge    0x436594
  4365c8:	sahf   
  4365c9:	xor    eax,0xb1fb9325
  4365ce:	in     eax,dx
  4365cf:	test   al,dh
  4365d1:	sub    ebx,edi
  4365d3:	add    al,0x26
  4365d5:	cli    
  4365d6:	outs   dx,BYTE PTR ds:[esi]
  4365d7:	in     al,0x53
  4365d9:	adc    al,0xb0
  4365db:	loop   0x43659a
  4365dd:	xor    eax,0xd4812b9
  4365e2:	mov    esp,0xa678cdaf
  4365e7:	jb     0x4365e8
  4365e9:	stos   BYTE PTR es:[edi],al
  4365ea:	cmp    ah,al
  4365ec:	push   0x535f6ba1
  4365f1:	lock dec edx
  4365f3:	sbb    BYTE PTR [esp+eax*2],al
  4365f6:	xor    al,0x1e
  4365f8:	sbb    ebp,DWORD PTR [eax]
  4365fa:	and    al,0x6a
  4365fc:	icebp  
  4365fd:	sub    BYTE PTR [ebx-0x79],bh
  436600:	popa   
  436601:	out    dx,eax
  436602:	lahf   
  436603:	push   eax
  436604:	mov    DWORD PTR [edi],edx
  436606:	dec    esp
  436607:	adc    ecx,ebx
  436609:	adc    eax,0x930ac89b
  43660e:	sub    esp,esi
  436610:	push   edx
  436611:	test   DWORD PTR [esi+ebx*8-0x584079dc],0xde235018
  43661c:	cmp    eax,0xb431a083
  436621:	cmp    al,0xc2
  436623:	jl     0x436639
  436625:	(bad)  
  436626:	(bad)  
  436627:	cmp    dl,ch
  436629:	stc    
  43662a:	pusha  
  43662b:	fadd   QWORD PTR [eax+ebp*4]
  43662e:	sahf   
  43662f:	aad    0x36
  436631:	sub    DWORD PTR [eax-0x3474067c],eax
  436637:	sbb    al,0x69
  436639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43663a:	ins    DWORD PTR es:[edi],dx
  43663b:	push   esp
  43663c:	sub    al,0x37
  43663e:	jne    0x43660f
  436640:	dec    edi
  436641:	sbb    ebx,ebp
  436643:	fwait
  436644:	mov    bl,0x50
  436646:	mov    dh,0x28
  436648:	jbe    0x43660e
  43664a:	mov    bl,0x42
  43664c:	jno    0x4366cb
  43664e:	je     0x436670
  436650:	xchg   edx,eax
  436651:	xchg   BYTE PTR cs:[edx+0x26],dl
  436655:	pop    eax
  436656:	or     ebx,DWORD PTR [eax-0x5bec323c]
  43665c:	pop    ds
  43665d:	scas   al,BYTE PTR es:[edi]
  43665e:	shr    DWORD PTR [edi+0x40],cl
  436661:	faddp  st(6),st
  436663:	enter  0x24d0,0xeb
  436667:	cmc    
  436668:	fsub   DWORD PTR [edx+esi*2-0x65]
  43666c:	retf   0x701f
  43666f:	xchg   esi,eax
  436670:	or     dl,BYTE PTR [edi]
  436672:	mov    BYTE PTR [ecx+0x136347c9],al
  436678:	call   0x229b:0xb9ac4b0a
  43667f:	mov    ch,0x27
  436681:	or     eax,ebp
  436683:	mov    al,ds:0x9b6248d0
  436688:	fcmovbe st,st(3)
  43668a:	mov    ah,0xe7
  43668c:	arpl   WORD PTR [eax-0x48],di
  43668f:	dec    edi
  436690:	pop    edi
  436691:	(bad)  
  436692:	jnp    0x4366f1
  436694:	outs   dx,BYTE PTR ds:[esi]
  436695:	(bad)  
  436696:	pushf  
  436697:	call   0x1ec50526
  43669c:	inc    ebx
  43669d:	cwde   
  43669e:	shl    BYTE PTR ss:[eax+0x6a3de8d2],0x8f
  4366a6:	gs hlt 
  4366a8:	in     al,0x2c
  4366aa:	fsubr  st,st(1)
  4366ac:	pop    eax
  4366ad:	test   DWORD PTR [ecx],ecx
  4366af:	in     al,0x74
  4366b1:	mov    ebp,?
  4366b3:	mov    edi,0x1a98d134
  4366b8:	jnp    0x4366a5
  4366ba:	mov    al,0x1c
  4366bc:	lea    ebx,[eax-0xf]
  4366bf:	inc    ebx
  4366c0:	xor    edx,DWORD PTR [esi]
  4366c2:	jl     0x436698
  4366c4:	sub    DWORD PTR [ebx],0xffffffbc
  4366c7:	bound  ebp,QWORD PTR [eax-0x5d]
  4366ca:	inc    esp
  4366cb:	(bad)  
  4366cd:	pop    esi
  4366ce:	add    dl,dl
  4366d0:	inc    esp
  4366d1:	xor    ch,ch
  4366d3:	inc    ebp
  4366d4:	popf   
  4366d5:	sbb    al,0xe0
  4366d7:	or     al,0x8
  4366d9:	and    BYTE PTR [edx+ecx*2],dl
  4366dc:	es mov bh,0xc4
  4366df:	mov    bl,0x9a
  4366e1:	pop    ebx
  4366e2:	out    dx,eax
  4366e3:	inc    esp
  4366e4:	sbb    BYTE PTR [ebx+0x26],cl
  4366e7:	call   0x3da9f575
  4366ec:	pop    esi
  4366ed:	rcl    esp,0x34
  4366f0:	or     al,0xc5
  4366f2:	cs sti 
  4366f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4366f5:	hlt    
  4366f6:	test   esi,esp
  4366f8:	sub    esi,DWORD PTR [eax]
  4366fa:	mov    bl,0x98
  4366fc:	out    dx,eax
  4366fd:	mov    ebp,0x14b007af
  436702:	fsubr  st,st(6)
  436704:	ja     0x43669e
  436706:	das    
  436707:	les    esp,FWORD PTR [ecx-0x2]
  43670a:	fwait
  43670b:	cld    
  43670c:	or     eax,0x3a71e6a9
  436711:	and    dh,BYTE PTR [edi]
  436713:	xchg   ebp,eax
  436714:	and    BYTE PTR [eax],cl
  436716:	add    BYTE PTR [eax-0x47],cl
  436719:	scas   al,BYTE PTR es:[edi]
  43671a:	or     al,BYTE PTR [ebx-0x3e4ebb52]
  436720:	and    al,0x64
  436722:	cmp    eax,0x68d189cf
  436727:	sbb    esi,esi
  436729:	jae    0x43677e
  43672b:	adc    esi,ebp
  43672d:	lods   eax,DWORD PTR ds:[esi]
  43672e:	sub    DWORD PTR [eax],edx
  436730:	loopne 0x4366e6
  436732:	cmp    DWORD PTR [ebp+esi*1+0x4a],0x7934141b
  43673a:	stc    
  43673b:	repnz outs dx,BYTE PTR ds:[esi]
  43673d:	les    edx,FWORD PTR [edx]
  43673f:	jmp    0x7aaf:0xad1558fb
  436746:	mov    dl,0xa6
  436748:	imul   eax,DWORD PTR [ecx+0x7c],0x1d15a644
  43674f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436750:	int    0x1d
  436752:	mov    bl,0xa0
  436754:	inc    ecx
  436755:	push   ebp
  436756:	pushf  
  436757:	fmul   DWORD PTR [edi+esi*4-0x69]
  43675b:	ret    
  43675c:	dec    eax
  43675d:	sbb    DWORD PTR [ecx+0x64d420f2],0xffffffcd
  436764:	pop    esi
  436765:	ins    BYTE PTR es:[edi],dx
  436766:	sahf   
  436767:	imul   ah
  436769:	test   BYTE PTR [esi+0x6d],al
  43676c:	mov    eax,fs
  43676e:	nop
  43676f:	sub    BYTE PTR [eax],bl
  436771:	xchg   esi,eax
  436772:	pop    ebx
  436773:	push   0xb4bc7593
  436778:	xchg   esi,eax
  436779:	mov    ah,0xa1
  43677b:	pushw  0xffa1
  43677e:	dec    esi
  43677f:	out    0x5c,al
  436781:	lea    esi,[ebx-0x43d373ca]
  436787:	daa    
  436788:	rol    BYTE PTR [eax+0x683a43a],cl
  43678e:	inc    ebx
  43678f:	(bad)  
  436790:	mov    eax,0xe3e5a416
  436795:	inc    esi
  436796:	lea    ebp,[ebx+0x1]
  436799:	jl     0x4367b9
  43679b:	enter  0xc966,0xcf
  43679f:	xchg   edx,eax
  4367a0:	xor    BYTE PTR [ecx+ebp*1+0x640dec3e],al
  4367a7:	jl     0x436737
  4367a9:	push   edx
  4367aa:	mov    cl,0xca
  4367ac:	mov    ebx,0xfa572294
  4367b1:	sub    BYTE PTR [ebp-0x47f34a8d],bl
  4367b7:	icebp  
  4367b8:	retf   
  4367b9:	push   ebx
  4367ba:	cld    
  4367bb:	or     edi,edi
  4367bd:	fs inc ebx
  4367bf:	fadd   QWORD PTR [ebx+edi*4+0x58]
  4367c3:	sti    
  4367c4:	(bad)  
  4367c5:	out    0xe2,al
  4367c7:	fild   WORD PTR [eax]
  4367c9:	fucomip st,st(4)
  4367cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4367cc:	cdq    
  4367cd:	sub    ebp,esi
  4367cf:	add    al,0xc6
  4367d1:	test   al,0x7b
  4367d3:	out    dx,eax
  4367d4:	fwait
  4367d5:	xor    DWORD PTR [edx+0x6b],edx
  4367d8:	push   DWORD PTR [ebx-0x34]
  4367db:	sbb    BYTE PTR [edx+edi*2+0x386cf60a],bl
  4367e2:	stc    
  4367e3:	lock call 0x80a130c4
  4367e9:	jecxz  0x4367e3
  4367eb:	iret   
  4367ec:	adc    al,0xc0
  4367ee:	(bad)  
  4367ef:	ss sbb al,0x73
  4367f2:	call   edx
  4367f4:	retf   
  4367f5:	cmp    BYTE PTR [ebx-0x9a27f38],ah
  4367fb:	iret   
  4367fc:	xor    ah,BYTE PTR [ebp+0x324f0de0]
  436802:	dec    esp
  436803:	pop    esi
  436804:	pop    ebx
  436805:	ret    0x455
  436808:	stos   DWORD PTR es:[edi],eax
  436809:	cld    
  43680a:	js     0x43683b
  43680c:	jge    0x436824
  43680e:	inc    DWORD PTR [edx-0x202b37d8]
  436814:	pop    ebx
  436815:	mov    ebp,0x4ca05801
  43681a:	inc    edi
  43681b:	sbb    ebx,DWORD PTR [eax+0x2a062730]
  436821:	push   0x70
  436823:	daa    
  436824:	daa    
  436825:	jmp    0x436892
  436827:	mov    edi,0x1839dc32
  43682c:	sub    DWORD PTR [ecx],edi
  43682e:	sbb    al,0xb7
  436830:	inc    ebx
  436831:	leave  
  436832:	cwde   
  436833:	jnp    0x436871
  436835:	ss push ss
  436837:	adc    eax,0x81499173
  43683c:	adc    esp,DWORD PTR [eax-0x74]
  43683f:	nop
  436840:	aas    
  436841:	sub    DWORD PTR ds:0x84d65d22,esi
  436847:	mov    ch,0x61
  436849:	aad    0xef
  43684b:	sub    BYTE PTR [eax-0x6ad3cb10],ah
  436851:	lods   eax,DWORD PTR ds:[esi]
  436852:	or     eax,0xa436f87c
  436857:	scas   al,BYTE PTR es:[edi]
  436858:	push   eax
  436859:	shr    bl,cl
  43685b:	or     al,0xf3
  43685d:	xor    bh,BYTE PTR [edx]
  43685f:	cmp    al,0xb3
  436861:	je     0x43687a
  436863:	xchg   edi,eax
  436864:	outs   dx,DWORD PTR ds:[esi]
  436865:	stos   BYTE PTR es:[edi],al
  436866:	dec    edx
  436867:	xchg   ebx,eax
  436868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436869:	ret    0x1598
  43686c:	inc    esp
  43686d:	ds xchg esi,eax
  43686f:	into   
  436870:	jl     0x436801
  436872:	(bad)  
  436873:	mov    esp,0x83ad8c75
  436878:	lock mov dl,0x9f
  43687b:	inc    eax
  43687c:	fs (bad) 
  43687e:	rol    ch,cl
  436880:	or     ebp,DWORD PTR [ecx-0x4c]
  436883:	rol    ah,0x88
  436886:	jmp    0xf902:0x82550479
  43688d:	mov    eax,0xec6c9fac
  436892:	mov    dl,0x71
  436894:	cmp    edx,DWORD PTR [esi+ebx*2]
  436897:	shl    ch,1
  436899:	(bad)  
  43689a:	scas   eax,DWORD PTR es:[edi]
  43689b:	xchg   esi,eax
  43689c:	pusha  
  43689d:	push   edi
  43689e:	mov    WORD PTR [edi-0x3b1ecb88],fs
  4368a4:	shl    DWORD PTR [esi-0x63f79029],1
  4368aa:	dec    esp
  4368ab:	cmp    edi,edx
  4368ad:	adc    DWORD PTR [edx-0x3f902e85],esi
  4368b3:	ret    0x785
  4368b6:	jge    0x436898
  4368b8:	sti    
  4368b9:	mov    eax,0x6a8ce4a3
  4368be:	mov    ds:0x745a64df,eax
  4368c3:	jecxz  0x4368cd
  4368c5:	in     al,dx
  4368c6:	push   0x4f
  4368c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4368c9:	sub    DWORD PTR [edi+0x1a],0x7d98b00d
  4368d0:	into   
  4368d1:	in     al,0xab
  4368d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4368d4:	js     0x4368d2
  4368d6:	aam    0xaa
  4368d8:	mov    ch,0x23
  4368da:	repz xchg edi,eax
  4368dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4368dd:	pop    ebp
  4368de:	xor    edi,eax
  4368e0:	arpl   WORD PTR [esi-0x79],di
  4368e3:	test   eax,edi
  4368e5:	cmp    al,0x2d
  4368e7:	scas   eax,DWORD PTR es:[edi]
  4368e8:	sbb    al,0x4c
  4368ea:	imul   ebp,DWORD PTR [edx-0x34d9ff55],0xdd4240f6
  4368f4:	popa   
  4368f5:	out    0xd5,al
  4368f7:	mov    ah,0x10
  4368f9:	ss call 0xa5c6ad86
  4368ff:	call   0xc124:0xc73220a
  436906:	add    bl,dh
  436908:	push   es
  436909:	mov    edi,0xae30f07c
  43690e:	and    eax,0x855b7e71
  436913:	stos   DWORD PTR es:[edi],eax
  436914:	adc    eax,0x94f8f54
  436919:	and    eax,0x4ed089b0
  43691e:	cld    
  43691f:	xor    eax,0x89373f8b
  436924:	mov    DWORD PTR [ebp+0xbfd2048],eax
  43692a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43692b:	(bad)  
  43692c:	icebp  
  43692d:	mov    ds:0x4e44c24e,al
  436932:	std    
  436933:	push   eax
  436934:	dec    ecx
  436935:	lahf   
  436936:	xchg   esp,eax
  436937:	push   dx
  436939:	push   0x3e953f73
  43693e:	xchg   esp,eax
  43693f:	pop    ds
  436940:	xchg   DWORD PTR [ebx],ecx
  436942:	mov    WORD PTR [ebp+0x3d],gs
  436945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436946:	jg     0x43692b
  436948:	call   0x6e784d93
  43694d:	leave  
  43694e:	pop    ecx
  43694f:	fnstcw WORD PTR fs:[esi-0x13]
  436953:	sti    
  436954:	pop    eax
  436955:	jno    0x436987
  436957:	rol    bh,1
  436959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43695a:	add    DWORD PTR [esi+0x78],ebx
  43695d:	jl     0x436918
  43695f:	or     al,0xc3
  436961:	(bad)
  436965:	mov    edx,0xaa6e63a0
  43696a:	rol    BYTE PTR gs:[ebx+0x4748db0c],0xfc
  436972:	xchg   DWORD PTR [ecx-0x3cea9ab6],ecx
  436978:	ins    BYTE PTR es:[edi],dx
  436979:	icebp  
  43697a:	lea    edx,[ecx]
  43697c:	sbb    DWORD PTR [ecx],eax
  43697e:	push   ds
  43697f:	and    ch,BYTE PTR [edi-0x5e0d1970]
  436985:	jnp    0x4369ac
  436987:	xchg   DWORD PTR [edi],edx
  436989:	xor    DWORD PTR [ebp+ecx*4+0x6fcd56cd],esi
  436990:	ficomp DWORD PTR [esi+0x5c6bd8a0]
  436996:	jne    0x4369fd
  436998:	dec    ebx
  436999:	jl     0x436a03
  43699b:	int    0x80
  43699d:	xor    eax,0xf4b859ce
  4369a2:	mov    ah,0x8e
  4369a4:	mov    al,0xa4
  4369a6:	aaa    
  4369a7:	inc    ecx
  4369a8:	mov    ss,WORD PTR [ecx]
  4369aa:	adc    al,0x50
  4369ac:	push   eax
  4369ad:	xchg   esp,eax
  4369ae:	enter  0x1acb,0x96
  4369b2:	or     ah,BYTE PTR [edx]
  4369b4:	mov    ah,0xd5
  4369b6:	cli    
  4369b7:	in     al,dx
  4369b8:	pop    edi
  4369b9:	xchg   ebx,eax
  4369ba:	bound  ebp,QWORD PTR [ebx+0x51]
  4369bd:	xor    DWORD PTR [ebp-0x7028ef25],ebx
  4369c3:	mov    ah,0x77
  4369c5:	jge    0x436953
  4369c7:	dec    edi
  4369c8:	mov    ebp,0xfb2036b8
  4369cd:	xchg   ebp,eax
  4369ce:	fisubr DWORD PTR [ecx]
  4369d0:	neg    edx
  4369d2:	fsub   QWORD PTR [edx-0x2f234d84]
  4369d8:	cmp    BYTE PTR [edi],cl
  4369da:	xchg   BYTE PTR [eax],al
  4369dc:	xor    ebx,esi
  4369de:	dec    ecx
  4369df:	es lahf 
  4369e1:	jno    0x4369aa
  4369e3:	mov    ecx,0x65d43a24
  4369e8:	xlat   BYTE PTR ds:[ebx]
  4369e9:	or     al,0xe9
  4369eb:	sahf   
  4369ec:	test   esp,0x9838d279
  4369f2:	daa    
  4369f3:	push   cs
  4369f4:	pop    edx
  4369f5:	mov    esi,0x7077a3f0
  4369fa:	hlt    
  4369fb:	inc    edx
  4369fc:	pop    ebp
  4369fd:	repnz add dl,BYTE PTR [edi+ebp*2]
  436a01:	cmc    
  436a02:	pop    ecx
  436a03:	and    ah,BYTE PTR [eax+0x35]
  436a06:	push   esp
  436a07:	sar    DWORD PTR [eax],0xfc
  436a0a:	sub    al,dl
  436a0c:	shl    BYTE PTR [esi],1
  436a0e:	leave  
  436a0f:	popf   
  436a10:	rcr    DWORD PTR [edi+esi*8+0x7],0xd4
  436a15:	cs call 0x451ab7d
  436a1b:	test   DWORD PTR [ebp-0x78],edi
  436a1e:	jp     0x436a36
  436a20:	pusha  
  436a21:	sub    eax,0xec7d280a
  436a26:	xor    al,bl
  436a28:	test   al,0x7b
  436a2a:	jbe    0x436a01
  436a2c:	dec    esp
  436a2d:	(bad)  
  436a2f:	add    DWORD PTR [ecx],0xe33f6433
  436a35:	jo     0x436a37
  436a37:	or     BYTE PTR [edx+esi*1+0x4c],ch
  436a3b:	push   es
  436a3c:	dec    eax
  436a3d:	mov    bl,BYTE PTR [eax]
  436a3f:	jge    0x436aa5
  436a41:	jb     0x4369ca
  436a43:	adc    DWORD PTR [ecx+0x6e],ebx
  436a46:	sar    BYTE PTR [edi+ebp*4],cl
  436a49:	mov    ds:0x2c732aec,al
  436a4e:	xor    al,0xd9
  436a50:	pusha  
  436a51:	jge    0x436ab2
  436a53:	mov    WORD PTR [ebx+0x7d],ss
  436a56:	pop    esi
  436a57:	xor    dl,BYTE PTR [esp+eax*4-0x70]
  436a5b:	jo     0x436a5e
  436a5d:	mov    ebp,0x46dd859b
  436a62:	test   al,0xa2
  436a64:	pop    edx
  436a65:	and    al,BYTE PTR [ecx]
  436a67:	mov    ds:0x5049bc39,al
  436a6c:	mov    eax,ds:0x81e5f682
  436a71:	adc    al,0x4d
  436a73:	test   BYTE PTR [esp+ebp*4-0x35],dh
  436a77:	sahf   
  436a78:	pushf  
  436a79:	xchg   esi,eax
  436a7a:	outs   dx,BYTE PTR ds:[esi]
  436a7b:	std    
  436a7c:	test   BYTE PTR [eax-0x4f68191d],bl
  436a82:	mov    cl,0x13
  436a84:	xor    eax,0xd141bc8d
  436a89:	jmp    0xa9acbf67
  436a8e:	mov    eax,fs
  436a90:	fsubr  QWORD PTR [eax-0x6f93fabb]
  436a96:	ret    
  436a97:	xrelease mov BYTE PTR [ebp-0x5da81348],ah
  436a9e:	or     bh,BYTE PTR [edi+0x25]
  436aa1:	lods   al,BYTE PTR ds:[esi]
  436aa2:	int    0xfc
  436aa4:	sbb    dh,BYTE PTR [ecx-0x3]
  436aa7:	repnz mov dh,0xef
  436aaa:	shl    BYTE PTR [edx],1
  436aac:	pop    ss
  436aad:	and    ebx,DWORD PTR [esi]
  436aaf:	jns    0x436a4b
  436ab1:	sbb    eax,esi
  436ab3:	hlt    
  436ab4:	mov    BYTE PTR [ebx],bh
  436ab6:	sub    DWORD PTR [ebp-0x1a],eax
  436ab9:	sbb    esp,DWORD PTR [edx+0x3f]
  436abc:	pushf  
  436abd:	mov    ebx,0xfdbe62b
  436ac2:	cmc    
  436ac3:	ret    
  436ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436ac5:	shr    BYTE PTR [ebx+eiz*2-0x642cbd1a],0x66
  436acd:	mov    ch,0xe4
  436acf:	xor    dh,BYTE PTR [eax]
  436ad1:	and    eax,0x57eb8e39
  436ad6:	jmp    0x843497e3
  436adb:	std    
  436adc:	ret    
  436add:	xchg   esp,eax
  436ade:	sub    DWORD PTR [eax],edx
  436ae0:	sub    al,0xc3
  436ae2:	in     al,dx
  436ae3:	lods   eax,DWORD PTR ds:[esi]
  436ae4:	xor    al,0xa6
  436ae6:	push   eax
  436ae7:	rcl    bh,cl
  436ae9:	aam    0x3e
  436aeb:	leave  
  436aec:	and    DWORD PTR [ebp-0x444735f],esi
  436af2:	clc    
  436af3:	pop    esp
  436af4:	rol    DWORD PTR [esp+edx*8-0x71],cl
  436af8:	ins    BYTE PTR es:[edi],dx
  436af9:	jne    0x436b44
  436afb:	sbb    al,0x34
  436afd:	adc    al,0xe2
  436aff:	inc    edi
  436b00:	jmp    0x436aa8
  436b02:	sub    bl,BYTE PTR [eax+eax*2-0x46686139]
  436b09:	cmp    cl,BYTE PTR [esi]
  436b0b:	psubq  mm5,mm0
  436b0e:	sub    dl,bh
  436b10:	jb     0x436b7b
  436b12:	stos   BYTE PTR es:[edi],al
  436b13:	mov    al,0x4a
  436b15:	pop    ecx
  436b16:	or     al,0x69
  436b18:	push   ebp
  436b19:	fstp   st(0)
  436b1b:	cld    
  436b1c:	cmc    
  436b1d:	gs push 0xd3334f30
  436b23:	mov    edx,0x40223222
  436b28:	push   esp
  436b29:	stos   BYTE PTR es:[edi],al
  436b2a:	pop    edi
  436b2b:	bound  ebx,QWORD PTR [ebp+0x52]
  436b2e:	fwait
  436b2f:	push   es
  436b30:	sbb    edi,DWORD PTR [eax+0x47]
  436b33:	mov    esi,0xcff66b16
  436b38:	neg    DWORD PTR [eax+eiz*1-0x37]
  436b3c:	lahf   
  436b3d:	ss repnz cmp eax,0x44a79743
  436b44:	loope  0x436af6
  436b46:	sub    eax,0x3701ec6d
  436b4b:	aaa    
  436b4c:	push   0xb1cc84fa
  436b51:	jo     0x436b94
  436b53:	adc    dl,0x8c
  436b56:	loop   0x436b26
  436b58:	pushf  
  436b59:	xor    BYTE PTR [ebx+0x39],bl
  436b5c:	shl    DWORD PTR [edx+0x5bf64b34],cl
  436b62:	push   edi
  436b63:	test   eax,0x58bdbf6c
  436b68:	ror    DWORD PTR [eax+eiz*4],cl
  436b6b:	and    BYTE PTR [ebx+0x33],ch
  436b6e:	shl    BYTE PTR [edx+0x7c],cl
  436b71:	inc    ebx
  436b72:	cli    
  436b73:	push   0xffffff9a
  436b75:	or     DWORD PTR [esi+0x43a0fc3c],ebx
  436b7b:	mov    bl,0x0
  436b7d:	das    
  436b7e:	jne    0x436b61
  436b80:	imul   esp,ebx,0x3c9aa8c4
  436b86:	pop    ss
  436b87:	fs or  al,ah
  436b8a:	pop    ss
  436b8b:	ins    BYTE PTR es:[edi],dx
  436b8c:	retf   0x7fc
  436b8f:	pop    edi
  436b90:	jns    0x436b98
  436b92:	test   DWORD PTR [edx-0x70],ebp
  436b95:	add    DWORD PTR [ecx+0x1b4aab69],0xc7b43e1c
  436b9f:	adc    bh,ah
  436ba1:	lahf   
  436ba2:	frstor [ebp+ecx*4-0x2ffb274b]
  436ba9:	or     eax,0x19a8ac6d
  436bae:	nop
  436baf:	cld    
  436bb0:	xchg   BYTE PTR [eax],dl
  436bb2:	cmp    DWORD PTR [ecx],ebp
  436bb4:	test   DWORD PTR [esi],esp
  436bb6:	in     eax,0x82
  436bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436bb9:	or     dh,0x5d
  436bbc:	pusha  
  436bbd:	jns    0x436b67
  436bbf:	and    dl,BYTE PTR [ebx]
  436bc1:	enter  0x94a6,0xe0
  436bc5:	mov    ds:0x2a06c747,eax
  436bca:	in     al,dx
  436bcb:	call   0x6d9f9d9d
  436bd0:	xor    ecx,0xd5f6101c
  436bd6:	enter  0xe7d8,0xb2
  436bda:	and    al,0xa7
  436bdc:	mov    eax,0x9383616b
  436be1:	xchg   esp,eax
  436be2:	out    0x16,eax
  436be4:	data16 fsubr QWORD PTR [edi-0x3]
  436be8:	and    al,0x0
  436bea:	cmc    
  436beb:	imul   eax,DWORD PTR [edi+0xb],0x8d598300
  436bf2:	cmp    dl,BYTE PTR [ebp+ecx*4-0x3c]
  436bf6:	in     eax,dx
  436bf7:	and    al,0x60
  436bf9:	xchg   ebp,eax
  436bfa:	sub    eax,DWORD PTR [edx*2+0x482b8aea]
  436c01:	cmp    bh,al
  436c03:	mov    edi,0xa22a65e4
  436c08:	(bad)  
  436c09:	lock inc ebx
  436c0b:	pop    ebp
  436c0c:	xchg   ecx,eax
  436c0d:	mov    esp,esp
  436c0f:	aas    
  436c10:	inc    eax
  436c11:	sub    eax,0xd32f6414
  436c16:	mov    edx,0x395f3618
  436c1b:	cmp    BYTE PTR [ecx],bl
  436c1d:	and    DWORD PTR [ebx+0x5f],eax
  436c20:	repz rol DWORD PTR [edx+0x4f],cl
  436c24:	pop    esp
  436c25:	add    ecx,edx
  436c27:	repnz mov al,ds:0x9104229
  436c2d:	add    al,0xb0
  436c2f:	call   0xec02:0x94f65281
  436c36:	sub    bh,dh
  436c38:	(bad)  
  436c39:	mov    ds:0x2b71e1c4,eax
  436c3e:	jp     0x436c8c
  436c40:	int3   
  436c41:	cmp    eax,0xe4a9e543
  436c46:	push   ds
  436c47:	pop    ebx
  436c48:	jo     0x436c5f
  436c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436c4b:	(bad)  [ebx+0x34bb13c4]
  436c51:	xchg   esp,eax
  436c52:	push   edx
  436c53:	lahf   
  436c54:	mov    ecx,DWORD PTR [edx]
  436c56:	cwde   
  436c57:	mov    BYTE PTR [ebp+0x17f83c26],bh
  436c5d:	cdq    
  436c5e:	pop    ds
  436c5f:	push   ss
  436c60:	popf   
  436c61:	jl     0x436ca8
  436c63:	add    BYTE PTR [eax],al
  436c65:	add    BYTE PTR [eax],al
  436c67:	add    BYTE PTR [ebx],dh
  436c69:	sbb    al,0xf2
  436c6b:	push   esp
  436c6c:	push   ecx
  436c6d:	or     DWORD PTR [eax],eax
  436c6f:	add    BYTE PTR [eax],al
  436c71:	add    BYTE PTR [eax],al
  436c73:	add    BYTE PTR [ecx+0x9],dl
  436c76:	add    BYTE PTR [eax],al
  436c78:	dec    ecx
  436c79:	add    BYTE PTR [esi],ah
  436c7b:	jl     0x436c7d
  436c7d:	add    dh,BYTE PTR [esi]
  436c7f:	or     BYTE PTR [eax],al
  436c81:	add    ah,al
  436c83:	inc    ebp
  436c84:	add    dh,dl
  436c86:	das    
  436c87:	cmovs  edi,DWORD PTR [esi-0x1a]
  436c8b:	add    al,0xaa
  436c8d:	and    al,0x99
  436c8f:	mov    fs,WORD PTR [edx+0x7ba79b8b]
  436c95:	pop    es
  436c96:	dec    eax
  436c97:	push   0x80865645
  436c9c:	das    
  436c9d:	(bad)  
  436c9e:	xchg   edi,eax
  436c9f:	ins    BYTE PTR es:[edi],dx
  436ca0:	sub    al,0xcf
  436ca2:	pop    edx
  436ca3:	int    0x51
  436ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436ca6:	inc    ebp
  436ca7:	out    dx,eax
  436ca8:	nop
  436ca9:	cmp    DWORD PTR [ebp+edx*1-0x33],ecx
  436cad:	xchg   ecx,eax
  436cae:	clc    
  436caf:	ins    BYTE PTR es:[edi],dx
  436cb0:	fdivr  DWORD PTR [eax]
  436cb2:	arpl   WORD PTR [edi],sp
  436cb4:	fidivr DWORD PTR [esi+ebp*1]
  436cb7:	jge    0x436d23
  436cb9:	outs   dx,BYTE PTR ds:[esi]
  436cba:	pop    esp
  436cbb:	adc    DWORD PTR [edi+0x7d],0x684e7233
  436cc2:	xchg   edx,eax
  436cc3:	cmp    BYTE PTR [edi],0xea
  436cc6:	pop    ss
  436cc7:	add    edi,DWORD PTR [edx]
  436cc9:	sub    bh,BYTE PTR [ebp+0x3fbca434]
  436ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436cd0:	lods   al,BYTE PTR ds:[esi]
  436cd1:	push   ecx
  436cd2:	push   ss
  436cd3:	fwait
  436cd4:	nop
  436cd5:	dec    esp
  436cd6:	das    
  436cd7:	xchg   edi,eax
  436cd8:	outs   dx,BYTE PTR ds:[esi]
  436cd9:	jns    0x436c9f
  436cdb:	cwde   
  436cdc:	aas    
  436cdd:	test   al,0x70
  436cdf:	dec    ebx
  436ce0:	in     al,0xdc
  436ce2:	aad    0xb2
  436ce4:	fst    QWORD PTR [ecx+ecx*4]
  436ce7:	xchg   esp,eax
  436ce8:	test   ebp,ebp
  436cea:	aaa    
  436ceb:	js     0x436ca1
  436ced:	inc    ebp
  436cee:	mov    edx,edi
  436cf0:	mov    eax,0x6369a17f
  436cf5:	fwait
  436cf6:	cmp    al,0x79
  436cf8:	jbe    0x436cd6
  436cfa:	lods   eax,DWORD PTR ds:[esi]
  436cfb:	ss jmp 0x27eb3bc7
  436d01:	dec    esp
  436d02:	test   BYTE PTR [eax],bl
  436d04:	scas   eax,DWORD PTR es:[edi]
  436d05:	inc    edi
  436d06:	xor    edx,edi
  436d08:	ins    DWORD PTR es:[edi],dx
  436d09:	adc    cl,ah
  436d0b:	test   al,0x29
  436d0d:	int    0xc1
  436d0f:	xchg   ebx,eax
  436d10:	add    ebp,DWORD PTR [ebx-0x69338244]
  436d16:	fwait
  436d17:	mov    bl,0xc0
  436d19:	jne    0x436cf0
  436d1b:	clc    
  436d1c:	xchg   ebx,eax
  436d1d:	lock and bh,BYTE PTR [edx+0x51]
  436d21:	ret    0xd54
  436d24:	mov    dh,0x65
  436d26:	adc    al,0x6e
  436d28:	xor    DWORD PTR [ebx-0x3b],ebp
  436d2b:	fwait
  436d2c:	mov    ebp,0x90bc498e
  436d31:	nop
  436d32:	cmc    
  436d33:	add    ebx,DWORD PTR [ebx]
  436d35:	call   0x952453ba
  436d3a:	adc    eax,0x516f89dd
  436d3f:	stos   BYTE PTR es:[edi],al
  436d40:	pop    ds
  436d41:	add    al,0xc8
  436d43:	mov    al,ds:0x43afeaa2
  436d48:	vmovapd ymm0,ymm1
  436d4c:	es sti 
  436d4e:	xchg   ebx,eax
  436d4f:	xor    dh,ah
  436d51:	xchg   ecx,eax
  436d52:	sub    eax,0x847da5d0
  436d57:	xchg   esp,eax
  436d58:	mov    bl,0x70
  436d5a:	std    
  436d5b:	inc    ebp
  436d5c:	hlt    
  436d5d:	sub    bh,BYTE PTR [ebx-0x7be2d4ad]
  436d63:	icebp  
  436d64:	sbb    BYTE PTR cs:[edi+0x5a],al
  436d68:	ffreep st(6)
  436d6a:	js     0x436dc4
  436d6c:	mov    WORD PTR [eax+0x4c73103c],cs
  436d72:	clc    
  436d73:	int    0x9e
  436d75:	retf   
  436d76:	jmp    0xb4d9f5db
  436d7b:	fst    QWORD PTR [edi+esi*8-0x45f79779]
  436d82:	call   0xc5c5874
  436d87:	outs   dx,DWORD PTR ds:[esi]
  436d88:	pop    es
  436d89:	sub    al,0x1d
  436d8b:	test   al,0x4e
  436d8d:	mov    WORD PTR [ebx+eiz*1+0x5350a58a],ss
  436d94:	xchg   ecx,eax
  436d95:	jp     0x436d8a
  436d97:	dec    esp
  436d98:	add    al,al
  436d9a:	cmp    eax,0x84b94274
  436d9f:	mov    dh,0x5f
  436da1:	cli    
  436da2:	(bad)  
  436da3:	outs   dx,DWORD PTR ds:[esi]
  436da4:	sbb    al,0xc2
  436da6:	sub    esi,DWORD PTR [ebx-0x50]
  436da9:	test   eax,0x4077ecad
  436dae:	push   esi
  436daf:	jp     0x436d92
  436db1:	ret    0x1868
  436db4:	fsubp  st(0),st
  436db6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  436db8:	pop    eax
  436db9:	mov    eax,ds:0xc89792a
  436dbe:	jge    0x436d48
  436dc0:	call   0x9a79c410
  436dc5:	jmp    0x9471:0x30acb6a2
  436dcc:	in     eax,0x1d
  436dce:	xlat   BYTE PTR ds:[ebx]
  436dcf:	pop    esi
  436dd0:	xor    edx,DWORD PTR [ecx+ebx*1-0x7d]
  436dd4:	arpl   WORD PTR [esi-0x4137af37],di
  436dda:	js     0x436dd0
  436ddc:	(bad)  
  436ddd:	(bad)  
  436dde:	js     0x436e16
  436de0:	adc    cl,dh
  436de2:	jmp    0x436d80
  436de4:	imul   esp,DWORD PTR [bp+si],0xffffffc3
  436de8:	or     DWORD PTR [ebx],ecx
  436dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436deb:	lods   eax,DWORD PTR ds:[esi]
  436dec:	rol    BYTE PTR [esi],0xa1
  436def:	push   ebp
  436df0:	into   
  436df1:	mov    dh,0xed
  436df3:	mov    esi,0xe9f0e482
  436df8:	(bad)  
  436df9:	das    
  436dfa:	push   0x26
  436dfc:	pop    esp
  436dfd:	push   0xffffff8c
  436dff:	fldcw  WORD PTR ds:0x86754a78
  436e05:	sub    DWORD PTR [edi-0xa9b9850],edx
  436e0b:	int    0xc2
  436e0d:	sub    bl,BYTE PTR [edx]
  436e0f:	cmp    eax,0x9eb356d4
  436e14:	sub    al,BYTE PTR [edx-0x760027f]
  436e1a:	or     al,0x37
  436e1c:	xor    al,0xe4
  436e1e:	das    
  436e1f:	pushf  
  436e20:	dec    edi
  436e22:	mov    al,ds:0x470c0ae1
  436e27:	jge    0x436e28
  436e29:	in     eax,0x2c
  436e2b:	(bad)  
  436e2c:	fmul   QWORD PTR [edi+0x23d57529]
  436e32:	gs jbe 0x436e1d
  436e35:	sub    eax,0x67fd4f49
  436e3a:	dec    eax
  436e3b:	(bad)  
  436e3d:	or     al,0x15
  436e3f:	mov    esi,0xc1fdea5f
  436e44:	xchg   esi,eax
  436e45:	shl    DWORD PTR [eax],cl
  436e47:	fldlg2 
  436e49:	sub    DWORD PTR [esi+0x60923307],edx
  436e4f:	fdivr  DWORD PTR [ecx-0x67]
  436e52:	rcl    DWORD PTR ds:[esi-0x77],0x25
  436e57:	inc    ecx
  436e58:	cld    
  436e59:	pop    edx
  436e5a:	mov    ebp,0x77169ff0
  436e5f:	or     ebx,edi
  436e61:	and    dl,bh
  436e63:	jb     0x436e8d
  436e65:	xchg   edi,eax
  436e66:	sahf   
  436e67:	pusha  
  436e68:	push   0xffffffc5
  436e6a:	inc    esp
  436e6b:	add    cl,BYTE PTR [edi]
  436e6d:	pop    ecx
  436e6e:	out    dx,eax
  436e6f:	pop    es
  436e70:	add    al,0xa0
  436e72:	aas    
  436e73:	in     al,dx
  436e74:	call   0xba9b:0xba419cce
  436e7b:	or     al,0x10
  436e7d:	pop    esp
  436e7e:	push   es
  436e7f:	gs jle 0x436ed5
  436e82:	mov    edi,0x4134315a
  436e87:	or     esi,DWORD PTR [ecx]
  436e89:	(bad)  
  436e8a:	jmp    0x436eea
  436e8c:	aaa    
  436e8d:	std    
  436e8e:	pop    eax
  436e8f:	mov    esi,0x76e09a15
  436e94:	stos   BYTE PTR es:[edi],al
  436e95:	cld    
  436e96:	(bad)  
  436e98:	mov    ebx,0xb98515e9
  436e9d:	clc    
  436e9e:	nop
  436e9f:	(bad)  
  436ea0:	and    al,0x3e
  436ea2:	in     al,0x8c
  436ea4:	add    al,0x44
  436ea6:	clc    
  436ea7:	mov    ds:0x684048ce,al
  436eac:	cwde   
  436ead:	pop    edi
  436eae:	ret    
  436eaf:	pop    ss
  436eb0:	into   
  436eb1:	scas   eax,DWORD PTR es:[edi]
  436eb2:	ins    BYTE PTR es:[edi],dx
  436eb3:	out    0x5,eax
  436eb5:	jle    0x436ed6
  436eb7:	fstp   QWORD PTR [ecx+0x54]
  436eba:	mov    edx,0xa5bc5190
  436ebf:	nop
  436ec0:	add    BYTE PTR [ebx-0x7f4b4d44],bh
  436ec6:	fsub   st,st(2)
  436ec8:	loop   0x436f38
  436eca:	dec    BYTE PTR [ecx+eax*4]
  436ecd:	pop    esp
  436ece:	jge    0x436f22
  436ed0:	xchg   esi,eax
  436ed1:	add    dh,BYTE PTR [ebp+ebp*8+0x50]
  436ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436ed6:	or     bl,0xa8
  436ed9:	jnp    0x436e87
  436edb:	test   al,0x6a
  436edd:	inc    esi
  436ede:	mov    cl,0xa4
  436ee0:	add    eax,0xb5142689
  436ee5:	icebp  
  436ee6:	arpl   dx,dx
  436ee8:	enter  0x7378,0x1b
  436eec:	dec    eax
  436eed:	shl    BYTE PTR [esi],cl
  436eef:	xchg   ebp,eax
  436ef0:	xor    eax,0xbc73b470
  436ef5:	adc    dl,al
  436ef7:	repz mov esp,0x9e259491
  436efd:	jb     0x436e80
  436eff:	fisubr DWORD PTR [ebp+0x73b8f51b]
  436f05:	pop    eax
  436f06:	fisubr DWORD PTR [edx+0x54]
  436f09:	les    edx,FWORD PTR [eax+0x1039dced]
  436f0f:	inc    edi
  436f10:	aaa    
  436f11:	fcomi  st,st(1)
  436f13:	mov    ds:0xae3900a0,eax
  436f18:	iret   
  436f19:	nop
  436f1a:	mov    cl,0x9a
  436f1c:	sub    eax,0x9913a862
  436f21:	je     0x436f8e
  436f23:	dec    ebp
  436f24:	sbb    ebp,ecx
  436f26:	and    al,0xcc
  436f28:	(bad)  
  436f29:	call   0x57c4:0xbe7955bd
  436f30:	lock sub al,0xcc
  436f33:	cmp    ecx,DWORD PTR [ebx+0x37f547bc]
  436f39:	adc    al,0x6b
  436f3b:	(bad)  
  436f3c:	int    0xf2
  436f3e:	pop    edi
  436f3f:	fmul   DWORD PTR [ecx-0x176435e]
  436f45:	cmp    eax,0x247a418e
  436f4a:	outs   dx,BYTE PTR ds:[esi]
  436f4b:	loopne 0x436fb9
  436f4d:	inc    edx
  436f4e:	cmc    
  436f4f:	push   es
  436f50:	mov    ebp,0x4fe297f
  436f55:	in     eax,dx
  436f56:	xchg   edi,eax
  436f57:	pusha  
  436f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436f59:	add    ebx,DWORD PTR [ebx+0x7328a0c5]
  436f5f:	dec    esi
  436f60:	fisttp QWORD PTR [ebp-0x14cd94e]
  436f66:	dec    esp
  436f67:	cs dec eax
  436f69:	data16 or al,bl
  436f6c:	inc    ebp
  436f6d:	mov    ebx,0x2ad8f4c5
  436f72:	es je  0x436f69
  436f75:	xchg   esi,eax
  436f76:	out    dx,al
  436f77:	in     eax,dx
  436f78:	sbb    BYTE PTR [esi+0x68],ch
  436f7b:	push   ds
  436f7c:	loope  0x436fdd
  436f7e:	and    ebp,DWORD PTR [edx+0x7]
  436f81:	cmp    al,0xa9
  436f83:	fwait
  436f84:	shl    BYTE PTR [edi-0x75],cl
  436f87:	push   0xdc604541
  436f8c:	arpl   dx,cx
  436f8e:	mov    ecx,0x50abe8d9
  436f93:	test   BYTE PTR [esi],bh
  436f95:	cmp    bh,BYTE PTR [edx-0x8]
  436f98:	ins    BYTE PTR es:[edi],dx
  436f99:	or     ah,BYTE PTR [edx+0x4f1c2c89]
  436f9f:	cmc    
  436fa0:	mov    edx,0xf9621b6e
  436fa5:	push   eax
  436fa6:	push   0xb5e9d511
  436fab:	push   ebx
  436fac:	ds xchg esp,eax
  436fae:	je     0x436fc6
  436fb0:	jmp    0x125c:0xb5e11060
  436fb7:	cwde   
  436fb8:	into   
  436fb9:	sbb    eax,0x109e637b
  436fbe:	test   ebx,edi
  436fc0:	inc    eax
  436fc1:	fsincos 
  436fc3:	jbe    0x43702b
  436fc5:	int3   
  436fc6:	xchg   esi,eax
  436fc7:	les    ebp,FWORD PTR [ecx+0x64]
  436fca:	pushf  
  436fcb:	adc    BYTE PTR [edi+0x4f3f97ee],bh
  436fd1:	lock mov cl,cl
  436fd4:	inc    edx
  436fd5:	mov    WORD PTR [edi+ebx*8-0x537dc1d5],es
  436fdc:	setno  BYTE PTR [ebx]
  436fdf:	inc    edx
  436fe0:	call   0xe933:0xd06aa918
  436fe7:	pusha  
  436fe8:	aaa    
  436fe9:	or     al,0x75
  436feb:	shl    DWORD PTR [ecx],cl
  436fed:	js     0x43705c
  436fef:	js     0x436f8a
  436ff1:	mov    BYTE PTR ds:0x9c39669a,ah
  436ff7:	out    0x8a,eax
  436ff9:	std    
  436ffa:	mov    bl,0x95
  436ffc:	repz icebp 
  436ffe:	ffree  st(0)
  437000:	cwde   
  437001:	dec    ecx
  437002:	frstor [esi+ebp*1-0x1bdf1fbe]
  437009:	stc    
  43700a:	pop    es
  43700b:	and    ebx,ebp
  43700d:	int    0xc
  43700f:	test   eax,0xe2b48cdc
  437014:	jmp    0x1b4223b7
  437019:	add    dh,BYTE PTR [eax-0x5026d32a]
  43701f:	fidivr WORD PTR [edi-0x55]
  437022:	push   eax
  437023:	aam    0xd9
  437025:	xor    eax,0x2811e6b1
  43702a:	push   0x1017f86e
  43702f:	sahf   
  437030:	push   0x1169e99d
  437035:	sbb    al,0x6a
  437037:	dec    edx
  437038:	sbb    edx,DWORD PTR [esi-0x4f]
  43703b:	sbb    edi,DWORD PTR [edi]
  43703d:	cmp    eax,0x38dd8bc4
  437042:	stc    
  437043:	popa   
  437044:	or     BYTE PTR [eax+edx*8-0x18],dl
  437048:	xchg   DWORD PTR [edi-0x5d],ebx
  43704b:	pop    edx
  43704c:	ja     0x43708a
  43704e:	sub    BYTE PTR [si],cl
  437051:	ja     0x437056
  437053:	in     al,0x8a
  437055:	push   esi
  437056:	dec    edx
  437057:	stc    
  437058:	outs   dx,BYTE PTR ds:[esi]
  437059:	xor    BYTE PTR [ecx],dh
  43705b:	xchg   eax,edi
  43705d:	ret    
  43705e:	ret    
  43705f:	push   eax
  437060:	fldcw  WORD PTR [ecx]
  437062:	fcom   DWORD PTR [ebx-0x78a9c8f7]
  437068:	pop    esp
  437069:	ret    
  43706a:	push   ebp
  43706b:	cld    
  43706c:	imul   edx,DWORD PTR [esi+edi*8+0x46a5934e],0x3e
  437074:	and    BYTE PTR [eax+0x298d0a17],cl
  43707a:	mov    ds:0xbb449108,eax
  43707f:	into   
  437080:	mov    ch,BYTE PTR [edx]
  437082:	sbb    DWORD PTR [ebx],esi
  437084:	inc    edi
  437085:	mov    gs,WORD PTR [eax+0x2a]
  437088:	mov    ebx,DWORD PTR [edx+ecx*2+0x2ce56456]
  43708f:	adc    BYTE PTR [ebx+ebx*8],dh
  437092:	outs   dx,BYTE PTR ds:[esi]
  437093:	lods   eax,DWORD PTR gs:[esi]
  437095:	and    al,0x98
  437097:	pop    esi
  437098:	xor    al,0xc7
  43709a:	xor    BYTE PTR [edi+eax*4+0x34],0x9f
  43709f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4370a1:	pop    eax
  4370a2:	ins    BYTE PTR es:[edi],dx
  4370a3:	jge    0x43707c
  4370a5:	(bad)  
  4370a6:	sahf   
  4370a7:	test   BYTE PTR [esi-0x1],al
  4370aa:	jl     0x4370a1
  4370ac:	mov    ebx,0x4ac04adf
  4370b1:	push   edi
  4370b2:	mul    BYTE PTR [eax+0x207f9ecc]
  4370b8:	shl    eax,cl
  4370ba:	adc    ch,0x48
  4370bd:	test   BYTE PTR [ecx+0x7f463497],0xca
  4370c4:	push   ecx
  4370c5:	ins    BYTE PTR es:[edi],dx
  4370c6:	add    DWORD PTR [edx+edi*2-0x24],eax
  4370ca:	ins    BYTE PTR es:[edi],dx
  4370cb:	adc    DWORD PTR [esi+0x316a9037],ebp
  4370d1:	mov    WORD PTR es:[ecx+ecx*8],ds
  4370d5:	jns    0x4370c6
  4370d7:	mov    ah,0x32
  4370d9:	mov    edi,0xed589959
  4370de:	xor    dh,bh
  4370e0:	pop    esp
  4370e1:	adc    eax,0x44d1828c
  4370e6:	sbb    DWORD PTR [edx-0x3c597fb1],esp
  4370ec:	add    al,0x4
  4370ee:	xor    BYTE PTR [ebx+0x47],bh
  4370f1:	jg     0x437097
  4370f3:	or     cl,cl
  4370f5:	mul    ebp
  4370f7:	xlat   BYTE PTR ds:[ebx]
  4370f8:	adc    dl,BYTE PTR [esi]
  4370fa:	push   ds
  4370fb:	enter  0x9a4b,0xf3
  4370ff:	xor    al,0xe2
  437101:	(bad)  
  437103:	xchg   edi,eax
  437104:	in     al,dx
  437105:	pop    ss
  437106:	jne    0x43712e
  437108:	sub    ebp,DWORD PTR [esi-0x61]
  43710b:	int3   
  43710c:	mov    ds:0xe2820f94,al
  437111:	lea    ebx,[ecx]
  437113:	loop   0x437175
  437115:	adc    eax,0x66f269b8
  43711a:	inc    ecx
  43711b:	fadd   DWORD PTR [ebx-0x2e]
  43711e:	sub    ebx,esp
  437120:	repz test al,0x9e
  437123:	push   ss
  437124:	shl    BYTE PTR [edi+0x7d],cl
  437127:	add    BYTE PTR cs:[eax-0x7c],ch
  43712b:	pop    esp
  43712c:	out    0x93,eax
  43712e:	pop    esp
  43712f:	addr16 retf 
  437131:	test   al,0xed
  437133:	pop    eax
  437134:	or     edx,ecx
  437136:	push   edx
  437137:	mov    bl,0x50
  437139:	dec    ebx
  43713a:	int3   
  43713b:	inc    esp
  43713c:	jmp    0x78a2b831
  437141:	test   al,0x15
  437143:	lock cmp DWORD PTR [ebx+edx*1-0x7d],eax
  437148:	rol    DWORD PTR [ecx-0x70eb7a87],1
  43714e:	push   0x3debafe6
  437153:	ficom  WORD PTR [eax+0x38]
  437156:	pop    edi
  437157:	cmp    ah,BYTE PTR [edx+0x77423273]
  43715d:	cmp    al,ah
  43715f:	repnz sub esi,DWORD PTR [di+0x5999]
  437165:	ja     0x4371a7
  437167:	add    al,0x91
  437169:	push   ss
  43716a:	lds    eax,FWORD PTR [eax-0x788a5f85]
  437170:	sub    ah,al
  437172:	xlat   BYTE PTR ds:[ebx]
  437173:	adc    DWORD PTR ds:0xdac542f5,0xf124f34c
  43717d:	and    al,0x95
  43717f:	push   eax
  437180:	or     eax,ecx
  437182:	jo     0x4371ed
  437184:	repz inc eax
  437186:	cmp    ebx,eax
  437188:	xor    al,0xc9
  43718a:	sbb    BYTE PTR ds:0x4d14,cl
  43718f:	mov    ch,0x76
  437191:	push   ecx
  437192:	lock push ss
  437194:	cmp    al,0xf1
  437196:	ret    0x71c8
  437199:	rcl    esp,0x22
  43719c:	dec    eax
  43719d:	pusha  
  43719e:	xchg   ch,al
  4371a0:	repnz mov ds:0xb86fb9b,al
  4371a6:	test   BYTE PTR [edx+ecx*2+0x5a7ec944],dh
  4371ad:	mov    dh,0xe4
  4371af:	sub    al,0xe8
  4371b1:	add    DWORD PTR [ebp-0x5d],0xffffff84
  4371b5:	ins    DWORD PTR es:[edi],dx
  4371b6:	ja     0x4371c7
  4371b8:	push   eax
  4371b9:	shl    BYTE PTR [ebx+esi*1+0x4e1ee819],1
  4371c0:	push   ss
  4371c1:	je     0x4371f6
  4371c3:	aad    0x7
  4371c5:	(bad)  
  4371c6:	out    dx,al
  4371c7:	cmp    BYTE PTR [edx+0x3d4a98a5],dh
  4371cd:	int    0x9e
  4371cf:	push   ebx
  4371d0:	pop    ebp
  4371d1:	enter  0xbc7f,0xbc
  4371d5:	cli    
  4371d6:	xor    edi,DWORD PTR [ebx]
  4371d8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4371da:	addr16 ret 0x2364
  4371de:	arpl   WORD PTR [esi],sp
  4371e0:	mov    ch,0xf1
  4371e2:	out    0xe2,al
  4371e4:	addr16 mov bh,dl
  4371e7:	xchg   ecx,eax
  4371e8:	div    BYTE PTR [eax-0x15]
  4371eb:	push   ebp
  4371ec:	js     0x4371d5
  4371ee:	lods   al,BYTE PTR ds:[esi]
  4371ef:	(bad)  
  4371f1:	outs   dx,BYTE PTR ds:[esi]
  4371f2:	mov    ds:0x73a79401,eax
  4371f7:	shr    BYTE PTR ds:0x740e0b39,1
  4371fd:	fnstenv [ecx+0x7c0e7874]
  437203:	and    BYTE PTR [ebp+ebp*1-0x63e51a3f],0xa2
  43720b:	sahf   
  43720c:	fimul  DWORD PTR [ecx]
  43720e:	fwait
  43720f:	in     eax,dx
  437210:	mov    ecx,0xbabc0cc
  437215:	daa    
  437216:	nop
  437217:	mov    bh,0x82
  437219:	idiv   al
  43721b:	in     al,0xaf
  43721d:	shl    BYTE PTR [esi],cl
  43721f:	ret    
  437220:	in     al,0x5c
  437222:	aad    0x75
  437224:	or     BYTE PTR [ecx],bh
  437226:	iret   
  437227:	xchg   edx,eax
  437228:	das    
  437229:	add    bh,BYTE PTR [edx]
  43722b:	and    ch,al
  43722d:	mov    al,0x91
  43722f:	mov    dl,0x71
  437231:	lds    esp,FWORD PTR [eax-0x26]
  437234:	push   eax
  437235:	sub    al,0xd4
  437237:	std    
  437238:	xor    BYTE PTR [edx+eax*8+0x39b372fb],al
  43723f:	clc    
  437240:	inc    edi
  437241:	jecxz  0x437225
  437243:	push   eax
  437244:	mov    ch,bh
  437246:	jmp    0x4308eff
  43724b:	jge    0x43721d
  43724d:	and    dl,bl
  43724f:	mov    ecx,DWORD PTR [edx]
  437251:	inc    eax
  437252:	retf   
  437253:	enter  0xa46e,0x4a
  437257:	mov    al,ah
  437259:	fucomp st(0)
  43725b:	push   ds
  43725c:	dec    ecx
  43725d:	test   eax,0x25f467bb
  437262:	push   0xc
  437264:	jns    0x43729c
  437266:	call   0x3079:0xa811372e
  43726d:	shl    edi,cl
  43726f:	inc    edx
  437270:	fsub   DWORD PTR [ebx+0x34]
  437273:	jle    0x4372cd
  437275:	push   esp
  437276:	dec    eax
  437277:	adc    edi,DWORD PTR fs:[esi-0x9]
  43727b:	ss dec ecx
  43727d:	stos   BYTE PTR es:[edi],al
  43727e:	cld    
  43727f:	stos   DWORD PTR es:[edi],eax
  437280:	rcr    bh,1
  437282:	je     0x437224
  437284:	aaa    
  437285:	inc    ecx
  437286:	add    esp,DWORD PTR [eax]
  437288:	(bad)  
  437289:	cli    
  43728a:	pop    esp
  43728b:	in     eax,0x91
  43728d:	inc    ebx
  43728e:	xchg   ah,cl
  437290:	inc    esp
  437291:	sbb    BYTE PTR [eax-0x46],cl
  437294:	xchg   ebp,eax
  437295:	mov    ds:0x685f518a,al
  43729a:	pop    edi
  43729b:	mov    dl,0x65
  43729d:	mov    WORD PTR [ecx-0x3f],es
  4372a0:	gs jo  0x43722f
  4372a3:	dec    edx
  4372a4:	jns    0x437228
  4372a6:	add    eax,0x8245f2a1
  4372ab:	xor    al,0x58
  4372ad:	xchg   esi,eax
  4372ae:	loopne 0x437306
  4372b0:	dec    eax
  4372b1:	hlt    
  4372b2:	pop    ebp
  4372b3:	push   ss
  4372b4:	pop    eax
  4372b5:	out    dx,al
  4372b6:	and    al,0xd
  4372b8:	jl     0x4372eb
  4372ba:	js     0x437304
  4372bc:	leave  
  4372bd:	jl     0x43731c
  4372bf:	sbb    DWORD PTR [eax],esp
  4372c1:	push   edi
  4372c2:	add    al,0xd6
  4372c4:	cmp    ah,BYTE PTR fs:[eax-0x24c9831c]
  4372cb:	sti    
  4372cc:	add    DWORD PTR [ecx],edi
  4372ce:	aas    
  4372cf:	dec    eax
  4372d0:	(bad)  
  4372d1:	idiv   DWORD PTR [eax-0x4a79e89c]
  4372d7:	lahf   
  4372d8:	ins    BYTE PTR es:[edi],dx
  4372d9:	sbb    al,BYTE PTR [esi]
  4372db:	and    DWORD PTR [ecx-0x79],ecx
  4372de:	int    0x17
  4372e0:	in     al,dx
  4372e1:	nop
  4372e2:	enter  0x6c92,0x5d
  4372e6:	nop
  4372e7:	outs   dx,BYTE PTR ds:[esi]
  4372e8:	fild   DWORD PTR [edx-0x17e9bc4c]
  4372ee:	stos   BYTE PTR es:[edi],al
  4372ef:	push   esp
  4372f0:	mov    edi,0x1bd88c02
  4372f5:	mov    edi,0xdbdb3697
  4372fa:	shr    ah,cl
  4372fc:	sbb    BYTE PTR [esi],0x41
  4372ff:	mov    ds:0xf316dd1b,al
  437304:	enter  0x75a4,0xb9
  437308:	adc    al,0x40
  43730a:	mov    edi,DWORD PTR [ebp+eiz*2-0x43]
  43730e:	enter  0x1540,0x24
  437312:	std    
  437313:	shl    DWORD PTR [ebp+0x1],0xa1
  437317:	in     al,dx
  437318:	jp     0x437305
  43731a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43731b:	enter  0x964a,0x79
  43731f:	cmp    eax,0x653c8010
  437324:	in     al,dx
  437325:	add    ah,BYTE PTR [edx]
  437327:	inc    ecx
  437328:	outs   dx,DWORD PTR ds:[esi]
  437329:	mov    eax,0x21546b51
  43732e:	stos   DWORD PTR es:[edi],eax
  43732f:	inc    edi
  437330:	div    BYTE PTR [ebx]
  437332:	fadd   QWORD PTR [edi+edi*1-0x56]
  437336:	mov    bl,BYTE PTR [eax]
  437338:	shl    BYTE PTR [eax+edx*1+0x0],0x54
  43733d:	mov    eax,fs
  43733f:	xchg   ecx,eax
  437340:	pop    eax
  437341:	add    al,0x4d
  437343:	repz and al,0x46
  437346:	xor    DWORD PTR [edx-0x21df6120],ecx
  43734c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43734d:	int3   
  43734e:	cmc    
  43734f:	jge    0x43733b
  437351:	inc    ecx
  437352:	out    0x8,eax
  437354:	xor    eax,0x79af0cd
  437359:	sub    eax,0x63a28e49
  43735e:	mov    dl,BYTE PTR [ebx*1+0x567b386f]
  437365:	add    dh,cl
  437367:	idiv   DWORD PTR [eax]
  437369:	in     al,dx
  43736a:	das    
  43736b:	stos   BYTE PTR es:[edi],al
  43736c:	sbb    BYTE PTR [edi],bh
  43736e:	sar    DWORD PTR [eax],cl
  437370:	pop    eax
  437371:	pop    esp
  437372:	sbb    edx,ecx
  437374:	push   eax
  437375:	idiv   DWORD PTR [ecx-0x13]
  437378:	push   esp
  437379:	ins    DWORD PTR es:[edi],dx
  43737a:	add    al,0xe
  43737c:	jl     0x43733c
  43737e:	mov    WORD PTR [edi+0x28af7d34],ss
  437384:	push   cs
  437385:	pop    esi
  437386:	stos   BYTE PTR es:[edi],al
  437387:	adc    DWORD PTR [edi-0x14],esi
  43738a:	iret   
  43738b:	ja     0x4373d9
  43738d:	push   0x5608d4f9
  437392:	xor    eax,0x1870a38c
  437397:	mov    bh,0x10
  437399:	out    dx,al
  43739a:	ffreep st(4)
  43739c:	out    0x8e,eax
  43739e:	sbb    BYTE PTR [ecx],ah
  4373a0:	aas    
  4373a1:	mov    cl,0x71
  4373a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4373a4:	adc    DWORD PTR [esi-0x2b],0x3c
  4373a8:	dec    edx
  4373a9:	xchg   edi,eax
  4373aa:	xchg   ebp,eax
  4373ab:	xchg   edx,eax
  4373ac:	dec    edx
  4373ad:	repnz add ebp,0x5d9b4c60
  4373b4:	retf   
  4373b5:	dec    ecx
  4373b6:	fdiv   QWORD PTR [edx+0x371d8401]
  4373bc:	adc    DWORD PTR [ebp-0x5e7ec511],ebp
  4373c2:	test   al,0xad
  4373c4:	xchg   esi,eax
  4373c5:	or     edx,ebx
  4373c7:	xchg   edx,eax
  4373c8:	jle    0x437413
  4373ca:	enter  0xdc50,0x44
  4373ce:	in     eax,0xb2
  4373d0:	mov    al,0x5b
  4373d2:	jge    0x43735c
  4373d4:	je     0x4373ec
  4373d6:	add    esi,DWORD PTR [eax-0x69]
  4373d9:	xlat   BYTE PTR ds:[ebx]
  4373da:	imul   edx,DWORD PTR [esi-0x18],0xffffff98
  4373de:	aam    0x61
  4373e0:	loopne 0x43744a
  4373e2:	and    ch,BYTE PTR [ebx+0x23]
  4373e5:	add    edi,DWORD PTR [edi+eax*4-0x34a3300c]
  4373ec:	fstp   TBYTE PTR [eax+0x32]
  4373ef:	loopne 0x4373ea
  4373f1:	div    DWORD PTR [eax-0x58281b4f]
  4373f7:	mov    cl,BYTE PTR [eax+0x4bcd723]
  4373fd:	inc    esi
  4373fe:	ficomp DWORD PTR [edx-0x11]
  437401:	lods   al,BYTE PTR ds:[esi]
  437402:	sbb    al,0x6d
  437404:	shl    DWORD PTR [ebx+0x76],cl
  437407:	sar    DWORD PTR [esi-0x1d],1
  43740a:	rcl    BYTE PTR [ebx-0x13],1
  43740d:	inc    edi
  43740e:	bnd call 0xf4ee5d29
  437414:	lea    ebp,[eax-0x6a0726a6]
  43741a:	scas   eax,DWORD PTR es:[edi]
  43741b:	leave  
  43741c:	pushf  
  43741d:	or     ebx,DWORD PTR es:[eax]
  437420:	xor    al,0x3e
  437422:	rol    BYTE PTR [ebp+0x56],1
  437425:	ror    bl,0xa9
  437428:	jo     0x43748f
  43742a:	dec    edx
  43742b:	jl     0x4373ae
  43742d:	ds in  al,0xfb
  437430:	shr    dh,0x51
  437433:	outs   dx,DWORD PTR ds:[esi]
  437434:	push   esi
  437435:	lahf   
  437436:	(bad)  [eax]
  437438:	mov    edi,0x1c28bd52
  43743d:	ret    
  43743e:	xor    eax,0xa9202c93
  437443:	jne    0x43746d
  437445:	cmp    ebx,eax
  437447:	dec    ebx
  437448:	pop    edx
  437449:	aam    0x7e
  43744b:	ds jne 0x437449
  43744e:	ds ret 0xce1b
  437452:	clc    
  437453:	or     BYTE PTR [eax],dl
  437455:	nop
  437456:	or     esp,DWORD PTR [esi-0xa]
  437459:	pushf  
  43745a:	push   esp
  43745b:	sbb    al,0x9d
  43745d:	jo     0x437450
  43745f:	add    al,0x36
  437461:	inc    eax
  437462:	mov    esp,0x13c405c
  437467:	push   edi
  437468:	push   edi
  437469:	ss ret 
  43746b:	ja     0x437405
  43746d:	call   0x61e51a9f
  437472:	push   0xcadb414
  437477:	push   edx
  437478:	rol    bl,cl
  43747a:	dec    edx
  43747b:	fild   QWORD PTR [edx]
  43747d:	dec    edx
  43747e:	pop    edx
  43747f:	xor    BYTE PTR ds:0x39943d13,cl
  437485:	xchg   edx,eax
  437486:	loop   0x43746d
  437488:	push   esp
  437489:	push   ecx
  43748a:	pushf  
  43748b:	(bad)  
  43748c:	adc    dl,bh
  43748e:	data16 int3 
  437490:	jb     0x43750a
  437492:	dec    ecx
  437493:	in     al,dx
  437494:	out    dx,eax
  437495:	lea    ecx,[edi]
  437497:	jno    0x43742d
  437499:	in     al,dx
  43749a:	and    BYTE PTR [edx-0x5c],dl
  43749d:	scas   eax,DWORD PTR es:[edi]
  43749e:	imul   edi,DWORD PTR [ebp+0x441b648d],0xb4d39527
  4374a8:	mov    ds:0x68da8bfd,al
  4374ad:	inc    esi
  4374ae:	jge    0x437455
  4374b0:	xor    al,0x34
  4374b2:	lahf   
  4374b3:	jge    0x437532
  4374b5:	mov    WORD PTR [edi+0x0],fs
  4374b8:	and    DWORD PTR [eax-0x19],esi
  4374bb:	or     al,0xe7
  4374bd:	(bad)  
  4374be:	xor    al,0x19
  4374c0:	mov    bl,0x2b
  4374c2:	jmp    0x43745f
  4374c4:	clc    
  4374c5:	adc    dh,BYTE PTR [ebx+0x58]
  4374c8:	xchg   ecx,eax
  4374c9:	shl    BYTE PTR [ecx+ecx*8+0xf0f05da],0x7c
  4374d1:	fbstp  TBYTE PTR [eax+0x6ca13cad]
  4374d7:	ins    BYTE PTR es:[edi],dx
  4374d8:	out    dx,eax
  4374d9:	mov    al,ds:0xb7d0d467
  4374de:	test   BYTE PTR [ecx+0x4b],cl
  4374e1:	jno    0x4374a7
  4374e3:	fadd   st(2),st
  4374e5:	adc    esp,ecx
  4374e7:	aad    0xfb
  4374e9:	ins    DWORD PTR es:[edi],dx
  4374ea:	push   ecx
  4374eb:	ins    BYTE PTR es:[edi],dx
  4374ec:	xchg   ebp,ebp
  4374ee:	mov    al,BYTE PTR [esi+0x38]
  4374f1:	repnz lock xchg ecx,eax
  4374f4:	nop
  4374f5:	aaa    
  4374f6:	cwde   
  4374f7:	in     eax,0x48
  4374f9:	cmc    
  4374fa:	dec    ecx
  4374fb:	and    ah,BYTE PTR [edx]
  4374fd:	mov    ah,0xe0
  4374ff:	pop    esi
  437500:	mov    ecx,0x1292004d
  437505:	jb     0x4374df
  437507:	xchg   edi,eax
  437508:	(bad)  
  437509:	mov    eax,ds:0xd84aab
  43750e:	adc    esp,edi
  437510:	jle    0x437578
  437512:	mov    BYTE PTR [ecx+esi*8-0xd],bl
  437516:	rol    BYTE PTR [ecx],0xa4
  437519:	pop    esp
  43751a:	push   ecx
  43751b:	arpl   WORD PTR [edi],sp
  43751d:	fmul   DWORD PTR [edi]
  43751f:	out    dx,al
  437520:	adc    al,0xc8
  437522:	into   
  437523:	jbe    0x437587
  437525:	ret    
  437526:	dec    ebx
  437527:	dec    ecx
  437528:	stos   BYTE PTR es:[edi],al
  437529:	push   ds
  43752a:	in     al,dx
  43752b:	push   esi
  43752c:	adc    bl,BYTE PTR [esi+ecx*8]
  43752f:	xchg   ecx,eax
  437530:	stos   DWORD PTR es:[edi],eax
  437531:	fwait
  437532:	inc    eax
  437533:	adc    BYTE PTR [ebp-0x79],ch
  437536:	mov    eax,ds:0xa3b734ff
  43753b:	and    DWORD PTR [eax+0x199ed3ef],edi
  437541:	sub    ah,dl
  437543:	iret   
  437544:	pop    eax
  437545:	fdivr  QWORD PTR [ebp+0x1f]
  437548:	mov    ebp,0x9caa72e2
  43754d:	int    0x0
  43754f:	inc    edi
  437550:	jbe    0x437563
  437552:	xchg   edi,eax
  437553:	in     al,0x53
  437555:	jp     0x4375b1
  437557:	and    al,0xb1
  437559:	xchg   esi,eax
  43755a:	sbb    bl,bl
  43755c:	jl     0x43752c
  43755e:	test   al,0xa0
  437560:	dec    eax
  437561:	out    dx,eax
  437562:	inc    ebp
  437563:	icebp  
  437564:	retf   0xa425
  437567:	hlt    
  437568:	xchg   ebx,eax
  437569:	lock mov dl,0x99
  43756c:	xchg   esi,ebp
  43756e:	hlt    
  43756f:	add    BYTE PTR [eax],0x74
  437572:	adc    al,0xe
  437574:	lds    eax,FWORD PTR [edx+0x4d]
  437577:	mov    bl,0x2c
  437579:	mov    dh,0xf6
  43757b:	cmp    ch,al
  43757d:	imul   ebx,ecx,0x79
  437580:	xchg   esp,eax
  437581:	sbb    DWORD PTR [eax+edi*4],edi
  437584:	pop    esp
  437585:	xchg   ebp,eax
  437586:	push   cs
  437587:	add    BYTE PTR [ebx],ch
  437589:	js     0x4375a3
  43758b:	sbb    al,BYTE PTR [edi]
  43758d:	add    al,0x68
  43758f:	cwde   
  437590:	adc    DWORD PTR [ecx+0x1b],ebp
  437593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437595:	sub    DWORD PTR [eax],0x968b988c
  43759b:	cmp    ch,BYTE PTR [eax-0x17]
  43759e:	jae    0x4375ec
  4375a0:	and    eax,0x94c2b93e
  4375a5:	push   eax
  4375a6:	cmp    ebp,ebp
  4375a8:	jo     0x437614
  4375aa:	sub    ah,al
  4375ac:	popf   
  4375ad:	pop    es
  4375ae:	cld    
  4375af:	cwde   
  4375b0:	ret    0x7394
  4375b3:	lahf   
  4375b4:	mov    DWORD PTR [eax+0xbb2180d],edx
  4375ba:	cmp    al,0xc2
  4375bc:	cmp    cl,BYTE PTR gs:[esi+esi*8+0x42102d]
  4375c4:	add    BYTE PTR [eax],al
  4375c6:	add    BYTE PTR [eax],al
  4375c8:	xor    ebx,DWORD PTR [edi]
  4375ca:	repnz pop ebp
  4375cc:	push   ecx
  4375cd:	or     DWORD PTR [eax],eax
  4375cf:	add    BYTE PTR [eax],al
  4375d1:	add    BYTE PTR [eax],al
  4375d3:	add    BYTE PTR [ecx+0x9],dl
  4375d6:	add    BYTE PTR [eax],al
  4375d8:	dec    edx
  4375d9:	add    BYTE PTR [esi],ah
  4375db:	jl     0x4375dd
  4375dd:	add    dh,BYTE PTR [esi]
  4375df:	or     BYTE PTR [eax],al
  4375e1:	add    ah,al
  4375e3:	inc    ebp
  4375e4:	add    bl,bh
  4375e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4375e7:	sbb    ah,BYTE PTR [ebp-0x1c]
  4375ea:	lahf   
  4375eb:	sbb    DWORD PTR [ecx+0x24],esp
  4375ee:	or     esp,ecx
  4375f0:	mov    bh,0x67
  4375f2:	add    al,0xf0
  4375f4:	dec    esp
  4375f5:	mov    dh,0x48
  4375f7:	shr    DWORD PTR [esi-0x1],0xcc
  4375fb:	mov    ecx,ebp
  4375fd:	pushf  
  4375fe:	imul   ebp,DWORD PTR [ecx+ebp*8-0x21],0xa7e65b2
  437606:	jmp    0x880906d7
  43760b:	pop    es
  43760c:	jmp    0x43766d
  43760e:	lods   eax,DWORD PTR ds:[esi]
  43760f:	cmp    al,BYTE PTR [edi+0x38]
  437612:	pop    edx
  437613:	ja     0x437683
  437615:	cmp    dl,bh
  437617:	rcr    BYTE PTR [ebp+0x50],0x5c
  43761b:	outs   dx,BYTE PTR ds:[esi]
  43761c:	adc    BYTE PTR [ebp-0x36],0x41
  437620:	and    DWORD PTR [edx+0x2f],ebp
  437623:	add    BYTE PTR [ebx-0x9aca07a],0x80
  43762a:	ficomp DWORD PTR [eax-0x5c]
  43762d:	mov    al,ds:0x55fb3f35
  437632:	xchg   esp,eax
  437633:	clc    
  437634:	cmp    al,0x4c
  437636:	jmp    0x19338099
  43763b:	(bad)  
  43763c:	aam    0xa0
  43763e:	jo     0x437654
  437640:	push   es
  437641:	dec    esp
  437642:	cmp    al,0x7b
  437644:	(bad)  
  437645:	dec    ecx
  437647:	xchg   esp,eax
  437648:	add    BYTE PTR [edx-0xa3f11cc],al
  43764e:	xchg   esp,eax
  43764f:	xchg   edx,eax
  437650:	mov    eax,0x3cf3453f
  437655:	jne    0x4375e3
  437657:	dec    edx
  437658:	jmp    0xce396b39
  43765d:	bound  ebx,QWORD PTR [edi-0x7b22518e]
  437663:	xchg   BYTE PTR [ebp+eax*4-0x1ef65838],cl
  43766a:	cmp    ebp,DWORD PTR [eax-0x51a2709e]
  437670:	xor    DWORD PTR [eax],edi
  437672:	pop    edx
  437673:	ror    ah,1
  437675:	xor    eax,0x94c3bfa8
  43767a:	icebp  
  43767b:	sub    al,0xe4
  43767d:	lock xchg DWORD PTR [edx],edx
  437680:	mov    BYTE PTR [eax],dl
  437682:	xchg   esi,eax
  437683:	sbb    cl,BYTE PTR [ebp+0x47f7141a]
  437689:	enter  0xfa75,0xa5
  43768d:	test   DWORD PTR [esi-0x44],esp
  437690:	add    BYTE PTR [eax],dh
  437692:	cmp    ecx,DWORD PTR [esi+0x3e]
  437695:	(bad)  
  437696:	xor    eax,0x87e3e054
  43769b:	ja     0x437650
  43769d:	mov    eax,ds:0x470790f
  4376a2:	repnz xor eax,0x25e84dc7
  4376a8:	and    al,0xd0
  4376aa:	sub    BYTE PTR [esi],cl
  4376ac:	mov    esi,0xc5ea5cd7
  4376b1:	mov    cl,BYTE PTR [ebp+0x327956d0]
  4376b7:	dec    esi
  4376b8:	ret    
  4376b9:	push   cs
  4376ba:	xchg   edi,eax
  4376bb:	sub    esi,esp
  4376bd:	test   DWORD PTR [edx],ecx
  4376bf:	dec    esi
  4376c0:	jne    0x4376d7
  4376c2:	mov    dh,0x32
  4376c4:	loop   0x4376de
  4376c6:	xor    al,0x4e
  4376c8:	mov    cl,BYTE PTR [esi-0x2ad54ea8]
  4376ce:	cmp    al,0x58
  4376d0:	sub    al,0x57
  4376d2:	loopne 0x437739
  4376d4:	popf   
  4376d5:	xor    dh,BYTE PTR [edx]
  4376d7:	pusha  
  4376d8:	xor    al,0x54
  4376da:	stc    
  4376db:	std    
  4376dc:	inc    ebp
  4376dd:	ins    DWORD PTR es:[edi],dx
  4376de:	int    0xd0
  4376e0:	or     BYTE PTR [edx+0x1b5cd3ec],al
  4376e6:	push   esi
  4376e7:	stos   DWORD PTR es:[edi],eax
  4376e8:	out    dx,eax
  4376e9:	sub    al,0x55
  4376eb:	bound  ebx,QWORD PTR [edi+0x48c4df5b]
  4376f1:	mov    ebx,0x83e2a450
  4376f6:	aam    0xa0
  4376f8:	sub    ebx,edx
  4376fa:	lods   al,BYTE PTR ds:[esi]
  4376fb:	je     0x437736
  4376fd:	push   ebp
  4376fe:	test   eax,edx
  437700:	or     eax,0x1cf7654d
  437705:	push   ebx
  437706:	mov    ah,0x4e
  437708:	out    dx,al
  437709:	daa    
  43770a:	mov    cl,0xed
  43770c:	push   0x40
  43770e:	ja     0x437759
  437710:	lods   al,BYTE PTR ds:[esi]
  437711:	push   es
  437712:	mov    al,ds:0x640ec517
  437717:	or     cl,BYTE PTR [edx-0x3d]
  43771a:	jge    0x437756
  43771c:	sub    eax,0x9b88c35c
  437721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437722:	mov    dl,0x10
  437724:	pop    es
  437725:	pop    edx
  437726:	mov    bl,0xa6
  437728:	lods   al,BYTE PTR ds:[esi]
  437729:	push   esp
  43772a:	cmp    BYTE PTR [edi],cl
  43772c:	dec    ebp
  43772d:	shl    BYTE PTR [eax-0x40ab11ef],cl
  437733:	outs   dx,BYTE PTR ds:[esi]
  437734:	enter  0x8256,0xf9
  437738:	test   BYTE PTR [eax],bl
  43773a:	js     0x437708
  43773c:	stos   DWORD PTR es:[edi],eax
  43773d:	push   ss
  43773e:	xchg   esp,eax
  43773f:	sbb    DWORD PTR [ecx-0x6c],ebx
  437742:	sub    eax,0xacd8469c
  437747:	jae    0x4377a3
  437749:	mov    edx,esp
  43774b:	jp     0x43770d
  43774d:	shr    BYTE PTR [eax-0x5a5bf9f5],1
  437753:	xchg   ebp,eax
  437754:	shl    esp,0x1f
  437757:	call   DWORD PTR [ebx]
  437759:	nop
  43775a:	jle    0x4376e5
  43775c:	or     eax,0xa7e98c8f
  437761:	dec    edi
  437762:	jae    0x437721
  437764:	inc    ecx
  437765:	xchg   ecx,eax
  437766:	fdiv   DWORD PTR [eax+0x6d18c734]
  43776c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43776d:	stos   BYTE PTR es:[edi],al
  43776e:	es xchg ah,dl
  437771:	sbb    DWORD PTR ds:0x521db469,edx
  437777:	dec    esp
  437778:	cmp    eax,0x594f499c
  43777e:	leave  
  43777f:	cmp    eax,ebp
  437781:	sbb    esp,DWORD PTR [eax-0x240d1ca4]
  437787:	push   esi
  437788:	aam    0x4e
  43778a:	add    esp,0x7d
  43778d:	cmp    esp,esp
  43778f:	idiv   esi
  437791:	pop    ecx
  437792:	or     al,0x73
  437794:	call   0x879f2e0b
  437799:	(bad)  
  43779a:	enter  0x481a,0xc
  43779e:	outs   dx,BYTE PTR ds:[esi]
  43779f:	mov    bh,0xcb
  4377a1:	nop
  4377a2:	sub    bl,BYTE PTR [ebx]
  4377a4:	(bad)  
  4377a5:	pop    ss
  4377a6:	xor    BYTE PTR [ebp+0x2a],cl
  4377a9:	mov    al,ds:0xd5a3687f
  4377ae:	imul   ebx,eax,0x99d30df0
  4377b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4377b5:	pop    edx
  4377b6:	push   esi
  4377b7:	xlat   BYTE PTR ds:[ebx]
  4377b8:	cld    
  4377b9:	ins    DWORD PTR es:[edi],dx
  4377ba:	pusha  
  4377bb:	inc    ebp
  4377bc:	outs   dx,BYTE PTR ds:[esi]
  4377bd:	push   eax
  4377be:	pop    edx
  4377bf:	mov    ebp,0x4ca22049
  4377c4:	cmp    al,0xcc
  4377c6:	sub    DWORD PTR [eax],ebp
  4377c8:	or     dh,al
  4377ca:	inc    esp
  4377cb:	imul   ebx,DWORD PTR ds:0x325ff91d,0x5b
  4377d2:	add    esp,ebp
  4377d4:	mov    esi,0xb4356aa4
  4377d9:	(bad)  [eax]
  4377db:	repnz adc BYTE PTR [ebx+0x20c3ce4b],bh
  4377e2:	inc    ebx
  4377e3:	out    0x50,al
  4377e5:	xor    al,0x32
  4377e7:	inc    esp
  4377e8:	shr    esp,0x61
  4377eb:	daa    
  4377ec:	mov    eax,ds:0xf89f58de
  4377f1:	out    dx,al
  4377f2:	jne    0x43777d
  4377f4:	push   eax
  4377f5:	sbb    BYTE PTR [ecx+0x662a437c],al
  4377fb:	mov    dl,0xd8
  4377fd:	push   esp
  4377fe:	pop    edi
  4377ff:	jp     0x437825
  437801:	dec    edi
  437802:	xchg   ebx,eax
  437803:	mov    dh,BYTE PTR [ecx+ebx*8]
  437806:	xor    edi,esi
  437808:	sub    eax,0xc4a1048
  43780d:	addr16 add al,0x1d
  437810:	fisub  DWORD PTR [eax-0x2e9bed94]
  437816:	pusha  
  437817:	xlat   BYTE PTR ds:[ebx]
  437818:	add    eax,0xc390f305
  43781d:	mov    ah,0x9a
  43781f:	push   edi
  437820:	inc    ecx
  437821:	pop    edi
  437822:	cmp    BYTE PTR [esp+esi*4+0xe],dl
  437826:	push   cs
  437827:	(bad)  
  437828:	out    0xc6,eax
  43782a:	bound  edx,QWORD PTR [edi]
  43782c:	and    ebx,DWORD PTR [ebp+edi*4+0x67]
  437830:	push   eax
  437831:	xchg   edi,eax
  437832:	sbb    bl,ah
  437834:	and    cl,BYTE PTR [ecx-0x80]
  437837:	in     eax,0x2c
  437839:	popa   
  43783a:	ret    
  43783b:	ror    DWORD PTR [eax],cl
  43783d:	xchg   ecx,eax
  43783e:	pop    esi
  43783f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437840:	mov    ds:0xf738087d,al
  437845:	xchg   ebp,ebp
  437847:	lahf   
  437848:	enter  0x2a67,0xa9
  43784c:	dec    ecx
  43784d:	jnp    0x4378b0
  43784f:	inc    edx
  437850:	add    al,0x70
  437852:	dec    edx
  437853:	loopne 0x437899
  437855:	add    edx,esp
  437857:	hlt    
  437858:	(bad)  
  437859:	clc    
  43785a:	xchg   esp,eax
  43785b:	jecxz  0x4378dc
  43785d:	arpl   WORD PTR [ebx+0xb],bp
  437860:	div    DWORD PTR [ecx]
  437862:	dec    ebp
  437863:	mov    eax,0x7ca24a69
  437868:	inc    ebp
  437869:	mov    BYTE PTR [ebx+eiz*4-0x24],dh
  43786d:	sbb    DWORD PTR [edx],esp
  43786f:	dec    esp
  437870:	repnz xchg edx,eax
  437872:	in     eax,0x27
  437874:	inc    BYTE PTR [eax]
  437876:	lahf   
  437877:	js     0x437865
  437879:	int3   
  43787a:	dec    esp
  43787b:	push   ecx
  43787c:	and    al,0x16
  43787e:	test   al,0x74
  437880:	mov    al,ds:0x866cfdd6
  437885:	mov    ds:0xe636cc6d,al
  43788a:	repz jge 0x437907
  43788d:	cwde   
  43788e:	les    esi,FWORD PTR [ecx-0x10]
  437891:	je     0x4378ac
  437893:	in     al,0x23
  437895:	fmul   QWORD PTR [eax]
  437897:	and    eax,0x73e414d2
  43789c:	outs   dx,BYTE PTR ds:[esi]
  43789d:	and    al,0xbd
  43789f:	jl     0x4378fe
  4378a1:	loopne 0x43785f
  4378a3:	call   0x6a391333
  4378a8:	xor    ebp,DWORD PTR [eax+0x221ae0d7]
  4378ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4378af:	sar    DWORD PTR [edx+eiz*4-0x2c],cl
  4378b3:	jg     0x4378b9
  4378b5:	lds    eax,FWORD PTR [esi]
  4378b7:	in     eax,dx
  4378b8:	adc    edi,DWORD PTR [ebx+0x28126053]
  4378be:	xor    esp,DWORD PTR [edx-0x5b57e878]
  4378c4:	xor    DWORD PTR [edx],ebp
  4378c6:	dec    esp
  4378c7:	data16 cmp BYTE PTR [esi+0x380a2ea9],ah
  4378ce:	mov    esp,0x82ea31f4
  4378d3:	(bad)
  4378d6:	xchg   BYTE PTR [ecx],ch
  4378d8:	sbb    BYTE PTR [ecx],cl
  4378da:	aas    
  4378db:	jo     0x437956
  4378dd:	fmul   DWORD PTR [esi+0x283ce8b8]
  4378e3:	push   0xffffffaf
  4378e5:	push   edi
  4378e6:	push   eax
  4378e7:	and    ecx,ebx
  4378e9:	jmp    DWORD PTR [eax-0x15]
  4378ec:	cli    
  4378ed:	xchg   ebx,eax
  4378ee:	and    edx,DWORD PTR [ecx-0x7b1b2a2b]
  4378f4:	int3   
  4378f5:	fs loopne 0x437925
  4378f8:	retf   
  4378f9:	adc    al,dl
  4378fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4378fc:	sub    al,0x77
  4378fe:	bound  esi,QWORD PTR [ebx+ecx*8+0x27]
  437902:	add    ah,0xb6
  437905:	push   eax
  437906:	pop    ds
  437907:	fimul  DWORD PTR [edx-0x6c]
  43790a:	cli    
  43790b:	and    eax,0x1474f62d
  437910:	pop    ecx
  437911:	scas   al,BYTE PTR es:[edi]
  437912:	push   ecx
  437913:	xor    dh,BYTE PTR [eax]
  437915:	and    dl,BYTE PTR [ecx-0x68]
  437918:	daa    
  437919:	(bad)  
  43791a:	or     al,0x4
  43791c:	push   ebx
  43791d:	cli    
  43791e:	test   al,0x75
  437920:	inc    eax
  437921:	test   al,0xbe
  437923:	cmp    esp,DWORD PTR [ebx]
  437925:	in     eax,dx
  437926:	sbb    edx,ecx
  437928:	call   0xd2c7:0xd2aae164
  43792f:	lods   al,BYTE PTR ds:[esi]
  437930:	out    0xa2,eax
  437932:	mov    dl,ch
  437934:	mov    bl,0x3a
  437936:	jne    0x437983
  437938:	mov    bh,0xac
  43793a:	push   cs
  43793b:	lods   al,BYTE PTR ds:[esi]
  43793c:	daa    
  43793d:	cdq    
  43793e:	push   eax
  43793f:	ins    BYTE PTR es:[edi],dx
  437940:	sar    BYTE PTR ds:0x5cd038d4,0x88
  437947:	adc    BYTE PTR [ebp+0x33814e03],dl
  43794d:	js     0x4378d9
  43794f:	sbb    esi,eax
  437951:	pop    esi
  437952:	mov    ebx,0x9c9afdf1
  437957:	or     al,0xe4
  437959:	inc    DWORD PTR [edx-0x6e]
  43795c:	leave  
  43795d:	pop    ds
  43795e:	aas    
  43795f:	rol    BYTE PTR [edx],0xb9
  437962:	imul   ebx,DWORD PTR [eax+0x48],0xe4ef16b9
  437969:	inc    ebx
  43796a:	fisub  WORD PTR [edx+0x185aa502]
  437970:	popf   
  437971:	mov    WORD PTR [ebp-0x7b4bc477],es
  437977:	scas   al,BYTE PTR es:[edi]
  437978:	lock test BYTE PTR [eax+0x257e5502],dh
  43797f:	xchg   ebx,eax
  437980:	adc    dl,BYTE PTR [ecx]
  437982:	xchg   ebp,eax
  437983:	aam    0x2b
  437985:	ds mov ebx,0xf4ce7472
  43798b:	pop    es
  43798c:	clc    
  43798d:	mov    edi,0x119484f2
  437992:	or     cl,al
  437994:	neg    DWORD PTR [edi+eax*4]
  437997:	push   ebx
  437998:	lds    ecx,FWORD PTR [ebx-0xd18b7f]
  43799e:	(bad)  
  43799f:	cld    
  4379a0:	jp     0x43798d
  4379a2:	adc    esp,esi
  4379a4:	sub    ebx,DWORD PTR [esi-0x6573171e]
  4379aa:	rcr    BYTE PTR [esi],cl
  4379ac:	push   ds
  4379ad:	jle    0x4379a5
  4379af:	jg     0x4379bd
  4379b1:	pop    edi
  4379b2:	addr16 iret 
  4379b4:	xor    bl,BYTE PTR [eax+0x3049eb90]
  4379ba:	int    0xa3
  4379bc:	mov    esp,ebp
  4379be:	mov    cl,BYTE PTR [edi+0x0]
  4379c1:	(bad)  
  4379c2:	fdiv   st,st(0)
  4379c4:	pop    es
  4379c5:	out    0xc4,eax
  4379c7:	pop    ds
  4379c8:	or     BYTE PTR [esi+0x7db0fcaa],bh
  4379ce:	stos   BYTE PTR es:[edi],al
  4379cf:	adc    BYTE PTR [esi],ah
  4379d1:	push   esi
  4379d2:	js     0x437a31
  4379d4:	and    ah,ah
  4379d6:	cmp    DWORD PTR [ebp+0x6e2029d8],ecx
  4379dc:	das    
  4379dd:	inc    esp
  4379de:	stos   DWORD PTR es:[edi],eax
  4379df:	jmp    0xcdcd:0xf3b36c1b
  4379e6:	push   0x1cec12ab
  4379eb:	xchg   ebp,eax
  4379ec:	scas   al,BYTE PTR es:[edi]
  4379ed:	xlat   BYTE PTR ds:[ebx]
  4379ee:	test   DWORD PTR [eax],edx
  4379f0:	jae    0x437a31
  4379f2:	dec    ecx
  4379f3:	sub    DWORD PTR [edx+0x34610213],esi
  4379f9:	aad    0xbe
  4379fb:	div    ebp
  4379fd:	sti    
  4379fe:	mov    eax,ds:0x2584ba6
  437a03:	xor    BYTE PTR [esi+0x625d328e],ch
  437a09:	sbb    al,0x7c
  437a0b:	stos   BYTE PTR es:[edi],al
  437a0c:	(bad)  
  437a0d:	jne    0x4379fb
  437a0f:	sbb    ecx,DWORD PTR [esi-0x40]
  437a12:	mov    edi,0xbf1c8ca0
  437a17:	pop    es
  437a18:	or     DWORD PTR [ebx+edx*4],edi
  437a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437a1c:	dec    eax
  437a1d:	inc    ebx
  437a1e:	xor    eax,0x6939c939
  437a23:	mov    BYTE PTR [edx],al
  437a25:	ins    BYTE PTR es:[edi],dx
  437a26:	and    cl,ah
  437a28:	fnsave [ecx+eax*2]
  437a2b:	inc    ebx
  437a2c:	jbe    0x437a90
  437a2e:	nop
  437a2f:	mov    ah,0xdf
  437a31:	push   ecx
  437a32:	jae    0x437a61
  437a34:	addr16 pop es
  437a36:	shl    BYTE PTR [eax+ebx*4-0x2df6b750],cl
  437a3d:	jbe    0x437a21
  437a3f:	(bad)  
  437a40:	pop    esp
  437a41:	push   eax
  437a42:	sub    bl,0x2b
  437a45:	cmp    eax,0x807fae15
  437a4a:	dec    edx
  437a4b:	and    dl,BYTE PTR [edx-0x648f2536]
  437a51:	and    BYTE PTR [ecx+edx*8+0x1665f7be],ah
  437a58:	xchg   ecx,eax
  437a59:	sahf   
  437a5a:	xchg   edi,eax
  437a5b:	enter  0x1290,0x67
  437a5f:	out    dx,al
  437a60:	bound  edi,QWORD PTR [ecx-0x15]
  437a63:	xchg   ah,ch
  437a65:	iret   
  437a66:	pushf  
  437a67:	pop    ss
  437a68:	jl     0x437a0c
  437a6a:	inc    ebp
  437a6b:	stc    
  437a6c:	stc    
  437a6d:	xchg   esp,eax
  437a6e:	pop    edi
  437a6f:	imul   esp,ecx,0x42
  437a72:	stos   DWORD PTR es:[edi],eax
  437a73:	xchg   DWORD PTR [esi+0x3c2db8f1],ecx
  437a79:	dec    ecx
  437a7a:	pushf  
  437a7b:	and    eax,0xdc3a4328
  437a80:	and    al,0x8e
  437a82:	cmp    eax,0x4eeca135
  437a87:	sbb    eax,DWORD PTR [eax]
  437a89:	repnz or DWORD PTR [ebx+0x331a5a2b],ebp
  437a90:	repz test al,0x8a
  437a93:	add    ah,BYTE PTR [edx+0x22a584cc]
  437a99:	std    
  437a9a:	int3   
  437a9b:	mov    dl,0x6
  437a9d:	cmp    DWORD PTR [edx-0x56736939],ebp
  437aa3:	lock cmp ch,BYTE PTR [edi]
  437aa6:	cmp    DWORD PTR [ecx-0x4608ad67],0xe097b14
  437ab0:	pop    edi
  437ab1:	or     ch,BYTE PTR [edx]
  437ab3:	dec    ecx
  437ab4:	sub    edi,DWORD PTR [eax]
  437ab6:	and    bl,ch
  437ab8:	adc    DWORD PTR [edx+0x39f0dbcb],edx
  437abe:	loopne 0x437a85
  437ac0:	rol    BYTE PTR [eax],0xf1
  437ac3:	jb     0x437a81
  437ac5:	test   edx,edx
  437ac7:	add    al,0x4f
  437ac9:	sbb    eax,0x82b6c384
  437ace:	fwait
  437acf:	push   esp
  437ad0:	sub    BYTE PTR ds:0xf0c6b020,dl
  437ad6:	xchg   edi,eax
  437ad7:	xchg   DWORD PTR [esp+ecx*2],ebx
  437ada:	push   cs
  437adb:	add    BYTE PTR [ebp+0x71],dh
  437ade:	nop
  437adf:	ret    0x1289
  437ae2:	jo     0x437aa6
  437ae4:	mov    ?,WORD PTR [ecx]
  437ae6:	push   es
  437ae7:	sbb    ebp,ebx
  437ae9:	js     0x437b14
  437aeb:	sbb    BYTE PTR [edx+ecx*2-0x2],al
  437aef:	scas   al,BYTE PTR es:[edi]
  437af0:	cld    
  437af1:	mov    ds:0x143c3966,al
  437af6:	push   0x12c8e574
  437afb:	call   0xd523db2c
  437b00:	push   edx
  437b01:	jmp    0x4d84:0xe7f23671
  437b08:	xchg   ebp,eax
  437b09:	loope  0x437b18
  437b0b:	(bad)  
  437b0c:	out    dx,al
  437b0d:	fwait
  437b0e:	scas   eax,DWORD PTR es:[edi]
  437b0f:	sub    al,0x54
  437b11:	or     BYTE PTR [edx+0x1f2a2140],0x61
  437b18:	push   eax
  437b19:	fidivr WORD PTR [edi-0x8]
  437b1c:	out    dx,eax
  437b1d:	loope  0x437b1c
  437b1f:	inc    edx
  437b20:	and    BYTE PTR [esi+ebp*8-0x4a],dh
  437b24:	ret    0xe38f
  437b27:	inc    ebx
  437b28:	push   es
  437b29:	sub    ebx,DWORD PTR [eax+0x4659d977]
  437b2f:	ror    BYTE PTR [edx],0x31
  437b32:	adc    eax,0x85345bbc
  437b37:	(bad)  
  437b38:	adc    cl,cl
  437b3a:	pushf  
  437b3b:	gs fs mov ebx,0x859279ca
  437b42:	jmp    0x437bb8
  437b44:	sub    BYTE PTR [eax+0x6a5074c6],cl
  437b4a:	push   cs
  437b4b:	fs in  al,dx
  437b4d:	xor    BYTE PTR [edx+eiz*4-0x290b539e],ch
  437b54:	js     0x437bcb
  437b56:	add    eax,edx
  437b58:	pop    edi
  437b59:	mov    dh,0x24
  437b5b:	fldenv [esi+0x7899981e]
  437b61:	mov    ebp,0x25740684
  437b66:	push   esi
  437b67:	inc    esp
  437b68:	call   FWORD PTR [edx+eiz*1+0x2c3754a4]
  437b6f:	ja     0x437b29
  437b71:	into   
  437b72:	rol    BYTE PTR [ebp+0x26804af7],0xd7
  437b79:	xor    ebp,DWORD PTR [eax+0x43b508e4]
  437b7f:	repnz stos DWORD PTR es:[edi],eax
  437b81:	mov    eax,ds:0xa50892f8
  437b86:	sub    dh,BYTE PTR [ebx+0x7b]
  437b89:	cmp    DWORD PTR [ebx],eax
  437b8b:	lock addr16 mov al,0x6b
  437b8f:	ins    DWORD PTR es:[edi],dx
  437b90:	lds    eax,FWORD PTR [esi-0x1c4e864]
  437b96:	aam    0x4
  437b98:	pop    edx
  437b99:	leave  
  437b9a:	xchg   edi,eax
  437b9b:	leave  
  437b9c:	sbb    cl,BYTE PTR [eax-0x37]
  437b9f:	clc    
  437ba0:	shr    BYTE PTR [edx],cl
  437ba2:	dec    esi
  437ba3:	das    
  437ba4:	pop    edx
  437ba5:	stos   BYTE PTR es:[edi],al
  437ba6:	cwde   
  437ba7:	mov    BYTE PTR [esp+ecx*2],bl
  437baa:	cmc    
  437bab:	jmp    0x4018:0xfbc05345
  437bb2:	inc    esp
  437bb3:	adc    DWORD PTR [ebp-0x1c54ff5b],edi
  437bb9:	cmp    eax,ebp
  437bbb:	icebp  
  437bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437bbd:	xor    esp,DWORD PTR [ebx]
  437bbf:	adc    BYTE PTR [eax+0x13],0x59
  437bc3:	or     al,0x5d
  437bc5:	xor    edi,DWORD PTR [ebx-0x38]
  437bc8:	mov    esp,0x300bc1df
  437bcd:	adc    DWORD PTR [esi],edi
  437bcf:	arpl   WORD PTR [edi-0x51],cx
  437bd2:	cmp    ebp,esi
  437bd4:	sub    dl,BYTE PTR [edi+esi*4-0x29]
  437bd8:	outs   dx,DWORD PTR ds:[esi]
  437bd9:	xor    BYTE PTR [esp+ecx*4],dh
  437bdc:	icebp  
  437bdd:	cmp    esp,0xffffffa0
  437be0:	cmp    BYTE PTR [eax+0x1c],dl
  437be3:	add    eax,0x20136f12
  437be8:	lods   al,BYTE PTR ds:[esi]
  437be9:	add    cl,bh
  437beb:	cwde   
  437bec:	pop    edx
  437bed:	ins    DWORD PTR es:[edi],dx
  437bee:	xor    DWORD PTR [ecx],edi
  437bf0:	inc    esp
  437bf1:	clc    
  437bf2:	xor    bl,dh
  437bf4:	sub    BYTE PTR [edi+0x6886c96d],dh
  437bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437bfb:	or     bl,bl
  437bfd:	test   eax,0xd777c273
  437c02:	mov    WORD PTR [edi+0xc],gs
  437c05:	mov    ebx,0xa581f2d2
  437c0a:	(bad)  
  437c0b:	xor    al,0x82
  437c0d:	dec    edi
  437c0e:	rol    DWORD PTR [esi+0x22a0d558],0x58
  437c15:	cmc    
  437c16:	sub    eax,0x8ee4ac55
  437c1b:	pop    esi
  437c1c:	mov    dl,0x7c
  437c1e:	push   cs
  437c1f:	daa    
  437c20:	ins    BYTE PTR es:[edi],dx
  437c21:	jmp    0x9ea0:0x38c12cfc
  437c28:	xchg   edi,eax
  437c29:	jnp    0x437bb7
  437c2b:	mov    ebp,0x485265c2
  437c30:	inc    ebp
  437c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437c32:	xlat   BYTE PTR ds:[ebx]
  437c33:	sub    BYTE PTR [esi+0x6c1874a3],0x79
  437c3a:	xchg   ebx,eax
  437c3b:	repz push ds
  437c3d:	in     eax,dx
  437c3e:	in     al,dx
  437c3f:	popa   
  437c40:	cmp    edx,DWORD PTR [eax-0xf965b67]
  437c46:	ins    BYTE PTR es:[edi],dx
  437c47:	inc    edi
  437c48:	scas   al,BYTE PTR es:[edi]
  437c49:	sub    BYTE PTR [ebp+eiz*1+0x61a65b81],dh
  437c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437c51:	xlat   BYTE PTR ds:[ebx]
  437c52:	xchg   ebx,eax
  437c53:	fdiv   st,st(2)
  437c55:	mov    ch,0xa
  437c57:	clc    
  437c58:	cwde   
  437c59:	mov    al,ds:0x25808530
  437c5e:	pop    edi
  437c5f:	mov    BYTE PTR [ebx-0x60876c5d],ch
  437c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c66:	adc    BYTE PTR [edx+0x295a0893],dl
  437c6c:	rol    BYTE PTR [ebp-0x1a7a2838],1
  437c72:	jmp    0xe8ea0d64
  437c77:	in     al,dx
  437c78:	push   esi
  437c79:	cmp    eax,0xcf1a2336
  437c7e:	pop    esi
  437c7f:	ja     0x437c91
  437c81:	outs   dx,DWORD PTR ds:[esi]
  437c82:	mov    edx,esp
  437c84:	maxps  xmm0,XMMWORD PTR [edi+0x5b81af0]
  437c8b:	pop    ebx
  437c8c:	daa    
  437c8d:	cmp    DWORD PTR [ebp-0x235d2a64],0x53
  437c94:	pop    es
  437c95:	and    eax,0x17993e75
  437c9a:	mov    ch,0x0
  437c9c:	out    dx,eax
  437c9d:	jmp    0x4bc43316
  437ca2:	jnp    0x437c58
  437ca4:	and    al,0x19
  437ca6:	pop    ds
  437ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ca8:	jle    0x437c5d
  437caa:	loope  0x437d16
  437cac:	cmp    al,0xcc
  437cae:	add    ch,al
  437cb0:	fdiv   QWORD PTR [edx]
  437cb2:	mov    edi,0xf0334fe6
  437cb7:	icebp  
  437cb8:	pop    edi
  437cb9:	push   cs
  437cba:	pop    ebx
  437cbb:	repnz jmp 0x7a2e:0xa8145f1d
  437cc3:	sub    eax,0x55ce07ee
  437cc8:	cmp    bl,cl
  437cca:	dec    edx
  437ccb:	xor    esi,DWORD PTR [edx+0x57]
  437cce:	lea    edi,[ebx+0x5b]
  437cd1:	pop    esp
  437cd2:	jo     0x437cff
  437cd4:	sbb    ch,dl
  437cd6:	mov    ecx,0x4d07882
  437cdb:	test   al,0xe7
  437cdd:	jge    0x437cf8
  437cdf:	mov    ds:0x28e7dd6b,eax
  437ce4:	xchg   ebx,eax
  437ce5:	shr    dl,1
  437ce7:	sub    ecx,0x4c882d67
  437ced:	inc    BYTE PTR [edi]
  437cef:	inc    ebx
  437cf0:	lods   al,BYTE PTR ds:[esi]
  437cf1:	out    0x34,eax
  437cf3:	mov    esi,0xcc3470fe
  437cf8:	mov    edi,0xb4662adf
  437cfd:	ins    DWORD PTR es:[edi],dx
  437cfe:	sbb    BYTE PTR [ebx+0x2a0c1ef7],bl
  437d04:	or     cl,ah
  437d06:	imul   edi,DWORD PTR [eax+esi*2],0x54
  437d0a:	and    esi,DWORD PTR [edx-0x7bf87668]
  437d10:	pusha  
  437d11:	lock sar BYTE PTR [ecx-0x4dc879bf],1
  437d18:	mov    ecx,0x2d08a384
  437d1d:	scas   eax,DWORD PTR es:[edi]
  437d1e:	ja     0x437d13
  437d20:	outs   dx,DWORD PTR ds:[esi]
  437d21:	pop    edx
  437d22:	test   al,0x74
  437d24:	dec    ecx
  437d25:	sahf   
  437d26:	sub    al,0xda
  437d28:	and    DWORD PTR [edi],0x991b50f6
  437d2e:	retf   0x5a6
  437d31:	mov    edi,0xbf7425b4
  437d36:	fist   DWORD PTR [edi-0x739fb340]
  437d3c:	inc    edi
  437d3d:	cwde   
  437d3e:	push   eax
  437d40:	pop    edi
  437d41:	sub    DWORD PTR [edx+0x28],esp
  437d44:	or     dl,ch
  437d46:	mov    esp,0xd4c7548b
  437d4b:	jo     0x437d14
  437d4d:	ss adc eax,0x34c3d6e0
  437d53:	add    edx,DWORD PTR [edx-0x1f]
  437d56:	gs popf 
  437d58:	mov    BYTE PTR [edi],ch
  437d5a:	push   0x937c94fb
  437d5f:	push   ds
  437d60:	(bad)  
  437d61:	lods   al,BYTE PTR ds:[esi]
  437d62:	in     al,0x7a
  437d64:	pop    esp
  437d65:	xchg   esp,eax
  437d66:	fbld   TBYTE PTR ds:0xe4d0bf0a
  437d6c:	or     eax,0x63d332b
  437d71:	ret    0xf42c
  437d74:	mov    edi,0x5bdd2b75
  437d79:	test   eax,0x499cc5d1
  437d7e:	cmp    DWORD PTR fs:[edx-0x27d8b5ac],0x161784c0
  437d89:	fwait
  437d8a:	outs   dx,DWORD PTR ds:[esi]
  437d8b:	mov    eax,ds:0xe5e42b5c
  437d90:	mov    ebx,0x5de19234
  437d95:	out    0x10,eax
  437d97:	or     BYTE PTR [edi+esi*8+0x26],dh
  437d9b:	push   ds
  437d9c:	xchg   edi,eax
  437d9d:	add    eax,ebp
  437d9f:	lds    ebp,FWORD PTR [edi*2+0x62e4394d]
  437da6:	stos   BYTE PTR es:[edi],al
  437da7:	retf   0xd46a
  437daa:	fs mov dh,0xc2
  437dad:	mov    DWORD PTR [eax-0x7314013],eax
  437db3:	mov    edx,0x75a6edf0
  437db8:	retf   
  437db9:	scas   al,BYTE PTR es:[edi]
  437dba:	jl     0x437dd8
  437dbc:	sub    al,0x8
  437dbe:	or     al,0x28
  437dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437dc1:	pop    esi
  437dc2:	inc    esi
  437dc3:	les    eax,FWORD PTR [eax+0x47]
  437dc6:	jecxz  0x437dac
  437dc8:	sub    dl,BYTE PTR [esi-0x1737b7ce]
  437dce:	push   0xf0ea0103
  437dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437dd4:	inc    ecx
  437dd5:	jno    0x437de3
  437dd7:	arpl   WORD PTR [esi-0x30],bx
  437dda:	push   0x4479bf20
  437ddf:	xor    BYTE PTR [ecx-0x1f555676],dl
  437de5:	aas    
  437de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437de7:	popf   
  437de8:	push   esp
  437de9:	add    DWORD PTR [ebx-0x3894eaa8],0x8778bb53
  437df3:	out    0x49,al
  437df5:	cmp    eax,0x494310f1
  437dfa:	and    BYTE PTR [edx+0x20],dh
  437dfd:	jl     0x437d85
  437dff:	sahf   
  437e00:	ret    
  437e01:	out    dx,eax
  437e02:	push   eax
  437e03:	inc    esp
  437e04:	push   cs
  437e05:	(bad)  
  437e06:	aam    0x6a
  437e08:	lods   eax,DWORD PTR ds:[esi]
  437e09:	inc    edx
  437e0a:	ds jecxz 0x437e75
  437e0d:	add    bl,BYTE PTR [edx]
  437e0f:	int    0x4
  437e11:	cld    
  437e12:	lods   al,BYTE PTR ds:[esi]
  437e13:	js     0x437dd8
  437e15:	mov    esp,fs
  437e17:	lock xor BYTE PTR ds:[ecx+0x346ce7b5],0x99
  437e20:	mov    dh,0xfc
  437e22:	inc    edx
  437e23:	in     al,dx
  437e24:	lds    edx,FWORD PTR [edx+0x3d085884]
  437e2a:	xchg   ecx,eax
  437e2b:	or     ch,BYTE PTR [edx+0x7c4da451]
  437e31:	sub    BYTE PTR [ecx],ah
  437e33:	(bad)  
  437e35:	pop    ebx
  437e36:	repnz pop edi
  437e38:	iret   
  437e39:	mov    al,ds:0x7d27056f
  437e3e:	push   es
  437e3f:	fsubr  QWORD PTR [edx+eiz*4-0x3c]
  437e43:	pop    es
  437e44:	jecxz  0x437dd3
  437e46:	fmul   DWORD PTR [esi+0x7a]
  437e49:	cld    
  437e4a:	pop    ds
  437e4b:	ins    BYTE PTR es:[edi],dx
  437e4c:	cmp    al,0x7
  437e4e:	mov    edx,DWORD PTR ds:0xd1c89754
  437e54:	nop
  437e55:	retf   0xe09
  437e58:	cmp    ebx,DWORD PTR [eax-0x4b5c1865]
  437e5e:	jecxz  0x437ed5
  437e60:	cmp    BYTE PTR ss:[ecx-0x27f358f2],bh
  437e67:	cwde   
  437e68:	lds    ebp,FWORD PTR [edi+0x2b5a601d]
  437e6e:	ja     0x437e6c
  437e70:	pop    ebp
  437e71:	(bad)  ds:0xccd47d61
  437e77:	add    DWORD PTR [edi+eax*4+0x64eb0ded],esp
  437e7e:	sub    DWORD PTR [eax-0x3f],ecx
  437e81:	enter  0x2b37,0x45
  437e85:	cs ins DWORD PTR es:[edi],dx
  437e87:	fcmovb st,st(1)
  437e89:	push   ebp
  437e8a:	in     al,dx
  437e8b:	pop    es
  437e8c:	mov    ebx,0x5b468cce
  437e91:	retf   0x1031
  437e94:	retf   0xe7e
  437e97:	popa   
  437e98:	not    BYTE PTR [ecx+0x2cb85c0c]
  437e9e:	sbb    DWORD PTR [ebx+0x6132c329],edi
  437ea4:	jp     0x437e82
  437ea6:	leave  
  437ea7:	xchg   esp,eax
  437ea8:	(bad)  
  437ea9:	ja     0x437e98
  437eab:	sbb    ebx,DWORD PTR [ebp+ebp*4+0x0]
  437eaf:	stos   BYTE PTR es:[edi],al
  437eb0:	(bad)  [ecx]
  437eb2:	push   ebp
  437eb3:	adc    BYTE PTR [esi+0x40245f21],0xbc
  437eba:	mov    ds,WORD PTR [ebp-0x49d4d32c]
  437ec0:	dec    eax
  437ec1:	sub    DWORD PTR [ecx+0x119a516d],ecx
  437ec7:	lea    edi,[eax+esi*8+0x56]
  437ecb:	call   0x765:0xb044c2c
  437ed2:	adc    al,0xa9
  437ed4:	and    bh,BYTE PTR [ebp+ebx*8-0x33]
  437ed8:	xor    DWORD PTR [edx-0x6406c77f],esp
  437ede:	mov    eax,0xe00a43ce
  437ee3:	ret    0x1d5c
  437ee6:	mov    eax,ds:0xbb0a07a0
  437eeb:	not    bh
  437eed:	add    al,0x85
  437eef:	cmc    
  437ef0:	les    edx,FWORD PTR [edx+0x46]
  437ef3:	mov    ebp,0xc828f7bf
  437ef8:	out    0x34,al
  437efa:	jne    0x437f00
  437efc:	jle    0x437f32
  437efe:	mov    edx,0x1cba814c
  437f03:	inc    edx
  437f04:	out    0xcc,eax
  437f06:	stc    
  437f07:	push   edi
  437f08:	jo     0x437f1f
  437f0a:	push   ss
  437f0b:	jmp    0x9429:0x71b786be
  437f12:	mov    al,0x75
  437f14:	jg     0x437f93
  437f16:	xor    al,0x83
  437f18:	aad    0xdc
  437f1a:	cmp    al,0x49
  437f1c:	adc    DWORD PTR [eax],0xb
  437f1f:	mov    dh,BYTE PTR ds:0x4810
  437f25:	add    BYTE PTR [eax],al
  437f27:	add    ah,ah
  437f29:	sbb    DWORD PTR ds:0x9504e,eax
  437f2f:	add    BYTE PTR [eax],al
  437f31:	add    BYTE PTR [eax],al
  437f33:	add    BYTE PTR [eax+0x9],dl
  437f36:	add    BYTE PTR [eax],al
  437f38:	dec    ebx
  437f39:	add    BYTE PTR [esi],ah
  437f3b:	jl     0x437f3d
  437f3d:	add    dh,BYTE PTR [esi]
  437f3f:	or     BYTE PTR [eax],al
  437f41:	add    bl,al
  437f43:	inc    ebp
  437f44:	add    dh,bl
  437f46:	outs   dx,BYTE PTR ds:[esi]
  437f47:	adc    BYTE PTR [ebp+0xb484083],ah
  437f4d:	and    al,0xa2
  437f4f:	leave  
  437f50:	repnz or eax,0xfe1f531d
  437f56:	dec    eax
  437f57:	clc    
  437f58:	aad    0xd1
  437f5a:	lahf   
  437f5b:	xor    ebp,esp
  437f5d:	popf   
  437f5e:	inc    ecx
  437f5f:	ins    BYTE PTR es:[edi],dx
  437f60:	xor    esp,eax
  437f62:	sub    esp,DWORD PTR [esi+0x42]
  437f65:	sar    BYTE PTR [edx-0x74],0x90
  437f69:	sti    
  437f6a:	add    ch,BYTE PTR [edi-0x523220a5]
  437f70:	inc    esi
  437f71:	cmp    dl,dh
  437f73:	sbb    al,0xfe
  437f75:	fprem  
  437f77:	in     eax,0xdc
  437f79:	call   FWORD PTR [edx+ebx*8-0x14]
  437f7d:	push   0xffffffce
  437f7f:	lods   al,BYTE PTR ds:[esi]
  437f80:	mov    cl,bl
  437f82:	jmp    0x1a59:0x62158780
  437f89:	test   BYTE PTR [ebp-0x8],dh
  437f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437f8d:	fstp   DWORD PTR [eax+eiz*8+0x13c7a44f]
  437f94:	dec    ebp
  437f95:	dec    esp
  437f96:	sti    
  437f97:	jle    0x437f8b
  437f99:	xlat   BYTE PTR ds:[ebx]
  437f9a:	inc    ecx
  437f9b:	(bad)  
  437f9c:	jecxz  0x437f7b
  437f9e:	jo     0x437f4a
  437fa0:	out    0x70,eax
  437fa2:	xchg   al,bl
  437fa4:	loopne 0x437fa7
  437fa6:	pop    ebp
  437fa7:	xchg   esp,eax
  437fa8:	sub    BYTE PTR [ecx+0x48],0xb6
  437fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437fad:	call   0xacb3:0xe3b8ee26
  437fb4:	push   0x3
  437fb6:	inc    ebp
  437fb7:	inc    esi
  437fb8:	and    eax,0x6d1857dc
  437fbd:	outs   dx,DWORD PTR ds:[esi]
  437fbe:	fadd   DWORD PTR [edi]
  437fc0:	enter  0x84a1,0x47
  437fc4:	fnop   
  437fc6:	xlat   BYTE PTR ds:[ebx]
  437fc7:	and    eax,0xa875a2b6
  437fcc:	fild   DWORD PTR [edi+0x44]
  437fcf:	out    0xe4,eax
  437fd1:	in     eax,0xfb
  437fd3:	push   es
  437fd4:	int3   
  437fd5:	xor    DWORD PTR [edx],esi
  437fd7:	(bad)  
  437fd8:	xchg   ebx,eax
  437fd9:	xor    BYTE PTR [ebx],ah
  437fdb:	(bad)  
  437fdc:	ds lock ja 0x43800f
  437fe0:	cli    
  437fe1:	inc    edi
  437fe2:	sbb    dl,ch
  437fe4:	leave  
  437fe5:	xor    eax,0xf606c914
  437fea:	cmp    eax,0x6b16379d
  437fef:	mov    esp,0xf588d691
  437ff4:	ins    DWORD PTR es:[edi],dx
  437ff5:	xchg   DWORD PTR [ecx-0x29],ebp
  437ff8:	loopne 0x438053
  437ffa:	(bad)  
  437ffb:	loop   0x437fd9
  437ffd:	ss sub al,0x10
  438000:	dec    esp
  438001:	add    al,0x6e
  438003:	adc    edi,DWORD PTR [edi-0x1a]
  438006:	rcl    BYTE PTR [ecx-0x3e],cl
  438009:	jno    0x438033
  43800b:	xchg   ecx,eax
  43800c:	jno    0x437fbc
  43800e:	mov    DWORD PTR [eax-0x54],0x83d03447
  438015:	and    DWORD PTR [ebx+0x5b51359a],esp
  43801b:	push   edx
  43801c:	hlt    
  43801d:	and    eax,0x2860c583
  438022:	fisubr WORD PTR ds:[ebp+0x35835e18]
  438029:	call   0x533c:0x661b39a5
  438030:	cmp    al,0x2b
  438032:	(bad)  
  438033:	sahf   
  438034:	bsf    ebp,edx
  438037:	pusha  
  438038:	jmp    0xb0467df8
  43803d:	mov    ch,0xc8
  43803f:	jnp    0x438049
  438041:	fisttp WORD PTR [eax+0x5b219f7e]
  438047:	outs   dx,BYTE PTR ds:[esi]
  438048:	test   DWORD PTR [edx+edi*8],ebp
  43804b:	ficomp WORD PTR cs:[ecx-0x34]
  43804f:	dec    ebp
  438050:	out    0x3,al
  438052:	push   eax
  438053:	aad    0x5e
  438055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438056:	ins    BYTE PTR es:[edi],dx
  438057:	fs fwait
  438059:	pop    eax
  43805a:	add    dh,BYTE PTR [edx+ebp*2-0x5e]
  43805e:	mov    bl,0xf2
  438060:	mov    ch,dl
  438062:	inc    esi
  438063:	lods   eax,DWORD PTR ds:[esi]
  438064:	sbb    al,0xa9
  438066:	sub    eax,0xc93a5248
  43806b:	jb     0x437ffc
  43806d:	inc    eax
  43806e:	pop    edx
  43806f:	mov    edx,0xd3d37a18
  438074:	js     0x43804f
  438076:	fs inc edi
  438078:	mov    eax,0x82668bc2
  43807d:	inc    BYTE PTR [eax+0x1487f288]
  438083:	cmc    
  438084:	ins    BYTE PTR es:[edi],dx
  438085:	xchg   ebx,eax
  438086:	(bad)  
  438087:	sbb    DWORD PTR [esi+edx*4-0x3d5f3207],ebp
  43808e:	xor    al,0xd1
  438090:	push   ebx
  438091:	push   esp
  438092:	push   ebp
  438093:	shr    BYTE PTR [ecx+0x52],1
  438096:	(bad)  
  438097:	push   esi
  438098:	jle    0x43801f
  43809a:	js     0x4380e9
  43809c:	lods   al,BYTE PTR ds:[esi]
  43809d:	stos   BYTE PTR es:[edi],al
  43809e:	sub    BYTE PTR [edx],bh
  4380a0:	retf   
  4380a1:	mov    al,ds:0xf4c49ccc
  4380a6:	mov    eax,0x4823be59
  4380ab:	or     al,0xc0
  4380ad:	sub    DWORD PTR [edx],0xffffffee
  4380b0:	idiv   bl
  4380b2:	inc    edx
  4380b3:	es xchg edi,eax
  4380b5:	in     al,0xa5
  4380b7:	inc    ecx
  4380b8:	xor    BYTE PTR [ecx-0x4a458773],dl
  4380be:	mov    esp,ss
  4380c0:	in     al,dx
  4380c1:	pop    edi
  4380c2:	popa   
  4380c3:	push   eax
  4380c4:	xchg   dh,al
  4380c6:	test   al,0xb0
  4380c8:	mov    esp,0xee623511
  4380cd:	cli    
  4380ce:	cwde   
  4380cf:	(bad)
  4380d2:	retf   0x8d88
  4380d5:	dec    ebp
  4380d6:	xchg   bl,ch
  4380d8:	inc    esp
  4380d9:	clc    
  4380da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4380db:	jecxz  0x43815a
  4380dd:	lock out dx,al
  4380df:	test   DWORD PTR [edx+0x4fd9a0f5],ebx
  4380e5:	sbb    ebx,DWORD PTR ds:0xa3819ac2
  4380eb:	(bad)  
  4380ec:	rcl    BYTE PTR [ebx-0x4c386059],cl
  4380f2:	ror    DWORD PTR [ebx-0x18],1
  4380f5:	sbb    ebx,DWORD PTR [edx]
  4380f7:	pop    ecx
  4380f8:	mov    bh,0x6b
  4380fa:	fcomp  DWORD PTR [ecx+0x3b4a0c31]
  438100:	ins    DWORD PTR es:[edi],dx
  438101:	and    al,0xe6
  438103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438104:	push   ecx
  438105:	retf   0xce30
  438108:	scas   al,BYTE PTR es:[edi]
  438109:	sub    DWORD PTR [ecx-0x5426f672],ecx
  43810f:	fcomp  DWORD PTR [ecx]
  438111:	xor    eax,0x8acc5142
  438116:	test   DWORD PTR [ebx],esi
  438118:	cld    
  438119:	and    BYTE PTR [ecx],cl
  43811b:	scas   al,BYTE PTR es:[edi]
  43811c:	or     ebp,DWORD PTR [eax+0x200628b6]
  438122:	cwde   
  438123:	aam    0x84
  438125:	popf   
  438126:	push   0x1e
  438128:	and    esi,edx
  43812a:	inc    esp
  43812b:	(bad)  
  43812d:	retf   0x78e3
  438130:	or     DWORD PTR [esi],esp
  438132:	add    al,0xec
  438134:	mov    es,WORD PTR [eax+0x77]
  438137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438138:	and    DWORD PTR [ebx-0xdefb993],ebx
  43813e:	add    DWORD PTR [ecx+0x42ff13bd],edx
  438144:	retf   0x5b34
  438147:	cmp    esp,edi
  438149:	ja     0x438108
  43814b:	enter  0xfd6e,0x58
  43814f:	jae    0x43818a
  438151:	and    cl,BYTE PTR [eax+0x383cb230]
  438157:	jl     0x438191
  438159:	clc    
  43815a:	dec    esp
  43815b:	inc    ebp
  43815c:	dec    ebx
  43815d:	std    
  43815e:	aam    0x7f
  438160:	and    al,0x1c
  438162:	inc    edi
  438163:	rcr    dl,cl
  438165:	fmulp  st(7),st
  438168:	xchg   edi,eax
  438169:	dec    eax
  43816a:	add    eax,0x58ddd0e7
  43816f:	mov    bl,BYTE PTR [ebx-0x1b679392]
  438175:	jmp    0x9011:0xe3a36ddb
  43817c:	xchg   edx,eax
  43817d:	out    dx,eax
  43817e:	or     ebp,DWORD PTR [edi-0x4e]
  438181:	jecxz  0x438188
  438183:	adc    al,0xb4
  438185:	test   BYTE PTR [edx-0x2db60ea6],bl
  43818b:	xlat   BYTE PTR ds:[ebx]
  43818c:	push   eax
  43818d:	pop    esp
  43818e:	pushf  
  43818f:	ds out dx,eax
  438191:	scas   al,BYTE PTR es:[edi]
  438192:	jg     0x4381ff
  438194:	xlat   BYTE PTR ds:[ebx]
  438195:	mov    dl,0x80
  438197:	xchg   ebx,ecx
  438199:	xchg   esp,eax
  43819a:	mov    ds:0x985e59cf,eax
  43819f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4381a0:	mov    eax,ds:0x96a3fecb
  4381a5:	retf   0xfbd5
  4381a8:	enter  0x6916,0x17
  4381ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4381ad:	stos   BYTE PTR es:[edi],al
  4381ae:	or     eax,0xd1707573
  4381b3:	jge    0x4381e3
  4381b5:	and    BYTE PTR [eax-0x23],0xe8
  4381b9:	add    dl,BYTE PTR [eax+ecx*4-0x332f597e]
  4381c0:	mov    eax,0x6ab89a4b
  4381c5:	mov    cl,BYTE PTR [edi+0x7d]
  4381c8:	imul   ebx,DWORD PTR [esi],0xccdccc31
  4381ce:	xlat   BYTE PTR ds:[ebx]
  4381cf:	mov    ebx,0x9c3940f1
  4381d4:	mov    eax,ds:0xedd53e00
  4381d9:	stos   BYTE PTR es:[edi],al
  4381da:	stos   BYTE PTR es:[edi],al
  4381db:	cdq    
  4381dc:	out    dx,eax
  4381dd:	add    ebp,DWORD PTR [eax-0x2c495e66]
  4381e3:	xor    DWORD PTR [edi+0xe],ebx
  4381e6:	sub    al,0xcc
  4381e8:	(bad)  
  4381e9:	std    
  4381ea:	outs   dx,DWORD PTR ds:[esi]
  4381eb:	rol    BYTE PTR [ebx+0x4f],1
  4381ee:	cwde   
  4381ef:	loopne 0x4381e1
  4381f1:	pop    ebp
  4381f2:	dec    ecx
  4381f3:	call   0xca1eb6f7
  4381f8:	sbb    DWORD PTR [eax+edi*2],edx
  4381fb:	xlat   BYTE PTR ds:[ebx]
  4381fc:	mov    ebp,0xec78a0d
  438201:	clc    
  438202:	mov    esp,0xb4eecda4
  438207:	test   al,0xb1
  438209:	fmul   QWORD PTR [esi]
  43820b:	loopne 0x438212
  43820d:	out    0x64,eax
  43820f:	fmul   DWORD PTR [ebp-0x2]
  438212:	fstp   QWORD PTR [edi+0x4]
  438215:	dec    edi
  438216:	mov    ebp,0x7081375b
  43821b:	push   edi
  43821c:	dec    eax
  43821d:	sub    BYTE PTR [edi],al
  43821f:	mov    edx,0x7c0fa226
  438224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438225:	jmp    0x3caf1d76
  43822a:	leave  
  43822b:	enter  0x60e6,0x3e
  43822f:	hlt    
  438230:	ret    0xd8a
  438233:	or     ebp,ebx
  438235:	repz adc eax,0x72c1879
  43823b:	push   esi
  43823c:	mov    ah,0x2c
  43823e:	cwde   
  43823f:	in     eax,dx
  438240:	sub    BYTE PTR [edx+eax*4],bh
  438243:	pusha  
  438244:	in     al,dx
  438245:	sub    cl,BYTE PTR [edx]
  438247:	adc    DWORD PTR [ecx],esp
  438249:	mov    esp,DWORD PTR [eax-0x1a]
  43824c:	aam    0x67
  43824e:	or     dh,bl
  438250:	dec    bp
  438252:	and    eax,0xdc972984
  438257:	push   edi
  438258:	mov    fs,edx
  43825a:	stc    
  43825b:	shr    BYTE PTR [ebx+edx*8],0x86
  43825f:	shr    bh,0x8d
  438262:	(bad)  
  438263:	xor    bl,BYTE PTR [ecx]
  438265:	push   eax
  438266:	ja     0x43820d
  438268:	mov    eax,0x1c6765c2
  43826d:	push   esi
  43826e:	je     0x438296
  438270:	arpl   WORD PTR [edi-0x7a0aab20],si
  438276:	adc    eax,0xdcb28a98
  43827b:	das    
  43827c:	aas    
  43827d:	clc    
  43827e:	inc    ebx
  43827f:	push   es
  438280:	inc    eax
  438281:	aaa    
  438282:	inc    edx
  438283:	out    0x1d,al
  438285:	mov    bl,0x8
  438287:	clc    
  438288:	std    
  438289:	fs (bad) 
  43828b:	sub    DWORD PTR [esi],ebx
  43828d:	call   0x221c7b5a
  438292:	mov    BYTE PTR [ebp-0x17],bl
  438295:	gs fwait
  438297:	shufps xmm3,XMMWORD PTR [ecx],0xf7
  43829b:	lods   al,BYTE PTR ds:[esi]
  43829c:	(bad)  
  43829d:	cwde   
  43829e:	pop    ecx
  43829f:	add    eax,0xffffffac
  4382a2:	lods   eax,DWORD PTR ds:[esi]
  4382a3:	mov    eax,ds:0x8b14d0
  4382a8:	shr    DWORD PTR [ebp+0x18],cl
  4382ab:	retf   
  4382ac:	push   ebp
  4382ad:	js     0x4382f7
  4382af:	mov    edx,DWORD PTR fs:[esi+edi*1-0x2f]
  4382b4:	adc    esi,DWORD PTR ds:0x9787399c
  4382ba:	daa    
  4382bb:	loop   0x4382e6
  4382bd:	scas   eax,DWORD PTR es:[edi]
  4382be:	in     al,0xc0
  4382c0:	pop    esp
  4382c1:	ins    BYTE PTR es:[edi],dx
  4382c2:	ror    DWORD PTR [edx+0x3dc21d42],0xe4
  4382c9:	sub    al,0x67
  4382cb:	inc    ecx
  4382cc:	jmp    0x4382ac
  4382ce:	sub    al,0xde
  4382d0:	sub    BYTE PTR [ebx+eiz*1-0x4f58f69f],cl
  4382d7:	jge    0x4382d2
  4382d9:	pop    eax
  4382da:	mov    al,0xbf
  4382dc:	jne    0x438265
  4382de:	dec    ebx
  4382df:	stos   BYTE PTR es:[edi],al
  4382e0:	je     0x438357
  4382e2:	and    al,0xd4
  4382e4:	pop    esp
  4382e5:	add    BYTE PTR [ecx],bh
  4382e7:	loop   0x438333
  4382e9:	adc    BYTE PTR [eax+edi*2-0x8],ch
  4382ed:	and    ecx,0xfffffffd
  4382f0:	and    DWORD PTR [eax+0x1cdd63b2],esp
  4382f6:	pop    ecx
  4382f7:	cmp    eax,0xb8d08316
  4382fc:	and    al,0x82
  4382fe:	les    ebp,FWORD PTR [ebp+eiz*4+0x5f]
  438302:	test   eax,0x37d79965
  438307:	call   0xaa2cbddf
  43830c:	cmp    BYTE PTR [eax+ebp*1-0x3785f304],dh
  438313:	out    dx,al
  438314:	adc    ebx,DWORD PTR [eax+0x3055a7ec]
  43831a:	jae    0x4382e7
  43831c:	retf   0x3518
  43831f:	mov    edx,0x61d8a8ba
  438324:	gs inc esi
  438326:	test   al,0xd6
  438328:	add    bl,BYTE PTR [esi+0x60b8fc9e]
  43832e:	and    ebp,DWORD PTR [edi+0x326437ab]
  438334:	and    bl,dh
  438336:	xchg   ecx,eax
  438337:	(bad)  
  438339:	lods   al,BYTE PTR ds:[esi]
  43833a:	pop    esi
  43833b:	and    al,BYTE PTR es:[edx+edi*2-0x3b]
  438340:	popa   
  438341:	push   ecx
  438342:	lea    edi,[eax+esi*4+0x7d]
  438346:	push   0x9583bd6d
  43834b:	push   cs
  43834c:	not    DWORD PTR [edi+0x6d21055]
  438352:	lods   eax,DWORD PTR ds:[esi]
  438353:	mov    edx,0x1f0f48c8
  438358:	xor    al,0x31
  43835a:	pop    ecx
  43835b:	xchg   edx,eax
  43835c:	mov    edx,0x63b39363
  438361:	pop    eax
  438362:	(bad)  
  438364:	ror    ebp,0x5c
  438367:	push   ebx
  438368:	add    dl,0x7c
  43836b:	std    
  43836c:	pop    edi
  43836d:	mov    ds:0x8b3e7d26,eax
  438372:	pop    ecx
  438373:	mov    al,ds:0xb8e5ff71
  438378:	pop    edi
  438379:	pop    edx
  43837a:	xor    eax,0xf7dc48c7
  43837f:	pop    es
  438380:	lea    ebp,[ebx+0x6ce50c56]
  438386:	add    edi,DWORD PTR [esi+0xd]
  438389:	mov    ds:0x1edfdf38,eax
  43838e:	nop
  43838f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438390:	push   es
  438391:	mov    DWORD PTR [eax+0x61],edi
  438394:	mov    BYTE PTR [eax-0x57da4b7e],bl
  43839a:	je     0x4383aa
  43839c:	mov    ebx,0x5c616218
  4383a1:	xor    dh,BYTE PTR [edx+0x50]
  4383a4:	lods   eax,DWORD PTR ds:[esi]
  4383a5:	xchg   edx,eax
  4383a6:	int    0xbf
  4383a8:	jnp    0x43832a
  4383aa:	sbb    esi,DWORD PTR [ebx-0xc]
  4383ad:	mov    bh,0x70
  4383af:	mov    ch,0xcd
  4383b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4383b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4383b3:	pop    ss
  4383b4:	loope  0x438408
  4383b6:	xor    ebp,DWORD PTR [ecx-0x3706eb80]
  4383bc:	iret   
  4383bd:	mov    dh,BYTE PTR [edx]
  4383bf:	call   0xf4ec:0x29379b26
  4383c6:	dec    ebp
  4383c7:	jno    0x43834f
  4383c9:	test   BYTE PTR [edi-0x51],bh
  4383cc:	cdq    
  4383cd:	xchg   esp,eax
  4383ce:	push   esp
  4383cf:	inc    edi
  4383d0:	push   ss
  4383d1:	sbb    al,0x3c
  4383d3:	test   DWORD PTR [edx+0x58],edx
  4383d6:	mov    eax,0xc4184246
  4383db:	popa   
  4383dc:	sub    ebx,esp
  4383de:	push   0xffffffdc
  4383e0:	mov    esp,0x5976f0aa
  4383e5:	fdiv   QWORD PTR [esi-0x4f]
  4383e8:	add    BYTE PTR ds:0x68c392a8,ch
  4383ee:	mov    cl,0xe3
  4383f0:	jmp    0x43839a
  4383f2:	iret   
  4383f3:	fsubr  QWORD PTR [edx+ebx*4]
  4383f6:	rcl    BYTE PTR ds:0xe9cc5c17,1
  4383fc:	pop    ebp
  4383fd:	scas   eax,DWORD PTR es:[edi]
  4383fe:	jne    0xf08b92dc
  438404:	dec    esi
  438405:	push   0x4f
  438407:	retf   
  438408:	imul   edx,edi,0x2d1423f9
  43840e:	and    al,0x6f
  438410:	shl    BYTE PTR [ebx],1
  438412:	stos   BYTE PTR es:[edi],al
  438413:	repz mov bh,BYTE PTR [eax]
  438416:	add    al,0xa4
  438418:	leave  
  438419:	sub    DWORD PTR [ebx-0x1f],esi
  43841c:	cld    
  43841d:	dec    ebx
  43841e:	loopne 0x438451
  438420:	and    BYTE PTR [edx-0x74],dl
  438423:	loopne 0x438453
  438425:	xchg   edi,eax
  438426:	outs   dx,BYTE PTR ds:[esi]
  438427:	add    al,0xe6
  438429:	and    DWORD PTR [eax+ebp*8-0x40],esi
  43842d:	and    bl,bl
  43842f:	pop    esi
  438430:	sub    ch,al
  438432:	inc    eax
  438433:	adc    esi,DWORD PTR [esi]
  438435:	das    
  438436:	and    al,0xd9
  438438:	aas    
  438439:	dec    esp
  43843a:	cmovnp esp,ebp
  43843d:	cs cmp edi,eax
  438440:	adc    edx,ebp
  438442:	jo     0x4383c9
  438444:	bound  esi,QWORD PTR [ebp+0x615c0268]
  43844a:	push   esp
  43844b:	sbb    BYTE PTR [ebx-0x2aaa8bc4],dl
  438451:	add    esi,DWORD PTR [esi-0x31]
  438454:	cmp    al,0xa9
  438456:	push   esi
  438457:	fs cmc 
  438459:	mov    esp,0x606d5e04
  43845e:	test   BYTE PTR [esi+eiz*2-0x6e],al
  438462:	out    0x25,eax
  438464:	pop    eax
  438465:	sub    eax,0xfdeebb84
  43846a:	mov    bh,0x6a
  43846c:	lods   eax,DWORD PTR ds:[esi]
  43846d:	push   DWORD PTR [ecx+0x6be99d2c]
  438473:	mov    bl,0x7
  438475:	jmp    0x438484
  438477:	outs   dx,BYTE PTR ds:[esi]
  438478:	push   eax
  438479:	test   al,0x15
  43847b:	mov    DWORD PTR [eax-0x52],edx
  43847e:	loope  0x4384f8
  438480:	popa   
  438481:	je     0x438477
  438483:	fs into 
  438485:	xchg   ebx,eax
  438486:	pushf  
  438487:	push   ecx
  438488:	std    
  438489:	test   eax,0x68b64798
  43848e:	cmp    esi,ebx
  438490:	pop    es
  438491:	or     edi,DWORD PTR [eax-0x44]
  438494:	aam    0xfd
  438496:	ficom  WORD PTR [esi+edi*4+0x61]
  43849a:	stos   BYTE PTR es:[edi],al
  43849b:	jg     0x438501
  43849d:	pop    ebx
  43849e:	or     BYTE PTR ds:0xa738c33b,ah
  4384a4:	mov    cl,BYTE PTR [eax+0x7fcd1981]
  4384aa:	mov    edi,0xacbfffac
  4384af:	mov    WORD PTR [ecx-0x3cb71253],gs
  4384b5:	pop    esp
  4384b6:	aad    0xd0
  4384b8:	data16 aad 0xe4
  4384bb:	xchg   esi,eax
  4384bc:	jbe    0x438441
  4384be:	jo     0x4384ef
  4384c0:	js     0x4384c8
  4384c2:	adc    al,0xa3
  4384c4:	clc    
  4384c5:	pop    ds
  4384c6:	out    dx,eax
  4384c7:	pop    ds
  4384c8:	mov    edi,0x91af159c
  4384cd:	hlt    
  4384ce:	mov    edi,DWORD PTR [eax-0x243fac54]
  4384d4:	in     eax,0x2c
  4384d6:	lods   eax,DWORD PTR ds:[esi]
  4384d7:	lock fldenv [edi]
  4384da:	sti    
  4384db:	in     al,0xee
  4384dd:	push   ss
  4384de:	jnp    0x43850e
  4384e0:	in     eax,dx
  4384e1:	mov    bl,0xb
  4384e3:	bound  ecx,QWORD PTR [eax]
  4384e5:	pop    es
  4384e6:	pop    ebx
  4384e7:	inc    esp
  4384e8:	sbb    DWORD PTR [ebx-0x4f3fa984],ecx
  4384ee:	mov    WORD PTR [ebx+0x7a],cs
  4384f1:	push   ebx
  4384f2:	push   ebx
  4384f3:	mov    WORD PTR [ecx+0x504dd4b2],?
  4384f9:	test   BYTE PTR ds:0x4bc62f0d,dl
  4384ff:	clc    
  438500:	les    eax,FWORD PTR [edi-0x3e9b2943]
  438506:	xchg   edx,eax
  438507:	pop    es
  438508:	sbb    al,0xd5
  43850a:	out    dx,eax
  43850b:	bndldx (bad),[eax+0x444b5e18]
  438512:	sub    DWORD PTR [ecx+0x66b1b230],ebp
  438518:	adc    al,0x6f
  43851a:	jne    0x438508
  43851c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43851d:	xlat   BYTE PTR ds:[ebx]
  43851e:	shl    DWORD PTR [ecx],1
  438520:	adc    BYTE PTR [eax-0x64],bl
  438523:	not    BYTE PTR [eax]
  438525:	jo     0x43852e
  438527:	ins    BYTE PTR es:[edi],dx
  438528:	imul   ebp,DWORD PTR [ebx+0x3434b8d5],0x82f48c40
  438532:	push   ebp
  438533:	popf   
  438534:	jecxz  0x438508
  438536:	pop    eax
  438537:	push   esi
  438538:	xor    DWORD PTR [eax-0x7c],0xffffffd1
  43853c:	pop    esi
  43853d:	pusha  
  43853e:	cli    
  43853f:	add    BYTE PTR [esi-0x7324516b],al
  438545:	out    dx,eax
  438546:	xchg   ebp,eax
  438547:	mov    ebx,0x5df48124
  43854c:	inc    esp
  43854d:	inc    ebp
  43854e:	(bad)  
  43854f:	ror    ch,1
  438551:	dec    eax
  438552:	retf   0xa5bd
  438555:	jne    0x438571
  438557:	or     al,0xb3
  438559:	repnz ins BYTE PTR es:[edi],dx
  43855b:	ds xchg edi,eax
  43855d:	add    esp,DWORD PTR [esi+edi*2-0x7a]
  438561:	ret    0x90b3
  438564:	inc    edi
  438565:	pop    ebx
  438566:	(bad)  
  438567:	pop    DWORD PTR [ecx-0x49]
  43856a:	mov    esp,0x822c3847
  43856f:	fsub   QWORD PTR [esi+ebx*2+0x5c46d2b6]
  438576:	and    eax,0xbd852a5a
  43857b:	and    edx,DWORD PTR [esi]
  43857d:	or     al,BYTE PTR [eax-0x4c9c220f]
  438583:	jg     0x43852f
  438585:	pop    ds
  438586:	in     al,dx
  438587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438588:	int    0x1
  43858a:	xchg   ecx,eax
  43858b:	sbb    al,0xf0
  43858d:	sbb    BYTE PTR [ebx-0x6e],al
  438590:	dec    esp
  438591:	mov    dh,0xd6
  438593:	dec    eax
  438594:	and    eax,0x573d387
  438599:	jo     0x438563
  43859b:	sub    dh,BYTE PTR cs:[ecx-0x53]
  43859f:	shl    BYTE PTR cs:[edx],cl
  4385a2:	xchg   esp,eax
  4385a3:	stc    
  4385a4:	add    al,0x4b
  4385a6:	repz dec ebp
  4385a8:	ficom  DWORD PTR [ebx+0x674ab8e6]
  4385ae:	push   ebp
  4385af:	ja     0x43853d
  4385b1:	cmp    esi,DWORD PTR [ebp+ecx*4-0x24]
  4385b5:	push   ds
  4385b6:	rcl    bh,cl
  4385b8:	popa   
  4385b9:	pop    ebp
  4385ba:	adc    dl,ah
  4385bc:	mov    bl,0x84
  4385be:	inc    edx
  4385bf:	bound  edi,QWORD PTR [ebp+0x369a1eab]
  4385c5:	enter  0xdea8,0x48
  4385c9:	popa   
  4385ca:	cmp    ebx,DWORD PTR [ecx-0x33c10760]
  4385d0:	xchg   ebx,eax
  4385d1:	sbb    eax,0xc545a9da
  4385d6:	jne    0x438598
  4385d8:	lock adc BYTE PTR [ebp+0x5faf5bf4],cl
  4385df:	sbb    ebx,DWORD PTR [eax+ebx*4+0x48b9c0ee]
  4385e6:	xchg   ecx,eax
  4385e7:	fwait
  4385e8:	mov    ebx,0x98f7bc8d
  4385ed:	loope  0x43863d
  4385ef:	or     BYTE PTR [eax-0x771fa098],bh
  4385f5:	push   esp
  4385f6:	not    DWORD PTR [edi-0x690a8848]
  4385fc:	add    al,0x2f
  4385fe:	lds    esi,FWORD PTR [esi+0x63a03152]
  438604:	cmp    al,0x28
  438606:	mov    ds:0x6d043270,al
  43860b:	scas   eax,DWORD PTR es:[edi]
  43860c:	imul   ecx,DWORD PTR [eax+edx*8],0x71081587
  438613:	jbe    0x4385a3
  438615:	add    al,0x61
  438617:	hlt    
  438618:	lock mov bh,0x5b
  43861b:	mov    edi,0x81009433
  438620:	sbb    al,bl
  438622:	rol    BYTE PTR [ebp-0x44],1
  438625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438626:	(bad)  
  438627:	scas   eax,DWORD PTR es:[edi]
  438628:	jle    0x438666
  43862a:	dec    edi
  43862b:	jl     0x4385fe
  43862d:	dec    esi
  43862e:	retf   
  43862f:	dec    ebx
  438630:	mov    al,ds:0x75c46084
  438635:	mov    ebx,0xfaa79ea3
  43863a:	bound  ecx,QWORD PTR [eax]
  43863c:	fsub   st(0),st
  43863e:	and    al,0xe0
  438640:	inc    edi
  438641:	pop    ecx
  438642:	pop    ss
  438643:	cmp    DWORD PTR [eax+esi*2],ebp
  438646:	inc    esp
  438647:	loopne 0x438610
  438649:	add    edx,DWORD PTR [edi]
  43864b:	xor    BYTE PTR [bx+si-0x2],dl
  43864f:	sbb    DWORD PTR [esi],ecx
  438651:	jb     0x43861e
  438653:	mov    esp,0x6274b850
  438658:	and    al,BYTE PTR [ebx+0x1c7437d1]
  43865e:	ficomp DWORD PTR [eiz*1-0x5a8463db]
  438665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438666:	dec    eax
  438667:	jnp    0x4386a9
  438669:	push   es
  43866a:	inc    ecx
  43866b:	ret    
  43866c:	add    eax,0x3ab8c1dd
  438671:	fs dec esi
  438673:	outs   dx,BYTE PTR ds:[esi]
  438674:	out    dx,eax
  438675:	inc    esp
  438676:	lods   al,BYTE PTR ds:[esi]
  438677:	ins    DWORD PTR es:[edi],dx
  438678:	loopne 0x43867d
  43867a:	mov    BYTE PTR [ebx],dl
  43867c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43867d:	ins    BYTE PTR es:[edi],dx
  43867e:	std    
  43867f:	(bad)  
  438680:	(bad)  
  438681:	jle    0x4386dc
  438683:	lods   al,BYTE PTR ds:[esi]
  438684:	xchg   edi,eax
  438685:	cmp    DWORD PTR [ebp+0xb0d0769],esi
  43868b:	rcl    BYTE PTR [esi+edi*4-0x76],cl
  43868f:	adc    DWORD PTR [edx+0xc3b39b2],0x78
  438696:	rcr    BYTE PTR [ecx+ebp*1-0x49],cl
  43869a:	sbb    DWORD PTR [edx-0x6d634623],0x8d85438c
  4386a4:	outs   dx,BYTE PTR ds:[esi]
  4386a5:	pop    edx
  4386a6:	sbb    al,0xc0
  4386a8:	sub    eax,0x66e6f788
  4386ad:	mov    cl,0x6b
  4386af:	test   DWORD PTR [eax+0x12],ebp
  4386b2:	out    dx,al
  4386b3:	scas   al,BYTE PTR es:[edi]
  4386b4:	xchg   edi,eax
  4386b5:	in     al,dx
  4386b6:	aam    0xd3
  4386b8:	int    0x8c
  4386ba:	retf   0xd5d0
  4386bd:	jp     0x43868a
  4386bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4386c0:	sbb    al,dh
  4386c2:	mov    al,0xde
  4386c4:	sub    BYTE PTR [edx],cl
  4386c6:	es ret 0x3da
  4386ca:	pop    ebp
  4386cb:	aam    0x94
  4386cd:	xchg   BYTE PTR [edx],ah
  4386cf:	pop    edi
  4386d0:	out    dx,al
  4386d1:	push   ebp
  4386d2:	mov    bl,0x50
  4386d4:	clc    
  4386d5:	pop    eax
  4386d6:	(bad)  
  4386d7:	nop
  4386d8:	mov    ah,0x9d
  4386da:	sbb    bh,BYTE PTR [edx-0x7a]
  4386dd:	mov    al,ds:0x4ec8144f
  4386e2:	inc    ecx
  4386e3:	loope  0x438716
  4386e5:	les    ebx,FWORD PTR fs:[ebx]
  4386e8:	aaa    
  4386e9:	lock mov DWORD PTR ds:0xe8dc8325,ecx
  4386f0:	jle    0x4386ff
  4386f2:	mov    ah,0x2f
  4386f4:	cld    
  4386f5:	xor    ecx,DWORD PTR [edx+edx*8]
  4386f8:	or     al,0xb3
  4386fa:	loope  0x4386d4
  4386fc:	sub    DWORD PTR [esp+ebx*2-0x38cf4902],esi
  438703:	mov    ebx,0x2ec92f82
  438708:	sahf   
  438709:	jne    0x4386e3
  43870b:	fidivr DWORD PTR [ecx]
  43870d:	mov    WORD PTR [ebx*2-0x33bb294],gs
  438714:	pop    ds
  438715:	hlt    
  438716:	cmc    
  438717:	sub    ch,BYTE PTR [eax]
  438719:	dec    ecx
  43871a:	xchg   BYTE PTR [eax+eiz*1-0x739943a7],bh
  438721:	cmp    al,0xd0
  438723:	sub    al,0x14
  438725:	inc    esp
  438726:	jp     0x43875c
  438728:	mov    ebx,0x3883c0a0
  43872d:	adc    eax,0xc03641ec
  438732:	inc    ebp
  438733:	xchg   BYTE PTR [eax+0x75103c92],ah
  438739:	mov    cl,0xde
  43873b:	jecxz  0x43875b
  43873d:	push   0xffffffb8
  43873f:	out    0x34,eax
  438741:	cmp    BYTE PTR [ebp+eiz*8-0x2f],ah
  438745:	push   dx
  438747:	dec    ebx
  438748:	mov    ebx,0x6155b758
  43874d:	in     al,0xe7
  43874f:	mov    eax,ds:0x4b7c9427
  438754:	cmp    BYTE PTR [edx],ah
  438756:	call   DWORD PTR [ebx+0x2436c069]
  43875c:	or     ebx,edi
  43875e:	xchg   esi,eax
  43875f:	std    
  438760:	add    BYTE PTR [edx+0x4f],bh
  438763:	(bad)  [eax-0x46]
  438766:	dec    esi
  438767:	shr    DWORD PTR [bx+si+0x56bf],cl
  43876c:	lds    ebp,FWORD PTR [ecx+eax*8-0x67]
  438770:	mov    ecx,0xa50261a9
  438775:	mov    WORD PTR [eax-0x35c6518e],ss
  43877b:	push   eax
  43877c:	xchg   esi,eax
  43877d:	sub    BYTE PTR ds:0xccae6338,dh
  438783:	xchg   edi,eax
  438784:	add    DWORD PTR [ebp+eiz*2-0x2],edx
  438788:	pop    esp
  438789:	pop    ebp
  43878a:	fcmovb st,st(5)
  43878c:	enter  0xf299,0xc1
  438790:	inc    esi
  438791:	and    BYTE PTR [ebp+eax*2+0x19],0xff
  438796:	jp     0x4387f3
  438798:	adc    al,0xd7
  43879a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43879b:	test   al,0xa3
  43879d:	in     eax,0xf
  43879f:	adc    DWORD PTR [ecx+0x77c8de2b],ecx
  4387a5:	je     0x438776
  4387a7:	out    0x88,eax
  4387a9:	mov    ch,0xca
  4387ab:	cmp    DWORD PTR [eax+0x0],esi
  4387ae:	inc    esi
  4387af:	pusha  
  4387b0:	jbe    0x438733
  4387b2:	hlt    
  4387b3:	xor    eax,0x7bdf9407
  4387b8:	xchg   ebp,eax
  4387b9:	jge    0x43881e
  4387bb:	bound  edi,QWORD PTR [ebx+0x6]
  4387be:	mov    eax,0x67afc473
  4387c3:	popf   
  4387c4:	jbe    0x43879d
  4387c6:	pusha  
  4387c7:	fadd   QWORD PTR [esi+0x17d780b6]
  4387cd:	sbb    eax,0x2e00a6bd
  4387d2:	and    esp,DWORD PTR [esi]
  4387d4:	sbb    edi,DWORD PTR [eax+0x1e]
  4387d7:	shl    BYTE PTR [ebp-0x58],0x1c
  4387db:	hlt    
  4387dc:	call   0xc910289e
  4387e1:	mov    cl,ah
  4387e3:	cld    
  4387e4:	jno    0x4387e5
  4387e6:	fist   DWORD PTR [ebx]
  4387e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4387e9:	iret   
  4387ea:	hlt    
  4387eb:	lock mov bl,0x42
  4387ee:	mov    bh,0x63
  4387f0:	push   0xffffffbd
  4387f2:	call   0x6296:0x1bdc14f7
  4387f9:	cmp    BYTE PTR [edx-0x4243fe4c],dh
  4387ff:	cmp    eax,0x73757944
  438804:	mov    ecx,0x451e04a
  438809:	sbb    cl,BYTE PTR [esi]
  43880b:	clc    
  43880c:	and    esi,DWORD PTR [ecx-0x7123fb4f]
  438812:	adc    ebp,DWORD PTR [esi+0x32f59061]
  438818:	sub    ah,bh
  43881a:	sub    BYTE PTR [ecx+0xb],0xf8
  43881e:	sbb    DWORD PTR [edi*1-0xa36b2b4],ebp
  438825:	nop
  438826:	xor    ebp,DWORD PTR [esi+0x65f4bc7c]
  43882c:	mov    edi,0x1d888714
  438831:	mov    ds,WORD PTR ds:[eax]
  438834:	sub    bh,dh
  438836:	loope  0x438820
  438838:	xor    BYTE PTR [eax+0x1],0x7b
  43883c:	cmp    al,0x1a
  43883e:	mov    dh,0x3e
  438840:	ins    DWORD PTR es:[edi],dx
  438841:	fiadd  DWORD PTR [eax+0x4660e997]
  438847:	in     al,dx
  438848:	and    bh,bh
  43884a:	fnstsw WORD PTR [ecx+edx*8]
  43884d:	loope  0x438857
  43884f:	(bad)  
  438850:	adc    BYTE PTR [esi+0x30],dl
  438853:	fbstp  TBYTE PTR [ebx-0x63d365a1]
  438859:	pop    ss
  43885a:	loop   0x4387fa
  43885c:	arpl   WORD PTR [ecx-0x1faf7db4],sp
  438862:	(bad)  
  438863:	xchg   ebx,eax
  438864:	inc    esi
  438865:	inc    eax
  438866:	xor    DWORD PTR [edi+0x4abb746b],ebx
  43886c:	jno    0x4387fe
  43886e:	loopne 0x43888f
  438870:	inc    eax
  438871:	cld    
  438872:	cwde   
  438873:	out    0x6,al
  438875:	xchg   ebx,eax
  438876:	inc    DWORD PTR [edi-0x4a]
  438879:	retf   0x4057
  43887c:	dec    ecx
  43887d:	call   0x0:0x3d71ff85
  438884:	add    BYTE PTR [eax],al
  438886:	add    BYTE PTR [eax],al
  438888:	add    BYTE PTR [edi],bl
  43888a:	pop    ecx
  43888b:	pop    ebp
  43888c:	push   ecx
  43888d:	or     DWORD PTR [eax],eax
  43888f:	add    BYTE PTR [eax],al
  438891:	add    BYTE PTR [eax],al
  438893:	add    BYTE PTR [ecx+0x9],dl
  438896:	add    BYTE PTR [eax],al
  438898:	dec    esp
  438899:	add    BYTE PTR [esi],ah
  43889b:	jl     0x43889d
  43889d:	add    dh,BYTE PTR [esi]
  43889f:	or     BYTE PTR [eax],al
  4388a1:	add    ah,al
  4388a3:	inc    ebp
  4388a4:	add    BYTE PTR [ebx+0x2a],dh
  4388a7:	ret    0xd5ac
  4388aa:	jmp    0x8767f29a
  4388af:	mov    cl,0x80
  4388b1:	mov    ebx,DWORD PTR [esp+esi*2]
  4388b4:	dec    esi
  4388b5:	or     DWORD PTR [eax+0x2b],0x3f1d2bc6
  4388bc:	imul   edx,DWORD PTR [esi+eiz*4-0x7bbe4694],0xb6481620
  4388c7:	sbb    al,0x90
  4388c9:	(bad)  
  4388ca:	dec    esp
  4388cb:	in     al,dx
  4388cc:	popa   
  4388cd:	xchg   esi,eax
  4388ce:	pop    edx
  4388cf:	iret   
  4388d0:	pop    esi
  4388d1:	cmp    BYTE PTR [ebp+0x13ee82f5],ch
  4388d7:	les    edi,FWORD PTR [ebp+0x6d]
  4388da:	pop    esp
  4388db:	icebp  
  4388dc:	xchg   ebp,eax
  4388dd:	fwait
  4388de:	inc    esp
  4388df:	inc    esp
  4388e0:	inc    ecx
  4388e1:	pop    ss
  4388e2:	and    BYTE PTR [eax+0x40d3ff11],al
  4388e8:	dec    esi
  4388e9:	xchg   edx,eax
  4388ea:	out    0x13,al
  4388ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4388ed:	in     eax,dx
  4388ee:	cmp    al,0xb4
  4388f0:	(bad)  
  4388f1:	mov    ebx,0x4c521947
  4388f6:	and    eax,0xb6b7da30
  4388fb:	cs scas eax,DWORD PTR es:[edi]
  4388fd:	inc    esp
  4388fe:	jo     0x4388c4
  438900:	sbb    al,cl
  438902:	mov    dl,0xba
  438904:	and    al,0x35
  438906:	stos   BYTE PTR es:[edi],al
  438907:	xchg   esp,eax
  438908:	ja     0x4388b2
  43890a:	mov    edx,DWORD PTR [ecx-0x31]
  43890d:	mov    ecx,0xbeb89b30
  438912:	cmp    BYTE PTR [eax],0xd3
  438915:	push   edx
  438916:	push   ebp
  438917:	pushf  
  438918:	add    al,0xdc
  43891a:	xor    DWORD PTR [ebp-0x21],0x31ff14ec
  438921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438922:	test   dh,bh
  438924:	jmp    0x5b8fb851
  438929:	loop   0x43896b
  43892b:	test   al,0xb3
  43892d:	sbb    bh,BYTE PTR [eax+0x48]
  438930:	into   
  438931:	imul   eax,esp,0x37
  438934:	int3   
  438935:	xor    al,0xa9
  438937:	cwde   
  438938:	pop    edx
  438939:	jae    0x438902
  43893b:	retf   0xf040
  43893e:	mov    bl,BYTE PTR [eiz*4-0x1cfcf05e]
  438945:	inc    esp
  438946:	adc    al,0xd
  438948:	inc    ebx
  438949:	jno    0x4388ed
  43894b:	add    eax,0xbc281f1f
  438950:	push   cs
  438951:	cmp    ecx,DWORD PTR [esi+0x7d8d114b]
  438957:	lods   eax,DWORD PTR ds:[esi]
  438958:	loopne 0x43895c
  43895a:	(bad)  
  43895b:	jns    0x438909
  43895d:	jb     0x438990
  43895f:	or     al,0x98
  438961:	add    al,0xbb
  438963:	cmp    BYTE PTR [ebp-0x3f7ee2a9],dl
  438969:	sahf   
  43896a:	sub    BYTE PTR [ebp+0x21124fcd],ah
  438970:	jl     0x4389ad
  438972:	mov    ds:0xbb7c4dd0,al
  438977:	xor    al,0xb1
  438979:	ret    0x63f0
  43897c:	hlt    
  43897d:	jns    0x43896a
  43897f:	push   esi
  438980:	sub    ebx,DWORD PTR cs:[eax-0x6fe71ca9]
  438987:	pop    edx
  438988:	lods   al,BYTE PTR ds:[esi]
  438989:	xchg   esi,eax
  43898a:	scas   eax,DWORD PTR es:[edi]
  43898b:	inc    ecx
  43898c:	sti    
  43898d:	cmp    bh,BYTE PTR [edx+eiz*1]
  438990:	in     al,dx
  438991:	and    eax,0x67be4968
  438996:	ins    DWORD PTR es:[edi],dx
  438997:	pusha  
  438998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438999:	xor    DWORD PTR [esp+edi*1],0x3b
  43899d:	sbb    BYTE PTR [eax-0x6c5df7e8],bl
  4389a3:	je     0x4389e6
  4389a5:	xchg   ebx,eax
  4389a6:	push   ebp
  4389a7:	inc    esi
  4389a8:	loope  0x4389d6
  4389aa:	fs jbe 0x438991
  4389ad:	sti    
  4389ae:	icebp  
  4389af:	sahf   
  4389b0:	push   ds
  4389b1:	enter  0x5750,0x7f
  4389b5:	iret   
  4389b6:	pop    esi
  4389b7:	push   esp
  4389b8:	(bad)  [esi]
  4389ba:	push   0xfe26ed74
  4389bf:	sbb    BYTE PTR [ebx-0x47],ah
  4389c2:	enter  0x1c04,0x48
  4389c6:	lods   al,BYTE PTR ds:[esi]
  4389c7:	sbb    DWORD PTR [ecx],0xee4b9e35
  4389cd:	inc    eax
  4389ce:	fstp   st(0)
  4389d0:	jae    0x4389a6
  4389d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4389d3:	pop    esp
  4389d4:	popf   
  4389d5:	pop    ecx
  4389d6:	fs jmp 0x72f6:0xb75fefb1
  4389de:	data16 mov BYTE PTR [ebx],al
  4389e1:	jl     0x43896e
  4389e3:	aas    
  4389e4:	test   eax,0xacf9694e
  4389e9:	xor    BYTE PTR [edi],al
  4389eb:	add    eax,0x89c8ffad
  4389f0:	outs   dx,DWORD PTR ds:[esi]
  4389f1:	push   esp
  4389f2:	xchg   ebx,eax
  4389f3:	dec    edi
  4389f4:	mov    WORD PTR [edx+eax*2],es
  4389f7:	xor    eax,0x3d78de8f
  4389fc:	push   ebp
  4389fd:	jns    0x4389b9
  4389ff:	inc    BYTE PTR [edx+ecx*1-0x5d0e63a8]
  438a06:	pop    eax
  438a07:	retf   0xaf8
  438a0a:	rol    DWORD PTR [edx-0x40],cl
  438a0d:	les    edi,FWORD PTR [edi+ebp*2+0x2ae95f05]
  438a14:	pop    ebx
  438a15:	in     al,0xd8
  438a17:	stos   BYTE PTR es:[edi],al
  438a18:	sub    ebx,DWORD PTR [esi+0x69d33e0]
  438a1e:	mov    WORD PTR [ebp-0x2c6c31a2],?
  438a24:	shl    DWORD PTR [edx-0xd],0xb0
  438a28:	jl     0x4389d9
  438a2a:	sub    eax,0x734a02ca
  438a2f:	fwait
  438a30:	aam    0xd6
  438a32:	adc    ebp,ecx
  438a34:	call   0x1cf8:0xb4e70cad
  438a3b:	ficomp WORD PTR [edi-0x3c11be13]
  438a41:	sub    DWORD PTR [eax+0x45ccd6e1],esp
  438a47:	mov    ds:0xc4dce925,eax
  438a4c:	pusha  
  438a4d:	push   es
  438a4e:	mov    dh,BYTE PTR [edx-0x5323b56c]
  438a54:	call   0xdb8a0a64
  438a59:	mov    bl,0xc7
  438a5b:	mov    dl,0xc4
  438a5d:	or     al,0x88
  438a5f:	and    al,0x3d
  438a61:	lea    ecx,[ebp-0x41]
  438a64:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  438a66:	xor    al,bh
  438a68:	jne    0x438a22
  438a6a:	and    ah,BYTE PTR [ebx+eax*8+0x49d85638]
  438a71:	popf   
  438a72:	cs xchg edi,eax
  438a74:	loope  0x438a75
  438a76:	xor    eax,0xf49bfce9
  438a7b:	cmp    eax,0x5a34ca9d
  438a80:	xor    al,0x20
  438a82:	pop    eax
  438a83:	fnstcw WORD PTR ds:0x280756e1
  438a89:	aad    0x44
  438a8b:	(bad)  
  438a8c:	retf   0xf3f8
  438a8f:	icebp  
  438a90:	js     0x438a37
  438a92:	scas   al,BYTE PTR es:[edi]
  438a93:	in     al,dx
  438a94:	in     eax,dx
  438a95:	mov    ah,0x24
  438a97:	push   cs
  438a98:	mov    WORD PTR [edx-0x25ef4383],?
  438a9e:	pop    edi
  438a9f:	scas   eax,DWORD PTR es:[edi]
  438aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438aa1:	pop    eax
  438aa2:	and    eax,0xde348125
  438aa7:	pop    es
  438aa8:	xor    BYTE PTR [ecx+ecx*4+0x58dcdbc6],dh
  438aaf:	out    dx,eax
  438ab0:	js     0x438a39
  438ab2:	(bad)  
  438ab4:	mov    ebp,0x877cd146
  438ab9:	xor    BYTE PTR [edx],ch
  438abb:	jle    0x438ac0
  438abd:	sub    eax,0xb2242b4a
  438ac2:	sbb    eax,0x636d9daf
  438ac7:	sub    edx,DWORD PTR [ebx+0x48]
  438aca:	ja     0x438ad3
  438acc:	in     al,0xdb
  438ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438acf:	ret    0x152
  438ad2:	ins    BYTE PTR es:[edi],dx
  438ad3:	push   eax
  438ad4:	fdivr  DWORD PTR ds:0x46c78820
  438ada:	scas   al,BYTE PTR es:[edi]
  438adb:	nop
  438adc:	fisub  DWORD PTR [edx-0x21749cb9]
  438ae2:	test   WORD PTR [ebx+ebp*2-0x3bbd84ab],si
  438aea:	add    eax,0x3a5c8187
  438aef:	mov    ebp,0x6b4be9b7
  438af4:	loopne 0x438a95
  438af6:	cmp    bh,0x87
  438af9:	adc    dh,BYTE PTR [ecx]
  438afb:	imul   DWORD PTR [edi]
  438afd:	push   ss
  438afe:	call   0x133f:0xb7415da4
  438b05:	and    cl,0x63
  438b08:	enter  0xc064,0x5e
  438b0c:	pusha  
  438b0d:	and    eax,0x70e73df0
  438b12:	push   0xffffffd5
  438b14:	add    al,bl
  438b16:	test   BYTE PTR [ebp+edi*1+0x2709947b],ah
  438b1d:	add    edx,DWORD PTR [edx-0x63]
  438b20:	int    0xa3
  438b22:	sub    edi,DWORD PTR [eax-0x1729331a]
  438b28:	push   ecx
  438b29:	push   es
  438b2a:	jne    0x438b54
  438b2c:	fdivr  QWORD PTR [eax+0x58]
  438b2f:	mov    al,ds:0x9b4814f4
  438b34:	sub    BYTE PTR [eax],al
  438b36:	xor    eax,0x4f7cbdb
  438b3b:	push   ecx
  438b3c:	test   BYTE PTR [ebx-0x2b3de258],bh
  438b42:	xor    bh,BYTE PTR [ebp-0x2d]
  438b45:	mov    BYTE PTR [ecx-0x71d6f234],bl
  438b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438b4c:	push   eax
  438b4d:	cdq    
  438b4e:	add    ebx,eax
  438b50:	lock sbb eax,0x374bd386
  438b56:	push   esp
  438b57:	retf   0x1493
  438b5a:	sbb    BYTE PTR [edx+0x613e9893],bl
  438b60:	retf   0xbce2
  438b63:	push   edx
  438b64:	es mov dh,0x39
  438b67:	jne    0x438bb5
  438b69:	mov    ebx,0x1ce08f
  438b6e:	cmp    eax,0xbde196f4
  438b73:	aam    0x4
  438b75:	xor    DWORD PTR [ebx-0x6fc9e3b3],esi
  438b7b:	arpl   WORD PTR [ebp+0x28],ax
  438b7e:	cmp    BYTE PTR [eax],dh
  438b80:	jae    0x438b10
  438b82:	mov    eax,0x4c0e6835
  438b87:	dec    esi
  438b88:	or     al,0x33
  438b8a:	xchg   BYTE PTR [ebx+ecx*1+0x7ff41227],bl
  438b91:	int    0x54
  438b93:	pushf  
  438b94:	(bad)  
  438b95:	leave  
  438b96:	dec    ecx
  438b97:	cmp    DWORD PTR [eax],ebx
  438b99:	in     al,0xc7
  438b9b:	cmp    al,0x96
  438b9d:	adc    al,0x9e
  438b9f:	cld    
  438ba0:	test   eax,0xd699973c
  438ba5:	stos   DWORD PTR es:[edi],eax
  438ba6:	fst    st(3)
  438ba8:	sbb    BYTE PTR [ecx],ch
  438baa:	pusha  
  438bab:	ret    
  438bac:	aaa    
  438bad:	jp     0x438b54
  438baf:	adc    BYTE PTR [ebx-0x217b17ed],ah
  438bb5:	jecxz  0x438c14
  438bb7:	stos   BYTE PTR es:[edi],al
  438bb8:	mov    ebp,cs
  438bba:	xchg   esp,eax
  438bbb:	es sub al,0x6
  438bbe:	xlat   BYTE PTR ds:[ebx]
  438bbf:	xchg   ecx,edx
  438bc1:	add    al,0x25
  438bc3:	mov    esp,0xe2b4509c
  438bc8:	ss retf 
  438bca:	sbb    eax,0x74c18399
  438bcf:	daa    
  438bd0:	push   cs
  438bd1:	add    cl,BYTE PTR [edi-0x52]
  438bd4:	inc    ecx
  438bd5:	lods   al,BYTE PTR ds:[esi]
  438bd6:	loop   0x438b70
  438bd8:	xor    al,0xaa
  438bda:	out    dx,al
  438bdb:	adc    al,0x40
  438bdd:	lahf   
  438bde:	je     0x438c44
  438be0:	inc    eax
  438be1:	lea    dx,[esi+ecx*2-0x68b5e0e3]
  438be9:	fs pop esp
  438beb:	dec    ebp
  438bec:	lods   al,BYTE PTR ds:[esi]
  438bed:	mov    esp,0x13191596
  438bf2:	mov    BYTE PTR [edi-0x7ebbd325],dh
  438bf8:	fcomp  QWORD PTR [esi+0x54ddac4c]
  438bfe:	or     cl,ah
  438c00:	or     DWORD PTR ds:0x5bd08690,esp
  438c06:	xchg   edi,eax
  438c07:	aas    
  438c08:	cmp    al,0x74
  438c0a:	scas   al,BYTE PTR es:[edi]
  438c0b:	or     DWORD PTR [eax+edi*2],esp
  438c0e:	aas    
  438c0f:	mov    WORD PTR [esi+0x41],ds
  438c12:	cmp    cl,BYTE PTR ds:[eax]
  438c15:	pop    esp
  438c16:	pushf  
  438c17:	retf   
  438c18:	add    BYTE PTR cs:[edi+eax*8+0x72],0x72
  438c1e:	rcr    BYTE PTR cs:[edi+eiz*4-0x78],0x16
  438c24:	js     0x438bb9
  438c26:	sbb    al,dh
  438c28:	in     al,0xac
  438c2a:	adc    BYTE PTR [edi],bl
  438c2c:	in     al,0xb4
  438c2e:	clc    
  438c2f:	repnz xlat BYTE PTR ds:[ebx]
  438c31:	mov    WORD PTR [edi],?
  438c33:	sbb    ah,BYTE PTR [esi+edi*8]
  438c36:	dec    eax
  438c37:	(bad)  [esi-0x3f]
  438c3a:	mov    al,0x54
  438c3c:	retf   0xe851
  438c3f:	nop
  438c40:	aad    0x20
  438c42:	stc    
  438c43:	aam    0x1
  438c45:	push   ecx
  438c46:	or     eax,0x183b6b6f
  438c4b:	out    0xf8,al
  438c4d:	ins    BYTE PTR es:[edi],dx
  438c4e:	je     0x438ca5
  438c50:	in     al,0x11
  438c52:	ficomp WORD PTR gs:0xb35cd01c
  438c59:	(bad)  [ebx-0x3b81e503]
  438c5f:	into   
  438c60:	dec    eax
  438c61:	test   eax,0xfc7661c3
  438c66:	add    ebp,eax
  438c68:	push   ebp
  438c69:	adc    BYTE PTR [eax-0x11],bl
  438c6c:	dec    eax
  438c6d:	ss cmp edi,edx
  438c70:	or     al,0x2
  438c72:	sbb    ebp,DWORD PTR [ecx-0x3]
  438c75:	test   DWORD PTR [eax-0x1fcfa7b9],ecx
  438c7b:	mov    WORD PTR [ebx+0x50],ss
  438c7e:	out    0x95,al
  438c80:	push   cs
  438c81:	mov    bl,al
  438c83:	scas   eax,DWORD PTR es:[edi]
  438c84:	pop    esi
  438c85:	push   0xffffff9a
  438c87:	mov    esp,0xfc32beb9
  438c8c:	mov    WORD PTR [edi+esi*8+0x5258da0f],?
  438c93:	ins    DWORD PTR es:[edi],dx
  438c94:	and    BYTE PTR [eax+ebp*8],bh
  438c97:	push   0xffffffbe
  438c99:	pop    edi
  438c9a:	jg     0x438d03
  438c9c:	pop    DWORD PTR [ebx+ebx*2+0x77]
  438ca0:	icebp  
  438ca1:	or     al,0x79
  438ca3:	sbb    al,0xaf
  438ca5:	cmp    DWORD PTR [eax+0x51],ebp
  438ca8:	out    0x34,eax
  438caa:	mov    dh,0x8d
  438cac:	inc    esp
  438cad:	mov    ebp,0xfe9e10ea
  438cb2:	pop    es
  438cb3:	or     DWORD PTR [edx+0x3474bf78],0xc7af6e93
  438cbd:	adc    cl,BYTE PTR [eax+0x3758e008]
  438cc3:	test   al,0xca
  438cc5:	xor    al,0x2c
  438cc8:	repnz dec ecx
  438cca:	jl     0x438c57
  438ccc:	mov    cl,0xf4
  438cce:	cmp    cl,cl
  438cd0:	xlat   BYTE PTR ds:[ebx]
  438cd1:	mov    ch,0xda
  438cd3:	mov    al,ds:0xb4f4a29a
  438cd8:	xchg   ecx,eax
  438cd9:	aad    0xdc
  438cdb:	sub    al,0x48
  438cdd:	mov    ecx,0x2881f26c
  438ce2:	push   esp
  438ce3:	and    esi,ebp
  438ce5:	ins    BYTE PTR es:[edi],dx
  438ce6:	btc    DWORD PTR [edi+edi*1+0x4d],edx
  438ceb:	scas   al,BYTE PTR es:[edi]
  438cec:	sahf   
  438ced:	push   ds
  438cee:	nop
  438cef:	ret    0xaad9
  438cf2:	je     0x438d00
  438cf4:	xor    BYTE PTR [ebx],cl
  438cf6:	repnz mov ah,0x4d
  438cf9:	or     eax,0x469d918d
  438cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438cff:	and    al,0x5c
  438d01:	test   ah,ch
  438d03:	out    0xe0,eax
  438d05:	aam    0x6d
  438d07:	cld    
  438d08:	jg     0x438c8a
  438d0a:	sbb    al,ah
  438d0c:	adc    BYTE PTR [edx],bh
  438d0e:	repnz push ecx
  438d10:	jg     0x438d88
  438d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438d13:	jle    0x438d93
  438d15:	aam    0x3c
  438d17:	clc    
  438d18:	cmp    al,0xdc
  438d1a:	mov    ebp,0x72817bc8
  438d1f:	mov    bl,0xc0
  438d21:	xchg   ecx,eax
  438d22:	rcr    DWORD PTR [esp+ebp*8],1
  438d25:	cwde   
  438d26:	in     eax,0x9d
  438d28:	adc    DWORD PTR es:[esi+ebx*1-0x12],edi
  438d2d:	xchg   esp,eax
  438d2e:	iret   
  438d2f:	pop    edi
  438d30:	ret    
  438d31:	pop    ebx
  438d32:	push   es
  438d33:	mov    ah,0xe1
  438d35:	cmp    DWORD PTR [eax-0x4ecc90df],edi
  438d3b:	cld    
  438d3c:	lea    esp,[edi+0x1]
  438d3f:	fdivr  st(0),st
  438d41:	adc    BYTE PTR [esi+0x761bcdd9],0xc0
  438d48:	add    BYTE PTR [ecx+0x383a4180],al
  438d4e:	xchg   BYTE PTR [edx],bh
  438d50:	jl     0x438cfa
  438d52:	sub    eax,0xaf8e33b0
  438d57:	pop    eax
  438d58:	mov    eax,0x9d7ccccd
  438d5d:	ror    edx,cl
  438d5f:	repz repnz popf 
  438d62:	mov    al,dh
  438d64:	cli    
  438d65:	cmp    esp,esi
  438d67:	cwde   
  438d68:	shl    BYTE PTR [edi],1
  438d6a:	aad    0x7f
  438d6c:	adc    al,0x49
  438d6e:	retf   
  438d6f:	gs hlt 
  438d71:	iret   
  438d72:	shr    BYTE PTR [edi+0x4c],1
  438d75:	cmp    BYTE PTR [ebx],dl
  438d77:	arpl   WORD PTR [esi-0x9],cx
  438d7a:	xchg   esi,eax
  438d7b:	in     al,0x80
  438d7d:	mul    eax
  438d7f:	clc    
  438d80:	stos   BYTE PTR es:[edi],al
  438d81:	inc    ebp
  438d82:	sbb    al,0xf2
  438d84:	or     edi,0x1c
  438d87:	add    al,0xc2
  438d89:	popf   
  438d8a:	adc    al,0xab
  438d8c:	adc    DWORD PTR [eax-0x3f],ebx
  438d8f:	scas   al,BYTE PTR es:[edi]
  438d90:	sub    al,dh
  438d92:	mov    ds:0xe3142003,al
  438d97:	ss ret 0x1c4c
  438d9b:	pop    esi
  438d9c:	call   0xea8b323
  438da1:	or     dh,BYTE PTR [eax-0x22]
  438da4:	push   esi
  438da5:	push   ebp
  438da6:	pop    edi
  438da7:	js     0x438d66
  438da9:	in     al,dx
  438daa:	mov    cl,0x18
  438dac:	mov    edi,0xde35e119
  438db1:	adc    ah,bl
  438db3:	mov    edx,0x3b17cf3c
  438db8:	sbb    DWORD PTR [ebx-0x77],edi
  438dbb:	cld    
  438dbc:	push   ecx
  438dbd:	pusha  
  438dbe:	push   ss
  438dbf:	and    BYTE PTR [ecx-0x64f3abdc],bl
  438dc5:	sbb    eax,0x9bd02984
  438dca:	dec    BYTE PTR [ebp+ebx*1-0xbd372b5]
  438dd1:	lock bound ecx,QWORD PTR [edi-0x6974f67e]
  438dd8:	push   eax
  438dd9:	or     DWORD PTR [esi-0xd3a7ca4],ebp
  438ddf:	repnz das 
  438de1:	je     0x438d9d
  438de3:	shl    DWORD PTR [edi],0x4f
  438de6:	(bad)
  438dea:	cwde   
  438deb:	loopne 0x438e55
  438ded:	nop
  438dee:	add    DWORD PTR [esi],0xbcefb781
  438df4:	add    BYTE PTR [eax-0x1f3bb60a],dh
  438dfa:	and    bh,BYTE PTR [eax-0x218b5b9c]
  438e00:	or     ah,bh
  438e02:	push   cs
  438e03:	mov    DWORD PTR [ebp-0x78],edi
  438e06:	es pop es
  438e08:	outs   dx,DWORD PTR ds:[esi]
  438e09:	and    dl,dh
  438e0b:	push   esp
  438e0c:	adc    edi,DWORD PTR [esp+ebp*4]
  438e0f:	and    eax,0x2f42e370
  438e14:	icebp  
  438e15:	ins    BYTE PTR es:[edi],dx
  438e16:	push   cs
  438e17:	shr    BYTE PTR [edx],1
  438e19:	loop   0x438e0e
  438e1b:	shl    BYTE PTR [ecx],cl
  438e1d:	xor    BYTE PTR [ebx+0x30a478f9],bl
  438e23:	das    
  438e24:	mov    ds:0x33249c2,eax
  438e29:	pushf  
  438e2a:	xlat   BYTE PTR ds:[ebx]
  438e2b:	cvtps2pd xmm7,xmm6
  438e2e:	dec    eax
  438e2f:	push   esp
  438e30:	lods   al,BYTE PTR ds:[esi]
  438e31:	push   es
  438e32:	rcr    BYTE PTR [edx-0xb],0x5f
  438e36:	sub    BYTE PTR [edx-0x1b794322],dl
  438e3c:	imul   ebp,DWORD PTR [edx-0x555248c],0x5608ac1a
  438e46:	push   cs
  438e47:	rcr    al,0x3b
  438e4a:	cld    
  438e4b:	cmp    DWORD PTR [ebp-0x50],ebp
  438e4e:	pop    ebp
  438e4f:	out    dx,al
  438e50:	scas   eax,DWORD PTR es:[edi]
  438e51:	sbb    ah,ch
  438e53:	(bad)  
  438e54:	scas   eax,DWORD PTR es:[edi]
  438e55:	(bad)  
  438e57:	mov    ebx,0x73680975
  438e5c:	mov    WORD PTR [edi+0x9],?
  438e5f:	clc    
  438e60:	mov    esp,0xb0b2d76f
  438e65:	pop    ebx
  438e66:	(bad)  
  438e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438e68:	sbb    al,0x94
  438e6a:	and    dh,cl
  438e6c:	aas    
  438e6d:	fiadd  DWORD PTR [eax+0x2a408235]
  438e73:	and    eax,0x745ec67e
  438e78:	(bad)
  438e7b:	addr16 dec ebx
  438e7d:	jb     0x438e61
  438e7f:	cmp    ah,dh
  438e81:	cli    
  438e82:	mov    ecx,DWORD PTR [ecx+ebp*4]
  438e85:	test   ecx,esi
  438e87:	mov    edx,0x644b79ec
  438e8c:	xor    BYTE PTR [eax],ah
  438e8e:	out    dx,eax
  438e8f:	mov    ds:0x45d6fc54,eax
  438e94:	adc    edx,DWORD PTR [edi+ebp*8-0x59]
  438e98:	aam    0x17
  438e9a:	mov    dl,0x6e
  438e9c:	sti    
  438e9d:	pusha  
  438e9e:	cld    
  438e9f:	repnz xchg ebp,eax
  438ea1:	fwait
  438ea2:	dec    edx
  438ea3:	sar    BYTE PTR [ebp+0x52],1
  438ea6:	shl    BYTE PTR [eax],cl
  438ea8:	or     ebp,DWORD PTR ds:0x6ab7f75f
  438eae:	ja     0x438e9d
  438eb0:	inc    esp
  438eb1:	cmp    edi,DWORD PTR [eax-0x4572de11]
  438eb7:	or     al,0xba
  438eb9:	push   0x7e571cbf
  438ebe:	add    dh,BYTE PTR [ebp+0x488cbb82]
  438ec4:	das    
  438ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438ec6:	dec    esp
  438ec7:	pop    es
  438ec8:	push   0xffffffca
  438eca:	pusha  
  438ecb:	xor    al,0xd
  438ecd:	in     eax,0x1f
  438ecf:	inc    edx
  438ed0:	xlat   BYTE PTR ds:[ebx]
  438ed1:	pushf  
  438ed2:	fbstp  TBYTE PTR [edx]
  438ed4:	pop    eax
  438ed5:	xchg   edx,eax
  438ed6:	daa    
  438ed7:	call   0xb35323f
  438edc:	fs jl  0x438ea1
  438edf:	cmp    al,0x97
  438ee1:	retf   
  438ee2:	nop
  438ee3:	shl    DWORD PTR [ebp+0x3d],0xa0
  438ee7:	mov    ebp,0x7ebf059c
  438eec:	jne    0x438eac
  438eee:	xchg   ebp,eax
  438eef:	dec    eax
  438ef0:	pusha  
  438ef1:	outs   dx,BYTE PTR gs:[esi]
  438ef3:	test   eax,0xfaeb20ab
  438ef8:	ins    BYTE PTR es:[edi],dx
  438ef9:	and    al,0xdd
  438efb:	jbe    0x438f77
  438efd:	retf   
  438efe:	or     edi,DWORD PTR [ebp+eiz*1-0x70]
  438f02:	cmp    bl,cl
  438f04:	push   ss
  438f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438f06:	jl     0x438ef3
  438f08:	hlt    
  438f09:	bound  esi,QWORD PTR [edx+esi*1-0x2720718e]
  438f10:	push   eax
  438f11:	sti    
  438f12:	clc    
  438f13:	fcomp  DWORD PTR [esi]
  438f15:	or     eax,0xf491ebc8
  438f1a:	sbb    DWORD PTR [eax],eax
  438f1c:	cmp    BYTE PTR [esi-0x3ec8b133],0xdd
  438f23:	sbb    eax,0x9528a404
  438f28:	cmp    eax,DWORD PTR [edi]
  438f2a:	jmp    0xc8b2c85c
  438f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438f30:	(bad)  
  438f31:	(bad)  [edx]
  438f33:	mov    cl,0x44
  438f35:	nop
  438f36:	pop    esp
  438f37:	in     al,dx
  438f38:	rcl    BYTE PTR [ebx+0x37],0x1
  438f3c:	rcl    DWORD PTR [ecx],0xb2
  438f3f:	sahf   
  438f40:	adc    cl,dh
  438f42:	aam    0x8e
  438f44:	mov    ecx,0x43a6f689
  438f49:	mov    eax,0xb9fe224e
  438f4e:	int    0x49
  438f50:	sub    al,0x63
  438f52:	fsub   QWORD PTR [ebx]
  438f54:	push   esp
  438f55:	jae    0x438f7d
  438f57:	repnz (bad) 
  438f59:	mov    esp,0x81b30056
  438f5e:	ss adc dh,bh
  438f61:	fsub   DWORD PTR [esi+0x18]
  438f64:	and    al,0x27
  438f66:	cmp    DWORD PTR [esi+0x1d],eax
  438f69:	sub    dh,BYTE PTR [edx-0x32]
  438f6c:	sub    eax,0xd16bacc
  438f71:	push   ebx
  438f72:	shl    cl,cl
  438f74:	pop    ebp
  438f75:	sub    dh,al
  438f77:	add    al,BYTE PTR [eax-0x11]
  438f7a:	push   edi
  438f7b:	mov    ebp,0x146fa3f3
  438f80:	xor    ah,BYTE PTR [edi-0x13]
  438f83:	jnp    0x438f11
  438f85:	jg     0x438f2e
  438f87:	idiv   DWORD PTR [eax]
  438f89:	outs   dx,BYTE PTR ds:[esi]
  438f8a:	xor    al,0xfe
  438f8c:	cmc    
  438f8d:	sub    eax,edx
  438f8f:	fistp  DWORD PTR [edi+0x2b1f6f5c]
  438f95:	mov    ebp,0x1bf5f499
  438f9a:	add    al,0x9b
  438f9c:	push   edi
  438f9d:	ins    BYTE PTR es:[edi],dx
  438f9e:	jae    0x438f63
  438fa0:	add    DWORD PTR ds:0x44e228bc,0x451039ea
  438faa:	xchg   ebp,eax
  438fab:	call   0x47b1b0fc
  438fb0:	mov    ss,WORD PTR ds:0x70199701
  438fb6:	mov    dh,0x6a
  438fb8:	pushf  
  438fb9:	mov    al,0x2
  438fbb:	xchg   esp,eax
  438fbc:	packssdw mm3,QWORD PTR [eax]
  438fbf:	mov    ds:0x8148701f,eax
  438fc4:	fimul  DWORD PTR [esp+eiz*4-0x2bd878c4]
  438fcb:	jmp    0x1260:0x77746325
  438fd2:	rcr    DWORD PTR [edi+ecx*1],cl
  438fd5:	or     eax,0x847496e3
  438fda:	call   0x401cf7e4
  438fdf:	loope  0x438f83
  438fe1:	dec    edi
  438fe2:	test   al,0xcc
  438fe4:	fisubr WORD PTR [ebx]
  438fe6:	mov    DWORD PTR es:[ecx+0x69504d38],ebx
  438fed:	or     al,0xb0
  438fef:	fmul   QWORD PTR [edi+0x74b64c8c]
  438ff5:	xchg   ebp,eax
  438ff6:	pop    ecx
  438ff7:	xchg   esi,eax
  438ff8:	ret    0x8288
  438ffb:	cli    
  438ffc:	mov    edx,0xe7776598
  439001:	shl    BYTE PTR [esi+ecx*2],cl
  439004:	pop    esp
  439005:	adc    edi,DWORD PTR [edi+eiz*2-0x4cdc55ce]
  43900c:	mov    ds:0x54e07d9c,eax
  439011:	adc    eax,0x4f94b341
  439016:	dec    edx
  439017:	sub    ecx,DWORD PTR [eax+0x125c87ef]
  43901d:	fadd   DWORD PTR [edi+0x4aac1b46]
  439023:	(bad)  
  439024:	mov    eax,0xe31852ed
  439029:	fcmovbe st,st(0)
  43902b:	enter  0x231a,0x9e
  43902f:	fs call 0x44c6:0xf7f446b5
  439037:	lods   eax,DWORD PTR ds:[esi]
  439038:	push   DWORD PTR [ebx]
  43903a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43903b:	dec    ebx
  43903c:	pushf  
  43903d:	data16 int 0x28
  439040:	enter  0xbd64,0x42
  439044:	mov    ch,0xc0
  439046:	sbb    ebx,ebx
  439048:	or     eax,0xdb626f3c
  43904d:	mov    esp,esp
  43904f:	test   DWORD PTR [ebp+0x22dea222],esp
  439055:	pushf  
  439056:	or     BYTE PTR [eax],cl
  439058:	mov    ds:0x972d791a,al
  43905d:	sub    dl,dh
  43905f:	and    al,0x2c
  439061:	xor    eax,0xeed7e9f2
  439066:	dec    edx
  439067:	enter  0xd472,0x89
  43906b:	arpl   sp,dx
  43906d:	out    dx,eax
  43906e:	(bad)  
  43906f:	cmp    cl,BYTE PTR [esi+ebx*2-0x374fe208]
  439076:	(bad)  
  439077:	and    esi,edx
  439079:	adc    al,0xc8
  43907b:	sbb    al,0x43
  43907d:	jo     0x4390ce
  43907f:	mov    al,0xa2
  439081:	test   BYTE PTR [eax],0x2f
  439084:	inc    eax
  439085:	sub    al,0x37
  439087:	add    esp,DWORD PTR [eax-0x3f]
  43908a:	adc    cl,0x8a
  43908d:	call   0xd370b208
  439092:	jl     0x4390ac
  439094:	mov    ds:0x58a50c0b,eax
  439099:	sub    al,BYTE PTR [eax+ebx*8]
  43909c:	in     al,dx
  43909d:	jecxz  0x43909f
  43909f:	xor    BYTE PTR [esi],dl
  4390a1:	dec    ecx
  4390a2:	les    esi,FWORD PTR [edx]
  4390a4:	and    BYTE PTR [edi],ch
  4390a6:	xchg   esp,eax
  4390a7:	out    dx,eax
  4390a8:	push   esp
  4390a9:	enter  0x9a9a,0xeb
  4390ad:	fwait
  4390ae:	mov    bl,0xfb
  4390b0:	cmp    edi,DWORD PTR [eax+0xa]
  4390b3:	lods   al,BYTE PTR ds:[esi]
  4390b4:	stos   BYTE PTR es:[edi],al
  4390b5:	add    BYTE PTR [ebx+0x20f96dbc],dl
  4390bb:	jmp    0x4390b7
  4390bd:	ds and eax,0x68e8c637
  4390c3:	inc    esp
  4390c4:	mov    bh,0x39
  4390c6:	loop   0x439139
  4390c8:	mov    al,ds:0x6814212f
  4390cd:	retf   
  4390ce:	xor    BYTE PTR [ebx-0x5b9b9845],bl
  4390d4:	les    ecx,FWORD PTR [esi+esi*2+0x5a93f636]
  4390db:	pop    ecx
  4390dc:	lods   eax,DWORD PTR ds:[esi]
  4390dd:	mov    ds:0xac96f334,eax
  4390e2:	lea    edi,[ebp+0x58805ac1]
  4390e8:	scas   al,BYTE PTR es:[edi]
  4390e9:	sbb    eax,0xa24e73
  4390ee:	and    bl,dl
  4390f0:	jl     0x4390a0
  4390f2:	add    ecx,DWORD PTR [ecx+0xd3d280f]
  4390f8:	out    0xa0,al
  4390fa:	jp     0x4390c5
  4390fc:	loope  0x4390fe
  4390fe:	sbb    BYTE PTR [ebx+0x1],0x8a
  439102:	les    edi,FWORD PTR [ebp-0x4f89d98a]
  439108:	sbb    al,0x84
  43910a:	test   eax,0x3e8eae6c
  43910f:	pop    esp
  439110:	sub    al,0xdc
  439112:	fdivr  DWORD PTR ds:0xbd635b90
  439118:	sbb    DWORD PTR [ebx-0x4b6951c6],edi
  43911e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43911f:	mov    bh,0xe0
  439121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439122:	hlt    
  439123:	pop    ss
  439124:	dec    edx
  439125:	ja     0x4390ff
  439127:	shr    DWORD PTR [edx],0x6
  43912a:	fsubr  DWORD PTR [edx-0x3f0c271]
  439130:	or     al,0x45
  439132:	sbb    eax,0xc0129f01
  439137:	mov    al,ds:0x1f4749a4
  43913c:	xor    al,0x7a
  43913e:	pusha  
  43913f:	popfw  
  439141:	enter  0xab22,0xaa
  439145:	daa    
  439146:	(bad)  
  439147:	xor    DWORD PTR [eax*4-0xcf97b14],0xffffffb3
  43914f:	rcl    DWORD PTR [ebp+edi*2+0x69c61068],0x8a
  439157:	mov    dl,0x8e
  439159:	dec    ebx
  43915a:	cmp    DWORD PTR [esi],0xeb7e65b8
  439160:	das    
  439161:	push   esi
  439162:	mov    WORD PTR [eax+0x75],?
  439165:	fdiv   st(2),st
  439167:	jge    0x43916a
  439169:	ins    DWORD PTR es:[edi],dx
  43916a:	dec    ebx
  43916b:	shr    DWORD PTR [eax],cl
  43916d:	mov    esp,0x1c739b00
  439172:	test   DWORD PTR [eax],0x24242781
  439178:	(bad)  
  43917a:	push   ss
  43917b:	and    BYTE PTR [edi],bh
  43917d:	push   edx
  43917e:	retf   0x48fe
  439181:	adc    eax,esi
  439183:	loope  0x43917d
  439185:	js     0x4391f1
  439187:	mov    BYTE PTR ds:0xbecd4af0,al
  43918d:	sub    edx,ecx
  43918f:	xor    BYTE PTR [esi-0x922eb1e],al
  439195:	daa    
  439196:	and    DWORD PTR [ebx],edi
  439198:	int3   
  439199:	mov    dl,0xe7
  43919b:	cmp    ch,bh
  43919d:	imul   DWORD PTR [ebx+eax*8]
  4391a0:	add    eax,0x5c9038d6
  4391a5:	mov    eax,eax
  4391a7:	sbb    BYTE PTR [edi-0x3a],cl
  4391aa:	das    
  4391ab:	retf   
  4391ac:	push   edx
  4391ad:	add    al,0x81
  4391af:	outs   dx,DWORD PTR ds:[esi]
  4391b0:	mov    cl,0xda
  4391b2:	dec    eax
  4391b3:	ret    0x938
  4391b6:	sub    BYTE PTR [ebp-0xa],ah
  4391b9:	xchg   ecx,eax
  4391ba:	xchg   esi,eax
  4391bb:	add    eax,0x4c3bef52
  4391c0:	push   edi
  4391c1:	std    
  4391c2:	mov    al,ds:0xc9c2a8e1
  4391c7:	test   al,0x70
  4391c9:	and    dl,ch
  4391cb:	ins    DWORD PTR es:[edi],dx
  4391cc:	mov    eax,ds:0x9c97ac6
  4391d1:	xchg   esp,eax
  4391d2:	sti    
  4391d3:	push   ds
  4391d4:	sub    al,0x89
  4391d6:	and    al,0xe8
  4391d8:	mov    bh,0xb9
  4391da:	cmp    al,0x64
  4391dc:	and    eax,0x8e43deb1
  4391e1:	stos   BYTE PTR es:[edi],al
  4391e2:	inc    edi
  4391e3:	add    BYTE PTR [eax],al
  4391e5:	add    BYTE PTR [eax],al
  4391e7:	add    BYTE PTR [ebx],al
  4391e9:	pop    ds
  4391ea:	bound  ebx,QWORD PTR [ebp+0x4d]
  4391ed:	or     DWORD PTR [eax],eax
  4391ef:	add    BYTE PTR [eax],al
  4391f1:	add    BYTE PTR [eax],al
  4391f3:	add    BYTE PTR [ebp+0x9],cl
  4391f6:	add    BYTE PTR [eax],al
  4391f8:	dec    ebp
  4391f9:	add    BYTE PTR [esi],ah
  4391fb:	jl     0x4391fd
  4391fd:	add    dh,BYTE PTR [esi]
  4391ff:	or     BYTE PTR [eax],al
  439201:	add    al,al
  439203:	inc    ebp
  439204:	add    BYTE PTR [esi-0x17ca995e],ah
  43920a:	push   ebp
  43920b:	(bad)  
  43920c:	int3   
  43920d:	and    al,0x5a
  43920f:	scas   al,BYTE PTR es:[edi]
  439210:	dec    eax
  439211:	sar    DWORD PTR [ebx-0x59],1
  439214:	jne    0x4391cc
  439216:	dec    eax
  439217:	push   edx
  439218:	jge    0x4391e2
  43921a:	push   esp
  43921b:	popf   
  43921c:	mov    dh,0x29
  43921e:	adc    ch,BYTE PTR [ecx+edx*1-0x5d]
  439222:	or     cl,bh
  439224:	loop   0x4391cd
  439226:	or     al,0x32
  439228:	nop
  439229:	or     BYTE PTR [esi-0x79],al
  43922c:	xchg   BYTE PTR [eax+0x38f3240b],bh
  439232:	adc    al,0x14
  439234:	(bad)  
  439236:	inc    edi
  439237:	xchg   esp,eax
  439238:	cwde   
  439239:	out    dx,eax
  43923a:	pop    esp
  43923b:	pop    ebx
  43923c:	arpl   WORD PTR [edi],dx
  43923e:	push   cs
  43923f:	in     al,dx
  439240:	fadd   DWORD PTR [edx-0x20287f4b]
  439246:	outs   dx,DWORD PTR ds:[esi]
  439247:	dec    ebp
  439248:	sub    al,0xb4
  43924a:	sub    eax,DWORD PTR [esp+eiz*4+0x32]
  43924e:	bound  ebp,QWORD PTR [ecx+0x68575f6a]
  439254:	es dec esp
  439256:	sbb    ah,BYTE PTR [esi+0x1e94c6a7]
  43925c:	imul   edi,DWORD PTR [ecx-0x1796e390],0x36
  439263:	sbb    BYTE PTR [ecx+0x1c94bba9],bh
  439269:	sahf   
  43926a:	cwde   
  43926b:	popf   
  43926c:	(bad)  
  43926d:	and    dh,BYTE PTR [ebx]
  43926f:	mov    dh,0xb8
  439271:	(bad)  [ebx+0x4732626f]
  439277:	adc    al,0x43
  439279:	fdiv   QWORD PTR [eax+0x74]
  43927c:	adc    bh,BYTE PTR [esp+ecx*4-0x7b4cb394]
  439283:	sbb    BYTE PTR [ebx-0x46],0x5
  439287:	das    
  439288:	jnp    0x43928a
  43928a:	fsubr  DWORD PTR [eax+0x2c9508f0]
  439290:	cmp    DWORD PTR [eax+0x1f],edi
  439293:	dec    ebp
  439294:	int3   
  439295:	push   esi
  439296:	cwde   
  439297:	lea    ebp,[edi-0x754b0220]
  43929d:	lock xchg esi,eax
  43929f:	push   esp
  4392a0:	jmp    0x14eb:0x94bdba6b
  4392a7:	int3   
  4392a8:	popf   
  4392a9:	sbb    DWORD PTR [edx-0x4e067912],ebx
  4392af:	mov    esp,0xc51df1c3
  4392b4:	test   DWORD PTR [esi],edi
  4392b6:	shl    BYTE PTR [esi-0x20],1
  4392b9:	mov    ch,0x81
  4392bb:	add    eax,0x27016903
  4392c0:	jbe    0x4392c6
  4392c2:	aad    0xe9
  4392c4:	ss addr16 push 0xffffffba
  4392c8:	xor    ecx,DWORD PTR [edx+0x116dda28]
  4392ce:	mov    ah,0x96
  4392d0:	gs mov esp,0x3b5cd0c3
  4392d6:	(bad)  
  4392d7:	xchg   edx,eax
  4392d8:	out    dx,al
  4392d9:	fs mov edx,ebp
  4392dc:	hlt    
  4392dd:	daa    
  4392de:	mov    ecx,DWORD PTR [edx-0x2]
  4392e1:	and    eax,0x18b6409f
  4392e6:	sub    eax,0x8fa26739
  4392eb:	cmp    ebp,DWORD PTR [edx]
  4392ed:	sar    DWORD PTR [esp+eax*2],0x12
  4392f1:	inc    esp
  4392f2:	xor    al,0xf7
  4392f4:	retf   0x6b8f
  4392f7:	pusha  
  4392f8:	add    al,0x83
  4392fb:	push   esi
  4392fc:	sahf   
  4392fd:	jb     0x43928b
  4392ff:	mov    eax,ds:0x33bc2808
  439304:	and    DWORD PTR [eax+0x2c9c61b3],edi
  43930a:	xchg   esp,eax
  43930b:	ret    0x1007
  43930e:	xchg   BYTE PTR [ebp-0xf],cl
  439311:	call   0x5a681766
  439316:	add    al,0x24
  439318:	ss jo  0x4392b4
  43931b:	je     0x4392a4
  43931d:	faddp  st(6),st
  43931f:	test   al,0xbd
  439321:	pusha  
  439322:	jb     0x439321
  439324:	sbb    al,0x4
  439326:	push   ebp
  439327:	add    eax,0x725f755f
  43932c:	loope  0x43936e
  43932e:	fs push 0x9db931d9
  439334:	sub    eax,0x6a7d64a6
  439339:	mov    ch,0x3d
  43933b:	(bad)  
  43933c:	jae    0x439320
  43933e:	mov    ds:0x258f4d88,al
  439343:	sbb    dh,BYTE PTR [edx-0x38]
  439346:	push   ebx
  439347:	sbb    ch,BYTE PTR [edx+ecx*4+0x39b49d31]
  43934e:	xchg   esp,eax
  43934f:	lods   al,BYTE PTR ds:[esi]
  439350:	mov    dl,BYTE PTR [ebp+eax*2+0x41]
  439354:	jge    0x424624a4
  43935a:	js     0x439333
  43935c:	dec    edx
  43935d:	mov    eax,DWORD PTR [edx]
  43935f:	push   ebp
  439360:	mov    dh,0x58
  439362:	in     al,0x9c
  439364:	pop    esp
  439365:	mov    ds:0x9dbb9c4b,eax
  43936a:	add    cl,BYTE PTR [ebx+0x794e04c0]
  439370:	lods   ax,WORD PTR ds:[esi]
  439372:	inc    esp
  439373:	sub    BYTE PTR [eax],al
  439375:	in     al,0xae
  439377:	and    al,0x62
  439379:	add    ah,ah
  43937b:	pushf  
  43937c:	mov    dl,0xc
  43937e:	mov    WORD PTR [ecx],?
  439380:	xchg   edx,eax
  439381:	jmp    0x4393a5
  439383:	push   edi
  439384:	popf   
  439385:	test   BYTE PTR [eax-0x50a7150],dl
  43938b:	xor    ah,BYTE PTR [edi-0x2b97ac52]
  439391:	xchg   ebx,eax
  439392:	repnz mov ecx,0x46b47ccb
  439398:	pop    esp
  439399:	clc    
  43939a:	inc    ebx
  43939b:	dec    eax
  43939c:	loope  0x439324
  43939e:	mov    dh,0xd6
  4393a0:	in     eax,dx
  4393a1:	outs   dx,DWORD PTR ds:[esi]
  4393a2:	mov    al,ds:0x3ac616a6
  4393a7:	enter  0xd3cb,0xac
  4393ab:	les    ecx,FWORD PTR [esi-0x1c2f1282]
  4393b1:	mov    dh,0x9a
  4393b3:	dec    ecx
  4393b4:	call   0xca48dd7f
  4393b9:	mov    ds:0xcf10e2e,al
  4393be:	or     BYTE PTR [esp+ebp*8+0x22],cl
  4393c2:	mov    bh,0xcc
  4393c4:	jmp    0x4951:0x624d30f2
  4393cb:	call   0xf7af:0xd8e6cc7a
  4393d2:	stos   DWORD PTR es:[edi],eax
  4393d3:	jp     0x439409
  4393d5:	push   ds
  4393d6:	push   ebp
  4393d7:	pop    esi
  4393d8:	cld    
  4393d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4393da:	pop    ecx
  4393db:	outs   dx,BYTE PTR ds:[esi]
  4393dc:	xor    ebx,esp
  4393de:	into   
  4393df:	fisubr WORD PTR [eax+0x2f8ac620]
  4393e5:	jns    0x439438
  4393e7:	cmc    
  4393e8:	outs   dx,DWORD PTR ds:[esi]
  4393e9:	sbb    DWORD PTR [esi+ebx*4-0x65],eax
  4393ed:	sub    BYTE PTR [ecx+0x7d9a25ef],cl
  4393f3:	in     al,dx
  4393f4:	mov    eax,ds:0x8edd9204
  4393f9:	ret    
  4393fa:	push   0x2e
  4393fc:	adc    dl,cl
  4393fe:	and    ah,dh
  439400:	mov    dh,0x21
  439402:	cwde   
  439403:	addr16 push 0x34
  439406:	mov    BYTE PTR [ecx],0xd1
  439409:	jmp    0x4393ba
  43940b:	dec    esi
  43940c:	das    
  43940d:	add    al,0x58
  43940f:	xchg   ecx,eax
  439410:	daa    
  439411:	addr16 pop esp
  439413:	xor    al,0xcd
  439415:	xchg   esi,eax
  439416:	mov    ds:0x4523a17c,eax
  43941b:	pop    edi
  43941c:	in     eax,0xe7
  43941e:	into   
  43941f:	jg     0x439445
  439421:	pop    ds
  439422:	mov    esp,0xe4216b6d
  439427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439428:	icebp  
  439429:	dec    eax
  43942a:	cmc    
  43942b:	push   ebx
  43942c:	or     esi,ebp
  43942e:	sub    BYTE PTR [ebx],cl
  439430:	cli    
  439431:	ins    BYTE PTR es:[di],dx
  439433:	add    cl,BYTE PTR [eax+0x68f69a8d]
  439439:	xor    BYTE PTR [ecx],0x90
  43943c:	cli    
  43943d:	or     al,0x10
  43943f:	in     eax,0x1b
  439441:	scas   eax,DWORD PTR es:[edi]
  439442:	mov    ebx,0x1377b482
  439447:	imul   esi,DWORD PTR [ebp-0x2cf649f0],0xd98d0a5c
  439451:	call   DWORD PTR [ebp+0x31]
  439454:	outs   dx,DWORD PTR ds:[esi]
  439455:	dec    edi
  439456:	add    al,dl
  439458:	dec    ecx
  439459:	jp     0x439414
  43945b:	jae    0x439455
  43945d:	mov    ds:0xb6a89820,eax
  439462:	cmp    dh,BYTE PTR [ebx+edi*8-0xa]
  439466:	test   DWORD PTR [eax+0x38],ebp
  439469:	int3   
  43946a:	js     0x4393fa
  43946c:	(bad)  
  43946e:	sar    BYTE PTR [eax+edi*4],0x62
  439472:	je     0x439433
  439474:	or     ch,ah
  439476:	mov    eax,0xdd1cf79
  43947b:	cwde   
  43947c:	test   al,0xf0
  43947e:	sbb    dl,BYTE PTR [ebx]
  439480:	mov    bl,BYTE PTR [edi+0xcbcfd3b]
  439486:	jbe    0x439503
  439488:	popf   
  439489:	jle    0x439432
  43948b:	jmp    0x4394bd
  43948d:	loopne 0x439472
  43948f:	xchg   DWORD PTR [ebp+0x4b762d5d],ebp
  439495:	push   eax
  439496:	add    al,0xd0
  439498:	pop    ds
  439499:	sbb    DWORD PTR [ebx-0x7c],ebx
  43949c:	jg     0x43943a
  43949e:	xor    ebp,DWORD PTR [edx+eiz*4-0x4dc9e4]
  4394a5:	inc    edx
  4394a6:	test   eax,0xd4b9d02d
  4394ab:	pop    ds
  4394ac:	imul   ebp,DWORD PTR [ebp-0xb055c70],0x8c8078cb
  4394b6:	mov    DWORD PTR [eax+0x1c],edx
  4394b9:	jnp    0x4394d3
  4394bb:	pop    ds
  4394bc:	je     0x4394b2
  4394be:	push   ds
  4394bf:	sahf   
  4394c0:	out    0x2b,al
  4394c2:	int3   
  4394c3:	shl    BYTE PTR [edi-0x76],0x41
  4394c7:	jle    0x4394fa
  4394c9:	inc    edx
  4394ca:	sbb    DWORD PTR [edx+0x18cbcae4],ebx
  4394d0:	sub    bh,BYTE PTR [edx+0x8080601]
  4394d6:	lods   al,BYTE PTR ds:[esi]
  4394d7:	jbe    0x43948d
  4394d9:	cli    
  4394da:	imul   ebx,DWORD PTR [edi-0x74],0xffffffc4
  4394de:	sub    al,0xc5
  4394e0:	idiv   ch
  4394e2:	out    dx,eax
  4394e3:	enter  0x6190,0x30
  4394e7:	push   eax
  4394e8:	mov    dl,0x4d
  4394ea:	and    DWORD PTR [eax+edi*2+0x13],ebp
  4394ee:	cs mov edi,0x4ef1cef8
  4394f4:	fadd   DWORD PTR [edi-0x24]
  4394f7:	jns    0x4394c9
  4394f9:	sbb    al,0xd3
  4394fb:	xchg   ecx,eax
  4394fc:	push   0x87188f09
  439501:	ret    0xce40
  439504:	scas   al,BYTE PTR es:[edi]
  439505:	sbb    BYTE PTR [esi+edx*8+0x649d7b71],0x76
  43950d:	scas   al,BYTE PTR es:[edi]
  43950e:	xlat   BYTE PTR ds:[ebx]
  43950f:	push   eax
  439510:	mov    edx,0xc470bf0
  439515:	iret   
  439516:	xor    ecx,DWORD PTR [eax]
  439518:	iret   
  439519:	inc    ebx
  43951a:	outs   dx,BYTE PTR ds:[esi]
  43951b:	sbb    ebx,esi
  43951d:	xor    BYTE PTR [eax-0x79b0cdcb],dh
  439523:	std    
  439524:	jp     0x4395a4
  439526:	push   esp
  439527:	pusha  
  439528:	inc    ebp
  439529:	aaa    
  43952a:	mov    WORD PTR ds:0x78b335fd,fs
  439530:	out    dx,eax
  439531:	push   0x843b9ff1
  439536:	scas   eax,DWORD PTR es:[edi]
  439537:	loop   0x4394d5
  439539:	pop    eax
  43953a:	aam    0xf2
  43953c:	nop
  43953d:	xor    edx,DWORD PTR [ebx+0x68]
  439540:	sbb    al,0x44
  439542:	inc    esp
  439543:	call   0x628a168d
  439548:	jae    0x4395b2
  43954a:	push   0x71457c43
  43954f:	mov    eax,DWORD PTR [ebp+0x58]
  439552:	mov    dh,0x8c
  439554:	mov    ds:0x475e4119,eax
  439559:	fdiv   DWORD PTR [ebp+0x4721b00a]
  43955f:	xchg   esp,eax
  439560:	mov    ds:0x43ba3f25,eax
  439565:	aam    0xea
  439567:	call   0xf1e6:0x1f3a1664
  43956e:	jl     0x4394f2
  439570:	pop    ds
  439571:	leave  
  439572:	pusha  
  439573:	enter  0x1c05,0x54
  439577:	mov    al,ds:0xbe21a5a9
  43957c:	cld    
  43957d:	fs inc ecx
  43957f:	mov    ebx,0xd40423c4
  439584:	add    edx,DWORD PTR [eax-0x17a176f1]
  43958a:	sub    eax,DWORD PTR [esi]
  43958c:	pop    esi
  43958d:	mov    edi,0xfeded6fa
  439592:	nop
  439593:	stos   DWORD PTR es:[edi],eax
  439594:	test   dl,bl
  439596:	icebp  
  439597:	aas    
  439598:	sar    DWORD PTR [edx],cl
  43959a:	fbstp  TBYTE PTR [esp+esi*1+0x726a8bef]
  4395a1:	adc    dl,0x17
  4395a4:	fdiv   DWORD PTR [edi-0x6023dfb9]
  4395aa:	push   ss
  4395ab:	cmp    eax,0x30a8fc70
  4395b0:	pop    ss
  4395b1:	mov    ecx,DWORD PTR [esi]
  4395b3:	in     al,dx
  4395b4:	or     BYTE PTR [eax+eiz*1+0x2b],bh
  4395b8:	je     0x439602
  4395ba:	sbb    esp,DWORD PTR [esi]
  4395bc:	hlt    
  4395bd:	or     edi,eax
  4395bf:	enter  0xc799,0x9a
  4395c3:	xor    cl,BYTE PTR [edx-0x13b8b2bd]
  4395c9:	lods   eax,DWORD PTR ds:[esi]
  4395ca:	jge    0x4395b6
  4395cc:	out    0x13,al
  4395ce:	hlt    
  4395cf:	or     eax,0x6e6e10d4
  4395d4:	sbb    al,0xed
  4395d6:	adc    BYTE PTR ds:0xc83424e4,cl
  4395dc:	inc    BYTE PTR [ebx+0x6a]
  4395df:	mov    cl,0x2e
  4395e1:	pop    ss
  4395e2:	pop    ecx
  4395e3:	fsubr  QWORD PTR [edi]
  4395e5:	lock lahf 
  4395e7:	es ss push ecx
  4395ea:	and    ah,bl
  4395ec:	add    bh,cl
  4395ee:	(bad)  
  4395ef:	loop   0x43964d
  4395f1:	enter  0x3530,0x77
  4395f5:	and    al,0xcf
  4395f7:	(bad)  
  4395f8:	cmp    eax,0x38ae925b
  4395fd:	pushf  
  4395fe:	dec    eax
  4395ff:	add    bp,0xffe9
  439603:	aas    
  439604:	gs enter 0x6c59,0x7e
  439609:	fsubp  st(4),st
  43960b:	out    0x7,al
  43960d:	pop    edi
  43960e:	sub    esp,DWORD PTR [edi+0x7daaf14]
  439614:	cmp    ebp,ebx
  439616:	sub    ah,BYTE PTR [esi+edx*8+0x38]
  43961a:	add    BYTE PTR [edx+ebp*8+0x659709fe],dh
  439621:	lea    ebx,[ebx+ecx*8+0x4f]
  439625:	and    DWORD PTR [ebp-0xd],ebp
  439628:	out    0xd,al
  43962a:	leave  
  43962b:	adc    dl,0x43
  43962e:	mov    bl,0xe9
  439630:	pop    es
  439631:	retf   
  439632:	test   DWORD PTR [edx],esi
  439634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439635:	arpl   WORD PTR [edx+0x51cecdda],cx
  43963b:	sub    DWORD PTR [ebp+0x4c],ecx
  43963e:	lods   eax,DWORD PTR ds:[esi]
  43963f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439640:	int3   
  439641:	xor    eax,0xcf0b458e
  439646:	jo     0x439681
  439648:	jo     0x439611
  43964a:	adc    ebx,ebp
  43964c:	ds push 0xb
  43964f:	xchg   esp,eax
  439650:	call   0xae51:0x6b7aface
  439657:	sub    al,0xb8
  439659:	xchg   esi,eax
  43965a:	xchg   ebp,eax
  43965b:	jne    0x439606
  43965d:	test   ecx,esi
  43965f:	inc    ebp
  439660:	pop    eax
  439661:	pusha  
  439662:	jecxz  0x439640
  439664:	xchg   edx,eax
  439665:	(bad)  
  439666:	mov    ch,0x84
  439668:	sahf   
  439669:	pop    es
  43966a:	test   BYTE PTR [ecx-0x70],dl
  43966d:	mov    al,ds:0x3f08c980
  439672:	ins    BYTE PTR es:[edi],dx
  439673:	test   al,0x5d
  439675:	pop    ss
  439676:	or     esp,DWORD PTR [ebx+ebx*1-0x33157b30]
  43967d:	sbb    eax,0xfbfcdaa4
  439682:	popa   
  439683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439684:	scas   al,BYTE PTR es:[edi]
  439685:	lock mov ds:0x390472b3,eax
  43968b:	in     eax,dx
  43968c:	lock pop ss
  43968e:	cwde   
  43968f:	inc    ecx
  439690:	inc    ecx
  439691:	dec    edx
  439692:	fild   QWORD PTR [ebp-0x4a]
  439695:	xchg   esp,eax
  439696:	cmp    DWORD PTR [esp+esi*4+0x783c85a6],0xe0e9462d
  4396a1:	mov    al,ds:0xfaa09df5
  4396a6:	cmp    BYTE PTR [edx-0x3],ah
  4396a9:	add    al,0xe7
  4396ab:	sbb    cl,ah
  4396ad:	ins    BYTE PTR es:[edi],dx
  4396ae:	dec    ecx
  4396af:	add    ch,BYTE PTR [ecx+0x4a]
  4396b2:	lods   al,BYTE PTR ds:[esi]
  4396b3:	in     eax,dx
  4396b4:	lahf   
  4396b5:	or     BYTE PTR [ecx+eax*1+0x47],ah
  4396b9:	add    DWORD PTR [edx],0xffffffd0
  4396bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4396bd:	or     esp,0x9ab2d17e
  4396c3:	sbb    dh,ah
  4396c5:	cmc    
  4396c6:	xor    ecx,DWORD PTR [edi+0x4b]
  4396c9:	imul   edx,DWORD PTR [eax],0x24
  4396cc:	stc    
  4396cd:	sbb    BYTE PTR [ebx-0x10],bh
  4396d0:	lods   eax,DWORD PTR ds:[esi]
  4396d1:	mov    edx,0x48ba0d28
  4396d6:	cmp    al,0xef
  4396d8:	lods   al,BYTE PTR ds:[esi]
  4396d9:	je     0x43974b
  4396db:	dec    ebp
  4396dc:	mov    ecx,0xe5e4ccbd
  4396e1:	daa    
  4396e2:	ins    BYTE PTR es:[edi],dx
  4396e3:	mov    bh,0x95
  4396e5:	cmp    DWORD PTR [edi-0x43b9f7a7],0x5f
  4396ec:	push   ebx
  4396ed:	outs   dx,DWORD PTR ds:[esi]
  4396ee:	out    0x1b,al
  4396f0:	sti    
  4396f1:	sub    al,0x34
  4396f3:	inc    edi
  4396f4:	push   eax
  4396f5:	xchg   esi,eax
  4396f6:	or     ch,BYTE PTR [esi-0x28]
  4396f9:	jmp    0xf164334e
  4396fe:	jl     0x439736
  439700:	adc    al,dh
  439702:	shl    BYTE PTR [ebx+esi*1+0xc],0x2b
  439707:	add    BYTE PTR [ecx+0x53],ah
  43970a:	pop    edi
  43970b:	sti    
  43970c:	sbb    al,0xb7
  43970e:	inc    ebx
  43970f:	je     0x439721
  439711:	aam    0xdb
  439713:	mov    al,0x3b
  439715:	inc    eax
  439716:	pop    ds
  439717:	push   ds
  439718:	sbb    al,0x1a
  43971a:	and    dh,cl
  43971c:	push   eax
  43971d:	jmp    0x439783
  43971f:	mov    ebp,0x6d6871d1
  439724:	push   0x62
  439726:	loopne 0x4396b0
  439728:	fistp  DWORD PTR [ecx-0x26]
  43972b:	test   eax,0x24c5de54
  439730:	xor    BYTE PTR [ebp+edi*4+0x1e5892df],ah
  439737:	mov    ebx,0xc2aa543d
  43973c:	inc    esp
  43973d:	inc    edx
  43973e:	out    dx,al
  43973f:	add    ah,BYTE PTR [ebx]
  439741:	and    edi,DWORD PTR [eax+0x3d]
  439744:	pop    ds
  439745:	or     al,0x95
  439747:	jne    0x43976c
  439749:	inc    ebp
  43974a:	xor    bl,BYTE PTR [eax+eax*2-0x21d67e1b]
  439751:	jne    0x439705
  439753:	sub    al,dl
  439755:	jge    0x4397a3
  439757:	xor    DWORD PTR [ebx],ebx
  439759:	push   eax
  43975a:	inc    ebp
  43975b:	sbb    BYTE PTR [eax],dh
  43975d:	xor    BYTE PTR [edi+ebp*8-0x54],ch
  439761:	gs ss mov eax,0x9014d7e5
  439768:	fisttp DWORD PTR [ebx+0x5cc59f00]
  43976e:	pop    es
  43976f:	push   0x94b27eb4
  439774:	jo     0x4397b5
  439776:	sbb    BYTE PTR [ecx],ch
  439778:	cdq    
  439779:	fdiv   DWORD PTR [edi+0x56c17311]
  43977f:	outs   dx,DWORD PTR ds:[esi]
  439780:	call   0x744d:0x1132809e
  439787:	xchg   edx,eax
  439788:	sub    ebx,DWORD PTR [edx+0x75]
  43978b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43978c:	inc    BYTE PTR [edx+0x1c]
  43978f:	cmp    edx,DWORD PTR [ecx]
  439791:	cmp    edx,esi
  439793:	xchg   al,cl
  439795:	mov    ah,0x26
  439797:	test   al,0xac
  439799:	rcl    edi,cl
  43979b:	out    0xe9,al
  43979d:	in     al,dx
  43979e:	in     eax,dx
  43979f:	aam    0xa1
  4397a1:	je     0x439728
  4397a3:	or     al,BYTE PTR [esi-0x5]
  4397a6:	adc    BYTE PTR [ecx-0x1236cf6d],dl
  4397ac:	hlt    
  4397ad:	pop    ecx
  4397ae:	sbb    al,0xb8
  4397b0:	pop    esi
  4397b2:	sub    BYTE PTR [edx+0x68],0xcf
  4397b6:	into   
  4397b7:	and    ah,bl
  4397b9:	ss jle 0x439818
  4397bc:	outs   dx,BYTE PTR ds:[esi]
  4397bd:	popf   
  4397be:	fcom   DWORD PTR [edx-0xf]
  4397c1:	add    ah,dl
  4397c3:	adc    eax,0xfd628b80
  4397c8:	daa    
  4397c9:	ins    DWORD PTR es:[edi],dx
  4397ca:	and    al,0x26
  4397cc:	loope  0x439800
  4397ce:	add    ebx,ebp
  4397d0:	clc    
  4397d1:	mov    WORD PTR [edx+0x4b08ccc],ss
  4397d7:	adc    dl,bl
  4397d9:	repz cmp BYTE PTR [edx-0x10],0xf1
  4397de:	push   cs
  4397df:	jae    0x439767
  4397e1:	(bad)  
  4397e2:	cmp    al,0x47
  4397e4:	jg     0x4397fa
  4397e6:	push   0x66b7aa7a
  4397eb:	out    dx,eax
  4397ec:	mov    ds:0xac70384d,eax
  4397f1:	xlat   BYTE PTR ds:[ebx]
  4397f2:	iret   
  4397f3:	mov    ?,WORD PTR ds:0xe25c63bf
  4397f9:	loop   0x4397b2
  4397fb:	out    dx,al
  4397fc:	clc    
  4397fd:	push   eax
  4397fe:	adc    BYTE PTR [esi+0x4],bl
  439801:	pop    ebx
  439802:	and    al,0x9
  439804:	xchg   ebx,eax
  439805:	push   cs
  439806:	mov    dh,0x8f
  439808:	retf   0x3c28
  43980b:	test   BYTE PTR [edx-0x20],0xbd
  43980f:	cld    
  439810:	fs popa 
  439812:	dec    esp
  439813:	xchg   edx,eax
  439814:	cmp    al,al
  439816:	pop    eax
  439817:	aam    0x3e
  439819:	icebp  
  43981a:	pushf  
  43981b:	jo     0x43983e
  43981d:	sub    al,0xbf
  43981f:	daa    
  439820:	push   eax
  439821:	xchg   ebx,eax
  439822:	inc    edi
  439823:	and    DWORD PTR [ebx+edi*8+0xfd81cf0],edx
  43982a:	jae    0x439865
  43982c:	cmp    BYTE PTR [ebx*8+0x20fdb5b5],0xbe
  439834:	inc    esp
  439835:	sbb    al,0x60
  439837:	mov    esp,0xd2a7b306
  43983c:	mov    al,ds:0x6584053f
  439841:	clc    
  439842:	xchg   esp,eax
  439843:	dec    esp
  439844:	popa   
  439845:	pop    esi
  439846:	adc    eax,0x473aa867
  43984b:	and    esp,DWORD PTR ds:0x54957f0c
  439851:	push   eax
  439852:	stc    
  439853:	nop    DWORD PTR [ecx]
  439856:	pushf  
  439857:	jle    0x439800
  439859:	pop    ebp
  43985a:	je     0x439877
  43985c:	(bad)  
  43985d:	js     0x4398c2
  43985f:	mov    eax,ds:0x989ee19b
  439864:	sbb    DWORD PTR [edx-0x21],edi
  439867:	mov    ecx,0x6802fe88
  43986c:	mov    esp,0x91360d6b
  439871:	or     ecx,DWORD PTR [ecx]
  439873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439874:	dec    ecx
  439875:	loopne 0x439840
  439877:	mov    ss,WORD PTR [ecx+0x13]
  43987a:	jno    0x43980e
  43987c:	es mov esp,0xd0000b88
  439882:	mov    edi,0xd639e5b
  439887:	lods   al,BYTE PTR ds:[esi]
  439888:	call   0xfdb34cf9
  43988d:	popa   
  43988e:	sub    DWORD PTR [edx+0x58a0dd0],esi
  439894:	(bad)  
  439895:	dec    ecx
  439896:	cmp    BYTE PTR [ecx+0x13],dh
  439899:	hlt    
  43989a:	xor    al,0x4b
  43989c:	aam    0x6d
  43989e:	arpl   WORD PTR [edi],bp
  4398a0:	fcmovu st,st(7)
  4398a2:	pushf  
  4398a3:	loopne 0x439860
  4398a5:	lods   eax,DWORD PTR ds:[esi]
  4398a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4398a7:	push   edi
  4398a8:	jne    0x4398fe
  4398aa:	sti    
  4398ab:	rcr    BYTE PTR [edx],0x5f
  4398ae:	fld    TBYTE PTR [esi-0x1f]
  4398b1:	add    esp,DWORD PTR [ecx-0x608d1b75]
  4398b7:	and    DWORD PTR [ebp-0x4d],ebx
  4398ba:	iret   
  4398bb:	icebp  
  4398bc:	enter  0xf008,0xe7
  4398c0:	jp     0x439894
  4398c2:	add    bh,BYTE PTR [ecx-0x65]
  4398c5:	sub    DWORD PTR [edx+eax*4],0x35
  4398c9:	sub    BYTE PTR [ebx+0x6f673277],ch
  4398cf:	aam    0xd3
  4398d1:	pop    esp
  4398d2:	stos   BYTE PTR es:[edi],al
  4398d3:	int3   
  4398d4:	frstor [ebp+0x56f880d9]
  4398da:	or     dl,BYTE PTR [edx]
  4398dc:	xlat   BYTE PTR ds:[ebx]
  4398dd:	pop    ecx
  4398de:	or     eax,0xc91c2214
  4398e3:	sub    edx,DWORD PTR [ebp+0x4c9807dd]
  4398e9:	sahf   
  4398ea:	inc    eax
  4398eb:	push   es
  4398ec:	sbb    DWORD PTR [eax-0x6bda8bc1],eax
  4398f2:	pop    edx
  4398f3:	fs xchg edx,eax
  4398f5:	jmp    0x941cd35d
  4398fa:	popf   
  4398fb:	jle    0x439909
  4398fd:	push   ebx
  4398fe:	stc    
  4398ff:	gs fdiv st,st(1)
  439902:	pusha  
  439903:	mov    al,0xea
  439905:	xor    BYTE PTR [ecx+ebx*8+0x7cc9a18d],ch
  43990c:	pop    edi
  43990d:	cli    
  43990e:	push   esp
  43990f:	xor    esi,DWORD PTR [edx-0x7a506def]
  439915:	cmp    eax,0xb4d978b7
  43991a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43991b:	pop    ebp
  43991c:	mov    DWORD PTR [edx],esi
  43991e:	xor    DWORD PTR [ebx+0x20],edi
  439921:	push   esp
  439922:	jp     0x439974
  439924:	lods   eax,DWORD PTR ds:[esi]
  439925:	push   cs
  439926:	stos   DWORD PTR es:[edi],eax
  439927:	jmp    0x439972
  439929:	inc    esp
  43992a:	cmp    BYTE PTR [edi],dh
  43992c:	xchg   DWORD PTR [bp+di+0x6760],ebp
  439931:	pushw  0xe297
  439935:	push   ebx
  439936:	sub    al,0xd7
  439938:	data16 mov bl,BYTE PTR [ebx+0x3424118c]
  43993f:	aad    0xd
  439941:	xor    dh,ah
  439943:	pop    ecx
  439944:	mov    al,0x4a
  439946:	sub    BYTE PTR [edi+0x7e3f93cd],dl
  43994c:	test   eax,0x43aa4358
  439951:	mov    dl,0xd9
  439953:	pop    eax
  439954:	sub    BYTE PTR [ebp+0x39d1ca7c],dh
  43995a:	push   eax
  43995b:	and    eax,0xa0472505
  439960:	push   cs
  439961:	lods   al,BYTE PTR ds:[esi]
  439962:	xchg   BYTE PTR [esi-0x7648efea],dh
  439968:	les    edx,FWORD PTR [edx+esi*8-0x65]
  43996c:	mov    ds,ecx
  43996e:	std    
  43996f:	or     dh,BYTE PTR [ecx+0x6c]
  439972:	(bad)  
  439973:	int    0x15
  439975:	sbb    BYTE PTR [ebp-0x19],0xbd
  439979:	inc    ebx
  43997a:	nop
  43997b:	pop    ebx
  43997c:	jmp    0x25f4:0x21093c4c
  439983:	mov    ah,0xe2
  439985:	mov    ebx,eax
  439987:	add    eax,0x307bd86f
  43998c:	fdivr  st,st(7)
  43998e:	ret    0x2dad
  439991:	retf   
  439992:	jmp    0x439a09
  439994:	cmp    esp,0x3a5cd02d
  43999a:	sbb    dl,dh
  43999c:	rcl    DWORD PTR [esi+0x17366ca4],1
  4399a2:	xor    bh,BYTE PTR [ecx]
  4399a4:	popf   
  4399a5:	adc    BYTE PTR [esi+0x469c5fc8],ch
  4399ab:	rol    DWORD PTR [edx],0x2e
  4399ae:	xchg   ebx,eax
  4399af:	repz in al,dx
  4399b1:	pop    ebp
  4399b2:	sbb    BYTE PTR [ecx+0x230238b5],ch
  4399b8:	xor    dl,BYTE PTR [eax]
  4399ba:	data16 jns 0x439a1d
  4399bd:	call   0x63a66fbc
  4399c2:	mov    eax,0x8ef6d5cf
  4399c7:	out    0x34,al
  4399c9:	cmp    al,BYTE PTR ds:0xfb60e6dc
  4399cf:	sub    al,0xbf
  4399d1:	sti    
  4399d2:	dec    ebx
  4399d3:	sbb    DWORD PTR [eax],eax
  4399d5:	rcl    DWORD PTR [edi+0x4a164753],1
  4399db:	call   0xb2ebdef
  4399e0:	clc    
  4399e1:	push   0xcb3d044f
  4399e6:	dec    eax
  4399e7:	pop    es
  4399e8:	arpl   WORD PTR [ecx+0x27],di
  4399eb:	jns    0x4399bc
  4399ed:	mov    gs,eax
  4399ef:	lock lods al,BYTE PTR ds:[esi]
  4399f1:	push   es
  4399f2:	cmp    eax,0x2c90fa1
  4399f7:	adc    DWORD PTR [esi+edx*2],0x63c56eb9
  4399fe:	ret    0xa825
  439a01:	cmp    BYTE PTR [esi+0x4f],al
  439a04:	mov    ds:0x78133dfc,eax
  439a09:	rcr    DWORD PTR [edi+ecx*1-0x40],1
  439a0d:	jle    0x439a53
  439a0f:	push   ss
  439a10:	aaa    
  439a11:	sar    DWORD PTR [ebp-0x70],cl
  439a14:	add    dl,ch
  439a16:	(bad)  
  439a17:	sti    
  439a18:	clc    
  439a19:	stos   DWORD PTR es:[edi],eax
  439a1a:	jb     0x4399be
  439a1c:	fld    TBYTE PTR [esp+edx*8]
  439a1f:	not    DWORD PTR [eax+0x24c4c53c]
  439a25:	or     al,0x50
  439a27:	fimul  WORD PTR [eax+eiz*8]
  439a2a:	cwde   
  439a2b:	mov    ebp,0x743e19ca
  439a30:	jmp    0xaf64:0xe80fd5a6
  439a37:	or     ebx,DWORD PTR [eax-0x235260b6]
  439a3d:	mov    cl,0x48
  439a3f:	clc    
  439a40:	mov    ecx,0xdc661c40
  439a45:	sti    
  439a46:	test   DWORD PTR [edx+0x36],ecx
  439a49:	push   ecx
  439a4a:	fs jbe 0x439a2f
  439a4d:	imul   edx,eax,0x70
  439a50:	pop    ebx
  439a51:	pushf  
  439a52:	js     0xc7af7d55
  439a58:	jns    0x439a80
  439a5a:	sbb    DWORD PTR [esp+ebp*4],esp
  439a5d:	mov    ebx,ecx
  439a5f:	mov    dl,0xbf
  439a61:	push   eax
  439a62:	jmp    0xc970:0xfcd03755
  439a69:	repnz or al,0xfd
  439a6c:	and    bh,BYTE PTR [edx+0x687a5978]
  439a72:	jecxz  0x439a7c
  439a74:	xchg   esi,eax
  439a75:	or     BYTE PTR [ecx-0x64],al
  439a78:	xor    esi,DWORD PTR [ebx-0x6c200f19]
  439a7e:	scas   eax,DWORD PTR es:[edi]
  439a7f:	fcmovnb st,st(0)
  439a81:	sub    ebp,DWORD PTR [edi+0x3f]
  439a84:	add    eax,0x165c367
  439a89:	in     al,0xcd
  439a8b:	mov    eax,ds:0xcebd55f0
  439a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439a91:	and    al,0x8c
  439a93:	jnp    0x439ad4
  439a95:	cmp    eax,DWORD PTR ds:0xc10552c6
  439a9b:	mov    al,0x51
  439a9d:	push   ebx
  439a9e:	or     BYTE PTR [ebp-0x6a],bh
  439aa1:	mov    eax,0x50d4ed64
  439aa6:	es (bad) 
  439aa8:	xor    eax,0x4ff5dee1
  439aad:	clc    
  439aae:	(bad)  
  439ab0:	xchg   DWORD PTR [ecx-0x64],edi
  439ab3:	push   0x7c
  439ab5:	int3   
  439ab6:	sbb    al,0x15
  439ab8:	setnp  BYTE PTR [ebx+0x56]
  439abc:	xchg   esp,eax
  439abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439abe:	cmp    al,0xc4
  439ac0:	xchg   edx,eax
  439ac1:	out    0xc7,eax
  439ac3:	jnp    0x439b03
  439ac5:	adc    eax,0x31e843af
  439aca:	mov    ebp,0x73d2747a
  439acf:	or     eax,0xa3ca0c9f
  439ad4:	ror    DWORD PTR fs:[ebp+0x30fe8f7f],cl
  439adb:	mov    ch,0xdd
  439add:	(bad)  
  439adf:	pop    es
  439ae0:	cdq    
  439ae1:	cmp    ebx,eax
  439ae3:	push   esp
  439ae4:	lods   al,BYTE PTR ds:[esi]
  439ae5:	retf   
  439ae6:	ja     0x439a98
  439ae8:	les    edx,FWORD PTR [eax]
  439aea:	not    DWORD PTR [esi]
  439aec:	cld    
  439aed:	ret    
  439aee:	mov    BYTE PTR [edx],al
  439af0:	mov    eax,0xa55e8f81
  439af5:	and    bh,bh
  439af7:	add    BYTE PTR [esi],0x25
  439afa:	or     DWORD PTR [ebp+0x30],ebx
  439afd:	repz inc esp
  439aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439b00:	jb     0x439b0d
  439b02:	mov    al,0xda
  439b04:	xor    DWORD PTR [edx-0x411970d],esi
  439b0a:	push   es
  439b0b:	push   edx
  439b0c:	mov    eax,ds:0x10a2faf3
  439b11:	jge    0x439b4a
  439b13:	test   esp,0xbd44afab
  439b19:	xor    al,0x89
  439b1b:	imul   ebp,edi,0xfffffff1
  439b1e:	dec    edi
  439b1f:	fs ins BYTE PTR es:[edi],dx
  439b21:	gs pop eax
  439b23:	lahf   
  439b24:	mov    ecx,0xc670da8b
  439b29:	cmc    
  439b2a:	call   0x5d58f0ab
  439b2f:	push   0xffffffcf
  439b31:	icebp  
  439b32:	jmp    0x439b95
  439b34:	mov    al,ds:0xd1a6f80b
  439b39:	into   
  439b3a:	sub    BYTE PTR [eax+0xc],ah
  439b3d:	lods   al,BYTE PTR ds:[esi]
  439b3e:	inc    edi
	...
  439b47:	add    BYTE PTR [eax+0x16],bl
  439b4a:	popa   
  439b4b:	inc    ebx
  439b4c:	push   eax
  439b4d:	or     DWORD PTR [eax],eax
  439b4f:	add    BYTE PTR [eax],al
  439b51:	add    BYTE PTR [eax],al
  439b53:	add    BYTE PTR [eax+0x9],dl
  439b56:	add    BYTE PTR [eax],al
  439b58:	dec    esi
  439b59:	add    BYTE PTR [esi],ah
  439b5b:	jl     0x439b5d
  439b5d:	add    dh,BYTE PTR [esi]
  439b5f:	or     BYTE PTR [eax],al
  439b61:	add    bl,al
  439b63:	inc    ebp
  439b64:	add    BYTE PTR [edx],dl
  439b66:	popf   
  439b67:	test   al,0x3b
  439b69:	retf   0x58d9
  439b6c:	cmp    al,0x24
  439b6e:	(bad)  
  439b6f:	dec    edx
  439b70:	push   es
  439b71:	retf   0x1c5e
  439b74:	ja     0x439be8
  439b76:	dec    eax
  439b77:	cmp    BYTE PTR [esi+0x2b],dl
  439b7a:	call   0x16895a99
  439b7f:	ins    BYTE PTR es:[edi],dx
  439b80:	xor    eax,0x5c48536f
  439b85:	and    al,0x98
  439b87:	jl     0x439b19
  439b89:	or     al,0x4a
  439b8b:	cwde   
  439b8c:	sbb    DWORD PTR [esp+ebx*2],ebx
  439b8f:	(bad)  
  439b90:	jecxz  0x439bca
  439b92:	rcr    edi,cl
  439b94:	rol    ebx,0x9a
  439b97:	push   ebp
  439b98:	fs or  eax,0x9a48905c
  439b9e:	mov    ebx,0xaa854437
  439ba3:	sbb    BYTE PTR [eax-0x4607d91c],0xa3
  439baa:	pop    ecx
  439bab:	dec    ebx
  439bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439bad:	scas   al,BYTE PTR es:[edi]
  439bae:	jo     0x439bf9
  439bb0:	std    
  439bb1:	shl    BYTE PTR ds:0x4c5fe6,cl
  439bb7:	mov    esp,0xa6b62edb
  439bbc:	cmp    BYTE PTR [esi+0x68232270],ah
  439bc2:	cmp    dh,BYTE PTR [edx]
  439bc4:	aad    0x3b
  439bc6:	xor    edx,DWORD PTR [edi+eiz*2+0x5ac95305]
  439bcd:	icebp  
  439bce:	sub    dh,BYTE PTR [eax-0x48]
  439bd1:	gs ja  0x439c33
  439bd4:	(bad)  
  439bd5:	pop    edx
  439bd6:	add    esp,DWORD PTR ds:0x23e8dcd5
  439bdc:	xor    eax,DWORD PTR [ecx-0x13]
  439bdf:	dec    edx
  439be0:	push   edx
  439be1:	in     al,dx
  439be2:	test   dl,bl
  439be4:	cdq    
  439be5:	nop
  439be6:	(bad)  
  439be7:	in     al,0x9f
  439be9:	arpl   WORD PTR [edi-0x58],ax
  439bec:	in     eax,0xc5
  439bee:	scas   al,BYTE PTR es:[edi]
  439bef:	pop    esi
  439bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bf1:	sbb    BYTE PTR [edx+0x4874cc51],al
  439bf7:	in     al,0x7
  439bf9:	push   ds
  439bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bfb:	shl    BYTE PTR [ebx],0xf0
  439bfe:	sub    bh,BYTE PTR [ebx+0x73]
  439c01:	mov    esp,0x421305fc
  439c06:	adc    al,0x51
  439c08:	pusha  
  439c09:	ja     0x439c45
  439c0b:	adc    BYTE PTR [edx],cl
  439c0d:	aam    0xf0
  439c0f:	mov    esp,0x52a64b5e
  439c14:	xor    BYTE PTR [edi+0x25],ch
  439c17:	lods   al,BYTE PTR ds:[esi]
  439c18:	loopne 0x439c92
  439c1a:	cmp    al,0x8a
  439c1c:	dec    ebx
  439c1d:	cli    
  439c1e:	loopne 0x439bcd
  439c20:	scas   eax,DWORD PTR es:[edi]
  439c21:	add    al,0x80
  439c23:	mov    ds:0x157f63a,al
  439c28:	lds    edx,FWORD PTR [ecx]
  439c2a:	sub    dl,cl
  439c2c:	sub    edi,0xdeefc874
  439c32:	sti    
  439c33:	rcr    BYTE PTR [esi],1
  439c35:	mov    esi,0x87957fce
  439c3a:	into   
  439c3b:	push   esi
  439c3c:	hlt    
  439c3d:	adc    eax,0x6f1ce5b8
  439c42:	xor    eax,0x9d188bb1
  439c47:	das    
  439c48:	data16 aad 0x9d
  439c4b:	stc    
  439c4c:	add    BYTE PTR [esp+edi*1-0x658da82a],al
  439c53:	xchg   ebp,eax
  439c54:	push   0x4760ae33
  439c59:	outs   dx,BYTE PTR ds:[esi]
  439c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c5b:	(bad)  
  439c5c:	sbb    esi,DWORD PTR [edi-0x11]
  439c5f:	mov    ds:0xe2029e08,eax
  439c64:	add    eax,0xf9b5fc4d
  439c69:	sub    al,0x1d
  439c6b:	jmp    FWORD PTR [ecx+0x6]
  439c6e:	xor    esp,DWORD PTR [edi+edi*2-0x54]
  439c72:	push   eax
  439c73:	test   al,0x4f
  439c75:	inc    ecx
  439c76:	sbb    BYTE PTR fs:[ecx+0x31],bh
  439c7a:	ds je  0x439c56
  439c7d:	dec    ecx
  439c7e:	sbb    edx,DWORD PTR ds:0xe69c43c1
  439c84:	sbb    al,0x33
  439c86:	aaa    
  439c87:	and    BYTE PTR [eax+eax*1+0x407291e9],0xf
  439c8f:	rcl    cl,0xd7
  439c92:	pushf  
  439c93:	aaa    
  439c94:	aas    
  439c95:	lds    esp,FWORD PTR [esi+eax*4+0x53]
  439c99:	call   0x88fe:0x8b8a3cca
  439ca0:	fs inc esp
  439ca2:	jp     0x439cf0
  439ca4:	cmp    eax,0xacaed83f
  439ca9:	or     al,0x7c
  439cab:	iret   
  439cac:	sub    eax,0x27cab7b7
  439cb1:	push   esp
  439cb2:	aad    0x7
  439cb4:	call   0x1ed75f0c
  439cb9:	cmp    al,0x78
  439cbb:	cwde   
  439cbc:	pushf  
  439cbd:	mov    eax,ds:0xf1ae4a81
  439cc2:	sbb    DWORD PTR [edi+ecx*2-0x697b621d],0xffffffd5
  439cca:	cwde   
  439ccb:	and    eax,eax
  439ccd:	lds    esp,FWORD PTR [esi+0x4e]
  439cd0:	clc    
  439cd1:	repnz mov ds:0xfe49046,eax
  439cd7:	cmp    ebp,edx
  439cd9:	in     eax,0x8d
  439cdb:	jbe    0x439c70
  439cdd:	or     al,0x8c
  439cdf:	gs ins DWORD PTR es:[edi],dx
  439ce1:	xchg   ebp,eax
  439ce2:	adc    bh,dl
  439ce4:	lods   eax,DWORD PTR ds:[esi]
  439ce5:	mov    eax,ds:0xdfb3b063
  439cea:	and    bl,BYTE PTR [esi+0x21]
  439ced:	xchg   ebp,eax
  439cee:	xor    DWORD PTR [ebp-0x2c],esi
  439cf1:	jae    0x439d10
  439cf3:	nop
  439cf4:	fimul  DWORD PTR [edi]
  439cf6:	or     al,0x82
  439cf8:	out    0xf8,al
  439cfa:	push   esp
  439cfb:	inc    esp
  439cfc:	dec    edx
  439cfd:	cli    
  439cfe:	dec    eax
  439cff:	js     0x439d21
  439d01:	retf   
  439d02:	mov    al,ds:0x6302dc0c
  439d07:	jb     0x439d44
  439d09:	mov    ecx,0x334cc42a
  439d0e:	xchg   ebp,eax
  439d0f:	loope  0x439d42
  439d11:	pop    ss
  439d12:	retf   
  439d13:	jle    0x439cfd
  439d15:	sub    BYTE PTR [ebx-0x28],al
  439d18:	test   BYTE PTR [ebp+0xcb3cf82],ch
  439d1e:	and    bl,BYTE PTR [edx-0x17fd6cbf]
  439d24:	inc    ecx
  439d25:	xlat   BYTE PTR ds:[ebx]
  439d26:	xor    BYTE PTR [ecx+0x67],cl
  439d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439d2a:	std    
  439d2b:	sub    esp,DWORD PTR [esi+ebx*8+0x6dddd83b]
  439d32:	int    0xd3
  439d34:	dec    edx
  439d35:	ss (bad) 
  439d37:	xchg   esi,eax
  439d38:	cld    
  439d39:	xchg   BYTE PTR [ecx],al
  439d3b:	mov    bl,0x4e
  439d3d:	push   ebp
  439d3e:	and    eax,eax
  439d40:	imul   esp,DWORD PTR [eax],0xaed3ebf9
  439d46:	mov    DWORD PTR [edi+ebx*1],0x845b441a
  439d4d:	and    eax,0x61c9acc3
  439d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439d53:	in     al,dx
  439d54:	cmp    bh,al
  439d56:	xor    eax,0x38b9fe11
  439d5b:	fst    QWORD PTR [eax]
  439d5d:	mov    al,ds:0x1edbe510
  439d62:	(bad)  
  439d63:	loope  0x439ced
  439d65:	xor    al,0x28
  439d67:	test   eax,0xb3fdb767
  439d6c:	outs   dx,BYTE PTR ds:[esi]
  439d6d:	jno    0x439dc7
  439d6f:	in     al,0x2f
  439d71:	and    eax,0x9f29a911
  439d76:	adc    BYTE PTR [esp+eax*1-0x6d],bh
  439d7a:	mov    esi,0x6b121f21
  439d7f:	xchg   esp,eax
  439d80:	and    al,0xb1
  439d82:	jl     0x439d90
  439d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439d85:	jbe    0x439dec
  439d87:	mov    esi,0xd389480c
  439d8c:	dec    edx
  439d8d:	jg     0x439df5
  439d8f:	pop    es
  439d90:	cmp    al,0x9b
  439d92:	ins    BYTE PTR es:[edi],dx
  439d93:	scas   ax,WORD PTR es:[edi]
  439d95:	sbb    edi,ebx
  439d97:	xor    ecx,edx
  439d99:	cs int3 
  439d9b:	nop
  439d9c:	mov    cl,BYTE PTR [ebx+ecx*4-0x67a16f20]
  439da3:	inc    edx
  439da4:	mov    ah,0x69
  439da6:	popa   
  439da7:	inc    ebx
  439da8:	xor    eax,0x798baf3c
  439dad:	pop    esp
  439dae:	enter  0xf614,0xcc
  439db2:	pop    ecx
  439db3:	pop    esp
  439db4:	mov    ds:0xd7fa8090,eax
  439db9:	pop    edi
  439dba:	xor    al,0x59
  439dbc:	rol    DWORD PTR [ebx+0xc4aa421],cl
  439dc2:	test   eax,0xb339c095
  439dc7:	jno    0x439d91
  439dc9:	pushf  
  439dca:	test   al,0x2a
  439dcc:	or     eax,0x9199dc14
  439dd1:	jo     0x439dbe
  439dd3:	jae    0x439e12
  439dd5:	adc    BYTE PTR [eax],dl
  439dd7:	sbb    eax,0x3294c9e1
  439ddc:	sbb    ch,bl
  439dde:	jo     0x439d67
  439de0:	sub    BYTE PTR [eax+0x1b],dl
  439de3:	mov    eax,0xb81dfe63
  439de8:	shl    DWORD PTR [edx],cl
  439dea:	xchg   edi,eax
  439deb:	retf   
  439dec:	fsubr  QWORD PTR [edi]
  439dee:	jbe    0x439d85
  439df0:	push   0x29
  439df2:	jne    0x439dd3
  439df4:	out    dx,eax
  439df5:	add    BYTE PTR [esi-0x35],cl
  439df8:	aad    0xb9
  439dfa:	fbstp  TBYTE PTR [edx-0x355713ae]
  439e00:	adc    BYTE PTR [ecx],bh
  439e02:	pop    eax
  439e03:	xor    DWORD PTR [esi+ebx*8+0x35],eax
  439e07:	int3   
  439e08:	repz add eax,0x92b2b015
  439e0e:	adc    eax,0x2e08f0fc
  439e13:	int3   
  439e14:	out    dx,al
  439e15:	lds    edi,FWORD PTR [esi+0x2d]
  439e18:	int    0x14
  439e1a:	fld    TBYTE PTR [eax+0x17]
  439e1d:	dec    edi
  439e1e:	xchg   esp,eax
  439e1f:	out    dx,eax
  439e20:	cs test al,0xbc
  439e23:	inc    ecx
  439e24:	in     eax,dx
  439e25:	jbe    0x439de7
  439e27:	int3   
  439e28:	in     al,dx
  439e29:	in     eax,0x4c
  439e2b:	loopne 0x439e57
  439e2d:	cmp    eax,0x603fc877
  439e32:	ror    DWORD PTR [edx+0x4],0x4e
  439e36:	cld    
  439e37:	outs   dx,BYTE PTR ds:[esi]
  439e38:	push   ebx
  439e39:	mov    dh,0xce
  439e3b:	adc    DWORD PTR [ebx],eax
  439e3d:	sub    BYTE PTR [edi-0x6751ed19],ch
  439e43:	xor    BYTE PTR [ecx+ebx*4],bh
  439e46:	dec    esp
  439e47:	jbe    0x439de9
  439e49:	pop    eax
  439e4a:	dec    eax
  439e4b:	jp     0x439e48
  439e4d:	(bad)  
  439e4f:	hlt    
  439e50:	das    
  439e51:	push   0x68
  439e53:	sub    ecx,ecx
  439e55:	and    esi,0x37
  439e58:	sbb    dh,ah
  439e5a:	inc    esp
  439e5b:	push   0x2e
  439e5d:	add    eax,0x3ccf7985
  439e62:	mov    ebx,0x4a22d36e
  439e67:	mov    edx,0x1160e89f
  439e6c:	out    dx,eax
  439e6d:	das    
  439e6e:	cmp    bl,BYTE PTR [ebp-0x7b86cecd]
  439e74:	imul   ebp,DWORD PTR [edi+0xe],0x653ea440
  439e7b:	leave  
  439e7c:	sub    al,0x43
  439e7e:	add    DWORD PTR [eax],esp
  439e80:	popf   
  439e81:	stos   DWORD PTR es:[edi],eax
  439e82:	push   eax
  439e83:	sub    DWORD PTR [ecx+0x50],ecx
  439e86:	mov    al,0x24
  439e88:	mov    DWORD PTR [ebp-0xf],esp
  439e8b:	scas   eax,DWORD PTR es:[edi]
  439e8c:	mov    edx,0x37eb7410
  439e91:	dec    ebx
  439e92:	and    eax,0xec695695
  439e97:	cwde   
  439e98:	xchg   edi,eax
  439e99:	jecxz  0x439e91
  439e9b:	and    ch,bl
  439e9d:	lods   al,BYTE PTR ds:[esi]
  439e9e:	mov    edi,0x4c50402c
  439ea3:	or     bh,bh
  439ea5:	mov    DWORD PTR fs:[edi],ebx
  439ea8:	(bad)  [edi+eiz*1+0x10]
  439eac:	fldcw  WORD PTR [edi-0x26]
  439eaf:	push   edx
  439eb0:	mov    dh,0xc0
  439eb2:	mov    bh,bh
  439eb4:	js     0x439e7b
  439eb6:	sub    BYTE PTR [edx-0x5330a4bd],0x8a
  439ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439ebe:	inc    esp
  439ebf:	mov    ecx,0x299f9c4c
  439ec4:	sar    cl,1
  439ec6:	iret   
  439ec7:	push   ss
  439ec8:	lea    ebx,[ebx]
  439eca:	jne    0x439eb8
  439ecc:	jecxz  0x439f46
  439ece:	push   0x1084d4e9
  439ed3:	dec    ecx
  439ed4:	out    0xfe,al
  439ed6:	pushf  
  439ed7:	or     DWORD PTR ds:0x9349f328,edx
  439edd:	xor    eax,0x6522c090
  439ee2:	fcomp  DWORD PTR [edi]
  439ee4:	loope  0x439f05
  439ee6:	test   BYTE PTR [ecx+0x315b92e4],ah
  439eec:	neg    BYTE PTR [esi-0x43]
  439eef:	pop    edx
  439ef0:	aad    0x8c
  439ef2:	jmp    0xcdbb5215
  439ef7:	jbe    0x439f74
  439ef9:	push   DWORD PTR [eax+0x61ee4799]
  439eff:	cdq    
  439f00:	(bad)  
  439f01:	cmp    DWORD PTR [esp+edx*8+0x49c419b6],0xa96b2592
  439f0c:	clc    
  439f0d:	or     eax,0x8e560196
  439f12:	jmp    eax
  439f14:	jge    0x439f32
  439f16:	adc    BYTE PTR [eax+ebp*2+0x20],bh
  439f1a:	cwde   
  439f1b:	inc    ecx
  439f1c:	xchg   ebp,eax
  439f1d:	dec    esi
  439f1e:	les    ecx,FWORD PTR [ebp-0x18]
  439f21:	mov    ebp,0xa481cb70
  439f26:	sub    eax,ebp
  439f28:	pop    es
  439f29:	shr    BYTE PTR [edi],0xe3
  439f2c:	retf   
  439f2d:	dec    ebx
  439f2e:	fldcw  WORD PTR [eax-0x5aa693f4]
  439f34:	es xchg esp,eax
  439f36:	outs   dx,BYTE PTR ds:[esi]
  439f37:	call   0x2d6fd023
  439f3c:	leave  
  439f3d:	rcl    DWORD PTR [edx],0xd5
  439f40:	or     DWORD PTR [eax],edx
  439f42:	fdivr  DWORD PTR [edx-0x63]
  439f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439f46:	mov    dl,0x4a
  439f48:	jbe    0x439f7a
  439f4a:	mov    esp,0xce57affc
  439f4f:	fcomp  DWORD PTR [eax+0x20f13554]
  439f55:	stos   BYTE PTR es:[edi],al
  439f56:	jns    0x439f26
  439f58:	mov    eax,DWORD PTR [eax-0x6f]
  439f5b:	push   es
  439f5c:	pop    DWORD PTR [esp+eax*2+0x0]
  439f60:	push   ebx
  439f61:	mov    ch,0x84
  439f63:	cmc    
  439f64:	mov    ds:0x88856809,eax
  439f69:	mov    ds:0xa78377d2,al
  439f6e:	mov    dl,BYTE PTR [eax]
  439f70:	mov    cl,0x39
  439f72:	dec    ebx
  439f73:	in     eax,0x66
  439f75:	or     al,0x53
  439f77:	addr16 xor al,0xf0
  439f7a:	jno    0x439fcd
  439f7c:	add    BYTE PTR [eax+0x22],0x5a
  439f80:	lea    ebx,[eax+0x75]
  439f83:	mov    ecx,0xe2c0254b
  439f88:	adc    eax,0x99357ce8
  439f8d:	cli    
  439f8e:	and    ebp,DWORD PTR [edi]
  439f90:	aas    
  439f91:	lea    ecx,[eax-0x60]
  439f94:	sbb    ch,BYTE PTR [ecx+0x6e]
  439f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439f98:	imul   ebp,ebx,0xe748f6dd
  439f9e:	mov    cl,0x4e
  439fa0:	mov    bl,0x36
  439fa2:	dec    edx
  439fa3:	mov    eax,ds:0x6ec36ca8
  439fa8:	cmp    eax,0xaec20322
  439fad:	mov    dh,0x90
  439faf:	pop    ss
  439fb0:	jmp    0x64e3:0x2089e0c
  439fb7:	mov    ah,0xc6
  439fb9:	mov    al,ds:0xa2aa5f2
  439fbe:	icebp  
  439fbf:	fcomp  QWORD PTR [edi+ebp*4-0x55]
  439fc3:	xor    bl,bl
  439fc5:	pop    es
  439fc6:	inc    edx
  439fc7:	lahf   
  439fc8:	pop    ss
  439fc9:	and    BYTE PTR [ebp+0x54],0x44
  439fcd:	mov    edx,0x79dd4256
  439fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439fd3:	aaa    
  439fd4:	mov    esp,0x418064b7
  439fd9:	jbe    0x439fe1
  439fdb:	enter  0xe230,0x1b
  439fdf:	mov    esi,DWORD PTR [edx+ecx*4+0x19]
  439fe3:	inc    esi
  439fe4:	in     al,dx
  439fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439fe6:	cmp    al,0xe0
  439fe8:	test   DWORD PTR [esi],ebx
  439fea:	jnp    0x439f88
  439fec:	mov    ebp,0x53ea0194
  439ff1:	retf   
  439ff2:	cmp    al,0x1e
  439ff4:	xor    BYTE PTR [ebx],ah
  439ff6:	mov    eax,0x520dcf66
  439ffb:	cs popf 
  439ffd:	and    esi,DWORD PTR [ebx-0x24]
  43a000:	jns    0x43a04b
  43a002:	loopne 0x43a00d
  43a004:	mov    bl,BYTE PTR [eax-0x47]
  43a007:	imul   eax,DWORD PTR [eax],0xffffff88
  43a00a:	je     0x43a07a
  43a00c:	inc    edi
  43a00d:	sub    eax,DWORD PTR [esi]
  43a00f:	xchg   ecx,eax
  43a010:	mov    al,ds:0x395302a8
  43a015:	push   edi
  43a016:	mov    ebp,0xcc0f604f
  43a01b:	push   ebx
  43a01c:	xchg   ebx,eax
  43a01d:	int    0xff
  43a01f:	in     eax,dx
  43a020:	js     0x439fb0
  43a022:	icebp  
  43a023:	lock outs dx,DWORD PTR ds:[esi]
  43a025:	inc    esi
  43a026:	jmp    0x140d:0x61ca6287
  43a02d:	inc    ebp
  43a02e:	or     ebx,eax
  43a030:	sbb    ebp,DWORD PTR [eax+0x38ed9116]
  43a036:	mov    ds:0xbf0513ab,eax
  43a03b:	jbe    0x43a06a
  43a03d:	xor    eax,0xfc1af2e0
  43a042:	adc    BYTE PTR [edi-0x19],ah
  43a045:	push   edx
  43a046:	(bad)  
  43a048:	jmp    0xf6b:0xe8792767
  43a04f:	fisubr DWORD PTR [eax]
  43a051:	mov    ds:0x8079d3ad,ax
  43a057:	inc    ebp
  43a058:	pop    eax
  43a059:	dec    esp
  43a05a:	stos   DWORD PTR es:[edi],eax
  43a05b:	(bad)  
  43a05c:	pop    ecx
  43a05d:	xchg   dl,ah
  43a05f:	xor    bh,BYTE PTR [edi+ecx*8]
  43a062:	jo     0x43a018
  43a064:	adc    DWORD PTR [esi],esi
  43a066:	fwait
  43a067:	js     0x43a012
  43a069:	fisttp DWORD PTR [ebx]
  43a06b:	sbb    bl,ah
  43a06d:	add    BYTE PTR [eax],0x1c
  43a070:	jnp    0x43a063
  43a072:	jmp    0x5ce1dd08
  43a077:	in     al,dx
  43a078:	mov    ch,0x42
  43a07a:	dec    eax
  43a07b:	stc    
  43a07c:	xchg   esp,eax
  43a07d:	pusha  
  43a07e:	adc    al,0xde
  43a080:	ret    0x7775
  43a083:	xor    ch,ah
  43a085:	and    al,BYTE PTR [edi+eax*4+0x39ca312b]
  43a08c:	inc    ecx
  43a08d:	jnp    0x43a0fb
  43a08f:	sub    al,0xff
  43a091:	and    esp,DWORD PTR [esi]
  43a093:	ret    
  43a094:	loopne 0x43a089
  43a096:	popa   
  43a097:	aam    0x50
  43a099:	aaa    
  43a09a:	cmp    al,0xba
  43a09c:	cmp    bh,dl
  43a09e:	in     eax,0x69
  43a0a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a0a1:	je     0x43a084
  43a0a3:	adc    DWORD PTR ds:0xf4adc207,edi
  43a0a9:	push   edi
  43a0aa:	cwde   
  43a0ab:	sub    al,BYTE PTR [esi+edi*2+0x42]
  43a0af:	add    ecx,ebp
  43a0b1:	push   0xe216bc33
  43a0b6:	push   0xffffffd5
  43a0b8:	(bad)  
  43a0b9:	cmp    al,0xa3
  43a0bb:	loop   0x43a121
  43a0bd:	push   esp
  43a0be:	(bad)  
  43a0bf:	jmp    0x43a07b
  43a0c1:	push   eax
  43a0c2:	cli    
  43a0c3:	pop    esp
  43a0c4:	xchg   edi,eax
  43a0c5:	mov    BYTE PTR [edi],bl
  43a0c7:	(bad)  
  43a0c8:	pushf  
  43a0c9:	mov    edi,0x2074b58c
  43a0ce:	lods   al,BYTE PTR ds:[esi]
  43a0cf:	jg     0x43a073
  43a0d1:	mov    ds:0xc127dc95,al
  43a0d6:	fnop   
  43a0d8:	sbb    BYTE PTR [ecx],0xf3
  43a0db:	pop    eax
  43a0dc:	(bad)  
  43a0dd:	sbb    BYTE PTR [ecx-0x47],dh
  43a0e0:	js     0x43a102
  43a0e2:	shl    BYTE PTR [esi+0x1c0bef4b],0x37
  43a0e9:	pushf  
  43a0ea:	inc    ebx
  43a0eb:	mov    cl,0xb4
  43a0ed:	mov    ebx,0x1072dd46
  43a0f2:	ror    BYTE PTR [eax-0x717b9335],0x63
  43a0f9:	jg     0x43a0be
  43a0fb:	in     al,0xc0
  43a0fd:	repz jb 0x43a166
  43a100:	shl    BYTE PTR ds:0xfe08e506,0xde
  43a107:	(bad)  
  43a109:	and    ebp,DWORD PTR ds:0x5b0584b
  43a10f:	adc    al,0xe7
  43a111:	xchg   edi,eax
  43a112:	xor    al,0x9
  43a114:	out    0xde,al
  43a116:	aam    0xaa
  43a118:	cld    
  43a119:	cmp    DWORD PTR [ebx+0x40],ebp
  43a11c:	fcmovnbe st,st(5)
  43a11e:	(bad)  
  43a121:	test   eax,0xc96e93
  43a126:	pop    ebp
  43a127:	pop    esi
  43a128:	sbb    al,0x22
  43a12a:	pop    ss
  43a12b:	pushf  
  43a12c:	fldenv [eax]
  43a12e:	dec    edi
  43a12f:	or     bh,BYTE PTR [ebp+0x40]
  43a132:	pop    es
  43a133:	dec    eax
  43a134:	pop    ss
  43a135:	push   ecx
  43a136:	mov    ds:0xe8a19f1b,al
  43a13b:	mov    dh,0x66
  43a13d:	sbb    al,0x69
  43a13f:	dec    eax
  43a140:	loopne 0x43a0e5
  43a142:	int3   
  43a143:	or     al,0xf3
  43a145:	sbb    eax,DWORD PTR [edi+0x57]
  43a148:	dec    edx
  43a149:	mov    al,0xb9
  43a14b:	pushf  
  43a14c:	xor    bh,al
  43a14e:	push   eax
  43a14f:	pop    ds
  43a150:	leave  
  43a151:	mov    dl,0xad
  43a153:	aaa    
  43a154:	xor    DWORD PTR [ebx+ecx*2+0x38],edx
  43a158:	lods   eax,DWORD PTR ds:[esi]
  43a159:	pop    ds
  43a15a:	cmp    ecx,edx
  43a15c:	pop    es
  43a15d:	mov    ebp,0x1bd655fc
  43a162:	cmp    eax,0x3b1ebd21
  43a167:	and    BYTE PTR [eax-0xd],cl
  43a16a:	popa   
  43a16b:	arpl   sp,dx
  43a16d:	mov    ch,BYTE PTR [edi+0x78]
  43a170:	inc    esp
  43a171:	adc    esp,esp
  43a173:	jge    0xcf2fefb6
  43a179:	push   0x86d5dbe6
  43a17e:	push   esp
  43a17f:	hlt    
  43a180:	cld    
  43a181:	(bad)  
  43a182:	mov    WORD PTR ds:0x7f795687,?
  43a188:	add    DWORD PTR [ecx],ebx
  43a18a:	les    esi,FWORD PTR [edx+esi*8]
  43a18d:	xchg   ecx,eax
  43a18e:	push   ebp
  43a18f:	imul   eax,DWORD PTR [eax+0x5a99c50f],0xf59e085
  43a199:	cmp    ebp,DWORD PTR [esi]
  43a19b:	mov    BYTE PTR [esp+edi*2],al
  43a19e:	sub    BYTE PTR [edi+0x65],0xf4
  43a1a2:	xchg   BYTE PTR [eax],al
  43a1a4:	adc    BYTE PTR [edi],dl
  43a1a6:	shl    DWORD PTR [edx+edi*8+0x1d06ad12],cl
  43a1ad:	cli    
  43a1ae:	dec    esp
  43a1af:	push   ebx
  43a1b0:	dec    esp
  43a1b1:	jae    0x43a1e7
  43a1b3:	or     BYTE PTR [esi],al
  43a1b5:	icebp  
  43a1b6:	pop    edi
  43a1b7:	cmp    al,0xac
  43a1b9:	jo     0x43a161
  43a1bb:	int3   
  43a1bc:	sub    al,0x31
  43a1be:	sub    edi,ebp
  43a1c0:	pop    edx
  43a1c1:	addr16 xchg esp,eax
  43a1c3:	scas   eax,DWORD PTR es:[edi]
  43a1c4:	jecxz  0x43a1ec
  43a1c6:	xchg   BYTE PTR [esi-0x65],bh
  43a1c9:	and    bl,BYTE PTR [ecx+0x415664b8]
  43a1cf:	(bad)  
  43a1d0:	xchg   edi,eax
  43a1d1:	rcr    BYTE PTR [esi+0x5859dcfe],1
  43a1d7:	mov    bh,0x1e
  43a1d9:	sbb    eax,0x845a5e83
  43a1de:	(bad)  
  43a1df:	in     al,dx
  43a1e0:	aam    0x9c
  43a1e2:	gs addr16 jmp 0x43a1ff
  43a1e6:	test   al,0xf1
  43a1e8:	jmp    0xdbecd40d
  43a1ed:	mov    bl,0x3c
  43a1ef:	int3   
  43a1f0:	lds    edx,FWORD PTR [edx]
  43a1f2:	iret   
  43a1f3:	dec    esi
  43a1f4:	cmc    
  43a1f5:	stc    
  43a1f6:	jl     0x43a219
  43a1f8:	lock jo 0x43a218
  43a1fb:	jb     0x43a1f5
  43a1fd:	add    al,0x45
  43a1ff:	(bad)
  43a203:	rcr    BYTE PTR [ebx+0x5e5deda6],1
  43a209:	mov    edi,0x74c7a5bc
  43a20e:	hlt    
  43a20f:	jge    0x43a27e
  43a211:	hlt    
  43a212:	xchg   edi,eax
  43a213:	loopne 0x43a25f
  43a215:	aaa    
  43a216:	dec    edi
  43a217:	push   cs
  43a218:	lock jmp FWORD PTR [ebx+edx*2-0x5f82fcfc]
  43a220:	lahf   
  43a221:	xchg   edi,eax
  43a222:	aam    0xf8
  43a224:	popf   
  43a225:	sub    BYTE PTR [ecx-0x39f2ca8b],ch
  43a22b:	test   al,0xea
  43a22d:	add    al,0xd0
  43a22f:	and    DWORD PTR [edi-0x21],0x6
  43a233:	or     eax,0xf41eec5d
  43a238:	jno    0x43a1c4
  43a23a:	shl    ch,0xc6
  43a23d:	fnstcw WORD PTR [ebx+0x479618d0]
  43a243:	jmp    0x793445f2
  43a248:	jb     0x43a286
  43a24a:	ds dec esi
  43a24c:	pop    ds
  43a24d:	cdq    
  43a24e:	cmc    
  43a24f:	loope  0x43a23c
  43a251:	scas   al,BYTE PTR es:[edi]
  43a252:	pusha  
  43a253:	loopne 0x43a219
  43a255:	dec    ebx
  43a256:	fwait
  43a257:	inc    edi
  43a258:	fidiv  WORD PTR [edi]
  43a25a:	pop    ebx
  43a25b:	or     BYTE PTR [ebx-0x35],al
  43a25e:	jns    0x43a27b
  43a260:	and    eax,0x2c970da6
  43a265:	jbe    0x43a1ff
  43a267:	fwait
  43a268:	loope  0x43a1ee
  43a26a:	inc    ebx
  43a26b:	retf   
  43a26c:	dec    edx
  43a26d:	push   eax
  43a26e:	das    
  43a26f:	dec    esp
  43a270:	or     DWORD PTR [ebx+eiz*2-0x1a],esi
  43a274:	inc    ebx
  43a275:	jo     0x43a2eb
  43a277:	nop
  43a278:	push   edi
  43a279:	(bad)  
  43a27a:	xor    eax,0x927084dc
  43a27f:	sbb    al,0x45
  43a281:	pop    ds
  43a282:	lods   al,BYTE PTR ds:[esi]
  43a284:	adc    BYTE PTR ds:[edi],ch
  43a287:	cmp    al,0x40
  43a289:	(bad)  
  43a28a:	rcl    DWORD PTR [eax+0x45],cl
  43a28d:	call   0x64d676bf
  43a292:	push   esp
  43a293:	std    
  43a294:	add    ebp,DWORD PTR [ecx-0x47]
  43a297:	add    ch,BYTE PTR [ebx]
  43a299:	enter  0x2a88,0x81
  43a29d:	mov    WORD PTR [ecx-0x3c69791d],?
  43a2a3:	lods   al,BYTE PTR ds:[esi]
  43a2a4:	or     al,0xc3
  43a2a6:	in     al,dx
  43a2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a2a8:	cmp    BYTE PTR [ecx],al
  43a2aa:	sub    BYTE PTR [eax],0x54
  43a2ad:	dec    edi
  43a2ae:	mov    dl,0xc7
  43a2b0:	fiadd  WORD PTR [eax]
  43a2b2:	cs dec esp
  43a2b4:	ins    BYTE PTR es:[edi],dx
  43a2b5:	js     0x43a2d5
  43a2b7:	(bad)  
  43a2b8:	shl    BYTE PTR [esi+eiz*4],1
  43a2bb:	sahf   
  43a2bc:	(bad)  [esp+ebx*4]
  43a2bf:	gs cmp edi,0x37
  43a2c3:	retf   0x5e88
  43a2c6:	push   esi
  43a2c7:	rcl    BYTE PTR [edx-0x7c],0x43
  43a2cb:	jnp    0x43a281
  43a2cd:	add    al,BYTE PTR [esi-0x31]
  43a2d0:	push   0x8be5fd69
  43a2d5:	mov    eax,0x8ce366eb
  43a2da:	pushf  
  43a2db:	jae    0x43a27f
  43a2dd:	fimul  WORD PTR [edx]
  43a2df:	loope  0x43a2dc
  43a2e1:	jnp    0x43a293
  43a2e3:	inc    esi
  43a2e4:	mov    esi,0xf4a7cbe7
  43a2e9:	mov    ecx,0x49c5d46f
  43a2ee:	(bad)  
  43a2ef:	push   ebx
  43a2f0:	xchg   DWORD PTR [edx+0x5c],ecx
  43a2f3:	xor    eax,edi
  43a2f5:	sub    al,0x3d
  43a2f7:	stos   DWORD PTR es:[edi],eax
  43a2f8:	cmp    eax,0x8d7df3d3
  43a2fd:	mov    al,ds:0x4ee87c61
  43a302:	pop    esi
  43a303:	lea    esi,[edx]
  43a305:	xor    ah,al
  43a307:	es mov cl,0xf9
  43a30a:	push   esi
  43a30b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a30c:	mov    edx,0x3be8ab31
  43a311:	sbb    eax,0x4b26ac03
  43a316:	dec    bh
  43a318:	or     al,0x59
  43a31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a31b:	xor    edx,0x60c8c21
  43a321:	xor    ch,dl
  43a323:	xor    BYTE PTR [eax-0x2c7d19d9],cl
  43a329:	and    bl,al
  43a32b:	ret    
  43a32c:	imul   esi,DWORD PTR [esi+0x2a],0xffffffc4
  43a330:	mov    bh,0xde
  43a332:	add    edi,esp
  43a334:	mov    eax,ds:0x1c7621e1
  43a339:	dec    ecx
  43a33a:	pop    ecx
  43a33c:	and    BYTE PTR [esi+0x7b218a86],dh
  43a342:	push   0x34453d1
  43a347:	imul   eax,DWORD PTR [ebx+0x76],0x39
  43a34b:	push   esp
  43a34c:	jmp    0x7b01:0x550cec8a
  43a353:	pop    esp
  43a354:	xchg   edx,eax
  43a355:	ret    
  43a356:	mov    ecx,0x448b9e10
  43a35b:	outs   dx,DWORD PTR ds:[esi]
  43a35c:	push   edi
  43a35d:	into   
  43a35e:	jnp    0x43a2f6
  43a360:	xor    al,0xdb
  43a362:	pop    ss
  43a363:	mov    edx,0xec7eee6
  43a368:	add    DWORD PTR [eax+0x3b],ebx
  43a36b:	pop    ecx
  43a36c:	(bad)  
  43a36d:	loopne 0x43a3cc
  43a36f:	bound  ecx,QWORD PTR [edx+edi*1+0x1148aa7c]
  43a376:	lock out dx,al
  43a378:	jecxz  0x43a35d
  43a37a:	xchg   DWORD PTR [esi+edx*4],esp
  43a37d:	mov    dl,0x17
  43a37f:	xchg   ebx,eax
  43a380:	test   BYTE PTR ss:[ebx-0x10],cl
  43a384:	dec    eax
  43a385:	and    al,0x23
  43a387:	xchg   ecx,eax
  43a388:	mov    esi,DWORD PTR [ebp-0x20]
  43a38b:	jmp    0xc340fc6
  43a390:	sbb    eax,0xdd1a9032
  43a395:	mov    al,ds:0xb6c0fc90
  43a39a:	fimul  DWORD PTR [ecx+edi*8]
  43a39d:	push   ss
  43a39e:	mov    ebp,0x3e61aa38
  43a3a3:	push   edi
  43a3a4:	addr16 clc 
  43a3a6:	mov    ah,al
  43a3a8:	pop    esp
  43a3a9:	mov    BYTE PTR [ebx+0x142bad13],bh
  43a3af:	pop    ebx
  43a3b0:	out    dx,al
  43a3b1:	and    BYTE PTR [eax],0x9a
  43a3b4:	sbb    al,0x78
  43a3b6:	and    DWORD PTR [eax-0x72],eax
  43a3b9:	jecxz  0x43a35f
  43a3bb:	rol    BYTE PTR [ebx+0x2a21126d],1
  43a3c1:	mov    ds:0xbcb1c8e5,al
  43a3c6:	pop    esp
  43a3c7:	xchg   esi,eax
  43a3c8:	jne    0x43a377
  43a3ca:	mov    DWORD PTR [ebx+0x351f9870],eax
  43a3d0:	cmp    al,0xc5
  43a3d2:	shl    BYTE PTR [edx],cl
  43a3d4:	xchg   sp,ax
  43a3d6:	adc    BYTE PTR [edi+0x492d9426],bh
  43a3dc:	sbb    al,0x44
  43a3de:	mov    eax,0xb24113c
  43a3e3:	lea    eax,[edi-0x5f2344d3]
  43a3e9:	or     DWORD PTR [esp+eax*1-0x691ddd95],esp
  43a3f0:	add    BYTE PTR [ecx+ecx*2-0x62d0f4bf],bh
  43a3f7:	data16 je 0x43a3a2
  43a3fa:	jl     0x43a43b
  43a3fc:	push   ebp
  43a3fd:	pop    edx
  43a3fe:	and    esp,edx
  43a400:	fs mov edi,0xda216ecc
  43a406:	jns    0x43a406
  43a408:	sub    eax,0xc6f0dd1c
  43a40d:	loopne 0x43a47c
  43a40f:	iret   
  43a410:	pop    eax
  43a411:	out    dx,al
  43a412:	dec    ebp
  43a413:	retf   0xf814
  43a416:	mov    cl,0x52
  43a418:	dec    edx
  43a419:	jne    0x43a39d
  43a41b:	(bad)  
  43a41c:	mov    eax,ds:0xdbc14bbc
  43a421:	out    dx,al
  43a422:	cmp    DWORD PTR ds:0x38e0b591,ebx
  43a428:	outs   dx,BYTE PTR ds:[esi]
  43a429:	mov    al,0x6b
  43a42b:	gs int3 
  43a42d:	stos   DWORD PTR es:[edi],eax
  43a42e:	inc    edi
  43a42f:	add    al,0xa1
  43a431:	iret   
  43a432:	mov    edi,DWORD PTR [eax-0x35c3196c]
  43a438:	sub    BYTE PTR [ecx+edx*4-0x379a1ba5],dl
  43a43f:	xor    al,0x23
  43a441:	dec    esp
  43a442:	in     eax,0x25
  43a444:	das    
  43a445:	out    dx,eax
  43a446:	lods   al,BYTE PTR ds:[esi]
  43a447:	adc    eax,0x9f4bc15
  43a44c:	jge    0x43a40c
  43a44e:	sub    DWORD PTR [eax+0x18d05f5f],edi
  43a454:	stos   DWORD PTR es:[edi],eax
  43a455:	and    DWORD PTR [ebx],0x344b0522
  43a45b:	inc    ecx
  43a45c:	cmp    al,0x1e
  43a45e:	das    
  43a45f:	dec    ebx
  43a460:	dec    eax
  43a461:	and    DWORD PTR ds:0x916079de,ebp
  43a467:	ret    0x4c72
  43a46a:	inc    ecx
  43a46b:	(bad)  
  43a46c:	ja     0x43a40c
  43a46e:	or     BYTE PTR [edx],bl
  43a470:	mov    fs,WORD PTR [edx-0x25ea3f8a]
  43a476:	aam    0x2c
  43a478:	or     eax,edi
  43a47a:	hlt    
  43a47b:	daa    
  43a47c:	xchg   ebx,eax
  43a47d:	in     al,0xe9
  43a47f:	scas   al,BYTE PTR es:[edi]
  43a480:	push   eax
  43a481:	lods   al,BYTE PTR ds:[esi]
  43a482:	aas    
  43a483:	dec    edi
  43a484:	and    BYTE PTR [edi],ah
  43a486:	and    eax,0x457430fb
  43a48b:	fld    QWORD PTR [edx-0x2bf641b6]
  43a491:	repnz cwde 
  43a493:	(bad)  
  43a494:	jl     0x43a41b
  43a496:	mov    al,ds:0xd9d85f79
  43a49b:	inc    eax
  43a49c:	or     al,0xe6
  43a49e:	xchg   edx,esi
  43a4a0:	pop    ecx
  43a4a1:	add    BYTE PTR ss:[eax],al
  43a4a4:	add    BYTE PTR [eax],al
  43a4a6:	add    BYTE PTR [eax],al
  43a4a8:	push   ds
  43a4a9:	sbb    BYTE PTR [ebx+0x86b48],dh
  43a4af:	add    BYTE PTR [eax],al
  43a4b1:	add    BYTE PTR [eax],al
  43a4b3:	add    BYTE PTR [ebx+0x8],ch
  43a4b6:	add    BYTE PTR [eax],al
  43a4b8:	dec    edi
  43a4b9:	add    BYTE PTR [esi],ah
  43a4bb:	jl     0x43a4bd
  43a4bd:	add    dh,BYTE PTR [esi]
  43a4bf:	or     BYTE PTR [eax],al
  43a4c1:	add    BYTE PTR [esi+0x44a10044],ch
  43a4c7:	mov    bh,0x4c
  43a4c9:	xor    ecx,eax
  43a4cb:	pop    esp
  43a4cc:	jmp    0x808fa6f5
  43a4d1:	inc    eax
  43a4d2:	lods   eax,DWORD PTR ds:[esi]
  43a4d3:	in     al,dx
  43a4d4:	xlat   BYTE PTR ds:[ebx]
  43a4d5:	inc    edx
  43a4d6:	dec    eax
  43a4d7:	call   0x368e0fa7
  43a4dc:	ss out 0xaf,eax
  43a4df:	ins    BYTE PTR es:[edi],dx
  43a4e0:	repz inc eax
  43a4e2:	fldenv [eax-0x2b]
  43a4e5:	mov    ds:0x489036fd,eax
  43a4ea:	pop    es
  43a4eb:	dec    ebx
  43a4ec:	adc    al,0x5
  43a4ee:	pop    edi
  43a4ef:	sbb    eax,0x30fe38ea
  43a4f4:	push   ebp
  43a4f5:	rcl    BYTE PTR [edi+0x5cbbd5e2],cl
  43a4fb:	push   0x70ff90ef
  43a500:	xor    esp,ecx
  43a502:	outs   dx,DWORD PTR ds:[esi]
  43a503:	or     al,0xb5
  43a506:	jno    0x43a4a7
  43a508:	mov    ebp,0xa49dc688
  43a50d:	sub    BYTE PTR [ebp-0x74f9b666],al
  43a513:	sbb    bl,BYTE PTR [esp+ecx*2+0x54]
  43a517:	mov    esi,0x6936e3d
  43a51c:	mov    esi,0xe9a470f2
  43a521:	mov    eax,ds:0x7a5b2d6b
  43a526:	enter  0x6e94,0x12
  43a52a:	sub    ah,BYTE PTR [esi*2-0x47bee711]
  43a531:	sub    ch,BYTE PTR [ebp-0x39dc2fbe]
  43a537:	fmul   DWORD PTR [esp+ebx*8-0x724b7f91]
  43a53e:	cld    
  43a53f:	mov    ebx,0xf1842ba6
  43a544:	in     eax,dx
  43a545:	dec    edi
  43a546:	jns    0x43a56f
  43a548:	xor    cl,cl
  43a54a:	mov    gs,WORD PTR [eax+0x58f4ef3a]
  43a550:	mov    ch,0x97
  43a552:	stos   BYTE PTR es:[edi],al
  43a553:	mov    ds:0x310db9cc,eax
  43a558:	cmp    DWORD PTR [esi-0x22],0xfffffffc
  43a55c:	in     eax,dx
  43a55d:	lock (bad) 
  43a55f:	push   0xffffffda
  43a561:	cdq    
  43a562:	jbe    0x43a5c5
  43a564:	adc    BYTE PTR [edi],ah
  43a566:	adc    al,0x9b
  43a568:	fmul   st(5),st
  43a56a:	cmp    DWORD PTR [ecx],edx
  43a56c:	and    BYTE PTR [edx+0x55],bl
  43a56f:	mov    esp,0xa62a0f33
  43a574:	xor    DWORD PTR [eax+0x45e0974c],ebx
  43a57a:	mov    BYTE PTR [edx],ah
  43a57c:	or     ebx,DWORD PTR [eax+0x42d731d]
  43a582:	rcl    edi,1
  43a584:	call   0xe705dc1f
  43a589:	mov    ecx,0x6b71f528
  43a58e:	cwde   
  43a58f:	scas   al,BYTE PTR es:[edi]
  43a590:	and    eax,0x35d0875f
  43a595:	cmp    ecx,ebx
  43a597:	lods   al,BYTE PTR ds:[esi]
  43a598:	and    WORD PTR [edi],di
  43a59b:	pop    ebp
  43a59c:	hlt    
  43a59d:	sub    ebp,DWORD PTR [ebp-0x7]
  43a5a0:	dec    ecx
  43a5a1:	pop    ss
  43a5a2:	sbb    eax,0x80185583
  43a5a7:	inc    eax
  43a5a8:	jmp    0x864f2284
  43a5ad:	mov    bl,0x3c
  43a5af:	push   DWORD PTR [edx+0x3ed01a0c]
  43a5b5:	xchg   esi,eax
  43a5b6:	xor    BYTE PTR [eax-0x47],ah
  43a5b9:	push   esp
  43a5ba:	retf   
  43a5bb:	in     eax,dx
  43a5bc:	test   BYTE PTR [edi-0x11],dh
  43a5bf:	or     BYTE PTR [bx+si],bh
  43a5c2:	adc    DWORD PTR [ecx],edx
  43a5c4:	rcl    BYTE PTR [edx+ecx*2+0x102c6ec8],cl
  43a5cb:	bound  ebx,QWORD PTR [ebx+0x62]
  43a5ce:	aaa    
  43a5cf:	repz ret 
  43a5d1:	mov    edx,0x66001d50
  43a5d6:	push   0x57858cb1
  43a5db:	je     0x43a5dd
  43a5dd:	cld    
  43a5de:	js     0x43a5bf
  43a5e0:	inc    edi
  43a5e1:	jle    0x43a5d9
  43a5e3:	cli    
  43a5e4:	sbb    al,0x88
  43a5e6:	lock xchg BYTE PTR [edx+0x1f],dh
  43a5ea:	cmp    cl,BYTE PTR [esp+esi*2]
  43a5ed:	inc    eax
  43a5ee:	xor    esi,esi
  43a5f0:	in     al,0xa0
  43a5f2:	lea    esp,[ebp+0x55645723]
  43a5f8:	adc    DWORD PTR [ebx-0x6248297d],esi
  43a5fe:	mov    dh,0x88
  43a600:	jle    0x43a5a3
  43a602:	inc    eax
  43a603:	mov    edi,esi
  43a605:	sub    ebx,DWORD PTR [ebp+0x16]
  43a608:	lods   al,BYTE PTR ds:[esi]
  43a609:	xlat   BYTE PTR ds:[ebx]
  43a60a:	ret    
  43a60b:	pusha  
  43a60c:	sub    dl,0xf5
  43a60f:	add    esi,edx
  43a611:	push   esp
  43a612:	sub    esp,ebx
  43a614:	test   eax,0x98bc1989
  43a619:	mov    ds:0x54278078,al
  43a61e:	into   
  43a61f:	mov    al,ds:0x9c6be555
  43a624:	test   BYTE PTR [esi+0x41],cl
  43a627:	sbb    al,0x1e
  43a629:	scas   eax,DWORD PTR es:[edi]
  43a62a:	add    BYTE PTR [eax+eax*8-0x7b7e18c6],bh
  43a631:	cmp    eax,0xe4b52f64
  43a636:	loopne 0x43a617
  43a638:	adc    al,0x4d
  43a63a:	arpl   WORD PTR [esi],di
  43a63c:	jl     0x43a60e
  43a63e:	mov    WORD PTR [edi+0x4],ds
  43a641:	out    dx,al
  43a642:	adc    al,0x20
  43a644:	and    al,0x99
  43a646:	sbb    eax,0x4263eb0
  43a64b:	(bad)  
  43a64c:	jb     0x43a623
  43a64e:	loop   0x43a62b
  43a650:	aam    0x1f
  43a652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a653:	mov    ch,0x2f
  43a655:	jecxz  0x43a61c
  43a657:	mov    ah,0x3
  43a659:	clc    
  43a65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a65b:	cmp    BYTE PTR [edi-0x11],ch
  43a65e:	outs   dx,DWORD PTR ds:[esi]
  43a65f:	push   cs
  43a660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a661:	outs   dx,BYTE PTR ds:[esi]
  43a662:	mov    al,ds:0x5132c7bd
  43a667:	push   eax
  43a668:	add    bl,cl
  43a66a:	cmp    eax,esp
  43a66c:	inc    ecx
  43a66d:	lock loope 0x43a64f
  43a670:	stos   DWORD PTR es:[edi],eax
  43a671:	popf   
  43a672:	mov    esi,0xfafe87c
  43a677:	in     eax,dx
  43a678:	xchg   DWORD PTR [edi],esi
  43a67a:	push   esi
  43a67b:	inc    ebp
  43a67c:	fisttp WORD PTR [ecx+edi*4]
  43a67f:	(bad)  
  43a681:	dec    bx
  43a683:	adc    al,BYTE PTR [esi]
  43a685:	(bad)  
  43a686:	xor    BYTE PTR [eax+eax*1],dl
  43a689:	cmp    eax,0x2dbd55a4
  43a68e:	inc    ecx
  43a68f:	fdivr  DWORD PTR [edx-0x71]
  43a692:	ins    BYTE PTR es:[edi],dx
  43a693:	or     al,0x9f
  43a695:	sbb    dl,BYTE PTR ds:0x5d3afcb7
  43a69b:	loop   0x43a6fd
  43a69d:	stos   BYTE PTR es:[edi],al
  43a69e:	int    0xe9
  43a6a0:	aad    0x20
  43a6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a6a3:	and    bh,cl
  43a6a5:	cmp    eax,0x9f6f42d3
  43a6aa:	inc    esp
  43a6ab:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  43a6ad:	adc    BYTE PTR ds:0x9e176fad,0xec
  43a6b4:	dec    esi
  43a6b5:	shr    dh,0x0
  43a6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a6b9:	lds    ebp,FWORD PTR [ebx]
  43a6bb:	or     edx,DWORD PTR [eax]
  43a6bd:	sbb    BYTE PTR [ecx+0x19],0x29
  43a6c1:	and    esi,esp
  43a6c3:	jae    0x43a6fe
  43a6c5:	xor    al,0xad
  43a6c7:	fwait
  43a6c8:	aam    0x34
  43a6ca:	fcmovb st,st(7)
  43a6cc:	hlt    
  43a6cd:	inc    esp
  43a6ce:	pop    eax
  43a6cf:	rcl    esi,0x51
  43a6d2:	xchg   ebp,eax
  43a6d3:	push   cs
  43a6d4:	cmp    ebx,ebp
  43a6d6:	sub    eax,0xf90f27c
  43a6db:	cdq    
  43a6dc:	(bad)  
  43a6dd:	jb     0x43a667
  43a6df:	xor    al,0x24
  43a6e1:	xchg   ebx,eax
  43a6e2:	mov    al,ds:0xd8142a92
  43a6e7:	or     bh,BYTE PTR [eax-0x13f355b8]
  43a6ed:	inc    ebp
  43a6ee:	xchg   edx,eax
  43a6ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a6f0:	inc    edi
  43a6f1:	and    eax,0x567d566c
  43a6f6:	jns    0x43a71f
  43a6f8:	or     eax,0xb905eff
  43a6fd:	push   esi
  43a6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a6ff:	and    BYTE PTR ds:0xb44e3474,dh
  43a705:	out    dx,al
  43a706:	inc    esp
  43a707:	stos   BYTE PTR es:[edi],al
  43a708:	add    BYTE PTR [ecx+0x5c816c07],0x79
  43a70f:	mov    ecx,0x80798d69
  43a714:	call   0x2e372809
  43a719:	mov    edx,0xeb3a0460
  43a71e:	and    BYTE PTR [edi+ecx*4-0xfca2945],ah
  43a725:	cdq    
  43a726:	daa    
  43a727:	out    dx,eax
  43a728:	enter  0xad45,0x18
  43a72c:	mov    esp,0x1ff66350
  43a731:	jo     0x43a6dd
  43a733:	xor    bh,ch
  43a735:	imul   ebp,DWORD PTR [edi],0x60
  43a738:	inc    esi
  43a739:	inc    esi
  43a73a:	xchg   esp,eax
  43a73b:	xor    bh,ah
  43a73d:	inc    ecx
  43a73e:	pop    esi
  43a73f:	repnz xchg edx,eax
  43a741:	jbe    0x43a760
  43a743:	mov    eax,0x42503efa
  43a748:	xchg   edx,eax
  43a749:	aas    
  43a74a:	sbb    bl,BYTE PTR [eax]
  43a74c:	fsubr  st(2),st
  43a74e:	aas    
  43a74f:	das    
  43a750:	sbb    eax,0xd833ea99
  43a755:	add    BYTE PTR [esi+0x59],dl
  43a758:	shl    DWORD PTR [esi+0x4438cfd8],cl
  43a75e:	test   al,0x68
  43a760:	jg     0x43a7cc
  43a762:	xchg   ebp,eax
  43a763:	mov    ebp,0xccc1595a
  43a768:	xor    bl,BYTE PTR [ebp-0x36]
  43a76b:	lea    eax,gs:[ecx-0x1d]
  43a76f:	lock shl DWORD PTR ds:[ecx],0xdb
  43a774:	ss leave 
  43a776:	cmp    cl,bl
  43a778:	fst    QWORD PTR [eax+edi*1]
  43a77b:	cdq    
  43a77c:	inc    edx
  43a77d:	sti    
  43a77e:	lock dec edi
  43a780:	add    DWORD PTR [eax],ecx
  43a782:	mov    esp,0x5274caae
  43a787:	jl     0x43a7e9
  43a789:	jnp    0x43a763
  43a78b:	loopne 0x43a7df
  43a78d:	add    esi,ecx
  43a78f:	nop
  43a790:	ins    BYTE PTR es:[edi],dx
  43a791:	loop   0x43a7f2
  43a793:	push   ebx
  43a794:	add    al,0xd9
  43a796:	add    dl,BYTE PTR [ebp-0x10f80c9f]
  43a79c:	and    eax,0x71720c28
  43a7a1:	add    esp,DWORD PTR [ecx]
  43a7a3:	lods   al,BYTE PTR ds:[esi]
  43a7a4:	inc    eax
  43a7a5:	lds    ecx,FWORD PTR [ebp+esi*8+0x54]
  43a7a9:	jmp    0xf495:0x5d0f1e1f
  43a7b0:	push   edi
  43a7b1:	ret    
  43a7b2:	jp     0x43a7d8
  43a7b4:	ret    0x1797
  43a7b7:	dec    edi
  43a7b8:	sbb    BYTE PTR [edx],bh
  43a7ba:	lds    edi,FWORD PTR [ecx-0xa04a609]
  43a7c0:	call   0xa7e6:0xe69da53c
  43a7c7:	ror    BYTE PTR [ebp-0x5e889f61],cl
  43a7cd:	repz lahf 
  43a7cf:	outs   dx,DWORD PTR ds:[esi]
  43a7d0:	int3   
  43a7d1:	push   es
  43a7d2:	sub    al,0x84
  43a7d4:	inc    edx
  43a7d5:	dec    esp
  43a7d6:	jbe    0x43a844
  43a7d8:	or     BYTE PTR [ecx+0x5c],bh
  43a7db:	pop    edx
  43a7dc:	sub    al,0x99
  43a7de:	push   eax
  43a7df:	arpl   WORD PTR [eax+0x6646b678],di
  43a7e5:	push   eax
  43a7e6:	mov    DWORD PTR [ecx-0x7a],ecx
  43a7e9:	mov    edi,0xe6634c5d
  43a7ee:	je     0x43a7c6
  43a7f0:	jmp    0x5fc3215b
  43a7f5:	idiv   dh
  43a7f7:	cwde   
  43a7f8:	test   al,0x4b
  43a7fa:	shl    edi,1
  43a7fc:	or     BYTE PTR cs:[esp+eax*4+0x40],bl
  43a801:	add    eax,0x7d675700
  43a806:	fcomp  QWORD PTR [ecx-0x24669bf9]
  43a80c:	sbb    BYTE PTR [ecx-0x7710f32a],ch
  43a812:	mov    BYTE PTR [edi+0x66],cl
  43a815:	mov    ds:0x44d4cbac,al
  43a81a:	sahf   
  43a81b:	lods   al,BYTE PTR ds:[esi]
  43a81c:	cmc    
  43a81d:	push   eax
  43a81e:	dec    ebp
  43a81f:	pop    ds
  43a820:	sub    DWORD PTR [esi+0x40],edx
  43a823:	pop    es
  43a824:	rol    BYTE PTR [ebx],1
  43a826:	into   
  43a827:	fisub  WORD PTR [esi]
  43a829:	test   DWORD PTR [eax+ebp*2+0x6e],eax
  43a82d:	js     0x43a8a3
  43a82f:	push   0x618b3598
  43a834:	add    al,0xc
  43a836:	pushf  
  43a837:	xor    bl,bh
  43a839:	xchg   edx,eax
  43a83a:	imul   DWORD PTR [esp+eiz*4-0x6b]
  43a83e:	(bad)  
  43a83f:	rcr    BYTE PTR [edi+0x52],0xd2
  43a843:	jmp    0xa1e4:0xa75dc883
  43a84a:	(bad)  
  43a84b:	inc    BYTE PTR [esi+0x25]
  43a84e:	test   eax,0x868cc7de
  43a853:	ss fs aaa 
  43a856:	bound  edi,QWORD PTR [ecx]
  43a858:	test   eax,0x784ab079
  43a85d:	mov    esp,0x1f0eeec0
  43a862:	mov    ah,0xd4
  43a864:	or     BYTE PTR [ecx+0x6c],bh
  43a867:	out    0x62,eax
  43a869:	hlt    
  43a86a:	mov    ebx,es
  43a86c:	clc    
  43a86d:	jecxz  0x43a8de
  43a86f:	cmp    edx,edx
  43a871:	rsqrtps xmm5,XMMWORD PTR [edx+eax*1]
  43a875:	sbb    al,0x68
  43a877:	sbb    ecx,DWORD PTR [ebp+0x5f]
  43a87a:	lahf   
  43a87b:	stos   DWORD PTR es:[edi],eax
  43a87c:	jmp    DWORD PTR [esi]
  43a87e:	les    ebp,FWORD PTR [edi-0x16]
  43a881:	stc    
  43a882:	add    dh,BYTE PTR [ebx-0x5]
  43a885:	shl    DWORD PTR [eax+ebp*8-0x3086dcb3],0x0
  43a88d:	mov    BYTE PTR [ebx-0x24],0xc
  43a891:	cdq    
  43a892:	sub    eax,0xfbc8554f
  43a897:	push   0x2c
  43a899:	xor    BYTE PTR [eax+edi*1+0x3c],dh
  43a89d:	inc    eax
  43a89e:	les    ebp,FWORD PTR [esi]
  43a8a0:	or     al,0x50
  43a8a2:	retf   0x203c
  43a8a5:	in     al,0x58
  43a8a7:	test   BYTE PTR [eax],dh
  43a8a9:	hlt    
  43a8aa:	xchg   ecx,eax
  43a8ab:	mov    esp,0x66580800
  43a8b0:	rcl    BYTE PTR [edi],1
  43a8b2:	fcomp  DWORD PTR [eax+eiz*4]
  43a8b5:	dec    edi
  43a8b6:	push   0x18e4dc2c
  43a8bb:	cld    
  43a8bc:	inc    edx
  43a8bd:	test   BYTE PTR [ecx+0x49],al
  43a8c0:	nop
  43a8c1:	pop    ebp
  43a8c2:	call   0xb06e:0x6264a056
  43a8c9:	je     0x43a933
  43a8cb:	mov    esp,0x100f4004
  43a8d0:	adc    al,0x82
  43a8d2:	sbb    eax,0xec4d25e0
  43a8d7:	xor    BYTE PTR [edx+edi*1+0x4e80443c],dh
  43a8de:	inc    edi
  43a8df:	xchg   ecx,eax
  43a8e0:	push   esi
  43a8e1:	inc    ecx
  43a8e2:	pop    esp
  43a8e3:	imul   esp,DWORD PTR [ebp+0x74303f67],0x844065d8
  43a8ed:	call   0x99cffcca
  43a8f2:	pushf  
  43a8f3:	or     BYTE PTR [edx],0x4
  43a8f6:	xor    bl,ah
  43a8f8:	mov    al,ds:0x8506ca13
  43a8fd:	sub    DWORD PTR [edi+0x24cd7b54],edi
  43a903:	push   ebx
  43a904:	sbb    DWORD PTR [ebx+0x4b],eax
  43a907:	cmp    DWORD PTR [eax-0x70],edi
  43a90a:	dec    edi
  43a90b:	jg     0x43a955
  43a90d:	cmp    DWORD PTR [edi+ecx*2],ebp
  43a910:	adc    DWORD PTR [ecx+eiz*1+0x59197301],ebx
  43a917:	mov    WORD PTR ds:0x9337c0f4,cs
  43a91d:	push   cs
  43a91e:	add    ah,BYTE PTR [ecx+0x45]
  43a921:	mov    al,0x61
  43a923:	push   0x896581da
  43a928:	and    eax,0x8c91cb1b
  43a92d:	aas    
  43a92e:	xor    BYTE PTR [edx],bl
  43a930:	mov    ds:0xc129bc32,eax
  43a935:	mov    al,0x6e
  43a937:	ins    DWORD PTR es:[edi],dx
  43a938:	loop   0x43a916
  43a93a:	outs   dx,DWORD PTR ds:[esi]
  43a93b:	mov    cl,dh
  43a93d:	rcl    esp,cl
  43a93f:	jnp    0x43a985
  43a941:	dec    edx
  43a942:	jecxz  0x43a974
  43a944:	push   edx
  43a945:	lahf   
  43a946:	test   al,bh
  43a948:	lds    eax,FWORD PTR [ebp+0x18820fd3]
  43a94e:	sub    bh,BYTE PTR [eax-0x60]
  43a951:	jmp    0x85a:0x90812916
  43a958:	aas    
  43a959:	les    ebx,FWORD PTR ds:0x8dd8ad0f
  43a95f:	mov    bl,0x69
  43a961:	lahf   
  43a962:	call   0x46ed2d85
  43a967:	mov    ?,WORD PTR [ecx+0x2b0c1e92]
  43a96d:	jmp    0x77be:0x9da0c2a9
  43a974:	mov    ah,0x9d
  43a976:	sbb    eax,esi
  43a978:	sbb    BYTE PTR [ebx+0x58],dl
  43a97b:	idiv   BYTE PTR [ebp+0x159413d8]
  43a981:	jae    0x43a9b0
  43a983:	and    bh,BYTE PTR [esi-0x3a6103f7]
  43a989:	popa   
  43a98a:	xchg   edi,eax
  43a98b:	hlt    
  43a98c:	idiv   DWORD PTR ds:0xae1c2053
  43a992:	imul   ecx,DWORD PTR [esi-0x33167225],0x44
  43a999:	ret    
  43a99a:	push   ss
  43a99b:	dec    ecx
  43a99c:	sbb    ebx,edx
  43a99e:	test   DWORD PTR [eax+0x44],edi
  43a9a1:	in     al,dx
  43a9a2:	xchg   DWORD PTR [eax],edi
  43a9a4:	pop    ecx
  43a9a5:	lock and al,0x71
  43a9a8:	or     ah,BYTE PTR [edi]
  43a9aa:	adc    BYTE PTR [ebp+0x77],cl
  43a9ad:	xor    cl,cl
  43a9af:	or     DWORD PTR [ebx+0x563496c8],ebp
  43a9b5:	xchg   esi,eax
  43a9b6:	les    esi,FWORD PTR [eax]
  43a9b8:	add    bl,BYTE PTR [eax-0x1ea7ea55]
  43a9be:	mov    esp,0xc530d8cd
  43a9c3:	daa    
  43a9c4:	in     eax,dx
  43a9c5:	add    BYTE PTR [edi+0x62e984d2],al
  43a9cb:	mov    bl,0xc3
  43a9cd:	inc    esi
  43a9ce:	and    al,0xc6
  43a9d0:	jle    0x43aa33
  43a9d2:	or     ah,BYTE PTR [eax+0x48f0722c]
  43a9d8:	popa   
  43a9d9:	cmp    eax,0x5ff46992
  43a9de:	inc    ebp
  43a9df:	xchg   ebx,eax
  43a9e0:	ins    BYTE PTR es:[edi],dx
  43a9e1:	call   0x30c309a2
  43a9e6:	pusha  
  43a9e7:	xchg   BYTE PTR [ebx-0x70],ah
  43a9ea:	sub    bl,BYTE PTR [edi-0x1d]
  43a9ed:	jge    0x43a986
  43a9ef:	out    dx,al
  43a9f0:	mov    edi,0xb301389c
  43a9f5:	dec    edi
  43a9f6:	test   al,0x8a
  43a9f8:	jne    0x43a9ed
  43a9fa:	push   edx
  43a9fb:	pop    esp
  43a9fc:	repz and edi,ecx
  43a9ff:	retf   
  43aa00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aa01:	sbb    edi,edx
  43aa03:	jg     0x43a985
  43aa05:	fs (bad) 
  43aa08:	pop    edx
  43aa09:	xchg   edx,eax
  43aa0a:	call   0xa2e85901
  43aa0f:	retf   
  43aa10:	cdq    
  43aa11:	popf   
  43aa12:	lods   al,BYTE PTR ds:[esi]
  43aa13:	inc    eax
  43aa14:	out    dx,eax
  43aa15:	push   ss
  43aa16:	dec    esp
  43aa17:	push   ss
  43aa18:	rcl    DWORD PTR [edx-0x15],1
  43aa1b:	inc    edi
  43aa1c:	inc    edx
  43aa1d:	mov    eax,ds:0x4028704a
  43aa22:	pop    ebp
  43aa23:	fwait
  43aa24:	stos   BYTE PTR es:[edi],al
  43aa25:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  43aa27:	push   esp
  43aa28:	xchg   esp,eax
  43aa29:	ret    0xcd60
  43aa2c:	mov    ch,ah
  43aa2e:	jae    0x43aa33
  43aa30:	and    DWORD PTR [eax-0xf362cdf],edi
  43aa36:	lahf   
  43aa37:	push   cs
  43aa38:	mov    bh,0x77
  43aa3a:	fsubr  QWORD PTR [ebx-0x50]
  43aa3d:	fwait
  43aa3e:	out    0x95,al
  43aa40:	ror    dh,1
  43aa42:	test   DWORD PTR [esp+esi*4-0x110165c9],0xa8490e7a
  43aa4d:	jmp    0x43a9ed
  43aa4f:	jge    0x43aacb
  43aa51:	cmp    eax,0xcc4af1fb
  43aa56:	les    edx,FWORD PTR [ecx-0xc]
  43aa59:	scas   al,BYTE PTR es:[edi]
  43aa5a:	jb     0x43a9dc
  43aa5c:	jmp    0x43aa7b
  43aa5e:	lock mov eax,0xa6bf1459
  43aa64:	or     DWORD PTR [edx+edx*2],edi
  43aa67:	adc    al,0xa4
  43aa69:	jmp    0x43aa2d
  43aa6b:	mov    dl,0x4
  43aa6d:	and    DWORD PTR [ebx],esp
  43aa6f:	inc    eax
  43aa70:	mov    esp,0x8743b410
  43aa75:	adc    ah,ah
  43aa77:	data16 mov al,ah
  43aa7a:	loop   0x43aac7
  43aa7c:	mov    ebp,0xaee0339c
  43aa81:	out    dx,eax
  43aa82:	add    al,0xde
  43aa84:	adc    eax,0xcc986f8
  43aa89:	mov    DWORD PTR [ecx+0x28],eax
  43aa8c:	jns    0x43aaa2
  43aa8e:	xor    ah,BYTE PTR [ecx-0x42179516]
  43aa94:	rol    BYTE PTR [ebx+0x10eee95d],1
  43aa9a:	push   eax
  43aa9b:	cmp    eax,0x8ccaf44b
  43aaa0:	mov    al,ds:0xc0c4186e
  43aaa5:	(bad)  
  43aaa6:	sbb    BYTE PTR [esi+esi*1+0x63358ce5],ah
  43aaad:	lahf   
  43aaae:	jns    0x43aaec
  43aab0:	adc    DWORD PTR [esp+0x7b],ecx
  43aab4:	dec    esi
  43aab5:	int    0xb3
  43aab7:	shl    BYTE PTR [eax-0x45],cl
  43aaba:	and    al,0x1b
  43aabc:	mov    esp,0x9f4854df
  43aac1:	or     ch,ch
  43aac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aac4:	test   al,0xa8
  43aac6:	sub    BYTE PTR [ebx+0x7e],al
  43aac9:	loope  0x43aaf7
  43aacb:	cmc    
  43aacc:	xchg   DWORD PTR [eax+eiz*1],esi
  43aacf:	jns    0x43aa60
  43aad1:	ret    0x500d
  43aad4:	mov    bh,0x12
  43aad6:	idiv   BYTE PTR [eax+0x138f1b2a]
  43aadc:	je     0x43aaed
  43aade:	xor    ecx,DWORD PTR [edx+0x18]
  43aae1:	shr    DWORD PTR [edi],cl
  43aae3:	sub    BYTE PTR [esi],ah
  43aae5:	sbb    al,0xf6
  43aae7:	xlat   BYTE PTR ds:[ebx]
  43aae8:	inc    edi
  43aae9:	add    bl,BYTE PTR [eax-0x38]
  43aaec:	mov    dl,bl
  43aaee:	inc    eax
  43aaef:	sbb    DWORD PTR [esi+0x3820dfce],esp
  43aaf5:	jae    0x43ab6e
  43aaf7:	sub    eax,DWORD PTR fs:[ebx]
  43aafa:	adc    edx,ecx
  43aafc:	add    BYTE PTR [esi],cl
  43aafe:	sub    esi,DWORD PTR [eax+ecx*4+0x2d]
  43ab02:	test   ah,ch
  43ab04:	push   eax
  43ab05:	sbb    BYTE PTR [ebp+ebx*4-0x34],cl
  43ab09:	lods   al,BYTE PTR ds:[esi]
  43ab0a:	stos   BYTE PTR es:[edi],al
  43ab0b:	mov    esp,0x60c87bba
  43ab10:	push   edx
  43ab11:	xor    edx,DWORD PTR [ebx+edi*2-0x5a]
  43ab15:	lahf   
  43ab16:	(bad)  
  43ab18:	test   ebp,ecx
  43ab1a:	idiv   BYTE PTR [eax-0x5e]
  43ab1d:	imul   ebp,eax,0xffffffd8
  43ab20:	sub    BYTE PTR [ebp+0x129c5eed],al
  43ab26:	push   ebx
  43ab27:	or     edx,DWORD PTR [ebp+0xe]
  43ab2a:	lahf   
  43ab2b:	jmp    0x43aafb
  43ab2d:	shl    BYTE PTR [edi],0x3a
  43ab30:	mov    ah,0xa1
  43ab32:	adc    al,BYTE PTR [ebp+edi*4-0x3a]
  43ab36:	in     al,0x2
  43ab38:	mov    esi,0x87b65f4a
  43ab3d:	inc    esi
  43ab3e:	dec    eax
  43ab3f:	mov    WORD PTR [ecx+0x711a2053],?
  43ab45:	mov    edx,0x79b04c43
  43ab4a:	outs   dx,BYTE PTR ds:[esi]
  43ab4b:	rcr    DWORD PTR [edx],0x2e
  43ab4e:	mov    al,0x1d
  43ab50:	mov    esi,0xafa336d4
  43ab55:	cdq    
  43ab56:	sbb    eax,0xf8e39f56
  43ab5b:	mov    gs,WORD PTR [edx-0x49f5079d]
  43ab61:	add    BYTE PTR [eax+eiz*4+0x6],dl
  43ab65:	ins    DWORD PTR es:[edi],dx
  43ab66:	rcl    ebx,1
  43ab68:	mov    esi,0xc439b116
  43ab6d:	jbe    0x43ab37
  43ab6f:	dec    eax
  43ab70:	jmp    0x43ab3b
  43ab72:	(bad)  
  43ab73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ab74:	clc    
  43ab75:	call   0x8a437179
  43ab7a:	out    0x84,eax
  43ab7c:	jns    0x43ab8a
  43ab7e:	or     al,0x33
  43ab80:	loope  0x43abf1
  43ab82:	(bad)  
  43ab83:	or     BYTE PTR [edi+0x7430eb0c],dh
  43ab89:	inc    ebx
  43ab8a:	imul   ecx,DWORD PTR [esi],0xfffffffa
  43ab8d:	jo     0x43abfd
  43ab8f:	sbb    eax,0x5aeac9d8
  43ab94:	jbe    0x43ab66
  43ab96:	mov    esp,0x9cfce8f9
  43ab9b:	shr    BYTE PTR [edi+0x11],0x53
  43ab9f:	mov    ds:0xef20225a,al
  43aba4:	xchg   esi,eax
  43aba5:	clc    
  43aba6:	cmc    
  43aba7:	js     0x43abbb
  43aba9:	inc    edx
  43abaa:	and    eax,0x79d0b444
  43abaf:	sub    eax,DWORD PTR [ecx]
  43abb1:	mov    al,0x9a
  43abb3:	mov    dl,0xec
  43abb5:	retf   0x975f
  43abb8:	aaa    
  43abb9:	pop    edi
  43abba:	adc    edx,DWORD PTR [eax+0x4b]
  43abbd:	rcr    BYTE PTR [esi-0x6c],1
  43abc0:	add    eax,0xccf04864
  43abc5:	ins    BYTE PTR es:[edi],dx
  43abc6:	xor    eax,0x2060a238
  43abcb:	adc    eax,0x5a350cb1
  43abd0:	mov    eax,ds:0x8c57343c
  43abd5:	sub    al,0x7d
  43abd7:	sbb    BYTE PTR [eax+edx*8-0x3c],bh
  43abdb:	outs   dx,DWORD PTR ds:[esi]
  43abdc:	ror    BYTE PTR [eax+0x15],1
  43abdf:	pop    ebp
  43abe0:	and    BYTE PTR [edx],cl
  43abe2:	cs dec eax
  43abe4:	cmp    edx,DWORD PTR [ebp+0x35]
  43abe7:	fld    QWORD PTR [eax+0x4e]
  43abea:	dec    ecx
  43abeb:	dec    edi
  43abec:	inc    eax
  43abed:	adc    al,0xd8
  43abef:	pop    esp
  43abf0:	and    BYTE PTR [edx+0x28],dh
  43abf3:	ins    BYTE PTR es:[edi],dx
  43abf4:	push   eax
  43abf5:	outs   dx,DWORD PTR ds:[esi]
  43abf6:	pushf  
  43abf7:	adc    bl,BYTE PTR [ebp-0xb83771c]
  43abfd:	xchg   edx,eax
  43abfe:	xchg   DWORD PTR [edi+eiz*4-0x2c30f25c],ebx
  43ac05:	mov    ah,0xfa
  43ac07:	les    edi,FWORD PTR [eax]
  43ac09:	xor    al,0xb4
  43ac0b:	leave  
  43ac0c:	and    ebp,DWORD PTR [edi]
  43ac0e:	pop    esp
  43ac0f:	mov    gs,ecx
  43ac11:	adc    edx,DWORD PTR [edi]
  43ac13:	xchg   BYTE PTR [ecx-0x76],bh
  43ac16:	mov    es,WORD PTR [eax-0x418ca85]
  43ac1c:	inc    edx
  43ac1d:	sub    ebx,esi
  43ac1f:	iret   
  43ac20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ac21:	jbe    0x43ac1b
  43ac23:	jne    0x43ac96
  43ac25:	sub    esp,ebp
  43ac27:	lock hlt 
  43ac29:	enter  0xd3ac,0xd5
  43ac2d:	(bad)  
  43ac2f:	dec    ecx
  43ac30:	ud2    
  43ac32:	jo     0x43abee
  43ac34:	add    eax,0x91d2ab57
  43ac39:	jb     0x43aca9
  43ac3b:	xchg   esp,eax
  43ac3c:	jg     0x43ac3c
  43ac3e:	ja     0x43acb3
  43ac40:	sbb    eax,0xb81f1b4a
  43ac45:	icebp  
  43ac46:	pop    edx
  43ac47:	mov    dl,0xbe
  43ac49:	and    BYTE PTR [ebp+0x6fdc121e],dl
  43ac4f:	jns    0x43acbb
  43ac51:	outs   dx,BYTE PTR ds:[esi]
  43ac52:	out    dx,eax
  43ac53:	mov    ah,0x31
  43ac55:	xor    eax,0xed8f8d00
  43ac5a:	jmp    0x5e9e35c1
  43ac5f:	test   al,0x43
  43ac61:	pop    ebx
  43ac62:	in     eax,dx
  43ac63:	loope  0x43ac73
  43ac65:	or     DWORD PTR [ebx-0x20a13371],eax
  43ac6b:	sub    BYTE PTR [ebx+ebx*1],ch
  43ac6e:	or     BYTE PTR [ebp+0x41],al
  43ac71:	lock mov ch,0x9f
  43ac74:	sub    ah,dl
  43ac76:	mov    bh,0xf5
  43ac78:	scas   al,BYTE PTR es:[edi]
  43ac79:	mov    dl,0x14
  43ac7b:	inc    edi
  43ac7c:	test   BYTE PTR [edi-0x536c9275],0x24
  43ac83:	mov    esp,0x686c33e3
  43ac88:	add    DWORD PTR [edx-0x56],0xffffffae
  43ac8c:	loopne 0x43ac8e
  43ac8e:	mov    bl,0x2c
  43ac90:	xor    BYTE PTR [edi+0x3a],ch
  43ac93:	dec    ebx
  43ac94:	mov    bh,0x4
  43ac96:	jge    0x43aca8
  43ac98:	in     eax,dx
  43ac99:	jmp    0xb7f75f97
  43ac9e:	sub    BYTE PTR [ecx],dl
  43aca0:	pop    edx
  43aca1:	adc    bl,BYTE PTR [esi]
  43aca3:	jo     0x43acbf
  43aca5:	jb     0x43ad25
  43aca7:	dec    esp
  43aca8:	cmp    al,0x15
  43acaa:	arpl   WORD PTR [bp+si+0x1bea],bx
  43acaf:	pop    es
  43acb0:	hlt    
  43acb1:	or     eax,0x8bc8ccb3
  43acb6:	push   eax
  43acb7:	and    al,0x20
  43acb9:	sbb    BYTE PTR [esp+edx*8-0x7f],dh
  43acbd:	lea    edi,[ebp+0x4]
  43acc0:	rcr    ebp,1
  43acc2:	cmp    al,0x91
  43acc4:	dec    esp
  43acc5:	mov    ecx,0x29c7a9bd
  43acca:	sub    eax,0xb41b8660
  43accf:	test   al,0xdf
  43acd1:	sub    ecx,DWORD PTR [ebp-0x4f]
  43acd4:	test   BYTE PTR [esi+0x2f],ch
  43acd7:	add    DWORD PTR ds:0x2c202c36,ecx
  43acdd:	sub    al,0x38
  43acdf:	data16 (bad) 
  43ace1:	sti    
  43ace2:	aad    0x21
  43ace4:	imul   ebp,DWORD PTR [edi+0x50],0x12
  43ace8:	push   es
  43ace9:	lahf   
  43acea:	mov    ds:0x687440f9,eax
  43acef:	je     0x43ad39
  43acf1:	fst    QWORD PTR [esi]
  43acf3:	adc    bh,BYTE PTR [edi-0x676e6a7d]
  43acf9:	xchg   esi,eax
  43acfa:	adc    eax,0x3d83323e
  43acff:	aas    
  43ad00:	cmp    eax,DWORD PTR [eax+0x4a]
  43ad03:	jle    0x43ad63
  43ad05:	inc    edx
  43ad06:	jo     0x43accb
  43ad08:	fsubr  st(0),st
  43ad0a:	fs jae 0x43ad5e
  43ad0d:	xchg   edx,eax
  43ad0e:	xchg   esi,eax
  43ad0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad10:	pop    edx
  43ad11:	imul   ebp,DWORD PTR [edi-0x78],0x41
  43ad15:	stc    
  43ad16:	mov    bl,0xbf
  43ad18:	shr    BYTE PTR [ebp+0x16],cl
  43ad1b:	add    BYTE PTR [ecx],bh
  43ad1d:	add    BYTE PTR [eax],al
  43ad1f:	add    BYTE PTR [eax],cl
  43ad21:	pop    ds
  43ad22:	jno    0x43ad81
  43ad24:	invd   
  43ad26:	add    BYTE PTR [eax],al
  43ad28:	add    BYTE PTR [eax],al
  43ad2a:	add    BYTE PTR [eax],al
  43ad2c:	invd   
  43ad2e:	add    BYTE PTR [eax],al
  43ad30:	push   eax
  43ad31:	add    BYTE PTR [esi],ah
  43ad33:	jl     0x43ad35
  43ad35:	add    dh,BYTE PTR [esi]
  43ad37:	or     BYTE PTR [eax],al
  43ad39:	add    BYTE PTR [edx],al
  43ad3b:	dec    ebx
  43ad3c:	add    BYTE PTR [esi+0x61659377],dh
  43ad42:	repnz pop es
  43ad44:	sub    DWORD PTR [ecx+eiz*1],esp
  43ad47:	ds scas al,BYTE PTR es:[edi]
  43ad49:	mov    bh,0xbb
  43ad4b:	and    DWORD PTR [eax+ebp*2],esi
  43ad4e:	dec    eax
  43ad4f:	pusha  
  43ad50:	or     BYTE PTR [edx+0x42],bh
  43ad53:	inc    esi
  43ad54:	push   esp
  43ad55:	dec    ecx
  43ad56:	jae    0x43adc4
  43ad58:	imul   eax,DWORD PTR [edx-0x36],0x12
  43ad5c:	out    dx,al
  43ad5d:	pop    eax
  43ad5e:	data16 (bad) 
  43ad60:	nop
  43ad61:	into   
  43ad62:	sub    al,0x67
  43ad64:	test   BYTE PTR [eax+0x3866c677],cl
  43ad6a:	outs   dx,BYTE PTR ds:[esi]
  43ad6b:	in     al,0x9
  43ad6d:	jae    0x43ade6
  43ad6f:	es xor eax,0xd3b65c8e
  43ad75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad76:	ffreep st(3)
  43ad78:	or     DWORD PTR [ebx],eax
  43ad7a:	push   ebp
  43ad7b:	sub    BYTE PTR [ebp+0x7773b2da],0x45
  43ad82:	in     eax,dx
  43ad83:	(bad)  
  43ad84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ad85:	xchg   edx,esi
  43ad87:	daa    
  43ad88:	xor    BYTE PTR [edi+ebp*4],bh
  43ad8b:	xor    eax,0xf203cc97
  43ad90:	xor    BYTE PTR [ebp+0x6c68ddb1],cl
  43ad96:	jo     0x43ae0c
  43ad98:	push   esp
  43ad99:	xchg   ecx,eax
  43ad9a:	ins    DWORD PTR es:[edi],dx
  43ad9b:	inc    ebp
  43ad9c:	call   0x99185e4d
  43ada1:	sbb    DWORD PTR [eax+ebx*2+0x4b],0x64
  43ada6:	add    DWORD PTR ds:0x9f2dbcc1,eax
  43adac:	xchg   ebx,eax
  43adad:	jp     0x43ae1d
  43adaf:	mov    esi,0xa2e008b2
  43adb4:	and    esp,DWORD PTR [edi]
  43adb6:	stc    
  43adb7:	mov    eax,ds:0x88e33ec2
  43adbc:	(bad)  
  43adbd:	test   eax,0xea42eaad
  43adc2:	out    dx,al
  43adc3:	cmp    al,0xac
  43adc5:	fs clc 
  43adc7:	hlt    
  43adc8:	and    al,0x28
  43adca:	pushf  
  43adcb:	nop
  43adcc:	jl     0x43ad9e
  43adce:	sahf   
  43adcf:	pop    ss
  43add0:	adc    esp,DWORD PTR [ebp-0x71]
  43add3:	cmp    BYTE PTR [ebx+ecx*2],bh
  43add6:	hlt    
  43add7:	rcl    BYTE PTR [ebx],cl
  43add9:	out    dx,eax
  43adda:	shr    ebp,0xa6
  43addd:	mov    edx,0x5fb6185b
  43ade2:	push   ebx
  43ade3:	inc    ecx
  43ade4:	jne    0x43addd
  43ade6:	sti    
  43ade7:	cmp    al,al
  43ade9:	adc    eax,DWORD PTR [ebp-0x147eb57f]
  43adef:	out    dx,eax
  43adf0:	xchg   ah,ah
  43adf2:	jl     0x43ae5d
  43adf4:	jne    0x43addb
  43adf6:	aaa    
  43adf7:	mov    ecx,0x1c088e45
  43adfc:	jmp    0x225e9fee
  43ae01:	es sub al,0x2c
  43ae04:	mov    cl,0x4b
  43ae06:	inc    edi
  43ae07:	ret    0x98b0
  43ae0a:	pushf  
  43ae0b:	jo     0x43ade1
  43ae0d:	pushf  
  43ae0e:	loopne 0x43adec
  43ae10:	pushf  
  43ae11:	push   edx
  43ae12:	jae    0x43ae83
  43ae14:	sar    eax,1
  43ae16:	pop    ds
  43ae17:	test   al,0xac
  43ae19:	inc    ebx
  43ae1a:	inc    DWORD PTR [ecx+0x45]
  43ae1d:	mov    edx,0x8b87de1c
  43ae22:	jno    0x43ae14
  43ae24:	je     0x43ae9e
  43ae26:	mov    esp,0xc3c7ce40
  43ae2b:	push   ebp
  43ae2c:	stc    
  43ae2d:	retf   0x5fce
  43ae30:	fs aam 0x6d
  43ae33:	imul   ebx,ecx,0x783c38b4
  43ae39:	or     al,0x14
  43ae3b:	loope  0x43ae2a
  43ae3d:	in     eax,dx
  43ae3e:	call   FWORD PTR [eax-0xacfb06c]
  43ae44:	mov    cs,WORD PTR [edx-0x696dcec9]
  43ae4a:	call   DWORD PTR [ebx+edi*1+0x7d]
  43ae4e:	inc    ecx
  43ae4f:	es pop eax
  43ae51:	jl     0x43aeb3
  43ae53:	push   esp
  43ae54:	js     0x43aebc
  43ae56:	jg     0x43aed3
  43ae58:	ins    DWORD PTR es:[edi],dx
  43ae59:	and    BYTE PTR [ebx+0x67],0xe1
  43ae5d:	and    BYTE PTR [ecx-0x6],cl
  43ae60:	dec    BYTE PTR [edi-0x3e0e0a88]
  43ae66:	inc    esp
  43ae67:	pop    esp
  43ae68:	inc    eax
  43ae69:	pop    esp
  43ae6a:	dec    esp
  43ae6b:	ins    DWORD PTR es:[edi],dx
  43ae6c:	dec    edi
  43ae6d:	jae    0x43aeb1
  43ae6f:	push   0xbb989c43
  43ae74:	popf   
  43ae75:	(bad)  
  43ae77:	mov    WORD PTR ss:[edx],?
  43ae7a:	add    ecx,DWORD PTR [edi]
  43ae7c:	test   eax,0x24ece06c
  43ae81:	mov    al,0x8d
  43ae83:	scas   eax,DWORD PTR es:[edi]
  43ae84:	stos   DWORD PTR es:[edi],eax
  43ae85:	push   0x1f
  43ae87:	mov    BYTE PTR [edi+eax*8-0x3c3851a8],dl
  43ae8e:	cmp    eax,0x840a0eee
  43ae93:	jl     0x43ae5c
  43ae95:	mov    ecx,0xf03cf6b5
  43ae9a:	cld    
  43ae9b:	push   esp
  43ae9c:	mov    al,ds:0xaf1f543
  43aea1:	lahf   
  43aea2:	mov    eax,ds:0x5dc4f2a5
  43aea7:	mov    edi,0xbc7832a3
  43aeac:	and    BYTE PTR [esp+ebp*2],0xe8
  43aeb0:	cmc    
  43aeb1:	stc    
  43aeb2:	gs push ecx
  43aeb4:	retf   
  43aeb5:	(bad)  
  43aeb6:	adc    dl,BYTE PTR [eax+0x34044eb]
  43aebc:	ret    0x8e8a
  43aebf:	hlt    
  43aec0:	mov    ah,0xc6
  43aec2:	xchg   esi,eax
  43aec3:	jmp    0xd8ef:0x405c6390
  43aeca:	pop    edi
  43aecb:	push   0xb626e36c
  43aed0:	mov    dl,0x74
  43aed2:	cld    
  43aed3:	sub    edx,ebp
  43aed5:	out    0xcb,al
  43aed7:	ret    
  43aed8:	and    BYTE PTR [ebx+ecx*8],ah
  43aedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aedc:	xchg   esp,eax
  43aedd:	mov    eax,0x62c19ca4
  43aee2:	push   ds
  43aee3:	arpl   ax,cx
  43aee5:	mov    cs,WORD PTR cs:[edx-0x10143e9c]
  43aeec:	(bad)  
  43aeed:	in     al,dx
  43aeee:	xchg   BYTE PTR [edi],ch
  43aef0:	and    edx,DWORD PTR [ecx+0x3b]
  43aef3:	in     al,0xe8
  43aef5:	xlat   BYTE PTR ds:[ebx]
  43aef6:	adc    BYTE PTR [edx+0x2a],al
  43aef9:	cs inc esp
  43aefb:	push   0x12
  43aefd:	push   ss
  43aefe:	inc    esp
  43aeff:	xor    al,0x26
  43af01:	retf   0xdcce
  43af04:	pop    ss
  43af05:	cdq    
  43af06:	popf   
  43af07:	dec    edx
  43af08:	fsub   st(2),st
  43af0a:	loop   0x43aefa
  43af0c:	loopne 0x43aeaa
  43af0e:	rcr    ah,1
  43af10:	mov    ah,0x0
  43af12:	loopne 0x43af68
  43af14:	push   eax
  43af15:	test   al,0x49
  43af17:	fcmovu st,st(6)
  43af19:	mov    edi,0xe3ff4624
  43af1e:	mov    edi,edx
  43af20:	nop
  43af21:	in     al,dx
  43af22:	pop    es
  43af23:	dec    eax
  43af24:	jmp    0x79f1:0xf49c3632
  43af2b:	aad    0xf0
  43af2d:	push   eax
  43af2e:	ins    DWORD PTR es:[edi],dx
  43af2f:	imul   esi,DWORD PTR [ecx],0xc3e8ec33
  43af35:	adc    al,0x93
  43af37:	gs pop ecx
  43af39:	(bad)  
  43af3a:	sbb    cl,bl
  43af3c:	xlat   BYTE PTR ds:[ebx]
  43af3d:	loope  0x43af77
  43af3f:	jg     0x43aec9
  43af41:	mov    ebx,es
  43af43:	adc    eax,0x5c366367
  43af48:	xlat   BYTE PTR ds:[ebx]
  43af49:	or     DWORD PTR ds:0xf5f9fcb6,eax
  43af4f:	jge    0x43aed1
  43af51:	loopne 0x43afb0
  43af53:	pop    ecx
  43af54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43af55:	retf   0x6e52
  43af58:	mov    eax,0x9d99cc28
  43af5d:	jno    0x43aee7
  43af5f:	sub    al,0x28
  43af61:	nop
  43af62:	dec    esp
  43af63:	stos   BYTE PTR es:[edi],al
  43af64:	add    cl,BYTE PTR [esi]
  43af66:	lock addr16 nop
  43af69:	pushf  
  43af6a:	lahf   
  43af6b:	jo     0x43afbe
  43af6d:	xchg   edx,eax
  43af6e:	xchg   esi,eax
  43af6f:	dec    edi
  43af70:	sub    ebp,ebp
  43af72:	jmp    0xe65a43d1
  43af77:	ficom  DWORD PTR [eax+0x41]
  43af7a:	add    bl,BYTE PTR [esi]
  43af7c:	repz cmp al,0x58
  43af7f:	dec    esp
  43af80:	inc    eax
  43af81:	pop    esp
  43af82:	test   esi,ebp
  43af84:	loop   0x43afb9
  43af86:	pusha  
  43af87:	in     al,dx
  43af88:	adc    BYTE PTR [eax+eax*4],dl
  43af8b:	sbb    ebx,DWORD PTR [ebp+0x59]
  43af8e:	retf   0xfa84
  43af91:	mov    ds:0x80bcc8be,al
  43af96:	mov    esp,0x165da89c
  43af9b:	adc    ch,bh
  43af9d:	jnp    0x43b013
  43af9f:	jo     0x43af5c
  43afa1:	int3   
  43afa2:	adc    DWORD PTR [edx],0x80474b1e
  43afa8:	test   BYTE PTR [ebx+0x5da10474],bh
  43afae:	and    eax,0x7ce4f814
  43afb3:	cwde   
  43afb4:	mov    ebp,0x7196bbbf
  43afb9:	sti    
  43afba:	jmp    FWORD PTR [esi]
  43afbc:	mov    esp,0xad75791c
  43afc1:	push   esi
  43afc2:	pop    edi
  43afc3:	push   ebx
  43afc4:	shl    eax,1
  43afc6:	popa   
  43afc7:	bound  esp,QWORD PTR [esi-0x1]
  43afca:	mov    BYTE PTR fs:[eax+eiz*8-0x5551b5fc],cl
  43afd2:	in     al,0x58
  43afd4:	adc    eax,0x1aacd911
  43afd9:	rcr    dh,cl
  43afdb:	jo     0x43aff5
  43afdd:	mov    WORD PTR [eax-0x242e2fa4],es
  43afe3:	(bad)  
  43afe5:	in     eax,0x1e
  43afe7:	sbb    al,BYTE PTR [edi]
  43afe9:	hlt    
  43afea:	jmp    0x716d:0xab180ef2
  43aff1:	(bad)  
  43aff2:	sbb    BYTE PTR [ebx+0x15],al
  43aff5:	adc    DWORD PTR [edx-0x2b],eax
  43aff8:	addr16 out dx,eax
  43affa:	adc    al,al
  43affc:	adc    al,0x71
  43affe:	jne    0x43afb9
  43b000:	inc    ebp
  43b001:	pop    esi
  43b002:	pop    edx
  43b003:	mul    esp
  43b005:	mov    al,0x2d
  43b007:	xor    DWORD PTR [ebp-0x21],ebp
  43b00a:	loope  0x43b029
  43b00c:	or     BYTE PTR ds:[ebp+0x243f8a8e],dh
  43b013:	rol    ebp,0xf1
  43b016:	sub    al,0x23
  43b018:	int3   
  43b019:	rcl    bh,0xf3
  43b01c:	(bad)  
  43b01e:	addr16 push eax
  43b020:	addr16 dec ecx
  43b022:	icebp  
  43b023:	(bad)  
  43b024:	push   ebx
  43b025:	test   DWORD PTR [ecx-0x267307da],ebx
  43b02b:	frstor [ecx+0x1f9a9e85]
  43b031:	sbb    al,0x87
  43b033:	mov    al,0xbc
  43b035:	pop    ds
  43b036:	xchg   BYTE PTR [edi+0x664011a3],ch
  43b03c:	push   esi
  43b03d:	push   edx
  43b03e:	ins    BYTE PTR es:[edi],dx
  43b03f:	(bad)  
  43b040:	(bad)  
  43b042:	jne    0x43b0a8
  43b044:	dec    eax
  43b045:	test   DWORD PTR [ecx+0x4eb231bd],ebx
  43b04b:	add    ecx,DWORD PTR [edi+ebp*8]
  43b04e:	inc    ecx
  43b04f:	dec    ebp
  43b050:	mov    dh,0x58
  43b052:	or     al,0x0
  43b054:	jl     0x43b086
  43b056:	dec    esi
  43b057:	out    0xe3,eax
  43b059:	in     eax,0xcb
  43b05b:	(bad)  
  43b05c:	rcl    BYTE PTR [ebx+0x54],0xa0
  43b060:	std    
  43b061:	sar    DWORD PTR ds:0x7df9e5e8,0x78
  43b068:	imul   ecx,DWORD PTR [ebp+0x2f569289],0x2b
  43b06f:	std    
  43b070:	pushf  
  43b071:	xchg   ecx,eax
  43b072:	inc    edx
  43b073:	dec    esi
  43b074:	jnp    0x43b068
  43b076:	jp     0x43b0f6
  43b078:	les    eax,FWORD PTR [eax+esi*8+0x24]
  43b07c:	cmp    BYTE PTR [ebx+ebx*4+0x68e6211d],al
  43b083:	fsub   st(1),st
  43b085:	in     eax,dx
  43b086:	push   ecx
  43b087:	or     ebp,DWORD PTR [ebp-0x7e732d57]
  43b08d:	fwait
  43b08e:	xchg   edi,eax
  43b08f:	sub    BYTE PTR [ebx+0x14],0x18
  43b093:	xlat   BYTE PTR ds:[ebx]
  43b094:	mov    al,0x48
  43b096:	in     al,dx
  43b097:	call   0x77b6c304
  43b09c:	mov    ebp,0x72766674
  43b0a1:	inc    esp
  43b0a2:	pshufw mm6,QWORD PTR [esp+eax*1+0x7c],0x80
  43b0a8:	dec    DWORD PTR cs:[eax+edx*4+0x529c98ef]
  43b0b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b0b1:	test   al,0xc7
  43b0b3:	mov    al,0xb4
  43b0b5:	adc    dl,bl
  43b0b7:	rol    ah,0xd
  43b0ba:	int3   
  43b0bb:	shl    ah,1
  43b0bd:	fcomp  st(4)
  43b0bf:	loope  0x43b0a5
  43b0c1:	call   0xf938480c
  43b0c6:	xlat   BYTE PTR ds:[ebx]
  43b0c7:	add    BYTE PTR [eax+0x4f949072],cl
  43b0cd:	pushf  
  43b0ce:	mov    al,ds:0xb0ac030e
  43b0d3:	ret    0xbcb8
  43b0d6:	or     al,ah
  43b0d8:	enter  0xd04e,0xd4
  43b0dc:	jb     0x43b0f3
  43b0de:	loopne 0x43b0c4
  43b0e0:	xchg   ebp,eax
  43b0e1:	in     al,dx
  43b0e2:	lock push cs
  43b0e4:	clc    
  43b0e5:	cld    
  43b0e6:	pop    ecx
  43b0e7:	add    al,0x8
  43b0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b0ea:	push   edi
  43b0eb:	adc    al,0x18
  43b0ed:	in     al,dx
  43b0ee:	and    BYTE PTR [eax*4-0x43934b50],ah
  43b0f5:	shr    BYTE PTR [esi+0x6a],0xcc
  43b0f9:	sar    BYTE PTR [ebx-0x28],1
  43b0fc:	fdivr  QWORD PTR [esp+eiz*8-0x18]
  43b100:	dec    eax
  43b101:	lock hlt 
  43b103:	push   edx
  43b104:	mov    es,WORD PTR [eax]
  43b106:	add    al,0xc8
  43b108:	or     al,0x10
  43b10a:	mov    ds:0x24dd1c18,eax
  43b10f:	sub    BYTE PTR [esi+0x1a3834a3],al
  43b115:	inc    eax
  43b116:	inc    esp
  43b117:	jle    0x43b165
  43b119:	push   eax
  43b11a:	out    0xdc,eax
  43b11c:	loopne 0x43b16c
  43b11e:	pop    ds
  43b11f:	in     al,dx
  43b120:	lock cmp al,bh
  43b123:	cld    
  43b124:	xor    al,0x4
  43b126:	or     BYTE PTR [ecx-0x64debf0],ch
  43b12c:	and    BYTE PTR [ecx+ebx*8],ah
  43b12f:	sub    al,0x30
  43b131:	inc    ebp
  43b132:	cmp    BYTE PTR [eax+ebx*4],bh
  43b135:	inc    esp
  43b136:	dec    eax
  43b137:	out    0x61,al
  43b139:	push   esp
  43b13a:	pop    eax
  43b13b:	dec    ecx
  43b13c:	pusha  
  43b13d:	fs ins BYTE PTR es:[edi],dx
  43b13f:	ins    BYTE PTR es:[edi],dx
  43b140:	jo     0x43b0f5
  43b142:	js     0x43b1c0
  43b144:	scas   al,BYTE PTR es:[edi]
  43b145:	sub    ecx,DWORD PTR [eax+edx*1]
  43b148:	xlat   BYTE PTR ds:[ebx]
  43b149:	sbb    BYTE PTR [eax+edi*1],bl
  43b14c:	and    al,0x28
  43b14e:	mov    edx,0x39923430
  43b153:	inc    eax
  43b154:	inc    esp
  43b155:	ror    BYTE PTR [eax+edx*2+0x53],cl
  43b159:	pop    eax
  43b15a:	pop    esp
  43b15b:	jb     0x43b1c1
  43b15d:	push   0x7874f0c6
  43b162:	sahf   
  43b163:	add    BYTE PTR [ebx+eiz*2-0x674c6f74],0x9c
  43b16b:	or     dl,BYTE PTR [esi]
  43b16d:	sub    al,0x30
  43b16f:	inc    ecx
  43b170:	cmp    BYTE PTR [ecx+ecx*2],bh
  43b173:	inc    esp
  43b174:	dec    eax
  43b175:	iret   
  43b176:	push   eax
  43b177:	push   esp
  43b178:	bnd jo 0x43b1db
  43b17b:	fs jb  0x43b1ea
  43b17e:	jo     0x43b1ef
  43b180:	js     0x43b1fe
  43b182:	out    dx,al
  43b183:	test   BYTE PTR [eax-0x676b35da],cl
  43b189:	cmp    al,0xa0
  43b18b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b18c:	cli    
  43b18d:	lods   al,BYTE PTR ds:[esi]
  43b18e:	mov    al,0x8f
  43b190:	mov    eax,0xc8126abc
  43b195:	int3   
  43b196:	out    0x58,eax
  43b198:	pop    esp
  43b199:	dec    ecx
  43b19a:	fs push 0xd274708f
  43b1a0:	push   ebx
  43b1a1:	add    BYTE PTR [esp+ecx*1-0x67386f74],0x9c
  43b1a9:	jno    0x43b14f
  43b1ab:	test   al,0xf9
  43b1ad:	push   ecx
  43b1ae:	retf   
  43b1af:	push   ebp
  43b1b0:	mov    esp,0xccc8e4c0
  43b1b5:	sub    al,0xd4
  43b1b7:	fsubr  DWORD PTR [ebp-0x4b]
  43b1ba:	in     al,0xe8
  43b1bc:	mov    bh,0xf0
  43b1be:	hlt    
  43b1bf:	xchg   edx,eax
  43b1c0:	add    BYTE PTR [ebx+eax*2-0x32d56f74],0x9c
  43b1c8:	mov    al,ds:0xfaaca89d
  43b1cd:	mov    ah,0xb8
  43b1cf:	lock rol ah,0x90
  43b1d3:	cdq    
  43b1d4:	rcl    ah,1
  43b1d6:	pop    ss
  43b1d7:	fsubr  st(0),st
  43b1d9:	xor    al,0xe8
  43b1db:	in     al,dx
  43b1dc:	pop    ds
  43b1dd:	hlt    
  43b1de:	clc    
  43b1df:	push   esi
  43b1e0:	push   ebp
  43b1e1:	add    al,0x8
  43b1e3:	not    DWORD PTR [eax]
  43b1e5:	adc    al,0x5b
  43b1e7:	sbb    al,0x20
  43b1e9:	in     eax,0xac
  43b1eb:	mov    al,0x87
  43b1ed:	in     eax,dx
  43b1ee:	mov    esp,0xccc841c0
  43b1f3:	xchg   ebp,eax
  43b1f4:	aam    0xd8
  43b1f6:	and    eax,0xb9eae4e0
  43b1fb:	lock hlt 
  43b1fd:	xchg   esp,edi
  43b1ff:	add    BYTE PTR [eax+ecx*1+0xc],dl
  43b203:	sub    al,0x14
  43b205:	sbb    BYTE PTR [ebx-0x7bd7db8b],al
  43b20b:	xor    BYTE PTR [ecx+ebp*2],dh
  43b20e:	cmp    al,0x40
  43b210:	out    0x48,eax
  43b212:	rcl    BYTE PTR [ebp+ecx*4-0x17941f24],1
  43b219:	in     al,dx
  43b21a:	(bad)  
  43b21b:	hlt    
  43b21c:	clc    
  43b21d:	popa   
  43b21e:	add    BYTE PTR [eax+esi*1],al
  43b221:	pop    ecx
  43b222:	adc    BYTE PTR [ebp*8+0x2898201c],dl
  43b229:	sub    al,0x86
  43b22b:	xor    al,0x38
  43b22d:	out    0x15,al
  43b22f:	inc    esp
  43b230:	dec    eax
  43b231:	ins    DWORD PTR es:[edi],dx
  43b232:	push   eax
  43b233:	push   esp
  43b234:	dec    eax
  43b235:	pop    esp
  43b236:	pusha  
  43b237:	fwait
  43b238:	push   0xfc21836c
  43b23d:	add    dh,dl
  43b23f:	or     BYTE PTR [ebx*8+0x20101814],cl
  43b246:	and    al,0x3b
  43b248:	jns    0x43b27a
  43b24a:	xor    al,0xd4
  43b24c:	cmp    al,0x40
  43b24e:	sbb    ecx,DWORD PTR [eax+0x4c]
  43b251:	(bad)  
  43b252:	push   esp
  43b253:	pop    eax
  43b254:	sbb    BYTE PTR ds:0x707b6864,dh
  43b25a:	je     0x43b218
  43b25c:	jl     0x43b1de
  43b25e:	and    ecx,DWORD PTR [eax-0x673e1174]
  43b264:	pushf  
  43b265:	sbb    DWORD PTR [eax],ebp
  43b267:	sub    al,0x54
  43b269:	xor    al,0x38
  43b26b:	popa   
  43b26c:	inc    eax
  43b26d:	inc    esp
  43b26e:	push   ecx
  43b26f:	sbb    DWORD PTR [eax+0x54],edx
  43b272:	sub    ebx,DWORD PTR [eax+eiz*2+0x4]
  43b276:	push   0x7874f16c
  43b27b:	xor    edx,ebp
  43b27d:	test   BYTE PTR [eax-0x456b6fb0],cl
  43b283:	pushf  
  43b284:	mov    al,ds:0x20aca88e
  43b289:	loope  0x43b243
  43b28b:	mov    esp,0x164cc448
  43b290:	push   esp
  43b291:	pop    eax
  43b292:	mov    dl,0x60
  43b294:	sar    BYTE PTR fs:[ecx],1
  43b297:	jo     0x43b30d
  43b299:	ins    BYTE PTR es:[edi],dx
  43b29a:	jl     0x43b21c
  43b29c:	pop    edx
  43b29d:	mov    BYTE PTR [esi+ecx*8-0xa68676c],cl
  43b2a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b2a5:	test   al,0x77
  43b2a7:	mov    al,0xb4
  43b2a9:	pop    eax
  43b2aa:	mov    esp,0xccc8f6c0
  43b2af:	jmp    0xe8e4:0xeadcd881
  43b2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b2b7:	lock js 0x43b334
  43b2ba:	add    BYTE PTR [esp+ebp*4-0x3b6b6f27],0x9c
  43b2c2:	mov    al,ds:0x63aca866
  43b2c7:	mov    ah,0xb8
  43b2c9:	adc    BYTE PTR [ebp-0x2f51373c],dl
  43b2cf:	aam    0x49
  43b2d1:	fsubr  st(0),st
  43b2d3:	jno    0x43b2bd
  43b2d5:	in     al,dx
  43b2d6:	adc    al,0xa1
  43b2d8:	clc    
  43b2d9:	cld    
  43b2da:	jns    0x43b2e0
  43b2dc:	or     bl,ch
  43b2de:	adc    BYTE PTR [eax+edx*8],dl
  43b2e1:	mov    al,ds:0xb0f99fa4
  43b2e6:	mov    ah,0xd5
  43b2e8:	mov    esp,0xccc849c0
  43b2ed:	add    eax,0xb592d8d4
  43b2f2:	in     al,0xe8
  43b2f4:	inc    ebp
  43b2f5:	lock hlt 
  43b2f7:	xchg   esp,eax
  43b2f8:	cld    
  43b2f9:	add    BYTE PTR [edx+0x8],dl
  43b2fc:	or     al,0xe4
  43b2fe:	inc    ecx
  43b2ff:	sbb    BYTE PTR [edx+ecx*8],bl
  43b302:	and    al,0x28
  43b304:	dec    ecx
  43b305:	xor    BYTE PTR [edx+eax*2],dh
  43b308:	cmp    al,0x40
  43b30a:	cwd    
  43b30c:	rcl    ah,1
  43b30e:	rcr    ah,1
  43b310:	loopne 0x43b370
  43b312:	call   0xf9383c03
  43b317:	fst    DWORD PTR [ebp+0x4]
  43b31a:	or     BYTE PTR [edx],ah
  43b31c:	adc    BYTE PTR [esp+eax*1],dl
  43b31f:	sbb    al,0x20
  43b321:	sub    BYTE PTR [eax],0x2c
  43b324:	test   BYTE PTR [ecx+0x38],ah
  43b327:	cmp    al,0x86
  43b329:	inc    esp
  43b32a:	dec    eax
  43b32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b32c:	push   eax
  43b32d:	push   esp
  43b32e:	test   DWORD PTR [eax+eiz*2+0x10],ebx
  43b332:	cmp    eax,0xfce7f46c
  43b337:	add    BYTE PTR [edi+0x8],cl
  43b33a:	or     al,0xad
  43b33c:	adc    al,0x18
  43b33e:	xchg   edi,eax
  43b33f:	jne    0x43b365
  43b341:	sub    BYTE PTR [esi+0x3c483430],ah
  43b347:	inc    eax
  43b348:	jp     0x43b392
  43b34a:	dec    esp
  43b34b:	in     eax,0x1
  43b34d:	pop    eax
  43b34e:	pop    esp
  43b34f:	push   es
  43b350:	fs push 0x7b747024
  43b356:	jl     0x43b2d8
  43b358:	jb     0x43b337
  43b35a:	mov    WORD PTR [eax+0x45201c9a],ss
  43b360:	sub    BYTE PTR [eax*1+0x156b3834],ch
  43b367:	inc    esp
  43b368:	dec    eax
  43b369:	cmc    
  43b36a:	push   eax
  43b36b:	push   esp
  43b36c:	ficomp WORD PTR [eax+eiz*2-0x5b]
  43b370:	push   0x78216d6c
  43b375:	jl     0x43b395
  43b377:	test   BYTE PTR [eax+0x6094906d],cl
  43b37d:	pushf  
  43b37e:	mov    al,ds:0xb0acfd3c
  43b383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b384:	mov    eax,0x4c482dbc
  43b389:	mov    DWORD PTR [eax+ebx*2-0x2e],edx
  43b38d:	xor    eax,0x70f86864
  43b392:	je     0x43b377
  43b394:	jl     0x43b316
  43b396:	call   0x9c98:0xc1178c88
  43b39d:	dec    ecx
  43b39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b39f:	test   al,0x62
  43b3a1:	mov    al,0xb4
  43b3a3:	in     eax,dx
  43b3a4:	mov    esp,0xcc9decc0
  43b3a9:	ror    BYTE PTR [ebx],1
  43b3ab:	fcomp  st(4)
  43b3ad:	ins    BYTE PTR es:[edi],dx
  43b3ae:	in     al,0xe8
  43b3b0:	shl    DWORD PTR [eax+edi*2-0xb],1
  43b3b4:	aad    0x84
  43b3b6:	mov    BYTE PTR [ecx-0x63d86b70],al
  43b3bc:	mov    al,ds:0xf2aca842
  43b3c1:	loope  0x43b37b
  43b3c3:	mov    esp,0x8dc8c4a8
  43b3c8:	rcl    ah,1
  43b3ca:	inc    ecx
  43b3cb:	fsubr  st(0),st
  43b3cd:	leave  
  43b3ce:	mov    ebp,0xf8fbf0ec
  43b3d3:	cld    
  43b3d4:	mov    al,0x4
  43b3d6:	or     BYTE PTR [eax+0x10],bl
  43b3d9:	cwde   
  43b3da:	daa    
  43b3db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b3dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b3dd:	test   al,0xba
  43b3df:	mov    al,0xb4
  43b3e1:	call   0x9bd8e801
  43b3e6:	int3   
  43b3e7:	mov    ch,0x95
  43b3e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b3ea:	pop    ds
  43b3eb:	inc    esp
  43b3ec:	repz bnd jp 0x43b3e0
  43b3f0:	stos   BYTE PTR es:[edi],al
  43b3f1:	ffreep st(6)
  43b3f3:	retf   
  43b3f4:	outs   dx,DWORD PTR ds:[esi]
  43b3f5:	mov    ds:0x5d14e137,eax
  43b3fa:	cmp    DWORD PTR [edi],0x9cd6708f
  43b400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b401:	cmp    bl,al
  43b403:	daa    
  43b404:	sbb    DWORD PTR [ecx+0x2af8e42a],0xffffffe0
  43b40b:	mov    DWORD PTR [esi+0x34826141],ebx
  43b411:	je     0x43b438
  43b413:	add    al,0x44
  43b415:	push   cs
  43b416:	in     eax,0xe8
  43b418:	iret   
  43b419:	stc    
  43b41a:	outs   dx,DWORD PTR ds:[esi]
  43b41b:	repz sub bh,ah
  43b41e:	sbb    dh,cl
  43b420:	mov    eax,0xc7627578
  43b425:	dec    esp
  43b426:	repz ss in eax,dx
  43b429:	adc    eax,0x9732d53a
  43b42e:	hlt    
  43b42f:	jecxz  0x43b477
  43b431:	and    eax,0x55e6069c
  43b436:	cmc    
  43b437:	sbb    ah,bl
  43b439:	fidivr WORD PTR [ecx+0x2a]
  43b43c:	pop    ecx
  43b43d:	pop    ds
  43b43e:	imul   DWORD PTR [edx]
  43b440:	cmp    al,0xb0
  43b442:	or     cl,cl
  43b444:	out    dx,eax
  43b445:	(bad)  
  43b446:	adc    dl,ch
  43b448:	call   0x2b97:0x7bb9d60
  43b44f:	idiv   DWORD PTR [edi+0x15]
  43b452:	test   BYTE PTR [esi+ebx*1],dl
  43b455:	add    ebx,esi
  43b457:	dec    bp
  43b459:	fwait
  43b45a:	repnz sub al,0x69
  43b45d:	lods   ax,WORD PTR ds:[esi]
  43b45f:	adc    ebx,eax
  43b461:	cli    
  43b462:	pushf  
  43b463:	lahf   
  43b464:	push   eax
  43b465:	jne    0x43b493
  43b467:	add    al,0x49
  43b469:	or     eax,0x74342588
  43b46e:	mov    al,0xb5
  43b470:	push   cs
  43b471:	out    dx,al
  43b472:	add    DWORD PTR [esi-0x1b],ecx
  43b475:	in     al,dx
  43b476:	cwde   
  43b477:	in     eax,0x2e
  43b479:	push   eax
  43b47a:	ret    
  43b47b:	xchg   edx,eax
  43b47c:	call   0x358495ae
  43b481:	icebp  
  43b482:	imul   esp,esi,0x1b
  43b485:	mov    ecx,0xc56477e2
  43b48a:	in     al,0x80
  43b48c:	adc    dl,ah
  43b48e:	pop    esp
  43b48f:	dec    ecx
  43b490:	xor    BYTE PTR [eax-0x7f16a14a],cl
  43b496:	(bad)  
  43b497:	jg     0x43b460
  43b499:	sub    ch,BYTE PTR [ecx+eax*4-0xc23a252]
  43b4a0:	xchg   ebp,eax
  43b4a1:	pop    edi
  43b4a2:	mov    eax,edx
  43b4a4:	stos   DWORD PTR es:[edi],eax
  43b4a5:	mov    edi,DWORD PTR [esi-0x3ef7e100]
  43b4ab:	lock js 0x43b480
  43b4ae:	jmp    0x43b4ef
  43b4b0:	xchg   esp,eax
  43b4b1:	sub    al,0x11
  43b4b3:	push   0xc
  43b4b5:	pushf  
  43b4b6:	mov    ebp,DWORD PTR [ecx+edx*2-0x3703270c]
  43b4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b4be:	sar    BYTE PTR [ecx],0x8d
  43b4c1:	inc    ebx
  43b4c2:	push   edi
  43b4c3:	mov    eax,0xe4574806
  43b4c8:	adc    BYTE PTR [edi-0x70d4285e],dl
  43b4ce:	stos   DWORD PTR es:[edi],eax
  43b4cf:	out    0x8,al
  43b4d1:	xchg   edx,eax
  43b4d2:	fucomip st,st(2)
  43b4d4:	retf   
  43b4d5:	das    
  43b4d6:	mov    ebx,0x1fb0864b
  43b4db:	in     eax,dx
  43b4dc:	fcmovb st,st(7)
  43b4de:	in     al,dx
  43b4df:	and    edi,DWORD PTR [esi-0x2d]
  43b4e2:	aam    0x1a
  43b4e4:	imul   ecx,edi,0x7629937e
  43b4ea:	push   ecx
  43b4eb:	clc    
  43b4ec:	hlt    
  43b4ed:	aaa    
  43b4ee:	xlat   BYTE PTR ds:[ebx]
  43b4ef:	cli    
  43b4f0:	mov    edi,DWORD PTR [eax]
  43b4f2:	and    al,0xaa
  43b4f4:	sbb    al,0x85
  43b4f6:	fwait
  43b4f7:	or     edx,DWORD PTR [esi-0x634144a6]
  43b4fd:	les    ecx,FWORD PTR [edx-0x26]
  43b500:	cmp    eax,0x6a13c4ff
  43b505:	jbe    0x43b4ef
  43b507:	pop    eax
  43b508:	mov    DWORD PTR [ebx+0x8],edx
  43b50b:	push   cs
  43b50c:	pop    es
  43b50d:	imul   DWORD PTR [ecx+0x567df20c]
  43b513:	rcl    esp,1
  43b515:	dec    BYTE PTR [ebp-0x7]
  43b518:	xor    BYTE PTR [edx+0x265f3a3d],cl
  43b51e:	jl     0x43b4bd
  43b520:	ficom  DWORD PTR [esi+eiz*4-0x6]
  43b524:	and    BYTE PTR [ebp-0x41],dh
  43b527:	faddp  st(0),st
  43b529:	pop    eax
  43b52a:	cld    
  43b52b:	push   ebp
  43b52c:	imul   DWORD PTR [edx+0x1d9ef13e]
  43b532:	imul   esp,DWORD PTR [eax],0x7888decf
  43b538:	inc    esi
  43b539:	add    BYTE PTR [eax],al
  43b53b:	add    BYTE PTR [eax],al
  43b53d:	add    BYTE PTR [eax],al
  43b53f:	add    BYTE PTR [esi+0x1c],ch
  43b542:	mov    ds:0x80b55,eax
  43b547:	add    BYTE PTR [eax],al
  43b549:	add    BYTE PTR [eax],al
  43b54b:	add    BYTE PTR [ebx],cl
  43b54d:	or     BYTE PTR [eax],al
  43b54f:	add    BYTE PTR [ecx+0x0],dl
  43b552:	es jl  0x43b555
  43b555:	add    dh,BYTE PTR [esi]
  43b557:	or     BYTE PTR [eax],al
  43b559:	add    BYTE PTR [esi],cl
  43b55b:	dec    ebx
  43b55c:	add    BYTE PTR ds:0xbe1b8fe4,bh
  43b562:	idiv   DWORD PTR [eax+eiz*2+0x24]
  43b566:	cs mov bl,0x41
  43b569:	push   0x69
  43b56b:	sub    al,0x2e
  43b56d:	stc    
  43b56e:	dec    eax
  43b56f:	mov    ch,0xda
  43b571:	jne    0x43b5d9
  43b573:	popa   
  43b574:	mov    cx,0x6cfe
  43b578:	fidiv  WORD PTR [ecx+0x46]
  43b57b:	mov    eax,ds:0xc16e39c6
  43b580:	nop
  43b581:	and    DWORD PTR ds:0x712db5c8,edx
  43b587:	hlt    
  43b588:	inc    ebp
  43b589:	cmp    BYTE PTR [ebx-0x6c],dl
  43b58c:	inc    edx
  43b58d:	dec    esp
  43b58e:	mov    bl,0x45
  43b590:	add    al,0x38
  43b592:	pop    esp
  43b593:	inc    esp
  43b594:	lahf   
  43b595:	lock jne 0x43b57f
  43b598:	popf   
  43b599:	lds    ebp,FWORD PTR [edx-0x3334b780]
  43b59f:	sbb    ebx,esp
  43b5a1:	push   es
  43b5a2:	inc    ebp
  43b5a3:	(bad)  
  43b5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b5a5:	adc    eax,0x300458ee
  43b5aa:	aaa    
  43b5ab:	dec    ecx
  43b5ac:	ret    
  43b5ad:	dec    esp
  43b5ae:	push   0xbbbb410f
  43b5b3:	mov    ah,BYTE PTR [eax+0x72337015]
  43b5b9:	add    BYTE PTR [ecx],ah
  43b5bb:	ins    DWORD PTR es:[edi],dx
  43b5bc:	xchg   esi,ecx
  43b5be:	in     al,dx
  43b5bf:	mov    ah,0x51
  43b5c1:	and    BYTE PTR [esp+ebx*2],0xa8
  43b5c5:	lods   al,BYTE PTR ds:[esi]
  43b5c6:	mov    al,0x37
  43b5c8:	ds mov esp,0x2180cd40
  43b5ce:	sti    
  43b5cf:	out    0x74,al
  43b5d1:	lods   al,BYTE PTR ds:[esi]
  43b5d2:	loopne 0x43b5c9
  43b5d4:	mul    BYTE PTR [edx+0x7b102206]
  43b5da:	jnp    0x43b564
  43b5dc:	sub    BYTE PTR [ebp-0x3e],0xa0
  43b5e0:	sbb    DWORD PTR [edi+0x1eac7dba],ebp
  43b5e6:	mov    DWORD PTR [edi-0x530d127b],ebx
  43b5ec:	adc    eax,0xfdd2dbd0
  43b5f1:	inc    esi
  43b5f2:	mov    eax,0xf4a43d80
  43b5f7:	mov    ds:0x3e2a3a67,eax
  43b5fc:	sub    BYTE PTR [ecx-0x5755e78d],ah
  43b602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b603:	dec    ebx
  43b604:	out    0x27,eax
  43b606:	push   0x2a
  43b608:	shr    BYTE PTR [edx],0x7c
  43b60b:	push   edx
  43b60c:	inc    ecx
  43b60d:	dec    edi
  43b60e:	ret    
  43b60f:	xchg   ebx,eax
  43b610:	and    eax,0x526c28e4
  43b615:	aam    0x24
  43b617:	popf   
  43b618:	imul   ecx,DWORD PTR [edi+0x8],0x2024a7b
  43b61f:	push   cs
  43b620:	cmp    al,0x2e
  43b622:	xchg   edx,eax
  43b623:	sub    al,0xa3
  43b625:	(bad)  
  43b626:	fst    QWORD PTR [esi]
  43b628:	loopne 0x43b632
  43b62a:	(bad)  
  43b62b:	xor    ah,dl
  43b62d:	cli    
  43b62e:	loopne 0x43b62d
  43b630:	repz repz (bad) 
  43b633:	sti    
  43b634:	stc    
  43b635:	clc    
  43b636:	cmc    
  43b637:	push   cs
  43b638:	test   eax,0xade287cf
  43b63d:	mov    al,0x1c
  43b63f:	xchg   esi,eax
  43b640:	or     eax,esp
  43b642:	test   DWORD PTR [esi],ebp
  43b644:	and    BYTE PTR [ebp+0x1fb54025],bh
  43b64a:	add    BYTE PTR [edi+0x21],dl
  43b64d:	mul    edi
  43b64f:	mov    ebp,0x91ef164
  43b654:	cwde   
  43b655:	and    DWORD PTR [ebx+0x110c2e9b],0xffffffe3
  43b65c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b65d:	jmp    0x18312eb4
  43b662:	xor    BYTE PTR [edx+0x7c],dl
  43b665:	or     BYTE PTR [esi],bh
  43b667:	mov    edi,0x54793a13
  43b66c:	sbb    edx,edi
  43b66e:	mov    esp,0x18a74ba2
  43b673:	mov    BYTE PTR [eax-0x6f],bh
  43b676:	ss out 0x79,eax
  43b679:	push   0x20c05e28
  43b67e:	adc    eax,0x57b53cff
  43b683:	jp     0x43b701
  43b685:	bound  eax,QWORD PTR [edi+ebx*8+0x5f]
  43b689:	jo     0x43b6d0
  43b68b:	sahf   
  43b68c:	fcomp  DWORD PTR ds:0xf5266840
  43b692:	mov    WORD PTR [ebp-0x39],es
  43b695:	push   edx
  43b696:	xchg   ebp,eax
  43b697:	mov    edx,0xf53a698c
  43b69c:	cmp    eax,0x83e36389
  43b6a1:	mov    al,0x2a
  43b6a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b6a4:	dec    edi
  43b6a5:	je     0x43b6a1
  43b6a7:	nop
  43b6a8:	mov    esp,0x6dda5806
  43b6ad:	mov    ah,0x8b
  43b6af:	lods   eax,DWORD PTR ds:[esi]
  43b6b0:	pop    es
  43b6b1:	sbb    BYTE PTR [esi+0x7c],ch
  43b6b4:	xor    ebp,DWORD PTR [edi+0x3de03511]
  43b6ba:	(bad)  
  43b6bb:	aam    0xa0
  43b6bd:	xor    BYTE PTR [ecx-0xa22b72],bh
  43b6c3:	js     0x43b711
  43b6c5:	les    esi,FWORD PTR [esp+eiz*2]
  43b6c8:	retf   0x28eb
  43b6cb:	jl     0x43b705
  43b6cd:	enter  0xd6c,0x22
  43b6d1:	xchg   edi,eax
  43b6d2:	in     al,dx
  43b6d3:	mov    bl,0xa6
  43b6d5:	dec    edi
  43b6d6:	ret    0xdd90
  43b6d9:	pop    ds
  43b6da:	pop    ebp
  43b6db:	jno    0x43b679
  43b6dd:	jno    0x43b731
  43b6df:	adc    dh,BYTE PTR [edx+esi*2+0x1ccff630]
  43b6e6:	push   esp
  43b6e7:	pop    ds
  43b6e8:	push   ebp
  43b6e9:	fsubr  DWORD PTR [ecx]
  43b6eb:	inc    esi
  43b6ec:	int3   
  43b6ed:	ss xchg esi,eax
  43b6ef:	push   ebp
  43b6f0:	shl    BYTE PTR [esi-0x4],cl
  43b6f3:	mov    bh,0xde
  43b6f5:	lods   al,BYTE PTR ds:[esi]
  43b6f6:	mov    bl,0xbd
  43b6f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b6f9:	js     0x43b738
  43b6fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b6fc:	xchg   edx,eax
  43b6fd:	cmp    BYTE PTR [ebp+0x5becc026],0x8
  43b704:	enter  0xba93,0xb6
  43b708:	sahf   
  43b709:	mov    ds:0xecfb26b4,al
  43b70e:	jge    0x43b712
  43b710:	adc    BYTE PTR [eax+ebx*8-0x6c],al
  43b714:	push   esi
  43b715:	sti    
  43b716:	adc    BYTE PTR ds:0xe78fe936,ch
  43b71c:	stos   BYTE PTR es:[edi],al
  43b71d:	xchg   edx,eax
  43b71e:	mov    al,0x34
  43b720:	gs pop edi
  43b722:	mov    eax,0x7db91c5b
  43b727:	cmc    
  43b728:	fdiv   QWORD PTR ds:0xd5fe5b8b
  43b72e:	cmp    eax,ebx
  43b730:	add    BYTE PTR gs:[eax+0xc6dabc0],ch
  43b737:	or     BYTE PTR [edx+0x43],dh
  43b73a:	and    al,0xb4
  43b73c:	les    ecx,FWORD PTR [ebx-0x71]
  43b73f:	add    esp,edi
  43b741:	dec    ecx
  43b742:	cmp    al,0x48
  43b744:	push   0xffffff9d
  43b746:	mov    al,ds:0xe90e0540
  43b74b:	pop    ebx
  43b74c:	lock outs dx,BYTE PTR ds:[esi]
  43b74e:	adc    al,0x54
  43b750:	call   0x8d14:0x7e698b4b
  43b757:	cli    
  43b758:	pop    esi
  43b759:	ret    0x86d7
  43b75c:	cmp    bl,bh
  43b75e:	cmp    BYTE PTR [eax+0x59a0a261],al
  43b764:	mov    edi,0x875cc38d
  43b769:	fisub  WORD PTR [esi-0x53c1e0a6]
  43b76f:	jne    0x43b6f1
  43b771:	sbb    esp,DWORD PTR [edx+0x5a]
  43b774:	push   0x968f35a8
  43b779:	sub    BYTE PTR [eax+0x31b0501],cl
  43b77f:	push   0x74
  43b781:	fmul   QWORD PTR [ebp+esi*8-0x6e]
  43b785:	cwde   
  43b786:	cmp    al,dl
  43b788:	push   ecx
  43b789:	pop    edi
  43b78a:	shl    BYTE PTR [eax+0x3a],1
  43b78d:	or     al,0xda
  43b78f:	dec    edx
  43b790:	push   es
  43b791:	je     0x43b7cf
  43b793:	inc    eax
  43b794:	xchg   esp,eax
  43b795:	or     BYTE PTR [ebp+esi*4+0x7c],bh
  43b799:	setg   dl
  43b79c:	sub    al,0x3c
  43b79e:	inc    esp
  43b79f:	mov    ch,0xbf
  43b7a1:	xchg   esi,eax
  43b7a2:	mov    esp,0x600c5615
  43b7a7:	test   eax,0xe5864317
  43b7ac:	outs   dx,DWORD PTR ds:[esi]
  43b7ad:	icebp  
  43b7ae:	push   esi
  43b7af:	test   ch,al
  43b7b1:	cli    
  43b7b2:	frstor [edi+esi*2]
  43b7b5:	fcomip st,st(4)
  43b7b7:	jmp    0x6bbfbe64
  43b7bc:	mov    esp,0x7d27242a
  43b7c1:	int3   
  43b7c2:	add    DWORD PTR [edx-0x3d],ecx
  43b7c5:	push   esp
  43b7c6:	push   cs
  43b7c7:	and    al,0xd4
  43b7c9:	outs   dx,DWORD PTR ds:[esi]
  43b7ca:	je     0x43b820
  43b7cc:	mov    ebp,0xcaedd5ff
  43b7d1:	xchg   esp,eax
  43b7d2:	jle    0x43b76c
  43b7d4:	ret    0xf93d
  43b7d7:	popf   
  43b7d8:	and    BYTE PTR [ecx+0x47bcccc7],dh
  43b7de:	ds out 0x8d,al
  43b7e1:	fld    TBYTE PTR [edi]
  43b7e3:	add    cl,0xe0
  43b7e6:	sbb    DWORD PTR [ebx-0x42],0x22
  43b7ea:	das    
  43b7eb:	push   0xffffffcf
  43b7ed:	push   esi
  43b7ee:	add    al,0x18
  43b7f0:	jns    0x43b779
  43b7f2:	fisttp WORD PTR [edx-0x33]
  43b7f5:	sub    cl,cl
  43b7f7:	lods   al,BYTE PTR ds:[esi]
  43b7f8:	addr16 cs ret 0x61b0
  43b7fd:	repz inc esi
  43b7ff:	fcom   st(0)
  43b801:	sub    al,0x81
  43b803:	push   ebp
  43b804:	fdivr  st(7),st
  43b806:	add    eax,DWORD PTR [edx]
  43b808:	xlat   BYTE PTR ds:[ebx]
  43b809:	hlt    
  43b80a:	push   ecx
  43b80b:	xor    dh,BYTE PTR ds:0xfdbb69cd
  43b811:	icebp  
  43b812:	sbb    BYTE PTR [eax],al
  43b814:	rcr    DWORD PTR [eax],0x99
  43b817:	imul   ecx,DWORD PTR [edx-0x1f],0x63
  43b81b:	rcl    BYTE PTR [esi],0x54
  43b81e:	repz mov ds:0x2ea58d26,eax
  43b824:	in     al,0xfc
  43b826:	hlt    
  43b827:	dec    edi
  43b828:	ret    
  43b829:	aas    
  43b82a:	(bad)
  43b82e:	sti    
  43b82f:	inc    ebx
  43b830:	dec    edi
  43b831:	mov    dl,0xe1
  43b833:	jg     0x43b865
  43b835:	inc    edi
  43b836:	sub    al,0xd
  43b838:	jmp    0x43b7f8
  43b83a:	out    0x4,eax
  43b83c:	cmp    al,0xc9
  43b83e:	mov    edi,0xde92fb50
  43b843:	and    BYTE PTR [eax-0x73f23ab],al
  43b849:	fdivr  DWORD PTR [eax]
  43b84b:	pop    ebx
  43b84c:	dec    eax
  43b84d:	scas   eax,DWORD PTR es:[edi]
  43b84e:	shl    BYTE PTR [esi-0x25],cl
  43b851:	sbb    al,0x3d
  43b853:	xor    ah,BYTE PTR [ecx+ecx*1]
  43b856:	ror    BYTE PTR [eax+0x784075b3],cl
  43b85c:	pusha  
  43b85d:	or     eax,0x2da759c5
  43b862:	popa   
  43b863:	rcl    BYTE PTR fs:[ebp-0x52],0xc7
  43b868:	je     0x43b8de
  43b86a:	sbb    al,0x60
  43b86c:	or     al,0xa4
  43b86e:	int3   
  43b86f:	mov    ch,bl
  43b871:	jbe    0x43b8b3
  43b873:	dec    ecx
  43b874:	test   al,0x30
  43b876:	inc    DWORD PTR [ebx+0x4c]
  43b879:	div    BYTE PTR [esi-0x63]
  43b87c:	cmp    BYTE PTR [esp+edx*8],cl
  43b87f:	xor    al,0x14
  43b881:	and    dh,BYTE PTR [ebx]
  43b883:	sar    BYTE PTR [edx+eiz*1-0x7629878c],1
  43b88a:	test   BYTE PTR [eax+0x4d9490e6],cl
  43b890:	pushf  
  43b891:	mov    al,ds:0x9eaca894
  43b896:	push   cs
  43b897:	cmp    al,0x40
  43b899:	loope  0x43b8e3
  43b89b:	dec    esp
  43b89c:	push   0x60e35854
  43b8a1:	fs ret 0x702c
  43b8a5:	je     0x43b882
  43b8a7:	jl     0x43b829
  43b8a9:	sbb    cl,BYTE PTR [eax-0x676bee74]
  43b8af:	ss push ebx
  43b8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b8b2:	test   al,0x7b
  43b8b4:	mov    al,0xb4
  43b8b6:	inc    ebx
  43b8b7:	mov    esp,0xccc8b8c0
  43b8bc:	jp     0x43b8f5
  43b8be:	pop    esp
  43b8bf:	pusha  
  43b8c0:	pop    ebp
  43b8c1:	push   0x7874f26c
  43b8c6:	out    0x80,eax
  43b8c8:	test   BYTE PTR [edx],ah
  43b8ca:	mov    ds:0x9c679490,eax
  43b8cf:	mov    al,ds:0x84aca823
  43b8d4:	mov    ah,0xb8
  43b8d6:	push   ss
  43b8d7:	dec    esi
  43b8d8:	(bad)  
  43b8d9:	enter  0xd08f,0xd4
  43b8dd:	pushf  
  43b8de:	fsubr  st(0),st
  43b8e0:	and    al,ch
  43b8e2:	in     al,dx
  43b8e3:	pop    edx
  43b8e4:	sub    bh,al
  43b8e6:	cld    
  43b8e7:	jmp    0x949f4574
  43b8ec:	cwde   
  43b8ed:	enter  0xa4a0,0x2
  43b8f1:	xlat   BYTE PTR ds:[ebx]
  43b8f2:	mov    al,0xb4
  43b8f4:	sub    al,0xbc
  43b8f6:	shl    dh,0xc8
  43b8f9:	int3   
  43b8fa:	jbe    0x43b8d0
  43b8fc:	fdiv   DWORD PTR [esi+0x22]
  43b8ff:	in     al,0xe8
  43b901:	iret   
  43b902:	lock hlt 
  43b904:	(bad)  
  43b907:	jmp    0x1c18:0x58ba0c08
  43b90e:	mov    ch,0x24
  43b910:	sub    BYTE PTR [ebx-0x3f01474c],bh
  43b916:	les    esp,FWORD PTR [edx+0x36]
  43b919:	rcl    ah,1
  43b91b:	sbb    ebx,esp
  43b91d:	loopne 0x43b8c9
  43b91f:	call   0xf938b210
  43b924:	push   esi
  43b925:	cs add al,0x8
  43b928:	lods   eax,DWORD PTR ds:[esi]
  43b929:	adc    BYTE PTR [esi+edi*2],dl
  43b92c:	sbb    al,0x20
  43b92e:	or     al,0x28
  43b930:	sub    al,0x9a
  43b932:	in     eax,dx
  43b933:	cmp    BYTE PTR [esp+eiz*2],bh
  43b936:	inc    esp
  43b937:	dec    eax
  43b938:	(bad)  
  43b939:	push   eax
  43b93a:	fsubr  DWORD PTR [edx-0x48bd1b20]
  43b940:	lock hlt 
  43b942:	pop    edx
  43b943:	cld    
  43b944:	add    BYTE PTR [ebp+0x8],cl
  43b947:	or     al,0x7d
  43b949:	adc    al,0x18
  43b94b:	mov    dh,0xab
  43b94d:	and    al,0x28
  43b94f:	std    
  43b950:	xor    BYTE PTR [ebx*1+0x4836403c],dh
  43b957:	dec    esp
  43b958:	cli    
  43b959:	lods   al,BYTE PTR ds:[esi]
  43b95a:	pop    eax
  43b95b:	pop    esp
  43b95c:	xchg   esi,eax
  43b95d:	fs push 0xfe747008
  43b963:	jl     0x43b969
  43b965:	mov    ds:0x80141064,al
  43b96a:	sbb    al,0x20
  43b96c:	xor    ch,BYTE PTR [eax]
  43b96e:	sub    al,0xe4
  43b970:	xor    al,0x38
  43b972:	xchg   esi,eax
  43b973:	in     al,0x44
  43b975:	dec    eax
  43b976:	adc    BYTE PTR [eax+0x54],dl
  43b979:	xchg   esp,eax
  43b97a:	pop    esp
  43b97b:	pusha  
  43b97c:	cmp    DWORD PTR [eax+0x6c],ebp
  43b97f:	ficom  DWORD PTR [ecx]
  43b981:	js     0x43b9ff
  43b983:	test   BYTE PTR ss:[eax-0xb6b6fe2],cl
  43b98a:	pushf  
  43b98b:	mov    al,ds:0x34305c0e
  43b990:	jo     0x43b9ce
  43b992:	inc    eax
  43b993:	adc    al,0x48
  43b995:	dec    esp
  43b996:	lods   eax,DWORD PTR ds:[esi]
  43b997:	push   esp
  43b998:	pop    eax
  43b999:	test   BYTE PTR [ebp+0x70d56864],0x74
  43b9a0:	mov    ds:0x88da807c,al
  43b9a5:	mov    WORD PTR [edx],?
  43b9a7:	sbb    DWORD PTR [eax-0x575b1964],0x1fb4b0fb
  43b9b1:	mov    esp,0xcc456ec0
  43b9b6:	push   esp
  43b9b7:	lds    ebx,FWORD PTR [eax+eiz*2-0x20]
  43b9bb:	push   0x7874e06c
  43b9c0:	es pop eax
  43b9c2:	test   BYTE PTR [eax+0x79949027],cl
  43b9c8:	jecxz  0x43b9f6
  43b9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b9cb:	test   al,0x10
  43b9cd:	in     eax,0xb4
  43b9cf:	mov    eax,0xc2c4c06f
  43b9d4:	int3   
  43b9d5:	shl    BYTE PTR [ebx],1
  43b9d7:	fcomp  st(4)
  43b9d9:	add    al,0xb1
  43b9db:	call   0xf93862cc
  43b9e0:	test   DWORD PTR [eax+ecx*4+0x2b949034],eax
  43b9e7:	leave  
  43b9e8:	mov    al,ds:0xb0aceda4
  43b9ed:	mov    dl,0xb8
  43b9ef:	mov    esp,0xe0c8c410
  43b9f4:	test   esp,edx
  43b9f6:	fadd   st,st(2)
  43b9f8:	loopne 0x43b9de
  43b9fa:	addr16 in al,dx
  43b9fc:	lock ds clc 
  43b9ff:	cld    
  43ba00:	aas    
  43ba01:	push   ecx
  43ba02:	or     BYTE PTR [edi+ebx*1],cl
  43ba05:	adc    al,0x18
  43ba07:	push   ds
  43ba08:	and    BYTE PTR [eax+0x17b4b06d],ch
  43ba0e:	jmp    0xccb97ed3
  43ba13:	rcl    bh,1
  43ba15:	fcomp  st(4)
  43ba17:	loope  0x43b9fd
  43ba19:	call   0xf938601d
  43ba1e:	jbe    0x43ba20
  43ba20:	add    al,0x63
  43ba22:	or     al,0x10
  43ba24:	sbb    BYTE PTR cs:[ecx+esi*4],bl
  43ba28:	jno    0x43ba52
  43ba2a:	sub    al,0x21
  43ba2c:	xor    al,0x38
  43ba2e:	jge    0x43ba70
  43ba30:	inc    esp
  43ba31:	pop    es
  43ba32:	rcl    ah,1
  43ba34:	mov    edi,0x34e4e089
  43ba39:	in     al,dx
  43ba3a:	lock push ds
  43ba3c:	clc    
  43ba3d:	cld    
  43ba3e:	xchg   edi,eax
  43ba3f:	add    al,0x8
  43ba41:	inc    BYTE PTR [ebp+0x14]
  43ba44:	sbb    bl,dl
  43ba46:	and    BYTE PTR [esi+eiz*8],ah
  43ba49:	sub    al,0x30
  43ba4b:	les    edi,FWORD PTR [eax]
  43ba4d:	cmp    al,0xf4
  43ba4f:	adc    DWORD PTR [eax+0x4c],ecx
  43ba52:	mov    dh,0x54
  43ba54:	pop    eax
  43ba55:	das    
  43ba56:	pusha  
  43ba57:	fs (bad) 
  43ba59:	ins    BYTE PTR es:[edi],dx
  43ba5a:	jo     0x43ba34
  43ba5c:	test   eax,0xc7c0400
  43ba61:	adc    BYTE PTR [esi],dh
  43ba63:	sbb    BYTE PTR [edi+eax*8],bl
  43ba66:	and    al,0x28
  43ba68:	and    DWORD PTR [ebp+0x34],0x44400938
  43ba6f:	int    0x4c
  43ba71:	push   eax
  43ba72:	mov    dh,0x58
  43ba74:	pop    esp
  43ba75:	cdq    
  43ba76:	xor    DWORD PTR [eax+0x6c],ebp
  43ba79:	inc    edi
  43ba7a:	je     0x43baf4
  43ba7c:	xchg   esp,eax
  43ba7d:	add    BYTE PTR [esp+edx*4-0x321e6f74],0x9c
  43ba85:	and    al,0xf7
  43ba87:	sub    al,0x30
  43ba89:	pop    edx
  43ba8a:	cmp    BYTE PTR [edi+eax*1],bh
  43ba8d:	inc    esp
  43ba8e:	dec    eax
  43ba8f:	mov    ebp,0x46585405
  43ba94:	pusha  
  43ba95:	sbb    DWORD PTR fs:[eax+esi*2+0x69],ebp
  43ba9a:	js     0x43bb18
  43ba9c:	test   eax,0x558c88d1
  43baa1:	xchg   esp,eax
  43baa2:	cwde   
  43baa3:	adc    eax,0xacc7a4a0
  43baa8:	mov    al,0x3
  43baaa:	in     eax,dx
  43baab:	mov    esp,0x504ca6c0
  43bab0:	pop    edx
  43bab1:	pop    eax
  43bab2:	pop    esp
  43bab3:	retf   0x6864
  43bab6:	je     0x43badd
  43bab8:	je     0x43bb32
  43baba:	ret    0x8480
  43babd:	xchg   ebx,eax
  43babe:	mov    WORD PTR [eax-0x9636798],ss
  43bac4:	icebp  
  43bac5:	test   al,0xac
  43bac7:	mov    ?,WORD PTR [eax+edi*4+0xec4c0f7]
  43bace:	int3   
  43bacf:	rol    BYTE PTR [esi],1
  43bad1:	(bad)  
  43bad2:	fsubr  st(0),st
  43bad4:	popf   
  43bad5:	call   0x7cbc8bc6
  43bada:	sbb    al,BYTE PTR [eax+ecx*4-0x676b3aa9]
  43bae1:	pop    esp
  43bae2:	mov    al,ds:0xb0ac56a4
  43bae7:	int3   
  43bae8:	mov    eax,0xc8910dbc
  43baed:	int3   
  43baee:	mov    dl,ah
  43baf0:	fsubr  DWORD PTR [eax]
  43baf2:	loopne 0x43bad8
  43baf4:	imul   esp
  43baf6:	lock sub DWORD PTR [ebp+0x8ac00fc],ebp
  43bafd:	or     al,0x23
  43baff:	adc    al,0x18
  43bb01:	sub    BYTE PTR [eax+ebp*4-0x474b1a55],ah
  43bb08:	jnp    0x43baca
  43bb0a:	(bad)  
  43bb0b:	stc    
  43bb0c:	int3   
  43bb0d:	shl    BYTE PTR [ebp-0x28],1
  43bb10:	fdivr  st(2),st
  43bb12:	mov    cl,0xe8
  43bb14:	in     al,dx
  43bb15:	loopne 0x43bb0b
  43bb17:	clc    
  43bb18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bb19:	add    BYTE PTR [edi+ebp*1],al
  43bb1c:	or     al,0x10
  43bb1e:	xchg   esp,eax
  43bb1f:	dec    ebp
  43bb20:	sbb    al,0x20
  43bb22:	enter  0x2c28,0x6f
  43bb26:	xor    al,0x38
  43bb28:	pop    esp
  43bb29:	inc    eax
  43bb2a:	enter  0x859d,0xd4
  43bb2e:	fsub   DWORD PTR [ebx-0x13be1b20]
  43bb34:	lock in eax,dx
  43bb36:	clc    
  43bb37:	cld    
  43bb38:	mov    ch,0x51
  43bb3a:	or     BYTE PTR [edx+ebx*2],cl
  43bb3d:	adc    al,0x18
  43bb3f:	adc    DWORD PTR [eax],esp
  43bb41:	and    al,0x5
  43bb43:	sub    al,0x30
  43bb45:	shr    DWORD PTR [ebp+0x3c],1
  43bb48:	inc    eax
  43bb49:	ds dec eax
  43bb4b:	dec    esp
  43bb4c:	iret   
  43bb4d:	push   esp
  43bb4e:	pop    eax
  43bb4f:	iret   
  43bb50:	pusha  
  43bb51:	mov    eax,fs:0x60f8f439
  43bb57:	add    BYTE PTR [edi+eiz*8],al
  43bb5a:	or     al,0x10
  43bb5c:	mov    ah,0x18
  43bb5e:	sbb    al,0xc0
  43bb60:	jno    0x43bb8a
  43bb62:	sub    al,0xb
  43bb64:	xor    al,0x38
  43bb66:	jno    0x43bba8
  43bb68:	inc    esp
  43bb69:	out    0x4c,al
  43bb6b:	push   eax
  43bb6c:	jle    0x43bb7b
  43bb6e:	pop    esp
  43bb6f:	pusha  
  43bb70:	xchg   ecx,eax
  43bb71:	push   0x7874c06c
  43bb76:	mov    ah,0x80
  43bb78:	test   BYTE PTR [ebx-0x27],ah
  43bb7b:	nop
  43bb7c:	xchg   esp,eax
  43bb7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bb7e:	and    BYTE PTR [esp+edx*1],ah
  43bb81:	sub    al,0x30
  43bb83:	mov    bh,0x38
  43bb85:	cmp    al,0x13
  43bb87:	adc    DWORD PTR [eax+0x4c],ecx
  43bb8a:	leave  
  43bb8b:	push   esp
  43bb8c:	pop    eax
  43bb8d:	cmp    eax,0x6c7f6460
  43bb92:	jo     0x43bbf3
  43bb94:	sub    eax,0x8880807c
  43bb99:	mov    esi,gs
  43bb9b:	xchg   esp,eax
  43bb9c:	cwde   
  43bb9d:	mov    al,es:0xb0f9dfa4
  43bba3:	mov    ah,0x6e
  43bba5:	mov    esp,0x504c6e44
  43bbaa:	mov    ch,0x58
  43bbac:	pop    esp
  43bbad:	or     DWORD PTR [ecx],esi
  43bbaf:	push   0x7874646c
  43bbb4:	pop    ds
  43bbb5:	add    BYTE PTR [ebp+ebx*8-0x724a6f74],0x9c
  43bbbd:	mov    al,ds:0xcdaca8a8
  43bbc2:	mov    ah,0xb8
  43bbc4:	fbld   TBYTE PTR [ebx-0x539637fe]
  43bbca:	test   al,0x20
  43bbcc:	pop    eax
  43bbcd:	xchg   edi,eax
  43bbce:	xchg   ebx,eax
  43bbcf:	push   es
  43bbd0:	jo     0x43bbbf
  43bbd2:	add    eax,DWORD PTR [edi]
  43bbd4:	jbe    0x43bbdf
  43bbd6:	jp     0x43bc56
  43bbd8:	outs   dx,DWORD PTR ds:[esi]
  43bbd9:	xchg   esp,eax
  43bbda:	xchg   ebp,eax
  43bbdb:	test   ebx,0xdfc31572
  43bbe1:	push   0xffffffb8
  43bbe3:	or     eax,0x98590105
  43bbe8:	loopne 0x43bbce
  43bbea:	mov    eax,0xe9e5b0dc
  43bbef:	out    dx,al
  43bbf0:	repz xchg ebx,eax
  43bbf2:	lahf   
  43bbf3:	xor    al,BYTE PTR [eax]
  43bbf5:	lods   eax,DWORD PTR ds:[esi]
  43bbf6:	and    esp,DWORD PTR [edi]
  43bbf8:	inc    esi
  43bbf9:	in     eax,0x62
  43bbfb:	pop    esi
  43bbfc:	inc    ebx
  43bbfd:	test   al,0xb5
  43bbff:	arpl   WORD PTR [di],cx
  43bc02:	fisubr WORD PTR [ebx+0x6f]
  43bc05:	test   esp,ecx
  43bc07:	mov    ss:0x2e7a30ae,al
  43bc0d:	and    ah,BYTE PTR [ebx-0x10]
  43bc10:	mov    cl,0x7a
  43bc12:	jle    0x43bc33
  43bc14:	cdq    
  43bc15:	rol    ebp,0x99
  43bc18:	adc    al,0x58
  43bc1a:	popa   
  43bc1b:	pop    ebp
  43bc1c:	fisubr WORD PTR [edi+0x38dbcad6]
  43bc22:	aad    0x9d
  43bc24:	xchg   ecx,eax
  43bc25:	jle    0x43bc62
  43bc27:	xchg   ebx,eax
  43bc28:	lahf   
  43bc29:	push   edx
  43bc2a:	loopne 0x43bc59
  43bc2c:	sbb    BYTE PTR [ebx+ecx*1],bl
  43bc2f:	call   DWORD PTR [ebp+0x51]
  43bc32:	inc    ecx
  43bc33:	add    al,0xe4
  43bc35:	fadd   st,st(4)
  43bc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bc38:	jg     0x43bbf8
  43bc3a:	cmp    BYTE PTR [ebx+0x28],0xd1
  43bc3e:	lahf   
  43bc3f:	fwait
  43bc40:	jge    0x43bc18
  43bc42:	(bad)  
  43bc44:	imul   ecx,DWORD PTR [edi+ebp*8-0x10],0xfffffffc
  43bc49:	seta   BYTE PTR [esi]
  43bc4c:	sahf   
  43bc4d:	adc    al,0xf4
  43bc4f:	outs   dx,BYTE PTR ds:[esi]
  43bc50:	cmp    al,0xc0
  43bc52:	lahf   
  43bc53:	push   ebx
  43bc54:	mov    ebx,0xde1861a7
  43bc59:	fstp   st(1)
  43bc5b:	leave  
  43bc5c:	xor    BYTE PTR [ebx-0x11c3fa59],ah
  43bc62:	bound  ebp,QWORD PTR [esi+0x0]
  43bc65:	cmp    ah,BYTE PTR [edx+0x6e]
  43bc68:	xor    BYTE PTR [eax+0x3e],ah
  43bc6b:	push   edi
  43bc6c:	push   ebx
  43bc6d:	push   cs
  43bc6e:	xor    eax,0x84758b8f
  43bc73:	mov    al,BYTE PTR [eax-0x28]
  43bc76:	fwait
  43bc77:	push   ebx
  43bc78:	adc    al,0x10
  43bc7a:	inc    eax
  43bc7b:	sub    al,0x6c
  43bc7d:	xchg   ecx,eax
  43bc7e:	popf   
  43bc7f:	ins    DWORD PTR es:[edi],dx
  43bc80:	mov    ah,0xa1
  43bc82:	lods   eax,DWORD PTR ds:[esi]
  43bc83:	popf   
  43bc84:	push   eax
  43bc85:	pusha  
  43bc86:	test   eax,0x196c99ad
  43bc8b:	sbb    eax,0xdceb7692
  43bc90:	in     eax,0xf7
  43bc92:	mov    ecx,0x8dc7f2bd
  43bc97:	pushf  
  43bc98:	mov    ch,0x8e
  43bc9a:	xchg   edi,eax
  43bc9b:	test   al,0xb4
  43bc9d:	mov    esp,0x8f448730
  43bca2:	fld    DWORD PTR [edx]
  43bca4:	ja     0x43bd21
  43bca6:	sbb    al,BYTE PTR ds:0xedaf68a7
  43bcac:	sub    ah,BYTE PTR [eax+0x64]
  43bcaf:	mov    al,0xac
  43bcb1:	push   ds
  43bcb2:	mov    WORD PTR [esi],es
  43bcb4:	mov    ds:0xaea59939,eax
  43bcb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bcba:	ss mov al,0x2e
  43bcbd:	xchg   edi,eax
  43bcbe:	or     edi,eax
  43bcc0:	ret    
  43bcc1:	mov    ch,0xc2
  43bcc4:	aam    0xca
  43bcc6:	clc    
  43bcc7:	(bad)  
  43bcc8:	call   0x9b3328b9
  43bccd:	jl     0x43bd31
  43bccf:	pop    ebx
  43bcd0:	mov    ch,0x67
  43bcd2:	jnp    0x43bd2d
  43bcd4:	mov    esi,0xe683a0bb
  43bcd9:	lds    eax,FWORD PTR [edx]
  43bcdb:	push   es
  43bcdc:	(bad)  
  43bcdd:	jno    0x43bc94
  43bcdf:	les    edi,FWORD PTR [ebp-0x2e22b0da]
  43bce5:	into   
  43bce6:	sti    
  43bce7:	addr16 call 0xd4aeaa5c
  43bced:	rcr    BYTE PTR [eax+0x70],1
  43bcf0:	adc    dl,BYTE PTR [eax-0x444d5372]
  43bcf6:	mov    edi,0xb4de819e
  43bcfb:	(bad)  
  43bcfc:	pusha  
  43bcfd:	jb     0x43bc9d
  43bcff:	xchg   edx,eax
  43bd00:	js     0x43bd40
  43bd02:	je     0x43bcdc
  43bd04:	jl     0x43bcc1
  43bd06:	pop    ds
  43bd07:	mov    edx,0xc30254be
  43bd0c:	cld    
  43bd0d:	cmp    esi,DWORD PTR [edx+0x45]
  43bd10:	fcmovb st,st(6)
  43bd12:	mov    ds:0x9720af79,eax
  43bd17:	push   ebp
  43bd18:	loop   0x43bd33
  43bd1a:	xchg   ecx,eax
  43bd1b:	out    dx,al
  43bd1c:	mov    ebx,0xd2fc827
  43bd21:	jmp    0xec6c:0x95bef3f7
  43bd28:	je     0x43bd11
  43bd2a:	outs   dx,DWORD PTR ds:[esi]
  43bd2b:	scas   eax,DWORD PTR es:[edi]
  43bd2c:	push   ebx
  43bd2d:	mov    ds:0xc518ddfd,al
  43bd32:	mov    eax,ds:0xc51f9174
  43bd37:	shl    ecx,0x18
  43bd3a:	cmp    BYTE PTR [eax+eiz*2],bl
  43bd3d:	add    al,0x28
  43bd3f:	mov    al,0xac
  43bd41:	mov    bh,0x47
  43bd43:	pop    esp
  43bd44:	push   ebp
  43bd45:	pop    ecx
  43bd46:	xchg   ebp,eax
  43bd47:	cmp    BYTE PTR [edi+0x4ed4aa3],ch
  43bd4d:	bound  esp,QWORD PTR [esi-0x3c]
  43bd50:	stos   BYTE PTR es:[edi],al
  43bd51:	rcl    edi,cl
  43bd53:	inc    eax
  43bd54:	inc    ecx
  43bd55:	add    BYTE PTR [eax],al
  43bd57:	add    ch,dh
  43bd59:	adc    eax,0x7fd4238
  43bd5e:	add    BYTE PTR [eax],al
  43bd60:	add    BYTE PTR [eax],al
  43bd62:	add    BYTE PTR [eax],al
  43bd64:	std    
  43bd65:	pop    es
  43bd66:	add    BYTE PTR [eax],al
  43bd68:	push   edx
  43bd69:	add    BYTE PTR [esi],ah
  43bd6b:	jl     0x43bd6d
  43bd6d:	add    dh,BYTE PTR [esi]
  43bd6f:	or     BYTE PTR [eax],al
  43bd71:	add    BYTE PTR [eax],dl
  43bd73:	dec    ebx
  43bd74:	add    BYTE PTR [ecx+0x73aeb24e],cl
  43bd7a:	shl    DWORD PTR ds:0x675a2419,0x7a
  43bd81:	jle    0x43bd2f
  43bd83:	loop   0x43bd91
  43bd85:	or     BYTE PTR [eax-0x2c],cl
  43bd88:	test   BYTE PTR [eax+eax*1],cl
  43bd8b:	in     al,dx
  43bd8c:	mov    BYTE PTR [ebx+0x3ef56ca7],ch
  43bd92:	test   al,0xac
  43bd94:	cmp    ebp,edi
  43bd96:	arpl   WORD PTR [bx+si-0x4daf],dx
  43bd9b:	mov    fs,WORD PTR ss:[edi-0x37]
  43bd9f:	retf   
  43bda0:	iret   
  43bda1:	cmp    cl,dl
  43bda3:	push   esi
  43bda4:	pop    es
  43bda5:	or     ecx,edx
  43bda7:	xchg   ebp,eax
  43bda8:	sbb    DWORD PTR ds:0x5bb3fa5c,edx
  43bdae:	pop    edi
  43bdaf:	push   ss
  43bdb0:	and    ebp,edi
  43bdb2:	stc    
  43bdb3:	adc    BYTE PTR [ebp+0x1ed5c91c],0x57
  43bdba:	gs pop ecx
  43bdbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bdbd:	inc    ecx
  43bdbe:	mov    esp,0xbabcb6b2
  43bdc3:	mov    edi,0xd5ae4cbb
  43bdc8:	or     BYTE PTR [eax+eax*8],cl
  43bdcb:	xchg   esp,eax
  43bdcc:	push   esp
  43bdcd:	push   eax
  43bdce:	jo     0x43bddc
  43bdd0:	cmp    al,0xe3
  43bdd2:	pop    ds
  43bdd3:	mov    eax,ds:0x94382432
  43bdd8:	sar    DWORD PTR [edi-0xf],cl
  43bddb:	cmc    
  43bddc:	or     bl,BYTE PTR [edi+0x13]
  43bddf:	pop    ss
  43bde0:	mov    eax,0x88843ee1
  43bde5:	dec    esp
  43bde6:	adc    BYTE PTR [ebx+0x57],bl
  43bde9:	fsubr  st(5),st
  43bdeb:	outs   dx,BYTE PTR ds:[esi]
  43bdec:	jp     0x43be6c
  43bdee:	dec    ebx
  43bdef:	aad    0xe1
  43bdf1:	sbb    eax,0xa830a984
  43bdf6:	lods   al,BYTE PTR ds:[esi]
  43bdf7:	call   0xa89513d0
  43bdfc:	pop    ebp
  43bdfd:	mov    ah,0x8
  43bdff:	add    al,0xdf
  43be01:	pop    ds
  43be02:	jb     0x43be82
  43be04:	int3   
  43be05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43be06:	adc    eax,0x914f0602
  43be0b:	leave  
  43be0c:	int    0xf0
  43be0e:	mov    dh,0x9b
  43be10:	in     al,dx
  43be11:	adc    BYTE PTR [eax+edi*1],ah
  43be14:	repz out dx,eax
  43be16:	adc    al,0xfd
  43be18:	mov    edx,0xbe515b57
  43be1d:	pushw  0xffbc
  43be20:	jg     0x43bdcb
  43be22:	add    eax,0xd4985101
  43be27:	shl    al,1
  43be29:	cld    
  43be2a:	cld    
  43be2b:	jmp    ebx
  43be2d:	ror    ch,cl
  43be2f:	adc    ah,ch
  43be31:	add    al,0xcb
  43be33:	and    ecx,DWORD PTR [edi+0x4b]
  43be36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43be37:	std    
  43be38:	mov    bh,0xb3
  43be3a:	sub    BYTE PTR [ecx],bl
  43be3c:	xchg   edx,eax
  43be3d:	jo     0x43bebb
  43be3f:	mov    ah,0x8c
  43be41:	(bad)  
  43be43:	sar    dl,1
  43be45:	loope  0x43be5f
  43be47:	and    al,0x77
  43be49:	mov    edi,0xadf4574b
  43be4e:	push   cs
  43be4f:	jle    0x43becb
  43be51:	hlt    
  43be52:	mov    gs,WORD PTR ds:0x67661829
  43be58:	inc    eax
  43be59:	dec    esp
  43be5a:	in     al,0x9c
  43be5c:	imul   esp,DWORD PTR [ebp+0x3c],0x5551a3fa
  43be63:	bound  edi,QWORD PTR [edi+0x2b]
  43be66:	das    
  43be67:	pusha  
  43be68:	cmp    ch,0x90
  43be6b:	xchg   esp,eax
  43be6c:	cmp    BYTE PTR [ecx+eax*4-0x7b],bl
  43be70:	or     BYTE PTR ds:0x82575b88,dl
  43be76:	icebp  
  43be77:	clc    
  43be78:	hlt    
  43be79:	sub    al,0x93
  43be7b:	dec    ebx
  43be7c:	sbb    bl,BYTE PTR [esi]
  43be7e:	add    al,0x22
  43be80:	bound  esp,QWORD PTR [esi+0x50]
  43be83:	add    BYTE PTR [esi],ah
  43be85:	int3   
  43be86:	lock pop edi
  43be88:	ret    
  43be89:	in     al,0xf8
  43be8b:	je     0x43bf00
  43be8d:	inc    esi
  43be8f:	ret    0x4604
  43be92:	jle    0x43bf0e
  43be94:	sbb    al,0xe7
  43be96:	or     eax,0xe75b9490
  43be9b:	sub    al,0x28
  43be9d:	inc    eax
  43be9e:	ins    BYTE PTR es:[edi],dx
  43be9f:	je     0x43be33
  43bea1:	mov    ?,ebx
  43bea3:	and    DWORD PTR [edx],eax
  43bea5:	ds fs aam 0x8e
  43bea9:	jnp    0x43bf2a
  43beab:	outs   dx,BYTE PTR ds:[esi]
  43beac:	popa   
  43bead:	pop    ebx
  43beae:	pop    edi
  43beaf:	mov    BYTE PTR [ecx],ah
  43beb1:	out    0x74,al
  43beb3:	js     0x43befc
  43beb5:	fwait
  43beb6:	xchg   esi,eax
  43beb7:	call   0x3086:0x82e2d4ac
  43bebe:	push   es
  43bebf:	inc    esi
  43bec0:	pop    edx
  43bec1:	push   esp
  43bec2:	dec    esp
  43bec3:	inc    edx
  43bec4:	sub    DWORD PTR ds:0x7276b7fa,ebp
  43beca:	js     0x43bf3c
  43becc:	mov    ah,BYTE PTR [eax-0x37033b54]
  43bed2:	les    ebx,FWORD PTR [eax+ebx*1+0x2f6e6a40]
  43bed9:	jmp    0x7a042e49
  43bede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bedf:	pusha  
  43bee0:	jl     0x43be79
  43bee2:	aaa    
  43bee3:	mov    esi,0xd6a8e482
  43bee8:	in     eax,0xe9
  43beea:	inc    ebp
  43beeb:	sub    BYTE PTR [ecx],dl
  43beed:	sbb    eax,0x7c30a18c
  43bef2:	js     0x43bf67
  43bef4:	xchg   ebx,eax
  43bef5:	rcl    ebp,1
  43bef7:	mov    al,0x46
  43bef9:	xor    ebx,DWORD PTR [ebx+0x27]
  43befc:	adc    edx,edi
  43befe:	add    al,0x18
  43bf00:	aam    0x53
  43bf02:	lahf   
  43bf03:	xlat   BYTE PTR ds:[ebx]
  43bf04:	rol    DWORD PTR [esi-0x766624b],cl
  43bf0a:	es mov bh,0x89
  43bf0d:	test   DWORD PTR ds:0xa0494d9c,ecx
  43bf13:	adc    eax,0x28fee2cc
  43bf18:	push   0x15
  43bf1a:	imul   eax,esp,0xb8bc2c81
  43bf20:	add    BYTE PTR [eax-0x4a],ch
  43bf23:	mov    dl,0xe8
  43bf25:	inc    eax
  43bf26:	or     al,BYTE PTR [eax]
  43bf28:	or     al,0xf
  43bf2a:	pop    es
  43bf2b:	out    dx,al
  43bf2c:	loop   0x43bf3a
  43bf2e:	fbstp  TBYTE PTR [ecx]
  43bf30:	jge    0x43bfab
  43bf32:	jmp    0xb6c0:0x3056528b
  43bf39:	outs   dx,BYTE PTR ds:[esi]
  43bf3a:	push   0xffffff8f
  43bf3c:	and    eax,0xccd8dcd8
  43bf41:	clc    
  43bf42:	pop    esi
  43bf43:	push   edx
  43bf44:	and    DWORD PTR ds:0xf0fc808c,0xffffff8c
  43bf4b:	sub    eax,0x367b5a29
  43bf50:	xor    ah,BYTE PTR [eax]
  43bf52:	js     0x43bfae
  43bf54:	xor    BYTE PTR [esp+ecx*1],ch
  43bf57:	sbb    al,0x9a
  43bf59:	out    0x44,al
  43bf5b:	pop    ds
  43bf5c:	mov    ebp,0x9b2be0e4
  43bf61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bf62:	cs in  al,dx
  43bf64:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  43bf66:	adc    BYTE PTR [ebx+ecx*8],dl
  43bf69:	daa    
  43bf6a:	aad    0xd1
  43bf6c:	adc    BYTE PTR [ebp-0x33ab979c],dh
  43bf72:	mov    ah,0x33
  43bf74:	das    
  43bf75:	xor    al,0x6
  43bf77:	sbb    eax,0x91de0f0b
  43bf7c:	in     eax,dx
  43bf7d:	jmp    0xeffffcda
  43bf82:	jecxz  0x43bfe5
  43bf84:	idiv   dh
  43bf86:	bnd jl 0x43bf18
  43bf89:	add    eax,edi
  43bf8b:	cld    
  43bf8c:	hlt    
  43bf8d:	mov    BYTE PTR [edx],ah
  43bf8f:	push   ds
  43bf90:	and    al,0x54
  43bf92:	outs   dx,BYTE PTR ds:[esi]
  43bf93:	test   DWORD PTR [ecx+0x2226f849],eax
  43bf99:	dec    eax
  43bf9a:	cmp    dl,0x1c
  43bf9d:	adc    ah,cl
  43bf9f:	mov    eax,0x766c6b67
  43bfa4:	jno    0x43bf34
  43bfa6:	mov    dh,BYTE PTR [edi-0x7b]
  43bfa9:	xchg   BYTE PTR [edx-0x2757770],al
  43bfaf:	shl    DWORD PTR [esi+0xb],0x99
  43bfb3:	test   DWORD PTR [esi+edx*2-0x1de0ece1],esi
  43bfba:	test   eax,0x95ce1ed
  43bfbf:	mov    ah,0xee
  43bfc1:	jmp    0x1d80:0xbdb9e567
  43bfc8:	rcl    BYTE PTR [ecx+0x2bfae8d],1
  43bfce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bfd0:	(bad)  
  43bfd1:	adc    eax,0x84615551
  43bfd6:	cmp    BYTE PTR [eax+ecx*8],bh
  43bfd9:	daa    
  43bfda:	ret    
  43bfdb:	dec    esp
  43bfdc:	inc    eax
  43bfdd:	not    edi
  43bfdf:	jns    0x43c05e
  43bfe1:	jo     0x43c039
  43bfe3:	dec    ebx
  43bfe4:	adc    eax,0x553356e9
  43bfe9:	dec    ecx
  43bfea:	xchg   esp,eax
  43bfeb:	xor    esp,ebp
  43bfed:	sub    ch,BYTE PTR cs:[edi-0x47dfdbdb]
  43bff4:	(bad)  
  43bff5:	addr16 pop edi
  43bff7:	push   ebx
  43bff8:	loope  0x43c060
  43bffa:	retf   0xdcc6
  43bffd:	fadd   st(6),st
  43bfff:	outs   dx,DWORD PTR ds:[esi]
  43c000:	imul   esp,ebp,0x66
  43c003:	adc    DWORD PTR ds:0x5e28cd00,edx
  43c009:	pop    edx
  43c00a:	pop    ds
  43c00b:	aad    0xf5
  43c00d:	icebp  
  43c00e:	test   al,0x6
  43c010:	dec    edi
  43c011:	pushf  
  43c012:	nop
  43c013:	in     al,dx
  43c014:	mov    eax,0x75cc171b
  43c019:	scas   al,BYTE PTR es:[edi]
  43c01a:	push   esp
  43c01b:	push   eax
  43c01c:	jecxz  0x43c089
  43c01e:	dec    ecx
  43c01f:	dec    ebp
  43c020:	lock lods eax,DWORD PTR ds:[esi]
  43c022:	add    BYTE PTR [ebp-0x77],dh
  43c025:	or     eax,0x141d0188
  43c02a:	add    cl,BYTE PTR [ebx]
  43c02c:	lahf   
  43c02d:	fwait
  43c02e:	dec    ebp
  43c02f:	not    dh
  43c031:	pop    esi
  43c032:	mov    esp,0x8e8af517
  43c037:	push   esp
  43c038:	adc    dh,BYTE PTR [eax+0x5034e0b4]
  43c03e:	lods   eax,DWORD PTR ds:[esi]
  43c03f:	mov    cl,0x76
  43c041:	cmp    esp,DWORD PTR [ebp-0x67]
  43c044:	add    al,0x21
  43c046:	mov    esp,0x6b42393d
  43c04b:	das    
  43c04c:	sub    ebp,DWORD PTR [eax]
  43c04e:	xor    ah,BYTE PTR [ecx]
  43c050:	test   BYTE PTR [eax+0x1c108b47],cl
  43c056:	dec    esp
  43c057:	clc    
  43c058:	test   al,0xe3
  43c05a:	pop    ebx
  43c05b:	mov    DWORD PTR [esi],edi
  43c05d:	cli    
  43c05e:	out    0xf4,al
  43c060:	aam    0xc6
  43c062:	arpl   dx,ax
  43c064:	lods   eax,DWORD PTR ds:[esi]
  43c065:	outs   dx,DWORD PTR ds:[esi]
  43c066:	ins    BYTE PTR es:[edi],dx
  43c067:	in     al,dx
  43c068:	sbb    BYTE PTR [eax-0x4a39aca4],bl
  43c06e:	inc    edi
  43c06f:	dec    edi
  43c070:	into   
  43c071:	cmp    al,0xcd
  43c073:	aas    
  43c074:	mov    edx,0x33a65db3
  43c079:	mov    ah,BYTE PTR [eax-0x27]
  43c07c:	add    eax,DWORD PTR [ebx]
  43c07e:	scas   al,BYTE PTR es:[edi]
  43c07f:	lds    edx,FWORD PTR [edi]
  43c081:	mov    ecx,0xd5588411
  43c086:	and    al,0x78
  43c088:	dec    esp
  43c089:	adc    BYTE PTR ds:0x35332c2a,ah
  43c08f:	pop    edi
  43c090:	bnd jmp 0x505e23b9
  43c096:	sub    DWORD PTR [ebx-0x5e],esi
  43c099:	xchg   DWORD PTR [ebp-0x6a],edi
  43c09c:	mov    ebx,0xab1a74c5
  43c0a1:	sub    ecx,ecx
  43c0a3:	outs   dx,BYTE PTR ds:[esi]
  43c0a4:	daa    
  43c0a5:	out    0x78,al
  43c0a7:	cwde   
  43c0a8:	push   es
  43c0a9:	(bad)  
  43c0aa:	outs   dx,BYTE PTR ds:[esi]
  43c0ab:	daa    
  43c0ac:	jmp    0x40677baf
  43c0b1:	fxch   st(2)
  43c0b3:	test   ecx,ebx
  43c0b5:	adc    al,0x91
  43c0b7:	and    DWORD PTR [edx-0x75ee109c],ebx
  43c0bd:	fwait
  43c0be:	ins    DWORD PTR es:[edi],dx
  43c0bf:	xchg   cl,bl
  43c0c1:	mov    BYTE PTR ss:[edi-0x37],ah
  43c0c5:	rcl    DWORD PTR [esi],cl
  43c0c7:	push   ebp
  43c0c8:	out    0x54,eax
  43c0ca:	push   ebx
  43c0cb:	lods   al,BYTE PTR ds:[esi]
  43c0cc:	mov    ebx,0x2cfd1544
  43c0d1:	imul   ebx,DWORD PTR [edi+edi*2],0xc288b3d0
  43c0d8:	cmp    edx,DWORD PTR [ebp+0x7831dfce]
  43c0de:	xchg   esi,eax
  43c0df:	das    
  43c0e0:	sbb    BYTE PTR [ebx-0x34cff3cd],ch
  43c0e6:	pushf  
  43c0e7:	push   edi
  43c0e8:	add    dl,bl
  43c0ea:	dec    eax
  43c0eb:	es (bad) 
  43c0ed:	js     0x43c116
  43c0ef:	rcr    BYTE PTR [edi+0x16a57b08],0x6f
  43c0f6:	and    DWORD PTR [ecx],eax
  43c0f8:	in     al,0xf4
  43c0fa:	adc    DWORD PTR [ebx-0x37],esp
  43c0fd:	push   esi
  43c0fe:	outs   dx,DWORD PTR ds:[esi]
  43c0ff:	les    ecx,FWORD PTR es:[edx+edi*8-0x50f514e]
  43c107:	xchg   edx,eax
  43c108:	xchg   edi,eax
  43c109:	shl    BYTE PTR [eax+0x354b87f5],cl
  43c10f:	(bad)  
  43c110:	aas    
  43c111:	add    BYTE PTR [ebx-0x2c],dl
  43c114:	xchg   edi,eax
  43c115:	adc    ah,dl
  43c117:	mov    WORD PTR [eax+ebx*8+0x8f8a555],?
  43c11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c11f:	loope  0x43c0fa
  43c121:	cmp    ch,dh
  43c123:	in     eax,0xe1
  43c125:	sbb    al,0x28
  43c127:	aad    0x59
  43c129:	push   edx
  43c12a:	daa    
  43c12b:	leave  
  43c12c:	fs imul eax,esp,0xffffffbb
  43c130:	adc    al,0xe1
  43c132:	mov    dh,0x8b
  43c134:	in     eax,dx
  43c135:	cmc    
  43c136:	into   
  43c137:	call   0xf134a70f
  43c13c:	lock add al,0xc3
  43c13f:	popf   
  43c140:	or     al,0x42
  43c142:	sar    DWORD PTR [ebx],cl
  43c144:	pop    edx
  43c145:	inc    ebp
  43c146:	pop    es
  43c147:	jmp    0x43c0fa
  43c149:	xor    BYTE PTR [edx-0x5],ch
  43c14c:	and    al,0x70
  43c14e:	ins    BYTE PTR es:[edi],dx
  43c14f:	push   eax
  43c150:	fisub  DWORD PTR [edi-0x28]
  43c153:	jge    0x43c1cb
  43c155:	loope  0x43c139
  43c157:	jecxz  0x43c14e
  43c159:	outs   dx,BYTE PTR ds:[esi]
  43c15a:	xlat   BYTE PTR ds:[ebx]
  43c15b:	cld    
  43c15c:	mov    ch,0x9e
  43c15e:	lar    ebx,WORD PTR [ecx]
  43c161:	adc    ecx,DWORD PTR [edx]
  43c163:	cmp    BYTE PTR [eax],ah
  43c165:	adc    bh,BYTE PTR [edx]
  43c167:	lods   al,BYTE PTR ds:[esi]
  43c168:	sub    ebp,DWORD PTR [edi+0x449fdeb8]
  43c16e:	jne    0x43c11e
  43c170:	mov    ebx,0x47b77e99
  43c175:	sub    ch,BYTE PTR [eax+0x5]
  43c178:	push   edi
  43c179:	mov    BYTE PTR [edi],0xb1
  43c17c:	mov    dh,0x7d
  43c17e:	out    0x10,al
  43c180:	mov    ebp,DWORD PTR [ebp+0x15]
  43c183:	xor    bh,BYTE PTR [edi]
  43c185:	and    DWORD PTR [edi-0x4059cbd3],ebp
  43c18b:	ins    BYTE PTR es:[edi],dx
  43c18c:	sbb    al,0x3c
  43c18e:	pusha  
  43c18f:	dec    edx
  43c190:	pusha  
  43c191:	pop    eax
  43c192:	jb     0x43c20e
  43c194:	jg     0x43c1f4
  43c196:	inc    ecx
  43c197:	imul   ebx,DWORD PTR [edx],0xffffffa4
  43c19a:	jl     0x43c1ce
  43c19c:	jmp    0xc738:0xce7e38d2
  43c1a3:	mov    al,ds:0x90628c5f
  43c1a8:	into   
  43c1a9:	outs   dx,BYTE PTR ds:[esi]
  43c1aa:	jnp    0x43c1de
  43c1ac:	dec    eax
  43c1ad:	add    DWORD PTR [ebx-0x7e],ebp
  43c1b0:	out    dx,eax
  43c1b1:	cmp    eax,0x6c15d7b6
  43c1b6:	mov    esi,0xfb2e51c7
  43c1bb:	lods   eax,DWORD PTR ds:[esi]
  43c1bc:	imul   edx,DWORD PTR [ecx-0x70],0xffffffaa
  43c1c0:	jnp    0x43c175
  43c1c2:	(bad)  
  43c1c3:	aad    0x87
  43c1c5:	sub    BYTE PTR [ebx-0x6cc7d04c],ah
  43c1cb:	bound  edi,QWORD PTR ds:0x54e1859f
  43c1d1:	or     BYTE PTR [ebp-0x668f9398],dh
  43c1d7:	mov    ecx,0xa8846d50
  43c1dc:	int3   
  43c1dd:	lock mov ah,0x64
  43c1e0:	jg     0x43c1a1
  43c1e2:	pop    eax
  43c1e3:	test   al,0x1d
  43c1e5:	leave  
  43c1e6:	jl     0x43c1f1
  43c1e8:	out    0x76,eax
  43c1ea:	sub    DWORD PTR [ebx+0x6600bacc],edx
  43c1f0:	mov    dh,0x2b
  43c1f2:	imul   ebp,DWORD PTR [esi-0x78cb5ad9],0xb5f7443e
  43c1fc:	push   eax
  43c1fd:	jmp    0x43c1d1
  43c1ff:	pop    esp
  43c200:	fucomip st,st(0)
  43c202:	std    
  43c203:	ins    BYTE PTR es:[edi],dx
  43c204:	iret   
  43c205:	in     al,dx
  43c206:	js     0x43c1cb
  43c208:	(bad)  
  43c20a:	mov    bh,0x1c
  43c20c:	adc    BYTE PTR [ebx-0x64df76c9],ch
  43c212:	inc    edx
  43c213:	sub    al,0x8f
  43c215:	(bad)  
  43c218:	inc    ebx
  43c219:	les    esi,FWORD PTR [edi+0x41]
  43c21c:	inc    ebp
  43c21d:	aam    0x67
  43c21f:	das    
  43c220:	loopne 0x43c1f9
  43c222:	sub    DWORD PTR [eax-0x35],esi
  43c225:	std    
  43c226:	jl     0x43c1e7
  43c228:	cmp    eax,0xd6af0c9d
  43c22d:	sbb    BYTE PTR [ebx-0x4368db61],ah
  43c233:	xor    BYTE PTR [ebx+0x7bc0a9c4],cl
  43c239:	xchg   edi,eax
  43c23a:	int3   
  43c23b:	outs   dx,DWORD PTR ds:[esi]
  43c23c:	mov    esp,0xe47163d8
  43c241:	push   edi
  43c242:	(bad)  
  43c243:	gs hlt 
  43c245:	inc    edi
  43c246:	jl     0x43c1c8
  43c248:	cmp    eax,edi
  43c24a:	adc    BYTE PTR [ebx+0x799f1c4a],ch
  43c250:	mov    ebp,0x38cc8f2c
  43c255:	xor    ebp,0xffffffc4
  43c258:	ja     0x43c20a
  43c25a:	shr    BYTE PTR [ebx-0x52],1
  43c25d:	dec    ecx
  43c25e:	loopne 0x43c2bb
  43c260:	repnz in al,dx
  43c262:	dec    edi
  43c263:	adc    eax,0x845043f8
  43c268:	aaa    
  43c269:	mov    bl,0x5
  43c26b:	xchg   esp,eax
  43c26c:	daa    
  43c26d:	scas   eax,DWORD PTR es:[edi]
  43c26e:	mov    al,ds:0xfacba1b
  43c273:	mov    ecx,0x5d087f3c
  43c278:	int3   
  43c279:	outs   dx,DWORD PTR ds:[esi]
  43c27a:	pop    es
  43c27b:	fsub   DWORD PTR [ebx-0x34]
  43c27e:	in     al,0x57
  43c280:	jae    0x43c272
  43c282:	dec    ebx
  43c283:	scas   eax,DWORD PTR es:[edi]
  43c284:	imul   eax,DWORD PTR [eax+0x2f8c0c3b],0xa4239843
  43c28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c28f:	pop    ss
  43c290:	retf   
  43c291:	and    eax,0x400207b4
  43c296:	sti    
  43c297:	mov    ch,0x4c
  43c299:	out    dx,eax
  43c29a:	lock pop eax
  43c29c:	jecxz  0x43c317
  43c29e:	jge    0x43c28c
  43c2a0:	dec    edi
  43c2a1:	sub    eax,0x843343f8
  43c2a6:	aaa    
  43c2a7:	sub    al,0x90
  43c2a9:	sub    ebx,ecx
  43c2ab:	or     DWORD PTR [eax+0xfac271b],esp
  43c2b1:	test   al,0xb8
  43c2b3:	add    esp,DWORD PTR [edx-0x3a5908bc]
  43c2b9:	push   esp
  43c2ba:	out    0xc,eax
  43c2bc:	pusha  
  43c2bd:	(bad)  [eax]
  43c2bf:	ins    BYTE PTR es:[edi],dx
  43c2c0:	iret   
  43c2c1:	bnd js 0x43c287
  43c2c4:	cs xchg ecx,eax
  43c2c6:	mov    WORD PTR [edi],gs
  43c2c8:	in     al,dx
  43c2c9:	cwde   
  43c2ca:	and    esi,DWORD PTR [esp+eiz*4+0x17]
  43c2ce:	mov    dl,0xb0
  43c2d0:	or     esp,DWORD PTR [esi]
  43c2d2:	sub    DWORD PTR [eax-0x5],eax
  43c2d5:	or     DWORD PTR [edi+ebp*8+0x4f],0x58
  43c2da:	jecxz  0x43c31c
  43c2dc:	xlat   BYTE PTR fs:[ebx]
  43c2de:	sahf   
  43c2df:	in     eax,0x74
  43c2e1:	mov    DWORD PTR [esi+0xcc2bb00],0xa3189daf
  43c2eb:	out    0xb1,al
  43c2ed:	sub    BYTE PTR [ebx-0x23fc472c],dl
  43c2f3:	inc    esp
  43c2f4:	test   DWORD PTR [esi+0x50],0x60c94beb
  43c2fb:	fild   DWORD PTR [esp+ebp*2]
  43c2fe:	iret   
  43c2ff:	(bad)  
  43c300:	js     0x43c2c5
  43c302:	push   ecx
  43c303:	add    al,0xb7
  43c305:	pop    ecx
  43c306:	test   DWORD PTR [edi+eiz*4],edx
  43c309:	cmp    BYTE PTR [eax],ah
  43c30b:	fwait
  43c30c:	xchg   ecx,eax
  43c30d:	sub    al,0x8f
  43c30f:	adc    edi,DWORD PTR [eax]
  43c311:	or     eax,0x51
  43c314:	enter  0x2773,0xd4
  43c318:	addr16 int 0x64
  43c31b:	xlat   BYTE PTR ds:[ebx]
  43c31c:	and    DWORD PTR [eax-0x35],esi
  43c31f:	ins    DWORD PTR es:[edi],dx
  43c320:	jmp    0xcca7e25
  43c325:	scas   eax,DWORD PTR es:[edi]
  43c326:	jge    0x43c340
  43c328:	mov    ds:0xba97248c,eax
  43c32d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c32e:	xor    al,0x87
  43c330:	or     al,al
  43c332:	jnp    0x43c316
  43c334:	int3   
  43c335:	outs   dx,DWORD PTR ds:[esi]
  43c336:	jno    0x43c310
  43c338:	arpl   WORD PTR [edx+0x71],bx
  43c33b:	call   0x48386193
  43c340:	xor    al,0x80
  43c342:	mov    bh,0x76
  43c344:	adc    BYTE PTR [ebx-0x64df7660],ch
  43c34a:	int    0x2c
  43c34c:	(bad)  
  43c34d:	fidivr DWORD PTR [eax]
  43c34f:	sbb    DWORD PTR [esp+eax*8],0x77
  43c353:	stos   BYTE PTR es:[edi],al
  43c354:	inc    ebp
  43c355:	aam    0x67
  43c357:	test   al,0xe0
  43c359:	pop    ebx
  43c35a:	out    dx,al
  43c35b:	in     al,dx
  43c35c:	dec    edi
  43c35d:	fdiv   st(0),st
  43c35f:	inc    ebx
  43c360:	popf   
  43c361:	adc    DWORD PTR [eax+0x27942433],ecx
  43c367:	inc    ebx
  43c368:	mov    al,ds:0x8bac231b
  43c36d:	inc    ebp
  43c36e:	test   eax,0xcc837bc0
  43c373:	outs   dx,DWORD PTR ds:[esi]
  43c374:	sahf   
  43c375:	fsub   DWORD PTR [ebx+0x50]
  43c378:	in     al,0x57
  43c37a:	adc    ah,BYTE PTR [ebp-0xc]
  43c37d:	inc    edi
  43c37e:	mov    DWORD PTR [eax+0x2f8c2e3b],eax
  43c384:	sbb    al,0x98
  43c386:	and    esp,DWORD PTR [ebx+0x31]
  43c389:	test   al,0x13
  43c38b:	xchg   BYTE PTR [edi+eax*1-0x1604bf8e],dh
  43c392:	dec    esp
  43c393:	out    dx,eax
  43c394:	mov    eax,ds:0x7f5be049
  43c399:	in     al,dx
  43c39a:	dec    edi
  43c39b:	(bad)  
  43c39c:	clc    
  43c39d:	inc    ebx
  43c39e:	mov    BYTE PTR [edi+esi*1+0x2794058d],0x41
  43c3a6:	mov    al,ds:0xfacf61b
  43c3ab:	xchg   ebp,eax
  43c3ac:	mov    eax,0x48d17803
  43c3b1:	repz or BYTE PTR [edi+eiz*8-0x73],dl
  43c3b6:	pusha  
  43c3b7:	fcmovnb st,st(1)
  43c3b9:	ins    BYTE PTR es:[edi],dx
  43c3ba:	iret   
  43c3bb:	ins    DWORD PTR es:[edi],dx
  43c3bc:	in     eax,dx
  43c3bd:	jl     0x43c3fa
  43c3bf:	(bad)  
  43c3c0:	mov    WORD PTR [edi],gs
  43c3c2:	rcr    BYTE PTR [eax+0x17a4fb23],0x72
  43c3c9:	and    eax,0x40fb07b4
  43c3ce:	sti    
  43c3cf:	popa   
  43c3d0:	dec    esp
  43c3d1:	out    dx,eax
  43c3d2:	pop    edx
  43c3d3:	pop    eax
  43c3d4:	jecxz  0x43c3cb
  43c3d6:	icebp  
  43c3d7:	push   0xc77498d3
  43c3dc:	arpl   WORD PTR [eax],ax
  43c3de:	mov    ebx,0x75af0c44
  43c3e3:	lea    ebx,[edi+ebx*4]
  43c3e6:	ins    DWORD PTR es:[edi],dx
  43c3e7:	sub    BYTE PTR [edi],cl
  43c3e9:	jns    0x43c3a3
  43c3eb:	add    edi,DWORD PTR [edi]
  43c3ed:	inc    esp
  43c3ee:	imul   DWORD PTR [edx-0x3b]
  43c3f1:	push   esp
  43c3f2:	out    0xde,eax
  43c3f4:	pusha  
  43c3f5:	fcmovnb st,st(0)
  43c3f7:	ins    BYTE PTR es:[edi],dx
  43c3f8:	iret   
  43c3f9:	cmc    
  43c3fa:	js     0x43c3bf
  43c3fc:	pop    ecx
  43c3fd:	xchg   ecx,eax
  43c3fe:	or     BYTE PTR [ebx-0x2c58eb03],dh
  43c404:	and    BYTE PTR [ebx-0x5f70d3a8],bl
  43c40a:	lods   eax,DWORD PTR ds:[esi]
  43c40b:	cmp    al,0x7f
  43c40d:	mov    edi,0x580673c8
  43c412:	jecxz  0x43c3d7
  43c414:	xlat   BYTE PTR fs:[ebx]
  43c416:	shl    ch,1
  43c418:	je     0x43c3e1
  43c41a:	retf   
  43c41b:	add    BYTE PTR [ebx+0x26af0cb3],bh
  43c421:	sbb    BYTE PTR [ebx-0x6cd74e75],ah
  43c427:	lahf   
  43c428:	xor    al,0x87
  43c42a:	cmp    eax,eax
  43c42c:	jnp    0x43c466
  43c42e:	int3   
  43c42f:	outs   dx,DWORD PTR ds:[esi]
  43c430:	adc    eax,0x435fdc4d
  43c435:	call   0x4837df8d
  43c43a:	ds add al,0xb7
  43c43d:	sbb    eax,DWORD PTR [ebp+0x2077a714]
  43c443:	fwait
  43c444:	sahf   
  43c445:	sub    al,0x8f
  43c447:	cmp    BYTE PTR ds:[ebx+0x73c85182],al
  43c44e:	(bad)  
  43c450:	addr16 popa 
  43c452:	loopne 0x43c4af
  43c454:	shr    ah,cl
  43c456:	dec    edi
  43c457:	ins    DWORD PTR es:[edi],dx
  43c458:	ins    DWORD PTR es:[edi],dx
  43c459:	cld    
  43c45a:	aas    
  43c45b:	add    ecx,DWORD PTR [eax+0x2794a033]
  43c461:	icebp  
  43c462:	mov    al,ds:0x34a5381b
  43c467:	xchg   DWORD PTR [esi-0x40],ebx
  43c46a:	jnp    0x43c413
  43c46c:	int3   
  43c46d:	outs   dx,DWORD PTR ds:[esi]
  43c46e:	mov    al,bl
  43c470:	arpl   WORD PTR [ecx+esi*2-0xbbdac18],ax
  43c477:	inc    edi
  43c478:	cld    
  43c479:	cmp    BYTE PTR [ebx],0xff
  43c47c:	mov    WORD PTR [edi],gs
  43c47e:	test   eax,0xf71f9c0d
  43c483:	test   al,0x13
  43c485:	push   esi
  43c486:	mov    ah,0x7
  43c488:	dec    edx
  43c489:	inc    eax
  43c48a:	sti    
  43c48b:	mov    bh,0xd9
  43c48d:	aam    0x67
  43c48f:	jmp    0x43c471
  43c491:	pop    ebx
  43c492:	in     al,0xec
  43c494:	dec    edi
  43c495:	add    al,bh
  43c497:	inc    ebx
  43c498:	in     eax,0x11
  43c49a:	mov    BYTE PTR [ebx],dh
  43c49c:	mov    ch,0x94
  43c49e:	daa    
  43c49f:	lods   eax,DWORD PTR ds:[esi]
  43c4a0:	mov    al,ds:0xfac191b
  43c4a5:	lods   al,BYTE PTR ds:[esi]
  43c4a6:	sub    eax,0x48b5ffbc
  43c4ab:	repz test DWORD PTR [edi+eiz*8-0x68],edx
  43c4b0:	pusha  
  43c4b1:	fld    TBYTE PTR [edi-0x7]
  43c4b4:	jo     0x43c481
  43c4b6:	pop    ds
  43c4b7:	cmp    BYTE PTR [ebx],0x8b
  43c4ba:	mov    WORD PTR [edi],gs
  43c4bc:	dec    esp
  43c4bd:	cwde   
  43c4be:	and    esi,esi
  43c4c0:	xor    DWORD PTR [eax+0x7b47513],ebp
  43c4c6:	out    0x40,al
  43c4c8:	sti    
  43c4c9:	(bad)  
  43c4ca:	dec    esp
  43c4cb:	out    dx,eax
  43c4cc:	xchg   ch,cl
  43c4ce:	pop    esp
  43c4cf:	fbld   TBYTE PTR [eax+ebp*2]
  43c4d2:	rcl    DWORD PTR [edx+0x74],cl
  43c4d5:	(bad)  
  43c4d6:	push   edi
  43c4d7:	add    BYTE PTR [ebx-0x54ef6611],bh
  43c4dd:	push   0x1c
  43c4df:	lahf   
  43c4e0:	sbb    eax,0xb87d0fac
  43c4e5:	add    eax,DWORD PTR [ebx]
  43c4e7:	ror    DWORD PTR [eax-0xd],1
  43c4ea:	mov    esp,0x6086e754
  43c4ef:	(bad)  [ebx-0x12253094]
  43c4f5:	jl     0x43c4b6
  43c4f7:	sahf   
  43c4f8:	or     BYTE PTR [ebx-0x7158eb90],dh
  43c4fe:	and    BYTE PTR [ebx-0x74cf462d],bl
  43c504:	cs cmp al,0x7f
  43c507:	mov    bh,0xc8
  43c509:	out    dx,eax
  43c50a:	mov    ebp,0x7143e358
  43c50f:	push   0xc7749fd3
  43c514:	cmp    BYTE PTR [eax],al
  43c516:	mov    ebx,0x36af0c9b
  43c51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c51c:	mov    DWORD PTR [eax],esp
  43c51e:	fwait
  43c51f:	add    eax,0x38d48f2c
  43c524:	cmp    esp,0xffffffc4
  43c527:	ja     0x43c4e6
  43c529:	inc    ebp
  43c52a:	aam    0x67
  43c52c:	inc    edi
  43c52d:	loopne 0x43c58a
  43c52f:	inc    edx
  43c530:	in     al,dx
  43c531:	dec    edi
  43c532:	jae    0x43c590
  43c534:	(bad)  
  43c535:	jp     0x43c4d4
  43c537:	sub    al,0xef
  43c539:	in     eax,dx
  43c53a:	cmp    bl,ah
  43c53c:	stos   BYTE PTR es:[edi],al
  43c53d:	add    al,0xd7
  43c53f:	mov    al,ds:0xa9a0cb10
  43c544:	loopne 0x43c581
  43c546:	(bad)  
  43c547:	in     al,dx
  43c548:	das    
  43c549:	(bad)  
  43c54a:	clc    
  43c54b:	and    ecx,edi
  43c54d:	les    edx,FWORD PTR [edi]
  43c54f:	xchg   BYTE PTR [ebp-0x2c],ah
  43c552:	pop    es
  43c553:	(bad)  
  43c554:	mov    al,ds:0x6fac0b7b
  43c559:	sbb    DWORD PTR [eax+0x3440d763],edi
	...
  43c567:	add    BYTE PTR [edi+0x2552ee1b],al
  43c56d:	push   es
  43c56e:	add    BYTE PTR [eax],al
  43c570:	add    BYTE PTR [eax],al
  43c572:	add    BYTE PTR [eax],al
  43c574:	and    eax,0x53000006
  43c579:	add    BYTE PTR [esi],ah
  43c57b:	jl     0x43c57d
  43c57d:	add    dh,BYTE PTR [esi]
  43c57f:	or     BYTE PTR [eax],al
  43c581:	add    al,ch
  43c583:	dec    edx
  43c584:	add    BYTE PTR ds:0x9e95899c,dl
  43c58a:	xlat   BYTE PTR ds:[ebx]
  43c58b:	pop    ecx
  43c58c:	gs and al,0xc1
  43c58f:	cmp    al,0xc9
  43c591:	int    0x3c
  43c593:	cmp    al,BYTE PTR [edx+0x46]
  43c596:	dec    eax
  43c597:	mov    dl,0xd1
  43c599:	sub    esp,DWORD PTR [edi]
  43c59b:	cld    
  43c59c:	nop
  43c59d:	xor    al,0x38
  43c59f:	ins    BYTE PTR es:[edi],dx
  43c5a0:	or     BYTE PTR [eax],dh
  43c5a2:	inc    esp
  43c5a3:	inc    eax
  43c5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c5a5:	ds pop ss
  43c5a7:	adc    edx,DWORD PTR [eax-0x73cb8421]
  43c5ad:	mov    bl,bh
  43c5af:	popa   
  43c5b0:	cmp    BYTE PTR gs:[ecx-0x42],ah
  43c5b4:	out    0xeb,eax
  43c5b6:	int3   
  43c5b7:	nop
  43c5b8:	adc    al,0x18
  43c5ba:	pop    esp
  43c5bb:	gs out dx,al
  43c5bd:	out    0xe3,eax
  43c5bf:	dec    edi
  43c5c0:	fldl2e 
  43c5c2:	out    dx,al
  43c5c3:	and    BYTE PTR [ebp-0x1bf2eecc],0xd0
  43c5ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c5cb:	cwde   
  43c5cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c5cd:	pop    ecx
  43c5ce:	test   al,0x45
  43c5d0:	inc    ecx
  43c5d1:	(bad)  [ebx+0x7c]
  43c5d4:	js     0x43c622
  43c5d6:	daa    
  43c5d7:	xchg   ebp,eax
  43c5d8:	out    dx,al
  43c5d9:	jmp    0x3670:0xb6b211cf
  43c5e0:	sbb    ebx,DWORD PTR [ebp-0x5f]
  43c5e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c5e4:	mov    eax,0x7d94809c
  43c5e9:	xchg   BYTE PTR [edi+0x5b],bl
  43c5ec:	push   ebp
  43c5ed:	mov    ds:0x3b84743,al
  43c5f2:	lods   eax,DWORD PTR ds:[esi]
  43c5f3:	push   ss
  43c5f4:	sbb    cl,BYTE PTR [ebp-0x64]
  43c5f7:	sbb    DWORD PTR ds:0xe4f0f8dc,edx
  43c5fd:	loopne 0x43c651
  43c5ff:	dec    ebp
  43c600:	outs   dx,DWORD PTR ds:[esi]
  43c601:	xchg   ebx,eax
  43c602:	test   BYTE PTR [ebx-0x5d],cl
  43c605:	jl     0x43c67f
  43c607:	es jge 0x43c609
  43c60a:	sti    
  43c60b:	test   al,0x99
  43c60d:	adc    ah,BYTE PTR [ebx]
  43c60f:	das    
  43c610:	xor    al,0xc
  43c612:	or     BYTE PTR [esp+ecx*8-0x34301202],0x73
  43c61a:	mov    bl,0x2c
  43c61c:	sub    al,dh
  43c61e:	mov    eax,ds:0xf8a75b0a
  43c623:	mov    dh,BYTE PTR [edx+0x6e]
  43c626:	adc    al,0x62
  43c628:	out    0x99,eax
  43c62a:	xchg   ebp,eax
  43c62b:	fs sbb al,0xd0
  43c62e:	fdivr  QWORD PTR [edx+edi*2-0x1d6e6add]
  43c635:	inc    ecx
  43c637:	(bad)
  43c63a:	jge    0x43c5db
  43c63c:	xor    DWORD PTR [eax+ebx*2],0xffffff9c
  43c640:	pusha  
  43c641:	add    al,0x11
  43c643:	xchg   esp,eax
  43c644:	xchg   ecx,eax
  43c645:	xchg   ebp,eax
  43c646:	xchg   ch,cl
  43c648:	outs   dx,DWORD PTR ds:[esi]
  43c649:	imul   ebp,DWORD PTR [eax],0xffffff8f
  43c64c:	dec    edi
  43c64d:	call   0xea6a3f36
  43c652:	out    dx,al
  43c653:	rol    BYTE PTR [eax-0x2035095a],1
  43c659:	inc    ebx
  43c65a:	jl     0x43c6bc
  43c65c:	hlt    
  43c65d:	repz jg 0x43c5e8
  43c660:	mov    WORD PTR [esi+eax*8-0x24e7adaa],es
  43c667:	or     edx,ecx
  43c669:	mov    BYTE PTR [edi-0x1d],0x8c
  43c66d:	cmp    BYTE PTR [eax+ebp*2],0x78
  43c671:	pop    esp
  43c672:	pop    eax
  43c673:	imul   DWORD PTR ds:0xd8608286
  43c679:	mov    ch,BYTE PTR [esi+0xbe1eeaa]
  43c67f:	invd   
  43c681:	mov    eax,ds:0xc7c3cf66
  43c686:	sbb    eax,esp
  43c688:	enter  0x542c,0x62
  43c68c:	or     cl,BYTE PTR [esi]
  43c68e:	xor    al,0xa
  43c690:	jb     0x43c708
  43c692:	push   eax
  43c693:	inc    eax
  43c694:	inc    esi
  43c695:	push   esi
  43c696:	push   0xfffffff6
  43c698:	mov    bl,0x25
  43c69a:	cmp    DWORD PTR [esp+esi*2+0x76],esi
  43c69e:	xchg   BYTE PTR [edx-0x4f4b1f40],al
  43c6a4:	sbb    al,0x98
  43c6a6:	shl    BYTE PTR [eax+esi*2-0x51],0x69
  43c6ab:	cli    
  43c6ac:	inc    BYTE PTR [eax-0x7]
  43c6af:	es lahf 
  43c6b1:	adc    DWORD PTR [edi],0xffffffb7
  43c6b4:	lock int3 
  43c6b6:	lods   al,BYTE PTR fs:[esi]
  43c6b8:	retf   0x1612
  43c6bb:	inc    ecx
  43c6bc:	aam    0x11
  43c6be:	adc    eax,0x134bd88
  43c6c3:	or     eax,0x4c40974f
  43c6c8:	lods   al,BYTE PTR ds:[esi]
  43c6c9:	inc    edx
  43c6ca:	aas    
  43c6cb:	rol    ebp,0x91
  43c6ce:	jp     0x43c67b
  43c6d0:	mov    bh,0x54
  43c6d2:	rcr    DWORD PTR [edi],cl
  43c6d4:	test   al,0xac
  43c6d6:	push   es
  43c6d7:	xor    eax,0xa6784347
  43c6dc:	aaa    
  43c6dd:	jmp    0x196054c7
  43c6e2:	adc    eax,0x7dc0119c
  43c6e7:	jns    0x43c715
  43c6e9:	data16 div dl
  43c6ec:	ror    BYTE PTR [ebp+0xc796528],0x6c
  43c6f3:	mov    al,0x8c
  43c6f5:	in     al,0xc0
  43c6f7:	mov    ah,BYTE PTR [edx]
  43c6f9:	pop    DWORD PTR cs:[edi+0x5f8c7c70]
  43c700:	mov    cl,0x72
  43c702:	jbe    0x43c76e
  43c704:	or     ecx,ebp
  43c706:	leave  
  43c707:	mov    al,0x40
  43c709:	ss (bad) 
  43c70b:	mov    edx,0x7e622183
  43c710:	aam    0xc8
  43c712:	(bad)  
  43c713:	call   0x4a7d4f04
  43c718:	dec    esi
  43c719:	clc    
  43c71a:	or     al,0x88
  43c71c:	jl     0x43c78e
  43c71e:	inc    esi
  43c71f:	jg     0x43c6de
  43c721:	mov    ecx,0x82daf8a0
  43c726:	sahf   
  43c727:	mov    WORD PTR [eax+eiz*4+0x3d9fc4dc],ds
  43c72e:	jbe    0x43c7a2
  43c730:	stos   DWORD PTR es:[edi],eax
  43c731:	sbb    edx,DWORD PTR [eax+edx*2-0x18]
  43c735:	jnp    0x43c6d8
  43c737:	xor    bh,BYTE PTR [esi]
  43c739:	aaa    
  43c73a:	and    ebp,esp
  43c73c:	loopne 0x43c74a
  43c73e:	mov    cl,0x68
  43c740:	(bad)
  43c743:	mov    eax,0xa30585c
  43c748:	sbb    edi,ebx
  43c74a:	fistp  DWORD PTR [esi+0x11]
  43c74d:	fwait
  43c74e:	lahf   
  43c74f:	fdivr  DWORD PTR [ebp-0x1eaaa6c4]
  43c755:	jbe    0x43c7d6
  43c757:	jae    0x43c755
  43c759:	jno    0x85344de1
  43c75f:	push   0x6a58206c
  43c764:	adc    cl,BYTE PTR [esi]
  43c766:	inc    ebp
  43c767:	cld    
  43c768:	mov    ebp,esi
  43c76a:	inc    esp
  43c76b:	test   dh,ah
  43c76d:	ss xor cl,al
  43c770:	test   BYTE PTR [eax],ch
  43c772:	mov    al,ds:0xfbf1f6ec
  43c777:	push   edi
  43c779:	add    eax,0x810fafe
  43c77e:	or     dl,BYTE PTR [edx]
  43c780:	cs out 0x8b,al
  43c783:	dec    ebp
  43c784:	push   ecx
  43c785:	xor    al,0x52
  43c787:	arpl   WORD PTR [ebp+0x71],si
  43c78a:	out    0xb5,al
  43c78c:	pop    es
  43c78d:	add    ebx,DWORD PTR [eax+0x35]
  43c790:	mov    al,0xdd
  43c792:	sar    DWORD PTR [ebx-0x1f],1
  43c795:	repnz (bad) 
  43c797:	jl     0x43c7b2
  43c799:	fmul   QWORD PTR [ecx+0x4d]
  43c79c:	cs aas 
  43c79e:	add    DWORD PTR ds:0xae950f24,edi
  43c7a4:	stos   BYTE PTR es:[edi],al
  43c7a5:	loope  0x43c7ab
  43c7a7:	mov    eax,ds:0x43a748a5
  43c7ac:	lods   al,BYTE PTR ds:[esi]
  43c7ad:	mov    al,ds:0xf0fcd377
  43c7b2:	ins    BYTE PTR es:[edi],dx
  43c7b3:	push   edx
  43c7b4:	inc    edi
  43c7b5:	imul   ebp,DWORD PTR [ebp+0x52],0x90e5e13f
  43c7bc:	cmp    eax,0xa37945e8
  43c7c1:	and    DWORD PTR [edx],esp
  43c7c3:	ds mov ah,0xf
  43c7c6:	out    0xd0,eax
  43c7c8:	fsub   QWORD PTR [ecx-0x1a]
  43c7cb:	iret   
  43c7cc:	ret    
  43c7cd:	pop    esp
  43c7ce:	pop    esp
  43c7cf:	inc    esi
  43c7d0:	jbe    0x43c844
  43c7d2:	gs out 0xff,al
  43c7d5:	sti    
  43c7d6:	or     BYTE PTR [ebp-0x58],0x65
  43c7da:	jns    0x43c7ef
  43c7dc:	rcl    DWORD PTR [edx+0x6e],1
  43c7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c7e0:	add    dl,BYTE PTR [ebx-0x1b]
  43c7e3:	loope  0x43c7cd
  43c7e5:	(bad)  
  43c7e6:	call   0xaaad90d7
  43c7eb:	or     eax,DWORD PTR [edi]
  43c7ed:	fucomip st,st(3)
  43c7ef:	in     al,0xe0
  43c7f1:	jo     0x43c820
  43c7f3:	sbb    ch,0x21
  43c7f6:	lea    ecx,[eax]
  43c7f8:	add    eax,0x8b829419
  43c7fd:	lods   eax,DWORD PTR ds:[esi]
  43c7fe:	test   eax,0xb0f76cd
  43c803:	mov    eax,0x2e22f16b
  43c808:	dec    eax
  43c809:	push   ss
  43c80a:	xchg   esi,eax
  43c80b:	call   0x7284:0x805c30dc
  43c812:	aaa    
  43c813:	mov    ecx,0xb82d00bd
  43c818:	or     DWORD PTR ds:0x898debc2,ecx
  43c81e:	test   al,0xb2
  43c820:	mov    eax,ds:0xbc7b7bb
  43c825:	je     0x43c89f
  43c827:	int3   
  43c828:	js     0x43c852
  43c82a:	mov    WORD PTR [eax+0x5753328d],cs
  43c830:	lock fadd st,st(2)
  43c833:	jmp    0xbe10:0xc086716
  43c83a:	fsub   QWORD PTR fs:[eax]
  43c83d:	push   ebx
  43c83e:	call   0xbcbc136f
  43c843:	xor    al,BYTE PTR [eax+ecx*8]
  43c846:	mov    bx,0xd814
  43c84a:	mov    bl,0x20
  43c84c:	in     al,0x2d
  43c84e:	sub    al,0xf0
  43c850:	les    edi,FWORD PTR [eax]
  43c852:	cld    
  43c853:	stos   BYTE PTR es:[edi],al
  43c854:	add    eax,0xd4770cc8
  43c859:	sbb    BYTE PTR [edi],dh
  43c85b:	loopne 0x43c881
  43c85d:	(bad)  
  43c85e:	in     al,dx
  43c85f:	xor    BYTE PTR [esi-0x10bf0311],bl
  43c865:	mov    BYTE PTR [esi+eiz*1-0x6c],cl
  43c869:	pop    eax
  43c86a:	sub    ah,BYTE PTR [eax+ebp*8]
  43c86d:	inc    esi
  43c86e:	jb     0x43c8a4
  43c870:	clc    
  43c871:	xor    eax,0xcc7504c0
  43c876:	adc    dh,ch
  43c878:	fcomp  DWORD PTR [edx+ecx*4]
  43c87b:	jge    0x43c865
  43c87d:	sub    al,0x77
  43c87f:	hlt    
  43c880:	cmp    ah,cl
  43c882:	add    BYTE PTR [ebp+eiz*8-0x74],0x50
  43c887:	dec    BYTE PTR [esp+ebx*4+0x6ca8c660]
  43c88e:	fbstp  TBYTE PTR [eax+edi*2-0x597bbf20]
  43c895:	mov    ah,0xd4
  43c897:	sbb    BYTE PTR [esi-0x20],ch
  43c89a:	and    al,0xe8
  43c89c:	in     al,dx
  43c89d:	xor    BYTE PTR [ebx-0x4615c308],al
  43c8a3:	mov    BYTE PTR [ebx+eax*8-0x6c],cl
  43c8a7:	pop    eax
  43c8a8:	jp     0x43c84a
  43c8aa:	fs pop esi
  43c8ac:	lods   al,BYTE PTR ds:[esi]
  43c8ad:	jo     0x43c88d
  43c8af:	inc    edi
  43c8b0:	mov    esp,0x8c487380
  43c8b5:	pop    esp
  43c8b6:	push   esp
  43c8b7:	cwde   
  43c8b8:	test   al,0x60
  43c8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c8bb:	add    cl,BYTE PTR [ecx]
  43c8bd:	hlt    
  43c8be:	cmp    cl,bl
  43c8c0:	add    BYTE PTR [ecx+edi*4-0x74],0x50
  43c8c5:	and    eax,0xbcca5c98
  43c8ca:	test   al,0x6c
  43c8cc:	inc    ecx
  43c8cd:	mov    ah,0x78
  43c8cf:	imul   eax,DWORD PTR [eax-0x7c],0x3e904c8c
  43c8d6:	pop    edi
  43c8d7:	pop    esp
  43c8d8:	mov    al,ds:0x73ac6887
  43c8dd:	je     0x43c897
  43c8df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c8e0:	add    ah,al
  43c8e2:	bound  ebx,QWORD PTR [edx+0x10]
  43c8e5:	aam    0x59
  43c8e7:	mov    al,ds:0x70acf264
  43c8ec:	jae    0x43c8a6
  43c8ee:	jl     0x43c91a
  43c8f0:	xchg   esi,eax
  43c8f1:	dec    eax
  43c8f2:	mov    WORD PTR [eax],ss
  43c8f4:	push   esp
  43c8f5:	cwde   
  43c8f6:	jle    0x43c958
  43c8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c8f9:	inc    ebx
  43c8fa:	ins    BYTE PTR es:[edi],dx
  43c8fb:	mov    al,0x1e
  43c8fd:	lahf   
  43c8fe:	jl     0x43c8c0
  43c900:	jbe    0x43c90a
  43c902:	int3   
  43c903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c904:	adc    al,0xd8
  43c906:	aad    0x20
  43c908:	in     al,0x42
  43c90a:	outs   dx,DWORD PTR ds:[esi]
  43c90b:	xor    ah,dh
  43c90d:	aam    0x3c
  43c90f:	add    BYTE PTR [edx+0x588f904c],dl
  43c915:	pushf  
  43c916:	or     cl,dl
  43c918:	push   0xb874eaac
  43c91d:	sbb    al,0x0
  43c91f:	les    ebx,FWORD PTR [edx-0x1c812ff4]
  43c925:	sbb    al,0xe0
  43c927:	xor    ch,BYTE PTR [eax]
  43c929:	in     al,dx
  43c92a:	inc    ebx
  43c92b:	xor    al,0xf8
  43c92d:	aad    0xc0
  43c92f:	add    al,0xa2
  43c931:	out    dx,eax
  43c932:	rcl    BYTE PTR [edi+esi*1],1
  43c935:	fsub   QWORD PTR [eax]
  43c937:	mov    al,ds:0x78e7b0e8
  43c93c:	mov    esp,0xcc081596
  43c941:	rcl    esp,1
  43c943:	xor    eax,0x28c4e01c
  43c948:	in     al,dx
  43c949:	or     al,0xa1
  43c94b:	cmp    ah,bh
  43c94d:	mov    cl,0xc4
  43c94f:	or     BYTE PTR [edi-0x30],dl
  43c952:	adc    al,0x72
  43c954:	fsub   QWORD PTR [eax]
  43c956:	out    dx,eax
  43c957:	jge    0x43c945
  43c959:	xor    BYTE PTR [edx-0x7b86c308],cl
  43c95f:	dec    eax
  43c960:	push   es
  43c961:	nop
  43c962:	fcom   DWORD PTR [eax-0x4b17db4b]
  43c968:	xor    ah,dh
  43c96a:	aaa    
  43c96b:	cmp    al,0x0
  43c96d:	aam    0xc8
  43c96f:	or     al,0xff
  43c971:	inc    ecx
  43c972:	fcomp  DWORD PTR [edx+ecx*4]
  43c975:	in     al,0x28
  43c977:	xlat   BYTE PTR ds:[ebx]
  43c978:	lock xor al,0x7b
  43c97b:	cld    
  43c97c:	inc    eax
  43c97d:	or     DWORD PTR ds:0x9867508c,ebx
  43c983:	pop    esp
  43c984:	in     eax,0x4
  43c986:	push   0x81741029
  43c98b:	sub    DWORD PTR [eax+ecx*1+0xe],esp
  43c98f:	jo     0x43c9a5
  43c991:	addr16 jl 0x43c9b4
  43c994:	je     0x43c9de
  43c996:	sub    al,0xc
  43c998:	popa   
  43c999:	pop    eax
  43c99a:	cmp    al,0xdf
  43c99c:	and    al,0x48
  43c99e:	in     al,0x30
  43c9a0:	push   esp
  43c9a1:	or     DWORD PTR [eax+eiz*2],edi
  43c9a4:	(bad)  
  43c9a5:	cmp    eax,0x1834700c
  43c9aa:	jl     0x43c9bb
  43c9ac:	in     al,0x88
  43c9ae:	push   ds
  43c9af:	lock xchg esp,eax
  43c9b1:	add    eax,0x14a4c0c9
  43c9b6:	push   eax
  43c9b7:	xor    al,0xcd
  43c9b9:	pop    esp
  43c9ba:	inc    eax
  43c9bb:	clc    
  43c9bc:	sub    BYTE PTR [esi+eiz*8+0x1],cl
  43c9c0:	cmp    BYTE PTR [edx+edi*4+0x4],bl
  43c9c4:	push   0x6874104d
  43c9c9:	sbb    al,0x80
  43c9cb:	jnp    0x43c9aa
  43c9cd:	in     al,dx
  43c9ce:	nop
  43c9cf:	addr16 clc 
  43c9d1:	pushf  
  43c9d2:	jb     0x43c998
  43c9d4:	test   al,0x61
  43c9d6:	shl    BYTE PTR [esp+esi*4-0x243b5f17],1
  43c9dd:	lods   al,BYTE PTR ds:[esi]
  43c9de:	push   esp
  43c9df:	mov    ah,0x3c
  43c9e1:	pusha  
  43c9e2:	cmp    ecx,DWORD PTR [eax]
  43c9e4:	ins    BYTE PTR es:[edi],dx
  43c9e5:	out    0x21,eax
  43c9e7:	sbb    BYTE PTR [esp+eax*8-0x1c],bh
  43c9eb:	mov    BYTE PTR [ebx-0x3a36b10],bl
  43c9f1:	mov    al,ds:0xb0ccfd03
  43c9f6:	retf   0xbcd8
  43c9f9:	std    
  43c9fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c9fb:	enter  0xb0a8,0xd4
  43c9ff:	test   DWORD PTR [ecx-0x730e1b80],ecx
  43ca05:	lock xchg DWORD PTR [eax-0x73171b80],ebx
  43ca0c:	adc    ecx,eax
  43ca0e:	clc    
  43ca0f:	pushf  
  43ca10:	out    dx,eax
  43ca11:	les    ebp,FWORD PTR [eax-0x654b2f90]
  43ca17:	fadd   st(0),st
  43ca19:	out    dx,al
  43ca1a:	popf   
  43ca1b:	lods   al,BYTE PTR ds:[esi]
  43ca1c:	rol    BYTE PTR [eax+edi*4-0x24],1
  43ca20:	push   0x90aae884
  43ca25:	hlt    
  43ca26:	push   ss
  43ca27:	test   eax,0x6cb00460
  43ca2c:	adc    BYTE PTR [eax],al
  43ca2e:	js     0x43ca4c
  43ca30:	dec    al
  43ca32:	lods   al,BYTE PTR ds:[esi]
  43ca33:	out    dx,al
  43ca34:	loope  0x43ca0e
  43ca36:	mov    esp,0x17c8a4cb
  43ca3b:	mov    al,0xd4
  43ca3d:	cmp    BYTE PTR [eax+eiz*8-0xf73422a],bh
  43ca44:	into   
  43ca45:	cwde   
  43ca46:	cld    
  43ca47:	or     ah,BYTE PTR [eax+ecx*1+0x45]
  43ca4b:	jo     0x43ca61
  43ca4d:	push   ds
  43ca4e:	dec    ecx
  43ca4f:	inc    eax
  43ca50:	and    al,0xc
  43ca52:	dec    esp
  43ca53:	xor    BYTE PTR [eax+0x58],ch
  43ca56:	cmp    al,0x82
  43ca58:	and    al,0x48
  43ca5a:	add    eax,DWORD PTR [ecx-0x7bb32348]
  43ca60:	call   0x6a385af3
  43ca65:	pushf  
  43ca66:	add    BYTE PTR [ecx-0xfef93a3],dl
  43ca6c:	js     0x43ca8a
  43ca6e:	pop    ecx
  43ca6f:	inc    esp
  43ca70:	sub    bl,cl
  43ca72:	push   eax
  43ca73:	xor    al,0xf0
  43ca75:	imul   esp,DWORD PTR [eax],0x502c7f44
  43ca7b:	cmp    DWORD PTR [eax],edi
  43ca7d:	pop    esp
  43ca7e:	in     eax,dx
  43ca7f:	add    al,0x68
  43ca81:	mov    ecx,0x4efc1425
  43ca86:	or     BYTE PTR fs:[ebp+0x7c741470],ah
  43ca8d:	and    BYTE PTR [edx+0x7d],dh
  43ca90:	dec    esp
  43ca91:	xor    al,al
  43ca93:	pop    eax
  43ca94:	cmp    al,0xaa
  43ca96:	and    al,0x48
  43ca98:	sub    DWORD PTR [eax],esi
  43ca9a:	push   esp
  43ca9b:	and    cl,BYTE PTR [ecx]
  43ca9d:	add    BYTE PTR [esi+eax*8+0xc],ah
  43caa1:	jo     0x43cb1f
  43caa3:	sbb    BYTE PTR [edx+edi*1-0x1c],bh
  43caa7:	mov    ah,dh
  43caa9:	(bad)
  43caac:	mov    ecx,0x50022844
  43cab1:	xor    al,0x24
  43cab3:	pop    esp
  43cab4:	inc    eax
  43cab5:	loop   0x43cad4
  43cab7:	sub    al,0x50
  43cab9:	loopne 0x43caf3
  43cabb:	pop    esp
  43cabc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cabd:	add    al,0x68
  43cabf:	test   BYTE PTR [eax],dl
  43cac1:	je     0x43ca68
  43cac3:	sub    eax,esp
  43cac5:	test   ah,bh
  43cac7:	in     al,dx
  43cac8:	nop
  43cac9:	mov    edi,eax
  43cacb:	pushf  
  43cacc:	jmp    0x43ca92
  43cace:	test   al,0x11
  43cad0:	in     eax,0xd4
  43cad2:	mov    eax,0xc6c4a037
  43cad7:	xor    BYTE PTR [eax+ebp*1+0x3c],dl
  43cadb:	pusha  
  43cadc:	pop    edx
  43cadd:	cmp    eax,0x18c1700c
  43cae2:	jl     0x43caca
  43cae4:	in     al,0x88
  43cae6:	(bad)  
  43cae7:	lock xchg esp,eax
  43cae9:	fwait
  43caea:	leave  
  43caeb:	shl    BYTE PTR [esi+ebx*2-0x27454f34],0xbc
  43caf3:	mov    eax,ds:0x85f9c8a4
  43caf8:	mov    ah,0xd8
  43cafa:	mov    eax,DWORD PTR [eax-0xf73ae1c]
  43cb00:	(bad)  
  43cb01:	sbb    al,0x80
  43cb03:	inc    ebp
  43cb04:	fucomp st(4)
  43cb06:	nop
  43cb07:	mov    eax,edi
  43cb09:	pushf  
  43cb0a:	les    ebp,FWORD PTR ds:[eax+0x40b4d04d]
  43cb11:	jmp    0xac948fb6
  43cb16:	rol    ch,1
  43cb18:	mov    eax,0xe88489dc
  43cb1d:	xor    eax,0x72f894a5
  43cb22:	pusha  
  43cb23:	add    al,0x9c
  43cb25:	ins    BYTE PTR es:[edi],dx
  43cb26:	adc    BYTE PTR [edi-0x2455f88],cl
  43cb2c:	int3   
  43cb2d:	mov    al,0x33
  43cb2f:	fdivr  DWORD PTR [ecx+ebp*1-0x4ffd375c]
  43cb36:	aam    0x8d
  43cb38:	mov    DWORD PTR [eax-0xf733f1c],eax
  43cb3e:	sub    ebx,DWORD PTR [eax+0x8648cfc]
  43cb44:	lods   eax,DWORD PTR ds:[esi]
  43cb45:	inc    ebp
  43cb46:	je     0x43cb60
  43cb48:	xchg   ebp,eax
  43cb49:	inc    eax
  43cb4a:	and    al,0x25
  43cb4c:	dec    esp
  43cb4d:	xor    BYTE PTR [ebx-0x6259c3a8],cl
  43cb53:	lods   al,BYTE PTR ds:[esi]
  43cb54:	rcl    BYTE PTR [esi-0x7b772348],1
  43cb5a:	call   0x62385c0c
  43cb5f:	test   eax,0x6c250460
  43cb64:	adc    BYTE PTR [ebx],bl
  43cb66:	js     0x43cb84
  43cb68:	nop
  43cb69:	inc    esp
  43cb6a:	sub    BYTE PTR [eax-0x3b],bh
  43cb6d:	push   esp
  43cb6e:	cmp    BYTE PTR [edi-0x32a1bbe0],al
  43cb74:	push   es
  43cb75:	dec    ebx
  43cb76:	fadd   DWORD PTR [ebx-0x20]
  43cb79:	jnp    0x43cb63
  43cb7b:	xchg   ebx,eax
  43cb7c:	jmp    0x43cbf6
  43cb7e:	jecxz  0x43cb00
  43cb80:	sbb    ecx,DWORD PTR [eax-0x67f46fed]
  43cb86:	add    esp,DWORD PTR [eax-0x4fcc57c5]
  43cb8c:	cmp    esp,DWORD PTR [edi]
  43cb8e:	mov    esp,0xc47c45f
  43cb93:	push   edx
  43cb94:	adc    al,0x8c
  43cb96:	cmp    eax,0x0
  43cb9b:	add    BYTE PTR [eax],al
  43cb9d:	add    BYTE PTR [eax],al
  43cb9f:	add    BYTE PTR ds:0x9c4e681a,al
  43cba5:	add    eax,DWORD PTR [eax]
  43cba7:	add    BYTE PTR [eax],al
  43cba9:	add    BYTE PTR [eax],al
  43cbab:	add    BYTE PTR [ebx+eax*1+0x540000],bl
  43cbb2:	es jl  0x43cbb5
  43cbb5:	add    dh,BYTE PTR [esi]
  43cbb7:	or     BYTE PTR [eax],al
  43cbb9:	add    BYTE PTR [edi+0x4f],bh
  43cbbc:	push   eax
  43cbbd:	add    al,0x8
  43cbbf:	or     al,0x8d
  43cbc1:	adc    al,0x28
  43cbc3:	and    al,0x20
  43cbc5:	adc    al,0xdd
  43cbc7:	jns    0x43cbf9
  43cbc9:	add    al,0x84
  43cbcb:	cmp    al,0x70
  43cbcd:	repnz dec eax
  43cbcf:	push   esp
  43cbd0:	mov    dl,BYTE PTR [eax+eax*2+0x7d]
  43cbd4:	xor    eax,0x707c7064
  43cbd9:	ins    BYTE PTR es:[edi],dx
  43cbda:	xchg   DWORD PTR [esp+ecx*4+0x77],edi
  43cbde:	mov    BYTE PTR [eax-0x6f673ebe],al
  43cbe4:	jmp    0x347fec11
  43cbe9:	xor    al,0x2f
  43cbeb:	inc    eax
  43cbec:	dec    eax
  43cbed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cbee:	sbb    DWORD PTR [eax+0x58],edx
  43cbf1:	pop    es
  43cbf2:	pop    esp
  43cbf3:	ins    BYTE PTR es:[edi],dx
  43cbf4:	repz push 0x7e74346a
  43cbfa:	imul   edx,ebp,0xffffff84
  43cbfd:	mov    cs,WORD PTR [eax-0x70]
  43cc00:	xchg   edx,eax
  43cc01:	aas    
  43cc02:	pushf  
  43cc03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cc04:	fisubr DWORD PTR [eax-0x471e7256]
  43cc0a:	mov    edx,0xd4ac4a4
  43cc0f:	push   esp
  43cc10:	pop    esi
  43cc11:	inc    ebp
  43cc12:	pusha  
  43cc13:	bound  ebx,QWORD PTR [ebx]
  43cc15:	cmp    DWORD PTR [eax+0x72],esi
  43cc18:	sbb    BYTE PTR [esi+eax*4+0x5],bh
  43cc1c:	mov    BYTE PTR [edx+0x409e94df],cl
  43cc22:	cmc    
  43cc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cc24:	scas   al,BYTE PTR es:[edi]
  43cc25:	mov    ?,WORD PTR [eax-0x3c436d4e]
  43cc2b:	push   esp
  43cc2c:	enter  0x58cf,0x81
  43cc30:	fcomp  st(7)
  43cc32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cc33:	in     al,0xeb
  43cc35:	add    dh,BYTE PTR [ebx+edi*2-0x3c]
  43cc39:	add    BYTE PTR [edi-0x686f2664],0x46
  43cc40:	pushf  
  43cc41:	mov    ds:0xbbafa8fa,eax
  43cc46:	mov    ah,0xbb
  43cc48:	addr16 xchg ebp,eax
  43cc4a:	(bad)  
  43cc4b:	retf   
  43cc4c:	sub    al,0xd0
  43cc4e:	xlat   BYTE PTR ds:[ebx]
  43cc4f:	jmp    0xfaef:0xe8dee3dc
  43cc56:	mov    eax,ds:0x449fff8
  43cc5b:	or     ecx,DWORD PTR [edx]
  43cc5d:	adc    BYTE PTR [edi],dl
  43cc5f:	cmp    al,0xa0
  43cc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cc62:	hlt    
  43cc63:	stc    
  43cc64:	mov    al,0xb7
  43cc66:	jp     0x43cc24
  43cc68:	ret    
  43cc69:	pop    ss
  43cc6a:	enter  0x7ccf,0xd4
  43cc6e:	fstp   TBYTE PTR [esi+0x7debe4b5]
  43cc74:	lock imul DWORD PTR [ebp-0x4]
  43cc78:	add    esp,eax
  43cc7a:	or     BYTE PTR [edi],cl
  43cc7c:	imul   eax,DWORD PTR [ecx+0x18],0x2b24c71f
  43cc83:	in     al,0x30
  43cc85:	aaa    
  43cc86:	(bad)  
  43cc88:	inc    ebx
  43cc89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cc8a:	cdq    
  43cc8b:	rcl    bh,1
  43cc8d:	push   ebp
  43cc8e:	fsubr  st(3),st
  43cc90:	xor    DWORD PTR [eax-0x13],ebp
  43cc93:	mov    esi,0x5555f974
  43cc98:	test   BYTE PTR [ecx],cl
  43cc9a:	pusha  
  43cc9b:	nop
  43cc9c:	adc    eax,0xd0219c4e
  43cca1:	test   al,0x2d
  43cca3:	fisub  DWORD PTR [ecx-0x48]
  43cca6:	cmp    eax,0x3649c425
  43ccab:	rcl    BYTE PTR [ebp-0xa],1
  43ccae:	fsub   QWORD PTR [ecx+0x6c]
  43ccb1:	cmp    eax,0x7c42f570
  43ccb6:	add    DWORD PTR [eax+ecx*4+0xd],edi
  43ccba:	xor    eax,0x75321994
  43ccbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ccc0:	sub    DWORD PTR [eax],esi
  43ccc2:	mov    al,0x35
  43ccc4:	sahf   
  43ccc5:	mov    esp,0x4dc8f041
  43ccca:	xchg   esi,eax
  43cccb:	add    eax,ebx
  43cccd:	pop    ebp
  43ccce:	mov    ah,ah
  43ccd0:	imul   esi,DWORD PTR [ecx-0x3f38a10],0xcdd9b81
  43ccda:	xchg   ecx,eax
  43ccdb:	fistp  WORD PTR [ecx+eiz*1-0x44d25767]
  43cce2:	mov    ah,0x39
  43cce4:	mov    dh,0x15
  43cce6:	les    ecx,FWORD PTR [ecx+0x3c]
  43cce9:	rcl    BYTE PTR [ebp+0x66],1
  43ccec:	fsub   QWORD PTR [ecx-0x2f]
  43ccef:	call   0xf864e361
  43ccf4:	jge    0x43ccbe
  43ccf6:	add    al,0x89
  43ccf8:	(bad)  
  43ccf9:	adc    BYTE PTR [ebp-0x555ee392],dl
  43ccff:	std    
  43cd00:	sub    al,0xb1
  43cd02:	aad    0x38
  43cd04:	mov    ebp,0x74dc871
  43cd09:	aam    0x59
  43cd0b:	in     eax,0x35
  43cd0d:	in     al,0x69
  43cd0f:	jmp    0x9981:0xfcb975f0
  43cd16:	or     BYTE PTR [ebp-0x62e73ef2],cl
  43cd1c:	inc    ecx
  43cd1d:	and    al,0xa9
  43cd1f:	push   esp
  43cd20:	xor    BYTE PTR [ebp-0x2a3ec3e0],dh
  43cd26:	popf   
  43cd27:	dec    esp
  43cd28:	sar    DWORD PTR [ebp+0x6439dd58],1
  43cd2e:	ins    DWORD PTR es:[edi],dx
  43cd2f:	(bad)  
  43cd30:	hlt    
  43cd31:	jns    0x43cd1b
  43cd33:	aad    0x4
  43cd35:	mov    DWORD PTR [edi],edx
  43cd37:	adc    BYTE PTR [ebp+0x23a11c86],dl
  43cd3d:	sub    BYTE PTR [ebp-0x42c71ea7],ch
  43cd43:	push   cs
  43cd44:	inc    esp
  43cd45:	leave  
  43cd46:	cdq    
  43cd47:	push   eax
  43cd48:	aad    0xf0
  43cd4a:	pop    esp
  43cd4b:	loope  0x43cd88
  43cd4d:	mov    ebp,0x7878f16c
  43cd52:	std    
  43cd53:	mov    eax,ds:0x90850984
  43cd58:	cdq    
  43cd59:	xchg   ecx,eax
  43cd5a:	cmc    
  43cd5b:	and    al,0xa9
  43cd5d:	adc    esi,DWORD PTR [eax]
  43cd5f:	mov    ch,0x5e
  43cd61:	jl     0x43cd23
  43cd63:	xchg   BYTE PTR [eax],cl
  43cd65:	int3   
  43cd66:	mov    eax,0xa1dc1881
  43cd6b:	and    al,0xe8
  43cd6d:	jne    0x43cd9f
  43cd6f:	hlt    
  43cd70:	aad    0x3c
  43cd72:	add    BYTE PTR [ebx],cl
  43cd74:	pop    ebp
  43cd75:	int3   
  43cd76:	adc    BYTE PTR [eax+ebx*8+0x28e4741c],ah
  43cd7d:	xchg   edi,eax
  43cd7e:	lock xor al,0x2e
  43cd81:	imul   eax,DWORD PTR [eax+ecx*8],0xd814b3cc
  43cd88:	mov    al,ds:0x2c9fe420
  43cd8d:	lock pop esi
  43cd8f:	cmp    DWORD PTR [eax+eax*1],0xfffffff6
  43cd93:	enter  0x7b0c,0xd4
  43cd97:	sbb    BYTE PTR [ebx-0x20],dh
  43cd9a:	and    al,0x82
  43cd9c:	jmp    0xfc4c0291
  43cda1:	inc    eax
  43cda2:	inc    ebp
  43cda3:	mov    BYTE PTR [edi+esi*1-0x6c],cl
  43cda7:	pop    eax
  43cda8:	test   BYTE PTR [ebx+0x28],0xec
  43cdac:	push   cs
  43cdad:	xor    al,0xf8
  43cdaf:	sub    eax,eax
  43cdb1:	add    al,0xa3
  43cdb3:	int3   
  43cdb4:	adc    BYTE PTR [esi-0x11df2392],bh
  43cdba:	call   0x39387feb
  43cdbf:	cmc    
  43cdc0:	add    BYTE PTR [edx+eiz*8+0x31],0x90
  43cdc5:	push   esp
  43cdc6:	mov    ds:0xa83d609c,al
  43cdcb:	ins    BYTE PTR es:[edi],dx
  43cdcc:	aaa    
  43cdcd:	mov    ah,0x78
  43cdcf:	(bad)  
  43cdd0:	jo     0x43ce16
  43cdd2:	mov    BYTE PTR [ecx],ah
  43cdd4:	aam    0x18
  43cdd6:	enter  0x24e0,0x8a
  43cdda:	in     al,dx
  43cddb:	xor    BYTE PTR [esi-0x27bf0369],bl
  43cde1:	mov    BYTE PTR [esp+esi*8-0x6c],cl
  43cde5:	pop    eax
  43cde6:	mov    al,cs:0xb0acc264
  43cdec:	je     0x43cdbd
  43cdee:	mov    esp,0x8c487980
  43cdf3:	add    edx,DWORD PTR [eax+ebx*4+0x36]
  43cdf7:	xchg   BYTE PTR [eax+ebp*4-0x66],ah
  43cdfb:	jo     0x43cdb1
  43cdfd:	add    eax,DWORD PTR [eax+0x508cbf44]
  43ce03:	(bad)  
  43ce04:	xchg   esp,eax
  43ce05:	pushf  
  43ce06:	pusha  
  43ce07:	push   eax
  43ce08:	test   al,0x6c
  43ce0a:	aad    0xb4
  43ce0c:	js     0x43cda7
  43ce0e:	inc    eax
  43ce0f:	test   BYTE PTR [edx],ah
  43ce11:	jge    0x43ce63
  43ce13:	xchg   esp,eax
  43ce14:	jmp    0x68c06e75
  43ce19:	lods   al,BYTE PTR ds:[esi]
  43ce1a:	xor    DWORD PTR [eax+edi*4+0x16],0xc8c804d5
  43ce22:	adc    ah,dl
  43ce24:	pop    ds
  43ce25:	sbb    al,0x64
  43ce27:	dec    ebx
  43ce28:	lods   al,BYTE PTR ds:[esi]
  43ce29:	jo     0x43ce09
  43ce2b:	mov    ebx,0x489c80bc
  43ce30:	mov    WORD PTR [esi],es
  43ce32:	push   esp
  43ce33:	cwde   
  43ce34:	cdq    
  43ce35:	pusha  
  43ce36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ce37:	add    dh,BYTE PTR [esi]
  43ce39:	jo     0x43cdef
  43ce3b:	mov    edi,0x8d6c07c
  43ce40:	int3   
  43ce41:	push   eax
  43ce42:	adc    al,0xd8
  43ce44:	jbe    0x43ce48
  43ce46:	and    al,0xe8
  43ce48:	pop    es
  43ce49:	xor    ah,dh
  43ce4b:	fistp  QWORD PTR [eax+eax*1]
  43ce4e:	mov    dh,0xc8
  43ce50:	nop
  43ce51:	ds in  eax,dx
  43ce53:	pop    esp
  43ce54:	mov    al,ds:0x33ac68ad
  43ce59:	je     0x43ce13
  43ce5b:	nop
  43ce5c:	add    ah,al
  43ce5e:	(bad)  
  43ce5f:	(bad)  
  43ce60:	adc    ah,dl
  43ce62:	ret    
  43ce63:	sbb    al,0xe0
  43ce65:	mov    ch,BYTE PTR [eax]
  43ce67:	in     al,dx
  43ce68:	stos   BYTE PTR es:[edi],al
  43ce69:	xor    al,0xf8
  43ce6b:	push   esi
  43ce6c:	mov    al,ds:0xd05e08c4
  43ce71:	adc    al,0x23
  43ce73:	fsub   QWORD PTR [eax]
  43ce75:	bnd call 0x7c4f68a7
  43ce7b:	shr    ch,0x8
  43ce7e:	int3   
  43ce7f:	xor    edx,DWORD PTR [eax+ebx*8]
  43ce82:	repz and ah,ah
  43ce85:	sub    BYTE PTR [eax+0x30],0xf4
  43ce89:	stos   DWORD PTR es:[edi],eax
  43ce8a:	cmp    al,0x0
  43ce8c:	aad    0x9
  43ce8e:	pop    esi
  43ce8f:	adc    BYTE PTR [esi*8+0x824e049],dl
  43ce96:	in     al,dx
  43ce97:	xor    al,cl
  43ce99:	clc    
  43ce9a:	cmp    al,0xf1
  43ce9c:	test   BYTE PTR [eax+0x17],cl
  43ce9f:	add    eax,0x248a5894
  43cea4:	call   0x4737fed0
  43cea9:	cmp    al,0x0
  43ceab:	cmp    eax,0x5e10cc5d
  43ceb0:	fcomp  DWORD PTR [esp+ebp*2]
  43ceb3:	in     al,0x28
  43ceb5:	je     0x43cea7
  43ceb7:	xor    al,0xf7
  43ceb9:	imul   eax,DWORD PTR [eax+0x508c9844],0xca5c98bb
  43cec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cec4:	push   0x78b42597
  43cec9:	aas    
  43ceca:	inc    eax
  43cecb:	test   BYTE PTR [ecx-0x30],al
  43cece:	adc    al,0x2b
  43ced0:	fsub   QWORD PTR [eax]
  43ced2:	mov    eax,ds:0x7130ec7d
  43ced7:	clc    
  43ced8:	cmp    al,0xb9
  43ceda:	test   BYTE PTR [eax+0x4e],cl
  43cedd:	nop
  43cede:	push   esp
  43cedf:	daa    
  43cee0:	or     DWORD PTR [eax+0x70ac3864],esp
  43cee6:	dec    eax
  43cee7:	mov    eax,0x88441f7c
  43ceec:	and    al,0xc5
  43ceee:	push   esp
  43ceef:	cwde   
  43cef0:	int    0x60
  43cef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cef3:	or     ebp,DWORD PTR [esp+esi*1+0x78]
  43cef7:	cld    
  43cef8:	inc    eax
  43cef9:	retf   
  43cefa:	mov    ch,0x8c
  43cefc:	push   eax
  43cefd:	mov    BYTE PTR [edi-0x24],0x7f
  43cf01:	in     al,0x77
  43cf03:	in     al,dx
  43cf04:	outs   dx,DWORD PTR ds:[esi]
  43cf05:	hlt    
  43cf06:	addr16 cld 
  43cf08:	lahf   
  43cf09:	add    al,0x77
  43cf0b:	xchg   ebx,eax
  43cf0c:	adc    BYTE PTR [ebx-0x44df7ce8],cl
  43cf12:	sub    BYTE PTR [ebx-0x5cc754d0],dh
  43cf18:	inc    eax
  43cf19:	fisttp DWORD PTR [eax+0x33]
  43cf1c:	iret   
  43cf1d:	push   esp
  43cf1e:	inc    ebx
  43cf1f:	loopne 0x43cf9c
  43cf21:	call   0xf8afbf99
  43cf26:	arpl   WORD PTR [eax],ax
  43cf28:	fwait
  43cf29:	or     BYTE PTR [ebx+0x1c876b10],dl
  43cf2f:	mov    edi,0xaf2cb724
  43cf34:	xor    al,0xa7
  43cf36:	cmp    al,0xdf
  43cf38:	inc    esp
  43cf39:	xlat   BYTE PTR ds:[ebx]
  43cf3a:	dec    esp
  43cf3b:	iret   
  43cf3c:	push   esp
  43cf3d:	ffreep st(3)
  43cf3f:	pusha  
  43cf40:	jmp    0x43ceea
  43cf42:	out    dx,al
  43cf43:	mov    al,0xff
  43cf45:	aaa    
	...
  43cf4e:	add    BYTE PTR [eax],al
  43cf50:	inc    esi
  43cf51:	sbb    ch,BYTE PTR [ebx]
  43cf53:	dec    edi
  43cf54:	add    BYTE PTR [eax],cl
  43cf56:	add    BYTE PTR [eax],al
  43cf58:	add    BYTE PTR [eax],al
  43cf5a:	add    BYTE PTR [eax],al
  43cf5c:	add    BYTE PTR [eax],cl
  43cf5e:	add    BYTE PTR [eax],al
  43cf60:	push   ebp
  43cf61:	add    BYTE PTR [esi],ah
  43cf63:	jl     0x43cf65
  43cf65:	add    dh,BYTE PTR [esi]
  43cf67:	or     BYTE PTR [eax],al
  43cf69:	add    BYTE PTR [ebx],dl
  43cf6b:	dec    ebx
  43cf6c:	push   eax
  43cf6d:	add    al,0x8
  43cf6f:	or     al,0x3
  43cf71:	adc    al,0x28
  43cf73:	lock and BYTE PTR [edi+esi*2],dl
  43cf77:	jns    0x43cfa9
  43cf79:	add    al,0xaf
  43cf7b:	cmp    al,0x70
  43cf7d:	add    BYTE PTR [eax+0x54],cl
  43cf80:	inc    edi
  43cf81:	push   esp
  43cf82:	inc    eax
  43cf83:	cwde   
  43cf84:	xor    eax,0x70cb7064
  43cf89:	ins    BYTE PTR es:[edi],dx
  43cf8a:	push   es
  43cf8b:	jl     0x43cf19
  43cf8d:	mov    ecx,0xc1f48088
  43cf92:	cwde   
  43cf93:	nop
  43cf94:	jns    0x43cfbe
  43cf96:	and    BYTE PTR [ecx],ch
  43cf98:	xor    al,0x34
  43cf9a:	dec    edi
  43cf9b:	inc    eax
  43cf9c:	dec    eax
  43cf9d:	sub    BYTE PTR [ecx],bl
  43cf9f:	push   eax
  43cfa0:	pop    eax
  43cfa1:	fstp   DWORD PTR [esp+ebp*2+0x2b]
  43cfa5:	push   0x7e74ac6a
  43cfaa:	pop    esi
  43cfab:	aad    0x84
  43cfad:	mov    fs,WORD PTR [esi-0x63f76d70]
  43cfb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cfb4:	sub    al,0xa8
  43cfb6:	stos   BYTE PTR es:[edi],al
  43cfb7:	mul    cl
  43cfb9:	mov    eax,0x4ac42eba
  43cfbe:	call   0x608c2e17
  43cfc3:	bound  esi,QWORD PTR [esi+0x26727039]
  43cfc9:	jl     0x43cf51
  43cfcb:	(bad)
  43cfcf:	xchg   esp,eax
  43cfd0:	sahf   
  43cfd1:	jl     0x43cfc8
  43cfd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cfd4:	scas   al,BYTE PTR es:[edi]
  43cfd5:	sahf   
  43cfd6:	mov    al,0xb2
  43cfd8:	cmp    BYTE PTR [ebx+eax*8-0x66303732],0x81
  43cfe0:	fcomp  st(7)
  43cfe2:	out    0xe4,al
  43cfe4:	jmp    0x43cfae
  43cfe6:	je     0x43d063
  43cfe8:	and    BYTE PTR [eax-0x6f26b579],al
  43cfee:	xchg   edi,eax
  43cfef:	dec    ebx
  43cff0:	pushf  
  43cff1:	mov    ds:0xd2afa808,eax
  43cff6:	mov    ah,0xbb
  43cff8:	sub    eax,0x59cbc495
  43cffd:	rcl    bh,1
  43cfff:	cmp    al,0xdc
  43d001:	jecxz  0x43cfa0
  43d003:	call   0xf8e4e7f7
  43d008:	dec    eax
  43d00a:	add    al,0xb
  43d00c:	cmp    edx,DWORD PTR [eax]
  43d00e:	pop    ss
  43d00f:	jne    0x43cfb1
  43d011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d012:	and    eax,0x6db7b0f9
  43d017:	mov    esp,0xcfc88ac3
  43d01c:	jns    0x43cff2
  43d01e:	(bad)  [eax-0x45141b4b]
  43d024:	lock test DWORD PTR [esp+edi*8],0xf08ee03
  43d02c:	jne    0x43d06f
  43d02e:	sbb    BYTE PTR [edi],bl
  43d030:	pop    edx
  43d031:	and    al,0x2b
  43d033:	xor    BYTE PTR [eax],0x37
  43d036:	xor    BYTE PTR [ebx+eax*2],bh
  43d039:	jb     0x43cfd4
  43d03b:	rcl    bh,1
  43d03d:	mov    al,ds:0x68c1e3dc
  43d042:	in     eax,dx
  43d043:	fidiv  WORD PTR [ecx+edi*8-0x20]
  43d047:	push   ebp
  43d048:	test   BYTE PTR [ecx],cl
  43d04a:	stos   BYTE PTR es:[edi],al
  43d04b:	nop
  43d04c:	adc    eax,0xe2219cac
  43d051:	test   al,0x2d
  43d053:	fsub   DWORD PTR [ecx-0x48]
  43d056:	cmp    eax,0x3849c49d
  43d05b:	rcl    BYTE PTR [ebp+0x47],1
  43d05e:	fsub   QWORD PTR [ecx+0x2f]
  43d061:	cmp    eax,0x7c45f570
  43d066:	add    DWORD PTR [edi-0x6b65f278],ecx
  43d06c:	sbb    DWORD PTR [ebp+esi*2-0x5c],ebp
  43d070:	sub    DWORD PTR [edx],edx
  43d072:	mov    al,0x35
  43d074:	lea    edi,[ecx+eax*2+0x184dc822]
  43d07b:	add    eax,ebx
  43d07d:	pop    ebp
  43d07e:	arpl   sp,sp
  43d080:	imul   ebx,DWORD PTR [edx-0x3898a10],0xcdde581
  43d08a:	xchg   ecx,eax
  43d08b:	mov    eax,ds:0xa873219c
  43d090:	sub    eax,0xba39b489
  43d095:	adc    eax,0xd08d49c4
  43d09a:	push   ebp
  43d09b:	inc    ebp
  43d09c:	fsub   QWORD PTR [ecx-0x6]
  43d09f:	call   0xf8656211
  43d0a4:	jge    0x43d11e
  43d0a6:	add    al,0x89
  43d0a8:	adc    al,0x10
  43d0aa:	xchg   ebp,eax
  43d0ab:	mov    DWORD PTR [ecx+eiz*4],ebx
  43d0ae:	int    0xfd
  43d0b0:	sub    al,0xb1
  43d0b2:	ins    DWORD PTR es:[edi],dx
  43d0b3:	cmp    BYTE PTR [ebp-0x3bb23736],bh
  43d0b9:	aam    0x59
  43d0bb:	(bad)  
  43d0bc:	xor    eax,0xf07269e4
  43d0c1:	jne    0x43d0c2
  43d0c3:	cld    
  43d0c4:	sub    DWORD PTR [ebp+0x8],0x18c15e8d
  43d0cb:	popf   
  43d0cc:	cmc    
  43d0cd:	and    al,0xa9
  43d0cf:	test   BYTE PTR [eax],dh
  43d0d1:	mov    ch,0x67
  43d0d3:	cmp    al,0xc1
  43d0d5:	dec    eax
  43d0d6:	popf   
  43d0d7:	dec    esp
  43d0d8:	shl    DWORD PTR [ebp+0x58],1
  43d0db:	(bad)  [ecx+0x64]
  43d0de:	ins    DWORD PTR es:[edi],dx
  43d0df:	jge    0x43d0d5
  43d0e1:	jns    0x43d0a6
  43d0e3:	aad    0x4
  43d0e5:	mov    DWORD PTR [edx+0x10],ebp
  43d0e8:	xchg   ebp,eax
  43d0e9:	ficomp DWORD PTR [ecx+eiz*4]
  43d0ec:	int3   
  43d0ed:	sub    BYTE PTR [ebp-0x42c71e0f],ch
  43d0f3:	pop    ecx
  43d0f4:	inc    esp
  43d0f5:	leave  
  43d0f6:	loope  0x43d148
  43d0f8:	aad    0xd7
  43d0fa:	pop    esp
  43d0fb:	loope  0x43d151
  43d0fd:	std    
  43d0fe:	ins    BYTE PTR es:[edi],dx
  43d0ff:	icebp  
  43d100:	mov    al,ds:0x84bbfd78
  43d105:	or     DWORD PTR [edx],ebx
  43d107:	mov    bh,0x6c
  43d109:	pushf  
  43d10a:	icebp  
  43d10b:	hlt    
  43d10c:	int    0xed
  43d10e:	into   
  43d10f:	out    0x1c,eax
  43d111:	stos   DWORD PTR es:[edi],eax
  43d112:	rcr    dh,0xb
  43d115:	xchg   edx,eax
  43d116:	imul   esi
  43d118:	dec    esi
  43d119:	mov    bh,0x4b
  43d11b:	in     al,0xd3
  43d11d:	daa    
  43d11e:	mov    ch,0x69
  43d120:	out    0xd,eax
  43d122:	pop    eax
  43d123:	dec    BYTE PTR [eax]
  43d125:	mov    al,ds:0x57fb17bb
  43d12a:	mov    bl,0xde
  43d12c:	sbb    BYTE PTR [eax+edx*1],ch
  43d12f:	popa   
  43d130:	push   ebp
  43d131:	mov    dh,0x69
  43d133:	ds mov edx,0x4d50d41c
  43d139:	lods   al,BYTE PTR ds:[esi]
  43d13a:	out    0x1d,al
  43d13c:	leave  
  43d13d:	daa    
  43d13e:	adc    eax,edi
  43d140:	mov    bl,0xfc
  43d142:	iret   
  43d143:	and    cl,cl
  43d145:	(bad)  
  43d146:	push   eax
  43d147:	sub    eax,0x8ba4061c
  43d14c:	dec    esi
  43d14d:	test   DWORD PTR [ebx-0x65bf729e],edi
  43d153:	add    DWORD PTR [edi-0x16],edx
  43d156:	jno    0x43d197
  43d158:	push   edx
  43d159:	mov    ch,al
  43d15b:	test   eax,0xa1063468
  43d160:	loope  0x43d1d3
  43d162:	daa    
  43d163:	or     al,0xd3
  43d165:	push   ss
  43d166:	call   0xbf7a72bb
  43d16b:	push   0x30
  43d16d:	mov    ecx,0x2f93c59b
  43d172:	mov    ss,WORD PTR [ebx]
  43d174:	fist   WORD PTR [ebx+ebx*2-0x45]
  43d178:	cld    
  43d179:	idiv   BYTE PTR [ebp-0x7]
  43d17c:	or     bl,BYTE PTR [ecx]
  43d17e:	js     0x43d143
  43d180:	imul   ebx,ebp,0xffffffda
  43d183:	sbb    esi,ecx
  43d185:	fwait
  43d186:	mov    ds:0xd05f020,al
  43d18b:	inc    esp
  43d18c:	ins    BYTE PTR es:[edi],dx
  43d18d:	jmp    0x43d1e4
  43d18f:	mov    al,ds:0x98650144
  43d194:	popf   
  43d195:	(bad)  
  43d196:	sbb    cl,ch
  43d198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d199:	push   0xf60d1a19
  43d19e:	mov    al,bh
  43d1a0:	mov    edx,0xff098cd0
  43d1a5:	jmp    0xe7bd58cf
  43d1aa:	dec    ebp
  43d1ab:	mov    al,0xa
  43d1ad:	mov    ch,ch
  43d1af:	int3   
  43d1b0:	mov    eax,0x5874fc5b
  43d1b5:	xchg   ebp,eax
  43d1b6:	push   es
  43d1b7:	pop    esi
  43d1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d1b9:	adc    esp,eax
  43d1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d1bd:	jl     0x43d1a2
  43d1bf:	pushf  
  43d1c0:	mov    ecx,0xab167596
  43d1c5:	int    0xa0
  43d1c7:	xor    ecx,eax
  43d1c9:	shl    ebx,cl
  43d1cb:	(bad)  
  43d1cc:	std    
  43d1cd:	retf   
  43d1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d1cf:	les    edi,FWORD PTR [ecx+0x2c]
  43d1d2:	jle    0x43d193
  43d1d4:	arpl   WORD PTR [eax-0x3c],bx
  43d1d7:	jmp    0x53ac6048
  43d1dc:	je     0x43d257
  43d1de:	adc    al,ah
  43d1e0:	les    edx,FWORD PTR [eax-0x1a9e3f1c]
  43d1e6:	sub    esi,DWORD PTR [ecx+0x2cb46ec0]
  43d1ec:	cmp    edi,DWORD PTR [eax]
  43d1ee:	mov    edi,0xa7037b9a
  43d1f3:	fdiv   DWORD PTR [edi-0x3d]
  43d1f6:	out    0xa3,al
  43d1f8:	sahf   
  43d1f9:	adc    bh,BYTE PTR [ebx-0x19]
  43d1fc:	cld    
  43d1fd:	jecxz  0x43d252
  43d1ff:	mov    ds:0xb4b2f2c5,eax
  43d204:	dec    ebx
  43d205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d206:	sbb    ch,BYTE PTR [ebx-0x4068fe8e]
  43d20c:	mov    ebx,0x4a4ac801
  43d211:	fsub   st(7),st
  43d213:	cmovne esp,DWORD PTR [ebx-0x40]
  43d217:	in     al,dx
  43d218:	rol    BYTE PTR [esi],0x5d
  43d21b:	inc    ebx
  43d21c:	and    esi,DWORD PTR [esi+0x16100f62]
  43d222:	mov    ds:0x74c9369e,al
  43d227:	xor    bh,bh
  43d229:	mov    eax,0xb170eb36
  43d22e:	imul   eax,DWORD PTR [edx+0x26],0xffffffdf
  43d232:	fcom   QWORD PTR [ebx]
  43d234:	adc    al,0xa
  43d236:	test   DWORD PTR [esi+0x260c55],edi
  43d23c:	popa   
  43d23d:	lds    esi,FWORD PTR [edx+0x7ecd1215]
  43d243:	adc    al,0x24
  43d245:	stc    
  43d246:	xor    ecx,esi
  43d248:	xchg   edx,eax
  43d249:	cld    
  43d24a:	mov    dh,0x13
  43d24c:	push   0x48
  43d24e:	js     0x43d21d
  43d250:	add    DWORD PTR [ebx+0x66094442],ebp
  43d256:	lock icebp 
  43d258:	retf   0xf617
  43d25b:	mov    al,ds:0x1493e07d
  43d260:	adc    esp,DWORD PTR ds:0x866844cf
  43d266:	scas   eax,DWORD PTR es:[edi]
  43d267:	inc    ebp
  43d268:	cmp    BYTE PTR [edx+0x46],ah
  43d26b:	push   esp
  43d26c:	es icebp 
  43d26e:	add    esi,ebx
  43d270:	jns    0x43d2ce
  43d272:	pop    esi
  43d273:	popf   
  43d274:	outs   dx,BYTE PTR ds:[esi]
  43d275:	mov    cl,0xe6
  43d277:	dec    ecx
  43d278:	jge    0x43d2bc
  43d27a:	sbb    BYTE PTR [ecx-0x5e],0xad
  43d27e:	repnz push ebp
  43d280:	pop    edx
  43d281:	lods   eax,DWORD PTR ds:[esi]
  43d282:	jo     0x43d2ac
  43d284:	mov    ebp,0x4dfc6985
  43d289:	inc    ebp
  43d28a:	nop
  43d28b:	dec    esi
  43d28c:	dec    esp
  43d28d:	push   esp
  43d28e:	cmp    ecx,DWORD PTR [ebp+0xc]
  43d291:	add    BYTE PTR [ebx+0x6d70f493],bl
  43d297:	pop    esp
  43d298:	xchg   ebp,eax
  43d299:	cmp    eax,0xd0cf1f52
  43d29e:	xchg   esp,eax
  43d29f:	adc    DWORD PTR [eax+0x3e],edx
  43d2a2:	jge    0x43d273
  43d2a4:	(bad)  [esi-0x30]
  43d2a7:	cmp    al,0xf0
  43d2a9:	stc    
  43d2aa:	ret    
  43d2ab:	lds    edx,FWORD PTR [edi-0x24]
  43d2ae:	add    eax,DWORD PTR [ebp+0x60]
  43d2b1:	adc    DWORD PTR [eax-0x7e],0xffffffb8
  43d2b5:	or     eax,0x84fc76a3
  43d2ba:	sub    ebx,ecx
  43d2bc:	lahf   
  43d2bd:	(bad)  
  43d2be:	in     al,0x75
  43d2c0:	mov    esi,0x7954ac20
  43d2c5:	je     0x43d2a2
  43d2c7:	mov    esp,0x4fc14446
  43d2cc:	sar    BYTE PTR [ecx],1
  43d2ce:	ja     0x43d322
  43d2d0:	sub    al,0x18
  43d2d2:	jge    0x43d342
  43d2d4:	fdivr  DWORD PTR [eax+0xe]
  43d2d7:	(bad)  
  43d2d9:	(bad)  
  43d2da:	jae    0x43d27a
  43d2dc:	imul   esp,DWORD PTR [ebx-0x64],0xfaa72198
  43d2e3:	sbb    al,BYTE PTR gs:[ebp-0x1a023f5e]
  43d2ea:	cli    
  43d2eb:	test   DWORD PTR ds:0xe484d6d7,0xd598b04e
  43d2f5:	lods   al,BYTE PTR ds:[esi]
  43d2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d2f7:	fwait
  43d2f8:	pop    ecx
  43d2f9:	mov    WORD PTR [esi-0x3859435e],?
  43d2ff:	scas   al,BYTE PTR es:[edi]
  43d300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d301:	sbb    eax,0x2fef53b0
  43d306:	iret   
  43d307:	push   edx
  43d308:	es js  0x43d30d
  43d30b:	aam    0x49
  43d30d:	inc    edi
  43d30e:	sti    
  43d30f:	jp     0x43d33e
  43d311:	sub    al,0x70
  43d313:	mov    ebx,0x65dcdcf8
  43d318:	stos   BYTE PTR es:[edi],al
  43d319:	inc    edi
  43d31a:	addr16 dec esi
  43d31c:	jno    0x43d33a
  43d31e:	cmp    dh,BYTE PTR [esi]
  43d320:	xor    al,0xa6
  43d322:	push   cs
  43d323:	sub    ebx,DWORD PTR [esi-0x36]
  43d326:	(bad)
  43d32a:	xor    DWORD PTR [eax],edi
  43d32c:	(bad)  
  43d32d:	fsub   QWORD PTR [edi-0x19140418]
  43d333:	in     eax,0xf1
  43d335:	or     DWORD PTR [edx],ecx
  43d337:	add    ecx,DWORD PTR [edi+edx*8]
  43d33a:	lahf   
  43d33b:	jmp    0x3095:0x59288b1
  43d342:	popf   
  43d343:	sub    BYTE PTR es:[eax-0x2ae446a3],cl
  43d34a:	fcomp  st(3)
  43d34c:	xchg   ebp,eax
  43d34d:	dec    ebx
  43d34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d34f:	xor    DWORD PTR [ecx+0x1a],ebp
  43d352:	inc    ebx
  43d353:	cld    
  43d354:	pusha  
  43d355:	jnp    0x43d302
  43d357:	icebp  
  43d358:	ss adc eax,0xd12083ef
  43d35e:	pop    edx
  43d35f:	jo     0x43d2ed
  43d361:	divps  xmm7,XMMWORD PTR [eax-0x7b]
  43d365:	inc    esp
  43d366:	ss mov bh,0xb
  43d369:	pusha  
  43d36a:	jno    0x43d38b
  43d36c:	jmp    0x43d380
  43d36e:	push   0xa4bf53aa
  43d373:	sub    cl,0xbe
  43d376:	fs adc ch,ah
  43d379:	cld    
  43d37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d37b:	inc    ebx
  43d37c:	clc    
  43d37d:	sbb    ebx,edi
  43d37f:	cli    
  43d380:	xor    al,0xbd
  43d382:	pop    edi
  43d383:	add    dl,BYTE PTR [edx+ebp*2-0x25]
  43d387:	inc    ebx
  43d388:	adc    al,0x58
  43d38a:	dec    ebp
  43d38b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d38c:	loopne 0x43d3d6
  43d38e:	dec    eax
  43d38f:	cmp    dh,cl
  43d391:	add    eax,0x5a3fbd7c
  43d396:	je     0x43d33a
  43d398:	ins    DWORD PTR es:[edi],dx
  43d399:	lea    esp,ss:[eax+0x59f70505]
  43d3a0:	pop    ss
  43d3a1:	mov    ds:0x7c480f5d,al
  43d3a6:	loop   0x43d330
  43d3a8:	stos   DWORD PTR es:[edi],eax
  43d3a9:	push   cs
  43d3aa:	out    0x69,al
  43d3ac:	test   BYTE PTR [ebx+edx*4-0x4b],ch
  43d3b0:	shrd   DWORD PTR [esi-0x6f1f5cc9],edx,0x2d
  43d3b8:	call   0x3d300cf2
  43d3bd:	mov    ebp,0x55dcb44a
  43d3c2:	xchg   esi,esp
  43d3c4:	inc    esp
  43d3c5:	xor    ah,bh
  43d3c7:	pushf  
  43d3c8:	pop    esp
  43d3c9:	pop    edi
  43d3ca:	xchg   esp,eax
  43d3cb:	enter  0x5c76,0x9
  43d3cf:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  43d3d1:	adc    BYTE PTR [ebx+edi*4],0xae
  43d3d5:	jg     0x43d3b1
  43d3d7:	rcr    DWORD PTR [ebx],1
  43d3d9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  43d3db:	jns    0x43d371
  43d3dd:	imul   esi,DWORD PTR [ebp+0x1a],0xc83a4c76
  43d3e4:	mov    DWORD PTR [esp+ecx*2],0x42155dee
  43d3eb:	daa    
  43d3ec:	in     al,dx
  43d3ed:	mov    ds,WORD PTR cs:[ebp-0x58]
  43d3f1:	or     bh,BYTE PTR [edi]
  43d3f3:	push   esi
  43d3f4:	mov    dh,0x94
  43d3f6:	daa    
  43d3f7:	xor    DWORD PTR [edi-0x6369cb00],ebx
  43d3fd:	push   eax
  43d3fe:	mov    eax,0xc594b82e
  43d403:	add    BYTE PTR [edi-0x5923bc42],cl
  43d409:	call   0x3e0e:0x79e38ebc
  43d410:	add    BYTE PTR [eax+edx*8+0x21e3f89c],bh
  43d417:	xor    bh,BYTE PTR [esi-0x58]
  43d41a:	add    esi,DWORD PTR [ebx+0x36]
  43d41d:	dec    ebp
  43d41e:	cmp    al,0x9d
  43d420:	pop    ebx
  43d421:	jbe    0x43d3ef
  43d423:	inc    ebx
  43d424:	add    al,0xb1
  43d426:	mov    al,ds:0x458731cd
  43d42b:	lock out 0xdd,al
  43d42e:	xor    esi,DWORD PTR [ebx+0x2bc4a49d]
  43d434:	adc    al,0x65
  43d436:	add    al,0x30
  43d438:	or     DWORD PTR [ebx-0x50],0xffffffd8
  43d43c:	pop    edx
  43d43d:	cmp    BYTE PTR [edi-0x57cc6085],al
  43d443:	repnz adc eax,0xb1fce0d5
  43d449:	add    BYTE PTR [ebx+eax*2],0x62
  43d44d:	adc    BYTE PTR [ecx],al
  43d44f:	add    al,0x92
  43d451:	inc    ebx
  43d452:	xchg   ebx,eax
  43d453:	mov    esp,0x41c68976
  43d458:	sub    dl,cl
  43d45a:	iret   
  43d45b:	sahf   
  43d45c:	inc    esi
  43d45d:	repz cld 
  43d45f:	gs inc eax
  43d461:	dec    esp
  43d462:	mov    eax,0xfbbab741
  43d467:	adc    edx,0xffffffb5
  43d46a:	jo     0x43d4ae
  43d46c:	xchg   ebx,eax
  43d46d:	dec    edx
  43d46e:	retf   0x9301
  43d471:	cli    
  43d472:	rcr    BYTE PTR [eax],0x60
  43d475:	nop
  43d476:	or     eax,0x5949efe
  43d47b:	xchg   edi,eax
  43d47c:	cmp    al,0x63
  43d47e:	jnp    0x43d4e2
  43d480:	jge    0x43d446
  43d482:	icebp  
  43d483:	sahf   
  43d484:	ins    BYTE PTR es:[edi],dx
  43d485:	pusha  
  43d486:	add    cl,dl
  43d488:	pop    ecx
  43d489:	mov    al,0xc8
  43d48b:	or     BYTE PTR ss:[edi+0x6c0e4284],dh
  43d492:	xor    cl,BYTE PTR [eax+0xc]
  43d495:	les    ebx,FWORD PTR [eax+0xb93e82c]
  43d49b:	sub    eax,ebx
  43d49d:	inc    eax
  43d49e:	mov    ecx,0xb48e5006
  43d4a3:	sbb    eax,0x13a53497
  43d4a8:	jle    0x43d51e
  43d4aa:	mov    gs,ebp
  43d4ac:	xchg   edi,eax
  43d4ad:	stos   DWORD PTR es:[edi],eax
  43d4ae:	pop    esi
  43d4af:	shl    esi,0x19
  43d4b2:	cwde   
  43d4b3:	sub    al,0x4f
  43d4b5:	out    0xe5,eax
  43d4b7:	loope  0x43d4d3
  43d4b9:	js     0x43d4a7
  43d4bb:	mov    esp,0x8fa852c4
  43d4c0:	loope  0x43d44b
  43d4c2:	ret    0x6483
  43d4c5:	loopne 0x43d4cd
  43d4c7:	cmp    al,0x6f
  43d4c9:	addr16 push eax
  43d4cb:	inc    ecx
  43d4cc:	cmp    al,0x88
  43d4ce:	(bad)  
  43d4d0:	shl    bh,cl
  43d4d2:	jbe    0x43d4d2
  43d4d4:	cmp    DWORD PTR [esp+ebp*4-0x1e46c77b],ebp
  43d4db:	mov    ah,0x43
  43d4dd:	xor    bh,BYTE PTR [edi+0x27d395d0]
  43d4e3:	into   
  43d4e4:	stc    
  43d4e5:	(bad)  
  43d4e6:	pop    edi
  43d4e7:	stos   BYTE PTR es:[edi],al
  43d4e8:	js     0x43d498
  43d4ea:	pop    ebx
  43d4eb:	push   ss
  43d4ec:	fcmovu st,st(2)
  43d4ee:	cmp    BYTE PTR [ebp-0x55],0x9c
  43d4f2:	out    0x72,eax
  43d4f4:	lds    edi,FWORD PTR [edi+0x302263d1]
  43d4fa:	ror    al,0x69
  43d4fd:	sti    
  43d4fe:	stos   BYTE PTR es:[edi],al
  43d4ff:	shl    BYTE PTR [eax],0x85
  43d502:	outs   dx,BYTE PTR ds:[esi]
  43d503:	in     al,0xd4
  43d505:	call   FWORD PTR [ebx]
  43d507:	jge    0x43d4e8
  43d509:	push   ebp
  43d50a:	into   
  43d50b:	jmp    0x452d:0xa371c508
  43d512:	mov    eax,0x5b04149
  43d517:	inc    esi
  43d519:	cld    
  43d51a:	sbb    ebx,DWORD PTR [edx]
  43d51c:	push   eax
  43d51d:	mov    esp,edx
  43d51f:	stos   DWORD PTR es:[edi],eax
  43d520:	cs mov ch,0xdb
  43d523:	es clc 
  43d525:	call   0xc80fcdb7
  43d52a:	ja     0x43d4e3
  43d52c:	shl    edi,0x47
  43d52f:	repnz sbb al,0x8a
  43d532:	fnstenv [edi+0x77]
  43d535:	pop    edi
  43d536:	or     edi,esp
  43d538:	sub    BYTE PTR [eax+0x13],al
  43d53b:	mov    BYTE PTR [eax+0x2a732b52],ch
  43d541:	gs call 0xc6916d6f
  43d547:	enter  0x3c24,0x24
  43d54b:	or     al,0x50
  43d54d:	mov    bh,0xda
  43d54f:	inc    ebx
  43d550:	jecxz  0x43d58b
  43d552:	ds pop esi
  43d554:	xor    BYTE PTR [ecx],dl
  43d556:	fiadd  DWORD PTR [eax+0x64740d4c]
  43d55c:	fist   DWORD PTR [ebp+ecx*8+0x51]
  43d560:	lahf   
  43d561:	and    eax,0x89cdc469
  43d566:	cld    
  43d567:	mov    bl,0x8
  43d569:	add    dl,dl
  43d56b:	hlt    
  43d56c:	mov    al,ds:0xe52080c0
  43d571:	jle    0x43d5bb
  43d573:	mov    al,ds:0x2147f3b0
  43d578:	inc    esp
  43d579:	(bad)  
  43d57a:	jle    0x43d501
  43d57c:	and    al,0x4
  43d57e:	xor    BYTE PTR [eax],ch
  43d580:	adc    BYTE PTR [eax],bh
  43d582:	cmp    ecx,eax
  43d584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d585:	cmp    bh,BYTE PTR [edi+edi*8-0xa0cb7dd]
  43d58c:	rcr    esp,0x5f
  43d58f:	sub    al,0x53
  43d592:	outs   dx,BYTE PTR ds:[esi]
  43d593:	hlt    
  43d594:	inc    edi
  43d595:	push   edi
  43d596:	cmp    BYTE PTR [ebx],0xd
  43d599:	sbb    DWORD PTR [eax+0x1f9c002b],edx
  43d59f:	addr16 test al,0x13
  43d5a2:	mov    dh,BYTE PTR [edi+eax*1-0x8bb2aef]
  43d5a9:	cli    
  43d5aa:	push   eax
  43d5ab:	jmp    0x43d581
  43d5ad:	pop    esp
  43d5ae:	fbstp  TBYTE PTR [ebx+0x68]
  43d5b1:	sar    DWORD PTR [ebx-0x1f],cl
  43d5b4:	js     0x43d579
  43d5b6:	add    BYTE PTR [eax+0x2794f333],cl
  43d5bc:	push   es
  43d5bd:	mov    al,ds:0xb039731b
  43d5c2:	or     esi,DWORD PTR [esi-0x44]
  43d5c5:	inc    DWORD PTR [eax+ecx*2-0xd]
  43d5c9:	in     eax,0x54
  43d5cb:	out    0x6c,eax
  43d5cd:	cmc    
  43d5ce:	xlat   BYTE PTR fs:[ebx]
  43d5d0:	cmp    esi,DWORD PTR [eax-0x35]
  43d5d3:	inc    ecx
  43d5d4:	jl     0x43d595
  43d5d6:	fwait
  43d5d7:	or     BYTE PTR [ebx-0x5ce77eb4],dh
  43d5dd:	call   0xff07:0xb4299724
  43d5e4:	inc    eax
  43d5e5:	sti    
  43d5e6:	test   eax,0xf1eb50d9
  43d5eb:	pop    esp
  43d5ec:	fild   QWORD PTR [eax+ebp*2-0x2d]
  43d5f0:	cmp    DWORD PTR [edi+eax*8-0x3b],esi
  43d5f4:	xchg   ebp,eax
  43d5f5:	add    al,0xb7
  43d5f7:	repnz adc BYTE PTR [ebx-0x5460e357],ch
  43d5fe:	sub    BYTE PTR [ebx-0x7cc75ea3],dl
  43d604:	lods   al,BYTE PTR ds:[esi]
  43d605:	les    esi,FWORD PTR [edi+0x36]
  43d608:	shl    bh,1
  43d60a:	(bad)  
  43d60b:	pusha  
  43d60c:	fistp  DWORD PTR [ecx-0x74348f07]
  43d612:	jl     0x43d5d3
  43d614:	mov    ebx,0x14a7b308
  43d619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d61a:	jb     0x43d5d1
  43d61c:	and    al,0x97
  43d61e:	dec    esp
  43d61f:	xor    BYTE PTR [ebx+0x6c7f3cd3],cl
  43d625:	enter  0xed73,0x41
  43d629:	fsub   DWORD PTR [ebx+0x4c]
  43d62c:	in     al,0x57
  43d62e:	aam    0xf0
  43d630:	dec    ebx
  43d631:	jmp    0x43d633
  43d633:	mov    ebx,0xab1099ca
  43d638:	push   edi
  43d639:	sbb    al,0x9f
  43d63b:	dec    edi
  43d63c:	sub    BYTE PTR [ebx+0x3e8734d8],dl
  43d642:	push   ebp
  43d643:	les    esi,FWORD PTR [edi+0x77]
  43d646:	shr    BYTE PTR [ebx+0x10],1
  43d649:	fcomp  QWORD PTR [edi-0x5d]
  43d64c:	call   0xf8a56ba4
  43d651:	inc    ebx
  43d652:	sub    al,BYTE PTR [edi+esi*1+0x442b90ce]
  43d659:	pushf  
  43d65a:	pop    ds
  43d65b:	sar    BYTE PTR [ecx+0x3c0a8b30],1
  43d661:	jg     0x43d649
  43d663:	enter  0xe473,0xd4
  43d667:	addr16 mov ds:0xe475,al
  43d66b:	push   edi
  43d66c:	dec    esi
  43d66d:	lock dec ebx
  43d66f:	(bad)  
  43d670:	cld    
  43d671:	aas    
  43d672:	pop    ss
  43d673:	mov    BYTE PTR [ebx],dh
  43d675:	add    eax,0x81239801
  43d67a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d67b:	pop    ss
  43d67c:	xchg   DWORD PTR [eax-0x436bf5],esi
  43d682:	imul   ebx,ebp,0x4c
  43d685:	imul   eax,DWORD PTR [edi-0x17cba024],0x53
  43d68c:	mov    edx,0x153a47f4
  43d691:	test   BYTE PTR [edi],dh
  43d693:	dec    ecx
  43d694:	nop
  43d695:	sub    esp,ebp
  43d697:	pushf  
  43d698:	pop    ds
  43d699:	jmp    0x2170ea46
  43d69e:	mov    eax,0xf7445403
  43d6a3:	cdq    
  43d6a4:	push   eax
  43d6a5:	jmp    0x43d70a
  43d6a7:	pop    esp
  43d6a8:	fisttp WORD PTR [ebp-0x3]
  43d6ab:	ins    BYTE PTR es:[edi],dx
  43d6ac:	iret   
  43d6ad:	idiv   esp
  43d6af:	aas    
  43d6b0:	fimul  DWORD PTR [eax+0x27941233]
  43d6b6:	xlat   BYTE PTR ds:[ebx]
  43d6b7:	xor    eax,0xb03717a4
  43d6bc:	or     edx,DWORD PTR [esi+0x488effbc]
  43d6c2:	repz lahf 
  43d6c4:	aas    
  43d6c5:	pop    eax
  43d6c6:	jecxz  0x43d689
  43d6c8:	sbb    BYTE PTR [eax+0x7832cf6c],ch
  43d6ce:	ret    
  43d6cf:	sub    eax,0xa066b704
  43d6d4:	adc    al,0xa7
  43d6d6:	scas   al,BYTE PTR es:[edi]
  43d6d7:	and    BYTE PTR [edi],dl
  43d6d9:	xchg   ebx,eax
  43d6da:	mov    al,0xb
  43d6dc:	inc    eax
  43d6dd:	mov    esp,0x4c5d2eff
  43d6e2:	out    dx,eax
  43d6e3:	lods   eax,DWORD PTR ds:[esi]
  43d6e4:	pop    eax
  43d6e5:	jecxz  0x43d760
  43d6e7:	xlat   BYTE PTR fs:[ebx]
  43d6e9:	or     dh,BYTE PTR [eax-0x35]
  43d6ec:	adc    ch,al
  43d6ee:	add    BYTE PTR [ebx-0x4c50f31a],bh
  43d6f4:	sbb    BYTE PTR [ebx+0x46972407],ah
  43d6fa:	data16 xor al,0x87
  43d6fd:	ins    DWORD PTR es:[edi],dx
  43d6fe:	sar    BYTE PTR [ebx-0x33],0x50
  43d702:	jmp    0x43d6bc
  43d704:	pop    esp
  43d705:	fisttp WORD PTR [esi]
  43d707:	jecxz  0x43d775
  43d709:	iret   
  43d70a:	scas   al,BYTE PTR es:[edi]
  43d70b:	js     0x43d6d0
  43d70d:	jp     0x43d713
  43d70f:	mov    bh,0xe6
  43d711:	adc    BYTE PTR [ebx-0x64dfc38e],ch
  43d717:	jmp    FWORD PTR [edi+ecx*4]
  43d71a:	stc    
  43d71b:	cmp    BYTE PTR [ebx-0x59883b39],al
  43d721:	mov    eax,0xe0b567d4
  43d726:	pop    ebx
  43d727:	xor    esp,ebp
  43d729:	dec    edi
  43d72a:	mov    edi,0x156ebf7c
  43d72f:	sub    al,0xef
  43d731:	mov    ah,0x38
  43d733:	jecxz  0x43d6fb
  43d735:	add    al,0xd7
  43d737:	sbb    DWORD PTR [eax],edx
  43d739:	retf   
  43d73a:	push   edx
  43d73b:	(bad)  
  43d73c:	loopne 0x43d779
  43d73e:	jbe    0x43d72c
  43d740:	das    
  43d741:	cmp    eax,0xc4e623f8
  43d746:	pop    ss
  43d747:	xchg   ah,cl
  43d749:	aam    0x7
  43d74b:	int    0xa0
  43d74d:	jnp    0x43d6e3
  43d74f:	lods   al,BYTE PTR ds:[esi]
  43d750:	outs   dx,DWORD PTR ds:[esi]
  43d751:	sar    DWORD PTR [eax+0x2acae463],1
  43d757:	je     0x43d73e
  43d759:	cmp    al,0x0
  43d75b:	add    BYTE PTR [eax],al
  43d75d:	add    BYTE PTR [eax],al
  43d75f:	add    ch,bl
  43d761:	adc    eax,0x7ff41f0
  43d766:	add    BYTE PTR [eax],al
  43d768:	add    BYTE PTR [eax],al
  43d76a:	add    BYTE PTR [eax],al
  43d76c:	inc    DWORD PTR [edi]
  43d76e:	add    BYTE PTR [eax],al
  43d770:	push   esi
  43d771:	add    BYTE PTR [esi],ah
  43d773:	jl     0x43d775
  43d775:	add    dh,BYTE PTR [esi]
  43d777:	or     BYTE PTR [eax],al
  43d779:	add    BYTE PTR [edx],dl
  43d77b:	dec    ebx
  43d77c:	add    BYTE PTR [ecx+ebx*1],ah
  43d77f:	inc    esi
  43d780:	xchg   ebp,eax
  43d781:	imul   edi,DWORD PTR [edi+eiz*4],0x11d024f2
  43d788:	leave  
  43d789:	call   0x2148:0x83690e29
  43d790:	icebp  
  43d791:	retf   0x1745
  43d794:	dec    edi
  43d795:	(bad)  
  43d796:	mov    ah,0x6c
  43d798:	add    DWORD PTR [esi+edi*8+0x71],0x6c
  43d79d:	(bad)  
  43d79e:	dec    ecx
  43d79f:	sti    
  43d7a0:	nop
  43d7a1:	inc    esp
  43d7a2:	jnp    0x43d7d3
  43d7a4:	cmove  edi,DWORD PTR [edx]
  43d7a7:	inc    eax
  43d7a8:	popf   
  43d7a9:	cmp    BYTE PTR [ebp-0x49a62f07],ah
  43d7af:	sbb    BYTE PTR [ebp+0x425c1f],bh
  43d7b5:	xchg   esp,eax
  43d7b6:	les    esi,FWORD PTR [eax+edi*8-0x617f2378]
  43d7bd:	mov    bh,0xf1
  43d7bf:	(bad)  
  43d7c0:	dec    esp
  43d7c1:	mov    ah,0xaf
  43d7c3:	and    BYTE PTR [edi+eax*2+0x7f33f93c],0xf2
  43d7cb:	clc    
  43d7cc:	sbb    eax,0x9285914c
  43d7d1:	rcr    BYTE PTR [esi+0x70f4bcc6],1
  43d7d7:	inc    edx
  43d7d8:	jae    0x43d763
  43d7da:	es dec ebx
  43d7dc:	or     esi,esi
  43d7de:	xor    eax,0x1742b094
  43d7e3:	jle    0x43d773
  43d7e5:	and    bl,BYTE PTR ds:0x7f18b88b
  43d7eb:	(bad)  
  43d7ec:	in     al,0x28
  43d7ee:	dec    ebp
  43d7ef:	lods   al,BYTE PTR ds:[esi]
  43d7f0:	mov    ah,bl
  43d7f2:	in     eax,dx
  43d7f3:	jbe    0x43d7ac
  43d7f5:	xchg   bh,ch
  43d7f7:	mov    ah,0x2
  43d7f9:	aam    0x84
  43d7fb:	jmp    0x788f:0x5a621dca
  43d802:	xor    al,0xa8
  43d804:	inc    esp
  43d805:	or     BYTE PTR [ebp+0x737e296],cl
  43d80b:	dec    edx
  43d80c:	int3   
  43d80d:	and    eax,0x5e43857b
  43d812:	cmp    BYTE PTR fs:[ebp+0x296b88f0],al
  43d819:	outs   dx,DWORD PTR ds:[esi]
  43d81a:	lods   eax,DWORD PTR ds:[esi]
  43d81b:	and    eax,0xab14df29
  43d820:	mov    dl,0x8
  43d822:	pusha  
  43d823:	xchg   edi,eax
  43d824:	sub    DWORD PTR [eax+ebp*4+0x54b967bc],ebp
  43d82b:	and    al,0xbe
  43d82d:	mov    bh,0xe3
  43d82f:	pop    es
  43d830:	loopne 0x43d7d1
  43d832:	push   ebx
  43d833:	retf   0xfd3d
  43d836:	and    BYTE PTR [ebp+0x14fc046e],0x8a
  43d83d:	clc    
  43d83e:	sbb    DWORD PTR [ebx-0x7bd75891],ebp
  43d844:	stos   BYTE PTR es:[edi],al
  43d845:	mov    eax,ds:0x372e59de
  43d84a:	data16 shr BYTE PTR [edx-0x133e9fc2],1
  43d851:	daa    
  43d852:	stc    
  43d853:	pop    ds
  43d854:	hlt    
  43d855:	push   ds
  43d856:	adc    al,0xe7
  43d858:	mov    esi,0x5e7f97d1
  43d85d:	sbb    dl,dl
  43d85f:	push   ss
  43d860:	mov    ebx,0x8439f8c2
  43d865:	adc    DWORD PTR [esi+edx*4],edi
  43d868:	cmp    ah,ch
  43d86a:	jge    0x43d86b
  43d86c:	out    0x67,al
  43d86e:	jbe    0x43d8d0
  43d870:	push   ebp
  43d871:	dec    ebx
  43d872:	push   ebp
  43d873:	xor    cl,al
  43d875:	push   0xcc0831a2
  43d87a:	jbe    0x43d8d6
  43d87c:	ins    BYTE PTR es:[edi],dx
  43d87d:	sub    ebx,DWORD PTR [esi+eiz*4-0x169d32c]
  43d884:	test   al,0xdc
  43d886:	lock xchg esp,eax
  43d888:	out    dx,eax
  43d889:	jg     0x43d8db
  43d88b:	inc    ecx
  43d88c:	sbb    BYTE PTR [eax-0x6f],0x2e
  43d890:	lock xor BYTE PTR [ecx],0x74
  43d894:	(bad)  
  43d895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d896:	dec    ebp
  43d897:	sti    
  43d898:	xchg   ah,bl
  43d89a:	add    DWORD PTR [ebx+0x65d20f1c],eax
  43d8a0:	pop    edx
  43d8a1:	mov    ebp,0x407fd7e2
  43d8a6:	or     eax,edi
  43d8a8:	out    0x9c,al
  43d8aa:	add    BYTE PTR ds:0xb76484ca,dl
  43d8b0:	push   0xc99beaa1
  43d8b5:	jmp    0x59b8:0x189788c8
  43d8bc:	and    al,0xbf
  43d8be:	shr    esi,0xac
  43d8c1:	iret   
  43d8c2:	in     eax,0xe6
  43d8c4:	and    DWORD PTR [eax-0x5e],eax
  43d8c7:	rcl    BYTE PTR [ecx+0x54],0x5
  43d8cb:	imul   esp,edi,0x7b181b9e
  43d8d1:	(bad)  
  43d8d2:	js     0x43d926
  43d8d4:	shl    ebx,0x3b
  43d8d7:	(bad)  
  43d8d8:	lea    ecx,[edi+0xa]
  43d8db:	pushf  
  43d8dc:	bnd jbe 0x43d897
  43d8df:	inc    ebp
  43d8e0:	and    edx,0x6e
  43d8e3:	rol    eax,1
  43d8e5:	xlat   BYTE PTR ds:[ebx]
  43d8e6:	(bad)  
  43d8e7:	sbb    ecx,DWORD PTR [edx+0x58]
  43d8ea:	mov    ecx,0x16e4d77d
  43d8ef:	jl     0x43d87d
  43d8f1:	and    edx,esi
  43d8f3:	xchg   esp,eax
  43d8f4:	xchg   edi,eax
  43d8f5:	arpl   WORD PTR [ecx+ebx*1+0x4e5231a8],cx
  43d8fc:	or     ecx,0x1b
  43d8ff:	mov    al,0x81
  43d901:	jno    0x43d8a3
  43d903:	and    DWORD PTR [ecx],ebp
  43d905:	sub    eax,0xe4d4aa8b
  43d90a:	ins    DWORD PTR es:[edi],dx
  43d90b:	xor    bh,BYTE PTR [eax-0x4f]
  43d90e:	xor    eax,DWORD PTR [edx]
  43d910:	mov    eax,ds:0x1073c3f8
  43d915:	adc    BYTE PTR [ebp-0x22],dh
  43d918:	pop    edi
  43d919:	out    dx,eax
  43d91a:	mov    al,ds:0xe35b9f1b
  43d91f:	pop    esi
  43d920:	jne    0x43d963
  43d922:	lahf   
  43d923:	les    edx,FWORD PTR [ebx-0x33f4129a]
  43d929:	mov    bl,0xa4
  43d92b:	pushf  
  43d92c:	call   0x329f049b
  43d931:	jge    0x43d926
  43d933:	ins    BYTE PTR es:[edi],dx
  43d934:	mov    cl,0xc
  43d936:	sar    BYTE PTR cs:[esp],1
  43d93a:	or     al,0x10
  43d93c:	mov    ebp,esi
  43d93e:	xor    BYTE PTR [ebx+0x78],ch
  43d941:	fst    st(2)
  43d943:	mov    edx,0xd868320f
  43d948:	rol    ch,1
  43d94a:	fadd   st,st(0)
  43d94c:	addr16 mov ecx,0x41fc07f9
  43d952:	xchg   ecx,eax
  43d953:	mov    al,ds:0x14156135
  43d958:	adc    al,0x20
  43d95a:	cli    
  43d95b:	fwait
  43d95c:	cwde   
  43d95d:	call   0x24aeb60a
  43d962:	inc    esp
  43d963:	fmul   DWORD PTR [ebp-0x27c6d065]
  43d969:	push   edx
  43d96a:	cmp    eax,0x944280ec
  43d96f:	mov    ah,0x74
  43d971:	pop    eax
  43d972:	mov    al,0xdc
  43d974:	adc    BYTE PTR [esi+0x4f],dl
  43d977:	dec    ebp
  43d978:	jo     0x43d8fd
  43d97a:	fcom   QWORD PTR [edx+0x63]
  43d97d:	xor    al,0x5d
  43d97f:	jge    0x43d9db
  43d981:	xchg   esp,ebp
  43d983:	pop    ebx
  43d984:	push   0xffffffc2
  43d986:	pop    eax
  43d987:	add    al,BYTE PTR [edi+0x5f]
  43d98a:	mov    ds:0x896bdb07,eax
  43d98f:	jl     0x43d956
  43d991:	sbb    DWORD PTR [edi+eiz*1],esp
  43d994:	dec    esp
  43d995:	loop   0x43d9ee
  43d997:	mov    bl,0x24
  43d999:	sub    ecx,edi
  43d99b:	adc    BYTE PTR [ecx-0x3e],ah
  43d99e:	or     al,0xed
  43d9a0:	mov    dl,0x48
  43d9a2:	and    DWORD PTR [esi],esp
  43d9a4:	fmul   st(1),st
  43d9a6:	sub    ch,BYTE PTR [ecx+edx*4+0x763c6c4d]
  43d9ad:	aaa    
  43d9ae:	adc    BYTE PTR [edi+0x61],0x4d
  43d9b2:	pop    ebx
  43d9b3:	nop
  43d9b4:	pop    edi
  43d9b5:	mov    dl,0xba
  43d9b7:	and    al,ah
  43d9b9:	popf   
  43d9ba:	sbb    DWORD PTR [edi],edi
  43d9bc:	mov    ah,0x9f
  43d9be:	and    bl,BYTE PTR [edx+0x71e11601]
  43d9c4:	aas    
  43d9c5:	pop    esp
  43d9c6:	jnp    0x43d9a6
  43d9c8:	sub    eax,0x259e7ef4
  43d9cd:	popf   
  43d9ce:	add    BYTE PTR [esi+esi*2+0x4f],0x92
  43d9d3:	loope  0x43d98c
  43d9d5:	sbb    eax,0xe058a4b2
  43d9da:	cmp    eax,0xabfa2f17
  43d9df:	add    cl,al
  43d9e1:	xor    eax,0x833fd703
  43d9e6:	jmp    0x43da65
  43d9e8:	stc    
  43d9e9:	jo     0x43d9d3
  43d9eb:	jmp    0x4a19:0xe5fe6bc3
  43d9f2:	xchg   esp,eax
  43d9f3:	ror    esi,0x74
  43d9f6:	mov    DWORD PTR [ebx],ebp
  43d9f8:	adc    ch,al
  43d9fa:	addr16 mov eax,0xe18db49d
  43da00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43da01:	xor    BYTE PTR [edx-0x64],bl
  43da04:	fsubr  QWORD PTR [eax]
  43da06:	sub    eax,0x3679869d
  43da0b:	or     al,0x84
  43da0d:	add    BYTE PTR [ebp-0x7a],bh
  43da10:	or     edi,edi
  43da12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43da13:	les    eax,FWORD PTR [edi+0x9dda879]
  43da19:	or     cl,BYTE PTR [esi]
  43da1b:	repz and DWORD PTR [edi+ebx*8],esi
  43da1f:	int3   
  43da20:	jge    0x43da7e
  43da22:	adc    DWORD PTR [edx+0x5895c44c],edi
  43da28:	lock into 
  43da2a:	ss lahf 
  43da2c:	sbb    BYTE PTR [esi-0x29],cl
  43da2f:	jmp    0x66ceec6
  43da34:	mov    bh,0x44
  43da36:	sbb    edi,DWORD PTR [ebp+0x52]
  43da39:	std    
  43da3a:	mov    esp,0x2c7997bf
  43da3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da40:	mov    al,0x63
  43da42:	pop    eax
  43da43:	loopne 0x43da8f
  43da45:	adc    DWORD PTR [edx],0xffffffec
  43da48:	push   esp
  43da49:	jns    0x43da50
  43da4b:	xchg   esp,eax
  43da4c:	add    al,0x23
  43da4e:	add    al,0x60
  43da50:	dec    esp
  43da51:	jo     0x43daa7
  43da53:	scas   eax,DWORD PTR es:[edi]
  43da54:	cmp    eax,0xa075d128
  43da59:	mov    edi,0xff169e50
  43da5e:	dec    esp
  43da5f:	test   al,0x2f
  43da61:	repz ret 
  43da63:	aaa    
  43da64:	fwait
  43da65:	sahf   
  43da66:	adc    dh,ah
  43da68:	cli    
  43da69:	mov    bh,0xe3
  43da6b:	push   ebx
  43da6c:	xchg   DWORD PTR [ebx],edx
  43da6e:	jbe    0x43daae
  43da70:	sbb    BYTE PTR [edi+0x42f9675],dh
  43da76:	fistp  DWORD PTR [ebx]
  43da78:	cmp    edi,DWORD PTR [edx+eax*4]
  43da7b:	icebp  
  43da7c:	into   
  43da7d:	(bad)  
  43da7e:	sub    edx,DWORD PTR [ecx+0x6c60f98b]
  43da84:	pop    edi
  43da85:	pop    esp
  43da86:	xor    bl,0x50
  43da89:	pop    edi
  43da8a:	xor    al,BYTE PTR [ecx+ebp*4+0x76a216af]
  43da91:	and    ecx,ecx
  43da93:	je     0x43dac1
  43da95:	mov    dl,0x22
  43da97:	mov    dl,0x17
  43da99:	pop    esp
  43da9a:	mov    ebp,edi
  43da9c:	ficom  WORD PTR [eax-0x20]
  43da9f:	and    DWORD PTR [edi+0x226f9690],ebp
  43daa5:	shl    DWORD PTR [edx+ebx*4+0x15],1
  43daa9:	in     eax,0x49
  43daab:	jl     0x43db03
  43daad:	xchg   esi,eax
  43daae:	inc    ecx
  43daaf:	cwde   
  43dab0:	and    ah,BYTE PTR [ebp+0xceb775]
  43dab6:	cld    
  43dab7:	mov    dh,0x40
  43dab9:	mov    edx,0x7cd78ee
  43dabe:	jbe    0x43dabe
  43dac0:	shl    BYTE PTR [ebp+edi*1-0x61],0x75
  43dac5:	inc    esi
  43dac6:	cdq    
  43dac7:	mul    BYTE PTR [ecx+esi*8]
  43daca:	mov    BYTE PTR [edi+0x66],ah
  43dacd:	lahf   
  43dace:	mov    eax,ds:0x2e42370
  43dad3:	lods   al,BYTE PTR ds:[esi]
  43dad4:	pop    edi
  43dad5:	aam    0xe6
  43dad7:	mov    edx,0x9d75b55f
  43dadc:	rol    ah,1
  43dade:	xor    bl,BYTE PTR [esi-0x63]
  43dae1:	loop   0x43db30
  43dae3:	out    0x49,al
  43dae5:	js     0x43db61
  43dae7:	pop    ebp
  43dae8:	pop    ecx
  43dae9:	mov    DWORD PTR es:[esi+0x1d9cded9],ebp
  43daf0:	inc    edx
  43daf1:	cmp    DWORD PTR [ecx],ebx
  43daf3:	cmp    eax,0xc0b9c9e0
  43daf8:	cdq    
  43daf9:	or     al,0xc8
  43dafb:	mov    edi,0x1fbcde00
  43db00:	in     al,0xfd
  43db02:	mov    esp,0x6403d0e9
  43db07:	(bad)  
  43db08:	pop    ds
  43db09:	mov    WORD PTR [ecx+0x29],?
  43db0c:	adc    DWORD PTR [eax-0x1d],edx
  43db0f:	in     al,0xcf
  43db11:	(bad)  [eax+0x7d0c612a]
  43db17:	xchg   BYTE PTR [eax],ah
  43db19:	retf   
  43db1a:	pop    eax
  43db1b:	aam    0x53
  43db1d:	push   ebp
  43db1e:	pop    es
  43db1f:	fdiv   QWORD PTR [ebx-0x7d0760b]
  43db25:	adc    cl,al
  43db27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43db28:	dec    edi
  43db29:	push   es
  43db2a:	ins    BYTE PTR es:[edi],dx
  43db2b:	push   0x662f9cf1
  43db30:	sar    BYTE PTR [ecx-0x56],1
  43db33:	cmp    al,0xbc
  43db35:	rol    ah,0xc8
  43db38:	lds    edx,FWORD PTR [ebx+0x52]
  43db3b:	pop    eax
  43db3c:	out    dx,al
  43db3d:	test   al,0x9
  43db3f:	ret    
  43db40:	in     al,dx
  43db41:	out    dx,al
  43db42:	pop    eax
  43db43:	mov    ch,ch
  43db45:	ins    BYTE PTR es:[edi],dx
  43db46:	dec    edx
  43db47:	jp     0x43db9f
  43db49:	adc    cl,ch
  43db4b:	jecxz  0x43db30
  43db4d:	sub    edi,DWORD PTR cs:[esi+0x14]
  43db51:	mov    ch,0x34
  43db53:	add    eax,0x7eea9522
  43db58:	imul   ebp,DWORD PTR [ecx-0xb],0xffffffdc
  43db5c:	jmp    0x5ed5:0x98e33180
  43db63:	mov    al,ds:0x58d99f00
  43db68:	dec    ebx
  43db69:	xor    BYTE PTR [edx],ah
  43db6b:	xor    dl,BYTE PTR [esi]
  43db6d:	and    al,0x24
  43db6f:	popf   
  43db70:	push   edi
  43db71:	ds stos DWORD PTR es:[edi],eax
  43db73:	xor    esp,DWORD PTR [edi-0x7d07b7ed]
  43db79:	ret    0x47b6
  43db7c:	(bad)  
  43db7d:	cmc    
  43db7e:	rep ins BYTE PTR es:[edi],dx
  43db80:	lock cmp edi,DWORD PTR [ebp+0x2caa65bc]
  43db87:	int3   
  43db88:	adc    al,0x42
  43db8a:	jne    0x43dbf7
  43db8c:	push   ebx
  43db8d:	xor    al,0x3a
  43db8f:	sub    ah,BYTE PTR [esi]
  43db91:	cmp    dh,bl
  43db93:	dec    edx
  43db94:	(bad)  
  43db95:	fisttp DWORD PTR [ebp+esi*4+0x5c5cf87e]
  43db9c:	daa    
  43db9d:	mov    BYTE PTR [esi+0x62],cl
  43dba0:	imul   ebp,DWORD PTR [edi+0x67],0x81838a80
  43dba7:	cdq    
  43dba8:	xor    ax,0x2b5b
  43dbac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dbad:	add    DWORD PTR [ecx-0x77d77164],ecx
  43dbb3:	in     eax,dx
  43dbb4:	push   esi
  43dbb5:	dec    esp
  43dbb6:	pop    es
  43dbb7:	rol    DWORD PTR [ecx-0x53],1
  43dbba:	iret   
  43dbbb:	sub    BYTE PTR [edi+0x19],ch
  43dbbe:	jo     0x43db5a
  43dbc0:	ret    
  43dbc1:	mov    eax,ds:0xec752719
  43dbc6:	out    dx,eax
  43dbc7:	xchg   esp,eax
  43dbc8:	outs   dx,DWORD PTR ds:[esi]
  43dbc9:	add    eax,DWORD PTR [esi+0x4510f4a5]
  43dbcf:	(bad)  
  43dbd0:	mov    eax,0xaeff05f8
  43dbd5:	xchg   edi,eax
  43dbd6:	pusha  
  43dbd7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  43dbd9:	pusha  
  43dbda:	out    dx,eax
  43dbdb:	push   ds
  43dbdc:	inc    ebp
  43dbdd:	xor    edi,DWORD PTR [edi-0x7b5c455c]
  43dbe3:	ds in  al,0x6c
  43dbe6:	jns    0x43dc08
  43dbe8:	call   DWORD PTR [ecx+0x40]
  43dbeb:	test   al,0x7b
  43dbed:	jp     0x43dc57
  43dbef:	mov    esi,edi
  43dbf1:	rol    BYTE PTR [ecx-0x55],1
  43dbf4:	int3   
  43dbf5:	ret    
  43dbf6:	xchg   esp,eax
  43dbf7:	cli    
  43dbf8:	dec    ebx
  43dbf9:	fs (bad) 
  43dbfb:	stc    
  43dbfc:	sub    ah,BYTE PTR [ebp+0x44ca8734]
  43dc02:	div    DWORD PTR [edi]
  43dc04:	push   eax
  43dc05:	jmp    0x43dc68
  43dc07:	pop    esp
  43dc08:	fisttp WORD PTR [ebp+0x2acf6cfd]
  43dc0e:	js     0x43dbd3
  43dc10:	jb     0x43dc16
  43dc12:	mov    bh,0x4a
  43dc14:	adc    BYTE PTR [ebx-0x64df76e7],ch
  43dc1a:	pop    ebx
  43dc1b:	sub    al,0x8f
  43dc1d:	test   BYTE PTR [eax],bh
  43dc1f:	adc    DWORD PTR [esp+eax*8-0x2bba1a89],0x67
  43dc27:	loopne 0x43dc09
  43dc29:	xlat   BYTE PTR ds:[ebx]
  43dc2a:	pop    esp
  43dc2b:	jo     0x43dbf8
  43dc2d:	lds    edi,FWORD PTR [edi+edi*4-0x9]
  43dc31:	popf   
  43dc32:	or     al,0xaf
  43dc34:	popf   
  43dc35:	sbb    BYTE PTR [ebx+0x269724d8],ah
  43dc3b:	xor    BYTE PTR [ebx+0x7bc0a92c],cl
  43dc41:	std    
  43dc42:	int3   
  43dc43:	outs   dx,DWORD PTR ds:[esi]
  43dc44:	outs   dx,BYTE PTR ds:[esi]
  43dc45:	fsub   DWORD PTR [ebx-0x69]
  43dc48:	in     al,0x57
  43dc4a:	and    DWORD PTR [ebp-0xc],0x3b800647
  43dc51:	xor    BYTE PTR [eax],dl
  43dc53:	stos   DWORD PTR es:[edi],eax
  43dc54:	xchg   DWORD PTR [edi+ebx*4],ebx
  43dc57:	call   0x8338:0x798f2cbd
  43dc5e:	fadd   st,st(4)
  43dc60:	ja     0x43dc97
  43dc62:	shr    BYTE PTR [ebx-0x25],1
  43dc65:	dec    ecx
  43dc66:	loopne 0x43dcc3
  43dc68:	jne    0x43dc56
  43dc6a:	dec    edi
  43dc6b:	in     al,0xf8
  43dc6d:	inc    ebx
  43dc6e:	xchg   ebp,eax
  43dc6f:	test   BYTE PTR [edi],dh
  43dc71:	imul   eax,DWORD PTR ds:0xa0f02794,0xfac701b
  43dc7b:	call   0x5d835bbc
  43dc80:	int3   
  43dc81:	outs   dx,DWORD PTR ds:[esi]
  43dc82:	xor    bl,al
  43dc84:	arpl   WORD PTR [ecx-0x1c],di
  43dc87:	push   edi
  43dc88:	mov    dh,0xf0
  43dc8a:	dec    ebx
  43dc8b:	ja     0x43dcf6
  43dc8d:	cmp    BYTE PTR [ebx],0xdd
  43dc90:	mov    WORD PTR [edi],gs
  43dc92:	stos   DWORD PTR es:[edi],eax
  43dc93:	cwde   
  43dc94:	and    ebx,esp
  43dc96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dc97:	pop    ss
  43dc98:	jns    0x43dcbf
  43dc9a:	mov    ah,0x7
  43dc9c:	fwait
  43dc9d:	inc    eax
  43dc9e:	sti    
  43dc9f:	out    0x4c,eax
  43dca1:	out    dx,eax
  43dca2:	or     ebx,DWORD PTR [eax-0x1d]
  43dca5:	xchg   esp,eax
  43dca6:	jge    0x43dc94
  43dca8:	dec    edi
  43dca9:	nop
  43dcaa:	clc    
  43dcab:	inc    ebx
  43dcac:	jg     0x43dc32
  43dcae:	aaa    
  43dcaf:	jmp    0xa3e0844
  43dcb4:	mov    al,ds:0xfac261b
  43dcb9:	idiv   BYTE PTR [eax-0x8bbeffd]
  43dcbf:	sub    eax,ebp
  43dcc1:	push   esp
  43dcc2:	out    0x98,eax
  43dcc4:	pusha  
  43dcc5:	fild   DWORD PTR [esp+ebp*2-0x31]
  43dcc9:	jns    0x43dd43
  43dccb:	ret    
  43dccc:	push   ecx
  43dccd:	xchg   ecx,eax
  43dcce:	mov    WORD PTR [edi],gs
  43dcd0:	sbb    DWORD PTR [eax+0x17a48f23],ebx
  43dcd6:	(bad)  
  43dcd7:	mov    al,0xb
  43dcd9:	out    dx,al
  43dcda:	sub    DWORD PTR [eax-0x5],eax
  43dcdd:	pop    ecx
  43dcde:	dec    esp
  43dcdf:	out    dx,eax
  43dce0:	(bad)  
  43dce1:	pop    eax
  43dce2:	jecxz  0x43dc70
  43dce4:	xlat   BYTE PTR fs:[ebx]
  43dce6:	leave  
  43dce7:	in     eax,0x74
  43dce9:	(bad)  
  43dcea:	loop   0x43dcec
  43dcec:	mov    ebx,0x53af0c44
  43dcf1:	sbb    BYTE PTR [ebx-0x6cd74e15],ah
  43dcf7:	xchg   edi,eax
  43dcf8:	mov    eax,0xf7445b03
  43dcfd:	pushf  
  43dcfe:	push   eax
  43dcff:	jmp    0x43dd4f
  43dd01:	leave  
  43dd02:	pusha  
  43dd03:	fstp   TBYTE PTR [edi+0x6c]
  43dd06:	iret   
  43dd07:	adc    eax,0x438c378
  43dd0c:	mov    bh,0xdf
  43dd0e:	test   DWORD PTR [edi+eiz*4],edx
  43dd11:	jne    0x43dd33
  43dd13:	fwait
  43dd14:	mov    DWORD PTR [edi+ecx*4],ebp
  43dd17:	call   0x518b6054
  43dd1c:	enter  0xc273,0xd4
  43dd20:	addr16 push edx
  43dd22:	xlat   BYTE PTR fs:[ebx]
  43dd24:	mov    eax,0xe97fcb70
  43dd29:	add    BYTE PTR [ebx+0x29af0c3f],bh
  43dd2f:	sbb    BYTE PTR [ebx-0x5768db23],ah
  43dd35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dd36:	xor    al,0x87
  43dd38:	push   ebx
  43dd39:	sar    BYTE PTR [ebx+0x60],0xcc
  43dd3d:	outs   dx,DWORD PTR ds:[esi]
  43dd3e:	xor    al,bl
  43dd40:	arpl   WORD PTR [ebx+0x2d53e871],ax
  43dd46:	hlt    
  43dd47:	inc    edi
  43dd48:	fiadd  WORD PTR [eax-0x54ef0f49]
  43dd4e:	aad    0x89
  43dd50:	and    BYTE PTR [ebx-0x770d3c0],bl
  43dd56:	cmp    BYTE PTR [ebx+0x5a77c4b4],al
  43dd5c:	inc    ebp
  43dd5d:	aam    0x67
  43dd5f:	xlat   BYTE PTR ds:[ebx]
  43dd60:	loopne 0x43ddbd
  43dd62:	sbb    ch,ah
  43dd64:	dec    edi
  43dd65:	pop    eax
  43dd66:	clc    
  43dd67:	inc    ebx
  43dd68:	clc    
  43dd69:	out    dx,eax
  43dd6a:	sub    DWORD PTR [edx],eax
  43dd6c:	adc    BYTE PTR [esi],dl
  43dd6e:	push   esi
  43dd6f:	sbb    al,0x25
  43dd71:	js     0x43dd1b
  43dd73:	das    
  43dd74:	out    0x38,al
  43dd76:	hlt    
  43dd77:	stos   BYTE PTR es:[edi],al
  43dd78:	cmp    al,0xc8
  43dd7a:	inc    eax
  43dd7b:	es push esp
  43dd7d:	push   ebx
  43dd7e:	cmp    al,ah
  43dd80:	add    al,0x2
  43dd82:	in     al,dx
  43dd83:	pop    ebx
  43dd84:	sahf   
  43dd85:	dec    eax
  43dd86:	cld    
  43dd87:	ret    
  43dd88:	cmp    cl,BYTE PTR [eax]
  43dd8a:	sbb    eax,0x3e37943c
  43dd8f:	mov    al,ds:0xb024c262
  43dd94:	outs   dx,BYTE PTR ds:[esi]
  43dd95:	ds cmp al,0xb1
  43dd98:	ror    al,1
  43dd9a:	ror    dl,0x54
  43dd9d:	ds mov al,ah
  43dda0:	push   0x1c74de6b
  43dda5:	rol    BYTE PTR [eax+0x5c8cba0e],0xfe
  43ddac:	sbb    BYTE PTR [ebp+edi*1-0x4bf4d74e],0x34
  43ddb4:	imul   esi,DWORD PTR [esi+0x1c22b1c0],0xffffffd0
  43ddbb:	mov    dh,0x6
  43ddbd:	pop    esp
  43ddbe:	fwait
  43ddbf:	sub    BYTE PTR [eax-0x67],ch
  43ddc2:	xor    dh,BYTE PTR [edi+eax*4+0x16]
  43ddc6:	in     al,dx
  43ddc7:	or     BYTE PTR [eax-0xa],dh
  43ddca:	xchg   esp,eax
  43ddcb:	or     eax,0xd24b20e8
  43ddd0:	sub    al,0x44
  43ddd2:	fisub  WORD PTR [ebx-0x37ae6e44]
  43ddd8:	retf   
  43ddd9:	push   edi
  43ddda:	aam    0xe6
  43dddc:	push   ebp
  43dddd:	pusha  
  43ddde:	rol    BYTE PTR [edx],cl
  43dde0:	dec    edi
  43dde1:	jo     0x43dda9
  43dde3:	push   ebp
  43dde4:	cld    
  43dde5:	xlat   BYTE PTR ds:[ebx]
  43dde6:	cmp    ecx,DWORD PTR [eax-0x5eebde1f]
  43ddec:	jbe    0x43de39
  43ddee:	and    al,0xa9
  43ddf0:	aad    0x34
  43ddf2:	pop    edx
  43ddf3:	retf   
  43ddf4:	inc    eax
  43ddf5:	cwde   
  43ddf6:	xor    esp,ecx
  43ddf8:	int    0x3e
  43ddfa:	or     ebx,esp
  43ddfc:	mov    bh,BYTE PTR [ecx]
  43ddfe:	call   0x34b81dd5
  43de03:	cmp    eax,0xf7625100
  43de08:	adc    al,ah
  43de0a:	in     eax,dx
  43de0b:	pushf  
  43de0c:	addr16 ret 
  43de0e:	sub    bl,bl
  43de10:	fnstenv [esi*2+0x47440356]
  43de17:	add    DWORD PTR [eax+0x0],edx
  43de1a:	and    eax,0xffffffea
  43de1d:	mov    ecx,0xf31e28ec
  43de22:	cld    
  43de23:	push   ebx
  43de24:	or     DWORD PTR [eax],0xf4948790
  43de2a:	test   DWORD PTR [eax+0x309f42cc],esp
  43de30:	jle    0x43ddb7
  43de32:	cmp    al,0x45
  43de34:	imul   ecx,eax,0x68
  43de37:	jno    0x43de8d
  43de39:	xor    DWORD PTR [esi-0x70891b73],0xfffffff0
  43de40:	mov    esi,0x77508089
  43de45:	mov    WORD PTR [esi+edi*2+0x4d],es
  43de49:	pushf  
  43de4a:	mov    edi,DWORD PTR [edi+0x28]
  43de4d:	cdq    
  43de4e:	jns    0x43de04
  43de50:	stos   DWORD PTR es:[edi],eax
  43de51:	jnp    0x43de13
  43de53:	jle    0x43ddf7
  43de55:	rcl    eax,1
  43de57:	xchg   edx,eax
  43de58:	retf   
  43de59:	fcomp  QWORD PTR [ecx]
  43de5b:	in     eax,0xe8
  43de5d:	push   DWORD PTR [si-0x57]
  43de61:	xchg   esi,eax
  43de62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43de63:	test   BYTE PTR [edi+eiz*4+0x10],bh
  43de67:	(bad)  [ecx-0x536cfae4]
  43de6d:	mov    ds,WORD PTR [esi-0x4b]
  43de70:	cmp    al,0x3f
  43de72:	inc    edi
  43de73:	enter  0x41a4,0xd4
  43de77:	sub    al,BYTE PTR [ebx-0x20]
  43de7a:	mov    ebp,0x18705982
  43de7f:	inc    ebx
  43de80:	jl     0x43de94
  43de82:	sub    eax,0x94373188
  43de87:	neg    BYTE PTR cs:[ebp-0x5c]
  43de8b:	cs pop edi
  43de8d:	mov    al,0x39
  43de8f:	pop    ecx
  43de90:	mov    esp,0x448ab10
  43de95:	mov    esi,0x2fa85c1d
  43de9a:	call   0x8038084d
  43de9f:	sub    eax,DWORD PTR [eax-0x6fc51dfd]
  43dea5:	ins    BYTE PTR es:[edi],dx
  43dea6:	and    BYTE PTR [ebx+edi*1+0x145fa80e],bl
  43dead:	xor    al,0xe8
  43deaf:	(bad)  
  43deb0:	into   
  43deb1:	inc    esp
  43deb2:	add    ecx,esp
  43deb4:	ror    BYTE PTR ds:0xf8d05cca,1
  43deba:	call   0xfcf5f8fc
  43debf:	ja     0x43df0d
  43dec1:	mov    bh,bh
  43dec3:	dec    edx
  43dec4:	xchg   esp,eax
  43dec5:	sub    eax,0xc2e9a048
  43deca:	push   edx
  43decb:	xor    ah,ch
  43decd:	dec    eax
  43dece:	cmp    al,0xe7
  43ded0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ded1:	enter  0xbcef,0xd4
  43ded5:	pop    ss
  43ded6:	ss ss fs into 
  43deda:	xor    al,0x70
  43dedc:	sub    al,0x32
  43dede:	jl     0x43de91
  43dee0:	inc    eax
  43dee1:	or     BYTE PTR [edx+edi*2+0x40b7187a],bh
  43dee8:	test   al,0xf2
  43deea:	ret    0x38b4
  43deed:	rol    BYTE PTR [eax-0x27],0x22
  43def1:	push   0xffffffd0
  43def3:	cmc    
  43def4:	jo     0x43df52
  43def6:	out    dx,eax
  43def7:	pop    esi
  43def8:	push   0xd744400
  43defd:	push   ss
  43defe:	push   ds
  43deff:	add    al,0xf6
  43df01:	sbb    al,0x90
  43df03:	xchg   ecx,eax
  43df04:	sbb    bl,BYTE PTR [esi+esi*4+0x5ab5a828]
  43df0b:	mov    ch,0xb8
  43df0d:	inc    esi
  43df0e:	dec    edi
  43df0f:	inc    esp
  43df10:	mov    edi,0xcfd3d4cd
  43df15:	loopne 0x43df4d
  43df17:	add    dl,ch
  43df19:	jo     0x43dedd
  43df1b:	iret   
  43df1c:	jl     0x43df7e
  43df1e:	mov    eax,ds:0x14bb7b08
  43df23:	mov    ecx,0x9824d176
  43df28:	shl    DWORD PTR [eax],cl
  43df2a:	jno    0x43df01
  43df2c:	cmp    al,0xa6
  43df2e:	daa    
  43df2f:	enter  0xba9f,0x1d
  43df33:	fmul   DWORD PTR [ebx+0x39926427]
  43df39:	lock xor eax,0x628f20a7
  43df3f:	ins    DWORD PTR es:[edi],dx
  43df40:	xor    BYTE PTR [edi+0x59b07c77],dl
  43df46:	dec    eax
  43df47:	rol    DWORD PTR [ebx-0x6c],0xa4
  43df4b:	push   esi
  43df4c:	cdq    
  43df4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43df4e:	push   edx
  43df4f:	fwait
  43df50:	jo     0x43dfa7
  43df52:	popf   
  43df53:	mov    esp,0x7848af63
  43df58:	call   0x7024:0x9f1698e5
  43df5f:	xor    eax,0xcb3c9b35
  43df65:	call   0x77f16f
  43df6a:	add    BYTE PTR [eax],al
  43df6c:	add    BYTE PTR [eax],al
  43df6e:	add    BYTE PTR [eax],al
  43df70:	and    eax,0xff5dc81f
  43df75:	pop    es
  43df76:	add    BYTE PTR [eax],al
  43df78:	add    BYTE PTR [eax],al
  43df7a:	add    BYTE PTR [eax],al
  43df7c:	inc    DWORD PTR [edi]
  43df7e:	add    BYTE PTR [eax],al
  43df80:	push   edi
  43df81:	add    BYTE PTR [esi],ah
  43df83:	jl     0x43df85
  43df85:	add    dh,BYTE PTR [esi]
  43df87:	or     BYTE PTR [eax],al
  43df89:	add    BYTE PTR [edx],dl
  43df8b:	dec    ebx
  43df8c:	add    BYTE PTR [ebx+edx*2],bh
  43df8f:	adc    eax,0x1e5431f7
  43df94:	aad    0x24
  43df96:	push   es
  43df97:	ins    DWORD PTR es:[edi],dx
  43df98:	cmp    ecx,edi
  43df9a:	mov    ah,0x5d
  43df9c:	xchg   edi,eax
  43df9d:	fimul  WORD PTR [eax-0x35]
  43dfa0:	cmp    al,0x8a
  43dfa2:	int3   
  43dfa3:	(bad)  
  43dfa4:	sbb    esp,DWORD PTR [ecx+0x2e16cee]
  43dfaa:	mov    ah,0xf4
  43dfac:	and    cl,dl
  43dfae:	jnp    0x43dfde
  43dfb0:	nop
  43dfb1:	aas    
  43dfb2:	shl    BYTE PTR [esi-0x78],0x9e
  43dfb6:	arpl   cx,dx
  43dfb8:	mov    bh,BYTE PTR [eax]
  43dfba:	add    DWORD PTR [edx],0x5998f8ac
  43dfc0:	retf   
  43dfc1:	mov    dl,0x5c
  43dfc3:	mov    edi,0xb288fe60
  43dfc8:	addr16 cmc 
  43dfca:	mov    al,BYTE PTR [eax+0x6808964d]
  43dfd0:	ins    BYTE PTR es:[edi],dx
  43dfd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dfd2:	daa    
  43dfd3:	jb     0x43df79
  43dfd5:	pop    ebx
  43dfd6:	pushf  
  43dfd7:	add    ch,BYTE PTR [eax+0x56]
  43dfda:	fwait
  43dfdb:	imul   ecx,DWORD PTR [edx],0xf87eb54c
  43dfe1:	pushf  
  43dfe2:	pop    esp
  43dfe3:	aad    0x2f
  43dfe5:	push   ss
  43dfe6:	jo     0x43e02b
  43dfe8:	les    esi,FWORD PTR [edx]
  43dfea:	hlt    
  43dfeb:	scas   al,BYTE PTR es:[edi]
  43dfec:	and    ebx,ecx
  43dfee:	not    BYTE PTR [ecx+edi*4-0x473303c6]
  43dff5:	sub    ebx,edx
  43dff7:	idiv   BYTE PTR [eax-0x7b51b759]
  43dffd:	retf   0xa54f
  43e000:	xchg   ah,bl
  43e002:	in     eax,dx
  43e003:	jbe    0x43df95
  43e005:	mov    esp,0x8a73a110
  43e00a:	test   bh,ah
  43e00c:	pop    eax
  43e00d:	xchg   esi,eax
  43e00e:	nop
  43e00f:	jmp    0x7ed5:0xa8b2bd5f
  43e016:	mov    al,ds:0xef2df4a0
  43e01b:	cli    
  43e01c:	int3   
  43e01d:	xchg   ebx,eax
  43e01e:	xor    al,0xfa
  43e020:	loopne 0x43dfe0
  43e022:	adc    edx,ecx
  43e024:	ret    0xa1f0
  43e027:	add    cl,ah
  43e029:	and    BYTE PTR ds:0x14fc96bf,al
  43e02f:	adc    bl,BYTE PTR [edx]
  43e031:	aaa    
  43e032:	dec    edx
  43e033:	mov    ebx,0xbc483c1d
  43e038:	fsub   QWORD PTR [ecx+ecx*2+0x32]
  43e03c:	std    
  43e03d:	push   edi
  43e03e:	data16 or al,ah
  43e041:	ret    0x5b66
  43e044:	sub    cl,bh
  43e046:	popa   
  43e047:	push   eax
  43e048:	enter  0x3804,0x98
  43e04c:	mov    ch,0xd2
  43e04e:	inc    ecx
  43e04f:	ret    
  43e050:	repnz mov eax,0xefe27e28
  43e056:	stos   BYTE PTR es:[edi],al
  43e057:	jae    0x43dfde
  43e059:	or     BYTE PTR [eax+edx*8-0x70],cl
  43e05d:	adc    BYTE PTR ds:0x1a03916e,dl
  43e063:	push   esp
  43e064:	hlt    
  43e065:	xchg   BYTE PTR [edx],bl
  43e067:	jmp    FWORD PTR [esi-0x530b0295]
  43e06d:	sbb    BYTE PTR [esp+ebx*8-0x37],dh
  43e071:	sahf   
  43e072:	popf   
  43e073:	push   edi
  43e074:	ds xor al,0x3c
  43e077:	cli    
  43e078:	cs dec ebx
  43e07a:	dec    esi
  43e07b:	imul   DWORD PTR [ecx]
  43e07d:	inc    eax
  43e07e:	dec    esp
  43e07f:	pusha  
  43e080:	enter  0xe118,0xea
  43e084:	gs scas eax,DWORD PTR es:[edi]
  43e086:	xor    BYTE PTR cs:[eax],cl
  43e089:	call   0x1869:0x9722334e
  43e090:	add    BYTE PTR [eax+esi*4],ch
  43e093:	jo     0x43e0a2
  43e095:	sbb    ch,BYTE PTR [ecx+0x50300a4b]
  43e09b:	mov    dh,0x5a
  43e09d:	pop    ss
  43e09e:	adc    bl,BYTE PTR [ebx+0x74103c7d]
  43e0a4:	mov    WORD PTR [ecx+ebx*8-0x16],fs
  43e0a8:	dec    ebp
  43e0a9:	mov    bh,0xf6
  43e0ab:	rcr    BYTE PTR [esi+ebp*8],1
  43e0ae:	adc    al,BYTE PTR [edi+0x66]
  43e0b1:	jecxz  0x43e0c8
  43e0b3:	dec    esp
  43e0b4:	fs inc eax
  43e0b6:	pushf  
  43e0b7:	xor    DWORD PTR fs:[esi],eax
  43e0ba:	cs push esp
  43e0bc:	std    
  43e0bd:	push   edi
  43e0be:	sbb    DWORD PTR fs:[ebp-0x28],ebp
  43e0c2:	dec    ebp
  43e0c3:	adc    al,0x6a
  43e0c5:	xor    ebp,DWORD PTR [edi+0x2e8beb88]
  43e0cb:	mov    ebp,0xa72198ca
  43e0d0:	lods   al,BYTE PTR ds:[esi]
  43e0d1:	in     eax,dx
  43e0d2:	xor    DWORD PTR [edi*4+0x43db6a04],0xfe731354
  43e0dd:	jns    0x43e129
  43e0df:	or     BYTE PTR [ecx-0x16aa87cd],bl
  43e0e5:	sar    DWORD PTR fs:[eax-0x633c9012],0x9f
  43e0ed:	xlat   BYTE PTR ds:[ebx]
  43e0ee:	pop    edx
  43e0ef:	stc    
  43e0f0:	mov    esi,0xc0c375e4
  43e0f5:	rcl    DWORD PTR [ebp-0x6d335ef8],0x3
  43e0fc:	and    esp,0x7f
  43e0ff:	aaa    
  43e100:	mov    ds:0xb55cb615,al
  43e105:	pop    edi
  43e106:	mov    WORD PTR [ecx+0x45],ss
  43e109:	mov    al,ds:0x8b627c45
  43e10e:	addr16 mov al,0x63
  43e111:	jae    0x43e0a9
  43e113:	add    eax,0x3fd92022
  43e118:	aam    0x35
  43e11a:	cmp    esp,edi
  43e11c:	add    eax,0x7f71e18
  43e121:	clc    
  43e122:	pop    es
  43e123:	dec    DWORD PTR [edx]
  43e125:	cmc    
  43e126:	sahf   
  43e127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e128:	loope  0x43e165
  43e12a:	mov    al,ds:0x19dc113d
  43e12f:	xor    BYTE PTR [esi],dl
  43e131:	xlat   BYTE PTR ds:[ebx]
  43e132:	jnp    0x43e0f8
  43e134:	inc    edi
  43e135:	outs   dx,DWORD PTR ds:[esi]
  43e136:	mov    dl,0x61
  43e138:	pop    sp
  43e13a:	mov    ebp,0x7d59e87b
  43e13f:	mov    al,ds:0x4b9a5469
  43e144:	mov    ebp,DWORD PTR [ebx+esi*4]
  43e147:	sbb    DWORD PTR [esi-0x6f],0x20
  43e14b:	and    al,0x28
  43e14d:	and    DWORD PTR [ecx],edi
  43e14f:	xor    al,0x36
  43e151:	retf   
  43e152:	(bad)  
  43e154:	rol    dh,1
  43e156:	ret    
  43e157:	ret    
  43e158:	fdivr  st(2),st
  43e15a:	stc    
  43e15b:	fmul   st(0),st
  43e15d:	enter  0xc1d8,0xd1
  43e161:	add    BYTE PTR [edx],dh
  43e163:	das    
  43e164:	and    ah,BYTE PTR [esi]
  43e166:	xor    BYTE PTR [edx],ah
  43e168:	aas    
  43e169:	pop    ds
  43e16a:	and    al,0x2
  43e16c:	sbb    eax,0x64487c58
  43e171:	and    eax,0x3324805
  43e176:	add    dh,BYTE PTR es:[eax]
  43e179:	cs xchg edi,eax
  43e17b:	mov    edi,0xa0bd96f0
  43e180:	ins    BYTE PTR es:[edi],dx
  43e181:	dec    esp
  43e182:	jl     0x43e1e1
  43e184:	jne    0x43e19a
  43e186:	pop    esi
  43e187:	arpl   WORD PTR [esi+0x5a],sp
  43e18a:	jl     0x43e1da
  43e18c:	jnp    0x43e1d1
  43e18e:	cmp    BYTE PTR [esi+0x29],ah
  43e191:	xchg   esp,eax
  43e192:	fsubr  DWORD PTR [eax+eiz*8-0x71a33e77]
  43e199:	fbld   TBYTE PTR [edx-0x402d7312]
  43e19f:	test   DWORD PTR [eax-0x5f97da8a],0x99c980c0
  43e1a9:	sub    dl,bh
  43e1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e1ac:	retf   0xf89e
  43e1af:	retf   0xe7b7
  43e1b2:	dec    esp
  43e1b3:	call   0xdd8c:0xf084e0d5
  43e1ba:	mov    ebp,0xde9bea70
  43e1bf:	dec    edx
  43e1c0:	or     BYTE PTR [esi+0x23],dh
  43e1c3:	push   ebx
  43e1c4:	xchg   esp,eax
  43e1c5:	sbb    ch,BYTE PTR [ecx+0x2c]
  43e1c8:	pop    eax
  43e1c9:	add    BYTE PTR [eax+0x31],ch
  43e1cc:	inc    ecx
  43e1cd:	cmp    al,0xe6
  43e1cf:	mov    ebx,esi
  43e1d1:	mov    ds:0xbbc386e4,al
  43e1d6:	pusha  
  43e1d7:	fidiv  WORD PTR [ecx+0x3af4bd7]
  43e1dd:	retf   0x84b2
  43e1e0:	pop    ebp
  43e1e1:	cld    
  43e1e2:	xor    DWORD PTR [ebp-0x7bf30ea1],edi
  43e1e8:	test   al,0x65
  43e1ea:	(bad)  
  43e1eb:	cmp    esp,DWORD PTR [edi-0x21b968a1]
  43e1f1:	int3   
  43e1f2:	cmp    eax,0x9bd14d88
  43e1f7:	sub    esp,esi
  43e1f9:	je     0x43e26f
  43e1fb:	mov    DWORD PTR [esi],esi
  43e1fd:	push   ebx
  43e1fe:	mul    DWORD PTR [ebx]
  43e200:	scas   eax,DWORD PTR es:[edi]
  43e201:	dec    esi
  43e202:	out    dx,al
  43e203:	cwde   
  43e204:	cmp    DWORD PTR [eax-0x7ae43693],ecx
  43e20a:	jo     0x43e1dc
  43e20c:	mov    esp,0x9b2ffa79
  43e211:	inc    ebx
  43e212:	(bad)  [edx]
  43e214:	and    al,0x79
  43e217:	in     al,dx
  43e218:	adc    DWORD PTR [ebp+0x4c0ce17b],esi
  43e21e:	add    al,0x89
  43e220:	cmp    bh,0x33
  43e223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e224:	imul   eax,edx,0xa
  43e227:	lods   al,BYTE PTR ds:[esi]
  43e228:	test   DWORD PTR [ecx+ecx*8+0x5],esi
  43e22c:	out    0x19,eax
  43e22e:	mov    ah,0x7c
  43e230:	sar    ch,1
  43e232:	push   cs
  43e233:	sub    DWORD PTR [edi-0x19],0xf
  43e237:	mov    esi,0x10f5f476
  43e23c:	inc    ebp
  43e23d:	cdq    
  43e23e:	pop    ss
  43e23f:	std    
  43e240:	pop    eax
  43e241:	sbb    BYTE PTR [eax],0xd
  43e244:	fisub  DWORD PTR [edi]
  43e246:	retf   
  43e247:	addr16 mov ds:0x56b6,eax
  43e24b:	rol    BYTE PTR [ecx-0x7cde2ab0],0x5d
  43e252:	enter  0xe418,0xb1
  43e256:	(bad)  
  43e257:	(bad)  
  43e258:	xor    ecx,DWORD PTR [ebx+0x8ca3a43]
  43e25e:	jno    0x43e204
  43e260:	cmp    ebp,ecx
  43e262:	jae    0x43e1ed
  43e264:	add    al,0xf4
  43e266:	sub    al,0x51
  43e268:	xchg   esi,eax
  43e269:	push   ebp
  43e26a:	dec    edx
  43e26b:	in     eax,dx
  43e26c:	mov    dl,0x28
  43e26e:	xor    edx,DWORD PTR [eax-0x9]
  43e271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e272:	xchg   edi,eax
  43e273:	sbb    BYTE PTR [ecx+0xc],0x8a
  43e277:	cdq    
  43e278:	clc    
  43e279:	inc    ebx
  43e27a:	jmp    0x43e2d9
  43e27c:	pop    edx
  43e27d:	cdq    
  43e27e:	retf   0x4340
  43e281:	sbb    al,0xbb
  43e283:	cmc    
  43e284:	imul   ebp,DWORD PTR [ecx+edi*4-0x8],0x76
  43e289:	jne    0x43e2cb
  43e28b:	ret    
  43e28c:	(bad)
  43e290:	not    BYTE PTR [edi+edx*2+0x64]
  43e294:	mov    ebx,0xb9586fc9
  43e299:	les    edx,FWORD PTR [edx-0x5820f35f]
  43e29f:	sub    DWORD PTR [esi],eax
  43e2a1:	lds    esp,FWORD PTR [esi-0x20cfc0ec]
  43e2a7:	mov    cl,0x17
  43e2a9:	dec    eax
  43e2aa:	mov    ebp,0x54516adc
  43e2af:	scas   eax,DWORD PTR es:[edi]
  43e2b0:	ret    
  43e2b1:	fld    QWORD PTR [edx-0x643fd5db]
  43e2b7:	js     0x43e2f8
  43e2b9:	int    0x23
  43e2bb:	jl     0x43e29a
  43e2bd:	sar    BYTE PTR [esi],0x65
  43e2c0:	pushf  
  43e2c1:	(bad)  
  43e2c2:	jmp    DWORD PTR [ecx]
  43e2c4:	outs   dx,BYTE PTR ds:[esi]
  43e2c5:	inc    ecx
  43e2c6:	push   edx
  43e2c7:	mov    eax,0x2d33448b
  43e2cc:	ret    
  43e2cd:	test   BYTE PTR [ecx],dh
  43e2cf:	and    dh,bh
  43e2d1:	mov    ebp,0xa1070b68
  43e2d6:	(bad)  
  43e2d7:	inc    ecx
  43e2d8:	sahf   
  43e2d9:	pop    esp
  43e2da:	das    
  43e2db:	mov    WORD PTR [ebx-0x7edfa87f],fs
  43e2e1:	lods   al,BYTE PTR ds:[esi]
  43e2e2:	push   0x19
  43e2e4:	mov    al,0x9b
  43e2e6:	mov    ebx,0xfac14a5d
  43e2eb:	and    BYTE PTR [ebx-0x2c],dl
  43e2ee:	push   edi
  43e2ef:	pop    ecx
  43e2f0:	lahf   
  43e2f1:	lock jne 0x43e348
  43e2f4:	sub    cl,0x7c
  43e2f7:	xchg   edi,eax
  43e2f8:	stos   DWORD PTR es:[edi],eax
  43e2f9:	pop    esi
  43e2fa:	shl    esi,0x19
  43e2fd:	inc    ebx
  43e2fe:	fsub   DWORD PTR [eax-0x109fd124]
  43e304:	fisub  WORD PTR [ebx]
  43e306:	jge    0x43e29e
  43e308:	les    ebp,FWORD PTR [esp+ebx*2+0x7d96bd32]
  43e30f:	je     0xc9e8ffd
  43e315:	sub    DWORD PTR [esi-0x6f018249],0xffffffc8
  43e31c:	and    al,0x22
  43e31e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e31f:	mov    ds:0xb4bc1f7d,al
  43e324:	mov    al,0x62
  43e326:	fs rcl edx,cl
  43e329:	vmwrite ecx,edx
  43e32c:	fmul   st,st(0)
  43e32e:	sub    BYTE PTR [esi-0x37],ch
  43e331:	ror    BYTE PTR [ecx],cl
  43e333:	jae    0x43e305
  43e335:	cld    
  43e336:	xor    dh,dh
  43e338:	cwde   
  43e339:	aas    
  43e33a:	xor    bh,bl
  43e33c:	test   DWORD PTR [esi],esp
  43e33e:	and    BYTE PTR [eax],cl
  43e340:	int3   
  43e341:	mov    dh,0x69
  43e343:	cs or  ebx,0xe654c810
  43e34a:	enter  0x5617,0xcb
  43e34e:	cmc    
  43e34f:	cs in  al,dx
  43e351:	je     0x43e327
  43e353:	retf   0xae05
  43e356:	adc    eax,0xb410fc37
  43e35b:	add    dh,BYTE PTR [ebx+ecx*8]
  43e35e:	xchg   esi,eax
  43e35f:	das    
  43e360:	or     edx,edx
  43e362:	xor    al,0x84
  43e364:	xor    BYTE PTR [esi],ch
  43e366:	shr    DWORD PTR [esi-0x23bbccd7],1
  43e36c:	or     BYTE PTR [edx-0x78f59464],cl
  43e372:	xor    DWORD PTR [edx+0x0],0xa15670f0
  43e379:	retf   0x4b51
  43e37c:	cwde   
  43e37d:	and    al,0xf8
  43e37f:	outs   dx,BYTE PTR ds:[esi]
  43e380:	jo     0x43e319
  43e382:	cli    
  43e383:	arpl   WORD PTR ds:0x48048ee,cx
  43e389:	mov    ?,WORD PTR [ebp+ebx*1+0x6c8db397]
  43e390:	aas    
  43e391:	mov    BYTE PTR [eax-0x3e16a67e],bh
  43e397:	out    0x14,eax
  43e399:	dec    ebx
  43e39a:	test   dh,0xec
  43e39d:	push   ecx
  43e39e:	not    ebx
  43e3a0:	cmc    
  43e3a1:	cmp    BYTE PTR [ebx-0x70],cl
  43e3a4:	mov    al,0x92
  43e3a6:	sub    DWORD PTR [ebp+0xb5c8bad],ebx
  43e3ac:	mov    ds:0xdb41c8da,al
  43e3b1:	(bad)  
  43e3b2:	rol    DWORD PTR [eax+0x26242cbb],1
  43e3b8:	mov    ecx,0xa41f3921
  43e3bd:	jb     0xc3799c75
  43e3c3:	iret   
  43e3c4:	ror    DWORD PTR [edi+edx*2-0x24],0xc4
  43e3c9:	into   
  43e3ca:	jne    0x43e3bd
  43e3cc:	stc    
  43e3cd:	div    DWORD PTR [eax+0x6f]
  43e3d0:	out    0x76,al
  43e3d2:	cld    
  43e3d3:	and    eax,0x94e58bcf
  43e3d8:	aaa    
  43e3d9:	shl    BYTE PTR [eax-0x5202ea36],1
  43e3df:	sar    DWORD PTR [eax-0x6f0565f1],cl
  43e3e5:	push   ebp
  43e3e6:	aas    
  43e3e7:	imul   ecx,DWORD PTR ds:0x4808f360,0x3a
  43e3ee:	icebp  
  43e3ef:	add    eax,0x384c355
  43e3f4:	cli    
  43e3f5:	repnz mov al,ds:0x99cf8349
  43e3fb:	test   al,0x73
  43e3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e3fe:	int3   
  43e3ff:	sahf   
  43e400:	jno    0x43e3cb
  43e402:	mov    cl,0xe7
  43e404:	mov    WORD PTR [ebx],ss
  43e406:	(bad)  
  43e407:	mov    cs,esp
  43e409:	or     edi,edx
  43e40b:	push   0x38a1c813
  43e410:	jmp    DWORD PTR [ecx+0x54bef348]
  43e416:	out    0x10,eax
  43e418:	pusha  
  43e419:	fld    TBYTE PTR [edi]
  43e41b:	stc    
  43e41c:	jo     0x43e3e9
  43e41e:	and    bh,BYTE PTR [edi+edi*4+0x55]
  43e422:	or     BYTE PTR [ebx+0x77a71470],dh
  43e428:	mov    ch,0x24
  43e42a:	xchg   edi,eax
  43e42b:	pop    edx
  43e42c:	xor    BYTE PTR [ebx-0x2f80c3bb],cl
  43e432:	enter  0xcf73,0x41
  43e436:	fsub   DWORD PTR [ebx-0x1e]
  43e439:	push   0xc77479d3
  43e43e:	inc    esp
  43e43f:	add    BYTE PTR [ebx-0x54ef66c5],bh
  43e445:	ss sbb al,0x9f
  43e448:	add    DWORD PTR [eax],ebp
  43e44a:	xchg   ebx,eax
  43e44b:	int3   
  43e44c:	xor    al,0x87
  43e44e:	retf   
  43e44f:	push   ebp
  43e450:	les    esi,FWORD PTR [edi+0x26]
  43e453:	shr    BYTE PTR [ebx+0x39],1
  43e456:	fcomp  QWORD PTR [edi+0x34]
  43e459:	call   0xf8a50fb1
  43e45e:	inc    ebx
  43e45f:	inc    esi
  43e460:	test   BYTE PTR [edi],dh
  43e462:	fst    QWORD PTR [edi+eiz*4]
  43e465:	mov    eax,0xb9879b20
  43e46a:	xor    BYTE PTR [ebx+0x7d7f3c8a],cl
  43e470:	enter  0x5873,0xd4
  43e474:	addr16 pop edi
  43e476:	jne    0x43e45c
  43e478:	push   edi
  43e479:	jb     0x43e46b
  43e47b:	dec    ebx
  43e47c:	ins    DWORD PTR es:[edi],dx
  43e47d:	cld    
  43e47e:	aas    
  43e47f:	inc    ebp
  43e480:	mov    BYTE PTR [ebx],dh
  43e482:	pop    edx
  43e483:	add    DWORD PTR [eax+0x17a47723],ebx
  43e489:	jo     0x43e43b
  43e48b:	or     edx,ecx
  43e48d:	sar    BYTE PTR [ebx+0x2e],0x59
  43e491:	shr    BYTE PTR [ebx+0x23],1
  43e494:	fcomp  QWORD PTR [edi+0x14]
  43e497:	call   0x48384def
  43e49c:	outs   dx,BYTE PTR ds:[esi]
  43e49d:	adc    eax,0x90033784
  43e4a2:	sub    ebx,DWORD PTR [esp+ebx*4]
  43e4a5:	pop    ds
  43e4a6:	adc    DWORD PTR [eax-0x47def1ed],ebp
  43e4ac:	add    esp,ebx
  43e4ae:	inc    esp
  43e4af:	mul    esp
  43e4b1:	push   eax
  43e4b2:	jmp    0x43e4dd
  43e4b4:	pop    esp
  43e4b5:	pop    ebx
  43e4b6:	xchg   edx,eax
  43e4b7:	jns    0x43e4a9
  43e4b9:	dec    ebx
  43e4ba:	lahf   
  43e4bb:	cld    
  43e4bc:	aas    
  43e4bd:	call   0x9511184a
  43e4c2:	daa    
  43e4c3:	retf   0xa435
  43e4c6:	pop    ss
  43e4c7:	out    0xb0,eax
  43e4c9:	or     edi,eax
  43e4cb:	mov    esp,0xf3486dff
  43e4d0:	jb     0x43e493
  43e4d2:	pop    eax
  43e4d3:	jecxz  0x43e534
  43e4d5:	xlat   BYTE PTR fs:[ebx]
  43e4d7:	pop    eax
  43e4d8:	jo     0x43e4a5
  43e4da:	jge    0x43e558
  43e4dc:	mov    edi,0x2b90190a
  43e4e1:	mov    ebx,DWORD PTR [edi+ebx*1+0xa13a8bc]
  43e4e8:	mov    ah,0x7
  43e4ea:	or     eax,0xe0f744d5
  43e4ef:	push   eax
  43e4f0:	jmp    0x43e4f1
  43e4f2:	pop    esp
  43e4f3:	fcomip st,st(2)
  43e4f5:	push   0x78e1edd3
  43e4fa:	ret    
  43e4fb:	add    BYTE PTR [edi+esi*4],0x87
  43e4ff:	adc    BYTE PTR [ebx-0x3260e306],ch
  43e505:	mov    ebp,0xbc4c8f2c
  43e50a:	(bad)  
  43e50b:	mov    ebx,0x549ef348
  43e510:	out    0x99,eax
  43e512:	cmc    
  43e513:	xlat   BYTE PTR fs:[ebx]
  43e515:	mov    ah,0x70
  43e517:	retf   
  43e518:	stos   DWORD PTR es:[edi],eax
  43e519:	jl     0x43e4da
  43e51b:	push   cs
  43e51c:	or     BYTE PTR [ebx-0x5ce77eef],dh
  43e522:	cmp    al,0x24
  43e524:	xchg   edi,eax
  43e525:	cmp    esi,DWORD PTR [eax]
  43e527:	mov    ebx,DWORD PTR [esi]
  43e529:	cmp    al,0x7f
  43e52b:	jmp    0xe4b3b18d
  43e530:	fcomp  st(7)
  43e532:	pop    edi
  43e533:	push   0xc77422d3
  43e538:	and    eax,0x48b70495
  43e53d:	adc    BYTE PTR [ebx+0x5a9f1c57],ch
  43e543:	sub    BYTE PTR [ebx-0x7cc7bebb],dl
  43e549:	test   al,0xc4
  43e54b:	ja     0x43e4fc
  43e54d:	icebp  
  43e54e:	imul   ebx,eax,0x63
  43e551:	sub    eax,0x2a8657e4
  43e556:	hlt    
  43e557:	inc    edi
  43e558:	sub    eax,DWORD PTR [eax-0x54ef0749]
  43e55e:	loope  0x43e57c
  43e560:	lahf   
  43e561:	dec    esi
  43e562:	(bad)  
  43e563:	sub    al,0x8f
  43e565:	xlat   BYTE PTR ds:[ebx]
  43e566:	cmp    BYTE PTR [ebx+0x6977c468],al
  43e56c:	shr    BYTE PTR [ebx-0x4e],1
  43e56f:	outs   dx,BYTE PTR ds:[esi]
  43e570:	loopne 0x43e5cd
  43e572:	push   edi
  43e573:	in     al,dx
  43e574:	dec    edi
  43e575:	push   0x841143f8
  43e57a:	aaa    
  43e57b:	out    0x16,al
  43e57d:	xchg   esp,eax
  43e57e:	daa    
  43e57f:	pop    ss
  43e580:	mov    al,ds:0x8bacb81b
  43e585:	and    eax,0xc2ae7f3c
  43e58a:	int3   
  43e58b:	outs   dx,DWORD PTR ds:[esi]
  43e58c:	rcr    eax,cl
  43e58e:	arpl   sp,ax
  43e590:	in     al,0x57
  43e592:	(bad)
  43e595:	xchg   edx,eax
  43e596:	ret    0x3b80
  43e599:	mov    ebx,0x98ec2f8c
  43e59e:	and    edx,ebp
  43e5a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e5a1:	pop    ss
  43e5a2:	(bad)  
  43e5a3:	shl    BYTE PTR [edi+eax*1+0x4fb40d3],cl
  43e5aa:	dec    esp
  43e5ab:	out    dx,eax
  43e5ac:	adc    eax,0xbe8e5fdc
  43e5b1:	in     al,dx
  43e5b2:	dec    edi
  43e5b3:	scas   eax,DWORD PTR es:[edi]
  43e5b4:	clc    
  43e5b5:	inc    ebx
  43e5b6:	sti    
  43e5b7:	test   BYTE PTR [edi],dh
  43e5b9:	cli    
  43e5ba:	nop
  43e5bb:	sub    esi,edx
  43e5bd:	std    
  43e5be:	mov    al,ds:0xfacc41b
  43e5c3:	sti    
  43e5c4:	mov    eax,0xf7440203
  43e5c9:	es add eax,0x6004e754
  43e5cf:	fstp   TBYTE PTR [ebx+0x6c]
  43e5d2:	iret   
  43e5d3:	push   0x78
  43e5d5:	ret    
  43e5d6:	out    dx,al
  43e5d7:	or     DWORD PTR [edi+ebp*1-0x78dc6770],0xb08617a4
  43e5e2:	or     edx,edx
  43e5e4:	add    DWORD PTR [eax-0x5],0xffef4c78
  43e5eb:	pop    eax
  43e5ec:	jecxz  0x43e5b4
  43e5ee:	xlat   BYTE PTR fs:[ebx]
  43e5f0:	push   es
  43e5f1:	shl    DWORD PTR [edi+eax*8-0x40],0x0
  43e5f6:	mov    ebx,0x86af0c97
  43e5fb:	sbb    BYTE PTR [ebx+0xf28a14a],ah
  43e601:	cmp    al,0xb8
  43e603:	add    eax,DWORD PTR [ebx+0x5082f744]
  43e609:	jmp    0x43e63d
  43e60b:	test   DWORD PTR [eax-0x25],esp
  43e60e:	mov    esp,0x7883cf6c
  43e613:	ret    
  43e614:	cli    
  43e615:	add    al,0xb7
  43e617:	data16 std 
  43e619:	adc    al,0xa7
  43e61b:	cld    
  43e61c:	and    BYTE PTR [ebx-0x6b70d37b],bl
  43e622:	cmp    BYTE PTR [ebx+0x73c873aa],al
  43e628:	push   0x58
  43e62a:	jecxz  0x43e625
  43e62c:	xlat   BYTE PTR fs:[ebx]
  43e62e:	clc    
  43e62f:	jo     0x43e5fc
  43e631:	adc    bh,bh
  43e633:	add    BYTE PTR [ebx-0x2e50f37a],bh
  43e639:	sbb    BYTE PTR [ebx+0x469724e8],ah
  43e63f:	out    dx,eax
  43e640:	xor    al,0x87
  43e642:	out    dx,al
  43e643:	sar    BYTE PTR [ebx+0x39],0xcc
  43e647:	outs   dx,DWORD PTR ds:[esi]
  43e648:	sub    al,bl
  43e64a:	arpl   WORD PTR [edx+0x1653e80f],cx
  43e650:	hlt    
  43e651:	inc    edi
  43e652:	jge    0x43e658
  43e654:	mov    bh,0x7c
  43e656:	adc    BYTE PTR [ebx-0x64df848e],ch
  43e65c:	inc    edx
  43e65d:	sub    al,0x8f
  43e65f:	jge    0x43e699
  43e661:	add    DWORD PTR [esp+eax*8-0x2b7c5989],0x67
  43e669:	and    al,0x5b
  43e66c:	std    
  43e66d:	in     al,dx
  43e66e:	dec    edi
  43e66f:	in     al,dx
  43e670:	clc    
  43e671:	inc    ebx
  43e672:	jmp    0x2794:0x9233888b
  43e679:	mov    ebp,0x30001ba0
  43e67e:	mov    edx,DWORD PTR [edx+0x7]
  43e681:	sar    BYTE PTR [ebx-0x2],0xcc
  43e685:	outs   dx,DWORD PTR ds:[esi]
  43e686:	ret    0x63d8
  43e689:	sti    
  43e68a:	in     al,0x57
  43e68c:	xchg   ah,bh
  43e68e:	hlt    
  43e68f:	inc    edi
  43e690:	std    
  43e691:	cmp    BYTE PTR [ebx],0xaa
  43e694:	mov    WORD PTR [edi],gs
  43e696:	mov    ebx,0x9cca2398
  43e69b:	test   al,0x13
  43e69d:	test   DWORD PTR [edi+eax*1+0x3bfb40c2],esi
  43e6a4:	dec    esp
  43e6a5:	imul   esi,DWORD PTR [edx-0x7ea41f48],0xffffffec
  43e6ac:	dec    edi
  43e6ad:	mov    esi,0x84c743f8
  43e6b2:	aaa    
  43e6b3:	out    0xc0,al
  43e6b5:	xchg   esp,eax
  43e6b6:	daa    
  43e6b7:	shl    DWORD PTR [eax+0xfac6e1b],0x7f
  43e6be:	mov    eax,0x48982a03
  43e6c3:	repz adc DWORD PTR [edi+eiz*8-0x52],0x6c97db60
  43e6cc:	iret   
  43e6cd:	push   ds
  43e6ce:	adc    al,0x80
  43e6d0:	cmp    ebp,DWORD PTR [ebp-0x74]
  43e6d3:	das    
  43e6d4:	cmp    bl,BYTE PTR [eax+0x17a40323]
  43e6da:	mov    BYTE PTR [esp+esi*4],0x7
  43e6de:	add    eax,0x4cd2fb40
  43e6e3:	out    dx,eax
  43e6e4:	ret    
  43e6e5:	pop    eax
  43e6e6:	jecxz  0x43e6f2
  43e6e8:	in     al,0x68
  43e6ea:	sar    ebp,cl
  43e6ec:	je     0x43e6b5
  43e6ee:	data16 add BYTE PTR [ebx+0x7eaf0c1f],bh
  43e6f5:	sbb    BYTE PTR [edi+ebx*4],bl
  43e6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e6f9:	lods   al,BYTE PTR ds:[esi]
  43e6fa:	setp   BYTE PTR [eax-0x8bb9cfd]
  43e701:	es fs push esp
  43e704:	out    0x65,eax
  43e706:	pusha  
  43e707:	fistp  DWORD PTR [edx]
  43e709:	ins    BYTE PTR es:[edi],dx
  43e70a:	iret   
  43e70b:	or     edi,DWORD PTR [eax-0x3d]
  43e70e:	push   0x6c
  43e710:	or     BYTE PTR [ebx+0x5aa71475],dh
  43e716:	and    BYTE PTR [ebx+0x5e8f2c63],bl
  43e71c:	fs cmp al,0x7f
  43e71f:	xchg   ebp,eax
  43e720:	enter  0x9eef,0x58
  43e724:	jecxz  0x43e6cd
  43e726:	xlat   BYTE PTR fs:[ebx]
  43e728:	push   es
  43e729:	mov    al,ds:0xa1c774
  43e72e:	mov    ebx,0xe7af0cf6
  43e733:	sbb    BYTE PTR [ebx-0x6cd73fb6],ah
  43e739:	fnstenv [edi+eax*4]
  43e73c:	sahf   
  43e73d:	sar    BYTE PTR [ebx+0x67],0xcc
  43e741:	outs   dx,DWORD PTR ds:[esi]
  43e742:	mov    esi,0x515fdc60
  43e747:	call   0xc3bc4d9f
  43e74c:	fwait
  43e74d:	and    al,0xf7
  43e74f:	pushfw 
  43e751:	xor    al,0xe7
  43e753:	popf   
  43e754:	add    bl,bl
  43e756:	mov    DWORD PTR [edi+ecx*8],ecx
  43e759:	cwde   
  43e75a:	sbb    bl,al
  43e75c:	stos   BYTE PTR es:[edi],al
  43e75d:	jg     0x43e747
  43e75f:	xor    esp,DWORD PTR [esi-0xc]
  43e762:	daa    
  43e763:	dec    ecx
  43e764:	rcr    BYTE PTR [ebx],0x70
  43e767:	int3   
  43e768:	nop    DWORD PTR [edi-0x24]
  43e76c:	jg     0x43e774
  43e76e:	test   al,0x73
  43e770:	pop    ecx
  43e771:	mov    ah,0x67
  43e773:	pop    eax
  43e774:	imul   ebp,eax,0x46a21a
  43e77a:	add    BYTE PTR [eax],al
  43e77c:	add    BYTE PTR [eax],al
  43e77e:	add    BYTE PTR [eax],al
  43e780:	inc    ecx
  43e781:	adc    eax,0x75a401c
  43e786:	add    BYTE PTR [eax],al
  43e788:	add    BYTE PTR [eax],al
  43e78a:	add    BYTE PTR [eax],al
  43e78c:	pop    edx
  43e78d:	pop    es
  43e78e:	add    BYTE PTR [eax],al
  43e790:	pop    eax
  43e791:	add    BYTE PTR [esi],ah
  43e793:	jl     0x43e795
  43e795:	add    dh,BYTE PTR [esi]
  43e797:	or     BYTE PTR [eax],al
  43e799:	add    BYTE PTR [ebp+0x1bc6004b],bh
  43e79f:	mov    al,ch
  43e7a1:	fld    QWORD PTR [esi]
  43e7a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e7a4:	repnz and al,0xd0
  43e7a7:	adc    DWORD PTR [edx-0x16f33418],eax
  43e7ad:	mov    cl,BYTE PTR [eax-0x5e]
  43e7b0:	ja     0x43e7a6
  43e7b2:	cwde   
  43e7b3:	mov    ecx,0x6c12234a
  43e7b8:	dec    esp
  43e7b9:	lds    esi,FWORD PTR [esi]
  43e7bb:	or     BYTE PTR [edi-0x6f1522c8],dh
  43e7c1:	mov    esi,0x94cc033
  43e7c6:	mov    dl,BYTE PTR [ebx+0x76]
  43e7c9:	cmp    BYTE PTR [eax*8-0x27a8fbd2],ch
  43e7d0:	and    eax,0xfb665c06
  43e7d5:	adc    BYTE PTR [edi*2-0x7f89881a],bh
  43e7dc:	loopne 0x43e82f
  43e7de:	mov    dl,BYTE PTR [ebx+edi*8-0x5b497eb4]
  43e7e5:	fisubr DWORD PTR [edi-0x5c]
  43e7e8:	lods   al,BYTE PTR ds:[esi]
  43e7e9:	shl    DWORD PTR [edx-0x15],0xf6
  43e7ed:	dec    esp
  43e7ee:	sbb    BYTE PTR [ecx-0x7bdc9f86],bh
  43e7f4:	push   ecx
  43e7f5:	inc    edx
  43e7f6:	jo     0x43e822
  43e7f8:	(bad)  
  43e7f9:	dec    esp
  43e7fa:	mov    al,ds:0x7c1672d1
  43e7ff:	xchg   esp,eax
  43e800:	cdq    
  43e801:	sub    esi,DWORD PTR [ebx]
  43e803:	inc    esi
  43e804:	mov    ds:0xb8443816,al
  43e809:	stos   DWORD PTR es:[edi],eax
  43e80a:	ins    DWORD PTR es:[edi],dx
  43e80b:	inc    ebp
  43e80c:	shl    BYTE PTR ss:[eax+0x6a],1
  43e810:	or     al,0xdc
  43e812:	int    0x67
  43e814:	pop    edi
  43e815:	ss push edx
  43e817:	not    al
  43e819:	dec    eax
  43e81a:	test   BYTE PTR [ebx-0x57adcaeb],dh
  43e820:	or     BYTE PTR [edx+0x38],dh
  43e823:	test   al,0xf5
  43e825:	outs   dx,DWORD PTR ds:[esi]
  43e826:	outs   dx,DWORD PTR ds:[esi]
  43e827:	sub    ch,dh
  43e829:	adc    al,BYTE PTR [eax+ecx*2]
  43e82c:	int3   
  43e82d:	lahf   
  43e82e:	adc    DWORD PTR [ecx],edx
  43e830:	push   edx
  43e831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e832:	sub    al,0x1e
  43e834:	dec    eax
  43e835:	lock adc DWORD PTR [ebx],0xee7aaa03
  43e83c:	call   0x51befce9
  43e841:	dec    ecx
  43e842:	push   ds
  43e843:	les    ecx,FWORD PTR [esi+edi*4-0x4c]
  43e847:	mov    esp,0xcecba371
  43e84c:	push   0xffffffbe
  43e84e:	ror    ah,0xe0
  43e851:	inc    ebx
  43e852:	xchg   ebp,eax
  43e853:	std    
  43e854:	out    dx,al
  43e855:	pop    eax
  43e856:	mov    dl,dl
  43e858:	xor    al,0x4
  43e85a:	xchg   ebp,eax
  43e85b:	pop    edi
  43e85c:	aaa    
  43e85d:	mov    es,WORD PTR cs:[edx+0x1c]
  43e861:	or     al,0x28
  43e863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e864:	jns    0x43e867
  43e866:	push   ds
  43e867:	mov    esp,0xd0b08a04
  43e86c:	cmp    eax,0x69297d7
  43e871:	jmp    0x59e9:0x7f490bc
  43e878:	push   0xfffffffc
  43e87a:	adc    al,0x76
  43e87c:	push   eax
  43e87d:	sbb    cl,bl
  43e87f:	sbb    ecx,DWORD PTR [ebx+0x62]
  43e882:	loop   0x43e88a
  43e884:	inc    eax
  43e885:	pusha  
  43e886:	cmp    al,0x93
  43e888:	gs xor eax,0xf978881a
  43e88e:	imul   esp,DWORD PTR [eax+0x1e],0x64
  43e892:	pop    eax
  43e893:	int    0x89
  43e895:	std    
  43e896:	mov    bl,0x2f
  43e898:	or     BYTE PTR [eax+0x6],ah
  43e89b:	scas   al,BYTE PTR es:[edi]
  43e89c:	cmp    eax,0x27a13b7b
  43e8a1:	sub    al,0x66
  43e8a3:	or     al,0xb4
  43e8a5:	cmp    eax,0x5fdf711d
  43e8aa:	push   eax
  43e8ab:	adc    al,0x7a
  43e8ad:	ret    0x2f7d
  43e8b0:	inc    edi
  43e8b1:	test   DWORD PTR [edi],esi
  43e8b3:	je     0x43e90f
  43e8b5:	sbb    BYTE PTR [eax-0x33],ah
  43e8b8:	mov    eax,ds:0x1ccf6be5
  43e8bd:	adc    al,0x5a
  43e8bf:	fidivr DWORD PTR [ecx+0xf]
  43e8c2:	inc    edi
  43e8c3:	cmc    
  43e8c4:	inc    ebx
  43e8c5:	inc    eax
  43e8c6:	dec    edx
  43e8c7:	sbb    BYTE PTR [eax-0x7cfaaedf],cl
  43e8cd:	add    esp,DWORD PTR [eax+esi*2+0x26]
  43e8d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e8d2:	sbb    DWORD PTR [ebx+0x3b],ebp
  43e8d5:	mov    cl,0x53
  43e8d7:	mov    BYTE PTR [esi+0x4c],al
  43e8da:	lods   al,BYTE PTR ds:[esi]
  43e8db:	inc    ecx
  43e8dc:	pop    ebp
  43e8dd:	jno    0x43e866
  43e8df:	arpl   WORD PTR [esp+ebp*2-0x6c866d8e],bp
  43e8e6:	sbb    DWORD PTR [ecx-0x41],0x54
  43e8ea:	mov    esi,0x85857cb4
  43e8ef:	mov    DWORD PTR [edi-0x79],esi
  43e8f2:	js     0x43e880
  43e8f4:	jb     0x43e880
  43e8f6:	jne    0x43e96f
  43e8f8:	outs   dx,DWORD PTR ds:[esi]
  43e8f9:	in     eax,dx
  43e8fa:	aas    
  43e8fb:	pushf  
  43e8fc:	xor    dl,BYTE PTR [eax]
  43e8fe:	fadd   DWORD PTR ds:0x7d30d29
  43e904:	rol    BYTE PTR [eax+0x66],0xae
  43e908:	gs pop ebx
  43e90a:	jnp    0x43e88d
  43e90c:	jg     0x43e8f2
  43e90e:	shl    al,cl
  43e910:	and    cl,ch
  43e912:	leave  
  43e913:	or     eax,0x380c0bcb
  43e918:	push   cs
  43e919:	ficom  WORD PTR [ecx]
  43e91b:	add    esi,DWORD PTR [ebx]
  43e91d:	test   al,0xac
  43e91f:	mov    al,0xb4
  43e921:	mov    dh,0xb7
  43e923:	int    0xcd
  43e925:	aam    0xda
  43e927:	retf   0xd8c6
  43e92a:	into   
  43e92b:	std    
  43e92c:	repz repz aam 0xdc
  43e930:	rcr    ah,0xfc
  43e933:	and    esi,DWORD PTR ss:[ecx]
  43e936:	and    DWORD PTR [edx+eiz*4],esi
  43e939:	mov    dl,0x96
  43e93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e93c:	sbb    BYTE PTR [ebp-0x1b37746d],0xa8
  43e943:	mov    eax,cs
  43e945:	mov    dl,0x83
  43e947:	mov    cl,0x99
  43e949:	mov    al,0xae
  43e94b:	xchg   esi,eax
  43e94c:	mov    dl,0xec
  43e94e:	xchg   edx,eax
  43e94f:	mov    cl,0x87
  43e951:	scas   eax,DWORD PTR es:[edi]
  43e952:	dec    eax
  43e953:	jo     0x43e9a9
  43e955:	pusha  
  43e956:	adc    BYTE PTR [edx+0x67],dl
  43e959:	dec    ebp
  43e95a:	inc    ebp
  43e95b:	jo     0x43e9a7
  43e95d:	push   0x4e
  43e95f:	xor    al,0x62
  43e961:	test   eax,0x602cbf8f
  43e966:	add    al,0x48
  43e968:	fmul   QWORD PTR [esi]
  43e96a:	pop    edi
  43e96b:	xor    eax,0x32520c75
  43e970:	jle    0x43e972
  43e972:	mul    BYTE PTR [ebp-0x7b336435]
  43e978:	clc    
  43e979:	xchg   esp,eax
  43e97a:	and    al,0xfe
  43e97c:	mov    ebx,0xb6fc89d9
  43e981:	mov    esi,0xd18648e2
  43e986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e987:	test   esp,0xf0345088
  43e98d:	push   0x1b
  43e98f:	dec    ecx
  43e990:	ror    DWORD PTR [eax+0x14daaef6],1
  43e996:	call   0xbce8:0x80e78fe9
  43e99d:	enter  0x9a38,0x8f
  43e9a1:	lds    edi,FWORD PTR [ebp-0x493d7d08]
  43e9a7:	pop    esp
  43e9a8:	fidivr DWORD PTR [ebp+0xfab8bf3]
  43e9ae:	ret    
  43e9af:	inc    edi
  43e9b0:	adc    BYTE PTR [ecx-0x8],0x3a
  43e9b4:	fbstp  TBYTE PTR es:[ecx-0x7f]
  43e9b8:	or     eax,0x9856e528
  43e9bd:	sbb    bh,bl
  43e9bf:	pop    ss
  43e9c0:	retf   
  43e9c1:	push   edi
  43e9c2:	dec    esp
  43e9c3:	mov    ebp,0x9f4ada08
  43e9c8:	and    eax,0x857061fd
  43e9cd:	xor    ah,ah
  43e9cf:	test   BYTE PTR [edi],ch
  43e9d1:	stos   DWORD PTR es:[edi],eax
  43e9d2:	pop    edi
  43e9d3:	jecxz  0x43e969
  43e9d5:	cmp    eax,0x1fde7eb4
  43e9da:	cdq    
  43e9db:	jns    0x43e9b2
  43e9dd:	cmp    al,0xf9
  43e9df:	jp     0x43e96d
  43e9e1:	and    al,0xc3
  43e9e3:	pop    ebx
  43e9e4:	mov    edi,0x6cf9600b
  43e9e9:	xchg   BYTE PTR [esi],ch
  43e9eb:	sti    
  43e9ec:	popa   
  43e9ed:	add    ebp,0x609e0984
  43e9f3:	fsub   DWORD PTR [ebx-0x57f034a9]
  43e9f9:	cdq    
  43e9fa:	jo     0x43e9ce
  43e9fc:	sbb    bl,BYTE PTR [ebx-0x338e4ae3]
  43ea02:	stc    
  43ea03:	add    ah,BYTE PTR [esp+ebp*2-0xcc7099]
  43ea0a:	je     0x43ea81
  43ea0c:	nop
  43ea0d:	rol    BYTE PTR [edx],cl
  43ea0f:	xchg   edi,eax
  43ea10:	jge    0x43e9e7
  43ea12:	or     DWORD PTR [eax+0x3cec5a8d],ebx
  43ea18:	out    0x23,eax
  43ea1a:	mov    bh,0x5b
  43ea1c:	mov    esp,0x26c65c85
  43ea21:	xchg   DWORD PTR [ecx-0x3f],edx
  43ea24:	sub    eax,0xf866bde0
  43ea29:	or     BYTE PTR [edi+0x4c7cb47],al
  43ea2f:	jne    0x43ea55
  43ea31:	scas   al,BYTE PTR es:[edi]
  43ea32:	push   esi
  43ea33:	repz or DWORD PTR [ecx+0x16d1ac7d],ecx
  43ea3a:	cwde   
  43ea3b:	pusha  
  43ea3c:	ins    DWORD PTR es:[edi],dx
  43ea3d:	xor    ah,BYTE PTR [ebp+0x2577d0ba]
  43ea43:	mov    esp,0x9b08559f
  43ea48:	xchg   esp,eax
  43ea49:	hlt    
  43ea4a:	inc    edi
  43ea4b:	pop    ss
  43ea4c:	jp     0x43eab7
  43ea4e:	popf   
  43ea4f:	(bad)  
  43ea50:	dec    ecx
  43ea51:	inc    esi
  43ea52:	sbb    BYTE PTR [edi-0x5a8c8f0f],al
  43ea58:	cld    
  43ea59:	sti    
  43ea5a:	cld    
  43ea5b:	rol    BYTE PTR [ebx+0xf],0x82
  43ea5f:	cdq    
  43ea60:	or     DWORD PTR [esi-0x27],esi
  43ea63:	fsubrp st(4),st
  43ea65:	cmp    ecx,DWORD PTR [ecx-0x8]
  43ea68:	ret    
  43ea69:	cmp    DWORD PTR [edi+ebx*1+0x28],eax
  43ea6d:	or     bl,al
  43ea6f:	mov    ds:0xa2f93d06,eax
  43ea74:	adc    eax,0xbddb2c32
  43ea79:	add    al,0x2f
  43ea7b:	mov    ecx,0x504463d0
  43ea80:	mov    ds:0xa5e5c6c7,eax
  43ea85:	stos   BYTE PTR es:[edi],al
  43ea86:	dec    ebp
  43ea87:	adc    bh,al
  43ea89:	mov    edi,0x5de7b44d
  43ea8e:	inc    eax
  43ea8f:	mov    bl,0xec
  43ea91:	sbb    al,0x7f
  43ea93:	jg     0x43ea17
  43ea95:	rol    DWORD PTR [ebp+0x5e],1
  43ea98:	mov    cl,0xfe
  43ea9a:	inc    eax
  43ea9b:	aas    
  43ea9c:	sub    eax,ecx
  43ea9e:	fwait
  43ea9f:	cmp    eax,0x64b0cf24
  43eaa4:	nop    esi
  43eaa7:	lods   eax,DWORD PTR ds:[esi]
  43eaa8:	inc    ebp
  43eaa9:	bound  edx,QWORD PTR [ebp+0x2a]
  43eaac:	or     al,0x23
  43eaae:	add    eax,eax
  43eab0:	mov    ebx,0x90e72c01
  43eab5:	xor    BYTE PTR [ebx],bl
  43eab7:	cmp    edi,esi
  43eab9:	cmc    
  43eaba:	inc    ecx
  43eabb:	jp     0x43ea6a
  43eabd:	ficom  DWORD PTR [ebx+edx*2+0x65]
  43eac1:	mov    edi,fs
  43eac3:	jno    0x43eb0d
  43eac5:	mov    ebp,esp
  43eac7:	js     0x43eb34
  43eac9:	scas   eax,DWORD PTR es:[edi]
  43eaca:	jb     0x43eae5
  43eacc:	cli    
  43eacd:	sbb    eax,0xd89cd542
  43ead2:	and    dh,BYTE PTR [ebx-0x18]
  43ead5:	pop    esi
  43ead6:	mov    ds:0x2c441ff0,eax
  43eadb:	fcom   QWORD PTR [ecx-0x7d02e9fe]
  43eae1:	or     eax,0x9bda2c68
  43eae6:	sbb    BYTE PTR [esi],ch
  43eae8:	aaa    
  43eae9:	jl     0x43eade
  43eaeb:	mov    esp,cs
  43eaed:	sub    BYTE PTR [ebp-0x12],ch
  43eaf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eaf1:	jno    0x43eb09
  43eaf3:	test   eax,0xf66bcb0
  43eaf8:	int3   
  43eaf9:	fimul  WORD PTR [ebx]
  43eafb:	push   0xa848d4c7
  43eb00:	int    0x76
  43eb02:	push   edx
  43eb03:	mov    esi,edi
  43eb05:	pop    ecx
  43eb06:	jl     0x43eab8
  43eb08:	jbe    0x43eb19
  43eb0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43eb0b:	mov    dl,0x7b
  43eb0d:	or     BYTE PTR [edi+0x314c88a0],ch
  43eb13:	mov    ah,BYTE PTR [edx]
  43eb15:	test   DWORD PTR [edx-0x5af3be3],edi
  43eb1b:	fild   DWORD PTR [eax]
  43eb1d:	push   edx
  43eb1e:	idiv   esp
  43eb20:	sub    ebp,eax
  43eb22:	push   0x523ee5d0
  43eb27:	adc    DWORD PTR [edx-0x7dcb6f8b],edi
  43eb2d:	mov    ds:0x84af1650,eax
  43eb32:	pop    ebx
  43eb33:	mov    ah,0x4
  43eb35:	mov    al,0xe5
  43eb37:	es cs test eax,0x34d841be
  43eb3e:	mov    es,WORD PTR [edi-0x7f7ce98c]
  43eb44:	jg     0x43eb42
  43eb46:	hlt    
  43eb47:	jl     0x43ebba
  43eb49:	or     dh,0x5d
  43eb4c:	inc    edx
  43eb4d:	lods   eax,DWORD PTR ds:[esi]
  43eb4e:	and    ah,dh
  43eb50:	push   0xffffffe7
  43eb52:	or     al,0x7a
  43eb54:	jecxz  0x43ead6
  43eb56:	addr16 enter 0x8400,0x99
  43eb5b:	jb     0x43eafa
  43eb5d:	pop    ss
  43eb5e:	ds add al,0xec
  43eb61:	mov    edi,0x5d192f08
  43eb66:	in     eax,0xc8
  43eb68:	repnz adc BYTE PTR [edi-0xe],al
  43eb6c:	rcl    edi,1
  43eb6e:	pop    ebp
  43eb6f:	repz ret 0x34f8
  43eb73:	dec    edi
  43eb74:	in     al,dx
  43eb75:	mov    ds:0xa4812d85,eax
  43eb7a:	add    bl,ah
  43eb7c:	mov    esp,DWORD PTR [edx]
  43eb7e:	adc    DWORD PTR [edi],edi
  43eb80:	rcr    DWORD PTR [ebx+0x4a],0x58
  43eb84:	add    BYTE PTR [ebx],bh
  43eb86:	lods   al,BYTE PTR ds:[esi]
  43eb87:	mov    bl,0xbd
  43eb89:	cmp    DWORD PTR [ecx+0xb2496b4],esp
  43eb8f:	sahf   
  43eb90:	xchg   ebp,eax
  43eb91:	mov    esi,DWORD PTR [ecx]
  43eb93:	mov    edi,0x4b48c4c6
  43eb98:	fcomp  st(7)
  43eb9a:	ror    DWORD PTR [ecx-0xb],1
  43eb9d:	clc    
  43eb9e:	cli    
  43eb9f:	ins    BYTE PTR es:[edi],dx
  43eba0:	imul   ebp,edx,0xffffffe9
  43eba3:	out    0xa5,eax
  43eba5:	dec    edi
  43eba6:	push   es
  43eba7:	ins    BYTE PTR es:[edi],dx
  43eba8:	adc    al,0xb7
  43ebaa:	push   eax
  43ebab:	daa    
  43ebac:	push   ecx
  43ebad:	xchg   ebp,eax
  43ebae:	jge    0x43ebd0
  43ebb0:	pop    edx
  43ebb1:	cmp    BYTE PTR [edi-0x2ad0a6e6],cl
  43ebb7:	cmp    ebp,DWORD PTR [edx+0x0]
  43ebba:	pop    esp
  43ebbb:	test   DWORD PTR [ebx+ebx*2],0x5c09f53d
  43ebc2:	or     BYTE PTR ss:[edi],0xfe
  43ebc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ebc7:	rol    DWORD PTR [ebp-0x79],cl
  43ebca:	(bad)  
  43ebcb:	xchg   esp,eax
  43ebcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ebcd:	repz and al,0x5b
  43ebd0:	add    eax,0x6e3c49f1
  43ebd5:	dec    esp
  43ebd6:	xchg   ebx,eax
  43ebd7:	push   esi
  43ebd8:	sub    eax,0x3e578973
  43ebdd:	jl     0x43ec4f
  43ebdf:	xchg   ebx,eax
  43ebe0:	inc    eax
  43ebe1:	daa    
  43ebe2:	cdq    
  43ebe3:	jno    0x43eb92
  43ebe5:	rcl    BYTE PTR [edx-0x1e4d9c6c],0xaf
  43ebec:	xor    ah,BYTE PTR [eax]
  43ebee:	shl    DWORD PTR [ebx-0x48],1
  43ebf1:	sub    BYTE PTR [edi-0x58],al
  43ebf4:	push   ss
  43ebf5:	dec    edx
  43ebf6:	into   
  43ebf7:	and    ebx,DWORD PTR [ecx+0x1af9ec60]
  43ebfd:	mov    esp,0x7329d8d6
  43ec02:	test   BYTE PTR [edi+eiz*1],ah
  43ec05:	enter  0x266e,0x2a
  43ec09:	out    dx,eax
  43ec0a:	inc    ebp
  43ec0b:	test   al,0x1c
  43ec0d:	or     eax,0x145650f6
  43ec12:	int    0x57
  43ec14:	int3   
  43ec15:	xor    al,0xb
  43ec17:	fmul   QWORD PTR [edx+0x16]
  43ec1a:	es sti 
  43ec1c:	popa   
  43ec1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ec1e:	xor    al,0x87
  43ec20:	add    al,0x44
  43ec22:	div    DWORD PTR [edi]
  43ec24:	push   eax
  43ec25:	jmp    0x43ec51
  43ec27:	pop    esp
  43ec28:	fisttp WORD PTR ds:0x14cf6cfd
  43ec2e:	js     0x43ebf3
  43ec30:	xchg   DWORD PTR [edi+esi*4],eax
  43ec33:	adc    BYTE PTR [eax],0xab
  43ec36:	lea    ecx,[ecx+0x2cb49b20]
  43ec3c:	(bad)  
  43ec3d:	xchg   edi,eax
  43ec3e:	cmp    BYTE PTR [ebx+0x7d77c46a],al
  43ec44:	inc    ebp
  43ec45:	aam    0x67
  43ec47:	fs loopne 0x43ec21
  43ec4a:	mov    ds:0x7cbecb70,eax
  43ec4f:	mov    edi,0xaf0c9dd9
  43ec54:	rcr    BYTE PTR [eax],0xa3
  43ec57:	retf   
  43ec58:	and    al,0x97
  43ec5a:	into   
  43ec5b:	xor    BYTE PTR [ebx+0x7bc0a9c1],cl
  43ec61:	cmp    ah,cl
  43ec63:	outs   dx,DWORD PTR ds:[esi]
  43ec64:	mov    ds,eax
  43ec66:	arpl   WORD PTR [ebx+0x65a457e4],si
  43ec6c:	hlt    
  43ec6d:	inc    edi
  43ec6e:	mov    ebp,0x10f63b80
  43ec73:	stos   DWORD PTR es:[edi],eax
  43ec74:	outs   dx,DWORD PTR ds:[esi]
  43ec75:	sbb    al,0x9f
  43ec77:	dec    eax
  43ec78:	mov    ebp,0x38518f2c
  43ec7d:	adc    edx,0xffffffc4
  43ec80:	ja     0x43ec59
  43ec82:	shr    BYTE PTR [ebx-0x28],1
  43ec85:	dec    ecx
  43ec86:	loopne 0x43ece3
  43ec88:	loope  0x43ec76
  43ec8a:	dec    edi
  43ec8b:	ret    0x43f8
  43ec8e:	mov    edi,0x5a83784
  43ec93:	xchg   esp,eax
  43ec94:	daa    
  43ec95:	mov    cl,0xa0
  43ec97:	sbb    esp,DWORD PTR [edx-0x54]
  43ec9a:	emms   
  43ec9c:	cmp    al,0x7f
  43ec9e:	sbb    al,0x5d
  43eca0:	int3   
  43eca1:	outs   dx,DWORD PTR ds:[esi]
  43eca2:	add    eax,0xe40e63d8
  43eca7:	push   edi
  43eca8:	or     esi,eax
  43ecaa:	dec    ebx
  43ecab:	add    al,0x69
  43ecad:	cmp    BYTE PTR [ebx],0x7d
  43ecb0:	mov    WORD PTR [edi],gs
  43ecb2:	push   ss
  43ecb3:	cwde   
  43ecb4:	and    ebp,DWORD PTR [ebx]
  43ecb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ecb7:	pop    ss
  43ecb8:	cmp    al,0x25
  43ecba:	mov    ah,0x7
  43ecbc:	and    eax,0x4ceefb40
  43ecc1:	out    dx,eax
  43ecc2:	sti    
  43ecc3:	pop    eax
  43ecc4:	jecxz  0x43ed16
  43ecc6:	jge    0x43ecb4
  43ecc8:	dec    edi
  43ecc9:	dec    ecx
  43ecca:	clc    
  43eccb:	inc    ebx
  43eccc:	loope  0x43ec52
  43ecce:	aaa    
  43eccf:	in     al,0x90
  43ecd1:	sub    ebp,ebx
  43ecd3:	or     DWORD PTR [eax+0xfacd21b],esp
  43ecd9:	icebp  
  43ecda:	mov    eax,0xf7440c03
  43ecdf:	sbb    eax,ebp
  43ece1:	push   esp
  43ece2:	out    0x2,eax
  43ece4:	pusha  
  43ece5:	fild   DWORD PTR [ecx+0x6c]
  43ece8:	iret   
  43ece9:	push   esp
  43ecea:	js     0x43ecaf
  43ecec:	cmp    edx,DWORD PTR [ecx-0x6759d074]
  43ecf2:	and    ebp,DWORD PTR [ebp-0x4f57e85c]
  43ecf8:	or     esp,DWORD PTR [edi+0x5efb4029]
  43ecfe:	dec    esp
  43ecff:	out    dx,eax
  43ed00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ed01:	pop    eax
  43ed02:	jecxz  0x43ec9c
  43ed04:	xlat   BYTE PTR fs:[ebx]
  43ed06:	(bad)  
  43ed07:	in     eax,0x74
  43ed09:	(bad)  
  43ed0a:	xchg   esi,eax
  43ed0b:	add    BYTE PTR [ebx-0x3750f323],bh
  43ed11:	sbb    BYTE PTR [ebx-0x6cd74e19],ah
  43ed17:	(bad)  
  43ed18:	mov    eax,0xf744f903
  43ed1d:	cld    
  43ed1e:	push   eax
  43ed1f:	jmp    0x43ed14
  43ed21:	leave  
  43ed22:	pusha  
  43ed23:	fcmovne st,st(2)
  43ed25:	ins    BYTE PTR es:[edi],dx
  43ed26:	iret   
  43ed27:	jmp    0x4d8b0a4
  43ed2c:	mov    bh,0x83
  43ed2e:	test   DWORD PTR [edi+eiz*4],edx
  43ed31:	call   0xf6f0:0x8ce99b20
  43ed38:	cwde   
  43ed39:	cld    
  43ed3a:	add    al,0x51
  43ed3c:	push   0x1874180c
  43ed41:	mov    al,0xc4
  43ed43:	test   al,0x8c
  43ed45:	shl    BYTE PTR [eax+edi*8+0x48c4a0a9],1
  43ed4c:	lods   al,BYTE PTR ds:[esi]
  43ed4d:	ror    bh,1
  43ed4f:	mov    eax,0x8097d6dc
  43ed54:	lods   al,BYTE PTR ds:[esi]
  43ed55:	xchg   ecx,eax
  43ed56:	(bad)  
  43ed57:	int    0xca
  43ed59:	add    BYTE PTR [eax+ebp*8],al
  43ed5c:	or     al,0x25
  43ed5e:	adc    al,0x29
  43ed60:	and    BYTE PTR cs:[ecx+edx*2],ah
  43ed64:	dec    ebp
  43ed65:	inc    edx
  43ed66:	inc    esi
  43ed67:	cmp    BYTE PTR [ebx+0x37],dl
  43ed6a:	enter  0xb5cc,0xd4
  43ed6e:	mov    al,ds:0xe89460dc
  43ed73:	xor    al,0x9b
  43ed76:	clc    
  43ed77:	mov    fs,WORD PTR [eax+0x5]
  43ed7a:	and    BYTE PTR [esi+0x10],bh
  43ed7d:	cmp    bh,BYTE PTR [edx]
  43ed7f:	push   ds
  43ed80:	inc    ebp
  43ed81:	in     eax,0xa2
  43ed83:	sub    al,0x43
  43ed85:	je     0x43edbf
  43ed87:	dec    edx
  43ed88:	inc    eax
  43ed89:	daa    
  43ed8a:	dec    eax
  43ed8b:	and    al,0x30
  43ed8d:	push   edi
  43ed8e:	sub    ebx,DWORD PTR [eax]
  43ed90:	pusha  
  43ed91:	adc    BYTE PTR [eax+0x6f],al
  43ed94:	fdivp  st(0),st
  43ed96:	shl    DWORD PTR [eax+0x4],cl
  43ed99:	or     BYTE PTR [edi+0x1fb91774],ch
  43ed9f:	inc    ebp
  43eda0:	and    al,0x51
  43eda2:	int3   
  43eda3:	xor    BYTE PTR [ecx-0x28],al
  43eda6:	cmp    ecx,DWORD PTR [ebp-0x1d]
  43eda9:	dec    ebp
  43edaa:	ds mov al,0x55
  43edad:	mov    eax,0x1111957
  43edb2:	add    esi,DWORD PTR [eax+0x15]
  43edb5:	js     0x43ee33
  43edb7:	icebp  
  43edb8:	repz cli 
  43edba:	clc    
  43edbb:	loopne 0x43ed51
  43edbd:	outs   dx,DWORD PTR ds:[esi]
  43edbe:	inc    esp
  43edbf:	inc    edx
  43edc0:	dec    edi
  43edc1:	inc    esp
  43edc2:	pop    edx
  43edc3:	pop    edi
  43edc4:	push   esp
  43edc5:	mov    esp,0x3a2b3c3a
  43edca:	xor    bh,BYTE PTR [edx]
  43edcc:	xor    eax,0x3b646c3d
  43edd1:	ins    BYTE PTR es:[edi],dx
  43edd2:	dec    edx
  43edd3:	je     0x43ee25
  43edd5:	jl     0x43eda4
  43edd7:	test   BYTE PTR [eax],al
  43edd9:	rcl    BYTE PTR [eax-0x11634751],0xa4
  43ede0:	cli    
  43ede1:	int3   
  43ede2:	mov    al,0x9e
  43ede4:	out    dx,eax
  43ede5:	fadd   QWORD PTR [eax+edx*1-0x52]
  43ede9:	push   ecx
  43edea:	outs   dx,DWORD PTR ds:[esi]
  43edeb:	mov    eax,0x6a64375e
  43edf0:	inc    ebp
  43edf1:	nop
  43edf2:	jo     0x43ee31
  43edf4:	jl     0x43ede4
  43edf6:	test   cl,ch
  43edf8:	mov    WORD PTR [edx],ds
  43edfa:	idiv   BYTE PTR [eax-0x553b3a77]
  43ee00:	stc    
  43ee01:	mov    al,0xf5
  43ee03:	call   0xd083:0xcf2581a8
  43ee0a:	xchg   edx,eax
  43ee0b:	fmul   DWORD PTR [eax+0x21a9e040]
  43ee11:	adc    al,0x7f
  43ee13:	cmp    DWORD PTR [eax-0x67a1728],eax
  43ee19:	mov    ah,0x8b
  43ee1b:	out    dx,al
  43ee1c:	icebp  
  43ee1d:	inc    esi
  43ee1e:	mov    eax,0xd8d2b0c3
  43ee23:	lods   eax,DWORD PTR ds:[esi]
  43ee24:	pushf  
  43ee25:	fs retf 
  43ee27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ee28:	lds    esi,FWORD PTR [edi+ebx*8]
  43ee2b:	mov    eax,0x4c9fe500
  43ee30:	repnz test al,0xf8
  43ee33:	mov    edi,0x2d1d66ab
  43ee38:	push   cs
  43ee39:	idiv   BYTE PTR [ebx+eiz*4-0xe]
  43ee3d:	mov    dh,BYTE PTR [ebx+0x1ebcd4c3]
  43ee43:	scas   eax,DWORD PTR es:[edi]
  43ee44:	and    al,0xc9
  43ee46:	nop
  43ee47:	rol    BYTE PTR [eax+edi*1-0x1fb97324],1
  43ee4e:	ficomp DWORD PTR [ecx+0x51dfbd4]
  43ee54:	push   edi
  43ee55:	call   0x7d529f71
  43ee5a:	sbb    al,0xd
  43ee5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ee5d:	ds gs nop
  43ee60:	xor    BYTE PTR [ecx-0x37975a3f],bl
  43ee66:	mov    esp,0x9886d4
  43ee6b:	in     al,0xc9
  43ee6d:	out    dx,eax
  43ee6e:	pmulhw mm1,QWORD PTR ds:0x15e420ed
  43ee75:	pop    eax
  43ee76:	mov    ebx,0x201d0aa8
  43ee7b:	arpl   dx,cx
  43ee7d:	sbb    BYTE PTR [edx-0x2a],dl
  43ee80:	ss pusha 
  43ee82:	mov    al,ds:0xf134845
  43ee87:	es cmp eax,0x89100f31
  43ee8d:	lock stos DWORD PTR es:[edi],eax
  43ee8f:	popf   
  43ee90:	xchg   edx,eax
  43ee91:	je     0x43ef09
  43ee93:	jno    0x43eee1
  43ee95:	and    BYTE PTR ds:0x7b7f1879,dl
  43ee9b:	inc    esp
  43ee9c:	inc    ebx
  43ee9d:	push   ebx
  43ee9e:	push   ebp
  43ee9f:	push   esp
  43eea0:	push   ecx
  43eea1:	add    al,0x46
  43eea3:	jl     0x43ee93
  43eea5:	pusha  
  43eea6:	jne    0x43ef27
  43eea8:	das    
  43eea9:	test   BYTE PTR [edi+0x65],dh
  43eeac:	ins    BYTE PTR es:[edi],dx
  43eead:	mov    ds,WORD PTR [edi+eax*4]
  43eeb0:	cmp    DWORD PTR [edi+0x65],0xffffff88
  43eeb4:	add    al,0xf0
  43eeb6:	sbb    ch,bh
  43eeb8:	and    DWORD PTR [eax+ebx*4-0x53cb8f75],esp
  43eebf:	pop    esp
  43eec0:	inc    eax
  43eec1:	lods   eax,DWORD PTR ds:[esi]
  43eec2:	dec    ebx
  43eec3:	cwde   
  43eec4:	mov    eax,0x60bd7157
  43eec9:	inc    esp
  43eeca:	les    eax,FWORD PTR [edi+0x7f94b873]
  43eed0:	jb     0x43eefd
  43eed2:	mov    eax,ds:0x2be29777
  43eed7:	addr16 mov eax,ds:0x547c
  43eedb:	lods   eax,DWORD PTR ds:[esi]
  43eedc:	adc    DWORD PTR [eax],eax
  43eede:	ds add dh,dh
  43eee1:	dec    eax
  43eee2:	xor    eax,0x32
  43eee7:	add    BYTE PTR [ecx+0x19],al
  43eeea:	sbb    al,0x4c
  43eeec:	jbe    0x43eef3
  43eeee:	add    BYTE PTR [eax],al
  43eef0:	add    BYTE PTR [eax],al
  43eef2:	add    BYTE PTR [eax],al
  43eef4:	jbe    0x43eefb
  43eef6:	add    BYTE PTR [eax],al
  43eef8:	pop    ecx
  43eef9:	add    BYTE PTR [esi],ah
  43eefb:	jl     0x43eefd
  43eefd:	add    dh,BYTE PTR [esi]
  43eeff:	or     BYTE PTR [eax],al
  43ef01:	add    BYTE PTR [ecx+0x8040249],bl
  43ef07:	or     al,0xa0
  43ef09:	mov    al,ds:0xdbde1c58
  43ef0e:	sbb    al,0xd3
  43ef10:	iret   
  43ef11:	xor    eax,0x7c44e488
  43ef16:	dec    ebp
  43ef17:	xor    al,0x33
  43ef19:	loop   0x43ef68
  43ef1b:	pop    ebx
  43ef1c:	or     al,0xb
  43ef1e:	pusha  
  43ef1f:	inc    eax
  43ef20:	mov    al,0x78
  43ef22:	in     al,0xdf
  43ef24:	cmp    al,0xc4
  43ef26:	inc    ebx
  43ef27:	lea    ebx,[edx+edx*4+0x16284886]
  43ef2e:	arpl   di,di
  43ef30:	aas    
  43ef31:	push   es
  43ef32:	xor    eax,0x9778a48e
  43ef37:	adc    BYTE PTR [esp+ebp*2+0x5c],dl
  43ef3b:	arpl   WORD PTR [ebp+0x77],bp
  43ef3e:	popa   
  43ef3f:	das    
  43ef40:	push   eax
  43ef41:	mov    eax,gs:0x5259db9b
  43ef47:	xchg   ebx,ecx
  43ef49:	mov    ds:0xa8e4287c,eax
  43ef4e:	loop   0x43ef00
  43ef50:	mov    bh,0x74
  43ef52:	pop    ecx
  43ef53:	ret    0x6fc6
  43ef56:	push   ecx
  43ef57:	push   ebp
  43ef58:	pop    eax
  43ef59:	jo     0x43eee1
  43ef5b:	pushw  0x81dc
  43ef5f:	je     0x43ef8d
  43ef61:	jl     0x43ef7f
  43ef63:	or     al,0x81
  43ef65:	retf   0x9d10
  43ef68:	sbb    BYTE PTR [ecx+ebp*4],bl
  43ef6b:	in     al,0xaa
  43ef6d:	dec    eax
  43ef6e:	cmp    BYTE PTR [edi-0x1f3f41ae],ah
  43ef74:	cmp    ah,cl
  43ef76:	test   ah,dl
  43ef78:	jl     0x43efce
  43ef7a:	repz add al,0x68
  43ef7d:	in     eax,0xfc
  43ef7f:	clc    
  43ef80:	outs   dx,DWORD PTR ds:[esi]
  43ef81:	pushf  
  43ef82:	fld    QWORD PTR [eax]
  43ef84:	lahf   
  43ef85:	pop    edx
  43ef86:	jg     0x43efa0
  43ef88:	cdq    
  43ef89:	and    BYTE PTR [edi+0x4aa32424],dh
  43ef8f:	lods   eax,DWORD PTR ds:[esi]
  43ef90:	cmp    al,0xc9
  43ef92:	mov    ah,0x48
  43ef94:	fbstp  TBYTE PTR [esp+ebx*2]
  43ef97:	rol    eax,1
  43ef99:	or     al,0xe6
  43ef9b:	inc    esp
  43ef9c:	in     al,dx
  43ef9d:	cmp    BYTE PTR [ecx+esi*8-0x13],dh
  43efa1:	add    BYTE PTR [eax-0x6b4fe478],bh
  43efa7:	sbb    DWORD PTR [edx],ecx
  43efa9:	and    BYTE PTR [eax],ch
  43efab:	lods   eax,DWORD PTR ds:[esi]
  43efac:	les    esi,FWORD PTR [ecx+edi*4]
  43efaf:	add    BYTE PTR [eax-0x3b],0xe8
  43efb3:	dec    ebp
  43efb4:	sti    
  43efb5:	fstp   DWORD PTR [eax-0x23]
  43efb8:	or     al,0x64
  43efba:	shr    ebp,1
  43efbc:	lock cmp dl,BYTE PTR ds:0xb4ae00fe
  43efc3:	mov    WORD PTR [ecx],ss
  43efc5:	mov    dh,0x98
  43efc7:	sbb    eax,0x5e29a4ac
  43efcc:	mov    al,0x35
  43efce:	xchg   edx,eax
  43efcf:	pusha  
  43efd0:	ror    cl,0x80
  43efd3:	push   eax
  43efd4:	aad    0x98
  43efd6:	pop    esp
  43efd7:	loope  0x43efaf
  43efd9:	push   0x78d65aed
  43efde:	std    
  43efdf:	sbb    BYTE PTR [ecx+ecx*1+0x4a159004],al
  43efe6:	pushf  
  43efe7:	dec    ecx
  43efe8:	mov    cs,WORD PTR [esi-0x54]
  43efeb:	xor    DWORD PTR [edx-0x48],eax
  43efee:	cmp    eax,0xd049c4ca
  43eff3:	rcl    BYTE PTR [ebp-0xe],1
  43eff6:	repnz loopne 0x43f05e
  43eff9:	lods   al,BYTE PTR ds:[esi]
  43effa:	jo     0x43eff1
  43effc:	and    bh,BYTE PTR [ecx+eax*1-0x18]
  43f000:	enter  0x920c,0xee
  43f004:	fcomp  DWORD PTR [esi+eiz*1]
  43f007:	ret    
  43f008:	sub    ch,BYTE PTR [esi+ebp*1]
  43f00b:	hlt    
  43f00c:	cmp    BYTE PTR [esi+0xe488476],dl
  43f012:	nop
  43f013:	push   esp
  43f014:	cmp    BYTE PTR [eax+eiz*2-0x259357f6],bl
  43f01b:	or     BYTE PTR [eax-0x77bbf784],bh
  43f021:	adc    dl,BYTE PTR [eax-0x6c]
  43f024:	mov    al,ds:0xfc0224e0
  43f029:	lock xor al,0xde
  43f02c:	cld    
  43f02d:	inc    eax
  43f02e:	mov    al,0x88
  43f030:	dec    esp
  43f031:	push   esp
  43f032:	mov    esp,0x7e605ef0
  43f037:	test   al,0x6c
  43f039:	pop    esi
  43f03a:	mov    ah,0x78
  43f03c:	cmp    al,0x40
  43f03e:	test   BYTE PTR [edx],ah
  43f040:	jp     0x43f092
  43f042:	(bad)  
  43f043:	cli    
  43f044:	pop    esp
  43f045:	mov    eax,ds:0x3cac68d8
  43f04a:	je     0x43f004
  43f04c:	push   ss
  43f04d:	in     al,0x88
  43f04f:	dec    esp
  43f050:	in     al,0x94
  43f052:	pop    eax
  43f053:	call   0xf670:0xacbe64a0
  43f05a:	xchg   edx,eax
  43f05b:	mov    esp,0x8e618480
  43f060:	nop
  43f061:	sbb    BYTE PTR [eax-0x64],0xa
  43f065:	sub    BYTE PTR [eax-0x54],0x8c
  43f069:	je     0x43f023
  43f06b:	lock add ah,al
  43f06e:	xchg   esp,eax
  43f06f:	or     al,0xd0
  43f071:	je     0x43effb
  43f073:	xor    ah,dl
  43f075:	in     al,0xee
  43f077:	mov    al,0x75
  43f079:	out    0xbc,al
  43f07b:	sub    BYTE PTR [esi],0x2e
  43f07e:	dec    esp
  43f07f:	nop
  43f080:	sub    bl,BYTE PTR [eax-0x64]
  43f083:	ins    BYTE PTR es:[edi],dx
  43f084:	fs test al,0x48
  43f087:	jo     0x43f03d
  43f089:	adc    cl,BYTE PTR [eax+0x0]
  43f08c:	(bad)  
  43f08d:	les    ecx,FWORD PTR [edi+ebp*8]
  43f090:	sbb    BYTE PTR cs:[edx+0x46e8240c],dl
  43f097:	adc    BYTE PTR [eax+edi*8],dh
  43f09a:	sub    al,0xc0
  43f09c:	add    al,0xb6
  43f09e:	int3   
  43f09f:	adc    BYTE PTR [edx],ch
  43f0a1:	pop    esp
  43f0a2:	mov    al,ds:0xb06c000e
  43f0a7:	sub    BYTE PTR [eax-0x44],bh
  43f0aa:	dec    eax
  43f0ab:	add    al,0xc8
  43f0ad:	mov    al,ds:0x8672d410
  43f0b2:	and    ah,ah
  43f0b4:	in     al,dx
  43f0b5:	sub    al,0xe3
  43f0b7:	jmp    0xa608:0xc42efc38
  43f0be:	push   eax
  43f0bf:	aam    0x18
  43f0c1:	push   eax
  43f0c2:	loopne 0x43f0fe
  43f0c4:	inc    esp
  43f0c5:	in     al,dx
  43f0c6:	and    DWORD PTR [eax-0x8],esi
  43f0c9:	(bad)  
  43f0ca:	sbb    bh,dl
  43f0cc:	or     al,0xd0
  43f0ce:	push   ss
  43f0cf:	push   eax
  43f0d0:	sbb    eax,0x44e824b5
  43f0d5:	jo     0x43f060
  43f0d7:	cmp    edi,edi
  43f0d9:	scas   al,BYTE PTR es:[edi]
  43f0da:	xor    cl,al
  43f0dc:	dec    ebp
  43f0dd:	rol    BYTE PTR [edx-0x1b19f928],cl
  43f0e3:	sub    BYTE PTR [edx-0x636dcb10],bl
  43f0e9:	add    BYTE PTR [esp+eax*8-0x74],0x50
  43f0ee:	cs cwde 
  43f0f0:	pop    esp
  43f0f1:	xor    al,0x28
  43f0f3:	in     al,dx
  43f0f4:	pop    edx
  43f0f5:	into   
  43f0f6:	cmp    ah,bh
  43f0f8:	data16 shr BYTE PTR [edx+0x2a],0xd0
  43f0fd:	add    eax,0x7e56dce2
  43f102:	or     ch,ah
  43f104:	cmp    eax,0x846ef920
  43f109:	cmp    eax,0x77478842
  43f10e:	pop    eax
  43f10f:	pop    esi
  43f110:	adc    BYTE PTR cs:[edi],bh
  43f113:	push   ds
  43f114:	sbb    DWORD PTR [eax],eax
  43f116:	sbb    eax,0xe4edc67c
  43f11b:	jmp    0x6e618934
  43f120:	and    al,0x5c
  43f122:	jge    0x43f169
  43f124:	push   ecx
  43f125:	dec    edx
  43f126:	inc    ebp
  43f127:	or     DWORD PTR [edx],ebp
  43f129:	dec    eax
  43f12a:	sub    bh,BYTE PTR [edi]
  43f12c:	es xor eax,0x70d143d
  43f132:	jle    0x43f152
  43f134:	jbe    0x43f1b4
  43f136:	jl     0x43f15f
  43f138:	les    ecx,FWORD PTR [esi-0x650a0a22]
  43f13e:	clc    
  43f13f:	jecxz  0x43f0e8
  43f141:	lods   al,BYTE PTR gs:[esi]
  43f143:	inc    al
  43f145:	jg     0x43f173
  43f147:	inc    esp
  43f148:	daa    
  43f149:	aas    
  43f14a:	xor    eax,0x4283654
  43f14f:	or     BYTE PTR [eax+eax*1+0x5e],ch
  43f153:	mov    ah,0x78
  43f155:	jl     0x43f111
  43f157:	test   al,bl
  43f159:	in     eax,dx
  43f15a:	nop
  43f15b:	loopne 0x43f14d
  43f15d:	(bad)  
  43f15f:	leave  
  43f160:	retf   0xdec5
  43f163:	mov    ah,0xdd
  43f165:	jmp    0x43f127
  43f167:	les    ebx,FWORD PTR [ebx-0x2f7c637c]
  43f16d:	popf   
  43f16e:	xor    al,0x21
  43f170:	scas   al,BYTE PTR es:[edi]
  43f171:	jbe    0x43f127
  43f173:	jns    0x43f1b0
  43f175:	in     eax,0x84
  43f177:	cld    
  43f178:	iret   
  43f179:	in     eax,0xe6
  43f17b:	jmp    0xc2fc:0xa8d0cef9
  43f182:	fcmovnu st,st(3)
  43f184:	fnstenv [ebx+0x43c8c8b7]
  43f18a:	(bad)  
  43f18b:	sbb    al,bl
  43f18d:	mov    ah,0x8d
  43f18f:	mov    eax,DWORD PTR [edi-0x76688b4d]
  43f195:	outs   dx,BYTE PTR ds:[esi]
  43f196:	jo     0x43f1a0
  43f198:	nop
  43f199:	push   eax
  43f19a:	push   eax
  43f19b:	xchg   esp,eax
  43f19c:	sub    al,dh
  43f19e:	rcr    dh,0x70
  43f1a1:	scas   al,BYTE PTR es:[edi]
  43f1a2:	mov    eax,0xc0058abc
  43f1a7:	int    0xd4
  43f1a9:	fcom   DWORD PTR [eax-0x176b7e47]
  43f1af:	in     al,dx
  43f1b0:	mov    ds:0x54fed0f5,al
  43f1b5:	ins    DWORD PTR es:[edi],dx
  43f1b6:	imul   esp,DWORD PTR gs:[ebx+0x14],0x22cea9dd
  43f1be:	popa   
  43f1bf:	or     al,0x37
  43f1c1:	jns    0x43f156
  43f1c3:	into   
  43f1c4:	add    al,0xca
  43f1c6:	pop    ebp
  43f1c7:	mov    dl,0xda
  43f1c9:	sti    
  43f1ca:	pop    esi
  43f1cb:	in     al,0x67
  43f1cd:	out    dx,eax
  43f1ce:	in     al,dx
  43f1cf:	and    dh,dh
  43f1d1:	sbb    esi,esi
  43f1d3:	push   edx
  43f1d4:	popa   
  43f1d5:	mov    BYTE PTR [ebp+0x7c],cl
  43f1d8:	js     0x43f251
  43f1da:	jg     0x43f1fc
  43f1dc:	out    dx,eax
  43f1dd:	mov    ch,BYTE PTR ds:0xd3395731
  43f1e3:	inc    edx
  43f1e4:	or     eax,0x26353826
  43f1e9:	pop    ecx
  43f1ea:	mov    al,ds:0x948983e5
  43f1ef:	mov    ebp,0x98729f96
  43f1f4:	ins    DWORD PTR es:[edi],dx
  43f1f5:	popa   
  43f1f6:	jo     0x43f215
  43f1f8:	sbb    DWORD PTR [ecx-0x38],eax
  43f1fb:	es ins BYTE PTR es:[edi],dx
  43f1fd:	dec    ecx
  43f1fe:	(bad)  
  43f1ff:	ss call 0x353e:0xe4322f3
  43f207:	mov    ah,0x7b
  43f209:	mov    ch,0x9
  43f20b:	pusha  
  43f20c:	imul   ebp,DWORD PTR [edx+edx*2],0xe50e1904
  43f213:	shl    DWORD PTR [ebx+esi*2+0x44],0x70
  43f218:	jge    0x43f268
  43f21a:	inc    ebx
  43f21b:	mov    BYTE PTR [edi],ch
  43f21d:	(bad)  
  43f21e:	push   ss
  43f21f:	cmp    eax,0x3b214078
  43f224:	cmp    BYTE PTR [edx],ah
  43f226:	cmp    esp,DWORD PTR [ecx]
  43f228:	pop    esp
  43f229:	lods   eax,DWORD PTR ds:[esi]
  43f22a:	xor    edx,ecx
  43f22c:	ins    DWORD PTR es:[edi],dx
  43f22d:	xor    edx,DWORD PTR [edx+ebp*2]
  43f230:	or     al,ah
  43f232:	xchg   DWORD PTR [esi+ebp*1-0x6f],ebx
  43f236:	(bad)  
  43f237:	pushf  
  43f238:	cmc    
  43f239:	fcmovb st,st(4)
  43f23b:	test   eax,0x497537cb
  43f240:	sub    al,0x44
  43f242:	cmp    al,0x25
  43f244:	adc    ch,BYTE PTR ds:0xb34392c
  43f24a:	push   0x1d10193b
  43f24f:	aas    
  43f250:	call   0x90d0ed3a
  43f255:	xor    DWORD PTR [edi+ecx*8-0x3d022f3b],ebx
  43f25c:	xchg   ecx,eax
  43f25d:	aam    0xb1
  43f25f:	fsubr  DWORD PTR [ecx+eiz*4-0x4e259354]
  43f266:	sub    al,0x43
  43f268:	mov    al,ds:0x747e4c5c
  43f26d:	stc    
  43f26e:	jl     0x43f213
  43f270:	(bad)  
  43f271:	int3   
  43f272:	in     eax,0x10
  43f274:	out    0xfd,al
  43f276:	call   esp
  43f278:	retf   
  43f279:	fcmovbe st,st(5)
  43f27b:	nop
  43f27c:	test   DWORD PTR [esi-0x361a5eaa],edi
  43f282:	sti    
  43f283:	xchg   ecx,eax
  43f284:	mov    al,ds:0x4489aeac
  43f289:	mov    bl,BYTE PTR [ecx+0x5c8b9184]
  43f28f:	add    al,BYTE PTR [edi]
  43f291:	test   al,0x95
  43f293:	test   DWORD PTR [ecx-0x555b0861],ebx
  43f299:	lea    edx,[ebx-0x3f302608]
  43f29f:	mov    al,0x8d
  43f2a1:	mov    esi,0xdcaabba2
  43f2a6:	loopne 0x43f29a
  43f2a8:	mov    DWORD PTR [ebp-0x4],ecx
  43f2ab:	call   0x6345:0xa1e4fe
  43f2b2:	je     0x43f258
  43f2b4:	ins    DWORD PTR es:[edi],dx
  43f2b5:	jo     0x43f2fc
  43f2b7:	ins    BYTE PTR es:[edi],dx
  43f2b8:	retf   0xd4bf
  43f2bb:	mov    edx,0xd8f6e5f9
  43f2c0:	lea    esi,[eax+esi*4-0x1b242256]
  43f2c7:	mov    al,ds:0x97b850ef
  43f2cc:	lahf   
  43f2cd:	popa   
  43f2ce:	push   0xb5352d4a
  43f2d3:	sbb    ebx,DWORD PTR [esi]
  43f2d5:	outs   dx,BYTE PTR ds:[esi]
  43f2d6:	and    al,0x61
  43f2d8:	pop    edx
  43f2d9:	push   ebp
  43f2da:	addr16 inc ecx
  43f2dc:	dec    edi
  43f2dd:	xor    al,0xa0
  43f2df:	sub    eax,0xdc937121
  43f2e4:	cdq    
  43f2e5:	inc    ebp
  43f2e6:	jmp    0x41b0:0xc815f10f
  43f2ed:	ja     0x43f318
  43f2ef:	add    DWORD PTR [ecx],esi
  43f2f1:	adc    eax,0x2701b818
  43f2f6:	jle    0x43f31c
  43f2f8:	push   ebp
  43f2f9:	inc    esi
  43f2fa:	dec    ebx
  43f2fb:	jl     0x43f357
  43f2fd:	add    DWORD PTR [eax],esi
  43f2ff:	sbb    edx,DWORD PTR [eax+0x6]
  43f302:	fidivr WORD PTR [ebx+0x56]
  43f305:	daa    
  43f306:	pop    es
  43f307:	or     al,0x5a
  43f309:	or     al,0x58
  43f30b:	push   ecx
  43f30c:	xchg   ebp,eax
  43f30d:	xor    ebp,DWORD PTR [ebp+0x3]
  43f310:	js     0x43f32c
  43f312:	mov    ah,0x84
  43f314:	cmp    eax,0x26d0114c
  43f319:	aad    0x38
  43f31b:	pusha  
  43f31c:	adc    ah,BYTE PTR [ecx]
  43f31e:	ds and al,0x21
  43f321:	mov    ebx,0x681c254c
  43f326:	ins    BYTE PTR es:[edi],dx
  43f327:	mov    al,0x70
  43f329:	sub    al,0x19
  43f32b:	bnd jmp 0x1442e212
  43f331:	pushf  
  43f332:	pushf  
  43f333:	mov    al,ds:0x1529cbb0
  43f338:	sub    BYTE PTR [edx-0xc],dh
  43f33b:	and    eax,0xa44a6d25
  43f340:	jge    0x43f39d
  43f342:	and    BYTE PTR [eax+0x1c],0xcc
  43f346:	pop    eax
  43f347:	dec    ebp
  43f348:	clc    
  43f349:	jnp    0x43f2cb
  43f34b:	outs   dx,BYTE PTR ds:[esi]
  43f34c:	in     eax,dx
  43f34d:	mov    ss,WORD PTR [edx]
  43f34f:	xlat   BYTE PTR ds:[ebx]
  43f350:	mov    ecx,0x8ba18e9e
  43f355:	dec    esi
  43f356:	(bad)  
  43f357:	shl    BYTE PTR [ecx+0x48a9a5f1],1
  43f35d:	loope  0x43f3b3
  43f35f:	pop    eax
  43f360:	pop    esp
  43f361:	jae    0x43f3c3
  43f363:	cmp    cl,BYTE PTR [ecx]
  43f365:	add    eax,DWORD PTR [ecx]
  43f367:	adc    eax,0xd0a12d19
  43f36c:	cmp    DWORD PTR [esi+eax*4+0x7d],esi
  43f370:	popf   
  43f371:	ds inc eax
  43f373:	test   eax,0xb99e90e1
  43f378:	jl     0x43f355
  43f37a:	les    esi,FWORD PTR [ecx]
  43f37c:	enter  0xb587,0xb1
  43f380:	test   al,0xe0
  43f382:	mov    ds:0x9da39e87,al
  43f387:	xchg   esi,eax
  43f388:	out    0xe8,eax
  43f38a:	sbb    cl,ch
  43f38c:	fcomip st,st(6)
  43f38e:	repnz pushf 
  43f390:	scas   al,BYTE PTR es:[edi]
  43f391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f392:	dec    edx
  43f393:	dec    esp
  43f394:	not    DWORD PTR [ecx+edx*8]
  43f397:	enter  0xa5a9,0xa4
  43f39b:	sub    al,0x90
  43f39d:	xchg   edi,eax
  43f39e:	js     0x43f370
  43f3a0:	cli    
  43f3a1:	lea    ebp,[eax]
  43f3a3:	lds    esp,FWORD PTR [ebx+0x227cfbf4]
  43f3a9:	add    al,0xba
  43f3ab:	or     BYTE PTR [eax],dl
  43f3ad:	inc    edi
  43f3ae:	je     0x43f429
  43f3b0:	inc    ebp
  43f3b1:	fsubr  DWORD PTR [ecx+ecx*4-0x5a0f5749]
  43f3b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f3b9:	mov    esi,0xa5d4d302
  43f3be:	fcomip st,st(0)
  43f3c0:	stos   DWORD PTR es:[edi],eax
  43f3c1:	cwde   
  43f3c2:	mov    DWORD PTR [esi+0x12f311],ebx
  43f3c8:	inc    ecx
  43f3c9:	ret    
  43f3ca:	sub    eax,0x991cba41
  43f3cf:	les    esi,FWORD PTR [ebp*2-0x279c4fa6]
  43f3d6:	cmp    al,al
  43f3d8:	xchg   ebp,eax
  43f3d9:	dec    eax
  43f3da:	xchg   esp,eax
  43f3db:	mov    cl,0xb4
  43f3dd:	mov    ecx,0x4ce12a94
  43f3e2:	add    al,0xf0
  43f3e4:	scas   eax,DWORD PTR es:[edi]
  43f3e5:	test   al,0x53
  43f3e7:	test   BYTE PTR [ecx*2-0x63e6ea30],ch
  43f3ee:	sub    eax,0x5f5f464b
  43f3f3:	pop    eax
  43f3f4:	pop    ebp
  43f3f5:	outs   dx,DWORD PTR ds:[esi]
  43f3f6:	inc    edi
  43f3f7:	inc    esp
  43f3f8:	push   esi
  43f3f9:	int3   
  43f3fa:	push   ebx
  43f3fb:	mov    ch,0x34
  43f3fd:	pop    ss
  43f3fe:	and    eax,0xb8292636
  43f403:	cmp    bh,cl
  43f405:	xor    al,dh
  43f407:	je     0x43f415
  43f409:	jae    0x43f440
  43f40b:	push   ebp
  43f40c:	(bad)  [edi]
  43f40e:	and    al,0x6b
  43f410:	inc    eax
  43f411:	pop    ecx
  43f412:	inc    esp
  43f413:	pop    edx
  43f414:	push   ebx
  43f415:	and    DWORD PTR [esi],esi
  43f417:	dec    eax
  43f418:	sub    BYTE PTR [edi],al
  43f41a:	cmp    eax,0x130f3836
  43f41f:	push   0x590d7068
  43f424:	jg     0x43f3f9
  43f426:	in     al,dx
  43f427:	in     eax,dx
  43f428:	loopne 0x43f426
  43f42a:	sbb    DWORD PTR [ebp+0x580a3d9e],edi
  43f430:	aad    0x30
  43f432:	ja     0x43f47f
  43f434:	cs in  al,0x1f
  43f437:	and    dl,BYTE PTR [eax+0x35]
  43f43a:	pop    edx
  43f43b:	pop    ds
  43f43c:	ins    DWORD PTR es:[edi],dx
  43f43d:	mov    al,ds:0x76514f6c
  43f442:	fmul   DWORD PTR [esi-0x15]
  43f445:	lods   al,BYTE PTR ds:[esi]
  43f446:	cld    
  43f447:	jecxz  0x43f429
  43f449:	add    DWORD PTR [ebx-0x3877ad4f],ebx
  43f44f:	fsubp  st(0),st
  43f451:	rcr    edi,1
  43f453:	into   
  43f454:	pusha  
  43f455:	xchg   DWORD PTR [ecx+0x56],ebp
  43f458:	outs   dx,BYTE PTR ds:[esi]
  43f459:	or     DWORD PTR [ebp+0x2b],ebx
  43f45c:	in     al,0x2a
  43f45e:	das    
  43f45f:	pop    ds
  43f460:	adc    BYTE PTR ds:0xbee4e12c,bl
  43f466:	push   ecx
  43f467:	cmp    BYTE PTR [eax],al
  43f469:	add    BYTE PTR [eax],al
  43f46b:	add    BYTE PTR [eax],al
  43f46d:	add    BYTE PTR [eax],al
  43f46f:	add    BYTE PTR [edx+0x1a],dl
  43f472:	dec    edi
  43f473:	dec    edi
  43f474:	pusha  
  43f475:	add    eax,DWORD PTR [eax]
  43f477:	add    BYTE PTR [eax],al
  43f479:	add    BYTE PTR [eax],al
  43f47b:	add    BYTE PTR [eax+0x3],ah
  43f47e:	add    BYTE PTR [eax],al
  43f480:	pop    edx
  43f481:	add    BYTE PTR [esi],ah
  43f483:	jl     0x43f485
  43f485:	add    dh,BYTE PTR [esi]
  43f487:	or     BYTE PTR [eax],al
  43f489:	add    BYTE PTR [ebx+0x90c004f],dh
  43f48f:	dec    ebx
  43f490:	jne    0x43f4f2
  43f492:	pop    ebx
  43f493:	jge    0x43f4e5
  43f495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f496:	pop    esp
  43f497:	pop    ecx
  43f498:	inc    edx
  43f499:	push   ecx
  43f49a:	cmp    BYTE PTR [esp+ebp*2],bh
  43f49d:	inc    ebp
  43f49e:	cwde   
  43f49f:	dec    esp
  43f4a0:	push   ss
  43f4a1:	cmp    edi,DWORD PTR [ebx]
  43f4a3:	sub    DWORD PTR [ebx],edx
  43f4a5:	fs push 0x3d277039
  43f4ab:	cs mov bl,0xb6
  43f4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f4af:	call   0x9d3889b0
  43f4b4:	and    al,0x46
  43f4b6:	bound  edx,QWORD PTR cs:[ecx+0x5f]
  43f4ba:	cmp    al,0x11
  43f4bc:	xor    DWORD PTR ds:0x3902293e,ebp
  43f4c2:	xor    BYTE PTR [eax+0x11],ah
  43f4c5:	or     eax,0x78230829
  43f4ca:	jl     0x43f4c3
  43f4cc:	test   BYTE PTR [ecx-0x1302013b],cl
  43f4d2:	cmc    
  43f4d3:	ror    eax,0xa8
  43f4d6:	(bad)
  43f4d9:	jmp    0x43f4b4
  43f4db:	mov    ds:0x3d503eb1,eax
  43f4e0:	sub    al,0x25
  43f4e2:	and    al,0x1
  43f4e4:	sbb    ecx,DWORD PTR [edi]
  43f4e6:	add    dh,BYTE PTR [ecx+edx*1+0xc]
  43f4ea:	hlt    
  43f4eb:	jmp    0x43f4e7
  43f4ed:	mov    WORD PTR [eax-0xc6177de],ss
  43f4f3:	rcr    esp,0xa3
  43f4f6:	xor    al,0xd9
  43f4f9:	ffreep st(0)
  43f4fb:	test   al,0xc8
  43f4fd:	mov    esi,0xb2b797d0
  43f502:	xchg   esi,eax
  43f503:	in     al,0x8d
  43f505:	sahf   
  43f506:	add    BYTE PTR [ebx],ch
  43f508:	or     dl,dh
  43f50a:	in     eax,dx
  43f50b:	out    0x3e,al
  43f50d:	neg    DWORD PTR [ebx-0x54303743]
  43f513:	mov    ebx,0xb9d5c3ac
  43f518:	cmp    eax,DWORD PTR [eax-0x75]
  43f51b:	mov    eax,0xbd9fbea9
  43f520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f521:	loope  0x43f583
  43f523:	mov    eax,ds:0xd5f75bf1
  43f529:	push   ebx
  43f52a:	add    eax,0x6b03b66b
  43f52f:	sbb    bh,BYTE PTR [ebx-0x85267da]
  43f535:	not    esp
  43f537:	shl    DWORD PTR [ebx+0x5084c8a1],cl
  43f53d:	aam    0x99
  43f53f:	cwde   
  43f540:	mov    dh,0xa5
  43f542:	mov    eax,0xe88175a5
  43f547:	aas    
  43f548:	add    BYTE PTR [edi+0x40],dl
  43f54b:	mov    ss,WORD PTR [edx+0x797c78]
  43f551:	push   esi
  43f552:	js     0x43f5a1
  43f554:	inc    esp
  43f555:	pop    esp
  43f556:	mov    eax,0x4cc96107
  43f55b:	cmp    DWORD PTR [ebp+edi*4-0x6f5e7350],0xffffffec
  43f563:	xlat   BYTE PTR ds:[ebx]
  43f564:	jbe    0x43f4f2
  43f566:	(bad)  
  43f567:	jg     0x43f5c0
  43f569:	inc    eax
  43f56a:	dec    ecx
  43f56b:	pop    esp
  43f56c:	pop    eax
  43f56d:	sbb    al,0x5
  43f56f:	sbb    ebp,DWORD PTR es:[eax+0x7db1b74a]
  43f576:	inc    esp
  43f577:	inc    eax
  43f578:	inc    esp
  43f579:	daa    
  43f57a:	dec    eax
  43f57b:	cmp    al,0x31
  43f57d:	fcom   QWORD PTR [ecx-0x52]
  43f580:	pusha  
  43f581:	cmp    al,BYTE PTR [eax+ebx*4+0x736ea9f8]
  43f588:	popa   
  43f589:	bound  esi,QWORD PTR [esp+edx*1-0x62]
  43f58d:	sbb    eax,0x414791a2
  43f592:	pop    ebp
  43f593:	push   ebp
  43f594:	push   esi
  43f595:	pop    eax
  43f596:	or     al,0x44
  43f598:	and    DWORD PTR [edx],esp
  43f59a:	xor    eax,0x628f5815
  43f59f:	sub    al,0x60
  43f5a1:	or     DWORD PTR [ecx],edx
  43f5a3:	add    al,0xf8
  43f5a5:	das    
  43f5a6:	leave  
  43f5a7:	jmp    0x4171:0xe690e3ee
  43f5ae:	push   eax
  43f5af:	inc    ecx
  43f5b0:	inc    ebx
  43f5b1:	pop    esi
  43f5b2:	xor    al,0x30
  43f5b4:	cmp    al,0x23
  43f5b6:	inc    esi
  43f5b7:	leave  
  43f5b8:	es and al,0x35
  43f5bb:	sub    ch,BYTE PTR [eax]
  43f5bd:	adc    DWORD PTR fs:[eax],ebx
  43f5c0:	ins    DWORD PTR es:[edi],dx
  43f5c1:	jl     0x43f5e6
  43f5c3:	js     0x43f574
  43f5c5:	test   cl,dl
  43f5c7:	mov    edx,fs
  43f5c9:	clc    
  43f5ca:	adc    al,0x82
  43f5cc:	(bad)
  43f5d0:	aam    0xb8
  43f5d2:	xlat   BYTE PTR ds:[ebx]
  43f5d3:	(bad)  
  43f5d5:	lds    ebx,FWORD PTR [ebx+0xa]
  43f5d8:	cmp    DWORD PTR [eax],edi
  43f5da:	sub    al,0x5e
  43f5dc:	add    eax,0x736cdbe4
  43f5e1:	cmp    eax,0x94e5380b
  43f5e6:	jmp    0xd2cb:0x98f3f7f9
  43f5ed:	rcr    ebx,0xc
  43f5f0:	aad    0xda
  43f5f2:	int3   
  43f5f3:	mov    esp,0x9cfc46b2
  43f5f8:	ror    edx,1
  43f5fa:	(bad)  
  43f5fc:	mov    BYTE PTR [ebp+0x69],ah
  43f5ff:	xor    DWORD PTR [edi],esi
  43f601:	sub    BYTE PTR [eax+eax*4+0x26],bh
  43f605:	mov    edi,0xdddbbb0d
  43f60a:	shl    DWORD PTR [ecx],1
  43f60c:	mov    eax,ds:0xb5aa2ca2
  43f611:	cmp    BYTE PTR [ecx-0x57],bl
  43f614:	mov    al,ds:0xb1b4a38b
  43f619:	mov    ah,bl
  43f61b:	add    DWORD PTR [ebx-0xbe51373],0x672292bd
  43f625:	or     DWORD PTR [edi],ecx
  43f627:	jg     0x43f61a
  43f629:	repnz mov eax,ds:0xb0a86db2
  43f62f:	loopne 0x43f605
  43f631:	iret   
  43f632:	sub    DWORD PTR [eax-0x134c5c5c],0x2527dcd8
  43f63c:	jmp    0xc8fc:0x87b6ffec
  43f643:	or     DWORD PTR [ecx+0xf],0x10
  43f647:	cmp    DWORD PTR [ebx+0x1f],ebx
  43f64a:	jmp    0x3a39:0xf9496c24
  43f651:	push   es
  43f652:	test   edi,ecx
  43f654:	mov    ah,BYTE PTR [edx-0x6c23424f]
  43f65a:	out    0xec,al
  43f65c:	in     al,dx
  43f65d:	stc    
  43f65e:	mov    eax,0x41748f99
  43f663:	jp     0x43f673
  43f665:	bound  edx,QWORD PTR [ebp-0x64]
  43f668:	add    eax,0x45506121
  43f66d:	inc    esp
  43f66e:	xor    al,0x68
  43f670:	dec    esi
  43f671:	das    
  43f672:	daa    
  43f673:	sub    eax,0x7054233f
  43f678:	jns    0x43f6df
  43f67a:	mov    edi,0x789196ac
  43f67f:	int    0x65
  43f681:	add    al,0x1a
  43f683:	push   0x547c2853
  43f688:	loop   0x43f6a6
  43f68a:	sub    BYTE PTR [ebx+eiz*1],ch
  43f68d:	jne    0x43f688
  43f68f:	aas    
  43f690:	or     eax,0x3c392c2b
  43f695:	xchg   esi,eax
  43f696:	pop    edi
  43f697:	adc    ah,BYTE PTR [eax*1+0x743b6c05]
  43f69e:	sbb    DWORD PTR [ebp+0x1],edi
  43f6a1:	xchg   ecx,eax
  43f6a2:	int    0xc
  43f6a4:	jp     0x43f714
  43f6a6:	jne    0x43f6fa
  43f6a8:	dec    ebx
  43f6a9:	inc    esi
  43f6aa:	inc    ecx
  43f6ab:	lock or eax,0x37cf7f39
  43f6b1:	pop    ds
  43f6b2:	dec    esp
  43f6b3:	inc    ecx
  43f6b4:	push   ecx
  43f6b5:	sysexit 
  43f6b7:	inc    eax
  43f6b8:	add    BYTE PTR ds:0x7815182f,cl
  43f6be:	repnz int 0xf1
  43f6c1:	mov    al,ah
  43f6c3:	in     al,0xfd
  43f6c5:	(bad)  
  43f6c7:	aam    0xc1
  43f6c9:	test   al,0xca
  43f6cb:	push   0xfffffff5
  43f6cd:	add    dl,cl
  43f6cf:	dec    edi
  43f6d0:	dec    eax
  43f6d1:	and    edx,DWORD PTR [ecx]
  43f6d3:	jb     0x43f730
  43f6d5:	inc    edi
  43f6d6:	and    esp,DWORD PTR [eax]
  43f6d8:	pop    es
  43f6d9:	sbb    DWORD PTR [eax+0x38],esi
  43f6dc:	js     0x43f67d
  43f6de:	add    bl,0xf8
  43f6e1:	iret   
  43f6e2:	icebp  
  43f6e3:	push   esp
  43f6e4:	mov    ebp,0xc4c5c3f5
  43f6e9:	lods   al,BYTE PTR ds:[esi]
  43f6ea:	aas    
  43f6eb:	mov    ch,0xe2
  43f6ed:	std    
  43f6ee:	sub    BYTE PTR [edx-0x425f6054],0xb6
  43f6f5:	fild   QWORD PTR [esi-0x65]
  43f6f8:	outs   dx,DWORD PTR ds:[esi]
  43f6f9:	xor    bh,BYTE PTR [eax+edi*4-0x7022ba8]
  43f700:	jmp    0x9ffe2a95
  43f705:	mov    ds:0xc2c9f861,al
  43f70a:	xlat   BYTE PTR ss:[ebx]
  43f70c:	shl    BYTE PTR [ebx-0x6f20b4b9],cl
  43f712:	xchg   ebp,eax
  43f713:	cmc    
  43f714:	fild   QWORD PTR [edi+eiz*4-0x7079935b]
  43f71b:	jp     0x43f6fd
  43f71d:	inc    eax
  43f71e:	sbb    BYTE PTR [ecx-0x2d],ah
  43f721:	lods   al,BYTE PTR ds:[esi]
  43f722:	fstp   DWORD PTR [edi-0x5717551f]
  43f728:	(bad)  
  43f729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f72a:	mov    ebx,0x8a5aff0
  43f72f:	dec    ebp
  43f730:	mov    dl,0xa6
  43f732:	mov    ecx,0x289d92e8
  43f737:	out    dx,eax
  43f738:	hlt    
  43f739:	mov    ah,0x9c
  43f73b:	cmp    BYTE PTR [esi+0x6b],al
  43f73e:	jp     0x43f734
  43f740:	push   esi
  43f741:	jno    0x43f7bc
  43f743:	pop    ebp
  43f744:	(bad)
  43f748:	xor    BYTE PTR [edi-0x483b2044],al
  43f74e:	rcl    eax,cl
  43f750:	retf   
  43f751:	fadd   st,st(3)
  43f753:	loopne 0x43f750
  43f755:	call   0xf92fe84d
  43f75a:	jecxz  0x43f75c
  43f75c:	push   es
  43f75d:	or     DWORD PTR [eax+edx*1+0x5a],ebp
  43f761:	(bad)  
  43f762:	pop    esp
  43f763:	fwait
  43f764:	xchg   ebp,eax
  43f765:	xor    DWORD PTR [ebx+0x3987705e],edx
  43f76b:	pop    edi
  43f76c:	inc    esp
  43f76d:	push   ebx
  43f76e:	dec    esp
  43f76f:	inc    eax
  43f770:	inc    edx
  43f771:	pop    eax
  43f772:	add    esp,edi
  43f774:	enter  0xe693,0xf4
  43f778:	xchg   edi,esi
  43f77a:	pop    ds
  43f77b:	add    al,0x17
  43f77d:	or     al,0xf
  43f77f:	adc    al,0x7
  43f781:	sbb    al,0x39
  43f783:	and    al,0x49
  43f785:	sub    al,0x52
  43f787:	push   edi
  43f788:	pop    esp
  43f789:	pop    ecx
  43f78a:	and    esp,DWORD PTR es:[eax]
  43f78d:	and    eax,0x30333e50
  43f792:	or     eax,0x11c070a
  43f797:	je     0x43f7a3
  43f799:	pmuludq mm6,mm1
  43f79c:	jp     0x43f805
  43f79e:	ins    BYTE PTR es:[edi],dx
  43f79f:	popa   
  43f7a0:	push   ds
  43f7a1:	pop    edx
  43f7a2:	(bad)  
  43f7a3:	sub    ebp,DWORD PTR [ebp+0x72]
  43f7a6:	ja     0x43f824
  43f7a8:	jns    0x43f7b0
  43f7aa:	inc    esp
  43f7ab:	(bad)  
  43f7ad:	sbb    DWORD PTR [esi],ebx
  43f7af:	adc    edx,DWORD PTR [eax]
  43f7b1:	sub    eax,0x2023682a
  43f7b6:	and    eax,0xd1d42f2a
  43f7bb:	fidivr WORD PTR [edi+eax*8-0x34]
  43f7bf:	rol    esi,0xdf
  43f7c2:	scas   eax,DWORD PTR es:[edi]
  43f7c3:	mov    bh,0xac
  43f7c5:	sub    edi,DWORD PTR [eax]
  43f7c7:	and    eax,DWORD PTR [eax+0x3b]
  43f7ca:	push   edi
  43f7cb:	dec    esp
  43f7cc:	das    
  43f7cd:	adc    al,0x27
  43f7cf:	sbb    al,0x1f
  43f7d1:	and    al,0x77
  43f7d3:	ins    BYTE PTR es:[edi],dx
  43f7d4:	jg     0x43f84a
  43f7d6:	jne    0x43f854
  43f7d8:	pop    ebp
  43f7d9:	cmp    BYTE PTR [eax],al
  43f7db:	add    BYTE PTR [eax],al
  43f7dd:	add    BYTE PTR [eax],al
  43f7df:	add    BYTE PTR [edi],ah
  43f7e1:	sbb    dh,cl
  43f7e3:	dec    eax
  43f7e4:	inc    eax
  43f7e5:	add    eax,DWORD PTR [eax]
  43f7e7:	add    BYTE PTR [eax],al
  43f7e9:	add    BYTE PTR [eax],al
  43f7eb:	add    BYTE PTR [eax+0x3],al
  43f7ee:	add    BYTE PTR [eax],al
  43f7f0:	pop    ebx
  43f7f1:	add    BYTE PTR [esi],ah
  43f7f3:	jl     0x43f7f5
  43f7f5:	add    dh,BYTE PTR [esi]
  43f7f7:	or     BYTE PTR [eax],al
  43f7f9:	add    bl,dl
  43f7fb:	dec    edi
  43f7fc:	add    al,BYTE PTR [ecx+esi*2]
  43f7ff:	or     al,0x71
  43f801:	jbe    0x43f87e
  43f803:	js     0x43f84a
  43f805:	inc    edx
  43f806:	sub    BYTE PTR [ebx+0x58],cl
  43f809:	pop    ebp
  43f80a:	push   edx
  43f80b:	push   edi
  43f80c:	sub    al,0x29
  43f80e:	es dec esp
  43f810:	aas    
  43f811:	and    al,0x29
  43f813:	adc    edx,DWORD PTR cs:[eax]
  43f816:	sbb    eax,0x3601a
  43f81b:	add    eax,0xcd9787fa
  43f820:	rcl    bh,cl
  43f822:	cwde   
  43f823:	fsub   DWORD PTR [ecx+0x6e]
  43f826:	imul   edi,DWORD PTR [eax+0x7d],0x72
  43f82a:	ja     0x43f86c
  43f82c:	or     BYTE PTR ds:0x9041f02,al
  43f832:	push   cs
  43f833:	xor    esp,esp
  43f835:	cmp    al,0x39
  43f837:	and    esp,DWORD PTR es:[eax]
  43f83a:	and    eax,0x8d3efeda
  43f83f:	xchg   ebp,eax
  43f840:	xchg   esp,eax
  43f841:	mov    BYTE PTR [edx+eiz*8-0x5c],ch
  43f845:	test   eax,0xb0b4b4ae
  43f84a:	sbb    bl,al
  43f84c:	les    ecx,FWORD PTR [eax+esi*1-0x2a]
  43f850:	and    DWORD PTR [eax-0x1e],edi
  43f853:	inc    ebp
  43f854:	in     al,dx
  43f855:	addr16 (bad) 
  43f857:	stos   DWORD PTR es:[edi],eax
  43f858:	sti    
  43f859:	jg     0x43f87c
  43f85b:	and    DWORD PTR [ecx+0x715930f],ebp
  43f861:	jl     0x43f8bf
  43f863:	and    eax,0xbeceecab
  43f868:	cmp    BYTE PTR [esi],bh
  43f86a:	ret    
  43f86b:	ins    BYTE PTR es:[edi],dx
  43f86c:	dec    eax
  43f86d:	fist   DWORD PTR [ecx]
  43f86f:	ja     0x43f873
  43f871:	jg     0x43f825
  43f873:	les    edi,FWORD PTR [edi+eax*8-0xb]
  43f877:	xchg   bh,bh
  43f879:	add    esp,0xc
  43f87c:	(bad)  
  43f87d:	and    eax,0xe18b3c81
  43f882:	and    BYTE PTR [ebx+0x77a3301a],ch
  43f888:	push   ds
  43f889:	and    al,0xc4
  43f88b:	push   0xffffffd6
  43f88d:	shl    BYTE PTR [ecx],1
  43f88f:	jp     0x43f8c5
  43f891:	inc    edx
  43f892:	mov    edi,0x8adf7ba1
  43f897:	pop    ecx
  43f898:	jle    0x43f89e
  43f89a:	push   ebp
  43f89b:	or     eax,0x18ce10cc
  43f8a0:	(bad)  
  43f8a1:	jle    0x43f82b
  43f8a3:	lods   al,BYTE PTR ds:[esi]
  43f8a4:	out    dx,eax
  43f8a5:	outs   dx,BYTE PTR ds:[esi]
  43f8a6:	shl    BYTE PTR [esi-0x3e],cl
  43f8a9:	test   BYTE PTR [edi],0xc7
  43f8ac:	add    ecx,DWORD PTR [esi+eax*1]
  43f8af:	cmp    al,0x19
  43f8b1:	in     al,0xe0
  43f8b3:	in     al,dx
  43f8b4:	ror    DWORD PTR [edx-0x4010d45],0xf7
  43f8bb:	repz xchg edx,eax
  43f8bd:	push   edi
  43f8be:	fcomp  DWORD PTR ds:0x2c68dd74
  43f8c4:	pusha  
  43f8c5:	hlt    
  43f8c6:	cmp    BYTE PTR [esi-0x6733f7f4],dl
  43f8cc:	adc    al,0xd8
  43f8ce:	cwde   
  43f8cf:	and    ah,ah
  43f8d1:	test   al,0x2c
  43f8d3:	lock pop esi
  43f8d5:	les    edi,FWORD PTR [eax+eax*1]
  43f8d8:	xor    al,cl
  43f8da:	or     al,0x3c
  43f8dc:	aam    0x18
  43f8de:	cmp    al,ah
  43f8e0:	and    al,0x2
  43f8e2:	xor    al,0xf0
  43f8e4:	xor    al,0x34
  43f8e6:	cld    
  43f8e7:	inc    eax
  43f8e8:	inc    eax
  43f8e9:	mov    BYTE PTR [eax+ebp*4-0x54],cl
  43f8ed:	lock sbb al,0x60
  43f8f0:	nop
  43f8f1:	test   al,0xf0
  43f8f3:	add    al,0x38
  43f8f5:	cld    
  43f8f6:	in     al,dx
  43f8f7:	les    ecx,FWORD PTR [eax]
  43f8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f8fa:	clc    
  43f8fb:	aam    0x18
  43f8fd:	clc    
  43f8fe:	loopne 0x43f924
  43f900:	enter  0x30ec,0xe8
  43f904:	clc    
  43f905:	cmp    al,0xea
  43f907:	pushf  
  43f908:	mov    BYTE PTR [esp+eax*4-0x6c],cl
  43f90c:	pop    eax
  43f90d:	mov    WORD PTR [eax+0x70aca464],fs
  43f913:	fidiv  WORD PTR [eax+0x484480bc]
  43f919:	mov    WORD PTR [esp+edx*2],fs
  43f91c:	sbb    al,0x8c
  43f91e:	in     al,0x28
  43f920:	xchg   BYTE PTR [eax+esi*8+0x4480a033],dl
  43f927:	fmul   QWORD PTR [eax+edx*2-0x35a36728]
  43f92e:	in     al,0xa8
  43f930:	ins    BYTE PTR es:[edi],dx
  43f931:	or     BYTE PTR [eax+edi*2-0x177bbff0],dh
  43f938:	dec    esp
  43f939:	nop
  43f93a:	les    ebx,FWORD PTR ds:[eax+eiz*4-0x4]
  43f93f:	push   0xb874fcac
  43f944:	test   BYTE PTR [eax+ecx*2+0x58947cce],al
  43f94b:	push   ebp
  43f94c:	fs fs push 0xd247b46d
  43f953:	pop    eax
  43f954:	inc    eax
  43f955:	xchg   DWORD PTR [esp+ecx*2-0x63a77f70],edx
  43f95c:	lods   al,BYTE PTR ds:[esi]
  43f95d:	fs test al,0x1e
  43f960:	mov    ah,0x74
  43f962:	mov    eax,0xed043740
  43f967:	or     al,0xd0
  43f969:	xor    BYTE PTR [eax],bl
  43f96b:	fmul   QWORD PTR [edx+0x30]
  43f96e:	lods   al,BYTE PTR ds:[esi]
  43f96f:	jo     0x43f921
  43f971:	mov    eax,0x8844307c
  43f976:	adc    BYTE PTR [eax-0x6c],dl
  43f979:	xor    dl,BYTE PTR [eax]
  43f97b:	pusha  
  43f97c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f97d:	shr    BYTE PTR [eax+esi*4-0x3c],1
  43f981:	js     0x43f93f
  43f983:	test   al,0x4
  43f985:	enter  0xb066,0x14
  43f989:	fadd   DWORD PTR [eax+eiz*1-0xfd3471c]
  43f990:	mov    esp,0x44aafc38
  43f995:	enter  0x280c,0x58
  43f999:	pushf  
  43f99a:	nop
  43f99b:	fs test al,0x84
  43f99e:	jo     0x43f954
  43f9a0:	adc    bl,BYTE PTR [eax+eax*1-0x2ff32f3c]
  43f9a7:	fcomp  QWORD PTR [ecx]
  43f9a9:	enter  0x2416,0xd0
  43f9ad:	inc    ecx
  43f9ae:	xor    ah,dh
  43f9b0:	and    al,0x3c
  43f9b2:	add    ch,al
  43f9b4:	add    ebx,esp
  43f9b6:	rcl    BYTE PTR ds:0x8e20dcdc,1
  43f9bc:	pushf  
  43f9bd:	in     al,dx
  43f9be:	xor    BYTE PTR [eax+edi*8-0x33f7ab40],dl
  43f9c5:	lods   al,BYTE PTR ds:[esi]
  43f9c6:	adc    al,0xd8
  43f9c8:	jbe    0x43f952
  43f9ca:	and    al,0xe8
  43f9cc:	mov    WORD PTR [eax],?
  43f9ce:	hlt    
  43f9cf:	mov    al,ds:0xc840003c
  43f9d4:	or     al,0xea
  43f9d6:	or     al,bl
  43f9d8:	sbb    al,0x28
  43f9da:	in     al,0x28
  43f9dc:	sub    eax,0x315f130
  43f9e1:	inc    eax
  43f9e2:	dec    edi
  43f9e3:	dec    eax
  43f9e4:	xor    al,0x64
  43f9e6:	mov    eax,ds:0xe063a31a
  43f9eb:	in     al,dx
  43f9ec:	adc    eax,esp
  43f9ee:	xchg   ebp,eax
  43f9ef:	jmp    0x6c36005c
  43f9f4:	adc    al,0xcc
  43f9f6:	sbb    eax,0x2244205d
  43f9fb:	lods   al,BYTE PTR ds:[esi]
  43f9fc:	jno    0x43fa32
  43f9fe:	fdiv   DWORD PTR [edi]
  43fa00:	add    DWORD PTR [eax+esi*2+0x2c],eax
  43fa04:	push   edi
  43fa05:	and    al,0xf8
  43fa07:	stos   BYTE PTR es:[edi],al
  43fa08:	and    ah,BYTE PTR [eax+ebp*1+0x25]
  43fa0c:	jb     0x43fa82
  43fa0e:	popf   
  43fa0f:	jnp    0x43f9a7
  43fa11:	mov    ecx,0x7c168ce8
  43fa16:	sbb    al,0xe0
  43fa18:	jl     0x43f9e4
  43fa1a:	sub    al,0x70
  43fa1c:	add    edi,DWORD PTR [eax]
  43fa1e:	and    al,0x13
  43fa20:	and    al,0x48
  43fa22:	mov    WORD PTR [esp+edx*2],es
  43fa25:	push   ebp
  43fa26:	cmp    al,0x60
  43fa28:	bound  ecx,QWORD PTR [eax]
  43fa2a:	ins    BYTE PTR es:[edi],dx
  43fa2b:	jns    0x43f9ce
  43fa2d:	sbb    BYTE PTR [edi+eax*4-0x1c],bh
  43fa31:	mov    BYTE PTR [eax+0x789094f0],al
  43fa37:	mov    al,ds:0x5159aac5
  43fa3c:	mov    ah,0x36
  43fa3e:	and    al,0x47
  43fa40:	inc    ebx
  43fa41:	and    al,0x53
  43fa43:	mov    ch,0x52
  43fa45:	cmp    eax,0xc6688567
  43fa4a:	jg     0x43f9dc
  43fa4c:	jb     0x43faba
  43fa4e:	in     al,0x86
  43fa50:	cdq    
  43fa51:	in     al,dx
  43fa52:	nop
  43fa53:	xchg   ah,bh
  43fa55:	pushf  
  43fa56:	ja     0x43fa9d
  43fa58:	stos   BYTE PTR es:[edi],al
  43fa59:	dec    ebp
  43fa5a:	enter  0xba55,0x89
  43fa5e:	and    al,0xc5
  43fa60:	mov    DWORD PTR [eax],ebp
  43fa62:	shl    DWORD PTR [ebp+0x69858986],1
  43fa68:	cmp    al,0x14
  43fa6a:	jb     0x43fa96
  43fa6c:	cwde   
  43fa6d:	adc    bh,0x6c
  43fa70:	mov    edi,es
  43fa72:	inc    ecx
  43fa73:	jl     0x43fa0c
  43fa75:	stc    
  43fa76:	shl    BYTE PTR [edi-0x2a49ab40],0xdc
  43fa7d:	shl    BYTE PTR [ebp-0x4b5fd941],0xd8
  43fa84:	rol    BYTE PTR [eax-0x1a77651c],0x15
  43fa8b:	loopne 0x43faaa
  43fa8d:	add    eax,0x82f488ae
  43fa92:	sbb    DWORD PTR [eax-0x60],edi
  43fa95:	es dec esp
  43fa97:	scas   eax,DWORD PTR es:[edi]
  43fa98:	xor    edx,DWORD PTR [eax-0x45]
  43fa9b:	push   ss
  43fa9c:	inc    esp
  43fa9d:	and    al,al
  43fa9f:	pop    ebp
  43faa0:	mov    al,0xd4
  43faa2:	icebp  
  43faa3:	mov    esp,0xed0c7ae0
  43faa8:	pop    edx
  43faa9:	push   ebp
  43faaa:	sbb    al,0xed
  43faac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43faad:	loopne 0x43fab4
  43faaf:	stos   DWORD PTR es:[edi],eax
  43fab0:	hlt    
  43fab1:	push   ss
  43fab2:	scas   eax,DWORD PTR es:[edi]
  43fab3:	clc    
  43fab4:	xor    ecx,esi
  43fab6:	out    0xc8,al
  43fab8:	xor    ebp,DWORD PTR [edi+0x58]
  43fabb:	ret    
  43fabc:	fmul   QWORD PTR [eax-0x12]
  43fabf:	mov    cl,0xf5
  43fac1:	mov    ebp,0xef3834fa
  43fac6:	int    0xeb
  43fac8:	hlt    
  43fac9:	call   0x1013:0x70580cc
  43fad0:	jmp    0x43fae0
  43fad2:	sbb    al,0xc5
  43fad4:	sbb    al,ch
  43fad6:	adc    ecx,edi
  43fad8:	ss ret 
  43fada:	aas    
  43fadb:	mov    edi,0x4f4fb741
  43fae0:	push   esp
  43fae1:	ud0    esp,esp
  43fae4:	imul   esp
  43fae6:	out    0xf4,eax
  43fae8:	(bad)  
  43fae9:	cwde   
  43faea:	add    BYTE PTR [eax+ebp*2+0x6d],ah
  43faee:	jl     0x43fb30
  43faf0:	pop    ds
  43faf1:	pop    edi
  43faf2:	pop    esi
  43faf3:	and    al,0x57
  43faf5:	sub    BYTE PTR [eax],dh
  43faf7:	push   eax
  43faf8:	fdivr  DWORD PTR [ecx]
  43fafa:	xor    BYTE PTR [ebx+0x54254da8],ch
  43fb00:	cmp    DWORD PTR [edi],esi
  43fb02:	add    DWORD PTR [esi],ecx
  43fb04:	mov    dl,0x8c
  43fb06:	dec    eax
  43fb07:	xchg   ebp,eax
  43fb08:	gs sbb eax,0x10ed7d8c
  43fb0e:	shl    cl,1
  43fb10:	jl     0x43fabe
  43fb12:	pop    ebx
  43fb13:	sub    dl,cl
  43fb15:	and    eax,DWORD PTR ds:0xd440351a
  43fb1b:	push   0xa14dc349
  43fb20:	pop    esp
  43fb21:	inc    esp
  43fb22:	test   BYTE PTR [ebx],dl
  43fb24:	push   edx
  43fb25:	jo     0x43fb9b
  43fb27:	js     0x43fb10
  43fb29:	xor    eax,DWORD PTR [eax]
  43fb2b:	add    BYTE PTR [eax],al
  43fb2d:	add    BYTE PTR [eax],al
  43fb2f:	add    BYTE PTR [edx*1+0x7003f95],dl
  43fb36:	add    BYTE PTR [eax],al
  43fb38:	add    BYTE PTR [eax],al
  43fb3a:	add    BYTE PTR [eax],al
  43fb3c:	add    BYTE PTR [edi],al
  43fb3e:	add    BYTE PTR [eax],al
  43fb40:	pop    esp
  43fb41:	add    BYTE PTR [esi],ah
  43fb43:	jl     0x43fb45
  43fb45:	add    dh,BYTE PTR [esi]
  43fb47:	or     BYTE PTR [eax],al
  43fb49:	add    BYTE PTR [ebx],dl
  43fb4b:	dec    edx
  43fb4c:	mov    al,BYTE PTR [edx+ebx*8]
  43fb4f:	or     al,0x14
  43fb51:	push   ss
  43fb52:	sbb    eax,0x283c201d
  43fb57:	sub    DWORD PTR [ebp+0x34],esp
  43fb5a:	cmp    edi,DWORD PTR [ebp+ecx*2+0x554c4953]
  43fb61:	fs dec eax
  43fb63:	dec    ebx
  43fb64:	imul   esp,DWORD PTR [ecx+0x68],0x7cf43868
  43fb6b:	and    al,0xe0
  43fb6d:	xchg   DWORD PTR [eax-0x756b6a2a],ecx
  43fb73:	js     0x43fb9c
  43fb75:	and    al,0x2c
  43fb77:	or     al,0x55
  43fb79:	dec    ebx
  43fb7a:	dec    edi
  43fb7b:	inc    eax
  43fb7c:	and    DWORD PTR ds:0x782d3c2e,esp
  43fb82:	and    al,0xd
  43fb84:	fs add al,0x2
  43fb87:	add    ecx,DWORD PTR [ecx+0x5a]
  43fb8a:	or     edx,esi
  43fb8c:	jmp    0xf9f0:0xf7e3b688
  43fb93:	int    0xc5
  43fb95:	fld    TBYTE PTR [ebp+ebx*4-0x4d202e27]
  43fb9c:	stos   DWORD PTR es:[edi],eax
  43fb9d:	aas    
  43fb9e:	aas    
  43fb9f:	push   esp
  43fba0:	sub    BYTE PTR ds:[ebp+0x7],cl
  43fba4:	pop    es
  43fba5:	add    DWORD PTR [edx+0x15],ecx
  43fba8:	js     0x43fbb9
  43fbaa:	in     eax,dx
  43fbab:	stos   BYTE PTR es:[edi],al
  43fbac:	(bad)  
  43fbad:	mov    ebp,0x9cf5b4b2
  43fbb2:	ror    edx,0xc1
  43fbb5:	retf   0xc7d5
  43fbb8:	int3   
  43fbb9:	jmp    0xbbb9:0xbfbaa1c0
  43fbc0:	mov    dh,0xe1
  43fbc2:	ret    0xd9e4
  43fbc5:	ret    0x5a44
  43fbc8:	inc    edx
  43fbc9:	lea    ecx,[esi-0x574f7358]
  43fbcf:	in     al,dx
  43fbd0:	out    dx,al
  43fbd1:	aad    0xd7
  43fbd3:	fsubr  st(5),st
  43fbd5:	fcomp  st(2)
  43fbd7:	(bad)  
  43fbd9:	fs loop 0x43fbd7
  43fbdc:	dec    edi
  43fbdd:	retf   
  43fbde:	push   esp
  43fbdf:	les    ebp,FWORD PTR [edi-0x66747ea0]
  43fbe5:	sbb    BYTE PTR [ebp+0x384858c],0x29
  43fbec:	mov    WORD PTR [eax],ds
  43fbee:	data16 jge 0x43fbc2
  43fbf1:	shr    DWORD PTR [eax],1
  43fbf3:	sahf   
  43fbf4:	aad    0xd0
  43fbf6:	mov    eax,0xbeadb2ec
  43fbfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fbfc:	mov    esp,0x8590bfb1
  43fc01:	xchg   edi,eax
  43fc02:	out    dx,al
  43fc03:	loop   0x43fbfe
  43fc05:	sti    
  43fc06:	mov    ebp,0x7c190084
  43fc0b:	or     eax,0x79545010
  43fc10:	push   esi
  43fc11:	inc    ecx
  43fc12:	inc    esp
  43fc13:	or     al,0x5c
  43fc15:	xor    eax,0xea7d3eb9
  43fc1a:	lods   eax,DWORD PTR ds:[esi]
  43fc1b:	mov    ds:0xe0aab69d,eax
  43fc20:	mov    eax,DWORD PTR [ebx-0x27297d77]
  43fc26:	mov    DWORD PTR [ecx+0x24],ebp
  43fc29:	dec    ecx
  43fc2a:	outs   dx,DWORD PTR ds:[esi]
  43fc2b:	jae    0x43fc9e
  43fc2d:	imul   ebx,DWORD PTR [ebx+eax*1+0x42],0x49
  43fc32:	lods   al,BYTE PTR ds:[esi]
  43fc33:	pop    esp
  43fc34:	inc    edi
  43fc35:	pop    ebp
  43fc36:	push   ds
  43fc37:	jle    0x43fcb1
  43fc39:	addr16 pop eax
  43fc3b:	pop    edi
  43fc3c:	jae    0x43fc9d
  43fc3e:	inc    ebx
  43fc3f:	daa    
  43fc40:	ins    BYTE PTR es:[edi],dx
  43fc41:	es out dx,eax
  43fc43:	enter  0x36d7,0x2a
  43fc47:	cmp    BYTE PTR [edi],ah
  43fc49:	pop    ds
  43fc4a:	push   ss
  43fc4b:	sub    eax,ebx
  43fc4d:	pop    ds
  43fc4e:	sbb    al,0xb
  43fc50:	in     eax,dx
  43fc51:	jg     0x43fc61
  43fc53:	fs jns 0x43fc92
  43fc56:	adc    BYTE PTR ds:0x1a19080c,al
  43fc5c:	pop    ds
  43fc5d:	add    al,0x66
  43fc5f:	cmp    al,0x6c
  43fc61:	outs   dx,BYTE PTR ds:[esi]
  43fc62:	mov    DWORD PTR [edi+0x78],esi
  43fc65:	ins    BYTE PTR es:[edi],dx
  43fc66:	add    BYTE PTR [eax+ebp*8+0x18f9508d],0x11
  43fc6e:	das    
  43fc6f:	sbb    DWORD PTR [esi],esi
  43fc71:	add    DWORD PTR [eax],edx
  43fc73:	cmp    BYTE PTR ds:0x7d2a750e,cl
  43fc79:	aas    
  43fc7a:	fstp   DWORD PTR gs:[ecx+edx*2-0x11]
  43fc7f:	pop    ecx
  43fc80:	fld    QWORD PTR [ecx+0x61]
  43fc83:	dec    edx
  43fc84:	pop    esi
  43fc85:	xor    BYTE PTR [esi-0x59544147],0xe8
  43fc8c:	scas   al,BYTE PTR es:[edi]
  43fc8d:	or     ah,BYTE PTR [edx+ebx*4-0x75827de5]
  43fc94:	outs   dx,DWORD PTR ds:[esi]
  43fc95:	jbe    0x43fc49
  43fc97:	dec    esp
  43fc98:	(bad)  
  43fc99:	imul   BYTE PTR [ebx-0xd]
  43fc9c:	push   ebx
  43fc9d:	ficomp DWORD PTR [ebx-0x5c]
  43fca0:	jo     0x43fce9
  43fca2:	test   DWORD PTR [edi-0x6c],ecx
  43fca5:	mov    al,0xa9
  43fca7:	mov    eax,0xa1ac94a3
  43fcac:	xchg   esp,eax
  43fcad:	fcomp  QWORD PTR [ecx+ebp*1-0x7747dc7c]
  43fcb4:	pop    esi
  43fcb5:	lock or eax,0xf5e1f6f8
  43fcbb:	(bad)  
  43fcbd:	fcomp  DWORD PTR [ecx+0x36]
  43fcc0:	inc    ecx
  43fcc1:	sbb    cl,BYTE PTR [ecx-0x17]
  43fcc4:	test   BYTE PTR [ebp-0x52e95a0c],bh
  43fcca:	add    BYTE PTR [ebp+0x299a807],dl
  43fcd0:	add    DWORD PTR [ecx+ecx*4],0xcc15f113
  43fcd7:	in     eax,0x38
  43fcd9:	in     eax,dx
  43fcda:	sub    dl,ch
  43fcdc:	pop    es
  43fcdd:	ficomp WORD PTR [edi]
  43fcdf:	lock ret 0xca07
  43fce3:	or     DWORD PTR [ebx],esi
  43fce5:	sub    edi,DWORD PTR [ebx]
  43fce7:	and    BYTE PTR [eax-0x186c6055],bl
  43fced:	fwait
  43fcee:	aad    0x83
  43fcf0:	int3   
  43fcf1:	mov    esp,0x47ff45f7
  43fcf6:	out    0x4a,eax
  43fcf8:	out    dx,eax
  43fcf9:	jns    0x43fcdb
  43fcfb:	rcr    DWORD PTR [esi-0x25],cl
  43fcfe:	xor    bl,al
  43fd00:	push   ss
  43fd01:	retf   
  43fd02:	sti    
  43fd03:	add    al,0x3f
  43fd05:	add    ch,BYTE PTR [eax]
  43fd07:	or     al,0x20
  43fd09:	cmp    ebx,DWORD PTR [eax]
  43fd0b:	or     ch,BYTE PTR [eax]
  43fd0d:	adc    al,0xb
  43fd0f:	or     al,0x7e
  43fd11:	clc    
  43fd12:	xchg   ecx,eax
  43fd13:	lock scas al,BYTE PTR es:[edi]
  43fd15:	shr    ah,1
  43fd17:	stos   BYTE PTR es:[edi],al
  43fd18:	in     al,0x9d
  43fd1a:	fmul   QWORD PTR [ecx-0x2c]
  43fd1d:	pop    eax
  43fd1e:	hlt    
  43fd1f:	ror    BYTE PTR [esi+0x38],0xb9
  43fd23:	xor    ah,bl
  43fd25:	sub    bl,cl
  43fd27:	sbb    BYTE PTR [ebx+ecx*8],ah
  43fd2a:	sbb    al,0xdd
  43fd2c:	adc    al,0x3d
  43fd2e:	or     eax,0x62793c22
  43fd33:	jno    0x43fdb1
  43fd35:	imul   edx,DWORD PTR [ecx],0xd1600e61
  43fd3b:	(bad)  
  43fd3c:	leave  
  43fd3d:	lahf   
  43fd3e:	ror    DWORD PTR [ecx+0x35088139],0x86
  43fd45:	sub    eax,0x1de92587
  43fd4a:	clc    
  43fd4b:	sub    al,0x9
  43fd4d:	jmp    0x64bdd353
  43fd52:	jb     0x43fdba
  43fd54:	push   eax
  43fd55:	outs   dx,BYTE PTR ds:[esi]
  43fd56:	outs   dx,DWORD PTR ds:[esi]
  43fd57:	data16 and bl,BYTE PTR [esi+0x1f]
  43fd5b:	push   esi
  43fd5c:	icebp  
  43fd5d:	je     0x43fda1
  43fd5f:	in     eax,dx
  43fd60:	mov    edx,0x2e41b218
  43fd65:	int3   
  43fd66:	sbb    al,0x1a
  43fd68:	rcl    BYTE PTR [edx],0xc2
  43fd6b:	or     ah,bh
  43fd6d:	add    ebx,edi
  43fd6f:	sar    BYTE PTR [edi-0x59],0x77
  43fd73:	test   eax,0x20604c6f
  43fd78:	xor    ebp,DWORD PTR [eax+0x50]
  43fd7b:	dec    esp
  43fd7c:	dec    eax
  43fd7d:	xor    al,0x40
  43fd7f:	jmp    0xacd0f93c
  43fd84:	adc    al,0xa4
  43fd86:	ds pushf 
  43fd88:	or     eax,0x88b01a94
  43fd8d:	std    
  43fd8e:	jl     0x43fd44
  43fd90:	je     0x43fdde
  43fd92:	ins    DWORD PTR es:[edi],dx
  43fd93:	pop    ecx
  43fd94:	pop    eax
  43fd95:	popa   
  43fd96:	ja     0x43fdf1
  43fd98:	inc    edi
  43fd99:	push   ecx
  43fd9a:	dec    ebx
  43fd9b:	dec    ecx
  43fd9c:	cmp    eax,0xb5d6bd7c
  43fda1:	jmp    0xe0e9f653
  43fda6:	mov    al,ds:0x23912199
  43fdab:	mov    DWORD PTR [edi],edx
  43fdad:	cmp    DWORD PTR [edi-0x3c],0x31ed1cf5
  43fdb4:	in     eax,0x28
  43fdb6:	pop    ecx
  43fdb7:	imul   ebp,DWORD PTR [esi+ecx*2+0x7f],0xa9be5a46
  43fdbf:	mov    dh,0xb1
  43fdc1:	nop
  43fdc2:	stos   BYTE PTR es:[edi],al
  43fdc3:	fbld   TBYTE PTR [edx-0x6d3f6502]
  43fdc9:	enter  0x86b4,0x3f
  43fdcd:	(bad)  
  43fdce:	pop    eax
  43fdcf:	imul   BYTE PTR [edi-0x12]
  43fdd2:	pusha  
  43fdd3:	fsub   st,st(2)
  43fdd5:	pop    esi
  43fdd6:	fidiv  DWORD PTR [edi]
  43fdd8:	ror    BYTE PTR [eax],cl
  43fdda:	retf   0xfcf6
  43fddd:	aas    
  43fdde:	and    BYTE PTR [edi],dh
  43fde0:	into   
  43fde1:	stos   DWORD PTR es:[edi],eax
  43fde2:	out    dx,al
  43fde3:	mov    ds:0x897a42d,eax
  43fde8:	(bad)  
  43fde9:	push   esi
  43fdea:	xchg   DWORD PTR [edi+edi*8-0x3c],eax
  43fdee:	fsubr  st,st(4)
  43fdf0:	rcl    ah,1
  43fdf2:	lock cmp al,0x81
  43fdf5:	cmc    
  43fdf6:	fmul   st,st(3)
  43fdf8:	lock les esp,FWORD PTR [ebp-0x7fcb9234]
  43fdff:	cmp    al,0x8c
  43fe01:	adc    al,0x28
  43fe03:	push   edi
  43fe04:	adc    DWORD PTR [edx+0x19],edi
  43fe07:	inc    ecx
  43fe08:	add    DWORD PTR [eax],edi
  43fe0a:	mov    esp,0x62f952f1
  43fe0f:	loope  0x43fe7a
  43fe11:	jmp    0x3b19de2a
  43fe16:	fstp   QWORD PTR [edx]
  43fe18:	(bad)  
  43fe1b:	add    BYTE PTR [eax],al
  43fe1d:	or     BYTE PTR [eax],ch
  43fe1f:	lock adc BYTE PTR [edx],dl
  43fe22:	cs fs sbb eax,0x4c092c62
  43fe29:	add    al,BYTE PTR [edx+0x7a]
  43fe2c:	jmp    0x43fea1
  43fe2e:	stc    
  43fe2f:	push   eax
  43fe30:	outs   dx,DWORD PTR ds:[esi]
  43fe31:	mov    esi,0xf1d408dc
  43fe36:	into   
  43fe37:	xlat   BYTE PTR ds:[ebx]
  43fe38:	fadd   st,st(2)
  43fe3a:	push   ecx
  43fe3b:	cmp    ebx,DWORD PTR [edi+0x33]
  43fe3e:	nop
  43fe3f:	pop    ss
  43fe40:	dec    eax
  43fe41:	sbb    al,0x24
  43fe43:	and    al,0x44
  43fe45:	dec    esp
  43fe46:	add    eax,0x70b708b1
  43fe4b:	std    
  43fe4c:	dec    eax
  43fe4d:	jge    0x43fe3e
  43fe4f:	mov    WORD PTR gs:[ecx-0x45],gs
  43fe53:	push   ecx
  43fe54:	xchg   DWORD PTR [ebp+eax*2-0x74],ebp
  43fe58:	dec    ebp
  43fe59:	jbe    0x43fe11
  43fe5b:	xchg   edi,eax
  43fe5c:	cmp    bh,BYTE PTR [edi]
  43fe5e:	adc    al,0x2e
  43fe60:	pop    edx
  43fe61:	push   ss
  43fe62:	inc    ecx
  43fe63:	push   ds
  43fe64:	inc    ecx
  43fe65:	push   es
  43fe66:	dec    ebx
  43fe67:	cmp    BYTE PTR [edx],cl
  43fe69:	enter  0xea72,0x7a
  43fe6d:	jmp    0x56a0a1d4
  43fe72:	popa   
  43fe73:	pop    edi
  43fe74:	js     0x43febd
  43fe76:	push   esi
  43fe77:	dec    edi
  43fe78:	inc    esp
  43fe79:	xor    BYTE PTR [ebx-0x5c384437],0xf9
  43fe80:	stos   DWORD PTR es:[edi],eax
  43fe81:	pop    es
  43fe82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fe83:	lahf   
  43fe84:	sbb    al,0x3
  43fe86:	or     BYTE PTR [ebx],0x84
  43fe89:	jae    0x43fe24
  43fe8b:	dec    esp
  43fe8c:	mov    DWORD PTR [bx-0x46],ebp
  43fe90:	push   edi
  43fe91:	popf   
  43fe92:	pop    edi
  43fe93:	outs   dx,DWORD PTR ds:[esi]
  43fe94:	jo     0x43fee2
  43fe96:	ins    DWORD PTR es:[edi],dx
  43fe97:	inc    esp
  43fe98:	sar    BYTE PTR [ebx+eiz*8-0x476afb4c],0xb7
  43fea0:	sbb    bl,BYTE PTR [esp+eiz*2+0x4a8c6594]
  43fea7:	mov    esp,0xc9f038f8
  43feac:	jmp    0x649e648c
  43feb1:	push   ecx
  43feb2:	xor    cl,BYTE PTR [ecx+0x19]
  43feb5:	inc    ecx
  43feb6:	mov    ebp,0xb5884fb9
  43febb:	xchg   ebx,eax
  43febc:	scas   al,BYTE PTR es:[edi]
  43febd:	mov    al,0xa6
  43febf:	(bad)  
  43fec0:	sahf   
  43fec1:	popf   
  43fec2:	lods   al,BYTE PTR ds:[esi]
  43fec3:	mov    cl,BYTE PTR [edi-0x7d05037e]
  43fec9:	repnz fwait
  43fecb:	nop
  43fecc:	out    dx,al
  43fecd:	mov    eax,0x85de87e6
  43fed2:	dec    esp
  43fed3:	fimul  DWORD PTR [edx-0x4d7b3908]
  43fed9:	pop    ss
  43feda:	stos   BYTE PTR es:[edi],al
  43fedb:	mov    ss:0x69ea034,al
  43fee1:	xchg   esi,eax
  43fee2:	add    ecx,DWORD PTR [esi-0x3bf879ff]
  43fee8:	repnz sbb al,0xea
  43feeb:	add    esp,edx
  43feed:	add    edx,ebx
  43feef:	or     al,0xe8
  43fef1:	(bad)  
  43fef2:	pop    ds
  43fef3:	into   
  43fef4:	or     eax,0x283f19c6
  43fef9:	or     al,0x2b
  43fefb:	xor    ah,BYTE PTR [ebx]
  43fefd:	xor    BYTE PTR [ebx],bl
  43feff:	adc    eax,0x83b48713
  43ff04:	cmp    bl,0x96
  43ff07:	pause  
  43ff09:	jmp    0x43fec9
  43ff0b:	fsub   st,st(7)
  43ff0d:	xchg   edx,eax
  43ff0e:	fist   WORD PTR [ecx+0x74cf8fd7]
  43ff14:	cld    
  43ff15:	cmp    edx,DWORD PTR [edi-0x41d46acd]
  43ff1b:	and    ebp,DWORD PTR [eax+eiz*1-0x8e869e1]
  43ff22:	pmaddwd mm0,QWORD PTR [edi]
  43ff25:	lods   al,BYTE PTR ds:[esi]
  43ff26:	inc    eax
  43ff27:	jae    0x43fee8
  43ff29:	lock jmp 0xd524da52
  43ff2f:	out    0xf0,al
  43ff31:	enter  0xc0f7,0x47
  43ff35:	cmp    BYTE PTR [edx+0x30],dl
  43ff38:	jb     0x43ff8a
  43ff3a:	and    al,0x71
  43ff3c:	add    dl,BYTE PTR [esi]
  43ff3e:	mov    ds:0xa94a110,eax
  43ff43:	xchg   esp,eax
  43ff44:	inc    eax
  43ff45:	js     0x43ff39
  43ff47:	jo     0x43fed9
  43ff49:	push   0x64816082
  43ff4e:	push   esp
  43ff4f:	mov    ecx,DWORD PTR [ecx+ebx*4+0x44]
  43ff53:	mov    ?,WORD PTR [eax]
  43ff55:	lock or al,0x2c
  43ff58:	jmp    0x32611881
  43ff5d:	adc    eax,0x7609306c
  43ff62:	add    DWORD PTR [esi],edx
  43ff64:	jns    0x43ff7b
  43ff66:	jno    0x43ff9b
  43ff68:	adc    al,0x65
  43ff6a:	sub    al,0x5d
  43ff6c:	adc    edx,DWORD PTR [ebp+0x11]
  43ff6f:	push   eax
  43ff70:	inc    eax
  43ff71:	out    dx,eax
  43ff72:	jl     0x43ff31
  43ff74:	and    eax,0x24ad26b5
  43ff79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ff7a:	push   esi
  43ff7b:	mov    al,ds:0xe30dfd99
  43ff80:	add    eax,0x48a67de1
  43ff85:	jno    0x43ff3f
  43ff87:	imul   esi,DWORD PTR [ebp+0x6e599561],0x465b4e6c
  43ff91:	dec    edx
  43ff92:	mov    esi,0x90ddb6b8
  43ff97:	stos   BYTE PTR es:[edi],al
  43ff98:	ret    
  43ff99:	mov    ds:0x92c19ac2,al
  43ff9e:	fbstp  TBYTE PTR [esi+eax*4-0x9aa01ca]
  43ffa5:	pop    ebx
  43ffa6:	push   0xffffffc5
  43ffa8:	pop    esp
  43ffa9:	pop    esi
  43ffaa:	(bad)  
  43ffab:	push   esi
  43ffac:	les    ecx,FWORD PTR [esi-0x27]
  43ffaf:	inc    esi
  43ffb0:	leave  
  43ffb1:	cmp    BYTE PTR [edx-0x55804db2],0x6e
  43ffb8:	mov    ds:0x9a48a55c,al
  43ffbd:	test   al,0x8b
  43ffbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ffc0:	and    ebp,0xfffffffb
  43ffc3:	add    al,0xef
  43ffc6:	cmp    DWORD PTR [eax],0x88c980eb
  43ffcc:	in     al,dx
  43ffcd:	lock aam 0xf9
  43ffd0:	loopne 0x43ff7b
  43ffd2:	xchg   ebp,eax
  43ffd3:	mov    esp,0xadb4a4de
  43ffd8:	xchg   edx,eax
  43ffd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ffda:	cdq    
  43ffdb:	xchg   edx,eax
  43ffdc:	and    edi,0xb5f1e189
  43ffe2:	enter  0xabfd,0xe5
  43ffe6:	dec    edi
  43ffe7:	in     eax,dx
  43ffe8:	sbb    ebp,edx
  43ffea:	lods   al,BYTE PTR ds:[esi]
  43ffeb:	in     al,dx
  43ffec:	ret    0xcbd1
  43ffef:	test   BYTE PTR [ebx],dh
  43fff1:	sar    DWORD PTR [ebx],0xc1
  43fff4:	adc    BYTE PTR [edi],ah
  43fff6:	out    dx,al
  43fff7:	das    
  43fff8:	es pushf 
  43fffa:	mov    ecx,0x88b83f84
  43ffff:	hlt    
  440000:	icebp  
  440001:	es stc 
  440003:	daa    
  440004:	loope  0x43ffd9
  440006:	(bad)  
  440008:	into   
  440009:	fimul  WORD PTR [ebx+0x30ce6fc6]
  44000f:	add    BYTE PTR [edx],dh
  440011:	in     eax,0x3a
  440013:	or     eax,0x752b2c23
  440018:	and    al,0x1f
  44001a:	push   esp
  44001b:	pop    es
  44001c:	mov    al,ds:0x8277a70f
  440021:	dec    eax
  440022:	out    0x26,eax
  440024:	out    dx,eax
  440025:	(bad)
  440028:	ror    BYTE PTR [eax+0x5c6accf4],1
  44002e:	pop    eax
  44002f:	loop   0x440061
  440031:	or     ebp,DWORD PTR [ecx]
  440033:	aas    
  440034:	sbb    BYTE PTR ds:0x15561d1d,ah
  44003a:	lods   eax,DWORD PTR ds:[esi]
  44003b:	or     eax,0xa1793cf7
  440040:	jno    0x4400a6
  440042:	push   0x11
  440044:	bound  esi,QWORD PTR [ebx]
  440046:	pusha  
  440047:	pop    esi
  440048:	jmp    0xfb3a:0x344ed756
  44004f:	or     BYTE PTR [esi],dh
  440051:	add    ch,BYTE PTR [edi]
  440053:	xor    eax,0xb71f4427
  440058:	sub    BYTE PTR [ebx],cl
  44005a:	xchg   BYTE PTR [eax+0x18],bl
  44005d:	inc    esp
  44005e:	js     0x4400b2
  440060:	jo     0x4400d6
  440062:	push   esp
  440063:	fs ins DWORD PTR es:[edi],dx
  440065:	pop    esp
  440066:	push   edx
  440067:	push   esp
  440068:	sub    al,0x4c
  44006a:	and    al,0x68
  44006c:	inc    eax
  44006d:	(bad)  
  44006e:	mov    eax,0xe6b4acd4
  440073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440074:	(bad)  
  440076:	adc    al,0xb5
  440078:	or     al,0xab
  44007a:	add    al,0x99
  44007c:	jl     0x44006d
  44007e:	dec    eax
  44007f:	jo     0x440062
  440081:	push   0x58dd60ef
  440086:	stos   DWORD PTR es:[edi],eax
  440087:	ins    BYTE PTR es:[edi],dx
  440088:	dec    esp
  440089:	mov    ebp,0x51bcb344
  44008e:	mov    ah,0x57
  440090:	shl    DWORD PTR [eax+0x5d9c6fbd],1
  440096:	xchg   esp,eax
  440097:	push   ebx
  440098:	nop
  440099:	xchg   ecx,eax
  44009a:	mov    bl,0xb8
  44009c:	std    
  44009d:	aad    0xec
  44009f:	or     DWORD PTR [ecx+0x65],ecx
  4400a2:	jg     0x440101
  4400a4:	dec    edi
  4400a5:	push   0x40494351
  4400aa:	inc    ecx
  4400ab:	mov    ebp,0xad8ccab9
  4400b0:	shl    DWORD PTR [ebp-0x6a0f622f],cl
  4400b6:	cmc    
  4400b7:	mov    ah,0x89
  4400b9:	out    0x1c,al
  4400bb:	out    0xac,eax
  4400bd:	cmc    
  4400be:	mov    ds:0xe1d8a1ed,al
  4400c3:	fnstenvw [ebx-0x2f]
  4400c7:	pop    esi
  4400c8:	inc    ebp
  4400c9:	(bad)  
  4400ca:	sar    BYTE PTR [ecx-0x56b64ebc],0x47
  4400d1:	cld    
  4400d2:	cld    
  4400d3:	push   edi
  4400d4:	test   al,0x91
  4400d6:	dec    edx
  4400d7:	mov    DWORD PTR [ebx+0x1ffae282],esi
  4400dd:	int3   
  4400de:	out    dx,al
  4400df:	cmp    al,0xe6
  4400e1:	cs fsubrp st(5),st
  4400e4:	xlat   BYTE PTR ds:[ebx]
  4400e5:	loop   0x4400d7
  4400e7:	retf   
  4400e8:	mov    ebx,0x33783b48
  4400ee:	push   0x9bdf2714
  4400f3:	es xchg ebx,eax
  4400f5:	sub    BYTE PTR [ebx+0x72ff3812],cl
  4400fb:	sub    edi,ebp
  4400fd:	mov    al,ds:0x2014d8d4
  440102:	in     al,0xe8
  440104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440105:	rcr    BYTE PTR [eax+ecx*8+0x38b73055],0xc
  44010d:	lock and al,0xf0
  440110:	sub    al,0xcf
  440112:	adc    al,0x23
  440114:	sbb    eax,0xb0092138
  440119:	mov    al,ds:0x3ae17c92
  44011e:	jmp    0xdf1919ff
  440123:	fidiv  WORD PTR [eax+0xce92c6]
  440129:	(bad)  
  44012a:	cmp    cl,BYTE PTR [ecx]
  44012c:	and    eax,DWORD PTR ds:0x2413042b
  440132:	sbb    bl,BYTE PTR [edi]
  440134:	outs   dx,DWORD PTR ds:[esi]
  440135:	pop    es
  440136:	mov    dh,0xf
  440138:	fidiv  WORD PTR [edi+0x40]
  44013b:	mov    WORD PTR [ebx-0x70],fs
  44013e:	mov    eax,0x295059db
  440143:	pop    eax
  440144:	hlt    
  440145:	jmp    0x44010b
  440147:	push   ss
  440148:	cmp    eax,0x2dcc35cb
  44014d:	nop
  44014e:	cli    
  44014f:	sbb    DWORD PTR [ebx],esp
  440151:	or     BYTE PTR [eax+0x47],ah
  440154:	push   cs
  440155:	sti    
  440156:	pushf  
  440157:	xor    al,0x44
  440159:	inc    eax
  44015a:	ja     0x4401cf
  44015c:	outs   dx,DWORD PTR ds:[esi]
  44015d:	jb     0x4401c6
  44015f:	daa    
  440160:	pop    edi
  440161:	dec    eax
  440162:	cmp    eax,0x443144b
  440167:	loopne 0x44012a
  440169:	dec    ecx
  44016a:	mov    bh,0x90
  44016c:	pop    edi
  44016d:	daa    
  44016e:	(bad)  
  44016f:	pop    ds
  440170:	fst    DWORD PTR [edi]
  440172:	sub    cl,BYTE PTR [eax]
  440174:	mov    eax,0x746a7c1f
  440179:	adc    al,0x6c
  44017b:	sar    DWORD PTR [eax+0x43],1
  44017e:	enter  0x54cc,0x8a
  440182:	adc    BYTE PTR [ecx],al
  440184:	jg     0x4401e2
  440186:	ror    eax,0x68
  440189:	call   DWORD PTR [eax-0x62a15aee]
  44018f:	imul   edx,DWORD PTR [ebp+0x54968d4b],0x725837dc
  440199:	dec    esp
  44019a:	hlt    
  44019b:	cmp    eax,0x18c45e3a
  4401a0:	push   edx
  4401a1:	pop    es
  4401a2:	dec    edx
  4401a3:	clc    
  4401a4:	sbb    al,0xbd
  4401a6:	sbb    al,0xe8
  4401a8:	call   DWORD PTR [eax-0x604c59cc]
  4401ae:	stc    
  4401af:	xchg   edi,eax
  4401b0:	enter  0xb68f,0x22
  4401b4:	pushf  
  4401b5:	mov    dl,0x6b
  4401b7:	div    DWORD PTR [edi+ebp*8+0x16]
  4401bb:	out    0xdc,eax
  4401bd:	xor    bl,bl
  4401bf:	xor    al,0x4f
  4401c1:	xchg   edi,eax
  4401c2:	inc    edi
  4401c3:	xchg   esp,eax
  4401c4:	mov    edi,0x60b364d4
  4401c9:	stos   DWORD PTR es:[edi],eax
  4401ca:	mov    ecx,0x9444d846
  4401cf:	ins    BYTE PTR es:[edi],dx
  4401d0:	mov    al,0x84
  4401d2:	jb     0x440160
  4401d4:	sub    al,0xf4
  4401d6:	cmp    bh,ah
  4401d8:	sub    eax,esp
  4401da:	call   0x93bd3b7
  4401df:	ror    esp,1
  4401e1:	lds    ebx,FWORD PTR [edi+0x7739a0fd]
  4401e7:	cmp    eax,0x913aa998
  4401ec:	jae    0x440196
  4401ee:	popf   
  4401ef:	push   ecx
  4401f0:	test   DWORD PTR [edx-0x70091e72],esp
  4401f6:	int3   
  4401f7:	loop   0x44017e
  4401f9:	jmp    0xf061:0xda9ed2ba
  440200:	(bad)  
  440201:	pusha  
  440202:	into   
  440203:	mov    ds:0xde3ebd36,al
  440208:	add    al,0x2a
  44020a:	ret    
  44020b:	adc    al,cl
  44020d:	sbb    BYTE PTR [ebp+0x37],bh
  440210:	pop    es
  440211:	xor    eax,0xffeef7c0
  440216:	call   0xba339702
  44021b:	in     al,0xdb
  44021d:	call   0xc733:0x71cb70c3
  440224:	or     BYTE PTR [edi],bh
  440226:	in     eax,0x27
  440228:	pop    ds
  440229:	sub    BYTE PTR [ecx],dh
  44022b:	adc    BYTE PTR [eax],cl
  44022d:	sub    al,0x4
  44022f:	sbb    DWORD PTR [edx+edi*2],ecx
  440232:	je     0x440244
  440234:	jl     0x440247
  440236:	push   eax
  440237:	pusha  
  440238:	xor    DWORD PTR [ecx],0x0
  44023e:	add    BYTE PTR [eax],al
  440240:	cmp    edx,DWORD PTR ds:0x8b2400a
  440246:	add    BYTE PTR [eax],al
  440248:	add    BYTE PTR [eax],al
  44024a:	add    BYTE PTR [eax],al
  44024c:	mov    dl,0x8
  44024e:	add    BYTE PTR [eax],al
  440250:	pop    ebp
  440251:	add    BYTE PTR [esi],ah
  440253:	jl     0x440255
  440255:	add    dh,BYTE PTR [esi]
  440257:	or     BYTE PTR [eax],al
  440259:	add    BYTE PTR [ebp+0x44],ah
  44025c:	add    BYTE PTR [edi-0x3cdb36c4],dl
  440262:	sub    al,0xfd
  440264:	adc    al,0x24
  440266:	fcomp  DWORD PTR [eax]
  440268:	int    0x0
  44026a:	sbb    eax,0x48716c09
  44026f:	and    al,0x65
  440271:	sub    DWORD PTR [ebp-0x30],ebp
  440274:	push   ebp
  440275:	cli    
  440276:	pop    ebp
  440277:	ins    BYTE PTR es:[edi],dx
  440278:	mov    cl,0x41
  44027a:	mov    al,0x49
  44027c:	push   edx
  44027d:	mov    cl,0x54
  44027f:	mov    ecx,0x6cad7690
  440284:	adc    esp,edx
  440286:	sbb    DWORD PTR [ebx],esi
  440288:	add    bh,BYTE PTR [eax]
  44028a:	xor    DWORD PTR [esi+0x57],esi
  44028d:	jle    0x4402ac
  44028f:	add    bp,WORD PTR [esi+0x5c]
  440293:	add    BYTE PTR [edx+0x2],dl
  440296:	pop    edx
  440297:	test   DWORD PTR [edx-0xa],0xbe4c804a
  44029e:	inc    eax
  44029f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4402a0:	inc    esp
  4402a1:	scas   al,BYTE PTR es:[edi]
  4402a2:	dec    eax
  4402a3:	xchg   esi,eax
  4402a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4402a5:	jo     0x440241
  4402a7:	ins    BYTE PTR es:[edi],dx
  4402a8:	cmp    bh,0x8b
  4402ab:	mov    ds:0x63ab4cf3,al
  4402b0:	add    esp,DWORD PTR [ebp+ebx*8+0x5c]
  4402b4:	mov    esp,0x40947054
  4402b9:	fwait
  4402ba:	mov    eax,0xa9deb1cd
  4402bf:	xchg   esp,eax
  4402c0:	adc    esp,DWORD PTR [ebp-0x6af662c9]
  4402c6:	sbb    eax,0xf979b88d
  4402cb:	adc    al,0xf1
  4402cd:	sbb    cl,ch
  4402cf:	or     al,0xe1
  4402d1:	fdivr  QWORD PTR [ebx*8+0x4190d508]
  4402d8:	cmp    BYTE PTR [edx-0xf49397c],bh
  4402de:	scas   al,BYTE PTR es:[edi]
  4402df:	in     al,dx
  4402e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4402e1:	and    bl,BYTE PTR [esi+0x298a22a8]
  4402e7:	sbb    BYTE PTR [edi],0xfa
  4402ea:	ins    DWORD PTR es:[edi],dx
  4402eb:	repnz int3 
  4402ed:	addr16 out dx,al
  4402ef:	adc    eax,0x1de00e6
  4402f4:	(bad)  
  4402f5:	lock pop es
  4402f7:	ret    0x3a06
  4402fa:	add    al,0x33
  4402fc:	add    BYTE PTR [ebx],ch
  4402fe:	adc    al,0x0
  440300:	fwait
  440301:	xchg   BYTE PTR [ebx-0x7c057418],dl
  440307:	mov    esp,0xf764ff98
  44030c:	add    eax,0xe0e732ef
  440311:	out    0xd4,al
  440313:	in     eax,0xcc
  440315:	jecxz  0x4402db
  440317:	sar    DWORD PTR [esp+eax*1],cl
  44031a:	dec    edi
  44031b:	xor    BYTE PTR [edi+0x28],cl
  44031e:	outs   dx,DWORD PTR ds:[esi]
  44031f:	and    BYTE PTR [edi+0xcba2818],ch
  440325:	loopne 0x44032b
  440327:	in     al,0x7c
  440329:	adc    al,0xf0
  44032b:	shl    BYTE PTR [esp+eiz*8],1
  44032e:	cmp    ah,bl
  440330:	or     al,0xd4
  440332:	test   al,0xcd
  440334:	hlt    
  440335:	mov    al,0xc1
  440337:	dec    esp
  440338:	cmp    DWORD PTR [eax+0x31],ebx
  44033b:	inc    esp
  44033c:	sub    DWORD PTR [eax],ebx
  44033e:	inc    esp
  44033f:	sbb    eax,0xdff15e8
  440344:	in     eax,dx
  440345:	add    eax,0xad799f3c
  44034a:	jno    0x440307
  44034c:	imul   ebp,DWORD PTR [esi+0x56746061],0xc2e5cae7
  440356:	cmp    cl,BYTE PTR es:[eax]
  440359:	aas    
  44035a:	cs cs es pop esp
  44035e:	push   ds
  44035f:	ins    DWORD PTR es:[edi],dx
  440360:	push   ss
  440361:	sub    al,0x68
  440363:	or     al,BYTE PTR [edx+0x2]
  440366:	enter  0xc67a,0x72
  44036a:	push   eax
  44036b:	stc    
  44036c:	data16 mov al,0x5e
  44036f:	xchg   ecx,eax
  440370:	push   esi
  440371:	jo     0x4403c2
  440373:	je     0x4403d2
  440375:	inc    ebx
  440376:	mov    esi,0xf4b3cfbb
  44037b:	stos   DWORD PTR es:[edi],eax
  44037c:	sbb    al,0x4d
  44037e:	sbb    edi,DWORD PTR [esi-0x7af450ed]
  440384:	add    eax,DWORD PTR [eax-0x7e]
  440387:	ja     0x44032e
  440389:	outs   dx,DWORD PTR ds:[esi]
  44038a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44038b:	addr16 pop esp
  44038d:	pusha  
  44038e:	fs push 0x347470fc
  440394:	jge    0x440316
  440396:	test   BYTE PTR [eax-0x577f5f79],cl
  44039c:	mov    cl,0x90
  44039e:	popf   
  44039f:	cwde   
  4403a0:	lods   al,BYTE PTR ds:[esi]
  4403a1:	jmp    0x440327
  4403a3:	(bad)  [ebx+ebp*1+0x54603378]
  4403aa:	fisubr WORD PTR [esp+ebp*8+0x54]
  4403ae:	std    
  4403af:	pop    esp
  4403b0:	out    dx,eax
  4403b1:	inc    esp
  4403b2:	js     0x440388
  4403b4:	mov    al,0x36
  4403b6:	mov    eax,0xa850a037
  4403bb:	pushf  
  4403bc:	push   0x609c6494
  4403c1:	test   BYTE PTR [ebx-0x74],al
  4403c4:	rcl    ch,0xf9
  4403c7:	shl    ecx,1
  4403c9:	lock jmp 0x928d58b
  4403cf:	inc    ecx
  4403d0:	sbb    al,0x49
  4403d2:	adc    BYTE PTR [ecx-0x1b73460c],dh
  4403d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4403d9:	jp     0x440388
  4403db:	pop    eax
  4403dc:	xchg   ebp,eax
  4403dd:	lods   al,BYTE PTR ds:[esi]
  4403de:	sahf   
  4403df:	mov    al,0xbf
  4403e1:	mov    dh,ah
  4403e3:	repnz mov dl,bh
  4403e6:	pushf  
  4403e7:	loop   0x4403bd
  4403e9:	mov    esi,gs
  4403eb:	mov    eax,0x38deb4d6
  4403f0:	xabort 0x28
  4403f3:	xor    bl,bh
  4403f5:	cmp    al,BYTE PTR [eax]
  4403f7:	and    ecx,DWORD PTR [eax-0x644f5f51]
  4403fd:	mov    ah,0x83
  4403ff:	test   al,0x8b
  440401:	pushf  
  440402:	repz les ecx,FWORD PTR [ecx]
  440405:	(bad)  
  440406:	cmp    eax,0xe0ef21e7
  44040b:	shr    al,1
  44040d:	test   al,0xc4
  44040f:	mov    esp,0x5434b0cc
  440414:	cmp    al,0xc
  440416:	inc    esp
  440417:	and    BYTE PTR [eax+0x28],al
  44041a:	ret    0xc110
  44041d:	sbb    BYTE PTR [eax],dh
  44041f:	(bad)  
  440420:	or     al,0xa0
  440422:	icebp  
  440423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440424:	stc    
  440425:	push   ebp
  440426:	loope  0x440400
  440428:	dec    ebp
  440429:	aad    0x7c
  44042b:	fst    QWORD PTR [edi-0x3b]
  44042e:	xor    ebp,ecx
  440430:	(bad)  
  440431:	fadd   DWORD PTR [ecx+ecx*8+0x2df025ec]
  440438:	hlt    
  440439:	adc    eax,0x5419c424
  44043e:	add    dl,BYTE PTR [edi+0xa]
  440441:	aas    
  440442:	jb     0x44048c
  440444:	shl    DWORD PTR [esi-0x1],cl
  440447:	outs   dx,BYTE PTR ds:[esi]
  440448:	out    dx,al
  440449:	push   esi
  44044a:	ds (bad) 
  44044d:	adc    al,0xce
  44044f:	or     BYTE PTR [esi],dh
  440451:	cld    
  440452:	ds lock es adc al,0x18
  440457:	sub    esp,DWORD PTR [ebx+edx*1]
  44045a:	and    BYTE PTR [ebx],bl
  44045c:	inc    edi
  44045d:	add    edi,DWORD PTR [eax]
  44045f:	mov    esp,0xf57fdb77
  440464:	test   DWORD PTR [bx+0x5c],ebp
  440468:	lea    edx,[ebx+0x7a]
  44046b:	push   esp
  44046c:	dec    ebx
  44046d:	dec    esp
  44046e:	cmp    eax,0xb00e8044
  440473:	sbb    BYTE PTR [edx+eiz*4],ch
  440476:	and    al,0xf5
  440478:	sbb    al,0x28
  44047a:	ret    0x8308
  44047d:	add    ebp,edi
  44047f:	jns    0x440416
  440481:	jno    0x4404cf
  440483:	bound  ebp,QWORD PTR [esi+0x19]
  440486:	add    WORD PTR [esi+0x18],bx
  44048a:	push   esi
  44048b:	jo     0x440455
  44048d:	inc    edx
  44048e:	dec    ebp
  44048f:	mov    ebx,0xab2fb31d
  440494:	xchg   esp,eax
  440495:	jns    0x44043e
  440497:	dec    ebx
  440498:	lahf   
  440499:	mov    ebp,0x3c888a90
  44049e:	sbb    BYTE PTR [eax+0x24],bh
  4404a1:	jo     0x440478
  4404a3:	push   0x81606094
  4404a8:	push   esp
  4404a9:	popf   
  4404aa:	dec    esp
  4404ab:	mov    WORD PTR [eax+eiz*2-0x43],es
  4404af:	test   BYTE PTR [esi+0x14a9e6b1],ch
  4404b5:	mov    eax,ds:0x6ea89936
  4404ba:	lea    ecx,[eax-0x7b]
  4404bd:	mov    esp,0xccf6c0fe
  4404c2:	fsubr  st,st(2)
  4404c4:	aam    0xe2
  4404c6:	je     0x44051e
  4404c8:	adc    ecx,DWORD PTR [esi+0x74]
  4404cb:	inc    DWORD PTR [edx+0x19]
  4404ce:	mov    edx,0xaa4bb237
  4404d3:	cwde   
  4404d4:	jns    0x440474
  4404d6:	dec    esi
  4404d7:	xchg   esi,eax
  4404d8:	pop    edi
  4404d9:	mov    cs,WORD PTR [ebp-0x7a]
  4404dc:	mov    esp,0xf38ffa3e
  4404e1:	test   ebx,ebp
  4404e3:	test   ebx,esp
  4404e5:	loopne 0x440473
  4404e7:	xlat   BYTE PTR ds:[ebx]
  4404e8:	jge    0x4404b9
  4404ea:	ins    BYTE PTR es:[edi],dx
  4404eb:	(bad)  
  4404ec:	pop    esi
  4404ed:	aas    
  4404ee:	or     al,0xb9
  4404f0:	scas   eax,DWORD PTR es:[edi]
  4404f1:	das    
  4404f2:	fmul   st,st(5)
  4404f4:	ins    BYTE PTR es:[edi],dx
  4404f5:	fwait
  4404f6:	jb     0x44048b
  4404f8:	mov    al,0x51
  4404fa:	xchg   DWORD PTR [eax-0x1],edx
  4404fd:	xor    dh,bh
  4404ff:	xor    bh,ch
  440501:	hlt    
  440502:	fdivr  DWORD PTR [eax+eiz*8-0x1c]
  440506:	xor    BYTE PTR [esp+eiz*4-0x5],ch
  44050a:	enter  0x1dfc,0x34
  44050e:	cs cmp al,0x21
  440511:	and    al,0x5f
  440513:	sub    al,0x22
  440515:	ja     0x4404ff
  440517:	jg     0x4404b8
  440519:	mov    BYTE PTR ds:0x4cf9c9f0,al
  44051f:	outs   dx,BYTE PTR ds:[esi]
  440520:	loopne 0x44056e
  440522:	jmp    0x2c7fd652
  440527:	(bad)
  44052a:	leave  
  44052b:	das    
  44052c:	xor    bl,BYTE PTR [edx+edi*1+0x73]
  440530:	and    bl,BYTE PTR [eax]
  440532:	ja     0x44054a
  440534:	pop    esp
  440535:	push   ds
  440536:	test   al,0x6
  440538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440539:	push   cs
  44053a:	cmp    al,0xd6
  44053c:	jb     0x44051e
  44053e:	jp     0x440520
  440540:	(bad)
  440545:	fcomi  st,st(7)
  440547:	ret    
  440548:	jmp    0x40149c09
  44054d:	or     al,0xca
  44054f:	and    edi,eax
  440551:	sub    eax,esi
  440553:	adc    eax,esp
  440555:	sbb    esi,DWORD PTR [eax]
  440557:	(bad)  
  440558:	pextrw esi,(bad),0xc5
  44055a:	ja     0x4405a0
  44055c:	jo     0x4405a9
  44055e:	push   0x75645654
  440563:	pop    esp
  440564:	je     0x4405ba
  440566:	push   ebx
  440567:	dec    esp
  440568:	jo     0x4405c1
  44056a:	mov    eax,0x532a4cb7
  44056f:	and    BYTE PTR [eax+ebx*1+0x24],cl
  440573:	jge    0x440589
  440575:	imul   ecx,DWORD PTR [ebx*2+0x407c2e04],0x35
  44057d:	push   0xfa6198d1
  440582:	pop    esp
  440583:	not    DWORD PTR [eax+esi*2-0x2f]
  440587:	inc    eax
  440588:	xlat   BYTE PTR ds:[ebx]
  440589:	mov    eax,0xa844b045
  44058e:	xchg   esp,eax
  44058f:	pop    edi
  440590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440592:	sahf   
  440593:	mov    bl,0x96
  440595:	mov    edi,0x7fdc3c03
  44059a:	sahf   
  44059b:	ja     0x440550
  44059d:	outs   dx,DWORD PTR ds:[esi]
  44059e:	mov    ch,0x67
  4405a0:	pusha  
  4405a1:	lahf   
  4405a2:	push   ebx
  4405a3:	push   0x3e447a4c
  4405a8:	mov    esp,0xc7b0c584
  4405ad:	test   al,0xe8
  4405af:	mov    al,ds:0x21a098da
  4405b4:	mov    WORD PTR ds:0xf9dd2d78,es
  4405ba:	clc    
  4405bb:	icebp  
  4405bc:	shl    BYTE PTR [ecx+eiz*2-0x23],1
  4405c0:	pop    ecx
  4405c1:	outs   dx,BYTE PTR ds:[esi]
  4405c2:	push   edx
  4405c3:	add    eax,0xbee8784a
  4405c8:	lea    esi,[edi-0x58435067]
  4405ce:	push   ds
  4405cf:	call   0x87c8:0x8fc99fe6
  4405d6:	sub    DWORD PTR [eax],eax
  4405d8:	repnz enter 0xef76,0x14
  4405dd:	out    0x15,eax
  4405df:	fild   QWORD PTR [edx]
  4405e1:	xlat   BYTE PTR ds:[ebx]
  4405e2:	scas   al,BYTE PTR es:[edi]
  4405e3:	sub    eax,0x4c7035
  4405e8:	mov    BYTE PTR [eax+edx*2-0x1f6263e4],dh
  4405ef:	sub    al,0x96
  4405f1:	pushf  
  4405f2:	loop   0x440578
  4405f4:	mov    WORD PTR es:0xe1f9f8c4,gs
  4405fb:	pop    ebp
  4405fc:	jmp    0xece2d891
  440601:	fiadd  WORD PTR [edx]
  440603:	mov    ah,0x81
  440605:	loope  0x44063a
  440607:	push   edx
  440608:	cmp    ecx,DWORD PTR [edx+0x2f952710]
  44060e:	mov    ecx,0x1f83b717
  440613:	mov    eax,0x72f7718f
  440618:	call   DWORD PTR [eax]
  44061a:	out    0x11,eax
  44061c:	(bad)  
  44061e:	xor    ebx,ebx
  440620:	aaa    
  440621:	ret    
  440622:	pop    ss
  440623:	retf   
  440624:	adc    eax,0x3ffd3700
  440629:	jmp    0x440652
  44062b:	adc    BYTE PTR [eax],ch
  44062d:	xor    dh,BYTE PTR [esp+ebx*1]
  440630:	xor    al,0x4
  440632:	push   ss
  440633:	js     0x440678
  440635:	sbb    DWORD PTR [eax+0x37],esi
  440638:	dec    eax
  440639:	fs addr16 sbb al,0x0
  44063d:	or     ebx,esp
  44063f:	sbb    esp,eax
  440641:	psubb  mm1,mm0
  440644:	adc    DWORD PTR [ecx],esi
  440646:	and    DWORD PTR [ecx],edi
  440648:	pop    edi
  440649:	and    ecx,edx
  44064b:	pop    ebp
  44064c:	loopne 0x4406ac
  44064e:	ficomp WORD PTR [ecx]
  440650:	push   ds
  440651:	add    cl,BYTE PTR [esi]
  440653:	jl     0x440690
  440655:	rcr    DWORD PTR [eax+0x7a],0xcb
  440659:	(bad)  
  44065a:	clc    
  44065b:	sbb    al,0x24
  44065d:	retf   0xd95e
  440660:	xor    eax,0xc4be3cb4
  440665:	aad    0xdc
  440667:	es ret 
  440669:	fadd   st,st(0)
  44066b:	les    esp,FWORD PTR [esi+ebx*1]
  44066e:	rol    DWORD PTR [esi],0xcd
  440671:	push   cs
  440672:	ret    0x4776
  440675:	dec    eax
  440676:	jnp    0x4406d1
  440678:	arpl   WORD PTR [ebp+0x6b],dx
  44067b:	jae    0x4406d0
  44067d:	jo     0x4406eb
  44067f:	inc    edi
  440680:	push   0x4f
  440682:	pop    edi
  440683:	mov    bh,0xb6
  440685:	mov    edi,0xd6a390c4
  44068a:	stos   DWORD PTR es:[edi],eax
  44068b:	not    BYTE PTR [ebx+0x38570777]
  440691:	or     ebp,DWORD PTR [eax]
  440693:	jae    0x4406cd
  440695:	jnp    0x4406bc
  440697:	arpl   WORD PTR [esp+ebx*1],sp
  44069a:	push   edi
  44069b:	out    dx,eax
  44069c:	pop    edi
  44069d:	cld    
  44069e:	inc    edi
  44069f:	loop   0x440659
  4406a1:	cli    
  4406a2:	aas    
  4406a3:	test   BYTE PTR [edi-0x50b658b7],bh
  4406a9:	arpl   WORD PTR [edi+0x4194a8b5],dx
  4406af:	mov    WORD PTR [ebx-0x7c],es
  4406b2:	enter  0x8efd,0xcc
  4406b6:	ins    DWORD PTR es:[edi],dx
  4406b7:	adc    eax,0x85d3a65
  4406bc:	push   ebp
  4406bd:	in     eax,dx
  4406be:	jo     0x440701
  4406c0:	lds    esp,FWORD PTR [eax]
  4406c2:	mul    DWORD PTR [eax-0x5c51414a]
  4406c8:	popf   
  4406c9:	and    al,0xe2
  4406cc:	xchg   esi,eax
  4406cd:	loope  0x44065d
  4406cf:	retf   
  4406d0:	xchg   BYTE PTR [eax],ch
  4406d2:	(bad)  
  4406d3:	repnz cmp al,0xea
  4406d6:	xlat   BYTE PTR ds:[ebx]
  4406d7:	jecxz  0x4406ab
  4406d9:	fcomi  st,st(7)
  4406db:	call   0xd813dcb7
  4406e0:	mov    ebx,0x90dcb3b0
  4406e5:	scas   eax,DWORD PTR es:[edi]
  4406e6:	ret    0xd0a7
  4406e9:	lahf   
  4406ea:	rcl    DWORD PTR [edi+0x1c83b425],cl
  4406f0:	sti    
  4406f1:	ins    BYTE PTR es:[edi],dx
  4406f2:	repz je 0x4406e0
  4406f5:	push   0xffffffd8
  4406f7:	out    0x2f,eax
  4406f9:	fnstsw ax
  4406fb:	shl    dl,1
  4406fd:	enter  0xfcc0,0x3c
  440701:	cmp    esi,DWORD PTR [edx*2-0x68db8bd4]
  440708:	and    BYTE PTR [ecx+eax*4-0x117a0b73],dl
  44070f:	std    
  440710:	pop    ebp
  440711:	enter  0x61f1,0xe9
  440715:	arpl   cx,sp
  440717:	fnstenv ss:[esi]
  44071a:	int3   
  44071b:	int    0x10
  44071d:	lds    ecx,FWORD PTR [esi]
  44071f:	cmp    eax,0x2e4467a5
  440724:	xchg   esp,eax
  440725:	popa   
  440726:	and    dh,BYTE PTR [esi+0x2012ca1a]
  44072c:	aad    0x1e
  44072e:	sub    al,0x80
  440730:	inc    esp
  440731:	dec    eax
  440732:	sbb    al,0x14
  440734:	fcomp  DWORD PTR [eax+edx*8+0x69]
  440738:	call   0x22086e19
  44073d:	int3   
  44073e:	call   0x21502f77
  440743:	sub    DWORD PTR ds:[edi+0x11],esi
  440747:	push   edx
  440748:	sbb    DWORD PTR [eax+esi*1-0x23f256fb],ebp
  44074f:	jne    0x440765
  440751:	jg     0x440790
  440753:	adc    al,0x6b
  440755:	sub    DWORD PTR [ebx+0x1f],edx
  440758:	pop    ebx
  440759:	in     al,dx
  44075a:	rcl    BYTE PTR [ebx+0xe],1
  44075d:	add    BYTE PTR [edi],dh
  44075f:	lock aas 
  440761:	add    al,0x20
  440763:	and    al,0x28
  440765:	test   al,0x24
  440767:	sbb    al,0xb8
  440769:	add    al,0x9a
  44076b:	or     al,0xe8
  44076d:	je     0x44070d
  44076f:	dec    eax
  440770:	js     0x4407c6
  440772:	popa   
  440773:	adc    DWORD PTR [ecx+0x30],ebp
  440776:	push   ecx
  440777:	or     eax,0x4dd8456c
  44077c:	retf   0x65b5
  44077f:	mov    ebp,0x8fa1c075
  440784:	stos   BYTE PTR es:[edi],al
  440785:	pop    ds
  440786:	dec    eax
  440787:	push   0x4d
  440789:	xchg   esp,eax
  44078a:	pop    ecx
  44078b:	repnz push ebp
  44078d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44078e:	fsub   DWORD PTR [eax+esi*4+0x40bc5675]
  440795:	pop    edi
  440796:	pop    edi
  440797:	sub    esi,DWORD PTR [eax+0x43]
  44079a:	sub    DWORD PTR [ebx-0x12],ecx
  44079d:	mov    bl,0x4a
  44079f:	mov    ebx,0x38a0940c
  4407a4:	cwde   
  4407a5:	sbb    BYTE PTR [eax-0x47657785],dl
  4407ab:	test   DWORD PTR [eax+0x2c6927fd],ecx
  4407b1:	popa   
  4407b2:	fsub   DWORD PTR [eax+0x5d]
  4407b5:	in     al,0x55
  4407b7:	in     al,0x4d
  4407b9:	fadd   DWORD PTR [ebp+0x49]
  4407bc:	test   eax,ebp
  4407be:	in     eax,dx
  4407bf:	dec    esp
  4407c0:	lods   eax,DWORD PTR ds:[esi]
  4407c1:	mov    BYTE PTR [esi-0x538b61cd],ah
  4407c7:	mov    al,cl
  4407c9:	cmp    ecx,0xfffffffc
  4407cc:	jnp    0x4407c2
  4407ce:	cs (bad) 
  4407d0:	call   0x8aa8478
  4407d5:	dec    eax
  4407d6:	push   0xfffffff8
  4407d8:	inc    esi
  4407d9:	arpl   WORD PTR [edx+edi*4-0x3d79d35b],ax
  4407e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4407e1:	rcr    DWORD PTR [esi+0x3a92b8d2],0x8a
  4407e8:	sub    ah,bl
  4407ea:	sahf   
  4407eb:	push   0x74d11cf6
  4407f0:	iret   
  4407f1:	mov    eax,0x71d760df
  4407f6:	iret   
  4407f7:	push   edi
  4407f8:	clc    
  4407f9:	ret    
  4407fa:	mov    ch,0x3b
  4407fc:	xlat   BYTE PTR ds:[ebx]
  4407fd:	xor    edi,eax
  4407ff:	sub    ebp,esp
  440801:	loopne 0x44079e
  440803:	test   al,0x7c
  440805:	mov    al,0xb4
  440807:	dec    esp
  440808:	(bad)  
  44080a:	out    dx,eax
  44080b:	enter  0xe4fc,0xe4
  44080f:	cwde   
  440810:	in     al,dx
  440811:	cdq    
  440812:	aam    0x6a
  440814:	lods   al,BYTE PTR ds:[esi]
  440815:	sar    BYTE PTR [edx-0x38],0xd0
  440819:	xor    al,0x3a
  44081b:	sub    BYTE PTR [ebp+0x72],dh
  44081e:	adc    al,0x2c
  440820:	push   0x801cbe14
  440825:	add    al,0x8a
  440827:	cmp    al,0x8
  440829:	nop
  44082a:	call   0xdf242ce5
  44082f:	jmp    0xc721ed2c
  440834:	(bad)
  440837:	mov    dl,0x35
  440839:	or     BYTE PTR fs:[ecx],bh
  44083c:	bound  esp,QWORD PTR [ecx]
  44083e:	loop   0x44086a
  440840:	or     al,0x13
  440842:	ins    BYTE PTR es:[edi],dx
  440843:	sub    al,0x7
  440845:	jg     0x440856
  440847:	outs   dx,DWORD PTR ds:[esi]
  440848:	ja     0x440866
  44084a:	jg     0x44085c
  44084c:	push   eax
  44084d:	arpl   WORD PTR [eax],di
  44084f:	imul   ebp,ecx,0x53
  440852:	(bad)  
  440853:	pop    ebx
  440854:	cmp    ecx,ebp
  440856:	pushf  
  440857:	pop    esp
  440858:	fdivr  QWORD PTR [edi]
  44085a:	shl    BYTE PTR [eax-0x37d403b8],1
  440860:	and    eax,0x3c070c8
  440865:	add    al,BYTE PTR [eax+eax*1]
  440868:	jl     0x440876
  44086a:	or     al,0x68
  44086c:	sbb    al,0x60
  44086e:	adc    BYTE PTR [eax-0x2a],bl
  440871:	enter  0xa8c6,0x74
  440875:	inc    eax
  440876:	mov    ds:0x64b060b8,eax
  44087b:	test   al,0x78
  44087d:	sbb    al,0x18
  44087f:	sub    DWORD PTR [ecx],edx
  440881:	sbb    ecx,DWORD PTR [ecx]
  440883:	pop    ebp
  440884:	add    DWORD PTR [esp+eax*1+0x7d],ecx
  440888:	cmp    al,0xac
  44088a:	dec    ecx
  44088b:	sub    BYTE PTR [ecx-0x24],ah
  44088e:	add    BYTE PTR [esi-0x20],bh
  440891:	imul   edx,eax,0x2bd8ae6e
  440897:	ins    BYTE PTR es:[edi],dx
  440898:	mov    cl,0x9f
  44089a:	stos   DWORD PTR es:[edi],eax
  44089b:	ficomp WORD PTR [ecx-0x6c0e6a04]
  4408a1:	iret   
  4408a2:	mov    ebx,esp
  4408a4:	adc    ecx,0x44
  4408a7:	jae    0x4408e7
  4408a9:	imul   edx,esi,0x63
  4408ac:	in     eax,dx
  4408ad:	pop    ebx
  4408ae:	shr    DWORD PTR [eax+0x57],cl
  4408b1:	iret   
  4408b2:	dec    edi
  4408b3:	jle    0x4408f5
  4408b5:	mov    edi,DWORD PTR [eax-0x21537333]
  4408bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4408bc:	int    0x9c
  4408be:	repnz xchg esp,eax
  4408c0:	icebp  
  4408c1:	hlt    
  4408c2:	mov    dl,bl
  4408c4:	pushf  
  4408c5:	lahf   
  4408c6:	adc    eax,0x7cb016f4
  4408cb:	mov    al,0x9c
  4408cd:	fst    QWORD PTR [ebx-0x14b6092b]
  4408d3:	pushf  
  4408d4:	mov    dh,0x3a
  4408d6:	mov    BYTE PTR [ecx-0x5eaa56ab],dh
  4408dc:	popf   
  4408dd:	call   0xe686:0xff8eacea
  4408e4:	(bad)  
  4408e5:	mov    ecx,0x34d14ef6
  4408ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4408eb:	inc    edx
  4408ec:	ficom  WORD PTR [edx]
  4408ee:	(bad)  
  4408ef:	adc    dh,cl
  4408f1:	idiv   ah
  4408f3:	ret    
  4408f4:	mov    eax,0x2fc3abe4
  4408f9:	jne    0x44089e
  4408fb:	mov    al,ds:0xb0ac48b4
  440900:	int3   
  440901:	fsub   DWORD PTR [edx-0x33300b3f]
  440907:	loopne 0x4408aa
  440909:	call   0xd88bd952
  44090e:	inc    ebp
  44090f:	icebp  
  440910:	xchg   esp,eax
  440911:	add    DWORD PTR [edx+0x30],0x20db38cb
  440918:	leave  
  440919:	sbb    al,0x2c
  44091b:	mov    DWORD PTR [eax+ecx*2+0x8c900db],0xdcf9c4c7
  440926:	loope  0x4408f7
  440928:	jmp    0xe911db29
  44092d:	ffree  st(3)
  44092f:	(bad)
  440932:	jns    0x440969
  440934:	fwait
  440935:	or     al,0x21
  440937:	mov    ecx,0x9213b329
  44093c:	sbb    edx,DWORD PTR [eax+0x85d0730]
  440942:	xor    DWORD PTR [eax+0x34],esi
  440945:	jns    0x440977
  440947:	push   esp
  440948:	outs   dx,BYTE PTR ds:[esi]
  440949:	cmp    DWORD PTR [esi+0x1a],edx
  44094c:	ficomp DWORD PTR [ebp-0x3e]
  44094f:	dec    ebx
  440950:	std    
  440951:	mov    al,ds:0x613b635d
  440956:	and    esp,DWORD PTR [ebx+0x2b]
  440959:	leave  
  44095a:	and    BYTE PTR [edi],bl
  44095c:	ret    
  44095d:	shl    bl,1
  44095f:	or     al,BYTE PTR [edx+ecx*1]
  440962:	jl     0x44099d
  440964:	pop    esp
  440965:	imul   ebp,esp,0x7dc0e261
  44096b:	sub    DWORD PTR [esi+0x3d],edx
  44096e:	in     al,0x42
  440970:	mov    ecx,0xdc685bba
  440975:	repnz and ebx,DWORD PTR [esi+ebp*1]
  440979:	xor    al,0xd8
  44097b:	sub    al,0x30
  44097d:	and    al,bh
  44097f:	cmp    al,0x9c
  440981:	jne    0x44092b
  440983:	dec    esp
  440984:	popa   
  440985:	mov    al,0x69
  440987:	mov    ah,0x51
  440989:	fs pop esi
  44098b:	push   0x6cd84222
  440990:	xor    BYTE PTR [eax-0x4ba37118],0x33
  440997:	inc    eax
  440998:	mov    al,ds:0x5c9e4c96
  44099d:	xchg   al,cl
  44099f:	jb     0x440959
  4409a1:	pop    eax
  4409a2:	jle    0x4409f8
  4409a4:	addr16 push esp
  4409a6:	jl     0x440974
  4409a8:	js     0x440a05
  4409aa:	dec    eax
  4409ab:	jo     0x4409f4
  4409ad:	push   esp
  4409ae:	dec    edi
  4409af:	mov    ah,0xb7
  4409b1:	mov    ah,0xbf
  4409b3:	aam    0x94
  4409b5:	stos   DWORD PTR es:[edi],eax
  4409b6:	rcl    BYTE PTR [ebx-0x7c0f6410],1
  4409bc:	sar    BYTE PTR [eax-0x43085371],1
  4409c2:	call   eax
  4409c4:	inc    esp
  4409c5:	fcmovu st,st(0)
  4409c7:	loopne 0x440a1d
  4409c9:	or     al,0x76
  4409cb:	lods   al,BYTE PTR ds:[esi]
  4409cc:	dec    ebx
  4409cd:	pushf  
  4409ce:	mov    bl,0x60
  4409d0:	mov    BYTE PTR [edi-0x508b5888],bh
  4409d6:	push   eax
  4409d7:	xchg   edi,eax
  4409d8:	pop    esp
  4409d9:	mov    eax,ds:0x5c44f850
  4409de:	jo     0x440a05
  4409e0:	addr16 nop
  4409e2:	in     al,0xb4
  4409e4:	in     al,dx
  4409e5:	cld    
  4409e6:	or     dl,dl
  4409e8:	aam    0xdb
  4409ea:	mov    al,0xd4
  4409ec:	int3   
  4409ed:	mov    ah,0x37
  4409ef:	mov    ds,WORD PTR [eax-0x50]
  4409f2:	cld    
  4409f3:	hlt    
  4409f4:	cld    
  4409f5:	enter  0x9fd0,0xd4
  4409f9:	adc    ah,bl
  4409fb:	cwde   
  4409fc:	mov    esp,0xe0c8c620
  440a01:	mov    al,0xd3
  440a03:	fsub   st(6),st
  440a05:	call   0x9108e4f6
  440a0a:	dec    edi
  440a0b:	nop
  440a0c:	into   
  440a0d:	mov    BYTE PTR [esi],dh
  440a0f:	or     BYTE PTR [eax-0x5fd55bde],bl
  440a15:	adc    bh,ah
  440a17:	sbb    ch,BYTE PTR [eax-0x38]
  440a1a:	mov    bl,BYTE PTR ds:0x94fbfc7a
  440a20:	mov    al,0xd8
  440a22:	mov    al,ds:0xfd05d3fe
  440a27:	out    dx,al
  440a28:	lock in al,0x18
  440a2b:	jg     0x440a65
  440a2d:	xor    BYTE PTR [edx],cl
  440a2f:	xor    al,0xf0
  440a31:	sub    bl,BYTE PTR [eax+0x29]
  440a34:	adc    DWORD PTR fs:[eax+0x19],esp
  440a38:	mov    dl,0x78
  440a3a:	pop    eax
  440a3b:	imul   edx,DWORD PTR [ecx+esi*2],0x10
  440a3f:	jns    0x440a4d
  440a41:	hlt    
  440a42:	sbb    BYTE PTR [esi-0x80],bl
  440a45:	dec    eax
  440a46:	add    BYTE PTR [ecx+eax*8+0x3174c988],bl
  440a4d:	or     BYTE PTR [ebp+eiz*1+0x68],dh
  440a51:	sub    eax,0x1da0159c
  440a56:	push   cs
  440a57:	mov    eax,0x75acd654
  440a5c:	shr    BYTE PTR [eax],1
  440a5e:	repnz int3 
  440a60:	popa   
  440a61:	js     0x440a5f
  440a63:	push   ebp
  440a64:	rcr    BYTE PTR [ebp-0x3c],0xd0
  440a68:	sub    al,cl
  440a6a:	dec    ecx
  440a6b:	xor    BYTE PTR [eax],0x39
  440a6e:	test   al,0x21
  440a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440a71:	sub    eax,esp
  440a73:	adc    DWORD PTR [edx-0xb3aaf18],ebp
  440a79:	or     DWORD PTR [eax-0x6e17638f],edx
  440a7f:	xor    al,0xa8
  440a81:	imul   edx,DWORD PTR [ecx+edx*2-0x6a7d3370],0xb2807458
  440a8c:	test   BYTE PTR [edx-0x55735d80],bh
  440a92:	mov    eax,0x2b09ea4
  440a97:	sbb    BYTE PTR [edx],cl
  440a99:	fs jb  0x440afc
  440a9c:	dec    esp
  440a9d:	data16 js 0x440b0e
  440aa0:	ins    BYTE PTR es:[edi],dx
  440aa1:	push   esi
  440aa2:	push   eax
  440aa3:	pop    esi
  440aa4:	push   esp
  440aa5:	jo     0x440ae9
  440aa7:	inc    esp
  440aa8:	dec    edx
  440aa9:	shl    BYTE PTR [edx-0x7b274534],0xae
  440ab0:	rcl    BYTE PTR [esi-0x17f8b70c],1
  440ab6:	and    ah,0xbd
  440ab9:	mov    al,ds:0xb8faac33
  440abe:	loop   0x440a74
  440ac0:	push   esi
  440ac1:	adc    al,0x2c
  440ac3:	pop    edx
  440ac4:	add    al,0x14
  440ac6:	aad    0x0
  440ac8:	mov    dh,0x4
  440aca:	push   0xaed01821
  440acf:	adc    BYTE PTR [eax+0x289a3cf3],dl
  440ad5:	add    al,0xdc
  440ad7:	mov    ah,0xf1
  440ad9:	xchg   esp,eax
  440ada:	mov    esp,fs
  440adc:	out    0xec,eax
  440ade:	test   al,0xf5
  440ae0:	ja     0x440acd
  440ae2:	adc    ah,dl
  440ae4:	clc    
  440ae5:	pushf  
  440ae6:	ret    0x5090
  440ae9:	jmp    0x440ae3
  440aeb:	stos   BYTE PTR es:[edi],al
  440aec:	in     al,dx
  440aed:	mov    ds:0x289edc9c,al
  440af2:	xchg   esi,eax
  440af3:	xor    al,0x8e
  440af5:	xor    BYTE PTR [esi-0x7e0db740],al
  440afb:	xor    eax,DWORD PTR [eax]
  440afd:	add    BYTE PTR [eax],al
  440aff:	add    ah,dh
  440b01:	pop    ss
  440b02:	xor    eax,0x9148
  440b07:	add    BYTE PTR [eax],al
  440b09:	add    BYTE PTR [eax],al
  440b0b:	add    BYTE PTR [ecx+0x5e000000],dl
  440b11:	add    BYTE PTR [esi],ah
  440b13:	jl     0x440b15
  440b15:	add    ah,BYTE PTR [edx+0x8]
  440b18:	add    BYTE PTR [eax],al
  440b1a:	test   BYTE PTR [eax+eax*1-0x64],cl
  440b1e:	xor    dl,BYTE PTR [eax-0x47dd4bd6]
  440b24:	sbb    ah,BYTE PTR [eax+eax*4]
  440b27:	push   ss
  440b28:	pushf  
  440b29:	push   cs
  440b2a:	mov    BYTE PTR [esi],al
  440b2c:	hlt    
  440b2d:	jle    0x440b77
  440b2f:	hlt    
  440b30:	push   0xffffffe8
  440b32:	bound  ebx,QWORD PTR [edx+ebx*2-0x5b93ad4c]
  440b39:	dec    esi
  440b3a:	mov    al,ds:0x68be5c46
  440b3f:	mov    dh,0x90
  440b41:	jo     0x440ae5
  440b43:	je     0x440b63
  440b45:	les    edx,FWORD PTR [esi]
  440b47:	ror    BYTE PTR [esi],0xd8
  440b4a:	enter  0x647a,0x73
  440b4e:	dec    esp
  440b4f:	scas   eax,DWORD PTR es:[edi]
  440b50:	push   edi
  440b51:	inc    edi
  440b52:	pop    esp
  440b53:	jg     0x440bb9
  440b55:	xchg   edi,eax
  440b56:	jae    0x440bc8
  440b58:	imul   edi,DWORD PTR [eax+0x63],0xffffff80
  440b5c:	fwait
  440b5d:	mov    BYTE PTR [ebx-0x7c677470],dl
  440b63:	mov    al,ds:0xaf53a8bb
  440b68:	mov    ah,0xa7
  440b6a:	mov    esp,0x5053c4df
  440b6f:	dec    ebx
  440b70:	pop    eax
  440b71:	inc    ebx
  440b72:	pusha  
  440b73:	jnp    0x440bdd
  440b75:	jae    0x440be7
  440b77:	mov    esp,DWORD PTR [edi+0x7c]
  440b7a:	lahf   
  440b7b:	test   BYTE PTR [edi-0x786b7074],dl
  440b81:	pushf  
  440b82:	mov    edi,0xafacb7a4
  440b87:	mov    ah,0x47
  440b89:	mov    ds:0xd3c8dbc0,eax
  440b8e:	rcr    bl,1
  440b90:	fcom   st(3)
  440b92:	loopne 0x440b7f
  440b94:	call   0x7cba807c
  440b99:	shl    BYTE PTR [eax],cl
  440b9b:	add    BYTE PTR [eax],al
  440b9d:	add    BYTE PTR [eax],al
  440b9f:	add    BYTE PTR [edx],ah
  440ba1:	xor    DWORD PTR [ebx+ecx*1],ebx
  440ba4:	je     0x440bed
  440ba6:	push   esp
  440ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440ba8:	mov    edx,0x60a0ebe
  440bad:	add    bl,BYTE PTR [esi]
  440baf:	sbb    bh,BYTE PTR [edx-0x71cb2ede]
  440bb5:	mov    al,gs:0xb9ac71c6
  440bbb:	xor    ch,bh
  440bbd:	aad    0x4e
  440bbf:	mov    ebx,0x80cdbbe5
  440bc4:	out    dx,al
  440bc5:	push   ds
  440bc6:	(bad)  
  440bc7:	sub    DWORD PTR [ecx-0x33],eax
  440bca:	xchg   esp,eax
  440bcb:	test   edi,edi
  440bcd:	sub    eax,0x1cc2c825
  440bd2:	push   ss
  440bd3:	loope  0x440c07
  440bd5:	and    al,0x59
  440bd7:	and    edi,DWORD PTR [ebx+0x7b86a258]
  440bdd:	scas   al,BYTE PTR es:[edi]
  440bde:	call   0xd3b51e5a
  440be3:	xchg   ebx,edx
  440be5:	popf   
  440be6:	pop    esp
  440be7:	cmp    BYTE PTR [eax*2+0x2bfce0eb],bh
  440bee:	daa    
  440bef:	and    esp,DWORD PTR [esi+0x50ae177c]
  440bf5:	push   ecx
  440bf6:	pop    esp
  440bf7:	outs   dx,DWORD PTR ds:[esi]
  440bf8:	cwde   
  440bf9:	bound  edx,QWORD PTR [ebx]
  440bfb:	xchg   esp,eax
  440bfc:	pop    esi
  440bfd:	sub    edx,edi
  440bff:	sbb    al,0xfa
  440c01:	jle    0x440bb3
  440c03:	out    dx,al
  440c04:	jo     0x440b8d
  440c06:	js     0x440be1
  440c08:	stos   BYTE PTR es:[edi],al
  440c09:	cmp    bh,cl
  440c0b:	cwde   
  440c0c:	fist   DWORD PTR [eax-0x630f570c]
  440c12:	es push esp
  440c14:	out    0xd1,eax
  440c16:	pop    eax
  440c17:	xchg   ebx,eax
  440c18:	sahf   
  440c19:	cmp    DWORD PTR [edi+0x34],eax
  440c1c:	arpl   WORD PTR [edx-0x23],di
  440c1f:	add    al,0xe7
  440c21:	out    dx,al
  440c22:	cdq    
  440c23:	enter  0xe3d7,0x44
  440c27:	fimul  WORD PTR [edx]
  440c29:	cmc    
  440c2a:	jb     0x440bc2
  440c2c:	push   es
  440c2d:	cmp    BYTE PTR [edx+eiz*4-0x114f5575],al
  440c34:	stos   DWORD PTR es:[edi],eax
  440c35:	lods   al,BYTE PTR ds:[esi]
  440c36:	mov    cl,0x65
  440c38:	pop    ds
  440c39:	div    ch
  440c3b:	mov    cl,0x79
  440c3d:	mov    esp,0xac09c325
  440c42:	or     eax,DWORD PTR [esi]
  440c44:	pop    es
  440c45:	jmp    0x440bc8
  440c47:	xor    eax,0xb47478ae
  440c4c:	mov    al,0x4c
  440c4e:	dec    eax
  440c4f:	inc    esp
  440c50:	fstp   DWORD PTR [ebx]
  440c52:	js     0x440c1d
  440c54:	les    edx,FWORD PTR [esi]
  440c56:	pop    edi
  440c57:	rcr    BYTE PTR [edx],cl
  440c59:	lahf   
  440c5a:	in     al,dx
  440c5b:	es xchg ebx,eax
  440c5d:	jl     0x440c28
  440c5f:	push   0xfffffff4
  440c61:	(bad)  
  440c62:	jnp    0x440c6c
  440c64:	dec    edi
  440c65:	xchg   edx,eax
  440c66:	push   ds
  440c67:	fisub  WORD PTR [ebx+0x26]
  440c6a:	jne    0x440c4b
  440c6c:	lods   eax,DWORD PTR ds:[esi]
  440c6d:	pop    eax
  440c6e:	and    ebp,0x3b518a37
  440c74:	mov    al,BYTE PTR ds:0x73198f62
  440c7a:	(bad)  
  440c7b:	pop    esp
  440c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440c7e:	data16 (bad) 
  440c80:	out    0x3d,eax
  440c82:	push   esi
  440c83:	cmp    eax,0xfc49e22e
  440c88:	lea    ecx,[ecx-0x66c3ea7e]
  440c8e:	popf   
  440c8f:	mov    eax,ds:0x38a5ec2e
  440c94:	lock inc ebp
  440c96:	mov    WORD PTR ss:[ecx],?
  440c99:	inc    edx
  440c9a:	cwde   
  440c9b:	sub    eax,0x68e188d6
  440ca0:	mov    al,0x74
  440ca2:	sub    esp,ecx
  440ca4:	inc    eax
  440ca5:	daa    
  440ca6:	std    
  440ca7:	dec    eax
  440ca8:	mov    ebx,0x854db8f4
  440cad:	sub    al,0x5b
  440caf:	cmp    DWORD PTR [eax],0xeb18a557
  440cb5:	scas   al,BYTE PTR es:[edi]
  440cb6:	sar    BYTE PTR [ebp-0x43],1
  440cb9:	sbb    BYTE PTR [ebx-0x69cba406],cl
  440cbf:	cmp    ecx,eax
  440cc1:	sahf   
  440cc2:	neg    DWORD PTR [esi-0x72]
  440cc5:	add    ebp,DWORD PTR [eax-0x5e]
  440cc8:	or     esp,DWORD PTR [esi+edi*4+0xb]
  440ccc:	clc    
  440ccd:	mov    bh,0x1f
  440ccf:	mov    es,WORD PTR [esi-0x5]
  440cd2:	aam    0x52
  440cd4:	ds rcl dh,cl
  440cd7:	fcmovu st,st(6)
  440cd9:	or     edi,ebp
  440cdb:	popa   
  440cdc:	mov    ebx,0xff387502
  440ce1:	mov    edx,DWORD PTR [ebx-0x6]
  440ce4:	test   DWORD PTR [edi-0xa],edx
  440ce7:	xchg   ecx,eax
  440ce8:	push   ebx
  440ce9:	rcr    BYTE PTR ds:0xa3413662,cl
  440cef:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440cf1:	add    eax,0x8ee5b872
  440cf6:	inc    esp
  440cf7:	icebp  
  440cf8:	adc    bl,BYTE PTR [ecx]
  440cfa:	mov    DWORD PTR [esp+ebp*2-0x22875d37],edx
  440d01:	shl    DWORD PTR [si-0x42],1
  440d05:	mov    edx,0x4d8f1db6
  440d0a:	loopne 0x440d4c
  440d0c:	cld    
  440d0d:	(bad)  
  440d0e:	loop   0x440cef
  440d10:	fist   DWORD PTR [ebx]
  440d12:	imul   edi,DWORD PTR [ecx+eax*2],0xb40db719
  440d19:	ret    
  440d1a:	sbb    DWORD PTR [ebx+ebx*2-0x12d5a711],ecx
  440d21:	pop    esi
  440d22:	out    dx,eax
  440d23:	test   al,0x6a
  440d25:	(bad)  [esi+eiz*2-0x40854f3d]
  440d2c:	inc    esp
  440d2d:	dec    edi
  440d2e:	(bad)
  440d31:	mov    ds:0x809f26d4,eax
  440d36:	imul   ebx,DWORD PTR [eax-0x4240b72b],0xffffffdf
  440d3d:	arpl   WORD PTR [eax-0x617db5b2],ax
  440d43:	call   0xa2a6:0xaaae9296
  440d4a:	mov    esi,0x4eb2b6ba
  440d4f:	dec    edx
  440d50:	fild   WORD PTR ds:0x5d76157e
  440d56:	ficomp WORD PTR [ecx+edx*2]
  440d59:	call   0x34ee9e7e
  440d5e:	mov    DWORD PTR [ecx+0x7d],edi
  440d61:	add    DWORD PTR [ebp-0x6a9a37b2],0x4ea19d99
  440d6b:	mov    al,ds:0xef9cfc26
  440d70:	mov    cl,0x75
  440d72:	icebp  
  440d73:	xor    DWORD PTR [edi+ecx*1-0x23],esi
  440d77:	js     0x440d24
  440d79:	shl    DWORD PTR [eax-0x1f],0xb6
  440d7d:	das    
  440d7e:	in     eax,dx
  440d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440d80:	mov    bl,0xf1
  440d82:	dec    esp
  440d83:	mov    bl,0x7e
  440d85:	int3   
  440d86:	sti    
  440d87:	adc    DWORD PTR [ebx-0x6f7821f4],0xa9176fc2
  440d91:	dec    esp
  440d92:	jb     0x440db8
  440d94:	push   esi
  440d95:	jmp    0x307:0xbc3b379
  440d9c:	pop    ds
  440d9d:	sbb    edx,DWORD PTR [edi]
  440d9f:	adc    ecx,DWORD PTR [ebx]
  440da1:	out    0x9e,eax
  440da3:	mov    ds:0x722df2a6,al
  440da8:	mov    bl,0x79
  440daa:	cs push edx
  440dac:	push   esi
  440dad:	pop    edx
  440dae:	pop    esi
  440daf:	inc    edx
  440db0:	inc    esi
  440db1:	dec    edx
  440db2:	dec    esi
  440db3:	jb     0x440e2b
  440db5:	jp     0x440e35
  440db7:	bound  esp,QWORD PTR [esi+0x6a]
  440dba:	outs   dx,BYTE PTR ds:[esi]
  440dbb:	and    eax,0x55512d29
  440dc0:	pop    ecx
  440dc1:	pop    ebp
  440dc2:	inc    ecx
  440dc3:	inc    ebp
  440dc4:	dec    ecx
  440dc5:	dec    ebp
  440dc6:	jno    0x440e3d
  440dc8:	jns    0x440e47
  440dca:	popa   
  440dcb:	imul   ebp,DWORD PTR gs:[ebp-0x6f],0x819d9995
  440dd3:	test   DWORD PTR [ecx+0x4c484440],ecx
  440dd9:	jo     0x440e4f
  440ddb:	js     0x440e59
  440ddd:	pusha  
  440dde:	fs push 0x9894906c
  440de4:	pushf  
  440de5:	add    BYTE PTR [eax+ecx*4-0x474b4f74],0xbc
  440ded:	mov    al,ds:0x637f7ba4
  440df2:	imul   ebp,DWORD PTR [bx-0x6d],0xffffff97
  440df7:	fwait
  440df8:	lahf   
  440df9:	add    DWORD PTR [edi-0x484c7075],0xffffffbb
  440e00:	mov    edi,0xafaba7a3
  440e05:	rcl    edi,cl
  440e07:	fist   DWORD PTR [edx-0x7d61656a]
  440e0d:	xchg   BYTE PTR [edx-0x19494d72],cl
  440e13:	loop   0x440e13
  440e15:	cli    
  440e16:	div    dl
  440e18:	mov    cs,WORD PTR [edx-0x65617d7a]
  440e1e:	xchg   esi,eax
  440e1f:	xchg   edx,eax
  440e20:	aaa    
  440e21:	in     eax,dx
  440e22:	icebp  
  440e23:	mov    ds:0x44c565c9,al
  440e28:	retf   0xc2c6
  440e2b:	enter  0x9d00,0xa5
  440e2f:	sub    al,0xa8
  440e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440e32:	mov    ds:0x58120e8,al
  440e37:	add    DWORD PTR [eax],edx
  440e39:	dec    esp
  440e3b:	or     bh,BYTE PTR [ebp-0x2c]
  440e3e:	adc    BYTE PTR [esp+esi*2-0x2e54504e],ch
  440e45:	sbb    DWORD PTR [eax-0x447da11],eax
  440e4b:	and    DWORD PTR [eax-0x32bd6e0b],ebx
  440e51:	je     0x440e51
  440e53:	push   edx
  440e54:	fnsave [esi-0x5ae16ed9]
  440e5a:	pop    es
  440e5b:	mov    eax,ds:0xb11f942e
  440e60:	ds sub edi,0x41
  440e64:	into   
  440e65:	jb     0x440dfa
  440e67:	push   ecx
  440e68:	fidiv  WORD PTR [ebx-0x3e]
  440e6b:	popa   
  440e6c:	out    dx,al
  440e6d:	inc    edx
  440e6e:	xlat   BYTE PTR ds:[ebx]
  440e6f:	lods   al,BYTE PTR ds:[esi]
  440e70:	sub    ebx,DWORD PTR [eax+eax*1-0x1892c444]
  440e77:	dec    esp
  440e78:	retf   
  440e79:	(bad)  
  440e7a:	out    0x5c,al
  440e7c:	fist   DWORD PTR [ebx-0x31]
  440e7f:	ins    BYTE PTR es:[edi],dx
  440e80:	jmp    0x440ec2
  440e82:	test   DWORD PTR [ebx+edi*8+0x31],edi
  440e86:	hlt    
  440e87:	or     al,0x8b
  440e89:	jno    0x440e14
  440e8b:	add    ah,dl
  440e8d:	ins    DWORD PTR es:[edi],dx
  440e8e:	leave  
  440e8f:	(bad)  
  440e90:	hlt    
  440e91:	inc    ebp
  440e92:	and    al,ch
  440e94:	or     DWORD PTR [eax],edi
  440e96:	cld    
  440e97:	push   ecx
  440e98:	xchg   ecx,eax
  440e99:	cmp    bl,BYTE PTR [ebp+ebp*1-0x4ae26fa8]
  440ea0:	push   ds
  440ea1:	cli    
  440ea2:	loopne 0x440f0d
  440ea4:	das    
  440ea5:	in     eax,dx
  440ea6:	inc    esp
  440ea7:	loopne 0x440f05
  440ea9:	imul   eax,DWORD PTR [ecx+0x3f],0x3b
  440ead:	inc    ecx
  440eae:	mov    DWORD PTR [eax],ebx
  440eb0:	pop    edi
  440eb1:	xchg   ebp,eax
  440eb2:	or     BYTE PTR [ebx-0x4f],ch
  440eb5:	and    BYTE PTR [ebp-0x5f],ah
  440eb8:	lock nop
  440eba:	int    0x74
  440ebc:	or     eax,esp
  440ebe:	xor    al,0x86
  440ec0:	das    
  440ec1:	fwait
  440ec2:	daa    
  440ec3:	push   0x2a
  440ec5:	and    al,0x20
  440ec7:	push   0xffffffa2
  440ec9:	pop    edi
  440eca:	fs mov esi,0xb7aa7023
  440ed0:	mov    ds,WORD PTR [edx+0x3]
  440ed3:	jnp    0x440e9f
  440ed5:	out    dx,al
  440ed6:	sbb    DWORD PTR [ebx],0xb60a9b51
  440edc:	add    dh,BYTE PTR [ecx+0xf]
  440edf:	or     DWORD PTR ds:0x81ca4777,eax
  440ee5:	inc    ebx
  440ee6:	(bad)  
  440ee7:	popf   
  440ee8:	dec    edi
  440ee9:	shr    BYTE PTR [ebx+0x78463277],cl
  440eef:	in     al,0x23
  440ef1:	clc    
  440ef2:	jle    0x440eb0
  440ef4:	adc    eax,0xf08ced51
  440ef9:	out    dx,al
  440efa:	jmp    0xf964:0xaef95890
  440f01:	mov    edx,0x10b4e160
  440f06:	pop    ecx
  440f07:	and    DWORD PTR [ebp-0x64a109de],edx
  440f0d:	push   ecx
  440f0e:	mov    al,ds:0xd54fc84c
  440f13:	ror    edi,cl
  440f15:	mov    ebp,0x9cbd87d
  440f1a:	pushf  
  440f1b:	mov    DWORD PTR ds:0x500dd1b0,0x4801f50c
  440f25:	inc    esp
  440f26:	mov    al,ds:0xd367db6a
  440f2b:	outs   dx,BYTE PTR ds:[esi]
  440f2c:	mov    esi,0x16c6b4b8
  440f31:	mov    edx,eax
  440f33:	adc    dh,BYTE PTR [edi-0x54cc114]
  440f39:	es aaa 
  440f3b:	pop    ss
  440f3c:	dec    esi
  440f3d:	add    ax,0xcd17
  440f41:	montmul (bad)
  440f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440f43:	add    bh,BYTE PTR [esi-0x66625c93]
  440f49:	jecxz  0x440f76
  440f4b:	into   
  440f4c:	std    
  440f4d:	aaa    
  440f4e:	stos   BYTE PTR es:[edi],al
  440f4f:	or     ebx,edx
  440f51:	ss pop es
  440f53:	ret    
  440f54:	(bad)  
  440f55:	repnz inc ebx
  440f57:	add    esi,DWORD PTR [eax-0x7edf156f]
  440f5d:	cmp    eax,0x82846899
  440f62:	jle    0x440f70
  440f64:	int3   
  440f65:	dec    ebp
  440f66:	sbb    bl,al
  440f68:	dec    ebp
  440f69:	push   ss
  440f6a:	hlt    
  440f6b:	gs and ah,bh
  440f6e:	in     eax,0xdd
  440f70:	cwde   
  440f71:	gs out 0xc8,eax
  440f74:	test   ebp,0x9364d86c
  440f7a:	imul   esp,DWORD PTR [edi+0x63],0x2778e129
  440f81:	std    
  440f82:	pusha  
  440f83:	xor    ebp,ecx
  440f85:	adc    BYTE PTR [ebp-0x67],cl
  440f88:	xchg   esp,eax
  440f89:	or     BYTE PTR [edx-0x2a],ah
  440f8c:	dec    esp
  440f8d:	pop    edi
  440f8e:	pop    ebx
  440f8f:	push   edi
  440f90:	retf   0x4b28
  440f93:	sub    BYTE PTR [ebx-0x41],al
  440f96:	pop    edi
  440f97:	mov    esi,0x42383c41
  440f9c:	mov    ch,BYTE PTR [ebx]
  440f9e:	pop    esp
  440f9f:	sahf   
  440fa0:	daa    
  440fa1:	push   0xeb2b92af
  440fa6:	pop    esi
  440fa7:	push   ecx
  440fa8:	(bad)  
  440fa9:	mov    edx,0x39cacb45
  440fae:	lahf   
  440faf:	cmp    bl,BYTE PTR [ebx-0x6d]
  440fb2:	es push ebp
  440fb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440fb5:	sbb    ah,BYTE PTR [ecx+0xb]
  440fb8:	scas   eax,DWORD PTR es:[edi]
  440fb9:	xor    al,0xf2
  440fbb:	dec    dh
  440fbd:	jne    0x441030
  440fbf:	or     eax,0x52214290
  440fc4:	cmp    ebp,edx
  440fc6:	xor    eax,0x12161834
  440fcb:	js     0x440f7d
  440fcd:	add    DWORD PTR [esi+0x44],esi
  440fd0:	std    
  440fd1:	add    BYTE PTR [ebp+0x5d],0x9c
  440fd5:	push   esp
  440fd6:	and    al,0x2b
  440fd8:	lods   eax,DWORD PTR ds:[esi]
  440fd9:	aam    0x1f
  440fdb:	mov    cl,0x1c
  440fdd:	gs mov ch,0x8
  440fe0:	jae    0x440f9b
  440fe2:	cld    
  440fe3:	(bad)  
  440fe4:	in     eax,dx
  440fe5:	push   ecx
  440fe6:	rcl    BYTE PTR [eax],cl
  440fe8:	sbb    al,dl
  440fea:	in     al,dx
  440feb:	call   0xf940f0d4
  440ff0:	mov    esi,0x17741f64
  440ff5:	repz jmp 0x440f9a
  440ff8:	div    al
  440ffa:	in     al,dx
  440ffb:	sahf   
  440ffc:	pop    esi
  440ffd:	out    0xa8,eax
  440fff:	(bad)
  441004:	mov    dl,0x72
  441006:	mov    bh,0xb8
  441008:	ds pop edi
  44100a:	stc    
  44100b:	jg     0x44100f
  44100d:	in     eax,dx
  44100e:	arpl   WORD PTR [edx],dx
  441010:	loope  0x441089
  441012:	shl    BYTE PTR [ebx+0x7fbdce6b],cl
  441018:	ret    0xa3c9
  44101b:	pop    ss
  44101c:	mov    WORD PTR [esi+0x56],ds
  44101f:	xchg   esi,eax
  441020:	or     ebp,ecx
  441022:	mov    bl,BYTE PTR [esi+0x58c129cd]
  441028:	int3   
  441029:	retf   0xb4c6
  44102c:	add    al,0xbd
  44102e:	ret    0xa908
  441031:	ficom  WORD PTR [ecx]
  441033:	inc    ecx
  441034:	call   0x4d6ad61
  441039:	popa   
  44103a:	xchg   BYTE PTR [eax],cl
  44103c:	xchg   ecx,eax
  44103d:	(bad)  
  44103e:	dec    ecx
  44103f:	dec    esp
  441040:	mov    ebx,0x1af443d
  441045:	lods   al,BYTE PTR ds:[esi]
  441046:	aad    0x25
  441048:	cwde   
  441049:	jecxz  0x441074
  44104b:	mov    edi,?
  44104d:	popf   
  44104e:	and    DWORD PTR [edx-0x6c],eax
  441051:	mov    BYTE PTR [eax+0x5c],al
  441054:	pop    eax
  441055:	push   esp
  441056:	push   eax
  441057:	lahf   
  441058:	fwait
  441059:	xchg   edi,eax
  44105a:	xchg   ebx,eax
  44105b:	scas   eax,DWORD PTR es:[edi]
  44105c:	stos   DWORD PTR es:[edi],eax
  44105d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44105e:	mov    ds:0x93f022bf,eax
  441063:	add    BYTE PTR [ebx-0x79],ch
  441066:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  441068:	push   0x64
  44106a:	pusha  
  44106b:	sub    ah,dl
  44106d:	push   ebx
  44106e:	push   0x726e96f6
  441073:	jbe    0x4410ef
  441075:	cmc    
  441076:	(bad)  
  441077:	jle    0x44107a
  441079:	(bad)  
  44107a:	mov    ds:0x296ad71f,al
  44107f:	repz mov dh,0xfc
  441082:	cmp    ebx,esi
  441084:	mov    ds:0xde8b49ee,al
  441089:	lahf   
  44108a:	push   cs
  44108b:	fcomp  QWORD PTR [ebp-0x6e23e13d]
  441091:	icebp  
  441092:	stos   BYTE PTR es:[edi],al
  441093:	push   ds
  441094:	loopne 0x44104f
  441096:	in     al,0x46
  441098:	call   0x31d05ed2
  44109d:	pop    edx
  44109e:	xor    BYTE PTR [edi+ebx*1+0x6c25e5f9],al
  4410a5:	push   0x787c6064
  4410aa:	je     0x44111c
  4410ac:	or     al,0x8
  4410ae:	add    al,0x0
  4410b0:	test   DWORD PTR [edi+0x34],ebx
  4410b3:	lea    ebp,[ebx-0x5f]
  4410b6:	loopne 0x44111d
  4410b8:	mov    ch,0x8
  4410ba:	jae    0x44106d
  4410bc:	adc    BYTE PTR [esi+ebp*8],bh
  4410bf:	scas   eax,DWORD PTR es:[edi]
  4410c0:	inc    eax
  4410c1:	sub    eax,0xc78646ca
  4410c6:	pop    esi
  4410c7:	push   ss
  4410c8:	xchg   edi,eax
  4410c9:	stc    
  4410ca:	pusha  
  4410cb:	stos   BYTE PTR es:[edi],al
  4410cc:	sti    
  4410cd:	jl     0x441085
  4410cf:	xrelease mov DWORD PTR [esi],edx
  4410d2:	sbb    DWORD PTR [edi],0xffffff98
  4410d5:	push   edx
  4410d6:	adc    edx,DWORD PTR [ecx+0x16]
  4410d9:	fist   DWORD PTR [edi-0x59]
  4410dc:	out    dx,al
  4410dd:	popa   
  4410de:	mov    ds:0xff3b75fe,eax
  4410e3:	mov    ecx,DWORD PTR [ebx+0x6]
  4410e6:	in     eax,0xc0
  4410e8:	popf   
  4410e9:	pop    edi
  4410ea:	loop   0x441095
  4410ec:	ret    
  4410ed:	ja     0x4410db
  4410ef:	ds and DWORD PTR ss:0xcd313539,edi
  4410f7:	leave  
  4410f8:	vpaddusw xmm3,xmm7,xmm1
  4410fc:	aad    0xd1
  4410fe:	in     eax,dx
  4410ff:	jmp    0xb721b780
  441104:	aad    0x15
  441106:	retf   0x4100
  441109:	les    eax,FWORD PTR [ecx-0x30]
  44110c:	xchg   DWORD PTR [ebp+0x18],ebx
  44110f:	xchg   ecx,eax
  441110:	push   ecx
  441111:	cld    
  441112:	jecxz  0x441181
  441114:	enter  0x3430,0x38
  441118:	cmp    al,0x87
  44111a:	add    DWORD PTR [esp+ecx*2-0x64a7abb0],esi
  441121:	and    eax,0x231f688c
  441126:	daa    
  441127:	mov    al,ds:0x7ebcef7a
  44112c:	out    0xc9,eax
  44112e:	dec    edi
  44112f:	ret    
  441130:	inc    ebp
  441131:	fadd   DWORD PTR [edx]
  441133:	xchg   esp,ebx
  441135:	mov    eax,ds:0xaf3ae266
  44113a:	cld    
  44113b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44113d:	add    dl,bh
  44113f:	aas    
  441140:	retf   
  441141:	add    edx,DWORD PTR [edx+0x5abe2fcd]
  441147:	push   ecx
  441148:	out    0x2d,eax
  44114a:	push   0x37fb726e
  44114f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441150:	shr    DWORD PTR [esi-0x30],cl
  441153:	mov    WORD PTR [edx+0x51951996],ss
  441159:	fcomp  QWORD PTR [ebp+0x6f66e16e]
  44115f:	jno    0x4411d6
  441161:	hlt    
  441162:	sub    BYTE PTR [ecx-0x29],bl
  441165:	popa   
  441166:	retf   
  441167:	xchg   ebx,eax
  441168:	xchg   ebp,eax
  441169:	cdq    
  44116a:	push   ds
  44116b:	mov    eax,gs:0x31be6d2c
  441171:	test   BYTE PTR [eax+0x74],dh
  441174:	js     0x441167
  441176:	lds    ebx,FWORD PTR [eax+ebx*8+0x64]
  44117a:	mov    ds:0x239c9896,al
  44117f:	pusha  
  441180:	lods   al,BYTE PTR ds:[esi]
  441181:	sub    DWORD PTR [eax-0x40],esi
  441184:	aam    0x7b
  441186:	test   DWORD PTR [eax],ebp
  441188:	enter  0xd0cc,0x87
  44118c:	dec    esp
  44118d:	retf   0x936b
  441190:	fwait
  441191:	lahf   
  441192:	mov    ds:0xfe24a24c,eax
  441197:	dec    edi
  441198:	cmp    BYTE PTR [esi-0x3e],dl
  44119b:	dec    esi
  44119c:	xchg   BYTE PTR [edi],dh
  44119e:	push   eax
  44119f:	stos   BYTE PTR es:[edi],al
  4411a0:	and    ebx,edi
  4411a2:	xchg   edi,eax
  4411a3:	lock adc esi,edi
  4411a6:	jle    0x4411a0
  4411a8:	inc    esi
  4411a9:	mov    cl,0xb4
  4411ab:	mov    edx,0xce0241be
  4411b0:	inc    ebp
  4411b1:	lahf   
  4411b2:	cmp    dl,BYTE PTR [edi-0x36]
  4411b5:	stos   BYTE PTR es:[edi],al
  4411b6:	outs   dx,DWORD PTR ds:[esi]
  4411b7:	mov    edi,0x792c1902
  4411bc:	sub    esi,0xffffffb9
  4411bf:	leave  
  4411c0:	(bad)  [esi-0x74]
  4411c3:	adc    edx,edi
  4411c5:	nop
  4411c6:	xor    eax,0x6339ac56
  4411cb:	std    
  4411cc:	jns    0x4411b2
  4411ce:	jb     0x441188
  4411d0:	fld    QWORD PTR [esi+0x50980cc9]
  4411d6:	(bad)
  4411d9:	push   ebx
  4411da:	xchg   ecx,eax
  4411db:	cmp    al,0x22
  4411dd:	jmp    0x24e58dce
  4411e2:	jg     0x4411a6
  4411e4:	add    eax,0xd3cc5981
  4411e9:	pop    ebp
  4411ea:	loopne 0x44120c
  4411ec:	and    al,0x28
  4411ee:	sub    al,0xdb
  4411f0:	push   ebx
  4411f1:	pusha  
  4411f2:	stos   BYTE PTR es:[edi],al
  4411f3:	sub    edi,eax
  4411f5:	dec    ebp
  4411f6:	test   DWORD PTR [edx+0x4684e74a],0x22dd98cf
  441200:	scas   al,BYTE PTR es:[edi]
  441201:	jle    0x4411fa
  441203:	mov    eax,0xa3bcd772
  441208:	inc    esi
  441209:	enter  0x48f,0x83
  44120d:	dec    ebx
  44120e:	loop   0x4411ad
  441210:	push   edi
  441211:	repnz repz iret 
  441214:	mov    ds:0x1142de63,eax
  441219:	aad    0x4b
  44121b:	int    0x1f
  44121d:	mov    esi,0xd75bbcd1
  441222:	aaa    
  441223:	xchg   esi,eax
  441224:	jmp    0x596de785
  441229:	sub    DWORD PTR [esi+0x6ae17c],edi
  44122f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441230:	(bad)  
  441231:	sbb    al,0x89
  441233:	ror    DWORD PTR [ebp-0x17],cl
  441236:	je     0x44121a
  441238:	sub    BYTE PTR [ebp+0x87cb9f6],ch
  44123e:	jge    0x441220
  441240:	stos   DWORD PTR es:[edi],eax
  441241:	popf   
  441242:	mov    ds:0xb011974b,eax
  441247:	pop    ebp
  441248:	pusha  
  441249:	fs push 0xf1983de7
  44124f:	xor    DWORD PTR [ebx+eax*2-0x33],esi
  441253:	jo     0x4411e6
  441255:	xchg   esp,eax
  441256:	cwde   
  441257:	pushf  
  441258:	mov    edx,0x635f5a46
  44125d:	jmp    0x7ec1:0x9f21b73e
  441264:	add    DWORD PTR [edi+0x1e974b08],0xffffffde
  44126b:	jae    0x44128d
  44126d:	ficom  DWORD PTR [edi-0x51]
  441270:	(bad)  
  441271:	(bad)  
  441272:	in     eax,dx
  441273:	setp   BYTE PTR [eax+0xb]
  441277:	ror    DWORD PTR ds:0xd31b7acf,0x76
  44127e:	adc    ebp,edi
  441280:	jle    0x44127d
  441282:	inc    esi
  441283:	sub    esi,DWORD PTR [edi+0x241beba]
  441289:	into   
  44128a:	inc    edi
  44128b:	sar    BYTE PTR [ecx+0x66],0x98
  44128f:	push   ds
  441290:	int3   
  441291:	ins    DWORD PTR es:[edi],dx
  441292:	and    cl,BYTE PTR [edi-0x58]
  441295:	and    al,0xe4
  441297:	inc    ebp
  441298:	cmp    al,al
  44129a:	xor    ebp,eax
  44129c:	mov    ebp,0x5905ad5
  4412a1:	mul    BYTE PTR [ecx+ecx*1+0x2278ed62]
  4412a8:	mov    esp,0xf933a538
  4412ad:	sbb    al,0x47
  4412af:	or     ch,cl
  4412b1:	pop    ecx
  4412b2:	xchg   ecx,eax
  4412b3:	add    al,0x37
  4412b5:	cmp    DWORD PTR ds:0xf4f0ec44,ecx
  4412bb:	jnp    0x44123e
  4412bd:	cld    
  4412be:	add    al,0xce
  4412c0:	mov    ah,0x48
  4412c2:	mov    ah,BYTE PTR [edi]
  4412c4:	dec    esp
  4412c5:	cmp    dl,ah
  4412c7:	push   edx
  4412c8:	xchg   edx,eax
  4412c9:	(bad)  
  4412cb:	loop   0x441331
  4412cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4412ce:	sbb    edi,DWORD PTR [eax+0x15]
  4412d1:	add    DWORD PTR [esi+0x5298e35e],ecx
  4412d7:	not    DWORD PTR [ebx]
  4412d9:	rcl    BYTE PTR ss:[edi-0x59],cl
  4412dd:	or     ah,BYTE PTR [ecx-0x5d]
  4412e0:	sub    bh,cl
  4412e2:	dec    esp
  4412e3:	out    dx,eax
  4412e4:	add    DWORD PTR [ebx-0x1a],edx
  4412e7:	xchg   DWORD PTR [edi-0x6],eax
  4412ea:	xchg   ecx,eax
  4412eb:	pop    ebx
  4412ec:	cli    
  4412ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4412ee:	jmp    0xb87c:0x3573bb2f
  4412f5:	and    DWORD PTR [ecx+ebp*8+0x110d0821],ebp
  4412fc:	xchg   esi,eax
  4412fd:	fstp   QWORD PTR [ecx]
  4412ff:	test   al,0x60
  441301:	fldcw  WORD PTR [esp+ecx*2+0x414039d9]
  441308:	inc    ebp
  441309:	cmp    eax,DWORD PTR [edx+ebx*8+0x5d]
  44130d:	cld    
  44130e:	xchg   ebx,eax
  44130f:	(bad)  
  441310:	sbb    DWORD PTR [ebp+0x51a9d475],edx
  441316:	fdiv   QWORD PTR [edi*1+0x4136403c]
  44131d:	(bad)  
  44131e:	adc    eax,0x619cdba4
  441323:	in     eax,dx
  441324:	sub    eax,0xc75aa2ef
  441329:	scas   eax,DWORD PTR es:[edi]
  44132a:	xor    esi,DWORD PTR [edi]
  44132c:	cmp    ecx,DWORD PTR [edx+ecx*2-0x34]
  441330:	push   es
  441331:	mov    edi,0xd65996d0
  441336:	cs xchg edi,eax
  441338:	and    BYTE PTR [esi-0x8],0x22
  44133c:	mov    edi,esp
  44133e:	imul   edi,DWORD PTR [ebx],0xc9b617b7
  441344:	xor    esp,DWORD PTR [edx-0x16b9d1aa]
  44134a:	and    esi,DWORD PTR [esi-0xe65c8bb]
  441350:	xor    ebx,DWORD PTR [esi+0xc]
  441353:	call   0xd642:0xdf1d8306
  44135a:	cdq    
  44135b:	pop    esp
  44135c:	call   0xa8cac881
  441361:	(bad)  
  441362:	xor    al,0x91
  441364:	or     al,cl
  441366:	jge    0x4413b2
  441368:	aam    0x69
  44136a:	cwde   
  44136b:	popf   
  44136c:	mov    eax,ds:0x3a8e42a5
  441371:	loopne 0x441323
  441373:	sti    
  441374:	xor    DWORD PTR [eax-0x7df3770a],esp
  44137a:	pop    es
  44137b:	lds    ecx,FWORD PTR [eax+0x1b]
  44137e:	pop    esi
  44137f:	mov    eax,ds:0x3b70fd2d
  441384:	icebp  
  441385:	pusha  
  441386:	aas    
  441387:	add    ch,al
  441389:	inc    ecx
  44138a:	mov    DWORD PTR [eax],ecx
  44138c:	inc    eax
  44138d:	into   
  44138e:	jae    0x441323
  441390:	xchg   edi,eax
  441391:	fwait
  441392:	lahf   
  441393:	dec    edx
  441394:	or     al,0x56
  441396:	push   eax
  441397:	dec    esp
  441398:	cmp    al,0xfe
  44139a:	arpl   ax,bp
  44139c:	add    bh,0x44
  44139f:	mov    bl,BYTE PTR ss:[eax]
  4413a2:	adc    ebp,DWORD PTR [edi]
  4413a4:	sub    esp,DWORD PTR [edi]
  4413a6:	outs   dx,BYTE PTR ds:[esi]
  4413a7:	push   0x66
  4413a9:	bound  edi,QWORD PTR [esi+0x7a]
  4413ac:	jbe    0x441420
  4413ae:	push   cs
  4413af:	or     bl,BYTE PTR [edi+0x51873e45]
  4413b5:	fwait
  4413b6:	jmp    0xf2a3:0x79e2a26d
  4413bd:	jne    0x4413ff
  4413bf:	mov    ch,0x3e
  4413c1:	sub    esp,eax
  4413c3:	inc    edx
  4413c4:	cwde   
  4413c5:	fstp   DWORD PTR [ebx+ebx*4-0x2f]
  4413c9:	fs sub al,0x9c
  4413cc:	enter  0xb07a,0xf1
  4413d0:	jbe    0x4413db
  4413d2:	or     bh,BYTE PTR [edi+0x11509a1c]
  4413d8:	xchg   esp,eax
  4413d9:	test   al,dl
  4413db:	push   edi
  4413dc:	lods   eax,DWORD PTR ds:[esi]
  4413dd:	in     al,dx
  4413de:	arpl   bp,di
  4413e0:	jae    0x441418
  4413e2:	stc    
  4413e3:	ja     0x44142a
  4413e5:	or     al,0x81
  4413e7:	sbb    al,0x9b
  4413e9:	pop    ecx
  4413ea:	adc    bl,bl
  4413ec:	popa   
  4413ed:	sub    BYTE PTR [edi],ch
  4413ef:	sub    al,0x30
  4413f1:	xor    al,0xb3
  4413f3:	mov    edx,0xf7b97cfb
  4413f8:	ret    0xcef
  4413fb:	mov    ebx,?
  4413fd:	push   ss
  4413fe:	xchg   edx,eax
  4413ff:	pop    edx
  441400:	fild   QWORD PTR [esi+eiz*2+0x3366b827]
  441407:	out    dx,al
  441408:	mov    eax,ds:0x8f470ecc
  44140d:	pop    edx
  44140e:	push   es
  44140f:	cdq    
  441410:	push   ebx
  441411:	out    0x95,al
  441413:	(bad)  
  441414:	jnp    0x4413ff
  441416:	loop   0x441416
  441418:	cli    
  441419:	div    dl
  44141b:	mov    cs,WORD PTR [edx+0x39e8286]
  441421:	shl    DWORD PTR [edx-0x22d05ecd],1
  441427:	and    al,0x29
  441429:	sub    eax,0x357cbe31
  44142e:	adc    DWORD PTR [ebp-0x55514dcb],ebp
  441434:	ficomp DWORD PTR [ecx-0x6edb119b]
  44143a:	cld    
  44143b:	popa   
  44143c:	xor    esp,esi
  44143e:	aam    0x79
  441440:	mov    bh,0x5
  441442:	dec    esp
  441443:	sbb    BYTE PTR [edi+esi*1-0x1c5c5855],ah
  44144a:	mov    al,ds:0x1b0e96c
  44144f:	mov    ds:0x378c5f7,eax
  441454:	imul   ecx,ebp,0x9f505457
  44145a:	fwait
  44145b:	xchg   edi,eax
  44145c:	xchg   ebx,eax
  44145d:	scas   eax,DWORD PTR es:[edi]
  44145e:	stos   DWORD PTR es:[edi],eax
  44145f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441460:	cmp    bh,al
  441462:	fwait
  441463:	sub    dh,dl
  441465:	(bad)  
  441466:	jnp    0x441443
  441468:	add    al,0xde
  44146a:	fwait
  44146b:	retf   0xf614
  44146e:	scas   eax,DWORD PTR es:[edi]
  44146f:	stc    
  441470:	and    al,0xf6
  441472:	mov    ds:0x6a3bf93e,eax
  441477:	das    
  441478:	call   0x69b37701
  44147d:	imul   esp,DWORD PTR [ebp+0x15],0x4b215ae7
  441484:	out    dx,eax
  441485:	je     0x441431
  441487:	mov    esi,0x2060a0e
  44148c:	push   ds
  44148d:	inc    ebp
  44148e:	inc    ecx
  44148f:	pop    ebp
  441490:	rcl    BYTE PTR [edx],0x71
  441493:	and    cl,BYTE PTR [ecx-0x4b]
  441496:	es hlt 
  441498:	mov    ebp,0x4ccdf8ba
  44149d:	mov    WORD PTR ds:0xdd2d9016,?
  4414a3:	loope  0x44148a
  4414a5:	jmp    0xd16f823d
  4414aa:	mov    al,ds:0x128b7b4
  4414af:	dec    ebp
  4414b0:	test   DWORD PTR [eax],esi
  4414b2:	pop    ebx
  4414b3:	adc    eax,0xe71cb5e7
  4414b9:	outs   dx,DWORD PTR ds:[esi]
  4414ba:	out    0xf5,al
  4414bc:	clc    
  4414bd:	cld    
  4414be:	mov    eax,DWORD PTR [ecx-0x4d]
  4414c1:	mov    al,0x7d
  4414c3:	iret   
  4414c4:	dec    esi
  4414c5:	push   es
  4414c6:	fcom   QWORD PTR [ebx-0x2d]
  4414c9:	fsubrp st(3),st
  4414cb:	out    0x2c,eax
  4414cd:	stos   BYTE PTR es:[edi],al
  4414ce:	sbb    esi,edi
  4414d0:	sti    
  4414d1:	inc    DWORD PTR [ebx]
  4414d3:	ror    BYTE PTR [esi-0x1],0x13
  4414d7:	pop    ss
  4414d8:	sbb    ebx,DWORD PTR [edi]
  4414da:	adc    DWORD PTR [edi-0x15191dce],ebx
  4414e0:	out    dx,al
  4414e1:	sbb    edi,edi
  4414e3:	jno    0x441490
  4414e5:	out    dx,al
  4414e6:	test   eax,ecx
  4414e8:	setnp  BYTE PTR [ebx-0xa]
  4414ec:	popf   
  4414ed:	pop    edi
  4414ee:	retf   0x532e
  4414f1:	popa   
  4414f2:	mov    ebp,0xbccef9a8
  4414f7:	add    eax,0x44e20773
  4414fc:	call   0x7b34:0x9f121158
  441503:	(bad)
  441506:	cmp    DWORD PTR ds:0xc44d81c2,edi
  44150c:	adc    al,0xec
  44150e:	xchg   DWORD PTR [ebp+0x1c],edx
  441511:	fsub   QWORD PTR [ecx]
  441514:	lods   eax,DWORD PTR ds:[esi]
  441515:	ins    DWORD PTR es:[edi],dx
  441516:	and    al,0xb3
  441518:	dec    ecx
  441519:	fadd   st(3),st
  44151b:	xor    eax,0xbc01c34f
  441520:	xlat   BYTE PTR ds:[ebx]
  441521:	mov    cl,0x5d
  441523:	jmp    0x98cb9951
  441528:	lods   al,BYTE PTR ds:[esi]
  441529:	jle    0x4414f2
  44152b:	repnz aad 0x3d
  44152e:	mov    dh,0x16
  441530:	scas   eax,DWORD PTR es:[edi]
  441531:	ror    BYTE PTR [edx],0xbb
  441534:	pop    esp
  441535:	push   ds
  441536:	mov    ebx,0xe48322ea
  44153b:	ds xchg eax,edi
  44153e:	mov    esi,0xb273b385
  441543:	lods   eax,DWORD PTR ds:[esi]
  441544:	aam    0xcd
  441546:	das    
  441547:	stos   BYTE PTR es:[edi],al
  441548:	pop    edx
  441549:	sub    edi,DWORD PTR [edi-0x13]
  44154c:	das    
  44154d:	sahf   
  44154e:	jmp    0x441545
  441550:	cwde   
  441551:	jns    0x4414d4
  441553:	inc    esp
  441554:	dec    ebx
  441555:	jbe    0x4414e8
  441557:	xchg   ebp,eax
  441558:	fild   QWORD PTR [edx-0x22]
  44155b:	or     al,0x49
  44155d:	pop    edx
  44155e:	addr16 pop ss
  441560:	push   0xffffffb6
  441562:	xor    BYTE PTR [ebp-0x767a7e84],al
  441568:	xor    al,0x89
  44156a:	xchg   ebp,eax
  44156b:	cdq    
  44156c:	popf   
  44156d:	mov    ch,al
  44156f:	pop    ecx
  441570:	es hlt 
  441572:	pop    ebp
  441573:	push   0xffffff90
  441575:	std    
  441576:	cmp    eax,0x64c14794
  44157b:	mov    WORD PTR [eax-0x5688676c],ss
  441581:	das    
  441582:	in     eax,0x40
  441584:	xor    esi,DWORD PTR [ebp-0x47]
  441587:	xor    eax,0x8943288d
  44158c:	and    BYTE PTR [esi],bl
  44158e:	or     BYTE PTR [ebp-0x6c],ch
  441591:	xchg   esp,eax
  441592:	pop    ecx
  441593:	pop    esi
  441594:	pop    ebx
  441595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441596:	xchg   edx,eax
  441597:	jmp    0x3bbe:0x3c8fca5f
  44159e:	retf   
  44159f:	mov    edx,0x378e5cc9
  4415a4:	bound  eax,QWORD PTR ds:0xaa59a2eb
  4415aa:	outs   dx,DWORD PTR ds:[esi]
  4415ab:	pop    eax
  4415ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4415ad:	xor    ebx,edi
  4415af:	ror    BYTE PTR [esi-0x26],cl
  4415b2:	inc    ebp
  4415b3:	lahf   
  4415b4:	(bad)  
  4415b5:	pop    ecx
  4415b6:	pop    ds
  4415b7:	jecxz  0x441628
  4415b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4415ba:	(bad)  
  4415bb:	jns    0x441560
  4415bd:	adc    bh,BYTE PTR [edi]
  4415bf:	loopne 0x4415cf
  4415c1:	xor    al,0x94
  4415c3:	sub    eax,0x56258842
  4415c8:	sbb    esp,ebx
  4415ca:	push   0x43061da0
  4415cf:	sbb    al,0x27
  4415d1:	add    edi,esi
  4415d3:	cli    
  4415d4:	add    BYTE PTR [eax+0x5],0x9e
  4415d8:	dec    esp
  4415d9:	jmp    0x9da3df3b
  4415de:	sbb    al,ch
  4415e0:	cwde   
  4415e1:	hlt    
  4415e2:	(bad)  
  4415e3:	cmp    BYTE PTR [edi],dl
  4415e5:	add    eax,0x100c09bc
  4415ea:	adc    al,0x93
  4415ec:	stc    
  4415ed:	jge    0x4415d6
  4415ef:	in     al,0x79
  4415f1:	mov    ebx,0xfb92bbd8
  4415f6:	mov    dh,0x89
  4415f8:	icebp  
  4415f9:	cmp    BYTE PTR [edx+0x3],0x55
  4415fd:	fs pop ds
  4415ff:	nop
  441600:	pop    edx
  441601:	sub    esp,DWORD PTR [ebx+eax*8-0x478d2792]
  441608:	inc    edx
  441609:	dec    ebx
  44160a:	cmp    DWORD PTR es:[ecx-0x30],eax
  44160e:	ja     0x441616
  441610:	push   0x67951261
  441615:	cs test eax,0xbdd75c6
  44161b:	mov    ebp,0x3c7a4e3f
  441620:	pop    esp
  441621:	aad    0x27
  441623:	push   esi
  441624:	pop    ebx
  441625:	adc    DWORD PTR [edx-0x56],esp
  441628:	pusha  
  441629:	and    DWORD PTR [esi+0x20d231f1],ebp
  44162f:	ret    0x4138
  441632:	data16 and al,0x52
  441635:	loope  0x44169a
  441637:	popa   
  441638:	imul   eax,DWORD PTR gs:[esi+0x7504f661],0xf83bf0ae
  441643:	jnp    0x44168d
  441645:	dec    esp
  441646:	push   eax
  441647:	mov    edi,0x9ba8df5b
  44164c:	xor    eax,0x2db8bcaf
  441651:	imul   DWORD PTR [edi+eax*1+0x64]
  441655:	adc    BYTE PTR [edi-0x2f],0x60
  441659:	pushf  
  44165a:	mov    al,ds:0x26d45b57
  44165f:	ja     0x441643
  441661:	sub    cl,BYTE PTR [edi-0x7c74c150]
  441667:	xchg   DWORD PTR [ebx+0x109e788f],ecx
  44166d:	rcl    BYTE PTR [edi+0x24],cl
  441670:	push   0xffffffad
  441672:	cmp    bh,dl
  441674:	call   0x8ad7:0x458e23f9
  44167b:	imul   DWORD PTR [edi+0x1d62d319]
  441681:	bound  esp,QWORD PTR [edi+0x3d4aeb23]
  441687:	div    DWORD PTR [esi+0x453e8bc1]
  44168d:	xchg   DWORD PTR [ebp+0x7],esi
  441690:	nop
  441691:	sbb    eax,0x59ec169b
  441696:	sub    ch,BYTE PTR [eax+esi*4+0x3c]
  44169a:	hlt    
  44169b:	inc    ecx
  44169c:	sub    cl,BYTE PTR [ebx]
  44169e:	inc    edx
  44169f:	mov    BYTE PTR [ecx],ch
  4416a1:	pop    esi
  4416a2:	cmp    al,0x80
  4416a4:	and    ch,BYTE PTR [ecx]
  4416a6:	and    eax,0x60646821
  4416ab:	jl     0x441725
  4416ad:	je     0x44171f
  4416af:	or     al,0x91
  4416b1:	inc    ebx
  4416b2:	and    BYTE PTR [ebx+0x38],dl
  4416b5:	aam    0x1b
  4416b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4416b8:	sbb    al,0xe8
  4416ba:	in     al,dx
  4416bb:	lock hlt 
  4416bd:	jae    0x441678
  4416bf:	adc    BYTE PTR [ebp-0x7dfbbc02],cl
  4416c5:	aas    
  4416c6:	iret   
  4416c7:	rcl    edi,cl
  4416c9:	(bad)  [edx+ebp*8]
  4416cc:	ins    BYTE PTR es:[edi],dx
  4416cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4416ce:	sbb    esi,DWORD PTR [eax+0x36]
  4416d1:	clc    
  4416d2:	jbe    0x441722
  4416d4:	repz sbb BYTE PTR [edx-0x19],0x2c
  4416d9:	dec    esi
  4416da:	adc    ebp,DWORD PTR [ebx+0x1ea755fb]
  4416e0:	imul   ebp,DWORD PTR [esi],0x6bf7ff3
  4416e6:	mov    DWORD PTR [ebx+0x2],ecx
  4416e9:	or     eax,0x4b91e25f
  4416ee:	fisubr WORD PTR [ebx+ebp*1+0x77bd30a6]
  4416f5:	or     eax,0x88fc3876
  4416fa:	dec    eax
  4416fb:	cmc    
  4416fc:	out    0xdf,al
  4416fe:	sahf   
  4416ff:	pop    esp
  441700:	in     eax,0xaa
  441702:	shl    BYTE PTR [esi+ebp*8-0x3],0xf9
  441707:	cmc    
  441708:	icebp  
  441709:	lea    ecx,[ecx-0x3b627e7b]
  44170f:	rol    BYTE PTR [ebp-0x61],0xf4
  441713:	lahf   
  441714:	int3   
  441715:	adc    al,0xef
  441717:	imul   eax,esp,0x403c3834
  44171d:	iret   
  44171e:	or     eax,0xb011d944
  441723:	fwait
  441724:	and    eax,0x236c6988
  441729:	daa    
  44172a:	mov    al,ds:0xd2b43f62
  44172f:	xor    ecx,edx
  441731:	or     ch,BYTE PTR [ebx+0x60bf06c4]
  441737:	or     al,BYTE PTR [ebx+0x738fe868]
  44173d:	ja     0x4417ba
  44173f:	mov    eax,0x423f6bc6
  441744:	inc    esi
  441745:	dec    edx
  441746:	lds    edx,FWORD PTR [edi]
  441748:	mov    esi,0xedbe1bd3
  44174d:	daa    
  44174e:	mov    dl,0x14
  441750:	std    
  441751:	imul   ebx,DWORD PTR [eax],0xb
  441754:	sar    DWORD PTR [edx-0x7f],cl
  441757:	and    eax,0xdda36ad3
  44175c:	dec    edx
  44175d:	pop    ebp
  44175e:	popa   
  44175f:	sbb    edi,DWORD PTR [edx+eiz*2-0x3a]
  441763:	cmp    BYTE PTR [ecx-0x693a8704],cl
  441769:	lea    edx,[ecx-0x1ba56f18]
  44176f:	jne    0x441719
  441771:	lods   eax,DWORD PTR ds:[esi]
  441772:	mov    cl,0xb5
  441774:	push   edx
  441775:	ja     0x44172a
  441777:	cmp    eax,0x888480ac
  44177c:	mov    WORD PTR [ebx],ss
  44177e:	jmp    0x20f3b3cb
  441783:	and    ch,BYTE PTR [eax+esi*4+0x1ce933b4]
  44178a:	mov    ds:0xb2d28e43,al
  44178f:	add    cl,dl
  441791:	imul   ebx,DWORD PTR [eax-0x57a42dd4],0x1c
  441798:	cli    
  441799:	inc    ebx
  44179a:	fsubr  QWORD PTR [ecx-0x44]
  44179d:	inc    eax
  44179e:	add    eax,0xec13fc92
  4417a3:	adc    eax,edx
  4417a5:	ja     0x4417ce
  4417a7:	outs   dx,BYTE PTR ds:[esi]
  4417a8:	(bad)
  4417ad:	push   0x31
  4417af:	out    dx,eax
  4417b0:	(bad)  
  4417b1:	dec    edi
  4417b2:	lahf   
  4417b3:	sub    bl,BYTE PTR [ecx-0x6d]
  4417b6:	ds push ebp
  4417b8:	scas   eax,DWORD PTR es:[edi]
  4417b9:	push   cs
  4417ba:	addr16 mov edx,0xab73fef3
  4417c0:	fimul  DWORD PTR [ebp-0x7301e608]
  4417c6:	shl    DWORD PTR [edx+0x3990529d],0x6e
  4417cd:	clc    
  4417ce:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4417d0:	or     esi,esi
  4417d2:	dec    edx
  4417d3:	inc    esp
  4417d4:	std    
  4417d5:	push   es
  4417d6:	mov    edx,0xdc32e55c
  4417db:	and    bl,BYTE PTR [ebp-0x2ec92cc8]
  4417e1:	test   eax,0x3e6cfb0c
  4417e6:	test   esi,edx
  4417e8:	jl     0x441815
  4417ea:	fwait
  4417eb:	push   ecx
  4417ec:	rcr    BYTE PTR [edi+0x690320e0],0xd8
  4417f3:	mov    ebp,0xba78037d
  4417f8:	adc    edi,DWORD PTR [edx+eax*8+0xf]
  4417fc:	add    BYTE PTR [edx-0x39],0x9c
  441800:	dec    esi
  441801:	retf   
  441802:	test   al,0x25
  441804:	adc    BYTE PTR [edx+0x23],ch
  441807:	inc    edx
  441808:	xor    esi,DWORD PTR [esi+ecx*1-0x58fd3d6d]
  44180f:	loope  0x441811
  441811:	cdq    
  441812:	inc    ebx
  441813:	repnz sbb eax,0x7ba3ca77
  441819:	fcmovu st,st(7)
  44181b:	sar    DWORD PTR cs:[ebp-0x59f43e47],0xdd
  441823:	mov    edi,0xa6aaa103
  441828:	mov    ds:0xfde1e5e9,al
  44182d:	stc    
  44182e:	cmc    
  44182f:	icebp  
  441830:	adc    al,0xce
  441832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441833:	into   
  441834:	mov    ebp,0x99189e59
  441839:	imul   ebp,DWORD PTR gs:[ebp+0x71],0x8713cfe
  441841:	ror    al,0xcb
  441844:	or     DWORD PTR [eax+0x1d],eax
  441847:	fild   DWORD PTR [ecx]
  441849:	dec    eax
  44184a:	push   cs
  44184b:	jmp    0x44186e
  44184d:	pushf  
  44184e:	cmp    al,0x98
  441850:	enter  0x8386,0x7f
  441854:	pop    es
  441855:	dec    esp
  441856:	sbb    BYTE PTR [ecx],0xd1
  441859:	pusha  
  44185a:	pop    ds
  44185b:	(bad)  [edi-0x13b5d4a5]
  441861:	es xchg edi,eax
  441863:	lock mov dh,0x73
  441866:	test   dh,0x7b
  441869:	add    dl,bl
  44186b:	outs   dx,DWORD PTR ds:[esi]
  44186c:	cwde   
  44186d:	sub    al,0x9d
  44186f:	cwde   
  441870:	loop   0x441831
  441872:	fstp   TBYTE PTR [ebp-0x27509c4]
  441878:	das    
  441879:	xchg   BYTE PTR [ecx-0x38f87129],al
  44187f:	bound  esi,QWORD PTR [ecx-0x65]
  441882:	sub    ebx,esp
  441884:	push   edx
  441885:	inc    ebp
  441886:	mov    dh,0x5d
  441888:	add    BYTE PTR [ebp-0x6cd0b2fe],cl
  44188e:	adc    DWORD PTR [ebp-0x28],eax
  441891:	sbb    bh,BYTE PTR [ecx+0x1a]
  441894:	jno    0x441847
  441896:	cs in  al,dx
  441898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441899:	xor    dh,BYTE PTR [ebp-0x4f]
  44189c:	xor    al,0x84
  44189e:	xor    DWORD PTR [edx-0x80],eax
  4418a1:	fstp   DWORD PTR [esi-0x78]
  4418a4:	fldenv [edx+0xf]
  4418a7:	sti    
  4418a8:	fs icebp 
  4418aa:	push   esp
  4418ab:	daa    
  4418ac:	cmc    
  4418ad:	inc    eax
  4418ae:	xor    esi,esp
  4418b0:	mov    BYTE PTR [ebp+0x9],0xcc
  4418b4:	rcl    ah,0xd8
  4418b7:	lea    ecx,[edx+0x63d00e4]
  4418bd:	or     eax,DWORD PTR [edi]
  4418bf:	jne    0x441906
  4418c1:	cld    
  4418c2:	sub    edx,0x37
  4418c5:	enter  0x8d7d,0xd6
  4418c9:	push   edx
  4418ca:	sbb    edx,eax
  4418cc:	addr16 and ch,bl
  4418cf:	out    dx,eax
  4418d0:	repz jl 0x441889
  4418d3:	or     ecx,DWORD PTR [ecx+esi*4]
  4418d6:	pop    edx
  4418d7:	or     dl,BYTE PTR [eax-0x3c95e513]
  4418dd:	push   ecx
  4418de:	fwait
  4418df:	sbb    dh,BYTE PTR [esi-0x58015c9f]
  4418e5:	adc    ch,al
  4418e7:	cli    
  4418e8:	stc    
  4418e9:	cmc    
  4418ea:	(bad)  
  4418eb:	(bad)  
  4418ec:	push   ds
  4418ed:	repz mov esp,0xa52a2622
  4418f3:	addr16 ret 0x4735
  4418f7:	mov    bh,0xfc
  4418f9:	jle    0x4418f4
  4418fb:	pop    es
  4418fc:	jl     0x44192b
  4418fe:	call   0xa823:0x7096ed58
  441905:	out    dx,eax
  441906:	xor    DWORD PTR ds:0xce133d39,esp
  44190c:	or     al,0xb5
  44190e:	add    esi,ebx
  441910:	inc    ecx
  441911:	in     al,dx
  441912:	inc    ebp
  441913:	xchg   ebx,eax
  441914:	dec    ecx
  441915:	sub    al,0x76
  441917:	shr    BYTE PTR [eax-0x35],0xcb
  44191b:	(bad)  
  44191c:	xlat   BYTE PTR ds:[ebx]
  44191d:	ss iret 
  44191f:	or     eax,0x10e25fb8
  441924:	pop    ecx
  441925:	jecxz  0x4418c4
  441927:	imul   ebx,DWORD PTR [ecx],0xb
  44192a:	lods   al,BYTE PTR ds:[esi]
  44192b:	jle    0x441908
  44192d:	mov    eax,0x433a3d75
  441932:	push   edi
  441933:	dec    ebx
  441934:	dec    edi
  441935:	ficom  DWORD PTR [edx]
  441937:	stos   DWORD PTR es:[edi],eax
  441938:	shr    BYTE PTR [esi],cl
  44193a:	xchg   edi,eax
  44193b:	cmp    ah,ah
  44193d:	(bad)
  441942:	jnp    0x4419b2
  441944:	leave  
  441945:	or     eax,DWORD PTR [esi+0x1f]
  441948:	mov    edx,0x9da1a115
  44194d:	in     eax,0xae
  44194f:	jle    0x4418ea
  441951:	xor    al,0xf1
  441953:	sub    esi,DWORD PTR [esi-0x77]
  441956:	cmp    al,0xcc
  441958:	xchg   edi,eax
  441959:	adc    eax,0x4fd79a62
  44195e:	(bad)  
  44195f:	sub    al,0x9d
  441961:	cmp    dh,ah
  441963:	and    al,0x89
  441965:	sub    esi,esi
  441967:	les    ecx,FWORD PTR [ecx+0x697065d9]
  44196d:	bound  sp,DWORD PTR [edx]
  441970:	popa   
  441971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441972:	inc    esi
  441973:	xchg   ecx,eax
  441974:	ds hlt 
  441976:	test   BYTE PTR [ebx-0x32],bh
  441979:	sub    eax,0x89720785
  44197e:	in     eax,0x80
  441980:	adc    ebx,ecx
  441982:	pop    eax
  441983:	hlt    
  441984:	and    esp,ecx
  441986:	dec    esp
  441987:	in     eax,0x33
  441989:	jmp    0xd364b05a
  44198e:	sub    eax,0x570c742b
  441993:	fwait
  441994:	jo     0x441924
  441996:	sub    dl,ah
  441998:	push   edi
  441999:	(bad)  
  44199a:	cmp    dl,bh
  44199c:	mov    bh,0xee
  44199e:	dec    eax
  44199f:	xchg   edx,eax
  4419a0:	xor    ebx,DWORD PTR [ebp+0x202cde3b]
  4419a6:	sbb    al,0x6c
  4419a8:	scas   al,BYTE PTR es:[edi]
  4419a9:	pop    ss
  4419aa:	sub    eax,0x7a71f34f
  4419af:	jbe    0x44199c
  4419b1:	dec    ecx
  4419b2:	sub    cl,BYTE PTR [ecx+0x22]
  4419b5:	xchg   esi,eax
  4419b6:	adc    DWORD PTR [edi-0x15191dde],ebx
  4419bc:	out    dx,al
  4419bd:	xor    eax,0x2fe1ab3
  4419c2:	push   es
  4419c3:	mov    ebp,0x44c1804a
  4419c8:	xchg   esp,eax
  4419c9:	and    eax,0xe505981e
  4419ce:	jmp    0xfbe40bc0
  4419d3:	jbe    0x441a21
  4419d5:	or     DWORD PTR [eax-0x7a],ebx
  4419d8:	inc    esp
  4419d9:	in     eax,0x4b
  4419db:	cmc    
  4419dc:	adc    DWORD PTR ds:0x2c671f23,esp
  4419e2:	loopne 0x441a5d
  4419e4:	mov    cl,0x18
  4419e6:	jg     0x441a65
  4419e8:	in     al,0x8
  4419ea:	add    edx,DWORD PTR [esi+ebx*4-0x50dfe3e8]
  4419f1:	ins    DWORD PTR es:[edi],dx
  4419f2:	int3   
  4419f3:	mov    bl,0xf4
  4419f5:	xor    DWORD PTR [ebp-0x4d8fd04a],esi
  4419fb:	jecxz  0x441989
  4419fd:	pop    edx
  4419fe:	or     edx,DWORD PTR [eax+0x769612fd]
  441a04:	sti    
  441a05:	mov    al,ds:0xfbb4d36a
  441a0a:	aaa    
  441a0b:	retf   0xb302
  441a0e:	les    ebx,FWORD PTR [esi]
  441a10:	repnz add DWORD PTR [edi+eax*1+0x52324b21],esp
  441a18:	and    al,0xa5
  441a1a:	ja     0x4419f2
  441a1c:	mov    cl,0x73
  441a1e:	mov    ds:0xdb4a0245,al
  441a23:	sbb    ebp,DWORD PTR [edx+0x2fa12cb5]
  441a29:	mov    ah,BYTE PTR [ecx+ebp*1]
  441a2c:	sub    eax,0xd944b631
  441a31:	inc    ecx
  441a32:	xor    DWORD PTR [eax],ecx
  441a34:	mov    BYTE PTR [ecx+ecx*4],0xd8
  441a38:	lahf   
  441a39:	popa   
  441a3a:	jne    0x441aa5
  441a3c:	ins    DWORD PTR es:[edi],dx
  441a3d:	clc    
  441a3e:	and    BYTE PTR [ebp-0x26ae3b0a],ch
  441a44:	sub    al,BYTE PTR [eax+eiz*4+0x9]
  441a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441a49:	stos   DWORD PTR es:[edi],eax
  441a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a4b:	aad    0x25
  441a4d:	cwde   
  441a4e:	jecxz  0x441a71
  441a50:	lods   al,BYTE PTR ds:[esi]
  441a51:	and    eax,0xd65829f3
  441a56:	add    ecx,ecx
  441a58:	ins    BYTE PTR es:[edi],dx
  441a59:	les    esi,FWORD PTR [eax-0x33]
  441a5c:	push   esi
  441a5d:	test   al,0xa4
  441a5f:	aam    0x2e
  441a61:	xchg   eax,esp
  441a63:	ds ja  0x441a5a
  441a66:	xchg   ecx,eax
  441a67:	jbe    0x441a71
  441a69:	ret    0x69f
  441a6c:	sbb    DWORD PTR [esi+ebx*8],0x63
  441a70:	dec    edx
  441a71:	mov    WORD PTR [edx-0x13a14c51],gs
  441a77:	lea    ecx,[ecx-0x497de97b]
  441a7d:	mov    cl,BYTE PTR [esi-0x6b8d6908]
  441a83:	push   edi
  441a84:	pop    ecx
  441a85:	push   ebp
  441a86:	daa    
  441a87:	test   DWORD PTR [edx+0x7d],0xcac72efb
  441a8e:	into   
  441a8f:	rcr    BYTE PTR [ebp-0x40],cl
  441a92:	cdq    
  441a93:	sbb    al,0xd4
  441a95:	imul   esp,DWORD PTR [esi-0x20],0xb5b1ad41
  441a9c:	mov    ecx,0x9b299436
  441aa1:	inc    esi
  441aa2:	xchg   esp,eax
  441aa3:	(bad)  [ecx-0x47ee53aa]
  441aa9:	xchg   DWORD PTR [edx+0x4b4d2c40],esp
  441aaf:	inc    edi
  441ab0:	aas    
  441ab1:	add    al,0xd4
  441ab3:	inc    ecx
  441ab4:	mov    DWORD PTR [eax],esi
  441ab6:	push   edi
  441ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441ab8:	cmp    al,0xe0
  441aba:	jmp    0x441b28
  441abc:	cmp    eax,esi
  441abe:	hlt    
  441abf:	clc    
  441ac0:	ja     0x441b17
  441ac2:	in     al,0x8b
  441ac4:	jge    0x441a91
  441ac6:	dec    esi
  441ac7:	sahf   
  441ac8:	jae    0x441b22
  441aca:	xchg   edx,eax
  441acb:	rcl    BYTE PTR [di-0x51],1
  441acf:	jmp    0x902bd9a8
  441ad4:	icebp  
  441ad5:	mov    BYTE PTR [edx-0x15],dl
  441ad8:	test   BYTE PTR [esi-0x9],dl
  441adb:	sbb    BYTE PTR [ebp+0x27],bl
  441ade:	push   ebx
  441adf:	fwait
  441ae0:	push   ss
  441ae1:	or     eax,0x1abf6550
  441ae6:	jns    0x441b27
  441ae8:	add    ecx,DWORD PTR [edi+0x53d5e247]
  441aee:	retf   0x221e
  441af1:	sub    ah,BYTE PTR es:[ebp-0x4c4e2999]
  441af8:	icebp  
  441af9:	jp     0x441b10
  441afb:	adc    ecx,DWORD PTR [esp+ecx*2-0x6a7653b]
  441b02:	sahf   
  441b03:	loopne 0x441b3c
  441b05:	mov    al,ds:0x6cbefd60
  441b0a:	cmc    
  441b0b:	rol    BYTE PTR [edi+0x55515d49],0x5e
  441b12:	jp     0x441b28
  441b14:	lock imul edx,esp,0xffffffdb
  441b18:	xlat   BYTE PTR ds:[ebx]
  441b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441b1a:	jne    0x441b00
  441b1c:	mov    bl,0x79
  441b1e:	mov    BYTE PTR [ebx+eax*8],dl
  441b21:	add    DWORD PTR [ebp+eax*1+0x36b009d3],ebx
  441b28:	sub    bh,0x85
  441b2b:	fcom   st(4)
  441b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441b2e:	jbe    0x441abb
  441b30:	xor    al,0x88
  441b32:	or     eax,DWORD PTR [edx+ebx*1-0x3c]
  441b36:	push   es
  441b37:	lahf   
  441b38:	or     esp,edx
  441b3a:	es mov bh,0x3b
  441b3d:	xchg   DWORD PTR [ebp-0x7b],edi
  441b40:	test   BYTE PTR [eax+0x13eeca08],al
  441b46:	int    0x1f
  441b48:	scas   al,BYTE PTR es:[edi]
  441b49:	add    BYTE PTR [esi-0x66625ce5],bh
  441b4f:	jmp    0x404395fe
  441b54:	mov    edx,0x8d76c309
  441b59:	xlat   BYTE PTR ds:[ebx]
  441b5a:	jle    0x441b6f
  441b5c:	(bad)  [edx-0x2e]
  441b5f:	adc    ch,bl
  441b61:	out    dx,al
  441b62:	cmp    BYTE PTR [ebx+0x23],ch
  441b65:	(bad)  
  441b66:	cmp    al,0xb9
  441b68:	ror    DWORD PTR [esi],1
  441b6a:	les    ecx,FWORD PTR [ebp-0x40]
  441b6d:	jge    0x441b16
  441b6f:	push   0xf8225a5e
  441b74:	or     eax,0x7755fc3e
  441b79:	cmp    bh,BYTE PTR [edx+0x9]
  441b7c:	shl    DWORD PTR [eax+0x7],0xdd
  441b80:	push   eax
  441b81:	leave  
  441b82:	je     0x441b1d
  441b84:	push   eax
  441b85:	push   edi
  441b86:	push   ebx
  441b87:	cmp    esp,ecx
  441b89:	push   0x3cf428ee
  441b8e:	xor    ebp,DWORD PTR [edi]
  441b90:	cmp    eax,0x686c7083
  441b95:	adc    dl,bl
  441b97:	mov    bh,0x2c
  441b99:	out    0x47,al
  441b9b:	cmp    bh,BYTE PTR [edi+0x4c3ffa30]
  441ba1:	cs xchg edx,eax
  441ba3:	adc    BYTE PTR [ebx],bl
  441ba5:	pop    ss
  441ba6:	adc    ebp,DWORD PTR [edi]
  441ba8:	sub    esp,DWORD PTR [edi]
  441baa:	and    ebp,DWORD PTR [edx+0x66]
  441bad:	bound  edi,QWORD PTR [esi+0x7a]
  441bb0:	out    dx,eax
  441bb1:	xor    eax,0xe626452e
  441bb6:	mov    eax,0xd2deb296
  441bbb:	out    0xea,al
  441bbd:	xchg   dl,dh
  441bbf:	out    0xfa,al
  441bc1:	(bad)  
  441bc2:	push   0x3196e206
  441bc7:	xor    bl,BYTE PTR ss:[eax-0x70]
  441bcb:	add    DWORD PTR [esi-0x5c],edx
  441bce:	in     eax,dx
  441bcf:	push   0x2d
  441bd1:	jecxz  0x441c4f
  441bd3:	mov    esp,0x1488a19
  441bd8:	xchg   BYTE PTR [eax+0x11],al
  441bdb:	call   0x6f18:0x895133f7
  441be2:	lods   eax,DWORD PTR ds:[esi]
  441be3:	in     al,0x73
  441be5:	xor    al,0xf0
  441be7:	jne    0x441c2e
  441be9:	in     al,dx
  441bea:	add    DWORD PTR [ecx+0x18],0xffffff9f
  441bee:	dec    ecx
  441bef:	sbb    BYTE PTR [ecx+0x3023c6e6],ah
  441bf5:	xor    al,0xb1
  441bf7:	imul   eax,DWORD PTR [ebx],0x530fbe7c
  441bfd:	ins    DWORD PTR es:[edi],dx
  441bfe:	or     esp,edi
  441c00:	lahf   
  441c01:	in     al,0xe4
  441c03:	loopne 0x441baf
  441c05:	(bad)  
  441c06:	xlat   BYTE PTR ds:[ebx]
  441c07:	call   0x3f800782
  441c0c:	inc    ebx
  441c0d:	inc    edi
  441c0e:	mov    BYTE PTR [edx],0x8f
  441c11:	push   es
  441c12:	test   DWORD PTR [edi-0x2],eax
  441c15:	adc    eax,0x7a2460a8
  441c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441c1b:	jg     0x441c43
  441c1d:	imul   esi,DWORD PTR [ebp-0x59e7b5e9],0xffffffdb
  441c24:	stos   DWORD PTR es:[edi],eax
  441c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441c26:	mov    eax,ds:0xe77aa2e1
  441c2b:	pusha  
  441c2c:	leave  
  441c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441c2e:	je     0x441c19
  441c30:	imul   esi,DWORD PTR [esi-0x39e75af4],0xb50b8d04
  441c3a:	adc    edx,DWORD PTR [ecx+0x30fa9296]
  441c40:	sub    DWORD PTR ds:0x116dc80a,0x2b01dcf
  441c4a:	mov    esp,0x9b9fa839
  441c4f:	jecxz  0x441c7a
  441c51:	test   al,0xfd
  441c53:	cmp    eax,0x60c90b88
  441c58:	and    DWORD PTR [edi],0xffffffc5
  441c5b:	fwait
  441c5c:	into   
  441c5d:	sub    esp,ecx
  441c5f:	mov    ds:0x972ae80f,eax
  441c64:	mov    WORD PTR ds:[edx],fs
  441c67:	(bad)  
  441c68:	hlt    
  441c69:	(bad)  
  441c6a:	jnp    0x441c45
  441c6c:	add    al,0xd6
  441c6e:	lahf   
  441c6f:	retf   
  441c70:	ja     0x441c2a
  441c72:	pop    ebx
  441c73:	push   esp
  441c74:	push   eax
  441c75:	xor    BYTE PTR [ebx-0x4d],dh
  441c78:	sti    
  441c79:	xor    edx,DWORD PTR [esi-0x75850003]
  441c7f:	cli    
  441c80:	fwait
  441c81:	sbb    eax,0x4ef362d7
  441c86:	pushf  
  441c87:	pop    ebp
  441c88:	dec    ebp
  441c89:	dec    ecx
  441c8a:	cmp    ebx,eax
  441c8c:	sbb    al,dh
  441c8e:	mov    esi,0xdd6bade
  441c93:	xchg   ecx,eax
  441c94:	xchg   ebp,eax
  441c95:	repz popf 
  441c97:	sub    dh,al
  441c99:	jno    0x441c9a
  441c9b:	pop    ecx
  441c9c:	in     eax,0x4a
  441c9e:	inc    edx
  441c9f:	ds dec esi
  441ca1:	mov    ecx,ds
  441ca3:	pop    edx
  441ca4:	cwde   
  441ca5:	xor    DWORD PTR [esi-0x50],edx
  441ca8:	jecxz  0x441d0a
  441caa:	std    
  441cab:	jp     0x441c9a
  441cad:	inc    eax
  441cae:	cmp    edx,DWORD PTR [ecx-0x1b]
  441cb1:	jg     0x441cbf
  441cb3:	or     BYTE PTR [eax+eax*1],al
  441cb6:	sbb    al,0x18
  441cb8:	adc    al,0x10
  441cba:	sub    al,0x28
  441cbc:	and    al,0x20
  441cbe:	cmp    al,0x38
  441cc0:	lods   eax,DWORD PTR ds:[esi]
  441cc1:	ja     0x441caf
  441cc3:	xchg   esp,esp
  441cc5:	xchg   edi,eax
  441cc6:	add    al,0x82
  441cc8:	aas    
  441cc9:	iret   
  441cca:	rcl    edi,cl
  441ccc:	fistp  DWORD PTR [eax]
  441cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441ccf:	or     ebp,edx
  441cd1:	out    dx,eax
  441cd2:	repz div DWORD PTR [eax-0x46]
  441cd6:	or     ecx,DWORD PTR [esi+0x5a98ff4e]
  441cdc:	adc    ebx,DWORD PTR [esi+ebp*2]
  441cdf:	(bad)  
  441ce0:	push   edi
  441ce1:	scas   eax,DWORD PTR es:[edi]
  441ce2:	add    ah,BYTE PTR [ecx-0x45]
  441ce5:	out    0xa4,al
  441ce7:	nop
  441ce8:	(bad)  
  441ce9:	jmp    0x5f9f:0xedf1f8a4
  441cf0:	jmp    0x3632:0x2eca63e5
  441cf7:	cmp    dh,BYTE PTR [ebp-0x7552ea50]
  441cfd:	dec    eax
  441cfe:	in     eax,dx
  441cff:	pop    esp
  441d00:	call   0x3960:0xaa4f1140
  441d07:	jge    0x441ce2
  441d09:	push   ss
  441d0a:	ret    0xbec2
  441d0d:	(bad)  
  441d0e:	lea    ebx,[ebp-0x28]
  441d11:	adc    al,dl
  441d13:	xchg   ebx,eax
  441d14:	imul   eax,esp,0xa36d541c
  441d1a:	popa   
  441d1b:	fdiv   QWORD PTR [edi+0x9c93df9]
  441d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441d22:	rol    DWORD PTR ds:0x25d70abc,0x80
  441d29:	cmp    bh,ah
  441d2b:	cmp    eax,0x66a47a2f
  441d30:	jmp    0x441d9b
  441d32:	xlat   BYTE PTR ds:[ebx]
  441d33:	cmp    bh,BYTE PTR [ecx-0x6c2f4f4c]
  441d39:	dec    ebx
  441d3a:	(bad)  
  441d3b:	es lahf 
  441d3d:	loopne 0x441d69
  441d3f:	xchg   DWORD PTR [esi+edi*1-0x61],esi
  441d43:	or     al,dl
  441d45:	push   ebx
  441d46:	leave  
  441d47:	or     esp,DWORD PTR [edx-0x5dfc26e1]
  441d4d:	or     al,0xe9
  441d4f:	and    esi,DWORD PTR [edx-0x76d065c2]
  441d55:	cmp    DWORD PTR [ebp+0xd],0xdb916ec7
  441d5c:	jb     0x441d75
  441d5e:	out    dx,eax
  441d5f:	mov    ecx,0x3ceef7b6
  441d64:	jne    0x441d60
  441d66:	xor    BYTE PTR [ecx-0x33f17c0c],bl
  441d6c:	jns    0x441d88
  441d6e:	jo     0x441d34
  441d70:	pop    esi
  441d71:	ins    DWORD PTR es:[edi],dx
  441d72:	imul   esp,DWORD PTR [ebp+0x61],0x7175797d
  441d79:	mov    eax,0x484cb0b4
  441d7e:	inc    esp
  441d7f:	inc    eax
  441d80:	hlt    
  441d81:	xor    eax,0xa4a09ca8
  441d86:	imul   esp,DWORD PTR [eax+0x7c],0x78
  441d8a:	je     0x441dfc
  441d8c:	or     al,0x8
  441d8e:	add    al,0x0
  441d90:	test   DWORD PTR [edi+0x34],ebx
  441d93:	or     al,0x7f
  441d95:	scas   eax,DWORD PTR es:[edi]
  441d96:	adc    bl,dl
  441d98:	push   edi
  441d99:	dec    edi
  441d9a:	sub    DWORD PTR [edi+0x4c],ebx
  441d9d:	dec    eax
  441d9e:	push   ebx
  441d9f:	bound  edi,QWORD PTR [eax+edi*1]
  441da2:	xor    al,0x46
  441da4:	xchg   esi,eax
  441da5:	cmp    edx,DWORD PTR [eax-0x66]
  441da8:	(bad)  
  441daa:	mov    ds:0x7ae72fe7,eax
  441daf:	cmp    ebx,esp
  441db1:	outs   dx,BYTE PTR ds:[esi]
  441db2:	xor    eax,0x8341fa80
  441db7:	push   es
  441db8:	pop    ebp
  441db9:	mov    ds,edi
  441dbb:	mov    dl,0x6f
  441dbd:	mov    edi,0xfaf61a36
  441dc2:	inc    BYTE PTR [edx]
  441dc4:	pop    esi
  441dc5:	add    DWORD PTR [ebp+edi*1-0x2afe77f2],0xffffffd9
  441dcd:	fucom  st(1)
  441dcf:	push   0x9da13dac
  441dd4:	add    edi,edx
  441dd6:	add    DWORD PTR ds:0x589a0863,eax
  441ddc:	ror    DWORD PTR [edx+ebp*4+0x70],0x8
  441de1:	mov    dl,0xc
  441de3:	xor    DWORD PTR [edx],edx
  441de5:	ud2    
  441de7:	jnp    0x441e21
  441de9:	adc    al,0x8d
  441deb:	dec    ebp
  441dec:	rcr    BYTE PTR [ebx-0x5fe61faf],0x3f
  441df3:	sub    BYTE PTR [ecx+edi*4],ch
  441df6:	jno    0x441dbc
  441df8:	mov    edi,0x8bfb278e
  441dfd:	or     ecx,DWORD PTR [esi+eax*2-0x2ca56521]
  441e04:	hlt    
  441e05:	and    al,0xe0
  441e07:	outs   dx,BYTE PTR ds:[esi]
  441e08:	out    0xcb,eax
  441e0a:	sbb    eax,0x12c83f3b
  441e0f:	sbb    DWORD PTR ds:0x42c212d8,0xffffff9d
  441e16:	push   edi
  441e17:	loop   0x441e8c
  441e19:	into   
  441e1a:	mov    eax,0xb9c9cddc
  441e1f:	inc    ebx
  441e20:	mov    esi,0xba4b3f46
  441e25:	and    DWORD PTR [edi+0x3fed9da1],esi
  441e2b:	xchg   edx,eax
  441e2c:	mov    ch,0x6b
  441e2e:	sub    al,0x31
  441e30:	xor    eax,0xca3d39
  441e35:	mov    ebp,0xd2a514c4
  441e3a:	adc    BYTE PTR [ecx+0x24e478ee],dl
  441e40:	xchg   ecx,eax
  441e41:	repnz cmp BYTE PTR [ecx+0xe],dh
  441e45:	rol    DWORD PTR [ebp+ecx*8+0x5],0x90
  441e4a:	fild   DWORD PTR [ecx]
  441e4c:	test   al,0xd7
  441e4e:	and    ch,BYTE PTR [ecx+eiz*8+0x29]
  441e52:	nop
  441e53:	push   DWORD PTR ds:0x84d50b8c
  441e59:	add    eax,0xe9677cc5
  441e5e:	dec    eax
  441e5f:	pop    ebx
  441e60:	cs mov edi,0x90b7129c
  441e66:	push   es
  441e67:	xchg   ebx,eax
  441e68:	lock cmp bh,BYTE PTR [edi+0x78]
  441e6c:	pop    ebx
  441e6d:	add    al,0x76
  441e6f:	retf   0x58
  441e72:	int3   
  441e73:	int3   
  441e74:	int3   
  441e75:	int3   
  441e76:	int3   
  441e77:	int3   
  441e78:	int3   
  441e79:	int3   
  441e7a:	int3   
  441e7b:	int3   
  441e7c:	int3   
  441e7d:	int3   
  441e7e:	int3   
  441e7f:	int3   
  441e80:	cmp    DWORD PTR ds:0x45077c,0x0
  441e87:	je     0x441eb6
  441e89:	push   ebp
  441e8a:	mov    ebp,esp
  441e8c:	sub    esp,0x8
  441e8f:	and    esp,0xfffffff8
  441e92:	fstp   QWORD PTR [esp]
  441e95:	cvttsd2si eax,QWORD PTR [esp]
  441e9a:	leave  
  441e9b:	ret    
  441e9c:	cmp    DWORD PTR ds:0x45077c,0x0
  441ea3:	je     0x441eb6
  441ea5:	sub    esp,0x4
  441ea8:	fnstcw WORD PTR [esp]
  441eab:	pop    eax
  441eac:	and    ax,0x7f
  441eb0:	cmp    ax,0x7f
  441eb4:	je     0x441e89
  441eb6:	push   ebp
  441eb7:	mov    ebp,esp
  441eb9:	sub    esp,0x20
  441ebc:	and    esp,0xfffffff0
  441ebf:	fld    st(0)
  441ec1:	fst    DWORD PTR [esp+0x18]
  441ec5:	fistp  QWORD PTR [esp+0x10]
  441ec9:	fild   QWORD PTR [esp+0x10]
  441ecd:	mov    edx,DWORD PTR [esp+0x18]
  441ed1:	mov    eax,DWORD PTR [esp+0x10]
  441ed5:	test   eax,eax
  441ed7:	je     0x441f15
  441ed9:	fsubp  st(1),st
  441edb:	test   edx,edx
  441edd:	jns    0x441efd
  441edf:	fstp   DWORD PTR [esp]
  441ee2:	mov    ecx,DWORD PTR [esp]
  441ee5:	xor    ecx,0x80000000
  441eeb:	add    ecx,0x7fffffff
  441ef1:	adc    eax,0x0
  441ef4:	mov    edx,DWORD PTR [esp+0x14]
  441ef8:	adc    edx,0x0
  441efb:	jmp    0x441f29
  441efd:	fstp   DWORD PTR [esp]
  441f00:	mov    ecx,DWORD PTR [esp]
  441f03:	add    ecx,0x7fffffff
  441f09:	sbb    eax,0x0
  441f0c:	mov    edx,DWORD PTR [esp+0x14]
  441f10:	sbb    edx,0x0
  441f13:	jmp    0x441f29
  441f15:	mov    edx,DWORD PTR [esp+0x14]
  441f19:	test   edx,0x7fffffff
  441f1f:	jne    0x441ed9
  441f21:	fstp   DWORD PTR [esp+0x18]
  441f25:	fstp   DWORD PTR [esp+0x18]
  441f29:	leave  
  441f2a:	ret    
  441f2b:	int3   
  441f2c:	int3   
  441f2d:	int3   
  441f2e:	int3   
  441f2f:	int3   
  441f30:	cmp    DWORD PTR ds:0x450760,0x0
  441f37:	je     0x441fbf
  441f3d:	sub    esp,0x8
  441f40:	stmxcsr DWORD PTR [esp+0x4]
  441f45:	mov    eax,DWORD PTR [esp+0x4]
  441f49:	and    eax,0x7f80
  441f4e:	cmp    eax,0x1f80
  441f53:	jne    0x441f64
  441f55:	fnstcw WORD PTR [esp]
  441f58:	mov    ax,WORD PTR [esp]
  441f5c:	and    ax,0x7f
  441f60:	cmp    ax,0x7f
  441f64:	lea    esp,[esp+0x8]
  441f68:	jne    0x441fbf
  441f6a:	jmp    0x4421b8
  441f6f:	nop
  441f70:	cmp    DWORD PTR ds:0x450760,0x0
  441f77:	je     0x441fab
  441f79:	sub    esp,0x8
  441f7c:	stmxcsr DWORD PTR [esp+0x4]
  441f81:	mov    eax,DWORD PTR [esp+0x4]
  441f85:	and    eax,0x7f80
  441f8a:	cmp    eax,0x1f80
  441f8f:	jne    0x441fa0
  441f91:	fnstcw WORD PTR [esp]
  441f94:	mov    ax,WORD PTR [esp]
  441f98:	and    ax,0x7f
  441f9c:	cmp    ax,0x7f
  441fa0:	lea    esp,[esp+0x8]
  441fa4:	jne    0x441fab
  441fa6:	jmp    0x4421a0
  441fab:	sub    esp,0xc
  441fae:	fst    QWORD PTR [esp]
  441fb1:	call   0x40f078
  441fb6:	call   0x441fc8
  441fbb:	add    esp,0xc
  441fbe:	ret    
  441fbf:	lea    edx,[esp+0x4]
  441fc3:	call   0x40f035
  441fc8:	push   edx
  441fc9:	fstcw  WORD PTR [esp]
  441fcd:	je     0x44201f
  441fcf:	cmp    WORD PTR [esp],0x27f
  441fd5:	je     0x441fdd
  441fd7:	fldcw  WORD PTR ds:0x4451d8
  441fdd:	fcos   
  441fdf:	fstsw  ax
  441fe2:	sahf   
  441fe3:	jp     0x442002
  441fe5:	cmp    DWORD PTR ds:0x44df7c,0x0
  441fec:	jne    0x40f08e
  441ff2:	mov    edx,0x12
  441ff7:	lea    ecx,ds:0x44d960
  441ffd:	jmp    0x40f09b
  442002:	fld    TBYTE PTR ds:0x4451da
  442008:	fxch   st(1)
  44200a:	fprem1 
  44200c:	fstsw  ax
  44200f:	sahf   
  442010:	jp     0x44200a
  442012:	fstp   st(1)
  442014:	fcos   
  442016:	jmp    0x441fe5
  442018:	call   0x40f01c
  44201d:	jmp    0x44203a
  44201f:	test   eax,0xfffff
  442024:	jne    0x442018
  442026:	cmp    DWORD PTR [esp+0x8],0x0
  44202b:	jne    0x442018
  44202d:	fstp   st(0)
  44202f:	fld    TBYTE PTR ds:0x4451a0
  442035:	mov    eax,0x1
  44203a:	cmp    DWORD PTR ds:0x44df7c,0x0
  442041:	jne    0x40f08e
  442047:	mov    edx,0x12
  44204c:	lea    ecx,ds:0x44d960
  442052:	call   0x40efa7
  442057:	pop    edx
  442058:	ret    
  442059:	int3   
  44205a:	int3   
  44205b:	int3   
  44205c:	int3   
  44205d:	int3   
  44205e:	int3   
  44205f:	int3   
  442060:	cmp    DWORD PTR ds:0x450760,0x0
  442067:	je     0x4420ef
  44206d:	sub    esp,0x8
  442070:	stmxcsr DWORD PTR [esp+0x4]
  442075:	mov    eax,DWORD PTR [esp+0x4]
  442079:	and    eax,0x7f80
  44207e:	cmp    eax,0x1f80
  442083:	jne    0x442094
  442085:	fnstcw WORD PTR [esp]
  442088:	mov    ax,WORD PTR [esp]
  44208c:	and    ax,0x7f
  442090:	cmp    ax,0x7f
  442094:	lea    esp,[esp+0x8]
  442098:	jne    0x4420ef
  44209a:	jmp    0x442368
  44209f:	nop
  4420a0:	cmp    DWORD PTR ds:0x450760,0x0
  4420a7:	je     0x4420db
  4420a9:	sub    esp,0x8
  4420ac:	stmxcsr DWORD PTR [esp+0x4]
  4420b1:	mov    eax,DWORD PTR [esp+0x4]
  4420b5:	and    eax,0x7f80
  4420ba:	cmp    eax,0x1f80
  4420bf:	jne    0x4420d0
  4420c1:	fnstcw WORD PTR [esp]
  4420c4:	mov    ax,WORD PTR [esp]
  4420c8:	and    ax,0x7f
  4420cc:	cmp    ax,0x7f
  4420d0:	lea    esp,[esp+0x8]
  4420d4:	jne    0x4420db
  4420d6:	jmp    0x442350
  4420db:	sub    esp,0xc
  4420de:	fst    QWORD PTR [esp]
  4420e1:	call   0x40f078
  4420e6:	call   0x4420f8
  4420eb:	add    esp,0xc
  4420ee:	ret    
  4420ef:	lea    edx,[esp+0x4]
  4420f3:	call   0x40f035
  4420f8:	push   edx
  4420f9:	fstcw  WORD PTR [esp]
  4420fd:	je     0x44214f
  4420ff:	cmp    WORD PTR [esp],0x27f
  442105:	je     0x44210d
  442107:	fldcw  WORD PTR ds:0x4451d8
  44210d:	fsin   
  44210f:	fstsw  ax
  442112:	sahf   
  442113:	jp     0x442132
  442115:	cmp    DWORD PTR ds:0x44df7c,0x0
  44211c:	jne    0x40f08e
  442122:	mov    edx,0x1e
  442127:	lea    ecx,ds:0x44d970
  44212d:	jmp    0x40f09b
  442132:	fld    TBYTE PTR ds:0x4451da
  442138:	fxch   st(1)
  44213a:	fprem1 
  44213c:	fstsw  ax
  44213f:	sahf   
  442140:	jp     0x44213a
  442142:	fstp   st(1)
  442144:	fsin   
  442146:	jmp    0x442115
  442148:	call   0x40f01c
  44214d:	jmp    0x44216a
  44214f:	test   eax,0xfffff
  442154:	jne    0x442148
  442156:	cmp    DWORD PTR [esp+0x8],0x0
  44215b:	jne    0x442148
  44215d:	fstp   st(0)
  44215f:	fld    TBYTE PTR ds:0x4451a0
  442165:	mov    eax,0x1
  44216a:	cmp    DWORD PTR ds:0x44df7c,0x0
  442171:	jne    0x40f08e
  442177:	mov    edx,0x1e
  44217c:	lea    ecx,ds:0x44d970
  442182:	call   0x40efa7
  442187:	pop    edx
  442188:	ret    
  442189:	push   0xa
  44218b:	call   DWORD PTR ds:0x443158
  442191:	mov    ds:0x450760,eax
  442196:	xor    eax,eax
  442198:	ret    
  442199:	int3   
  44219a:	int3   
  44219b:	int3   
  44219c:	int3   
  44219d:	int3   
  44219e:	int3   
  44219f:	int3   
  4421a0:	push   ebp
  4421a1:	mov    ebp,esp
  4421a3:	sub    esp,0x8
  4421a6:	and    esp,0xfffffff0
  4421a9:	fstp   QWORD PTR [esp]
  4421ac:	movq   xmm0,QWORD PTR [esp]
  4421b1:	call   0x4421be
  4421b6:	leave  
  4421b7:	ret    
  4421b8:	movlpd xmm0,QWORD PTR [esp+0x4]
  4421be:	pextrw eax,xmm0,0x3
  4421c3:	and    ax,0x7fff
  4421c7:	sub    ax,0x3030
  4421cb:	cmp    ax,0x10c5
  4421cf:	ja     0x442317
  4421d5:	movlpd xmm1,QWORD PTR ds:0x448210
  4421dd:	mulsd  xmm1,xmm0
  4421e1:	movlpd xmm2,QWORD PTR ds:0x448218
  4421e9:	cvtsd2si edx,xmm1
  4421ed:	addsd  xmm1,xmm2
  4421f1:	movlpd xmm3,QWORD PTR ds:0x448230
  4421f9:	subsd  xmm1,xmm2
  4421fd:	movapd xmm2,XMMWORD PTR ds:0x448220
  442205:	mulsd  xmm3,xmm1
  442209:	unpcklpd xmm1,xmm1
  44220d:	add    edx,0x1c7610
  442213:	movsd  xmm4,xmm0
  442217:	and    edx,0x3f
  44221a:	movapd xmm5,XMMWORD PTR ds:0x448200
  442222:	lea    eax,ds:0x4479d0
  442228:	shl    edx,0x5
  44222b:	add    eax,edx
  44222d:	mulpd  xmm2,xmm1
  442231:	subsd  xmm0,xmm3
  442235:	mulsd  xmm1,QWORD PTR ds:0x448238
  44223d:	subsd  xmm4,xmm3
  442241:	movlpd xmm7,QWORD PTR [eax+0x8]
  442246:	unpcklpd xmm0,xmm0
  44224a:	movsd  xmm3,xmm4
  44224e:	subsd  xmm4,xmm2
  442252:	mulpd  xmm5,xmm0
  442256:	subpd  xmm0,xmm2
  44225a:	movapd xmm6,XMMWORD PTR ds:0x4481e0
  442262:	mulsd  xmm7,xmm4
  442266:	subsd  xmm3,xmm4
  44226a:	mulpd  xmm5,xmm0
  44226e:	mulpd  xmm0,xmm0
  442272:	subsd  xmm3,xmm2
  442276:	movapd xmm2,XMMWORD PTR [eax]
  44227a:	subsd  xmm1,xmm3
  44227e:	movlpd xmm3,QWORD PTR [eax+0x18]
  442283:	addsd  xmm2,xmm3
  442287:	subsd  xmm7,xmm2
  44228b:	mulsd  xmm2,xmm4
  44228f:	mulpd  xmm6,xmm0
  442293:	mulsd  xmm3,xmm4
  442297:	mulpd  xmm2,xmm0
  44229b:	mulpd  xmm0,xmm0
  44229f:	addpd  xmm5,XMMWORD PTR ds:0x4481f0
  4422a7:	mulsd  xmm4,QWORD PTR [eax]
  4422ab:	addpd  xmm6,XMMWORD PTR ds:0x4481d0
  4422b3:	mulpd  xmm5,xmm0
  4422b7:	movsd  xmm0,xmm3
  4422bb:	addsd  xmm3,QWORD PTR [eax+0x8]
  4422c0:	mulsd  xmm1,xmm7
  4422c4:	movsd  xmm7,xmm4
  4422c8:	addsd  xmm4,xmm3
  4422cc:	addpd  xmm6,xmm5
  4422d0:	movlpd xmm5,QWORD PTR [eax+0x8]
  4422d5:	subsd  xmm5,xmm3
  4422d9:	subsd  xmm3,xmm4
  4422dd:	addsd  xmm1,QWORD PTR [eax+0x10]
  4422e2:	mulpd  xmm6,xmm2
  4422e6:	addsd  xmm5,xmm0
  4422ea:	addsd  xmm3,xmm7
  4422ee:	addsd  xmm1,xmm5
  4422f2:	addsd  xmm1,xmm3
  4422f6:	addsd  xmm1,xmm6
  4422fa:	unpckhpd xmm6,xmm6
  4422fe:	addsd  xmm1,xmm6
  442302:	sub    esp,0x10
  442305:	addsd  xmm4,xmm1
  442309:	movlpd QWORD PTR [esp+0x4],xmm4
  44230f:	fld    QWORD PTR [esp+0x4]
  442313:	add    esp,0x10
  442316:	ret    
  442317:	jg     0x442344
  442319:	pextrw eax,xmm0,0x3
  44231e:	and    ax,0x7fff
  442322:	pinsrw xmm0,eax,0x3
  442327:	sub    esp,0x10
  44232a:	movlpd xmm1,QWORD PTR ds:0x448260
  442332:	subsd  xmm1,xmm0
  442336:	movlpd QWORD PTR [esp+0x4],xmm1
  44233c:	fld    QWORD PTR [esp+0x4]
  442340:	add    esp,0x10
  442343:	ret    
  442344:	jmp    0x441fbf
  442349:	lea    ecx,[ecx+0x0]
  44234c:	int3   
  44234d:	int3   
  44234e:	int3   
  44234f:	int3   
  442350:	push   ebp
  442351:	mov    ebp,esp
  442353:	sub    esp,0x8
  442356:	and    esp,0xfffffff0
  442359:	fstp   QWORD PTR [esp]
  44235c:	movq   xmm0,QWORD PTR [esp]
  442361:	call   0x44236e
  442366:	leave  
  442367:	ret    
  442368:	movlpd xmm0,QWORD PTR [esp+0x4]
  44236e:	pextrw eax,xmm0,0x3
  442373:	and    ax,0x7fff
  442377:	sub    ax,0x3030
  44237b:	cmp    ax,0x10c5
  44237f:	ja     0x4424c7
  442385:	movlpd xmm1,QWORD PTR ds:0x448ac0
  44238d:	mulsd  xmm1,xmm0
  442391:	movlpd xmm2,QWORD PTR ds:0x448ac8
  442399:	cvtsd2si edx,xmm1
  44239d:	addsd  xmm1,xmm2
  4423a1:	movlpd xmm3,QWORD PTR ds:0x448ae0
  4423a9:	subsd  xmm1,xmm2
  4423ad:	movapd xmm2,XMMWORD PTR ds:0x448ad0
  4423b5:	mulsd  xmm3,xmm1
  4423b9:	unpcklpd xmm1,xmm1
  4423bd:	add    edx,0x1c7600
  4423c3:	movsd  xmm4,xmm0
  4423c7:	and    edx,0x3f
  4423ca:	movapd xmm5,XMMWORD PTR ds:0x448ab0
  4423d2:	lea    eax,ds:0x448280
  4423d8:	shl    edx,0x5
  4423db:	add    eax,edx
  4423dd:	mulpd  xmm2,xmm1
  4423e1:	subsd  xmm0,xmm3
  4423e5:	mulsd  xmm1,QWORD PTR ds:0x448ae8
  4423ed:	subsd  xmm4,xmm3
  4423f1:	movlpd xmm7,QWORD PTR [eax+0x8]
  4423f6:	unpcklpd xmm0,xmm0
  4423fa:	movsd  xmm3,xmm4
  4423fe:	subsd  xmm4,xmm2
  442402:	mulpd  xmm5,xmm0
  442406:	subpd  xmm0,xmm2
  44240a:	movapd xmm6,XMMWORD PTR ds:0x448a90
  442412:	mulsd  xmm7,xmm4
  442416:	subsd  xmm3,xmm4
  44241a:	mulpd  xmm5,xmm0
  44241e:	mulpd  xmm0,xmm0
  442422:	subsd  xmm3,xmm2
  442426:	movapd xmm2,XMMWORD PTR [eax]
  44242a:	subsd  xmm1,xmm3
  44242e:	movlpd xmm3,QWORD PTR [eax+0x18]
  442433:	addsd  xmm2,xmm3
  442437:	subsd  xmm7,xmm2
  44243b:	mulsd  xmm2,xmm4
  44243f:	mulpd  xmm6,xmm0
  442443:	mulsd  xmm3,xmm4
  442447:	mulpd  xmm2,xmm0
  44244b:	mulpd  xmm0,xmm0
  44244f:	addpd  xmm5,XMMWORD PTR ds:0x448aa0
  442457:	mulsd  xmm4,QWORD PTR [eax]
  44245b:	addpd  xmm6,XMMWORD PTR ds:0x448a80
  442463:	mulpd  xmm5,xmm0
  442467:	movsd  xmm0,xmm3
  44246b:	addsd  xmm3,QWORD PTR [eax+0x8]
  442470:	mulsd  xmm1,xmm7
  442474:	movsd  xmm7,xmm4
  442478:	addsd  xmm4,xmm3
  44247c:	addpd  xmm6,xmm5
  442480:	movlpd xmm5,QWORD PTR [eax+0x8]
  442485:	subsd  xmm5,xmm3
  442489:	subsd  xmm3,xmm4
  44248d:	addsd  xmm1,QWORD PTR [eax+0x10]
  442492:	mulpd  xmm6,xmm2
  442496:	addsd  xmm5,xmm0
  44249a:	addsd  xmm3,xmm7
  44249e:	addsd  xmm1,xmm5
  4424a2:	addsd  xmm1,xmm3
  4424a6:	addsd  xmm1,xmm6
  4424aa:	unpckhpd xmm6,xmm6
  4424ae:	addsd  xmm1,xmm6
  4424b2:	sub    esp,0x10
  4424b5:	addsd  xmm4,xmm1
  4424b9:	movlpd QWORD PTR [esp+0x4],xmm4
  4424bf:	fld    QWORD PTR [esp+0x4]
  4424c3:	add    esp,0x10
  4424c6:	ret    
  4424c7:	jg     0x442512
  4424c9:	sub    esp,0x10
  4424cc:	shr    ax,0x4
  4424d0:	cmp    ax,0xcfd
  4424d4:	jne    0x4424ec
  4424d6:	mulsd  xmm0,QWORD PTR ds:0x448b00
  4424de:	movlpd QWORD PTR [esp+0x4],xmm0
  4424e4:	fld    QWORD PTR [esp+0x4]
  4424e8:	add    esp,0x10
  4424eb:	ret    
  4424ec:	movlpd xmm3,QWORD PTR ds:0x448af0
  4424f4:	mulsd  xmm3,xmm0
  4424f8:	subsd  xmm3,xmm0
  4424fc:	mulsd  xmm3,QWORD PTR ds:0x448af8
  442504:	movlpd QWORD PTR [esp+0x4],xmm0
  44250a:	fld    QWORD PTR [esp+0x4]
  44250e:	add    esp,0x10
  442511:	ret    
  442512:	jmp    0x4420ef
  442517:	nop
  442518:	int3   
  442519:	int3   
  44251a:	int3   
  44251b:	int3   
  44251c:	int3   
  44251d:	int3   
  44251e:	int3   
  44251f:	int3   
  442520:	lea    ecx,[ebp-0x10]
  442523:	jmp    0x403e50
  442528:	mov    edx,DWORD PTR [esp+0x8]
  44252c:	lea    eax,[edx+0xc]
  44252f:	mov    ecx,DWORD PTR [edx-0x14]
  442532:	xor    ecx,eax
  442534:	call   0x403edd
  442539:	mov    eax,0x448fd0
  44253e:	jmp    0x40591a
  442543:	mov    edx,DWORD PTR [esp+0x8]
  442547:	lea    eax,[edx+0xc]
  44254a:	mov    ecx,DWORD PTR [edx-0x14]
  44254d:	xor    ecx,eax
  44254f:	call   0x403edd
  442554:	mov    eax,0x4491c8
  442559:	jmp    0x40591a
  44255e:	int3   
  44255f:	int3   
  442560:	mov    edx,DWORD PTR [esp+0x8]
  442564:	lea    eax,[edx+0xc]
  442567:	mov    ecx,DWORD PTR [edx-0x2c]
  44256a:	xor    ecx,eax
  44256c:	call   0x403edd
  442571:	mov    eax,0x449618
  442576:	jmp    0x40591a
  44257b:	int3   
  44257c:	int3   
  44257d:	int3   
  44257e:	int3   
  44257f:	int3   
  442580:	mov    edx,DWORD PTR [esp+0x8]
  442584:	lea    eax,[edx+0xc]
  442587:	mov    ecx,DWORD PTR [edx-0x24]
  44258a:	xor    ecx,eax
  44258c:	call   0x403edd
  442591:	mov    eax,0x4496a4
  442596:	jmp    0x40591a
  44259b:	push   0x4426c5
  4425a0:	call   0x404a23
  4425a5:	pop    ecx
  4425a6:	ret    
  4425a7:	push   0x4426d0
  4425ac:	call   0x404a23
  4425b1:	pop    ecx
  4425b2:	ret    
  4425b3:	push   0x4426db
  4425b8:	call   0x404a23
  4425bd:	pop    ecx
  4425be:	ret    
  4425bf:	push   0x4426f0
  4425c4:	call   0x404a23
  4425c9:	pop    ecx
  4425ca:	ret    
  4425cb:	push   0x4426e6
  4425d0:	call   0x404a23
  4425d5:	pop    ecx
  4425d6:	ret    
  4425d7:	mov    ecx,0x44da48
  4425dc:	call   0x403dce
  4425e1:	push   0x4426fa
  4425e6:	call   0x404a23
  4425eb:	pop    ecx
  4425ec:	ret    
  4425ed:	mov    ecx,0x44da94
  4425f2:	call   0x403dce
  4425f7:	push   0x442704
  4425fc:	call   0x404a23
  442601:	pop    ecx
  442602:	ret    
  442603:	push   0x44270e
  442608:	call   0x404a23
  44260d:	pop    ecx
  44260e:	ret    
  44260f:	int3   
  442610:	cmp    DWORD PTR ds:0x450734,0x8
  442617:	jb     0x442627
  442619:	mov    eax,ds:0x450720
  44261e:	push   eax
  44261f:	call   0x403ed2
  442624:	add    esp,0x4
  442627:	xor    ecx,ecx
  442629:	mov    DWORD PTR ds:0x450734,0x7
  442633:	mov    DWORD PTR ds:0x450730,0x0
  44263d:	mov    WORD PTR ds:0x450720,cx
  442644:	ret    
  442645:	int3   
  442646:	int3   
  442647:	int3   
  442648:	int3   
  442649:	int3   
  44264a:	int3   
  44264b:	int3   
  44264c:	int3   
  44264d:	int3   
  44264e:	int3   
  44264f:	int3   
  442650:	cmp    DWORD PTR ds:0x450750,0x8
  442657:	jb     0x442667
  442659:	mov    eax,ds:0x45073c
  44265e:	push   eax
  44265f:	call   0x403ed2
  442664:	add    esp,0x4
  442667:	xor    ecx,ecx
  442669:	mov    DWORD PTR ds:0x450750,0x7
  442673:	mov    DWORD PTR ds:0x45074c,0x0
  44267d:	mov    WORD PTR ds:0x45073c,cx
  442684:	ret    
  442685:	int3   
  442686:	int3   
  442687:	int3   
  442688:	int3   
  442689:	int3   
  44268a:	int3   
  44268b:	int3   
  44268c:	int3   
  44268d:	int3   
  44268e:	int3   
  44268f:	int3   
  442690:	cmp    DWORD PTR ds:0x44e8e8,0x8
  442697:	jb     0x4426a7
  442699:	mov    eax,ds:0x44e8d4
  44269e:	push   eax
  44269f:	call   0x403ed2
  4426a4:	add    esp,0x4
  4426a7:	xor    ecx,ecx
  4426a9:	mov    DWORD PTR ds:0x44e8e8,0x7
  4426b3:	mov    DWORD PTR ds:0x44e8e4,0x0
  4426bd:	mov    WORD PTR ds:0x44e8d4,cx
  4426c4:	ret    
  4426c5:	mov    DWORD PTR ds:0x44b0a8,0x4433a0
  4426cf:	ret    
  4426d0:	mov    DWORD PTR ds:0x44b0b0,0x4433a0
  4426da:	ret    
  4426db:	mov    DWORD PTR ds:0x44b0b8,0x4433a0
  4426e5:	ret    
  4426e6:	mov    ecx,0x44d9d8
  4426eb:	jmp    0x4010a0
  4426f0:	mov    ecx,0x44d9e0
  4426f5:	jmp    0x403ca3
  4426fa:	mov    ecx,0x44da48
  4426ff:	jmp    0x403dff
  442704:	mov    ecx,0x44da94
  442709:	jmp    0x403dff
  44270e:	mov    ecx,0x44da95
  442713:	jmp    0x403e67
  442718:	mov    DWORD PTR ds:0x44da9c,0x4433e0
  442722:	mov    ecx,0x44da9c
  442727:	jmp    0x403fd0
